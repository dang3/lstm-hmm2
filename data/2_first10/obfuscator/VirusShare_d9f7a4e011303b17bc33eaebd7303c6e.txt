mov
pop
in
shll
mov
jno
addb
add
negl
dec
out
adc
loopne
es
adc
cli
xchg
fnsave
push
shlb
repnz
aaa
push
mov
fcomps
adc
scas
xchg
jp
xor
data16
push
fcmovu
sahf
jnp
jns
jae
add
xor
in
push
and
jmp
push
lahf
in
aas
adc
push
cmp
add
jge
ret
js
aad
das
adc
inc
incl
lea
js
pushf
mov
lahf
call
add
mov
incb
dec
add
add
add
inc
add
dec
outsb
push
mov
pusha
sar
push
popa
mov
push
mov
movsl
add
dec
or
dec
out
stc
in
mov
int
sbb
icebp
push
adc
cmp
push
scas
hlt
mov
and
dec
jmp
adc
mov
and
xor
fstpt
in
and
pop
hlt
mov
xor
or
rclb
adc
push
call
fildll
push
call
incl
jae
adc
push
lea
ja
jmp
and
mov
lock
cmpsl
cmpsl
std
icebp
clc
out
movsb
lods
lods
inc
sahf
loopne
cmp
movsl
jp
ret
icebp
outsb
or
cli
mov
add
fwait
push
xchg
movl
mov
rorb
lods
mov
data16
jmp
push
sub
push
mov
mov
inc
push
or
movsl
shlb
pusha
cmp
lcall
pop
cmpsb
fldz
icebp
test
pusha
mov
lea
je
test
sub
push
cmp
pusha
lea
ja
jmp
lods
rclb
xlat
pop
dec
loopne
jmp
xor
jmp
outsl
mov
lock
out
mov
push
and
push
sub
ret
xchg
jp
cmp
adc
push
call
inc
sti
js
outsl
push
call
push
je
dec
adc
add
lret
rcll
push
or
mov
and
and
push
lds
mov
adc
jo
xlat
jle
mov
les
sub
pop
cld
fnsave
xchg
out
out
push
push
push
rcl
cli
xchg
lcall
add
jg
jle
insb
add
nop
loope
movsl
sbb
xor
jmp
sub
mov
mov
bound
sbb
cmp
in
iret
iret
adc
sbb
cmpsb
lret
adc
les
fstpt
lea
mov
jge
or
push
call
xor
pusha
lea
jmp
push
call
iret
sbbl
sbb
cld
sti
clc
out
movsl
in
repnz
sti
push
xor
xchg
jae
inc
dec
mov
add
inc
sahf
mov
push
lock
xchg
push
adc
cltd
ret
xchg
or
mulb
pop
test
xchg
ss
bound
add
ja
and
mov
popa
inc
xchg
add
and
and
ds
in
adc
aad
cmp
mov
mov
or
jmp
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
push
call
insb
add
inc
and
cmc
call
add
push
movzwl
movzbw
bts
mov
movl
add
movw
pusha
pushf
clc
mov
bt
test
push
pushf
mov
mov
lea
je
pusha
pushl
stc
add
test
pushf
cmp
cmp
movb
push
call
out
sbb
mov
fwait
in
out
xchg
jecxz
loop
sahf
mov
cmp
fs
and
xlat
mov
lahf
jmp
jae
mulb
roll
frstor
mov
mov
push
sub
psrlw
or
inc
cmp
add
popf
jno
insl
mov
mov
push
xchg
nop
inc
test
mov
repnz
push
cltd
push
mov
pop
push
dec
sub
pop
mov
xor
xor
cmp
xor
das
or
daa
or
fisubl
addb
ret
jle
nop
inc
adcb
cmp
or
pop
xor
dec
sub
add
sub
subb
sbb
push
imul
push
ss
push
mov
gs
dec
xlat
push
clc
dec
and
jb
mov
iret
sub
movsb
test
mov
fistps
add
fldl2e
xchg
lods
xchg
aas
push
sub
out
aam
movsl
add
or
movsl
bsr
xlat
pop
mov
xchg
inc
lea
mov
int
pushf
xor
sbb
out
leave
or
and
jecxz
ja
stc
sub
nop
fdivrl
outsb
xchg
push
and
int3
push
rorb
clc
sbb
int3
cmp
xor
jecxz
lret
cmp
mov
sbb
mov
and
jmp
in
and
rdtsc
fisttps
adc
fincstp
mov
int
xor
and
outsl
insb
mov
ss
testb
dec
adc
mov
fsubl
or
roll
shll
push
mov
in
fiadds
xlat
pop
push
jmp
stc
dec
aas
clc
inc
dec
inc
hlt
pop
pop
sti
sub
cmc
imul
add
lahf
xor
cmp
aad
fisttpl
jo
jg
outsb
dec
mov
repz
xchg
sub
mov
sti
mov
mov
mov
enter
xchg
push
negb
inc
lock
jb
pop
cmp
push
mov
sbb
adc
jp
mov
jo
push
call
and
mov
adc
or
adc
and
push
je
std
cmp
out
mov
inc
aad
cmpsl
ja
mull
cwtl
jns
dec
jle
pop
inc
mov
jns
aad
fisttpll
cltd
imul
xor
dec
push
fwait
mov
xchg
clc
mov
fwait
xlat
sub
fistpl
fstps
movsb
addr16
add
adc
sbb
and
lea
and
xor
scas
pop
imul
mov
push
pop
jecxz
icebp
decb
pop
lret
dec
lcall
cltd
inc
dec
xchg
push
jl
addr16
ja
pop
outsl
or
adc
cmp
xchg
repnz
mov
ljmp
mov
test
movsb
int3
stc
mov
jno
mov
push
mov
adc
sub
mov
jnp
inc
sub
test
loop
std
inc
adc
dec
popf
scas
test
or
lret
mov
push
pushf
loop
pusha
and
inc
shlb
loop
lahf
test
sub
adc
jp
subb
scas
das
stos
imulb
pop
scas
je
jo
xchg
imul
dec
movb
jl
push
inc
lds
sub
sbb
dec
xchg
mov
test
test
mov
sub
lcall
sti
jno
popf
or
add
fsubs
mov
into
mov
sub
aas
mov
sub
add
pop
or
add
add
sahf
rcll
or
push
rcll
fnsave
jnp
call
inc
incl
mov
pop
mov
lods
stc
stc
out
ljmp
cli
imul
arpl
add
xchg
imul
fwait
sub
mov
xchg
out
int
adc
fisubs
imul
mov
jb
dec
clc
cltd
sbb
mov
inc
mov
mov
les
mov
fdivr
cmp
sbb
adc
sahf
jne
outsb
xor
fstpt
xlat
outsb
mov
repz
rcll
xlat
pop
jae
cmp
testb
fdivrp
dec
pop
jns
das
je
insl
cli
inc
push
cld
ds
cmpsl
push
mov
pusha
xchg
xchg
cmpsl
pop
jecxz
jbe
add
push
sbb
hlt
fisttps
push
adc
mov
or
stos
mov
sub
stos
pop
pushw
icebp
add
mov
push
dec
xorl
pop
sub
aaa
imul
fndisi(8087
decl
fs
outsb
cmp
out
sub
xchg
clc
jno
call
push
out
stos
push
call
lock
stc
movsl
push
call
xlat
lcall
lods
rolb
mov
pop
adc
inc
aam
ror
push
aam
pusha
mov
sar
pushf
aaa
sbb
mov
aam
mov
inc
shr
and
mov
shr
clc
jmp
push
call
insl
icebp
call
push
call
adc
pop
fmuls
xlat
pop
test
scas
pop
mov
fs
mov
imul
pop
test
nop
jmp
mov
lea
mov
jo
orl
loop
sub
mov
dec
and
cmpsb
shll
xlat
mov
push
sub
in
cmpsl
mov
sub
lods
inc
and
jg
add
mov
push
push
push
cltd
jns
sti
test
xor
nop
dec
mov
lret
call
xor
jle
dec
add
inc
add
add
repnz
push
aad
push
jb
inc
or
mov
sub
mov
pop
sub
mov
mov
iret
mov
popf
xor
mov
pop
scas
push
jnp
xchg
xchg
pop
in
arpl
in
xor
and
in
orl
xor
insl
decl
hlt
cmp
sahf
mov
mov
and
divl
les
fcompp
push
mov
push
lahf
add
mov
pop
adc
xchg
and
out
out
fwait
jmp
bswap
out
test
daa
fstpt
push
fwait
sarb
sahf
jge
cmpsl
add
xchg
push
pop
push
xor
mov
out
fldenv
arpl
repz
push
ret
dec
push
xor
shll
pop
fstpl
bound
rcr
cwtl
inc
push
add
sbb
fistl
insb
daa
jmp
pop
sbb
test
fldenv
lret
xlat
mov
add
jbe
adc
cmp
mov
idivb
call
xlat
sbb
dec
jmp
adc
std
icebp
lods
clc
lods
lods
scas
scas
mov
add
frstor
push
pop
add
add
aam
lret
frstor
mov
mov
out
and
ret
mov
mov
sahf
fbstp
ljmp
seto
icebp
mov
lahf
and
adc
leave
int
pop
je
xor
imul
mov
sub
cli
lods
shrb
test
fmull
out
je
imul
dec
pop
add
push
call
lcall
imul
movl
fs
jne
pusha
mov
mov
call
cmc
push
jmp
push
call
jbe
sbb
mov
movsbw
call
adc
xchg
mov
pop
xor
add
mov
hlt
inc
cmc
pop
stc
test
test
jge
xchg
test
and
inc
sahf
lcall
lods
es
add
mov
bound
les
cmc
adc
mov
push
inc
and
call
adc
cmpsl
nop
push
dec
rorl
out
and
frstor
jae
sub
mov
add
mov
nop
hlt
mov
add
inc
and
sbb
test
add
inc
bsr
shld
mov
bt
add
jmp
ljmp
adc
add
mov
les
enter
adc
mov
pop
mov
xchg
and
and
dec
and
ret
movsl
push
mov
addr16
in
std
lret
jg
push
inc
mov
icebp
adcl
or
pop
ljmp
clc
iret
mov
lea
xchg
shl
rol
dec
fdivrs
add
mov
mov
test
and
jbe
xchg
inc
bt
mov
xchg
add
bt
stc
shrd
shr
mov
rol
btr
add
lea
movl
setp
sub
cmc
shr
mov
bt
test
pushf
call
loopne
adc
loopne
jge
out
loopne
lcall
ret
jmp
rcrl
inc
arpl
ja
sbb
aam
std
push
jns
inc
push
mov
repnz
adc
sub
cli
xchg
lds
dec
and
jge
cli
push
push
into
dec
lcall
stos
jg
in
mov
mov
int
sub
push
or
stc
ljmp
cmp
into
and
ret
icebp
inc
dec
cmp
aam
std
mov
sbb
loope
mov
cmp
or
or
lods
leave
mov
add
add
adc
sub
adc
pop
mov
pop
ret
xchg
cwtl
lea
dec
dec
lcall
les
inc
sbb
inc
or
push
sub
aas
sub
push
outsb
dec
dec
sbb
xor
mov
push
ret
insb
insl
push
xchg
add
adc
mov
or
push
or
push
inc
cmp
ds
mov
movsb
faddp
or
lcall
es
push
cmp
or
pop
xchg
shrl
pop
aas
pushf
into
out
test
lahf
jle
outsb
push
add
cmpb
push
mov
push
pushf
pushl
lea
jb
pusha
jmp
cld
xchg
xchg
scas
xlat
pop
nop
gs
push
adc
adc
pusha
pop
insb
iret
xchg
mov
int3
cmpsl
pop
mov
sbb
outsl
dec
jge
movsl
mov
xor
jg
inc
jo
pop
mov
inc
push
jmp
gs
mov
stos
std
test
sbb
fisubl
nop
or
pop
test
pop
pop
pop
gs
addr16
lcall
loopne
jb
outsl
push
push
ffree
lds
mov
iret
fidivrs
xchg
loop
in
add
mov
int
add
sti
lds
dec
inc
lea
jmp
xor
call
daa
iret
add
or
sbb
leave
mov
add
mov
test
xlat
jl
jg
stos
lahf
jno
aas
and
dec
push
enter
pop
arpl
inc
addr16
push
xor
gs
roll
xor
push
inc
icebp
jb
arpl
dec
pop
inc
sbb
addr16
inc
arpl
sub
push
sbb
xchg
add
inc
push
ficompl
repnz
and
les
imul
test
dec
dec
inc
gs
inc
mov
sub
or
or
adc
push
fbld
mov
xor
add
add
idivl
pop
sbb
jae
xchg
mov
cltd
xchg
imul
daa
or
rclb
sub
imul
fmull
lret
dec
pop
inc
adc
popf
int
dec
xchg
leave
fidivrl
jecxz
adc
repz
icebp
int
cs
aad
mov
xor
xlat
arpl
aad
lret
fnstsw
push
mov
cmp
xchg
dec
in
sub
jmp
lods
das
cmp
js
mov
pop
dec
popa
rorl
dec
arpl
pop
dec
sub
rcl
repnz
scas
add
sbb
push
icebp
dec
cs
add
fldenv
add
icebp
xchg
shll
dec
mov
xor
mov
and
sbb
cmp
cmc
mov
clc
xor
and
cltd
jmp
cmp
push
fwait
add
negb
repz
or
mov
leave
scas
divl
adc
enter
lret
inc
iret
xor
sarl
push
xchg
sbb
cmp
dec
daa
xlat
cmpsl
mov
and
arpl
xor
push
rcl
dec
sar
pop
fcompl
mov
ret
sbb
mov
test
fwait
push
and
inc
test
enter
ret
mov
dec
pop
in
dec
mov
and
push
fnstsw
aam
cmp
jp
icebp
push
les
leave
es
testl
dec
pop
mov
scas
mov
cmp
mov
fldl
xlat
pop
int
mov
sarl
sub
adc
mov
es
fsubrp
cltd
dec
outsl
sub
jp
loope
pop
cmp
cmp
fisttps
or
in
fwait
sub
cmp
movsb
cs
shlb
or
mov
push
xchg
cld
xlat
pop
idiv
shll
and
mov
mov
mov
sbb
mov
sti
testl
jmp
mov
lock
mov
xor
push
std
sbb
push
jae
shr
cwtl
mov
dec
cmp
push
adc
outsl
dec
mov
mov
cs
in
xor
or
or
mov
xor
xor
mov
mov
imul
and
stos
out
int3
dec
jnp
sahf
loop
fldenv
xlat
pop
jg
jle
cmp
enter
or
adc
imul
stos
fwait
lret
test
call
in
rol
cmp
and
aas
rcrl
fidivl
mov
pop
fisubrl
sbb
cs
lds
and
jnp
in
test
jno
jmp
inc
out
aad
imul
cli
mov
sar
ljmp
ss
test
dec
add
xor
repnz
sub
pop
rorl
loop
pop
leave
mov
xor
jge
pop
mov
sarl
cmp
scas
repz
shll
adc
or
xor
dec
pop
jo
cmp
fldt
mov
in
sub
sti
movsb
or
out
into
or
popf
pop
iret
mov
in
data16
and
dec
lret
popa
and
ljmp
sub
leave
repz
out
mov
sub
mov
mov
sbb
addr16
ss
or
push
jo
dec
ret
mov
iret
loope
shlb
repz
out
shrl
fiadds
out
subb
jo
lds
sbb
jecxz
divl
sbb
xchg
iret
fnstcw
roll
mov
and
pop
leave
lret
lret
hlt
or
xlat
push
jl
fst
and
sbb
insb
pop
push
stos
dec
sbb
lds
out
out
cmpsb
push
sub
icebp
xor
mov
pop
adc
rcl
iret
and
xor
stos
add
pop
lods
pop
fnstcw
mov
mov
push
repz
sub
rcr
adc
mov
int3
and
sbb
mov
cs
rol
ror
add
ljmp
dec
sub
or
rol
data16
sub
ljmp
adc
push
cmp
call
ret
mov
ds
xchg
std
stos
rcrl
jno
sbb
imul
push
sub
out
and
fwait
cmp
jno
insl
leave
mov
xchg
imul
push
fadd
mov
push
cmp
inc
fwait
pop
enter
loop
push
ret
mov
or
int
rorl
mov
dec
or
loop
push
sbb
mov
cmp
into
lcall
inc
iret
mov
cmp
ljmp
and
flds
xlat
mul
rorl
dec
sbb
sub
mov
mov
cmp
cmp
fisttpl
dec
in
mov
push
lods
fistpll
mov
push
mov
add
lret
fldenv
sub
push
leave
mov
mov
loop
xlat
xor
cmp
cmp
test
ffreep
shrb
and
jg
and
outsb
cmp
mov
ret
push
cmp
data16
mov
xor
cli
jmp
mov
leave
stos
mov
mov
repz
loop
out
adc
sarl
jecxz
cmp
xchg
jg
stos
sarl
pop
shrl
ss
fs
adc
dec
imul
stos
jmp
mov
jb
scas
scas
sub
es
and
int
sarl
scas
leave
out
mov
repz
dec
adc
dec
and
mov
aaa
pushf
test
fs
icebp
out
ret
and
out
loope
ror
aad
mov
insb
sub
movsb
add
adcb
pop
or
cmp
stos
movsb
les
inc
lods
add
cmp
rorb
ficompl
push
jecxz
cmp
ffreep
fcmovnb
inc
pop
xor
shrb
jle
push
leave
int3
xor
fisttpl
fistpll
int3
repnz
mov
cli
or
mov
mov
int
pop
fidivrl
sti
mov
mov
cmp
dec
dec
rcrl
int
pop
stos
dec
lcall
ljmp
cmp
add
das
jmp
pushf
int
jg
cli
xlat
adc
xor
dec
cli
pop
loop
xor
addw
push
imul
push
push
xor
adc
rcr
lret
mov
push
imul
idivl
rcrb
sahf
dec
jp
sub
lods
sub
leave
imul
jmp
inc
cli
push
pop
cmp
fucom
int
dec
cltd
inc
inc
inc
test
xor
subl
lock
sub
add
xor
mov
adc
jl
fwait
inc
or
mov
ljmp
jp
and
movb
dec
xor
cld
jb
fnstsw
ret
xchg
sti
or
pop
push
movl
repz
out
fnstcw
fildl
dec
lds
lods
inc
ss
and
pop
lret
dec
shlb
adc
xor
enter
dec
and
inc
stos
lret
mov
sarl
push
cmp
movb
dec
stos
mov
leave
jnp
cmp
xchg
std
pop
cs
outsl
dec
mov
jecxz
out
push
insl
ljmp
xor
mov
dec
mov
cs
dec
or
int3
das
leave
stos
cli
es
in
inc
das
mov
lcall
push
mov
lods
fwait
lret
bound
clc
cmp
leave
rolb
mov
add
fldcw
int
sub
in
cmpb
shll
out
inc
lds
ret
dec
push
cs
pop
sub
mov
arpl
repnz
int
cmp
xchg
cmp
and
mov
or
inc
fbstp
jmp
xor
fstp
add
addr16
ret
ficoml
jecxz
subb
ds
hlt
xor
or
pop
sub
int
cmp
mov
and
outsb
shrl
cs
fdivl
testb
mov
jp
jg
jecxz
out
jae
add
push
fidivrl
jmp
leave
add
xor
add
mov
enter
or
xchg
dec
xor
xchg
stos
arpl
fwait
rcr
int
les
xor
sub
scas
or
cmp
ljmp
sub
cmp
aaa
shrl
sarl
xor
leave
je
sub
mov
cmc
xor
dec
lock
xchg
mov
mov
cltd
xor
or
cmp
bound
jnp
inc
sbb
jp
mov
xor
and
out
mov
xor
fistps
pop
ss
dec
push
out
xchg
sbb
cmp
imul
cmp
ss
dec
pop
fcmovnbe
ror
daa
fs
lret
movsl
push
cmp
fdiv
xor
dec
int
int3
fmulp
xchg
lds
test
imul
cli
filds
mov
xchg
lds
mov
xor
mov
int
call
enter
mov
push
jmp
xor
push
imull
aad
xor
fists
sub
sahf
scas
jmp
mov
int
jbe
mov
int
cs
shrl
je
or
xor
idivb
es
xchg
and
cs
cmpsb
iret
jg
inc
sub
leave
mov
mov
adc
pop
jle
ljmp
push
testl
mov
adc
inc
lret
and
ss
int
cmp
es
subl
clc
mov
and
mov
dec
xor
sbb
push
enter
iret
sub
cs
mov
call
pop
clc
ss
or
or
fnsave
dec
jg
adc
mov
int3
xor
sbb
jmp
xor
sbb
mov
fildll
jecxz
jmp
jge
sub
adc
or
jl
fmul
push
icebp
mov
jg
repz
push
fldcw
inc
xor
sbb
test
aad
or
std
shll
mov
ror
fildl
ret
push
ss
pop
es
add
xchg
mov
dec
out
pop
lret
pop
and
imul
int3
cmpsl
mov
jecxz
or
mov
stc
cs
xlat
or
mov
mov
ror
out
divl
sub
mov
shlb
cli
fdivp
adc
xor
les
dec
inc
adc
dec
popa
xlat
sub
xor
int
cmp
dec
adc
leave
stos
cltd
push
mov
mov
mov
iret
jb
xchg
pushf
cmp
push
fld
ret
dec
sub
lds
cmp
jo
pop
leave
adc
mov
loope
fnstsw
lret
xchg
sub
xor
std
mov
dec
stos
fwait
dec
ljmp
repz
sbb
enter
and
andl
insl
out
jmp
stos
icebp
mov
mov
mov
int
fildl
pop
stos
sbbl
mov
dec
lret
aad
stos
push
xchg
int3
iret
outsl
lds
sub
cs
adc
enter
mov
mov
sub
xchg
filds
in
jecxz
mov
sarl
ljmp
lret
jne
ror
and
and
cmc
mov
pop
shl
sbb
or
xorl
adc
popf
es
fldl2e
or
int
fistpl
xor
stos
cli
push
imul
out
es
int
shr
and
subb
sub
xor
adc
adc
int
jbe
mov
aad
jl
jg,pn
cld
cmp
sbb
sub
mov
adc
pop
aas
push
sahf
iret
pop
leave
and
push
or
fisttpl
flds
leave
into
ret
push
jmp
rcrl
test
int
xor
mov
push
ret
add
mov
dec
jnp
fldl
js
test
ds
sbb
int3
lock
xor
xlat
push
sarl
lret
mov
fstl
test
les
cmp
ror
aas
cmp
and
ret
push
enter
leave
int3
jecxz
mov
stos
xchg
insb
push
push
mov
sbb
jne
xadd
mov
xor
cmpsb
dec
outsl
inc
or
pushl
ljmp
push
push
stos
inc
mov
sub
inc
das
pop
cmp
push
jle
xlat
push
fnsave
or
xchg
sbb
xor
fwait
lds
ret
sub
lret
xor
lret
nop
cmp
int
inc
btc
mov
jae
repz
rorl
xor
in
adc
cmp
push
cmp
pusha
loope
cmp
loope
rcl
cwtl
fprem
dec
mov
imul
add
sar
xchg
jg
cmp
repz
lods
jo
lret
jne
out
ret
test
adc
and
adc
shll
in
cli
pop
pop
push
jb
cmp
test
out
jl
lock
dec
leave
dec
jmp
lods
inc
or
xor
or
add
inc
data16
scas
or
or
out
sub
sub
ljmp
push
out
data16
rcll
jbe
cmp
sub
mov
ret
jns
sti
sub
xor
shl
repnz
sar
lds
icebp
lret
jae
cmp
xchg
rcrl
or
scas
cli
out
ret
mov
repnz
out
int3
jle
leave
add
test
xlat
xor
cs
or
filds
dec
jp
or
sub
les
ds
incb
mov
push
xchg
push
mov
aas
dec
inc
xor
fdivr
lds
dec
scas
pop
mov
iret
dec
mov
leave
in
jnp
add
ss
sub
push
sub
jg
mov
pop
fwait
stos
xchg
fwait
adc
icebp
test
lds
cs
mov
fdivp
pop
icebp
cmp
and
or
push
fsubl
repnz
dec
dec
stc
sti
inc
cs
push
shlb
sub
add
roll
cmc
int
dec
dec
sbb
jle
inc
push
outsl
rolb
add
sti
cmp
cs
push
dec
scas
fnstenv
addr16
push
add
and
rorb
and
mov
mov
xchg
cmp
sti
xchg
inc
xor
mov
sbb
cs
dec
frstor
cmp
rorb
iret
dec
push
std
stos
mov
into
scas
jmp
push
test
loop
fsubp
dec
stos
bound
inc
fisttpll
pop
inc
imul
mov
ljmp
push
fwait
sub
std
jb
outsb
mov
aaa
push
loope
icebp
fwait
in
dec
jnp
imul
je
cmp
ficoms
jnp
cs
ljmp
mov
add
sti
test
and
in
jecxz
mov
cltd
aam
mov
or
enter
scas
inc
mov
fldt
push
loope
fdivrs
int
fisubrl
pop
jnp
or
arpl
push
prefetch
dec
ret
mov
xchg
pop
fisubrs
movb
sub
aaa
or
shll
sbb
jl
out
sub
lcall
cld
push
sub
dec
aaa
repnz
test
std
int3
xchg
out
mov
xchg
test
mov
ja
or
xchg
xlat
mov
icebp
and
rol
sub
add
stos
add
xchg
cmc
out
push
icebp
mov
cltd
mov
stos
pop
repz
add
mov
shl
dec
cs
bound
and
mov
xor
int
xchg
outsl
jg
cmp
jle
and
not
push
sbb
shlb
mov
sbb
adc
std
or
ret
dec
mov
xchg
mov
sbbl
jb
movsl
ljmp
push
shrl
addb
mov
mov
adc
mov
jge
push
pop
sub
cmp
lock
cld
sub
sarb
ficoml
in
jg
xchg
push
inc
or
std
aad
fcoml
sbb
push
imul
jae
xchg
in
daa
out
std
push
pop
mov
add
sbb
loop
xchg
xor
cli
mov
jg
mov
sarb
adc
and
xor
and
or
inc
inc
xchg
add
sbb
dec
jg
std
loope
fistps
cmpb
sti
popf
stos
in
add
inc
jg
lods
push
mov
aad
mov
adc
and
mov
incb
notl
sbb
xlat
incl
test
dec
mov
imul
xchg
adc
in
dec
pop
lods
mov
xorl
test
je
push
dec
jecxz
jnp
pushf
push
ret
mov
xor
jge
pop
leave
data16
add
mov
shll
jmp
popf
stc
jg
pop
sbb
lea
les
adc
leave
cld
loope
out
out
jg
popf
inc
in
std
inc
ss
imul
popf
push
xlat
push
jmp
sub
dec
push
pop
sar
clc
leave
dec
xchg
mov
jg
push
mov
loop
push
js
inc
mov
jecxz
mov
fstpl
jb
loop
mov
leave
jecxz
inc
jnp
inc
fldl
dec
cwtl
lahf
in
jecxz
cmp
sub
jno
cld
shlb
dec
loop
mov
daa
mov
sti
dec
mov
insl
inc
dec
outsb
fldl
scas
inc
dec
pop
in
pop
lods
das
fnsave
dec
out
fwait
jmp
xor
inc
cmp
fmull
jne
cmc
ret
pop
sti
cmp
sub
lret
lret
lret
mov
out
negl
mov
jmp
imul
fbstp
mov
jno
js
adcl
shr
icebp
xchg
jle
out
fst
xor
mov
mov
sub
icebp
push
cwtl
jecxz
cs
imulb
in
ret
rcl
or
out
cmpl
adc
fisttpll
cld
arpl
ret
sub
mov
xor
pop
sub
push
jecxz
ret
pop
dec
in
lret
mov
xor
popf
xor
jecxz
mov
stos
lea
in
fisttpll
xchg
inc
dec
push
push
mov
repz
mov
ret
int
rcll
enter
std
mov
dec
iret
in
inc
fisttpl
leave
fcomi
int
xchg
xor
dec
mov
fadd
fisttpll
dec
cmp
imul
cld
loopne
fstl
ljmp
mov
sarl
int
pop
int
cmp
out
in
enter
ljmp
mov
xor
mov
mov
roll
adc
cmp
int
pop
cmpsb
insl
pop
repz
inc
mov
jecxz
fidivl
imul
cmp
jmp
sbb
jmp
pushf
mov
ret
push
sti
fucom
mov
mov
loopne
inc
xor
sbbl
pop
je
sbb
jmp
jle
orb
andb
in
jecxz
mov
mov
int
mov
scas
jmp
jmp
stos
fwait
jle
sarb
loope
pop
fwait
in
ret
push
stc
lret
subb
jmp
stos
xchg
xchg
inc
int
fwait
cmp
in
aad
int
pop
mov
insb
roll
rol
jmp
fcmovnu
rolb
aad
mov
or
cmp
ret
mov
fwait
sub
add
jecxz
mov
dec
jmp
shlb
scas
popf
sbb
repnz
pusha
fstpt
shlb
lahf
push
addr16
push
ficompl
dec
loopne
xchg
cmp
jecxz
sti
cmp
mov
sub
jb
shr
adc
or
mov
push
jp
dec
gs
je
ret
fwait
cmp
int
dec
xchg
int
dec
shlb
aad
leave
jmp
and
mov
dec
xor
jmp
stos
mov
out
sub
sub
jmp
dec
arpl
xchg
fldt
cmp
cmp
fistpl
dec
lods
mov
lret
and
stos
popf
fistl
fsubr
pop
cmp
aam
movsb
int3
outsl
and
shlb
sbb
fldt
xchg
fistpl
push
pop
fwait
pop
mov
add
jb
pusha
scas
gs
sub
mov
fldcw
mov
lea
mov
fsubr
push
jg
jecxz
fdivs
out
ds
mov
cld
out
repz
cmp
ficoml
jecxz
into
imul
mov
xor
pop
xlat
jecxz
inc
jecxz
ret
fwait
inc
sub
inc
iret
add
inc
xchg
dec
pop
pop
inc
and
int
test
pop
mov
cmp
lea
or
dec
sti
ljmp
cmp
jnp
sub
pop
rcrl
not
jns
and
sti
movsb
or
in
sub
shrl
cmp
sbb
sti
outsl
and
bound
sbb
add
cmp
cmp
sbb
sti
outsl
shrb
imul
out
mov
mov
cmpb
xor
subb
jnp
rol
xchg
jnp
mov
jns
xor
jb
rcll
mov
addr16
pop
lcall
gs
jnp
rol
cmpb
cld
mov
jnp
xor
mov
xchg
shlb
pop
cmp
ljmp
sub
cmpsb
aaa
ds
push
iret
rol
or
push
rol
xchg
mov
mov
fwait
jb
push
sub
mov
pop
sarb
push
sar
cli
cld
fucomi
fldenv
repz
mov
pop
adc
iret
mov
ror
shrb
push
mov
icebp
sub
pop
mov
xchg
into
pop
xor
cmpsb
sahf
in
sbb
pop
pop
in
popf
mov
mov
pop
popf
or
jp
lcall
pop
cmp
mov
mov
xchg
int
in
pop
pop
iret
pop
roll
xacquire
cwtl
int
sbb
bound
sub
sub
mov
mov
out
std
and
jnp
cwtl
imul
rcrl
cmp
mov
into
dec
xor
mov
mov
sarl
and
addl
aaa
cmc
fcmovnb
pusha
mov
sbb
addl
add
cmp
adc
pop
mov
iret
mov
shrl
mov
jge
aas
mov
jmp
xchg
insl
iret
iret
roll
rcl
mov
fsubr
mov
vcvtss2si
inc
shll
bswap
rol
aam
call
and
cmc
stos
cmp
push
lret
pop
rol
mov
divl
aas
repnz
movsb
ret
adc
adc
sbb
into
aam
repz
dec
cmpsb
iret
loop
pop
mov
stos
mov
mov
fcmovne
mov
inc
rcrl
shl
lcall
ljmp
rorl
and
daa
jecxz
outsb
xor
or
jecxz
cltd
stos
sbb
jge
pop
imul
xor
mov
sub
add
jp
repz
mov
mov
fwait
push
sub
push
jecxz
sub
fwait
mov
imul
xchg
iret
mov
pop
mov
shll
ficoml
je
inc
sbb
jecxz
sub
push
lahf
or
fdivrl
push
mov
repnz
add
popf
cmp
mov
bound
ja
lea
mov
mov
pop
divl
out
sbb
addr16
xchg
rcr
jno
clc
pop
xchg
fdivrp
jecxz
fnstsw
daa
mov
repnz
mov
inc
iret
push
lcall
xchg
iret
push
and
bts
mov
dec
daa
les
lea
sbb
call
inc
les
xchg
imul
imul
mov
idivb
sbb
fistps
popa
jns
sbb
mov
shrb
inc
das
stos
mov
out
fwait
ds
xor
add
lea
imul
jge
imul
pop
push
or
daa
out
in
repz
imul
inc
xlat
push
jecxz
push
fisubl
dec
flds
mov
ljmp
dec
out
jnp
sub
lea
cmp
xchg
xchg
dec
loop
mov
mov
cmp
ficomps
xchg
jmp
push
rcll
fcmovb
cmovp
pop
fldl
cwtl
insl
ficoml
ljmp
push
or
fistpl
mov
sub
popa
lock
fdivrs
push
clc
test
imul
jle
lahf
mov
inc
int3
dec
test
jg
or
mov
int
iret
sbb
pop
mov
repz
push
sub
or
fwait
cli
fnstsw
and
faddp
ret
sti
mov
cmpsb
rol
int
lds
xchg
cmp
pop
jmp
in
loop
fistl
es
jmp
jecxz
xchg
mov
mov
add
stos
jae
pop
pop
sbb
mov
push
enter
mov
inc
inc
cmpsb
test
jmp
add
inc
jno
ret
ljmp
in
fmull
sbb
je
jnp
cli
sbb
arpl
xchg
add
stos
pop
imul
ja
xor
subl
int
call
insb
jne
mov
or
in
mov
xchg
or
mov
push
in
dec
testl
jecxz
aad
ret
push
sub
cmp
test
repz
sub
push
dec
add
div
pop
in
ret
dec
sbb
xchg
repnz
test
xor
bound
jmp
ret
sub
sbb
push
dec
shll
outsb
stos
dec
mov
in
repz
push
loopne
jle
repz
repz
xor
adc
arpl
in
js
mov
sub
fmuls
xor
pop
je
aas
sbb
jbe
jp
xacquire
mov
and
sub
mov
in
cli
or
xchg
testl
xchg
sub
cmc
bnd
mov
dec
arpl
rolb
ss
imul
adc
and
repz
int3
mov
ljmp
sub
dec
dec
cli
mov
into
imul
popf
bound
imul
in
xor
xlat
rclb
test
adc
mov
inc
ret
enter
or
add
lret
add
pop
cmp
sbb
dec
push
pop
fldcw
push
lea
cmp
pop
xchg
jne
lock
inc
ret
or
out
cmpsb
sbb
lea
imul
cmpsl
push
icebp
sbb
mov
pop
popf
xor
repnz
dec
jae
jb
jne
mov
mov
jns
lea
pop
outsl
enter
aam
dec
std
fsubrs
les
pop
or
jns
pop
sbb
test
jns
and
pop
mov
xchg
sti
mov
pop
pusha
aaa
xchg
and
or
mov
pop
sar
mov
enter
es
xchg
imul
add
arpl
inc
jne
ficoms
jnp
and
or
or
jae
ret
mov
mov
mov
push
fstps
dec
into
lods
andl
xchg
stos
lods
push
fimull
inc
adc
xchg
inc
fistl
pop
jge
and
aas
mov
insl
arpl
arpl
sbb
dec
scas
ret
push
lea
imul
xor
sub
mov
gs
in
jae
or
call
dec
xor
xchg
xlat
out
loop
xorb
inc
xorl
xchg
lret
push
fstl
xor
sbb
pop
pop
sbb
or
ret
push
sbb
fidivrl
int
mov
cmp
dec
insb
loopne
jmp
add
aad
ret
out
jnp
sbb
into
repz
dec
xor
jo
dec
xchg
ret
jecxz
mov
cmpsl
mov
mov
popf
adc
test
ljmp
subl
sub
in
outsb
fcompl
pop
sub
aas
fldenv
ja
add
daa
mov
fistl
lcall
dec
ret
mov
lret
loopne
sub
adc
mov
mov
push
mov
mov
cmpsl
das
mov
xchg
adc
inc
idivb
popf
fwait
mov
or
fwait
popa
inc
cli
lret
shll
and
aad
std
imul
sbb
adc
int
mov
in
lds
mov
xchg
xchg
pop
rclb
call
daa
call
add
imul
mov
iret
jne
mov
pop
outsl
mov
int3
add
fistpl
int3
and
adc
push
mov
inc
inc
lods
lds
test
fildll
pop
call
sub
adc
test
ret
test
xchg
and
mov
xlat
orb
inc
add
fdivl
push
rolb
dec
loope
cmp
pop
mov
aas
inc
or
outsl
pushf
addr16
pop
inc
fisttpl
push
xlat
insb
dec
cs
daa
add
fnsave
mov
pop
jns
jb
fwait
test
or
jae
testl
sub
sbb
mov
ss
cmpsb
cli
fildll
mov
rcr
jne
insb
or
push
mov
loop
sbb
subb
sub
dec
mov
stos
dec
insl
push
mov
lcall
pop
sub
dec
mov
es
in
sbb
test
inc
mov
sbbl
and
popf
mov
or
in
sbb
out
xor
push
pop
pop
jp
ljmp
cmc
int
lret
loopne
aad
stos
ss
int
in
push
adc
adc
lret
fsubrs
pop
jg
pop
mov
das
ret
mov
int3
push
add
lahf
inc
jno
repz
inc
aam
pminsw
adc
movsb
and
sti
mov
test
js
mov
loop
sub
imul
adc
cmp
arpl
push
add
inc
inc
mov
sub
stc
ret
int
or
lods
jge
aam
jmp
iret
popf
jmp
lcall
fbld
notl
xor
pop
aaa
popf
fwait
cltd
xlat
scas
fsubs
xchg
repnz
dec
stos
fucom
shl
xchg
arpl
inc
mov
repz
fstpl
xchg
ljmp
shlb
dec
sbb
dec
pop
mov
aaa
mov
testb
xor
mov
add
jecxz
xchg
lret
shrb
push
cli
ljmp
ficomps
outsl
jecxz
cmp
sahf
bnd
jge
cs
fstpt
jge
cli
pop
aaa
jno
stc
btc
std
pop
pop
cmp
push
or
push
pop
jnp
pop
mov
ljmp
ficoml
and
out
movb
test
subb
in
sti
outsb
push
test
loopne
iret
in
dec
sub
jb
call
jecxz
or
add
xchg
pop
adc
lret
pop
mov
lret
xchg
insl
mov
daa
xchg
add
xchg
andl
inc
lret
out
fucomi
xchg
repz
mov
rolb
rorl
and
inc
loop
in
mov
jns
jmp
mov
into
test
fwait
or
dec
mov
cmp
mov
dec
fucomp
sbb
ret
popf
mov
sub
movsl
rclb
or
mov
add
icebp
add
pop
push
jnp
mov
test
outsl
cmp
sub
outsl
enter
xor
ret
mov
shll
div
loop
mov
stos
loop
testb
das
ljmp
push
jb
out
repz
fsubp
xorl
dec
mov
jecxz
lcall
loope
push
cmp
negl
roll
out
cli
mov
push
das
stos
lahf
pop
iret
insl
pop
dec
mov
pop
jmp
in
insl
inc
or
mov
imul
xchg
dec
jg
xor
imul
rol
es
mov
cld
insl
sub
mov
push
fldt
ret
inc
xchg
cmp
jmp
inc
out
mov
fcmove
mov
scas
or
and
jb
jmp
push
mov
inc
push
out
fsubr
frstor
out
fwait
mov
insb
mov
jp
imul
cmp
ljmp
mov
pop
cli
mov
imul
inc
outsb
mov
mov
popf
mov
push
ret
sbb
leave
cmp
ret
mov
iret
in
jecxz
jae
stos
inc
add
xor
xchg
or
lret
out
repz
in
out
test
push
iret
jmp
xlat
pop
loopne
and
imul
cwtl
or
imul
addr16
ljmp
adc
mov
push
jnp
loop
ljmp
xlat
shrl
insl
ret
cwtl
dec
je
fmuls
push
int
in
out
aad
push
in
fisubs
dec
aam
rclb
int3
push
adc
cmpsl
jbe
mov
insb
sti
arpl
push
cmpsl
loop
stc
shll
sbb
out
cmc
pop
insl
jae
cmp
jecxz
fwait
pop
or
idivb
pop
cmpsl
xor
sbb
imul
pop
lea
stos
lea
sbbb
jae
movl
push
mov
push
jmp
mov
fists
decl
jecxz
and
cmpsb
leave
jp
arpl
inc
stos
lods
imul
pop
dec
mov
inc
jmp
adc
lret
stos
mov
mov
lea
push
lea
call
jmp
push
call
imulb
aas
addr16
inc
mov
repnz
addr16
or
push
call
adc
adc
jo
lds
mov
hlt
out
fmuls
push
mov
xchg
ret
cmpsb
cmpl
jae
loopne
fs
in
mov
enter
xchg
inc
xchg
jbe
mov
push
das
adc
outsl
in
sub
or
sbb
sbb
mov
cmp
jnp
jb
adc
test
dec
clc
out
les
enter
fs
pop
dec
fwait
outsl
jle
adc
mov
out
andl
push
add
pop
xorps
nop
jmp
aas
lds
push
out
add
jg
fadd
mov
inc
movsl
jae
bound
mov
jmp
loope
push
xor
out
in
jg
mov
fld
adc
rcl
pop
mov
das
mov
int
xchg
fistps
xchg
mov
or
inc
push
xor
mov
push
sbb
mov
inc
faddl
jne
pop
sbb
popa
mov
cs
and
fdivrl
and
mov
shrb
fsubr
ss
test
pop
xor
push
mov
sbb
adc
fwait
pop
pop
jmp
movsl
aad
sbb
add
hlt
adc
ja
test
add
jecxz
icebp
pop
imul
movsl
push
dec
mov
ds
jmp
movsb
clc
push
push
fcmovnu
bound
jp
jne
pop
fcmovne
or
sbb
into
inc
mov
inc
mov
mov
cmp
js
xor
sti
inc
push
hlt
das
int
movsl
repz
inc
cmp
lret
out
mov
mov
mov
or
leave
xchg
leave
loopne
xchg
insl
das
sbb
mov
or
xlat
stc
adc
push
call
push
call
pop
jns
mov
mov
testb
mov
add
andb
clc
movzwl
rcl
ror
mov
stc
call
push
call
and
add
jae
popa
addr16
outsl
js
add
out
add
xchg
lods
adc
mov
fiaddl
lahf
push
cmpsl
inc
pop
scas
lods
movsl
cwtl
push
push
iret
mov
lds
xchg
ret
cs
ret
xlat
data16
sub
ficompl
dec
mov
test
xchg
xchg
add
fsubl
or
out
dec
divl
out
xlat
orl
push
cmpsl
movsl
sbb
push
pop
test
lahf
sti
ljmp
divl
jns
add
arpl
cli
or
leave
push
ljmp
movw
jmp
xchg
xlat
dec
test
pop
aad
movsl
pushf
pop
push
pop
cmpsb
inc
pusha
insb
mov
jmp
pusha
lret
pop
lods
add
test
push
jbe
cli
or
outsb
push
lds
shrb
push
pop
xchg
xchg
js
popf
insl
push
test
or
cli
scas
movsb
xchg
sub
int
std
pop
loop
shr
mov
faddp
cmp
movsb
dec
cwtl
inc
fcompl
and
hlt
dec
mov
in
mov
js
outsl
cmp
jno
push
push
mov
mov
pushf
pushf
mov
lea
jmp
xor
jg
or
pop
ud2
push
cld
fs
pop
xor
mov
das
adc
rcrl
mov
mov
out
push
addr16
pop
das
jo
xor
shl
loopne
fwait
inc
cmp
dec
test
push
push
dec
shll
leave
cmpsb
fildl
in
das
fdivs
cmp
jbe
test
jle
cmpsb
xchg
sbb
cmp
sar
adc
dec
and
mov
fs
sbb
cmp
out
xor
xlat
pop
in
pop
ja
orb
aad
loope
leave
lret
in
popf
add
xor
lock
inc
sahf
call
mov
sti
pop
pop
das
or
sub
push
test
stos
in
pusha
test
push
cwtl
imul
jne
and
adc
shll
test
or
sahf
cltd
jge
xor
das
xlat
ljmp
ljmp
pushl
pusha
imul
cmp
stc
cmp
test
add
push
mov
pushf
lea
jmp
cmp
jmp
jp
jg
xlat
pop
mov
imul
jne
push
cmpl
inc
in
pop
nop
loope
push
fs
fsubl
imul
enter
arpl
in
rcrl
ja
inc
nop
mov
sbb
stos
sbb
cmpsb
cmpsb
mov
add
cs
mov
dec
and
mov
xchg
jecxz
xor
xor
pop
inc
int3
sub
dec
pop
xchg
push
test
call
sbb
pop
daa
push
mov
mov
out
sub
xlat
pop
inc
into
and
daa
and
and
shrb
sbb
das
jno
and
xchg
mov
sti
js
ja
push
stos
mov
xchg
or
xchg
pop
and
mov
popf
fsubs
jne
movsl
mov
mov
adc
push
fidivrl
mov
add
lods
push
fldl
dec
outsl
jb
mov
inc
push
cs
fnstcw
inc
shll
dec
adc
jo
sub
ss
dec
ljmp
mov
aad
cmpsl
mov
into
push
jnp
add
mov
call
in
adc
or
adc
xchg
xchg
call
loopne
xchg
cltd
add
jb
mov
lcall
mov
popa
ss
mov
inc
call
xor
shlb
cltd
xor
dec
mov
fcomi
scas
lock
and
lods
sbb
sbb
out
aas
sti
ficompl
mov
push
xchg
test
mov
push
imul
out
xor
cmp
ret
or
sbb
adc
aas
hlt
les
adc
sub
pop
cld
mov
or
sub
mov
pop
xor
jo
xlat
pop
mov
cmpb
jnp
sub
jge
nop
fwait
orb
js
lea
inc
scas
ds
stos
iret
cmp
jle
scas
fnstsw
pushf
sti
jbe
gs
or
stc
popf
repz
sarb
jp
lahf
inc
pushf
sti
jnp
push
xor
dec
xor
ret
pushf
stos
lea
pop
pushf
out
push
fisubs
xchg
cmp
jns
and
push
pop
jb
or
loop,pn
sbb
push
or
add
mov
sbb
fcmovu
inc
cmpsl
and
and
out
repnz
call
sahf
mov
repnz
mov
mov
out
cwtl
stos
testb
imul
repz
mov
and
fs
sub
out
jne
push
bound
lret
lcall
lret
inc
imul
jg
mov
xchg
mov
add
inc
xchg
pop
xor
shrl
mov
adc
sarl
pop
jmp
dec
jb
cmpsb
inc
adc
je
jne
rclb
or
pop
sub
xchg
stos
je
dec
clc
inc
arpl
test
sub
pop
ljmp
mov
imul
dec
xlat
mov
push
js
cmpsb
aam
inc
pop
lcall
fstpl
sub
je
stos
xlat
xor
popa
sbbl
sahf
sbb
test
leave
popf
out
xor
mov
jno
leave
sbb
ja
sarb
decl
hlt
lcall
push
mov
mov
push
call
mov
mov
sahf
jg
pop
loopne
cmp
loope
xor
out
xor
sbb
lret
push
loop
add
adc
add
inc
fisubs
cmp
lods
and
push
mov
lret
lret
fwait
stos
cld
push
sbb
push
adc
sub
and
xor
pop
std
push
cmpsl
dec
jg
mov
dec
add
lods
mov
dec
nop
sub
mov
jg
or
ret
xchg
xchg
xchg
lods
std
rolb
ret
mov
mov
lea
call
call
setge
mov
stos
not
mov
movb
movw
call
xchg
pushf
call
push
call
das
mov
cmc
pop
or
xlat
pop
jb
int3
mov
int
enter
jle
test
fildl
mov
dec
mov
mov
mov
sbbb
add
shl
test
hlt
xor
dec
and
xorb
cmp
pop
cmp
and
fldt
xchg
repnz
mov
jae
or
mull
jae
insl
sub
jnp
jns
jp
movsb
lcall
jno
sub
fdivl
mov
jle
pop
mov
inc
daa
popl
inc
xchg
xchg
mov
adc
insb
inc
push
cwtl
lahf
in
imull
shrl
mov
push
push
pop
xchg
sarb
push
push
sarb
ret
std
xor
pop
cmp
or
arpl
imul
cmpsl
fldenv
adc
ja
push
out
jge
mov
adc
ud1
loope
mov
decl
or
dec
shlb
leave
fnstsw
stc
cld
push
add
jmp
lods
cld
stos
add
divb
xchg
std
push
jp
xchg
fimull
lcall
sub
mov
cmp
mov
dec
push
jo
cmp
push
dec
mov
in
lods
andb
mov
inc
stos
les
push
insb
sub
inc
cmp
arpl
inc
pop
mov
xchg
outsl
jle
adc
xchg
gs
hlt
dec
fdivl
mov
cmp
inc
rclb
xlat
pop
dec
xor
jmp
ss
xor
addr16
adc
cltd
xor
int3
dec
incb
or
fsub
cwtl
aad
push
xlat
insb
dec
push
es
shlb
cmp
cld
add
cmpsl
test
fwait
orl
mov
and
mov
hlt
sbb
insl
ret
xchg
outsl
pop
test
or
pop
push
aaa
pop
cmpl
xor
fpatan
fdivl
xchg
jno
pop
psraw
inc
loope
xlat
pop
in
cmpsl
inc
bound
pop
bound
mov
jmp
insl
jmp
outsb
jge
push
xchg
aad
and
dec
shll
pop
addl
outsb
shrl
push
push
xor
shl
mov
mov
jae
mov
lock
pop
dec
in
mov
test
and
loopne
sarb
jecxz
mov
add
pop
push
and
jo
add
and
jb
lahf
add
call
cltd
stc
xchg
adc
push
call
mov
sbb
pop
or
fisttpl
popf
mov
add
mov
hlt
add
jmp
mov
lea
adc
dec
sti
sub
mov
popf
js
dec
insb
stos
jg
or
mov
xchg
into
pop
mov
pop
add
mov
push
inc
mov
mov
mov
rolb
inc
add
mov
pop
repz
adc
cmpsb
cld
rolb
je
inc
daa
loop
in
sarb
sbb
xor
dec
pop
fildll
pop
push
inc
cmpsb
movb
lea
ja
pushf
call
push
call
lea
cli
jp
call
pop
sahf
insl
jb
pop
jnp
pop
lds
mov
inc
daa
inc
xchg
mov
dec
jnp
outsb
js
add
mov
adc
testl
into
pop
dec
cltd
inc
add
outsl
xor
lcall
xor
pop
sbb
xchg
leave
adc
add
mov
lret
push
psubusb
mov
decl
inc
sbb
negb
sbb
shll
or
push
jno
pop
cmp
or
rolb
inc
imul
mov
add
pushf
xchg
adc
add
cmp
cmpsb
call
push
call
inc
adc
add
hlt
mov
test
int
add
xchg
xor
sub
test
bt
test
mov
test
movsbw
inc
jmp
pusha
movw
lea
je
test
sub
jmp
movsbw
pop
lea
jmp
push
call
mov
icebp
xor
pop
dec
pop
gs
mov
mov
fs
ret
pop
pop
std
add
sbb
xlat
pop
push
sub
fwait
mov
cmp
lahf
int
fdivs
xchg
popa
iret
xchg
pop
shll
fucomp
outsl
or
jmp
ret
mov
mov
fimuls
cmp
cmp
mov
in
cmp
outsl
scas
ret
or
cmp
lock
jns
pop
mov
into
aad
sub
call
or
pop
dec
mov
fnstenv
insl
inc
xlat
clc
imul
roll
lock
out
hlt
pop
out
popf
inc
mov
mov
arpl
xor
imul
in
push
push
pop
jle
mov
lcall
movsb
and
stc
fildl
or
mov
test
dec
and
push
call
sub
xlat
jg
add
lods
xchg
adc
outsb
cmc
stc
call
push
call
aas
arpl
lret
insb
add
lret
add
pushl
pop
and
mov
or
add
adc
cmp
sbb
test
adc
xchg
mov
or
fbstp
adc
das
mov
mov
mov
sahf
mov
xor
add
hlt
sbb
and
jmp
pop
movsl
icebp
sub
fbstp
sub
jnp
lret
mov
pusha
outsl
icebp
divb
sub
push
jecxz
ret
xchg
aaa
rorl
xchg
test
cmp
sahf
ja
lock
mov
xlat
pop
fisttpl
outsb
jbe
jp
lret
enter
ror
jmp
pop
lods
mov
and
jno
jmp
inc
stos
xchg
imul
cmc
popf
addl
push
jge
pop
movsb
loop
inc
enter
les
aaa
jbe
mov
mov
aaa
scas
add
cli
pusha
add
mov
aas
test
out
andl
in
jle
lret
jne
clc
fxam
iret
jnp
mov
out
js
mov
fidivl
pop
inc
sbb
adc
push
mov
int
shrl
jnp
sub
dec
pop
int3
sbb
fists
jne
shlb
shl
mov
push
pop
sub
inc
push
add
frstor
inc
rcrl
dec
pop
sub
ror
insl
pop
dec
cs
jecxz
jp
sub
mov
inc
sub
repnz
jge
jo
lcall
cli
ljmp
in
ss
pop
jmp
mov
mov
mov
push
data16
adcb
mov
mov
mov
push
cmp
cltd
jno
in
mov
pop
in
aas
cmp
lahf
cmp
and
in
mov
insb
and
inc
cld
pop
push
add
clc
shrb
aas
incl
jmp
movsl
bound
cmpl
into
aad
adc
and
lock
into
in
xchg
xchg
aaa
into
icebp
pop
jbe
movsb
movsl
bound
push
mov
adc
popf
jl
out
add
and
xchg
in
testl
loope
fcoms
lahf
cmpsb
mov
mov
testl
cmp
loopne
jge
pop
jecxz
rcrl
rep
jmp
mov
mov
insl
push
sub
jle
loope
dec
and
push
call
and
inc
jbe
pop
test
or
push
pop
pusha
repnz
push
jp
scas
push
gs
mov
fdivrl
or
push
sub
sbb
js
es
pop
xor
sahf
vpaddusb
mov
fidivrs
mov
and
icebp
into
fbstp
add
into
lea
push
or
jb
xchg
jb
inc
mov
jge
aam
sbb
pop
sar
inc
popa
pop
and
lret
xchg
icebp
lcall
nop
loop
sub
xor
jecxz
pop
les
pop
mov
adc
push
inc
fwait
xor
cmpb
pop
sub
fistpll
js
jl
jge
leave
lret
jp
jl
jg
lret
xchg
inc
push
cmc
or
outsl
dec
push
inc
or
add
push
xor
add
sub
mov
je
pop
stos
mov
ss
xchg
xchg
jno
int
ficompl
sub
dec
or
dec
push
loop
sahf
or
xor
lods
repnz
lock
fwait
in
inc
cmp
jns
or
in
loop
xlat
pop
sub
mov
mov
movsb
push
push
pusha
pop
lea
dec
insb
and
clc
mov
iret
arpl
sti
incl
mov
repnz
cmc
or
pop
and
imul
orb
xor
mov
dec
xor
fs
adc
jl
sbb
mov
or
mov
int
sbb
xor
stos
mov
mov
jmp
repnz
pop
cld
paddd
mov
mov
xlat
pop
adc
sahf
repnz
icebp
mov
cmc
cwtl
jbe
push
adc
cltd
shr
ss
push
pop
outsl
or
aaa
mov
sbb
push
sub
outsl
movsb
sar
popa
outsb
repnz
rorb
pushf
fisttpll
cmpl
mov
jne
push
sti
or
popf
pop
data16
ja
por
xlat
clc
sub
pusha
lea
call
pusha
movb
lea
jae
test
sub
jmp
push
call
add
add
jg
adc
sub
mov
pop
jnp
call
and
lea
ja
movsbw
xadd
shl
add
push
shr
movsbw
mov
inc
pushf
add
call
in
mov
jmp
out
jmp
fcoml
loopne
or
imul
push
xlat
inc
pusha
mov
rcl
mov
xchg
into
mov
or
sub
sub
out
sub
out
js
mov
cmp
jo
call
inc
std
fimuls
mov
sarl
jno
call
iret
lods
ret
jne
sub
mov
add
cmc
xchg
or
cwtl
lods
outsl
xor
loope
enter
pop
sbb
xlat
pop
add
int
xchg
fimuls
sbb
loop
xchg
sub
cs
loope
mov
mov
rcll
or
dec
cmp
pop
test
test
loope
aam
jge
outsl
adc
nop
std
mov
sti
fisttpl
sub
mov
lret
push
fsubr
inc
aad
cmpl
dec
and
call
push
pop
and
xlat
pop
push
into
xchg
leave
int3
les
iret
mov
sub
dec
ret
loope
inc
out
push
clc
sbb
mov
xchg
inc
inc
mov
cmpsb
mov
adc
mov
imul
in
in
test
sti
fdivp
sarl
sbb
push
loope
fucompp
cwtl
xlat
push
call
inc
imul
add
rorb
lods
imul
pop
cmp
xor
les
call
add
push
push
sti
mov
rol
mov
loope
sub
aas
mov
frstor
sbb
push
push
inc
add
dec
adc
mov
add
in
lods
cmp
pop
mov
xchg
or
sub
push
outsl
xchg
out
jbe,pt
outsl
lea
mov
and
repnz
adc
jecxz
aaa
pop
xchg
in
add
daa
dec
mov
imul
pop
pop
pop
or
pushf
aas
mov
mov
sbb
icebp
sbb
lds
or
xchg
in
aas
lea
fdivs
inc
dec
je
dec
sbb
push
mov
jp
cmp
inc
sarb
jae
mov
ret
mov
clc
sahf
test
mov
push
add
pushf
inc
xchg
add
push
jg
pushf
test
mov
dec
sbb
or
xor
lock
dec
or
adc
xchg
pop
adc
call
fnstenv
fiaddl
in
sahf
call
dec
cmp
push
lret
fsubrs
pop
and
lea
cli
cli
fisubs
sbb
movsl
stos
int3
push
enter
jns
shll
sbb
pop
scas
subl
xlat
pop
les
mov
pop
push
jno
xor
push
mov
cs
mulb
push
pop
call
orb
jmp
push
call
scas
push
lea
ja
pushf
lea
jb
pusha
cmpb
push
lea
jne
bsr
add
rcl
cmc
mov
bt
test
add
call
adc
push
pushf
lea
jmp
mov
push
lea
jne
mov
pushfw
bt
mov
pusha
call
cwtl
ss
outsb
xlat
pop
xor
mov
std
cld
clc
mov
lods
scas
dec
ljmp
movsl
add
inc
arpl
fdivr
subb
sbb
sub
in
xchg
cltd
push
sahf
push
cmpsl
cmp
cwtl
and
in
gs
dec
cmp
fdivrl
dec
lahf
jmp
in
mov
inc
fldl
sub
push
pusha
mov
push
dec
ljmp
test
and
in
aad
data16
xor
out
movsb
mov
cmp
mov
aas
and
push
jns
pusha
outsl
xlat
pop
push
jl
das
cmp
and
mov
mov
sbbl
icebp
sarl
xor
fadd
int
mov
adc
enter
fstpt
push
add
sahf
call
mov
mov
pop
push
push
mov
inc
insb
xlat
xchg
mov
jns
push
lret
mov
jmp
andl
adc
out
mov
lods
in
dec
test
add
loop
test
pop
push
call
mov
and
jnp
call
or
gs
call
dec
fdivl
outsb
xlat
pop
jo
aas
lock
xchg
dec
push
lods
insl
add
pushf
flds
jle
movsl
ljmp
call
sarb
daa
mov
aam
push
cmp
pop
push
stc
sbbl
inc
xlat
push
sub
nop
push
ret
push
jbe
pop
dec
shl
xchg
rcll
cmpsb
cmpsl
pop
mov
mov
or
sub
cmp
lock
int
je
insl
add
fstl
stos
daa
push
call
popa
ljmp
add
lods
mov
jp
movb
lea
jne
shld
mov
push
shld
sub
ror
rcl
jmp
push
call
mov
aad
jne
and
insb
xlat
pop
jg
xchg
in
cwtl
in
lahf
call
and
mov
fisttpll
into
loopne
cli
pop
mov
jge
arpl
mov
mov
mov
or
xor
dec
test
jo
cmp
push
jmp
and
mov
mov
ljmp
jmp
notb
popa
cmp
mov
jb
das
adc
movsb
jns
test
sub
shlb
jp
call
pop
inc
ret
aas
subb
jnp
call
fcompl
pop
inc
cltd
push
popf
mov
aaa
pop
fwait
push
pop
mov
mov
mov
pop
in
xchg
mov
mov
aad
or
xchg
mov
adc
dec
push
cmc
cmp
add
mov
xchg
xor
jge
cmp
nop
sub
shl
fstps
lcall
dec
pop
or
shr
xchg
mov
dec
push
call
cltd
jae
xchg
adc
insb
xlat
pop
add
xchg
mov
add
out
or
mov
into
scas
lods
into
adc
xchg
or
lock
shll
dec
aaa
xor
mov
sldt
xor
inc
dec
pop
mull
outsl
and
andb
cmpsb
inc
sbb
mov
jmp
pop
inc
sub
cmp
add
push
adc
or
outsb
or
mov
movsl
call
ljmp
call
loop
fmul
xchg
mov
mov
lea
jae
sub
mov
cmc
ja
mov
rcl
sar
rcl
rcl
mov
cmc
xor
pushf
push
lea
jmp
adc
jmp
movsb
sbb
imul
sbb
cli
xchg
imulb
sub
push
adc
mov
cld
inc
push
add
addr16
xchg
adc
xchg
cltd
shrl
ja
insb
popa
ret
add
lret
mov
out
out
pop
loopne
lret
loope
or
pop
bound
and
sbb
pop
or
test
xchg
insb
pop
jnp
les
pop
repnz
jp
or
jno
add
inc
inc
sbb
lods
ja
xlat
pop
dec
sbb
test
mov
sbb
mov
dec
imul
pop
and
stos
gs
sbb
push
shl
call
push
push
or
fisttps
jnp
stc
dec
ret
ja
jns
sahf
into
xchg
pop
cmp
aad
xchg
out
sub
cmp
imul
fldl
movsb
inc
jbe
or
lods
in
ss
addr16
sti
inc
push
ds
mov
pop
push
jmp
pop
or
imul
ljmp
sahf
mov
movsl
sbb
and
outsb
cmp
mov
inc
pop
ljmp
cs
mov
jb
sahf
lcall
push
test
shll
mov
mov
pop
inc
pop
add
into
lret
scas
lcall
inc
stc
cmpxchg
fisubrs
mov
push
sub
imul
test
jne
inc
daa
push
add
hlt
adc
and
sbb
mov
mov
call
js
shll
mov
and
je
xchg
pushf
mov
ror
cmc
call
mov
pop
pop
fst
ror
adc
jle
rorb
rcrl
imul
loop
xchg
rolb
mov
mov
jmp
adc
std
mov
adc
cmp
daa
rorl
and
frstor
push
ljmp
pop
inc
test
aas
fcmovnu
inc
es
pop
out
or
pushf
mov
jmp
fstpt
insl
mov
xlat
pop
enter
das
fisubrl
in
sub
call
mov
sub
stc
fistpl
repnz
lods
imul
test
jo
pop
jbe
xchg
sbb
ss
jbe
test
mov
fidivs
sbb
sbbl
or
out
mov
outsl
xchg
loop
rcrb
cmp
pop
xor
pop
inc
jnp
fmulp
adc
je
add
mov
jnp
call
arpl
sbb
push
push
and
insl
and
and
outsl
popf
rcrb
sti
aad
test
mov
push
inc
pop
sbb
xchg
sub
lods
mov
int3
aad
mov
xor
cmp
insb
xlat
fcomi
push
jb
sbbb
fimuls
pop
add
and
inc
loopne
mov
push
out
pop
add
cld
jne
aaa
dec
pop
fnstsw
cs
fimull
push
jno
mov
xlat
pop
mov
addl
inc
dec
xchg
xor
xor
mov
leave
jae
test
adc
inc
inc
addr16
enter
pop
cli
pop
sbb
cmpsl
int
mov
data16
push
cmp
scas
cmp
orb
mov
push
pop
test
push
out
xor
sub
lock
xor
fwait
xorb
jnp
push
call
inc
stos
movsb
ss
data16
pop
xchg
in
mov
lock
mov
out
mov
sahf
jo
mov
rorl
jle
mov
mov
pop
test
push
and
or
data16
call
sub
mov
jp
dec
push
push
push
or
imull
aas
and
mov
movsl
dec
sub
adc
out
fld
mov
xlat
pop
mov
sbb
and
jne
cmpl
inc
cmp
inc
pop
out
sbb
xchg
mov
sub
mov
loop
lods
aad
mov
mov
lds
mov
add
lock
push
jae
and
lods
lea
fistps
add
cmp
sbbl
lods
lea
fistps
idiv
xor
adc
adc
add
mov
call
data16
xchg
movb
xchg
inc
cmp
or
xor
add
nop
lea
dec
movsl
cmp
bound
dec
fldenv
pop
movsl
std
mov
mov
lods
clc
cli
xchg
scas
mov
pop
xor
rep
or
aam
xchg
pop
jno
mov
xchg
mov
or
dec
sbbb
pop
nop
jnp
js
xchg
popl
je
pop
daa
inc
sub
imul
notl
or
xchg
adc
in
adc
sub
push
dec
stc
or
dec
dec
pop
sub
sub
cs
jp
pop
data16
pop
push
jmp
call
inc
decb
push
js
clc
adc
ret
outsl
int3
and
in
xor
scas
fs
cmp
inc
test
pop
jge
cld
sub
jg
in
jnp
sbb
push
fdivrs
mov
adc
sti
cmp
push
pop
imul
push
ds
mov
imul
call
lahf
shll
cs
mov
outsl
test
dec
pop
cs
fsubp
and
shrl
call
mov
xlat
pop
mov
mov
adc
sbb
xor
test
mov
test
lock
jns
pcmpeqw
loope
je
outsl
loope
mov
cli
jns
int3
and
leave
je
pop
ja
jns
and
ljmp
xchg
push
pop
cmc
repnz
mov
adc
lea
inc
mov
cmp
cmc
add
push
clc
mov
bsr
add
rol
mov
test
pusha
cmc
test
cmp
movb
push
lea
jbe
btc
shr
mov
shr
bts
add
xor
push
mov
shl
add
movzbw
push
movl
rcr
not
pushf
mov
jmp
or
arpl
pop
dec
xlat
and
and
adc
iret
fsubs
test
add
mov
popf
xchg
mov
fxch
lahf
shll
scas
push
or
add
mov
adc
mov
sarl
addr16
xchg
jle
or
das
cmp
xchg
out
stc
test
int3
into
popf
mov
jno
test
mov
lods
xchg
gs
divl
stc
and
out
xchg
mov
popf
dec
addr16
xor
in
xchg
jne
xchg
adc
sbb
pop
and
and
je
shld
rcr
add
call
push
call
sbb
fistpl
add
mov
adc
jmp
push
xchg
subb
insl
add
idivl
add
and
movzwl
add
shrd
mov
call
push
call
jl
mov
iret
xlat
pop
scas
shrl
rol
add
or
jns
mov
pop
insl
jl
arpl
insb
cmp
popa
mov
mov
fldt
out
data16
rorb
push
gs
sbb
es
stos
and
inc
aad
data16
jo
es
rcll
pop
inc
lock
lret
cltd
add
lahf
movsl
outsb
xchg
add
ret
daa
or
pop
fdivs
lea
xchg
adc
addr16
pop
or
pusha
test
stc
test
pushl
lea
je
push
cmp
cmp
cmp
sub
cmp
jmp
mov
pop
mov
adc
sbb
add
sbb
inc
mov
stos
push
pop
xchg
in
gs
push
sbb
icebp
cmc
int
lret
push
mov
sub
xchg
push
push
aas
ss
hlt
stos
mov
icebp
stos
mov
xlat
pop
dec
sbb
fcomp
fsubp
out
cmp
in
inc
or
pop
out
or
outsl
add
or
dec
push
daa
adc
out
nop
mov
jecxz
and
jbe
sarl
mov
cmp
js
sbb
mov
jne
rorl
xlat
aas
sub
call
inc
sub
repz
inc
xor
popf
mov
jae
jnp
inc
cs
jb
add
and
or
clc
loopne
xchg
andl
scas
add
and
iret
pushf
jns
rolb
insb
add
mov
add
push
call
mov
push
or
out
in
cwtl
jmp
in
lds
adc
andl
mov
aas
pop
mov
or
sub
inc
jne
pusha
or
xchg
js
inc
pop
loopne
adc
sbb
je
push
testl
stc
scas
dec
int
mov
add
leave
dec
xor
cmp
or
in
adc
xor
fisttps
shll
or
lds
sub
mov
inc
jne
cmp
pop
add
ret
xchg
dec
sub
adc
cmpsl
int
xor
sbb
popf
push
call
bnd
xchg
pop
aas
rclb
mov
repnz
and
pop
mov
rcpps
pop
cli
scas
sub
jge
pop
pop
mov
jbe
repnz
out
xchg
inc
repnz
sbb
mov
inc
cmp
loopne
stos
scas
adc
jo
dec
int
push
mov
inc
imul
adc
insb
stos
push
xchg
mov
or
stc
in
sti
xor
int3
sti
push
repz
jp
insb
pop
div
repz
orl
mov
and
xchg
daa
gs
call
pop
pop
out
cmp
push
cld
jp
call
enter
and
jle
pusha
xlat
pop
not
ror
ret
mov
fadds
scas
in
adc
scas
mov
mov
insb
adc
add
repnz
pop
and
mov
cmp
std
popl
jns
xchg
mov
cmp
ffreep
packssdw
in
sti
pop
scas
jl
and
xchg
pop
mov
mov
sti
push
out
xchg
cli
cmp
hlt
repnz
mov
or
cmc
movsb
mov
subb
clc
add
mov
das
in
jnp
call
add
push
ret
insb
add
pop
lea
stos
into
sbb
pop
xlat
pop
sbb
lods
add
mov
sbb
or
xor
xlat
pop
jne
pop
sub
int
clc
adc
or
cs
pop
adcl
mov
in
xchg
ss
add
roll
dec
push
pop
lret
repnz
jo
outsl
in
xchg
lea
out
inc
aaa
sti
fcomip
sarl
add
repz
inc
or
and
mov
add
xchg
ja
add
loop
jge
add
inc
jb
imul
insb
add
in
mov
ret
mov
int3
pop
in
push
fxch
sbb
in
mov
jmp
xlat
shll
ret
lods
sbb
jmp
mov
jmp
fildll
jno
mov
jge
int
insb
jecxz
subb
repnz
mov
push
mov
addb
fistpl
neg
mov
pop
sti
xlat
cmp
ret
pop
mov
pop
pop
dec
pushf
popf
fstl
jmp
and
xchg
loopne
push
sub
ret
xlat
movsl
adc
xchg
imull
int
mov
sub
addr16
sub
fisttpl
sahf
dec
fistl
insl
xor
repz
pop
loope
sbb
enter
out
leave
and
xchg
lret
jmp
mov
in
pop
shll
stos
jecxz
cmp
cli
mov
ret
daa
push
dec
mov
jnp
and
fnsave
jecxz
ljmp
xchg
loop
inc
xor
jecxz
ret
dec
mov
imul
pop
mov
les
dec
fstpl
mov
pop
ret
pop
lret
sbb
jae
fcmovnbe
add
pop
dec
cltd
loop
inc
xchg
pop
pop
mov
sbb
or
sub
loop
fisubrl
jnp
jne
inc
lret
cld
sbb
xchg
mov
call
dec
int
mov
popf
fistpl
inc
inc
adc
repnz
adc
ljmp
push
dec
dec
xor
inc
xor
push
pop
sub
ret
ret
fdivrl
push
repnz
sbbl
jb
push
loop
lods
ret
push
gs
int
shll
push
mov
mov
lcall
dec
dec
lret
int
push
ret
and
cli
test
scas
inc
out
fs
sub
lret
imul
inc
aam
add
int
push
jnp
inc
ret
cmp
mov
and
mov
insb
pop
cmp
test
or
lock
fistpl
adc
mov
dec
aad
push
loope
int
xchg
ret
cwtl
ljmp
scas
stos
ds
fstpt
push
repnz
or
sbb
rorl
enter
pop
aad
sbb
sti
xlat
sbb
rcrb
inc
xchg
lods
rol
xor
fcoml
xor
fiaddl
sbb
aad
ds
mov
sti
dec
add
adc
mov
adc
jmp
dec
leave
ror
sbb
push
dec
cmp
rol
sbb
out
fisubl
jecxz
push
fcmovnb
sbb
out
mov
sar
inc
fiaddl
mov
or
shll
add
pop
fidivrl
sbb
in
arpl
sbb
sub
dec
subb
ljmp
pushf
pop
jmp
sarb
xlat
dec
xor
ss
and
push
pop
lods
lds
jns
leave
sti
mov
push
jge
cmp
inc
push
cmp
jno
push
pusha
sbb
cmc
enter
daa
in
rorl
repnz
popa
inc
and
subl
roll
pop
sbb
or
daa
add
mov
enter
or
add
pop
js
ds
mov
aam
sbb
enter
sub
rcl
push
lret
rorb
push
sbb
std
in
jbe
push
lea
popa
adc
sub
insl
and
lret
mov
mov
xorb
in
js
je
jb
mov
sti
mov
incb
lret
sbb
push
les
or
out
inc
add
rcr
sbb
jge
stc
int3
fsin
movsl
rorb
cmp
sbbb
mov
cli
sbb
pop
or
xor
shrl
dec
sbb
lea
push
sbb
jmp
stc
in
ret
in
push
movsb
fldl
cs
test
adc
dec
lds
loop
imul
or
push
lret
jecxz
adc
outsb
jecxz
push
addr16
scas
cmp
xchg
xchg
out
sbb
fs
shr
lahf
leavew
or
dec
cmpsl
jne
pushf
jno
pop
mov
mov
mov
ret
cmp
cs
push
xor
or
loop
imul
lods
pop
and
int
aaa
pop
aam
fisttpl
aas
mov
jmp
xlat
faddl
adc
out
dec
sbb
cmpsb
out
sbb
cmpsl
aam
inc
cmp
cli
xchg
notb
jno
push
inc
pushf
add
mov
insl
dec
aad
mov
andl
adc
mov
sbb
sbb
int3
jb
sbb
sbbl
cmp
mov
ficoml
dec
mov
mov
mov
leave
and
lods
out
in
sbb
imul
sbb
push
mov
sub
sbb
leave
add
push
push
dec
stc
lea
jnp
pop
pop
cltd
fcmovnu
xchg
sti
dec
sbb
pushf
cmp
jp
mov
push
imul
push
arpl
cld
fcompl
imul
mov
push
jg
sub
mov
fisttps
mov
sbb
cmp
jne
aas
cmp
inc
mov
mov
jae
mov
xchg
inc
sub
jg
xor
inc
sbb
xor
fimull
and
rcrl
hlt
jecxz
fisttpl
int3
mov
ret
scas
or
in
fldt
cltd
cmpb
inc
fcoml
push
xorl
xchg
or
dec
or
pop
jg
mov
test
pop
subb
pop
adc
push
inc
mov
inc
faddp
mov
lds
xchg
in
or
dec
ds
fucomp
test
sbb
insb
jg
inc
mov
push
dec
test
jmp
add
movd
push
ds
arpl
rorb
lret
bound
lret
pop
mov
loope
aad
xchg
xchg
xchg
repnz
imul
push
arpl
sub
xchg
push
iret
stos
adc
in
les
shrl
enter
sbb
mov
in
stos
je
adc
in
adc
imul
mov
or
add
data16
cmp
shr
mov
jp
mov
xchg
or
or
xchg
sub
andb
jmp
xor
sbb
inc
test
shlb
scas
cltd
fsubr
xchg
rcrl
movsl
pop
sbb
xlat
fwait
sbb
xor
iret
jnp
sbb
in
lret
inc
add
and
repnz
mov
mov
dec
inc
sbb
in
and
adc
popa
iret
test
push
mov
imul
vmovups
ja
or
lahf
fs
push
add
sarb
subl
cmp
mov
ljmp
xor
movsl
mov
jne
pop
push
adc
sbb
or
imul
ljmp
shl
outsl
incb
test
in
sbb
aaa
roll
cmp
sbb
ljmp
add
lcall
pop
ss
sbb
fisttpl
test
ljmp
adc
mov
cs
dec
pop
cli
rcll
push
jge
mov
xchg
popa
out
add
lcall
or
sub
ret
sbb
int
add
mov
dec
push
jmp
or
std
push
mov
sub
jno
xchg
sub
jno
int3
dec
sbb
lock
lods
rcl
lret
sbb
sahf
xor
pop
jno
pop
lods
insb
neg
push
mov
repnz
dec
and
cmp
push
sbb
xor
jle
dec
xor
out
or
sarl
pop
in
cmpsb
xchg
xor
or
pop
mov
rcr
fsubrs
shll
xor
cmp
cmc
frstor
fld
jne
out
loop
xor
hlt
add
imul
xor
rolb
rol
jb
out
mov
rcl
push
dec
stos
sbb
leave
lret
out
xchg
fnstenv
out
test
lock
int
cmc
ror
sbb
jne
loopne
inc
mov
fiaddl
loope
mov
sbb
pop
jl
insl
xor
bound
mov
aas
neg
and
inc
jne
frstor
pop
mov
pusha
pop
in
sbb
xor
in
xchg
fwait
mov
or
push
mov
sbb
adc
sub
sub
xchg
push
push
adc
test
popa
dec
sbb
pop
add
xchg
insl
jae
arpl
sbb
dec
insl
sbb
test
mov
test
mov
inc
lods
cmpsb
stos
int
bound
and
pop
mov
ss
jmp
rcl
dec
dec
mov
or
mov
xchg
xchg
repnz
jle
rclb
jp
sbb
adc
lock
cwtl
imul
ret
add
push
pop
or
push
push
in
insb
sbb
adcb
inc
and
dec
and
or
mov
sbb
lcall
test
ret
das
rcll
push
mov
push
dec
imull
lret
out
and
shll
and
mov
lahf
or
in
jae
bound
popf
pop
jp
repz
mov
mov
repnz
cmp
pop
ffree
or
call
dec
sbb
sbb
fstpl
add
adc
neg
pop
shlb
push
sbb
push
addr16
test
push
orb
lods
dec
pop
shll
out
aaa
test
push
dec
stos
xchg
out
mov
push
fildl
aas
push
rol
and
inc
sbb
rol
mov
xor
rorl
pop
nop
loop
and
xchg
cmp
rclb
xchg
mov
mov
stos
push
sbb
xchg
push
inc
push
jl
orb
data16
mov
in
pop
dec
xchg
sub
pushf
out
ss
rol
gs
push
loop
add
inc
sbb
pop
lods
mov
icebp
mov
mov
aas
push
ds
repnz
lret
lods
std
outsb
sub
cli
sti
add
fwait
lea
in
scas
lret
enter
les
xor
loope
jnp
sbb
lret
stos
pushw
outsl
or
sub
aad
jg
outsb
pop
int
sub
fmull
fcomps
gs
sarb
xchg
cs
pop
dec
lret
inc
gs
sbbb
hlt
sbb
pop
ret
loop
jnp
cld
ss
stos
iret
jle
xor
mov
jle
cmp
aam
fstpl
ret
inc
repnz
adc
loop
in
xchg
pop
cmc
add
push
mov
ret
dec
fiadds
in
cwtl
push
cmp
cli
or
nop
decb
push
sub
push
arpl
adc
enter
subb
fdivp
lret
mov
dec
lret
inc
mov
test
mov
or
or
out
fmul
sub
inc
mov
mov
sti
cmp
jle
sub
and
dec
jae
sbb
and
fstpl
dec
test
jmp
shrb
push
inc
or
hlt
jg
mov
stos
inc
dec
sbb
dec
xlat
or
and
push
sbb
xchg
movsl
xor
dec
lods
inc
out
scas
inc
push
pop
mov
ds
xchg
mov
jmp
xor
fcomip
negb
sbb
shll
push
sbbl
push
cld
or
sbb
xor
cmp
fisubs
sbb
lcall
mov
popf
in
fsubs
fwait
loope
ljmp
jns
mov
sbb
ja
adc
scas
out
mov
pop
lahf
inc
cld
loop
sti
push
repnz
lcall
rcrb
loope
cmp
pop
or
or
lds
fcomps
shll
push
push
insl
faddl
xor
jns
sub
sbb
and
loope
mov
cltd
and
out
inc
cltd
push
or
adc
push
push
mov
xor
imul
and
inc
fs
fcmovnbe
cltd
sbb
repz
test
jge
cmp
shll
pop
pushl
mov
dec
cmp
xor
movb
xor
push
faddl
and
aam
dec
mov
add
push
jl
lret
xchg
pusha
dec
aam
cs
imul
or
and
rcrl
push
xlat
faddl
scas
insb
lret
jns
mov
test
fbstp
adc
shl
dec
imul
shl
subb
jge
mov
and
inc
dec
sbb
inc
shrb
stos
outsb
jo
xlat
dec
mov
dec
push
negb
addr16
bound
stc
dec
push
sbb
inc
jecxz
lods
lock
mov
cmc
imulb
testl
dec
sti
loope
push
jmp
mov
sbb
aaa
or
mov
adc
into
push
mulb
cmp
xor
dec
lock
int3
repnz
xchg
pop
std
sti
ret
lea
cs
mov
je
subl
xor
call
cmpl
fadd
data16
pop
stos
lahf
data16
aaa
imul
lock
cmp
sbb
sbb
cwtl
in
cmc
mov
xorl
inc
stos
inc
hlt
sbb
cmc
pop
jne
int3
inc
cmpsl
jno
insl
mov
xchg
mov
cmc
popf
jp
cld
or
push
sbb
lods
jns
and
mov
dec
push
fs
pusha
and
rcll
pushf
jmp
test
add
xchg
ss
cli
je
jae
mov
cmp
pop
stos
sub
pop
xchg
fcompl
lret
lds
out
or
in
aas
or
sbb
loope
jg
push
cli
push
jae
push
xor
lods
fldt
cmp
fldl
ljmp
sbb
inc
cmp
sub
sub
cmc
fsubrs
fnstsw
cmp
loopne
movsl
xor
fsubr
gs
or
mov
sbbl
mov
repnz
les
inc
sbb
xor
mov
lea
sub
test
aas
cmpsb
add
adc
xchg
pop
leave
or
loope
lcall
mov
inc
out
outsl
adc
sbb
push
fisttpll
sbbl
cli
fdiv
sbb
jecxz,pt
inc
or
sbb
adc
sub
imul
mov
mov
pop
push
js
cmpl
sub
pop
dec
retw
rorb
mov
jae
cmpl
or
adc
shl
int3
add
jecxz
sbb
hlt
js
mov
mov
push
aad
xchg
pop
jmp
lret
int3
mov
adc
xchg
xchg
pop
push
imul
push
cmp
mov
ds
es
ret
sub
loopne
and
popf
or
enter
rcrb
push
stos
or
pop
cmpsb
pop
imul
lods
cmp
arpl
outsl
aad
ficompl
dec
nop
adc
mov
iret
cmp
mov
xchg
mov
addr16
mov
or
imul
repnz
loope
push
sbb
fwait
pop
incb
movsl
pop
sbb
insl
pop
dec
lock
jne
int3
jl
lret
push
insb
ret
pop
adc
jg
sbb
or
mov
push
add
mov
in
adc
out
mov
out
xor
js
shrl
jne
xor
std
jmp
add
popf
mov
sbb
ds
out
jbe
pop
and
test
cli
sbb
adc
inc
or
sbb
aam
and
mov
xorb
or
jl
rcrl
fcoms
addb
scas
jnp
dec
notb
jo
cmp
lods
iret
test
mov
add
cmp
clc
xor
adc
stos
push
dec
cwtl
enter
pop
push
cmp
mov
dec
add
int
pop
sti
inc
sub
lcall
jg
out
mov
rcll
shll
and
mov
inc
cmp
adcl
pushf
lret
dec
jecxz
mov
mov
fcoml
lds
xchg
mov
or
insb
dec
and
cli
cmp
fiaddl
loopne
enter
shlb
cmp
pop
or
lods
es
pop
sbbb
and
mov
pop
push
xor
push
stos
fwait
ret
out
test
xchg
dec
sti
xor
iret
cmc
jb
ljmp
fcoml
pop
faddl
push
cmpsb
cmp
fcom
lret
ljmp
mov
rcl
dec
push
fsubs
sub
js
shrl
cmc
stos
lret
repz
xor
lds
and
mov
sbb
ss
lret
aam
mov
rcrb
call
lahf
enter
push
push
mov
fstps
ds
stos
sbb
out
in
imul
or
out
add
sbb
clc
mov
outsl
int
sbb
scas
add
inc
add
faddl
lret
pop
sbb
in
add
dec
dec
addr16
mov
lods
dec
in
rcr
ret
jnp
pop
fdivl
jle
add
jecxz
repz
inc
pop
cmp
cmp
es
mov
add
in
icebp
sbb
mov
aas
add
jb
fildll
iret
imul
mov
fcompl
lahf
mov
sbb
and
adc
or
data16
adc
into
lea
pop
mov
lret
test
repnz
in
push
sbb
lods
addl
fnstsw
sbb
xchg
xchg
jne
test
push
sbb
sbb
push
xchg
nop
pop
sahf
add
adcl
jge
and
mov
inc
popa
imul
pop
or
fbstp
sarb
cmp
stos
cs
pop
lret
cld
xor
pop
xor
mov
ror
int3
sbb
adc
fwait
data16
cmp
fucomi
jp
push
or
push
dec
cs
mov
pop
add
pop
push
pop
mov
cmp
add
jp
es
addb
inc
stos
pop
add
mull
push
inc
push
sbb
push
fxch
mov
pop
sbb
sbb
jg
pop
neg
lea
js
lea
sbb
push
dec
and
adc
dec
sbb
adc
jecxz
lock
adc
gs
sbb
sbb
pop
mov
dec
nop
shr
dec
inc
ljmp
xchg
pop
jcxz
xor
rcpps
repz
rcrb
and
mov
or
je
lock
vpaddb
mov
or
add
pop
cmp
std
sbb
test
repnz
lret
adc
and
dec
xor
xchg
repnz
rcrb
popf
into
inc
adc
cmp
lods
sbb
add
movb
imul
negl
es
ss
lea
mov
inc
femms
jmp
cli
sub
add
dec
sub
cmp
ret
mov
lret
sbb
insb
inc
mov
stc
gs
inc
mov
cmp
push
aad
ss
pop
inc
mov
outsl
jmp
add
aad
das
shlb
dec
jae
mov
xor
sbb
addr16
push
int
shrl
lret
add
sbb
ss
jecxz
jmp
out
mov
cmpsl
dec
imul
lret
rorb
xchg
xor
movsl
push
mov
fcmovnb
pop
sti
mov
std
xchg
push
or
and
sahf
loope
cld
repz
lods
outsl
ja
add
lret
jns
lcall
mov
inc
xor
xchg
call
lcall
jno
ja
inc
in
pop
test
test
inc
sub
mov
pop
rcll
imul
jns
mov
popa
xchg
sbb
add
mov
loop
xor
or
neg
int
sub
cmp
outsl
or
mov
cmp
stos
jmp
adc
and
stos
push
daa
jmp
sub
push
jae
adc
loopne
outsb
lea
lret
fnstsw
loope
rclb
or
xchg
inc
cltd
scas
lret
jno
sahf
in
inc
nop
ret
outsl
fcompl
rol
lret
fstl
mov
mov
or
sti
call
and
mov
lret
test
aas
dec
fiaddl
loopne
arpl
add
mov
push
lret
adc
mov
adc
popf
push
lret
jae
push
ja
dec
rolb
sar
xchg
jmp
sbb
iret
mov
loop
pminub
mov
jns
rcll
lea
jb
data16
in
jne
inc
push
cli
stos
dec
ret
adcb
xchg
jmp
or
shr
add
pop
jmp
in
icebp
ror
outsl
pusha
sahf
or
dec
sub
push
or
lods
inc
into
in
add
pop
out
lret
jg
mov
ret
clc
aad
aam
sbb
fstl
lods
rcrb
cmp
and
aaa
addl
loopne
xchg
mov
int3
inc
fld
rorb
decl
or
jmp
sti
cmpsb
gs
mov
xor
adcb
dec
xor
jnp
jmp
sub
nop
mov
int3
jns
lcall
in
dec
in
lret
jmp
or
lret
fistpl
or
push
ret
movsl
xchg
adc
lret
or
nop
and
fisubrl
fildl
in
adc
jns
in
fnstcw
enter
dec
pop
stos
scas
jecxz
adc
sub
stos
sbb
mov
xchg
xchg
sbb
inc
repnz
lret
sahf
insb
ja
push
jne
adc
or
arpl
sbb
inc
leave
int
cmpsl
inc
inc
pop
enter
sub
decb
jp
jbe
pop
arpl
jnp
sbb
dec
pop
sbb
mov
lret
cli
int
rcl
push
out
or
mov
sti
inc
push
lea
or
aas
push
or
sbb
xor
sti
and
xchg
je
scas
repnz
sub
xchg
sti
pop
stos
xor
mov
fcomps
ffreep
dec
mov
mov
mov
ds
xor
push
fsubrl
scas
leave
inc
in
insb
ret
sub
mov
push
mov
add
aad
sbb
jbe
into
xchg
fwait
jnp
fdivs
jbe
out
xor
dec
nop
sbb
push
dec
ret
xchg
dec
jb
mov
mov
loop
inc
cmpsl
shrb
sbb
ljmp
mov
lret
mov
sbb
sub
lret
pusha
fsub
pop
hlt
leave
or
mov
pop
pushw
imul
repz
into
ret
xchg
repz
ljmp
xchg
out
fmuls
pop
cmp
jmp
call
out
insl
popf
lret
cmp
dec
dec
xor
imul
lret
lret
xor
test
lea
cs
push
insb
rclb
inc
inc
mov
ffree
icebp
pop
arpl
jg
ffreep
js
pop
lds
and
jno
mov
lretw
mov
pop
adc
scas
stos
sub
dec
out
or
mov
xchg
adc
jle
repnz
fimull
outsl
lods
imul
orl
fcomps
xchg
cltd
cmc
lret
jl
jnp
fidivl
sbb
bswap
aaa
jle
fwait
xchg
pop
xor
cmpsb
aam
xor
mov
aas
call
sbb
faddl
pop
cli
pop
ja
mov
or
lret
push
cmp
enter
sbb
fdivrs
mov
xchg
push
dec
push
aam
or
cld
lahf
lods
fwait
pop
mov
imul
enter
and
pushf
fisttpl
ljmp
fsubl
sbb
add
jecxz
and
and
mov
rcr
insb
xor
mov
sbb
dec
popa
add
pop
daa
sbb
int
jmp
stos
inc
pop
lret
jnp
repz
sub
pop
jae
dec
push
int
add
sub
dec
test
sub
and
cli
ret
push
leave
cmpsl
lret
mov
in
add
xchg
aam
push
in
stos
sub
mov
mov
inc
pop
test
inc
dec
imul
cmp
push
cmp
mov
jle
xchg
int3
and
add
scas
imul
fildl
push
lret
jl
outsb
and
das
mov
enter
sti
les
cwtl
push
xor
rcrl
xchg
xchg
fs
sbb
inc
jecxz
mov
xor
mov
xchg
sbb
mov
or
jp
cmp
repz
test
mov
mov
sub
sbb
pop
mov
lretw
arpl
xchg
and
lcall
ficomps
mov
aam
jge
add
ret
sahf
sbb
cmpsl
sbb
je
mov
mov
ret
or
filds
int
lods
out
mov
lret
push
fwait
test
mov
scas
jnp
ret
add
jp
fisubrl
sbb
shlb
cmp
push
dec
mov
dec
fmul
sbb
inc
mov
movl
xor
adc
and
out
xlat
sbbl
mov
cmc
flds
jmp
int3
faddl
popa
sub
rorb
int3
shl
inc
jnp
test
imul
cwtl
popf
cmpb
sbb
jns
addr16
mov
aad
stos
jns
stos
jg
dec
jns
andl
xlat
cmp
mov
inc
pop
mov
mov
aad
cmp
repz
or
in
ljmp
ret
pusha
lds
loope
mov
jg
fimuls
enter
fisttpll
inc
inc
pop
in
xchg
mov
fs
out
add
push
xlat
sbb
jl
cmc
pop
shlb
sub
push
or
adc
stos
adc
adcb
sbb
fadd
mov
ret
addr16
loop
jp
cli
sub
js
mov
pop
add
xor
int
jnp
mov
popf
sahf
fildll
push
mov
or
fucomp
xchg
ficoml
sahf
movsl
mov
mov
ds
adc
inc
imul
stos
jns
and
cld
sbb
scas
cmc
or
addr16
fldenv
add
rorl
pusha
sbb
leave
cmp
xchg
sbb
cmp
xorl
mov
fnstsw
bound
inc
pop
jns
or
test
sarl
out
aad
or
jae
mov
ljmp
loop
stc
scas
inc
fdivr
dec
repnz
stos
dec
pusha
loope
mov
gs
jl
push
imul
jmp
inc
or
cmp
orb
and
loop
push
aam
shll
push
or
lcall
repz
and
mov
lea
rorl
ret
lahf
mov
xor
and
addr16
push
aas
je
push
arpl
sbb
fwait
and
fadd
xchg
movsb
sbb
int3
and
push
ret
into
leave
repz
mov
push
ret
mov
pushf
movsl
icebp
xchg
mov
insl
pop
or
lahf
enter
jae
fcmovb
mov
mov
lods
dec
aas
xchg
mov
movsb
pop
cmp
fs
pop
dec
jo
mov
in
call
fisttpl
sub
scas
hlt
cmpsb
or
mov
adc
pop
xchg
cli
mov
fdivp
ror
push
pop
ja
outsl
dec
fldl
adc
pop
cwtl
ret
int3
js
mov
dec
adc
mov
dec
test
cs
lds
sbb
movl
inc
inc
stos
cmc
xchg
mov
rcrl
in
stos
in
xchg
ds
lcall
push
and
mov
sub
fnsave
out
mov
jecxz
mov
int
mov
xchg
mov
sbb
cmp
push
stc
pop
and
push
icebp
and
ret
xor
and
xchg
dec
insl
inc
sbb
push
shrb
xlat
ret
and
dec
sbb
sbb
ret
ljmp
xor
sbb
dec
inc
mov
gs
xchg
mov
dec
dec
sbb
lcall
adc
xchg
sbb
fwait
push
lret
data16
sahf
lret
pop
lock
pop
add
add
jnp
fisubs
movl
mov
dec
pop
sti
cmp
cltd
cmp
daa
out
rorb
pop
xor
cmpsb
aaa
lds
mov
mov
imul
mov
pop
jnp
dec
out
mov
xchg
rol
test
mov
or
lock
pop
cs
cmpsl
ljmp
rorl
sahf
out
cmpsl
addl
movl
push
cwtl
jnp
clc
divl
imul
xlat
mov
add
ja
mov
movsl
jne
xchg
add
xchg
mov
jnp
fisubrl
fidivrs
jae
sti
inc
ds
and
sbb
scas
in
mov
mov
push
jne
std
push
xlat
fsubl
jl
push
sbb
push
movsb
pop
scas
sahf
add
in
mulb
fsubl
dec
fcmovnb
lret
sti
pop
mov
mov
arpl
sahf
inc
fwait
inc
sbb
aam
ret
imul
mov
push
movl
imul
mov
push
mov
es
movhps
arpl
es
sti
insl
mov
inc
inc
rcrl
cmp
test
xor
test
sbb
mov
mov
xchg
loop
les
cmp
fsubrl
or
sbb
pop
comiss
dec
lds
mov
sbb
sbb
mov
into
repz
addr16
pop
lcall
es
pop
lret
nop
test
jge
pop
jmp
es
cmpsb
add
jae,pt
xlat
int3
mov
add
fwait
dec
fsubs
push
jae
test
sbb
cmp
out
rcr
lods
inc
call
call
stos
rcll
dec
ret
jne
rol
sbb
fsubrp
mov
stc
dec
fisttpll
sbb
movl
pop
popa
and
sarl
inc
add
cli
pop
sti
fistps
or
xorl
cli
cld
leave
int3
mov
out
sbb
push
add
xchg
test
or
cs
imul
xchg
mov
mov
push
xchg
lret
pop
sbb
rcl
out
repnz
push
cmpb
sbb
outsl
lds
push
mov
fldenv
sub
jne
fwait
into
outsl
movsl
outsb
cmpl
hlt
ljmp
dec
fsts
or
sti
sbb
inc
adcl
xchg
lcall
xor
je
pop
inc
cltd
std
xor
out
pop
js
fidivs
scas
bound
jno
ljmp
negl
cltd
xchg
imul
sahf
aas
jb
xor
sub
int3
inc
and
adc
push
xchg
mov
sub
in
jmp
sbb
xchg
icebp
sti
arpl
pop
pop
loope
repnz
mov
sbb
jns
int
mov
jg
cmp
fistl
pop
jnp
mov
rolb
roll
and
add
mov
data16
or
cmp
fs
push
xor
cmp
mov
es
jo
mov
pushf
int
cmp
movsl
pop
arpl
popl
fldl
rcrl
dec
push
push
lds
cmpsb
mov
sbb
test
sbb
and
cli
push
int3
sti
cmp
sbb
aas
sub
push
dec
repnz
ret
xchg
fisttpl
sub
push
pop
mov
mov
jg
aas
ret
lods
arpl
sarb
inc
pop
pop
rclb
icebp
orl
mov
faddl
inc
cwtl
mov
xlat
fwait
mov
int
inc
pop
pushfw
jae
cmpsb
xlat
ds
fbstp
inc
shrb
rcll
sbb
mov
jb
popf
out
test
cli
iret
and
repnz
sub
es
movsl
pop
jl
push
sbb
or
pop
xor
or
mov
xorl
mov
jecxz
dec
movsl
popa
jmp
xor
push
cwtl
jmp
sub
mov
jo
pop
imul
stc
cmpsl
sbb
aas
lods
hlt
icebp
out
fldenv
xchg
and
add
mov
ds
fistpll
orb
outsl
mov
pop
mov
or
jg
lods
je
jns
test
push
push
mov
mov
int3
loope
mov
sbb
adc
cld
dec
mov
mov
cmpsl
lea
jae
sbb
dec
jg
aad
mov
arpl
xor
sarb
ret
leave
mov
sub
inc
lret
mov
sarb
cltd
dec
mov
dec
dec
pop
pusha
mov
lret
sbbb
and
test
pop
frstor
sub
fstpl
rcr
int3
fcompl
imul
repnz
popa
sti
sbb
or
lds
orl
fsubrl
mov
add
push
pop
sbb
jp
pusha
inc
test
mov
mov
fsubrs
daa
ds
popf
btc
arpl
xchg
jecxz
lds
cmp
pop
neg
fs
leave
pop
sbb
in
mov
inc
lret
dec
jae
cmpb
addr16
dec
out
fwait
jo
cmp
in
mov
cmp
into
jb
cmp
out
xchg
imul
pop
or
or
inc
sbb
stc
popa
push
sar
popf
sti
imul
lcall
imul
mov
add
popa
dec
lds
int
ror
or
nop
ret
xor
ds
popf
into
arpl
data16
fdivl
sub
adc
in
decb
lret
out
push
scas
jae
gs
dec
das
ret
adc
shrl
xchg
ds
inc
filds
push
out
xlat
scas
push
fsubs
fcmovu
test
pushf
imul
sbb
test
jne
test
leave
pop
int
ja
stos
jbe
sbb
imul
inc
sub
int
pop
repz
fucomp
notl
dec
repnz
shll
addb
xor
mov
leave
push
jbe
mov
ret
cmp
ja
leave
add
push
cld
pop
push
test
sbb
jge
sbb
test
movsb
cmpsl
mov
aad
fstp
mov
sbb
xchg
test
mov
or
int
push
cmp
push
mov
jg
sub
ret
lods
xchg
sub
lret
mov
pop
repnz
iret
fwait
out
cmp
or
jbe
in
push
je
pop
call
mov
repnz
dec
imul
or
sar
inc
cmp
out
lock
insl
pushf
xchg
jp
xchg
pop
pop
or
dec
insb
fwait
mov
lcall
gs
pop
lea
stos
push
ss
xchg
sub
mov
out
or
inc
pop
loop
out
xor
lods
into
lds
dec
xchg
push
dec
and
lds
lcall
adc
jnp
lret
aaa
mov
cs
push
sbb
mov
mov
sbb
add
inc
repnz
xchg
and
pop
std
lret
mov
fmull
hlt
repz
movl
sbb
pop
adc
jnp
cmp
sub
clc
or
cs
cmpl
repnz
pop
push
pop
fbld
lret
or
fildl
push
push
lcall
jmp
leave
jbe
adc
mov
lods
adc
sbb
lock
inc
js
fisttpll
jl
dec
adc
fldz
rcr
adc
cmp
jecxz
loop
ret
xor
lea
loopne
lods
lea
inc
add
stos
mov
cs
fdivs
jnp
mov
repnz
sub
aaa
sub
xor
mov
popa
imul
icebp
out
mov
mov
cld
popf
jmp
sbb
repnz
inc
and
rcll
popa
cld
push
lock
and
mov
stos
sbb
pop
test
sbb
fnsetpm(287
add
and
jne
ljmp
inc
xchg
into
in
nop
push
test
lods
cmp
data16
pop
adc
add
sbb
out
adc
jb
adc
out
cwtl
shll
fstpl
stos
adc
mov
inc
hlt
jno
inc
repnz
mov
and
mov
clc
xor
xchg
mov
int
repz
add
mov
mov
stos
cmp
pop
cmp
sub
sub
lret
xorl
and
push
ds
inc
mov
xor
mov
jno
xchg
cmp
mov
xor
inc
xchg
dec
lret
popf
jnp
add
fld1
scas
insb
jnp
push
push
test
pop
lods
gs
int3
shrb
push
loop
ret
fdivr
fidivrl
jmp
push
outsb
in
dec
mov
inc
push
lds
mov
sbb
pop
ret
sbb
sbb
insl
sbb
mov
ret
pop
mov
repnz
out
mov
cwtl
sbb
jge
lret
jnp
sbb
data16
fwait
insl
inc
xlat
xchg
mov
stc
sbb
mov
cmp
es
mov
jmp
lock
xchg
testb
cmpsl
and
ret
ja
push
test
imul
sti
gs
icebp
out
inc
hlt
mul
daa
add
sti
aam
push
push
sarb
adc
inc
std
pushf
cli
or
xchg
sbb
sbb
fistpl
lret
mov
push
push
int3
fsubrl
sbb
bound
sbb
int
mov
mov
stos
mov
outsl
xor
mov
jnp
test
js
sbb
jne
movsl
sub
out
dec
cli
fdivl
mov
mov
sbb
push
mov
and
rcr
mov
add
jno
rorb
mov
fmul
push
pop
loope
bound
adc
out
or
mov
ss
mov
and
in
inc
xchg
sbb
lods
mov
add
mov
test
fcoml
addr16
cmc
adc
add
in
cld
or
sbb
cmc
ret
cmp
in
ja
push
dec
lret
call
sub
xchg
push
int3
xchg
sbb
outsl
add
dec
sbb
and
sbb
rorl
fcmovbe
fstl
hlt
inc
popf
lret
jp
aad
sbb
stos
ljmp
adc
sbb
add
ja
or
inc
mov
fadds
cmpsb
int
shlb
loope
adcb
outsl
mov
in
repz
mov
lret
and
inc
scas
sbb
mov
out
jl
mov
addb
cli
movsb
addl
in
adc
lahf
push
ljmpw
in
subb
mov
mov
sbb
mov
pop
daa
ja
add
xchg
mov
loopne
addr16
xchg
mov
add
push
arpl
fcomps
ror
jo
sub
inc
mov
imul
imul
and
mov
movsl
or
shld
imul
mov
cmpsl
mov
subl
pop
mov
xlat
mov
push
ljmp
dec
pop
ret
test
in
sbb
jg
int3
nop
int
fldenv
cmpsb
xchg
enter
enter
mov
jmp
pop
fsts
in
mov
sbb
jge
int3
ljmp
insl
pop
cmp
loope
cmpsb
mov
sbb
ljmp
add
in
sahf
and
mov
inc
or
nopl
stos
push
jmp
ret
data16
add
ret
cs
inc
cmpsb
pxor
jb
or
fisttpl
imul
negl
jb
adc
aas
cld
xchg
or
scas
call
lret
aam
jne
sub
add
dec
addr16
repz
fucomip
jl
mov
jno
pop
inc
icebp
flds
fcoms
jno
fwait
iret
push
repnz
ss
cmc
jno
push
rclb
xchg
clc
enter
pop
lret
lret
fnstcw
sbb
add
mov
jno
sbb
adc
div
lret
sub
aam
mov
cmpsb
outsl
pop
inc
in
xchg
jnp
ror
lods
data16
sbb
fwait
addr16
dec
outsl
dec
out
fwait
popa
ljmp
pop
mov
imul
scas
iret
mov
daa
add
jle
repnz
mov
sbb
daa
je
jae
jg
mov
pop
sub
pop
fsts
mov
xchg
push
fnstenv
repz
push
xchg
leave
int
stos
mov
inc
lds
stc
fisubl
cli
in
mov
mov
icebp
ss
mov
enter
ficoml
jmp
mov
and
push
or
mov
push
inc
dec
cmp
mov
sarl
xchg
mov
xchg
lret
cmpsb
sbb
sbb
dec
popf
pop
aad
xor
or
and
push
fwait
sub
inc
mov
outsb
mov
test
mov
dec
lret
mov
test
sub
mov
push
out
mov
mov
pop
mov
sub
pop
andb
sarl
jae
add
imul
cmp
test
sahf
test
out
fwait
xor
or
pop
mov
repz
jno
inc
adc
mov
aaa
jo
mov
mov
or
jnp
in
pusha
and
iret
aam
test
mov
push
mov
aam
jmp
test
inc
dec
jb
xchg
cmpsl
push
inc
cmp
inc
and
repz
hlt
std
adc
sbb
jae
les
incb
roll
fadds
cmp
push
dec
cs
shlb
into
fiadds
xor
inc
jns
cmpsb
insb
mov
imul
jne
adc
popa
les
call
orb
mul
lds
jmp
jbe
xor
or
subl
aad
data16
data16
adc
lods
lds
push
cmp
cmc
mov
sbb
test
sub
cmp
sbb
mov
jle
arpl
mov
push
pusha
inc
ds
pop
sbb
add
int3
adc
test
stos
aam
repz
hlt
adc
rcr
lcall
or
pop
jmp
in
int
push
mov
lret
out
sbb
push
in
lods
addr16
dec
add
aas
cmp
push
loop,pn
jnp
xchg
fcoms
sbb
repnz
sbb
movb
stos
aam
mov
mov
dec
in
push
mov
jmp
mov
xor
adc
xor
lret
in
icebp
call
push
je
ret
adc
mov
push
leave
pop
imul
xchg
push
arpl
out
sbb
pop
out
sarl
aas
sbb
cmp
mov
mov
das
pop
rcrb
pop
sbb
or
sbb
popf
mov
inc
pop
or
inc
inc
mov
sbb
call
rcrl
fistpll
test
mov
fdivs
add
sahf
pushf
dec
rclb
xchg
aas
loopne
sbb
scas
mov
lcall
xchg
dec
lahf
xchg
sub
push
fidivrs
inc
inc
inc
mov
ret
es
fldl
mov
pop
es
leave
sbb
xchg
and
lcall
jb
dec
add
mov
es
add
ret
int3
gs
mov
mov
push
jae
int3
push
xchg
sub
inc
dec
sbb
xchg
ret
push
push
stos
jb
addb
xchg
xchg
data16
jne
inc
out
repz
xchg
aaa
arpl
inc
sbb
sub
xchg
pop
dec
xchg
or
lea
xchg
sub
jmp
pavgw
push
xchg
push
jecxz
or
dec
sub
sbb
daa
in
data16
jl
roll
loope
stos
leave
mov
dec
daa
popf
jp
pusha
mov
xchg
and
cwtl
sbb
dec
pop
fcom
push
lods
sbb
std
jb
call
xchg
xchg
in
and
imulb
rcrb
jns
xchg
and
cltd
pop
lea
pop
jle
lret
mov
in
mov
jns
dec
fcoml
mov
fxch
repz
insb
inc
cmp
xorl
xor
lret
mov
int
mov
cmp
jmp
rorb
pop
xor
je
mov
shl
dec
inc
xor
mov
and
xlat
add
fimuls
dec
sbb
ss
sub
aas
in
ss
xlat
das
sarb
inc
sbb
sbb
cmpsb
push
pop
fwait
mov
loopne
aas
pushf
dec
loope
or
sbb
cmc
in
push
and
lcall
mov
pop
fld
rol
mov
ds
sub
fnstcw
jl
scas
fcomps
data16
daa
rcrl
jns
loopne
adc
cwtl
inc
push
cld
push
sbb
lret
sarb
xchg
popa
sbb
xchg
jae
mov
pop
mov
imul
xlat
mov
mov
xchg
dec
jnp
dec
and
repnz
data16
cli
sub
cmpb
cmpsl
fsubrs
arpl
ret
jmp
cmp
leave
pop
jecxz
ficomps
mov
out
fbstp
sbb
sub
imul
stos
out
test
cmp
inc
leave
aam
popf
cwtl
lea
loop
test
ds
repz
sbb
dec
add
cmp
lret
cwtl
adc
lcall
push
jl
fsubs
dec
pop
call
cmpb
jo
mov
sbb
daa
test
mov
inc
imul
idivl
faddl
in
sub
icebp
rcrl
sub
stos
fucomip
cli
cmp
ja
ljmp
enter
mov
inc
mov
loopne
fcompl
stc
int3
mov
sub
mov
shlb
dec
into
fldenv
xchg
xor
mov
pop
jno
or
push
mov
sub
and
mov
pusha
dec
out
jb
and
out
arpl
outsb
movsb
push
push
hlt
push
in
shll
mov
jl
mov
fsubrs
jnp
rol
jge
mov
call
inc
or
sub
shl
pop
dec
leave
dec
push
cmpsl
add
arpl
aam
mov
lahf
fucomp
sbb
jnp
lret
mov
daa
in
fildll
ljmp
dec
out
fwait
sbb
fs
and
fucomip
add
dec
lods
push
mov
enter
mov
js
or
lret
adc
ret
rcrb
sbb
stos
pop
sbb
mov
out
or
loop
es
lods
ljmp
cmpsb
out
iret
sbb
test
push
lcall
adc
inc
jae
fisttpl
out
or
test
test
cmp
scas
jecxz
jp
push
jns
cld
pop
sbb
mov
inc
in
sahf
in
push
mov
sbb
jb
pop
imul
std
adc
or
jmp
lock
fdivr
call
jecxz
enter
dec
dec
clc
subb
sbb
outsl
test
jg
popf
jle
mov
cmp
sbb
xchg
pop
inc
test
cld
adc
fst
push
and
ret
jns
inc
mov
or
mov
dec
inc
and
filds
add
aad
out
push
push
xchg
popa
dec
insb
fldenv
mov
imul
push
cs
aam
lret
insb
xchg
scas
mov
mov
mov
shl
inc
fidivl
iret
adcl
rcrl
xchg
add
stos
add
ret
mov
mov
sbb
dec
stc
fdivs
pop
inc
scas
adc
fldl
in
inc
into
insb
sti
push
fwait
jmp
ljmp
sbb
sub
shll
push
ss
sub
jb
mov
inc
push
sbb
jp
jne
orl
pop
sbb
std
mov
sbb
dec
sbb
in
xchg
faddp
jns
stos
out
fldcw
xor
shlb
cmp
adcb
xchg
leave
adc
sbb
sbb
lods
mov
lret
and
add
jge
enter
or
jmp
int3
xchg
mov
cld
std
cld
inc
mov
lret
imul
pushw
push
jecxz
push
sub
sbb
clc
jp
shlb
mov
adc
mov
mov
jmp
pop
jnp
daa
dec
jmp
mov
add
movsl
sub
jmp
sbb
leave
cltd
fcompl
jge
cli
icebp
cmpl
cmp
fsubrl
push
pop
inc
pop
cmpsb
add
and
ljmp
xor
and
mov
andl
pop
push
push
addr16
ss
std
sahf
pop
mov
fcoml
sbb
xor
mov
ljmp
shl
xlat
sbb
ja
xor
out
fsub
mov
sub
cmp
mov
repnz
sub
outsb
outsb
dec
loope
cmp
dec
dec
inc
lret
cmp
jne
push
cmp
cwtl
sti
sbb
inc
xchg
sbb
ja
pop
mov
adc
push
leave
mov
inc
pop
out
push
push
and
insl
in
mov
sub
aad
btc
add
movsb
out
inc
mov
sbb
jo
ret
es
repnz
ret
jge
jmp
push
jmp
xchg
mov
imul
cmp
xchg
pop
sub
lret
push
cld
sub
loope
mov
pop
mov
sarl
inc
mov
push
sbb
push
xchg
ljmp
or
cmp
or
idiv
stos
xor
mov
addb
ror
ja
dec
sub
cmp
sbb
fsubs
mov
dec
and
fidivrl
icebp
or
imul
adc
jae
pop
gs
jbe
ret
sbb
cmpsb
daa
mov
dec
mov
jmp
xor
add
ljmp
ret
sub
sbb
daa
adc
add
jbe
loop
mov
push
lods
dec
lret
repz
push
orb
popa
test
fwait
sbb
cmpsl
je
push
jmp
add
mov
sbb
ss
mov
cmp
imul
pop
jmp
mov
push
dec
sub
ljmp
dec
and
les
jecxz
mov
mov
push
pop
imul
aaa
cmp
fcoms
aas
fstpl
arpl
sub
and
sub
jle,pt
xchg
jb
sbb
movsb
and
mov
pop
xor
lock
divb
dec
dec
shl
inc
mov
cmpsl
add
add
cmovno
clc
mov
mov
xchg
js
cmp
mov
shl
push
jecxz
sub
stos
jnp
psraw
fs
mov
jmp
mov
cld
mov
negb
in
ljmp
scas
rcrl
sbb
cmp
jb
std
add
or
or
lds
cs
leave
mov
aaa
add
fisubrs
ret
lret
jb
in
outsl
insl
dec
mov
xor
xchg
leave
not
rcll
pushf
push
loopne
push
hlt
fstps
push
sub
mov
adc
jmp
imul
inc
rcrl
xchg
cmp
jne
mov
mov
pop
rcl
enter
imul
cmp
mov
lahf
pop
shll
ffreep
sub
and
test
in
adc
adc
clc
sbb
push
sbb
mov
mov
scas
int
aam
push
push
mov
dec
pop
mov
enter
dec
popa
call
adc
xchg
cmp
ret
sti
cmc
stos
pop
rcrl
negb
push
shr
push
pop
push
mov
pop
dec
test
int3
nop
test
lret
divl
xchg
add
imul
out
std
mov
adc
mov
loope
and
fs
inc
push
mov
pop
mov
lret
jbe
mov
sub
xchg
jbe
movsb
xchg
cmp
jmp
cmpl
lods
xchg
das
decb
popf
jp
movsb
orl
mov
push
jmp
or
mov
test
add
int3
mov
clc
repnz
inc
sbb
add
enter
adc
inc
int
mov
clc
mov
ret
jge
loopne
ss
fwait
addl
mov
dec
mov
leave
loopne
mov
cmp
in
sbbl
shl
addr16
ret
shl
loope
sbb
cld
lret
dec
or
je
hlt
sbb
jbe
sbb
nop
test
mov
movl
ljmp
xchg
inc
or
sub
test
push
sub
and
add
pop
sbb
int3
pop
aam
adc
fidivl
rep
and
fs
adc
lds
dec
out
imul
or
int
inc
in
bound
call
test
sbb
pop
adc
iret
scas
ljmp
cli
fidivl
jbe
cli
cs
mov
jge
stc
mov
jmp
sbb
sbb
int
fisubrl
sbb
mov
testb
mull
hlt
movsb
shll
jmp
iret
dec
sti
stc
fildll
imul
daa
movsl
scas
sbb
int3
mov
popa
dec
mov
add
lods
mov
dec
or
cmp
xlat
mov
mov
pop
dec
jae
repnz
cs
xor
sbb
call
lock
fidivrl
mov
mov
cwtl
movsb
xchg
ds
iret
data16
jge
ficoms
pop
icebp
sahf
movsb
call
hlt
sbb
dec
jb
sbb
addr16
ja
push
outsb
push
mov
adc
aam
xchg
xor
jbe
rcrl
sbb
popa
mov
icebp
je
sbb
into
sbb
xor
sbb
cmpl
clc
mov
jmp
jl
pop
add
add
pop
fldl
shrl
or
in
or
xor
mov
lea
xor
into
das
imul
aaa
push
cltd
mov
int
stc
jl
mov
jb
ljmp
hlt
mov
jge
and
shr
in
sahf
jge
out
int
sbb
pop
add
mov
test
mov
jecxz
sti
jle
iret
mov
inc
daa
pushf
lods
loope
jnp
outsl
pusha
test
inc
fidivrl
jne
cmp
cli
sbb
mov
es
rcrl
xchg
sbb
out
mov
mov
adc
or
cmp
adc
adc
sbb
jne
pushf
xor
movsl
dec
stc
push
call
jmp
cli
or
js
sbb
pop
sbb
movsb
mov
out
roll
dec
push
mov
inc
ljmp
add
jnp
out
push
andb
jmp
mov
sbb
ficoms
subb
lock
int3
aam
add
loopne
and
xchg
jmp
iret
sbb
fwait
daa
leave
popl
mov
xor
mov
cwtl
iret
jmp
cld
hlt
fnsave
mov
in
and
mov
or
mov
subb
xchg
cltd
out
xchg
nop
ficomps
hlt
sbb
fldt
movl
sbb
insb
jno
xchg
dec
enter
push
inc
xor
je
les
cmp
pop
xor
addr16
pusha
pop
fisubl
cmp
fldl
rclb
lods
ja
push
arpl
fcmovbe
ficoml
es
xchg
jmp
into
mov
int3
jg
roll
or
jno
pop
xchg
mov
mov
sbb
jo
call
dec
ljmp
xor
int
test
jmp
cmc
mov
mov
rcr
push
xchg
cmpsb
gs
lret
jl
fsubp
fdivs
and
sbb
loope
cmc
rcr
subl
sub
clc
lods
add
xchg
imul
jns
pop
mov
sti
pop
sbb
jbe
sbb
jmp
fcmovnb
push
bound
ljmp
es
dec
lahf
sbb
fstl
mov
in
cwtl
arpl
sbbl
and
sbb
jmp
out
das
mov
push
ja
sub
xchg
pop
ficoms
and
inc
push
jb
or
mov
mov
orl
out
mov
repnz
aad
or
dec
jns
lods
xchg
cmp
clc
popa
into
jae
push
fistps
sbb
mov
insl
fwait
mov
out
or
xor
pop
ss
dec
lcall
sbb
mov
pop
rorl
or
sbb
outsb
pushf
repz
or
jl
fmuls
dec
mov
cmp
mov
dec
or
fidivrs
aam
inc
and
or
cld
jle
ret
mov
sbb
adc
adc
in
sbb
jae
pop
mov
jle
mov
mov
je
insl
cld
jae
mov
inc
sub
loopne
mov
pop
add
stos
fucomip
sbbb
xchg
test
dec
scas
cli
sub
mov
xchg
sbb
fmull
push
jecxz
mov
cmp
push
fisttps
pop
sub
shr
rcll
sbb
ds
xchg
nop
xlat
cmpl
cmpsl
addb
xchg
movb
aaa
repz
adc
das
lock
mov
test
jle
std
repnz
les
pushf
lods
cmp
fsts
out
xorl
stos
in
pushf
inc
jns
or
inc
dec
sub
xchg
jb
xchg
xchg
cmpsb
fwait
cli
push
ret
jg
sbbb
arpl
jno
int
sbb
mov
jge
dec
movsb
rcl
lods
adc
out
mov
sub
lret
cmp
in
jle
in
cs
mov
cmpsl
data16
push
lret
pop
and
xor
mov
fisubl
mov
inc
fcomps
imul
add
rcr
pop
sub
jle
and
xlat
out
outsl
xor
add
out
xchg
daa
bound
ret
jl
insl
xor
frstor
push
inc
pop
arpl
xchg
lea
jne
xor
lock
xchg
mov
push
cmp
stos
xor
stc
cwtl
xchg
aaa
pop
subl
insb
push
inc
daa
sbb
jno
jnp
into
sbb
out
sub
arpl
loopne
std
adc
fmuls
push
sti
sbb
stos
xchg
fcmovb
mov
gs
movb
sub
fs
mov
mov
push
sti
mov
loopne
sarl
mov
push
mov
pop
test
icebp
pop
in
sub
mov
out
pusha
pop
jnp
sub
pushf
lock
addr16
jecxz
mov
negb
xchg
movsb
sbb
push
arpl
cmpsb
stos
sbb
int
xchg
and
xor
cmp
inc
mov
arpl
insb
int
icebp
or
test
sub
adc
lods
data16
fldl
cmc
cli
sbb
aam
adc
insl
in
neg
lds
aam
and
or
repz
rcll
loopne
adc
fcmovnb
ret
push
inc
sub
mov
ja
jnp
and
jge
adc
ficompl
sti
addr16
int3
jg
ja
adc
fwait
int
insb
jge
outsb
pusha
int
out
mov
pop
pop
mov
push
fimuls
inc
mov
jbe
mov
ja
jl
xchg
jnp
lret
sbb
cmp
das
lcall
jecxz
ljmp
mov
mov
jno
pop
xchg
mov
sbb
jmp
outsl
jp
dec
push
or
fnstcw
cmp
mov
sbb
sbb
pop
pop
insl
leave
sbb
repnz
lea
inc
stos
call
cmpb
xlat
repz
aam
out
inc
sbb
arpl
push
dec
ficomps
enter
lret
loop
mov
int3
movsb
pop
fmull
inc
xchg
mov
cmp
mov
mov
mov
add
stos
xchg
cld
add
mov
jmp
das
lds
push
adc
jmp
mov
hlt
sbb
mov
adc
mov
push
mov
notl
stos
and
fdivp
movsb
pop
loopne
sbb
jmp
sbb
or
lods
mov
dec
push
fneni(8087
pop
jae
dec
dec
lock
lret
ret
jne
js
adc
or
ljmp
popa
loopne
mov
adc
dec
or
int3
xchg
dec
sarb
fidivl
jnp
aad
or
mov
xor
xchg
xchg
cli
sti
mov
mov
mov
cmp
xchg
lahf
loopne
jo
jmp
repz
inc
sub
mov
cmp
in
adc
xorb
push
stc
out
gs
cld
cmp
lahf
jmp
pop
sbb
loop
insb
add
inc
negb
and
bnd
test
dec
shl
jmp
add
inc
and
dec
movsl
or
sbb
lock
lds
push
lea
and
fldl
and
xor
mov
sbb
stos
insl
fiadds
dec
fucomip
cwtl
leave
in
sahf
mov
adc
sti
in
out
leave
mov
es
sub
cmpsb
mov
dec
ljmp
or
pop
pop
xchg
faddl
sbbl
sahf
jmp
divb
jns
cmpsb
idiv
out
or
movsb
xor
imul
repnz
arpl
hlt
dec
mov
mov
ret
ret
xchg
or
popf
lcall
aam
out
push
mov
sbb
jae
cmpsb
fwait
pusha
lret
dec
inc
aam
mov
ret
scas
push
push
sti
mov
xor
fwait
addr16
jge
mov
in
sbb
imul
aas
push
in
fsts
scas
out
jle
add
decb
ficompl
imul
aam
addr16
push
loope
jns
xchg
sbb
pusha
aad
and
imul
int3
inc
addl
lds
mov
int
shlb
push
addb
cmpsl
sbb
push
dec
or
test
mov
mov
push
dec
fdivrs
and
fisubl
rcrl
insl
loopne
push
jae
sbb
jg
jl
xorl
fisttpll
int3
fnstsw
cmp
xchg
sarl
add
stos
xchg
lock
sbb
ljmp
sti
pop
dec
adc
and
pop
mov
and
sbb
out
repnz
fdiv
verw
sub
pop
xor
cmp
inc
cltd
xchg
insb
dec
inc
mov
jg
sahf
sub
loopne
sub
jno
add
fcmove
ret
fcoms
cmp
fsubs
push
inc
inc
xchg
fstps
icebp
add
mov
repnz
jae
pop
pop
jmp
xchg
jp
in
fdivrl
xchg
pop
fistpl
mov
popa
pushf
rclb
movsl
push
inc
iret
repz
out
add
imul
push
sub
adc
push
icebp
cld
push
ficomps
js
cmc
push
adc
leave
stc
xor
mov
test
imul
pop
aaa
add
xlat
lret
push
ret
repz
bound
jae
int
arpl
out
pop
stos
push
cli
sbb
dec
xchg
sbb
push
imul
pop
mov
dec
popf
xchg
push
rcrb
ljmp
push
ss
mov
push
cmpsb
mov
dec
jecxz
jns
jb
xorb
or
mov
lock
aam
pop
stos
add
aam
fmul
dec
jmp
mov
loop
adc
fsub
shll
and
xor
push
insb
shl
inc
ljmp
jno
or
sub
aas
sbb
lret
aas
dec
jl
fdivr
loopne
ficoms
push
mov
xchg
or
mov
jmp
repnz
sub
fwait
xchg
cmp
lahf
lods
pop
lock
or
jmp
in
idivl
sbb
fistpl
ret
add
cs
js
outsl
lds
call
dec
xor
mov
pusha
jnp
adc
mov
into
mov
sub
popf
fwait
mov
dec
mov
sbb
repz
shll
sub
stc
shrl
mov
fsubp
jp
icebp
dec
insb
gs
add
jp
fnstcw
mov
fsubr
jae
or
lds
insl
dec
inc
in
sbb
xchg
push
adc
cmp
push
mov
mov
jne,pn
inc
mov
adc
int
adc
cltd
fdivr
or
out
xor
dec
ret
mov
mov
mov
int
stos
pop
lret
jle
jmp
adc
arpl
fmuls
jge
fldcw
outsb
push
jnp
mov
cld
cmp
outsb
dec
mov
or
pop
xchg
sbb
fidivrs
loop
ja
in
cmpsb
pop
rcrl
pop
nop
jp
jno
lds
movsl
add
scas
push
sti
pop
mov
mov
insb
test
xchg
movl
push
jo
xchg
popa
jl
fcomps
push
add
and
push
imul
movzwl
out
shrb
push
bound
fwait
aad
add
jns
subb
in
aad
jle
mov
stc
ja
outsl
sbb
jp
mov
jb
cmpsb
push
cmpsl
fnsave
sub
sbb
sahf
push
pop
mov
movsb
add
lea
pop
insl
push
rol
mov
lret
xor
dec
xchg
cld
adc
ja
int
scas
mov
sbb
in
jno
fstl
jle
mov
jns
or
xchg
mov
sbb
mov
inc
mov
or
ret
hlt
lret
dec
sbb
pop
inc
dec
mov
mov
add
outsl
in
enter
pop
pop
mov
cld
cmp
shlb
fistpll
mov
call
loope
pop
out
mov
mov
or
cmp
sbb
push
sub
or
out
cmp
repz
arpl
ficomps
push
dec
into
lcall
cmc
cltd
mov
fisttpl
jno
or
out
xchg
add
xchg
or
dec
aam
scas
and
xchg
divb
xor
int
pushf
movl
fdivs
fcomi
daa
scas
je
ficomps
fdivrs
xchg
mov
dec
sbb
repnz
push
lods
jb
inc
mov
dec
sysexit
mov
notb
int3
push
rorb
sbb
push
movsb
inc
mov
and
inc
adc
adcb
loop
hlt
repz
and
cwtl
sbb
cmp
fnstcw
dec
outsb
call
xchg
pop
push
push
xchg
iret
dec
out
popf
icebp
jl
icebp
sbb
push
sti
mov
xor
stc
push
sbb
xchg
jns
sbb
test
inc
fimuls
into
dec
jne
sbb
subl
out
xchg
rcrb
dec
dec
add
ljmp
add
inc
outsl
das
les
loopne
xor
and
fbld
leave
bound
sbb
shlb
rcrl
and
ljmp
and
inc
jl,pt
cli
pop
xchg
fadd
mov
and
int
xchg
xor
int3
sub
inc
out
and
out
ss
mov
lds
pop
test
pop
arpl
imul
mov
negl
xchg
aas
mov
push
lret
daa
add
or
rcrb
xchg
sbb
jne
cs
dec
lret
mov
dec
aam
daa
lret
movsl
pop
adc
fnstsw
push
sbb
in
in
arpl
adc
mov
aam
mov
int
popa
xchg
push
xor
cmp
xchg
mov
ret
xor
inc
fdivrl
popf
gs
add
ja
push
sahf
inc
leave
push
test
aas
adcl
jbe
cmpl
ret
xchg
stos
add
out
ljmp
hlt
mov
push
test
repnz
das
mov
mov
xchg
imul
int
inc
ljmp
dec
loop
jmp
xchg
jge
lret
aam
inc
jl
fisubs
jle
mov
movsb
fdivrs
daa
insl
dec
sub
mov
orb
mov
pop
mov
cltd
add
lret
in
ds
jg
loop
test
xchg
sti
mov
jp
icebp
ss
jbe
fucom
adc
mov
xor
pop
nop
mov
sub
repz
repz
imul
fcomp
push
popa
sarb
dec
mov
test
aam
leave
stos
addr16
insl
imul
jp
iret
sub
ljmp
nop
les
lock
xlat
and
hlt
clc
ds
inc
loop
mov
and
pop
inc
out
add
mov
adc
pop
loope
loop
dec
cmp
jp
lods
pushl
sbbl
pop
out
test
aad
jl
fisttpll
and
push
pop
movsb
mov
inc
addr16
or
mov
ja
clc
push
and
inc
sbb
cs
gs
cld
sbb
jl
xchg
das
repz
pop
mov
cltd
outsb
mov
jp
addr16
popa
ljmp
insb
jmp
jp
stos
mov
mov
test
xor
pop
ljmp
loop
pop
ret
into
push
cmpsl
mov
sub
cmp
inc
subl
sbb
or
mov
pusha
push
lock
fisubs
cmp
mov
pop
mov
jae
aam
add
addl
push
mov
loope
iret
leave
shrb
enter
xor
movsb
cmp
pop
xor
out
pop
fidivs
arpl
dec
sbb
iret
add
sti
xchg
xor
fidivl
adc
mov
xor
and
scas
lods
or
jl
sbb
xor
push
mov
sbb
mov
jmp
dec
sbb
push
call
pop
xchg
add
cmp
enter
jecxz
inc
pusha
pop
push
sbb
cmpsl
icebp
push
pop
jp
pop
in
jmp
repz
mov
sub
dec
repz
inc
adc
cld
in
mov
jns
mov
mov
push
and
push
sbb
sub
es
sbb
out
stos
sbb
sub
dec
cmp
mov
cmp
adc
mov
dec
sbb
aad
pop
bound
sbb
pushl
jb
pop
sub
fnstenv
mov
jmp
fwait
pusha
dec
ret
movsl
fimuls
lods
jne
fistpl
icebp
rcrb
adc
dec
dec
aam
lcall
mov
insl
push
scas
push
sbbb
add
push
adc
sub
or
lds
sbb
add
lods
and
push
add
inc
xor
jg
lods
fldt
test
push
or
xchg
sbb
jns
es
jns
mov
sbb
push
pop
xchg
add
pop
stc
xchg
pop
adc
or
ljmp
push
popa
add
pop
sahf
scas
push
pop
insb
jecxz
push
dec
lahf
std
daa
std
sti
mov
xor
push
out
mov
dec
cmpsb
ds
jg
sbb
cmpsl
sbb
jmp
sti
ret
out
cli
pushf
sbb
loope
push
fsts
sbb
lret
pop
sbb
pop
pop
negb
push
and
jne
fiadds
inc
sub
call
lods
subl
sbb
outsl
dec
xor
mov
fcmove
jnp
inc
lods
scas
outsl
jecxz
jecxz
adc
push
jl
dec
aam
data16
rcrl
rorb
and
xlat
pop
scas
adc
fmull
es
adc
ds
stos
xorb
fidivrs
inc
popa
ljmp
pop
nop
jb
sub
push
addr16
mov
pushf
sbb
test
sbb
test
fiaddl
jno
ret
xchg
pop
arpl
loope
scas
jl
jge
pop
dec
xor
out
jmp
mov
fstpl
push
movsb
lret
pusha
sbb
add
mov
jle
mov
dec
aam
imul
arpl
fcomp
sbb
and
insb
sbb
bound
xor
jl
repz
push
mov
lcall
pushf
pop
sub
add
inc
fcoml
in
mov
cmp
xchg
jmp
mov
jo
inc
sbb
out
lds
push
sarl
lret
mov
jns
sahf
ljmp
ja
jae
pop
repnz
popa
stc
ss
push
es
dec
cmpsb
daa
test
les
mov
mov
xlat
or
pop
arpl
ja
mov
jp
mov
out
mov
fmull
out
inc
test
push
mov
xor
push
xchg
dec
mov
ss
data16
test
and
insb
mov
mov
lahf
movsl
xlat
xor
jecxz
cmp
sbb
out
cmp
enter
mov
cmp
shlb
in
lret
mov
sbb
xchg
in
mov
push
add
lods
aam
insb
pop
sahf
dec
push
pop
adc
mov
popa
lock
sub
mov
mov
rcrl
jle
adc
fldl
mov
incl
sbb
sub
fisubrl
addr16
stos
xchg
xor
lret
lock
mov
jge
sti
mov
imul
cmp
dec
sbb
push
pop
mov
fstp
inc
xor
adc
or
sbb
jne
xor
dec
int3
xchg
mov
inc
inc
cmpsl
adc
out
les
jp
imulb
push
sbb
jg
scas
rcrb
lea
add
sbb
ret
orb
scas
add
sbb
cmp
dec
insb
xor
cmpsl
xlat
notl
sub
mov
js
pop
lret
add
sbb
push
and
jne
push
sbb
test
ds
lock
ja
pop
test
xchg
jmp
fcomp
lds
mov
mov
ret
in
hlt
mov
pop
vprotw
ret
pop
mov
popa
or
sbb
stos
stos
adc
dec
xchg
pop
inc
lret
sbb
inc
pop
outsl
inc
int
pop
mov
jno
ret
iret
es
int
sbb
shlb
test
mov
xchg
pop
imul
popa
add
cwtl
or
fidivs
adc
imul
dec
mov
test
or
or
fs
add
add
je
imul
ljmp
notb
fisttpl
xor
mov
imul
mov
jae
repnz
popa
add
testb
scas
lods
push
jmp
fists
pushf
loopne
cmp
dec
xchg
push
dec
push
ljmp
enter
push
insl
or
lahf
incb
mov
mov
loop
ja
xchg
pop
push
aaa
sub
mov
ret
adc
stc
sbb
aad
cltd
add
xchg
flds
cmpsb
ljmp
mov
icebp
pop
gs
ret
or
or
fsubl
stc
mov
fwait
xchg
int
mov
inc
push
sbb
xchg
inc
imul
sbb
or
push
xchg
aam
icebp
xor
push
jle
addr16
add
lock
xor
ret
rcrb
ret
inc
jecxz
pop
ficompl
dec
cmp
ljmp
sub
out
pop
sbb
frstor
cmpsb
dec
imul
adc
and
jns
push
pusha
inc
rcrl
or
mov
test
shlb
in
outsb
push
ja
mov
enter
add
lods
jns
xchg
shrb
or
xor
call
jb
pop
ret
lret
jmp
cmpsb
mov
loopne
repnz
jmp
addr16
push
jp
lret
sarb
test
lea
cmp
daa
lret
sbb
cmc
call
sti
and
push
fisubl
cs
pop
jge
ss
dec
mov
jb
mov
mov
add
pop
inc
add
test
jo
shrb
dec
iret
jle
mov
inc
xchg
jecxz
enter
pop
cmpsb
fxch
lds
inc
mov
mov
cs
jbe
xor
jp
sbb
mov
int
push
xchg
and
sbb
push
bound
mov
mov
cmp
dec
dec
mov
sbb
std
and
adc
push
mov
push
push
sbb
xchg
leave
xchg
aam
lods
mov
lcall
xchg
popl
add
fnsave
repz
add
inc
or
aas
dec
in
pop
dec
jno
in
jns
lcall
imul
or
std
sbb
orl
pop
dec
nop
std
xchg
or
fwait
sbb
subl
icebp
out
push
ret
inc
inc
gs
cmpsb
inc
pushf
dec
jns
xchg
inc
jmp
vmulsd
mov
sbb
xor
add
es
fs
leave
dec
lock
mov
sbb
xchg
insb
jge
aas
daa
sub
xchg
out
xchg
loop
call
pop
orl
xor
jmp
xchg
jo
adc
cmp
mov
xchg
out
sub
xchg
sbbl
icebp
or
test
xchg
popa
fcomi
jl
add
jne
jecxz
mov
sbb
adc
pop
dec
inc
arpl
jecxz
xchg
int3
sbb
mov
or
mov
push
and
cli
das
test
sbb
out
repnz
and
and
ljmp
icebp
es
xchg
testb
xchg
shrb
push
movsb
add
sbb
add
xor
xor
inc
xchg
sbb
dec
mov
aam
adc
outsb
dec
add
insl
sbb
mov
addb
xchg
cli
jbe
sbb
in
dec
add
jno
shlb
cmc
mov
lret
fs
mov
xchg
lret
push
bound
scas
pop
inc
xlat
inc
in
ficoml
arpl
dec
sub
cs
or
pop
lock
xchg
lods
fisubrs
xchg
rol
pop
or
incb
int
test
loop
test
js
jmp
movsl
or
jg
push
jne
scas
mov
fnsave
ret
ss
fcoms
shld
mov
addr16
push
mov
ret
add
mov
sbb
jp
cmp
jmp
dec
vhsubps
cmp
push
sbb
sbb
hlt
aad
xchg
les
roll
fsubs
hlt
enter
cmp
shlb
mov
adc
cmc
outsb
cltd
dec
xchg
jl
dec
or
fwait
cmp
jo
cld
dec
fcomp
fucomip
mov
xchg
sarb
outsl
dec
das
negl
movsb
bound
jne
out
pop
push
jmp
mov
cmp
pop
sbb
rcrb
test
lds
adc
scas
xchg
xor
push
arpl
lahf
imul
adc
fldl
icebp
cmp
mov
sub
jns
inc
js
jns
es
xchg
pop
in
jmp
jecxz
cmp
cmpl
movsb
xchg
popf
iret
aaa
push
mov
or
jecxz
jbe
aas
ja
jo
loopne
mov
add
and
subb
pop
mov
ret
ljmp
nop
jo
leave
sub
lret
jno
or
sub
addr16
add
std
mulb
and
or
mov
insl
mov
testl
mov
enter
bound
aaa
dec
or
ljmp
std
imul
lds
pop
jb
pushf
jg
or
lret
add
es
mov
test
pop
sbb
sub
jmp
mov
pop
mov
mov
adc
dec
cmp
sti
sub
pop
jno
jb
mov
repnz
sbbl
xchg
and
xchg
outsl
jns
andl
inc
out
sbb
and
pop
stos
jl
bt
lds
sbb
lret
mov
jae
dec
inc
lock
jnp
sahf
fiaddl
je
loope
mov
aam
rcll
les
mov
cmp
inc
outsb
xchg
adc
lret
imul
jnp
or
push
loope
xchg
mov
out
nop
fst
pop
xchg
stc
xchg
add
fwait
pop
insl
or
out
or
push
shl
mov
test
sub
pusha
or
cmc
ljmp
mov
test
sub
test
pusha
insl
pop
repnz
push
sbb
dec
push
xchg
imul
gs
gs
mov
rcrl
mov
loope
adc
leave
and
inc
jno
xor
jne
ljmp
xor
js
aam
test
dec
sub
dec
dec
mov
cmp
or
jns
stc
push
and
fstps
lret
lods
inc
ret
sbb
gs
pop
dec
mov
mov
ljmp
divl
inc
out
jnp
adc
fldcw
xchg
fiadds
call
rcll
aaa
fadd
push
int3
mov
mov
cmpsb
sbb
jle
insl
inc
hlt
xor
fsubr
adc
and
mov
xchg
xchg
mov
xor
cmp
repz
sbbb
repnz
lret
repnz
int3
or
mov
xchg
jno
dec
sbb
outsl
scas
fbld
jp
xchg
pop
mov
stos
aas
les
add
or
arpl
sbb
add
push
cmp
mov
lods
cltd
xchg
mov
insl
addr16
dec
loope
lret
pop
xchg
and
and
push
imul
pusha
pushf
sub
jnp
xor
lods
push
data16
cs
dec
adc
test
jno
cs
push
sub
popf
dec
xor
dec
mov
dec
xchg
jae
mov
mov
add
ret
adc
ja
add
pusha
push
adc
pop
xor
sbb
pop
stos
outsb
int3
or
dec
ret
sub
aas
jb
jg
mov
or
or
xchg
xor
xorb
inc
test
cmp
mov
test
xchg
pop
cmp
idivl
repnz
leave
fisttpll
pop
inc
mulb
outsb
push
pop
or
inc
loop
sbb
int
adc
insl
popf
pop
clc
mov
inc
mov
je
mov
mov
stc
shrl
test
std
mov
dec
int3
mov
xchg
gs
loope
pop
fwait
sbb
pop
jbe
cmp
xor
cmp
mov
out
outsb
test
sbb
mov
pop
iret
imul
add
pushf
rcr
xchg
xchg
stos
loopne
and
xchg
es
popa
mov
insb
cmpsl
or
fcoms
jp
loopne
pop
add
in
push
xorl
repnz
mov
rorb
mov
xlat
popf
mov
push
or
push
xor
andl
repz
incb
loopne
and
mov
push
xor
loope
and
test
insl
or
xchg
add
in
add
sbb
jg
test
fcoms
ljmp
mov
stc
sbb
lret
xchg
xor
pop
int
repnz
in
test
jne
test
fnstsw
or
dec
ret
push
ja
fists
dec
cmp
xchg
push
jns
pop
ds
test
jb
imul
add
and
lds
mov
push
or
ljmp
pushl
push
lcall
out
jmp
pop
leave
insl
and
or
cltd
or
lds
sbb
mov
add
adc
cmpsb
add
pop
push
sti
sub
test
push
push
and
fucomp
test
sarl
popa
xchg
sbb
ret
aam
pushf
xchg
jnp
fldenv
cli
cmc
cs
pop
fwait
mov
sbb
push
shlb
roll
push
push
ljmp
dec
fdivs
pop
into
cwtl
cmp
mulb
popa
jmp
orl
add
test
lds
mov
sbb
ret
pop
mov
xchg
sahf
iret
pop
push
insb
and
repnz
mov
cmc
inc
sbb
lahf
sbb
testb
imul
sub
xchg
repz
push
int
sbb
jmp
mov
or
out
add
xor
mov
mov
ljmp
jge
ss
pusha
pushf
sbb
jle
pop
outsb
push
lods
push
jl
data16
scas
cmp
push
lret
mov
daa
aaa
cmp
insl
xchg
test
lahf
cltd
or
fadds
mov
and
sub
dec
xorl
inc
loop
dec
add
sub
mov
xchg
ljmp
in
jae
inc
arpl
dec
and
scas
push
test
popa
pop
add
daa
push
xor
loopne
cmpsl
push
stos
inc
pop
outsl
movsl
fstl
inc
aad
les
or
popf
mov
cwtl
out
shrb
test
cmp
dec
sbb
xchg
fsubp
push
adc
mov
fucom
shrb
repnz
out
data16
xchg
pop
sub
xchg
les
outsl
movsb
in
mov
cli
flds
sub
rcr
dec
sub
mov
ret
mov
in
lcall
mov
pusha
or
add
ljmp
adc
jecxz
int3
out
outsb
mov
cmp
scas
pop
leave
ljmp
sbb
test
popa
sbb
mov
andl
pop
sub
iret
sbb
lods
or
movsl
std
cwtl
adc
cmpsl
pop
or
sbb
out
test
xor
out
cmc
jns
sub
int
fildl
jbe
lahf
scas
fstpl
das
dec
cmp
adc
lret
sbb
fdecstp
cmc
lds
push
dec
scas
sub
icebp
push
pop
mov
stos
dec
mov
lret
cmpsl
stos
inc
out
jl
adc
mov
push
pop
and
pop
ret
mov
shll
dec
ret
jb
xchg
cmp
jecxz
sub
mov
xchg
sti
xor
les
push
insb
jmp
xchg
fiaddl
in
lahf
push
sti
aaa
jns
shlb
xor
inc
cmpsb
lret
mov
dec
je
cmp
arpl
xor
mov
push
sbb
rorl
pop
ret
mov
and
or
fistpl
mov
mov
and
or
pop
das
ret
mov
mov
ds
pop
nop
lods
imul
out
sub
xor
jmp
sub
inc
inc
aas
xchg
stc
jge
mov
fisttpl
fcom
sahf
and
pusha
outsb
lea
and
xor
sbb
pop
daa
shl
xchg
mov
outsl
sbb
cmc
mov
sub
movsl
aas
sbb
in
in
popf
inc
fildl
jb
cmp
mov
sub
nop
jl
aas
and
test
mov
callw
and
lds
sub
mov
sbbl
dec
sbb
xchg
mov
and
addr16
xchg
test
fucomip
mov
mov
cmp
cmpsb
leave
lcall
shld
mov
cs
iret
or
push
mov
dec
jp
clc
pop
and
push
fldt
rorl
or
test
jecxz
lea
pop
adc
mov
xor
mov
movsb
push
or
fstpl
pop
test
inc
xchg
cmp
mov
neg
sbb
das
aam
out
sub
sbb
mov
fcoms
ljmp
mov
shlb
dec
jecxz
in
cmp
outsl
mov
inc
outsl
mov
pop
roll
mov
les
outsl
cs
fldl
sbb
inc
mov
cs
test
nop
bound
xorl
dec
mov
push
cmpsb
lret
aam
cmpsl
xor
pushf
mov
pop
mov
rol
cmp
fdivs
mov
repz
outsl
loop
inc
push
insb
fimull
push
inc
nop
loop
rcl
mulb
inc
movsl
jmp
xchg
mov
sbb
mov
mov
adc
daa
leave
mov
int
push
mov
ljmp
nop
cmc
add
addl
lods
imul
decl
pop
sbb
jge
rolb
shll
cmp
mov
fbstp
cmp
pop
push
fidivrs
inc
fadds
sbb
pushf
xchg
add
sti
mov
cmp
pop
scas
or
insl
fldl
add
mov
cmp
mov
pop
and
add
out
pop
cwtl
cmp
data16
pop
ret
pop
push
dec
sbb
mov
xor
outsb
out
lds
repnz
cmpsl
push
pop
inc
repz
testb
sub
push
push
jb
fisubs
mov
jne
add
pop
aas
pop
jns
out
movsb
xchg
insb
les
jno
fdivrp
ja
mov
pop
inc
into
lret
sbb
daa
xchg
hlt
xchg
cmpsb
and
inc
out
mov
insl
inc
adc
push
fimuls
outsl
mov
mov
lahf
sub
jmp
fldl
addb
xchg
fs
popf
jmp
push
sbb
adc
pusha
push
mov
insl
out
shrl
mov
xchg
scas
jb
hlt
leave
sbb
mov
mov
shl
mov
or
pushf
inc
push
outsb
pop
inc
pop
pop
or
decl
test
jns
mov
adc
sub
xchg
push
std
jmp
fdivl
pusha
sbb
repnz
out
repnz
push
sub
mov
adc
xchg
cmp
std
pop
es
sbb
cmp
lahf
cwtl
bound
and
add
mov
or
fisubs
enter
adc
jnp
adc
test
in
xchg
fmul
cmp
inc
frstor
arpl
adc
enter
pop
sub
inc
icebp
arpl
cwtl
les
aaa
sub
inc
fwait
mov
jle
popf
sahf
sbb
hlt
adc
dec
push
sbb
inc
test
ljmp
sbb
lds
fwait
pop
out
sub
jg
out
nop
add
int3
daa
jle
mov
sbb
xchg
in
sahf
xor
aas
imul
jmp
ret
mov
jno
push
sbb
sub
into
dec
jg
scas
out
push
and
xchg
subl
inc
movsl
mov
sbb
lret
mov
mov
call
test
mov
lret
fstpl
cmpsb
and
ljmp
arpl
and
dec
or
std
push
push
cmpsb
iret
and
das
jo
ljmp
ljmp
mov
dec
imul
push
stos
les
repnz
fstl
je
mov
ljmp
sbb
push
jmp
push
popa
jp
cmpsl
sub
pop
insb
popf
je
mov
or
mov
loop
or
or
sbb
dec
xor
xor
push
add
jle
addr16
xor
shlb
push
xchg
jno
pop
ljmp
repz
popf
sub
fdivs
cli
leave
sbb
jb
pop
mov
push
pop
shrb
pop
or
add
popa
int3
mov
pop
test
jne
icebp
sbb
pop
cld
cmpsl
dec
jno
fidivl
pop
popf
mov
cltd
enter
rorl
and
mov
sti
cmc
roll
loope
push
in
ja
stos
mov
rcrl
mov
dec
repz
sbb
loop
dec
pop
lds
fisubl
nop
insl
cmp
cmp
shlb
sbb
cltd
adc
dec
lret
out
and
adc
sbb
add
ss
andb
lahf
out
dec
dec
iret
stos
sbb
fldl2t
xor
clc
imul
sarl
scas
cmp
fmull
or
in
jno
xor
pusha
mov
cld
inc
js
sbb
mov
repnz
jp
jecxz
gs
push
mov
addl
sbb
int
ret
pop
xchg
xor
call
xchg
arpl
imul
sahf
sbb
data16
add
inc
add
inc
dec
pop
adc
mov
gs
fcmovnb
andl
push
mov
mov
fcoml
clc
push
loopne
das
scas
in
lea
stos
sahf
pop
jbe
inc
in
pop
sbb
and
dec
jo
movsb
xchg
inc
cmpsl
jno
int
shr
ds
lahf
pop
jno
rcrl
mov
xlat
lret
int3
imul
fcoml
xor
fmul
out
data16
sub
sarl
add
mov
xchg
shrl
add
mov
roll
enter
xchg
add
adc
shlb
mov
push
loope,pn
je
jns
inc
lock
jnp
rolb
adc
pop
ret
jge
loope
mov
or
xor
or
dec
inc
int
mov
mov
mov
dec
cltd
es
mov
jmp
or
xor
cld
cltd
addr16
rep
and
sbb
or
test
nop
fwait
mov
xchg
adc
rcrl
add
sarl
or
sti
in
ret
mov
sar
nop
xor
pop
sbbl
or
loope
int3
cld
ret
mov
mov
jmp
dec
mov
and
lcall
pop
lret
aam
lea
add
xlat
jmp
sub
imul
or
lock
out
sub
jae
mov
sti
aas
pop
sbb
adc
and
out
pop
and
xchg
fists
scas
mov
jle
sbb
dec
test
pop
imul
jmp
in
sarl
stc
out
movsb
fstp
sbb
sbb
mov
mov
icebp
dec
mov
ficoml
dec
pop
leave
int3
push
xor
adc
adc
jnp
add
mov
sarb
add
jecxz
inc
mov
lret
mov
pusha
nop
out
cli
mov
and
mov
popa
mov
mov
mov
and
lret
fsubrl
pop
pop
sub
sbb
lods
ret
in
enter
shrb
pop
ljmp
sbb
in
add
and
cwtl
push
std
push
inc
lds
adc
insb
adc
sbb
out
cli
push
repz
popf
lret
xlat
mov
push
call
imul
mov
gs
jae
loope
sub
sbb
jl
sub
leave
jb
or
rcrb
popl
leave
mov
loop
stc
decb
mov
inc
clc
or
adc
dec
jle
dec
jnp
stos
popf
int3
iret
les
leave
mov
outsl
divl
or
testl
repnz
scas
shll
cmp
fsubl
pop
cld
cmp
mov
jne
stc
push
popf
inc
data16
dec
mov
xchg
fcmovu
sub
mov
shll
int
lods
push
or
pop
xchg
stos
xlat
fwait
mov
push
imul
and
loope
mov
mov
out
xchg
imul
scas
sbb
aad
cltd
jp
cmp
int
pop
sbb
cltd
sub
xor
fucom
mov
mov
jmp
popf
and
push
lahf
leave
or
lcall
push
or
mov
ret
pop
xor
ret
lds
int3
jnp
pop
fisttpl
cs
movsb
jge
lods
test
das
fisubl
mov
addr16
and
add
scas
or
aaa
jl
mov
sahf
pop
xor
cmpsb
pop
xchg
imul
pop
cli
add
roll
pop
loope
xchg
sub
int
sbb
das
push
outsb
jae
testb
sub
push
rorb
js
jns
orl
clc
and
pop
jbe
push
ror
sbb
mov
shlb
loopne
ljmp
lods
push
mov
pop
xchg
jge
cmp
or
xchg
lret
insb
xchg
sbb
sub
es
pop
add
jge
adc
insl
inc
xchg
xor
std
maxps
mov
mov
push
mov
int
je
scas
jo
fcoms
sbb
or
sbb
add
ret
jge
inc
inc
enter
jnp,pn
repz
shll
cld
sbb
jbe
mov
add
and
xchg
popa
bound
lcall
push
sub
stos
jne
jbe
xchg
cmp
push
insb
mov
cmp
movsb
and
loopne
dec
mov
push
sbb
cmp
inc
imul
cs
mov
clc
pop
mov
mov
in
fcomi
mov
out
mov
or
jp
jmp
add
push
xor
pop
fldcw
adc
mov
lds
daa
nop
push
add
dec
test
daa
sbb
orl
and
dec
lea
pop
mov
mov
push
pop
jmpw
sahf
icebp
lock
es
test
and
dec
fcmovne
fsub
pop
add
mov
testb
and
xor
das
sub
inc
dec
sub
out
cli
sbb
pop
popa
clc
bound
sub
sbb
out
cmpsl
push
call
ss
dec
pop
sub
mov
dec
jecxz
mov
inc
fwait
ds
sbb
mov
addr16
mov
pop
pop
dec
xor
push
dec
int
or
nop
roll
lods
push
xor
test
ljmp
push
bound
or
test
jae
rorb
movsl
pop
sbb
ret
loopne
popf
imul
mov
dec
out
pop
ret
fidivrl
xchg
inc
jb
rorb
repnz
sbbl
cli
sub
xchg
movsl
clc
data16
mov
int
mov
dec
cltd
adc
fdivs
dec
pusha
popf
mov
mov
out
and
popf
lret
rcr
mov
inc
hlt
add
inc
xchg
sti
ds
dec
lcall
nop
dec
pop
sahf
test
xor
sbb
or
ret
inc
jns
cmpsl
push
or
fs
call
lret
test
lcall
ret
xor
mov
push
jecxz
inc
stos
pusha
and
sub
lret
stos
rcrl
jl
sbb
bnd
push
cmpsl
pop
arpl
inc
jne
dec
sub
pop
int3
mov
cli
cmp
and
daa
push
jno
ror
mov
test
aas
fsts
lret
in
pop
xlat
in
loope
sahf
mov
dec
jns
fimull
stos
aaa
inc
push
dec
pop
aam
jne
xlat
xor
add
mov
pop
fwait
pop
adc
inc
gs
mov
mov
mov
lret
icebp
rclb
aad
push
mov
scas
sbbl
sub
dec
push
ljmp
jmp
out
aas
fstp
int
sbb
cmpsl
mov
iret
pusha
jno
push
sbb
fiaddl
cmc
push
add
stos
jp
cltd
xlat
xor
fnstsw
sbb
iret
pop
xorb
nop
fwait
sbb
dec
lds
fsubrs
sbb
test
inc
pop
mov
sbb
xchg
xchg
lret
call
pushf
cmp
mov
and
insl
xchg
fstl
pop
jl
sbb
mov
test
enter
jno
dec
adc
pushf
imul
sbb
pop
mov
loopne
add
les
pop
adc
ss
and
fsubrs
pushf
mov
std
out
mov
add
outsl
es
pop
inc
pop
pop
outsl
lret
sbb
adc
cld
push
sbb
jb
add
jo
das
repz
mov
insl
push
add
ds
push
lock
push
pop
aam
lret
push
movl
jp
ljmp
ja
shlb
xor
gs
xor
imul
and
mov
std
sbb
stos
inc
ret
mov
cltd
sbb
jmp
loop
ret
jno
mov
lret
jo
dec
mov
daa
es
sahf
dec
or
sbb
adc
out
shl
xor
std
fiaddl
xchg
outsb
addl
insb
sbb
ficoms
stos
add
mulps
and
test
pop
mov
out
push
cbtw
sarl
dec
stos
jl
loopne
movsb
shrl
push
mov
fsubr
pop
inc
sar
cmpsl
stos
ja
cmp
lods
xchg
hlt
jne
jg
cmp
leave
and
hlt
cld
mov
in
pop
pusha
test
sbb
sbb
js
inc
mov
and
xchg
rcr
shrl
subb
jecxz
loope
mov
jecxz
dec
push
add
shlb
mov
dec
cltd
rcrb
dec
jecxz
jge
daa
inc
out
lcall
sbb
fucom
jb
test
in
mov
in
scas
in
sbb
or
out
fsubl
mov
push
gs
insl
loop
pop
sub
mov
dec
xor
push
int3
mov
in
insl
nop
or
fisubl
movsl
cltd
push
mov
iret
xchg
test
cld
shl
mov
sbbl
pop
stos
repnz
loope
dec
ret
int3
loop
movnti
mov
bound
stos
xchg
shll
inc
jo
scas
sbb
pop
gs
bts
cmp
leave
popa
fisubrl
mov
pop
ljmp
inc
int
hlt
data16
fistps
and
fldl
cmp
sarl
sub
push
ret
mov
push
sub
dec
dec
adc
je
jmp
cmp
out
aaa
adc
bound
mov
cmp
stos
xlat
pushf
dec
out
imul
ret
inc
jno
repnz
pop
ja
sar
shll
les
pop
loopne
int
sbb
and
shrb
sbb
sti
fcmovnb
fidivrs
inc
or
les
or
lret
imul
lcall
stos
arpl
mov
jecxz
cltd
jne
xchg
jo
sbb
jl
lds
scas
stos
arpl
es
jns
jp
mov
pop
mov
nop
sbb
mov
mov
fs
scas
inc
fcompl
ja
int
orb
lods
daa
add
add
ja
addr16
mov
inc
sti
in
sahf
sub
outsb
out
dec
dec
mov
outsb
adc
rcrl
je
and
fisubrl
scas
leave
lods
mov
mov
scas
and
dec
cmp
mov
fucomp
pusha
sbb
xor
fnstcw
push
addr16
hlt
bound
out
mov
lret
pop
sbb
xor
add
out
es
ret
pop
xor
inc
or
add
cmp
dec
fstpl
in
add
int
aam
bound
mov
fistl
mov
fcmovb
in
outsl
xchg
cmp
mov
add
dec
dec
jecxz
sbb
pusha
mov
sbb
cmp
cmp
subl
sbb
in
add
cmp
mov
push
xchg
xchg
jmp
fisttps
adc
dec
outsb
push
scas
enter
and
or
pop
out
fidivrl
sbb
mov
stos
add
cmp
inc
xchg
addl
dec
ret
int3
sbb
push
mov
xchg
and
mov
add
fcomps
dec
jp
addr16
dec
and
dec
mov
test
cmp
out
ljmp
push
jae
xchg
dec
add
add
xchg
or
les
ret
sbbb
pop
lock
xchg
test
inc
dec
mov
das
test
ss
in
pusha
stos
push
shll
jns
lret
stos
pop
inc
in
das
scas
sub
cmpl
mov
inc
out
mov
push
push
sti
pop
test
xchg
arpl
fnstcw
and
les
or
mov
mov
mov
scas
sub
mov
cmp
or
push
mov
vmovntps
sahf
repz
stc
cmp
and
jl
loop
outsb
sbb
arpl
and
fcoml
daa
in
jle
in
xchg
pop
mov
mov
jae
mov
fnstcw
or
popf
add
daa
lea
test
test
scas
inc
ret
dec
pop
and
jae
sbb
fidivl
cld
scas
inc
jnp
in
sbbb
movsl
cmp
mov
shlb
jne
cmp
daa
ret
or
sbb
add
mov
test
adc
stos
scas
pop
xlat
xchg
inc
xchg
pop
fs
push
fisubl
xchg
mov
addr16
and
movsb
jecxz
pop
ret
xor
data16
pop
jge
cmc
cwtl
cmp
sub
jno
sbb
cs
jae
addr16
notb
push
jmp
jmp
push
ljmp
dec
jno
sub
mov
xchg
add
fcmovnb
xor
sub
sbb
imul
pop
aad
sbb
sbb
fidivrl
movsb
sti
mov
mov
shl
push
lcall
std
shll
sub
out
icebp
ds
pop
leave
cmpsb
andb
call
cmp
sbb
push
push
add
outsb
cmp
and
xor
jne
dec
dec
fistpl
pop
cmpsl
pop
sbb
xchg
or
dec
fistpll
sarl
imul
aas
pop
cmp
insl
inc
sbb
out
mov
add
mov
xlat
inc
dec
cmp
sbb
jo
cli
mov
out
out
ss
jb
pop
and
cmp
sbb
sub
push
jg
lret
aam
test
cmp
sbb
fimull
xor
dec
cmp
mov
sbb
cmp
les
pop
movlhps
push
enter
xor
lds
ret
cwtl
mov
sarl
popa
add
xchg
pop
add
sub
fldl2e
inc
jmp
dec
jecxz
into
adc
sub
or
mov
mov
add
jae
mov
leave
sbb
sbb
sbb
dec
xchg
ret
fst
sahf
lds
fs
test
mov
fisubs
xchg
jle
mov
pop
out
or
data16
lods
repz
and
mov
cmp
push
xchg
sbb
lret
call
ja
fbstp
sbb
mov
dec
js
loope
in
pushf
scas
xchg
mov
test
or
lock
fucomp
cmp
dec
ret
xchg
or
mov
test
sbb
or
iret
mov
cmp
dec
shlb
sarl
out
fistl
push
sbb
fstpt
mov
inc
sbb
xchg
mov
sbb
std
movsb
add
negl
cmp
mov
sbb
aad
fs
sbb
test
arpl
scas
and
fcompl
leave
fwait
sub
int3
lock
sbb
xchg
sbb
mov
outsb
inc
shlb
lahf
int
nop
decb
xchg
fcompl
cmc
add
xor
mov
mov
lret
popl
or
jle
dec
rorb
jno
jl
sbb
fbld
pop
push
hlt
arpl
mov
repnz
in
aaa
jge
mov
adc
inc
fdivrl
push
stos
push
bound
mov
jo
stos
xchg
push
icebp
ret
cmp
and
repnz
mov
pop
xchg
xchg
xchg
je
or
mov
aas
add
push
pop
sbbb
adc
mov
iret
jnp
add
mov
sti
outsl
shrb
mov
aas
fwait
cmp
aaa
ficoml
dec
mov
adc
neg
sahf
ds
call
fmull
mov
nop
out
mov
xchg
dec
adc
aad
sbb
inc
inc
or
pop
push
leave
adc
test
or
scas
call
out
pop
arpl
jb
dec
lret
fsub
cmp
rol
mov
paddusw
and
dec
mov
jb
jae
jmp
shl
inc
mov
cmc
sbb
xchg
imul
add
outsl
mov
mov
mov
mov
xchg
jmpw
or
dec
jg
imul
leave
push
or
sbb
add
adcl
push
or
lret
rorl
mov
sar
fisubl
jnp
nop
pop
int
xor
fists
add
or
sbb
fisubrs
ljmp
pcmpeqw
int3
lea
jno
sti
mov
dec
fcoms
imul
insb
jecxz
daa
push
scas
pop
push
or
sub
push
dec
or
sub
shrl
and
out
repz
lods
or
mov
push
push
inc
pop
adc
stos
sar
pop
lds
xor
test
pop
stos
lea
push
shl
mov
je
sbb
jmp
sub
idivl
fcomip
sbb
add
mov
mov
insb
stc
outsl
dec
cmp
xor
sbb
lods
loope
adc
mov
jns
imul
cs
arpl
sub
fadds
cmc
and
sub
stos
jb
sbb
mov
mov
pop
mov
fidivl
popa
jge
cmp
dec
fsubrl
mov
sbb
mov
jl
iret
subl
rcr
pop
xorb
sahf
decl
das
out
imul
xor
insb
jl
sub
repnz
jmp
aam
jnp
je
inc
inc
nop
adc
arpl
push
repnz
pop
ss
mov
push
in
mov
gs
add
enter
sub
adc
xchg
jno
notb
or
add
lret
xchg
dec
repnz
jmp
or
scas
sbb
mov
cltd
pop
inc
adc
jnp
jbe
xchg
mov
add
sar
es
pop
push
enter
div
xchg
pop
add
dec
mull
lret
nop
jno
vmaxps
inc
addr16
push
sbb
loopne
fwait
mov
scas
mov
nop
lret
rcr
inc
mov
imulb
sbb
dec
rclb
frstor
popa
pop
and
pop
xor
stos
js
mov
rclb
repnz
clc
fnsave
in
jnp
cltd
ret
mov
daa
loopne
insl
mov
mov
fmull
cmp
xor
sbb
int3
ret
pop
cs
push
repnz
mov
inc
sbb
clc
sbb
cs
jmp
add
nop
mov
test
mov
rcl
inc
xchg
ffree
jl
jecxz
shlb
stc
sub
sahf
int3
lds
pop
adc
mov
pop
sbb
gs
call
mov
out
sub
aaa
cli
inc
push
sub
in
push
add
loope
and
mov
sub
rol
jg
fistpl
or
xor
jecxz
mov
shrb
adc
push
mov
cwtl
data16
ljmp
mov
rcl
mov
sub
mov
icebp
adcl
mov
sti
pop
pusha
jg
enter
lret
jle
pop
sbb
in
xor
cmp
in
and
out
push
lahf
jns
stos
test
lock
pop
fsubrs
cld
jp
sbb
dec
pop
scas
arpl
insb
pop
mov
xlat
pop
push
insb
cmp
add
call
mov
jge
fcoms
push
mov
inc
pop
xor
arpl
gs
mov
lock
xchg
outsb
imul
test
je
jecxz
aam
xor
push
mov
push
lds
sbb
sbb
and
inc
mov
shl
stos
repnz
lcall
push
pop
imul
testl
jae
fnsave
fdivs
jmp
xor
sbbb
sbb
insb
sti
dec
jno
mov
mov
loope
sbb
mov
push
gs
jl
bound
cmpl
scas
popf
jbe
push
dec
or
addr16
jmp
pop
insb
dec
mov
dec
imul
orl
stc
mov
mov
hlt
sbb
cmc
xchg
mov
inc
cld
sub
xor
pinsrw
fistl
daa
imul
in
dec
xchg
jns
shl
mov
or
dec
jmp
lock
mov
jp
inc
loopne
sbb
mov
inc
into
dec
sub
aad
fildll
out
push
jmp
adc
xchg
pop
adc
mov
stos
dec
jmp
push
jmp
pop
ds
mov
push
or
es
sbb
mov
xchg
sbbl
shl
sbb
std
sbb
insl
fsin
sbb
mov
jno
fs
lcall
push
fildll
mov
xchg
inc
in
daa
in
jo
xor
pop
lcall
and
mov
add
push
or
fcmove
ret
adc
mov
or
daa
aam
add
pushf
repz
outsl
sub
push
popa
fidivl
mov
jnp
sahf
popf
add
sbb
popl
arpl
aas
add
xor
fcomps
lock
ret
adc
movsb
add
lret
xchg
std
xor
insl
mov
mov
sbb
dec
xchg
jg
popf
mov
fistps
or
xchg
hlt
cmp
lock
lea
cs
inc
xchg
stos
jbe
push
das
lds
mov
jnp
lcall
sti
icebp
cltd
stos
fcoms
jp
in
daa
xchg
lcall
das
pop
lret
test
dec
les
cmp
xchg
pop
push
pop
in
mov
jg
test
std
sbb
lds
fiaddl
out
jge
stos
adc
in
jmp
int3
or
cwtl
fsub
repnz
pop
adcb
jne
out
int
cli
jnp
pop
inc
sbb
push
jmp
psubd
sbb
ljmp
aad
push
xchg
xor
dec
cmp
sbb
xor
es
sub
test
jae
mov
scas
lret
shll
jle
fnsave
cli
repz
std
fcoml
fldt
movsl
inc
mov
shrb
mov
call
fbld
fxch
jl
mov
cmc
jb
jmp
fsts
pop
imul
movsb
and
mov
jo
sti
iret
adc
pop
xor
sbb
hlt
stos
mov
popa
sbb
push
xchg
xchg
cwtl
inc
cmp
outsl
cmp
rcrl
cli
ljmp
lahf
sti
and
lods
and
adcb
int
pcmpeqd
lahf
mov
pop
sbb
orb
test
sbb
test
int3
xor
mov
out
pusha
jno
rorb
in
call
sbb
adc
mov
aad
mov
pushf
mov
or
or
loopne
std
xor
fcomps
rcrl
cmp
mov
enter
fisttps
dec
sbb
gs
cmpsb
inc
push
cmp
fisttpll
out
mov
popa
fwait
inc
rcl
mov
fisubl
pop
lods
mov
sub
rcrb
adc
mov
add
loope
dec
shrl
jo
or
lret
test
and
inc
fcomps
mov
movsb
or
push
inc
jle
adc
les
int
mov
dec
ret
ljmp
stos
stos
push
rcrl
xchg
push
mov
faddl
inc
and
addr16
pop
sbb
cmp
xor
push
dec
int
or
stos
xchg
lahf
out
inc
mov
pop
lahf
xchg
sti
lret
fidivl
ret
js
repz
sub
cmpsb
mov
fcompl
jmp
fs
rcrl
push
push
or
lods
sbb
sub
icebp
jae
mov
or
sbb
adc
lret
loope
aam
adc
dec
inc
push
out
bound
sbb
mov
push
repnz
into
jo
pop
pop
popa
frstor
in
bound
add
inc
sbb
jne
dec
das
mov
mov
cli
dec
fsubp
sti
pop
mov
add
fcomp
dec
pcmpeqw
out
inc
xchg
pop
mov
cmp
test
push
cmc
js
f2xm1
dec
popa
call
adc
stos
hlt
push
lcall
cs
mov
nop
or
out
jne
imull
dec
pop
fs
mov
cmp
cwtl
cmc
or
in
adc
mov
pop
add
je
cwtl
stos
je
loope
or
in
mov
outsb
pop
jae
stos
push
cs
xchg
inc
cmp
jecxz
cltd
iret
dec
xchg
sbb
out
mov
clc
inc
dec
repz
sbb
repnz
push
ret
pop
aaa
outsl
lds
mov
xchg
call
adc
cmpsl
loop
jmp
je
mov
in
push
rcrl
pop
pop
adc
xchg
aad
test
into
mov
jl
dec
lahf
sbb
mov
mov
jmp
mov
loop
sbb
xchg
lret
add
cltd
ljmp
cmc
shlb
lds
xor
mov
cwtl
mov
sbb
pop
fidivl
mov
and
cli
fstps
inc
mov
int
cmp
adc
test
cmp
test
outsl
fs
fsub
gs
sbb
jae
mov
lret
sbb
aad
sbb
stos
mov
mov
movsb
sub
and
sbb
aaa
sarl
xor
pop
jne
mov
out
jl
adc
jo
and
imul
fcmovbe
jmp
std
lar
fldenv
ljmp
mov
mov
fidivl
push
or
push
rorb
sbb
loop
les
xor
movsb
jl
leave
sahf
push
sbb
pop
imul
xor
cmp
inc
and
mov
movsl
bound
and
dec
das
insl
lret
icebp
jg
and
loopne
arpl
mov
mov
fsubrs
ljmp
adc
and
xor
fsubl
imul
jecxz
ret
push
loop
sbb
stos
inc
jnp
jp
aaa
sbb
mov
cmpsb
pop
lret
clc
loopne
lret
aam
jne
jns
mov
lods
int
nop
sbb
outsb
ja
shrl
lea
loope
cwtl
outsl
std
push
ret
sbb
push
jb
out
jo
or
fcomps
lock
hlt
inc
pop
hlt
jbe
leave
pop
sbb
clc
pop
lcall
movsb
jge
sbb
ljmp
sbb
test
adc
arpl
ljmp
sbb
cmpl
jbe
add
xchg
pop
xchg
sub
jb
xchg
adcl
jl
sbb
popa
cmp
mov
loope
aas
in
mov
ret
int3
and
push
roll
int
mov
xor
and
mov
cwtl
in
std
xor
ss
shrb
shl
rolb
ljmp
sbb
sbb
mov
shlb
lcall
sub
adc
dec
movsb
ret
aaa
daa
negb
xchg
push
shll
mov
xchg
in
or
movsb
inc
mov
test
sbb
mov
lret
sbb
sub
xchg
pusha
xchg
xchg
mov
sbb
mov
dec
pushf
outsl
popf
cmpsl
insb
push
xchg
fabs
outsl
andb
push
and
sbb
or
cltd
fdivl
and
out
push
push
and
fisttpl
std
xchg
or
sbb
sahf
addr16
sbb
or
into
and
sbbl
insb
sbb
and
jbe
mov
push
neg
mov
pop
fnsave
pop
das
mov
mov
jl
sti
imul
in
mov
test
fwait
shll
fsts
jp
cmp
lcall
push
mov
push
cld
scas
cmp
arpl
mov
mov
loopne
sub
mov
scas
int
mov
icebp
pop
pop
pop
hlt
movsb
pop
jo
xchg
movsb
push
loopne
and
cmp
call
xor
push
or
test
js
sti
mov
shrb
movsl
pop
int3
mov
mov
dec
in
mov
out
iret
pop
lock
sbb
test
stos
or
mov
incb
push
outsl
arpl
push
sahf
es
jmp
scas
inc
in
jmp
jp
out
mov
pop
dec
ret
lds
stos
jbe
push
adc
loop
mov
sbb
repnz
pop
xor
cmpsl
je
pop
sahf
xor
fildl
cmp
inc
mov
cs
das
jmp
dec
pop
dec
repnz
stc
rolb
imul
jmp
pop
jne
dec
jb
sbb
sbb
or
push
dec
add
adc
fwait
sahf
cwtl
mov
in
in
fidivl
or
fsub
lcall
ret
repnz
gs
xorb
lcall
xor
repnz
aaa
pop
sbb
mov
fwait
dec
mov
or
bound
push
ja
int3
fistps
into
into
pop
ljmp
add
cmp
dec
lods
clc
pop
negb
sbb
aad
sbb
mov
mov
adc
fnsave
out
daa
jp
add
jns
mov
cmp
insb
arpl
or
lret
cltd
fistps
pushf
out
mov
mov
stos
jge
mov
or
fnsave
fldl
fdivl
lods
sbb
push
lds
mov
rcrl
lock
arpl
xchg
jb
mov
push
and
loope
jb
in
cmp
mov
mov
ror
mov
aad
mov
cmpsb
sahf
cmp
fldz
xchg
lods
lea
dec
pop
loope
and
dec
stos
fdivr
divb
rcrl
loope
imul
sbb
fcompl
mov
xor
pop
mov
mov
test
mov
push
test
sbb
into
sbb
mov
sbb
xor
pop
jp
andb
dec
dec
lock
lds
scas
cmc
imul
out
push
sbb
fcomps
negl
push
shll
pop
fistps
mov
outsb
dec
jmp
lret
inc
lds
fcoms
cmpsl
lods
pop
mov
push
cmp
xchg
push
das
mov
pop
jne
mov
sbb
pusha
mov
stos
icebp
enter
mov
test
hlt
mov
in
sbb
mov
dec
mov
mov
inc
inc
lock
popf
push
xor
mov
lea
fisubl
pop
xor
jl
pop
pop
std
sti
sbb
push
frstor
jle
inc
mov
inc
sbb
mov
lcall
outsl
sti
or
mov
pop
ljmp
pop
fsubrl
xchg
pop
push
aas
xchg
adc
fldt
jle
xchg
mov
fs
mov
mov
je
repz
mov
dec
mov
in
mov
sub
movl
lods
out
arpl
out
push
cmp
stc
je
loope
jecxz
mov
jns
hlt
scas
pop
dec
popf
popa
dec
rcrl
sbb
shrl
jnp
cld
jmp
push
pushf
call
mov
sub
sbb
mov
cmp
loopne
dec
sbbl
ja
sub
lcall
jbe
das
les
pushf
filds
cmpsl
pop
imul
pop
movsl
sbb
dec
les
adc
outsb
lds
mov
mov
xchg
divl
xchg
jno
stos
jbe
add
jp
fimuls
bound
mov
mov
mov
shll
or
aaa
scas
adc
adcl
inc
mov
in
adc
push
jmp
or
scas
aam
xchg
dec
pop
inc
shr
adc
xchg
scas
cwtl
stos
dec
xlat
inc
cltd
push
mov
jmp
lahf
inc
push
xchg
shrl
fldcw
mov
sbb
jns
loope
dec
cli
mov
mov
sub
adc
scas
cmpsl
insl
xor
fbstp
inc
cmc
dec
mov
addr16
sbb
ret
rorb
imul
add
ljmp
mov
pop
sub
loop
dec
arpl
pop
and
mov
call
repnz
cmpsb
incl
dec
mov
jno
insb
cmpsb
push
fucom
aas
dec
stc
sti
jle
cmpsb
adcb
cltd
xchg
pop
in
test
add
add
inc
outsb
imul
mov
dec
mov
and
std
sub
xchg
jl
mov
xchg
imul
clc
arpl
dec
out
outsl
and
jg
push
mov
out
jo
lcall
rcl
mov
xchg
sbb
aad
cmp
cwtl
rclb
fcoms
subb
jnp
adc
hlt
in
pop
jmp
andl
in
pop
es
sbb
sub
scas
dec
sbb
jne
jmp
sub
stos
sbbb
xor
push
xchg
sub
andb
movaps
xchg
shll
push
mov
insl
push
mov
shr
test
fsts
fcoml
push
imull
divl
pushf
jmp
jmp
mov
std
fdivl
jnp
call
inc
rorb
pop
xor
lea
jmp
sbb
mov
xor
das
out
loopne
add
dec
aam
mov
ret
lds
jno
push
mov
ss
mov
dec
xchg
fstp
push
pop
mov
dec
jne
jno
pop
pop
loop
dec
insb
cmp
mov
pusha
scas
push
sbb
mov
leave
out
ret
dec
rcrb
imul
gs
add
cli
bound
push
pusha
adc
int3
repz
dec
mov
shll
xchg
and
mov
jmp
mov
lds
xlat
sub
mov
movsl
test
mov
mov
adc
jnp
mov
jns
lds
jg
cmp
fsubl
imul
les
pop
xor
xchg
testl
cmp
sbb
pop
leave
and
movsl
ss
repz
jmp
dec
and
push
enter
dec
pop
push
or
add
xlat
sbb
ror
push
sub
lea
stos
cmp
pop
cmp
cld
jp
les
xchg
cs
cltd
pop
loope
mov
pop
xchg
dec
sub
cwtl
dec
pop
mov
jae
dec
cmpxchg
cld
outsl
lds
adc
out
ds
cltd
push
loope
stos
cmp
sbb
xchg
out
pop
pop
ret
mov
popa
lcall
sbb
mov
push
add
out
dec
mov
push
mov
sarb
dec
inc
xchg
int3
dec
popa
sbb
test
push
lds
inc
adc
out
pop
fistl
push
and
and
jb
cmp
push
test
mov
clc
jmp
addr16
pop
push
ljmp
mov
imul
in
cmpsb
ss
jg
movb
xor
int3
test
dec
jae
jmp
dec
fisubrs
stos
lea
mov
mov
test
decl
mov
fcoml
in
add
push
popa
cmp
addr16
sbb
test
test
and
xchg
jmp
push
aaa
fwait
pop
movl
loopne
lea
ja
int
push
out
call
stos
sbb
and
cmp
iret
addr16
add
or
xchg
jae
and
and
repnz
mov
sbb
dec
mov
mov
or
loopne
push
sbb
sub
movsb
push
ljmp
dec
lret
cwtl
mov
jp
adc
add
or
jmp
sub
insl
cltd
pop
push
int3
sbb
or
or
sbb
jb
lock
mov
dec
jnp
fsubs
xchg
sbb
dec
dec
sbb
add
mov
add
inc
frstor
in
jno
dec
sbb
loopne
and
sub
test
stos
xchg
xchg
jo
mov
mov
xchg
in
and
lret
pop
mov
test
clc
pusha
ljmp
xchg
out
in
or
xorb
pop
lret
push
pop
stos
jns
lock
pusha
mov
adc
andb
adc
jge
fs
mov
push
or
pop
mov
sbb
scas
fucom
mov
xchg
xor
cmp
test
add
lods
jmp
aas
out
mov
nop
shlb
sub
push
jge
aad
int3
sub
and
sbb
roll
imul
xlat
ss
aad
or
sbb
sbb
mov
das
imul
subl
fcompl
fdivrl
and
dec
div
inc
ljmp
test
stos
xchg
pop
ljmp
test
push
sbb
in
sub
push
ret
dec
divb
dec
and
addr16
aad
mov
notl
out
fbstp
hlt
xor
call
call
int
sbb
xlat
mov
adc
jp
pop
inc
outsl
lea
add
test
ja
clc
add
fcmovnu
fsub
je
push
into
rorl
test
loopne
insb
pop
sbb
fisttpll
jl
ljmp
stos
scas
fiaddl
cmpsl
stos
shr
nop
sbb
flds
pop
cmp
mov
aas
in
cltd
nop
push
xchg
and
mov
scas
dec
mov
imul
rcll
pop
xchg
mov
cmp
rorl
add
xchg
push
out
shll
fisttps
addr16
aaa
test
lds
jmp
inc
xor
sbb
cmp
xchg
jmp
scas
adcl
ret
repnz
and
js
and
sub
xchg
loopne
mov
pop
push
or
sarb
fadds
dec
lret
sbb
jnp
movsb
inc
dec
repnz
mov
aam
ret
into
add
fadds
into
cmp
outsb
outsb
fiaddl
mov
ret
sbb
int
sbb
outsl
fdivrl
jp
push
mov
adc
dec
jo
push
addr16
test
pop
popa
test
dec
adc
int3
out
jg
sbb
ret
ret
lods
insl
xchg
add
sti
jns
int
pop
in
iret
jno
mov
loope
movsl
int
adc
scas
testb
ror
mov
call
int
mov
mov
jg
xor
nop
jae
sbb
sbb
mov
out
xchg
ljmp
pop
ret
mov
les
and
mov
rcl
test
lahf
iret
xchg
sub
fldpi
xor
repz
push
stos
popa
sbb
inc
push
ret
int
dec
sbb
shlb
rcrl
sbb
mov
mov
pop
jge
imul
fs
lds
sub
sbb
sbb
or
xchg
mov
fisubrl
jmp
out
push
cmp
inc
add
ja
sbb
clc
dec
int
mov
push
orl
dec
or
sub
cs
cmp
adc
jne
movsb
lds
aam
jecxz
add
mov
jno
push
data16
or
fmul
and
xor
shll
stc
inc
mov
sbb
arpl
pushf
cld
mov
cmpsb
cltd
fstps
jg
add
fisubrl
add
mov
cmp
push
mov
dec
es
iret
out
mov
xchg
sbb
insb
int3
jmp
xor
sbb
in
mov
inc
pop
adc
fwait
movups
shl
inc
sbb
pop
or
dec
int3
sbb
loop
adc
fisttpll
stos
mov
in
mov
mov
sbb
sti
xor
lahf
in
sub
jge
insb
dec
or
dec
or
orl
push
pop
jns
xchg
out
push
ret
lret
rorl
jl
imul
inc
push
xor
dec
and
mov
cmp
mov
leave
cld
sub
dec
sbb
lds
xlat
sbb
wrmsr
movl
shrb
fimuls
mov
notb
je
jne
dec
popa
cmp
or
xchg
mov
call
int
sbb
into
pop
mov
push
and
fnsave
jb
test
ret
xchg
mov
ficompl
inc
sti
sbb
mov
lock
jae
notl
movsb
push
or
xor
pop
cmp
scas
loopne
pusha
pop
add
fdiv
scas
jae
xor
les
jle
in
sub
jmp
test
mov
loope
mov
mov
out
test
mov
mov
sbb
jbe
sub
mov
dec
mov
push
sub
fs
or
mov
jb
jns
fcmovnu
inc
mov
mov
lahf
les
cwtl
xchg
pop
data16
or
sbb
pop
dec
ljmp
xor
lcall
sbb
in
mov
ret
pop
add
push
sub
push
adc
sub
das
jp
call
add
pushf
mov
iret
test
out
cmp
ljmp
fildl
clc
add
or
ja
jne
shrl
push
pop
push
stos
imul
cmp
adc
mov
jno
sub
sbb
mov
mov
sahf
mov
mov
xor
mov
les
push
lds
or
mov
cmpsl
cmp
das
aas
addr16
add
adc
movsl
sub
xor
pushf
cmp
out
mov
cmp
rcr
lods
fucomp
fsubrp
ret
movsb
and
mov
enter
xlat
out
dec
cli
push
into
cmp
test
fidivl
int3
push
je
mov
iret
xlat
lret
sarl
mov
frstor
cmp
lret
inc
imull
lret
mov
faddl
aad
dec
testl
rcll
xchg
out
pusha
popa
cld
sub
ret
orb
repnz
lods
pop
or
int3
ret
and
lret
cmp
in
mov
addr16
decb
in
inc
lret
loopne
add
cmp
push
dec
lods
sbb
stos
je
inc
cmpsb
mov
and
inc
mov
inc
sbb
lret
xchg
xor
sbbb
cmp
lcall
dec
dec
and
or
movsl
cmpsl
push
adc
jg
jecxz
aam
cli
push
lret
in
adc
mov
dec
mov
inc
push
jge
repnz
stos
inc
inc
xor
and
adcl
jae
lret
sarl
cmpsb
roll
cmpl
xor
leave
cs
js
iret
inc
and
push
scas
in
or
test
mov
lret
aad
stc
mov
jmp
mov
ror
rolb
push
lret
mov
lret
jle
dec
push
or
mov
add
cmc
dec
stos
mov
or
adc
dec
inc
mov
xchg
pop
pop
dec
sbb
mov
mov
dec
mov
mov
subl
adc
int
xchg
mov
ret
aaa
cmp
repnz
in
mov
clc
inc
adc
pushf
cmpsl
sti
gs
std
adcb
scas
arpl
repz
adc
lret
in
mov
lret
fsubp
in
insl
insb
sti
add
pop
out
sub
xchg
lret
arpl
xchg
inc
xor
iret
lret
imul
test
out
dec
lcall
cmpsb
subl
push
adc
lret
sbb
cmp
sbb
mov
es
scas
icebp
mov
aaa
add
repz
or
shlb
test
mov
lock
add
lcall
inc
pop
sahf
xor
les
in
mov
jecxz
mov
add
int
jne
sti
mov
mov
pop
sub
sbb
mov
cmpsl
pushf
pop
or
idivl
or
mov
fwait
dec
arpl
sbb
lret
cmpsb
loop
das
xor
xchg
lret
mov
out
pop
pop
jg
mov
inc
aas
stos
cmc
shl
mov
mov
loopne
ja
push
stos
lret
lods
fnstcw
add
mov
hlt
mov
lret
lahf
sti
push
lret
mov
subb
test
rcll
mov
pusha
ret
xlat
fcmovne
cmp
xchg
sbb
lret
insl
enter
pushl
inc
mov
mov
rcrl
dec
pop
arpl
mov
sub
dec
pop
test
jo
jecxz
xchg
aad
push
and
push
push
mov
and
lret
adc
movsb
lea
roll
cs
xor
xor
inc
jns
lret
dec
insl
ja
das
gs
xor
mov
lret
ret
div
and
or
lret
sbb
dec
mov
cmpl
pop
enter
cmp
cmp
in
xor
iret
xchg
stos
aam
lret
mov
movsb
jmp
lret
cltd
cmp
pusha
mov
inc
push
push
mov
lds
int
gs
lret
ljmp
sti
shl
andl
ror
inc
lahf
mov
cmp
lret
mov
fnsave
js
lret
pop
mov
sub
repz
nop
fidivl
insb
dec
ja
out
enter
inc
xchg
mov
xchg
sub
stos
dec
push
sahf
cli
lret
sub
sbb
jl
lret
and
ret
cli
dec
mov
mov
inc
fs
push
insb
dec
add
push
cmp
cmp
lods
lret
push
ret
imulb
mov
int
mov
ds
pop
pushf
int
sub
push
leave
and
imul
xchg
fptan
cmp
gs
es
stos
mov
mov
xacquire
lret
dec
cmpsl
test
and
xor
aas
inc
mov
jl
xchg
and
movsl
lcall
mov
inc
stos
leave
sub
mov
mov
lret
cld
sub
add
mov
adc
mov
test
stc
leave
lds
aad
add
dec
fiadds
out
lods
icebp
adc
mov
or
and
dec
mov
lret
mulb
int3
add
dec
gs
shrl
pop
add
test
adc
ljmp
and
enter
xor
push
in
lret
scas
shlb
fdivr
adc
push
aad
scas
imul
jbe
adc
pop
and
inc
dec
xchg
stc
xor
js
or
pusha
iret
ljmp
sbb
mov
push
xor
cmpsb
daa
dec
xorb
push
repz
sti
dec
lret
jb
ret
sarb
mov
mov
jmp
fmuls
ds
in
aad
mov
mov
jl
cmp
push
imul
sbbl
add
repnz
dec
sbbl
fwait
xchg
mov
sbb
mov
sti
mov
pop
lahf
repnz
fwait
les
in
push
sub
pop
jg
mov
loope
int3
inc
insl
lret
sbb
inc
mov
jns
leave
ljmp
sub
cmp
scas
rcr
jmp
mov
out
pop
rorb
push
push
lret
dec
cli
nop
je
loope
add
ja
enter
mov
fiadds
and
lods
mov
loop
pop
or
lcall
lret
mov
mov
daa
dec
jl
dec
mov
fsts
lret
lods
adc
test
mov
movl
dec
fs
movsl
lret
jno
xor
aaa
pop
mov
rcl
popf
dec
and
xor
mov
ljmp
out
stos
dec
in
pop
push
sub
test
sub
addr16
and
sub
adc
dec
insl
out
ja
pop
out
movsl
jns
lret
outsb
jp
ret
or
sbb
pop
cmpsb
lret
xor
and
jae
mov
mov
hlt
sub
fsts
cwtl
inc
lds
insb
sub
push
data16
lret
inc
gs
into
sbb
lret
add
js
aas
das
sbb
dec
jecxz
push
aaa
fcomip
out
adc
lods
lret
pop
test
push
lods
inc
mov
hlt
jl
and
add
xlat
jbe
jno
jp
mov
push
or
test
fbstp
cmp
sbb
call
sub
xor
rcr
rclb
sub
jae
pop
test
clc
icebp
and
lret
mov
lret
in
aaa
mov
call
jns
test
gs
mov
sub
repz
ja
popa
sbb
in
jp
dec
dec
es
jecxz
lret
push
mov
dec
xchg
pop
xchg
test
jae
fdiv
inc
das
or
mov
repnz
lret
mov
aad
js
sahf
sbb
mov
jmp
dec
popa
mov
jns
gs
int
andl
push
out
xchg
imul
push
addl
stos
mov
cmp
ja
sub
rclb
testl
xchg
jno
push
inc
stos
call
pop
xchg
and
loopne
xchg
jno
cmp
sbb
jns
fisubs
and
jmp
imul
push
xchg
insb
dec
addr16
push
cmp
sub
dec
stos
adcl
jecxz
cli
addl
sbb
lock
pop
jbe
add
pop
sahf
jle
cmovl
lret
std
push
mov
mov
xchg
or
hlt
cli
mov
pop
mov
jmp
push
fbstp
cmpsb
or
xchg
sbb
sub
sti
mov
pop
sbb
out
lock
sub
mov
inc
lret
pop
rcrb
enter
lcall
sub
clc
adc
loopne
xchg
fstpl
pop
aad
sbb
stc
mov
aam
or
or
dec
pop
jns
mov
lret
fisubrs
int
mov
outsb
stc
int
je
sub
xchg
inc
sbb
dec
adc
call
push
sbb
aas
or
shlb
jg
inc
repnz
pop
in
popa
jmp
adc
pop
ljmp
jae
pop
sbb
cmp
sbb
xchg
pop
leave
xlat
fsubp
gs
out
sub
or
jbe
loopne
fdivl
add
push
out
cmp
out
cmp
loop
add
lahf
addr16
fsubrp
xchg
sub
push
jl
xor
xchg
adc
lods
xchg
sbb
mov
imul
outsl
inc
fcomi
shl
adc
mov
stos
ja
bound
push
test
add
mov
inc
jl
ss
std
lock
pop
ljmp
clc
adc
inc
fdiv
popa
lcall
rcll
pop
xchg
int
push
aaa
jno
push
xor
cmp
insb
sbb
sbb
mov
in
mov
or
xor
lret
adc
ljmp
sbb
xchg
lret
mov
movsb
jmp
cs
stc
dec
bound
dec
or
lea
cmp
fists
out
dec
jle
test
sub
lea
scas
pop
mov
push
jno
cmp
inc
add
adc
or
sbb
fisttps
lret
cmpsl
dec
jnp
aam
lock
ret
sbb
pop
insb
aad
pop
mov
cltd
mov
out
cmp
cli
and
or
push
data16
push
dec
int3
into
push
or
gs
std
jecxz
mov
add
fnsave
jg
adc
mov
insl
inc
shlb
pop
xor
mov
pop
fldt
sbb
jno
call
pop
xlat
out
jl
loop
and
mov
clc
scas
cmp
cmp
stos
xor
jae
arpl
ljmp
outsb
je
shll
negb
scas
add
mov
pop
or
sbb
add
jp
sbb
push
dec
ret
cli
pushf
inc
mov
imul
pop
int3
mov
inc
add
mov
repz
ss
cli
cmp
orl
sbb
jge
xchg
mov
fstps
mov
divl
sbb
sahf
mov
mov
aad
mov
inc
mov
xchg
pop
jge
cmp
shl
ljmp
sbb
ret
popa
popf
push
aam
push
push
sbb
in
push
jnp
cmp
cli
mov
mov
xor
push
jno
inc
sub
loop
xchg
and
add
inc
les
sbb
cmp
popa
pop
js
sub
xor
pop
adc
dec
lea
push
lret
iret
sbb
jecxz
push
lcall
cmp
out
fisubrl
addl
pop
pop
mov
mov
adc
lcall
fistpll
and
mov
mov
sbb
pusha
xlat
stc
mov
les
sbb
and
pop
jo
leave
dec
pop
mov
lods
insl
test
cld
stos
xchg
gs
cmp
lds
cs
rcrb
sbb
in
inc
lret
aam
test
mov
int3
lods
hlt
loop
imul
add
das
inc
lds
sbb
sbb
add
pop
pop
jmp
lea
getsec
mov
inc
xchg
mov
mov
std
mov
cltd
test
xchg
rolb
and
sbb
cs
outsl
xor
ret
push
movsb
or
pop
sub
and
or
push
push
lret
imul
into
mov
jmp
dec
and
ja
cmc
jecxz
dec
jp
sbb
jle
sub
lahf
leave
push
jns
sahf
rcrb
sbb
xor
inc
sbb
lea
sbb
in
fdiv
in
ret
xor
ljmp
outsl
or
sbb
inc
sarl
add
jno
push
bound
inc
pop
or
adc
mov
sub
pop
in
js
iret
aam
std
add
imul
out
dec
in
adc
jo
jp
xlat
xchg
outsb
xor
pusha
pop
mov
and
int
sub
fmul
fisttpl
inc
gs
sbb
or
in
out
jmp
into
mov
leave
enter
xchg
mov
sub
adc
int3
ret
xchg
dec
mov
and
imul
or
push
sub
cwtl
repnz
push
or
push
mov
lods
dec
pop
pop
call
dec
xor
imul
cmpsl
test
je
sbb
pop
fildl
xchg
push
sbb
add
push
mov
sbb
sahf
mov
adc
mov
test
scas
or
pop
sarl
jg
dec
or
dec
and
xchg
pop
or
mov
xchg
ficomps
scas
call
in
cmp
fmull
lret
xor
mov
jae
cmc
rcrl
cmpsl
mov
jns
stos
sbb
pop
lock
pop
ss
xchg
sbb
imul
lret
call
jno
jae
iret
lret
jne
std
xor
aad
lret
icebp
mov
dec
lods
fsubl
inc
dec
push
push
imull
and
adc
ror
jecxz
sub
nop
stos
dec
lahf
roll
outsl
test
aas
lret
arpl
mov
out
adc
lret
add
push
ljmp
dec
pusha
test
shll
xchg
or
mov
outsl
pop
fwait
jp
stos
jmp
cwtl
hlt
lret
xlat
mov
jnp
adc
push
sub
ss
dec
leave
mov
cwtl
sti
pop
jbe
fwait
inc
sti
lret
push
mov
pop
mov
inc
js
arpl
stos
pusha
pop
xchg
movsl
mov
jg
push
add
int
inc
or
lret
xchg
inc
jae
pushf
cmp
sub
cli
lea
stos
dec
fs
imul
inc
leave
pop
push
data16
sar
jp
lret
mov
lahf
fwait
bound
pop
mov
fisttps
sbb
cli
rclb
lret
cmp
les
lret
into
mov
inc
dec
fldcw
in
or
and
adc
repz
xor
pop
fdivrs
add
lret
sbb
fbstp
jb
in
daa
lret
rsqrtps
xchg
nop
and
rorb
xchg
lret
pop
adc
or
and
sub
mov
shll
lret
pop
pop
push
cltd
leave
fninit
lea
mov
xor
imul
lret
lods
mov
cld
adc
rorb
xor
lods
mov
loope
inc
jbe
loop
sub
dec
lcall
rclb
jb
lock
ret
push
sbb
clc
adc
mov
mov
xor
xchg
shr
or
bnd
lret
lret
js
or
cmp
mov
or
dec
sub
xor
mov
ljmp
mov
lret
out
sub
jecxz
add
xchg
add
cltd
xor
cmc
repnz
das
sbb
xchg
lret
jbe
dec
ffreep
movsb
lret
orb
inc
lret
je
iret
mov
lret
mov
xchg
mov
jae
add
push
and
lret
cli
mov
test
lret
xor
dec
in
lret
outsb
and
jb
cmp
and
into
and
pusha
lret
push
repnz
push
lock
ret
xchg
pop
push
mov
lret
adc
hlt
sub
roll
pop
jbe
sub
adc
cld
lret
mov
dec
mov
cmpsb
daa
mov
lret
das
fsubr
scas
dec
inc
ds
lret
mov
mull
icebp
pop
mov
mov
leave
mov
and
dec
xchg
fistpl
pop
push
es
jmp
fs
add
jg
dec
pop
ret
enter
ret
imul
das
xchg
and
divl
in
aam
shll
ss
or
mov
lret
lock
ret
lret
lret
leave
mov
out
cwtl
push
push
int
fwait
sub
loop
mov
dec
test
mov
faddl
add
out
jbe
fimull
call
loop
stos
scas
or
out
add
lods
push
bound
dec
add
ficoms
lret
lret
inc
dec
lods
cmpsl
fmuls
out
mov
mov
lcall
fdivs
add
lret
push
imul
lahf
insl
dec
mov
pusha
cmp
lret
hlt
and
jge
ret
sti
icebp
fsubs
insl
pop
jnp
or
pop
push
scas
or
cmp
mov
xchg
mov
mov
cmc
mov
iret
and
or
imul
xchg
cmp
or
es
aas
lret
jle
jne
fdivrp
lret
imul
add
xchg
ss
movl
loop
rorb
add
mov
lret
movsb
rorl
movsl
dec
hlt
imul
push
das
pusha
icebp
cmc
mov
jnp
lods
and
jae
adc
lret
int
mov
sub
icebp
ficomps
sub
lret
jae
dec
insl
jmp
jecxz
xchg
sarb
xchg
repz
adc
imull
fadd
je
add
and
dec
mov
ficoml
jb
push
sub
daa
fcmovne
add
aas
or
inc
cli
in
arpl
jne
sub
aas
hlt
lret
pop
mov
pop
ja
inc
lret
das
jne
je
or
shll
dec
or
sbbl
xchg
push
xor
and
push
or
mov
mov
clc
popf
fcmovnb
btc
dec
dec
movl
cmp
push
xchg
lcall
lret
insl
testb
out
repnz
ret
adcb
mov
or
sarl
mov
dec
cmove
pop
mov
dec
mull
jo
pop
mov
push
lret
cs
inc
das
dec
xchg
lock
in
nop
cmpsb
sub
pop
cld
sbb
mov
fwait
and
imul
loope
lret
icebp
pusha
aad
sbb
fsubrl
dec
adc
imul
push
dec
jle
hlt
int
sub
out
push
pushf
mov
movsb
lret
jae
dec
leave
dec
push
ror
sub
mov
mov
inc
mov
and
sub
dec
ljmp
addr16
ljmp
lds
lret
adc
mov
inc
and
xor
movsb
pusha
rep
lds
pop
dec
cmpl
scas
iret
aaa
sub
mov
cmp
in
addb
inc
push
sbb
es
into
leave
push
inc
lock
and
imul
mov
jle
into
out
xor
fmul
js
in
sbb
je
rolb
fnsave
xchg
fildl
fcmove
mov
or
pop
sbb
sbbl
ror
das
fwait
out
mov
test
pop
xchg
in
in
call
dec
test
lcall
in
mov
lret
mov
out
xlat
out
push
xchg
xor
pop
inc
ja
insb
sub
add
mov
dec
repnz
stos
cmc
and
cmp
out
lret
bound
movsl
sarl
push
iret
nop
push
add
pop
add
out
and
mov
xchg
stos
pop
mov
les
add
cmpsl
icebp
sarb
jno
js
mov
jb
dec
loope
rcrl
jmp
xchg
mov
sarl
add
lret
mov
and
fdivrs
pop
ret
shr
ss
sarb
sbb
lret
jecxz
jmp
mov
push
push
aaa
xchg
pop
imul
rcrl
stos
jno
pop
sub
sti
lret
nop
cmp
pusha
cmpsl
arpl
xor
das
sub
popa
cmp
test
int
xchg
fst
pop
and
adc
scas
mov
lods
call
test
and
loop
and
fwait
sbb
lock
xorb
xor
mov
jo
mov
movsb
ror
outsb
insb
xchg
or
sbb
fisubs
cmc
fmul
push
pop
push
int3
hlt
call
push
lret
subl
data16
scas
test
stc
ljmp
pop
pop
cli
testb
cmp
mov
dec
lret
sbb
ret
mov
pop
mov
add
lock
xlat
loope
jmp
cmp
lret
cs
rcrb
fwait
mov
lods
mov
push
stc
daa
mov
gs
ss
xor
lret
lea
test
inc
mov
int3
popa
ret
inc
fstl
ror
scas
sbb
lret
in
jo
aaa
sti
sub
cmpsl
xchg
gs
dec
stos
push
cwtl
int3
jns
mov
lret
xchg
hlt
and
cmp
sarb
ja
aad
jb
mov
lcall
dec
add
jge
dec
sarb
mov
dec
mov
aas
xor
xor
lods
iret
stc
sar
mov
sbb
test
lret
and
xchg
dec
jl
xor
lret
adc
sbb
or
cmpsl
jl
stos
sub
push
inc
adc
arpl
jp
xchg
mov
fisttpll
mov
ljmp
push
sbb
mov
mov
sub
mov
fcmove
xor
fidivrs
fcoms
stos
inc
push
dec
mov
push
dec
jnp
jns
loop
pop
inc
sbb
pop
mov
sbb
test
cmp
fisubs
ljmp
clc
sbb
or
outsl
xor
out
sub
repnz
out
jns
mov
jle
aaa
sbb
out
lret
cmpb
loope
mov
xchg
cmc
push
xlat
imul
dec
and
repz
pop
mov
test
lret
and
sbb
dec
cwtl
imul
jbe
jae
out
repnz
das
cli
jae
out
inc
sub
mov
cli
pop
loopne
jmp
fiaddl
fsub
fcompl
ret
dec
mov
mov
inc
fildll
or
mov
sbb
xchg
int
xor
pop
or
xlat
push
clc
jb
sti
add
mov
xlat
cmp
ljmp
pusha
stos
stos
sbb
push
push
sub
xor
mov
fwait
sbb
push
add
adcl
xchg
jb
lret
pop
pop
cld
into
es
adc
hlt
or
push
add
pop
mov
xor
ret
jecxz
sahf
sub
lea
pop
or
mov
pop
dec
mov
in
hlt
sub
mov
inc
dec
adc
jl
scas
mov
jge
popa
push
clc
xchg
jp
icebp
pop
sbb
or
fadds
inc
jae
and
les
popa
iret
xchg
rcl
adc
jg
out
mov
mov
add
test
addr16
mov
fbstp
hlt
mov
xchg
ret
or
clc
pop
xor
scas
pop
shll
ret
sti
sahf
xchg
add
pop
arpl
ror
movsb
push
int
fmulp
andl
jge
and
and
ret
fucompp
lods
jno
inc
adc
popa
push
pop
in
jmp
inc
pushf
ds
sub
jecxz
add
aad
lods
and
jp
js
sbb
cmp
lods
mov
and
daa
adc
aas
inc
std
and
cmpsb
movsl
mov
loopne
mov
adc
cmpsl
les
dec
lret
pop
shlb
mov
sbb
mov
ss
arpl
sub
push
xchg
popf
test
daa
sbbb
push
pushf
inc
adc
mov
adc
jp
fldt
mov
clc
cmp
or
divl
push
cmpsl
sub
mov
lock
or
lds
add
hlt
imul
xchg
fsubrs
aaa
insl
push
push
adc
mov
mov
outsl
ret
mov
arpl
popf
xchg
xor
mov
nop
mov
stos
pushf
out
xor
mov
mov
cli
xchg
dec
fdivrs
dec
sti
pop
icebp
inc
testb
add
dec
sbb
pop
sub
push
fnstcw
or
arpl
fmull
mov
addr16
lds
mov
xor
mov
jns
mov
or
enter
ret
mov
aad
or
sbb
adc
mov
sbb
lods
xchg
nop
push
mov
pop
lock
mov
cli
xlat
mov
push
sbb
mov
push
pop
push
jo
mov
inc
addr16
fs
ret
inc
xchg
shll
dec
sahf
jmp
pop
push
orl
dec
mov
mov
mov
loopne
sbb
lds
mov
rcr
ret
movsl
lret
jp
or
xor
out
xchg
inc
jne
sub
push
mov
or
fnstsw
aas
dec
mov
fistl
fnstsw
lret
lock
in
pop
repz
cmp
cltd
mov
mov
sbb
out
test
and
push
pop
pushf
sub
xlat
sbb
cmp
dec
rorb
out
fucomi
and
pop
cmp
ret
sbb
out
fs
scas
xor
add
iret
sbb
ss
xor
ret
jge
add
ret
inc
notl
push
notb
aam
lret
cmp
decl
ljmp
xor
push
sbb
jae
push
jae
ljmp
inc
push
sbb
add
adc
jno
sbb
push
mov
fbld
pop
repz
xlat
jne
push
popa
mov
pop
mov
aas
mov
and
jae
loop
mov
cmp
sub
cmp
test
push
shlb
test
xchg
push
arpl
jge
add
cwtl
aas
mov
xchg
in
sbb
mov
sbb
pop
sbb
aas
push
lret
rorb
pop
jne
adc
ljmp
arpl
sbb
loopne
and
addl
adc
ret
mov
cmpsb
shl
cs
add
or
lret
dec
lret
mov
loope
ds
repz
jg
jne
cmpsb
push
clc
and
inc
loopne
jbe
sbb
dec
cmp
mov
mov
stos
push
push
sbb
popf
sahf
es
sbb
pop
xlat
sbb
push
subb
frstor
jp
and
push
push
cltd
int
mov
sub
xlat
movsb
idivl
outsl
jno
pusha
iret
add
cmc
ret
ret
push
adc
das
xor
push
andl
lcall
rcr
ljmp
cld
pop
jns
mov
out
andb
pop
addr16
jmp
sbb
dec
pop
bound
in
fsubrl
jbe
or
jg
enter
cld
inc
and
xchg
ljmp
neg
outsb
mov
lret
shll
movsl
loopne
and
nop
addr16
movsb
ljmp
cs
pop
xor
mov
dec
add
mov
xchg
sbb
add
mov
xor
xor
adc
fcoms
imul
fwait
loop
popf
lret
inc
jnp
sarl
mov
hlt
aad
jne
cs
jnp
cli
movb
insl
outsb
filds
sub
call
sbb
lods
pop
jnp
lea
xchg
mov
loopne
add
insl
xchg
sbb
sub
sti
adc
jecxz
hlt
stos
or
jg
and
adc
scas
ficoml
shlb
sar
rolb
mull
or
dec
jle
cmp
cmc
mov
add
lock
arpl
loopne
in
pop
ret
sti
add
inc
pusha
add
sbb
cmp
sbb
and
xchg
pop
fcomip
mov
sarl
nop
mov
xchg
call
inc
bound
addr16
ret
or
jg
hlt
jb
imul
push
hlt
mov
or
aam
repz
cmp
test
std
rorb
mov
in
mov
sub
mov
jbe
adc
out
flds
push
push
shlb
jg
adc
call
xchg
xorb
arpl
sti
cmp
fwait
lock
sbb
das
ja
mov
jne
das
pop
dec
and
repz
sahf
dec
mov
imul
cmp
dec
call
cmp
sbb
cli
dec
mov
imul
shlb
arpl
inc
mov
mov
dec
movsb
sbb
scas
fwait
cli
repz
mov
cmpsl
sub
mov
int
mov
jmp
roll
das
or
in
or
sahf
fisttpl
inc
jno
out
add
cmp
lods
stos
cmp
mov
xor
xchg
out
sbb
adc
rol
sub
cmp
push
add
fwait
sbb
xor
dec
xchg
xchg
lret
inc
or
dec
jmp
push
sbb
pop
xchg
je
or
iret
dec
sub
out
jl
dec
xchg
popf
rcl
and
dec
sbb
pushf
push
push
cmp
mov
inc
cmpsb
inc
cmpsl
lds
popa
popl
ljmp
jecxz
gs
lock
call
inc
jne
rolb
inc
repnz
mov
dec
fisttpl
xchg
jbe
sbb
xor
out
fiaddl
pop
or
lret
rorb
movsl
cmp
mov
aad
xchg
lods
int
fisubrl
dec
mov
or
add
cltd
lahf
repnz
into
out
subb
xor
pop
sub
stc
lret
ljmp
jl
mov
inc
pop
adc
test
inc
sub
test
shl
popa
dec
push
and
dec
lret
sbb
test
sbb
cmp
arpl
insl
das
sbb
flds
lods
pop
xchg
out
cmp
inc
scas
js
insl
pop
lds
xchg
neg
mov
sahf
pusha
ret
faddp
in
lods
push
adc
data16
addr16
jmp
lods
push
enter
lret
cmp
inc
mov
mov
cmpsb
pop
mov
rcrl
dec
inc
sbb
push
lods
repnz
sbbl
pop
in
push
lcall
sub
lods
sti
sbb
jle
dec
pop
shll
flds
addr16
xor
test
sub
in
frstor
sub
loop
out
xchg
fs
andl
add
lock
cmpsl
shlb
jnp
sub
pop
loop
inc
rcll
push
sbb
daa
push
sbb
js
adc
insl
arpl
outsl
and
hlt
das
fsubr
mov
and
jne
pop
stos
sbb
jno
push
mov
popa
outsl
lea
sbb
int3
pushf
push
arpl
sbb
xchg
cmp
fs
cmp
push
jo
stos
xchg
and
mov
mov
lret
out
fldl
xchg
add
gs
fs
jns
leave
mov
and
movb
fstpt
sbb
pop
or
or
jno
cmp
fnstcw
subl
cmc
push
sub
lcall
arpl
sahf
aas
repnz
pop
cld
mov
mov
inc
ljmp
mov
jnp
call
or
aad
aaa
pop
jne,pn
cltd
in
cmp
bound
or
push
pop
push
dec
ss
pushf
sbbb
stos
lds
popw
das
ja,pt
sbb
sbb
add
movsb
cmp
jno
es
inc
mov
sbb
fisubl
cltd
mov
adc
pusha
push
or
aas
push
push
mov
ds
cli
sub
fidivl
pop
iret
pop
popa
sbb
fsubrl
cmp
push
adc
fwait
out
stos
xorl
lcall
cmp
mov
in
jo
xor
add
sahf
xor
jg
mov
dec
lret
xor
xorb
dec
nop
insb
cmp
mov
dec
dec
sbb
movsb
sub
loop
call
int
stos
or
stc
lret
fisttpll
dec
xor
push
sbb
fcoml
pop
arpl
jge
fs
ficomps
xor
hlt
or
cmp
xlat
addb
daa
enter
xchg
ret
lods
jecxz
into
cmp
pushf
leave
mov
sub
in
jmp
test
rorl
shlb
mov
call
dec
jge
push
fisttpll
loop
nop
mov
and
sbb
push
test
leave
fwait
sbb
negb
push
mov
sbb
popa
mov
ss
test
ljmp
dec
idivl
pop
sbb
cmp
andl
loop
xchg
icebp
jae
cmp
pop
test
cld
gs
imul
sbb
lds
enter
ret
out
lock
pop
jmp
shr
test
sbb
bound
sbb
fnstenv
sbb
dec
mov
outsl
gs
dec
jecxz
sbb
movsb
xorl
dec
int3
cmp
add
ljmp
mov
subb
jmp
sub
adc
or
or
jge
sbb
xchg
stos
pop
repnz
dec
and
rcr
in
mov
add
jns
lds
pop
aam
and
mov
xlat
lcall
ljmp
lret
sub
aam
pop
inc
jo
divb
sub
sbb
jns
sub
lds
mov
ret
mov
aaa
push
imul
clc
sub
loopne
mov
pop
push
out
repnz
sbb
jmp
mov
sahf
cmp
mov
outsl
test
xor
arpl
mov
mov
inc
popf
lret
inc
and
mov
aam
xchg
lods
sbb
dec
add
dec
lds
cmc
sub
fldenv
out
sti
pop
ss
mov
dec
sbb
cwtl
gs
push
out
sub
cli
neg
int
jno
into
push
aam
mov
sbb
lds
js
sarl
cs
gs
push
pop
push
repnz
mov
movl
stos
int
sbb
jecxz
push
faddl
mov
std
mov
stos
jp
sbb
loope
iret
pusha
fwait
into
addr16
pop
sbb
push
mov
movsl
nop
pop
or
cmpsl
lahf
dec
dec
cmp
mov
in
hlt
add
aad
sbb
sub
mov
ret
into
test
mov
popa
fistl
mov
sbb
pop
sbb
mov
fisubl
iret
push
bound
frstor
push
pushl
xor
dec
and
push
dec
pop
jno
leave
les
shr
xchg
pop
std
sub
cld
jo
daa
rclb
rcll
cmc
call
mov
out
arpl
cs
xchg
ret
jno
push
inc
mov
repz
adc
negb
int
ja
pop
in
enter
ror
lock
jmp
cli
call
or
stos
mov
or
pusha
into
cs
adc
imul
mov
icebp
jp
pop
into
out
mov
dec
cmp
xchg
mov
in
adc
push
and
lds
inc
fwait
mov
mov
int
jns
inc
test
jp
pop
into
leave
scas
mov
insb
shrl
push
mov
pop
sbb
lcall
mull
ret
xorb
jle
push
cs
sbb
xor
mov
sub
push
jnp
push
and
lret
or
sbb
lcall
add
mov
inc
inc
decl
adc
xchg
ja
jo
cmpb
adc
popl
mov
dec
ss
or
bound
ljmp
sub
ss
add
rorb
lret
mov
push
dec
sub
xor
mov
int
jnp
ret
xchg
mov
lods
inc
and
sub
fldl
inc
push
ret
aaa
rcrl
mov
xor
dec
and
inc
jmp
jge
loopne
xchg
mov
daa
fimull
dec
lock
repz
es
pushl
sub
test
pop
and
sti
dec
mov
and
sti
jl
and
leave
or
movsb
dec
in
pop
outsl
cmp
sbb
js
loope
dec
xor
pop
mov
les
xchg
sbb
xchg
aam
nop
lret
and
repnz
repz
fdivl
mov
es
pushf
int
repz
mov
fcoms
pop
nop
push
js
call
orb
jp
cs
sub
lock
sbb
dec
lds
out
push
in
xlat
sbb
inc
in
loopne
or
int3
pop
inc
push
repnz
lods
or
test
cld
jg
sti
sbb
pop
dec
cmpsb
sbb
sub
repnz
mov
and
dec
sbb
lret
ljmp
cmp
lds
js
inc
mov
push
pusha
xor
sub
scas
jl
mov
popl
add
jle
lcall
int
cmp
xchg
jp
mov
hlt
mov
insl
mov
pop
mov
adc
mov
mov
sbb
dec
in
and
dec
lds
dec
sbb
dec
out
stc
imul
clc
negl
in
sub
and
fcomp
cmpb
mov
xchg
or
mov
mov
sbb
sbb
cld
fcmovbe
mov
lahf
jns
mov
inc
lret
mov
rclb
pop
lahf
pop
imulb
mov
jmp
lock
aas
sbb
dec
sbb
sub
fmulp
int3
xchg
and
jmp
mov
xchg
repnz
loope
js
rcr
sbb
mov
xor
andb
es
jp
fidivl
jb
add
popf
orl
ds
push
or
mov
test
mov
in
push
inc
or
pop
ret
ljmp
sbb
sub
mov
mov
in
fcoml
std
push
add
sub
xchg
inc
aas
mov
dec
icebp
mov
stc
pop
shl
xor
std
stos
inc
test
int
out
xor
daa
pop
inc
nop
cltd
sub
xchg
lea
sub
stos
lea
icebp
scas
fisubrs
dec
sbb
loop
fnstsw
fstp
ss
sbb
xlat
test
enter
jle
ja
jl
sbb
xchg
outsl
xchg
mov
jmp
lcall
lods
test
sarl
aam
dec
lcall
adc
fnstenv
pop
lock
fstl
das
out
xor
loope
add
and
push
add
outsb
push
shll
mov
pushf
jns
xchg
add
inc
push
sbb
sub
test
xor
pop
inc
jecxz
sub
popa
mov
retw
mov
cmp
rorb
rcl
bnd
adc
cmpsl
ja
cmp
inc
iret
inc
outsb
inc
jne
cs
lcall
mov
scas
mov
mov
rol
ss
push
jge
outsb
rorb
rcr
xchg
sbb
pop
push
xor
jb
lds
lret
mov
test
xchg
into
into
cwtl
mov
outsl
inc
leave
ja
cs
mov
test
mov
sahf
dec
dec
mov
inc
je
xor
rclb
cmpsb
jle
iret
mov
mov
imul
push
in
in
mov
add
ljmp
dec
mov
jne
dec
fcompl
xchg
inc
imul
add
dec
jno
jp
and
fldenv
ss
and
addb
dec
mov
div
mov
add
mov
je
sbb
test
pushf
daa
or
call
and
divb
xor
frstor
jmp
popa
sbb
or
sbb
loopne
sub
jo
adc
fistps
aas
cltd
mov
dec
sbb
pop
mov
fptan
lcall
in
inc
mov
cmp
and
add
cmpsl
sbb
dec
mov
out
ret
clc
pusha
xlat
or
dec
mov
sbb
int3
stos
cltd
and
ret
fstpl
out
push
leave
fistpll
fnop
and
xchg
mov
dec
mov
test
shrl
push
xor
push
and
vucomiss
dec
int
lods
xchg
rolb
pop
out
imul
dec
inc
sub
aas
sbb
sbb
ja
ja
mov
call
fbstp
and
clc
loope
mov
out
push
popa
mov
mov
sahf
subb
js
sbb
lods
pop
rorb
addr16
out
push
inc
mov
imul
insb
sub
mov
mov
ret
pop
lahf
loopne
sbb
cltd
mov
mov
rol
testb
mov
jge
daa
jl
lds
notl
add
sbb
bound
rorl
adc
add
mov
in
xchg
faddl
cmpsb
icebp
lret
lods
ret
scas
xchg
mov
fmull
pop
cli
xchg
dec
rcrb
cli
jnp
jl
cwtl
ja
pop
sahf
insl
xchg
cli
pop
inc
dec
sti
mov
adc
lret
icebp
aam
xchg
dec
pop
or
lock
pop
clc
mov
jmp
cmp
or
mov
dec
jno
xor
out
ret
sbb
fstps
add
stos
sbb
pusha
test
sbb
push
leave
mov
cld
fmull
cli
rcrl
add
pop
cmp
mov
arpl
ret
mov
pop
leave
mov
jbe
arpl
xchg
mov
mov
test
mov
ficoms
inc
out
sbb
mov
or
cmp
mov
clc
outsb
hlt
jb
pop
fdivl
je
outsl
sbb
leave
dec
cmp
xor
ljmp
adc
sub
push
mov
xchg
push
sub
popl
aas
cmp
sbb
push
mov
data16
mov
popa
mov
sbb
mov
shrb
jge
add
mov
repz
sbb
jge
arpl
hlt
xchg
mov
mov
inc
stos
pushf
xchg
lds
xchg
adc
pop
iret
fcmovnbe
nop
jp
mov
cmp
in
cmc
xchg
xchg
repz
repnz
test
dec
pop
aaa
call
lret
movsb
xchg
adc
lds
mov
add
adc
int
mov
sbb
les
in
sbb
cmp
addl
push
mov
in
mov
fwait
aaa
add
les
sbb
inc
ss
or
mov
addl
mov
xchg
int
cmp
ficompl
add
mov
inc
mov
mov
scas
inc
jnp
pop
dec
ret
pop
cwtl
inc
xlat
xchg
aaa
add
cmp
movsb
jmp
mov
popf
imulb
movsb
push
mov
mov
mov
mov
lahf
les
xchg
push
std
sub
inc
out
outsl
insl
inc
fiadds
inc
mov
imul
lret
xor
shl
shll
aas
dec
outsl
sub
jg
lods
repnz
lret
cld
out
loope
lahf
movsl
push
lret
loopne
call
int
jge
in
sbb
sub
imul
jg
cmp
mov
ret
xchg
fisubrs
lret
mulb
aas
int3
call
filds
call
data16
mov
icebp
jbe
sbb
loope
mov
xchg
cmp
lock
xchg
stos
mov
xor
and
lcall
out
mov
add
pop
mov
dec
sbb
mov
sbb
sub
rcr
fwait
xchg
inc
add
mov
rcr
sbb
lcall
lret
adc
mov
xchg
pushf
jmp
testl
jmp
xchg
xor
mov
cmc
sub
ret
pop
push
fs
inc
je
jmp
repz
sub
gs
faddp
test
pop
inc
insb
fs
pop
xor
shrl
inc
sbb
mov
in
inc
xor
in
cmp
lcall
xchg
sbb
push
xchg
arpl
nop
lea
mov
and
cmp
aam
push
fnstsw
pop
push
mov
mov
cmp
sahf
ss
cmp
sub
cmp
xlat
cmp
inc
aam
int
lock
mov
xchg
adcl
jbe
shlb
repnz
inc
jmp
sbb
push
sub
xchg
adc
int3
add
and
out
ljmp
stc
nop
xchg
pop
pop
sbb
sbb
pop
jge
popa
stos
xor
inc
or
shl
jns
sbb
rcrb
stos
imull
or
sbb
inc
loopne
int
cmp
jno
mov
pop
inc
and
mov
mov
adc
jnp
inc
mov
lret
sbb
add
sub
jge
leave
int3
movsl
sbb
fld
mov
cmpsb
int
jnp
popf
enter
mov
jmp
add
into
xchg
in
mov
jmp
jle
jg
pop
xchg
jge
int3
mov
scas
jge
gs
arpl
ret
mov
and
xor
mov
pushf
ds
fdivs
fwait
jle
fcomi
nop
sahf
lret
aad
mov
cmp
sbb
rcrl
xchg
das
push
push
sbb
inc
ds
mov
mov
fistpll
fsubrp
jne
std
dec
xor
pop
adc
out
rcrb
ret
sbb
ret
leave
and
sbb
jns
jecxz
call
adc
adc
rorl
cmp
lea
cmp
outsb
test
and
mov
out
mov
mov
insl
lea
mov
dec
mov
mov
fs
lods
scas
push
iret
les
mov
or
sti
adc
mov
xchg
mov
push
pop
popf
push
dec
fimuls
sbb
pop
push
repnz
ret
mov
mov
adc
mov
push
testl
test
mov
xchg
push
scas
aam
jno
hlt
xor
jmp
add
and
movl
jne
jl
inc
dec
push
add
xchg
jno
or
fisubl
push
pop
rcl
les
adc
daa
aad
cmp
cmp
push
dec
repz
or
xchg
dec
mov
rorb
fisttpll
mov
pop
ret
mov
ficoms
add
out
lret
xorl
or
jno
addb
sub
faddp
xchg
jecxz
testl
js
sub
jns
push
fmul
cli
je
sbb
aaa
call
out
lea
and
jb
xchg
arpl
mov
jmp
ss
ret
mov
fistpll
mov
xor
idivl
add
and
cltd
inc
push
cmp
dec
arpl
xor
and
fs
inc
add
ljmp
hlt
mov
or
mov
stos
ret
dec
stos
shrl
cld
aaa
test
inc
mov
nop
fwait
inc
xchg
hlt
fmuls
int3
pop
dec
jae
sbb
inc
jno
int
les
sbb
adc
mov
mov
testb
mov
sahf
mov
xor
sti
rcrl
scas
loope
fidivl
cwtl
sub
lea
mov
pop
lea
sahf
and
jp
xor
repz
test
out
shr
push
adc
push
clc
pop
sbb
imul
gs
inc
sub
jecxz
cmc
hlt
sub
enter
sbb
fs
iret
fisubrl
repnz
ret
test
bound
loopne
add
ljmp
mov
clc
jnp
inc
into
mov
mov
mov
out
pop
shlw
ja
mov
inc
cwtl
scas
sbb
cmp
sbb
xchg
xchg
lret
sbb
imul
in
shrb
insl
outsb
xor
xchg
mov
shlb
push
call
out
mov
gs
adc
dec
cmp
push
mov
mov
addr16
push
mov
push
fsubp
ss
movsl
sbb
or
pop
adc
pushf
mov
popa
pushf
dec
add
sub
push
mov
push
in
dec
sub
sbb
cmp
out
lods
cmpb
dec
test
lock
bound
xchg
sahf
sbb
cmp
leave
and
addr16
pop
icebp
sbb
jecxz
in
xchg
sub
add
sbb
out
push
jg
or
sbb
lret
sbb
loope
mov
pop
jmp
cs
lret
das
mov
and
bound
bnd
shl
cli
pop
dec
xchg
aad
ss
loop
int
mov
popf
pop
jle
daa
pusha
lret
leave
inc
int3
iret
pop
cli
out
shll
cmp
hlt
lret
adc
mov
xor
test
cli
fwait
nop
lret
or
mov
insb
icebp
sub
pop
lea
and
and
inc
adc
lods
mov
movsb
lret
fnstcw
testl
test
jmp
clc
rcll
fisubl
sbb
lret
push
adc
lods
mov
sbb
cli
or
add
cmpsl
scas
pop
dec
lret
loope
ret
leave
stos
clc
out
cmpsb
cli
xchg
dec
mov
add
lret
sub
sub
jmp
jno
aaa
or
sbb
in
jae
andl
mov
or
and
ja
sub
ficompl
inc
bound
jne
icebp
scas
push
cmp
hlt
cmp
or
rcrl
mov
xlat
enter
dec
jns
ror
iret
adc
leave
aaa
shrl
pop
push
jle
lret
push
movsb
push
dec
scas
arpl
lret
in
loop
je
cmp
lret
xchg
push
repz
mov
negb
or
adc
out
cmp
lret
mov
aad
dec
inc
inc
mov
cmp
outsl
pcmpgtw
rcrl
sub
mov
dec
idivb
and
hlt
xchg
ret
jle
xchg
mov
sbb
ret
sub
std
pop
cmp
mov
xchg
or
pushf
sbb
jp
mov
jae
push
jp
sbb
inc
ss
jle
jbe
push
js
jns
jae
inc
or
scas
sub
sbb
xor
pop
or
and
lret
dec
scas
inc
arpl
push
add
push
push
ljmp
cmp
fcmovb
cmpsb
popa
pop
pop
movsl
jl
sbbb
xchg
and
es
push
inc
jno
andl
aaa
push
in
push
lds
dec
or
or
mov
shlb
xchg
mov
and
shll
dec
in
sbb
adcb
and
in
mov
sbb
push
scas
jae
arpl
stc
ret
xchg
movsb
int
and
inc
sbb
sub
test
sub
ja
repnz
movsb
imul
dec
aam
into
add
sub
sbb
cmp
out
inc
out
jns
es
cli
dec
adc
pop
pop
push
sub
cwtl
jge
lds
dec
cld
loopne
inc
cltd
fidivs
pop
add
mov
add
pop
fwait
xor
sahf
xor
sbb
xchg
sbb
ret
nop
xchg
ret
xor
or
mul
and
push
xchg
push
add
mov
mov
and
push
test
mov
dec
fdivr
aas
sub
push
sbb
popa
xchg
mov
xor
inc
lret
sbb
pushf
and
lods
fwait
inc
fsubl
mov
fldenv
ja
sub
shlb
inc
ljmp
dec
pop
ret
and
data16
mov
ss
push
mov
leave
sbb
adc
xchg
dec
or
cltd
jg
insl
mov
mov
pusha
out
les
imul
inc
leave
fsub
mov
jo
enter
xchg
repnz
mov
fmull
xor
push
and
inc
out
ret
add
lret
sbb
xchg
push
pop
ss
sbb
jbe
xchg
testb
pop
or
cmc
movsl
divb
sub
push
dec
imul
sbb
pusha
jns
stos
enter
dec
aad
mov
dec
bound
out
lahf
ret
nop
lahf
sub
lock
push
adc
jb
mov
test
mov
fsubrl
mov
and
pop
cmp
ja
ljmp
push
fsubl
orl
xor
pusha
frstor
js
sub
xchg
and
mov
dec
or
add
cmp
inc
imul
cmp
std
sbb
pop
loope
jno
jle
insl
jae
or
dec
in
mov
cmp
fdivs
outsl
out
xor
sbb
jne
xor
test
inc
push
cld
xchg
outsl
cwtl
xorb
adc
test
cmpsb
pop
xor
in
repnz
xchg
test
scas
jb
arpl
cmp
lret
mov
jo
xchg
ja
xor
and
int3
pop
sub
xchg
mov
inc
jle
inc
pop
lret
or
adc
lret
dec
xchg
flds
lea
pushw
push
dec
sub
xchg
and
mov
push
sti
mov
fiadds
inc
jae
push
mov
gs
nop
add
into
inc
ja
loopne
sub
push
fnsave
cli
cmp
notl
nop
sbbl
cmpsl
shlb
jno
mov
fisttpl
or
arpl
push
movsb
addr16
stos
scas
push
mov
jne
mov
fsubr
addr16
rcrl
fcoms
mov
gs
addb
sbb
inc
mov
negb
in
add
hlt
lea
xchg
inc
pop
mov
test
emms
sbb
xor
dec
mov
fidivrl
cmpsb
mov
pop
sub
out
lods
aas
push
scas
inc
rolb
sbbl
loope
or
push
sbb
add
pop
inc
mov
movsb
sub
sti
sub
push
pop
pop
dec
mov
xor
xchg
rclb
fdivr
and
dec
sbb
mov
mov
ret
sub
mov
loopne
out
cmpsl
pop
fildll
loopne
lret
mov
and
jnp
fidivrs
cmp
dec
sbb
dec
fisubl
vmptrst
cmp
addr16
in
mov
push
leave
sub
push
mov
lock
inc
mov
icebp
test
out
and
mov
mov
cld
aas
jne
mov
ficompl
in
dec
subl
sbb
mov
jmp
aad
aam
xchg
sub
test
loope
pushf
cmpsl
enter
mov
dec
repnz
add
push
dec
cltd
mov
adc
add
es
gs
dec
popa
fimull
mov
sbb
pop
lods
mov
fcomps
jle
sub
push
push
iret
cmp
aas
loop
pop
sub
jmp
sbb
sbb
dec
ficoml
int
lret
mov
fs
testl
inc
int3
and
out
icebp
repnz
fisubl
cmp
push
mov
push
test
push
inc
mov
mov
fidivs
cltd
xor
mov
loope
addr16
adc
dec
ret
lret
inc
stos
hlt
das
addr16
mov
aam
dec
mov
imul
or
dec
mov
jl
cmp
dec
into
out
pusha
cld
stc
cs
stos
sbb
pop
mov
loopne
jb
lret
lret
in
inc
cmp
out
leave
and
mov
jmp
mov
and
jle
nop
lods
in
add
in
xchg
loope
xor
jg
mov
mov
les
xor
pop
sbb
and
gs
inc
mov
ret
sbb
ja
dec
mov
sub
enter
mov
imul
enter
cmpsl
lods
ret
das
in
je
cwtl
out
lret
pop
jg
dec
push
mov
xchg
xchg
push
out
add
fldenv
out
std
jae
push
out
xor
sub
call
jae
stc
loope
lcall
mov
mov
xchg
fidivrl
aad
jnp
dec
mov
out
inc
ret
cmc
inc
aam
stos
das
sub
dec
sbb
nop
loop
jb
dec
mov
mov
out
pop
cs
add
retw
mov
push
mov
and
xor
mov
ret
or
andl
test
xchg
das
dec
hlt
and
lret
jl
test
mov
std
dec
or
outsb
jecxz
cmp
fs
popf
out
cmp
int
fcompl
pop
shrl
xchg
ret
add
lcall
add
popf
clc
fistps
jne
pop
out
inc
outsl
int3
in
dec
arpl
pop
jge
pop
xchg
sbb
mov
je
jp
mov
jg
imul
fstps
dec
and
adc
fs
jnp
out
fisttpl
add
sbb
das
add
loopne
ret
popf
cld
sbb
add
lahf
loop
lock
jmp
leave
lret
fsubl
mov
dec
mov
xor
pop
mov
fstpt
push
pop
out
lret
incb
pop
sbb
xchg
adc
sbb
ds
mov
jno
fisubrs
call
jl
jns
in
jns
dec
shl
xchg
mov
sbb
movsb
dec
jbe
aas
and
shl
test
xor
mov
gs
test
into
mov
int
push
pop
mov
adc
xchg
sbb
je
dec
add
jmp
pop
sarb
lcall
in
jae
sbb
lcall
fldenv
mov
sub
iret
fwait
popa
ljmp
xorb
rclb
dec
lret
stos
sbb
repz
pop
xchg
je
cmp
mov
fnstcw
push
xchg
or
sbb
pop
adc
lods
and
sbb
pop
mov
xor
jno
addr16
in
adc
pop
sbb
xor
xor
or
imul
dec
mov
mov
loopne
cmp
sbb
rcl
cli
xchg
ret
xchg
sub
fbld
bound
ret
cmc
mov
flds
xor
test
sbb
cmp
inc
lahf
fcompl
adc
dec
dec
add
pop
sti
add
sbb
ja
gs
cwtl
mov
add
cmp
and
cwtl
xor
add
out
mov
lret
sbb
mov
mov
sbb
adc
lret
mov
jmp
cli
int
xchg
add
cwtl
jbe
adc
adc
pop
repnz
sbb
jecxz
sub
sbb
inc
ret
shr
jae
dec
out
aad
jle
sbb
rol
push
mov
ja
scas
mov
push
add
les
inc
stos
repnz
imul
pop
sub
stc
jae
sbb
scas
and
ljmp
pop
jecxz
loop
scas
mov
cmp
inc
lret
dec
xchg
mov
add
cmc
mov
outsl
jnp
das
daa
push
fiaddl
lock
adc
push
push
sbb
sahf
ret
frndint
ds
jno
fbstp
sbb
lods
sub
dec
jmp
or
lret
push
or
adc
int
mov
jae
jecxz
clc
fidivrl
jp
or
or
lds
sbb
cmp
iret
xchg
inc
sbb
loop
inc
xorb
test
fwait
ret
scas
stos
cmp
mov
sbb
movsl
fdiv
pop
in
outsl
rorl
mov
cmc
mov
push
lret
pop
pcmpeqw
or
xor
jno
mov
je
outsl
sbb
shl
mov
pop
aad
cltd
stos
bound
sbb
scas
pop
mov
mov
jmp
inc
mov
lds
dec
imul
test
inc
call
stc
mov
imull
outsl
sahf
push
pop
mov
sti
jns
push
mov
test
cld
pop
mov
sti
icebp
inc
sbb
lds
dec
mov
pop
and
jae
mov
loopne
xor
test
cmp
sub
push
popf
mov
test
xchg
bound
add
xchg
xchg
enter
test
jns
popl
ja
sub
nop
in
adc
push
arpl
loopne
jmp
mov
inc
and
mov
mov
insl
xchg
xchg
adc
adc
and
mov
pop
jno
rclb
adc
pusha
sbb
test
js
push
mov
dec
dec
aad
jl
jl
ret
stc
test
fsubrl
adc
sub
cli
mov
in
daa
les
mov
xor
or
push
sbb
int
insb
ljmp
pop
sbb
inc
xchg
xchg
cltd
mov
jmp
arpl
shl
jae
dec
ror
sub
test
dec
push
mov
int
movsl
or
popf
into
cmp
mov
xchg
sub
push
or
adc
mov
xor
es
movsl
leave
cld
sbb
divb
mov
scas
ljmp
ret
and
sub
add
jge
ds
adcb
cld
bound
push
push
push
xor
and
sbb
sub
mov
addr16
jbe
mov
inc
pop
int
pop
sbb
xor
xchg
dec
pop
aaa
pop
xchg
dec
repnz
mov
mov
out
lret
mov
lret
daa
adc
adc
ljmp
out
add
bnd
call
sbb
pop
addr16
aam
jo
fdivp
push
and
enter
bound
or
jle
pop
mov
cld
test
xor
addr16
int
jp
pop
test
retw
aad
and
loopne
inc
adc
das
loop
loope
rorl
cmpsl
pushf
stos
jbe
pop
fcomi
subl
mov
inc
fdivrl
dec
push
dec
xchg
lds
pop
dec
jne
test
pop
ja
sub
test
adc
in
sbb
sbb
movhlps
stos
sbb
orl
xorb
cmc
push
xchg
cmpsl
ret
lcall
loopne
or
testl
out
sbb
push
clc
loope
add
sbb
push
adc
mov
mov
out
cltd
leave
test
outsb
les
cmp
cwtl
sbb
mov
fwait
pop
fdivr
out
icebp
inc
rorb
insb
xchg
int
inc
dec
sbb
cwtl
xchg
xor
and
cmp
add
mov
int
adc
add
out
stc
lea
test
das
cmp
scas
ss
mov
lcall
addr16
mov
inc
inc
cli
loopne
cmpsb
int3
sbb
push
mov
push
mov
xchg
mov
pop
nop
or
mov
repnz
in
jno
mov
sbb
addb
mov
cmp
push
fmuls
rcl
mov
out
xor
es
test
mov
mov
stos
sub
sbb
pop
jae
into
scas
xor
test
addb
rorl
mov
inc
das
dec
mov
sahf
xchg
mov
mov
rol
stos
pusha
jecxz
push
xchg
sbb
inc
add
sbb
sub
cld
stos
movb
or
cmp
jg
ljmp
ficompl
popa
xlat
inc
fstps
or
pusha
data16
int
clc
mov
outsb
xor
sbb
jno
cmp
dec
rorb
sbb
ljmp
jecxz
push
sbb
pop
sbb
xor
out
pop
fcomps
or
sbb
test
xor
jns
loope,pt
imul
xor
mov
jo
dec
pop
push
enter
sarl
sbb
fwait
add
mov
jle
sbb
jg
push
rcrl
push
adc
sub
stos
stos
mov
or
mov
add
push
in
outsb
xor
xchg
jmp
and
or
mov
xor
xchg
mov
dec
iret
fisubrl
jb
xchg
outsl
adc
or
movsb
push
push
ja
aas
dec
push
fistpll
add
mov
testl
pop
mov
cmc
xor
jmp
cs
mov
dec
dec
and
push
cmp
mov
lea
push
push
xchg
mov
add
ljmp
scas
xor
add
xchg
shll
xlat
call
mov
mov
neg
arpl
cmpsl
cli
pop
das
add
or
fs
mov
out
mov
loop
cmc
pop
movsb
or
push
icebp
or
stos
ss
pop
scas
es
testl
or
fiadds
ljmp
push
and
jns
lahf
mov
lret
popa
pop
push
pop
std
xchg
test
inc
xor
cmp
pop
and
mov
mov
and
inc
mov
mov
lcall
sarl
or
sbb
ljmp
pop
popa
add
int
rclb
pop
sbb
mov
dec
lret
sbb
mov
test
and
mov
mov
jns
pop
jge
inc
scas
loopne
or
je
es
mov
xchg
pop
out
fs
ja
cmp
cmp
xchg
popa
icebp
mov
jns
inc
mov
inc
sbbl
dec
sbbb
aaa
lods
push
imul
pop
dec
out
jmp
cld
dec
lret
dec
rorl
es
insl
shlb
cmp
ret
pop
pop
mov
and
pop
push
mov
stc
outsl
sbb
sbbl
push
mov
jae
int3
sbb
pop
in
pslld
pop
jae
dec
inc
sbb
xchg
or
clc
lret
std
sbb
out
push
xor
xchg
cltd
xor
dec
inc
mov
or
icebp
insl
arpl
mov
pop
mov
addr16
lret
lret
icebp
in
ljmp
imul
and
lods
lcall
pop
jmp
mov
add
cmp
lods
insb
pushf
xor
xor
jmp
jp
push
or
testl
dec
and
nop
xor
negb
push
stc
test
cmp
dec
idivb
int
lcall
push
pop
pop
fistps
lock
lret
aam
xor
jne
push
cli
dec
ss
rol
nop
popa
outsb
lock
in
add
pop
iret
in
aas
mov
fstp
addr16
repz
sbb
mov
sbb
sub
dec
outsb
ficoml
push
xor
push
lcall
loop
sub
das
jle
fadd
mov
mov
shrb
and
xor
sub
sub
sbb
test
inc
pop
push
ret
sbb
loop
int3
test
repz
mov
xchg
jns
push
or
mov
lock
cmp
sti
push
fidivl
sbb
pop
gs
mov
xchg
fs
sbb
pop
sub
js
test
es
cmp
pop
pop
lret
sti
pop
je
xor
mov
xchg
mov
cmp
arpl
push
mov
lret
sarb
orb
sbb
roll
test
xlat
cmp
push
xchg
scas
sbbb
scas
hlt
xchg
mov
les
pop
push
lea
mov
loopne
lods
mov
loope
xchg
sti
addr16
scas
inc
into
xlat
test
cwtl
cltd
cld
lds
xor
push
loope
mov
addl
xor
out
and
jmp
ret
loope
mov
dec
sbbb
xor
push
push
sbb
test
or
push
and
fsubs
adc
jne
clc
mov
or
push
and
hlt
insb
mov
popa
mov
dec
xchg
inc
mov
es
adc
or
inc
sbb
sbb
mov
xorb
rcl
loope
sbb
adc
or
rcll
mov
js
lods
xchg
lahf
faddl
loope
xor
insb
mov
mov
lret
mov
push
sub
mov
xor
loopne
xor
fs
cmpsl
mov
adc
inc
sbb
test
stos
imul
pop
mov
loop
lcall
in
jecxz
sub
mov
insl
repz
test
mov
or
fsub
ja
xchg
mov
ret
pop
or
mov
fwait
lcall
jbe
sbb
fwait
jae
sub
fadds
cs
or
sarl
sbb
clc
fnstsw
sbb
or
loop
dec
sbb
xchg
mov
jg
mov
cmp
sti
fsubrl
xor
and
xchg
cmp
or
cmp
push
and
xor
inc
push
sub
and
jae
adc
lods
lds
and
shrl
inc
imul
clc
xchg
mov
pop
sbb
jg
add
frstor
mov
jae
dec
stos
cli
imul
xor
or
mov
fldenv
fdivrs
dec
int
or
dec
scas
clc
fdivr
mov
jg
push
int3
addr16
mov
fisubl
mov
jge
sbb
push
int
sub
mov
dec
outsb
out
ret
sub
cmpsb
mov
push
adc
frstor
movsl
mov
scas
ret
mov
loop
pop
jae
xchg
loopne
sub
fimuls
fisttps
push
imul
sbb
loope
sbb
xchg
loopne
test
sbb
bndldx
out
fwait
push
push
cmc
and
pop
push
cmpsb
pop
sub
cmc
pop
sub
inc
sbb
lahf
mov
pop
leave
pop
jp
es
mov
cmpsl
jg
sbb
mov
in
ljmp
push
jge
aaa
aas
mov
stc
push
jno
sbb
or
add
mov
sub
lahf
fnstcw
xchg
es
lret
xlat
push
inc
psrad
mov
mov
sub
mov
jo
inc
testl
xchg
cmc
jno
imul
jmp
jbe
or
imul
lcall
lods
or
in
jne
inc
test
mov
cmpsl
ret
push
xchg
sahf
subl
push
outsb
int
sub
les
mov
arpl
sub
sbb
jo
jecxz,pt
hlt
jmp
dec
fbld
loopne
push
sbb
push
loope
movsb
or
loopne
xchg
in
fmuls
push
loopne
movsb
inc
sub
inc
or
insl
lock
mov
in
xchg
pop
jg
cmc
push
xchg
push
sbb
imull
pop
lahf
bound
stos
stos
addr16
fstpl
push
test
mov
std
rcl
loope
mov
fdivl
mov
mov
adc
mov
sbb
dec
inc
inc
pop
sub
lret
roll
inc
jp
jns
xchg
mov
inc
pop
and
in
xchg
out
scas
rol
sbb
lret
dec
aaa
movsb
sub
xor
in
inc
in
add
jecxz
push
push
inc
fstpl
sub
cmp
divb
adc
jg
fwait
pop
test
iret
ljmp
jns
pop
add
cli
inc
pop
sub
fidivrl
jo
std
sbb
pop
sti
push
int3
enter
mov
mov
push
shlb
mov
sub
xlat
in
into
xor
cmp
jmp
in
or
fsubrl
aam
jp
imul
rep
sbb
sbb
mov
mov
cmp
cs
fs
sti
std
and
inc
les
leave
in
cltd
sbb
mov
insb
es
sbb
cs
pop
adc
das
loopne
mov
ljmp
sbb
mov
daa
in
decb
inc
icebp
clc
cltd
jg
cld
xchg
test
inc
repnz
xor
xorl
mov
mov
jmp
dec
es
jns
sub
popa
mov
jecxz
dec
xchg
ja
pop
int3
cmpsl
mov
dec
cmpl
fisubs
xor
jno
lods
push
dec
sbb
xor
mov
adc
clc
jb
cwtl
mov
mov
inc
jo
pop
mov
inc
inc
movb
bnd
xor
int
insl
sub
outsl
jecxz
xchg
add
outsb
cli
push
ret
jl
inc
pop
in
std
movsb
cmpsl
inc
cmp
mov
lahf
cltd
outsl
and
fstpt
mov
imul
push
in
sbb
cld
push
mov
jae
loopne
xor
or
aas
or
adc
xor
fcmovnu
add
sub
xchg
cwtl
js
mov
sbb
inc
cmp
mov
cmp
out
jle
lret
test
test
test
pop
mov
xor
sub
dec
sbb
mov
xchg
subl
and
cmpsl
fistpl
and
cli
ret
lret
jle
cmp
mov
pop
mov
mov
rcll
jp
mov
data16
jo
add
mov
aam
adc
ljmp
cmp
or
adc
ja
stos
cmp
and
in
pop
ret
insb
es
jmp
cmpsb
lahf
pop
push
movsb
mov
cltd
orl
or
xor
mov
xchg
inc
repnz
mov
fldl
imul
jnp
in
xlat
pop
mov
fstpl
inc
test
std
dec
js
loope
loopne
jmp
sub
stos
xchg
inc
sbb
aam
cld
imul
mov
mov
sub
xchg
mov
adc
xchg
and
fsubl
pop
filds
popa
cmp
out
pusha
push
and
cmp
cltd
mov
jle
cmc
xor
lcall
imul
aad
cmp
test
mov
nopl
push
pop
lds
jp
repnz
insl
pop
and
and
daa
mov
rolb
aam
movswl
cmpsb
push
movsl
out
push
arpl
inc
call
mov
sbb
push
jne
loop
add
push
push
out
push
mov
ja
xchg
mov
fstpl
aad
std
and
lock
ljmp
popf
out
push
movsb
leave
pminub
mov
fwait
ja
aaa
xlat
and
xor
xchg
sbb
sbb
dec
add
lock
leave
sbb
cmp
ret
int3
loope
popa
mov
stos
rcrl
mov
and
aas
add
inc
add
jnp
cs
cwtl
cmpb
bound
sub
xchg
mov
add
fs
sbb
inc
lea
xchg
mov
in
xor
mov
cmp
jae
add
pop
sub
fwait
aad
fidivrl
rorb
mov
fs
xchg
and
push
in
dec
out
testl
jl
fidivl
jo
pop
shlb
cmpsl
inc
into
stos
outsb
repnz
jb
dec
cmpsl
scas
push
xorb
fst
dec
or
pop
loope
dec
mov
jle
lcallw
shll
push
push
in
and
xor
sti
sbb
or
xor
push
sub
das
fbstp
xor
dec
sbb
and
push
xchg
jmp
cmp
dec
out
push
pusha
cltd
je
loope
mov
rorl
push
sbb
jp
int
cmp
mov
xor
icebp
dec
pushf
or
stos
in
fcomip
push
lcall
mov
adc
add
loopne
ljmp
and
lods
cmp
mov
and
test
xchg
lods
out
ljmp
jae
fistps
lock
push
xchg
arpl
cltd
sub
cli
popa
enter
adc
icebp
and
cmpsl
lret
sub
mov
and
int3
jp
pop
push
lret
inc
out
fldl
dec
out
mov
jns
inc
shll
std
cmp
lea
aaa
adc
lret
adc
or
icebp
mov
mov
mov
push
lret
test
outsb
lahf
add
ss
dec
mov
sub
push
mov
or
lret
test
cmp
fimull
xor
dec
enter
cmp
push
sbb
insl
movsb
cwtl
lret
sbb
or
mov
inc
lret
iret
pop
lds
mov
addr16
andl
stc
movsl
push
nop
scas
aaa
icebp
inc
les
dec
mov
sub
jp
dec
ror
hlt
sub
sti
jae
in
out
mov
lcall
jge
or
in
push
and
shlb
sbb
lret
xchg
xchg
xchg
sti
in
shrl
add
mov
test
and
leave
mov
out
rolb
push
mov
lret
inc
pop
jae
mov
icebp
lret
pop
mov
imul
stos
pushf
push
scas
push
lret
mov
cs
ret
mov
ss
test
ss
xchg
mov
int
lret
pop
fdivrs
lret
pusha
adc
lea
lret
xchg
adc
jno
shr
mov
mov
ret
or
lret
outsl
jae
pop
out
add
xchg
cmp
push
cmp
mov
mov
xor
out
cwtl
insl
lods
xor
lea
mov
push
mov
shr
in
sbb
adc
lret
lcall
jne
mov
insb
sbb
jnp
mov
pop
inc
insl
and
and
pop
pop
sarb
push
fcmove
adc
lea
lret
sub
cmpsb
and
cmp
addr16
jb
int
jae
outsb
or
push
and
icebp
xchg
add
pop
lret
aaa
test
mov
jns
mov
loopne
sbb
out
iret
lds
xlat
stc
aas
mov
add
icebp
gs
fs
push
pop
pop
jg
cmp
jg
pop
cmp
fsubr
or
sub
insb
pop
lret
test
inc
xchg
fisttpl
lret
pop
fcoms
rcll
inc
xor
mov
mov
addl
mov
ror
dec
inc
fmulp
lods
ds
cmp
push
jb
jge
icebp
mov
out
lret
rorb
or
adc
push
sti
hlt
lret
das
push
lds
and
icebp
mov
push
fxch
mov
not
lret
outsb
stos
inc
imul
pop
stc
rcll
sub
stos
push
dec
cwtl
mov
mov
sub
outsl
push
pop
arpl
dec
pop
sbbb
stos
push
jne
jle
fnstsw
mov
xor
inc
dec
jg
fadds
and
int3
stos
pop
out
pop
add
jp
ror
insb
push
loopne
jl
cmp
sub
xor
fidivrl
jnp
inc
out
add
aas
inc
mov
lock
jg
mov
cmp
js
lret
mov
jecxz
mov
mov
mov
iret
leave
imul
mov
int
rcrb
and
imul
out
loop
and
iret
jle
dec
out
fcmovb
mov
fnstcw
les
sarl
inc
test
loopne
test
rcrb
pop
xchg
hlt
lret
sbb
ret
and
shl
sub
jb
out
or
jbe
sub
pushf
mov
jl
or
mov
lret
scas
inc
leave
sahf
and
and
mov
sbb
in
int
mov
sub
or
cld
shr
les
xchg
sbb
sbb
loope
lret
dec
sarb
cwtl
pop
xchg
iret
aas
cmp
inc
or
and
test
rorb
int3
inc
jno
lret
cmp
xlat
xchg
ret
out
xchg
ficoms
addr16
push
hlt
lret
call
lret
xor
leave
push
iret
inc
push
adc
lret
pop
imul
lret
mov
dec
test
fnsave
inc
fwait
cmp
cltd
popf
rorl
arpl
lahf
shlb
repnz
pop
xchg
es
and
push
roll
xlat
enter
push
andl
pop
mov
shrl
xor
lock
je
rcr
or
ret
sub
clc
xchg
es
push
pop
mov
jmp
xor
xchg
jbe
inc
mov
push
jp
sub
lret
pop
push
aas
dec
jge
scas
std
lret
add
jl
jle
lret
pop
cmc
mov
call
scas
mov
arpl
test
fstps
lret
gs
pop
pop
cmp
jae
pop
lret
cs
pop
orl
jae
xchg
lret
cmp
mov
push
orl
mov
lret
mov
mov
out
adc
dec
lret
cmp
popa
fucom
sbb
lret
mov
xor
lret
sub
es
lret
sti
mov
xchg
aad
fistps
pushf
dec
leave
xchg
cmp
xchg
and
mov
insl
test
cmp
cwtl
sub
sub
cmp
mov
addb
lret
fildll
and
test
enter
inc
and
add
dec
pop
and
cld
frstpm(287
dec
js
lret
sahf
xchg
lret
cmp
lret
sbb
xor
pusha
mov
aam
and
push
call
pop
shlb
and
insb
push
test
call
stc
mov
shrl
negb
hlt
sbb
and
popf
push
push
pop
pop
lret
aaa
fwait
mov
cmp
dec
fscale
xor
pop
and
fwait
jns
jle
cmp
lret
clc
je
rcrl
mov
lret
and
adc
lret
test
push
pop
sub
mov
fistps
cmp
incl
leave
push
lret
jae
repnz
testb
or
sub
jae
xchg
fdiv
mov
or
adc
movsb
lret
add
sahf
decb
cmpsl
inc
adc
lret
aad
jbe
movsb
lret
mov
or
icebp
lret
dec
dec
les
xor
push
sbb
stos
jne
clc
jno
inc
mov
adc
push
movsb
mov
icebp
add
out
pop
test
cmp
sbbl
dec
fsubrs
sub
pusha
or
mov
in
imul
clc
orl
insl
test
jmp
mov
repz
loop
dec
lods
test
lods
cltd
or
xchg
cs
in
lret
inc
inc
aad
inc
test
dec
mov
test
decl
ss
jl
mov
push
sarl
mov
lret
stos
pop
mov
adc
mov
lea
aam
xchg
mov
mov
loop
int
out
jne
cs
mov
mov
push
push
les
xor
push
sbb
jge
in
cltd
mov
movsl
shll
lea
cbtw
pop
sub
aas
ja
mov
imul
xchg
hlt
push
hlt
dec
sbb
sub
lret
xor
xchg
cmc
lahf
pop
pop
in
xor
stc
mov
into
lcall
xchg
stos
cltd
inc
push
out
std
xchg
inc
inc
cmp
nop
and
aam
shll
mov
inc
insl
sbb
push
push
dec
push
pop
mov
xor
push
test
pop
addr16
xchg
xlat
jmp
enter
sub
sahf
movsb
jno
mov
sbb
sbb
test
mov
jmp
mov
and
dec
rclb
and
mov
repnz
and
fwait
xchg
mov
inc
mov
sbb
xor
pop
jns
push
aad
push
mov
jns
xlat
mov
ja
xchg
mov
lock
fs
fcom
lcall
pushf
push
je
fs
repnz
sbb
cmc
in
pop
mov
sbb
repnz
jne
lods
xchg
ret
pushf
mov
repz
xchg
adc
notl
and
les
xchg
jno
pusha
mov
pop
ja
sti
sbb
pop
int
mov
fidivl
jp
pop
idivl
data16
mov
iret
mov
mov
jp
ret
rcr
pop
cli
jl
push
shr
mov
mov
cmpb
out
ljmp
stos
jno
dec
ret
outsl
repnz
daa
sub
test
popa
xchg
fisttpl
xor
fisubrs
shlb
ret
and
mov
or
pop
or
fld
inc
and
imul
pop
cmpsb
push
ja
sbb
int
jno
testb
mov
mov
jnp
popa
fcomp
xchg
cwtl
mov
je
daa
int
cld
jg
jecxz
inc
ljmp
cmpsb
pop
and
mov
or
pop
sbb
sbb
lds
cltd
xor
test
mov
mov
mov
mov
fisubs
rep
xchg
and
shll
mov
jmp
stos
xor
mov
inc
adc
cmpb
sbb
inc
sbb
aaa
enter
mov
loopne
xor
aas
addl
nop
in
subl
xorl
mov
insb
imul
lretw
repz
xchg
xor
test
pop
mov
push
jl
mov
cmp
shrl
ljmp
mov
xchg
sub
cltd
lea
int
scas
mov
pushf
es
lea
add
or
cli
insb
stos
jo
test
mov
push
or
call
and
xchg
dec
add
xchg
mov
mov
xor
lods
mov
fwait
cli
ds
in
loopne
pop
inc
imul
pop
adc
sbb
sbb
pop
push
adc
push
test
fxch
mov
and
sti
pop
pushf
sbb
jnp
adc
jge
add
testb
sub
bnd
lods
adc
nop
hlt
sub
loopne
jp
shll
xor
xchg
mov
mov
fbld
mov
dec
mov
je
inc
gs
decl
test
and
fisttpl
ljmp
es
xchg
jae
xchg
inc
sub
inc
pusha
fistpl
aas
aas
jns
adc
xor
out
cli
sbb
shll
sub
fsubrl
test
aaa
cli
mov
and
inc
lock
fwait
inc
mov
mov
aas
cmp
xchg
f2xm1
or
movsb
sbb
pop
aaa
dec
push
movsb
mov
xchg
inc
incl
sbb
sbb
dec
dec
sbb
push
and
fildll
dec
xchg
bound
fstl
test
xor
and
js
inc
mov
xor
inc
and
push
lcall
cmpsl
pushl
push
insb
sub
ds
lds
outsl
or
gs
ljmp
mov
popa
cld
subl
pop
inc
mov
ficompl
int3
mov
xchg
push
sti
fs
outsl
or
add
sbb
fadd
xchg
mov
and
ret
into
cmpsb
jmp
fsubl
sbb
or
mov
xchg
pop
push
stc
aam
mov
jne
addr16
mov
add
mov
push
ret
dec
lret
divl
xchg
sbb
cwtl
cmpsb
subl
jnp
aam
mov
pop
cld
mov
test
je
es
cmp
jb
add
mov
mov
in
cmpsb
add
hlt
and
jmp
lret
addr16
add
shlb
movsb
inc
addr16
or
inc
das
test
jmp
enter
mov
cli
sbb
jecxz
into
arpl
pop
pop
testl
mov
aad
data16
pop
lock
hlt
dec
out
dec
fidivrl
call
jl
inc
aaa
jns
adc
fnsave
sbb
int3
xchg
ss
lock
sbbl
sbb
cmc
and
lock
leave
and
ss
sbb
mov
les
mov
xchg
orl
loope
sti
sbb
mov
pop
rcl
fsubl
fwait
in
rorb
xor
jge
mov
enter
push
xor
cld
mov
enter
mov
xchg
insb
push
lea
js
mov
pop
xchg
fs
dec
sbb
daa
cmp
icebp
in
or
dec
adc
aas
sahf
mov
push
fisubrl
cld
std
lret
cmc
sbb
xchg
ret
lea
pop
add
mov
pop
call
sbb
jb
fwait
adc
mov
stos
adc
je
dec
adc
pop
mov
mov
xchg
push
nop
movsl
mov
pop
mov
lret
xor
lods
andb
mov
xchg
mov
rolb
mov
cmpsl
adc
sub
mov
pop
and
fisubrs
and
add
popa
push
imulb
or
int
cld
lret
aaa
mov
push
dec
es
lock
xor
outsb
nop
inc
ljmp
enter
xor
gs
cmp
outsl
nop
mov
mov
push
xchg
xor
inc
std
rol
fdivl
lods
sub
repz
adc
and
sbb
add
pop
sub
jb
sbb
jb
mov
js
hlt
pop
and
xchg
fsubl
movsb
mov
jbe
and
cmp
mov
int
scas
cmpsb
mov
pop
mov
out
mov
sbb
mov
imul
pop
push
shl
or
nop
test
pop
mov
fwait
pop
gs
nop
pop
mov
out
lea
jmp
push
test
pop
scas
jb
sub
or
xchg
lock
lds
int
sbb
fnstenv
out
rorl
or
lods
xchg
mov
jle
mov
mov
aaa
adc
aam
add
push
or
pushl
lods
lods
test
dec
pop
je
push
sub
in
jge
int
mov
aam
push
mov
push
dec
fisubl
cld
scas
xchg
fstpl
das
sub
mov
or
rcrl
out
xchg
scas
sub
leave
push
jge
out
pop
inc
push
test
out
in
or
outsl
pop
orl
cld
jns
popa
sbb
and
fnstsw
cmc
es
imul
lret
xlat
jae
xchg
mov
ret
pop
jne
and
jecxz
adc
test
mov
les
jl
cmpsb
fwait
inc
ja
aas
mov
dec
flds
add
jp
rorb
out
mov
shl
cli
inc
jns
imul
xor
popa
push
mov
xchg
xchg
add
jne
mov
lret
sbb
mov
xchg
ret
icebp
idivl
gs
popa
fadds
pop
ret
mov
mov
or
mov
test
sbb
shlb
arpl
aaa
gs
ret
sbb
mov
sarb
xor
cwtl
pop
dec
pop
jge
sbb
xchg
xchg
xchg
lock
out
or
adc
insb
repz
cmc
out
cmpl
sub
insb
mov
sub
xchg
add
shrl
sar
test
enter
arpl
adc
lods
fdiv
jb
lret
call
iret
pop
aad
mov
decb
xorb
inc
xchg
jno
jb
repnz
fdivrs
shl
dec
call
sub
sbb
cmp
mov
xchg
test
mov
lret
pop
push
dec
or
cwtl
outsl
arpl
frstor
add
fsts
add
lret
data16
test
xchg
xor
pop
pop
pop
pop
pusha
daa
call
bnd
arpl
lret
aam
inc
mov
mov
hlt
mov
lret
sbb
aad
cmp
mov
ja
adc
inc
mov
mov
xchg
jae
sub
adc
push
xchg
mov
pop
fsubrl
or
add
pop
sbb
ds
lock
lods
out
xor
push
mov
loopne
out
mov
out
and
pushf
sbb
mov
js
and
popa
cmc
xchg
popa
sub
mov
xor
sub
loop
mov
pop
lret
mov
and
insl
pop
fisubs
dec
ret
movl
dec
div
pop
mov
movsb
dec
int
ffree
arpl
xchg
add
mov
and
xor
sbb
add
inc
cmp
xor
push
aam
mov
xchg
stos
jecxz
mov
adc
dec
cld
loop
jne
jmp
mov
jae
mov
addl
dec
adc
sbb
pop
outsl
pop
add
and
adc
xor
fwait
in
mov
jo
jg
mov
leave
data16
pop
xor
push
inc
cmpsl
sub
pop
mov
je
jne
sbb
adcb
xchg
neg
mov
shlb
gs
fs
sub
inc
shlb
cs
add
dec
xchg
ret
imul
movsb
in
cmp
cmp
push
call
shlb
sbb
dec
testb
data16
mov
jb
pop
mov
xor
pop
pop
mov
sbb
scas
ror
inc
lret
adc
push
ljmp
mov
push
out
std
adc
mov
jmp
mov
dec
lcall
xor
stos
movsl
jecxz
mov
dec
xor
xlat
sub
add
out
outsl
mov
jns
mov
dec
push
leave
and
sub
cwtl
or
mov
dec
sbb
xchg
data16
push
test
adc
fstl
outsb
pop
mov
sub
ljmp
aad
and
jb
rclb
nop
imul
ror
aad
dec
pop
mov
outsl
ljmp
int3
sub
push
xchg
ret
cmp
fisubl
popa
mov
cmp
fxch
enter
jmp
into
neg
and
sub
call
cmc
int3
scas
jp
adcl
add
xchg
or
mov
jbe
or
dec
xor
loopne
cmp
hlt
std
sbb
mov
int3
int
out
jb
das
push
and
out
jl
addl
imul
jmp
push
cmp
push
mov
hlt
fdiv
outsb
push
rcrb
ret
or
test
xchg
lods
mov
sbb
loopne
adc
add
lds
sbb
push
or
jmp
rcrl
imul
dec
push
aaa
push
sbb
xchg
out
fcoms
and
sti
pop
or
add
and
data16
addl
fidivrl
sbb
xlat
pop
pop
jp
and
das
cmpsb
sbb
scas
es
xchg
jb
ret
pop
fiadds
xchg
ljmp
fbstp
xchg
sbb
ret
xchg
or
aaa
push
cltd
pop
mov
mov
mov
push
push
rcrl
test
inc
sbb
lahf
sbb
and
aaa
mov
dec
shll
xchg
cmpl
arpl
add
int
xor
ljmp
das
popf
xchg
xchg
push
jp
push
aam
mov
jl
xchg
mov
out
sbb
les
xchg
jle
cmp
push
cmpsb
sbb
mov
ret
dec
cmp
sub
repz
mov
in
sarl
xchg
nopl
clc
jp
sbb
stos
jae
rcll
je
fcmovnbe
sbb
leave
jae
imul
loop
sti
sbbl
fnstsw
leave
es
xor
hlt
xor
pop
fwait
inc
dec
cmp
rcrb
test
pop
fs
lahf
dec
adcl
cld
aaa
cmp
fstpl
push
xchg
xor
sub
pop
popa
xor
jmp
loopne
dec
mov
out
mov
lods
icebp
sub
cmc
shlb
add
jmp
jbe
sbb
dec
jae
faddl
outsl
pop
lret
fdivrl
pop
add
cld
dec
xlat
dec
jns
jecxz
stos
in
dec
jno
sbb
icebp
pop
adc
bound
shl
dec
pop
scas
in
mov
lcall
lcall
push
fiaddl
mov
or
clc
xor
mov
sbb
xor
adc
jmp
dec
stos
sbb
imul
or
int
xlat
outsl
mov
stc
mov
pop
repnz
test
or
mov
divb
cmp
mov
xchg
adc
dec
xlat
mov
inc
inc
add
fidivl
outsb
int
test
lock
imul
popa
cld
dec
lock
xchg
xlat
dec
bound
push
iret
das
sub
mov
test
fdivrs
jae
aaa
sub
std
lret
mov
ss
or
out
dec
sti
sbb
pop
mov
pop
jmp
xchg
pop
movsb
lret
sbb
sahf
mov
in
arpl
add
inc
sub
jnp
lods
dec
dec
sti
pop
repz
rolb
add
push
sbb
test
aas
push
mov
scas
addr16
cmp
mov
xor
and
lea
pop
xchg
ret
daa
outsl
push
sbbb
adc
sbb
int
loope
adc
mov
ljmp
pop
mov
ficomps
aam
mov
int
jnp
and
lods
mov
mov
xor
lcall
repz
and
add
sbb
hlt
and
addl
mov
jno
fmuls
cmp
adc
iret
movsb
xor
repnz
push
int
mov
movhps
cmp
pop
xor
sbb
or
test
and
in
adc
sahf
in
push
mov
lret
stos
repnz
sbb
mov
std
push
imulb
adcl
dec
pop
lock
das
sarb
or
popf
outsb
and
fld
xchg
cs
mov
xor
fsubp
sahf
cmp
fwait
mov
or
push
leave
sbb
inc
aad
sbb
or
lea
jl
call
and
mov
xchg
mov
push
or
and
lock
jge
fwait
daa
imul
test
inc
and
ja
outsb
enter
ret
popa
sbb
push
pop
dec
test
cmp
pop
clc
ljmp
dec
sub
dec
mov
jbe
dec
push
inc
pop
sti
sbb
stos
xchg
mov
xchg
jge
int3
mov
shrl
inc
add
sbb
loopne
or
loope
jmp
sub
stc
int3
fwait
imul
movsb
mov
lcall
sbb
pop
mov
js
sbb
pop
fsubr
sbb
les
in
test
mov
mov
push
pop
sbb
in
sbb
xchg
les
sbb
popa
rcl
dec
fimull
test
daa
xchg
sbb
sbb
push
mov
xrelease
je
cmp
pop
je
xchg
push
insb
and
lahf
xchg
sbb
ret
sub
dec
xlat
lds
add
shr
lret
inc
pop
cs
mov
cmc
mov
jmp
lret
sbb
andl
mov
or
pop
xchg
fidivs
ret
push
sbb
sarl
sbb
and
and
repz
scas
xchg
xlat
mov
testb
mov
xor
cmp
test
fcmovnu
push
cld
arpl
sbb
test
cmp
aad
neg
mov
jo
aam
adc
inc
jae
outsl
push
scas
dec
jnp
jne
jmp
fsubs
mov
mov
hlt
jmp
fstp
repz
fsubrs
movsb
lds
inc
sub
adc
sub
add
cltd
mov
mov
addl
jne
mov
lea
mov
lahf
xchg
ret
xor
rorb
rcl
iret
sbb
sbb
std
sbb
stos
pop
mov
mov
popf
jne
mov
pop
mov
aam
push
scas
jno
dec
int
sbb
add
mov
pop
sbb
fcomps
inc
push
sub
fldenv
sbb
pop
mov
push
mov
stos
pop
sub
std
mov
xchg
push
inc
fs
fwait
xchg
adc
test
loopne
insb
inc
mov
dec
cmpsb
cmp
adc
jge
inc
push
test
ret
lds
or
in
lret
dec
insl
cli
sbb
xchg
fnstsw
cli
into
pop
test
lcall
mov
popf
cmp
leave
shrl
or
inc
jnp
stos
imul
stos
sbb
pop
out
movsl
pop
cmp
scas
mov
xchg
aam
stos
roll
or
mov
mov
lock
mov
test
aad
out
sbb
or
xor
fsubl
push
nop
jge
or
mov
dec
imul
shl
shrb
dec
ds
push
outsl
xchg
test
es
jmp
mov
rcrl
sbb
pop
fwait
movsb
filds
loop
mov
jo
mov
or
jecxz
sarl
test
mov
es
ficoml
ret
sbb
xchg
adc
sub
fidivrs
sbb
popf
mov
jp
add
sbb
mov
dec
jle
jno
cwtl
xchg
pusha
fwait
jmp
loopne
sub
pop
jne
lret
sbb
ljmp
mov
fnstsw
test
cltd
lds
xchg
push
mov
or
jecxz
jb
xor
stos
sbb
and
xchg
or
std
sbbl
imul
iret
xchg
loopne
cld
pop
xchg
jb
and
mov
out
loop
shll
push
cli
stos
hlt
mov
sahf
lds
arpl
lds
xchg
popa
xchg
cs
int3
ficompl
pop
jmp
outsl
xchg
inc
jecxz
mov
movb
sti
repz
fiaddl
daa
sahf
mov
add
add
xchg
push
sbb
fcoms
out
out
and
pop
ret
mov
xorl
fdivl
addr16
aas
fldenv
sti
jno
xor
push
movsb
jne
addr16
popf
push
sub
xchg
push
pop
jecxz
test
arpl
cmp
pop
dec
outsl
fldcw
push
mov
mov
inc
hlt
cmp
out
scas
daa
rclb
lock
cld
inc
lcall
jmp
jnp
mov
push
scas
outsb
sbb
stc
or
add
shlb
popa
icebp
mov
rcr
push
mov
sbb
fwait
loopne
sbb
leave
push
stos
push
pop
mov
out
push
xor
imul
rcrb
mov
ss
ja
rcrl
jle
ja
adc
jnp
sbb
orb
xor
or
mov
cmpsl
test
xchg
xor
das
int
ds
lcall
addb
popf
das
movsl
xchg
mov
lcall
mov
lret
add
pop
rclb
fistpl
popa
sbb
add
fsubs
cli
mov
add
jmp
xchg
nop
movsl
push
lods
inc
adc
iret
sahf
xor
or
sbb
pop
pop
leave
lret
mov
imul
test
mov
mov
xchg
add
dec
pop
sbb
ljmp
ds
sbb
hlt
dec
in
xchg
or
xor
dec
sbb
cwtl
mov
aam
push
ja
mov
cltd
mov
cmp
push
jmp
sbb
ret
mov
jg
sbbb
jge
ja
xchg
dec
cld
lods
int
mov
or
pop
cmpsb
popa
sbb
push
in
pop
xchg
fdivrp
xchg
int3
sbb
rol
pop
ljmp
clc
inc
xor
push
mov
sbb
mov
add
cli
aam
cmp
pop
push
ret
outsb
icebp
dec
sbb
cmp
ffree
and
xchg
dec
aam
add
cmc
jge
out
imul
sub
hlt
shr
subl
adc
data16
and
mov
enter
popa
inc
loop
jo
test
imul
fs
lds
mov
jns
pop
sbb
ljmp
andl
push
sbb
cwtl
push
mov
enter
repz
xor
push
push
add
sbb
mov
out
add
fwait
jno
inc
xchg
jp
outsl
push
jmp
jno
cli
push
jmp
imul
and
push
cmc
adc
adc
push
dec
iret
cmc
sub
sub
xlat
ror
in
inc
sbb
es
lcall
movsb
addb
jo
lret
sbb
jge
loope
pusha
dec
dec
mov
loopne
or
cmp
sbb
or
fwait
mov
ss
or
out
jnp
dec
int3
adc
push
icebp
lods
pop
adc
pop
xchg
out
out
insb
or
loopw
ss
test
aam
sti
aad
xchg
popa
outsl
popa
leave
fsubrs
aam
daa
cli
fsts
mov
mov
mov
int3
push
sahf
xchg
test
mov
stos
adc
xchg
cs
outsb
in
bound
inc
xchg
sub
pop
push
add
addr16
sbb
pop
push
pusha
rcrl
or
leave
cmpb
push
xor
repz
fcoml
int3
shlb
add
lahf
outsl
pop
test
notb
gs
popf
mov
or
ret
sbb
push
lahf
mov
add
xchg
ret
and
sti
call
pop
das
push
sbb
and
lret
fadds
pop
xchg
pop
or
xor
xchg
xchg
mov
pusha
push
arpl
push
cs
and
cmp
xor
push
xchg
fwait
mov
repnz
fistpl
xor
lret
sbb
push
cltd
stos
push
or
pusha
jge
add
shl
ljmp
jnp
add
and
fdivl
scas
dec
sub
dec
pop
ds
jns
fcmovbe
es
hlt
test
pop
xchg
cmp
jns
mov
insl
jg
adc
cmp
addb
pop
sbb
dec
mov
outsb
mov
scas
mov
mov
out
xor
dec
loop
popf
fdivp
out
mov
stos
sbb
and
ljmp
arpl
xchg
mov
push
cmp
ficompl
lcall
ror
mov
insb
in
cmpsb
add
and
fwait
leave
inc
stos
jg
dec
stc
xchg
sbb
test
mov
insl
cs
push
push
dec
fnstsw
cltd
pop
outsb
gs
js
mov
or
jns
jl
lds
jmp
inc
or
push
mov
push
mov
and
push
ljmp
pop
xor
hlt
pop
orl
xchg
cli
push
mov
loop
dec
cld
out
hlt
cmp
pop
mov
cmpsl
aaa
push
mov
mov
inc
or
dec
xchg
ss
mov
data16
mov
subb
dec
ljmp
mov
jno
popa
repnz
push
insb
mov
loopne
jmp
dec
cli
jmp
gs
inc
push
ljmp
outsl
cmc
xlat
not
mov
aaa
imul
mov
pop
inc
int
or
or
rcll
out
loope
xor
lret
and
xor
mov
pushf
bound
inc
lret
ret
mov
mov
ret
xchg
out
shrl
aas
jg
push
imul
ret
jge
lret
out
pop
fisubrl
xchg
loope
je
inc
cmp
inc
ficompl
out
jb
mov
cld
fdivs
sbb
jbe
js
scas
nop
in
xor
imul
cmpb
mov
and
into
faddl
and
fsts
and
add
mov
pusha
ljmp
es
movsb
aaa
mov
mov
insb
add
dec
or
cli
inc
arpl
ss
cmpsb
inc
clc
shlb
sbb
adc
stos
or
mov
aam
dec
cmp
enter
stos
sub
subb
cmpsl
mov
in
jecxz
jmp
fcmovbe
fwait
cmp
mov
andl
xchg
imul
xchg
xchg
and
bound
ds
xchg
or
mov
push
push
and
and
loope
in
xlat
out
ret
lret
mov
mov
jmp
inc
insb
inc
jno
out
add
loopne
mov
and
mov
sbb
mov
ret
sbb
lcall
xor
xchg
xchg
nop
cmpsl
test
aam
mov
pop
sbb
stc
fstpl
mov
xchg
pop
pop
add
sbb
sbb
dec
insl
sbb
dec
mov
fyl2xp1
mov
movsb
sbb
xchg
fisttps
hlt
jae
jnp
jae
jecxz
imul
js
jns
adc
cmp
xchg
daa
imul
hlt
jp
gs
test
mov
mov
inc
loope
clc
cmpsl
sub
dec
fwait
sbb
add
inc
ds
popa
in
popa
dec
add
lods
imul
jmp
xchg
jg
sti
jp
sbb
ret
cld
and
sbb
lods
dec
out
pop
stos
ljmp
dec
xchg
icebp
pop
and
inc
popa
es
aad
leave
mov
les
push
rclb
aaa
dec
lock
push
push
sbb
dec
ss
out
push
testb
sbb
fadds
ja
out
sbb
sbb
ja
push
rorl
stc
aad
sbb
insb
jl
adc
and
je
ljmp
inc
int
incl
arpl
sbb
jo
cld
mov
mov
push
mov
loop
repnz
dec
pushf
sar
dec
mov
xor
cwtl
dec
sbb
shll
pop
inc
out
flds
aaa
push
xor
movsb
jle
inc
xchg
fxam
xor
bound
out
jmp
cmp
dec
or
das
jl
add
push
cmp
pop
sbb
sahf
icebp
movl
shll
xchg
sub
repnz
add
adc
icebp
pop
sub
mov
fbstp
aad
mov
and
xlat
and
fimull
sahf
add
ljmp
sbb
test
outsb
insl
sbb
mov
mov
mov
ds
mov
loop
adc
add
xchg
scas
in
jmp
sbb
lea
in
mov
sub
push
out
test
mov
outsb
sbb
in
sbb
jmp
fstps
pop
out
ret
xor
xchg
fistpll
push
fidivrl
popa
dec
jb
jecxz
pop
gs
inc
les
scas
int
jnp
pushf
or
ret
cld
popf
fidivs
xor
stos
ss
mov
je
mov
hlt
pop
sbb
inc
fstpl
pop
into
inc
mov
push
mov
les
pop
addr16
and
fstl
cmc
xor
or
xchg
cmp
out
fwait
jb
sbbl
je
mov
data16
fld
fcmovbe
xor
adc
lea
roll
loope
cmpsb
jno
jne
adc
mov
inc
sti
shr
dec
mov
xchg
lahf
sbb
jg
inc
fs
out
push
pusha
addr16
fsubrl
cmc
lods
inc
sahf
sub
lods
sub
xchg
loope
lret
cs
iret
in
mov
add
cmpsb
sub
mov
inc
arpl
rcl
dec
in
adc
aam
rol
and
sti
mov
movsl
mov
mov
mov
test
fldenv
loop
dec
inc
fstpl
jnp,pt
add
push
inc
dec
cmp
mov
je
ret
sbb
lods
xor
push
cmp
mov
in
ja
cmp
pop
stos
ret
repz
and
jno
xchg
arpl
test
inc
push
mov
mov
adc
cmp
xlat
jae
jmp
test
mov
pop
push
faddl
test
dec
lret
sbb
sbb
fsub
inc
lods
xchg
test
stc
xor
xchg
mov
cli
sbbb
cwtl
or
lds
and
in
jae
lcall
lcall
sbb
push
data16
or
fdivrl
fs
popa
stos
inc
scas
bound
and
add
sbb
outsb
sub
and
sbb
pop
fdivr
rclb
sub
ss
fdivrl
pop
ja
lock
xchg
add
or
sbb
pop
adc
mov
in
neg
and
cmc
rorb
lret
popf
mov
imul
jmp
push
movsl
stc
lcall
sub
mov
dec
cld
insb
shr
ja
jecxz
xor
pop
mov
ljmp
shr
mov
pop
adc
push
aam
arpl
sahf
or
ds
xor
lret
sbb
or
mov
xchg
out
and
mov
pop
lea
cmp
test
or
sbb
or
data16
rcr
sbb
loope
inc
stos
xor
mov
xor
bound
outsl
movsb
adcl
mov
inc
repnz
les
xor
clc
mov
imul
jae
sub
in
divl
sub
sbb
loope
arpl
xchg
fwait
sbb
loope
das
cmp
or
je
addr16
loopne
xlat
jnp
mov
aad
xchg
inc
push
inc
aas
and
fsubrs
cld
or
cltd
xchg
cmpsl
or
push
mov
test
mov
cmp
std
dec
xor
inc
pop
nop
call
push
imul
out
push
lods
sbb
sbb
arpl
sbb
mov
or
lods
lock
pop
and
cwtl
xor
repnz
sbb
pop
jne
call
or
cmpsb
mov
fsubl
or
shlb
ja
cwtl
or
repnz
mov
scas
subl
adc
dec
or
jle
push
pusha
and
loope
repz
ja
xchg
sbb
lret
inc
xlat
or
es
lret
cmp
push
hlt
pushf
sub
scas
dec
mov
insb
mov
jg
rolb
xor
inc
pop
call
lret
or
xchg
aaa
cld
cltd
fninit
lcall
jb
jg
mov
icebp
push
or
add
lret
sbb
cli
mov
dec
shll
mov
lret
pop
cld
xchg
push
pop
or
pop
aaa
mov
mov
ret
mov
push
lret
insl
es
adc
pop
lret
mov
xlat
mov
leave
cmp
das
int3
ljmp
and
cmp
push
sbb
push
stos
or
jl
add
mov
stc
jmp
rcrl
and
sub
dec
ds
mov
insb
lds
cmp
sub
push
lret
hlt
inc
dec
mov
lret
ret
sahf
mov
push
xchg
scas
scas
dec
lret
mov
pop
jno
roll
into
pop
dec
add
lret
inc
cmp
dec
hlt
aaa
inc
jp
insl
repz
fs
roll
xchg
dec
mov
ss
cmpsb
inc
push
inc
sbb
jmp
xchg
sbb
mov
cmp
dec
mov
push
cmp
push
adc
push
in
mull
bound
out
nop
jmp
ja
mov
pop
lret
sbb
mov
mov
hlt
leave
push
push
jle
xor
mov
insb
lret
imul
bound
js
lret
pop
movsl
cmp
rol
jo
xor
xchg
ja
fadd
dec
popa
and
dec
paddusw
jae
sti
leave
sub
in
lret
fxch
mov
jne
insb
movsl
lret
inc
jle
and
xor
cmp
cmpl
lret
orl
sbb
les
push
daa
fucomi
ret
fmul
sub
dec
jo
rolb
insl
dec
iret
xchg
push
repz
dec
or
leave
sbb
sti
popf
jns
pop
push
movsb
mov
gs
pop
ret
sbbb
lret
daa
cmp
and
sub
lret
sbb
cmpsb
dec
pop
mov
insb
pop
pop
aas
outsl
ljmp
and
lahf
mov
xor
mov
shrb
ljmp
daa
pop
push
mov
inc
iret
xor
rorl
idivl
adc
sub
int
pop
jecxz
pop
je
or
xchg
mov
xor
jle
loope
pop
cmpsb
sbb
paddb
xchg
jne
push
jns
adc
rcl
hlt
jmp
sbb
sti
mov
pop
xor
bound
pop
or
cwtl
xchg
mov
push
push
sbb
pushf
daa
mov
jmp
movsb
xchg
shll
mov
aad
pop
aam
xlat
imulb
pop
cwtl
cmpsl
and
pushf
shrl
shrl
hlt
ljmp
or
mov
xchg
arpl
inc
fcoml
fidivl
push
jnp
jmp
fcmovnbe
sbb
in
lret
adc
inc
pop
mov
sbb
cmc
jecxz
mov
cltd
bnd
fnstcw
cmp
and
mov
inc
jnp
stos
mov
fcmovne
sar
mov
cld
jmp
lock
inc
mov
loope
push
mov
jp
aaa
daa
jmp
or
jns
jbe
cmpsl
jne
add
lret
mov
push
xor
mov
mov
jle
sbb
leave
add
xchg
push
fcoms
mov
pop
or
jmp
xor
jo
bound
or
mov
push
jecxz
imul
and
lret
aam
fidivl
xorl
sarl
imul
xor
mov
push
jae
sbb
and
jle
inc
push
loopne
lret
ljmp
repnz
call
sbb
mov
ret
xchg
sub
bound
shrb
push
out
loopne
lcall
mov
cmp
addr16
es
push
sbb
adc
mov
push
sbb
adc
scas
push
icebp
push
xor
leave
mov
inc
fld
mov
adc
ljmp
sbb
xor
fwait
mov
cmpsb
outsb
inc
mov
pop
adc
mov
mov
jmp
mov
shl
mov
mov
repnz
std
les
adc
mov
in
mov
sbb
int3
xor
fucom
dec
mov
sbb
push
lcall
pop
push
jecxz
ljmp
jmp
sarb
mov
xor
sbb
iret
push
push
mov
or
test
scas
jl
insl
mov
into
ljmp
popa
aaa
jl
sbb
sahf
aas
mov
scas
cmp
adcl
outsl
cmp
int3
stos
rcr
orl
jmp
rcl
adc
mov
aas
inc
lock
testb
cli
pop
cmp
fcompl
pusha
push
cs
cli
pop
fsubrs
int
sbb
subb
and
ja
imul
sub
ret
pop
cmp
mov
inc
xorl
lods
js
jle
mov
enter
movsb
jae
sub
sti
and
mov
jae
fsubl
cli
dec
or
bound
idivb
dec
sbb
iret
stos
negl
xchg
sbb
and
pop
mov
push
jg
pop
jns
cs
sbb
aam
push
xchg
push
stos
inc
scas
data16
push
xor
fstpl
outsb
and
adc
lds
test
add
cmp
push
mov
in
mov
data16
call
ljmp
push
repz
sub
push
sbb
xor
xor
stos
mov
insb
int3
je
imul
inc
pop
filds
loopne
or
out
aam
sub
test
sbb
das
xor
arpl
cs
pop
jg
in
push
and
sub
test
mov
std
xchg
ss
stc
sbb
adc
ss
pop
pop
push
imul
xor
add
push
fcompl
jnp
dec
inc
cltd
lods
sub
mov
call
leave
out
iret
mov
cmc
stc
and
mov
cmpsb
test
and
push
xor
nop
pop
xor
xchg
push
or
aas
jmp
gs
es
inc
and
outsl
arpl
jecxz
mov
bnd
xchg
mov
sbb
jnp
mov
mov
stos
cmp
and
mov
scas
cmp
mov
addr16
loopne
cmp
push
insb
out
sub
lods
pop
or
inc
fnsave
mov
leave
pmulhuw
pop
je
add
scas
stos
ficompl
mov
mov
aas
or
adc
sarb
in
cmp
xlat
rclb
lcall
sub
fidivl
mov
pusha
mov
icebp
int
aad
lahf
stc
cltd
cwtl
popf
icebp
dec
xchg
push
mov
out
fsubl
push
cmpsb
movl
xchg
push
mov
test
dec
push
mov
lahf
bound
rol
mov
cmp
xor
mov
sti
dec
shlb
add
cmpsl
sub
shr
xor
jecxz
ljmp
mov
fisttpll
cld
ret
pop
js
jne
pop
cld
inc
gs
pop
out
out
dec
lahf
sahf
sbb
jne
and
fiaddl
inc
jmp
jnp
xchg
movsb
test
dec
repz
pushf
outsb
xor
mov
test
jns
sbb
pop
aaa
daa
cmpsb
ret
mov
sbb
mov
cwtl
or
out
sete
int3
lock
cmp
jecxz
cmpb
cmp
leave
mov
push
adc
mov
dec
push
mov
andb
aas
in
test
pop
bound
in
dec
in
cmpb
push
jo
clc
pop
mov
mov
pop
and
fcoml
ljmp
mov
pop
add
shll
dec
push
pop
int3
mov
mov
jb
out
ljmp
ljmp
dec
jne
xor
imul
fsubl
dec
mov
gs
xchg
test
pop
mov
dec
movsb
jo
mov
out
jns
dec
shr
das
cwtl
ret
mov
scas
fsubs
push
xchg
mov
adc
sarb
xlat
push
jo
mov
mov
std
ret
popa
cltd
jb
sub
scas
scas
push
outsb
outsl
and
sbb
call
inc
dec
daa
xchg
sbb
cli
fwait
mov
mov
das
sbb
ja
es
pusha
sbb
lcall
gs
inc
xchg
inc
pop
add
inc
aam
stos
and
add
mov
xorb
fdiv
sub
nop
sbb
jmp
cs
push
add
rcrb
cwtl
cli
fstpt
nop
pop
and
test
neg
jns
xor
ret
mov
mov
andl
and
clc
mov
dec
lds
push
mov
sbb
xchg
sbb
push
in
aaa
push
sbb
xor
pop
mov
mov
shr
mov
inc
negl
scas
call
ja
jno
fiaddl
lahf
fnstsw
sbb
out
cmp
push
add
mov
jno
rcrb
movsl
dec
nop
dec
bound
imul
in
sub
push
fisttps
dec
ss
lret
and
pushf
loopne
pop
andl
aaa
es
clc
sub
mov
out
push
pop
inc
sahf
fs
aaa
push
mov
je
stos
fimull
dec
jp
jae
pop
jge
push
repz
sbb
ret
arpl
dec
scas
dec
cli
lock
cli
hlt
jmp
mov
add
sbb
lods
arpl
jo
mov
rcr
leave
sbb
fwait
jnp
ret
test
lret
lds
push
scas
fidivrl
leave
sbb
mov
xchg
lcallw
sub
mov
in
fimuls
or
sbb
mov
pop
aas
mov
pop
push
test
xchg
mov
test
pusha
sbb
cmc
adc
fnstsw
aam
aaa
jmp
sbb
je
inc
pop
pop
push
push
mov
dec
mov
jge
push
gs
xchg
inc
mov
cmp
sbb
out
scas
loopne
or
jbe
inc
sub
inc
lea
and
std
in
icebp
hlt
add
dec
sbb
loopne
sarb
sbb
xor
adc
movsl
enter
mov
pop
xchg
push
mov
sbb
das
leave
mov
addr16
push
pop
push
lret
nop
sbb
push
pop
or
insl
daa
in
ljmp
dec
fistl
orl
xchg
jecxz
aas
or
pop
repz
xor
jp
incl
fdivl
sahf
push
xor
rorb
leave
sbb
test
out
or
xchg
or
out
xchg
inc
or
inc
pop
xlat
mov
xchg
idivb
fistpl
aam
stos
pop
hlt
pop
add
enter
sbb
rorl
jge
push
mov
xchg
or
push
leave
daa
ljmp
fisubrl
nop
ja
loop
fbstp
lret
jns
cmp
leave
aas
fwait
mov
push
in
fists
jns
test
movsb
and
sbb
rcrb
not
jbe
fbld
nopl
movsb
cmp
test
loop
lret
mov
jmp
stos
int
inc
jle
or
imul
add
mov
xchg
push
faddl
scas
xchg
sbb
jno
sbb
bound
pop
sti
mov
out
cld
jnp
cmpsl
jno
cwtl
lea
dec
xor
mov
xchg
jns
fstl
testl
cli
jecxz
cmpb
addr16
stc
out
dec
orb
inc
iret
testl
lods
mov
xchg
stos
fsubs
out
mov
mov
test
sbb
std
jle
sahf
jp
xchg
scas
js
mov
sub
cmp
hlt
mov
xchg
jl
test
xlat
pop
clc
loopne
cmp
push
sub
mov
lcall
push
sub
push
leave
or
imul
pop
jge
inc
xchg
add
or
inc
imul
inc
ljmp
jbe
xlat
or
movl
xchg
movsb
sub
fnsave
ds
sbb
int
push
pop
jbe
out
jg
fcoml
rol
or
mov
sbb
dec
xor
dec
imul
outsl
and
push
sbb
addl
outsb
push
fs
inc
bnd
ret
aam
pop
clc
jmp
lods
pop
mov
shlb
add
push
movsb
xor
dec
and
sbb
setbe
xchg
xor
mov
sbb
jecxz
fstpl
push
pop
leave
and
sub
mov
addr16
mov
dec
sbb
dec
mov
and
mov
lret
in
shll
gs
sub
stc
sbb
lret
outsl
push
push
sub
ljmp
cmpsb
xchg
int3
push
pop
outsl
jae
fistps
lcall
and
adc
out
lods
mov
rcr
xor
pop
sbb
fisubrl
fimuls
inc
pop
rorb
and
xchg
pop
adc
fstps
xchg
sub
inc
and
pop
xor
add
add
pop
out
push
addr16
aam
pop
push
pushf
jmp
fldl2t
jg
sahf
fldcw
movsl
mov
arpl
xor
mov
ja
negl
aaa
mov
push
lods
inc
das
call
rclb
inc
ret
dec
adc
fs
dec
out
add
fwait
xchg
data16
dec
xchg
repnz
xor
ds
or
enter
jmp
mov
push
loope
shlb
mov
cmp
xchg
jno
inc
cli
mov
call
imul
mov
gs
popa
sbb
ret
call
int3
mov
push
mov
jo
lock
jne
sbb
outsb
adc
mov
sub
pop
dec
pop
xchg
xchg
fmul
sub
loopne
fdiv
add
inc
cmp
add
mov
fcompl
mov
fstpl
adc
cs
dec
into
sbb
mov
cmpl
add
or
mov
xchg
dec
pop
push
jg
xchg
lret
ljmp
xor
lret
iret
std
pop
adc
and
push
lret
pop
pop
stos
mov
lea
fdivrl
int
mov
rcrb
push
xor
xchg
hlt
cmc
int3
ret
dec
rcl
outsl
pop
inc
ljmp
push
lret
in
icebp
dec
fxch
sar
mov
sub
das
sahf
sbb
rcrl
movsb
les
shr
cmp
bound
mov
lret
dec
cmpb
cmp
faddl
in
mov
mov
cmp
mov
sarl
loope
mov
mov
scas
pop
pop
jbe
lret
in
jnp
and
or
test
xchg
scas
sbb
cld
add
sub
bound
out
stos
adc
cltd
dec
iret
out
xor
jg
inc
inc
divb
sub
xchg
mov
mov
popf
inc
push
dec
dec
sbb
pop
out
lret
int3
pop
push
xor
pop
inc
or
push
mov
xor
mov
insb
cld
fildll
xchg
fadds
sbb
and
jae
and
lret
adc
jno
and
xchg
xor
je
insb
sbb
xor
cli
jle
cmc
repnz
xchg
in
inc
xor
jmp
pop
mov
bound
out
jo
leave
xchg
push
mov
mov
cmp
jo
add
imul
loopne
out
mov
jecxz
mov
das
mov
sbb
pusha
fisttps
mov
loope
fbstp
adc
push
xor
mov
and
sub
add
pop
jno
incl
lock
mov
dec
daa
xor
sbb
stos
push
inc
fistpl
jnp
imul
sub
fcmovu
mov
adc
into
push
pop
mov
adc
push
aaa
sti
daa
mov
fld
imul
pop
dec
fstps
and
in
loopne
fs
sub
aas
and
loopne
sbb
jmp
icebp
andl
insl
ds
sbb
xor
popf
inc
adc
sti
mov
clc
mov
stc
scas
sub
pop
repz
dec
test
mov
lret
out
mov
mov
push
fildll
and
push
lds
push
mov
call
mov
or
mov
or
aas
dec
and
xor
xchg
xchg
sbb
cmc
adc
xchg
fsubr
fcomps
mov
ficoml
mov
sbb
lcall
sub
xor
daa
mov
xor
out
or
and
mov
movsb
dec
fs
lcall
pop
and
xchg
bound
fnstsw
push
test
pusha
pusha
xchg
mov
loope
jns
jb
dec
enter
dec
in
mov
cs
cmpsb
icebp
sbb
pop
or
adc
push
test
mov
std
jb
call
ffree
ds
xor
jo
fisubl
xchg
sbb
push
sbb
sbb
scas
lods
lock
xlat
mov
fcmove
je
push
shll
out
sbb
add
mov
adc
xor
out
inc
scas
mov
int3
movsb
jbe
sbb
xchg
mov
xchg
dec
in
xchg
xchg
and
out
outsl
std
popa
xor
mov
loope
sub
jecxz
aam
fnstsw
inc
or
imul
movsl
ficomps
fcmovnb
loopne
xchg
push
cmpsb
hlt
and
sbb
ljmp
adc
test
mov
movsl
jb
sahf
xor
negl
jnp
stos
mov
es
popa
outsl
pop
inc
roll
sbb
push
fsub
ljmp
mov
xor
enter
gs
sub
call
mov
cmp
mov
dec
push
push
outsl
addr16
enter
sahf
cmp
or
and
cmpsb
cmp
cmpsb
sub
pop
sbb
data16
rolb
adc
jno
jae
xor
nop
xchg
add
mov
add
jae
jb
dec
sarb
lret
mov
adc
mov
sub
mov
test
loopne
xlat
sbb
cld
fsubl
cmc
out
xor
shrb
insl
ret
push
push
jne
arpl
xor
mov
nop
push
jns
mov
hlt
in
test
scas
loopne
cmpsb
cltd
adc
ret
jne
repnz
jno
xchg
jne
in
mov
rorb
ja
lods
push
flds
aaa
ficomps
push
xor
ret
push
push
or
push
js
scas
inc
add
dec
outsb
mov
pop
mov
add
insb
xchg
and
mov
into
inc
outsl
jl
in
jp
push
pop
mov
test
mov
sbb
push
insb
cmpb
add
xchg
jecxz
bnd
jns
push
sub
sbb
jg
leave
cwtl
add
movsb
jns
insb
repnz
sbb
js
and
mov
mov
shr
aam
push
push
les
jp
stos
xchg
lds
mov
dec
jmp
loope
fisubrl
dec
jle
das
mov
fs
divb
mov
shll
imul
inc
jle
pop
ret
cmp
sahf
dec
fisttps
and
xchg
shlb
cmp
push
sbb
movsb
jge
repnz
xchg
inc
inc
outsb
insl
sub
fwait
sbb
mov
mov
jbe
push
adc
lret
xor
dec
imul
mov
ss
push
cmc
jge
pop
dec
addb
fisubrl
xor
lret
rcrl
add
loopne
jle
leave
out
jae
push
cli
pop
xchg
rclb
mov
sbb
jae
xchg
pop
roll
fwait
cwtl
mov
insb
neg
push
ja
cmp
inc
inc
shrb
pusha
pop
fnstenv
scas
xchg
mov
cs
add
movb
push
in
sub
jne
das
insl
orl
lea
and
push
andb
fimuls
xor
sti
scas
in
mov
pop
inc
fistpl
xor
push
scas
aad
dec
pusha
adc
add
push
ja
ljmp
mov
loope
cmp
pop
dec
in
es
int
scas
pop
ret
in
mov
sti
push
adc
les
pop
sbb
sbb
mov
xchg
cmp
xlat
or
pop
std
cmp
mov
lret
push
sub
jns
nop
add
pop
mov
cs
sbb
mov
and
mov
dec
xchg
stos
rcrb
cmp
pop
xlat
shr
inc
fnstsw
ret
sbb
pop
dec
adc
or
out
popf
icebp
lods
and
adc
adc
push
push
stos
or
sub
and
sbb
mov
aas
sbb
movsl
and
jmp
add
sbb
iret
aam
pop
cs
sbbl
lods
popa
sar
push
xchg
dec
adc
repnz
pop
cmp
sbb
add
pop
mov
cmpsl
push
int
mov
mov
xor
dec
jmp
ffree
movsb
pop
push
or
sti
loope
pop
push
mov
sub
jecxz
imul
rcl
lret
int3
add
mov
sbb
gs
adc
dec
sbbb
push
out
push
push
or
bound
je
add
aam
rol
mov
sbb
sbb
popa
xor
cmpl
jae
mov
mov
or
adc
in
in
pop
addr16
sbb
or
cmp
cmc
in
jbe
jge
leave
inc
scas
cmp
mov
cmp
test
push
dec
pop
popf
pop
cwtl
jo
fdiv
cmpsb
movsb
push
xor
es
data16
lock
ret
sbb
movsb
or
mov
pop
faddl
shl
jecxz
mov
xchg
lcall
fsts
lret
neg
arpl
fcmovnb
xchg
lcall
inc
jns
xor
lods
shlb
mov
idivb
in
ja
faddl
insb
sbb
fld
push
jne
sbb
pop
sbb
jbe
shrb
sbb
jg
or
xor
mov
int
test
outsl
inc
out
sbb
sbb
sbb
sbb
fsubrl
jb
jnp
pop
fsub
out
dec
into
or
aam
push
mov
fistps
adc
sub
jge
popf
xchg
or
outsb
cs
loopne
pop
add
popa
es
dec
xchg
jp
sahf
cmp
sbb
lea
pop
dec
in
xor
jns
xor
dec
dec
sbb
adc
dec
mov
imull
sahf
sahf
and
mov
xor
aam
inc
mov
jecxz
lret
cmpsl
xchg
and
pop
test
cmp
dec
jae
insl
dec
ficomps
outsb
hlt
mov
push
xor
pusha
std
inc
rcrb
fs
loope
stos
jnp
jge
inc
movsl
stos
mov
loope
out
mov
add
sub
scas
or
jns
cmpsl
push
sub
or
sahf
pop
outsl
xlat
std
rorb
xchg
loop
ret
and
mov
push
jl
aaa
or
xor
xchg
jg
mov
int
adc
jle
loopne
ficomps
pop
pop
pusha
mov
xchg
mov
sbb
mov
je
enter
pop
dec
push
jbe
fsub
sub
stc
mov
pop
add
sahf
cli
jmp
lods
mov
loope
fsts
dec
call
sbb
xchg
out
pop
ss
sub
stos
sbb
lock
jmp
dec
xchg
and
mov
push
leave
adc
ret
sub
dec
repz
mov
add
xchg
xor
shrl
push
rorb
or
cmp
and
sahf
xchg
jl
mov
pusha
sub
gs
mov
lret
xchg
int3
and
cmpsl
xor
lods
hlt
pusha
pop
mov
ret
daa
and
adc
jnp
ret
jecxz
inc
xchg
or
mov
test
pop
pop
jge
lds
sar
stos
jns
dec
popa
ja
cmp
leave
jg
inc
mov
insb
aam
mov
jno
push
in
and
cmc
inc
inc
lret
les
aad
jb
lret
inc
les
jae
xchg
mov
inc
cmp
negl
cmovnp
pushf
sub
mov
shl
loopne
adc
inc
ficompl
xchg
inc
jb
les
fptan
push
pusha
jb,pn
in
mov
sub
xchg
ja
imul
adc
dec
pop
push
icebp
lds
mov
adc
sub
lods
jmp
repz
push
cmp
add
dec
mov
and
mov
xchg
mov
adc
push
rcr
push
push
imul
out
test
cmp
adc
jnp
aaa
nop
add
adc
push
push
pop
sbb
popf
mov
mov
or
inc
xchg
xorl
xchg
and
lea
mov
jnp
mov
aam
lcall
pop
mov
fistl
jmp
or
test
push
cmp
int
sbb
push
movsl
mov
sub
in
sti
xchg
js
pop
movsb
pop
fadd
and
mov
sbb
ret
mov
pop
out
jmp
je
mov
or
jae
jae
out
jecxz
cwtl
mov
int
stc
adc
loope
enter
ja
push
pop
aas
sbb
mov
or
ss
in
dec
fdivl
dec
xchg
pop
mov
popf
sub
orb
fists
jmp
into
nop
push
leave
and
xchg
and
roll
roll
popa
in
sub
mov
inc
je
lock
cmp
fldt
xor
jae
jns
cmpsl
mov
aam
inc
fldenv
fs
sub
fstl
out
dec
in
mov
addr16
or
out
sub
out
xchg
imul
adc
xorl
xchg
cwtl
and
sbb
pusha
fsubl
outsb
jge
lods
pusha
scas
je
cltd
push
rorb
outsb
sbb
inc
bnd
sahf
scas
add
and
push
dec
dec
mov
ljmp
aaa
xchg
es
xchg
pushf
inc
jecxz
aam
lret
jbe
mov
hlt
lret
in
sbb
adc
or
imull
mov
mov
xchg
out
fs
test
xchg
sbb
and
inc
je
dec
xchg
and
out
imul
mov
jno
scas
fwait
mov
cmp
xchg
sbb
or
out
and
push
inc
sub
scas
pushf
pop
movsl
sub
fsubrs
sbb
mov
adc
jnp
push
test
outsl
stos
sahf
es
dec
notl
adc
pusha
cmpsl
and
ficoml
ficompl
addb
xchg
xchg
xchg
or
popa
sub
cli
adc
jnp
enter
test
out
mov
sbb
fmuls
pop
mov
repz
add
rorl
and
movsb
mov
mov
cli
int3
data16
add
fucom
insb
repnz
pusha
or
mov
pop
fdivs
dec
jne
repnz
xor
movsb
mov
add
and
and
into
es
sbb
jae
pop
fmul
test
mov
jno
fs
movsb
add
xchg
mov
popa
mov
mov
xor
mov
cwtl
loope
mov
sahf
lock
and
dec
pop
shl
dec
sarl
rcrb
movsb
inc
lret
jne
daa
fnsave
ds
imul
push
mov
push
clc
cmpsl
aad
add
adc
test
out
stc
idivb
mov
ja
ret
sbb
inc
cli
xor
repz
cltd
add
mov
sahf
add
adc
sbb
inc
je
inc
movsb
add
test
pop
sti
mov
stos
fistps
movsl
or
ljmp
mov
ljmp
jb
test
jo
dec
leave
stos
sbb
xor
and
nop
dec
addr16
fucomp
sbb
inc
push
inc
daa
jmp
push
and
stc
dec
inc
mov
daa
push
icebp
ljmp
jmp
push
pusha
cmp
into
dec
jnp
cltd
sub
sub
pop
push
pop
cwtl
push
pushf
cmp
pop
rol
sbb
jno
rcrl
sub
addr16
cwtl
jnp
sti
fnstenv
mov
addr16
sahf
mov
out
imull
call
push
add
push
mov
sahf
mov
push
sti
mov
mov
cld
into
in
out
dec
push
sbb
mov
push
addl
sbb
mov
adc
icebp
lea
xchg
lods
push
push
adc
mov
sbb
rolb
push
adc
mov
std
fcoms
fcmovb
gs
xor
mov
fildll
sbb
and
mov
ret
pop
popa
push
roll
inc
mov
and
loopne
addr16
mov
imul
subl
enter
outsl
inc
loope
add
call
enter
inc
movl
addr16
push
xchg
repnz
inc
mov
add
loopne
int
sbb
or
fsub
jns
jne
stos
and
mov
xor
lcall
add
pusha
test
rcrl
outsb
xchg
lahf
mov
mov
rcrl
push
mov
mov
sti
mov
sub
or
enter
pop
xlat
dec
mov
dec
xor
fwait
dec
inc
sbb
outsb
xor
or
mov
dec
dec
addr16
dec
cmpsb
int
mov
mov
arpl
and
cmpsb
or
movsb
jmp
xchg
stos
mov
icebp
xchg
and
es
popf
xchg
inc
test
std
jae
jmp
sub
push
lea
mov
push
out
mov
jns
or
sti
out
or
cs
fists
cmp
push
fistps
sti
xchg
movsb
daa
ret
push
xchg
imul
mov
and
in
lock
inc
ljmp
xchg
paddb
vpmulhuw
inc
dec
fmul
mov
mov
ret
test
xchg
lods
rcrl
jle
daa
adc
sbb
movsb
js
dec
cmp
fidivl
test
fldl
sub
int
sbb
outsb
pushf
adc
xchg
into
xchg
arpl
mov
push
in
mov
out
sub
test
adc
lret
movsb
cmpl
in
fiaddl
cs
jl
mov
ret
ss
ret
ja
shlb
sbb
jmp
jle,pn
mov
daa
jns
ret
out
push
add
jne
pop
test
ss
rcrl
stc
pop
lahf
or
cmpsl
int3
jbe
mov
aam
jne
mov
push
add
insl
inc
cmp
inc
test
pop
push
push
aas
ret
inc
fsubrl
lock
jmp
es
adc
lods
xor
out
insb
push
cmp
push
lock
imul
sbb
push
inc
xchg
sbb
int
xchg
push
pusha
flds
cmp
imul
out
stos
ret
adc
sbb
mov
repnz
loope
push
loope
add
negl
xor
mov
lcall
adc
scas
xor
arpl
fprem
imul
push
sbb
les
cmp
sahf
sbb
ror
sahf
inc
push
inc
inc
adc
push
in
sbb
adcl
in
pop
inc
adc
mov
inc
dec
leave
addr16
sbb
xorb
mov
repnz
data16
pop
loopne
and
gs
shll
lods
cs
push
xor
sub
mov
adc
into
mov
inc
dec
cs
repz
dec
ljmp
stc
sbb
aas
mov
jecxz
loope
je
shr
sub
push
lahf
jae
sbbl
xchg
data16
jecxz
scas
or
mov
popa
clc
dec
adc
mov
dec
sbb
fadds
sarl
dec
in
dec
jle
aad
adc
dec
test
pop
movsb
rclb
mov
mov
sbb
pop
cltd
sahf
popf
fstps
repnz
dec
mov
xchg
filds
cmp
in
out
loop
pusha
xor
mov
test
jnp
clc
sbb
sub
add
add
sbb
or
ds
mov
push
cmpsb
rclb
xor
cmc
xor
mov
adc
xchg
ffree
rclb
sbb
scas
ljmp
cmovp
je
cld
xchg
cmp
inc
pushf
jmp
outsl
stc
aam
sbb
aad
pop
pop
dec
test
xchg
lret
test
lahf
fdivs
jecxz
cltd
mov
fiaddl
xchg
cmc
pop
popa
mov
inc
push
cmp
pop
mov
jae
push
inc
cli
lea
inc
adc
mov
lcall
aad
adcl
ret
addr16
sbb
cs
add
shl
jb
data16
push
test
sub
sub
jbe
gs
das
enter
test
repnz
jecxz
cltd
inc
xor
add
sbb
pop
fbstp
scas
jae
adc
inc
dec
add
shl
push
mov
or
inc
repnz
nop
mov
and
jne
mov
or
leave
lret
push
pop
jo
mov
lret
call
sbb
push
dec
cmc
pop
imul
int
and
outsb
call
jae
out
xchg
rcr
mov
or
jo
xchg
xorb
int3
push
call
inc
mov
mov
push
ljmp
sbb
or
insl
mov
adcb
out
popa
jge
fidivrs
in
push
inc
push
sbb
cwtl
inc
mov
pop
stc
pop
or
rorl
rcr
push
pusha
sbb
cmp
outsl
leave
xchg
xchg
inc
aad
add
cmp
test
pop
sbb
test
mov
and
pop
mov
xchg
push
lret
mov
sbb
jp
ljmp
iret
dec
imul
into
rcr
xor
sbb
jle
mov
out
dec
ret
sbb
adc
arpl
xlat
lock
sbb
pop
pop
test
jmp
jne
pop
dec
repz
cmpsb
push
out
decb
ror
mov
or
jl
test
sbb
add
test
pop
jnp
xchg
and
iret
jbe
ffree
sbb
adc
insb
or
test
and
lods
loope
push
pop
aam
pop
mov
fsts
sbb
pusha
adc
xchg
sti
int
xchg
dec
into
into
sbbl
jno
push
test
daa
jnp
fisttps
xor
enter
jbe
push
ficoms
add
inc
sti
dec
iret
test
popa
pop
adc
aas
testl
call
lret
ljmp
push
mov
push
repnz
jmp
dec
or
dec
loopne
mov
inc
inc
out
pop
lds
jae
xchg
jg
adc
jecxz
pop
mov
mov
sub
ljmp
fcmovnbe
pusha
add
pop
or
cs
out
or
sbb
pop
add
or
xor
imul
pop
and
mov
lods
out
clc
adc
sbb
mov
inc
and
pop
test
sbb
push
inc
and
inc
mov
push
add
fisubl
imul
or
std
push
push
aaa
pop
ljmp
and
out
jle
loope
outsl
cmp
ret
xor
sub
xchg
stos
aaa
es
add
test
mov
rcr
sub
fnsave
cmp
mov
pop
adc
fsts
fstl
repnz
nop
sub
sbb
xor
sub
mov
sbb
sti
inc
mov
add
rclb
push
in
mov
mov
fnsetpm(287
pop
movsb
dec
mov
jecxz
pushf
jbe
xor
sbb
inc
shll
mov
jnp
xor
push
int
ds
inc
insl
jno
sbb
int3
test
leave
mov
dec
adc
mov
cmp
push
loopne
jp
push
dec
mov
in
int
sbb
push
pushf
xorb
scas
mov
ds
faddl
mov
push
insb
rcr
inc
pop
add
test
sbb
dec
or
adc
or
in
push
pop
push
aam
xchg
sbb
cmpsb
jne
add
cli
mov
push
sbb
jecxz
adc
hlt
cmp
adcb
xchg
push
sbb
mov
jae
push
cmp
daa
push
cmpsl
ret
mov
mov
dec
push
adc
dec
lret
call
add
stos
mov
pop
inc
sub
cmp
cmovno
dec
adc
sti
sbb
jae
add
inc
jno
insb
push
lock
push
imul
testb
push
inc
jae
mul
or
cs
stos
push
sub
data16
lds
dec
cmpsb
cmp
mov
outsl
scas
in
dec
aas
mov
leave
call
test
lods
inc
cmc
mov
and
jmp
lret
xor
loopne
sbb
xchg
inc
iret
stos
and
pop
nop
aad
test
insb
and
fneni(8087
lret
lret
jb
xor
int3
jp
xchg
dec
lret
sbb
jg
lret
sbb
fsubp
ret
mov
out
dec
in
outsb
xor
sar
ret
add
ds
dec
pop
xchg
ret
add
int
outsl
adc
push
xchg
push
xchg
repz
cmp
hlt
pop
in
cld
pop
dec
mov
out
push
shrb
scas
sbb
fsubrp
dec
sub
xchg
cmpsb
jo
lock
rcr
mov
push
cmp
cmpsb
fs
xchg
imul
inc
std
xchg
dec
pop
lods
pop
mov
fnstcw
scas
add
jo
pop
xor
adc
rcrl
hlt
test
scas
xor
push
jmp
or
jae
dec
and
xchg
cwtl
mov
fcoml
xor
jae
imul
bound
sbb
push
out
fcomps
xchg
cmp
out
add
pop
js
mov
cmp
gs
out
dec
rcrb
rcll
adc
jge
fldenv
cmp
pushf
call
sub
sbb
dec
cmp
aaa
ljmp
add
mov
mov
xchg
in
fistpl
push
enter
cwtl
in
aaa
fistpl
push
xchg
lret
sbb
mov
cwtl
mov
and
sahf
mov
jl
sti
mov
rcrb
inc
or
repnz
mov
mov
pop
adc
les
fldl
fucomp
jo
jp
or
dec
sbb
jl
adc
out
lock
mov
push
inc
mov
inc
mov
push
cli
subl
push
push
or
mov
inc
xor
sbb
xor
dec
push
dec
aam
add
mov
test
add
int
xchg
in
fsubl
out
jmp
rclb
mov
cmp
idivb
lods
out
sub
push
int
lret
inc
fcmovnb
int3
sbb
push
pushf
repnz
mov
mov
stos
fs
cmpsb
ror
inc
stos
jbe
sbb
fsubs
or
mov
and
negl
mov
pop
xchg
xchg
insl
pop
pop
fcomps
and
scas
bound
fwait
push
inc
push
cmp
shlb
pop
pop
pop
jae
lds
gs
xorl
xor
and
or
dec
ret
jno
push
inc
mov
sub
mov
jbe
insl
in
inc
pusha
add
mov
pop
inc
bound
mov
jecxz
xchg
roll
imul
lock
test
cli
xor
outsl
int
sbb
or
mov
std
jp
addr16
in
pop
sub
arpl
inc
xchg
xchg
adc
mov
xchg
inc
mov
pusha
icebp
jne
std
es
jg
cmp
add
into
mov
inc
pop
fwait
es
lea
xchg
xlat
sbb
loop
ss
fwait
repnz
rorl
jl
xchg
dec
sub
xor
xorl
in
scas
push
mov
loope
jg
flds
xor
subl
cwtl
lcall
pushf
push
mov
xchg
fiadds
cmp
jp
aas
mov
mov
flds
mov
xchg
jp
in
fsubrl
aas
jge
int
mov
sbb
xchg
repnz
cmp
out
stos
fnstcw
leave
pop
xchg
aaa
push
sbb
add
sbb
scas
pusha
jge
cltd
sub
xor
sbb
arpl
push
jne
pop
xlat
fldt
rolb
xchg
jmp
fiaddl
xchg
pop
jae
aas
int
push
mov
adc
push
dec
sbb
adc
ret
or
mov
int
cwtl
pop
cmpsb
xchg
or
int3
lea
int3
ds
mov
jb
cmc
or
nop
nop
stc
push
cltd
loope
or
mov
fcmovu
hlt
sbb
cmp
in
xor
scas
pop
xchg
ss
fsub
gs
jl
stos
ljmp
fisubs
push
cmpsb
jnp
fsubr
gs
cs
pop
outsb
sar
or
jmp
out
fsubs
dec
push
insl
push
lret
jge
mov
mov
or
or
xchg
lahf
fnstcw
fildl
cmpsb
fdivl
jmp
mov
sbb
inc
adc
call
sbb
mov
xchg
sysret
xor
adc
mov
add
mov
xchg
arpl
lods
cmc
das
add
dec
mov
loop
push
push
pop
xor
xchg
mov
clc
inc
jbe
imul
sbb
mov
sti
ljmp
icebp
jmp
aam
push
mov
pop
sbb
shll
mov
lret
lods
dec
adc
mov
push
cmp
scas
and
xchg
jg
pusha
pushf
xchg
insl
mov
shl
dec
fcom
mov
leave
pop
mov
fwait
jns
xchg
test
mov
pop
nop
pusha
repnz
sbb
and
addl
ret
xchg
adcb
xchg
call
sub
and
ds
ret
jnp
pop
adc
dec
ret
jl
fidivrl
popf
jo
dec
mov
jle
jge
lods
sahf
pop
jne
sbb
outsb
jmp
add
jecxz
mov
stos
jnp
or
inc
dec
mov
mov
fld
push
dec
rol
lock
negl
mov
popf
push
lahf
sbb
scas
mov
lea
xor
jb
xchg
sbb
loopne
aad
pop
imul
in
xlat
sbb
movl
push
push
ljmp
mov
dec
sbb
pop
sbb
test
push
cwtl
movsl
sub
test
ljmp
xchg
mov
js
addr16
fwait
dec
mov
in
out
negl
stos
xchg
ficomps
test
sbb
ret
sbb
jle
leave
addb
pop
hlt
jae
push
imul
icebp
test
fldt
pop
sarl
add
shr
and
cli
mov
dec
ljmp
int3
mov
enterw
jg
inc
cmp
ds
mov
cmpb
jo
outsl
stos
inc
mov
inc
sbb
div
or
pop
iret
dec
dec
out
and
popa
lea
push
lea
sub
dec
fcomip
mov
shl
in
xor
rcr
pop
add
loope
xchg
jnp
mov
inc
movsb
fisubrl
jmp
out
leave
aam
js
push
loop
cmpsb
inc
xchg
adc
mov
xchg
cmc
cmp
pop
add
subl
mov
xor
xor
into
sbb
mov
shl
popa
add
pop
gs
arpl
xchg
rcl
xor
fcomi
mul
dec
mov
xchg
adc
mov
subl
jb
sbb
gs
in
fistps
pusha
cmp
mov
fwait
shll
sbb
test
dec
mov
stos
and
es
ds
outsl
loope
pop
andl
and
sbb
adc
mov
movsb
mov
mov
fcoml
or
jp
leave
lret
and
out
dec
das
fdivs
lret
sbb
add
mov
sub
dec
mov
int
lock
fcompl
bound
mov
dec
fisttpll
dec
cmp
adcl
fwait
adc
ja
loop
mov
push
fs
jge
shlb
jmp
add
enter
cmc
mov
loopne
jle
pop
cmc
push
inc
repz
lea
sub
push
mov
fs
enter
fistpll
fstl
in
shl
insl
loop
mov
cmp
gs
sbb
cmp
in
neg
sbb
xchg
addr16
pop
fs
scas
pop
xchg
or
push
fidivrl
cli
sbb
ficomps
lcall
dec
sbb
rcrl
pop
into
sbb
imul
xchg
and
nop
lods
pop
shlb
sbb
out
sub
cmpsb
jge
inc
hlt
fucomi
xchg
in
xor
mov
bound
arpl
shr
xchg
or
sbb
and
lret
dec
dec
cld
add
test
mov
mov
fcomp
xor
popa
inc
cmpsl
add
in
push
stos
sbb
sub
xchg
sbb
xchg
movsl
push
cmp
out
bound
idiv
dec
fcompl
lret
jb
lock
subl
scas
push
imul
pop
xor
test
pop
out
les
bound
mov
ret
testl
adc
pop
repnz
sbb
push
xchg
int3
fisttps
in
xor
in
into
dec
jno
push
or
lret
test
sbb
ds
jne
divb
leave
sbb
dec
xchg
outsl
imul
add
leave
push
cmpsb
pop
cwtl
ljmp
xchg
fdiv
mov
mov
cmp
loope
fmull
imul
and
mov
xchg
xchg
mov
ss
sbb
xchg
loopne
pusha
pop
sub
pop
xchg
pop
pop
pop
out
push
and
loopne
imulb
hlt
lds
cli
sbb
or
sbb
inc
insb
stos
insl
fcompl
xchg
mov
mov
outsb
xlat
jmp
movsb
sbb
push
leave
adc
xor
movsl
sub
fisubl
ret
cmp
pop
loop
mov
push
rol
sti
fsin
repnz
xchg
cmp
stc
xor
fcmovnbe
loop
scas
dec
je
mov
imul
mov
lret
mov
xor
inc
out
mov
mov
xchg
mov
sbb
jmp
shr
xor
call
lods
mov
dec
stc
pop
push
sbb
popa
les
das
test
cmp
imul
dec
dec
stos
loopne
fildl
add
sbb
int
xor
dec
pop
in
movsl
pop
or
dec
sbb
fucom
push
lods
mov
adc
scas
mov
sbb
imul
pop
jg
sti
cs
mov
push
mov
rcr
shlb
lods
stos
cmp
cmp
mov
push
or
mov
fdivr
xchg
sbb
mov
gs
cwtl
inc
sbb
sbb
sti
add
lods
aam
addr16
sbb
cmpsb
out
in
cli
popa
jecxz
push
cwtl
rcr
lahf
pop
mov
xchg
mov
sbb
test
hlt
ret
sub
sub
ljmp
bound
outsl
ret
mov
dec
sarb
and
lret
and
mov
fstpl
cmpsb
and
fistpl
mov
dec
in
ja
xor
push
idivl
loopne
iret
fldenv
lret
add
in
mov
mov
aad
add
sbb
test
leave
cli
ror
push
add
xchg
dec
sbb
inc
nop
clc
aaa
push
mov
cli
xchg
fucomip
adc
push
sbb
adc
xchg
arpl
popf
lock
sbb
mov
and
imul
dec
ret
sahf
push
sarl
fnstcw
clc
pop
pop
sbb
addr16
lea
mov
xor
push
cmpsb
inc
lret
fdiv
les
pop
jno
xchg
fmul
sbb
stos
sbb
push
jp
jmp
xor
add
inc
jae
lret
fst
scas
loope
in
popf
mov
mov
or
pop
xor
pop
fcmove
ret
int3
sbb
fdivr
mov
mov
in
mov
lret
push
cmc
stos
pusha
push
dec
dec
fdivrl
aas
adc
lock
filds
dec
pop
sbb
arpl
in
jmp
sbb
mov
roll
mov
ds
js
adc
jge
shlb
pop
mov
enter
fwait
jne
lret
mov
adc
dec
lcall
push
movl
push
mov
andb
dec
or
sub
mov
pop
xchg
decb
aaa
add
push
dec
insl
pushf
loope
inc
cwtl
rorl
xor
fsubrl
loope
aas
push
loop
sbb
inc
in
rcr
dec
pop
mov
insl
push
sahf
cmp
orb
sbb
sbb
cli
dec
out
fcomp
push
inc
push
cld
inc
xchg
out
mov
fmul
cmp
gs
sahf
fnsave
or
or
xchg
fmul
jb
sbb
das
mov
push
stos
adc
lods
pop
xchg
cmp
mov
stc
xor
orb
insb
jns
roll
ljmp
fistpll
sbb
ret
mov
lcall
mov
xchg
sub
sub
into
mov
xor
adc
std
mov
and
and
and
push
sub
movsl
icebp
sarl
out
mov
add
fnstcw
bound
into
mov
cmp
arpl
rcr
sarb
leave
int
iret
into
insl
mov
mov
sbb
andb
fnstenv
and
cli
inc
pop
adc
inc
rolb
sub
mov
jecxz
and
outsb
test
push
mov
shrl
pop
or
lret
imul
out
dec
adc
lret
mov
xor
xchg
rorl
lret
lret
push
adcl
mov
jae
xchg
sbb
pusha
dec
ljmp
jnp
inc
push
bound
fs
rol
mov
fcmovb
fwait
lret
inc
pop
ljmp
mov
dec
cmc
iret
rcll
hlt
or
jle
push
lret
mov
int3
addb
dec
dec
sbb
sub
add
outsb
inc
push
pop
loop
push
xor
xlat
popf
repnz
pop
cmp
mov
fst
fisubrl
orl
cmp
lret
pushf
jge
xchg
cmp
sub
pop
fcomps
insb
xchg
clc
pop
inc
xchg
cli
jo
xor
pop
mov
adc
and
sbb
mov
ja
mov
addl
xor
loop
pop
psadbw
iret
in
loope
pop
xlat
fnsave
repz
add
fsubrs
dec
data16
push
leave
mov
lcall
cmc
pop
sbb
sub
add
push
adc
popa
cli
sub
clc
pushf
mov
or
in
add
cmpsb
aaa
mov
dec
sar
loopne
xchg
ret
iret
and
hlt
fdivl
and
push
loope
push
adc
dec
pop
sub
dec
shlb
popa
push
shlb
lcall
fs
je
scas
cwtl
mov
mov
add
imul
mov
lret
fadds
out
pop
mov
sub
aas
jge
dec
jno
mov
fildl
loope
dec
dec
stos
sbb
xor
xor
cmp
sbb
jno
lret
add
in
cld
sahf
lret
add
dec
mov
fisubrs
leave
ret
jns
or
ficomps
mov
rolb
sbb
sbb
in
stos
and
sti
lret
xchg
sbb
test
inc
cmp
cli
and
sbb
and
cmpsb
dec
pop
loop
enter
rcll
inc
inc
mov
jecxz
nop
shr
dec
cmc
sti
fwait
in
out
sahf
and
mov
imul
iret
jmp
nop
mov
jp
cli
jno
cs
mov
arpl
xchg
icebp
rcll
sbb
and
out
addr16
push
dec
mov
inc
dec
ljmp
subb
pop
es
orl
outsb
xchg
mov
sbb
sub
inc
mov
aad
and
mov
test
mov
cmp
dec
lret
mov
loop
add
sbb
popf
mov
xor
pusha
mov
xchg
push
sbb
je
leave
scas
jo
mov
cmp
cmp
add
mov
idivb
test
xor
fs
out
inc
jns
rep
pusha
pop
pushf
adcl
sbb
fldt
popa
imul
loopne
ljmp
sbb
mov
xchg
or
lods
jecxz
xchg
xor
fs
jne
xchg
sbb
jb
xchg
add
jne
bound
cmp
dec
sbb
imul
xchg
loop
or
push
dec
int3
loopne
xor
fcom
inc
jmp
jno
insl
inc
add
cmpsl
cmp
aas
repnz
jns
out
mov
xor
or
scas
in
cwtl
mov
cmpsb
movsl
popl
sbb
mov
call
sti
sahf
add
std
in
xchg
ret
jge
inc
sbb
jle
shlb
lods
aas
enter
adc
cmp
jno
leave
mov
pop
sbb
into
inc
stos
sbb
push
cltd
jle
outsl
cmp
inc
imul
push
push
push
mov
sbb
dec
dec
clc
jl
stc
cmp
xor
stos
dec
pop
inc
pop
lock
push
sbbl
xor
into
xor
pop
or
xor
cli
push
out
outsl
sub
inc
push
js
cli
lret
jecxz
mov
adc
icebp
fcoms
shlb
outsb
imul
outsl
ret
arpl
mov
xor
xchg
dec
imul
push
mov
mov
mov
mov
scas
insb
push
jle
paddusw
cltd
pop
xor
sahf
popa
or
add
inc
push
mov
sbb
arpl
mov
loop
add
arpl
mov
std
frstor
cvtpi2ps
rcrl
adc
sbb
andl
dec
test
cmc
lahf
xlat
push
mov
inc
push
add
fwait
jns
ss
mov
and
ds
sbb
notb
sbb
pop
mov
cmpsb
jl
xor
decl
cmpsl
dec
pop
mov
scas
pop
mov
cs
sbb
loopne
inc
inc
sbb
dec
xchg
call
imul
cli
imul
jnp
int
arpl
xchg
push
and
xor
les
push
push
add
xor
fst
int3
popa
jns
call
xchg
mov
pop
xchg
adc
push
jl
xlat
mov
and
fmuls
call
fimull
mov
lret
arpl
fdiv
test
lret
jns
stos
mov
test
loope
addb
fs
mov
popa
cmp
es
pop
jbe
fnstcw
inc
dec
andb
push
stc
popa
pop
pop
dec
addr16
roll
insb
xor
mov
stos
and
dec
adc
cltd
sbb
or
sbb
adc
arpl
arpl
adc
push
fwait
loope
xlat
jnp
adc
loop
lods
dec
dec
cmp
mov
sbb
outsl
cltd
inc
mov
lahf
ds
mov
test
insl
xor
sbb
fldt
xchg
push
call
dec
test
cltd
xchg
test
test
sub
ljmp
cmc
pop
adcb
hlt
int
bound
or
scas
sar
sbb
imul
and
sahf
add
sbb
leave
std
sti
dec
lret
arpl
inc
jae
jb
xchg
lret
adcl
xchg
xor
test
popa
dec
push
mov
js
sub
adc
add
and
mov
in
xor
push
push
lret
loop
negb
xor
std
subb
fidivl
jg
adc
sti
gs
imul
jo
mov
pop
fwait
leave
pop
in
add
sar
repnz
lret
add
in
ds
mov
ljmp
and
inc
shll
iret
mov
and
lods
fstpt
es
lret
xor
jmp
faddp
lret
jmp
pop
xchg
loopne
cli
cld
dec
jp
jp
mov
addr16
shl
dec
lret
jmp
mov
dec
cmp
mov
scas
aas
test
out
or
shlb
push
dec
xchg
enter
push
outsb
ficomps
aaa
repnz
inc
dec
cltd
test
sub
cmp
stos
push
sahf
lret
add
out
sub
lret
aas
loopne
inc
lahf
lcall
push
enter
xchg
dec
or
or
mov
sbb
or
sbb
icebp
push
dec
mov
mov
mov
jg
jo
outsl
into
push
or
stos
mov
mov
pop
js
and
jnp
cld
lea
inc
daa
shrl
pop
sub
lahf
loope
mov
lret
mov
jb
fxch
movsb
xchg
movl
into
jo
add
pop
inc
sub
pop
clc
and
lahf
lret
js
daa
ficomps
mov
loopne
sbb
mov
xor
inc
cmp
xor
mov
mov
push
lea
inc
arpl
add
add
js
or
sub
and
int3
or
lret
shlb
push
pop
stos
jns
inc
jecxz
mov
mull
out
insl
cs
lret
lcall
adc
pushf
push
mov
int
das
int
jae
or
mov
sarl
ss
lea
ds
cmp
or
sbb
out
fnstsw
ja
les
cltd
aas
je
rcrl
js
daa
adc
mov
push
cmp
sub
lret
ljmp
xor
and
ret
dec
dec
mov
mov
sti
lea
test
in
or
dec
ret
ret
xchg
lds
ja
jecxz
and
rcll
jmp
sbb
enter
add
mov
sarl
pop
jp
or
push
jne
mov
stc
shlb
outsl
lret
iret
and
loope
ljmp
rcrl
cld
lret
dec
nop
popfw
cmp
mov
or
xchg
ret
and
iret
push
gs
sbb
dec
sbb
aaa
adc
lret
cmc
dec
mov
in
lret
orl
sarl
mov
icebp
xchg
js
lret
inc
inc
dec
mov
lret
lret
insl
nop
incl
pop
lret
and
mov
dec
lret
cmp
xchg
xor
mov
and
lret
ss
xlat
negl
pop
lret
jbe
aas
sbb
xor
lret
mov
sarb
lret
mov
in
daa
cli
stos
xchg
inc
lret
shlb
pop
lret
fwait
das
xor
imul
and
inc
fstpl
clc
cmp
aas
cmp
jae
lret
push
enter
dec
shl
dec
adc
dec
arpl
cmp
pop
inc
fnstenv
out
sub
xor
and
arpl
dec
fdivrl
xor
lahf
ror
les
sbb
mov
pop
stc
sub
test
bound
daa
mov
adc
icebp
cmp
or
mov
or
jno
gs
pop
jnp
and
rorl
imul
dec
in
sub
out
xor
xor
cmp
cmove
loopne
sbb
rcrl
xor
cld
shll
mov
cmp
repz
flds
pop
enter
insl
xchg
mov
outsb
xchg
adc
leave
push
xor
mov
pushf
mov
inc
je
sub
lret
inc
std
das
fbld
mov
push
in
push
lret
jno
imul
lret
pop
add
in
fidivl
or
adc
lock
rcr
xor
inc
fwait
push
sbb
xorl
push
mov
cmc
lret
sbb
add
and
repnz
mov
mov
std
ret
mov
leave
popa
insl
fnsave
out
jp
mov
rcr
adc
pop
mov
into
xchg
inc
out
and
inc
stc
int3
xchg
daa
jmp
mov
imul
loope
test
or
lret
or
adc
mov
pusha
lret
decb
and
lret
sub
pop
add
or
rcpps
sub
mov
cmpsl
cmp
mov
push
fimull
movsl
xchg
and
dec
or
pop
mov
inc
mov
xchg
fwait
add
lret
pop
jae
xchg
cmp
dec
pop
inc
cmp
bnd
push
lret
dec
jnp
aad
mov
add
dec
cmp
jp
xor
in
or
cmpsb
and
and
add
ror
dec
pop
fiadds
mov
js
out
hlt
leave
and
mull
pop
xchg
in
jle
subl
mov
bound
stos
sub
faddp
mov
push
cmp
pop
adc
fisttpll
xor
lret
imul
mov
and
leave
aaa
js
cli
xchg
cwtl
push
lret
xchg
dec
mov
and
mov
cmpsb
add
in
stos
bound
ds
in
cmp
mov
mov
push
jb
lds
sbb
loop
jb
mov
push
lret
push
add
sbb
cld
sub
loope
push
jae
push
xchg
xchg
pop
and
xchg
ljmp
lret
outsl
add
out
add
xlat
mov
cwtl
insb
inc
dec
inc
dec
lret
ja
mov
mov
call
mov
pop
lret
icebp
inc
mov
mov
jns
insl
pop
xchg
and
stos
xchg
add
pusha
lret
and
mov
jecxz
int
dec
aaa
mov
int3
leave
xchg
lret
cltd
pop
jle
daa
inc
jecxz
lret
mov
or
add
out
in
xchg
push
or
lret
loop
or
leave
fs
pop
cmpsl
mov
mov
aad
sbb
lret
or
leave
lret
push
js
popf
push
jl
fidivrs
imul
jbe
adc
push
pop
or
jb
rep
jmp
cmp
andl
sbb
ss
push
jl
or
daa
in
fcompl
push
cmp
lret
push
ljmp
lret
mov
mov
in
mov
rcrl
lret
sbb
sub
cmp
cltd
imul
mov
xor
mov
and
sbb
dec
scas
jns
mov
stos
pop
subb
dec
lret
jmp
call
scas
and
sub
cli
push
cmpsb
int
clc
ss
lods
stos
mov
pop
lret
into
mov
mov
loopne
std
js
push
jg
or
xor
xor
jecxz
jns
mov
call
mov
cmc
out
xchg
pop
in
push
push
jl
lods
iret
stos
pushf
loope
lret
inc
pop
popa
icebp
mov
pop
dec
rorb
add
mov
sub
enter
or
cmc
mov
into
stos
jnp
mov
or
mov
mov
shll
mov
fwait
lds
add
mov
arpl
sub
mov
sahf
icebp
lret
test
int
stos
sub
cwtl
movsbl
ds
dec
int3
pop
sbb
mov
xchg
xchg
and
mov
push
inc
xchg
out
and
pop
imul
push
das
jl
cmpsl
out
jle
jne
scas
fidivl
mov
out
push
xor
xorl
ljmp
out
negb
adc
sbb
push
ss
sub
sti
mov
sbb
inc
andl
rcrl
iret
push
pop
xor
enter
adc
mov
cmp
sar
mov
jne
movsl
fcompl
outsb
loope
mov
fadds
loope
sahf
lret
adc
xchg
loopew
mov
shl
fsubl
pushf
jg
pusha
xchg
and
push
neg
jae
das
ja
ss
pop
sbb
xchg
sub
ljmp
jecxz
inc
jne
push
lret
imul
sbb
mov
mov
xor
aam
pop
mov
adc
scas
pop
sahf
ljmp
push
inc
aam
or
or
shlb
sub
imul
pop
sbbl
dec
cmc
mov
lcall
sub
imul
cmp
pop
popl
adc
xchg
pop
clc
push
cmp
notl
mov
push
jmp
sbbb
jno
out
inc
dec
jecxz
sbb
imul
and
sub
ret
in
popa
int3
cs
fpatan
adc
xchg
in
into
sti
and
int
insl
sbb
push
lock
addr16
push
ficoms
mov
cmp
xchg
pop
xchg
jmp
jo
shll
fcompl
enter
fdivrp
ljmp
in
jle
push
mov
push
sbb
xor
push
rcll
imul
jno
adc
in
les
sub
dec
sbb
pop
adc
dec
mov
insb
jne
xorl
and
inc
cmpsb
sbb
or
and
mov
repnz
jne
loope
push
mov
or
pop
arpl
fsubr
xchg
adc
sbb
push
mov
pop
insl
cmp
test
addr16
jmp
orl
arpl
ret
cli
adc
cltd
dec
lds
fidivs
xchg
sub
fcoms
or
and
cltd
mov
and
mov
lods
push
dec
sbb
test
or
add
mov
sbb
dec
and
loope
push
pop
sbb
push
jmp
jnp
xchg
ljmp
jp
sbb
lods
pop
pop
pushl
arpl
inc
xor
cmp
rorl
mov
xorb
cmpsb
xor
sbb
adc
lea
jmp
fldenv
add
push
push
ljmp
subl
pop
int3
mov
xor
pop
orl
out
lret
sbb
clc
mov
mov
xor
sbb
mov
orb
int3
aaa
sbb
stos
enter
jmp
out
ds
call
testb
push
ret
sbb
fistps
loop
fldenv
push
pop
and
idivb
aaa
inc
mov
xchg
dec
and
roll
fisubl
aad
mov
bound
dec
fimull
mov
adc
add
imul
pop
fcoms
int
outsb
scas
jge
inc
add
test
add
xchg
jno
xor
add
jno
add
mov
popa
jmp
cmpsb
test
mov
lds
stos
mov
cwtl
mov
ret
clc
fmul
popa
popa
out
out
push
popf
add
xchg
and
cmp
ljmp
aam
movsb
sbb
xchg
and
sbb
pop
scas
fbstp
add
inc
mov
bound
push
imul
adc
xor
xchg
sbb
into
test
jg
adc
mov
mov
ss
jecxz
mov
cmp
mov
xchg
jne
push
hlt
cwtl
ret
jno
shll
mov
cmpsl
jns
xchg
stos
mov
mov
or
sub
cmpsl
jp
inc
test
hlt
sbb
sbb
roll
mov
fsubrl
cmp
scas
mov
sti
sbb
cmpsl
inc
fcoml
add
data16
inc
lods
jmp
xchg
mov
mov
pop
test
sbb
stos
add
hlt
jo
out
xchg
mov
and
shlb
mov
mov
sbb
pop
cmpsb
mov
iret
cmpsb
mov
or
out
movsb
dec
mov
inc
addr16
jb
in
sub
and
mov
fidivl
pop
sbb
sbb
mov
int3
pop
xchg
les
insl
sub
sbb
mov
xor
inc
ja
mov
mov
mov
imul
and
inc
nopl
lock
movsl
arpl
adc
pop
dec
jp
mov
xchg
mov
loop
lret
sbb
sub
fists
xchg
mov
imul
xor
or
imul
loope
js
pushf
push
push
push
repnz
mov
xor
pop
out
lea
xor
mov
es
xchg
jg
and
sub
push
addr16
push
push
push
jge
xchg
ljmp
outsb
mov
fstps
xor
sub
idivb
fistl
bsr
daa
add
mov
push
adc
push
jae
stos
mov
pop
pop
insb
pop
stc
subl
out
sbbl
pop
inc
and
out
xchg
fcoms
cmp
xchg
mov
xchg
pop
mov
scas
xor
xor
cmp
jns
adcl
push
push
add
mov
xchg
clc
stc
adc
mov
leave
cmpsl
ljmp
sub
sbb
sbb
je
popf
test
pop
sbb
and
xchg
jl
fstl
jmp
pop
ret
mov
jmp
jp
popa
addl
sub
and
add
imul
in
cmpsl
cwtl
test
and
aad
push
test
popa
mov
imul
pmuludq
lret
and
stos
je
mov
inc
sbb
sub
insl
cwtl
ficomps
outsl
cli
pop
inc
imul
xchg
adc
xchg
adc
inc
xor
and
adc
inc
xchg
test
xchg
fs
and
notb
inc
test
sarb
cmpsb
lods
ffreep
iret
xor
pop
arpl
mov
and
xchg
lcall
ret
aas
dec
add
or
inc
mov
jmp
inc
call
lea
jae
dec
addr16
das
ja
mov
xchg
lock
mov
pop
dec
jne
bound
or
push
popf
lcall
fdivs
sbb
mov
xchg
xchg
push
sub
xchg
jge
test
ljmp
bswap
adcl
dec
adcb
add
outsl
push
stos
arpl
aam
mov
mov
movaps
sbb
and
dec
add
add
leave
lcall
in
cmpsb
inc
adc
push
adc
sub
add
lock
mov
cmp
mov
mov
hlt
mov
fsts
and
and
imul
push
loop
decl
mov
repz
sbb
les
mov
orb
addr16
test
jp
mov
adc
adc
and
push
insl
cmp
and
mov
mov
mov
dec
orl
dec
pop
mov
jecxz
cmpsb
jo
mov
mov
add
cli
sub
pop
lock
scas
add
mov
loopne
pop
nop
int
sbb
push
stos
in
adc
mul
pop
sahf
cwtl
repz
cmp
xor
cwtl
ret
pop
dec
outsb
or
repz
movl
push
lds
call
test
mov
mov
cs
sub
ret
xor
inc
popa
inc
mov
cmp
jae
out
add
psllq
fildl
sub
insb
xor
sub
jae
dec
adc
push
scas
mov
cwtl
lds
or
jnp
adc
push
sbb
or
pop
jo
andb
mov
sbb
push
enter
imul
jnp
cwtl
sbb
cltd
inc
sbb
fstps
call
or
mov
jg
daa
nop
dec
and
sbb
adc
fdivp
mov
in
add
inc
mov
divl
pop
mov
dec
mov
out
and
fstpl
pop
jecxz
or
inc
stc
ja
pop
push
inc
jecxz
mov
out
rcr
sarb
sub
xchg
push
add
dec
jl
dec
mov
lock
mov
les
in
xorb
xlat
jge
xchg
mov
test
dec
imul
out
cmp
dec
jnp
stos
pusha
shrb
mov
std
lret
out
imul
mov
cmp
adc
mov
js
jecxz
scas
jmp
sbb
shr
cmp
pop
int
in
cwtl
in
mov
mov
lods
les
cs
dec
jns
das
sti
ret
jge
aaa
jae
pop
pop
push
std
sbb
movsl
xchg
xchg
mov
jl
leave
ljmp
out
in
enter
std
and
lea
or
in
stos
mov
stc
adc
cmp
adc
mov
int
or
in
inc
mov
cs
imul
fistps
adc
sub
aam
cltd
pcmpeqd
cmp
stos
cwtl
xchg
shl
arpl
dec
fisubrs
ret
pop
jo
push
ljmp
xchg
sahf
ret
lret
les
cli
push
lret
pop
jg
sahf
or
pop
push
dec
pop
sti
mov
sub
jmp
add
mov
dec
or
outsb
imul
shrb
xchg
mov
ret
out
test
xchg
sbb
mov
jl
mov
jno
jno
outsb
loope
push
lret
sbb
adc
pop
jno
fimull
scas
int3
sbb
mov
xchg
lret
inc
pop
dec
push
sbbl
das
dec
divl
dec
imul
dec
popf
push
lods
aad
lds
shl
mov
sti
jo
jb
psraw
sbb
cmp
sti
ja
push
enter
push
repz
mov
outsl
roll
mov
icebp
push
out
stos
pop
xor
jp
add
inc
jl
or
mov
pushf
bound
and
add
mov
and
fstpl
shlb
mov
lea
mov
test
cs
add
dec
lahf
mov
adc
mov
sbb
test
add
cltd
adc
iret
popa
fmull
jne
jns
fisttpl
incl
fistpl
fstl
fcom
out
pop
mov
or
dec
cmp
ficoml
cmp
leave
xor
movsb
sub
out
pushf
cmp
sbb
xchg
arpl
inc
sbb
dec
push
cmp
sbb
mov
inc
aaa
or
shr
ds
data16
inc
xchg
inc
xchg
sub
and
cld
and
aad
fwait
imul
mov
xor
lods
loop
inc
xchg
aad
in
hlt
pop
adc
mov
sti
jmp
pop
sarb
cmpsb
loope
ds
ds
push
decb
ret
jno
sbb
push
cli
add
pop
mov
cltd
jbe
pusha
push
gs
sub
xchg
cmc
push
es
jecxz
mov
sbb
ljmp
inc
stc
inc
push
or
pop
mov
push
icebp
addr16
xor
aaa
stos
sub
cmp
cmc
cmp
sbb
fbld
scas
out
sahf
sub
push
or
and
sbb
inc
xchg
addr16
adc
ljmp
mov
mov
ficompl
pop
stc
in
std
adc
sub
inc
pop
into
xlat
pop
cmp
popa
inc
ljmp
xorl
shrl
xchg
cmp
lock
scas
sub
dec
cmc
mov
sbb
jecxz
sbb
pop
and
fwait
les
or
inc
pop
js
xor
pop
sbb
mov
jnp
test
subl
iret
mov
sbb
loope
adc
xchg
ficoml
add
ror
xlat
lea
lock
xor
rcr
pop
jno
mov
out
mov
test
rcrl
pop
xchg
dec
iret
add
xor
lcall
ficompl
test
lea
iret
aaa
or
stos
sbb
cld
dec
daa
cli
imul
aaa
pop
inc
mov
add
adc
cmp
ret
cwtl
dec
fwait
jo
push
or
btr
xor
jge
cmpsb
fldt
vlddqu
mul
mov
cmp
pop
lods
loop
fcoml
lret
adc
popa
mov
sbb
popa
jmp
lret
mov
mov
mov
repz
fimull
shrb
adc
in
scas
sbbb
jno
leave
mov
cmpsl
lahf
bnd
test
cld
xchg
xorb
leave
out
rorb
ret
ret
xchg
insl
pushf
xchg
cli
xor
jno
push
mov
orl
pusha
xor
in
sbb
call
outsb
push
lock
mov
mov
cs
mov
sbb
test
mov
repnz
pop
and
add
mov
push
sti
imul
adc
inc
inc
or
mov
imul
xchg
xor
mov
xor
orl
push
sbb
scas
adcl
or
jmp
xchg
jg
imul
mov
std
adc
cli
cmpb
and
mov
xchg
cwtl
inc
cmpsb
add
pop
dec
cmp
lcall
cmp
out
push
push
mov
out
jo
xchg
ret
hlt
xor
and
repnz
insb
inc
xor
jbe
shrl
lcall
jmp
dec
lock
push
inc
subl
rorb
add
scas
pop
mov
ret
cltd
sahf
shl
scas
sar
sbb
mov
lods
fnstenv
mov
lret
inc
sub
jmp
mov
ret
gs
or
test
inc
add
sahf
sti
cmp
out
lahf
or
mul
rcll
and
mov
mov
xor
fmulp
mov
mov
sub
pop
mov
movsl
jl
cltd
jmp
pop
in
jp
ljmp
imul
mov
lcall
sbb
or
dec
xchg
sahf
push
repz
pop
out
sub
jl
jle
or
push
add
aas
mov
jge
jecxz
sti
mov
pop
sub
ret
push
scas
lcall
repnz
xchg
xor
test
idivb
add
repnz
xchg
xor
mov
inc
lret
leave
ret
sbb
add
pusha
sbb
ret
arpl
sbb
cli
jl
shl
mov
sbb
mov
xor
movd
push
inc
sub
loopne
sti
lret
sbb
cmp
inc
lods
int
sbb
xorl
inc
sbb
or
lods
pop
xchg
lds
add
nop
lahf
enter
mov
xor
aam
loopne
xchg
pop
cli
adc
fsubrl
outsb
mov
sub
fistps
jp
loop
lret
nop
mov
mov
mov
popf
call
sbb
push
pusha
or
cmpsl
cmpsb
and
pop
add
push
lock
and
or
xchg
bound
mov
cmpsb
mov
and
int
pop
outsb
xor
mov
test
sub
test
jp
mov
pop
int
mov
sbb
jns
in
cmp
shrb
jmp
and
push
xor
xchg
loop
dec
cmp
shlb
pusha
ret
fdivl
stc
es
fs
sub
push
inc
rcr
subl
inc
les
xor
mov
clc
sub
sub
scas
ret
sub
mov
sub
xchg
push
lahf
jmp
int3
dec
xchg
hlt
fcomip
add
push
int3
and
aad
lcall
mov
lea
sbb
int
add
add
das
pop
jbe
hlt
adc
push
test
movsl
jmp
fistpl
adc
insb
mov
shl
pushf
cmp
out
jmp
addr16
scas
lea
outsl
sbb
lcall
pop
popa
jge
pop
ret
sbb
lret
add
enter
jmp
test
decl
push
es
lds
nop
push
mov
add
xchg
inc
lret
das
imul
lock
mov
aad
mov
xchg
push
inc
jne
and
bound
dec
testb
add
adc
enter
mov
push
lock
jmp
mov
gs
xor
fists
into
cmc
sub
call
dec
sub
sbb
mov
aam
cmpsb
xlat
mov
xor
lods
fwait
hlt
push
mov
sbb
out
xchg
push
xor
cltd
scas
push
xchg
mov
or
and
into
and
and
mov
and
icebp
jge
dec
cmp
mov
addr16
push
or
popf
mov
sbb
fisttpll
test
repnz
ss
jae
sbb
mov
pop
mov
imul
or
push
add
pop
mov
sub
fmul
mov
leave
sbb
andl
fsubrs
cmp
xor
cltd
mov
mov
xchg
repz
mov
sbb
push
fadd
or
out
or
and
mov
stos
add
fstps
outsb
sbb
pop
bound
push
cld
stos
rorb
sub
stos
fisttps
es
lods
mov
jne
inc
loop
ret
stc
cmc
out
xchg
loop
xor
and
push
inc
cmp
scas
jmp
cmp
lret
outsl
and
scas
mov
sub
jp
jne
ss
enter
and
pop
sbb
add
jmp
lret
push
add
dec
mov
mov
loopne
dec
xchg
test
insb
adc
mov
orl
xorb
lds
pop
adc
adcb
xchg
jmp
lea
in
push
mov
int
pop
cmp
xorb
sbb
adcb
insl
rcl
ja
loopne
inc
and
mov
pop
pushf
test
jecxz
add
jecxz
mov
mov
testl
cli
sbb
jne
fidivrl
lea
sti
and
and
mov
ljmp
jno
inc
pusha
push
sbb
sbb
cmpl
repnz
dec
sbb
or
jmp
push
clc
nop
mov
hlt
fdivrs
or
xor
mov
lock
mov
xor
xor
imul
repnz
mov
gs
scas
pop
stos
mov
cmp
sahf
ficompl
outsb
fnstcw
mov
into
mov
mov
es
pop
addr16
jmp
loope
or
nop
push
movb
inc
add
aam
scas
add
sbb
and
xor
and
mov
xchg
pop
mov
loop
popf
fstpl
inc
pushf
pusha
push
inc
test
in
push
xor
xor
negb
in
mov
mov
xor
fchs
jne
ss
pop
cwtl
cli
enter
pop
mov
sub
cmp
outsb
pop
or
xchg
xchg
stc
sub
pop
cmp
sub
push
aas
ja
test
or
jne
mov
jmp
add
imul
inc
pop
dec
and
movsb
mov
push
adc
sbb
and
add
mov
cmpsb
es
lret
xor
ljmp
dec
xchg
ja
ds
sbb
mov
xor
dec
int3
inc
clc
xchg
xor
scas
nop
bound
jb
int
insb
jb
sbb
imul
rcl
popa
xchg
into
cmp
jmp
fistpl
jae
test
daa
mov
sbb
jecxz
stc
dec
ljmp
pop
ds
test
pushf
pop
jmp
push
mov
mov
test
fists
ficoms
loope
jne
add
mov
xor
fs
inc
stos
sbb
push
pop
test
iret
mov
sbb
outsl
aam
scas
jp
cmp
push
pop
fdiv
ja
jae
lock
or
adc
divl
mov
sbb
test
pop
sbb
ror
jne
mov
test
sub
mov
out
sbb
add
sbb
leave
pop
aam
mov
ss
mov
jae
orl
inc
mov
arpl
pushf
icebp
fstpl
pop
stos
xor
fadds
fcmovnu
jmp
mov
sbb
loop
ss
xchg
sbb
cmp
cmp
jne
pop
pop
bound
mov
xor
test
outsb
mov
sub
and
andl
pop
cmp
sub
aaa
call
cmc
enter
xchg
lret
mov
inc
or
loopne
arpl
mov
clc
scas
and
dec
rcrl
push
ret
gs
lds
adc
add
push
pushf
cmp
fsub
test
jno
mov
and
xchg
jecxz
mov
jo
lock
popf
bound
sbb
sbb
push
push
adc
scas
push
mov
dec
loop
jl
call
sbb
daa
ljmp
sbb
sbb
and
cwtl
xchg
xchg
cs
ss
in
mov
inc
push
sbb
loopne
jp
test
ret
aam
cltd
xchg
jecxz
roll
cli
xchg
pop
adc
fiadds
fcomps
lret
movsb
sarb
out
mov
and
shl
dec
addr16
inc
scas
ljmp
test
fsubs
fsubs
outsl
scas
sti
je
fldt
jae
dec
sbb
xor
sbb
ja
test
sub
mov
mov
cli
popf
leave
pop
in
call
fs
ja
mov
sbb
and
pop
test
mov
and
movsb
ja
out
adc
jle
sbb
leave
dec
loope
gs
sbb
lock
sub
xchg
rorl
jge
push
ror
jecxz
adc
pop
inc
out
pop
inc
push
das
insl
dec
les
mov
dec
mov
adc
lret
lods
mov
push
mov
xlat
and
sbb
and
idivb
jne
mov
sbb
add
clc
jo
push
sbb
cli
in
xchg
fcomps
inc
int3
jmp
daa
test
test
sbb
jle
xlat
insb
daa
xor
sbb
mov
in
xor
scas
aam
xor
and
shlb
popf
or
mov
xchg
fwait
int
xchg
gs
movsl
enter
rep
imul
les
and
aas
pop
inc
sti
sbb
data16
jge
ret
sbb
int3
fidivrl
mov
and
outsl
out
sbb
push
sub
sub
fdiv
pop
mov
pop
fists
sarb
aad
movsl
mov
popa
cs
or
repz
scas
pop
sbb
lret
pop
test
cs
pop
adc
inc
jmp
js
fst
lret
adc
scas
or
dec
add
and
inc
adc
scas
mov
or
jno
int
ret
xchg
ror
aas
je
xchg
sbb
fcmovb
jne
adc
inc
sahf
subl
push
sbb
inc
outsb
fdivrs
jo
xor
sub
lock
mov
dec
pop
mov
mov
push
sbb
xchg
inc
ja
fs
je
pop
hlt
out
or
popa
mov
pop
sub
ljmp
or
xchg
xchg
sbb
mov
and
lds
scas
and
scas
inc
fsubr
lea
mov
push
pop
push
ja
aam
in
roll
push
ficomps
loope
inc
fisubrl
repz
fsubl
scas
and
in
ljmp
scas
pop
stos
mov
sti
add
mov
iret
cwtl
int3
fldcw
mov
fsubl
cs
imul
push
sub
rcrl
sub
sub
ficomps
les
sub
das
jne
jmp
int
test
push
and
mov
ret
push
cmpsb
into
lds
fs
cmp
mov
cli
mov
jecxz
push
repz
mov
or
test
and
pop
sbb
jno
fsubl
ret
mov
stos
inc
ret
cmc
adc
scas
inc
inc
mov
jmp
daa
stc
outsl
mov
lret
mov
cmp
outsl
out
pushf
fmuls
aas
pop
push
inc
and
mov
test
ss
sub
sbb
clc
enter
insb
fs
ljmp
fildl
pop
cmp
and
insb
jb
mov
fildl
dec
dec
mov
jecxz
fdivs
or
lods
mov
lods
ss
pop
mov
loop
sarl
outsl
cmovl
cmp
ljmp
insb
es
test
sub
jne
pop
pop
and
sub
aaa
sti
and
leave
dec
or
jb
dec
jmp
scas
cmpsb
or
arpl
inc
pop
and
outsb
mov
fstpl
xchg
push
cmp
or
mov
test
nop
cmpsb
out
fsubl
hlt
and
negl
xor
cltd
adc
dec
inc
mov
sahf
test
push
cmp
push
adc
imul
dec
or
cmp
inc
adc
cli
inc
int
nop
mov
jge
test
inc
sbb
rcr
or
daa
lret
popf
mov
cltd
hlt
jno
inc
fbstp
mov
lds
jp
leave
cmpsb
fcmovnb
sbb
enter
sbb
xchg
push
jmp
inc
into
rcrb
fdivr
shrd
xorl
inc
divl
jno
mov
adc
ret
pop
pusha
inc
das
sbb
loop
fistps
dec
jcxz
cli
jecxz
scas
jne
pop
add
or
std
mov
jne
cmp
jl
adc
fldpi
mov
or
lahf
jno
movsw
add
sub
xchg
mov
lcall
in
ss
aam
shrb
xchg
pop
inc
dec
in
dec
sub
imul
ss
adc
mov
or
out
sbb
mov
sar
fsub
pop
add
xchg
pop
mov
sar
dec
sbb
ljmp
sbb
ret
lcall
nop
ficoml
or
pop
xchg
mov
hlt
sbbl
pop
add
fidivrs
sarb
push
dec
pop
lods
cltd
mov
mov
test
roll
or
cmc
push
mov
sub
inc
pusha
outsb
push
adc
ljmp
or
stos
mov
inc
frstor
ljmp
in
and
cmp
xchg
mov
stos
mov
loope
mov
cltd
inc
pop
jno
fstpl
and
xchg
scas
into
addl
js
aaa
jno
scas
or
adc
test
imul
sub
loop
push
lcall
sti
jmp
les
jmp
jne
filds
fadd
cli
lcall
xchg
movntq
out
sbb
dec
lea
cmp
sbb
xor
jne
add
aaa
adc
ret
out
inc
mov
and
pop
imul
pop
sbb
cli
add
sbb
jno
push
pop
adc
add
cmpsl
shrb
fdivrs
dec
test
cmp
icebp
lret
imul
push
shrb
adc
lret
aam
sti
aaa
adc
sbb
cmp
lret
or
stos
repnz
push
lods
in
sbb
or
xchg
and
inc
popa
xlat
push
ret
andb
add
insl
imul
mov
mov
out
xchg
out
mov
insl
arpl
mov
test
aas
inc
int
add
inc
nop
sbb
sbb
push
mov
fwait
inc
mov
mov
repz
push
mov
cwtl
out
mov
dec
or
sub
shlb
dec
rcr
inc
adc
subb
mov
mov
cmp
add
jno
or
fwait
sbb
sub
loop
lods
lret
lret
push
arpl
xchg
pop
popf
arpl
xor
aad
adc
cli
js
push
imul
repz
mov
addr16
xor
mov
addl
out
cmpsb
inc
sbb
adc
push
xchg
pop
inc
pop
sub
pop
movsl
fwait
and
xor
roll
mov
out
gs
int
in
outsb
fnstcw
ljmp
lcall
insb
add
push
cmp
out
push
add
mov
xchg
inc
loope
push
jbe
test
repnz
cmpsl
daa
jnp
jl
mov
insb
sub
pushf
std
push
fsubrs
xchg
insl
and
cltd
xor
jmp
rorb
int
out
shl
fidivl
lcall
xchg
push
pop
cmpsl
pushf
out
push
scas
xchg
mov
dec
sbb
gs
xor
fisubl
xor
adc
xor
popa
std
add
adc
jg
in
or
cmp
jno
push
and
faddl
mov
pop
leave
and
xchg
enter
fidivl
data16
js
xchg
lea
pop
jp
and
inc
scas
in
fucomi
insl
out
fisttpll
das
xor
mov
mov
lds
lret
test
cmc
out
shlb
pusha
mov
pop
orb
fdivrs
sub
sbb
cmpsb
pop
int
mov
jb
mov
ret
dec
and
push
sbb
jg
loope
and
pop
and
movsb
ss
xchg
mov
lock
or
sbb
xchg
mov
pop
mov
mov
mov
add
sbb
jno
push
pop
sub
mov
fisttps
mov
xchg
fiaddl
pop
and
ss
mov
lds
dec
xchg
sbb
mov
ss
jo
aas
lea
rcll
out
lock
dec
sbb
xchg
int
fwait
int3
xchg
push
mov
fsub
jmp
out
call
and
mov
pop
push
repz
push
insb
int3
mov
xchg
imul
push
cli
sbb
dec
xchg
inc
data16
sbb
outsl
mov
js
movsl
jmp
xor
fcmove
inc
loop
movsl
aas
cs
dec
mov
jmp
repnz
gs
fstl
dec
push
pop
insl
inc
dec
inc
and
data16
int
shl
push
mov
mov
int3
pushf
dec
and
push
mov
pop
add
clc
stos
sub
imul
push
pop
adc
or
inc
xor
pushf
shll
std
ret
mov
push
repz
pop
lcall
sub
sbb
sub
push
je
push
fwait
add
cmp
sbb
stos
imul
pop
leave
dec
nop
shlb
pop
ss
into
outsb
sbb
sbb
ret
aad
lds
lret
pop
lock
cmp
aaa
flds
pop
pop
fistpl
and
stos
push
sbb
adc
add
stc
fcompl
call
cmpsl
sub
cs
mov
sti
fsubl
inc
sbbl
ds
scas
stos
repz
shr
xor
sbb
cmp
jle
cmp
out
sub
and
sbb
das
ljmp
jmp
ret
dec
insb
xor
xchg
and
enter
mov
xchg
jae
pop
ljmp
sub
or
inc
pusha
lods
and
loope
xor
push
sub
pop
loopne
inc
jns
faddl
inc
mov
lock
shrb
nop
test
ljmp
aad
repz
add
or
out
dec
mov
es
pop
xor
ljmp
mov
xor
data16
pop
bound
adc
xlat
jne
test
mov
fcmovu
sub
ss
ret
sbb
pushf
sbb
push
and
adc
movsb
xlat
cli
ret
shrl
mov
pop
dec
into
dec
setnp
out
mov
push
or
push
das
dec
sbb
jmp
ja
mov
push
dec
xchg
enter
sbb
out
call
pushf
cs
mov
scas
push
and
sub
jno
imul
sub
pop
insl
addr16
mov
xor
repz
fisubl
xor
add
out
testl
ret
mov
inc
ds
jnp
lock
sbb
das
gs
cmc
inc
sbb
xor
fsubrl
sbb
lea
sbb
lahf
pop
jb
fsubrl
lds
inc
mov
mov
fcmovb
sbb
roll
addb
cmpl
stc
inc
das
fwait
testb
stos
insb
sbbb
and
pop
fcmovne
mov
jae
pop
cwtl
pop
fldenv
cld
jmp
pushf
jns
adc
xchg
fistpll
hlt
les
sub
push
fnstsw
cmc
and
add
pop
sub
mov
cwtl
jg
daa
xchg
add
cltd
add
push
xor
iret
sbb
add
in
fildll
gs
lods
push
inc
pop
bound
push
pop
mov
mov
movsl
jge
insl
out
dec
sbb
xchg
outsb
mov
cmp
inc
inc
pop
push
in
icebp
jno
mov
mull
xor
mov
ret
xor
ja
enter
cmp
ret
jnp
out
jno
mov
fcmovu
adc
dec
fcomps
movsb
int3
push
jae
insl
adc
push
push
jmp
sbb
cmp
push
mov
dec
fmulp
out
add
out
ljmp
cmp
int3
xor
lea
cltd
cmp
test
hlt
xor
push
stos
out
sub
dec
and
ljmp
pop
pop
inc
mov
pop
mov
jg
fisubrs
dec
hlt
sbb
addl
repnz
pop
pop
jecxz
mov
mov
push
arpl
imul
dec
dec
jae
imul
nop
pop
int
in
int
adc
dec
pop
stos
cmp
or
push
jnp
sub
and
sbb
dec
shrl
jmp
pop
or
push
push
adc
nop
jp
stc
sbb
ja
xchg
popf
arpl
mov
or
cwtl
mov
sbb
adc
jg
pop
fs
sahf
movsb
jecxz
inc
add
arpl
sbb
es
aas
sbb
pop
xchg
ljmp
dec
psubusw
cs
test
das
dec
adc
mov
repnz
mov
in
ja
or
mov
jns
and
xchg
rorb
dec
leave
sbb
data16
pushf
mov
dec
mulps
sbb
shr
andl
push
sbb
sub
popf
mov
imul
mov
inc
lock
into
fwait
pop
mov
xor
negb
rdmsr
pshufw
pop
add
iret
jns
xchg
mov
xor
lret
dec
aam
mov
in
leave
mov
scas
cwtl
mov
mov
repz
fxch
sti
push
adcl
fcompl
cli
cmpsb
mov
push
xor
arpl
test
push
cwtl
push
sbb
or
pop
sbbb
roll
adc
fcomps
jle
loopne
push
repnz
or
xor
add
fimuls
mov
fldl
cmp
dec
fnstsw
xlat
sbb
mov
pushf
sbb
testb
sbb
xchg
outsb
cmp
mov
mov
jp
adc
dec
mov
lock
jae
shrl
xchg
lret
lahf
ret
aad
jmp
insb
fcoml
mov
mov
popa
cmp
int
sbb
int
jae
add
mov
lds
push
das
aas
cmpb
push
inc
test
cmpb
jae
pusha
lret
adc
into
in
push
push
and
stos
loopne
xor
xchg
mov
stos
mov
and
mov
mov
int3
inc
sbb
add
mov
dec
sti
roll
jno
popf
inc
xor
cmp
icebp
hlt
cmp
mov
addl
mov
lcall
add
sti
lret
dec
pop
loope
mov
jecxz
mov
cli
test
and
fcmovbe
in
mov
leave
idivb
aas
test
lret
in
outsb
bound
pop
jp
cmpsb
cwtl
sub
adc
cmp
addl
gs
aas
jmp
shll
cld
and
sub
xchg
xchg
clc
inc
sbb
arpl
sbb
bound
rcll
add
sub
test
sbb
mov
rcrl
ja
sbb
sub
inc
popa
cwtl
jge
cwtl
fdivl
mov
xchg
jp
sbb
adcl
js
movsb
sub
ret
fs
int3
hlt
lea
add
pop
loopne
les
dec
xor
or
cmpsl
fisubs
inc
loop
pop
filds
nop
cmp
inc
shl
fists
stc
dec
gs
jg
push
adc
sbb
xchg
and
pop
mov
push
insl
or
addr16
insl
fwait
jno
mov
stos
jb
ucomiss
add
cmp
jne
jb
sbb
pop
movsb
insl
sub
xchg
push
jle
pop
cltd
sbb
adc
ret
inc
mov
aam
mov
dec
mov
daa
lret
jno
testl
out
in
adc
ja
cs
jbe
out
cmp
popf
or
iret
bound
xor
scas
inc
mov
xchg
or
push
test
mov
mov
cwtl
or
adc
stos
pusha
loope
fidivrl
mov
lret
shll
inc
jge
sbb
insb
dec
inc
test
dec
add
mov
cmp
fimuls
aad
test
fistps
faddl
jb
pop
xor
sbb
push
ficoml
out
je
out
or
and
lods
sub
pusha
jns
pop
push
outsl
sbb
aas
mov
jmp
pop
or
xlat
pop
mov
cs
pop
cmpsb
or
clc
xlat
and
cltd
push
incl
fldl
and
dec
or
icebp
ret
lock
mov
negb
or
inc
jno
adc
pop
gs
dec
dec
ret
fcoml
loop
or
pop
stos
pop
mov
xchg
outsl
push
fcoml
std
gs
xor
test
push
stc
adc
shrl
add
aas
fcoms
lock
loop
cmp
dec
aaa
shl
test
or
adc
push
xchg
xchg
or
pop
lret
xor
sbb
adc
sub
mov
out
ret
sub
leave
pop
sti
cmp
cld
dec
sbb
push
sbb
dec
sbb
xchg
push
sbb
shl
jl
roll
push
scas
popa
pop
repnz
mov
jbe
pop
xchg
dec
sub
cld
pop
fdivrl
pop
popf
jne
dec
pushf
adc
sbb
bound
int
inc
mov
sbb
mov
mov
and
aad
xor
dec
cmp
push
and
mov
mov
out
outsl
pop
pop
je
and
push
repz
fnstcw
pop
sbb
push
cs
or
and
xor
aad
mov
js
ljmp
ret
pop
and
sbb
adc
stos
lahf
test
leave
jb
jae
rolb
outsl
sti
xchg
out
mov
push
jp
sbb
dec
mulb
sbb
ret
lods
pmulhrsw
sub
sbb
push
jns
popa
cmp
imul
ja
cmp
mov
je
xor
mov
loop
push
push
mov
int3
cmpb
insl
push
aad
sbb
add
dec
cmp
mov
outsl
push
mov
ficoml
jo
loopne
xchg
out
xchg
jle
cmp
shlb
mov
pop
and
loopne
cmp
mov
xor
in
daa
jmp
test
inc
push
adcb
sub
movl
mov
dec
sbb
mov
inc
jo
and
movsl
xchg
or
mov
imul
xchg
shll
jno
and
dec
jnp
mov
push
inc
push
xchg
push
or
mov
and
test
jle
xchg
bnd
sti
loopne
or
repnz
mov
and
mov
jno
test
push
xor
fcomps
pop
fidivl
xor
mov
arpl
in
repz
fs
inc
push
xor
dec
push
popa
sbb
sti
imul
fldl
js
cli
repnz
mov
stos
ja
lds
ljmp
repnz
faddp
pop
stos
int
add
insl
xchg
mov
test
pop
les
sbb
les
dec
and
adc
sbb
push
lret
dec
jmp
fnsave
inc
das
nop
sub
testl
mov
sbb
pop
data16
sub
push
add
jbe
mov
int
pop
adc
adc
insb
xchg
lcall
test
lret
fstpt
hlt
ret
sti
xchg
insb
call
xorb
and
dec
lret
rcr
cmc
mov
push
pop
cmp
dec
dec
xchg
sub
aam
fisttpl
arpl
pop
outsl
add
repnz
lcall
mov
and
ljmp
lahf
jns
aam
push
aaa
loop
add
add
xor
bound
cmp
cli
mov
sbb
push
pop
jns
test
je
cwtl
xchg
ja
lahf
xchg
pop
ljmp
sub
lods
inc
test
pop
fcmovb
pop
add
jb
sub
out
lock
insl
pop
mov
fucomi
stos
cmpsl
xchg
adc
mov
ret
xorb
mov
cs
mov
fs
cwtl
rorb
xorl
mov
addr16
aam
xor
or
sbb
cmp
mov
jg
push
dec
sti
sbb
jmp
xlat
mov
loope
pop
xchg
and
jno
push
lods
xchg
imul
dec
jmp
ljmp
cmpsl
inc
sbb
call
lods
popf
xchg
lds
test
sbb
or
pop
push
dec
outsb
fdivrl
cmp
addl
scas
shll
or
lcall
stos
bnd
cmp
outsl
stos
aam
scas
jno
sbb
push
xor
mov
xor
mov
pop
sahf
neg
dec
add
add
aad
sbb
data16
sub
cld
lock
add
dec
dec
sbb
inc
addl
xor
sub
aam
or
ja
fidivl
xor
pop
pop
aas
or
push
icebp
mov
xchg
cmp
lret
aam
jnp
adc
enter
mov
sarl
cli
repnz
mov
pop
push
mov
sbb
push
int
push
sbb
mov
add
xchg
add
cld
mov
mov
and
jns
sahf
sarl
in
xor
jae
inc
xchg
adc
xor
outsl
int3
aaa
inc
aaa
cltd
jmp
ret
rcrb
das
add
dec
frstor
cli
sub
jg
or
xchg
push
jno
mov
sbb
push
sahf
push
add
outsb
inc
out
fsubs
cld
pop
mov
addl
push
dec
lock
pop
sub
outsl
test
lods
xor
daa
into
mov
cmp
hlt
adc
push
sbb
fldl
in
cld
mov
enter
addr16
mov
rcll
xor
fnstsw
shl
stos
push
xchg
or
popf
lret
and
or
sbb
cmp
inc
push
fdivrl
sub
cwtl
les
ds
into
lcall
enter
vmovups
xor
dec
std
add
shrl
push
sbb
mov
sbb
jae
dec
dec
ficompl
ja
popf
push
and
mov
add
sbb
clc
in
inc
test
lock
jo
cmp
mov
xchg
jl
xchg
repnz
add
imul
gs
cld
decb
xchg
adc
jecxz
push
dec
scas
test
inc
or
insl
nop
daa
outsb
sub
orl
stos
dec
or
jl
out
arpl
test
fsubl
inc
icebp
out
cmpsl
out
jnp
pop
les
fstps
pop
fstl
hlt
fs
sbb
cs
ss
out
pop
cmp
sub
outsl
push
bound
push
ljmp
loopne
scas
mov
flds
mul
cltd
jo
hlt
jge
jg
andl
mov
stos
sbb
hlt
add
ja
sbb
dec
adcb
xchg
fildll
or
sub
mov
stos
int3
in
popa
fdivs
insb
xlat
dec
and
sbb
sub
insl
mov
test
ss
adc
sub
sub
xorl
mov
std
loop
imul
jne
cmp
dec
mov
lahf
pop
mov
ret
movsb
jns
inc
dec
cmp
andl
inc
fs
or
fisubrl
xchg
jmp
scas
mov
adc
call
insl
lock
gs
sbb
gs
sbb
cltd
ficoms
loope
fistps
rcrb
dec
xchg
dec
inc
mov
lea
sbb
push
lcall
xchg
add
cmp
divb
mov
xor
imul
xchg
sahf
xchg
rolb
pop
sbb
xchg
cltd
mov
sbb
not
ljmp
gs
xchg
shl
adc
insb
fists
outsl
aam
mov
aaa
adc
fistl
pop
ds
push
cli
push
pop
sbb
rol
dec
mov
add
sub
cld
pusha
push
sbb
ss
xchg
sub
push
xchg
leave
and
inc
mov
pop
insb
enter
outsl
fdivl
test
outsl
ret
int
shll
addl
fwait
adc
adc
dec
cmp
arpl
jo
xor
or
das
rorb
cmp
inc
sarl
adc
lea
and
dec
sahf
push
cli
es
add
dec
inc
scas
push
pop
sbb
fistpl
cmp
mov
push
lret
test
mov
gs
cwtl
out
idiv
sahf
pop
inc
xor
scas
xchg
ret
sub
xor
mov
dec
xchg
sbb
imul
das
vmovlps
cmp
push
xor
scas
bound
xchg
pop
fsub
repnz
mov
lods
push
imul
inc
mov
lcall
fcompl
adc
inc
cmp
dec
aaa
repnz
jmp
outsb
out
dec
pop
sbbb
pop
ret
jb
aas
jmp
icebp
arpl
sbb
nop
sbb
test
imul
jecxz
pop
arpl
loopne
jbe
sbb
pop
div
loopne
ret
sub
fsubl
push
push
xchg
scas
sub
push
mov
sbb
jb
jnp
mov
daa
xchg
xchg
pushf
test
pop
je
lods
loope
pushf
test
jmp
in
cmp
int3
mov
push
mov
pop
mov
push
stos
add
or
cmpsl
ljmp
sbb
and
mov
dec
popa
push
adc
clc
sub
push
sbb
adc
call
sbb
mov
lock
sbb
cltd
mov
mov
jecxz
push
sub
fucom
mov
sbb
sbb
iret
stos
pop
and
inc
sbb
cmp
adc
mov
movsl
lds
add
loope
fstl
sti
xchg
enter
cld
xchg
xorb
or
push
les
lods
lods
fcmovnu
cmc
dec
mov
sub
pop
cmp
into
xchg
lock
mov
out
mov
xchg
mov
push
sbb
mov
fists
sti
call
cmp
mov
sbb
inc
pop
mov
sub
add
push
les
push
leave
or
jge
frndint
pop
int
neg
xor
sbb
inc
sbb
shll
enter
loope
dec
xchg
mov
and
sub
loope
int3
pop
and
jecxz
aaa
fdivrl
mov
stos
iret
inc
sbb
stc
repz
notb
xor
push
fwait
adc
dec
je
cmpl
sub
and
fistl
mov
or
xchg
clc
inc
and
loopne
jno
sub
fwait
add
flds
xor
lock
repz
pop
das
div
xor
mov
aad
add
xchg
mov
in
adc
addr16
popa
pop
ret
mov
and
insl
out
ror
jmp
hlt
sbb
imul
gs
xchg
iret
pop
popf
int
adc
and
inc
insb
mov
out
out
out
imul
inc
in
ret
lcall
ret
daa
sbb
faddl
sti
ss
xchg
shl
fcoms
dec
sbb
xchg
ret
clc
jns
shlb
dec
lret
scas
scas
ja
inc
mov
push
call
test
stos
fwait
popa
fistpl
mov
loope
xchg
pop
js
xchg
out
xor
mov
sbb
iret
sbb
jbe
filds
scas
xor
jl
mov
sub
fistpl
fsubrs
sbb
data16
adc
mov
out
sub
out
sbb
inc
shlb
aaa
test
mov
fldl
xor
inc
jbe
pop
dec
sub
test
mov
ds
mov
add
popf
mov
jp
sbb
loope
inc
inc
mov
lret
pop
sbb
cmp
repz
mov
or
fsubrl
inc
jnp
mov
mov
mov
sbb
fimull
add
adc
fmuls
dec
sbb
sbb
cltd
aas
pop
decb
mov
fnsave
mov
lret
sti
cltd
sbb
or
scas
fdivr
mov
and
pop
mov
loopne
mov
mov
sub
sbb
cmp
mov
sbb
lock
in
dec
scas
stos
jnp
cmpsl
cli
lea
and
sub
fcompl
dec
adc
sub
sahf
sub
in
rol
movsb
push
or
aas
in
dec
lock
xor
push
dec
rcrl
into
xor
xor
mov
pop
dec
sahf
dec
sbb
sbb
add
dec
cmpsb
repz
ss
xor
test
or
push
xchg
jb
jle
sub
adc
jg
sbb
inc
fs
mov
jmp
push
aaa
xchg
negl
cli
jbe
cmp
sbb
pop
fnstsw
pop
mov
lock
sbb
icebp
cmp
int
stos
loope
mov
dec
sbb
leavew
mov
loopne
aam
sar
push
sbb
int3
mov
clc
or
test
sbb
int
sbb
imul
push
pusha
js
and
fisubrs
les
or
mov
mov
or
test
pop
ja
lds
inc
mov
loopne
xchg
ret
rcl
mov
xor
imul
xchg
xor
xlat
mov
stc
loopne
pop
dec
sbb
mov
lock
mov
push
sbb
add
and
mov
repnz
xchg
xor
lds
sbb
lea
sub
fldenv
xchg
jmp
jnp
in
mov
add
inc
dec
xlat
sbb
in
jmp
mov
andb
rcrl
test
cmc
sbb
add
cmp
xchg
lods
jmp
jnp
gs
rolb
test
mov
or
clc
pop
jbe
gs
incb
lret
test
add
jmp
jecxz
sub
jno
mov
lods
loope
xchg
sub
xchg
xor
push
divl
fcom
out
dec
mov
pop
popa
cli
sub
hlt
sub
repnz
push
mov
movsb
test
sub
jecxz
pop
xchg
insb
jmp
cmp
orb
sub
xor
sbb
dec
dec
inc
pop
adc
loope
mov
adc
xor
inc
cmp
add
ss
lret
daa
mov
mov
repnz
mov
cld
and
or
mov
into
es
inc
jae
cmp
aam
repz
cmp
and
jne
add
fwait
adc
sahf
mov
add
outsl
lret
adc
fdivrp
scas
loopne
mov
xchg
dec
call
xchg
iret
add
xchg
rorl
mov
imul
out
mov
jle
repz
out
ret
add
inc
jge
mov
inc
mov
fists
cld
out
xchg
imul
or
cs
cltd
xor
lock
adc
lret
dec
cmc
int3
bound
mov
lret
push
jecxz
repnz
add
lret
push
cmc
dec
jp
clc
sub
shrl
mov
icebp
popa
movsl
lret
cltd
sub
clc
sbb
inc
cmp
arpl
int
push
dec
iret
test
lret
mov
ficoml
mov
inc
fcomps
cmp
or
cmpsb
inc
lret
dec
push
adc
pop
lret
fldenv
mov
and
shll
pop
pop
inc
shrl
lret
push
js
jo
rcrl
or
sub
xor
lock
dec
subb
scas
push
jg
mov
iret
rorl
cmp
mov
dec
mov
and
outsl
add
jne
adc
push
test
sbb
push
or
loopne
loop
imul
adc
mov
aaa
stos
lods
or
adc
lds
icebp
sbb
loop
hlt
rorl
push
sub
ror
sub
ljmp
je
mov
daa
fs
push
xlat
enter
mov
fwait
mov
outsb
ss
lret
inc
out
fsubp
fs
outsl
iret
inc
jo
jmp
or
push
dec
insl
sub
or
adc
setle
push
lock
aam
repnz
dec
jl
adc
xchg
mov
dec
xor
xchg
sarl
inc
jbe
push
std
icebp
lret
inc
adc
or
add
lret
loopne
inc
inc
pop
or
xlat
clc
mov
shll
mov
cmp
push
add
sub
add
xor
int
dec
fcom
or
inc
dec
std
icebp
inc
ds
test
lret
lret
shl
jp
xor
mov
addr16
std
pop
out
and
cld
push
jecxz
scas
into
lret
cltd
hlt
out
sub
dec
mov
repz
lret
mov
jl
adc
sub
or
int3
lret
mov
enter
fdivrp
lret
mov
loopne
in
lret
mov
sbb
push
push
stos
pushf
cmc
adc
xchg
dec
cmc
pop
mov
in
sbb
lret
xor
fisubl
cmp
cmp
lock
std
pop
out
lret
and
and
sar
xchg
sbb
lret
rolb
or
iret
sbb
clc
mov
outsl
add
mov
testl
xchg
cltd
out
aam
xor
in
sub
push
lock
mov
mov
out
les
sub
sub
adc
pop
jnp
stos
pop
lret
out
dec
repnz
push
lret
jp
scas
dec
lret
mov
lret
repz
add
pop
cli
stos
lret
fwait
in
fsubrl
int3
mov
jo
inc
cli
aas
sub
testl
xor
orl
ret
shll
out
dec
into
andb
sub
shll
rorl
cld
ftst
cmp
jecxz
mov
pop
out
fmulp
iret
fcoms
xor
mov
sbb
sbb
add
or
mov
fwait
push
negl
arpl
repnz
mov
pop
lcall
pop
clc
adc
lret
push
inc
rcrb
lret
and
pop
push
or
sti
sub
mov
mov
stos
ss
lret
insl
into
movsb
sub
enter
test
iret
xchg
cltd
pop
or
and
rorb
pop
pop
test
lret
cmp
popf
sbb
xchg
sub
pusha
dec
sbb
add
xlat
dec
lret
xchg
bound
loope
test
xor
lret
xchg
sti
sbb
or
ja
imul
lret
clc
movsb
inc
movb
cwtl
sbb
sti
push
jns
push
cmp
mov
sbb
cmp
leave
or
pop
xchg
dec
fadds
and
add
test
cmp
lret
pop
imul
stos
mov
cmp
lret
das
adc
push
jle
stos
xlat
int3
jns
or
imulb
push
daa
lret
inc
bound
lret
movsb
mov
lods
fld
xlat
insb
lret
ficoml
into
ljmp
or
shlb
fnsave
mov
popf
mov
lret
add
arpl
and
out
sub
insl
addr16
test
fs
lret
in
adc
mov
mov
push
mov
sub
mov
lods
xchg
shl
pop
outsl
ljmp
ljmp
outsb
cmpsl
or
rcrl
push
addr16
stos
out
jge
dec
dec
sub
add
mov
pop
imul
pop
adc
push
inc
fdiv
cmp
ja
sbb
cmpsb
outsl
lahf
loopne
int
and
inc
push
imul
outsl
sub
test
mov
and
mov
and
mov
test
loop
and
push
enter
sub
cmpsb
lret
push
jnp
mov
sub
xor
or
lret
push
in
vcvtps2dq
ss
lock
cmp
inc
jmp
scas
or
push
xor
sbb
sub
dec
xor
inc
jge
int
loope
jle
arpl
xchg
cli
js
inc
or
cli
add
sahf
xchg
mov
icebp
cmp
push
push
rcrl
or
shll
cs
pusha
adc
jp
stos
and
xor
lods
lret
sub
in
mov
repz
or
loope
pusha
cs
in
adc
into
pop
mov
lret
stos
js
loope
push
scas
cmp
push
lret
outsl
test
das
lret
or
mov
addb
es
jg
les
in
jno
jg
xor
inc
sub
fisubl
cmc
call
clc
out
shlb
or
stos
rcrl
scas
cmp
cmp
and
lret
push
mov
mov
les
lret
add
insl
or
pop
sbb
fsubrs
cmpsl
lcall
aam
dec
or
add
xchg
icebp
aam
popf
jl
inc
pop
lret
push
out
mov
and
lret
scas
ljmp
fs
test
fst
call
inc
xchg
cmpsl
int
js
and
stos
repz
add
pop
sub
inc
ds
xor
flds
xchg
imul
ffreep
imul
sub
lds
sahf
lret
lods
mov
stos
outsb
mov
push
add
ds
or
lcall
cmc
lret
mov
jmp
dec
rolb
push
mov
inc
push
insb
cmpsb
mov
sub
loope
mov
and
jp
mov
stos
fcoml
add
aad
lods
call
lret
cwtl
rcll
mov
mov
jmp
lret
das
pop
repnz
cmp
mov
mov
xchg
mov
pop
or
aas
adc
dec
or
fstps
and
dec
xlat
ljmp
sbb
push
int
stos
xor
fstps
cmpsl
sub
aas
shrl
push
mov
testb
outsb
mov
nop
inc
cltd
dec
sbb
jb
jg
xchg
aam
mov
cmp
pop
pop
jp
sbb
inc
xor
jbe
pushf
mov
aas
sbb
adc
xor
mov
adc
mov
add
adc
or
jno
mov
ljmp
nop
and
jle
fchs
add
xchg
fldl
pop
xor
sti
mov
mov
ret
ljmp
xor
sub
imul
nop
cmpsl
js
pop
inc
and
xchg
mov
pop
gs
fucom
sbb
dec
leave
fidivrl
ret
ljmp
mov
cli
jnp
test
rorl
rorl
aam
mov
sbb
mov
inc
push
sbb
shlb
je
and
aam
sbb
push
xchg
fisubs
dec
imul
nop
dec
stos
popa
lret
ds
loopne
std
rorb
rorb
sbb
xchg
dec
mov
mov
push
sbb
sub
push
daa
jne
pop
jge
fsubrl
test
xchg
fwait
je
popf
mov
add
hlt
sub
xchg
and
arpl
rcrl
daa
jno
lret
xchg
clc
sbb
cltd
in
imul
xchg
es
push
es
mov
cmp
sbb
jb
add
test
sub
repnz
test
arpl
xorb
nop
lahf
sbbb
mov
loopne
lret
xchg
dec
fcompl
and
xlat
jns
lea
dec
sbbb
and
insl
ss
ljmp
jge
mov
mov
pop
hlt
sbb
dec
mov
lret
repz
mov
pusha
pop
out
push
push
int
stos
inc
xchg
cs
xchg
hlt
jl
mul
adc
daa
loopne
inc
rcrl
adc
push
fwait
mov
jmp
repnz
inc
mov
mov
pop
sbb
arpl
dec
dec
push
sar
inc
lds
mov
je
pop
mov
aam
insl
add
dec
mov
xor
in
or
mov
pusha
and
cmp
pop
ss
outsl
push
cmp
fs
push
rcrl
push
pop
or
push
mov
pop
repnz
fs
js
mov
add
sti
insb
jne
jmp
fsts
push
jg
mov
mov
and
sbb
je
mov
aaa
scas
pop
lret
cmp
push
mov
nopl
ja
xlat
je
dec
lret
sbb
lods
lret
or
cmpsb
mov
in
sbb
cmpsb
adc
sahf
ret
push
jno
movsb
mov
leave
jmp
jns
stos
rcl
fdivrs
push
mov
mov
outsl
xor
mov
push
loope
xorb
iret
aas
pop
decl
mov
inc
push
jle
fcompl
push
mov
push
mov
mov
sti
xor
sbb
xor
lcall
popf
xchg
dec
imul
cmp
or
mov
push
fs
push
pop
mov
mov
adc
popa
adc
mov
mov
in
fnstsw
jge
sbbb
jns
mov
lret
in
xchg
pop
mov
or
movsb
js
pop
and
scas
sbbl
movsb
jge
xchg
pop
int3
inc
push
lahf
mov
sbb
insl
hlt
dec
pop
aad
out
sbb
adc
fnsave
push
repnz
addr16
insb
aad
loope
popa
sbb
mov
sti
cmpsl
mov
and
dec
outsl
movl
ja
jnp
add
and
enter
xchg
xchg
les
push
out
pop
sbb
pop
mov
fldl
sbb
mov
repnz
sub
xchg
or
loope
push
scas
stos
in
mov
push
dec
xchg
cwtl
daa
adc
xor
cmp
and
sbb
dec
xchg
xlat
mov
pop
sub
ret
int
dec
jl
in
aam
sub
sbb
in
mov
int3
scas
sub
dec
adc
fwait
pop
push
out
dec
pop
pop
mov
adc
test
aad
mov
sbb
call
and
adc
ljmp
xor
sbb
or
ret
addb
dec
popa
xchg
mov
and
mov
add
mov
into
inc
filds
mov
sbb
jb
repnz
dec
cmpsl
js
xor
mov
xor
mov
sbb
out
rdmsr
add
lods
lods
xlat
adc
mov
arpl
mov
loopne
mov
jb
mov
ljmp
jbe
outsl
sahf
fnstenv
icebp
cmp
add
test
sbb
xor
dec
mov
test
xchg
pop
imul
sbb
pop
call
cli
dec
or
push
cmp
sub
fisttpl
fadds
xor
stos
arpl
sbb
mov
dec
mov
and
repz
inc
out
mov
popa
sbb
jo
cld
adcl
rcrl
mov
mov
mov
mov
adc
std
jb
stos
mov
dec
push
xor
repnz
mov
aam
movsb
aas
fucom
aaa
clc
or
stos
mov
jp
add
scas
scas
popl
mov
loope
ficompl
dec
push
lret
mov
scas
dec
fldl
lret
imul
xchg
jg
sahf
shll
daa
lock
pop
lret
sarb
popa
mov
add
xchg
insl
ja
sub
fisubrl
pop
ja
jmp
scas
xchg
hlt
nop
inc
stos
mov
mov
mov
fsubrs
data16
outsl
sub
mov
das
mov
mov
mov
shl
imul
inc
call
pop
pop
and
or
add
lcall
sub
call
test
jb
add
cmpsb
bound
shlb
pop
pop
insl
es
repnz
movntps
incl
cli
mov
sub
addr16
popa
push
sbb
push
inc
lods
repz
xor
imul
out
int
xchg
sarl
lcall
pusha
xchg
in
xorb
fisttpl
jl
scas
out
or
test
push
mov
mov
add
jo
loope
addr16
cltd
pop
fidivl
pusha
lret
jno
push
dec
repnz
movsb
xchg
cmpsb
shrb
or
testb
ljmp
mov
ljmp
call
mov
pop
lret
ret
and
mov
push
ja
dec
bound
mov
push
sbb
lcall
dec
fidivl
sahf
jmp
shrl
or
xchg
je
mov
inc
dec
int3
fcoml
fdivl
int3
jb
fnstenv
nop
mov
fcomps
dec
mov
mov
call
push
inc
mov
xor
faddl
cmpsb
movsl
add
jp
dec
leave
out
xchg
out
sbb
aam
sbb
mov
stos
loope
imul
mov
push
addr16
push
and
sti
jo
loopne
push
adcb
xlat
dec
xchg
push
mov
notb
dec
rcll
out
push
loopne
fsubs
sub
mov
enter
cmpsl
dec
pop
stos
hlt
adcl
add
dec
movb
fwait
cmp
jne
ret
fmull
dec
jp
xchg
jecxz
xchg
addb
push
aas
mov
and
sub
mov
mov
jbe
mov
lds
ret
lods
adc
nop
fs
ljmp
ret
sbb
mov
push
ficoml
jb
leave
xchg
jmp
sbb
push
popa
xchg
mov
inc
cmp
jmp
rcrl
pop
push
sbb
adcb
sbb
ret
rorl
xorl
aaa
stos
xchg
scas
xor
jbe
sbb
daa
iret
pop
lea
insl
mov
dec
pop
and
cmp
mov
iret
sbb
icebp
insb
test
movsb
xor
fwait
xchg
fwait
sbb
jb
xchg
jge
cmp
mov
ret
jo
or
dec
movsl
call
repnz
mov
icebp
cmpsl
out
lcall
loop
sbb
xchg
std
call
push
fdivl
sbb
sub
fistpl
push
xchg
xchg
jno
leave
std
cmp
xchg
xchg
pop
push
dec
mov
ret
loope
lea
sbb
mov
test
lret
cmc
cmp
pusha
test
les
popa
and
xor
pop
inc
psrld
sub
pop
cwtl
outsl
dec
fiadds
mov
push
add
and
addr16
lods
loope
loopne
jmp
mov
sbb
push
sbb
jg
imul
mov
dec
fistps
add
int
insb
call
xchg
add
insb
jmp
or
fisubrs
sub
mov
jmp
pop
pop
dec
push
lret
dec
faddp
rcrl
adc
xor
xchg
mov
imul
hlt
addr16
inc
ret
addr16
outsb
dec
inc
adc
add
dec
xchg
daa
ja
lods
inc
fcomi
adc
sbb
stos
inc
fcoml
pop
fisttpl
js
imul
scas
mov
loop
test
inc
sbb
pop
mov
sti
push
mov
scas
ret
pop
notl
lods
cmpsl
int3
mov
mov
and
notb
xor
add
mov
inc
pop
test
mov
pushf
jne
push
out
jne
cwtl
addr16
sbb
outsl
hlt
fistpll
test
push
fldt
repnz
data16
xchg
push
gs
xchg
xor
addr16
or
inc
push
flds
inc
jmp
cmp
push
sbb
lret
sbb
pop
out
sbb
push
mov
or
mov
stos
inc
mov
pusha
loopne
and
stos
add
mov
fdivrs
add
mov
add
inc
jmp
jbe
in
in
fucom
cwtl
out
jb
insb
push
mov
mov
out
jns
fistpll
in
mov
mov
lea
sub
jge
jle
push
addr16
bound
sbb
or
mov
jo
jmp
inc
adc
iret
pop
jbe
jmp
popa
push
loop
lock
ljmp
shr
mov
xor
add
push
fs
rol
mov
arpl
fwait
sbb
fcomp
add
cmpsl
mov
jmp
les
arpl
test
sub
imull
jp
cwtl
dec
sbb
push
push
aas
scas
and
adc
arpl
mov
inc
out
scas
mov
cmp
daa
sbb
sub
rolb
xor
add
cld
leave
fadd
std
sbb
cmc
cs
push
jecxz
icebp
shr
dec
sbb
outsl
and
and
sbb
xchg
xor
rorl
aad
xor
lret
ljmp
stos
mov
fcmovnu
add
sbb
cmp
cmp
rolb
push
loopne
jecxz
das
ret
fwait
test
or
inc
faddl
mov
fcompl
lahf
xchg
jnp
mov
xor
mov
cmp
testl
push
and
lods
mov
out
test
loopne
std
lret
int3
cmpsl
pop
inc
sub
lahf
inc
mov
pop
mov
push
lret
sbb
popa
cli
lcall
rep
orl
push
add
fldpi
test
jle
rol
xchg
sahf
aas
ljmp
fwait
sbb
cmp
pop
ds
and
ret
mov
sahf
aas
mov
mov
ss
js
repz
out
dec
cmp
inc
cmp
sub
div
sbb
cs
subb
fmull
inc
ret
sbb
inc
xchg
sbb
out
insb
mov
in
or
push
imull
sbb
test
mov
ret
push
out
pusha
mov
push
mov
mov
roll
imul
ds
sbb
sbb
and
push
lret
sbb
and
add
addl
sar
pusha
sti
les
lcall
outsl
fbld
pop
xchg
cmpsl
pop
imul
pusha
mov
inc
jg
jecxz
movsb
in
push
ja
stos
xchg
in
scas
out
shr
and
loope
add
mov
mov
or
jno
dec
int3
jle
fs
push
hlt
inc
xchg
pushf
inc
rcrl
in
or
push
jge
xchg
cmp
addl
sbb
xor
sbb
jmp
out
add
fstps
mov
and
scas
and
and
or
xor
repz
sbb
sub
ja
push
push
rorb
mov
and
add
mov
mov
fcoms
lock
jl
mov
cmp
icebp
add
cmc
cmp
ficoms
and
xchg
jnp
xor
fsubs
and
xchg
fs
push
and
jecxz
jno
push
jmp
mov
out
jno
sbb
inc
or
add
fimull
pop
je
cmp
mov
inc
jle
das
sti
testb
ds
in
mov
stos
and
loop
leave
adc
sub
stc
xchg
aas
lcall
sbbl
xor
xchg
mov
inc
and
lret
push
push
or
push
les
jp
rclb
adc
ljmp
cmc
or
out
das
jo
mov
mov
dec
test
je
pop
popa
cmp
sbb
cmp
mov
mov
push
test
loop
adc
jl
ror
pop
jae
and
push
std
mov
stc
pop
mov
or
dec
repz
push
fs
in
or
inc
add
inc
scas
movsl
jae
loop
sbb
ror
sbb
adc
jg
outsl
push
fldcw
dec
dec
xchg
filds
push
adcb
sbb
gs
pushf
mov
ljmp
out
jne
push
mov
rorb
sbb
push
in
rcrl
cs
rorl
fnstsw
mov
mov
mov
jne
cmpsl
push
sub
popa
arpl
outsl
out
cltd
std
sbb
fsubr
std
ss
sbb
in
sbb
daa
shlb
mov
adcl
in
inc
mov
ficoms
dec
nop
push
sahf
data16
dec
repz
sbb
mov
push
mov
enter
pop
pop
pushf
aaa
in
shrl
je
fwait
adc
pushf
xor
in
enter
and
fsub
popl
mov
xchg
addr16
ret
adc
imul
ja
sub
dec
add
mov
xchg
pop
data16
ficompl
cmp
dec
cltd
push
addr16
pusha
adc
mov
mov
das
aaa
in
sbb
push
ret
add
dec
pop
scas
push
cld
mov
ja
outsl
mov
stos
mov
lock
xchg
aaa
imul
lods
xlat
push
or
repz
outsl
mov
or
stos
mov
sbb
mov
sti
jecxz
lock
mov
out
jo
iret
lea
mov
adc
sti
fsubrp
jne
ss
sbb
mov
xor
mov
add
scas
and
push
repnz
sbb
push
sarl
lock
sbb
push
rcl
test
and
xchg
pop
xor
or
inc
cltd
sbb
mov
pop
xchg
mov
in
sbb
and
mov
mov
imul
push
pop
cmpsl
mov
test
mov
mov
stos
cmc
sbbl
pop
arpl
bound
mov
insb
fisttpl
mov
mov
test
adc
shlb
in
and
sarl
add
das
mov
lcall
cmpsb
subb
or
or
ljmp
pop
movsb
fwait
insb
xchg
loope
mov
mov
sbb
ret
mov
mov
push
inc
out
stos
lods
into
pop
pop
aam
fnstcw
call
hlt
fcomps
subl
dec
mov
jmp
mov
popf
mov
sbb
int
out
fsub
mov
enter
movsl
daa
xchg
cltd
mov
add
bound
xchg
xor
adc
add
mov
mov
popl
xor
and
mov
pop
andl
dec
xchg
aas
or
inc
mov
and
cmpsl
in
and
decb
sbb
lcall
pop
ss
leave
mov
pop
lcall
daa
add
test
cwtl
test
aam
push
addr16
mov
js
nop
push
jecxz
sbb
mov
adc
cmp
mov
sbb
mov
rcll
jecxz
or
mov
scas
repnz
add
arpl
addr16
dec
sbb
cmp
cmp
js
loope
mov
rcll
fmuls
xchg
dec
xchg
and
hlt
xchg
xchg
jae
dec
sbb
add
jp
imul
xchg
pop
std
bound
fistps
lahf
ret
cmpsb
sub
test
jb
jle
jo
sbb
out
repnz
in
sti
mov
movsb
mov
cltd
xchg
mov
lock
cmpsl
push
jle
cld
inc
cmp
adc
push
ljmp
pop
enter
push
xchg
loope
xchg
jecxz
dec
test
insl
out
sbb
jecxz
jp
jnp
stos
and
ret
outsb
bound
adc
sbb
gs
inc
and
jno
cmpsb
icebp
dec
dec
nop
pop
or
push
pop
pop
int
scas
jp
jecxz
shl
popa
pop
or
loop
jo
adc
insb
subb
dec
inc
out
rcrb
lock
xor
mov
hlt
xchg
xor
add
in
movsb
out
mov
fidivl
jo
dec
mov
fimull
sbb
mov
push
sub
jo
cmp
sahf
cmp
scas
sub
cmp
mov
outsl
mov
xor
xor
negl
xcrypt-cbc
cmpsl
adc
push
adc
push
int
lret
fidivl
js
imul
adc
icebp
loopne
xchg
jnp
call
loopne
lret
jmp
daa
jne
pop
fwait
loopne
ret
pop
rorb
cld
leave
lds
sbb
or
jns
and
mov
sbb
loopne
cmp
xor
dec
dec
mov
cmp
ja
mov
fsubrl
jo
out
xor
dec
les
lret
dec
sub
xchg
push
mov
call
xchg
push
xor
jmp
lcall
xor
int3
lods
mov
and
popf
xor
mov
mov
les
nop
lret
sbb
xorb
sbb
cmp
data16
mulb
in
jmp
sub
cmp
mov
dec
fcomps
cmc
xchg
mov
arpl
xchg
lds
hlt
jge
lds
nop
dec
xchg
into
insl
insl
jp
mov
sbb
push
mov
push
mov
hlt
insb
mov
popa
js
mov
xor
jp
pop
out
ljmp
cs
fwait
imul
daa
cmpsl
jmp
add
lods
sbb
inc
sbb
push
insb
ljmp
or
ljmp
testl
xchg
das
ds
ljmp
mov
ja
stc
pop
cli
sbb
addb
insl
cmc
cld
push
bound
mov
xchg
lret
out
dec
int3
or
mov
out
out
inc
push
sbb
or
adc
mov
xor
ss
lea
hlt
loop
mov
add
mov
push
and
xchg
loope
sbb
jle
aaa
xlat
pop
fdivs
fdivr
jns
adc
sub
outsb
cmp
addr16
pop
popa
jmp
mov
enter
das
xor
ds
jge
lret
xchg
enter
pop
and
stos
orb
mov
mov
scas
scas
mov
mov
fstps
jecxz
cli
imulb
imull
push
ljmp
dec
sbb
fucomp
insl
mov
aaa
jg
in
adc
mov
jbe
jmp
movl
sbb
lods
clc
and
arpl
mov
xor
push
pop
jmp
int
pop
mov
dec
add
cld
push
repz
xchg
mov
mov
dec
hlt
xor
out
pop
mov
andb
xorb
mov
lock
mov
enter
dec
xchg
push
sarb
pop
dec
aam
fnstcw
xchg
xlat
in
js
inc
fimull
xchg
sbb
imul
push
div
imul
mov
cs
cmp
test
outsl
out
dec
adc
dec
and
xor
or
leave
out
jae
and
rcl
leave
inc
mov
dec
imul
popa
jnp
xorb
shll
fs
pop
js
out
xor
jg
imul
jp
out
dec
pop
outsb
inc
outsl
jecxz
mov
push
test
dec
bound
mov
push
in
pop
sbb
xchg
bound
in
dec
test
out
stos
mov
lods
sub
in
sub
js
sbb
mov
pop
andl
push
jne,pn
outsl
ljmp
cmp
out
jnp
addr16
mov
push
jle
sbb
inc
and
push
lahf
pop
mov
mov
jae
mov
inc
jne
je
and
inc
shlb
sbb
daa
dec
pop
jle
xor
sbb
pop
fdivrs
push
nop
scas
push
or
push
pop
lahf
dec
cld
cmp
movsb
jg
dec
xchg
shll
fidivrl
popa
push
inc
ljmp
stos
mov
shrb
nop
push
sub
mov
fwait
mov
push
ljmp
mov
ret
inc
dec
out
data16
mov
hlt
pusha
sti
cmpsl
dec
sbb
pushf
test
sbb
dec
jnp
ror
repnz
hlt
sbb
jo
add
pop
int3
sbb
sahf
stos
push
ss
mov
imul
outsb
dec
sbb
je
addl
das
fs
cmp
icebp
arpl
imul
and
add
mov
sahf
sub
mov
imul
push
push
outsl
fdivr
push
pop
sbb
aaa
dec
pop
mov
out
jb
loope
int3
lahf
cmp
sub
xchg
lea
hlt
dec
add
movsb
inc
sub
fisttpl
dec
fistpll
das
or
test
f2xm1
icebp
push
inc
lret
int
es
mov
js
dec
push
cmp
lret
xchg
stos
outsb
insb
ja
xchg
movsb
sub
int
rcr
test
mov
pop
sub
movsb
vpminsw
int
mov
shll
fnstenv
push
add
inc
dec
mov
imul
repnz
addr16
push
jg
int3
xor
or
scas
jp
lret
aam
loop
jge
fnstcw
pop
cli
mov
mov
xchg
pop
jecxz
aam
clc
xor
mov
jl
mov
push
daa
jmp
and
sbb
jg
shlb
xor
xor
fbstp
leave
sbb
cmpsb
add
lret
and
in
and
lds
pop
lret
movsb
and
mov
and
jns
jnp
mov
lret
xchg
jg
push
pop
hlt
mov
mov
dec
int3
xor
cmp
mov
cmp
lret
das
test
lds
mov
inc
in
aam
in
shll
pop
push
mov
sarl
mov
xor
ljmp
or
andb
cli
repz
adc
rorb
lret
inc
js
dec
and
xchg
ja
aad
jg
sti
outsl
mov
lret
cmpb
lahf
mov
xlat
add
pop
push
shrb
shrb
popf
jl
xchg
enter
lret
lret
cwtl
scas
in
clc
push
repz
aaa
orb
mov
pop
scas
lret
aas
adc
xchg
mov
add
cltd
daa
pop
shll
jecxz
mov
xchg
not
int
clc
out
or
call
and
sbb
nop
add
jne
test
xchg
or
dec
std
leave
loopne
and
mov
stos
sub
lahf
push
jecxz
xlat
and
in
cmpsb
inc
mov
mov
test
repz
cmpsl
xchg
jne
and
icebp
mov
repnz
cmp
lret
add
lret
int
mov
cs
mov
lret
testl
stos
mov
and
pushf
lret
inc
hlt
or
int
cmp
inc
cmpl
test
dec
lret
jae
idivb
mov
fldenv
and
lret
rorl
inc
jg
loop
enter
xchg
pop
shrl
sub
jp
je
lret
outsb
xchg
pop
jno
xor
negl
and
jp
sub
iret
nop
gs
or
daa
stc
xor
mov
mov
mov
pop
es
fstl
test
imul
sbb
loope
mov
movsb
nop
popf
dec
insb
adcb
sub
add
mov
cmp
jno
fcompl
adc
mov
lret
outsl
shlb
shll
mov
lret
loopne
pop
and
adc
sti
xchg
icebp
xchg
lret
jnp
ljmp
jne
fdivrs
mov
lods
out
xor
sub
cmp
bound
in
lret
xchg
mov
xchg
mov
sarb
jge
and
lret
ficoms
bound
js,pn
jns
or
daa
push
shll
test
in
aam
addb
bts
mov
int
shrl
inc
dec
jbe
sbb
mov
repz
aad
cltd
inc
movsl
lods
lret
dec
xor
loope
int
inc
dec
push
xchg
fldcw
sub
lods
lret
lock
pop
pop
out
adc
pop
cmp
lret
in
lea
test
stos
lret
in
jle
dec
fidivrs
movsl
and
daa
sbb
push
lret
inc
in
mov
jb
jmp
adc
adc
pop
inc
test
pop
pop
push
lret
in
sub
lret
cs
stos
xchg
pop
lahf
lret
lcall
into
lret
std
mov
dec
and
fnsave
out
jo
fcmovbe
fs
nop
aas
xchg
das
dec
movsb
lret
loope
jle
jo
sub
cmc
fcmovnu
push
dec
imul
movsb
add
std
dec
mov
mov
pop
dec
popf
push
faddp
and
mov
xor
stos
and
xor
lret
stc
out
int
xor
xor
movsb
inc
test
repnz
xchg
sub
lret
sbb
movsl
cli
sar
bound
mov
insb
mov
cmpb
scas
fldcw
push
cmpsb
lds
pop
nop
jle
pop
outsl
add
lret
fmuls
and
add
lret
push
out
jecxz
mov
mov
test
jae
sbb
repz
pusha
push
lret
or
push
push
push
mov
stos
lret
int
out
sub
push
push
lret
cmp
mov
dec
dec
xor
sub
cmp
sahf
dec
sbb
lret
cmpb
ror
sbb
in
cli
cmp
dec
incl
gs
push
push
ret
into
adc
aad
sbb
neg
pushf
xor
pop
pop
repz
std
cmp
adc
scas
imul
mov
icebp
mov
das
push
jnp
mov
testb
or
xor
jg
fcmovbe
sbbb
xchg
insb
jnp
lret
sub
dec
out
in
test
int
jbe
icebp
xchg
lret
cmpl
dec
or
push
dec
lret
imul
addr16
dec
adc
int
in
test
outsb
dec
fcmovne
xor
cmp
dec
sub
cli
shlb
add
adc
add
ljmp
iret
lods
mov
jno
je
stos
xchg
dec
repz
mov
lret
push
mov
cmpsl
cs
lea
loope
cmp
gs
lret
out
negb
mov
shrl
jb
xchg
push
push
pop
lret
jno
in
cmpsl
mov
xlat
leave
mov
clc
sub
je
push
cmpsb
out
int
xor
popa
jb
inc
lret
lcall
ja
sub
in
out
pop
push
dec
int
cmp
into
sbb
rcll
lahf
repnz
pop
add
mov
out
mov
fwait
cwtl
sbb
mov
gs
lret
xor
shr
jnp
shrl
jns
flds
jbe
fmuls
lcall
shrl
loop
dec
mov
repz
xchg
push
pop
iret
xor
mov
cld
lock
cs
int
repz
dec
pop
popf
lods
lret
sarb
push
cmp
inc
pop
lret
xchg
xchg
add
int
cs
push
lret
cmp
in
fs
or
jl
sub
xchg
shrb
popf
lret
fisttpl
inc
dec
clc
and
add
fisttpll
cmpsb
repnz
sub
xchg
or
das
cmpsb
lods
leave
into
icebp
push
hlt
stos
sbbl
mov
loop
or
lock
es
lret
pusha
loope
loop
lret
sub
dec
sbb
lret
cmp
inc
movsl
ud2
mov
sub
fucomip
cld
lret
test
inc
jns
mov
call
movsb
scas
adc
mov
sbb
into
lret
ret
ficoml
sbb
les
int
fsts
jo
in
push
mov
inc
das
loope
lret
or
sub
xlat
mov
xchg
sti
ds
dec
sub
notb
sbb
pop
adc
lcall
adc
adc
ljmp
pop
andb
gs
jne
inc
orl
mov
lret
ljmp
mov
jmp
mov
mov
mov
imul
adc
dec
or
inc
lret
ds
jle
inc
add
push
icebp
enter
or
jne
lret
inc
cmp
icebp
rcl
loope
pop
or
cmp
loopne
pop
int
cmp
ret
mov
push
mov
gs
rcll
fcoml
daa
out
sbbb
push
fdivr
aam
jno
or
and
bound
addr16
in
or
fsubrl
dec
mov
pop
jno
in
add
popa
adc
mov
dec
xchg
mov
out
ss
jge
jne
addr16
std
pop
loopne
pop
fnsave
test
arpl
rcrb
dec
mov
xchg
aaa
mov
jne
xchg
mov
out
ret
in
cmp
add
inc
xlat
popa
mov
sbb
ret
mov
sarl
stos
lods
sbb
xchg
push
add
sub
jmp
sbb
push
and
scas
iret
xor
in
lods
sbb
jle
lods
sti
int3
jmp
adc
dec
scas
cmpsl
mov
je
cmp
gs
jo
std
fisubl
loopne
out
cmp
fisubs
jae
push
pop
cmp
ljmp
sbb
adc
aaa
or
add
fsub
cmc
or
fists
mov
enter
loop
sbb
cltd
xchg
mov
mov
inc
lret
jp
fucomi
sbb
scas
icebp
lret
test
int3
dec
sbb
test
bound
rcrl
das
data16
popa
fisubrs
stos
sbb
outsl
stos
dec
sbb
vrsqrtss
adc
sbb
dec
cli
fildl
jno
sub
fdivl
mov
gs
push
lret
xlat
jae
push
sbb
rolb
and
pop
daa
push
outsl
xchg
mov
add
inc
sbb
cmp
xor
sbb
lock
orb
sbb
shll
adc
mov
insl
jecxz
mov
xchg
stos
dec
xor
or
push
add
adc
fisubs
lds
imul
out
dec
loopne
adc
or
xchg
bound
dec
aad
or
sbb
mov
inc
xor
bndstx
push
orb
enter
push
dec
int
or
jnp
aas
jno
mov
filds
push
stos
pop
cmp
ljmp
add
loopne
or
jb
bound
pop
in
and
dec
stos
jnp
rcr
sbb
outsl
ret
rcr
stos
rclb
add
mulb
dec
cmp
bound
nop
xlat
stc
add
dec
sti
sub
sbb
imull
and
sbb
lods
pop
cltd
pop
sub
jno
push
pop
repnz
ljmp
mov
ljmp
or
and
je
and
xor
les
std
cmp
out
mov
and
jp
int
mov
mov
xor
sub
dec
adc
dec
ljmp
mov
push
fdivl
call
lea
jbe
out
jmp
fcomp
dec
cli
fnstenv
aas
mov
xchg
fstpl
push
movsb
xor
add
xchg
xchg
test
sbb
sti
scas
lds
sbb
mov
aas
mov
mov
repz
push
cmpsb
mov
dec
insl
xorb
fidivrs
pop
popa
data16
mov
cmp
or
xchg
rcrl
cwtl
sbb
mov
iret
fdiv
push
xchg
outsb
add
cmc
std
xchg
das
or
mov
fisubl
inc
adc
sbb
xor
jns
fadd
cmpsl
rcrl
mov
or
mov
dec
in
loopne
cmp
out
dec
lret
pop
jmp
mov
inc
mov
adc
mov
mov
insb
push
popl
dec
xchg
jae
das
dec
hlt
jne
cs
lea
pusha
repnz
cli
sbb
daa
popa
add
ljmp
add
jl
ror
out
cs
sbb
xor
and
jnp
ret
mov
jne
scas
repz
pop
fwait
repnz
jb
shr
or
push
dec
cmp
pop
sbb
inc
adc
xchg
lahf
add
fstl
jo
jns
jo
jmp
repz
or
xor
mov
sub
outsb
out
jne
inc
cmp
xor
pop
jnp
in
rcr
cmp
daa
sub
add
ja
addl
adc
or
dec
call
mov
iret
mov
jbe
subb
testl
mov
enter
inc
dec
jmp
loope
or
hlt
jb
mov
xchg
push
xlat
or
xchg
fisttpll
and
roll
loop
jecxz
sar
pushf
stos
lods
push
or
rolb
pop
inc
rep
xchg
mov
sbb
or
xchg
mov
inc
jl
sbb
loope
xchg
inc
mov
movsl
jae
jmp
and
pop
cwtl
jb
stos
hlt
add
lret
das
cmc
jo
je
scas
filds
pop
sbb
push
mov
lods
sahf
jmp
int
jge
push
call
add
pop
cmpsl
test
fisubl
dec
in
stos
xor
mov
ljmp
jb
xor
cmp
xchg
inc
dec
in
mov
dec
bound
sar
dec
je
adc
mov
or
adc
repnz
sub
sbb
ss
arpl
mov
stos
std
xchg
and
mov
cmpsl
sahf
fwait
imul
into
pop
sbb
into
negl
push
sti
mov
jmp
pop
repnz
mov
in
out
dec
mov
rclb
adcl
jle
dec
lret
bound
pop
adc
ljmp
xlat
cld
dec
jp
and
leave
add
jbe
ds
lret
ljmp
add
lret
inc
jae
push
mov
test
lret
aaa
add
pusha
mov
cmc
int3
lret
call
and
xor
cmpsb
bound
sub
out
and
lret
leave
or
push
pop
add
leave
ss
lcall
in
iret
push
hlt
ror
dec
jge
add
clc
mov
and
xor
and
sahf
fcoml
ss
xor
jno
inc
flds
mov
sti
ret
cltd
sbb
push
push
pop
outsl
into
mov
mov
push
inc
sbb
fstpl
andl
cmpsb
movsb
es
lea
es
xchg
sbb
aaa
imul
xor
test
leave
inc
bound
lcall
pop
popa
scas
xchg
fiaddl
jmp
aam
mov
xor
xchg
pop
jo
addr16
repnz
aad
fidivrs
mov
adc
pop
insb
fstp
sbb
scas
popf
jle
stc
jns
pop
sbb
lds
out
leave
xor
fistl
and
mov
pop
stc
sbb
ds
ja
das
stos
xchg
outsb
and
lret
lcall
imul
sub
cwtl
pop
sbb
scas
fcoms
insl
and
xor
mov
push
fcomi
rcrb
daa
int3
xchg
les
js
orb
cmp
call
pop
inc
fdivrs
pop
rcrl
rol
aas
ficoms
fwait
insl
js
sbb
or
test
fstps
ret
lea
push
mov
xchg
inc
ss
gs
sti
sbb
xchg
fistps
icebp
push
pop
adc
jne
jge
pop
cmc
mov
hlt
sbb
fnstsw
subl
aas
push
out
and
notb
ss
jmp
sbb
imul
inc
pop
lret
mov
mov
jno
lock
fildll
add
xchg
push
arpl
data16
cwtl
fnsave
ljmp
xor
in
aad
xchg
lock
movsb
pop
xor
push
jnp
lock
xchg
fcoms
lret
push
mov
adc
popf
loop
sbb
shll
fnstenv
lods
cmc
jmp
mov
shll
hlt
jne
lcall
jnp
mov
add
rclb
adc
lret
sbb
jne
repnz
scas
imul
les
and
data16
roll
cmp
bound
inc
movsb
push
gs
ret
xor
imul
loopne
nopl
mov
pop
sub
cli
sub
cmp
lods
ja
clc
sbb
add
sarb
cmp
mov
loope
pop
sbb
mov
popf
cmp
addb
sub
inc
add
loop
sub
in
lret
movsb
addr16
push
mov
inc
cmp
roll
mov
movsl
cmp
iret
adcb
cmpl
pop
je
hlt
ffree
sbb
jo
and
sub
cs
dec
imul
inc
aaa
pop
push
or
pop
pop
adc
js
shr
fisttpll
xchg
cmp
pop
xchg
jo
loope
pusha
dec
sub
mov
mov
fidivrs
push
mul
or
pop
sbb
or
hlt
and
lret
ja
fisttps
push
inc
out
or
inc
rorb
mov
ffree
pop
or
jmp
fcmovnb
rolb
imul
arpl
scas
dec
aam
mov
adc
inc
fs
dec
clc
aaa
and
sbb
adc
xchg
pop
lret
jecxz
dec
out
sbb
loop
rol
arpl
test
pop
js
xchg
pop
cmp
loop
sbb
dec
js
sbb
cli
mov
cli
and
dec
adc
push
test
out
inc
decl
push
fsub
out
and
fdivs
insb
cwtl
mov
cli
mov
mov
cmc
sbb
mov
pop
xchg
sbb
push
inc
mov
daa
dec
inc
or
mov
inc
decl
movl
stc
lds
cmp
xchg
push
rcl
mov
ss
in
nop
cmpsl
push
rcll
gs
test
inc
or
scas
fildl
shl
sbb
addb
fcmove
jno
mov
pushf
xor
push
mov
es
mov
push
addr16
add
push
andb
push
fsubrl
dec
loopne
pusha
idivl
stos
sysret
loope
cmp
lock
sub
mov
xchg
aaa
xor
insl
leave
aas
cmp
lret
loop
addr16
mov
mov
xchg
arpl
jl
loope
sub
aas
inc
addr16
push
xor
mov
loope
push
fldcw
aas
cld
rorb
jnp
mov
aam
xor
fdivs
rorl
push
mov
inc
and
lods
mov
fucomi
loopne
pop
shlb
sbb
jb
pop
imul
fistl
pop
sbb
call
jns
insb
rorb
les
mov
ret
sub
xor
sbb
ror
insb
sbb
adc
pop
cmpsb
lahf
pop
sbb
adc
inc
daa
or
inc
dec
pop
dec
jae
xchg
jno
cli
push
sbb
in
mov
mov
jno
idivl
pushf
test
push
or
and
dec
bound
mov
inc
mov
push
xor
inc
addr16
adc
stos
or
out
stos
mov
mov
mov
std
cmpl
sbb
popa
ljmp
popa
sti
arpl
xchg
daa
aam
adc
xchg
push
lret
jmp
xchg
sahf
cmp
adc
test
call
push
fwait
jne
push
sbb
jno
sub
cmp
lods
pop
rcll
sbb
jno
fsubl
sbb
pop
push
out
mov
dec
sub
xchg
ret
fwait
mov
ljmp
adc
xchg
mov
mov
jl
mov
mov
fucompp
sbb
ss
fwait
insl
insl
imul
fcmovu
jbe
ret
add
jb
mov
jns
dec
test
mov
mov
add
test
fdiv
das
dec
dec
fistpl
cmpsb
push
leave
sbb
jl
xchg
int3
pop
push
pop
out
mov
les
gs
fisubl
adc
inc
ret
sub
ds
repnz
pusha
add
jbe
setns
xor
jmp
int
sahf
stos
pop
sbb
xchg
fwait
lret
sbb
push
into
iret
arpl
loop
sti
imul
sbb
gs
icebp
or
lock
jns
mov
insl
jne
or
subl
fstl
mov
pop
push
repnz
sbb
lahf
popa
jge
test
pop
das
xchg
adc
xchg
or
aam
adc
rorl
or
xchg
push
jne
leave
lret
push
and
imul
cltd
mov
fmull
mov
push
adc
subl
pop
jns
xchg
arpl
js
nop
cmp
out
out
or
movsb
into
cmp
loop
or
sub
and
fs
mov
sbb
adc
out
push
mov
jmp
ss
xchg
xor
and
inc
or
pop
jo
inc
pusha
inc
adc
ljmp
sub
push
arpl
fdivrl
stc
mov
mov
ret
into
sbb
cld
lcall
xchg
fs
hlt
jno
or
sub
sbb
dec
addr16
out
lahf
arpl
fs
mov
and
mov
mov
sbb
insl
test
xor
pop
mov
mov
xchg
hlt
fists
mov
scas
adc
adc
sti
out
icebp
rcrb
pop
aad
jecxz
fiadds
out
shrb
and
cmpsb
xor
push
ljmp
aad
js
pusha
jae
dec
dec
sbb
fwait
pop
mov
jno
je
push
mov
stos
xor
dec
in
jecxz
loopne
addr16
ja
sbb
dec
mov
sbb
nop
imul
and
sbb
inc
outsl
dec
int3
xor
daa
xchg
ja,pt
out
fsubr
test
addr16
enter
int
icebp
add
iret
bound
xchg
cld
xor
lahf
aad
fnstenv
and
addl
sbb
ljmp
repz
movsb
xchg
call
xlat
xchg
pop
aas
ja
mov
dec
pop
sti
jb
rol
out
mov
sbb
insl
mov
bnd
les
pusha
jg
pop
xchg
mov
push
adc
nop
sbb
leave
fcoms
pusha
sbb
push
shl
sbb
in
or
mov
mov
daa
push
cmc
call
mov
daa
je
push
mov
push
mov
mov
gs
ret
cmc
cmpb
dec
mov
jno
jmp
dec
inc
insb
dec
mov
push
pop
insl
jno
repnz
or
out
pop
inc
std
ljmp
inc
aaa
xchg
repnz
xchg
movsb
push
pop
jns
add
push
mov
fldpi
sbb
outsl
or
scas
lock
dec
cwtl
mov
rcrl
or
sbb
sub
and
imul
loope
or
pop
add
pop
and
sbb
adc
dec
lcall
mov
sub
jecxz
sbb
xor
outsb
xchg
ljmp
int3
pop
daa
cmp
icebp
mov
pop
pusha
fldl
sbb
stos
xchg
in
push
jne
cmp
or
push
shr
jle
addr16
cmp
xchg
pusha
inc
sub
xor
xlat
sbb
inc
mov
ss
out
movb
hlt
xor
pop
sbb
push
and
xchg
data16
fcmovu
cs
mov
cwtl
lods
clc
mov
add
fistps
lcall
and
cmp
jecxz
xchg
dec
cs
pop
outsl
test
pop
adc
popa
gs
dec
cs
fld
fs
xchg
test
sbb
int
push
pusha
lret
aad
jnp
or
repnz
iret
pop
and
jg
mov
mov
push
xorl
adc
sub
mov
loopne
pop
push
jmp
sub
dec
gs
push
mov
rcl
mov
xor
cltd
test
mov
aaa
ret
out
adc
jnp
and
jecxz
lods
mov
xchg
mov
cli
add
push
lcall
push
or
ljmp
sahf
jmp
int
jge
cmpsl
fnstsw
add
pop
dec
push
push
ret
mov
xorl
mov
push
out
std
imul
sbb
cmp
jae
cld
fisttpll
outsl
daa
out
test
sbb
fdivs
imulb
push
xor
movsb
jmp
xchg
fld
repz
cmp
xor
js
cmp
test
fwait
cwtl
or
aaa
dec
repnz
bound
fxtract
dec
jno
sbb
push
xchg
sbb
push
imul
loop
jmp
js
mov
pop
clc
pop
pmuludq
mov
lret
cwtl
pop
ljmp
andb
push
lds
mov
sarb
ret
sbb
cwtl
push
mov
popf
imul
addl
or
sbb
and
or
mov
es
int3
fldcw
xor
fimull
dec
xchg
xor
sahf
adcl
idivb
mov
inc
fildll
out
lods
mov
and
iret
cltd
mov
insb
xor
xlat
inc
sbb
mov
dec
mov
dec
fisubs
mov
sbb
push
sti
or
sbb
lret
lods
pand
mov
out
lds
mov
test
xor
andb
daa
and
shll
fyl2x
pusha
jmp
or
inc
in
fdivl
enter
lahf
xchg
shr
lock
xor
js
aaa
jmp
adcb
sbb
push
add
out
or
repnz
fs
in
lcall
dec
sub
pop
stc
sbb
mov
test
add
addr16
clc
jo
loope
fisubrs
fisubrl
out
nop
mov
lret
dec
lret
jle
arpl
and
sbb
cwtl
ljmp
mov
mov
sub
push
cmpsb
in
andl
cli
lock
rorl
jecxz
jmp
and
out
and
inc
cwtl
sbb
out
push
jecxz
add
outsl
rorl
stos
mov
orl
and
mov
mov
ljmp
imul
sbb
sbb
xor
frstor
mov
xchg
ret
pusha
sub
sbb
mov
loop
out
xchg
ja
movsb
ret
xor
out
das
je
jbe
push
fwait
jae
rol
xlat
fidivl
sbb
jnp
lcall
fadd
dec
shlb
aad
sbb
and
inc
rclb
push
stos
mov
add
movsl
sbb
push
inc
imul
popf
xchg
sbb
mov
insb
in
insl
mov
cmp
lret
push
lock
mov
mov
xchg
pop
ret
mov
dec
sub
pop
dec
mov
mov
add
imul
enter
xor
stos
arpl
cmpsb
test
sub
mov
or
imul
jne
xchg
shrl
scas
add
out
call
jmp
jmp
rolb
imul
ret
sbb
xor
loopne
stc
imul
mov
lods
aas
pop
cltd
push
sti
xor
clc
inc
dec
dec
fcmove
rcr
cltd
nop
add
and
push
pop
loope
pop
jnp
clc
neg
cmp
sbb
mov
sbb
pop
dec
hlt
ja
mov
cvtpi2ps
xor
push
dec
ljmp
in
test
fadds
push
xchg
sbb
shlb
sub
out
xor
lods
or
inc
test
and
mov
in
fs
mov
sbb
addb
pop
cmc
fmuls
jae
sbb
add
pop
rorl
or
out
mov
sub
mov
jmp
daa
clc
dec
out
out
lea
test
out
mov
pop
pushf
or
and
out
fsubrl
inc
icebp
jecxz
xlat
jecxz
call
es
popa
repnz
push
mov
mov
test
gs
fadds
pop
sbb
jbe
imul
dec
push
sbb
loop
leave
pop
or
cmp
loop
jp
fbstp
cmp
roll
sbb
outsl
arpl
adcb
les
mov
mov
sbb
xor
or
adc
mov
movsb
cmp
aas
outsl
fstp
stc
sarl
pop
cmp
jnp
push
data16
int
sbb
ret
adc
shll
adc
fnstsw
icebp
fs
loope
mov
mov
push
adc
rorb
xor
ljmp
xchg
int3
lea
and
leave
and
mov
icebp
outsb
pop
push
mov
mov
sub
mov
xchg
pusha
add
xchg
sbb
das
pop
imul
fildll
cmp
in
aad
fstpt
sub
jne
lds
inc
mov
xchg
and
fstpl
xchg
mov
mov
cmp
xor
inc
sub
fisttpll
xor
lock
cmp
jmp
sub
fs
dec
sahf
jno
mov
pop
pop
mov
sbb
jl
cltd
popf
in
sbb
adc
cld
mov
xchg
enter
lahf
in
xor
outsb
popa
push
stc
xor
inc
sbb
or
fldlg2
add
pop
or
push
inc
shll
mov
sti
das
leave
loop
cltd
subl
pushf
bswap
push
aam
inc
adc
ret
popa
cmp
pop
xchg
pop
fldl2t
in
xor
stos
lock
sbb
jl
fisttpl
das
xor
sbb
inc
leave
ljmp
jno
mov
jnp
cmpsl
andl
pop
or
push
xchg
jne
leave
popa
leave
outsl
ret
scas
xchg
xchg
imul
or
mov
cli
adc
jmp
mov
movsl
das
xorl
sub
ret
mov
sbb
xchg
sahf
jl
xchg
mov
lock
add
fstpt
outsb
mov
inc
mov
bound
adc
mov
mov
push
pop
ljmp
lret
dec
lea
push
jno
mov
dec
pop
push
cmp
mov
arpl
cli
push
fcmovu
ss
and
or
cs
es
mov
jge
sbb
icebp
dec
and
test
sbb
adc
out
sbb
test
inc
lea
add
mov
mov
jb
push
ljmp
ss
jecxz
mov
fmuls
cmp
or
mov
loopne
lds
lds
fsubl
xchg
sub
mov
xchg
jo
and
clc
sbb
adc
mov
cltd
aam
pavgw
mov
mov
mov
popa
stos
mov
int
adc
cmp
inc
add
std
loopne
sub
iret
inc
loop
inc
sarb
test
inc
adc
push
jmp
push
mov
jno
loope
mov
xchg
cmc
mov
cltd
ljmp
mov
std
fs
scas
sub
negl
mov
push
sti
sub
jo
das
stos
fisubrs
popl
lahf
sbb
push
push
scas
xchg
loop
fmuls
popf
fsubs
jg
jl
xchg
pop
jbe
pop
lea
mov
mov
cmp
push
je
sbb
push
dec
push
lds
adc
data16
pop
rcrl
add
inc
cwtl
ret
out
or
ret
lahf
push
cs
sbb
nop
fstl
or
pop
add
fucomp
out
fbld
test
push
inc
push
les
add
add
lds
test
mov
push
cs
sti
scas
sbb
jnp
lds
sub
mov
cld
mov
outsl
pop
cmp
sbb
aas
pop
mov
fcmovbe
mov
push
xchg
ret
xor
scas
rcrb
notb
pop
jne
sbb
fs
loop
mov
dec
imul
inc
jl
dec
push
jecxz
int3
xchg
stos
jnp
xchg
xchg
mov
or
in
push
fsubrs
cmp
sub
mov
sahf
or
test
fcmovb
test
sbb
pushf
movsl
adc
popf
mov
pop
and
dec
sbb
sbb
add
aaa
dec
popf
test
or
hlt
and
inc
push
xchg
and
xor
pop
nop
rcll
xor
fsub
sbb
push
push
and
adc
push
pushf
xor
dec
jl
test
sub
outsl
into
inc
push
insb
popa
or
and
test
cli
lea
ror
loopne
aam
sub
mov
jo
push
fwait
jbe
fs
arpl
outsl
mov
inc
rol
pusha
lcall
dec
pop
out
jno
movsb
fistpl
in
rorl
imul
roll
mov
cltd
push
mov
mov
popa
pop
repz
aad
lds
and
lahf
int3
imul
popl
insb
lds
out
sti
cwtl
in
pop
fistpl
mov
ss
cltd
mov
cmp
scas
out
popl
daa
fs
sub
int3
loopne
or
mov
xchg
scas
add
xor
dec
fs
sbb
pop
push
sub
lock
jb
popf
jnp
jae
mov
in
iret
mov
and
cmpsl
push
fisubl
int3
mov
out
jb
hlt
push
mov
dec
enter
int
imul
cmp
mov
gs
push
sub
icebp
mov
sbb
xchg
mov
iret
mov
jmp
cmpsl
jns
sbb
or
andl
jmp
sbb
add
popa
xchg
xchg
ja
or
out
vpsrlw
mov
cmpsl
mov
ffreep
push
xchg
cmp
mov
mov
mov
sbb
adc
lods
push
dec
jno
push
jg
lea
icebp
ret
mov
leave
jae
pop
iret
mov
aam
pop
pop
dec
pop
push
xchg
test
rcr
outsb
mov
hlt
sbb
lcall
sbb
push
xchg
fadd
fsubp
sti
bnd
or
pop
push
inc
inc
inc
push
imul
or
fisttpll
jecxz
jns
cmp
inc
rolb
enter
mov
ffreep
scas
dec
cli
lock
mov
sub
xchg
sbb
out
movsb
add
or
sbb
pop
repnz
add
sbb
cld
push
aad
popf
xor
jne
sbb
jb
xchg
aaa
lret
dec
mov
mov
or
test
inc
sbb
push
dec
pop
add
icebp
leave
sbb
test
std
test
leave
inc
dec
fwait
mov
sbb
push
ss
pop
das
lds
pop
add
or
aaa
pop
fimull
mov
lea
inc
int
js
int
jle
cmp
stos
arpl
sbb
mov
hlt
or
xchg
pop
lock
pop
mov
pop
lods
inc
push
gs
fdivp
sbb
jns
push
mov
mov
in
adc
xor
shl
or
xchg
jb
cmpl
divb
sbb
int
push
cmc
insb
scas
leave
mov
outsl
pushf
lock
les
inc
sbb
cmp
stc
mov
int3
loopne
out
mov
lret
pop
pop
rcr
pop
push
jo
lret
xchg
or
cld
out
shl
push
dec
pop
popa
stos
jle
jae
mov
xor
add
jno
addr16
mov
push
ds
jge
lret
cld
int
das
pop
leave
sarl
lock
sub
lret
test
movsb
and
pop
jmp
pop
es
dec
fbstp
fstpl
outsb
lret
push
jno
addr16
dec
push
mov
das
cmp
dec
popf
inc
cmp
jp
lock
movsb
leave
movlps
outsl
ljmp
push
xchg
dec
outsb
scas
push
outsl
sbb
add
mov
imul
cmpb
sti
dec
fcoml
xchg
xor
cmp
xor
sub
sbb
stos
daa
in
mov
scas
call
loopne
xor
sahf
stc
aaa
mov
or
cltd
and
rcrb
inc
int
sbb
dec
sub
sbb
scas
lods
add
in
jp
or
cli
sbb
stos
fstps
cmp
pop
xor
scas
push
and
mov
xchg
dec
cwtl
fsubrs
testb
insb
subb
xor
mov
in
xchg
into
lds
pusha
mov
xor
test
cmpsl
dec
shll
sub
aam
sarl
pop
fdivrs
jns
push
sbb
jne
ljmp
push
lcall
rolb
fldenv
aam
mov
stc
lret
mov
sahf
loope
inc
inc
ret
jecxz
loope
fs
pop
aam
jmp
xchg
xchg
mov
aam
das
lea
push
inc
cwtl
xchg
xchg
or
out
push
je
aam
lcall
stos
lcall
imul
push
dec
jne
push
fsubp
mov
pusha
xor
out
test
mov
aam
pop
or
lds
pop
gs
jno
jge
adc
push
jmp
mov
ret
cwtl
lahf
lea
xor
sahf
jp
test
cmp
imul
addb
fmul
mov
std
xor
data16
aam
xor
sbb
sti
push
iret
adc
sbb
stos
das
push
int
sbb
stos
sbb
cmp
in
push
dec
pop
es
push
inc
iret
movsl
adc
or
addr16
sbb
xlat
setp
fdivl
rcrl
in
adc
mov
jp
push
mov
jmp
inc
stos
frstor
fsubrl
inc
or
sbb
inc
add
lret
out
sbb
enter
add
push
push
lret
cmp
ret
mov
jns
call
bound
cmpsl
and
je
lret
cmp
lret
adc
mov
sub
lcall
mov
es
push
sarb
lret
adc
xor
repnz
or
mov
movb
bound
xchg
dec
add
mov
dec
add
loopw
jp
xchg
push
repnz
pop
int
sub
data16
sar
mov
iret
adc
mov
pop
js
lret
in
pop
loope
popa
jp
rcll
bound
mov
cli
jmp
scas
in
nop
inc
lret
and
ds
inc
push
cmpsb
mov
lret
push
das
xchg
pop
jnp
inc
lret
imul
mov
xchg
mov
es
xorb
adc
mov
add
mov
adc
push
mov
aam
mov
lret
jo
pop
push
jno
cltd
mov
imul
lret
or
xor
pcmpeqd
and
fs
jns
movsl
fnstcw
test
push
fistl
mov
lret
jmp
adc
xor
sub
xor
cld
setl
push
roll
je
fisttpl
lret
cmp
aas
sbb
int
sub
bound
adc
sbb
inc
imul
rcl
pop
xchg
mov
fsubr
jnp
movsb
lret
rcrl
shl
lret
stos
dec
mov
addr16
push
lret
cmpsl
pop
dec
imul
adc
add
in
das
loop
pop
xor
sub
mov
iret
cmp
insl
das
sub
push
push
lret
ret
push
es
and
nop
cld
push
cs
inc
or
insb
or
call
xchg
mov
xor
sahf
lret
push
aaa
mov
into
jge
repnz
sub
lcall
xchg
jmp
add
hlt
rorl
jp
dec
lret
incb
rclb
out
push
cmpsl
mov
add
xor
in
cmp
lret
clc
mov
mov
pop
jne
icebp
stc
and
cs
pop
pop
in
mov
fsubrp
xchg
movsl
lock
jge
int
stos
arpl
xchg
mov
xor
push
mov
jg
lret
in
dec
jae
cmp
inc
cwtl
xorb
xlat
adc
sub
lret
jns
jmp
fcomps
ljmp
jle
dec
xchg
mov
xchg
popf
repnz
outsb
in
dec
pop
dec
mov
lret
xchg
mov
push
dec
int3
je
lret
insl
xor
jmp
rcl
popf
test
dec
and
mov
std
repz
leave
int
ret
pop
add
fstpl
push
aam
pushf
fisttps
aad
lret
jmp
into
stos
mov
sub
mov
and
pushf
sbb
dec
hlt
lret
adc
ss
shll
xchg
mov
push
fs
in
mov
add
mov
jecxz
stos
dec
lret
repnz
fldl
or
push
cmpsb
adc
sub
xchg
pop
int
lahf
fnstcw
jo
mov
sub
lods
add
rclb
lret
and
gs
xchg
adc
sahf
lret
hlt
push
jp,pt
pop
or
repnz
imul
inc
jo
aad
addb
in
lea
mov
rcrb
push
pop
dec
mov
je
in
pusha
rorl
std
fs
insl
sub
pop
int
and
xchg
xchg
and
pop
lret
adc
and
xchg
sub
and
leave
pushf
call
cmp
movsb
lret
mov
sbb
flds
sbb
add
cmc
jo
mov
lret
sub
jecxz
test
ds
mov
pop
pop
mov
pushaw
and
aaa
pop
ss
dec
sbb
imul
lds
fwait
and
enter
jecxz
inc
lret
and
mov
lret
lock
out
int3
dec
add
mov
cmp
lahf
sub
or
lret
push
pop
sbb
sub
cmp
jle
aad
mov
fidivrl
dec
xor
xor
sub
pop
mov
stos
cwtl
jecxz
push
lret
adc
lods
mov
ss
or
mov
lret
pop
inc
in
xchg
out
ret
sbb
adc
mov
dec
lret
cmp
xor
clc
lods
int3
jae
add
cmc
cld
dec
in
test
sbb
xor
jno
popf
mov
js
imul
gs
hlt
popa
xor
loop
sub
pop
push
push
cmpsl
bnd
lret
les
push
adcb
lret
test
das
nop
lret
lock
ss
pop
not
cmp
nop
out
inc
icebp
xchg
cmp
xor
inc
mov
xchg
adc
fwait
pop
repnz
pop
test
dec
mov
inc
dec
or
sbb
iretw
push
cltd
mov
in
iret
mov
movswl
add
loopne
out
dec
stc
sbbb
pop
fdivs
xchg
adc
mov
hlt
dec
int3
cli
xor
fstl
pop
or
lret
call
jb
sti
shll
cmc
loopne
cld
pop
ret
or
inc
dec
pop
mov
int
shll
out
movsl
push
push
lret
shlb
int
inc
cmp
cmpl
mov
es
popa
sub
jmp
mov
dec
lret
movsb
adc
in
lret
sbb
aad
ror
jbe
cmpsl
mov
pop
nop
or
je
sbb
mov
inc
xchg
int
jmp
aad
inc
mov
add
cbtw
pop
sub
enter
in
arpl
or
icebp
or
leave
mov
loopne
clc
mov
xlat
jmp
in
mov
test
aad
pushl
inc
lret
sbb
sbb
xchg
add
jp
lret
dec
lods
xchg
adc
or
and
shr
mov
loopne
pushf
je
leave
insl
data16
xchg
push
or
jp
sbb
in
jge
jp
jb
mov
mov
iret
jae
jne
or
popa
out
popa
lret
mov
rorb
es
lret
sahf
sbb
es
inc
sub
inc
jbe
inc
imul
cwtl
mov
xchg
lret
mov
dec
mov
lret
mull
bound
sbb
and
lret
lock
cmp
mov
lret
pop
fdivrl
sub
sti
xor
jo
pop
pop
cmp
push
test
sbb
ljmp
idivl
lret
xchg
sub
lcall
fsubs
and
clc
dec
add
lds
in
fsubrs
adc
icebp
push
dec
jl
sbb
icebp
xchg
mov
dec
mov
xchg
lods
rcll
sbb
loop
sbb
add
xor
popa
test
jns
test
aaa
ret
push
mov
gs
cmp
in
fcmovb
pop
lret
aam
pop
cmp
xchg
jns
jns
push
dec
xchg
inc
sbb
jle
dec
and
cmp
scas
cmpsb
out
push
inc
dec
in
mov
repz
mov
sbb
pushf
inc
or
dec
pop
jae
inc
mov
pop
inc
js
pop
iret
lds
jmp
jge
sbb
dec
xor
lock
aas
xor
cltd
popa
cli
and
aad
sti
xor
popa
ljmp
loop
loope
dec
xchg
or
fsub
test
mov
pop
push
xor
push
add
ljmp
jmp
pop
cld
cld
sbb
dec
test
push
and
outsb
sbbl
fsts
sbb
daa
cmp
inc
mov
mov
test
xchg
push
cmp
mov
add
pop
jmp
inc
ret
add
ljmp
lcall
neg
dec
pusha
xlat
fstl
repz
sbb
ja
pop
sbb
adc
and
in
dec
in
fisubrs
sbb
addr16
mov
pop
xchg
loopne
insb
inc
mov
jnp
test
lret
aas
clc
int
jns
loop
scas
test
sbb
xchg
sbb
in
cmc
fiaddl
or
popa
xchg
das
dec
and
lds
call
dec
cmc
lods
sbb
sbb
cmpsb
or
fadd
add
pop
aam
rol
int
arpl
xchg
out
into
daa
mov
out
leave
ficoml
jmp
fmuls
addr16
pop
dec
imul
out
rol
adc
pop
fcomp
xor
or
adc
ja
imul
and
cs
mov
xchg
and
cmc
sbb
cmp
mov
int
mov
test
loop
fcomip
mov
xor
xor
xor
pcmpeqw
imul
push
xor
repnz
aad
sbb
and
sbb
push
lods
test
iret
ret
ljmp
mov
push
ret
xor
enter
adc
mov
lods
xchg
test
and
lret
add
nop
push
lret
mov
sbb
test
mov
arpl
mov
dec
out
pop
insb
inc
xchg
jp
es
fwait
sbb
or
sbb
adc
sbb
les
sbbl
movsl
scas
lret
cmp
jne
shr
xlat
insl
add
push
xchg
and
imul
dec
mov
jle
mov
outsb
sub
ficomps
fnsave
inc
xchg
xor
xchg
sbb
mov
sub
lods
pop
adc
scas
mov
mov
xor
aas
cmp
cmp
jns
fiaddl
pusha
loopne
cmp
int3
data16
enter
jae
lea
or
push
lds
adc
and
andb
les
out
and
or
pop
ss
icebp
in
sbb
inc
dec
pusha
jno
cmp
arpl
ret
sbb
sbb
xchg
xchg
or
in
mov
mov
insl
hlt
cmp
lock
sti
imul
test
test
das
and
mov
and
fidivrs
jmp
push
ret
ljmp
push
push
jge
mov
xchg
cmpb
push
xchg
or
stos
or
push
jmp
or
int
bound
js
sar
inc
pop
pop
sti
mov
es
cmp
data16
addr16
cmp
mov
pop
cli
push
in
mov
orl
and
push
adcb
test
fmull
mov
pop
jle
xorl
jo
rcrl
movlps
rcr
add
notl
sub
int
jb
push
lcall
sti
pop
jecxz
or
dec
outsl
sbb
shrl
xchg
sbb
ret
call
jl
pushf
mov
aas
sub
xor
fnsave
nop
pop
mov
pop
bound
sbb
mov
jl
fwait
popf
icebp
enter
sub
call
and
test
movsb
insb
lds
cmp
dec
repz
icebp
mov
int3
cmp
adc
enter
lahf
das
js
cmp
loope
cmpsl
jnp
inc
cmp
fiaddl
ja
dec
xchg
push
sbb
inc
jmp
push
jmp
and
sbb
bound
jbe
inc
jns
add
jmp
mov
xchg
sbb
icebp
clc
ss
lds
subl
xchg
fidivrl
es
iret
mov
out
dec
test
lret
cmp
fsts
shrl
div
and
xchg
or
popa
inc
es
xchg
daa
pushf
mov
cmp
pusha
outsl
push
mov
inc
inc
xchg
sbb
movsb
pop
lret
mov
pop
dec
pop
push
shlb
in
lock
ffree
imul
outsl
movsb
rcr
push
lahf
repnz
mov
cmp
sbb
ja
dec
jo
iret
lea
pop
sbb
sbb
adc
pusha
cmp
ret
pop
test
sbb
cwtl
fwait
sub
test
pushf
test
imul
aas
test
pushf
pushf
mov
sbbl
xor
shrb
xchg
cmpsl
inc
mov
push
inc
jno
int3
mov
lods
test
jmp
ficompl
insb
inc
lret
sub
popa
nop
test
push
inc
dec
test
fsub
sahf
ljmp
jbe
jae
mov
add
push
imul
inc
mov
hlt
push
xchg
or
shlb
sbb
push
xor
ljmp
mov
sbb
jne
push
fs
inc
ljmp
mov
dec
pop
inc
js
pop
mov
mov
mov
lcall
ret
and
ds
xor
rorl
popf
out
mov
movsl
xchg
jmp
in
cld
test
sub
or
mov
subl
push
mov
cmp
int3
mov
inc
fdivs
and
popa
scas
jle
insl
xor
mov
mov
adc
sub
inc
popa
adc
jmp
pushl
leave
int3
pop
loope
xchg
popf
bound
pop
cmp
in
pop
fdivl
inc
fnstsw
mov
dec
dec
leave
movsb
sub
test
xor
out
adc
cld
pop
mov
jecxz
movsl
adc
mov
push
pop
dec
sbb
lock
push
xchg
and
xor
push
popa
fstpl
dec
xor
push
mov
cmp
lock
ret
sahf
es
insl
fdivl
push
fldenv
loopne
lret
je
push
jmp
leave
cmp
into
jnp
shlb
adc
leave
mov
pushl
add
xorb
sbb
or
jns
mov
add
jg
imul
out
out
inc
inc
rcll
rcl
fcomp
sar
sbb
pop
out
pop
mov
pop
ljmp
lds
push
jmp
cmpsl
dec
xor
inc
mov
imul
nop
dec
aam
pushf
fstl
inc
gs
jno
loope
and
mov
inc
insb
out
xchg
or
enter
xchg
ret
subl
sbb
adc
ljmp
imul
out
xchg
dec
sarb
cmpsb
mov
leave
aaa
filds
sarb
sbb
jmp
jge
mov
int3
push
nop
ljmp
push
pop
jl
das
rol
ret
and
fdiv
add
shr
je
sti
iret
insb
cld
jmp
call
jns
addr16
sbb
and
adc
adc
sub
sti
pushf
mov
mov
and
cltd
outsl
dec
push
stos
push
lcall
int3
xor
mov
xchg
cmp
and
popf
jns
idivl
lea
pop
push
les
out
mov
cwtl
pop
add
dec
lahf
or
sti
pop
data16
aam
gs
and
jns
sbb
addr16
test
sbb
inc
xchg
sbb
mov
popa
xchg
ljmp
cmp
sbb
pop
ficoms
push
jmp
rorb
loopne
and
test
add
ret
xor
ffree
jge
push
jecxz
popa
cmpsl
mov
ja
test
xor
push
pop
js
lea
pop
int
or
popf
clc
mov
es
jecxz
in
push
sbb
push
scas
sbb
jmp
sub
fstpt
imul
jmp
hlt
and
mov
xchg
push
sub
lds
mov
cmp
sub
fsubrs
js
mov
fsubl
dec
arpl
call
int
fcomps
add
dec
pop
mov
dec
mov
dec
push
jno
push
stos
sbbl
fdivs
pop
imul
movl
fst
popa
jae
dec
inc
outsl
and
or
mov
jnp
jb
cmpsl
mov
ljmp
xor
data16
scas
out
cmc
arpl
hlt
fxch
jb
adc
inc
xor
pop
xor
jnp
loop
jle
mov
lods
out
lock
pop
cmp
cwtl
mov
or
sahf
dec
or
inc
cli
out
push
pop
mov
imul
stos
sbb
jno
push
mov
ficomps
leave
mov
cltd
sbbl
sbb
ret
jnp
faddp
push
daa
or
into
jmp
cwtl
push
mov
repnz
mov
pushf
xchg
cld
or
lods
clc
pop
and
fcmovu
movsb
shl
cmp
cwtl
sahf
dec
cmp
rorl
ljmp
int
sbb
xor
jne,pt
inc
inc
jno
sbb
mov
sbb
outsb
lock
rcr
les
jmp
sbb
add
xor
cmp
xchg
call
inc
or
lret
imul
jo
xchg
out
mov
scas
ret
mov
xor
jl
cltd
jno
push
aad
mov
les
mov
or
scas
lret
mov
jo
test
data16
lock
pop
mov
pop
shll
push
lcall
and
sbb
jb
scas
and
push
push
xor
add
mov
inc
or
popf
xor
pop
loope
jnp
scas
push
fstps
movsb
insl
xor
mov
add
imul
rcr
out
iret
sbb
inc
mov
jecxz
sub
sbb
shlb
xor
iret
out
push
mov
adc
push
sarb
cmp
mov
jns
hlt
bnd
in
icebp
jno
mov
jo
mov
push
adc
sbb
lods
push
pop
dec
pusha
xchg
mov
and
push
ret
nop
xor
pusha
add
pop
or
std
mov
push
fcomp
jl
dec
xchg
scas
jbe
popa
cmp
stos
repnz
int
stos
fmull
insl
sbb
shr
inc
cld
push
fucomi
sub
xchg
es
ja
xchg
andl
fwait
icebp
sbb
push
sub
or
lahf
xchg
in
inc
lret
adc
stos
mov
insl
xor
sbb
jnp
jno
add
xchg
into
pop
jb
fists
sbb
xchg
loope
pop
ret
popa
sbb
outsl
leave
push
adc
cmp
or
andl
imul
mov
sbb
out
aaa
jns
sub
sbb
xchg
mov
fcoms
add
ficomps
push
xor
and
rcrb
or
push
dec
jns
stos
push
fcompl
int3
pop
xor
mov
xchg
ror
mov
and
sbbb
loopne
fstp
dec
orl
pavgb
or
je
ret
jnp
aas
xchg
fiaddl
fisubs
shl
add
movsb
pop
pusha
int
fdivrl
int
aam
pop
fucomip
ss
adc
and
shl
and
inc
call
pop
inc
shl
andl
js
stc
imul
push
fcoml
daa
pop
xchg
jne
add
data16
push
mov
bound
jecxz
jge
ds
jge
xor
in
js
insb
and
dec
inc
mov
pop
arpl
inc
inc
dec
and
xchg
andl
xchg
mov
mov
ljmp
fmull
inc
insb
les
xchg
ficoml
pusha
outsl
aam
pop
leave
clc
dec
mov
mov
in
inc
in
out
insl
mov
push
repnz
imul
and
out
fistpll
xchg
sbb
fcoml
orl
sbb
es
mov
sbb
jge
rolb
dec
dec
xor
jnp
pop
xlat
mov
pop
test
jo
aad
sub
cmpsl
sbb
jl
sbb
notl
push
add
mov
mov
mov
dec
jl
popa
dec
div
ljmp
movsl
lods
test
scas
xchg
pop
aam
mov
faddl
cmp
inc
in
bound
lock
out
mov
dec
sti
sahf
pusha
ljmp
sbb
popa
push
lcall
es
xor
pusha
sbb
pop
mov
mov
test
sbb
pop
out
sub
insl
popa
mov
mov
rcl
xchg
in
cmpb
inc
aaa
aam
sbb
sbb
daa
xorb
pop
in
mov
dec
sbb
add
testb
mov
fxch
aam
sub
nop
lods
stos
xor
push
lock
ret
dec
sbb
mov
mov
mov
mov
inc
adc
mov
pop
mov
movsb
cmp
lret
and
jg
in
jl
jae
sbb
push
xchg
xchg
sti
sbb
dec
in
cmp
iret
out
mov
out
sub
loope
cmp
or
nop
pusha
outsl
mov
test
push
inc
add
pop
repz
jle
pop
push
mov
xor
fdivrl
aaa
xchg
cs
sbb
xchg
push
cli
orb
mov
hlt
jmp
loopne
dec
lret
sahf
mov
shlb
and
xor
ss
nop
push
mov
jnp
and
push
mov
pop
shl
dec
stos
lcall
repz
enter
push
jle
popf
xchg
cltd
sub
shll
lret
adc
mov
and
sahf
stos
mov
stos
sbb
inc
xor
cmpsb
data16
dec
test
out
sbb
or
jp
or
mov
fstpl
cwtl
ss
into
outsl
add
and
sub
add
lret
enter
dec
repnz
ret
sbb
mov
test
mov
pushf
scas
js
stc
mov
xchg
xchg
imul
inc
fildll
mov
test
mov
jge
fstl
inc
mov
xchg
sbb
add
jle
fbld
xchg
push
pop
clc
dec
mov
ret
sub
pop
and
sbb
or
push
and
ss
jmp
xchg
cmp
xchg
out
pop
mov
jecxz
orl
mov
hlt
aas
icebp
pop
mov
dec
movsb
pop
push
gs
fnstenv
xor
xor
std
cmp
fsubrl
sub
pop
inc
jo
test
dec
inc
mov
mov
inc
or
xchg
fisttpl
sub
jmp
mov
daa
data16
adc
stos
aaa
inc
dec
sbb
divl
rcr
mov
jne
stc
mov
clc
xor
enter
and
popa
inc
jecxz
test
negl
pop
cltd
cmp
negl
xchg
aaa
cwtl
push
sbb
sub
fistl
pop
cmp
or
jne
mov
jo
adc
or
pushf
pop
out
mov
daa
loopne
mov
mov
mov
dec
rorb
out
mov
mov
fildl
ret
repz
pushf
popa
mov
jns
sbb
js
jg
mov
fdivrl
loopne
mov
fidivrs
mov
fbstp
loope
inc
sub
cmp
jle
js
jmp
mov
les
pop
lock
xchg
out
push
xchg
scas
jecxz
jge
sbb
fld
jmp
cld
cmp
push
scas
mov
test
loope
sti
or
sub
push
sub
xchg
or
inc
fidivrl
mov
test
ss
fsincos
add
call
into
iret
ret
mov
mov
cli
leave
fistpl
jne
dec
mov
in
and
arpl
sbb
out
jne
scas
pop
add
xchg
add
lock
push
popf
pusha
mov
mov
aas
pop
cmc
outsb
addr16
movsl
mull
cmp
sbb
jecxz
or
test
fstl
shr
sar
sbb
pusha
scas
pushf
and
nop
mov
stos
inc
iret
shll
pop
xor
enter
repz
shl
jecxz
insl
outsb
pop
fwait
xchg
cmp
stos
inc
in
ds
mov
fnsave
lock
push
lahf
and
cwtl
xor
in
sbb
popa
cld
pusha
testl
shl
arpl
enter
cli
div
or
addr16
fst
mov
or
data16
iret
sbb
cmp
in
jge
es
mul
orps
mov
cmp
test
je
xor
xchg
and
add
sbb
push
push
scas
rcl
ficoml
and
dec
xchg
xchg
clc
xor
ror
ja
ljmp
sbb
cltd
sbb
dec
push
mov
iret
out
pop
and
lret
lock
ds
mov
mov
ja
sbb
mov
adc
roll
adc
sbb
outsl
addr16
ss
cmp
dec
loopne
call
pop
mov
pop
ficoml
jb
sbb
lds
shll
or
jl
sbb
sbb
sahf
push
nop
or
jp
push
movsl
jmp
lret
sbb
sbb
add
daa
ljmp
int3
jl
pop
int
sub
pop
arpl
xchg
aas
mov
cmpsl
scas
lea
push
dec
xor
lcall
sarl
cmp
push
cmc
cmc
out
lret
lahf
sub
push
inc
push
cmpsb
jno
cwtl
subl
xor
adc
pop
cs
jge
rcr
fsubrs
sub
jg
sub
call
jge
jecxz
test
or
sbb
cli
int3
sti
xor
sti
fildl
mov
outsl
dec
lahf
fwait
scas
sbb
cmpsb
clc
daa
popa
add
sbb
jl
movsb
ljmp
ds
jbe
and
fiadds
and
sbb
sbb
iret
inc
mov
das
and
mov
ret
add
add
ret
gs
repz
fnstsw
aam
enter
and
sbb
and
xor
leave
pop
pop
sarb
xchg
pop
push
gs
jno
insb
lret
pop
sbb
fwait
dec
ret
or
insb
inc
add
outsl
nop
out
nop
and
or
out
pop
xchg
jmp
in
call
loop
fadd
imul
and
mov
insl
pop
ret
sbb
pop
pushf
mov
sbb
mov
push
jmp
push
cwtl
jnp
pop
sbb
pop
xorb
daa
cmpsb
jecxz
pop
mov
xor
mov
pusha
popf
addl
sbb
xor
xor
adcb
rcr
sbb
mov
jp
push
stos
out
and
xor
sbb
inc
pop
cld
jmp
or
inc
xchg
sbb
stc
ljmp
dec
xchg
fistpl
cltd
test
lcall
push
mov
add
cmpsb
sbb
in
xchg
aas
clc
je
or
inc
xchg
nop
shrb
repnz
inc
jae
lcall
cwtl
and
shll
lcall
stc
ret
repz
sbb
aam
inc
in
pop
out
cmpsb
inc
xchg
or
inc
mov
in
out
ret
pop
sub
xchg
add
cltd
xor
pop
mov
xor
pop
iret
pushf
push
adc
xor
inc
mov
cwtl
add
add
cli
cmc
mov
clc
push
in
sbb
hlt
mov
xorl
adc
fsubrs
xor
sbb
test
lahf
loope
mov
xchg
popa
nop
cmpsb
push
scas
insb
cmpsb
popa
aaa
xchg
cmpsl
popa
pop
pop
cli
mov
out
fisubs
xlat
pushf
fcomip
loope
sub
inc
pop
in
hlt
mov
xor
push
es
mov
or
inc
lds
cli
adc
xchg
orl
out
mov
xchg
loopne
test
mov
lahf
rcrb
mov
negl
flds
sbb
mov
int
mov
es
mov
rcl
fidivrl
cmp
test
inc
dec
imul
and
mov
fadd
pop
sub
enter
sub
cld
sbbl
pop
and
pop
mov
sbb
and
pop
repnz
inc
inc
fsts
push
mov
daa
dec
imul
xchg
cltd
pusha
push
xchg
les
jb
cld
fimuls
and
arpl
inc
and
movsb
int
sbb
mov
es
repz
adc
mov
fcoml
enter
mov
jl
and
fmull
cmp
pop
int
lds
fmul
js
insb
xor
fdivrs
mov
mov
fiaddl
inc
dec
in
loop
je
mov
fnsave
fstps
test
adcl
rcrl
xor
xlat
sbb
sub
xchg
in
mov
outsl
insl
sbb
pop
pop
pop
and
outsl
pushf
scas
test
or
jg
mov
inc
popf
test
sarb
sub
test
and
sbb
je
fnstenv
and
rcl
lds
push
inc
fsincos
fdivs
hlt
loope
mov
or
ljmp
pop
dec
mov
fyl2x
dec
xor
mov
lret
hlt
inc
aam
inc
mov
in
rcr
add
jg
stos
aas
and
push
push
xchg
int3
inc
addr16
repz
jmp
or
iret
jae
adc
mov
lret
outsl
and
imul
loopne
dec
xor
mov
das
outsl
mov
push
daa
aas
mov
jecxz
lock
daa
fimull
jecxz
jg
add
es
push
int3
cli
jbe
test
or
mov
pop
stc
addl
dec
xchg
cmp
insb
or
jns
lahf
loop
pop
inc
cmpl
sbb
movsb
sbb
fdivr
filds
mov
popa
lds
inc
push
sbb
add
mov
imul
ljmp
mov
in
inc
push
adc
push
jge
lods
cmp
cmpsl
sbb
out
mov
inc
test
and
dec
and
sbb
lea
push
ja
lcall
arpl
sbb
dec
sbb
dec
scas
rol
lea
cmpsb
mov
jecxz
dec
dec
lret
mov
sbb
in
sbb
arpl
mov
sbb
jmp
enter
inc
jo
push
pop
inc
push
cli
push
dec
or
xchg
add
cmpsb
mov
sbb
adc
data16
repz
test
jo
xor
pop
loop
movlps
and
and
sbb
mov
push
push
or
sbb
pushf
test
sti
pop
fwait
lcall
pop
sub
fdivs
jne
jo
jecxz
push
push
test
out
mov
dec
xchg
stos
je
pop
lret
aam
adc
int
jb
mov
adc
push
push
testl
add
rcrl
pop
push
outsl
insl
dec
xor
mov
mov
repz
sbb
pop
inc
aaa
aam
xchg
ficoml
test
mov
mov
aad
pop
push
jbe
roll
leave
scas
lret
jecxz
subl
fidivl
incl
xchg
mov
movl
sbb
fld
sbb
test
push
sbbb
loop
repz
or
fldcw
xor
cs
jnp
xchg
mov
jbe
mov
push
xor
lret
aas
insl
and
cmp
xchg
addr16
outsb
in
mov
shll
pop
hlt
xor
sbb
cld
mov
adc
ljmp
cltd
mov
pop
add
sub
jg
inc
pop
fcomp
jo
movb
and
push
movsb
and
ret
sbb
pop
lcall
lret
rcll
in
mov
jbe
pop
insl
dec
xorl
lock
fldl
add
mov
out
xlat
mov
mov
sbb
pop
mov
jg
icebp
sbb
int
test
aaa
sub
jns
cmp
dec
push
mov
inc
xchg
jns
sahf
outsl
test
punpcklbw
dec
ds
repz
pop
push
lods
leave
sbb
cltd
push
sbb
ds
mov
mov
sub
sbb
cmc
lock
sub
ljmp
shll
and
aam
mov
sub
mov
push
loopne
out
push
cmp
sbbb
or
lahf
jo
cmp
xchg
xchg
push
ljmp
arpl
fisubrl
int
aas
pop
movsl
sbb
dec
inc
sbb
dec
les
dec
hlt
ret
fisubl
outsl
dec
xor
sbb
out
imul
mov
loop
cmp
repnz
loopne
addr16
addr16
push
jl
outsl
mov
push
mov
jbe
inc
dec
ret
adc
mov
mov
cmc
push
cltd
sbb
push
sub
mov
mov
or
iret
push
rorl
dec
popf
out
pop
and
sbb
fistpl
or
imul
pop
loope
sub
push
out
mov
sbb
pop
ja
jne
xor
sbb
stos
sbb
pop
jb
dec
cld
xchg
inc
cli
hlt
popf
sbb
popa
mov
in
fs
in
iret
mov
pop
repz
pop
pop
pop
rcr
lcall
pop
cld
jle
push
sbb
sbb
scas
or
frstor
loope
frstor
mov
inc
adc
icebp
xchg
fdivl
xor
test
adc
mov
into
inc
fisubrl
mov
or
popf
push
mov
mov
dec
sbb
add
shll
pop
jg
inc
fsts
jp
cli
jns
ljmp
inc
pop
imul
into
das
adc
notb
outsb
loope
cwtl
mov
cmp
pop
xlat
rcll
test
aas
outsl
add
jnp
fcmovne
push
cmp
sahf
mov
push
ret
scas
lret
mov
jo
mov
faddl
dec
sub
jno
dec
paddusb
ret
jp
sbb
and
fcomip
cs
fs
movb
in
ret
imul
or
aad
fmul
mov
xlat
mov
adc
out
or
jnp
ret
in
sbb
mov
stos
adc
or
mov
sahf
dec
pop
sbb
lcall
lret
scas
mov
repnz
adc
into
stos
or
and
adc
sbb
adc
or
xor
hlt
and
call
add
fnstenv
adc
push
pusha
int
sbb
ss
dec
aaa
mov
sbb
mov
test
mov
xor
jne
add
sbb
cwtl
lcall
fistl
mov
xchg
mov
push
in
shlb
pop
sahf
fcmove
adc
out
test
and
sub
std
mov
leave
adc
pop
test
mov
ret
push
xchg
ljmp
dec
pop
fcoml
fwait
xor
mov
les
int
mov
add
loope
testb
outsb
arpl
into
popa
push
cwtl
mov
shll
push
loope
frstor
mov
ffreep
rcll
lock
jo
mov
jp
clc
and
sbb
movb
ror
sbb
outsb
sbb
scas
pop
dec
jae
pop
mov
sub
cmp
aaa
inc
sbbl
jmp
outsb
mov
subb
ss
pop
sbb
into
call
hlt
xor
mov
mov
mov
es
jmp
leave
insl
sbb
imulb
test
les
add
aaa
push
xor
add
xor
insl
mov
rcrb
xor
imul
lahf
or
rorb
inc
or
adc
int3
jmp
pop
fmuls
movl
test
push
adc
test
scas
sbb
stos
out
jnp
movsb
das
add
inc
pop
inc
movsl
popa
popa
mov
mov
std
cmp
inc
pop
jno
pop
add
in
loopne
push
cwtl
fiaddl
add
ficoml
push
mov
outsb
push
pusha
lret
rcrl
mov
jae
cld
lret
pop
mov
push
jmp
push
jo
repz
push
dec
fisubl
xchg
pop
mov
in
es
scas
loope
dec
pushf
in
adc
testl
fcmovb
rcrl
fisttpll
call
loope
mov
es
jnp
jns
cmp
ss
add
aam
das
lods
std
lahf
fadds
test
scas
mov
outsl
xchg
sbb
shl
dec
ljmp
in
sbb
adc
repz
jno
xor
mov
fisubrl
sbb
push
shll
fadd
and
adc
jmp
inc
jg
bound
cmp
popf
xor
dec
mov
cmc
jecxz
mov
pop
inc
rorl
or
inc
sub
mov
mov
inc
mov
mov
xchg
arpl
inc
and
cmp
push
cmpsl
mov
idivb
mov
push
mov
adc
push
inc
sub
lahf
jecxz
stos
mov
stc
cmp
xchg
std
in
cs
mov
mov
repnz
orl
lock
fs
nop
mov
ljmp
sbb
mov
cltd
cmpsl
cmp
fdivl
xchg
adcl
xor
mov
sub
adc
sub
adc
sarl
es
mov
jp
faddl
lcall
jmp
fsubs
mov
ds
xchg
cli
pop
aad
ficomps
les
adc
mov
mov
loopne
ja
and
mov
inc
ja
push
mov
ja
pushf
sbb
sahf
xchg
cmp
out
hlt
pshufw
and
inc
jns
test
and
fnstcw
cltd
filds
aaa
das
xchg
lret
rorb
int3
dec
loopne
sub
push
out
add
in
js
push
push
fnsave
mov
imul
cmp
sbb
inc
ds
and
push
nop
cmp
mov
jno
loope
repnz
call
push
adc
sbb
negl
fs
cmpsl
mov
in
cmp
push
out
cmc
notb
into
lock
icebp
repz
push
cmp
ds
cmp
mov
popf
dec
add
mov
mov
dec
sarl
out
int
sbb
das
sti
xor
or
xchg
pop
outsl
or
negl
cmp
in
and
sbb
daa
and
mov
shrb
sti
mov
jno
fs
sbb
icebp
cs
pop
lcall
sub
in
outsl
out
iret
fwait
bound
mov
or
cmp
mov
icebp
sbb
cwtl
push
sbb
movzwl
test
add
cmc
mov
pop
insl
ret
cmc
push
cli
inc
xor
mov
insl
ss
sub
mov
nop
dec
js
icebp
loopne
dec
push
in
movsb
shrl
or
pop
dec
or
mov
mov
xchg
shrl
dec
int3
inc
pop
addr16
dec
sub
xchg
inc
ljmp
rclb
xchg
pop
and
push
dec
out
roll
pop
sahf
cwtl
cmp
mov
lret
out
fsubs
fstpl
mov
sbb
inc
fwait
or
xchg
out
ljmp
jmp
pop
add
or
sahf
aam
fisubrs
mov
inc
sub
pop
and
insl
cmp
pop
sub
clc
setp
in
jb
mov
andl
clc
mov
or
repnz
outsb
fsts
mov
pop
adc
cmc
loopne
push
jmp
test
sub
int3
imul
lock
sbb
and
or
scas
xor
negl
mov
popf
inc
ret
cs
sti
leave
testb
stos
dec
jmp
fistl
stos
sub
mov
and
or
xchg
dec
sahf
ficomps
test
cmc
sbb
in
xorb
xchg
out
outsb
mov
xor
pop
mov
lahf
pop
pop
fmul
aas
push
cmpl
into
push
test
scas
mov
adcl
cmp
and
insl
daa
xor
mov
cmp
int3
popa
and
stc
pop
mov
or
test
dec
ljmp
sbb
jno
out
test
and
and
gs
ljmp
bound
push
insb
aam
roll
out
sbb
ljmp
adc
mov
sbb
mov
pushf
jge
adc
fidivs
out
loopne
insb
inc
or
sahf
jae
cmc
pop
and
xrelease
ss
sub
xlat
xchg
cli
dec
adcl
jg
lret
data16
sbb
movsb
cmpsl
push
inc
xchg
xchg
push
sbb
jge
push
sti
or
xlat
sbb
arpl
loop
pop
cli
ljmp
aam
fisubs
mov
pop
jmp
in
jle
cs
adc
loop
out
int
sbb
mov
adc
fisttpl
dec
and
sbb
or
xchg
hlt
inc
mov
lcall
cmp
fdivp
dec
imul
inc
test
fsub
pop
fidivl
sbb
jl
jmp
sub
mov
lock
loopne
jecxz
sbb
inc
mulb
pop
xlat
fsubr
pop
xor
das
lahf
loop
fisttpl
mov
int
jnp
dec
cmp
jge
scas
jns
inc
cmp
rclb
or
xor
inc
insb
push
adc
mov
sbb
mov
dec
mov
and
cmp
call
adc
or
dec
movsl
push
adc
stos
loopne
nop
pop
aam
mov
movsb
es
sub
pop
imul
repz
outsl
adc
xor
add
pop
lret
and
mov
dec
sub
pop
mov
jge
mov
ljmp
scas
incb
mov
sbb
jno
popa
sbb
test
rcpps
or
sti
arpl
cmpsb
stos
sbb
cwtl
jne
jno
aad
ja
xor
inc
cwtl
xchg
or
push
pop
push
mov
xor
mov
ficoml
orb
jb
cwtl
stos
imul
pop
jg
sbb
arpl
sbb
cld
add
jbe
push
mov
cmp
dec
dec
push
sbb
leave
push
xchg
jmp
jge
xchg
int3
cmp
test
scas
cmp
aad
sub
mov
fstpl
sbb
orb
hlt
out
or
nop
sub
jbe
jbe
or
push
imul
ss
or
rcrb
fstpl
xchg
pop
pop
rcll
xchg
sub
mov
lods
xchg
je
push
imul
push
adc
stos
shl
pop
iret
dec
cmp
into
sbb
pop
inc
repz
or
test
fbstp
movsl
iret
jo
loop
mov
dec
xchg
push
mov
xchg
dec
jg
and
imul
addr16
pop
ficoms
pop
cwtl
sbb
push
sbb
sbb
adc
and
push
pop
inc
mov
stc
lret
daa
fdivr
adc
and
xor
or
shlb
jo
insl
sub
sub
sbb
mov
loop
adc
lock
test
aaa
mov
sbbl
push
inc
inc
or
and
arpl
inc
mov
adc
arpl
adc
jge
dec
int
ds
pop
loopne
inc
gs
test
xor
add
pop
sbb
and
lahf
popa
rorl
or
xchg
repz
cmp
in
add
int3
cmp
aas
push
sbb
scas
dec
stos
fucomp
les
popa
or
inc
push
push
sbb
daa
out
push
or
arpl
jecxz
insl
cli
jecxz
push
inc
fcmovu
daa
or
jl
fwait
sbb
push
lret
andb
lock
push
inc
int3
lahf
aad
xchg
mov
xchg
subb
inc
lods
jmp
cs
imul
pop
test
aas
lds
mov
pop
les
lret
sbb
jns
push
mov
test
ss
movsb
add
andb
sub
sbb
ret
push
jae
cmp
lret
rcrl
mov
int3
mov
js
std
repnz
xchg
rolb
and
push
adc
ret
loope
push
ljmp
stc
outsb
mov
push
fs
push
repnz
sbb
pop
mov
xchg
sbb
cmp
bnd
xchg
frstor
mov
xor
push
dec
mov
popa
imul
lods
push
fsubs
or
sbb
mov
sub
or
xchg
mov
and
pusha
popa
and
cli
mov
mov
fs
lret
and
dec
orb
inc
in
pop
push
hlt
push
cmpl
inc
fs
scas
xor
nop
stos
xor
bound
pop
sbb
mov
pop
insb
cmp
out
jmp
sbb
sub
fistpl
push
int
inc
aas
mov
imul
sahf
mov
pop
loope
or
lods
push
xchg
mov
scas
sbb
lds
leave
dec
mov
addl
lret
sbb
into
inc
push
push
mul
icebp
and
mov
mov
out
sbb
inc
mov
clc
and
ret
out
call
sbb
rcrl
pop
mov
int3
pop
fisubrl
jae
orl
inc
mov
adc
scas
cmp
push
jno
jle
imul
and
fstpl
je
leave
mov
fs
and
jo
popf
dec
pop
repnz
push
mov
pop
mov
mov
mov
outsl
inc
in
ds
mov
mov
and
repnz
mov
pop
aad
push
lea
lret
sbb
imul
popw
in
jle
outsl
jg
sub
mov
loope
sub
mov
ljmp
fsubr
jb
push
aad
mov
xchg
imul
std
jne
fidivl
add
insl
push
les
adc
cmp
sarb
popa
movsb
dec
xor
bound
dec
jno
mov
jo
fcoml
mov
das
in
loope
insl
popa
adc
or
rclb
mov
mov
pusha
add
jnp
or
daa
mov
repnz
sahf
jmp
push
out
fucomip
das
fmull
add
push
mov
or
add
jecxz
addr16
stos
fmuls
dec
cmp
push
loopne
inc
and
add
mov
xor
jb
jmp
mov
push
mov
mov
insl
out
fistl
rorb
sbb
ret
cs
stos
jmp
das
xchg
xor
jmp
mov
lcall
int3
jno
xchg
inc
mov
xor
add
insb
lods
mov
pop
push
ficompl
dec
ficompl
xchg
push
leave
jo
fwait
sub
out
int
hlt
std
adc
inc
dec
insb
lds
xchg
sbb
into
movsl
sbbl
add
mov
ret
cmp
xchg
jmp
jecxz
insl
stos
inc
out
cmpsb
addr16
dec
enter
loope
lcall
push
mov
sbb
je
xchg
and
xchg
inc
sbb
jp
das
pop
mov
mov
sbb
jne
dec
int
arpl
jl
cmp
addr16
dec
mov
push
mov
mov
mov
dec
les
sahf
cwtl
cmp
insl
nop
cli
cli
test
mov
cmp
fdivs
es
mov
push
cmc
ret
push
dec
adc
cmp
xor
arpl
and
test
das
adc
lahf
mov
adc
out
negb
add
insl
ljmp
mov
es
pushf
icebp
hlt
gs
dec
lret
jecxz
out
sbb
add
ja
push
lods
xor
out
dec
movsb
sbb
int3
add
fsub
loop
dec
push
mov
sbb
push
pop
arpl
sbb
cmpsb
subb
data16
fistl
sbb
dec
inc
pusha
xor
xchg
or
sarb
outsb
bound
popf
fs
repnz
adc
lahf
std
xchg
repnz
jno
inc
push
ss
and
imul
cmp
jmp
push
sub
lods
pop
jnp
xchg
pop
jbe
and
loopne
jb
push
aas
add
xchg
and
dec
and
and
add
ret
sub
xchg
jnp
jno
push
xchg
inc
arpl
loope
and
and
push
sbb
sbb
arpl
shl
dec
dec
xor
loopne
xor
inc
jecxz
nop
pop
lds
mov
ret
or
mov
or
xor
xchg
lods
add
movsl
les
lods
pop
inc
sbb
sbb
popf
mov
adc
or
aaa
sub
leave
or
jp
aam
cmp
pop
push
mov
movl
lds
ficoml
fwait
dec
loope
xchg
push
ljmp
fstps
mov
xor
add
mov
dec
loop
pop
and
cmp
outsb
push
jecxz
gs
xor
aas
je
pop
mov
and
sbb
dec
stc
sub
xor
test
mov
sti
push
int
ret
mov
je
les
jmp
add
sbb
jmp
pop
or
fwait
xchg
mov
jno
add
pusha
lret
scas
push
push
xor
mov
and
push
dec
pusha
ja
cld
push
jg
lret
test
mov
inc
shl
popa
cmp
adc
cld
or
xchg
addl
pop
mov
leave
push
cmp
hlt
pop
pop
stos
xor
xchg
outsb
dec
std
aad
mov
fsub
adc
mov
fldl
fnstsw
xor
cmpsb
mov
adc
fisubs
out
rolb
and
fstl
shrb
ja
and
in
aam
cwtl
fcoml
mov
hlt
out
and
push
mov
pxor
and
or
dec
repnz
jno
and
test
mov
jmp
inc
mov
outsb
push
dec
cmpsb
inc
mov
inc
cmc
mov
dec
outsl
nop
popf
dec
pop
pop
sti
sti
cmp
mov
shll
fiadds
push
cld
gs
leave
add
out
jb
das
std
enter
fdivl
sbb
xorl
lahf
loope
movsb
xor
jmp
fstpl
mov
push
or
fsubs
call
shlb
mov
in
out
jo
dec
xchg
cmp
sbb
lret
pop
in
sub
in
ret
lcall
in
adc
jge
repz
shlb
mov
mov
dec
loopne
fwait
pushf
and
push
jnp
shl
fsubs
fnsave
xor
outsl
sbb
testl
jecxz
cmp
in
sbb
ret
in
inc
hlt
mov
lar
sbb
movsb
or
fcomp
add
out
jne
out
rolb
idivb
mov
push
jl
adc
pop
jl
fcom
sbb
decb
xchg
outsl
cmp
xchg
ja
aas
mov
xchg
pop
clc
lret
inc
xchg
ljmp
dec
xchg
mov
rcrb
test
mov
ljmp
test
dec
sbb
inc
out
ret
ret
stos
push
xchg
mov
popf
lds
push
out
lcall
mov
mov
dec
dec
out
adc
mov
aam
mov
insl
call
je
push
stos
lods
aam
pop
loope
movsl
xchg
mov
stos
sbb
jbe
sar
cli
and
jecxz
hlt
pop
call
mov
jecxz
popa
or
and
outsb
in
sbb
mov
and
and
fwait
xorl
ficoml
pusha
add
pushw
add
sbb
xor
sub
pop
dec
xor
lods
xchg
stos
arpl
add
jecxz
xor
rol
das
lock
xor
xchg
fs
add
adc
sbb
mov
lret
or
dec
out
mov
inc
pop
dec
sub
sbb
sub
fistps
fcompl
jnp
jecxz
cld
dec
dec
mov
mov
xchg
mov
jmp
or
popa
rcrb
fstl
lods
xchg
lcall
dec
cmp
pushf
roll
lock
insl
mov
scas
xor
pop
outsb
sbb
cmp
jno
push
mov
jmp
aas
addr16
daa
push
in
daa
mov
imul
out
pop
arpl
test
clc
sub
jl
ss
jp
jmp
pop
lcall
aaa
jnp
or
je
mov
popf
cmp
mov
sbb
mov
mov
xchg
or
xlat
ss
ljmp
aam
movnti
movsl
enter
aas
pop
pop
out
out
leave
mov
sbb
xchg
or
and
mov
push
mov
movsb
push
movsb
jp
push
sub
loop
shrl
adc
fnstenv
lds
sub
adc
add
mov
inc
mov
hlt
addr16
sub
dec
sbb
xor
pop
mov
arpl
pusha
sbb
sub
cmp
popa
repnz
mov
clc
test
bound
jmp
sbb
lock
sub
out
fdivs
xchg
test
ljmp
ror
dec
sbb
sbb
dec
mov
mov
fdivp
gs
lds
movsl
lock
add
jmp
pop
arpl
add
jge
pop
les
adcb
xchg
mov
movsb
stos
scas
sub
fstl
and
mov
test
push
mov
or
dec
inc
lock
xchg
test
stc
inc
data16
push
ret
fsubrp
scas
xchg
repnz
fdiv
sub
sbb
rolb
mov
loop
cli
js
fcomps
mov
fisttps
je
frstor
sbb
pop
and
fcompl
and
call
push
push
ret
sbb
daa
cmp
xor
dec
xor
mov
popf
cmp
mov
sbb
dec
jnp
cli
les
enter
das
and
pop
cwtl
mov
mov
mov
jbe
jne
jg
in
xor
mov
push
testb
test
mov
fstpt
push
xor
lods
adc
ss
outsl
sbb
xchg
xor
js
xchg
imul
jns
sbbl
mov
inc
cwtl
jle
call
addr16
lock
inc
mov
sbb
fldenv
pop
insb
adcb
or
dec
rorb
shrl
mov
in
aaa
jne
mov
push
imul
xchg
repz
jns
pop
xchg
adc
push
fisubl
pusha
faddl
inc
xorl
sub
cmp
push
jmp
dec
push
scas
xorl
dec
cmpsb
or
fnstenvs
xchg
setle
cltd
pop
gs
lret
and
dec
adc
sbb
and
dec
mov
sbb
xor
cmpsb
adc
xor
mov
add
orb
scas
xchg
dec
je
inc
hlt
ds
xor
jnp
mov
push
fsubrs
or
cmp
push
sub
shll
push
decl
roll
lods
cmp
mov
push
scas
fs
push
xchg
and
xchg
sbb
loop
lret
lcall
ljmp
cmp
jl
icebp
jae
lock
add
sahf
mov
mov
or
push
sbb
out
push
leave
lods
cmp
add
insl
and
mov
sbb
in
add
sbb
leave
mov
jno
pop
mov
cmp
ss
cmp
sbb
pusha
out
jno,pt
aaa
jmp
mov
repnz
fildl
xlat
or
ljmp
mov
fldt
dec
xor
adc
sti
lahf
scas
jmp
ret
test
and
cmpsl
sub
ret
aaa
xor
pop
adc
xchg
iret
cs
sub
inc
mov
out
lret
xor
sub
ja
out
negl
pop
nop
and
fisttpl
faddl
call
popa
push
or
shr
stos
jmp
inc
mov
jnp
and
push
lcall
mov
out
loop
xchg
and
jne
ds
daa
mov
call
outsl
sub
sbb
inc
push
insl
out
sub
adc
adc
lods
jmp
clc
pop
fistpll
int3
sbb
dec
and
cmpsl
lods
mov
and
fucom
mov
pop
mov
sbb
inc
dec
jo
fidivrs
loope
add
mov
dec
cmp
mov
std
inc
dec
cmp
push
sub
aad
les
jns
cmp
jle
lret
ljmp
pop
lret
mov
mov
arpl
orb
add
mov
jp
mov
aas
int3
lcall
pop
dec
shrl
lcall
icebp
fs
test
cli
mov
pushf
adc
insl
sub
sbb
arpl
dec
mov
js
jb
cmp
cwtl
imul
rcrb
inc
enter
popf
xchg
test
sub
mov
sbb
lea
iret
outsl
sub
pusha
lret
dec
fsts
cs
testb
lret
add
jno
jecxz
movl
icebp
or
clc
fmul
fnstcw
scas
xorb
xchg
mov
std
dec
daa
sbb
xor
xor
mov
ljmp
inc
jne
in
mov
lret
sbb
sub
out
lret
xchg
mov
xchg
lret
movsl
dec
lods
xchg
sub
outsl
clc
shll
test
ss
in
or
pop
or
jmp
add
out
lret
loopne
mov
sarl
jae
mov
cmpsb
mov
or
test
rcrl
inc
xor
stos
outsb
lods
xor
fisttpll
dec
push
and
push
pop
jecxz
les
out
mov
cld
pop
out
lret
mov
cmp
lret
clc
fnsave
lahf
xor
lods
ret
loop
lcall
cwtl
jge
test
gs
scas
enter
jo
sti
dec
es
sub
loopne
pop
cld
xor
and
ret
movsb
cmp
ja
mov
andb
divb
fdivs
cmp
cmp
shll
lret
inc
in
sbb
adc
mov
in
test
lahf
or
xchg
pop
mov
fwait
testl
lock
mov
cltd
adc
stc
lret
ljmp
pop
mov
sti
lret
mov
mov
loope
sub
and
sbb
lret
clc
adc
xchg
stos
add
push
pop
mov
mov
mov
pop
lods
cmpsb
jge
mov
mov
push
inc
ds
int3
adc
dec
ljmp
outsl
xchg
scas
mov
lret
sub
clc
addr16
shl
and
pop
dec
outsl
inc
lret
mov
notl
xchg
cwtl
dec
mov
inc
fcomi
xchg
imul
jg
lcall
pextrw
mov
sub
xor
and
mov
imul
add
dec
and
mov
ror
lds
push
jp
lret
cmp
jns
pop
iret
push
push
jnp
nop
mov
dec
inc
in
test
pop
or
xchg
repz
pop
mov
test
lods
shlb
gs
and
fdiv
and
loop
dec
in
sub
mov
insl
mov
iret
lret
or
dec
jne
inc
shrb
shrl
and
movsl
daa
mov
leave
dec
jp
stos
and
int
gs
and
test
jb
cmp
movsl
xor
lock
mov
int
cld
enter
push
mov
inc
inc
nop
js
mov
xchg
lret
push
xor
xlat
mov
popa
pop
mov
outsl
jp
repnz
stos
aad
mov
jg
pop
fsin
or
or
inc
inc
or
push
int3
lcall
bound
nop
push
sub
adc
outsb
sbb
fcmove
loopne
add
or
dec
fcoms
rol
push
leave
mov
adc
xchg
jae
paddd
testb
and
lret
sub
sbb
dec
lret
clc
cmpsb
pop
test
mov
in
cmp
pop
push
mov
lock
pop
jmp
clc
fs
jg
push
lret
cmp
jnp
int
ret
shrl
adc
lret
jmp
add
test
xor
icebp
pop
popf
xor
jnp
xchg
xchg
lret
adc
adc
mov
jae
pop
xor
cmp
das
leave
rorl
jns
push
lret
popa
mov
imulb
lret
mov
and
cmpsl
jecxz
xchg
mov
inc
std
out
in
shlb
ja
push
cmp
lods
lea
leave
pop
jg
jp
stc
mov
jmp
leave
push
pop
pop
fsubrp
clc
mov
xchg
fwait
scas
fs
enter
xchg
lret
fstpl
fstpt
std
cmp
hlt
adc
gs
or
ror
lret
sahf
cld
lcall
add
xor
push
loopne
adc
push
es
out
int
adcl
mov
out
cltd
xor
dec
jge
adc
sub
sahf
dec
xor
pop
addr16
dec
xchg
sarl
push
lea
sub
inc
xchg
mov
xchg
adc
in
adc
rcrl
dec
mov
test
arpl
aam
or
jp
or
addr16
lret
rcl
add
cmc
mov
nop
jle
pop
inc
xchg
out
cmp
shll
pop
push
rcrb
lret
shlb
adc
lock
sbb
sbb
mov
repz
xor
jp
lret
adc
sub
test
ror
pop
mov
test
sub
lret
jb
fildll
dec
or
mov
sti
lret
mov
inc
mov
pop
or
lret
jg
jns
jge
test
not
or
mov
das
and
push
stos
sub
lret
arpl
mov
ror
pop
inc
jp
fbld
lret
bound
push
lcall
xchg
ljmp
add
scas
stc
mov
movsb
orb
pop
enter
stos
ret
push
and
lret
sub
sti
xchg
shl
scas
int
std
push
arpl
lret
push
icebp
add
insl
repz
ds
clc
pop
loope
mov
and
push
dec
jne
mov
int3
pusha
outsb
mov
cs
xor
cli
jmp
std
adc
cmp
pop
sub
fucomp
mov
mov
mov
mov
jp
hlt
mov
icebp
push
cmp
lret
cld
and
and
loopew
out
jnp
orb
nop
insb
fsubr
jb
push
lock
aad
pop
push
mov
cmp
mov
inc
out
int3
shll
dec
pop
and
and
lret
cmpb
cmp
cmpsl
mov
daa
push
cli
loopne
imul
pusha
sub
pop
sbb
jnp
loope
iret
lret
scas
jmp
lahf
xchg
out
mov
lds
cld
notl
sbb
lret
sbb
or
xlat
push
mov
lret
and
jp
in
cmpsl
cmpsb
fwait
lret
sub
ds
lahf
es
mov
xor
push
jno
mov
lods
shll
fcomp
lret
je
shl
sti
jp
dec
pushf
out
xchg
test
jnp
dec
mov
loope
cli
add
or
stos
fisubl
daa
cld
mov
call
shll
inc
cwtl
daa
dec
jns
lret
into
push
imull
lret
xor
cmp
sbb
adc
mov
push
xor
clc
add
pop
je,pn
push
or
int
out
scas
imul
inc
cmp
sub
cld
or
addb
stc
pop
pop
mov
aad
shll
mov
das
pop
inc
stos
test
mov
inc
mov
jp
inc
lret
xchg
mov
int3
out
lret
pop
into
xchg
cwtl
and
roll
in
aaa
cmc
add
leave
int3
or
popa
ret
sub
lret
or
or
pop
lds
ret
movsl
test
loope
arpl
push
lcall
sbb
pop
mov
add
cmovg
and
dec
repz
out
jg
rcrl
push
in
lret
pop
fidivrl
sub
sbb
lret
aad
and
inc
sahf
into
test
mov
loopne
sub
movsl
xchg
sbb
mov
dec
ficomps
cmp
es
inc
lret
aam
adc
test
pop
mov
mov
jge
in
in
call
sbb
movsl
jl
sbb
cwtl
lods
call
pop
push
sbb
lret
fs
sbb
fnsave
adc
xor
aaa
cs
pop
rorb
sbb
repnz
fmul
lret
out
imull
push
js
push
fcompl
loop
push
sbb
mov
pop
push
lret
add
mov
loope
leave
xchg
cmp
xchg
xor
negl
and
loopne
xchg
push
mov
xchg
adc
lret
aad
sub
adc
push
iret
and
aaa
mov
cmp
jmp
shlb
add
xchg
lcall
add
fnstenv
out
leave
or
xchg
jge
sbb
jmp
mov
pop
test
push
sbb
icebp
leave
fisubs
int
mov
test
cld
push
test
jo
jecxz
fnstcw
pop
cmp
mov
cmp
rcrl
out
repnz
shrl
das
and
mov
ret
loopne
push
std
sbb
ljmp
sbb
push
xor
dec
inc
out
mov
xchg
je
sbb
add
in
test
popf
pop
es
rcll
adc
push
popl
jmp
ret
and
mov
mov
pushl
out
fdivs
mov
sub
pop
xor
rcll
rorl
fists
out
xchg
xchg
ljmp
fdivrs
mov
pop
xchg
push
out
popl
jb
ljmp
inc
xchg
jp
shl
repnz
gs
sub
xorb
vxorps
jp
imul
pop
insl
pop
subb
rol
jb
mov
cmpsb
sub
fcom
repnz
les
in
xchg
aas
cmp
loopne
adc
bound
cmpsb
enter
ret
add
jbe
xchg
gs
add
mov
repnz
out
xor
dec
in
xor
mov
out
xchg
mov
jae
sbb
icebp
in
fnsave
insb
mov
mov
and
push
out
mov
jnp
hlt
cld
cmp
repnz
jno
lcall
aaa
test
cmp
jae
imul
mov
xchg
testb
jb
mov
test
ret
mov
pop
dec
jno
xchg
popa
insl
aaa
jmp
xchg
sti
into
mov
pop
xor
pop
mov
fdivr
jae
das
aad
mov
loope
insb
lret
jmp
or
dec
fdivl
pop
int
aas
cltd
stc
add
xchg
xor
rcr
dec
aam
in
sub
and
clc
fcomi
repz
and
sbb
or
lock
xor
cli
jmp
test
lret
enter
xor
sbb
psubsw
xchg
or
lret
mov
scas
notb
mov
pop
fsubl
out
fs
xchg
sbb
inc
int3
pop
dec
repnz
jae
sbb
pxor
and
bound
dec
push
mov
pop
hlt
mov
mov
or
rol
dec
mov
rcll
jecxz
cmpsl
and
sbb
dec
andb
daa
jmp
ffree
sbb
cwtl
xor
shlb
enter
cmp
cmp
cwtl
iret
dec
cli
mov
icebp
aaa
sub
cmpsb
fwait
leave
cmp
sub
out
fidivs
lock
in
add
and
sbb
inc
cmp
jecxz
in
pop
data16
jmp
add
jae
iret
icebp
pop
jmp
xor
imul
jge
pop
push
ds
and
lahf
dec
lods
daa
sti
dec
std
test
sbb
mov
test
adc
fsubs
addr16
lret
int3
ret
push
xchg
sub
sbb
hlt
sbb
stos
das
push
dec
imul
mov
sbb
mov
ss
or
shll
rcr
std
sbb
stos
jl
add
push
mov
cmp
dec
mov
cmp
mov
dec
movb
cltd
lds
mov
bound
in
pop
pop
xchg
xor
lahf
and
cmp
dec
imulb
mov
cmpsl
pop
jne,pn
subb
and
stos
push
lss
pop
fsubrl
inc
fstpl
inc
cwtl
xor
sbb
sarl
dec
ret
push
push
enter
outsb
cwtl
addr16
sub
fnstsw
int
sub
in
pushf
push
mov
adc
in
int
cmpsb
lret
sbb
imul
insl
or
xlat
jnp
xor
pop
dec
dec
cmp
mov
jmp
shll
add
fisttpl
cmp
xchg
insl
adc
push
hlt
repz
or
or
test
ret
into
xor
dec
es
sbb
imul
pop
hlt
pop
mov
outsb
jno
fcompl
lods
arpl
push
xor
lret
mov
dec
jns
or
sti
stos
scas
loopne
arpl
addr16
loopne
xlat
adc
rol
jb
mov
and
pop
xor
repnz
xor
dec
fisubrl
cmpsb
clc
aam
inc
mov
adc
inc
lahf
xchg
rorb
jne
popa
fnstsw
out
ljmp
dec
test
nop
or
pop
dec
andb
dec
mov
daa
pop
xchg
loop
sbb
int
aam
sarl
insl
pop
xor
jecxz
fs
orb
dec
sbb
sbb
push
xchg
push
add
int3
mov
sbb
pop
xchg
sbb
fisttps
fcomip
push
mov
sbb
pusha
scas
push
fscale
lahf
gs
push
xchg
jbe
jge
mov
adc
bound
inc
je
xchg
fisubrs
cs
push
movb
jno
dec
dec
repnz
mov
pop
mov
lods
mov
and
mov
push
in
xor
mov
xlat
sarb
addb
xor
daa
faddl
mov
add
push
pop
dec
inc
adc
inc
dec
les
cmp
pop
in
fmull
pop
repz
insl
adc
cmp
mov
jge
inc
test
imul
dec
fnstenv
out
cmp
addr16
idivl
popw
dec
xor
adc
clc
inc
push
notb
and
pop
sbb
adcl
fidivrl
push
cmpsb
xchg
lods
gs
or
sti
enter
sub
adc
dec
lret
jno
sub
in
leave
dec
sbb
out
pushf
lret
mov
loopne
inc
xor
xor
inc
dec
lret
xchg
out
stos
and
mov
leave
out
call
fcoms
dec
lret
addr16
jns
push
das
mov
cmpsb
sub
xchg
dec
test
inc
jae
ret
imul
sub
pusha
sub
je
xchg
lret
idiv
add
xor
push
push
mov
lret
cmpsb
pop
jecxz
aas
xchg
sbb
nop
dec
inc
xor
push
lods
mov
inc
jecxz
inc
mov
movsl
out
in
push
xchg
xor
add
sbb
pop
pop
lret
fidivrs
xlat
lods
or
mov
push
pop
adc
es
lea
mov
iret
in
sub
je
add
call
int
loopne
add
cmp
dec
popa
fwait
lret
daa
add
mov
pop
mov
test
add
pushf
lret
push
and
lret
dec
mov
int3
push
sub
scas
data16
cld
lods
inc
jbe
into
xor
jecxz
dec
aas
or
jmp
lret
jns
cli
pusha
movsb
xchg
inc
jae
addr16
mov
sarb
sub
dec
or
jno
sarb
aam
mov
dec
gs
push
imul
lret
dec
sub
push
lret
dec
pop
push
jp
mov
lret
leave
fildl
ljmp
je
adc
daa
sbb
popf
scas
in
repnz
inc
pop
mov
les
mov
mov
adc
das
int
icebp
sub
test
int3
lds
orl
sub
nop
pop
clc
sarl
popa
mov
dec
add
jne
pop
jnp
sub
adc
aas
loop
call
push
lret
push
outsb
mov
jl
aaa
lods
leave
and
stos
out
pop
inc
shll
pop
incb
rcrl
push
dec
xor
fbld
push
push
or
inc
xchg
ss
or
notl
in
rcl
sub
lcall
in
add
iret
add
mov
mov
sahf
cld
xchg
loopne
movsb
jns
and
aaa
sarl
sahf
or
lret
jbe
in
inc
popf
rclb
dec
ret
leave
pop
cmp
loopne
out
ret
sub
jecxz
xor
cli
jg
lret
daa
sbb
fadd
mov
sarl
pop
xor
adc
and
dec
shl
mov
and
cmc
mov
test
dec
cld
sub
lret
push
dec
cmpsl
fistl
lahf
fmul
out
or
sbb
or
xchg
das
mov
lret
mov
test
ljmp
sbb
inc
xchg
rcll
xlat
imul
lret
es
cld
loopne
fwait
scas
sub
mov
mov
pop
cmp
dec
sahf
clc
sar
int
inc
pusha
adc
gs
dec
sbb
jmp
lods
stc
mov
jns
out
jge
push
cmpsb
bound
sbb
out
push
xchg
mov
push
pop
out
daa
fisubs
rclb
int
inc
mov
dec
cmp
fsub
lds
jno
sbb
sbb
sbb
fistpl
adc
loope
scas
mov
xchg
inc
adc
dec
andb
sbb
jne
repz
ljmp
xor
mov
mov
icebp
xor
push
test
addl
cli
pop
aaa
mov
sbb
pop
dec
or
sbb
lock
add
fstpl
pop
xlat
in
push
xchg
je
mov
mov
mov
sub
mov
sahf
in
add
arpl
add
scas
lret
xchg
dec
insb
mov
cmp
ret
sub
or
loop
adc
xchg
mov
enter
fisubl
push
loopne
sbb
arpl
xchg
sub
pop
xchg
and
stos
xor
setl
push
mov
dec
jns
inc
sbb
and
xor
ret
mov
movsb
sub
sbb
or
ljmp
sbb
and
lock
rorb
shr
adc
push
mov
sub
and
popa
cmpsl
shll
push
pusha
out
add
adc
stos
jecxz
lret
call
insl
imul
mov
mov
cmp
inc
sub
mov
cs
stos
fptan
mov
jno
fidivrl
lahf
test
xchg
fisubl
stc
lret
aad
mov
fwait
xchg
mov
add
jbe
loope
sbb
into
xchg
jmp
pushf
cmc
aaa
fimuls
fstpl
or
mov
test
scas
mov
scas
idivl
cmpsb
and
add
dec
or
xchg
or
cmp
dec
fldenv
push
sbb
subps
add
data16
mov
icebp
push
jae
lret
aam
in
lahf
dec
ret
ja
ljmp
sub
cs
or
xchg
mov
xchg
push
pop
fldcw
pop
push
outsl
rclb
sahf
frstor
repnz
dec
idivl
das
mov
push
repnz
dec
adc
bound
jo
push
and
lods
lods
fcmovnbe
sbb
out
int
sbb
jne
loope
xchg
sbb
scas
fs
pushf
or
sbb
xor
and
add
dec
sub
or
mov
out
xchg
xchg
loopne
mov
andl
sbb
clc
pop
popf
dec
add
mov
xchg
sbb
ja
iret
ljmp
jecxz
mov
mov
xchg
test
arpl
mov
jp
stos
loop,pt
mov
out
jecxz
push
xor
insb
outsb
jnp
test
loop
push
sbb
mov
stos
mov
lea
movsb
mov
lds
lahf
jl
and
sbb
fnsave
xchg
xor
mov
setae
cmp
push
mov
fdivs
cmp
mov
fldt
jno
jnp
repz
dec
mov
frstor
and
sbb
mov
push
xchg
cli
nop
in
jg
inc
into
jne
loop
sbb
jnp
jmp
test
mov
jo
sub
or
iret
and
repnz
xchg
jbe
mov
insb
lret
notb
sbb
mov
aad
adc
jne
int3
cltd
mov
fsubs
fs
stos
aam
xchg
add
movsb
cmpsb
and
inc
mov
movsb
jns
movsl
call
test
adc
test
rcr
mov
or
mov
les
or
sbb
and
std
call
jecxz
inc
cmp
mov
adc
or
jecxz
mov
addb
pop
sbb
inc
pusha
mul
adc
and
xchg
cmp
adcl
mov
loop
cmp
add
inc
xor
mov
push
data16
fs
jmp
mov
cmp
pop
push
add
fdivrp
push
negl
push
decb
aam
pop
jno
pop
test
and
xor
hlt
cs
push
out
xor
jae
sbb
scas
adc
xorl
mov
sub
les
adc
or
ds
jae
pop
jo
dec
les
lock
shrb
push
imulb
sub
sahf
sub
xor
and
mov
outsb
mov
dec
imul
pop
fs
call
sub
scas
pop
aam
pusha
jmp
sub
imul
mov
xchg
xlat
and
inc
lods
sbb
push
mov
inc
dec
fst
cmp
je
ret
scas
dec
inc
jg
push
mulps
cmp
inc
inc
scas
push
jp
pop
pop
sti
jne
outsl
inc
mov
fcmovne
adc
shll
inc
mov
add
mov
jne
sub
mov
fdivl
xor
push
fmull
stos
and
sub
push
aas
fbld
ret
sbbl
jmp
and
xor
cmp
inc
ret
sbb
fsubrl
test
pop
cs
xor
pop
and
xor
andl
sahf
pop
or
mov
push
dec
inc
xchg
fstp
sbb
loop
inc
shr
dec
loop
loope
mov
sbb
sbb
insl
gs
xor
cltd
cmp
pop
xor
inc
pop
dec
call
ljmp
dec
fidivrl
fidivrs
xchg
fwait
or
cmp
call
and
repnz
outsb
and
mov
in
scas
enter
sbb
adc
lcall
xlat
lock
in
add
test
xchg
insb
sub
aaa
aaa
xor
lret
imul
sti
sbb
ljmp
push
ljmp
sub
fisttps
or
sbb
cmp
xor
rcll
or
sbb
gs
xor
push
sbb
add
mov
je
dec
pop
push
mov
mov
mov
xor
loope
cmp
fcomip
and
inc
cld
mov
fisttpll
scas
mov
pop
jne
mov
in
adc
leave
inc
fistpll
je
sub
test
shrb
ja
dec
cwtl
das
movsl
fcmovu
dec
push
dec
imul
loope
cwtl
mov
insb
and
add
and
or
rcrb
dec
dec
add
sbb
sbb
bound
fcoms
and
movsb
jo
out
aaa
mov
insb
lods
cmp
lcall
jg
inc
push
xor
jae
and
ds
mov
cmc
fs
jle
mov
test
aas
in
rolb
push
or
jnp
and
dec
mov
sbb
push
sub
sti
adc
mov
inc
inc
inc
cmp
test
std
jbe
imul
fxch
lock
jge
jg
mov
sub
add
sti
push
popf
arpl
adc
pushf
stc
das
clc
push
mov
mov
jns
sbb
push
sub
aas
nop
movsb
leave
arpl
mov
pop
jno
mov
in
jmp
es
sti
aam
shrl
push
mov
lds
dec
stos
movl
inc
mov
pop
das
cmpsb
or
int3
inc
popf
adc
inc
mov
mov
sub
cmc
or
movsb
jge
sarl
mov
mov
mov
call
das
jp
cmp
fsubs
test
out
xchg
out
cmpsl
pop
fisttpl
mov
pop
push
jnp
cmpb
sti
cld
inc
lcall
stos
xor
xchg
add
scas
push
enter
jns
scas
push
cmc
dec
scas
dec
mov
neg
int
mov
mov
andl
mov
xchg
sahf
dec
mov
int3
data16
sub
test
inc
inc
int
aam
ret
out
jb
bnd
test
mov
add
pusha
adc
cmp
pop
pop
jmp
inc
shlb
rcll
sub
sbb
stos
arpl
jmp
or
push
bound
int3
test
ss
pop
repnz
pop
xchg
mov
test
push
sahf
ret
push
jns
mov
cld
cmp
mov
mov
mov
cmp
jge
sub
pop
lahf
pop
pop
or
sbb
fs
lret
fs
das
or
inc
mov
xchg
cmp
pop
jno
pop
popa
add
push
insl
out
push
pop
aaa
pop
push
test
and
pop
adc
pop
cmp
add
aam
cs
sbb
fiaddl
jecxz
bound
pop
dec
pushf
dec
iret
sbb
shl
ds
dec
mov
add
adc
sbb
lds
and
ja
mov
push
jns
addr16
push
xchg
orl
cmp
loope
cmp
fcmovb
sbb
xor
mov
and
mov
shll
cmp
and
xchg
inc
sbb
add
das
mov
push
xchg
adc
push
ret
sbb
nop
jmp
sbb
test
cs
push
out
fcompl
lret
addr16
test
sbb
ret
sub
lea
cli
sarl
fldenv
loopne
push
sbb
jl
int
jbe
mov
int3
leave
mov
dec
enter
cmp
testl
sti
mov
fmull
pushf
fsub
inc
mov
jns,pt
jne
mov
das
fdivl
jmp
fsubs
bound
loope
sub
sub
xchg
lock
sub
test
mov
int
popa
int3
push
add
stc
hlt
icebp
cwtl
stos
dec
or
sub
arpl
flds
rorb
push
inc
scas
inc
push
sub
andb
cmp
inc
xchg
inc
xchg
addr16
or
cmp
rcrl
inc
out
add
sub
dec
mov
rcrl
pop
jp
test
sub
incl
cmp
inc
push
inc
insb
xchg
add
insl
cmp
repz
xor
add
sbb
mov
aaa
jo
mov
ficoml
scas
push
pop
int
dec
loope
cwtl
mov
mov
jae
or
xchg
jnp
xor
lods
and
daa
addb
inc
ret
cld
rcr
leave
scas
fisubl
mov
jg
ret
adc
lock
inc
jns
cmp
pop
mov
add
out
xchg
inc
scas
nop
and
loope
mov
mov
mov
jno
ss
sbb
sub
call
jnp
xchg
mov
lret
cmp
sbb
in
rolb
insl
cwtl
or
loope
imul
icebp
fwait
pop
mov
push
jbe
cmp
test
push
cwtl
pop
jg
fs
shlb
add
jmp
pop
mov
jnp
lcall
lock
xchg
jo
mov
jno
sub
cmp
jmp
popa
ss
lods
pop
and
pop
mov
ds
add
jnp
xchg
pop
inc
jno
sbb
sub
mov
sub
xor
inc
jl
jg
cmpsb
ret
lcall
and
jns
rclb
bound
add
scas
jmp
je
lods
ljmp
pop
cld
icebp
std
or
divb
ret
in
dec
mov
loop
xchg
xor
das
dec
fisubrs
pop
sbb
addr16
test
sbb
push
addr16
and
mov
daa
pop
or
xchg
mov
in
xor
jmp
cmp
push
dec
dec
ljmp
xchg
out
and
xor
dec
fnstsw
or
shl
gs
loope
xor
hlt
rcll
pushf
xlat
roll
dec
and
out
inc
push
out
dec
mov
add
xchg
sti
push
aam
xlat
pop
mov
mov
or
int3
mov
inc
out
push
fcompl
mov
jnp
dec
mov
mov
jecxz
mov
daa
xchg
push
movsb
fldt
mov
in
inc
jg
test
mov
cs
push
fs
or
loopne
data16
cmp
lcall
push
fwait
sbb
jge
pop
mov
stos
xor
inc
cmp
andl
lds
outsl
sub
scas
ljmp
push
inc
clc
cli
cmp
mov
adc
mov
lcall
push
loopne
mov
in
pop
push
shll
sarb
in
inc
fldl
cmpsb
pop
addr16
ret
outsl
push
popf
jne
xor
xor
cs
outsb
mov
arpl
cltd
ficoml
jle
push
lahf
dec
outsb
fisttps
push
jbe
push
jo
lret
lret
aad
mov
mov
enter
jb
cmp
dec
xor
outsb
test
mov
xchg
pop
xchg
adc
mov
and
out
xchg
pop
in
lret
iret
mov
insl
pop
add
int3
xchg
les
shll
xchg
arpl
push
push
xchg
jmp
or
mov
imull
dec
fs
and
fmuls
lods
sbb
repnz
adc
inc
popa
mov
dec
push
mov
pop
add
add
push
jb
jo
push
out
sbb
jmp
mov
xchg
xor
or
outsl
loope
mov
scas
xchg
dec
in
ret
imul
loopne
sbb
fcomps
aad
ret
stos
inc
add
cld
arpl
sbb
sub
ljmp
mov
sti
inc
fisubl
outsb
ret
scas
addr16
in
pushf
stc
je
cmp
mov
jle
fstpl
cltd
add
jg
daa
push
cmpl
mov
aas
xchg
in
ljmp
sbb
cli
int
inc
cmpsb
lds
xchg
stc
rclb
pusha
mov
jno
divl
pushf
push
lock
ret
pop
adc
jecxz
sbb
mov
xorl
cmc
or
mov
fimuls
fistps
mov
fs
test
jne
lret
out
lret
dec
xchg
or
cmp
subl
nop
adc
std
jle
dec
popf
cmpsl
cmpsl
jnp
dec
mov
sbb
clc
pop
sbb
loopne
repz
sbb
pusha
lea
mov
jae
adc
mov
dec
scas
mov
inc
mov
inc
imul
sarb
fsubs
mov
xor
jmp
dec
negl
jne
sbb
mov
mov
test
jecxz
or
push
dec
fs
imul
jne
mov
cld
fisttps
xorb
push
mov
out
outsb
pop
mov
adc
ljmp
fdivr
mov
loopne
movsl
loope
addr16
int
dec
xchg
enter
nop
movsl
enter
push
push
scas
or
outsb
test
jl
and
add
xchg
je
aaa
xchg
iret
push
sarl
or
and
js
lea
jg
mov
fstpl
popf
pop
xor
adc
sub
sahf
mov
mov
sti
pop
sbb
add
addl
cs
lods
inc
fcom
addr16
cmp
popa
fucomip
pop
or
scas
mov
and
pop
cwtl
addr16
mov
out
popa
jmp
push
mov
cmp
jns
mov
sbb
add
stos
es
jns
add
aam
fsub
clc
pushf
lock
mov
stc
data16
cwtl
or
fsubrl
lret
inc
push
dec
xchg
icebp
sti
add
aaa
out
movsl
shrb
movsb
fwait
fwait
in
repnz
jg
pushf
vmovhps
xor
xchg
mov
repz
ret
or
imulb
loopne
rol
pop
sbb
cmpsb
mov
mov
hlt
fbstp
mov
ret
fdivl
movsl
and
cmp
scas
pop
add
mov
insl
int
dec
mov
cwtl
call
in
lahf
sbb
push
lock
leave
fcoml
cmc
pop
pusha
aas
dec
ljmp
int3
dec
inc
xor
js
jecxz
insb
jmp
fstpt
xchg
mov
leave
nop
sbb
icebp
popa
in
push
fs
adc
jge
cld
push
fstpl
jns
mov
mov
in
mov
cli
add
mov
rorl
pop
aam
adc
or
cmp
xchg
inc
xchg
jae
fists
push
rcl
adc
mov
pop
mov
hlt
ljmp
sbb
out
arpl
lahf
or
divl
sti
ret
push
in
loopne
scas
in
cmpsb
ljmp
mov
dec
and
xor
mov
stos
icebp
adc
mov
pop
push
movsb
jne
cmp
shll
sti
sbb
jecxz
scas
jo
adc
xchg
sbb
imul
dec
aaa
scas
xchg
insl
mov
pop
loop
les
add
mov
movsl
loopne
mov
sbb
xchg
mov
sar
jne,pt
mov
movsl
std
pop
shl
ja
dec
cmpsb
enter
sub
xchg
jl
in
pop
int
sbb
into
xor
and
xor
jl
psrld
cmpsb
xor
repz
push
mov
je
or
ret
pop
add
pop
and
lods
mov
cmp
sbb
adc
xlat
mov
jbe
int3
xchg
out
cli
sbb
cmpl
mov
push
cmp
test
adc
xchg
sub
lock
mov
rcrb
aam
xchg
add
fimuls
insb
mov
fldz
in
jle
rcrl
test
hlt
ljmp
ja
xchg
test
enter
xchg
or
sbb
mov
add
bound
mov
pop
inc
dec
push
ficoml
arpl
pop
pop
test
sbb
mov
das
loopne
shlb
jb
adc
pop
and
loopne
xchg
loop
pushf
stc
pop
mov
call
pop
jge
pop
mov
lock
insl
popl
nop
fucom
xchg
test
int3
les
loopne
fiaddl
in
or
xchg
mov
in
out
imul
xor
lock
stc
and
div
dec
xor
jo
mov
sahf
pop
clc
aaa
es
loopne
das
jmp
push
ja
cmp
xor
in
adc
aam
mov
mov
or
fld
sbb
jecxz
lods
dec
mov
pop
movsb
shrl
mov
and
mov
aam
jns
rclb
sbb
and
int
sbb
add
adc
mov
cmp
sub
lea
arpl
sar
inc
sbb
sbb
repnz
push
mov
mov
jecxz
fidivl
repz
jo
mov
fidivrl
sbb
testb
mov
and
and
leave
adc
pop
addb
cmp
enter
std
adc
das
pop
popf
aam
outsl
fdivr
pop
icebp
pop
das
inc
inc
pop
push
push
xchg
clc
xor
push
mov
ljmp
xchg
aas
mov
jle
std
les
mov
mov
pop
addr16
sbb
xor
push
in
sub
mov
arpl
or
push
or
fwait
add
scas
pop
mov
mov
inc
sbb
and
rcr
lret
sbb
adc
lods
sub
hlt
jb
or
mov
or
sub
and
sbb
movsb
ljmp
sbb
aaa
test
cli
pusha
std
jae
sbb
cmp
push
insb
mov
movsb
xchg
fists
out
add
push
inc
cmp
sbb
pop
es
lock
shl
mov
or
inc
les
mov
int3
xchg
aam
or
or
jo
outsl
scas
mov
jecxz
jne
rcl
push
cmp
int
xchg
js
mov
xor
mov
cmp
orb
int
sbb
in
mov
mov
aam
jecxz
fstpl
and
rorb
xor
outsb
popf
cs
xchg
dec
cli
aam
sub
mov
add
pop
dec
lahf
inc
test
xor
and
lcall
nop
mov
mov
push
ljmp
fcoms
mov
ljmp
lock
cmpsl
test
inc
out
pop
ja
rclb
insl
xchg
les
xchg
mov
mov
je
and
sbb
out
xor
into
xchg
push
sbb
mov
mov
fisubrl
stos
pop
xchg
mov
adc
testl
adc
push
test
negb
jmp
fldcw
pop
xor
jo
pop
lret
pusha
mov
adc
addr16
mov
xchg
push
popa
sti
mov
xchg
arpl
sbb
sti
pusha
cmpsb
xor
push
push
mov
and
push
push
dec
dec
popa
fldl
int
pop
push
stos
mov
iret
sbb
bound
pop
sub
xchg
popa
lods
fneni(8087
and
and
andl
jge
ret
fcomip
leave
cmp
lret
jno
gs
ret
sbb
cltd
scas
add
inc
ljmp
xorl
mov
mov
frstor
insl
in
dec
mov
repz
mov
inc
insb
inc
push
dec
sbb
repnz
mov
inc
mov
fs
icebp
fnsave
inc
out
ja
sbb
adc
ret
loopne
popfw
add
mov
fadds
jecxz
inc
and
sbb
rcrl
repz
jo
jle
lret
gs
xor
add
cwtl
outsb
pop
fstpt
gs
sbb
inc
dec
movsb
js
xchg
xor
cmpsl
mov
int3
jecxz
mov
cmpsl
jg
mov
xchg
stos
push
mov
in
and
scas
test
loope
mov
shll
pop
out
test
and
cvtdq2ps
push
das
loopne
mul
in
loopne
jae
shrb
rcrl
jge
and
cwtl
std
fidivl
int
leave
les
or
fwait
dec
jg
mov
fwait
cli
cmp
cmp
test
int
xchg
mov
fmuls
outsb
xchg
fstpl
test
cmpl
daa
push
aad
mov
shlb
mov
add
sbb
mov
ljmp
push
mov
push
sbb
fwait
inc
xor
and
jae
xlat
mov
dec
pop
bnd
int3
mov
pop
aad
mov
ret
mov
xchg
inc
or
jae
int
iret
les
pcmpgtd
aad
lds
sbb
sbb
cmp
lret
repz
pop
ljmp
out
sbb
pop
testb
lret
clc
mov
loopne
hlt
ret
sbb
in
lret
frstor
insb
mov
jne
sbb
and
fdivrl
xchg
inc
loope
das
mov
mov
mov
or
mov
pusha
lea
jae
fcoms
repz
xchg
pop
loopne
int3
adc
arpl
push
ljmp
xchg
cli
or
jp
fisubs
ss
push
jecxz
jg
rcr
clc
push
fcompp
call
adc
call
popf
fdivr
fdivl
nop
aas
jo
jge
loopne
imulb
movsb
aad
lcall
sub
jno
or
sbb
xchg
fcompl
sub
mov
mov
ja
shrl
mov
fldcw
inc
or
adc
lds
test
mov
mov
cmp
fbld
xor
xchg
jne
adc
out
imul
jp
ret
mov
and
in
dec
nop
pop
out
mov
testb
fldt
aaa
lret
cmp
arpl
cmpl
test
cwtl
push
jmp
xor
pop
dec
jno
nop
mov
xchg
int
mov
push
inc
add
xchg
movsb
imul
out
in
or
mov
jmp
es
test
xor
mov
xchg
lea
iret
stos
sbb
push
aam
fwait
mov
add
repz
inc
mov
mov
arpl
adcl
jmp
pop
into
mov
in
lods
ret
ret
mov
lcall
mov
inc
pop
fistpl
mov
cwtl
or
xor
push
out
insl
inc
xchg
lods
movsl
xchg
push
jg
ret
test
mov
pop
fucom
xchg
push
push
cmp
sbb
push
mov
mov
dec
imul
inc
outsl
pop
fisubrl
xor
enter
out
gs
cmpsl
cmp
dec
les
int3
xchg
mov
rolb
cli
push
sbb
pop
sub
stos
mov
sub
fnsave
inc
sbb
xchg
xchg
xchg
xchg
add
pop
in
jge
cmpsb
jmp
test
push
pop
loopne
out
sbb
sbb
sbb
mov
stos
mov
hlt
sub
sbb
add
rolb
test
movsl
lds
cmp
push
aam
add
iret
fsubl
sbb
faddp
inc
daa
xchg
loop
fnstsw
das
dec
sbb
jnp
lret
inc
enter
ret
push
or
pop
sub
jnp
xor
xor
imul
fistps
iret
cmp
mov
jp
dec
fisubrs
aad
sbb
dec
sbb
mov
mov
jg
fdivrs
test
arpl
cmp
adcl
fdivrs
cltd
fyl2x
into
mov
aam
in
mov
add
push
xchg
pop
jp
repz
jp
pop
pushf
pop
mov
push
mov
and
lock
out
sbb
mov
jg
jg
lcall
repnz
addr16
aas
cmp
fsub
and
inc
push
pop
and
movsl
aad
leave
mov
stos
sbb
lods
inc
adc
aam
addr16
sbb
lea
and
sti
sub
inc
sbb
aad
push
sub
adc
fidivl
sub
jmp
loop
push
dec
popf
mov
nop
dec
orb
pop
mov
movsb
cmp
loope
ficoml
pop
loopne
stc
sarb
insb
inc
adc
pusha
and
cmp
jmp
rcrl
push
lret
jnp
xchg
fnstsw
adc
imul
stos
adc
sbb
sbb
int3
test
or
ret
hlt
xor
daa
lret
pop
je
stos
ljmp
fucom
ret
sub
test
xchg
cmp
clc
mov
lea
cmpps
scas
lret
sbb
js
shl
mov
fstpl
jnp
hlt
cs
xchg
inc
aas
cmp
push
jns
daa
pop
test
sbb
mov
insl
push
fwait
lods
mov
repz
mov
in
mov
inc
mov
jecxz
and
jno
adc
jl
push
cltd
xchg
xorl
xchg
ret
cli
sbb
xchg
aam
cmp
mov
out
or
sub
sbb
xchg
dec
or
adc
add
movsl
mov
mov
orl
or
add
out
mov
cmp
sbb
int
test
aad
out
adcl
and
sbb
fildll
lds
push
pusha
mov
cmp
popa
ficoml
or
lret
push
push
xabort
push
push
movl
cs
nop
mov
push
pusha
push
sbb
pop
pop
addr16
jns
sbb
jl
orb
push
mov
sbb
cmp
jmp
mov
mov
adcl
sub
cltd
cmpsb
inc
data16
xchg
sub
cmp
jo
stos
cmpsl
xor
mov
aas
adc
repz
es
dec
or
imul
sbb
mov
shrb
push
clc
push
cmp
lahf
flds
mov
push
xor
mov
or
fcomp
pop
mov
imul
sub
inc
xchg
push
pusha
pop
ret
popa
jae
ret
xor
sahf
fmulp
imul
sub
ss
jo
pop
sbb
out
mov
inc
add
mov
push
lock
or
xor
rcrl
insb
cmp
adc
cli
andl
outsl
lods
push
push
insl
stos
mov
rorb
ja
lods
xor
lods
es
nop
xchg
leave
mov
or
add
int3
sti
inc
jns
dec
jg
pop
icebp
mov
rolb
hlt
xor
cmp
andb
out
cmp
fwait
out
cmp
add
pop
dec
or
sbb
test
in
push
nop
mov
mov
loopne
out
scas
xchg
dec
cmp
adc
sbb
xchg
out
adcb
sbb
or
dec
mov
mov
sbb
push
xchg
xchg
add
stc
add
fsubrs
je
leave
xor
ret
or
fcomps
popa
sbb
lcall
add
imul
rorb
loop
jecxz
mov
scas
cmp
jp
mov
cmp
lret
int
push
gs
loope
push
pop
ljmp
xchg
dec
cmpsb
ret
mov
pop
cmp
fmul
mov
mov
lods
repz
and
xorl
sti
int3
scas
mov
in
fsubrl
adc
rorb
cmpb
adc
popa
sub
fisubl
rorb
and
dec
sbb
add
push
int3
jne
sub
push
sarl
mov
jmp
push
icebp
pop
scas
dec
loop
cmp
test
push
inc
push
mov
je
mov
xchg
fnstcw
imul
fwait
es
pop
push
insl
mov
push
std
cld
jnp
or
push
icebp
push
mov
mov
add
sbb
add
outsl
xchg
pop
push
jnp,pt
fnstsw
mov
icebp
sbb
mov
inc
addl
push
loopne
notl
mov
aam
mov
cmp
xchg
insl
pop
test
cmp
data16
cmc
jge
xchg
mov
in
lock
imul
imul
loope
cmp
mov
lcall
dec
push
mov
or
rol
pushf
data16
test
sub
mov
inc
lock
sbb
mov
int
xor
jno,pn
xchg
lock
xor
jge
adc
test
stos
ret
scas
sub
inc
out
mov
dec
mov
enter
lcall
enter
cmc
fstpl
xchg
lock
lret
mov
adc
dec
int
pop
pop
cli
std
ljmp
test
popa
stos
sahf
cmp
mov
shl
mov
cmp
lock
mov
insb
cmpsl
mov
sbb
pop
pop
and
mov
pop
mov
push
xor
sbb
push
int
out
fsubl
int
or
dec
push
pop
mov
mov
fisubs
cli
shlb
sbb
test
lds
test
insb
daa
sub
nop
pop
mov
or
arpl
pop
and
cmp
jg
mov
test
jb
out
test
cs
mov
mov
jae
sub
push
aam
jo
rorl
into
pop
jg
idiv
loope
xchg
repz
test
adc
gs
mov
les
xchg
mov
sbb
pop
jnp
jg
xchg
jno
je
mov
or
mov
mov
dec
std
and
or
mov
scas
pop
jmp
out
test
push
mov
shl
xbegin
dec
addr16
push
mov
xchg
cmp
insl
inc
pop
arpl
and
mov
inc
xchg
mov
leave
insl
gs
push
mov
xchg
add
add
subl
ja
shl
test
mov
lock
out
ret
cli
sbb
push
sbb
lret
jns
aam
push
and
add
icebp
pusha
fidivs
dec
fists
mov
mov
daa
mov
out
fstpt
fcoms
pop
jns
sbb
dec
out
xchg
sbb
and
mov
stc
or
pop
and
ret
xor
out
pop
cmc
fisttps
or
sahf
add
jb,pn
mov
cmp
jle
subl
xchg
jp
dec
xchg
addl
rcr
aas
adc
mulb
andb
loop
xorl
popa
sbb
xor
rcr
popf
loop
push
insb
ret
mov
xchg
mov
jae
xor
les
mov
pop
vcmpps
jl
sub
inc
arpl
scas
and
movsb
jmp
push
nopl
mov
test
fdiv
and
sub
inc
push
in
sub
dec
sbb
fildll
mov
icebp
test
aas
pusha
int3
push
push
push
and
dec
mov
and
cmp
adc
fistps
movl
xchg
fcmovu
imul
addl
jg
push
pop
fsubl
jnp
popa
jo
dec
dec
adc
pusha
mov
sbb
push
mov
dec
js
lret
mov
pop
out
in
fsubl
lret
ret
mov
lret
cmp
scas
jge
sti
add
adcl
or
cli
aad
lret
sti
sbb
popa
or
scas
inc
lret
xchg
and
mov
ficoml
dec
mov
dec
lret
pop
movsl
aam
out
xchg
in
stos
aad
sub
add
loop
push
or
add
lret
sub
push
or
les
xor
ret
mov
lret
jb
mov
jne
lret
inc
jge
gs
sub
xlat
cli
jno
ds
roll
fcomp
in
mov
mov
cmpsl
les
push
shr
or
stos
ljmp
das
stos
and
daa
movsl
mov
lods
dec
push
inc
sahf
cmc
inc
ret
iret
xchg
push
mov
pop
xchg
dec
dec
mov
mov
adc
cmp
push
shl
adc
std
mov
sbb
mov
push
jb
push
aam
lds
cli
push
mov
sbb
or
xor
in
cmp
sahf
int
adc
inc
lods
loope
or
sbb
sbb
arpl
xchg
lret
pop
in
mov
lret
shlb
xor
sti
mov
test
push
or
or
xor
dec
test
leave
sub
jne
aaa
adc
pextrw
mov
lret
push
test
cmp
or
lods
jo
into
iret
icebp
iret
lock
outsb
dec
dec
jp
roll
in
scas
js
lret
xorl
and
shll
lret
and
mov
cmp
jbe
ss
cmc
mov
inc
cwtl
mov
xchg
lret
jmp
mov
addb
mov
xchg
pop
lret
sub
aam
dec
mov
lret
sbb
pop
stc
test
xlat
mov
pushl
cli
pop
dec
lret
sbb
cmp
xor
push
or
xor
dec
inc
push
rcr
push
pop
lret
adc
xchg
das
xor
cs
movlps
repnz
rol
jne
pop
insl
mov
mov
bound
shrl
sub
enter
shll
loope
iret
mov
movsb
dec
mov
rcrb
sub
fcmovnu
les
lret
sub
hlt
icebp
push
sbb
aaa
mov
push
fisubrl
inc
les
std
movsb
sub
jg
hlt
lret
xchg
lods
popf
loopne
shl
gs
lret
inc
into
nop
jmp
push
fwait
dec
lret
pop
loop
fnstenv
sahf
xchg
daa
addr16
xchg
cmc
enter
out
adc
dec
movsl
adc
add
test
lret
cli
rclb
jge
mov
or
insl
jno
jl
movsl
xchg
lret
jmp
je
loope
fsts
mov
pop
out
lret
xchg
mov
aas
cmp
outsb
sub
es
adc
lock
leave
nop
adc
iret
stos
ljmp
aas
mov
fwait
clc
fs
sbb
filds
mov
lret
cmp
dec
add
fnstenv
lret
mov
adc
sbb
mov
stos
popa
pushf
ret
das
dec
mov
aad
inc
sbb
jge
mov
dec
lret
orl
sub
mov
pop
add
sub
stos
dec
lods
xor
xchg
lret
and
enter
or
iret
cmp
cmpsb
push
sbb
inc
dec
mov
bound
xchg
jnp
dec
sbb
aad
push
lret
pushf
and
bound
idivl
aam
movsb
cmpsl
loopne
stc
sub
lret
cs
xlat
add
lods
jno
mov
lea
pop
lret
sbb
lods
jg
lret
aad
ficomps
arpl
cmp
cs
push
sub
lea
scas
lret
cmc
fcomps
mov
mov
aam
dec
lret
inc
sbb
mov
scas
dec
push
lret
and
sub
stos
leave
add
ret
push
and
gs
lea
mov
push
cld
lret
pop
or
shll
je
clc
inc
and
sbb
insb
fwait
pop
lret
rclb
les
dec
mov
cmp
ret
dec
pop
xchg
in
or
leave
mov
ljmp
adc
inc
lods
pop
lret
add
and
stc
sbb
xlat
push
int
mul
inc
inc
test
bound
push
cltd
dec
pusha
inc
dec
cld
lods
lret
inc
js
ret
mov
push
add
pop
sar
cmp
push
mov
xchg
add
cmp
ret
lret
mov
shll
leave
jmp
pop
iret
out
in
xchg
ss
or
and
rcrb
loopne
cmp
or
ret
xchg
lret
push
jno
call
mov
ds
mov
sub
jmp
out
es
mov
add
addb
out
mov
mov
lret
std
aaa
repnz
pop
cltd
mov
push
dec
xchg
cmp
jns
call
lcall
add
fcomps
pusha
jb
imul
popa
test
sub
inc
ror
mov
stos
mov
lret
fmulp
pop
add
jae
movsb
and
push
cmpsb
xor
push
into
inc
xor
adc
mov
shll
movsl
stc
xchg
lret
xchg
ljmp
pop
imul
adc
shrl
pop
shrd
iret
aas
jb
out
xchg
loope
dec
mov
push
cmp
fmul
cmp
scas
xchg
shll
leave
lret
cmc
ror
cmp
inc
sarb
xlat
sub
bound
dec
popf
sub
jg
cmp
lret
push
inc
test
stos
lds
mov
sub
dec
test
das
mov
in
lret
pop
pop
and
lret
rcrl
insl
sbb
push
lret
int
jecxz
jns
xchg
pop
lret
enter
das
mov
cmc
xor
lret
daa
adc
push
lods
icebp
sbb
ds
mov
imul
test
sub
mov
lret
stos
mov
xchg
ja
sahf
data16
test
jge
test
arpl
into
out
lret
pop
push
movsl
pop
mov
and
ja
daa
mov
lret
sub
cmp
push
ret
xor
icebp
dec
insl
cld
out
jmp
push
xchg
mov
out
lret
push
jl
push
or
cmp
les
mov
mov
repz
test
fs
insl
lret
jae
ret
inc
in
dec
lea
arpl
cmp
or
sbb
aaa
mov
lods
into
mov
dec
out
iret
clc
enter
arpl
inc
sarb
out
cmpsl
cmp
sti
push
insb
cwtl
scas
sub
sarl
pop
mov
push
stc
xchg
fistl
lret
cmp
lds
jmp
les
pushf
lret
xchg
fmull
pop
ljmp
cmc
jns
lods
pop
lret
stos
loopne
sub
rcrb
inc
in
call
and
lcall
cmp
adc
xchg
push
sbb
mov
add
dec
ffree
cmpb
inc
lret
bound
and
lret
cmp
gs
fnstenv
leave
jne
out
enter
lods
xor
mov
imul
scas
mov
int
lds
cmpsl
mov
inc
push
sbb
ret
ljmp
int
sub
test
data16
xor
and
cmpsl
stos
lret
cmp
xorl
cmp
or
mov
jmp
lret
push
pop
stos
sub
shll
leave
mov
iret
lcall
popf
push
dec
or
fsubrp
arpl
dec
shrb
mov
fsubrl
adc
data16
add
shrl
cmp
add
out
lret
cmpsb
lahf
hlt
jne
in
into
stos
lret
and
sub
xor
sbb
xchg
xchg
iret
rorl
in
lret
dec
jo
push
shll
add
sbb
or
adc
loope
scas
loope
loop,pn
mov
das
outsl
mov
popf
jmp
sbb
pop
bound
stos
sub
cmpsb
outsb
sbb
ljmp
mov
pop
das
xchg
dec
sbb
in
les
call
into
cli
scas
push
or
test
insl
push
int3
sbb
aaa
pop
fidivs
sbbl
loopne
cld
popa
outsb
jne
arpl
cwtl
push
sbb
pop
pop
in
xor
push
mov
and
or
lock
inc
mov
pop
cmc
js
push
lret
lock
xor
push
fdivs
xchg
xchg
std
stc
outsl
inc
rcrb
jo
insl
sbb
shlb
cli
add
data16
sbb
jno
mov
lds
xchg
inc
xor
xor
inc
sbb
jmp
sti
or
subl
cli
fcomps
mov
insb
or
lahf
outsb
inc
or
push
dec
or
adc
shl
push
jmp
fsts
sbb
loop
add
fdivrl
push
stos
cs
mov
inc
or
mov
jl
cmp
imul
lea
or
pop
and
fs
pop
pop
and
inc
bound
xchg
lcall
es
mov
push
pop
or
and
lock
in
mov
jb
cmp
icebp
fdivrs
rcrb
inc
fs
inc
adc
loopne
inc
mov
sbb
lcall
nop
pop
jno
shl
or
mov
xchg
xchg
pushf
js
sbb
dec
xor
cltd
gs
cmp
mov
pop
push
sbb
outsb
test
jp
popa
dec
fucomip
cli
xor
repnz
jmp
mov
pusha
cmp
stc
lds
movb
rcl
fstps
jne
mov
fdivr
mov
pop
cmc
jnp
cmp
lret
mov
or
xchg
and
lock
mov
sbb
dec
mov
xchg
inc
lods
inc
popa
mov
cmp
ja
aaa
stos
xchg
or
jmp
pop
nop
xor
loope
bound
popf
bound
xchg
xchg
xchg
push
lret
aam
cmp
jle
data16
sbb
hlt
lods
dec
sbb
mov
sub
dec
push
mov
sbb
pop
jo
fwait
adc
pop
sub
sbb
sbb
xor
pop
inc
jae
stos
arpl
test
cmp
pop
lahf
addr16
xor
push
das
mov
sahf
push
pop
cmp
test
mov
dec
scas
xchg
int3
push
in
pop
dec
int3
or
push
pop
mov
repz
fiaddl
inc
aam
int3
xor
inc
popa
dec
dec
sub
ret
shrl
lcall
cmp
rcrl
icebp
and
shrl
ljmp
int3
or
stos
sbb
pop
loope
mov
pusha
xor
cmc
dec
mov
cmp
loopne
subl
cmp
add
mov
mov
mov
jecxz
rcrb
jle
xchg
dec
sub
mov
jmp
pop
add
dec
mov
and
mov
test
clc
out
xlat
shrl
jo
add
push
loope
dec
xlat
adc
hlt
nop
fidivrl
aas
mov
xlat
add
mov
daa
or
cli
mov
or
out
shll
push
mov
sbb
sub
fstpt
adc
repnz
jecxz
les
mov
out
sbb
jnp
lahf
xchg
cmpsl
jne
sbb
mov
xorl
cmp
movsl
adc
cli
sbb
push
mov
lock
cmp
xchg
in
xor
es
mov
int
icebp
adc
fs
fldt
icebp
cmp
cvttps2pi
lret
push
push
fstpt
inc
mov
pop
inc
mov
adc
pop
jae
cli
jno
xchg
sub
jg
ror
scas
clc
pop
imull
sub
lret
int3
ret
inc
aad
outsl
repz
jbe
lea
or
lret
icebp
fmul
or
int3
lcall
pop
cmp
lret
push
mov
loopne
adc
leave
push
shr
mov
mov
mov
lret
int
lcall
and
mov
aad
jp
sahf
ret
push
sbb
cld
xchg
divl
stc
out
lret
push
sbb
pop
cmp
in
nop
out
in
jecxz
xchg
xor
sbb
mov
inc
xor
iret
mov
fidivl
cmp
pop
push
nop
dec
pusha
mov
or
mov
fwait
loope
and
cmp
cli
fcmovu
sahf
jmp
stc
sbb
sbb
std
lcall
xor
add
mov
sbb
fwait
and
mov
mov
dec
and
and
lret
pop
pop
pop
jne
stos
out
fldcw
add
xchg
push
mov
xchg
fcom
jge
shrb
sub
imul
pop
sti
add
sub
rorl
lds
loope
sbb
add
xchg
push
dec
sbb
call
xor
xor
push
test
xchg
lds
test
or
ds
push
orb
lea
rcll
cmc
ss
mov
mov
inc
sti
mov
or
outsl
outsl
in
cmpsb
push
mov
ror
xorl
jne,pn
adc
out
pusha
sub
lock
cmp
mov
decl
xor
test
jb
or
push
and
add
and
mov
mov
xchg
cs
or
sbb
inc
push
add
imul
scas
ljmp
loope
mov
cmp
pushf
or
es
and
push
lahf
sbb
fbstp
push
sbb
xchg
add
test
jno
jo
insb
arpl
jp
mov
inc
jle
mov
pop
stos
xchg
mov
or
jbe
cmp
add
xchg
outsl
scas
test
ja
std
push
pop
in
call
push
fisubrs
sbb
xchg
sbb
mov
ds
dec
jle
or
ss
cli
sbb
fnsave
inc
lret
push
mov
mov
xchg
mov
pop
dec
pusha
mov
add
in
mov
mov
sub
mov
ret
sbb
fstpl
push
adc
jno
sbbb
or
test
repz
sbb
adc
and
cmp
sbb
inc
fadd
and
mov
paddusb
mov
and
or
cmpsl
cvtps2pd
inc
shr
shll
adc
stos
xor
sbb
push
cmpsb
cwtl
mov
mov
cli
and
ffreep
bound
cld
and
cmpb
jmp
repz
or
notl
sahf
dec
cli
stos
rcrl
or
rcl
sub
jno
inc
fs
add
adc
pop
push
adc
bound
lods
cmpsl
repnz
inc
dec
pushf
clc
outsw
or
sbb
dec
xchg
mov
xchg
sbb
inc
mov
pop
test
cmpsb
xor
mov
outsl
psubw
inc
bound
dec
dec
mov
mov
xchg
cs
gs
cmp
lcall
sub
and
pop
inc
repnz
shll
pop
jbe
stc
loope
rolb
dec
in
inc
sbb
inc
xor
cmp
ret
adc
clc
stc
ja
inc
push
clc
xchg
jle
pop
fbld
mov
mov
inc
sahf
pop
xchg
pop
or
sbb
test
hlt
popa
mov
sbb
insl
lds
out
cmp
fimuls
jl
das
es
sbb
adc
je
sbb
scas
jl
pop
daa
and
sahf
fsubrs
xor
popa
inc
notb
test
call
jmp
push
jg
inc
outsl
push
add
jnp
movsb
mov
cmpsb
popf
enter
sbb
dec
sbb
jo
sub
aad
sbb
or
add
sti
stos
mov
add
xchg
push
inc
dec
pop
jo
pusha
cmp
cld
outsb
dec
dec
mov
daa
std
mov
lret
mov
orl
jge
ljmp
test
pop
xor
mov
aaa
cmp
jge
or
out
push
test
lret
call
jns
hlt
lret
pop
push
mov
sbb
lahf
test
mov
test
or
xlat
sub
dec
out
ljmp
add
dec
lcall
test
repnz
push
mov
push
sub
push
lret
dec
sub
xor
scas
ja
sbb
or
xor
js
lcall
dec
sbb
xchg
mov
mov
out
lods
jns
out
mov
int3
stos
mov
clc
mov
out
pop
inc
repz
mov
ja
cmpsl
pop
loopne
fsubs
jb
push
push
jo
sbb
pop
xor
jnp
cwtl
mov
inc
jge
or
xor
imul
inc
jg
or
js
jp
stos
movsb
jecxz
push
lock
fistps
push
dec
cwtl
or
fisttpll
int
mov
out
sub
pop
jg
ss
movsl
addr16
loope
cmp
bound
sbb
or
fwait
in
ja
sbbl
mov
or
imul
sbb
sbbb
test
add
mov
and
dec
cmpsb
sbb
dec
leave
mov
sbb
gs
aad
test
jp
xbegin
scas
pop
sbb
ljmp
mov
outsb
xor
xchg
shlb
aaa
daa
xor
xor
and
nop
loope
scas
cmpsl
adc
mov
test
add
xorl
popa
add
rcr
lret
hlt
pop
out
xor
stos
shll
adc
and
xchg
rorb
pop
sti
xchg
data16
inc
sbb
lret
aam
inc
mull
sbb
imul
lret
jmp
push
imull
rcll
inc
sarb
cmp
add
adc
cmc
shrb
sbb
adc
add
push
jb
fstps
cltd
je
sbb
and
push
int
sahf
call
mov
ret
lods
mulb
stos
mov
mov
pop
sbb
xchg
or
dec
inc
xor
adc
adc
mov
mov
sbb
inc
cli
pusha
jp
fimull
dec
add
mov
arpl
lret
enter
out
cli
insb
fnstenv
jge
jo
lock
ds
mov
test
xlat
mov
dec
xchg
cmp
jns
xchg
stc
cmp
xchg
notl
sub
daa
mov
or
inc
mov
inc
or
pusha
jns
rcl
aam
scas
fs
stos
sbb
out
in
dec
out
cld
out
cltd
push
imul
xchg
test
pushf
pop
pop
daa
dec
out
aas
je
and
fwait
jg
pop
or
fwait
sbb
pop
gs
jno
repz
pusha
mov
push
iret
ret
pop
rolb
xchg
bound
adc
pop
lret
pop
int
in
mov
jae
pop
andl
ljmp
pop
cmpsb
jle
aaa
jmp
aas
xchg
sbb
pop
mov
xorl
cmp
outsb
dec
dec
aaa
mov
imul
push
sbb
push
fistpl
out
test
fidivl
mov
mov
adc
adc
pop
adc
je
imul
shlb
ret
pop
les
cwtl
mov
adc
inc
mov
mov
es
xor
inc
xchg
xchg
jmp
imul
inc
mov
mov
dec
movsb
enter
sbb
ja
les
jl
sbb
cmpsl
fcomip
inc
push
scas
pop
ja
sub
inc
xchg
push
push
les
adc
jp
sti
or
arpl
xchg
pop
pop
adc
pushf
out
rcrb
cmpsl
scas
stos
jno
loope
adc
xchg
mov
cmp
sbb
mov
loope
inc
dec
dec
mov
mov
sbb
pop
xchg
add
js
sbb
sbb
push
popf
adc
loopne
lea
mov
xor
sbb
data16
dec
addr16
out
sub
dec
ljmp
fidivs
mov
in
cwtl
incl
or
sbb
xchg
pop
mov
push
jne
push
out
mov
inc
test
xchg
cmp
out
sarb
pushf
push
shl
out
dec
or
lods
rolb
cmp
push
hlt
dec
outsb
fsubrl
sbb
in
jns
sbb
aaa
or
mov
push
in
push
out
lock
mov
cmp
adc
daa
jnp
dec
dec
or
movl
xor
cmp
xlat
push
pop
push
lret
clc
inc
push
movsb
jb
pop
jmp
fildll
or
jno
clc
jnp
popf
mov
repnz
mov
iret
leave
hlt
cmc
inc
mov
fsubs
sbb
fnstsw
sbb
ret
xor
push
push
iret
ja
jb
jmp
test
lahf
mov
negl
sbb
popf
out
out
sbb
outsl
or
je
outsl
cmp
and
or
add
cmp
sti
sbb
stos
mov
aam
jmp
pusha
and
bound
out
jg
daa
sub
cmc
iret
pop
cld
jne
push
xchg
popa
insl
outsl
dec
mov
arpl
push
int
scas
adc
es
mov
mov
push
int3
adc
lods
lds
sbb
xchg
fsts
ljmp
pop
ljmp
jecxz
fucom
inc
mov
outsb
mov
xor
mov
jno
popaw
xchg
imul
cwtl
sbb
pop
jbe
jl
cltd
push
outsl
xor
mov
jne
xlat
jge
imull
xchg
mov
dec
xchg
arpl
das
mov
idivl
and
push
repnz
cmp
push
mov
or
int
xchg
xchg
in
and
mov
jp
into
pop
mov
mov
push
lcall
iret
hlt
xor
hlt
clc
std
aam
sub
cmpsl
pop
pop
jnp
mulb
lahf
push
inc
movsb
arpl
insl
pushf
fst
add
imul
cld
xchg
int
aad
push
jecxz
push
push
aam
cwtl
jmp
pop
sbb
test
gs
mov
lret
lcall
nop
loop
rcl
sub
add
dec
xchg
fcoms
pop
pop
pushf
or
sahf
jns
mov
lahf
gs
push
jge
fcmovnbe
push
shrb
and
loope
jae
arpl
inc
pop
lea
cli
xchg
nop
dec
xchg
test
pushf
sbb
in
pop
cmc
aam
sbb
ds
divb
daa
mov
adc
movsl
test
mov
rclb
adc
pop
pop
cmp
sbb
or
xor
sub
jge
xchg
or
cmpsb
es
jecxz
sbb
mov
imul
mov
test
insb
mov
mov
mov
cmp
lret
add
sub
shrl
add
sub
mov
call
dec
ret
loop
subl
mov
mulb
push
movsb
ljmp
sbb
mov
and
or
adc
mov
fnsave
ja
jne
pop
jp
pop
int3
int3
pushf
mov
sub
call
popf
insl
ror
cltd
xor
push
xchg
pop
xchg
pop
sbbl
sub
or
scas
ror
lock
cmp
lret
in
push
fldt
ljmp
push
dec
int
ja
repnz
int
sbb
mov
jl
sti
pop
push
push
mov
fstl
aad
out
or
adc
cs
push
push
loop
ja
int3
cmp
rclb
aad
sbb
cmp
and
lods
and
xchg
mov
pop
je
cmc
addl
in
mov
in
cmp
sbb
test
sti
test
in
push
cmp
int3
cld
es
test
int
pop
push
mov
pop
repnz
adc
shlb
pop
popa
sub
sbb
jno
and
add
int3
push
stc
sti
pop
adc
ljmp
xchg
sbb
dec
inc
outsb
outsb
sub
outsl
jmp
dec
dec
sarl
leave
sbbl
dec
pop
subl
xorl
test
add
insl
jle
cmpl
pop
call
add
pusha
enter
lcall
fmuls
xor
jae
mov
xor
and
pop
push
or
jecxz
mov
test
jnp
inc
movsl
out
rcl
js
pop
xchg
inc
popf
fucomip
mov
mov
jno
lret
lahf
mov
jns
mul
shrl
std
mov
mov
andl
lock
sbb
ret
js
les
add
mov
clc
xor
stos
mov
add
sahf
fadd
out
lret
insb
cmp
stos
pop
mov
xor
mov
addb
inc
or
in
adc
jno
pop
dec
aaa
sbb
jnp
ljmp
int
dec
pop
xchg
pop
inc
xchg
mov
std
and
cmp
push
testb
lcall
fdivr
clc
mov
stos
in
out
ret
push
xor
das
pop
addr16
imul
sub
sti
insl
lods
inc
mov
in
mov
push
push
sub
arpl
jne
jbe
enter
test
lret
xchg
imul
dec
adc
loopne
or
inc
add
xchg
in
jbe
jo
push
sbbl
insb
pop
inc
mov
in
sub
fidivrl
int3
xchg
lea
pop
jns
push
mov
inc
or
ss
fnstcw
xlat
leave
fcomps
inc
aam
mov
fimull
jp
cmp
dec
fnstcw
jne
addr16
outsl
je
ds
sbb
es
cwtl
mov
xor
push
sub
xchg
xchg
or
clc
aas
les
nop
outsb
fisubs
or
mov
or
jne
leave
push
shll
loopne
sbb
jns
xor
lret
sbb
das
in
insl
jnp
sarb
andl
add
lcall
aad
rorb
repz
sti
ljmp
imul
mov
inc
aad
and
inc
or
pop
cmp
mov
lret
sahf
mov
mov
jns
xor
pop
aaa
cmp
fwait
je
jge
xchg
fildl
xchg
jmp
stos
mov
inc
hlt
xchg
mov
ljmp
dec
lret
mov
aaa
ljmp
push
xor
mov
js
pop
push
push
or
xor
xchg
push
jg
clc
rcl
inc
add
ljmp
sub
insl
sbb
iret
int3
xchg
mov
mov
jecxz
sbb
fadd
je
gs
mov
or
test
mov
pop
imul
popf
inc
xor
and
push
fstp
jne
pop
push
jno
push
hlt
arpl
sahf
push
cmpsb
out
mov
insb
aas
pop
push
jle
cmpsl
ljmp
cmp
cmp
std
mov
mov
xchg
aas
ficomps
fsub
add
inc
or
cld
jmp
enter
cmp
xchg
lret
and
loop
inc
iret
sbb
sub
lea
mov
push
mov
lods
dec
or
sbb
mov
xor
pop
add
ljmp
loop
jbe
push
xor
js
and
inc
pop
ljmp
sbb
fistps
inc
lods
imul
lods
fcmovb
das
mov
cwtl
fucomi
mov
in
out
xchg
cltd
fnstenv
xor
xchg
test
inc
xchg
sbb
pop
ror
jne
sbb
decl
mov
jge
negl
dec
sub
mov
js
int
and
shlb
fnop
mov
ret
leave
push
fmulp
mov
repz
and
int
push
fsubl
lea
jbe
clc
incb
mov
jl
popa
xchg
or
or
movsb
push
sbb
jl
fstpl
xchg
jge
mov
fwait
xor
jb
push
push
xchg
cmpl
pop
out
sub
dec
pop
mov
das
inc
sbb
and
lret
xchg
test
hlt
fmull
test
das
jmp
lods
mov
out
dec
insl
push
enter
scas
rcll
and
or
mov
or
shrl
stos
into
push
lret
jg
adc
lret
int3
lods
push
stos
je
jb
lret
dec
mov
inc
test
cld
lds
cmp
rcrl
js
lret
test
lock
aad
fdivrs
or
stc
int
xor
lods
popf
xor
xchg
xchg
xor
cmc
mov
jno
jae
xor
aaa
lret
push
ja
loop
mov
lods
call
jg
arpl
cmp
and
addr16
mov
ficoms
lret
dec
mov
iret
test
adc
dec
mov
lret
stos
loope
jecxz
adc
xor
imul
das
jnp
aad
xor
int
push
push
sbb
cmpsb
bound
les
ret
and
cmp
lret
mov
pop
out
lret
mov
add
sbb
ret
test
cli
lret
gs
test
rcll
mov
or
or
cwtl
mov
xor
lret
add
inc
mov
inc
pop
adc
shrb
mov
mov
sbb
cli
lret
aaa
mov
cmc
fxch
cmp
aas
pop
lret
imul
shr
jg
push
mov
push
mov
int
lret
sbb
pop
fwait
iret
lret
stos
enter
fs
lret
xchg
sbb
mov
sbb
inc
push
lret
jecxz
sub
mov
fisttps
mov
cmp
adc
test
dec
xor
movsl
push
push
mov
insl
dec
imul
mov
and
ror
adc
or
mov
jl
loopne
shrl
dec
in
push
add
mov
pusha
lret
mov
std
rorb
lret
cmp
xor
and
aaa
dec
bound
pop
mov
xchg
roll
ds
stos
fs
es
lret
or
out
loop
sub
and
push
fdivr
lret
mov
or
push
sbb
lret
sbb
sub
push
pop
mov
inc
add
dec
and
lret
out
movsl
add
adc
lahf
pop
xchg
in
mov
sbb
mov
mov
in
sub
movsl
mov
mov
aaa
mov
cmp
mov
add
adc
test
push
dec
loopne
xchg
lret
mov
mov
std
push
out
popa
cmp
lret
int3
cmp
fidivrs
push
adc
enter
std
cld
sub
ja
fiaddl
add
adc
ss
aam
mov
jg
inc
sub
xor
stc
pop
lret
jo
or
mov
jne
popf
out
jae
das
dec
lret
xor
mov
lret
mov
and
out
rcl
rclb
push
loop
mov
arpl
dec
out
and
sti
mov
dec
out
cmpb
das
fcmovne
jnp
xor
int3
stos
aam
mov
popa
icebp
dec
lret
ja
sar
push
sbb
dec
mov
push
jb
jno
xor
out
dec
jge
dec
push
outsb
aaa
mov
movsl
lds
and
lretw
cltd
int
push
cwtl
mov
cmp
jle
cmpsb
lret
xchg
loop
ds
enter
jmp
pop
xchg
push
sub
lret
mov
faddl
sub
sub
add
divl
adc
and
lret
rorl
shl
jl
lret
movsl
cs
cld
cltd
sub
mov
repz
or
call
lret
testl
and
nop
lret
inc
cwtl
pop
lret
xchg
fiadds
mov
in
and
insb
mov
fwait
xchg
sub
mov
mov
jle
int
stc
cmpsb
rorb
jnp
push
xchg
inc
pop
mov
insl
iret
jp
sarb
push
jg
mov
mov
aam
sti
ljmp
push
call
pop
lret
cmp
aas
inc
lret
mov
iret
xchg
leave
enter
sub
cmp
lret
clc
sbb
ja
lock
or
push
push
xchg
sti
ds
xor
push
lret
mov
out
and
mov
in
imul
or
cld
lods
jns
lret
jbe
mov
lret
mov
xlat
dec
push
jmp
lret
ljmp
sub
mov
or
imul
in
xor
lret
das
xchg
nop
mov
jbe
mov
push
mov
cs
jg
in
mov
cltd
lret
xchg
and
mov
jg
ja
lret
popf
xchg
unpckhps
jo
lret
testb
test
hlt
in
xchg
mov
xor
addr16
lret
mov
dec
frstor
shll
jno
cld
xchg
dec
popa
lret
gs
mov
mov
hlt
cmp
lret
test
rcl
lret
push
fld
clc
inc
jae
lret
jb
jno
outsl
ret
mov
lret
sahf
rorl
out
sbbl
cmp
neg
sub
arpl
xor
sahf
sbb
jno
aam
cmp
in
loope
xor
pop
lea
into
jae
jns
lods
mov
lret
fnstsw
pop
adc
cmc
xchg
lret
pop
js
and
mov
and
sub
lret
dec
andl
sahf
rcrl
dec
in
jae
fwait
sbb
imul
lcall
push
fmull
dec
lret
test
lret
out
mov
mov
mov
clc
dec
loope
fprem1
xorl
mov
or
adc
enter
xor
or
stos
push
scas
aaa
adc
je
push
xor
ljmp
or
stc
nop
mov
mov
jne
sub
mov
cmpsl
ss
je
jecxz
cwtl
sub
mov
or
int
fdivl
aaa
movsl
frstor
push
clc
int
fwait
int3
pusha
inc
lcall
xor
lret
scas
dec
daa
sub
dec
lea
sbb
sti
test
lret
sub
mov
lret
pusha
xchg
mov
mulw
jno
popf
push
cs
or
push
orb
in
addr16
pop
mov
dec
lret
pop
sub
cmpsb
and
cwtl
or
pop
jle
inc
dec
or
lods
sbb
sub
pop
jmp
sub
dec
push
out
ds
or
push
shll
and
lahf
iret
roll
aad
cld
test
cli
lret
cmpsl
addr16
cmp
mov
cmp
xor
int
bound
dec
xchg
dec
repz
jge
lret
into
adc
loopne
mov
outsl
and
dec
sbb
sti
mov
cli
add
shrl
jg
xor
or
mov
mov
dec
aas
scas
jl
lret
inc
loopne
repnz
repz
or
cmpsb
cmp
jg
or
push
push
inc
out
sti
cmpsb
fsubs
or
mov
bound
xlat
push
or
rcrl
or
scas
sarl
std
ss
or
icebp
push
sub
leave
stos
pushf
btsl
jmp
or
stos
loopne
jae
popf
ret
add
outsb
mov
ficomps
xchg
gs
and
insl
cmp
push
ss
and
fcmovnu
xchg
ficompl
mov
jae
adc
sub
xchg
int
cmpsb
sbb
daa
and
mov
cmp
cmp
lods
sbb
inc
sbb
rcl
push
sbbb
mov
nop
addr16
pop
mov
jno
and
lret
scas
jbe
loope
pop
repnz
rcr
icebp
outsl
popa
mov
movlps
cli
fsubr
sbb
scas
add
xchg
imul
repnz
mov
scas
aam
std
adc
sbb
stos
stc
sbb
dec
inc
sbb
lret
sbb
inc
dec
cmp
jg
sbb
xor
xor
xchg
mov
loope
fcoml
jae
cmpsl
fdivr
jno
inc
mov
cmp
rcr
out
es
repz
push
cltd
or
or
sbbb
imul
imul
into
xchg
sti
cmp
pop
mov
sub
out
mov
daa
sbb
adc
mov
sub
pop
scas
pop
xor
jo
xor
sbb
mov
pop
xorb
xchg
int3
lods
sbb
and
int
dec
cmp
sub
pop
mov
sub
xchg
mov
push
popa
jl
enter
mov
mov
es
mov
subl
mov
sarl
xlat
sbb
xchg
pop
cmpsb
cmp
jbe
ljmp
aam
fbstp
sbb
je
cmp
jne
sub
aam
cmp
scas
jecxz
inc
fdivrs
cmp
scas
aad
pop
loope
das
mov
jmp
insl
sbb
jae
xor
and
cs
movl
pop
ret
xchg
int3
out
add
adc
mov
fldenv
dec
rcll
imul
jb
lock
mov
repnz
out
dec
sub
sbb
mov
lods
popa
dec
cs
rcr
mov
jp
pop
sbbl
sarb
decb
mov
sub
add
and
pop
xchg
cmpsb
and
sbb
pop
or
cmp
js
sub
ljmp
lahf
test
in
addl
inc
ret
ret
pop
lcall
sti
lret
in
out
dec
pop
lods
lds
lcall
ret
iret
popa
int
popf
roll
fistl
test
sub
mov
sub
cwtl
ror
out
and
xchg
out
add
int3
push
and
movsl
outsb
rolb
or
enter
push
lock
sti
insb
es
mov
dec
imul
sbb
test
jg
adc
pop
mov
ja
rolb
ret
inc
das
fcmove
xlat
out
mov
gs
ds
dec
fwait
push
stos
sbb
sub
fwait
jecxz
push
ljmp
adc
imul
xlat
lea
fcompl
jmp
sub
andb
or
scas
cs
repnz
popa
cs
dec
sbb
pop
rol
jl
jo
shr
inc
fdivr
or
addl
sub
ret
ficoml
ss
movsb
jmp
sbb
filds
mov
insb
jl
pushf
jo
es
imul
notb
push
dec
repnz
cltd
mov
cmc
into
into
adc
repz
sub
cltd
mov
mov
sbb
loopne
movsb
sbb
test
scas
and
push
push
fbld
scas
int
out
lock
das
leave
in
pop
pop
sbb
adc
test
scas
mov
fs
test
out
xchg
dec
xchg
sarb
xlat
popa
mov
push
sbb
js
xor
add
lea
pop
mov
faddl
lret
and
push
rcl
outsl
mov
or
mov
cltd
out
mov
push
daa
ffree
push
jne
sbb
pushf
push
incl
cmp
dec
cltd
or
rcrb
outsb
sbb
fcomp
movsb
out
jne
rol
movsl
sbb
adc
fnstsw
out
xchg
xchg
jnp
dec
ja
mov
sbb
std
nop
xchg
adc
nop
ret
fistpl
mov
out
xchg
nop
xchg
outsb
adc
adc
adc
xor
sub
pop
mov
pop
insb
test
mov
addr16
jmp
add
dec
xchg
sbb
mov
add
push
mov
fmuls
je
pop
dec
mov
ss
adc
xchg
mov
inc
mov
and
and
sbb
pop
mov
and
mov
mov
popf
xor
and
movsb
scas
inc
inc
aaa
mov
sub
adc
loope,pt
rcr
ret
xchg
sub
pop
cltd
inc
pusha
sbb
mov
mov
mov
jle
sbb
xlat
xchg
hlt
mov
inc
out
out
inc
ror
push
add
xor
test
imul
gs
mov
popa
xchg
les
test
bound
gs
mov
scas
cmp
aas
xor
in
popa
sahf
xor
pop
ljmp
add
sbb
or
insl
aaa
cmp
mov
dec
ds
xchg
and
outsl
pop
xchg
mov
test
cmpsb
xchg
lock
loope
adc
pop
push
mov
mov
adc
cmp
outsl
xor
shlb
addr16
push
mov
dec
fistpl
movsb
sbb
xchg
jb
loop
dec
jmp
sbb
dec
in
add
rcr
cltd
mov
es
aaa
sahf
sub
addr16
fimull
stc
sbb
addr16
movsb
js
and
stos
ret
mov
loope
lea
stos
pop
and
or
sbb
das
loopne
lcall
cltd
scas
xor
enter
cmpsb
mov
mov
movsb
shl
ds
jmp
fisubrs
push
mov
in
or
or
outsb
fnstcw
jae
lea
sbb
loopne
pop
outsl
jmp
hlt
movsb
mov
add
out
out
sbb
gs
stos
rcl
into
mov
out
lcall
rolb
xor
add
gs
xchg
inc
inc
ljmp
xlat
stos
mov
sbb
add
iret
jge
hlt
dec
push
insl
pop
cmp
mov
es
lret
and
fwait
pop
sbb
push
imul
inc
sbb
mov
ljmp
sbb
dec
movsb
xor
pop
sub
jl
fbld
jge
test
sbbb
fisttpll
dec
sar
lret
aaa
cmpsb
popl
sbb
in
psubsw
sbb
or
addr16
sub
lahf
dec
and
adc
fsts
mov
pop
aas
cld
into
xor
xor
jl
cmpsb
sarb
or
div
xor
pop
jo
xchg
sti
cwtl
sbb
sbb
mov
out
jno
cmpsl
clc
sub
int3
jns
popf
in
adc
ret
mov
xor
xor
lcall
scas
jl
adc
xchg
cmc
pop
inc
es
pop
jecxz
clc
dec
movsb
repz
or
jecxz
scas
and
int3
fildll
fstpl
cmp
jp
add
or
movq
pop
arpl
dec
mov
adc
jns
sbb
rcr
or
push
push
mov
jecxz
pop
fcmovb
sbb
dec
ljmp
inc
int3
mov
jmp
inc
sti
mov
push
aas
sbb
pop
jae
sbb
test
and
dec
nop
ror
fimull
test
test
mov
fwait
ss
pop
dec
jo
ds
popa
pop
xor
into
mov
mov
in
sahf
pop
bound
clc
adc
jmp
inc
jge
mov
jmp
int
mov
and
mov
lock
rorl
push
stos
daa
sbb
mov
xchg
shrb
out
mov
bound
jle
ret
fsubrs
ja
jle
test
xor
sbb
sbbl
pop
lds
shll
out
pop
outsl
les
xchg
jle
pop
call
and
jge
xchg
stos
mov
inc
push
mov
stos
and
lahf
sbb
xchg
cmpsb
icebp
or
das
cld
lods
loop
fmul
gs
mov
aam
scas
push
sbb
xchg
dec
ret
and
pop
cwtl
lea
xor
fmul
jo
dec
mov
push
repnz
sub
ret
ret
mov
scas
sbb
push
nop
push
mov
lret
bound
fistps
jae
ds
sbb
cmp
ss
in
or
gs
loop
sbb
mov
out
in
cmp
rolb
sub
xchg
std
adc
or
push
sub
xchg
fimuls
pop
fdivs
js
popf
outsb
int
mov
les
test
jg
movsl
mov
mov
push
fwait
or
pop
cmpsl
mov
fsubr
leave
cmp
jl
xor
mov
fsubrs
mov
jmp
jne
int
in
ret
rcr
sub
or
lahf
cmovl
jmp
shlb
wrmsr
lea
shlb
sbb
popa
pop
shr
dec
not
xor
mov
lds
pop
mov
adc
mov
pop
dec
test
ljmp
lock
scas
sbb
xchg
stos
sbb
lods
outsl
lods
mov
outsl
sbb
lock
lret
mov
int3
inc
lods
dec
enter
addr16
lods
sub
outsl
inc
testl
sub
push
in
inc
push
mov
setl
mov
pop
xchg
jae
pop
xor
sub
dec
dec
sbb
enter
adc
xor
rol
aaa
jp
aam
or
inc
aad
cld
testl
push
insb
sbb
and
add
push
xor
add
fbld
or
fldt
dec
aad
aam
dec
adc
xor
mov
xor
and
pop
add
aam
fld
or
and
push
xchg
jl
mov
call
add
xor
push
mov
jno
data16
mov
adc
hlt
and
dec
pop
ret
xchg
and
shr
out
pop
popa
movl
push
fiaddl
stos
jl
mov
jmp
mov
sbb
jne
or
mulb
dec
data16
mov
sbb
sbb
or
push
pop
cmp
pop
xchg
mov
jg
scas
dec
sbbb
adc
sbb
aam
cmp
mov
popf
imul
je
pop
ret
mov
sub
aam
mov
mov
pop
nop
mov
lods
pop
xchg
lods
int
cltd
fidivs
inc
int3
test
aad
pop
mov
lods
inc
stos
push
mov
jnp
dec
ret
xor
mov
push
ljmp
dec
mov
int
scas
lret
dec
mov
mov
rorb
add
dec
sbb
xor
les
and
ret
in
fildl
inc
fistl
lds
enter
fldcw
cmpb
test
call
dec
xchg
ds
out
jmp
testl
outsb
sbb
jl
xchg
xor
insl
fdivr
mov
push
ljmp
cli
movsl
sbb
call
out
mov
mov
mov
pop
popf
pop
repnz
out
mov
adc
fbstp
hlt
lcall
cmpsl
aas
mov
loopne
xchg
and
out
xor
pop
inc
mov
addr16
jmp
pusha
imul
mov
adc
std
pusha
adcl
rclb
push
xchg
mulb
fstps
mov
add
mov
imul
orl
sbb
mov
jge
test
fisubl
sbb
mov
cmp
lret
scas
mov
loopne
mov
out
push
imul
push
cmc
sbb
cmpsl
mov
pop
mov
jmp
sbb
repnz
inc
fcmovnu
mov
mov
inc
sti
xor
mov
sbb
sbb
arpl
div
lret
in
jp
sbb
stos
push
mov
jb
sti
rep
fsubp
jl
mov
jns
fistps
imul
data16
jp
int
push
jg
ret
inc
push
icebp
fs
pop
lds
repnz
xchg
outsl
outsl
loopne
sahf
or
pop
ret
out
mov
pop
or
sbb
mov
jnp
fldenv
daa
andl
lods
lret
pop
mov
and
clc
cmp
jae
mov
adc
lret
xor
push
and
or
scas
pop
in
xor
sbb
imul
lds
ljmp
filds
insl
gs
sbb
cli
cmpsb
ljmp
fwait
mov
mov
ret
sbb
aas
out
mov
adcb
sbb
sti
loopne
adc
dec
dec
fistpl
adc
lods
push
mov
cltd
and
inc
push
outsl
movsb
daa
mov
out
sub
das
scas
cmp
inc
cmp
add
dec
mov
int3
fcoml
out
insl
int3
loop
sbb
cmpsl
lcall
push
scas
call
pushf
pusha
sbb
sbb
push
mov
jmp
cmp
cs
loopne
es
add
shll
jl
pop
push
ljmp
std
xor
das
stc
jnp
lods
popl
pop
subb
mov
jae
stos
xchg
popa
add
fnstsw
outsb
int3
ret
pop
or
ficompl
lcall
negb
dec
into
fwait
jno
mov
push
int3
aam
cwtl
xchg
repz
jno
fwait
sbb
xor
jae
outsl
std
dec
fidivrl
popa
repnz
xor
push
lret
add
fidivs
or
push
jp
inc
leave
mov
pop
xchg
int3
imul
add
sub
pop
bound
out
push
jno
or
fcoms
sahf
ljmp
adc
mov
pop
inc
mov
dec
jmp
or
cmpb
movl
sbb
and
in
pusha
out
fldl
cmp
push
push
jbe
dec
repz
gs
ja
cmpsb
hlt
add
repz
dec
sbb
push
sbb
sbb
push
fldenv
ret
and
fwait
addr16
in
ret
mov
daa
lret
xchg
lods
loope
ficoml
push
or
stos
out
xlat
cmpsb
cmp
adc
aad
xor
out
push
mov
sbb
mov
mov
fdivl
fisubrl
mov
enter
je
inc
sarl
nop
cmp
call
subl
mov
lea
mul
sti
pop
dec
mov
push
mov
ljmp
jecxz
in
xchg
imul
stos
arpl
mov
jns
dec
xor
aam
mov
ret
adc
shrl
sbb
clc
mov
pop
sub
xor
test
jns
testl
sbb
inc
xchg
mov
sti
mov
lcall
dec
sbb
ret
push
xor
aam
loop
bound
les
orl
pop
mov
pop
jle
xchg
pop
mov
dec
dec
and
adc
lds
scas
int3
icebp
jge
repnz
lea
jg
and
out
out
mov
clts
sbb
nop
xor
xchg
sbb
test
cmp
mov
pop
mov
ret
imul
push
cmp
sbb
fs
andl
mov
mov
sbb
popf
scas
pop
pop
stos
iret
cli
jnp
les
and
xor
cmpl
pusha
mov
test
lock
adc
rcrl
sub
cmp
jbe
add
sar
ds
sbb
repz
push
hlt
jno
sub
xor
je
loop
sbb
jbe
decl
mov
imul
mov
cs
leave
ror
dec
inc
mov
push
rclb
pop
mov
loope
and
push
lret
mov
adc
cmp
lcall
lret
pop
pop
ret
mov
lret
fwait
out
and
jnp
xor
cli
or
testl
bound
loop
lret
jle
jecxz
psraw
pop
mov
sbb
int
je
sbb
cld
xchg
int3
test
inc
dec
stos
movsb
xor
aam
push
jno
call
fyl2x
ret
sbb
push
xor
pushf
sbb
jns
mov
orl
mov
adc
ljmp
pushf
mov
inc
fwait
sbb
int3
arpl
shll
out
sti
and
jmp
jmp
aad
mov
daa
pop
pop
sbb
pop
out
pop
pop
dec
in
lahf
arpl
or
adc
fsubr
mov
xchg
cmp
shll
inc
push
pop
mov
adc
mov
fcom
push
jb
movsb
and
mov
sub
xchg
sahf
cmp
add
xor
ret
and
scas
sub
dec
xchg
notb
xor
pusha
sahf
sbb
pop
cli
push
les
add
adc
ss
shll
arpl
push
cmc
mov
ja
lcall
aas
lahf
mov
stc
arpl
ds
leave
insl
testl
stos
sbb
inc
setp
inc
insb
andb
sub
sbb
cmpsb
stc
pop
or
addl
out
mov
dec
and
das
pop
into
or
inc
popf
enter
js
fnstcw
mov
bound
or
lahf
mov
repnz
mov
xor
clc
loope
sbb
mov
test
int
mov
negb
dec
push
pop
jae
in
dec
shll
jge
cmc
jge
mov
xor
arpl
push
fildll
fisubs
xchg
scas
out
inc
test
inc
adc
aad
fwait
sbbb
andl
fwait
repnz
cmpsl
sar
sahf
clc
fstps
sbb
fdivl
daa
mov
and
outsl
push
adc
push
inc
adc
pop
jp
vpand
cmp
jb
sub
repz
fsubrp
add
ret
fildll
hlt
sbb
incl
mov
push
ret
addr16
insb
cmpb
shrb
fcoml
lret
lods
call
cli
cltd
js
mov
jmp
icebp
loope
sbb
lods
jb
fs
xlat
repnz
pop
inc
and
test
mov
or
stc
loopne
shll
jne
shll
sbb
test
inc
xor
outsl
arpl
les
mov
fidivs
orb
and
mov
stos
cmpsl
inc
in
test
std
loop
sbb
addl
icebp
push
add
inc
or
jne
outsl
fistpl
loope
push
fcoml
cmp
ret
cs
inc
fildl
lcall
lret
movb
ficomps
adc
jecxz
mov
add
xchg
cmpsl
xlat
sbb
sub
lret
pop
jecxz
pop
in
mov
std
daa
xor
push
push
nop
repnz
in
sbb
sti
lds
push
popa
mov
insl
out
push
int3
mov
clc
stc
inc
mov
lea
sbb
jno
mov
aas
nop
add
cs
outsl
outsb
test
sbb
test
xor
sahf
fwait
lret
lock
mov
xchg
dec
ret
mov
adc
inc
dec
xchg
sbb
roll
mov
je
pop
xor
ljmp
dec
mov
mov
ficoms
inc
adcl
jnp
add
std
mov
hlt
jnp
ret
sbb
icebp
fistpll
stos
in
and
adc
fs
scas
iret
push
scas
in
sbb
cmpsb
xchg
mov
pop
pop
out
xchg
out
jbe
and
stc
pop
pop
xor
mov
sbb
pop
and
mov
fildll
outsl
mov
dec
frstor
add
aam
mov
in
shr
flds
test
sbb
ja
mov
aas
push
dec
cltd
xlat
lock
movsl
lea
jb
xchg
mov
pusha
cli
nop
xchg
push
loopne
das
pop
test
mov
scas
dec
dec
sbb
ljmp
cltd
pop
jno
outsl
and
ret
sub
into
cmp
xchg
push
popf
fisubl
jl
xor
cmp
lds
sbb
call
cmpb
outsb
fnstenv
mov
fstpl
push
xchg
jmp
bound
sbb
mov
fistpl
jno
inc
dec
les
popf
mov
ret
xchg
mov
inc
ret
lcall
cmpsl
out
cld
insl
addr16
and
push
fildll
mov
jns
jmp
fstpt
je
pop
std
jge
leave
fdiv
xor
in
stos
mov
xchg
mov
pop
gs
pop
ljmp
idivb
sub
and
enter
or
sub
jle
pop
stos
addr16
pop
mov
int
push
inc
mov
inc
pop
pop
add
fndisi(8087
aad
mov
sbb
aaa
cmpl
xchg
xchg
lock
or
lcall
mov
movsl
jns
push
mov
cmp
cmc
in
push
adc
les
and
rol
pushl
pushf
lods
lods
neg
pushf
insl
cmp
imul
lcall
xor
test
addr16
pushf
mov
jecxz
es
fcomi
popf
shr
fldl
test
push
and
cwtl
loop
dec
add
ds
lret
inc
xor
mov
popl
cmpsb
in
xchg
cmp
repz
ss
xchg
dec
dec
mov
fdivrl
jp
and
test
xchg
xchg
xchg
inc
fcoml
sub
dec
dec
iret
mov
int
ljmp
sub
subl
xchg
gs
clc
cltd
add
mov
scas
dec
pop
fidivl
loopne
jmp
add
push
fldt
xchg
xchg
mov
mov
cmp
jne
mov
sbb
adc
mov
vpsubq
or
inc
dec
pop
hlt
into
inc
stos
mov
pop
xor
jbe
and
nop
sbb
cwtl
jmp
dec
bound
popa
lock
daa
and
jno
cmp
sbb
and
mov
in
test
jle
lods
adc
scas
pop
out
andl
loopne
mov
lds
scas
cmpsb
js
jae
iret
xor
or
imul
sub
mov
es
cmpsb
int3
out
es
jae
rorl
lahf
or
and
or
or
fdivrl
loopne
inc
mov
aad
pop
loope
mov
cmp
sbb
out
inc
inc
inc
push
mov
xchg
fwait
nop
int
outsl
jnp
fiadds
jbe
aaa
pop
ret
mov
inc
addb
sub
es
cmpsl
ret
jae
lea
repnz
jno
in
xchg
ljmp
xchg
repnz
test
inc
dec
cli
push
bound
adc
imul
mov
pushf
fsubrl
leave
dec
je
xor
fldt
fiaddl
jmp
sbb
add
movsb
clc
lock
jno
aas
inc
mov
cmp
out
scas
cld
and
push
dec
inc
mov
jecxz
mov
dec
popa
xor
xchg
stos
mov
out
leave
mov
jno
sub
sbb
cmpsb
test
out
adc
push
mov
scas
enter
addr16
or
ret
sbb
and
and
or
mov
movb
mov
leave
ja
test
mov
mov
sarb
push
cs
mov
or
jne
cmpl
shll
test
xor
cmp
out
jl
xchg
dec
sahf
sbb
mov
jns
lret
lret
and
dec
addl
jo
xlat
push
sub
xchg
pop
outsl
out
mov
imul
sahf
inc
das
cmp
adc
rorl
or
aaa
add
addr16
lock
clc
lret
sub
leave
inc
addr16
sub
mov
sbb
mov
and
sub
aad
sbb
jnp
aaa
adc
inc
mov
jp
cld
xor
stos
mulb
or
push
pop
cmpsb
aam
fdiv
ret
mov
push
insb
and
sbb
and
xchg
mov
lret
data16
ja
cmp
sahf
sbb
rcrl
addr16
xchg
ds
pop
xchg
push
std
cmp
jmp
das
dec
repz
pop
cmpsl
or
aas
aad
xchg
xchg
sbb
xchg
xor
fxch
pop
mov
arpl
dec
ljmp
push
call
and
xor
aam
pop
inc
inc
jno
aam
js
fldt
xchg
jl
in
fcompl
repnz
sbb
mov
mov
dec
shl
inc
in
xchg
xchg
gs
and
jecxz
xchg
and
sbb
jle
sarl
xlat
cmc
mov
in
jns
movsl
xchg
ficoml
outsl
lock
ds
hlt
idivb
cmpsb
scas
lods
pop
or
lods
mov
add
push
fstl
and
int3
imul
insl
xor
jecxz
std
mov
fstpl
or
dec
push
xchg
adc
movb
repz
aas
dec
int
ljmp
jbe
in
je
mov
mov
push
fucomip
sub
push
cmp
mov
lret
sarl
iret
dec
in
repz
stos
fnsave
cmp
ljmp
push
mov
stc
std
fisubs
shl
fdiv
dec
pop
mov
popf
xor
mov
or
call
cmpsl
jae
and
imul
inc
gs
xchg
jle
stos
dec
cmp
mov
out
sbb
dec
repz
mov
hlt
and
loopne
mov
dec
xchg
add
mov
inc
fistps
lock
loope
or
sbb
pushf
mov
arpl
inc
push
jge
cld
orb
nop
in
mov
sbbb
push
or
or
sbb
pop
jb
pop
and
cmp
js
xchg
out
stos
push
mov
ret
add
cld
imul
ret
adc
loope
std
mov
scas
rcrl
shlb
rorl
adc
cmp
sub
cld
or
scas
gs
cmp
test
das
fwait
pop
push
ror
mov
movsl
pop
push
loop
mov
imul
push
cmp
es
jbe
add
cmp
out
int
roll
inc
mov
push
stos
hlt
outsl
inc
mov
push
push
lds
aaa
mov
ljmp
xchg
pop
aam
movsb
daa
loopnew
clc
fcmovbe
lret
sbb
nop
sbb
ret
push
lahf
mov
jge
insb
cmpsb
xor
mov
imul
mov
leave
push
loop
fstps
shll
inc
cmp
ljmp
das
fcom
cs
subl
ja
push
add
gs
jno
fists
hlt
scas
sub
jl
push
mov
adc
xor
mov
call
iret
sbb
mov
mov
push
pop
ja
ret
popa
scas
js
out
fstpt
mov
mov
shl
inc
lock
sbb
int
cmp
sbb
ljmp
das
cs
and
je
cmpsb
repnz
jecxz
loop
mov
cmp
or
pop
or
shrl
bnd
loope
arpl
jo
or
cmp
cmpsl
xchg
mov
out
jnp
repz
push
pop
mov
imul
pop
push
rcrl
inc
jg
roll
jno
adc
or
inc
add
jmp
mov
xchg
pop
gs
pop
xchg
loopne
and
insl
xor
shll
repz
push
mov
repz
or
mov
imul
ja
cwtl
cmp
in
iret
mov
fs
inc
xor
xchg
and
scas
aam
push
jp
arpl
jmp
dec
push
ret
test
paddusw
fsubr
addr16
cli
add
pop
sbb
cltd
je
pop
dec
inc
xor
cld
inc
cmp
mov
or
pop
andb
mov
mov
mov
das
pop
mov
mov
stos
pop
xchg
jg
mov
sub
xor
dec
fsubl
dec
je
push
push
push
popl
sbb
int
notl
mov
lret
imul
inc
mov
pop
test
sbb
xor
fcoml
xor
test
int
leave
loope
xchg
xor
jle
sbb
cmp
pop
xchg
xchg
addb
lods
movsl
mov
in
or
repnz
fisubrl
sub
lret
lods
out
fs
and
fdiv
inc
pop
and
pusha
inc
jp
sbb
inc
fmull
xchg
sti
lods
xor
lret
mov
or
fiaddl
test
xor
es
test
add
es
and
inc
xchg
cmpsb
test
and
cmp
or
push
arpl
aaa
cmpsl
test
mov
jne
mov
pusha
fadds
int
mov
cmp
lods
and
out
jb
inc
mov
sbb
or
test
loop
stos
sub
jl
int3
sbb
sbb
mov
sub
scas
test
mov
lea
sbb
cmp
lock
mov
sbb
sub
lret
clc
inc
aam
lcall
int
imulb
sbb
and
add
dec
pop
or
icebp
movsl
xchg
scas
imul
jne
ret
lret
lock
sub
shlb
xor
mov
je
add
scas
dec
jo
orl
mov
jle
es
ss
pop
push
nop
push
in
insl
mov
aas
cmp
movsb
xchg
inc
ljmp
and
cmc
pop
rcll
ret
fstl
inc
inc
gs
xchg
cli
rcll
sbb
outsl
pop
ja
js
das
or
push
and
inc
je
mov
sbb
xchg
inc
repz
cmp
mov
in
xchg
and
adc
xchg
repnz
mov
hlt
sub
mov
insb
sbb
and
mov
fistl
scas
jmp
pop
insb
mov
dec
cmp
pop
arpl
adc
or
jmp
mov
pop
sahf
ljmp
mov
sbb
arpl
and
sub
push
mov
pusha
frstor
movsl
test
out
ljmp
mov
out
jae
test
popa
cmp
adc
ficomps
pushf
lods
cmpsl
ret
imul
jae
add
mov
pop
iret
ja
adc
fcoml
fs
inc
pop
push
bound
cmpl
and
out
adc
stos
jge
cwtl
out
and
mov
pop
das
push
jmp
push
stc
pop
scas
sti
or
jmp
xchg
fwait
scas
jecxz
sti
mov
push
repnz
out
jecxz
jmp
mov
jae
jle
div
daa
and
mov
mov
lret
mov
cmp
jbe
scas
rcrl
fidivl
dec
andb
sbb
dec
arpl
jg
push
mov
lock
out
scas
mov
add
mov
inc
ljmp
push
ljmp
dec
in
push
test
xchg
mov
xchg
negb
xorb
nop
ficompl
mov
fwait
pop
pop
ret
push
sbb
lahf
mov
xchg
mov
sbb
aad
fsubl
or
or
add
add
jp
pop
sub
and
dec
les
pushf
enter
addr16
jle,pn
inc
hlt
aas
shll
push
pop
cmp
out
jo
pop
daa
bound
dec
fsubl
pop
mov
sbb
dec
sbb
lcall
jp
icebp
mov
imul
es
popa
jge
int
jl
mov
xchg
push
test
cmp
lock
in
fwait
or
repz
jg
sbb
xchg
icebp
xor
stos
inc
scas
mov
hlt
sbb
push
test
dec
loopne
adc
push
adc
mov
frstor
sahf
xor
jns
int
ret
xchg
cmp
pop
mov
aas
mov
lea
dec
xor
das
dec
pop
leave
mov
pop
stos
inc
jmp
shll
ljmp
jno
sbb
inc
pop
scas
sbb
xor
arpl
cmp
xchg
or
ljmp
in
mov
ljmp
test
fisttpll
pusha
sub
dec
scas
inc
mov
cmp
fcomps
aam
cli
ret
inc
lcall
movsl
and
lcall
push
lds
inc
hlt
mov
add
pop
mov
movl
jecxz
out
mov
jb
test
and
jp
in
ffree
and
aam
andl
adc
lahf
add
arpl
fimull
je
add
out
loopne
lcall
cwtl
push
into
push
fidivs
pop
sbb
mov
fsubs
std
sbb
stos
cmp
jne
sub
leave
push
popa
jge
les
shrl
repnz
xlat
clc
add
insb
mov
jecxz
es
lahf
add
push
call
mov
jno
ss
ja
fcoml
push
and
mov
pop
cmp
or
jb
ret
and
or
xor
xchg
lret
jnp
je
loop
fistps
mulb
inc
pushf
sahf
xor
inc
push
jl
orb
sbb
xlat
adcl
cli
mov
pop
clc
subl
dec
lahf
inc
cmp
test
mov
les
xchg
mov
inc
test
push
cli
or
outsl
jbe
cmpsb
pusha
popf
and
rcr
lock
adc
push
mov
movsl
repnz
dec
adc
mov
adc
or
loopne
rcrl
pusha
sbb
mov
mov
mov
popa
jno
jb
sbb
sbb
adc
stc
push
gs
sbbl
jg
jne
jno
and
pop
xor
mov
aas
mov
jo
fwait
mov
pusha
add
mov
pop
pop
pop
fsts
and
jbe
pop
sub
lea
jp
sbb
lock
jbe
rcll
dec
and
ret
sbb
push
stos
mov
lods
vmovshdup
cs
fcmovnu
sbb
jmp
out
fwait
xor
pop
or
outsl
or
xor
repz
loopne
cld
fs
jge
pop
mov
ljmp
lods
mov
pop
insl
pop
test
test
ret
mov
xor
or
jno
lock
dec
out
imul
fnstcw
insl
clc
add
adc
rolb
test
xor
daa
gs
sbb
sbb
fldenv
pop
out
daa
add
sbb
mov
mov
add
sahf
push
in
pop
dec
xor
xchg
dec
cmp
test
ret
fdivrl
cmp
sbb
mov
sub
js
bndldx
mov
movb
push
ss
pusha
xor
jno
adc
push
mov
insb
jno
gs
cmp
les
frstor
shr
hlt
pop
mov
out
adc
mov
cmp
mov
and
cmc
faddl
pop
sub
sub
int
scas
addl
gs
rorb
les
lea
imul
ds
xchg
lcall
add
and
push
ja
leave
push
dec
pop
sub
aad
pop
mov
xchg
gs
repnz
push
sbb
pop
xor
mov
push
push
adc
or
sbb
xchg
push
addr16
lahf
jb
push
les
mov
loop
out
and
mov
xor
loop
add
or
push
or
jns
outsb
cmp
hlt
lret
add
mov
jmp
ret
inc
sbb
stos
inc
cmp
and
xchg
adc
ja
add
mov
fidivrl
loop
lret
mov
inc
mov
mov
add
fs
pop
lods
sbb
rcll
notb
ljmp
out
xchg
or
aam
arpl
mov
insl
hlt
jno
mov
test
cmp
jecxz
jp
xchg
imul
inc
dec
movsl
shll
pop
pusha
ss
sbb
movsb
int3
xchg
aaa
nop
lds
aad
cmp
movsb
sub
dec
cld
outsb
lret
call
repnz
dec
sbb
sub
mov
aam
in
mov
mov
adc
out
inc
adc
daa
pop
fcompl
pop
mov
xor
out
and
sarl
dec
pop
inc
or
sbb
sahf
addl
inc
sbb
and
xchg
shlb
push
adc
fs
cwtl
test
add
sbb
jl
fnstsw
in
leave
fwait
adc
fscale
cmp
jnp
adc
insb
jge
loope
js
ss
xor
test
mov
imul
rolb
xchg
in
ret
idivl
loopne
xchg
scas
and
jl
call
in
lahf
push
sti
rclb
or
out
sbb
sbbb
mov
scas
fstpt
repnz
ret
or
lret
pop
pop
add
mov
cmc
jecxz
ret
jo
arpl
push
xchg
test
lods
and
enter
movsl
aaa
ljmp
pop
xor
out
xchg
sbb
ljmp
shlb
push
hlt
jecxz
sbb
xchg
bnd
sbb
aaa
jp
sbb
dec
cmp
pop
imul
cli
xor
xchg
cs
lds
insl
in
adc
loope
scas
lea
jle
ljmp
sub
out
shrl
fistl
mov
cmp
test
push
add
les
adcb
cmp
cmp
je
jbe
adc
push
or
add
and
mov
or
repnz
lods
scas
popa
dec
ret
scas
or
inc
out
sbb
arpl
mov
mov
cmp
iret
add
jno
out
fnstcw
repnz
fidivrl
sarl
jecxz
or
and
cmpsb
jmp
inc
dec
fimull
rorl
add
push
aaa
je
xchg
loop
or
loopne
xchg
xor
int
cmp
roll
cmp
les
fld
cmp
add
ret
rclb
pushf
and
fmull
in
jno
lods
test
movsl
mov
jp
push
mov
lcall
pop
xchg
arpl
ljmp
inc
fdivr
sbb
sbb
cmpsb
hlt
jmp
pop
mov
cmc
jne
pop
dec
and
sti
pop
jnp
inc
ret
inc
inc
aam
push
push
clc
mov
mov
mov
loop
sbb
test
es
das
adcb
fldl
dec
jnp
push
lock
pop
sti
fisubl
pop
mov
in
add
push
data16
and
lea
je
lea
call
stc
lret
jnp
mov
xchg
mov
cmc
mov
test
imul
in
jne
pop
xchg
imul
cmpsb
test
test
out
pop
pop
fiaddl
and
and
mov
push
fiaddl
push
sbb
cmpsl
int
and
sbb
js
push
gs
pop
ret
popa
bound
adc
mov
loope
in
lret
in
sub
popa
int3
or
sbb
ds
ficompl
jmp
into
sub
andl
jne
stos
mov
mov
insb
cmp
xor
inc
mov
test
in
imul
outsb
mov
jge
sbb
mov
cmpsb
mov
jl
loope
popa
sub
push
sbb
pop
ret
lret
insl
sub
fsubs
adc
xchg
sbb
outsl
xchg
xchg
ja
push
repz
int3
xor
cs
out
das
leave
push
cli
sbb
rorb
xchg
fisttps
lds
dec
sbb
cmpsb
fidivl
outsl
jne
push
test
pop
les
sbbl
jae
addr16
int
adc
and
xchg
pushf
fsubr
jl
xlat
lods
cltd
add
dec
pusha
es
jnp
sbbl
movsb
jne
dec
mov
adc
scas
push
sbb
mov
mov
push
addr16
in
inc
sbb
sub
inc
jmp
mov
out
sub
pushf
add
mov
dec
adc
es
mov
pavgw
loopne
jmp
les
pop
mov
mov
jp
cmp
outsb
pop
mov
mov
shr
out
jo
pop
or
jo
fsubs
dec
mov
adc
shlb
dec
cltd
push
movsl
clc
mov
pop
sbb
gs
xchg
repz
jmp
movsb
dec
xchg
mov
dec
lds
ret
test
inc
mov
xchg
push
stos
cmp
fsubl
pop
outsl
or
xor
scas
data16
dec
aaa
shll
rorl
nop
inc
frstor
adc
sbb
jmp
pop
dec
stos
or
ret
js
sub
das
cmp
lock
imul
pop
insl
test
pop
imul
fstps
les
inc
xor
stc
and
dec
shlb
icebp
sbb
test
idiv
inc
int3
mov
int3
inc
lahf
lret
dec
mov
enter
cwtl
dec
out
out
and
dec
paddw
push
mov
add
xchg
mov
fsubrl
mov
adc
xor
cltd
aam
stos
scas
xor
in
and
mov
int
jne
pop
leave
push
lret
sbb
jp
dec
out
ds
cli
dec
adc
jl
loopne
imul
mov
dec
ffreep
sbb
lcall
adc
add
sbb
xor
sub
negb
nop
xor
fsubr
add
es
pop
or
adc
sbb
sbb
in
test
test
push
mov
roll
shll
sbb
inc
lods
xor
aam
invd
cmp
and
imul
mov
decb
jno
pop
int3
mov
pop
jb
cmp
ljmp
frstpm(287
sbb
xchg
loope
adc
imul
les
ss
inc
sbb
shlb
xchg
dec
imul
sub
cmp
ret
pop
sub
mov
push
fmul
push
icebp
pop
hlt
sbb
xchg
adc
movsb
in
pushf
push
lds
sub
inc
fadds
enter
and
imul
shl
mov
or
push
sbb
xor
xchg
ror
es
insl
xchg
and
lds
out
jo
and
sbb
iret
xor
pusha
sbb
stos
pop
fidivs
xchg
mov
fcmovnu
faddl
mov
loopne
xchg
mov
inc
jg
scas
stos
call
and
fimull
xor
inc
or
mov
shlb
mov
sub
jmp
mov
fidivs
inc
lcall
cmpsl
cmp
xchg
insb
cmc
sbb
popa
int
lods
and
inc
icebp
jmp
xchg
arpl
shll
pop
int3
sub
jb
pop
mov
ljmp
jp
pop
jno
sbb
fisttps
inc
std
mov
ljmp
rcll
mov
pop
insl
popa
pop
iret
andb
cwtl
rcrl
cmpsb
test
xor
mov
add
lods
lds
xor
fsubs
xor
push
lret
inc
insl
sbb
push
jecxz
xlat
xor
inc
sbb
sbb
cmp
subb
outsb
xor
inc
cmp
movsl
mov
ror
sbb
mov
insb
inc
ss
subl
mov
push
mov
mov
mov
add
int3
inc
mov
faddl
dec
mov
and
jl
and
mov
leave
mov
push
inc
imul
push
jns
xchg
cmp
call
dec
sbb
aam
and
add
addr16
notb
xor
fstpl
ret
cld
and
mov
aas
std
inc
lods
sbb
or
add
sbb
ja
pop
sbb
pop
mov
sbb
frstor
cmp
xor
sbb
inc
or
pop
mov
xchg
mov
dec
movsl
aaa
push
inc
mov
test
inc
sub
les
frstor
and
xchg
dec
mov
pop
icebp
sub
loope
decb
fnop
add
sbb
xlat
pop
and
cmpsl
aas
mov
mov
mov
and
mov
fidivrs
scas
mov
sbb
addb
mov
in
je
out
sarb
aas
sbb
pop
bound
sub
fisubrs
mov
rcrl
inc
inc
sub
nop
test
mov
push
gs
mov
rcr
mov
push
icebp
xchg
insb
addr16
and
out
and
or
imul
mov
cwtl
loopne
into
pop
fsubrl
sub
and
jge
push
in
cmpsb
fcomip
mov
ret
cli
mov
jecxz
pop
negl
ljmp
dec
xor
dec
imul
mov
insl
add
addr16
int3
into
out
rcrl
outsb
xchg
outsl
bnd
imul
daa
or
ret
push
sbb
lret
test
cld
or
loope
xchg
sbb
sbb
adc
mov
pop
xor
mov
inc
push
adcb
test
push
jbe
outsb
pop
pop
shr
mov
test
loopne
add
dec
fldt
stos
daa
fdivs
arpl
push
xchg
orl
push
pop
xor
jo
jnp
fcmovnb
push
std
jno
sti
test
iret
arpl
cld
sbb
fwait
push
mov
push
push
mov
mov
imul
aaa
sahf
mov
shll
aaa
xchg
iret
add
ret
pushf
fadd
fimuls
lock
mov
sbb
xchg
push
rcll
out
mov
xchg
cld
sbb
push
outsb
adc
pop
mov
cmc
xchg
cmc
add
cmp
xlat
sbb
inc
repz
mov
inc
sbb
js
xchg
lcall
dec
pop
pop
ja
or
ret
xchg
fwait
pop
cmp
and
pop
negl
push
lcall
incb
add
jle
aad
sti
adc
xchg
mov
dec
rcr
rolb
mov
xor
sti
or
xor
mov
push
out
add
in
scas
jp
fsts
lcall
pop
jl
test
and
mov
push
mov
cmp
in
or
pusha
xor
repz
mov
out
daa
inc
pop
stos
std
xchg
dec
fs
xchg
jno
xchg
sbb
sbb
nop
mov
fnstcw
and
fwait
push
sub
sub
es
shlb
gs
mov
mov
adcl
push
jle
ja
jmp
nop
addr16
xchg
fmuls
or
imul
subb
mov
inc
inc
ss
outsb
icebp
mov
xchg
inc
pandn
mov
jne
push
test
cli
push
imul
cwtl
jecxz
mov
mov
cwtl
fimull
mov
faddl
cltd
in
cmp
dec
pop
fmull
shll
xor
mov
xlat
aam
xchg
lock
ret
sbb
xor
inc
ret
cmc
cs
imul
pop
inc
fisubs
fcmovnb
enter
sub
call
fistpll
xor
pop
pop
pusha
lods
xor
test
xchg
dec
scas
mov
inc
add
mov
mov
in
add
lds
enter
xlat
stc
int
sbb
dec
adc
xor
xor
jnp
push
lds
out
push
cmc
jmp
xor
clc
out
push
mov
dec
push
pop
vmovss
cmc
xor
sbb
hlt
xchg
cwtl
out
imul
dec
hlt
xor
cmpsl
mov
or
jmp
les
mov
rol
mov
jb
insl
dec
aaa
adc
dec
mov
inc
xorl
push
mov
mov
sub
sti
mov
adc
rcr
mov
lcall
jbe
xchg
inc
fwait
into
in
push
movsl
dec
ret
adc
pop
cmc
xchg
mov
sbb
mov
and
adc
lcall
and
cmp
mov
xchg
fistps
jae
lds
sub
mov
clc
pop
fisttpll
adc
pop
mov
arpl
sbb
pop
sbb
repnz
stos
jle
jno
sub
dec
stos
sub
into
in
push
pop
mov
insb
sbb
fcmovbe
xor
lret
add
out
push
outsl
cltd
mov
push
adc
bound
add
pop
movsl
xor
add
ljmp
popf
loop
sbb
xchg
lret
jp
lret
pop
aas
xchg
or
shll
add
bswap
mov
les
lret
sub
repz
or
jae
and
adc
sub
sub
ficoms
cs
inc
lret
mov
dec
jo
fwait
cmp
xor
mov
mov
and
lret
cmp
pop
jne
lret
shl
in
gs
aad
lret
lret
sahf
mov
push
lret
insb
add
xor
cmp
sbb
faddl
data16
adc
and
cmp
lock
xchg
mov
outsl
rclb
rep
das
and
addr16
addl
sbb
push
cmp
mov
sub
mov
push
ret
dec
in
push
push
sahf
pop
dec
and
nop
xchg
add
movsl
sub
cmp
int
sbb
xchg
fcom
mov
mov
out
pop
mov
nop
ficoml
jb
xor
or
mov
mov
add
mov
je
psrld
cmp
ret
sub
mov
dec
es
notb
or
sbb
lods
test
sbb
sbb
mov
sbb
dec
lcall
outsl
sbb
repnz
dec
cli
jnp
xor
cmpsl
xor
cmp
cmc
ret
mov
fs
fisubl
lret
scas
test
scas
fstps
jno
add
dec
sbb
insl
push
jo
stos
ds
jnp
dec
dec
pop
mov
pusha
fisttpll
sub
out
xor
repz
fiadds
popa
loopne
xlat
jns
mov
into
cli
sub
adc
rcrl
and
mov
imul
sbb
popf
shlb
add
adc
mov
js
ss
das
rclb
push
mov
mov
fldenv
xchg
mov
fiaddl
fmuls
mov
add
pop
mov
xchg
dec
mov
cmp
adcl
sbb
and
pop
mov
dec
loopne
xchg
xchg
mov
sahf
loope
out
clc
dec
leave
push
mov
xor
cmp
mov
stos
nopl
mov
mov
xchg
fnsetpm(287
fisttps
cmp
pop
xchg
arpl
mov
xchg
fimull
dec
xchg
jae
test
pop
sbb
bound
pop
xchg
lret
add
xor
std
jno
mov
enter
sbb
mov
pop
cmp
pop
and
fs
sbb
xchg
xchg
loope
data16
loop
sbb
stc
jmp
dec
pop
ror
fnstsw
dec
or
shll
xchg
movsl
pop
out
and
inc
shr
fiadds
mulb
add
mov
scas
add
or
outsl
push
dec
ret
ror
rclb
cmp
sbb
sahf
push
sbb
dec
test
xchg
rorl
or
adc
lods
mov
push
xlat
inc
push
enter
or
sub
repz
cmp
mov
sbb
test
dec
sbb
mov
jnp
addr16
divl
sarb
xor
pop
fstpl
je,pt
sub
rcrb
sbb
sub
neg
sbb
ret
or
jb
outsb
pop
stos
mov
add
incb
and
sbb
test
arpl
push
dec
sti
pop
mov
lcall
sarl
gs
out
mov
dec
cmp
sbb
sub
rcrl
mov
sbb
xlat
add
xchg
mov
jl
sub
imul
fdivs
sti
hlt
popf
int3
xchg
sbb
mov
xor
xchg
push
inc
add
mov
jge
ret
push
mov
adc
mov
push
pusha
loopne
imul
nop
lds
xchg
cmp
out
andl
jecxz
lds
jno
pop
pop
dec
repnz
mov
loope
pop
xchg
int3
imul
mov
cmpsb
push
mov
test
lret
push
flds
pop
in
cmovg
js
sub
mov
mov
mov
arpl
outsb
mov
cmpsb
xchg
pop
ljmp
ds
sub
repnz
stc
pop
jmp
arpl
xlat
add
jmp
sbb
and
fsub
xor
lret
jno
mov
repnz
imul
test
pop
in
jo
mov
addr16
cltd
xchg
lret
or
pop
dec
mov
lret
outsl
or
imul
lret
cmp
mov
and
vunpckhps
or
sub
pop
dec
ficompl
inc
jae
mov
fs
push
gs
jne
add
fisttpl
lret
push
jmp
sub
and
icebp
push
sub
sar
lret
dec
testb
lcall
ljmp
or
aad
mov
xchg
clc
dec
aaa
sbb
outsl
add
loope
dec
inc
or
mov
xchg
out
xlat
pop
jno
mov
xchg
les
es
push
fs
adc
inc
sbb
out
jno
out
pop
pop
dec
lret
imul
push
mov
clc
add
push
push
int
insb
fimull
sbb
pop
xchg
mov
sbb
pop
data16
mov
dec
lea
fcmovnu
mov
ret
insb
xchg
and
leave
sbb
push
cmp
sub
or
movsb
outsl
daa
or
or
xchg
cwtl
cmpl
repnz
pusha
inc
nop
shl
xchg
pop
orb
sbb
and
cmp
sbb
sbbl
sub
shr
push
popa
test
jge
scas
sbb
jne
xchg
xor
inc
pop
aas
sahf
aad
addl
into
addr16
test
jbe
scas
divb
jns
call
aam
loope
mov
cld
and
popa
pop
mov
inc
es
ret
cmp
lcall
lret
jp
cmpsb
outsl
or
scas
aaa
mov
out
dec
dec
add
je
dec
jecxz
add
sbb
inc
fld
arpl
loop
xchg
pop
test
dec
push
or
sub
xchg
adc
out
sbb
je
lahf
movsl
xchg
fwait
mov
pop
cs
mov
repz
js
test
hlt
loope
dec
int
lods
rcrb
mov
jp
cmp
lea
sbb
mov
add
je
mov
fmull
lods
mov
iret
rcl
outsb
popf
test
fldcw
jmp
pop
adc
mov
mov
cmpsb
pop
lock
shlb
sbb
rorl
lock
xchg
test
mov
mov
dec
ret
sub
imul
mov
lret
pop
sar
sbb
fnstsw
das
cmp
mov
jno
pusha
pop
cltd
jmp
cli
pminsw
fwait
pusha
gs
sbb
mov
inc
add
lock
psllq
scas
fs
mov
roll
sub
push
in
pop
pop
in
lea
dec
flds
jl
xlat
jmp
int
stos
in
mov
mov
cmc
rol
jno
adcl
pop
ret
iret
hlt
insb
cmp
das
popa
sbb
mov
imul
push
fs
jle
push
or
xchg
cli
out
dec
jno
adc
xchg
xchg
insb
lret
scas
pop
xchg
ljmp
xchg
fstpl
popf
and
dec
sbb
jb
jno
mov
xorb
ljmp
into
inc
mov
mov
jmp
ret
sbb
jns
fcmovb
jnp
ficoml
out
pop
jne
adc
int
pop
sub
add
out
dec
and
arpl
dec
jno
lods
shrl
sbb
ficoml
mov
push
jno
push
hlt
or
cmpsb
cmc
inc
sbb
push
xor
hlt
adc
xchg
popl
push
sbb
inc
dec
aam
sarb
mov
arpl
movsl
adc
repz
jno
test
inc
adc
jno
mov
jecxz
imul
and
movsb
mov
es
mov
insl
mov
ljmp
or
pop
mul
negl
mov
rorl
pop
stos
andl
xchg
out
push
xor
outsb
push
inc
inc
fstp
jmp
sbb
sub
xor
int
adc
jns
sbb
or
pop
ds
xchg
sub
pop
sub
fisubl
in
dec
std
repnz
push
fwait
js
stos
mov
jb
cli
push
xor
jmp
push
or
js
mov
shlb
not
xor
in
js
inc
nop
xor
xchg
mov
mov
inc
addr16
rcrl
xchg
xchg
cwtl
dec
ja
dec
jb
hlt
lcall
fdivl
out
outsb
fistpll
add
cmp
int
pop
cmc
mov
fimuls
pop
pop
xor
pusha
test
pop
inc
lcall
mov
dec
jns
scas
ja
fwait
and
jbe
popa
xchg
jno
pop
mov
mov
imul
mulb
push
lret
mov
sti
ljmp
dec
cmpsb
cmp
es
fsts
shrl
lds
mov
sub
loopne
mov
dec
push
jae
add
or
int
adc
pusha
aaa
bswap
push
insb
test
pop
lret
xchg
stc
lret
adc
cmp
lret
icebp
or
mov
mov
lock
cmp
sub
mov
xor
in
inc
popf
rcr
lds
adc
xor
jp
sub
faddl
pushf
or
sbb
jge
pop
cli
rcll
xchg
xchg
jno
pop
rcl
adc
mov
push
and
fimuls
push
pop
jnp
sub
adc
stos
int
add
out
movsl
push
fs
inc
xor
popa
inc
cli
jo
arpl
pop
add
pop
dec
add
jge
cmp
ja
sahf
repz
inc
shrb
inc
je
pop
dec
add
sbbl
lcall
adc
fldcw
data16
int
jl
sahf
jmp
leave
sbb
mov
mov
lret
sbb
or
inc
pop
mov
scas
mov
or
into
xchg
pop
and
sbbl
out
and
cmp
xchg
scas
bound
and
push
lods
ror
or
pusha
out
ds
insb
out
push
fnstenv
and
sub
xchg
or
scas
sbb
mov
sbb
add
fnstenv
dec
dec
cmpb
stos
dec
sbb
cli
sti
out
imul
jns
mov
sbb
mov
out
sbb
dec
movsb
out
xchg
movsb
incb
mov
repnz
dec
in
push
dec
sub
jbe
adc
xchg
aam
adc
xor
sbb
lods
add
add
xchg
jmp
sbb
aaa
fisubl
fs
scas
sbb
lret
inc
loop
stos
mov
push
ja
nop
dec
mov
or
xor
xor
fstl
lock
jge
sbb
mov
inc
or
stos
lret
int3
aad
mov
jmp
adc
lret
dec
xchg
add
xor
arpl
inc
lods
and
xchg
lock
fwait
sbb
clc
cmp
xchg
adc
enter
pop
cmp
jnp
sbb
ret
dec
mov
notl
or
es
xchg
into
jb
ret
icebp
mov
sbb
hlt
gs
mov
xchg
add
and
pop
vmread
xchg
lods
pop
cmp
cltd
pop
dec
ror
stos
aam
popa
imul
sub
pushf
push
ss
dec
clc
mov
lock
int
jnp
aas
sbb
bound
adc
pop
push
gs
fisubl
jmp
jae
inc
add
and
rorb
jmp
ret
cwtl
push
aam
sub
sbb
fcoms
mov
popf
push
mov
imul
or
aam
xchg
std
mov
xchg
cmp
cmp
sbb
lock
sbbb
pop
mov
jl
popf
outsb
faddl
push
pop
imul
pinsrw
ret
inc
lahf
lods
test
sub
std
pop
ljmp
add
out
and
insb
ss
jae
ret
mov
fs
inc
jmp
out
fists
cmp
push
push
ss
xchg
mov
scas
jmp
xchg
sahf
cmp
mov
das
ss
aaa
jnp
sbb
dec
ljmp
lock
or
jns
sub
subb
pushf
add
lret
aam
inc
mov
push
xlat
sub
out
out
xchg
and
push
push
aam
ljmp
sbb
jno
popa
jnp
inc
rcll
bound
in
cltd
sti
cmp
fldl2t
pop
or
xorl
pop
and
push
xchg
lock
adc
hlt
pop
dec
push
rcll
in
sahf
push
or
fists
jo
pop
xor
repnz
iret
in
adc
int
xor
sbb
push
rcrb
sbb
fwait
mov
enter
cs
subl
ljmp
xchg
sub
inc
movsw
mov
or
xchg
pop
js
pop
sub
pop
scas
gs
fimuls
mov
jne
in
test
inc
ss
push
push
push
xchg
inc
jae
mov
out
mov
or
stos
cld
das
adc
push
push
fimull
push
push
ljmp
mov
inc
test
mov
cmpsl
dec
push
lods
dec
test
jno
aaa
sub
mov
dec
sbb
movb
stos
lret
xchg
add
cltd
push
ficoml
mov
sahf
cmp
xchg
mov
scas
sbb
add
sbb
push
mov
lret
cmp
aam
push
adc
jb
fisubrl
and
aam
lret
xor
nop
leave
std
mov
popf
xchg
repz
cld
loope
jbe
adc
push
adc
out
adc
mov
out
xchg
fwait
addr16
int
inc
movl
outsb
adc
add
repz
gs
mov
sti
mov
mov
fbld
mov
mov
out
xor
xchg
jb
out
push
sbb
fchs
pop
mov
hlt
mov
repz
das
or
scas
cli
push
out
ja
arpl
fimuls
pop
sbb
fdivrl
mov
sub
lds
sub
add
dec
mov
aam
in
out
push
leave
dec
stos
dec
nop
jnp
bnd
lret
fs
out
mov
outsl
dec
enter
inc
test
push
pop
cltd
mov
insl
mov
mov
mov
jge
xor
ficoms
fistpl
aas
lea
jne
cmp
pusha
xchg
inc
pop
inc
sub
jo
xchg
sbb
rol
sbb
outsl
aam
sbb
das
testl
stc
jge
scas
faddl
mov
fldt
test
sbb
jne
xchg
jno
push
and
ret
int3
xor
dec
push
sbb
add
stos
push
call
push
ja
sbb
gs
enter
sbb
call
test
popa
jmp
mov
or
imul
xor
jo
inc
dec
pop
adc
pop
lea
lcall
lock
mov
popa
sbb
sti
mov
mov
insl
loope
hlt
pop
cmp
aam
jae
popl
cwtl
xchg
int3
and
mov
mulb
pop
pop
lock
sbb
xor
es
fxch
inc
mov
xor
jo
shl
mov
dec
or
lock
pop
jno
jp
push
rcrl
stos
insl
push
pop
mov
push
pop
mov
loope
pop
subb
jae
xor
ljmp
lea
pop
shll
ljmp
fcom
and
pop
push
pop
int3
push
loopne
push
ja
xchg
mov
imul
jmp
dec
andl
std
mov
ljmp
sbb
mov
outsb
xchg
pop
ja
mov
dec
push
jno
sbb
sub
jge
fbld
in
or
mov
outsl
pop
lret
lahf
js
sbb
adc
insl
fsubr
pop
aaa
jl
ljmp
push
or
movsl
cmp
cltd
movl
ljmp
repnz
seto
sbb
inc
inc
or
insb
pop
or
and
cli
sub
mov
and
xchg
xchg
adc
mov
or
mov
and
mov
lret
sub
xchg
or
dec
adc
push
ja
adc
loope
scas
dec
dec
sbb
insl
loop
out
ljmp
cmp
xor
sbb
xchg
movsb
sub
and
setnp
ljmp
inc
or
xor
mov
sbb
jns
insb
ljmp
lock
arpl
adc
shl
das
xor
jns
sbb
lock
iret
out
lahf
ljmp
or
rcr
xchg
ljmp
js
dec
imul
mov
stos
mov
or
andl
aam
push
out
fisttpl
xor
adc
xchg
sbb
loopne
out
jnp
roll
and
cld
fsub
icebp
sarl
xor
sbb
or
add
sbb
sti
in
sub
add
pop
pushf
int3
mov
mov
adc
and
add
dec
das
imul
fucompp
or
or
call
cmp
sbb
mov
ljmp
xor
lds
xor
subb
push
sbb
mov
into
repz
or
jne
jl
dec
ljmp
cs
fadds
loopne
mov
ror
inc
mov
mov
xchg
and
mov
xor
out
inc
in
mov
scas
pop
int
xchg
jecxz
sbb
jmp
cmpsb
fdivrs
xchg
jp
loopne
push
incl
jo
ljmp
into
jnp
es
jle
xor
sub
pop
jp
mov
test
cmpsb
lret
jle
stos
xchg
xchg
punpckldq
vandps
ror
lock
xor
in
xchg
lods
loope
inc
mov
test
mov
mov
xor
push
xchg
xor
lret
inc
sbb
mov
cmp
push
icebp
cmp
repz
and
in
add
jo
jle
das
arpl
dec
ss
lret
idiv
pop
fwait
cmpsb
fdivl
aaa
lret
js
cmp
cmp
in
pusha
rorl
sbb
mov
inc
lret
mov
cmpsb
jge
cli
lret
mov
dec
gs
daa
inc
cmc
int
int3
mov
rolb
push
leave
jae
les
lret
push
xchg
mov
shr
jge
fwait
mov
lret
sbb
mov
sbb
sarl
xchg
xlat
lret
push
out
pop
mov
sti
mov
mov
jmp
insb
mov
xchg
xor
add
xchg
lret
sbb
hlt
dec
mov
cmc
aam
dec
dec
pop
out
imul
dec
shlb
lods
lret
mov
pop
push
aaa
das
mov
add
mov
cmp
ds
sbb
in
popf
lret
mov
adc
fists
xor
push
dec
iret
pop
es
aaa
lret
dec
sub
dec
cld
add
lret
daa
rcrb
xchg
lock
insb
stc
mov
repz
lahf
xchg
lret
jno
inc
ss
rcrl
adc
pop
es
lret
loopne
fldenv
jbe
lret
ja
jle
stc
and
loop
cmp
pushf
xchg
push
mov
insl
xor
and
push
stos
jnp
adc
mov
jo
xchg
int
sub
fs
jp
repz
sbb
pop
lock
mov
or
mov
cmp
lret
xchg
ss
lret
cmpb
and
xor
ljmp
pop
roll
xchg
movsl
dec
js
insl
into
lret
jg
adc
mov
add
popa
inc
dec
xchg
scas
lret
push
and
mov
inc
or
lret
inc
popf
mov
dec
lret
and
sti
mov
sub
rcrl
test
mov
lret
jl
mov
std
sar
pop
pop
jo
pop
jb
lods
lret
cmp
push
or
lret
add
inc
lahf
dec
mov
mov
aam
and
addl
mov
xchg
dec
fs
ljmp
lds
imul
stos
repz
rcl
jl
lret
ss
and
not
stos
iret
mov
sbb
mov
jnp
jg
or
fsubrs
mov
xchg
ficomps
xchg
mov
and
out
mov
fadds
jb
lret
xchg
dec
push
je
mov
jg
mov
aam
int
roll
or
movsb
stos
push
push
pop
ja
push
in
xchg
daa
scas
mov
jne
leave
or
mov
in
lret
out
xor
ret
ja
xor
sbb
mov
pop
mov
lret
rcrl
mov
lret
iret
fwait
cld
jns
scas
xor
and
mov
or
mov
sarl
mov
sub
jo
xlat
lret
dec
pushf
jl
jg
mov
lret
dec
push
pop
pop
nop
jno
lret
lods
lock
arpl
inc
mov
iret
fcmovne
xchg
mov
inc
jbe
dec
addb
xchg
sti
adc
dec
cs
iret
mov
dec
popa
inc
and
int
mov
ljmp
lret
int3
imul
aas
int
out
push
sti
leave
mov
xchg
inc
ljmp
sub
push
sarl
mov
lret
jg
lret
push
stc
in
inc
orb
std
jmp
jne
jb
cs
jo
repz
xchg
xchg
lret
mov
jg
pop
lret
gs
data16
mov
mov
cwtl
imul
out
xor
jmp
iret
jmp
push
mov
push
jns
out
loope
aad
mov
out
hlt
mov
stos
pop
sar
fnstsw
sub
adc
out
or
mov
int
sbb
lahf
je
cli
adc
mov
stc
pop
adc
jecxz
loope
mov
cwtl
push
js
xchg
and
xchg
jl
xchg
dec
leave
sub
jmp
mov
movsb
out
jbe
lods
pop
add
sub
lret
pop
frstor
data16
daa
xchg
mov
xchg
in
push
pop
or
and
xor
mov
adc
lret
lock
jg
and
inc
std
dec
dec
lds
mov
sub
testl
loop
push
fsubs
das
lret
in
js
bound
ret
mov
in
lret
lcall
inc
push
cltd
xor
jle
mov
lds
pop
xor
mov
cmpb
dec
sbb
xor
stc
les
enter
add
jo
pop
dec
loope
lcall
push
xor
push
push
shl
imul
sahf
in
test
mov
xor
push
ss
adc
sub
push
jns
lret
aaa
dec
cmpsb
repz
adc
sub
fwait
int
xor
xchg
loopne
lret
cmp
fucomi
xor
test
mov
push
dec
in
stos
xchg
lret
xor
and
jns
push
fldl
rcll
mov
mov
add
loopne
fimuls
bound
lret
call
jecxz
cld
js
iret
push
dec
dec
mov
aad
imul
cmc
lret
into
out
in
stos
pop
int3
lret
sbb
rcl
ljmp
add
mov
pop
aaa
pop
lret
fldcw
int
test
cwtl
leave
jbe
add
repz
and
pushf
push
out
jbe
stc
inc
pop
sbb
add
bnd
mov
sbb
sub
lret
stos
adc
cld
notb
xlat
int3
scas
das
into
xchg
imul
jecxz
lret
in
js
pop
arpl
sar
cwtl
jg
dec
test
jae
lret
ja
into
mov
lret
xor
sbb
ror
ret
mov
push
lds
pop
dec
xchg
cmpsb
lret
mov
lea
fisubs
int
cmpsl
insb
stos
mov
add
aad
lret
xchg
adc
adc
rol
mov
or
fnstenv
stos
cld
pop
xchg
rorl
inc
lds
rcl
xor
test
sbb
int
xchg
ret
cmc
or
push
daa
mov
mov
xchg
fisubs
pop
jae
test
xlat
xor
inc
int
out
lret
pop
jb
lret
addr16
arpl
xor
jns
lret
cwtl
fcoml
rcrl
cmp
mov
push
xorb
or
icebp
and
lret
test
bound
pop
scas
rcll
lds
loope
pop
cmc
xor
in
and
daa
ljmp
mov
and
ret
and
xor
push
push
push
test
test
int3
aad
js
repz
sti
xchg
mov
inc
fs
adc
dec
mov
pushf
lret
xor
roll
xor
jp
lret
shlb
mov
adc
lret
add
mov
lret
ss
shrl
jge
push
lcall
cmp
and
in
mov
or
dec
inc
inc
mov
and
lret
inc
adc
in
enter
jno
scas
subl
stos
sahf
aaa
push
push
jp
xor
negb
aas
sub
add
dec
jne
xchg
mov
pusha
cmpb
out
and
pminub
sarb
pop
mov
dec
xor
or
mov
loopne
fwait
sahf
xor
int
int
loop
sub
pop
mov
mov
cmp
stos
inc
xlat
inc
sbb
js
mov
lods
lret
adc
outsl
call
lret
clc
fbstp
imul
inc
ret
dec
out
ds
sub
jnp
xor
loopne
test
sub
mov
int
pop
push
xchg
add
adc
fsubrs
lret
or
loopne
cmp
jl
adc
fstps
cmp
xchg
out
roll
loop
mov
xlat
test
jne
popa
aaa
ljmp
sti
jmp
shlb
xor
cmp
int
insl
jno
loopne
in
cmp
sbb
out
fistps
ljmp
xchg
lret
icebp
dec
aad
or
xchg
inc
lret
sbb
sti
jns
push
lods
dec
jle
jg
cmc
cmc
xchg
mov
arpl
xor
dec
test
sarb
mov
int
mov
cmp
xlat
psraw
cmp
out
in
mov
mov
lret
mov
cli
xchg
clc
or
cmc
and
repz
lret
pop
cmpb
int
dec
xchg
mov
cmp
inc
loop
paddusw
int3
dec
imul
lret
push
jb
in
insb
sbb
repnz
cmp
xchg
inc
ja
push
and
push
lret
loopne
dec
adc
hlt
cmp
mov
push
int3
stos
dec
jb
sbb
adc
dec
bswap
mov
push
icebp
es
imul
fcoms
inc
pop
jo
negb
cmp
lods
stc
jnp
lret
push
push
push
pop
or
push
push
cmp
test
lods
lret
adc
dec
dec
lret
aas
pop
gs
cmpsl
push
imul
xchg
mov
or
jp
lret
pop
cmpsl
or
sbb
fcmovbe
popf
out
and
scas
ret
cmp
dec
jle
xor
or
xorb
pop
push
mov
cmp
sub
and
jg
add
inc
ficompl
fdivl
or
nop
push
cmp
loopne
sub
je
jnp
sub
repnz
xlat
lret
pop
xor
add
mov
aaa
pop
sarl
xor
fistpl
push
push
lret
xchg
adc
lret
cmp
xlat
xor
push
das
stos
pop
mov
fs
sbb
dec
mov
fcomip
inc
or
mov
lcall
push
xchg
jge
and
push
int
dec
pop
and
jne
jnp
cmpsl
jmp
outsb
or
xor
inc
push
out
daa
sahf
mov
testb
cmpsb
mov
pusha
adc
int
ret
lock
pop
xchg
xor
clc
sbb
cmp
into
pop
sbb
xchg
inc
add
aaa
je
jae
xor
dec
mov
jns
imul
mov
lock
sbb
nop
std
and
jp
out
cmp
mov
bound
push
outsb
mov
jmp
push
int3
or
jns
xor
clc
xchg
mov
xlat
test
sbb
loope
pop
movsb
and
jmp
sub
aam
inc
sub
mov
pushf
mov
cwtl
mov
orl
pop
mov
sub
sbb
fwait
mov
insb
sbb
inc
scas
loope,pn
pop
out
pop
test
and
sbb
jae
mov
inc
frstor
adc
loope
xor
inc
out
sbb
dec
xor
push
ljmp
push
popl
mov
and
mov
in
cltd
dec
mov
push
jnp
scas
inc
popa
or
adc
sti
out
cmpsl
fsub
hlt
aas
cmpsb
jle
dec
aam
xor
cmp
xchg
stos
sbb
sub
aas
xor
in
jo
sbb
jnp
fmul
test
and
insb
jecxz
jecxz
bound
repz
arpl
loopne
push
scas
outsb
dec
ss
sbb
adcl
mov
fsubrl
and
imul
sbb
push
sub
mov
mov
dec
fistpl
mov
lret
fdivs
bound
addr16
mov
gs
jno
rcl
jns
adc
je
popa
push
jmp
jns
jno
iret
int3
xchg
in
ret
sbb
repnz
gs
xchg
subl
xorl
mov
dec
adcb
out
arpl
iret
sbb
mov
pinsrw
out
mov
lahf
loope
xchg
int
pop
push
pop
in
adc
test
andb
sbb
dec
mov
popf
mov
repz
or
sbb
call
fidivl
les
fildll
out
loope
and
int3
jmp
sbb
xor
sbb
dec
mov
sbb
movsb
xchg
sti
sbb
leave
jl
and
cmpsb
dec
jmp
lret
and
xor
int
movsb
mov
or
subl
subl
in
lret
sbb
sbbl
sbb
in
dec
sbb
push
mov
insb
mov
loopne
stos
mull
cmp
mull
pop
jno
xchg
fstpl
outsb
cs
and
jns
outsb
ljmp
jno
add
test
mov
mov
insb
les
mov
jle
lods
std
xchg
je
adc
jmp
jp
mov
das
dec
dec
sbb
sub
adc
xchg
cmp
jge
js
xchg
ljmp
dec
sbb
iret
test
aad
ljmp
test
arpl
mov
xor
jmp
stos
pop
hlt
ljmp
lret
ror
mov
mov
or
push
mov
ja
jg
fldcw
ret
jle
ret
cmp
stos
mov
lahf
xchg
cmp
mov
pop
shlb
xor
mov
mov
lods
outsb
xlat
cmp
dec
or
cmp
leave
sbb
insb
hlt
out
lret
or
adc
mov
add
pop
ljmp
pop
jg
and
mov
pusha
inc
sub
add
pop
or
push
insb
iret
sbb
and
add
arpl
jno
js
sbb
rclb
pop
rorl
inc
cli
dec
xlat
fistpll
cld
lcall
movsb
outsl
lds
xor
daa
shll
dec
jle
push
repz
into
or
xor
out
pop
sbb
jl
out
stos
push
jecxz
mov
orl
jl
pop
xor
push
ret
mov
sbb
jne
jno
cwtl
stos
cmpsl
pop
fidivrl
cmpsb
out
loope
push
pusha
push
pop
mov
pop
push
xor
inc
add
adc
loope
punpckhdq
popa
xchg
daa
add
inc
movsb
adc
rcrl
pop
out
imul
mov
mov
inc
pop
mov
loopne
cmp
movsl
sbb
les
rorl
sub
pop
xor
sub
jae
jmp
and
je
scas
sbb
out
negb
sbb
xor
lods
subl
xchg
jno
std
scas
cmpsb
enter
xchg
jns
adc
push
mov
outsl
xor
test
lret
adc
cmp
xchg
popa
add
lods
fadds
test
test
cmpsl
lahf
fstp
and
ja
sbb
and
inc
jecxz
popa
or
lds
xor
inc
jmp
jno
pop
sbb
and
sbb
repz
test
insb
fnstenv
xchg
idivb
jne
mov
inc
xchg
shll
pop
push
rcl
or
cmp
gs
adc
xchg
fcoml
lds
pop
push
inc
cs
aam
sbb
xchg
jnp
and
dec
mov
ret
dec
fstps
les
ret
mov
stos
imul
pop
mov
loope
movsb
jae
sbb
rcll
cltd
pop
icebp
pop
cmp
lret
mov
out
ret
sbb
dec
inc
or
cmp
adc
jb
sbb
push
xor
orl
repz
inc
sbbb
popa
in
je
rcl
jnp
fnsave
ficompl
sbb
and
pop
shl
and
push
push
jae
push
add
jno
push
jae
pop
les
stos
dec
popf
rcll
xchg
mov
inc
pushl
sub
arpl
jecxz
mov
shlb
or
jae
aaa
incl
mov
or
stos
or
ljmp
jecxz
movsb
stc
ja
mov
jg
jno
outsb
sbb
pop
push
rcrl
fstps
fwait
mov
frstor
xor
out
pop
xor
cmp
inc
adc
pop
sbb
push
aam
cmpb
inc
nop
loop
adc
cwtl
xchg
pop
outsb
fadds
sbb
dec
cmp
adc
inc
out
adc
mov
push
leave
rcrb
rcrb
loop
cs
shl
ret
iret
xor
mov
arpl
loop
lret
adc
mov
out
imul
and
gs
or
test
push
loopne
lret
cmp
dec
leave
out
cmpsl
test
lods
or
jge
pop
mov
sub
sub
mov
jmp
push
sbb
cld
or
xchg
sub
sbb
or
rcl
arpl
loopne
aad
sbb
sbb
das
adc
shll
test
and
daa
mov
bound
pop
mov
sub
sbb
loop
fnstsw
rolb
xchg
ficomps
gs
cmpsb
mov
xor
pop
dec
push
gs
shld
jnp
fcomps
enter
adc
push
stos
pop
xor
fnstenv
mov
sti
ret
jbe
and
mov
push
adc
or
fcompl
movsl
ret
sbb
es
push
dec
rorb
sti
mov
in
sbb
insb
insb
cmpsl
add
jp
cld
leave
outsl
adc
les
jae
inc
out
sbb
popa
rsqrtps
in
lock
adcb
xchg
call
fmull
mov
mov
stos
stc
test
cmp
push
ror
sub
ljmp
jno
adc
mov
in
scas
shll
mov
pop
mov
mov
in
cmp
add
inc
stos
out
inc
dec
pop
jp
inc
fdivl
out
imul
inc
cmp
in
or
sbb
mov
xchg
movsl
push
lods
mov
push
xchg
mov
xchg
out
jecxz
pop
movb
daa
sbb
insl
inc
add
sbb
adc
jmp
or
mov
adc
sbb
and
inc
aaa
stos
scas
lock
testb
mov
mov
cmp
fldenv
xchg
test
mov
nop
outsl
dec
cltd
inc
div
cmp
aas
push
lods
xlat
xchg
sbb
mov
enter
addr16
mov
jae
jmp
push
sbb
loop
fdivrs
xchg
andl
jle
pop
mov
and
mov
bound
and
pextrw
mov
addb
shrb
call
pop
pop
xchg
fs
pop
xchg
adc
jns
sbb
xchg
dec
popa
mov
xchg
pop
ds
aam
daa
psrad
xlat
jg
xor
dec
fwait
mov
jno
cli
dec
xchg
inc
call
inc
stc
jo
xchg
je
dec
neg
clc
out
icebp
inc
fcmovb
jbe
sbb
clc
jl
in
out
arpl
mov
icebp
mov
push
lahf
mov
or
fistpll
push
test
xor
fcmovnu
sbb
int3
outsl
jmp
insw
insb
push
push
add
mov
dec
push
push
sub
das
fstpt
sarl
xchg
cmpsb
scas
cmc
and
jp
pop
in
dec
dec
and
sbb
cltd
orl
cmp
ret
push
addr16
push
test
xchg
sbb
sub
lahf
imul
mov
sub
xor
das
popa
sub
xchg
mov
jg
hlt
ret
push
popf
mov
call
jne
cmp
imul
pusha
inc
hlt
xchg
xor
cmpl
jmp
out
xor
ss
xor
push
cld
cmp
sahf
xchg
movsl
xor
mov
cmp
mov
inc
xchg
je
sahf
hlt
cmp
pop
andl
mov
push
test
pusha
aas
and
and
fwait
sub
loope
sub
xchg
add
or
sub
sbb
aam
sbb
nop
cmp
jns
sub
andl
or
subl
int3
xchg
outsl
fsubrl
lcall
xor
sbb
out
jno
nop
adc
lret
call
rol
xchg
fs
pop
sbb
xchg
and
sbb
xchg
push
sbb
inc
test
xor
fsubrl
lds
adc
push
add
fsubrl
pop
add
add
inc
xchg
jbe
adc
lock
mov
ja
aam
and
push
mov
pop
in
insb
add
jle
xchg
mov
push
sti
mov
xchg
loop
scas
cld
mov
gs
andl
mov
adc
jae
sbb
pop
xor
pusha
cs
loopne
add
sub
adc
test
cmpsl
push
xor
addr16
inc
scas
sbb
push
mov
mov
ficompl
ljmp
pusha
in
es
or
jns
push
test
or
int
scas
bound
inc
push
mov
mov
push
ss
repz
xchg
push
sbb
lods
bound
xlat
jne
mov
xchg
test
lds
xchg
pop
xchg
test
lret
pop
aam
rdpmc
std
cmpsl
loopne
cld
leave
out
inc
mov
pop
cmp
cs
sti
xorl
out
rol
fdivs
hlt
je
imul
sbb
dec
cmc
repnz
lds
xchg
push
add
shlb
icebp
and
adc
jno
js
es
sbb
out
fdivl
gs
xchg
dec
int
add
mov
push
xor
jmp
fildl
imul
sti
fidivl
call
sti
sub
call
ss
dec
ret
mov
lret
ss
or
stos
lds
mov
add
popa
mov
jns
movsl
ret
mov
xchg
loope
and
add
stos
and
sbb
out
test
jge
xor
fsts
mov
sbb
sbb
xchg
call
ficoml
popa
xor
add
test
in
mov
ret
rcl
mov
pop
sub
cmpsb
arpl
push
inc
dec
cltd
pop
imul
aad
ja
adc
orl
sbb
cmp
and
fyl2x
mov
pop
ficoms
in
add
ret
and
adc
test
push
fwait
mov
insb
jmp
cld
sub
mov
adc
test
mov
jne
xchg
mov
enter
aam
push
xchg
xor
jl
or
sti
xchg
imul
inc
push
and
jbe
inc
ret
les
xchg
outsb
test
mov
jno
mov
aad
imul
jnp
ljmp
and
in
mov
fstpt
popf
loopne
or
pop
pop
push
add
mov
mull
jg
subb
adc
into
mov
xor
mov
loop
sbb
scas
leave
lea
mov
mov
adc
outsl
sbb
mov
or
ljmp
in
fsubs
pop
push
push
addr16
pop
jp
es
out
out
fsts
std
loop
fnstcw
fcom
negb
or
stos
int
inc
mov
scas
jno
mov
jo
hlt
push
movsl
pop
inc
int3
sbb
decl
or
bnd
xchg
lret
mov
sbb
subl
sti
or
fld
test
add
cmpsb
push
pusha
call
inc
and
mov
cmc
push
jg
jnp
aad
mov
mov
push
icebp
push
sbb
pop
jbe
int3
addl
popa
lock
cs
adcb
push
sbb
lods
inc
add
push
pusha
out
jns
push
cltd
rol
stos
sbb
insb
cmp
into
adc
fbstp
adc
shrl
scas
and
push
xchg
and
sbb
mov
gs
xchg
xchg
and
fisttpll
or
pushf
cmp
mov
out
dec
frstor
sbb
mov
in
mov
imul
sbb
push
int
jno
push
sarl
and
push
int
adc
es
add
adc
lret
mov
loope
icebp
lret
lea
sti
lret
int3
lods
cmp
and
push
jp
aas
bound
lret
adc
into
or
lret
sub
cmpsl
xchg
cvttps2pi
dec
aad
jp
insb
ffree
out
js
cs
nop
repz
dec
stos
xor
jmp
iret
sub
adc
push
jecxz
lret
jl
adcb
clc
pop
roll
xchg
nop
out
lret
repz
inc
lret
xor
mulb
lret
mov
mov
test
lock
clc
fdiv
gs
xor
lea
shrl
jl
bound
mov
lret
xor
and
repz
lret
leave
js
negl
mov
sub
ljmp
test
jge
sarl
inc
or
lret
cmp
ja
lret
push
push
jl
lret
inc
testb
mov
pop
sub
xchg
fwait
mov
mov
lds
jp
jg
ret
lret
int
adc
pop
xlat
mov
lret
mov
dec
aaa
fwait
dec
lret
mov
fisubrs
cmp
test
cmp
jp
popa
push
repz
shll
inc
loope
xchg
outsb
lret
xlat
imul
mov
push
mov
inc
push
sti
nop
shll
lret
xlat
in
pop
sbbb
insb
clc
mov
lret
sbb
sub
testl
cmpsl
das
jge
xor
lret
mov
and
xlat
jno
dec
mov
cmp
pop
cli
movsb
sbb
xor
pop
shll
and
sti
xchg
adc
movsb
lret
rorb
cli
aaa
mov
cmpb
lret
lds
xlat
lea
pop
pop
sub
sub
inc
mov
sarl
add
cwtl
mov
push
lret
mov
out
xor
cmp
lret
int3
mov
pop
xlat
jl
pushf
repz
push
dec
xchg
xor
push
test
sti
fwait
out
aad
imul
and
or
cmove
je
inc
cmpsl
or
out
into
mov
lds
inc
lret
jl
popf
mov
scas
push
insl
lret
sub
lods
rorb
push
dec
xor
xor
xchg
call
sbb
mov
lret
adc
aaa
lret
mov
enter
pop
and
adc
pusha
test
inc
xchg
xchg
sub
fwait
lret
ss
rorb
lret
scas
cli
xor
movl
sbb
xchg
cmc
dec
mov
loop
push
test
aam
pop
rcll
lret
and
mov
imul
or
dec
pop
jb
lahf
lret
push
jecxz
jl
xor
enter
fbstp
lret
ja
int3
shrl
aaa
lret
js
enter
rcr
rcr
push
pop
or
outsb
jo
movsl
lret
in
dec
divl
sub
cmp
fldenv
icebp
rcll
adc
pop
fbstp
ljmp
icebp
out
clc
dec
int3
jecxz
lcall
mov
sub
lahf
lret
nop
sbb
les
sbb
cld
out
xor
orb
xchg
das
bound
ds
cwtl
scas
dec
dec
roll
jmp
sbb
pop
lret
pop
je
iret
jp
arpl
xor
cmp
jo
mov
pop
rorb
or
aam
cli
fmulp
ljmp
shll
lcall
xchg
cmpsl
inc
mov
lret
xor
fildll
out
iret
push
jecxz
or
outsl
fisttpll
sbb
pop
ret
sbb
add
push
movsb
jmp
mov
mov
out
enter
or
add
inc
es
pop
insl
loop
testl
or
shrl
add
lcall
fs
in
mul
cmp
lret
mov
leave
hlt
ret
ret
enter
lcall
call
nop
push
jmp
pop
sbb
gs
pop
or
xchg
inc
insl
int
or
inc
jb
jp
push
shlb
js,pn
lret
dec
test
mov
nop
loope
das
stos
lret
sbb
xor
mov
xchg
mov
cmpsb
jne
sbb
out
lret
pushf
push
push
pop
lret
pop
rol
mov
lret
push
imul
sbb
fdivrl
lahf
push
mov
andl
outsl
dec
mov
shll
add
adc
sbb
cmpsb
je
and
lret
or
bound
int
out
pusha
dec
je
dec
out
out
insb
lock
cmp
scas
mov
andb
lret
and
or
lret
pushf
mov
lea
mov
mov
outsb
test
out
mov
sbb
shl
push
jne
outsb
xor
lret
sub
daa
dec
iret
mov
sub
lret
cmp
lahf
cli
sahf
mov
push
and
popf
and
icebp
sarb
sbb
lret
dec
jmp
popa
pop
xor
rorl
jno
xor
and
cmp
roll
jae
lret
rcl
sub
je
lret
bound
xor
or
imul
jmp
inc
xor
inc
int
and
and
bound
movl
js
sahf
repz
inc
xchg
pusha
lret
push
int
mov
lret
fsubrs
mov
mov
nop
enter
loopne
lret
mov
xchg
pop
out
in
jmp
mov
sbb
push
insl
rcll
lcall
mov
je
sub
inc
lret
icebp
sub
pusha
pop
repnz
pop
dec
out
lret
out
idivb
lret
push
inc
mov
mov
pop
cmpsl
daa
dec
test
inc
dec
xchg
add
lret
sbb
mov
cwtl
pusha
lcall
movsb
in
push
movsl
cmp
cltd
int
push
mov
mov
das
sub
dec
pop
mov
lret
xchg
mov
cmp
sahf
fwait
loop
fsubrs
lret
mov
mov
mov
xor
lret
je
xchg
lret
pusha
mov
jp
push
dec
lret
push
out
into
fcomps
addr16
ljmp
xor
pusha
jp
aaa
lret
push
xchg
xor
shll
sti
and
mov
mov
shrb
mov
lret
sbb
inc
clc
add
test
push
jg
xchg
leave
sbb
test
mov
pop
lret
stos
movsl
mov
dec
jno
and
cwtl
test
pop
ss
cltd
rorl
mov
int
aaa
adc
cld
sbbl
mov
sbb
pop
out
aas
iret
dec
or
daa
mov
jmp
lcall
popa
xchg
sti
fstpl
fnstsw
lret
mov
cmp
lds
dec
pop
push
xchg
lret
dec
sub
in
jo
fcmovne
mov
mov
xchg
xchg
sub
lret
repz
scas
cltd
pushf
cwtl
jge
xchg
mov
popa
lds
mov
mov
mov
out
inc
adc
rcrb
movsl
lret
and
xchg
lret
mov
insl
cld
jo
shll
mov
lret
imul
cmpsl
lret
sbb
cmp
js
push
stos
push
cmpsl
pusha
lock
jmp
imul
in
or
stos
mov
je
nop
cs
mov
lret
cmpsb
mov
push
out
xor
addb
outsb
and
jle
push
fbstp
mov
xchg
lret
dec
jmp
adc
push
sbb
push
into
shlb
sub
fsubp
dec
sub
add
shl
dec
push
push
bound
dec
dec
or
jp
arpl
xor
mov
mov
test
add
bnd
cmp
pop
sbb
dec
dec
xchg
aaa
cmp
fs
lock
sbb
ret
movsb
jl
mov
adc
mov
dec
inc
outsl
fs
xor
dec
mov
jmp
inc
dec
xor
hlt
push
sarb
push
cmc
jmp
pop
pushf
or
test
daa
push
dec
jmp
jl
mov
mov
sbb
out
or
jno
loope
insb
in
movaps
test
and
mov
setb
or
stos
mov
in
stc
pop
daa
es
test
in
xchg
pop
and
mov
or
sbb
fidivrs
lret
fistpl
xor
pop
int3
push
jge
sub
mov
mov
popf
nop
fisubrl
rcl
jne
bound
data16
hlt
cli
nop
push
stos
sbb
cmp
jns
test
rcl
in
sti
sbb
push
mov
mov
ja
mov
push
pop
mov
es
adc
inc
out
sbb
jae
jne
test
sbb
xchg
ficoml
gs
xchg
frstor
loope
fcompl
or
push
cwtl
aaa
mov
mov
fldenv
pop
adc
push
lcall
mov
mov
pop
fs
and
imul
pop
lret
gs
sahf
xchg
test
adc
pop
inc
xor
cli
pop
xlat
std
and
sub
adc
mov
cwtl
pop
fmulp
cmp
cmp
fptan
movsl
bound
jmp
ret
xchg
pop
push
jno
in
cli
cld
enter
jo
lock
sbb
mov
jp
ljmp
cmp
jge
fnstcw
lahf
lret
xor
pop
stos
in
push
dec
cmpsb
lret
bound
outsb
dec
mov
lret
lods
mov
enter
loop
sub
icebp
lret
cmp
mov
ret
jo
jno
subl
xor
daa
out
dec
cmp
lret
jecxz
out
inc
test
mov
mov
dec
mov
das
data16
aam
xchg
lret
arpl
mov
inc
scas
lea
mov
lods
test
loop
lret
dec
scas
out
sub
leave
popa
div
imul
sub
ja
mov
int
add
lahf
stos
lret
gs
addr16
fistl
lret
pop
mov
pop
dec
andl
dec
inc
lret
pusha
mov
aad
push
daa
mov
inc
rorb
lret
cld
ret
push
jo
xor
inc
dec
sub
sahf
lret
add
pop
xchg
cmp
inc
lret
mov
inc
or
lret
jns
xchg
jle
shrl
or
aas
jl
mov
fisubrs
test
inc
lea
push
lret
cwtl
lret
mov
jp
arpl
pop
and
mov
jp
lcall
cwtl
stos
jge
xchg
int
and
or
nop
pushf
lret
xchg
data16
or
fistpll
pop
jo
loope
xchg
jp
sbb
lret
push
enter
inc
lock
cmp
mov
pop
mov
lret
fldl
lret
cmpsb
jb
xchg
enter
mov
pop
add
or
push
popa
dec
ja
lea
mov
mov
push
cmpsl
push
mov
loop
xor
mov
pop
push
mov
ffreep
loope
inc
adc
je
push
or
push
inc
jp
loop
arpl
not
or
lret
loopne,pt
pop
rorl
mov
das
repz
sub
lret
dec
out
rclb
jp
imul
stc
cli
or
dec
sbb
dec
xchg
es
mov
mov
jl
pusha
push
push
clc
int
es
xchg
ficomps
mov
fstpl
nop
or
scas
ret
mov
xor
adc
stos
cld
shll
faddl
in
lret
or
outsl
test
pushf
pop
jmp
enter
int3
shlb
lahf
jle
xor
dec
push
stc
mov
push
adc
sub
cs
aad
xor
fwait
scas
push
iret
nop
out
cmp
pop
xlat
and
lret
out
mov
mov
lret
or
das
aad
lret
int
pop
jecxz
rep
mov
push
mov
jl
out
adc
in
ret
dec
push
lret
lret
dec
fcoml
jne
lret
stc
inc
mov
jae
stos
inc
inc
mov
mov
arpl
jecxz
push
pop
lock
lret
push
sahf
fnsave
mov
mov
xor
cmpsb
jg
jne
xchg
pop
shrl
jl
dec
mov
icebp
pop
mov
jbe
jecxz
cmp
add
cwtl
stos
lret
dec
add
cmp
and
mov
pop
addr16
mov
lods
xor
inc
dec
rcl
lret
fistps
inc
jae
mov
mov
dec
mov
das
or
les
xor
cmp
push
lret
push
pushf
mov
fs
dec
addr16
testb
jo
lret
pop
dec
icebp
sub
add
jmp
test
loop
mov
outsl
ds
push
cmp
fs
sti
jb
lea
dec
mov
cmp
gs
out
adc
sub
lret
or
iret
sbb
mov
and
lret
inc
fwait
dec
out
lret
jno
arpl
dec
insl
add
lret
lea
fidivl
fiadds
xchg
jmp
mov
out
lret
add
push
fildll
std
leave
fs
fwait
cmp
pop
stos
out
scas
lret
out
jbe
push
ucomiss
add
call
fucom
mov
arpl
mov
add
movsb
lods
adc
mov
mov
or
mov
outsb
bnd
and
push
in
add
mov
xlat
push
imul
sub
out
fisttpl
insl
int3
xor
jl
leave
cmp
xchg
hlt
lret
clc
cmp
add
outsb
test
int3
and
sbb
pop
xrelease
mov
dec
arpl
mov
sub
out
aaa
lea
lret
mov
cmp
rclb
mov
popf
mov
jge
fxch
out
stos
in
lret
cmp
test
mov
mov
xor
lret
sbb
aad
mov
xchg
dec
test
mov
or
jle
and
sub
jne
mul
lods
cmpsl
daa
jge
jle
ficompl
sti
adc
and
mov
lret
addr16
push
popa
lret
rcr
mov
adc
sti
xchg
adc
rcr
in
stos
out
std
lret
addb
push
movsb
adc
and
lret
rclb
mov
xor
in
xor
test
sbb
push
pop
sar
aam
jp
jnp
fwait
lods
loopne
ja
ret
arpl
sub
xor
lret
mov
lahf
push
int
jns
je
sub
fdivrp
lret
xchg
gs
mov
leave
dec
inc
dec
xchg
xor
push
add
push
fs
mov
out
lret
adc
mov
int3
lret
andb
scas
push
inc
repz
sbb
pop
es
adc
out
lret
ror
xor
jbe
xchg
int3
and
repz
cmp
push
lret
mov
sbb
xchg
lret
mov
xchg
pusha
imul
js
scas
sbb
mov
xchg
cmp
or
pop
xchg
push
inc
xlat
lret
jo
ret
ss
arpl
les
lret
adc
aad
xchg
xor
push
lret
inc
jle
inc
xor
sub
lret
aam
ret
je
les
jne
fmulp
dec
mov
xchg
mov
mov
test
jae
das
enter
xchg
mov
or
cmp
mov
ret
cli
push
or
lret
mov
cltd
dec
adc
cli
mov
push
notb
push
adc
and
mov
and
add
pop
sub
int3
shrb
bound
lret
lods
sub
cmp
insl
xchg
cmp
xor
arpl
push
jl
mov
and
sahf
inc
cmp
or
mov
and
pop
jb
lret
jg
arpl
lret
jp
jmp
test
and
lret
nop
jno
lds
es
xchg
int
push
test
add
in
sbb
leave
mov
aaa
push
add
sti
es
sbb
imul
xchg
jl
mov
ljmp
lret
or
dec
icebp
lret
cmp
mov
inc
mov
jmp
inc
lret
xchg
rcll
adc
pop
lret
lret
xor
fst
mov
add
mov
lret
out
loopne
xchg
mov
hlt
ror
pop
enter
pop
test
xchg
dec
push
pop
icebp
lret
dec
lock
and
lret
jle
aam
inc
lret
movsb
fs
push
inc
iret
or
call
adc
push
ja
enter
dec
repz
mov
jle
xchg
fildll
in
mov
or
pushf
ret
inc
mov
lret
lods
int3
push
adc
outsl
mov
sub
add
jecxz
pop
lahf
add
inc
push
hlt
lret
testb
and
xchg
and
pop
mov
mov
xchg
fnop
lret
jl
xchg
add
pop
mov
loope
or
in
leave
pop
stos
jne
shrb
mov
mov
push
lret
mov
sbb
scas
lret
inc
aaa
lcallw
scas
out
shl
jb
dec
pushf
sub
lret
sbb
ret
lret
in
cmc
xor
andb
iret
insb
mov
mov
xor
xchg
repnz
fmul
rcrl
dec
push
mov
adc
out
and
mov
mov
rcrl
add
mov
xor
push
dec
repz
pusha
sub
jmp
dec
lods
and
loopne
stos
insl
out
mov
loop
adc
or
lret
xchg
jp
mov
jo
das
adc
push
add
leave
mov
jae
mov
dec
lcall
lret
sbb
stc
xorb
pop
sti
jnp
shrb
test
sbb
mov
fldt
rcll
add
unpcklps
pop
ror
loop
jecxz
ret
push
mov
lds
mov
push
rolb
adc
cld
mov
sbb
lods
mov
jl
add
sub
sbb
push
dec
push
imul
fs
shl
sbb
loope
xchg
and
push
mov
and
fcomi
sbb
xchg
add
iret
add
add
cmp
xchg
mov
daa
and
arpl
sbb
into
or
daa
jp
sub
pop
cli
fwait
and
scas
nop
fdivs
adc
cmpsl
xor
cltd
popl
inc
loopne
cmp
lret
mov
xchg
imul
sbbl
mov
pop
cwtl
add
popf
dec
xor
or
mov
mov
testb
fs
pop
sbb
adc
ret
ss
adc
cmp
sbb
lds
lods
imul
dec
cld
pop
inc
xchg
mov
xchg
bound
lock
pop
mov
retw
iret
inc
pop
or
push
push
xchg
sahf
ss
mov
or
sbb
jmp
icebp
popa
sbb
or
or
je
mov
lods
shr
mov
aam
dec
mov
sbb
fisttpll
jno
pop
andl
inc
pop
fwait
sbb
outsl
sbb
xchg
cmp
and
outsl
mov
das
rol
inc
aad
stos
loop
push
pushf
sbb
adc
and
dec
inc
jae
push
stc
aad
hlt
fdivrl
xor
mov
in
aaa
in
maxps
mov
sub
test
cmp
xchg
out
mov
push
out
or
popa
or
pop
xchg
lahf
mov
xchg
mov
xor
xchg
jns
sbb
fnsave
or
pop
xchg
jno
lds
jmp
push
sub
mov
xor
cli
stos
mov
mov
sbb
mov
pop
cmpsl
ret
jl
shrb
mov
or
mov
scas
sbb
nop
dec
shrb
pop
lcall
and
int
das
mov
dec
les
cwtl
xchg
inc
out
mov
loopnew
stos
dec
sbb
nop
sub
fsubrs
pop
inc
jecxz
fidivs
scas
pop
sahf
test
sbb
cmpsl
push
push
sbb
or
adcb
jge
mov
ret
stos
repnz
xor
push
or
clc
push
pop
xchg
inc
push
push
sbb
dec
outsb
mov
cmp
outsl
mov
push
rorb
fwait
hlt
insl
in
or
push
push
call
or
jl
mov
dec
int
enter
xor
jl
out
and
fidivl
imul
jne
lret
sbb
rolb
leave
jle
scas
xlat
mov
sub
xchg
inc
nop
adc
cmpsb
sub
cmc
sbb
pop
out
aam
cs
mov
pop
and
pop
addl
mov
xchg
add
ret
rolb
jle
dec
sbb
pop
out
xor
std
sbb
out
dec
into
push
push
jne
push
lods
ds
ja
mov
mov
ds
add
sbb
sbb
xor
add
in
jae
into
pop
jns
mov
jno
add
shll
jne
int
mov
imul
and
push
fsubs
xchg
and
or
fstps
push
je
loope
je
shlb
push
jecxz
xchg
xchg
pop
fcoml
sbb
jns
aas
cmp
ret
cmc
dec
outsl
pop
push
sbb
out
rorb
pop
sbb
dec
leave
sub
inc
jmp
jl
push
ss
xor
push
sbb
xchg
lcall
rcll
movsl
mov
sub
mov
test
jecxz
jl
mov
mov
data16
sbb
xor
mov
and
mov
jno
push
push
lds
or
ret
arpl
out
and
mov
jae
insl
arpl
mov
pop
loopne
fstpl
aam
daa
test
out
xor
lods
ljmp
sbb
js
rcll
sub
jp
addr16
sti
mov
outsb
mov
icebp
inc
mov
hlt
and
xchg
and
fld1
test
cs
das
cmp
out
mov
xor
and
adc
xchg
outsb
jo
fnstsw
add
and
out
arpl
adc
icebp
push
pop
or
sti
mov
rol
stos
mov
stos
iret
popf
rcll
jo
add
jge
testl
stos
in
int
lods
add
mov
loopne
cli
cmp
repnz
jne
out
jmp
inc
mov
sbb
push
add
jmp
sbb
fadd
cmp
imul
and
mov
pop
push
in
xor
push
repnz
outsb
sbb
pop
scas
inc
orl
jge
sti
mov
fldt
repnz
or
xchg
sbb
aas
loopne
push
jecxz
pushf
xchg
push
mov
jne
mov
movsl
int
popa
sbb
fdivp
mov
or
fldt
sub
xchg
mov
mov
addl
imul
inc
outsb
sbb
ljmp
sub
and
inc
xor
mov
add
int
mov
lea
cmp
ret
adc
jne
push
sbb
pop
std
ret
push
movsl
pop
fsubs
mov
fnstenv
push
mov
mov
dec
or
dec
lods
sbb
test
dec
pop
push
lods
ret
xchg
mov
jge
dec
subl
sub
gs
push
xchg
imul
mov
lret
adc
cwtl
cmp
jns
xchg
rorl
out
aaa
rol
sbb
xchg
out
pop
xor
sbb
std
test
rolb
pop
outsb
jg
icebp
frstor
out
jmp
call
sub
mov
lods
repz
pop
push
sbb
jmp
ret
xchg
rorl
dec
lock
andb
test
mov
out
loopne
add
fwait
jno
xor
mov
mov
dec
push
les
or
aad
sbb
mov
mov
mov
mov
add
out
inc
andl
shrb
dec
packsswb
sub
inc
mov
push
ja
sub
sbb
mov
or
addr16
xchg
nop
add
bswap
hlt
insb
jle
adc
dec
xor
mov
sub
sbbl
mov
inc
data16
xor
fisttps
sahf
popa
mov
insl
pop
sub
or
int3
test
cmpl
dec
cmp
hlt
or
movsb
xchg
lods
add
addr16
cld
mov
fdivl
loopne
test
fisttpll
dec
mov
xor
into
shlb
rcrl
testb
pop
mov
jns
inc
bound
and
icebp
ret
mov
or
jmp
or
xor
out
shll
es
mov
sarb
sbb
mov
inc
pop
add
pop
or
scas
andl
sbb
add
repz
stc
inc
shrl
or
fwait
sbb
lock
fimull
loope
sbb
push
jg
pop
js
call
mov
lock
mov
loope
icebp
roll
test
aas
inc
lds
inc
outsb
mov
mov
adc
jbe
js
jmp
andl
pop
icebp
sbb
lods
jg
test
fildl
lea
int
sbb
insb
je
cmp
loop
int3
inc
and
in
cltd
arpl
pop
addr16
mov
mov
mov
mov
mov
enter
nop
push
sbb
adc
sbb
test
xchg
mov
mov
fcomps
jle
test
adc
adcl
or
sbb
aam
rcrl
dec
test
ljmp
jno
adc
xchg
mov
sub
aam
xchg
xchg
aaa
ficoms
add
movsb
pop
xor
movsl
sti
subb
or
inc
daa
rol
jo
insb
imul
dec
jmp
xor
push
ljmp
pop
adcb
sti
sbb
and
push
jno
loopne
xor
fimull
mov
xchg
fldt
xchg
cmpl
adcb
test
push
jno
mov
and
rcr
jmp
fiaddl
xor
lds
test
jge
lret
jno
mov
mov
ja
imul
dec
stos
xor
dec
gs
and
jmp
add
ss
xchg
xor
add
mov
and
dec
pushf
dec
jge
repnz
cmpsb
adc
push
and
ljmp
push
das
repnz
ret
mov
stc
aas
mov
or
sbb
sbb
std
mov
pop
sahf
jno
dec
ljmp
sbb
push
jle
out
test
and
daa
fs
cs
lods
sbb
adcl
ds
ficoms
sbb
jno
push
enter
ret
cmp
ljmp
xor
mov
pop
sbb
data16
jbe
scas
inc
sahf
xchg
cmp
lret
or
adc
inc
call
aas
testb
dec
in
pushf
dec
clc
loopne
iret
repnz
jp
sub
dec
pop
xchg
mov
or
scas
stos
xchg
inc
dec
adc
inc
jecxz
mov
sbb
jge
xchg
pop
mov
add
imul
lds
pop
and
jns
mov
jle
ss
sbb
dec
test
imul
aam
dec
ja
inc
arpl
lret
pushf
push
mov
xor
stos
shll
int
arpl
sarb
and
in
in
pushf
ds
ljmp
xchg
jmp
jp
insl
imul
shrb
or
cli
and
out
imul
xchg
mov
int3
mov
lret
xchg
imul
scas
dec
mov
dec
pop
test
movl
jo
scas
lds
or
movsb
xor
call
xchg
xorb
push
fsub
subl
jle
leave
ficompl
fdivrs
stos
push
sbb
mov
in
push
jmp
cltd
mov
xor
sbb
popa
sbb
enter
sbb
scas
ja
sbb
sbb
inc
push
lret
pop
mov
ja
cmpsb
insl
lock
jmp
inc
and
or
outsl
cmp
cli
nop
lret
push
jge
dec
adc
repz
inc
xchg
call
push
sbb
jns
mov
fcoms
aam
repz
xor
ds
sub
cmpsb
sub
push
mov
mov
or
and
aad
imul
mov
ja
cmp
out
fs
mov
xor
push
xchg
push
loope
mov
out
or
push
adc
lock
out
shlb
cmp
cmp
pushw
fbstp
sbb
xchg
iret
lcall
popa
ljmp
jno
sub
out
xor
mov
pop
idivb
mov
pop
aaa
mov
aam
lods
rcll
stos
in
int
jmp
adc
aas
scas
mov
sub
mov
pop
and
pop
mov
dec
scas
dec
jns,pt
mov
test
and
jp
inc
mov
test
sub
xchg
sub
cwtl
inc
pop
mov
jp
rorl
or
cmp
nop
dec
imul
and
lret
stc
sbb
pop
cmpsb
out
xor
adc
hlt
pop
lods
push
lods
jg
je
xchg
cmp
mov
xchg
out
jne
or
scas
lret
ss
aam
push
aaa
add
sbb
dec
jg
in
dec
lods
dec
push
js
lock
shl
lret
cmp
int3
test
push
mov
outsb
push
out
push
add
fdivs
sbb
out
inc
std
sub
dec
and
fld
jae
insl
int3
int
xchg
mov
pop
jge
inc
testb
dec
jnp
xor
inc
enter
jg
xchg
pushf
rcr
rcr
fsub
mov
or
in
push
enter
or
inc
data16
mov
aas
lahf
cmp
test
sub
inc
push
xchg
mov
sub
loope
scas
stos
sbb
shrb
addb
sbb
ficomps
sbb
xchg
out
aaa
cmp
int3
sub
test
and
loop
popa
xchg
cmp
sub
cmp
jbe
stos
ss
cwtl
cmc
fcom
jne
sbb
pop
pop
pcmpgtd
test
mov
ret
cmpsl
inc
sbb
sub
rcr
dec
lcall
adc
scas
cmp
mov
dec
ja
ret
call
add
rcl
sti
dec
xchg
or
movsb
lods
jnp
xor
es
or
inc
in
dec
mov
xor
je
xchg
rcrl
push
cmp
out
leave
fwait
es
push
pusha
out
push
sbb
imul
dec
dec
jnp
repz
mov
andb
sbbl
cwtl
pop
repz
fcompl
dec
std
sbb
cmp
push
pop
in
int
push
xlat
xchg
jp
rcll
xor
pop
je
or
or
fsubs
gs
icebp
mov
sbb
ret
push
mov
push
and
int
in
mov
test
scas
xor
push
test
mov
mov
mov
add
loopne
ljmp
cmpsl
lahf
dec
jae
lret
sbb
mov
stc
fisubrs
imul
sub
ljmp
fwait
gs
loopne
xchg
dec
pop
repnz
inc
fstl
dec
test
sbb
jge
dec
mov
pop
iret
push
push
xchg
lret
xor
fimull
enter
rcr
mov
sbb
pop
adc
dec
int3
or
scas
cmpsl
jp
int3
out
std
cmpsl
fldcw
pop
daa
xchg
das
test
xor
ret
je
scas
cs
mov
jmp
sbb
cmp
push
sbb
adc
aaa
fnstcw
lds
fmul
mov
aas
call
movsl
jecxz
xchg
testb
stc
mov
divb
and
dec
xor
sbb
icebp
push
clc
inc
adc
push
loope
std
sub
hlt
ljmp
imul
ds
cli
xor
lock
pop
pop
fs
fsubp
lret
out
inc
inc
daa
nop
gs
cld
push
xor
and
lock
in
sbb
sbb
std
cmp
pop
and
sub
lret
xchg
decl
cmpsl
out
clc
and
mov
test
push
outsl
sub
or
movsl
aam
inc
fcomp
cmpl
cmc
dec
mov
ljmp
in
bnd
or
sbb
pushf
mov
fsubrl
ds
push
sarb
jle
sbb
xor
inc
fcoms
filds
movsb
fimull
ret
sbb
dec
mov
fcoml
lods
and
stos
push
push
cmpsl
xchg
push
mov
int3
cmc
sbb
imul
scas
push
ljmp
insb
aam
fsubl
and
aaa
push
mov
inc
fisttps
fs
mov
pop
sbb
shrl
add
fldt
mov
sti
nop
sahf
out
call
jl
lds
xchg
leave
inc
insb
pop
cmp
cltd
xor
jnp
xchg
dec
fnsave
test
enter
rcl
jle
nop
arpl
pop
es
or
lahf
jge
mov
xchg
jne
sbb
loope,pn
shrb
jg,pt
push
lods
rol
gs
ljmp
movsb
cli
repnz
addr16
lds
aaa
dec
push
fisubl
es
sbb
icebp
test
sbb
outsb
mov
sub
cmp
mov
mov
mov
push
pop
adc
push
mov
xchg
fwait
cmp
aad
sbb
std
sarl
out
jns
cmpsb
iret
cmp
frstor
imul
ret
sbb
fisubrs
dec
xor
mov
aam
sbb
insb
lock
frstor
cmp
mov
cmp
hlt
and
repz
fbstp
mov
pop
fstps
sbb
addr16
gs
pop
xchg
sbb
loopne
jno
loop
pop
sub
fcompl
xchg
sarl
shr
ja
sub
lret
dec
jl
sti
sbb
lcall
jmp
ljmp
cmp
and
test
rcrl
movsb
ret
or
jecxz
inc
fisttpl
xchg
xor
sub
and
lret
dec
insb
lds
cmpl
popa
push
xor
pusha
sbb
push
cmp
mov
lret
addl
dec
clc
out
sbb
nop
and
sbb
cltd
inc
iret
sbb
int3
ss
inc
mov
cld
mov
dec
cs
dec
sti
fiaddl
sub
xchg
fstps
xchg
jno
iret
and
xor
pusha
hlt
jmp
sbb
jae
loop
dec
aad
out
adc
pop
sahf
mov
imul
and
xchg
jnp
xorb
outsl
rcr
push
enter
gs
mov
dec
loop
mov
imulb
data16
inc
ret
lea
or
push
mov
sbb
and
ret
js
xchg
in
xlat
push
inc
test
test
xchg
fcmovne
mov
into
sbb
or
xor
adc
xchg
mov
hlt
inc
imul
xchg
xor
sub
imul
sbb
xchg
or
mov
xchg
shl
jb
fs
push
stos
fldl
imul
shll
pop
data16
aad
add
ja
cmpsb
insb
and
fsubl
mov
imul
or
pop
pusha
push
inc
push
clc
nop
mov
scas
dec
imul
cld
sub
jl
xor
mov
jno
jnp
ret
mov
inc
pop
jp
xor
subb
test
push
add
loopne
call
cmpsl
or
std
dec
or
xchg
xchg
lds
cmp
ret
cmpsb
iret
ja
xchg
xor
out
lods
imul
adc
inc
fistps
loope
lods
mov
cld
iret
sbb
cmpsl
cmp
pop
fidivl
cmp
dec
sbb
pusha
push
in
stos
dec
sarl
xchg
aam
ret
cmc
arpl
lods
adc
jno
mov
mov
cld
int
int3
and
sbb
out
mov
pusha
pop
popa
aam
and
fcoml
and
pop
mov
xlat
scas
push
dec
push
cmp
jne
jno
das
push
fsubs
jmp
mov
inc
out
mov
loopne
rcrl
aam
push
mov
xchg
dec
cmpsb
out
sbb
fldcw
loop
sbb
fwait
add
mov
jno
xor
xchg
jnp
orl
push
push
cmp
loopne
in
insl
push
scas
sub
mov
push
add
lcall
pop
jne
dec
xor
and
adcl
ret
aas
je
mov
call
and
scas
inc
inc
pop
fldcw
in
inc
inc
pop
ret
nop
adc
cmovl
jno
jb
add
cmpsb
rcl
jne
test
mov
xchg
insl
loopne
subb
enter
pop
and
bound
inc
mov
or
jle
mov
ja
jns
sti
sbb
test
clc
inc
fimull
xchg
push
aad
and
fwait
out
jae
repz
loopne
xor
ret
xor
xchg
ret
mov
addr16
sbb
icebp
xchg
pop
cmp
mov
sahf
adc
loopne
clc
push
out
in
or
insl
cmp
icebp
mov
rorl
ret
stc
adc
das
loopne
mov
jno
jmp
jae
cmp
aas
or
ficompl
fwait
dec
js
xor
jne
lret
xchg
test
cmp
js
xchg
out
fstpl
jp
fnsave
and
xchg
jno
jg
xor
lret
pop
xchg
dec
dec
ret
call
jo
negl
dec
jno
dec
daa
jne
and
or
xlat
inc
add
enter
or
xchg
data16
repz
popa
mov
rcll
popa
mov
rcr
mov
shr
in
mov
lds
xchg
xchg
lock
mov
das
cld
rclb
ljmp
or
das
inc
mov
gs
lods
adc
popa
xchg
mov
test
sti
or
rcrl
nop
push
push
ss
sbb
and
pop
lds
mov
or
arpl
sub
inc
rol
cmp
xor
fnsave
pop
add
out
adc
sbb
push
or
xchg
cmc
lret
jl
dec
mov
push
xor
push
cmpsl
or
push
mov
mov
push
and
inc
xor
gs
sahf
push
pop
and
repz
popf
jge
inc
lds
and
add
mov
and
dec
lods
sbb
clc
mov
mov
pop
das
or
lock
pop
add
in
xchg
out
mov
sub
in
mov
xchg
jp
add
insl
cli
ljmp
mov
ja
aad
das
xor
sbb
inc
fs
mov
push
jb
fneni(8087
addr16
xor
adc
inc
jmp
pop
xor
jne
stos
sbb
xchg
fwait
outsl
xchg
enter
dec
lcall
call
repnz
daa
cwtl
mov
lea
lret
aam
adc
or
or
div
dec
adc
test
xchg
sbb
push
xor
fdiv
jno
loop
sbb
jbe
xor
push
je
adc
dec
ja
scas
imul
fdivl
sti
mov
cmpsl
repnz
mov
pop
dec
sbb
push
rcrb
mov
mov
cwtl
xor
inc
mov
lods
jmp
cld
xor
push
xchg
pop
sbb
hlt
and
fistpll
jecxz
cmp
mov
xlat
loope
mov
aaa
dec
loopne
or
test
daa
mov
cmp
repz
gs
lret
sbb
inc
loopne
sbb
fistpl
rorl
xor
mov
xchg
pop
out
push
gs
push
mov
test
in
sarl
mov
js
mov
jge
sbb
sbb
ss
push
lcall
nop
subl
daa
mov
shlb
test
rcr
mov
jno
adc
pop
mov
sub
mov
jle
rcrl
jno
sbb
xchg
cmp
scas
leave
mov
in
push
cmpb
test
leave
pop
ret
sbb
mov
mov
sahf
icebp
loope
shll
dec
rcrb
sbb
mov
ds
dec
aam
out
ljmp
xchg
lods
add
ret
jno
loop
rcr
cmp
jl
stos
add
push
hlt
jb
push
push
sti
loopne
push
je
movsl
loopne
in
out
shrl
outsb
ret
mov
stc
sbb
dec
xor
mov
sub
xor
in
ret
push
cli
mov
fldl2t
push
adc
inc
in
sub
data16
fwait
push
push
mov
sbb
jl
mov
sub
push
xor
fst
dec
pop
and
cs
ja
lds
mov
pop
sbb
imulb
fsubs
je
test
xor
popf
mov
inc
addr16
lret
cmp
sbb
fistps
pushf
and
mov
jmp
sti
inc
fmuls
bt
cmp
addr16
test
and
mov
pop
xor
sti
or
mov
pop
sahf
mov
movsb
inc
adc
rolb
cmc
mov
bound
sbb
xchg
nop
fs
sbb
adc
sbb
mov
shlb
jbe
ret
sbb
mov
xchg
out
imul
iret
in
dec
stc
mov
xchg
mov
dec
call
out
mov
inc
pop
mov
stos
lock
lret
scas
fstps
mov
aas
push
jnp
es
sbb
in
xor
and
popa
sbb
outsl
in
icebp
mov
adc
xchg
or
out
sub
lods
xor
push
mov
mov
mov
aam
adc
or
sbb
ret
arpl
fcomp
xor
sub
ss
scas
pop
scas
mov
repz
adc
lds
ljmp
dec
mov
mov
inc
sub
jbe
pop
xchg
out
mov
cmp
divl
ret
imul
pop
scas
pushf
cmpsl
sbb
data16
sbbl
mov
nopl
adc
sub
jecxz
pop
xchg
out
mov
lods
popa
outsb
nop
pop
xor
cmp
and
lock
adc
push
or
loope
sbb
dec
jbe
mov
repnz
push
mov
push
and
scas
mov
sbb
in
movsl
int3
mov
popa
mov
mov
shlb
xchg
xchg
mov
and
mov
ljmp
test
fadd
xlat
xchg
sbb
or
sbb
stos
out
popa
adcl
outsb
dec
sbb
outsb
les
xchg
mov
lcall
dec
and
jbe
int
data16
neg
xor
mov
lock
fidivl
pop
shlb
adc
xlat
ror
ja
test
pop
push
xor
or
push
jge
repz
xchg
ljmp
pop
es
lahf
popl
add
dec
xor
or
scas
fidivl
shr
dec
inc
cwtl
loop
inc
test
dec
mov
pop
add
pop
test
fstpl
jle
cmp
xchg
jnp
mov
xlat
dec
dec
adc
gs
shrl
loopne
cmp
je
sti
lcall
rcrb
or
dec
addr16
inc
jmp
pop
mov
dec
jg
pop
sbb
mov
std
push
nop
loop
push
ljmp
sbb
mov
xchg
mov
scas
pop
mov
mov
subl
cld
into
pop
mov
sbb
cmp
fwait
scas
pop
call
jae
pop
mov
ror
sbb
xor
popa
aam
pusha
jmp
xor
lret
enter
fisubl
fsubrl
or
add
pop
add
imul
jno
xlat
mov
fisubrl
sbb
into
nop
jns
ret
xchg
mov
and
push
mov
out
sbb
in
enter
cmp
cmp
or
adc
test
movsl
inc
loop
pop
int
pop
and
inc
jl
mov
mov
xor
dec
sbb
dec
rcrl
mov
lds
hlt
mov
xchg
push
arpl
testl
jl
andb
andb
pop
repz
aaa
outsl
push
sbb
hlt
pop
sub
and
sbb
pushf
cmpsb
jns
cmp
jmp
loopne
jmp
nop
mov
pop
in
scas
mov
adc
pop
ficompl
lea
insl
xchg
mov
fisubrs
mulb
das
shrb
cwtl
lods
inc
fistl
push
lea
popf
dec
jnp
dec
mov
sbb
or
jp
and
lret
ja
sbb
xor
shrb
bnd
jno
sub
scas
es
push
sub
and
pop
dec
or
inc
loope
fcoml
jns
lahf
cltd
xchg
loopne
psrad
push
pop
dec
mov
xorb
int
mov
nop
lea
sahf
sbb
xchg
push
aam
push
pop
xchg
mov
or
or
outsl
jmp
jg
xor
sbb
sbb
pop
fadds
dec
lock
jge
dec
data16
fisttpll
sbb
adc
push
mov
and
leave
scas
fstps
insb
ret
loop
xchg
push
aam
in
xlat
fildll
fld
js
fs
sub
test
ficoms
data16
scas
loope
cmp
fninit
and
jne
lods
xchg
shll
mov
fnstsw
mov
push
aas
loopne
sti
pop
jns
into
xchg
and
xor
shll
je
std
mov
int3
sub
mov
pop
arpl
insl
lret
and
add
rcr
add
roll
lea
or
in
ja
jle
hlt
inc
push
sub
popa
dec
fs
pop
mov
out
popa
sbb
popa
enter
ss
dec
sub
stc
jne
jg
aam
push
mov
ljmp
fiaddl
push
mov
cmp
add
loope
and
mov
ja
cwtl
lods
push
in
dec
xchg
pop
in
push
scas
aam
mov
das
out
or
lret
std
sbb
or
xor
insl
fldl2t
adc
pop
icebp
dec
xchg
pushf
inc
dec
mov
lret
pop
notl
xchg
out
sub
andl
sbb
mov
add
push
sub
aam
push
dec
lds
ja
pop
jo
aas
sbb
push
adc
xlat
lret
mov
ss
loopne
jne
out
and
xchg
mov
mov
fstl
lea
loopne
mov
add
call
or
outsl
mov
inc
out
push
xchg
scas
dec
popl
push
jmp
xchg
or
mov
ret
dec
sbb
inc
jp
ss
push
pop
int
mov
inc
div
or
cmc
jmp
sbb
xor
hlt
fsubr
add
jl
loop
xchg
sti
jl
fldt
loopne
sub
sbb
jge
jge
imul
fldenv
lret
ds
mov
aas
mov
out
insb
mov
mov
repz
into
fiaddl
push
xchg
dec
cli
pop
xor
roll
fmull
sbb
ss
mov
xchg
inc
icebp
outsb
pop
inc
cli
gs
and
sbb
testb
inc
and
xchg
dec
fidivrl
push
repnz
arpl
inc
mov
fdivr
push
and
xchg
das
lcall
int3
andl
hlt
sbb
out
adc
outsl
scas
xchg
cli
xchg
icebp
fdivrl
adc
and
add
xor
ret
sbb
shlb
pop
roll
push
push
sbb
push
inc
aas
jl
xchg
es
fcmovnb
or
and
out
int3
xlat
xchg
scas
in
rolb
pop
mov
mov
dec
fwait
in
stos
fmul
cmc
jns
cld
cmp
or
push
push
in
aam
adc
fstl
or
gs
pushf
cmp
mov
aas
pop
jmp
out
ljmp
adcl
fcomps
xor
mov
test
mov
aas
ds
push
mov
cmp
sbb
inc
andl
and
jg
fsubrp
repz
enter
mov
lock
sbb
shlb
stos
jecxz
adc
xchg
mov
sbb
popa
inc
push
cli
into
mov
into
push
in
mov
fisttpll
out
xor
loop
sbb
cmp
adcl
xor
cs
adc
imul
cmpb
hlt
sbb
inc
mov
dec
fs
xchg
inc
int
jmp
push
mov
daa
roll
movsb
inc
and
test
test
xor
inc
xchg
dec
adc
xchg
scas
in
sahf
jp
int
sub
mov
adc
icebp
ret
das
out
fmull
imul
fidivl
mov
ret
rcll
clc
add
push
jmp
sbb
jnp
out
sub
xchg
push
stos
pop
std
cli
xchg
mov
addl
jne
daa
dec
push
lods
and
outsl
mov
sbb
pop
push
adc
xlat
jmp
pop
dec
test
mov
mov
pop
jne
pop
jmp
push
cmp
jg
neg
xor
sub
rorl
subl
jecxz
arpl
sbb
bound
xor
cwtl
or
xchg
fdivl
jns
sbb
mov
orl
adc
scas
or
jnp
imul
pop
dec
aaa
arpl
fnstenv
sub
pop
ljmp
inc
or
cmp
xor
cmp
nop
pop
lods
aaa
mov
rol
mov
fstl
sub
cs
fwait
xchg
cmp
orb
sbb
or
ret
pop
xchg
mov
push
pop
add
subl
mov
aam
cli
fucomip
and
pushf
or
scas
jbe
adc
sbbb
ljmp
ljmp
std
arpl
sbb
dec
inc
mov
fistpl
xchg
adc
stos
das
ljmp
arpl
lock
dec
mov
sbb
inc
test
scas
pop
lods
jmp
add
sbb
xor
jecxz
add
cltd
mov
add
sbb
scas
jae
sbb
mov
lds
es
lods
add
xchg
insl
inc
add
xchg
mov
mov
cld
sbb
sbb
mov
hlt
cmp
addl
dec
je
mov
loopne
mov
sbb
xchg
inc
jne
sub
dec
in
jle
insb
dec
sbbl
xor
int3
popa
sbb
xchg
inc
cmp
ja
rcrl
mov
push
mov
and
jecxz
add
hlt
xor
sub
sbb
aad
stos
xchg
or
ja
and
in
mov
lods
push
arpl
in
ret
mov
xchg
add
cmpsb
ds
or
lock
sub
xor
dec
je
lahf
in
enter
mov
or
and
jmp
in
sub
xchg
pop
xor
faddl
sarl
sub
pop
out
and
dec
mov
inc
dec
mov
ret
mov
and
shll
add
fwait
sbb
mov
push
into
out
bound
sbb
inc
imul
and
les
cmp
loope
leave
add
in
ret
fst
mov
test
ja
cwtl
cmp
int
and
mov
push
jb
jl
mov
outsb
mov
push
ficoms
pushf
nop
inc
jbe
jmp
xchg
ja
mov
insb
ss
sub
add
sbb
mov
xlat
fucom
sbb
aaa
sbb
fldt
test
xchg
jl
xor
push
es
int
lock
jne
mov
clc
jge,pn
in
jecxz
lret
cwtl
movsb
test
jne
mov
jmp
push
or
or
push
and
test
mov
and
imul
sub
sbb
icebp
lret
int3
jno
mov
mov
or
push
add
jmp
and
call
pushf
mov
push
mov
xchg
cmp
dec
lret
rcrl
insb
in
mov
stc
jmp
loopne
daa
out
pop
jns
les
ljmp
insb
enter
xor
scas
sbb
ja
ret
cmp
sahf
pop
xor
jnp
cmp
testb
mov
ss
mov
pusha
adc
jns
push
cs
jo
mov
lods
das
stos
xchg
ret
rcrl
out
xchg
lock
push
mov
cmpsb
mov
mov
in
icebp
lahf
push
ljmp
sahf
and
jnp
xchg
mov
lcall
xchg
jecxz
and
aad
push
cmp
stc
sbb
pop
fisubs
xor
aad
rol
sbb
pop
ds
inc
ffreep
and
repnz
mov
adc
outsb
std
sbb
cmp
dec
add
imul
vmovsldup
dec
sbb
cmp
pop
nop
xor
add
jp
mov
rcrl
fcoml
lret
push
sbb
pop
bound
movsb
push
fsubl
cmp
push
inc
pop
test
out
rol
jno
inc
lret
pop
aam
xchg
andb
leave
aam
and
cmp
lcall
cmp
loope
xchg
push
out
out
addl
lds
enter
mov
xchg
out
sub
xchg
lods
push
cmp
cmp
mov
xor
add
mov
xor
mov
insb
pop
fadds
mov
jae
add
fstp
gs
les
pop
and
xor
mov
daa
dec
sti
ret
arpl
in
test
xor
xchg
hlt
pop
adc
lret
xor
jns
jo
push
dec
outsb
pop
sbb
pop
push
popa
sub
daa
dec
push
repnz
inc
sub
sbb
dec
test
xlat
mov
ret
xchg
cwtl
subl
mov
out
sti
mov
fists
push
sbb
pop
mov
mov
sbb
push
xchg
in
xchg
sub
xor
mov
out
xor
mov
mov
pop
mov
pusha
gs
cmp
insb
sbb
dec
inc
faddl
sub
sahf
mov
lea
dec
push
ss
pop
adcb
jecxz
pop
jns
or
xchg
scas
cmpsb
popf
lock
stos
inc
imul
cli
lahf
sahf
push
jo
fsubs
cs
rorb
push
flds
inc
stos
jg
fisubs
popa
xorl
jecxz
popa
out
int
sbb
jno
into
call
lret
pop
jge
popf
imul
sbb
in
adc
call
or
mov
mov
sbb
sub
mov
ss
int
inc
add
xchg
dec
pushfw
fwait
and
clc
cld
xchg
adc
imul
xchg
pop
fildll
sub
push
push
jmp
cmpsb
inc
popa
cmp
and
data16
jmp
ss
jne
mov
mov
adc
arpl
mov
testl
inc
sahf
pop
adc
cs
je
ja
mov
adc
jmp
mov
mov
or
dec
adc
test
mov
lea
sbb
dec
fimull
lock
or
imul
sbb
pop
jb
jne
dec
out
pop
icebp
add
xor
cmp
dec
sub
andb
repnz
sub
jge
stos
sbb
push
addl
sbb
mov
gs
jo
stos
loope
fistps
sarb
fwait
test
fcmove
xor
pop
outsl
mov
jl
xchg
dec
out
daa
aam
or
mov
jecxz
push
popa
loopne
out
test
aad
insb
adc
cltd
xor
notl
stos
pop
cmp
lock
mov
leave
lea
fs
sbb
loope
out
cmp
pop
mov
movsb
insl
inc
adcb
out
lock
jne
add
clc
mov
std
inc
push
ss
sahf
fstps
push
pop
mov
lret
ret
shr
data16
dec
mov
negl
jge
xchg
sub
rorl
or
mov
fstpl
adcl
push
xchg
gs
fs
xor
jo
xlat
gs
inc
mov
pop
cmp
adc
mov
mov
nop
pop
mov
add
mov
bound
fmull
add
add
movsl
jns
mov
aaa
pop
dec
and
jnp
cmpsl
stc
pcmpgtw
pop
jo
insb
xchg
xchg
xor
push
fincstp
mov
int3
test
or
jb
dec
sbb
xchg
inc
fcmovnu
mov
test
repnz
pop
cmpsb
outsl
test
sbb
test
fldl
lret
iret
in
push
or
mov
cmpsb
mov
sbb
fs
mov
pop
mov
dec
jecxz
cmp
jno
adc
add
sarl
lret
cmp
xchg
daa
xor
mov
pusha
pop
int
sub
into
in
shlb
mov
sbb
cmpsb
jle
push
mov
push
jbe
fs
push
faddl
jp
into
test
fwait
push
sub
not
fbstp
sbb
je
mov
testl
mov
and
je
xchg
sti
sahf
pusha
fcom
xchg
sbb
mov
scas
xor
iret
mov
pushl
in
mov
sbb
pop
adc
repz
push
ljmp
pop
pusha
push
mov
rcrb
fnstsw
js
xchg
inc
out
mov
daa
or
imul
insb
push
xorb
repnz
mov
inc
sbb
pop
ret
into
jecxz
ficompl
inc
dec
mov
mov
cld
out
insb
sub
fistpl
or
stos
adc
lret
jle
stc
inc
in
out
dec
push
jmp
xchg
out
jno
scas
mov
cmp
push
push
add
fwait
mov
xchg
ret
scas
push
sahf
outsl
lret
inc
sbb
loop
lret
dec
call
sbb
stos
sbb
mov
int
mov
mov
mov
ljmp
add
adc
adc
clc
mov
jne
fists
inc
add
push
sbb
fdivrl
cmpsb
pop
xchg
sbb
push
and
lcall
add
sbb
adc
push
xchg
andb
fucomi
into
popa
sbb
lods
adc
sarl
dec
out
push
mov
mov
test
jmp
push
dec
ljmp
mov
orl
mov
pop
sub
je
sbb
mov
ret
pop
xor
xchg
push
rorb
and
xchg
nop
fldl
adc
nop
jcxz
scas
test
sbb
add
fisubrs
nop
mov
jl
lods
sbb
inc
jae
enter
imul
movsb
push
pusha
or
popa
unpcklps
les
loopne
test
and
xchg
jl
arpl
fcompl
idivl
cmp
xor
ljmp
jbe
pop
aad
negl
push
out
fcoml
int
adc
xchg
mov
xchg
outsl
sub
push
mov
sbb
out
adc
hlt
push
in
push
fcmovnu
or
sahf
std
test
xlat
xor
sbb
xorb
pusha
cmp
popf
sbb
mov
scas
xor
mov
xor
pop
shll
push
repz
jnp
stos
int3
out
mov
cmp
iret
inc
sub
and
mov
data16
icebp
scas
push
test
xchg
mov
cmpsb
loope
mov
lahf
sub
mov
movb
mov
mov
fwait
push
xchg
or
push
ljmp
sub
stc
aas
mov
dec
ja
int
mov
out
fwait
xlat
fdivrl
cmp
hlt
out
loope
adc
sbb
fdecstp
sub
sbb
adc
fidivl
inc
pop
fldt
xchg
xlat
sbb
push
dec
lret
out
inc
fistpll
mov
push
sub
stos
push
lret
push
fs
and
ljmp
pop
mov
inc
leave
loopne
mov
push
lds
xchg
aam
fldcw
out
xor
push
int3
outsl
cs
outsl
xor
sub
addr16
enter
inc
cs
sbb
aam
mov
cmpb
inc
mov
hlt
pop
fimuls
lods
mov
mov
fdivrl
data16
mov
cmp
jle
jecxz
mov
sbb
adc
add
hlt
je
and
pop
test
lretw
and
lock
sbb
fisubrl
xchg
es
jecxz
cwtl
inc
jmp
or
add
mov
out
fstl
fsubrl
xorl
sbb
js
mov
daa
daa
ret
fcoms
aad
xor
sub
test
loopne
jno
inc
add
sbb
add
mov
leave
scas
notb
mov
pop
aam
shrb
and
hlt
pop
nop
imul
mov
xor
cld
bound
jp
aam
cs
mov
sbb
push
mov
inc
repnz
inc
jecxz
nop
popf
arpl
popa
dec
mov
mov
jmp
push
loop
out
cwtl
orl
xchg
repnz
cmc
and
jmp
andl
sahf
iret
in
test
and
jns
int3
out
cs
popa
sbb
mov
jge
repz
nop
dec
arpl
or
sbb
out
cmp
stos
andb
push
cwtl
cmp
xchg
popf
test
jbe
sbb
push
fs
inc
pop
add
cmpsb
ljmp
jno
imul
or
mov
iret
andb
xadd
fdivrl
sbb
into
ljmp
sbb
push
inc
cs
inc
fs
or
sbb
or
sbb
lret
xchg
dec
fucom
fisttpl
dec
add
sbb
movl
test
mov
pop
mov
jp
jbe
mov
dec
jmp
scas
arpl
loop
push
repz
ret
sbb
mov
dec
adcl
mov
fwait
leave
mov
out
popl
dec
mov
jns
sbb
jecxz
cmp
or
pop
gs
outsl
lods
xchg
iret
scas
xorb
sbb
std
xchg
in
insb
mov
adc
sub
sbb
pop
dec
xlat
mov
push
je
pop
data16
jl
out
lea
fcomp
jmp
pushf
lret
jg
or
pop
mov
pop
fs
jge
sub
add
dec
and
jbe
mov
mov
mov
arpl
sbb
or
push
pop
ret
cltd
jmp
loop
pop
or
push
sbb
adc
insl
ljmp
popf
pop
dec
loopne
add
fmull
imul
loopne
jo
ja
lea
or
cltd
sbb
cwtl
pop
xor
dec
ret
movsl
xchg
dec
sbb
and
xor
or
call
mov
negb
mov
jns,pn
mov
fwait
lret
mov
movsl
pop
lock
xchg
ror
hlt
sbb
mov
push
negb
sbb
js
fidivrl
out
push
push
mov
ret
outsb
std
sbb
int
sbb
sti
loop
addb
xchg
mov
sbb
aad
lcall
mov
icebp
fldt
cmp
sbb
adc
jmp
ss
or
sub
lcall
jb
xor
ljmp
jecxz
jmp
inc
adc
sbb
outsl
pop
leave
xchg
sbb
push
jbe
stos
sub
stos
push
pusha
sbb
lahf
pusha
cmp
push
scas
pop
mov
or
shr
sbb
pop
xchg
int
push
mov
xchg
cmc
dec
inc
fldt
or
andl
xchg
cmpsl
cli
mov
cli
jmp
xor
jg
or
lahf
sbb
or
enter
xchg
add
scas
add
ret
sbb
andl
mov
addr16
sub
cmp
sub
ret
push
test
inc
ss
lds
sub
call
lods
in
push
xchg
adc
scas
mov
sbb
jmp
dec
sub
sbb
sbb
xor
pop
sbb
mov
daa
jo
inc
mov
fmulp
mov
fcoml
es
pop
loopne
push
fs
mov
push
cmp
pop
je
xchg
inc
sahf
xchg
fmuls
inc
xor
ficoml
daa
dec
outsb
push
inc
xchg
sbb
or
sbbl
xchg
jl
push
test
xlat
adc
fcmove
mov
cmp
ret
mov
ret
dec
ret
cmp
inc
rorl
xor
xchg
fistps
or
sbb
in
das
mov
cwtl
loop
push
sarb
hlt
lret
scas
jns
mov
inc
fadd
lcall
and
repz
add
mov
xchg
lods
lret
mov
loope
mov
repnz
xchg
fcoms
shll
lret
int3
mov
dec
jnp
jno
or
nop
stos
outsb
xchg
push
and
lea
fcmovne
or
fistps
loopne
scas
jg
icebp
adc
lret
adc
lar
lods
xchg
lret
adc
sbb
push
fdivs
inc
xchg
cs
xchg
lret
jl
repz
xchg
test
scas
div
movsb
cmpsl
scas
dec
cwtl
rorb
pusha
pop
lret
inc
sub
mov
and
xor
sbb
lret
xor
popa
lock
sbb
adc
lret
fistpll
popa
inc
lret
addr16
cltd
imul
loope
repnz
bound
dec
push
lret
sub
cs
push
jecxz
sahf
lret
popf
cmp
iret
and
das
repz
dec
and
repz
push
inc
xorb
add
mov
pop
or
dec
push
cwtl
in
mov
int3
inc
loope
int
outsb
dec
mov
test
fs
pop
cmpsl
das
scas
lret
into
mov
popa
cmpl
jle
enter
shll
fadds
nop
xor
int
lahf
pop
sbb
xor
stos
in
jns
push
xor
xor
sub
addl
stos
aad
mov
cmp
inc
xchg
sti
sbb
or
iret
lret
ds
cmpsl
leave
arpl
cli
int
adc
push
xor
out
sbb
mov
push
pop
bound
xor
in
mov
mov
lret
jge
dec
aad
mov
addr16
fcoml
out
jmp
int
mov
out
xor
add
test
sub
sub
sahf
repz
iret
ret
or
xchg
lret
and
sar
mov
repz
testl
push
mov
lods
lret
sbb
mov
loop
lret
sub
pop
daa
ret
or
jno
push
aad
mov
out
xor
or
mov
xor
sub
push
hlt
pop
stos
push
pop
sbb
cli
lahf
lret
xor
mov
cmp
fstpl
lret
sub
push
aaa
cmpsl
les
lret
jns
push
push
repnz
into
mov
jno
loope
dec
lds
pusha
out
jne
int
cmc
fcomi
hlt
add
cmp
outsl
lret
lods
clc
or
pop
jns
aam
mov
pop
mov
adc
lds
in
jg
sbb
inc
and
adc
das
pop
mov
in
jbe
out
test
inc
cmp
dec
lret
gs
rcll
lods
ds
xor
or
jbe
ja
idivb
fsubs
outsl
push
rorl
lret
js
sti
out
adc
leave
sbb
test
pop
jne
scas
or
mov
lea
lret
imul
sub
lret
mov
das
in
lret
push
pop
pop
test
and
lret
xchg
or
sub
push
ljmp
fisttps
pusha
lret
jl
mov
mov
xor
lret
push
daa
add
leave
cltd
std
cmp
cli
lret
jne,pt
or
fcoml
stos
pop
mov
int
push
iret
adc
adc
icebp
leave
xchg
in
sub
push
cwtl
lret
add
adc
inc
push
rol
dec
shrl
or
sbb
pushf
lret
mov
jbe
lret
out
aas
push
shlb
ss
fwait
mov
fs
lret
insb
daa
leave
pop
adcb
xchg
mov
jmp
inc
push
sbb
rclb
mov
jb
jl
shr
xchg
jno
mov
gs
inc
aas
cld
dec
ljmp
adc
movsb
fwait
mov
mov
dec
icebp
mov
clc
popf
scas
lret
movsl
adc
inc
lds
int
xor
and
pusha
pushl
icebp
sbb
pop
xor
push
pop
cld
push
lret
adcb
xchg
lret
xor
mov
dec
mov
gs
lret
add
xor
adc
xor
add
pop
imul
push
sbb
jp
push
mov
test
dec
lret
sbb
in
jp
lret
push
data16
ret
push
cmp
inc
out
push
or
stos
jle
movsb
jns
fdivr
inc
push
nop
xchg
push
push
mov
xlat
stos
xchg
mov
cmc
inc
xor
cmpb
outsl
sahf
iret
or
aas
lods
lret
push
sub
mov
and
jmp
idivl
push
or
mov
repz
pop
jmp
xchg
or
int
lcall
mov
lret
add
adc
insl
cld
es
push
push
mov
aas
into
add
leave
cltd
movaps
jp
adc
shlb
push
rol
arpl
cs
xor
adc
outsl
shrl
adc
clc
xchg
out
mov
push
push
orb
or
pop
xor
in
lret
fistl
mov
pop
imul
lretw
inc
orl
mov
bound
mov
inc
jnp
cmpsl
push
das
lret
imul
out
enter
in
shrb
leave
int3
aam
loopne
sahf
lcall
mov
jns
pusha
cmp
outsb
repz
mov
imul
pop
cmc
cmp
push
push
sub
or
push
fisubrs
add
xor
or
mov
sbb
test
and
pop
cwtl
push
mov
mov
pop
push
ret
cmp
dec
leave
mov
and
mov
or
test
mov
cmpsl
lret
jg
data16
daa
add
mov
push
int
and
mov
popf
pusha
adc
cmc
inc
and
roll
lret
rcrl
les
pop
lock
lret
and
ror
add
test
scas
or
es
int
loopne
in
hlt
mov
and
push
lret
pop
jge
pop
inc
mov
cld
sub
or
mov
sbb
pop
shl
loopne
push
fstps
and
lret
xor
xchg
push
movsl
fwait
lret
fdiv
imulb
aaa
mov
lahf
rcrb
dec
push
lret
mov
ficoms
daa
mov
fisttpl
mov
add
sbb
je
dec
das
sti
iret
xchg
popl
jl
mov
shlb
and
sub
xchg
lret
fnsave
fiadds
js
lret
pop
dec
jb
lret
or
call
adc
cmp
lret
add
int3
or
pushf
hlt
lret
inc
ja
fscale
mov
xchg
pop
sub
shr
mov
mov
shll
loopne
jp
es
movsb
testb
push
cmpsb
sarl
je
testl
and
mov
pushf
mov
jb
mov
lret
loope
mov
dec
xlat
or
std
lret
rol
mov
fiaddl
out
adc
mov
jge
mov
lock
or
inc
mov
mov
imul
dec
push
loop
mov
leave
in
aad
push
fcmovbe
int
pop
test
cmpsb
fucomp
adc
ret
pop
insb
lods
xor
lret
fs
inc
or
cmp
or
and
jno
inc
sbb
into
dec
cwtl
xor
fdivrs
fwait
cli
push
jmp
scas
ljmp
dec
push
out
dec
adc
adc
mov
sbb
push
mov
dec
mov
sti
sub
insl
cwtl
fsubrs
sbb
sarb
dec
jg
dec
jns
xchg
jp
inc
mov
lods
jns
lret
sbb
sub
call
int
into
inc
dec
in
and
insb
sahf
xor
cli
jg
js
rep
mov
jge
lcall
add
in
fisttpll
fstpl
dec
movsb
jcxz
mov
lretw
fldt
pop
mov
pop
ret
lds
jne
jbe
fmul
sbb
push
xchg
lds
cmp
lret
sbb
add
mov
mov
lcall
or
inc
lret
lcall
xchg
jg
lret
fnstsw
stos
hlt
subl
movsl
jecxz
adc
cli
inc
mov
clc
dec
push
dec
or
jg
dec
ffree
shr
inc
das
pop
cli
fcomp
fistpl
sbb
jne
inc
mov
jnp
inc
cmp
xchg
sbb
fwait
push
adc
push
and
mov
sbb
insl
push
aaa
adc
jns
lret
push
sbb
mov
mov
daa
pop
mov
push
cmp
push
in
hlt
hlt
dec
fcompl
ja
outsb
lock
cld
int3
fwait
xchg
jle
outsl
movsl
and
test
mov
or
or
cmpsl
leave
xchg
outsl
fadds
mov
rcpps
mov
jmp
pop
movsb
cs
test
lds
add
test
cmp
mov
insb
mov
push
mov
jae
ret
jecxz
xor
mov
jno
push
add
fistl
cmovge
add
xchg
sarb
inc
mov
sbb
mov
in
in
dec
jnp
pop
rcrl
loop
push
imul
cmp
mov
mov
enter
sbb
add
cmp
int3
cmp
int3
sarb
xor
repnz
fcmovbe
cmp
aam
inc
stc
cmpl
mov
mov
pop
mov
cli
addr16
movsb
mov
outsb
mov
fs
push
aam
cltd
mov
addr16
add
mov
xor
push
mov
into
inc
jl
adc
enter
ret
ret
es
lret
js
repz
jno
mov
sbb
pusha
cmp
test
sbb
push
cld
aas
icebp
mov
sbb
sbb
loope
cmp
out
ljmp
push
enter
cs
fldenv
adc
xchg
xor
and
les
or
xchg
cmp
jae
sti
rorb
xor
mov
repz
add
inc
in
pop
pop
fldt
mov
and
add
je
ret
xchg
mov
cmp
jecxz
out
lret
lock
sti
add
adc
lret
neg
aad
xchg
mov
dec
lcall
out
sqrtps
in
jo
ret
mov
std
adc
cmpl
xchg
pop
fisubl
sti
sti
mov
hlt
inc
ret
pop
out
push
fdivs
mov
inc
jne
ljmp
stos
cmpsb
adc
aad
sbb
sbb
sarl
and
pop
scas
lods
out
lcall
ljmp
sbb
pop
dec
push
leave
mov
scas
mov
push
inc
xchg
add
sbb
cmp
push
dec
mov
jl
subl
in
arpl
sbb
adc
call
jne
and
jl
fisttpll
jge
out
pop
and
sarl
jl
push
inc
stos
cmpl
gs
xor
add
xchg
dec
mov
push
xchg
int3
movb
adc
mov
stc
aad
test
dec
and
cli
fdiv
lea
int
xchg
dec
cs
jmp
and
fidivl
push
pop
in
idivb
xor
inc
mov
sbb
sbb
int
sub
mov
xchg
ficomps
jle
jecxz
repnz
sbb
add
cs
fdivs
sti
jmp
xchg
push
cmpsb
jmp
es
sbb
jb
dec
or
popf
gs
jge
dec
inc
into
aaa
cmp
es
repnz
push
add
cli
jnp
and
in
mov
sbb
popf
cli
sub
sbb
mov
mov
mov
and
sbb
insl
stc
fmulp
xor
dec
std
cmpsb
xlat
adc
pop
repz
inc
lea
push
lret
fistpl
sbb
mov
cmp
fidivrl
insl
outsl
mov
mov
and
adc
push
xlat
sbb
sbb
mov
ljmp
stc
lods
add
fsubl
adc
imul
mov
test
jmp
dec
mov
std
div
mov
cld
cmp
xchg
xor
pop
jno
pop
frstor
jnp
mov
push
adc
mov
adc
in
or
mov
sbb
data16
into
in
sub
cmpsl
loope
cmp
jl
scas
fldl
lds
mov
ljmp
loopne
inc
in
lret
sbb
mov
sbb
cmp
stos
add
std
loope
stc
push
pop
sti
fiadds
outsl
negl
rclb
mov
dec
clc
sbb
lods
ds
mov
sbb
in
xchg
rcrb
inc
sbb
rcl
dec
add
sub
sbb
cld
push
inc
push
pop
pop
insb
jo
lcall
sbb
xor
jae
xchg
loopne
add
jne
push
imul
int
sarl
adc
js
jne
movb
shll
test
popa
andl
xchg
es
cmpsb
inc
xor
xor
cmpsl
jno
add
popa
inc
mov
pop
rol
sbb
sub
movsb
les
test
loope
push
ss
xor
inc
ja
adc
pop
lcall
jae
dec
data16
inc
aam
push
call
xor
mov
dec
inc
xor
sbb
add
popf
mov
mov
in
push
push
pop
dec
sub
hlt
outsb
or
hlt
dec
idivl
push
cmp
push
cmp
push
mov
dec
gs
int
loop
xor
sbb
lds
mov
xlat
mov
repz
mov
xor
add
push
test
mov
fdivrl
mov
push
das
inc
les
jl
inc
fimuls
addr16
repz
pusha
stos
push
leave
mov
inc
ljmp
pop
dec
fdivrl
and
pop
dec
mov
sub
leave
jmp
mov
or
pop
in
pushf
mov
xor
pop
pop
stc
es
clc
adc
add
add
iret
aam
jno
pop
jmp
xchg
mov
or
aaa
sbb
sbb
jecxz
mov
adc
cmp
xor
insb
and
sub
imul
mov
das
mov
stos
mov
mov
iret
push
addr16
ljmp
xchg
cmpb
sbb
add
addr16
fcompl
sbb
mov
test
outsl
xor
out
or
adc
std
shlb
rcll
mov
push
xchg
cmp
add
sbb
in
aas
mov
push
ss
arpl
mov
jecxz
sbb
loopne
mov
and
sbb
mov
push
lret
mov
scas
shll
pushfw
bound
and
fisttps
sbb
stos
xor
je
js
repnz
push
movsb
mov
push
push
and
cld
scas
dec
into
mov
in
jns
lods
rorb
jbe
pop
in
ljmp
lds
mov
dec
test
fistps
sbb
push
jnp
mov
test
mov
lret
dec
mov
mov
add
lds
jo
fcoml
pop
fucom
fwait
repnz
pop
sbb
jmp
jmp
fisttpl
or
lret
lods
xchg
sbb
pop
mov
in
movsb
repnz
cmp
or
xchg
in
in
cmpl
sbb
sbb
out
repnz
mov
movsb
add
shr
dec
mov
sbb
notb
push
das
cmpl
in
jae
jno
and
aam
dec
sahf
mov
icebp
mov
scas
sub
in
jecxz
xor
fsubl
out
xor
fnstsw
icebp
dec
out
xchg
inc
loop
ret
mov
adc
add
stc
das
mov
push
mov
dec
icebp
imul
xchg
inc
mov
in
and
je
sti
call
mov
xchg
in
nop
jge
or
add
mov
add
ret
into
jns
jmp
add
daa
fisubl
pop
inc
stos
mov
push
inc
test
sbb
sbb
sti
cmp
pop
dec
bound
test
xchg
mov
clc
sbb
jns
loop
pop
out
mov
add
add
push
insb
jne
push
sub
pop
mov
outsb
and
add
into
dec
inc
ficompl
fadd
mov
lret
sbb
mov
cmp
repnz
pop
or
js
fisttps
push
ficoml
jno
sub
scas
xor
cmp
xchg
movsw
mov
cli
push
push
mov
pop
cmp
mov
mov
inc
lods
ja
mov
xor
xor
insl
leave
push
xor
xchg
rorb
dec
add
in
sbb
xchg
pusha
cmpsb
cmp
and
xchg
ret
loope
dec
sub
adc
dec
fildl
nop
fsubrp
jnp
scas
in
sti
dec
jbe
test
int
mov
out
sti
push
fstps
jnp
or
mov
les
out
fnstenv
jp
sbb
mov
add
je
mov
push
mov
sbb
fstl
xchg
dec
in
rcrl
lods
outsb
repz
fdivl
adc
lds
outsb
jg,pn
xor
mov
and
xchg
sub
mov
scas
sub
les
push
or
gs
jbe
mov
ret
and
bnd
push
call
ficoms
xchg
popa
popa
sbb
jecxz
mov
fldenv
bound
lret
xchg
jle
repz
js
xchg
fs
dec
mov
jb
inc
imul
inc
push
pop
mov
fstpl
sbb
xlat
stos
stos
adc
hlt
das
sbbl
subb
mov
sbb
sbb
sbb
lea
mov
nop
lods
push
sbb
pop
sub
ds
mov
ss
cmp
fwait
jl
negl
sti
cwtl
mov
aam
sbb
fisttps
jp
pushf
addb
movsb
ret
addr16
or
lds
dec
sbb
xchg
test
ficompl
mov
sbb
push
pop
dec
jle
je
xchg
xchg
and
adcl
mov
dec
mov
pop
loop
inc
shrl
imul
ljmp
dec
push
hlt
pop
or
mov
in
loopne
das
mov
cli
mov
sbb
fisttpl
jmp
fs
test
pop
lahf
dec
mov
aas
pop
adc
mov
ret
mov
lret
push
xor
mov
mov
push
push
lret
sbb
mov
adc
pop
testb
aad
lahf
lock
fucom
daa
dec
mov
pop
jp
or
xchg
movsl
rcll
fidivs
dec
xorb
mov
repz
pop
xorl
pop
mov
pop
jns
fs
in
mov
xchg
or
xchg
sub
jecxz
or
mov
mov
rol
ret
fcompl
iret
out
cmp
test
shr
int
loope
pushf
xchg
push
push
mov
movsl
enter
xor
sbb
dec
mov
sbb
sbb
rcr
ljmp
and
or
sub
aam
push
xchg
test
sbb
pop
jge
shrl
repnz
gs
mov
sbb
test
iret
xor
cmp
rolb
mov
inc
push
cwtl
sbb
dec
les
sbb
outsl
push
dec
imull
out
lret
out
sahf
call
popa
sbb
mov
push
xorl
push
scas
or
push
or
inc
rcr
mov
xchg
mov
in
ljmp
test
add
mov
inc
jl
into
loopne
mov
and
scas
ja
jecxz
inc
mov
pushf
std
and
repnz
sti
push
out
roll
pop
sbb
adc
xchg
insl
mov
imul
std
cmp
subb
add
dec
lcall
inc
lods
testb
sub
and
repnz
imul
jg
call
inc
xchg
xor
test
js
inc
fldl
cmp
jg
cmp
mov
inc
xor
sub
test
and
in
cmp
test
push
adc
mov
out
xor
lods
cmp
mov
push
imul
xor
sub
jno
push
mov
js
inc
mov
pusha
cli
lods
addr16
lret
test
cli
jne
aas
scas
pop
dec
into
scas
and
sbb
xchg
shrl
mov
jle
xchg
xlat
sbb
push
out
fnstenv
std
fmuls
ds
shl
shlb
push
mov
dec
enter
out
insl
adc
cmp
sbb
in
cmp
ret
inc
les
inc
ss
lods
arpl
inc
lds
xchg
scas
mov
push
cld
divl
and
adc
mov
sbb
inc
xchg
mov
stc
push
pushf
sti
fnsave
in
push
sub
sbb
cltd
out
mov
mov
mov
xor
dec
lea
jle
loop
ret
add
movsl
xchg
lds
pop
sub
dec
cmp
mov
in
and
ja
repz
jg
sbbl
mov
out
xor
mov
les
and
mov
mov
fmul
and
adc
adc
jg
jne
in
or
dec
or
lret
scas
leave
fldenv
dec
bound
icebp
mov
jnp
js
pop
jnp
imul
gs
xor
xchg
out
dec
xchg
sbb
imul
ret
in
push
xchg
addr16
aam
aas
lods
inc
add
jecxz
xor
xchg
mov
adcl
out
rolb
iret
divb
and
dec
mov
ret
sbb
jmp
mov
sbb
sbb
in
and
jmp
xor
ja
clc
push
add
sub
out
movsl
jae
dec
push
mov
sub
inc
aas
and
push
dec
mov
mov
fincstp
xchg
cmp
ds
sbb
ficoms
pop
in
out
loop
cs
cld
jns
std
imul
ret
pop
sbb
xchg
imul
xchg
mov
xchg
mov
sbb
cmp
and
aaa
sbb
jbe
clc
sub
insl
and
cmp
adc
scas
arpl
pop
sbb
cld
in
cld
imul
sub
jno
cmc
xchg
and
insb
pusha
les
out
jecxz
sub
sub
jnp
mov
loop
lret
pop
jg
nop
dec
mov
cmp
int3
lahf
or
push
adc
insl
sbb
mov
movsb
fadds
xor
pushf
and
xor
lock
jmp
jno
aaa
or
lcall
clc
pop
dec
inc
jnp
push
inc
rorb
neg
in
sub
out
adc
aad
sub
xor
fiadds
push
inc
rcrl
dec
add
sbb
cmp
int3
and
xor
push
pop
pop
inc
xor
in
cmpsb
aas
fstps
dec
dec
pop
fwait
xor
dec
rcrl
mov
jmp
ds
adc
push
loopne
stos
pop
lcall
lds
mov
pusha
push
cmp
cmp
jbe
cld
sbb
pop
fmuls
inc
in
and
sbb
scas
orb
in
dec
pushf
imul
ja
jbe
cld
sub
ret
pop
popa
jge
subb
iret
mov
dec
popa
fstpl
inc
xchg
hlt
pop
lahf
or
fwait
stc
jecxz
mov
dec
sahf
and
push
out
jmp
or
push
or
bound
enter
fstpl
add
add
pop
popf
rorl
cmp
push
aas
loopne
scas
and
sub
pop
movsl
stos
sbb
ds
lock
xor
test
pop
fidivrs
mov
cmp
jg,pt
outsb
xchg
or
pop
add
xchg
fldenv
push
xchg
test
repz
shrb
in
testl
dec
fsubrl
ljmp
or
cmp
mov
mov
imul
nop
jl
pop
int3
xchg
mov
push
xlat
movsb
bound
push
mov
sbb
pop
pop
dec
loopne
and
xchg
sub
ljmp
jnp
xor
mov
lret
jmp
xor
add
fcompl
lea
icebp
pop
gs
push
adc
xor
inc
sarb
outsb
pushf
dec
sbb
sti
test
dec
ds
aam
push
sub
cltd
mov
cmpsb
inc
push
or
xor
mov
xor
nop
push
lods
movsb
lret
int3
lock
mov
sbb
mov
int
jge
or
pop
adc
data16
xchg
js
int3
sbb
mov
pop
cltd
out
mov
fwait
push
pop
mov
add
ret
in
push
int
inc
andl
into
cmp
xchg
adc
rorl
clc
test
fisubs
dec
lret
mov
sub
push
xor
inc
pop
mov
pop
pusha
cwtl
and
cmpsb
mov
enter
mov
fwait
mov
imul
and
xor
inc
xchg
gs
insb
aas
pop
pop
dec
cmp
mov
or
sbb
jg
push
cmpsb
sub
fcomps
jns
stos
cmp
out
fstps
pusha
imul
in
inc
gs
dec
and
jge
lock
inc
je
lahf
xchg
mov
cmp
sbb
xor
xchg
sbb
push
adc
imul
enter
mov
mov
rcll
fucom
shll
out
mov
dec
inc
popa
pop
shlb
ja
std
xlat
cs
enter
mov
scas
xor
and
mov
fcmovnb
orb
dec
fucomp
aam
add
stos
lods
sbb
addr16
scas
push
movsb
lret
sbb
in
inc
andl
mov
mov
pop
and
cmpsl
lock
les
roll
push
inc
in
pop
lret
cld
mov
sub
add
sbb
mov
mov
rcrb
les
add
dec
fildll
aad
xor
test
push
int
int3
addr16
or
js
push
pusha
add
mov
mulb
loop
aas
ds
aam
lcall
test
sub
cld
dec
dec
sbb
sub
add
pop
adc
fistpll
mov
shl
sub
pop
mov
pop
mov
ror
and
xor
fnstsw
push
push
push
fsubl
lock
ret
sbb
lods
push
es
mov
popa
sub
xor
xor
lock
in
jbe
add
push
outsl
pushf
out
dec
pusha
shll
lret
or
lods
pop
out
dec
adc
call
out
jns,pn
mov
sbb
fcomp
jne
or
bnd
int3
pop
cwtl
andl
sbb
popa
jo
dec
fmull
fwait
sbb
rcr
jg
in
add
scas
icebp
ds
or
inc
push
dec
ds
pusha
mov
push
das
imul
sbb
imul
xchg
in
ljmp
sbb
pop
pop
call
push
push
and
jns
adc
mov
push
pushf
pop
mov
imul
inc
nop
mov
adcl
repnz
aas
das
jecxz
stos
jnp
js
add
sub
push
test
or
add
out
loope
out
and
fsubrs
imul
mov
xor
clc
cmp
or
adc
inc
out
adc
pcmpeqd
xchg
dec
add
je
addr16
cmp
mov
sbb
add
out
jle
and
jb
sbb
push
movl
or
andl
out
clc
ds
out
jmp
loopne
xchg
int3
sub
dec
jo
ror
pushf
mov
ja
mov
test
je
pop
scas
dec
faddl
stos
int3
push
xchg
data16
cli
push
cld
insb
mov
pop
cmc
lahf
push
jne
push
loopne
add
and
rcrl
fldenv
xchg
dec
dec
pop
ret
add
test
pop
daa
jb
jl
inc
mov
xchg
enter
or
xchg
sbb
lcall
adc
rorb
repnz
movsb
outsb
repz
mov
push
xchg
lret
mov
addr16
inc
pop
pop
sub
jno
inc
repnz
adc
fistl
and
movsl
jle
lea
pop
or
hlt
mov
fs
and
mov
mov
sub
loope
and
out
or
cld
mov
negl
cli
sub
rcrb
adc
jge
xchg
push
add
fs
mov
scas
rolb
out
jae
ss
jp
sbbl
popf
sbb
or
xor
bnd
mov
sbb
and
insl
lret
mov
dec
jmp
rcr
dec
xchg
lds
adc
int3
movsb
rcrb
xchg
fbstp
xor
xchg
sbb
fld
dec
push
push
inc
roll
inc
push
dec
pop
shrl
fwait
sbbl
lods
push
pop
insb
nop
in
repnz
insb
ret
dec
xor
std
lds
push
pusha
mulb
xor
cltd
or
mov
aam
xchg
fidivrl
bound
mov
scas
mov
mov
dec
or
pop
pop
out
out
out
push
incl
sbb
pusha
test
test
popa
bnd
out
mov
jecxz
cmp
shlb
or
mov
mov
inc
ror
mov
push
mov
adc
jne
in
sbb
fists
mov
addl
ja
inc
or
sub
and
loop
imul
push
lock
shlb
inc
mov
sbb
fwait
add
cmpsl
ss
fisttpll
xchg
pop
loope
les
dec
add
int
cmp
or
loop
or
fnsave
test
int3
sbb
jnp
cmpsb
push
rorb
xchg
imul
jns
scas
mov
xorl
mov
test
repz
fstpl
jl
xor
shlb
imul
add
out
dec
inc
stos
mov
rcrl
push
inc
inc
mov
lcall
xchg
stos
daa
les
cld
ds
push
mov
cs
data16
add
ss
dec
imul
inc
xor
lods
xchg
add
lret
ret
sbb
sbb
in
ficomps
dec
je
sahf
les
dec
mov
andb
sbb
push
cmp
aas
sbb
pop
add
pop
enter
jmp
add
push
lock
imul
movsb
cli
je
pop
test
xor
cltd
mov
pop
push
adc
loope
arpl
add
outsb
out
jne
stc
pop
and
mov
sbb
dec
mov
cli
pushf
dec
jg
fidivrl
sbb
cmpsl
push
andb
stos
sub
dec
jg
cld
scas
add
insl
outsb
ret
jno
xchg
mov
mov
cmpsl
je
xor
pusha
xchg
or
sbb
push
lret
adc
mov
lock
ja
lock
mov
dec
dec
call
sub
lcall
es
fldpi
xlat
in
push
pop
mov
adc
sbb
lods
and
xlat
mov
inc
mov
lods
int
fcmovnbe
and
stos
int
inc
addr16
push
cmp
rcrb
sub
mov
xchg
das
in
mov
rcrl
ljmp
add
or
pop
cmp
pop
inc
jbe
insw
gs
inc
pop
jp
sub
imul
mov
cmpsl
fs
in
dec
jg
ja
loopne
je
push
mov
sbb
sbb
enter
mov
push
ja
jne
iret
bound
lret
mov
push
data16
sbb
xor
int3
xlat
push
stc
cmp
xchg
stos
pushf
push
popf
cmpsb
andl
mov
punpckldq
xchg
push
int
xlat
sbb
push
int
and
fwait
push
or
or
insb
lods
dec
lcall
cld
pop
lret
and
dec
mov
adc
mov
mov
cmp
fcomp
xorl
sbb
fcmovnu
and
jno
and
lds
arpl
mov
insb
pusha
fwait
hlt
xchg
fdivs
loopne
inc
or
int3
dec
and
mov
test
fucom
es
pushf
inc
jmp
cli
cmpsb
fildll
or
xor
adc
andl
and
or
clc
pop
xchg
adc
dec
les
xchg
add
rorl
inc
leave
icebp
fdivs
lcall
popa
xor
out
mov
arpl
cmp
fwait
mov
outsb
and
pop
xor
sbb
sbbl
push
addr16
sbb
pop
inc
inc
out
cli
and
xchg
pop
push
mov
sbb
pop
pop
iret
dec
shll
dec
mov
int
adc
pop
pop
sub
cmc
cwtl
divb
dec
push
scas
jbe
or
je
cmp
and
inc
iret
or
rcr
bound
pop
cltd
lret
ss
jns
cwtl
lret
mov
movsb
stos
jmp
sti
xor
push
lret
mov
jl
lahf
or
inc
pop
leave
test
decl
xchg
daa
sub
scas
imul
rolb
js
push
stos
jmp
add
rol
sbb
xchg
xchg
or
dec
push
dec
aas
popf
cmp
xlat
lret
inc
ljmp
lret
movsb
mov
add
sub
lret
inc
push
and
loope
lods
and
xchg
fildl
dec
sub
sbb
mov
test
jb
xchg
mov
xor
sub
push
dec
repnz
mov
vmulsd
and
imul
dec
dec
adc
enter
iret
jnp
pop
push
mov
lret
inc
mov
cmp
adc
mov
cmp
mov
jecxz
test
or
les
enter
or
mull
jae
dec
mov
in
or
lret
add
pop
imul
pop
loopne
stos
je
xchg
lret
sub
pop
rcr
jnp
xchg
gs
and
push
andl
lret
or
mov
jb
sahf
jg
into
into
inc
scas
push
and
xor
cli
push
lret
jne
push
mov
cmp
lret
inc
out
sti
int
xor
lret
popa
sarl
mov
cmp
test
test
add
hlt
lret
adc
pop
xor
lods
mov
jae
xchg
adc
pushl
dec
push
and
lret
or
lock
leave
sahf
imul
mov
xchg
xchg
adc
cmp
mov
or
and
adc
lret
mov
rcrl
stos
sub
imul
cmp
pop
sub
movsb
shrl
int
sub
fists
xlat
addr16
fsts
ja
xchg
pop
jg
add
fs
xchg
cld
push
or
sbb
add
repnz
jle
lret
imul
inc
pop
dec
gs
cwtl
enter
sahf
jnp
and
int
mov
or
dec
mov
lcall
push
inc
cmc
xor
stos
jb
dec
inc
jne
call
out
movl
ret
xchg
outsl
xor
mov
jg
cmpsl
dec
stos
sbb
loope
shll
sbb
xchg
mov
lcall
lods
imul
leave
jnp
les
xchg
mov
push
sbbl
lret
fcmovnbe
mov
fistps
fstl
sti
pop
fadd
and
jg
aaa
fwait
jmp
jge
mov
add
fldenv
std
mov
xchg
jns
loopne
cmpsb
jmp
loope
nop/reserved
rol
pop
sti
popa
sahf
cmp
jecxz
sbb
ja
cmc
push
lock
push
outsb
fadd
mov
mov
lds
ljmp
or
subl
sbb
pusha
js
and
subl
mov
pushf
sti
leave
addr16
sub
imul
xchg
lret
push
or
push
push
push
stc
sbb
stos
sbb
mov
cmpsb
sub
jbe
jbe
ret
ss
fdivrl
cmpsb
jmp
out
popl
or
aas
jae
ds
les
jbe
pop
inc
push
mov
cmp
insb
lret
fwait
ret
scas
rolb
cmp
lahf
cltd
cmp
or
outsb
add
test
jecxz
stc
mov
rcrb
fstpl
in
and
push
push
pop
ss
loopne
cmp
pushf
push
push
xor
out
or
ret
shll
out
add
cli
add
xchg
xchg
jnp
inc
lds
jb
out
shll
mov
sbb
or
sbb
sbb
lock
mov
cs
push
pop
test
xor
sbb
mov
sub
xchg
inc
mov
sbb
push
xor
loopne
mov
inc
mov
mov
call
enter
sbb
push
stos
sbb
mov
add
mov
testb
int
lock
ljmp
movsb
mov
jp
jg
dec
cmp
cs
mov
sahf
inc
out
imul
jae
int3
sbb
mov
and
xchg
or
gs
mov
addr16
inc
mov
addl
sti
scas
sbb
arpl
fdivrl
push
leavew
cli
fcomps
pop
sub
test
xor
fsubp
pop
ret
mov
mov
test
fwait
nop
xchg
jnp
cltd
jg
pop
into
mov
sub
pop
test
sbb
push
jo
ret
iret
mov
aas
les
cmp
mov
dec
stos
and
or
xor
hlt
test
sbb
or
mov
subl
dec
popf
out
insb
lds
or
xchg
push
cmp
push
mov
and
notl
in
lods
mov
test
sbb
shlb
sarb
ds
jbe
out
sbb
rclb
scas
xor
stc
call
lods
sub
bound
sub
jge
inc
mov
fsts
sbb
cwtl
clc
and
imul
jb
xchg
icebp
cmp
and
mov
outsb
in
pop
ja
push
cwtl
mov
mov
loopne
xchg
insl
cs
insl
jl
cmp
xlat
je
rcrb
push
cwtl
mov
test
fidivl
pop
inc
add
pop
ret
sbb
aam
adc
nop
pop
test
ret
adc
out
cs
fwait
or
jno
and
xchg
call
sbbl
cmp
shrb
sub
repz
movsb
or
sbb
sbb
fsubrs
aam
roll
fs
jg
cs
rorl
cmp
hlt
jo
jne
jl
lds
jnp
lret
sbb
cs
sti
pop
sbb
orb
fcmovnb
out
adc
pop
sbb
or
out
mov
mov
cmp
sub
aas
sete
shrl
mov
out
dec
popa
call
fst
sti
out
jo
adc
xchg
scas
or
jno
in
dec
cmpl
stos
inc
lds
popa
mov
bound
lea
jle
pop
xor
cmpsl
scas
push
pushf
stos
scas
ret
cmp
mov
cs
nop
pminub
mov
faddp
cmpsb
sub
imul
lods
sbb
adc
push
or
shl
pop
in
and
dec
xor
fimuls
std
sbb
jle
imul
add
sbb
loope
sub
hlt
pusha
mov
test
jmp
arpl
shr
popf
aaa
jns
mov
add
pop
push
test
jge,pn
cmp
adc
mov
lret
mov
lods
xor
inc
or
fdivr
push
mov
push
mov
push
mov
sbb
dec
ja
in
mov
and
hlt
mov
adc
hlt
pop
xchg
inc
inc
jl
push
hlt
cli
cmp
pop
xor
out
mov
or
add
lret
xchg
out
fists
jae
push
mov
mov
xor
insl
push
aad
xchg
dec
cmp
xchg
mov
loope
jnp
ja
test
ret
mov
cmpb
fbld
mov
pop
cmp
addr16
in
test
adc
mov
outsl
pop
cmp
je
mov
outsl
mov
insl
mov
push
cltd
ret
jge
jnp
sbb
mov
scas
and
sbb
ret
dec
xor
mov
mov
cs
mov
mov
rorb
rcrl
xor
sub
es
sbbb
lds
add
adc
xor
stc
add
test
jge
push
xchg
cwtl
mov
sbb
jns
jno
sub
lret
aam
gs
shlb
mov
into
repnz
cmp
mov
cmp
xchg
fstpl
and
ljmp
out
and
dec
bnd
lods
adc
sti
lahf
pop
addr16
mov
lahf
imul
mov
mov
inc
test
lea
xchg
sbb
je
popa
out
or
lods
neg
or
rcr
mov
decb
sbb
stos
outsb
mov
inc
cmp
sub
jecxz
loope
push
stc
fnstcw
in
xchg
rorl
jg
cmpsl
xchg
icebp
dec
sbb
pop
xor
xchg
mov
mov
popa
xchg
mov
das
popa
sbb
add
pop
call
xor
pop
imulb
xor
call
push
jbe
imul
dec
ret
aad
xchg
out
mov
fs
fstpt
imul
sbb
or
or
aas
sbb
ja
ja
jmp
int
call
inc
inc
gs
adc
movsl
xlat
lahf
sbb
jge
fidivl
dec
cmc
dec
push
mov
xchg
pop
or
fwait
dec
xchg
sbb
cmp
or
xchg
mov
cld
xchg
lret
rcrl
imul
mov
jae
outsb
push
inc
cmp
mov
jecxz
insb
mov
xor
dec
and
negb
jge
xchg
out
xchg
mov
jnp
test
loopne
js
and
pop
push
lea
pop
mov
pusha
cmc
xlat
mov
shl
inc
bnd
sbb
ret
dec
or
shrb
or
fucomi
push
bound
loopne
js
mov
cmpsl
adc
mov
insl
push
mov
push
cmpsb
ret
mov
sub
lahf
int3
mov
rcll
inc
xchg
sbb
out
push
fdiv
out
and
push
dec
adc
loopne
jae
div
xor
sub
orl
vpmaxsw
dec
jnp
enter
leave
ljmpw
dec
dec
mov
sbb
push
and
outsl
mov
je
das
or
sbb
jnp
fsubrl
cmp
fwait
sbb
in
xor
sbb
js
scas
sbb
jge
inc
test
push
sbb
push
and
inc
in
ja
mov
pop
adc
arpl
sbb
push
dec
loop
lcall
loopne
push
sub
aaa
inc
add
pop
lret
lds
ljmp
sbb
or
test
loopne
jle
loopne
aaa
fs
mov
aam
mov
hlt
andb
xchg
cmp
cwtl
push
ret
sbb
icebp
push
xchg
mov
lods
xorb
repnz
dec
sbb
push
xchg
mov
nop
or
sub
test
clc
push
hlt
out
rorl
loopne
shl
sahf
ja
repz
nop
ficompl
gs
jbe
push
int
sub
loop
and
movsl
out
sti
xor
lcall
or
int3
and
push
cmc
pop
aad
dec
es
in
and
sub
int
fldt
sbb
mov
test
add
dec
outsl
jg
stc
cmpsl
hlt
sbb
sbb
test
and
mov
call
rclb
stc
push
loopne
addl
into
push
xorl
sub
enter
cld
ret
mov
roll
outsb
ret
jl
mov
in
mov
pusha
pop
adcb
arpl
ret
adc
mov
in
xchg
fisubl
cmp
xchg
addr16
aad
into
mov
push
and
and
cmp
int3
mov
ret
jge
push
jns
lods
mov
sbbb
ret
clc
jae
fildll
pop
or
cs
outsl
push
mov
sub
jecxz
inc
xchg
mov
jecxz
imul
divb
xor
inc
cwtl
add
hlt
iret
xor
xchg
dec
or
les
sbb
pushfw
addr16
jne
imul
ret
add
sbb
pop
imul
mov
mov
and
dec
pop
out
fdivl
push
loop
xorl
call
leave
cmpsl
movsb
and
dec
pop
fildl
clc
or
lea
mov
jbe
lds
fadd
insb
loop
and
jns
fisubl
xchg
sti
fldt
cmp
sbb
sbb
add
jne
pushf
decb
or
xor
and
shr
popf
mov
aad
push
stos
fnsave
cmpl
ret
jbe
push
insl
insl
xchg
test
popa
sbb
ss
push
cmp
fiadds
cmpsl
xchg
mov
mov
fnstsw
mov
sbb
bound
push
xchg
jno
or
xchg
loope
pop
mov
outsl
sti
sarl
jmp
pop
mov
sbb
test
mov
ljmp
adc
add
pop
cmp
enter
loope
lret
or
mov
sub
sbb
outsl
addr16
fildll
mov
test
push
in
mov
jb
mov
mov
scas
push
inc
sbb
sub
xor
or
fucomp
cmpsb
push
or
xlat
mov
fwait
pop
cmp
or
dec
mov
add
or
mov
jmp
cmp
xor
callw
sahf
sbbl
fbstp
push
data16
jne
jnp
aam
gs
insl
fdivrl
cwtl
jns
mov
fcomp
jae
fsubrl
or
rcrb
popa
add
push
sbb
daa
adc
test
cmc
divb
out
fimull
in
test
adc
pop
je
aam
sbb
sub
in
jge
or
sbb
xchg
cli
fwait
insl
lret
sbb
ds
or
popf
jno
dec
mov
add
xor
push
jne
popf
scas
nop
mov
mov
inc
mov
mov
adc
or
push
dec
orb
shlb
fcompl
pop
pop
insl
dec
popf
xor
add
ljmp
mov
subl
pop
dec
movsb
std
scas
mov
mov
js
jo
enter
xchg
scas
pop
sub
incb
cmp
sbb
sti
sbb
pop
int
sar
inc
dec
dec
adc
pop
pavgw
mov
mov
dec
inc
je
push
push
add
add
call
fnstsw
push
imul
mov
mov
pop
xlat
xchg
ljmp
pop
arpl
push
int3
sbb
fcoms
sbb
enter
push
jge
inc
ljmp
push
and
sub
and
je
mov
dec
cmp
xorb
repz
inc
aad
pop
sbb
sbb
mov
repz
loopne
cmp
lret
jge
pop
xorl
repnz
sub
push
xchg
cmp
andb
push
mov
sbb
and
call
call
in
jle
and
xor
push
and
test
daa
pop
push
jmp
jmp
dec
shl
movsl
push
add
sub
jle
mov
ret
stos
orl
mov
xchg
imul
cmpsl
push
and
push
mov
cmpsl
and
in
jno
jp
pop
fcompl
fisubrl
mov
add
cmp
mov
gs
mov
stc
mov
aaa
shrb
or
push
add
jnp
subb
sub
jb
mov
sub
jl
xchg
and
stos
sbb
enter
outsl
mov
or
add
pop
and
jge
addr16
sbb
or
inc
inc
fcmovnb
sbb
pushf
hlt
sub
test
out
popa
jae
test
xchg
lock
fdivrl
out
ret
xor
jge
testl
inc
push
add
pop
popl
in
out
pop
xchg
pop
es
pop
sub
stos
and
cmp
out
mov
add
jno,pn
movsb
sub
push
push
fnsave
sub
daa
pop
fstpl
rclb
xchg
inc
xor
mov
jbe
gs
or
and
es
pop
xchg
dec
mov
sub
adc
loopne
cs
push
push
mov
in
adc
fwait
loopne
sti
fists
or
pop
std
inc
dec
adc
ficoms
mov
ret
loop,pn
cmp
stos
inc
les
mov
xchg
push
mov
mov
lods
cmp
scas
push
push
inc
pop
stos
or
fld
mov
incb
cli
or
pop
xor
stos
mov
xchg
test
add
cmp
or
ffree
imul
jbe
test
push
lock
lret
rcl
inc
out
fbstp
xchg
or
xorl
in
cmc
inc
pop
repz
int
adc
pop
or
loope
adc
out
bound
cmp
jmp
repnz
arpl
push
fwait
mov
sub
mov
out
outsl
push
adc
or
in
xor
and
push
int3
mov
xchg
int
fmul
fdivrl
xchg
gs
cld
mov
fstpl
pop
ret
xlat
popa
adc
call
fsubl
xchg
loope
pop
loop
fstps
aas
inc
ret
mov
xor
and
lock
cli
test
loop
sbb
sbb
jae
lret
in
pusha
ljmp
mov
sbb
and
cli
inc
inc
bound
xor
xchg
xchg
rorb
and
fistps
test
or
xchg
push
push
pop
push
jns
stc
subb
ss
adc
movsl
jnp
lea
ljmp
rorl
inc
repnz
loope
stc
or
lea
lds
jmp
and
ficomps
xlat
cwtl
fwait
insl
push
add
mov
cmp
mov
enter
ljmp
jmp
movsb
adc
sbb
pop
mov
sub
push
addr16
mov
sbb
or
movzbl
insb
add
out
mov
int
ljmp
cmp
dec
or
xchg
or
jmp
mov
fstps
and
sbb
or
sub
lret
xchg
jb
insl
imul
jp
sti
sbb
jns
xchg
pop
mov
jae
rcl
aas
inc
sub
sysenter
cmp
add
or
gs
popa
pop
mov
xor
movsl
je
movsb
jmp
rorl
pop
push
bound
fwait
cli
test
xchg
xor
push
out
mov
ret
shlb
inc
push
imul
and
mov
bound
dec
mov
mov
jb
inc
aam
mov
pop
out
stos
data16
and
in
cs
jo
cltd
xlat
scas
fimull
scas
sub
push
jbe
pop
mov
inc
pusha
push
mov
sbb
subl
lret
jne
mov
mov
xchg
and
inc
movb
je
aad
pop
push
in
sbb
out
iret
jl
ds
aad
add
mov
mov
mov
ss
adcl
les
cmpsl
or
pop
loope
iret
inc
mov
inc
inc
sbb
loopne
lret
lcall
jne
cmp
sbb
fsubrp
cmp
out
cmp
loop
mov
imul
jg
lock
out
lods
int3
sbb
xor
out
lea
cmpsb
mov
out
fcoml
test
jge
push
jle
mov
lret
mulb
sub
fcomi
pop
or
out
inc
repz
mov
adc
add
neg
lock
xchg
aam
xchg
sub
cmp
and
mov
adcl
pop
out
xchg
or
fwait
out
pop
mov
cmpsb
lods
mov
mov
dec
in
fistpl
or
into
sub
mov
mov
je
scas
inc
cmc
fistpl
sbb
push
andl
cli
test
jae
sub
addr16
push
lret
aaa
xlat
mov
push
and
pop
cvtps2pd
xor
jae
and
sub
xchg
pop
pop
xchg
add
mov
xchg
xor
or
jns
jl
mov
mov
add
mov
call
out
lea
aaa
insb
xchg
ljmp
loope
fisubl
dec
int
xor
repnz
push
int3
pop
sbb
mov
inc
lret
mov
lods
subl
fcoms
inc
andb
pop
jae
subl
inc
sub
xor
inc
sub
sub
sub
lcall
sti
xchg
and
faddl
or
jno
arpl
dec
sbb
sbb
mov
jo
lret
test
mov
pop
inc
sbb
fwait
xchg
push
xor
ret
mov
xchg
pop
ret
push
mov
jp
add
into
mov
call
ss
adc
inc
call
into
pop
xchg
pop
cltd
sbb
aas
mov
cmpsl
imul
or
sbb
or
je
popf
in
jmp
jle
dec
inc
ret
mov
dec
ret
push
mov
out
sbb
in
xor
mov
push
out
iret
inc
stos
mov
call
mov
cwtl
ljmp
sbb
jmp
out
stos
mov
push
xor
jno
adc
dec
int3
std
testl
cwtl
mov
lcall
mov
adc
sti
mov
fildll
push
adc
rol
jne
lahf
add
mov
dec
sahf
inc
mov
popa
lock
jcxz
bound
inc
inc
repnz
out
jo
mov
push
lahf
dec
dec
sbb
test
lret
ss
or
mov
cmp
inc
xchg
adc
jmp
mov
cmp
ret
dec
cwtl
pop
inc
sarl
fnstsw
popa
push
cmp
sbb
loope
push
insb
jp
cmp
cmpsb
shlb
jb
push
cmpl
cmp
adc
lret
stos
dec
cs
push
movsb
shr
int
aaa
mov
imul
imul
xchg
pop
ljmp
sbb
ds
in
pop
cwtl
leave
dec
mov
push
lock
cwtl
or
imul
dec
cmp
inc
bound
packsswb
addr16
pop
movsl
lret
fildll
aaa
or
sub
in
pop
mov
or
jmp
fwait
jae
sbb
dec
loop
pop
call
cmp
push
cmp
pop
sbb
arpl
fildl
cmp
shl
push
out
inc
lds
lods
fisttps
addr16
out
mov
mov
addr16
push
fidivrl
jne
xor
sti
subl
pop
in
lock
stos
dec
or
andl
cmp
xchg
pop
add
pop
rolb
mov
sarl
sti
popa
mov
nop
add
mov
xchg
push
push
stc
cmpsb
cmp
fdivl
push
imul
fcompl
out
xor
pop
negl
fisttpll
xor
jecxz
dec
lods
push
movsb
mov
or
xlat
push
xchg
pop
lds
testb
loop
sbb
jno
xchg
push
fmul
jne
xor
in
sahf
cli
sbb
adc
sub
mov
ss
in
and
pop
lret
aam
cmp
mov
popa
or
dec
scas
cmc
or
addb
sbb
repnz
int
mov
ljmp
in
lret
rcl
add
loope
mov
ljmp
cwtl
cld
data16
xchg
sbb
pop
movsl
sti
aam
mov
pop
push
lahf
ficompl
inc
jl
loop
pop
jmp
push
popa
mov
dec
out
pop
in
push
cmp
cmp
dec
xchg
js
sbb
jp
shlb
ljmp
call
jge
mov
ja
stos
mov
std
sti
stos
push
fs
ds
sub
leave
jmp
xchg
mov
dec
mov
inc
and
add
push
xchg
mov
add
push
lea
imul
dec
scas
cmp
out
loop
test
add
nop
push
pop
push
add
sbb
pushf
mov
lock
adc
mov
lds
jle
sub
pushf
dec
int
mov
rolb
pusha
loopne
sbb
inc
inc
shl
stos
js
mov
mov
dec
mov
pop
pop
or
jae
gs
mov
ss
lahf
sahf
xchg
xchg
dec
iret
push
faddl
sbb
xor
pop
out
and
inc
push
and
jb
mov
push
lods
sarl
rcr
es
adc
jl
fisubrs
cmp
xchg
xor
movsb
lahf
insl
ljmp
scas
xchg
lahf
popa
loop
hlt
stos
xorb
sub
or
mov
sbb
aas
mov
mov
cmp
scas
pop
adc
dec
in
xlat
adc
fsubl
mov
in
pop
push
add
mul
bswap
push
aam
and
jmp
xchg
pop
xor
lods
shll
das
pop
cs
fstpl
add
sahf
cmp
lret
inc
clc
pop
mov
insl
out
cmp
and
jmp
mov
out
loope
aaa
and
mov
cmp
mov
or
enter
fistpl
pop
xchg
inc
ja,pn
fs
inc
xor
loop
fcoml
sbb
and
in
sbb
scas
lods
pop
sbbb
daa
mov
push
sbb
cmp
jno
sbb
jns
in
notb
adc
cmp
imul
push
fildl
daa
out
data16
cmp
add
add
outsl
ret
ffreep
cmpsb
inc
pop
mov
fisubs
jecxz
adc
xor
shlb
scas
ljmp
mov
xchg
fdivl
mov
testl
sbb
sti
sbb
mov
cs
pop
jbe
lds
and
mov
xor
mov
test
repz
test
pushf
adc
stos
inc
mov
sbb
repnz
xchg
outsl
mov
repz
mov
push
cmp
jnp
nop
data16
jb
xchg
hlt
push
mov
ljmp
aad
into
jge
add
ret
pop
fsubr
jmp
lret
imul
inc
push
jge
sbbl
and
inc
faddp
sbb
lahf
in
push
pop
je
ss
imul
call
sub
or
aas
movsb
notb
xchg
pushf
js
mov
jge
int
stos
fdivr
mov
xor
test
addr16
dec
xor
outsb
cmp
jno
xchg
leave
popa
sbb
inc
push
and
addr16
and
dec
sar
or
jecxz
push
jmp
ds
lods
pop
out
add
fisubrl
xchg
shlb
out
inc
push
mov
test
adc
cmp
or
jmp
jb
arpl
cmp
jmp
adcl
shll
movsl
mul
ja
push
jge
xor
jl
sti
or
sub
insb
cld
jae
xor
mov
cmp
loop
push
pop
inc
xchg
jae
pop
jbe
jo
jecxz
sbb
fwait
sub
dec
dec
sbb
or
sbb
stc
fimull
fsub
push
or
movsl
test
push
xchg
fst
cmpb
in
push
int
imul
ljmp
stos
insb
cmp
pop
jnp
pop
mov
sbb
mov
dec
jmp
test
stos
dec
rcl
testb
xor
jns
cmp
sti
xchg
mov
mov
jg
enter
loopne
ss
mov
pushf
mov
int
sbb
pop
aam
popa
fidivs
inc
push
pop
fnstenv
xor
lea
repnz
mov
out
jbe
jno
leave
sub
xor
jge
in
mov
mov
dec
lret
cmp
negl
insl
adc
push
and
enter
and
inc
addr16
lods
jg
inc
add
shrl
pop
and
lods
mov
hlt
xor
repz
callw
cwtl
mov
jg
sbb
push
xor
stos
sbb
xor
inc
add
mov
js
push
mov
mov
sub
sbbl
nop
in
xchg
in
orl
in
movsb
and
fcomps
and
hlt
test
mov
jno
movsl
mov
mov
sbb
jp
out
roll
lea
jno
enter
jns
xchg
xchg
pop
sti
fs
push
xchg
push
pop
repnz
test
leave
inc
mov
mov
call
sbb
inc
and
xchg
add
sub
loopne
lret
xchg
negb
inc
mov
aas
mov
or
call
xchg
out
in
stc
inc
dec
add
push
dec
pop
or
flds
iret
pop
testl
mov
cmp
inc
cmpl
addr16
lcall
push
sub
lcall
mov
out
repnz
jmp
test
lret
aad
nop
call
mov
or
daa
push
mov
xchg
pusha
mov
or
and
sub
rol
jmp
rorl
push
and
adc
lock
out
mov
pop
xchg
lret
je
xchg
sbb
rol
loope
lcall
or
xor
popa
cmp
loope
fidivs
roll
in
je
and
mov
adc
clc
adc
push
inc
add
dec
ja
insb
out
in
call
bound
fstpl
push
stc
mov
and
test
fidivs
inc
outsb
adc
or
dec
add
jb
lods
sub
xchg
jl
aaa
test
lds
and
out
sbb
mov
sti
aam
out
loope
ja
popf
leave
xchg
mov
popf
sbb
sub
mov
aaa
sarl
add
aaa
adc
out
mov
ljmp
jecxz
adc
xchg
jne
jae
inc
out
and
cmp
push
test
insb
sbb
pop
push
pop
xchg
stos
out
mov
mov
dec
cmp
outsl
incl
xchg
sarl
sub
sbb
outsl
jne
sbb
or
es
sbb
pop
sbb
fsub
js
or
ret
mov
push
and
dec
mov
sahf
sbb
dec
imul
pop
jns
add
nop
adc
addr16
ffree
and
push
xor
imul
imul
jnp
dec
push
mov
push
outsb
sbb
jle
jae
sbb
xchg
xlat
ret
scas
xchg
push
mov
fisttps
mov
pop
ret
lods
and
pop
adcb
mov
test
insl
or
loop
sbb
insb
out
push
arpl
fsubrl
repnz
jp
shr
popa
pop
je
outsb
sbb
pop
in
push
or
lret
sbb
ret
inc
stos
das
into
xlat
or
mov
pop
fisttpll
lret
jge
das
mov
xchg
pmaddwd
add
sub
lret
in
stos
mov
sub
lret
fs
pop
jae
int
add
inc
ds
fsubl
xchg
lret
mov
int3
ret
lret
dec
aad
outsl
dec
and
lea
aaa
or
fdivs
out
cmpb
mov
icebp
icebp
call
iret
sbb
ror
dec
adcl
and
inc
dec
xor
inc
pop
enter
xchg
insb
jb
pop
mov
push
fdiv
or
stos
fwait
mov
and
pop
insl
mov
scas
cmp
iret
lret
sbb
test
pop
das
or
add
sbb
or
jno
xor
iret
fldcw
xchg
fidivrl
push
adc
aaa
dec
lahf
mov
fnsave
jmp
xchg
mov
xor
add
ljmp
aam
mov
clc
fsubl
ljmp
cltd
leave
jae
enter
jl
add
jb
dec
mov
insl
js,pn
popa
jne,pn
jmp
fnstsw
sbb
xor
pop
jle
jns
repnz
outsl
cs
mov
push
jmp
sti
popf
dec
mov
xchg
call
push
cli
jo
sub
sub
push
lahf
pusha
fadd
mov
mov
cli
pop
and
andb
push
jns
jae
imul
or
jmp
imul
and
fnstsw
mov
mov
loope
ss
popf
sbb
sbb
cwtl
stos
aaa
pop
sbb
je
outsl
shld
dec
sbb
sbb
adc
fucomp
pusha
xor
cli
xchg
mov
mov
in
andl
cli
sbb
mov
testl
jmp
call
popa
ljmp
stc
gs
inc
xlat
adc
int
gs
mov
test
and
cld
clc
add
pusha
pop
cmp
sbb
repnz
mov
xchg
sbb
shlb
lcall
mov
rol
jge
pop
shrb
enter
sarb
loopne
dec
sbb
hlt
sbb
rcl
xchg
xor
inc
fldt
mov
cld
dec
dec
push
xor
add
mov
sbb
jmp
into
addr16
cld
and
xor
mov
dec
push
cmp
cmp
mov
fldcw
repnz
xor
insl
sub
dec
xchg
push
push
fnop
push
push
cmpsl
push
sbb
aaa
sub
push
xchg
pop
mov
lret
icebp
scas
inc
push
and
or
dec
loope
shr
pop
pusha
push
jmp
lret
push
cmpsl
paddsw
xchg
je
pop
or
sbb
xchg
cmp
js
subl
cmp
xor
rclb
jp
ret
fs
dec
add
sbb
int3
inc
and
or
xchg
pop
adc
mov
mov
sahf
int
ret
sbb
pop
shrb
out
out
mov
inc
push
jecxz
sahf
sbb
orl
ljmp
mov
inc
aam
cld
das
sub
mov
sub
pop
stos
push
adc
hlt
insl
mov
xchg
mov
xchg
jge
push
xor
sbb
stos
pop
mov
inc
add
outsb
mov
mov
inc
mov
sub
dec
pop
aam
push
jle
gs
lret
into
mov
or
nop
ljmp
sbb
inc
sbb
adc
cmp
mov
fldl
outsb
bound
leave
xchg
mov
inc
cmpsl
addr16
rolb
popf
cli
das
dec
nop
push
sbb
shr
inc
test
sbb
mov
sub
cmp
xchg
cmp
jnp
insb
mov
mov
divl
lds
push
imul
outsl
push
mov
jg
mov
pop
test
les
adc
in
jmp
loope
out
xchg
jmp
cli
add
loope
or
pop
and
test
xchg
jno
mov
jno
fs
push
movsb
xchg
or
jo
mov
add
or
mov
and
imul
add
subl
jae
pushf
movsb
in
lret
loop
and
push
aam
add
mov
ficoml
int
xchg
mov
push
outsb
or
add
shrl
jmp
sbb
fldt
pop
scas
outsb
ret
call
mov
fadds
inc
and
inc
or
clc
fsubrs
jmp
lock
ljmp
xchg
jb
cmpsl
push
loop
sbb
mov
popf
xor
sbb
add
sbb
stc
repz
pushf
stos
dec
out
popa
nop
ljmp
sub
push
inc
shr
add
pop
xor
inc
xor
or
inc
sub
jl
adc
rcr
xor
mov
jne
pop
dec
sbb
jp
push
pop
pop
and
mov
xchg
scas
dec
push
pop
gs
fwait
xchg
sbb
cltd
shll
mov
push
lahf
mov
ja
xchg
pop
jecxz
icebp
jge
jnp
mov
inc
gs
push
xor
jg
ret
sbb
mov
sbbb
aam
dec
cltd
xchg
mov
repz
aaa
shrb
pop
loop
add
call
cmp
test
mov
fs
daa
or
inc
xor
push
push
lock
push
flds
mov
mov
mov
int
lock
mov
daa
or
imul
jmp
sbb
sub
or
cmp
out
xorl
mov
pop
aam
sbb
mov
xchg
mov
jmp
repnz
dec
jae
in
subb
dec
sti
shlb
das
sbb
sbb
mov
sti
and
pop
je
cmp
cli
into
jno
jns
cmpsb
jae
rclb
cmp
shrb
fstp
mov
xchg
ficompl
repz
or
mov
arpl
lret
fisubrl
inc
inc
sbb
outsl
xor
xor
pop
leave
bound
pop
int
repnz
cld
jge
jecxz
mov
fsts
outsl
orl
mov
std
jno
mov
adc
repnz
lret
aam
jne
add
add
pop
push
xchg
mov
dec
out
sub
push
ret
je
push
out
sbb
fisubl
cs
mov
or
test
fadds
pushf
lods
lock
xchg
xchg
arpl
jmp
shl
inc
mov
mov
cmpsl
sbb
inc
sarb
pop
sbb
int
lret
cs
mov
mov
stos
and
sbb
mov
add
add
push
jmp
or
rcr
es
adc
mov
push
jge
es
lock
adc
mov
xchg
push
imul
fsubs
mov
cmpsl
xchg
shll
loop
aam
fiaddl
icebp
stos
mov
arpl
dec
inc
shlb
mov
hlt
dec
sbb
fdivl
pushf
and
fnsave
pop
dec
call
xchg
xor
xor
xchg
fcomps
mov
fs
mov
xchg
arpl
ret
xchg
pop
xchg
inc
es
popa
fwait
or
and
stc
pushf
cmp
add
adc
cmp
pop
jl
inc
imul
mov
fistps
mov
loope
roll
mov
ret
repnz
data16
push
int
xchg
fcomip
sbb
adc
xchg
inc
popf
mov
xor
mov
pop
cmpsl
pop
dec
inc
sbb
cmp
vpmulhuw
mov
decb
bound
mov
cvttps2pi
popf
sahf
jmp
bound
sbb
in
push
jmp
cmp
pop
adc
sbb
mov
loope
shrb
outsl
ret
imul
xor
xor
int3
mov
mov
push
inc
mov
shll
imul
xor
lds
out
pusha
in
mov
mov
test
adc
aam
mov
icebp
cmp
aad
movsb
out
and
lret
iret
hlt
mov
dec
insl
es
jns
mul
fnsave
jecxz
jae
sbb
or
imul
ja
int3
cmp
xor
popf
insl
mov
cmp
ret
nop
push
cmp
sbb
aam
cwtl
mov
xchg
in
push
rcr
jae
movsl
sti
sahf
insl
jno
jo
push
push
pop
and
lods
inc
test
fsub
jno
mov
add
jle
das
inc
ret
push
push
jl
repnz
lods
dec
fsubl
fcomip
je
call
sbb
jge
lcall
jge
inc
fidivrl
adc
inc
dec
mov
jecxz
inc
cmp
sub
push
scas
add
lcall
xor
sbb
cwtl
stos
inc
fwait
sbb
pop
and
sub
or
ljmp
adc
aam
mov
js
or
repnz
shr
xorl
push
push
mov
sbb
xlat
ror
cmp
jge
mov
xchg
data16
or
stos
testl
insb
lret
cmp
pusha
inc
mov
cltd
cltd
lea
sbb
ret
and
cs
sub
sub
nop
lret
sub
icebp
and
es
and
push
push
pop
jp
inc
push
adc
mov
cmp
and
fsubr
adc
rorl
xor
out
fucom
push
fs
loop
mov
fwait
pop
push
or
fdivp
aas
outsb
push
pop
out
and
jmp
push
cli
xor
gs
jb
and
push
mov
fisubl
ja
lcall
inc
sbb
push
ss
loope
fstl
inc
int
mov
adc
inc
ret
jnp
sahf
sbb
insl
xchg
xlat
enter
xchg
adc
or
jnp
in
std
scas
lods
repz
jmp
jg
out
mov
loop
sub
xor
fisubrs
or
sbb
loope
lret
es
inc
jne
mov
pop
sbb
arpl
cltd
jl
add
lea
mov
cmp
cmp
test
sbb
pop
jmp
adc
hlt
add
or
stos
ds
adc
insb
sbb
int3
call
jmp
lea
scas
movsl
sbb
fwait
js
ja
lcall
or
in
dec
fdivs
ficomps
mov
sub
inc
push
cld
xorb
dec
jo
xchg
adc
lret
and
dec
sub
fdivs
mov
push
adcl
and
outsl
push
dec
aam
enter
inc
bound
push
mov
sub
sbb
xor
inc
mov
sti
sbb
mov
out
std
mov
jmp
push
pop
dec
std
les
mov
js
loopne
aad
in
add
imul
int
xor
cmc
push
mov
pop
mov
sbb
mov
pop
loope
mov
mov
dec
outsl
pop
addr16
dec
jno
add
sbb
repz
cmp
ss
incl
cltd
push
sub
sub
add
adc
sbb
jbe
in
std
and
sub
in
gs
aad
cmp
arpl
imul
lret
sbb
out
shll
mov
lds
adc
rclb
mov
mov
adc
fwait
add
xlat
mov
test
out
out
dec
jae
sbb
inc
sbb
stc
xchg
sub
cmp
and
arpl
or
ret
fsubs
sub
push
lea
inc
mov
sbb
ds
outsb
jle
sbb
enter
sub
icebp
enter
mov
dec
repnz
aad
sbb
mov
or
paddusb
adc
test
mov
inc
mov
mov
orl
cwtl
pop
sbb
fwait
dec
movsl
pop
mov
cmp
gs
stos
add
xlat
mov
sub
cltd
jle
xchg
push
leave
dec
scas
mov
jno
notb
out
jl
dec
mov
fadd
sbb
popa
fldcw
mov
push
outsb
xchg
pop
and
loop
shl
sbb
add
out
push
ljmp
cmp
fwait
loopne
jl
mov
and
xor
fmuls
and
ljmp
shrb
adc
imul
subl
int
mov
xchg
lret
lea
ret
in
fcompl
and
stos
adc
lcall
add
and
pop
jmp
xchg
jnp
or
xchg
xor
arpl
add
jl,pn
loopne
fdivs
xor
out
loop
addr16
mov
rorl
repz
jb
mov
lret
xchg
je
sbb
sub
repnz
sbb
or
je
lcall
cli
xor
sbb
push
sbb
hlt
jmp
push
mov
xchg
rol
or
mov
adcb
insl
mov
push
arpl
pop
sbb
push
dec
ret
jnp
xchg
andl
lret
aam
cmp
xchg
outsl
lcall
fcoms
outsb
lahf
inc
int3
pusha
inc
xchg
ret
loop
sbb
fcompl
sbb
and
idiv
pop
lcall
dec
fwait
pushf
into
sub
xlat
addr16
mov
hlt
hlt
ficoms
cmpsb
adc
stos
fwait
mov
loope
shll
es
int
sbb
arpl
cltd
sbb
push
or
sahf
xor
mov
in
dec
mov
cmp
xchg
icebp
lret
push
xchg
dec
les
pop
sbb
jno
xor
pop
inc
push
add
adc
sbb
dec
pusha
xchg
lea
and
xor
or
fs
xchg
popf
icebp
es
loopne
out
or
and
xchg
in
stos
in
pop
gs
imul
xchg
and
adc
aas
sbb
cmp
inc
fistpl
sbb
cltd
cli
jnp
or
adc
ljmp
lock
push
dec
sbb
jecxz
inc
arpl
add
pushf
iret
clc
out
add
insb
stos
cmp
cmp
out
lds
leave
push
dec
dec
lret
fwait
lea
jns
mov
mov
iret
test
mov
add
ret
andl
ss
or
or
popf
pusha
jl
fimuls
inc
or
and
inc
subb
test
int3
outsl
pusha
sub
decl
xchg
add
pop
icebp
xchg
arpl
fnstenv
scas
out
shl
or
adc
xchg
ljmp
xorb
xchg
adc
loop
xchg
out
dec
fnstsw
neg
sbb
sub
jns
imul
add
sahf
mov
push
mov
sub
mov
sub
lods
ret
xchg
shl
dec
int
adc
mov
ss
dec
pop
mov
push
loop
lret
xchg
fucomp
je
push
push
fldenv
jp
int
aam
xor
or
push
jbe
pop
test
andl
repz
push
repz
push
jno
pushf
aaa
shlb
sahf
add
movsb
cmp
cmpsb
push
xorl
xchg
stos
adc
lods
xor
or
adc
sbb
addr16
out
lods
outsl
fstpl
and
adc
lods
sbb
in
lcall
loopne
jns
push
push
iret
ret
adc
rclb
repnz
mov
pop
fsubp
ret
in
fstps
adc
mov
fstpl
sti
ds
out
ss
mov
jo
ss
pop
jne
cld
or
sbb
icebp
repz
dec
addr16
fdivl
jecxz
adc
jmp
test
gs
sub
leave
xor
push
sub
mov
into
ss
push
xchg
inc
cs
inc
sbb
pop
rcl
mov
dec
and
negl
nop
ret
test
add
dec
xor
dec
mov
mov
adc
loope
sbb
ds
fs
adc
adc
data16
sub
rolb
cmpsb
sbb
mov
xchg
or
fcmovnbe
ljmp
pop
fiadds
xchg
jbe
leave
mov
pop
xchg
adc
sbb
mov
mov
inc
inc
addl
adc
iret
push
cs
insl
sub
out
dec
sbb
xchg
sbbl
out
mov
cmovp
rcll
pop
cltd
xor
ret
cs
sarb
je
pop
addr16
dec
xchg
mov
fyl2x
sbb
in
sub
mov
rorb
pop
insl
push
dec
aas
xchg
aam
adc
jmp
adcb
pop
imul
xor
leave
dec
shl
dec
in
lods
pushf
push
pop
cmp
dec
sbb
mov
js
bound
mov
fldl
inc
cld
outsb
fbstp
sti
adcl
xchg
fdivl
add
arpl
cld
dec
loop
les
cltd
shl
hlt
inc
mov
outsl
dec
fadd
fsub
dec
xlat
imul
sti
and
mov
outsb
sbb
nop
outsl
sbb
fdivrl
into
push
loopne
push
pusha
add
stos
inc
xchg
sbb
enter
sub
and
mov
inc
mov
dec
aad
xor
rcll
jbe
dec
pop
or
in
test
and
es
and
cmp
xchg
repnz
pushf
shll
leave
xchg
lret
enter
data16
lods
mov
cmp
and
cmpsl
adc
xchg
into
gs
inc
mov
or
int
xchg
pop
pop
ss
mov
bnd
icebp
adc
adc
lret
jle
sbb
sbb
xor
pop
xlat
repnz
jno
adc
cmpl
fwait
cli
int3
push
test
mov
xchg
jge
pop
fs
sbb
pusha
ljmp
xor
jecxz
js
xchg
lods
out
lret
repnz
cld
jne
mov
out
dec
or
jg
xchg
in
mov
push
daa
xor
sub
pop
xchg
imul
mov
sahf
std
or
hlt
xchg
shll
pop
mov
adc
pop
imul
jmp
mov
test
pop
jne
dec
mov
out
xor
xchg
inc
jmp
jne
and
call
stos
int
sbb
pusha
in
pop
ljmp
xor
paddusw
push
push
dec
stc
push
adc
pop
sub
push
mov
test
jne
or
bound
and
sub
sbb
add
sbb
mov
xor
push
es
pop
lods
and
in
test
sub
xchg
push
mov
ds
ret
in
mov
mov
fldl
and
scas
jno
inc
and
repnz
jne
pop
lds
or
outsb
dec
dec
mov
ret
sbb
jecxz
addr16
push
mov
or
cmp
sbb
push
jne
xor
cmp
int
js
or
int
test
fwait
sbb
cmp
lcall
xchg
loope
push
adc
sti
inc
popf
jmp
std
fsubrs
adc
sbb
fiadds
sbb
push
push
rcll
imul
cmp
daa
lods
lret
pop
pop
and
mov
lods
xchg
or
jmp
pop
lcall
lock
add
icebp
fsubrs
es
jp
mov
out
and
mov
fiaddl
mov
push
fadd
fcmovb
mov
push
pushaw
call
les
loope
mov
jle
jo
scas
fcoml
pusha
xor
cmp
or
test
dec
dec
cld
push
mov
dec
or
jne
negl
sbb
paddusb
loope
dec
leave
sbb
in
shr
or
fdiv
cmp
push
jo
mov
sbb
test
sub
mov
mov
adc
insl
mov
jmp
ljmp
sbb
lcall
sbb
pop
pop
shlb
ja
nop
xchg
and
clc
in
sbb
out
mov
fistpl
shll
xor
xchg
inc
jg
cmpsl
push
movsb
xchg
or
pop
dec
in
cmp
repz
pop
inc
dec
xor
sbb
xchg
add
sbb
push
call
lcall
pop
in
out
pop
add
gs
inc
dec
popf
push
lcall
jle
mov
loope
mov
add
and
or
fs
xlat
fisttpll
sbb
mov
lock
fcoms
jp
es
test
or
inc
sbb
mov
dec
push
or
xchg
xor
xchg
mov
lods
cli
ljmp
sub
pop
out
in
fldt
lods
pop
cmp
shr
pop
repz
pop
cli
jae
pop
xor
jg
sbb
inc
loopne
cmpl
xchg
jnp
mov
jns
xchg
inc
fidivrs
push
dec
xor
pop
add
or
jecxz
repz
push
mov
mov
pop
call
test
mov
outsb
mov
clc
int
cmp
sbb
jns
idivl
add
lods
outsl
js
mov
ret
pop
inc
insb
les
mov
test
mov
jnp
push
cs
mov
jge
fcom
push
mov
fdiv
les
nop
jb
xchg
repz
cmp
test
fisttpl
andb
inc
dec
dec
in
in
repz
pop
lret
addb
mov
or
dec
xor
int3
sub
push
fnsave
pop
and
orb
ret
pop
and
fistl
lret
popa
fcomps
ds
cmp
jne
rclb
rol
in
xchg
sub
test
or
jbe
cmpsl
push
or
in
dec
mov
fs
mulb
jge
xchg
test
push
dec
inc
dec
or
lds
addr16
cmp
cmp
adc
mov
in
sbbl
xlat
fwait
into
ret
mov
sbb
flds
push
ljmp
lret
lcall
bound
or
into
enter
cli
dec
in
lea
mov
dec
mov
cmp
cwtl
insb
or
mov
fmul
sbb
push
fnsave
mov
scas
mov
or
rorl
fimull
sbb
lret
push
dec
xchg
movsl
inc
cmp
out
fsubrs
sub
mov
aas
scas
jl
mov
cmc
mov
mov
lret
insb
mov
das
cld
xchg
lahf
dec
and
and
inc
scas
iret
ljmp
pushf
lret
cmp
xchg
pop
inc
lret
jbe
inc
mov
movsl
test
cli
adc
lret
sbbb
fisubrl
sbb
lret
jle
mov
int
pop
inc
inc
xchg
outsl
inc
lret
jecxz
rcll
mov
jge
clc
xchg
lcall
and
pop
and
lret
add
adc
testb
cmp
dec
mov
cmp
or
cmp
arpl
or
lret
mov
cld
imul
das
push
lret
addr16
lds
clc
cmp
movsl
icebp
in
xchg
lret
orl
scas
repnz
das
hlt
lret
cwtl
lcall
out
shll
dec
pop
faddl
xchg
gs
cs
or
lret
adc
mov
dec
lret
testb
lret
aaa
dec
push
fwait
mov
leave
dec
lret
clc
ja
ret
xor
sub
xchg
mov
in
lret
mov
lock
push
jae
ret
push
mov
scas
lret
add
xchg
cmp
lret
or
xlat
lcall
mov
sub
pop
int
mov
stos
push
add
icebp
addb
jp
sbb
lret
mov
lds
sub
xchg
fnstcw
sahf
pop
mov
dec
ret
sub
nop
popl
sub
ja
lret
lret
add
inc
pop
pop
js
mov
dec
std
jmp
out
or
jge
repz
clc
aaa
dec
cs
and
bound
or
xlat
pop
stos
lock
movsb
lea
scas
repz
icebp
ja
adc
in
fcmovne
aad
mov
fmul
das
cmp
or
cwtl
lret
xchg
mov
mov
fs
lret
inc
lahf
mov
jno
lret
scas
mov
mov
inc
jp
lret
and
sbb
lret
je
insl
jle
data16
mov
push
sbb
lret
adcl
fmul
inc
or
movsb
test
push
and
je
rol
add
test
fldl
cmc
adc
in
dec
sbbl
pop
cld
pop
insb
mov
mov
xchg
dec
int
shlb
clc
lret
dec
js
cmpl
fs
aad
iret
sub
cmp
cmp
daa
adcb
lret
lcall
fbstp
and
xchg
fs
pusha
adc
pop
push
add
mov
or
iret
in
jle
pop
rorb
dec
mov
pop
cmc
sbb
and
fsubl
add
dec
xorl
lret
sub
lods
xchg
xchg
fnstsw
lret
xor
push
out
lahf
pop
adc
cmp
mov
and
lret
sti
pop
iret
xchg
nop
add
filds
and
aaa
pop
adc
fld
or
decb
ja
mov
stos
pop
xchg
rorb
or
mov
and
push
lret
out
fwait
inc
jne
lret
dec
mov
pushf
int3
fisttpl
inc
lret
push
dec
add
cmp
addr16
mov
test
pushf
cmp
push
dec
test
xchg
lret
lods
mov
dec
imul
addr16
gs
dec
push
cmp
xchg
push
sub
mov
fmull
movsb
mov
mulb
or
or
or
jno
push
cld
lret
hlt
mov
and
lret
pusha
lds
stc
lret
lock
mov
lret
enter
cmp
cmp
lret
xchg
adc
std
mov
pop
cmp
ja
or
pop
out
adc
jmp
imul
popa
dec
jp
push
enter
sbb
sub
mov
lret
push
fs
in
lea
jo
dec
ljmp
cmpl
imul
insl
cmpsb
int
mov
mov
cmc
stos
add
in
popaw
adc
js
xchg
mov
lret
sub
push
xor
lret
sbb
dec
lret
inc
jb
call
lret
xchg
pop
dec
aam
je
lret
mov
push
lods
leave
pop
jne
xor
loope
lret
jl
mov
orl
fisubs
lret
mov
push
subb
mov
imul
shll
sbb
xor
aaa
iret
sub
dec
lods
repnz
mov
dec
inc
cld
sbb
mov
push
add
push
in
pop
dec
or
mov
mov
ja
rolb
mul
shll
jp
and
ret
jg
sub
mov
lret
hlt
mov
sub
icebp
aad
cmpsl
and
or
jecxz
fcmovne
mov
pop
lock
push
roll
lret
jns
jae
mov
cmp
push
pop
cmp
leave
jmp
lahf
mov
daa
inc
dec
decl
les
dec
test
and
pop
or
push
inc
bound
and
pusha
lret
nop
mov
insb
adc
cmp
sbb
push
lret
and
cmp
or
out
ret
fcmovbe
dec
mov
ret
xor
or
cltd
push
fs
lret
les
sarl
iret
mov
cmc
bound
mov
icebp
insb
xor
mov
jmp
loope
push
xchg
pop
int
dec
push
mov
and
inc
jmp
insl
dec
outsb
cwtl
fwait
lret
jp
sub
or
adc
dec
cld
iret
mov
stos
or
cmp
lret
and
dec
mov
in
and
adc
pop
mov
push
insl
pop
sti
mov
cmpl
mov
int
push
xchg
stos
int
mov
lock
pop
lret
jae
lods
push
and
scas
pusha
insl
lret
xchg
cmpsl
push
lret
or
xor
mov
test
mov
fimull
mov
lret
dec
loope
nop
fcoms
pop
mov
outsb
jmp
lret
in
test
cmpl
scas
mov
adc
lret
bswap
bound
ret
pushf
popf
stc
fbld
xchg
dec
push
cli
cs
nop
int
push
sub
jo
pop
movl
mov
push
fsubrl
cltd
adc
pop
mov
lret
mov
insl
push
inc
lret
pushf
cmp
fnstsw
lods
mov
rclb
fnstsw
test
and
lods
andl
aaa
jb
bound
cmp
rep
jbe
cmp
decb
lds
arpl
iret
scas
inc
out
fs
in
or
add
int
aad
and
andl
sub
je
shl
sub
jmp
pop
xchg
ror
fsubs
mov
cmp
jmp
sub
pushw
movsl
lret
cld
mov
cmp
pop
stos
or
rcll
es
mov
inc
push
es
fdivr
cmc
pushf
pop
shrl
lret
ds
mov
lret
insl
push
sub
es
push
mov
mov
add
dec
lds
jo
inc
movsb
lret
arpl
popa
shl
fstpl
int3
movsl
inc
xchg
mov
and
aad
inc
pusha
ds
or
jb
int3
lds
lret
mov
adc
or
pop
shl
jecxz
dec
shr
dec
dec
nop
inc
lret
xchg
sbbb
pop
pop
sbb
insb
sbb
mov
inc
outsb
arpl
dec
inc
mov
cmp
dec
sub
sar
cmpsb
xchg
or
iret
jbe
mov
push
push
leave
lea
mov
cld
jmp
enter
das
sti
push
and
popa
dec
add
cmp
mov
je
pop
hlt
shrb
lret
sub
mov
jb
cmp
movsl
ror
subb
jg
pop
lock
jns
lret
sbb
subb
push
xor
fstl
jne
daa
cmp
inc
aam
dec
bound
dec
and
fstl
pop
push
adc
or
std
call
stos
stc
sbb
pop
scas
pushf
loope
inc
xor
lock
ret
cmp
cld
out
push
pop
sbb
imul
in
jno
jp
dec
mov
das
cmp
pop
pop
in
dec
sti
mov
repz
sti
jmp
mov
jbe
sbb
test
pop
stc
sbb
ret
xlat
repnz
dec
test
fcomps
lcall
xor
sbb
mov
jnp
loopne
in
mov
xor
sbb
mulps
inc
aam
fwait
sbb
gs
mov
dec
lock
leave
mov
clc
push
test
test
xor
or
mov
test
xor
ja
mov
jne
iret
inc
sbb
sbb
sub
out
xchg
fiaddl
aam
pop
test
pop
push
or
sti
xor
mov
imul
sbb
aas
filds
dec
shl
jae
out
adc
cwtl
out
loope
in
mov
mov
cmpsb
jmp
icebp
fildll
pusha
jne
test
or
jecxz
ja
arpl
aam
mov
fmull
xor
sarb
mov
mov
fbstp
ljmp
sbb
and
lret
bnd
jmp
insb
out
sar
ret
pop
xor
imul
int
cmp
lret
cwtl
clc
addr16
or
mov
outsl
pop
test
add
xchg
in
mov
js
ret
stos
inc
mov
push
adc
mov
lock
out
shll
mov
mov
push
int3
inc
sbb
xlat
pusha
ljmp
into
sbb
ficompl
push
add
daa
add
jns
leave
pop
push
inc
in
fsts
xchg
inc
es
ds
inc
ret
jae
cli
jns
and
lea
sbb
mov
cmc
jno
mov
mov
mov
inc
rcrb
xchg
inc
outsb
mov
pop
ret
in
lcall
push
xor
das
scas
cmp
out
jne
rorl
arpl
pop
mov
out
add
mov
xor
lods
add
sub
jg
add
mov
notl
push
jno
scas
or
loop
mul
in
or
enter
inc
push
not
and
loopne
xor
push
out
inc
outsl
data16
cmp
popa
add
in
xor
sbb
mov
mov
pop
std
adc
adc
and
mov
popa
cmp
in
addr16
push
or
adc
push
and
aam
call
or
cmpsb
ja
pusha
sahf
sub
xor
mov
scas
mov
mov
mov
push
jns
addb
fidivrs
cmpb
scas
sbb
mov
xor
xchg
adc
inc
mov
stos
je
jecxz
mov
cmp
or
and
inc
int
push
cmpsb
xor
je
adc
mov
pusha
ljmp
add
sbb
jns
les
fwait
and
sub
lret
sbb
shl
inc
sbb
mov
push
in
jae
mov
int3
and
popf
xchg
adc
sti
cli
mov
cmp
sub
icebp
sub
xchg
jns
sub
popa
addr16
dec
or
insl
inc
imul
push
or
test
call
sbb
pushf
sbb
cmpsl
push
pushl
addr16
int3
loopne
cmp
in
xchg
jb
jmp
inc
xor
jnp
pop
rcl
dec
adc
popa
push
into
fldl
hlt
push
cli
das
mov
pop
andps
jbe
lret
sbb
stos
and
out
or
stos
pusha
sbb
or
xorl
xchg
imul
mov
and
add
add
fcmovne
jae
mov
pop
push
sub
test
add
jg
pop
daa
xor
sbb
lods
push
cmp
repz
pop
enter
sbb
mov
inc
mov
imul
aas
and
int3
xchg
jge
mov
push
jg
cwtl
loopne
mov
clc
mov
mov
fnstsw
push
mov
adc
jp
pop
mov
jmp
mov
mov
std
sbb
test
sbb
pop
cmp
lret
mov
jmp
inc
cmpsb
sbb
dec
dec
cmpb
mov
pusha
cmp
lcall
push
loopne
dec
jo
or
jbe
adc
sub
out
dec
jae
outsl
sbb
loop
mov
sbb
clc
dec
insl
mov
xor
push
aaa
jns
rol
xchg
arpl
pop
jle
or
dec
adc
dec
ret
or
sbb
std
or
repnz
sbb
movsl
lods
adcl
or
js
add
dec
imul
and
jb
pop
test
adc
xchg
frstor
insl
jae
pop
push
inc
ss
mov
jmp
and
sbb
ret
push
cmpb
les
sti
inc
and
mov
and
nop
mov
loopne
call
inc
fistpll
lahf
jae
aam
lock
pop
mov
xchg
lahf
jmp
mov
jcxz
xchg
pop
xor
int
push
pop
lret
ret
sbb
jno
xchg
aas
xchg
jo
inc
push
mov
pop
in
mov
inc
rcl
dec
and
aas
sub
out
push
sbb
mov
pushf
push
sahf
xchg
add
popa
loope
sub
mov
adc
mov
hlt
xor
aas
je
ja
es
or
mov
lcall
or
push
and
daa
adc
testl
aad
sbb
data16
ds
leave
xor
popa
pushf
fnsave
frstor
imul
ja
jae
out
gs
sbb
icebp
orb
outsl
ljmp
fisttpll
push
xchg
dec
scas
xor
ss
out
cmpsb
sbb
xchg
divl
data16
fcoml
aaa
pop
jl
and
xorb
and
shll
adc
push
xor
sbb
push
fdiv
xchg
popa
std
out
mov
out
popa
jb
sbb
out
jmp
mov
leave
fimull
adc
inc
les
jmp
fistl
or
and
fidivl
iret
sbb
mov
movsb
fcmove
ljmp
jl
lcall
pop
dec
cmp
or
out
xor
rcr
push
out
dec
loopne
mov
sub
loope
fcoml
jmp
aas
adc
out
clc
cmp
stc
idiv
int
cmp
lock
mov
ds
loop
inc
inc
fwait
xor
stc
sbb
xchg
pop
fldt
mov
mov
or
cmp
ret
mov
or
sub
cs
adc
xchg
pushf
xchg
fstps
pop
sahf
aad
mov
pop
fisubrs
movsl
sbb
sahf
mov
imul
fcomps
xchg
aas
shrl
sbb
das
movsb
sbb
xchg
inc
xor
daa
adc
mov
mov
int3
nop
sbb
sub
mov
icebp
jmp
fs
iret
out
or
stos
or
sbbl
roll
mov
pushf
addr16
jo
add
aam
jns
mov
lods
xor
inc
inc
adc
in
xchg
mov
cmp
leave
xor
lcall
push
lret
mov
test
and
ja
adc
mov
negb
ja
lds
insb
xor
pop
call
ss
xchg
jecxz
push
xor
ret
jmp
inc
rcll
sbb
insl
and
shl
inc
mov
popf
shll
icebp
repz
outsl
sub
xor
jge
fcomps
fstps
xor
add
loopne
loope
repnz
subl
jae
add
in
ljmp
adc
cmc
or
push
cs
sti
sbb
out
les
jae
sbb
pop
and
jno
jae
pusha
popa
fsub
ss
xchg
adc
and
test
insb
xchg
fiadds
les
xchg
cmp
fcmovb
cmp
sub
pop
or
andl
lret
fmull
cmp
scas
dec
ljmp
enter
inc
add
inc
mov
push
insb
loop
pushf
sbb
jne
lcall
inc
jmp
sbb
sub
fsubrs
repnz
test
cld
icebp
jnp
jne
xchg
loop
ret
ljmp
pop
andl
and
sbb
clc
data16
inc
ret
or
fistps
loop
inc
das
push
incl
jne
xlat
dec
sbb
test
and
xchg
jmp
jo
cs
leave
push
test
jno
and
add
sti
mov
xchg
push
test
push
and
out
lods
mov
mov
sbb
mov
mov
fbstp
cmp
inc
cmp
int
fmuls
dec
filds
push
push
repz
pop
rcrl
popf
inc
outsl
jo
add
ja
jbe
xchg
bound
in
sahf
xchg
sbb
inc
xor
xchg
fwait
fs
xchg
and
cmp
sbb
hlt
xor
ljmp
sbb
mov
xor
fstp
sbb
inc
cs
les
pop
add
lcall
sbb
loopne
mov
aas
rcrb
js
subb
cmpsl
push
ret
daa
adc
imull
push
xor
inc
je
cmc
dec
xchg
imul
int
sbb
rorl
ja
imul
gs
ljmp
fdivs
xchg
sbb
xchg
xchg
push
xor
pop
push
in
and
subl
andb
dec
jmp
iret
cmp
bnd
mov
xor
sub
aaa
iret
mov
lods
dec
frstor
insb
fmuls
dec
pop
sbb
jl
add
jg
in
push
out
lods
xchg
sbb
jae
sub
jp
and
cmpb
dec
mov
call
sbb
push
and
xchg
pop
and
pop
xor
pop
int
es
cmpl
mov
xchg
sti
sub
or
adc
icebp
inc
int
int3
ljmp
push
lods
mov
adc
imull
mov
bound
hlt
jge
nop
push
inc
dec
pop
lds
mov
mov
cmpb
repz
jnp
or
xchg
xlat
add
add
cmp
sbb
fwait
daa
sub
rcrb
or
pop
dec
mov
lret
xor
cs
or
mov
pop
nop
lret
fisttpll
into
lcall
xor
lret
pop
mov
scas
sti
lret
push
aam
jbe
push
xor
jnp
inc
lret
mov
les
shll
bnd
xchg
in
jbe
or
xor
xchg
insb
xor
jmp
xor
sub
int
lret
lock
icebp
ja
mov
pop
je
test
clc
inc
pusha
jns
push
xor
push
lret
pop
add
fisttpll
push
call
clc
push
pop
sbb
imul
mov
orb
jp
push
mov
push
scas
or
leave
loop
rclb
adc
sub
or
lret
mulb
jmp
dec
jae
adc
or
push
xchg
jmp
rorb
mov
xor
cmpsb
mov
sbb
fidivrs
ds
add
clc
test
cmpsb
jae
xor
arpl
lret
cmpsl
xor
in
xor
out
lret
xchg
fcompl
adc
test
xor
mov
shlb
loope
jmp
aaa
out
adc
loopne
inc
sbb
xor
jno
fld
xor
dec
fidivrs
pusha
jp
inc
mov
mov
in
sub
xor
iret
mov
lea
repz
xlat
xchg
rolb
fisttps
in
sarl
pop
shrb
stos
push
and
fimull
adc
in
insb
push
and
mov
xor
leave
cmp
cli
mov
sbb
sbb
aas
adc
xlat
cmpl
mov
lea
shrb
sbb
imul
xor
out
sbb
lret
dec
aas
ret
jnp
push
das
lret
fstpt
xchg
test
dec
frstor
aas
mov
xor
out
or
es
sub
lret
xlat
enter
cmp
loope
xchg
cmp
testl
or
cld
cltd
pop
lret
test
jle
stos
jge
int
jl
mov
push
lret
int3
inc
shrb
insl
push
jns
mov
push
lret
out
mov
loope
repz
in
out
cmp
outsb
dec
rol
fwait
mov
test
mov
int
fdiv
pop
mov
lret
bound
jns
lret
inc
stc
sahf
mov
lret
and
repnz
add
call
scas
jg
xlat
shll
inc
push
test
lret
jmp
gs
out
stos
lcall
ss
and
cmp
leave
adc
pop
clc
or
shrl
nop
lods
sbbb
mov
inc
jge
or
daa
ror
sub
jb
push
rol
cmp
inc
sub
rcl
lock
jge
out
lret
mov
mov
insb
lret
push
pop
pop
lret
stc
push
mov
clc
lret
and
scas
ljmp
push
and
push
lret
in
sbb
cmpsb
je
adc
call
xchg
xor
lret
mov
jle
pop
out
mov
lret
testl
sub
testb
adc
cmpsb
mov
xchg
push
lret
mov
dec
shlb
nop
ret
mov
pop
inc
stos
xchg
and
lret
sbb
imul
es
xchg
pop
scas
sbb
mov
stos
jmp
dec
lret
enter
fadd
dec
or
and
adc
xchg
xchg
fnop
ja
push
xor
inc
push
lret
sbb
jle
jno
cmpsl
leave
fistpl
pop
stos
lret
xchg
xchg
xchg
push
push
xchg
inc
sub
iret
lds
pop
lret
xlat
cmp
mov
call
mov
pop
loop
imul
popf
loope
push
outsl
push
lret
adc
cltd
lock
aam
adc
xchg
cmp
jmp
mov
lret
cmp
inc
pop
dec
xchg
inc
sbb
inc
fs
xlat
dec
add
push
insl
int3
push
in
movsb
shll
sbb
js
lret
mov
aad
cmp
lret
lea
pop
mov
ja
sti
int
dec
add
add
mov
sbb
xor
test
sub
jg
xchg
imul
xor
ds
je
pop
sub
sub
xchg
mov
xor
cli
dec
sbb
loope
push
cmp
inc
cmpl
outsb
aas
push
aaa
ficoml
or
mov
dec
or
insb
xchg
ficompl
xchg
sbb
int3
sub
jmp
or
inc
mov
das
cmp
and
rcll
cmp
mov
mov
repnz
cs
movsb
out
movsb
xor
call
mov
mov
mov
add
shrb
lea
enter
imul
sbb
test
jl
sbb
sbb
je
pop
xchg
xor
scas
nop
dec
sbb
xor
ret
sbb
lods
fnsave
push
ret
dec
test
mov
sbb
out
xor
jecxz
mov
pop
nop
sub
hlt
pop
jo
sbb
ds
cltd
pop
data16
popa
fst
inc
mov
xchg
or
hlt
popa
in
lahf
cltd
test
xor
mov
sbb
jno
xchg
and
xchg
dec
xchg
setbe
fsub
and
xchg
pop
xlat
add
push
pop
out
mov
aas
inc
mov
cmpb
and
jle
out
mov
xor
in
enter
lock
add
mov
test
push
lret
sub
mov
hlt
fistps
scas
mov
xchg
rcrl
sbb
pop
sbb
cwtl
int
push
xchg
fidivl
movsb
add
sti
inc
loopne
pop
cmp
inc
cltd
pusha
notb
imul
aad
ss
pop
adc
jecxz
mov
loop
or
inc
sub
mov
xchg
xlat
ja
in
imul
loopne
sti
cmp
inc
mov
inc
jl
mov
fstpl
and
mov
sbb
insb
inc
stos
cld
dec
dec
js
add
pop
pop
sub
xchg
mov
repz
clc
push
xor
ljmp
mov
adc
add
xchg
pop
cmp
mov
cli
mov
push
xchg
push
mov
fdiv
cmp
divb
mov
dec
fldenv
movsb
mov
xor
cli
sub
aad
dec
cmp
dec
mov
ds
sbb
sahf
pop
sbb
push
xor
cmp
repz
ret
pop
or
test
fwait
cs
or
out
sbb
imul
aas
insl
pop
mov
lds
jp
scas
cmc
vminsd
push
test
jbe
mov
negl
int
pop
jbe
pop
ret
jmp
scas
insb
ret
mov
xchg
or
xlat
push
hlt
push
xor
sti
sub
ljmp
dec
je
dec
mov
rclb
sbbl
mov
jp
push
mov
or
gs
bnd
jecxz,pt
mov
scas
push
xor
push
push
cmpsb
loope
pop
int
mull
lcall
xchg
lods
lea
and
mov
gs
xchg
cmp
xor
push
scas
dec
mov
stc
loopne
in
scas
or
hlt
arpl
fistl
pushf
iret
out
mov
out
stos
subl
jecxz
jae
fadd
addr16
aam
aam
pusha
and
xchg
in
fldcw
cmp
arpl
into
cmp
fisubs
dec
or
inc
ret
dec
sbb
mov
jle
xchg
ja
cmpb
loopne
inc
imul
cli
sbb
inc
lret
xchg
push
jmp
shlb
sbb
or
xor
data16
adc
mov
cli
pop
pop
int
sbb
jmp
mov
adc
lock
mov
js
xor
sub
aad
dec
push
mov
mov
jp
ljmp
fcmove
fistpl
ror
mov
xor
inc
js
jmp
cmovnp
movsb
jb
pop
xor
push
popf
sbb
push
cs
enter
push
or
mov
sarl
and
test
lcall
mov
dec
les
push
insb
fsub
imul
hlt
fmull
clc
gs
mov
imul
dec
scas
movsb
and
les
sub
loop
lds
fildll
xchg
aas
sarb
dec
adc
mov
add
add
mov
xchg
outsb
xchg
cmp
pop
sbbl
jno
sbbl
daa
jns
ret
cmpb
mov
rorl
mov
pop
inc
hlt
xchg
mov
fnstcw
pop
dec
xchg
push
add
pop
jp
dec
mov
adc
int
mov
out
and
inc
cmpl
pop
jb
sbb
mov
mov
or
imul
or
pop
test
push
fstpl
cmp
pop
popa
lods
pop
sbb
inc
dec
xor
jne
sbb
lock
sub
push
dec
mov
sub
mov
mov
jbe
call
popa
jmp
outsl
jmp
movsl
stos
mov
jno
inc
popa
jbe
cmp
out
mov
adc
xor
idivl
aad
and
sbb
cmp
jne
xchg
cmp
fists
add
xlat
scas
shl
jmp
mov
out
xchg
in
out
jne
repnz
pop
icebp
insb
sub
je
or
xchg
sbb
adc
dec
cmp
fsubl
jge
loope
cmp
mov
pop
insb
jnp
sbbl
loopne
test
fidivl
out
adcl
call
shll
xchg
pop
in
lock
bound
or
sub
stc
ret
in
and
fbld
les
cmpsl
cld
xchg
not
mov
subl
outsl
ljmp
jmp
sbb
xchg
cmpsl
pop
clc
outsb
dec
push
scas
mov
sbb
lret
lea
xchg
push
xchg
push
in
ficomps
addr16
sti
cltd
mov
jns
lahf
ja
stos
dec
or
xor
mov
mov
xchg
or
push
pop
inc
xor
lcall
mov
inc
sub
fsincos
scas
ret
rcll
inc
pop
jmp
enter
mov
push
mov
std
mov
pop
outsl
and
fbld
in
daa
push
jbe
inc
cmp
pop
mov
sbb
jle
add
fwait
ljmp
lock
f2xm1
fs
mov
mov
inc
sbb
sbb
push
scas
sbb
fisubs
int3
scas
cs
sub
xor
subl
jp
sub
sti
out
inc
mov
cmovge
adcl
inc
sub
sarb
push
ret
or
mov
sbb
cmpl
sub
jg
sbb
push
je
mov
mov
js
inc
mov
push
sub
cmp
mov
push
and
pop
in
jge
ret
sti
stos
dec
mov
pusha
fstpt
orl
sbb
and
cmp
out
sub
adc
cli
mov
and
jnp
push
ret
pop
xor
jno
sbb
pop
pop
and
mov
cmp
xor
std
sbb
xor
jns
lret
adc
ret
pusha
or
es
mov
sub
repz
pop
mov
xor
dec
adc
daa
push
and
sub
repz
pop
xlat
pop
mov
int
fwait
or
fs
mov
sbb
cbtw
in
fisttps
mov
cmp
fimull
movsl
aaa
sbb
rcll
lret
push
sbb
pop
mov
cmp
add
ljmp
lock
xchg
fisubrs
push
and
int
jecxz
stc
mov
mov
and
or
pop
mov
insl
cmp
pop
mov
mov
sbb
sbb
orl
xchg
hlt
xor
sbb
push
fimuls
nop
lret
sbb
sti
mov
mov
push
ret
push
aam
sbb
mov
jno
ja
pop
xor
jmp
jno
bound
dec
adc
pop
gs
push
andb
cmpsl
and
xchg
xchg
gs
xchg
push
test
movsl
arpl
adc
sbb
add
xor
icebp
ret
push
les
add
sahf
xlat
ret
imull
add
pop
mov
int
addr16
fsubrl
mov
cmp
jg
dec
int3
mov
adc
test
cmp
mov
inc
mov
loopne
mov
mov
mov
sbbb
push
cmp
mov
inc
in
mov
repz
lods
sahf
pop
lcall
xchg
out
and
icebp
add
ret
dec
cld
xor
in
lds
mov
cwtl
outsb
jmp
pop
push
sarb
push
shll
xchg
push
add
popf
cmp
cmp
jge
movsl
subl
adc
or
mov
ud2
fdivl
or
shl
or
mov
mov
mov
cmp
aad
mov
inc
repnz
sbb
rolb
lcall
mov
enter
leave
inc
mov
inc
dec
sbb
test
testl
inc
fcmovnbe
ret
mov
out
hlt
int3
addr16
cmp
xor
scas
push
mov
lods
jmp
jmp
hlt
add
add
scas
inc
ret
sbb
push
pop
jmp
cmpsb
xor
push
pop
fidivrs
mov
int3
movsb
or
inc
sbb
rolb
jno
insl
xchg
and
or
stos
arpl
mov
push
daa
out
loop
nop
inc
inc
fnstenv
dec
aas
cmp
int
scas
aam
dec
adc
imul
mov
notl
adc
faddl
mov
dec
sbb
mov
ljmp
dec
arpl
push
pop
enter
dec
imul
push
int
push
jle
insb
and
sbb
insl
mov
lea
dec
test
jp
js
daa
adc
xor
test
pusha
mov
sbb
ret
mov
mov
andl
adc
cmp
std
fcomps
mov
gs
nop
mov
xchg
hlt
jbe
lock
xchg
and
inc
aas
or
imul
sbb
mov
fdivl
fsub
lods
aam
add
inc
int3
mov
inc
fucom
jno
movsb
sub
sbb
mov
rclb
dec
ret
xchg
dec
and
add
jno
ljmp
push
mov
lds
scas
cli
mov
xchg
frstor
lds
dec
movsb
rolb
sbb
jnp
repnz
mov
lea
push
inc
repz
jb
sbb
fptan
ljmp
out
mov
mov
jne
int3
outsb
sbb
add
fistps
adc
add
and
rcrl
stos
mov
cli
add
fs
jns,pt
and
inc
mul
movsl
arpl
xchg
cmpl
je
mov
pop
or
and
rcrl
es
andl
fisubl
sbb
sti
sbbb
xchg
pushf
hlt
xchg
xacquire
dec
jns
out
pop
repz
pushf
daa
push
xor
fnsave
repz
mov
sub
push
lock
test
push
jno
stos
cmpsb
mov
ljmp
fistps
lret
sahf
sti
in
idivl
hlt
push
inc
lds
in
sbb
mov
mov
jmp
cltd
dec
fsub
xacquire
in
cmp
xor
iret
xchg
test
pop
popf
xchg
vpmullw
xchg
cmpsb
sub
and
repz
dec
mov
inc
dec
inc
scas
cmpl
sbb
rcr
ja
loopne
jne
jmp
adc
xor
ret
mov
sbb
or
or
and
call
lret
jl
lock
add
sbb
mov
testl
sbb
push
lret
sbb
push
dec
jnp
or
add
sbb
cwtl
jmp
mov
sbb
es
pop
pop
and
and
cli
dec
jge
push
jl
js
sbb
frstor
pop
dec
cmc
stc
int
push
ja
ret
cmpsb
test
sub
pop
mov
cltd
mov
mov
lods
popl
sbb
lret
ljmp
stc
sahf
sbb
mov
mov
xlat
fsubr
push
insl
xor
mov
jge
ret
out
jae
mov
int3
sahf
cs
inc
addr16
aam
ret
or
xchg
test
cs
fdivr
or
push
xor
xchg
sbb
arpl
sbb
into
mov
cmp
adc
or
cmp
pusha
shl
gs
loopne
dec
je
jb
cli
test
jecxz
dec
jge
nop
lahf
test
fisubrs
cmp
sub
add
popa
fistpl
and
ljmp
sbb
sti
mov
xchg
int3
mov
mov
add
test
mov
mov
notb
push
sub
jns
mov
xchg
fsubrs
test
or
dec
mov
add
push
xchg
insl
jno
pusha
test
xchg
lea
mov
adc
fistps
imul
cwtl
sub
mov
mov
mov
jbe
xor
movsl
sbb
shr
stos
xor
pop
jg
jmp
xchg
mov
call
aam
repz
ret
fmuls
daa
ret
mov
ljmp
or
out
mov
cmpsb
mov
pusha
std
or
xor
jge
sbb
mov
out
imul
dec
jmp
inc
insl
and
lods
idiv
pop
lret
pop
sub
xor
dec
pop
fbstp
ret
ret
sbb
add
dec
pop
ret
aam
sbb
dec
push
xchg
sub
push
jle
test
pop
int
sbb
loopne
cmpsb
sub
adcb
lret
mov
out
add
cmp
adc
mov
jg
call
jne
lods
xchg
xchg
lret
mov
push
xchg
push
int3
insb
sbb
fimuls
cmpxchg
mov
xor
pop
fldcw
popa
aad
sub
mov
push
mov
xchg
mov
cld
cli
out
mov
mov
or
push
roll
lds
loopne
inc
mov
inc
sbb
ret
rcrl
pushf
out
aas
add
inc
icebp
stos
bnd
add
imul
mov
repz
xor
out
sahf
add
hlt
sub
xor
faddl
pop
das
das
xchg
jbe
jmp
adcl
sbb
cltd
fisubrl
sbb
mov
mov
cmp
add
sbb
mov
and
push
xchg
pop
popf
xchg
and
dec
gs
push
and
and
cs
dec
mov
mov
ljmp
and
add
jecxz
sarl
or
sbb
sbbb
ret
test
mov
jb
div
jbe
out
dec
mov
add
jo
xor
cli
jns
xchg
cmp
sub
ss
push
iret
dec
cmp
mov
cmp
nop
movsb
es
sti
sbb
negl
out
mov
daa
pop
mov
and
mov
out
sub
test
xor
call
xor
jb
sbb
dec
bound
adc
jbe
in
sbb
push
inc
jmp
pop
ja
inc
inc
sahf
xor
loopne
ds
loop
pop
cs
ss
lds
mov
xchg
fdiv
pop
subb
jns
dec
jle
repnz
inc
cmp
lret
mov
fistps
hlt
inc
ja
mov
xchg
pop
ss
leave
sbb
cmp
and
sahf
insb
ret
dec
adc
push
cmp
lods
mov
fisubs
xor
jmp
mov
dec
adc
mov
dec
push
std
lock
pop
mov
leave
fsubrl
sti
or
loopne
xor
xor
je
aad
sbb
mov
push
inc
in
sub
js
sbb
cmp
dec
les
or
pop
sub
sub
inc
jae
mov
repnz
out
stos
insl
pop
in
mov
outsb
add
lock
xchg
add
dec
loop
rorb
push
adcb
push
ret
test
push
jecxz
push
and
test
xor
out
jle
mov
sarl
sbb
rcrb
sub
jb
push
lds
sbb
mov
or
and
scas
out
sbb
data16
mov
dec
push
in
push
repnz
lret
movsb
outsl
push
pop
pop
ud2
push
aam
mov
add
cmp
sti
sbb
sahf
push
push
cmp
jns
fstpl
fdivrs
jle
ljmp
repnz
orb
test
das
adc
lret
sub
arpl
gs
pop
repnz
mov
clc
and
out
fiaddl
push
outsl
cmp
ljmp
sub
xlat
mov
pop
xor
pushf
f2xm1
inc
xor
cmp
pop
and
out
or
adc
xchg
imul
xor
push
sbb
mov
mov
cmpsb
addr16
lock
nop
xchg
jb
xor
pushf
loopne
push
or
fldl
pop
mov
cmp
cmp
out
cltd
xor
inc
cmpsb
and
push
jae
sbb
aas
cmpsb
lock
jmp
mov
pop
fistpll
inc
cmc
ljmp
add
popa
mov
test
mov
xchg
into
xchg
out
cltd
inc
pusha
pop
shld
mov
or
dec
daa
mov
dec
stc
idivb
negl
dec
lcall
push
insl
pop
jno
cmpsl
das
cmpb
mov
mov
sbb
clc
jnp
out
pop
push
adc
pop
add
test
sbb
sub
add
mov
repnz
cmc
repnz
outsl
lds
xor
xor
pop
inc
popa
leave
jae
lock
jo
add
sbbl
jp
cmpsb
filds
outsl
inc
daa
movsb
push
test
arpl
jmp
cmp
ljmp
shl
mov
jp
xchg
mov
cmpb
into
lret
jns
test
pop
insl
cmp
dec
push
push
pushf
or
and
add
sbb
inc
lods
dec
sub
jmp
mov
mov
and
jmp
mov
add
jmp
lret
fidivl
lds
sbb
and
fs
lds
inc
cwtl
shr
pop
sbbl
decb
fisubl
push
jl
clc
fisubs
packssdw
dec
mov
fildl
push
adc
sbb
pop
gs
sbb
sbb
aad
push
pop
cmp
mov
xorl
in
outsl
inc
bound
push
pop
lds
ret
mov
cwtl
mov
add
imul
xchg
ret
adcl
cmpsb
push
or
fstpl
loop
cld
out
xor
clc
je
rcr
imul
pushf
inc
push
or
mov
cmc
sub
loope
mov
mov
lds
sbb
fs
ljmp
and
jmp
stos
push
ljmp
add
and
pop
jmp
adc
sti
sub
or
into
xorl
inc
test
out
mov
int3
jnp
lcall
mov
push
xor
fcomp
push
inc
mov
addw
sbb
shl
repnz
pop
dec
mov
arpl
out
cmp
cmc
push
add
int3
sbb
mov
jns
jg
sub
gs
xchg
cmp
pop
add
incl
push
sub
call
fbstp
aam
xor
xlat
outsl
imul
fnstsw
lcall
sbb
inc
cmp
jecxz
rcr
shll
push
test
pop
jmp
ljmp
mov
sbb
popf
jg
and
shlb
lock
outsl
mov
xchg
sbbl
cld
decl
daa
push
fisubl
arpl
or
repnz
mov
adc
add
icebp
stc
imul
mov
inc
xchg
adc
dec
jb
sub
push
cmp
or
arpl
fimuls
xchg
inc
inc
mov
mov
push
test
test
test
jecxz
pop
sub
or
xchg
add
fwait
xor
sub
pop
lret
arpl
cmpsl
div
xor
fcomps
pop
xor
cmp
test
hlt
sub
add
roll
rorb
fdivs
jl
push
sub
jnp
iret
sbb
fst
xchg
frstor
inc
das
dec
test
inc
repnz
not
clc
cmp
pop
mov
fadd
sbb
movsb
jae
arpl
or
mov
outsl
loope
fbld
cmp
jne
pop
jmp
pop
sbb
fisubl
icebp
adc
and
sub
jno
bnd
dec
out
and
scas
orb
mov
jl
ret
inc
push
push
mov
xchg
sti
sbb
push
add
pop
xor
or
xor
inc
xor
out
xchg
in
push
inc
adc
xchg
and
in
loope
xor
push
insl
adc
jl
push
sub
and
mov
ss
fwait
sub
imul
jecxz
dec
lcall
mov
insl
sbb
fisubs
pop
loopne
sbb
xlat
data16
lods
inc
lds
outsl
sub
mov
sti
loop
stos
mov
jae
mov
enter
add
or
jb
sbb
inc
jl
jp
subb
mov
and
inc
out
or
mov
xchg
xchg
jmp
ret
xlat
out
sbb
int3
aad
cmpsb
int3
test
or
cmpsb
and
sti
push
aas
popf
pop
decb
popa
jp
mov
sbb
push
pop
xchg
pop
ret
jl
fcoms
stos
sbb
inc
mov
cmpsb
shr
scas
mov
jmp
xor
xchg
scas
hlt
icebp
and
xchg
scas
ss
mov
bnd
mov
inc
inc
mov
xchg
mov
sbb
mov
pop
int3
jbe
mov
test
lock
movsb
cmp
cld
fwait
pop
sbb
push
push
xor
inc
xchg
fstpl
sbb
mov
dec
push
cmp
mov
or
leave
rcrl
cltd
pop
mov
and
fdivp
jecxz
and
add
jno
xor
std
movsb
insb
shlb
inc
push
push
sbb
jl
dec
xchg
push
lret
jae
jns
mov
mov
push
pop
mov
loope
cwtl
inc
sbb
and
push
pop
jle
je
sbb
sbb
xor
push
xlat
imul
add
add
sub
pusha
gs
sbb
or
fistpll
dec
fnsave
mov
mov
ret
mov
cmpb
lret
xor
out
mov
in
push
int3
mov
pop
test
or
mov
lods
mov
outsl
inc
pop
dec
in
jmp
ret
idivb
push
or
cli
cmc
jmp
push
cmc
jmp
cwtl
mov
push
mov
addr16
sbb
push
inc
hlt
sarl
jns
mov
pop
sti
out
push
push
iret
push
inc
jns
insl
or
inc
mov
mulb
bound
xor
cmp
push
test
mov
imul
sbb
adc
push
cmc
sbb
mov
cmp
sbb
dec
add
and
test
arpl
mov
jle
stos
or
std
sub
adc
xchg
mov
jnp
subb
xchg
dec
lret
sbb
cmpsl
cmp
out
jecxz
fimull
lcall
dec
jmp
sbb
push
dec
iret
mov
enter
imul
in
push
jbe
call
stc
pop
sub
dec
int
sarl
sub
xor
xor
mov
and
mov
fcoml
jne
imul
dec
sbb
in
lods
xor
test
jl
jg
fcmovu
and
dec
imul
sbb
push
mov
outsl
or
lods
xchg
inc
fcmovne
aas
pop
sbb
sbb
add
lea
ja
mov
adcb
daa
pusha
push
pop
mov
int3
loope
xchg
negl
push
lock
sarb
adc
pop
aas
xchg
into
fistps
xchg
add
cltd
mov
into
ret
mov
jb
cli
aad
in
std
lret
loop
inc
mov
fwait
cmpb
push
sarl
loopne
push
sbb
je
gs
dec
sbb
add
pop
ss
bound
xchg
es
mov
addr16
mov
sbb
cs
fwait
jnp
repnz
gs
push
arpl
push
ljmp
rorb
imul
xor
mov
and
cmp
adc
xchg
xchg
test
sub
adc
stos
popf
push
dec
xchg
lahf
pusha
adc
push
fadd
shll
outsl
fs
mov
mov
add
fld
jo
insb
pop
sbb
insb
cmpsl
repz
mov
stos
fbld
sbb
jnp
shrl
xchg
cmp
and
in
xchg
xlat
cmpsl
xor
std
mov
popa
test
int3
inc
xor
and
lret
dec
dec
mov
fcompl
mov
dec
xchg
fldt
pop
or
in
mov
lods
lds
mov
stos
sbb
jl
loopne
dec
fstp
sub
cmp
sahf
les
aaa
push
cmc
sbb
pop
push
in
or
loop
clc
dec
xor
loope
rcr
or
cmp
rorb
inc
sub
les
mov
xlat
mov
mov
push
mov
insl
dec
xchg
addl
loope
scas
repz
es
push
sarb
out
pop
aad
scas
pop
int3
cs
mov
sub
daa
out
mov
ss
cmp
push
divb
hlt
ficoms
addr16
adcl
mov
mov
mov
pop
push
mov
xlat
stc
lock
imul
xchg
add
sub
sbb
roll
fst
clc
dec
inc
push
out
pop
inc
or
leave
xor
and
lea
jb
and
dec
mov
cmp
inc
xor
ss
push
sub
jne
dec
popa
jecxz
outsb
sbb
outsl
xor
mov
xchg
mov
add
xor
sub
mov
inc
jge
das
push
push
pop
xor
adc
ds
je
xor
inc
inc
stc
push
ljmp
repnz
jge
data16
fwait
sbb
shrb
adc
pop
sub
sbb
push
pushf
mov
pop
loopne
out
dec
cwtl
jle
scas
loopne
push
sbb
test
xor
mov
sbb
mov
movsb
push
scas
jns
std
or
sbb
lret
fcoms
in
mov
sbb
pop
inc
jo
loope
dec
imul
dec
jno
leave
shlb
in
mov
sbb
pop
cltd
fimuls
inc
std
je
and
mov
sbb
push
fistpll
aas
dec
in
mov
stos
inc
loope
test
ret
fcompl
or
jle
and
xchg
rcr
mov
inc
sub
cmpl
cmp
xchg
push
or
or
shr
inc
pop
shl
add
fcomps
mov
shrl
push
insb
ja
insb
sbb
push
lret
jp
hlt
jb
rorl
mov
xchg
dec
pop
psrld
mov
mov
mov
push
pop
je
pop
ret
sbb
sbb
jmp
pop
pushf
xor
jae
sbb
cwtl
and
scas
cmp
sbb
inc
xor
lret
xor
pop
pusha
aas
inc
out
nop
int
sar
fwait
and
test
ja
or
hlt
pop
cs
mov
clc
push
xchg
sbb
loopne
ret
xchg
gs
mov
xorl
mov
xchg
xor
test
repz
mov
daa
nop
insb
test
or
stos
jno
xor
loope
mov
and
stc
xchg
enter
fs
mov
in
xor
mov
mov
loopne
push
fisttps
push
cmp
pushf
mov
adc
sbb
arpl
mov
int
ret
dec
cmp
cwtl
sub
cmpsb
mov
jg
popf
ss
ds
lret
ds
mov
mov
xchg
dec
loop
xchg
xor
add
gs
cld
insb
lret
sbb
lahf
mov
xor
dec
iret
push
adc
pop
xchg
jmp
inc
arpl
aaa
pop
ljmp
and
mov
and
test
leave
or
mov
stc
jge
pop
rorb
mov
and
divb
xor
mov
lret
sbb
faddl
inc
scas
insl
insb
mov
out
cli
lret
nop
mov
int3
pop
ror
cld
adcl
insb
sbb
mov
out
pop
fsub
inc
sub
lret
outsl
sbb
mov
popa
std
xchg
gs
xor
adc
push
adc
enter
fimuls
xor
test
imul
xlat
std
dec
rorl
xchg
int3
xchg
repz
mov
test
mov
int3
aaa
arpl
mov
roll
mov
sbb
nop
insl
sbb
or
in
push
dec
in
dec
jne
adc
inc
inc
hlt
fidivrl
mov
gs
xchg
sarb
mov
sbb
push
lods
mov
sbb
hlt
sti
jp
sbb
pop
ds
mov
push
rcrl
inc
nop
mov
mov
lods
mov
data16
call
loopne
pop
rorb
das
repz
iret
sbb
daa
fsubr
hlt
fsts
cmp
fcompl
sub
nop
or
jle
out
adc
ja
sbb
pop
cltd
stc
cmpl
sarl
jbe
fld
repnz
or
pop
mov
adc
jno
stos
out
mov
adc
imul
dec
enter
pop
shl
sbb
mov
cmp
loop
xchg
mov
jnp
and
mov
lret
jp
cld
pop
sbb
xchg
sbb
hlt
jmp
cmp
loop
aam
pusha
mov
add
jle
rclb
int3
bound
dec
xor
or
int3
push
shl
jbe
out
fisttps
mov
xchg
jb
pusha
dec
fdivs
loopne
adc
sbb
adc
fistl
shll
push
add
arpl
or
inc
or
int
ja
dec
cltd
xor
sti
hlt
fsubrs
sbb
out
aam
lds
mov
sbb
sub
bound
shll
frstor
insb
mov
ljmp
in
and
aam
and
fmull
cli
mov
inc
sti
push
or
cltd
fidivs
dec
cmp
adc
xlat
orb
inc
hlt
mov
push
daa
out
into
mov
cmpsb
cmpsb
add
ret
orl
fmulp
mov
fsubrs
sti
sbb
in
jecxz
sub
mov
leave
mov
fildll
sbb
push
add
xchg
inc
lods
xchg
pop
sub
insl
addb
pop
mov
stc
jmp
sbb
sub
or
xchg
jmp
addl
inc
lods
or
jmp
inc
addb
xorb
jmp
cmp
jnp
je
sbb
fcoml
jmp
stos
popa
fldl
mov
xchg
push
inc
les
mov
test
mov
test
inc
add
in
jne
pop
popa
xor
inc
es
fwait
lea
fisubrl
cmp
fsts
mov
arpl
dec
dec
and
dec
stc
jmp
sbb
ret
sbb
push
call
cmc
stos
xchg
lds
xchg
fisttps
inc
xor
fwait
mov
ret
sbb
mov
inc
xchg
jle
xor
loope
test
xchg
or
sahf
ret
cmp
xchg
xchg
loope
mov
in
mov
ds
add
stos
push
sbb
push
mov
in
jg
les
add
jge
test
dec
imul
jmp
push
imull
cmpsb
in
ds
xchg
or
xchg
repz
mov
notb
xor
jmp
hlt
jne
jae
dec
cmp
sbb
adc
jno
fcomps
mov
sti
sbb
mov
inc
jnp
mov
rcll
out
fsincos
shl
ds
cmp
and
mov
loop
lcall
mov
sbb
push
cmpsb
leave
xor
jns
fs
loop
xor
xchg
std
sbb
and
addr16
pop
hlt
cmp
mov
pushf
insb
dec
sbb
pusha
jp
negl
das
mov
dec
lahf
xchg
ret
dec
lahf
movsb
sbb
aam
imul
mov
repnz
imul
add
stos
sbb
mov
push
leave
pop
push
pop
enter
sub
and
sbb
inc
out
mov
xor
aam
inc
icebp
mov
or
popf
jle
sub
mov
pop
loop
stc
hlt
sbb
ljmp
ret
sti
repz
lock
mulb
je
mov
cmp
dec
xchg
cmp
xchg
scas
push
pop
push
adc
cli
ds
movb
sarl
stc
loope
repz
and
inc
nop
mov
shlb
xor
loope
sbb
pusha
sub
or
out
xchg
ret
nop
mov
cmpps
das
data16
movsb
aas
mov
jo
sub
jmp
mov
fwait
or
xor
fstpt
cli
or
or
loop
pushf
dec
pop
mov
cmp
add
outsl
mov
xor
les
stos
ror
mov
pusha
jge
ret
sbb
pop
cmp
inc
ficompl
jbe
xchg
mov
outsl
ljmp
out
int3
sub
push
sbb
pop
ret
aas
fwait
inc
push
jmp
cmp
dec
fcomps
xor
ljmp
pop
cmp
jge
insl
dec
mov
sbb
mov
pop
dec
into
mov
arpl
push
push
test
loope
bound
jp
sbb
and
lock
and
into
dec
ja
mov
xchg
xlat
sarb
ret
push
jge
sbb
mov
pop
inc
cs
or
push
loopne
jb
fsubrp
jno
jbe
nop
aam
sbb
push
gs
inc
lock
popf
shll
jbe
and
cmp
jle
loope
shlb
lret
stos
push
mov
jp
cs
adc
mov
mov
mov
decb
push
push
insl
lods
ret
vpaddsw
push
test
ficoms
xor
xchg
inc
std
lahf
repz
fimull
lock
pop
scas
clc
xor
mov
movsb
inc
mov
cmc
pop
push
push
jmp
cmp
pop
pop
ret
shl
imul
faddl
dec
mov
xor
lea
jmp
mov
nop
jnp
pop
push
int
cs
idivl
data16
xor
mov
daa
push
in
sbb
lret
inc
ss
jg
push
add
pop
icebp
loop
imul
ljmp
fsubs
mov
xlat
cmpsb
cmp
jecxz
jo
xor
dec
fstl
dec
xor
xchg
mov
sbbb
sbb
add
ljmp
leave
push
jle
cmc
lods
divl
push
xchg
adc
inc
mov
add
test
inc
xor
jo
jae
pop
mov
mov
jmp
stos
mov
sub
inc
push
ss
rcrl
xor
movsb
jo
repnz
cs
or
movl
push
pop
lods
ret
dec
sub
adc
mov
add
test
sub
jle
adc
rorl
enter
in
inc
lea
xchg
inc
xchg
arpl
ret
sahf
dec
cli
mov
sbb
lcall
and
fisubrs
lds
int3
push
inc
and
pop
pop
push
aas
imul
fcomps
mov
lea
jb
mov
sbbb
repnz
stos
and
xchg
xchg
lret
mov
jge
jnp
jge
fldcw
ret
test
sbb
xor
xchg
ljmp
pushf
adc
adc
ds
sbb
cs
aam
cmp
sbb
or
repnz
push
ljmp
jmp
stos
nop
and
int
adc
mov
imul
jle
test
dec
hlt
syscall
push
add
xchg
rclb
xchg
stos
cmp
sahf
xchg
repz
in
add
out
adc
nop
xchg
xchg
rol
inc
dec
or
int
cli
sbb
nop
cmp
cli
jo
lret
sbb
test
mov
das
mov
pop
mov
inc
iret
aas
jno
es
xchg
and
adc
inc
xor
sbb
sbb
sub
pushf
mov
xchg
pusha
cmp
lds
mov
pop
testl
fildll
jno
mov
xchg
pusha
cs
inc
loop
xchg
faddl
mov
xor
sub
loope
and
cli
adc
adcb
xor
lds
sbb
push
outsl
xor
cmpsl
adc
cltd
fdivl
ficomps
inc
pusha
out
add
push
xor
test
and
push
sbb
mov
xchg
negl
push
mov
out
pop
loop
arpl
testl
andb
arpl
xor
std
sti
dec
mov
xchg
ljmp
add
addl
test
sub
cmp
push
dec
gs
inc
sbb
ja
es
pop
pop
sbb
jmp
mov
mov
fldcw
jns
add
shlb
pushf
dec
pop
inc
ds
xchg
cltd
add
arpl
cmpsl
push
rolb
fs
push
les
test
mov
cmp
ljmp
dec
stos
ds
in
sarl
cmp
xchg
xor
aam
push
leave
xchg
scas
cmp
ljmp
bound
mov
pop
xchg
out
popa
arpl
jp
in
cwtl
pusha
gs
ljmp
hlt
dec
inc
xor
repz
xchg
lcall
mov
mov
xchg
xor
cltd
sbb
test
dec
cmp
pushf
out
or
jmp
push
ljmp
push
dec
jmp
jp
pop
xchg
mov
cmp
loopne
fwait
scas
test
out
shrl
aam
xchg
or
shl
dec
mov
mov
out
and
arpl
lret
ja
movsl
inc
sbb
ror
int
or
sub
sub
fdivs
out
stos
adc
or
enter
stc
inc
dec
dec
or
xchg
inc
out
sbb
cmp
jecxz
into
lea
dec
stc
inc
push
bound
out
add
push
nop
loopne
dec
leave
ret
shrl
ljmp
scas
sbb
mov
xchg
jne
and
jl
mov
push
lahf
stc
pusha
sbb
inc
jp
lock
lret
mov
sbb
jg
push
xchg
push
adc
mov
movsb
xor
push
add
jno
rcll
and
cmp
pop
xor
jne
cmc
inc
lretw
cmp
cmp
or
jl
xchg
dec
push
sti
mov
cli
aam
sbb
mov
mov
stos
lock
jb
out
out
aaa
aad
adc
call
pop
dec
into
pop
testl
mov
xor
xchg
mov
cmp
or
adc
test
lret
mov
lds
fdivp
dec
xchg
ja
pusha
test
pop
xor
cmp
mov
push
sub
mov
push
and
push
xor
shrb
sub
push
nop
xor
push
jmp
sbb
fistl
rcr
cmpsb
imul
shlb
das
dec
cli
aam
aas
cmpsb
sub
es
sbb
mov
mov
das
xor
jmp
push
inc
mov
sti
push
push
sbb
mov
or
and
inc
adc
add
scas
rclb
dec
out
sbb
dec
sbbl
mov
mov
ret
pop
call
pop
xor
add
out
pop
std
add
and
scas
rcrl
stc
fldenv
mov
push
fcoms
inc
dec
ret
dec
dec
mov
push
cmp
and
cmp
dec
pop
loopne
cld
cwtl
pop
in
cmp
ja
or
jo
hlt
push
fsubl
mov
push
cmp
scas
hlt
daa
adc
jmp
outsb
insb
mov
mov
and
in
outsl
xor
inc
mov
xor
lret
and
sub
pop
inc
xchg
jne
or
mov
cmp
cmc
movsl
push
lret
jno
mov
lret
pop
jge
lods
fisttpl
in
adc
lret
ret
mov
lret
jp
lahf
rol
and
int
in
sub
jp
aas
iret
mov
out
lahf
xchg
bound
xchg
int3
inc
fimull
hlt
sub
sbb
insb
repnz
fistpl
fstps
or
outsl
les
sbb
mov
loope
dec
dec
xchg
lcall
or
push
mov
fs
pop
or
mov
push
xchg
out
mov
movsb
jbe
and
clc
pop
ljmp
push
repnz
into
or
sbb
les
loopne
pop
pop
loop
jb
mov
xor
xchg
push
dec
or
sbbb
push
xchg
inc
sbb
xor
pop
mov
xchg
arpl
aaa
xor
cmp
or
inc
mov
add
repz
ljmp
and
and
xchg
loopne
fucom
das
adc
pop
fcmovne
xchg
inc
fsts
cmp
mul
mov
xchg
call
js
frstor
or
inc
push
adc
mov
cmpsl
or
inc
ffree
sbb
inc
out
arpl
inc
sub
lock
pop
sbb
dec
pop
aam
adc
mov
call
sbb
add
scas
out
call
or
addr16
fmull
addb
ret
stos
loopne
andl
fiadds
bound
inc
fldt
or
testl
pop
je
ljmp
fwait
int3
push
fsubrl
adc
jo
cmp
fistps
add
in
cmp
adc
loope
les
aad
sbb
add
and
push
jae
jae
mov
mov
das
insb
mov
jecxz
xor
in
call
sbb
ljmp
push
and
or
imul
int
mov
negb
mov
adc
fcmovnbe
arpl
icebp
rclb
pop
cmc
fcoml
mov
xor
dec
add
sbb
stc
sti
insl
jne
aas
lock
pop
xchg
andl
and
jg
test
fiaddl
outsb
loopne
ret
mov
aas
push
rorl
adc
xlat
sbb
push
sahf
inc
inc
sub
lock
lods
xlat
addr16
adc
aas
xorl
jle
popf
lods
imul
lods
sbb
je
leave
enter
addl
cmp
push
out
mov
in
mov
loope
xchg
cs
mov
or
fstpl
fwait
sub
ja
dec
and
icebp
stos
aas
sbb
stc
sbb
js
push
sbb
mov
cmp
cmp
fcomps
and
sub
xchg
cmp
and
jmp
mov
sub
aam
sub
or
fdiv
repnz
push
cs
ret
fnstenv
and
in
inc
sub
repnz
push
mov
call
xchg
rdmsr
nop
jb
mov
js
cmp
je
enter
out
imul
js
ljmp
cli
sbb
mov
out
movsl
pop
mov
nop
lcall
lods
xor
lods
imul
sub
nop
daa
sub
gs
ret
jmp
or
push
pop
pop
dec
stos
jge
fstpl
xchg
adc
pop
sub
dec
cmp
jno
in
sbb
in
xorb
inc
sub
call
push
xchg
f2xm1
sbb
jne
push
dec
push
adc
jl
popf
gs
add
adc
jnp
orb
inc
add
idivb
push
or
push
loopne
cmpsb
jecxz
xor
movsl
jnp
pop
imul
leave
out
add
in
fidivl
pop
cs
test
jbe
sbb
add
inc
push
int
sbb
call
mov
subl
push
repz
icebp
out
sbb
pop
sbb
adc
sbb
xor
ss
in
in
inc
test
cmpsl
mov
cs
lret
scas
gs
jmp
cli
repnz
or
aad
lcall
xchg
xchg
popa
mov
push
das
rcr
lea
inc
mov
pop
shlb
mov
or
adc
dec
jle
or
mov
lret
mov
cmp
add
ret
cmc
inc
and
xor
and
and
inc
cmp
adc
adc
clc
xchg
inc
popf
xchg
and
inc
gs
inc
sahf
sbb
add
fistps
outsb
sbb
dec
adcl
sbb
stc
sahf
out
ret
ret
ficoml
repnz
cmp
and
ss
in
xor
or
or
int
cli
dec
push
daa
shll
fisubs
inc
push
pop
cmpsl
mov
mov
xchg
les
fcoml
inc
push
and
mov
pusha
mov
dec
test
pop
std
rcrl
std
lock
pop
arpl
push
or
inc
out
orl
sbb
adc
decb
xor
int
fdivr
and
aaa
cmpsl
push
arpl
jnp
mov
pop
ljmp
ss
sarl
add
xlat
sub
lret
cli
aam
pop
pop
mov
sbb
pop
orb
dec
sbb
cmpl
push
ljmp
adc
sub
sbb
ljmp
aam
sub
scas
fildll
sbbl
pop
jno
push
jae
jmp
lea
sbb
nop
pop
out
adc
lcall
or
cmp
lret
mov
out
dec
push
xchg
test
fistpl
mov
xor
push
int3
dec
sbb
mov
adc
sti
sub
enter
pop
nop
fucomip
ja
adc
xchg
sbb
leave
loopne
ret
mov
dec
aam
and
out
jle
daa
lock
bnd
mov
out
xchg
push
arpl
push
jae
and
pushf
mov
test
adc
sub
xor
stos
lock
pop
hlt
les
adc
cmp
mov
ljmp
cmpsl
sbb
repz
pushf
popf
out
adc
push
and
lea
in
cmp
xchg
test
test
mov
push
scas
cmpsl
mov
pusha
ljmp
pop
dec
xchg
adc
jnp
jmp
mov
pop
into
mov
fwait
or
and
mov
mov
pop
dec
dec
ss
or
int
sti
and
sbb
inc
xor
or
imul
mov
jno
mov
adc
fimull
leave
or
aad
inc
xor
cwtl
inc
in
lods
push
cs
inc
dec
orb
adc
push
mov
mov
jnp
sub
jae
mov
adc
xchg
jnp,pn
rclb
andl
dec
aaa
or
fiaddl
out
stos
or
add
mov
lret
cwtl
hlt
push
pop
xor
mov
xor
rcl
mov
imul
mov
or
xor
mov
scas
push
push
cs
gs
xor
add
lods
aaa
pop
data16
sub
xchg
test
inc
cltd
xchg
mov
xchg
pop
ss
mov
std
mov
loope
inc
jp
int3
es
mov
xchg
mov
ficompl
sbb
stos
push
jae
pop
jmp
adc
push
mov
shrb
cli
cmc
lock
fildll
std
adc
inc
adc
pusha
popf
xor
dec
lods
sbb
imul
int
mov
popf
fisttpll
and
repz
mov
jp
arpl
test
and
mov
ss
push
rcr
mov
push
pop
stos
sub
jb
pop
fcmovne
pop
int
cmpsl
insb
xchg
push
push
sahf
inc
imul
sub
dec
mov
dec
push
es
insb
adcl
and
call
lret
sub
ds
jo
imul
cmpsl
and
rol
pushl
inc
xchg
mov
clc
dec
jbe
cmp
mov
syscall
stc
adc
mov
ret
mov
adc
mov
cmpsl
mov
stos
int3
imul
test
mov
xchg
add
mov
mov
aam
mov
dec
or
imul
mov
push
lock
mov
lahf
dec
mov
add
mov
jno
pop
ret
addr16
out
cmc
adc
add
sbb
push
jo
pop
push
fmull
nop
je
mov
movsb
pop
and
stc
xchg
insb
push
jecxz
push
fistpl
fisubs
lret
add
mov
repz
lods
addr16
cmp
sahf
roll
lret
loop
mov
faddl
arpl
xchg
mov
imul
or
ja
mov
shrl
jno
bound
in
jmp
call
mov
cmpsl
jns
lds
mov
movsl
int
insb
in
inc
or
icebp
rcrb
shlb
shl
and
inc
cmc
jp
ja
add
outsb
push
sub
cmp
sbb
push
and
push
add
out
into
dec
shlb
ja
cmp
xchg
imul
daa
xor
lea
shr
xor
add
jge
lcall
mov
add
xor
and
cwtl
or
clc
push
ret
loope
les
sub
cmpsl
enter
popa
aam
aas
sub
push
mov
xlat
ret
sbb
mov
cmp
pushf
cli
je
rcr
rcr
mov
ljmp
je
or
jge
pmaxub
xchg
test
sub
xchg
in
pop
stc
in
mov
xor
ss
stos
jno
stos
fistpl
jnp
or
in
jno
add
ret
leave
mov
ret
nop
pop
aas
stos
in
out
insb
pop
mov
inc
leave
fistpl
inc
mov
push
mov
out
ss
orps
fstpl
sti
fimuls
fs
pusha
or
cmp
mov
pop
dec
ficompl
inc
dec
shlb
and
xor
icebp
test
mov
sbb
or
sarl
sbb
je
repnz
test
mov
pusha
mov
mov
mov
mov
out
push
cmpsl
jbe
addr16
sbb
sub
jbe
push
mov
movl
out
mov
sbb
jnp
fs
xchg
lret
lods
sbb
repnz
and
pop
gs
stos
rcrb
pop
pop
mov
sub
rorl
lret
ja
lcall
outsl
xor
xor
dec
sbb
sbb
arpl
mov
jmp
cld
xchg
inc
push
fmulp
xchg
lds
sub
fsub
adc
add
add
jg
fxch
popa
es
fnstenv
or
stos
sub
repnz
cmp
inc
insl
test
and
mov
fcmove
adc
mov
cltd
mov
out
mov
xchg
push
or
out
inc
adc
sbb
stos
jae
inc
repz
xor
xchg
sub
out
outsl
jo
or
insl
repz
xor
fcoml
adc
xchg
and
fwait
dec
fnstcw
push
mov
pop
and
dec
clc
std
faddp
jp
xor
movsb
movsl
or
aad
cli
mov
mov
sbb
repnz
popa
lock
loope
repnz
outsw
push
lret
or
xor
cmp
hlt
fdivr
add
dec
sbb
lods
mov
push
out
ljmp
inc
pop
adc
jno
enter
ss
inc
sbb
sub
mov
push
bnd
fiaddl
arpl
jp
pop
mov
aam
inc
dec
clc
push
enter
push
rol
mov
mov
jo
jecxz
xor
ret
jecxz
sbb
popa
push
xchg
sub
lods
cmpsl
mov
rcll
dec
sbb
cmp
adc
testb
sub
lock
enter
add
or
push
outsb
ret
mov
push
cmp
lret
not
into
inc
out
lds
mov
outsl
addr16
shrl
xor
scas
mov
add
movhps
or
insl
fistpll
imul
xchg
sub
mov
aaa
mov
sbb
shrl
repnz
pop
mov
fwait
mov
movsb
std
inc
pop
scas
andl
lcall
pusha
loop
stos
or
orb
sti
fdivs
xchg
jno
inc
jmp
mov
xchg
repnz
jmp
add
scas
push
das
dec
insb
hlt
jae
cmp
cwtl
jnp
xchg
inc
inc
push
dec
pop
sbb
sub
sbb
movsl
push
xchg
inc
dec
cmp
lret
test
sub
sbb
int
pop
cmp
sbb
scas
int3
cmp
aas
sti
es
ja
pushl
xor
or
pop
sbb
ret
cmc
push
scas
push
clc
pop
jne
dec
ret
sbb
ret
test
test
int
repz
add
sbb
jae
add
inc
sarb
jp
repnz
std
dec
pop
sbb
fildl
push
mov
repz
xor
daa
cmp
ss
aaa
icebp
sbb
cmc
iret
roll
sbb
call
xor
sbb
mov
sbb
xor
test
jnp
dec
mov
lds
xchg
and
mov
jnp
pop
xor
pop
mov
sbb
cmp
or
jmp
pop
cs
addr16
out
mov
packsswb
mov
or
cmp
in
xchg
arpl
mov
mov
into
inc
jmp
mov
sub
and
or
adc
jo
data16
inc
push
push
outsl
roll
and
sets
jle
fcom
fadds
pop
stc
pop
jmp
sub
lea
mov
scas
mov
sub
cli
mov
push
add
pop
push
arpl
mov
inc
loope
sub
add
dec
mov
sar
loopne
mov
arpl
lock
leave
insb
mov
lret
push
scas
lods
inc
sbb
dec
lods
lds
loop
push
ljmp
cli
adc
mov
cs
sbb
les
jno
pop
jle
icebp
push
fbld
orb
mov
data16
inc
add
out
cmp
xlat
jp
xlat
dec
fstl
test
cmp
in
jmp
arpl
sbb
push
dec
icebp
les
push
pop
test
lds
add
xor
imul
rcl
sbb
cltd
mov
es
inc
pop
in
dec
repnz
or
mov
xchg
ret
mov
mov
mov
outsl
xlat
scas
pop
jnp
pop
mov
push
mov
jnp
repz
out
cld
mov
sbb
shl
fwait
out
outsl
xor
pusha
xchg
addl
loop
fstps
sbb
loope
xor
mov
cs
insl
sbb
jmp
push
lods
cmpl
mov
fwait
cmp
shlb
sub
pop
sub
sub
mov
jmp
inc
outsb
sbb
je
mov
lahf
push
sub
push
xor
cmc
dec
xor
in
fstpl
incb
jge
fld1
mov
inc
fdivl
pop
dec
sub
sbb
shll
jp
pop
sbb
dec
add
mov
jb
jge
mov
cmpsb
int3
cmpsb
sbb
in
push
bswap
xchg
mov
sbb
js
mov
andb
push
fisubrs
arpl
outsl
lods
xchg
and
pop
mov
shr
dec
pop
add
repnz
adcb
out
dec
leave
cmpsb
out
data16
lds
ja
mov
mov
or
out
mov
xchg
xorb
rorl
cmc
dec
jo
adc
xchg
testl
cmp
mov
mov
cmpsl
lcall
jl
fcompl
xchg
add
push
mov
or
cltd
cmpb
mov
sbb
jbe
or
ja
pop
sahf
ss
xchg
dec
sub
mov
xor
outsb
daa
andl
fistps
pushf
in
add
dec
adc
cmp
int
in
add
shll
cmp
push
into
jns
dec
mov
insl
mov
jnp
into
inc
cli
sbb
sub
inc
push
test
fidivrl
push
dec
adc
ret
popa
lods
inc
shrl
mov
sbb
mov
fwait
rorb
loop
sbb
cmpsb
jae
sbb
jp
push
mov
mul
and
es
leave
dec
mov
movsl
or
and
cmc
mov
in
stos
lods
inc
dec
xchg
sbb
cmpl
sub
sbb
lret
sbb
repnz
cmp
fldl
mov
push
mov
push
sbb
sbb
jmp
fmull
jnp
jnp
sbb
stos
addl
xor
cmp
mov
cmc
push
test
mov
mov
and
jmp
aas
mov
pusha
int
sbb
sbb
ja
xlat
pop
pop
pop
jmp
and
lcall
testl
mov
jno
pop
dec
imul
adc
inc
dec
cld
pop
jp
cld
div
mov
test
pushf
stos
jne
sbb
sub
ds
push
pop
outsl
rcll
test
and
xchg
outsb
xor
js
mov
and
push
push
loop
push
adc
push
xchg
pop
out
xchg
fsub
fmull
pop
adc
test
xchg
ds
ljmp
pushf
xchg
lds
jl
pop
jecxz
dec
mov
rcrl
mov
fs
int
sbb
inc
xor
inc
pop
mov
ret
adc
push
mov
jg
scas
sbb
xchg
sub
cmc
test
and
mov
mov
xlat
mov
icebp
and
or
out
sub
into
mov
jp
fstpl
cli
adc
or
inc
push
mov
ja
rolb
cmp
popa
sbb
inc
xchg
pop
xor
jle
fwait
and
popa
jge
or
and
lret
sbb
pop
or
inc
mov
in
jg
sbb
cmp
sbb
insb
es
in
mov
pop
sarl
pop
pop
sbb
test
dec
stos
push
add
dec
xchg
outsl
sub
sbb
fsubrs
decb
in
ja
mov
out
lea
je
out
dec
scas
cltd
cmp
movsb
cmp
hlt
fsub
add
and
sbb
cmpsl
cmpsb
cmc
jmp
fsubrl
mov
outsl
pop
notb
cmc
ss
cmc
inc
lret
pusha
cltd
cmpl
sbb
add
outsl
pop
scas
sub
inc
push
dec
ret
push
mov
sub
jge
or
cmp
mov
xchg
dec
lcall
and
sbbb
ffreep
lret
add
faddl
lret
cld
xor
sub
adc
jo
cli
add
push
aas
stos
xlat
iret
push
out
dec
add
adc
lret
mov
and
lret
rcl
jnp
daa
stos
lahf
lret
pusha
mov
repz
pop
rcr
dec
or
cmpsb
inc
add
dec
bound
lret
scas
dec
push
cmp
sub
jne
in
and
mov
je
int
dec
or
inc
lret
adc
jnp
xchg
ror
fwait
xor
loopne
or
addr16
lretw
xor
and
jae
push
sub
int
push
cmpsl
lret
push
cmpsb
add
int3
xor
je
and
adc
aaa
lret
shr
mov
mov
add
es
cmp
scas
idivb
and
imul
cmpsb
rcl
cwtl
movsb
mov
gs
lret
lahf
or
mov
lret
ljmp
or
js
pop
lods
pop
pop
push
dec
mov
rolb
sarl
outsb
xchg
mov
int
mov
lds
add
leave
arpl
and
imulb
repnz
pop
jle
popf
out
lret
dec
xchg
bound
or
inc
lret
mov
push
dec
push
push
insb
xchg
lret
je
dec
popf
dec
lret
shl
add
cmp
pop
int
add
lcall
sbb
add
xor
into
test
shll
pop
jp
inc
aas
push
inc
fldl
dec
cmc
lret
pop
adc
lret
daa
mov
stos
jle
lret
shll
mov
outsb
shrl
push
mov
imul
mov
dec
pop
jg
shll
add
js
sbb
mov
fistpl
cmpsl
inc
sbb
es
rcrb
pop
sti
dec
lret
into
shll
dec
jb
xchg
repz
stos
dec
push
out
lret
sti
fst
rep
pop
adc
pushf
add
cmp
leave
aam
dec
jno
enter
lds
inc
adc
outsb
jae
in
lahf
lret
pop
add
aas
or
in
mov
push
test
pop
sub
add
adc
ficompl
sub
lret
mov
and
mov
push
and
or
cmp
cmp
lret
mov
mov
divb
cmpsb
aad
push
mov
adc
pop
leave
scas
insl
inc
pop
and
push
jmp
xor
pusha
mov
shl
jns
mov
lock
sub
imul
orb
std
push
mov
sbb
mov
imul
push
ja
sbb
lret
clc
rcl
pusha
adc
sbb
fcmove
xchg
jle
pop
xchg
fwait
inc
inc
mov
mov
gs
pop
shll
mov
push
js
adc
inc
insb
scas
mov
mov
lds
push
ja
lea
sub
pop
gs
pop
mov
push
int
iret
fisttps
and
lock
pushf
xchg
cmp
fiadds
mov
mov
sub
fcmovbe
jae
pop
mov
cmp
lcall
cmp
xor
popf
lret
das
or
fmul
ja
outsb
adc
cld
jge
sbb
inc
inc
loope
lock
push
lret
sub
iret
int3
cwtl
adc
or
pop
jl
out
lret
mov
pop
dec
xchg
lret
sub
mov
mov
imul
or
mov
xchg
inc
sub
out
outsl
jge
outsl
mov
dec
shlb
or
ror
pusha
insl
pop
or
imul
lret
cmc
mov
xchg
sbb
daa
cmp
loop
xor
rcl
cli
aaa
loopne
pushf
push
icebp
pop
and
out
fld
mov
imul
xchg
mov
adc
inc
out
lret
adc
lods
ret
icebp
dec
add
mov
lret
adc
int3
add
arpl
stos
sub
xchg
or
repz
inc
loopne
mov
lret
leavew
dec
jp
sub
mov
jno
ds
pop
fwait
rcrl
sbb
lods
mov
inc
pop
pop
mov
mov
sti
std
mov
iret
push
cmpb
push
lret
pop
lret
je
ljmp
lret
aam
shll
xchg
sbb
and
stos
mov
lret
sahf
jne
xchg
xchg
dec
repnz
aad
mov
lret
dec
fisubs
lret
or
pop
dec
lret
fisttpll
mull
adc
xchg
inc
and
sbb
push
mov
fbld
xchg
and
dec
dec
rclb
repnz
jmp
jmp
jae
fdivs
mov
mov
pop
xchg
fists
loope
lret
aaa
and
dec
push
pop
lret
lcall
pop
lret
mulb
jl
lods
cli
or
mov
pop
dec
and
aam
sti
loopne
out
mov
out
add
subl
lret
mov
cmp
xor
sub
add
xor
lret
pop
mov
stc
aaa
repz
sub
sarb
push
inc
rorb
jns
int3
dec
popf
cld
mov
lcall
lds
daa
mov
lret
imul
scas
out
and
mov
dec
pop
jb
adc
test
jge
fst
in
shll
test
push
into
mov
ret
dec
aam
imul
xchg
dec
cmpl
mov
jecxz
scas
leave
lret
imul
add
cmp
push
or
cli
ror
das
xor
lock
inc
gs
ret
lret
jp
inc
xchg
adc
dec
cs
sarl
add
mov
ljmp
sub
sub
and
jns
pushf
mov
lret
xor
sub
push
lret
pop
adc
or
ljmp
fldcw
adc
cmp
lret
leave
test
fcmovbe
xchg
mov
jne
add
mov
mov
loope
sub
dec
lods
lret
aam
aad
je
push
sbb
cmp
xchg
mov
or
mov
out
xchg
xor
in
fcoml
ret
and
lret
adc
outsl
push
icebp
popa
jbe
mov
push
rcrl
insl
imulb
lcall
mov
ret
mov
int
sub
leave
stos
pop
ss
jle
lret
mov
test
xor
and
cmpsl
lret
loope
ds
adc
mov
sub
adc
sbb
lock
push
jg
lret
pusha
or
nop
sub
mov
pop
movsb
outsb
repz
and
sub
jbe
test
lret
scas
pop
lret
push
pop
sbb
lret
mov
and
dec
or
in
in
aad
lcall
jp
sbb
lret
sahf
cld
inc
shll
jmp
stos
bound
lret
js
xchg
aam
out
in
nop
lret
ss
stos
mov
adc
lret
xchg
subl
mov
sbb
and
inc
in
int3
out
jo
rol
bound
dec
sbb
mov
iret
or
ret
mov
push
push
mov
lret
ja
inc
fdivl
sbb
dec
ficomps
mov
adc
insb
lret
mov
mov
cmp
and
add
pop
lret
sub
add
enter
jns
push
xor
fildll
jmp
dec
mov
lret
add
sbb
mov
cmp
xchg
push
dec
jle
and
dec
js
adc
sbb
lret
insl
data16
rcl
mov
mov
divl
fwait
sbb
dec
jae
mov
scas
scas
dec
jns
or
mov
mov
or
int3
sub
jb
addr16
push
cli
fucomip
xchg
add
adc
mov
pop
pop
inc
and
rcll
fwait
inc
mov
lds
stos
bound
xchg
imul
push
movsw
adc
xor
out
loop
adc
add
out
jns
mov
fmul
jne
mov
dec
sarb
cli
aam
jg
xchg
fucom
ficompl
jno
pop
gs
sub
cmp
or
or
movsl
jmp
jmp
and
push
les
jge
into
movl
sub
sbb
pop
push
loope
fnstsw
and
leave
inc
or
xor
and
sbb
loop
mov
xchg
pop
cmp
xchg
push
shl
sarb
imul
pop
cmp
or
mov
nop
dec
or
and
jmp
or
pop
jl
ss
lds
pop
inc
fwait
loopne
out
ss
pop
scas
aas
add
push
daa
push
shll
pop
xchg
popa
popa
ljmp
mov
aas
aas
pop
or
add
sbb
pop
jne
mov
repnz
pop
dec
adc
cmpsl
popa
xchg
rcr
arpl
mov
test
xchg
outsl
dec
inc
enter
cmp
jae
push
pushf
cli
pop
xchg
pop
std
lcall
pop
nop
add
push
push
outsl
pop
in
adc
iret
adc
push
push
int
push
xchg
xorb
push
inc
and
jns
inc
ljmp
sbb
and
add
mov
bound
add
add
sub
cmp
sbb
lret
repnz
popa
adc
rcrl
stc
or
xchg
push
sbb
xor
fdivrs
mov
fisttpl
ret
in
inc
sbb
fbld
mov
aam
dec
lahf
iret
stos
push
repnz
ljmp
xchg
jmp
inc
aad
mov
or
push
data16
shr
popl
pusha
les
les
mov
mov
cli
insb
movsb
pop
int
pop
enter
sbb
ja
pop
mov
out
jecxz
fbld
data16
push
dec
jge
cmp
in
sub
fdiv
sti
xchg
xor
cld
add
shl
mov
mov
jno
je
xor
lret
lds
sub
mov
inc
enter
mov
loope
daa
and
mov
icebp
mov
lret
xchg
pop
das
mov
popf
jecxz
pop
xor
into
cmp
and
push
or
or
xor
pop
hlt
setle
sarb
xor
fildll
push
lea
adc
xchg
add
cmp
dec
cli
je
mov
out
push
lret
push
sbb
pop
mov
std
dec
cltd
insl
js
push
loop
cmp
sbb
inc
cmp
adc
stos
sub
enter
outsb
test
gs
inc
jecxz
ret
xor
inc
sbb
lret
mov
mov
cltd
clc
jbe
mov
jbe
sbb
cmp
addr16
adc
in
push
mov
movsb
mov
sarb
into
xchg
cmpsb
push
imul
dec
sbb
shll
push
popf
cmc
mov
mov
dec
pop
add
cmp
pop
mov
shl
pusha
dec
sub
hlt
outsb
imul
dec
jle
scas
leave
movsl
icebp
in
or
xor
outsl
adc
std
sbb
or
push
sub
sbb
and
test
scas
pusha
push
jbe
push
mov
mov
dec
adc
fsts
add
xor
cmp
inc
insl
dec
pusha
lea
jb
inc
mov
cmp
adc
icebp
sbb
add
pop
pop
push
mov
dec
pop
fs
sbb
mov
mov
aam
sbb
xchg
pop
fcmovnb
fmull
jp
or
mov
pop
dec
cmp
mov
andl
mov
mov
push
leave
adcb
jmp
mov
sti
ss
ja
cmpsb
shrl
fildll
xchg
dec
sbb
dec
mov
fnstsw
in
mov
add
mov
test
sub
fcomps
aas
jo
jae
sahf
imul
ret
icebp
add
arpl
lret
rcrl
aam
into
sar
lea
arpl
sahf
adc
mov
pop
xchg
ret
cmp
int3
ret
test
pop
mov
or
jns
pop
and
push
mov
movb
out
dec
add
mov
xchg
mov
ds
jmp
sbb
sbb
mov
lods
cld
xchg
xor
sbb
xorps
gs
push
adc
mov
clc
call
pop
add
rclb
jle
or
inc
push
sub
jge
mov
out
add
mov
pop
dec
rol
cmc
push
sub
cmp
mov
in
hlt
cli
push
pop
lret
pop
imul
sub
or
arpl
mov
xchg
jmp
add
push
sbb
push
enter
xchg
mov
ret
sbb
push
mov
outsb
pop
adc
xor
mov
int
mov
push
pop
rolb
outsb
aam
inc
shrl
sub
ja
xchg
mov
add
inc
stos
hlt
sti
adc
cld
mov
lods
dec
int3
push
pop
scas
sbb
pop
jecxz
push
stos
stos
add
ror
xor
call
dec
jno
mov
test
mov
shrl
call
je
jno
mov
mov
mov
loop
stc
sbb
out
pushf
loopne
mov
jmp
jmp
cmp
jmp
filds
icebp
xchg
jno
inc
sub
shr
repnz
out
mov
fcompl
in
add
idivl
add
or
add
pop
inc
xchg
and
fstpl
rol
push
xor
and
mov
jp
cmp
jmp
outsb
in
lcall
arpl
inc
mov
ss
js
and
lock
jne
jmp
scas
pop
ja
fldl
push
inc
in
xchg
pop
inc
cmpb
testb
pop
xor
mov
stos
pop
mov
ss
push
fadd
pop
cmpsb
les
jle
sbb
dec
pop
mov
inc
ret
lret
out
sbb
fisubl
jno
lods
inc
repnz
inc
fwait
and
cmp
int3
sbb
jp
test
cmp
shr
shlb
sub
pop
ljmp
sbb
mov
push
je
mov
push
sub
mov
cli
es
jmp
push
push
gs
push
cmp
or
arpl
sbb
and
mov
jg
mov
pop
and
loope
jmp
dec
adc
xchg
sbb
imul
fwait
push
pop
ljmp
cld
sti
xchg
ds
mov
das
out
ja
repz
lret
adc
sbb
sbb
pop
int3
pop
lock
shl
ljmp
cltd
xor
mov
mov
shrl
pop
sub
stos
pop
add
jae
addr16
andl
push
jp
mov
jp
pushl
bound
sub
out
push
add
loope
repnz
xchg
inc
out
pop
pop
xchg
push
cmpsl
or
push
fildll
out
pushf
and
sub
stc
mov
inc
testl
sbb
sbb
shrl
jge
or
adc
push
shll
inc
stos
sub
mov
adc
sbb
mov
add
xchg
adcb
imul
jg
gs
mov
xor
sub
sbb
lds
sahf
and
xchg
xor
in
dec
mov
rolb
rol
aam
or
jge
ret
divl
inc
in
push
int3
aam
or
jle
in
clc
push
repnz
and
xchg
cmpsb
and
sbb
mov
cs
or
jnp
inc
repnz
xlat
ds
jg
aas
mov
rolb
pop
or
fidivl
cmpsl
xchg
mov
xchg
ret
or
popf
dec
pushf
jno
mov
sti
sar
or
mov
mov
pop
cmp
jb
out
jno
lcall
test
sbb
sbb
xor
subb
xchg
or
dec
jp
in
xchg
pop
push
pop
rcl
call
fstps
jae
xchg
dec
cmc
andl
inc
mov
ja
and
movsl
popa
xchg
mov
sbb
ja
xchg
cmp
arpl
ss
sbb
dec
fwait
pop
test
mov
stc
or
xor
jno
cmp
xor
lods
loopne
rolb
inc
incl
jg
movsl
or
mov
adcl
flds
xor
mov
fidivs
insb
mov
sbb
push
sub
jge
jecxz
insl
icebp
jmp
shll
dec
sub
out
repnz
mov
push
mov
nop
add
lds
pop
xchg
in
bound
out
cmp
les
mov
cmpsb
dec
sub
negb
push
xchg
xchg
push
mov
imul
sbb
pop
pusha
imul
adc
ret
popa
outsl
dec
dec
sbb
adc
nop
sbb
or
jae
pop
and
out
dec
ss
mov
stc
jae
jmp
add
xchg
fwait
fs
pop
jl
jle
fnstenv
out
push
push
mov
add
out
cmpsl
mov
adcb
dec
lods
cmp
cmp
mov
xchg
test
mov
adc
mov
ss
cmp
cmc
into
push
lds
jae
imul
inc
cmp
andl
outsb
pop
jecxz
xchg
aam
call
outsb
cs
sbb
push
sub
fcoml
insl
lahf
lea
mov
sub
mov
sbb
or
outsb
fcompl
arpl
sbb
jns
dec
sub
ja
push
add
lods
scas
fwait
rorb
xor
inc
or
sbb
pop
dec
push
rclb
adc
pop
fidivs
or
mov
insl
and
sbb
and
pop
repz
push
push
cmc
aam
cltd
pop
jae
ret
mov
mov
add
xchg
ljmp
mov
xchg
xor
ljmp
mov
fldl
dec
add
cli
movb
mov
divl
xor
inc
push
and
jl
sbb
imul
movsl
jp
jecxz
sbb
std
jae
shlb
and
daa
pusha
lret
pop
ljmp
sub
pop
inc
sar
loope
cmp
inc
adcb
mov
dec
mov
out
fwait
pop
hlt
mov
pop
xor
testb
sbb
push
loopne
out
pop
fdivrl
scas
test
les
cmp
adc
andl
negl
xchg
jl
into
and
cmpb
jecxz
addl
sbb
lret
cli
les
pusha
sub
test
pushw
out
and
adc
xor
lret
pop
adc
stos
lock
outsl
inc
daa
or
sub
inc
lahf
adc
ret
ret
scas
loopne
push
jge
fidivrl
pop
js
loope
sarb
lea
mov
adc
in
loop
sahf
outsb
jmp
into
fsubrs
mov
enter
sbb
mul
xor
cmp
inc
sub
sub
sbb
bound
jo
cmc
movl
int
imul
mov
pushf
mov
outsb
add
sbb
xchg
dec
mov
rep
mov
clc
mov
xchg
icebp
or
sbb
dec
loopne
nop
clc
dec
addr16
lea
push
call
mov
xchg
outsl
stos
lcall
sub
pop
arpl
jge
rclb
adc
xlat
pop
fsubl
jb
imul
ljmp
cmp
int
dec
in
stos
mov
cmp
fidivrs
xchg
cld
cmpsl
or
xchg
enter
lret
sbb
add
and
incb
in
cmp
pop
movsl
add
les
jns
mov
aad
cli
push
sbb
in
das
movsb
repz
bnd
push
xor
lods
ja
out
pop
mov
loope
sbb
mov
push
xor
pushf
cmpsb
push
xor
sbb
sub
incb
add
cli
lds
jmp
xchg
fsubl
inc
clc
sbb
cwtl
stos
sbb
jno
push
mov
adc
dec
adc
pop
lods
test
shlb
lret
xchg
dec
add
sbb
aaa
jb
sbb
movsl
clc
sbb
or
push
aam
jne
daa
dec
mov
push
out
pop
clc
cs
sahf
out
fiaddl
addr16
je
xlat
aaa
add
rcrl
inc
sbb
lods
xchg
mov
mov
cltd
in
add
sbb
cmp
loope
shr
adc
data16
je
add
hlt
cmp
jnp
mov
out
mov
repnz
int3
or
cmp
rcrb
cwtl
sub
ret
push
inc
es
cmp
cmpsl
sbb
xchg
gs
pop
mov
pop
sbb
cmpsb
jo
xchg
gs
js
repz
cld
sub
mov
mov
je
scas
sbb
imul
sbb
fxtract
into
test
in
push
stc
das
mov
dec
sub
fwait
std
ljmp
insl
push
pop
push
push
mov
cmp
mov
fistps
inc
dec
push
movsb
inc
add
fidivrl
test
jns
pop
stos
dec
imul
addr16
cld
cwtl
jle
and
dec
push
push
ret
insl
push
ret
sub
mov
mov
push
mov
inc
out
jge
xchg
ret
inc
dec
push
in
nop
jns
scas
bound
fisubs
mov
mov
shl
in
mov
push
inc
mov
lock
arpl
cltd
insl
pop
cmp
mov
push
pop
add
inc
js
push
push
insl
pminsw
test
dec
xchg
es
shrb
sarb
sbbl
push
fsubs
mov
or
mov
xchg
notl
out
mov
aaa
push
push
dec
shll
scas
xchg
mov
lret
pusha
fdivp
jne
arpl
dec
insl
push
mov
mov
pop
dec
or
inc
fists
fdivl
lret
pop
out
jge
cmp
add
inc
xchg
imul
fdivs
and
repnz
dec
dec
xlat
sbb
lfs
jo
and
and
sbb
les
mov
sub
mov
mov
stos
jbe
lret
sti
mov
dec
ret
inc
and
and
xchg
sub
scas
push
sbb
mov
icebp
cmpl
sbb
and
jno
mov
mov
test
test
xchg
sub
mov
dec
rclb
mov
lcall
dec
or
icebp
out
rorl
aaa
sbb
mull
mov
sub
int
stos
fistpl
adc
sub
xchg
dec
sub
push
arpl
sti
cmp
mov
xor
mov
scas
lods
shll
push
sbb
pop
adc
outsl
and
stos
fwait
cmpsl
loope
mov
inc
or
pop
subl
int3
sbb
fldt
outsl
sbb
sbb
mov
ljmp
add
jl
rcrl
cmp
sbb
movsl
push
pop
jmp
mov
sub
dec
pop
pop
bound
aam
dec
movb
inc
lock
pop
mov
and
loope
fisubrl
mov
push
fs
aas
mov
mov
insb
les
rorb
inc
hlt
call
cmp
loopne
in
rol
rclb
popl
ret
das
pop
cli
and
ret
lds
pop
sbb
leave
push
mov
mov
sbb
pop
ljmp
movsb
or
les
adc
push
cmp
sbb
mov
or
mov
popf
xlat
xor
pop
push
inc
or
push
lahf
cmpsl
mov
pop
aam
lret
push
test
dec
and
push
insb
jp
adc
cmp
dec
jl
sbb
dec
sbb
std
mov
pop
or
add
inc
test
push
or
xchg
adc
mov
ficomps
add
es
cmp
and
es
jae
enter
ja
push
arpl
fsubrs
xor
or
inc
mov
push
mov
ja
andb
scas
mov
jae
scas
addr16
jo
loope
repz
jge
push
xchg
dec
sbbl
xor
ficoml
ret
mov
std
arpl
cli
pop
add
cwtl
notl
mov
gs
lds
lahf
push
xchg
xchg
jae
rcr
lods
cmp
sub
mov
fistps
int3
mov
ret
dec
pop
push
mov
js
xchg
mov
push
mov
sbb
mov
orl
xlat
sbb
shll
jmp
stos
sbb
push
xlat
out
sbb
nop
int3
and
mov
inc
add
dec
lret
mov
test
xor
sbb
lret
int3
xor
ficompl
lock
ret
in
and
mov
dec
call
mov
mov
jl
aas
lret
stos
sbb
repnz
stos
cwtl
mov
jmp
adc
shll
push
imul
outsl
sub
imul
xor
loopne
dec
dec
aam
xchg
lcall
pop
and
pop
sub
je
jne
rcr
fisubl
sbb
faddl
lret
call
cmp
aas
rcrl
ret
into
mov
pop
loop
mov
add
and
sbb
sub
sub
xchg
inc
cmpsb
test
mov
clc
push
inc
pop
and
scas
pushf
mov
sbb
dec
xor
xchg
nop
adcl
pop
shll
insb
jl
call
test
ret
fisttpll
mov
and
daa
mov
aas
ret
cmpsb
sbb
adc
push
das
ljmp
cmp
push
and
push
addr16
cli
push
add
sahf
arpl
fcompl
rcr
push
sub
into
cld
divl
inc
or
jae
ret
pop
arpl
in
push
or
dec
data16
push
loopne
mov
fidivs
nop
mov
stos
cmp
loope
jnp
push
out
cwtl
outsb
outsb
pop
push
and
xchg
cwtl
aas
scas
sti
faddl
es
and
pop
int
test
cs
cli
mov
mov
xchg
jae
icebp
dec
rcll
cmp
je
sbb
stos
popa
fcmovbe
fldt
outsb
addl
cmp
push
iret
mov
dec
xor
jg
mov
ret
int
xor
adc
pop
fcomi
cwtl
add
stos
pop
shr
in
xchg
mov
jno
sub
loopne
mov
aaa
popf
sub
mov
xor
int3
test
test
mov
outsl
sbb
adcb
and
insb
dec
mov
in
out
push
loopne
xor
js
popf
in
push
mov
pop
mov
push
scas
cli
mov
out
xchg
and
adc
inc
sbb
jge
cli
xchg
repnz
and
pop
jmp
testb
mov
ret
out
xchg
or
xchg
mov
dec
mov
lret
mov
add
jp
mov
dec
jl
bound
mov
aas
fucomp
or
jle
sahf
lds
mov
lret
jno
mov
cmpsb
enter
sub
mov
inc
lret
mov
lret
je
mov
stos
add
test
clc
inc
mov
fcomps
pushf
dec
mov
mov
and
cmp
sbb
pusha
out
push
ror
cmpsl
test
pop
ret
mov
loopne
fimuls
into
je
subb
push
lret
jg
xor
aaa
das
fmulp
inc
clc
adc
insb
sbb
and
mov
or
nop
push
pop
dec
mov
push
pop
daa
sub
call
and
sahf
daa
les
ja
push
mov
lret
lahf
mov
sar
lret
mov
test
lret
mov
repnz
lret
jb
sub
testb
sbb
sar
dec
pop
inc
inc
dec
mov
xor
das
aad
push
into
arpl
mov
in
xchg
cmp
dec
rcrb
test
scas
aad
hlt
fidivs
push
or
sub
hlt
push
cmp
cmp
adc
test
mov
cmpsl
push
out
lcall
pop
mov
cs
add
cmp
cwtl
iret
push
lret
push
jmp
mov
xchg
sub
pushf
push
mov
repnz
into
pop
mov
lahf
rcl
xor
setne
lcall
xor
pop
test
scas
mov
adc
imul
int
mov
je
scas
mov
pop
jno
mov
ret
sbb
lret
add
sbb
int
ss
rcl
push
adc
cmp
stc
push
nop
inc
imul
idivb
and
cld
rcll
sbb
jno
lret
cmp
pop
leave
inc
lret
push
jnp
lods
cwtl
test
xor
in
fcomi
loopne
lret
pop
or
adc
fidivs
das
mov
test
nop
bound
add
popa
mov
int
and
mov
dec
and
stos
pushf
lret
xor
pop
popf
add
ljmp
xchg
call
mov
xor
fimuls
xchg
jne
lret
add
popa
mov
outsb
mov
cs
sbb
lods
insb
dec
mov
rclb
leave
dec
mov
out
outsl
lret
xor
mov
cmpsl
addr16
or
daa
cltd
int
xor
and
adc
sub
stos
or
sub
mov
fistpll
mov
xchg
int3
leave
int3
scas
mov
sahf
test
mov
fidivl
int3
jecxz
fxch
mov
les
push
scas
das
fmul
jge
je
jmp
ds
and
sub
mov
and
xlat
icebp
fildll
xor
dec
call
lret
jmp
adc
cmp
dec
mov
jp
sub
pop
int
lea
inc
jns
lret
shll
jmp
test
ljmp
cltd
fcmovbe
and
ja
lret
movsl
push
dec
aam
lret
decb
jbe
jle
pop
adc
sub
imul
sbb
pop
xor
outsb
dec
mov
repnz
lret
jae
lret
dec
sahf
mov
or
and
sub
cmp
sub
lret
pop
stos
adc
outsb
stc
xor
lret
push
mov
mov
iret
loop
testl
mov
pop
xchg
sbb
stc
icebp
loope
ja
rolb
and
ret
lret
mov
push
sub
pop
fs
mov
cmc
pop
pop
mov
cmp
or
rol
pop
hlt
lea
imul
dec
scas
and
lret
or
pop
mov
inc
push
loopne
imul
aam
or
or
lods
cmp
dec
fistpl
xchg
xor
stc
mov
inc
loop
pop
pop
aas
fldl
dec
inc
pop
lret
jle
mov
mov
inc
sbb
pop
mov
mov
lret
push
ror
data16
dec
cltd
lret
subl
push
nop
xor
add
lret
sbb
stos
jp
mov
xchg
or
cmp
cs
enter
jg
orb
mov
jae
xor
add
enter
inc
xchg
es
lret
sti
push
mov
mov
xchg
add
std
push
fists
or
sbbl
movsb
mov
lret
jbe
mov
lahf
lret
and
dec
sbb
dec
inc
loopne
pushf
dec
mov
mov
pop
or
divl
xchg
iret
lds
mov
ss
insb
icebp
lret
addb
fsubrs
lret
mov
mov
lret
or
jo
fildl
push
sub
ret
das
lret
repz
fs
xor
lods
pop
dec
dec
mov
add
sub
pusha
in
bound
mov
sarl
incl
lret
out
mov
dec
aad
loop
call
les
pop
xchg
adc
rep
sub
ss
jg
push
sbb
mov
lods
aaa
lock
lret
repnz
jle
ror
jae
add
jp
xchg
sub
gs
les
dec
movsb
sbb
jbe
lock
sub
lret
or
pop
or
aad
out
lds
jnp
ss
test
inc
mov
pop
inc
and
cmp
test
mov
repz
push
daa
enter
jb
aaa
jnp
push
lret
pop
cmpsb
lcall
std
dec
inc
xchg
pop
jb
pop
lret
insl
dec
jge
cmp
jno,pn
lods
xchg
push
or
xor
lret
neg
nop
mov
inc
mov
and
xchg
push
and
iret
mov
lret
jge
xchg
and
mov
mov
lret
mov
dec
lret
stos
xchg
jg
nop
jb
inc
lret
push
lahf
sbb
scas
or
push
lret
dec
loope
xor
loopne
cmovnp
or
test
xor
dec
leave
pop
mov
mov
lods
lret
pop
int
lds
inc
leave
lret
fs
cmp
xchg
jb
and
iret
stos
outsb
lret
cmp
out
rorl
xchg
lret
and
aad
inc
push
mov
sub
mov
jge
fld
outsb
fistpl
imul
adc
int3
add
cs
jl
lret
mov
push
fmull
gs
shll
cmp
enter
dec
mov
mov
lea
push
enter
cmpsl
add
dec
lret
fidivs
sbb
sub
cmp
pop
mov
cli
jns,pn
dec
dec
jae
sbb
pop
lret
add
adc
leave
ljmpw
stos
pop
mov
xchg
sub
xor
xor
mov
add
lahf
or
lret
mov
inc
lret
cmpsb
scas
sarb
hlt
dec
xor
and
ljmp
or
bound
in
lods
mov
rorb
push
cltd
jo
pushl
or
add
outsl
inc
test
inc
out
loope
and
outsl
cltd
inc
mov
imul
lds
mov
jp
lock
in
pop
sbb
pusha
mov
lret
stos
mov
sub
lret
sahf
incl
sub
mov
jge
outsl
idivb
jge
mov
adc
adcb
bound
adc
jle
ljmp
aas
sbb
inc
je
fs
enter
sbb
lret
jecxz
nop
cmp
clc
gs
sub
mov
push
push
insb
jae
inc
or
nop
in
es
adc
xor
adc
sbb
mov
scas
nop
stos
pop
sbb
in
add
cmpsl
fcomp
hlt
inc
xor
shrl
jmp
add
xor
repz
xor
inc
and
push
push
loope
clc
fbstp
lock
sbb
push
sub
clc
fidivrl
adc
aas
and
push
or
outsb
outsl
jl
test
ja
xchg
out
ljmp
pop
or
pushl
test
stos
sbb
and
sbbb
dec
fcomps
mov
adc
jmp
ljmp
sbb
dec
jns
sub
rorb
imul
test
sbbl
mov
imul
fiadds
push
scas
fimull
mov
dec
adc
mov
xor
mov
out
dec
stc
insl
bt
adc
mull
aas
mov
mov
or
jmp
pushf
mov
mov
addb
hlt
icebp
sbb
addb
shlb
mov
pop
scas
sub
rcr
inc
aaa
sub
jl
jbe
fistpl
out
pop
and
or
fbstp
out
stos
bound
gs
sbb
scas
add
fcom
mov
xor
sbb
cs
sub
ret
pop
cs
aad
sbb
cmc
sbb
ja
ds
lahf
pushf
sahf
sbb
aad
jecxz
jns
mov
dec
sbb
push
lahf
or
mov
mov
inc
pop
and
fs
pop
fldl
clc
sbb
mov
out
mov
xchg
xor
les
test
xor
push
cmp
ficoms
clc
pop
out
dec
popa
pop
loop
adc
xor
mov
xchg
fbstp
push
or
fcomp
inc
cs
mov
sbb
push
mov
sahf
xor
xlat
xor
pusha
jg
jo
xor
jl
mov
sbb
pop
repz
inc
shll
mov
mov
int
movsb
mov
push
sbb
scas
xor
adc
js
shr
inc
mov
stc
ss
pop
pop
subl
cwtl
call
subl
movsb
cltd
jb
es
aaa
repnz
outsl
pop
pop
push
and
dec
rclb
ljmp
sti
mov
bswap
push
orb
xor
pop
fs
cld
mov
das
pushl
mov
jnp
rcll
jne
add
mov
jne
xchg
mov
jbe
outsb
imul
jb
inc
sub
adc
mov
jecxz
pop
jecxz
into
mov
jbe
dec
mov
fsubl
movsb
fdivrl
dec
sbb
adcb
orl
insl
pushl
inc
jecxz
xchg
das
pop
jge
lahf
fnstcw
sub
xchg
lret
jl
subb
mov
hlt
pop
icebp
test
jl
and
ficomps
pusha
mov
push
pop
jp,pt
mov
aas
stc
push
mov
imul
mov
jecxz
hlt
das
repnz
jns
inc
scas
incb
outsb
rcrl
cmpsb
xchg
pop
shrb
cmp
pop
enter
and
cli
sbbl
mov
addr16
pop
sbb
dec
ret
xchg
fidivrl
data16
adc
add
sahf
loope
lret
xor
outsb
scas
repnz
ljmp
outsl
loopne
es
shufps
inc
lock
mov
xor
adc
int
lret
test
mov
cmp
test
fsqrt
lock
push
push
adc
adcl
mov
stos
adc
lods
aaa
movl
roll
pop
ja
hlt
xchg
leave
cmp
mov
movsl
cmp
loopne
out
jp
sub
or
sbb
fcomps
push
aas
inc
and
or
sub
pop
mov
sti
inc
imul
fisttpll
cwtl
fstpl
dec
jle
dec
aad
lods
loope
sub
iret
aam
and
int
lock
orw
inc
lcall
xchg
leave
and
mov
pop
jns
pop
mov
and
and
lret
add
mov
nop
mov
enter
std
jl
rol
addr16
lcall
shll
mov
push
dec
shl
inc
mov
orl
sbb
push
dec
sbb
or
jp
rcrb
inc
xlat
cltd
pop
mov
xchg
cmp
pop
xor
dec
adc
jmp
rclb
cmp
bswap
mov
in
sbb
xchg
loope
seta
scas
fcomp
rcl
sbb
lcall
popl
pop
stos
dec
cwtl
add
xchg
fldenv
and
push
sub
into
hlt
loop
test
and
cmp
xchg
fsub
xchg
mov
jg
aaa
repnz
jl
mov
imul
xchg
aas
es
dec
sbb
mov
int
in
aam
and
xchg
xor
sbb
sti
sbb
xor
loop
fisttpll
bound
add
pop
sbb
xor
push
sbb
cmp
repz
sub
sbb
out
insl
mov
push
sub
mov
lds
test
jbe
icebp
out
jnp
ret
movsl
inc
adc
sbb
movsb
das
hlt
sub
inc
dec
arpl
jle
shll
jno
cmc
push
pop
pop
jb
sbb
lret
xor
notl
mov
fmull
fidivrs
mov
repz
shl
pop
fwait
pop
int3
and
lods
dec
mov
les
jmp
mov
sbb
or
outsl
imul
inc
sbb
mov
outsl
cmp
lock
mov
xchg
inc
fucomip
inc
jb
sbb
int
fstp
xchg
outsb
lds
add
add
xor
fstpl
lret
push
gs
fcmovu
je
mov
dec
pop
popa
aas
push
outsl
mov
mov
xorl
and
aam
or
lea
push
call
dec
repnz
sbb
popa
dec
push
sbb
sub
pop
jge
out
rorb
jnp
pop
sub
jmp
dec
in
popf
pop
aad
cmc
mov
xchg
lcall
lods
outsb
mov
scas
mov
lods
lock
sbb
sbb
mov
xchg
cmp
xchg
rorl
insl
dec
lock
stos
jno
mov
pusha
push
mov
jge
xchg
or
sbb
cmpsb
rcr
jne
cmp
push
lret
dec
das
in
mov
mov
mov
push
sbb
push
pop
mov
rcll
pop
mov
gs
push
xchg
out
inc
iretw
mov
push
add
adc
je
mov
mov
mov
adc
pop
popa
xor
popf
orl
pop
jge
xor
sbb
daa
xor
mov
movsb
mull
adc
hlt
insb
jae
sbb
jno
xchg
fdivl
xor
push
jp
scas
fsts
sbb
repz
mov
xor
movsb
cmp
in
nop
jae
push
mov
jno
outsb
sarb
scas
mov
sti
push
out
in
fdivl
and
sub
pop
and
and
jns
or
adc
or
sbb
mov
xor
xor
call
fs
push
push
shl
out
cmpsb
int3
mov
cmp
cmc
mov
lret
adc
dec
inc
mov
ret
rcrb
or
addr16
jp
pop
mov
les
sub
cmpsb
leave
pusha
nop
sbb
xchg
sub
sbb
push
loop
ljmp
xor
fs
pop
cmp
mov
dec
jno
lret
icebp
js
lods
mov
stos
jns
fistps
stos
inc
mov
xor
or
stos
imul
cmp
pop
jno
data16
sbb
jne
arpl
loope
test
out
cmpsl
inc
fmul
xchg
sbb
sub
sti
push
sbb
pop
mov
push
jno
pop
mov
mov
aam
xchg
push
xor
lock
fmull
add
mov
fbstp
arpl
pop
lods
ja
cmpsb
xchg
and
into
sbb
mov
dec
sbb
jo
lret
pusha
stos
sti
mov
or
mov
lods
sbb
clc
cld
inc
out
repz
in
push
mov
cmp
sbb
dec
fistpl
call
lds
pop
jo
fildll
add
pop
fidivl
mov
in
rcrl
ror
jbe
xorl
insb
inc
jg
out
mov
sbb
data16
gs
roll
xor
out
and
or
fnstcw
sti
imul
push
cmc
add
ss
inc
out
mov
adc
push
in
mov
fndisi(8087
or
adc
stos
and
sbb
rcll
mov
jno
xor
movsb
imull
dec
xor
add
out
mov
sbb
or
test
leave
push
xchg
cmp
inc
mov
jbe
jmp
mov
shl
jge
orl
pop
or
shl
shr
fwait
pop
out
out
xorb
push
adc
enter
ss
cmp
ret
push
mov
loopne
sbb
into
loopne
out
jl
mov
xchg
pop
cmp
rcrl
jecxz
push
push
pop
int
sbb
ffree
shll
inc
push
std
or
sbb
pop
dec
cmp
ljmp
fmulp
loopne
mov
fwait
loopne
xchg
notb
loop
xor
lock
loopne
stc
add
pop
pop
data16
in
mov
push
jbe
sar
dec
rorl
out
or
xchg
push
repnz
or
jge
addr16
xor
or
push
repnz
bound
sbb
sarb
xor
ret
dec
mov
adc
cmpsb
dec
stc
cmpsl
pop
mov
repz
fsubrl
add
adc
push
xchg
or
je
dec
sti
pop
push
xlat
bound
out
jo
cmp
cld
stc
addr16
pop
mov
mov
mov
inc
cs
fdivr
das
popa
ds
out
adc
mov
mov
jl
push
fsubrl
lret
cli
cmp
fdivr
imul
jo
jbe
inc
inc
aad
in
jle
stos
out
out
ljmp
scas
stos
mov
jnp
lahf
push
push
add
sub
sbb
movsb
adc
cmovb
negb
pushf
pop
pop
mov
jg
jmp
aas
movsb
mov
fcoml
std
xor
movsb
pop
lcall
fisttpl
out
int
push
mov
das
repnz
movsl
movb
fnstenv
fdivrl
dec
push
jne
loope
sbb
test
push
pop
loop
ljmp
aad
xlat
call
aad
test
jmp
add
je
pushf
mov
fnstenv
loope
repnz
push
sti
iret
arpl
imul
push
repz
nop
xor
les
lock
mov
push
mov
rcl
cld
dec
sbb
ss
jae
aam
es
mov
movsb
add
xor
xchg
and
sbb
cmpsl
jecxz
xor
enter
add
sbb
cmp
shr
shll
out
stc
jo
icebp
lods
or
mov
stos
cmpsl
mov
mov
lock
popa
ljmp
cmp
add
ljmp
push
push
pop
mov
pushf
out
pop
divb
add
push
push
movsb
js
inc
add
push
sub
pop
mov
jecxz
push
mov
inc
jp
enter
arpl
out
or
or
xchg
sub
xorl
sahf
dec
out
mov
mov
push
add
fistl
or
pop
mov
pop
hlt
pop
or
push
and
sbb
mov
aaa
pusha
fldenv
das
hlt
das
lret
shl
cltd
jns
jge
or
lods
pop
sub
lret
inc
lock
pop
mov
dec
push
push
mov
sbb
imul
mov
mov
loope
imul
cmpb
dec
or
cmp
lret
dec
xor
cltd
cs
mov
pop
cltd
adc
outsl
push
enter
imul
movsl
fisubrl
lods
ret
cs
xchg
mov
xor
repnz
fdivs
cli
xchg
sbb
mov
movsl
and
xchg
mov
fcompl
stos
loop
inc
mov
xchg
xor
sub
mov
popa
jb
imul
orl
hlt
xlat
mov
sub
mov
ljmp
das
mov
pusha
loopne
pop
leave
push
inc
rcrb
js
int
jg
ss
pushf
lea
test
cmp
rcl
pushf
jmp
lea
lea
pop
mov
outsl
ret
add
mov
jecxz
out
ljmp
mov
sbb
dec
daa
cmp
jo
sub
in
sbb
cltd
mov
subl
sbbb
push
shrl
inc
subl
xchg
cmc
inc
fs
jae
out
xchg
xorl
push
and
lods
cmpl
rolb
sbb
popf
mov
jmp
sub
rcrl
cmc
sub
jae
mov
adc
call
fcoml
sbb
jbe
ljmp
sbb
cmp
cld
sub
dec
jbe
push
inc
gs
jl
fnstenv
ja
rcll
add
xchg
das
jl
xchg
jno
jmp
jnp
popf
and
push
scas
mov
push
in
fcoms
jecxz
jmp
mov
sbb
popa
int3
xchg
add
cmp
mov
hlt
rcll
test
dec
sbb
lcall
cwtl
xor
call
fstp
fldt
cmc
mov
cmp
int3
xchg
push
lock
mov
push
out
scas
std
inc
cmp
mov
xor
adc
cmp
pop
fsubrp
mov
cmp
es
pop
fsubs
or
jo
cwtl
push
fildl
pop
jae
int
jmp
movsl
in
icebp
jmp
int3
out
jne
iret
push
xor
andl
jmp
rcr
and
sbb
ret
mov
dec
hlt
sub
xchg
mov
inc
lea
insb
mov
jge
ljmp
ss
cmp
test
rol
fisubl
ret
ss
stos
dec
pop
jnp
push
push
or
scas
fwait
jmp
cmp
sub
xchg
mov
xor
or
iret
repz
adc
sbbl
aam
in
repnz
or
mov
pop
loopne
ljmp
lock
push
lcall
dec
mov
jge
cmpsb
outsl
imul
sub
push
mov
movsl
mov
mov
and
xorl
lcall
or
imul
dec
pop
push
mov
cmp
adc
popa
rcrb
fldenv
mov
mov
fs
sbb
rcl
cs
mov
sub
stos
cmp
lret
mov
sarl
cmp
sarl
dec
push
xor
daa
sbb
ljmp
sbb
les
dec
jb
fs
lahf
pop
sbb
cmp
add
lds
mov
dec
mov
shrb
xlat
in
cmp
push
mov
repnz
test
jge
je
idiv
sbb
stos
add
cld
jne
inc
xor
jle
cmp
aam
or
bound
adc
and
pop
or
cmpsb
mov
fiadds
jecxz
cltd
xchg
mov
sbb
mov
in
mov
and
loop
mov
jg
clc
xchg
push
scas
xor
outsb
inc
fsub
and
scas
ret
jg
lea
mov
lea
or
jg
lds
subb
insl
and
jecxz
mov
faddl
cmpsb
pop
fst
and
adc
and
mov
mov
jmp
rorl
ffree
insb
sbb
aaa
or
mov
sub
movsl
or
mov
mov
xchg
add
sbb
out
les
dec
sub
xor
dec
pop
inc
rcrl
hlt
lock
int
xor
adc
xchg
dec
and
inc
inc
les
xor
test
or
addl
pop
cmp
hlt
dec
adc
out
movsb
sub
dec
cmp
daa
addb
enter
test
sbb
push
pusha
pop
mov
mov
aam
sbb
sbb
cmp
cs
mov
mov
jg
mov
lcall
ficompl
mov
outsl
push
cltd
in
jecxz
sti
fldt
mov
stc
ret
xor
lahf
cmc
mov
loopne
nop
pop
test
jno
mov
push
ljmp
pop
pop
dec
jmp
popf
or
and
sub
or
shll
int3
aam
movsb
xlat
adc
cmpsb
cmp
lret
mov
pop
fidivs
xchg
sbb
hlt
inc
mov
lcall
add
mov
nop
push
jne
pop
cmp
arpl
sbb
fbld
loope
dec
add
pop
xor
aas
repz
sbb
xchg
mov
jae
adc
xchg
xor
rclb
jg
xchg
inc
ret
mov
inc
stc
lcall
sub
xor
jns
inc
jl
test
cmp
test
fsts
inc
rcrl
inc
mov
iret
notl
test
inc
cmc
and
fwait
xchg
bound
cli
mov
push
xor
mov
xchg
ja
dec
pop
sbb
cmp
das
mov
fdivs
add
or
inc
enter
mov
sub
dec
shr
add
lods
cmc
and
pusha
add
adc
loop
xor
push
lret
sbb
pop
inc
xlat
insl
arpl
std
cs
movsl
pop
lret
sub
int3
ljmp
mov
sub
mov
pop
sti
daa
fstpl
xchg
cmp
ja
push
rcrb
les
movsl
sbb
iret
pop
stos
scas
es
mov
xchg
pop
sub
icebp
repz
stos
xor
sbb
outsb
mov
ror
cli
mov
daa
xor
sub
xor
ret
gs
xchg
rolb
hlt
std
test
sbb
inc
pop
fstps
and
mov
test
cmp
sti
sar
inc
mov
push
in
lahf
shrl
leave
xor
push
push
inc
ljmp
mov
std
pop
mov
scas
jle
hlt
hlt
lds
pop
xchg
or
fmul
cmp
fisttpl
mov
test
shlb
jg
les
in
ss
imull
inc
jne
sbb
dec
pop
and
mov
jns
lds
jge
testb
dec
push
add
mov
scas
mov
sbb
and
dec
mov
jns
lret
fld
ret
outsl
scas
jae
stos
pop
or
loope
lahf
cmp
xchg
ljmp
adc
loope
imul
insl
fsincos
dec
out
push
sbb
dec
push
test
repnz
cmp
ljmp
jo
jbe
loope
mov
repnz
ljmp
movsl
scas
push
cs
xlat
mov
mull
push
push
xchg
add
int3
loopne
mov
sub
mov
mov
pop
sub
out
rorl
adc
subl
and
clc
arpl
mov
push
lcall
jmp
out
sub
or
sti
lret
int
add
pop
inc
dec
push
int
cs
dec
stos
out
push
sub
mov
das
mov
push
mov
insb
jo
cli
push
push
sbb
or
xor
fldl
sub
out
lret
mov
mov
lcall
lds
xchg
cwtl
mov
out
scas
dec
dec
lds
ljmp
mov
sarb
xchg
dec
inc
xchg
or
cmpsb
dec
jnp
mov
push
push
push
mov
pop
cmpsb
push
stos
out
lcall
rcr
jno
push
clc
xchg
mov
xor
xchg
je
js
fisubl
in
in
mov
mov
push
xor
pinsrw
push
add
repnz
xchg
jecxz
ss
sahf
jbe
cmp
mov
js
lcall
jbe
mov
aam
pop
sti
mov
cltd
pop
jecxz
pslld
pop
mov
fmull
bound
fbld
push
fcompl
mov
xchg
ja
mov
iret
out
push
in
inc
sbb
cld
imul
addr16
push
add
inc
addr16
test
dec
xchg
aas
or
pop
shll
push
mov
pop
pop
ret
arpl
ss
lret
insb
xchg
clc
addr16
dec
lock
mov
jg
mov
lods
or
push
xor
xor
mov
pop
adc
sbb
and
jle
jg
xor
aaa
jmp
cmp
xor
sbb
xchg
nop
das
mov
xor
inc
push
jg
hlt
in
add
xor
xor
cmp
jo
jne
lds
inc
fnsave
jo
sub
and
lods
jmp
lods
popa
out
pop
mov
lret
sbb
mov
sbb
add
push
mov
shrl
scas
push
cmp
rol
sub
repnz
shlb
mov
mov
cmp
add
pop
pop
add
jmp
popa
ja
cli
fstps
int
jns
or
jge
stos
inc
sbb
or
xor
loopne
xchg
pop
arpl
or
lcall
je
adc
xor
mov
sbb
dec
lea
mov
mov
sti
inc
mov
mov
movsb
popw
push
or
xchg
jmp
lds
nop
push
adc
sbb
int3
icebp
sbb
pop
test
in
pushf
test
fstl
sub
fwait
xchg
or
or
xor
ss
ret
or
lret
add
mov
xchg
std
ret
sbb
xlat
movsb
fs
ljmp
bound
inc
scas
jb
imul
loop
xchg
mov
mov
jmp
jo
test
sbb
mov
jb
cmp
loopnew
xor
adc
cs
sbb
aad
sbb
push
inc
sbb
daa
inc
dec
fsubrl
sbb
jge
scas
ficomps
faddl
shll
jo
stos
dec
int3
cmp
mov
jecxz
call
cli
stc
shufps
addr16
fcomp
add
sub
icebp
gs
pop
push
int3
ss
mov
scas
sti
nop
rcrb
mov
ficompl
in
stos
sub
les
es
les
cmpsl
sbb
outsl
adcl
shrl
mov
lds
sbb
scas
mov
cmc
dec
fcom
test
dec
push
fistpll
adc
sbb
and
fs
rcr
push
mov
subps
imul
loopne
push
xor
fiadds
movsb
or
sbb
push
sbb
pop
mov
xchg
pop
stc
inc
jno
jo
ret
test
cmp
mov
inc
ret
adc
jle
sbbl
sti
scas
sbb
inc
fcos
ss
adc
aad
xchg
cmp
pop
adc
sbb
ret
mov
repnz
es
sbb
inc
out
or
lock
addl
pop
mov
mov
jno
orb
mov
out
jne
sbb
ss
fwait
scas
mov
inc
sub
and
xor
and
aam
int3
movsl
cmpsl
pop
xchg
fmull
adc
sbb
je
cmp
loopne
loopne
repnz
sbb
sbb
loopnew
fistpl
je
xchg
xchg
in
cltd
andl
dec
shll
shr
mov
jnp
imul
add
cs
xchg
or
fcomp
lcall
and
clc
mov
outsb
or
mov
sub
or
daa
nopl
pop
ljmp
test
sbb
cmp
jle
cld
xchg
ror
repz
scas
push
std
mov
mov
movsl
add
hlt
adc
shll
mov
outsl
iret
lret
mov
movsl
push
leave
add
dec
les
stos
pop
ja
push
mov
jmp
sub
repz
xor
frstor
push
das
mov
mov
mov
inc
fldl
sbb
mov
and
cmp
pop
cmp
gs
fstpl
sbbl
jne
adc
jae
clc
sbb
xor
imul
add
xor
or
inc
adc
imul
into
outsl
lret
movsb
cltd
roll
gs
scas
cmp
xchg
dec
inc
clc
add
add
sub
ret
fstpt
fcmove
es
aam
shll
bnd
fst
frstor
lock
pop
out
jmp
pop
call
ds
xchg
or
sbb
or
sub
mov
push
loopne
cmp
repz
mov
dec
push
mov
mov
das
les
sarb
fs
loope
cmp
jno
inc
int
sbb
ljmp
ret
mov
fistpl
scas
mov
mov
xlat
mov
and
out
aas
mov
das
pusha
adc
sbb
pop
mov
repnz
push
and
leave
sbb
aam
rep
cmc
pop
pop
cli
mov
int
and
jb
lods
and
loope
sbb
ss
and
add
je
cmp
mov
mov
jge
mov
sahf
lret
lcall
pop
into
xor
lds
cmp
sub
sbb
lcall
loopne
pop
mov
fcomp
xor
push
cmc
cmp
inc
daa
add
repnz
sbb
pop
mov
fcoml
xchg
call
cltd
mov
fmull
nop
ljmp
lahf
imul
js
cltd
mov
mov
jb
dec
jmp
push
sahf
jg
arpl
ja
dec
adc
sbb
push
sbb
sbb
and
loope
sbb
jb
mov
repnz
push
mov
inc
xchg
push
aas
inc
std
repz
movsb
sbb
shlb
pop
mov
jnp
xlat
mov
sahf
xchg
arpl
fistpll
add
daa
push
pop
jp
lods
pop
push
mov
dec
fisttpl
stc
call
jne
and
mov
cltd
cmp
pop
pop
dec
rol
repnz
inc
js
insb
jl
push
xor
adc
adc
sbb
stos
es
and
repnz
nop
inc
xor
sbb
je
sbb
cltd
cmp
pop
lcall
loopne
cli
dec
fdivr
pushf
ljmp
cmpsl
push
incb
ret
push
jmp
mov
data16
popa
daa
rclb
xor
push
cld
aaa
fstl
fwait
cmp
sti
es
fstpl
test
fucomi
xor
sub
out
aam
and
jmp
or
call
leave
mov
pop
in
popf
dec
lret
repnz
push
jl
mov
and
mov
add
inc
fimuls
jmp
cld
cmp
sbb
divb
jns
mov
sbb
cs
inc
aam
sbb
dec
ja
insl
lods
popf
jmp
fnstcw
mov
and
fidivl
push
roll
popa
sbb
inc
cltd
lret
jns
lds
les
icebp
ret
adc
imul
pop
mov
sbb
mov
pop
xchg
cmp
jae
pop
xchg
adc
push
imul
mov
dec
loope
imul
xchg
dec
mov
repz
aas
xchg
pop
addr16
pop
gs
jnp
sar
mov
insl
mov
mov
movsb
xchg
xor
xchg
xor
mov
inc
and
inc
aas
leave
sbb
sbb
test
xor
hlt
mov
sbb
popf
push
stos
adc
imul
stos
jno
daa
push
inc
mov
sti
outsl
rcrl
fbstp
aam
fnstenv
aaa
jp
int3
out
in
adc
ss
sub
fldt
xor
rorl
into
test
adc
mov
add
push
roll
sbb
aas
mov
test
imul
addb
testb
popl
es
jnp
pushf
fistpl
mov
scas
subl
mov
subl
cmp
sahf
loope
stos
rcr
imul
inc
pop
testb
sbb
rcl
stos
mov
fdiv
add
inc
ja
mov
lock
cmp
out
add
sbb
mov
mov
pop
outsb
insb
and
dec
sahf
xchg
sbb
inc
insl
addr16
lret
sbb
out
in
sbb
cwtl
out
loopne
outsl
sbb
insb
mov
mov
cmp
fimull
in
enter
and
sbb
shlb
pop
call
fadds
sti
and
sbb
imul
jno
js
cmp
jecxz
jp
sbb
out
lea
test
int3
fistpl
dec
scas
leave
in
es
fs
sbb
gs
imul
mov
push
mov
gs
out
dec
and
ficoml
mov
xchg
or
xchg
mov
jmp
divl
pop
movsb
and
xchg
xchg
pop
mov
dec
mov
and
sub
dec
dec
lret
lods
pop
mov
mov
outsb
add
aas
xchg
imul
loop
out
ret
jp
inc
outsl
push
inc
xor
jne
pop
add
jl
xor
sub
or
cwtl
inc
push
repnz
fsubrl
lret
movsb
pop
mov
loopne
push
leave
mov
ljmp
jnp
xchg
loopne
insl
sub
cmc
pop
dec
push
sbb
fistl
xchg
fcmovu
repnz
dec
sbb
jmp
out
pop
mov
xchg
cld
addr16
sbb
ficompl
imul
mov
int
dec
adc
sbb
mov
xchg
sti
fs
cmp
stos
xchg
fldcw
push
dec
arpl
and
popf
jbe
inc
mov
xchg
imul
jbe
das
dec
aam
push
push
or
mov
std
in
jo
loopne
jbe
loop
cwtl
jp
sub
mov
inc
movsb
pop
jns
jno
dec
out
inc
xor
xor
or
lea
das
adc
test
int3
pop
pop
loopne
jno
inc
inc
sub
gs
inc
and
or
mov
ret
shr
inc
inc
sub
leave
add
mov
cli
xor
pushw
ss
das
aaa
lret
inc
aaa
lahf
push
jmp
sub
sbb
mov
call
push
out
hlt
fldl
and
xchg
pop
ljmp
call
mov
lds
jle
pop
mov
mov
xor
out
or
in
mov
test
dec
cmp
stos
movsl
cs
sbb
mov
dec
add
xchg
lcall
mov
lret
jp
or
dec
jne
pop
repz
inc
pop
dec
and
cli
lret
jecxz
add
sub
adc
cld
fildl
aad
fmull
inc
dec
dec
mov
adc
xchg
inc
lret
adc
pop
cmp
jle
mov
inc
lods
into
out
or
loop
inc
arpl
lods
cmp
mov
inc
lret
mov
lret
mov
jp
push
mov
pusha
push
out
mov
mov
lret
jns
fwait
shrb
sahf
lret
jmp
adc
test
fstps
mov
test
mov
and
push
dec
pop
jp
or
lret
jbe
cmpsb
jl
mov
cs
mov
test
push
cmp
stos
rclb
add
addr16
and
xchg
mov
xor
fwait
dec
cmp
and
jmp
es
pushf
mov
or
pop
lret
or
movsl
adc
and
out
int3
mov
or
sbb
rcll
pop
jns
popf
fisubrl
or
jp
adc
ret
pop
roll
ljmp
jae
outsl
scas
lret
loop
xchg
dec
xchg
cwtl
cmc
popf
lret
jmp
jge
or
push
lret
sub
lret
cmp
mov
jae
roll
push
lret
adc
aaa
add
shl
js
lret
sbb
cmp
scas
xchg
sbbl
jb
ret
adc
in
lret
xchg
dec
insl
or
aas
jl
imul
fisubrs
inc
sbb
test
mov
and
movsb
outsb
outsb
adc
xchg
std
fs
jmp
dec
bound
popa
sub
cmpl
imul
cmpb
jmp
test
daa
dec
leave
fmull
insb
ficompl
cmp
add
lods
test
loop
sbb
and
sub
sbb
or
sbb
xor
in
cltd
addl
lock
mov
cmpsl
mov
sbb
cmp
push
hlt
push
loopne
fdivr
adc
int3
jns
ja
inc
popf
pop
lret
and
sbb
dec
adc
into
sahf
inc
push
add
das
xchg
cwtl
xchg
ret
popa
test
mov
and
fcomps
fldl
sahf
mov
mov
cs
xor
test
cwtl
test
ss
adc
and
ret
inc
mov
ret
int
faddl
adc
fisttpll
cmp
and
into
sbb
inc
push
leave
repnz
sbb
repnz
ljmp
dec
adc
stos
aam
jnp
xlat
es
dec
ljmp
xor
les
sahf
cwtl
cmpsl
jbe
inc
mov
sti
lds
mov
ficoms
repnz
lods
xor
inc
out
pop
pop
mov
sub
lret
pop
nop
adc
repnz
cld
out
loope
mov
add
dec
lret
mov
cmp
icebp
or
dec
adc
and
ja
ret
lret
mov
cli
clc
ds
inc
ret
hlt
ljmp
xlat
add
aas
fimuls
dec
mov
add
pop
mov
in
fldenv
mov
mov
xor
jl
inc
bnd
hlt
pop
mov
ss
lcall
jmp
lds
rolb
dec
sub
out
in
push
rolb
mov
xor
or
sbb
adc
decl
rol
insl
sbb
mov
je
mov
insl
mov
cmp
xchg
fstpl
dec
xor
out
or
ja
xchg
mov
repnz
andl
out
xchg
shlb
ja
or
mov
int
es
and
ja
mov
or
sub
fistps
or
popa
mov
push
scas
shlb
loopne
sbb
pop
into
cs
mov
cmp
xchg
rol
and
xor
mov
enter
sbb
loopne
or
sbb
arpl
mov
fisttpl
cmp
nop
push
int3
mov
out
dec
ret
ja
shl
sub
jnp
jmp
pop
jbe
outsb
rcl
das
inc
cmp
insl
mov
mov
dec
outsl
mov
jo
rcrl
dec
mov
ss
sbb
fincstp
insl
jno
xor
iret
clc
sbb
jno
loope
adc
sub
xchg
fwait
mov
test
sbb
or
not
int
jp
fadd
jecxz
sbb
cs
lock
scas
and
mov
repnz
xchg
pop
shll
mov
mov
lods
ljmp
int3
mov
jmp
je
sbb
test
imul
clc
nop
add
push
daa
insb
xor
fnstcw
fcompl
xor
les
fadd
arpl
das
jmp
push
mov
ficomps
lods
pop
jbe
fstl
loopne
dec
cmp
das
in
jno
jbe
cmp
sub
pop
adc
repnz
and
jp
lret
jle
mov
lret
dec
ljmp
cmp
lret
push
aas
push
lock
jns
aaa
ror
jae
sbb
pop
cmpsl
mov
test
ja
and
daa
cmpsb
lret
loop
jne
add
out
mov
sub
shll
test
mov
sarb
addb
insl
insb
aaa
mov
scas
les
pusha
lret
cli
outsb
jle
pop
cs
and
mov
and
push
pop
cmp
lret
pop
bound
push
xor
xlat
xchg
lret
scas
jno
loop
cmp
inc
shrl
jb
adc
xorl
dec
dec
xchg
push
jg
daa
roll
xchg
sub
or
dec
andl
outsb
movsl
or
jmp
dec
lret
int3
add
repz
inc
dec
dec
and
adc
jno
idivl
repz
sub
lret
sbbb
cmp
xchg
mov
or
fmul
add
into
aam
mov
sbb
add
je
jbe
daa
adc
shll
lret
fnstcw
cld
loop
in
mov
lods
roll
dec
add
dec
lret
add
lods
in
pop
ljmp
push
hlt
inc
lret
dec
push
cmp
cmp
cld
jae
jp
jns
pop
fdivrl
mov
aas
mov
dec
pop
sahf
push
and
lret
xor
scas
dec
adc
push
loopne
repnz
lret
arpl
test
insb
or
inc
lret
scas
fcmovb
mov
and
xchg
sti
mov
dec
push
cmpsb
int
fldenv
xor
or
test
lret
push
insb
fs
cmp
sarb
inc
test
fucomp
cs
or
lods
les
xor
jne
out
jns
adc
ljmp
ja
lret
add
fstpt
pop
out
sbb
leave
dec
and
es
jp
int
mov
std
lds
loop
leave
lods
dec
in
xchg
nop
push
repz
rorl
jbe
sti
add
in
popa
shlb
xchg
xor
lret
and
mov
ja
push
and
inc
cmpb
loope
cmp
test
out
popa
test
mov
shl
cmp
cli
mov
mov
mov
lret
rorb
outsb
lahf
xor
cmp
sub
adc
add
jle
mov
decb
jns
sub
lret
push
inc
pop
mov
sub
iret
ss
fadds
mov
xchg
mov
sub
ljmp
loope
inc
push
aaa
xchg
fmull
iret
and
aam
int
sub
sbb
sahf
les
fimull
mov
adc
push
mov
mov
or
pop
leave
or
mov
test
lods
mov
ficompl
xchg
push
mov
push
ret
sbb
mov
inc
push
pop
xchg
mov
pop
mov
lods
aad
sbb
frndint
fsubr
add
cld
mov
leave
cmp
addr16
dec
sub
cli
mov
mov
sbb
jp
dec
jnp
xchg
fnstcw
fstpt
lret
dec
jge
icebp
insl
sbb
popa
xor
jecxz
popa
push
mov
lret
dec
loopne
mov
enter
mov
dec
insb
rol
data16
or
hlt
outsb
in
test
jmp
pop
ret
ret
xchg
std
divl
or
movsl
inc
pop
dec
sub
mov
pop
or
mov
xor
in
mov
std
xchg
add
adc
popa
pop
out
lret
adc
outsl
adc
outsl
dec
mov
cmp
jl
les
stos
es
add
jl
dec
ret
cmc
mov
fwait
mov
jno
ss
cmp
lea
mov
jne
orl
add
and
jns
filds
xor
je
xchg
es
mov
push
sub
repnz
fsts
pop
frstor
or
adc
xchg
push
push
pop
add
rcr
mov
int3
sbb
push
out
xchg
adc
fucom
push
hlt
inc
ss
sahf
pop
dec
mov
outsb
cld
mov
enter
mov
mov
or
mov
jne
mov
in
gs
loope
fadd
mov
sbb
cmp
mov
call
sbb
fsts
mov
repnz
mov
flds
imul
dec
mov
sbb
stos
icebp
lods
xor
movsb
outsl
ss
xor
add
into
ret
jle
push
add
repnz
out
imul
sti
fwait
testb
and
aas
subl
call
lret
push
sti
rcrb
insl
mov
push
sbb
mov
lock
lret
push
popf
sbb
aad
jmp
jmp
xor
repnz
mov
dec
xlat
sbbb
fsubrs
cmpsl
adc
pusha
cld
dec
out
cmp
xor
fcompl
loope
ret
adc
mov
jae
xchg
cmp
push
pop
mov
hlt
xor
jne
mov
lret
or
sbb
mov
and
inc
pop
mov
sbb
les
mov
roll
add
scas
xor
leave
jne
daa
sbb
xchg
sub
imul
notb
rclb
fsub
outsl
fyl2x
shrb
sbb
dec
add
xchg
adc
ja
aam
les
outsb
dec
sbb
sub
mov
xchg
sbb
or
mov
dec
sbb
xchg
les
icebp
mov
std
aaa
sbb
xor
inc
loopne
mov
mov
inc
adc
xchg
stos
add
xor
shl
xorb
cmp
cmp
imul
adc
test
inc
mov
inc
dec
fists
and
fsubrl
in
loope
push
jge
popl
cwtl
rorb
xchg
xlat
insl
pop
push
rep
dec
shll
sbb
lea
dec
add
jnp
pop
xchg
xor
jmp
xchg
enter
mov
stos
div
arpl
inc
ret
push
stos
ret
scas
pop
and
cli
scas
mull
les
dec
cltd
je
push
xor
ret
add
fbstp
mov
sub
pop
lea
xchg
sbb
cmp
outsl
sub
lods
xor
jne
inc
jle
rcrb
les
xor
push
cmpsb
xchg
jl
cmpsl
xor
mov
jae
aam
lock
cmp
sbb
movsb
ret
sbb
inc
xchg
inc
sbb
pop
test
jne
iret
and
push
insb
or
clc
pop
sbb
mov
jmp
int
imul
jo
arpl
xor
inc
push
stos
cmp
or
ret
inc
mov
xchg
loope
xlat
aam
fidivl
loopne
repnz
gs
sbb
loope
lahf
ret
repz
sti
dec
dec
jbe
out
decl
pop
aad
gs
adc
test
es
fldl
jo
mov
int3
sbb
mov
inc
pop
mov
imulb
sbb
incl
cwtl
xchg
insl
inc
inc
lock
das
imul
lret
xchg
add
push
jnp
popf
out
filds
gs
add
pop
lret
and
sub
push
not
jne
xchg
faddl
jno
mov
sbb
or
cmp
add
repz
push
sbb
sahf
xor
out
bound
dec
mov
rcrb
js
xchg
repnz
inc
jno
mov
mov
dec
pop
test
out
das
push
lcall
sub
andb
ret
inc
push
xor
movzwl
push
lret
mov
insb
sbbb
xchg
cwtl
ss
pop
sbb
imul
sbb
mov
jno
lcall
lea
xor
ret
jmp
icebp
jno
or
add
push
mov
outsb
mov
sbb
cmpsb
scas
fsubl
das
les
stc
mov
je
fiaddl
imul
jne
mov
cli
pop
int
sbb
scas
mov
xor
stos
imul
test
insb
mov
sbb
jno
stc
add
lds
pop
pop
jmp
dec
pop
test
out
dec
mov
ja
push
adc
cmp
pop
imul
das
dec
lods
out
std
mov
jle
push
pop
xchg
dec
pushf
inc
fcoml
fcoms
mov
not
jo
pop
sbb
pop
repz
frstor
fcomip
cli
ljmp
jp
scas
fcompl
lds
mov
mov
ret
repnz
gs
mov
fucomip
mov
mov
push
add
scas
ficoms
fmuls
sbb
addr16
mov
xor
jo
scas
adc
mov
and
sbb
mov
mov
xor
pop
sbb
mov
cmp
imul
sar
dec
das
sbb
pop
inc
insl
fs
xchg
xchg
mov
xor
push
cmp
pop
inc
add
push
xor
cmp
movsl
shr
dec
sbb
xchg
sub
jns
and
xchg
int3
dec
xor
cld
js
das
fildll
sub
lds
pop
aaa
mov
mov
test
mov
stc
xchg
daa
data16
and
mov
dec
repnz
push
adc
mov
fstps
std
inc
pop
mov
repnz
sbb
push
inc
lea
out
dec
cmp
adcb
imul
cwtl
addb
fwait
imul
lock
mov
sub
or
xor
jb
lock
adc
adc
test
xchg
xor
jno
popa
xor
and
cmp
mov
subl
xchg
movsb
or
inc
adc
mov
cmpl
aam
rcrl
cmpsl
push
mov
aaa
sarl
lds
mov
call
dec
ds
jns
cmpsl
outsl
gs
ljmp
sbb
out
into
pop
cld
and
mov
sbb
icebp
fcomps
pushf
test
shrb
ljmp
dec
pop
gs
lock
pop
push
dec
in
pop
push
jp
js
lret
ljmp
mov
jns
aaa
xor
imul
call
adc
sbb
adc
loopne
pop
dec
sahf
xchg
arpl
aaa
xchg
mov
pusha
mulb
data16
shll
rcll
xchg
notb
push
jmp
hlt
lahf
fldcw
adc
addb
movq
push
fistps
adc
dec
jae
dec
call
jo
jl
push
pop
fwait
into
popf
add
es
adc
cmpsl
fdivl
and
dec
pusha
cwtl
fadds
xor
pop
mov
sbb
dec
jne
adcb
aam
mov
int
xorb
adc
aam
xor
movsb
daa
imul
je
stos
sarb
aad
pop
ds
shr
dec
sbb
or
push
scas
fsubrl
sbb
ja
xchg
jecxz
sbb
xchg
stos
fadd
sbb
imul
rcrb
add
mov
sbb
pop
and
mov
inc
ret
pushf
faddl
cmc
addb
fs
push
and
inc
mov
add
test
fs
xchg
sub
stos
cmp
dec
jns
add
dec
lret
orb
adc
sub
stc
mov
pop
cmp
test
fdivl
enter
or
imul
inc
xorb
je
jb
push
int3
les
pop
jge
bound
jmp
and
pop
aas
fldenv
sbb
xor
mov
push
insl
sbb
fwait
jno
mov
arpl
mov
scas
push
inc
outsb
inc
or
leave
cmp
pushf
movsb
insl
and
push
or
mov
mov
repz
mov
sbb
pop
xor
dec
roll
stos
in
mov
xchg
and
cmp
xchg
mov
outsl
cmp
or
repz
push
fs
popa
pop
and
push
out
ds
adcb
jnp
out
jb
pop
inc
addl
mov
cmp
jo
sbb
jmp
add
int
leave
imul
inc
jp
loopne
out
xchg
lds
inc
and
fwait
or
sar
out
jecxz
xor
frstor
xchg
xor
dec
mov
sub
das
push
dec
outsb
jnp
negb
dec
xchg
dec
mov
and
pop
dec
mov
das
sarl
inc
and
or
sbb
lret
inc
jp
pop
sbb
out
loop
mov
icebp
lret
xlat
and
imull
ror
call
cli
mov
sbb
stos
stos
mov
or
sbb
fwait
scas
push
inc
iret
cld
and
jmp
jno
repnz
xor
std
jb
sbbb
lret
xchg
iret
mov
fbld
data16
sbb
es
and
jno
int3
dec
mov
or
inc
adc
aam
and
pusha
xchg
push
data16
test
push
out
cmp
popa
xor
sti
mov
push
stos
push
xor
xlat
lods
lret
mov
jg
mov
jle
xchg
add
sbb
dec
scas
jae
mov
pop
xor
inc
xor
cmp
sub
sbb
aaa
inc
dec
shl
or
nop
mov
andl
lret
je
xchg
popf
dec
or
test
clc
inc
inc
sar
sub
dec
call
add
bound
in
add
jb
stos
aas
loop
push
rcl
mov
call
jbe
outsl
mov
mov
rcrl
leave
into
mov
inc
pop
fimull
clc
dec
test
mov
jne
lret
fisubs
test
pop
lret
or
sub
fwait
icebp
stos
pop
clc
leave
mov
das
out
adc
xchg
pop
dec
hlt
mov
mov
repz
xchg
jb
jnp
lret
test
mov
dec
lret
inc
ret
ret
inc
stc
lret
add
push
push
jp
mov
jmp
mov
aas
aad
or
push
xchg
pop
or
insl
cmpsb
pop
sbb
mov
fnsave
int3
push
push
mov
mov
outsl
push
mov
add
fs
dec
mov
iret
lret
int
mov
popa
lret
std
mov
xchg
ffree
cmpsb
xchg
mov
mov
cltd
jg
and
je
iret
jp
add
cmp
cmpsb
pop
mov
lret
jle
mov
xor
push
lret
push
sahf
add
xor
xor
fs
movsb
xchg
lret
mov
sbb
lret
rorl
jg
stos
mov
adc
aaa
cld
or
outsb
pop
arpl
lcall
in
push
iret
jl
inc
cwtl
xor
gs
test
mov
cmp
add
sbb
mov
cmp
int
push
mov
pop
jmp
lret
push
dec
or
cs
xchg
aam
push
dec
stc
out
push
jg
pop
mov
std
imul
or
dec
mov
lock
mov
cmc
mov
jnp
or
or
fadd
aaa
sti
fiaddl
dec
test
jmp
iret
imulb
mov
ret
dec
popf
add
push
lret
and
cmp
je
or
into
repnz
cli
xchg
inc
ror
xlat
fiaddl
cmp
fsubrs
rcr
test
xchg
or
sbb
pop
popa
lret
dec
dec
je
jg
mov
int
xlat
cltd
enter
adc
lret
fucom
imul
xchg
daa
sub
cmp
arpl
stc
hlt
rcr
mov
mov
jle
popf
xchg
cmc
pop
mov
lret
and
icebp
cs
loop
ja
or
bound
sub
test
mov
icebp
mov
push
lret
fimuls
mov
add
stc
gs
dec
scas
mov
loope
push
xchg
cli
mov
add
jl
sbb
aad
sbb
cmp
in
adc
push
cmp
xlat
push
pop
jno
lret
mov
mov
lret
adc
inc
adc
loop
jp
dec
push
lret
fdivrl
call
cld
testl
mov
int3
add
jb
adc
lea
add
cmp
xchg
out
cmp
sub
lods
call
iret
popa
pop
into
mov
fxch
mov
mov
out
sub
fldt
bound
std
int
dec
test
addr16
mov
xchg
xchg
stc
ret
or
cs
jns
loope
cmp
lret
cmp
add
sub
and
xorl
out
push
cmp
jbe
xor
and
or
mov
addr16
lods
mov
or
mov
int
xor
push
jp
ret
mov
pop
ret
int
insl
cmp
cwtl
pop
sub
jo
lret
mov
mov
mov
mov
out
adc
lret
in
cmpsb
mov
lret
sub
cmp
jbe
xor
lock
push
jl
jo
lret
xchg
jae
mov
aad
bound
aas
lret
enter
or
fdivrl
test
pop
fbstp
cmc
inc
dec
lock
push
xchg
lret
add
sbb
aaa
jnp
lcall
or
inc
lret
mov
and
mov
aam
cli
sub
or
je
dec
sbb
test
das
inc
xchg
add
sbb
jnp
sbb
cmc
insb
shlb
inc
fnsave
mov
out
dec
outsl
sbb
xchg
data16
popf
cmp
stc
lret
cmpsb
cmpsl
add
xchg
and
addr16
xlat
dec
pop
repnz
repz
sbb
sub
lret
outsl
out
mov
and
xor
outsb
arpl
jne
scas
mov
xchg
int3
mov
dec
pop
push
fwait
roll
es
outsb
dec
aam
iret
jno
lret
leave
or
inc
mov
xchg
xchg
test
mov
lret
pop
cltd
xchg
jno
lret
jge
movsb
into
cmp
je
repz
leave
cwtl
dec
sbb
xchg
pop
inc
pop
lret
and
mov
fdivrp
sub
enter
add
dec
dec
cld
ret
shrb
lret
sub
out
mov
adc
jns
imul
add
fstpl
iret
repnz
adc
ds
jecxz
popa
shr
push
dec
sar
sti
addb
xchg
pop
add
lret
enter
dec
addr16
push
inc
dec
lea
inc
lret
outsl
insb
fistpll
fisttpll
sub
mov
push
mov
lret
xor
stc
aam
aas
ds
rcrb
push
test
in
cltd
out
xchg
les
pop
pop
dec
mov
and
jmp
cs
popa
rcrb
pop
fcmovnb
push
and
fisubrs
mov
cmp
in
enter
int
sub
jl
jb
fdivrp
iret
push
mov
cmp
pop
hlt
cwtl
cs
and
mov
push
int3
pusha
mov
xchg
push
ud2
pop
movsb
sarl
aam
lret
sti
in
mov
nop
bound
or
dec
lret
aaa
jae
into
sbbb
cmp
pop
out
push
dec
add
mov
fnstsw
sbb
sbb
mov
sbb
inc
pushf
lret
clc
iret
lahf
testl
into
dec
jmp
and
lret
sub
gs
lret
movsl
or
mov
lret
test
cmpsl
ficomps
mov
or
dec
sarl
sbb
addb
add
xchg
lret
lea
loope
or
jnp
mov
mov
adc
sahf
dec
push
int3
test
jecxz
lret
push
pop
xchg
adc
mov
cmpsb
leave
movsb
roll
sub
add
clc
scas
cmc
gs
vpaddq
pop
sbb
dec
fld
iret
outsb
jae
int3
int
sbb
jb
sbb
shll
mov
sub
push
cltd
lds
stc
das
cmp
xor
aad
clc
lret
les
add
dec
jecxz
sub
stc
aad
repz
inc
fwait
lcall
loope
adc
dec
lret
int3
xor
ljmp
cmp
negl
ret
pop
xor
mov
sbb
mov
mov
stos
lret
rol
int
push
cmpsb
mov
push
mov
repz
xchg
mov
ffreep
jnp
clc
js
cmc
stos
pop
imul
ret
and
sub
dec
test
push
lret
cld
leave
sub
test
popf
sbb
hlt
xchg
orb
push
dec
int3
xchg
iret
cmp
inc
ljmp
stos
test
sbb
adc
jle
lret
lret
dec
cmp
sub
test
mov
dec
mov
fimuls
negb
pop
xor
out
push
fxch
insl
sbb
in
jp
daa
xchg
test
jns
icebp
sbb
ljmp
mov
lods
jo
std
es
mov
std
dec
dec
popa
ljmp
sbb
xchg
adc
adc
sub
cmp
sub
test
xchg
lea
fiaddl
aaa
adc
call
test
and
shl
mov
scas
jbe
xchg
and
insb
or
pop
or
xor
stos
xor
cltd
cmp
mov
movsl
mov
fwait
xchg
xchg
gs
mov
lods
je
stos
dec
mov
dec
jno
cs
add
push
stos
xchg
xchg
pusha
aas
inc
int3
dec
into
adc
insl
mov
cli
cld
mov
mov
push
push
xor
stc
adc
xchg
and
arpl
inc
mov
xchg
jecxz
mov
pop
out
pop
sub
xlat
sahf
push
pop
cmpl
or
fstps
dec
xor
roll
ficompl
xor
pop
in
push
fcomi
push
pop
jb
push
add
ja
mov
sbb
inc
lret
sub
sbb
into
scas
push
test
and
sbb
shl
test
pop
pop
sti
jae
addr16
vpacksswb
lods
dec
bound
sbb
mov
cs
shll
xchg
or
or
ret
cmp
jmp
cmp
shlb
lea
fadds
push
pushf
ja
rorl
sbb
and
xor
cmp
sub
and
mov
mov
and
imul
repnz
imul
stos
fdivr
sbb
mov
pop
scas
lret
add
repz
jp
sbb
in
orl
gs
pop
pop
lock
enter
scas
stos
aam
mov
mov
and
or
inc
and
push
xchg
xchg
imul
pop
imul
xchg
sbb
sbb
sub
or
bound
lock
bound
xchg
out
sbb
or
sbb
cmc
adc
xchg
xor
std
xchg
popa
sbb
stos
jae
dec
ret
aam
aad
sub
in
cltd
es
pop
lods
fistps
sub
sbb
test
fsubrs
out
sub
xchg
clc
loopne
cli
psllq
fsubr
loope
push
stos
or
xor
cmp
roll
xchg
jecxz
mov
sbb
dec
out
push
cmc
in
push
dec
fsubs
outsl
mov
test
jb
pop
je
and
cs
xchg
jno
or
mov
shll
mov
outsl
mov
dec
pop
pop
mov
push
fs
sbb
lcall
mov
mov
subl
fistl
adc
push
mov
scas
adc
fs
aam
cmpsl
sbb
popa
ds
pop
fwait
xorl
les
xchg
or
cmp
or
mov
bound
ret
ficoml
cli
repz
loope
imul
not
push
mov
fwait
lds
jg
cmp
test
je
mov
jle
popa
insl
ret
jmp
nop
mov
mov
lret
fnstsw
cmpsl
push
and
fdiv
pop
cmp
loopne
in
mov
and
mov
sbb
inc
xlat
pop
ljmp
inc
xlat
out
jl
insb
js
inc
test
cli
addr16
into
mov
movsl
cmp
and
xchg
cltd
jg
lret
cli
mov
jbe
or
aas
cmpsb
pop
loop
dec
cli
jmp
adc
cmp
pop
push
add
fildl
andb
fcompl
and
jns
aam
mov
scas
addb
fnstenv
repnz
out
xchg
inc
push
jo
daa
fdivl
jp
outsl
pop
dec
pop
imul
cmp
ja
cli
fistps
or
sbb
adc
aaa
jmp
push
sub
add
jge
test
aam
movsb
movb
popf
mov
and
int3
sbb
cld
fdivrl
adc
mov
jecxz
inc
push
cs
push
daa
je
pop
jne
jl
dec
cmpl
cmp
imul
push
in
cmpl
xlat
mov
xchg
arpl
or
jne
cmp
out
xchg
mov
pop
rcrb
pop
ss
cmp
shlb
ja
mov
into
xor
fdivl
dec
push
fiaddl
mov
iret
cltd
cmpb
lds
xchg
dec
in
lret
mull
insb
loope
scas
repz
and
mov
bound
lcall
adc
xor
jl
add
cmp
mov
lahf
test
test
pop
ss
arpl
icebp
cs
pop
cmpsl
mov
fcomp
or
push
enter
int3
ja
sbb
mov
pop
je
cli
xor
arpl
xchg
adc
fstl
mov
xor
sbb
fnstsw
and
sbb
movsb
data16
add
lahf
pop
jecxz
shr
out
sbb
insb
movsb
pop
dec
sbb
frstor
adc
dec
pop
aad
mov
xor
fidivl
sahf
and
call
mov
mov
xchg
mov
xchg
sub
sbb
adc
out
and
inc
mov
sub
sub
decb
mov
loopw
cltd
pop
loope
gs
cwtl
xchg
stos
out
or
jmp
repz
int3
cmc
xor
fmull
mov
lcall
sub
cmc
jmp
repz
push
or
xchg
ret
test
hlt
lahf
dec
mov
ror
jo
cmpsb
push
lret
enter
std
mov
movsb
sub
hlt
bound
call
stc
mov
mov
call
sbb
js
xchg
stos
xchg
mov
cmp
aad
fmul
je
jae
xchg
cmpsb
leave
cmpsl
mov
fwait
or
inc
imul
sbb
ret
sub
dec
lds
sub
mov
lock
enter
mov
xchg
inc
das
pusha
popf
imul
dec
sbb
inc
or
stos
cltd
jmp
loope
jb
jge
mov
cltd
push
ss
cwtl
xor
loope
je
aaa
stos
ret
movsl
scas
pop
or
faddl
adc
mov
out
aad
stos
incb
das
add
and
ror
icebp
add
mov
inc
or
mov
lahf
aas
add
add
lods
fimull
loopne
dec
inc
cmp
jo
ret
int
sub
lret
hlt
and
int
dec
sar
sbb
jae
fsub
clc
pop
incl
xchg
shll
pop
push
push
push
sbb
inc
xor
mov
test
dec
out
fsub
pop
cmp
sub
add
lret
clc
and
lock
push
lret
sahf
pop
sbb
or
insl
adc
mov
cmp
fcomps
mov
pusha
loope
loop
mov
fxch
push
sbb
xchg
pop
fwait
xchg
pop
repnz
add
loope
mov
push
and
cwtl
in
xchg
es
xchg
jecxz
mov
adcb
pop
fstpl
lcall
insl
sbb
ljmp
push
es
cmp
pop
cmp
pop
push
and
cmpl
cld
and
sub
fists
aam
ret
jns,pn
mov
fwait
ljmp
addr16
mov
test
aaa
in
stos
clc
xor
push
xchg
jl
cmpsl
sti
mov
cli
inc
mov
scas
dec
aam
mov
xor
ljmp
insb
test
xor
mov
mov
push
pop
fistpll
xlat
jmp
xchg
rorb
repnz
push
add
cmp
loopne
sti
in
push
dec
sahf
loop
ficoml
xchg
dec
jge
cmova
xchg
xchg
sti
lret
hlt
ds
sub
mov
scas
mov
pop
xor
into
jnp
xchg
stos
push
ficompl
sbbl
das
ret
sub
cmp
rolb
test
push
jb
cmp
xchg
sbb
sub
mov
mov
mov
mov
jge
out
cmpl
mov
cmpsl
pop
frstor
ret
pop
mov
jnp
or
jecxz
xchg
cwtl
test
mov
popa
pusha
xrelease
imul
xchg
fs
add
fmull
and
les
imul
push
lock
rcl
ljmp
push
in
addr16
ja
movsl
outsb
and
sub
adc
sbb
sub
pop
addr16
sub
or
cmpsl
sub
fwait
ja
xchg
lds
xor
push
push
adc
lret
pop
jmp
xchg
insl
icebp
iret
bound
xlat
out
cmc
inc
ss
sbbb
xor
mov
popa
in
pop
xchg
pop
xor
mov
repz
fidivrl
jmp
call
jge
jo
hlt
gs
lret
sbb
fisubs
fscale
and
hlt
push
aas
sbb
pusha
cmpsl
ljmp
ja
mov
mov
ret
das
add
sbb
fsubrp
arpl
loope
xchg
cmp
lret
xor
out
loopne
rcll
arpl
xchg
lods
or
lock
lock
imul
xchg
xchg
pop
cmp
xchg
sbb
repz
jns
mov
repnz
xor
outsb
in
mov
mov
js
leave
aaa
sbb
xchg
or
les
sbb
cmp
jmp
xor
jmp
add
sub
or
push
and
fidivl
sbb
dec
ljmp
jmp
fldt
jnp
ret
loope
add
out
leave
jns
xchg
pushf
sbb
push
sub
lds
xchg
jb
ja
inc
ss
mov
mov
push
es
sbb
das
sbb
cmpsb
dec
jecxz
jne
mov
fwait
push
lcall
push
and
test
int3
lret
pop
aam
fdivs
pop
or
inc
add
adc
cmpsb
fwait
xor
arpl
enter
adc
sub
movsl
data16
insl
gs
mov
inc
dec
loopne
stos
sbb
jecxz
jns
jle
adcb
mov
adc
sbb
ljmp
ret
std
or
sub
fstpt
xchg
inc
loope
es
inc
or
or
roll
fcompl
out
jno
sub
dec
mov
dec
nop
jns
mov
aad
push
insb
sti
rcl
popf
sub
sbb
lret
push
faddl
repnz
mov
imul
fdecstp
adcb
fnstsw
popw
test
push
xlat
mov
filds
std
iret
or
test
test
sbb
and
repz
push
ret
int
ljmp
push
sub
mov
mov
jno
cwtl
or
mov
mov
sbb
cli
aas
lret
push
push
gs
data16
mov
addr16
pop
loop
xor
mov
mov
jecxz
testb
cmpsl
push
xchg
push
enter
adc
add
sarb
push
sti
mov
sbb
mov
in
es
arpl
out
cwtl
mov
sti
or
loope
cmp
mov
push
jmp
int3
popa
mov
mov
loope
test
fdiv
jmp
inc
inc
dec
out
sti
imul
jmp
push
xchg
push
mov
dec
arpl
ljmp
shl
xchg
sbb
pop
inc
xchg
ja
xchg
scas
cmp
fdivr
push
orl
sbb
aaa
ret
inc
sbb
jnp
test
sbb
mov
loope
sub
pop
mov
loop
lock
push
mov
sbb
add
xor
mov
int3
fstpl
icebp
adc
mov
adc
shlb
cltd
in
adc
in
int
jmp
mov
dec
es
push
clc
andl
xor
mov
and
int
insl
fcoml
pushf
add
dec
pop
mulb
sbb
add
xor
pop
nop
out
imul
nop
push
movsb
xchg
rcr
push
dec
nop
ffreep
nop
push
cmp
mov
xchg
add
clc
xor
pop
icebp
mov
cmp
fmulp
loopne
sub
fistpl
les
sub
aad
mov
scas
hlt
mov
xor
push
insl
mov
sub
enter
push
push
sbb
dec
xor
sbb
stos
shlb
mov
ljmp
pop
push
sar
jno
mov
pop
fiaddl
jmp
push
insb
mov
out
ret
test
and
inc
sbb
push
mov
mov
lahf
test
fstpl
icebp
or
fmul
shr
sbb
add
jmp
fdivs
cli
ret
mov
cmpsb
adc
mov
mov
lock
push
inc
add
lcall
ljmp
repz
dec
dec
sbb
sbb
es
xorb
outsb
out
out
movsb
push
fsubs
inc
or
inc
test
call
xchg
outsb
repnz
leave
popa
js
addl
lahf
cmpl
pushf
mov
dec
and
in
jl
shr
movsl
enter
xchg
lock
movsb
sub
fsubrs
lods
ja
dec
mov
mov
xchg
xor
lock
adc
dec
outsb
scas
mov
or
xor
sahf
into
subb
cmp
pop
mov
dec
out
ror
ss
loop
fldenv
pop
jmp
or
addl
mov
xchg
push
outsl
mov
fldt
mov
loop
xchg
nop
xor
mov
je
cmp
dec
mov
push
daa
jnp
cmp
fisttpl
mov
push
jge
test
xchg
popa
push
insb
data16
in
out
push
incb
shlb
fcomi
xchg
call
cs
or
lds
repz
sbb
mov
repnz
lods
dec
cmp
and
push
sbb
and
push
fsts
mov
dec
cmpsb
sarl
pop
mov
pop
repnz
sbb
into
push
cmp
fcoms
inc
pusha
in
ficoms
fstps
fidivs
xchg
sbb
or
bound
mov
je
xor
mov
fmulp
int3
test
cmp
lock
popa
dec
mov
cmp
or
shlb
mov
fwait
mov
gs
inc
or
cltd
fstp
addl
aaa
rcrl
icebp
xor
jmp
jo
jmp
mov
sub
shr
rcrl
loope
cmp
shrb
movl
enter
sbb
inc
cmpsb
sbb
push
sub
rcl
pop
xchg
fs
mov
loopne
out
gs
jge
cs
sbb
and
sub
scas
inc
in
jnp
fidivrs
fisttpll
ret
inc
xchg
push
outsb
ljmp
cwtl
ljmp
cmp
fadd
insl
mov
mov
sbb
das
jne
ja
dec
dec
fwait
sbb
stos
outsb
mov
dec
enter
popf
shlb
inc
and
sbb
mov
mov
adc
add
xchg
mov
sbb
lahf
cmp
loope
js
imul
sub
inc
mov
pop
hlt
sbb
test
or
test
pop
xor
pop
lret
sub
fwait
adc
ret
ljmp
dec
xchg
ljmp
adc
inc
mov
sub
mov
lcall
lahf
push
dec
ficomps
repnz
adc
mov
mov
add
ja
lret
and
out
pop
and
fsubrs
jne
aas
mov
xchg
lcall
mov
adc
addl
xchg
xchg
cmpsl
mov
hlt
insb
fidivrs
scas
xor
jb
push
mov
outsl
ficoml
ss
mov
aaa
aad
sbb
movsl
push
dec
xor
cli
inc
sub
dec
lcall
in
popa
cli
push
inc
imul
dec
pop
xchg
jp
pop
fstps
addr16
in
gs
hlt
cs
sbb
scas
mov
pop
pop
jno
out
dec
in
rcl
cmp
es
pop
dec
std
sbb
xchg
in
fsubl
jecxz
sub
out
aam
sub
imul
rcl
leave
or
push
fnstcw
dec
fimuls
sbb
out
mov
shrl
das
neg
cwtl
sbb
pop
dec
xor
adc
lret
andl
dec
mov
adc
lods
sub
mov
hlt
inc
push
dec
fistpl
dec
or
aas
dec
adc
push
ret
jecxz
icebp
xor
loope
mov
mov
pop
pop
mov
cmc
fwait
pop
or
popa
sbb
dec
cld
pop
fadd
and
std
and
sbb
test
xor
shr
push
pop
fmull
insb
sub
mov
cwtl
std
or
add
and
int3
test
pop
xor
outsl
pop
addr16
out
inc
fs
cmpsb
std
das
cmc
dec
ljmp
shl
lods
jo
lods
mov
jmp
or
jbe
in
daa
inc
pop
nop
scas
lret
adc
push
xchg
out
ss
fwait
inc
mov
mov
int
cmp
scas
sbb
add
ret
xchg
jmp
lods
jns
or
mov
push
and
std
fcom
xchg
mov
cwtl
push
imul
std
push
test
ljmp
test
out
dec
xchg
pop
mov
mov
xor
stc
lret
dec
jl
pushf
inc
iret
ja
lcall
sbb
lret
fwait
aam
rcll
insl
mov
and
cmp
fcompl
or
fcmove
push
xchg
sub
nop
imul
fdiv
outsl
arpl
push
sbb
andl
ss
int3
pop
insb
sbbb
aad
cli
popf
sbb
aas
out
dec
les
in
jb
fwait
imul
sbb
jbe
adc
push
gs
scas
sub
scas
jb
sub
loope
int3
jg
sbb
xlat
test
ja
add
lock
or
jle
cmp
mov
inc
dec
nop
mov
xchg
sub
mov
push
xor
fidivs
lods
loopne
das
aam
sbb
push
sub
ret
jns
sub
aad
push
add
repnz
xor
mov
in
adc
rorb
int
aad
cmp
ds
loope
jg
xor
repz
lea
mov
adc
sbb
nop
jl
pop
add
fucompp
jmp
adc
int
sbb
lret
cmpsb
mov
cmp
adc
imul
les
xadd
add
inc
dec
inc
pop
iret
lock
rorb
or
cmpsl
popf
adc
ja
fs
dec
jae
push
or
push
fidivrs
mov
jl
mov
int3
int3
mov
add
in
iret
jbe
lea
jg
icebp
aas
fxch
test
dec
fidivrs
lret
and
cli
sub
mov
lret
clc
bnd
popf
rorl
lret
shrl
adc
lds
mov
xor
iret
mov
push
es
jns
ja
out
pop
je
mov
xlat
fwait
nop
js
popf
jnp
dec
lret
sbb
aaa
dec
repnz
out
shll
addr16
push
data16
mov
fimuls
dec
xor
xchg
or
xor
out
shl
push
xchg
jle
dec
push
push
cmpb
stc
mov
xor
mov
xor
int3
sbb
cmp
and
insb
xor
addb
orl
mov
dec
aaa
push
ss
dec
int
or
fistps
pop
je
dec
cmp
stc
scas
outsl
adc
dec
inc
lcall
out
or
sub
shrl
sbb
xchg
bound
mov
cmp
jbe
fcomp
fdivrl
jge
icebp
jns
push
cld
leave
lds
sbb
dec
or
int
adc
sbb
xlat
pop
xor
stos
sti
stos
xchg
jne
movsb
or
movsb
cwtl
sbb
outsl
inc
cmpb
fs
or
sbb
gs
les
push
xchg
push
orb
out
push
mov
dec
adc
loope
xorl
adc
cltd
sub
cmpsl
push
cmp
lret
fimuls
iret
push
scas
push
mov
jno
imul
inc
jecxz
std
int
test
push
push
std
xchg
imul
pop
jo
mov
mov
jecxz
cli
icebp
dec
sti
mov
xor
sbb
repz
stos
pop
dec
fs
out
bound
fstps
mov
stos
int3
sahf
scas
and
enter
scas
test
xchg
cs
adc
dec
shrl
stos
fisttpl
sbb
outsl
and
ljmp
push
jmp
nop
in
into
insb
pop
imul
xchg
mov
push
sbb
mov
rorb
and
jl
xchg
jmp
call
sub
xor
sbb
pusha
cmpsb
in
lcall
fnstsw
lods
jo
mov
adc
fs
push
lds
adc
dec
sti
push
sbb
mov
pop
mov
cs
es
jb
repnz
pop
add
int3
mov
pop
into
lcall
iret
leave
inc
sub
dec
sahf
add
or
inc
into
sbb
movb
push
dec
xorb
out
jmp
dec
call
sbb
jg
cmp
sbb
aas
mov
daa
or
imul
push
roll
test
scas
cwtl
imul
adc
pop
test
dec
cli
pop
dec
scas
in
pop
je
shll
jge
fwait
inc
in
cld
fsubr
pushf
lret
sbb
pop
cld
dec
push
in
rcrl
xchg
lcall
jne
jo
sbb
jns
mov
imul
arpl
jp
out
ret
adc
aad
pop
lods
mov
int
shl
mov
in
shlb
pushf
test
push
mov
mov
xorl
dec
jg
dec
xor
lock
fisttps
add
mov
je
rolb
cs
sbb
push
cmp
lret
cmpsb
ret
clc
sbb
or
cmp
mov
cmp
jecxz
pop
divl
sbb
std
shrl
repnz
lret
je
aas
xor
mov
das
data16
xchg
jp
jle
rcr
jae
push
stc
xchg
cmp
test
push
mov
and
jl
es
ja
push
mov
adc
jge
pop
mov
jne
pop
xchg
sbbb
pushf
pusha
inc
cs
cmpsl
pop
ss
mov
or
or
jl
out
lret
pop
ret
add
jbe
adc
cmp
into
xchg
sbb
mov
aad
push
push
nop
xchg
xchg
add
xchg
lahf
jo
into
inc
add
sbb
and
or
jmp
in
push
fcmovb
sbb
and
dec
ja
add
adc
mov
pop
push
mov
aas
gs
xchg
outsb
ffree
sbb
sti
dec
mov
test
sbb
shll
sarb
and
sbb
xor
inc
clc
cmp
push
ss
out
adc
pop
cmpsb
jecxz
dec
in
mov
hlt
jb
mov
add
xchg
pop
cmp
lret
push
mov
xchg
jns
add
add
mov
mov
clc
cmp
ss
sbbb
sti
pop
gs
inc
mov
pop
jno
push
jmp
aas
ret
enter
xor
xchg
fstpt
lret
xchg
adc
out
cmc
adc
mov
push
jns
xor
ja
out
loopne
pop
scas
jmp
bnd
imul
push
xor
fcompp
mov
lahf
xchg
pop
pop
fucomi
xchg
or
push
arpl
das
jne
inc
lret
mov
fidivrs
dec
and
xchg
loope
test
lds
xchg
addr16
stos
aaa
insl
mov
pop
xorb
or
xlat
mov
subl
sbb
sub
sbb
rclb
pop
mov
xor
not
stos
xor
and
mov
sbb
fwait
mov
push
int
gs
aaa
sbb
push
xlat
sbb
adc
gs
pop
out
mov
stos
scas
ljmp
xchg
ret
ja
xorl
int3
push
pop
push
lds
sbb
xor
pop
je
loope
add
mov
scas
stos
es
sub
lds
sbb
add
cmp
sti
xchg
fsubrs
mov
cmp
mov
stos
pop
xor
je
push
lret
lods
nop
stos
sbb
mov
xchg
xor
inc
dec
adc
sbb
fdivl
jns
fsub
loop
fs
scas
data16
xchg
xchg
mov
and
pop
mov
dec
jns
ret
sbb
mov
shll
push
sbb
imull
sbbb
addl
fwait
sbb
gs
xchg
jns
cmpsb
sahf
imul
cmc
and
mov
sbb
add
push
fcoml
or
pop
and
call
leave
fidivrl
aam
in
or
insb
mov
fistpl
push
icebp
and
notb
cmp
lock
repnz
orl
fwait
nop
sub
pop
sar
scas
ret
out
xchg
fdivrl
fcmovu
cwtl
xchg
cs
cmp
stos
sbb
cmp
test
xor
xchg
jno
pop
fisttps
int
pop
popa
scas
sahf
lret
sbb
push
outsl
add
adc
cli
cltd
test
jno
xorl
test
mov
ds
cmp
xor
in
sbb
adc
cmp
lods
in
dec
mov
mov
pop
in
jle
sbb
data16
imul
xchg
sahf
mov
mov
add
gs
dec
scas
jae
sbb
imul
or
jge
pop
adc
push
icebp
mov
fists
gs
cwtl
fldcw
pop
jae
sbb
je
lret
cwtl
sti
push
addr16
mov
fsubr
mov
rcll
inc
sbb
add
or
inc
sub
sub
test
jnp
popa
movb
fnstsw
push
rcrl
nop
or
imul
int
rolb
cli
mov
test
mov
pop
shll
cmp
cmp
add
mov
xor
cmpsl
jl
out
dec
add
jl
cmp
xor
mov
movl
pop
ret
loopne
subl
in
sbb
sahf
mov
pushf
inc
mov
sbb
sbb
fdivs
mov
jno
repnz
xchg
push
add
pop
cs
pop
or
pop
pop
test
mov
sbb
movsb
and
add
ljmp
pop
std
jge
sbb
push
mov
out
xchg
iret
in
add
hlt
aaa
shll
xor
mov
or
dec
nop
mov
pop
das
fs
insl
sbb
adc
fstp
mov
mov
negl
jo
jns
icebp
pusha
fsubs
fsts
jne
cmp
fnsave
cmpsb
sbb
inc
loop
xchg
fstpt
mov
sbb
or
sbb
add
in
ljmp
in
stos
jmp
fs
cmp
ljmp
sbb
sarl
test
mov
cltd
iret
out
ljmp
mov
or
loopne
jb
adc
sarl
jmp
push
xchg
pminsw
mov
sbb
aam
inc
rcll
dec
icebp
sbb
dec
cmp
jmp
adc
and
hlt
mov
in
fistpll
mov
ret
ljmp
sbb
stc
push
add
bound
pop
and
ss
loopne
lods
popf
inc
jb
adc
fisubrs
mov
push
sbbl
sbb
sbb
lret
loope
sbb
fnsave
mov
ret
outsl
pop
pushf
cld
jns
sbb
call
and
movsb
jge
mov
mov
pop
rcrl
adc
push
pop
xor
lret
cmp
movsl
into
fwait
adc
cmp
cmp
fldt
or
mov
pop
insl
ljmp
lcall
jno
mov
mov
lret
mov
jl
xchg
push
inc
fstps
xor
fmuls
ljmp
addr16
inc
sub
das
inc
jge
push
lds
cld
xchg
faddl
jmp
sbb
es
push
fbstp
or
sub
das
in
and
sarb
cmp
jo
rcr
inc
sbb
and
inc
xor
pop
or
pop
mov
imul
cmp
pushf
cmp
addr16
sbb
or
ja
lods
cmp
out
push
movsb
jle
dec
fcomps
mov
adc
sbb
test
push
mov
push
dec
out
jmp
cmp
call
jo
les
jmp
inc
sub
mov
into
cmp
sbb
and
mov
or
jne
movsb
push
or
fnstcw
sbb
xchg
es
out
lret
xchg
inc
xchg
test
inc
aad
jp
jns
and
fildll
pop
shrb
loope
push
addr16
inc
lds
mov
shrl
idiv
pop
fnstenv
outsb
shr
arpl
fwait
lds
push
bswap
jl
push
jecxz
sbb
pop
ret
pusha
add
adc
repz
int
add
popa
ss
push
pusha
sbb
in
mov
lock
dec
sbb
test
fmuls
jne
and
ret
fcoml
mov
xorl
xchg
aas
dec
loop
out
push
shr
inc
hlt
dec
add
and
fstl
pop
jmp
hlt
cs
es
movsb
cmpsb
mov
push
add
into
popl
loop
dec
rorb
outsb
sbb
xchg
aas
pop
and
pop
jg
or
pop
mov
enter
fs
imul
aam
in
test
sub
jb
dec
cwtl
loope
sbb
dec
repnz
and
pop
dec
jns
pop
mov
push
gs
repz
fimuls
cmp
dec
mov
jmp
or
arpl
pop
mov
sbb
mov
lret
add
fbstp
inc
nop
pop
mov
add
jecxz
sbb
lcall
sti
sub
idiv
lods
outsl
sub
mov
mov
mov
imul
push
hlt
cld
sti
jno
mov
jmp
inc
mov
jno
insb
sbb
movsl
loope
dec
nop
pop
repz
sahf
cmc
das
mov
stos
lcall
sub
mov
jns
cli
sbb
imul
jae
jmp
or
nop
idivl
mov
aaa
push
aas
mov
jns
pop
cmpsl
imul
addr16
add
cmpsl
popa
mov
adc
fadds
push
xchg
push
insl
mov
mov
jno
ret
sub
jnp
mov
mov
lcall
aam
sub
cmpsb
lds
stc
out
mov
mov
and
adc
and
cmpl
shrb
jbe
lods
inc
testl
xlat
jge
fildll
mov
cli
movsb
cmc
ds
xchg
inc
test
add
lret
sub
out
sbb
out
dec
mov
gs
mov
and
js
scas
xchg
sbb
pop
in
sbb
push
pop
loopne
not
stc
cmpsb
hlt
test
je
cmpsl
pushf
loopne
daa
push
push
nop
xchg
jne
dec
fwait
cmp
xor
jne
sbb
jno
push
pop
cmp
push
out
into
inc
push
andl
inc
pop
scas
jnp
xchg
pop
sub
jmp
jmp
push
and
repz
lahf
stos
sub
outsl
jecxz
lods
cmp
push
mov
lahf
and
ret
scas
sbb
adc
mov
lcall
mov
sbb
mov
xchg
dec
movsb
cmp
xor
cld
push
inc
lds
loop
pop
mov
test
dec
cs
cmp
movb
mov
cwtl
dec
aaa
stos
sbb
inc
fnsave
sbb
adc
xchg
stos
xor
xor
mov
xchg
cmpsl
rcrb
out
xlat
xchg
sbb
push
loop
cmp
ffreep
test
sub
dec
add
lret
test
push
es
dec
jge
fld
imul
jmp
adc
int3
jp
xchg
sbb
test
adc
cs
dec
fdivrl
inc
imul
je
lds
loopne
mov
xchg
cmp
rcr
fwait
outsl
cwtl
fsubrl
push
inc
lds
sub
pop
and
ljmp
or
cmp
inc
loopne
sahf
mov
xor
mov
fs
pop
adc
stos
jne
sbb
in
pop
shr
and
rol
sbb
lahf
adc
cmp
inc
dec
ds
ret
ja
jns
lret
aaa
subb
rcrl
pop
sbb
and
push
nop
les
in
adc
les
xor
daa
mov
xchg
push
inc
jnp
xorl
lret
aaa
xor
ljmp
jns
movsl
fistps
outsl
cmp
mov
adc
sub
inc
pop
jg
int
cmp
mov
fwait
nop
outsb
sbb
mov
hlt
push
inc
int3
sahf
pusha
jmp
pop
ljmp
jno
aas
inc
or
mov
out
jge
out
push
mov
sahf
push
popa
or
and
inc
xchg
and
fistpl
lret
mov
ja
dec
out
mov
scas
imul
outsb
outsl
xor
rcr
jecxz
xchg
or
cmp
dec
mov
inc
inc
push
sti
idiv
jmp
push
push
out
rorb
push
cwtl
mov
loope
sbb
ja
pop
stos
repnz
cwtl
sbb
lret
xor
mov
lret
push
jo
rorb
jno
inc
pushf
mov
lock
adcb
xchg
mov
pop
arpl
mov
jecxz
outsl
adc
or
outsl
dec
adc
rolb
stos
aaa
gs
dec
cmp
test
inc
movsb
movntq
nop
movsb
xchg
push
inc
mov
aad
mov
adc
jl
sbb
mov
lock
test
jno
mov
fistl
in
pop
lock
inc
pop
cli
sbb
adc
sub
xor
lcall
outsl
sbb
outsl
add
mov
bound
scas
mov
mov
sti
or
sub
sub
adcl
hlt
inc
fs
fimull
cmp
into
mov
push
ljmp
jnp
fcompl
jecxz
addr16
cwtl
lret
stc
mov
jb
imul
adc
jg
xor
mov
xor
mov
or
or
mov
scas
cmp
fisubs
mov
sbb
jnp
aad
add
scas
xchg
adc
repz
addb
popa
dec
xor
sbb
adcb
aam
cwtl
mov
gs
fdivl
mov
icebp
rcll
ret
jg
sbb
out
out
lods
push
pop
int
and
cmpb
inc
insl
adc
ja
push
test
lret
and
mov
xchg
les
and
imull
je
pop
dec
divl
xor
bound
xlat
xchg
mov
loope
mov
push
aad
dec
dec
inc
jl
pop
mov
cmp
xchg
cmpsl
push
dec
dec
int
outsb
jo
mov
lret
clc
mov
sbb
mov
xor
cmp
inc
sbb
or
and
in
mov
repz
mov
add
mov
jb
psrlq
hlt
sbb
aad
lock
std
lds
out
or
or
fwait
sbb
jae
add
jnp
arpl
inc
insb
fildll
data16
or
scas
out
mov
xchg
fsubs
inc
mov
jbe
jae
in
out
add
out
fsubrs
insb
and
push
ficompl
movsl
jne
sti
ljmp
jecxz
xchg
jnp
cmpsb
push
sbbl
divb
mov
add
movsb
call
xor
mov
pop
add
or
push
jno
jbe
adc
or
inc
sbb
lcall
xchg
fcmovb
xchg
roll
xchg
test
inc
pop
mov
pop
push
cs
jle
push
cs
shr
or
cs
pop
fwait
sbb
imul
negl
jecxz
jnp
push
testl
cmp
out
pop
mov
pusha
or
inc
icebp
outsl
rcrl
inc
int3
sub
test
pop
ret
movl
jb
pop
fstpl
outsl
in
and
aam
inc
hlt
imul
or
push
cmpsl
aam
out
bound
hlt
gs
dec
ljmp
push
sub
pop
lea
xchg
push
popf
sbb
mov
mov
mov
rol
jmp
call
add
push
adc
jnp
mov
jmp
xor
pop
sar
sbb
icebp
adc
ja
lds
arpl
sbb
fdiv
gs
movsb
cld
fsub
or
dec
lock
mov
ljmp
fcmove
pusha
pop
pop
fidivl
add
pop
xor
jl
jge
in
cs
repz
sub
rcr
bound
cs
mov
lock
push
int
fdivs
fsubl
imull
pop
jnp
imul
fmul
xchg
aam
mov
int3
xor
mov
xchg
outsl
add
inc
and
sbb
mov
jmp
xchg
or
jge
daa
mov
cmp
mov
jmp
ljmp
push
shrl
adc
inc
in
sbb
mov
loope
jne
imul
mov
push
movsb
push
popf
and
insl
or
loopne
sbb
push
and
mov
popf
lret
test
xor
faddl
enter
sar
and
mov
inc
lock
jae
lret
aam
mov
push
jnp
mov
add
sub
ret
aam
repz
jecxz
test
inc
out
mov
xchg
sub
out
push
sbb
fwait
into
mov
test
sbb
ljmp
mov
sub
sbb
imul
mov
xor
addl
sub
je
cmp
xlat
mov
inc
adc
shlb
inc
insb
jg
rcll
adc
outsl
mov
insl
mov
test
push
addr16
mov
in
jae
icebp
repnz
pop
dec
ret
pusha
test
sbb
sahf
in
xchg
insl
shufps
mov
jbe
in
sbb
cmp
cmp
addr16
es
scas
jae
movsb
mov
sbb
jne
push
int3
into
ficompl
jns
iret
imul
cmp
stc
add
pop
std
sbb
out
mov
mov
fs
ds
dec
pxor
mov
push
mov
jno
jns
add
popa
imul
pushf
test
ss
call
dec
ficoms
icebp
sahf
mov
ss
mov
or
aaa
inc
and
test
dec
hlt
mov
lock
dec
adc
cmp
xchg
inc
or
notb
test
jecxz
enter
imul
jle
and
addr16
andl
dec
xor
data16
sub
pusha
shlb
out
popf
pop
ljmp
mov
pop
cs
mov
cmpsb
add
and
sub
enter
jge
out
jmp
test
xor
sahf
pop
aam
fisubl
mov
and
int3
aaa
add
ret
aam
and
sub
jnp
daa
ret
push
cli
adc
inc
mov
stos
adc
and
sub
or
sbb
mov
scas
loop
lds
enter
pop
call
and
test
fimull
cmp
mov
fcoml
adc
and
loop
ds
ljmp
iret
cmp
enter
dec
lea
ljmp
add
out
cmp
fnsave
cli
jge
mov
fsubr
sbb
mov
sti
sbb
repz
mov
arpl
add
mov
sub
out
sbb
addl
xchg
clc
repnz
scas
push
in
push
mov
add
xor
push
arpl
jne
or
push
jbe
xchg
rcl
inc
repnz
xchg
gs
jle
cs
or
mov
ret
cmp
mov
inc
daa
mov
or
xchg
cmc
fldl
jmp
inc
push
ret
or
mov
mov
sbb
jl
and
daa
out
arpl
dec
sbb
shlb
in
dec
fistl
xchg
adc
pop
mov
mov
mov
fnstsw
std
jp
cmp
fwait
aam
sub
lds
dec
jno
test
inc
loop
fildll
pop
and
mov
iret
mov
mov
fisttpl
push
call
out
sbb
xchg
xchg
dec
jb
sbb
pop
fdivl
testl
ja
push
fcoml
xchg
scas
mov
orb
fisttpll
push
add
xor
js
inc
add
sbb
sbb
mov
add
rorl
mov
dec
loopne
and
fcompl
sub
inc
xor
jg
cmp
in
popa
int3
repnz
push
gs
jae
incb
jae
fisttpl
fidivl
jno
adc
out
inc
mov
in
bnd
mov
sbb
mov
xor
inc
ret
int3
xor
jge
and
repnz
jge
int3
sbb
or
adc
aad
xchg
lret
pop
enter
jp
nop
jno
insb
xor
lock
inc
xchg
jg
out
mov
add
ss
jg
sbb
xchg
outsl
mov
movsb
ret
les
ret
mov
sbb
push
push
insb
adc
cmpsl
jmp
jns
ss
jg
in
push
sbb
and
mov
call
inc
sbb
mov
fucomp
and
shll
lods
adc
fcoml
mov
out
mov
ss
inc
sbb
mov
jnp
outsl
popa
aas
push
mov
mov
and
dec
cmp
seto
push
fbstp
and
cmp
push
xchg
xchg
in
lcall
mov
aaa
andb
pop
inc
loopne
pop
push
xor
inc
inc
jno
lea
mov
push
inc
add
stos
and
pop
mov
push
loopnew
jmp
cmp
push
add
and
add
cmp
sbb
mov
outsb
dec
sbb
mov
lret
jmp
fistpll
pusha
negb
or
loopne
mov
scas
mov
sbb
lods
in
cmp
shll
lea
push
pop
lahf
shlb
xor
dec
jne
pop
mov
or
or
rorb
rcrl
subb
fwait
push
rcll
mov
popf
jl
push
insl
call
lods
xor
icebp
sbb
cmp
pop
mov
pop
mov
loop
dec
jns
mov
xchg
fnstsw
clc
flds
cli
add
movsl
ret
test
popa
lods
sub
push
sahf
fildl
and
adc
sti
iret
mov
repnz
jno
lcall
cltd
mov
xor
incb
div
pop
in
rcrl
fstps
scas
jl
push
and
test
mov
jnp
push
ss
jmp
daa
push
scas
cmpsl
in
jbe
ret
sbb
inc
mov
in
inc
aas
movl
dec
xchg
push
fs
xchg
pop
jle
xchg
sub
xchg
mov
xchg
jae
add
clc
mov
push
or
dec
adc
fsubr
xlat
push
insb
test
cmp
mov
pop
insl
out
jp
movsb
xor
mov
test
clc
repz
pop
sti
cmp
into
jmp
jmp
fimuls
pop
sahf
mov
xor
cmp
repz
cld
int
mov
lret
pop
idivb
mov
jecxz
mov
xchg
xchg
lret
idivl
mov
icebp
lods
dec
push
xlat
push
lcall
and
lret
data16
jp
inc
in
and
cwtl
je
xor
int3
leave
gs
lods
lds
lock
pop
push
frstor
int
inc
push
call
xchg
iret
daa
inc
testl
jns
rorb
cmp
mov
mov
nop
enter
das
lret
mov
mov
out
ja
dec
enter
mov
ljmp
loopne
lods
inc
pop
pop
sbb
mov
fiaddl
xor
or
xor
adc
imul
mov
imul
in
pop
sub
lret
lcall
ds
adc
mov
mov
sti
ret
sahf
or
out
subl
lret
cmc
xor
lret
aas
mov
out
rorb
lret
into
jmp
test
and
pop
hlt
inc
stc
jle
leave
lea
ljmp
movsb
lret
stos
imul
mov
add
mov
dec
or
rclb
je
lret
lret
xor
lret
mov
rolb
and
fistps
jg
pop
and
jo
outsb
adc
jne
and
or
fnstsw
pop
push
lret
cld
inc
ja
xor
or
or
add
mov
das
es
inc
iret
xor
mov
aad
cmc
dec
add
lret
aaa
fsubr
mov
mov
fsubrs
icebp
lret
test
cmp
lret
cwtl
insb
push
xor
stos
mov
lret
aad
les
jae,pn
mov
lret
stos
cmp
imul
cwtl
lret
sub
mov
js
aas
push
mov
lret
or
jl
lret
push
dec
or
and
lods
fwait
loop,pt
mov
sbb
cmpsl
iret
jb
jbe
sub
xchg
scas
lret
out
leave
rclb
push
adc
pushf
fbld
and
jbe
movsl
lahf
mov
fs
lret
push
mov
out
lret
xchg
adc
sahf
test
push
lret
and
cmp
in
sbbl
mov
lret
mov
pop
push
movsl
sbb
lret
jnp
aam
adc
sub
in
push
repnz
dec
lret
sti
jnp
push
fstp
mov
in
pop
arpl
iret
lret
xchg
xchg
sbb
shl
je
test
ret
xchg
mov
stc
lahf
stos
mov
lret
sbbl
or
fisubs
leave
cmc
int3
lret
es
mov
jbe
cmp
dec
push
dec
mov
jmp
mov
fmul
jge
lret
push
xlat
pop
mov
cli
ror
sub
add
pop
mov
leave
dec
cmp
outsb
out
xlat
mov
jbe
dec
lret
mov
push
mov
xchg
mov
lret
fimull
scas
xlat
ds
lret
cmc
repnz
cli
fsub
adc
das
stos
movsl
sti
hlt
lret
cmp
nop
and
mov
jle
je
pop
dec
push
out
test
pop
out
ret
mov
mov
fimuls
movsl
mov
pusha
or
dec
int
daa
adc
das
inc
repz
sbb
dec
mov
xchg
xor
push
dec
and
fcmove
test
and
xchg
out
idiv
cmp
mov
pop
cld
mov
sbb
lret
dec
out
sti
jmp
xor
add
rorl
aas
cmp
lods
mov
out
cwtl
ficompl
int
orb
adc
out
mov
movsb
stos
insb
lret
fistps
dec
xchg
adc
cmc
xor
sub
lret
mov
push
lret
dec
push
fwait
adc
and
lret
loop
insl
in
lret
inc
lret
mov
add
iret
test
or
cs
xor
jp
rcrl
xchg
fsubs
cmp
jbe
addr16
and
lret
fisttpll
inc
lock
add
bound
stos
or
js
lret
rcr
pop
fwait
mul
xchg
add
icebp
pop
int
or
std
lret
pop
inc
in
mov
sub
roll
insb
movsb
lret
pusha
xor
push
lret
and
rolb
int
into
adc
mov
cmpsb
iret
push
aam
push
cmc
jbe
lcall
and
push
inc
sahf
rorl
pushf
xchg
sub
inc
scas
push
pop
xchg
mov
xorb
lcall
enter
inc
jbe
sti
jae
push
repz
repnz
and
pop
mov
mov
mov
dec
pop
mov
ljmp
xlat
ror
in
hlt
lret
mov
dec
movsl
js
shr
push
cltd
test
pushf
imul
jo
xor
dec
scas
into
sub
mov
push
jbe
aam
sbb
pop
out
cltd
fmul
daa
ja
mulb
aad
mov
mov
or
int
sub
adc
pop
lods
push
mov
adc
jg
xchg
and
cmpsb
decl
lret
test
jecxz
popa
add
sub
imul
adc
les
push
pusha
mov
dec
push
dec
out
lret
sbb
push
fidivs
ret
pop
add
aas
enter
cmp
xchg
xchg
lahf
fstpl
inc
rclb
flds
dec
mov
sub
ret
dec
xchg
or
rcrl
xor
xor
lea
stos
divb
dec
mov
fcmove
cmp
add
mov
aad
adc
jp
mov
divl
fistpl
cld
shl
pop
add
lcall
inc
mov
mov
or
cmp
jns
xchg
movsb
ficoml
nop
icebp
mov
test
out
adc
call
loopne
pop
pmaddwd
ret
cmp
xor
mov
test
lods
mov
and
or
test
mov
lret
sbb
stos
mov
sub
push
lret
add
repz
outsl
je
cmp
dec
or
movsb
sub
inc
fcmovne
add
ds
jne
int3
icebp
insl
jns
jmp
fidivrl
lret
jae
into
mov
leave
les
in
imul
seta
ja
lahf
lea
lret
mov
mov
insl
aad
dec
bound
pop
cmp
shll
mov
push
insb
sti
mov
and
lret
test
mov
std
jmp
add
int
add
add
mov
or
adc
sbb
dec
push
outsb
filds
lret
pop
push
mov
lds
or
rcr
dec
jecxz
adc
sbb
loope
leave
add
rorb
mov
imul
fs
lods
ficompl
out
cmp
pop
icebp
cmpsl
fisttpl
mov
mov
lret
xor
gs
cwtl
jp
int
add
aam
adc
xchg
push
jb
mov
lret
dec
vminss
lock
dec
jne
push
ret
testb
and
movsl
lret
xor
mov
push
push
into
xchg
xchg
scas
push
xor
sub
shufps
push
cltd
or
or
ss
insl
fistpll
mov
mov
dec
jle
mov
lret
xlat
cltd
mov
push
adc
in
aaa
loope
stos
lret
mov
lret
in
iret
jnp
data16
jge
or
icebp
fdivrl
dec
jecxz
mov
adc
add
daa
sub
test
and
and
add
fyl2x
roll
mov
sbb
mov
lret
fcomps
sbb
aas
xchg
lcall
lret
pop
mov
out
or
pushf
cmp
enter
push
popf
cmpsl
mov
sbb
add
pop
add
sbb
push
xor
test
adc
sub
cld
dec
jnp
xchg
cltd
cmp
cli
sahf
cmc
adc
jle
out
push
mov
repz
inc
rol
out
fdivl
pop
pop
dec
outsl
inc
test
jno
sub
call
dec
or
dec
sbb
and
nop
mov
or
sbb
xchg
xchg
pushf
popf
je
sbb
inc
lock
inc
lds
sbb
cmp
mov
jno
imul
test
idivl
imul
push
add
xchg
loop
loope
push
mov
dec
out
mov
sub
fcomp
loop
sbb
ja
ja
mov
ss
addr16
lret
fs
negl
or
or
inc
outsb
jne
mov
jl
sbb
xorl
pop
out
in
dec
arpl
clc
shll
xchg
sahf
loope
or
fiaddl
ret
add
push
mov
and
push
dec
mov
add
repz
cmc
cltd
lods
call
cmp
loopne
add
jns
loope
mov
inc
shrl
repnz
xchg
jmp
dec
or
ret
push
ss
xor
ljmp
push
imul
loope
mov
jnp
sub
push
daa
and
adc
pop
push
pop
push
or
sbb
ret
cmpsl
nop
fisubrl
xchg
dec
ret
sbb
in
cld
mov
gs
in
pop
out
loopne
lods
ret
xchg
mov
lret
jmp
sahf
aaa
fisubrl
je
sahf
xchg
cld
jle
sbb
sbb
outsl
fstp
sbb
xchg
fs
mov
lock
add
out
pop
lea
shrb
leave
pop
leave
test
stc
mov
fdivl
push
inc
jmp
rcrl
subl
cmp
xor
jae
rol
inc
mov
pusha
or
xchg
iret
fstps
sbb
push
adc
adc
mov
mov
pushf
pop
sbb
pop
lds
adc
xchg
sbb
lea
fisttpl
sbb
adc
lock
int3
mov
mov
lock
pop
xchg
ret
cmp
and
xor
ret
inc
cmp
je
pop
sarb
xor
sbb
cmp
push
add
pop
popa
out
and
das
sbb
push
test
jecxz
jo
loope
mov
iret
scas
lcall
adc
xor
out
cmpb
push
jno
push
insl
xor
jbe
lahf
fnstcw
fnstsw
lock
mov
inc
cmp
push
sbb
dec
or
es
frstor
xor
adc
push
bound
dec
mov
mov
mov
dec
mov
add
lock
loopne
insl
inc
fildl
movl
cwtl
js
mov
daa
sbb
mov
pop
mov
mov
sub
xor
inc
dec
mov
test
and
nop
aad
leave
popf
mov
pop
je
xchg
mov
and
dec
and
mov
ret
pop
stos
sbb
in
sub
and
and
fcomps
jb
add
sbb
dec
fcompl
or
mov
nop
cmpsb
xchg
mov
js
ljmp
and
cmp
mov
add
lods
lsl
and
sbb
hlt
or
mov
bnd
sub
push
and
mov
xchg
ja
inc
inc
and
xor
inc
dec
dec
nop
les
xor
fmull
test
xchg
adc
ret
xchg
ds
add
fwait
dec
jmp
mov
adc
inc
rol
lcall
pop
cmp
mov
cmp
out
jge
lock
jp
dec
loope
lods
gs
mov
cmpl
mov
cmp
shrl
scas
xchg
sarl
sbb
pop
rcr
mov
sbb
push
mov
cmp
mov
push
je
out
ljmp
fbstp
loopne
test
js
add
addl
dec
xor
cmp
aad
cmp
rcr
sbb
aas
cwtl
test
test
add
sub
fsubl
aam
pop
nop
inc
push
in
ss
loopne
dec
leave
sbb
push
fidivl
rclb
dec
and
and
jnp
test
frstor
les
push
pop
push
daa
test
lock
push
mov
repz
fnstcw
rcll
jbe
addb
out
int
xor
pop
imul
int
xchg
mov
popf
xchg
jnp
ret
cmp
inc
stos
xor
fnsave
or
dec
push
sbb
push
dec
sbb
dec
push
mov
sbb
cwtl
lods
mov
xor
mov
push
fwait
jnp
lds
push
jl
setl
or
jb
jno
adc
jmp
andb
adc
popa
inc
push
pushf
cmp
pop
sbb
push
push
pusha
ljmp
mov
jbe
mov
pop
xchg
cmp
rorb
xchg
and
ljmp
dec
cmp
out
mov
xchg
cmp
ja
lcall
leave
or
pop
mov
sarl
aaa
jnp
pop
addl
imulb
pop
mov
lods
movsl
icebp
push
sub
loopne
inc
rol
sbbb
add
gs
xor
xchg
and
and
and
push
mov
add
lock
push
popa
xlat
xorl
jb
push
nop
orl
fs
int
clc
add
jnp
fwait
rolb
pop
fadd
jno
mov
sbb
and
inc
dec
repnz
or
xor
mov
sbb
pop
cmp
cli
jg
mov
xor
jg
cwtl
leave
das
sub
fcoms
xchg
fbstp
repz
and
ret
jmp
sbb
int3
or
inc
jmp
leave
mov
popl
adc
fcomps
not
mov
out
aam
les
shlb
lock
test
insb
cmpsl
repz
ljmp
data16
les
lret
ficoml
insl
arpl
shlb
xchg
pop
imul
ret
mov
adc
inc
outsl
sbb
or
add
movsl
xchg
jo
sub
test
and
add
sbb
jmp
push
jo
cli
add
push
mov
out
cmp
push
jg
loopne
aam
push
xchg
cwtl
lret
push
xor
hlt
cwtl
int3
mov
loope
aas
jg
aam
jne
sub
sar
mov
dec
sbb
jecxz
pop
mov
insb
or
inc
mov
sbb
lret
mov
dec
imul
xor
jnp
mov
add
dec
in
fidivrl
push
loop
flds
mov
push
insb
clc
add
hlt
inc
in
pop
out
pushf
ffree
or
or
adc
sub
sbb
mov
into
lds
mov
icebp
mov
stos
int
pop
xor
insl
sub
xchg
pop
jnp
adc
fstps
insl
xor
mov
push
ja
inc
jl
push
addr16
je
dec
add
imul
mov
add
in
out
xchg
cmc
xchg
scas
or
roll
in
pop
mov
push
add
cmpsb
add
mov
xchg
repz
cld
lods
addr16
mov
and
je
pop
loope
ljmp
dec
adc
xor
mov
mov
addr16
sub
pop
xchg
fimull
jne
lret
testb
push
pop
jge
xor
and
jmp
test
int3
outsb
nop
push
xor
mov
pop
fstpl
mov
xchg
insb
lahf
fwait
cs
cmpsb
sbb
into
push
pop
xor
ficoms
js
scas
negl
xor
dec
rorl
ja
mov
icebp
mov
mov
cmp
sarl
dec
sbb
and
loopne
mov
loop
mov
das
push
dec
lret
fstps
loope
jae
stc
sbb
insl
fidivrs
sbb
xor
loope
stos
pop
cwtl
pop
push
adc
inc
shlb
and
dec
into
inc
sbb
sbb
out
or
cmp
fldt
imul
sub
fildll
mov
cmpsl
and
mov
aad
cwtl
xchg
adc
repz
xchg
imul
int3
ljmp
sbb
mov
test
sbb
mov
cmp
out
add
push
pop
or
rcr
add
sahf
sbb
pop
and
fsub
push
int3
data16
jae
out
adc
loope
pop
sbb
popa
ljmp
js
xor
loopne
sub
mov
xor
sub
pusha
mov
scas
sub
mov
inc
mov
sub
jno
mov
xchg
cld
dec
pop
xabort
in
pop
mov
adc
push
ja
mov
aas
xorb
pop
repnz
sbb
sbb
lcall
arpl
or
fldt
jmp
push
stos
cwtl
in
std
add
mov
pop
arpl
mov
test
or
add
dec
iret
fmul
mov
stos
lret
pop
add
int3
sbb
and
call
enter
cmp
insl
dec
inc
cmpsl
scas
jbe
mov
daa
test
sub
cmp
out
lds
lods
xchg
sti
inc
aas
xchg
fdivrl
or
push
daa
movsb
pushf
shll
sbb
jmp
repz
je
ret
jmp
cmp
jne
jne
in
fistpl
mov
cmp
lock
jo
test
xchg
push
outsl
lods
out
cmp
imul
or
repnz
jae
mov
sub
int3
mov
sarb
shrb
jecxz
imul
iret
cltd
pusha
jo
and
sub
cli
jne
mov
mov
fdivrl
pop
mov
ja
mov
shrl
xchg
push
fstps
leave
test
add
inc
push
addr16
xchg
cmp
jge
mov
lahf
je
pushf
je
daa
and
lret
ret
mov
test
movsl
and
cmp
int
popa
bound
rclb
inc
push
lret
mov
mov
mov
sub
orl
sbb
cli
mov
imul
sbb
sub
addl
add
and
adc
mov
xor
inc
movb
xchg
je
scas
push
xchg
push
cmpsb
push
xorl
jne
mov
and
loopne
dec
jno
mov
sub
mov
pop
repz
nopl
sbb
pop
roll
shr
in
rorl
in
out
jp
adc
lds
lret
aad
addr16
xor
imul
int3
into
dec
daa
scas
push
add
out
sub
mov
sti
cmp
iret
add
cmc
outsb
hlt
dec
mov
sbb
sahf
jb
cmp
xorl
shll
lea
pop
call
lret
les
pop
inc
aad
lret
push
jns
icebp
inc
daa
lret
lahf
pop
xor
or
aam
mov
add
int3
lret
adc
xchg
and
mov
jo
int
das
mov
mulb
cltd
dec
lret
lcall
jl
inc
sti
cmpb
mov
lret
xor
shll
xchg
fs
sarl
lock
cmp
fsubs
leave
loop
lods
sbb
in
test
push
dec
jbe
lret
adc
push
jns
xchg
dec
insb
mov
rcrl
andl
dec
lret
scas
int
jmp
iret
cmp
fisttpl
mov
ljmp
out
sbb
cmp
lret
xorl
mov
lret
imul
lret
inc
xor
es
loop
aam
leave
in
ljmp
inc
lret
cmp
pop
mov
es
jbe
jmp
push
jg
or
mov
in
push
lret
add
lods
fisubrs
fstpl
out
lret
add
hlt
cmp
lret
test
jp
dec
pop
cltd
push
and
mov
mov
dec
sub
ret
divb
jno
popf
lret
test
push
or
shl
stos
fnstsw
out
jg
push
mov
xchg
mov
jecxz
pop
or
int
mov
das
rcl
add
icebp
mov
lcall
dec
jb
enter
sbb
fiaddl
mov
cltd
sbb
lods
pushf
jge
xor
mov
in
xlat
pop
cmpsb
ss
scas
insl
mov
int3
jno
stc
lds
test
or
lret
mov
les
sarl
in
stos
outsb
lods
mov
loope
in
sub
lret
lea
std
lret
cwtl
mov
mov
adc
inc
push
mov
cmp
mov
es
jb
ss
ror
insb
cmp
lret
daa
inc
aam
sbb
loop
lret
clc
test
push
inc
cmp
xor
jno
pop
mov
cs
out
nop
rorl
int
es
sbb
in
loope
xchg
int
in
das
aad
into
out
ret
sbb
and
or
cmp
outsb
dec
inc
push
mov
icebp
cmpsb
xor
xchg
movsb
cmp
rcl
sarl
and
sbb
test
mov
jo
rol
roll
jmp
push
mov
push
popf
mov
stc
popa
pop
pop
dec
iret
pop
inc
pop
mov
addr16
xorb
test
daa
das
or
lret
xchg
xchg
cmp
and
fadd
jnp
add
dec
sub
add
sti
push
or
dec
dec
iret
pop
cwtl
inc
xchg
sahf
lret
lods
add
jns
clc
xlat
adc
mov
popa
dec
xor
out
sub
xor
out
sub
int
adc
sti
cmc
test
fstp
cmpsl
and
ss
cmp
xchg
leave
xor
fwait
mov
mov
in
jmp
idivl
aaa
lret
repz
aaa
pop
cmp
fs
loop
mov
out
mov
cmpsl
dec
orl
and
cld
aaa
mov
mov
sahf
adc
int
test
shll
fwait
cmp
pop
ljmp
mov
push
push
lret
xor
xor
inc
popa
dec
inc
mov
repz
pop
mov
or
test
aad
decb
xchg
stos
xchg
inc
mov
rcrl
push
mov
sahf
adc
lret
xchg
inc
dec
out
sub
cs
xor
or
cmp
imul
push
jmp
xchg
mov
fimuls
sbb
lret
or
dec
repz
pop
cmp
stc
jecxz
dec
xchg
fistpll
lret
hlt
rcr
push
lret
rclb
aaa
into
sub
scas
popa
or
test
mov
pop
fwait
insl
cmp
sub
jg
mov
scas
cmp
movsb
mov
roll
xchg
fisttpl
jmp
sbb
push
rcrl
jno
lods
je
cmc
ror
sub
fwait
inc
fcoml
out
jns
das
sub
push
lret
mov
jecxz
sub
xchg
xor
or
and
lret
iret
ret
inc
stc
test
nop
aam
push
arpl
fs
scas
lret
test
notl
sbb
js
push
dec
xor
or
int
add
mov
mov
or
jb
or
pop
cmp
lea
sbb
rcrl
lret
in
mov
outsb
clc
icebp
shrb
pop
push
test
out
lret
addr16
aaa
rolb
popa
int3
adc
cmp
mov
mov
xor
aam
push
lods
sbb
subb
mov
popf
jecxz
dec
icebp
xchg
rcr
out
fisttps
jl
or
movsl
jecxz
dec
push
xor
es
inc
imul
cmp
lret
pop
mov
jp
dec
sub
fs
mov
xchg
mov
adc
mov
mov
imul
mov
inc
out
mov
in
int
lcall
sub
fmull
or
lret
imul
sub
scas
int
inc
mov
test
pop
or
rcll
jle
lret
lahf
mov
ficompl
stc
lret
push
mov
test
ja
jecxz
lretw
mov
js
cmp
jae
sub
push
aaa
mov
leave
push
or
stos
stos
push
pop
and
lret
out
cmp
pushf
push
cmp
lret
into
inc
mul
jno
xor
out
xchg
add
std
lock
mov
shll
inc
orl
mov
testl
mov
dec
lret
lea
pop
inc
sbb
js
xchg
push
or
add
dec
mov
cltd
sarl
lret
mov
hlt
out
enter
lret
int3
inc
insb
mov
push
mov
xchg
xor
push
aas
int
ljmp
mov
and
imul
and
xlat
stc
inc
stos
int
dec
testb
popa
mov
rcll
push
or
pop
int
les
pop
cs
inc
lods
jmp
in
push
lret
and
stc
lcall
popf
insl
inc
mov
aaa
leave
mov
sbb
arpl
mov
aad
and
imul
andl
dec
shrl
jo
les
rcl
or
jp
bound
mov
pusha
shll
dec
adcb
inc
jmp
leave
mov
dec
or
divb
enter
ja
push
push
cmc
push
pop
rorl
cmp
mov
jne
ror
jbe
push
addr16
or
pop
lret
jae
sub
mov
adc
cmpb
xchg
push
and
pop
mov
or
jb
in
enter
cmp
fdivs
push
addr16
push
xchg
mov
loope
sbbb
rcll
xchg
inc
fisubrs
xor
mov
dec
xchg
pop
and
xchg
pop
mov
inc
ss
adcb
push
jo
in
push
cmpsb
mov
lret
inc
sbb
or
fstl
cmp
sub
fwait
rol
icebp
mov
xor
dec
jae
sub
mov
aaa
inc
jle
xor
jge
dec
ret
fs
inc
adc
out
nop
insb
test
pop
pop
push
mov
or
repnz
pop
inc
out
push
sbb
inc
sbb
push
fdivl
ss
inc
jp
stos
lods
mov
jne
lahf
test
ljmp
mov
jne
pop
mov
test
mov
outsb
stos
mov
push
shrb
inc
add
int3
cmpsb
push
icebp
ss
jmp
sbb
aas
cld
jge
out
xchg
cmc
dec
pop
mov
inc
push
xchg
cmp
jno
push
sub
jnp
xlat
add
jno
nop
mov
fimull
ljmp
push
mov
sbb
sub
leave
mov
inc
mov
jp
sbb
js
sbb
or
sbb
hlt
out
test
jae
pop
in
int3
mov
mov
adc
arpl
and
adc
aas
dec
hlt
and
lea
pop
xor
mov
aam
pushf
or
sbb
fidivl
mov
insb
nop
stc
and
cli
or
jne
ret
dec
xlat
cltd
shlb
inc
aad
sbb
xchg
xchg
nop
ret
sbb
mov
sub
pop
ljmp
cmc
mov
inc
scas
aaa
loop
rcll
jae
jmp
pop
jg
jg
inc
shll
rcrb
pop
arpl
aas
xchg
sbb
fcoms
nop
mov
mov
jmp
fstps
ljmp
dec
xchg
sbb
xchg
sbb
inc
sti
push
push
in
jecxz
aam
scas
push
out
outsl
cwtl
sahf
sahf
fstpl
inc
and
mov
add
cld
inc
lock
add
stos
jo
dec
aaa
pop
mov
xchg
add
cmp
inc
movsb
aas
pop
add
int
iret
faddl
stos
ljmp
inc
lock
cmp
leave
outsl
and
fwait
ja
test
push
adc
popa
inc
cwtl
sahf
cmp
lock
dec
inc
inc
rorl
add
add
ret
js
push
push
sbb
sbb
xchg
pop
xor
gs
imul
sti
mov
xchg
hlt
cmp
or
mov
sbb
xchg
sub
es
movsl
das
adc
dec
inc
sub
mov
mov
cmp
std
bound
fs
xor
cmp
pop
js
fnstsw
xlat
inc
fcompl
push
xor
repnz
lret
shll
imul
lcall
lds
pop
jecxz
loope
jae
stos
sarl
sub
ss
ljmp
outsb
dec
sub
and
jns
loop
cmp
scas
push
movsl
xchg
mov
cwtl
sbb
lret
js
xchg
dec
cld
or
xor
dec
fsubrs
lret
es
xor
xlat
xor
loopne
das
dec
mov
mov
push
jns
push
pop
ss
sub
negl
sbb
pop
add
push
mov
mov
add
jnp
popa
dec
mov
xor
sub
ljmp
jle
mov
loop
and
mov
xor
loopne
push
sbb
lahf
out
pop
mov
mov
dec
mov
out
arpl
sbb
pop
add
pop
jmp
rcrb
or
push
xlat
xchg
loopne
cmpsl
mov
out
aad
xchg
mov
push
fisttpll
mov
lock
cmp
sti
sbb
cli
jl
sbb
cmovno
sub
out
jle
lds
adc
adc
add
cmp
mov
cli
and
fwait
dec
mov
int3
cmpb
sub
push
aad
xor
fsts
call
lods
jnp
lahf
inc
pop
adc
mov
shll
sahf
fbld
popa
fstps
push
hlt
jns
rclb
xor
mov
arpl
aam
cmp
and
xchg
xor
fwait
dec
rcll
add
xor
lds
sbb
mov
fld
sbb
pop
faddl
sbb
push
dec
push
push
pop
cmpsb
lods
in
fwait
imul
hlt
aas
sub
mov
addr16
rolb
ret
mov
pusha
dec
sub
adc
sbb
out
adc
imul
cmp
sbbl
cwtl
mov
cmp
xor
add
xchg
testb
fs
pusha
out
xor
sbb
cmpsl
jbe
xor
push
fnstsw
negb
dec
and
test
inc
mov
xchg
sbb
dec
pop
ljmp
js
je
fisubrl
roll
sub
lea
cmc
shr
mull
dec
inc
lds
ss
sub
mov
loop
addr16
or
inc
xor
orl
add
outsl
xor
adc
fwait
cmpb
push
xor
lret
aaa
cltd
sahf
fnsave
std
mov
push
dec
jbe
pop
mov
mov
arpl
jmp
and
push
mov
mov
and
mov
cwtl
dec
mov
pushf
inc
call
xchg
lret
sbb
popa
mov
lods
mov
jno
mov
pop
mov
inc
sub
aas
add
mov
push
jnp
xlat
jbe
lcall
je
and
xchg
sub
sahf
cmp
mov
inc
fs
lret
pushf
iret
mov
mov
movsb
ficoms
xchg
shr
and
inc
stos
cwtl
ds
popa
push
jae
pop
mov
arpl
xchg
jns
enter
dec
ljmp
gs
mov
repz
inc
shl
xor
mov
rcll
xchg
pop
mov
dec
fdiv
inc
insl
ja
dec
or
sarl
pop
lock
jmp
xchg
std
lods
dec
inc
andb
aad
dec
jnp
xchg
mov
inc
adc
fdivrs
jmp
sti
sbb
aaa
in
scas
out
scas
xchg
fsubl
adc
jae
jae
jno
aam
xor
xor
frstor
mov
es
loop
push
mov
sub
fstps
inc
sbb
jno
pop
das
sbb
xor
les
fadds
inc
mov
outsb
push
dec
test
add
fstp
push
mov
je
insb
sbb
ds
mov
inc
and
repnz
ret
mov
out
je
mov
test
xchg
fsts
pop
loop
repz
mov
stos
add
mov
ljmp
imul
xchg
xor
push
sub
inc
fwait
sbb
je
mov
adc
js
xchg
fsts
lea
xorl
jmp
sti
inc
sti
inc
jnp
fimull
test
mov
mov
rcrl
jb
outsb
sbb
adc
inc
and
hlt
pop
push
insl
mov
test
lods
push
dec
insl
sbb
sub
jne
pop
sbb
enter
mov
xlat
sbb
jge
lea
push
cli
cvttps2pi
aam
mov
movb
push
or
in
pop
add
push
arpl
in
imul
nop
ja
imul
push
mov
data16
outsb
mov
bnd
push
les
out
jbe
ljmp
fsubs
dec
jbe
fwait
imul
jl
add
push
test
add
lods
lret
inc
nop
lods
int
mov
push
lea
cmpl
sub
pop
mov
mov
add
popa
and
sub
popf
sarl
test
xor
popa
xor
mov
arpl
mov
movsb
pop
subl
int
aaa
mov
aaa
call
mov
inc
xchg
andl
jmp
mov
test
lock
out
sbb
xchg
push
imul
sbb
cs
jp
sbb
xchg
cwtl
data16
popa
sub
out
adc
icebp
push
mov
jne,pn
and
add
sahf
lods
test
dec
inc
dec
mov
push
mov
cmp
cmp
loope
xchg
in
mov
mov
xor
roll
push
xchg
shl
sbb
test
repz
out
adc
xor
push
inc
adc
fwait
inc
cmp
outsb
cltd
fdivr
add
mov
cmp
mov
out
jmp
cmpsb
fdivp
loope
cli
insb
jae
sbb
sbb
xchg
inc
in
in
lea
xchg
inc
pop
jmp
push
fisubrs
stos
mov
fidivl
stos
fistpl
xchg
add
aas
fildl
imul
in
dec
sbb
xchg
push
jmp
pusha
adc
xor
std
scas
fidivs
push
loop
fidivrs
jno
push
jmp
dec
sbb
dec
mov
push
pop
frstor
fcmovbe
xchg
lret
lock
aam
and
jl
dec
mov
pop
jns
sbb
and
pop
pusha
push
cmp
ret
ljmp
cmp
inc
sbb
shll
int
insl
mov
lret
sbb
mulb
out
dec
dec
fcompl
icebp
es
push
mov
ss
das
scas
ret
insb
sub
lret
leave
or
enter
shlb
sbb
push
gs
xor
dec
shlb
inc
xor
ja
movsb
pop
lock
pop
push
lcall
xchg
mov
aas
adc
movsl
ret
sbb
pop
icebp
cmp
enter
or
call
cld
or
insl
dec
pushf
xchg
sub
mov
lret
aaa
ljmp
loopne
test
pop
lret
jg
mov
dec
xchg
push
shll
jp
int
xchg
xchg
cmp
cmpl
inc
aam
mov
and
fisubl
inc
cmpsb
and
imul
mov
scas
push
mov
push
sbb
mov
inc
jno
jnp
dec
aas
popa
cmp
add
fsubrl
xchg
jo
andb
push
imul
je
mov
dec
cmp
dec
jl
xchg
adc
inc
dec
and
or
xchg
ffree
xor
xor
push
sbb
nop
leave
add
and
sarl
pop
imul
mov
push
popf
lret
imul
sbb
out
dec
cmc
xlat
mov
mov
xor
loop
mov
push
dec
mov
push
and
xchg
pop
das
pusha
xorl
hlt
popf
push
pop
dec
mov
fst
sti
out
add
jecxz
push
mov
xorl
aas
add
mov
ror
shll
les
sahf
or
stos
push
sbb
inc
xchg
aam
int3
dec
mov
movsl
notl
test
cmovo
jb
mov
xchg
mov
cmc
and
repz
les
sub
ret
xor
out
aas
add
ret
mov
lret
das
jge
ss
sbb
jecxz
push
ret
adc
push
call
pop
das
lret
aam
jmp
mov
daa
cmc
mov
test
loope
xor
dec
cmp
mov
pop
arpl
popf
cs
out
out
ficompl
aas
imul
cltd
stc
cmpsl
adc
xlat
loop
or
pop
lods
xchg
fcomi
stc
mov
das
fsubl
xchg
and
outsb
cwtl
fmull
ss
pop
add
dec
xchg
pop
xor
lock
rcr
push
mov
cmpsb
mov
js
jle
dec
sbb
pop
mov
jecxz
push
jns
ret
or
sbb
inc
cmc
dec
in
inc
push
cmp
jmp
repnz
sbb
pushf
mov
mov
xchg
cmp
inc
xchg
add
jae
jno
enter
cld
movsb
jns
ret
imul
test
pop
sarb
jecxz
mov
test
pusha
inc
lods
dec
sbb
xor
and
inc
pop
mov
and
xor
js
int3
into
lahf
mov
push
xchg
arpl
pop
cld
mov
pop
lods
repz
cmp
loopne
gs
jo
test
mov
lea
xchg
icebp
cmpb
int3
fdivs
ljmp
in
sbb
popa
aam
mov
xchg
push
rcl
lea
repnz
cmc
sbb
push
mov
or
sub
je
aad
sbbl
dec
inc
push
aas
es
dec
scas
lds
pop
xchg
cmpsb
fistps
xor
dec
mov
add
dec
mov
ljmp
xchg
data16
mov
dec
gs
icebp
subl
dec
mov
scas
leave
pop
insl
mov
push
fdivrs
insb
mov
xor
xchg
ljmp
pusha
mov
xor
sbb
or
loope
pop
mov
lcall
cmpl
loop
int3
sub
lods
add
inc
dec
and
mov
in
sub
fistps
xchg
loopne
call
test
pushf
arpl
sti
mov
pop
xchg
int3
mov
mov
fstpl
pushf
mov
sbb
fwait
push
stos
pop
xchg
sbb
jns
cmp
jp
cmp
mov
repz
push
mov
mov
js
movsl
outsl
xor
pop
test
xor
jecxz
cwtl
mov
mov
decb
stos
shl
aaa
dec
mov
xchg
xchg
fidivrs
jb
rol
cld
inc
mov
fsubrs
xchg
sub
cltd
stos
lahf
sbb
xor
scas
aam
mov
cltd
fstpl
das
adc
jne
cmp
scas
out
xchg
mov
fisttpll
addr16
mov
in
jne
mov
and
rcl
neg
add
add
xchg
xor
xchg
jae
ficompl
adc
xchg
add
or
repz
and
scas
lock
loop
out
dec
je
fadds
imul
xchg
sbb
mov
notb
ss
xor
jo
push
cmp
int3
dec
icebp
xchg
mov
and
sub
push
adc
push
dec
jmp
xchg
cmp
dec
xlat
ret
jg
jecxz
daa
cmp
hlt
enter
add
loopne
pop
push
pop
lods
sbb
and
push
imul
pop
popa
adc
fcmovbe
mov
push
sbb
out
ljmp
nop
inc
cmp
dec
push
movsb
test
je
rcrl
inc
inc
fnstsw
sbb
int
add
jecxz
pusha
cwtl
pop
pop
jecxz
movsb
adc
add
insb
push
cmp
jl
lods
inc
int3
pop
jecxz
sbb
mov
mov
sahf
or
xchg
or
stos
sbb
inc
jno
jbe
outsl
push
xor
pop
shlb
adc
int3
aam
ljmp
dec
and
loop
cltd
repz
push
adc
push
sbb
sub
shlb
ret
mov
xlat
sbb
aad
sbb
xor
les
cmpsb
xchg
dec
addr16
inc
sbb
jne
xlat
mov
ret
ljmp
inc
push
hlt
out
push
xchg
pusha
jno
push
int
sbb
sub
jo
mov
loopne
or
js
repz
sete
outsb
xchg
test
imul
cmp
pop
inc
xor
push
aad
xchg
dec
jecxz
lret
adc
mov
or
enter
cmp
pop
enter
imul
and
addr16
and
es
jno
sub
dec
xor
test
adc
lcall
loope
out
sub
or
mov
or
cli
fwait
sbb
inc
cmpl
popa
dec
and
sar
mov
aam
pop
or
test
mov
xor
lds
xchg
add
and
cmc
pusha
cli
int3
xlat
scas
xlat
ja
adc
mov
lods
stc
inc
daa
popf
bound
mov
fs
cld
sub
cwtl
sub
cmc
cmp
sbb
lods
jnp
in
xchg
mov
sbb
jnp
jno
or
sub
pop
lret
push
cltd
xchg
cmp
jge
subb
loop
stos
jnp
inc
lds
push
leave
mov
add
cmp
mov
sti
xlat
pop
push
mov
jmp
loope
rclb
sub
sbb
sub
dec
mov
call
mov
aad
icebp
icebp
mov
outsl
xor
movsl
fadd
je
es
xchg
sbb
int3
xchg
jb
or
sbb
and
sahf
sub
dec
out
fldt
into
sbb
stc
sbb
xchg
out
cmp
shrb
mov
in
pusha
mov
js
push
sub
gs
leave
dec
in
mov
or
out
cmp
enter
xor
lods
cmp
xchg
xor
jmp
sbb
push
fldcw
clc
mov
out
inc
cmc
add
sbb
frstor
push
repz
pop
enter
ljmp
ljmp
loopne
ljmp
pop
sub
add
inc
sbb
ret
push
mov
int
int3
push
push
inc
lea
jmp
jge
lret
or
scas
mov
mov
pop
and
jne
and
jnp
cmc
jecxz
sbb
ljmp
testb
repnz
aam
sbb
bound
js
pop
add
int
sbb
adc
adc
and
xchg
fnsaves
ja
mov
and
ja
xor
dec
repz
push
mov
add
add
negb
sbb
or
fnstsw
repz
sbb
jmp
inc
lods
sti
loope
fidivrs
xlat
xchg
mov
das
lods
fistpll
call
xor
and
add
scas
or
mov
ljmp
xlat
and
adc
lahf
dec
mov
lret
hlt
mov
fmulp
pop
xor
or
hlt
pushf
loop
sbb
sbb
mov
movsl
xchg
and
pop
shrb
xchg
cmp
sub
adc
rol
jns
call
jl
aad
data16
pop
cld
cmp
mov
pop
mov
aam
and
sbb
movsl
add
ss
mov
loopne
or
cmpsl
push
mov
fstpt
out
cwtl
ret
cli
mov
enter
cmp
cld
ret
movsl
dec
mov
filds
cli
jmp
sti
or
dec
xchg
loop
inc
and
mov
jecxz
fwait
imul
push
push
sub
jp
xchg
jnp
arpl
loope
ss
ja
je
shr
lcall
das
aam
jno
jb
xlat
mov
mov
scas
mov
les
adc
in
add
sbb
dec
dec
orb
test
inc
cmp
ljmp
mov
pop
fcomp
iret
lods
push
mov
add
jmp
jecxz
add
jmp
push
roll
sbb
scas
jp
xchg
dec
addr16
sub
call
xor
sub
cmpsl
dec
les
repnz
pop
push
add
cmp
loope
bound
cmpsb
jg
or
add
lret
lret
cltd
xchg
pop
shrb
xchg
sbb
pop
ret
cmp
repnz
shl
rolb
or
testl
cmpsb
pop
sarl
fldenv
and
fs
sbb
xchg
xlat
cmp
xchg
inc
push
add
fyl2xp1
inc
adcb
pop
jno
or
xor
out
pop
xchg
outsl
aam
add
push
pop
test
mov
jns
or
push
movsl
jge
loopne
mov
and
ret
push
icebp
lea
pop
aas
push
pop
push
mov
adc
out
gs
in
xor
in
jbe
fnstcw
add
xor
xchg
cmp
enter
jnp
fimull
loop
not
mov
jo
cmp
and
push
pop
ss
cmpsb
xor
xchg
insb
ljmp
lcall
xchg
in
fidivrl
mov
add
test
pop
aad
lock
adc
jmp
xchg
aam
xor
sbb
pushf
jg
scas
and
js
ret
mov
fwait
sbb
inc
dec
or
sar
or
test
insl
mov
sbb
mov
cmp
int3
int
jns
mov
fisttpl
pop
sbb
cmpsb
adc
or
test
negl
xlat
sarl
notl
cli
inc
mov
sbb
jecxz
subb
and
jbe
sarb
mov
sbb
push
cld
fdivs
jbe
scas
inc
repz
add
insb
push
enter
aaa
fwait
jns
jp
xchg
sbb
insl
mov
subl
rorb
dec
sarb
test
jnp
mov
mov
movsb
sbb
imul
scas
ljmp
fisubl
lock
fcom
jb
addr16
ljmp
lret
jge
aad
popa
fsubrl
test
pop
leave
pop
call
cld
retw
ret
popa
popa
and
fisubl
xchg
lods
or
xor
daa
sbb
subl
cmpsb
hlt
sub
ret
cs
shrb
sbb
xor
pop
push
ficomps
push
test
push
je
mov
xchg
sub
ja
inc
jns,pt
inc
xchg
inc
and
mov
cli
mov
out
add
pop
sbbl
push
or
jno
test
push
jns
mov
ret
or
addr16
mov
dec
int
adc
or
mov
add
ret
rcll
pop
jp
test
mov
ss
dec
pop
xor
ret
jmp
hlt
cs
mov
mov
sbb
and
mov
addr16
push
imul
arpl
jmp
push
push
dec
jecxz
dec
mov
jo
pop
inc
pop
mov
enter
dec
mov
pop
xchg
inc
rcrb
mov
sbb
sahf
pop
loope
leave
movsb
leave
push
repz
lock
fildl
in
sbb
cs
sbb
xor
mov
in
pusha
rorl
mov
fstp
mov
kunpckwd
dec
roll
adc
jecxz
lret
jle
sub
dec
xchg
mov
ret
and
repz
cli
fs
fxch
mov
popf
mov
jbe
inc
cs
jno
jmp
fnstenv
sub
pop
jmp
lock
xchg
push
xchg
movsb
and
push
in
cmpsb
pop
imul
inc
repnz
ret
mov
pushf
inc
fwait
iret
xor
inc
imul
mov
dec
loop
ret
add
dec
and
leave
shlb
repz
dec
and
or
ss
lret
mov
jno
test
pop
inc
fsub
fistpll
ja
mov
cmp
sbb
xchg
jnp
lcall
push
call
xor
pop
mov
sub
lret
mov
sti
loop
xchg
mov
cli
ffreep
jecxz
sub
dec
repnz
xchg
lahf
aaa
jae
inc
mov
jns
mov
stos
icebp
rol
sbb
or
incb
push
fnsave
add
cwtl
dec
out
and
sarl
xor
or
bound
sbb
int
jl
nop
add
cmovno
dec
outsl
scas
inc
xor
lods
sub
lea
lahf
mov
in
inc
or
sbb
daa
lahf
int3
nop
ss
sbb
pop
insb
adc
xchg
fld1
adc
or
neg
xchg
mov
push
scas
xchg
xchg
sbb
in
fwait
shrb
and
stos
in
mov
ds
xchg
mov
inc
test
sbb
outsl
fsqrt
scas
push
cltd
push
outsl
cmp
stos
in
js
sbb
jecxz
dec
cmp
ret
mov
or
insl
enter
xchg
mov
or
add
rcll
mulb
inc
push
repnz
add
jmp
leave
lcall
scas
sahf
hlt
cltd
outsl
xor
nop
roll
cwtl
mov
sbb
loope
fisttpl
xchg
lods
adc
push
xor
hlt
repnz
push
lds
mov
xchg
data16
sbb
and
popl
test
sub
pop
rorl
pop
dec
fwait
jb
test
sub
cmp
daa
cmpsl
pop
aaa
lods
pop
popf
enter
bnd
fnsave
sub
aam
mov
sbb
cmpsl
xor
stos
leave
fsubr
xor
aad
fs
in
stos
jbe
jg
ret
mov
out
sub
push
adc
or
jg
lods
lahf
negl
jne
sub
fimull
jbe
sbb
xchg
cld
out
lods
mov
mov
push
mov
cmp
and
mov
xchg
mov
scas
lock
pop
pop
cmp
xchg
ljmp
adc
psubusw
xchg
dec
dec
pop
shl
ds
push
cmp
test
and
pop
push
test
je
inc
loope
sub
fistpl
fsin
mov
leave
jno
popf
ffree
sbb
mov
gs
jb
cmp
mov
incl
sbb
pop
push
xchg
ljmp
mov
dec
rcrl
mov
scas
outsl
inc
pop
lds
insb
mov
das
enter
xor
sahf
cwtl
jecxz
or
mov
loopne
fildll
sti
mov
and
mov
out
dec
mov
insb
mov
inc
call
inc
jno
jl
fstps
pop
add
xor
daa
and
lret
ret
out
push
ficoms
push
mov
sahf
cmp
ds
push
ljmp
xchg
sbb
xchg
push
enter
jecxz
and
insl
sbb
fwait
lcall
repnz
in
out
js
xchg
dec
insl
aam
das
fwait
pop
pop
adc
jno
shrl
aaa
jb
roll
call
lock
dec
jnp
std
aaa
cmpsb
fwait
addr16
fcomip
cltd
pop
xchg
scas
push
fistl
mov
mov
push
jno
mov
mov
or
ja
sbb
hlt
test
fists
sbb
jecxz
leave
out
pop
or
mov
addr16
push
pop
push
mov
aaa
push
lds
ds
aad
xchg
outsl
xlat
test
imul
sbb
or
scas
pop
outsb
xchg
fstps
js
dec
hlt
sbb
jno
sti
imul
aas
test
jne
movsb
sti
or
sub
int3
pusha
cmc
iret
sbb
aam
test
mov
xchg
xchg
dec
sbb
rcll
insb
inc
insb
insl
or
fcomp
cmp
xchg
ret
div
push
sbb
mov
dec
add
shr
lea
mov
mov
inc
dec
add
xchg
cs
mov
rorb
lods
movsb
in
xchg
mov
arpl
inc
add
sbb
leave
mov
stc
lret
inc
fldt
or
out
divb
xchg
test
test
lock
inc
mov
add
xchg
sbb
mov
in
shr
js,pn
fcoml
jno
jae
jae
sbb
fsubs
hlt
push
or
adc
clc
mov
std
and
cmp
scas
cld
or
add
lcall
ud2
arpl
pop
pop
cmp
in
ficoml
jo
jg
outsl
xor
and
sti
int
sbb
xchg
mov
inc
and
out
paddsb
inc
scas
xchg
and
in
sbb
popa
dec
repz
xor
movsl
mov
or
sub
sub
push
mov
lahf
lds
popa
fbstp
jne
mov
stos
aaa
xor
push
mov
dec
mov
xor
stos
jg
shll
ja
pop
and
inc
imul
sub
fimuls
and
add
xchg
cmpsl
and
mov
fmull
cmc
ret
sub
jl
aad
pusha
pushf
xchg
xchg
fwait
mov
sub
jb
inc
mov
and
mov
cmp
xchg
pop
mov
sbb
cltd
add
fidivrl
mov
mov
sbb
inc
subl
xor
adc
jp
and
in
sbb
imul
ja
xchg
xor
nop
jbe
jno
pop
sahf
ss
out
jecxz
dec
popa
push
mov
xchg
sbb
push
scas
movsb
and
lds
jns
loope
fmull
es
mov
mov
or
cmc
scas
cmp
mov
das
pop
inc
sbb
inc
sbb
clc
dec
sbb
stos
sbb
jle
mov
and
lret
ds
out
jno
lcall
xor
mov
pop
mov
or
pop
jecxz
mov
mov
sub
xor
and
lret
mov
ret
movsl
ljmp
int
and
mov
test
add
or
adc
mov
cmp
cmp
mov
sbb
adc
das
and
loop
dec
out
dec
repnz
xor
int
sbb
or
fcompl
mov
jno
test
xchg
jo
mov
push
push
inc
sbb
rcrl
push
inc
add
int
ja
push
cmp
jmp
pop
mov
adc
das
pop
or
aad
mov
mov
pop
pop
jnp
sbb
or
pusha
xchg
inc
inc
sbb
lcall
mov
fsubl
push
cmpsl
pop
or
das
jne
mov
push
addr16
sahf
pop
or
sbb
js
add
or
mov
sbb
or
push
into
imul
inc
or
in
dec
lds
sbb
shll
push
fs
fstpl
mov
stos
fistpll
push
inc
push
mov
push
fstpl
pop
add
ljmp
cmp
or
fidivs
sahf
enter
roll
int3
nop
mov
push
ror
xor
mov
cli
ljmp
xchg
lret
fisubrl
push
stos
dec
ss
fs
inc
fmull
fldl2e
stos
clc
popa
mov
outsl
mov
sbb
pop
jb
cli
sbb
test
and
cmp
les
test
xor
adc
nop
sbb
ret
xor
and
insb
mov
or
in
jp
jmp
test
fistpl
inc
and
in
test
mov
pop
lock
jne
jmp
pop
xchg
push
call
and
add
xchg
outsb
jno
gs
push
inc
cmp
cmpsl
ss
xor
into
adc
sarb
repz
test
pop
push
into
xor
shl
or
test
ret
ret
sbb
xchg
insw
mov
sahf
movntps
push
mov
cmpsl
xor
xchg
imul
jnp
sbb
inc
dec
mov
xchg
insb
in
jge
cmp
test
adc
pop
lds
gs
pop
sti
cmp
xor
jno
push
push
gs
daa
mov
in
les
fwait
jmp
dec
xchg
xchg
and
in
negb
xchg
nop
sub
sub
mov
mov
xchg
pop
iret
lds
aaa
xchg
or
movsl
push
pop
cmp
out
ret
sbb
mov
dec
jb
arpl
sub
push
cld
mov
ret
sbb
sti
pop
push
xchg
xlat
or
int3
xor
add
cwtl
cli
adc
add
fildl
xchg
arpl
adc
orb
fwait
es
hlt
hlt
and
pushf
xchg
xor
icebp
xlat
mov
jne
inc
fistpl
inc
mov
jmp
push
pusha
aam
and
or
lds
mov
imul
test
scas
and
jne
in
mov
mov
sbb
add
mov
xchg
xor
fistps
aad
mulb
xchg
jo
mov
stos
je
out
out
leave
push
loope
fcomps
into
cmpsl
add
lcall
addr16
dec
sbb
push
mov
cmc
movsb
cli
leave
stc
lahf
scas
xor
das
xor
popa
outsb
pop
pop
in
cmp
fstpl
jno
sbb
pop
push
repz
fs
dec
pop
stos
xor
mov
sbb
outsl
jnp
mov
adc
push
lret
mov
leave
lret
aas
pop
imul
adc
dec
jae
lret
xor
xlat
mov
push
je
xchg
pop
jmp
inc
xor
loope
jl
mov
std
inc
icebp
mov
data16
push
loop
and
lret
sbb
mov
out
ret
out
inc
popf
mov
xchg
mov
sahf
or
or
and
dec
xor
and
adc
sub
xchg
cli
pop
pop
ja
pop
mov
popf
popa
fdivrl
and
mov
mov
stos
or
cli
pop
mov
leave
lret
or
scas
dec
pop
gs
fidivl
mov
pop
mov
or
jns
xor
pop
mov
lret
dec
sbb
mov
mov
xchg
cmp
sbb
repnz
popa
mov
movsl
push
and
mov
orl
mov
in
aas
lea
dec
loope
lock
imul
xchg
iret
cmc
cld
movsl
mov
push
jp
mov
pop
adc
dec
fcmovu
fidivl
subl
imul
inc
jmp
sbb
subb
popl
fimuls
dec
mov
pop
loop
xor
lods
push
dec
xchg
dec
lret
mov
jns
sbb
pop
in
mov
mov
outsl
xor
movsl
mov
mov
ja
mov
out
dec
jo
mov
fdivrs
mov
fwait
xchg
mov
xchg
iret
aam
sub
sti
icebp
mov
push
mov
sbb
xchg
shr
hlt
rcl
push
pop
jnp
leave
push
imul
ret
fsubr
dec
andb
fstpl
inc
ret
add
mov
cltd
insl
loopne
mov
fdivrs
cltd
out
addl
sbb
dec
xchg
add
push
jmp
xchg
test
mov
fdivs
mov
jae
cmp
nop
mov
sar
inc
lds
bound
loope
mov
les
aam
mov
cmp
stos
and
mov
dec
pop
mov
lret
sbb
sbb
lret
test
hlt
cltd
xchg
ja
jmp
xor
jns
mov
inc
inc
insl
stc
cmc
inc
out
jmp
push
jl
bound
jmpw
pop
lods
mov
fsubrl
scas
movsl
mov
jns
cmpsb
pop
sub
in
jns
xchg
in
dec
enter
jae
movsl
stos
lret
push
fdivl
dec
sbb
lret
ficompl
cld
sbb
lods
dec
sub
sub
test
repz
jle
pusha
xchg
cmp
pop
sbb
push
push
sahf
mov
fwait
aam
jns
popl
fstsw
pop
xchg
icebp
jmp
or
jb
push
and
sub
mov
shlb
scas
or
les
out
fcmovnu
sahf
mov
sub
fs
mov
ret
add
dec
in
jo
je
loopne
dec
mov
inc
in
out
aas
out
shll
stos
cli
gs
ret
shl
out
aam
push
clc
sub
roll
sbb
pusha
push
inc
fldt
ret
ja
xchg
imulb
dec
push
mov
jo
jp
jmp
fcoml
pop
es
dec
jbe
and
or
sbb
fs
lds
cmp
mov
sub
mov
mov
push
sbb
fwait
test
mov
mov
loopne
fcoml
xor
sti
mov
int3
adc
push
outsb
call
ljmp
stc
pop
xchg
hlt
pop
cmp
jno
divl
jnp
repnz
stos
xchg
sbb
mov
std
out
ror
sbb
push
xor
push
stc
movsl
jmp
mov
es
push
in
fstpl
rolb
push
jae
push
std
sbb
jo
addr16
mov
xchg
shll
push
aaa
push
sbb
fcompl
iret
adc
dec
lock
or
cmp
ja
loope
loop
cwtl
pop
adc
mov
scas
sub
sahf
ljmp
nop
fcompl
adc
jmp
cmp
test
dec
fucomip
push
xor
cmpsb
push
ss
test
pop
stos
imul
ljmp
paddusb
push
sbb
push
inc
jg
popa
mov
xor
orb
fnstenv
ljmp
jge
fidivl
sbb
aaa
bound
cmpsb
in
lahf
xor
pop
xchg
sbb
sarl
hlt
jne
jnp
fwait
fwait
sbb
jecxz
xchg
sbb
or
mov
jmp
movsb
fldt
dec
jnp
or
mov
cmp
insb
push
dec
bound
sbbb
out
fldz
lahf
push
es
mov
xchg
ljmp
idiv
out
clc
fisttpl
mov
inc
scas
dec
inc
shll
push
and
repnz
scas
arpl
std
int3
lock
pop
xor
inc
jns
adc
movsb
fsubs
ljmp
sti
loope
shrb
imul
jmp
out
xchg
sub
ss
mov
xchg
out
and
std
ja
jle
jmp
push
jbe
pop
movsb
ds
imull
dec
add
xchg
pop
pop
sbb
cs
xchg
test
cmpsb
pop
mov
mov
mov
out
push
inc
jnp
adcb
cmc
pop
xor
jge
fiadds
cmp
and
sbb
ja
aam
lret
mov
aad
mov
xorb
and
cwtl
fidivs
jmp
mov
movsl
sub
pop
aam
mov
cmpl
jbe
sbb
insb
stos
in
insl
dec
add
loopne
and
ret
inc
sbbl
lea
pop
xchg
push
pop
push
mov
add
fnsave
xchg
xlat
jno
imul
lds
push
sbb
sbbl
insb
imul
inc
dec
sbb
int3
pusha
jb
mov
pop
and
xchg
sbb
sbb
imul
add
out
insl
nop
jb
adc
and
lock
sbb
pop
push
add
pushf
lret
sub
pushl
sbb
rolb
or
xchg
sbb
inc
popa
add
xchg
orb
orb
lock
or
and
xchg
cmp
pusha
stc
dec
and
into
cmpsb
push
sbb
pop
xchg
mov
pop
jno
jb
rcrl
xchg
ja
xchg
add
sub
cmp
pop
loope
sbb
fpatan
jno
or
std
dec
add
xor
cmp
es
pusha
jo
and
sbb
outsl
dec
sbb
jne
or
repz
fnsave
shrb
movsb
pop
negl
sbb
iret
xchg
xor
aam
ret
aas
and
rclb
insb
nop
cmpsb
push
sbb
test
sbb
cmp
in
loop
in
pop
add
or
add
daa
xor
cmpsl
fistpl
and
mov
mov
jmp
jle
mov
fsub
repnz
mov
mov
push
insb
sbb
sbb
bound
cwtl
popf
cmpsb
xchg
dec
xchg
adcb
adc
movsb
cmp
test
ja
hlt
and
lret
addr16
jl
mov
mov
movsb
mov
mov
sbbl
push
les
xchg
mov
ljmp
mov
push
pop
fcoms
sbb
mov
dec
jnp
cmp
pusha
push
cs
out
or
stc
mov
jnp
add
jmp
shll
mov
cwtl
adcb
push
fiaddl
insl
xchg
mov
in
test
sbb
mov
mov
jge
lret
push
adc
pop
mov
cmp
cltd
dec
repz
insb
mov
leave
pop
push
or
ljmp
rclb
ret
lea
orb
pushf
out
xlat
add
sub
pop
xchg
cmp
cmp
xchg
nop
andl
ficoml
decl
pop
mov
js
lcall
push
cmpsb
insb
fdivrs
js
jb
xchg
cs
verr
cmp
bound
mov
mov
mov
and
sbb
sbb
adc
jno
sbb
add
jl
test
mov
clc
ret
aas
xor
push
fstl
loopne
sti
push
into
mov
sbb
movsb
cmpsb
sub
lret
stos
sbb
pop
inc
jecxz
mov
sbb
fcoml
lcallw
stos
cmp
mov
push
or
fldl
pop
sahf
pop
jne
call
pop
adc
pop
xor
fldl
mov
inc
idivl
inc
aad
xor
mov
in
and
cmpsl
jo
and
pusha
fcompl
pop
das
stc
ret
cmp
push
call
pop
nop
cmpl
sbb
fiadds
sahf
popa
or
das
in
lcall
xchg
xlat
sbb
popf
adc
and
leave
repnz
pusha
ljmp
les
add
inc
loopne
xchg
pop
ret
mov
fwait
inc
xchg
lea
sbb
push
mov
add
xchg
repnz
xchg
cmpsb
xor
shrb
jge
loope
add
ficompl
movl
push
xor
lods
int3
loope
cs
adcb
jmp
loop
dec
and
ds
add
sbb
mov
push
sahf
arpl
popf
or
es
ficoml
rcrb
out
ss
sbb
or
push
xchg
fsts
dec
xchg
test
aam
je
add
outsl
dec
addr16
cmp
sbb
gs
pop
ljmp
fnstsw
test
movsb
bound
movl
mov
mov
push
hlt
bound
fdivs
loope
jmp
loopne
test
std
sbb
jmp
aam
lods
sub
mov
int
push
dec
sbb
scas
stos
cmp
in
cmp
mov
mov
dec
xor
xor
sbb
shl
inc
hlt
and
inc
fildl
fsubl
add
sbb
ss
xorl
imul
cwtl
add
pop
mov
in
fnsave
cltd
data16
push
iret
lock
cld
xor
sarb
xchg
out
adc
pop
imul
movl
loopne
out
xchg
or
insb
int
sahf
outsb
scas
sub
dec
mov
popa
sbb
mov
enter
xor
xlat
sbbl
jmp
setno
stos
jne
imul
mov
mov
lods
bnd
pop
pop
push
imul
sbb
and
pop
lods
adc
in
or
jp
add
loopne
and
out
js
sbb
or
imull
test
adc
jmp
dec
jmp
rol
pop
mov
cmp
out
hlt
mov
outsb
test
xchg
outsl
cwtl
or
adc
fimull
ret
int3
std
pop
mov
scas
or
pop
or
cwtl
inc
gs
push
ret
std
sbb
insb
rclb
roll
xchg
or
push
rcr
mov
fsts
lods
mov
jo
jno
addb
imul
in
sub
push
pop
mov
sti
inc
int
and
xchg
fdivrs
mov
or
xchg
sbb
int3
rorl
in
pop
fnsave
push
repz
int3
aaa
sbb
notl
mov
dec
fistps
cwtl
aas
into
sub
xchg
cmp
cmp
out
ds
or
mov
pusha
scas
fidivrl
fmuls
scas
sub
pusha
out
popa
rclb
mov
icebp
inc
pop
rorl
mov
lret
ret
faddl
stos
or
sbb
fcoml
mov
bnd
cmp
xchg
mov
push
sbb
enter
inc
cmp
push
in
and
lret
data16
stos
add
sub
iret
lcall
ret
cltd
stos
lods
lret
jns
leave
dec
jnp
ficompl
sahf
pop
pop
int3
fimull
adc
push
sti
mov
xorl
pop
lahf
lea
jbe
fcmovbe
sbb
mov
and
adc
lods
push
inc
cmp
cmpl
xor
mov
movsb
fstl
xchg
add
sti
mov
sub
sti
inc
jno
mov
add
cmc
inc
jns
std
mov
ss
cld
sub
dec
xchg
pop
lods
int
xor
jmp
in
int
pop
daa
into
and
or
cmpsl
cmp
roll
mov
xchg
push
adc
and
mov
add
jb
jle
and
push
cld
jb
xchg
popf
adc
xchg
fildl
jp
pop
mov
push
mov
inc
lods
arpl
push
imul
sti
or
fisubl
mov
or
in
aaa
mov
lcall
pmuludq
aam
push
cmpsb
das
fwait
mov
inc
shrl
mov
faddl
cmpl
mov
repz
popa
push
jb
in
dec
and
jle
pop
sti
inc
sar
ret
jmp
je
push
fcmovne
add
or
or
stos
sti
rorl
xor
add
in
pop
mov
sbb
adc
shl
jns
enter
cmp
mov
ja
mov
jo
aas
pop
sti
sub
jmp
mov
adc
xor
pop
repz
lds
cltd
mov
subl
jg
or
fcmovnbe
iretw
mov
xchg
cmpsl
mov
pop
int3
mov
in
pushf
mov
inc
popf
add
sbb
pop
stos
aad
nop
enter
add
push
aam
inc
negb
mov
inc
dec
inc
mov
sbb
stos
inc
jns
ret
and
loop
ret
stc
lahf
push
mov
dec
xor
and
inc
lret
movsb
lea
fmul
jmp
xorl
inc
jmp
mov
mov
filds
and
ret
mov
pop
sub
lahf
dec
cmp
jnp
addr16
or
and
ljmp
push
dec
mov
xchg
push
pop
inc
pop
dec
divb
cld
or
push
xchg
daa
dec
jae
ficompl
rcrl
imul
adc
push
jbe
sbb
fwait
dec
lods
mov
cmpsl
add
sti
inc
mov
int
lret
rolb
stc
xlat
push
xchg
out
lcall
cmp
addl
push
mov
int3
sub
or
mov
mov
push
xchg
addr16
pop
int
mov
lahf
mov
jb
jmp
iret
mov
adc
fcmovnu
shlb
sti
pop
std
jp
repnz
gs
inc
ret
test
jmp
lret
inc
xor
xor
out
inc
fstl
icebp
subb
jmp
dec
movsb
mov
addr16
test
sti
fidivl
in
rcrb
xchg
pop
test
fxch
xor
jmp
and
push
jno
decb
std
cmp
mov
mov
inc
in
in
or
ffreep
imul
inc
dec
and
adc
cmp
jg
inc
fwait
in
jnp
mov
outsl
std
mov
rorl
cmpsl
add
sti
jns
and
push
cltd
in
cmpsl
xor
and
shll
pop
fistl
lret
aas
popf
xchg
jge
shr
cmp
or
scas
iret
mov
or
fmuls
mov
dec
jb
jge
aaa
or
into
push
cmpsl
loopne
in
popf
mov
das
insb
dec
jne
imul
shrl
mov
icebp
mov
int
or
jb
pop
scas
mov
out
jb
mov
or
lds
jp
ret
out
fcompl
in
push
int
pop
shrb
dec
cli
mov
roll
stos
jecxz
sub
pop
mov
inc
cmpsl
das
ret
xlat
sbb
insl
int3
vphaddwd
daa
dec
lcall
rolb
jae
sbb
cmp
ljmp
inc
add
sbb
ja
cmpsb
roll
dec
test
fwait
xchg
loopne
pop
lret
ret
jge
cld
in
mov
fimull
push
jmp
mov
mov
mov
jbe
ror
lods
mov
test
pushf
add
jmp
gs
jmp
mov
outsl
mov
ret
fucomi
adc
ret
dec
leave
in
nop
xchg
push
leave
jge
or
andl
add
icebp
pop
xchg
mov
mov
shll
sbb
cmp
std
jno
data16
outsb
sti
jmp
push
ficoml
in
fxch
mov
mov
mov
or
scas
pop
mov
pop
sub
add
jp
popf
inc
fwait
xchg
jp
inc
shl
pushf
push
outsl
clc
push
lret
add
cmp
popf
loope
nop
jns
lds
rol
cli
lcall
icebp
sti
jmp
mov
orl
in
pushf
mov
ret
sbb
push
sub
ret
mov
fucomp
fidivrl
jnp
mov
xchg
es
lret
add
xchg
xchg
int3
sbb
jmp
stos
pop
xchg
mov
dec
insl
mov
aad
xchg
xchg
push
leave
jns
jo
shr
pop
push
adc
ret
xchg
lods
push
test
mov
fdivrl
adcl
xchg
jns
push
sti
xor
push
mov
stos
ret
mov
add
jl
int3
test
es
int
bound
jp
loopne
je
or
inc
loope
icebp
pop
xor
or
jb
loop
push
dec
inc
inc
call
xchg
mov
enter
cmp
jp
push
pop
dec
mov
mov
push
cmpsb
jmp
int
std
xchg
mov
mov
int
mov
pop
lds
mov
lds
cli
or
xchg
scas
call
and
adc
aam
xchg
mov
push
push
push
in
std
int
lds
and
aad
cmpsl
popa
mov
loopne
xor
cmp
out
pop
lret
xchg
dec
xchg
pop
push
mov
lret
add
or
mov
push
bnd
rol
pusha
pop
sub
rol
cmp
push
xor
lret
cmp
push
hlt
adc
fdivrs
int
cmp
push
std
xchg
out
pop
or
es
int
into
enter
sub
jns
ror
int3
cmpsb
jmp
das
dec
jmp
int3
mov
xchg
mov
repnz
outsb
insb
cli
mov
fmull
xchg
rol
pop
mov
pop
ljmp
push
mov
push
pop
jl
icebp
or
jecxz
cmp
sub
push
xchg
dec
popf
mov
xor
loope
pop
addb
int3
jp
xor
add
fmul
aas
jmp
out
jmp
push
or
out
pop
mov
cmp
inc
notl
sti
sti
decb
xchg
jmp
addr16
jge
xchg
test
rol
xor
mov
jo
cmp
jnp
xor
xor
jp
into
cmpsl
subl
js
ret
ljmp
lods
sub
inc
iret
fisubl
jl
out
sti
push
out
xor
cmp
es
or
add
jb
push
mov
cvtps2pi
lret
xchg
mov
add
add
push
sti
int3
ljmp
cs
xor
cmpsb
shll
ljmp
sbb
lcall
imul
aad
or
jae
xor
aam
sub
sti
int
push
outsl
push
inc
dec
pop
cli
jae
aas
fsubrs
cmp
add
lods
dec
cli
push
xlat
push
cmp
xchg
fidivl
imulb
dec
mov
call
mov
pop
mov
jb
vphaddbd
mov
fsubl
push
leave
call
adc
repnz
pop
sub
dec
cmp
jg
inc
icebp
adc
lret
xor
js
sub
pusha
inc
mov
cli
xchg
shrb
fldcw
inc
xor
dec
out
fwait
popf
adc
dec
dec
sbb
adc
int
data16
push
mov
or
arpl
push
add
push
inc
mov
sub
test
sti
add
clc
fsts
hlt
inc
sti
lds
stos
adc
mov
dec
cwtl
popa
jmp
mov
inc
adc
int
pop
cltd
ret
dec
mov
mov
inc
cwtl
jns
or
sbb
lret
inc
in
adc
sbb
cmc
xchg
mov
jg
cld
fld
xor
out
inc
hlt
or
int
cmpsb
fcmovnbe
sbb
cmp
dec
dec
test
sub
gs
repnz
cli
bound
fnsave
fldt
scas
adc
stos
das
and
cwtl
inc
jbe
in
lahf
leave
or
add
mov
aaa
and
lahf
fisttpll
fldt
push
cli
fld
in
push
sbb
paddusw
ret
imul
dec
pop
stos
xchg
jmp
sub
clc
int
mov
cmp
sbb
add
pop
insb
dec
cmpsl
adc
testb
cmp
mov
divb
outsl
dec
je
sbb
fstl
cltd
jne
or
xor
lret
cld
movsl
stos
xchg
mov
ljmp
pop
cmc
incb
mov
es
cmp
dec
dec
lods
arpl
mov
adc
loop
or
cmp
mov
fwait
jl
leave
fst
or
rcll
push
jns
stos
adc
sbb
sahf
dec
inc
sub
pop
rcr
int
mov
mov
mov
xor
dec
lcall
jb
int
jns
xor
ljmp
adc
dec
adc
xor
sub
xchg
or
loope
daa
jl
mov
sub
int
mov
sub
adc
sbb
mov
cwtl
inc
test
lds
or
pop
sbb
jmp
sbbb
icebp
lcall
xchg
jmp
mov
testb
push
push
fbstp
out
xchg
jns
dec
xchg
in
fisubl
stos
repnz
jp
mov
int3
ds
sbb
outsl
in
pushf
jne
mov
adc
fidivrl
jecxz
pop
imul
jne
ret
int3
dec
pop
lea
mov
test
adc
dec
fstpl
fs
and
mov
inc
add
xor
leave
mov
sbb
mov
movl
sub
xchg
fiaddl
fcmove
xlat
fildl
inc
mov
jnp
inc
das
push
fisttpll
fsubrl
dec
inc
pop
loop
and
stos
dec
icebp
mov
inc
xchg
icebp
jp
fsubrs
ret
cmp
clc
outsb
ds
sti
inc
push
cli
ret
jnp
and
rcll
mov
outsb
mov
jg
mov
popa
xchg
dec
jg
push
dec
scas
rcrl
adc
push
xchg
inc
push
and
cmpl
dec
es
cmpsb
push
and
add
push
loop
fpatan
adc
lcall
inc
xor
sub
jg
jp
lds
test
int
push
xchg
adc
and
push
lret
sar
xor
sub
ret
cmp
cli
bound
cmp
je
cmp
pop
rclb
mov
repnz
mov
mov
arpl
cmpl
mov
xchg
jae
cmp
test
je
addr16
int
mov
insb
add
fimull
fdivrp
sti
pop
jns
stos
mov
xchg
nop
push
or
xchg
gs
call
sbb
dec
xchg
shr
fs
or
mov
inc
lds
xor
es
daa
mov
sbbl
je
or
bnd
mov
out
push
sub
mov
push
sub
mov
mov
jmp
lock
rcll
jp
sub
lcall
addr16
in
lret
ljmp
aas
jmp
or
cli
sbb
mov
lret
jns
push
scas
hlt
int3
jmp
xchg
icebp
test
pop
jno
clc
lahf
cltd
popf
push
jp
dec
xor
mov
jp
push
inc
out
jns
mov
sub
xchg
aas
fstpl
and
jl
xor
addr16
sti
int
push
dec
xchg
pop
ret
inc
adc
add
mov
push
out
xchg
mov
aaa
mov
ret
push
pop
insl
sbb
mov
arpl
adc
int3
mov
pop
adc
das
adc
or
dec
mulb
adc
fadd
es
pop
push
adc
bound
dec
es
ret
and
mov
nop
ficompl
call
cs
repz
inc
addl
loopne
cmpl
add
push
adc
into
data16
jb
cmpsb
ret
sahf
or
fstps
cmp
dec
stos
push
imul
xchg
or
push
daa
add
dec
jae
xchg
pop
sbbb
sbb
and
sbbb
cmp
hlt
xchg
adc
push
mov
pop
arpl
cmc
mov
mov
jno
dec
testl
das
fwait
ret
lea
or
js
adc
pushf
pop
aam
sub
xchg
es
int
fidivrl
cmc
idiv
push
orb
ficompl
mov
cmp
popa
ret
lret
or
cld
sub
test
mov
int
divl
ljmp
mov
push
repz
int3
test
pop
sti
xchg
leave
xchg
scas
jp
dec
lret
jae
push
int3
dec
loope
inc
js
inc
pop
fcom
repnz
cli
adc
or
int
pushf
mov
rorb
sbb
stos
ret
jns,pn
fbstp
in
loopne
cmp
inc
jbe
jnp
dec
inc
jp
or
aaa
loopne
add
arpl
sub
pop
test
into
dec
test
fiaddl
fisubrs
mov
int
icebp
sti
mov
cmp
sub
or
jmp
cli
mov
pop
sbb
add
cli
mov
mov
cmp
cmp
int
cs
pop
inc
int
rol
xor
xor
dec
jge
dec
fistl
adc
sahf
leave
out
add
push
xchg
arpl
pop
or
jp
dec
stos
arpl
movsl
add
dec
lds
jmp
push
cmp
inc
into
sub
jb
rorl
cli
fiaddl
mov
enter
in
arpl
pop
lods
jne
jo
decb
int
inc
loop
mov
lret
add
push
icebp
or
enter
mov
push
pusha
aas
cmp
jb
push
xor
cmp
sbb
sub
out
push
push
mov
cmpl
xor
add
jmp
mov
jbe
sbbl
ret
lret
adc
aas
adcl
frstor
nop
aas
add
adc
imulb
rcrl
pop
sbb
xchg
iret
stc
roll
test
sub
or
cmp
sti
pop
jae
sarl
add
lret
pop
dec
jne
fidivrl
cmp
lcall
iret
add
icebp
in
add
dec
adc
add
leave
jecxz
and
xor
loopne
fldl
sbb
jge
lret
dec
push
xlat
mov
stos
popa
addl
lcall
sbbb
jae
push
adc
ja
in
imul
or
and
sub
pop
insb
andb
fldenv
jmp
pop
dec
ljmp
dec
stos
fiaddl
rcrl
movsb
fbstp
xchg
shrl
int3
xor
sbb
xor
stos
fcmove
ja
std
daa
xchg
adc
dec
push
push
xchg
sbb
aaa
out
adc
ret
sbb
or
inc
es
nop
mov
and
push
icebp
mov
xor
mov
mov
push
xlat
inc
rorl
jno
sub
fwait
mov
add
les
rcr
cmp
insl
shl
call
icebp
mov
int
sub
outsl
cmc
ss
or
adc
daa
cmpsl
data16
xchg
jno
fdivl
mov
fxch
dec
enter
adc
jnp
lea
repnz
xchg
sub
inc
cmp
jne
jg
aas
xor
or
pop
imul
jb
sbb
xor
fsubr
aam
add
or
pop
pop
push
adc
aas
push
mov
in
xor
mov
xor
or
push
outsl
adc
in
adc
sahf
aam
push
sahf
push
imul
cs
mov
sarb
jmp
lret
xor
call
push
shlb
xor
data16
push
repz
xchg
call
out
adc
fldl
fisttpll
sub
andl
push
mov
aaa
in
sbb
inc
cmp
pusha
inc
ret
sti
jmp
push
js
mov
add
sub
sbb
xchg
cmc
xchg
insb
sbbb
xchg
sub
testb
adc
add
andl
push
pop
xchg
jecxz
out
and
loope
xchg
testb
insl
lds
clc
xchg
jno
mov
sbb
cmp
ret
int
shl
dec
cli
test
lret
jg
xchg
xchg
nop
and
ja
xor
shrb
ss
sub
sbb
pushw
dec
loop
clc
push
push
bound
jg
and
iret
xchg
into
pop
loop
nop
outsl
xchg
mov
movb
or
push
fs
mov
adc
int
mov
xor
push
or
test
pop
push
pusha
and
lcall
cmc
nop
int
ret
pop
out
adc
jg
fwait
dec
fwait
rcl
mov
jo
push
lret
dec
push
pop
ja
loopne
jae
aam
fdivr
push
or
cltd
pop
aas
fisubrl
xchg
fsubrl
cmp
subl
cmp
jle
pop
jo
cmp
xchg
mov
mov
daa
mov
into
sbb
dec
aas
bound
fs
cmp
jb
out
push
dec
dec
pop
pop
mov
loopne
add
push
sbb
dec
push
mov
mov
pminsw
scas
repz
push
adc
push
xor
dec
jecxz
int
or
sbb
js
pop
jns
mov
sbb
cwtl
mov
xor
je
imul
fsubl
mov
xor
fldl
enter
lods
loope
xchg
in
inc
lea
xor
inc
mov
pusha
pop
outsb
int
jnp
xchg
cmp
jmp
pop
sbb
and
test
cmp
shll
lock
fucom
lea
push
push
aaa
xor
ret
leave
add
mov
int
cmp
lret
xchg
sbb
aam
mov
insb
adc
xlat
lret
sbb
out
sahf
stos
add
out
hlt
add
scas
loope
xchg
cmp
and
jle
sbb
fdivrs
or
ss
adc
ret
cli
repnz
and
clc
dec
adc
pop
ret
mov
in
or
ss
ret
sbb
iret
rcll
xchg
mov
pushf
sbb
push
and
popf
push
popa
mov
sbb
dec
adc
movntq
out
jge
shlb
mov
cmp
and
aas
lock
mov
aam
xchg
mov
ficompl
jns
xchg
stc
scas
xor
ljmp
dec
mov
add
rorb
fdivrl
xlat
sbbl
cmpsb
mov
jmp
mov
fmull
iret
xchg
lahf
xchg
out
nop
mov
lret
push
aaa
mov
gs
out
sbb
js
and
xor
aaa
jbe
shll
mov
xchg
cmp
rcrl
push
mov
ss
lds
mov
gs
xorl
add
and
push
daa
ljmp
xor
push
and
adc
xchg
xchg
pop
in
pop
xchg
les
xchg
insl
std
jle
xorl
cmp
sahf
lret
inc
push
ljmp
jae
mov
shll
pop
or
int3
push
fdivs
dec
jg
arpl
jmp
push
or
lds
mov
pop
dec
xchg
in
mov
pushf
mov
sbb
popa
xchg
or
jne
ss
pusha
inc
lock
jno
lods
and
sbb
push
out
fwait
sahf
or
sarl
adc
je
dec
fwait
scas
out
sbb
push
fistps
stos
aad
loop
hlt
pop
ljmp
cmc
loopne
sti
sbb
ficomps
lock
loopne
sarb
jecxz
inc
in
pop
aaa
or
mov
inc
mov
sbb
sbb
sbb
out
aas
imull
jmp
jae
out
cwtl
cmpsb
mov
inc
sub
mov
in
pop
stos
outsl
rorl
fidivrl
test
pop
mov
sbb
stos
aam
iret
xchg
sub
in
lret
cmp
xchg
or
leave
cs
mov
outsb
mov
inc
pop
fwait
jb
add
out
movsl
iret
dec
cmp
je
test
bound
inc
divb
sbb
pop
pop
ret
rcrl
stos
dec
lods
mov
mov
mov
mov
je
in
push
xor
insb
cmpsl
jns
push
shrl
sbb
cmp
enter
mov
pop
pop
or
sbb
sbb
dec
repz
jl
jb
inc
fsubrl
dec
dec
pop
scas
sbb
and
push
hlt
dec
add
mov
mov
test
jmp
test
sbb
xlat
popf
or
scas
es
loope
inc
imul
xchg
bound
mov
or
sbb
je
out
fsts
xchg
fiaddl
push
out
ret
xchg
or
mov
pop
ss
ficomps
pop
sbb
lret
add
add
int
or
adc
int3
fwait
sbb
pop
enter
mov
out
mov
fwait
sbb
jb
adc
les
insb
out
lcall
outsb
xchg
mov
lock
sub
push
frstor
pop
fbstp
mov
cmp
xlat
ret
mov
clc
imul
and
test
aas
jnp
xor
das
ljmp
sub
aad
sbb
xchg
fnstsw
imul
adc
add
sbb
fistl
repnz
adcb
push
call
mov
sub
adc
int3
sarl
ljmp
fisubs
int3
outsl
popa
scas
add
pusha
imul
adc
cmpsl
out
fmul
mov
cmc
push
xor
shll
mov
cli
mov
out
cmp
cwtl
and
out
loopne
xorl
xchg
fstpl
push
push
xor
jg
ss
nop
and
les
ret
push
mov
divb
xchg
sbb
sahf
leave
iret
scas
xor
sub
mov
jp
in
jecxz
cmc
jae
popa
rcl
addr16
jns
jae
or
adc
lcall
push
sbb
and
inc
add
adc
push
add
lret
xor
xor
leave
cmp
mov
pop
jp
jg
leave
fsubl
push
js
mov
cmp
jno
or
mov
sarb
xor
lret
into
cmc
and
imul
xor
mov
scas
int
out
sbb
outsb
test
add
dec
ret
pop
sbbl
daa
fstp
sarb
out
std
and
and
lret
push
mov
cmp
sarl
jbe
test
aaa
push
lret
or
cwtl
pop
lret
inc
mov
rcl
lret
or
jb
outsb
lret
les
adc
lret
cmp
out
loopne
push
orb
repz
push
mov
int
imul
cmp
lret
sti
xlat
mov
lret
lods
add
into
mov
mov
ret
ds
lret
std
dec
or
insb
or
and
stos
shr
lret
xchg
out
loop
nop
lretw
push
mov
rorl
jg
es
inc
jge
and
jmp
lea
jle
cmp
and
pmuludq
dec
jmp
sti
mov
int
loop
in
jb
push
dec
cmp
mov
add
cmp
mov
in
adc
or
inc
fs
mov
lret
xchg
fimull
in
lret
int
pop
add
enter
imul
lret
ja
rorb
mov
call
aam
inc
pop
sbb
int
pusha
test
test
sub
push
mov
dec
daa
xlat
rcl
jg
das
jp
cwtl
xchg
sub
push
js
dec
ret
imul
sub
outsl
mov
pop
scas
loope
push
cwtl
ret
iret
loopne
movsl
adc
cmp
inc
mov
mov
sti
fnstenv
les
cmp
lret
sahf
aad
add
or
imull
mov
jnp
clc
lret
clc
ret
sahf
loop
add
out
call
jge
movsl
lret
shl
pop
jmp
sarl
out
mov
mov
jne
ss
pushf
sub
dec
insl
aaa
cmc
sbb
lret
sbb
pop
add
in
gs
pop
mov
mov
mov
push
outsl
lret
fwait
pop
fdivr
arpl
or
and
stos
jecxz
in
jae
sbb
lret
popf
lcall
fisubrl
iret
push
and
xchg
out
jno
rcll
jbe
lret
int3
mov
xor
and
mov
xchg
into
pop
test
fsubl
bswap
lret
shlb
gs
dec
imul
ss
push
add
cli
cmpb
and
icebp
lret
pop
mov
cmc
idivb
push
addr16
std
lock
ret
xchg
rcr
push
lret
pop
inc
sar
stos
das
imul
lea
adc
pushl
fwait
mov
nop
out
pop
les
push
shll
xor
insb
cmp
test
push
stos
fmul
clc
pop
pop
mov
pushf
negb
fdivrs
or
mov
mov
ljmp
jbe
sbb
push
lret
imul
lahf
lret
enter
rcrl
jge
orb
mov
faddp
push
ja
leave
push
dec
std
pushf
xchg
add
mov
cmp
mov
leave
repnz
add
ds
out
mov
ror
fsubr
sub
sbb
jb
fcoms
addr16
push
cmpsl
xor
lods
jecxz
insl
outsl
mov
gs
adc
or
orb
mov
stos
sub
push
or
clc
lret
lcall
and
insl
or
lret
in
cmp
xchg
or
jno
gs
test
push
lret
inc
cmc
pushf
outsb
jle
pop
xchg
lret
movsl
in
lahf
fwait
jbe
pop
movsb
int
adc
jle
stos
bound
jecxz
push
xor
fistpl
loop
jl
imul
leave
cld
jae
cltd
gs
jp
push
mov
and
inc
xor
repnz
pop
cmp
mov
mov
push
aas
or
xchg
idivb
pop
scas
repz
and
inc
enter
adc
jno
arpl
in
push
lcall
fidivl
add
stc
daa
ds
pop
sub
iret
movsl
mov
and
pop
jp
mov
mov
mov
lret
cmp
push
push
sub
cmc
xchg
fldenv
lret
repz
sbb
shrl
xchg
dec
mov
add
lret
sti
imul
jle
stos
push
mov
mov
or
call
push
stos
mov
pushf
adc
gs
pop
sub
jl
lods
cli
inc
in
cmp
ret
fbstp
jne
mov
mov
dec
xchg
xor
lret
sub
dec
repnz
mov
test
loop
jle
mov
cmp
int
xlat
loopne
mov
movsb
jno
jbe
mov
xor
aad
sbb
adc
and
imul
push
add
daa
shrl
adc
in
lret
icebp
rcll
inc
lret
mov
sub
repz
jnp
push
stos
jecxz
nop
ljmp
idivb
subb
rorb
in
pop
pop
lret
jg
jb
sub
pop
adc
test
lret
into
aaa
rorb
int3
push
lret
cltd
cmp
inc
fisttps
insl
add
mov
lret
adc
jbe
repz
outsb
dec
aam
mov
in
xchg
lret
inc
fnclex
add
or
adc
cmpsb
jno
imul
mov
test
push
xor
ljmp
sub
lret
sbb
xor
daa
aaa
inc
and
lock
jmp
leave
xchg
xchg
addb
fldcw
cwtl
out
sub
shll
lret
sbb
or
jmp
or
dec
push
int
sti
mov
and
lret
mov
or
fwait
ret
mov
rolb
iret
mov
sbb
lret
loop
fcom
cli
test
or
cmp
orb
fcmove
mov
imul
mov
mov
cli
inc
dec
sahf
inc
jb
cmc
stos
inc
lret
gs
cmp
sbb
call
outsl
lea
xchg
outsb
dec
mov
aaa
lret
sub
inc
add
ret
mov
mov
sbb
stos
int3
mov
push
mov
bound
xor
mov
lret
in
and
mov
push
adc
out
push
lret
cs
xor
xchg
aas
sbb
pop
pop
lret
outsb
jg
sbb
pop
and
sbb
xchg
sub
xchg
xchg
jg
cmp
jecxz
jns
mov
ret
sbb
inc
mov
mov
xchg
push
stos
sub
cmp
cli
adc
iret
dec
inc
adcb
rorb
mov
sub
dec
or
lret
mov
lods
icebp
and
xor
xlat
or
jg
lret
ret
ljmp
int
xlat
repnz
mov
mov
cmpl
or
fs
mov
pop
xor
popa
lret
enter
adc
adc
stos
insl
fs
lret
mov
lds
pusha
sahf
jle
decl
mov
add
flds
dec
jnp
xor
add
inc
dec
test
mov
or
mov
std
nop
inc
call
cld
pop
iret
jno
and
xchg
jo
pop
xchg
and
dec
cli
lret
pop
movsl
lret
add
xor
repz
lret
jo
leave
lahf
adc
aaa
mov
iret
ret
sbb
mov
mov
test
ret
lcall
in
adc
es
mov
jne
in
insb
inc
adc
and
fnstenv
imul
cmp
mov
sarl
dec
lret
repnz
outsl
mov
jns
std
xor
or
adc
pop
lock
enter
int
sbb
adc
divl
mov
test
sub
xor
and
outsl
or
xor
test
cli
and
sbb
aam
mov
outsl
rcll
mov
loope
fs
and
out
inc
test
mov
fsub
xlat
pop
and
test
jecxz
cs
in
rclb
cmc
movsb
rol
sbb
pop
sar
rcrb
test
mov
dec
sbbb
inc
andl
rcrl
and
pop
jle
mov
fsubrs
notb
mov
std
inc
cmp
rcrl
lret
or
push
sahf
test
xor
fisttpll
mov
cwtl
jae
mov
jno
jo
adc
sahf
in
add
push
orb
loopne
sti
mov
repnz
cmp
sbb
sar
arpl
sbb
dec
dec
fcomps
pop
mov
pop
adc
mov
jnp
in
xchg
adc
and
pop
mov
mov
test
loop
mov
jecxz
pop
mov
jg
loope
jnp
leave
shlb
faddl
add
xchg
add
in
lock
leave
aad
xchg
mov
hlt
and
pop
pop
int3
mov
adc
pop
dec
pushf
add
mov
inc
fcmovu
sbb
js
mov
jne
cmp
jmp
int
cltd
std
nop
mov
enter
sbb
fidivrl
pop
push
adc
cli
cmp
fistl
cwtl
inc
loop
out
sub
inc
pop
loope
out
in
or
or
or
in
sbb
jno
or
insl
and
push
jb
scas
xchg
inc
test
push
dec
daa
sbb
push
cmp
and
jecxz
cs
lret
lret
cmc
popa
sbb
xchg
ss
pushf
xor
xor
cmp
mov
push
and
les
repnz
test
pop
xor
xorb
jnp
cld
lret
int
icebp
or
test
xchg
push
icebp
movsb
idivl
test
es
mov
push
aad
xlat
repnz
mov
int
dec
lock
xor
or
movsl
xlat
test
and
mov
es
shr
cmp
mov
dec
popa
mov
repz
repnz
test
pop
mov
imul
jb
add
sti
xor
sub
rol
test
pop
dec
xor
int3
xor
fmull
pop
sbb
sbb
daa
popa
add
fstpl
or
cmp
aad
sbb
and
or
ret
mov
ret
and
or
insl
leave
jno
test
clc
cmpsb
inc
or
fcmovnu
sbb
xchg
pop
or
and
mov
daa
dec
fcompl
pushf
bound
xchg
in
test
or
shrl
cmpsb
cld
sbb
push
aaa
push
into
adc
scas
es
orb
cmp
icebp
or
inc
adc
inc
sbb
pop
cltd
or
xor
and
ja
xor
ljmp
fists
dec
sbb
pop
mov
sbb
outsl
ret
sbb
int3
loope
xchg
subl
sbb
push
adc
ret
adc
pop
inc
loopne
mov
fmulp
je
in
inc
rcrb
sub
ljmp
dec
xor
push
push
fcmovbe
mov
scas
orl
out
les
xorb
pop
fildll
push
mov
sub
in
ret
inc
jbe
scas
jb
sbb
sbb
sbbl
xchg
or
pop
bound
test
sbbb
mov
cltd
aas
xor
xor
cmp
maskmovq
imull
jle
push
sbb
and
push
out
mov
rcll
sub
cs
negl
imul
out
cmp
adc
xchg
inc
push
ss
es
sbb
push
inc
cmp
or
imul
mov
fcomps
ret
mov
es
and
inc
stos
int3
and
leave
push
xor
mov
jmp
jb
jp
dec
in
push
rorl
push
jecxz
jns
push
test
mov
jne
push
test
jb
roll
rcrb
mov
hlt
ljmp
push
cmp
mov
addr16
mov
ret
mov
cmp
cmpsl
xor
mov
ja
inc
add
pop
test
sbb
pop
mov
arpl
add
test
gs
ss
sbb
pop
fdivrl
mov
push
xor
mov
stc
push
inc
cmpsl
dec
mov
sbb
push
xor
imull
jnp
mov
xchg
push
outsl
cli
add
fisttpll
pop
and
mov
addr16
int3
and
out
pop
push
shrl
jns
xor
fsubrl
idivb
dec
ret
xchg
jp
repz
dec
ret
pop
fsubs
jp
negb
inc
rorb
pushf
imul
inc
stos
mov
mov
repnz
ret
movsb
cmp
loop
test
repz
xchg
rcrl
cmpsl
testb
push
fcoml
dec
fiaddl
sti
test
lret
and
sti
shl
xor
fs
sbb
push
add
sbb
sbb
out
jecxz
lock
jp
add
fidivs
ret
xor
out
jmp
ja
sbb
fnstcw
repz
aam
dec
pop
or
fnstsw
mov
cmp
out
xor
dec
cs
repz
xor
add
out
call
dec
addr16
sbbb
and
fdiv
mov
pop
cli
xchg
int
cmp
cmpsl
movsb
jb
sbb
mov
push
sahf
repnz
sbb
scas
cwtl
mov
dec
cmp
mov
popa
dec
xchg
sbb
pop
imul
xor
je
sbb
movsl
lahf
xchg
pushf
mov
or
mov
js
inc
push
cmp
roll
push
pop
fildl
mov
jns
jae
push
jns
ret
arpl
scas
sbb
sub
movsb
jl
nop
jl
fstl
xor
cli
xorb
cmc
adc
mov
dec
mov
mov
push
stos
cltd
ljmp
cmp
add
jmp
fidivrs
lock
push
stos
add
sahf
int
out
pop
sbb
or
ja
ss
mov
cmpsl
clc
add
push
xchg
pop
arpl
scas
push
adc
cmp
sbb
jle
cs
push
out
cmpsl
inc
ds
sbb
and
arpl
pop
lret
push
shlb
xchg
or
mov
pop
mov
jo
push
call
ljmp
cs
xor
dec
shlb
lret
fcomps
shl
jne
popa
pop
mov
jmp
mov
int
into
mov
cmova
jl
rcr
adc
fcmovnb
jmp
hlt
mov
popa
jne
mov
dec
xchg
jecxz
cmpsb
xchg
fnstenv
jl
insl
pushf
and
xor
pop
sti
mov
push
mov
stos
dec
mov
pushl
fstps
push
dec
mov
dec
in
std
movsb
outsb
ret
daa
xor
mov
shlb
jns
popa
sbb
lods
fbstp
sbb
dec
int3
cmp
cltd
scas
lods
lods
lods
lea
xchg
push
xchg
shrb
jmp
sbb
popf
out
sub
and
cmp
fstpl
adc
and
push
imul
dec
icebp
lods
mov
xchg
fcomps
pop
aas
fstps
inc
iret
xchg
popf
insl
xor
inc
in
mov
xor
jle
jnp
bound
sbb
push
add
jnp
mov
cmp
push
dec
sbb
scas
xchg
pop
adc
dec
pop
testb
cmp
ja
fistpll
iret
sbb
dec
test
loope
fimull
or
add
cld
and
sbb
jecxz
jb
pop
lcall
gs
test
cmpsl
outsl
push
and
stc
jne
call
pushf
mov
ss
setnp
adc
xchg
movsl
jle
pushf
adc
sbb
out
sbb
push
push
xchg
outsl
jno
pop
pop
mov
or
jb
adc
out
cmp
lock
mov
mov
outsb
in
jne
pop
and
inc
pop
mov
fisttps
jne
repz
inc
jne
or
mov
stos
mov
popa
je
lahf
fstl
add
popa
push
aam
jne
loope
and
pop
icebp
ficoms
mov
les
in
sub
popf
fnsave
arpl
dec
jg
test
outsb
dec
rcrl
stos
js
out
aam
adcl
cld
test
sbb
push
mov
mov
sub
rcl
ret
push
repnz
addr16
dec
mov
xor
shr
push
icebp
icebp
scas
adc
sub
xchg
adc
mov
sbb
xorb
les
sti
sbb
aas
fsubr
test
ret
and
imul
mov
sbb
repz
mov
fwait
pop
push
jmp
jbe
sbb
mov
outsl
and
pop
inc
icebp
ret
pushf
mov
dec
unpckhps
dec
notl
sub
or
pop
sub
sbb
and
pop
pop
aam
mov
push
mul
push
clc
popa
jae
inc
mov
and
sbbb
xchg
push
cmc
je
jne
int
clc
jl
adc
cmpsl
sbb
mov
mov
ds
std
mov
mov
jbe
jmp
subb
dec
sbb
xorb
or
outsb
pop
mov
and
nop
sbb
imul
jg
cmp
roll
cmpsb
xorb
in
cmpsb
sub
fcomps
push
int
xlat
jb
inc
cmp
mov
cmp
imul
test
push
insl
movsl
icebp
movl
jmp
push
dec
ds
aad
sbb
mov
popa
cmc
fs
and
addr16
iret
ljmp
jl
fldcw
cld
add
xor
jp
mov
pop
inc
mov
sbb
pop
loopne
cmpsl
or
push
in
mov
mov
sbb
pop
push
stos
xchg
scas
es
pop
or
in
fsubs
mov
rolb
dec
jmp
jno
ljmp
or
mov
rcl
rcrl
cli
add
sahf
xlat
leave
jl
mov
pop
jmp
fildl
int
das
mov
jmp
jecxz
jne
fmull
jge
xchg
pop
mov
cmpsl
aam
clc
pop
dec
jp
mov
push
aaa
jnp
repnz
shl
int
cwtl
or
testl
pop
ljmp
loopne
mov
jmp
xlat
lods
addl
jmp
rorb
fbld
adc
test
add
movsl
leave
lahf
pop
add
std
mov
fs
lods
mov
or
or
pop
dec
pop
mov
scas
daa
enter
shll
fldt
clc
add
sbb
cmpsl
ja
pop
test
mov
add
jle
lea
mov
insl
dec
xor
sub
mov
push
call
mov
jbe
ja
mov
adc
fwait
mov
call
and
mov
leave
fs
pop
lods
mov
mov
imul
add
sub
mov
jns
adc
in
sbb
adc
jno
mov
pop
cmpsb
nop
ret
fldt
test
inc
pop
pop
movsl
repz
lahf
pusha
rolb
ljmp
cltd
mov
shr
scas
cmp
aas
push
add
or
out
stos
daa
mov
mov
cmpsl
mov
out
insb
push
jp
mov
xor
lahf
xchg
mov
mov
sbb
pop
mov
pop
repz
xchg
orl
mov
pop
xlat
scas
daa
xchg
and
fs
in
sbb
mov
mov
jno
scas
xorl
andl
adc
mov
cs
mov
test
outsl
dec
aad
cmpsb
ljmp
mov
push
inc
jmp
push
push
stos
sub
sarl
ficoms
outsb
dec
std
mov
cs
mov
mov
iret
mov
jns
icebp
mov
iret
fistpll
sbb
lods
mov
jb
fadds
mov
cmpsl
repnz
inc
test
cmpsl
aad
out
sub
lea
repz
imul
repz
mov
or
add
shl
add
adc
sahf
cld
cmp
stos
imul
fwait
outsb
push
sbb
pop
scas
daa
and
mov
ror
xchg
addl
pop
sub
mov
adc
je
add
mov
sar
jp
fnstsw
divl
pop
adc
or
rorl
xor
xor
mov
movsl
pusha
jle
repz
in
jnp
mov
hlt
push
xorl
pushf
insb
and
cmp
aaa
hlt
into
std
adc
cli
imul
mov
xlat
loopne
push
out
hlt
cmp
pop
cmpsl
jnp
mov
xchg
daa
sbb
lahf
addr16
adc
or
es
lea
lods
cs
andl
add
sbb
or
mull
or
lahf
jo
sbb
inc
mov
test
pop
push
cmpsl
daa
jo
sub
out
iret
mov
mov
mov
inc
mov
add
hlt
push
mov
mov
sub
pop
mov
fbstp
ljmp
repnz
aaa
add
ljmp
leave
movsl
daa
push
shll
xor
sbbb
daa
inc
repz
or
inc
shrl
push
mov
scas
daa
and
shr
mov
push
add
lods
mov
add
out
mov
mov
aaa
test
fs
mov
clc
push
mov
or
imul
lea
insb
push
jp
lods
repz
rcl
mov
jbe
aam
stos
jg
mov
cmpsl
dec
fisttpl
out
pushf
es
inc
inc
add
notl
and
rorb
scas
add
inc
jecxz
arpl
stos
push
add
lods
xchg
jg
outsl
mov
repz
movsl
sbb
mov
or
mov
add
cld
ljmp
add
inc
mov
mov
sub
pop
dec
ret
xchg
dec
aaa
stos
inc
lods
or
mov
mov
inc
nop
cmp
leave
inc
std
scas
jb
jno
test
sbb
stos
ss
lods
mov
repz
test
mov
js
cwtl
lahf
lret
mov
iret
loope
inc
jno
mov
add
mov
dec
mov
pop
mov
ret
mov
call
mov
pop
pop
jae
mov
cli
xor
repnz
arpl
and
jl
iret
jecxz
fimull
into
sbb
adc
mov
add
insb
mov
or
dec
ja
into
mov
jl
add
mov
jge
mov
leave
dec
cmpsl
adc
mov
mov
adc
shll
xor
jmp
jg
int
mov
mov
inc
mov
sbb
push
mov
inc
daa
aas
and
jp
fcompl
stos
ljmp
dec
imul
mov
mov
xchg
mov
mov
daa
call
scas
pop
push
mov
pop
sub
in
imul
stos
ljmp
test
frstor
lahf
repnz
cmp
mov
mov
je
repnz
hlt
push
ret
imul
mov
orl
dec
ret
stos
mov
popw
dec
sbb
daa
rcll
sub
pop
movsl
sbbl
mov
pop
add
add
jg
sbb
mov
cltd
push
pinsrw
fadds
pop
jnp
stos
daa
loope
mov
out
aas
movsl
fcomps
lea
mov
jae
and
add
jmp
xchg
stos
push
ljmp
lds
iret
pop
test
sbb
sub
mov
mov
iret
popa
mov
sti
mov
movsl
imul
les
lahf
push
dec
cmp
mov
lods
test
push
push
xchg
add
lcall
inc
add
dec
jl
fbld
movsl
repz
dec
hlt
adc
cmp
mov
xor
ljmp
loop
scas
jl
sub
ret
stos
dec
ret
xchg
dec
sti
add
into
cli
lods
jbe
inc
cmpsl
scas
ljmp
mov
popf
lret
cltd
mov
add
mov
cmp
lret
mov
mov
scas
pusha
stos
movsb
test
fcmovnu
lret
stos
lods
dec
pop
enter
call
imul
frstor
mov
mov
mov
shl
subl
cmp
xchg
jmp
mov
call
dec
add
sbb
mov
movsl
popa
dec
into
inc
jp
lahf
repz
jo
in
mov
mov
pushf
mov
pop
repnz
mov
mov
hlt
mov
hlt
mov
scas
inc
jnp
mov
call
xchg
mov
iret
loope
push
ljmp
test
in
fidivs
mov
sub
rcrb
jmp
stos
pop
add
jbe
pop
call
or
xor
push
repz
inc
mov
fcompl
loop
repnz
shl
push
xchg
std
subps
test
pop
or
xor
cmp
outsl
xor
repz
icebp
lahf
push
das
stc
mov
mov
pop
or
jmp
pop
iret
aad
dec
dec
xor
push
scas
iret
mov
add
push
mov
inc
mov
mov
aaa
pop
out
mov
movsl
adc
cmpsl
mov
mov
mov
imul
lahf
adc
mov
mov
mov
jne
es
mov
cmpsl
mov
xchg
xchg
jb
mov
inc
outsl
subb
mov
lods
insl
xor
pop
lcall
mov
jg
xchg
add
mov
mov
mov
repnz
in
xchg
mov
int
pop
mov
or
sub
xchg
hlt
sarb
add
pop
movsl
call
imul
inc
add
mov
xchg
or
loop
pop
push
lcall
xor
mov
lea
movsl
hlt
cmc
iret
lahf
mov
mov
mov
daa
daa
repz
mov
xchg
stos
int
mov
mov
pop
cmp
rorb
mov
cmpsl
push
dec
into
fsubs
inc
loope
mov
outsl
int
icebp
mov
imul
pop
loop
repz
push
shr
gs
out
mov
mov
or
push
jnp
dec
int
xchg
cmpsl
xchg
test
rorl
repz
mov
dec
ds
push
notb
addr16
cmp
stos
xor
pop
lods
sub
sarl
pop
pop
push
scas
out
mov
mov
jmp
in
iret
sub
mov
call
lods
cmp
xor
inc
imul
call
lods
ja
cmpsl
mov
leave
lahf
outsl
cmp
fnstsw
mov
daa
and
mov
popf
fnstcw
lea
mov
leave
mov
pop
or
inc
gs
sub
push
dec
shrl
je
into
add
mov
cmp
push
dec
out
imul
andl
repz
mov
int
daa
repz
repz
mov
in
test
sub
bound
stos
lcall
mov
sbb
cmpsl
mov
and
test
int
push
lahf
xchg
pop
mov
hlt
cli
jmp
mov
mov
enter
iret
fnsave
mov
push
inc
sbbb
xchg
mov
push
repz
lods
call
imul
aad
int
lea
push
dec
jbe
mov
pushf
pop
add
mov
or
ficomps
cmp
iret
xchg
mov
mov
cli
or
stos
add
fnstsw
mov
leave
sbb
mov
mov
bnd
push
bts
cmpsl
daa
add
lret
xor
mov
into
mov
cli
and
repz
push
cltd
shrb
or
mov
scas
jnp
pop
fs
dec
dec
ja
pop
or
frstor
fwait
or
inc
adc
mov
dec
push
pop
push
mov
cmc
int3
jmp
mov
les
dec
jbe
cmpsl
jle
pop
add
mov
or
jb
xor
push
repz
hlt
add
mov
mov
cwtd
pop
mov
scas
daa
aam
cld
pop
sbb
jg
int3
loop
movb
jl
ja
lods
inc
add
cmpsb
imul
fidivrl
adc
mov
out
push
dec
andb
call
dec
add
shrl
sbb
mov
push
sub
decl
jmp
pop
cmp
aaa
movsl
pop
lods
aam
lahf
or
cwtl
push
mov
hlt
lods
jg
cmpsl
push
jnp
cmp
dec
jmp
dec
pop
enter
xchg
aam
lcall
lods
daa
add
jnp
mov
dec
imul
iret
dec
mov
pop
orl
daa
ljmp
jae
jp
xchg
rclb
out
repnz
or
fwait
cmp
cli
mov
repz
lahf
call
cmpl
fidivrs
enter
lret
mov
mov
push
mov
stos
out
rol
inc
dec
or
pop
push
movsl
daa
mov
iret
das
sbb
mull
mov
shlb
arpl
out
ret
fisttpl
daa
imul
loope
lret
push
dec
pop
jae
inc
movsl
pop
xor
push
bsr
xchg
or
jmp
push
ret
mov
sahf
mov
idivb
dec
mov
call
movsb
filds
lods
push
sbb
ljmp
out
daa
sbb
or
xor
mov
jecxz
mov
jae
out
sbb
aad
lods
mov
test
movsl
nop
cmpsb
push
lret
mov
mov
mov
movsb
mov
lcall
dec
jg
ss
lods
mov
mov
leave
xor
add
sub
lret
add
cmp
xchg
jns
leave
xchg
xchg
mov
ljmp
or
dec
scas
mov
stos
cmpsl
xchg
add
loopne
lret
test
dec
or
sub
ret
mov
ret
mov
cmpsb
mov
insb
es
mov
fs
push
fwait
add
xchg
add
loope
daa
rol
movsl
jns
test
lock
adc
call
add
leave
mov
inc
jecxz
cli
outsl
iret
pop
xor
fsubrs
pop
mov
stos
adc
test
mov
iret
data16
into
dec
dec
cmpsl
mov
lret
fdivl
mov
and
lcall
add
in
mov
out
pop
dec
inc
pop
addr16
cmp
daa
shrb
imul
sub
fcomps
dec
scas
adc
scas
outsl
jno
jp
sbb
insb
lods
repz
cmpsl
push
call
les
xor
mov
mov
das
and
pop
jl
xlat
shlb
shll
pop
jle
daa
mov
aas
fldenv
push
adc
loope
pop
add
xor
adc
repnz
scas
movsl
int3
and
mov
mov
cmp
or
jne
rolb
out
stos
rcr
stos
daa
mov
iret
cmpsl
daa
xorl
dec
pushf
pop
push
lods
lret
adc
pop
jmp
cmpl
jbe
testb
dec
dec
fimull
sbb
xor
iret
mov
jbe
push
sub
mov
and
daa
adc
test
cmp
mov
leave
lahf
push
mov
or
dec
jp
repz
mov
rcrb
test
mov
jmp
aam
stos
add
jg
sbb
mov
jb
xchg
mov
fwait
lret
mov
mov
mov
mov
push
inc
dec
popf
mov
sbb
add
sub
stos
repnz
imul
test
cmpsl
popf
test
pop
scas
dec
les
xor
xchg
int3
push
mov
push
fwait
cli
fidivrl
scas
sarb
mov
jp
in
mov
les
pop
push
mov
push
imul
and
pop
cmp
ret
aad
push
mov
mov
inc
dec
cmp
lahf
or
sbb
orb
lret
mov
mov
jnp
insl
push
jnp
and
rclb
adc
xchg
add
mov
and
sbb
sbb
mov
xchg
mov
push
iret
jmp
fdivrs
dec
xchg
loope
daa
imul
pop
pop
ret
push
pop
jmp
stos
xor
xor
mov
test
cld
mov
lahf
iret
cli
ja
adcb
bound
loopne
dec
mov
cmp
mov
dec
dec
fnstenv
int
test
mov
iret
sbb
xor
repz
scas
les
rsm
and
mov
push
ret
insl
cltd
xlat
das
into
jp
lret
xor
sarl
test
push
outsb
pop
cli
dec
pop
insl
sub
mov
add
xchg
mov
mov
mov
mov
insb
mov
adc
push
ljmp
rclb
and
call
sbb
bt
bound
and
into
or
cmp
sbb
mov
xlat
nop
mov
mov
arpl
inc
cmp
cmpsl
cli
fwait
in
stos
aas
pop
aam
pop
fistps
lods
fstp
or
pop
out
pop
leave
push
lahf
outsl
mov
sbb
pop
and
scas
aaa
fbld
mov
xor
ds
push
ljmp
enter
iret
dec
push
je
add
sub
ds
call
fsub
or
jo
sub
and
or
cmp
cmpsb
out
sub
sub
adc
add
mov
sub
pop
adc
test
dec
fwait
push
lahf
out
mov
in
push
mov
xchg
adc
cli
daa
add
mov
ret
scas
out
inc
push
mov
pop
sbb
daa
out
xchg
inc
pusha
or
pop
add
dec
scas
hlt
add
scas
mov
sub
repz
sbb
mov
mov
xor
sahf
fbstp
ds
mov
pop
adc
add
fwait
out
pop
sub
out
lods
jge
and
cltd
test
push
pop
sbb
enter
mov
das
hlt
jbe
popa
mov
adc
jb
popf
rcrl
mov
enter
cs
add
stos
ljmp
shll
outsl
xor
ljmp
mov
sub
scas
fwait
mov
push
loopne
mov
xor
pop
loope
mov
sbb
jno
out
mov
loop
ret
bound
in
dec
fisttpll
movsl
dec
ror
daa
xchg
mov
push
out
mov
mov
sub
sub
xchg
mov
out
int3
push
pop
hlt
je
jmp
out
jg
dec
bound
jno
lods
dec
mov
lea
lahf
mov
ja
add
lds
stos
pop
cli
sbb
adc
loopne
repnz
nop
mov
mov
fldcw
mov
dec
imul
cmpsl
jge
inc
pop
mov
mov
mov
mov
sbb
out
xor
mov
mov
mov
mov
clc
ret
xchg
arpl
std
stos
loopne
push
mov
pop
shlb
int
stos
pop
clc
insb
jo
hlt
mov
shll
daa
jmp
fistpll
stos
lret
inc
arpl
rolb
add
daa
fsubl
je
mov
or
hlt
jg
push
subl
or
cmpsl
daa
clc
ret
xor
fcmovnbe
cli
push
add
in
je
jecxz
out
jo
mov
sub
stc
or
test
int3
in
test
dec
dec
pop
dec
lahf
inc
add
sbb
cli
dec
out
repz
call
adc
shr
test
or
lcall
sti
rolb
mov
sbb
add
pop
insb
or
das
push
pop
cmp
mov
mov
sahf
rol
jg
and
fisttpll
jp
repz
movsl
and
cltd
lcall
arpl
xchg
sahf
inc
sub
ret
int
xor
xchg
shrl
repnz
bound
imul
or
sarb
add
lcall
lahf
mov
inc
mov
test
cli
mov
test
das
pop
mov
dec
jbe
jl
or
out
stos
or
lods
jle
in
cmpsl
addr16
loopne
insb
cmp
sub
xchg
scas
enter
ds
mov
mov
hlt
dec
xor
jne
sbb
mov
mov
add
xchg
aas
cmpsb
test
sbb
dec
stos
sub
enter
mov
pop
repz
hlt
mov
mov
mov
sbb
lcall
push
inc
jno
inc
lret
pop
inc
or
imull
xchg
lret
mov
and
jl
mov
cmp
into
mov
imul
pop
ljmp
xchg
adcb
sub
leave
dec
xchg
jg
mov
xor
push
mov
ja
inc
hlt
xor
mov
xor
outsb
pop
mov
inc
rorb
xchg
jmp
stos
lahf
lods
ds
jl
push
test
je
aam
and
dec
lret
test
jle
test
push
cmp
push
xchg
neg
rcr
movsbl
pusha
xchg
btr
xadd
mov
call
lods
pop
les
rclb
pop
out
sub
call
sub
fucomp
adc
addr16
cmp
fsub
inc
xor
xlat
test
ret
push
repnz
and
inc
es
adc
andb
int
or
add
xor
arpl
and
dec
jno
sbb
and
jge
loope
cmpsb
lods
xchg
loope
popa
inc
fs
movsb
ret
out
ficoms
sub
xor
test
imul
push
lcall
insb
movsl
xchg
loopne
inc
sub
xchg
add
int3
push
fwait
dec
aad
add
hlt
cwtl
xlat
mov
inc
xor
push
pop
or
adc
pusha
adc
pop
sbb
mov
add
xchg
push
loope
add
int
mov
aas
adc
fs
jp
int
mov
loop
aam
jle
movsl
insl
rcrl
ret
pop
xlat
mov
cmc
pop
ja
jle
movsl
pop
cmp
pop
jbe
xor
xchg
out
adc
jns
inc
adc
leave
cs
jo
outsb
stos
xchg
insl
xor
mov
bound
add
xchg
movsl
mov
sbb
andl
push
dec
cli
dec
dec
add
imul
jbe
fldl
aam
xchg
mov
aad
out
imul
loopne
lods
mov
sub
fnstsw
pop
fcompl
js
stc
aam
enter
adc
rorl
xor
ret
sub
add
jge
imul
push
call
lret
or
pop
xchg
and
jg
cmp
cltd
mov
cld
mov
mov
and
push
js
test
pop
mov
out
pop
dec
push
lock
shll
test
sbb
aam
movsb
inc
rorl
stos
sub
inc
fisttpl
xor
inc
aam
adc
leave
js
inc
mov
pushf
sub
popf
jecxz
shlb
add
sbb
cmpsb
pop
sub
inc
test
inc
pop
inc
sub
mov
cmp
sub
and
sub
or
bt
push
xadd
rcl
push
or
rcl
mov
sub
dec
mov
shl
pusha
mov
test
xor
setge
not
call
sahf
in
aaa
xor
pop
fs
testl
cld
add
push
adc
enter
pop
pop
xor
clc
mov
push
xor
mov
out
mov
popa
int3
jl
sbb
cli
push
mov
inc
and
jge
sbb
jno
popa
fs
cmpsl
pop
cmp
mov
dec
pop
mov
les
dec
cmp
lahf
fisubrs
or
mov
or
cmp
push
sbb
jno
jmp
mov
jb
in
mov
sar
mov
jp
btc
cmp
add
xor
mov
sbb
add
inc
movl
bts
pusha
pop
shl
mov
pushf
test
test
pushf
jmp
sbb
add
mov
add
adc
jns
rorb
adc
enter
mov
rcr
js
push
pop
clc
and
sbb
jmp
adcl
adc
adc
sub
rcll
pop
cmpsl
insl
mov
shlb
cmp
add
adc
sub
scas
daa
jmp
into
loope
mov
out
jns
push
das
and
jns
out
xchg
sub
pop
push
and
test
mov
sahf
mov
rorb
pusha
jno
inc
jecxz
rclb
mov
xchg
nop
dec
xchg
inc
xchg
sub
mov
cmp
int3
xor
pop
mov
mov
and
in
sub
dec
out
std
test
outsl
xlat
inc
mov
lock
lods
pushf
subb
test
or
ret
or
fcomip
fldl
loopne
in
std
sti
mov
xor
scas
rol
sarb
mov
data16
ss
mov
insb
xor
lock
mov
push
pop
push
call
out
jge
push
call
xor
xor
pop
aaa
mov
xchg
cwtl
cltd
dec
sub
push
push
movsb
cmpsl
jg
mov
and
cmp
mov
int
mov
adc
fldenv
dec
icebp
dec
jbe
dec
test
in
mov
out
test
js
inc
cmpsb
int3
imul
scas
mov
iret
iret
mov
mov
aam
jb
test
push
out
sbb
add
jl
decl
cmc
add
and
sti
push
xlat
stos
ljmp
inc
dec
lldt
scas
imul
aas
ds
xor
add
insl
add
xor
add
mov
xor
pop
mov
sbb
cs
jg
sub
mov
pop
push
test
outsb
pop
inc
sbb
imul
pushf
testl
or
and
cs
dec
xor
ljmp
jo
test
cmp
popa
cld
enter
lcall
pushl
xor
mov
jbe
fwait
inc
lcall
xlat
repnz
scas
pop
inc
dec
cmp
lret
sahf
mov
mov
sbb
icebp
jnp
inc
jmp
pop
jo
dec
fisttpll
add
mov
add
leave
xor
pop
das
rclb
mov
adc
sbb
shlb
sbb
ss
js
loopne
pop
jge
out
cmp
dec
jns
or
rol
stos
sti
xchg
cmpsb
lods
out
and
jne
ss
and
cmpsb
sub
add
add
cmp
xor
dec
outsl
aad
shrb
cltd
push
adc
pop
aad
push
xor
shrb
notl
mov
js
push
loop
sub
push
out
xor
pop
inc
sahf
dec
xchg
inc
xchg
push
lcall
stos
movsb
lods
mov
lea
lcall
mov
loop
push
pop
pop
push
mov
inc
adc
jmp
sahf
fmul
popf
int
jl
ds
popw
mov
push
mov
mov
mov
push
add
out
fstpt
mov
bound
ss
dec
pop
inc
jmp
movsl
js
xor
mov
jnp
sub
dec
dec
inc
inc
jmp
rclb
lret
mov
or
gs
sub
iret
cmp
rclb
mov
or
scas
scas
mov
cmp
pop
or
stc
fiadds
or
test
lret
into
adc
subl
pop
ret
jnp
mov
push
jp
scas
sub
dec
test
das
rclb
test
jbe
jp
add
insb
sub
pop
mov
sub
add
das
rclb
sti
mov
leave
out
repnz
add
or
dec
scas
andb
sahf
mov
jo
pop
loopne
mov
push
in
pop
jle
adcb
xor
outsb
dec
cmp
loop
cltd
lods
sub
inc
xor
or
rclb
sbb
in
loope
ficoml
adc
mov
in
pop
jne
loop
rclb
xlat
push
aam
out
mov
cmpsb
iret
lods
shl
daa
lds
xor
mov
sub
jno
loope
and
sub
mov
stc
add
lcall
sbb
loop
scas
or
inc
push
mov
adc
out
outsl
adc
jo
fldcw
rcll
sbb
jge
inc
inc
and
loop
push
xchg
pop
pop
jl
outsb
inc
nop
mov
pop
inc
fdivl
or
popf
jge
dec
das
fnstcw
push
mov
and
fstps
sub
rclb
outsl
dec
add
dec
or
or
pop
imul
jmp
clc
push
stc
mov
leave
lahf
and
call
roll
xchg
lods
lret
xchg
mov
mov
iret
xchg
fidivrs
inc
imul
mov
repz
fmulp
loope
testl
mov
xchg
pushf
add
call
dec
push
sub
outsl
xchg
push
call
rcrl
fs
call
push
call
pushf
mov
push
pusha
push
lea
jmp
push
mov
mov
cmp
mov
mov
mov
push
dec
inc
dec
ffree
cmpsb
lods
into
insb
ds
fcompl
xor
fmull
xchg
sub
cmpsb
inc
or
out
stos
push
jb
xchg
aam
les
sub
pop
aam
pop
mov
sbb
stos
push
pop
inc
and
mov
xor
lea
jne
mov
mov
add
jmpw
fnstsw
inc
lea
jecxz
sar
cli
pop
cmp
nop
ja
xor
std
out
mov
hlt
sbb
mov
add
cmp
add
mov
pushl
call
pusha
popf
mov
je
add
je
or
dec
and
pusha
lea
jmp
push
lea
ja
pushf
lea
jmp
push
call
daa
mov
xor
add
cwtl
movntq
pop
mov
test
cmp
fnstcw
xor
mov
jb
enter
adc
imul
and
mov
and
dec
dec
ss
inc
sub
cmp
cmp
dec
sub
mov
roll
adc
test
add
mov
dec
sub
inc
aaa
dec
jg
aam
inc
cmp
pop
cwtl
mov
out
enter
cmp
and
ss
call
sub
sbb
sub
pop
sbb
lahf
lods
lods
repz
mov
movsl
stos
idiv
lods
and
adc
mov
pmulhw
mov
dec
outsb
push
mov
push
iret
cmp
add
repnz
into
add
bound
out
push
sti
rorl
fisttpl
or
imul
repz
rorl
adc
mov
add
arpl
xor
jg
or
add
ds
inc
dec
dec
inc
push
dec
xor
cs
insb
add
adc
call
jae,pt
jmp
xchg
fiadds
rclb
cmp
pop
cmpsl
lahf
xchg
lcall
add
sbb
cmp
stos
mov
sbbl
cmpsb
xor
xor
jg
jl
dec
ds
and
sub
out
lods
ss
xchg
jmp
mov
sbb
sbb
jnp
fldcw
cmp
cmc
mov
add
leave
out
mov
stos
mov
scas
ds
add
aam
mov
cli
lds
add
adc
int
das
sti
xchg
push
mov
add
arpl
xchg
push
or
add
mov
xchg
push
or
add
inc
in
jg
add
push
or
add
add
jo
mov
xchg
push
sbb
add
mov
add
add
clc
xchg
push
xchg
add
add
xchg
or
add
dec
inc
xor
or
add
pop
je
gs
add
or
jp
add
push
mov
in
popl
add
add
dec
adc
popa
xor
add
add
test
roll
push
add
add
std
icebp
xor
jae
add
aaa
loop
into
incb
scas
push
cmp
add
test
lods
insb
movl
dec
pop
icebp
xchg
push
out
add
cmp
push
mov
sbb
add
inc
je
lcall
add
frstor
push
xchg
push
popf
sahf
add
xchg
push
xchg
push
rolb
add
outsb
and
mov
add
add
lret
scas
lock
adc
add
mov
and
add
sbb
mov
push
sbb
add
mull
or
push
ja
add
mov
push
fstpl
xchg
push
or
add
mov
mov
push
or
add
adc
loopne
cmp
add
jae
cmpsl
cmp
add
adc
in
add
push
or
add
ret
je
add
push
or
add
lret
ljmp
fiadds
add
out
outsl
xor
add
add
adc
std
mov
add
add
jle
clc
xor
scas
push
jo
add
xor
fcmovnbe
add
push
or
add
ret
mulb
add
add
lods
pop
jns
add
add
ret
cld
gs
push
stos
inc
mov
cmp
sbb
decl
mov
sbb
pushf
in
xchg
add
bound
shl
out
sub
mov
cltd
dec
jne
iret
and
xor
mov
xor
jp
testl
or
ljmp
and
add
pop
push
and
sbb
adc
pop
push
adc
pop
into
imul
jp
int
mov
cs
addr16
inc
mov
jecxz
sbb
fcoms
cmp
aam
push
push
enter
hlt
aad
and
fdivrl
sahf
sub
lds
jbe
aad
xchg
shrb
aam
addr16
sarb
daa
push
push
adc
roll
es
lods
xchg
cs
add
std
outsl
inc
push
cmp
push
call
mov
lret
rclb
push
loope
xor
es
loop
xor
pop
push
pop
jns
lret
push
aas
shlb
or
lret
mov
mov
mov
xlat
cmp
push
fists
dec
popf
cmp
xor
ret
sti
nop
adc
dec
popf
cmp
sub
fs
fsubl
cmp
add
shrb
xorb
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
pop
mov
xchg
dec
pushf
dec
cltd
push
push
cmpsl
leave
out
dec
pop
pop
and
icebp
lret
jmp
push
jne
xlat
push
push
pushf
xor
cmp
xor
mov
sub
sub
push
arpl
jbe
sub
xor
pop
lahf
jbe
jne
or
mov
push
aaa
dec
inc
std
cmpsb
lds
jmp
mov
in
sbb
push
sub
inc
pop
mov
sbb
xchg
loop
push
adc
movb
push
xchg
sbb
mov
jnp
rclb
jns
push
dec
add
push
or
adc
or
jb
jo
sub
les
cmp
jge
sahf
sub
or
mov
imul
std
icebp
sbb
sbb
lea
dec
mov
bound
inc
sub
mov
inc
or
iret
je
push
call
xchg
in
es
push
call
shrl
scas
faddl
rclb
push
xor
fcom
fsubrs
jmp
pop
mov
movb
shrl
mov
insl
sub
pop
cs
jecxz
movb
iret
dec
test
out
adcb
shlb
cmp
test
add
lahf
jb
icebp
mov
insb
add
or
aaa
fistpll
out
add
fdivp
ja
mov
add
test
out
xor
btr
sbb
mov
mov
shl
add
cmc
cmc
mov
stc
push
push
pushf
test
push
lea
je
bt
sub
bt
clc
cmp
call
and
sbb
and
and
daa
or
fdivrl
push
lcall
lahf
xchg
jns
jne
test
cmp
adc
dec
push
add
cld
movsl
mov
dec
and
cmp
push
mov
sub
cmc
dec
out
std
inc
push
mov
mov
fimull
shrl
adc
out
gs
aas
sbb
cmp
iret
cmp
test
adc
clc
cmp
test
imull
andnps
sub
inc
in
std
push
call
xchg
mov
push
call
sti
pcmpeqb
pop
and
pop
pop
out
sub
sub
fcmovu
sub
xor
add
mov
dec
dec
out
std
hlt
mov
mov
cmpsb
mov
jnp
ja
xor
cmp
push
lock
push
and
push
outsl
std
mov
inc
dec
xchg
cwtl
inc
xchg
push
lds
cs
or
cmp
popa
into
clc
sahf
dec
aaa
pop
jl
jne
lods
cwtl
inc
xchg
inc
call
dec
push
or
mov
sti
dec
mov
mov
pop
fsubrl
mov
mov
mov
push
mov
lcall
icebp
cmpsb
hlt
loopne,pn
popf
jae
xchg
stos
ljmp
in
fstl
pop
pusha
lahf
cmc
ret
mov
mov
add
xchg
rol
and
jne
lret
pop
mov
ficoms
test
dec
loop
mov
cwtl
jge
divl
or
into
adc
ret
in
jo
pmuludq
or
repnz
inc
jnp
sub
lret
cs
lea
jb
cmc
cmc
cmpb
push
jmp
push
call
cmp
out
jnp
call
outsb
call
add
sbb
mov
push
push
dec
dec
dec
cs
push
push
add
pop
push
push
add
pop
iret
mov
inc
movsl
pop
cmpsb
mov
cmp
push
push
lcall
call
push
mov
fdivrl
aam
or
test
fsubrs
xor
xor
xchg
loope
iret
adc
sbb
in
stos
scas
ljmp
test
cmp
push
cmp
and
push
cli
filds
out
loopne
mov
into
dec
outsb
mulb
or
sub
rclb
push
cmp
inc
cmp
jecxz
mov
mov
mov
cmpsb
xchg
lods
ss
sbb
cmpsl
xor
popf
push
aad
addr16
pop
sbb
xor
lret
sbb
xchg
jnp
sbb
out
adc
fs
inc
push
add
cmp
mov
insb
adc
outsl
imul
out
rorl
out
iret
fnsave
lock
sti
out
outsl
dec
pop
aas
out
cmp
popf
xchg
sbb
int3
add
inc
js
je
jb
arpl
jae
push
call
and
xlat
add
aam
or
rclb
sbb
mov
lcall
push
aas
fisubl
dec
fists
rclb
fxam
jle
jecxz
adc
lret
jbe
flds
xchg
out
lock
add
enter
flds
ja
pop
shl
out
add
mov
mov
or
sbb
cmp
pop
js
addr16
push
pop
jb,pn
daa
jo
test
sti
pop
test
dec
lcall
and
mov
xor
sbb
mov
jg
das
cmp
jne
daa
incl
jp
stos
cmpsb
test
mov
dec
or
lcall
and
or
xor
je
insb
sub
xor
rolb
jg
mov
lret
insl
inc
push
inc
xor
and
and
cmovns
mov
dec
dec
push
jl
out
sub
sti
lods
out
mov
sarl
repz
or
and
jns
insb
and
adc
and
clc
iret
jns
sub
sbb
xor
sbb
fcmovu
fbld
repnz
cmpsl
rclb
push
shrb
sti
pop
mov
and
mov
cmc
mov
dec
push
adc
pushf
divb
pushf
orl
dec
ss
shl
jns
sub
test
sub
xchg
repnz
push
jns
xchg
xor
mov
add
sub
ltr
je
iret
push
and
pop
int
aaa
popf
lcall
pushf
mov
push
adc
jp
push
hlt
adc
jl
jmp
adc
subb
mov
xor
xchg
in
xor
int
loopne
jbe
stos
push
push
pushf
fildl
imulb
in
in
xor
aam
mov
xor
nop
enter
xchg
lds
aam
test
push
mov
test
push
add
lock
push
sahf
jns
add
add
mov
ret
cmc
rol
not
rcr
cmc
stc
not
clc
not
ror
add
neg
push
inc
xor
jmp
push
call
cmpsl
popfw
call
push
call
stc
pop
pushf
add
sar
mov
cmc
clc
cmpsb
pusha
push
mov
movb
lea
ja
pusha
movb
pushl
lea
jb
push
clc
cmp
jmp
popf
out
pop
rclb
inc
push
pop
pop
test
sahf
popf
mov
dec
lahf
xor
cwtl
in
pop
lret
dec
pop
or
pop
add
xor
dec
js
ret
in
nop
lret
cmp
sbb
dec
xchg
ljmp
rcrb
ljmp
pop
sbb
enter
scas
push
cli
lods
cli
aaa
mov
jg
in
sbb
decl
icebp
push
xchg
mov
pop
inc
and
mov
test
dec
hlt
iret
jmp
jmp
fldt
xorb
pop
les
and
sbb
xchg
or
sub
sbb
pop
pop
repz
and
xor
sbb
or
insl
out
add
clc
pop
ds
add
imul
mov
pusha
aas
push
cmp
mov
push
xor
add
jge
outsl
sbb
call
cmp
push
push
rclb
sub
cmp
inc
lcall
aam
mov
sub
std
xchg
mov
loop
mov
and
cmp
push
dec
ret
in
pop
sbb
xchg
aam
test
xchg
cwtl
dec
mov
add
hlt
fdivrl
jl
enter
in
mov
addr16
and
xor
xchg
pushf
and
imul
inc
inc
pop
pop
call
data16
cmc
aaa
jb
fnstenv
cli
mov
rclb
aad
aaa
in
call
cmc
inc
cmp
imul
and
iret
pop
pop
jo
rclb
in
or
dec
clc
inc
cmp
sbb
ss
ss
shll
mov
jbe
push
jecxz
dec
bound
dec
jmp
mov
adc
jecxz
add
xchg
cwtl
xchg
push
cmp
fucomip
sarb
mov
shlb
insb
and
movw
mov
pushl
ret
jg
push
sbb
pop
adc
lock
sti
lock
cs
test
push
test
dec
mov
or
iret
pusha
pop
icebp
ds
into
loopne
mov
aaa
jge
cli
cmc
shll
ja
rolb
sub
dec
cltd
sahf
jl
cli
or
mov
repz
insl
outsb
adc
sbb
inc
cmp
adc
pop
in
and
sub
dec
daa
ds
out
jne
jge
lea
test
call
lea
jne
mov
mov
stc
add
cmp
stc
movzwl
bt
add
bsf
mov
pushf
call
push
call
mov
and
sub
call
loop
push
in
sbb
pop
loop
insb
mov
mov
insl
mov
stos
stos
test
incb
and
add
mov
das
test
fnstsw
fs
mov
daa
jns
inc
pusha
inc
leave
push
decl
clc
cs
sub
inc
push
mov
data16
sbb
push
sub
out
test
out
outsb
call
xchg
sbb
iret
lods
cmp
jnp
enter
adc
ja
imul
jp
mov
sti
stc
loope
popf
adcb
repz
fisttpll
sbb
pop
jp
push
jmp
pop
push
push
or
or
adc
loopne
repz
sahf
or
mov
or
das
sarl
mulb
sbb
jg
push
adc
add
push
jno
inc
sbb
push
and
add
cld
pop
movsb
mov
push
int
loopne
lock
add
mov
outsb
lods
hlt
add
sarl
mov
jo
jp
cmp
mov
repz
call
cmpsl
aaa
daa
aas
push
call
xchg
mov
pop
jnp
call
adc
xchg
adc
sbb
pop
loope
pushf
fwait
test
lods
clc
cmc
jmp
adcl
aam
out
xor
jg
inc
lret
or
dec
mov
inc
pusha
packsswb
scas
imull
cmc
test
mul
repnz
enter
call
adc
adc
push
sub
sub
push
iret
jle
stos
imul
icebp
cmp
ret
push
mov
iret
jle
in
jns
add
and
adc
test
and
movb
pushf
stos
push
push
pushf
lea
jmp
push
call
mov
test
outsl
insb
xor
cs
insb
add
pop
aaa
xchg
mov
mov
out
mov
loop,pn
adc
pop
aaa
pop
cs
cltd
sbb
bnd
cmp
hlt
les
pop
sub
in
es
dec
mov
pop
outsb
insb
jae
insl
pop
loope
inc
or
aad
les
or
lret
insb
enter
hlt
pop
xor
add
sub
add
outsl
lahf
cmc
shrb
jnp
call
push
sbb
cmp
test
sbb
add
out
mov
and
push
lea
jmp
cmpb
mov
call
mov
lea
ja
call
mov
mov
lea
call
pushf
pushl
pushl
pusha
lea
jae
bt
stc
clc
xor
jmp
lea
jae
pushf
push
pusha
lea
jne
pushf
pusha
call
stos
in
aaa
sbb
pop
mov
popa
pop
pop
push
adc
pop
pop
and
sub
sub
cmpsb
aam
loope
dec
ljmp
push
or
xor
cmp
push
stc
jns
push
mov
dec
mov
je
dec
scas
shr
add
xchg
lret
lods
dec
clc
sahf
lret
fmull
jl
addr16
data16
pop
mov
mov
inc
fdiv
push
xchg
leave
mov
add
sub
adc
push
inc
addr16
cmp
add
sbb
in
cmc
cmpsb
mov
mov
rolb
push
inc
es
add
add
push
sub
adc
call
movb
jmp
sbb
mov
mov
mov
mov
outsb
cwtl
mov
sar
idiv
popa
jnp
sbbl
rorl
sbb
divl
jecxz
dec
loopne
xor
inc
es
loope
addr16
mov
adcb
jno
fmuls
mov
dec
add
push
jo
cld
mov
dec
xchg
mov
pop
inc
and
xor
jno
data16
prefetch
ss
repz
cs
push
rclb
sub
sti
mov
add
stos
idiv
mov
mov
loop
dec
mov
stos
mov
push
and
jb
add
into
xlat
lock
jge
jae
xor
fnstsw
sbb
xor
test
cmp
addr16
ss
xor
test
and
dec
or
fildll
ret
inc
cmp
bound
xor
mov
mov
inc
mov
xchg
mov
ret
xor
add
dec
cmp
add
stos
or
movsl
jle
rclb
mov
gs
pop
pop
adc
jno
stos
mov
lea
mov
out
dec
fildll
in
ljmp
int
or
lcall
test
mov
fidivl
mov
aad
jmp
mov
int
dec
jl
pop
pop
clc
mov
mov
mov
test
aas
or
cmp
lret
pop
ljmp
add
cld
scas
rcr
ss
cli
movsl
fwait
pop
int3
roll
pop
stos
add
or
imulb
or
cmpsb
mov
jno
lock
std
push
lods
cmp
fsubr
jns
imul
rcl
sbb
cmp
xor
xlat
add
and
jns
sbb
fucomi
xor
xor
cld
test
bound
cmp
pop
and
mov
adc
enter
scas
or
in
jp
in
pop
bound
scas
lds
add
repz
add
push
iret
push
push
rclb
int
mov
mov
inc
xchg
scas
lods
mov
dec
je
repnz
jae
push
jmp
sub
dec
inc
xchg
inc
outsb
jae
hlt
jb
mov
sahf
inc
and
in
sbb
ret
jae
aaa
mov
mov
sahf
mov
cmp
stos
xchg
jnp
cmp
les
repz
hlt
shrl
or
mov
adc
and
les
mov
aad
popa
mov
dec
dec
dec
cs
insb
add
hlt
jnp
call
cmp
call
push
call
mov
call
adc
or
sbb
sbb
data16
pop
and
lods
clc
arpl
fs
dec
push
mov
scas
xor
push
dec
movsl
cmpsl
hlt
sahf
sti
in
popf
mov
pop
or
cmp
sbb
scas
cmp
addr16
testb
imul
jb
xchg
pushf
loop
push
or
mov
mov
incb
cmp
or
adc
push
or
or
mov
jb
push
cli
add
inc
inc
aas
stos
jle
dec
gs
sbb
or
call
clc
imull
shrb
stos
cs
fistpl
je
adc
btc
bsr
add
jmp
lea
jb
pusha
push
movl
pushl
ret
stc
mov
cmp
cmp
loope
cmc
xchg
adc
add
js
dec
adc
mov
fcmovnu
loopne
call
lret
sub
repz
int3
push
cmp
fs
fs
test
cli
add
ret
ret
xor
cli
hlt
push
pop
pop
test
inc
dec
jbe
mov
inc
jns
clc
cmpsl
rclb
jge
imul
pop
jmp
mov
sahf
inc
mov
addl
hlt
shll
pop
push
aas
adc
ss
dec
aad
add
rclb
and
mov
cld
lods
cli
scas
mov
push
mov
adcl
sbb
call
aaa
in
ds
pop
stos
int3
mov
outsl
in
xor
imul
fcos
xchg
in
adc
imul
icebp
leave
mov
push
push
dec
sbb
movsl
int
sti
stos
aas
dec
push
and
out
lahf
jge
sub
mov
xchg
jp
or
jecxz
mov
push
and
jo
test
add
adc
str
es
xlat
adc
call
pop
sub
outsb
cmp
cs
mov
scas
sti
mov
lcall
mov
jbe
call
lds
rclb
jge
push
mov
and
leave
sub
adc
mov
mov
fnstsw
adc
lea
jmp
cmp
adc
mov
mov
adc
rcl
cmp
inc
mov
test
call
mov
ficoml
rclb
inc
push
into
pop
sbb
aad
pop
adc
and
mov
ret
aaa
cmpsb
int3
sub
shrl
dec
dec
lcall
sarb
pop
jno
adc
xor
cmpsl
mov
push
jmp
cmpsl
and
add
xchg
mov
lods
jbe
rclb
stos
subl
int
lock
sbb
xchg
fisubrl
adcl
pop
mov
loop
ljmp
push
addr16
sub
out
push
les
pop
lock
sub
pop
cmp
insb
cmp
mov
push
cld
fsubrs
subb
dec
xor
mov
fistpll
mov
lock
testl
lret
sub
mov
test
inc
dec
and
add
aas
and
popa
insb
sub
inc
addl
mov
or
outsl
adcb
and
clc
aam
pushf
ds
adc
pop
mov
sbb
int3
int
mov
int
das
and
lcall
fisubrs
or
inc
fs
bound
and
jbe
btr
cwtl
bts
push
jmp
pop
test
push
dec
add
pop
or
pusha
bound
je
pop
dec
ret
leave
and
pop
push
pop
leave
scas
mov
push
pop
repz
dec
in
ds
or
es
sbb
mov
leave
lcall
push
hlt
pop
add
stc
ffreep
ja
inc
or
jnp
xchg
jecxz
andl
sub
in
mov
in
out
jne
imul
fs
fwait
out
inc
outsl
or
mov
mov
rclb
mov
mov
insb
inc
sub
xor
fwait
or
or
psrld
rcrb
loopne
sub
loopne
push
out
push
inc
jns
xlat
or
add
cmp
push
xor
mov
mov
cmp
xor
adc
pop
jns
dec
add
push
or
push
or
pop
push
gs
mov
rcr
inc
aas
std
std
jp
push
pushf
add
pop
lahf
je
inc
mov
or
xchg
dec
outsl
dec
imul
es
bound
dec
insl
lret
dec
inc
sub
lcall
xchg
ds
pop
sbb
xlat
leave
leave
out
mov
push
fs
inc
aaa
out
jmp
fdivl
jg
mov
fwait
mov
out
xor
les
pop
pop
push
inc
arpl
jp
pop
dec
and
mov
push
mov
mov
push
call
or
mov
sbb
inc
and
jmp
adc
jmp
mov
testl
mov
mov
or
sbb
mov
mov
notl
insb
mov
scas
or
adc
push
fwait
cmpsb
ss
xor
sub
mov
fs
ljmp
lods
inc
sbb
adc
shrb
xchg
aad
int
sub
push
out
dec
clc
xor
add
cwtl
mul
mov
aaa
mov
or
pushf
loope
add
sub
ss
leave
in
push
sbb
psrld
dec
loop
fninit
out
repnz
testl
push
cltd
push
jg
jle
push
mov
lcall
jne
pop
in
cltd
mov
jle
jl
adc
imul
das
lods
scas
call
into
mov
call
stc
mov
cmpsl
rclb
add
aam
inc
out
iret
ljmp
and
push
xchg
inc
inc
sbb
stos
pushl
imul
call
push
call
jl
insb
fcoms
or
fisubrs
and
out
lock
js
pusha
in
fsubl
sbb
jmp
fsubrs
ljmp
iret
jge
push
or
les
sub
add
das
push
mov
leave
loope
sub
lcall
stc
dec
pop
sti
jecxz
lock
dec
dec
fwait
add
test
mov
and
push
add
add
fistl
iret
add
push
add
cmp
push
pushf
xchg
cltd
sub
dec
leave
sbb
push
call
mov
jmp
decl
pop
sbb
out
sub
in
mov
mov
gs
sub
jg
jp
add
nop
add
imul
push
xchg
shrl
jo
sub
and
cltd
lret
rcrb
push
icebp
mull
and
stos
lret
rcrb
mov
xchg
ljmp
or
pop
jecxz
shr
sbb
and
or
jle
rclb
mov
push
jo
jbe
and
sbb
mov
sti
dec
sahf
sbbl
dec
ds
adc
arpl
adc
or
inc
in
js
pop
sbb
cmpsl
cmp
and
sub
inc
in
push
cmpsl
enter
in
cmpsb
test
push
sub
push
in
or
jl
rcr
mov
xchg
mov
int
pop
jle
pop
lea
sahf
stc
call
push
call
xchg
xchg
pushf
call
mov
movb
pushf
push
lea
jmp
push
xor
or
pop
xor
mov
movswl
add
sbb
icebp
mov
fs
jmp
das
mov
mov
pusha
xchg
in
loop
pop
insb
and
ror
jg
pop
mov
loop
add
fs
into
sbb
das
mov
popa
shll
xor
sbb
out
nop
push
imul
fs
les
add
imul
insb
gs
bound
arpl
dec
push
xor
add
iret
dec
pop
or
pop
and
cmp
test
ret
add
loopne
inc
add
sub
jnp
cmc
cmpsl
xor
insl
and
es
fldcw
mov
sub
pop
fadd
test
or
nop
les
icebp
and
mov
jecxz
cmp
cmp
and
lret
nop
cmp
lahf
xchg
add
out
cmp
leave
popa
fistps
inc
xor
cmpsb
mov
repz
andl
mov
loopne
lahf
test
adc
leave
or
pop
pop
sub
and
das
shrl
sub
jecxz
in
js
outsl
or
push
push
and
mov
loope
insb
mov
out
xchg
pop
movsl
pop
jo
mov
adc
loope
dec
jmp
cli
push
movsb
cmp
das
pop
in
rcrl
cmp
in
lret
dec
sub
sub
dec
dec
out
or
pop
inc
cltd
push
push
mov
lcall
push
push
lahf
stos
lret
mov
stos
xchg
arpl
adc
das
inc
cmp
push
cltd
ret
aad
inc
nop
out
dec
xchg
add
popf
ret
je
and
loopne
ss
sbb
std
call
dec
xor
out
into
in
mov
sbb
mov
sbb
mov
sub
stos
lods
sub
pop
fisttps
ret
xchg
scas
or
rolb
or
shr
mov
pushf
push
call
call
std
xchg
or
pop
xor
std
mov
or
mov
out
icebp
int3
adc
gs
jne
adcb
cmp
cmpsb
data16
jmp
jge
and
dec
sub
cmp
push
ret
mov
lock
fisttps
sub
add
sub
pushf
push
div
sub
jp
xchg
lret
or
and
outsl
xor
or
mov
fucomp
xor
or
pop
lock
insb
mov
ja
cmpsl
in
xchg
mov
sahf
push
sbb
stos
dec
neg
arpl
xchg
jb
inc
xchg
inc
loop
scas
jbe
xchg
lds
mov
fwait
pop
mov
div
mov
dec
in
add
mov
or
in
sahf
mov
stos
push
loop
into
movsb
jmp
push
mov
jns
repz
mov
cmc
jno
add
sub
sub
iret
clc
subb
and
jmp
movsb
jg
rclb
push
adc
addr16
cmc
pop
push
pop
adc
push
dec
jo
mov
or
jne
pop
mov
cmp
mov
test
in
mov
cmpsl
clc
jo
mov
in
push
cmp
mov
scas
inc
out
addr16
cmp
dec
dec
pusha
cmp
scas
inc
out
or
ror
stos
shlb
mov
cmp
test
outsl
mov
cmp
pop
popa
sarl
adc
lea
add
jnp
call
pop
xor
mov
add
rcrb
verw
xor
cs
insb
add
in
insb
add
mov
repnz
movw
call
sub
or
pop
outsl
cld
std
sti
add
push
push
push
ljmp
fnstcw
jle
movsl
mov
loopne
or
pop
dec
cmp
sbb
push
mov
out
cmp
rcrb
jnp
sbb
aad
jns
jno
ret
stc
push
scas
inc
adc
scas
inc
or
pop
stos
mov
jecxz
add
xchg
add
mov
xlat
mov
dec
mov
cmp
cmp
icebp
flds
cmp
pop
mov
icebp
cmp
dec
addr16
aaa
stc
mov
fcmovnbe
call
pusha
bt
test
pushl
pusha
lea
je
test
test
pushf
sub
bt
pushl
mov
bswap
rol
mov
bt
bt
cmp
jmp
push
call
jns
loopne
int
rclb
push
sub
sub
das
es
pop
xor
outsb
inc
push
mov
push
mov
mov
enter
dec
push
or
and
shlb
loope
icebp
ret
ja
cltd
js
inc
mov
iret
les
xorb
mov
jne
nop
mov
lret
insl
jecxz
test
jbe
inc
push
movsb
cmp
xor
inc
or
pusha
inc
push
cmp
push
scas
mov
flds
stos
jns
push
mov
out
insb
add
andl
push
ret
add
cmpsl
sub
or
cmp
addl
cmpsl
jg
sbb
xlat
mov
ret
mov
jecxz
xchg
and
mov
arpl
xchg
inc
and
int
mov
jbe
adc
cmpsb
test
push
pop
aas
xchg
push
xor
rcl
jmp
int3
in
dec
into
mov
out
fadd
popf
xchg
call
or
jbe
push
rclb
shl
das
in
ss
ss
loope,pn
aaa
pop
xor
cmp
aam
fldenv
and
insl
iret
xchg
push
mov
sub
adc
adc
pop
fdivp
mov
jg
test
dec
xchg
adc
push
es
stos
loop
cmpsl
inc
lahf
aad
adc
xor
or
mov
cmp
and
enter
mov
pop
sbb
cmp
aam
xchg
cmp
add
icebp
mov
scas
push
inc
lret
xor
inc
jnp
call
cmc
pop
fwait
mov
pop
sbb
lods
lods
lods
std
stc
cld
stc
out
iret
cmc
adc
popf
pop
add
or
and
ljmp
dec
aam
sbb
dec
push
push
add
mov
cmp
addb
in
das
xor
in
pop
cmp
fs
xor
roll
mov
popa
or
xor
and
fisubrl
loope
or
mov
lods
mov
add
fs
imul
add
lods
jbe
rclb
stos
jge
sbb
mov
pop
push
je
push
inc
int3
inc
out
push
fdiv
ficoml
add
xor
xor
mov
lret
fnsave
push
cmp
mov
bound
xchg
inc
repnz
and
mov
mov
jnp
call
xor
in
sbb
pop
or
xchg
cwtl
mov
in
cmp
out
int3
xchg
pop
ds
in
xchg
mov
fwait
inc
outsb
ficomps
mov
rcll
in
aaa
std
arpl
popf
das
add
in
testl
femms
pop
and
sbbb
ljmp
out
add
aaa
mov
jge
lods
les
mov
lahf
push
sbb
inc
inc
insl
add
sbb
add
pop
pusha
pusha
mov
and
btc
mov
cmp
jmp
push
call
xor
and
add
pushf
and
add
xor
rclb
dec
inc
pusha
arpl
imul
jo
pop
lods
push
imul
lods
cmpsb
rcrb
cli
aas
jmp
out
mov
aas
out
test
push
pop
sub
cmpsb
aam
push
in
xchg
into
insb
ljmp
sbb
mov
add
jle
mov
add
mov
bound
xorb
mov
push
xor
subb
shrl
aad
push
call
aam
stc
outsl
mov
rclb
adc
lcall
repz
enter
xchg
repz
stos
das
fsubrs
lret
inc
lods
push
sub
mov
jle
push
inc
mov
dec
push
dec
xor
pop
test
test
fwait
push
adc
or
sbbb
call
cmpsl
outsb
dec
jb
jle
add
bound
sub
js
xor
jle
mov
imul
cmp
rclb
mov
push
push
add
in
or
jo
dec
imul
cmc
xor
add
pop
mov
dec
rcrl
aas
je
xchg
std
or
mov
ss
jg
adcl
mov
xor
adc
sub
icebp
mov
clc
adc
push
xchg
sub
test
pop
loop
mov
mov
cmp
int3
lret
jp
lahf
scas
jecxz
cld
hlt
push
add
pop
loop
je
xchg
mov
leave
lret
rol
testl
fcoms
andb
pop
mov
dec
mov
popf
xchg
or
mov
dec
popf
or
jle
xor
jae
cmpsb
xchg
popl
out
push
cmp
aas
data16
fstps
xchg
mulb
in
out
leave
sti
sub
or
xor
sbb
jo
jae
je
ds
call
adc
or
mov
add
add
mov
sldt
sub
rclb
cmc
jl
adc
mov
mov
ficoms
mov
push
mov
push
lahf
imul
mov
js
scas
clc
mov
call
enter
andnps
shrb
cmp
fstps
fwait
adc
cmp
add
mov
mulb
adc
mov
in
hlt
lret
sarl
pop
sbb
lret
test
and
or
push
scas
das
jl
repz
dec
not
pushf
mov
lea
call
push
pusha
mov
pusha
lea
jmp
push
call
or
jo
pop
arpl
call
push
clc
pop
and
sti
add
test
push
add
fs
jmp
push
call
out
test
insl
fs
xor
cs
insb
add
orb
dec
cmp
call
call
pop
xor
mov
rol
adc
or
or
mov
push
xorl
nop
data16
lcall
mov
sbb
out
or
mov
sbb
inc
mov
mov
adc
pop
pop
sbb
adc
call
sbb
xor
into
jecxz
lods
pop
cmp
fsubrp
out
addr16
and
xchg
mov
xor
movsb
jbe
je
sub
jle
jns
sub
jge
fwait
jbe
cs
stos
jp
cmpsl
fsubrs
add
popa
aaa
lret
lret
jo
cmpsb
dec
icebp
sbb
fisubs
lret
sub
fbstp
mov
pop
sahf
out
mulb
cmp
xlat
shlb
cs
jne
mov
fisubs
rcll
and
divl
scas
mov
mov
xor
mov
xor
xor
cmp
fisubs
je
arpl
mov
xchg
mov
pop
gs
pop
or
aaa
pop
cmp
xor
sbb
jbe
stc
sbb
sti
adc
fistpll
sub
pop
das
inc
mov
jnp
pop
mov
and
cmp
out
outsb
cmp
addb
cmp
mov
sbb
jl
jg
inc
xlat
insb
add
mov
str
adc
aas
jns
jl
rcll
movsl
das
xor
jge
cmp
out
mov
imul
lea
pop
loope
xchg
push
popa
scas
xor
pop
in
outsl
fnstenv
or
push
data16
or
and
inc
cmp
data16
cmp
ljmp
mov
mov
mov
ja
xchg
hlt
push
and
repz
insb
mov
mov
ds
mov
sub
jmp
jecxz
push
call
add
std
rcll
aas
lret
into
adc
lds
lret
adc
ja
dec
mov
dec
aad
mov
cmp
mov
test
out
test
daa
push
jne
inc
jbe
jo
adc
sti
sbb
jbe
shll
cli
lods
fwait
sub
inc
test
test
jb
xchg
in
sti
mov
js
xor
insb
fisttpl
aas
and
jg
test
mov
outsb
aas
mov
rcrb
xchg
fistl
sub
adcl
dec
mov
add
or
mov
add
xor
push
call
adc
and
pusha
inc
lea
rol
test
dec
inc
xchg
movsbw
lahf
dec
mov
clc
shr
mov
stc
stc
cmp
pusha
xchg
shrd
bsr
dec
mov
lea
jb
pushf
movb
sub
call
push
call
xchg
mov
xchg
stc
jno
call
cmp
shrl
daa
sbb
add
push
pushl
lea
jae
not
mov
mov
inc
call
push
call
lods
and
cmp
pusha
lea
ja
call
inc
mov
adc
jb
data16
and
dec
cwtl
cs
push
jg
nop
mov
sbb
icebp
adc
movsl
out
mov
sub
incb
inc
and
std
mov
sub
rcll
mov
mov
in
icebp
sbb
mov
sub
fs
lret
xchg
jmp
mull
or
ljmp
rolb
stos
mov
push
mov
jnp
call
pop
xlat
and
pop
lea
jae
cmc
call
test
add
test
jmp
push
call
mov
dec
outsb
mov
rcll
leave
fsub
out
out
inc
inc
in
ds
cmp
in
nop
scas
cmp
or
sub
and
mov
cmpsl
shrl
in
arpl
arpl
mov
mov
fcoml
pop
xchg
stos
lcall
pop
cld
xchg
ds
arpl
jg
out
insb
fwait
xor
mov
cld
xchg
enter
out
sarl
repnz
stos
mov
incb
gs
push
aas
add
pop
xchg
popf
push
or
xor
pushl
mov
lods
mov
cmc
clc
call
test
or
or
jg
addl
jno
sub
mov
imul
or
aas
bswap
pop
cmp
push
push
insl
xor
shrl
out
std
rol
movw
stc
push
not
jmp
mov
test
pushf
pusha
pusha
add
clc
mov
setae
mov
pushf
cmc
cmp
pushf
call
push
lods
ja
rcll
stos
xor
mov
xorl
mov
jns
ljmp
jmp
div
pop
jbe
mov
xor
aaa
add
mov
adc
xchg
insl
adc
inc
lods
xlat
xor
xchg
in
icebp
pop
lahf
push
or
sbb
xlat
adc
xchg
add
mov
sbb
cmp
pop
fisttps
xor
adc
cmp
add
je
mov
push
add
or
fidivl
pop
and
xchg
mov
push
mov
call
or
stc
rcll
dec
sarl
fucom
loop
repnz
mov
push
das
int
push
xchg
inc
pop
pushf
mov
in
test
out
stos
repz
xchg
repz
shll
sahf
mov
lcall
nop
ljmp
leave
int3
rep
ss
adc
dec
test
cmpb
aam
mov
push
aaa
pop
enter
xchg
je
xor
frstor
adc
dec
sbb
mov
pop
sub
aad
sub
sub
fisubl
aad
push
dec
mov
sub
push
pop
mov
sub
adc
inc
shl
jb
addb
sub
imul
inc
push
mov
repz
loope
sbb
addr16
test
in
div
test
push
mov
bound
add
jbe
lods
mov
mov
or
xor
mov
jl
jbe
or
subl
and
call
push
pusha
pusha
pushf
lea
jae
push
cmc
pusha
jmp
cmp
xchg
push
push
add
adc
bound
pop
testl
lods
mov
cmpsl
mov
sub
pop
mov
xor
push
dec
and
xlat
or
aas
xchg
push
xor
push
lret
ffree
and
movsb
xlat
or
cmp
movsb
mov
cltd
notl
out
push
mov
aam
lock
lea
test
psllw
dec
dec
lret
and
mov
pop
inc
ss
pop
scas
movsb
movsb
pop
pusha
cmpsl
lods
mov
lea
add
mov
and
push
les
pusha
xor
insl
jmp
stos
push
decl
jle
repz
iret
adc
and
jmp
lahf
xchg
and
ja
cltd
jmp
scas
shrl
dec
shl
outsl
jne
cmp
das
shrl
push
cmpsl
xor
inc
ds
pop
mov
push
xchg
xchg
clc
rcll
or
cmc
scas
stos
cwtl
mov
mov
fs
shrl
add
leave
push
nop
sbb
in
or
insb
or
call
adc
out
movsb
test
mov
and
bound
cmp
add
dec
fcomps
subb
testl
stos
aam
pop
mov
pushf
neg
shrb
xchg
inc
sbb
mov
jl
aaa
fimuls
ljmp
bnd
call
dec
add
add
not
pop
js
or
push
gs
adc
adc
jle
or
aas
xor
in
int3
scas
mov
arpl
xor
out
jb
jne
out
ljmp
or
or
nop
pop
call
push
xchg
mov
jle
pop
cmpsl
cs
icebp
test
adc
mov
mov
js
dec
out
mov
inc
loopne
clc
add
cmp
inc
inc
pusha
adc
loop
and
mov
jle
inc
and
lods
inc
cwtl
and
cli
xchg
cmpsb
ret
movsb
mov
inc
pop
clc
sub
out
sbb
fnsave
not
pop
enter
lcall
push
mov
cltd
or
dec
arpl
cmp
cmp
fisubrl
sbb
jmp
xchg
sbb
iret
mov
xor
xor
push
sbb
fiaddl
mov
sbb
push
pop
inc
mov
mov
lock
push
das
mov
push
push
sbb
into
pop
test
sbb
dec
cmp
sbb
stos
mov
int3
out
pushf
ret
sub
inc
fdivp
rcll
inc
ror
push
iret
push
push
leave
pop
ret
iret
into
pop
pop
das
sub
in
mov
rcrb
lret
scas
cwtl
mov
xchg
movsb
pop
daa
jne
leave
sub
cmp
loope
mov
xchg
add
xorb
cmp
loope
out
iret
sub
stos
mulb
in
xor
mov
mov
add
dec
inc
push
sub
sbb
not
pop
mov
sbb
xor
inc
inc
jb
out
ss
and
repz
mov
into
cmp
inc
dec
test
mov
lock
sbb
push
flds
dec
mov
mov
xchg
mov
xlat
mov
ljmp
pusha
inc
cli
pop
cmp
sahf
subl
jnp,pn
xor
call
push
call
adc
es
call
sub
cmc
ljmp
add
push
call
mov
clc
or
shrb
push
add
push
call
scas
dec
bound
cmpsb
adc
jns
xor
ss
xchg
mov
loop
push
fidivrl
mov
insl
out
popa
cs
adc
dec
repz
cmpsb
cmpsl
jmp
aam
xor
inc
jbe
mov
popf
and
jne
xorl
cmp
push
gs
hlt
jne
out
add
icebp
fwait
adc
scas
ja
or
repz
lret
stos
fnstcw
mov
hlt
icebp
sbb
cs
call
inc
sbb
and
or
rcll
inc
sbb
adc
add
adc
mov
es
pop
cwtl
mov
test
jb
sbbb
or
push
jbe
mov
mov
xlat
mov
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
xchg
ror
neg
test
and
add
bsf
shr
btc
pushf
bsr
mov
add
bts
add
push
bts
bsr
mov
pushl
clc
mov
call
pushf
cmc
pushf
cmp
pushf
call
push
push
shl
rcll
dec
fcmovu
and
es
and
daa
fabs
in
pop
das
icebp
push
jecxz
jge
in
arpl
aas
insl
daa
sbb
loop
rcrl
xchg
add
mov
mov
push
xor
aas
and
test
stos
xor
test
fs
out
adc
or
movsl
iret
stc
cmpsb
sbb
push
cmp
mov
lods
lea
sbb
ret
xchg
jp
sahf
or
mov
daa
test
jg
mov
add
cmp
verr
addr16
sbb
not
push
not
stos
setl
setne
call
lea
jbe
btr
movsbw
mov
xadd
movsbw
cmc
add
mov
mov
rcl
btr
bt
bt
add
bts
jmp
scas
and
and
movsb
scas
mov
mov
dec
mov
jg
mov
dec
lcall
cmp
pop
cld
xor
in
mov
mov
pop
add
inc
push
sub
cmp
dec
loopne
ja
mov
inc
aas
or
xchg
jp
test
aaa
and
adc
ror
xchg
xlat
mov
mov
mov
push
jae
fwait
lock
pushf
dec
sub
scas
loope
mov
add
pop
mov
jns
rcll
test
test
aaa
xchg
shll
movsl
stos
cmpsb
sti
out
or
out
mov
daa
jae
or
imul
add
repz
lock
fisubl
in
push
mov
mov
and
pop
and
adc
lcall
pop
ds
and
scas
nop
test
insl
push
stc
inc
bound
shr
aam
aas
in
rcll
cmp
leave
lret
lds
adc
dec
mov
cmp
add
sbb
mov
sbb
xor
jp
je
xchg
mov
sub
stc
and
add
shrb
push
pop
or
push
inc
fdivrl
inc
mov
loop
xchg
je
cmp
sub
out
mov
mov
xlat
lahf
or
jnp
jnp
call
rcll
call
pop
insl
sar
mov
push
movb
jmp
push
call
aam
fs
add
in
jns
enter
imul
push
lods
aam
mov
and
loopne
xchg
test
ds
fs
fmulp
add
cmp
fnstcw
xor
lret
in
push
scas
fcompl
mov
cmp
fsts
mov
sti
test
scas
pop
daa
xor
push
outsb
lret
mov
add
repz
pop
pop
and
clc
cmc
out
mov
stos
mov
fs
ja
sub
pusha
add
sbb
shr
add
bswap
mov
rcl
add
rcl
mov
add
bt
cmc
jmp
push
call
cli
cli
push
call
imul
rcll
push
mov
mov
or
adc
push
lods
je
mov
push
push
adc
or
gs
and
cli
xchg
fisttpll
jle
pop
mov
pushf
shlb
mov
dec
mov
mov
pop
mov
xchg
jns
incb
sbb
fimuls
inc
cmp
pop
in
jns
arpl
lcall
arpl
pop
cmp
inc
addr16
decb
insb
push
call
cli
vmread
mov
pop
mov
mov
call
mov
jmp
fbstp
out
rcll
jae
sti
dec
dec
cli
inc
inc
idivb
icebp
cli
inc
dec
insl
mov
inc
scas
adc
cmp
xchg
push
rorb
hlt
mov
mov
push
push
arpl
aam
ja
test
pusha
push
insb
sub
push
inc
mov
fnstenv
jmp
jmp
stc
mov
xlat
in
mov
lret
scas
lret
test
popf
mov
movsl
xor
mov
lock
adcb
aam
enter
mov
sahf
mov
mov
xchg
fnsave
dec
pushf
lcall
flds
dec
fcmovne
sub
js
jge
sub
pusha
movb
jmp
push
call
scas
ds
and
insb
add
loope
cmp
aaa
in
in
rcll
scas
dec
inc
dec
lcall
pop
mov
aam
fidivs
cmp
outsb
mov
lods
iret
sub
jp
jnp
stc
insb
leave
std
rcll
xchg
es
xchg
jmp
sbb
ja
stc
xlat
loope
scas
jno
mov
subl
xor
cli
rol
dec
pop
inc
repz
scas
cmpsb
dec
or
movsb
pushf
ret
fistps
insl
rorb
add
roll
add
loop
inc
mov
cmp
lret
gs
mov
fmuls
rcll
xor
cltd
lcall
mov
dec
in
outsb
aad
mov
and
dec
mov
cmc
inc
je
jp
mov
pop
add
lods
aad
xor
cmp
cmp
push
cs
and
inc
jb
mov
popf
or
mov
mov
or
xor
push
outsl
pop
xor
add
xchg
insb
mov
xor
ret
and
add
pop
add
movb
dec
movb
lea
jne
pusha
push
movw
pushf
lea
jmp
cld
jb
in
rcll
jo
testb
xor
out
aaa
xor
push
and
sbb
push
or
push
mov
data16
xchg
and
loop
mov
mov
jns
add
inc
lds
in
cwtl
jne
daa
inc
ljmp
mov
sti
xor
mov
call
push
imul
bound
mov
iret
rolb
push
push
push
mov
xchg
loopne
outsb
aam
jmp
cmc
fistpl
dec
das
or
sbb
inc
test
iret
dec
mov
cwtl
inc
pop
or
leave
mov
push
push
cltd
cmp
pop
xor
mov
lea
call
call
push
call
and
out
push
pushl
add
add
add
cmp
add
add
iret
loop
add
add
add
jae
add
add
add
pushl
add
add
add
sub
add
add
add
sub
add
add
add
add
add
sub
add
add
add
cmp
add
add
jbe
cmp
add
add
add
add
mov
daa
add
add
add
add
addb
add
adc
add
std
push
cmp
jmp
cmp
jns
sub
add
add
add
add
add
idivl
call
insl
push
call
loopne
jo
aad
pusha
bt
clc
xor
lea
call
hlt
and
jmp
pop
jge
cwtl
out
xchg
loopne
cltd
pushf
test
repnz
mulb
jecxz
fcompp
sti
and
scas
push
add
sbb
out
add
dec
jbe
arpl
ljmp
or
insl
fildl
adc
dec
mov
and
loope
mov
bound
lea
push
and
mov
xor
sti
test
insl
subb
cmp
cmp
push
cmc
add
jmp
push
call
in
shl
mov
test
sub
test
mov
sub
dec
stc
sbb
mov
bt
cmp
cmp
jmp
js
adc
rcll
mov
test
jbe
aaa
addb
add
pop
sti
cmc
icebp
push
jbe
lea
or
push
adc
add
xor
repnz
bnd
push
call
aaa
adc
ret
cmp
fildll
mov
mov
test
sbb
xchg
inc
mov
xchg
mov
jp
cmp
cmpsl
lock
add
popf
jle
or
xor
fdivl
adc
rol
mov
insl
hlt
test
lahf
push
xor
and
in
adc
testb
sub
leave
mov
dec
insl
hlt
jmp
xchg
pop
cs
test
lret
icebp
fsubrl
ja
push
ljmp
clc
add
dec
dec
dec
inc
lock
clc
inc
inc
pop
push
adc
pop
push
mov
jno
movsl
xor
cmp
frstor
mov
mov
jb
das
dec
sbb
xor
cmc
stos
cwtl
in
xchg
pop
sub
rclb
jge
xor
enter
arpl
pop
ljmp
xor
push
mov
lahf
and
or
push
push
fs
xchg
cmpsl
nop
lahf
and
pop
jne
aas
in
fcompp
mov
xor
sbb
cmp
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
jo
rcll
push
addr16
pop
push
and
add
das
lds
arpl
cmpsb
js
push
xchg
cmpsl
sub
adc
mov
ljmp
and
mov
mov
push
jbe
sub
sub
add
jecxz
pop
fdivl
ds
lods
scas
psubw
mov
sub
adc
adc
xchg
rorl
fadd
mov
shll
ror
iret
lret
jae
lods
xor
push
das
jo
mov
mov
mov
adc
orb
mov
sbb
shr
pop
pusha
into
out
in
cmp
jmp
inc
inc
ds
divb
lock
cmpsl
aad
inc
mov
sbb
sbb
sbb
addr16
enter
dec
add
mov
xchg
test
inc
test
xor
pop
out
aam
ss
mov
dec
out
cmp
pop
lcall
fcmovb
movsl
dec
xor
mov
cmp
inc
mov
mov
das
test
mov
push
call
clc
xchg
add
push
lods
imulb
lret
jb
mov
test
sbbb
pop
add
insl
dec
dec
and
gs
shlb
adcb
push
aaa
add
push
aad
out
movsb
je,pn
push
push
and
pop
or
xchg
dec
xchg
mov
cltd
mov
loope
lods
stc
or
leave
ret
aaa
cmp
ret
aaa
cltd
gs
stos
xor
test
sbb
add
mov
sbb
cmp
fucomip
int3
rorl
rol
mov
xor
aam
lcall
ja
repz
sbb
cmp
jns
add
push
add
add
push
push
call
sub
add
dec
or
add
sub
pop
out
pop
and
sbbb
mov
xor
mov
jne
cli
jp
cmp
mov
inc
or
xor
cmpsb
nop
clc
adc
rcr
adc
das
cmc
cmpsb
pop
lcall
inc
dec
call
jp
xchg
lock
out
xchg
jno
imul
push
fucomp
sbb
test
add
rcll
pop
test
mull
mov
push
mov
test
push
in
les
mov
cmp
dec
jle
pop
sbb
out
outsl
xor
push
bound
subb
and
xor
jae
or
adc
xor
xor
jo
mov
add
ffreep
jae
sub
or
fisubs
pop
rcrl
pop
and
cmp
pushf
mov
jge
cmpsl
mov
cmc
enter
push
call
loop
push
call
cld
bound
jae
rcll
sub
rorl
rorl
mov
lds
test
cmp
rep
xchg
xchg
daa
test
xchg
xchg
jp
cmp
test
cltd
data16
lret
lds
shl
movsb
ds
fiaddl
icebp
cmp
jl
aaa
inc
call
push
ss
inc
push
testb
pop
movsl
push
add
mov
mov
lret
dec
das
dec
jbe
lret
pop
sbb
cwtl
jl
pop
cmpsl
and
scas
js
cmp
jmp
rcll
ss
push
or
or
adc
jle
stc
mov
cs
std
cmp
orb
dec
push
loop
std
add
je
dec
push
lods
sub
call
std
pop
jg
fcompl
lods
sub
mov
enter
mov
inc
mov
fimull
adc
or
shr
mov
call
pop
cmp
stc
push
jmp
repz
cmpsl
lds
cmp
push
ficoms
call
xor
cli
stos
mov
sub
test
sub
sbb
xchg
test
leave
pop
or
rcll
mov
dec
dec
xchg
xor
push
mov
mov
dec
mov
aad
xchg
ret
pusha
sti
popa
jb
jecxz
popf
inc
dec
pop
out
imul
loopne
push
sub
cwtl
inc
cltd
dec
push
jl
and
cmpsb
jne
sbb
pop
push
cwtl
scas
fs
cmp
add
cmpsb
mov
add
dec
and
popf
ljmp
shrb
imul
jbe
push
call
cmpsb
or
and
push
pop
pop
fs
negl
pop
or
xorl
and
fwait
mov
xor
shrl
ss
js
rcrl
js
mov
out
push
inc
lods
fistps
dec
test
cmp
loop
cmpsl
aas
int3
pop
std
mov
xor
mov
mov
clc
insb
cltd
lds
and
and
je
test
sbb
out
or
jge
jno
mov
cmp
xchg
scas
mov
jnp
out
cmp
add
dec
add
add
rcll
cmp
adc
lret
adc
push
mov
arpl
loope
pop
pop
cmpsl
fistpll
push
sub
lods
inc
subb
nop
test
pop
andb
aam
cmpsb
push
push
cmp
negb
add
stc
jg
test
mov
lret
lods
dec
mov
sub
cli
into
add
pop
inc
cmp
add
inc
sbb
mov
push
sti
cs
call
sub
rcll
es
test
inc
inc
aas
xchg
xchg
mov
mov
add
push
jb
or
pop
sub
or
push
fisubrs
dec
cmp
rorb
fldcw
shlb
dec
dec
mov
out
adc
jmp
push
dec
inc
jno
jg
or
cmp
add
xchg
loop
ss
pop
loopne
mov
xor
rcr
jmp
jg
or
xor
xchg
add
cmc
flds
cmp
iret
mov
pusha
clc
not
stc
clc
ror
pushf
pusha
neg
push
test
xor
movb
cmc
movb
cmp
shr
call
repnz
xchg
loop
pop
mov
adc
pop
push
arpl
adc
push
xor
lcall
push
fcmovnb
push
int
mov
test
xchg
arpl
pop
sbb
scas
pop
xchg
fldcw
ljmp
cmpsb
shr
cltd
idivb
mov
leave
lahf
xchg
or
pop
xor
fwait
lods
mov
inc
lock
lods
shll
arpl
pop
out
loop
insl
subl
je
fwait
adc
mov
inc
inc
int3
ss
push
call
sti
lcall
push
call
sbb
push
call
mov
and
jbe
dec
jne
dec
jo
outsb
add
jp
call
ja
push
push
call
inc
sub
and
shrd
mov
sar
not
cmc
add
stc
stc
mov
clc
clc
stc
clc
cmpsb
call
dec
nop
xchg
loope
pop
jmp
dec
inc
cmp
aas
hlt
inc
clc
hlt
add
or
xor
push
lret
cwtl
inc
lea
push
push
sbb
imul
and
jmp
lcall
inc
cmpsb
in
or
and
adc
pop
movsl
pop
std
das
sbb
adc
fistpl
icebp
push
push
insl
mov
mov
ds
inc
cli
inc
dec
int
and
nop
push
insl
call
sub
clc
mov
push
sbb
popa
loop
sbb
mov
mov
add
add
xor
popf
adc
loopne
pop
adc
jge
out
mov
nop
loopne
out
pop
je
sub
loopne
pop
fcmovb
cmpsl
mov
pop
push
mov
pusha
jae
movsb
cmc
out
into
push
rcl
mov
and
cmp
mov
xchg
out
fsubrs
rcrb
add
js
subb
mov
xchg
sub
leave
mov
mov
mov
mov
rorl
sar
dec
outsb
lahf
loope
imul
into
or
xlat
mov
ds
clc
adc
lahf
jp
scas
cli
je
inc
dec
or
cmp
insl
add
mov
push
add
mov
xor
pop
loope
into
adc
leave
adc
add
loopne
pop
adc
or
jecxz
lret
popa
repz
pop
mov
inc
xlat
dec
shll
mov
mov
stos
inc
test
pop
xor
outsl
mov
daa
adc
sub
outsl
ss
pop
jae
or
iret
jle
mov
mov
push
xchg
cmp
pop
push
cmp
outsl
pop
ret
ret
hlt
push
jg
inc
sub
xchg
cs
xchg
fstl
pop
add
or
incl
and
test
into
in
neg
loope
test
mov
cli
sub
mov
out
adc
mov
xchg
rclb
loopne
add
mov
and
fwait
dec
fs
loop
leave
mov
xchg
lock
call
push
call
or
push
movsb
lret
rcll
enter
cltd
nop
inc
mov
inc
xchg
dec
cltd
out
push
push
nop
mov
sub
jno
pop
movsb
in
out
cmc
inc
test
shlb
nop
js,pt
mov
outsb
movsb
fdivrp
ds
pop
push
mov
dec
dec
add
shrl
shll
push
lods
fcmovu
xlat
or
cmp
in
clc
imul
jg
sbb
sti
mov
adc
adc
stos
stc
cmpsl
or
or
mov
insl
jle
push
es
jmp
xchg
stc
or
in
arpl
pop
fistl
je
enter
mov
mov
les
push
fcmovnu
dec
inc
push
jg
fistl
cmp
lahf
jno
jno
push
nop
dec
and
lret
in
adc
adc
mov
jp
pushl
rorl
leave
jae
and
mov
sub
out
sbb
pop
dec
cmc
mov
mov
add
xor
and
orb
jns
mov
imul
shrl
adc
cmp
mov
ds
inc
sbb
adc
fst
pop
adc
lcall
ffree
add
pop
adcl
mov
dec
pop
push
out
je
fisubrs
lea
pop
fistl
add
fildl
out
negl
pop
mov
push
iret
and
nop
sub
push
push
mov
imul
lds
mov
mov
cmc
ds
or
and
inc
sbb
je
scas
repnz
incl
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
xor
or
add
push
call
pop
pop
cmpsl
push
call
scas
push
call
sbb
add
cmpsl
lea
jae
jmp
push
call
arpl
cmpsl
rcll
rcll
jae
ds
std
dec
sti
add
cld
loop
push
xchg
pushf
repnz
pop
xlat
xor
jg
std
pop
fmull
scas
pusha
sbb
cmp
mov
shlb
pop
outsb
xor
outsb
or
inc
aaa
rcrb
or
leave
push
out
cltd
ret
ljmp
inc
stc
mov
dec
xchg
ljmp
push
pushf
jbe
sub
jmp
lock
sub
into
sub
fcmovnbe
pop
out
outsb
jns
jns
rcrl
rcl
addl
xchg
repnz
mov
mov
mov
sbb
ror
jecxz
gs
pop
dec
inc
and
lcall
or
incl
mov
or
xchg
inc
ljmp
lret
sbb
dec
imul
xchg
inc
mov
outsl
out
lock
loopne
xchg
lods
xchg
inc
push
std
or
jg
icebp
mov
shrl
pop
push
jmp
and
cmp
out
mov
sbb
and
mov
lds
lods
loopne
pusha
test
jg
movsl
repz
mov
lds
mov
mov
lds
pop
ds
or
pop
or
outsl
mov
dec
mov
fcmovnbe
pop
xlat
imul
mov
mov
imul
cltd
pop
jmp
dec
push
mov
pop
mov
dec
adc
outsl
popa
loopne
out
or
aad
pop
test
in
push
sbb
leave
and
xchg
sbb
jbe
fisubl
xor
add
rorb
push
sbb
and
notb
jle
das
notb
test
mov
cmp
popa
mov
ds
sub
mull
cmp
pop
mov
or
loopne
fimull
cmc
push
add
rcll
dec
loopne
lock
cmp
aaa
repnz
shlb
xor
ss
cs
jne
stos
inc
pop
stos
pop
out
stc
fsubs
fidivrl
or
xlat
push
cltd
jb
cld
insl
dec
jo
or
arpl
pop
lock
adc
push
js
cmp
or
arpl
add
pop
stos
fcomps
and
pop
fsts
mov
stc
and
orl
out
insb
add
cmp
push
add
pop
cmp
call
jmp
fcmovbe
pop
outsl
stc
dec
inc
repz
inc
inc
ds
cmc
inc
cld
add
cmc
ss
out
in
push
das
pop
jp
fldl
popa
pop
sbb
test
push
ret
push
fs
mov
bound
mov
sub
dec
ret
jne
out
shl
call
mov
in
movsb
lcall
in
aam
jmp
adc
push
call
in
mov
ljmp
add
pop
push
call
std
cmp
jbe
jmp
mov
call
in
cs
fcom
pop
sub
xchg
mov
or
or
ret
push
sbb
pop
std
out
inc
and
inc
hlt
cld
adc
lods
clc
push
lahf
sub
fs
mov
mov
cmp
dec
jo
and
bound
idiv
inc
jne
fldcw
ja
sbb
jge
inc
mov
cmp
pushf
xor
in
push
mov
pop
rorl
pop
and
insb
add
imul
xor
rcrl
lahf
je
xlat
cmpsb
mov
pop
daa
cmp
mov
xchg
inc
popl
xchg
nop
mov
ljmp
add
out
mov
inc
mulb
mov
mov
icebp
divl
in
es
xchg
scas
xor
in
fistpll
cmpsb
pop
adc
lods
pop
add
stc
push
push
out
lahf
sbb
adc
mov
insb
shll
decl
repnz
divl
enter
mov
stos
mov
rcll
int
dec
fwait
dec
cwtl
dec
lcall
lcall
add
or
xchg
cld
xlat
fstpt
daa
pop
and
sbb
shl
stos
test
mov
pop
mov
daa
lret
cmp
push
rol
pop
xchg
xor
hlt
int3
jecxz
mov
mov
rorb
cld
test
or
mov
stos
pusha
std
cmp
push
movsb
das
enter
cmpsl
test
and
jbe
loope
fcom
pop
pop
out
cmp
lock
inc
cmp
cmp
out
push
push
pop
adc
mov
stc
add
mov
pop
ja
out
aaa
rcrl
cmp
fstpl
push
sub
sub
or
sub
call
in
fistpll
inc
js
push
jp
cmp
jmp
lds
push
xchg
addr16
out
mov
cmp
fsubs
inc
jmp
out
mov
cmp
sub
push
call
mov
add
cli
add
add
aas
and
lea
jne
sbb
btc
neg
sub
not
aam
stc
mov
shr
add
rol
adc
mov
bt
pushf
stc
jmp
sub
shr
rcr
mov
test
jmp
clc
cmc
push
cmp
push
call
xchg
ret
pusha
xlat
rcll
rcll
inc
push
xchg
xchg
cltd
inc
dec
in
into
aas
mov
fsubs
into
movsl
jbe
push
fndisi(8087
or
mov
or
cmp
adc
stc
cmpsl
idivb
cmpsl
aas
or
sub
or
push
push
lds
and
dec
dec
mov
shll
add
mov
push
pop
adc
scas
nop
cmp
mov
dec
pop
aas
popa
dec
loop
jbe
add
and
add
inc
gs
outsl
fs
gs
imul
add
addr16
call
lods
sub
fldt
rcll
in
mov
jle
jle
addb
aaa
and
out
int3
push
dec
popa
repz
mov
add
cwtl
fldl
cli
adc
popf
mov
dec
xchg
in
loop
jne
xchg
es
sbb
aad
push
inc
fisttpll
ret
into
test
push
xor
imull
xor
movl
int
push
dec
sub
fstpl
adc
dec
inc
daa
imul
or
cmp
aad
mov
ret
enter
jno
call
call
add
jge
push
push
push
in
or
adc
adc
pop
dec
jno
xor
or
mov
repz
sbb
movsl
sub
inc
inc
stos
shlb
sbb
nop
outsl
mov
iret
aaa
adc
pop
es
cmp
sub
jp
push
fwait
add
loopne
or
testl
jp
dec
lret
pop
mov
je
mov
enter
ret
loopne
rclb
repnz
lea
and
or
add
shll
nop
aad
pop
xor
add
mov
mov
ret
lret
pop
sub
push
add
mov
xchg
neg
sahf
xor
sbb
and
jge
inc
jge
inc
push
fiaddl
add
rcll
cmp
ficomps
arpl
jmp
pop
cli
data16
jnp
fwait
lahf
cmp
ljmp
jnp
inc
mov
sbb
inc
cmp
cli
dec
inc
lret
pop
adc
sar
repnz
adcb
mov
in
mov
mov
lea
call
jmp
add
pop
sub
rcrb
aam
out
repz
ds
add
jbe
iret
rcl
pop
je
imul
sti
pop
bound
sbb
dec
in
add
nop
xchg
add
out
jnp
call
xchg
ljmp
call
movsb
rorb
cltd
aam
pop
sub
repz
clc
lods
mov
mov
add
into
add
inc
xchg
in
jmp
sbb
sahf
icebp
loope
addr16
push
or
mov
fstl
dec
inc
ss
mov
jns
enter
adc
push
mov
sbb
out
cwtl
sbb
test
cs
in
jmp
fiaddl
mov
inc
aas
push
or
test
pop
js
push
pusha
pop
pop
mov
aad
mov
lahf
pop
pop
lods
shlb
fstpl
pusha
pushf
mov
bswap
pushl
xchg
mov
lea
xchg
jmp
push
call
hlt
add
lret
dec
fcmovbe
rcll
movsb
cld
cld
add
cmc
cmpsl
clc
movsl
lods
repz
test
daa
jle
xor
test
and
xor
inc
sub
xchg
inc
push
shld
adc
cmp
mov
pop
mov
fdivrs
repz
fdiv
xchg
xchg
mov
mov
mov
scas
dec
std
or
movsb
icebp
mov
pop
sub
push
cld
lcall
push
jmp
dec
repnz
mov
xchg
stos
pop
jno
adc
push
or
pop
mov
lret
pop
rcl
pop
leave
push
push
lods
mov
cmpsl
inc
movsb
pop
fs
xor
adc
sub
sub
cli
adc
mov
jmp
js
jmp
bound
cmp
imul
mov
dec
test
lods
sub
jnp
repnz
adc
sbb
xor
adcl
xor
outsl
stos
rcl
dec
out
xor
push
mov
sbbb
stc
adc
fcmovnb
fwait
test
mov
dec
cwtl
sbb
dec
lcall
scas
push
insl
add
data16
push
add
add
pushf
pushl
pushf
lea
jae
pusha
bt
jmp
sbb
pop
cmp
or
sbb
or
and
pop
add
cmp
sub
imul
enter
shll
or
and
dec
mov
cltd
ret
dec
mov
imul
push
jmp
sbb
xor
jmp
subl
movsl
cwtl
sub
cmpsb
jecxz
mov
nop
mov
xor
lahf
adc
sub
mov
gs
bt
test
jmp
lea
je
bt
call
pop
inc
loop
rcll
pushf
div
movsl
cmpsb
repnz
test
add
sub
adc
dec
lcall
andl
and
rcl
ret
in
cld
jb
xchg
lcall
test
push
data16
ret
in
aad
xor
xor
push
in
cmp
pop
inc
xor
or
jno
aam
xchg
inc
mov
fsts
shlb
adc
pop
ss
or
push
call
test
jle
or
add
fcomi
push
add
call
out
push
mov
jb
mov
sub
ja
push
inc
sahf
cmp
fimull
lret
mov
jge
dec
aaa
push
sbb
jb
stos
push
pop
jg
push
loopne
inc
frstor
inc
pushl
xchg
loopne
xchg
es
outsb
jae
pop
add
loopne
mov
stos
repnz
iret
dec
fildl
dec
sub
mov
add
pusha
dec
arpl
ss
inc
xchg
cmpsl
nop
int3
arpl
js
cmpb
int
mov
mov
rcll
notb
or
dec
add
in
add
or
gs
jle
push
sbb
sub
jnp
dec
add
jmp
test
adc
push
dec
lahf
adc
pop
cmpsb
lock
add
punpckhbw
mov
adc
mov
mov
or
xor
test
sub
ret
shlb
jg
xchg
stos
clc
push
incb
mov
adc
push
cld
lods
notb
cmc
shrl
add
repz
call
jb
mov
pop
movzbl
bsf
movsbw
mov
pusha
shl
btr
mov
test
sub
pushf
lea
jmp
lods
pop
iret
rcll
mov
or
or
leave
inc
xchg
jns
int3
xchg
loope
push
bound
sub
movsbl
mov
cmp
jae
out
iret
scas
lahf
test
mov
ss
cmp
test
sub
cwtl
subb
ljmp
in
dec
pusha
or
enter
out
sub
int
ret
jecxz
jb
mov
sub
inc
pop
xchg
mov
mov
mov
push
call
popf
push
call
pop
add
gs
add
adc
push
add
repz
add
inc
jmp
xchg
or
rcll
mov
sub
jle
test
imul
jno
add
enter
jl
in
sbb
ljmp
add
sub
pusha
jle
ljmp
into
pop
dec
mov
cmp
xor
mov
xor
loope
dec
mov
rorl
das
gs
add
sbb
add
sbb
test
jle
daa
pop
sbb
out
mov
mov
in
push
mov
decb
pop
bound
jb
sbb
mov
adc
dec
daa
insl
hlt
imul
adc
sbb
negl
inc
pop
gs
push
push
out
rcrl
push
sub
jecxz
mov
jle
out
into
bound
pop
enter
inc
xchg
cmpsb
and
push
jle
lock
jno
lds
add
push
sar
dec
out
dec
jle
sub
lea
adc
cmp
sbb
or
inc
push
sbb
out
lcall
cwtl
jae
cltd
push
call
rolb
es
int3
rcll
and
scas
scas
add
stc
test
incl
loop
mov
jmp
pop
jbe
xchg
mov
sarb
push
cli
outsl
cld
dec
lahf
int
leave
pop
fwait
fwait
jp
dec
sub
jp
jo
jbe
das
leave
pop
fisubrl
push
negb
es
push
arpl
cs
pop
cmp
cmp
push
lods
out
dec
daa
and
lret
mov
hlt
cmp
mov
xchg
inc
push
hlt
lea
test
mov
cmc
stc
clc
test
call
push
call
stc
pop
ss
lea
ja
or
xor
rol
sub
inc
add
stc
add
bsf
mov
shl
cmc
sub
rol
mov
push
repnz
pushl
movw
jmp
popf
unpcklps
rcll
xchg
sbb
and
je
sbb
addr16
mov
jecxz
sbb
mov
dec
cmp
fildll
ja
mov
pop
insb
dec
mov
pusha
sti
xor
push
mov
mov
fs
pop
jnp
cmp
repz
cmp
lahf
iret
mov
shrb
push
mov
pop
or
stc
fmuls
push
push
jo
fsubr
lcall
pop
add
or
or
stc
sbb
out
lret
cmp
bound
jne
xlat
jo
mov
and
das
test
insb
mov
adc
push
sti
and
push
dec
push
mov
cli
xlat
stos
ret
jb
pushf
or
outsl
add
mov
pop
call
push
call
outsb
push
dec
outsb
addr16
in
add
in
adc
lret
rcll
adc
cmpsb
in
mov
clc
out
mov
out
cmpb
rep
add
jge
jnp
dec
or
cmp
or
out
jb
cmp
inc
pop
sbb
lret
mov
mov
xchg
addr16
pop
cmp
rcr
jb
push
and
push
sbb
mov
rcll
xchg
imul
addr16
addr16
xchg
stos
inc
test
shrl
jecxz
idivl
sbb
lock
cmpsl
das
aaa
fadds
pop
dec
xlat
dec
push
adc
pop
adc
test
stos
inc
and
in
xchg
dec
into
mov
mov
out
in
dec
jmp
jbe
add
mov
cmpl
jb
mov
fwait
xchg
xchg
cwtl
pop
jmp
and
shrl
dec
dec
ret
int3
push
cmpl
lret
mov
adc
mov
and
sbb
mov
pop
rclb
push
pop
mov
mov
cmp
imul
adc
mov
imul
test
jb
jnp
fisubrl
in
clc
mov
jge
push
push
sub
inc
lahf
mov
mov
push
push
adc
loopne
inc
fdivrs
dec
xchg
fstps
mov
adc
jo
sahf
fisubrs
out
sbb
jb
stc
fdiv
mov
das
loop
cmpsl
cmc
test
mov
cli
decl
popa
lret
fs
lds
cmp
cs
jecxz
push
xchg
or
jecxz
sbb
dec
push
nop
jb
jl
adc
loop
pop
sub
xchg
lock
push
cmpsl
popf
push
inc
ss
push
cmp
stos
mov
push
sub
inc
movsl
out
sbbb
data16
sti
std
inc
sbb
sbb
movsl
sbbb
sti
aad
mov
xor
mov
dec
push
jnp
call
push
addr16
push
leave
rcll
push
cmp
xor
cmp
pop
push
andb
nop
mov
fdivr
dec
push
add
inc
adc
xchg
dec
cmpsl
push
mov
jbe
decl
movsl
aad
jae
xor
ret
dec
cmp
mov
rclb
add
cmp
je
cmp
dec
mov
scas
sub
je
test
in
aaa
cmp
pop
add
fmull
sub
mov
lahf
movsb
out
xor
sti
dec
inc
es
adc
sbb
and
rcll
in
outsb
add
or
add
or
out
jns
mov
xor
xchg
std
frstor
cltd
lea
ret
cmp
sub
mov
pop
xor
imul
mov
cmp
dec
leave
test
dec
lds
mov
fiadds
lahf
inc
in
cmp
sbb
mov
adc
stc
stos
mov
aad
mov
pop
mov
push
call
rclb
enter
jmp
jmp
xchg
lahf
out
xchg
test
movsl
test
inc
mov
xor
lret
and
push
cmp
jne
push
cli
int
leave
jnp
sub
jae
rcll
sub
mov
adc
mov
mov
adc
lret
mov
subb
jno
sarb
pop
mov
hlt
jle
rorl
mov
adc
xchg
jo
inc
stos
cmc
je
mov
nop
push
xchg
add
movsl
repnz
fdivrs
jo
dec
pop
jnp
repz
xchg
ret
movsl
push
mov
pop
out
fldcw
mov
sub
fnstsw
adc
push
call
cmp
add
in
push
add
push
push
call
sbb
pop
pop
pop
xor
sub
sub
aam
sub
fdivr
jb
inc
ror
cmp
aaa
mov
out
aaa
mov
xchg
sub
sub
pop
jg
xchg
inc
sbb
xchg
or
push
ljmp
testb
jge
sbb
and
cmp
lahf
xor
ror
sbb
es
cs
jmp
adc
xchg
shr
js
mov
cmpsl
push
pop
lea
jne
call
push
call
iret
pusha
jg
es
rcll
sti
mov
test
ror
leave
jge
test
mov
addr16
cmp
cwtl
push
ljmp
mov
dec
jnp
repz
mov
push
enter
jno
push
insl
jle
mov
push
test
mov
sbb
and
mov
sbb
cmp
xchg
sbb
xchg
sub
add
mov
push
add
lret
jl
push
call
adc
les
push
add
push
call
es
lods
ljmp
mov
loop
add
push
call
xor
shr
btr
push
shl
inc
shld
bts
lea
xor
mov
test
pushf
test
bt
test
pushf
call
push
call
das
push
call
leave
xchg
inc
push
call
inc
frstor
cld
rcll
leave
dec
dec
sahf
mov
mov
mov
xor
and
pushf
sub
jge
cltd
mov
sbb
cwtl
inc
add
xlat
xchg
adc
shl
mov
inc
loopne
fldl
inc
gs
mov
xor
mov
in
aad
fwait
inc
daa
xlat
in
mov
mov
mov
dec
xchg
vmovhpd
mov
mov
add
lcall
out
adc
fsts
mov
push
dec
sub
repz
mov
or
and
jo
stos
scas
dec
loopne
push
pushf
or
cmp
insl
fsubr
xchg
mov
and
std
ja
gs
insb
idivb
ret
ja
outsl
jmp
or
jl
xchg
scas
lcall
cltd
cwtl
jmp
mov
mull
cmp
mov
xor
push
mov
mov
push
call
pop
pushl
mov
lea
jb
push
push
call
or
ret
rcll
test
cltd
add
scas
mov
mov
push
mov
out
aam
add
mov
mov
sbb
mov
push
mov
pop
mul
cmp
xchg
js
mov
sub
mov
xchg
pushf
sbb
bound
sub
jmp
rcrb
lea
push
pop
mov
xchg
stc
adc
addr16
push
je
inc
daa
sti
fdivrl
and
sbb
sub
push
call
jecxz
push
call
fwait
cld
daa
ret
rcll
cli
lret
leave
jp
jge
ret
jle
test
aam
jge
pop
sbb
in
inc
pop
popa
lret
pop
hlt
sbb
or
nop
nop
fldenv
ljmp
test
std
mov
out
cmp
mov
aas
fmuls
mov
jb
adc
sbb
aam
mov
mov
movsb
cmp
cmp
lods
testl
mulb
mov
stc
ret
subl
fisubrs
fsubr
fildll
jnp
in
rol
pop
pusha
xor
out
out
stc
inc
testl
dec
dec
sub
mov
sbb
dec
mov
xchg
push
mov
pop
test
mov
push
es
inc
aam
jmp
into
testb
push
rorb
roll
sub
mov
cmc
rolb
xor
push
aam
xor
ja
sub
mov
dec
pop
daa
fsubr
cltd
lods
jp
sbb
stc
test
gs
and
test
call
pop
fstpl
ss
dec
pop
test
test
mov
push
add
cltd
nop
adc
out
sbb
out
scas
in
inc
imul
shl
sbb
push
in
xchg
addl
cld
jbe
lock
sub
jle
leave
inc
mov
mov
ljmp
xchg
add
push
ficomps
sub
mov
int3
inc
imul
ret
adc
adc
sbb
adc
and
cltd
inc
mov
sbbl
ret
jg
hlt
adc
push
imul
jne
fcomp
lahf
frstpm(287
popa
test
jb
mov
jno
mov
push
or
outsb
push
std
fnstcw
pop
inc
lock
push
jmp
jb
cmp
push
pushf
cmc
pusha
cmc
xchg
xor
adc
dec
adc
xchg
pusha
not
movzbw
clc
mov
bsr
pushf
mov
rcl
ror
bsf
mov
rol
add
mov
sbb
sub
setnp
lods
jmp
movsl
pop
add
rcll
sbb
xchg
movsl
icebp
mov
aas
outsb
sti
sbb
jmp
loop
mov
xor
sarl
mov
push
repnz
xchg
aam
mov
movsb
dec
or
pop
cmpl
cwtl
ret
mov
movsl
mov
les
xchg
push
jb
jnp
mov
mov
in
cmpsb
test
rcrb
cmp
sti
insb
mov
ficoml
jp
xchg
ds
xchg
pop
cmc
push
out
push
pop
and
fld
mov
push
sbb
inc
rcl
fildll
lods
pop
sahf
int3
push
pop
sub
cld
fisubrs
mov
sub
xchg
mov
mov
jecxz
sub
xor
adc
jmp
xor
addl
add
push
movsl
or
scas
mov
sub
aam
xchg
adc
ret
lods
inc
movsb
cltd
rol
cmpsl
pop
dec
dec
ret
inc
inc
mov
inc
pop
call
iret
add
jle
imul
mov
cmp
mov
add
add
xchg
jns
sub
pusha
jnp
call
cmp
dec
fildl
push
call
scas
push
jnp
rcll
cmpsb
jbe
cmpb
mov
pop
xchg
sbb
pop
inc
clc
jns
cld
lds
fists
pop
inc
or
add
jge
mov
popa
cmp
ret
adc
pop
jo
jns
fs
xchg
rsm
repz
mov
lcall
add
jmp
sbb
adc
dec
and
mov
cmp
cmp
cli
rorb
cmc
in
leave
stos
mov
je
jno
jnp
call
cmp
sbb
xlat
pushf
lea
jne
pushf
lea
call
pushf
pushf
lea
jmp
test
cmp
mov
push
call
lret
mov
and
ret
es
ljmp
xchg
sub
pop
je
xor
ja
jge
jle
dec
add
aam
mov
fdivrl
lea
in
fcmovnu
dec
dec
adc
bound
push
in
lea
lds
in
aas
pop
jle
push
xor
jg
xchg
pusha
movsl
test
xor
testb
push
adc
xor
pop
jo
scas
mov
cmpsb
cmp
inc
and
scas
xchg
movsb
push
sub
pop
push
dec
pop
aas
mov
ss
call
mov
or
mov
fndisi(8087
cwtl
ficoms
lock
pop
inc
jge
mov
les
sub
xor
pop
fldt
xchg
cmpsb
sub
js
notb
dec
mov
addr16
inc
loope
ds
jno
and
adc
cltd
clc
xchg
sub
loopne
push
shrb
inc
pop
push
xchg
and
das
jl
jae
test
cmp
inc
pusha
mov
idivl
cmp
popf
mov
inc
aas
push
jg
mov
and
mov
in
add
sub
inc
dec
dec
xor
cs
insb
add
mov
aad
add
or
add
push
mov
lea
jmp
push
call
mov
jecxz
and
pop
dec
sub
jmp
sub
xor
sub
push
dec
or
jp
mov
push
push
into
push
and
jge
fdivr
test
lods
push
sbb
add
stc
cmpsl
aam
hlt
jle
lea
add
mov
xchg
cs
sub
pop
fdivrl
inc
mov
dec
inc
add
push
add
mov
adc
icebp
and
adc
aam
push
hlt
mov
stos
mov
and
xor
call
dec
jmp
dec
xlat
mov
xlat
sub
sub
xor
jecxz
xor
cmp
data16
fldcw
nop
inc
mov
js
adc
mov
shrl
sbb
push
mov
xchg
jns
mov
sbb
push
imul
mov
xchg
call
aad
ret
sahf
push
gs
repz
or
or
inc
lret
jmp
sarl
gs
les
mov
dec
jnp
call
dec
jo
jno
push
call
repnz
or
or
in
xchg
push
leave
loopne
push
jge
stos
test
mov
lock
push
cmc
scas
mov
sahf
inc
xchg
push
cmp
xor
push
adc
xor
jg
pop
test
cltd
dec
sub
dec
adc
pushf
xor
clc
sbbl
pop
int3
lahf
test
add
mull
subl
addr16
data16
add
cmpsb
jmp
stc
stc
pusha
cmp
jmp
push
call
fwait
pop
push
call
inc
inc
push
andl
pop
adc
bound
addr16
adc
and
mov
jns
push
sub
mov
add
enter
enter
movsl
rcrl
addr16
pop
xor
loop
pop
sub
idivb
mov
add
insb
pop
clc
xor
ret
sub
mov
adc
or
xlat
push
pop
stc
js
dec
cmp
je
arpl
cs
xor
add
test
call
lahf
xchg
inc
hlt
or
jno
mov
int3
or
mov
leave
cmp
movzwl
pushl
pop
pushf
mov
bt
add
cmp
stc
mov
jmp
push
call
insb
sub
add
popf
fmull
add
call
outsb
addr16
cmp
push
add
add
test
push
add
insb
add
loop
push
add
push
call
pop
stos
add
rcll
out
cmp
ds
repnz
inc
ds
imul
or
aas
xor
stos
push
sbb
pop
add
xchg
bound
dec
rorb
inc
push
or
xchg
bound
fisubrl
fstp
or
mov
and
shrb
push
pusha
sbb
sbbb
pop
or
scas
hlt
ss
stos
xchg
sbb
mov
aas
push
cmp
rcr
pop
jb
fs
cmp
sahf
in
cs
mov
cli
stos
mov
mov
mov
std
daa
mov
stos
pop
rolb
and
mov
mov
int3
or
test
in
add
insl
mov
jnp
adc
mov
ss
add
jb
jns
pop
mov
lret
in
test
test
jb
cld
imul
imul
lea
sbb
mov
xchg
sub
xorb
cmp
sub
cld
loop
inc
sti
inc
jae
insl
loop
aaa
cli
scas
sub
mov
fcmovnbe
sti
inc
jne
es
xor
je
push
addr16
xchg
cmpsl
shll
movsb
xchg
pop
sub
push
fs
addr16
loop
sbb
cmp
dec
das
pop
push
pop
dec
push
loop
mov
dec
rcrl
out
add
popf
xlat
sbb
adc
pushf
ja
xor
cmp
add
mov
mov
andl
add
insb
add
es
push
add
cmp
dec
jnp
call
dec
push
cmpsl
xor
loopne
leave
mov
adc
push
into
aam
sbb
adc
outsl
mov
push
in
lods
bound
cmpsl
std
mov
aam
aaa
push
in
lods
jo
and
add
jmp
stos
jne
dec
xor
sti
roll
testl
jnp
rcll
dec
into
sbb
xlat
push
aad
and
push
sub
mov
int
mov
pushf
arpl
lock
adc
xor
xchg
int3
push
insl
mov
jle
inc
inc
jo
cmp
mov
and
xchg
push
roll
sub
pop
insb
lret
stos
mov
push
xchg
mov
in
mov
jl
xor
sub
fiadds
jae
cmc
mov
rclb
rcll
clc
jp
pop
js
lret
jge
ja
out
call
dec
test
mov
loope
movsb
iret
repz
add
pushf
mov
es
int3
jb
push
mov
xchg
cmpl
xor
mov
add
push
adc
js
stos
ret
push
popf
sub
xchg
inc
fisubs
jne
adc
jne
test
into
mov
out
imul
into
mov
inc
mov
test
rcrl
mov
mov
stos
pop
addr16
dec
xchg
shl
or
mov
add
fdivrl
mov
fcoms
mov
sub
adc
xchg
pusha
cmpsb
mov
cmp
xor
inc
les
jo
lret
xor
into
imul
lcall
les
shrl
adcb
mov
mov
push
bound
cwtl
shrb
cld
mov
jp
aaa
cmc
add
pusha
jmp
push
push
xor
xor
fs
insb
add
xor
call
xor
clc
jbe
mov
pop
shl
call
shl
sub
sub
jb
mov
popa
inc
inc
mov
les
mov
push
dec
lcall
xchg
jmp
out
sbb
or
push
xchg
or
sub
xchg
fs
dec
or
push
sub
mov
mov
int
cmp
and
sbb
scas
subl
xchg
jl
mov
cmc
or
sub
enter
lahf
mov
pusha
lea
push
movl
pushl
pusha
mov
pushf
pushf
push
pushl
pushl
ret
push
call
cli
pushl
jmp
aad
fdivs
sub
and
sub
pop
lock
test
sbb
loope
mov
ret
ret
stos
sub
jae
mov
jl
shrb
or
mov
into
or
push
or
outsl
rcll
fstl
outsb
and
jmp
das
aaa
cmp
mov
sti
aam
addl
lods
out
dec
or
and
jg
addr16
and
repz
jl
enter
mov
test
and
dec
fbstp
push
imul
pop
addr16
sbb
jae
xchg
xor
xor
into
lea
js
lea
iret
mov
mov
test
fsubrs
rclb
mov
mov
dec
pop
loopne
cli
xlat
mov
or
bound
xchg
aas
add
fistpll
les
dec
in
xor
sbb
sahf
pusha
pop
adc
jnp,pn
ds
leave
xor
push
mov
mov
pop
fsub
in
jmp
lock
inc
cmp
aas
xor
adc
inc
test
adc
int
mov
aam
mov
jae
test
outsb
xor
out
xor
insl
push
lahf
xlat
fmuls
mov
or
and
jb
stos
xchg
or
and
xchg
das
and
jae
dec
and
inc
cmc
push
jle
mov
test
add
add
into
mov
cmp
inc
adc
scas
lret
xchg
or
mov
pop
adcb
pop
pop
icebp
or
push
pop
push
test
cmp
arpl
push
xor
add
js
enter
fsubrl
aaa
adc
jecxz
lock
cmpb
in
inc
cs
adc
fldcw
adc
mov
add
jp
popf
cld
mov
mov
pop
sbb
push
mov
xchg
mov
out
mov
pop
push
pmaddwd
jg
cmp
lahf
mov
hlt
fldenv
push
push
mov
lock
jns
rclb
sub
dec
push
xor
outsl
push
fucomip
enter
stos
repz
pop
jns
push
mov
mov
dec
cltd
lcall
push
arpl
add
pop
ds
xor
popf
jb
sub
insb
add
in
push
add
pop
cmpsb
jo
sub
jbe
js
and
cs
shrl
in
hlt
push
flds
pop
dec
popf
stos
cwtl
shrl
fisttpl
pop
xor
mov
sarb
stc
xchg
sub
mov
scas
int3
imul
mov
hlt
mov
es
stos
sbbl
dec
sbb
jae
imul
mov
mov
les
movsl
sub
lcall
test
cltd
nop
pop
iret
mov
lock
cwtl
dec
cmpsb
ja
das
cmp
jmp
stc
mov
pusha
cmc
test
push
mov
movb
lea
je
bt
add
pusha
push
cmp
pushf
lea
jb
cmc
cmp
test
cmp
push
call
cmp
jmp
sbbb
mov
pop
push
in
loopne
add
xor
and
aas
movsl
lahf
cwtl
mov
pop
mov
push
push
push
inc
sti
dec
dec
inc
sti
cld
sub
sbb
pop
stc
jae
call
cmp
stc
adc
stos
mov
or
icebp
push
call
lret
jg
cmc
jmp
push
call
cli
xor
mov
pop
shl
in
jmp
jmp
cld
inc
inc
pop
dec
mov
xchg
insb
bound
adc
rcr
and
fwait
popf
clc
into
adc
cwtl
scas
mov
or
ljmp
jge
mov
pop
pushf
cmpsl
cmp
lret
xchg
xlat
sbb
iret
jl
addr16
xlat
pusha
push
pushf
cmpsl
hlt
pop
fcompl
gs
add
ret
mov
sbb
jp
mov
pop
fmuls
rcll
xor
inc
xchg
dec
push
mov
xor
loope
jns
pop
sarl
pusha
call
sbb
and
ds
mov
mov
nop
cmp
ss
inc
sahf
out
xor
cmp
xchg
test
repz
jl
test
inc
jno
cltd
mov
cmc
jae
xor
xchg
repz
stos
sbb
fnsave
aaa
xor
pushl
icebp
push
xchg
lret
push
call
fwait
lret
pop
mov
pop
pop
sub
daa
sub
loopne
and
sub
insl
push
pop
or
fs
mov
lock
fisttpll
dec
inc
jg
into
add
lcall
mov
inc
mov
test
les
jb
adc
inc
mov
in
popf
mov
and
jecxz
sub
inc
jo
lahf
xchg
js
mov
push
out
popf
mov
mov
dec
push
daa
fsubr
lret
stos
pop
andl
clc
sbb
fisubrl
add
mov
pop
js
adc
adc
es
jno
sahf
adc
ret
les
cmp
adc
jb
or
pusha
push
call
mov
test
pusha
je
cmp
bound
jb
jle
mov
sbb
fiaddl
push
fs
ret
xchg
adc
mov
and
cmpsl
mov
ds
pop
repnz
shl
cltd
insb
push
pop
or
adc
jl
xor
push
call
mov
movsb
jg
rcll
decl
sbb
pop
adc
dec
dec
out
or
pop
fldcw
movsl
std
mov
gs
cmpsb
adc
insl
or
inc
shl
filds
push
pop
cmp
mov
in
popf
sbbl
cmp
insl
out
mov
sahf
int
mov
push
add
stc
fiadds
dec
data16
shlb
scas
rcll
fisubrs
push
push
mov
jne
mov
xor
ljmp
in
xor
xor
lahf
in
adc
int3
es
sbb
and
lock
stc
daa
gs
dec
movsb
icebp
ss
clc
testl
xchg
mov
sti
pushf
flds
dec
mov
shll
pop
rcrb
add
xor
fstps
fcoms
repnz
cltd
addr16
repnz
je
push
push
fimull
sti
into
jmp
lods
rcrb
jl
psubsb
into
push
call
and
mov
mov
mov
mov
add
nop
cmova
outsb
mov
or
fs
mov
lods
push
inc
shlb
jae
enter
jmp
ds
in
outsb
xchg
outsb
jle
inc
adc
fistps
bound
jno
xchg
shll
or
fcomp
call
pop
fsubrs
or
popf
jl
jl
pop
dec
pusha
cmp
rolb
imul
jp
call
dec
push
call
jne
pop
les
ljmp
cs
les
or
or
push
enter
dec
ds
inc
sbb
xchg
loope
nop
jge
add
jne
shr
cmp
pop
outsl
xor
nop
jge
xor
mov
xchg
adc
cmp
insl
add
insb
inc
pop
mov
insl
rclb
cmp
push
cmpsb
aaa
and
jnp
push
push
mov
scas
jg
sub
xor
inc
mov
mov
xor
mov
pop
adc
aaa
pop
lea
dec
xchg
inc
aaa
jmp
stos
ja
stc
adc
out
in
sbbb
xor
sub
aas
lods
in
cmpps
arpl
clc
mov
out
or
push
mov
test
adc
or
aad
xchg
mov
and
into
sbb
in
fsubrs
add
sarb
cmp
pop
mov
or
or
and
push
shrl
ret
sub
iret
fcmovu
fbstp
call
imull
in
mov
xchg
sub
push
or
xchg
les
sub
ror
mov
jbe
dec
dec
dec
adc
das
jo
outsl
jno
push
in
xchg
loope
pop
mov
xchg
inc
mul
mov
mov
arpl
dec
bound
fsubr
scas
push
mov
sarb
and
jle
shrb
cmp
cmp
dec
xchg
cwtl
pop
mov
hlt
lret
call
mov
adc
push
add
push
or
arpl
insb
cmpsb
adc
test
iret
mov
pop
in
aam
cmp
test
bound
mov
fs
out
cmpsb
popf
jb
cmpsl
cmp
addr16
cmc
cmp
in
cmp
into
sbb
cmp
addr16
fnstcw
mov
sub
cmp
in
lea
jbe
pushf
std
clc
dec
mov
sub
in
ror
loopne
aas
push
shrl
insl
add
inc
rorl
add
lods
mov
insb
add
sub
push
add
mov
cmp
test
sub
pusha
pushl
popl
jmp
or
pop
popf
insl
insb
jo
and
jb
je
test
xchg
sbb
mov
push
mov
out
int
test
addl
lahf
loope,pt
push
push
adc
scas
push
jns
add
loope
xor
or
sub
add
loopne
popf
mov
insb
and
adc
nop
ror
sbb
cmpsl
dec
loopne
add
lea
mov
sub
insl
dec
movsb
push
or
mov
imull
scas
add
jo
xor
pop
jns
or
leave
nop
inc
lds
push
imull
fldt
nop
roll
jns
push
inc
nop
loope
or
fldenv
inc
imul
sbb
pushf
addb
popf
mov
jge
adc
aad
jb
aam
stos
xchg
mov
cmp
mov
cwtl
inc
sbb
jl
cmpsl
add
aas
adcb
sub
push
pop
adc
sub
jp
jns
sbb
je
push
inc
cld
dec
repnz
cmp
xchg
dec
cmpsl
test
or
sbb
enter
shl
jmp
leave
fisttpl
mov
jle
push
pop
je
xchg
and
xor
jecxz
sub
icebp
aad
hlt
icebp
and
push
push
push
cmp
xor
adc
jge
or
loop
mov
mov
insb
inc
pop
xor
add
cwtl
rorl
add
push
call
stos
mov
dec
aam
rcll
dec
aad
es
loope
ljmp
sub
xchg
loop
das
xchg
push
mov
rolb
mov
add
sbb
adc
cmp
push
cmpsl
inc
mov
in
movb
mov
adc
xor
mov
cmpl
movsb
lret
cmc
test
cmp
inc
push
pop
adc
call
rcrl
dec
xchg
aam
sbb
or
daa
rol
push
in
lock
pop
jns
pop
or
enter
inc
sbb
push
jecxz
cwtl
jne
test
fcoms
int3
pop
orl
mov
faddl
aam
mov
dec
sar
cmp
jne
les
sbb
ret
mov
into
jmp
pop
and
sub
lods
xor
xchg
inc
or
int3
ja
outsb
shrl
insl
imul
add
sub
rolb
fimull
mov
lds
sti
rol
sub
xlat
pop
mov
xor
mov
sbb
dec
mov
sbb
test
lahf
push
bnd
sbb
sti
test
mov
mov
dec
xchg
mov
mov
jne
shll
rclb
les
pmullw
dec
pop
and
int
or
and
mov
dec
data16
mov
mov
adc
adc
out
add
stc
icebp
dec
sbb
rorl
rcr
cltd
ror
leave
ror
dec
insb
repz
and
stc
cld
insb
or
int
and
or
sbb
jge
fwait
jp
xchg
sbb
lea
stos
inc
rol
sbb
in
push
mov
cli
fstps
add
lahf
bound
jp
lods
push
mov
cwtl
enter
lods
sbb
push
jns
fmul
scas
scas
inc
insl
cmp
stc
cli
and
faddl
dec
fnstcw
sub
aad
mov
sbb
dec
mov
push
xlat
popf
dec
sbb
ret
cmp
mov
sar
and
xor
or
sarb
xor
pop
xor
xchg
sbb
aas
out
out
shll
imul
int
push
orb
test
arpl
mov
stos
andb
loopne
int3
popa
pop
int
in
sbb
jns
fdivs
add
pop
dec
lds
pop
sbb
pop
int3
addr16
mov
inc
js
dec
dec
jl
rcrl
xor
pushf
inc
jnp
xchg
mov
aam
out
fildl
fidivrs
adc
jg
xchg
or
dec
out
mov
int
cmp
sub
pop
jmp
or
sbb
xor
xchg
in
stos
and
gs
loope
ljmp
pusha
push
test
push
add
imul
cs
pop
xor
repnz
fldt
or
ret
in
sub
icebp
xchg
sbb
jecxz
rol
ffree
xchg
cmpsb
pushf
xchg
push
push
inc
cs
push
lock
pushf
sbb
sub
xlat
nop
leave
in
mov
mov
insl
jnp
and
loopne
add
addr16
inc
out
lds
fdivrs
imul
jecxz
out
sarb
test
rol
cs
cs
pop
and
mov
int
ret
mov
xor
repz
jno,pn
push
push
sub
pushf
loopne
out
and
and
add
repz
sub
sbb
dec
mov
cmpsl
xor
xor
inc
popa
mov
or
sub
aam
adcl
jne
mov
and
ds
insl
lods
push
int
xchg
inc
xlat
pop
and
daa
imul
iret
aam
andl
jnp
out
cmpsl
loop
fwait
fwait
imul
sub
sbbb
pop
jmp
out
sti
lret
jge
mov
sbb
scas
out
mov
aam
xchg
repnz
ljmp
bound
add
cmpsl
and
test
fildl
aas
push
inc
xor
push
push
scas
jmp
cs
out
mov
dec
inc
mov
pop
pop
daa
cmp
ja
xlat
popf
outsl
jg
or
pop
add
ja
shr
mov
jmp
ja
xchg
in
push
dec
or
dec
push
ljmp
xor
daa
orb
fisttps
xchg
ja
test
loop
jae
repz
sbbl
xor
or
pop
add
jecxz
jmp
aas
mov
outsb
sbb
mov
sbb
orb
pop
push
push
ret
ret
daa
and
cmc
mov
cmpsb
into
out
lds
xchg
jbe
add
sub
popa
jle
jae
xchg
fnsave
rol
in
pop
jmp
jecxz
fadds
mov
aas
sarl
rorl
push
inc
dec
push
dec
and
lds
cmc
cli
push
into
fadd
fwait
scas
ret
inc
in
fidivrs
cmc
jecxz
and
push
call
xor
fldcw
xor
jg
sbb
jns
push
mov
cli
popa
xor
xchg
jle
adc
addr16
fwait
inc
rcrb
fldpi
cld
test
jecxz
icebp
sbb
dec
jcxz
outsl
fdiv
inc
loop
fwait
out
pop
dec
bound
xchg
ljmp
push
cld
out
dec
xor
fimuls
pusha
test
daa
imul
std
pop
adc
ljmp
and
adc
mov
lods
test
mov
jmp
repz
dec
add
out
shl
jg
movl
jae
rclb
push
inc
fucomi
mov
test
xor
sub
pop
std
jecxz
mov
cmp
jl
movsl
cmp
les
movsb
pop
icebp
jl
fisttpl
aas
pop
push
dec
sub
inc
or
lahf
idivb
pusha
rolb
arpl
sub
cmpsl
fsubs
inc
jb
lea
xlat
mov
ja
sbb
sbb
jnp
mov
in
xchg
inc
cwtl
ret
adc
mov
aas
aas
rcrl
xor
cltd
inc
dec
adc
rorl
aas
popf
mov
insb
test
roll
fistpll
sub
cmpsl
iret
lcall
loop
inc
mov
jo
xchg
nop
fdivl
jl
stos
inc
aad
push
inc
jbe
cltd
movsb
xchg
pushf
and
fistl
sub
es
jbe
pop
popa
imul
add
mov
jecxz
pop
sbb
aad
sbb
outsl
xchg
cmp
push
insb
sub
hlt
xchg
xchg
cmp
mov
mov
ror
cld
in
add
jmp
or
pop
push
xor
lods
sub
or
and
mov
imul
loop
lds
xor
sub
mov
mov
lea
fldenv
xor
and
pop
aaa
sub
adc
sbb
jl
inc
pop
icebp
int3
pop
jge
sub
rol
mov
stc
jmp
scas
rorl
mov
jge
outsl
pop
aas
xor
jecxz
pop
leave
sub
mov
test
cmpsb
loop
jmp
testl
out
jecxz
out
jp
dec
insl
imul
pop
rcl
enter
addb
ret
fidivrs
fcmovnu
mov
stc
and
mov
outsb
mov
es
push
cmp
xlat
dec
or
mov
xchg
or
jmp
jp
pop
mov
push
imul
inc
inc
orl
jnp
jb
fdiv
mov
ret
or
js
mov
or
or
insl
inc
mov
jbe
movsb
xor
fldt
outsb
mov
push
jecxz
cmp
dec
les
or
ljmp
pop
int
sar
sub
test
jns
inc
sbb
ret
int
por
lods
ret
test
sbb
arpl
push
dec
scas
ja
xchg
fidivrs
cmp
lea
push
daa
or
fidivrl
pop
mov
inc
jmp
sbb
loop
insl
cmp
cmpl
mov
lds
mov
sbb
jecxz
int3
pop
or
out
xorb
bound
xchg
jmp
jb
orl
loop
arpl
or
mov
ja
sbb
in
sbb
repnz
adc
push
pop
out
and
shlb
insl
bound
inc
rcl
test
pop
insl
push
jecxz
xor
xchg
sub
imul
and
mov
rol
ljmp
sub
scas
mov
adc
aaa
arpl
ja
stos
push
scas
rolb
fisubrs
ret
fwait
sub
cwtl
pop
pop
iret
roll
fcoml
inc
push
mov
add
fwait
scas
cmpl
fildl
add
repz
ljmp
inc
add
in
mov
test
xor
les
es
inc
mov
ffreep
mov
cmp
iret
leave
mov
cmp
xchg
sti
sub
cld
imul
testb
in
xorl
aaa
aam
shll
imul
mov
mov
ret
mov
dec
mov
jns
adc
inc
arpl
lock
bound
cmp
dec
xchg
aaa
std
jne
fisubrs
or
in
ficomps
push
mov
inc
roll
mov
aad
cmp
sti
dec
inc
test
push
enter
mov
add
aas
inc
jl
hlt
or
mov
popa
imul
outsl
dec
imul
dec
and
dec
mov
sbb
out
jb
cmp
and
out
adc
icebp
mov
ds
jnp
aam
jmp
nop
leave
fildl
jl
cs
lcall
add
xor
mov
cltd
inc
adc
mov
icebp
insl
imul
int3
sbb
jge
sbb
lods
mov
imul
push
insl
stc
inc
xor
pop
jmp
add
mov
in
mov
jnp
fld
pop
rol
repnz
imul
jmp
mov
mov
inc
les
jns
lret
xchg
leave
sub
outsb
jmp
out
testb
fidivrl
mov
out
outsb
sbb
mov
xlat
xor
outsl
push
sub
xchg
jmp
std
pop
sti
mov
rcrl
push
xchg
mov
fwait
mov
insl
inc
sbb
push
push
out
lahf
sahf
adc
sub
push
mov
orb
inc
ret
inc
enter
rclb
iret
mov
movsl
jo
push
cmp
xor
mov
ss
inc
adcl
pop
fisubs
lahf
mov
lcall
nop
mov
cmp
push
scas
add
push
imul
mov
mov
arpl
inc
mov
leave
lods
cltd
mov
push
repz
int
icebp
lds
loopne
xchg
mov
rcll
dec
xchg
fists
bound
jmp
push
cmp
test
adc
mov
pop
fcmovu
ret
xlat
inc
rorl
out
in
jmp
test
push
push
insl
mov
pop
jp
fldt
add
adc
rolb
or
pop
mov
test
out
add
xchg
out
mov
xchg
aas
rorl
cmpsl
rcrl
pop
inc
jmp
push
xor
dec
data16
jbe
out
cmpsl
lahf
xor
and
out
lea
outsl
movsb
adc
dec
cmpsl
aas
jecxz
out
cmpsl
call
mov
in
clc
iret
pop
inc
aam
pushf
ret
daa
cmp
popf
adc
pushf
sub
aam
sbb
push
pushf
inc
and
hlt
jmp
push
pop
movsl
test
or
pop
lods
inc
in
add
mov
jmp
stos
rep
clc
mov
sarl
xor
mov
dec
jmp
jmp
stos
mov
rorb
lea
sub
icebp
adc
sbb
sarl
stos
les
stos
mov
sub
sub
push
jbe
jnp
pop
xchg
sub
loopne
mov
xor
lods
inc
inc
popf
add
rclb
mov
rol
inc
outsb
cltd
jmp
lcallw
fmuls
rcrl
insb
jecxz
xchg
xlat
fnstcw
mov
fmull
jge
std
cltd
into
sahf
in
insl
xor
pop
sbb
add
test
jb
ja
sti
adc
cmp
in
add
jb
repnz
mov
xchg
add
popf
outsb
es
push
fldt
fisubrs
lock
sbb
inc
push
inc
popa
xchg
and
inc
cmpsl
cmpsl
mov
pop
stc
das
pop
les
xchg
ret
orb
adcb
cmpsb
mov
sbb
movsb
mov
fidivrl
shl
xchg
jle
shrb
insb
mov
xchg
hlt
loop
bound
ds
ffreep
cmp
add
leave
inc
mov
mov
sti
jae
mov
jne
jbe
xchg
clc
mov
mov
stos
and
scas
inc
dec
das
inc
xor
cltd
cmp
sbb
and
loope
cltd
test
add
mov
inc
outsb
inc
jbe
cmp
and
daa
push
mov
xchg
sub
push
jae
cli
les
mov
dec
repz
sbb
pop
and
cltd
pop
xor
es
mov
imul
dec
push
movb
outsb
mov
jmp
call
xchg
aad
out
xchg
popf
sub
inc
or
aaa
jo
and
pushf
into
stos
fxch
insb
inc
jecxz
jns
sub
adc
mov
shl
mov
xor
inc
mov
mov
cltd
cmp
jp
or
stos
out
nop
test
call
mov
mov
push
xor
enter
sub
jno
dec
mov
pusha
add
jb
mov
add
fiaddl
imul
ret
or
sbb
and
in
or
xchg
ret
dec
dec
xor
xchg
mov
pop
sbbb
dec
xchg
sti
stos
ret
mov
pop
idivl
frstor
outsl
popf
xchg
pop
in
jecxz
lods
mov
idivb
mov
adc
dec
mov
repnz
fmull
dec
je
xchg
into
mov
lcall
xchg
cmpsl
jl
cld
xchg
cli
divl
stos
dec
cwtl
loopne
lea
mov
pop
xchg
cmp
icebp
enter
jge
mov
dec
xor
sbb
mov
dec
adc
adc
je
mov
pop
andl
hlt
jecxz
push
push
sub
ja
xchg
ret
xor
xchg
jmp
adc
testl
imul
mov
das
loopne
icebp
and
incl
xchg
imul
movl
testb
jg
test
sbb
push
inc
in
shrb
in
ret
sbb
mov
xchg
fists
fidivrl
cmp
lret
xchg
pushf
jmp
mov
movsl
dec
cmc
mov
mov
xchg
cs
je
imul
stc
cs
sti
add
push
sarl
das
mov
loope
rdseed
jecxz
lcall
fisttps
mov
push
dec
push
jmp
insb
dec
mov
les
xchg
repz
xchg
sbb
push
roll
mov
pushf
mov
popa
test
fisubrl
fmulp
out
mov
fmull
push
stc
push
addl
push
decl
fidivs
test
push
or
dec
xchg
push
in
mov
icebp
in
xchg
addr16
aas
loopne
sbb
cmp
or
lret
cmc
cld
out
pop
and
out
add
pop
aas
out
clc
push
and
insl
push
mov
sbb
or
pop
leave
lds
rorb
subl
jmp
ret
adc
popf
ret
ret
lods
push
lds
mov
xchg
add
mov
add
mov
add
or
jb
jp
pop
mov
in
mov
in
lea
jecxz
xchg
xchg
repnz
popf
inc
inc
movsl
fisubrl
mov
mov
jge
mov
in
lds
es
int3
pop
leave
lret
pop
addl
push
adc
loopne
mov
fadds
test
inc
das
in
in
scas
push
sub
push
fidivrs
jmp
mov
lds
jecxz
adcl
scas
lds
cltd
ja
stos
sbb
fs
into
pop
adc
add
bnd
jle
xchg
mov
in
sbb
or
and
or
inc
sbb
cmp
fsubl
fwait
and
cld
sbb
lea
repz
and
roll
jmp
test
jmp
add
lea
lcall
cmp
sbb
pop
outsl
xchg
ficompl
sbb
xchg
leave
or
jle
in
popf
test
sbb
or
xor
insl
or
adc
shr
jb
ds
push
dec
push
push
insb
test
iret
pop
sbb
push
jle
mov
fsub
mov
scas
dec
call
jecxz
out
or
popa
xchg
loopne
jp
dec
lds
test
in
dec
jmp
jne
jb
outsb
pop
test
std
lods
bound
sbb
inc
mov
add
xchg
sbb
inc
out
lods
sbb
push
jnp
divb
sub
or
fisubrl
xchg
inc
enter
ljmp
movsb
push
rorl
mov
xchg
jl
adc
push
imul
jmp
jl
sub
xchg
in
jmp
in
add
cmp
and
jmp
cmc
xchg
cld
dec
cmc
mov
ja
dec
sbb
xor
lea
cmc
add
xor
xchg
ficoml
repnz
pusha
cmpb
sub
cmc
arpl
inc
pop
test
or
mov
cmpsb
enter
push
pop
cmp
push
or
xchg
inc
loop
mov
inc
jp
cmp
lods
xor
or
in
pop
fisubs
xchg
sbb
test
jmp
add
fcomps
aaa
hlt
repnz
xor
jecxz
mov
mov
pop
sub
lahf
add
mov
pop
popf
inc
xchg
lahf
xor
lock
pusha
add
loop
cmp
jg
jmp
push
push
mov
in
lret
shr
fsubs
cltd
xchg
jmp
jecxz
mov
roll
lcall
inc
scas
addb
pop
mov
rcrl
inc
pop
negl
sub
push
scas
popf
push
add
lock
jle
xchg
inc
xor
inc
adc
jl
stos
jmp
mov
pop
in
lds
negl
pushf
das
pop
cmpsb
pop
jecxz
fidivrs
int
jmp
out
popa
inc
sbb
in
stc
jmp
std
mov
das
aam
cmpsb
mov
mov
in
enter
arpl
in
push
mov
imul
in
lock
xchg
fstpl
lahf
test
int
ja
push
mov
xchg
sti
add
pop
popf
sbb
test
xor
mov
nop
jge
or
sti
clc
pushf
cltd
xchg
fbstp
xchg
jl
or
mul
test
fnstsw
xchg
insl
or
cmp
mov
jb
sbb
sbb
add
test
ljmp
inc
add
inc
add
xor
out
mov
jns
repnz
dec
jns
jb
jmp
iret
stos
mov
push
cmpsb
push
es
int3
loope
pop
add
xchg
pop
inc
jne
sbb
or
xchg
push
popa
push
sbb
aam
inc
loope
xchg
mov
shl
rolb
cmpl
pop
or
in
test
jge
inc
shll
xor
sub
pop
fists
lahf
xor
ret
mov
pmuludq
into
cmpsb
cltd
gs
mov
in
dec
lods
xchg
push
in
xor
sbb
ret
in
xchg
cmp
xchg
loopne
fwait
jecxz
nop
iret
jns
inc
aad
pop
xor
pop
xlat
sub
cmc
rcll
rcll
test
addr16
test
pusha
addl
push
inc
insl
in
ljmp
jecxz
sub
xchg
int
jecxz
ret
mov
aad
movsl
in
je
les
aam
std
cmpsl
inc
cld
insl
cs
cmc
enter
pushf
sahf
stc
sbbl
ror
jge
insl
aam
cs
push
cmp
ljmpw
push
push
add
sub
jecxz
mov
lcall
jle
sbb
add
pop
jno
rcr
pop
lods
push
push
pop
adcb
addr16
lea
frstor
sub
xor
or
xor
inc
cmpsl
jmp
shrb
aam
add
mov
jecxz
mov
add
addl
xchg
mov
in
sti
es
mov
mov
cltd
push
daa
lahf
xchg
out
push
adc
inc
aad
adc
or
pop
out
clc
sub
cmp
adc
sti
movsb
add
inc
iret
int
sti
scas
pop
push
les
out
scas
out
and
mov
dec
out
dec
and
inc
mov
sbb
mov
dec
in
imul
out
test
push
add
mov
push
dec
lea
xchg
aam
in
lods
aaa
in
stc
inc
mov
es
pop
lret
imull
lahf
pop
cmc
mov
in
sahf
sti
xor
pop
out
or
and
rorl
inc
ja
push
jmp
sub
push
push
adc
fcoms
loopne
ror
mov
push
jmp
mov
daa
cmp
mov
push
int
jb
jge
fwait
cwtl
inc
lahf
cltd
gs
inc
dec
pop
or
mov
out
mov
xlat
lea
roll
push
push
cmpsl
out
cmp
xchg
cmp
xchg
push
xchg
adc
loope
pop
cmp
fisttps
rcl
fildll
sbb
sbbb
daa
cmpl
sbb
push
or
shlb
cld
in
mov
lret
add
mov
jmp
adc
shll
adcl
fs
jg
push
dec
es
lret
xchg
add
xchg
loopne
out
push
xchg
in
insb
pop
fsub
stos
adc
clc
mov
xchg
sub
jecxz
jmp
inc
sarl
sbb
sub
xor
sub
aad
mov
inc
aad
cmp
rcrl
pop
cs
xor
cld
dec
addr16
xchg
sub
aad
out
cmpsb
sti
and
aad
inc
scas
xchg
mov
dec
fistpl
mov
int
lahf
es
fldt
pop
mov
sbb
mov
hlt
rcrl
xor
aam
add
adc
inc
inc
xchg
rclb
sarb
inc
lods
rcl
jmp
fstps
rcr
jmp
jnp
add
clc
daa
mov
mov
mov
daa
pop
ftst
pop
jne
popf
push
pop
push
push
xchg
mov
mov
mov
enter
pop
fwait
movsl
sbbl
xchg
fisttps
xlat
sbb
aas
xlat
push
push
xchg
xchg
mov
push
ss
adc
out
push
pushf
cltd
cmp
ret
aad
imul
fnstenv
fldl
add
push
pop
xchg
insb
mov
jb
enter
cmpsl
pop
cmpsb
and
dec
fldl
add
push
mov
push
sbb
cmp
or
out
sub
or
loop
inc
mov
mov
fdivrs
mov
xchg
scas
push
sbb
sub
adc
jl
insl
adc
or
mov
inc
faddl
add
sbb
sub
pop
add
fstpt
mov
out
dec
rol
push
jp
ffree
outsb
out
jb
jp
add
push
pop
pop
push
mov
adc
push
test
mov
jecxz
data16
xchg
mov
shr
mov
mov
cs
pop
fwait
cmc
ficomps
iret
test
xor
sub
das
pop
adc
shrl
pop
pop
rcll
inc
insb
push
xor
inc
mov
jmp
mov
xor
nop
bnd
xor
jne
insb
imul
mov
push
shr
test
jmp
lds
push
mov
mov
pop
ret
pop
mov
mov
cmc
xchg
xchg
fucomi
push
fcompl
push
mov
and
inc
push
mov
ret
add
sbb
ja
mov
stos
bound
ret
clc
jb
adc
jb
lcall
out
int3
xchg
test
cltd
jbe
out
leave
adc
and
push
leave
cmp
outsb
push
mov
add
in
or
jb
repnz
in
leave
repnz
popa
jecxz
bound
les
adc
ljmp
jo
jb
jl
cs
inc
and
xor
sbb
add
or
sub
or
popf
inc
mov
stc
pop
bound
popf
add
xchg
push
mov
jb
and
in
or
es
in
adc
fidivrl
inc
jecxz
xchg
sbb
and
lea
sbb
out
shll
add
jle
jl
pop
int
mov
or
add
xchg
ffreep
movsl
scas
lea
inc
mov
inc
cmp
inc
popa
jl
cmpsl
out
popa
jae
imul
call
push
lds
mov
dec
lods
jmp
sbb
push
mov
loope
push
inc
dec
imul
or
dec
hlt
xlat
jnp
mov
xor
dec
pushaw
dec
jp
xor
xor
xor
mov
jle
movb
dec
sub
cmp
or
sbb
dec
arpl
jae
push
int
fidivrl
fstpl
inc
lds
mov
je
add
hlt
pop
or
pop
mov
int
stos
rorl
inc
mov
pop
dec
test
es
shll
insb
mov
in
dec
xor
pop
xor
xlat
and
repnz
mov
and
jecxz
push
shll
inc
in
test
out
div
jae
lds
data16
and
fdivrs
movsl
fldl
jnp
ret
jmp
pop
test
ljmp
test
cmpsb
push
ret
pop
adc
jb
aad
ljmp
pop
test
enter
aas
leave
fbld
test
je
fistl
sbb
std
int
or
inc
int
repz
sbb
jno,pt
es
push
cltd
and
loop
fisttpll
xor
fnstcw
jno
shll
adc
popa
stc
sbb
cmp
sub
fisttpll
addl
lret
in
jne
int
jecxz
inc
jno
pop
jecxz
and
insl
or
xchg
xchg
mov
or
fcmovu
adc
xor
inc
fnstsw
daa
add
fsubr
xor
and
mov
sbb
mov
pushf
imul
lea
mov
push
fcmovbe
pop
in
ret
ret
xchg
int3
out
and
fcmovu
aad
jg
inc
into
dec
push
mov
sbb
ret
mov
push
and
imul
int
xlat
das
scas
xchg
pop
andl
fcom
cmp
ds
sbb
roll
test
rcr
mov
xchg
or
dec
lcall
test
xor
fldt
pop
lret
idiv
adc
dec
test
rcll
int
test
lea
shll
xor
jmp
mov
imul
bound
inc
or
sub
pop
fwait
call
call
jno
int3
push
leave
dec
or
or
push
in
add
in
and
xlat
sarl
cmpsl
shlb
int
sub
jle
or
sbb
sub
push
mov
pop
inc
or
ds
cmp
sti
inc
ficoms
push
fistpl
jg
lret
jmp
pop
sbb
push
int3
cmp
sbb
adc
jl
lret
repnz
push
mov
es
cmpsl
jecxz
shll
xlat
repz
pop
mov
xor
das
lods
shl
and
cmpsl
outsl
dec
cltd
ds
mov
xor
mov
pop
dec
mov
sbb
sti
dec
dec
cld
test
inc
and
pop
pop
leave
pop
inc
nop
enter
cmc
sub
les
xor
std
fstpt
mov
jmp
fs
dec
enter
mov
pop
leave
es
rcrl
mov
jbe
mov
adc
repz
pop
fcompl
mov
loopne
adc
push
rcr
or
fbld
jp
stc
dec
mov
xor
inc
sti
test
add
dec
pop
mov
shll
fdiv
sti
dec
mov
out
das
xchg
leave
xor
sbb
cltd
sub
sbb
inc
push
fildll
fcmovnb
and
aaa
out
psubusb
mov
xchg
repz
sbb
ror
mov
dec
adc
jno
out
es
pop
jns
loop
out
and
adc
ret
sbb
push
addr16
adc
shlb
mov
xchg
and
sbbl
sti
and
sub
and
lahf
ficompl
xchg
push
inc
add
fst
ds
xchg
xor
fstpt
add
std
lahf
lret
aas
testl
push
fstps
mov
sbb
pop
ret
add
test
xchg
jmp
xchg
pop
jge
or
mov
or
mov
ret
cmp
rol
pop
test
jmp
adc
fistpl
icebp
imul
pop
rcrl
nop
cli
jmp
cmp
stos
daa
rcl
aaa
and
and
mov
fcmovnb
test
dec
cmc
push
pop
pop
cmc
pop
push
cmp
push
sbb
shrb
arpl
fwait
mov
add
imul
lcall
insl
stc
adc
int
out
jmp
test
js
shll
or
in
sub
xchg
movb
in
in
add
aam
xor
push
sbb
outsl
push
iret
cli
filds
ljmp
mov
adc
sbb
cmp
xchg
dec
mov
dec
insb
mov
dec
pushf
inc
lret
xchg
jnp
arpl
in
insl
xchg
jmp
add
rcr
mov
fcompl
dec
jg
adc
popf
jnp
or
hlt
jmp
sub
das
lea
mov
and
add
lcall
or
faddl
adc
cmpsl
repz
popf
mov
mov
jmp
add
test
test
aaa
jnp
or
mov
loop
imul
shll
stos
cld
dec
xor
sbb
mov
mov
das
enter
fisubl
xchg
sarl
add
imul
mov
icebp
cmp
xchg
xchg
cmpsl
mov
inc
aad
fdivrs
push
xchg
aas
sbb
addr16
mov
jecxz
aaa
insb
cltd
push
inc
mov
xlat
jmp
mov
inc
int
and
push
mov
stos
fwait
mov
sahf
popf
outsb
mov
and
pusha
fisubrl
lods
jmp
mov
pop
popa
cmp
inc
mov
filds
xchg
adc
sub
inc
arpl
call
dec
jp
lret
dec
sbb
int3
add
enter
cmpl
xchg
dec
and
mov
dec
test
cs
fistpl
fnstsw
dec
int
rcll
sti
stos
sbb
and
cmc
sbb
mov
and
popa
mov
inc
lds
jle
das
arpl
sbb
or
xchg
mov
lea
cmc
int3
dec
int
dec
mov
out
mov
inc
pop
jmp
test
int
jecxz
aam
test
jb
or
push
jl
mov
pusha
ss
cs
cwtl
push
pop
inc
or
and
ret
cmpsl
sarl
outsl
dec
jns
in
inc
fisubrl
mov
outsl
js
jae
shll
das
aad
push
mov
shlb
clc
pop
pop
mov
in
in
sbb
add
sti
hlt
pop
dec
jnp
ret
push
ret
ret
cmpl
inc
mov
sbbl
repz
fildl
inc
data16
mov
mov
ja
dec
jmp
dec
daa
or
stos
out
xor
les
jecxz
out
out
int
pop
int3
inc
fsubs
pushf
xchg
mov
enter
test
cmp
je
xchg
orl
pop
insb
xchg
ret
and
shr
jl
pop
repz
das
or
mov
test
mov
jp
test
imul
and
sbb
leave
sbb
jecxz
add
push
inc
xchg
shll
xor
insl
sti
jne
sbb
popf
aam
inc
int
mov
mov
push
das
mov
fstl
sbb
stos
inc
out
ljmp
aaa
repnz
sbbb
dec
mov
or
jg
call
push
mov
gs
movsl
rorb
aad
les
add
adc
dec
dec
mov
mov
pop
inc
lds
out
mov
jg
adc
xchg
mov
in
jle
xchg
test
push
push
pop
xlat
addr16
les
mov
repz
and
int
mov
in
pop
add
out
lret
outsl
popa
pusha
outsb
rolb
sub
ja
shlb
pop
bound
rcll
out
pop
fdivs
jb
xor
scas
adc
add
xchg
jp
es
in
in
ljmp
mov
xchg
xor
shr
add
and
push
aam
jmp
sbb
shll
sbb
inc
in
dec
ret
fwait
and
lahf
sti
mov
push
rcrl
pop
or
repnz
repz
cmpsl
inc
rcll
adcb
lods
and
cmp
stos
inc
decl
jl
popa
insl
xchg
aaa
cmp
subl
lcall
mov
mov
loopne
or
pop
sbb
xchg
mov
in
push
sbb
xchg
loope
lock
jecxz,pt
sbb
sub
int3
pop
pop
jecxz
jmp
sub
jnp
fsubs
mov
dec
pop
or
shlb
psrad
insl
sbb
fsts
aaa
aas
sbb
fnstcw
gs
fildl
push
adc
pop
in
push
and
xor
jns
in
in
cltd
in
mov
nop
pop
lods
insb
pop
ret
negl
gs
push
ret
dec
std
addr16
xchg
jge
or
imul
hlt
fwait
mov
pslld
jne
add
jb
popf
push
push
mov
sti
push
out
inc
sbb
jnp
sbbl
dec
mov
xchg
fisttps
mov
adc
jle
ds
or
aad
aas
mov
mov
xchg
sahf
scas
negl
out
xchg
and
push
ljmp
insl
mov
mov
sarl
jno
sub
push
pop
mov
out
jg
xchg
cmp
popf
arpl
ret
lds
dec
ret
pop
roll
mov
mov
dec
in
inc
push
mov
into
loop
stos
inc
daa
push
dec
push
jbe
sub
leave
testl
cld
mov
inc
sub
xchg
ret
iret
ficoml
into
add
jmp
sub
push
fisubs
in
adc
adc
sbb
stc
and
les
or
xchg
push
mov
idivb
fcoms
cmpsl
hlt
xchg
xor
push
sub
int
aas
xor
xor
loope
sti
mov
leave
xchg
pushf
ja
call
pop
mov
aaa
stos
dec
inc
es
arpl
dec
ret
popa
aam
jecxz
xchg
in
insl
push
in
jl
dec
in
and
pushf
pop
mov
pop
jecxz
ljmp
push
inc
out
sti
push
repnz
push
in
pop
dec
mov
fbstp
in
cld
fwait
pop
mov
sbb
xchg
cmpsl
jg
je
mov
and
and
lret
cltd
dec
jmp
inc
popa
leave
ds
jae
mov
fisubs
in
enter
pop
xchg
dec
sub
loope
addl
xchg
int
push
dec
outsb
or
inc
mov
outsb
popf
xchg
jg
xchg
xchg
test
inc
inc
fstps
cmpsb
insl
jnp
cli
cmp
int
pushf
ja
rorl
sbb
cmp
addr16
jmp
jmp
jnp
outsl
aas
imul
inc
mov
aam
cmp
jmp
cltd
stos
out
sbb
jnp
out
in
fucomip
jecxz
adc
cli
in
cli
bound
push
xlat
lahf
mov
mov
pop
sub
mov
or
and
addb
je
imul
push
jmp
mov
into
sbb
fsubl
fmuls
push
sub
flds
dec
cmpsb
jne
add
mov
sarl
std
pop
subl
and
pop
out
jl
push
mov
mov
enter
in
fwait
das
aad
push
inc
lret
dec
in
movsb
out
lahf
inc
lret
inc
xor
fldt
mov
add
jle
rcrb
je
jecxz
inc
sbb
pop
jle
mov
and
scas
jg
jg
jmp
mov
imul
pop
inc
push
aas
sbb
push
loope
addr16
or
nop
dec
jge
or
mov
adcb
xchg
mov
pop
addl
and
adc
or
popa
hlt
dec
test
mov
dec
int
inc
ror
aas
sarb
xchg
jecxz
das
sti
cli
pop
inc
cmp
sbb
mov
subl
aam
lahf
lret
enter
xor
out
fisttps
pop
popa
out
scas
shll
aam
shrl
xor
jge
test
rolb
outsb
push
jmp
mov
lcall
stos
rclb
jmp
adc
imull
gs
and
mov
sbbb
mov
lods
jnp
fnstenv
pop
shll
imul
and
jnp
sbb
cmpsl
jl
loop
pop
cmp
xor
jb
jae
jl
outsl
repz
out
lahf
mov
pop
in
adc
mov
in
jae
roll
mov
sbb
push
imul
icebp
and
lds
rorl
sub
xchg
push
xlat
xor
pop
pop
loope
mov
shll
mov
lret
ror
jmp
mov
cmc
std
shll
fadds
sbb
mov
mov
jmp
add
cmpsl
cmp
mov
cld
xlat
stos
pop
mov
jmp
sbbl
mov
cs
mov
add
aad
inc
dec
mov
fcomip
neg
dec
scas
ja
cli
loop
jno
ds
loope
jmp
std
fdivs
push
rcr
xchg
stos
loopne
dec
lret
dec
jno
nop
mov
icebp
add
mov
repz
fstpt
jecxz
icebp
lcall
and
fcmovb
gs
jnp
and
pop
data16
out
pop
sbb
rorl
sub
jne
sbb
aam
in
std
arpl
lret
lcall
xchg
xlat
and
fwait
and
push
mov
xor
jle
imul
shrl
divb
ret
test
pusha
push
xchg
mov
loop
jle
stos
ret
push
lret
adc
sti
in
test
sub
lret
ss
jmp
pop
int3
jns
loope
inc
aam
push
pop
mov
popf
sbb
loop
ret
jo
sbb
cmpsl
shrl
stos
sbb
cmpsb
sbb
aaa
icebp
mov
sbb
adc
xlat
fmuls
dec
fs
sub
in
lock
jnp
pop
jmp
cmp
pop
rcll
lret
andl
add
cld
out
pop
subl
scas
nop
movsl
xor
imul
mov
popa
insl
mov
mov
orb
test
enter
lods
popa
and
jecxz
popf
and
clc
in
or
pop
or
xchg
dec
andb
je
jno
popf
mov
pop
jmp
sbb
pop
jg
mov
cs
movsb
jmp
mov
rcrl
in
mov
cmpsl
jns
pop
outsb
int
push
pop
inc
push
sub
aaa
pop
xorl
adc
ja
mov
rcrb
and
pop
roll
mov
test
or
inc
mov
inc
mov
lds
in
leave
jno
pop
ret
rcr
mov
or
mov
mov
inc
pop
sub
fisubl
out
pop
icebp
xor
sahf
dec
rol
cmp
push
aas
aad
add
fistpl
add
adc
pop
in
push
cmp
shl
dec
sbb
jbe
into
in
jmp
xchg
mov
mov
sbb
insb
aam
incl
cmp
inc
leave
dec
pop
fldt
jae
pop
xchg
loopne
ss
orl
loopne
xor
fsubrs
pop
cmpsl
sbb
ret
sbb
imul
in
daa
inc
xchg
cmpsl
ret
jle
add
mov
dec
rcr
sbb
mov
adc
jno
xchg
sti
mov
fbld
leave
clc
inc
mov
inc
aam
std
jb
fwait
inc
scas
jmp
rorb
ror
mov
and
addr16
sub
sbb
push
out
fndisi(8087
cli
loope
mov
ss
aaa
stos
sub
decb
mov
in
sti
gs
rclb
jae
or
push
and
and
daa
cli
rolb
sarl
gs
fcmovb
xchg
mov
lods
sbb
pop
jbe
lahf
test
std
and
lea
adc
push
imul
adc
cmpsb
pop
jge
and
or
les
push
add
mov
mov
mov
cmp
add
add
shlb
add
mov
cmp
and
add
mov
inc
ret
std
mov
rol
dec
aam
pop
inc
mov
mov
test
inc
fistl
or
push
loopew
mov
rol
push
pusha
outsl
mov
imul
pop
test
leave
cmp
fsubl
dec
mov
xor
rcrl
loop
das
add
jmp
ret
movb
iret
fwait
decb
cltd
fidivrl
push
fsubp
enter
adc
mov
sub
and
sbb
fildl
cli
cli
add
in
cld
mov
fistpl
sbb
mov
roll
jp
adc
cmp
xchg
pop
outsl
addr16
and
cmp
push
mov
std
in
shl
jae
add
pop
mov
lahf
push
pop
mov
sbbb
dec
shll
dec
out
jecxz
lcall
std
fistpll
xor
sbb
lea
lcall
lcall
or
push
or
aam
lcall
mov
and
mov
add
inc
lcall
xor
sub
or
rcrl
dec
repz
cmp
daa
pop
and
and
xor
jo
jmp
addr16
and
sbb
incb
repz
mov
sti
imul
int3
sbb
add
clc
rcrl
add
push
testl
adc
adc
gs
jecxz
add
out
push
dec
int3
mov
imul
cli
cli
jecxz
test
repnz
test
sbb
mov
loop
cmpsl
rcr
fisttpll
cld
and
ret
jmp
xchg
xchg
pop
jbe
loop
shrb
fildll
mull
loopne
lods
push
into
xor
pop
test
stc
xchg
xor
inc
mov
into
sahf
or
ret
idivl
pusha
aaa
idivl
xor
dec
jl
loop
jb
ret
frstor
xorl
jecxz
rcll
sbb
push
pop
insb
lock
int
jecxz
jp
pop
in
sub
leave
push
cltd
jno
dec
jmp
enter
pop
shr
fdiv
fsubrs
jns
ret
shrw
xchg
push
sub
lds
bound
xchg
inc
xchg
incb
and
add
jecxz
dec
or
fwait
jne
jbe
jmp
iret
and
inc
add
xchg
daa
jg
mov
cli
jecxz
mov
fsub
subl
out
int
data16
movsl
mov
in
xor
jecxz
xor
jae
and
test
sbb
movl
mov
adc
jge
xchg
cltd
pop
fsts
mov
out
xlat
popf
cmp
bound
int3
mov
push
lds
out
pushf
lds
sbb
xlat
orb
push
iret
push
iret
add
dec
ret
insl
int3
push
and
loopne
mov
dec
clc
sub
fstps
fcoms
aam
in
sbb
test
loopne
dec
out
ret
cli
fmul
ret
int3
xor
pusha
jecxz
ja
and
xchg
test
in
or
push
dec
mov
aaa
fisttpl
adc
xchg
sbb
pop
outsl
push
sub
sub
or
sbb
dec
xchg
ds
jb
adcb
fistpl
fsubl
or
push
xchg
gs
jmp
cwtl
fnsave
sarl
movsl
repz
jnp
fwait
test
jb
jb
cmp
mov
xchg
orl
test
rorl
sbb
lds
fidivrs
insl
sbb
fcmovb
leave
and
mov
cmc
pop
jmp
adc
clc
shr
fcompl
mov
leave
adc
fldt
xlat
jle
sbbl
sbb
out
bound
mov
mov
mov
pop
std
es
pop
outsb
add
pop
mov
test
lret
gs
mov
xor
mov
mov
cmp
cmp
xlat
int
or
jge
inc
loope
inc
mov
push
jnp
std
in
in
std
aas
push
lret
cli
mov
jb
subl
ret
arpl
mov
ja
adc
call
enter
dec
fstpl
cmp
das
fstps
mov
pop
adc
mov
gs
cmp
jno
leave
inc
push
push
mov
add
xor
or
cwtl
mov
fucom
fisubrs
inc
int
xor
loop
mov
and
iret
andl
or
out
adc
add
mov
jp
push
xlat
add
sub
adc
scas
aad
ja
dec
fdivr
sub
out
mov
push
addb
faddl
faddl
out
xchg
xlat
fdivr
jle
pop
outsb
rorl
pop
sti
addr16
sbb
les
dec
jne
enter
push
pushf
ror
mov
imul
sbb
aam
call
int
fdiv
stos
aam
ret
dec
dec
cltd
rcrl
gs
iret
ret
aad
fisubl
xor
fcmovnbe
xchg
fstp
push
sbb
mov
or
dec
sbb
cmp
jb
inc
push
aas
int
dec
and
sub
hlt
dec
mov
push
out
lods
test
jo
loop
pop
pusha
pop
jmp
add
ds
and
out
dec
data16
fdivrl
mov
mov
cmp
mov
hlt
sub
and
push
ret
xchg
sbbl
sbb
mov
pop
jmp
jmp
mov
leave
fisubl
dec
imul
dec
mov
fwait
es
mov
xchg
mov
pop
or
shll
loop
enter
adc
mov
push
in
out
jmp
xlat
insb
cmc
out
cmp
push
mov
inc
sub
das
mov
sbbl
lea
sbb
push
sub
push
aas
ljmp
or
dec
mov
xchg
jae
or
in
lret
xchg
mov
loopne
loope
in
and
xlat
sahf
imul
xor
stos
jecxz
pop
in
arpl
fldenv
mov
aam
ljmp
frstor
jp
and
mov
jl
cli
pushf
aam
gs
xor
call
iret
fstl
in
push
pop
or
mov
ret
scas
mov
mov
aas
stos
orl
mov
jns
out
xchg
outsb
sbb
sarb
mov
pop
enter
filds
jmp
sbb
fnstsw
cltd
stc
push
int3
xor
aaa
ret
enter
mov
pop
shlb
scas
sub
icebp
dec
dec
xchg
inc
rcr
jae
xor
inc
fsubrl
popf
dec
or
dec
cld
jmp
mov
inc
and
jne
sbb
mov
inc
lods
jne
sti
and
sub
mov
aam
lock
imul
jne
xchg
pop
sub
mov
std
mov
mov
pop
les
jl
xchg
lods
sbb
les
jge
lods
push
pop
xlat
lods
iret
dec
pop
sbb
fsub
pop
mov
insl
mov
mov
dec
and
test
scas
push
sarl
enter
xlat
cltd
jmp
imul
sbb
jmp
movsb
jbe
and
movsb
jge
and
in
insl
push
xor
pop
fsub
ja
ficoms
arpl
xor
sub
popa
inc
ret
dec
lods
mov
insl
lock
fcomps
inc
jno
sub
into
or
dec
std
pop
addr16
int3
mov
xrelease
lods
sbb
fsubrl
shll
xchg
jo
outsb
dec
jecxz
or
dec
addb
add
add
ljmp
xchg
mov
ret
xchg
int
cltd
ds
mov
inc
xor
loope
dec
cmp
dec
push
xor
lds
testl
mov
mov
rcrl
ret
daa
sti
xchg
jecxz
add
neg
mov
aad
iret
call
and
sbb
enter
daa
inc
negl
inc
jbe
cmp
xchg
in
dec
leave
mov
cmp
jae
fisubrl
mov
pop
int
and
pop
imul
xorb
mov
cmpb
push
fcmovnbe
mov
clc
sti
inc
jmp
or
jmp
imul
ret
jecxz
push
inc
push
scas
dec
in
xor
fwait
bound
int
ret
mov
dec
sbb
pop
sbb
mov
sarl
fwait
stos
shrl
sbb
fimull
jg
add
pop
adc
aam
sarb
cltd
dec
aas
arpl
test
les
jecxz
mov
xor
cmpsb
adc
mulb
dec
jmp
add
int
mov
mov
pop
jl
aam
or
icebp
mov
pop
iret
lea
add
das
out
xchg
mov
orl
ss
jmp
pop
xlat
dec
sbb
loop
sub
adc
sub
push
daa
cmp
shl
sbb
cmp
fdivrl
inc
pop
add
insl
pop
inc
sub
adc
mov
inc
sbb
shr
jmp
dec
mov
xchg
and
sbb
outsb
inc
inc
mov
jb
add
adc
scas
and
mov
cmc
sarb
push
pop
gs
or
imul
mov
loope
push
add
popa
stc
xchg
and
daa
enter
and
sub
bound
enter
jnp
add
mov
pop
inc
add
icebp
jmp
cmc
int
and
imul
cmp
jne
cld
push
xchg
or
divl
fistl
mov
or
adc
in
orl
adcl
pop
pop
rcll
test
jle
adc
adc
fstps
cwtl
pmaxsw
outsl
push
jne
scas
jns
cltd
pop
mov
mov
cmp
movsl
out
fdivl
int
ds
inc
fcompl
and
popa
jae
mov
xor
cs
movsb
ret
mov
ret
pop
fildll
outsl
addr16
inc
sbb
mov
lds
add
ljmp
aam
scas
adc
sbb
call
fistps
or
inc
sahf
mov
lods
mov
push
push
arpl
add
ss
imul
lods
fcoml
je
mov
in
mov
xchg
xchg
imul
inc
jmp
sbb
lods
mov
push
rorl
sbb
imul
leave
xor
rcrw
xchg
lock
loope
leave
es
jg
ffree
out
ret
test
mov
xlat
outsb
fildl
xor
jecxz
imul
xor
ret
aad
cld
lea
cmp
ret
cmpsl
mov
jns
ret
out
mov
fcoml
mov
arpl
fnstenv
fwait
mov
inc
mov
ss
xor
call
sbb
loop
sbb
jecxz
popw
push
repz
mov
and
mov
mov
push
pop
scas
cltd
dec
scas
insb
mov
jbe
xchg
aad
loope
jmp
test
sbb
jno
mov
adc
cltd
lcall
iret
xchg
mov
loopne
out
sbb
lods
xchg
rorl
ljmp
mov
leave
sets
ficoml
dec
xchg
dec
xchg
insl
mov
sub
das
xchg
xor
pushf
jo
pop
and
aas
xchg
popa
imul
pop
ror
xor
jnp
test
movsl
fcoml
jge
dec
and
sahf
imul
cmp
sbb
mov
das
scas
cmpl
cmp
fildll
out
pop
inc
ret
popf
int
sbb
pop
mov
fcmovu
int
dec
addr16
sti
sbb
mov
jecxz
outsl
rorl
mov
xchg
movsb
dec
push
push
subb
jl
fstps
fwait
scas
cmp
mov
xchg
ljmp
mov
loopw
test
inc
in
pop
sti
pop
bound
sbb
mov
mov
jne
inc
ret
push
jecxz
cld
fwait
int
xchg
xor
xorb
cmp
jecxz
or
cmp
add
mov
mov
xor
cmp
sarb
ret
push
jmp
sbb
gs
stc
sti
xor
xchg
popa
pop
js
stos
int
roll
add
mov
mov
lret
imull
rorl
aas
fldl2e
push
cmp
sub
std
pusha
sahf
stos
push
mov
jg
int
rcrl
pop
decb
and
rcr
xchg
in
mov
jecxz
xchg
cmp
popf
jmp
mov
xor
and
inc
fisttps
pop
jp
negb
and
mov
push
test
outsl
imul
xchg
and
out
jg
xor
jo
inc
pusha
popa
fildl
mov
inc
sti
cmp
lods
push
stos
mov
mov
lcall
out
test
shl
or
sti
imul
mov
jp
push
mov
xchg
aas
xor
add
sub
adc
popa
pop
enter
jo
dec
lret
push
vrsqrtps
in
lods
loope
fwait
daa
hlt
dec
push
popf
test
sarl
out
stos
jecxz
repz
push
fldenv
dec
test
lret
test
mov
in
mov
xor
sub
add
imull
pop
adc
sub
rcrl
mov
xchg
aad
sarl
dec
pop
testb
popf
lret
adc
aas
jne
movsb
jae
mov
les
mov
lock
jns
push
dec
jmp
int
cmpsl
stos
pop
sti
es
cmp
pusha
xchg
les
cmpsb
test
pop
mov
dec
repz
jne
inc
adc
ret
lods
dec
mov
rorl
pop
pop
pushf
les
pop
mov
cltd
sbb
jmp
movsb
test
shl
inc
call
sbb
inc
rorl
in
shlb
xor
push
outsb
inc
ret
xor
icebp
pop
jp
rcl
xor
in
das
jmp
dec
shll
xor
adc
mov
imul
sbb
je
addr16
pop
push
sub
pop
push
cltd
out
das
enter
dec
test
push
repz
dec
popa
test
cmpsl
mov
sbb
pop
jg
add
mov
jno
cmp
xchg
lods
jae
pop
mov
mov
stos
adc
cs
fs
mov
mov
insl
and
mov
hlt
dec
pop
imul
shll
xchg
sbb
hlt
pop
cmp
imul
loop
fsubrs
sbb
dec
orb
sbb
call
ds
xchg
aaa
stos
sbbl
add
xchg
mov
popa
fistl
sbb
aam
xchg
jecxz
mov
pop
aas
call
iret
test
out
int3
insb
mov
and
fildll
push
jmp
iret
inc
and
mov
sbb
scas
mov
jp
int3
jns
rcll
test
fsubl
adc
call
push
mov
fisubrs
imul
lcall
test
xorb
xchg
in
inc
cltd
push
push
arpl
andb
pop
xor
fsubrp
aas
jnp
mov
push
push
popa
ss
mull
imul
ja
adc
lret
inc
sbb
cmp
fidivl
test
dec
xor
adc
or
mov
testl
sub
push
xchg
popa
fwait
cmpsl
xlat
ljmp
lods
jmp
pop
rorb
addr16
insw
xchg
out
cmp
pop
js
sarl
or
dec
ds
sbbl
cmpsb
dec
add
mov
mov
aaa
mov
mov
cli
into
mov
sub
pop
mov
repz
fildl
push
pop
lods
inc
ret
mov
sbb
xor
iret
cltd
sub
adc
negb
sbb
add
push
or
lods
adc
fdivrs
cmp
sbbl
dec
jecxz
nop
dec
int3
popa
inc
xlat
pop
sub
fsubl
pop
dec
loopne
stc
fiaddl
sub
mov
lock
movsl
aam
aas
aad
pcmpeqb
pop
ret
push
out
ds
out
sar
imul
inc
push
out
loopne,pt
dec
cmp
xor
lods
jge
arpl
ret
ljmp
clc
push
int
jge
pop
leave
in
cli
gs
popa
rcll
pop
test
dec
xor
and
cmp
decl
or
outsl
mov
push
out
mov
out
pop
adc
popa
jae
dec
or
insl
pop
cmp
int
mov
incb
xor
pop
sbb
loope,pn
dec
and
sbb
hlt
push
pop
jno
push
out
mov
cli
imul
dec
fistl
arpl
in
out
push
push
lods
mov
popf
fidivrl
add
sbbb
cmp
sub
xor
xchg
jge
sbbl
inc
mov
sbb
hlt
test
iret
out
hlt
imul
faddl
xchg
call
mov
enter
or
sbb
adc
inc
shr
out
lret
enter
and
mov
mov
mov
dec
cmpsb
adcl
out
aam
in
dec
iret
push
xchg
data16
data16
jo
mov
and
jno
adcl
jae
in
sbb
movsl
pop
aad
lods
subl
das
in
jecxz
pop
and
subl
lods
ljmp
fbstp
subl
cmp
push
gs
filds
dec
cmp
xlat
leave
imul
fldt
jg
ret
mov
and
and
xlat
xor
int
daa
jmp
pop
out
fisubrl
loope
xlat
out
fisubl
lds
jae
pop
mov
inc
faddp
mov
sbb
rcl
push
or
dec
rol
xchg
mov
leave
mov
xchg
xor
negb
in
xor
addl
fucomip
pop
fwait
xlat
das
xlat
mov
jecxz
ret
lods
sbb
push
jmp
rclb
xor
sub
out
add
sbb
jge
mov
std
aas
mov
mov
inc
ret
push
cltd
sbb
into
loop
out
lret
xor
or
fwait
mov
pop
std
aas
jmp
sbb
test
sarl
add
lahf
xchg
dec
xor
aas
xor
jb
sbb
mov
inc
sbbl
dec
xchg
mov
popf
mov
mov
or
in
sbbb
ss
jl
adcl
data16
jecxz
mov
shll
jb
rcrl
je
out
arpl
stc
pop
dec
jle
or
loop
int
addr16
xchg
je
inc
jb
outsl
jmp
enter
dec
and
aas
push
cmpsb
lcall
dec
aaa
lds
cmp
and
iret
repz
push
sbb
and
out
mov
sti
xlat
and
or
mov
popf
pop
xor
xlat
aam
stos
dec
push
lcall
in
mov
inc
pop
jno
ljmp
mov
into
fidivl
xchg
sbb
pop
mov
out
bound
mov
test
sbb
pop
roll
sbb
lods
jmp
inc
and
lret
mov
jno
loopne
sahf
mov
imul
fwait
cmp
xchg
mov
inc
pop
repz
jo
insl
xor
sbb
jb
mov
dec
pop
mov
pop
xchg
fmul
add
ljmp
inc
nop
push
or
neg
dec
scas
ss
mov
dec
push
sbb
into
fldt
xor
stc
fcomip
xchg
pop
mov
fdivrs
and
mov
mov
or
mov
or
push
dec
pop
addr16
xchg
lret
fcmovbe
push
adc
test
mov
mov
lods
inc
cld
fildl
sbb
jo
cmc
into
jle
jmp
push
add
sub
clc
dec
mov
pop
adc
fdivp
mov
test
mov
sub
imul
dec
cmp
fcoms
mov
sti
xchg
pushl
gs
xor
dec
out
ficoml
dec
pop
fcoml
cmp
icebp
arpl
mov
fdivl
mov
scas
inc
mov
outsb
inc
ret
mov
fstps
mov
test
shrl
popa
add
lahf
sub
sbb
jne
shll
loopne
sarb
push
mov
cltd
lret
lret
sar
xchg
in
popa
cli
and
ret
inc
cmp
mov
mov
pop
addr16
in
sbb
cmpsb
dec
sub
inc
fcomps
xor
mov
pushf
jo
pop
pop
roll
inc
sbb
cmp
xchg
pop
jns
int
sbb
imul
outsl
jle
push
dec
adc
movaps
movsb
daa
lret
fs
and
and
dec
sub
cld
movsl
fstps
les
sub
sbb
popf
outsb
in
push
push
xchg
push
jg
sti
fldl
mov
pop
mov
stos
and
imul
and
add
mov
int
nop
sti
mov
stos
fildl
mov
scas
add
enter
lds
push
xchg
fwait
insb
add
mov
add
insl
in
jl
and
sbb
aaa
dec
mov
enter
outsl
jge
and
into
rclb
sahf
mov
lods
jno
pop
sub
dec
ljmp
jl
mov
sub
sub
inc
shrb
xchg
sbb
sahf
xorl
gs
push
stos
test
mov
sub
repz
mov
movl
rorl
popa
test
adc
sub
fbstp
ja
pop
test
mov
dec
jno
pop
cmp
dec
hlt
ljmp
in
jmp
fstps
dec
jmp
cmp
or
mov
ljmp
stos
cli
jg
pop
inc
mov
mov
pop
add
inc
in
sti
or
mov
cmp
test
xchg
pop
fwait
popf
ljmp
xchg
shr
ret
xchg
ficoml
push
cmc
data16
jge
mov
pop
mov
add
insl
inc
idivl
or
ss
in
inc
add
repz
aam
dec
lcall
or
cltd
lea
sti
out
pushl
add
jecxz
xchg
cmpsl
movsb
add
jnp
fsubl
mov
pop
fnstsw
inc
dec
ss
lods
leave
aas
popa
std
mov
bound
inc
test
int
sbb
mov
and
mov
fimuls
push
rcrl
sub
fdivl
add
mov
jno
iret
lea
rol
repnz
test
loope
dec
fisttpl
cld
mov
fnsave
xor
outsb
dec
mov
cmp
jnp
in
jecxz
insb
cmp
adc
rcll
mov
mov
add
jmp
sub
cmp
sti
in
and
mov
mov
notb
mov
pop
adc
mov
push
adc
stc
sti
fbstp
fdivs
xchg
je
js
or
xchg
cld
dec
dec
xor
aam
dec
sarb
sub
jns
mov
adcl
gs
gs
imul
adc
mov
add
jmp
mov
xor
adc
lea
aaa
sub
ret
das
test
dec
shll
insb
add
pop
pop
in
jmp
inc
imul
pop
dec
jp
sbb
shlb
push
shll
nop
lock
shrb
jecxz
mov
push
jnp
mov
sbbl
lret
jmp
sub
fcmovnbe
outsl
jae
arpl
in
mov
fwait
lea
pop
shrl
pop
sbb
in
ret
pop
in
pop
mov
inc
cli
ror
rolb
daa
pmulhuw
pop
and
sbb
push
pusha
and
pop
lods
fcompl
insl
sbb
fldenv
inc
cli
xlat
andl
jp
push
add
arpl
imul
add
popa
sbb
out
lea
cli
sahf
xor
lea
int
sbb
sbb
fdivrs
fcomip
cs
sbb
fidivs
jae
xchg
lret
lea
pop
jnp
jl
xor
sub
dec
cmp
adc
test
cli
bound
mov
cwtl
cmpsb
test
fdivrl
xchg
or
mov
loop
mov
sbb
shlb
xchg
rcrl
in
mov
mov
lahf
les
rorl
rcpps
fldcw
xor
jb
outsl
repz
cmpb
pop
jmp
add
jnp
cltd
or
dec
jp
orl
sbb
push
dec
jge
imul
insl
mov
out
sti
lea
insl
cmp
sub
dec
inc
xor
jo
sbb
jnp
ds
cli
cld
andl
dec
fwait
mov
iret
in
in
ret
push
cmp
and
fdiv
lcall
pop
mov
or
shll
dec
adc
xchg
xchg
addr16
out
inc
std
call
mov
out
xlat
inc
cmp
mov
adc
mov
cs
mov
mov
test
and
das
les
cmp
loopne
lret
sub
sbb
mov
xchg
bnd
dec
pop
int3
addr16
mov
in
stos
lcall
rcrl
push
rclw
sbb
or
ds
mov
dec
pop
pop
jns
dec
pop
fists
pop
ljmp
lods
cli
pop
loopne
mov
inc
jnp
jg
in
dec
in
sub
ja
cli
sahf
and
ret
sbb
lods
int3
ret
sbb
in
leave
xchg
sar
in
lods
lahf
xchg
mov
mov
sbb
outsl
push
daa
push
inc
mov
inc
pop
pop
adc
test
imul
mov
push
and
loop
jmp
sbb
sbb
shll
dec
test
push
faddp
ret
cltd
sub
mov
cmp
call
mov
in
movsb
sbb
pop
inc
dec
mov
ret
inc
mov
add
mov
loop
cmpsb
xor
leave
icebp
sub
mov
xchg
les
in
ds
add
outsl
mov
fdiv
adc
in
xor
aam
cli
sbb
pop
mov
jg
in
add
push
stos
xchg
int
jmp
in
sub
xor
sbb
fildll
adc
in
outsl
lcall
aad
fwait
jecxz
cmpsb
xlat
mov
mov
nop
lods
inc
aas
inc
fyl2xp1
mov
cltd
les
insl
cmpsl
mov
push
ret
jae
insl
fimull
je
out
xor
sbb
inc
jecxz
sbb
jle
addr16
dec
pop
and
jne
cmp
adc
cmc
shrl
pop
push
cltd
mov
cmpl
pop
ss
pop
adcb
lods
cmp
jp
inc
xor
add
mov
aam
jl
xchg
xchg
push
loopne
in
mov
or
lahf
movsb
in
lods
add
gs
mov
or
xlat
sbb
or
pop
stc
xchg
fld
add
inc
std
mov
mov
and
imul
push
mov
mov
adc
popa
dec
mov
inc
leave
sub
testb
mov
and
xor
das
ret
mov
xlat
cltd
mov
sti
sarl
mov
inc
adc
cwtl
add
mov
mov
rcl
fdivrs
or
add
mov
cmp
xchg
imul
fwait
sahf
movl
add
mov
adc
rcrl
stos
jmp
int
pop
jne
mov
ret
dec
int
clc
lods
mov
lret
lea
inc
outsb
xchg
ret
test
mov
xor
stos
or
imul
pop
fwait
push
mul
fucomp
sti
sbb
mov
mov
jae
mov
outsl
stos
cmc
and
and
shrb
push
cmp
out
movsb
xchg
aam
cmc
jl
jae
sbb
xchg
jmp
inc
mov
int3
fpatan
sbb
mov
cld
push
or
lock
dec
mov
sbb
push
mov
cmpsl
mov
ret
mov
sbb
enter
mov
inc
pop
lods
movntq
inc
fcomps
inc
rorb
xchg
jns
imul
push
icebp
jae
pop
xlat
sub
xchg
jb
shrb
xor
mov
int3
adc
call
mov
sbb
pop
jnp
insl
cmp
push
stos
sti
push
inc
insl
and
pop
xchg
or
lea
jne
or
add
sub
mov
inc
test
nop
sub
les
popa
insb
cltd
xor
sti
daa
movsl
rcr
pop
out
pop
add
fnsave
pop
or
sbb
mov
test
push
movl
ret
aad
pop
mov
lcall
pop
add
xchg
imul
adc
ss
fwait
dec
mov
inc
stos
xchg
pop
push
jge
xchg
mov
shr
sbb
mov
lea
pop
imul
stc
pop
cmp
jno
test
xchg
sbb
enter
sbb
loop
pop
iret
and
mov
jno
sbb
rorl
sti
inc
call
sbb
fdivs
xor
mov
and
jecxz
fstpt
imul
mov
movsl
aam
push
jge
mov
mov
push
jmp
cmp
cltd
inc
add
sbb
inc
addr16
lcall
sub
jmp
pop
jns
pushf
cs
push
mov
icebp
leave
subl
cltd
inc
xchg
cmpsl
pop
sub
cmp
sbb
dec
xchg
ds
sbb
aam
aaa
and
movsl
loopne
jge
cli
sbb
or
sbb
xchg
mov
pop
xchg
add
loop
sbb
popf
inc
xchg
push
imul
xor
aad
lods
dec
sbb
shrl
xchg
std
flds
push
ljmp
mov
inc
scas
pop
lds
je
rol
stc
cs
inc
xchg
inc
inc
xchg
leave
addl
jecxz
and
dec
jae
sbb
js
mov
pop
pop
cmp
shrl
fs
loop
xchg
jg
lds
and
mov
and
insb
ss
inc
dec
sbb
leave
push
jmp
push
and
jne
mov
pop
out
sub
shrl
sahf
jo
sbb
inc
mov
sbb
push
inc
insl
aam
inc
mov
jl
ret
sbb
in
mov
cmpsl
stc
inc
sti
insl
mov
push
xorl
pop
mov
sub
jne
test
add
ficomps
scas
mov
cs
ror
or
pop
scas
pop
add
lret
fwait
pushf
mov
xor
sbb
and
vmovss
push
xchg
mov
and
fstpt
xchg
jne
ret
incl
sbb
insb
test
stos
mov
mov
xor
inc
push
ret
ret
call
inc
int3
aas
jecxz
into
or
add
scas
lea
lods
sub
in
or
test
cs
push
mov
dec
fs
mov
js
sub
and
rol
outsl
aas
sbb
mov
int3
push
cmpsl
push
lret
das
lcall
jnp
mov
pop
dec
inc
repz
mov
gs
lea
imul
aas
and
pop
loopne
ljmp
inc
cli
lods
gs
and
ret
shr
xor
lods
mov
movsl
leave
fcomps
ret
subl
in
addr16
ja
or
call
call
imulb
xchg
pop
xor
jbe
pop
sub
adc
sbb
aam
adc
fs
pop
ret
mov
pushf
sti
cmp
cmpsl
xchg
andl
sbb
imul
cmp
inc
insl
scas
subl
fcmovnu
mov
dec
push
dec
and
adc
insl
xor
sarl
sub
sti
mov
shll
hlt
hlt
loop
xchg
push
push
jne
cmp
bound
push
es
dec
fldl2t
jecxz
pop
dec
iret
lret
mov
sub
repnz
test
fildll
pushf
scas
test
mov
repz
pop
repnz
mov
repz
inc
into
push
jnp
fidivl
into
imul
add
loopne
iret
pusha
xchg
sahf
jl
stos
fildl
push
loopne
fucom
fdiv
out
orl
push
push
imul
xchg
jae
mov
lea
dec
or
ret
mov
or
shrb
mov
mov
loopne
pop
fldl
in
adc
fdivrl
xchg
imul
jp
lea
lods
mov
fdivs
pushfw
sbb
or
repz
test
sti
outsl
push
repz
inc
pop
and
xchg
aas
adc
inc
popa
xchg
js
fdivr
xor
pop
mov
pop
jno
into
lds
xchg
sub
and
add
clc
mov
xor
sub
cmp
rcrl
push
mov
scas
nop
push
test
scas
mov
sbb
stos
sub
shlb
arpl
xacquire
inc
fildll
fidivrl
sub
mov
insb
into
arpl
rcr
dec
subb
repz
add
in
mov
xchg
mov
inc
loop
not
int
rcrl
in
movsb
outsl
sti
xacquire
mov
bnd
je
push
inc
rol
fisubrs
xchg
sbb
xlat
mov
fsubrs
repz
ret
rcrb
repz
dec
inc
sbb
xorl
sti
into
sbb
lds
add
mov
rcrb
jmp
mov
sahf
sub
cwtl
roll
adc
xor
lds
mov
add
mov
leave
fldl
push
xor
mov
mov
cmp
loop
cs
insl
sti
jecxz
inc
xor
sbb
mov
inc
jno
out
cltd
subb
fs
cld
pop
cmp
pop
pushf
mov
jne
andb
bswap
push
xor
cmp
mov
mov
or
cmp
sti
arpl
test
ds
repnz
fld
scas
dec
or
xlat
pop
loope
jae
pop
cld
stos
inc
out
insb
or
sahf
lahf
out
or
dec
push
add
mov
adc
addr16
call
mulb
xchg
dec
fidivrl
inc
cld
push
int3
test
lret
and
out
sub
pusha
pop
fisubs
dec
sbb
enter
sbb
xchg
dec
insl
ficompl
es
adc
jecxz
insl
sub
arpl
out
repz
jae
mov
adc
orb
jg
popf
xor
mov
dec
dec
sub
clc
xchg
pop
mov
daa
loope
add
lea
pop
in
lret
inc
aas
jge
pop
push
and
sbb
int3
adc
cmp
andb
inc
mov
pop
mov
lds
int
cmpsb
ret
pop
sub
hlt
add
or
rclb
aad
xchg
data16
and
sub
std
imul
in
mov
js
iret
xchg
mov
mov
sub
je
iret
dec
flds
jl
xchg
dec
adc
sbb
popf
ret
test
xor
sbb
jmp
fsubs
sbb
stos
ja
jmp
arpl
jae
int3
cmp
mov
jl
xchg
jnp
xlat
lock
fisttps
and
cmp
sbb
in
push
iret
arpl
mov
pop
je
sub
cmp
mov
stc
cltd
lret
xchg
sbb
dec
cmpl
fwait
out
and
sbb
in
xor
pop
jmp
inc
cli
xchg
lret
inc
cmp
fiaddl
xor
or
fwait
ja
mov
xchg
inc
dec
xor
insb
pop
and
stos
scas
pop
cld
mov
fcoml
int
sbb
call
jmp
mov
add
jle
loopne
shlb
rol
and
loop
std
iret
or
pushf
aad
jg
jno
xor
jecxz
jae
sti
xor
stos
adc
pop
roll
cmp
arpl
mov
cmpb
repz
idiv
cli
imul
adc
and
dec
jae
xchg
push
dec
mov
out
push
add
inc
and
test
aas
or
fmul
xchg
xchg
mov
inc
sbb
fimuls
out
inc
pop
cwtl
push
ljmp
mov
jae
inc
repnz
popa
ret
pushf
andl
imul
jae
hlt
ljmp
jne
mov
xchg
dec
test
push
shrb
addr16
dec
ret
sub
xchg
cltd
adc
sbbl
cmpsb
insl
test
mov
pop
ret
cmpsl
int
xor
test
mov
sbb
push
lods
out
pop
call
dec
push
popa
lcall
fwait
and
roll
in
push
push
xor
lret
add
mov
shll
push
mov
push
inc
ror
pop
int
add
icebp
repz
gs
subl
imul
sbb
movsb
adc
aad
sti
mov
fs
mov
test
mov
push
cs
or
ret
pop
inc
add
fstp
jne
add
mov
mov
push
loopne
cmpl
mov
or
les
cmp
fisubrl
xor
mov
call
loopne
pop
lret
in
cs
test
cmp
into
aas
ficoms
stos
pop
les
mov
pop
cltd
stos
cmc
lds
in
hlt
cli
xor
lock
int3
ror
inc
ret
mov
sub
out
pop
push
rclb
lods
ror
pop
sub
dec
cli
lods
jno
adc
jge
rcrl
push
pop
lcall
jbe
ret
push
std
mov
inc
mov
inc
jbe
add
stc
inc
adc
fcmovbe
pop
pop
jmp
cltd
es
push
pop
xor
fidivrs
out
cmpsb
divb
inc
fwait
xchg
fsubrl
sbb
inc
cmpsb
dec
fs
jmp
fstpt
cmpsl
popa
jne
xor
lods
and
dec
cmp
jb
test
xlat
test
out
sti
pop
xchg
cmp
cmp
push
xchg
xor
sbb
dec
cmp
ljmp
cmp
in
cmc
stos
clc
pop
lds
push
aas
test
jmp
and
imul
add
fldenv
mov
mov
pop
jge
pop
lahf
dec
rorl
loope
xchg
addr16
ljmp
insb
dec
fsubrl
gs
cmp
inc
fmuls
pop
mov
fcomps
shl
pop
mov
sub
or
insb
outsb
icebp
addr16
sbb
mov
xor
pop
leave
mov
stos
pop
or
xchg
pop
stos
sub
adc
jp
pop
lock
push
mov
cld
adc
fwait
and
sub
shrl
aas
ret
or
rolb
jg
mov
pop
jo
jno
fwait
lods
mov
xor
jecxz
inc
jne
pop
mov
cmp
pop
mov
inc
xchg
sub
sbb
bound
cmpb
pop
aam
pop
lods
addr16
in
xrelease
pop
inc
pusha
sbb
mov
stos
imull
popa
and
jg
aad
cli
popa
jmp
sbb
sub
cs
jl
xor
stos
test
lret
loop
fsubr
ds
jb
js
out
pushf
dec
sbb
push
dec
stc
rcrb
mov
pop
sbb
fistps
and
cmp
fwait
dec
lds
out
ss
jge
jne
sbb
sub
sti
insl
inc
inc
push
sbb
and
cmc
jmp
push
sub
mov
xor
xchg
ss
cwtl
ret
dec
or
xchg
sub
rolb
fsubl
jb
repnz
lock
xchg
enter
rol
add
mov
mov
aaa
sti
xor
mov
jge
leave
loopne
mov
or
imul
push
inc
sti
inc
in
in
loope
mov
xchg
sbb
inc
hlt
mov
dec
dec
loop
pop
jae
popa
and
dec
sti
leave
popa
std
sbb
in
int
or
jecxz
fsubl
outsb
mov
mov
cltd
push
pop
inc
xor
sti
jo
lea
inc
mov
arpl
addr16
add
mov
stos
and
aam
pop
and
leave
xlat
push
imul
outsl
cwtl
jmp
stos
mov
mov
jae
jnp
jmp
ret
loopne
sub
xchg
psrlw
xchg
mov
sti
push
push
pop
fwait
movsb
push
cmp
inc
stos
je
aam
out
jno
mov
adc
adc
push
pop
ret
add
mov
mov
aaa
aad
mov
imull
mov
shrl
mov
sbb
les
loope
cwtl
mov
stos
aad
and
or
sbb
loope
neg
imul
int3
xor
pushf
mov
in
dec
lds
sub
shrl
loope
in
outsb
loop
jne
mov
in
dec
dec
pop
push
movsb
push
dec
lock
pop
lret
pop
lock
inc
hlt
inc
or
ret
enter
insl
movsb
inc
add
int
sbb
out
inc
cmpsb
pusha
cmpb
aad
fiaddl
pop
adc
jbe
fcoms
inc
mov
lret
mov
aas
push
fsts
dec
xchg
stos
outsl
cmp
das
loope
dec
and
pop
inc
sbb
sbbl
lds
cwtl
xor
enter
pop
stos
sbb
xor
repz
ret
pop
fsubrl
pop
and
inc
xlat
orl
dec
or
ret
fistl
loope
inc
sub
imul
mov
into
xchg
je
test
pushf
push
jo
stc
loop
add
pop
insl
or
shrb
inc
and
pop
in
fldcw
jmp
push
subb
sti
cmpb
push
pushf
stos
cwtl
dec
fildll
bound
arpl
insl
cmp
shlb
xchg
push
outsl
in
ljmp
movsb
fists
mov
push
inc
es
dec
cmpsb
shll
inc
and
addr16
mov
inc
adc
push
lods
mov
lock
xor
cmpsb
repnz
mov
sub
mov
inc
mov
xchg
test
pop
faddp
jl
call
mov
xchg
sbbb
adc
fstps
jns
lahf
push
rorb
fisubrl
and
cmp
cmp
adc
mov
lods
sub
inc
lea
arpl
fimull
add
dec
sti
mov
jmp
cwtl
dec
fisttps
sub
dec
cmpsb
or
add
inc
sti
jns
xor
mov
dec
ja
int
mov
bound
dec
cli
lods
inc
sub
xchg
push
fstpl
sbb
mov
xchg
xor
outsl
cltd
xchg
insl
pop
lcall
pop
iret
pop
aas
dec
pushf
lods
popa
lods
loope
xlat
mov
push
call
lret
dec
enter
add
in
sub
cmp
mov
insl
imul
leave
cmp
mov
loop
sub
adc
inc
pushf
int3
mov
hlt
fildll
test
sub
in
or
sbb
xchg
sub
inc
mov
scas
lods
dec
add
or
mov
pop
sahf
lret
inc
dec
test
jg
loopne
stos
out
out
ljmp
mov
sub
pushf
sub
repnz
pop
cmpsb
gs
repnz
mov
fiaddl
pop
sbb
mov
pop
sub
jge
cmc
push
popa
adc
mov
sbb
aaa
imul
add
jmp
inc
adc
imul
int
repnz
mov
ror
lea
arpl
out
ljmp
push
das
es
lods
or
lea
incb
xor
mov
xlat
ret
pop
test
mov
sub
lock
pop
sbb
inc
sbb
loopne
inc
cmp
lea
imul
adc
inc
and
xchg
xlat
dec
add
iret
pop
imul
rolb
test
mov
cmp
inc
es
outsb
inc
jp
cmp
inc
xchg
das
repz
jns
inc
aas
mov
cltd
dec
fsubl
sub
jnp
enter
mov
ret
ficomps
mov
js
inc
das
sti
cmp
adc
jo
sbb
adc
aam
pop
in
jb
aam
xor
xor
cwtl
add
pop
cmp
inc
and
mov
aad
insl
out
repz
insl
decl
imul
mov
xlat
bound
xchg
popf
mov
push
imul
add
cmc
out
outsl
loope
mov
fsubrs
or
xor
sbb
lods
lock
cmc
mov
adc
icebp
xor
aaa
mov
out
push
rcll
jg
dec
repz
mov
inc
arpl
ljmp
xor
sbb
into
insl
test
sub
or
add
push
push
push
dec
inc
sbb
sahf
mov
pop
xchg
fstl
mov
cwtl
pop
mov
lret
mov
or
arpl
xorl
out
cmpsl
or
cmp
sbb
sbb
pop
jbe
push
xchg
mov
cmp
rolb
cld
out
icebp
pop
sub
jecxz
sub
xchg
xor
xor
xchg
out
aas
lock
aas
and
lock
pop
mov
push
lea
mov
jp
sti
adc
shrb
sti
rolb
out
mov
iret
out
mov
fldcw
sahf
pop
cmp
imul
fdiv
jmp
push
jns
inc
push
fdivs
push
mov
roll
in
xchg
jg
mov
dec
sarb
pop
mov
in
ret
mov
lods
pop
mov
add
fcmovnb
sti
inc
xrelease
addl
xlat
xchg
fwait
jecxz
xchg
and
mov
push
fdivl
inc
sbb
inc
lds
jnp
jae
or
add
inc
sbb
mov
ljmp
ret
out
adc
ljmp
repnz
leave
jmp
stos
inc
mov
ret
sbbl
fimull
fisttpl
test
fidivrl
add
out
adc
jmp
scas
or
dec
xchg
lcall
fwait
xchg
flds
dec
mov
pop
outsb
jecxz
dec
xchg
addb
dec
imul
lret
repnz
sbb
clc
xor
jge
faddp
sbb
mov
in
rcll
jp
pop
enter
out
arpl
imul
loopne
mov
inc
fs
out
adc
cmp
popa
repz
pop
ds
cmp
sbb
pop
sub
mov
or
fwait
pop
dec
clc
in
sub
mov
out
sti
inc
inc
mov
adc
outsl
aad
push
mov
test
or
popa
in
jmp
roll
dec
ret
popa
iret
daa
xchg
outsb
movsl
mov
mov
mov
fldpi
sub
cmc
test
scas
out
psllw
xorb
popf
push
pop
in
xor
cmp
leave
fistpl
and
outsb
mov
cltd
dec
add
mov
lahf
lds
pop
or
pop
ljmp
jge
jecxz
lcall
pushf
rcll
adc
jns
jl
push
xchg
push
xchg
jg
inc
dec
add
nop
xchg
or
fistpl
xor
fldt
in
in
and
pop
and
pop
adc
and
ret
xor
xor
mov
mov
add
into
mov
imul
repz
aaa
insl
sar
leave
push
or
add
aam
scas
ds
mov
mov
mov
cmp
stos
pop
sti
cs
dec
loopne
jecxz
mov
cmp
negb
adc
adcb
cmp
ror
mov
push
movsb
pop
dec
scas
ds
sub
lods
movsb
push
fsubs
inc
int3
cmp
lcall
jp
sbb
sbb
mov
jbe
add
imul
xor
loop
les
jecxz
push
xor
out
add
ret
pop
mov
das
leave
inc
addr16
flds
mov
out
inc
stc
push
mov
imul
pop
sbb
fmull
push
lret
cli
adc
dec
sbb
pop
adc
insl
stos
rorl
popf
mov
inc
rclb
insl
data16
xchg
mov
ss
ds
push
cltd
mov
mov
xor
into
orb
and
je
cmp
scas
jno
arpl
test
data16
dec
mov
or
inc
repz
not
inc
jnp
popa
add
sbb
pushf
adc
xor
mov
sti
push
mov
outsl
sub
sbb
loope
cmp
icebp
sbbb
jle
ret
cmp
int
jmp
push
push
je
ret
sbb
loopne
jmp
inc
int3
rclb
push
cltd
fldt
loopne
ljmp
dec
icebp
add
jge
lcall
imul
lds
jge
jp
lock
gs
ret
mov
insl
in
jg
adc
cld
ljmp
mov
push
stos
xor
rcrb
dec
or
gs
and
shrb
dec
daa
xorl
std
fistl
loopne
xchg
adc
jmp
sbb
test
gs
lds
fistpll
and
ja
shll
sub
shll
push
or
cld
add
jg
test
lret
in
lret
sub
fsqrt
test
shll
cltd
das
pop
or
mov
inc
mov
mov
xor
push
in
cld
pop
fistps
pop
xor
dec
loopne
cmp
lret
sbb
xor
int
lds
sbb
push
push
roll
adc
ret
loopne
cltd
int3
jnp
imul
jecxz
out
into
imul
cmpsl
mov
xchg
adc
sbb
loop
mov
repz
mov
adc
mov
repz
fucomp
mov
fimuls
and
lods
aas
jnp
andl
mov
stos
and
xchg
das
pop
les
out
cmp
out
push
pop
inc
mov
loop
inc
test
inc
data16
addr16
xchg
ds
cli
and
sbb
adcl
mov
es
fstl
pop
aaa
dec
xor
in
stos
mov
jg
mov
pop
test
dec
fiaddl
pop
xchg
fiadds
push
loope
mov
data16
or
out
les
adc
loop
or
imul
pop
pop
xlat
or
mov
out
add
ret
sbb
jns
std
in
pop
mov
mov
hlt
add
cwtl
and
fwait
scas
pop
jo
lret
cmpsl
pop
mov
jecxz
pop
cmp
jae
sbb
popa
xchg
add
sbb
cli
pop
cmpl
fcmovne
mov
xor
testl
xlat
mov
dec
outsl
adc
fldl
push
lds
test
std
sub
lret
aas
pop
in
out
insb
aas
pop
add
inc
decb
jmp
sub
and
imul
add
insl
sub
push
mov
mov
xor
xorb
xchg
loope
dec
lahf
scas
inc
pop
pop
stc
cld
scas
or
mov
sub
dec
ja
aad
sbb
mov
lcall
cmp
stos
mov
stos
mov
and
xor
lcall
call
into
sub
dec
std
ffree
jmp
out
mov
push
into
js
xor
sub
mov
flds
or
shll
mov
mov
push
loop
add
and
inc
fistl
inc
stc
sahf
insb
inc
scas
test
mov
mov
in
imul
mov
roll
inc
std
dec
xchg
inc
jmp
pop
cmc
lock
ljmp
loop
repz
scas
fwait
sbb
arpl
jg
and
push
aad
fimull
push
shr
pop
cmc
in
aad
rcrl
jecxz
sti
jp
add
and
pushf
fisttps
lds
jg
andl
cmpsl
cmpsl
mov
fsubs
in
test
adc
in
std
pop
fistl
inc
imul
loop
ja
jae
or
outsl
in
repz
adc
xchg
in
cmp
xor
mov
fiadds
pop
scas
lods
sti
rorb
jno
int3
aad
inc
push
fimull
ljmp
inc
mov
repz
in
stos
mov
dec
fiaddl
pop
xchg
push
shl
mov
jp
jb
aas
or
lea
jmp
fisubl
inc
cmp
test
xlat
pop
movsl
rcll
jecxz
gs
xlat
inc
mov
xchg
ret
andl
mov
in
inc
sti
pop
rorb
lea
imul
inc
jnp
jae
outsl
rorl
ret
lea
in
adc
sub
cmpsl
and
cmp
xor
dec
lret
ret
add
imul
cmpsb
mov
fidivl
inc
mov
pop
cmpsl
mov
fiaddl
inc
add
dec
inc
rol
aam
lea
pop
ret
mov
outsl
cli
push
test
int
cwtl
mov
imul
leave
dec
jle
icebp
mov
mov
add
and
lea
ficoms
jb
adc
or
mov
ds
mov
fildll
mov
dec
stos
add
dec
dec
lea
dec
fcomps
cli
sub
jno
fstpl
cmp
dec
sub
mov
fs
dec
cmp
ljmp
icebp
jns
mov
insb
in
mov
adc
call
in
mov
mov
loope
mov
add
sbb
cwtl
sti
xor
in
les
insb
sbb
inc
push
jbe
out
cmp
sbb
mov
lods
iret
jmp
shl
or
enter
or
enter
push
lret
repz
push
mov
clc
or
int3
dec
jne
sbb
pop
repz
and
imul
in
imul
lret
or
or
xor
popf
fcoms
push
sbb
xchg
jno
add
mov
ss
and
popa
jg
rcrl
pop
add
sbb
in
loop
jmp
imul
fadds
and
into
pop
insl
push
insb
sti
sti
faddp
mov
sub
test
sarl
mov
popa
pop
fwait
nop
cli
mov
enter
daa
adc
mov
jae
arpl
xchg
insl
test
sbb
xchg
dec
stos
int3
das
or
aas
cmpsl
and
imul
mov
pop
jb
sbb
xchg
mov
test
and
rorl
mov
or
inc
jle
mov
or
hlt
jmp
jg
add
fwait
scas
iret
and
pushf
adc
dec
jecxz
inc
sbb
mov
jg
fists
dec
pop
leave
inc
dec
and
xor
pop
loop
xchg
scas
loop
int3
cmp
jmp
shll
and
ds
imul
pop
jne
cmp
call
cmp
int3
clc
xchg
aad
and
lods
call
jnp
fildll
dec
mov
addr16
mov
ret
cmp
and
outsl
jge
in
jge
les
sbb
mov
push
jl
cmp
mov
decb
daa
adc
pop
sbbl
and
sbb
out
sti
jnp
pushl
movb
dec
sub
or
stos
lcall
pop
jo
mov
fwait
lea
jmp
or
lret
lea
fsts
xor
dec
mov
loopne
and
jae
fcoml
xor
mov
sbb
ja
pop
cmp
inc
mov
pop
adc
dec
adc
lock
xor
out
pusha
or
fwait
jp
mov
mov
fistpll
and
pop
mov
imulb
je
pushf
fisttps
mov
and
mov
jle
test
out
fcmove
and
fsub
out
xchg
lds
adc
inc
fists
dec
sbb
lcall
lret
jmp
push
mov
dec
icebp
shrl
ret
aaa
add
aas
mov
out
add
jns
add
pop
aaa
std
loop
jmp
cmpsb
repz
xor
dec
imul
sbb
icebp
fistpl
sti
out
ror
stos
inc
int3
pop
lea
and
pop
imul
leave
push
popa
inc
subb
imul
int3
jmp
iret
inc
rol
mov
push
es
ret
or
ret
add
push
push
iret
addr16
mov
cs
cmp
adc
in
pop
fistpl
inc
popa
inc
sbb
jmp
out
mov
pop
ret
mov
mov
lahf
jns
xor
xchg
sub
lret
fildl
sbb
fisttpl
sbb
xor
cmp
jne
stos
xchg
cmp
cmpl
sbb
pop
mov
arpl
dec
mov
mov
imul
out
xchg
push
subl
cmp
xchg
cmp
mov
jp
sbb
lock
sub
subb
sbb
add
jnp
add
or
mov
fdivrs
aad
or
das
sbb
lret
inc
loop
sbb
push
roll
sbb
clc
jae
addr16
imul
les
cmp
fistpll
mov
arpl
xor
test
pop
sbb
popl
imul
clc
fsts
mov
lds
ret
mov
cmp
andb
cltd
adc
cmpsl
sbb
jne
push
mov
int
or
pop
lods
fimuls
lea
cmp
test
ja
or
xchg
sub
mov
in
mov
mov
mov
or
cmp
xor
test
cmp
pop
fcmovnb
jecxz
fstp
in
addr16
mov
pop
xlat
jl
mov
xchg
addr16
ret
mov
movsl
add
sbb
sahf
int
insl
sbb
pusha
int
shll
adc
lods
adc
ja
mov
sti
mov
insb
xchg
sti
inc
cld
ret
pop
movsb
lods
sti
rorl
inc
call
mov
imul
sarb
mov
push
stc
in
cmp
xchg
mov
mov
and
and
std
imul
popa
pop
adc
dec
inc
pop
and
les
sbb
dec
dec
sbbl
xchg
hlt
cwtl
roll
lods
mov
adc
push
scas
stos
add
and
div
mov
imul
sub
aaa
jo
into
ljmp
in
xor
jnp
inc
ret
lea
dec
xchg
cmp
loope
shrl
loope
mov
ds
mov
sti
arpl
sbb
inc
mov
mov
and
in
pushf
imul
popf
jae
fsubrs
pop
gs
popa
mov
pop
jne
scas
notl
inc
aam
popf
xchg
pop
pop
in
rcrb
sbb
out
xorb
es
ds
rcrl
xor
lds
xlat
sbb
add
leave
cltd
jo
int3
push
in
adc
ja
pop
inc
sub
mov
sub
pop
sarb
lret
lcall
fdiv
pushf
nop
ss
imul
xchg
rorl
or
int3
jb
mov
jbe
sbb
sub
cmpsb
inc
xchg
iret
ret
outsb
dec
rclb
pop
ds
fistps
movsl
int
dec
push
imul
ljmp
jle
or
cmp
dec
outsl
sub
dec
jmp
shl
paddsb
dec
xor
out
push
jb
jecxz
negl
rcll
or
fisttpl
sbb
jp
das
addr16
dec
xchg
cmpsb
ljmp
ds
sbb
outsl
test
insl
pop
sti
cs
adc
push
pop
int3
and
enter
adc
dec
jmp
aas
cmpsl
mov
or
sub
jp
sub
imul
insl
sub
jmp
xlat
outsl
stos
adc
icebp
es
arpl
imul
and
ret
cmpsb
leave
adc
inc
movsl
dec
mov
cmpsb
adc
stos
add
sbb
iret
mov
test
xchg
les
jg
pop
data16
adc
fistpl
lods
mov
xchg
cs
ljmp
pop
popa
adc
push
mov
push
xlat
push
mov
dec
fdivrl
imul
call
jns
mov
jnp
mov
pop
test
in
cmp
inc
push
aam
in
adc
push
in
roll
and
std
jge
gs
pop
addr16
mov
imul
cltd
das
mov
or
jmp
push
fdivrl
repz
ret
rorb
in
shlb
inc
popa
ficoms
test
ret
adc
test
leave
xchg
jno
enter
sbb
sbb
jmp
fs
repz
ret
fmull
flds
jmp
mov
xchg
mov
lds
cltd
dec
int
jl
out
or
push
repz
pop
fidivrl
inc
xchg
adc
cs
popa
or
and
pop
ret
leave
into
inc
jecxz
mov
test
into
push
jae
fwait
and
pop
xchg
mov
or
sbb
insb
pop
jo
imul
out
pop
cld
jp
int3
inc
stos
mov
arpl
xchg
and
insl
mov
andb
popf
adc
push
xchg
inc
jl
arpl
or
out
pop
int3
add
xlat
xchg
mov
addr16
jno
outsb
pop
fmul
jns
cmpsb
test
jmp
testb
sbb
imul
xchg
popa
shll
das
fstpt
repz
ljmp
pop
fdivrp
add
cmpsb
pop
gs
into
scas
enter
imul
jmp
sti
xchg
aad
xchg
sub
mov
jno
shr
insb
fistpl
inc
insl
lahf
into
cmp
jo
push
fcoms
addr16
lea
fisttpl
shr
mov
sub
pop
sbb
std
jl
adc
pop
roll
stos
inc
loope
xor
mov
cli
push
lcall
sbb
jne
enter
fsubrl
xchg
pop
inc
icebp
fcmovbe
xchg
push
cwtl
sub
cmp
xor
add
repnz
movsb
jl
out
mov
pop
sbb
xor
jae
xchg
sti
push
imul
xor
movsl
mov
inc
fwait
ret
addr16
mov
push
inc
pop
mov
ds
cmp
out
mov
sbb
bound
rcll
lock
jecxz
mov
aad
outsl
jmp
fs
fldenv
lea
add
jmp
outsb
sub
xchg
lret
jecxz
enter
rcll
scas
int3
loope
test
stos
cmc
push
mov
fcoml
mov
sahf
sti
out
dec
cmp
pop
daa
aas
cmpsl
fwait
enter
mov
jmp
pop
or
mov
add
movsl
stos
addr16
stos
pop
lods
sub
add
mov
inc
xor
sub
std
cmc
push
mov
imul
fmul
aam
mov
jno
jp
pop
ljmp
pop
fmul
xor
add
push
or
mov
xor
pop
mov
icebp
mov
out
sub
mov
xor
pop
jno
out
pop
outsl
popa
push
loopne
push
sbb
das
fwait
or
push
pop
or
int
bound
ror
ds
cs
addr16
out
imul
push
clc
xchg
mov
ret
faddl
adc
arpl
xor
mov
je
or
cltd
jne
xlat
jnp
mov
fmull
stos
cmp
aad
mov
pop
or
mov
mov
sub
pop
mov
cmpsl
mov
xor
pop
inc
inc
adc
pop
cmpsl
test
dec
int
fcoms
xorb
jmp
push
mov
mov
leave
movsl
addr16
xchg
adc
jg
mov
pop
jmp
pop
inc
mov
ret
data16
aas
jmp
dec
dec
or
pminsw
and
push
xchg
mov
mov
aaa
or
fistpll
sarl
sbb
xchg
mov
shrl
xor
pop
mov
jmp
cltd
sbb
leave
cs
clc
call
xor
out
iret
jno
call
push
es
push
inc
shlb
mov
arpl
mov
fmull
not
fadds
push
sti
stos
adc
push
filds
fstpt
xchg
inc
lret
jecxz
loop
outsb
sbb
xor
outsl
jmp
es
popa
dec
push
cmp
and
fisttpl
and
xor
in
mov
push
add
or
cmp
mov
enter
pop
xlat
inc
xchg
sbb
push
pop
and
add
movsb
xchg
cmp
pushf
in
fsubrs
add
fsubr
pop
popf
add
in
out
arpl
push
inc
rolb
xchg
inc
icebp
jmp
jmp
cmp
and
mov
cmpsl
invd
das
mov
stos
push
stos
push
add
push
sbb
xor
outsl
int
xchg
rcrl
xor
mov
dec
pop
inc
push
daa
push
sbb
clc
shl
push
lods
mov
adc
cwtl
mov
test
int
sbb
je
stos
pop
test
hlt
inc
leave
and
mov
daa
inc
popf
fmul
gs
sub
outsl
or
ret
pop
xchg
sbb
inc
xchg
dec
mov
inc
cltd
lds
jecxz
inc
lret
and
adc
dec
pop
in
jmp
cmpsb
jbe
sbb
xchg
push
and
test
roll
push
sbb
out
pop
sbb
mov
arpl
pop
and
or
jne
or
xchg
jmp
or
repz
xor
mov
mov
sbb
jl
mov
mov
adc
je
fstpl
mov
out
cmp
and
lods
add
jb
imul
test
stos
xchg
lret
jo
xor
fs
je
addr16
gs
icebp
aas
adc
push
pop
ds
cli
sbb
xchg
out
mov
pushf
notl
mov
lock
jmp
adc
test
push
mov
adc
cs
sub
inc
loop
rcr
sub
sbb
xlat
or
xlat
fsubrs
aas
sbb
xlat
leave
jmp
push
ret
cltd
and
cmp
and
jne
jmp
lret
mov
inc
roll
ja
out
gs
add
hlt
inc
pop
push
js
pop
mov
sub
adc
out
insl
lock
leave
dec
sbb
outsl
rorb
out
pop
xchg
sbb
jge
fwait
loopne
aaa
pop
inc
sarb
ret
shlb
jecxz
and
or
push
add
mov
mov
stos
fistpll
mov
xchg
out
mov
adc
aaa
out
ret
shlb
inc
jecxz
fnstcw
insl
arpl
rcll
or
xchg
mov
sub
mov
test
fisubl
sub
sti
dec
call
loope
pop
inc
ss
inc
int
sbb
push
sub
pop
enter
adc
adc
or
and
dec
std
fistpl
push
ljmp
jns
dec
pop
xchg
pop
pop
js
add
cmp
cltd
mov
sbb
sarb
add
adc
hlt
sub
inc
and
subl
mov
mov
rclb
mov
or
fsubl
in
mov
movsl
subl
pop
ret
nop
push
push
cmp
lock
mov
out
inc
xchg
inc
push
xchg
ret
and
inc
sbb
add
cmp
sbb
in
dec
mov
or
icebp
dec
ss
mov
or
in
gs
jnp
sbb
adc
jl
fucomip
nop
add
fcmovu
add
enter
or
cwtl
rcr
adc
arpl
and
mov
pop
hlt
cmp
fwait
push
pop
repz
push
rol
sbb
subb
aad
adcb
xor
loope
fistl
fdivs
lock
mov
push
jns
daa
popa
rcrl
outsb
mov
out
rolb
jge
push
fsub
fsubs
dec
push
fisubrs
xorl
out
cltd
or
test
pop
hlt
in
push
adc
xchg
mov
cmpsl
vmovdqa
dec
inc
fwait
jno
test
cmc
pop
adc
bnd
push
inc
cmp
repnz
and
test
push
aas
sub
and
fsubl
cmp
jl
lcall
pop
fldl
pop
and
xor
pop
popf
loope
mov
aas
adc
jno
dec
sbb
pop
fisttpl
jns
dec
push
lret
fmull
dec
mov
sbb
sti
test
jecxz
fmul
and
fstps
es
not
bound
cmp
nop
loop
ret
sbb
xchg
pop
pushf
aas
outsb
std
imul
int3
pop
push
rol
or
lret
arpl
and
add
pop
jle
jae
test
es
rcrb
sub
jecxz
xor
shl
lea
or
mov
shrb
stos
inc
push
jle
push
sbb
test
imul
fwait
mov
fneni(8087
bound
test
cmpb
jecxz
fsubl
mov
mov
adc
iret
dec
cmp
inc
fstpt
xor
enter
and
stos
inc
arpl
aam
inc
pop
mov
fsubrp
adc
fildl
cmp
mov
mov
sub
jecxz
xlat
cmp
mov
adc
inc
sbb
scas
lret
cmpl
push
pop
cmc
ret
jl
dec
int
xor
inc
ret
ret
mov
imul
push
jns
lea
lret
pop
fists
in
idivl
fildl
jb
jmp
insb
ljmp
lods
push
add
sbb
mull
fisubrl
add
mov
sub
xchg
ret
fisttpl
push
pop
rcrl
sbb
sub
mov
mov
jmp
ja
jecxz
xchg
out
push
insl
mov
dec
movsb
movb
into
ljmp
mov
imul
adc
mov
int
inc
xor
out
leave
mov
jmp
xlat
testb
pop
movsl
test
push
aas
pop
repnz
mov
mov
and
into
sub
xchg
mov
mov
sbb
sti
leave
and
test
lea
ret
ret
sbb
push
ror
shll
loope
mov
mov
in
push
or
push
mov
mov
pop
ret
pop
sub
outsl
add
pop
pop
out
aas
cli
lea
repz
dec
ret
iret
sbb
int
mov
and
fistpl
add
jmp
fiaddl
sti
cmpsb
rcr
push
aam
mov
fiadds
and
lret
stos
fcomi
std
aad
or
pop
jmp
jmp
stos
cmp
mov
mov
xor
mov
pop
out
add
cmpsl
cli
cmp
jge
mov
cmc
push
or
gs
stos
dec
out
sbb
push
mov
pop
cmpsl
push
std
push
out
inc
bound
daa
arpl
insb
cmp
cmc
mov
jae
fcompl
fldt
jmp
push
or
in
mov
pop
and
sub
sub
loope
ljmp
sar
enter
jmp
jge
pop
mov
inc
ret
std
push
shll
out
pusha
popa
sbb
lea
pop
and
out
nop
mov
push
stos
lea
adcb
imul
sahf
cli
dec
or
sbb
inc
sbb
jl
sub
mov
lret
sub
rolb
inc
int
cmp
mov
and
push
dec
cmp
mov
out
cmp
cli
stos
cmp
xor
mov
xor
pop
sahf
push
popf
inc
mov
insl
add
cmpsb
popa
lahf
data16
or
inc
cwtl
into
stos
inc
mov
or
jne
push
out
jg
inc
pop
mov
sbb
mov
push
and
push
sbb
fdivrs
fs
cmc
icebp
cli
sub
mov
and
cmpsl
or
mov
or
mov
dec
repnz
lret
inc
stc
mov
loop
pop
mov
and
mov
add
fs
mov
loope
jg
or
fistpll
inc
in
ss
fidivrl
std
mov
jmp
shr
out
mov
in
daa
xchg
jb
jmp
cmpsl
inc
jnp
jp
ret
and
aas
jmp
xchg
loop
aas
pop
jae
cli
daa
sar
fistpll
rol
into
inc
fldenv
xlat
ljmp
ret
std
pop
repz
lea
or
add
mov
xchg
cld
jae
mov
xchg
pop
inc
mov
jmp
in
or
dec
xor
pop
inc
pop
add
mov
sbb
in
vinsertf64x4
popa
hlt
cmp
scas
dec
jmp
cmp
stos
cmp
stos
sbb
in
and
push
xchg
mov
mov
fisubs
sbb
das
int3
ds
int
fnstsw
stos
loop
fcoms
ljmp
bound
mov
fadds
and
push
ret
jecxz
sbb
sti
and
sti
aam
inc
loopne
enter
popl
mov
out
sub
out
add
repz
xor
mov
or
or
lds
lods
mov
pop
rorb
xor
mov
sarb
iret
push
rorb
xor
data16
pop
jle
pop
stos
in
aam
ret
mov
mov
gs
cltd
aam
int
cltd
ret
fists
add
mov
xchg
test
xchg
mov
or
out
imul
popf
cwtl
outsl
adc
fldcw
pop
ror
les
and
mov
pusha
ret
fcoml
mov
fisttps
into
in
pop
xchg
faddl
sbb
xchg
popa
sbb
stos
sbb
arpl
sbb
xchg
inc
xchg
jae
inc
sbb
outsb
jle
inc
mov
daa
sarl
cmc
pop
fnstenv
testb
mov
push
fisttpll
sbb
pop
pop
movsb
sub
movsb
and
or
pextrw
test
sbb
xlat
lcall
push
popf
jp
popf
sbb
sti
add
mov
test
inc
call
rorl
fwait
sbb
fildl
and
push
stc
xor
inc
lea
enter
pushf
test
jecxz
jae
outsl
gs
imul
enter
mov
inc
popa
mov
mov
mov
idivl
xchg
sub
imul
jmp
inc
dec
ss
popf
pop
lds
push
sbb
dec
jo
jecxz
and
jle
stc
cmp
leave
faddl
add
cmp
shrb
or
sub
ret
xchg
mov
jle
push
inc
xor
push
fisttpll
imul
xor
push
xchg
mov
mov
inc
xor
sbb
ret
xchg
cmp
subl
addr16
sub
dec
sub
jecxz
inc
mov
sub
subl
clc
mov
loope
mov
lret
pop
cmp
push
push
ret
scas
mov
rol
adc
into
shlb
xor
sub
sti
popa
sbb
mov
mov
in
popa
scas
into
jb
rcl
sbb
fldt
pusha
push
in
or
stos
std
jp
fwait
outsb
push
jns
je
inc
dec
jae
popa
pop
fwait
adc
fldenv
pop
frstor
jmp
pop
xchg
push
xchg
pop
jb
jp
aad
mov
ret
nop
sahf
int
mov
addr16
push
adc
addr16
loop
ret
mov
imull
inc
xor
loopne
sbb
pusha
movsl
xchg
push
mov
insb
rorl
test
sti
in
sti
xor
enter
sbbb
and
cltd
popf
pop
fmull
inc
popa
addb
dec
or
fistpll
pop
inc
into
dec
pop
icebp
dec
add
scas
dec
sbb
aam
push
pop
es
rclb
and
loope
sarl
ret
dec
sahf
arpl
into
es
dec
inc
push
rclb
jne
cli
mov
jno
lods
sar
loope
imul
sahf
mov
ja
add
push
mov
mov
int
cld
jae
aam
out
pop
jae
dec
jecxz
jl
fbstp
mov
xor
jne
aam
mov
pop
dec
es
add
or
cli
pusha
aaa
xor
lcall
arpl
out
and
repz
je
push
iret
mov
sub
push
in
jl
push
shl
mov
cmc
xor
xchg
fisubrs
xlat
insl
ret
and
lock
jns
lds
mov
test
xor
jnp
jge
adc
sbb
in
daa
inc
stc
jne
out
sub
rclb
cmpl
fsubrs
xlat
xchg
enter
add
jge
cmp
push
jns
ret
js
cmp
jmp
sbb
mov
ret
adc
adc
sub
std
insl
cmpsl
iret
std
ret
aam
les
pop
int3
ret
ljmp
lret
ret
mov
dec
jmp
ja
shll
in
dec
ficompl
jno
jmp
popf
xor
rcrl
and
addb
sbb
push
sub
inc
xlat
cmc
pop
push
xchg
jno
sub
push
cli
je
or
push
std
mov
add
xchg
icebp
xorb
mov
jae
and
and
mov
fst
nop
push
mov
and
ret
lock
sbb
test
loope
and
rorl
jl
jg
pop
addr16
sbb
xor
dec
pop
lods
sbbb
out
nop
xchg
aas
mov
sbb
leave
sbb
fwait
insl
ljmp
fildll
mov
mov
jg
fwait
jae
fisttpll
lcall
lret
jo
cld
dec
cmpsl
dec
in
out
mov
test
test
and
cld
loopne
cmp
sbb
sub
pop
inc
arpl
sbb
ljmp
fwait
xor
pop
push
rorb
sbbl
aad
ret
mov
and
fsubl
ljmp
and
sbb
lret
dec
sbb
pop
decb
repz
cltd
xchg
and
sbb
stos
sbb
adc
jb
pop
not
lds
ret
sti
into
fwait
xchg
in
push
and
cld
cmpb
arpl
stos
cmpb
xor
sbb
jnp
repnz
jge
adc
pop
je
jle
call
and
jle
xor
movb
add
ljmp
enter
lods
cmpl
repz
lea
sbb
aaa
inc
arpl
and
or
xor
faddl
jecxz
sbb
mov
mov
insl
jmp
sub
or
dec
mov
ljmp
inc
popa
into
mov
adc
xor
in
inc
inc
fisubl
outsl
push
adc
les
xor
jae
xchg
or
stc
imul
push
subl
dec
mov
pop
xlat
lahf
sahf
jmp
insl
in
mov
xchg
mov
lock
cmp
cltd
fnstcw
fildl
outsl
ss
int
sbb
subb
mov
lods
inc
mov
fcmovnbe
and
pop
fstps
pop
push
push
sbbl
repz
pop
jb
mov
inc
popf
cmpsb
xchg
jno
fcoml
mov
imul
test
or
subl
test
mov
mov
jmp
outsl
mov
pusha
or
repz
test
mov
scas
mov
fstpl
in
les
fcmovu
movsl
int3
cltd
jmp
lahf
stc
add
fucomp
ficompl
sar
xor
push
fldl
icebp
dec
mov
stos
mov
pop
pop
in
cmp
shll
inc
lea
mov
orl
ficompl
lahf
cld
in
inc
fnstsw
out
xor
ljmp
adc
ret
nop
into
lret
or
or
mov
sbb
mov
mov
les
jbe
lods
pushw
jecxz
push
sub
test
jne
mov
sbb
daa
pop
mov
fcmovnb
dec
mov
xor
pop
push
sub
mov
mov
gs
cs
fs
adc
fcoms
and
int
mov
sti
sbb
adc
inc
ljmp
cmp
adc
dec
push
addr16
shl
ficoml
mov
cmp
in
lret
push
mov
sub
or
call
jae
cwtl
enter
das
imul
xchg
stos
adc
mov
xchg
rorb
and
or
cmp
jnp
mov
lea
inc
inc
mov
pop
push
icebp
xchg
and
pop
push
mov
stc
sbb
out
je
in
mov
scas
and
sbb
mov
cmpsb
rolb
xchg
and
sub
xchg
xchg
xor
and
add
push
pushf
jne
sbb
adc
subl
aam
push
push
and
xor
cmpsb
cmpsl
dec
ds
dec
mov
es
adc
addl
dec
call
xor
adc
aam
sbb
lret
pop
pop
jo
or
and
cmc
fs
lret
mov
out
jp
push
mov
dec
and
dec
xchg
cli
jo
cmp
inc
mov
push
fcmovnu
push
inc
test
jo
dec
mov
ljmp
sub
arpl
ret
movsb
adc
popf
int
xchg
nop
sbb
imul
incb
push
sarl
sti
test
das
aam
in
cli
movsl
dec
int3
pop
arpl
xor
cmp
push
sbb
int3
inc
and
test
lret
mov
pop
outsl
and
fiaddl
mov
pop
outsl
adc
push
fdivl
jne
pusha
add
push
jnp
lock
inc
in
fcom
dec
into
dec
pop
inc
loopne
lcall
std
mov
jne
jge
lock
adc
dec
sub
mov
sbb
sub
test
jb
leave
and
insb
imul
dec
rcrb
add
sub
jmp
adc
rorb
cmpsl
dec
mov
push
and
push
add
dec
xchg
fcmove
dec
mov
arpl
into
pop
fwait
nop
or
sbb
jg
sub
sbb
or
in
dec
mov
adc
cmp
lcall
sub
cmpb
sbb
lret
or
cmp
aam
cmp
xchg
push
push
mov
es
insl
lds
and
xor
mov
xchg
lds
mov
pop
scas
dec
push
adc
fcmove
mov
cmp
test
movsb
add
lcall
les
xchg
fldl
shr
cmpsb
scas
int3
inc
lea
inc
jecxz
sub
ljmp
cmpsl
jne
outsl
gs
mov
or
ret
ret
inc
xor
sbb
aam
pop
mov
jae
mov
imul
pop
ja
cld
aam
mov
test
mov
sbb
fwait
xlat
das
sbb
stos
punpcklwd
add
sbb
clc
js
jg
lock
arpl
aas
push
pop
xchg
scas
sub
test
subl
addl
rcr
sti
lahf
outsb
cmc
pop
stos
gs
inc
add
into
scas
add
cmp
pop
je
xor
js
push
and
test
mov
jecxz
cltd
pop
mov
inc
pop
mov
xchg
out
or
push
mov
xor
je
icebp
xchg
inc
out
movsb
pushf
ljmp
pop
push
sar
sti
sub
mov
repnz
in
aaa
mov
cld
subl
xchg
repz
dec
ja
leave
mov
pop
movsl
push
popa
fists
dec
lret
xchg
ret
gs
jecxz
jecxz
lret
fcmovne
push
add
test
push
pop
call
lods
pop
fistpl
out
mulb
sahf
sbbb
loop
pop
jae
cmp
arpl
ds
fnsave
sbb
int
pop
scas
mov
add
in
add
pop
lods
mov
push
fcoms
mov
inc
mov
out
cwtl
in
enter
out
stc
sbb
mov
std
dec
cmc
push
pop
mov
test
lds
push
rol
inc
scas
int3
push
movsb
in
xchg
cmp
in
pushf
pop
gs
test
pop
daa
push
loop
xchg
ja
xlat
dec
pop
mov
jne
sbbl
sar
addr16
pushf
in
imul
xchg
mov
loop
dec
imul
xchg
lret
and
fcoml
mov
ja
or
je
xor
pop
subb
mov
addr16
xchg
clc
les
outsl
push
in
stos
pushf
sub
pop
adcl
lock
inc
stos
insl
cmp
xchg
mov
je
lods
imul
jecxz
dec
xlat
xchg
test
jno
stos
mov
lods
xor
ret
aas
pop
sbb
push
stc
jbe
ficomps
pop
faddl
rolb
loope
cmp
jnp
int3
jae
pop
ds
mov
xor
loop
fdivrl
push
jecxz
cmp
lcall
mov
loop
inc
jmp
mov
cmp
push
fcoml
das
xor
xor
inc
out
movsb
int
out
stc
push
les
mov
fwait
or
pop
imul
mov
add
lods
mov
lea
xor
mov
in
mov
sbb
les
mov
call
aaa
icebp
in
popf
push
dec
sbb
scas
aaa
imul
jne
pop
pusha
je
scas
imul
add
ds
mov
inc
sbb
xor
cmp
fcmovbe
fsubrp
movsb
in
or
xchg
and
adcb
adcl
ret
negb
xchg
fstpl
outsl
cli
xor
push
in
mov
aaa
sti
jmp
outsb
sub
adc
ret
sbb
mov
imul
outsl
xor
jno
push
test
sub
sarl
mov
fisttpll
inc
xor
outsl
mov
mov
pop
imul
sub
add
std
fcmovnbe
psrad
pop
mov
push
jb
dec
outsl
mov
outsb
stos
jge
and
and
jge,pn
gs
dec
adc
int
pop
insb
scas
push
fildl
cmp
imull
in
outsb
scas
inc
sarl
leave
inc
push
inc
and
in
or
aam
xor
mov
pop
xchg
and
xchg
insb
cs
xchg
addb
popf
inc
pushf
into
mov
pop
add
int
xor
movsl
mov
insl
iret
sbb
mov
data16
loop
mov
inc
jno
insb
xchg
sub
cmp
xchg
inc
adc
dec
xchg
clc
mov
mov
insl
jle
imul
test
ds
pop
pop
aas
sbb
idiv
aam
out
dec
stc
inc
push
jl
jno
sub
push
cmpsl
jno
popf
xor
and
sbb
repz
inc
xchg
xchg
in
and
iret
pop
sub
fcmovnu
rcrl
inc
data16
sbb
sbb
ja
sti
pop
cmp
mov
gs
imul
inc
out
xor
xor
mov
rcrl
aas
in
or
jl
icebp
inc
add
neg
in
or
gs
lret
out
sbb
fs
mov
movsl
ret
outsl
jbe
add
cmc
jne
std
xchg
jnp
fnstcw
xlat
dec
es
jge
icebp
jecxz
lret
push
push
jbe
std
enterw
adc
adcb
xor
inc
enter
lods
int
jmp
push
lea
push
jbe
int3
mov
mov
xchg
sti
sbb
push
outsb
mov
out
nop
jp
mov
test
es
in
shrl
rolb
adc
xchg
clc
outsb
mov
inc
insl
mov
gs
xchg
inc
dec
ret
popa
cmp
jecxz
imul
aas
loop
addr16
stc
adc
rorb
lret
pusha
fcoml
hlt
js
xchg
cmp
mov
call
loop
mov
and
out
les
push
fadd
mov
cltd
movsb
scas
lea
movsl
jmp
pop
pop
mov
push
stos
or
pusha
ret
inc
jmp
ret
or
inc
jbe
xchg
nop
push
popf
jmp
cltd
and
mov
jl
out
jg
cld
add
rclb
cwtl
push
push
ja
xor
mov
gs
lea
mov
dec
stos
je
loop
sub
pop
cltd
dec
pop
or
lds
leave
inc
add
movsb
push
shrl
aas
out
or
push
rep
out
inc
popa
xchg
dec
addr16
jo
int3
fdiv
pop
push
fwait
rcrl
mov
ror
sub
mov
arpl
fs
lret
cld
lods
popf
xor
dec
push
inc
stos
sub
out
dec
dec
mov
pop
fwait
popa
lcall
push
fwait
lea
in
rcrl
xor
add
in
cs
sbb
jno
popa
lea
scas
inc
jns
or
mov
cli
fwait
push
xchg
mov
stc
and
sub
mov
test
ffreep
enter
shll
in
pop
imul
mov
jp
push
cltd
jbe
dec
or
sti
and
in
push
push
fs
inc
push
mov
pop
sbb
cmc
aaa
stos
stc
mov
mov
mov
outsl
mov
pop
sbbl
mov
aas
repz
pop
xor
mov
sbb
pop
ret
or
adc
pop
out
and
cmp
pop
or
mov
test
ljmp
push
mov
jmp
sbb
jne
pop
dec
jbe
lock
loop
mov
ljmp
scas
push
fs
out
mov
out
cltd
ljmp
push
inc
jg
and
sbb
ss
sti
push
push
inc
iret
inc
sti
sbb
jno
das
fldcw
adc
sbb
or
push
fucomi
ljmp
aaa
cmpsl
das
jmp
inc
jecxz
and
pop
fwait
cld
cmp
adc
and
lods
ficoms
out
mov
mov
jo,pn
inc
cmpsb
ret
pop
imul
sub
sub
das
cmpsl
xor
test
aas
stos
sub
xchg
loope
aam
jle
pop
in
pop
sbb
mov
and
inc
mov
jns
push
ljmp
scas
das
push
adc
and
xor
outsb
jbe
loope
adc
out
test
pusha
mov
push
iret
mov
in
aad
stos
imul
lea
in
scas
inc
mov
cmp
mov
mov
stos
add
lcall
in
inc
mov
iret
pop
loopne
cmc
cmpsl
sbb
lret
loopne
xchg
aas
cmpsl
mov
pop
and
push
loope
dec
jno
push
shll
or
mov
dec
repz
and
jle
pop
idivl
clc
repz
mov
rolb
rcll
dec
jae
mov
xchg
lods
aas
xchg
mov
aam
stos
pop
imul
xlat
ljmp
orb
cs
dec
ret
inc
dec
repz
add
push
test
lods
jmp
fcmovnb
adc
sbb
int3
lods
stos
inc
pop
push
scas
jae
push
add
cli
jg
jbe
sub
repz
fmul
mov
rcrl
fs
stos
jl
daa
data16
adc
cmp
cwtl
insl
and
fwait
mov
jno
imul
sarb
sub
jmp
inc
mov
out
jecxz
pop
xchg
xor
dec
fcmovne
jns
mov
jle
pop
stos
outsw
shrb
and
vmovapd
lea
push
xchg
stos
hlt
sub
imul
or
stos
pop
mov
push
orb
mov
adc
jno
or
bound
xchg
mov
movsl
inc
mov
repz
push
cmp
ds
xlat
out
mov
clc
imul
fucomi
mov
or
mov
mov
jno
and
fidivrs
dec
inc
ret
lahf
xchg
addr16
push
cltd
pop
shl
imul
cmp
pop
in
ja
dec
shrb
add
jb
xchg
xchg
fcmovb
mov
insb
pusha
scas
repz
cmpl
inc
jecxz
jmp
out
sarl
inc
repnz
push
jmp
mov
in
fldt
filds
jo
dec
test
std
and
push
fs
push
adc
xchg
cmp
pop
lds
cli
mov
xlat
lcall
movsb
js
mov
in
fidivl
jns
imul
repz
pop
xor
inc
pop
mov
dec
push
pop
xor
jns
jmp
icebp
sub
rcr
xchg
inc
ret
and
je
and
mov
jp
fisttpll
ret
pop
and
inc
jns
inc
and
xchg
mov
shll
daa
stos
xor
jmp
mov
fisttpll
cwtl
add
jnp
push
mov
cmpsl
cwtl
sbb
fisubrs
push
popf
xchg
shr
sbb
fidivs
jmp
testb
out
adc
aas
cmp
mov
xchg
sub
loopne
sahf
cmpsl
fidivl
and
bound
or
sub
xchg
and
in
aam
jnp
hlt
in
sub
mulps
xchg
insl
xchg
lea
sub
andl
and
push
es
dec
repz
sub
push
mov
inc
cltd
or
jnp
das
shlb
jge
mov
es
jp
sti
call
rcrl
sbb
rolb
loop
push
mov
test
shr
loop
popa
pushf
lods
ljmp
sub
int3
bound
enter
xchg
mov
inc
imul
jmp
sub
fadd
bound
cwtl
ds
xchg
xor
add
cmp
push
xchg
dec
mov
ret
and
int3
data16
insb
xchg
sbb
inc
aam
out
dec
clc
loope
jg
or
test
ljmp
call
rcll
mov
ss
sbb
mov
add
jno
dec
outsl
jns
decl
inc
ret
pop
push
mov
pushf
negb
add
mov
xchg
rorl
fsubs
inc
frndint
pop
inc
roll
push
fucompp
dec
mov
xor
or
jb
jb
insl
sarb
pop
jl
loopne
mov
mov
movsb
fs
xchg
cmpsb
lret
ja
sbb
aam
mov
mov
or
inc
scas
jns
dec
mov
push
xchg
aas
in
fwait
pop
mov
loopne
jo
loope
fwait
and
or
mov
cmp
movsb
pushf
sbb
stos
imul
les
repz
or
inc
pop
nop
jle
test
pop
xor
adc
movb
lcall
jbe
push
xorb
jns
sti
or
fdivs
inc
ret
fistps
mov
sbb
scas
in
aaa
mov
fisttps
pop
mov
sarl
loopne
testb
mov
pop
and
jge
ret
int3
xor
stos
pushf
xor
inc
cld
sub
dec
fadds
in
inc
mov
mov
out
stos
mov
lock
xchg
addr16
sbb
sbb
out
mov
pop
inc
ds
incb
mov
dec
sub
xchg
ret
mov
stos
xchg
sbb
pop
cli
fldl
in
mov
mov
rolb
pop
rcrb
rorl
xchg
sarb
adcl
nop
ja
cld
jb
push
mov
adc
mov
fistpll
add
inc
jae
pop
sbb
add
mov
mov
fildl
into
or
fisttps
ds
and
mov
popa
fwait
inc
cld
inc
fsubp
jg
or
jecxz
int
notl
sbb
lcall
sub
pushf
add
aam
and
outsb
outsl
mov
cmp
dec
sbb
insl
xchg
sbb
insl
dec
lods
stos
jecxz
sbb
push
mov
imul
mov
inc
fisttpll
inc
xchg
xchg
xchg
mov
xchg
ljmp
fcmovnb
pusha
popf
add
loope
and
sub
mov
inc
out
repz
sarb
cltd
push
and
push
mov
inc
push
or
outsb
ljmp
shlb
inc
outsb
pusha
jmp
add
sub
fwait
inc
adc
xchg
dec
sbb
int3
mov
jl
sub
xor
aam
and
dec
cltd
dec
jo
fcmovnb
push
mov
fadd
jge
rol
icebp
leave
shll
dec
sub
vandps
fstpl
xlat
fcoms
add
inc
arpl
enter
mov
jge
mov
lds
or
jle
das
xchg
repnz
jecxz
fcomps
aam
add
out
cmpsb
or
cmp
lods
or
sub
jmp
popa
sti
dec
test
jno
movsb
and
push
imul
adc
and
mov
fisubrl
pop
sar
les
std
loop
xor
incl
and
add
adc
sbb
aam
fs
frstor
jo
or
cld
into
enter
fsubrl
add
shrb
int3
add
cmp
movsl
fisttpll
out
or
sub
fcomps
fisttpll
xor
test
enter
mov
and
fcmove
cltd
ds
leave
dec
es
cmc
out
xchg
das
jg
xchg
aaa
shrb
ljmp
faddl
xchg
fsubl
push
or
sbb
xchg
dec
les
sti
adc
pop
sbb
pop
rcrl
xchg
or
xor
pop
imul
mov
hlt
sub
mov
rcr
insl
int
mov
mov
inc
scas
data16
daa
dec
push
dec
push
imul
enter
or
pop
out
mov
outsl
pop
scas
shl
aad
sti
push
jmp
ljmp
lods
lds
bound
jp
add
insl
pop
mov
pop
jae
scas
scas
gs
test
je
cltd
icebp
flds
shl
imul
sub
jp
add
and
loope
mov
cmp
mov
pop
hlt
enter
out
cli
mov
mov
pop
subl
test
mov
sbb
push
add
testl
inc
sbb
and
mov
sub
int
cs
and
jmp
imul
push
mov
aam
mov
xchg
push
dec
xor
push
movb
xor
and
int
sbb
xchg
cmp
push
cmpsl
mov
test
xchg
lret
rol
inc
sub
cmc
add
lret
ret
xor
xchg
or
push
sub
jecxz
ret
sahf
data16
cmpsl
xchg
int3
mull
imul
jb
mov
sub
sub
or
sbb
roll
push
push
stc
imul
int3
dec
push
rorb
mov
pop
jp
mov
movsl
and
xchg
push
test
mov
xor
dec
mov
lds
je
dec
push
nop
faddl
adc
adc
jge
in
pop
push
aas
cmp
lcall
negb
mov
adc
add
pop
rdmsr
std
data16
inc
cmc
xor
ljmp
pop
pop
sbbb
fistpll
or
jns
push
cmpl
ss
gs
lret
test
pop
fmull
cmpsb
jl
mov
adc
or
cmp
mov
pop
js
call
stos
mov
jl
sub
sti
insl
jecxz
jge
lods
pop
bound
not
rcrl
pop
jp
addr16
imul
imul
imul
test
loop
xor
sub
insb
jne
scas
inc
mov
mov
popa
sbb
sbb
divb
mov
lods
dec
ljmp
shll
xlat
sub
inc
cltd
outsl
ss
mov
xor
xor
pop
mov
leave
movsl
jbe
rol
mov
scas
sub
bound
push
and
cltd
jbe
dec
sti
les
add
cmp
mov
mov
push
mov
negl
inc
xchg
dec
inc
lcall
out
fisubrs
stos
pop
sub
xchg
call
and
adc
shrl
testl
lods
test
dec
es
int3
sub
or
mov
inc
mov
fwait
mov
fincstp
into
mov
jae
mov
xchg
cmp
out
je
adc
push
mov
jl
ljmp
out
aad
arpl
push
mov
shrb
inc
xchg
add
xchg
push
and
aas
adc
test
mov
sbb
mov
movsl
pop
inc
out
adc
std
rcrb
or
std
sbb
sub
mov
cmc
shll
in
data16
cmp
insb
icebp
pusha
cmpl
push
mov
pop
icebp
xchg
push
inc
xor
out
inc
jmp
cmpsb
xor
inc
enter
leave
rcll
imul
das
rcrl
bound
sbb
int3
dec
jl
sbb
mov
xchg
das
stc
ds
mov
pop
pop
in
mov
out
test
mov
stos
mov
dec
mov
popa
inc
mov
mov
aam
pop
and
das
stos
cmp
fnsave
iret
and
cmp
cwtl
mov
test
cld
sarl
fcomp
add
stos
bound
dec
test
cmc
popf
int
scas
xchg
arpl
ret
sub
cs
inc
shlb
test
aad
and
mov
in
jp
sarl
f2xm1
cmp
mov
aad
shrl
ret
call
xor
sub
pop
push
fldpi
out
push
sahf
mov
enter
fisttps
xchg
roll
jns
push
adc
fadds
adc
push
dec
aad
je
xchg
pop
int
gs
fsub
arpl
jnp
imul
xchg
sbb
lods
ret
pusha
shrb
add
out
rcrb
push
xor
adc
push
jno
push
int
mov
and
out
add
insl
jmp
dec
push
negl
pop
and
or
inc
loopne
dec
add
sbb
xchg
pop
enter
add
sub
fidivrl
adc
push
notl
ds
and
xchg
dec
and
cmpsl
stc
jge
inc
or
sbb
push
ret
aam
or
outsl
sbb
shll
je
aam
jg
out
cmpsl
dec
pop
sub
idivb
popa
insl
gs
sub
mov
or
arpl
inc
jl
scas
lea
scas
add
loop
jmp
mov
pusha
cltd
push
mov
mov
dec
adc
pop
sub
dec
dec
lret
in
dec
pop
fdivl
mov
int
leave
ret
pop
lds
sub
cmp
inc
in
pop
cmp
iret
nop
dec
ja
xor
jns
mov
repnz
jmp
adc
fwait
sbb
jns
pop
and
dec
jmp
add
stos
xchg
popf
xchg
pop
ljmp
push
xlat
fcoms
xchg
enter
fists
imul
lea
inc
cmpsl
or
fidivrs
jmp
mov
push
iret
in
mov
sbb
mov
inc
pop
pop
in
addl
loope
and
fcmovb
inc
mov
jle
ljmp
das
sti
dec
gs
inc
sar
and
lods
ret
pop
fsubrs
sbb
or
inc
or
jl
add
mov
pop
test
jo
cmp
aam
cld
out
dec
cmpsb
out
push
hlt
dec
frstor
arpl
pminsw
xor
cmpsl
movsl
pop
mov
pop
testl
mov
int3
xchg
mov
pop
andl
inc
inc
jnp
shr
and
in
lea
jo
leave
loop
in
es
xchg
ret
mov
out
je
push
pop
mov
pop
rcrb
in
mov
daa
js
scas
jo
and
mov
inc
xor
repnz
test
in
mov
test
mov
and
adc
dec
adc
in
mov
sbb
xchg
cwtl
icebp
test
pop
xor
popf
ja
sub
dec
divl
add
subl
outsl
lcall
gs
ljmp
les
mov
sub
out
rorb
sahf
push
daa
adc
xchg
out
xor
es
mov
mov
in
in
jmp
push
ret
mov
out
mov
pop
mov
arpl
fstpt
shll
imul
add
sub
jg
xchg
xchg
push
mov
enter
mov
aad
sbb
xchg
jae
cli
jbe
push
push
loope
iret
jge
call
add
adc
pop
es
jmp
pop
jne
jo
adc
jg
sub
popf
push
adc
push
xorl
push
jae
lods
dec
out
xchg
ret
xchg
imul
popa
popa
xorb
sub
fmuls
nop
and
lret
xchg
repz
outsb
mov
jecxz
pop
insb
addr16
adc
xchg
ficomps
in
sbb
test
jno
aaa
scas
mov
jnp
movsb
cwtl
jne
xchg
mov
pop
sbb
mov
xorl
lahf
xor
xchg
mov
jae
jae
dec
sub
shll
push
lods
jbe
fiaddl
pcmpeqw
outsl
loop
ja
fdivr
sbb
mov
ret
out
mov
fists
mov
pop
fisttpl
loope
outsb
sbb
clc
push
inc
ljmp
rolb
cli
lret
gs
mov
clc
lods
xchg
push
xchg
out
imul
in
call
mov
shrl
leave
and
xchg
cmpsl
jno
push
and
fisttps
inc
fwait
push
repz
xor
mov
filds
dec
or
cmp
and
std
ljmp
popa
addr16
add
data16
jecxz
inc
or
jmp
shll
int3
mov
scas
mov
out
xor
mov
dec
in
test
mull
and
jmp
lret
and
ret
xor
insb
call
mov
mov
and
push
mov
sti
mov
sbb
sub
jge
lcall
sbb
xchg
in
dec
sbb
in
inc
dec
das
jmp
sbb
add
adcl
ret
sbb
iret
xor
lds
add
xchg
lds
out
xor
adc
jecxz
aam
test
or
xchg
leave
push
cmp
les
ret
jbe
mov
iret
add
lock
cmpsl
jo
sub
les
rol
data16
or
adc
mov
push
dec
push
push
dec
dec
mov
mov
adc
mov
dec
mov
daa
in
dec
stos
push
in
mov
ffreep
lret
nopl
les
pop
fsubrs
sbb
mov
mov
inc
cwtl
jbe
inc
dec
xchg
adc
jnp
nop
jp
mov
pop
ret
cld
sti
in
push
mov
out
fs
jne
aaa
jo
fimull
and
sti
or
sub
add
imul
int
mov
lds
ret
int
sti
aam
leave
out
sub
adcl
ret
xchg
dec
bound
xchg
arpl
pop
cmp
cld
frndint
insl
xor
jmp
xchg
mov
and
imul
xor
loop
sub
test
push
push
mov
cmc
dec
ret
jae
sbb
addr16
sbb
addr16
mov
data16
sti
icebp
imul
bound
mov
imull
imul
dec
dec
sbb
xor
add
ss
xor
sub
jnp
inc
mov
cld
outsb
shll
adc
dec
repz
inc
testb
sub
jecxz
fsub
inc
adc
fwait
push
int
cmp
mov
negl
int
mov
sbb
stos
add
adc
inc
lea
xlat
pop
repz
es
aas
mov
dec
jnp
pop
repz
sbb
fsubrl
sbb
rcrl
mov
push
shl
dec
int3
scas
popa
jecxz
mov
dec
sbb
iret
xor
cld
pushl
cmp
in
das
cs
cmpsb
iret
cmpsb
ds
sti
sbb
mov
popa
call
lods
cmc
iret
fimuls
mov
repz
mov
mov
jecxz
mov
dec
cmp
test
repnz
rol
out
int3
xchg
xlat
push
mov
inc
xchg
jecxz
and
jno
addr16
popl
or
mov
jnp
cmpsb
out
test
mov
int
popf
jbe
lock
jecxz
imul
scas
fistl
repz
fistl
cmpsl
loop
stos
orl
fcmovu
cmp
in
mov
xchg
xor
enter
in
int3
shl
xchg
rolb
outsl
insl
sub
fstps
arpl
imul
dec
pop
sbb
movsb
wbinvd
mov
lcall
adc
and
lock
add
loope
mov
or
inc
adc
push
sub
add
rolb
xor
or
imul
dec
cmp
fstpt
sbb
pop
pushf
fdivrl
add
push
dec
jecxz
in
jecxz
xor
gs
shll
inc
icebp
jmp
sbb
sbb
roll
dec
xchg
fcomps
repnz
clc
aaa
test
fldt
cmp
pop
das
adc
and
fildl
insb
popf
xor
pop
push
sub
and
sub
call
out
inc
popf
enter
pop
fs
jb
jo
dec
jmp
idivb
cmc
popf
jno
lods
mov
das
aas
add
push
xchg
or
loop
or
lock
mov
loope
sbb
jmp
mov
jmp
clc
out
mul
mov
enter
sbb
sbb
in
push
fistl
fisttps
out
adc
mov
fwait
test
adc
cmp
adc
cmp
test
out
xchg
jns
xor
adc
pop
mov
mov
pop
pop
jecxz
mov
jb
or
daa
aad
xchg
pop
pop
mov
xor
mov
jl
jecxz
mov
dec
mov
notl
out
sbb
test
std
shlb
loopne
push
outsb
or
ret
push
out
ret
sbb
push
lds
mov
or
addb
mov
and
mov
cmp
cmp
outsl
fs
ret
test
ret
leave
rol
pusha
flds
in
mov
ja
inc
lds
lods
popa
sub
ss
stos
test
cld
lahf
call
and
jb
mov
cltd
sub
inc
xor
nop
pop
push
insl
sub
dec
sub
jno
mov
les
push
cwtl
fnstsw
xor
insl
loope
cmp
xor
rol
sbb
std
jecxz
mov
cmp
in
sbbb
jle
inc
leave
pop
sub
loope
sub
xlat
mov
pop
and
dec
push
movsb
mov
jnp
clc
dec
inc
xacquire
repz
fisttpll
xorl
pop
push
push
xchg
xor
out
jecxz
leave
mov
mov
out
mov
jmp
fistps
aaa
xor
pushf
in
sbb
mov
cld
mov
int
pop
jae
fildl
lds
lds
in
xchg
sub
rcrl
lret
shll
inc
ffreep
bound
push
mov
pop
mov
mov
or
fmull
fst
gs
xlat
fwait
imul
data16
les
lock
aaa
lea
add
sub
std
push
loopne
shlb
push
sub
cltd
pusha
xlat
enter
xor
rcr
je
rorl
push
sbb
xor
ret
xchg
xor
dec
je
inc
pop
int
pop
mov
stos
push
push
pop
sbb
test
int3
cmp
es
inc
js
push
frstor
mov
mov
and
inc
fdivr
ja
mov
push
xchg
sub
cmpsl
mov
fists
and
stos
xor
rolb
cli
jns
sub
push
mov
insl
xor
pop
sbb
repz
fdivp
or
movl
loop
mov
sbb
movsl
fdivl
in
adc
add
in
mov
and
inc
dec
fsub
jb
cld
js
enter
xor
lea
dec
xchg
push
jmp
stos
subl
pop
int
movsl
jecxz
cs
mov
fcmovnu
jb
rol
or
inc
push
in
in
and
gs
in
test
inc
pusha
and
lods
popw
shl
adc
mov
xchg
gs
stc
test
std
xor
dec
cmp
test
std
push
xchg
outsl
adc
push
call
inc
cmp
cmpb
in
clc
fstps
jnp
in
jns
jae
stc
ret
xchg
pop
out
push
jecxz
or
jbe
sub
jne
rorl
or
push
inc
fdivr
fadds
pusha
jmp
dec
lcall
mov
cld
shl
in
add
pop
out
mov
xchg
outsl
iret
fistpll
insl
ret
mov
lods
dec
out
and
rcrl
xor
sbb
and
mulb
jecxz
fldt
into
pop
in
in
fmul
mov
mov
dec
add
sbb
sub
in
lret
pop
lds
adc
dec
pop
out
imul
insl
test
fldt
mov
xor
add
push
push
dec
inc
mov
or
cmp
or
fstpl
dec
scas
cmpsl
mov
mov
push
or
add
mov
lret
sbb
inc
addr16
arpl
sub
sub
xchg
cmp
jnp
lds
dec
fldt
das
xor
sbb
push
popa
add
imul
pop
dec
popf
dec
and
stc
jg
je
cmpl
test
push
imul
fildl
out
jno
ds
daa
xlat
and
and
inc
ds
faddl
cmp
jmp
push
mov
mov
dec
arpl
mov
mov
hlt
out
test
inc
out
enter
sbb
je
les
dec
mov
push
ds
push
add
jecxz
pop
icebp
es
cs
ja
xchg
jecxz
inc
xchg
mov
jbe
sbb
jecxz
decb
int
xchg
shll
xchg
cmp
mov
ljmp
ret
lods
push
sbb
mov
adc
push
sbb
pop
neg
in
loopew
add
loop
mov
mov
xchg
sbb
sti
lcall
mov
mov
pop
stos
into
and
outsl
mov
ror
push
ret
mov
sub
push
fldenv
lahf
lods
cs
mov
jmp
orb
ljmp
fadds
divb
dec
test
mov
hlt
mov
fdivr
arpl
out
xchg
add
test
popa
add
in
mov
out
fwait
jecxz
push
in
dec
imul
hlt
cmp
out
movsl
pop
hlt
inc
movsb
pop
xchg
inc
or
fstpt
rolb
xchg
daa
inc
lcall
pop
data16
in
sbb
in
sbb
fwait
or
xchg
sbb
push
add
mov
sub
sbb
mov
add
push
push
mov
enter
xor
arpl
xor
fimull
jge
rcr
or
sub
sbb
jmp
xorl
inc
adc
hlt
pop
inc
xchg
pop
out
ret
xor
hlt
push
and
inc
fwait
sub
cld
mov
pop
ja
cmpsb
aas
pop
jge
mull
test
das
inc
xchg
dec
mov
push
out
pop
push
rcrb
jbe
xchg
cli
ret
addr16
jg
adc
xor
jmp
push
sbb
test
out
loopne
ret
neg
fdivs
imul
mov
xor
das
in
jg
fisubrl
stos
lret
fndisi(8087
enter
in
cld
xor
inc
out
xorl
shll
mov
and
pop
lahf
in
ja
or
je
inc
mov
and
inc
std
pop
shl
and
adc
mov
shll
jmp
je
in
lret
dec
lea
mov
aam
je
cmp
adc
iret
in
int3
sub
lods
ror
sti
xchg
sbb
aam
pop
xor
sbb
ficompl
push
int3
out
insl
test
mov
xchg
cmp
test
mov
ds
mov
cmp
mov
in
xor
loope
mov
mov
cli
lret
jno
das
in
mov
sub
nop
dec
sbb
adc
inc
mov
xchg
xor
pop
pop
jge
mov
orb
pop
sbb
lds
jmp
aas
fcmovnb
ret
outsl
adc
jmp
fistpl
mov
jb
test
mov
shrb
add
int3
adc
ljmp
cmp
rcl
ret
fiaddl
rorb
push
xor
cltd
pushf
scas
orb
lret
mov
cwtl
ret
popa
mov
cs
rcr
loope
out
ror
sbb
leave
mov
pop
push
mov
jbe
dec
jne
sbb
out
mov
mov
dec
sbb
sub
xchg
mov
adc
repz
adc
aam
fcmovnbe
popf
push
jecxz
hlt
push
xchg
xor
mov
loope
sub
pop
xchg
out
lret
pop
aam
fwait
or
shrl
movsl
xlat
inc
cs
fisttpl
inc
jp
fldenv
mov
sbb
fiaddl
mov
fistl
mov
adc
fiadds
sub
lret
xor
jmp
lods
scas
xor
adc
stc
sbb
lea
test
rolb
fsubrl
mov
mov
adc
jno
aam
fimull
dec
rcl
push
out
jecxz
mov
xchg
ljmp
ret
loope
in
pop
mov
or
sub
jecxz
or
out
push
lahf
fsubrl
cmpsb
shll
js
dec
xchg
jge
push
inc
movsl
sub
out
mov
cld
fistl
ret
testb
imul
into
jmp
adc
cmpsl
fdivl
push
dec
cmp
out
call
mov
repz
mov
mov
add
inc
pop
inc
adc
stc
cmc
ljmp
cmp
jmp
adc
les
mov
shrb
sbb
ret
pop
cmpsb
ljmp
adc
loopne
daa
push
jno
loope
ljmp
sbb
xchg
fcoml
icebp
lds
inc
mov
mov
filds
dec
xchg
sub
jecxz
popa
mov
inc
inc
and
cmpl
lds
loope
cmp
pop
or
xchg
rorb
fwait
cmp
or
and
enter
cli
mov
xchg
out
inc
loopne
push
or
mov
dec
pop
sbb
arpl
lods
inc
int
bound
icebp
inc
cmp
mov
fldcw
mov
out
in
jno
lahf
mov
aas
mov
pop
in
and
adc
inc
repz
rcll
xor
loopne
imul
scas
inc
imul
cmc
fmuls
and
imul
sub
clc
dec
cltd
aam
fistl
push
pop
jb
lret
mov
adc
dec
insl
movsl
test
outsb
in
loopne
xchg
pop
jns
xor
test
in
js
out
lret
into
inc
pop
int
loop
leave
jno
mov
push
pop
outsl
adc
push
roll
xchg
and
xor
imul
bnd
dec
lock
fsubl
sti
mov
int
fistl
cmp
sbb
and
cmp
fsubrl
daa
cmpsl
aas
fs
fsub
imul
or
jno
and
jecxz
or
std
aad
call
repz
adc
dec
lcall
xchg
int
jecxz
pop
mov
cwtl
mov
mov
mov
jo
sbb
dec
or
out
and
jns
cmpsb
cmp
loopne
imul
lcall
xor
pop
pop
mov
hlt
cmp
aaa
cmp
cmp
mov
aad
test
movsl
jnp
testb
adc
cmp
ret
fwait
cmp
aam
std
pop
adc
lock
repz
insb
insb
add
outsb
jne
mov
fwait
mov
sbb
sbb
ljmp
and
or
jmp
cmp
fistpll
or
xchg
leave
jae
aaa
sub
or
jmp
add
mov
dec
cmpsl
add
orl
ja
les
mov
jp
xchg
inc
inc
int3
cmpsb
pop
movl
mov
out
and
outsb
dec
jae
ret
mov
pop
adc
shlb
sbb
inc
adc
loope
jg
mov
mov
jmp
dec
std
sbb
clc
mov
imul
mov
faddp
jg
ret
mov
ror
adc
adc
shll
add
sbb
xchg
pop
aam
push
ja
es
jmp
sub
jg
pop
std
cld
adc
mov
push
mov
mov
aas
int
jecxz
sbb
fwait
sbb
dec
sub
stos
xchg
xor
push
cld
pushf
inc
sarb
jnp
mov
jp
cmp
in
leave
adc
jecxz
ret
jmp
lea
idivl
ret
out
mov
inc
int3
scas
jmp
out
add
dec
in
insl
mov
cmp
int
sbb
xor
imul
fimull
push
in
aaa
mov
sub
mov
ret
or
pop
inc
jb
fisubs
repz
xchg
push
gs
scas
cmp
jmp
mov
cmp
push
jmp
and
mov
xchg
cli
int3
push
lock
mov
iret
int
mov
ljmp
out
jecxz
dec
dec
les
insb
mov
xlat
mov
mov
test
mov
aaa
fdiv
xchg
mov
js
push
in
shr
jb
subb
or
add
aad
xor
push
std
jns
ss
int
sbbl
mov
daa
mov
xchg
lret
into
in
insb
jg
iret
xchg
xor
lret
ret
mov
popf
jmp
xor
mov
icebp
inc
fcom
ss
cmpsl
sub
jne
imul
outsl
mov
call
add
adc
and
mov
or
inc
fisubrs
pop
and
sbb
out
pop
mov
sarl
out
fnstsw
sub
int
sbb
adc
inc
sbb
inc
ret
jp
mov
lods
adc
movsl
mov
lret
xchg
and
inc
inc
cmpsl
jne
negl
lds
in
imul
pop
sarl
addr16
inc
clc
addr16
sbb
roll
sbb
cmp
popf
jns
sbb
mov
jle
call
lds
sub
and
jl
dec
pop
xchg
addl
fnsetpm(287
cs
pushf
xchg
pushf
mov
test
mov
inc
inc
rorl
rcll
inc
loope
dec
jae
pop
nop
mov
pop
fists
sbbl
cmc
idivb
scas
adc
jnp
ja
mov
adc
pop
mov
scas
jg
jecxz
or
fs
xor
push
lds
pop
shl
xlat
rcll
inc
std
gs
xlat
in
pop
leave
push
jecxz
stos
cmp
mov
ss
sub
inc
mov
into
shl
mov
or
xor
inc
aaa
push
fdivl
and
jns
jae
xor
xor
jmp
or
push
cli
in
aas
test
inc
in
and
cli
add
pop
aaa
add
in
cld
xchg
sub
sbb
xor
push
or
das
mulb
mov
andnps
add
nop
icebp
jnp
in
mov
das
cmp
pop
pusha
stos
dec
test
sbb
test
jge
out
ja
xchg
je
test
test
fnstenv
test
mov
dec
cltd
cmp
inc
inc
pop
xor
jl
push
aaa
decb
jmp
cmp
mov
mov
in
sahf
in
pop
je
mov
clc
mov
pop
es
sub
mul
add
pop
shll
f2xm1
lea
dec
jo
xorb
aas
jge
cmpsb
es
mov
jg
ljmp
fldcw
sbb
fildl
add
pop
xor
imul
and
pop
scas
xchg
repz
hlt
bound
mov
out
cmp
push
fisubs
outsl
fidivrs
or
into
xchg
sti
push
in
movsbl
xchg
adc
lea
fimuls
mov
xor
data16
nop
fisubrl
or
pop
pop
add
ret
inc
adc
fs
pop
jns
and
pop
data16
jns
in
inc
cmp
pusha
je
jae
xor
mov
in
add
lock
daa
test
sahf
dec
cmp
aad
sbb
aas
aam
xchg
mov
push
out
cmp
fwait
cmpsb
add
aas
mov
dec
mov
mov
add
xchg
inc
xor
push
cld
jecxz
mov
push
mov
mov
pop
mov
in
fcomi
push
sbbb
adcl
imul
loopne
inc
adc
jno
in
out
xchg
cld
inc
pop
add
enter
fiaddl
gs
adc
mov
repnz
fcmovb
hlt
std
xor
aam
loop
fcompl
mov
testb
mov
mov
rcr
into
stos
inc
or
aas
dec
push
outsl
mov
pop
cli
dec
sbb
dec
pop
shll
aas
jae
daa
sbb
push
add
icebp
mov
mov
push
aas
arpl
in
pop
mov
pop
push
jb
negl
out
dec
push
adc
out
mov
arpl
ljmp
add
ret
scas
fcoml
ficoml
test
rcl
mov
int3
icebp
outsl
mov
fiadds
fisubl
push
fiaddl
insl
xlat
fcmove
pop
out
pop
lods
pop
mov
insb
stos
dec
test
push
mov
mov
mov
dec
rolb
lea
push
out
jns
hlt
jmp
or
and
shr
mov
push
sub
jle
mov
cmc
dec
lock
fsubrl
pop
stos
in
inc
xchg
adc
dec
mov
fmull
sti
mov
inc
les
dec
stc
movsb
lahf
stos
lea
jp
das
sbb
mov
les
xchg
sbb
adc
in
aam
adc
cltd
orb
inc
adc
cmp
in
roll
xchg
jecxz
lea
push
mov
xor
arpl
fcmove
inc
mov
fldpi
cmp
int
inc
lcall
arpl
jne
and
test
mov
xchg
popa
push
mov
add
movsb
push
mov
fld
imul
or
das
sub
push
fstps
adc
sub
inc
adc
repz
xchg
xchg
ror
cmc
push
bound
jecxz
call
test
mov
std
mov
jg
and
sbb
aad
out
cs
stos
inc
test
fdivl
in
pop
push
out
nop
es
or
pop
les
mov
popf
popl
adc
in
fisttps
cmpl
pop
jmp
mov
fcmovnb
lea
add
roll
jl
fcmovb
inc
dec
cmp
jl
adc
ret
cmp
sbb
mov
add
push
ljmp
addr16
and
lea
inc
adc
xchg
and
imul
imul
xor
or
idivl
mov
add
aam
mov
fdiv
pop
loop
xchg
in
sti
sbb
xor
fwait
ss
fs
lret
adc
fwait
pop
ds
cmc
addr16
mov
xchg
jg
imul
sub
lahf
pop
mov
jns
leave
fnstenv
inc
jecxz
or
scas
lods
iret
add
cmp
xlat
sbb
and
mov
imull
jmp
fisttps
lods
fstl
adc
push
add
jo
vucomisd
xor
pop
or
dec
pop
fdivrl
cltd
mov
push
inc
cltd
cmp
aas
xchg
mov
in
ret
xor
inc
push
faddl
sub
popf
pop
inc
sbb
out
stos
fwait
int3
inc
out
incb
dec
dec
out
xor
maskmovq
in
or
pop
mov
mov
roll
out
fstl
or
addb
sub
testl
test
push
xor
fldl
lahf
inc
popf
xor
aad
shr
adc
arpl
push
imul
or
sub
ret
rcrl
lret
enter
test
xorb
testb
das
mov
dec
sub
xchg
or
push
fcoms
mov
aad
pop
movsl
pop
aad
pop
mov
js
fstps
xor
leave
sub
repz
inc
inc
xor
shl
lds
fsubrl
mov
mov
mov
bound
or
jp
lea
lea
and
sti
lea
add
add
pushf
jle
jmp
and
mov
loopne
lds
xor
or
imul
sbb
and
je
ret
jecxz
push
cmpsl
mov
xchg
xor
outsl
dec
iret
push
mov
xchg
jmp
test
outsb
imul
in
cmp
inc
jg
icebp
push
insl
leave
sbb
mov
shlb
and
pop
mov
xchg
jge
adc
shlb
ret
je
or
out
daa
xchg
mov
leave
xchg
mov
inc
cmp
push
fst
fisubs
repz
push
ret
sub
mov
ficompl
scas
fbstp
pop
loopne
xor
mov
cwtl
xchg
mov
je
rolb
inc
stos
mov
repz
xor
xor
fmulp
loopne
stos
or
jg
xor
push
jns
outsb
frndint
scas
push
stos
loope
imul
in
xor
xchg
int
mov
lock
push
jg
stos
rcl
jbe
test
ja
dec
xchg
lods
jge
data16
nop
lock
enter
push
push
sbb
dec
outsl
jno
xchg
out
outsl
xor
add
stos
jl
fsts
mov
and
push
mov
into
dec
jno
push
les
mov
lds
inc
xchg
cmpsl
inc
in
cld
mov
iret
fsubp
sbb
jno
inc
addr16
cmpsl
stos
frstor
inc
ja
dec
mov
xchg
sub
jnp
popa
mov
fildl
adc
dec
jae
dec
inc
jmp
addl
mov
ret
fimuls
sbb
and
and
and
sbb
out
in
aam
out
xor
lret
iret
sbb
orb
stos
fisubrs
test
out
pop
gs
out
dec
mov
lea
xor
sbb
mov
mov
sbb
andl
mov
inc
jmp
lock
adc
dec
jo
dec
test
mov
mov
das
mov
push
cltd
cmp
sbb
movntq
out
pop
aam
jge
test
jnp
pop
pop
shll
ret
roll
pop
adc
popa
dec
xor
jp
das
cmc
fmul
xor
adc
mov
aad
ss
and
xor
ret
and
mov
js
jnp
int3
lods
outsb
jae
scas
push
fdiv
pop
mov
adc
sbb
movb
mov
out
xor
fistps
xchg
inc
jl
mov
leave
scas
mov
xorl
inc
lea
mov
xor
lds
adc
jecxz
cmp
fwait
sub
cmp
inc
pushf
inc
lock
mov
add
mov
rcr
cmp
popa
imul
xor
inc
dec
dec
fadds
push
jae
mov
lods
adc
xlat
dec
mov
repnz
sbb
push
pop
insl
imul
dec
jae
pop
cwtl
jnp
js
ds
pusha
cltd
push
ljmp
mov
mov
or
sbb
inc
dec
jnp
sbb
mov
sbb
push
mov
sub
sbb
sbb
rorl
push
xchg
or
adc
xchg
loopne
lods
push
xchg
popf
out
insb
jg
xor
jnp
mov
add
cli
push
xchg
popf
jo
pop
xorl
sbb
imul
dec
inc
push
popf
xchg
mov
pop
xor
jns
int
daa
out
ret
sbb
fistpll
insl
mov
mov
fsubr
jb
std
lods
cmpsb
adc
or
cli
fnsave
xchg
imul
jmp
mov
jo
loop
ss
inc
jne
mov
sbb
fiaddl
xor
ljmp
sbb
sarl
mov
negl
js
ret
pop
sub
enter
sub
mov
insb
loope
jne
push
out
and
pusha
sbb
jbe
and
push
xor
push
jp
test
cltd
or
insb
aam
jle
jns
and
test
icebp
mov
dec
dec
mov
xchg
arpl
sub
adc
cs
sbb
or
loope
inc
mov
ja
jno
fmull
adc
xchg
imul
mov
and
and
int
xchg
adc
jnp
out
xchg
dec
jae
dec
fidivl
fsubrs
pop
mov
stos
arpl
sbb
pushf
xchg
enter
xchg
mov
cmpsl
stos
fisttpll
inc
pop
mov
fistpll
nop
scas
lds
jl
cmp
xchg
lods
dec
call
sbb
lcall
xchg
pop
pop
adc
sarl
inc
enter
push
cmpsl
push
jmp
test
shl
mov
ja
cmovae
out
fmull
add
aaa
mov
adc
adc
cs
test
fs
or
or
cmp
imul
sbb
stos
aad
sbb
xchg
cld
mov
imul
xchg
xor
cltd
pop
cmpsb
int3
les
lret
dec
loope
shll
ss
jle
jb
rolb
pop
addr16
test
xor
imul
fs
arpl
cmpl
dec
loope
aad
xor
mov
clc
in
or
mov
in
jo
shlb
inc
inc
stos
dec
int3
sbb
int
dec
pop
pop
lods
xchg
mov
fstpt
xor
repz
inc
sub
xchg
out
push
fnstsw
imul
adc
and
js
xchg
rcr
repz
aad
adc
sbb
ss
dec
mov
aam
dec
repz
mov
push
inc
and
cmp
sub
sbb
sbb
lcall
test
setns
lret
dec
leave
outsb
call
xor
ret
sbb
dec
pop
dec
stos
xor
dec
fsubl
iret
pop
ds
push
xor
rdmsr
cmp
dec
addr16
popf
lret
xchg
xlat
mov
push
hlt
or
push
jge
fs
lods
mov
jg
add
cmpsb
lcall
pop
sub
mov
mov
jno
or
ret
xor
xchg
fwait
lahf
jmp
insb
ja
jp
jbe
pop
dec
or
xchg
xchg
and
dec
std
roll
push
ljmp
pop
fdivrl
or
insb
stos
stos
add
cmpsb
int
test
and
pop
lret
popa
xchg
int3
cs
cmp
aad
jbe
mov
jns
ljmp
insl
adc
and
imul
dec
dec
xor
adc
aaa
adc
ficoml
sahf
xor
mov
inc
leave
ja
es
mov
xor
lock
pop
icebp
ret
mov
sub
mov
out
mov
dec
xchg
xchg
pop
jp
mov
imul
lods
adc
pop
loop
mov
push
add
das
cmp
outsl
cmp
outsl
sbb
movsb
inc
sub
out
adc
jle
inc
dec
in
dec
mov
fildl
and
xchg
bound
mov
sti
pop
loopne
std
bound
sub
xchg
mov
xchg
imul
sbb
mov
cmpl
push
jmp
sbb
lea
aas
jl
mov
push
and
mov
cmpsl
imul
enter
dec
daa
or
push
outsl
fadd
insl
pop
pushf
dec
jns
or
subl
gs
in
inc
stos
mov
jmp
mov
shlb
xlat
fcom
xor
jmp
pop
dec
and
xor
xchg
inc
iret
mov
mov
pop
test
iret
aaa
mov
ljmp
mov
mov
sub
sarl
pop
scas
mov
mov
mov
mov
iret
dec
sbb
mulb
xchg
and
jmp
inc
add
fadds
adc
dec
sbb
cmp
and
icebp
in
mov
adc
out
fistps
in
jl
push
jns
enter
in
shl
lar
mov
leave
sbb
cmp
lret
nop
xchg
je
shll
cmpl
mov
insl
mov
icebp
arpl
inc
mov
cmp
sbb
add
es
sub
push
sub
movsb
cmp
call
xlat
ret
outsl
mov
fldt
pop
scas
inc
test
fldl
sub
mov
jmp
aas
mov
cmp
call
xchg
push
xor
nop
cld
xchg
jg
xchg
in
lahf
fincstp
dec
cltd
repz
cmp
lods
xchg
mov
cmc
arpl
inc
and
cmpsl
sub
mov
mov
or
aaa
xor
popa
inc
mov
inc
in
pop
xlat
sbb
dec
jb
daa
je
mov
lods
fcom
daa
jecxz
jo
in
fildl
dec
or
jnp
ficoml
inc
repz
jns
jecxz
lods
mov
sbb
imul
push
lret
cmc
adc
ss
inc
test
sub
out
jno
out
and
inc
mov
mov
push
and
insl
sti
daa
mov
icebp
mov
sub
xor
xchg
xchg
push
cs
mov
test
ret
cwtl
jnp
xor
dec
rcl
adc
insl
mov
loope
inc
jecxz
les
mov
fs
les
dec
lods
insb
or
pop
ret
push
call
push
mov
fwait
or
xchg
mov
icebp
xor
pop
push
or
mov
dec
movsb
int3
aaa
ret
gs
enter
test
hlt
pop
and
mov
lret
into
enter
push
xchg
bound
sbb
imul
rcll
lea
xor
pop
lcall
aad
fdivrl
and
mov
jmp
push
loopw
out
cmp
lahf
push
sub
push
hlt
cmp
lcall
daa
ret
pusha
shlb
test
sub
mov
in
or
nop
out
push
mov
mov
add
xlat
push
inc
add
inc
jge
clc
fcmovnu
mov
mov
and
pop
fldl
dec
repnz
mov
sbbb
pop
fstps
xchg
and
mov
pushf
and
mov
add
mov
clc
sbb
mov
pusha
fsubl
outsl
stos
xchg
rol
mov
mov
je
popa
ret
xor
lea
jnp
pop
mov
pop
std
inc
insl
imul
or
mov
cmp
inc
out
test
push
jecxz
xchg
in
testl
sbb
mov
mov
sarl
and
lods
loope
jg
inc
stos
pop
pushw
mulb
es
push
test
cwtl
lods
dec
sbb
pop
jns
jecxz
int
addb
add
inc
sub
dec
push
ror
dec
push
les
in
cs
jmp
sahf
jno
jmp
xlat
dec
jecxz
xchg
mov
pop
popa
xchg
nop
scas
and
loop
xchg
fists
or
jmp
sbb
int
lahf
sbb
mov
add
and
push
js
add
mov
pop
cmc
test
popa
sahf
cld
insl
xchg
out
enter
icebp
arpl
pslld
addr16
jns
and
lret
out
jl
call
dec
inc
cltd
and
mov
cmc
push
xchg
inc
ret
fs
das
pop
xchg
add
cmp
mov
mov
pop
or
push
mov
rcrb
fdivl
pop
xchg
loop
loop
ret
push
cmp
rol
mov
xor
ret
fbstp
loop
push
xor
mov
jmp
mov
jp
mov
or
push
in
out
inc
decb
stos
fisubrl
dec
jmp
cltd
adc
sti
cli
stc
pop
faddl
rorb
mov
adc
inc
arpl
ret
or
pop
out
mov
add
je
fs
xchg
xchg
cwtl
mov
test
add
pop
cli
xor
xchg
dec
fcmovnbe
ret
aas
outsl
or
and
push
sbb
mov
inc
fwait
rolb
jl
out
push
int
jno
enter
push
xor
mov
jge
mov
imul
and
inc
and
sbb
push
shl
mov
pop
repnz
ror
mov
mov
sarl
add
cmp
dec
mov
adcl
xor
repz
ljmp
outsl
cmpsl
mov
sbb
mov
lods
daa
popa
adc
mov
cmpsb
fcoms
loope
arpl
xchg
sub
inc
hlt
inc
adc
ss
push
fldcw
add
mov
scas
sbb
xchg
and
subl
aad
sbb
stos
push
aaa
mov
jg
pop
add
scas
in
sbb
ret
add
jl
cmp
loope
mov
shrl
inc
inc
jmp
lahf
pop
cmpsb
andl
or
bnd
dec
push
mov
nop
ss
xchg
mov
sahf
inc
xchg
stos
fisubl
sub
in
arpl
mov
xorb
cld
xor
mov
fdivrs
mov
lods
in
and
xchg
mov
xchg
xor
push
xor
xchg
dec
inc
fwait
xchg
cmpsb
imul
sbb
jmp
sti
pop
adc
push
cmp
xorb
xor
cmp
out
mov
ret
pop
gs
imul
fldenv
jns
nop
lods
push
jne
sbb
ljmp
ret
pop
bsf
lea
xor
movb
js
sub
adc
add
jge
xchg
sahf
and
and
or
cmp
xor
sbb
jns
xchg
lea
lds
dec
jecxz
addb
push
dec
cmp
sbb
xor
cmp
inc
cltd
sbb
in
sub
fistl
and
and
sti
jecxz
pop
test
fwait
xchg
lcall
sbb
imul
or
nop
sbb
add
push
subb
push
stos
xchg
add
mov
lock
mov
sub
jno
sbb
jno
inc
icebp
mov
mov
pushf
sarl
fcmovnbe
cmovs
mov
lcallw
xor
lea
pushf
pop
xor
cmp
xchg
sub
push
jle
xchg
push
jecxz
cmp
add
cltd
test
and
insl
je
sub
or
gs
push
subb
out
mov
icebp
mov
sub
cmpsb
sbb
mov
hlt
enter
loop
mov
xor
jg
enter
jae
rol
adc
shll
xor
or
incl
imul
test
jecxz
fcoml
popa
and
dec
sbb
and
push
pop
loopne
aam
repz
inc
rolb
fwait
jns
nop
xchg
add
pop
cld
adc
pop
cmpsb
push
sahf
cmp
or
gs
push
insl
jnp
jae
les
fnstsw
mov
inc
lds
mov
inc
arpl
fcoml
and
call
mov
jno
ret
les
icebp
popa
repz
lods
icebp
int3
sarl
push
stc
push
cld
sub
add
adc
scas
inc
test
cmp
insl
sbb
inc
sub
sahf
in
fildll
mov
sbb
stos
out
movb
inc
jp
jge
popf
and
dec
sub
pop
stc
test
pop
fnstenv
dec
xlat
sbb
jo
cwtl
push
mov
dec
pop
dec
cld
fsubr
sti
in
nop
sahf
call
dec
fwait
jno
roll
xorb
xchg
xor
iret
sub
mov
subl
inc
sub
and
cs
loop
sbb
ffree
mov
cmp
sti
adc
pop
fbld
in
mov
iret
loop
xchg
fidivl
inc
daa
pop
mov
fnsave
ret
ret
inc
out
push
inc
in
add
stc
lods
sbb
mov
in
cltd
int3
sbb
jb
add
xchg
fnsave
shr
fdivr
mov
push
mov
sbb
bound
pop
faddl
adc
iret
shlb
inc
fnop
shr
mov
adc
pop
jp
pop
ret
jnp
les
adc
loop
aam
dec
lret
shll
xchg
xor
dec
ficompl
push
jnp
stc
sarb
pop
hlt
xor
cmp
push
imul
cltd
pushf
and
ss
addr16
cmpsl
dec
aam
adc
in
popa
inc
arpl
cmp
push
ret
mov
pop
mov
dec
xor
mov
out
lods
cmp
mov
xchg
in
or
arpl
cli
adcb
fsubr
imul
push
out
int3
call
not
out
lods
into
rcl
add
repz
push
jno
fst
and
inc
mov
jb
ret
cmc
sbbb
adc
sub
jns
mov
jecxz
and
sub
push
jecxz
inc
rol
mov
cli
pop
jg
xchg
jmp
dec
jo
out
sbb
je
and
cmpsl
addr16
int3
cmp
and
fildll
push
fucom
les
sbb
pop
adc
insl
repnz
sar
jecxz
jg
out
popf
pop
pop
sbb
cs
mov
jg
cmp
dec
ret
mov
xchg
push
sbb
rcll
mov
lahf
push
sti
jne
sbb
dec
fwait
mov
jmp
rcr
mov
insb
int
fstl
mov
out
std
cltd
xlat
stc
dec
fs
jecxz
ret
jg
inc
xlat
enter
std
sbb
es
dec
pop
aaa
inc
imul
pop
mov
cmp
add
xor
cmp
mov
data16
imul
aas
imul
pop
xorl
add
insl
movsb
sarl
pop
subl
lea
push
into
sbb
faddl
sub
adc
xchg
sub
negl
sbb
cmpsl
xstore-rng
cmpsl
inc
sub
adcb
sti
mov
cmpsl
pop
cmpb
mov
xlat
dec
ret
lds
fstps
jmp
add
popl
ret
mov
mov
loope
std
jp
sarl
popl
push
inc
sub
inc
xchg
imul
popf
fwait
les
and
div
in
pop
inc
xchg
jns
pop
adc
push
dec
and
add
adc
shlb
cmp
lret
rcrl
mov
out
adc
jo
test
sub
ret
or
leave
fisttpl
xor
xchg
rcrl
inc
lret
fstpl
dec
pop
test
sub
cmp
mov
rcl
mov
ja
ja
jmp
mov
jnp
or
sbb
movsl
ret
xor
push
dec
test
mov
mov
scas
mov
pusha
xchg
pop
aas
pop
jg
mov
sbb
in
imul
jecxz
in
sub
sbb
sub
jnp
fsubl
orl
inc
inc
inc
xchg
sub
jb
aam
xchg
enter
jp
push
loopne
fiadds
mov
cmp
inc
sub
insb
xchg
out
js
dec
sub
iret
mov
xchg
inc
int3
inc
fs
out
push
sub
add
dec
fidivl
jmp
and
jo
jmp
das
fwait
or
mov
cld
pop
lods
in
adc
pop
icebp
ljmp
outsl
repz
repz
fldenv
mov
in
pop
sub
push
loop
ljmp
lock
rclb
lods
cltd
addr16
icebp
mov
aaa
lret
in
jnp
lea
daa
hlt
testl
mov
std
dec
mov
cwtl
push
cld
cli
adc
outsl
push
fisubrl
mov
inc
and
adc
cmp
in
outsl
pop
iret
sarb
sbb
mov
mov
xor
fldenv
adc
jecxz
pop
dec
sbb
int
sbb
adcl
fwait
test
fcomps
push
mov
jno
dec
les
mov
sbb
bound
stos
fwait
pop
jmp
jmp
in
lahf
adc
pusha
and
push
fs
fmul
test
stos
popf
stos
shrl
in
inc
out
cmp
fidivs
inc
mov
fs
and
xchg
inc
idivb
fwait
lods
fisubl
jns
sbb
in
sub
es
imul
mov
add
orb
lea
pushw
fdivrp
aas
jns
int3
mov
hlt
fstpt
orl
push
ds
sbb
cmpsl
and
mov
dec
inc
mul
fsubrl
mov
pop
xchg
shlb
movsb
xchg
and
insl
dec
cmpsl
in
sbb
fwait
sbb
test
ret
mov
into
fdivl
pop
xor
fldenv
fsubrl
mov
inc
mov
rorb
lret
lret
lds
fwait
xorl
mov
leave
or
mov
push
push
add
mov
push
inc
repz
pop
scas
loope
or
lods
xchg
fstl
lret
xchg
fwait
sbb
lods
xor
dec
sbb
sahf
xor
rcl
cld
mov
xchg
push
imul
adc
add
insb
lea
cli
cmpb
sub
test
xor
faddl
fcmovu
inc
cmp
addr16
jmp
xor
dec
mov
jp
xor
movsb
or
mov
loope
in
adc
inc
cmc
dec
sbb
out
gs
sub
or
in
ror
cmp
cmpsl
out
inc
ret
dec
pop
in
out
mov
out
nop
repnz
in
dec
test
jecxz
addl
mov
in
out
xlat
lock
pushf
int
ss
mov
xchg
icebp
fwait
xor
mov
xchg
arpl
xor
adc
insl
mov
addb
jecxz
jmp
pop
out
xor
pop
jno
dec
jo
scas
test
int3
insb
lret
popa
and
pop
cmpsl
cmp
push
mov
inc
or
push
mov
cmpsl
imull
fildl
sarl
and
dec
sbb
inc
mov
out
jb
mov
mov
mov
pop
inc
fcomp
pop
lret
repz
or
mov
mov
loop
push
adc
std
in
scas
jp
xor
pop
jo
push
mov
movsb
jl
lods
or
cmp
mov
jnp
fdivp
repnz
adc
adc
jle
insl
jae
mov
repz
sub
aad
ss
call
fwait
iret
dec
es
sub
rcrb
jmp
pop
and
test
icebp
dec
jno
mov
push
and
outsl
sub
push
loope
leave
iret
xrelease
cmp
mov
int3
or
cwtl
add
pushf
pop
sbb
mov
push
dec
cs
jmp
cmp
fwait
mov
in
int3
pop
sbb
mov
xchg
test
jnp
sub
mov
lock
lahf
out
fcmovb
add
sbb
xor
inc
jecxz
movsl
inc
mov
fildll
es
lea
push
scas
push
ss
fs
aas
mov
pop
test
lods
mov
mov
in
hlt
mov
push
inc
xchg
pop
xor
jb
leave
inc
lret
das
ficompl
in
in
xlat
jmp
clc
les
inc
sbb
dec
sbb
inc
or
leave
and
sbb
push
fldenv
pop
cmp
fs
xchg
mov
scas
mov
inc
sti
dec
dec
lahf
dec
stc
mov
xor
cmp
ret
aam
mov
ds
push
cmp
push
pop
pop
addr16
pop
cmp
push
loopne
imull
sub
xchg
add
out
cmp
andb
addr16
jne
push
fbstp
jp
ss
es
adc
or
insb
pop
scas
mov
cmp
addr16
mov
inc
int3
cltd
adc
sti
mov
inc
ja
cld
push
mov
leave
fs
adc
sbb
dec
aam
ret
aam
cltd
orb
push
push
jl
jp
jne
mov
push
sti
push
ret
mov
leave
push
mov
out
or
lods
stos
fcomp
int3
pop
shll
out
dec
in
addr16
test
mov
popa
and
xor
outsb
jle
out
push
shrb
fstps
mov
jbe
mov
jmp
sub
dec
es
or
rcll
leave
sbb
pop
and
aas
pop
shrb
movsl
sbb
pop
out
adc
fwait
movsl
mov
repz
inc
outsb
popa
imul
mov
dec
lea
xchg
sarb
ja
xchg
xorl
test
xlat
or
xor
out
sub
scas
jp
jno
jne
lds
sbb
sbb
in
stos
xor
pushw
gs
pop
jg
xor
mov
jg
mov
push
jae
lret
pop
faddl
clc
rcr
pop
adc
xbegin
lcall
adc
sbb
inc
aas
push
push
imul
filds
cmpsb
ljmp
loopne
in
data16
hlt
or
and
out
rcll
shll
out
fcomps
mov
loop
cmpsl
addr16
jecxz
das
jae
dec
sti
addr16
jns
mov
imul
pop
xchg
cwtl
test
inc
cwtl
sub
pop
mov
sbb
aas
jmp
push
lea
jmp
sbb
jbe
andl
ror
inc
stos
jmp
imul
mov
icebp
mov
aas
rol
loopne
cmp
sbb
cmp
wrmsr
imul
iret
sbb
loop
jecxz
cmpsb
cmc
loop
cli
dec
jecxz
dec
icebp
repz
lret
or
insl
xchg
shrl
jb
dec
or
sbb
rorb
lods
pop
add
cmpsb
test
dec
dec
cmp
arpl
decb
cli
pop
fldt
andl
sbb
xor
jne
pop
leave
inc
shll
mov
rcll
jmp
movb
dec
inc
test
sti
jnp
dec
xchg
imul
das
mov
daa
lahf
push
das
sti
xor
push
sbb
popf
inc
lds
imul
inc
inc
ret
addr16
mov
repnz
sub
enter
in
mov
xchg
cltd
adc
das
cmpsl
stos
adc
std
push
cli
sbb
xor
xor
or
and
lea
and
push
jae
mov
filds
sub
cld
or
dec
and
inc
jns
dec
xor
cmp
insl
mov
mov
xchg
stos
inc
mov
sbb
sbb
clc
adc
push
shrl
pop
inc
jo
aas
dec
push
ret
sar
mov
aaa
inc
push
sbb
loope
int
mov
in
fsubl
sbb
shrb
or
pop
pop
les
aaa
fistl
and
mov
sub
jbe
inc
stc
jecxz
in
sbb
sbb
lods
mov
pop
int3
xor
imul
repz
mov
iret
inc
ret
fwait
mov
mov
pushf
jnp
adc
loop
push
cwtl
and
xor
jecxz
das
hlt
jle
jecxz
cmp
adc
mov
int3
cmp
fwait
mov
adc
and
mov
mov
mov
dec
jb
or
inc
subl
and
add
loop
in
pop
mov
push
mov
and
dec
in
dec
mov
xlat
mov
add
mov
out
aaa
lret
dec
push
int3
dec
push
andl
inc
bound
jmp
push
xchg
scas
push
enter
in
jmp
pop
mov
test
jecxz
mov
pop
add
dec
cwtl
fmull
jnp
loopne
push
fldcw
loop
xacquire
push
jmp
rcr
fistl
sbb
and
xchg
xchg
aas
loope
xchg
popf
rcll
in
lcall
icebp
sub
mov
mov
mov
andl
lea
mov
jecxz
rcrl
popa
das
clc
enter
pushf
add
cmp
in
pop
vzeroupper
lea
out
fstpt
or
push
subl
lcall
fistpll
sbb
mov
push
mov
out
lods
or
fistpl
and
scas
dec
push
xor
cmp
and
arpl
xor
dec
cmp
shl
push
sub
popf
popa
xchg
cmp
in
insl
mov
in
int
push
mov
sub
inc
popa
int3
adc
pop
dec
pop
pop
call
xor
fcmovnbe
dec
dec
mov
push
mov
dec
and
xor
sub
push
aaa
push
cs
sub
adc
push
orl
pop
iret
sub
rcl
fsts
ret
call
rcr
push
mov
sub
pop
mov
dec
dec
mov
popa
pop
jae
mov
and
sti
xor
or
cmpsl
mov
aam
sarb
dec
xor
jnp
push
sub
int3
add
pop
jle
jmp
mov
sbb
jmp
push
pop
std
cmp
pop
inc
add
sbb
dec
dec
and
or
mov
fs
mov
mov
dec
mov
inc
pusha
cmp
movsl
clc
iret
dec
dec
pop
or
xchg
fnstcw
fidivs
ljmp
out
insb
scas
or
lcall
mov
push
enter
insl
dec
aad
and
adc
std
in
mov
pusha
push
mov
std
adc
fimull
out
lea
addr16
pop
mov
shrl
adc
stc
push
xor
jno
imul
inc
mov
jmp
scas
das
shrl
sbb
xlat
xorl
fs
inc
push
ljmp
rorl
lods
shll
aaa
loope
aad
mov
hlt
push
push
in
jns
mov
repz
in
mov
fimull
int3
rol
adc
rcrl
in
sbbl
cmp
pop
xor
jmp
mov
mov
jns
daa
ds
ljmp
jecxz
mov
mov
rcll
fstpl
fcmovnbe
daa
mov
mov
cmp
pop
pop
lret
xchg
imul
aas
mov
cs
mov
fwait
rolb
sti
rcr
xor
out
jae
dec
pop
rcr
inc
add
jno
mov
jl
je
jp
mov
or
or
or
es
iret
inc
xlat
enter
sub
shrl
xor
xor
sbb
lock
rcr
fwait
dec
push
fadd
sub
test
out
mov
loope
cmp
les
arpl
xorl
push
sbb
push
test
inc
lea
sub
dec
adc
sti
xchg
repz
dec
xor
jmp
mov
gs
inc
xor
insb
aad
mov
jge
pop
pushf
sbb
vsqrtpd
aad
cmc
sbb
aam
das
fildll
sub
repnz
loop
mov
inc
sub
stos
xchg
jnp
xor
or
push
jnp
addb
sub
xor
fstpl
or
jmp
decl
cmpsb
shld
and
cmp
fcmovnu
sbb
xor
cmp
into
addr16
rcrl
sbb
data16
mov
scas
dec
xor
ret
rcrb
dec
int
xlat
fcmovnu
jb
fs
das
aam
xchg
ljmp
not
mov
loope
push
pop
cmp
inc
sbb
stos
orl
aas
dec
add
daa
inc
mov
jle
xlat
mov
jmp
sbb
or
pop
push
mov
jne
test
fstps
mov
mov
lea
mov
fcom
insb
mov
or
and
add
sbb
or
push
aad
jnp
mov
sub
pop
jns
mov
xchg
pop
add
and
mov
push
mov
shll
addr16
jecxz
or
sti
popa
stos
jge
andb
fsts
mov
popf
loope
mov
lods
in
stc
jmp
sti
xor
inc
idivl
or
insb
xor
mov
fnstenv
test
inc
dec
mov
int
ret
inc
rorl
push
lock
dec
pop
and
mov
add
add
sti
push
lret
mov
lahf
and
stos
sahf
sub
sub
lock
xchg
cld
ret
jge
jmp
adc
sbb
mov
push
inc
sub
and
pushf
dec
lret
sbb
pop
mov
mov
mov
mov
sbb
mov
and
aam
cmc
out
jno
sub
add
xor
mov
xor
jle
fisttpll
test
mov
dec
or
test
int
arpl
imul
in
cltd
push
sbb
xchg
test
cmp
sar
sub
lcall
jae
jg
xchg
stos
daa
add
ret
inc
shll
add
mov
dec
inc
xor
push
push
jo
mov
and
xchg
xchg
and
int3
mov
jp
xlat
jl
cld
sub
imul
jnp
push
inc
mov
sbb
dec
lock
clc
fdivs
or
ficompl
int
ljmp
icebp
inc
testl
xchg
fldl
sbb
sahf
jl
insb
push
push
dec
dec
pop
pushf
in
push
sbb
xchg
out
adcl
pop
iret
adc
in
jb
call
ret
aad
cmp
popa
dec
sub
push
fldenv
out
pop
addl
sahf
xchg
or
add
rolb
push
cltd
add
pop
mov
loopne
push
in
divb
mov
push
addr16
sbb
les
mov
inc
cmp
repnz
in
and
xchg
mov
sbb
mov
cmp
out
pop
fcoms
sub
mov
mov
fsubrl
inc
fildll
into
or
or
mov
cmp
sub
dec
jo
out
and
cmp
push
xchg
xchg
mov
or
fidivs
sbb
rolb
mov
pusha
pop
addr16
test
lods
and
inc
pusha
aad
jecxz
popl
stos
insb
mov
ja
imul
sub
pop
and
int
sub
xchg
ret
imul
outsl
xor
imul
roll
pop
cmpl
jmp
cmp
lret
jmp
push
dec
lret
ret
pop
sbb
jnp
jns
mov
inc
out
adc
inc
and
ror
das
dec
xor
mov
adc
adc
adc
iret
mov
fcmovne
xor
ret
enter
dec
cmpsl
dec
and
push
jmp
mov
repz
xor
std
shll
cmp
sub
cmp
jge
pop
lds
mov
das
xchg
subl
scas
ds
ror
push
xor
mov
es
fscale
ja
jnp
dec
and
cmp
decb
mov
add
cmp
add
out
push
int3
pop
aas
jmp
les
lret
sbbb
pop
jno
cltd
insb
mov
and
inc
iret
int
push
jbe
sbb
insb
pusha
fucomi
push
outsl
push
fdivrl
pop
mov
mov
inc
repz
hlt
and
not
inc
ss
daa
fmulp
mov
sbb
jmp
pop
push
pusha
push
stos
xor
sarl
xor
mov
pop
dec
push
xor
fwait
sbb
and
jo
or
and
into
hlt
fdivl
xchg
mov
imul
fldl
orl
scas
sbb
sub
mov
adc
rcr
das
add
add
fmuls
in
test
add
out
mov
mov
cs
xor
ficompl
test
jl
push
orl
sbb
repnz
insl
mov
jecxz
sub
xor
fcmovnbe
push
ja
int
push
leave
mov
cltd
inc
push
inc
mov
pop
dec
scas
dec
fisubs
pop
js
xchg
jno
mov
sub
push
sbb
hlt
cli
mov
std
lcall
addr16
ds
int
popf
cmp
jno
mov
bound
out
out
cltd
push
mov
jnp
popa
inc
lea
repz
loope
fsubl
ss
mov
adc
stos
cmp
rcrl
dec
int
divl
xor
xor
test
fisubrl
gs
sbb
jb
shl
bound
mov
aas
movsb
xor
pop
inc
out
mov
sbb
leave
mov
sbb
dec
mov
jecxz
in
xor
loope
jae
aam
or
pop
sti
out
outsl
je
mov
cmp
and
sbb
jbe
ret
and
out
fdivrl
and
mov
inc
cmp
mov
fdivs
rcrb
out
subl
ret
loope
insb
cmp
aad
push
inc
xchg
xor
mov
pop
xchg
lahf
jmp
stos
pop
movb
imul
xor
lea
js
in
mov
inc
cmp
inc
repz
inc
xchg
adc
sbb
leave
aam
je
adc
mov
xor
dec
iret
in
ret
inc
rolb
jmp
ljmpw
rorb
pushf
xor
stos
fsts
jmp
roll
fisubrl
xorl
ret
and
and
lds
icebp
mov
cwtl
and
mov
pop
mov
and
lock
hlt
aad
mov
xlat
and
in
rol
movsl
adc
sub
test
fdivs
or
fldt
popf
mov
in
pop
pop
lock
mov
mov
lods
push
fisttps
mov
loope
xor
loope
mov
cmp
pop
ss
aaa
sub
sub
jns
ret
sub
mov
das
mov
and
mov
cmp
std
or
sbb
into
sbb
adc
xor
mov
movsb
ret
and
xor
int3
adc
fistpl
push
cwtl
je
or
xor
test
dec
aad
xchg
flds
testb
or
push
insl
or
sbb
sub
out
push
mov
jmp
inc
adcl
push
push
mov
pop
cmp
outsl
bound
mov
xchg
or
xor
mov
xchg
aas
lds
addr16
sub
test
mov
fdivl
shrb
ret
data16
lea
insl
imul
adc
sub
aam
addb
inc
ja
loope
adc
jno
xor
xchg
jmp
inc
xor
and
jp
fldl
shl
negb
pop
dec
ja
lds
mov
rol
and
mov
dec
xlat
imul
popf
lret
scas
pop
loope
xor
fucomip
ror
sub
sbb
insl
pop
test
or
in
dec
aas
cmc
dec
push
xchg
cmp
repnz
push
aas
xchg
jns
imul
ljmp
movsb
imul
movsb
cmpsl
lds
call
xor
test
setnp
mov
add
adc
dec
movsb
out
or
or
fldenv
mov
int3
sar
out
mov
out
and
lock
lahf
imul
adc
mov
or
inc
jmp
cmp
es
sbb
dec
sbb
jae
sub
jle
lods
jp
or
dec
imul
ror
lret
out
vpor
int
sbb
sub
mov
jg
es
mov
cmc
test
pop
xchg
mov
fldcw
pop
xor
icebp
cmp
test
int
mov
adcl
stos
shl
pop
lret
rol
out
pop
mov
das
out
inc
insb
addr16
and
xlat
jmp
cmpsl
xlat
in
pop
mov
fbld
mov
addl
xchg
ljmp
inc
jne
in
jecxz
leave
dec
in
xchg
dec
addl
test
xor
pop
rcr
fdiv
ljmp
mov
hlt
cmp
lds
das
imulb
mov
movl
mov
xor
pop
mov
lret
pop
in
jle
stos
pop
imul
push
movsl
adc
dec
or
decb
addr16
mov
xor
mov
or
sbb
pop
cltd
ss
sti
lahf
leave
js
and
mov
cmp
aaa
fsubs
cmp
cmp
mov
pop
jle
jmp
cwtl
aam
jmp
sub
mov
and
fistpll
test
inc
jae
pop
jns
mov
mov
arpl
insl
push
cmc
xor
push
sub
xchg
xlat
cmpsb
fucomp
xchg
cmp
sti
imul
jno
aas
outsl
in
fidivl
movl
andb
dec
fsubl
xchg
cmp
pop
sbb
jno
gs
fbld
xchg
mov
pop
stos
shl
daa
sub
jecxz
ret
fcompp
imul
fsubp
pop
test
mov
mov
pop
or
add
imul
repz
loopne
cmpsl
sub
fidivl
push
xchg
mov
or
test
loopne
test
and
dec
dec
insl
mov
mov
testl
dec
cmp
inc
daa
test
xchg
roll
push
scas
sbbl
psrlq
gs
bound
imul
mov
loop
xchg
jbe
imul
pop
clc
lret
fistpl
pop
push
dec
ficoml
bound
ja
out
clc
ret
stos
aam
int
cld
and
repz
int3
gs
jne
hlt
pushf
pop
xchg
lahf
fcoml
insl
rolb
mov
dec
sub
jne
cmp
jne
and
das
in
cs
loopne
push
xchg
filds
pop
and
pop
dec
aas
adc
inc
js
loopne
add
testl
sub
lods
call
fisubl
ljmp
insl
sub
jmp
add
std
adc
mov
xor
mov
mov
mov
dec
lret
xchg
test
jge
rcr
aam
jae
insl
movsl
sbb
inc
lods
add
xor
imul
pop
jmp
dec
cltd
dec
inc
inc
das
stc
ljmp
jmp
cltd
mulb
je
inc
ror
hlt
xchg
daa
aam
jb
dec
clc
sub
fnstenv
mov
dec
shll
aam
jmp
imul
mov
lret
mov
xchg
les
shlb
dec
jecxz
mov
ret
rcll
inc
insb
pop
scas
cmp
pusha
scas
bound
mov
xlat
aas
stos
repnz
shrl
push
loopne
ret
sub
inc
or
fdivrs
fsub
or
mov
test
fisttpll
lahf
xor
mov
and
repnz
in
inc
and
mov
call
in
addr16
imul
xchg
ljmp
or
icebp
mov
je
cmp
sub
xchg
push
push
fbstp
lods
shrl
pop
in
and
pop
subl
add
or
push
cmp
and
in
in
dec
sbb
out
adc
sbb
fdivrs
and
pop
xchg
jmp
mov
call
call
pop
cli
scas
pop
sti
inc
jns
gs
jge
arpl
stos
sbb
test
jecxz
enter
sbb
aam
icebp
std
add
popf
repz
xchg
jmp
adc
out
push
mov
stos
mov
test
and
jg
xchg
repz
add
leave
fwait
and
push
xlat
mov
xchg
dec
and
sbb
xchg
xor
in
add
mov
stos
pop
fmull
fdivrs
push
pop
ret
cld
cmc
outsb
xor
mov
mov
fsubl
xchg
out
sbbb
sbb
fnstcw
inc
es
sbb
or
add
mov
loop
push
int3
insl
aas
pop
aaa
mov
cmc
or
fdivl
je
pop
dec
sahf
ret
lds
mov
push
movsb
rcrl
pop
bound
mov
repz
addb
mov
loop
imul
or
iret
jecxz
call
cltd
insl
dec
xchg
mov
xchg
push
push
push
jmp
int3
cmc
dec
inc
scas
xchg
sub
sahf
mov
jno
pusha
jl
adc
aas
jne
movsb
rorb
dec
adc
mov
and
sub
xor
das
iret
jle
dec
sbb
jno
or
pusha
pop
mov
in
scas
jmp
cmc
sti
and
mov
fists
adc
testl
cltd
fldenv
push
dec
jecxz
add
pop
int
jl
dec
imul
push
mov
bound
sbb
addr16
and
sub
push
pop
popa
lcall
mov
adc
cmp
insb
sbb
xchg
cmp
sarb
into
sbb
sarb
cmp
jmp
jl
ret
sarb
mov
clc
adc
dec
sahf
push
xchg
dec
int
stos
mov
fucom
ljmp
lods
subb
leave
push
cwtl
stos
lret
push
inc
dec
dec
and
scas
inc
sub
pop
dec
sbb
jo
lret
out
sbb
shll
dec
pop
arpl
sbb
movsl
cmpsl
in
fcoml
jns
lods
push
popa
xorl
jmp
pop
repz
and
adc
sbbl
xor
push
jo
mov
mov
arpl
pop
cmp
push
stos
andb
xchg
xchg
and
and
cs
pop
pop
cwtl
faddl
push
das
cld
inc
jnp
into
and
adc
mov
xor
push
and
jb
add
cltd
dec
mov
out
xchg
stos
and
dec
pop
das
ret
dec
fmul
sub
cli
jmp
dec
pop
sbb
mov
push
jl
scas
lods
push
lods
jmp
inc
or
or
jl
ds
je
jnp
movsl
fwait
leave
push
lock
cwtl
cltd
jl
pushf
xchg
sbb
mov
dec
imul
and
sub
movsl
sbb
mov
sti
pop
cmpb
out
and
add
sbb
adc
inc
mov
jnp
int
addr16
clc
insb
je
ljmp
repnz
arpl
pop
push
pop
push
fstps
pop
aam
iret
fistpll
add
std
jnp
rcrl
adc
jb
dec
pop
pop
jmp
pop
shlb
aas
fdivs
cmp
enter
iret
sub
jle
fwait
sbb
cltd
mov
outsb
cmp
xor
jmp
fidivrl
inc
sbb
inc
std
xor
jge
fnsave
inc
xor
add
sbb
push
sbb
push
aad
jle
inc
sbb
or
mov
pop
and
insb
add
inc
loop
popa
xlat
in
scas
pop
mov
xchg
in
cmp
lcall
ret
repz
mov
call
sbb
ds
ret
pushf
iret
ret
mov
mov
mov
imul
sbb
pop
sti
cmp
iret
push
or
xchg
inc
pusha
movsl
xor
xchg
cmpsb
lea
push
xor
adc
or
rorb
xor
daa
rcrb
lret
ret
lds
sbb
xor
pop
pop
repnz
std
mov
subb
mov
xchg
orb
xchg
xchg
sbb
inc
fwait
or
into
jne
mulb
popa
and
sub
add
push
inc
int
sti
addr16
jl
shrl
xor
and
inc
jecxz
mov
push
dec
shll
inc
adc
ret
fs
adc
loopne
xchg
fcmove
sbb
nop
or
xchg
xlat
das
sarl
out
pop
lods
cld
xorl
arpl
sbbl
push
aas
out
sbb
mov
mov
jecxz
xchg
xor
xchg
push
fcmovnbe
adc
pop
xor
jns
in
jmp
xchg
aam
les
aas
xor
jnp
sarl
sarl
ret
ret
or
adc
sti
imul
int
stc
sbbl
lea
push
add
addr16
push
sbb
push
pop
and
imul
cltd
cli
pusha
jae
pop
icebp
xor
aaa
push
or
cmp
push
ficomps
add
inc
js
jb
pop
ja
shl
dec
fcmovu
sahf
sbb
add
jg
stos
lret
loopne
mov
mov
xor
mov
fdivrl
lret
xlat
push
ret
sahf
mov
nop
add
into
bound
dec
daa
sti
xor
stos
jmp
xor
sti
shll
fcoml
and
xor
pop
sub
push
jp
mov
mov
xchg
sti
iret
dec
and
mov
ret
int
pop
fimuls
call
call
lock
dec
andl
xchg
adc
fbstp
lds
iret
push
pop
call
xor
jge
dec
aam
pop
or
sub
push
stos
xor
xor
leave
sti
sub
scas
out
push
jne
or
mov
ret
inc
sbb
imul
fdivrl
scas
sub
test
popf
loop
rolb
es
or
fwait
mov
loope
movsb
jns
repnz
dec
cmp
inc
ficompl
or
push
sbb
push
jl
xor
ja
pop
pop
ret
xchg
gs
dec
aad
scas
repz
in
pop
mov
push
rcl
sub
dec
dec
les
and
xlat
fldenv
lret
add
movsl
xchg
xchg
lahf
and
sub
les
and
out
jnp
jge
fmuls
jp
jge
push
cli
dec
inc
sub
in
dec
mov
insl
push
out
fcmovb
lcall
fcoms
pop
push
out
enter
fisttps
inc
adc
or
sbb
arpl
mov
popa
out
jns
loope
sbb
push
adc
xchg
in
outsb
arpl
push
pusha
push
rolb
lcall
in
jecxz
mov
jne
fxch
js
lods
and
test
aam
or
pusha
popf
lods
fistpl
ljmp
cli
xchg
ljmp
scas
adc
mov
loope
mov
mov
scas
push
and
dec
push
leave
cltd
pop
shlb
aam
ljmp
pop
jecxz
in
dec
push
xchg
or
data16
cmpsl
in
mov
inc
out
dec
cmpsl
mov
lods
mov
pop
scas
sub
scas
test
push
out
or
dec
push
mov
insb
pop
sub
fistps
pop
imul
sbb
out
fadd
mov
mov
cs
ror
pop
and
mov
mov
adc
popa
sbb
add
dec
mov
sbb
cld
pop
mov
in
notb
shl
inc
std
insl
add
cmp
xchg
aad
mov
lcall
cmp
les
mov
dec
pop
mov
sub
pop
cmp
outsl
mov
out
test
adc
test
ret
inc
imul
loop
ret
in
pop
cld
call
test
jle
lods
sti
inc
ret
test
lods
cmpsl
xchg
xor
or
lcall
dec
inc
lahf
mov
iret
and
and
insb
ja
cmp
pop
int
inc
sbbb
das
out
jnp
push
mov
pop
lahf
in
orb
leave
jecxz
sbb
add
sub
fstpl
sub
loop
faddl
fimull
mov
addr16
push
movsl
fistpl
ret
fldt
in
add
fistl
jmp
sub
es
arpl
push
sbb
mov
mov
push
xchg
repz
shrb
mov
stos
rclb
enter
mov
inc
loope
shll
sbb
cmpsb
cltd
inc
dec
xlat
jecxz
outsl
sarl
outsl
inc
xchg
pop
pusha
lods
stos
lcall
in
mov
mov
sub
fnstcw
mov
dec
push
sub
cmp
xor
cmp
jecxz
movsl
xor
ljmp
jb
push
xchg
dec
ja
push
dec
stos
xor
push
mov
movb
shlb
cmpsb
arpl
mov
movsb
fxch
jne
push
addl
test
and
clc
out
jno
jg
adc
mov
jno
loope
xor
push
fwait
loopne
mov
cmp
sbb
lret
enter
test
inc
das
ret
pop
stos
pop
sub
lods
xchg
push
out
lea
scas
ja
popa
pop
dec
inc
ds
ret
sbb
fwait
cmp
jecxz
loop
xlat
fistpl
jecxz
inc
cmpsl
in
jp
cmp
test
push
movb
sysret
sbb
in
pop
inc
nop
mov
dec
push
int
scas
pop
dec
fs
or
sbb
int
xchg
lret
test
mov
addb
inc
into
lret
sbb
arpl
cmp
int3
ret
xor
or
outsl
dec
and
dec
cmp
aaa
cmp
mov
dec
mov
outsb
sbb
cmpsb
sbb
fs
test
xchg
adc
inc
mov
dec
jbe
mov
sub
xlat
nop
pop
loope
cwtl
fs
xchg
imul
sub
mov
jnp
jns
mov
cmp
js
ljmp
push
lods
fcmovu
xchg
fildll
xlat
pop
es
jl
push
push
lock
aam
add
jecxz
jae
cmp
xlat
in
in
push
jns
jnp
lcall
push
pop
sti
mov
jb
xchg
subb
ja
pusha
sti
insl
sar
scas
jp
sbb
jno
roll
jecxz
or
in
xlat
jecxz
in
sbb
fmull
mov
in
jle
push
or
xlat
pop
cmpsl
jecxz
cltd
cli
in
lret
jmp
addr16
inc
mov
fnstsw
xorl
pop
rcrl
or
jb
mov
add
push
cmc
inc
movsb
outsl
sbb
gs
cmp
je
jb
dec
fs
push
mov
jcxz
jnp
dec
fidivs
push
sub
mov
dec
testl
push
mov
mov
jecxz
divl
out
dec
repz
lods
and
cli
test
das
inc
dec
xor
mov
mov
bound
cmp
adc
test
dec
inc
scas
mov
lods
mov
dec
stc
imul
test
push
out
arpl
popf
jl
inc
imul
shl
out
cmp
jmp
fcmovbe
jecxz
xchg
popf
sti
test
dec
lock
stos
int
xlat
movsb
movsl
and
add
out
mov
push
mov
in
jecxz
cmpsb
fisttpl
jbe
fsub
mov
or
mov
fdivl
mov
mov
scas
mov
jl
imul
adc
dec
xor
fsubl
pop
jg
xor
dec
jl
data16
inc
arpl
mov
push
std
sti
dec
jae
adc
imul
in
pusha
jmp
dec
pop
mov
mov
xor
out
in
cltd
jp
pop
sbb
cmp
sbbb
xchg
mov
or
inc
jo
jnp
or
ja
stos
pop
insl
out
and
decb
out
pop
xor
sub
pop
cs
dec
add
and
mov
scas
loop
inc
jecxz
popa
jle
fimull
flds
bound
jle
inc
leave
in
shl
in
int
ret
les
shl
rcl
inc
mov
mov
sbb
xchg
push
imul
popa
push
sbb
pop
and
imul
das
and
push
xor
push
popf
int3
loopne,pt
pop
sbb
out
loopne
xor
inc
mov
imul
xorl
gs
or
and
mov
and
loope
fadds
into
cmp
jbe
push
pop
dec
mov
or
adc
fwait
inc
pop
lea
in
pop
sbb
xlat
in
popf
lret
js
dec
and
mov
pop
test
subb
in
out
test
sahf
gs
jae
inc
scas
popf
and
jb
mov
xlat
fcomps
mov
out
lea
jne
mov
fmull
cmpsb
mov
das
push
and
add
mov
mov
mov
subl
stos
out
lcall
and
fsts
xchg
mov
inc
push
leave
jmp
mov
xor
and
xor
sub
add
push
pop
js
fcomps
lock
pop
xor
push
lods
in
adc
pop
divl
loope
mov
addr16
fists
arpl
gs
xchg
pop
jb
add
mov
ja
sub
jbe
dec
or
pop
movsl
jmp
xchg
push
add
repnz
arpl
sbb
cmp
cltd
call
sub
inc
daa
popa
sub
les
aaa
cmpsb
mov
sbb
push
jmp
inc
cmp
pop
data16
xor
fldt
jns
jl
inc
xchg
pop
daa
inc
or
xor
fldcw
imul
aaa
and
push
jno
out
adc
test
stos
adc
mov
add
xchg
push
outsl
push
xchg
cltd
test
push
out
jno
xchg
rcr
icebp
subl
les
fwait
xchg
lret
cmp
inc
dec
mov
mov
bound
leave
in
cltd
fisubl
imul
sahf
aad
das
cmp
and
out
clc
js
jp
fistpl
call
mov
mov
bound
sub
in
cmp
leave
mov
loop
push
and
out
lds
scas
add
push
inc
test
roll
jl
daa
sub
out
loop
repz
xchg
dec
aas
add
push
int3
sub
sbb
sub
jb
xchg
pusha
ficompl
pop
jb
cli
xchg
fidivrs
popl
xchg
cmpsl
fnstcw
pop
lds
sbb
sarl
lret
clc
mov
icebp
fstp
arpl
jecxz
jg
sbb
mov
xorl
popa
arpl
hlt
imul
hlt
jne
push
out
add
enter
add
pop
mov
dec
test
fildll
add
imul
sub
popa
les
mov
mov
mov
adc
insl
cltd
adcb
pushf
cwtl
xchg
xchg
dec
mov
pop
add
int
pop
stc
fwait
insb
cmp
mov
mov
dec
stos
and
jo
sarl
mov
mov
arpl
mov
pop
leave
fcmovnu
push
ret
inc
imul
arpl
sub
xchg
icebp
mov
ret
pop
push
sub
insl
push
xor
stos
jb
andb
adc
lods
arpl
arpl
movsb
notb
jbe
sti
pop
sbb
inc
xor
inc
push
fisubrs
sub
pop
jae
scas
push
sahf
dec
aad
test
test
mov
adc
mov
js
pusha
mov
push
arpl
mov
jae
mov
add
push
mov
or
pop
shl
jne
pop
and
xor
inc
mov
sbb
jnp
stos
mov
or
lea
ljmp
or
xchg
shr
repz
aam
adc
fsts
and
mov
loop
adc
ret
sti
pop
jp
fs
gs
dec
pop
test
mov
inc
movsb
inc
ds
int
mov
shl
in
sub
inc
stc
and
fwait
mov
mov
test
frstor
lods
out
das
add
add
pop
dec
cs
mov
int3
nop
inc
and
ret
sbb
cwtl
pushf
lcall
cmovb
mov
add
mov
push
nop
incb
dec
mov
xchg
daa
out
arpl
sbb
inc
mov
imul
gs
std
out
and
cmp
insb
cmpsl
sar
arpl
xchg
jmp
dec
pop
cwtl
cmp
add
mov
pop
out
fstp
sbb
ret
lea
sbb
lds
pop
inc
in
roll
pop
cmp
dec
sbb
rol
mov
inc
lret
enter
and
add
push
mov
test
mov
mov
add
fstps
pop
xlat
fsub
xor
jne
out
outsl
and
js
sbb
xchg
das
cmp
imul
mov
xchg
add
repz
gs
mov
push
int
push
or
mov
shrl
push
mov
repz
dec
sbb
pop
adc
negb
stos
fdivrs
cmp
and
lock
inc
add
jle
and
inc
dec
fcmovnu
sub
popa
jne
mov
enter
scas
rcrb
not
mov
inc
fcom
sbb
push
in
pop
mov
pop
pop
cli
pushf
pop
inc
xchg
leave
outsl
jno
sbb
stos
arpl
in
mov
and
addr16
and
imul
sbb
or
hlt
inc
lds
es
add
xor
jmp
fistpl
outsl
or
or
and
popa
je
das
push
pop
jge
inc
sbb
xor
fisttpll
dec
leave
cmp
cmpl
adc
sbb
and
rolb
loop
xchg
jle
jle
les
pop
mov
jne
aas
repnz
aam
sti
out
mov
fs
movsb
mov
mov
mov
mov
jns
js
sbb
int
fdivr
jno
shll
lods
inc
in
mov
xchg
lea
cmpl
fs
add
pop
decb
sub
xchg
ljmp
fs
stos
aas
jmp
and
pop
fsubrl
xchg
and
mov
imul
pop
and
xor
push
pop
pop
repnz
loopne
or
adc
out
das
inc
aam
jns
mov
in
xchg
pop
xchg
jp
dec
xchg
or
mov
aam
cmp
pop
cmp
mov
popa
mov
jae
jecxz
test
rcll
ror
push
leave
fisubrl
cli
aas
imul
push
enter
inc
movsb
inc
je
push
push
and
iret
gs
mov
int
insl
add
lds
mov
sahf
loope
setb
fcompl
mov
rcr
das
pop
aad
rorl
fstpt
xchg
imulb
arpl
sub
and
xor
sub
fmull
leave
icebp
sbb
cmp
adc
cmp
cmp
cmp
push
int
sub
mov
dec
inc
mov
and
sbb
gs
dec
or
mov
arpl
scas
sti
and
mov
test
test
push
jmp
aad
jne
movsl
rcll
aam
ficoml
cmp
mov
mov
shll
mov
mov
scas
leave
cmpsl
out
iret
subb
ret
cmpsl
das
test
xlat
into
mov
dec
call
lret
pop
jg
and
mov
cld
push
les
lds
faddl
dec
test
and
and
mov
in
out
cmp
pop
and
sub
mov
into
lock
mov
out
loopne
mov
gs
fbstp
fwait
xchg
xchg
dec
jnp
insl
add
lea
adc
adc
jecxz
aad
sbb
mov
ja
mov
out
imul
out
jecxz
inc
adc
push
test
imul
ljmp
adc
jb
icebp
mov
icebp
xor
inc
out
mov
shl
pop
ret
test
jno
and
push
jnp
nop
push
hlt
mov
mov
sbb
fnstsw
dec
dec
sti
sbb
mov
cmpl
fnstenv
xchg
xor
mov
or
dec
add
mov
push
insb
inc
fmull
addr16
or
outsl
xchg
loopne
sub
fildl
xchg
add
xor
lcall
fcmovnbe
push
push
add
pop
lcall
xlat
sbb
imul
pop
rcl
sub
xchg
int3
dec
mov
pop
daa
pop
jae
les
aaa
cmp
fisubl
pop
dec
sbb
sbb
adc
adc
outsb
in
pop
mov
fstps
bound
fst
imul
mov
xchg
fimull
dec
pop
stc
jecxz
scas
mov
or
fcomip
xor
ficompl
push
sahf
xchg
insl
stos
ret
repnz
mov
add
test
pop
and
es
xlat
inc
pop
in
shr
sar
js
jl
jmp
popa
push
pop
lret
fwait
and
sbbl
dec
addr16
lock
mov
sbb
mov
jae
stc
idivb
add
xchg
nop
fdivl
xchg
ljmp
dec
jnp
xchg
nop
adc
jle
outsb
fdivrs
add
push
mov
testl
mov
push
rcr
ret
sub
lret
cwtl
out
mov
repz
pop
ret
jo
das
pop
sti
cli
addr16
and
fs
jnp
lods
popf
stos
pop
pop
jl
adc
jecxz
popf
mov
mov
sti
xchg
pop
push
arpl
jnp
inc
jae
faddl
jmp
sbb
arpl
jae
gs
popa
and
stos
mov
dec
je
sub
sbb
push
fwait
out
or
jmp
jge
and
ds
insl
gs
sbb
pcmpgtw
std
fsubrs
xor
xlat
dec
fwait
lcall
inc
sub
mov
orl
pop
popf
pop
xchg
std
mov
out
mov
push
and
jae
inc
rcll
icebp
and
xor
rcr
push
dec
xor
test
aam
pop
fsubs
insb
push
jno
inc
in
lcall
lea
cwtl
xchg
in
fisubrl
es
push
lret
imul
dec
xor
outsb
jecxz
imul
or
loop
lcall
rcrl
dec
and
fstl
faddl
sbb
lret
adc
inc
sub
sbb
mov
or
test
cmp
mov
pop
sbb
pushf
loope
cli
test
out
pop
test
repz
out
cmp
sbb
sub
xchg
and
hlt
jnp
push
ds
scas
rol
imul
push
iret
push
jg
cmp
imul
pop
push
ret
jns
fs
faddl
dec
int3
stos
shrl
or
roll
stos
mov
jns
push
push
in
or
adc
lds
push
rorl
push
push
sub
enter
repz
faddl
dec
xchg
adc
call
jne
inc
dec
fmuls
or
stos
repnz
outsb
pop
jmp
xchg
dec
xchg
arpl
insl
jmp
jbe
inc
fdiv
xor
pop
movsl
das
inc
les
loop
sbb
jecxz
leave
sti
and
cmp
mov
cmp
jae
add
adcl
je
mov
sbb
xor
enter
mov
or
xchg
ss
jl
jmp
jecxz
pop
adc
or
and
push
jmp
lcall
jg
mov
lock
cs
test
loopne
mov
jge
fstpl
add
pop
jp
sbb
dec
fs
cld
mov
stos
xor
in
push
push
mov
inc
cmp
ljmp
pop
jg
xchg
aam
int3
mov
add
outsl
repz
lods
sub
daa
cmp
sbbl
mov
dec
ss
sti
ret
mov
movb
xlat
sbb
out
repz
xor
insl
lret
out
sbb
mov
rorl
and
mov
sbb
adcb
push
popa
mov
mov
sub
dec
arpl
mov
mov
shl
ret
push
dec
mov
mov
push
sti
mov
mov
push
adc
repz
xchg
jmp
test
ja
xchg
cmpsl
mov
jno
inc
add
dec
mov
push
daa
fisubs
rclb
xchg
call
ja
mov
test
cld
cwtl
gs
out
je
out
sar
cmp
test
dec
jecxz
push
inc
sbb
iret
mov
arpl
bound
sbb
int
inc
mov
jmp
sbb
push
fmull
js
fcomps
jae
sbb
jne
sbb
mov
fmul
cmp
and
addr16
movsb
inc
es
cld
adc
inc
in
std
cmp
lret
mov
push
cmp
loope
test
dec
lods
stos
adc
dec
fsubl
dec
cmpsl
inc
push
bound
dec
movsb
aad
scas
fwait
leave
jmp
faddl
fistps
les
mov
inc
sub
sub
repz
and
sbb
fbld
hlt
inc
xchg
mov
mov
fwait
push
sahf
pop
push
ficomps
mov
test
mov
mov
int3
xchg
mov
outsb
cs
rorb
call
inc
xchg
xlat
incb
aam
xor
cmp
gs
mov
adc
jnp
dec
test
xchg
pop
mov
fidivrl
mov
outsl
sbb
add
hlt
jge
inc
mov
jmp
ret
pop
fwait
popa
in
cli
les
imul
jg
aas
xchg
dec
lds
out
adcl
mov
rep
push
fisubs
ret
cli
xor
mov
or
in
jno
loope
xchg
ret
inc
or
repnz
adc
jmp
shlb
in
stos
popa
jne
sub
and
in
sub
xor
pop
mov
pop
and
push
lds
pushf
sti
movl
faddl
adc
pushf
or
and
adc
and
rclb
dec
sbb
and
fsubrs
sub
push
stos
in
sahf
pop
fdivrl
stos
cwtl
xor
ret
mov
in
mov
dec
iret
push
add
push
ljmp
xchg
ljmp
loop
push
lahf
push
inc
lcall
push
jg
mov
in
test
xor
int3
mov
fildl
cmp
cld
jae
dec
inc
jne
iret
cli
sub
rolb
scas
daa
aam
push
mov
sbbl
cmp
xchg
mov
fistl
xor
inc
and
cmpsb
xor
or
push
pop
adc
icebp
jp
cmp
mov
ss
std
sbb
push
les
push
jmp
adc
xchg
mov
cltd
xor
dec
nop
adc
or
fiaddl
popa
cli
xchg
fcompl
sub
xchg
test
jg
sub
out
and
aad
scas
insl
pop
sbb
loopne
mov
inc
inc
dec
fcompl
pushf
mov
popf
dec
rcr
loop
incl
cli
cmp
xchg
lods
fldcw
add
rclb
int3
dec
push
addr16
push
test
mov
aam
cli
or
movsb
insl
and
dec
arpl
pop
inc
inc
pop
movsl
lcall
jge
sub
icebp
movsl
daa
lds
ds
dec
and
xor
popa
mov
cs
aam
mov
es
call
test
xor
adc
loop
scas
test
out
arpl
xor
int3
das
push
imul
mov
xor
push
test
push
iret
int
adc
das
leave
fdivl
in
movsl
xlat
fcomp
mov
ret
cltd
sbb
push
hlt
negb
pop
sbb
jecxz
repnz
jmp
inc
sti
pop
not
aam
xchg
push
mov
in
rcll
in
sbb
and
scas
sbb
loopne
mov
sbb
add
mov
dec
popf
or
mov
pop
ljmp
xchg
fdivrl
sub
jmp
and
adc
jno
lds
jbe
mov
ljmp
fidivrs
dec
mov
sub
lea
in
push
mov
dec
cld
cmpsl
sbb
pop
or
pop
out
scas
cli
jl
sbb
cmpsl
mov
cltd
inc
nop
push
and
adc
ficompl
adc
dec
ret
xchg
mov
jns
mov
cltd
xor
push
movsl
lods
dec
aam
pop
cld
xor
test
jl
jp
dec
in
outsl
mov
cmp
addr16
inc
lods
mov
mov
adc
xlat
add
rcrl
xor
pop
dec
int
leave
jl
cmp
movsl
dec
sbb
gs
lret
sahf
shlb
fwait
addr16
shl
jbe
pop
mov
push
mov
nop
cmp
out
add
xlat
aaa
xor
leave
adc
ljmp
call
jo
add
jg
jne
imul
push
sarl
jno
iret
scas
lret
cltd
jp
and
inc
ffreep
dec
mov
movsb
xchg
xor
popa
xchg
cmc
mov
xor
push
pop
pop
fdivrl
clc
dec
leave
dec
sbb
sti
jno
bound
sbb
das
ljmp
bound
xchg
sub
ret
or
jb
sbb
fsubp
xor
mov
stos
lret
in
rcrb
jecxz
inc
mov
dec
icebp
jb
popf
hlt
clc
dec
lea
in
push
mov
mov
out
dec
xchg
push
mov
pop
xor
inc
fwait
mov
dec
inc
jmp
dec
jmp
enter
jnp
sub
xor
jae
int
fwait
lea
pop
addb
inc
pop
mov
inc
test
imul
mov
dec
leave
pop
loopne
fwait
lods
xchg
jnp
aam
in
xor
popf
pop
mov
sbb
xchg
sahf
inc
cmp
push
int
loope
and
sbb
push
lods
stos
pop
dec
jne
faddl
and
xor
in
mov
das
lea
aas
ret
jp
jae
inc
fisttps
into
lret
jo
pop
mov
inc
mov
fdivrl
lds
ss
iret
jp
hlt
lcall
xor
dec
loopne
or
repz
push
cmc
loope
enter
push
fdiv
leave
cmp
mov
pop
pushf
inc
xor
std
xor
adc
mov
stos
fcoml
push
in
or
inc
cwtl
adc
push
sbb
das
xor
pop
pop
lods
fs
inc
mov
popa
jle
sub
les
sahf
xor
popf
lret
xlat
xor
mov
ret
divb
fdivr
in
or
imul
mov
aam
xor
cs
outsl
pop
sbb
xor
cmpl
test
mov
xchg
flds
xor
dec
test
int
rcl
bound
sbb
cmp
jne
adc
stos
jecxz
push
and
pop
sbb
xchg
repz
and
jbe
jp
mov
add
je
imul
and
ret
mov
stc
mov
test
fucom
pop
mov
sti
cltd
pop
orl
pop
sbb
sub
clc
orb
insl
mov
mov
int3
lock
pusha
js
call
xchg
dec
and
fmull
xor
add
movl
sub
sbb
pop
int3
or
push
adc
lahf
xlat
push
ret
fwait
jno
dec
ret
push
mov
sbb
sub
shrb
repz
ret
lea
xor
pop
xor
loop
pop
mov
incb
fwait
scas
mov
pop
fistl
mov
pop
fldcw
push
mov
int
sub
dec
fldt
xchg
fdivs
outsl
sbb
fcmovbe
fsubrp
test
fstps
and
loope
jecxz
mov
xor
les
test
push
lods
jns
sub
mov
xor
popa
and
ljmp
sbb
or
mov
subl
and
test
inc
xor
cltd
push
mov
xchg
and
loopne
cmp
lea
les
leave
daa
fidivs
add
pop
rcr
sbb
jae
or
jecxz
pop
test
sub
sbb
in
mov
loopne
cmpsl
cmp
sti
sbb
ja
loope
xchg
pop
mov
enter
push
insl
sub
mov
sub
clc
xor
stos
movsb
fcompl
fsts
cltd
das
dec
cmpsl
jnp
jmp
push
sub
lods
into
dec
pop
cltd
jo
mov
cmpsl
mov
dec
jb
ja
jg
adc
xor
cmpsb
push
cmpsl
pop
iret
fildl
jo
jg
mull
and
shl
adc
adc
movsl
jmp
inc
cltd
inc
out
cld
aad
ret
add
sbb
jg
xor
insl
jbe
stos
mov
lds
das
lds
pop
insl
mov
addr16
jns
mov
sarl
mov
push
cld
xchg
loopne
push
jns
pop
fwait
insl
inc
repz
std
jnp
mov
incb
loopne
shll
repnz
loop
lcall
inc
je
add
mov
xor
xchg
or
jne
mov
push
loop
test
cmp
cld
lret
and
cltd
jnp
xlat
xor
cmp
fwait
imul
gs
dec
or
pusha
aas
sbb
loope
xor
insl
js
xchg
aas
mov
stos
dec
xor
outsl
dec
and
or
mov
jmp
push
aad
inc
xchg
popa
fbld
jno
mov
outsl
xor
loopne
inc
call
js
fchs
lods
dec
xlat
push
xchg
push
xchg
in
push
stos
int
int
and
mov
jmp
ret
add
xchg
xor
daa
push
fs
xor
es
dec
xor
ret
jmp
jmp
inc
sbbl
addl
ds
int
jmp
test
sbb
gs
pop
mov
jne
push
std
sub
gs
mov
push
adc
add
insb
jno
les
sbb
inc
and
pop
icebp
cs
xchg
insl
jmp
aam
das
shll
rorl
adc
jbe
adc
ret
dec
in
les
inc
or
icebp
cmpsl
jmp
xchg
repnz
push
sbb
fdivr
aaa
cmpsb
outsb
fxch
push
int
inc
iret
dec
xor
xor
les
pushf
outsl
cs
or
arpl
movb
in
mov
cmp
enter
pop
xchg
ret
push
xchg
xor
sbb
push
lcall
imul
jl
test
addr16
mov
sub
jle
xor
xor
jnp
jno
repnz
inc
sbb
add
loopne
cmp
call
std
push
mov
aam
aam
mov
andl
aam
scas
ljmp
push
std
mov
out
and
test
mov
cmp
jne
jb
lea
inc
mov
jmp
xor
lods
xchg
sbb
dec
add
mov
adc
outsb
ja
nop
or
pop
outsl
pop
adc
cmpsb
mov
mov
fsubs
pop
jmp
icebp
adc
and
push
rolb
cmpsb
cmp
ficoms
xchg
fcoms
imul
fs
pop
arpl
lds
dec
cmpsl
mov
cmp
test
xor
std
jns
js
mov
sbbl
das
inc
mov
std
and
adc
mov
ljmp
pop
mov
inc
sub
rol
stc
push
sbb
pop
outsl
aas
jle
ja
xor
jno
sub
lds
or
int
mov
les
inc
xor
ja
cmp
jmp
pop
cmp
clc
adc
adc
push
pop
fcmovbe
imul
and
rorl
cmp
int
and
ret
cmp
add
sti
add
sbb
jae
push
pop
mov
aas
xchg
sub
int3
fwait
enter
cs
je
loop
lcall
cmp
add
or
repz
push
stc
repnz
sbb
pop
sbb
rolb
mov
popf
xchg
pop
mov
fwait
mov
mov
sub
sub
cmc
rorb
arpl
and
push
cmp
xchg
leave
in
sbb
nop
jmp
xor
out
push
xchg
test
sbb
pushf
mov
push
pop
lret
mov
inc
ret
sbb
mov
stos
or
pushw
mov
pop
adc
fsubrs
data16
sbb
xor
or
adc
sub
ds
ret
addr16
aaa
jl
push
mull
mov
ret
inc
mov
xlat
mov
sub
fidivl
jno
push
and
filds
xor
push
jmp
and
sbb
enter
and
jnp
repz
sti
hlt
pop
adc
leave
dec
and
insl
jg
testl
pop
sbb
lret
popa
and
rorl
jb
or
mov
jne
dec
push
mov
jne
icebp
lahf
inc
test
cwtl
and
mov
add
call
insb
sbb
mov
sub
sub
out
imul
rcll
push
clc
mov
cmpsl
dec
inc
sub
test
aas
mov
stos
fbld
jmp
jle
addr16
test
lods
inc
test
push
cmc
daa
sbb
mov
jecxz
and
testb
push
mov
out
ret
xor
xchg
rorb
jecxz
cmp
rorl
repz
icebp
rolb
sbb
test
test
stos
cmpsl
xor
sti
mov
dec
rolb
rcrl
mov
movsl
pop
imul
loop
push
jecxz
sbb
xchg
and
jecxz
repz
pop
jne
or
mov
xor
popa
call
cmp
and
mov
mov
aaa
pop
ss
inc
lea
push
inc
xchg
in
adc
fdivr
mov
ja
xchg
lods
iret
fdivp
popf
add
aad
popa
jno
fs
shll
mov
in
frstor
push
xchg
mov
popa
xor
ds
cmp
add
std
pop
cs
pop
fldl
sahf
lds
imul
pop
inc
shrl
aad
inc
fimull
test
add
arpl
pop
sbb
nop
jno
in
lock
inc
lods
loop
ret
inc
loop
jg
cs
xlat
xchg
add
loopne
pop
shlb
jno
push
pop
fwait
mov
xor
pushf
mov
in
fnsave
push
fildl
jle
lock
dec
add
dec
or
cmpsl
cmpsl
mov
pusha
add
scas
out
jnp
push
arpl
add
roll
dec
dec
fisubs
jg
roll
pop
push
int
out
ret
out
loopne
push
pop
xchg
fcoms
mov
fwait
ret
es
sbb
icebp
and
clc
stc
push
jp
arpl
add
jp
movsb
pop
ljmp
aad
sub
call
imul
mov
cmp
out
push
mov
cmp
or
push
mov
mov
repnz
mov
mov
iret
mov
add
loope
jecxz
rorl
ret
daa
jmp
jge
mov
bound
imul
shl
cli
ja
hlt
pop
push
xchg
adc
inc
ret
insl
std
pushf
ret
addr16
jle
stos
sbb
aas
lods
fwait
jno
sbb
cmpsl
inc
mov
inc
insl
mov
mov
mov
pop
dec
cmpsl
push
cld
pop
gs
in
jg
xor
es
iret
inc
dec
xchg
lcall
inc
adc
fcoml
mov
xor
pop
mov
cld
mov
jno
aaa
cmpsl
fstl
xchg
decb
insb
push
mov
push
call
sbb
jo
jmp
aam
in
jnp
hlt
je
or
imul
add
xchg
inc
mov
xor
and
xchg
js
lea
into
cmp
cmp
decb
lret
sbb
js
mov
xor
std
hlt
sbb
sub
ficompl
subps
scas
add
xchg
hlt
jno
sahf
aaa
inc
ss
dec
loopne
xor
sbb
inc
sti
cmp
popa
sub
dec
or
fiadds
push
xchg
xchg
out
data16
sti
mov
arpl
test
add
gs
loopne
movsb
sub
pop
fwait
sti
addr16
mov
out
push
xor
xor
imul
pop
popa
cld
push
mov
and
mov
jo
and
jmp
movsl
fdivl
out
ds
test
xchg
push
inc
fwait
pop
call
sbb
mov
sbb
in
or
sub
xor
mov
sbb
aaa
rol
and
fnstcw
insl
xor
pop
ret
inc
out
adc
fimuls
and
imul
gs
aam
push
jecxz
inc
mov
fisubl
arpl
dec
in
lahf
cmpsl
mov
shrl
mov
add
fwait
sbb
adcl
adc
loop
mov
inc
sbb
jns
lret
loope
mov
mov
fs
sbb
aam
mov
fwait
mov
loope
gs
ss
pop
movsl
sti
mov
xchg
cld
shl
jecxz
rorl
sbb
jle
jmp
or
fnsave
mov
imul
std
imul
pop
push
sbb
mov
add
cmp
sbb
push
rcrl
sub
fildl
fsubl
pop
mov
dec
or
sub
xchg
cmp
imul
and
or
inc
pop
sbb
clc
xor
pop
xor
and
and
mov
stos
data16
mov
test
sub
jo
sbb
nop
push
in
xlat
jmp
mov
shl
push
pop
ljmp
xchg
fcmovb
xchg
faddl
fistl
jo
cmp
push
daa
popl
call
rorb
cltd
sbbb
xor
aaa
loope
lret
inc
repnz
ficoms
ret
popa
sbb
lea
mov
out
lock
std
add
xchg
sub
sub
arpl
pop
jmp
test
mov
fwait
lods
mov
pop
popf
sahf
fst
leave
sbb
out
xlat
ret
jb
in
mov
mov
cmp
xchg
test
mov
fnstcw
xor
test
fidivrl
addr16
or
idivb
push
cltd
jecxz
push
mov
pop
in
dec
fisttpl
idiv
inc
or
out
scas
hlt
sar
mov
popa
inc
jmp
sbb
cmpb
rol
sbb
pop
aad
arpl
inc
xchg
lods
loope
jo
imul
jns
decl
xchg
popf
mov
mov
sbb
das
cli
push
out
dec
je
fildll
popl
fistps
mov
test
dec
cmpsl
shlb
orb
or
lods
lods
jp
mov
imul
pop
fst
sbb
in
xchg
call
in
xor
cld
aaa
sbb
sub
sub
xchg
and
jg
dec
inc
fstpt
pop
jne
xlat
jmp
stos
roll
push
mov
fcompl
sub
shr
jmp
jecxz
in
mov
inc
sub
outsl
ret
and
inc
aas
cmp
mov
fdivs
dec
cmp
pop
lahf
mov
lea
in
out
mov
stc
dec
add
out
inc
ret
lods
in
setge
cwtl
leave
fldenv
out
mov
push
bswap
cmc
dec
mov
and
ds
out
add
rcr
nop
icebp
inc
mov
aam
jns
dec
mov
cwtl
jecxz
and
ret
inc
int
sub
cmp
out
fcompl
ret
inc
lds
mov
push
cmc
stos
xchg
xor
mov
xchg
mov
rcl
ljmp
fldt
or
pusha
dec
bound
xchg
cmp
stos
sbb
stos
insb
pop
push
cmp
dec
bound
rcrl
daa
nop
push
push
xor
push
stos
sub
mov
aam
rorl
sbb
inc
out
aas
and
mov
fbstp
jae
or
push
stos
ret
xchg
jmp
mov
jmp
int
adc
imul
js
stos
leave
jmp
lret
and
push
lods
fnstsw
dec
pop
fwait
xor
jp
or
push
jne
subl
ret
pop
pop
inc
leave
imul
insl
fildl
hlt
pop
cli
fwait
rol
aas
cmp
repz
push
add
mov
shrb
fisttpl
xlat
xchg
sbb
mov
leave
jmp
mov
shll
clc
mov
mov
jmp
ret
aas
and
pop
mov
push
mov
lods
xchg
xchg
int
and
aam
call
sub
iret
push
sbb
addl
mov
fildl
mov
int3
or
test
mov
dec
mov
push
pusha
add
testl
fwait
mov
fisubrl
bound
sbb
movsl
daa
test
cmpl
ja
imul
push
cmp
xlat
sbb
outsb
xchg
jbe
xlat
aad
fwait
sub
sar
or
sbb
out
scas
rcrl
mov
fwait
into
dec
imul
xor
inc
mov
or
mov
popf
imul
cmp
pop
pop
mull
sub
mov
daa
icebp
xor
and
inc
cs
jbe
sbb
clc
xlat
mov
and
xchg
rclb
mov
lds
movsl
pop
cs
out
fildll
pop
cmp
sti
fs
pop
lods
mov
sbb
pop
rcll
lcall
outsl
mov
sbb
push
ret
imul
ss
pop
cmp
or
mov
pop
leave
cld
mov
stos
xlat
sub
lods
cmp
cs
jmp
mul
dec
mov
insl
popa
sbb
out
dec
mulb
pushf
inc
out
and
push
push
lock
inc
loopne
and
repnz
or
cmp
adc
push
les
adc
adc
sbb
inc
add
jp
cmp
mov
xchg
mov
lret
insl
test
test
push
test
imul
and
push
or
and
jne
fucomip
mov
leave
jnp
stos
in
fwait
sub
call
xlat
sbb
sbb
jmp
loope
inc
and
ret
jne
popf
adc
xchg
lods
adc
lea
fbld
insb
inc
imul
or
inc
enter
clc
add
jmp
test
adc
ds
fsubl
stos
dec
sub
push
enter
popf
dec
dec
test
or
outsl
or
gs
jmp
jb
push
stos
jecxz
mov
loope
subb
add
sbb
mov
out
jne
inc
xchg
mov
out
push
lods
leave
sub
fwait
neg
ret
mov
mov
mov
sbb
scas
scas
fwait
sub
sbb
pusha
xchg
or
or
pop
cmp
icebp
inc
cld
push
mov
iret
inc
enter
mov
cmp
insl
jo
loopne
lock
in
aaa
xchg
and
pop
shll
faddl
push
imul
xchg
fstps
push
test
pop
jnp
xchg
jae
es
inc
cltd
cmp
in
aam
cmp
mov
jbe
jno
dec
jb
test
jmp
mov
test
adc
fmul
mov
inc
xor
add
pushf
fwait
mov
std
push
xchg
pop
test
fwait
fs
xchg
lcall
fwait
sbb
stos
fistpl
cs
xor
rol
mov
or
xor
bound
inc
jecxz
cltd
ds
out
ret
insb
xor
pop
scas
xor
orl
loopne
sahf
add
cmp
ret
dec
scas
das
xor
xor
iret
repz
test
xchg
jecxz
mov
pop
cs
ss
int
sbb
out
jmp
icebp
push
cmpsl
fdivr
sbb
enter
and
add
pop
mov
pop
lcall
outsl
sub
int3
outsl
pushf
cwtl
test
in
xorb
or
popf
ljmp
call
imull
mov
imul
dec
inc
sub
mov
mov
jg
mov
cld
je
mov
xchg
fcmovnu
int
pop
mov
orl
fcmovnbe
cltd
pusha
mov
mov
adc
repz
cmp
repnz
adc
add
adc
or
fbld
test
ret
push
shrl
push
addr16
sbb
pop
aad
ficompl
aaa
outsb
stc
jl
jle
sbb
and
loop
sub
movl
push
add
or
push
mov
and
push
or
andb
imulb
sub
insb
sub
adc
dec
pminub
adc
mov
cmp
ror
pop
std
sbb
dec
cwtl
jns
lock
movsl
lock
in
repz
sbb
add
xchg
cmp
push
popa
fmull
xor
inc
shl
push
add
inc
jno
sbb
sbb
push
mov
push
sub
push
jecxz
jo
cmp
fidivrs
xchg
mov
pop
adc
in
test
scas
fdivrl
sub
test
pop
xor
pop
mov
and
pop
fmull
insl
cmpsb
mov
xlat
jecxz
inc
inc
fstpl
sbb
test
sti
cmp
lahf
cmp
or
std
stc
bound
outsl
sbb
stos
fldt
mov
and
andl
scas
aam
xchg
and
mov
dec
fistpl
push
nop
pusha
test
mov
pushf
cmp
mov
inc
dec
fistpl
mov
jnp
cmp
sbb
adc
push
xor
adc
mov
pop
sub
mov
lret
pop
jne
sbb
mov
xchg
faddl
popa
cmp
sbb
stos
loop
jae
lea
mov
cmpl
xor
stos
mov
mov
fcoms
insl
cmp
push
lds
sub
dec
pop
fcmovne
adc
lret
popa
mov
xchg
mov
mov
mov
xlat
rol
in
mov
in
mov
sarb
pop
mov
dec
ja
pusha
ljmp
test
pop
jl
dec
mov
xchg
xchg
and
cmp
jmp
cmpsb
repz
mov
sahf
pop
sub
outsl
mov
push
lea
in
pop
aaa
push
scas
pop
push
cmp
movsl
sbb
mov
fs
stos
lret
adc
repz
mov
jge
mov
or
or
and
xchg
cltd
xchg
fwait
or
cs
test
aam
xchg
xlat
inc
sarl
and
dec
hlt
clc
mov
pop
ds
sub
rol
scas
xor
and
sub
sbb
mov
mov
das
dec
icebp
iret
cmp
sti
sti
int3
repz
xchg
int3
dec
outsl
mov
pusha
les
cmp
pop
xor
mov
aaa
addr16
hlt
popa
in
jae
fcoml
jo
xchg
roll
mov
lret
rcl
cs
mov
ficoml
inc
cltd
xchg
mov
mov
test
scas
je
scas
mov
xor
and
sbb
cmp
sarl
and
daa
add
das
xrelease
imul
sbb
arpl
cltd
inc
xlat
out
loopne
mov
in
dec
sbb
mov
xor
sahf
xchg
jb
aaa
rcll
inc
xchg
sbb
push
outsb
in
and
push
or
int
leave
inc
enter
daa
adc
jmp
ficompl
repz
fnsave
pushf
mov
or
and
cmc
test
push
outsl
cmp
mov
sub
in
ret
sub
fcmovnu
stos
mov
sbb
fcmovne
imul
sub
mov
mov
or
jle
pop
out
xchg
or
cmp
fisttps
test
sub
sarb
and
inc
int3
or
or
xchg
pop
enter
dec
jae
out
out
andb
inc
pop
jae
jg
inc
pop
fcmovne
roll
sbb
dec
in
mov
cmp
jg
cmp
insb
les
ljmp
push
pusha
jns
sbb
sbb
push
das
and
dec
pop
jns
cmp
ss
std
and
fldcw
mov
jae
dec
ds
out
jmp
rclb
jmp
xchg
push
testl
scas
sbb
push
fcomi
fiaddl
mov
dec
fildl
imul
add
cli
testb
adc
orb
pop
sti
lock
jno
xchg
mov
push
aad
fcmovb
ret
pop
fisttps
pop
mov
incb
loopne
decb
xchg
mov
pop
mov
sub
cmp
push
xlat
jmp
shrl
and
out
push
lea
rol
mov
rolb
inc
and
xchg
int
imul
loope
mov
mov
pop
jmp
add
fldcw
cwtl
adc
lret
mov
fs
adc
imul
ds
inc
imul
pop
sub
inc
sbb
fwait
mov
hlt
shl
lock
pop
jns
cwtl
add
fucom
pop
or
or
les
mov
test
fidivrl
jae
das
or
push
test
jl
fimull
cwtl
call
cmp
arpl
lods
xchg
xor
pushf
loopne
test
sti
jae
xchg
sub
lea
es
outsb
movl
addr16
arpl
xchg
add
mov
stc
xor
stos
loope
nopl
les
inc
cmp
sbb
repnz
rcr
mov
jne
ja
call
mov
lret
mov
sbb
rolb
jmp
cmc
out
out
xchg
or
jns
stc
popf
or
jge
xchg
jle
xorb
xchg
xor
mov
out
dec
loopne
sbb
test
push
add
jl
sti
repz
mov
sub
mov
mov
mov
orl
jmp
aaa
mov
or
data16
inc
xchg
std
mov
orb
sub
outsb
fnsave
fidivl
sti
sbb
and
in
lret
ljmp
js
ja
repz
imul
ljmp
mov
arpl
sub
in
lods
fcompl
shr
mov
inc
repnz
lds
lods
fcmovnu
cwtl
ret
jns
xlat
loope
pop
or
jmp
add
int3
mov
and
fadds
mov
inc
mov
jne
and
andb
pop
jl
sbb
repnz
add
sbb
stos
les
jmp
push
divl
test
sbb
testl
mov
adc
fcoms
jmp
popa
sbb
push
jmp
hlt
pop
push
insl
ret
xor
pop
inc
imul
push
push
out
test
mov
mov
push
jecxz
pop
jge
aam
xchg
call
fcoms
inc
mov
lea
sub
jne
mov
fsts
popf
xchg
pop
xchg
outsl
jmp
cmp
daa
fistpl
xchg
xchg
mov
mov
aam
arpl
aas
sbb
sbb
in
mov
inc
ret
imul
out
sbb
mov
pop
lret
lret
push
jecxz
insl
sbb
and
test
jmp
sbb
pop
sarl
int3
mov
in
daa
sbb
mov
pop
pop
int3
push
in
insl
movsl
stc
jecxz
arpl
hlt
arpl
push
arpl
sbb
fwait
push
ja
xor
xor
xchg
sti
inc
xchg
leave
cmp
int
mov
sbb
rol
imul
ficoml
shr
mov
cmp
cmp
cmp
and
dec
call
insl
dec
aad
lods
xchg
cmp
sbb
pop
icebp
xchg
fdivp
xorl
dec
cmp
je
add
test
dec
cmp
mov
dec
mov
cs
push
mov
mov
mov
adc
enter
lea
sbb
adc
or
frstor
jp
push
stc
dec
jne
iret
dec
sbb
std
stos
push
mov
int
pusha
not
jbe
cmpsl
aas
sti
cltd
fnsave
and
jle
addl
fstps
adc
rcr
mov
fisttpl
cs
push
inc
fdivs
sub
aam
cmp
jnp
test
aad
pop
lea
lds
out
pop
pushf
push
jnp
jp
ljmp
ret
add
lea
push
out
fsubp
jmp
ljmp
pop
int3
out
or
inc
arpl
push
popa
lea
add
mov
mov
outsb
pop
das
repz
sbbl
cmp
loop
adc
je
xchg
dec
fcmovnb
pop
dec
mov
and
xor
in
mov
pop
lea
sbb
mov
shl
iret
fcmovnu
in
lcall
adc
inc
movsb
aas
cmp
or
test
inc
loopne
fwait
jnp
shrl
cmc
pop
pop
dec
jnp
push
or
outsb
outsb
popa
dec
fidivl
jecxz
test
mov
iret
repz
stc
mov
pop
int3
jmp
outsl
xor
lds
sti
xchg
cld
inc
enter
int
daa
mov
dec
xchg
dec
add
imul
pop
and
jmp
and
test
ret
mov
ljmp
sti
cmc
pop
and
push
push
in
cltd
xor
inc
sbb
mov
and
iret
cltd
mov
cmp
mov
pop
mov
mov
test
xchg
and
jecxz
aam
and
xchg
push
jecxz
and
shll
cli
mov
mov
inc
int
lcall
sub
test
pop
lds
faddl
test
es
pop
sub
xchg
popa
movsb
or
addr16
add
lahf
sbb
sub
mov
mov
into
mov
dec
scas
sub
test
out
insl
jo
jne
inc
aaa
fistps
pushf
xor
movsb
ret
je
and
cmp
push
mov
mov
andb
aad
inc
jne
add
insl
mov
aas
mov
inc
push
fstpl
and
xor
sti
loope
fnstsw
stc
inc
fimuls
xlat
out
stc
daa
inc
mov
insl
mov
outsl
call
bound
in
ret
lods
xor
ljmp
test
xlat
xor
inc
fdivrl
nop
ret
add
push
xchg
faddp
int
lcall
push
jecxz
ret
stos
dec
fiaddl
dec
mov
ret
mov
inc
or
mov
add
clc
cmp
insl
pop
and
nop
mov
int3
jmp
popa
mov
mov
adc
fistpl
pop
lret
and
dec
add
cmp
pop
jmp
mov
and
aam
adc
mov
mov
addl
fsubl
das
in
sbb
mov
mov
mov
cmp
xchg
mov
in
ljmp
in
dec
sub
sbb
fs
cmp
ss
and
push
mov
imul
push
fnsave
fld
cmc
pop
pop
stos
call
out
cltd
push
dec
or
mov
adcb
cwtl
jmp
mov
cmpsb
pop
inc
fxch
mov
inc
lret
out
xchg
and
push
xlat
sbb
call
mov
shr
jmp
mov
ficoml
ret
jg
ljmp
adcl
out
pop
push
pop
mov
and
mov
cmpsb
push
mov
mov
mov
out
aad
push
dec
ret
push
jmp
cmpsl
repz
cmp
or
xor
inc
fldcw
push
mov
and
jno
loope
lods
outsl
ljmp
sub
es
xor
push
dec
mov
sbbb
and
inc
adc
shrl
xchg
cltd
dec
mov
mov
jno
fsub
jle
dec
enter
pop
ss
leave
adc
lahf
cltd
das
sub
loope
pop
mov
stos
mov
or
sub
mov
cmpsl
fsubl
in
push
insl
inc
aaa
dec
xor
dec
dec
jnp
fsubs
dec
and
mov
lods
int3
pop
or
inc
rcrl
sub
imul
leave
pop
sub
jne
cwtl
xor
adc
mov
sarb
lds
ja
push
pop
push
pusha
adc
ss
push
cmp
rcll
pop
add
cmp
dec
shrl
sbb
mov
clc
adc
and
jns
and
hlt
cmp
es
or
pop
mov
lret
mov
fcmovbe
cmp
shr
sub
int
aad
mov
gs
inc
pop
sbb
mov
xchg
dec
mov
mov
fdivrl
mov
lahf
aaa
loopne
mov
gs
enter
aam
mov
aas
inc
mov
aaa
and
pop
lods
ljmp
sbb
stos
out
xchg
mov
cmp
sbb
dec
xchg
mov
mov
jns
pop
fisttpll
in
add
adc
pop
aam
sbb
bnd
or
leave
test
pop
ret
nop
mov
insl
imul
mov
lods
aaa
rorl
pop
mov
enter
push
adc
stc
hlt
jae
ficoms
into
pop
pop
sarb
lea
jmp
pop
jecxz
and
movsb
lds
dec
lea
sub
mov
subb
lods
add
jbe
ljmp
sbb
lods
ljmp
mov
andl
push
test
cltd
dec
jge
imul
int3
mov
ret
mov
test
mov
and
mov
ljmp
jae
mov
or
mov
cltd
and
jae
push
arpl
cmpsl
ljmp
xor
jno
cmpsb
push
lock
enter
cld
rol
xor
hlt
fs
loope
xchg
push
or
iret
inc
fsubrl
inc
mov
xchg
jae
pop
xchg
xor
repz
mov
lods
sahf
mov
ret
cmp
out
mov
adc
push
pop
dec
and
loop
insl
dec
rcl
outsb
push
push
jle
jmp
cli
addr16
ljmp
popa
mov
outsl
fnstsw
mov
xor
inc
cli
mov
scas
movsl
mov
fiaddl
cmc
ljmp
sub
test
jns
stc
ret
mov
call
xchg
mov
mov
mov
xchg
mov
xchg
fstps
inc
add
out
addl
out
iret
dec
imul
cmp
pop
dec
cli
arpl
or
pop
lds
add
pop
mov
arpl
mov
jl
mov
sbb
es
scas
pop
xchg
mov
leave
cmp
inc
sti
fsub
pop
fwait
push
enter
pusha
in
jmp
pop
out
ret
fdivl
dec
into
cs
stc
int3
jae
inc
out
pop
xor
cmpsl
pop
scas
movsb
jmp
pop
in
pop
fdivrl
pop
sub
and
test
push
ljmp
popa
pop
call
std
cmpsb
aad
or
gs
dec
pop
test
sbb
sub
and
das
iret
mov
sub
imull
inc
int3
inc
test
fsubl
arpl
test
enter
fwait
rorb
cltd
mov
jp
mov
fcmovnu
xor
int3
jmp
sbb
data16
sub
mov
cmpsb
lcall
int3
fmull
add
lock
dec
fisttpl
sbb
lahf
aas
test
xor
mov
fcmove
push
jnp
sbb
xchg
jecxz
sub
mov
loop
imul
hlt
int3
xor
xchg
out
inc
pop
stos
jae
fcmovnb
mov
and
mov
adc
fmul
rcll
jecxz
rcll
cmc
test
roll
mov
mov
mov
jbe
lahf
or
loopne
in
fnsave
mov
icebp
out
jmp
iret
les
xchg
cmp
jns
pop
lods
sbb
pop
pushf
mov
fs
push
add
shlb
inc
push
in
adc
addr16
adcl
mov
notl
lea
sbb
cltd
outsb
enter
fld
xlat
xor
push
test
je
int
insl
sbb
movsl
arpl
out
les
mov
pop
cmc
jne
xor
sub
sub
sti
xor
rorl
les
pop
and
outsl
je
pop
js
fistpl
pop
and
and
aaa
test
jo
in
sbb
leave
fdivs
into
jmp
fistl
jmp
xlat
ds
cmpsb
rcrb
andb
cld
fsubp
pop
dec
pop
dec
dec
arpl
stc
out
movsb
fwait
repz
push
aam
jb
sti
adc
cmc
cmp
fs
mov
out
in
jae
and
les
dec
fsubrs
data16
xor
insl
insb
xlat
push
andl
adc
sbb
in
push
mov
jp
idivb
inc
out
or
and
dec
fwait
xlat
mov
or
and
mov
mov
and
shr
addr16
movsb
movl
dec
roll
cltd
pop
push
jmp
or
mov
pop
jae
sub
and
enter
add
mov
push
arpl
cmp
imul
sub
jecxz
adc
and
or
push
dec
imul
mov
and
arpl
mov
cmp
ret
ret
std
fcomps
test
sbb
jnp
fidivl
out
sbb
iret
push
dec
andb
lock
jnp
mov
mov
lods
cmpsl
jmp
dec
adc
scas
xchg
jecxz
fists
push
xchg
lock
pop
das
insb
sbb
out
pusha
xor
fistps
jecxz
hlt
dec
mov
mov
mov
outsl
fstpl
sti
jl
jmp
sbb
push
inc
ret
push
mov
fcmovnbe
mov
add
iret
in
frstor
cs
dec
xchg
loop
data16
ret
aad
popa
das
pop
aas
adc
fwait
sbb
int
dec
shr
adc
rol
fmull
pushf
or
stos
dec
loope
sbb
jno
aaa
xchg
aas
mov
ret
mov
mov
pop
cli
repz
fists
in
shl
jmp
adc
mov
jbe
loop,pt
pop
and
jbe
mov
jno
in
or
cmp
pop
mov
push
test
mov
faddl
dec
sbb
pop
arpl
ljmp
aas
xchg
in
fsubr
sbb
push
setno
dec
sub
cli
sub
inc
fsubrl
xchg
pushf
or
mov
xlat
cmpsl
fsubrl
xor
mov
addb
out
pop
repz
imul
popa
mov
jecxz
inc
jnp
test
jo
lret
add
add
lcall
push
xchg
cmp
add
sbb
ret
loop
cmp
cwtl
data16
arpl
xlat
jae
sbb
les
das
fstpt
mov
pusha
or
cli
sbb
and
ljmp
xchg
push
mov
mov
jns
nop
adc
xor
call
xchg
arpl
fisttpll
insl
jmp
out
and
in
mov
xor
pop
in
mov
adc
lods
sti
xlat
mov
inc
out
cmp
out
inc
mov
data16
add
clc
mov
jo
cwtl
cmp
out
in
rorb
rcrl
pop
lret
inc
mov
mov
aas
jecxz
bound
out
cmpb
xchg
dec
pop
repnz
cmpsb
pop
insl
imul
cmp
arpl
and
cmp
xchg
mov
mulb
and
jmp
andb
jl
ret
adc
les
jmp
dec
cmp
inc
dec
fldt
jns
fdiv
jnp
les
mov
dec
jns
sub
hlt
xor
pop
es
or
std
xchg
cmpsl
mov
push
clc
fnstenv
pop
outsl
ret
movsl
inc
pop
push
rclb
rorl
fldcw
mov
cmp
movsl
cmpsb
push
fwait
sbb
mov
popa
xchg
or
and
pop
jb
push
jae
sbb
mov
andl
inc
mov
ret
out
fs
pop
insl
sbb
mov
mov
mov
mov
scas
or
sbb
xchg
xor
or
lgs
filds
nopl
fcmovnu
mov
mov
lea
das
std
sbb
ror
add
dec
mov
lock
sub
sbb
rcrl
popf
lds
jge
stc
xchg
fwait
and
fwait
xor
test
jne
mov
pop
faddp
dec
mov
xor
ss
cs
rcrl
lods
mov
push
ret
mov
jecxz
fidivl
xor
pop
xor
xchg
fdiv
xor
jle
xchg
cmpb
test
pop
pop
popa
or
lea
test
shll
fwait
sbb
in
adc
push
mov
push
fwait
sbb
ret
jne
ljmp
push
hlt
out
xchg
xchg
cmp
out
out
arpl
xchg
cmp
negb
add
stos
mov
loope
xor
int3
adc
in
mov
jecxz
xchg
aad
pop
outsl
int3
inc
jecxz
dec
sbb
hlt
add
mov
cmc
sub
pusha
xlat
jecxz
inc
jecxz
adcb
sqrtps
dec
aas
repz
lret
mov
xchg
fldt
adc
xor
pop
jmp
pusha
or
into
scas
arpl
filds
loopne
es
xchg
fimuls
mov
cs
clc
outsl
std
out
sub
sbb
data16
add
fs
cmc
xchg
sub
cmpsb
sbb
pop
or
cltd
jns
sbb
xor
fists
insb
cmp
cmp
pop
leave
xor
jg
jns
pop
flds
gs
fs
jne
jnp
ja
fisttps
adc
loope
sbb
mov
aas
pop
sub
push
and
cwtl
cmpsl
xchg
sbb
and
data16
cwtl
and
lcall
inc
or
dec
ret
hlt
dec
cmp
jb
ljmp
cmc
and
loope
push
repz
push
push
xor
ss
or
fisttpl
lods
jmp
xchg
pop
lock
push
lcall
mov
cwtl
mov
mov
ja
jmp
dec
pusha
jnp
scas
or
sbb
mov
mov
dec
xchg
sbb
notl
test
test
popa
int
xchg
and
dec
adc
test
sub
and
rcl
sbbl
les
test
jmp
dec
int
sbb
outsl
jae
imul
pushf
leave
stos
mov
pushf
jg
cmp
dec
dec
incl
cmp
loopne
lret
jns
ret
xor
dec
test
in
inc
mov
push
xlat
pop
mov
aas
ret
outsl
jo
xchg
ljmp
dec
mov
jmp
fcoml
xor
sub
cli
mov
out
xchg
xchg
lock
lret
mov
fucomi
xchg
pop
mov
sub
fnsave
rorl
repz
dec
sub
mov
ret
jo
and
pop
loope,pt
std
push
daa
inc
inc
das
les
sub
lds
imul
outsb
imul
mov
fiadds
dec
gs
mov
pop
cmpsl
inc
bound
outsb
lahf
add
rcrb
cli
aas
js
inc
lods
in
xor
mov
in
and
xlat
rcll
xor
and
out
bound
jmp
jl
cmp
sbb
inc
fsts
adc
mov
inc
fistpl
inc
leave
xor
ret
les
daa
ret
out
mov
lds
pop
mov
xlat
cmp
sti
mov
dec
repz
jecxz
addr16
out
cmpsl
cli
sub
mov
sbb
sbb
popa
push
out
xlat
stc
ficoml
add
in
aam
cs
mov
pop
jno
sbb
sarl
fstpl
or
pop
loopne
jmp
push
xchg
int
decl
jae
nop
push
inc
test
cmp
pop
aad
xor
cmc
jmp
int3
inc
sub
add
int
frndint
xchg
and
sarl
mov
xchg
mov
sti
mov
push
add
leave
arpl
push
pop
sub
pop
mov
or
dec
loop
mov
insl
shr
rorl
mov
shlb
aaa
xor
sbb
mov
mov
dec
mov
xor
bound
repnz
fwait
sbb
add
sub
mov
xchg
in
cmp
xor
cmp
push
xlat
insl
sbb
es
add
jbe
in
fsubr
imul
pop
mov
xchg
div
ljmp
adc
xchg
in
aas
mov
stos
dec
shl
cltd
pop
pop
std
ljmp
pop
push
mov
dec
xchg
xor
dec
push
movsb
jmp
hlt
ja
dec
pop
push
fstpt
pop
inc
dec
push
pop
xor
in
les
cli
int
mov
cli
mov
push
inc
fsubr
fildll
shr
xchg
shll
cmp
outsl
fadds
sub
pop
testb
cmpsb
jmp
test
sbb
out
mov
loop
push
cld
jnp
addr16
aas
mov
cmp
adc
xor
movsb
xchg
jae
out
iret
icebp
push
xorl
xor
mov
popf
in
adc
jmp
xchg
jnp
push
inc
mov
scas
xorl
inc
in
jb
jmp
outsl
rcrl
sti
sbb
leave
mov
call
adc
sub
leave
xchg
xor
ljmp
rorl
cmpsb
dec
pop
adc
and
cmpsl
xor
rcrb
insl
sti
jmp
fsubl
push
jmp
adc
sub
data16
cmpb
ljmp
sti
jno
sbb
pop
idiv
pop
andl
dec
cmpsl
sub
jp
cmpl
xor
pop
sub
fwait
adc
mov
lds
shl
rcl
arpl
pop
aam
fsubl
jnp
aad
jg
xchg
stos
xchg
inc
mov
push
imul
int3
cmpl
movb
ret
mov
and
mov
fistl
stc
cmp
mov
jmp
test
cmc
mov
loope
sub
sarl
in
push
cmpsl
mov
cmp
outsl
ljmp
sub
adc
divl
push
lods
or
sub
dec
xor
pop
addr16
jmp
rorl
inc
xchg
in
in
push
push
rclb
fwait
loopne
xor
das
mov
in
outsb
arpl
add
adc
int3
inc
imul
mov
sbb
test
data16
fstpt
movsl
sti
mov
outsl
lea
xor
test
sbb
faddl
inc
push
test
sub
lea
pop
sti
in
imul
fbld
out
outsl
bound
xchg
sbb
shll
mov
sub
adc
pop
je
or
mov
ja
xor
pop
add
or
push
push
inc
int
cli
inc
dec
loopne
jno
test
lods
les
add
outsl
cmp
jge
xor
lods
cmp
fnsave
xchg
das
cmc
jle
mov
sbb
addr16
ret
scas
xor
hlt
and
cmp
inc
test
sbb
mov
sub
jbe
sub
outsl
and
es
add
popa
imul
pop
ss
or
xchg
cmp
xchg
jae
dec
mov
out
imul
cld
mov
mov
push
sub
inc
jmp
imul
gs
pop
or
imul
pop
in
cld
mov
out
fbstp
pop
shl
pop
add
sti
dec
jmp
sbb
gs
lods
xor
cltd
mov
test
std
lea
out
jmp
sub
jge
mov
sbb
lock
stos
rcrl
icebp
mov
sbb
popf
scas
or
xchg
sbb
int3
cmp
arpl
into
repz
fnstenv
call
mov
pop
frstor
push
adc
enter
ficoms
imul
je
pop
mov
or
movsl
add
aas
aam
rclb
sub
jle
lds
inc
repz
shll
inc
jmp
imul
and
cmp
push
rclb
cmpsb
sbb
jb
repnz
bound
jp
pop
arpl
cltd
and
sbb
flds
mov
jmp
jae
sahf
sub
in
lods
xor
gs
js
ss
sbb
mov
mov
cmp
stos
gs
inc
fsub
and
lcall
mov
outsl
lods
adc
repnz
cmp
jl
fildl
fildl
ja
pop
push
pop
mov
sti
pop
fstpt
test
inc
dec
jbe
sub
jns
mov
stos
push
pop
inc
imul
xor
push
popf
mov
sub
jne
jbe
jecxz
cmp
push
adc
inc
in
mov
mov
jle
jb
loopne
sbb
cli
xor
arpl
add
call
ficoms
pushf
mov
frstor
in
add
jns
shlb
sbb
xor
or
nop
and
adc
fwait
out
loope
into
mov
je
cltd
int3
mov
ret
aam
ljmp
mov
push
ret
int
ror
sub
inc
push
dec
ret
mov
mov
inc
xchg
ret
inc
int
dec
mov
sub
pop
sub
sbb
test
jne
mov
rorl
rolb
insb
sbb
out
mov
jbe
lods
int
ret
mov
in
sbb
sbb
inc
adc
in
xlat
in
cltd
popf
inc
loope
lea
and
jecxz
sub
sbb
bound
push
pop
mov
jecxz
mov
jmp
repz
out
mov
mov
in
sbb
leave
jnp
sbb
cmp
sbb
adc
ret
iret
sbb
aad
mov
and
xchg
clc
push
in
jecxz
iret
xlat
fstps
cmp
inc
xor
repz
dec
fcomp
fisubrl
inc
ret
mov
mov
mov
popf
sbb
mov
fisubrl
lds
pop
shrl
popf
jecxz
dec
ret
sbb
mov
leave
sbb
sbb
ret
in
inc
sbb
in
ret
inc
sar
dec
and
sbb
nop
mov
out
mov
or
test
aam
andl
sbb
in
stos
sbb
sbb
sbb
sbb
xchg
sbb
sbb
xchg
sbb
add
cltd
sbb
sbb
xchg
sbb
in
popf
sbb
sbb
sbb
fistpl
adc
arpl
test
jp
arpl
sbb
or
xchg
sbb
sbb
dec
insl
dec
xchg
mov
and
in
icebp
sbb
sbb
out
sbb
in
cmc
sbb
in
repz
in
stc
sbb
lahf
fcomi
sbb
jae
or
stos
subb
das
out
cli
jecxz
inc
mov
xchg
push
movsl
mov
outsl
xchg
dec
test
scas
pop
or
mov
sbb
mov
xchg
testb
in
ret
add
pop
movsl
jmp
das
inc
sub
and
jmp
push
sub
pop
arpl
arpl
xchg
jmp
pop
in
mov
or
incb
mov
sub
xlat
pop
data16
sbb
outsl
inc
jmp
xchg
pop
xlat
ja
jmp
sub
pop
lds
pop
jmp
sbb
addr16
jmp
sbb
dec
mov
sub
daa
xchg
in
jb
xchg
inc
int
inc
in
dec
popf
xchg
scas
in
jmp
push
xchg
mov
dec
add
into
sbb
cmp
jnp
xchg
sbb
lods
in
in
add
or
ret
outsb
lea
ret
daa
pop
ljmp
pop
enter
js
sbb
pop
ljmp
outsl
sti
les
push
leave
mov
cmpsb
mov
jecxz
mov
adc
sbb
xlat
jmp
dec
inc
stos
jb
xchg
lods
in
jae
dec
and
pop
inc
xor
stos
call
xchg
inc
mov
and
jnp
rol
pop
imul
pop
lds
push
pop
mov
cmp
test
cmpsb
adc
cmp
repnz
add
movsb
dec
mov
in
push
pop
push
xchg
aam
andl
cli
repnz
pop
fisubrs
push
push
ljmp
push
pushf
in
mov
dec
add
dec
mov
cmp
loopne
rol
mov
mov
addr16
mov
mov
movb
sbb
lock
sti
int
sbb
inc
std
sbb
and
sbb
mov
jge
push
pop
push
sbb
hlt
mov
jp
xchg
insb
shlb
mov
test
aad
addr16
js
shr
ja
pop
in
and
stos
inc
call
mov
aam
pusha
inc
add
push
loopne
jge
out
mov
push
fisubl
xchg
enter
xor
dec
jne
push
mov
mov
xchg
pop
sbb
push
push
fidivrl
pop
cvtps2pi
in
jmp
lret
or
in
cld
fdivrs
ljmp
or
and
outsl
or
adc
pop
lcall
pop
add
in
xchg
cmpb
and
add
or
add
add
xor
imul
fcomps
inc
jg
mov
loopne
dec
fidivs
fnstcw
sbb
lods
add
cmp
xchg
imul
fwait
std
ror
in
clc
push
jno
outsl
mov
popw
stc
sti
push
xchg
jno
dec
cmp
push
shrl
xor
cmpsb
cmp
xchg
pop
jo
stc
pop
dec
jle
in
adc
xchg
lods
les
lods
lret
in
adc
push
icebp
push
adc
or
mov
test
ret
and
inc
mov
sbb
rcrl
fcmovnb
in
sahf
jbe
js
out
fldcw
push
pop
jg
shl
pop
dec
sbb
test
sbb
das
jl
pop
mov
imul
xor
push
roll
cmp
and
inc
xlat
cs
in
popa
pop
add
adc
xchg
mov
jae
ss
adc
inc
jae
pop
mov
jecxz
mov
and
icebp
lret
adc
movsb
dec
lds
mov
sub
and
arpl
shll
fsts
jecxz
and
mov
xlat
mov
fldenv
gs
add
xor
adc
cli
popf
mov
std
jnp
add
mov
jb
movsb
sti
fnstenv
jo
aaa
inc
incl
push
jge
xchg
test
mov
stos
pop
cmp
sbb
sti
mov
sbb
fdivl
insl
int
int
dec
mov
das
lcall
inc
mov
jnp
rorl
das
dec
fsub
in
ret
jmp
mov
movsl
inc
mov
fcomps
mov
dec
dec
cltd
push
rclb
xchg
iret
pop
or
gs
pop
dec
push
cmp
scas
add
cmpsb
fwait
out
aas
stos
push
addr16
mov
frstor
sub
dec
inc
das
das
aad
mov
test
jp
bound
dec
or
out
leave
fstpl
cmp
hlt
pusha
addl
mov
fwait
mov
ss
mov
xchg
icebp
cmp
pop
ret
push
lea
sbb
mov
fldt
test
xchg
frstor
mov
sbb
ret
jecxz
dec
test
mov
mov
inc
cli
xor
lds
outsl
int
js
jg
sub
jl
push
push
sbb
int
insb
nop
jl
inc
sbb
jns
pushf
mov
xchg
adc
fnstcw
dec
ret
testb
lods
mov
ja
shr
inc
fstpl
adc
lret
inc
sbb
inc
adc
ljmp
je
lds
fisubs
loope
adcb
cld
dec
adc
in
sub
or
daa
out
inc
ret
jnp
cmpsl
cmp
dec
fstpl
inc
repz
and
xchg
or
mov
fistpl
jle
fxch
and
xor
adc
push
lahf
cmp
movsb
addl
mov
flds
jmp
negl
dec
aas
jl
xor
mov
test
add
sti
lock
lret
pop
and
adc
lret
sub
mov
daa
btr
mov
jne
lock
dec
sub
sub
and
fisubl
movsb
das
fwait
notb
and
loopne
xchg
add
shll
mov
fbld
and
dec
imul
stc
pop
jno,pn
cmp
sub
outsb
fwait
call
stc
xor
cmpsl
xchg
add
cmp
xor
jmp
scas
cli
in
mov
jecxz
and
in
in
cmp
xchg
pop
sub
push
xor
jl
leave
jmp
add
add
fsubl
loopne
jmp
xchg
aam
cmp
cmp
scas
mov
lahf
and
lea
leave
orb
xor
fldl
push
and
push
ret
adc
adc
sti
adc
push
loope
dec
pop
bnd
pop
cmp
div
sbb
pop
cmp
dec
ss
cwtl
repz
push
mov
ret
jne
adc
mov
les
fsubrl
mov
imul
inc
cs
xor
xchg
dec
xor
popa
inc
mov
stos
xchg
sub
inc
mov
mov
repz
adc
inc
cmc
or
dec
jl
repnz
mov
push
and
jp
mov
pop
mov
push
test
and
xchg
mov
les
mov
fadd
inc
xchg
ror
pop
lea
clc
fwait
icebp
sub
xor
jno
shlb
in
outsl
cmpsl
xchg
sar
lret
repz
mov
out
orl
arpl
mov
dec
xchg
test
arpl
pop
inc
aas
dec
jae
rcrl
es
dec
jae
shrl
out
mov
leave
jecxz
mov
test
and
mov
das
xlat
jecxz
xor
es
xchg
les
mov
pushf
fdivrl
xor
orl
outsl
rcll
sbb
push
lock
pop
iret
dec
popa
xor
aas
inc
mov
push
add
add
clc
imul
pushf
dec
pusha
ljmp
popa
mov
stos
enter
mov
sarl
inc
inc
je
popf
mov
lods
leave
icebp
add
and
ret
lret
or
je
mov
std
mov
jmp
sub
or
xchg
pop
jne
in
pop
mov
stc
mov
test
pop
sub
jne
dec
cmp
test
es
movsb
mov
xor
insb
sar
into
fists
inc
sub
setb
xchg
imul
inc
jp
and
jae
sarl
iret
lods
loopne
fistpl
lock
ret
push
call
sub
int
jle
frstor
mov
push
cmpsl
inc
lret
jmp
sbb
les
int
arpl
in
dec
aam
shll
xchg
mov
push
aam
sbb
jmp
sbb
pop
shll
jmp
fisubrs
xor
dec
sub
test
mov
aaa
or
xlat
leave
and
mov
xlat
lret
mov
in
cltd
sbb
rorb
xchg
inc
cmpsl
jg
dec
cmc
arpl
lods
sbb
sahf
daa
popa
mov
enter
sti
and
in
fmul
call
mov
aaa
loope
stos
push
push
sub
mov
fisttps
mov
ret
push
pop
repnz
cmpsb
out
gs
lods
cmp
imul
ret
gs
add
jno
jle
inc
movsl
dec
popa
sbb
bound
pushw
sbb
in
xlat
and
lcall
inc
out
jnp
insl
aad
mov
lock
xchg
push
stos
xchg
jnp
loopne
xchg
push
xchg
xor
push
insl
stos
inc
jmp
in
or
int
mov
push
loope
jecxz
iret
jecxz
ljmp
scas
js
lea
aas
lds
fsts
pop
ljmp
pop
ret
movsb
jg
fs
aam
xchg
addr16
xchg
mov
jne
inc
inc
shll
xchg
in
int
fstps
rcll
pushf
repz
xor
cwtl
mov
dec
rclb
cwtl
and
sbb
mov
ror
insl
int
inc
ds
jbe
pop
push
sbb
jmp
mov
out
mov
loope
popa
insl
inc
cmp
mov
mov
dec
fcmovnu
pop
pop
popa
adc
cld
pop
xchg
mov
aaa
cmp
jnp
cltd
mov
call
test
pop
popa
push
xchg
inc
ja
fs
mov
fwait
insl
push
xor
cmpsl
push
pop
dec
xor
dec
enter
dec
jmp
frstor
ljmp
mov
pop
testb
push
push
dec
mov
loop
and
sbb
fdivrs
popa
mov
ds
and
shll
outsl
ja
fstp
outsl
stos
imul
xor
scas
xor
adc
in
xorl
loop
mov
inc
inc
cli
fwait
or
cmp
inc
push
out
or
mov
arpl
sarb
adc
sti
testl
loopne
cld
mov
in
inc
je
jno
js
jmp
lock
popa
or
test
push
cvtpi2ps
and
mov
leave
add
in
and
inc
push
jp
aad
and
cmpsl
fwait
adc
das
add
das
cltd
or
stos
in
push
and
repz
xlat
fbstp
push
pop
lea
xor
mov
mov
frstor
clc
outsl
jle
and
arpl
das
and
imul
mov
sbb
call
ja
test
inc
push
call
dec
inc
sti
cmp
xor
and
sbb
xchg
jne
cmpsl
inc
sbb
scas
orl
xor
jmp
dec
loop
int3
dec
inc
mov
adc
add
sbb
std
leave
mov
jae
popf
cmp
imul
in
and
and
jl
ret
mov
mov
mov
lds
fcompl
pop
xchg
aam
cltd
mov
xlat
xchg
adc
stc
stc
pop
push
inc
sbb
xor
loopne
imulb
sub
data16
test
sarl
add
dec
adc
mov
pusha
xchg
imul
xlat
fsubl
inc
and
sbb
cmpsl
inc
adc
fnsave
pop
mov
in
pop
xor
lods
cmp
icebp
pop
es
cli
loopne
lods
fldl
xor
xchg
inc
enter
cmp
sub
dec
adc
push
mov
movsb
pop
pop
test
add
cmp
mov
mov
scas
in
add
cmp
sbb
cld
push
jecxz
fcoml
jbe
pop
popa
and
cs
in
std
and
adc
fnstenv
sbb
enter
fwait
jmp
test
pop
push
mov
sbb
imul
sbb
icebp
xchg
and
mov
mov
jne
add
push
push
jp
fwait
mov
in
jbe
imul
pop
xorl
and
test
outsl
mov
stos
add
adc
ret
fmull
and
repz
out
push
pusha
pop
or
ret
fdivrl
insb
pop
gs
adc
cmpsl
movsl
stc
lods
xor
jnp
insl
mov
jbe
jne
sbb
lods
jp
insl
imul
or
pop
inc
inc
fwait
lods
xchg
movsl
aad
lcall
mov
sub
in
xchg
fnstenv
adc
or
adc
sub
mov
imul
fiaddl
push
mov
jp
push
fistpll
inc
fidivrl
cli
aad
sbb
inc
cmc
cli
sbb
xchg
mov
fwait
cmc
nop
push
pop
test
jmp
lcall
push
ss
ret
popf
push
ret
imul
pop
mov
data16
adc
add
inc
aaa
cmp
mov
in
insl
cmpsl
add
sti
pop
inc
test
fstpt
arpl
sub
leave
test
imul
pop
ret
ljmp
and
xor
sbb
sbb
xchg
enter
int
mov
arpl
add
inc
addr16
cltd
sti
jecxz
dec
lods
into
lods
mov
fcomip
xor
movsl
fwait
sbb
xor
or
cmpb
and
mov
lds
hlt
cmp
xor
adc
lods
popl
xchg
cmpb
roll
push
and
sarl
lods
cli
lods
iret
ret
xchg
jecxz
ss
stos
in
in
xor
mov
jecxz
adc
sbb
fmuls
mov
lret
cmp
sbbb
fdivrl
sbb
pop
push
mov
in
sub
cmp
stc
and
lret
adc
cmp
mov
pop
jmp
jecxz
loope
int3
dec
and
fwait
inc
sub
movsb
push
dec
xlat
aam
sti
rcrl
xchg
frstor
insb
clc
xlat
arpl
fnsave
inc
sub
shrb
xlat
insl
xchg
cmpl
xor
test
addb
pop
cwtl
xor
cmp
call
lcall
or
fucomip
mov
xor
jnp
ficompl
mov
cmpsl
pop
or
mov
jmp
stos
fistps
mov
jno
adc
gs
addr16
insb
dec
ss
mov
and
pop
popa
call
insb
push
ret
andb
xchg
adc
inc
mov
pop
cli
mov
jge
jns
inc
shrl
lds
jno
xchg
inc
mov
addr16
push
sbb
gs
inc
add
lahf
fildll
imul
cmc
push
aas
pop
aas
test
cmpsb
inc
mov
jmp
fcmove
fidivs
dec
sbbb
sbb
jge
mov
sbb
inc
popa
ds
insb
test
xor
mov
pop
sti
xor
cmpsb
mov
out
pop
pop
lret
dec
sbb
cli
xchg
jp
sub
lods
mov
push
jmp
pusha
jp,pn
dec
hlt
outsb
mov
xchg
addr16
jmp
out
arpl
inc
cmp
jo
or
pop
arpl
push
add
xchg
inc
or
xchg
sub
and
test
imul
stc
fs
ds
jp
mov
scas
inc
iret
ret
jmpw
push
push
mov
pop
cmp
cmc
sbbl
lods
std
fs
inc
mov
int3
pop
pop
cltd
add
popa
jb
ljmp
lods
mov
stc
mov
int
inc
les
inc
pop
push
mov
shrl
lods
orl
pop
cmp
std
in
or
incl
divl
lds
daa
aaa
in
xchg
xchg
sub
add
fcompl
jmp
and
mov
sub
js
cmp
ret
loop
daa
xchg
ret
adc
xor
pop
xor
sub
adc
in
int3
adc
sarl
lret
xchg
xchg
dec
gs
int
rclb
lods
xchg
je
sbb
shlb
cmp
int3
decl
xlat
push
dec
mov
popf
lock
mov
mov
sti
xor
push
mov
in
jb
push
daa
add
ljmp
call
xor
inc
ret
in
xchg
xchg
sub
add
push
shll
sbb
icebp
add
cmp
and
xor
pop
and
fsubr
in
pop
dec
jmp
sbb
pop
fdivl
mov
and
jecxz
pop
enter
enter
mov
rcr
pop
pop
std
pop
push
ret
cmp
cmp
fcompl
inc
fwait
aam
jmp
lock
xchg
roll
cmp
jg
cmc
mov
push
jecxz
sbb
lea
leave
push
jae
fadds
sbb
push
notl
jecxz
insl
loop
out
cld
out
aad
ret
repnz
inc
rolb
arpl
sub
push
cmpsl
adc
imul
xor
pop
sbb
mov
mov
loop
jno
pop
dec
xchg
lcall
leave
inc
addr16
xor
pop
shr
pop
mov
cmp
mov
movsb
sti
popa
pop
pop
push
nop
sub
inc
sbb
or
pop
inc
imul
jle
and
test
add
pushf
insl
mov
clc
out
ja
mov
aaa
in
xchg
sbb
push
je
scas
adc
fisubrl
jns
xchg
jg
out
jo
je
jnp
mov
mull
jnp
flds
push
shl
jae
push
mov
lds
clc
inc
or
les
push
push
sbb
sti
xchg
shrl
outsb
adc
jge
jge
pop
or
iret
cmpsl
mov
mov
xchg
fsubl
pop
push
sbb
jmp
cmpsb
inc
repnz
std
xchg
mov
mov
lret
xchg
pop
xchg
inc
jnp
dec
imul
push
ds
xor
mov
or
sbb
and
jno
sti
pop
jbe
in
cmp
fdivrs
mov
fsubrl
push
ret
pushf
xchg
cmc
xchg
shl
repz
jecxz
mov
pop
les
push
loop
fmull
sub
fadd
inc
lcall
fs
fistpl
adc
sbb
shrl
push
push
lret
inc
xor
push
xchg
call
ret
js
fstpl
out
stc
lret
mov
xlat
sbb
out
and
mov
sub
int
in
adc
sbb
xor
lret
fiaddl
push
adc
int
sbb
xor
sub
mov
push
adc
enter
stc
mov
sbb
lea
add
out
mov
cld
fdivrl
jno
pop
jl
cwtl
pop
gs
jns
xor
flds
inc
adc
in
scas
mov
test
sbb
into
cs
sbb
cmp
adc
mov
inc
mov
rcrl
movsb
and
dec
rcl
inc
ret
push
dec
xor
and
adc
mov
dec
mov
sub
and
sub
mov
add
subl
xlat
xor
mov
mov
dec
leave
mov
pop
push
xor
je
mov
pop
xchg
pop
les
mov
or
test
sbb
dec
mov
pop
fwait
sub
cwtl
sbbl
aad
adc
insl
out
sub
lds
pop
xchg
lahf
or
ja
sbb
bnd
jae
es
mov
mov
xchg
arpl
std
jae
int
inc
pop
push
aaa
lcall
out
enter
lds
sbb
leave
xchg
jl
scas
mov
out
mov
int
aam
xor
shrl
fcompl
mov
int3
aas
jns
stos
mov
mov
xor
mov
cmp
ja
ljmp
test
sub
inc
fs
dec
dec
mov
push
ret
dec
imul
mov
vaesdec
jb
repz
fisubl
sbbb
add
pop
jne
out
outsl
and
sbb
cmpps
xchg
ficoml
rorb
push
cmpsb
lret
sub
sarl
jmp
movsl
inc
gs
push
lea
int3
sub
push
mov
cld
inc
xchg
int3
add
xchg
add
jmp
fsub
xor
xchg
rorb
inc
pop
xor
cmp
frstor
mov
pop
aam
push
mov
inc
mov
fisttpll
push
ffree
mov
mov
loop
aaa
imul
mov
cltd
xor
out
imul
aaa
inc
sbb
mov
mov
aam
cmp
fisubl
xchg
out
imul
pop
mov
gs
lcall
lea
mov
jae
bound
push
xor
daa
adc
cmpsl
pop
mov
xor
daa
rolb
xor
and
pusha
jbe
jg
adc
add
stc
mov
mov
stos
pop
int
faddl
mov
inc
movsl
dec
mov
pop
mov
rclb
mov
test
stos
lea
inc
fst
add
dec
icebp
out
jecxz
gs
test
arpl
test
gs
xchg
jl
bound
or
aas
dec
insl
imul
jo
aam
push
jno
push
or
xchg
dec
xor
mov
push
pop
inc
je
outsl
loopne
lods
insl
xchg
stos
push
dec
cltd
jl
jb
jle
fisubl
adc
ret
xor
hlt
fildl
pop
fistpl
es
out
jnp
addb
sbb
je
push
xor
mov
xchg
mov
cmp
sbb
jbe
daa
outsb
fst
les
lods
and
and
sbb
sbb
mov
std
lret
repz
into
std
outsb
xor
cld
icebp
mov
adc
fwait
into
pop
dec
inc
scas
sbb
jns
adc
add
imul
lcall
cmc
push
xchg
lea
outsl
iret
sbb
add
mov
sbb
int
jno
pop
mov
insb
sbb
mov
dec
cmp
or
popa
int3
sbb
xor
inc
xorb
dec
sti
cmpsl
mov
and
incb
fld
cmc
cmc
or
xchg
adc
xchg
cli
mov
addr16
push
scas
in
lret
popa
push
cmp
pop
mov
imul
addr16
test
popf
out
push
push
dec
les
out
mov
sbb
sbb
push
mov
divl
shlb
sbb
aad
mov
test
shlb
outsl
xor
imul
sbb
and
pop
fisttpll
cmp
stos
mov
ds
mov
mov
xchg
sbbb
out
loop
xor
mov
mov
cmpb
xchg
cmp
sbb
ss
les
test
hlt
dec
inc
shll
jo
dec
pop
fildl
dec
fstl
jmp
pop
and
daa
xacquire
insl
inc
int3
testb
and
inc
push
cmpsb
xchg
adcl
mov
sahf
mov
ljmp
pop
jne
mov
cmovp
test
fldt
sahf
dec
and
repnz
lods
loope
sbb
add
inc
add
xor
sbb
cli
pop
sbb
filds
jno
int3
icebp
dec
cmpsb
mov
cmp
hlt
aam
out
pop
fstps
movl
xchg
aas
adc
gs
adc
xor
push
decl
pop
cltd
iret
sub
adc
aad
cmp
jmp
xchg
mov
flds
dec
cmp
sti
xchg
add
leave
fdivp
pop
sbb
jge
subl
dec
jbe
insl
sbb
test
leave
jge
mov
lods
push
and
stc
adc
mov
and
pushl
push
pop
imul
xor
hlt
movsb
mov
mov
mov
frstor
outsb
mov
jns
pop
mov
incl
aam
filds
jl
sub
add
stos
popa
loope
ret
and
sbb
and
cmp
std
push
pop
xchg
ret
mov
mov
test
jnp
dec
fidivl
adc
outsl
push
cwtl
pop
jmp
cmpsb
xchg
or
imul
jnp
fstpl
adc
je
xchg
test
pop
nop
xlat
xchg
scas
inc
and
in
inc
dec
sbb
pop
data16
fwait
mov
shll
add
xor
pop
sarl
leave
int
loop
imul
and
cmp
aad
jl
or
push
pop
lret
inc
pop
es
xor
sbb
or
popf
fiaddl
push
sarb
mov
dec
imul
xchg
push
loopw
or
cmpsb
xor
arpl
and
pop
jae
test
or
push
pop
mov
mov
mov
enter
repnz
jae
out
pop
stos
test
aad
loope
fwait
xchg
pop
in
or
or
push
xchg
stos
std
ljmp
lods
loopne
mov
xchg
stos
add
call
out
xchg
jg
sbb
inc
repnz
daa
jg
push
scas
in
arpl
sbb
jnp
add
pop
cli
add
stc
fcoml
iret
pop
inc
daa
rclb
jmp
repz
sub
into
pop
xchg
je
imul
in
or
inc
aas
jns
call
cmpsl
sbb
stos
dec
or
icebp
imul
dec
insl
jl
fwait
push
xor
pop
lcall
or
add
insb
inc
xchg
lcall
iret
dec
sub
popf
xor
jmp
and
xchg
adc
in
mov
cmp
pmulhw
xchg
arpl
mov
pop
sub
bound
mov
sub
gs
stos
add
fildll
mov
jmp
pop
mov
pop
mov
add
or
fcmovbe
bound
add
mov
fcmovbe
sbb
cmp
inc
inc
int
jecxz
or
pusha
test
out
fdivrl
adc
pushf
sbb
mov
mov
pop
jmp
vpaddsw
hlt
or
jecxz
pop
stc
fisubl
sbb
rol
sbb
or
ret
jmp
loope
mov
out
and
lcall
mov
pusha
filds
cmp
ljmp
mov
lret
stc
negl
adc
push
and
sar
sbb
inc
dec
sub
repz
cmp
or
dec
aam
call
loopne
outsl
dec
out
xlat
shl
mov
fsubrs
mov
cmpsb
xchg
pop
stos
pop
popa
cmp
out
test
jecxz
jecxz
cmpsb
out
in
pop
loope
cmp
dec
mov
jmp
movsb
xor
jno
cmp
scas
pop
push
sti
pop
gs
push
test
imul
or
fwait
hlt
ffree
jbe
movsb
leave
add
cmc
lea
inc
les
out
addr16
shlb
fildll
lahf
push
pop
xchg
inc
mov
outsl
mov
outsb
jecxz
mov
mov
movsb
mov
xor
stos
mov
fwait
jne
jns
pop
test
xchg
add
fcompl
pop
inc
jmp
jg
pop
pop
cmp
inc
xlat
pop
dec
cld
icebp
fidivrs
mov
arpl
xor
inc
dec
and
jno
mov
pusha
sub
push
push
imul
std
adcb
inc
inc
sbb
xchg
insb
mov
fwait
int3
cmpsb
push
clc
sub
es
loope
flds
pop
pop
dec
jae
sbb
or
imul
stos
pop
in
pop
xchg
es
sbb
sub
xchg
sbb
mov
xor
lahf
inc
gs
mov
nop
insl
mov
pop
add
sbb
pop
stos
jp
mov
jns
push
xchg
imul
leave
sbb
mov
sub
ja
pop
xchg
pop
mov
and
pop
cmpsl
fdivrs
lcall
mov
inc
orl
xchg
aad
cwtl
repnz
outsl
jecxz
xchg
or
lcall
inc
push
xchg
inc
dec
mov
jno
loop
jae
sbb
push
iret
cld
add
imul
fldenv
popa
mov
rcrl
inc
test
fcmovnbe
rcll
aad
mov
stc
insl
loope
andl
ret
cli
pop
push
push
sbb
jmp
inc
inc
andl
xchg
fistps
fcmovnb
sbb
filds
jnp
xor
jmp
outsl
cmp
mov
pop
dec
mov
ret
cmc
pop
cs
ret
movsl
dec
std
pop
rcll
in
dec
cltd
pop
xor
xchg
mov
pop
dec
cmpl
inc
jmp
in
push
or
dec
test
fwait
outsl
sub
je
inc
pusha
xor
xchg
stos
and
pop
sub
adc
in
sbb
rcrb
sub
xor
loope
pushf
jge
xchg
xchg
mov
repz
out
xorl
dec
pop
jae
lret
sbb
icebp
or
jp
adc
jp
jbe
jns
xchg
sarl
jbe
arpl
and
xchg
sbb
addb
clc
notl
fcoml
xor
jb
popa
repnz
out
ss
push
lds
sbb
cmpsb
or
sti
cmpl
ret
in
and
mov
cmc
fists
movl
rclb
aam
fcomps
push
shll
jo
clc
mov
jns
pop
sbb
in
aas
adc
jae
xor
dec
pop
nop
mov
pop
or
in
sahf
mov
mov
inc
out
nop/reserved
stc
inc
cmpsb
int3
pop
out
jmp
shll
dec
movsl
pop
sbb
and
jl
jne
out
in
jp
jmp
pop
fdivr
inc
jge
jmp
stos
xchg
enter
mov
inc
jnp
sub
xchg
pop
repz
scas
add
notb
sub
mov
inc
pop
std
inc
cltd
or
ds
jns
push
adc
gs
insl
imul
mov
test
dec
jmp
out
fwait
xor
dec
sbb
stos
xchg
mov
inc
add
or
pop
js
mov
call
das
sti
mov
xchg
sbb
mov
mov
push
aas
pop
arpl
jb
pop
mov
in
dec
das
mov
push
mov
test
mov
jns
pop
sbb
mov
mov
and
iret
mov
ffree
outsl
arpl
ret
negb
jae
in
jp
leave
push
mulb
push
mov
or
pop
in
xor
stc
pop
jmp
add
inc
push
cwtl
adcb
vdivps
ss
xchg
jl
fucomp
jg
mov
pop
lock
sbbb
and
and
mov
xchg
xor
daa
xor
push
mov
inc
loopne
jmp
sbb
jmp
arpl
sub
loopne
jmp
dec
arpl
mov
je
mov
inc
repz
loopne
pop
pop
cmpl
and
xor
and
dec
inc
sahf
imul
in
xchg
cs
dec
jecxz
je
jg
cwtl
add
push
mov
sbb
adc
cwtl
mov
nop
cmpsb
xchg
cmp
aad
testb
fistpll
enter
jecxz
pushf
push
xor
lea
in
outsb
es
jmp
adc
or
push
repz
mov
pop
sbb
pop
imul
dec
mov
inc
xchg
call
xchg
cwtl
dec
push
jmp
cmc
push
and
mov
fists
imull
dec
sbb
adc
in
lahf
arpl
pushf
mov
adc
xchg
int
xchg
arpl
xchg
jmp
pop
add
loopne
aas
jge
add
iret
mov
adc
insl
fidivl
and
sub
adc
dec
add
imul
test
and
lcall
imul
mov
into
inc
xor
dec
jno
jns
fwait
jge
movsl
adc
xor
or
outsl
les
pushf
pop
fmuls
add
mov
push
xchg
fwait
popf
jno
push
add
sbb
fldcw
add
adc
mov
inc
jbe
mov
push
pop
push
pop
jmp
sbb
imul
mov
fistpll
jbe
xchg
popf
pop
inc
mov
mov
pop
fmuls
xor
test
sbb
pop
in
ret
cli
or
pop
mov
pop
and
mov
popl
outsb
pusha
mov
repz
xchg
ficoml
xlat
xor
fs
repnz
shll
insl
jg
das
cmpsl
std
fstpt
pop
test
sub
fisttpll
mov
xor
scas
inc
pop
xchg
fdivl
pop
dec
popa
stos
dec
mov
mov
xchg
add
sbb
jne
cli
xor
inc
push
pushf
bound
fwait
push
jno
or
inc
xchg
add
lds
pop
ret
or
insb
push
xchg
xchg
mov
xchg
stos
cmpsl
shl
fwait
aaa
pop
stos
sahf
lods
ja
inc
outsl
mov
xchg
aad
dec
aad
and
and
jmp
lds
hlt
into
pop
out
dec
inc
aas
shr
lea
xchg
out
mov
and
jl
jmp
push
xchg
cmpsb
lret
xchg
adc
jmp
stos
test
stos
js
aaa
adcl
repnz
fwait
ljmp
mov
jmp
xor
lods
mov
dec
inc
mov
mov
push
jo
mov
lock
fwait
jmp
mov
fldcw
fstpl
lods
pop
arpl
iret
fst
in
arpl
inc
fstpl
dec
jb
jl
imul
cld
jb
out
imul
stos
int
insl
ja
jmp
lods
frstor
sbb
out
jnp
and
movl
out
and
ss
popa
loope
push
shll
jmp
inc
xor
aaa
cltd
inc
js
fdivl
and
repz
cmp
cli
xor
mov
adc
mov
cmp
dec
lret
fistpl
xor
or
sbb
notl
xchg
inc
dec
mov
icebp
xchg
inc
sbb
shll
jmp
js
jmp
inc
insb
std
adc
dec
out
mov
lds
sub
sub
xor
inc
rorb
fistpl
je
out
xor
popa
fcmovu
clc
arpl
xor
mov
rcr
pop
inc
call
xchg
jl
fcomip
xor
pop
jbe
jo
jg
fdiv
mov
insb
cmpsl
filds
mov
add
and
cmpb
call
idivb
fsubrs
out
data16
rcrl
pushf
testl
jl
jl
call
aas
inc
lock
push
fcmovnbe
ljmp
mov
aam
xchg
jecxz
lcall
adc
adc
cmp
xchg
add
add
jecxz
fwait
cmpsl
lock
sbb
or
xor
lea
aas
push
fwait
scas
fldcw
cmp
dec
push
lret
jbe
sbb
mov
cli
aad
imul
xor
in
or
mov
push
cltd
and
sub
xor
test
lea
cmp
inc
pop
fwait
jecxz
inc
or
sbb
pop
ss
mov
out
xor
sub
mov
cmpsb
push
in
push
lcall
dec
jecxz
leave
inc
mov
adc
pop
lock
les
repz
dec
jecxz
imul
into
dec
jnp
pop
pop
sbb
fwait
loope
cmp
xchg
jno
adc
xlat
inc
dec
and
je
mul
jl
fadd
inc
xor
rcl
push
fmulp
loope
lods
mov
inc
andb
add
adc
jmp
push
in
pop
rcll
adc
mov
rcrb
sbb
movsb
and
maskmovq
lds
jl
jecxz
roll
dec
sarl
and
mov
cmp
xchg
xchg
fdivs
mov
xchg
ret
dec
pop
imul
imul
dec
cmp
hlt
jecxz
mov
aam
sbb
leave
movsb
sbbl
add
sbb
dec
jl
dec
int3
jmp
mov
jp
ja
push
lds
pop
ss
cmpsb
cli
pop
ret
fcomps
sub
hlt
cwtl
jb
jmp
mov
sbb
data16
in
push
fisttpl
sub
mov
rcrl
sbb
les
loopne
or
loop
scas
inc
inc
adc
ret
je
iret
shl
stc
pop
add
pushf
enter
mov
sbb
hlt
std
jae
dec
sbb
adc
pop
fs
popa
addr16
add
or
lods
test
enter
and
outsb
test
mov
sbb
pushf
mov
les
test
jle
mov
pop
cmpsl
xchg
xchg
mov
xchg
clc
iret
daa
mov
sbb
dec
xchg
cltd
repnz
das
cmp
dec
fwait
aam
divl
sbb
cmp
ja
cmpsb
es
pusha
popa
mov
sub
rcll
sub
jp
xor
std
pop
and
pop
dec
faddl
pop
adc
ret
push
xor
stos
cmpsl
mov
ret
xor
fwait
jmp
fidivl
popa
sbb
adc
inc
imul
or
in
enter
lcall
and
add
test
addr16
ficoms
pop
dec
jecxz
jnp
in
bound
repz
int3
pop
aam
pop
das
stos
cwtl
hlt
pop
mov
push
out
add
pop
aaa
xor
push
and
dec
cmp
pusha
inc
aam
push
dec
mov
and
aaa
inc
test
insl
mov
enter
cld
imul
inc
push
adc
leave
loopne
lret
dec
fcoml
inc
jp
ffree
sbb
cmp
mov
pop
jno
jp
pop
dec
push
inc
mov
ret
divb
sbb
push
jp
mov
leave
push
rol
leave
pop
pop
fs
imul
leave
inc
fistl
xchg
push
mov
jp
and
adc
popa
ljmp
pop
mov
cmp
cmp
sub
lods
push
inc
xchg
sbb
arpl
mov
in
out
in
sbb
cmpsb
push
cltd
sbb
bound
xchg
and
sbb
xor
mov
jne
push
in
mov
out
dec
mov
int
xchg
cmpb
in
in
inc
ja
jns
scas
jne
dec
jmp
adc
xor
fbld
enter
mov
and
scas
xlat
aaa
dec
xlat
int3
mov
frstor
dec
xor
daa
pop
roll
fwait
std
mov
rorl
insb
sbb
xlat
ret
pop
aad
out
sub
mov
xchg
xchg
jne
cmpsl
push
xchg
jp
aas
loopne
int3
rcrl
adc
lods
ret
push
mov
jmp
jecxz
and
testl
scas
loop
mov
mov
andl
fadds
jo
push
mov
popa
imul
loop
mov
test
mov
loop
loopne
adc
cmp
les
mov
and
fldl
sbb
push
scas
loop
jnp
leave
call
addr16
dec
xorb
scas
jmp
loop
fucomp
repz
mov
xchg
mov
fnstcw
insl
fdivrl
fisubrl
pop
mull
pushf
mov
push
jmp
and
inc
and
mov
rcrl
ljmp
jmp
icebp
xchg
nop
push
sbb
xor
test
test
fldl
pusha
cld
push
cmp
fstl
xchg
sub
sbb
arpl
das
movsl
add
adcl
je
pop
ret
cmp
adc
out
fwait
and
fldcw
daa
add
imul
xchg
inc
xchg
insl
push
out
scas
imul
fldpi
mov
and
stc
sub
cltd
dec
inc
adc
je
push
pop
sbb
les
jge
insb
lret
repnz
push
jg
lea
popf
push
or
mov
sbb
pop
test
nop
aad
jae
xchg
data16
and
hlt
je
jns
mov
and
sbb
pop
std
push
sarl
sbb
lods
je
jae
jbe
cs
fistpl
xor
movsb
adc
cmp
in
xchg
jp
xchg
and
fwait
in
test
jae
pop
dec
sub
leave
mov
sti
lds
bound
loop
stc
and
adc
fcoms
dec
outsl
sti
ficoml
leave
inc
and
frstor
pop
inc
sahf
es
push
imul
in
sub
cmp
jbe
xor
push
rol
fwait
pusha
and
jmp
sti
xor
push
jl
scas
test
lcall
or
sub
aam
jle
pusha
testl
push
shl
pop
mov
xor
leave
push
aad
cmpsl
imul
adc
sbb
jns
mov
int3
imul
or
loope,pn
mov
xor
fdivrp
pop
loop
mov
rcrb
imul
pop
aam
popf
insl
jecxz
and
push
sub
sbb
clc
mov
sbb
pop
push
bound
cmpsb
mov
xchg
pop
push
inc
aad
mov
decl
or
pop
cltd
mov
lcall
leave
insb
push
xchg
sub
pop
jp
jnp
xchg
test
sbb
inc
inc
mov
cli
adc
push
je
mov
and
push
scas
inc
ret
insl
loope
neg
popa
mov
aam
mov
xchg
xchg
stos
pop
adc
push
bound
cmc
inc
push
adc
pop
leave
std
jnp
jecxz
push
daa
stc
mov
pop
mov
adc
xchg
xor
mov
sbb
fstps
in
sbb
mov
xor
sbb
test
in
inc
push
mov
push
sbb
push
dec
inc
add
mov
xchg
inc
stos
pop
fisttpl
add
and
jae
pop
jp
adc
imulb
inc
dec
dec
jle
das
loop
adc
xor
sub
xor
cmpsb
sbb
or
add
insl
xchg
jne
adc
enter
iret
cmpb
xor
push
sar
fldt
sarb
inc
mov
andl
ljmp
jae
push
mov
pop
sbb
sub
mov
nop
push
scas
jnp
in
jns
scas
dec
imul
in
push
ret
push
jno
in
inc
repz
and
jecxz
pop
mov
inc
push
mov
mov
jmp
sub
lea
mov
mov
push
mov
jge
mov
test
and
scas
and
addr16
popa
inc
dec
loop
jns
repz
mov
add
xchg
xchg
cmp
inc
pop
sbb
lods
ss
ficoml
leave
idivl
sbb
cltd
pusha
sub
out
push
xchg
jecxz
cmpsb
scas
in
repz
imul
pop
sbbl
add
int3
jmp
cmpsl
insb
lods
pop
fsubs
jle
mov
frstor
push
jp
fwait
sti
xor
inc
push
testb
insl
dec
xor
fdivr
gs
add
jecxz
and
ljmp
jge
into
addr16
sbb
jne
xor
ret
sbb
or
cmp
subb
lods
stos
lods
mov
stc
push
push
sbb
adc
imul
shrb
lock
xchg
andl
add
fisttpll
sbb
and
pop
aad
inc
fisttpl
add
push
jbe
lret
rcrl
mov
push
sub
cmp
lea
in
push
mov
sbb
out
inc
and
or
lea
dec
in
arpl
adc
xor
test
arpl
inc
pop
and
jbe
fwait
xlat
sbb
loopne
test
mov
test
or
jnp
fwait
mov
ret
lea
sub
add
sub
roll
jno
dec
jns
pop
cmp
test
dec
push
out
or
inc
pop
nop
lahf
sbbl
cwtl
pushf
dec
and
lods
xchg
dec
mov
xchg
mov
xor
les
test
lret
in
inc
dec
out
enter
fnstsw
xlat
ret
cmpsl
xchg
fidivrs
sarb
adc
test
sbb
fnsave
xchg
imul
sub
decl
outsb
cmp
mov
call
inc
mov
mov
dec
jge
fstpl
lea
in
push
sahf
xchg
mov
hlt
mov
mov
shlb
mov
pop
xchg
pusha
stos
fldl
mov
jb
or
xchg
mov
or
gs
in
cmp
test
mov
out
adcl
jne
jo
stc
fnstenv
int
outsl
sub
lock
je
mov
pop
xor
pop
jle
imul
test
xchg
lods
ja
rolb
jmp
mov
pop
mov
dec
es
movsb
push
xor
or
or
dec
cmp
in
push
inc
xchg
mov
adc
fdiv
aaa
aam
cltd
push
jae
pop
ret
imul
repnz
xor
mov
xor
mov
jnp
mov
sub
jno
data16
pop
mov
adcb
dec
hlt
mov
jno
jo
fsubr
sti
ret
je
mov
cmp
sbb
mov
mov
in
scas
sub
cmpsl
aad
imul
mov
aam
jmp
sti
sbb
sub
in
ret
sbb
pop
mov
clc
jmp
leave
imul
jmp
push
push
xchg
sub
pushf
mov
mov
dec
test
repnz
fnstenv
dec
out
xchg
xlat
jg
imul
xor
leave
xorl
rorl
mov
xchg
aad
and
das
cmpsl
push
xchg
xchg
sbb
pop
mov
rol
mov
nop
mov
aas
call
add
push
pop
push
dec
in
or
jle
out
push
dec
aas
pop
fmul
dec
adc
sbb
test
fisttpll
jmp
mov
lcall
insb
lods
fcompl
shrl
lea
mov
movsl
rol
pusha
xor
ficoml
cld
aam
aam
in
jae
movsl
in
xchg
cmp
movsb
mov
out
outsl
jns
xchg
and
jmp
push
stos
movsl
inc
loope
out
fsubs
mov
hlt
std
repz
sub
outsl
pop
mov
shlb
mov
mov
in
cmp
push
push
leave
aas
dec
adc
cmpsl
addr16
jmp
lea
mov
xchg
movsb
adc
dec
and
jecxz
mov
insl
imul
jae
std
popa
sbb
pop
sti
and
mov
repz
dec
aas
sahf
mov
push
mov
push
xchg
repnz
jg
xchg
jle
aad
fwait
push
jge
lret
rcpps
add
push
dec
jo
adc
push
dec
or
and
aad
push
stos
push
jno
and
inc
lcall
pop
rcrl
lcall
popa
pop
clc
jae
inc
out
into
shrl
fidivrl
sbb
mov
or
insl
jmp
ret
xchg
mov
sbb
into
pop
pushf
icebp
mov
jecxz
rcr
adc
fnsave
xlat
pop
xlat
and
sub
dec
cmp
add
inc
cmp
mov
mov
jae
fidivrs
pop
mov
sub
in
lods
dec
jecxz
es
pop
and
pop
dec
sub
jne
stos
roll
fbld
inc
out
push
popf
xchg
out
jle
cmp
inc
shlb
cmp
adc
mov
dec
test
mov
lcall
xor
jo
ljmp
mov
ret
jecxz
mov
xchg
and
xchg
std
imul
clc
ds
fistps
mov
cmp
push
sub
xor
pop
pop
out
cmpl
test
mov
push
iret
push
cs
cmpsb
cmpsb
test
jnp
test
repnz
mov
xor
adc
fsubrs
fcom
jbe
popa
out
sbb
ret
mov
insb
dec
dec
pop
pop
rcl
clc
fwait
test
loope
clc
movsb
mov
mov
ja
and
pop
or
xor
push
loope
imul
pop
jmp
dec
push
pop
sub
jno
or
ljmp
mov
ja
insl
xorl
jb
sbb
clc
call
popa
imul
jno
xor
xchg
in
ds
call
jge
cli
es
cltd
aas
cmp
cmp
addr16
cmp
dec
mov
outsl
ja
sbb
xor
pop
mov
inc
push
loop
xchg
jle
mov
mov
pop
or
xchg
jb
pop
pop
push
dec
xchg
decb
push
ret
xlat
inc
mov
jmp
cmp
aaa
sub
pushf
cld
hlt
jmp
pushf
jns
cmpsl
adc
bound
jne
xor
int3
sbb
lods
jno
mov
jo
imul
enter
and
cmpsb
ficoml
lea
std
fcmovnu
aam
mov
sbb
mov
lock
sti
fucom
sub
lods
dec
lea
mov
out
pop
fs
jle
in
mov
dec
add
dec
jbe
into
ljmp
pop
mov
jle
mov
jle
loop
inc
mov
hlt
sti
or
sbb
out
fidivl
cli
inc
and
jno
mov
mov
lret
outsl
mov
insb
pop
pop
or
xor
pop
es
out
pop
mov
jo
pop
mov
dec
mov
jno
pop
pop
pop
iret
inc
pop
rclb
xchg
lahf
jae
lret
xchg
mov
fldenv
ds
stos
frstor
cmp
adc
mov
in
jecxz
addb
nop
pop
rorb
mov
call
xchg
inc
jbe
dec
push
jp
jo
and
or
mov
xchg
mov
xchg
fwait
push
stos
fcomps
xor
pop
sahf
mov
sti
pop
sarb
add
xchg
enter
les
push
pop
cmp
sbb
sbb
cmp
xchg
xor
stos
int
xor
jmp
xor
popf
imul
lods
fnstsw
cmc
ss
xchg
xlat
cld
shrl
push
mov
in
jno
fsubl
int
lods
lods
mov
stos
pop
adc
pop
imul
xchg
sub
les
xchg
stos
data16
insb
dec
out
insl
lods
sbb
rcrl
shll
cmc
mov
and
cmp
fwait
addr16
jle
and
add
pushf
ja
and
push
leave
dec
insb
lcall
dec
outsb
and
daa
inc
repz
insl
fistl
stos
mov
cli
xchg
inc
movsl
lret
call
dec
push
mov
and
iret
cmp
pushf
es
les
cmp
fwait
sbb
das
or
lahf
add
addr16
jl
pop
sub
incb
fildll
dec
mov
imul
std
fsub
fwait
cmp
dec
pushf
add
cmp
sub
mov
jecxz
xchg
pop
pop
sar
decb
ret
mov
push
fs
stos
jge
lret
into
leave
scas
push
repz
adc
rcrl
aas
in
ret
cmp
sub
lret
dec
repnz
fsub
mov
test
popa
cmp
aas
iret
int3
sbbl
in
cmc
pop
pop
in
fdivr
or
mov
dec
pop
jecxz
aas
fldcw
push
cs
mov
mov
or
dec
jp
leave
je
scas
cmp
and
sub
icebp
pop
push
lds
jnp
jecxz
dec
arpl
adc
dec
inc
and
pop
daa
rcrl
call
faddl
js
adcl
xchg
or
dec
or
gs
fwait
outsl
pop
sub
xchg
sarl
cmpsl
jg
mov
nop
ret
ljmp
stos
das
xor
pop
mov
xchg
sub
std
enter
lea
cmp
inc
jmp
das
push
xchg
mov
dec
lods
pop
mov
mov
mov
xor
jecxz
aaa
fnstsw
and
xchg
sahf
mov
mov
das
daa
inc
enter
mov
xchg
sbb
jo
pusha
ja
ljmp
xchg
insl
push
jmp
cmp
mov
adc
fsub
mov
aas
pop
sub
pop
out
jle
xchg
out
sub
or
cmp
fsubrs
icebp
out
out
sub
cld
or
data16
jle
in
inc
mov
nop
inc
repz
repz
rorl
xchg
adc
mov
test
pop
stos
cmp
or
mov
test
sbb
imul
fcmovu
mov
rcl
ret
mov
ret
out
jb
cmp
cmp
jmp
sahf
loope
cmpsb
je
lds
aam
push
clc
sti
mov
sarb
xor
push
lret
test
add
cmpsl
cmp
xchg
stos
jg
push
dec
mov
outsb
pop
push
lahf
jge
mov
and
stc
mov
pop
sbb
mov
sbb
pushf
pop
jnp
jns
scas
jmp
insb
out
mov
jmp
sbb
aaa
xchg
or
push
and
enter
aad
pop
dec
mov
cmp
inc
push
sbb
repnz
cli
pop
add
cltd
sub
add
rcr
push
ret
sbb
xor
xor
add
mov
fldl
jbe
or
dec
clc
int3
in
inc
cld
sar
jp
mov
xchg
test
in
shl
mov
pop
es
pop
ret
inc
mov
mov
cmpsb
fwait
ss
and
xchg
or
mov
addr16
dec
jno
fcompl
addr16
imul
mov
aaa
je
mov
cmp
ljmp
out
jecxz
sbb
pop
movsl
fisubrl
push
xchg
xchg
pushf
xchg
imul
sub
imul
lea
out
cs
ret
sbb
out
xlat
int
cmpsl
jg
ret
pop
jae
test
je
stos
fbld
add
incb
stc
movsb
xchg
dec
shl
std
xor
inc
lea
cld
inc
stc
mov
imul
sbb
clc
fwait
sbb
mov
sbb
andb
xchg
lret
cmp
cld
rol
and
jb
fcmovb
xchg
loop
call
lods
cwtl
shrl
sub
lea
cwtl
push
out
lret
and
inc
sbb
mov
js
into
jne
jmp
pop
mov
leave
sbb
and
jmp
insl
dec
fstl
fisttpl
inc
pop
mov
mov
lahf
fisubs
and
sbb
cmpb
cmp
xchg
fildl
into
xorl
test
xchg
jbe
cltd
xchg
mov
dec
inc
shll
stc
outsl
jb
mov
arpl
test
inc
lds
scas
mov
jno
dec
iret
or
xchg
popf
aam
jecxz
jl
negl
jno
jae
ret
jns
es
test
imul
push
cmp
sub
inc
cmp
jne
outsl
xor
inc
inc
aam
mov
fldpi
adc
xor
sbb
cmp
test
push
jle
lahf
pop
mov
push
in
fisubl
xor
sbb
lcall
inc
jno
mov
sub
ljmp
cld
jbe
ljmp
push
xchg
repnz
sub
mov
repnz
jge
repz
xor
cmp
popf
ret
inc
test
jns
lds
push
gs
cmpb
sbb
push
ljmp
mov
pop
jb
int3
loopne
or
jl
je
inc
inc
mov
or
push
psrlq
sbb
clc
jno
out
jnp
mov
arpl
into
sbb
outsl
xchg
and
pop
js
sbb
and
jne
incl
insb
ds
imul
dec
in
pop
hlt
out
pop
sub
mov
pop
sbb
ljmp
pop
xchg
mov
sarb
lcall
jbe
ret
fucom
jno
cmc
rorb
lret
sub
push
in
lea
popf
cmp
sub
xchg
addr16
mov
es
out
cwtl
ljmp
jmp
addr16
xor
mov
and
xlat
outsl
jns
add
or
push
sti
test
out
dec
dec
jmp
jp
lds
pop
sbb
cmp
dec
dec
ret
mov
cmpsl
inc
inc
jmp
push
push
push
ja
mov
call
dec
and
mov
dec
cmp
cmp
loopne
and
cmp
mov
and
dec
cmpsl
sbb
jmp
mov
shll
xor
jne
pop
mov
dec
sti
ret
inc
adc
or
cmc
mov
mov
pop
push
inc
mov
das
mov
dec
arpl
mov
or
and
repz
xor
test
mov
pop
push
aas
xor
mov
nop
hlt
and
mov
sub
lret
lret
xchg
lcall
pop
xor
enter
mov
and
imul
add
test
rol
sbb
xor
cli
pop
andl
test
dec
shr
and
add
popa
imul
xor
xchg
mov
xor
int3
shlb
xchg
push
xor
jnp
jno
fldl
adc
sbb
ds
mov
cmp
pop
cmpb
jl
inc
pop
fnsave
and
xchg
push
in
lcall
mov
jmp
sub
imul
pop
mov
cld
es
pop
leave
imul
std
fimuls
scas
fstpl
pop
and
sbb
adc
shll
test
mov
xor
test
pop
arpl
pusha
sub
xor
call
fldl
data16
loopne
adc
ret
push
push
fs
mov
fstpt
jp
into
in
icebp
add
repz
cmovg
jp
xchg
fisubrs
mov
jg
ja
pop
or
fwait
jp
dec
mov
pop
dec
loopne
xchg
imul
out
jle
pop
xorl
call
subl
jmp
fnstsw
xor
sbb
into
out
arpl
pop
outsl
test
sub
jmp
rorl
sbb
fisubs
xchg
insb
lds
push
jno
pop
loop
daa
mov
xor
scas
push
pushf
test
inc
and
int
add
push
loop
xchg
xor
push
fists
out
outsb
daa
ror
push
jge
jo
sub
cmp
icebp
repz
fistpl
jl
dec
insl
dec
jl
gs
sbb
dec
push
movsb
gs
jl
jl
xchg
lods
cmp
jno
insl
shll
xchg
mov
aad
xor
cmp
xchg
lcall
in
lahf
sahf
inc
mov
add
std
leave
repnz
fisubl
inc
aad
push
jge
out
add
mov
sbb
pop
push
jg
test
sub
ljmp
lahf
gs
xor
pop
mov
loopne
js
jg
cli
jno
jae
rclb
fistpl
adcb
xor
jns
sub
sbb
push
cmpsb
lret
pop
ret
sbb
and
insl
jg
loopne
out
xchg
dec
inc
cmpsl
add
adc
and
sbb
out
cmp
mov
xchg
mov
sbb
and
imul
cmp
sahf
test
cmpsb
sbb
mov
cmp
fistpl
mov
pop
stos
fnstenv
fdiv
inc
mov
xchg
arpl
adc
mov
popf
andb
add
sbb
sahf
xchg
sbb
push
inc
push
out
inc
sbb
cmpsl
nop
adc
pop
mov
adc
dec
push
jae
dec
mov
sti
ja
lds
imul
data16
sub
dec
fwait
sub
adc
fsts
mov
outsl
lea
sbb
push
xor
lock
jg
push
arpl
and
pop
dec
cmp
pop
insl
mov
ds
and
mov
aad
dec
or
dec
dec
xlat
ret
lcall
lds
pop
lds
stos
lret
sbb
out
arpl
mov
enter
lret
jo
cmp
jo
pop
fwait
std
dec
insl
out
subb
sbb
fwait
mov
cmp
ret
aam
sbb
adc
das
aad
notb
and
ret
xchg
stos
ss
cmp
push
jo
push
xor
int3
xor
or
aaa
loop
fwait
rcrl
cvttps2pi
sbb
daa
jl
and
sahf
out
jmp
push
cli
ljmp
arpl
xor
or
mov
ret
pop
mov
scas
insb
rorb
mov
mov
sub
fildl
repnz
in
mov
push
fs
and
adc
cmpsb
or
imul
leave
sub
mov
popf
je
mov
test
jns
jecxz
cmc
mov
sbb
mov
lea
pop
push
jle
mov
outsb
mov
pushf
cli
inc
push
xor
xor
leave
ds
jns
inc
ds
imul
gs
sti
pop
dec
inc
cltd
push
pop
cmp
fwait
push
outsl
aas
mov
xor
dec
sbb
cld
mov
jge
mov
push
mov
mov
pop
xchg
clc
mov
rcll
mov
cs
inc
fsts
cmpsb
loopne
xchg
pop
imul
inc
pop
aad
sub
insb
jp
and
in
or
xchg
aaa
jg
sbbb
mov
orb
addr16
fwait
daa
aaa
subb
stos
ljmp
gs
xchg
push
mov
pop
js
pop
gs
imul
dec
jmp
fistpl
jns
test
insb
in
gs
push
cmp
lods
pop
fwait
sti
pop
or
xchg
data16
rcrb
xchg
das
outsl
add
inc
into
dec
int
or
ljmp
loopne
rol
pop
cmp
cltd
dec
in
fsts
sti
insl
lods
cltd
in
pop
out
pusha
sub
sub
lea
int3
adc
mov
out
ret
pop
xchg
dec
fsts
mov
imul
xchg
das
fdivl
add
inc
ljmp
je
cmp
and
hlt
jns
push
xor
jg
outsl
or
addr16
push
add
inc
adc
mov
inc
or
xor
ret
loope
mov
jae
in
fcmovne
sbb
add
mov
loopne
inc
mov
cmpl
or
aaa
cwtl
jle
mov
ret
jmp
or
sub
rolb
cmpsl
push
addr16
jp
shlb
sub
fwait
mov
mov
dec
fisttpl
mov
movsl
divl
sub
mov
fadd
push
xchg
mov
or
jno
add
mov
pop
xor
xchg
fldln2
leave
mov
in
ret
mov
in
lds
rolb
pop
lods
and
xlat
out
lods
and
aad
es
sbb
hlt
pop
insl
mov
sub
inc
or
popa
aam
fldt
cmp
xchg
inc
shll
mov
aad
jns
fsubrl
fistpll
jno
sbb
mov
bound
dec
sbb
in
ret
stos
mov
sbb
loopne
pushf
cmp
into
sti
add
push
mov
mov
lock
jmp
shrl
in
xor
lret
inc
sub
sbb
add
dec
sbb
mov
sbb
jl
pop
push
xor
pop
fbld
hlt
repz
sbb
adc
jns
imul
cltd
movsb
dec
mov
mov
mov
pop
loope
and
stos
jae
dec
std
jmp
mov
inc
out
ret
in
fmuls
xchg
inc
sarl
cmp
fcompl
push
add
loope
fstps
nop
push
in
dec
aam
cmpsl
ficompl
fwait
aaa
insb
repz
sbbl
inc
outsl
xlat
movsb
out
movsb
xor
rcrb
rcll
add
scas
jecxz
int3
test
frstor
jmp
and
push
push
dec
out
les
mov
das
jecxz
mov
jo
dec
mov
sbb
mov
sbb
pop
ror
push
push
repnz
adc
inc
mov
push
sbb
aas
or
test
mov
in
and
mov
out
xchg
pop
aad
cld
ja
cli
xchg
and
inc
repz
les
ret
jecxz
rcrl
mov
lret
jecxz
cs
fisttpl
sub
mov
cli
in
add
adc
jmp
mov
push
gs
jo
pop
pop
leave
mov
sbb
insl
roll
add
repz
push
jmp
testb
popa
mov
mov
popa
int
push
mov
xlat
mov
pusha
cmpsl
andl
inc
or
pop
dec
xchg
negl
xor
lcall
out
in
lock
sub
inc
inc
pop
and
xchg
fimull
negl
es
ljmp
insl
test
inc
call
je
jbe
inc
test
or
rep
mov
cld
js
mov
inc
jo
add
jecxz
and
xor
test
sbb
cmpsl
outsl
inc
push
inc
and
mov
mov
aaa
les
pop
push
dec
aad
xor
or
inc
sti
adc
dec
ds
jp
mov
fs
shrl
ror
fisubl
and
push
data16
int
lock
sbb
iret
dec
addr16
sub
mov
push
imul
xor
popa
inc
leave
xlat
ljmp
or
fsubs
dec
popa
frstor
jb
and
loope
cmp
and
mov
xchg
dec
mov
adc
imul
cmp
mov
sbb
mov
cmpsb
fistl
pop
ret
loop
sbb
jge
fmull
jge
lea
fxch
fldenv
iret
leave
fdivs
sub
cwtl
mov
jmp
imul
fcomps
push
cs
pop
pop
and
jns
cmc
sbb
andl
mov
lds
adc
push
leave
sbb
and
xor
ljmp
mov
cmpsl
pop
or
adc
dec
popa
out
xchg
push
sub
jmp
mov
add
pop
das
shr
sbb
jle
push
adc
stos
filds
mov
xor
in
loop
ja
mov
in
lcall
fs
divb
adc
xor
or
scas
fcoms
add
addr16
xor
adc
xchg
inc
jg
dec
in
aam
hlt
arpl
sbb
fistpl
test
addl
or
xchg
inc
fidivl
stos
movsb
aad
sbb
jns
lock
add
shll
out
jp
in
sub
jle
push
subl
sub
imul
xor
int
mov
mov
aaa
xchg
adc
inc
xor
pop
or
sub
repnz
dec
push
ret
nop
jp
enter
mov
or
inc
dec
push
lds
jg
xchg
xor
cwtl
pop
pop
xchg
loop
hlt
mov
inc
arpl
push
mov
mov
sub
stos
imul
and
into
es
imul
xchg
ret
add
ret
sbb
imul
ret
imul
fwait
add
xchg
push
in
orl
das
ss
jg
shrl
inc
and
pop
das
inc
push
iret
push
imul
or
imul
sub
lea
clc
ret
mov
jmp
dec
mov
lds
gs
cwtl
inc
inc
enter
xor
imul
addr16
pop
xor
jmp
stos
adc
ficompl
and
push
in
movb
fsubrs
sti
xor
and
jno
in
ja
push
dec
cmpsl
int
pop
cli
dec
rorb
sbb
insl
inc
pop
inc
inc
fcmovu
les
jb
pop
int3
and
inc
rcr
mov
sub
pop
aam
sbb
cmp
inc
cmp
jecxz
jg
aam
in
orl
repz
dec
and
sbb
cmpl
inc
out
push
sbb
jmp
xchg
ss
aam
les
test
pop
ss
cmpsb
cs
ret
out
xchg
fisttpll
xchg
lea
cmp
mov
sti
add
pop
addr16
inc
cmp
jae
push
leave
std
cs
jae
lret
lret
enter
inc
into
add
xchg
fistl
jecxz
cmp
or
push
pop
jb
inc
int
gs
push
inc
pop
mov
jae
and
imul
pusha
cmp
jmp
push
xchg
cld
in
sub
pop
dec
jmp
dec
mov
push
lock
or
jecxz
cmp
jns
and
cwtl
out
ljmp
sbb
ss
adc
in
jb
push
xor
xor
jp
xchg
cltd
popa
stos
inc
mov
cmpsl
dec
dec
aam
pushf
inc
mov
cli
mov
out
sbb
test
jns
xor
lret
insl
pop
addr16
sbb
ss
cmc
cmp
sti
or
sub
test
xor
push
adc
add
push
sbb
pop
jmp
js
and
imul
ljmp
sbb
pop
int3
pop
std
stos
or
in
xorl
cmp
popa
xchg
cmp
jle
pop
loop
aas
loop
inc
mov
ret
jp
jl
pop
mov
aam
out
out
adcl
xchg
hlt
inc
sbb
jno
aam
jp
pop
cmp
movsl
mov
icebp
in
cmc
jg
push
xlat
and
jns
jnp
addb
popa
or
xor
jle
add
mov
mov
ljmp
sub
inc
adc
out
movsl
loop
shlb
jbe
sti
jmp
dec
sbb
ja
or
jae
mov
movsl
rcrl
rcrb
dec
dec
xchg
out
lods
jne
adc
imul
xor
mov
jg
inc
jmp
mov
push
dec
mov
push
mov
pop
and
cmp
aas
repz
push
xchg
cs
adc
mov
mov
mov
mov
jns
jmp
fdivrl
mov
and
jecxz
mov
dec
jns
addr16
imul
cmp
pop
and
call
mov
dec
cld
das
mov
sbb
push
xchg
xor
add
stc
or
jae
out
or
pop
mov
dec
or
push
add
enter
mov
dec
sahf
jae
std
jnp
mov
xor
xchg
fiadds
or
in
ljmp
ret
je
andb
pop
leave
add
scas
jb
lock
shr
nop
ja
xchg
out
fwait
sar
mov
cmp
mov
sbb
sbbl
jl
inc
aam
mov
pop
mov
fsubp
mov
lcall
adc
notl
shll
shlb
sti
test
add
dec
data16
mov
inc
mov
sub
out
pop
repz
add
sbb
inc
push
and
mov
mov
popf
jb
popf
dec
pop
fstpt
xor
lret
add
arpl
movsb
rclb
dec
loop
loope
pop
pop
addl
inc
test
scas
subw
xor
fcmovnbe
fwait
sub
es
jne
loop
xorb
ja
loop
sbb
pop
out
jno
pop
pushf
arpl
adc
adc
jnp
pusha
mov
addr16
shlb
fdivrl
sbb
nop
and
add
out
cmpsl
divl
xlat
mov
ret
insl
mov
adc
pop
sbb
inc
adc
add
ret
mov
imul
loopne
in
movsb
jno
in
mov
cmp
sub
bound
mov
fldpi
push
or
stos
lcall
test
inc
cmp
cmp
ss
xor
sub
lea
fdiv
arpl
jl
in
ds
loop
jns
xor
pop
sbbb
sbb
outsl
jecxz
sbb
call
mov
icebp
sbb
push
xchg
jge
stos
shrb
sbb
cmc
cmp
lret
mov
push
mov
pop
dec
mov
and
test
das
xchg
jno
dec
xchg
inc
insl
scas
inc
mull
xchg
call
jmp
jnp
shl
jecxz
jmp
jp
pop
and
shrb
call
push
aam
ljmp
sbb
sub
jmp
sub
fsubrl
dec
jle
xor
icebp
pop
xor
inc
cmpsb
outsl
add
popa
xchg
call
or
cmp
fisttpll
aad
pusha
ret
inc
stos
movb
cmp
adc
in
mov
imul
mov
sbb
push
inc
jo
xchg
rorb
sub
stc
mov
lcall
cmpsl
mov
ljmp
out
ret
gs
dec
test
call
inc
arpl
outsb
stos
fnstcw
xor
ret
daa
repnz
outsl
add
dec
mov
das
ret
scas
jecxz
push
hlt
pop
pop
ret
je
xor
mov
mov
and
subl
lods
add
xchg
dec
outsl
add
test
cmpsl
repnz
cmpl
dec
push
fxch
sbb
les
xor
fistpl
sbbb
push
fwait
dec
ret
and
stos
or
xchg
cmovbe
scas
pop
test
mov
sbb
mov
pop
jge
push
jmp
xorl
gs
movsl
frstor
pop
loop
and
outsb
sbb
xchg
xor
leave
pop
int
out
adc
cltd
test
pop
dec
repnz
pop
popf
incl
mov
mov
insb
xor
insl
push
rcll
mov
insb
jae
insl
out
insl
jge
push
xor
arpl
aam
sti
sbb
dec
out
les
mov
insl
mov
ret
mov
int
adc
push
add
mov
dec
imul
inc
fistps
mov
adc
lret
cmp
cmp
inc
cmp
pop
push
jmp
push
cmp
cmp
imull
movsb
xlat
and
or
andb
aaa
inc
out
imul
fmul
nopl
daa
cmc
inc
ret
and
bound
lcall
mov
imul
in
pop
push
pop
scas
sbb
or
das
in
pop
fcoml
cltd
push
xlat
push
pop
pop
enter
or
mov
ret
lcall
test
xor
test
scas
and
push
mov
test
cmp
fstps
cli
push
imul
pop
sbb
leave
cmp
inc
loopne
movsb
insl
mov
mov
in
testl
jmp
cmpl
fstps
addl
jle
mov
lods
loopne
fsubrs
hlt
popa
pop
jmp
fsubrl
pushf
push
xchg
pop
inc
leave
lock
lret
shlb
out
inc
lcall
xor
iret
mov
sub
inc
pop
sti
push
fisubs
mov
pop
pop
xchg
ds
outsl
sbb
push
mov
mov
jb
push
fcmovnb
outsl
dec
pop
jecxz
lahf
call
out
pop
xor
pop
fdivrs
push
test
pop
sbb
enter
into
test
roll
jnp
out
sti
popa
mov
lret
or
call
xor
ss
mov
inc
inc
dec
ret
cmp
stc
rol
ja
push
inc
int3
rcrl
add
jne
rcl
inc
sti
aas
sbb
sar
fadds
sarl
rclb
enter
movsb
sbb
mov
mov
pop
ljmp
inc
add
fisttpl
push
push
test
orl
sbb
or
jl
jp
out
mov
mov
ret
roll
pop
mov
jb
popf
dec
pop
int
xor
adcl
test
test
insl
imull
int
les
sbb
loopne
jbe
jl
sbb
mov
fstpl
popa
inc
das
movsl
sti
insl
inc
fstps
sbb
sbb
fcmovne
and
pop
jnp
sbb
std
and
addr16
inc
pop
aas
addr16
outsb
repz
mov
sub
fimuls
jecxz
cmpsb
dec
shl
test
out
or
mov
mov
xor
xchg
sub
aaa
dec
cmpsb
std
call
xchg
inc
ret
cmpsl
pop
jns
cmp
hlt
push
stc
gs
or
sti
out
inc
dec
xchg
popa
enter
in
push
aas
ret
pop
leave
push
jae
pop
lret
jecxz
int3
dec
push
les
xlat
icebp
mov
pop
addr16
push
jmp
dec
sub
test
sbb
fdivl
sbb
call
mov
rclb
test
pop
and
arpl
leave
push
hlt
insl
inc
xlat
scas
in
sti
pop
push
fcmovnbe
mov
in
mov
sub
imul
xchg
inc
dec
sub
pop
int3
fsubrs
jmp
inc
fidivrs
popa
sub
lods
pop
lods
mov
scas
aam
and
xor
sahf
enter
inc
daa
cli
fwait
imul
fwait
cli
mov
ljmp
and
mov
pusha
sub
and
fnstsw
btr
daa
and
lds
and
fdivs
fisttpll
fcoms
mov
repz
adc
jb
mov
gs
pop
inc
mov
and
fwait
in
and
xchg
fldl
cs
cmpsl
aaa
fwait
jo
rorb
or
cltd
jl
test
nop
repz
jmp
inc
sub
ss
pop
rcr
aas
mov
push
inc
jmp
in
xor
jns
gs
out
sub
loopne
xchg
lock
imul
fisubrl
nop
inc
push
xchg
mov
push
test
dec
imul
int3
dec
stos
inc
xor
fsubrl
ja
lds
imul
lret
repnz
lahf
push
jmp
dec
cmpsb
cltd
inc
xchg
jbe
sub
jno
mov
mulb
pop
std
cmpsl
fst
jne
in
xor
xchg
adc
subl
push
lahf
inc
xchg
rcr
push
jmp
cmp
add
clc
dec
pop
xor
pop
pop
rcl
or
nop
scas
adc
mov
jp
add
xor
sbb
mov
lods
xor
and
inc
sarl
and
cmp
insl
stc
lret
fcmovnbe
mov
and
mov
xlat
popa
rcrl
call
call
mov
sub
inc
jmp
dec
or
fidivrl
scas
add
cmpsl
pushf
stos
jne
pop
andl
stc
fidivrs
addr16
incb
stos
push
sarb
jmp
bound
pop
ret
data16
cs
or
adc
out
inc
push
sub
mov
add
andl
inc
jmp
fnstcw
repz
in
fnstcw
jno
sbb
push
nop
mov
call
std
call
frstor
sbbb
dec
aad
test
xchg
lahf
mov
aaa
add
sbb
add
cmp
cmc
push
add
insb
insb
jmp
stos
pop
lcall
stos
sbb
fbld
movsb
jnp
sti
xor
jmp
mov
fneni(8087
or
xlat
mov
int
jecxz
mov
ja
cmp
pusha
mulb
push
add
xchg
pusha
inc
xchg
ret
jno
inc
pop
fldenv
cmp
xor
dec
inc
xchg
nop
cmpsb
push
xchg
fstpt
clc
cmp
ss
dec
jp
and
out
and
mov
pop
scas
mov
sbb
dec
insl
popa
add
loope
push
int
jmp
mov
gs
push
test
xor
cld
out
pop
sbb
inc
popa
faddl
fsubs
sub
fwait
push
or
sub
loopne
mov
fsub
sbb
aaa
pop
inc
cmc
push
lret
mov
test
sub
lea
fadds
lahf
aam
ret
jnp
jp
data16
and
push
pop
dec
ds
inc
test
sbb
imul
lods
xor
mov
mov
xchg
in
rorb
aam
sar
dec
das
jbe
lock
mov
cmp
mov
out
sub
js,pn
add
push
icebp
inc
fsub
xlat
popa
jmp
and
sahf
ret
mov
clc
lds
pop
gs
sahf
into
ds
ret
cmpsl
dec
movsl
icebp
jbe
adc
adc
rolb
add
inc
inc
test
dec
and
mov
ret
rol
fdivrp
das
test
fs
loop
push
xchg
jb
in
insl
in
pop
adc
sbb
and
xchg
push
dec
mov
popf
mov
loopne
fisubl
and
mov
pop
sbb
mov
lock
sbb
in
stos
mov
je
cmp
add
add
inc
dec
gs
inc
xchg
aas
out
out
fstpl
out
xchg
ja
mov
vpshaq
jnp
imul
insl
lret
jge
sbb
popa
add
in
push
xchg
xchg
xchg
inc
stos
add
aam
push
popa
mov
sbb
fidivs
bound
xchg
mov
and
leave
shl
sbb
fsubrs
sbb
in
push
rcrb
and
pop
mov
xchg
sub
inc
jecxz
fadd
addl
xchg
cltd
dec
into
add
aas
testl
pop
imul
inc
cmp
xor
in
cmp
lahf
loope
cmp
out
add
sbb
mov
ds
xchg
sbb
jmp
subps
jne
or
mov
mov
lods
ss
gs
xchg
push
mov
sbbb
pop
ret
push
inc
movsl
push
adc
xor
cmpsb
dec
out
cmpsl
push
xor
pop
add
inc
inc
lcall
xchg
lret
mov
roll
ja
sbb
les
and
push
lahf
xchg
ljmp
out
mulb
decb
and
pop
push
sahf
gs
mov
mov
stos
mov
mov
fwait
mov
fwait
mov
mov
inc
dec
sbb
shrb
in
push
cli
roll
in
jno
jne
fsts
mov
xchg
repnz
jge
jecxz
mov
jae
lret
mov
mov
push
in
or
or
outsl
fcompl
cmp
aas
lock
sti
insl
mov
inc
lds
pop
mov
and
ret
xchg
stos
cmp
imul
push
and
pop
in
inc
cmp
lcall
fadds
mov
push
loopne
inc
push
cmpsl
loope
jmp
sub
dec
lahf
mov
and
gs
xchg
mov
ja
xchg
sarb
inc
aam
xor
cmpsl
loope
addb
dec
pop
mov
cmp
sbb
add
and
pop
cmpb
cmc
jo
xchg
sbb
jno
and
aad
test
inc
jno
sub
pop
ds
shll
fldcw
push
and
push
fnstcw
push
dec
mov
mov
lahf
in
int3
adc
aad
ds
inc
jle
xchg
fmuls
repz
dec
lea
mov
add
sbb
push
bound
clc
dec
pushf
je
aaa
mov
test
cmpsl
mov
xor
xchg
stos
enter
mov
data16
push
popf
and
adc
xor
test
and
push
and
faddl
xor
and
mov
nop
mov
jns
mov
out
xchg
fimull
sbb
loop
mov
lcall
aaa
out
push
xor
inc
rolb
xor
orl
push
cmp
push
repz
sub
and
xchg
test
sbb
repnz
jl
lods
mov
push
popa
adc
sbb
rclb
pushf
and
incl
popf
mov
cmpsl
mov
ret
sbb
xchg
int
and
dec
pop
or
push
jnp
cmc
out
cmp
or
imul
fcomps
mov
mov
pop
dec
cmp
xchg
aas
pop
test
and
pop
jbe
add
ret
aas
in
inc
xor
arpl
hlt
and
jp
inc
imul
divl
mov
icebp
pop
imul
sbb
loopne
hlt
mov
push
inc
cmpl
loope
mov
dec
push
pop
pusha
mov
je
inc
rcl
cmp
lcall
popa
push
imul
cmc
negl
sti
cmpb
add
and
scas
xor
imul
push
filds
stos
mov
call
sbb
lcall
insl
push
out
inc
fldt
cmp
sub
add
xchg
xor
xor
mov
in
repz
and
sub
jmp
adc
push
aaa
sbb
dec
add
inc
insl
mov
in
inc
add
out
mov
sub
push
push
dec
popf
jae
mov
push
jnp
push
dec
ret
imul
dec
add
lret
rcr
inc
and
sahf
in
insb
sbb
imul
or
decb
mov
ds
dec
faddl
mov
xchg
or
ret
or
xor
fwait
mov
hlt
ljmp
xchg
mov
out
push
sbb
inc
adc
cmpsl
push
mov
pop
aam
sub
scas
fxch
in
shll
lea
sbb
sbb
cltd
inc
xchg
lret
mov
cs
push
cmp
xor
push
in
popa
data16
dec
mov
push
add
push
jno
fisubrl
imul
xchg
mov
xor
xchg
movb
adc
jecxz
mov
mov
adc
dec
dec
fnstsw
cs
icebp
mov
xchg
jge
fcmovnu
mov
dec
xchg
rorb
fbld
jmp
or
adc
mov
inc
pop
cmp
dec
gs
cmp
xchg
cltd
movsb
xchg
jo
lret
sub
cmp
stc
jl
es
lcall
xchg
gs
jp
es
out
jo
push
pop
shl
das
add
pop
xor
out
pop
mov
icebp
push
sbb
bound
jle
inc
loopne
imul
enter
push
mov
jg
leave
jo
fdivp
dec
int3
dec
testl
xlat
mov
pop
pop
pop
mov
xor
push
and
jno
mov
out
and
xchg
bound
stos
pop
in
xchg
push
ljmp
inc
dec
call
push
pop
insl
fildl
imul
pop
jb
add
dec
add
jno
inc
loop
pushf
and
cmpsl
sti
adcl
mov
push
push
in
xlat
fmull
enter
pop
pushf
inc
mov
xchg
and
sti
fbstp
mov
pop
push
inc
ret
cmp
push
outsb
stos
and
mov
pop
dec
fcomi
into
ret
pop
aas
out
sbb
stos
jne
sub
pop
push
lea
push
test
repz
std
xchg
dec
sub
cmpsl
xchg
push
ja
fists
cmp
push
pop
mov
and
sbb
sbb
aas
popf
outsl
fwait
rcrl
loop
xchg
jb
inc
push
nop
out
pop
cld
add
rol
ret
mov
inc
xchg
or
fcmovbe
mov
xor
ret
sub
fnstenv
outsl
and
popa
push
je
pop
xchg
pop
pop
adc
dec
dec
jmp
hlt
aad
or
dec
fcmovu
nop
pop
sbb
inc
ss
and
xchg
in
push
sahf
cmp
adc
mov
add
xchg
inc
nop
sub
sbb
pushl
clc
stos
sbb
jge
xlat
test
sti
ja
loop
dec
in
adc
out
aas
fimuls
jb
scas
ret
jmp
dec
mov
mov
jle
fcompl
in
cmpsl
rcl
pop
xchg
push
in
xchg
or
sbb
or
repz
rolb
mov
lcall
cltd
insb
enter
popf
shll
test
sub
push
pop
pop
cmp
xchg
xchg
pop
frstor
js
pop
push
ret
faddl
fcoml
rcrb
fs
test
xchg
mov
cmpsl
mov
gs
lcall
lods
notl
jp
into
cwtl
cld
mov
cmp
aas
mov
rcrb
cmp
jnp
push
rclb
leave
mov
dec
inc
jbe
and
popa
fsubrl
js
sbb
ret
aam
push
or
jecxz
cmp
xor
imul
xchg
fldenv
sbb
testb
push
pop
int3
insb
mov
cmpsl
movl
cmpsb
push
pop
stos
out
cmp
or
cmc
mov
loop
xor
push
jecxz
fstp
pop
imul
xor
mov
test
mov
pop
nop
xchg
fwait
mov
jecxz
lret
in
cltd
pop
insl
sbb
in
push
loope
cmpsl
outsb
gs
repnz
cld
jecxz,pt
xacquire
add
add
scas
cmpsl
mov
mov
out
out
dec
cwtl
in
filds
scas
dec
and
inc
lret
adc
xchg
inc
rsqrtps
andb
mov
push
mov
sub
jl
adc
inc
xchg
jae
pop
mov
jne
pop
sbb
test
je
adc
mov
jl
add
cld
pushw
ljmp
cmp
out
jmp
pop
enter
mov
imul
fucomi
pop
dec
insl
subl
inc
call
ret
inc
mov
mov
imull
leave
sub
cli
fistps
enter
jecxz
xchg
fwait
lods
mov
int3
sbb
pop
dec
into
xchg
add
pop
inc
jecxz
imulb
fidivrl
push
loop
inc
push
jecxz
push
faddl
sub
xchg
pop
pop
or
xchg
or
pop
fdivl
out
nop
mov
and
sbb
enter
push
idivb
xchg
imul
pop
xchg
add
mov
or
dec
lods
cmpl
stos
xchg
bound
xchg
lods
jmp
or
push
jo
movsb
fmull
mov
sub
lods
pand
mov
jae
jecxz
out
inc
cmpsl
lcall
jno
push
mov
inc
stos
xor
xchg
mov
push
int
imul
ja
dec
jns
lea
dec
call
aam
mov
xchg
xchg
arpl
jecxz
test
movsl
fidivl
rcrb
jecxz
xchg
xor
mov
and
xor
jl
jnp
call
xor
popl
jns
add
test
jmp
lea
inc
jo
and
lods
cli
neg
mov
xchg
dec
add
mov
and
pop
push
fsubrs
jmp
popa
inc
inc
outsb
fmul
push
jb
aaa
mov
push
repz
jmp
xchg
inc
lods
stc
add
inc
stos
jbe
sub
aam
insl
sub
mov
mov
es
mov
test
mov
pop
cld
push
fwait
inc
jge
xchg
and
push
mov
scas
insl
cwtl
in
mov
vandps
mov
cmp
in
push
push
inc
and
xchg
decl
clc
popa
rcrb
xchg
fsubl
cs
dec
push
imul
sahf
and
xchg
mov
mov
sbb
add
pop
pop
leave
imul
ja
mov
xchg
ret
xchg
mov
pop
cmpsb
jae
add
xchg
jmp
xchg
xor
or
cmp
ss
cmp
ret
popa
sbb
movsb
lock
and
and
ret
inc
fsts
and
and
adc
xor
jecxz
pop
addr16
xchg
jp
mov
into
mov
jne
test
push
cmpsl
addb
ret
adc
dec
nop
popa
out
pop
cli
xchg
daa
imul
inc
inc
inc
xchg
sbb
es
dec
mov
sub
sbb
sub
fcmovbe
movhps
add
divl
mov
hlt
and
inc
dec
andl
mov
adc
cmp
rol
dec
aam
icebp
jle
mov
movlhps
sbb
and
sbb
shl
push
fildl
cwtl
loope
adc
and
push
sub
pop
test
sti
pop
mov
pushf
pop
xchg
jo
mov
cld
inc
inc
test
jno
adc
das
mov
mov
or
les
mov
and
rolb
push
negl
mov
enter
scas
inc
mov
xor
sub
sub
fisttpll
pop
mov
pop
fdiv
mov
dec
sub
cltd
mov
jecxz
mov
iret
mov
fdivl
xor
cmp
popa
or
mov
nop
dec
jg
mov
pop
mov
pop
ret
fwait
dec
jnp
les
jns
inc
mov
ja
std
xor
inc
les
jl
inc
inc
fidivs
sbb
pop
add
imul
cmp
bound
sbb
jns
cmpsb
popa
std
pop
sti
xorb
cmpsl
lahf
int3
and
dec
sbb
jne
jge
xor
dec
jle
xor
mov
push
jne
stos
sarl
or
mov
mov
inc
inc
push
ss
les
sub
loope
lds
lcall
mov
jmp
nop
fldl
xchg
out
gs
dec
sub
imul
leave
arpl
xchg
pop
aas
inc
mov
into
ret
mov
jno
xchg
ficompl
jmp
xor
iret
add
shrl
rcrl
cltd
arpl
cmc
rcrb
iret
out
mov
dec
cmc
sub
push
sbb
pop
pusha
and
out
aad
outsb
sahf
aas
mov
and
jmp
stos
inc
mov
mov
mov
or
and
fcoml
add
andb
dec
mov
rcrb
outsl
inc
add
push
out
mov
test
mov
mov
aam
or
jns
fadd
fcom
jle
minps
imul
pop
out
rorl
mov
and
scas
push
pop
pop
pop
out
ror
ror
dec
xlat
sbb
je
shl
mov
dec
inc
push
push
push
xchg
jb
lahf
xchg
push
xorl
test
add
jmp
push
lret
outsl
push
cmc
mov
sub
xor
mov
aam
add
jb
dec
sbb
mov
inc
lea
jge,pt
jecxz
dec
mov
out
mov
dec
aaa
mov
mov
pusha
push
mov
fstps
cld
inc
lods
gs
add
loope
ret
and
lret
jno
ljmp
or
and
imul
arpl
std
sub
out
aas
cmp
or
sbb
enter
fs
popf
and
pop
popa
inc
adc
dec
loopne
cmp
sti
adc
push
inc
dec
mov
sbb
xor
and
jecxz
rcr
jbe
sub
mov
gs
xorb
rorb
cmpsb
adc
jne
popa
outsl
adc
adc
daa
and
jg
mov
adc
ja
es
psubq
pop
jecxz
dec
sbb
sbb
out
jne
loopne
sbb
adc
stos
ljmp
adcl
cmpsl
dec
jae
sbb
aad
sbb
loopne
add
adc
mov
xor
fistps
pop
push
std
mov
pop
rorb
leave
mov
out
ljmp
repz
aas
addr16
ret
daa
lea
enter
sub
push
fmull
je
out
inc
lahf
pop
insb
stos
add
mov
dec
sti
insb
lods
jb
xor
aam
mov
mov
gs
mov
jmp
fmull
sbb
fsts
push
arpl
pop
notl
popa
xor
xchg
cmp
sbb
and
and
xchg
mov
ds
add
lcall
data16
ljmp
lcall
mov
dec
adc
shrb
xor
jle
jno
in
push
add
cltd
push
flds
iret
mov
cltd
jne
mov
xlat
xor
inc
mov
xlat
and
lods
dec
shl
aam
std
dec
popa
fwait
xor
insl
and
popa
jnp
stos
pop
jns
stos
test
pop
pop
add
movsb
stos
ds
xchg
xor
mov
inc
mov
in
and
xchg
or
or
or
addr16
xchg
movl
fnstenv
xorb
test
inc
xchg
imul
addr16
fcomip
insb
cmc
adc
stos
adc
xchg
or
mov
fwait
sbb
rcll
push
inc
mov
hlt
fs
sbb
sbb
in
das
jmp
mov
mov
push
mov
jecxz
mov
mov
popl
stos
xor
lock
test
xor
ficoms
scas
lcall
jns
pop
pusha
outsl
mov
cmp
pop
hlt
mov
lods
pop
xor
popa
into
mov
and
push
push
outsl
pop
add
sarb
and
leave
sbb
add
mov
mov
lahf
push
inc
lock
cltd
fnstcw
fsts
mov
jno
sub
cmp
push
inc
rclb
xchg
jmp
aad
pop
push
dec
pop
inc
in
scas
scas
addr16
leave
aad
testb
insl
hlt
cs
add
in
dec
sbb
and
fsincos
shrb
in
pop
pushf
ret
cmp
sbb
cmp
idiv
popf
xchg
xor
mov
aad
loopne
dec
aam
clc
mov
neg
xchg
pop
add
mov
test
xlat
jmp
pop
out
fwait
sub
push
mov
pop
fsub
pop
fcomp
adc
mov
cli
push
pop
in
lahf
sbb
inc
iret
push
push
push
dec
pop
loope
jno
imull
cltd
adc
in
rcrb
insl
sub
ss
popa
inc
sbb
add
jecxz
xor
lret
jge
xchg
push
ret
mov
mov
pop
sbb
mov
nop
fstpt
out
mov
andl
adc
xor
stc
outsl
out
sbb
sub
loop
sbb
add
pusha
sbb
out
dec
rclb
lahf
imul
cmp
insb
jno
inc
jo
dec
cld
xor
out
int
sbb
aas
icebp
pop
arpl
pop
mov
pop
out
adc
inc
std
int3
dec
orl
xchg
addr16
ret
push
xor
fndisi(8087
xchg
loope
pop
fdivrs
aam
xor
inc
sub
sbb
pop
lock
mov
cmc
add
push
adc
or
testb
pusha
sbb
pop
mov
imul
inc
fsubrl
mov
ret
test
cmp
andl
imul
xchg
sbb
cs
les
pusha
insb
dec
movsl
dec
lds
and
xor
lods
inc
sahf
xor
jge
ljmp
push
jnp
xlat
push
sbb
sarl
jecxz
fwait
ja
lea
or
in
std
mov
jns
loope
in
xorl
mov
es
jbe
mov
das
sbb
and
xchg
jl
xchg
adc
xor
push
imul
popf
fisttps
push
daa
adc
pop
push
dec
cmp
push
cltd
in
mov
mov
stos
rorl
loop
aas
movntq
fmull
mov
pop
mov
mov
sub
xor
mul
sar
les
mov
aas
or
mov
pop
imul
rcrb
mov
in
sahf
lret
mov
inc
cltd
pop
bsf
add
push
pop
mov
sarl
inc
mov
cmpl
jl
in
mov
add
adc
sbb
xchg
ljmp
fndisi(8087
out
mov
das
daa
ffree
xor
stos
xor
inc
mov
lock
or
out
in
mov
mov
stos
mov
inc
lcall
andl
mov
aaa
enter
adc
sbb
push
dec
jecxz
dec
jg
inc
lcall
mov
arpl
or
jae
int3
rclb
addb
cmpsl
std
lcall
out
test
ficoml
ljmp
push
cmpsl
jmp
dec
mov
pop
push
dec
mov
or
fwait
das
lock
mov
jbe
insb
inc
dec
imul
mov
in
icebp
lods
xor
sbb
popa
movsb
cwtl
xchg
and
mov
jno
repz
sbb
pop
out
outsb
sahf
fimuls
fisttps
lea
add
inc
cmpsl
scas
fdivr
fdivp
jmp
enter
mov
das
or
mov
jmp
into
xchg
jno
sti
std
addb
mov
xchg
push
scas
xchg
jl
aas
jp
pop
cmp
and
mov
hlt
ljmp
adc
sti
xor
jmp
add
stos
jp
sub
jmp
and
jnp
jb
cld
xchg
xchg
imul
jno
adc
in
leave
mov
js
jae
add
inc
arpl
lcall
xchg
insb
xor
xlat
stos
leave
faddl
dec
xor
jno
outsl
ret
hlt
leave
pop
mov
sti
pop
jmp
pop
fistps
xor
pop
std
testl
fisubrs
std
insb
imul
movsb
arpl
insl
das
testl
mov
movb
out
imul
call
lods
lcall
cmc
shl
xchg
push
fdivl
jo
in
ret
xchg
fdivrs
add
mov
lds
and
xchg
xor
jno
stos
inc
imul
pop
fcmovbe
pop
sbb
je
mov
sbb
ja
les
mov
insl
jmp
sub
ret
iret
adc
hlt
das
push
xchg
inc
shll
add
jecxz
sbb
pop
in
xlat
xlat
les
aas
sbb
fwait
iret
ljmp
stos
sub
xor
inc
rclb
cmpsl
nop
pop
into
out
pop
fists
cmp
xor
loope
movsb
andl
jo
int3
lods
mov
push
fcomp
das
cs
adc
lcall
jl
sti
xchg
cmp
js
je
rclb
pop
popa
stos
jecxz
jecxz
sub
ss
mov
xchg
add
jl
call
fisubs
push
fwait
fwait
mov
mov
icebp
or
xchg
test
int
scas
popf
fisubrs
mov
mov
dec
pop
sbb
hlt
je
data16
cli
gs
jecxz
mov
cmp
mov
gs
int3
mov
add
xchg
mov
xor
lds
or
dec
movsl
out
xlat
jmp
scas
jecxz
loopne
push
test
push
jge
insb
sub
fwait
mov
mov
sbb
adc
xlat
aas
adc
movsb
xor
call
stos
pop
cmp
enter
jl
mov
xor
scas
inc
test
movsb
jnp
xchg
call
scas
dec
fdivs
pop
mov
mov
mov
pop
subb
sbb
add
xlat
in
arpl
push
and
push
sub
imul
dec
rcrb
fcoms
lods
fcompl
or
mov
cmp
test
inc
dec
hlt
push
pusha
das
inc
pop
cmp
mov
fcompl
insl
lcall
xchg
js
scas
push
je
in
popf
sub
lods
aaa
pop
jbe
jp
sbb
cld
pop
xchg
jecxz
ret
jp
call
leave
fxch
and
test
jmp
inc
push
ret
jno
mov
push
push
adc
dec
clc
fcomps
sti
cmpsb
push
sti
dec
pushf
jnp
push
stos
add
cld
and
fwait
scas
sbb
or
movsb
push
ret
lods
dec
inc
pop
cwtl
inc
lock
and
test
push
mov
arpl
cmp
dec
add
arpl
negb
sbb
ljmp
sub
dec
or
push
ljmp
fwait
enter
into
jecxz
popl
and
imul
cmpsl
mov
ret
loope
mov
iret
rcll
andl
cmp
out
scas
movsb
sub
mov
mov
jg
mov
mov
inc
mov
std
pop
arpl
add
lods
jmp
add
xor
in
or
imul
dec
out
jecxz
into
ja
pop
mov
xchg
popa
pop
push
jno
add
leave
xchg
cs
jmp
popa
ljmp
dec
fcompl
xlat
adc
cmc
mov
call
movl
in
inc
mov
gs
cli
into
enter
loope
andl
sbb
insl
push
adc
addr16
push
cmpsb
test
movsb
mov
pushf
sbb
jae
ljmp
inc
fwait
jge
in
xchg
jecxz
fidivrl
enter
or
clc
pop
pop
sbb
sbb
and
add
and
mov
out
out
daa
pop
int
mov
out
les
xor
es
dec
leave
sbb
aad
cwtl
cli
mov
mov
lea
or
sub
or
ror
insb
or
lds
dec
sbb
repnz
fst
fdivp
frstor
dec
sbb
jne
scas
addr16
in
mov
cmc
pop
xlat
sbb
idivl
das
add
lahf
stos
dec
lods
fbld
test
cmp
ljmp
test
loop
shrl
push
lods
mov
cmpb
imul
lods
imul
adc
ss
enter
cmpsb
add
in
nop
lds
inc
stos
fisttpl
dec
lods
aad
jle
mov
xchg
fdivrl
mov
aad
lcall
cmp
ror
xchg
xor
sub
jp
jecxz
pop
int3
in
dec
aas
fdivrs
int3
mov
and
sti
mov
or
dec
xor
inc
mov
enter
push
aaa
fistpl
jp
cltd
fldenv
imul
push
dec
lret
enter
pop
dec
push
test
fcompl
cmpsb
jnp
sub
cmp
adc
pop
ljmp
aad
es
scas
inc
mov
std
jmp
sahf
mov
adc
fst
and
inc
cmpsb
and
fwait
stos
adc
sbb
leave
enter
mov
jecxz
cltd
imul
imul
dec
and
mov
pop
pop
jl
mov
push
sbb
insl
inc
sbb
test
fs
shl
mov
cmp
enter
cmp
dec
ret
repz
test
aas
add
mov
test
shl
es
mov
fnstenv
mov
pop
fmull
push
cld
sub
loope
in
push
push
not
call
inc
sbb
lds
cld
sub
lea
js
jge
mov
sbb
jp
and
mov
mov
int
mov
repz
jmp
fsubs
push
jg
int3
rol
and
lret
loopne
in
add
in
sarl
loop
inc
pop
dec
push
adcl
stos
aas
ret
addr16
xchg
adc
ret
adc
fidivrl
std
jmp
ljmp
aam
cmpsl
lds
cmp
lret
fidivl
mov
outsb
insb
mov
test
xor
aam
int
mov
std
add
cmp
inc
lds
stc
lret
dec
out
push
stos
lret
mov
outsb
push
cli
mov
sbb
inc
sarl
jne
in
outsl
jge
inc
pop
out
in
sti
aas
inc
xor
jmp
gs
sti
mov
fdivr
loop
pop
adc
xchg
into
cmp
mov
mov
sub
jge
sbb
int
aad
fsub
xor
dec
xchg
enter
les
dec
leave
outsl
int
scas
inc
int
js,pt
xchg
ja
lods
fldl
push
imul
xor
jmp
pop
sub
push
mov
imul
cmp
xchg
and
mov
inc
inc
jo
dec
xorb
loopne
cld
mov
fstpl
xlat
mov
stc
aad
and
xchg
and
lds
divl
xchg
in
xchg
test
jne
jae
mov
out
xor
imul
jmp
sbb
std
push
lea
cld
fiadds
hlt
aaa
lods
or
pop
dec
sbb
out
mov
insb
cmp
push
pop
mov
adcl
push
adc
popa
xchg
dec
out
sbb
mov
jne
sub
cltd
jle
rcrl
gs
out
mov
sbb
sbb
gs
xchg
pop
test
daa
jae
xchg
cmpsl
loope
add
push
mov
stc
inc
pop
pop
jmp
mov
out
dec
push
jno
aad
ret
pop
cmp
inc
shll
dec
or
out
jbe
pop
pop
xchg
imul
int3
jmp
jne
xchg
iret
cmpsl
sbb
roll
pushf
insl
dec
mov
xchg
movsb
ljmp
ljmp
sbb
fimull
out
jge
or
ret
ljmp
jne
xchg
insl
or
aas
mov
push
mov
sahf
dec
mov
add
or
xchg
ret
sub
or
lds
push
loopne
hlt
cli
add
ds
and
outsl
sbb
dec
fsubrs
lds
adc
mov
adc
sub
pop
mov
mov
sbb
in
cmp
cmp
jns
xchg
mov
je
xchg
loopne
insl
jge
lret
sahf
dec
ds
mov
repz
xor
dec
outsb
or
mov
sbb
call
dec
popl
lahf
aad
fidivl
jge
fucom
jmp
sbb
out
inc
jmp
sahf
mov
push
aas
outsl
dec
and
push
mov
mov
stc
jecxz
jl
enter
push
mov
cmp
xlat
xor
sbb
scas
out
adc
iret
add
cmp
fiadds
sti
mov
mov
aaa
sub
cli
sub
xchg
cmp
in
cmp
adc
js
inc
or
shrb
xchg
jle
pusha
pushw
aam
ljmp
or
mov
icebp
fildll
dec
les
jg
mov
rcl
rcr
mov
inc
adc
repz
sbb
jecxz
out
cmp
adc
popa
incb
and
jecxz
mov
dec
std
xchg
iret
xchg
nop
std
mov
in
lods
dec
adc
cmp
fsubs
mov
sbb
mov
stos
and
aam
fisttpl
mov
stos
xlat
sbb
cmc
add
xchg
push
aam
ficomps
fnstenv
rcr
jae
push
movsl
mov
mov
push
das
lret
adc
mov
jg
leave
xor
sbb
push
jmp
daa
fwait
enter
rorb
jmp
and
loop
mov
insb
pop
test
imul
inc
inc
and
movsl
jno
jmp
jnp
test
push
lods
rorl
call
lds
xor
or
jns
inc
fwait
shl
movsb
adc
fisttps
pop
cmpsl
movsl
dec
jecxz
stos
loopne
mov
fnstenv
rol
push
lcall
cwtl
loopne
inc
push
xor
int
sbb
into
mov
sbb
dec
jg
mov
jnp
xor
mov
xchg
dec
ss
enter
push
cli
push
and
adc
pop
frstor
imul
stc
fistpl
sar
mov
cmp
and
jecxz
js
adc
add
xchg
and
lods
lahf
sbb
lods
or
inc
stc
and
pop
jmp
fidivrl
insl
and
cld
or
orb
mov
cmpl
adc
cmp
xlat
mov
faddl
ds
mov
fstl
inc
xchg
sbb
sub
in
dec
sub
pop
ret
xchg
test
mov
fsubrl
lods
jmp
test
mov
ds
frstor
pop
jmp
fsubr
xchg
leave
inc
imul
sbb
jge
arpl
lahf
inc
cltd
fnstcw
rorl
xor
jno
jnp
pop
mov
in
fstpt
pop
jg
not
clc
sahf
fnsave
mov
add
cmp
jmp
mov
out
pop
insl
fwait
dec
adc
adc
sub
rcrl
faddl
arpl
sarl
scas
cs
or
pop
rol
iret
sbb
leave
mov
aam
or
add
aas
jns
sub
dec
das
mov
push
rorl
leave
das
jl
dec
jmp
add
arpl
mov
rol
inc
fistpl
das
fwait
sarl
xlat
sbb
xor
js
mov
imul
ret
xor
pop
lock
xchg
pushf
cmp
dec
pop
insl
or
push
push
add
and
cmpl
xlat
cmpsl
subl
jecxz
pop
lds
and
lret
sti
xor
jno
shlb
aad
call
xchg
sub
jle
xchg
lods
mov
xchg
jecxz
mov
xchg
pop
pop
or
xor
scas
out
stos
mov
ds
cs
and
lods
xchg
xchg
pop
and
or
test
aam
iret
push
push
jmp
dec
pop
cmp
jnp
cmpsl
mov
mov
int3
cs
adc
mov
pop
ret
ror
ds
dec
shr
push
jnp
push
pop
inc
adc
test
fwait
inc
test
movsl
test
add
pop
inc
or
sub
mov
leave
dec
sbb
mov
inc
ret
inc
jnp
pop
inc
stos
stos
fsubl
add
xor
mov
test
push
mov
mov
lret
mov
push
lahf
inc
out
inc
mov
sub
fnstsw
rol
inc
fwait
or
addr16
enter
adc
icebp
sarl
inc
sti
and
sbb
lahf
inc
pop
mov
pop
push
fsub
xor
std
aam
notb
push
adc
inc
adc
xlat
inc
in
enter
pop
fwait
jno
xor
mov
mov
mov
jmp
scas
fisubrs
cs
test
dec
pop
fstpt
sbb
fildll
mov
stc
sbb
pop
xchg
xor
lods
fsubrl
inc
push
push
ret
cmpsb
outsl
xor
xchg
pop
imul
and
das
add
pop
and
mov
push
dec
fldt
in
fdivl
icebp
dec
fldt
das
arpl
int3
adc
hlt
pop
cmp
iret
mov
sarl
jne
insb
aad
dec
orb
fildll
vmread
mov
fsubr
daa
xor
push
test
xor
xchg
xchg
out
inc
repz
pop
mov
inc
inc
test
push
pop
imul
aam
inc
jecxz
jae
add
push
jmp
loopne
push
inc
shrl
and
popa
sbb
cmp
fwait
sbb
add
pop
ret
outsb
inc
out
cmp
xchg
jmp
mov
xor
fimull
insb
or
es
roll
or
dec
shll
stc
inc
cmp
fsubrs
stos
es
mov
push
mov
cmp
lock
pop
inc
jecxz
xchg
push
addr16
ret
inc
mov
subb
ficomps
enter
in
cli
dec
int
xchg
pop
repz
mov
mov
leave
jns
cwtl
jg
cltd
and
jo
dec
sbb
aam
xchg
fldcw
outsb
jo
shrb
xor
xor
iret
ljmp
pop
mov
test
sbb
adc
jae
popf
sbbb
das
xchg
or
into
outsb
ret
rol
xor
push
dec
push
cmpsb
push
mov
dec
cmpl
in
xor
push
xchg
jecxz
sub
dec
cmp
pop
jmp
pop
dec
push
fsubl
cmpsl
fs
or
or
mov
fisttpll
fbld
loope
dec
cmp
dec
xor
stos
sbb
adc
lret
sub
jp
mov
mov
and
addr16
mov
push
sti
out
mov
shrl
cmpsl
mov
sti
mov
mov
push
mov
lret
pop
cmp
inc
dec
mov
cmpsl
inc
xchg
mov
hlt
xchg
cmp
xor
adcl
aaa
dec
mov
mov
popa
imul
jne
jnp
adc
gs
dec
sbb
mov
imul
sbb
out
xchg
dec
repz
pop
sbb
lock
jbe
in
ljmp
or
dec
sbb
adc
ds
aam
fimull
dec
mov
xor
xchg
pop
cmp
mov
out
inc
push
push
das
imul
je
lahf
repz
iret
mov
orl
jmp
in
aam
and
out
jno
nop
scas
pop
jg
pop
icebp
sbb
jge
mov
ret
mov
xchg
adc
fcmovne
daa
fcmovb
or
frstor
mov
stos
rcrl
cli
mov
push
ss
fstps
adc
mov
cld
mov
mov
jge
jmp
out
stos
js
les
fisttps
push
imul
ret
jecxz
les
dec
xchg
mov
or
sbbb
shlb
jge
fucomp
sbb
push
sbb
mov
push
mov
nop
or
loopne
or
pop
cmp
mov
inc
mov
rcrl
xor
sbb
punpckhbw
mov
enter
cs
or
push
std
test
int
adc
outsb
nop
jmp
mov
pop
stos
xchg
fldln2
mov
and
dec
or
pop
testl
pop
movb
loopne
dec
dec
dec
xchg
lock
xor
dec
cltd
cmp
pop
movsb
leave
ret
sbb
clc
imul
fnclex
aam
mov
mov
fs
fmull
stos
add
sarl
jmp
enter
mov
cmc
pop
dec
outsl
dec
adc
jecxz
push
cmp
fistpl
das
fs
adc
fisubl
push
fwait
sbb
xor
cmp
pop
mov
int3
lods
adc
dec
and
jmp
ror
cmp
xor
std
rcrl
mov
sahf
insb
rcrb
push
pop
nop
popa
lret
outsb
loop
pop
mov
push
xor
xchg
int3
and
pusha
mov
lods
fs
fwait
leave
lret
aam
jmp
cs
out
or
fsincos
leave
push
jbe
cmp
sub
jp
je
xchg
leave
js
aas
icebp
push
dec
mov
sub
mov
xlat
fld
leave
ss
adcb
fnsave
repnz
dec
popf
stos
mov
xor
jae
sbb
ret
shll
and
cmp
or
leave
cmp
pop
scas
lods
inc
popa
mov
xchg
rolb
jecxz
shlb
mov
jmp
rol
in
lods
mov
rorl
mov
aas
xor
push
push
out
or
dec
or
cld
out
dec
addr16
mov
jp
lret
pusha
es
dec
add
loop
ss
pop
xor
inc
xchg
dec
and
add
ss
mov
pop
aad
jmp
lods
jns
or
ror
in
mov
push
repnz
scas
pusha
jae
lea
dec
out
mov
dec
jp
insl
jae
cld
addr16
push
out
imul
clc
imul
int3
shl
cmpl
mov
mov
dec
call
mov
inc
shrl
and
mov
mov
inc
jnp
fcmovne
dec
cmp
in
pop
adcl
pop
add
out
cld
pop
jae
sub
jo
aam
fwait
int3
xchg
adc
insl
push
push
ret
push
aam
fisttpl
dec
std
pop
test
pop
push
jno
pop
stc
hlt
shrb
leave
jp
mov
sbb
dec
test
dec
jmp
aaa
jecxz
leave
pop
mov
push
mov
insl
ja
jg
out
iret
mov
mov
mov
fstpl
inc
sahf
cmp
add
mov
mov
dec
pop
mov
push
jmp
xchg
pop
mov
stc
rcrl
cs
fistpl
jmp
jno
jl
jae
mov
movl
sarb
fsubrs
dec
jmp
int3
decl
out
iret
jb
fs
sbb
jbe
fbstp
xor
arpl
push
mov
or
cmp
inc
adc
and
push
or
push
mov
jle
xchg
jl
dec
mov
adc
movsl
jmp
mov
dec
in
loope
fstp
push
mov
ret
xchg
cmpsl
jle
insb
rcl
and
scas
ret
out
clc
ret
cmpsl
sub
loop
adc
mov
inc
xchg
jo
imul
enter
stos
pop
sar
jl
insl
pop
jle
jmp
pushf
fucomi
jle
xchg
jp
inc
aas
jle
push
fwait
adc
jmp
inc
fstpt
mov
xor
xchg
pop
cmp
inc
add
jb
mov
mov
lret
insb
jl
adc
ljmp
clc
rcr
mov
jp
jle
jns
push
xchg
adc
inc
or
cmp
scas
insl
pop
add
push
test
aas
or
xor
sbb
sbb
pop
push
jo
test
out
xchg
push
adc
int3
push
sub
mov
call
mov
daa
push
insb
in
movsb
sti
jnp
loope
fisttps
ret
scas
movsl
mov
cmp
mov
jmp
mov
dec
int3
bound
ret
sbb
or
inc
aas
sub
movnti
scas
sbb
repz
ret
test
push
lock
add
or
gs
iret
lret
sbb
icebp
out
int
rorl
pop
mov
mov
add
cmpsb
xor
cmp
js
cli
mov
adc
scas
in
and
fldl
test
lahf
mov
hlt
add
imul
enter
sbb
lret
orl
mov
jle
fs
jmp
fsubr
aad
push
pop
xor
test
cmp
cmpsb
cmpsb
dec
xor
xchg
cmp
xor
pop
repnz
mov
add
sub
icebp
mov
pop
adc
scas
roll
incl
dec
in
rol
icebp
push
ret
xchg
fiaddl
jmp
pop
sbb
mov
sbb
pop
pop
in
inc
fwait
mov
pop
xchg
inc
fmull
inc
enter
mov
pop
sbb
outsb
orb
sbb
inc
out
pop
mov
inc
inc
insb
daa
imul
cmp
sbb
loopne
lea
xlat
mov
xchg
or
call
cwtl
mov
in
jmp
dec
xchg
cmp
test
mov
mov
mov
neg
jno
lret
sti
sbb
jns
ja
push
inc
popa
mov
jne
add
mov
imul
nop
and
dec
mov
inc
pop
add
sbb
xor
shll
xchg
aam
mov
jno
xorb
repz
insb
jne
fildl
fwait
in
aaa
fmull
imul
lcall
cvtpi2ps
inc
jae
sti
lret
or
xchg
mov
pop
add
xchg
and
dec
shl
dec
int
ret
mov
pushf
push
xchg
add
arpl
aam
repnz
jle
imul
and
int
das
imul
cvtpi2ps
jmp
add
stos
adc
movsl
jecxz
mov
repnz
and
mov
xor
pushaw
xchg
repnz
sahf
rolb
xchg
cmpsl
sbb
ljmp
jmp
xor
inc
lods
aas
outsl
push
push
adc
mov
add
leave
jbe
loop
or
dec
aas
jnp
mov
aas
jno
add
test
dec
andb
fsts
gs
dec
jbe
fldcw
loopne
add
sbb
add
xlat
rorb
inc
dec
mov
cltd
push
push
push
or
fdiv
jns
test
fstp
insb
popa
and
adc
aaa
ret
inc
jbe
mov
pop
mov
ror
mov
iret
imul
mov
arpl
jb
cli
sarl
cmpsl
mov
inc
jno
fnstenv
outsl
imul
scas
sbb
sahf
mov
inc
int
es
imul
xchg
insl
xor
out
fistpl
pop
xchg
sti
out
popf
addr16
out
mov
outsl
jno
mov
push
lods
push
das
add
xchg
test
rcll
repz
cmp
daa
lds
insl
sbb
xor
cmp
notb
in
adc
mov
mov
jae
sbb
enter
xor
das
xor
pop
pusha
dec
inc
shll
mov
test
aad
cltd
lds
xchg
xlat
in
add
fs
loop
xor
xchg
cmp
dec
cltd
cmp
xchg
stos
jb
mov
inc
inc
push
push
das
and
mov
enter
ret
stc
sub
fadd
xor
arpl
roll
push
xlat
add
std
in
sbb
cmpsl
das
sub
cmp
out
push
stos
cmc
cltd
inc
ss
daa
addr16
mov
ret
jle
inc
aam
cmp
lods
xor
and
sbb
mov
inc
sti
fnstsw
push
pop
dec
inc
cmpsl
dec
mov
inc
mov
inc
cmp
sbb
xor
sub
aam
loope
and
pop
mov
fildl
shll
hlt
shrl
mov
pop
adc
popa
test
andl
or
xlat
fadd
stos
sub
adc
pop
mov
lahf
inc
xor
stos
jle
lds
stos
cmp
enter
aam
test
add
inc
das
sbbl
push
sahf
lret
mov
cmp
imul
orb
mov
xchg
cmovnp
rolb
addr16
jmp
gs
insb
mov
cmpsl
pop
sub
push
icebp
lods
push
gs
dec
and
push
push
dec
mov
fsubrl
sbb
insl
mov
in
lods
popf
sub
push
jno
fisttpll
jne
lcall
and
jmp
out
bound
xchg
mov
loope
stc
andl
nop
dec
loopne
push
dec
jecxz
jns
or
jnp
cltd
adc
mov
xchg
lcall
dec
mov
ss
or
lock
xchg
push
dec
push
cmpsl
fwait
xchg
test
cmpsl
stos
loop
imul
in
push
sti
in
mov
pusha
mov
jnp
mov
add
inc
mov
js
out
dec
and
dec
imul
popw
addr16
ret
lea
fistpl
out
aad
inc
ficompl
push
xor
jmp
lods
push
jmp
fwait
xor
cmp
sbb
mov
xor
rcll
push
iret
stos
pop
add
les
dec
ss
inc
insb
orb
pop
add
out
sbb
outsl
ljmp
mov
fists
xchg
mull
mov
push
pop
lahf
jmp
xor
inc
rcrl
shll
pmaddwd
roll
lret
fwait
inc
and
aad
xor
fsubrs
cld
je
ret
test
cltd
pop
pop
xchg
mov
hlt
pop
push
ljmp
pop
iret
add
std
leave
out
xor
pop
push
jg
sub
fcmovbe
dec
dec
push
cmp
rol
sub
xchg
fucomi
jecxz
fcmovnbe
pop
loop
sub
out
xchg
add
add
nop
mov
dec
xchg
divl
into
jl
ret
sbb
sbb
js
mov
adc
aam
movsb
jl
mov
sub
in
bound
dec
mov
sahf
jp
dec
addr16
add
shr
xor
xchg
fwait
jne
imull
std
iret
push
sbb
insl
js
enter
pop
mov
int
mov
jns
arpl
std
int3
or
jp
and
imul
jo
adc
test
inc
stos
add
dec
inc
es
dec
sbb
fsubrl
popl
std
add
mov
stos
jb
and
rclb
push
push
sub
stos
cld
nopl
mov
stc
test
insl
mull
insl
std
fwait
or
jecxz
fisubl
dec
dec
pop
mov
bound
and
dec
test
and
xor
jnp,pt
scas
in
xchg
mov
adc
adc
sbb
mov
pop
ljmp
lea
repnz
divl
rol
in
rolb
fcoml
sub
push
push
loope
ds
mov
adc
cmpsb
push
fst
push
push
jnp
das
mov
loope
push
es
jecxz
inc
inc
add
aas
xor
inc
shrl
xchg
outsb
fs
incb
inc
adc
mov
ljmp
mov
mov
add
pop
inc
jae
js
mov
or
sbb
mov
xor
bound
inc
leave
and
popf
dec
push
dec
movsl
xor
inc
jb
push
mov
push
cmp
inc
das
xchg
test
dec
mov
mov
lcall
mov
lods
scas
pop
lcall
inc
stos
cmp
push
pop
stc
dec
push
sub
lods
push
xchg
imul
lcall
xchg
rclb
add
dec
dec
xlat
fistpl
adcb
push
enter
add
adc
dec
int
je
inc
fs
push
push
cs
mov
cwtl
dec
fcmovbe
repz
fidivrl
cld
std
xlat
xor
jp
xchg
inc
dec
vaddpd
push
jge
pop
adc
sbb
jmp
jmp
jns
jl
test
sbb
dec
pop
into
pushf
pop
jno
xchg
sarb
popa
sbb
loop
fimull
insl
xchg
mov
leave
hlt
xchg
push
repnz
xchg
push
xor
lods
outsl
fwait
add
test
test
loopne
lods
aas
adc
push
jae
sbb
jmp
dec
sti
ljmp
fildl
dec
movl
sub
cmp
insl
es
loopne
out
sbb
cmp
dec
jae
imul
sub
mov
pushf
out
scas
mov
int
adc
popa
mov
jmp
inc
leave
pop
mov
push
repz
faddl
sti
in
lds
inc
inc
daa
mov
or
shlb
out
std
fcmovnbe
mov
xor
inc
fisubrs
dec
nop
je
in
xlat
loopne
sub
sti
test
jb
roll
inc
aad
shr
pop
iret
ljmp
icebp
out
mov
ret
in
jmp
rcrl
in
repnz
sti
out
pusha
mov
jmp
mov
lds
inc
xchg
dec
sarb
ljmp
and
dec
mov
mov
mov
jno
inc
mov
sarl
arpl
mov
xchg
mov
dec
and
jae
lods
jno
stos
movb
leave
mov
aam
jae
hlt
pop
mov
lcall
sbb
imul
icebp
ret
in
sbb
mov
mov
cmp
push
int
gs
sbb
jge
imul
mov
mov
pop
test
mov
jmp
cmp
ret
shr
mov
cmpsl
sub
pop
rcrl
mov
push
mov
jge
das
inc
xchg
sbb
arpl
cmpb
mov
in
out
mov
dec
out
pushf
lahf
jnp
in
mov
xor
scas
loop
lea
adc
inc
push
push
sti
js
ret
pop
pop
pop
pop
vhsubpd
mov
ret
mov
sbb
xchg
mov
push
dec
dec
mov
inc
repz
adc
les
call
xchg
incb
int
push
cmpl
sub
aaa
pop
popf
addr16
icebp
bound
mov
vmaxsd
push
mov
xchg
jmp
sbb
out
mov
jnp
fwait
sub
mov
outsl
jne
decl
lods
shrb
inc
int3
popf
das
cltd
les
sti
fdivrs
jo
outsb
xor
popa
hlt
cmp
icebp
pop
jmp
fdivrs
inc
ljmp
ret
adc
ss
ret
repz
mov
test
pop
shlb
fcoms
scas
shlb
in
adc
cmp
test
dec
xchg
jl
sarb
repz
daa
cmc
adc
push
pop
arpl
lcall
scas
xor
sbb
dec
insl
sbb
aam
mov
scas
xorl
rcl
lock
fs
jns
inc
in
in
subb
imul
push
dec
pop
clc
dec
shl
sub
mov
jno
jbe
icebp
fs
ret
leave
mov
adc
aas
pop
push
test
jnp
add
ret
loopne
test
jmp
xsha256
cmpsb
push
or
aas
or
das
nop
imul
and
and
pop
jmp
fsubs
add
inc
push
ficompl
jg
std
xchg
fadds
and
out
fsubl
hlt
push
lea
popf
dec
out
dec
call
pop
push
mov
aaa
out
nop
stos
repz
mov
ja
or
cmp
mov
push
scas
pop
mov
pop
dec
dec
ljmp
pop
ret
inc
cs
cwtl
mov
out
std
arpl
rorl
rcr
dec
jnp
outsl
rolb
fs
imul
js
hlt
test
jecxz
and
shl
and
inc
jmp
inc
sub
mov
xor
or
vpmacsdd
cs
push
dec
jae
jp
dec
jae
insb
jp
xor
push
int
test
lods
sti
arpl
aam
xchg
in
lea
rcrl
in
xchg
cmpsb
mov
mov
aam
jp
gs
add
lcall
cmp
xlat
lods
ret
popl
inc
pop
mov
popa
sti
stos
es
mul
sub
xor
dec
mov
lahf
insl
je
xchg
adc
pop
push
or
jg
shrl
pop
mov
pop
int3
pop
std
mov
adc
xchg
fcomps
and
sbbb
ja
pusha
xor
push
sbb
bnd
addl
add
mov
add
ret
add
sbb
movsb
ds
in
out
add
aam
arpl
cmp
cmp
mov
repz
sub
lea
imul
out
rcr
xor
aad
xchg
push
xorl
loope
pop
mov
rolb
pop
aas
leave
and
fsubrs
mov
rorb
mov
fwait
xchg
test
sarl
shll
and
mov
in
jge
pop
imul
fisubs
ja
xchg
xchg
xor
sbb
push
jl
jae
and
or
sbb
dec
ret
aam
test
out
aad
testb
or
pop
sbb
cmp
rorb
mov
out
ret
nop
cmpsl
in
popa
das
pop
dec
sbb
and
sub
leave
fdiv
rcrl
fistl
jnp
fdivl
rcll
jmp
or
fisubrs
addr16
std
mov
into
bound
jae
push
insl
enter
loopne
or
ret
sbb
icebp
dec
xlat
sti
mov
jg
adc
sbb
in
jg
jp
addr16
fs
sbb
xchg
mov
pop
mov
sub
or
ficomps
shlb
mov
add
popa
mov
dec
cmpsl
sbb
iret
jecxz
dec
cmp
adc
sub
icebp
in
mov
fwait
push
pop
sub
and
lds
sbb
addr16
inc
stos
ret
mov
in
and
xchg
or
xlat
sbb
jmp
inc
cmp
std
addl
jl
rcrl
mov
sbb
xchg
or
cli
xchg
cwtl
inc
test
mov
xchg
inc
mov
cs
orl
int
xor
out
mov
push
pop
push
sbb
xchg
popa
sub
daa
xchg
dec
cmp
mov
jle
out
xchg
ds
inc
sbb
cld
cld
push
push
jne
dec
jnp
ret
testb
dec
xor
hlt
cwtl
pop
push
aas
mov
frstor
loope
add
xchg
popa
lods
inc
sbb
fldl
mov
fwait
lods
bound
or
and
mov
xchg
adc
or
pop
in
arpl
je
cmpsl
fcoml
test
lds
xor
std
outsl
mov
xchg
aas
dec
mov
xchg
sbb
orl
mov
ret
or
hlt
or
aas
dec
mov
imul
cld
dec
mov
mov
cltd
xor
data16
xor
movsl
mov
subl
cmp
jmp
loope
popa
scas
into
sub
outsl
mov
shlb
sub
mov
mov
stos
test
lock
gs
dec
int3
ja
test
pop
mov
fwait
push
add
ret
call
push
pop
push
sbb
fadds
fwait
xchg
jp
inc
mov
fldt
int
cltd
pop
add
pop
mov
xor
fs
inc
and
loope
push
push
mov
pop
in
add
jae
lock
stc
mov
dec
sbb
faddl
ljmp
int
pusha
cs
push
out
rol
imul
add
push
aam
sub
cltd
test
dec
push
or
dec
sbb
addb
cmp
rcrb
lea
cmpsl
mov
mov
xor
inc
fwait
jp
inc
outsl
clc
scas
or
add
out
pop
lret
fdivrl
sub
sbb
jnp
fcomps
or
cmc
cmpsb
sbb
fdivp
call
mov
mov
adc
xchg
inc
xchg
and
sbb
icebp
roll
mov
xlat
rorl
addr16
push
sub
popf
ret
mov
mov
pop
and
scas
add
sbb
dec
add
xor
das
adc
insl
aad
fadds
icebp
adc
in
cmp
cmp
repnz
sbb
sub
pop
lret
loope
add
add
lods
ret
call
sbb
in
xor
sbb
lret
pminub
xchg
push
sbb
jecxz
sbb
fisubrl
imul
mov
faddl
jge
xchg
mov
xchg
repnz
add
fsts
inc
xchg
inc
mov
shll
je
push
sbb
dec
popf
xor
jne
in
adc
mov
dec
jmp
jge
stos
xchg
and
jae
pop
xor
pop
dec
ret
dec
pop
enter
rclb
lea
shll
xchg
mov
je
xchg
stos
mov
popa
dec
jnp
mov
pop
sti
insb
jmp
enter
inc
sub
xor
push
mov
aam
inc
adc
sub
inc
sub
rolb
jbe
or
or
sbb
mov
dec
mov
testl
push
xchg
mov
mov
pop
or
sub
cmc
push
mov
inc
pop
faddl
out
sbb
xor
add
subl
test
jno
mov
cmp
push
cmp
leave
fs
jnp
inc
lods
popa
ja
and
int
push
popa
dec
sub
adc
and
cmc
sbb
imul
in
les
popf
fistl
mov
jl
hlt
aas
mov
mov
imul
push
add
lret
sbb
jnp
pop
jmp
ret
std
sub
mov
add
popf
push
sub
sub
or
mov
ljmp
rcrl
fwait
sbbl
jne
pop
in
loopne
shrl
andl
faddl
xor
test
je
insb
sbb
clc
fwait
cld
imul
pop
and
lods
xor
sahf
jl
fbstp
push
addb
and
push
mov
loope
cmp
sti
cltd
pop
mov
test
in
sub
sbb
aam
lea
mov
test
out
inc
cwtl
cli
sahf
incb
fcmovnbe
fucomip
and
adc
sbb
sbb
xchg
daa
adc
call
cmp
imul
xchg
xlat
xchg
inc
lret
or
js
sub
adc
insl
imul
xchg
ret
cmp
push
gs
int
pop
adc
pop
rorl
mov
sub
xchg
outsl
xor
scas
fwait
cwtl
push
pop
imul
xor
lock
repnz
loopne
cs
or
outsb
aas
icebp
or
mov
adc
fldt
or
sbb
lcall
pop
xchg
ret
in
and
mov
xor
sbb
xor
pop
in
insb
imul
int3
xor
scas
and
mov
popf
out
xchg
enter
out
insl
inc
cmpb
nop
fstpt
int
out
fisttpll
fidivl
ret
mov
or
ss
pop
fwait
sub
push
lds
dec
out
xor
push
sbb
pop
or
repz
cmp
cmp
inc
loope
aas
fs
testb
std
mov
lret
lret
int3
jecxz
mov
adc
out
pop
cmc
jmp
mov
int3
dec
ljmp
call
add
pop
sbb
popf
stos
inc
ret
mov
pop
sbb
cmpsl
in
inc
add
or
aad
jns
pop
std
sbb
cli
ret
clc
push
sahf
cli
stc
sub
jle
mov
inc
enter
xchg
push
or
orl
call
fldenv
ss
shrl
ficompl
testl
sbb
mov
pop
leave
les
lea
push
inc
mov
cli
repz
inc
sub
inc
dec
jp
pop
dec
leave
movsb
scas
push
jns
adc
pop
or
mov
jl
in
sub
push
push
jnp
push
mov
push
ja
fisttps
sbb
jno
pop
jge
mov
les
pop
leave
mov
dec
mov
xchg
aas
movsb
ss
fxch
inc
jle
mov
mov
sub
sub
or
das
xchg
enter
ret
addr16
jl
fwait
int
bndstx
xlat
das
add
cmp
add
sbb
stc
jmp
scas
cmp
dec
and
data16
arpl
inc
aas
pop
mov
push
neg
in
leave
aad
rcl
cmp
mov
jnp
lea
adc
in
imul
mov
lods
popa
out
push
imul
mov
je
mov
jl
lods
int
dec
xchg
sub
xchg
enter
dec
cmp
adc
push
aam
insl
aaa
scas
outsb
adc
fsubl
pop
xor
imul
sbb
pop
ljmp
fnstsw
repz
dec
in
jne
jno
insb
pop
jmp
inc
dec
inc
xchg
mov
shll
pop
mov
jecxz
ror
jg
ret
pop
mov
dec
jno
xor
insl
cmp
pop
push
jae
and
dec
out
mov
aaa
inc
imul
test
xor
jecxz
leave
push
jno
push
outsb
adc
test
and
xlat
fildll
push
fcoml
or
jmp
rolb
fildl
aas
inc
faddl
sbb
cmp
dec
mov
lahf
cmp
iret
lock
xchg
add
in
mov
cmp
ret
sbb
dec
repz
and
dec
leave
dec
mov
sub
xor
mov
cwtl
cmc
or
inc
rcrl
fwait
xchg
push
fcompl
ficompl
adc
test
add
and
xchg
push
xor
in
sub
and
arpl
adc
nop
loope
repnz
mov
jno
fiadds
icebp
sarb
dec
jmp
inc
hlt
and
in
cld
and
rcr
gs
jcxz
sbbb
fistl
scas
dec
iret
xor
mov
ljmp
dec
cli
insl
sbb
or
cltd
pop
pop
pusha
movsl
mov
lock
push
sub
mov
xor
sbb
outsb
jo
pushf
xlat
scas
jnp
fld
and
lret
in
stos
int3
mov
push
in
das
aas
enter
pop
ds
je
repz
dec
pop
xor
xchg
inc
sub
outsb
fwait
and
lcall
mov
push
subb
loope
jmp
imul
pop
push
jge
fnsave
or
dec
fldt
jo
nop
dec
ljmp
insb
jne
inc
mov
scas
loop
xorl
pop
in
jg
xlat
in
iret
push
sahf
or
inc
mov
fsubl
mov
xor
xor
rol
mov
in
dec
nop
gs
pop
add
mov
pusha
xchg
mov
aam
pop
dec
mov
cmpsl
loopne
sahf
add
adc
jp
cwtl
jb
cmp
loope
test
ret
leave
push
inc
mov
push
sbb
int3
test
enter
and
xlat
cmpsb
and
sbb
dec
out
push
or
mov
push
test
rcll
dec
sbb
insl
sbb
lds
mov
sbb
add
add
and
insb
pop
sbb
fistpl
inc
stc
jae
or
pop
and
jl
in
ss
push
lds
sbb
mov
mov
xor
and
inc
xchg
repnz
jg
pop
xor
ss
cmpsl
popl
cld
or
pop
das
repz
push
push
test
aas
add
cltd
sbb
pop
pop
shll
dec
std
rorl
iret
fisubl
jns
ja
aaa
xor
adc
movsl
or
mov
or
mov
mov
loope
stos
aam
fimuls
inc
pop
add
loope
and
decb
xchg
les
jmp
out
pusha
adc
leave
sti
cmp
xchg
jae
loope
pop
push
out
jno
push
mov
mov
loop
test
addr16
mov
sar
fmul
sbb
mov
and
lret
jp
mov
cmp
ljmp
adc
dec
ret
inc
sub
pop
inc
adc
xor
push
movntps
aam
push
std
cltd
fs
adc
jae
insb
push
idivb
loop
cmpsl
leave
push
lahf
and
imul
add
push
mov
pop
stos
pushl
sub
xor
add
or
dec
nop
loope
movsl
adc
inc
jnp
jne
leave
fs
jp
js
and
and
mov
cmp
adc
data16
sbb
mov
lea
inc
mov
or
push
stc
ret
aaa
and
test
shlb
mov
fcoms
add
loop
cmpsl
or
mov
push
nop
or
push
cmp
cltd
jnp
jecxz
jge
push
inc
out
insb
adc
jmp
mov
rcr
jb
push
mov
mov
scas
fadds
inc
xorb
mov
xor
pop
add
ja
mov
and
out
aam
mov
adc
cmp
mov
stos
dec
sub
fs
jecxz
negl
sbb
lock
mov
pop
xor
imul
aaa
mov
leave
sbb
push
mov
sbb
ret
xchg
pop
mov
or
insl
jmp
hlt
bound
fsubr
jb
dec
mov
xchg
popf
jmp
dec
mov
test
pop
test
mov
jge
lods
xchg
xor
and
fstps
pop
sbb
push
test
or
movsl
popa
xor
xchg
mov
lea
ja
movups
rcrl
xchg
and
add
and
xor
shr
cld
sub
xchg
sbb
pop
popa
ficompl
inc
mov
insb
cld
add
inc
xchg
inc
fistpl
int
rclb
rcr
jne
sub
sub
or
mov
pop
xchg
mov
jmp
mov
mov
mov
gs
cmp
push
jb
sbb
inc
orl
mov
stos
insl
ficoml
sbb
mov
popa
fisttpll
push
and
in
out
fidivrl
fldenv
cld
xor
pop
lods
inc
and
sbb
cmpsb
mov
xchg
cmp
cltd
sbb
imul
inc
fwait
and
cmp
lret
inc
sbb
pop
ret
fbld
orb
loopne
nop
pop
jecxz
addr16
scas
test
xor
imul
or
roll
jecxz
mov
imul
enter
outsb
and
in
int
imul
fwait
aad
and
mov
push
push
jge
mov
mov
pop
pop
sbb
arpl
push
in
negb
lret
insl
jmp
mov
and
les
pop
fiaddl
in
bound
mov
or
jae
mov
sbb
ret
sub
imul
loopne
in
in
test
lcall
mov
add
push
xchg
cmpsl
aam
lods
pop
or
rcll
std
push
xchg
and
fsubrl
mov
fstpl
dec
pop
lcall
daa
mov
fisubrl
dec
addr16
xchg
pop
sub
orl
frstor
outsl
outsl
dec
mov
mov
mov
jg
fs
jmp
and
cmp
in
pop
test
and
inc
jo
pop
icebp
jmp
in
jecxz
loope
mov
jmp
push
and
inc
mov
xor
popf
lea
and
das
int
rcrl
mov
movl
push
ror
shrl
addb
fstps
inc
pop
cmp
add
cs
jp
inc
xchg
mov
enter
push
mov
add
mov
inc
rcrb
push
cmc
sbb
nop
jo
stos
sti
xor
enter
jne
inc
push
ss
jnp
and
fdivs
dec
mov
mov
jg
rcrl
ret
xchg
push
cld
xchg
out
hlt
shrl
mov
das
ret
xchg
int3
sbb
push
mov
test
pop
dec
daa
dec
xchg
je
mov
push
sub
cli
dec
pop
mov
cmp
lods
xchg
mov
shrl
mov
sbb
inc
dec
xchg
out
and
push
push
dec
add
in
xor
out
mov
dec
mov
push
pop
add
xchg
adc
adc
ret
mov
ret
rcpps
push
ffree
and
sub
xchg
in
pop
cmp
sbb
jmp
clc
gs
pop
lret
pop
aas
ret
pusha
jbe
push
sti
adc
shr
mov
xchg
push
mov
adc
mov
mov
inc
ds
ss
pushw
mov
lea
cmp
repz
sbb
psubsw
inc
pop
daa
imul
pop
mov
lods
test
xchg
sbb
mov
xorl
dec
ja
cli
jno
and
inc
gs
leave
lods
in
jbe
xor
cli
adc
insl
fildll
dec
imul
pop
jbe
lds
push
test
cmp
jns
mov
push
or
imul
stc
out
stos
aam
add
fildll
and
aas
into
dec
ret
aad
sbb
and
xchg
or
mov
stos
lea
inc
mov
arpl
sbb
cmp
mov
adc
inc
xor
sbb
xor
jnp
adc
stos
inc
int
ret
int3
mov
adc
inc
sahf
lds
stos
jmp
enter
das
jmp
fnstenv
pop
xchg
mov
jb
pop
es
out
pop
lds
push
adc
sub
mov
int
lcall
lock
invd
hlt
inc
xor
sub
gs
push
pop
fcoml
sbb
je
cmpsl
ds
lret
lock
pop
dec
lcall
inc
sbb
out
sbb
pop
mov
sub
std
or
out
push
sbb
jb
and
jl
hlt
ds
pop
add
imul
sbb
sub
insb
ljmp
addr16
ja
clc
fidivl
arpl
jmp
pop
int3
stos
int3
sbb
pushf
leave
pop
sbb
in
insl
in
dec
js
sbb
sbb
or
sti
jecxz
mov
pop
cmc
pop
push
sub
mov
sbb
dec
push
xlat
mulb
out
mov
mov
shlb
cmp
sub
pop
xchg
jecxz
sti
ljmp
lds
fs
mov
fwait
pop
shrl
inc
bound
cltd
sbb
pop
ss
xchg
cmp
jns
pushf
out
andb
push
lds
dec
sbb
in
repnz
imul
dec
in
mov
leave
sbb
int3
mov
outsl
mov
sti
das
sbb
lahf
mov
and
aas
mov
xchg
mov
std
add
fstpl
shrl
lods
ljmp
das
pop
in
cmp
aam
mov
ret
dec
jae
adc
out
cmpsb
gs
xchg
inc
test
jne
add
cmp
imul
ret
sbb
fldt
in
xchg
and
insl
stos
testb
pop
add
scas
jnp
add
jle
aas
pop
inc
dec
pop
sbb
push
incb
sub
jno
lods
inc
xchg
shl
cmc
arpl
and
lea
roll
and
test
rcrb
arpl
inc
dec
sbb
and
fcmovne
cmp
xchg
xor
pop
adc
stos
out
adc
mov
adc
cltd
push
and
and
cmc
xchg
ret
push
push
fsub
fs
icebp
xor
mov
cld
add
add
xor
and
mov
popa
pop
mov
mov
int
nop
push
les
inc
jo
into
jp
mov
lock
pop
push
mov
rolb
mov
inc
adc
jp
mov
adc
imul
sub
stos
sbb
jge
in
add
repz
mov
mov
mov
cs
xchg
pop
push
sti
and
sub
or
xor
lods
fcomp
in
loope
mov
mov
rol
dec
scas
call
sub
loopne
aad
in
cmp
cmp
cld
popa
loop
ja
fmull
xor
lods
ret
clc
and
xor
add
push
xchg
cmp
dec
ja
fisubl
and
mov
in
and
push
or
imul
push
jecxz
out
popa
xchg
mov
testl
mov
test
xchg
call
xor
loopne
lock
dec
loopew
sbb
enter
cmp
stc
inc
std
sahf
pop
mov
int3
cltd
lods
test
mov
ja
repnz
shlb
or
movsl
push
nop
cmpsl
lds
mov
mov
jl
hlt
sbb
mov
cmpsl
cld
test
and
andl
sub
and
adc
loopne
or
and
jecxz
add
subb
aam
mov
xchg
add
iret
dec
xchg
es
mov
pop
mov
pop
add
and
pop
mov
es
xor
enter
push
cmp
fsubr
xchg
or
mov
leave
movsb
mov
and
ret
push
sbb
lret
leave
jg
push
inc
leave
cmp
rclb
mov
push
mov
lock
or
sbb
stc
pop
xchg
lds
add
jl
or
sub
movsb
lock
scas
push
leave
mov
inc
frstor
push
je
mov
lcall
inc
mov
ret
xchg
incb
inc
sub
into
outsl
shl
in
jmp
mov
orl
jne
fcoml
fisubl
jae
pop
mov
pop
lret
sbbl
test
dec
jmp
dec
movsb
push
fcomps
push
test
jge
push
or
sbb
arpl
sbb
mov
push
nop
packssdw
dec
sahf
leave
adc
jnp
js
enter
pop
push
lods
das
push
out
inc
test
nop
xor
cld
mov
sar
ficompl
pop
rclb
hlt
or
fidivrl
roll
cli
xor
les
loop
sub
stos
fdiv
jno
icebp
cmpsb
jnp
mov
js
xchg
lds
rcl
in
in
fsubp
mov
rclb
out
or
arpl
popa
imul
adc
into
mov
imul
imul
xchg
inc
aas
popf
mov
cld
fucomip
sub
mov
jmp
ret
add
repz
fmuls
pop
xor
jo
dec
rol
dec
aas
jle
insb
jae
jmp
lds
pop
jo
movsl
shrl
shrl
pop
mov
mov
arpl
pop
popf
sbb
aad
in
cmc
mov
mov
xchg
xchg
aad
jmp
ljmp
das
mov
sub
outsl
mov
iret
das
xchg
jg
mov
push
fucomip
loopne
cmp
fistl
cmp
cmp
pop
es
lock
cmpsl
xor
stos
jae
sub
pop
jo
scas
in
mov
cmp
in
aam
ljmp
movsb
arpl
mov
out
jae
mov
fistl
fcmovb
out
add
xchg
fwait
dec
repz
push
fisttps
gs
test
int
jmp
mov
idivl
mov
loopne
mov
jp
jecxz
mov
fs
push
mov
sti
ret
addr16
movsb
or
or
addl
in
nop
pop
push
fildl
sbb
xchg
enter
jecxz
dec
mov
mov
fs
loopne
sub
and
mov
ljmp
cmp
orl
cwtl
mov
lock
xor
jne
fstpt
lods
loop
fnstcw
fs
fstps
repnz
cmpsb
lcall
into
lcall
xlat
lods
imul
inc
xchg
or
inc
mov
push
xor
cltd
mov
pop
repnz
push
daa
mov
pop
popa
add
loope
adcl
mov
push
imul
pop
in
jb
out
ret
inc
sbb
pusha
adc
jae
repz
xchg
fisubs
lds
icebp
push
cld
pop
xchg
mov
roll
popa
jo
inc
jl
adc
cli
sub
mov
xor
nop
mov
push
sub
xor
pop
movsl
add
stos
fwait
and
xor
ret
les
and
incl
mov
mov
sub
jg
aas
inc
test
mov
mov
call
fimull
pop
repnz
outsb
jg
inc
pop
jae
mov
mov
dec
sti
mov
pop
push
lds
mov
pop
imul
mov
jno
add
jg
jecxz
sub
fildl
mov
jg
add
loop
popf
and
inc
mov
iret
jp
pop
cmp
dec
adc
shlb
int3
mov
rol
xchg
add
jae
aad
scas
adc
pop
inc
into
push
jae
fwait
scas
fildl
int3
out
xchg
lahf
jns
popf
sbb
into
in
add
jb
xchg
jp
sti
sub
insl
sbb
xor
xchg
push
cmp
std
jno
dec
filds
adc
into
cltd
sbb
repz
adc
jg
clc
mov
cmc
mov
out
cmp
outsb
popa
shrl
xlat
jns
rcll
lods
push
rcrl
adc
cmc
scas
fdivrl
inc
mov
xlat
mov
mov
add
adc
dec
xchg
or
mov
cmp
sti
sbb
mov
ds
mov
mov
cltd
aas
mov
test
in
fdivrp
xor
loope
xor
jno
mov
fstpt
repz
and
pop
mov
icebp
sbbb
cwtl
add
fistl
jb
sub
adc
jmp
imulb
push
jmp
xchg
xchg
sub
push
imul
push
xlat
lea
cltd
jp
xchg
and
call
fisttps
imul
movsb
sbb
pop
orl
imul
xor
test
xlat
mov
or
xor
addb
pop
aad
loopne
mov
mov
xlat
test
pusha
mov
fcoms
cmpsb
in
in
cmpl
mov
xor
enter
and
iret
sbb
xor
add
roll
jmp
cld
and
jp
jp
repz
mov
arpl
dec
xlat
mov
mov
lret
arpl
ss
push
adc
adc
out
pop
adc
add
or
adc
xor
dec
jmp
sti
mov
jmp
jb
shll
mov
ds
xor
jl
aaa
adc
cmpsl
cmp
out
into
xchg
arpl
sub
in
xor
pop
sbb
sti
mov
loope
imul
ljmp
cli
mov
ljmp
mull
iret
in
fstp
fcomps
addr16
cmp
and
and
lret
fisubs
icebp
inc
jecxz
inc
insb
jb
cwtl
inc
and
scas
and
out
mov
in
adc
and
jecxz
into
into
pop
sti
faddl
pop
jne
imul
cmp
mov
adc
add
mov
sbb
stos
dec
std
cmp
std
aaa
xchg
sub
movsb
jle
jecxz
or
orl
xor
mov
add
bound
outsl
sbbl
insb
jecxz
dec
xor
cmp
xchg
pop
push
dec
xchg
loope
xchg
inc
ret
outsb
cwtl
mov
push
js
push
mov
mov
ret
imul
pop
ss
iret
enter
jmp
push
add
inc
lahf
dec
outsb
cmpsb
jmp
das
sbbb
jnp
ret
jnp
mov
dec
lcall
imul
pop
mov
ljmp
jae
insl
inc
jmp
hlt
outsl
in
fisubrl
xor
out
pop
jmp
inc
sbb
fpatan
inc
mov
xchg
mov
sub
cmp
adc
ficompl
gs
mov
adc
loop
out
pop
leave
lcall
rol
dec
mov
call
mov
inc
aas
dec
rcll
rcr
das
inc
mov
inc
pop
in
mov
lods
mov
insl
xchg
xchg
inc
cli
push
clc
dec
scas
cmpsb
inc
xchg
scas
pop
dec
insb
or
xchg
lock
clc
fs
or
lcall
out
lea
push
iret
popa
ljmp
jbe
xlat
or
leave
dec
fdivrl
ss
stos
loope
movntps
cltd
jbe
mov
rolb
pop
sti
iret
rcll
mov
push
pop
fwait
inc
inc
fstl
insb
push
jp
lahf
mov
inc
mov
push
in
out
rclb
or
ret
aam
adc
mov
insb
dec
mov
in
pop
dec
jecxz
push
mov
xchg
push
shlb
int
sub
imul
insb
stc
or
fmul
out
and
add
pop
int
xchg
mov
inc
arpl
adc
cmp
loop
sarl
mov
dec
jp
xlat
out
mov
cli
out
adc
rcrb
push
out
scas
mov
jo
xchg
xchg
into
ljmp
push
sbb
sbb
aas
fisubrs
jmp
mov
xchg
mov
jmp
data16
popa
insb
mov
push
leave
push
sbb
leave
mov
outsl
int
pop
aam
pop
xor
and
dec
fldt
aad
push
jns
mov
cmp
jecxz
popa
cli
inc
rcrl
mov
add
cmp
outsb
sub
mov
popa
les
imul
or
and
in
sub
cltd
sbb
mov
incl
lock
in
adc
mov
pushf
btr
jmp
jnp
lahf
fwait
mov
or
adcb
sbb
adc
mov
bound
pusha
mov
xor
add
repz
mov
sub
inc
clc
ret
int3
adc
sub
ror
ret
push
ret
mov
xchg
fistpl
dec
int
mov
sub
xor
push
xor
inc
sbb
sub
push
sub
test
imul
mov
pop
fs
fisttpl
adcb
fs
imul
mov
cli
pushf
mov
mov
xor
mov
imul
add
loopne
fmuls
imul
subl
sbb
push
jne,pt
fst
das
or
xor
and
dec
scas
mov
add
pop
mov
mov
stos
scas
push
xor
jecxz
push
push
mov
shl
lret
and
mov
sbb
or
fwait
sbb
pop
and
sbb
cltd
jnp
movsl
icebp
gs
jecxz
ud2
add
out
mov
pop
jecxz
mov
or
pop
mov
decb
dec
sub
push
imul
or
arpl
out
mov
pop
fbstp
mov
sbb
je
into
dec
cli
icebp
fstl
cmp
mov
insl
fisubs
mov
arpl
add
lods
dec
mov
push
imul
aam
inc
lock
mov
mov
sar
sub
mov
test
lea
xchg
jg
popf
xchg
sbb
bswap
mov
bound
sbb
push
aaa
fsts
imul
mov
aaa
stos
test
stos
in
dec
orb
and
fidivrs
pop
or
dec
arpl
xor
test
loope
cmp
cmp
adc
pushf
ljmp
xchg
push
fsubrl
jl
scas
clc
insb
or
cltd
mov
pop
in
and
insl
pop
pusha
sub
lcall
pop
lea
cli
mov
sbb
sbb
sub
fndisi(8087
pop
in
sub
cwtl
sahf
fisubs
add
jmp
hlt
xchg
pop
ja
and
ret
mov
sub
aas
in
popa
fistl
jg
addr16
ret
jno
ffree
insb
sbb
add
add
or
or
push
pop
push
out
aam
cmpsl
les
sub
pop
pop
dec
out
gs
les
add
int
lret
add
and
imul
sub
lcall
sbb
add
ret
mov
cmpsl
xor
cli
outsb
pop
sbb
sub
sub
sub
mov
xlat
aam
out
imul
pop
je
shrb
and
sbb
test
test
dec
dec
jmp
jne
lea
inc
dec
adc
insl
rol
ffree
push
test
sbbl
inc
imul
mov
push
push
jp
jmp
lahf
hlt
aad
lret
test
int
push
fcmovnu
insb
loop
repz
ss
movsl
lret
nop
addr16
xor
jle
and
sti
lcall
decl
pushf
movsl
mov
cmp
jmp
gs
leave
scas
xchg
hlt
adc
imul
inc
fwait
pop
push
push
scas
dec
pop
mov
aas
ret
fcomps
mov
adc
dec
nop
cmpsl
dec
dec
add
sbb
std
repz
dec
enter
sub
mov
sbb
loop
popa
mov
stc
in
sti
ret
sub
mov
sub
pop
sbb
addr16
push
mov
add
sbb
xor
leave
repz
sub
xchg
xor
mov
mov
in
xchg
lret
mov
mov
fildll
adc
decl
and
aad
aam
adc
sub
scas
and
nop
fwait
or
imul
loopne
test
sbb
mov
or
rcr
es
fwait
out
roll
inc
in
or
shrl
fsubrl
ret
das
mov
daa
sub
pop
or
in
cmp
fbld
adcl
icebp
fwait
inc
inc
aas
shll
mov
dec
test
mov
dec
xchg
sti
lcall
cmpsl
jno
stos
xchg
cmpb
sti
push
fcmovb
and
pop
sbb
rcll
aas
stc
fistl
fcomps
xor
lods
out
jge
mov
mov
inc
rcll
cltd
mov
mov
daa
mov
sbb
mov
mov
fldl
dec
je
icebp
pop
or
aad
inc
lds
lcall
dec
iret
imul
in
mov
rcr
dec
adc
xchg
cmp
jecxz
imul
mov
into
stc
xchg
in
jne
xorb
mov
cmpsl
fadds
push
xorl
cli
orb
out
dec
xchg
pop
imul
or
adc
xchg
js
cmc
ret
add
stos
loop
imul
shl
mov
add
pop
imul
mov
pop
fisttpll
xchg
and
fwait
mov
add
icebp
xlat
fxch
xlat
pop
xor
ret
inc
add
fsubrl
and
fldt
ret
dec
mov
and
inc
leave
xchg
stc
inc
sbbl
xor
insl
into
les
xchg
dec
push
arpl
inc
out
nop
ss
xchg
cltd
sub
imul
ror
cmp
xchg
notl
fidivs
inc
add
in
mov
dec
fucomip
roll
sti
fistpll
cs
lret
test
mov
sub
pop
data16
or
cmpsl
jnp
lods
divl
jecxz
test
fiaddl
mov
sbb
mov
xor
pop
dec
les
test
or
and
inc
fimuls
pop
data16
sbb
mov
les
pop
cmp
loop
int
pop
jecxz
loope
jmp
loope
mov
insl
and
mull
sti
stos
int3
das
cld
cmp
lods
jnp
stos
int3
aas
dec
imul
xor
cmp
jg
pop
aas
sbb
fistpl
jmp
jnp
fildl
mov
popf
sbb
pop
mov
add
fistl
pusha
sti
leave
mov
cmpb
push
les
stc
add
pop
and
mov
shll
fistpl
xchg
xchg
out
pop
pop
pop
pop
fmull
xchg
or
aaa
dec
mov
xchg
div
sahf
stos
mov
insl
mov
mov
inc
sub
cmp
ret
test
std
call
aam
std
xchg
sarl
xchg
mov
in
mov
aas
mov
inc
jo
popf
dec
xchg
arpl
jns
pop
lods
addr16
inc
jge
testl
test
clc
call
sub
lds
faddl
sub
fisttps
pusha
sbbl
push
into
pop
insb
sbb
push
imul
rcrb
rorb
imul
cld
fisubs
add
mov
jne
bound
add
or
fwait
jg
xchg
cmp
cmp
mov
cmp
xlat
jne
pxor
lds
jno
xchg
dec
fldt
iret
xor
jmp
push
jecxz
iret
dec
sti
imul
jecxz
nop
sbb
sub
int
jmp
mull
sahf
xor
addr16
mov
and
xchg
jb
fwait
outsb
ret
cli
adc
pop
lcall
push
out
int
fcoml
cmp
pusha
pop
and
jno
cmp
push
mov
sbb
cmp
push
push
das
adcl
inc
out
cltd
sbb
pop
test
jp
cli
xorl
and
gs
leave
dec
cltd
fcoml
add
inc
test
mov
jne
xor
xor
or
mov
dec
sub
ja
lea
mov
cmp
push
xor
sub
sbb
stos
pop
sub
enter
outsb
fcoms
pop
leave
les
mov
xchg
out
ret
cmp
pop
dec
or
push
xchg
test
or
stos
mov
ret
pop
jb
inc
inc
sbb
aam
sbb
stc
sarb
jnp
lret
sbb
sbb
pop
test
scas
jae
mov
cmp
add
leave
bound
insb
nop
leave
and
stos
add
pop
mov
mov
test
int3
sbb
orb
mov
sbb
cmp
insb
lock
in
lcall
out
adc
orl
mov
mov
dec
in
das
lret
dec
fists
repz
push
test
fsub
fs
xchg
mov
push
fisubrl
es
sar
popf
in
imul
jl
rcll
insl
sub
xor
in
stos
inc
into
xor
or
insl
xchg
popa
pop
inc
popf
jae
std
addr16
pop
loope
dec
repz
jno
insl
lds
xlat
pop
cmp
out
test
jge
mov
orl
pusha
lock
pop
push
out
or
mov
pushf
fcomp
xchg
das
ss
dec
rol
or
fisubrl
dec
push
xor
stc
into
mov
out
mov
sbb
xchg
gs
inc
cli
fsubrl
push
into
lods
jl
lea
fcoml
insl
jecxz
nop
pusha
ds
arpl
das
fwait
sbb
cmp
adc
push
add
lds
and
jmp
dec
mov
pusha
inc
cmpsb
out
stos
mov
adc
or
into
xchg
and
sub
push
out
fistpl
jecxz
cmp
and
adc
pop
sbb
dec
jmp
sarb
xchg
jne
fists
pusha
sub
scas
fwait
enter
jmp
out
inc
add
lahf
jne
rcrb
mov
adc
scas
int
cs
xor
sub
jmp
dec
push
sbb
ds
pop
int
push
mov
jae
lret
sub
arpl
jmp
sti
xor
jno
insl
dec
sbb
lret
push
fiaddl
in
xchg
pushf
mov
mov
jecxz
jno,pn
push
push
lods
pop
ficomps
jp
and
mov
movsl
aad
push
into
push
mov
jno
fistps
dec
icebp
dec
jns
mov
mov
sub
dec
repz
sbb
lcall
fadds
ret
mov
popa
iret
dec
ret
mov
repz
in
sti
das
mov
adc
rclb
pop
and
jg
mov
mov
push
test
insl
js
xchg
rcrl
das
mov
jecxz
cmp
aam
xor
repnz
xor
ja
cld
leave
pop
inc
jnp
stos
ret
mov
je
rcrl
sub
shl
pop
iret
lret
dec
enter
mov
xchg
add
fcmovnu
push
outsb
adc
dec
hlt
push
pop
popa
adc
iret
in
sbb
dec
push
dec
mov
pop
shll
fcompl
jnp
sbb
mov
adc
mov
lods
ret
stos
popa
mov
repz
rcrb
jecxz
movb
jmp
push
xchg
iret
fstpt
xorb
push
cmp
pop
inc
add
jle
dec
inc
fcmovnu
fs
jno
push
mov
xor
jb
inc
loope
pop
subb
xor
into
shll
hlt
sub
mov
bound
hlt
in
iret
mov
xchg
xchg
mov
lcall
fimuls
bound
int3
stos
cs
add
mov
jns
inc
push
add
pusha
dec
xor
aam
int
enter
dec
mov
imul
inc
sti
and
pushf
test
or
sub
cs
xchg
mov
jge
loop
lods
fsubs
cmpsb
ret
pop
insl
xchg
mov
inc
aad
sbb
push
sbb
in
xchg
sbb
xor
add
cmp
repnz
add
jne
dec
xchg
dec
mov
push
and
sbb
pop
xchg
fdivr
int
dec
roll
jmp
mov
inc
pop
jae
and
sbb
ret
mov
fbld
sub
iret
orl
les
adc
enter
sbb
jge
je
cmp
loope
jae
out
push
fistpl
fsubrl
and
ljmp
jae
jmp
fcompl
shr
aas
imul
or
fimull
fmull
xchg
mov
rcll
and
jecxz
fucomi
cmc
inc
popf
mov
notl
daa
aas
xchg
test
xchg
lock
pop
xor
xlat
xor
movsl
aas
pop
adc
pop
sub
int
jmp
xchg
cltd
cmpsl
push
cmp
addr16
jecxz
fwait
and
mul
pop
imul
push
xchg
pushf
mov
cltd
shrb
rorb
xchg
lret
icebp
rorl
dec
inc
loopne
inc
repnz
xchg
push
in
pop
movsb
jns
das
xor
and
cltd
and
mov
dec
fisubl
jecxz
inc
dec
movsl
ret
jmp
fs
sub
mov
enter
ja
loopne
lcall
stos
aas
mov
repz
lret
filds
pop
fbld
mov
pop
lods
adc
inc
mov
std
int
ljmp
sarb
jne
popa
stos
sti
dec
mov
pop
in
pop
push
imul
sahf
pop
repz
dec
cmp
cmpsl
scas
ret
fcmovnu
call
xchg
jg
jae
fsubl
xchg
mov
adc
leave
push
inc
enter
push
mov
inc
mov
fs
insb
and
xchg
leave
add
imul
sub
lea
dec
lock
dec
or
mov
ss
loop
icebp
or
inc
xchg
dec
rcrb
out
lahf
sbb
push
orb
out
xchg
mov
jecxz
mov
cmpsb
pop
sti
sbb
sub
xchg
jae
loope
and
cli
inc
or
fiaddl
out
or
sub
out
jge
lret
loope
push
ljmp
fcoml
fs
fidivrl
adc
mov
and
cmpsl
pop
ficoml
mov
xor
jmp
data16
dec
and
in
lods
pop
rcr
adc
in
loope
cmp
in
sti
add
mov
iret
cmpsb
sub
repnz
and
jge
dec
sti
insl
cmp
popl
mov
xchg
shl
pop
shl
jmp
pop
ffree
cld
test
imul
jecxz
scas
dec
xor
pop
dec
insb
outsb
jns
sub
xor
pop
inc
pop
lahf
jne
xchg
dec
es
mov
mov
sub
dec
dec
lods
in
lret
or
mov
test
push
pop
bound
cmp
fsubr
pop
rcrl
jecxz
daa
imul
xor
mov
repnz
test
sbb
pop
push
cmp
out
icebp
rcrl
pushf
xchg
sbb
sbb
xor
in
loopne
jae
lret
aam
xor
cmp
inc
push
rol
mov
in
or
inc
in
repz
shll
dec
in
inc
push
popf
mov
mov
and
ret
jmp
mov
shrl
inc
popf
fdivrl
dec
add
jmp
addr16
push
sti
xchg
insl
dec
insl
repz
fstp
mov
pop
mov
fcmovu
pop
ja
fists
jmp
cs
sub
loop
ljmp
insl
pop
fcmovnu
rclb
js
lret
inc
lcall
cmpsl
xchg
adc
imul
pop
aaa
xorb
cltd
xor
repnz
addl
rcrb
mov
mov
xchg
loop
std
lods
fnstsw
xchg
faddl
or
fldl
jae
lret
xlat
jmp
xor
ret
dec
lds
jle
leave
fcmovnu
xlat
aad
dec
iret
int
scas
insb
rorl
popf
lret
arpl
mov
mov
mov
mov
mov
dec
cmpsb
sub
pop
pop
stos
lret
aam
push
pushf
mov
jnp
out
jecxz
mov
xchg
roll
fidivrl
mov
jmp
rcrl
jp
in
addl
gs
sbb
pop
mov
adc
es
sbb
inc
loopne
xor
ljmp
xchg
stos
jecxz
xadd
leave
pop
popf
xor
lea
rol
bound
imul
int
inc
pop
repz
adc
mov
jge
adc
mov
sti
push
push
cmpl
mov
loope
dec
imul
scas
call
arpl
ljmp
repz
pop
iret
in
iret
sti
mov
dec
mov
pop
mov
jmp
jo
aam
pop
cmp
jno
cmpsl
out
ret
push
sub
push
shr
add
mov
scas
fwait
paddusb
repz
ror
cmpsb
in
ret
mov
lret
std
cmpb
mov
cwtl
popf
push
int
add
enter
ss
push
jp
dec
imul
stos
push
jecxz
mov
jg
mov
jl
cltd
pop
xor
jecxz
imul
mov
fstpl
inc
sbb
jge
jle
mov
add
jecxz
in
sti
out
pop
arpl
icebp
jecxz
shl
pop
and
aaa
mov
inc
xlat
fwait
sbbl
dec
mov
int3
fwait
xchg
sbb
into
out
movsl
xchg
and
leave
push
decb
in
arpl
shlb
mov
or
xor
cmpsb
and
sbb
inc
cmpsl
fcmovu
and
adc
cs
adc
aas
pop
popa
fwait
mov
jmp
xchg
jnp
mov
imull
ficomps
jno
test
pop
inc
inc
jmp
loope
cmpsb
dec
dec
pop
mov
push
inc
dec
ja
imull
or
push
sbb
fdivrl
inc
sti
out
mov
lods
jp
es
pop
loopne
inc
pop
fwait
pop
xchg
mov
aam
mov
inc
jmp
andl
cmp
jge
aas
pop
inc
enter
add
dec
cmp
adc
fmul
loop
enter
jo
jl
dec
inc
dec
jnp
out
es
xor
dec
push
pop
cmp
push
jecxz
hlt
dec
and
cmc
imul
push
test
add
mov
out
jne
add
aas
cmp
es
das
ret
jecxz
jg
iret
leave
sbb
lods
push
lds
pop
scas
add
mov
jns
inc
loopne
mov
push
rcr
push
out
push
add
mov
or
ret
shll
jp
lret
pop
xchg
dec
rcrb
adc
int
cmp
xchg
add
iret
jns
pop
je
mov
sub
roll
fsubrl
loopne
fidivl
insb
dec
pop
das
imul
int
mov
in
fwait
stos
jno
xchg
fiaddl
int
xchg
in
jno
pop
add
jno
cmp
into
fwait
out
pop
dec
push
imul
aam
inc
arpl
dec
sbb
sarl
or
mulb
pop
out
adc
jb
scas
sub
or
dec
stc
fadd
pushf
pop
imul
dec
push
cmp
push
jno
dec
shrb
mov
aas
int
jecxz
cs
inc
jne
pop
repnz
call
pcmpeqw
cmp
dec
mov
xchg
int3
cmp
or
ds
pop
psrlq
cmpsl
je
cmc
xchg
shll
outsb
in
das
cmpsl
fcompl
sbbb
mov
jecxz
gs
pop
xchg
push
out
inc
cwtl
stos
stos
repz
push
insb
lcall
sbb
out
mov
mov
lcall
das
mov
lock
xchg
out
and
sbb
xchg
or
loope
aam
mov
pop
xchg
imul
fmulp
test
mov
jmp
cmpsb
jb
or
mov
test
insl
pushf
shlb
xor
lods
cmp
inc
add
call
push
imul
cwtl
mov
in
imul
enter
mov
mov
std
push
xlat
repz
shr
push
and
fdivl
or
mov
mov
stos
inc
out
xor
dec
cmp
imul
or
test
ds
and
xchg
xor
sub
or
out
push
scas
pop
sar
jge
fstpl
test
shl
ss
mov
sti
subl
xchg
iret
jnp
ja
movsl
mov
sbb
and
rol
mov
insb
lea
call
lds
fbstp
mov
out
xchg
rclb
dec
cmp
repz
lds
sbbl
mov
repz
rcl
sub
fsubrl
out
xor
mov
pusha
xor
fstpl
push
jo
out
sub
xlat
and
jl
ja
dec
ss
xor
sub
mov
adc
test
push
jo
add
sbb
sub
mov
insl
and
addb
in
cmp
push
fldcw
in
dec
mulb
gs
loop
out
cltd
adc
rolb
mov
pop
stos
mov
push
faddl
addr16
cmp
xor
shrb
jge
sti
jmp
jmp
test
sbb
ficoml
xor
out
rcr
int3
xor
add
and
mov
in
cli
xchg
jge
cld
loopne
dec
loop
xorl
push
cltd
add
je
fdivp
xor
dec
jnp
fisubrl
ret
insb
and
leave
fadds
imul
mov
inc
dec
or
imul
sbb
jae
jmp
cmpb
rorl
imul
cmpsl
cmp
inc
fstpl
jae
imul
hlt
fwait
push
and
popa
sti
sbb
pop
imul
push
dec
mov
popa
cs
push
loop
pop
mov
or
add
shrl
fwait
jmp
mov
jmp
lret
or
jmp
dec
xchg
rolb
jmp
lds
rcr
xchg
aam
mov
jno
lods
jnp
hlt
or
mov
dec
jae
and
aas
jnp
dec
adc
mov
insl
sbb
mov
fisubs
into
cmp
push
cmp
dec
jbe
iret
mov
and
ret
sbbb
push
jno
mov
cmpsl
shl
roll
lds
cmp
outsl
pop
add
inc
iret
ret
int3
xor
popa
xchg
cmpsl
dec
pop
cmp
sbb
jp
inc
mov
xor
test
mov
push
cld
cld
js
stos
das
push
loope
cmp
fldt
xlat
adc
pop
push
shrb
pop
xchg
ljmp
lods
cmpsb
les
mov
movsb
shr
out
sti
mov
and
shrl
in
cmpl
mov
cmpsl
imul
int3
and
leave
bound
mov
and
and
ss
mov
mov
or
sub
andl
cs
jle
sbbl
ror
jmp
push
pop
jle
out
fistpl
jne
inc
push
jns
push
adc
sub
subl
and
iret
cwtl
fmull
push
mov
fstpl
add
popa
cli
int
std
inc
jmp
add
pop
adc
inc
rcll
mov
lds
aam
mov
lret
mov
out
mov
ret
adc
lcall
out
cs
std
sub
fistl
sbb
fcmovne
insl
xor
pop
ret
mov
pop
cmp
xchg
xchg
rcll
pop
jbe
xor
and
test
dec
pop
dec
fadds
in
daa
aaa
imul
fwait
nop
pop
lahf
lret
cs
push
xor
cs
enter
dec
push
and
daa
cmpsb
jge
cld
lock
mov
dec
stos
mov
pop
les
adc
jecxz
or
lods
mov
and
mov
outsl
mov
adc
lret
int
or
pop
mov
adc
cmpl
fildll
cmp
mov
jecxz
dec
pop
in
jle
xchg
push
aas
pushl
call
lea
stos
xchg
and
ret
popa
test
inc
adc
xchg
icebp
xor
sub
sbb
insb
andl
sbb
or
inc
pop
test
xchg
or
loope
fdivrl
push
cmpsl
jmp
pusha
popa
pop
pop
iret
outsl
in
dec
xor
mov
push
imulb
sbb
iret
cld
and
xor
adc
dec
push
and
or
pop
and
movsl
rorl
push
ss
dec
faddl
jmp
test
jg
pop
add
ret
aam
mov
imulb
push
arpl
jge
loop
test
insl
jmp
insl
and
sbb
test
vandnps
jno
jne
movb
call
sub
add
pop
iret
sub
aas
sbb
jg
lods
ret
stos
mov
aas
aad
or
out
and
pop
arpl
pop
pop
xchg
dec
and
cwtl
popf
sub
popa
mov
jne
lds
iret
fisubrs
test
iret
push
sti
mov
mov
in
jl
push
out
fwait
mov
mov
dec
xchg
popa
push
xlat
mov
sbb
mov
fsubl
ret
and
mov
mov
xchg
fsubrs
repz
cs
jb
jecxz
dec
repnz
pop
arpl
cmpl
leave
fsubrl
jge
mov
stos
into
and
repz
lds
shrb
xchg
adc
cmp
sbb
adc
dec
mov
aam
xchg
loop
in
lods
test
or
adc
push
jecxz
outsl
xchg
xlat
pop
int3
lcall
mov
and
call
fnstsw
jo
or
fcomip
pop
repz
push
test
ss
xchg
fnstcw
sbb
inc
pop
outsl
dec
sub
push
mov
call
sarl
xor
lret
imul
test
mov
into
xor
es
sbb
inc
add
in
sub
lcall
pinsrw
je
lea
inc
mov
mov
mov
mov
js
js
psllq
sbb
loopne
addr16
into
inc
xor
aam
js
jae
inc
jp
imul
jae
movsl
sbb
cltd
or
movsb
stc
add
xchg
nopl
sub
push
out
addb
fcoml
mov
jge
ret
and
inc
fsubr
sbb
aas
push
ljmp
mov
stc
push
stos
xor
jmp
mov
xchg
mov
sub
flds
push
pop
push
push
inc
xchg
pop
mov
jae
and
mov
xor
pop
popf
sbb
lds
and
and
faddl
lods
mov
push
rcll
cs
cmp
imul
jae
call
mov
fnstsw
jb
leave
aas
ret
xor
enter
xor
add
ljmp
or
cs
in
jecxz
xchg
jnp
sahf
jno
dec
xor
mov
out
or
ds
mov
sti
int
jecxz
xlat
pop
jno
rcrl
pop
xor
stos
mov
adc
inc
insb
and
int3
fsqrt
mov
fildll
icebp
sub
cmc
sbb
js
mov
xchg
sbb
aam
les
cltd
ret
dec
and
jnp
test
in
negl
pop
adc
mov
inc
ret
jg
push
pop
dec
imul
push
pop
scas
sbb
or
rolb
jns
outsl
adc
adcl
jmp
es
aaa
stc
or
xor
jp
or
sub
or
mov
mov
dec
or
dec
inc
add
fidivrs
dec
outsl
inc
ret
xor
fdivrs
or
inc
mov
insl
add
fisttpl
loope
push
gs
push
or
ret
mov
lock
inc
fistl
xchg
mov
jno
mov
out
add
sub
psraw
sbb
cmc
mov
shr
ret
xchg
sbb
inc
stos
cmp
data16
in
sbb
rcll
mov
fnstsw
fistl
enter
in
in
out
push
ljmp
inc
aaa
push
xor
test
xchg
and
sbb
loopne
test
mov
enter
movl
push
fcom
jp
pop
cmp
hlt
out
cmpsb
jo
stos
xor
push
rcll
xor
xchg
ret
fsub
lods
cld
cmp
aad
mov
in
push
out
imul
inc
jmp
lods
fcompl
shrb
lahf
push
iret
jmp
mov
divb
insl
add
or
popa
fwait
shr
mov
sbb
push
mov
test
rcll
cmpsb
mov
arpl
jle
fld
mov
dec
and
ljmp
cmp
sub
movsl
push
adc
loopne
in
ret
test
scas
fimull
fstpt
sbb
outsb
das
jae
xlat
adc
insl
jb
lods
out
fidivl
xchg
pop
xchg
fcomp
lods
pop
jecxz
adc
mov
inc
faddp
aad
sti
or
fadd
mov
in
sbb
sti
sbb
mov
mov
adc
xchg
sub
aad
out
cmpsl
frstor
xor
movsl
aas
mov
ret
push
mov
sbb
or
lds
out
or
cld
icebp
les
aaa
jmp
and
pushf
pop
jg
jnp
pushf
xchg
xlat
aam
aas
inc
nop
lock
leave
jle
lcall
ja
and
lret
test
imul
pop
mov
mov
fmull
js
mov
xchg
out
pop
pop
pop
xchg
mov
movsb
sbb
dec
sub
aas
fwait
mov
addr16
push
jmp
mov
repnz
mov
out
fld
aaa
subps
mov
lock
sub
cmp
inc
stc
aam
fisttpll
ret
xor
hlt
ljmp
in
xchg
in
les
iret
sbb
sahf
adc
addr16
scas
std
lret
mov
sub
fimull
push
mov
and
out
into
xchg
mov
neg
sub
sti
mov
push
inc
adc
xchg
std
ds
out
xchg
sti
fcompl
lods
push
add
mov
lahf
loopne
push
fwait
inc
mov
inc
fdivr
mov
jae
xor
mov
ret
jmp
shlb
stc
fldl
mov
jle
pop
sbb
sbb
pop
adc
shll
shlb
pop
imul
xchg
in
inc
dec
jg
icebp
push
test
adc
pop
cmp
xchg
xor
xchg
jae
arpl
data16
stos
inc
pop
xchg
push
xlat
or
out
inc
imul
lcall
pop
out
sbb
cltd
stos
and
orb
leave
aam
stos
xor
dec
arpl
mov
outsl
cltd
inc
dec
cmp
jecxz
lcall
xchg
out
lret
in
das
test
xchg
add
stos
ljmp
push
and
inc
mov
andb
sahf
and
test
xor
push
xchg
subb
jg
daa
mov
xchg
cmp
adc
dec
or
jge
test
lret
xchg
jns
imul
pop
imul
flds
mov
fisubrl
fxch
imul
dec
pop
lods
xor
int3
and
fdivs
test
push
repz
scas
out
xlat
inc
sbb
out
push
lock
xor
adc
mov
shll
cmp
pop
xor
xchg
mov
inc
cmp
dec
int3
push
mov
pop
ret
ljmp
xor
mov
sti
popa
sbb
fnsave
mov
mov
cltd
inc
mov
jle
js
ljmp
loopne
enter
lcall
inc
mov
dec
sarl
test
cmpl
xor
or
in
xchg
stc
lock
push
pop
arpl
mov
divb
cld
pop
mov
mov
mov
fs
mov
outsb
ja
mov
cmpl
orb
test
jl
sub
pop
ljmp
fwait
mov
imul
sbb
stc
push
mov
stos
mov
push
inc
jmp
sbb
mov
icebp
out
in
das
or
jmp
into
das
ja
xchg
imul
sbb
into
roll
aam
nopl
popa
popa
fdivl
xchg
jecxz
lods
dec
mov
cmp
pop
stc
sub
push
pop
mov
xor
pushf
sub
push
pop
cltd
mov
dec
hlt
leave
cmpsb
das
cmpsl
adc
jb
sbb
jl
mov
loop
xchg
in
lock
xor
test
inc
or
scas
adc
add
xlat
shrb
inc
mov
sub
es
inc
sahf
stos
jo
push
mov
loopne
test
xchg
out
enter
jbe
ficoml
fcoms
adc
imull
xchg
outsl
xchg
fistpll
adc
fdivl
xor
test
insb
or
inc
aad
mov
cltd
insb
gs
xchg
jmp
out
jns
pop
xchg
mov
mov
lods
sbb
insb
shlb
aam
fldt
xor
das
adc
inc
mov
jb
push
fucom
pop
inc
xor
outsl
repz
gs
repz
int
repz
mov
gs
rorl
dec
das
xor
es
xor
cli
and
les
mov
in
push
shlb
xchg
es
outsl
add
enter
addr16
clc
xor
xchg
sub
cmp
sub
mov
pop
addr16
push
fidivrs
jmp
push
rol
cmpsb
js
mov
fdivrl
lock
fsub
in
lcall
sbb
jg
scas
add
pop
inc
daa
dec
imul
push
dec
jmp
add
adc
cmp
pop
dec
mov
fadds
pop
xchg
mov
stos
inc
stos
test
fbstp
in
cmp
data16
pop
inc
shrl
xchg
mov
es
inc
fldcw
pop
adc
repz
pop
shll
in
push
movsb
pop
xor
cmp
cli
fwait
mov
test
cmp
js
scas
adc
iret
mov
pop
cmpsb
hlt
push
mov
inc
cs
cwtl
in
in
xor
lods
cmc
or
lods
movsl
pusha
sub
or
adc
mov
cmpsb
xlat
mov
or
mov
push
dec
cwtl
stos
and
dec
mov
mov
out
push
sub
imul
xchg
aad
sub
push
idivb
vmulss
fldenv
dec
xchg
push
cmpl
jno
mov
push
ret
jp
aas
or
dec
and
mov
sub
inc
sbb
dec
iret
ljmp
pop
ret
lcall
ljmp
push
and
jmp
lcall
sbb
ret
arpl
mov
nop
sbb
xorb
les
pop
test
xchg
xchg
add
adc
xor
dec
iret
sbb
iret
mov
jmp
mov
jb
push
jb
or
dec
pop
jo
shlb
dec
pop
fwait
and
mov
pop
fisttps
ret
insl
in
sub
aaa
and
fistl
jb
mov
out
pop
gs
in
bound
sti
dec
jns
xchg
arpl
pushf
fimull
push
pop
lcall
shr
shrl
leave
out
test
les
inc
pop
mov
test
sub
mov
repz
in
dec
jns
mov
inc
lret
cwtl
sbb
push
call
test
addl
in
mov
fwait
lods
mov
std
push
vpshad
pop
imull
or
sbb
out
jmp
inc
lret
inc
lcall
inc
jb
pop
out
lret
mov
jecxz
inc
shr
pop
insl
dec
mov
in
fwait
stos
aas
scas
jns
push
cmpsl
mov
arpl
enter
mov
and
adcb
inc
jle
out
or
mov
rcl
mov
xchg
pop
shlb
or
int3
ds
and
or
push
in
outsl
push
sti
call
in
sub
jmp
pop
mov
and
aaa
fsts
popa
in
fdivr
out
inc
add
xor
aam
pop
mov
cmp
pop
push
sbb
stos
stos
ror
dec
imul
test
in
mov
sbb
adc
jnp
rcrb
hlt
mov
data16
je
cmp
jmp
fisubrs
xor
loope
addr16
xchg
jnp
or
mov
fs
sbb
sahf
or
pop
loope
aas
test
lds
inc
jmp
lea
gs
pop
mov
into
and
movsl
testb
adcl
jle
pop
pop
mov
or
dec
adc
add
loopne
in
stos
xor
ret
ss
insl
mov
out
fucomip
mov
mov
inc
push
cltd
aaa
add
rorl
lcall
sub
adc
leave
cmp
add
cmc
test
ret
movsb
mov
es
inc
faddl
imul
fsts
mov
test
dec
popa
jmp
push
and
popf
mov
nop
rorl
dec
fxch
adc
lods
or
aam
jg
pop
ss
out
jne
pop
jnp
into
bswap
outsl
sti
test
ficoml
enter
loopne
test
imul
addr16
jns
jl
out
xor
dec
jmp
jge
ret
jp
jp
cli
in
jmp
xlat
lock
dec
inc
fwait
add
pop
pop
fcmovnb
xor
xorb
xchg
jbe
mov
cld
cltd
stos
das
push
and
mov
jb
add
xlat
fmuls
inc
pop
test
cli
sbb
dec
insl
loopne
addb
cmp
in
leave
inc
test
icebp
int3
xchg
and
or
dec
enter
inc
in
test
xchg
jns
mov
jle
xor
or
sbb
mov
mov
scas
insb
mov
fisttps
xor
in
ja
or
enter
pop
imul
es
jno
adc
mov
fstpt
and
push
cmpsl
ljmp
sbb
inc
nop
test
test
and
cmp
push
pop
push
fistps
lcall
stos
js
mov
inc
fwait
gs
push
cwtl
cld
repz
cmp
jg
loop
repnz
and
cld
mov
clc
ja
cmc
sbb
arpl
sub
jae
mov
push
mov
fsubrl
pop
xchg
cltd
inc
mov
fcoms
jo
stc
inc
sbb
rcl
out
outsl
jno
imul
push
es
rorb
cmp
ja
sbb
mov
stos
jno
es
insb
mov
jae
mov
rcll
ljmp
das
sbb
mov
adc
dec
mov
mov
push
push
inc
mov
dec
repz
pop
ret
push
shlb
fucom
sub
mov
mov
data16
sbb
test
jecxz
mov
xchg
gs
pop
sub
push
and
inc
cmp
inc
push
fcmovne
xor
jno
lea
stc
xor
int
outsl
stc
dec
jne
pop
cmpl
jb
icebp
dec
xchg
pop
mov
jmp
repnz
and
cmc
stc
mov
sti
or
outsl
sub
cmp
cmp
ret
xchg
loopne
pushf
notb
mov
test
lcall
rol
add
pop
shll
pop
lret
stos
idivb
sbb
ret
cltd
dec
mov
cmp
pop
loope
inc
jmp
and
mov
mov
out
ret
sub
fcom
or
mov
mov
loope
aam
mov
mov
neg
xchg
xlat
xor
test
inc
int
pop
adc
xchg
add
aaa
testb
iret
rcl
stc
fwait
inc
push
jl
push
pop
xor
pop
out
int3
adc
xor
add
test
dec
sar
in
jg
mov
shr
jl
mov
xor
loopne
xor
ja
js
dec
stos
mov
adcl
xchg
rorb
shrl
leave
dec
fnstcw
adc
lea
gs
test
jno
push
push
xchg
pop
out
sbb
hlt
mov
xlat
rcrb
aas
int3
in
mov
outsl
fyl2x
ds
cmc
sub
sahf
jle
lds
push
lahf
xchg
jecxz
int3
insb
sahf
dec
push
sarl
dec
xorl
dec
sbb
fistpl
dec
test
addl
push
inc
lret
or
sub
fsubs
mov
cmp
loop
adc
aam
fisubrl
fucom
push
sbb
jg
loop
push
addl
dec
mov
dec
mov
jl
arpl
mov
incb
movsb
icebp
lods
mov
pop
ljmp
pop
mov
and
popa
mov
and
xlat
popf
push
lret
jae
jnp
mov
testl
push
xlat
inc
les
out
ret
jne
ret
xor
clc
std
test
push
cmp
jecxz
js
aas
xchg
inc
mov
fstl
jge
cli
aad
jmp
movsb
rcrb
out
mov
mov
push
jecxz
mov
test
fcompl
jg
dec
fstpl
mov
dec
add
push
xor
mov
xor
test
outsb
adc
pop
cli
adc
sub
push
mov
fbld
cmc
dec
es
xchg
push
outsl
nop
fimuls
out
xlat
push
or
loopne
popf
fsubl
pusha
adc
arpl
jl
cmp
sub
out
leave
inc
cld
dec
add
and
das
xchg
fiaddl
sahf
aam
xor
ret
mov
sti
and
xchg
ljmp
pop
fisttpl
pop
add
lods
cli
mov
xor
pop
ss
roll
sub
and
xchg
ret
out
outsl
inc
mov
out
adc
shlb
fadd
xchg
or
xchg
mov
cltd
add
mov
add
lret
shr
mov
aaa
div
in
mov
pop
xchg
mov
add
mov
fnstsw
mov
lea
ret
repnz
leave
mov
inc
inc
shlb
insl
shll
imul
adcb
jmp
aaa
cmp
mov
pop
lods
mov
test
std
adc
xchg
mov
push
sub
and
les
fsubr
sub
ret
add
imul
addl
shrb
enter
sub
or
lds
cmp
xchg
sbb
pop
cmp
addl
testb
inc
repnz
sbb
sbb
jae
pop
loopne
clc
xor
jno
outsl
mov
lcall
pslld
mov
mov
stc
mov
bound
pushfw
jl
enter
repnz
fstsw
push
inc
test
lds
enter
mov
xor
jle
cmc
sbb
cmp
dec
mov
mov
push
aad
clc
in
ds
aas
inc
enter
mov
jne
jnp
mov
leave
shrw
xlat
arpl
loope
xchg
ret
mov
add
jmp
mov
mov
insb
or
jae
fs
push
mov
pop
lret
std
in
scas
fwait
loop
cmpsl
sbb
mov
imul
leave
lea
bound
leave
jns
push
push
test
xchg
jle
rcrl
int3
inc
bound
rcrl
mov
aaa
or
xor
ss
rol
stc
pusha
div
in
or
in
ret
fcompl
push
test
inc
sub
dec
rcrl
mov
rcr
xlat
ret
and
add
mov
xchg
gs
testl
es
insl
das
ja
xor
repnz
lcall
xor
jmp
sbb
ret
rcl
test
pop
mov
adc
sar
jecxz
push
ret
pop
repnz
xchg
ret
and
ljmp
sbb
push
pop
or
rcl
and
xchg
and
mov
fcoml
mov
dec
adc
cmp
fcoms
xor
lcall
mov
adc
sbb
pop
mov
push
pop
xor
push
cmpl
jmp
sbb
and
ret
orb
inc
push
xor
cmp
xor
adc
xor
dec
jmp
sbb
jno
push
and
pop
aas
sub
addl
pusha
int
inc
push
mov
xchg
mov
insb
lcall
inc
mov
pop
andl
cmpsb
pop
aas
pop
push
push
pop
das
dec
pop
push
leave
add
fldenv
dec
xlat
sub
inc
push
mov
dec
jge
hlt
cmp
add
cltd
jns
mov
mov
das
arpl
pop
int3
xchg
mov
sub
daa
loope
pusha
sti
xor
in
mov
push
pop
pop
int
mov
lea
arpl
push
fwait
pop
stc
pop
lds
add
sub
xchg
dec
cmpsl
mov
out
mov
dec
dec
std
enter
in
pop
jmp
add
mov
cmpsl
fucomi
cli
popf
je
idiv
jle
roll
sti
ror
movsb
pop
aam
sub
pop
fsubp
sti
imul
xchg
cmp
xor
mov
pop
sbb
cmp
js
mov
addr16
add
dec
xchg
aam
mov
mov
cld
test
aam
xor
xchg
xor
push
std
mov
dec
loopne
pop
pop
jecxz
js
in
inc
fsubr
push
repz
popa
or
shll
jns
xor
jmp
push
jecxz
jno
push
andl
fisttpl
adc
arpl
or
jecxz
out
mov
push
and
lea
jbe
jle
xor
xchg
mov
aas
inc
push
dec
push
ja
in
push
in
fildl
push
movsb
mov
repnz
mov
push
cmp
jmp
or
pushf
imul
add
xchg
xor
stos
in
in
and
mov
pop
nop
jae
aam
add
xor
mov
jmp
jecxz
das
xchg
jno
imul
inc
gs
and
jae
mov
xchg
pop
gs
jnp
mov
sbb
push
dec
lret
mov
jbe
inc
lock
sbb
pusha
push
lcall
cltd
dec
mov
xor
daa
js
fsubrs
ret
arpl
cmpsb
pusha
sbb
sbb
ficomps
sub
sub
inc
jno
mov
arpl
pop
enter
popf
sahf
fwait
sbb
ja
fdivs
push
iret
jno
cmp
shll
mov
insb
mov
dec
cmc
leave
es
add
inc
mov
movsl
int
cs
arpl
fwait
aam
movsb
fildl
dec
lods
sub
dec
cmpsl
inc
inc
cmp
enter
inc
adc
lcall
ret
xchg
xchg
inc
cs
shr
testl
cmp
data16
jo
mov
shll
add
mov
fsub
xchg
jecxz
rcll
gs
dec
lret
mov
roll
les
outsb
enter
nop
inc
hlt
dec
sarb
inc
push
sbb
out
test
jnp
xor
and
xor
in
xchg
es
repnz
stos
fxam
sbb
fs
aad
mov
incb
dec
daa
push
jns
pop
dec
cmp
jnp
arpl
or
dec
jbe
and
jnp
lods
push
xchg
sub
ret
xchg
cli
in
mov
xor
fwait
pop
into
repnz
jae
xchg
mov
imul
pop
repz
nop
out
fldcw
inc
pop
rep
mov
and
fucomip
mov
xchg
loopne
dec
scas
flds
cld
das
xchg
xchg
das
scas
leave
insl
jae
cmp
inc
jbe
sbb
cmp
jns
leave
je
outsb
loope
push
jecxz
inc
fcomp
adc
dec
inc
xor
inc
push
mov
push
subl
jmp
fsubr
jg
enter
ret
or
pop
adc
imul
xor
push
shl
fcomps
mov
scas
repz
mov
test
ss
aam
cwtl
mov
push
fstpl
jmp
or
dec
pop
repz
cmp
pop
add
dec
and
je
inc
je
xor
xlat
mov
ja
cmc
mov
lret
ss
xor
cmp
cli
gs
xor
in
jnp
mov
mov
pop
fwait
dec
jmp
pop
xor
adcl
mov
sub
cld
out
aam
aam
test
mov
cmp
or
pop
xor
mov
out
in
idivl
xor
rcrl
pop
and
dec
popf
fadd
mov
das
pop
mov
pop
dec
pop
in
sub
fwait
into
push
std
hlt
jmp
fwait
inc
mov
dec
mull
or
or
clc
mov
in
jmp
mov
pop
inc
je
push
outsb
sti
cmpsb
or
jne
adc
shl
sbb
mov
ja
xchg
and
dec
sub
pop
data16
inc
pop
sti
sbb
cwtl
mov
xchg
inc
imul
jmp
mov
push
push
cmpsb
pop
int
jle
sti
cmpsl
loop
inc
dec
fcoml
ud0
outsb
mov
out
jl
sub
sahf
stos
pop
inc
add
ja
fnsave
jmp
cmp
jp
sbb
and
int3
stc
gs
mov
inc
mov
int
push
aam
cmp
loop
adc
add
inc
aam
imul
jmp
ja
movl
fnstcw
repnz
ja
sti
jae
jnp
push
add
push
xor
add
jmp
pop
int3
sbb
xchg
fwait
ret
int
sbb
mov
inc
lea
push
test
popa
popf
ret
out
sub
imul
dec
fwait
mov
add
inc
sti
enter
fstl
inc
into
test
je
mov
lods
repz
push
cmpsl
sbb
sbb
in
adc
or
sbb
xchg
mov
gs
lods
shll
xchg
mov
adcb
sub
fwait
and
stc
jecxz
jb
clc
test
mov
sti
test
xchg
scas
push
movb
lret
cli
cltd
daa
add
test
ret
pop
jbe
stos
and
pop
loopne
xchg
fcompl
mov
jmp
mov
call
mov
in
pop
pop
jno
xchg
fwait
adc
out
addr16
out
stc
mov
sahf
and
pop
xchg
stos
jecxz
in
rcl
and
sbb
filds
loopne
aaa
push
lahf
inc
in
xchg
shr
fisubrl
fs
and
outsb
dec
push
cmp
leave
push
out
call
ficomps
push
xchg
imul
enter
pop
xchg
ljmp
bound
insl
lds
cmp
dec
gs
xor
gs
dec
stc
dec
mov
ret
jmp
pop
scas
jle
pop
xor
and
sbb
ficoml
mov
mov
inc
in
loopne
ss
mov
push
push
mov
xchg
cmp
mov
push
fcoml
pop
popf
dec
insl
inc
push
insb
mov
ret
loope
pop
inc
and
int
in
cmp
es
xchg
mov
sbb
or
add
outsl
ret
xor
fwait
or
xor
icebp
mov
pop
and
mov
xor
rcrl
lea
xchg
push
movsl
dec
xor
aam
test
mov
xor
scas
cwtl
lods
cli
adc
adc
pop
es
in
push
inc
xor
incb
jmp
mov
and
insl
dec
repnz
jbe
lea
pop
nop
mul
adc
popf
neg
mov
pop
ja
sbb
mov
shlb
popa
repnz
or
ljmp
xchg
fsubrs
fnstsw
pop
adc
int3
sbb
xorl
cmp
sbb
int
into
popa
pop
loopne
mov
shlb
jecxz
and
dec
pop
jne
out
fstpl
add
mov
mov
jmp
rcl
fisubrs
sbb
aam
jecxz
and
dec
mov
xchg
xchg
sbb
outsb
lods
mov
xor
dec
adc
addl
sahf
adc
xchg
clc
les
dec
int3
scas
dec
push
rolb
adc
mov
dec
add
jle
sbb
fidivrl
dec
jmp
in
data16
sbb
add
mov
nop
in
push
fadd
mov
jmp
dec
scas
lds
xor
fists
dec
xchg
push
std
mov
fisubrl
jnp
sahf
call
mov
out
xchg
xchg
jecxz
testl
jmp
popa
xorl
popa
pop
ficomps
jmp
adc
xchg
mov
lret
les
out
dec
pop
xor
leave
dec
sub
push
xchg
xchg
fsts
add
push
cmp
sub
inc
mov
aam
popl
pop
jne
push
mov
mov
shrb
xchg
dec
std
jnp
inc
es
jno
imul
and
cs
adcl
sbb
fnstenv
pop
or
ret
sub
mov
push
ret
sbb
in
or
cmp
imul
mov
scas
out
sbb
data16
mov
pop
sub
mov
adc
or
inc
out
dec
pop
and
sti
les
repz
ja
std
lret
jge
aam
iret
out
ret
xchg
addr16
pop
or
mov
das
popa
cwtl
popf
xor
jmp
mov
cltd
and
inc
push
shrb
insb
rcrl
adc
xchg
add
mov
roll
stos
mov
popa
pop
cld
incb
pop
inc
mov
adc
daa
int
jne
and
lea
mov
cmp
xchg
out
imul
fs
sbb
and
ficompl
cmp
or
cwtl
inc
inc
movsb
out
jo
roll
xchg
leave
xor
jno
arpl
xor
mov
in
pushf
and
and
fstp
jecxz
mov
in
sub
and
cltd
adc
rcll
movb
sbb
jmp
or
sub
jmp
test
inc
or
push
mov
cmc
call
ljmp
mov
or
test
pop
stos
jle
sti
pop
pop
push
lock
lcall
jp
or
xor
in
out
imul
pop
pop
filds
fcoml
xchg
and
hlt
fsubs
and
pop
mov
jbe,pn
scas
sti
ret
pusha
or
inc
mov
cmp
ss
push
fldt
loopne
sub
and
jnp
jb
cmp
iret
cmp
xor
lds
cs
jmp
ficomps
fisubrl
push
sbb
or
push
xchg
ficoms
xrelease
out
cmp
pop
jge
mov
adc
rol
inc
mov
je
pushf
lods
fwait
lret
sbb
loopne
push
and
aaa
jno
inc
cmpl
push
es
sbb
adc
lods
ret
xchg
test
fists
repz
xchg
fsubrl
dec
sbb
inc
pop
out
pop
paddsw
test
sbb
jl
xchg
lods
hlt
insb
gs
push
mov
mov
fwait
into
fildl
push
sub
imul
cmpsb
gs
roll
mov
push
lahf
out
mov
adc
sub
enter
pop
shlb
adc
push
dec
cmp
sti
add
xor
jecxz
mov
and
scas
out
lods
mov
inc
jecxz
jg
inc
dec
mov
test
pop
arpl
and
mov
rcrb
imul
lret
addr16
and
rcll
xor
dec
in
insb
imul
int3
pop
fisttpl
sub
push
adc
jmp
loope
xor
fwait
into
inc
hlt
je
imulb
nop
xchg
sysexit
xlat
hlt
test
pop
vpsubsw
mov
mov
jnp
mov
inc
test
iret
lret
mov
ljmp
add
and
inc
add
ret
add
test
popf
loopne
fwait
add
ret
fldenv
sbb
sub
cmpl
cltd
push
addr16
xchg
insb
jle
outsl
loopne
mov
imul
fnstcw
iret
mov
push
notl
fs
mov
jne
push
pop
stos
mov
dec
inc
lods
imul
sti
jl
cltd
xor
roll
in
jae
cmp
and
jno
call
rcr
mov
imul
jmp
inc
lea
out
jecxz
inc
rcr
lods
dec
jae
pop
sub
mov
or
ret
sbb
push
pop
int
fsubr
dec
pop
jle
sub
cs
ret
adc
inc
inc
fstpt
xchg
fdivrl
add
sarl
mov
fwait
pop
xorl
mov
sub
stos
ja
stos
jno
int
or
inc
add
dec
pop
scas
inc
lahf
xchg
fisttps
aam
mov
jp
adc
push
test
aam
sub
js
xor
mov
sub
sbb
xchg
movsl
mov
push
push
ret
xchg
push
xor
lcall
lods
pop
inc
dec
daa
out
xchg
fildll
sub
out
inc
xchg
push
cmp
cmp
popf
test
cmc
jecxz
movsb
sub
ret
rcrb
pop
out
stos
outsb
and
dec
xor
imul
subl
ret
xchg
je
pop
vcmpss
push
dec
andl
inc
fidivs
push
sbb
ljmp
insb
push
jmp
pop
je
loopne
popa
lods
ret
fwait
or
dec
inc
jae
ret
jle
fst
rolb
ljmp
push
cmp
ja
dec
push
dec
and
dec
xchg
or
imul
test
or
jae
mov
adc
repz
test
aas
lea
sub
xchg
leave
pop
jnp
pop
dec
mov
mov
addr16
push
ss
and
add
push
and
dec
mov
ja
movsb
sub
push
imul
mov
cli
dec
or
jns
jmp
sbb
cltd
pop
mov
dec
rcl
inc
popa
pop
stos
mov
mov
mov
iret
fninit
leave
ds
imul
xor
jecxz
rcrb
jp
xor
les
dec
mov
jo
xor
mov
cs
mov
icebp
lods
out
cmpsl
xchg
push
xor
mov
test
shlb
xchg
loope
fdivs
out
mov
ret
xor
mov
imul
sbb
push
sbb
push
mov
int
dec
push
or
cltd
inc
push
push
test
cs
push
add
jae
aam
mov
or
mov
ss
pop
fst
sub
mov
addr16
xor
ds
xor
jmp
sbb
pushw
push
out
rcrb
sbb
adc
popf
fwait
xchg
addl
sbb
test
lock
push
cmp
pop
mov
mov
dec
das
mov
xchg
cltd
adc
aad
cmpsl
lcall
aad
fistpll
fisubrl
daa
sub
stc
or
jp
sahf
or
ficomps
test
add
popa
fcoml
arpl
pop
mov
pop
inc
ficomps
imul
pop
int
scas
jg
sub
pop
xchg
push
lahf
mov
xchg
insl
out
imul
cli
ret
adc
pushf
push
jle
adc
subb
cld
cmpsl
int3
cmpsb
adc
or
pop
decl
aad
and
aad
shrl
sbb
dec
popa
faddl
aam
test
sbb
xchg
icebp
push
push
and
push
aam
addr16
insl
cs
lea
dec
cmc
sub
push
and
repnz
jge
lods
lcall
dec
cmp
add
sbb
xchg
push
push
mov
sahf
outsl
movl
pop
cmpl
mov
jge
test
and
dec
out
and
jg
mov
lea
pop
jge
jge
adc
inc
sti
pop
fcompl
dec
aas
dec
lods
xchg
mov
mov
xor
cld
jge
and
pop
int3
mov
stos
sub
lret
leave
es
sub
jmp
push
dec
lret
movsb
mov
add
sub
jmp
lahf
ffreep
sub
aaa
fstps
sbb
ret
leave
setb
icebp
scas
cmc
dec
push
repz
jae
ja
fstpt
jecxz
lods
cmpsl
lret
test
daa
mov
sbb
lds
iret
pop
inc
arpl
jmp
out
roll
lahf
cmp
add
out
out
sbb
pop
jmp
out
jmp
addr16
lahf
outsl
les
cs
jno
outsl
jo
mov
dec
mov
sti
js
dec
ljmp
scas
mov
add
int
xchg
and
fldl
push
stc
ret
cwtl
in
pop
scas
lcall
fwait
dec
in
xchg
dec
pop
pop
mov
add
pop
adc
stc
mov
push
ret
cltd
xchg
dec
test
and
sbb
push
sub
push
lds
ret
sbb
dec
jo
sbb
divl
pop
adc
xchg
les
leave
mov
dec
pop
faddl
pop
and
pop
xchg
or
push
sub
dec
cmp
shll
out
sbb
jge
loope
lret
adc
mov
daa
cmp
in
stos
jbe
popa
add
sbb
inc
fdivrl
push
cmc
cmp
fdiv
push
out
lret
jmp
and
pusha
mov
and
add
aas
out
jo
data16
cmpl
std
jmp
jmp
out
xlat
scas
inc
jmp
jg
stos
jg
fisubrl
mov
nop
cmc
xor
mov
xchg
stos
pmaxsw
cmp
mov
fisttps
jo
inc
sbb
insb
push
out
jecxz
int3
inc
xchg
jmp
sti
sbb
ret
out
inc
sbb
jnp
orl
bound
cmpsl
movsb
loope
test
shrb
insl
dec
adc
inc
sbb
push
jl
mov
test
add
adc
push
dec
in
push
xor
mov
jp
xchg
mov
iret
dec
mov
cmp
repnz
fs
shrl
cmp
les
mov
stos
mov
dec
mov
les
mov
das
sub
cltd
sub
adc
nop
test
push
jno
mov
std
leave
repz
in
inc
aad
sbb
outsb
xor
fldl2t
fisubrl
call
rol
cmp
xorl
es
jge
or
mov
xor
test
dec
xchg
adc
pusha
mov
testb
pop
pop
pop
inc
mov
movsl
ja
sub
mov
lods
enter
enter
loope
arpl
cmp
adc
or
aaa
inc
sbb
fwait
popa
data16
stos
pop
mov
inc
fnstcw
rcr
inc
stc
or
lret
les
pop
iret
std
dec
lcall
int
xorb
bound
pop
sti
in
jbe
daa
lcall
push
push
cmp
sar
fwait
test
sub
ret
fimull
jmp
mov
mov
lods
xor
sbb
hlt
fucomip
jae
and
pop
rcll
inc
repz
pop
xor
in
sub
int
stos
fmull
imul
in
sub
or
lea
xchg
divl
inc
int3
lods
sbb
fstpt
outsb
mov
iret
xor
dec
call
nop
ror
dec
in
xor
mov
xor
in
mov
inc
sti
ret
js
cltd
jecxz
lcall
out
popf
inc
ret
pop
mov
cld
push
push
mov
jecxz
hlt
addl
xchg
ret
stos
jbe
jae
mov
outsb
dec
dec
dec
test
clc
scas
out
popf
push
jae
jge
mov
fsubr
ret
aad
xchg
test
pop
lock
call
jns
dec
jno
jmp
pop
stos
adc
pop
xor
dec
fsubl
sub
cmp
dec
outsl
fwait
mov
jae
enter
data16
iret
rorl
call
sub
adc
adcl
xor
mov
arpl
in
out
stos
pop
dec
push
sub
sti
push
repz
in
sti
and
sbbb
dec
stc
leave
push
pop
xor
jge
dec
loopne
ljmp
dec
out
dec
loopne
inc
add
stos
gs
push
fdivrl
aam
mov
out
sbb
jnp
fwait
push
jns
sbb
dec
mov
dec
dec
jnp
fmul
or
cmp
push
cmc
xchg
loopne
mov
fs
aaa
inc
negl
xlat
inc
in
cld
xor
cmp
test
dec
adc
and
pop
pop
in
int
mov
andb
push
xchg
jmp
ja
xchg
mov
jecxz
and
mov
call
test
shrl
addl
les
ficoml
sti
hlt
imul
insl
movsb
lods
iret
mov
fisubs
shl
add
add
orb
aam
adc
imul
mov
jecxz
repz
rcrb
dec
je
add
negl
inc
sbb
lods
mov
push
daa
dec
adc
mov
mov
fsubs
mov
ret
jnp
xchg
test
inc
insb
sub
mov
test
out
fisubrs
mov
mov
imul
insb
sub
stos
icebp
icebp
fsub
xchg
sti
cmpsb
stos
leave
fnstenv
jmp
dec
flds
jnp
ss
sahf
push
std
filds
cmp
popf
xlat
xor
loop
cmc
pop
xor
iret
push
mov
jecxz
fcoms
mov
rcrb
jmp
fwait
push
inc
sub
xchg
and
imul
cli
dec
aaa
mov
cwtl
test
mov
int3
fsubrp
loop
stos
xlat
fisubrl
inc
aaa
mov
pop
int
shll
out
movl
cwtl
mov
jg
or
add
mov
lock
in
cmp
test
lods
or
pop
aam
je
add
mov
fisttpl
in
pop
push
xlat
fcmove
imul
cmpsl
jmp
ret
inc
xor
dec
mov
inc
inc
fsubr
addl
push
xchg
sub
ds
mov
mov
stc
outsb
out
fadd
scas
inc
je
std
jecxz
in
mov
add
jmp
xchg
pusha
movsl
leave
inc
adc
mov
loop
xchg
cmp
popf
inc
fld
imul
ljmp
lea
push
sub
outsl
imul
ss
out
xlat
push
sarl
int
pusha
test
sbbl
push
out
mov
test
fstpl
dec
test
and
pop
mov
mov
mov
bound
inc
fnstsw
leave
mov
mov
arpl
lahf
jge
in
les
xor
std
dec
int3
xchg
push
push
cld
data16
rcrl
xor
stos
in
push
test
adc
mov
cli
mov
dec
int3
fisttps
rorl
xchg
push
idivl
enter
xor
add
xchg
adc
scas
push
and
mov
stos
mov
je
repz
jno
std
and
cmp
xor
arpl
scas
mov
leave
imul
scas
push
jnp
lret
test
xchg
mov
hlt
je,pn
movsl
insb
or
sub
daa
mov
in
aas
push
xchg
pop
stc
pop
call
xlat
sbb
roll
in
lds
mov
ret
push
fwait
ret
add
dec
add
xor
mov
mov
push
and
dec
sarl
dec
fdivrs
mov
jbe
and
or
int
leave
pop
sbb
stos
xor
int3
sbb
xlat
push
in
jl
push
mov
mov
dec
sbb
xor
inc
jge
repz
cld
in
enter
cli
push
xchg
ljmp
cmpsl
sbb
testl
in
mov
mov
sbb
shrb
mov
and
xchg
popf
cmp
xlat
out
ret
cmp
and
pop
dec
aas
cltd
jae
push
ljmp
or
add
add
dec
das
sbb
push
movsb
jno
addr16
movsl
movsb
cs
sub
ja
jge
mov
fcoml
mov
jg
movsl
or
test
mov
xchg
and
mov
mov
fcoml
sbb
mov
icebp
sub
ja
inc
jecxz
jge
int
les
mov
xor
sbb
insl
int
dec
dec
push
cmc
mov
xor
or
mov
roll
jo
jmp
les
cmp
fsubrl
and
push
cmpsl
and
adc
add
push
insl
imul
jmp
mov
arpl
mov
jg
orb
sub
ror
clc
push
mov
pop
gs
fwait
inc
and
add
lock
pop
pop
add
mov
aas
sahf
sbb
repz
xchg
sahf
push
add
or
cmp
mov
jp
imul
cs
ficoml
inc
nop
cmpsl
push
xchg
and
inc
fwait
push
push
dec
mov
int3
jae
add
xchg
int3
loope
ret
mov
rol
dec
repnz
cli
mov
rclb
or
cmp
dec
cmp
xor
xor
and
xchg
and
insb
or
dec
or
jne
hlt
call
insl
adcl
popa
pop
imul
mov
out
sbb
mov
stos
mov
lahf
call
push
xchg
dec
stos
jno
dec
add
or
fisttpll
pop
fadd
xchg
sub
push
pop
shlb
sbbb
jmp
xchg
lcall
sbbl
pop
or
outsb
insl
scas
test
cmpsb
push
cmc
testl
sub
pop
sub
mov
or
and
cmp
push
out
in
xchg
dec
mov
push
pop
lods
repz
popf
int3
nop
jo
les
aam
repz
in
pop
xchg
jae
notl
sbb
push
push
lds
iret
pop
out
insb
popl
push
mov
mov
lret
ds
das
jecxz
movl
aaa
pusha
es
test
outsl
sub
retw
idivl
inc
push
insb
jmp
rcll
sbb
xchg
popf
ljmp
insb
or
xor
and
fdivrs
leave
push
add
and
fnstcw
xor
mov
outsb
dec
out
mov
push
das
pop
add
and
mov
leave
adc
push
in
cmp
mov
sub
adc
ror
dec
sbb
or
stos
stos
xor
dec
imul
das
divl
cmpsl
imul
add
imul
fsubr
push
in
sti
sub
xchg
pop
jmp
into
jae
inc
dec
mov
jae
cs
jmp
movsb
imul
outsl
bound
xchg
mov
shrl
pop
xor
call
pop
in
jbe
lret
mov
lret
fiadds
lahf
sbb
or
jecxz
rcr
sahf
sub
outsb
rol
dec
xchg
je
lcall
pop
pop
pop
add
hlt
fistpl
jns
xchg
mov
sub
ljmp
cwtl
inc
sbb
mov
cmp
shrl
jecxz
dec
insl
icebp
adc
test
cmp
jp
cli
aam
pop
jno
push
push
and
mov
push
jns
jmp
dec
ret
lds
xchg
push
mov
inc
call
mov
std
mov
test
neg
jmp
sbb
sbb
lahf
jecxz
loope
and
sbb
stc
inc
stc
pop
and
leave
cmp
ffree
xor
pop
add
xchg
pop
nop
add
pop
jb
push
xchg
sbb
adc
jnp
jae
sub
dec
push
aas
jecxz
repz
mov
pop
sub
mov
cmc
mov
outsb
xchg
in
adc
inc
aam
out
sub
mulb
scas
mov
adc
cmp
iret
psubsb
ja
mov
and
push
and
insl
movsl
sbb
pop
xor
fcompl
std
out
pop
lcall
das
fimull
inc
fistps
dec
and
das
rcr
mov
cmpsl
shrb
das
call
or
call
fcomps
mov
lods
sbb
repnz
arpl
pop
pop
and
ja
cmp
mov
push
rcrb
xchg
imul
cld
add
xor
ror
cmc
mov
push
stc
jecxz
jg
lcall
adc
shll
ss
mov
and
arpl
stos
pop
jnp
push
jae
shrl
ljmp
cmp
fcoml
jo
push
sbb
test
xor
arpl
ret
iret
sar
mov
and
test
ljmp
test
fmul
mov
data16
inc
xlat
sub
shr
jnp
shll
sbb
cmpsl
flds
mov
lahf
loopne
gs
enter
call
fsubl
xchg
adc
inc
mov
loopne
sbb
push
repz
inc
insl
fwait
shll
cmpsb
jecxz
ficomps
jp
push
pop
inc
ret
lock
pushf
push
mov
ret
adc
fldt
hlt
inc
addl
inc
or
dec
mov
les
mov
addb
adc
add
add
jmp
ret
adc
ret
jne
std
lock
sub
push
lret
pop
je
dec
shlb
test
std
imul
lods
sbb
xchg
hlt
imul
push
or
js
add
popa
pop
js
lds
enter
cmp
cmpsb
sbb
mov
imul
movsb
xchg
mov
mov
faddl
xor
lret
sbb
mov
sti
loope
fcoml
jo
fildll
lock
fldcw
add
sti
mov
out
jmp
sbb
fnstsw
jge
mov
mov
add
sub
jl
cmp
lods
pop
mov
jbe
rcll
xchg
xchg
dec
ljmp
jecxz
lcall
mov
mov
push
fsub
dec
inc
in
addr16
std
aas
enter
sub
mov
inc
jecxz
out
outsb
sub
clc
xchg
outsb
pop
int
das
mov
cmpsl
mov
xor
lock
das
addr16
jnp
out
sbb
iret
in
adc
dec
xchg
fs
aam
loope
test
mov
jne
jg
dec
addr16
les
cmpsl
dec
push
and
stc
sub
fsubl
int
cmp
popf
iret
leave
and
mov
xor
xor
inc
rol
stc
ljmp
in
xor
jno
and
aam
and
pop
push
out
test
scas
cmp
data16
xchg
sub
loopne,pt
rol
pushf
sbb
faddp
in
out
mov
popf
dec
fucomi
dec
mov
and
jne
fwait
fwait
dec
fmull
jge
mov
push
mov
inc
xor
jecxz
mov
movl
aas
test
testb
push
cmp
sbb
mov
inc
es
mov
adc
dec
shlb
xchg
mov
pushf
cmpsb
cmpsl
lds
mov
mov
xchg
xchg
xchg
inc
cs
das
aas
xor
jp
xor
xor
jae
fsubr
ja
test
inc
daa
shll
adc
js
push
mov
xchg
mov
xor
push
mov
mov
ret
aaa
sub
pop
call
inc
sbbl
lock
push
movb
daa
imul
or
cmpsl
sub
aas
test
push
cli
pop
jg
pop
xchg
sbb
test
imul
data16
and
mov
cmp
pop
inc
jg
jp
pop
or
jb
pop
ds
cmp
test
mulb
fildl
in
pop
pop
xor
jle
push
lock
xchg
pop
mov
sbb
jmp
repz
loop
jo
lods
popa
mov
rcrl
push
imul
pop
pop
dec
nop
push
sub
or
outsl
jae
sub
cmp
and
fdivp
jecxz
mov
lock
jl
pop
ret
pop
lods
mov
fists
das
sbb
cmp
fldt
mov
aam
xor
out
leave
mov
out
cmp
lds
xlat
cmpsl
push
std
jmp
sbb
push
aam
dec
dec
dec
mov
sbb
and
jp
xor
out
mov
ret
jne
push
shl
mov
popa
sbb
mov
test
movl
movsl
fisttpll
pop
sarb
xor
sbb
data16
inc
popa
jns
sbb
pushf
and
bound
lcall
in
mov
jge
adc
dec
dec
aaa
add
mov
jns
imul
fucomp
xor
jl
sbb
adc
mov
popa
and
add
xor
popa
push
fcoms
fiaddl
pop
rorl
jl
imul
test
call
xor
and
xchg
inc
xchg
cltd
pop
and
mov
xchg
dec
jge
dec
repnz
pop
addr16
popa
add
fisttps
jecxz
mov
repz
mov
mov
xor
xchg
adc
fwait
and
js
loopne
leave
push
push
lcall
hlt
cmpsl
imul
mov
shr
shrb
cmp
push
dec
call
mov
pop
repz
dec
test
inc
xor
pop
aad
cmpsb
lods
fsincos
das
and
in
sbb
xchg
mov
xchg
adc
lock
sbbl
cmp
in
ret
cli
in
push
pop
out
call
xor
dec
jecxz
addr16
in
in
rcll
dec
stc
insl
mov
push
mov
cmp
pop
pop
faddl
add
daa
jnp
int
test
or
jne
xlat
inc
stos
or
sbb
out
scas
push
lcall
mov
jmp
cmp
adcb
in
push
es
loop
aaa
jno
mov
adc
sbb
dec
cmp
cwtl
and
pop
xlat
cwtl
cmpsb
sub
aaa
in
imul
les
mov
xchg
adc
xchg
repnz
aad
cmp
or
mov
aas
xchg
xor
pop
dec
mov
test
mov
popf
andl
shlb
xchg
pop
jmp
int
leave
sbb
mov
xchg
xor
testl
xchg
movsl
xor
xor
and
add
fwait
xlat
imul
xchg
subb
jle
fstpt
orb
pop
push
iret
dec
insl
test
dec
and
daa
dec
mov
scas
std
and
adc
out
das
push
or
int3
repz
enter
dec
ret
das
fst
dec
xor
int3
pop
and
sbb
cmp
xor
push
push
ds
sti
ror
dec
mov
rcrl
cwtl
ja
dec
push
sbb
out
nop
fistpll
add
les
jno
in
add
sub
inc
mov
bound
aam
int
test
outsb
xor
orb
rcl
cmpsb
cmp
test
mov
ljmp
cmp
imul
xchg
fsubl
ror
outsl
data16
dec
push
mov
fsubs
mov
jnp
out
popa
inc
mov
and
lea
dec
sbb
push
jle
push
pop
and
sbb
push
adcl
sti
mov
xor
and
pop
aam
or
push
sub
mov
fsub
testb
sbb
ja
pop
enter
insb
cli
int3
dec
xor
sbb
ss
and
sbb
inc
jno
fisttpll
cld
lea
loope
fwait
or
daa
inc
jge
cli
jmp
xor
inc
cli
mov
xlat
fistpll
int3
cs
xlat
das
push
add
scas
jecxz
push
inc
aam
xor
xchg
in
shl
mov
xchg
inc
cmpsl
xorb
cmp
or
fldl
fmul
bound
or
mov
aam
insl
mov
leave
pop
test
dec
and
dec
push
sub
mov
xchg
push
push
and
push
pop
gs
lods
movsb
addr16
xchg
inc
mov
sbb
aaa
movsb
cmp
fsubrs
dec
scas
add
jecxz
fstps
into
push
add
pop
dec
pop
and
les
pop
push
xor
inc
inc
inc
inc
jmp
test
out
insb
loop
arpl
jnp
insb
push
cmpsb
fisubrl
ljmp
das
sub
or
lock
aas
cmp
daa
fcompl
pop
daa
mov
mov
jle
push
gs
xor
mov
test
test
inc
roll
imul
out
std
mov
inc
test
scas
popa
aam
xor
icebp
cs
std
push
add
xchg
ds
dec
pop
jbe
les
add
xchg
pop
dec
fadd
loopne
aas
lea
add
popa
sahf
push
xchg
imul
dec
mov
xor
sbb
int3
mov
insb
jbe
and
test
mov
add
add
mov
cmp
inc
push
arpl
loope
imull
jl
jge
das
push
and
jns
fsubrs
cmp
pop
insl
in
sahf
jecxz
xchg
dec
into
pop
adc
imul
clc
cmpb
dec
stos
mov
scas
std
pop
push
and
das
out
sub
loope
and
xor
in
rcll
push
and
jne
fisttpl
pop
mov
jmp
mov
cmp
and
push
fwait
or
and
mov
cltd
jmp
out
stos
imul
int3
mov
jg
dec
das
sbb
mov
test
out
pop
mov
repz
fsubrs
fstps
inc
imul
xchg
or
xchg
addr16
mov
adcl
lods
std
fcmove
insb
push
xchg
pop
mov
inc
adc
push
and
dec
in
push
mov
mov
aas
mov
pop
in
sub
push
mov
cmp
inc
pop
mov
mov
das
mov
test
out
mov
movsb
cs
inc
pop
cli
in
les
mov
add
cli
mulb
cmp
fiadds
repnz
cli
jo
mov
popa
push
repz
out
push
std
and
inc
lods
mov
leave
dec
push
dec
insb
xlat
call
push
jg
and
and
cld
jmp
dec
xchg
and
insl
repz
movsb
daa
push
rep
inc
cwtl
cmpsl
scas
dec
cmp
fisttpll
sub
jge
loope
add
mov
inc
add
sub
push
lret
into
add
les
popa
pusha
dec
scas
sbb
pop
mov
lods
pop
push
mov
es
mov
imul
daa
mov
or
leave
daa
sub
cmp
lret
sub
dec
sbb
xor
out
test
push
sbb
movsb
cmpsl
mov
ss
outsl
or
fwait
cmp
repz
std
ja
cmovae
pop
inc
inc
jmp
sarb
and
stos
in
gs
or
mov
add
pop
dec
cmpsl
mov
xchg
or
andl
shrb
cmp
pop
fimuls
loop
mov
adcl
push
cs
lds
addr16
jle
pop
sbb
notb
mov
or
clc
mov
adc
pop
imul
push
je
push
jp
mov
xchg
xchg
sarb
sarb
push
sbb
mov
inc
enter
pop
inc
push
imul
sbb
jmp
inc
repz
imul
aas
mov
rcr
mov
cmp
sub
cmc
sti
sarl
and
cmp
mov
das
movsb
das
aam
movl
pop
sbb
mov
lods
rol
mov
int
insb
fisubl
inc
jg
cltd
and
adc
push
rcll
xchg
cmp
out
push
xchg
sti
fildll
repnz
sahf
das
ret
and
sub
mov
pop
jg
and
inc
fwait
push
outsb
xchg
mov
out
sarb
imul
rorl
inc
lds
outsl
mov
outsl
inc
or
cmp
mov
in
cmc
outsl
jp
pop
fdivrs
insl
imul
mov
pop
scas
sub
pop
adc
ja
jbe
and
fsubrs
cmp
mov
jmp
cmc
cld
stc
dec
inc
fstpl
cld
mov
dec
popf
pop
fldenv
xchg
mov
test
mov
sbb
pop
scas
adc
or
xor
pop
dec
daa
cmpsl
dec
mov
cmp
mov
mov
xchg
out
test
sbb
xchg
imull
xchg
xchg
std
fnstenv
int3
sahf
leave
cltd
sub
jmp
mov
and
xchg
inc
rclb
fnstcw
repz
lahf
fmuls
sti
lahf
xor
mov
add
cmp
mov
mov
push
and
rclb
jae
cmpsb
lcall
scas
pop
inc
push
stos
mov
mov
sbb
bound
push
cmpsb
mov
shrl
add
nop
imul
jecxz
xlat
mov
lret
dec
adc
jmp
imul
jo
xor
out
rorl
mov
je
pop
js
adc
adc
jl
jmp
cld
push
dec
sarl
sub
sbb
testl
jge
test
leave
ret
insb
xor
sbb
mov
or
cli
cwtl
sbb
jne
movsl
fistl
inc
jmp
push
push
out
lret
sbb
jnp
or
cltd
xchg
mov
mov
mov
mov
int
sbb
push
movsb
and
mov
stc
jp
outsl
cmpsl
mov
jecxz
dec
leave
mov
adc
iret
inc
jne
sub
xchg
sti
pushf
mov
lds
jg
add
popa
popf
addl
dec
inc
mov
loope
fcompl
popf
sbbb
dec
pop
cltd
mov
dec
pop
mov
mov
pop
push
ds
flds
cmp
pop
inc
or
fstpt
jg
in
jnp
inc
test
lret
mov
aas
sarb
ror
loop
jae
mov
es
jne
rcr
cmc
jecxz
push
push
xor
xchg
stos
mov
sbb
scas
movb
push
lds
sub
repz
fcmove
cld
dec
rol
leave
shrl
mov
dec
mov
inc
outsl
jmp
push
jecxz
push
fldcw
dec
mov
ljmp
push
movsl
je
mov
js
pushf
or
and
stos
das
sbb
push
test
jle
dec
aaa
addr16
push
jmp
insb
mov
in
jb
adc
pop
loop
fmul
cmpsb
das
ret
jl
push
call
stc
dec
in
inc
jp
xchg
and
pushf
in
mov
mov
adc
add
dec
and
clc
pop
mov
jecxz
test
cld
jp
dec
repz
push
idiv
mov
scas
dec
inc
rcrb
iret
push
jne
mov
adc
sub
repnz
xchg
xor
sbb
out
jecxz
insl
inc
sarl
push
imul
repz
or
jecxz
jp
repz
push
stos
pop
cmp
push
mov
add
sbb
jnp
push
add
pop
cmp
pop
inc
pop
xchg
loop
jmp
dec
das
cwtl
test
mov
jno
fstpt
fiadds
dec
cs
mov
movsb
push
xchg
push
pop
xor
mov
es
and
lea
stos
push
or
loop
imul
mov
add
mov
loope
bound
or
aaa
sub
stc
imul
xchg
pop
dec
inc
mov
push
insl
xor
sti
shll
ja
xlat
xchg
mov
movsl
sbb
mov
repz
nop
mov
mov
dec
mov
pop
arpl
or
in
cli
outsl
sub
int
cs
pop
fsubrs
mov
push
mov
sti
xor
in
out
sub
xorl
loope
pusha
stos
fwait
and
mov
out
rcll
adcl
inc
fisubrl
xor
xchg
gs
mov
es
xlat
mov
jmp
inc
std
add
cmp
fildll
pop
lods
mov
sub
or
scas
repnz
negl
and
cmpsb
gs
dec
add
ss
or
cltd
fld
enter
jecxz
sub
pop
outsb
lods
xchg
test
jle
and
xchg
jbe
sarl
rorl
leave
push
sub
cmp
mov
cltd
mov
mov
lock
sbb
fstpt
out
iret
sbb
inc
fcompl
cli
or
sbb
gs
mov
imul
repz
ljmp
mov
imul
icebp
jmp
loopne
lret
dec
jmp
jne
push
gs
bound
sbb
sub
adc
cmp
rorl
push
insl
repz
shl
iret
sbbl
adc
push
adc
and
sbb
xor
jmp
ljmp
fsubrs
cmpsl
fisubl
lret
clc
mov
int3
mov
sbb
fstl
shr
push
cmp
mov
mov
mov
scas
ret
dec
cmp
popf
pop
inc
pop
stos
push
inc
sbb
mov
ds
stc
and
sti
ret
aad
adc
sbb
jl
jo
fstl
sarl
inc
push
dec
or
sbb
pop
jl
rcrl
cmp
mul
ret
out
or
out
xor
pop
push
xor
xchg
enter
ja
dec
push
idivl
cmpsl
jo
lds
mov
fiaddl
add
mov
jnp
scas
mov
sbb
mov
adcl
cmp
push
scas
movl
shrl
pop
xchg
test
xor
xchg
cmp
insl
pop
sub
imul
push
sbb
inc
pushl
test
jbe
jns
nop
test
pop
fldt
xchg
lods
stos
sar
scas
add
sahf
popa
int3
push
dec
hlt
ficomps
mov
xchg
outsl
xchg
call
sub
mov
push
xor
frstor
cmp
jp
jl
mov
mov
ljmp
pop
cli
dec
sbb
mov
stos
movsl
cli
fists
mov
dec
xchg
in
sub
mov
out
xor
and
inc
jl
mov
test
aas
aaa
sahf
pop
insl
mov
or
add
stos
cmp
push
mov
pop
mov
fwait
je
scas
lods
add
aad
mov
push
mov
push
inc
push
jecxz
cmpsl
lock
dec
sub
mov
cltd
dec
or
inc
mov
push
push
iret
sbb
push
in
xorb
repz
jecxz
xchg
adc
rcl
arpl
cwtl
sbb
fwait
fwait
movsb
xchg
cmpsb
sti
jmp
dec
popf
jecxz
inc
mov
aad
push
sbb
in
dec
pushf
cmp
cmpl
adc
or
and
dec
sub
cli
mov
aam
jge
addr16
lret
adc
xchg
pop
gs
sbb
pop
pop
pop
test
lahf
cmpsl
mov
mov
add
cmp
add
mov
cld
fsubr
pop
mov
fs
dec
xchg
pop
mov
call
in
dec
mov
jecxz
loope
repnz
mov
ret
mov
xchg
xor
ja
sbb
lahf
dec
mov
cmc
test
arpl
pop
daa
and
test
pop
test
ret
loopne
popf
sub
sbb
mov
inc
sar
dec
sbb
cmpsl
mov
ror
push
int
mov
imul
pop
int
xchg
mov
jecxz
sbb
lock
notl
sbb
fs
es
xor
inc
jle
xchg
std
pop
cmp
data16
ljmp
sbbb
push
or
mov
lcall
mov
imul
sub
or
inc
jb
loope
fst
push
shrl
int
push
int
ret
rol
nop
xchg
and
jnp
cs
dec
mov
and
inc
jecxz
stc
fsubl
sti
fldenv
push
sub
xlat
repz
sar
imul
pop
outsb
int3
in
and
inc
nop
loope
dec
outsl
fsubrl
or
in
xlat
mov
neg
sar
dec
jns
pop
xor
dec
mov
repz
pop
out
rorl
fcoms
inc
icebp
jmp
sbb
in
cltd
ljmp
xchg
in
vandpd
adc
mov
pop
daa
int
xor
stos
mov
xchg
fsubs
xor
xchg
rorb
out
or
iret
jecxz
push
and
out
and
icebp
adc
adc
cmp
adc
inc
pop
adc
push
repz
lds
cmpsl
ret
mov
and
sti
fcoms
xor
adc
call
insb
dec
ja
fwait
dec
mov
xchg
outsl
pop
aaa
sbb
and
mov
fsubr
push
pop
inc
lret
dec
xor
fstpl
sar
fmull
adc
aam
stos
std
fdivrl
lds
test
pop
orl
mov
in
xchg
mov
les
sub
rcl
jg
pop
push
inc
dec
test
mov
popl
mov
jno
dec
jnp
jo
mov
in
dec
rorl
ret
sbb
sbb
mov
sub
fwait
inc
fbld
scas
xchg
shr
insl
repz
xchg
fiadds
stos
or
in
pop
ja
add
sub
pop
mov
pop
cmpsb
xlat
rcrl
inc
adc
ret
inc
mov
out
jecxz
test
mov
xor
daa
cli
push
pop
or
mov
mov
xor
xchg
movsl
xchg
mov
je
addb
test
cmpsl
je
xchg
cmpl
subb
pop
jl
mov
and
cmp
in
mov
arpl
xchg
out
popf
jnp
sbb
cmp
ds
test
stc
shll
fdivl
jmp
jmp
mov
inc
add
pop
cwtl
sbb
inc
fldt
sub
xorl
imul
shlb
fistl
aam
mov
xorb
jl
cmp
out
int3
push
jecxz
dec
adc
sbb
fnsave
inc
ret
rolb
sub
pop
rcl
mov
out
cmp
int
adc
in
sbb
jne
mov
add
ror
xlat
or
pop
scas
fyl2x
in
lcall
fs
data16
jae
sub
or
loope
sbb
sbb
fimuls
cmpsl
repnz
lret
je
bound
in
pop
insb
shrb
fucomi
in
jecxz
dec
mov
inc
ljmp
fsubl
call
shll
adc
inc
ret
push
cmpsl
adc
sarb
in
mov
xchg
push
sub
dec
iret
ds
xor
inc
and
call
jo
sbb
mov
insl
loopne
int
xchg
lods
hlt
es
cmp
adc
out
movl
xchg
sbb
in
xorl
hlt
pushf
cmpsl
popf
shrl
mov
int3
ds
sbb
sbb
cmp
loope
adc
arpl
divb
ljmp
fwait
cltd
aas
xor
mov
cmp
ret
jno
cmpsb
frstor
jno
xor
dec
aaa
out
push
leave
rcr
ret
or
xlat
xor
bound
and
and
cs
arpl
imul
dec
int
sbb
push
sub
scas
sbb
mov
jns
fsubs
mulb
jmp
shll
jmp
inc
mov
fmul
xor
mov
in
sub
lock
std
mov
sub
lods
ret
ret
pop
jecxz
test
in
mov
fwait
mov
mov
imul
sbb
data16
add
sbb
fnsave
xchg
xchg
mov
insl
sbb
std
dec
sbb
sbb
sbb
rcr
fwait
imul
sti
jae
xchg
out
cmp
stos
pop
js
jbe
xchg
and
push
fdivl
cmp
lret
leave
jae
xlat
inc
sub
ret
xor
dec
sbb
mov
enter
pop
int3
xor
jbe
pop
and
sar
lret
aad
mov
jne
pop
aas
add
jecxz
mov
mov
daa
and
in
jecxz
jb
inc
repnz
pop
rorl
iret
mov
dec
adc
enter
dec
cmp
sub
xor
movsl
sub
int3
jg
sbb
pop
mov
jecxz
aas
xchg
fcomps
dec
bound
sub
enter
cwtl
jmp
dec
sti
xchg
outsl
inc
in
lcall
pop
xlat
mov
inc
leave
mov
pop
lret
movsl
ret
inc
push
outsl
jmp
arpl
icebp
imul
fs
push
xor
and
mov
sarl
ss
adc
jmp
std
int
mov
sti
cmpsb
fildll
push
mov
add
les
xor
sub
pop
test
inc
and
xor
out
cs
cli
jmp
jmp
push
iret
sarb
mov
into
adc
hlt
fs
xchg
adc
in
inc
adc
mov
pop
mov
dec
pop
dec
push
jb
jbe
outsl
or
les
lret
imul
faddl
pop
cmp
mov
int3
mul
xor
adc
dec
testb
jecxz,pt
jnp
je
out
dec
dec
cmp
fwait
aam
jb
pop
aad
dec
push
and
push
test
mov
leave
push
neg
cmc
popl
rorb
inc
inc
xor
cmp
cmc
or
pop
bound
fincstp
popa
shl
les
inc
outsb
cmpsl
jecxz
push
shl
ret
adcl
push
push
dec
lret
shll
fcoml
push
xchg
xchg
mul
mov
aas
loopne
aam
loopne
addr16
stc
mov
adc
inc
sbb
xor
loopne
mov
inc
scas
cmp
xchg
mov
mov
sbbl
inc
pop
mov
lret
shrl
fwait
insb
inc
xchg
or
fbld
push
int3
fistpl
xchg
inc
rorl
pop
loope
mov
push
inc
gs
ret
xchg
push
xlat
loop
push
jmp
or
push
cmpsb
cmc
push
dec
popf
push
loop
or
xchg
scas
icebp
jmp
mov
jmp
mov
push
les
cmp
test
out
scas
xchg
dec
sbb
mov
push
rolb
xchg
inc
sub
pusha
pop
movsl
insl
dec
mov
sub
imul
test
imul
es
sarb
cmp
fisubl
nop
xor
push
inc
xchg
pop
lahf
imul
jecxz
adc
xchg
js
jp
daa
lods
imul
scas
into
ljmp
dec
rolb
and
cld
add
push
stos
das
jg
dec
push
iret
mov
lret
add
cmp
fidivl
lahf
xchg
adcl
imul
pop
dec
stos
xchg
jp
pop
test
icebp
mov
dec
push
les
imul
sbb
xor
test
jecxz
fdecstp
add
jp
mov
xorl
add
jns
pushf
pop
mov
cmp
xchg
es
jne
dec
out
cmp
pop
xor
dec
mov
shll
dec
imul
ret
cwtl
aam
ret
mov
cmpsl
xchg
gs
push
icebp
mov
dec
outsl
jnp
ljmp
shl
mov
sub
loop
sub
push
sbb
adc
inc
dec
add
jne
sbb
jmp
fdivrl
add
adc
jbe
insl
rol
pop
adc
in
mov
inc
sbb
mov
fcmovu
dec
add
out
mov
ljmp
fstpt
enter
pusha
add
aam
mov
mov
enter
imul
cmp
cmpsl
pop
lods
jmp
insl
sbb
out
ljmp
cmpsb
test
ljmp
jo
jecxz
and
jae
test
fcoml
shlb
imul
pop
cmp
cmp
push
mov
repnz
test
xor
les
inc
adc
ror
rolb
mov
in
adc
add
cmp
mov
inc
push
mov
aam
xchg
jno
int3
mov
jb
notl
sub
sbb
xchg
imul
popf
xlat
ljmp
int3
push
ljmp
and
addb
push
outsl
jne
jg
jno
jae
aam
repnz
pminub
cmpsl
lcall
xor
xchg
pop
xor
adc
xor
fdivrl
mov
dec
sbb
lret
insb
rcpps
test
xor
push
imul
inc
rcr
lret
fwait
ljmp
sub
in
xor
stc
xor
xor
loop
mov
push
inc
repnz
mov
ret
aam
cmc
mov
inc
loop
inc
mov
cmp
es
adcl
or
push
in
fnstsw
std
dec
fldl
mov
test
dec
ret
xor
gs
mov
cmp
and
jmp
mov
mov
addr16
push
xorl
lods
fstpt
das
fnsave
xchg
pop
xchg
xor
addr16
stc
das
lds
ds
mov
aas
andl
mov
into
std
push
fwait
imul
enter
test
gs
mov
cmp
xor
pop
and
mov
aad
mov
jl
adc
sbb
test
sub
insl
mov
out
pusha
mov
addr16
fnsave
adc
stc
adc
mov
test
sti
mov
xchg
out
dec
in
dec
inc
cld
xchg
cmpb
push
arpl
imul
inc
and
scas
setae
loop
jle
dec
imul
sbb
push
push
loope
push
add
cmp
popf
addr16
fnstcw
sbb
pushf
mov
fwait
into
sbb
into
mov
fdivp
fildll
pop
arpl
cmpsl
rorb
imul
sbb
or
xor
add
sti
mov
dec
xlat
mov
fld
ljmp
cli
in
loop
sar
cli
stc
call
pushf
xor
add
fsubrp
cmp
fstps
wbinvd
sti
data16
lcall
stos
sbbb
jecxz
loope
rcrb
dec
addr16
rorl
and
stos
mov
cmp
imul
xchg
adc
pop
mov
repnz
inc
adc
fmull
pusha
sbb
data16
fists
movl
adc
cmc
xor
sub
les
push
pop
fwait
not
jecxz
int3
ljmp
fs
fisttpll
jmp
in
test
scas
test
in
dec
lea
imul
out
push
inc
dec
xor
in
addr16
jae
xor
aas
jle
add
stc
mov
clc
or
scas
movsb
popa
xchg
jbe
add
movsl
ljmp
repz
mov
sub
mov
mov
cmp
loope
ret
mov
rolb
ds
jnp
lods
stos
leave
sbb
shll
arpl
push
dec
bound
cmp
pop
clc
sbb
int3
mov
faddl
fwait
test
mov
push
int3
out
or
inc
sbb
aaa
cmp
and
sbbb
out
addr16
lock
sub
bound
call
out
push
ret
xorb
jae
cmc
daa
andl
xor
add
mov
and
xor
lret
loop
loop
inc
shlb
loop
in
cli
es
in
xchg
sbb
stos
inc
rolb
mov
cmp
das
inc
push
add
add
cltd
int3
cmp
out
cltd
inc
dec
add
add
xor
out
cmp
aam
mov
cmp
arpl
sbb
lock
ficoml
enter
pusha
in
sbb
cltd
pop
xchg
xorl
mov
xor
imul
orl
jns
popf
xchg
cmp
lea
int3
adc
push
imul
and
loop
fdivl
mov
cmp
ret
inc
ljmp
jae
mov
in
and
cmp
mov
cmp
lods
push
inc
ret
sbb
xchg
popf
dec
rol
sbb
xor
int3
xor
add
or
xchg
adc
inc
mov
sbb
loop
sub
and
int3
mov
pop
push
fdivs
pop
and
xorl
cld
xchg
pop
and
outsl
jb
imul
imul
sub
aad
sbb
mov
sbb
dec
inc
ss
rcrl
stos
xor
aam
lahf
in
rcrl
in
stc
fcmovb
mov
xchg
mov
sub
adc
or
sbb
pusha
mov
shll
sbb
stos
ret
xchg
mov
fcom
jle
push
ds
mov
int3
inc
xchg
imul
bound
imul
cmpl
inc
stos
ds
xlat
sbb
cld
ffreep
cmc
push
jmp
xor
mov
sbb
imul
jmp
ret
outsb
mov
ds
pop
and
xor
and
scas
push
push
fisubs
push
in
mov
inc
xchg
mov
mov
fucom
dec
mul
rolb
xlat
dec
pop
int3
or
mov
jo
fwait
adc
les
enter
fidivrs
daa
xlat
sbb
dec
xchg
arpl
test
xchg
popf
cmp
push
inc
sti
enter
fbstp
negl
bound
xor
cmpsb
sti
dec
mov
dec
sti
mov
pop
xorb
jge
jp
loope
shl
pop
add
jmp
sbb
popf
cmpsl
shl
jno
imul
inc
mov
rclb
inc
or
aam
fnstcw
fsubr
pop
sbb
xor
dec
cmp
stc
dec
sahf
repz
fst
sbb
mov
cmpsl
lret
fdivrl
out
daa
mov
rcr
cmp
shll
vcvtdq2pd
imul
into
lea
cmp
jmp
dec
in
pop
jge
fcoms
test
lock
or
andb
mov
arpl
push
adc
adc
jnp
aam
into
in
sbb
cmpl
inc
imul
sbb
std
cmp
mov
mov
add
jge
ret
xchg
lahf
mov
push
add
add
fiadds
xor
adc
fstpl
jo
sub
push
imul
fidivrl
aas
jle
imul
mov
clc
sahf
lock
push
iret
repz
imul
cmp
mov
lret
idivl
push
in
data16
fisttpl
push
jg
popa
mov
pop
ljmp
push
xor
orb
mov
shlb
leave
inc
roll
int3
dec
jo
adc
xchg
sbb
jbe
outsl
movsb
repz
sub
jns
dec
loope
imul
inc
jae
mov
add
and
pusha
loop
cs
xor
pop
cmp
in
pop
pop
xchg
ss
sub
mov
sbb
jno
fwait
shlb
ret
in
adc
pop
sub
pop
and
xor
dec
sbb
aas
leave
out
pop
xchg
stc
push
xchg
cli
mov
mov
fsts
adc
bound
lods
dec
inc
adc
pop
adc
and
or
and
sar
pushf
sub
jmp
fcom
bound
inc
xchg
nop
enter
std
rcll
cmp
or
cmpsl
pop
fwait
mov
mov
inc
cmp
mov
loop
es
call
mov
icebp
pop
jmp
inc
fs
jns
pop
sbb
ja
jg
sti
lods
insb
addr16
aas
ret
sub
cmc
enter
in
push
ret
jmp
jecxz
cmp
cmp
adc
add
add
fcoms
std
sub
sbb
sti
pop
sahf
aam
iret
shrl
xor
das
push
mov
and
pop
jno
mov
mov
out
push
sub
lahf
sub
pop
xor
push
xor
das
jg
mov
dec
cmc
ja
cmpsb
sbb
cmp
call
xor
daa
mov
outsb
shll
sub
ljmp
test
insl
xchg
cs
cld
mov
incl
jno
in
dec
out
fwait
jne
data16
mov
in
pusha
adc
push
stc
outsl
jle
sbb
xor
inc
fnsave
jge
aas
lret
loopne
sub
mov
icebp
and
pop
iret
cld
testl
cli
mov
enter
stc
aad
xchg
test
sub
xchg
push
loope
dec
push
xchg
repz
in
jecxz
ret
loop
jmp
mul
xor
push
xchg
sbb
mov
int3
jb
pop
mov
pop
aam
xor
and
pusha
push
dec
jbe
fucomi
lea
mov
jns
andb
inc
insl
or
xchg
test
inc
push
adcb
sar
inc
repz
push
cmp
pop
xor
jnp
mulb
in
call
jne
mov
sbb
int3
cmp
xchg
and
popa
mov
mov
dec
xchg
xchg
test
int3
inc
sbb
and
sbb
xchg
sbb
mov
roll
sbb
loop
and
sbb
xor
lret
mov
popf
cmpb
sbb
mov
inc
pop
ja
xor
xor
inc
add
push
mov
inc
add
mov
and
bound
mov
fcompl
loope
cmpsb
jecxz
cmp
jp
stos
inc
mov
pop
aas
fmull
xor
mov
xor
xchg
lahf
mov
ja
lods
aaa
sub
in
and
jnp
insl
cmp
lods
fidivs
xor
ljmp
jo
sbb
inc
rorl
int3
jns
adc
mov
outsl
xchg
sbb
dec
imul
xor
roll
fdiv
scas
bnd
mov
rcrl
sub
mov
dec
fistpl
mov
push
mov
sub
icebp
mov
pop
lret
mov
mov
insl
and
inc
fwait
ret
inc
sbb
std
pop
mov
pop
int
pushf
lea
pushw
ret
clc
int3
ss
fcompl
das
xchg
xlat
pop
cmp
cmp
imul
in
sub
cmpsb
jge
out
mov
mov
xchg
dec
cmpsb
cmp
jmp
push
and
out
mov
cmc
call
loope
xor
sbb
push
leave
adc
xor
ret
jecxz
cmp
les
mov
sub
daa
mul
xor
mov
push
repnz
pusha
fs
cmpsl
shrb
mov
inc
sub
out
dec
xor
fidivrs
fwait
mov
cmpsl
sbb
fwait
sti
scas
mov
fisubrl
pop
nop
jmp
std
push
mov
xchg
fldcw
nop
inc
loop
dec
imul
out
jns
in
mov
sbb
fwait
cmp
add
shlb
in
xchg
lods
outsb
test
sbb
ss
dec
je
ret
and
pop
pop
ret
andl
les
xor
pop
jno
aam
aad
stos
in
inc
xchg
dec
xchg
inc
in
dec
cltd
pusha
pop
std
inc
add
repz
test
pop
xchg
jae
xchg
mov
imul
es
lahf
in
jg
andl
sti
cltd
dec
out
pop
mov
jg
cmpsl
push
mov
out
add
fcoms
add
fs
mov
xchg
test
icebp
stos
rcll
inc
jno
or
out
inc
or
push
out
out
push
movsl
xchg
dec
aam
xchg
jp
pop
xchg
insl
pop
push
int3
insl
add
xlat
repz
aad
adc
lret
das
cmp
aam
loope
mov
das
ljmp
add
loope
push
pop
push
pushf
outsb
and
test
ss
pop
inc
mov
leave
dec
div
ja
dec
inc
rcr
cs
enter
and
dec
add
stos
dec
xchg
ss
in
adc
and
xor
xor
iret
pop
loope
xchg
cli
fstpl
imul
pop
adc
fiaddl
int
inc
mov
imul
div
adc
std
pop
int
loop
mov
imul
push
xchg
and
out
inc
addr16
inc
mov
fcompl
rclb
mov
cmp
das
aaa
fwait
xor
bound
pop
adc
fistpl
xchg
jnp
clc
adc
adc
xchg
mov
repz
mov
inc
aas
adc
mov
out
add
test
mov
leave
iret
mov
cwtl
out
xor
inc
or
shl
imul
dec
or
inc
jecxz
mov
and
xor
mov
cmp
push
pop
inc
lock
or
pop
push
cmp
popf
xor
adc
mov
das
outsl
gs
cwtl
mov
negl
ja
xor
adc
pop
mov
push
scas
mov
fldenv
push
xchg
or
jl
push
sbb
sbb
test
dec
push
add
jb
xchg
dec
push
xorb
mov
inc
addr16
jecxz
dec
mov
cs
cli
rol
insl
pusha
cmpsb
fnstsw
xchg
and
inc
xchg
push
cmp
jmp
repz
mov
fildl
popf
pusha
push
test
loopne
mov
cmp
mov
enter
pop
mov
xchg
cmp
fwait
insb
clc
orl
and
cmp
popa
in
in
loope
sbb
mov
fwait
jg
js
fcoml
insl
incl
imul
push
out
and
mov
push
jmp
and
xchg
loop
mov
mov
arpl
mov
or
jnp
sbb
cwtl
xchg
fbstp
out
dec
stos
cltd
push
dec
imul
lret
ret
mov
xor
std
repz
inc
mov
push
ja
add
idivl
sbb
mov
mov
cmp
pop
jle
mov
inc
sti
loop
cmp
sti
inc
fnstcw
je
ljmp
sti
inc
imul
or
sub
scas
or
paddsb
ret
xchg
add
iret
xor
mov
jp
xlat
and
lds
imul
cmc
push
lock
aas
std
mov
shr
xor
fbstp
pop
xchg
ds
and
iret
stc
iret
jecxz
mov
sub
rcl
mov
stos
shll
into
sbb
sahf
movsl
std
add
push
jnp
xorl
dec
test
inc
ret
insl
in
imul
inc
cmpsl
push
test
outsb
shrl
test
out
loope
jno,pt
push
ret
popa
jmp
sarl
stos
cmp
lahf
loop
pop
fdivl
jge
stos
sbb
outsl
xchg
popa
lahf
mov
pop
pusha
loope
mov
push
ds
mov
cmp
fldenvs
mov
loope,pt
sbb
incb
inc
push
mov
sub
mov
xlat
shlb
iret
iret
inc
fadds
gs
imul
fbld
idivl
aad
mov
xchg
sub
mov
xchg
pop
cmpsl
imul
mov
ret
mov
or
cmp
ljmp
jle
mov
cmpsb
jo
cltd
push
hlt
and
add
stos
pop
inc
mov
fnstenv
mov
imul
ffreep
hlt
jo
and
mov
push
xchg
xor
pop
mov
cmp
xor
aaa
or
jo
imul
lcall
out
pop
push
jmp
sbb
pusha
jno
and
in
ss
xor
cmp
cmp
pop
clc
mov
ret
push
xor
shlb
cmpsb
add
data16
in
sbb
out
shl
pushf
fnstsw
int3
iret
les
ficompl
out
and
incl
and
rcrl
add
nop
jmp
mov
fcoms
out
arpl
std
shlb
jp
push
pop
and
lods
or
inc
mov
mov
pop
xchg
sub
fildl
mov
cmp
pop
jle
in
ftst
pop
adc
rcr
xchg
mov
insb
mov
orl
pop
mov
fcmovnu
filds
mov
jns
jne
inc
xchg
aam
rorl
in
hlt
pop
loop
xlat
loopne
out
jp
mov
das
jno
repnz
ficomps
out
adc
sbb
xchg
cmp
jecxz
cmp
and
fstl
and
push
bound
xor
pusha
xor
or
test
iret
jecxz
scas
push
loop
insb
cmp
loopne
mov
ret
add
popa
cmp
mov
xlat
add
ret
pop
ds
ret
out
rcrl
cld
icebp
xchg
sbb
jmp
fdivrp
gs
jl
xchg
jg
nop
inc
pop
jle
add
cmpsb
jg
outsb
imul
inc
mov
cmp
dec
jne
mov
pop
pop
aas
stc
repz
push
sahf
jmp
mov
leave
sti
jp
ret
repz
fwait
int3
cmp
xchg
das
loopne
insl
push
pusha
sbb
clc
insb
add
push
aad
mov
or
mov
fdivs
shl
pop
and
sbb
add
test
jecxz
pop
sti
inc
test
pop
pushf
xor
xchg
stos
jns
das
mov
and
and
and
jnp
mov
test
xchg
cmp
adc
or
sti
subl
adc
sbb
pop
dec
sub
cmp
mov
aaa
and
pop
in
jo
adcl
test
cmp
dec
sar
sbb
jl
push
cwtl
xchg
ljmp
test
cmp
imulb
out
cmpsl
je
ret
fidivl
in
fistl
xchg
mov
roll
xchg
in
xchg
and
mov
popa
add
insl
loope
ljmp
outsl
pop
push
sarb
sub
je
add
test
push
fwait
imull
cmpsb
or
mov
push
inc
insl
adc
xchg
pop
lret
push
dec
xor
fcomi
fsubrl
fsubl
sbb
adc
aam
or
xor
sbb
mov
jmp
mov
add
adc
mov
sub
daa
orl
inc
sub
pop
mov
scas
inc
loopne
xchg
lea
mov
sub
and
mov
into
push
mov
cmp
push
popa
add
sub
mov
test
fldenv
and
push
test
push
insb
jl
push
mov
popf
andb
mov
xor
cmp
insl
imul
jle
xchg
aaa
cmp
ret
adc
fstpl
mov
jp
adc
push
das
insl
popa
cli
inc
push
mov
jo
inc
loopne,pt
call
cmp
fwait
test
push
shl
enter
xchg
movsl
push
xchg
cmp
sub
and
push
fucomip
push
xor
mov
or
dec
aam
mov
mov
call
mov
xor
mov
repz
repnz
hlt
push
in
jecxz
imul
ss
push
std
shl
int
sarl
scas
pop
adc
xchg
xor
leave
inc
call
mov
adc
cmp
mov
iret
xchg
mov
out
jecxz
xchg
test
shll
jo
dec
pop
ljmp
mov
imul
xor
fwait
pusha
stos
popf
and
out
ss
je
cmpsl
adc
dec
data16
or
shl
jnp
imul
or
adc
dec
lret
pop
roll
xchg
pop
push
jl
sub
mov
test
mov
data16
js,pt
jo
lods
inc
out
frstor
out
add
xchg
jno
arpl
dec
xchg
sbb
int3
or
call
or
mov
leave
insl
pusha
lcall
mov
cmp
sbb
fisttpll
rcll
and
and
or
inc
or
pop
jg
mov
push
sar
std
loop
jl
mov
mov
insb
push
sti
sub
jae
ja
pushf
das
call
pop
mov
pop
jmp
pop
iret
stc
adc
inc
movsb
jg
mov
cmc
sbb
cmpb
lods
aaa
pop
addr16
push
cwtl
mov
cld
mov
sbb
loope
and
fdivl
adc
jle
cmp
sub
and
sbb
jns
sbb
fnstenv
hlt
dec
shrl
add
std
mov
iret
ret
mov
aam
push
das
addr16
pop
mov
add
stos
mov
cmpsb
pop
lcall
jno
or
int3
movsb
cmp
fsts
pop
cmp
xorl
xor
lcall
xor
mov
lcall
jge
insl
sbb
in
cmc
push
xchg
mov
stc
dec
add
inc
gs
push
addr16
inc
pop
subb
mov
xchg
and
dec
lods
daa
fsubs
aam
lea
repnz
dec
pop
sub
dec
push
cmpsl
push
push
adc
js
sti
sbb
and
and
xchg
pushl
fisttps
mov
xchg
mov
xor
jmp
xchg
shl
jecxz
push
sbb
jecxz
mov
pop
jl
cmp
push
mov
xlat
insb
out
jp
sti
hlt
in
outsb
or
mov
insb
das
xchg
mov
imul
push
in
cltd
call
ljmp
lds
and
adc
insb
fistl
push
and
jns
std
xor
jae
imul
test
negl
in
scas
adc
cltd
pusha
mov
adc
cmpsl
xchg
jae
cmpsb
jae
movsl
dec
sub
fnstsw
mov
fistpl
repz
push
cltd
and
fists
pop
ret
cli
outsb
sti
push
pop
jmp
and
addl
js
sbb
xchg
sti
aam
sub
out
popf
push
lods
cli
addl
jmp
cmpsb
jmp
inc
add
sub
xchg
ljmp
loopne
ret
addr16
int
sbb
loopne
jbe
and
dec
mov
dec
dec
xchg
int
cmpsb
inc
lock
jge
dec
add
mov
pop
sbb
lret
adc
aas
or
pusha
lods
pop
fimuls
loopne
mov
xor
inc
jmp
cmp
inc
ss
xchg
ss
mov
iret
int
add
std
js
scas
and
jp
aad
fcmovb
or
sbb
mov
jb
insl
fsubr
mov
jae
ss
repz
popf
xchg
pop
mov
jp
mov
mov
push
out
cmpsl
and
aad
push
insb
xchg
ss
inc
jb
mov
and
arpl
popf
mov
scas
js
out
inc
mov
imul
jp
cmc
gs
mov
loopne
test
in
pop
cmpsl
sbb
jae
lcall
mov
inc
xchg
push
mov
xor
and
mov
xchg
dec
jnp
loopne
add
inc
je
mov
ljmp
cld
out
mov
dec
out
sahf
daa
jecxz
add
push
icebp
add
dec
sahf
int
fstpl
inc
stos
arpl
xchg
pusha
pusha
mov
in
test
fs
idivb
fmuls
sarb
je
inc
ds
ret
mov
in
fildl
jbe
push
mov
sub
xor
push
ror
or
das
ds
cs
cld
adc
outsl
dec
repz
pop
jmp
cld
dec
mov
jecxz
push
ds
in
shr
push
inc
mov
or
and
fcomps
xor
and
rcll
inc
sbb
test
inc
xor
scas
in
addb
orb
fnsave
repz
test
mov
push
or
jl
lock
std
dec
lea
lods
add
std
call
ret
shl
iret
loope
les
repz
inc
mov
outsl
and
ret
out
fmul
sbb
lcall
loopne
pop
adc
ja
inc
mov
fadds
insl
adcb
test
xchg
jno
add
stc
xchg
pop
adc
lcall
xchg
jge
lahf
lods
jnp
xor
mov
or
fdivrs
adc
push
aam
cmp
inc
jmp
je
cmpsb
xor
imul
call
sub
movl
ret
add
sbb
jno
adc
fmull
sti
negb
or
mov
test
add
ss
add
jmp
sub
aad
inc
pop
dec
sahf
mov
ret
enter
inc
int
stc
cltd
sbb
xor
aaa
popa
cmp
mov
push
test
cmp
jmp
lods
push
inc
xchg
ret
push
inc
sti
mov
dec
and
push
jmp
sub
xchg
push
nop
out
mov
sub
mov
jae
pop
das
pop
xor
fisubs
or
popa
sbb
mov
ret
imul
test
adc
mov
mov
repz
and
mov
test
into
dec
pushf
in
dec
xorl
inc
xchg
fcmovnbe
int
xchg
nop
xor
add
dec
dec
int3
mov
pop
sub
dec
sahf
leave
les
ret
fcomip
popf
add
aam
fldt
out
mov
into
jo
out
cmp
out
mov
fdivrl
and
adc
int
dec
popf
rolb
xchg
adc
mov
and
sbb
test
jne
dec
xor
sti
dec
mov
lahf
ret
cmp
fidivrl
pop
xchg
call
arpl
cmp
ret
popl
push
mov
sbb
mov
popf
push
cmp
push
lret
nopl
push
jl
sub
push
dec
adc
dec
insb
movsb
sub
enter
cmp
and
push
xor
ja
lcall
mov
fdivrs
adc
enter
pop
sbb
test
loope
mov
pop
push
xlat
fwait
in
fstps
pop
hlt
out
cmpsl
shrb
rcl
inc
push
ds
inc
and
loopne
mov
sbb
xchg
push
push
test
pop
cmp
sbb
pop
loope
jecxz
addr16
mov
das
sub
cmp
out
ljmp
mov
insl
fs
imul
xorl
in
xor
mov
sub
fsts
clc
dec
sub
inc
add
test
lret
mov
xchg
xchg
mov
stc
mov
add
fs
test
pusha
dec
insl
push
inc
sub
int
das
mov
mov
lea
popa
mov
mov
es
loopne
cmp
mov
jp
das
outsl
xor
mov
leave
or
mov
pop
adc
js
sbb
cld
aas
lds
fdivs
negb
dec
nop
fiaddl
std
lahf
xchg
ljmpw
insl
push
out
mov
fwait
mov
pop
jno
mov
fcompl
leave
sbb
sahf
cld
inc
mov
mov
add
adc
std
xor
mov
jns
loopne
sbb
lock
nop
cmp
ds
xchg
sti
fiaddl
cmp
xor
cmpb
shll
cmpsl
loop
cli
shl
mov
call
inc
pushf
mov
dec
cs
aad
fsubrs
into
ljmp
lea
jb
popf
ja
roll
mov
in
push
loope
mov
cmc
cmpsb
int3
sbb
inc
sbb
int
daa
ljmp
push
addr16
dec
sbb
push
sahf
iret
jle
fmul
dec
dec
sbb
dec
sub
addr16
ss
fdivp
sub
or
adc
sbbb
xchg
sti
sub
cld
xchg
xor
cld
enter
dec
cld
adc
and
push
shll
aam
mov
cmpsb
dec
jne
lods
xor
xchg
and
dec
mov
test
cmp
icebp
xchg
lahf
fucom
sub
mov
fisubrl
jmp
fnstcw
push
int3
sub
sub
fstpt
fdivrs
ret
or
ja
rcrl
jle
imul
sbb
push
clc
jne
aaa
sbb
mov
and
fucomp
dec
cmp
mov
xor
ja
mov
mov
cld
fimull
nop
and
sbb
dec
fisubl
fwait
dec
outsl
repnz
add
xchg
add
in
or
sbb
push
dec
sbb
and
fsubs
mov
and
insb
adc
stc
nop
test
mov
pop
xchg
pop
jmp
out
daa
mov
sti
ljmp
jle
repz
push
jmp
jbe
js
int
test
push
xor
or
fstpl
cs
push
rcl
popa
ret
mov
or
pop
ret
sbb
and
mov
inc
xchg
or
cmpsb
xor
dec
and
int
inc
mov
leave
inc
push
pushf
out
fsubrl
cli
xor
pop
or
ljmp
fwait
cwtl
clc
hlt
and
cmpsb
cld
mov
pop
addr16
dec
jmp
pop
mov
lret
sub
and
aam
or
pop
push
pop
stc
addr16
mov
push
mov
cltd
xchg
cmc
inc
push
cmpb
stos
mov
leave
mov
rep
repz
in
pusha
negb
sub
out
mov
xchg
mov
jb,pn
insl
mov
daa
scas
pop
push
pop
loopne
ja
fstpl
pop
call
sbb
xchg
and
jno
hlt
shr
jne
mov
fcoml
or
in
or
fsts
jbe
jecxz
and
pop
test
xchg
popa
xchg
imul
arpl
sahf
inc
test
sub
call
test
ret
orl
pause
in
cmpsb
or
and
mov
and
data16
mov
int
sbb
mov
pop
mov
xor
and
jmp
inc
scas
pop
pop
dec
addr16
ret
xchg
xchg
icebp
into
out
mov
and
mov
ljmp
repz
stos
jmp
xchg
jno
cs
ljmp
repz
outsb
pop
leave
inc
lods
mov
frstor
loop
inc
mov
das
out
xor
and
insl
fs
jno
icebp
mov
pusha
xbegin
add
mov
sbbb
add
rorb
jnp
lcall
sarl
andl
fwait
pop
insb
loop
cmc
mov
loop
adc
sub
outsl
clc
pop
fldcw
xor
sbb
push
sbb
mov
push
out
xlat
das
or
and
test
mov
mov
movb
xchg
push
add
rcrl
pop
arpl
push
jae
xchg
add
mov
xor
hlt
cmp
fbld
xchg
imul
xchg
xor
add
xchg
cmp
fwait
leave
jp
stos
fisubl
jno
jmp
jp
xlat
sub
xchg
jnp
test
mov
push
push
jae
pop
stos
scas
push
rorb
fsubl
and
mov
mov
mov
cmpsb
pop
stos
lcall
lds
aad
mov
adc
and
jnp
fbstp
aas
sbb
sub
lret
fcoml
fcmovu
dec
in
mov
arpl
jg
add
xchg
pop
mov
xlat
in
mov
and
xchg
xchg
jle
inc
xchg
sbb
xchg
mov
mov
dec
mov
dec
lea
in
inc
lods
mov
mov
xchg
push
rolb
lea
bound
mov
inc
jb
mov
push
and
push
xchg
std
sbb
fcmovne
fistl
fadd
lcall
and
out
dec
lret
xchg
shll
in
fucomp
roll
arpl
insb
sub
out
test
sahf
pop
cmp
xchg
push
xor
or
inc
lea
shll
or
fwait
sbb
lods
jg
loope
out
je
sbb
sub
ja
scas
stos
cmp
sti
aam
mov
scas
test
push
ss
push
mov
mov
sub
push
sti
dec
dec
and
or
xchg
mov
enter
insl
test
sbb
int3
inc
dec
push
in
bound
ljmp
int3
adc
mov
cwtl
or
loope
jl
push
sbb
sbb
scas
and
test
test
pop
sbb
mov
or
and
adc
mov
sub
sub
cld
jle
lcall
or
pop
pop
test
xchg
test
out
cmp
push
fistps
mov
fdivl
sub
test
mov
lock
or
hlt
push
adc
loop
arpl
push
mov
dec
popf
int
mov
adc
xchg
aad
jne
dec
insl
ret
movsl
loop
cmp
les
cwtl
mov
shr
das
std
nop
push
insb
dec
pop
push
imul
jo
xchg
ds
pop
pop
roll
cld
cmp
and
lea
and
aad
adc
nop
ja
sbbb
adc
cmp
pop
gs
xor
jp
sbb
aad
cltd
cwtl
push
add
ret
adc
cli
test
popa
jge
ljmp
or
jmp
fcomps
mov
insb
dec
jnp
mov
fwait
sti
popf
lcall
pop
test
xor
out
xlat
fstp
movsl
jnp
ret
xchg
sbb
xchg
aam
cltd
movsl
cltd
pop
loope
jno
xchg
and
dec
jae
sbb
push
out
adc
pop
cmp
clc
and
ds
ret
sbb
add
addb
xchg
mov
test
push
and
in
fstpl
sbb
test
mov
sbb
add
mov
ret
mov
mov
push
fimuls
gs
inc
cmc
sub
addr16
jle
cmp
adc
fwait
mov
jae
test
test
xchg
inc
call
int
fucom
add
mov
out
insl
pushf
insb
fidivl
jecxz
mov
adcb
pop
dec
mov
push
jp
mov
gs
cmpsl
or
xchg
insl
jae
push
push
arpl
insl
xchg
outsl
lods
lea
sbb
sbb
inc
clc
int3
and
out
loopne
cmpsl
inc
jmp
add
sub
xchg
aas
mov
sub
pushf
movsl
ret
cwtl
sbb
lock
lea
popa
pop
jmp
orb
jbe
ret
ja
imul
out
mov
cmpsb
in
sti
xchg
ja
push
jg
into
test
push
movq
push
fdivl
inc
jge
hlt
rep
in
fnsave
cmp
sub
and
rcrl
adc
nop
pop
and
std
loop
std
or
push
fadd
arpl
cmp
sbb
ss
out
jno
fwait
ret
add
addr16
dec
sbb
mov
stos
popa
pop
add
push
imul
xor
xor
add
ja
cwtl
mov
dec
test
xor
ret
sub
sbb
mov
push
inc
into
out
into
mov
mov
in
fistl
inc
sysenter
ljmp
jmp
fdivs
in
ret
je
aas
aad
int
out
loop
imulb
pop
fxch
pop
jae
inc
xchg
xchg
or
leavew
pusha
gs
call
cmpsl
aam
fwait
dec
popf
jno
stos
clc
or
lcall
mov
jge
mov
dec
ja
xchg
inc
lret
sbb
jne,pn
mov
scas
test
inc
mov
ljmp
cmp
cmp
inc
xlat
ret
test
aas
aam
and
push
movsl
mov
jb
repz
push
gs
inc
insl
jecxz
jp
das
aaa
in
pop
mov
ss
fsts
cmp
and
add
call
xorb
sbb
lods
loope
xor
add
jmp
imul
iret
repz
cmp
jbe
push
fdiv
sbbb
sbb
sti
cld
shlb
iret
lods
gs
xor
jns
pop
dec
aam
mov
addr16
into
fnstcw
push
imul
in
xchg
add
leave
inc
jns
fstps
lds
into
inc
in
push
je
xchg
ffree
xor
jne
movsb
cmp
jmp
sti
lcall
inc
sbb
add
mov
mov
mov
arpl
push
je
or
sbb
pop
aaa
or
ret
fmull
fistpll
or
sub
loop
sbb
mov
sbb
out
and
inc
mov
push
inc
cld
mov
dec
fadds
xlat
aad
sbb
test
sub
repz
cmp
add
mov
les
das
repz
lea
jns
fsubl
jecxz
hlt
xchg
mov
aaa
fwait
sbb
and
pushf
and
dec
jno
dec
outsl
subl
stos
test
inc
out
adc
dec
out
fxch
sub
rcrl
ss
jno
scas
cltd
sbb
das
pop
mov
cmp
icebp
mov
aas
add
pusha
std
leave
mov
pop
jbe
outsl
sti
outsl
push
fsubrl
cli
push
imul
xor
inc
mov
jmp
push
jp
je
inc
rcrb
aas
ja
or
and
imul
outsb
cmp
stc
out
dec
or
aam
add
cmp
mov
addb
fisttpl
xchg
add
scas
or
cmc
dec
push
addl
stc
data16
pop
ds
cs
popf
popa
movsb
ficompl
in
sahf
ja
sbb
mov
xchg
sub
jno
mov
cld
or
adc
pop
andl
andb
cmp
xchg
lods
add
std
mov
dec
push
es
add
fadds
mov
sub
dec
test
dec
xor
xchg
add
mov
push
pop
mov
xchg
sub
scas
and
mov
stc
inc
xor
adc
fdivr
pop
dec
jl
adc
loope
fwait
insl
out
sbb
fstps
les
jge
cmpsl
pop
jmpw
fstps
cmpb
add
jl
inc
rcrb
mov
pop
sub
push
jo
arpl
push
cltd
ret
gs
xlat
sbb
adc
cmc
cmp
aas
int
mov
and
movsb
mov
xchg
pop
or
arpl
lods
test
xor
add
push
fucomp
and
cmp
jl
push
or
sbb
mov
xor
mov
jmp
xchg
outsl
or
sahf
mov
mov
scas
pop
jns
ret
push
loop
push
leave
je
add
mov
bound
mov
and
iret
stos
adc
add
cmc
shrl
mov
or
jnp
mov
in
dec
rcr
mul
adc
mov
add
lcall
iret
fst
cli
das
inc
push
cmc
cmp
ja
test
insl
push
and
fneni(8087
std
ret
pop
mov
leave
out
dec
ljmp
sahf
and
add
inc
adc
and
dec
pop
push
pop
addl
pop
lods
cmc
mov
test
shl
dec
bnd
cmp
es
mov
pop
shrl
mov
in
pop
test
xchg
call
dec
dec
cmpl
jecxz
mov
not
sbb
out
cmp
in
push
xchg
fstp
sbb
sbb
pop
jmp
mov
jne
mov
jmp
inc
mov
mov
fdivl
xchg
movsb
int
pop
adc
ret
xchg
data16
in
dec
pop
iret
sub
dec
add
inc
movsb
lea
xchg
cmp
pop
insb
cmp
jbe
push
cmpsl
js
cld
pop
jb
sbb
je
and
fists
fstpl
cmp
pop
ljmp
cld
loop
inc
sub
imul
das
pop
pusha
ljmp
mov
fstpt
addr16
outsl
ret
filds
into
pop
movsl
pop
test
shr
aas
inc
sub
fdivrs
rcr
movsb
mov
pop
dec
arpl
shl
xchg
dec
ret
sbb
dec
pop
mov
push
mov
stos
fsub
lods
cmpsl
add
jecxz
pop
cmp
sti
dec
xchg
sbb
repz
and
xor
pop
push
jp
sub
test
xchg
inc
cli
xchg
cmp
jecxz
jbe
sub
pop
inc
push
cmp
bound
sub
gs
loope
mov
mov
mov
jmp
insb
jmp
pop
mov
vsqrtpd
dec
push
lea
imul
orb
pop
sbb
int3
out
gs
cmp
into
dec
fisubrl
inc
leave
sbb
stos
xor
sbb
fdivl
insl
jge
xchg
loope
xlat
out
mov
jp
lahf
pop
ret
sub
push
mov
in
fiaddl
out
lret
adc
mov
mov
ret
insb
fisttps
insb
idivl
into
lret
push
push
add
cmc
loopne
cmp
andl
popf
xchg
gs
dec
cmp
pop
movsl
xlat
push
push
jg
pop
sub
jb
imul
sbb
inc
test
repz
rcr
pop
pushf
dec
and
sahf
outsl
cmpsb
mov
inc
leave
xor
pop
repz
call
push
fldenv
xchg
push
je
push
fwait
insb
loopne
repz
popf
mov
pop
and
aaa
sahf
out
and
push
xlat
push
jo
mov
movsl
dec
out
popa
mov
jne
leave
or
cmp
pop
cmpb
or
jmp
inc
xorb
daa
mov
shll
mov
ljmp
pop
sarl
mov
outsl
fisubrs
sbb
jne
int
fwait
test
mov
nop
xchg
and
sbb
push
mov
pop
iret
pushf
adc
lods
and
cs
push
rcll
adc
nop
pop
pushw
scas
or
imul
push
shlb
sbb
xor
mov
push
add
fwait
dec
out
and
icebp
dec
mov
xchg
icebp
pop
lds
or
push
sbb
add
lea
mov
inc
dec
mov
pop
lods
das
aad
fadd
dec
fistps
sub
ds
shlb
loope
mov
add
and
adc
shlb
mov
jbe
jp
mov
adc
data16
pop
add
repz
cltd
jae
adc
filds
mov
aad
inc
and
sbb
jbe
sbb
pusha
jecxz
js
outsl
dec
rolb
out
shll
adc
jmp
fpatan
pop
in
fdivl
test
lock
adc
std
ud2
lea
ds
xor
mov
imul
pop
imul
out
ret
ret
subl
xchg
mov
ret
fists
xchg
push
loope
arpl
lea
push
clc
addr16
rorb
jp
dec
out
insl
push
sbb
and
fldpi
xor
test
jb
add
fwait
jb
xchg
aas
mov
test
int
dec
pop
adc
into
or
outsl
adc
rcrl
cmp
outsl
outsl
pop
leave
insl
pop
mov
inc
loopne
outsb
sub
fcompl
mov
push
js
dec
jne
xchg
das
push
and
jmp
mov
jmp
leave
sbb
mov
outsl
push
jnp
dec
xchg
mov
cld
lea
mov
sub
lds
sbb
outsb
jmp
arpl
int
fmulp
fldenv
mov
and
fstpt
pop
mov
add
stc
enter
pusha
repz
and
pop
add
rcl
ret
sti
jge
and
pop
pop
pushf
mov
cld
push
xchg
adc
sbb
and
and
push
pop
mov
aas
sbb
sbb
sub
int
aaa
and
inc
es
pusha
fiadds
pusha
jo
subl
xchg
mov
mov
data16
test
mov
nop
lea
insl
adc
pusha
fdivr
mov
dec
test
inc
or
xor
dec
test
ss
mov
dec
pop
ljmp
test
dec
cld
push
xor
jne
dec
repnz
mov
test
lea
iret
xchg
jns
lock
outsl
inc
sbb
jge
cli
push
mov
pop
test
cmpsb
ret
push
mov
jmp
stos
scas
sub
pop
mov
inc
jns
jne
xchg
xor
pop
cmpsb
fimuls
xchg
loopne
iret
hlt
aas
jno
jmp
pop
and
or
outsb
xlat
into
mov
inc
add
lcall
mov
jl
xchg
ret
xchg
mov
and
sti
movsl
and
jns
insl
jmp
repnz
add
xor
xlat
subb
insl
dec
jecxz
test
inc
cltd
mov
sti
shlb
inc
ret
or
push
xlat
fiadds
dec
stos
mov
fwait
sti
pop
cmp
jbe
loopne
push
mov
adc
call
xchg
cmp
in
movsb
push
mov
das
mov
test
scas
sbb
xchg
xlat
call
push
rolb
scas
inc
dec
inc
rcr
xor
shl
fiadds
jle
xchg
ja
ljmp
mov
jns
xchg
or
int3
inc
xchg
mov
popa
or
aaa
cmc
repz
mov
jp
jb
inc
fwait
outsb
divl
xchg
cmp
aaa
xchg
sbb
sub
not
xlat
jnp
movsb
insb
dec
insb
sti
idivb
in
loopne
into
dec
or
inc
std
mov
or
sbb
sbb
ret
lock
sbb
cs
ficoms
push
xchg
jge
mov
fstps
fdivrl
sub
fidivrl
push
push
xchg
scas
jecxz
and
cwtl
xchg
dec
inc
mov
push
int
dec
push
or
testl
pop
and
push
addr16
mov
sbb
xor
lea
pop
dec
mov
xlat
or
aad
push
inc
loopne
cmp
test
daa
sub
out
cmp
out
daa
or
imul
add
push
test
popa
xor
xchg
inc
xchg
xchg
in
cld
mov
push
ljmp
faddl
sub
lcall
mov
daa
dec
cs
in
ja
clc
pop
jmp
xchg
jnp
outsl
mov
inc
cmpb
ret
arpl
inc
lret
sbb
add
aaa
inc
rcll
sbb
out
inc
dec
xchg
xor
test
sbb
imul
fdivrs
pushf
cmp
xchg
inc
daa
inc
out
mov
loope
xor
loopne
data16
xchg
and
outsl
sbb
jg
xor
xchg
je
adc
out
outsl
call
loop
jp
and
push
orb
sbb
int3
std
push
cmp
pop
add
loop
inc
mov
inc
xor
into
push
imul
or
pushf
cli
lcall
sti
mov
cli
adc
sbb
fmull
pmaxub
fimull
insl
xchg
fnstenv
fldl
xchg
jne
fsubl
jb
cld
push
ret
sbb
adc
xchg
xchg
cmc
stos
out
mov
inc
sti
xor
pop
pop
pop
inc
ret
inc
push
scas
out
sbb
icebp
fdivl
mov
in
fnsave
jecxz
iret
mov
push
pop
es
mov
adc
insl
ret
jecxz
xor
fstpl
aam
ret
jns
repnz
jmp
and
insb
mov
aam
out
sub
lods
fbld
xor
or
aas
ret
lea
or
add
in
sbb
insl
std
mov
cmp
fimull
sbb
push
push
stos
push
cs
xor
jb
lcall
jb
pop
cmpsl
mov
sbb
enter
ss
pusha
mov
adc
mov
cmp
sub
jne
cmp
lock
xor
xor
sbb
add
add
mov
jecxz
mov
sbb
mov
mov
movsb
lock
mov
sbb
out
dec
enter
aad
pushf
in
fsubl
sbb
inc
xchg
popa
fsubl
dec
enter
and
dec
roll
pop
fwait
xchg
pop
dec
ficoms
lods
jno
sbb
ljmp
lock
xchg
push
xchg
xor
sbb
mov
gs
mov
sub
xchg
stc
mov
push
xchg
ficoml
and
pushf
sub
js
repz
add
jnp
test
lods
cmpb
push
ds
xchg
js
mull
jno
fdivrl
push
sti
or
xchg
xchg
cld
push
imul
fwait
push
shlb
imul
fstpt
stos
mov
cmpsb
addl
and
push
out
xchg
sbb
cmp
roll
cmpsl
lods
inc
mov
rorl
inc
add
push
std
add
or
ljmp
imul
dec
pop
fstl
int
cmp
jmp
out
xchg
aam
sub
inc
and
mov
xchg
push
sbb
mov
loopne
daa
cmp
into
cmp
or
nop
or
mov
jecxz
or
cmp
test
and
ss
and
lahf
ljmp
sbb
dec
xchg
imul
fcmovnb
or
loopne
lods
popa
cltd
cs
inc
pop
jl
jns
xchg
push
adc
jb
fcmovnbe
mov
jo
fs
or
stos
orb
gs
mov
scas
mov
imul
aad
jmp
pop
loopne
add
divl
in
sbb
mov
push
repz
cmpsb
stos
outsl
sub
outsb
jg
and
or
out
xor
adc
das
sub
fwait
and
or
sbb
mov
leave
pop
popf
aaa
push
cld
push
mov
sbbb
jecxz
leave
insb
fistl
xor
int
lret
loopne
pop
fwait
loopne
test
stc
sbb
push
ss
sbb
cmpsl
jmp
jne
pop
jmp
sbb
aas
jge
leave
rol
out
jmp
js
dec
test
jmp
inc
adc
jg
jmp
push
jmp
and
jmp
cmpsb
and
mov
inc
jge
inc
in
cmp
aas
xchg
into
addl
xor
gs
nop
aam
sbb
cmp
adc
push
jmp
cmp
sub
mov
mov
leave
adc
dec
mov
js
push
test
addr16
movsb
xor
xor
stos
rol
pop
and
imul
and
das
mov
test
xchg
shll
int
jg
sub
imul
clc
lret
xor
inc
dec
mov
cmpsl
jecxz
jmp
or
lcall
or
xor
leave
fsubl
jo
cmp
sbb
jl
rcrb
sub
ret
xchg
pop
outsl
repz
jno
xor
mov
jno,pt
mov
scas
mov
cmp
jne
sbb
push
push
loop
adc
loopne
xor
pop
scas
aas
push
repz
cmp
aaa
rcrl
sti
xchg
shr
fdivrl
ficompl
imul
sub
es
fdivrs
jno
mov
push
add
push
xchg
lcall
into
dec
gs
andl
pop
and
or
lcall
andb
jns
repz
xchg
xor
sbb
push
or
mov
mov
popa
gs
add
push
add
jmp
pop
xor
jnp
inc
sbb
mov
mov
sbb
cltd
xlat
push
xor
lret
cs
aam
out
adc
aas
mov
xchg
cli
test
std
addb
mov
mov
inc
int
adc
iret
mov
daa
cmp
dec
aaa
cwtl
roll
aam
sub
xor
dec
fstps
xchg
loop
clc
iret
xchg
add
mov
cmp
xchg
xor
fdivp
pop
dec
or
pop
call
aas
pop
mov
or
scas
and
out
push
mov
test
test
and
dec
jno
movsl
adc
mov
mov
ret
sahf
test
scas
imul
adc
insl
les
dec
rcrl
cmp
ret
dec
fistl
jecxz
lods
in
add
xchg
jno
sti
iret
xchg
imul
push
and
jmp
sbb
sub
pusha
add
sub
hlt
inc
add
adc
call
dec
inc
loope
imul
fisttps
sbbb
fsubs
jmp
sbb
gs
and
clc
pop
cmp
xchg
xor
or
aas
dec
xor
mov
fstps
pop
xor
or
lahf
outsl
sub
imul
outsl
jmp
insl
xlat
adc
push
std
mov
fdivrl
pop
test
xor
mov
das
js
cli
aad
jp
sub
sti
je
adc
js
data16
adc
mov
xchg
xchg
push
xor
sbb
jge
jne
fistpll
js
jle
xor
packssdw
cld
or
inc
fsubl
sbb
jge
rorb
xchg
push
and
jp
sbbl
pop
inc
mov
pusha
lcall
sahf
ljmp
jb
divl
lds
ret
cmp
psubq
test
lock
pop
pusha
and
addl
adc
in
fimuls
add
sbb
das
dec
fldcw
xor
adc
shl
gs
gs
nop
gs
mov
xchg
decl
negl
fsubrs
ja
jae
and
lcall
xchg
repnz
fwait
jmp
xchg
test
or
inc
repnz
adc
cmpsb
fcompl
cmp
ficompl
stos
mov
xchg
xchg
cs
imul
and
pop
cmpsl
push
pop
adc
inc
push
gs
ljmp
arpl
sbb
and
add
ret
pop
int
xchg
xchg
inc
push
jmp
stos
ljmp
lods
jmp
fldl
adc
pop
mov
push
stos
mov
sbb
jb
pop
fnsave
incb
sbb
jp
je
aam
add
mov
mov
fcomps
fidivrl
pop
push
pusha
dec
or
enter
jp
mov
and
sub
mov
scas
push
xchg
popa
das
mov
jne
dec
xchg
repz
pop
push
adc
pop
addr16
sbb
rep
mov
sahf
xlat
adc
jle
dec
cmpsb
jl
mov
fwait
cmpsb
mov
jo
mov
imul
add
insl
cmpsb
sarl
leave
pop
sbb
nop
out
push
out
push
leave
adc
lea
or
lds
lea
daa
div
notb
leave
push
adc
or
mov
pop
icebp
sub
cmp
xchg
enter
push
mov
dec
jmp
mov
sub
imul
and
push
jge
jmp
leave
mov
xor
inc
dec
scas
mov
es
add
jmp
push
xchg
mov
setbe
jae
xchg
xor
in
jecxz
fmul
cmp
mov
inc
jecxz
rol
in
sbb
mov
leave
les
xchg
sbb
loopne
ret
dec
mov
or
mov
adc
ret
inc
sbb
add
mov
pop
inc
mov
xor
cmp
ficompl
mov
cmp
pop
mov
fists
cmpsb
cs
andl
rcl
shl
mov
push
jecxz
cmc
sar
inc
xchg
ds
ret
out
cmp
mov
cmp
push
movsb
push
sahf
xchg
test
mov
cmp
fstl
insb
mov
out
mov
xor
je
pop
call
mov
cmpsb
mov
addr16
sbb
out
add
adc
adc
out
mov
jne
push
mov
arpl
aaa
add
int
rcrl
dec
shrl
push
dec
bsf
iret
mov
ds
push
ret
pop
int
movsb
cmp
out
xchg
int3
movsl
pushf
std
in
or
lea
aas
inc
pop
inc
out
xor
pop
xor
cld
pop
xchg
clc
les
imul
daa
xchg
fisttps
and
pop
mov
push
fcomps
inc
enter
xchg
cli
sbb
cmpsb
or
adc
popa
scas
sbb
sbb
aaa
or
jns
aas
movsb
jge
repz
mov
mov
jnp
fists
mov
pop
sar
xor
sbb
mov
sbb
and
xor
sub
mov
in
jo
mov
sub
fmuls
or
adc
fisttps
stos
sbb
push
lret
mov
jecxz
dec
mov
call
or
mov
insl
addr16
loop
stos
or
sbb
push
mov
lahf
scas
cmp
pop
mov
shl
pusha
jle
jnp
dec
jae
int3
arpl
cwtl
lcall
pusha
leave
out
adc
inc
xchg
sub
jmp
mov
add
and
test
sbb
cmp
adc
cmp
test
std
aas
mov
dec
ljmp
mov
xorb
fisttps
mov
lcall
sub
frstor
mov
dec
mov
cmp
popf
mov
and
jle
int
ds
and
mov
pop
dec
adcl
shlb
pop
into
xchg
jne
ljmp
and
fstl
sub
js
sbb
cli
and
sbb
aaa
dec
mov
fmul
inc
mov
sbb
add
mov
popf
xchg
adc
js
and
outsl
addr16
imul
emms
test
push
or
enter
dec
outsl
dec
mov
inc
inc
shll
inc
rcll
jge
popa
pusha
cmp
adc
and
lea
iret
jmp
xchg
lods
pop
and
or
pop
push
fisttpll
sbb
pop
ret
push
out
xchg
int
lea
push
fstps
addr16
xor
xchg
and
sub
jmp
iret
addr16
sbb
push
add
xor
les
iret
cwtl
sbb
jnp
outsb
xchg
fbstp
pusha
lods
sbb
jp
dec
ja
pop
push
inc
es
mov
adc
mov
inc
ljmp
pop
xchg
sub
in
push
mov
icebp
inc
mov
inc
loopne
push
aas
dec
mov
out
popa
popf
and
pop
gs
imul
cmp
iret
imul
jge
rcrb
repz
dec
cs
jmp
and
push
sbb
or
gs
xor
xor
cs
mov
pop
iret
xchg
dec
test
mov
xchg
lcall
mov
jg
leave
loope
sub
stos
iret
jnp
inc
repz
add
cmpsl
scas
push
fstl
dec
pop
and
push
pop
out
cmp
mov
jnp
pop
flds
mov
add
aas
in
ret
lcall
js
cmp
cltd
ljmp
cld
add
adc
aaa
cmp
pop
int
pop
mov
aas
sbb
in
or
test
push
fidivrl
sbb
inc
xchg
and
mov
adc
cmp
shll
dec
dec
push
mov
icebp
lahf
lea
push
dec
jmp
add
rcrb
hlt
or
faddl
sbb
add
xlat
fstp
pop
jnp
lcall
fsub
dec
repz
cs
cld
popa
jae
and
ret
imul
xor
ljmp
add
in
movsb
inc
inc
stos
mov
inc
daa
add
divl
mov
add
sbb
fcompl
inc
lods
cmp
fists
pop
inc
jne
imulb
ficoms
pop
pop
rcll
dec
jecxz
dec
into
cmp
cmp
sar
ljmp
pop
ljmp
jp
fcmovb
and
pop
add
fisttpl
dec
push
sbb
cltd
pop
cmp
cmp
jbe
push
and
pop
dec
not
fcomp
int
inc
mov
sbb
and
xchg
cltd
jb
xchg
fcmovnb
mov
inc
cmp
dec
mov
pop
add
jp
mov
fisttps
fldt
ds
fwait
loope
xchg
ret
repz
addl
addr16
dec
shl
loop
push
out
mov
imul
mov
frstor
xor
sub
int
sbb
ror
mov
ret
sub
out
xor
loope
fildll
addr16
mov
dec
pusha
adc
push
sbb
popa
jnp
dec
lcall
cld
pop
shl
inc
mov
sti
rcrb
xchg
inc
pop
add
loope
pop
pop
imul
cmpsl
mov
mov
or
dec
cs
xchg
jecxz
sahf
popa
jle
decl
jns
in
rcpps
jno
fdivl
jmp
lods
jg
fistpl
xor
jns
adc
mov
sbb
adc
sbb
sub
cli
xchg
xchg
and
outsl
mov
enter
and
ret
jb
imul
xchg
shl
sub
jns
push
push
push
in
dec
and
dec
int
mov
dec
cmp
pop
popa
jnp
cmpsb
nop
js
andb
shll
jg
cmp
inc
addr16
cli
fsubrl
jp
jne
jl
loop
mov
mov
fwait
pop
or
in
inc
mov
stc
es
and
mov
out
cs
add
imul
ret
sub
test
xor
nop
ret
or
dec
or
into
jno
mov
sbb
mov
push
push
cs
enter
into
sarl
inc
outsl
jmp
dec
rcrl
lock
push
imul
fldt
loop
aam
paddusw
cmp
iret
xor
mov
int
xchg
mov
test
pop
imul
sbb
rorl
sub
pusha
lods
mov
pop
jg
sahf
push
pop
leave
dec
jnp
sarb
jmp
mov
sub
mov
pop
xchg
sbbb
stos
sub
into
cs
and
mov
test
and
ss
std
jmp
push
jmp
lds
jns
sti
hlt
test
insl
addl
xor
pop
xchg
inc
fsubs
cs
sub
imulb
adc
enter
add
mov
les
in
gs
loopne
lods
jg
dec
and
stos
fstpt
stos
cltd
dec
add
jb
push
fdivrl
dec
scas
push
and
jle
stos
shl
aam
div
fidivs
cmp
add
jne
sbb
add
push
mov
out
ret
repz
outsb
sbb
cli
stos
jl
mov
mov
dec
scas
fisubs
jl
pop
shl
mov
and
dec
pop
fisttps
jle
test
inc
jp
hlt
neg
pusha
cmp
subl
out
movsl
or
sti
push
outsb
stc
push
inc
rcll
fisttpl
jmp
inc
rcrl
xorb
push
lds
push
inc
and
mov
cs
int
pop
por
repz
mov
dec
loopne
rcrl
jmp
sbb
fcoml
jg
inc
lds
xor
cmp
push
adc
imul
dec
mov
movsb
inc
pop
int
jecxz
aas
fildll
rolb
out
mov
test
and
sub
cs
fsubs
push
sbb
clc
andl
int
or
subl
inc
xor
add
es
mov
repz
je
dec
dec
addr16
push
sbb
and
loop
fcomp
test
cmpsl
inc
push
add
sub
sbb
cltd
pop
test
mov
faddp
inc
repz
pop
pop
imul
xchg
jp
xor
lock
xlat
adc
frstor
sub
leave
pop
mov
jnp,pt
and
arpl
cmp
push
sbb
stos
dec
dec
jecxz
out
sbb
jg
leave
cmpsl
ret
idiv
mov
popf
cltd
gs
js
inc
andl
jle
fwait
dec
out
lods
mov
push
movsb
push
xchg
aam
cltd
jl
pop
rcrl
xchg
mov
pop
mov
or
leave
sbb
dec
loopne
dec
jns
push
stos
in
nop
jp
mov
dec
lcall
insl
in
push
fistpll
sti
jmp
fcomps
in
or
sbb
imul
ja
mov
or
cmc
jmp
andl
sar
mov
mov
dec
or
pop
jns
xchg
sub
push
jecxz
mov
dec
cmc
fdivrl
int3
fists
ja
inc
pop
jb
addr16
bound
fwait
je
add
or
lds
pushf
fists
mov
cwtl
decl
cli
jno
jp
iret
pusha
xchg
xor
addr16
push
fistpll
in
ret
imul
fisubrl
push
ret
fsubrl
les
mov
jnp
bnd
aas
and
imul
mov
js
aam
out
pop
or
xchg
addl
das
out
and
mov
adc
out
and
fcom
cmc
sub
pop
xchg
into
popf
adc
push
xor
repz
leave
insl
jp
xchg
xchg
inc
aam
sarl
fdivr
lods
dec
rol
js
imul
stc
andl
xchg
push
inc
mov
xchg
roll
iret
outsb
jo
inc
clc
ss
sbb
xchg
push
in
sahf
repz
dec
dec
xor
cmpsb
sahf
pusha
adc
push
dec
lock
sub
sub
roll
hlt
mov
mov
out
stos
mov
scas
jo
pop
ret
and
in
or
repnz
out
mov
jg
mov
sub
mov
xchg
pop
sub
fcoml
sub
and
icebp
les
mov
jl
xchg
inc
bound
pop
push
hlt
push
mov
dec
sti
cmp
xor
frstpm(287
sti
ljmp
fimull
jecxz
int
and
lret
xchg
adc
cmc
jae
aad
or
pop
mov
test
or
in
inc
aam
call
stos
shl
leave
xchg
adc
and
fcmovbe
cld
sbb
mov
mulb
mov
sarb
ret
sub
cmp
pop
outsl
test
lcall
std
mov
cmpl
or
int3
xor
and
mov
cs
lea
pop
insl
xor
adc
nop
xchg
repz
mov
push
popf
cmp
sbb
shl
stos
ljmp
fadd
dec
scas
mov
pushf
flds
imul
out
rcll
inc
jecxz
test
pop
ret
add
imul
hlt
sbb
jle
pop
pop
imul
aas
and
in
and
clc
aam
in
scas
jmp
xor
mov
stos
in
repz
jbe
cmpsl
sbb
cltd
outsl
popa
sub
mov
push
inc
jecxz
pop
push
mov
fidivrs
sub
movsb
push
inc
cmp
fwait
ret
ret
stos
movsb
add
and
out
pop
jmp
inc
test
sbb
sbb
imul
lret
enter
mov
lcall
mov
push
sahf
outsl
mov
dec
sahf
pop
and
addl
ret
or
fwait
mov
or
sbb
js
out
fninit
sbb
mov
jae
insb
push
jl
mov
jecxz
int3
xchg
cltd
aam
inc
pop
xorl
sahf
movsl
ljmp
cmp
cmpsl
es
cmpsb
push
aad
rcl
leave
sub
shlb
mov
mov
or
sbb
les
sub
das
or
aam
xlat
mov
fldt
shll
or
stc
inc
scas
cmpsl
es
leave
push
or
sti
mov
int
mov
lea
or
ja
call
arpl
in
jbe
jns
mov
lock
jecxz
lea
fisubrl
shll
and
inc
addl
mov
push
push
insb
sti
xlat
mov
mov
test
jnp
or
adc
jge
aam
test
fdivrs
sub
into
rcr
xchg
bound
dec
mov
rcrb
ljmp
ret
jnp
fadd
xor
cli
jmp
mov
mov
popa
and
jmp
and
test
xor
jb
mov
mov
and
sub
xchg
xor
lret
or
dec
jne
push
jl
flds
push
sub
sub
jo
in
in
inc
fcoml
pusha
adcb
aas
roll
inc
push
mov
jno
ficoml
mov
fstps
push
lcall
lock
jmp
lods
scas
jne
shll
mov
hlt
sub
and
shl
testb
enter
les
mov
fmuls
and
jmp
popa
xchg
cmp
es
add
dec
push
dec
cwtl
jl
sub
cmp
loop
pop
fnsave
pop
lret
xor
enter
and
cltd
cld
and
dec
mov
movsb
icebp
jnp
aas
popf
sbb
or
insl
ret
daa
mov
add
push
adc
xor
fisubl
in
mov
or
xchg
sbb
lea
jno
and
test
imul
jo,pt
cmc
jo
cmpsb
jecxz
mov
sub
cmpsl
jne
jecxz
sub
sbb
jbe
pushf
mov
jl
pop
and
or
mov
aas
lret
and
sub
ds
cld
xchg
xchg
int
dec
cmp
ds
stos
imul
fucomi
lds
sbb
cmp
out
mov
or
icebp
fsts
pop
in
mov
cmp
jecxz
push
add
nop
xorl
jno
testl
imul
nop
fwait
adcb
xchg
cmp
cmp
dec
movsl
sti
cmc
ss
push
jecxz
addl
and
adc
cmp
inc
lods
add
lret
enter
scas
xchg
xchg
imulb
scas
stos
cmpsb
ror
ds
jecxz
popf
fdivr
cmp
pushf
loope
jg
faddp
and
ja
outsb
jl
adc
mov
dec
dec
sbb
and
lea
dec
cmp
hlt
push
mov
inc
mov
sbb
or
jge
lahf
imul
mov
sbb
and
aam
outsl
lods
shrl
mov
jbe
inc
imul
add
xchg
popa
jno
cli
out
je
aam
cltd
dec
imul
pop
aad
iret
jle
inc
sbb
dec
insl
shl
pop
outsb
push
out
cmp
ret
pop
jmp
mov
cmp
insl
fsub
push
loop
jbe
test
insl
imul
pop
inc
sub
stos
xchg
mov
ficoml
or
aad
hlt
jge
out
shll
in
fistpl
or
add
inc
inc
lret
in
sub
mov
cmp
mov
mov
addr16
cli
into
mov
jp
pop
int
dec
clc
scas
aas
std
scas
ljmp
test
push
and
addr16
xor
jmp
jae
mov
jmp
les
jecxz
add
in
in
mov
and
cmp
fisubl
add
pop
and
cmp
in
cmpsb
sub
mov
enter
cld
jmp
xchg
jmp
aam
add
pop
and
insl
xor
and
or
mull
ficomps
mov
loopne
imul
inc
test
inc
shl
das
dec
fmul
inc
pop
loopne
fmuls
inc
adc
dec
dec
sub
lcall
arpl
seto
mov
jo
cmpsl
es
and
icebp
insb
out
dec
cs
inc
dec
cmpsb
mov
repz
mov
mov
mov
and
aaa
push
in
ljmp
fdivl
js
jmp
sbb
es
call
iret
push
call
cltd
aaa
iret
push
cmc
dec
mov
sub
adc
enter
orb
sbb
mov
add
lahf
jno
fstps
repz
out
call
sub
sti
dec
add
popa
or
nop
outsl
repz
xor
add
jmp
cmpsl
jno
jmp
sti
mov
xchg
jno
sbb
shrb
inc
int
xchg
dec
aam
cltd
or
sti
stc
rol
xchg
lods
fwait
rcrb
inc
and
test
mov
pop
cltd
sarl
jmp
push
insb
dec
or
or
cmc
or
fstps
repz
sbb
fimull
mov
int
int
adc
enter
and
mov
cmp
int
xlat
mov
xor
mov
call
mov
jns
jns
in
cld
ss
xchg
cs
pop
mov
push
mov
xchg
push
jecxz
inc
movsb
cmp
or
adc
in
test
xchg
fcomip
sbb
into
jmp
dec
dec
in
xchg
xchg
jne
add
nop
sub
jmp
mov
jns
mov
fs
push
out
adc
orl
jno
outsl
mov
iret
push
inc
jmp
sub
xchg
cmp
in
fnsave
int
xchg
push
int
int
rol
sub
leave
ljmp
sub
out
ret
mov
pop
push
inc
leave
mov
lcall
mov
test
sbb
and
aaa
js
adc
int
mov
push
dec
leave
outsb
dec
test
repz
cmc
mov
xlat
dec
jecxz
and
aad
mov
mov
mov
lock
repz
testl
and
rcrl
xchg
int
in
lock
sub
loope
ss
rclb
call
push
xchg
mov
add
das
lods
fistpll
cmp
jmp
jl
sub
xchg
daa
mov
cmp
jmp
xor
jmp
dec
sbb
addr16
iret
ljmp
lcall
leave
cmp
pop
xor
lock
fs
lds
orb
outsl
test
dec
jmp
mov
repz
mov
mov
adc
pop
mov
enter
mul
clc
loopne
pmaxub
sub
mov
call
mov
xchg
adc
xlat
mov
jl
loope
inc
mov
mov
into
lea
sbb
inc
xchg
cmp
adc
xor
cltd
mov
mov
std
pop
imul
sub
mov
ficomps
pop
arpl
dec
mov
fwait
mov
jns
out
cmp
cmp
push
xor
push
in
push
xchg
fldl
add
fwait
movsl
orl
jns
lar
loop
dec
dec
xor
leave
push
scas
add
test
cmp
sbb
ds
xlat
mov
xchg
cwtl
dec
fisttpl
cld
push
mov
xchg
push
mov
mov
int3
or
push
lahf
jbe
push
add
iret
mov
popf
adc
in
ja
out
pop
mov
push
push
cmpsb
pusha
mov
pop
rolb
jns
add
shl
pop
sub
push
sbb
shll
cmp
cltd
jns
fwait
or
mulb
dec
push
test
inc
rcll
cmpsb
lcall
sbb
add
pop
push
dec
je
imul
fwait
outsb
popf
faddl
sub
cmp
inc
pop
push
mov
out
sahf
lahf
jecxz
pop
xchg
leave
jl
fdivr
xchg
test
mov
xchg
add
cmp
cmp
popf
and
pusha
dec
lea
mov
push
cwtl
popf
push
out
clc
dec
ret
imul
push
rclb
mov
xchg
int3
push
scas
adc
mov
leave
ss
push
jnp
mov
std
repz
fldt
mov
xchg
xor
fdivr
sbb
sar
pop
mov
lods
not
jge
sub
jmp
cmp
call
test
imul
sub
mov
mov
xor
xor
and
out
cmp
movsb
ss
inc
lods
les
dec
jp
gs
pop
and
fwait
out
inc
mov
mov
imul
lea
sti
lods
and
sbb
jns
sub
jg
mov
in
call
call
or
jae
xor
sbb
mov
jmp
mov
outsl
and
rcrb
jg
cmpsb
in
dec
ficomps
daa
lcall
out
and
sahf
movsl
and
fs
loopne
push
inc
jbe
gs
push
iret
jo,pt
sub
jbe
rorb
inc
push
loop
jae
sbbb
ss
xor
lods
fildll
popa
in
pop
fcoms
leave
sbb
jmp
fsts
cmpsl
in
dec
pushf
mov
mov
cmp
iret
or
adc
push
xchg
data16
jp
repz
rcll
mov
xor
inc
jmp
shll
cs
scas
add
bound
imul
jecxz
outsb
mov
fildl
rclb
pop
mov
push
rcll
ljmp
pop
xlat
pop
sbb
in
loop
xor
xor
lea
cmc
add
popf
fnsave
int
leave
push
jne
push
lods
xchg
arpl
ljmp
jg
xchg
xor
ljmp
aam
sub
lcall
popa
in
fs
jecxz
jp
xchg
add
gs
adc
fsubr
insb
cmpsl
xchg
lods
dec
int
dec
iret
jae
jmp
mov
popf
pop
enter
imul
sub
mov
mov
fwait
push
fstps
or
mov
test
sbb
rcrl
outsb
sub
inc
mov
cmpsl
stos
fstpl
push
pop
mov
xchg
and
outsb
rorl
jno
push
adcb
mov
bound
sbbl
sbb
or
xchg
jno
jnp
imul
fbstp
inc
enter
jmp
movsb
or
push
xchg
leave
push
jg
movsl
adc
cltd
jecxz
mov
xchg
clc
add
test
xor
jno
dec
out
sub
int3
dec
loopne
push
cmp
sahf
lea
cwtl
out
push
lds
insb
or
je
xlat
xor
pushf
aad
push
cmpsl
js
out
jmp
pop
xor
mov
enter
int3
dec
sbb
mov
iret
cmp
cmc
and
mov
sti
int3
xorb
pushf
mov
lods
test
loope
cwtl
shll
mov
jmp
outsb
xchg
fs
out
inc
cs
sbb
loopne
pop
cmpsb
gs
ret
iret
push
mov
leave
jo
jne
jae
rcl
pop
cmp
popf
aas
stos
jb
dec
inc
push
push
inc
loope
mov
push
add
test
jns
dec
add
push
loop
jge
xlat
inc
repnz
push
fstp
int3
aaa
mov
pop
clc
in
and
lret
push
out
cs
fdivl
fisttpll
jnp
pop
dec
outsb
lea
fisubrs
ficoms
jns
ljmp
test
gs
popa
ficomps
sub
mov
fldcw
fstpl
xor
or
es
icebp
in
mov
xchg
les
testl
pop
fstpt
add
repz
and
jge
cmp
inc
pushf
xor
push
imul
xchg
sub
adc
rcl
pop
sbb
or
in
or
arpl
bound
xchg
xchg
inc
jnp
mov
jmp
sub
adc
mov
xchg
mov
cmpsb
xchg
ret
fstpl
and
and
xlat
les
aas
sbb
fwait
movl
jb
sub
sbb
xor
out
pop
std
and
nop
cmp
loopne
je
sti
pop
and
repz
push
fwait
in
test
or
push
cmp
aam
cs
in
mov
jecxz
les
fiaddl
movsb
ret
sub
mov
icebp
xor
jp
fists
idivb
mov
insl
sbb
repz
out
ret
mul
outsl
pop
xchg
push
insl
enter
ret
dec
sub
repz
fcmovu
int3
pop
stos
pop
lds
mov
mov
lds
scas
push
mov
adc
jle
fsubr
stc
xchg
in
xor
jecxz
pop
inc
out
push
jmp
out
icebp
movl
sub
shl
pop
arpl
pop
inc
outsb
daa
push
ljmp
sbb
ret
loop
dec
fbstp
sbb
loop
rclb
test
xlat
xor
scas
jno
mov
std
mov
mul
dec
mov
push
in
int
out
cmp
jle
ljmp
imul
cltd
push
push
pop
daa
repz
sub
or
clc
andl
out
in
pop
movsb
jns
movsb
arpl
pop
inc
ja
mov
imul
ljmp
jmp
data16
inc
push
pop
sub
xor
int3
and
cli
pusha
mov
cld
andb
jecxz
test
cmpsl
jp
sub
jle
roll
leave
sub
sub
insl
loopne
test
data16
sbb
insl
ret
lds
rcrl
imul
sti
cmp
xor
or
mov
arpl
or
push
mov
lock
or
enter
loopne
nop
ret
mov
dec
stos
mov
arpl
add
imul
mov
or
mov
push
jecxz
std
ljmp
addr16
jle
jo
imul
cmpsl
mov
ret
out
or
cmpsb
pop
out
dec
fwait
xor
ds
popf
or
cmp
inc
call
fwait
aas
les
arpl
push
ljmp
loope
gs
push
popf
xor
out
fsubrl
jae
xor
cmp
in
cmp
xchg
fs
imul
sbb
mov
sti
or
add
fistl
lcall
jb
addr16
fcompl
arpl
test
std
scas
out
mov
pop
jno
inc
scas
fwait
push
imul
call
xchg
ss
xchg
inc
mov
mov
ljmp
enter
cmp
mov
test
push
xchg
jae
lods
scas
pop
or
dec
mov
mov
pop
jle
arpl
addr16
dec
or
dec
mov
adc
dec
xchg
shll
mov
push
mov
rcrb
inc
jcxz
fwait
pop
daa
sbb
addb
mov
addr16
or
pop
sbb
xchg
jnp
and
jb
mov
push
test
pop
inc
lret
pop
divb
loop
or
aam
lret
or
cmp
xlat
xchg
out
repnz
lods
and
xchg
sub
pop
cltd
inc
mov
xchg
cmc
pop
xlat
dec
and
adc
outsb
clc
dec
push
hlt
cld
stos
shrl
or
fwait
aaa
jmp
or
dec
lods
mov
negb
loop
inc
mov
xchg
dec
dec
iret
inc
addr16
arpl
ret
nop
mov
fwait
lret
out
xchg
out
pop
adc
sub
sbb
rol
mov
aam
int
out
jp
imul
decb
rol
and
dec
repz
loopne
ja
insb
in
in
loop
aas
xchg
jle
popf
dec
push
xchg
mov
xor
aad
or
add
imul
xchg
jae
push
cmp
popf
in
ret
int
push
cmp
jmp
xchg
push
mov
aam
lds
shlb
sub
cmp
mov
fisubl
mov
lgdtl
mov
add
jmp
inc
push
sub
cmp
fisubrl
cmp
inc
cs
lret
mov
fimull
and
aaa
mov
daa
jecxz
aas
cli
sbb
popa
inc
rol
mov
jne
xor
jge
xchg
out
imul
aas
loopne
cmpsb
gs
sti
mov
fdivr
loop
pop
adc
xchg
into
cmp
cltd
lea
dec
sbb
int
aad
fstp
xor
test
sub
popa
leave
int
in
scas
int
sub
mov
fucomp
push
inc
imul
sbb
test
fisttps
inc
mov
mov
out
inc
inc
fstl
fmull
idivb
addr16
jae
in
fildl
insb
push
adcl
leave
in
aam
int
jns
or
dec
imul
ja
jg
mov
test
xor
sub
leave
imul
mov
dec
and
inc
and
push
cmp
cltd
or
lret
inc
fwait
push
into
adc
push
pop
shrb
jno
out
pop
and
dec
xchg
fwait
rcrl
sbb
and
out
and
and
inc
inc
mov
xchg
aad
adc
out
jno
mov
repz
mov
jmp
push
enter
mov
mov
and
loopne
mov
add
mov
pop
test
inc
leave
arpl
fxch
mov
dec
pop
xor
insb
mov
rcrl
sub
pop
cs
inc
adc
fst
in
jmp
lods
xchg
dec
fsubrl
fucom
push
xor
fcmovu
popl
xchg
xchg
ds
pushf
leave
and
imul
scas
hlt
mov
pop
push
rorb
adc
push
pop
ficoms
push
inc
jbe
arpl
push
fnsave
mov
or
dec
mov
rcrl
outsb
popa
inc
fildl
mov
dec
mov
xlat
dec
lret
push
mov
ds
mov
push
dec
rcrb
shll
cld
lods
scas
xchg
cmp
dec
jecxz
dec
out
dec
rep
cltd
cmpsb
iret
pop
add
dec
into
mov
pop
mov
int
or
int3
or
xor
push
pop
mov
imul
push
pop
mov
in
and
dec
ficoml
arpl
adc
imul
and
push
andl
mov
loop
pop
lds
push
es
pop
imul
sub
sub
ror
jl
mov
fcomps
dec
and
out
cltd
push
pop
lret
inc
fldl2t
lea
sbb
push
pop
adcb
aad
fcmovnu
adc
xchg
jecxz
inc
clc
cltd
pop
stos
cmp
gs
movsb
dec
dec
rcll
les
jl
fcomps
push
leave
jle
xor
dec
cltd
inc
dec
mov
or
arpl
jbe
ficompl
xlat
daa
outsl
cmp
push
inc
in
aam
int
or
adc
jmp
push
sbb
in
pop
pop
loopne
int
and
ss
out
fwait
mov
pop
aas
xchg
insl
inc
push
lret
push
push
fdivrl
or
bound
pop
fldt
push
ficoms
adc
aas
sbb
mov
ror
jmp
xchg
ret
in
call
jg
out
sti
daa
fwait
fwait
std
ss
int3
add
aad
sbbb
mov
imul
or
scas
add
sub
sbb
adc
push
call
xor
data16
pop
lahf
addl
jle
mov
dec
inc
pop
stos
push
xchg
cmpsl
push
test
or
push
inc
mov
push
cmpsb
inc
push
mov
out
push
jmp
pop
insb
mov
out
jbe
mov
xchg
jne
stos
adc
dec
enter
fildll
and
out
fstl
xchg
stos
int
cmp
add
inc
mov
pop
test
dec
pop
xor
cli
or
leave
jp
jge
lret
sbb
jmp
stos
mov
imul
aas
push
inc
add
lret
mov
fnsave
ljmp
out
mov
adc
ret
sbb
leave
jo
adc
jo
add
jmp
jmp
mov
sub
pop
xchg
stc
cmp
nop
push
bound
repz
stc
cmp
adcl
iret
xor
xor
push
dec
hlt
aaa
lock
lcall
fcompl
cmc
ja
mov
xor
jecxz
mov
je
outsl
out
cmpsl
inc
xlat
push
pop
repz
pop
pop
push
gs
add
fmuls
dec
jnp
sarl
cmpsl
pop
jg
add
pop
fcomps
insb
and
add
cmp
das
mov
out
lret
pop
int3
das
loope
jmp
pop
push
out
xlat
push
in
js
pop
bound
lret
imul
cmpsl
lods
daa
leave
push
lods
adc
jecxz
xor
inc
cld
int3
xor
test
jg
std
shll
iret
xor
pop
dec
std
ja
inc
inc
pop
ds
inc
mov
aas
cmp
lret
inc
pop
stos
test
dec
imul
addr16
pop
sub
mov
dec
test
inc
and
mov
push
mov
pop
in
jne
mov
cltd
clc
ret
clc
xor
out
nop
mov
nop
adc
xlat
sbb
bound
je
mov
jl
je
loope
mov
xchg
xor
push
aad
jb
test
and
ljmp
jge
rcrl
in
pop
movsb
mov
jg
sbb
mov
and
jnp
jecxz
xor
cmp
sbb
mov
repnz
daa
fwait
add
pusha
movsb
test
stc
pushf
out
mov
insl
mov
test
jae
arpl
mov
mov
and
test
std
inc
push
mov
push
sti
insb
repz
mov
xor
inc
inc
ret
cmc
stos
xchg
add
les
pop
add
ret
xchg
push
push
lcall
xor
dec
ljmp
out
pop
negb
and
mov
inc
xor
nop
inc
mov
dec
aas
mov
jo
fistl
dec
sbb
lcall
les
jg
loope
lret
inc
roll
inc
lea
pushf
cmpsb
adc
test
fadds
ficoms
jae
cmpsl
push
dec
dec
and
push
int
sub
cmc
int
mov
inc
imul
aas
add
sbb
iret
xor
cmp
adc
aaa
imul
mov
popa
ficoml
data16
jo
inc
add
jnp
fidivrs
push
xchg
cs
sub
cmpsl
inc
loop
clc
sti
cwtl
cmp
push
mov
rorl
jae
in
mov
cwtl
pop
or
es
mov
and
shl
insl
sbb
xchg
push
add
repz
jne
ret
jns
stos
mov
rcrl
int3
lret
and
pop
xlat
dec
outsl
mov
arpl
sbb
test
ret
in
fwait
sbb
pushf
sbb
inc
repz
sbb
fwait
mov
jg
je
pop
popa
int3
cmp
inc
dec
lss
fsub
push
inc
ja
adc
pop
inc
lcall
inc
outsl
hlt
push
ds
jmp
jnp
scas
cwtl
cmp
inc
stos
leave
sub
mov
jle
inc
mov
imul
lods
push
fmul
inc
pop
inc
push
enter
jmp
xlat
sbb
mov
mov
dec
int3
fsubs
bound
push
fs
les
cs
add
add
dec
in
fdivs
cltd
pop
in
jmp
sarb
flds
inc
dec
push
enter
lret
mov
sbb
adc
fdivs
sbb
test
push
repnz
loopne
in
daa
fstpt
sub
sarl
fwait
mov
imul
cmp
jmp
shrb
push
std
push
out
mov
ret
int
sub
rorb
fsubr
dec
test
insl
mov
or
cltd
ds
pop
cli
dec
mov
xor
mov
ret
repz
ljmp
inc
jo
and
xchg
jmp
ja
adc
sbb
popf
or
shll
jg
into
cmpb
cld
or
cmp
jecxz
data16
sahf
jmp
fs
ret
mov
sbb
jge
sub
dec
cld
fwait
sbb
out
dec
dec
sti
xchg
dec
inc
pop
popf
jecxz
adc
mov
leave
mov
stos
xor
xchg
mov
insb
push
idivb
xchg
inc
fbld
leave
push
es
notb
xor
shl
adc
fdivrl
sar
test
or
add
shl
pop
jecxz
scas
push
sub
in
andl
incl
adc
inc
test
les
shlb
jno
sub
xor
mov
ret
cld
scas
lcall
mov
jns
scas
xchg
cld
jo
lock
inc
or
ret
or
mov
sub
jge
ja
and
sbb
in
sbb
int3
fisubl
fucom
cmp
std
enter
mov
aas
push
jne
psubsw
test
xor
add
xor
test
cwtl
fnstcw
iret
push
sbb
push
popa
mov
ret
cltd
and
and
mov
inc
xor
mov
fisubs
xor
mulb
ljmp
jae
or
sbb
adc
jl
mov
mov
testl
xchg
push
fmul
sbb
out
out
popa
repz
push
inc
mov
sbb
inc
test
xor
xchg
xor
inc
dec
in
mov
sbb
fucomi
jge
jp
int
dec
loope
and
inc
xchg
dec
rcl
jno,pn
pop
sti
fnsave
fstpt
dec
cmp
add
fisttpll
xchg
pop
and
int3
fcmovne
pop
mov
leave
inc
rol
sub
lds
icebp
or
pusha
sub
mov
clc
jae
das
test
jp
push
inc
dec
insl
int
scas
cmp
cmpsb
dec
cltd
stos
cmp
and
add
jecxz
dec
ret
or
mov
cld
jl
imul
pushf
cmc
cli
ja
movsl
in
mov
fbld
shrb
sbb
xchg
imul
int3
icebp
movb
inc
jae
inc
lds
fnsave
cmp
in
imul
pusha
push
pause
jmp
rol
test
out
leave
mov
dec
sub
jge
scas
mov
sbb
push
xchg
in
or
repnz
xchg
sbb
jecxz
testb
sti
add
out
scas
imul
iret
aam
cmpsl
dec
cltd
test
sahf
mov
shrb
jmp
pop
out
stos
jecxz
repz
out
neg
mov
push
add
or
repz
icebp
enter
fadd
adc
adc
mov
lds
dec
lret
jne
fcomps
cmp
fnsave
pop
push
sti
cmc
insl
sbb
dec
stc
dec
imul
ror
sbb
and
or
jno
sbb
stc
mov
and
xor
imul
or
jne
loope
int3
icebp
inc
mov
loop
cmp
push
cld
das
lods
movsl
repz
mov
mov
aad
sbb
and
addr16
shl
loop
pop
mov
mov
jno
cs
mov
sub
dec
out
les
rcrl
pop
xlat
arpl
jle
jmp
aas
xorb
fstl
cmpsl
fisttpl
addr16
add
pop
xchg
inc
testb
int3
ret
mov
loop
shll
jecxz
pop
call
push
sub
lahf
pushf
and
pop
mov
inc
ljmp
or
roll
pop
xchg
andl
imul
xchg
daa
jne
and
sub
sbb
fdivrl
mov
rcl
scas
pop
punpcklbw
dec
add
inc
daa
mov
mov
int3
sbb
mov
or
repz
rorl
loop
lret
push
ror
xor
xchg
cmpsl
loopne
jne
add
stc
mov
add
les
ret
xchg
ret
ret
sahf
inc
push
inc
cs
bound
sbb
ret
dec
and
pop
mov
imul
fsub
leave
and
xor
jb
out
fistl
iret
loopne
jle
push
test
sti
pop
lcall
scas
ret
and
in
js
pop
and
mov
std
lret
dec
sbb
fucomi
mov
mov
rcl
add
mulb
icebp
mov
jne
lods
or
enter
mov
ret
popa
push
and
cmp
mov
inc
mov
and
std
dec
repnz
push
cmpl
and
test
dec
jo
and
hlt
movb
outsl
or
mov
fwait
aas
movsb
xor
addr16
jns,pn
divb
cmpsb
cld
and
mov
rcrl
mov
dec
mov
out
and
lret
jecxz
pop
or
sbb
jne
lds
int3
out
fdivrl
mov
andb
aas
jg
fcmovnu
mov
cmp
jmp
in
outsl
jg
insl
cmpsb
ret
repz
subl
dec
cmc
or
xor
adc
inc
inc
sbb
mov
xchg
xor
or
jmp
jmp
jns
cmp
in
push
and
lds
and
sbb
fwait
imul
sub
test
test
jno
orl
inc
cltd
mov
in
xchg
pop
addb
dec
stc
insl
addr16
out
movb
movsl
jecxz
dec
push
movsl
jb
inc
add
pop
ljmp
sbb
fwait
adc
bound
lcall
idiv
xlat
adc
cli
std
sbb
xor
jb
sti
jmp
shll
repz
jge
jecxz
fldl
test
roll
addr16
iret
mov
fcompl
cli
mov
and
loop
shl
je
sub
popa
fistps
cmpsb
mov
repz
fcmovnb
outsl
inc
loope
mov
rcll
mov
push
xor
les
push
sbb
iret
mov
dec
xchg
cli
push
mov
dec
ret
xchg
lea
xchg
fildl
add
gs
lret
dec
repz
sbb
push
xchg
push
mov
les
pop
lret
push
in
pop
in
sbb
jg
sbb
ss
push
stos
or
adc
mov
sbb
pop
lods
and
and
fwait
cld
mov
push
mov
les
mov
cmpsb
orl
dec
int
lea
pop
cs
adc
pop
xchg
push
mov
dec
outsl
push
push
push
inc
rorb
lcall
adc
call
dec
in
and
popa
pop
xchg
inc
arpl
cli
pop
sarl
ret
mov
test
cmp
pop
and
les
arpl
dec
xor
push
mov
repz
dec
loope
dec
and
out
leave
ficompl
fidivrl
hlt
ja
rorl
add
jno
outsl
addr16
jns
gs
xchg
lods
push
icebp
fisttps
xchg
jp
rol
mov
mov
subb
pop
std
jno
cmp
popf
stos
fsubl
lret
fdivr
dec
sahf
and
sub
aam
iret
sub
and
and
ret
fsub
pop
int3
jecxz
stc
mov
insl
sar
in
filds
push
in
mov
lcall
adc
not
push
mov
lcall
mov
fcmovb
mov
mov
out
pop
repnz
test
and
nop
jmp
jno
mov
aas
std
and
inc
arpl
or
jnp
inc
xlat
fwait
mov
aaa
mov
out
xorl
pop
mov
xlat
lret
or
adcb
push
xlat
out
sub
mov
je
mov
mov
inc
mov
repz
movsb
xchg
mov
fdivrs
pop
and
inc
add
xchg
loope
insb
cmp
xor
push
jg
sub
xor
mov
int3
or
inc
jmp
pop
fnstenv
pop
ljmp
out
xchg
sbb
cld
aad
xlat
outsl
dec
sahf
sbb
fiaddl
adc
out
mov
mov
imul
mov
xchg
dec
mov
pop
in
int
out
test
insl
push
xchg
fwait
popf
es
mov
sub
mov
cs
mov
ljmp
mov
xchg
pop
repz
and
data16
jo
dec
xor
imul
or
mov
out
xchg
repz
idivb
test
sbb
movsl
inc
scas
and
sbb
mov
mov
int
mov
xchg
stc
ret
out
pop
xchg
call
ds
jecxz
shll
pop
lods
lcall
cmpsw
addr16
sti
and
add
fstpt
mov
jg
mov
testl
rcll
mov
xchg
imul
jecxz
cwtl
xchg
mov
inc
ret
dec
xchg
jle
dec
in
jecxz
fnstenv
push
call
dec
sbb
test
std
pushfw
addr16
jl
xchg
mov
repz
popf
cld
add
movhps
in
ds
sub
sbb
rolb
xor
mov
mov
ret
xchg
cli
sub
arpl
pop
rcr
mov
jecxz
xchg
mov
cmp
sti
fdivl
shll
jno
xor
call
popa
gs
roll
jg
push
lcall
js
adc
jmp
dec
and
mov
xchg
call
add
lcall
out
lret
and
sub
popf
pop
cmp
xchg
pop
int
xchg
nop
mull
cld
neg
sti
dec
add
sti
pop
imul
sti
enter
cmp
push
and
mov
inc
andl
shll
movsl
lock
fdivrs
loopne
dec
xchg
and
fidivl
and
and
jmp
fsubrp
and
sbb
mov
sub
cs
repz
mov
testl
sbb
mov
sub
ret
mov
dec
mov
fldenv
xchg
sbb
stc
fsts
arpl
stos
xchg
pop
mov
jnp
andl
sbb
cmpsl
in
ret
push
mov
push
mov
inc
in
negl
or
jmp
ret
fsub
fwait
imul
inc
mov
test
xchg
mov
inc
mov
das
outsl
dec
push
mov
add
sub
dec
push
inc
cwtl
and
xor
call
push
inc
pop
cli
ds
mov
push
push
imul
adc
pop
sub
xchg
repz
add
nop
cli
mov
movsb
xchg
push
push
mov
insl
xor
fcoml
cs
push
mov
inc
adcl
addr16
imul
dec
fwait
xchg
inc
xor
mov
pop
pop
xchg
pop
push
test
or
mov
sbb
int3
dec
enter
adc
std
push
ret
push
push
xor
cmp
scas
mov
shll
notb
or
sbb
xor
in
sbb
jmp
icebp
mov
sbb
sub
repnz
pop
or
std
fwait
xor
cmp
scas
xchg
ljmp
pop
adc
subl
mov
fisttpl
lea
push
subl
jne
cli
pop
popf
insl
mov
xorl
cmp
rcrl
mov
jmp
in
push
push
jmp
xlat
dec
out
aaa
cld
arpl
cmp
ret
repz
imul
mov
mov
das
orb
inc
mov
hlt
bound
pop
xchg
ret
xchg
push
cmc
push
add
incb
push
cld
fistps
cli
repz
and
sbbb
xchg
out
adc
sbb
sbbb
sbbb
xchg
fdivrl
push
jmp
js
sub
dec
arpl
inc
xchg
jmp
sbb
sub
ret
mov
imul
mov
jno
mov
in
loope
fwait
fwait
lock
jae
orl
jb
xor
aam
jmp
call
sbb
jne
and
dec
sahf
xor
jae
inc
fimull
bound
jnp
cmpsl
das
lcall
pop
inc
mov
fidivrl
pop
das
add
lea
xor
call
scas
fnstcw
mov
addr16
in
dec
jmp
rcrb
push
ficoml
dec
in
fs
leave
leave
sbb
xchg
stos
pop
pop
aas
ds
jmp
in
cmc
push
dec
sbb
inc
lods
insl
inc
out
jp
mov
pop
repz
cmovnp
cmp
push
out
xor
cwtl
mov
lcall
sbb
pop
lahf
sub
icebp
ret
js
stos
mov
mov
mov
sub
stos
mov
ds
testb
addr16
pop
inc
stos
xchg
ret
lds
inc
out
aam
ljmp
cmp
leave
inc
sbb
fwait
stos
mov
or
sub
push
movl
fisubrl
jl
xor
in
leave
add
stos
xchg
inc
pop
pop
xor
xchg
jmp
xchg
lahf
popf
ret
cmpsb
mov
xor
or
xor
pop
test
and
sub
loopne
add
xor
pop
hlt
adc
out
cmpsl
sbb
adcl
out
cs
inc
add
jle
ret
dec
dec
lea
mov
cld
mov
fcmovb
addr16
aam
jecxz
mov
popf
pop
push
or
into
cld
fsubrs
in
xchg
sbb
int
pop
cmc
mov
cwtl
mov
cmp
inc
call
mov
out
xor
xchg
je
xchg
imul
add
test
test
or
daa
push
mov
pop
dec
jl
mov
jb
fs
aad
sahf
xor
addl
arpl
jp
movl
addr16
dec
pop
lods
mov
or
push
ljmp
inc
shll
cltd
repz
xor
sarl
mov
loope
dec
mov
int
mov
frstor
int
jmp
rolb
jmp
mov
xchg
mov
jmp
push
mov
ret
insb
mov
xor
or
outsb
test
pop
sbbl
mov
shll
fstps
dec
cs
loope
in
jmp
xor
ret
dec
add
push
fildl
jne
mov
adc
pop
add
pop
pop
cmp
sbb
push
ds
adc
sub
fldt
fdivrs
xor
and
test
add
lahf
mov
mov
jo
fldln2
ljmp
add
fucomip
mov
out
and
push
cld
iret
lcall
inc
lcall
fistpll
int
push
addr16
roll
fistpll
rolb
and
mov
mov
repnz
pop
addl
mov
js
fists
outsb
adc
bound
ljmp
jae
or
popf
add
jecxz
pop
ficoml
mov
out
sub
xchg
pop
and
cltd
lret
roll
sbb
loop
std
fcmovbe
ret
pop
aam
fstp
leave
inc
mov
shll
adc
inc
mov
push
mov
into
adc
jp
bnd
add
fisttpl
test
inc
inc
sub
ret
jnp
fcmovnbe
cmp
cmpsl
movsl
sbb
add
add
mov
lea
dec
out
aad
call
lods
jmp
loop
xlat
out
xor
pop
repz
inc
pusha
fisttpl
and
and
rorl
in
mov
fstps
xchg
sbb
cli
cltd
mov
outsl
stos
mov
xor
cli
dec
int3
fwait
test
inc
fs
lods
or
clc
xor
ljmp
pushl
dec
bound
jmp
stos
and
xor
pop
pop
sarl
and
loope
fs
push
jb
jecxz
push
sti
and
inc
sbb
test
sub
push
outsl
sti
test
nop
adc
enter
cmc
lcall
shlb
xchg
add
sub
mov
stc
stos
test
mov
push
enter
sub
je
add
adc
imul
inc
andl
imul
cmc
std
lcall
pop
cmpsl
ret
inc
shll
pop
ds
or
dec
push
or
xchg
stos
popa
sti
push
imul
mov
push
fdivs
jae
clc
inc
pop
push
xchg
scas
mov
lds
xlat
mov
cs
xlat
mov
ds
dec
call
fsubl
dec
cmc
push
push
lea
pop
dec
push
inc
push
xchg
popa
xor
xor
and
imul
sbb
jp
dec
loop
pop
sti
mov
insb
andl
ja
int3
movsl
adc
movl
dec
stos
mov
addr16
inc
addr16
cmpsl
les
dec
mov
out
sub
mov
jnp
arpl
int
add
fisubrs
shl
in
imul
adc
push
dec
popa
fbld
fs
out
inc
lcall
xchg
fsubs
andb
incb
out
ret
data16
xor
xchg
xor
adc
shlb
push
loop
lds
fdivr
addb
test
in
ret
dec
push
je
pop
in
jg
outsl
pop
mull
adc
lds
aad
stos
test
inc
push
nop
pop
loope
ss
mov
or
sub
dec
leave
dec
xchg
inc
stc
pop
xchg
aaa
mov
mov
sbb
and
insl
and
dec
dec
pop
mov
xchg
popa
or
es
stos
inc
ret
dec
daa
cmp
push
jnp
shl
or
and
xlat
leave
dec
xor
popa
test
and
adc
add
lods
leave
call
jmp
push
jecxz
mov
ret
icebp
pop
sti
sub
loope
addl
inc
test
ja
mov
dec
mov
iret
jnp
push
mov
ret
inc
sbb
loopne
stos
les
push
inc
lcall
xchg
cltd
pop
repz
jecxz
jg
mov
inc
sub
mov
dec
aad
popa
in
lods
mov
ret
push
dec
cmp
dec
ficoml
sbb
ljmp
add
jmp
out
pop
aad
iret
fimuls
outsl
sbb
sub
sub
imul
dec
mov
mov
aam
mov
addr16
fmuls
inc
loope
insb
fisttps
out
out
add
les
or
fldl
pop
sbb
adc
jmp
outsl
imul
loope
cmpsl
movsl
arpl
out
jne
add
mov
pop
mov
and
rol
xor
stos
pushf
fistpll
popa
dec
or
mov
jmp
and
jmp
fcmovnb
add
popa
orl
repnz
jbe
fcoml
or
push
xchg
popf
bnd
jle
push
fs
shll
mov
mov
xchg
mov
inc
xor
int3
mov
xor
mov
dec
pop
out
inc
fwait
xchg
xor
inc
mov
dec
or
lea
aas
dec
add
ret
addr16
fs
jne
dec
pop
lock
daa
sbb
sbb
in
adc
inc
into
sbb
xlat
fwait
pop
in
lcall
xchg
dec
jmp
mov
mull
pop
or
inc
mov
xor
xor
jo
xchg
adc
dec
fwait
dec
insb
jecxz
jecxz
jge
stos
jg
xchg
in
pop
mov
insl
jae
cmp
pop
dec
int3
and
jecxz
jnp
pop
jg
pop
repz
fnstenv
pushf
mov
push
inc
aaa
jg
xchg
pop
insl
data16
mov
inc
insl
dec
test
adc
stos
imul
sbb
leave
xor
out
jmp
mov
stos
push
cmp
arpl
jl
push
rep
pop
pop
loope
cmpsl
sbb
fcmovnbe
inc
xor
int3
mov
addr16
pop
jnp
jno
test
sub
jb
jmp
inc
sub
stc
adcl
xchg
pop
push
jne
xchg
add
lret
int
adc
add
xorps
inc
lea
ret
das
out
dec
cmp
fwait
divl
cli
push
pusha
inc
sub
out
popa
fcompl
pop
or
movsb
cwtl
mov
stc
cwtl
adcl
sti
pushf
push
ds
lea
inc
out
test
fisttpll
push
fsubl
imul
cmp
xor
xlat
xchg
adc
aad
repz
cmp
ja
sbb
add
data16
mov
sbb
sbb
mov
adc
lea
inc
imul
add
in
ss
lock
into
gs
adc
ret
xchg
jne
gs
inc
out
arpl
int
sbb
call
mov
ljmp
jno
mov
and
push
outsb
push
stos
inc
imul
jmp
pop
movsb
xlat
xchg
std
push
dec
push
repz
or
dec
push
nop
jno
push
jb
ljmp
sub
xchg
shlb
test
ljmp
repnz
loop
mov
outsb
add
pop
aam
pop
mull
mov
mov
pop
lahf
insl
ds
mov
pop
fidivl
mov
dec
push
mov
adcb
pop
add
les
shlb
adc
or
xchg
adc
fisubrs
js
dec
repz
cmpsw
rcl
jae
add
sub
adc
stos
in
sub
adc
decl
rclb
push
sub
or
inc
mov
inc
jae
inc
ret
sub
adc
or
push
pop
adc
pusha
or
lret
cli
cli
mov
pop
jae
out
imul
test
xchg
enter
adc
iret
cwtl
jmp
fistps
sti
fmul
gs
orb
rorl
ret
call
das
enter
xchg
cltd
inc
fnstenv
adc
push
insb
aad
xor
mov
hlt
xor
mov
sbb
pop
xchg
xor
dec
fwait
xchg
sub
inc
xor
ljmp
push
mov
mov
adc
and
jle
arpl
mov
aam
addr16
and
lea
mov
jmp
pop
pop
fs
xor
mov
pop
sbb
outsb
mov
pushf
stos
pop
out
mov
sbb
or
jae
test
aas
out
sti
fildl
lahf
rolb
xchg
cwtl
iret
out
loop,pn
das
cli
xchg
sbb
in
scas
leave
sbb
xchg
stc
les
push
push
adc
fcomps
pusha
mov
sub
jp
fsubrs
or
or
movsb
rorl
movsl
fnsave
jle
test
xchg
push
pop
out
jge
ficoms
popf
imul
xor
dec
fcomi
mov
popa
xor
dec
inc
in
fisubrl
lods
push
or
pop
mov
push
mov
int
sbb
pop
ret
push
or
les
sub
jno
xlat
push
pop
fildl
testb
lret
fnsave
movl
xlat
or
inc
pop
out
cmp
mov
roll
pop
adc
push
push
cltd
fstpt
ja
dec
or
dec
xor
lock
jmp
fstpl
sub
ret
jge
cli
scas
mov
add
lcall
lods
std
lcall
mov
out
or
aam
fs
pop
cmpsl
and
jmp
mov
fidivs
int
ljmp
push
mov
divb
or
add
es
pop
addl
lods
ja
test
pop
inc
nop
mov
cld
add
test
xor
cmp
push
addr16
fsubl
mov
xor
icebp
cwtl
jl
icebp
rolb
loop
mov
mov
out
ffree
add
jae
jle
aam
popa
jecxz
icebp
int
popa
imul
jecxz
fucomp
mov
mov
mov
mov
mov
push
jae
xchg
dec
ds
cs
lcall
pop
xor
inc
jne
or
pop
popa
and
hlt
cmp
push
push
rorl
dec
aad
dec
fstps
xor
fisubl
pop
pop
dec
mov
dec
call
jno
jmp
imul
nop
xor
dec
sarl
push
call
test
xor
stc
and
imul
negb
int3
loope
outsb
pop
test
pop
lret
fcom
insl
int
dec
dec
ret
and
hlt
mov
dec
addr16
pop
pusha
js
or
mov
ret
shl
mov
mov
imul
or
jle
mov
and
push
rcr
sbb
pop
insl
mov
mov
loope
pop
or
cmp
xchg
inc
inc
add
jg
faddl
orb
inc
dec
fwait
imul
lock
inc
xchg
dec
lret
xor
adc
sub
stos
insl
cli
stc
push
icebp
loopne
mov
sub
fdivrl
repnz
add
jge
adc
cld
sbb
sbb
sbb
test
sbb
jne
fbstp
lahf
sbb
xchg
cltd
jmp
sub
cmp
dec
push
inc
sub
or
fwait
scas
add
xlat
or
les
pop
rolb
aas
sbb
fisubrl
mov
jecxz
test
push
aam
xchg
jp
mov
xor
adc
fsubs
mov
xchg
mov
or
push
xor
dec
imul
push
addr16
imul
xchg
mov
movsl
cwtl
mov
jbe
popa
or
inc
inc
jno
faddl
jl
cltd
sahf
mov
pop
repz
push
xchg
fistpll
jnp
pop
adc
fsubrs
sub
jl
lds
mov
dec
out
cmc
and
dec
jbe
outsl
jp
fdivl
push
inc
rcll
xchg
gs
dec
cmpsl
popa
sar
jecxz
cli
mov
xor
jle
jecxz
push
xchg
inc
out
loopne
cli
mov
mov
mov
push
xchg
push
fsubrl
sbb
daa
mov
decb
inc
aam
mov
jno
push
ljmp
pop
inc
cmp
push
stc
sti
dec
xchg
outsl
add
sbb
cli
es
cmp
mov
push
or
pop
inc
fistps
push
xor
push
xor
out
adc
ret
or
cmovbe
sub
mov
inc
cltd
filds
inc
repz
out
addl
mov
add
cmpsl
into
popf
xchg
cmpsb
sub
pop
mov
call
mov
insb
mov
int
jp
mov
xlat
xor
pop
in
aam
cmp
lods
and
push
stos
and
insl
fbstp
lds
inc
call
pop
xchg
and
jmp
popf
in
xchg
or
frstor
and
mov
rcll
test
dec
in
inc
int
mov
jns
in
rol
test
jl
push
out
enter
xchg
pop
mov
push
loope
es
mov
mov
test
dec
cmp
or
addr16
out
imul
xchg
mov
jbe
xor
jg
sbb
sub
jecxz
jecxz
rorl
das
fidivrl
mov
sti
lea
lret
jae
mov
adc
subb
inc
ss
sub
in
sahf
pop
in
test
ret
cltd
into
mov
jp
fnstsw
enter
aas
fld
jl
pop
sub
add
imul
push
in
mov
imul
fistpll
mov
push
jno
or
stc
dec
sub
test
int
mov
mov
mov
dec
mov
cmp
pop
adc
arpl
sbb
cld
mov
int
sar
mov
aam
push
cmpsb
jl
inc
fs
repz
ja
cmpl
jge
xchg
cld
sbb
out
fstp
dec
add
repnz
xchg
mov
cmp
sahf
push
inc
dec
xlat
and
jecxz
xchg
xchg
jl
pop
rcr
push
push
sbb
fmull
sbb
push
lret
ret
mov
arpl
cmp
sarl
cltd
push
mov
cld
daa
adc
addb
outsb
fidivs
cs
aam
sub
and
inc
mov
push
mov
xchg
ljmp
std
fsubr
adc
rcr
lods
push
pop
shrl
dec
and
imul
dec
sbb
lahf
orl
sbb
sub
cld
mov
inc
test
jns
push
adc
mov
in
mov
stos
nop
ds
inc
enter
push
dec
xor
dec
in
popf
add
into
sbb
lds
xor
in
dec
addr16
aas
pop
mov
aam
ds
push
xorl
mov
mov
and
pop
rolb
xchg
jecxz
gs
push
dec
pop
mov
adc
icebp
icebp
daa
push
sub
insl
pushf
add
adcl
fwait
ret
sahf
xchg
and
andb
dec
xchg
fcoml
ret
sbb
sbb
dec
sahf
cmp
mov
shr
inc
pop
and
cmpsl
std
cmp
sbb
xchg
aas
dec
or
xchg
std
test
mov
jge
rcrl
pop
lret
popa
fidivl
push
and
or
and
cmp
fdiv
sbb
adc
rcrl
jo
lcall
push
jne
pusha
mov
dec
add
sbb
repz
cld
in
enter
jbe
inc
inc
repz
fsubl
mov
lock
jbe
sbb
xchg
jl
imul
sbb
inc
loop
into
cmc
jb
mov
pop
lds
jp
mov
fwait
jae
mov
int
xorb
xor
daa
or
jbe
gs
jmp
in
jb
jno
out
pop
imul
mov
mov
movsb
and
inc
pop
je
cwtl
push
mov
mov
icebp
test
mov
sbb
inc
cmpsl
mov
add
pop
sbb
in
outsb
inc
addr16
add
jl
aaa
adc
test
subb
jne
in
mov
in
loopne
fdivs
xchg
xchg
jl
xlat
mov
inc
stos
dec
inc
rcrl
popf
cld
dec
inc
fucomi
ret
xchg
dec
mov
popf
cld
inc
xlat
out
pop
pop
ja
cs
jecxz
fistl
mov
jp
mov
mov
ja
addr16
pop
cwtl
stos
and
das
cs
xchg
jmp
jne
push
adc
repz
jecxz
jns
js
xchg
popf
fmul
xor
fdivl
add
push
mov
call
push
sti
incb
xorb
or
ret
cmp
repnz
pop
pop
jno
js
jnp
insl
movl
cmpsl
cwtl
jae
dec
repz
jp
cld
pop
xor
fcoml
popa
imul
dec
cmc
imul
gs
out
bound
enter
mov
and
sbb
mov
repz
sub
cli
and
mov
cli
into
push
mov
ret
in
jns
dec
push
outsl
repz
or
shl
inc
sbb
xchg
mov
mov
test
lock
aad
jl
loopne
mov
sbb
enter
and
mov
minps
rcl
pop
imul
xchg
dec
inc
mov
ret
out
jge
popf
cmc
int3
fwait
outsl
xchg
fmul
jmpw
mov
popf
fldt
addr16
xchg
inc
pop
or
pop
or
jecxz
cmp
adc
out
fnstenv
pop
mov
lods
adc
jne
jp
test
xor
jge
cmpsl
std
mov
mov
mov
fcmovbe
inc
mov
inc
outsl
je
lret
in
sub
xorb
sub
cmp
push
push
in
add
inc
jnp
int3
fcmovnb
fcmovu
imul
sbb
inc
and
stos
xchg
jmp
pop
adc
dec
cmpsl
stos
icebp
mov
xchg
and
inc
movsb
add
aam
rclb
hlt
add
jbe
test
ds
or
xchg
push
int
and
mov
inc
insb
xchg
jmp
mov
pop
sbb
mov
insl
add
into
mov
test
test
dec
xor
sbb
jmp
das
inc
addr16
jno
test
rcrl
inc
jge
out
out
repz
out
dec
cmp
std
dec
stos
out
dec
mov
in
mov
sarl
push
mov
mov
jno
push
adc
je
fincstp
and
xorl
testl
xchg
popa
sbb
jmp
jge
push
sub
bound
or
xor
repnz
mov
xchg
mov
and
pop
push
faddl
sbb
xchg
mov
mov
xlat
pop
pop
ret
add
mov
imul
cs
jmp
cmp
loope
mov
inc
int
addr16
call
cmp
add
stos
jo
jmp
jmp
aad
mov
and
imul
and
push
push
mov
sarb
pop
lock
push
imul
jo
mov
nop
xchg
popa
or
cmp
inc
jp
dec
or
imul
fldt
daa
cwtl
enter
pop
and
inc
xchg
outsl
pop
xchg
lds
mov
lret
out
lea
mov
adc
push
jp
fsubs
and
lds
aam
xor
jg
jne
outsb
fsubl
xor
lea
je
mov
clc
or
sub
sub
cs
push
incb
push
stos
roll
outsl
push
jne
dec
in
idivl
and
inc
je
test
stos
cmp
ret
enter
xor
cs
jmp
inc
xor
imul
ret
fistps
xchg
cmp
jae
in
sahf
mov
js
pop
xchg
fcoms
testb
or
push
bound
push
push
and
jno
lea
xchg
pop
dec
sub
sbb
pop
in
outsl
ss
adc
shlb
insl
or
sbb
les
loope
pusha
ss
cltd
lods
fcomi
fbld
fbstp
insl
negl
adc
leave
pop
pop
scas
dec
dec
enter
daa
scas
xchg
dec
fistl
out
mov
sbb
lods
aaa
xchg
pop
faddp
insb
push
andl
pushf
xchg
sbb
push
cwtl
test
push
mov
out
sub
test
pop
sub
sub
inc
shll
cmpsl
mov
inc
aam
test
dec
pop
je
hlt
pop
add
xchg
jge
xor
pop
sbb
mov
test
notb
repnz
out
rcrl
add
jae
jns
sub
and
fs
pop
rcl
inc
faddl
push
scas
xor
xchg
sahf
das
xlat
imul
xchg
xor
std
mov
addr16
ss
xchg
inc
in
mov
add
jns
xor
insl
push
inc
test
add
dec
add
push
and
pop
and
mov
lret
dec
aad
stc
loopne
jae
imul
sbb
ja
jmp
pop
adc
idivb
cltd
xchg
xor
in
xlat
sbb
lods
mov
ljmp
mov
sbb
pop
out
push
test
jnp
pop
sub
sti
int
fdiv
adc
dec
scas
in
jnp
xor
or
es
push
stos
or
jnp
ret
push
mov
and
minps
and
push
jnp
fdivrl
call
stos
jp
jmp
xchg
lea
das
out
stos
and
scas
dec
xchg
jnp
call
jmp
xchg
mov
ficomps
sbb
daa
in
add
sbb
les
xlat
and
dec
lcall
into
test
add
aaa
test
mov
les
pop
fstpl
aas
std
imul
arpl
ret
mov
aam
mov
xorl
and
inc
repz
ds
call
sub
lods
imul
dec
jns
cmpsb
lds
xchg
inc
push
ljmp
mov
dec
pop
dec
pop
jecxz
test
loopne
dec
int
scas
xchg
shr
repnz
inc
xor
add
or
adc
or
jl
outsb
in
arpl
imul
pop
insl
cmp
cmp
fs
push
imul
mov
adc
mov
testb
je
nop
fsubs
and
xchg
add
cmp
fwait
daa
rorl
ficoms
mov
push
outsb
mov
imul
les
int
cmp
ret
xor
mov
lock
mov
sub
inc
xor
adcb
adc
les
and
jb
cmp
rcll
adcl
out
lods
sti
mov
push
fidivl
ljmp
push
fisubl
pop
inc
lods
fmul
jl
dec
in
outsb
mov
filds
ret
mov
enter
sub
int
in
ret
fwait
leave
sub
and
lea
adc
push
jne
xchg
fadds
daa
push
addr16
push
jne
les
sub
mov
test
push
inc
movsb
in
push
test
int
mov
out
sbb
lcall
pop
inc
arpl
and
mov
xor
cltd
mov
mov
aas
in
cmp
jmp
inc
rolb
jmp
fsubs
jbe
mov
xchg
popa
das
imul
mov
aas
loope
mov
gs
push
xchg
rolb
das
test
ret
shlb
inc
scas
cmpsb
jae
sahf
cmp
push
dec
mov
jmp
popa
jmp
das
mov
mov
mov
fs
aaa
sub
cmp
adc
sub
mov
sbb
push
mov
mov
cltd
mov
inc
cltd
mov
inc
cmpsl
faddl
push
fisttpl
data16
pop
mov
and
cmpsb
xchg
loope
xchg
fwait
les
xchg
out
dec
aas
dec
out
xor
push
cmp
enter
push
addb
fnsetpm(287
jo
mov
adc
sbb
insb
inc
lahf
jmp
mov
cmp
jne
les
stos
xchg
cmp
pop
pop
jnp
mov
test
std
dec
dec
sub
sub
jnp
mov
sub
cmc
std
loop
das
mov
sub
out
sahf
rcll
mov
and
jne
xor
in
fwait
gs
jne
mov
flds
jno
daa
jmp
xor
stos
js
xlat
jno
sub
dec
loope
sahf
add
ljmp
jmp
mov
jne
inc
iret
lods
xchg
adc
mov
ret
inc
add
dec
aad
lds
jp
mov
dec
clc
test
fnsave
fucomip
ljmp
aam
int
and
add
int
mov
adc
cmp
pop
sbbw
aam
sbb
add
and
scas
sahf
xchg
jecxz
imul
mov
push
shl
cmc
in
mov
loope
cmpsb
xchg
cmpsb
inc
pusha
or
sub
test
inc
stc
sbb
adc
dec
int3
adc
xchg
mov
mov
out
mov
cmp
js
pop
jmp
mov
pop
bound
jno
xor
lock
push
mov
push
out
adc
leave
jmp
fcmovnb
dec
xor
mov
es
add
movsb
mov
and
fldenv
fcmovnbe
and
popa
dec
in
out
pop
fistpll
and
enter
sbbl
fisubrl
ror
xor
mov
faddl
sbb
repnz
pusha
loop
fdiv
xor
sahf
mov
sahf
push
dec
jbe
xor
dec
xchg
jge
push
push
popf
mov
pop
in
fcompl
jae
sbb
out
repz
cld
mov
repz
add
dec
inc
jmp
jmp
hlt
fnsave
lds
out
andl
xchg
push
or
push
sub
push
and
pushf
call
cwtl
xchg
push
loopne
iret
ret
mov
loopne
out
push
sbb
ret
and
add
loope
jle
dec
nop
xor
mov
adc
mov
inc
dec
and
fnstcw
repz
xchg
dec
icebp
mov
pop
pusha
hlt
outsl
pop
xorb
jge
cli
rcll
movsl
add
nop
pop
gs
xorl
sub
fwait
xchg
int
andl
fstps
out
fldt
scas
orb
xchg
fdivrl
inc
stos
mov
push
cmp
xchg
dec
and
sub
push
pop
fsubl
add
mov
mov
addr16
jecxz
xchg
stc
fnstsw
leave
and
test
mov
lock
jmp
pop
cmpsl
xchg
nop
ret
cs
cmp
sti
call
sti
inc
es
sbb
jno
mov
jne
mov
sbb
fisttps
and
nop
xchg
lds
cmc
mov
insl
jbe
stos
sti
xchg
sbb
and
fdivrl
push
outsl
pop
inc
xlat
popa
les
or
cmp
inc
test
pushf
cmp
jmp
call
rorb
inc
test
mov
ljmp
nop
mov
sbb
pop
pop
pop
push
frstor
mov
fs
cltd
pop
imul
imul
fcompl
jnp
cmp
mov
dec
test
push
lcall
sbb
jmp
pop
mov
xor
movsb
push
daa
orl
mov
hlt
pop
imul
sbb
xchg
xor
aam
mov
hlt
xchg
sar
inc
roll
pop
call
sbb
mov
aas
dec
add
scas
jnp
mov
or
fdivrs
xchg
ss
sub
xchg
outsb
mov
ljmp
xchg
roll
std
jmp
dec
popa
push
sub
ret
or
push
subb
mov
mov
add
aaa
xor
jae
popa
mov
imul
lret
pop
add
sub
cli
xchg
mov
ljmp
sbb
jmp
enter
cwtl
mov
jle
in
data16
mov
ja
inc
fcomps
push
ret
dec
sbb
data16
and
mov
ds
mov
xchg
cmp
inc
ret
xor
test
add
jle
push
xchg
or
pop
mov
fstpl
fs
mov
or
mov
jnp
pusha
int
cltd
mov
inc
imul
jge
fnsave
iret
jb
mov
jecxz
sbb
pop
dec
add
test
cmp
xor
add
mov
sub
sbb
push
dec
sbb
rcrl
in
sub
pusha
xlat
int
dec
sbb
in
adcl
imul
cs
imul
sahf
mov
pop
cmp
addr16
mov
push
xchg
incl
pop
hlt
outsl
xor
and
addl
ja
jbe
cmp
enter
mov
popa
lods
insb
stos
push
sbb
and
dec
mov
pop
jae
arpl
loopne
xor
sbb
inc
aam
loopne
addr16
fsts
mov
xchg
out
fs
inc
xor
mov
lods
xchg
rclb
mov
sbb
std
pop
xor
ss
mov
push
popf
sahf
xor
sub
sbb
imul
cwtl
jecxz
or
in
push
sbb
mov
xor
aam
sub
mov
pop
mov
int
dec
mov
push
out
xor
stos
xor
jb
pop
lea
sub
mov
les
mov
xor
sub
jp
test
inc
dec
xchg
mov
lock
ret
sbb
jno
adc
cmp
lock
movsl
pop
push
dec
mov
mov
mov
dec
in
xor
movsb
pop
int
xor
inc
pushf
movsb
xor
push
fst
pop
xor
mov
push
dec
andl
ss
inc
fchs
cmp
add
add
add
cmp
sti
jecxz
xor
imul
mov
aad
iret
test
ficoml
add
test
and
dec
push
pop
std
mov
sti
std
cmp
inc
xor
cmc
ficompl
sub
stc
push
aas
ja
lock
shrb
xrelease
cmp
xor
ds
dec
divl
fdivl
int
incl
and
out
dec
data16
push
jg
rcrl
rcrb
jno
xchg
dec
cs
jle
mov
dec
outsb
sub
addl
inc
hlt
stos
mov
fcmovnbe
ret
xor
aad
pop
and
add
dec
sbb
test
jnp
loop
jnp
mov
add
dec
jbe
pop
sub
adc
outsb
xor
and
xchg
dec
sbb
push
lret
and
stos
jae
mov
arpl
in
decb
lret
pusha
dec
testl
sub
loope
aaa
jecxz
fistpl
xor
dec
stc
cmp
out
lods
xchg
jmp
cmp
or
or
or
push
mov
fldenv
dec
cmpsb
cmp
pop
in
fsubr
and
dec
ss
jmp
jge
popa
sbb
imul
imul
repnz
mov
mull
fisttpll
push
add
or
inc
aas
dec
ljmp
cmp
cmpsl
mov
fstps
mov
inc
mov
push
ret
loopne
test
into
mov
mov
ret
mov
push
ss
repnz
mov
xchg
xor
dec
add
je
pop
sbb
dec
jns
int
jecxz
sbb
mov
xchg
mov
mov
xchg
es
iret
jmp
inc
out
outsb
mov
push
test
push
into
insl
stos
ss
add
pop
pop
fstp
lock
insl
xchg
xchg
jnp
dec
ljmp
mov
or
add
sub
rcll
or
aas
in
in
es
in
mov
std
lret
in
cmp
setb
fisubrs
or
sub
xor
pop
adc
int3
sbb
cmp
aas
arpl
imul
pop
movsl
xchg
push
sbb
test
rol
scas
mov
test
dec
xchg
cmp
add
ret
dec
fstl
jecxz
gs
gs
mov
int
push
pop
movsl
sbb
mov
sub
ret
inc
filds
arpl
roll
sbb
jne
divl
lcall
jnp
dec
jno
test
sbb
xchg
jecxz
mov
insl
xor
inc
sbb
push
and
jp
xchg
scas
sub
mov
dec
push
testl
repz
imul
sub
je
inc
lcall
xchg
addr16
jnp
into
dec
pop
mov
xchg
or
int3
jo
xchg
sbb
add
jae
icebp
fsub
mov
inc
loopne
aad
and
in
and
push
cmpsb
push
div
push
dec
mov
rcr
int3
xchg
cwtl
or
mov
mov
in
test
aam
push
out
ret
adc
xor
test
icebp
and
in
or
loop
int
sub
test
rorb
jmp
or
hlt
rol
shl
mov
les
cmp
jmp
cmp
mov
rol
push
dec
outsl
stos
pop
adc
movsb
out
test
rorl
lcall
xor
sbb
aaa
mov
adc
mov
cmpsl
test
pop
cmp
add
cli
dec
fdivrs
xor
xchg
testl
int
mov
xor
add
jg
sub
in
add
ret
ret
clc
lea
sub
or
fwait
loopne
sbb
cwtl
and
xor
and
leave
insl
pop
xchg
add
sbb
scas
in
xchg
cs
or
xchg
push
add
lret
imul
push
sbb
movsl
push
sbbb
cmpl
sbb
jmp
insl
adc
repz
sbb
dec
mov
int
mov
or
dec
xchg
stos
ficoml
push
ljmp
xchg
repz
jo
aam
cwtl
or
out
lahf
stos
dec
out
roll
ret
test
inc
dec
pop
pop
shl
std
mov
inc
sbb
mov
outsl
mov
inc
mov
and
popa
rcl
std
mov
mov
ficoml
jmp
inc
cmp
jbe
lds
popf
pop
hlt
call
xor
jle
mov
xchg
or
cmp
popf
insl
rcr
shll
lret
imulb
sub
rcrl
mov
stc
or
scas
leave
test
mov
or
mov
mov
mov
sbb
sub
notl
out
mov
cld
mov
lret
rorl
in
daa
fsub
and
aaa
into
adc
dec
outsl
fsubr
push
mov
or
pop
sbb
jl
jl
xlat
ret
xchg
data16
mov
sbb
xchg
mov
test
jbe
pop
leave
incl
add
ljmp
xchg
or
or
mov
jmp
xor
pop
addr16
cmpsb
push
test
and
sbb
imul
pop
jl
mov
xchg
sub
xlat
mov
mov
and
dec
dec
mov
pushf
xchg
sti
js
subl
or
mov
out
es
lret
jbe
xor
mov
stc
xchg
cmp
movsl
data16
xchg
add
arpl
outsl
mov
outsb
test
shlb
repz
nop
lds
std
es
in
fisttpll
inc
sbb
dec
imul
lret
jae
mov
in
jb
dec
jno
ret
lcall
inc
out
lock
lcall
icebp
push
rolb
sub
cmc
mov
inc
push
cs
mov
in
sub
lock
and
sarl
inc
imul
fwait
pop
dec
lcall
inc
mov
mov
call
xor
pop
adc
xchg
pop
outsl
adc
or
add
xor
sub
insl
sbb
xor
xchg
mov
js
or
pop
push
cmc
subl
xor
mov
cmp
adc
lret
popf
mov
popf
lds
sub
in
push
adc
sti
mov
clc
adc
iret
jbe
int
inc
dec
ret
or
and
loopne
insb
xor
iret
pop
push
sub
mov
imulb
inc
xchg
pop
jmp
dec
pushf
gs
rcl
sbb
in
pop
cmp
sar
outsl
add
pop
push
insl
xchg
xlat
fcoml
popa
pop
xor
iret
sub
inc
cs
jg
shlb
addr16
push
dec
dec
sbb
hlt
push
sbb
inc
add
jno
das
inc
jge
inc
fwait
dec
or
fildl
adcl
andl
repz
adc
sub
incl
jmp
popa
mov
sbb
imul
out
int3
fstpt
ficompl
arpl
cmpsl
les
pop
sbb
sar
les
jge
arpl
mov
stos
mov
jl
rcl
xor
outsl
inc
jecxz
mov
inc
jnp
arpl
scas
and
dec
pop
test
xchg
jnp
insl
inc
jmp
in
jne
xchg
daa
arpl
jae
jmp
inc
xchg
push
sub
and
in
stc
dec
enter
sbb
loope
sub
dec
mov
mov
jo
sub
addr16
cld
pop
leave
scas
sbb
inc
fisttpl
push
fs
push
sbb
add
in
jecxz
rdmsr
movl
insb
popf
fdivrs
es
lret
pop
hlt
out
ljmp
push
cwtl
daa
insb
stos
jno
cmp
leave
int3
and
adc
and
or
dec
loope
adc
push
dec
xchg
insl
fisubs
xchg
ret
sub
xchg
inc
jmp
repz
push
add
sahf
dec
imul
in
xor
sbb
arpl
aas
sub
popa
aam
sbb
rcr
or
mov
mov
sub
pushf
push
xor
sub
cmp
add
frstor
cmp
sbb
or
inc
cltd
outsl
xchg
or
js
or
mov
imul
sarl
inc
cmp
out
mov
call
aas
jnp
jbe
imul
fadd
shrl
xchg
es
mov
pop
outsb
pop
mulb
mov
shrl
pushf
lds
xchg
cmp
sbb
fdivrl
pop
xlat
sbb
xor
pop
movsl
adc
or
xchg
cs
xor
test
cmp
adc
sbb
inc
jmp
adc
pop
adc
push
xor
xor
sbb
sbb
sub
mov
lret
cli
jo
xchg
ss
cmp
loop
mov
or
or
jmp
scas
mov
pop
xor
cmpsl
ds
das
mov
enter
jb
xchg
sbb
shlb
repz
test
test
fsubrs
jp
mov
sti
sub
iret
xchg
jmp
sbb
lods
mov
sarl
cmp
stos
cmp
push
stos
or
push
mov
cmp
icebp
mov
add
sbb
in
pop
adc
cmp
icebp
mov
jp
popf
insb
and
and
cs
iret
push
imul
ja
jp
jmp
xor
repz
push
imul
int
mov
out
jne
fsub
xor
inc
popa
notl
out
inc
push
subb
sbb
mov
cmp
add
incb
xlat
lock
xor
xor
jmp
test
int
out
cmpsb
test
aas
aam
ret
lahf
das
jecxz
xorl
jl
inc
int
pop
imul
js
fmul
imul
pop
dec
xchg
sbb
or
and
and
cmpsb
out
xor
inc
repnz
jne
jl
out
and
mov
inc
testl
mov
mov
jno
fwait
dec
xbegin
adc
push
sub
pop
test
das
flds
inc
out
add
cltd
leave
and
mov
cmp
mov
adc
clc
lcall
insl
or
fcos
fwait
daa
adc
jle
outsl
jnp
scas
jle
lret
jnp
icebp
mov
pop
jmp
out
or
push
mov
idiv
cli
pop
insl
imul
sarl
mov
rorb
idivb
pop
or
cs
in
mov
enter
cmp
data16
fcmovne
and
fmulp
pop
pop
add
jns
arpl
call
ljmp
jecxz
shr
cmc
xor
arpl
sbb
es
mov
lret
push
fdivs
or
gs
sarl
shl
cltd
inc
fdivr
leave
pop
int
iret
lahf
clc
jecxz
pop
icebp
cmpsl
loope
ljmp
sti
repz
and
das
jecxz
and
cmp
push
aam
or
sbb
xlat
cld
shrl
cs
out
cld
push
jle
enter
and
dec
sarl
cmp
adc
sbb
or
int3
sbb
inc
mov
fsubrl
roll
js
fstps
sti
cmp
out
jmp
fsub
or
dec
repz
jnp
loope
mov
jle
inc
repz
mov
mov
jb
stos
push
ja
or
xchg
or
out
sub
jmp
inc
sbb
icebp
std
int
addb
pusha
jb
dec
enter
and
dec
dec
insl
test
or
xor
sbb
mov
or
aam
mov
sbb
pop
lea
xor
shll
out
fdivs
adc
ds
fsubrl
out
pop
scas
and
xchg
into
mov
scas
aam
fwait
jmp
out
sub
jecxz
and
aad
cs
movsb
vpsllw
fst
aaa
int
sub
pop
pop
xlat
add
inc
jge
cld
adc
addr16
jp
andb
shlb
es
fmull
xchg
pop
ljmp
leave
inc
std
leave
rcll
mov
dec
cmpsl
jecxz
imul
push
cs
inc
fcmove
shl
aam
outsl
pop
fildll
lcall
jg
dec
adc
adcb
add
sarb
dec
aas
push
rorl
dec
mov
les
sti
fdivrs
mov
cltd
fwait
jb
sbb
loop
cld
and
leave
ret
dec
mov
movb
push
xlat
fwait
sub
ds
push
cmpsb
out
fisttpl
jnp
pusha
pop
outsb
inc
js
pop
cmp
orl
fwait
jae
vandpd
adc
fidivl
out
dec
mov
cmpsl
add
jnp
push
insl
and
movl
iret
out
jecxz
jbe
ret
sti
test
push
loope
sbb
xchg
mov
push
xor
cmp
aam
shlb
fcomps
xor
subl
mov
je
dec
popf
jb
push
mov
sbb
cs
sub
pop
lret
push
adc
jne
push
and
sub
iret
std
ret
popf
inc
sbb
addl
pop
in
jb
shrl
loop
jl
cmp
dec
lea
scas
add
imul
movsl
cmp
testb
pop
push
dec
or
mov
xchg
sub
cmp
add
add
add
fstl
xor
stc
and
sbb
xchg
push
lret
out
jge
test
insl
xlat
inc
xor
lds
rcl
jmp
dec
xor
lds
rcrl
jmp
icebp
mov
cli
xchg
mov
sbb
int
xor
sti
mov
cmp
pushf
out
jmp
fadd
pushf
dec
cmpsl
dec
lahf
lahf
inc
cmp
sub
xor
and
jmp
mov
dec
ror
push
bound
mov
outsl
jne
sti
or
push
mov
int3
jne
push
dec
jmp
pop
jl
out
pop
aaa
mov
insl
cmp
add
loop
xor
sbb
loopne
fsubl
ljmp
repnz
mov
dec
rcll
ret
mov
mov
jmp
jg
fcomps
and
js
aam
stc
aaa
dec
push
xor
addl
sbb
xchg
sti
mov
aam
fstps
xor
push
jne
xor
int3
push
sbb
pop
outsl
imul
repz
sbb
cld
xor
sbb
in
fwait
and
inc
ljmp
or
fbstp
push
fistl
mov
push
mov
sbb
mov
rolb
xchg
xorl
cmpsl
xor
jmp
fs
jge
mov
mov
push
jecxz
mov
xor
jge
fadds
insl
les
xor
inc
and
out
aas
pop
fcmovb
das
mov
jge
imul
dec
pushf
sub
mov
aas
ja
jp
sbb
and
aad
jne
push
xor
adc
xor
mov
jmp
jmp
adc
jg
jne
lds
mov
in
sub
js
push
xor
jmp
xchg
push
imul
enter
dec
or
pop
rorl
repz
ret
pusha
in
std
movsl
sub
fldt
div
les
decl
outsl
es
mov
dec
push
push
xlat
fs
push
subl
cmp
call
mov
test
add
mov
mov
lahf
and
dec
sti
or
mov
mov
ja
out
mov
cmp
pop
outsl
cmp
or
inc
sbb
pop
mov
push
jae
cmpsl
sbb
mov
lea
rolb
cmp
ljmp
xchg
sbb
stc
sbb
fildl
pusha
adcb
cmc
rolb
shll
mov
mov
fwait
inc
lds
pop
fisttpll
jb
xor
push
test
loop
mov
mov
fcoms
popf
sub
ss
stc
aaa
xlat
push
sbb
mov
mov
inc
aas
or
xor
jmp
ret
xor
mov
test
int
sbb
addr16
pavgw
cld
fstps
push
push
ret
inc
into
jno
jnp
lods
sbb
push
cltd
andl
bound
mov
shr
or
addr16
out
sub
idivb
sbb
cmpsb
idiv
sti
sbb
imul
and
sbb
jne
push
iret
outsb
and
mov
pop
imul
stos
sbb
mov
push
cmp
adc
fsubrl
ret
jge
fsub
add
jbe
mov
cmp
push
and
cvtdq2ps
std
outsl
xchg
jmp
push
xorl
enter
sbb
xchg
rcrb
cmc
fistpll
in
or
dec
pop
mov
outsl
in
inc
loopne,pt
into
mov
pop
xor
ret
sbb
pop
pop
test
shll
insl
mov
stc
jo
push
icebp
fiaddl
jp
pushf
jle
lods
inc
ljmp
pop
jmp
aaa
stos
mov
sbb
lds
int3
add
lds
push
shl
sbb
xor
hlt
test
push
cmp
cs
int3
outsl
sub
or
inc
mov
rcrl
clc
cmp
xor
rcr
hlt
fucomp
mov
shl
out
fisttps
insb
cmp
mov
jmp
push
fsubl
inc
test
pop
movsb
test
pushf
aam
mov
enter
sti
shrb
or
outsl
add
pop
inc
pop
or
testl
test
push
or
fwait
inc
add
adc
cmp
dec
lds
xor
mov
cmpsl
cltd
push
repz
xchg
pop
jmp
sub
inc
roll
xor
test
rcrb
lcall
xchg
push
pop
leave
add
lods
or
frstpm(287
jns
pop
js
xchg
adc
xor
and
mov
out
mov
and
mov
inc
mov
xor
lret
aas
sbb
bnd
rorb
and
fcoml
outsl
xorl
fucomp
xchg
ret
mov
and
dec
pop
out
or
sbb
and
and
xchg
addr16
jo
mov
rcl
ret
or
cmpb
inc
xchg
inc
fisttpl
xlat
pop
repnz
enter
fidivrs
inc
or
pop
inc
mov
inc
aas
push
inc
dec
loopne
daa
imul
aad
jno
add
testb
jo
flds
jns
shrl
xor
jle
jg
xchg
test
in
pop
enter
mov
int3
adc
push
sbbl
push
mov
jg
fwait
mov
sbb
sub
xor
std
xor
cwtl
dec
inc
xchg
popf
push
mov
xchg
stc
daa
rorl
cltd
xbegin
adcb
push
shr
movsb
jl
jecxz
cmp
fs
lea
in
repz
jecxz
mov
ret
xchg
shll
sub
ljmp
jle
push
adc
ljmp
lea
dec
hlt
sub
sbb
cmp
loope
xor
movsb
shl
dec
adc
stc
popf
das
xlat
call
dec
mull
mov
jg
aad
mov
inc
int
inc
mov
push
std
outsl
out
aam
leave
ljmp
xor
popf
aam
jmp
and
mov
jnp
pushf
cmp
or
inc
adc
mov
xchg
and
mov
jp
sbb
mov
mov
loope
pop
in
int
aam
push
into
lea
shrl
roll
jno
hlt
out
and
dec
sbb
inc
cmpsl
out
jmp
out
or
imull
mov
enter
cli
out
stc
cmp
enter
cmp
adc
jmp
in
int
sbb
cltd
outsl
mov
mov
pop
lods
roll
sbb
test
or
dec
mov
gs
xchg
sti
jns
insb
xchg
movsl
or
xor
and
ror
push
vpsubusb
mov
sti
xlat
dec
faddl
sub
push
fisttpl
inc
nop
mov
push
cmp
pop
adc
jp
cltd
rol
sbb
inc
rcr
inc
mov
insb
insl
ret
sub
or
or
push
lret
or
xor
insl
mov
call
xchg
or
jge
jg
scas
push
idivb
pop
mov
mov
push
sbb
pop
jecxz
sbb
dec
sub
cmp
pushw
mov
test
jmp
pop
sahf
xchg
mov
fstpl
lds
out
mov
test
sub
inc
mov
push
fstpl
pop
mov
pop
in
xor
push
and
repnz
inc
ja
or
xor
mov
jno
cli
sbb
xor
leave
pop
adc
bound
inc
sbb
sbb
lcall
dec
sahf
insl
pop
mov
sahf
push
fcmovnu
mov
pop
mov
mov
xorl
int3
jne
mov
imul
in
add
mov
jg
inc
dec
rcrl
ds
shr
iret
pop
mov
inc
push
into
lret
addr16
lret
or
xor
sbb
mov
or
push
or
push
pop
fcomps
pop
sbb
xlat
and
scas
jne
dec
cli
mov
gs
jg
jge
lds
push
push
mov
pop
xchg
xor
fimull
mov
xchg
sbb
in
adc
push
xchg
push
test
pop
mov
pmulhuw
pop
jb
test
cmp
inc
sti
xor
ljmp
mov
nop
in
popf
sbb
fwait
dec
dec
enter
shll
jmp
addr16
mov
fisttpl
movsl
idiv
jne
adc
cltd
addr16
je
jbe
repz
into
jmp
int
movsl
std
imul
xchg
push
pop
es
inc
in
pop
addl
push
mov
out
int
leave
sub
xor
jge
mov
lock
aas
shrl
loop
xor
adc
sbb
in
add
int
aam
jo
fcom
sbb
jp
dec
jne
xchg
stos
mov
rorl
and
sahf
stos
mov
bound
xlat
sbb
mov
jmp
jmp
mov
popf
sbb
push
add
xor
mov
sbb
shrl
into
jns
movsb
fstp
sbb
pop
or
jge
push
jmp
push
enter
test
ss
cltd
and
jmp
mov
loopne
jge
cmovbe
dec
add
and
or
mov
ffreep
sbb
int3
xor
lds
xchg
out
pop
adc
fwait
pop
mov
in
aam
out
jle
loop
mov
cmp
jbe
pop
push
jb
add
std
pop
out
jmp
adc
push
out
aas
test
jb
xchg
xlat
fucomp
ret
aam
out
stos
push
pop
sbb
mov
insl
in
orb
dec
add
out
dec
dec
lea
aas
ljmp
out
test
sahf
andl
sahf
xchg
mov
sub
and
ret
add
inc
mov
cmp
add
push
ljmp
jb
test
adc
orl
shrl
stos
mov
cmp
mov
xchg
shrl
movsl
mov
aas
adc
hlt
pop
dec
xor
aam
arpl
imul
xor
fdivr
sub
mov
popa
lret
hlt
sub
xchg
stc
lret
lcall
mov
pop
bound
mov
inc
loop
loopne
leave
mov
and
fsubrs
pop
in
fs
or
pop
xor
cli
ret
mov
push
cmc
in
mov
mov
sti
jmp
adc
sbbl
outsl
mov
gs
jg
jmp
mov
fsub
imul
adc
dec
xchg
xlat
sbb
ja
cli
dec
pop
inc
sbb
ret
xchg
xchg
int
cwtl
sti
imul
adc
movb
pop
aas
jb
loope
jo
xor
fldt
xor
jge
push
testl
or
push
dec
push
imul
fildl
add
sbb
dec
push
repnz
fdivrl
sti
add
sbb
mov
push
cmpl
jp
sub
xchg
aaa
out
sbb
gs
fstpl
out
fidivs
push
les
fwait
or
mov
xlat
inc
sub
mov
push
sbb
inc
mov
mov
or
loopne
xchg
es
mov
add
sbb
cmpsb
sbb
cmp
jg
cmp
sbb
mov
cmc
mov
push
roll
movsb
das
mov
push
mov
int3
cmp
std
shll
les
out
jge
mov
xlat
ja
dec
xchg
pop
movl
sbb
rcrl
sti
leave
ds
push
push
push
xchg
sub
pop
rol
mov
and
jecxz
jbe
stc
mov
aam
imul
xor
jno
inc
lahf
xor
push
xchg
sti
push
mov
and
xchg
test
mov
lds
xorl
sbb
and
or
pop
das
push
or
fwait
sbb
fnstsw
in
lret
cmp
fdivrp
dec
loope
ret
inc
mov
loop
out
xor
rcl
in
mov
sbb
adc
dec
mov
push
mov
ds
out
mov
leave
xlat
insl
fildl
dec
iret
les
pop
dec
add
xchg
jge
sbb
jmp
xor
out
and
hlt
cmpsb
cmp
mov
add
mov
aaa
jmp
cmp
cmc
in
sbb
jnp
loope
sub
bound
or
xor
aam
shl
or
pop
js
cli
mov
cwtl
shlb
ret
ja
cli
xchg
xor
je
add
cmp
jl
and
jnp
shll
push
cli
popa
lahf
and
aad
mov
jecxz
xchg
cmpsb
dec
mov
push
jae
loope
loope
jne
jnp
jle
rcr
popa
inc
leave
sub
pop
fcompl
imul
mov
xor
jb
xor
adc
dec
mov
mov
pop
cmpsl
leave
popf
cltd
sub
std
js
jmp
mov
mov
shll
ret
in
mov
lods
or
xor
push
jecxz
nop
dec
and
lods
test
sar
lahf
and
fistps
repz
pop
std
repnz
rcrb
repz
jmp
data16
sti
addr16
xlat
dec
popa
hlt
imul
imul
jns
mov
cmp
sbb
out
pop
mov
cmp
mov
imul
clc
int3
inc
cmp
jle
push
out
jnp
add
shl
fcomps
jae
pop
xchg
xor
sbb
jmp
mov
repz
xor
cltd
push
and
mov
pop
leave
dec
adc
and
mov
aaa
push
add
shll
fucomi
jmp
mov
xor
jecxz
les
lds
arpl
cmpsl
aam
repz
enter
adc
mov
add
sbb
test
jb
out
in
sbb
out
push
jmp
xchg
push
ret
in
push
cmp
add
inc
in
cmp
popa
and
fstp
xor
adc
ss
inc
cmp
xchg
ss
leave
xor
push
fucom
xchg
or
out
and
imull
bound
daa
inc
and
cli
pop
adc
xchg
xlat
aas
inc
jle
outsl
rcl
adc
inc
xor
and
dec
pop
jo
cmp
mov
repnz
mov
dec
mov
sbbl
push
mov
int3
dec
sbb
inc
fcomps
sbb
stc
xchg
xchg
lcall
sub
mov
fidivl
sub
inc
es
lret
ret
lahf
mov
stc
dec
sub
pop
mov
mov
pop
mov
daa
sub
imul
add
xor
out
lcall
dec
push
sbb
cmpsl
cltd
dec
lcall
filds
arpl
imul
out
sbb
mov
out
push
rorl
xchg
subb
in
in
lods
jmp
inc
xchg
int
jecxz
sbb
sbbl
shll
inc
iret
push
dec
inc
pop
ds
and
mov
xor
loopne
dec
shrb
inc
pop
pop
sbb
repnz
lea
sub
out
push
testl
cmc
popf
jne
xchg
sbb
fucomp
sti
shrb
add
jecxz
and
jecxz
cmp
mov
mov
aam
and
sarl
std
outsl
inc
adc
aas
scas
jp
mov
lods
lret
inc
xchg
ret
or
push
rcrl
sbb
sub
adc
pop
xor
out
aam
pop
out
sbb
add
out
pop
cmp
outsl
imul
pop
cmp
sbbb
inc
add
out
mov
mov
sub
jg
xor
stos
insl
imul
arpl
mov
jae
aam
xor
sub
inc
lock
xchg
push
jo
ds
fwait
aam
add
or
adc
jne
ret
jecxz
sub
scas
ret
jo
cmpb
ss
and
lea
imul
loope
or
stos
adc
jnp
faddl
sub
fldt
cmp
mov
mov
mov
or
cmp
jecxz
imul
dec
jne
scas
inc
pop
mov
mov
add
lea
jnp
stc
sbb
add
test
fimull
xchg
mov
pop
loop
mov
cli
orl
stos
lods
mov
adc
or
pop
shll
sbb
mov
or
add
mov
mov
or
repz
les
in
das
xchg
insl
mov
jle
test
sahf
mov
xchg
fcmovne
mov
test
and
into
gs
out
jl
add
addr16
jmp
push
sub
xchg
sub
sbb
xlat
xchg
pop
imul
dec
sbb
and
imul
popl
jno
imul
ficompl
repnz
das
sbbb
jmp
sbb
cmc
dec
push
enter
and
out
dec
aas
fistl
xor
adc
push
rcll
aam
dec
xor
dec
cmp
inc
out
mov
mov
and
sti
shl
jnp
inc
shlb
fldl
inc
test
int
mov
imull
push
dec
or
fmuls
test
dec
mov
ret
ret
jp
out
stc
into
sub
mov
das
repz
fbstp
jmp
cmpsb
or
add
jmp
inc
mov
shrb
sbb
test
gs
jmp
push
mov
jno
xchg
aam
shll
pusha
rcr
cmpsl
sar
ljmp
push
in
repnz
xchg
mov
mov
ja
mov
fildl
dec
inc
bound
andl
push
xorl
push
sbb
out
lcall
inc
mov
pop
fistpll
mov
push
fstps
inc
rolb
mov
fdivrl
jge
push
or
frstpm(287
clc
fcoml
daa
pop
imul
inc
movl
adc
dec
dec
sub
iret
cltd
pusha
popa
jl
cmc
mov
inc
add
xlat
fistps
pop
jb
loop
roll
cmp
and
out
out
inc
cmp
movsl
fcoml
outsl
jmp
arpl
or
out
int3
imul
adc
push
movsl
add
mov
inc
test
sbb
stc
fbld
out
and
jmp
clc
sbb
jb
mov
loop
cwtl
in
jmp
popf
mov
test
mov
out
out
jb
push
sub
mov
pop
jnp
fwait
in
xchg
lods
orl
mov
filds
sbb
lahf
sbbb
imul
mov
adc
dec
push
addl
in
dec
mov
out
push
aas
imul
mov
xchg
shl
pop
stos
sub
mov
hlt
inc
lahf
sbbb
cmpsl
or
mov
cmp
xchg
jl
int
fsubrl
mov
push
jnp
mov
mov
pushf
cmp
adc
pop
cmp
fnstsw
sbb
push
xchg
fdivrs
insb
aam
jb
xchg
aam
enter
rolb
ljmp
jmp
mov
repnz
hlt
inc
mov
pop
fucomi
push
cmpsl
stc
mov
push
and
ret
cmp
leave
inc
fwait
sbb
scas
dec
push
out
xor
lea
or
jecxz
sbb
sub
sub
in
mov
es
repz
sub
sbb
jmp
add
std
int
ret
mov
adc
jecxz
xor
adc
cltd
aam
pop
add
inc
hlt
add
fxtract
pop
das
repnz
or
mov
xchg
sbb
fisttps
bound
push
shrl
cwtl
adc
in
and
sub
jnp
addr16
in
inc
sbb
xor
cmc
fmul
pop
pop
cmp
xchg
sbb
movsl
ss
stos
loope
enter
xchg
pop
pop
inc
sub
jle
out
xchg
mov
out
cmp
mov
mov
jno
sub
mov
mov
sbb
movsb
rcl
and
sub
pushf
sub
arpl
inc
dec
sbb
mov
push
filds
test
xchg
push
faddl
mov
stc
in
aas
adc
lods
xor
out
int3
js
ret
lods
std
in
jle
lret
out
shrb
pop
frstor
pushf
xor
jae
aam
fwait
out
jae
or
lret
jno
ss
ljmp
outsl
ret
jbe
xor
xor
push
mov
dec
bound
popa
rolb
xor
lret
or
jge
ja
inc
mov
sub
mov
sub
sub
jb
test
xor
out
addr16
repz
popa
xorb
cld
outsl
mov
lods
jge
mov
inc
sub
lods
cmp
pop
mov
cmpsb
negb
popa
pushf
int3
popf
outsl
int
aam
leave
andl
fiaddl
dec
push
and
ret
iret
jne
pop
mov
mov
shlb
sbb
cli
mov
shll
xor
or
add
mov
adc
out
cmp
int3
sahf
daa
pusha
pop
popf
sbb
xor
scas
fstpl
push
jl
mov
inc
mov
stc
lea
stos
ret
test
fwait
jbe
iret
imul
push
xor
movsl
sub
into
sub
clc
jnp
faddl
mov
int
test
mov
or
add
lahf
sbb
push
xorb
add
jle
dec
adc
xchg
bound
outsl
dec
out
gs
test
js
lods
fildl
fidivl
adcb
ret
lcall
push
adc
inc
sbb
loopne
mov
popf
or
dec
sub
jns
xor
jnp
aas
daa
and
negl
imul
mov
sub
jns
fisttps
pop
pop
xchg
xor
pop
jb
lods
xor
mov
insl
fucomi
push
mov
push
xchg
aad
test
and
mov
pop
jns
mov
jle
imul
sub
mov
lret
iret
fwait
inc
mov
sbb
dec
or
push
sbb
jbe
xorb
sub
aas
xor
xorb
cmpsl
jecxz
pop
cli
ljmp
sbb
cltd
xchg
pop
dec
adc
rorb
outsl
push
out
rcr
mov
into
mov
jmp
sub
ret
push
imul
pop
add
mov
fwait
sub
lret
jmp
fistpll
stos
and
mov
out
inc
dec
clc
lahf
imul
aaa
outsb
int
fistps
loop
xchg
ret
repz
test
lods
xchg
cwtl
or
xor
sbb
inc
mov
insl
jbe
adc
roll
xchg
and
inc
fldt
stc
lds
or
dec
xor
fucomp
out
stos
add
xchg
aas
mov
dec
sbb
mov
sbb
out
and
jb
test
jne
test
ljmp
dec
inc
mov
inc
insl
jecxz
stc
addr16
cmpsl
pop
xor
mov
mov
in
mov
shll
shrl
cmpsb
push
sbb
sub
adc
repz
pop
icebp
and
xchg
ret
xchg
stc
jno
imul
sub
ret
and
push
in
shrl
ss
xchg
xor
sub
push
aam
stc
dec
outsl
push
mov
aaa
cmp
cmp
pop
popf
pop
push
int
stos
xor
jnp
cmpsl
push
sbb
and
loop
cld
arpl
rolb
pop
xor
add
cmp
dec
jb
push
inc
pop
xor
cmp
aam
jo
lahf
shlb
pop
arpl
jmp
mov
fiadds
mov
inc
cmp
frstor
and
movsb
or
adc
and
sbb
sti
fld1
lcall
scas
pop
xchg
jl
call
roll
popa
jp
mov
pop
and
jmp
ret
adc
aas
scas
mov
xchg
mov
adc
in
aas
jns
jns
mov
sbb
rorb
popa
in
je
incb
mov
mov
fildll
add
in
or
test
cmp
movb
pop
xorb
enter
mov
and
mov
dec
stos
mov
jge
xchg
or
jns
push
inc
in
adc
or
mov
fwait
sbb
and
inc
pop
xchg
sti
roll
cltd
pop
push
jle
push
jno
in
ljmp
out
mov
dec
loop
ficoms
iret
lock
div
inc
in
mov
cmp
jmp
mov
xor
push
lahf
sbb
push
inc
test
test
jmp
daa
inc
jle
dec
push
jg
pop
push
or
fidivrl
sub
ret
dec
insb
or
sbb
imul
sbbl
sbbb
orl
icebp
repz
aas
fmul
hlt
push
dec
daa
ret
int3
cs
and
jmp
ret
lods
popf
rcl
std
sub
xor
jne
and
sbb
les
xor
ror
mov
pop
sbb
je
pusha
popa
sbb
cmpl
mov
mov
xor
xchg
lock
fcoms
mov
sbb
pop
outsl
mov
les
mov
sti
mov
adc
inc
add
out
imul
jmp
insb
out
adc
mov
push
enter
mov
cmp
xchg
xchg
popa
lods
scas
cmp
inc
fnstsw
pop
fisttpl
sbb
fldt
enter
outsl
push
dec
mul
std
fidivl
clc
or
cs
fcomps
fs
jno
xlat
xchg
es
push
out
dec
fcomi
outsl
test
cmp
and
in
out
inc
sbb
sti
xchg
sbb
or
enter
std
sahf
xchg
dec
xor
sub
ja
jg
xchg
loop
test
outsl
xor
ja
or
mov
iret
add
lret
sbb
jb
fnsave
inc
push
enter
vmaxss
fiaddl
aam
repnz
mov
sarl
jne
orl
addr16
imul
dec
lds
adc
jo
aad
dec
dec
imul
mov
shlb
in
mov
imul
sub
cmpsb
xor
cmpsb
out
or
adc
addr16
cltd
addr16
jae
into
insl
int
adcl
arpl
mov
pop
imul
add
xchg
add
sub
pop
add
sbb
adc
xchg
jle
and
jae
adc
jmp
das
pop
adc
test
cs
push
dec
and
cli
es
cmp
dec
mov
int3
sbb
pushf
jmp
dec
clc
or
lahf
add
sub
dec
fbld
jnp
imul
negl
add
xor
push
push
dec
jl
mov
popa
cmpsb
ret
sbbb
les
mul
inc
push
es
lcall
lea
cmp
adc
and
push
push
dec
sbb
mov
hlt
daa
xchg
sub
pop
pop
jne
lea
adc
inc
xlat
sbb
jmp
mov
sbb
ljmp
and
push
cmp
aaa
cmp
pop
jns
mov
into
and
lods
mov
xchg
xlat
cli
leave
mov
aaa
push
popf
popa
imul
popf
pop
xchg
rol
sbbb
lock
mov
xlat
push
lea
subl
out
mov
mov
sbb
mov
imul
add
xor
loop
insl
and
enter
xor
lds
add
jae
sbb
sub
int
loope
jno
add
or
add
test
inc
push
mov
fwait
lcall
sub
inc
sub
sub
cmp
bound
popa
aad
subl
divl
or
cmp
insl
addr16
fildl
mov
rcl
pop
insl
stos
aas
sub
cltd
sbb
inc
sbb
xchg
or
shr
fsubrl
lcall
xchg
cmc
das
repnz
jle
lahf
iret
sbb
repz
leave
inc
adc
jnp
add
stos
cmpsb
adc
cmpsl
xchg
push
ret
inc
mov
fucomi
mov
xlat
test
pushf
sbb
aam
sahf
jmp
cli
adc
hlt
xchg
dec
or
xlat
subb
frstor
out
cwtl
or
xchg
mov
adc
rcr
jnp
cmpsl
int
push
repz
mov
jl
mov
les
pusha
imul
add
scas
subl
lcall
popa
jg
sarl
je
jmp
lret
out
pop
leave
xor
fsubrs
lods
jbe
int3
nop
neg
pop
lea
jmp
cmp
mov
flds
jecxz
dec
or
lret
lds
out
or
xor
jnp
pusha
ret
arpl
out
cmpsl
into
pop
jmp
sub
inc
push
jno
out
imul
and
dec
adc
ret
adc
mov
pop
dec
inc
dec
aam
sbb
cld
push
xchg
inc
mov
mov
loopne
popa
mov
push
cmpb
jecxz
push
inc
cs
inc
mov
dec
or
cmp
call
ljmp
dec
fldenv
mov
cmp
adc
popf
imul
xchg
fildll
lcall
jp
pop
jae
sbb
mov
iret
lea
fisubl
pop
mov
mov
inc
pusha
lahf
mov
call
ja
aam
loopne
pop
lea
jno
cmpsl
xlat
ror
jle
mov
and
or
mov
pop
push
inc
fsubl
sub
cmp
jecxz
mov
jecxz
jp
jbe
jnp
les
aam
movsb
sahf
cmpsl
ret
xchg
jne
addr16
jmp
lea
test
fidivrl
test
inc
enter
cmpsl
sbb
pop
cs
mov
in
outsl
stos
mov
out
xchg
add
dec
cmpsb
cmp
pop
roll
shl
mov
sub
mov
ret
sbb
jne
cmp
mov
mov
iret
xor
lcall
sub
dec
mov
lahf
dec
stos
icebp
jnp
dec
and
mov
mov
sub
pop
popa
mov
out
lds
repnz
test
imull
testb
push
cmp
rorb
push
push
push
mov
mov
push
cmp
ficompl
sbb
out
aad
mull
xor
jl
sub
ljmp
sbb
xor
fwait
push
mov
push
test
or
pop
lcall
and
push
divl
pop
pop
xchg
mov
lret
dec
dec
and
sbb
test
fnstenv
insb
les
mov
ja
aad
cltd
xlat
addr16
sbb
fdivrl
fwait
shrb
aam
mov
in
roll
dec
xor
sbb
sub
xor
mov
pop
sti
ret
pop
push
mov
nop
sahf
xchg
or
xor
pusha
loope
ds
int
fisttpl
shlb
dec
in
inc
or
call
inc
xchg
mov
loop
int
mov
jne
mov
popa
mov
aas
mov
xchg
cmp
sbbl
arpl
enter
idivb
fistpll
add
gs
or
fstps
frstor
pop
adc
pop
shlb
les
neg
adc
mov
mov
add
mov
fcomip
dec
imul
fcomp
pop
leave
mov
xor
jo
stos
jne
adc
dec
or
arpl
fdivs
lea
and
mov
pop
js
dec
mulb
cltd
cmpsl
xor
orl
sarl
lods
jl
mov
test
mov
and
pop
pop
cmp
cmp
int3
xchg
fsubs
enter
or
iret
adc
mov
loope
clc
push
xor
add
mov
jmp
dec
adc
fcomi
sbb
popa
mov
and
scas
xchg
fnsave
popa
jp
push
mov
shl
insb
push
inc
jmp
gs
mov
cltd
inc
gs
idiv
jnp
ja
adc
sub
inc
jne
repz
ret
pop
pop
inc
out
loop
pop
icebp
test
mov
jno
dec
dec
sbb
jl
ja
add
xchg
add
out
xchg
mov
ljmp
out
imul
imul
bound
mov
mov
adc
in
sti
ficompl
pop
mov
ja
inc
add
cmpsl
push
dec
outsb
push
mov
or
int3
sbb
sub
ds
pop
sbb
shrb
fstl
data16
add
int3
sbb
xor
mov
xchg
inc
xor
ret
in
jge
std
mov
in
xor
dec
dec
push
fcmovnbe
pop
xor
pop
stc
adc
xchg
test
jge
addr16
mov
jae
sbbb
lds
repz
jg
xlat
mov
lea
dec
mov
mov
mov
mov
xchg
in
fwait
lds
pop
sub
ds
lods
inc
aad
xchg
idivb
ret
bound
andl
and
cmp
in
pop
sub
lock
test
outsl
cmpsl
gs
inc
mov
adc
out
or
jbe
push
sbb
mov
icebp
aam
jmp
sti
inc
outsb
fs
aad
adc
pop
mov
mov
pop
jne
mov
pop
in
xor
sar
fwait
rcll
pop
xchg
jecxz
jmp
xchg
sub
sub
ret
mov
xchg
bound
test
dec
xchg
push
mov
icebp
mov
rol
jmp
jecxz
xchg
mov
gs
int3
mov
push
xor
out
neg
jmp
jns
xchg
addr16
or
dec
jnp
test
jnp
pop
cmp
scas
fistpll
add
jns
jle
mov
mov
jnp
sbb
in
call
sahf
and
loope
repz
and
fs
cli
xchg
sbb
cmp
mov
mov
jae
push
push
mov
dec
leave
aas
and
mov
int
xor
pop
xchg
jb
out
add
or
dec
dec
ss
jge
ds
je
not
push
pop
jecxz
jae
xlat
mov
mov
mov
inc
rorl
ret
pop
lds
cmpsl
fcoms
cmc
push
lds
lds
roll
sbb
and
mov
mov
shrl
icebp
imul
cmc
dec
arpl
out
pop
xor
mov
xchg
lret
das
pop
cmpsl
cmp
inc
daa
sbb
dec
test
xchg
in
dec
jmp
xchg
or
push
icebp
pop
pop
pop
sub
sbb
mov
ret
inc
pop
jmp
lret
and
pop
ja
popa
loop
les
mov
movsl
arpl
pusha
jns
mov
xor
jg
push
mov
subl
pop
faddl
adc
daa
sbb
lahf
fmull
cli
mov
xchg
sub
jno
movsb
sbb
add
add
es
sub
repz
mov
inc
and
lahf
test
dec
jo
js
dec
out
test
push
mov
jg
push
insl
ret
rorb
sbb
aam
shrl
scas
rorl
int
xchg
mov
fsubrl
inc
sbb
hlt
icebp
xor
pusha
mov
push
adc
jne
or
scas
loopne
adc
jge
outsb
jns
mov
rol
pushf
pop
mov
push
jno
mov
adc
cmc
dec
ljmp
imul
out
leave
cmc
imul
hlt
in
in
in
pop
and
pop
mov
inc
push
inc
test
stc
inc
sbb
mov
lds
movsb
ret
cmp
std
mov
jl
push
aam
jb
sbb
sub
fidivs
aas
jg
lods
pop
js
nop
lods
add
xchg
imul
add
or
or
sbb
cltd
rcr
ret
xor
clc
pop
jl
xchg
imul
cmovne
sbb
and
jge
ja
sti
xchg
jecxz
xor
push
iret
repnz
fiadds
scas
or
aas
push
mov
shll
or
fldcw
and
sub
mov
adc
ja
pop
sub
pop
jne
push
out
jae
xchg
outsb
shl
stos
iret
adcl
scas
xchg
jb
inc
xor
cmpsb
adc
sbb
je
in
cmpsb
sbb
cmp
cli
incb
jmp
pop
out
adc
sbb
xor
fidivrs
xlat
ret
test
fcomps
jp
and
pop
mov
inc
pop
jns
jl
and
xchg
xchg
xchg
mov
aad
int3
inc
jp
and
pop
jmp
dec
mov
js
loope
and
adc
ret
pop
sbb
xchg
aaa
mov
repz
hlt
int3
pop
adc
inc
fnstsw
sbb
jmp
ret
ljmp
jecxz
mov
xor
aaa
icebp
jne
jle
aad
dec
imul
aam
js
or
fs
xor
stc
movsb
mov
shr
aam
dec
orl
gs
test
cltd
fldcw
fsub
sbb
aas
sbbl
pop
push
stos
iret
xchg
xor
stos
push
add
lret
push
fldenv
dec
jp
loope
xchg
mov
jb
adc
rcl
stc
outsb
loope
fdivl
jle
sti
sbb
fidivrl
enter
push
push
xchg
xor
pop
pop
fwait
mov
lcall
fnstsw
pop
jb
dec
jp
jo
adc
and
ret
int
push
jb
jne
mov
jle
test
dec
arpl
mov
pop
mov
xchg
stc
push
out
clc
push
ss
mov
inc
call
imul
push
pop
les
pop
dec
mov
iret
xor
js
cld
sub
aas
insb
sub
jl
mov
pop
pop
xlat
ficoml
clc
in
add
inc
flds
fwait
ja
push
mov
sti
bound
das
push
or
movsb
mov
jnp
push
lcall
inc
xorb
out
outsl
sbb
sbb
jne
mov
mov
push
adc
adc
and
repnz
jno
dec
outsb
jnp
rep
and
sbb
add
stos
or
xorl
add
sbb
adc
inc
sbb
pop
and
call
movsl
loopne
cmp
lock
int
test
xor
enter
xchg
push
aam
scas
push
aas
sarl
and
das
fistps
adc
enter
mov
loopne
loopne
jge
std
sti
popa
aam
jecxz
aas
push
xor
mov
mov
je
dec
jo
dec
cmp
push
add
lret
cmp
cli
ja
mov
in
lea
mov
out
pop
jmp
dec
cli
jle
mov
xor
jmp
xchg
sbb
pop
push
inc
cs
out
mov
outsl
jno
sarl
add
ja
stos
push
mov
popf
insl
push
xor
cmpsl
pop
mov
mov
in
xor
cli
xchg
sbb
pop
sarb
jmp
fmuls
sub
and
sub
cmp
les
xor
loop
ret
movsb
sub
jo
add
imul
rcll
xlat
adc
xor
repz
subl
sti
int
xchg
ja
add
dec
lods
pop
out
pop
fsubl
fstp
mov
lds
cwtl
sbb
popf
mov
sbb
push
or
sub
pop
ror
addr16
mov
ds
mov
fldenv
fsin
enter
and
mov
bound
sbb
mov
push
shl
mov
bound
pop
data16
cmp
push
xchg
getsec
ret
loope
mov
rorl
push
jne
incb
stos
mov
je
mov
cmp
jecxz
repz
addb
rcl
cmp
xor
push
movsl
addr16
jbe
aam
push
enter
mov
arpl
cmp
addr16
pop
push
loope
jecxz
rcr
sbb
xchg
fsubl
mov
int
sub
outsl
cmp
rcr
inc
inc
pop
int3
and
outsb
xchg
rorb
mov
push
pop
sbb
cmp
jbe
sbb
fcoms
dec
aaa
ret
inc
push
enter
sub
mov
cwtl
in
jge
imul
dec
and
lea
sbb
sub
mov
test
jmp
adc
sub
adc
sbb
in
scas
imul
xchg
add
inc
inc
mov
out
xor
stos
push
inc
in
sbb
xchg
xor
mov
and
xchg
lret
test
xor
xor
sbb
jae
pop
imul
mov
pop
aas
adcl
mov
iret
jecxz
enter
pop
dec
popa
sbb
das
addr16
imul
ds
sbb
mov
jge
es
jg
loope
xor
addr16
out
fisttpll
cmp
shrl
sbb
popa
pop
jne
sbb
cmp
add
testl
sbb
adc
mov
rcrl
jno
add
pop
or
int3
jmp
mov
pop
dec
nop
jge
push
fcmovne
xchg
pop
inc
test
ret
repz
shll
or
call
dec
dec
pop
and
fnstcw
ret
nop
lahf
sbb
dec
cltd
sbb
sbb
aam
or
dec
imul
cld
and
jb
call
mov
adc
mov
pop
mov
mov
cli
xor
mov
cmp
or
dec
sbb
das
add
sub
jns
inc
or
cmpsl
cmp
dec
adc
sub
dec
jmp
pop
pop
fldt
adc
ret
and
jnp
add
mov
and
notl
inc
cs
sbb
pop
xor
andl
das
jmp
cld
inc
or
fcomps
out
mov
inc
lret
sbb
and
push
ret
insl
sbb
push
jge
push
and
in
adc
scas
jnp
scas
lret
cmp
xchg
xchg
inc
dec
sbb
xor
ret
inc
push
es
outsl
shll
aam
adcl
pop
out
shll
jns
rcll
sarb
sbb
out
fsubrl
mov
xchg
cmp
loope
fsubs
dec
xor
push
pop
loop
fwait
push
jmp
in
lret
stos
mov
dec
sbb
fdivl
or
mov
aam
in
sub
dec
frstor
or
inc
enter
outsl
xchg
add
mov
loope
dec
test
dec
iret
push
dec
xlat
sti
sbb
pop
ljmp
push
rclb
sbb
movsb
popf
mov
test
outsb
pop
insl
jmp
pop
pop
les
mov
loop
and
adc
std
xchg
dec
mov
and
sarl
xchg
lahf
sbb
sub
sub
loopne
xchg
push
lods
fnsave
sbb
orb
int
mov
cli
enter
cld
mov
push
int
ror
pop
mov
fwait
lahf
inc
das
mov
xchg
shr
repnz
cli
es
movsl
cmp
lods
cli
dec
je
cmpl
xor
lcall
loop
ret
lock
mov
sbb
and
dec
mov
stos
lods
ret
add
out
das
xor
inc
pop
inc
inc
cmpsb
fwait
int
repnz
fcoml
sub
push
jb
pop
fmuls
inc
and
call
aas
lock
mov
mov
cmp
stos
jmp
aam
xor
nop
in
jp
xchg
adcl
stos
out
sub
mov
sahf
sbb
loope
jae
mov
or
imul
add
add
test
pop
dec
xor
mov
sti
rorl
sbb
sti
mov
lea
call
sub
jne
out
xor
dec
js
mov
movsb
mov
cmpsb
push
xchg
popa
mov
push
mov
adc
pop
and
addl
pop
test
sbb
cmpsl
ja
int3
fidivrl
shr
xor
mov
aaa
pop
dec
sbb
sub
call
call
pop
dec
jecxz
outsl
int3
pop
jg
mov
aam
mov
fistpll
test
int
mov
pop
repz
inc
fcmove
push
or
cmpsl
int3
sti
in
lcall
inc
and
sub
inc
fildl
cmc
mov
adc
es
mov
fadd
mov
mov
push
les
mov
hlt
mov
iret
ret
sub
mov
jge
loope
sbb
ret
aaa
cmpsb
in
lods
in
int
cwtl
push
ja
ds
inc
xchg
jbe
fcoml
xor
or
add
adc
dec
cmp
inc
adc
fsubl
aad
repz
sbb
insl
adc
add
jl
inc
repnz
jne
mov
imul
out
sbb
cmpsl
mov
dec
in
int
fst
xchg
stc
inc
int3
inc
and
inc
fucomp
and
out
or
je
cmp
nop
les
pop
rcl
pusha
ljmp
shrl
sarb
loop
out
xlat
sbb
popa
js
das
outsl
or
xor
pop
sahf
sub
sbb
loop
xor
mov
xor
in
loop
jmp
arpl
and
jno
push
pop
mov
push
inc
cmp
xchg
mov
xlat
lea
xor
sub
fldcw
inc
xor
jge
flds
jb
inc
mov
inc
sti
xchg
xchg
lret
sbb
or
icebp
add
mov
fisubrs
lods
adc
andl
jae
stos
rcrl
lods
aad
rol
pop
into
lock
movl
adc
iret
jnp
sti
inc
data16
lret
lret
cmp
xchg
loope
addr16
jmp
xchg
jmp
xor
sbb
xlat
je
fldenv
xchg
push
lea
das
rol
sbb
in
inc
sbb
xchg
cli
je
int
jb
sub
push
out
les
push
mov
mov
pop
outsb
loop
cli
iret
addr16
out
dec
rcrl
sbb
insb
xor
mov
loopw
mov
fucomi
sbb
leave
loope
add
fldlg2
pop
jae
push
popa
and
popf
sbb
fwait
test
shr
dec
mov
mov
fmul
outsl
lret
sahf
lcall
jne
outsb
stos
popf
aaa
ret
jno
ficomps
lods
add
sti
fs
mov
push
int
jo
pop
inc
pop
push
cmp
call
jl
dec
jb
mov
rcrl
lret
leave
and
or
sbb
out
jae
xor
or
xorb
iret
sbb
jecxz
xor
adc
cmpsl
sahf
pushf
push
dec
inc
xchg
jo
mov
xor
in
dec
jle
xchg
loop
inc
stc
mov
jl
aam
cli
lret
imul
into
inc
leave
push
adc
inc
movsl
or
push
inc
add
mov
cmpsl
test
jns
mov
insl
dec
adc
xchg
fldenv
push
lret
test
inc
addl
sub
ja
imul
jecxz
fmul
jns
bound
in
int
addr16
or
xchg
jmp
out
lret
cmp
sbb
mov
test
mov
mov
pushf
sub
sti
xor
cwtl
mov
dec
lcall
cli
xchg
inc
mov
bound
or
dec
leave
xor
repnz
inc
jb
mov
jnp
dec
mov
mov
mov
xrelease
add
imull
mov
lahf
jg
fcmovu
mov
lahf
ret
xlat
lock
jno
fs
inc
pop
add
jle
addr16
dec
rolb
repz
out
ljmp
cmpsl
out
rcrl
jmp
out
xchg
in
push
or
sarl
dec
mov
shrb
inc
sub
inc
xor
dec
fadds
hlt
jmp
push
out
adc
inc
aad
rol
mov
iret
adc
pop
ret
fsubrs
or
jle
aam
stos
inc
mov
fwait
cltd
or
out
or
inc
xchg
loop
popf
pop
mov
mov
in
mov
mov
sbb
jmp
and
lds
aam
lcall
and
mov
mov
jmp
mov
adc
and
pop
push
xchg
sub
inc
int
lea
inc
mov
sub
jae
and
ret
mov
loope
or
xor
in
jb
sbb
lock
fcmovnb
push
mov
or
rcll
jno
fildll
aad
in
fiadds
fwait
pop
xor
pop
outsb
fadd
dec
jmp
ret
sti
pop
pusha
icebp
xchg
arpl
fistpl
dec
jle
jecxz
sbb
sahf
inc
inc
push
sbb
pop
sbb
jge
cmp
xchg
sbb
imul
lcall
insl
xor
jecxz
sub
inc
idiv
and
les
pop
pop
sbb
out
sarb
xlat
sbb
pop
push
lahf
push
mov
je
jp
mov
sti
sbb
addr16
mov
inc
fisubs
jp
loope
jb
sbb
pop
inc
lds
ljmp
and
es
jge
pop
in
inc
xchg
mov
ret
test
bound
shl
in
lahf
fistl
arpl
lea
mov
enter
outsb
imul
stos
lods
je
std
fiadds
xchg
in
shlb
mov
and
in
cwtl
addr16
dec
les
fildl
inc
inc
cltd
mov
in
stos
xchg
je
cmpsl
ror
std
in
fldl
fidivl
push
outsb
rcl
rcrb
and
lret
dec
idivb
lahf
test
fisubl
pop
mov
fcoms
iret
jmp
test
lods
sub
and
push
mov
push
jo
mov
movsb
sti
cmc
lods
sbb
imul
fld
inc
xchg
sahf
pop
jg
cs
cld
iret
jge
les
popa
aam
pop
or
jp
mov
icebp
stos
lret
jns
popf
pop
cmp
ret
dec
in
pop
adcb
call
fstps
pop
shrb
lcall
cmp
mov
mov
out
cmpsl
stc
xchg
in
testb
xchg
inc
cmpsb
mov
mov
andl
ret
mov
andb
pusha
adc
rcrl
xor
and
sbb
sbbl
jg
ds
in
adc
into
lcallw
ja
imulb
rclb
jmp
arpl
mov
mov
imul
or
inc
pop
push
in
aaa
das
mov
dec
xchg
sbb
ret
lods
stos
fisttpl
stos
aas
mov
inc
cltd
mov
leave
inc
cmp
mov
cmp
sbb
and
lcall
mov
fisubrl
xor
push
push
sub
into
aaa
loope
gs
ret
aam
addr16
push
mov
daa
add
leave
sub
dec
cmpb
fstl
test
inc
jg
out
add
xchg
test
rorb
mov
loope
adc
jl
imul
stc
fistpl
imulb
adc
ficompl
or
int
xor
lret
dec
rcl
in
sbb
popa
test
mov
dec
mov
es
sub
leave
dec
jl
lret
int
push
stos
iret
and
inc
pop
shl
fcmovne
jle
cmpsb
lret
xor
ljmp
in
adc
pop
lods
cmp
mov
enter
negl
dec
jbe
add
ret
push
fwait
push
pop
push
dec
jp
xchg
repz
stc
and
xchg
xchg
mov
pop
jg
jmp
jnp
inc
and
stos
or
out
cmp
fcmovu
sbb
out
add
rcr
cs
inc
xchg
xor
push
xchg
mov
ffree
push
rorl
xor
mov
ret
cwtl
in
mov
insb
nop
cmc
ud1
mov
mov
xchg
ret
dec
mov
insl
fnstcw
lahf
in
mov
or
xchg
mov
sub
mov
cwtl
cmp
rcrl
rcll
addl
xorl
mov
dec
mov
push
shll
pop
jne
in
xlat
inc
jmp
andl
push
mov
aad
xor
jp
insl
aam
scas
mov
mov
mov
fcmovbe
push
mov
pop
mov
dec
cltd
jp
push
ljmp
pop
pop
sub
adc
inc
cmp
test
cmpsb
push
ss
mov
loope
loope
push
mov
pop
jecxz
bound
movb
mov
inc
enter
xchg
sbb
xchg
adc
jbe
test
jecxz
mov
fcoml
xorl
lods
scas
outsl
push
inc
imul
xlat
jmp
aas
in
in
mov
sub
mov
xchg
pop
pop
xchg
sbb
jns
push
leave
jecxz
sti
scas
jl
and
scas
cli
lock
stos
insl
xlat
nop
xchg
xor
dec
mov
fsubl
sub
jg
pop
push
test
daa
call
les
adc
imul
or
xorl
add
xchg
cmp
sbb
fwait
dec
rcll
aad
enter
mov
mov
lret
iret
popa
imul
xchg
daa
fildll
add
shll
orb
test
in
cs
fs
adc
jmp
insb
subl
jo
push
call
sbb
out
sbb
or
cmp
mov
dec
xorb
andb
inc
push
repnz
jp
jle
insb
imul
lea
ret
cmp
lret
sub
inc
sub
mov
js
xchg
loopne
adc
movb
cwtl
lds
dec
push
and
xchg
mov
cs
and
int3
leave
jle
add
xlat
divl
add
fs
dec
push
pop
mov
subb
jle
hlt
push
les
push
jg
inc
push
xor
leave
repz
jg
test
pop
imul
lret
xchg
adc
or
sub
lds
mov
insb
mov
out
enter
push
push
and
pop
test
jmp
pop
jns
push
xorb
in
pop
aas
fimull
push
jb
bswap
jns
fdivrl
pushf
inc
sbb
xchg
jl
inc
sbb
imul
mov
insl
cmc
rorb
mov
fcoml
dec
pop
and
cmpsl
or
dec
scas
popa
aam
mov
add
pop
xchg
inc
pop
int
dec
test
iret
rcrl
aas
xchg
push
jns
roll
or
sub
jo
sub
xlat
std
out
scas
or
scas
fwait
xlat
cmp
inc
dec
repnz
mov
jmp
dec
pop
les
push
xor
xor
inc
inc
push
in
stc
xchg
jb
decb
pop
in
in
test
or
roll
je
mov
clc
int
sub
lds
aam
push
pop
inc
push
pop
popa
cmp
sbbl
dec
aam
mov
test
xor
pop
fwait
mov
cltd
dec
aaa
xchg
loope
xchg
and
sbb
rcrl
jns
in
sbb
xlat
cmpl
jns
mov
out
movsl
sub
pusha
jmp
mov
mov
ret
mov
xchg
movsl
fwait
cmp
mov
inc
fwait
decb
cltd
aam
call
js
jnp
and
cmp
popa
enter
cmp
inc
lds
rcr
xchg
ret
xchg
cltd
inc
jge
notl
dec
sbb
pop
fstp
dec
cltd
and
sbb
push
out
test
ss
out
fldl
cmp
and
nop
jmp
icebp
push
mov
xor
shll
push
stos
pop
add
out
pop
push
mov
fwait
sub
ljmp
insb
into
and
adc
cmpl
jp
jbe
divb
enter
and
icebp
sbb
dec
movsl
daa
aaa
push
mov
and
arpl
stos
mov
dec
arpl
enter
adc
jo
in
data16
lcall
xor
sti
fsubr
imul
in
sub
mov
idiv
pop
jg
sahf
hlt
pop
rcrb
faddl
mov
xor
pop
sub
dec
cmpsb
inc
xor
xchg
test
push
push
repnz
jp
hlt
xor
dec
enter
fldt
pop
mov
jbe
inc
out
mov
insl
jg
mov
pop
notl
jno
jp
dec
lcall
imul
lea
inc
jmp
inc
and
or
xor
in
xor
das
xlat
xlat
xlat
and
adc
xlat
push
ret
push
sbb
mov
test
test
jbe
lods
inc
shll
push
xchg
and
jge
pop
lahf
push
or
popf
iret
fadds
cmp
loope
and
repz
mov
ret
jecxz
lods
xchg
jmp
mov
jecxz
pop
out
push
cli
inc
sbb
mov
aas
pop
push
imul
or
pop
fistps
and
jge
das
das
ljmp
xchg
scas
insl
mov
lahf
cs
xchg
fcmovu
and
cltd
out
dec
mov
rcrl
jp
fildll
push
rorl
lods
mov
orb
or
sub
mov
out
cwtl
testb
mov
in
and
pop
sbb
in
pop
xchg
hlt
xchg
pop
mov
sbb
cltd
cs
ret
pop
ja
push
or
je
lock
xchg
mov
gs
dec
iret
pop
in
and
and
movsb
pop
cli
cmp
mov
push
fcoml
loop
mov
push
out
popa
data16
mov
clc
pop
push
xor
mov
hlt
or
fdivs
inc
stos
cmp
icebp
cmp
and
jnp
icebp
xor
cmp
iret
in
jmp
jnp
ja
das
int3
and
ret
stos
push
push
pop
sbb
fwait
fwait
mov
out
jl
add
jns
jne
xchg
ret
xor
out
push
fcompl
ror
cmp
cld
int
daa
xchg
and
iret
sbb
out
shl
push
sti
repz
sub
jmp
imul
push
filds
sbb
loop
xlat
fsubrs
popf
shll
add
dec
and
jp
xchg
fsubrs
sub
ficoml
adcb
insb
inc
xchg
ret
mov
in
mov
in
data16
aam
das
mov
ds
and
divps
and
in
iret
and
mov
rcrl
dec
movsb
cmpsl
test
test
arpl
ficoml
inc
cld
shlb
xchg
out
repz
xchg
aad
jb
push
and
mov
xchg
xchg
xor
and
sbb
rcrl
push
out
xor
xchg
pushf
stc
inc
sbb
sahf
pop
xor
mov
outsl
jne
sub
and
dec
sbb
xor
movsb
pushf
jle
jnp
push
fistl
sbb
jae,pn
leave
cmpb
dec
std
das
cmc
lcall
and
cmc
enter
xor
jmp
cli
jne
push
inc
pop
fmull
negb
les
mul
adc
sbb
fisttpl
xor
sbb
rcr
sar
pop
jae
cli
mov
dec
sub
outsl
pushf
xchg
outsb
cmp
imul
jne
xor
int3
std
aas
mov
notl
test
scas
rclb
xchg
popf
std
lea
lea
mov
pop
mov
add
xchg
add
sbb
push
and
xchg
jno
test
mov
pop
sub
sub
imul
lea
cmpsl
ficoml
lock
xorb
mov
xchg
lret
fs
mov
push
pop
cmp
jge
stc
fsubs
movntps
jmp
aaa
rol
add
jae
lds
cs
pushf
xchg
out
pop
in
sbb
divl
sub
negl
add
and
daa
enter
sbb
push
into
fcmovu
jo
jle
ja
sub
push
icebp
and
jbe
jl
mov
in
arpl
loope
pop
mov
jp
dec
iret
sarl
sbb
cmp
pop
hlt
jmp
mov
sbb
ljmp
xchg
or
pop
or
or
daa
xchg
mov
or
and
dec
ret
and
mov
ficoms
lock
or
mov
rclb
cmp
or
rcrl
test
insb
sbb
cmp
jns
cmp
idivb
xchg
loop
xor
push
negl
xchg
xor
mov
or
mov
jne
or
fcomps
sbbl
imul
pop
popf
bnd
or
pop
call
loop
xorl
pop
pop
pushf
inc
mov
mov
jecxz
stos
mov
pop
ljmp
cmp
push
and
mov
push
pop
or
lods
sbb
cmp
fsubs
lcall
sbb
imul
test
cmp
pop
sub
stos
inc
arpl
sbb
imul
jg
inc
ret
jge
mov
jne
out
data16
push
mov
insb
sbb
gs
sbb
out
fwait
inc
fwait
mov
lds
sub
cmp
fs
push
test
out
xchg
jmp
sarl
jo
int3
cmp
dec
or
fildll
int
xchg
int
sti
fisttpll
int
and
xor
pushf
jae
jno
push
cld
add
mov
jmp
in
sarl
jne
inc
into
sti
decl
rcrl
adc
test
int
cli
xchg
rcr
sub
mov
and
xchg
sbb
dec
das
fstpt
fstpl
and
inc
int
shr
dec
stc
jmp
xchg
and
jp
test
mov
pop
xchg
stos
push
and
aam
lret
xlat
xchg
enter
adc
mov
pop
and
out
push
movsl
inc
repz
xor
je
mov
push
fisttpl
inc
mov
fwait
add
xchg
jnp
and
cmc
ret
lcall
stc
enter
sbb
pop
xchg
in
arpl
add
addb
mov
xchg
inc
dec
mov
pop
iret
sbb
int
rorb
int3
push
pop
fcomi
das
stc
pop
rol
jl
stc
push
aad
out
inc
popf
dec
sbb
mov
dec
cld
out
add
out
and
adc
stc
inc
push
jnp
movsl
pop
pop
fists
lods
mov
adc
rol
aad
jge
mov
psubusw
movsl
ljmp
movsl
pop
or
cld
sti
push
mov
adc
and
jecxz
inc
daa
inc
dec
xchg
in
xchg
xor
lcall
sbb
dec
push
into
test
repnz
iret
out
xor
xor
sbb
nop
imulb
inc
out
mov
inc
out
sbb
jo
and
pop
lret
lods
sbb
push
adc
stc
rcl
jmp
in
lock
fwait
out
std
cltd
out
cmp
insl
cmp
dec
ret
lahf
gs
lds
fisttpl
fdivrs
jmp
mov
and
add
sarb
fimuls
xor
js
inc
hlt
cltd
mov
sbb
mov
xchg
mov
lods
jbe
popf
dec
pop
scas
fnsave
stos
cs
mov
mov
jno
xor
jmp
jecxz
int
xchg
lea
imul
lret
and
out
out
popf
jmp
popf
xchg
cmp
das
icebp
jge
add
int3
sbb
mov
pop
fnstenv
out
scas
mov
jmp
push
je
and
jl
sti
push
mov
sbb
pop
sbb
dec
rcll
sahf
inc
push
in
xchg
leave
xor
mov
lret
push
push
jo
ret
and
ljmp
enter
mov
push
dec
stos
xchg
scas
mov
cmpl
cmpsb
lock
sub
out
cli
sub
sbbl
sub
repnz
fistpl
or
cmp
lret
xor
and
mov
test
nop
sub
int3
inc
ret
out
rol
push
mov
idivb
xlat
imul
loopne
iret
adc
and
xor
scas
push
orb
dec
adc
push
stc
cli
repnz
adc
fwait
scas
movl
nop
ror
dec
cmpsl
jmp
fsubl
mov
sbb
sbb
filds
or
iret
adc
mov
xor
fcoml
sbb
and
cmp
cmp
cltd
dec
xlat
movsl
ror
mov
push
jno
enter
push
ret
ret
ljmp
jmp
mov
dec
and
dec
xlat
lahf
mov
jns
dec
in
push
dec
fidivrl
roll
dec
jae
mov
stc
jecxz
or
xchg
sbb
adc
or
popf
mov
jecxz
dec
push
int
cmp
sub
inc
sub
adc
call
lods
das
aam
push
imul
int3
and
xor
andb
sub
inc
fnclex
cmp
pop
lea
aas
xlat
addr16
filds
or
or
fucomp
or
sbb
sub
fwait
or
inc
cmp
inc
inc
popf
aam
aad
mov
add
insb
cmc
pop
subb
cld
dec
gs
mov
jns
test
fisttps
leave
dec
sbb
outsb
dec
inc
out
jge
or
shl
cmc
loope
fists
flds
and
in
sub
popf
push
mov
int3
push
mov
mov
aad
mov
xchg
mov
mov
push
insl
push
sub
dec
sub
test
add
int
jnp
pop
repnz
sarb
mov
sub
cmpsb
jns
je
cltd
jecxz
not
and
pop
adc
mov
pop
loope
imul
js
fmull
call
push
push
sub
cmpsb
orl
nop
xchg
sbb
cs
push
or
jl
fwait
sbb
stc
and
inc
das
cmp
xor
inc
enter
lea
into
sahf
ret
mov
jecxz
hlt
test
insl
dec
mov
jp
lods
lret
or
out
and
pop
jae
dec
mov
outsb
pop
jle
repz
or
sbb
loope
cs
sbb
jb
jb
add
sbb
or
insl
test
subl
inc
hlt
je
lds
cmp
xor
inc
mov
outsl
mov
xor
stos
xchg
leave
and
xchg
inc
and
xor
aas
inc
xchg
les
aas
sti
xor
test
xlat
mov
cltd
mov
mov
lds
jno
jb
sbb
repz
test
push
jo
sbb
push
adc
adc
jp
stc
sbb
lcall
pop
dec
movsl
jge
repz
jb
sbb
repnz
dec
mov
sbb
inc
lods
fcmovnbe
xchg
pop
insl
dec
mov
jmp
and
and
sub
loop
pop
sbb
dec
out
aaa
add
sbb
push
or
popa
mov
rorl
jg
jl
cmpb
and
adc
pop
cs
int
sub
aas
xor
test
fisubl
insb
fcomp
dec
jns
jno
loop
jle
lcall
in
lahf
out
sbb
iret
pop
insl
jmp
jmp
and
jae
add
aad
mov
out
fs
xor
sub
push
jne
push
inc
es
push
jno
arpl
sbb
ds
gs
xchg
cmc
jb
jno
imul
int3
xchg
cmp
xchg
dec
mov
or
sbb
pop
xor
iret
xor
and
add
xor
adc
mov
add
testl
add
jmp
jns
fisttpll
and
imulb
insb
sub
xchg
push
jmp
loope
pop
adc
and
rcll
cltd
subl
fadd
sbb
ret
push
fdivl
out
fnstcw
inc
dec
push
and
addl
xchg
xchg
fcomi
mov
push
mov
inc
xchg
pop
pop
mov
fsts
dec
inc
lahf
fnstenv
ret
sbb
mov
or
add
dec
int3
or
out
sub
lods
lret
jmp
xadd
pop
shll
test
mov
sbb
das
jg
jae
fwait
push
test
in
movsl
dec
or
add
mov
jge
ret
mov
cld
jecxz
xchg
divl
push
aad
sarl
xor
rclb
or
lret
mov
std
shll
xchg
lds
cmpb
sti
push
mov
lods
fisubl
dec
in
daa
push
and
loopw
shll
mov
xor
dec
mov
sub
jnp
rol
repz
jno
push
xchg
pop
bound
mov
aam
cmpsw
xor
dec
pop
xor
sbb
fmull
jmp
cmc
mov
pop
inc
fisttpl
ret
xchg
mov
into
out
mov
sub
imull
mov
scas
jecxz
mov
test
sbb
andl
pop
rcl
data16
xor
testb
insl
mov
mov
cmp
jno
mov
sub
jg
in
mov
mov
es
or
pop
sti
cltd
push
push
shr
repz
mov
and
xor
sub
push
fdivrl
adc
jp
les
add
shll
cmp
stos
sbb
sbb
loop
push
inc
pop
sti
inc
loope
scas
outsl
lods
push
imull
in
push
inc
push
xchg
je
pop
pop
xchg
in
call
cwtl
movsb
push
stos
inc
push
sbb
mov
push
sbb
mov
in
mov
movsl
loope
aad
mov
cmp
aaa
pop
aam
pop
sbb
movsl
pop
repz
mov
outsl
sti
test
jg
sbb
cltd
lds
in
sub
testb
and
push
jb
xor
mov
ror
jmp
aam
iret
sahf
mov
outsl
lds
mov
lods
xchg
push
cmpsl
jle
sbb
xchg
push
ss
mov
lods
rorl
scas
mov
and
adc
pusha
daa
xchg
sub
sbb
ror
dec
dec
and
sbb
xchg
paddusb
sar
fstl
pop
and
cld
cwtl
inc
and
adc
lret
sbb
enter
pop
sub
jno
out
mov
testl
mov
jg
fcom
test
push
xchg
pop
adc
aaa
xor
test
out
int
xor
dec
adc
or
sbb
rcrb
mov
and
inc
aad
int3
cmp
sub
mov
repnz
mov
mov
xlat
push
fldl
dec
or
sbb
test
and
add
xor
jnp
sti
sub
int
sub
int
sarl
sbb
lods
push
add
ret
dec
inc
fisttpl
in
icebp
leave
pop
sbb
mov
adc
cmp
push
and
ret
cwtl
jmp
cmp
jns
xchg
mov
xchg
mov
fmuls
lea
jmp
js
inc
stos
or
and
mov
sub
clc
cli
jae
push
lods
sbb
enter
and
and
pop
lods
jge
insl
jae
sti
les
and
mov
adc
add
jecxz
aam
imul
gs
sbb
leave
scas
pop
jmp
mov
popf
jmp
jmp
pop
xor
jbe
sbb
out
inc
in
mov
iret
mov
xchg
pop
mov
or
fs
inc
stos
fstps
shll
or
pusha
aad
shrl
inc
out
add
mov
in
xlat
or
push
out
repz
popa
cli
enter
es
es
sub
xchg
subl
test
int3
leave
push
lret
lret
movnti
rol
repnz
and
sub
push
mov
ljmp
jmp
filds
and
pop
aas
mov
push
jl
mov
stos
lods
into
sbb
add
mov
pop
add
fdivs
jecxz
hlt
cmp
and
adc
mov
jge
xor
push
adc
pop
and
cld
int
push
jecxz
push
repnz
leave
popa
lret
inc
out
xor
sbb
loop
outsb
xor
ds
mov
out
mov
and
sbb
rol
xor
sbb
pop
push
in
jmp
flds
dec
add
fcmovne
cmp
cmc
or
lret
jmp
cmp
and
xchg
mov
mov
mov
int3
xchg
or
fcomp
push
sbb
bound
mov
gs
sar
sar
sub
shl
mov
mov
les
sbb
sbb
adc
jp
xchg
or
fstps
push
cmpsl
xchg
add
jge
adc
inc
xchg
pop
pop
pop
and
inc
pop
pop
enter
dec
outsl
dec
cmp
dec
xor
ljmp
bound
repz
sti
inc
repz
stos
and
pop
aas
jmp
jmp
in
push
mull
jecxz
insb
sbb
into
push
inc
jp
js
sarl
sub
in
pop
or
leave
insb
daa
lods
iret
mov
rorl
jge
int
neg
cmpl
test
or
insl
pop
push
aas
stos
jecxz
popa
nop
jo
inc
sarl
sti
loop
cmp
xchg
movsb
sub
mov
jl
roll
sti
push
cmp
lods
mov
es
xchg
in
ds
mov
push
mov
pop
inc
cltd
subb
fmulp
in
xor
jmp
repnz
sub
daa
cld
mov
dec
fsubrl
aad
push
rcll
and
dec
xchg
sbb
jp
cmp
push
popf
sub
in
dec
faddl
dec
cmc
enter
daa
or
push
or
fldt
iret
aam
mov
add
push
cmp
or
shr
inc
fcmovb
push
mov
mov
rol
sahf
nop
out
dec
ds
pushf
jne
aam
xchg
xorb
adc
cli
inc
jle
ljmp
negl
roll
repz
pop
shr
ret
xchg
xor
add
fstl
arpl
into
add
aam
cld
in
sbb
pop
in
adc
fsubrl
loope
in
and
fdivrl
loope
in
xor
xchg
aam
pop
xchg
shl
cmp
xlat
cmp
jae
sub
ljmp
dec
out
cmpb
fsincos
xchg
aam
and
dec
lret
aad
roll
xor
inc
out
and
lret
ljmp
dec
in
in
push
test
jmp
leave
mov
test
mov
rcrl
cli
mov
subb
das
rcr
xchg
addr16
push
xchg
adc
ja
aas
jae
ret
pop
fucom
in
xacquire
inc
in
sbb
mov
in
sti
jne
inc
jecxz
sub
xchg
sbb
xchg
push
cli
cltd
mov
or
sbb
fnstsw
out
call
arpl
ret
jecxz
mov
adc
push
rcr
mov
and
dec
sarl
fsts
ret
cmp
and
push
sub
jo
jbe
cmp
es
stc
lret
inc
lret
xlat
stos
dec
les
and
jbe
repz
loope
mov
or
pop
inc
mov
mov
mov
xlat
loop
mov
cltd
lcall
jb
cmp
arpl
nop
test
inc
sbb
adc
push
sti
mov
ror
shll
jb
lds
sub
adc
shlb
sti
pop
test
out
mov
xchg
aas
and
sub
jo
sbb
fsubl
mov
insl
sti
jmp
lods
sub
lret
sub
pop
ret
or
xchg
lret
push
mov
mov
daa
push
pop
js
inc
lret
dec
or
iret
add
fcmovu
add
cmp
sub
daa
adc
jecxz
clc
lret
test
xchg
mov
push
dec
test
xor
and
sahf
mov
lea
stc
inc
dec
mov
in
outsl
or
jge
cmp
mov
sub
rcrb
jmp
loopne
lret
insl
push
mov
mov
int3
sbb
rcll
insl
sti
sub
or
cmovb
into
or
pop
imul
xor
xorb
inc
arpl
ja
and
inc
sbb
out
cmp
adc
xor
mov
xchg
xchg
ds
and
fcompl
xor
pop
fistps
inc
lds
js
pop
repz
inc
sbbb
sti
faddl
jae
stc
pop
sbb
mov
mov
shl
adc
fnstsw
jp
jno
adc
frstor
ds
xor
bound
pop
jg
mov
adc
lea
aas
cli
dec
mov
int3
jecxz
mov
out
insl
enter
and
lea
pop
sub
inc
inc
dec
adc
and
mov
repnz
cmpb
jl
or
loopne
fcoml
jnp
pop
nop
mov
xor
enter
leave
push
sub
add
xchg
iret
and
int3
and
data16
andl
daa
cmpsb
cmpsb
rcl
and
sti
jne
pop
adc
iret
fadd
movsl
xlat
cltd
data16
xlat
sub
dec
or
les
fsubr
mov
xchg
pop
aas
jno
sbb
mulb
ljmp
or
dec
xchg
mov
fstpl
and
pushf
mov
jmp
test
pop
xchg
jne
mov
rcrl
mov
sbb
insl
add
movb
cmc
mov
scas
or
imul
lcall
add
jb
shll
jp
xchg
fbstp
imul
push
cmc
aam
insb
in
dec
jnp
pop
xchg
movsl
jb
jle
repz
repz
sub
lahf
ret
sub
fiaddl
dec
xor
test
xchg
sbb
mov
xchg
mov
stos
outsb
test
lcall
out
sti
mov
rcrb
mov
fcoml
fistps
pop
loopne
movsl
out
mov
cltd
inc
imul
sarl
sub
fmull
jae
and
dec
call
push
lds
pop
xchg
movsb
adc
sbb
xchg
mov
mov
sub
mov
popa
sbb
cltd
lds
pop
jecxz
xor
in
scas
in
mov
loop
mov
lods
pop
adc
or
push
jno
lods
stos
lea
fsubl
std
aaa
int
negl
cmp
inc
mov
sub
test
in
neg
ret
push
out
cwtl
stos
insb
mov
sub
mov
lret
xor
jmp
or
imul
dec
sbb
mov
xorl
or
jns
insb
outsl
dec
sti
sbb
shlb
mov
movsb
dec
enter
mov
lret
dec
daa
loope
mov
dec
and
cltd
pop
mov
out
mov
out
jnp
adc
inc
mov
les
xor
adc
sbb
stc
popa
lahf
cmpsb
inc
repz
inc
sub
addr16
test
sbb
mov
inc
movsl
mov
stc
fwait
loope
fnstcw
aad
shl
es
sub
or
imul
push
fstpt
fst
xchg
lods
inc
cltd
pop
repz
cmp
aam
fcmovu
sbbb
int
vpsrlq
imul
sbb
xchg
jae
add
inc
xlat
pop
dec
sbb
fcompl
push
xor
pop
and
sbb
xchg
test
mov
push
dec
aam
xor
xlat
addb
pop
not
pusha
jp
orl
pop
mov
inc
mov
pop
adc
pop
jmp
jp
jne
dec
or
pop
outsb
out
xlat
mov
and
adc
enter
lret
lock
out
inc
int3
or
int
and
push
dec
jle
aam
lret
inc
xchg
jns
lret
xor
rol
adc
jb
adc
dec
pop
and
mull
fidivs
cmpsb
cwtl
cs
sub
xor
inc
xor
ss
subl
mov
mov
aaa
xor
sbb
mov
sub
fwait
icebp
repz
fistpll
push
les
cmp
adc
pop
nop
aaa
inc
pop
les
xor
ljmp
cmpsb
inc
xchg
jmp
mov
enter
mov
mov
sub
mov
fbld
sbb
xchg
xor
dec
push
sub
mov
jne
int3
mov
pop
sbb
inc
jecxz
or
mov
inc
jecxz
int
lcall
test
mov
sbb
repz
mov
inc
shll
nop
hlt
fcmovnu
sbb
clc
xchg
add
pop
sbb
mov
int3
sub
aad
aad
fisttpl
scas
bound
jo
mov
imul
cmpsb
mov
out
int
movsb
push
cmp
scas
movsl
jecxz
sarl
push
call
int
and
shll
inc
int3
in
sub
sbb
mov
xor
or
xchg
out
mov
dec
leave
add
jecxz
dec
mov
sbb
sbb
movsb
leave
xchg
aam
jle
ljmp
repnz
pop
sub
inc
roll
sbb
fcomp
call
out
shrl
pop
cltd
cmp
in
cmp
mov
mov
jmp
xor
push
cmp
dec
and
test
pop
sarl
sti
out
inc
nop
daa
fsubl
and
dec
adc
stos
enter
mov
jl
mov
loope
mov
mov
push
adc
xchg
movsl
out
jecxz
inc
dec
andl
sub
xchg
shll
sar
out
das
xchg
fbld
out
fwait
ss
xor
and
or
leave
mov
mov
inc
aam
test
mov
cld
and
adc
mov
ret
dec
cltd
gs
dec
dec
jp
mov
add
js
in
aaa
pop
pop
outsl
mov
leave
aam
or
sub
test
std
push
fdivrs
push
lret
jno
data16
fwait
inc
sti
aas
jo
fsubs
loopne
jns
lcall
insl
sub
jns
lret
push
push
movsl
or
sbb
fdivs
push
loope
sbbl
or
jecxz
xchg
lret
sbb
mov
ds
inc
mov
sbb
mov
mov
fwait
cmp
jae
repnz
fsubl
pop
jne
daa
pop
push
das
sub
lock
fcmovne
jo
shr
sbb
jno
enter
xlat
int3
scas
pop
and
fwait
sbb
loop
fdivrs
fisubrs
jge
dec
scas
push
xor
jge
out
sbb
mov
imul
test
xchg
ja
aad
lcall
ja
xlat
aaa
leave
imul
fcomps
subl
mov
stos
cmpsl
dec
pop
jae
inc
fdivrp
ds
std
fstl
sbb
inc
cmpb
cmp
mov
repz
pop
and
mov
sbb
cmp
lds
pop
lds
iret
movsl
cltd
dec
xor
sub
jmp
sti
add
jle
xchg
cltd
pop
ds
push
cs
aam
stos
lods
add
cmpsl
fsts
pop
std
mull
out
popf
aaa
sbb
push
sub
ja
xlat
out
mov
jns
lods
dec
mov
mov
insl
pushw
shr
jae
dec
int
push
mov
push
jecxz
imul
cmpsl
pop
sub
pop
or
rcll
sbb
bound
sub
xor
jmp
cmp
xor
out
aas
rorl
mov
pop
push
lods
cmp
pusha
es
adc
mulb
sub
shrb
xor
into
sbb
mov
jmp
xor
lods
fnstsw
rep
testl
sub
add
pop
xchg
xchg
xchg
pushf
repz
add
cmp
mov
add
fnstcw
sbb
mov
dec
out
push
ljmp
arpl
dec
xchg
dec
push
icebp
jl
adc
mov
arpl
mov
inc
xor
jmp
lea
jmp
mov
xchg
and
fnstenv
xor
ja
sub
imul
jnp
fisttpll
add
jge
out
push
jnp
lret
adc
push
out
repnz
popa
fisubs
mov
jecxz
mov
mov
dec
bound
in
dec
test
iret
das
inc
mov
sbb
xor
mov
xlat
cmc
sub
in
insb
jns
lock
mov
jb
cmp
shrb
in
xchg
dec
fwait
xor
xchg
cmp
push
inc
mov
stos
adc
push
jmp
pop
jne
jb
mov
jno
mov
xor
lods
insb
xlat
daa
cmp
imul
xor
lcall
dec
sti
mov
mov
jle
enter
jmp
fstpl
pusha
cmp
call
loope
xchg
ret
nop
test
cmp
adc
ja
cmpsb
jp
xchg
mov
imul
nop
fdivs
fistps
imull
cltd
je
nop
je
out
clc
jmp
sbbl
cld
scas
pop
inc
movsl
mov
and
jp
cmp
lock
jge
sub
add
pop
dec
inc
sbb
cli
mov
pop
jae
and
inc
repnz
add
stos
fsubrs
sbb
test
or
pop
sbb
sub
inc
pop
ss
cwtl
pop
out
dec
paddd
xchg
outsl
xchg
inc
negb
loopne
bound
lea
test
mov
leave
in
inc
jbe
in
pop
push
ficompl
das
sbb
sbb
pushf
push
pop
dec
test
call
insl
add
adc
jg
lods
jns
jg
jmp
subl
pop
cld
imul
push
in
jnp
and
repz
insl
sbb
or
mull
jg
and
lcall
scas
test
test
dec
jnp
lods
cs
inc
in
xchg
outsb
addr16
sub
ret
orb
xchg
fsubs
ljmp
cmpsl
pop
lea
arpl
add
pusha
rclb
aam
push
push
dec
cs
nop
lret
push
cltd
dec
insb
cmp
dec
pop
xlat
sbb
or
je
jb
into
mov
nop
cmp
mov
jp
icebp
or
nop
movsl
cmp
leave
add
mov
mov
and
mov
or
sbbl
mov
or
xor
adcl
xor
inc
push
or
pop
or
ja
jmp
cmp
inc
sbb
out
pop
jns
pop
sub
in
mov
out
sbb
pop
pusha
push
cmp
push
ret
push
shrl
in
fildl
ss
add
cmc
test
xchg
andps
stos
xor
inc
pop
xor
xor
inc
mov
pushf
outsb
insb
xchg
push
or
adc
sub
xchg
aam
dec
nop
roll
repnz
pop
shr
ret
inc
and
outsb
lret
mov
push
fnsave
sub
xchg
les
cwtl
sti
imul
imul
imul
pushf
shll
push
rcl
fucom
fdiv
out
adcl
push
lret
mov
push
aad
fnstsw
in
lret
pop
mov
adc
test
mov
out
imul
and
rcrl
in
cmp
inc
clc
jge
loope
leave
sbb
push
xchg
jmp
dec
imul
xor
cmp
pop
mov
std
sbb
orl
mov
repz
jl
fsubs
ljmp
cmp
xchg
jb
repnz
jge
cltd
mov
ja
imul
sbb
ja
mov
cld
ss
cmpsl
push
xchg
push
push
xor
add
and
enter
fcmovnb
jmp
push
gs
js
and
in
pop
push
ja
mul
aad
lds
cmp
fsub
lcall
push
int
loope
pop
mov
jnp
fldl
and
xchg
and
dec
jecxz
int
pushf
and
shll
flds
sub
push
dec
mov
dec
xor
cmp
xchg
sbbl
xor
test
pop
mov
cs
xor
xor
xchg
dec
push
inc
inc
cmp
pop
out
add
push
cwtl
rcr
ficoml
inc
sbb
dec
inc
ss
pop
xlat
lock
fildl
add
xlat
nop
dec
jl
sbb
enter
cli
inc
aad
push
pop
dec
push
pop
mov
mov
add
mov
pop
or
push
hlt
sarb
fadd
add
cltd
mov
inc
push
test
push
testl
mov
mov
imul
movsb
sub
lret
mov
and
pop
stc
lods
fistps
loope
insb
ss
sub
dec
sub
in
push
lods
or
sbb
or
adcl
sarb
cltd
mov
xorb
popa
sub
xchg
lea
call
and
cmc
mov
sahf
jno
jp
jl
xor
sbb
fcom
sarl
sti
push
push
push
or
je
lret
or
push
dec
mov
pop
sahf
out
popa
pusha
ret
jge
sub
xchg
jmp
lcall
pop
das
add
or
pusha
cltd
dec
out
out
xchg
je
mov
dec
popa
or
mov
ret
lods
rcr
sub
jge
pop
and
mov
adc
cltd
aaa
popa
ja
mov
in
lds
int3
popf
xchg
cmpsl
pop
push
cld
jmp
jmp
mov
lods
aas
add
cltd
std
cmc
in
cmc
test
pop
cmp
in
mov
or
sbb
stos
push
pop
lock
repz
out
push
push
xor
in
imull
negb
out
sahf
add
sbb
adc
sti
xchg
inc
lea
ljmp
jmp
rorl
les
dec
adc
cmc
les
out
addr16
push
xor
mov
iret
loope
mov
jno
cmp
add
jns
dec
stc
test
cmpsb
mov
aas
outsl
imul
fisttpl
jmp
fidivrl
inc
push
xchg
out
mov
xchg
mov
bound
adc
push
lods
xor
sbb
cmp
dec
push
mov
icebp
das
and
xor
xor
insl
cltd
lds
sbb
jae
test
insb
adc
psubsb
add
ljmp
mov
xchg
xchg
push
xor
mov
imul
aas
mov
xchg
test
ret
aam
add
mov
ret
mov
mov
or
cld
fdivrs
xor
mov
insb
inc
rcrl
fwait
cld
xchg
cs
adc
dec
jmp
lret
enter
in
xchg
pop
sti
mov
aad
rolb
inc
iret
lea
rcl
fmull
sti
pop
ds
dec
jge
outsb
aas
sub
aas
rcrl
jne
xor
cmc
or
mov
icebp
aad
dec
jecxz
test
popa
iret
jmp
test
xor
jl
xchg
out
sub
adc
iret
add
dec
push
clc
inc
mov
mov
in
leave
xor
add
xor
je
cli
in
pop
or
lcall
int
ret
pop
popa
fs
ret
xchg
jno
mov
pop
and
push
and
mov
int3
rorb
xor
cmp
inc
mov
or
jnp
popf
mov
or
fsub
xchg
sub
in
cmpsb
shl
icebp
enter
inc
ret
adc
sbb
xchg
sbb
dec
jecxz
pop
jle
mov
les
js
and
lods
cmc
std
jno
pop
fdivrl
es
inc
test
aad
xchg
scas
dec
push
ffree
mov
pop
sub
sub
pop
adc
lea
pop
or
add
cmp
sbbb
xchg
inc
mov
cmpsb
fidivrl
inc
shrl
sti
incb
pop
add
out
out
jnp
adc
leave
fdivl
dec
xor
pop
in
xchg
sub
out
es
rcrb
sahf
inc
inc
push
pop
roll
test
jne
push
in
jp
movsl
les
ljmp
xor
loopne
mov
jmp
sbb
mov
repnz
jp
cltd
sbb
in
mov
shlb
test
jns
ror
neg
pop
or
push
pop
movsb
pop
add
test
aas
jmp
mov
scas
ljmp
dec
pop
xor
popf
pop
test
mov
mov
ljmp
pop
and
fwait
mov
addl
mov
popa
add
jno
lock
sbb
jns
mov
add
nop
push
mov
jmp
data16
push
ret
dec
jae
aas
dec
jns
sbb
push
shl
aam
int
xor
add
pop
call
xor
xchg
vpxor
sbb
cmp
jle
jecxz
test
fildll
test
sbb
orb
std
lret
sbbl
pop
icebp
mov
stos
and
add
cmpsl
rcl
mov
jnp
ljmp
mov
imul
sub
xchg
mov
leave
pushf
and
mov
jle
sub
imul
test
sbb
out
shrl
push
xlat
adc
fldenv
sti
fdivrs
inc
pop
popa
push
out
ret
ret
or
or
sbb
mov
lahf
outsl
in
push
push
dec
and
rol
lock
push
pop
out
or
popl
shlb
sbb
xor
shl
cmpsb
fists
and
lcall
xchg
xor
mov
scas
inc
out
xor
scas
or
dec
leave
int3
xor
and
pop
xchg
mov
sbb
push
into
ror
inc
roll
cmp
sbb
les
push
ds
xchg
mov
adc
ljmp
mov
xchg
nop
xor
push
mov
pop
repz
repz
iret
pop
negl
mov
aad
and
sti
mov
mov
daa
sub
cmp
jmp
and
sbb
aaa
dec
jmp
xchg
mov
xor
and
cmp
mov
add
jmp
pop
and
xor
mov
mov
mov
sarl
int3
rcl
clc
mov
mov
cld
addl
lcall
mov
push
dec
pop
pop
in
fdivrs
sti
and
out
stos
inc
mov
xchg
dec
fldenv
int3
aam
ret
sbb
mov
jge
dec
enter
ss
xchg
mov
jae
int
sub
sarl
xor
mov
std
push
adc
lret
notl
xor
sbb
inc
xor
loop
jg
xor
dec
sbb
add
mov
aam
fldl
out
mov
int3
mov
and
mov
fs
ss
fsubs
and
jnp
fucomi
pop
add
pop
and
arpl
call
dec
mov
mov
pop
add
mov
imul
negb
jmp
test
jge
mov
lods
sbb
cmp
ret
add
dec
mov
negl
sbb
xchg
inc
fdivl
xchg
sbb
roll
std
dec
mov
sbb
mov
xchg
and
and
fstps
rcrb
xchg
mov
sub
test
or
pushf
add
sbb
cmc
or
push
sbb
mov
orb
or
adc
dec
sbbb
mov
leave
cli
dec
xor
out
cmp
ret
fsubl
daa
in
inc
dec
imul
test
jmp
vmovups
ret
sbb
push
fcomi
lods
xchg
xor
fcmovb
fcmovb
lds
imul
inc
cmpsb
xchg
xchg
jg
inc
ret
aam
sub
mov
mov
xor
cltd
pop
fs
aad
mov
cmp
filds
cmp
inc
fcom
clc
xor
pop
and
addl
sbb
xchg
movsl
xor
sub
ljmp
movsl
xlat
sbb
inc
addl
push
mov
or
cmp
sub
inc
int
fists
ret
xlat
jmp
loop
add
negl
repz
dec
test
pop
stc
mov
dec
mov
inc
cmc
ret
inc
inc
int
sbb
fbstp
ja
test
push
cmp
xor
daa
jmp
iret
push
cld
mov
bound
or
outsl
xchg
mov
and
sbb
je
dec
xor
push
into
pop
pop
hlt
inc
dec
xchg
nop
loop
dec
add
jecxz
sbb
rcrb
pop
pop
rcll
xor
pusha
jb
and
and
lods
je
cld
fldcw
lahf
imul
rorb
loopne
cs
jmp
cli
jp
inc
rcrl
addl
cmp
dec
stos
push
dec
leave
stos
ret
in
xchg
sbb
aaa
and
ss
lret
insl
xor
dec
sub
leave
inc
cmp
sbb
mov
mov
push
iret
and
push
pop
cli
mov
sti
mov
aam
xor
pop
repz
sbb
cld
lret
imul
hlt
sub
push
popa
pushf
inc
ss
imul
inc
push
or
dec
or
ret
ds
sbb
pop
ss
sbb
ret
icebp
mov
and
shl
fcmovnu
gs
fdivs
sbb
les
fisubl
scas
fistps
xlat
xor
sahf
int
sub
es
and
mov
xor
push
lret
das
xchg
jge
inc
sti
mov
sahf
subl
sub
cld
adc
sbb
jbe
arpl
xor
dec
arpl
sbbl
mov
faddl
loope
mov
leave
push
pop
lret
pushl
sarl
sbb
cmp
rol
aas
sub
or
mov
insb
inc
ljmp
int
rol
mov
pusha
ss
enter
jecxz
and
ret
lret
lret
fmull
sbb
push
test
sub
jg
lds
pop
repz
jmp
dec
sub
push
sbbl
cltd
jecxz
mov
rorl
subb
fucom
int
jmp
dec
fwait
lods
sti
fists
fistpl
fs
dec
mov
sbb
dec
enter
aas
lods
fucomp
and
xchg
push
xchg
es
ret
pop
dec
stos
aam
lods
fsubr
or
add
inc
neg
aas
in
sbb
outsl
inc
test
and
sub
pop
lds
and
repz
inc
lgs
dec
pop
and
iret
and
ljmp
jmp
jno,pt
je
inc
push
fistpl
fdivs
pop
add
insb
mov
pop
mov
repz
jae
hlt
shll
outsl
mov
sbb
jmp
xor
and
sub
jo
fstps
test
sti
and
aad
aad
leave
push
popa
mov
in
int3
xor
fmul
adc
cli
add
xor
inc
leave
lds
push
xchg
sbbl
push
testb
inc
aaa
aas
or
clc
sbb
arpl
int3
ret
dec
mov
fwait
ret
scas
mov
xchg
jmp
mov
aam
dec
out
mov
xlat
lea
xchg
adc
and
sbb
and
sbb
insl
icebp
sbb
xchg
sbb
dec
and
push
repz
or
xchg
aad
xchg
sahf
cmp
fnstsw
lret
mov
pop
mov
inc
push
sub
sub
dec
and
mov
fbld
mov
int
fsubs
mov
and
jmp
xchg
test
fsubl
xchg
outsl
das
stos
aas
loop
std
scas
inc
aad
jmp
mov
pop
mov
and
pop
imul
mov
jns
out
mov
adc
out
out
test
dec
lcall
sub
jb
imul
push
in
push
bound
jge
mov
mov
mov
xchg
lret
inc
mov
gs
or
lret
loop
mov
mov
xchg
in
cmc
popa
out
lahf
xor
ret
ss
or
and
les
fdiv
mov
cmpsb
out
dec
mov
pop
jns
cmp
jp
cmp
scas
rcrb
pop
stos
cs
das
out
out
mov
fsubrs
mov
cmc
and
enter
hlt
repz
outsl
imul
fs
pusha
xchg
adc
xchg
pusha
push
mov
loope
mov
imul
xchg
mov
sbb
jecxz
mov
jmp
push
add
mov
xchg
lret
repnz
out
imul
fnstenv
push
cmp
pop
or
push
int
pop
mov
dec
shr
fs
sbb
aad
outsl
inc
scas
insl
dec
mov
dec
out
vpaddd
dec
das
jbe
enter
fisubrl
jbe
clc
out
and
pop
pop
cmpsb
xchg
xor
add
ret
lcall
rcrl
sti
pop
jecxz
mov
lods
sub
mov
lret
and
addr16
imul
push
int
pop
ss
psrlw
lret
xchg
testl
ret
push
add
mov
sti
icebp
shl
inc
stos
shrl
iret
dec
fmull
mov
fs
int3
xchg
sub
pop
fdivs
add
or
out
mov
leave
js
ret
xchg
sbb
push
cmp
lods
jo
rorl
leave
or
rolb
jne
push
mov
jg
gs
fsubrs
bound
data16
push
jg
cld
and
roll
enter
or
pusha
loopne
loope
pushf
cmp
add
repz
btc
test
inc
popf
rorl
imul
mov
adc
out
sti
and
cltd
jno,pt
rorb
ljmp
xor
lahf
mov
ret
test
inc
push
mov
add
mov
test
lret
and
inc
jae
fcomps
cmp
movsb
insl
mov
test
mov
xchg
andb
mov
and
jbe
rcrl
cltd
jo
pop
dec
or
push
push
mov
fsts
dec
push
push
mov
dec
xchg
mov
hlt
dec
pop
xchg
jne
std
jnp
pop
pop
mov
mov
sbb
addr16
push
stos
movsl
stc
xor
mov
ljmp
fwait
aam
xchg
fnstsw
sub
lret
aas
lds
sbb
push
mov
outsb
dec
sbb
popa
sub
jno
ss
push
aaa
xchg
insb
mov
adc
fnstcw
add
movsb
mov
push
aad
pop
scas
ret
clc
sti
loop
sbb
mov
xchg
ret
popf
aam
enter
repz
fstpt
iret
mov
pop
popf
int3
dec
int3
loopne
imul
les
mov
insl
in
mov
imul
ljmp
xchg
pop
es
push
arpl
pop
fistpll
rol
rcl
pop
mov
xchg
cli
ret
fcmovnbe
lods
add
ret
dec
mov
loope
call
int3
and
and
add
movsl
or
pop
pop
push
jnp
sbb
dec
jno
loop
and
das
jg
dec
push
adc
push
push
and
loopne
shl
dec
fisttps
roll
jmp
mov
mov
xlat
loope
adc
aad
dec
int
cmp
xor
xor
inc
gs
out
xchg
addr16
fistpll
repz
pop
inc
jmp
and
jo
pop
dec
xchg
stc
sbb
idivl
push
or
sub
sbbb
pop
shll
dec
xor
jmp
add
mov
loopne
cltd
iret
jecxz
fcompl
repz
push
inc
ljmp
repz
adc
aas
xchg
in
pushf
adc
pop
cmpsl
mov
or
outsb
movsb
xchg
xchg
lds
and
pop
jg
pop
mov
cmpsb
outsb
dec
mov
jecxz
pop
mov
dec
rcl
dec
in
neg
iret
bound
push
aas
push
int
mov
xchg
out
cmc
mov
pop
not
les
inc
or
xchg
mov
push
enter
jge
in
out
xchg
daa
and
dec
xchg
bound
popf
dec
leave
sbb
aad
movsl
jno
push
bound
push
mov
lret
mov
mov
fcmovne
aaa
xor
xchg
mov
sub
dec
std
fildl
pandn
lods
fstps
stos
mov
fistpl
sbb
pop
jmp
cs
pop
ret
int
ret
punpckldq
mov
jmp
das
int3
stc
imul
je
data16
ss
and
shrb
inc
mov
stos
adc
pop
lret
lret
or
ficoml
es
xlat
imul
movsl
pop
inc
sub
pop
cmp
xor
in
jg
dec
lcall
xor
add
sub
mov
mov
lahf
cmp
mov
ret
mull
and
scas
jge
inc
pop
xor
nop
test
dec
mov
xchg
dec
test
cmp
pop
dec
cmpsl
stos
add
fistl
dec
out
dec
mov
loopne
roll
scas
cmpsl
dec
inc
sub
cmp
mov
ret
or
xor
push
mov
inc
pop
gs
sbb
xor
sti
jne
les
mov
push
push
aam
adc
ret
mov
lods
arpl
int3
pop
pop
mov
fcompl
xchg
shll
and
cmc
stc
out
mov
in
test
xor
pop
xor
aas
aas
xchg
jne
in
adc
gs
popf
push
dec
cmpsl
repz
dec
aas
lea
inc
mov
mov
pop
mov
xchg
es
xchg
inc
data16
lea
xor
lea
mov
xchg
addr16
jge
add
inc
out
sub
mov
pop
adc
mov
sub
mov
and
outsl
sub
sub
dec
fwait
mov
pusha
pop
lahf
mov
dec
mov
fisttps
inc
aad
test
jecxz
ss
push
adc
scas
jae
cmp
insb
xor
lods
jmp
ja
sbb
popf
loopne
jns
inc
popa
xor
mov
mov
stos
dec
jge
mov
popf
xor
imul
enter
pop
leave
xor
sbb
sub
xchg
pop
lock
push
xor
fwait
repz
in
mov
aad
pop
addr16
cwtl
xchg
inc
sahf
jmp
loope
cmp
sbb
mov
fwait
aaa
mov
mov
cltd
repz
dec
pop
imull
jge
jmp
sbbb
dec
iret
out
out
ret
dec
mov
push
fxch
loop
andl
test
push
outsl
gs
sub
cmp
push
mov
sbb
xor
pushf
emms
adc
mov
aas
sar
in
pop
ret
cld
push
cmp
or
lea
pop
push
sbb
sbb
push
mov
xchg
push
fbstp
xchg
aas
mov
xor
out
cmpsl
scas
outsl
out
in
outsl
dec
ljmp
popa
jl
sub
and
xor
roll
ret
and
in
out
fildl
push
cmp
pop
test
adc
enter
add
mov
mov
out
mov
jmp
int
in
dec
sbb
ficoml
je
insb
sahf
inc
daa
cs
fnstsw
xor
test
sbb
sbb
jb
pop
test
pop
nop
jmp
sbb
sub
sti
fwait
lahf
jp
dec
imul
mov
ja
lahf
cmpsl
cmp
fcmovu
rorl
aas
and
mov
ds
xchg
push
sbb
jae
leave
lock
leave
push
push
insl
sub
lea
and
shrl
add
stos
outsl
xchg
or
jne
mov
ljmp
insl
scas
loope
ss
add
adc
mov
rorl
inc
int
push
das
out
idivb
dec
test
hlt
sbbl
push
pop
iret
ret
push
rol
jg
outsl
jmp
pusha
pop
dec
inc
ds
inc
inc
sub
aas
stos
add
cmp
fwait
xchg
int
cmp
xor
xor
mov
jo
jl
xchg
xlat
aad
lahf
enter
inc
xor
shll
sub
lock
xor
push
push
loope
xchg
repz
cmp
popa
mov
dec
and
mov
in
fistpll
js
pop
push
sub
fildll
addl
leave
cmp
or
lahf
xchg
stos
push
sbb
jl
insb
sbb
inc
inc
sti
addl
ret
dec
inc
lds
xor
pop
stc
std
rcr
dec
out
leave
fsub
sbb
jae,pt
cmp
stc
jmp
js
in
jecxz
pop
dec
xor
cmp
jp
xchg
cs
in
pop
dec
and
inc
vmovntpd
sbb
xchg
sub
inc
and
pop
mov
ja
xorl
push
xchg
xlat
cmp
iret
and
jne
and
pop
addl
call
out
loopew
mov
mov
xor
push
aad
cmpsl
xchg
aad
xor
jecxz
jnp
dec
inc
mov
mov
fildll
mov
jmp
jmp
jmp
not
push
mov
dec
dec
test
and
mov
subl
stos
les
dec
in
xlat
adc
pop
mov
sbb
in
or
pop
push
sbb
out
outsb
dec
dec
push
les
jecxz
push
push
push
in
outsb
sub
xchg
neg
push
inc
dec
je
scas
xor
or
cmpsb
movsl
push
or
jmp
mov
or
stc
lock
mov
sbb
lret
sub
adc
add
je
jl
mov
and
xchg
xchg
std
imul
stc
pop
mov
dec
shlb
xlat
ja
cltd
iret
xchg
jl
jge
mov
mov
sub
lret
je
push
aad
mov
enter
rcll
jecxz
pusha
int
mov
nop
jecxz
test
push
xchg
out
cmp
jbe
in
xor
ret
add
jp
pop
jecxz
sub
jl
cli
idiv
jb
sbb
testl
cmp
lea
mov
aad
imul
mov
leave
push
cmpsb
xor
incb
outsl
mov
cmp
or
aaa
iret
int
and
jae
int3
push
cs
mov
ret
mov
hlt
outsl
pop
ficoms
fcmovu
add
in
inc
and
pop
jmp
shrb
cmp
into
push
dec
adc
ljmp
mov
ret
enter
xor
ret
mov
jle
arpl
inc
cmp
xchg
or
ret
xlat
inc
sarb
lcall
in
push
out
dec
scas
and
rcrl
js
pop
pop
cwtl
insl
xchg
mov
dec
and
jnp
sar
int
lds
aas
adc
xchg
push
fnsave
pop
push
loope
loop
mov
dec
cmp
lret
aad
xor
xorl
movb
rclb
test
xchg
ret
sub
loope
mov
and
mov
out
jo
xchg
or
out
daa
popa
out
jno
in
xor
adc
mov
int
fadds
or
mov
lods
xchg
pop
popf
jnp
scas
je
xchg
imul
ret
mov
jl
fisttpl
mov
lds
test
scas
xchg
and
subl
lds
movl
xor
mov
roll
or
lea
mov
jmp
inc
xlat
sbbb
test
int
and
mov
aaa
shlb
mov
aaa
out
cmc
enter
in
dec
fst
sarl
sbb
push
popf
xchg
in
test
inc
inc
mov
xor
jecxz
and
add
sti
mov
ss
cmp
xchg
fsubrs
adc
lds
loopne
mov
fwait
repz
sahf
lea
test
inc
enter
mov
mov
add
lea
leave
dec
pop
sub
mov
pop
test
insl
sub
popf
sbb
mov
xor
mov
imul
insb
sbb
add
adc
mov
mov
popf
sarl
aas
out
pop
inc
data16
mov
repz
fldt
out
mov
sbb
scas
or
sbb
and
sub
and
dec
mov
mov
push
rol
dec
in
enter
int3
jbe
inc
sbb
cmc
pusha
ljmp
in
sbb
push
psubusb
dec
push
sub
addr16
or
sub
cltd
and
xchg
insb
xor
scas
mov
and
push
xchg
scas
sahf
push
mov
ret
pop
pop
push
movsb
aas
add
pop
stos
push
mov
push
mov
int3
and
fwait
shll
jge
sbb
pop
pop
push
int
mov
mov
ret
dec
sbb
dec
dec
inc
fisttpll
sbb
out
push
bnd
mov
cmp
fidivrl
hlt
push
xchg
imul
xor
or
jg
lods
sub
fwait
loopne
leave
sti
xchg
sub
fwait
pop
hlt
je
repnz
jmp
mov
sbb
clc
dec
push
fistps
cmp
out
sbb
mov
pop
add
imul
dec
and
jmp
cmp
or
and
xchg
fnstsw
orl
je
sbb
ret
out
in
mov
std
adc
jg
in
ljmp
into
ds
and
and
enter
dec
ret
loope
push
jno
imul
je
cmp
lahf
imulb
jl
cmp
dec
sbb
mov
xor
fwait
lds
arpl
loope
pop
in
pop
ret
or
sbb
pop
shr
cltd
lcall
mov
push
mov
mov
mov
inc
int3
jnp
stos
fcom
mov
cmp
mov
or
fistpl
fwait
inc
enter
mov
push
jecxz
shrl
out
pop
fdivl
insl
inc
sub
xor
mov
scas
lea
idivl
fnstcw
sub
aam
ret
aad
or
sub
shrl
out
lds
icebp
loope
lods
push
dec
cmp
mov
ljmp
repz
mov
xor
mov
repz
lret
roll
sbb
popa
out
dec
and
sbb
repz
lock
lods
mov
inc
cmp
inc
and
dec
adc
jnp
divl
xorb
or
sbb
test
fistpll
int
sbb
push
dec
add
adc
leave
push
ret
rol
fmul
les
jge
imul
jmp
fists
mov
or
leave
inc
ja
dec
out
sbb
imul
pop
cmpsb
lret
and
ret
push
rcll
nop
push
and
pop
mov
jp
push
or
sub
aaa
pop
popf
sbb
stos
arpl
out
jmp
stos
pop
pop
in
sub
or
xchg
mov
stos
int3
cmp
sbb
jmp
sti
fwait
mov
fnstsw
shll
push
pop
cmp
sbb
push
and
cmpsl
sbb
fimuls
xchg
in
fwait
pop
aas
jae
cmp
sub
les
std
jbe
cs
inc
cli
lcall
stos
xchg
sub
pop
cli
push
sub
je
subl
testb
mov
sarl
aam
jno
stc
fnstenv
cmp
lahf
rcrb
inc
sub
push
inc
ss
dec
decb
xor
icebp
cltd
dec
ret
scas
lock
int3
shrb
repz
fucom
push
aam
sti
add
ja
mov
push
xchg
sbb
xor
xchg
sbbb
fsts
mov
test
cmp
out
jno
lods
leave
cmp
or
cmpsb
stc
sub
hlt
sbb
and
add
mov
test
std
aad
ss
ss
subl
ret
addb
inc
fwait
mov
sbb
int
ja
mov
mov
add
sti
das
repz
leave
xor
loope
jno
outsl
mov
and
rorl
jmp
scas
xchg
mov
iret
inc
pop
pop
sbb
mov
push
adc
std
aad
clc
add
and
and
out
iret
mov
stos
stc
mov
leave
jnp
pop
sahf
xor
xor
iret
lds
cs
or
xchg
push
and
out
pop
cs
xor
and
test
mov
mov
mov
or
xor
xchg
pop
pop
push
sbb
add
jmp
int3
lds
jnp
jne
push
lea
movq
mov
xchg
sbb
pop
sbbl
iret
enter
xchg
cmpsb
push
lds
test
xor
sub
outsb
insb
add
lret
enter
dec
sbb
cmc
fcompl
ret
pop
dec
ret
add
jmp
ja
jo
rcrb
and
data16
ret
incb
sub
push
in
jg
mov
or
xor
inc
iret
pop
stc
js
loop
lock
lock
and
mov
jno
add
pop
repnz
mov
es
push
dec
dec
out
xlat
js
xchg
jmp
outsb
push
jne
clc
sbb
lods
out
out
enter
jae
pop
repz
or
mov
cmp
inc
std
sahf
data16
dec
int3
inc
jno
sbb
dec
xchg
sbb
and
in
and
sbb
es
lret
lock
fsubl
aaa
xchg
cmp
scas
sti
mov
jmp
mov
int
test
roll
addl
mov
out
int
ret
jae
adc
iret
pop
jge
pop
dec
les
pop
mov
leave
pop
imul
movsb
js
aad
push
dec
gs
arpl
scas
mov
and
cs
std
stos
stos
iret
fsubrl
repnz
fsub
jae
xchg
in
xchg
roll
or
dec
sbb
jl
in
jecxz
dec
gs
xor
fs
add
cmp
pop
repnz
je
jp
pusha
adc
sub
sbb
leave
in
push
jnp
pop
mov
jge
loopne
lds
mov
xchg
les
pop
fldenv
outsb
test
fmul
cmp
sub
movsl
xor
and
imul
iret
push
jnp
jmp
add
outsl
dec
repnz
sbb
bound
jg
fs
inc
jbe
jo
xchg
fbld
imul
jp
and
mov
xor
jne
pop
or
cmpsb
cmpb
movsb
or
lods
test
xchg
js
inc
cmpsl
ffree
arpl
enter
movsl
pushf
mov
and
fildll
dec
int
repz
outsb
es
shll
push
cmpsb
lahf
in
add
xor
aad
leave
add
mov
into
sub
xchg
sti
gs
push
loope
aad
dec
aam
mov
test
out
inc
mov
cmp
and
xchg
and
mulb
pop
sub
sbb
sbb
xchg
add
ret
fmul
loop
clc
and
xor
inc
xor
insl
pop
jp
mov
push
mov
outsb
in
inc
loope
cwtl
out
xchg
roll
mov
jmp
pushf
pop
insb
sub
push
rcrl
int3
test
scas
inc
outsl
and
mov
lods
popf
sbb
popf
jg
adc
iret
push
ljmp
adc
icebp
cmp
mov
inc
xor
cli
push
pop
stos
sbb
addr16
bnd
idiv
cltd
ret
push
fwait
outsl
pop
ret
pop
pop
pop
sbbb
pop
add
mov
lock
andb
loop
popf
cmp
sarb
pop
xor
sti
fimull
sbb
add
fwait
outsl
ds
pop
push
adcb
pop
push
xor
sub
aas
jmp
mov
sbb
in
imul
push
outsl
lea
push
andb
push
out
insb
fistpll
or
cmp
inc
sub
lock
cmp
xchg
shll
cltd
cli
xchg
inc
push
fwait
outsl
das
ret
pop
pop
dec
xorb
icebp
out
or
fucomip
aas
lea
mov
mov
outsb
mov
mov
xchg
add
fwait
outsl
jbe
testl
dec
push
mov
aas
jmp
mov
mul
cmp
shlb
imul
sbb
mov
cs
fwait
jmp
lret
test
mov
jl
sbb
test
rcrb
sbb
popf
inc
rcr
cmc
jp
push
fcmovnb
push
sarl
or
fwait
push
je
dec
sbb
ljmp
jb
sub
and
fidivl
inc
imull
xchg
cmp
sarb
and
lret
jmp
cs
inc
cs
xor
das
outsl
mov
jmp
cs
inc
cmpsb
iret
cmc
fstpt
ss
sbb
inc
in
popf
in
and
les
inc
or
movsl
mov
enter
sbb
dec
es
push
outsl
xor
ret
inc
ficomps
rorl
jae
cmpsb
out
push
fwait
testl
pop
popf
les
xchg
pop
push
sti
orl
int3
or
lds
not
aam
rcr
jae
jle
loop
xchg
lock
pop
mov
mov
mov
sub
push
jl
jge
push
popf
dec
mov
imul
jp
sbb
andl
mov
mov
enter
pop
mov
dec
mov
int
push
int3
inc
test
jp
jae
jl
addb
lods
in
sbb
pop
jb
xor
int
add
jge
jecxz
ret
cmp
arpl
xchg
and
dec
out
xlat
sbb
mov
pusha
std
pop
je
mov
sti
int
icebp
dec
jns
mov
jp
aaa
pushf
stc
mov
sbb
mov
outsb
inc
push
push
mov
ret
xor
inc
xor
pop
repz
jns
mull
in
cli
sti
mov
cmp
fldenv
xlat
sbb
ret
stos
ja
pop
outsl
cld
int3
cs
je
fsubl
call
into
scas
inc
push
inc
dec
in
fwait
and
mov
mov
scas
fldenv
sti
fwait
imul
ja
mov
or
popa
mov
into
xchg
inc
mov
arpl
out
mov
add
mov
push
fdivrs
insl
xor
ja
std
int3
rorl
mov
mov
xchg
xchg
stc
xor
movsl
bound
test
and
into
inc
mov
scas
or
enter
ljmp
and
lcall
les
shlb
repz
in
push
push
xchg
or
adc
ljmp
icebp
fcoml
mov
out
adc
jmp
or
jo
xchg
xor
imul
dec
jmp
dec
ret
pop
frstor
pop
fs
in
inc
bswap
and
or
repz
mov
cmp
xlat
and
in
add
hlt
jnp
rorl
daa
or
xorb
leave
bound
mov
shll
and
sbb
xchg
scas
mov
lock
mov
out
xor
sbbl
pusha
xchg
jae
and
sbb
hlt
loope
xchg
and
add
adc
mov
mov
and
je
das
mov
lret
int
mov
dec
test
lock
or
mov
jnp
push
mov
mov
mov
aas
scas
push
mov
ja
ret
push
mov
fsubl
mov
aaa
cmc
jmp
cltd
xor
mov
fwait
sbb
cmp
pop
push
pop
movsl
xor
dec
enter
xor
mov
cmp
fldcw
ja
lcall
xor
add
xor
sbb
or
sbb
mov
and
mov
aam
movsb
push
mov
sti
pushf
movsl
fwait
ret
and
sbbb
rep
enter
popf
lods
xchg
cmp
out
fwait
popf
dec
push
imul
push
xchg
pop
aam
lods
mov
setns
leave
fdivrl
fs
and
add
push
mov
jno
or
test
faddl
loop
jae
inc
xchg
mov
jb
imul
nop
push
xor
stc
stos
aad
ret
mov
std
ret
jg
xchg
pusha
dec
fwait
cltd
lds
test
dec
xchg
jmp
cmp
loopne
movsb
xor
jno
jno
pop
not
int3
push
fsubr
dec
adc
xor
cmp
adc
push
dec
pusha
sbb
andb
xor
shl
loop
jmp
repnz
or
cmp
sbb
jg
jg
pop
test
pop
sbbl
cmpsb
push
xchg
popa
jne
insl
aas
rorl
push
in
mov
cmp
aaa
cs
leave
int3
xor
dec
rorl
inc
std
in
shll
inc
jle
fisttps
sbb
mov
stc
pop
push
in
mov
mov
nop
pop
test
test
mov
ds
cltd
aad
out
neg
popa
std
sti
popa
mov
sub
dec
lea
enter
xchg
adc
sbb
test
jne
daa
adc
stos
lret
imul
or
adc
mov
jecxz
jb
out
mov
rcrl
push
cltd
xchg
pop
gs
or
icebp
cmp
sbb
or
jnp
and
mov
std
sti
int
lret
test
and
in
test
xor
mov
ret
xchg
in
aad
imul
hlt
xchg
imul
leave
mov
pop
pop
and
scas
jle
fistpl
adc
xor
icebp
mov
dec
add
int3
jnp
ds
adc
sbb
outsl
imul
cwtl
rol
addr16
jb
jmp
jl
aam
js
pop
jecxz
mov
fcoms
mov
insb
popa
push
adc
ss
dec
ljmp
xor
out
lods
shlb
xor
fs
cs
jle
subl
aam
cmp
push
int
cmp
mov
mov
mov
push
testl
mov
fbld
adc
xor
mov
xchg
movsl
fs
fcomps
pop
movl
popa
ret
mov
sbb
inc
cmp
inc
inc
xchg
xchg
fwait
dec
in
fidivrl
inc
cltd
test
sbb
gs
ret
rclb
pop
push
push
xchg
cmpsl
sbb
lea
cmp
cmp
and
aam
aas
mov
mov
fidivrs
sar
sub
inc
scas
xor
rcl
cmp
jmp
fldl
and
lret
fs
jg
stos
sbb
inc
sbb
adc
sbb
jecxz,pt
pushf
mov
leave
popl
enter
cmp
aam
mov
dec
and
dec
ret
mov
shlb
call
mov
push
jno
xor
sbb
push
xor
lcall
mov
dec
pop
gs
jno
arpl
pusha
movsb
js
sub
sub
clc
dec
sbb
and
stos
sub
aaa
lds
js
cmpsl
imull
pop
add
sub
ds
shrl
data16
sbb
or
sbb
into
repnz
dec
andb
jle
ds
jmp
mov
pop
pop
sbb
jecxz
adc
repz
pop
mov
mov
icebp
add
insl
popa
sbb
cmpsb
mov
and
fdivrs
ret
je
jno
xchg
in
shr
xchg
jmp
sub
ret
adc
pop
dec
stc
stos
test
xchg
xchg
or
imul
js
bound
loop
ss
cmpb
cmp
sarl
pop
push
add
add
filds
mov
or
ja
adc
dec
xor
dec
je
cmpsb
test
in
mov
lahf
adc
insl
bound
mov
fmuls
jmp
mov
lods
cld
in
out
xor
aam
and
hlt
lds
pop
push
fstpt
mov
or
sub
push
mov
popf
popf
enter
das
mov
jecxz
cmpsb
jg
andl
lcall
mov
fidivrs
xchg
xchg
and
jmp
out
idiv
lock
inc
aas
sti
xchg
mov
rcrl
and
jecxz
out
fmuls
in
or
inc
shll
push
cli
adc
pop
or
push
addr16
call
xor
out
xchg
loop
mov
mov
sti
loopne
dec
scas
xchg
stc
ret
jo
dec
dec
xchg
addr16
jne
push
sub
enter
lods
aam
lahf
test
adc
push
xchg
xchg
jns
test
mov
mov
test
inc
mov
pop
sbb
mov
and
aas
loop
jnp
movsl
or
das
dec
pushf
mov
test
push
in
inc
or
inc
sub
inc
lahf
xor
ret
mov
stos
dec
aam
fldt
inc
test
jp
add
fiaddl
icebp
pop
idiv
out
xchg
sar
xchg
jno
mov
mov
addr16
lret
jp
mov
push
xchg
ret
sub
dec
insl
xor
notb
call
cmc
ret
mov
fwait
pop
add
and
movsb
out
int
insl
ret
leave
ds
push
aad
xchg
cmpsl
jp
xchg
iret
cs
add
mov
mov
mov
jle
jge
push
pop
fcoml
fcmovnu
mov
push
or
popf
outsl
sbb
lds
lret
jge
sub
xchg
mov
cmp
sub
and
test
sbb
mov
sti
pop
or
cld
lods
sbb
dec
ret
imul
mov
add
push
roll
out
shl
push
leave
pop
mov
aam
je
adc
imul
dec
push
push
dec
stos
stc
aad
mov
and
sub
fstpl
pusha
adcl
std
jge
mov
push
and
bound
jns
shll
dec
es
push
dec
jb
decl
jp
inc
paddusb
outsl
mov
sub
push
sub
test
shll
das
dec
mov
outsl
pop
jmp
roll
sahf
insb
push
inc
cmp
lret
es
cs
scas
mov
movsb
jl
jmp
jb
cmc
xor
in
mov
stos
jp
inc
xlat
mov
push
movsb
jl
add
adc
shlb
mov
jg
or
add
jl
pop
std
mov
iret
out
cmovbe
lahf
push
fdivs
mov
mov
stc
iret
insb
or
sti
jae
dec
jecxz
movl
push
or
xchg
lcall
pop
push
inc
pop
push
dec
faddp
mov
push
pusha
pop
sub
mov
cmp
and
int
imul
xchg
cli
scas
sbb
test
fcmovnu
cmc
ret
sbbl
stc
inc
shlb
jb
outsl
add
push
stos
xchg
lds
mov
mov
jmp
pop
shr
adc
insl
mov
pop
sahf
cmc
mov
int
xchg
aas
ljmp
mov
mov
aaa
ja
out
jne
cli
and
dec
or
dec
mov
xchg
mov
jp
fnsave
mov
in
adc
stc
das
mov
leave
add
push
inc
xor
ret
je
mov
jmp
outsb
push
and
xor
cmc
jnp
and
inc
es
dec
jle
push
pop
push
xchg
xchg
and
and
ret
cmpsl
push
inc
aad
mov
cmpsb
out
pop
xor
cmpsb
js
test
in
xchg
pop
rolb
pop
jo
push
inc
pusha
push
jb
pop
pop
in
mov
or
jns
js
test
xor
and
sbb
lods
and
subb
ret
fistpl
mov
orl
daa
jmp
mov
cmpsb
sub
sbb
out
mov
leave
aad
aam
xor
iret
jmp
jmp
dec
fsubrs
stc
outsl
stos
adc
repz
add
loopne
test
mov
pushf
or
stos
and
mov
shrd
inc
mov
inc
leave
es
dec
mov
ficompl
xchg
dec
jo
mov
lcall
in
sbb
cmp
sub
lds
jb
jmp
sbb
fwait
inc
aad
mov
jecxz
push
xchg
dec
sub
pop
jmp
dec
mov
insb
jge
jns
xchg
adc
in
mov
push
lods
jp
jnp
imul
fstl
sbb
mov
dec
jne
sti
or
inc
das
cmpsb
mov
jp
imul
pop
loopne
push
mov
mov
fsubrs
cmpsl
inc
inc
rcrl
and
fmuls
jno
mov
pop
jno
xchg
jb
adc
cmp
ss
xlat
sbb
in
jmp
roll
pop
pop
shl
in
fldpi
jle
jno
pushf
and
mov
jmp
jecxz
out
xor
xchg
pop
cmp
xor
jp
push
ja
movsl
mov
inc
lods
bound
cmp
enter
mov
xor
mov
dec
stos
jp
aad
stc
dec
aad
fcmovb
leave
icebp
aam
lret
sbb
xchg
inc
insl
mov
ret
cltd
imul
sub
push
cmp
sbb
aas
jno
pop
jmp
mov
pop
xchg
rorb
popa
lret
xor
adc
inc
push
sbb
ror
inc
arpl
sub
iret
pop
pop
sub
fsubp
xor
mov
lods
mov
gs
pop
xor
cmp
mul
push
inc
mov
dec
push
das
dec
iret
ss
push
enter
leave
pop
push
fdivs
pop
sub
mov
xchg
lret
lret
lods
aam
mov
jae
inc
frstor
std
sbb
inc
add
lcall
cmpsb
lea
jmp
ret
pusha
rcll
jecxz
leave
fistl
ret
outsl
aas
and
ja
xchg
gs
xor
jmp
insb
jns
pop
sub
or
icebp
clc
cltd
and
ret
pop
lahf
xor
pop
outsl
mov
sbb
ljmp
divps
or
jecxz
inc
scas
mov
ret
repz
stos
pop
push
lea
mov
push
leave
ret
and
mov
icebp
xchg
pop
mov
inc
sub
jb
addr16
sarl
and
cmp
das
push
add
pop
ret
mov
loop
js
adc
clc
enter
out
and
lcall
dec
sub
sub
iret
fisttps
inc
adc
std
into
setnp
cs
push
popf
pushf
test
mov
ljmp
push
push
push
ret
fisttpll
inc
stos
sbb
push
ficoms
std
push
xchg
mov
jb
dec
aad
vpunpckhqdq
jmp
dec
mov
leave
pop
sarl
int
sbb
aam
mov
test
gs
jp
jmp
enter
test
pop
dec
fsts
push
lret
lcall
cwtl
out
mov
and
rcrl
jmp
inc
jnp
sub
cld
push
in
and
lret
arpl
rcrb
in
adc
pop
jecxz
mov
mov
pusha
pop
mov
lds
pop
dec
pop
adc
push
fdivl
jne
cli
jcxz
push
push
movb
loope
or
ljmp
sbb
dec
sbb
jae
add
sbb
mov
hlt
inc
negl
push
in
sbb
pop
cli
fldt
std
pop
mov
sahf
mov
pop
ret
dec
jecxz
jne
test
and
jp
and
sbb
mov
sub
xor
mov
sbb
lea
aad
rep
xchg
sbb
jmp
and
xor
jbe
jge
xor
and
mov
pop
rcrl
seta
xor
andl
pop
jmp
mov
sbb
leave
jo
hlt
loope
in
ret
testl
fldenv
sbb
testb
xor
push
lods
jecxz
and
mov
jno
into
lret
lds
sbb
fdivrs
dec
arpl
xchg
xlat
cltd
icebp
imulb
or
enter
das
add
aam
fcoms
mov
xor
fistps
rorl
imul
jae
inc
sub
shll
push
adc
fists
in
xchg
out
movsl
lock
adc
lea
sahf
mov
mov
xor
adc
fldt
xor
xchg
xor
mov
aas
and
insl
stc
xchg
push
daa
out
add
cs
fnstenv
loopne
shlb
dec
push
ljmp
ficomps
or
loope
aam
mov
mov
rcr
xlat
cltd
ret
int
test
je
loop
int
out
xor
jp
inc
aam
push
mov
add
out
cld
adc
sub
aam
ret
lods
fnstsw
inc
aad
cltd
daa
cli
movsb
dec
jmp
jns
fiaddl
lods
std
xchg
jb
adc
into
sbb
data16
lret
fstps
inc
dec
movsb
pop
push
pop
aas
out
popa
dec
or
mov
jl
fdivrl
jmp
and
enter
xchg
leave
popa
js
stc
fincstp
rorl
xlat
pop
jmp
add
out
sub
stos
xor
ds
ret
jno
out
and
ja
xchg
fistpll
fildll
dec
inc
imul
pop
dec
sarb
sub
cld
enter
dec
fstpt
push
pop
icebp
cmp
dec
add
je
mov
jmp
popa
sub
out
aad
movsl
bts
pop
call
sub
mov
inc
xchg
sub
mov
ficoml
rcll
roll
adc
xchg
dec
out
adc
inc
lret
mov
insl
lds
xchg
push
xor
data16
ret
cmp
aas
jno
decl
push
shl
adc
leave
ljmp
pop
add
aas
dec
negb
rol
dec
mov
scas
fimull
and
mov
test
and
imul
jae
movsb
push
rcrl
jmp
sub
loope
insl
in
push
enter
push
jnp
les
xchg
push
fbstp
pop
mov
jae
scas
xorl
mov
scas
jb
cld
les
leave
mov
inc
cld
stc
xchg
sub
mov
into
pop
mov
in
fdivs
add
sub
arpl
int
es
mov
and
push
adc
mov
jmp
cltd
dec
int
xor
adc
into
xchg
add
cmp
xchg
rorl
push
clc
lods
stos
inc
push
cmp
repz
push
jns
dec
out
ror
or
adc
shrl
jae
rol
int3
xor
jmp
shrl
cmpsb
push
mov
call
mov
test
jmp
test
lahf
mov
ficoms
or
shrl
dec
les
int
rclb
xchg
jno
cmp
rcl
aam
mov
dec
jo
jle
cmp
test
addr16
cld
mov
outsb
cld
jp
pop
sub
popa
fdiv
cmp
pushf
push
addb
orb
pop
mov
adc
dec
mov
addr16
aaa
mov
dec
sub
shlb
rcrl
jnp
push
cmp
pop
stc
cmp
cmp
push
mov
pop
xor
dec
pop
mov
rcr
pop
ljmp
cmpl
jb
fmul
ret
push
sti
xor
xor
ret
xor
inc
es
dec
scas
lret
sbb
sbb
pop
sbb
add
loopne
stos
pop
ror
lret
jne
push
idivl
nop
xchg
scas
ja
mov
leave
ja
mov
nop
mov
mov
xlat
inc
or
mov
sbb
jecxz
mov
xlat
xor
xlat
stos
aam
sbb
aas
jecxz
das
add
loopne
int3
mov
sub
xchg
and
xor
shl
inc
push
mov
add
loop
jns
add
xor
repz
clc
nop
movsl
mov
adc
dec
mov
lret
sub
int3
mov
inc
cld
ret
sub
int3
push
ljmp
jae
scas
push
xlat
cmpl
out
ror
cs
frstor
rcrl
fcomip
arpl
cmc
test
test
sbb
pop
inc
leave
lahf
jnp
movsl
mov
jnp
and
mov
mov
fcoml
xchg
out
dec
in
out
icebp
lea
in
in
test
adc
mov
xor
xchg
repnz
inc
scas
sbb
xor
mov
mov
mov
inc
leave
jecxz
aaa
data16
pop
xchg
mov
hlt
push
enter
aad
sub
fldl
inc
shlb
push
jecxz
int3
sbb
lds
xor
imul
cmp
gs
scas
mov
mov
inc
cmpsl
adc
fisttpl
insl
sbb
mov
rorb
das
pop
mov
mov
push
dec
ds
mov
jecxz
and
fnsave
and
mov
and
hlt
xchg
int3
jmp
xor
push
mov
xchg
pop
je
sbb
aad
dec
out
push
outsl
adc
hlt
outsl
sub
sbb
fistps
rorl
lret
in
int
jmp
cli
mov
dec
ret
ljmp
cmp
jb
fwait
out
xchg
subb
mov
mov
jo
loop
cs
pop
sar
mov
inc
loopne
rcrb
or
sbb
mov
mov
shr
dec
scas
lret
pop
xor
mov
in
lds
stc
sbb
xor
push
subl
mov
jnp
lcall
les
inc
loope
test
std
dec
push
jecxz
cltd
fidivrl
push
jg
int3
cmp
dec
jle
xor
aas
xor
in
dec
test
faddl
popf
icebp
mov
hlt
pop
lods
in
psubusw
shl
or
pop
jb
mov
sbb
jp
push
and
incl
cs
movsl
pushl
sbb
popf
mov
jnp
xchg
push
popa
gs
mov
push
push
adc
mov
adc
sarl
xor
das
or
out
lret
rolb
xorb
inc
dec
test
jne
movntq
pop
fdivl
andb
test
mov
inc
lds
inc
shl
dec
lcall
pop
jae
fidivl
sbb
pop
push
mov
imulb
inc
cmpsl
arpl
pop
stc
pop
inc
jbe
cltd
jns
out
cmc
xchg
popf
imul
int3
inc
mov
hlt
sub
mov
add
xlat
mov
ljmp
mov
aam
loope
jle
sub
int
popf
into
loope
mov
push
loope
sbb
leave
and
scas
into
aaa
or
lret
mov
dec
sti
fld
js
stos
xorl
dec
aas
sbb
rolb
push
out
rolb
gs
movsb
dec
cld
or
dec
sbb
mov
and
sub
das
push
fbstp
xor
dec
test
outsl
inc
jnp
test
ss
jnp
cmpsb
fstpl
xchg
cld
out
or
lods
pop
inc
sbb
addl
sbb
sti
sbb
sub
subb
pop
inc
test
insb
fidivrl
dec
mov
pop
shl
inc
outsl
pop
cmp
imul
pop
mov
aam
mov
stos
lret
cmp
mov
inc
loope
pop
out
out
cltd
pop
fcmovb
int
and
mov
sbb
sub
push
enter
sub
sbb
sub
sub
hlt
data16
mov
incl
aas
push
pop
fsubrs
push
cltd
inc
cltd
pop
adcl
mov
mov
jmp
cwtl
inc
or
lahf
leave
cltd
adc
imul
adc
repz
mov
ret
sub
into
int3
inc
push
nop
stos
xchg
shrl
das
cwtl
loopne
lcall
fwait
dec
mov
mov
and
shrl
push
aad
mov
enter
jb
rcrb
lods
xor
xlat
cmp
adc
bound
cmp
jp
ja
and
dec
ficoml
push
rorl
xchg
rcrb
lret
add
icebp
inc
inc
lcall
jp
jb
dec
xor
adc
adc
leave
xchg
xchg
rcr
icebp
pop
sar
out
cli
adc
and
cli
sbb
fnsave
int
fmuls
pop
out
es
and
inc
shll
aam
scas
and
sbb
insl
cmc
fcoms
arpl
inc
dec
push
sbb
aaa
cmp
dec
out
movl
xlat
sbb
mov
sbb
pushf
mov
insl
sbb
in
fwait
and
or
cmp
das
jmp
jp
fisttpll
mov
cmc
das
int
into
iret
aas
mov
sbb
xchg
add
mov
add
xchg
pop
push
mov
std
movsb
imul
testl
aas
adc
or
jnp
pop
add
fidivrs
out
add
fidivrs
sbb
leave
sti
sbb
out
insl
push
sub
fstl
xchg
iret
out
ret
and
stos
xchg
inc
push
addr16
mov
andl
out
add
xchg
and
div
les
fnstsw
sbb
xchg
pusha
sub
or
mov
dec
or
add
dec
mov
leave
jo
mov
adc
inc
cmp
ljmp
movsl
sbb
popa
rcl
les
lahf
das
mov
cmpsl
das
xchg
fwait
sbb
add
pop
xchg
xor
pushf
sti
sbb
leave
xlat
sbb
inc
and
lahf
pop
inc
sub
or
mov
fdivl
ret
clc
fndisi(8087
lret
and
cltd
cmp
lret
rorl
insb
sbb
negl
mov
lods
pop
xchg
mov
lods
icebp
mov
imul
aaa
fcompl
rcr
gs
push
sub
clc
pop
das
leave
imul
int3
cmp
aas
jge
jne
inc
sbb
xor
shll
pop
decb
loope
push
push
jecxz
loop
mov
mov
mov
push
and
les
sub
dec
jl
dec
inc
adc
paddw
lahf
adc
jge
les
in
add
in
int
js
sbb
in
frstor
xor
jecxz
hlt
or
pop
xor
sbbl
or
stos
push
popf
stos
xchg
sbbl
push
int
xchg
push
addl
int
xchg
and
sub
ja
inc
dec
sbb
inc
mov
in
shrl
lret
jmp
and
scas
fwait
ds
addl
sbb
xchg
gs
arpl
mov
mov
dec
fistpl
lds
sbb
mov
dec
cmp
xor
neg
jge
imul
add
shll
dec
pusha
dec
cld
scas
sbb
mov
jmp
sbb
sbb
les
fldt
cmc
or
std
xor
movaps
jb
scas
push
xlat
mov
xorl
and
add
mov
fbld
xchg
push
out
and
xor
inc
adcl
pop
add
test
out
pop
loopne
mov
dec
xor
repz
shlb
je
popa
pop
fs
loop
jne
add
dec
stos
out
js
cmp
cmpsb
out
push
mov
std
sti
sbb
mov
js
and
lret
pop
loope
aas
aad
or
stos
mov
xor
jne
push
dec
adc
jg
inc
int
mov
jecxz
mov
out
cltd
push
mov
xchg
jns
movsl
dec
sbb
sub
mov
pop
mov
leave
xchg
xor
push
xor
jl
ljmp
and
xlat
ret
cmpsl
stos
stos
sbb
or
fidivrl
ret
inc
mov
cmp
mov
leave
add
mov
inc
sbb
cmpsl
xor
jle
lss
cmp
scas
dec
fadds
imul
jno
or
sbb
out
outsl
mov
ret
push
aad
fwait
jmp
pop
or
ja
clc
arpl
sub
test
cld
mov
sar
addb
pop
fstpl
in
xor
test
shll
pop
ret
cmp
iret
xchg
in
rcrl
inc
int
xchg
sbb
xchg
fstpl
and
pusha
in
bound
fdivp
jmp
test
repz
lods
mov
lea
test
out
jecxz
xchg
test
scas
repz
or
xor
pop
daa
test
adc
popa
aas
adc
mov
adc
jns
sub
inc
push
add
aad
movq
dec
rcl
insl
xor
insl
decb
imul
sbb
stos
mov
leave
les
jne
mov
pop
and
fsubs
dec
inc
fs
mov
sti
dec
outsl
dec
insl
dec
scas
int
mov
andb
adc
jecxz
addr16
popf
sbb
pop
adc
pop
icebp
or
out
mov
pop
pop
aad
fldcw
orl
arpl
outsl
add
mov
sub
pop
push
cld
rcr
daa
mov
pop
mov
push
aas
aad
sbb
stc
lods
stos
dec
fidivrl
or
xchg
xchg
fcoml
jbe
outsl
stos
lret
and
scas
cltd
jecxz
cltd
jecxz
imul
mov
cmc
iret
jno
xchg
mov
or
mov
pop
sbb
or
dec
mov
mov
push
hlt
sub
movsl
push
mov
mov
ret
jge
movsl
rcr
and
cmp
addr16
lock
js
mov
dec
lcall
sbb
jmp
lcall
and
push
stos
mov
mov
push
xchg
out
lods
and
adc
jmp
enter
inc
sahf
sub
dec
insl
mov
loop
xlat
je
lcall
lods
cmc
pop
int
stc
fcmovnbe
cmc
and
stos
push
lds
mov
loopne
add
mov
aad
pop
mov
stos
adc
pop
movb
jb
ret
dec
jmp
cs
dec
sbb
dec
mov
mov
lahf
repz
shl
mov
mov
push
ret
jno
or
dec
fidivl
and
out
das
sti
loopne
push
jecxz
xchg
rorl
inc
ret
nop
jge
xchg
jmp
fmul
pop
push
dec
xor
push
mov
movsl
fucom
adc
cs
fstps
sbb
sbb
sbb
dec
mov
sahf
mov
push
jg
add
sarl
leave
aas
inc
mov
jb
movl
in
out
ds
pop
cli
pusha
test
clc
in
mov
ljmp
test
sub
jl
lret
push
pop
xor
sahf
fs
mov
or
sub
dec
test
popa
mov
xor
and
out
bound
daa
sbb
insb
iret
or
cmpb
jne
rcrl
in
jne
jne
outsb
jb
mov
or
or
dec
pop
push
out
push
dec
cmp
inc
or
daa
int3
arpl
lret
sbb
pusha
imul
ret
push
dec
xchg
or
fsubl
sbb
sbb
lahf
xor
popa
inc
dec
iret
std
jb
lods
xchg
sbbl
mov
inc
fcmovnu
push
test
pop
imul
and
sbb
pop
lods
leave
shl
jbe
ret
out
lret
dec
inc
jl
pop
ljmp
xchg
inc
sub
mov
repnz
test
or
and
inc
sub
iret
add
outsl
fbstp
sbb
ret
int3
xor
and
mov
and
dec
fcomps
sbb
xor
xchg
shrb
sarb
push
arpl
pop
xlat
int3
push
or
cs
pop
sbb
enter
xchg
rcl
mov
mov
push
pop
fldl
sbb
xchg
mov
mov
sub
jbe
cmp
nop
push
jmp
loope
xor
xor
stos
sub
mov
outsb
rcll
push
xor
fidivl
dec
cs
stos
cmp
sbb
mov
int
push
mov
test
shufps
fwait
jmp
pop
jecxz
push
cmp
cltd
add
inc
xor
icebp
add
add
std
iret
mov
scas
lods
cmp
xlat
sahf
test
outsl
scas
push
fcmovbe
lds
ret
cmp
ret
lods
into
pop
mov
add
mov
stc
or
popf
mov
jb,pn
lods
rcrb
outsl
xlat
cli
adc
std
xchg
inc
das
jecxz
lcall
cltd
aam
mov
mov
xchg
and
flds
xchg
jg
push
mov
fiaddl
in
fidivl
leave
nop
xchg
outsl
inc
nop
arpl
das
sub
fnsave
mov
adc
repnz
inc
scas
mulb
jb
stc
fbld
pusha
pop
pop
subl
mov
fsubs
popa
mov
fidivrl
cmp
out
mov
aas
hlt
pop
jns
es
add
inc
les
pop
jecxz
mov
stos
fs
pop
and
aas
cli
sub
lea
push
gs
sub
jp
out
in
fucomi
cli
push
mov
outsl
daa
mov
xchg
leave
mov
in
push
pusha
jg
aam
jmp
imul
scas
pop
pop
imul
pop
inc
xchg
popf
addr16
xlat
xor
sbbl
mov
sbb
cltd
fdivs
mov
mov
cmp
loope
ds
and
andb
sbb
rorb
and
add
lret
push
addb
aam
stos
and
cmpsl
xchg
int
sub
sbb
add
out
lds
and
fcomi
add
mov
or
jnp
xchg
sub
lret
mov
fistpll
xchg
mov
sbb
int
add
push
jge
mov
cmp
push
inc
jmp
dec
push
inc
and
sub
mov
xor
xchg
pop
jno
mov
sbb
aas
inc
pop
jg
mov
rcl
pop
test
jno
sbb
mov
ror
cmp
mov
xor
test
mov
lea
lretw
cltd
es
fcoms
inc
loopne
mov
test
xor
inc
dec
and
or
fsubs
icebp
mov
cld
xchg
ret
ret
leave
dec
ja
mov
int
adc
cmp
add
pop
iret
loop
hlt
sbb
ret
mov
cmp
lret
fcomps
add
pop
ja
xchg
jne
push
cmp
lret
aad
test
and
lea
addr16
rcll
loop
fwait
in
inc
fiaddl
jnp
loopne
mov
dec
jno
inc
pop
push
popa
daa
or
aam
or
add
cwtl
sub
lods
jecxz
mov
cmpsb
test
ljmp
fistl
sbb
mov
test
xor
insb
jge
xchg
ret
mov
add
jecxz
out
in
jnp
mov
jne
push
les
lret
lods
test
jnp
aam
daa
add
les
sbb
scas
and
mov
nop
mov
pop
aad
test
andl
dec
jp
gs
inc
jge
setnp
out
cltd
pop
dec
jge
adc
bound
and
xor
leave
mov
stos
mov
and
movsb
jp
mov
or
in
aam
push
cld
int
in
fildl
addl
lahf
das
push
sbb
push
sbb
fstpt
sbb
ret
push
push
cmpsl
or
jl
negl
inc
in
roll
or
sub
inc
lods
pop
push
xlat
mov
dec
add
leave
sbb
or
cld
push
jo
les
inc
int
mov
aam
icebp
popa
push
ret
xchg
jae
fidivrl
imul
fwait
and
pop
aas
hlt
push
and
or
ja
and
insl
jno
xchg
sub
or
jmp
scas
sub
adc
call
xlat
cs
cmpl
push
dec
or
and
pop
pop
idivl
push
gs
lcall
xchg
iret
imul
scas
pop
lock
push
ds
test
and
add
and
add
sub
outsl
ret
in
inc
call
rolb
fmuls
cli
jg
push
sti
fsubrl
sub
test
in
test
push
sbb
mov
cmp
mov
pop
pop
xchg
das
jmp
sub
pushw
lea
neg
push
mov
jmp
push
xchg
je
xor
cmp
push
xlat
sub
mov
pop
sub
push
outsl
push
jns
fstps
jno
bound
sahf
imul
sbb
mov
cld
and
lcall
xchg
sub
mov
int
fwait
cmc
popa
test
sub
fdiv
jno
arpl
xchg
mov
frstor
shrl
dec
sbb
pop
mov
mov
and
pop
xchg
std
add
repnz
stos
mov
jnp
ljmp
std
or
lret
xlat
es
mov
push
xchg
jns
xor
lret
dec
cmp
in
stc
les
add
sub
push
push
or
xchg
xor
movsl
mov
and
sub
cmp
mov
and
aas
mov
mov
out
xchg
pushf
test
sbb
test
jecxz
xchg
rolb
loopne
cwtl
add
push
lods
ss
stos
add
aam
dec
xchg
cmp
ret
leave
ds
pop
ss
enter
jns
mov
lds
xor
ffree
aam
int
lahf
int
inc
stos
inc
and
addr16
mov
or
data16
imul
and
ficompl
stos
jb
xlat
cmp
jb
rcr
push
sbb
pop
mov
in
and
repnz
and
xchg
lcall
and
mov
rcll
fcmove
rcrl
leave
pop
mov
ror
pop
lcall
adc
mov
fnstcw
lods
sbb
icebp
pop
mov
mov
out
push
dec
out
sbb
leave
mov
sub
pop
jge
out
pushf
int
mov
sbb
push
in
cld
mov
icebp
jbe
inc
jne
sub
hlt
icebp
imul
jae
icebp
loope
lret
fcom
dec
fiaddl
lds
sbbl
pop
je
bound
sti
jb
mov
sbb
testl
movb
out
jne
and
mov
mov
fisubl
cmp
and
xchg
ret
mov
inc
rclb
insl
in
sbb
jl
xchg
dec
sbb
jns
stos
bound
pop
ja
leave
sub
pop
cmc
les
aam
lods
sbb
cmpsl
mov
dec
fcoml
xchg
jmp
pushf
add
rcrl
add
mov
fucomip
lcall
push
pop
out
and
or
in
stos
outsb
lret
fmuls
subl
iret
hlt
shr
addr16
xor
adcl
test
mov
ljmp
stos
andb
add
rol
jecxz
out
push
and
popa
and
js
rcl
pop
and
inc
cmpsb
sti
pop
les
hlt
lods
ret
das
xchg
lods
push
mov
jo
sbb
iret
push
pop
pop
dec
xor
cwtl
ret
sbb
mov
inc
mov
pop
repz
cs
je
push
fisubl
cmpsl
int
pop
push
jno
pop
fwait
xchg
xchg
stos
cmp
andl
in
mov
cli
out
mov
fdivrl
jne
ss
mov
pop
dec
lea
les
pusha
push
ret
test
dec
jmp
hlt
sbb
subl
add
repz
stc
cltd
int3
in
mov
and
and
and
sub
jae
inc
shll
jle
imul
push
and
inc
adc
fnstenv
xor
xor
popf
loope
fimuls
fldt
sti
shl
ds
pop
dec
mov
aam
xchg
sbbl
mov
cltd
fsubs
add
mov
sbb
fisttpll
push
mov
jo
or
push
cmp
ss
xor
repnz
sahf
jg
sub
sti
test
je
hlt
dec
rclb
jg
addr16
mov
and
xor
inc
stos
lret
imul
add
inc
or
movsb
int3
jae
xchg
repnz
sarl
cmp
xchg
jecxz
fmuls
iret
sbb
xchg
mul
insb
sahf
adc
mov
sub
mov
sbb
loope
cwtl
repz
aas
leave
ret
push
dec
arpl
xchg
xor
pop
sbbl
inc
cmc
inc
xor
jecxz
inc
testl
pop
jmp
lds
jo
xor
inc
insl
fstps
sbb
arpl
xchg
sbb
or
xor
adc
hlt
inc
pop
xchg
bound
test
push
and
rolb
sub
mov
sti
ror
lds
xchg
cmpsl
insb
cmp
xlat
hlt
xlat
fldcw
int
and
rolb
dec
xor
dec
rcl
filds
mov
testl
push
pop
movsb
sbb
dec
jmp
push
daa
pushl
ss
daa
pop
clc
ror
mov
mov
add
fnstenv
hlt
add
sbb
mov
fnstcw
adc
ret
hlt
test
jmp
cmpl
xchg
das
sbb
daa
ret
bound
in
out
lds
and
adc
or
nop
push
imul
jb
orb
lret
push
roll
ret
out
sbb
aas
push
mov
rorl
xchg
cmpsl
fmull
xchg
shrb
mov
add
test
shlb
pop
rcr
mov
sbb
in
cld
adc
sub
ljmp
in
fmuls
dec
mov
in
jmp
sti
sarb
imul
js
imul
outsl
pop
push
xchg
push
pop
jmp
test
scas
les
lret
pop
and
test
xor
lods
pop
xchg
mulb
xchg
cwtl
fnstsw
sahf
or
in
mov
mov
rol
imul
cmpsb
dec
imul
loop
jne
ja
into
mov
cmp
jmp
sti
mov
ja
les
add
aaa
sarb
aas
jns
sub
add
sub
jmp
and
mov
popf
or
mov
ds
imul
push
aam
push
and
insb
mov
cli
cmp
hlt
mov
test
sbb
loop
in
dec
arpl
mov
mov
sti
and
push
mov
test
filds
sbb
pop
cmp
rcrb
aad
shl
popf
xor
or
lret
dec
push
das
int
repnz
fmuls
pop
xor
cmp
shlb
ret
cmp
sub
adc
test
xor
cmp
xor
push
sti
inc
mov
push
or
mov
xchg
shr
int3
xor
jnp
in
adc
fmul
sub
test
out
jg
mov
adc
data16
daa
add
ret
fstl
fstps
popa
pusha
fidivl
or
test
rcrl
lds
sarl
and
shll
fucomp
or
mov
js
sarl
ret
fdiv
jnp
lea
loope
in
push
mov
push
mov
xchg
mov
mov
push
out
iretw
ljmp
jecxz
andl
jle
mov
inc
fsub
fcomps
and
sbb
int
xchg
jecxz
fisubl
stc
xchg
mov
test
sti
mul
cltd
dec
imul
popf
int3
mov
xlat
sbb
into
mov
jo
xchg
fpatan
mov
mov
add
push
adc
push
sub
in
popa
repz
mov
pop
xor
fwait
mov
std
lret
ljmp
shrl
inc
mov
mov
adc
dec
jmp
mov
cmp
mov
fsubr
sub
or
mull
sbb
ja
ficompl
mov
fwait
or
dec
pop
inc
in
jecxz
jmp
sahf
icebp
pop
leave
sbb
or
mov
xchg
ror
ds
sti
je
mov
cli
jne
ds
fcomps
pop
xor
push
pop
test
lds
cld
pop
ss
push
xlat
push
xorb
xchg
lea
subl
mov
popf
and
push
sahf
ret
and
aam
mov
push
add
arpl
inc
mov
in
cli
dec
mov
rcrl
std
movsb
inc
lahf
js
in
notl
or
test
and
daa
push
jmp
jns
aas
jmp
pushf
mov
cwtl
jg
ja
or
loope
aad
pushf
sub
out
ret
cmpsl
in
mov
cld
in
dec
popa
dec
jmp
ss
mov
jecxz
jecxz
push
in
push
imul
iret
imul
lds
cmpsb
mov
jmp
fucomi
mov
dec
and
imul
jle
inc
jle
mov
jae
test
inc
lods
icebp
popa
push
mov
rorb
sbb
es
sbb
xor
lds
inc
inc
cmp
xor
stc
mov
fnstcw
repz
loope
fsts
jne
pop
or
mov
scas
fbstp
lods
jecxz
push
fiaddl
fistl
clc
arpl
jae
fs
dec
fdivrl
test
hlt
dec
mov
loop
ljmp
fnsave
jmp
loopne
lea
and
inc
test
pop
inc
les
xlat
sbb
fldlg2
inc
pop
jno
ret
jns
data16
dec
or
stos
cmp
ror
and
mov
test
rcr
cld
and
popf
sti
mov
xor
fcom
rcrl
sub
iret
out
adcb
lds
dec
fcmovnu
sahf
loop
or
leave
mov
dec
shll
cwtl
faddl
cld
int3
shr
inc
sti
leave
push
dec
xor
cltd
inc
subl
loopne
fwait
xlat
add
roll
xor
popf
stos
mov
sbb
ljmp
inc
mov
lret
cmp
jg
pop
arpl
inc
mov
aad
inc
xor
movb
jmp
es
mov
in
xor
inc
xchg
rcrl
add
cmp
loope
repz
in
cmp
ret
mov
xchg
cmpsl
push
int
mov
xor
jecxz
stos
inc
sbb
loop
test
xor
fwait
push
add
mov
daa
or
imul
in
mov
or
lahf
mov
cltd
testl
shll
push
sbb
mov
in
jecxz
imul
ret
xchg
inc
dec
cs
ret
out
cmp
pop
fs
push
xor
pop
jno
inc
sub
add
and
rcr
sbb
jecxz
push
sbb
movsb
xchg
pop
add
sbb
scas
push
inc
inc
and
imul
arpl
adc
lcall
pop
movsl
jmp
out
insl
shll
fistl
push
cmp
int3
jmp
cli
in
mov
or
pop
pop
fsubrs
sub
add
xchg
pop
mov
roll
mov
inc
fisttpl
push
inc
cli
out
inc
sbb
int
push
int
push
outsl
and
mov
aam
fwait
sbb
jne
inc
jmp
jns
mov
out
pop
out
push
imul
ljmp
addr16
xchg
fcomps
fiaddl
push
scas
std
cmc
cltd
test
cmp
xorb
fnsave
aad
rcrl
sbb
test
jno
adc
push
insl
and
fwait
mov
inc
outsl
imul
fcomps
jmp
data16
frndint
jge
shll
jmp
fistps
enter
push
or
jecxz
cli
mov
leave
xor
mov
repz
xchg
mov
insl
es
xchg
pop
push
repnz
aaa
fcmovbe
mov
test
icebp
jge
subb
cld
mov
hlt
or
mov
int
xchg
icebp
je
adc
fs
sbb
jns
xchg
popa
and
xor
aaa
stos
jno
push
dec
outsl
cld
jle
outsl
pop
cmp
data16
outsl
mov
addb
es
dec
inc
mov
dec
outsl
lea
pop
movsb
fsubp
push
cli
or
in
pop
dec
sbb
hlt
je
mov
jmp
pop
cmpsb
cmp
dec
push
imul
mov
dec
jbe
cwtl
mov
out
mov
arpl
scas
stos
faddl
push
and
sub
les
jg
dec
fstpt
xchg
test
imul
jns
dec
xchg
cld
lea
push
xchg
jp
push
sub
int
lcall
nop
pop
mov
js
sbb
fldcw
pop
mov
test
dec
mov
enter
jns
and
mov
inc
xor
cltd
ds
ret
jmp
test
push
enter
or
cmp
sti
popf
aam
push
pop
xlat
ss
stos
lret
xlat
daa
xor
sub
clc
sub
fsubr
jno
xchg
cmpl
int
push
popf
xor
adc
fwait
test
arpl
popf
sbbl
sbb
push
out
es
jae
and
xchg
icebp
pop
mov
or
int
cltd
push
or
pushf
cmc
pushf
jmp
sbb
mov
ret
jl
in
lods
pop
sbb
pop
pop
jmp
xor
mov
loop
jge
enter
cmc
inc
mov
xchg
pop
lods
jns
xchg
outsb
inc
jmp
fcmovu
and
sub
leave
mov
push
icebp
stos
test
add
leave
jecxz
sbb
repnz
inc
mov
lods
mov
lcall
fldcw
sub
xor
aad
out
cmp
mov
rcll
xlat
orl
in
adc
sbb
push
jae
cli
mov
mov
adc
call
loopne
repnz
pop
fs
lds
test
jecxz
pop
xchg
xor
ljmp
dec
lahf
push
push
lret
arpl
int
mov
mov
xchg
icebp
push
cmp
leave
and
or
stos
fnstenv
jmp
das
jge
and
or
out
mov
sub
outsb
bound
and
stos
arpl
ret
or
popa
or
sahf
test
in
js
pop
xchg
sub
popa
hlt
inc
inc
jge
jp
in
xchg
xor
sub
loope
mov
push
xorl
mov
mov
mov
arpl
ret
xor
mov
jbe
fsubrl
pop
fisttps
mov
push
mov
xor
inc
stc
push
dec
sbb
mov
repz
out
pop
jl
ficomps
lret
add
inc
push
lds
and
rolb
mov
jmp
or
lea
push
fcompl
push
stc
sti
rcrl
in
dec
int
ret
mov
lret
mov
sbb
leave
out
push
adc
ljmp
inc
leave
pop
dec
jbe
sbb
fnstcw
out
dec
int3
inc
pusha
ja
jmp
push
idivb
fcmovnbe
sbb
movsl
test
xor
mov
imul
sahf
cmc
cltd
jle
cmpsl
mov
mov
and
sub
mov
cmp
cli
add
or
stos
and
or
insl
adc
int3
loop
daa
fimuls
stc
push
ljmp
dec
cmc
loopne
les
sbb
lods
je
xchg
or
jp
push
pop
adc
jp
aam
ret
loop
loope
xchg
stos
fsubr
xor
in
jp
jmp
sbb
lea
jecxz
sub
out
fisttpll
and
sub
lahf
fstps
sub
inc
mov
stos
call
push
sub
and
mov
imul
std
lret
aaa
popl
jl
mov
es
mov
sahf
std
fisttpl
xor
mov
jecxz
sub
jmp
pop
mov
mov
shl
mov
bound
pop
sbb
mov
pop
negl
sub
testl
lock
push
aam
and
and
cli
push
lahf
jnp
lods
je
cmp
icebp
clc
jecxz
mov
aam
inc
in
aam
sbb
nop
add
insl
inc
std
loope
push
int
inc
daa
xchg
scas
push
mov
xor
inc
mov
push
jmp
fstpl
daa
ret
ss
out
xchg
dec
nop
cmp
jo
pop
test
lods
cwtl
lods
jb
hlt
lods
faddp
sti
stc
loop
sarl
movsl
push
sbb
lcall
addr16
mov
cld
dec
fmul
dec
insb
cmp
jle
and
js
in
gs
dec
les
xor
push
test
sbb
popa
mov
in
repz
and
pop
xchg
or
or
mov
mov
jp
js
push
mov
cwtl
paddusw
cmp
xchg
push
sbb
fisttps
enter
jmp
add
mov
insl
enter
sarb
repz
dec
out
hlt
sub
nop
repz
sbb
cld
mov
jae
dec
mov
mov
ja
pop
xchg
mov
push
cmp
jmp
mov
imul
jmp
sbb
mov
dec
lcall
lds
test
jne
divl
push
ffreep
and
xor
imul
cmp
mov
sbb
subl
cltd
xor
cltd
and
and
iret
movsb
add
test
and
inc
inc
rcr
es
sbb
out
mov
xchg
sub
lds
and
push
xchg
lods
xlat
xchg
fs
leave
stos
addr16
dec
ror
fsubrl
sti
inc
mov
out
or
cmp
fsubr
pop
mov
or
push
je
js
add
ja
pusha
push
rep
jnp
mov
movsb
inc
fsubrs
mov
lea
das
in
mov
mov
cmp
sbb
mov
cmp
lret
sub
hlt
add
es
stos
rcrl
cmp
xchg
mov
ret
out
inc
scas
sbb
mov
mov
xchg
bound
sub
inc
repz
in
mov
inc
mov
xlat
xchg
out
int
sbb
push
adc
or
add
lock
aam
cs
sarb
cltd
shl
inc
and
ljmp
fistpl
add
popf
push
add
mov
sbb
sbb
xlat
popf
xor
fisttps
jnp
sbb
xor
and
dec
and
and
mov
dec
push
sahf
mov
outsl
shrl
fsubrl
int3
rcl
push
test
inc
in
sbb
aad
stc
mov
cmpsb
lea
lock
in
inc
lods
lcall
sub
int3
imul
scas
fsubrs
std
fdivrl
stos
movsl
xchg
les
sub
mov
pop
sti
jnp
lret
in
leave
xor
jo,pn
pusha
ljmp
sbb
es
repz
jno
mov
adcb
xor
sarl
js
leave
pop
xchg
jecxz
in
jmp
ret
jb
cltd
lea
stos
aaa
repnz
jmp
aam
mov
or
lods
mov
push
or
dec
adc
rcrl
mov
pop
je
xor
movsb
lcall
aam
gs
out
jmp
lods
push
cmp
movsb
mov
mov
xlat
call
sub
jecxz
loope
stos
rclb
stos
or
jno
sub
mov
adc
in
mov
xchg
jp
push
dec
push
das
pop
fstpl
aaa
xchg
outsl
push
int3
pop
out
cltd
pop
hlt
mov
daa
leave
pop
dec
cltd
push
lcall
or
test
fs
std
push
cmpsb
ja
sub
xchg
mov
or
mov
sub
mov
les
mov
xor
xchg
dec
iret
lock
aas
sti
lock
adc
xchg
push
repz
and
jnp
aam
and
or
push
and
xchg
cmp
ja
aam
xchg
call
fs
and
jb
sbb
dec
test
or
pop
popa
sub
es
orl
add
inc
shll
lret
sbb
mov
sbb
popf
ja
xchg
adc
fwait
xor
cmpsb
dec
stc
stos
aas
push
repnz
int3
and
sbb
and
dec
pop
pop
leave
popf
lcall
xchg
ficompl
dec
xor
ljmp
mov
sub
dec
ljmp
je
inc
imul
sbb
in
stc
ret
aam
jecxz
cmpsl
jmp
xor
jl
int
cld
ret
jle
call
adc
mov
arpl
or
add
fucomp
les
hlt
fs
test
in
mov
mov
scas
loopne
mov
popf
ss
lods
push
stos
pop
and
lcall
outsb
jnp
or
and
jno
stos
dec
mov
mov
adc
push
xor
int3
or
mov
pop
ja
xchg
xchg
adc
xchg
sti
and
movsb
sub
call
mov
sbb
cs
imul
outsb
dec
dec
rcrl
ljmp
movsb
pop
stos
jnp
inc
mov
sbb
gs
test
aaa
pop
lock
test
pop
dec
push
fnclex
mov
rorl
aaa
push
inc
lds
fstpl
dec
fcoml
dec
or
xor
fildll
mov
addr16
dec
in
scas
call
adc
out
adc
scas
fnstsw
out
cmp
shll
rolb
mov
cmpsl
jne
enter
cltd
pop
pop
sarb
and
imul
sbb
xlat
and
mov
xlat
push
sbb
and
shrl
fistps
aam
cltd
fcoms
mov
xor
sub
xchg
bswap
out
mov
xlat
popf
pop
inc
inc
inc
xchg
out
imul
pop
shll
andl
add
jecxz
mov
aad
dec
or
aas
mov
inc
mov
inc
ja
addr16
aam
add
lods
repz
and
hlt
loope
mov
xchg
push
or
pop
lods
add
pop
mov
rcrb
dec
and
xlat
cmpsl
mov
dec
mov
test
xlat
jns
test
pusha
mov
xchg
push
stc
ret
imul
lods
mov
into
icebp
loope
and
loope
in
shl
insb
and
fisttps
push
jecxz
test
mov
sbb
fnstenv
pusha
lock
jno
pop
insb
or
testl
add
js
rcrl
dec
fdiv
fucomi
xchg
jo
lock
clc
push
pop
sub
adc
repz
xor
mov
jmp
dec
repz
shrb
mov
popa
sbb
leave
sub
xor
and
pop
aad
xor
aaa
arpl
jmp
pop
xchg
je
sbb
shrl
out
es
bound
jno
mov
pop
ret
je
nop
fmull
movsb
rolb
adc
jno
or
data16
dec
mov
xor
sub
leave
sbb
sahf
add
les
and
stos
dec
push
outsb
push
add
ljmp
out
add
pop
scas
pop
mov
mov
sub
push
fildl
lcall
in
sbb
fcoml
out
xchg
cmp
adc
push
add
sbb
aad
sarl
and
mov
into
enter
pop
fcmovne
int
ret
stos
sbb
pop
sbb
imul
aaa
mov
sub
ss
and
cltd
dec
stos
jbe
sbb
sbbb
xchg
loopne
adc
pop
mov
xchg
mov
pop
testl
or
mov
mov
mov
sarb
sbb
mov
mov
insl
leave
sbb
sbb
push
ja
mov
and
mov
sbb
push
push
mov
add
dec
pop
or
es
shll
inc
test
sbb
gs
xor
addr16
std
test
push
js
ds
adc
xor
fistpl
mov
in
or
xchg
mov
inc
mov
cmp
push
jmp
jmp
ja
jnp
lock
sub
adc
and
outsb
int3
decl
cmc
mov
dec
lahf
ljmp
xchg
iret
das
imul
push
and
movb
xor
fcomi
cltd
and
in
push
mov
idivb
fcoms
fwait
lock
ret
dec
sbb
out
loope
xlat
insb
sahf
es
pop
cmp
cmp
aam
ret
mov
sbb
sbb
out
lret
cmp
xor
or
fisubl
push
subl
xchg
or
leave
ja
out
adc
lret
fstpl
cli
dec
fsubl
mov
pop
test
dec
mov
add
xlat
dec
out
mov
xchg
shrl
int3
add
adc
mov
je
sarl
mov
xor
fists
rolb
fdivrl
mov
pop
mov
and
pop
xchg
xchg
xchg
mov
sbb
adc
das
and
fistpll
pushf
leave
fsubl
mov
jl
out
xor
rol
int
dec
cltd
sbb
mov
cmpl
jmp
push
jno
cmp
cmpb
sti
xor
pusha
imulb
mov
ss
insl
mov
pop
add
dec
adc
sbb
out
stos
sti
rol
jge
repnz
push
fcmovnb
dec
dec
cld
adc
das
test
jge
lret
jae
inc
xlat
cmp
dec
fildl
xor
rcrl
cltd
lock
shll
out
xor
roll
adc
and
jg
pop
std
push
dec
adc
sbb
pop
mov
and
sbb
int3
sub
lods
not
and
mov
insl
xchg
sbb
ljmp
aas
push
fsts
or
mov
sbb
push
mov
push
cmp
fsubs
fildll
stc
inc
inc
data16
iret
iret
lcall
add
sbb
lahf
and
xor
test
and
jl
lods
fildl
enter
das
dec
fldt
lret
xchg
icebp
sbb
roll
or
or
gs
jmp
mov
dec
pop
popa
jmp
dec
arpl
or
or
and
int3
mov
inc
loopne
jge
hlt
ret
repz
push
sub
fimull
pop
jo
in
xor
push
popa
sbb
test
imul
push
cmp
addr16
jcxz
or
cmpsl
sbb
aas
stc
std
aad
cmp
sub
xchg
xchg
fwait
add
add
inc
sbbb
pop
ficompl
dec
cmp
xor
inc
jae
out
jae
mov
dec
pop
shlb
sbb
lcall
jg
mov
aas
jne
jecxz
mov
sbb
mov
or
mov
inc
add
mov
sti
xor
xor
fcmovnu
js
loop
and
std
push
in
mov
adc
and
lods
mov
jl
push
sub
mov
dec
mov
sub
ss
jne
leave
xor
outsb
jg
mov
shl
outsl
ja
pushf
pusha
popf
mov
int
and
dec
mov
ret
sbb
jno
lahf
jle
add
hlt
xchg
mov
call
aad
test
ds
fnstsw
xor
jo
lahf
int3
les
test
imul
xor
xchg
push
stos
dec
pop
sbb
std
dec
jp
dec
cmp
and
into
outsl
mov
inc
push
fisubrl
fcompl
jge
mov
add
inc
push
mov
fucomp
ret
or
ljmp
mov
mov
jmp
mov
sti
mov
in
cmp
mov
cmp
adc
rolb
mov
mov
mov
imul
leave
pop
dec
out
mov
inc
inc
lds
xchg
cs
add
cld
xchg
cmp
xchg
mov
inc
push
mov
pop
cmp
push
jo
dec
jbe
jmp
cmpb
mov
pop
in
jg
inc
cmc
test
in
dec
xchg
mov
ja
dec
cmp
push
jecxz
ret
xorb
cli
sbb
mov
xchg
and
sti
or
mov
mov
scas
out
les
and
xchg
cs
sbb
fldenv
std
xor
sbbl
push
fdivr
sbb
mov
mov
inc
lcall
mov
jnp
popf
dec
xchg
orl
mov
je
jb
leave
add
lahf
sub
or
popf
xchg
in
and
mov
ret
mov
enter
mov
jbe
inc
aas
dec
testl
std
pop
push
in
frstor
lahf
lods
sbb
test
dec
ret
out
pop
pushf
mov
jmp
cltd
outsb
mov
fmulp
inc
loopne
fwait
push
xchg
imul
ret
jmp
inc
movsl
sbb
cwtl
lahf
out
in
mov
xchg
xchg
fwait
fs
mov
and
pop
xor
imul
repz
fs
sbb
push
outsl
in
mov
add
inc
pop
sbb
xchg
xchg
mov
stos
xor
cmc
xor
fdivrs
loop
adc
aam
jns
in
leave
sbb
leave
fdivs
rolb
imul
mov
fsubs
dec
sub
mov
repz
xor
inc
fnstsw
bound
sbbl
mov
out
mov
and
mov
stc
mov
rcr
sbb
outsl
pop
sbb
sbb
xor
loopne
xor
imul
mov
sbb
push
mov
xor
jge
jecxz
xchg
mov
sbb
push
and
outsb
cs
bound
xchg
fcmovne
dec
dec
dec
pop
adc
xchg
test
mov
outsb
push
pop
mov
test
dec
fcoms
aas
jecxz
not
sub
sahf
jmp
sbb
push
dec
push
xchg
lea
outsl
and
adc
or
and
xor
lods
mov
xor
andb
sbb
jne
enter
in
and
pop
jns
push
ret
xor
dec
rorb
fildl
inc
mov
shlb
das
push
fidivrs
dec
cltd
xor
add
rep
andl
popf
mov
pop
push
imul
cli
mov
lock
cmpsb
inc
lcall
sbb
stos
dec
in
xchg
sub
fisubrl
jo
mov
das
out
aad
jp
fstp
std
fnstsw
mov
int
inc
sahf
push
mov
in
xor
int
into
mov
cmp
mov
fsincos
sbb
mov
fxch
xlat
scas
jmp
push
add
lret
icebp
rcr
sbb
jp
add
lret
mov
sbb
sbb
lret
inc
stc
lock
cmp
xor
inc
cmpsb
xchg
mov
push
sbb
mov
sbb
cli
inc
xchg
adc
rcr
pop
mov
jecxz
ret
jl
sbb
mov
cmp
fildll
or
pop
gs
js
cmp
popf
dec
dec
repnz
pop
leave
aas
cs
sti
add
enter
rcrb
loop
orl
xor
cmc
add
inc
cwtl
repnz
xchg
xchg
repz
mov
and
clc
jno
mov
imul
pop
and
vmovaps
sbb
enter
pop
mov
sbb
xchg
jnp
jmp
shl
fwait
or
xor
cmpsl
cli
pop
pop
es
xchg
pop
xor
inc
xchg
repz
pop
add
arpl
imul
mov
aas
cltd
xor
popf
push
int3
ret
push
jge
ds
dec
mov
push
push
cli
push
aad
dec
fcoms
jo
mov
xchg
pusha
mov
cli
mov
mov
lahf
mov
jmp
add
pop
stos
sub
into
cmc
repnz
jns
cmp
xor
lea
imul
out
dec
cmp
lods
push
out
jecxz
rep
xchg
pop
dec
and
jecxz
push
fiaddl
aas
lahf
xchg
or
add
xor
popf
xchg
lret
repz
mov
mov
fcomps
pop
xor
inc
xchg
xlat
dec
xorb
iret
fdivrs
pop
es
ja
dec
cmp
xlat
and
shrl
mov
sbb
imul
dec
sbb
sahf
sbb
xchg
ljmp
push
add
cs
test
loope
and
pop
cmp
push
sbb
jne
inc
add
inc
shrl
sub
pop
dec
call
aad
sbb
or
fs
pop
xchg
sbbl
xchg
adc
leave
push
jmp
filds
sbb
out
icebp
insb
jmp
cmp
cmp
fwait
orb
lds
hlt
and
mov
lods
push
shll
movsl
push
dec
inc
jecxz
adc
test
stos
imul
stos
pushf
adc
das
mov
popa
xor
shr
cld
shrl
lods
mov
shrl
fs
ljmp
aas
adc
mov
enter
test
push
loope
mov
stos
mov
sub
je
adc
add
push
test
xor
jmp
inc
push
cmp
pop
jmp
cmc
movsb
jnp
mov
stos
lods
cmpb
rclb
cmc
ret
dec
push
shrb
addl
cmp
sub
scas
lcall
xlat
mov
sub
cmp
nop
movsl
adc
inc
sbb
stc
lea
fsubrs
mov
fnstsw
pop
mov
inc
or
mov
and
stos
outsb
fwait
sbb
mov
mov
push
imul
ret
lea
rcr
mov
fiaddl
lcall
loop
xlat
dec
ret
cmp
rcll
lea
loope
sbb
push
jmp
ret
mov
iret
pop
dec
mov
xlat
je
inc
dec
sbb
fldl
and
loope
rcrl
in
fimuls
aaa
lea
inc
pop
lock
push
mov
or
jle
jmp
dec
push
loop
mov
fmuls
ret
sbb
lock
jecxz
push
stos
dec
ljmp
push
inc
fisubrl
mov
cltd
aas
sub
popa
jbe
bound
pop
xor
or
outsb
jge
xchg
push
sbb
jo
negl
inc
js
call
aaa
adc
add
lods
rcrl
inc
cs
mov
push
pop
push
sub
push
lea
addr16
xor
or
adc
sub
jae
xlat
sbb
dec
pop
addr16
in
xlat
lds
lods
mov
call
cmp
mov
jl
cld
jne
pop
data16
cmp
cltd
cmc
and
inc
repnz
jmp
cmp
jb
std
ret
push
bound
add
loopne
out
push
hlt
and
cmc
sbb
lahf
xchg
dec
fsubl
adc
cmp
cwtl
fimuls
cs
hlt
jmp
pop
and
dec
jl
fnsave
pusha
cmpsl
fldenv
fsubr
jmp
mov
jmp
dec
add
stos
mov
pop
fwait
push
and
fsubrs
into
lcall
push
push
lahf
in
stos
xchg
cmp
fiadds
leave
rcrl
mov
mov
jmp
sub
aam
nop
or
loop
pop
pop
mov
lods
dec
std
sbb
xchg
lahf
or
xor
fwait
test
das
sub
sbb
leave
cld
xchg
jmp
repz
push
cmpsb
dec
pop
mov
push
mov
mov
cwtl
lods
roll
cmpsl
imul
ret
mov
in
mov
sub
jno
jl
xor
shll
ss
lock
out
icebp
jae
pop
in
add
shr
cmc
cltd
inc
push
sub
sub
aas
lea
rcrl
jnp
pop
jns
inc
sti
inc
add
lock
scas
imull
and
dec
cld
fwait
xchg
inc
bnd
fwait
sub
push
jecxz
jbe
lds
in
jmp
insb
mov
jp
or
pop
shl
add
nop
inc
fisttpl
and
dec
mov
xchg
jp
ret
pop
call
repz
xchg
dec
insl
mov
pop
gs
in
dec
lea
call
aas
in
out
push
cmp
in
cmpl
int
fucomp
icebp
in
jp
fidivl
xchg
inc
repnz
in
ljmp
xlat
cs
test
dec
push
int
xor
mov
hlt
mov
lock
pop
mov
ljmp
icebp
test
inc
jno
cmp
mov
outsb
jmp
cmpsb
mov
xchg
sti
pop
fcompl
test
outsb
mov
addr16
iret
sub
das
add
pop
mov
int3
inc
imul
loop
cmpsl
pop
push
push
sbb
sbb
mov
hlt
mov
pop
cwtl
ret
dec
jp
or
daa
loopne
mov
aas
sbbl
jns
cld
ljmp
or
inc
jecxz
jl
nop
push
mov
in
jns
mov
dec
inc
xlat
xchg
push
andb
fwait
lret
subl
out
xchg
fwait
es
cmp
xor
int
jmp
out
daa
xor
sbb
inc
subb
fcomps
sbb
and
jmp
sub
imul
adc
and
xlat
rorl
movsl
loop
stos
adc
cmp
and
jecxz
aaa
stos
push
jl
jmp
push
mov
test
cmp
jecxz
imul
dec
jl
fldcw
fwait
dec
scas
ret
xchg
pop
sbb
lahf
int
ds
mov
add
sub
mov
mov
inc
push
push
nop
push
shl
mov
inc
xchg
subl
cmp
imul
fildll
sbb
mov
xor
lret
frstor
and
and
shll
jae
sub
mov
mov
loopne
ljmp
jge
mov
inc
adcb
inc
bound
jl
mov
sbb
sti
mov
ljmp
cmpsl
mov
push
inc
fwait
mov
loop
aam
xchg
push
xchg
jns
xchg
jno
leave
add
jno
xor
or
ss
ds
gs
pop
push
or
pop
cmp
out
movsl
stos
and
mov
scas
xchg
sti
aad
into
fcmovnb
adc
and
lds
pop
daa
bound
mov
aaa
or
jbe
outsb
fwait
or
lods
loop
cmp
loop
ret
mov
in
hlt
jmp
sarl
lds
mov
roll
sub
roll
shll
xchg
dec
inc
pop
fwait
jno
cmp
or
mov
repz
fsubrl
push
addr16
mov
pop
jecxz
out
popa
add
inc
pop
int
sub
xchg
sbb
jne
out
dec
aas
xchg
test
clc
sbb
shll
sti
ljmp
xor
sbb
lds
inc
frstor
xchg
mov
call
es
ficompl
int3
mov
push
lahf
and
push
mov
or
mov
jbe
sbb
pop
xor
push
jmp
jmp
sub
fs
jg
cli
jmp
stc
int
mov
es
popa
inc
cmp
jle
jmp
adc
jnp
mov
ja
xor
inc
int3
dec
out
jecxz
inc
sti
aas
inc
es
dec
pop
stc
insl
popa
inc
xchg
movsl
mov
out
repz
sub
and
mov
sub
inc
in
outsl
jle
cmp
mov
mov
ret
jl
out
xchg
dec
mov
pop
jecxz
cmp
fucomi
sti
pop
roll
fucomi
cmpsb
test
lods
stos
sbb
rcr
loop
pop
lea
xchg
movsl
fildll
jecxz
xchg
pop
in
scas
xorl
sub
ds
pop
mov
xchg
imull
jge
and
hlt
aam
mov
int3
call
add
shlb
popf
mov
dec
loopne
sub
in
repz
popa
lea
dec
jg
test
fs
fcmovnu
pusha
iret
inc
in
jo
pop
xor
hlt
fstpl
test
int
scas
out
inc
pop
add
adc
or
inc
jns
sub
je
xchg
cmp
sbbl
aaa
mov
jno
loopne
adc
mov
jg
and
pop
and
cmp
sbb
fidivl
mov
das
rorl
test
popf
and
xlat
push
mov
call
ljmp
dec
arpl
sbb
fcompl
aaa
dec
jl
or
push
jo
addb
ret
xor
loopne
xlat
sbb
pop
test
jae
stos
xorl
rcl
mov
aad
jp
iret
mov
mov
push
call
cltd
pop
push
pusha
or
out
cmpl
js
cmc
xchg
jns
jbe
sub
sbb
lea
stos
in
sbb
xchg
add
out
sbb
cltd
insl
cmp
and
fldenv
cmpsb
lock
inc
ret
lods
rcl
stos
and
aaa
ss
out
and
popa
loop
lock
dec
adc
pop
cltd
sub
fwait
push
mov
sbb
gs
mov
int3
stos
dec
or
aaa
leave
insb
ror
jl
loop
jmp
filds
mov
and
or
xchg
jmp
enter
jo
dec
xchg
nop
repz
mov
sti
fwait
inc
mov
sbb
mov
or
jmp
pop
negb
inc
mov
sarl
jnp
add
shll
clc
negb
sub
fldenv
mov
test
xlat
dec
or
lods
stc
hlt
dec
test
ret
dec
pop
sbb
add
pop
test
test
cmp
ret
push
mov
pusha
rorl
addr16
sarl
push
fdivs
frstpm(287
fldenv
shlb
push
fs
orl
and
fistpl
pop
mov
fistl
ret
cs
shlb
and
dec
xchg
jle
gs
mov
xchg
jno
fsub
pop
in
dec
ss
call
cmc
in
push
lods
or
jmp
outsl
sbb
movsl
bnd
out
addl
fwait
cmpb
jge
xlat
lods
out
xlat
iret
lea
imul
and
xor
frstor
aam
mov
les
fldl
icebp
fistl
add
dec
pop
xor
insb
push
cli
out
cmp
cs
fnstsw
fstpt
repz
dec
jg
or
pop
pop
pop
cmp
sti
dec
inc
xor
fistps
push
aas
cmp
lea
nop
les
lahf
lea
rcr
neg
mov
fldt
aam
mov
icebp
xor
imul
loopne
stc
imul
leave
dec
mov
pop
stc
add
movsl
inc
bound
jns
jp
test
xchg
fidivs
imul
dec
shll
call
mov
xchg
cwtl
cmpb
cmp
std
and
cmpsb
dec
imul
sti
sub
stos
inc
lcall
dec
jecxz
xor
sbb
jecxz
and
dec
neg
push
pop
jb
dec
xor
fwait
xor
xor
dec
mov
aam
push
xchg
fmul
aam
pop
test
in
and
rorl
inc
cmp
nop
mov
test
rcr
test
aas
xchg
movsb
push
mov
jnp
add
pop
cmpsl
dec
movsb
cmp
cmp
data16
pop
arpl
sbb
adc
pop
cmp
jb
dec
and
jb
xor
pop
dec
dec
stos
cmpsl
dec
sub
fs
sbb
or
cmp
jmp
mov
arpl
shrl
adc
mov
insl
inc
lock
daa
lidtl
xchg
js
sbb
scas
push
in
mov
sub
xchg
rcll
sub
rcr
aaa
mov
sub
ret
shll
insl
fwait
sbb
stc
xor
ljmp
add
addr16
cmpsb
dec
and
pushf
jbe
mov
dec
aas
ret
out
xchg
mov
lahf
fcompl
insl
stos
repz
mov
xchg
sar
xchg
xchg
inc
add
mov
fimuls
gs
mov
imul
daa
fcmovnb
ds
and
jmp
inc
cmp
in
add
xchg
adcb
xor
adc
and
inc
jle
xchg
jecxz
gs
out
mov
out
mov
mov
inc
sbb
push
js
push
jmp
ret
xor
dec
sbbb
imul
jns
mov
pop
test
mov
fdivrl
test
icebp
xchg
shr
mov
fnstcw
mov
jno
cmp
outsl
jne
ss
inc
cmpsl
je
mov
mov
lcall
sbb
popf
push
push
out
sub
imul
std
jnp
loopne
mov
push
in
jns
jg
mov
mov
scas
cmpsb
dec
fwait
pop
js
sbb
call
mov
gs
ljmp
xchg
push
push
daa
mov
xor
loope
jecxz
pushf
leave
icebp
repz
cmp
cmpsb
imul
jne
xor
repz
xlat
pop
add
fnstenv
mov
popf
std
jno
fs
push
jp
sub
test
lea
outsl
jbe
fistpl
out
popa
sub
xor
ret
adcl
rclb
dec
mov
sub
inc
daa
add
movl
mov
subl
ljmp
repz
inc
loop
add
jg
push
fwait
pop
inc
xor
shrb
cli
fs
aam
inc
sbb
push
fbld
sar
movsl
stos
push
mov
xorl
test
dec
mulb
loope
ret
sbb
leave
inc
dec
pop
int
sbb
ljmp
dec
mov
mov
sti
push
jle
idiv
pop
mov
fcomps
inc
mov
sbb
call
jmpw
mov
mov
or
pop
add
pop
pop
enter
imul
inc
fistl
and
std
pusha
icebp
mov
rol
fwait
nop
or
xor
rolb
jl
mov
js
fcmovu
mov
push
aam
sbb
je
push
dec
pop
jge
inc
mov
arpl
idivl
loope
pop
in
adc
sub
imul
and
cmp
jge
sbb
enter
xor
bound
xchg
in
xchg
or
xchg
jmp
test
xchg
lods
add
sub
add
ficoml
dec
add
mov
inc
imul
dec
jmp
sub
dec
jecxz
jp
mov
out
sbb
inc
sarl
or
stos
lods
stos
fisttpl
sbb
or
jmp
add
xchg
or
pop
inc
inc
push
pop
or
mov
mov
movsl
insb
jl
test
xchg
add
leave
sbb
popa
xor
or
sarl
arpl
inc
xchg
add
sbb
mov
int
jmp
in
pop
mov
ljmp
adc
sub
insl
inc
xchg
dec
lret
stos
sarl
sbb
insb
data16
fisttps
rorl
hlt
lea
mov
dec
insl
mov
mov
insl
sbbb
sbbl
and
movsl
cs
inc
inc
mov
aad
inc
pop
adc
jnp
jmp
xor
pop
ljmp
fmull
test
dec
sbb
ret
in
cld
in
in
lds
stc
sbb
das
cmp
or
push
das
into
cmp
mov
pop
icebp
sbb
push
pushf
popf
fiaddl
push
data16
je
mov
test
hlt
int
lds
sarl
popa
in
sbb
adc
pop
mov
adc
aaa
hlt
mov
pop
aam
jns
pop
add
popa
leave
adc
mov
cld
test
out
fs
adc
loope
lret
leave
inc
push
jmp
xor
outsl
jno
xchg
fimull
and
or
mov
ja
pusha
imul
jecxz
ret
out
sti
imul
xchg
fucom
sbb
or
sub
movl
xlat
popf
push
rolb
cmp
ret
jno
sub
cmpsl
pop
data16
mov
inc
xor
sbb
ja
or
cmp
or
mov
mov
enter
adc
xor
pop
and
mov
mov
dec
filds
clc
es
nop
push
iret
jecxz
push
ljmp
shll
xor
sbb
or
pop
mov
cmc
cmc
filds
int3
mov
test
iret
ja
sbb
out
push
mov
ret
icebp
mov
sub
sti
lea
out
sti
imul
lahf
sbb
push
out
scas
orl
aam
fcom
xor
mov
xor
mov
and
outsl
and
ror
push
insl
insb
sub
jo
cs
mov
int
sti
mov
inc
mov
xor
insb
pop
push
mov
ja
jb
mov
test
jmp
jl
push
imul
shlb
in
stc
in
jmp
mov
jle
mov
mov
test
in
std
or
mov
test
adc
push
push
cwtl
cmc
aam
shll
cltd
adc
jecxz
mov
mov
adc
loopne
mov
pop
int
inc
sbb
sbb
out
jecxz
cmp
in
add
jmp
cli
pop
mov
ljmp
sbb
ds
inc
subl
ja
mov
cwtl
dec
subl
jae
mov
pop
push
xor
in
jmp
int
inc
dec
cwtl
xchg
test
mov
imul
out
mov
out
xchg
insb
lds
cltd
jne
iret
fmull
popf
xlat
outsl
jg
jl
pop
fdivrs
aad
mov
dec
dec
xor
sbb
pop
and
movsb
inc
push
push
pushf
pop
jmp
cmpl
repz
pop
pop
outsb
rcrl
dec
xchg
lret
mov
jae
stos
xor
mov
and
xchg
pop
fldl
bound
nop
or
xchg
ds
int3
ficoml
mov
sbb
mov
mov
insb
add
dec
mov
dec
dec
das
fld
pop
mov
and
or
push
call
xchg
xor
jne
repnz
inc
loope
xchg
cs
jmp
sbb
sub
or
and
loopne
mov
pushf
out
inc
mov
stos
cltd
cmpsb
xchg
dec
cmp
idiv
xorl
fwait
shlb
adc
and
clc
insb
je
mov
cmp
sbb
lcall
jg
ror
xchg
ja
sub
and
aam
test
lods
push
movsb
or
lahf
jnp
mov
leave
cmc
mov
add
hlt
jne
xor
fcompl
mov
imul
xchg
ljmp
test
scas
aad
aas
pop
add
movsl
insb
cwtl
fiaddl
mov
xlat
sbb
lods
mov
jae
test
and
fdivrs
test
std
sbbb
pushf
mov
inc
push
cmp
fcompl
rorl
push
cmpl
inc
jmp
frstor
jge
call
dec
inc
jle
outsl
test
add
sbb
and
dec
xchg
sbb
ds
mov
filds
dec
ret
or
cltd
dec
mov
ret
xchg
jmp
imul
dec
push
lret
stos
pop
sub
pop
lea
dec
jmp
ror
leave
jnp
fs
jp
inc
mov
jmp
add
and
dec
push
rorl
les
xchg
js
push
xlat
in
idivb
outsl
or
movl
pop
imul
test
cmp
xor
scas
int
cmc
xchg
fldl
mov
add
loopne
popf
loopne
inc
xor
add
mov
aam
outsl
scas
mov
in
shlb
pop
jecxz
xchg
inc
xor
sbb
imul
test
out
lea
fistl
mov
mov
nop
repz
inc
sub
mov
fidivrl
pop
push
testl
repnz
and
sbb
mov
out
mov
sub
push
ret
inc
out
push
xor
test
iret
jo
push
mov
push
pop
lock
pop
sti
stos
popa
xchg
xchg
or
or
cltd
loope
in
sarl
cltd
push
dec
repz
mov
loop
iret
push
outsb
push
in
pop
shr
pop
cmpsl
clc
pop
dec
pop
pop
inc
aas
pop
or
mov
pop
pop
faddl
xchg
aas
pop
mov
push
xlat
sbb
add
and
ja
sbb
pop
fstpl
clc
loopne
out
lahf
js
pop
das
sbb
cmpsl
or
mov
pop
ss
popf
les
xchg
mov
or
push
push
aad
orl
gs
cld
loope
jnp
fstpl
subb
ficompl
xchg
adcb
imul
fadd
popa
cwtl
shll
jne
adc
mov
std
or
adc
fildll
ret
lock
sbb
sub
fwait
out
inc
add
shll
sbb
int3
movsb
dec
call
test
xchg
mov
mov
dec
xchg
test
mov
sbb
andl
and
dec
std
or
ret
and
or
lcall
inc
jl
inc
jne
loope
repz
cmc
cmpsb
call
in
sbb
jnp
mull
mov
and
xchg
sub
test
into
mov
xchg
push
fstp
xor
test
xchg
mov
repz
es
jnp
dec
cmc
mov
inc
xchg
cmp
jne
bound
pop
int
inc
jmp
or
out
ret
jge
fistpl
jbe
dec
loope
dec
xor
imul
iret
ret
sub
sti
sbb
add
inc
adc
addr16
jnp
test
xchg
push
cmp
or
outsl
jle
loop
dec
testb
roll
and
clc
aam
pop
xlat
xchg
mov
loopne
mov
lahf
fucomi
test
stos
inc
fs
sbb
pop
std
sbb
sbb
hlt
inc
and
and
push
xchg
and
fs
sub
daa
jno
xchg
fisubrl
xchg
or
cmpsl
aam
pop
pop
pop
jmp
imul
jns
fbstp
shrb
aam
insl
mov
add
cmp
imul
inc
adc
jmp
pop
stc
fs
pop
push
sub
dec
jl
mov
ja
mov
mov
sbb
xorb
in
hlt
cld
orl
loope
cmp
pop
inc
nop
mov
scas
and
push
xchg
mov
jne
xchg
or
or
jecxz
jle
jnp
push
ret
shll
inc
lret
int3
cmp
or
fsubs
push
jmp
scas
add
les
pushf
repz
xlat
jbe
pop
fisubs
mov
jb
jp
adc
out
mov
xor
das
repz
aas
adc
in
test
sub
sub
pop
popf
jne
mov
insb
jns
lods
dec
rcl
add
sub
loope
or
xchg
pop
pop
rcr
sarl
xor
sbb
xor
test
pop
in
push
mov
and
ljmp
inc
imul
jno
xchg
repz
jb
and
push
pop
add
or
push
je
sbb
cmpsb
or
xchg
test
adc
lret
push
pop
aam
cld
imul
mov
pavgb
pop
enter
ja
movsb
fstpl
mov
les
bound
jmp
adc
push
loop,pn
or
push
leave
sbb
ret
dec
sbb
cmpsb
ljmp
insb
loope
mov
test
cmp
loope
fucomip
int3
xchg
pop
lock
mov
mov
cmp
mov
xor
sbb
rcr
pusha
pop
xchg
subl
sbb
in
inc
mov
and
mov
add
scas
test
rorb
pop
and
mov
jb
pop
mov
pop
xor
pop
jp
test
mov
lock
push
mov
mov
arpl
add
push
aas
call
fld
fcmovb
mov
cmpsb
xchg
lods
add
mov
lods
stc
sahf
push
mov
mov
imul
mov
jmp
das
mov
mov
call
jmp
mov
enter
roll
inc
ds
push
sbbl
sbb
cwtl
inc
aam
arpl
push
xchg
clc
adc
add
test
insl
aaa
aad
scas
pop
jnp
cwtl
fsubs
mov
adc
inc
enter
jecxz
or
int
orb
xor
sbb
ret
fxtract
and
inc
xchg
rcl
sub
cmp
and
and
sti
aas
jecxz
lds
dec
push
enter
mov
sub
mov
jmp
xlat
cmc
js,pn
xchg
push
and
pop
cs
mov
jecxz
lcall
add
aaa
xor
jle
div
in
movsb
in
and
jno
inc
sbb
pop
or
test
fucomi
imul
jno
fnstsw
inc
stos
notl
ret
pop
jg
jo
mov
insl
leave
lock
mov
adcl
xchg
sbb
xor
lcall
out
neg
push
jb
js
out
xchg
imul
adc
aam
hlt
or
inc
into
xchg
int
mov
ljmp
test
nop
sub
addl
sti
sub
xchg
roll
outsl
adcl
and
scas
sbb
ja
pop
sbb
dec
call
jmp
insl
ret
dec
lods
sbb
mov
pop
dec
loop
sbbb
mov
sub
xor
xor
mov
xor
sbb
aaa
in
out
jo
push
add
xor
movsl
loope
ljmp
addl
push
aad
cwtl
in
xchg
xlat
rorl
out
addl
xchg
inc
hlt
and
mov
lods
pop
loopne
ret
and
cs
scas
je
inc
and
push
int3
fdivrs
insl
lea
movsb
pop
insl
cmpsb
dec
fistps
add
inc
fdiv
dec
pop
icebp
pop
sbb
aas
push
imul
mov
mov
lock
popf
mov
fs
scas
jmp
push
lods
test
fisttpll
inc
gs
daa
lea
or
shr
jecxz
jge
jne
push
rcll
xor
push
xchg
js
sbb
push
inc
xor
push
sbb
xor
inc
enter
and
cld
pop
jo
lahf
les
out
or
ds
iret
orl
inc
lods
mov
sub
repnz
jnp
and
sbb
inc
dec
shll
sti
out
pop
jecxz
sbb
in
xchg
andl
dec
int
and
mov
push
jge
add
hlt
gs
sbb
ret
add
push
aaa
roll
mov
fwait
xchg
aam
ss
add
mov
push
jmp
rclb
sbb
cld
inc
movsl
rol
mov
lock
push
nop
dec
add
dec
add
adc
mov
ja
sub
ret
imul
xor
imul
out
dec
adc
xor
ficompl
lds
lret
fldl
les
sbb
ret
adc
scas
xchg
sbbl
mov
xchg
fildl
shr
xor
les
xlat
sbb
inc
mov
add
popf
decl
sub
dec
lods
test
xor
inc
mov
mov
nop
popf
and
xchg
xlat
mov
or
add
jae
sarb
xor
mov
mov
jecxz
adc
ds
xor
int3
orl
mov
inc
jecxz
dec
shlb
out
inc
shlb
inc
dec
sti
lret
dec
and
shl
fwait
imul
movsl
jmp
outsb
pop
mov
mov
pop
sub
div
inc
sbb
inc
adc
adc
hlt
and
cltd
or
mov
int
lock
cmp
and
dec
pop
adc
gs
xchg
ss
push
mov
ljmp
and
pusha
and
mov
mov
andb
fnstenv
movsb
loope
adc
mov
int3
outsl
popl
imul
add
test
add
dec
cmp
cmc
dec
sti
dec
mov
inc
jp
push
push
aaa
inc
mov
nop
les
rorl
inc
xor
lcall
leave
pop
sub
cmp
mov
arpl
hlt
and
out
roll
push
cmp
or
cmpsl
mov
push
jnp
aad
outsl
sub
jl
cs
movb
int
mov
out
pop
xchg
stos
iret
pushf
xor
addr16
xchg
out
pop
lret
adc
push
pop
scas
popa
pop
sbb
pop
dec
sbb
mov
rcrl
mov
mov
subb
jno
aad
shlb
dec
mov
mov
in
push
push
push
mov
jae
inc
data16
cs
iret
push
mov
and
sar
sti
fcoms
unpcklps
addl
add
mov
pop
fucomip
push
adc
insl
subl
jne
ret
pop
xchg
pop
mov
ja
dec
xchg
fistpl
aam
mov
inc
mov
pop
cmp
jmp
or
out
fdivrl
inc
pop
mov
vcvtss2sd
lea
stos
dec
add
enter
les
dec
xchg
fcomp
sbb
mov
mov
lods
dec
mov
jo
ja
dec
xor
mov
sbb
cmpsl
xor
les
repz
cwtl
ficoml
sub
xchg
insb
sbb
out
les
xchg
mov
pop
sub
nop
push
or
je
lret
out
sbb
jns
push
push
and
fwait
arpl
stos
cmp
outsl
repz
push
inc
push
push
stos
inc
clc
xchg
cs
push
ret
repnz
das
insb
and
div
inc
cs
rolb
mov
jmp
push
or
xchg
pop
pop
mov
xor
jb
out
push
xchg
insl
imul
out
ret
mov
and
xchg
outsb
mov
pop
fwait
sub
adc
stc
add
push
pop
neg
inc
xchg
lds
mov
jno
gs
lahf
adc
cmp
mov
xchg
mov
lock
leave
pop
and
into
rcr
test
test
fldt
sbb
xchg
lret
adc
scas
cld
xchg
fisubrl
adc
xor
lcall
scas
out
mov
pmaddwd
cmp
test
push
adc
sbb
push
jecxz
add
inc
mov
imul
test
loop
sbb
data16
loop
fstpt
add
jae
inc
movsb
and
mov
adcb
punpckhbw
aam
mov
ss
dec
sbb
adc
push
pop
shll
cs
adc
mov
je
inc
jmp
cmp
dec
outsb
push
add
sub
mov
movsl
int
add
ret
mov
xchg
ret
mov
jecxz
pop
jmp
inc
xchg
mov
xchg
stc
pusha
inc
call
mov
jno
and
mov
or
pop
pop
leave
inc
addr16
cltd
and
jg
xchg
sbb
sbb
mov
cltd
rol
mov
jecxz
mov
scas
sahf
dec
xor
cmp
out
xchg
repz
inc
mov
aad
sbb
or
xor
mov
push
pop
decl
cli
fwait
sbb
add
inc
push
out
fwait
xchg
push
cmpsl
ret
and
shrl
insl
xchg
cmp
xchg
mov
mov
packsswb
add
ret
pop
mov
mov
add
fcmovbe
test
xchg
mov
stos
movsb
aaa
jbe
or
jp
fildl
enter
fistps
sarl
sahf
push
ss
ret
and
push
imul
ffreep
int
fcomp
cltd
stos
ret
and
outsb
stc
push
aas
cmc
mov
fwait
xchg
fistps
and
push
incb
cmc
sbb
bound
call
testb
sbb
pushf
int
fcoml
das
inc
rcrb
outsl
mov
in
sti
add
mov
mov
push
es
lahf
mov
sbb
notl
mov
clc
mov
mov
test
mov
cmp
cmpsl
push
pop
and
mov
push
xor
pop
leave
pop
leave
int3
lcall
sub
jnp
sbb
neg
mov
ret
icebp
jl
lea
push
test
inc
and
and
and
stos
mov
mov
bound
rcrl
decb
xchg
jo
popa
repnz
jmp
push
or
pop
sarb
lret
mov
mov
outsb
jns
popf
scas
ret
subb
sbb
adc
fsubs
and
xchg
ret
cmp
inc
scas
fwait
xor
push
xchg
xchg
cmpb
lahf
cmp
std
push
clc
xchg
stos
rcll
shll
jns
sub
push
dec
inc
cmpb
mov
push
mov
sti
jmp
xchg
add
jbe
add
pop
mov
in
inc
es
inc
jbe
dec
push
shl
lock
add
sbbl
inc
aas
addr16
je
xor
ret
insb
push
cmpsl
pop
ret
jecxz
push
mov
or
pop
sub
loopne
cs
add
mov
pop
int
lea
pop
adc
dec
sahf
lret
mov
in
fsubrl
jl
push
pop
nop
cmp
mov
cmc
jmp
frstpm(287
int3
stos
fcmovnbe
lret
ret
xchg
mov
aas
mov
mov
sub
fcoms
mov
test
lcall
cmc
fstl
mov
lret
repz
rolb
jle
in
mov
call
sub
jge
push
fdivl
sbbl
push
stos
jg
pop
cltd
mov
outsl
lahf
sbb
push
jns
loop
imul
or
jno
and
push
js
mov
repz
lock
push
sub
cmp
push
xchg
inc
insb
mov
lret
out
jne
cwtl
popf
icebp
stos
xor
dec
push
lods
jnp
cld
jb
add
aaa
jmp
jmp
mov
addr16
in
imul
inc
xor
add
addr16
jg
scas
sbbb
or
mov
cmpl
pop
popa
jl
xchg
pop
sahf
dec
jmp
cmpsl
test
sbb
popa
sbb
lds
jp
sarl
sbb
in
je
sub
movsb
mov
clc
pop
je
and
push
push
lret
sbb
sub
sahf
cwtl
dec
aam
fwait
xor
aas
pop
xor
cmpsl
call
fsubrl
mull
and
mov
ds
dec
loope
fisubrs
movsl
pop
adc
imul
jl
iret
fcomps
sub
mul
inc
test
or
mov
xor
inc
mov
fisubrs
mov
pop
addr16
push
cli
inc
lret
ds
jp
not
mov
xor
lds
xchg
fmuls
sbb
imul
and
das
rol
inc
push
inc
or
int3
outsl
dec
pop
jl
test
xchg
jns
orl
ret
and
cmp
int
mov
ret
adc
add
imul
outsb
mov
ret
loope
sbb
mov
lods
scas
mov
and
sbb
sbb
lods
jp
in
test
daa
iret
test
push
dec
addl
xor
xor
jmp
out
sbb
outsl
jo
add
out
in
sbb
add
inc
push
sarl
inc
fs
pop
in
and
loopne
test
ficompl
cmpsb
dec
sbb
mov
jecxz
mov
cmp
and
cmp
add
sub
fwait
sbb
sbbl
in
mov
inc
ret
xor
pushf
adc
rep
sub
sub
fmull
std
fistpl
cmp
pop
imul
cltd
insb
sahf
cmc
icebp
das
outsl
in
sub
adc
pop
popf
mov
ljmp
sbb
xlat
mov
and
shrl
push
sub
mov
push
xor
popa
pop
mov
push
pop
rol
pop
faddl
mov
xchg
mov
rorb
std
aaa
pop
mov
mov
add
pushf
fnstenv
in
shlb
aad
xchg
mov
loopne
outsl
popf
ret
aam
mov
xchg
ds
jne
hlt
and
push
xchg
and
hlt
adc
enter
loop
arpl
inc
popa
nop
cmp
sub
daa
jg
jne
fnstcw
fisttpl
icebp
adc
ja
not
jecxz
in
inc
fwait
sbb
xchg
pop
insl
inc
inc
aad
insb
scas
in
xrelease
mov
sub
sub
test
jmp
push
lds
mov
or
cmp
arpl
mov
xor
mov
insb
mov
mov
mov
call
loopne
mov
shll
fdiv
cmp
pushf
push
mov
sti
sbb
aam
xchg
cmpsl
pop
adc
mov
test
std
arpl
mov
cmpsl
xor
cwtl
or
or
sub
ja
lcall
sub
cs
out
inc
cmp
ljmp
sub
add
icebp
xchg
jno
dec
pushf
aad
sbb
xor
pop
fucomi
imul
xchg
cmp
out
pop
sbb
fs
sbb
aaa
adc
enter
shlb
cmpsb
dec
jmp
add
pop
mov
xchg
loope
data16
cwtl
lds
push
test
jb
dec
adc
mov
cmp
lret
dec
mov
sti
scas
or
imul
pop
jecxz
shrl
inc
cmc
xchg
lds
outsb
or
jns
xchg
push
mov
fdivrs
mov
repnz
jecxz
fisttps
mov
movsl
dec
sub
lea
ds
roll
push
inc
int3
cmp
inc
jle
xlat
and
mov
imul
pop
gs
je
add
enter
jbe
jno
faddl
sub
dec
fsubrl
insl
mov
pop
int3
inc
xor
mov
jl
or
add
pop
mov
outsl
aad
push
jecxz
xchg
mov
scas
pop
pop
jmp
cmpsl
xchg
les
sbb
pop
lcall
mov
pop
pop
pop
mov
popa
fsub
ret
jns
lds
insb
xchg
loop
popa
rorl
xchg
mov
xor
movsl
mov
xchg
hlt
pusha
ljmp
or
fcoms
jge
and
mov
dec
lea
arpl
fldenv
ds
psubsw
std
jno
push
mov
loope
and
or
fstpt
lods
lret
test
dec
sti
insl
sbb
jnp
dec
push
pop
mov
into
enter
fcmovnb
sbb
nop
xchg
or
mov
loop
stc
push
fdivl
sbb
jns
mov
dec
shl
or
push
cltd
mov
stc
dec
subl
bound
rol
ds
js
dec
sahf
xchg
insb
test
cmp
fwait
iret
sub
in
lar
mov
cmp
iret
jmp
aam
les
lahf
xchg
es
dec
cmpsb
mov
sbb
push
es
jae
outsl
pop
mov
scas
adc
mov
mov
mov
xchg
pop
mov
out
leave
loopne
jno
mov
outsb
push
sub
imul
sti
test
imul
out
aaa
dec
jb
dec
and
mov
mov
sbb
xor
bound
xlat
sbb
test
sbb
xor
inc
push
sbb
inc
jecxz
lea
inc
fstp
in
popf
fldl
mov
adc
jbe
mov
sbbb
jmp
cmp
sub
and
shl
or
sub
js
mov
iret
insl
in
sbb
inc
bound
push
mov
jg
dec
xchg
int
push
dec
adc
push
jne
adc
scas
sub
insl
xchg
imul
lock
outsb
daa
cmpsb
adc
lea
mov
jg
jge
mov
lods
lods
cmc
fsubl
xchg
jg
xor
sub
addr16
cmpsb
lds
movsb
inc
xlat
sub
sbb
fistps
xchg
and
test
popa
sti
insb
and
add
push
xchg
mov
mov
test
and
imul
mov
aam
call
jnp
xor
je
xchg
test
stos
pusha
dec
pop
fstpl
jmp
mov
leave
jecxz
jmp
add
fstl
inc
jbe
shll
in
ret
fadds
jmp
out
stos
subl
sbb
loopne
mov
jg
in
jae
loop
and
push
in
sahf
ret
sub
xchg
rorb
mov
out
popf
pop
data16
lret
out
stos
ja
es
xchg
aaa
hlt
lods
sbb
leave
rcr
mov
jne
loopne
xchg
adc
pusha
loope,pt
pushf
dec
mov
or
rcll
fsubp
imul
xor
push
xor
scas
jnp
dec
mov
fisubs
in
insb
xor
movsl
lret
cmp
out
and
scas
push
int3
call
add
out
loopne
test
ret
push
aas
dec
adc
inc
dec
inc
rcrb
xchg
popa
and
sbb
jb
int3
pop
mov
fadd
ds
repnz
cmp
cmpsb
inc
dec
repz
inc
int
cmp
fs
xchg
push
popf
dec
stos
ja
xchg
pop
mov
mov
loope
push
cmpsl
call
shlb
xchg
or
sub
rcll
sub
and
pop
ret
and
movsl
clc
movsb
mov
int3
mov
dec
cmpsb
jle
cmpb
sti
or
iret
dec
lds
insl
xchg
sbb
jl
sar
sbb
stc
xchg
loopne
sub
leave
sbb
daa
adcl
pop
loopne
or
mov
lds
bound
std
or
imul
xchg
sbb
push
adc
add
mulb
repnz
mov
mov
jb
sbb
lods
cmc
pop
push
loope
xchg
lock
mov
sti
aad
pop
iret
push
ja
jno
in
into
cmp
js
or
adc
push
daa
test
cwtl
in
pop
imul
lret
movsb
scas
mov
xor
xchg
and
or
ret
fwait
xor
mov
xor
jle
sbb
pop
jns
test
insb
sbb
push
gs
push
aam
arpl
mov
add
jp
cli
ljmp
jecxz
jmp
jns
and
dec
mov
popf
std
xlat
fsubrs
push
les
xchg
dec
out
imul
xor
cmp
je
jecxz
repz
out
xchg
insb
jge
jmp
pushf
xchg
lods
xchg
xchg
data16
jmp
xor
mov
mov
mov
outsl
es
outsb
out
jl
push
fwait
sub
xchg
loop
mov
loopne
incl
add
ret
cmp
jmp
outsl
add
sub
subl
pop
ret
xchg
popa
aaa
jg
ds
lods
out
mov
mov
in
pop
jo
pop
xor
out
bound
ds
adc
or
xlat
jge
pushf
and
test
mov
pop
cli
xor
mov
shrb
xchg
int3
and
add
jmp
pop
and
sbb
cmc
in
adc
mov
mov
cmp
and
int
inc
enter
cmp
pop
sub
aad
dec
and
rclb
inc
cs
imul
xchg
inc
xchg
orl
fwait
out
mov
sub
mov
mov
sub
sarl
cli
rcrl
mov
sahf
inc
sbbl
shll
aas
adc
hlt
pop
or
cmp
and
or
outsb
cld
or
jns
pop
int3
xor
and
push
dec
sbb
int3
sub
test
and
pop
data16
ret
fs
fwait
and
mov
lcall
xchg
sbb
pop
inc
jae
inc
test
cmpsl
fwait
xchg
fmul
in
xchg
pop
fptan
push
lret
testl
addb
nop
daa
jns
push
cltd
xlat
mov
jbe
iret
test
and
cmp
xchg
fucompp
lret
sbb
inc
fcmovnbe
xchg
push
pop
dec
mov
lcall
mov
mov
in
push
loope
test
ret
add
loop
mov
inc
or
push
xchg
imul
dec
pop
mov
add
incl
add
insb
outsl
jno
lcall
lahf
push
insl
jmp
fldcw
jmp
test
icebp
mul
pop
and
scas
pop
sub
ret
mov
add
mov
cld
xchg
fidivrs
jg
pop
mov
out
bound
pusha
andl
pop
fisttpll
fsubl
add
xorl
add
xchg
mov
mov
out
lea
insl
sbb
daa
gs
enter
in
out
std
fisttpl
jl
mov
scas
fnstenv
movsl
jnp
push
ret
fbld
cs
lods
mov
and
add
in
adc
push
aam
cmc
mov
std
repz
imul
inc
je
push
cmpsl
pop
pop
cwtl
aaa
and
inc
cmpsl
popf
sub
jl
addr16
leave
ficomps
jmp
add
pop
fs
inc
sbb
jmp
and
orb
ret
bound
xchg
xchg
rorb
shl
int3
jne
inc
xor
int
gs
add
vrcpss
cli
pop
outsl
aad
xchg
in
test
fsubrs
cwtl
inc
bound
jmp
fldt
popa
stc
lds
enter
or
cld
push
sub
jo
out
insl
mov
sbb
mov
data16
popa
out
out
in
testb
xchg
jno
push
mov
lock
into
outsl
pop
addr16
xchg
pop
jno
imul
icebp
mov
scas
cmpsb
fstpt
insb
aas
in
ret
lods
cwtl
sbb
inc
inc
sbb
sub
pushf
stos
test
pop
jmp
or
out
test
fsubs
cmp
lahf
mov
add
dec
pcmpeqb
or
xchg
sbb
pop
push
push
cmp
dec
adc
mov
jo
sbb
in
es
push
sbb
bound
repnz
jb
aam
jae
mov
ficoms
rol
fmuls
push
std
pop
sub
mov
jmp
rcl
mov
scas
repz
fwait
xchg
and
subb
push
mov
pop
cmp
mov
bound
inc
cmc
test
ss
in
xlat
sbb
sbb
out
shrb
mov
mov
mov
mov
test
cmp
xchg
pop
pop
fstpl
outsl
mov
jp
cmc
imul
lret
jmp
nop
lcall
or
dec
cltd
popa
jp
jne
cld
je
add
inc
in
bound
cmp
shl
inc
push
leave
in
mov
lods
dec
shrl
cltd
cmpb
bound
in
jo
pop
leave
cmp
leave
mov
cltd
dec
out
lock
pop
aad
adc
adc
jne
das
fstp
sti
jb
rcll
mov
repnz
in
xor
pop
insl
pop
sub
xchg
mov
and
test
mov
and
or
sub
fnstsw
jecxz
dec
mov
es
in
push
movsl
push
mov
jle
iret
in
call
mov
les
scas
add
mov
pop
aas
jg
jmp
iret
lcall
mov
jo
inc
push
mov
and
scas
out
jb
idivl
mov
leave
xor
sti
stc
enter
xor
adc
sub
sbb
lods
inc
sbb
mov
std
xor
iret
dec
subb
jae
push
out
xor
addr16
pop
add
icebp
jmp
fdivl
cmpsl
jg
add
inc
in
mov
daa
rcrl
pop
pop
iret
xchg
xchg
fst
and
sbb
jl
mov
gs
jecxz
xor
fwait
ret
jns
inc
cmp
sti
jns
stc
jmp
cmp
xchg
negb
xchg
push
scas
lods
enter
inc
lret
in
shl
mov
inc
stos
dec
lock
and
popa
call
daa
out
lcall
out
pushf
ret
test
fwait
push
xor
icebp
mov
mov
or
mov
in
push
sbb
inc
pusha
in
and
cli
pop
leave
fisubrs
sub
sbb
popf
sbb
rclb
jae
in
and
inc
sti
push
shrl
stos
sbbb
mov
repz
loop
inc
xchg
mov
xor
lock
pusha
push
inc
jecxz
enter
sbb
push
fimuls
xchg
pop
aam
jl
hlt
roll
add
jns
sbb
xchg
or
cmpsb
xchg
cmc
lcall
sub
sbb
stc
dec
hlt
mov
jne
mov
jmp
jns
jmp
aad
or
and
jg
mov
or
sahf
jno
sbb
cmp
add
pop
aaa
neg
scas
sub
call
sbb
cmp
mov
mov
imul
sti
mov
mov
xchg
and
mov
daa
fsubs
sbb
push
xchg
push
jle
in
jecxz
cs
cli
inc
push
push
sub
pop
dec
jno
jmp
and
mulb
sbb
push
ret
dec
sti
and
mov
pop
pop
call
sbb
push
loope
jle
fnstsw
cmpsb
bound
push
push
sbb
sub
push
pop
pop
dec
ret
jb
imul
jns
cltd
adc
repz
adc
ss
jmp
pop
sbb
dec
dec
outsl
add
push
push
fsubrs
lea
fsubl
cmp
fdivl
iret
sbb
jge
mov
xchg
mov
jmp
adc
repz
imul
inc
cs
jg
ret
ret
jecxz
sbb
test
pop
repnz
or
addr16
sub
and
imul
sbb
fstps
aas
mov
inc
in
dec
and
mov
xchg
dec
jp
movsl
lret
loope
adc
cmp
cmc
repz
les
xchg
imul
cmp
imul
jmp
incl
mov
dec
jmp
int
pop
dec
mov
fucomi
xor
xchg
add
xchg
cld
cmc
mov
lret
push
dec
xchg
jl
jge
std
lret
dec
std
sbb
pop
bound
mov
fdivrl
mov
pop
sti
mov
mov
mov
jmp
mov
cwtl
sbb
cltd
xlat
lock
pop
lods
and
out
test
jnp
fnstenv
mov
xorb
xchg
mov
xchg
xchg
repnz
mov
lods
scas
cmp
fistpll
scas
mov
xor
jp
movsb
inc
sub
mov
sti
push
jmp
nop
cli
xor
testb
pop
mov
mov
arpl
orl
dec
push
fstpt
mov
add
data16
div
sbb
inc
mov
lods
inc
in
ret
call
out
and
add
push
jno
test
pop
mov
inc
jl
or
fnstsw
mov
mov
push
test
sarl
dec
cmp
and
cli
cmpsb
mov
mov
and
loopne
add
std
sbb
jmp
sub
pop
push
pop
mov
out
aad
sub
xor
or
pop
sub
xchg
jecxz
dec
mov
in
ficoml
inc
push
outsl
popa
fcmovnbe
testl
pop
cmp
arpl
cmp
mov
xor
aas
jmp
xchg
pop
iret
pop
cmpsb
out
push
les
int
pop
in
xchg
push
sbbl
sbb
ret
inc
sub
fsts
sbb
xchg
xchg
mull
rcrb
arpl
out
int
sbb
mov
pop
dec
pop
or
outsb
mov
pop
addb
jecxz
sbb
inc
push
aas
adc
push
sti
scas
int
imul
mov
popf
maskmovq
mull
subb
mov
in
mov
jmp
jle
fistpl
xchg
hlt
test
sar
add
jp
int3
xorl
popa
pop
fildll
jecxz
cwtl
and
inc
test
cmp
xchg
push
xchg
push
loop
mov
ds
sarb
out
cld
aas
fstps
sarb
jno
fbstp
pop
xor
mov
pop
ja
pop
subl
or
or
push
sub
or
je
xor
jns
mov
add
mov
sbb
push
fbstp
lret
fsubrs
jp
imul
xor
jmp
cs
fldenv
lods
js
xchg
xchg
pop
js
cltd
mov
cmpb
rolb
outsb
shlb
jmp
mov
pushf
sahf
stc
lea
repz
test
dec
imul
lcall
mov
xchg
jne
jg
sbb
cmp
sbb
inc
or
xchg
aas
out
addl
mov
icebp
push
enter
fadds
and
jne
int
jecxz
rclb
fsubr
fnstsw
xchg
push
pop
fidivs
test
ret
fcomp
shll
sub
lods
jecxz
inc
enter
pop
enter
cmp
cmpsb
popa
mov
stc
dec
out
adc
cs
into
inc
cmp
add
fldt
xchg
inc
aas
cmp
lds
addr16
stc
test
add
adc
hlt
cmp
push
push
mov
orl
negb
negb
xorl
cmp
mov
addr16
ret
fadd
ret
fistpl
mov
xchg
and
adc
jl
fisubs
sbb
lret
and
push
iret
push
popa
in
add
fs
movq
das
pop
inc
scas
sti
jecxz
sbb
mov
push
push
adc
push
push
jle
pop
mov
jmp
imul
addr16
sbb
movb
inc
xor
lds
jmp
cmp
mov
mov
mov
popa
out
or
fcomp
push
mov
xchg
xor
aad
ss
sti
sbb
xor
int
shl
or
lahf
mul
insl
imul
ss
pushf
cmp
das
in
adc
xor
mov
leave
pop
out
sub
arpl
scas
sub
cmp
negl
jno
dec
loop
push
mov
mov
mov
pop
imul
inc
push
mov
ja
xchg
pop
cmp
into
scas
mov
mov
in
scas
fwait
push
test
jns
dec
int
jge
data16
mov
fstpt
jecxz
sti
dec
pop
mov
mov
cs
pop
dec
es
mov
jmp
arpl
cmpsb
fidivs
pop
loop
scas
pop
xchg
sbb
and
inc
repz
rcrb
pop
inc
mov
sbb
add
ljmp
jae
push
jle
sbb
xor
jecxz
test
stc
jmp
inc
inc
rcrl
inc
call
aad
mov
or
push
inc
or
out
imul
mov
mov
dec
fstenv
sbb
mov
dec
nop
inc
jecxz
icebp
popf
sti
sub
jno
das
push
jp
fs
hlt
sub
loopne,pn
fwait
lea
xchg
mov
pop
aad
inc
and
cmp
std
pusha
xchg
imul
sbb
ja
rorb
dec
cs
sbb
jmp
test
sbb
fstps
out
dec
add
inc
insl
fbstp
cmpsl
jo
test
ljmp
mov
icebp
mov
sbb
jbe
fs
in
jb
cmp
jo
dec
dec
cmp
mov
push
mov
jns
push
test
or
dec
and
cltd
in
aad
mov
jns
mov
in
out
jno
mov
jp
data16
adc
mov
fisubrs
out
xchg
mov
lds
push
sbb
xor
mov
les
stc
cmpsl
in
out
sarl
mov
mov
sbb
imul
jecxz
fsubrl
jbe
mov
ljmp
jb
mov
mov
repz
inc
sarl
insb
xchg
fbstp
bound
int
lret
insl
pop
mov
test
sbb
int
jecxz
push
add
je
xor
sub
sbb
push
cmp
and
leave
push
pop
pop
repz
scas
pop
inc
mov
fidivrl
jmp
loopne
cmpsl
push
push
sub
ret
inc
aas
mov
dec
in
lea
sub
fcmovne
sub
fdivp
cmp
arpl
je
cmp
je
pusha
sbb
and
mov
sub
pop
cmp
pop
sub
pushf
repz
mov
nop
iret
mov
and
stos
inc
mov
push
fs
ret
or
loopne
iret
movsl
xchg
xor
ss
addb
mov
mov
mov
out
xlat
mov
stos
les
pop
std
mov
sar
test
cmp
flds
mov
adc
notl
sahf
lods
inc
dec
fwait
push
shll
in
jns
jl
sub
mov
sub
or
imul
sti
std
add
bnd
inc
out
call
sar
insb
rorl
fdivrl
stos
sbb
shlb
fsts
pop
dec
sbb
ljmp
addl
add
insl
js
test
xor
mov
and
leave
leave
std
in
xor
nop
cmp
and
aas
fsubs
popf
lock
jnp
pusha
lahf
mov
jae
sbb
add
sbb
pop
mov
jno
push
andb
or
out
pop
cmpsl
sbb
inc
xchg
int3
jno,pn
xor
std
jmp
fcmovnbe
in
enter
fcomi
xchg
in
test
shlb
xor
bound
mov
in
sti
fmul
xor
or
cmp
ss
dec
sub
adc
xchg
fdivrs
jl
mov
mov
stos
ret
aad
stc
sbbl
pop
imul
cwtl
scas
xchg
gs
ss
pop
vmovntpd
sbb
pop
mov
mov
sti
pop
mov
and
jns
mov
in
mov
add
lret
shl
mov
cmc
mulb
test
and
mov
test
hlt
das
and
sub
cmpsl
pop
arpl
rcrb
cltd
movsb
pop
add
cmp
mov
shll
rcr
cmpsl
cmp
jecxz
add
repnz
imul
sbb
aaa
loope
test
jmp
mov
xchg
aaa
int3
xor
mov
pusha
inc
ljmp
loope
add
dec
push
xchg
pusha
sbb
lret
sub
sbb
popa
fidivl
out
and
sbbl
mov
sbb
xor
xchg
mov
mov
xchg
or
inc
data16
mov
in
ret
xor
dec
out
xor
repz
mov
test
lret
jae
arpl
jne
adc
aad
mov
pop
lock
sbb
int
sub
test
push
stos
lods
jle
addr16
or
mov
push
pop
mov
shlb
jns
int
mov
sbb
jg
ret
pop
pop
lret
sbb
push
xchg
loop
pop
mov
leave
adc
cltd
outsl
mov
sbb
cmp
insl
or
mov
add
pushf
cmc
jle
out
jg
rep
popa
std
and
pop
ret
jmp
lods
lds
jno
pop
ja
sub
cli
jge
fwait
sbb
push
and
cwtl
mov
sbb
pop
xor
or
add
in
mov
negl
jno
push
mov
xchg
pop
xchg
adc
pushf
jge
out
cmpsl
inc
mov
xchg
test
sti
loopne
scas
mov
scas
mov
inc
sbb
mov
das
int3
mov
and
lock
lods
cmp
add
xlat
inc
xor
dec
xchg
sbb
pop
jne
xchg
pop
dec
inc
dec
jnp
and
vmwrite
cli
mov
mov
lret
add
jp
mov
lret
pop
rcl
or
inc
enter
fldcw
test
dec
mov
sub
or
mov
push
mov
movsl
shl
inc
adc
addr16
adc
shrl
push
adc
lds
sub
aam
stos
pop
lea
neg
icebp
dec
clc
hlt
jg
das
mov
push
or
imul
cmp
mov
or
rep
cmp
aas
fidivrl
arpl
daa
sti
das
jo
in
dec
lcall
sbb
stos
sti
sbb
inc
lcall
xor
loopne
jg
pop
adc
fstps
mov
cmpsb
mov
fldl
jns
sub
and
push
in
and
xchg
int
fucomp
mov
mov
dec
xor
cmp
mov
pop
outsb
stc
test
cmc
leave
push
fsubl
push
sbb
lret
jmp
cmpsb
sbb
or
jne
or
loope
sbb
dec
pushf
jl
js
movb
out
cltd
mov
pop
das
and
pop
jmp
popa
cli
ja
xchg
lock
sub
cmp
cmp
mov
fcomp
pop
pop
jecxz
dec
mov
sub
xlat
mov
or
nop
lock
test
test
int
inc
out
xor
aas
pushf
nop
inc
xchg
jmp
push
aas
fsts
add
gs
and
repnz
lcall
outsl
mov
pop
addr16
mov
in
mov
scas
out
out
or
loop
mov
addr16
sti
xchg
mov
xchg
or
enter
pop
mov
and
rol
nop
lcall
ret
out
mov
icebp
xchg
repz
aam
ror
les
call
das
cmc
fscale
aaa
aas
int
int
mov
mov
int
sbb
dec
push
cld
out
es
sti
call
pusha
mov
mov
stos
sbb
aas
and
push
mov
mov
jno
jb
jne
inc
jno
cwtl
jnp
dec
cmpsl
imull
iret
mov
sub
xlat
add
jp
sbb
insl
and
dec
add
cmp
mov
repnz
adc
mov
test
stos
adc
or
loop
mov
lret
pop
xchg
in
je
jl
dec
ffree
ss
ljmp
xlat
jl
fwait
outsl
sbb
mov
stos
jnp
jne
rcll
lcall
aaa
aad
aad
sub
jb
inc
and
xchg
fwait
or
xchg
cmp
icebp
add
sti
add
fbld
pop
sbb
roll
fwait
push
pop
ret
pop
fnsave
aad
iret
ret
jecxz
or
in
jmp
stos
jecxz
or
ret
mov
jnp
cmc
es
jnp
sbb
fsubr
and
icebp
push
jp
das
fisttpll
mov
std
pop
out
lcall
and
or
cmpsb
and
pop
leave
dec
arpl
rol
pop
xor
insb
movsb
and
or
gs
cld
dec
xchg
fldt
pushf
fildl
lods
ret
add
ret
mov
inc
mov
cmp
shll
cltd
imull
inc
popa
jmp
jge
jecxz
enter
jg
mov
andb
push
push
test
adc
cs
mov
cmp
xchg
jp
jnp
in
pop
cmc
jmp
imul
lret
jns
in
ljmp
jmp
pop
jnp,pn
loopne
pop
test
mov
das
jnp
or
std
jae
cmp
ret
xchg
sub
aam
jl
das
pusha
sbb
sub
mov
mov
adc
sub
out
and
sbb
stc
lock
rolb
sti
mov
cli
gs
aad
mov
mov
leave
pop
enter
and
sbb
lahf
fcmovbe
xchg
lods
enter
comiss
sbb
int3
stc
inc
lret
mov
xor
dec
cwtl
fistpl
push
cli
jecxz
lods
mov
dec
stc
mov
pusha
adc
mov
adc
mov
cmp
mov
and
mov
inc
mov
sbb
jg
jns
leave
xchg
enter
jae
jne
leave
inc
pop
and
add
cld
inc
inc
hlt
frstor
popf
mov
dec
lods
cmpsb
les
mov
es
inc
fdivrl
jnp
inc
jno
pop
pop
sti
inc
hlt
lea
or
test
push
mov
mov
mov
andl
daa
jp
inc
cltd
dec
in
das
je
stos
rcrb
jns
push
scas
pop
fistps
fidivs
cmp
insl
pop
rcrl
xchg
pop
mov
mov
movsb
lods
xchg
sbb
sub
in
ficomps
push
jbe
lret
movsl
inc
stos
sbb
fistpll
das
xor
lea
adcl
push
pop
sbb
arpl
call
and
adc
dec
loop
sbb
aas
add
inc
add
lock
lock
repz
in
mov
in
in
imul
shr
sbb
out
xor
pop
sbb
mov
js
lods
fistpll
xchg
fdivrl
jmp
or
je
imul
sahf
xor
lds
sub
ror
dec
imul
insl
sbb
daa
adc
inc
imul
sti
xchg
gs
mov
add
dec
xor
sbb
cmp
push
cmp
and
sbb
mov
cmc
mov
push
outsl
pop
test
and
or
or
jg
ret
or
test
jb
mov
or
ja
push
mov
jecxz
jb,pt
push
sbb
inc
arpl
push
jo
jecxz
rcr
lds
push
mov
pusha
jl
cmp
gs
mov
sti
xchg
jge
mov
fstps
dec
ja
ret
inc
dec
popa
mov
dec
dec
aam
pop
mov
int3
jge
inc
inc
jno,pn
pop
scas
orl
fildl
pop
jnp
in
dec
enter
ds
test
das
sbb
sbb
push
xlat
mov
dec
dec
mov
shll
or
movsb
lods
pushf
pop
xor
out
in
insl
fidivrl
dec
mov
mov
inc
stos
fldcw
movsl
jecxz
cmp
xor
xlat
test
mov
mov
push
inc
mov
repz
test
ds
insl
push
pop
dec
sbb
sti
enter
rol
testb
cmp
jnp
push
sub
xor
subl
or
pop
imul
aas
fwait
dec
shl
fdiv
dec
fcmovne
in
testb
push
js
inc
aas
insb
mov
es
call
mov
sbb
aam
ret
aas
and
inc
mov
dec
fstps
iret
jg
mov
jmp
push
aas
inc
mov
fcmovnb
std
mov
loope
les
mov
adc
adc
jb
xor
pop
jmp
jp
jge
ret
imul
loopne
jle
sub
sbb
xchg
in
xchg
leave
dec
cmp
outsl
xor
fxch
das
cmp
mov
in
pushf
fwait
les
xor
dec
and
jae
ret
lods
test
push
jns
sbb
ficomps
fildl
jno
jecxz
mov
inc
lock
jb
inc
cmp
sarb
out
ja
cmc
jmp
jmp
pop
xor
das
push
jp
mov
sub
jne
sbb
cs
jle
dec
and
ja
jo
and
repnz
sub
xchg
dec
out
fdivrl
push
dec
mov
in
jecxz
mov
das
lods
lcall
rcr
fcmovnb
enter
mov
out
dec
mov
shl
aaa
cmp
jmp
fisubrs
cmp
jnp
pop
or
dec
mov
or
gs
lds
outsb
dec
mov
movsl
mov
insl
repz
sbb
aas
es
xchg
mov
add
out
in
jb
pop
popf
and
cli
out
jb
call
sbb
fstp
arpl
out
or
push
int
inc
jmp
or
fcmovnbe
gs
int3
test
int
movntps
and
aam
inc
mov
lahf
clc
push
mov
xchg
ficompl
loope
dec
aam
js
clc
xchg
and
pop
jb
sbb
popa
in
cld
xchg
in
popa
aam
inc
das
pop
push
dec
loopne
stos
inc
bound
pop
and
js
nop
sahf
jle
stos
ret
nop
jb
jecxz
loope
jmp
out
into
mov
movb
je,pn
movsl
mov
and
sbb
cltd
and
jmp
inc
xor
push
jecxz
cltd
xor
iret
mov
inc
cmp
push
mull
test
ja
mov
xlat
cmpsl
or
pop
sbb
cmpsl
fstl
jno
icebp
cmc
fidivs
or
mov
xchg
push
call
pop
lret
add
dec
jnp
push
pusha
pushf
mov
in
sub
fstpl
pop
rol
jmp
arpl
mov
mov
cmpsb
inc
add
repz
outsl
fistps
imul
mov
mov
les
adc
dec
ret
imul
fistpll
ljmp
xorb
mov
popa
imull
imul
dec
stc
push
in
sbb
push
pop
daa
pop
jo
xchg
pop
scas
sub
hlt
mov
mov
jecxz
stos
push
sbb
and
sbb
sbb
xlat
pop
mov
add
sbb
test
xor
std
jne
push
aam
test
int
aaa
testl
hlt
push
pop
aad
mul
jo
lock
xchg
gs
mov
inc
rcll
or
push
push
adc
cli
sub
cmc
les
call
in
jmp
cmpsl
addr16
jnp
jecxz
subb
jno
sbb
jle
repnz
push
js
xor
lea
and
and
repz
pushf
cltd
xchg
imul
push
notl
pop
scas
or
pusha
shl
jbe
cmpl
fucomip
inc
jno
jae
jp
jns
sbb
cmp
fisubs
and
xor
mov
ss
popa
ret
imul
mov
shrb
and
fistpll
fbld
push
pmulhw
mov
fsts
int
std
iret
jecxz
cmp
aam
fldt
fisttpll
cli
shl
dec
je
lcall
shll
mov
gs
and
imul
ret
mov
jle
imul
xchg
xchg
inc
xor
out
inc
ljmp
pop
ja
mov
xchg
sub
mov
xor
nop
fstl
dec
pop
jge
dec
sub
cmpsl
pop
in
adc
lahf
jbe
int3
inc
mov
and
roll
lods
mov
les
sbb
mov
sub
mov
pop
and
inc
stos
mov
jle
fxch
mov
sbb
mov
clc
pop
push
xor
jmp
cltd
push
mov
rcrl
jmp
add
jbe
test
pop
leave
popf
or
ds
push
call
dec
out
mov
and
mov
sbb
xchg
cltd
mov
jbe
je
repz
jb
mov
cltd
sbb
imul
add
lods
sti
lcall
sahf
mov
jae
push
pop
jmp
mov
push
jge
test
mov
les
lea
push
repnz
insl
andb
testl
pop
lcall
sahf
es
push
cmc
mov
fmulp
mov
mov
mov
xchg
sub
ljmp
sub
mov
sub
aaa
hlt
cmp
mov
sbb
pushf
outsl
adc
fcmovnbe
aad
sbb
cmp
xchg
sarb
jb
lods
hlt
mov
cltd
push
mov
cli
fnstsw
mov
jmp
xchg
fisttpl
das
cli
lahf
mov
addl
fistpl
kmovb
imul
aas
fildl
jns
aas
sub
jmp
ret
cmp
inc
sti
push
or
mov
in
sbb
cmp
das
fcmovnbe
inc
sahf
cmp
xlat
dec
sbb
stc
int3
sub
xor
sbb
orl
fistps
mov
ss
sub
mov
scas
pop
push
fucomi
cmp
dec
or
cmp
fisubs
xchg
or
lret
das
sub
sbb
xorl
xor
mov
add
in
lea
cmpb
les
add
scas
cmpsb
shlb
mov
jmp
sub
shll
nop
loopne
mov
xor
dec
pop
adc
loop
sbb
xor
fld
out
outsb
ret
clc
lea
mov
pop
aad
fstl
sahf
and
cmp
push
fnsave
addl
dec
in
imul
enter
or
sub
sbb
xchg
jbe
lcall
fsubrp
pop
hlt
test
mov
mov
movsb
testl
leave
sti
imul
aam
push
jnp
sub
xchg
insb
ret
out
outsl
push
mov
push
scas
imul
movb
jmp
sub
cmpsl
jmp
mov
xchg
out
mov
dec
and
aaa
das
jnp
pop
mov
jno
inc
test
bound
andl
pop
sbb
dec
rcrb
sti
int
das
sti
inc
add
aaa
xchg
pop
push
push
xchg
outsl
fwait
or
ret
ss
sbb
ret
dec
orb
fimull
mov
dec
sub
loopne
mov
push
into
xor
ret
xor
and
xchg
lods
push
decl
mov
mov
dec
jmp
dec
in
lea
clc
mov
incl
push
xor
xchg
sbb
jmp
rol
es
fisttpll
add
sub
push
imul
cmpsl
test
lcall
outsl
fmuls
imul
sti
fistps
ss
sub
mov
fdivrl
and
mov
jo
jne
mov
and
popa
aas
jno
and
xor
mov
out
test
cmp
inc
leave
mov
xlat
ret
xlat
mov
mov
aas
aaa
sbb
add
fstp
ret
cld
in
and
mov
test
inc
pop
mov
je
mov
dec
xor
sarl
mov
es
cwtl
mov
inc
pop
xchg
mov
add
mov
mov
ret
ror
mov
out
loope
jmp
xchg
xchg
pop
sub
sbb
mov
xchg
and
ja
inc
outsl
movsb
fwait
pop
into
out
cmp
cmp
mov
push
int3
sbb
push
insb
jne
fcmovne
inc
and
movsl
lcall
xor
sbb
cmp
fwait
mov
jo
jnp
pusha
fs
loop
mov
jg
in
jns
jno
stc
pop
out
fmull
jl
xlat
aam
ljmp
in
out
jae
lret
pop
xor
popa
hlt
jnp
ss
inc
popa
fidivs
arpl
int
leave
push
aas
imul
pop
out
jp
push
rcr
xor
lcall
pop
adc
sub
dec
xlat
into
dec
ja
negl
mov
dec
mov
pop
cwtl
jbe
mov
xchg
aam
iret
aas
stos
rorb
gs
add
test
test
mov
sub
shr
ja
sbb
in
xchg
shll
inc
aam
cs
arpl
mov
out
iret
scas
pop
push
sbb
outsb
sbb
mov
mov
push
lret
mov
fisubrl
aaa
ret
adc
out
dec
shll
orb
dec
rolb
fisubrs
mov
decb
mov
inc
cltd
jl
fisttpl
push
push
push
fdivr
aaa
inc
imul
lods
fisttpl
add
pop
movsb
insl
dec
xchg
mov
jmp
stc
cmc
or
fldl
mov
pop
adc
fdivl
sub
dec
icebp
sbb
mov
outsb
sbb
xchg
add
push
xchg
sub
cmpsl
in
push
std
iret
or
movsb
xchg
xchg
cwtl
or
addl
out
sbb
rorl
or
loop
or
or
jnp
pop
xlat
sbb
xchg
sbb
push
xchg
jne
cld
inc
dec
pop
into
outsl
cs
add
fisubl
xchg
mov
sbb
ffree
push
movsl
or
fdivrs
cmp
fistpl
fidivrs
aas
push
and
dec
pusha
into
test
pop
cmp
pop
jae
je
pop
push
loope
insl
sbb
jbe
push
aam
adc
mov
add
jg
outsl
adc
lods
jecxz
rcrb
pop
outsb
jmp
adc
ja
sub
mov
mov
inc
imul
push
mov
inc
test
sub
cmpsl
sahf
shrb
shrb
rcll
cmp
sbb
jo
movsl
push
push
popw
mov
inc
arpl
ficomps
test
test
popf
jne
add
shrl
stos
hlt
dec
out
push
outsl
cmp
xchg
jno
rcll
mov
cmpsl
ljmp
sbb
aam
ret
or
and
push
icebp
loope
ficoms
repz
cld
cltd
dec
lock
imul
aaa
andl
gs
fsubr
into
jo
mov
mov
add
jmp
xlat
xchg
jo
rorb
inc
push
xorl
addps
lea
ret
xlat
data16
cld
jmp
jecxz
gs
data16
out
and
push
dec
xchg
or
sub
hlt
push
sub
or
or
dec
mov
insl
insl
fsubrl
mov
cltd
shrl
push
repz
stc
in
dec
mov
xchg
cltd
cld
cltd
movsl
push
fstpl
xchg
xlat
sbb
sbb
lds
dec
int
mov
gs
jecxz
and
repz
aam
out
xchg
jno
add
mov
fnstsw
dec
sbb
mov
pop
shll
cmp
cmp
mov
add
lcall
inc
mov
loop
nop
mov
lods
scas
or
mov
inc
sub
in
or
sub
ss
cmp
daa
push
std
sbb
test
sub
clc
fsincos
jno
mov
pop
mov
jecxz
leave
push
pop
repz
loopne
jmp
and
mov
sbb
push
fisttps
or
addr16
js
dec
movsl
imul
ret
push
or
inc
mov
ret
arpl
add
test
xchg
popa
jns
or
jle
jp
pop
repz
mov
pop
xchg
in
dec
pop
cmp
and
ret
clc
sbb
addb
xorb
dec
mov
add
dec
gs
xchg
pop
testl
jecxz
inc
addb
fsubl
fld
incl
mov
push
sbb
mov
in
sub
dec
mov
leave
out
sarb
sahf
sti
mov
int3
in
lods
mov
aas
mov
scas
mov
int
addr16
pop
fistpl
gs
movsb
rcr
dec
fcoml
sti
jmp
pop
cmpsl
pop
pop
cmp
dec
lods
sbb
enter
andl
in
aas
repz
mov
cltd
lcall
or
sbb
lock
out
cmp
and
jmp
outsl
sbb
push
outsl
mov
in
inc
jecxz
xor
or
mov
jle
xlat
jo
add
jmp
push
mov
and
cmp
mov
and
ret
push
xlat
inc
cmp
aam
adc
push
inc
sub
jne
test
orb
cld
adc
mov
xchg
mov
sub
and
test
loope
ret
and
mov
cmp
sbb
aam
adc
cmp
mov
jnp
loope
push
fstps
xor
add
fs
mov
fimuls
pop
inc
adc
aam
repz
pushf
mov
pusha
stos
sbb
repz
outsb
loopne
sbb
movsb
sbb
test
add
cmp
mov
lock
add
in
xchg
xor
fwait
leave
jmp
cld
stos
into
push
cmp
mov
xchg
cli
fsts
sbbl
out
sbb
mov
xchg
movsl
add
push
ret
sbb
out
std
mov
and
aad
popf
and
out
scas
cmp
loop
loope,pn
inc
pusha
dec
pop
dec
mov
sbb
or
mov
dec
jnp
cmp
fsubrs
stos
sub
and
xor
movl
out
jne
cld
sub
mov
inc
dec
sub
xchg
outsb
and
out
popl
scas
mov
or
lea
movsl
ja
add
pop
add
or
mov
sub
fdivrl
xlat
inc
sahf
fcmovnbe
enter
imul
cld
mov
sbb
fcomp
test
xor
cmp
xchg
fdivl
std
in
pushf
add
repz
imul
rcrb
ljmp
mov
ret
stos
sbb
mov
sarl
aam
lods
dec
popa
push
mov
xchg
in
xchg
fimuls
mov
pusha
pop
mov
iret
popa
xchg
cld
sbb
inc
ret
andb
and
push
lds
push
jns
jbe
lods
push
jecxz
inc
jne
pop
jecxz
mov
and
pushw
pop
ja
push
add
ffree
inc
and
scas
pop
in
and
std
xor
mov
mov
xor
or
jno
es
jmp
jp
xor
push
push
lahf
mov
pop
xor
fiadds
push
fsubl
ljmp
push
icebp
rep
sub
sbb
imul
mov
mov
imul
sti
fsts
cmp
sbb
lea
lods
fwait
jns
inc
jecxz
push
movsb
mov
fadd
sub
jo
fs
cs
xor
test
int
stos
xor
pop
jne
mov
xor
std
fcmovnu
shrl
sbb
fidivrl
andl
ret
int3
push
stc
hlt
jb
pop
leave
jp
mov
sahf
dec
dec
xor
cmovns
xchg
sub
mov
and
enter
push
dec
pop
iret
mov
push
je
testl
int3
shll
mov
popa
mov
outsl
mov
sbb
aas
scas
mov
popf
rcrl
aam
cltd
mov
pop
xor
call
and
push
xchg
loop
xchg
out
fcmovnbe
cmpsb
dec
sbb
mov
lock
ret
sbb
test
jb
cmpsb
jecxz
test
mov
jmp
lods
notb
push
iret
jp
out
ja
test
push
xchg
xchg
cmp
dec
cmp
int
and
pop
loop
xor
push
daa
jne
add
jge
xchg
loop
and
test
and
and
push
inc
fwait
sbb
test
shrl
mov
dec
pop
aas
push
inc
sbb
xchg
sti
aad
mov
fchs
push
xchg
popf
sbb
inc
fwait
sbb
sti
sub
dec
mov
mov
inc
sbb
xchg
mov
push
mov
cli
xchg
dec
orl
xor
jmp
jecxz
pop
jnp
mov
iret
jno
adc
out
fidivrs
cmp
xlat
rcrl
cmp
jecxz
xor
mov
cmp
xor
les
jbe
sti
and
jp
ret
enter
leave
jne
or
xor
fdivrs
fcmovu
xor
jmp
jmp
fwait
pushf
adc
pop
push
xor
pushf
add
xlat
jecxz
int
out
shl
mov
jl
jmp
xchg
jmp
push
pop
and
fsubrs
sbbl
mov
jne
add
dec
mov
fwait
out
pop
call
in
pop
jmp
loop
scas
inc
cmc
xchg
mov
das
xlat
imul
mov
ret
cltd
notl
loope
cmp
int
mov
or
or
iret
test
fucomp
sbb
cmp
cmp
cld
fstpt
inc
push
dec
popa
sbb
faddl
testl
imul
movsb
or
bound
or
xor
imul
pop
push
lcall
xor
imul
lcall
out
fwait
jns
in
xor
movsl
cmp
leave
scas
cmp
imul
xor
inc
jno
test
fldl
and
cli
and
je
add
popf
faddl
movsl
mov
loope
test
fdiv
sbb
push
fnstenv
rorb
mov
push
jb
aaa
and
cmp
loopne
hlt
sub
lahf
and
and
jecxz
mov
fsubs
fnstsw
fcmovbe
rcll
roll
aam
aad
in
into
fwait
loopne
mov
mov
leave
jmp
lods
pop
mov
and
dec
call
lret
hlt
daa
aad
mov
mov
faddl
sbb
imul
sbb
inc
sahf
outsl
add
movsl
and
mov
sbb
or
xlat
cmp
sbb
insl
imul
ja
ret
das
pop
dec
or
xchg
jmp
jmp
arpl
in
test
fisttps
fmuls
xchg
mov
xor
sbb
or
mov
std
aas
dec
cs
dec
and
and
pop
jl
les
mov
sahf
push
stc
sbb
mov
addr16
imul
jg
test
add
adc
in
mov
fistps
pop
das
dec
xor
xchg
jnp
sub
sbb
dec
int3
int
pop
testl
fsubl
lahf
sbb
pop
enter
shr
mov
pushf
fildl
cmc
ljmp
aam
mov
hlt
sub
ret
outsl
insl
repz
out
add
mov
frstor
jno
cmp
sub
mov
ja
mov
fisubrl
mov
or
shll
xchg
test
push
lock
xlat
xchg
iret
sbb
cmp
inc
jmp
push
push
scas
iret
inc
sub
mov
lcall
jmp
repz
ds
and
jae
je
jbe
mov
jae
xor
dec
push
adc
orl
inc
cwtl
mov
dec
gs
mov
addl
imul
imul
adc
in
sbb
out
cwtl
adc
push
dec
mov
xor
call
pop
pop
mov
dec
and
dec
loope
in
test
mov
aam
pushf
pop
call
aam
scas
test
mov
ficoms
adc
sar
cmc
insb
gs
das
insb
arpl
and
dec
ret
mov
mov
xor
add
add
daa
stos
iret
lea
mov
cmc
repnz
xchg
fisubs
jnp
sbb
inc
or
xor
ffreep
popa
idiv
in
scas
test
rcl
jl
sbb
pop
xchg
loop,pn
shll
rorb
cwtl
jbe
adc
movsl
pop
cltd
mov
bnd
in
jns
cmp
hlt
sub
xor
lods
push
sbb
loopne
or
xchg
int3
fucomi
mov
movsl
data16
data16
pop
jmp
add
aam
push
jnp
call
repz
shl
inc
mov
sahf
lods
jmp
icebp
sub
sbb
or
fisttpl
sbb
and
jne
daa
inc
popf
pop
sbb
cmp
jecxz
dec
cmp
lds
jg
xchg
imul
fwait
aas
and
adc
mov
test
cmpsl
lcall
push
and
push
pop
inc
loope
mov
and
movsl
outsl
adc
pop
mov
popf
mov
sbb
sbb
mov
cmpsb
fdiv
fisttps
adc
lret
add
mov
push
xchg
push
jno
test
aad
dec
hlt
pop
mov
xlat
int
ss
push
leave
out
mov
sub
decl
mov
cmp
jnp
and
js
fnstsw
xchg
cmc
fwait
enter
pop
fldenv
sbb
pop
shrb
stos
loopne
shrb
pop
jg
into
fidivs
aad
xor
js
leave
jns
adc
xchg
cmp
rcrb
lahf
loopne
ljmp
cmp
push
in
mov
sbbl
inc
xchg
test
push
mov
or
cltd
or
push
fdivrl
sbb
push
imul
lock
cld
cmc
out
ja
stos
sub
push
mov
jp
pop
nop
jnp
xor
mov
hlt
push
xorl
out
ret
jle
enter
xchg
sti
sbb
test
fildll
out
std
mov
jle
sbb
sbb
mov
popf
leave
inc
pusha
inc
and
jecxz
pop
ljmp
stos
insl
stos
pop
mov
test
and
sarb
bound
shll
inc
insl
shlb
and
xchg
add
cmp
aam
jge
sub
add
push
addb
sar
xchg
jmp
lock
stos
leave
data16
or
aad
cld
test
pop
imul
fstps
test
xchg
hlt
lret
scas
fwait
inc
mov
icebp
mov
and
test
repz
fisubrl
out
fcmove
mov
pop
pop
dec
lds
mov
cmp
aas
ret
sbb
das
lds
mov
mov
das
stos
out
cmc
mov
or
data16
jb
lea
dec
sub
adc
icebp
not
imul
mov
sbb
jmpw
lock
out
cmp
das
jns
int3
sub
jbe
mov
or
jo
nop
jne
nop
pop
xchg
xor
mov
jp
xlat
stos
stos
xchg
dec
enter
imul
ret
test
mov
ret
pop
sbb
lock
and
int3
icebp
les
inc
add
mov
cs
jmp
and
cmp
jp
sbb
out
mov
inc
cli
sbb
rorl
mov
pop
loopne
add
sbb
dec
cmp
push
ficoml
jmp
stc
pop
jmp
xor
loope
sbb
in
fwait
mov
fildl
inc
pop
mov
inc
fcompl
mov
inc
xchg
cmpsb
adc
pop
bound
arpl
iret
inc
and
fsubl
leave
jo
fcmovbe
mov
sub
cmp
fdivr
shll
aas
mov
ret
mov
fimull
fldt
add
je
cmp
aam
mov
subl
inc
stos
cmc
push
in
mov
fiadds
insb
sbb
inc
jae
nop
daa
scas
fsubl
test
ljmp
mov
stos
shll
push
lods
js
ret
enter
mov
xchg
dec
dec
in
sti
lods
cmpsb
frndint
movsl
cwtl
jmp
insl
jecxz
sub
jmp
mov
cmp
stos
pushf
ja
in
xchg
mov
rcrb
add
loopne
jl
sbb
mov
mov
loop
leave
sub
mov
mov
fldl
out
dec
pop
fcmovnbe
jecxz
lds
stos
jmp
es
jecxz
insl
sbbl
jmp
call
fistpll
push
cmp
mov
jge
or
ror
scas
scas
xchg
mov
sub
negb
enter
shll
adcb
aam
ret
lods
ficoms
inc
das
ret
cmp
cmp
pop
popf
jbe
ret
sbb
cld
out
in
cmp
ret
hlt
popf
jecxz
jae
push
mov
aam
or
sub
lods
inc
jnp
xlat
rcr
pop
stos
aad
push
pop
ss
cs
iret
jmp
ret
fwait
mov
ljmp
inc
dec
ss
inc
jnp
mov
add
data16
aam
in
in
mov
jae
lods
adc
cmp
std
enter
xor
iret
ret
int
cwtl
dec
dec
xchg
inc
dec
pop
push
mov
or
xchg
sarb
mov
mov
leave
mov
jns
mov
mov
fdivs
pushf
add
mov
leave
mov
xlat
pop
stos
sbbl
insl
cs
jle
loopne
xor
roll
fstpt
fidivrl
dec
xchg
pusha
mov
out
std
fsubrl
mov
fwait
inc
in
push
insl
ret
sbb
jmp
mov
ret
fstpt
fisttpll
pop
mov
inc
iret
mov
jge
sti
mov
sbb
add
sbb
outsl
mov
xor
cmpsb
push
in
scas
push
mov
lret
dec
arpl
mov
adc
pop
and
std
enter
hlt
jne
cmp
into
sub
popa
add
fcmovnu
jmp
fcmovnbe
test
imul
fnstsw
pop
andb
fsubrl
and
inc
xlat
out
bound
std
xor
aad
sti
div
shl
shr
es
mov
ficoms
in
loope
aam
and
cli
cmpsl
sbb
xlat
stos
lods
fldcw
aam
iret
aad
mov
call
xchg
fs
aad
mov
cmp
dec
rcrl
sbb
test
adc
xchg
into
mov
insb
push
inc
loope
lret
aam
mov
test
clc
out
dec
leave
out
xchg
fidivs
imul
push
cmp
gs
addr16
pop
sbb
mov
scas
loope
jns
jmp
xor
insb
test
sahf
outsl
xchg
div
nop
lea
xchg
push
jne
jnp
dec
pop
xchg
loope
inc
imul
out
imul
sbb
pop
ljmp
fldcw
lcall
fisubrl
loopne
and
mov
stos
inc
sbb
jnp
xor
mov
push
add
sub
jno
stos
mov
cs
fbstp
cld
std
imulb
lcall
cltd
sub
xlat
cmp
inc
mov
cmp
insb
mov
dec
xchg
sbb
fcmovne
arpl
mov
popa
sbb
test
mov
mov
xor
jp
cmp
orb
loopne
sub
mov
es
cmp
pop
cs
jle
inc
lcall
push
sahf
dec
pop
imul
outsl
cmp
fcos
fcmovnbe
rcrl
ds
stos
push
std
sbb
jmp
adc
loopne
imul
fstpt
in
add
mov
mov
stc
popf
iret
enter
out
mov
jmp
fcmovnbe
rclb
pop
cmp
cmp
and
mov
jge
mov
jle
xchg
andl
mov
out
jp
shll
add
insb
aas
icebp
dec
fwait
imul
adc
pushf
push
xchg
adc
mov
std
movsl
call
scas
gs
icebp
test
push
sub
push
leave
dec
dec
or
push
mov
xchg
fsubrl
and
jns
das
dec
xor
dec
inc
xchg
fisubrl
outsl
jecxz
fistpl
lods
adc
fdivrp
fisubl
jge
dec
movsb
mov
jecxz
test
sbb
jp
pushl
sbb
mov
xor
xlat
mov
cmp
fstpl
ret
adc
add
pushf
lods
xor
pop
and
out
test
mov
push
sbb
or
scas
je
aam
ret
push
leave
aas
cmpsb
popf
and
lcall
flds
xchg
loopne
fistpl
test
movsl
enter
sbb
adc
addb
imul
mov
fidivrs
sub
addr16
in
cwtl
xchg
hlt
inc
xor
sbb
rcrl
imul
pop
arpl
jmp
mov
fmul
mov
cmp
push
jp
jbe
int3
pop
jnp
pop
aaa
lea
xchg
jne
leave
ds
push
repnz
aad
pop
push
gs
cmc
mov
ljmp
mov
hlt
mov
sarl
mov
dec
outsl
inc
fs
xchg
jno
mov
pop
jmp
inc
cmp
add
dec
add
pop
aaa
sbb
lock
mov
pop
sti
movsb
mov
pop
and
add
inc
outsl
pop
ror
mov
andl
add
cs
xor
fldl2t
mov
inc
aam
repz
inc
xchg
fdivr
pop
inc
jmp
push
push
and
sti
daa
push
in
lret
test
jmp
rorb
inc
xchg
sbb
and
fs
js
jmp
xchg
call
fwait
mov
mov
dec
enter
je
fcompl
jl
arpl
mov
gs
mov
fsubs
imul
inc
popa
aad
sub
fmuls
les
xchg
dec
inc
arpl
fcoms
insb
cld
cli
xor
cmp
push
pop
jmp
push
pushf
shll
or
out
pop
ret
push
outsl
mov
int3
pop
fcmovbe
and
add
js
xchg
mov
or
jno
mov
xchg
in
mov
xchg
xchg
or
insl
enter
stc
std
imul
cmp
mov
dec
test
mov
cmpsb
push
ret
push
loope
mov
adc
frstor
sub
pushf
mov
inc
shll
stos
in
ja
or
mov
in
mov
jmp
mov
sbb
sbb
mov
iret
xchg
push
dec
jb
sbb
sbb
jno
mov
fmull
mov
aam
adc
add
mov
adc
leave
int3
push
pop
int3
mov
pop
sbb
das
adc
pop
insl
ljmp
rcll
pop
iret
cmpsb
inc
stos
pop
mov
jmp
pop
mov
sbb
mov
ljmp
inc
mov
mov
fsubr
jnp
lret
xchg
adc
pop
add
data16
jno
mov
int3
jmp
jmp
push
add
movsb
aas
adc
ljmp
outsb
imul
pop
push
les
int3
mov
inc
mov
sbbl
ja
or
andb
in
call
out
cmp
mov
cmc
shr
popl
les
cmpl
pop
dec
ret
xor
and
pop
jmp
cld
incb
dec
es
test
cmpsb
fwait
rcrl
in
xchg
popf
jno
push
inc
rorl
push
cld
pop
fucomp
mov
lods
jnp
and
jp
and
jb
outsl
inc
out
xor
sbb
sbbl
ljmp
inc
popf
call
xor
cmp
fwait
sbb
cmp
flds
outsl
mov
cmp
cmp
fldcw
adc
adc
lock
mov
pop
cmp
lds
hlt
sub
ffreep
xchg
jp
mov
xor
fistpll
mov
xor
sbb
cmpsl
or
inc
leave
ficompl
mov
aas
jnp
inc
into
or
cmc
pop
mov
popf
and
xchg
sar
inc
sub
mov
pop
movsl
enter
or
mov
sbbb
rcll
push
sub
jl
jecxz
inc
sbbl
sub
jnp
jno
mov
aaa
xor
xchg
shll
fcomps
fdivrl
sub
jns
dec
mov
push
shll
ret
and
insb
pop
xor
shl
cltd
cmp
add
mov
stos
jno
jnp
pop
pop
jecxz
jno
xchg
mov
outsl
jmp
sbb
xor
es
jbe
dec
ss
je
lret
cmp
nop
ds
sbb
repz
stos
xchg
ljmp
mov
or
fildll
push
fiaddl
stos
xlat
leave
pop
xor
jnp
or
pop
push
dec
sub
test
jno
ret
cld
and
cmp
sbb
or
push
or
in
push
ror
mov
dec
and
test
jnp
jmp
lret
das
and
xor
test
xor
fcmovne
scas
xchg
aam
push
mov
outsl
jle
lock
jle
aas
dec
jae
movsl
and
mov
lds
rol
cmpsb
out
pop
mov
jbe
xchg
mov
pop
sub
cmp
xchg
inc
inc
cli
scas
mov
mov
inc
or
mov
scas
rcrl
lcall
testl
xchg
popf
and
ja
mov
sbb
scas
fimull
das
daa
xchg
push
sbb
ljmp
rolb
out
or
adcl
fidivrl
lods
jns
mov
jns
out
mov
push
ljmp
mov
mov
dec
dec
push
inc
fimull
add
add
test
lret
inc
sbb
or
iret
mov
pop
in
sbb
inc
inc
fs
in
ficompl
mov
fbld
push
orl
enter
aas
jnp
fstps
aad
sarl
iret
sbb
enter
mov
rcrl
xor
pop
xchg
outsl
repz
push
pop
adc
jmp
iret
push
dec
jecxz
push
jl
mov
push
outsl
dec
sub
jle
mov
push
je
je
dec
leave
pop
lds
xlat
aas
sbb
inc
fndisi(8087
pop
shll
xchg
imul
sbb
popf
dec
in
fstl
pop
cmpsl
adc
jno
iret
cld
xor
out
push
mov
mov
and
sbb
mov
mov
cmpsl
jne
xor
in
add
or
fistpll
mov
xor
ljmp
jmp
xchg
sub
aam
xor
and
sbb
xchg
ja,pt
sbb
sub
pop
sub
add
ror
mov
test
jns
repz
cmc
jecxz
testb
xchg
push
mov
rolb
cmp
mov
fucomp
clc
push
pop
in
std
xchg
out
shrl
xchg
sbb
xlat
popa
hlt
arpl
inc
in
push
test
fsincos
sbb
or
pop
cmpsb
fisttpll
mov
inc
idiv
dec
aaa
inc
dec
lods
loope
jg
lahf
xor
sub
cltd
ljmp
pop
scas
or
sub
mov
negb
cmp
mov
push
xchg
dec
pop
out
clc
mov
gs
and
clc
mov
sub
inc
ret
adc
push
jmp
push
inc
in
push
sti
fcmovnb
sbb
in
xlat
jecxz
jmp
mov
fistl
adc
and
push
loope
or
aaa
dec
std
pop
inc
addr16
mov
in
mov
pop
mov
jmp
sbb
and
insl
cmpl
xchg
nop
fnsave
int
push
test
aad
rcrl
push
fcmovne
push
fmull
jne
jnp
icebp
mov
jecxz
stc
stos
sub
ret
pop
scas
push
clc
jae
or
out
outsl
sbb
out
sbb
xor
pop
dec
outsl
sbb
mov
inc
in
xchg
cmp
std
inc
data16
jnp
and
or
std
fldt
xor
jle
lods
mov
out
stos
imul
dec
jmp
mov
jns
push
es
inc
cli
insl
mov
cmp
inc
fnstsw
mov
jp
push
adc
mov
adc
mov
and
imul
stc
xchg
dec
sub
pushf
call
cmp
nop
xlat
fwait
test
mov
or
insl
sbb
push
push
mov
and
aad
fucomp
ficompl
mov
test
lret
or
mov
add
and
sti
mov
jecxz
cmp
ds
pop
mov
xchg
gs
ljmp
adc
leave
aas
sbb
aam
aad
and
xchg
add
push
xor
inc
sbb
push
fnsave
mov
cmp
xor
ja
vmread
nop
jmp
mov
mov
sbb
dec
mov
dec
mov
cmpsb
inc
jno
jno
rcll
dec
repz
call
rcll
mov
imul
jmp
test
lods
cli
pop
jp
insl
mov
inc
scas
lcall
adc
aas
jo
rorb
xlat
inc
pop
imul
push
sub
scas
inc
shrl
sbb
cmp
loop
popa
stos
jge
fs
out
add
mov
lock
adc
cmc
mov
insl
es
cmp
xor
xor
xchg
push
and
lea
cmp
xchg
push
js
jnp
jmp
xchg
cmpsl
pop
mov
into
xlat
stos
add
mov
jle
jmp
pusha
dec
mov
mov
pop
test
xlat
pop
sbb
hlt
int
and
outsb
std
mov
mov
jb
sbb
mov
xchg
and
aas
std
xchg
sbb
sbb
fdivrl
aas
ret
in
std
mov
shl
loop
jmp
lret
loope
add
pop
jae
repz
imul
pop
mov
xorl
fwait
xchg
xchg
xor
push
out
jno
and
hlt
insl
inc
aad
push
iret
cltd
mov
into
xor
mov
sbb
sbb
out
sub
xor
ret
dec
insl
inc
mov
mov
lret
push
jnp
aas
arpl
lods
pop
dec
loope
ss
mov
inc
cwtl
fnsave
pop
enter
fwait
mov
int
push
sti
sbb
inc
inc
sub
mov
mov
out
xor
out
sub
and
loopw
add
mov
stos
shll
stc
add
push
jmp
pop
and
popa
in
pop
loop
sbb
or
aad
sub
sbb
in
mov
push
jae
lahf
cltd
mov
push
inc
pop
push
aad
aad
int3
stc
cltd
jecxz
cwtl
sub
rorl
mov
adcb
jnp
iret
inc
daa
cwtl
mov
dec
mov
push
xlat
stos
jmp
rol
dec
icebp
std
stos
xchg
out
repz
loope
stc
inc
add
cmpb
cmc
sbb
xchg
xchg
pushl
inc
lods
push
and
cmp
fwait
push
xor
mov
pop
lret
scas
or
push
out
mov
std
dec
daa
pop
pop
xor
test
in
pop
jmp
pop
lahf
or
inc
fnsave
push
xlat
frstor
je
sbb
jne
xor
in
sbb
pop
ja
inc
test
fst
imul
fdivr
ja
stc
sub
xor
out
push
mov
mov
adc
das
pop
or
pusha
sub
subb
cmp
or
inc
push
pop
imull
nop
outsb
les
mov
cmp
lods
rcl
dec
mov
sub
inc
addr16
imul
jnp
jp
jns
xchg
dec
orl
das
jecxz
dec
sub
popf
cwtl
add
rcrl
leave
aam
dec
scas
iret
cmp
sbb
push
cwtl
add
adc
lds
jl
nop
jle
dec
mov
movsl
ret
fcmovnu
sub
fcmovnbe
jmp
shl
adc
data16
in
and
dec
add
dec
es
and
sbb
loopne
mov
mov
shll
xlat
push
int
xchg
pushf
cmpsb
negl
jmp
or
ror
pop
sub
inc
pusha
cmp
loopne
pop
inc
xor
out
inc
fsubl
repnz
cmc
mov
lock
add
lret
cmp
push
aam
pop
imull
jmp
xchg
add
and
addr16
insb
in
adc
sub
xor
rorl
ret
push
cmpsl
mov
pop
xchg
out
and
ss
xchg
dec
rclb
das
bound
out
sub
movsl
mov
cs
xor
sbb
bound
pop
scas
mov
sub
sbb
fildll
clc
mov
mov
in
mov
pop
ja
add
mov
stc
xor
or
fbld
inc
fcompl
pusha
fldl
adc
inc
aas
sbb
jae
dec
dec
pop
xor
xor
fmull
jmp
mov
leave
fsubrp
jnp
xchg
pop
jge
imul
das
or
mov
push
lea
fisttpl
inc
rcll
add
fistl
sarl
adc
ret
cmovg
cltd
and
and
mov
sbb
mov
push
cmp
pop
sbb
test
mov
sbb
daa
pop
add
fimuls
cmp
lea
mov
adc
and
mov
jnp
fistpll
ja
mov
mov
pop
and
xlat
and
leave
ret
popa
rolb
cs
fcoml
cli
sbb
inc
jno
push
jl
bound
jno
and
test
xor
fistpl
ror
in
mov
pop
stos
popf
mov
push
adc
inc
inc
push
mov
loopne
into
insb
inc
mov
inc
loopne
jbe
jno
cmp
leave
andl
fdivl
loop
lods
and
repnz
loopne
sub
imul
nop
dec
leave
fiadds
cwtl
pop
sbb
lock
fwait
sub
sbb
sub
insl
xchg
mov
dec
jmp
fmull
or
xor
clc
nop
adc
out
inc
sbb
sub
out
pop
xchg
sbb
repz
fcompl
scas
xor
fstps
sbb
sub
loop
notb
loope
or
insl
fcmovu
out
loop
cmp
mov
aam
push
in
rcll
ss
femms
mov
inc
inc
sbb
jne
mov
or
push
push
lcall
push
cmp
sbb
pop
mov
dec
arpl
movsl
cltd
daa
adc
addr16
xchg
mov
movsb
push
in
jecxz
ficoml
adc
xchg
arpl
fcom
add
aam
sub
jmp
addr16
dec
lahf
cmpsb
push
in
jns
or
scas
popf
rorl
jnp
xlat
mov
subb
outsl
sub
popa
mov
xchg
sbb
jno
xor
sbb
out
mov
push
faddl
psrlw
and
and
xchg
stos
ljmp
repnz
mov
mov
xchg
jbe
orl
dec
imul
mov
test
sbb
cwtl
fcmove
std
fistps
push
inc
xor
cmp
fdivrl
das
enter
sbb
sti
and
mov
cmp
movb
aaa
and
cmp
and
fdivr
in
mov
sbb
popf
js
xor
sbb
pop
ret
sbb
jmp
das
icebp
or
xor
add
out
cmp
pop
fmuls
into
data16
mov
jg
andl
daa
sarl
pop
and
je
cld
xchg
and
xchg
mov
inc
jb
arpl
or
push
mov
test
adc
push
jp
pop
push
in
test
or
pushf
sub
frstor
ret
out
and
jg
cmp
pop
push
fdivrl
and
roll
dec
push
mov
mov
icebp
and
divb
xchg
ficoml
ss
pop
fcoml
or
aas
clc
push
fiadds
mov
out
push
pop
out
pop
pop
mov
pop
jecxz
jg
push
cmp
and
pop
or
scas
rol
call
dec
popa
popa
sbb
mov
jo
dec
and
mov
rcl
outsl
incl
iret
pop
daa
enter
mov
pop
hlt
xor
mov
shrb
popf
inc
and
aas
stos
pop
stc
enter
hlt
mov
lds
or
pop
out
xlat
and
insl
adc
test
fiaddl
movb
xchg
mov
mov
sti
and
aam
push
add
outsl
jae
sub
adc
outsl
mov
scas
fldenv
fnstenv
cmpsl
bound
inc
inc
xchg
bound
loop
aas
and
mov
rorl
sub
pop
jbe
frstor
std
out
shll
int
add
add
sbb
andb
mov
out
mov
cltd
cwtl
mov
fisubs
lret
and
dec
sub
mov
sub
mov
jecxz
rorb
mov
test
dec
andl
and
fwait
stos
pop
adc
dec
xchg
inc
pop
push
mov
pop
rcrl
cmp
push
mov
in
jmp
mov
loope
es
rcrl
mov
cwtl
add
in
mov
add
adc
push
out
popa
fnstsw
lahf
ret
es
jb
cltd
push
fdivs
xor
aas
sahf
pop
xor
mov
test
push
dec
rcl
inc
dec
dec
xor
data16
aad
mov
lds
leave
fisttps
fcomp
xchg
dec
clc
xor
or
ficoms
sbb
jnp
cli
stos
jmp
lret
sbb
hlt
pop
xor
daa
push
fdivrs
pop
ret
xchg
sbb
jnp
mov
repz
push
inc
sub
fsubrl
dec
test
rcl
mov
outsl
scas
push
add
aad
cs
xchg
and
sarb
in
sub
mov
xor
leave
jo
fidivrl
sar
fcom
jmp
in
xchg
lea
lret
lds
icebp
adc
andl
push
in
ret
nopl
lret
movsl
in
dec
or
in
psubq
icebp
sbb
xchg
andb
sbb
dec
in
sbb
test
mov
mov
lcall
out
push
push
xchg
inc
lahf
or
testl
sbb
sti
fcomps
jne
add
hlt
iret
cmpsl
cmp
lahf
xchg
inc
in
cltd
sbb
sbb
sbbl
xchg
ret
fsubrs
mov
pop
test
int
sbb
mov
iret
and
pop
pop
mov
in
stc
mov
inc
cmp
dec
add
adc
push
xor
mov
xchg
das
jmp
ret
mov
push
lret
cli
orl
inc
pop
mov
xchg
loop
jno
add
gs
fmul
rclb
jcxz
inc
frstor
insb
pop
jbe
lds
imul
test
mov
mov
sub
negl
mov
je
fucom
fistl
jmp
pop
lahf
aad
cmp
push
jge
jne
sti
rcl
lods
and
movb
subl
hlt
aam
dec
add
scas
dec
sub
pop
xchg
gs
dec
idivb
sbb
jecxz
dec
outsl
rolb
sub
mov
pop
sub
xchg
mov
data16
push
mov
dec
loop
pushf
dec
jo
cld
pusha
lahf
repnz
in
test
xchg
in
fimull
sbb
adc
dec
jbe
fstpl
jmp
jns
xchg
stos
shl
mov
jecxz
std
roll
mov
mov
xchg
mov
jg
inc
popf
imul
pop
cmp
mov
daa
outsl
leave
loope
xchg
inc
xchg
inc
leave
inc
and
pop
push
adc
xchg
push
push
fimull
pop
and
mov
push
std
js
jecxz
xlat
push
hlt
xchg
das
pop
scas
sub
push
mov
je
sbb
dec
inc
fbstp
in
adc
sbb
xor
push
fildl
and
mov
loopne
repz
ret
lods
sarb
xor
cld
fisttpl
fistl
sti
sbb
in
and
aad
retw
loop
andl
add
jmp
pop
pusha
cld
ret
in
popf
test
add
jo
ret
xor
insl
imul
sub
imul
shll
adc
lret
xchg
fcomp
jp
je
pop
xor
lcall
scas
fsts
fsubs
adc
les
dec
rcl
xlat
adc
sbbl
jno
imul
pop
pop
shll
leave
leave
ret
into
push
int
fists
js
inc
xchg
je
xchg
ret
jns
ror
cmp
jecxz
roll
cmp
xchg
call
and
jne
xlat
jg
js
fucomip
lock
or
jecxz
data16
out
fstpt
dec
add
in
cwtl
pushf
ror
lods
ss
lret
jnp
stc
xchg
xor
adc
test
push
jnp
xchg
and
sub
ss
push
out
mov
push
and
mov
or
test
jp
mov
and
sbb
sti
add
dec
repz
cld
test
push
push
int
and
pop
and
in
repnz
jbe
frstor
mov
cmovbe
popf
add
inc
jg
mov
pushf
sub
and
add
add
and
push
fsts
ss
pop
xor
push
enter
inc
adc
xchg
and
inc
pop
jecxz
jp
pop
mov
push
cli
sbb
mov
cmp
ret
test
icebp
in
aad
je
push
icebp
sbb
cmp
loopne
stc
inc
xchg
jnp
stc
idivb
stc
jp
fsubl
inc
fs
cs
push
ret
jmp
iret
inc
pop
push
imul
call
sub
cs
mov
iret
dec
int3
push
repz
inc
or
in
sbb
and
lcall
int
mov
add
and
xor
jo
imul
push
add
jbe
ret
inc
mov
mov
sbb
outsl
mov
ret
xchg
lret
mov
push
imul
dec
in
inc
xor
lds
adc
fsubrl
test
xor
jmp
es
and
aam
leave
outsb
xchg
and
jno
or
jns
sti
mov
enter
repnz
pop
iret
jnp
sub
ret
cmp
add
subb
call
jmp
sub
orl
ds
inc
jb
xor
pop
dec
jmp
out
outsl
or
pop
aaa
je
orl
dec
xor
lret
adc
mov
mov
hlt
in
xchg
sbb
leave
cli
ret
test
mov
arpl
mov
lea
xchg
loope
xchg
dec
mov
daa
cmc
int
push
add
jne
push
sbb
mov
push
jns
mov
mov
bound
rcr
mov
jl
mov
xor
pop
std
lods
mov
ds
sti
jmp
sbb
daa
adc
jmp
cmp
jmp
ret
push
mov
dec
call
sbb
fcmovnbe
out
imul
jnp
ljmp
shlb
jmp
lds
dec
jmp
popa
sub
or
test
mov
pop
inc
pop
in
jmp
out
aad
xor
je
push
xorl
aam
out
fdivrs
fidivrl
mov
sbb
test
pusha
xorl
sahf
fidivl
pop
loope
push
dec
and
test
mov
sarl
out
ficompl
shrl
in
cmpsb
popf
sbb
loopne
cmpsb
mov
inc
lods
rcr
imul
sbb
lcall
fiaddl
cli
mov
int
sbb
mov
icebp
int
sbb
gs
push
xor
in
aam
xchg
fwait
cmp
cmp
and
mov
push
mov
sbb
adc
ret
xchg
push
jnp
sbb
aaa
in
repz
sub
mov
cmc
xor
ret
push
push
push
imul
pusha
es
xchg
insl
push
mov
repz
mov
xchg
sub
dec
jl
fistps
icebp
xor
mov
dec
mov
fwait
cmp
stos
pop
push
les
mov
fmull
inc
pop
dec
push
es
jmp
mov
imul
arpl
ror
cwtl
test
gs
sbb
jecxz
dec
push
pop
and
jecxz
xlat
sub
add
test
sbb
or
inc
jecxz
xchg
out
mov
xchg
cmp
inc
inc
jge
shll
les
xchg
mul
cmp
mov
push
push
dec
pusha
mov
in
daa
inc
mov
iret
sbb
jle
imul
and
xchg
lods
push
pop
ret
or
xor
inc
jns
sbb
inc
aam
mov
popa
dec
stc
popf
popa
addr16
gs
stos
sub
add
aam
test
cs
jb
mov
cld
jge
pop
test
test
enter
int
iret
adc
and
cmc
frstor
mov
jbe
inc
dec
leave
mov
mov
or
cli
pusha
mov
cs
xchg
and
inc
aad
stc
or
in
test
jno
push
mov
fistl
jbe
push
in
mov
sbb
sub
mov
dec
leave
call
xlat
fdivrs
or
xor
mov
jp
sbb
inc
stos
mov
xchg
fstpl
lea
cmp
pop
push
cs
push
pop
jo
mov
pop
mov
pop
jb
stc
mov
inc
std
mov
frstor
push
lcall
or
push
inc
dec
cli
mov
xchg
mov
dec
shrb
dec
shrb
cwtl
loopne
sub
test
xchg
mov
xchg
pop
and
sti
inc
inc
les
pop
mov
and
cmc
xchg
mov
lret
pop
cmpsl
fistpll
fcompp
mov
ja
push
int3
lea
xor
pop
cmp
or
xchg
pop
subl
iret
repz
cmp
jbe
pop
popa
pop
addb
int
inc
loop
inc
enter
or
and
or
lods
pop
xlat
loop
popa
pop
or
icebp
push
xorl
xlat
xor
shll
int
jbe
fiaddl
jne
inc
jne
fstl
mov
pop
rol
imul
sub
lock
aad
ret
mov
pop
fdivrl
mov
jno
stos
test
pop
enter
fsubrl
in
xchg
aad
push
pusha
andl
sbb
pop
fistpll
xor
cmp
mov
jb
push
cmpsl
mov
inc
mov
stos
das
sbb
jp
cmp
lea
mov
dec
repnz
out
or
ret
mov
xchg
in
das
iret
out
iret
jnp
test
loop
ljmp
lret
cmp
lahf
mov
add
fwait
test
mov
std
jns
sub
dec
inc
mov
stos
dec
ss
inc
fcmovb
sub
adc
xor
je
ret
dec
mov
push
lods
lods
sbb
scas
les
mov
int
dec
out
ja
dec
lock
push
int3
mov
pop
inc
repnz
inc
outsl
push
dec
addr16
lret
mov
sub
stos
out
cmp
or
lea
push
dec
push
stos
in
fcmovnb
jmp
mov
jno
jmp
push
ss
jle
inc
dec
mov
les
sub
into
imul
hlt
sub
dec
fincstp
mov
xchg
dec
xchg
mov
cli
mov
jmp
xor
sbb
pop
shl
mov
xchg
mov
ret
pop
cmp
aam
xchg
sti
out
push
cli
ljmp
leave
dec
or
cmp
mov
inc
leave
pop
pop
xchg
mov
mov
lods
pop
ret
fmuls
repnz
mov
adc
or
flds
ret
lea
ds
outsb
rorb
ds
rclb
or
lea
jmp
mov
jp
jnp
push
testl
dec
iret
jae
push
shlb
popl
ret
xchg
sub
mov
jmp
lds
push
push
fildl
inc
add
mov
mov
es
dec
dec
test
cli
into
daa
ret
push
and
lret
imul
mov
ficoml
inc
inc
pop
fildll
loopne
fucomp
fnstenv
sbb
arpl
loope
shr
mov
lds
jnp
or
push
inc
xchg
or
inc
fiaddl
fisubrl
fdivs
cli
dec
ss
addr16
dec
mov
popa
mov
mov
add
fwait
ret
cmpsb
sbb
imul
les
sub
sti
jmp
xchg
fcmovnu
push
bound
test
stc
mov
cmp
dec
outsb
xchg
cltd
pop
jae
ljmp
shr
mov
out
lret
fsqrt
mov
dec
imul
jecxz
ja
mov
daa
insb
dec
jmp
ljmp
lret
dec
mov
rorb
sub
jmp
ficompl
inc
dec
mov
cld
jecxz
mov
or
lea
fdivrs
ljmp
mov
xlat
xchg
jae
mov
fisubrl
stos
mov
pop
or
enter
cmpsb
fwait
in
sti
fisttpl
fiaddl
inc
jp
fildl
mov
cmpsl
std
sti
movsb
fstpt
ret
xchg
jmp
rcrl
push
dec
shr
pop
push
flds
test
dec
lea
shrl
cmp
dec
push
lret
repz
iret
add
iret
jecxz
jp
jmp
ret
and
inc
int
mov
jmp
ret
daa
mov
pop
fistl
jmp
fidivl
sub
dec
jmp
fimull
cli
subb
mov
sti
sahf
ljmp
inc
mov
cmp
pop
adc
outsl
iret
jmp
fisubrl
mov
push
fisubl
jmp
insl
repnz
jmp
xor
ss
or
fisubrl
into
inc
xor
inc
iret
cmpsb
jecxz
mov
inc
stos
xchg
pop
stos
dec
aas
loope
pop
inc
in
mov
xchg
cmp
imul
jae
xlat
in
test
sti
stos
stc
andl
fdivrl
iret
inc
bound
or
inc
jb
mov
popf
popf
mov
mov
fxch
add
pop
lea
jae
mov
inc
sub
mov
inc
cli
out
xchg
xchg
jecxz
dec
jecxz
fistps
sahf
ja
iret
repz
cmp
pop
push
mov
iret
inc
mov
lea
jecxz
or
inc
xlat
daa
repnz
push
xlat
lea
add
mov
xor
mov
out
jmp
les
jmp
in
sti
inc
ret
fisubl
push
addr16
ret
filds
xlat
jnp
jg
test
pop
pop
lds
loope
jl
mov
orl
jnp
in
fwait
pop
rorb
in
mov
mov
mov
fcmovnbe
cmp
fisubrl
sbb
jg
int3
out
fisttpl
push
in
mov
imul
xchg
in
cmpsb
sub
imul
mov
or
in
lahf
jns
in
sbb
in
stos
aad
out
cmp
jnp
lea
mov
lret
outsb
cmpsb
fucomi
lcall
lcall
cmp
sbb
fwait
loopne
dec
dec
xchg
iret
cltd
xor
add
fstpt
cltd
cld
dec
adc
outsl
cmp
jmp
jecxz
inc
mov
fldcw
cmp
movsl
addr16
mov
jns
imul
lcall
cmpl
test
inc
cmc
jmp
andl
cmp
sarb
adc
inc
pushf
inc
or
scas
in
xchg
add
cmp
mov
nop
lods
fldcw
adc
and
dec
shl
push
in
stos
jmp
les
pop
les
repnz
inc
cmp
loopne
cmp
popf
iret
inc
dec
daa
mov
lods
push
mov
or
mov
jo
xchg
fsubs
out
inc
fucomi
test
fisubl
je
sbb
inc
mov
mov
adc
xor
test
jnp
and
imul
cmpsb
ret
ss
lds
mov
dec
cltd
inc
ss
aam
out
inc
mov
push
xchg
sub
in
jbe
imull
jmp
insl
cmp
cmp
in
jmp
jmp
dec
ss
fsubrp
adc
mov
stos
imul
ret
imul
fldenv
sbb
out
inc
mov
fisttps
lods
inc
pop
dec
adc
out
ficompl
mov
or
xchg
iret
xchg
ljmp
in
push
jecxz
jp
out
icebp
test
jnp
inc
fildl
out
sahf
xchg
mov
ret
xchg
sbb
es
ret
xchg
cmc
ljmp
dec
lret
ret
sub
xchg
fistl
enter
mov
inc
jecxz
inc
mov
mov
xor
xor
jmp
imul
imul
jmp
sub
inc
mov
xchg
lea
mov
loop
mov
enter
jle
clc
arpl
in
mov
test
jmp
leave
loop
mov
adc
mov
cmp
dec
xlat
mov
fdivl
cmp
push
pop
cmc
dec
add
inc
fwait
leave
fisttpll
push
icebp
outsb
decb
jp
sub
inc
pop
jae
lds
int3
mov
hlt
push
push
data16
pop
ret
xchg
mov
mov
cli
xchg
xor
mov
int3
icebp
ret
xchg
mov
cmp
xchg
sarb
sub
arpl
ljmp
jae
mov
flds
add
repz
lahf
xchg
fwait
mov
inc
fwait
mov
shl
xchg
sub
adc
xchg
imul
push
jnp
stos
sbb
xchg
mov
fildl
jnp
out
fiaddl
int
jle
aam
cli
xchg
in
xor
and
or
data16
loope
insl
pushf
fucomip
inc
or
mov
aad
ljmp
and
mov
jns
imul
test
in
loop
mov
stc
cmp
cmc
mov
stc
mov
mov
mov
testb
loope
into
and
or
push
stos
mov
lss
mov
ret
xchg
xchg
pop
imul
mov
xlat
and
sti
out
lcall
mov
or
dec
jp
jnp
negl
mov
outsb
mov
jmp
int3
mov
push
mov
out
dec
popf
fidivrl
jecxz
imul
push
fs
sti
inc
cmp
enter
pop
das
mov
stos
fisttpl
test
or
sbb
xor
fimull
mov
xchg
xchg
cmpl
push
jns
dec
jmp
jecxz
push
push
fmuls
jp
jmp
fimull
insl
bound
mov
mul
mov
xchg
dec
sahf
dec
xchg
cs
mov
aas
enter
dec
lret
inc
push
out
dec
xchg
cmp
jne
dec
cmp
inc
dec
and
dec
mov
cltd
push
cli
inc
mov
lods
adc
push
mov
fcmovu
mov
stos
inc
test
repnz
lret
xor
and
inc
stc
cmp
and
jp
pop
inc
push
fwait
sti
repz
mov
aaa
idiv
sub
fwait
lea
imul
sbb
fnstenv
and
fstp
dec
xchg
in
mov
inc
addl
mov
out
push
dec
jl
cmp
jp
lea
loope
jnp
dec
cmc
out
loope
mov
push
out
fwait
fwait
mov
cmpsb
xchg
in
imul
les
ds
lea
sbb
mov
or
push
cmp
jecxz
mov
inc
addl
push
jmp
fiaddl
xchg
std
push
and
orb
ret
clc
xchg
xchg
shll
ret
mov
and
push
pop
ljmp
andl
mov
dec
repnz
mov
inc
sti
cs
scas
fldl2e
arpl
xlat
add
addl
and
out
test
fcmovnu
push
dec
push
lret
dec
xchg
inc
mov
cld
push
movsb
sub
and
mov
inc
inc
notb
repz
push
jl
test
jb
dec
and
mov
inc
push
xchg
sub
and
mov
inc
inc
jmp
xchg
mov
fldpi
ss
test
jb
add
fldpi
push
imulb
push
and
out
in
scas
imul
out
stos
jmp
push
in
ljmp
iret
jmp
int
jmp
insl
fcmovu
pop
inc
cld
lea
mov
add
inc
mov
iret
lock
cmp
enter
and
addl
sbb
inc
jge
addb
or
inc
mov
repz
inc
scas
loopne
jnp
jge
sub
mov
xchg
push
pop
loop
in
rol
lea
cli
daa
ret
xlat
lea
mov
xchg
mov
in
adc
sbb
repnz
and
fstps
leave
xchg
rorb
jmp
pop
stos
inc
mov
sbb
sbb
add
imul
inc
dec
pop
js
lods
mov
mov
in
sbb
scas
sub
pop
pop
jge
lea
xchg
lret
push
or
loope
mov
adc
sti
mov
lcall
inc
scas
dec
ret
cmpsb
jp
sbb
outsl
les
jmp
cwtl
data16
ret
mov
out
jl
cs
rolb
fisttpl
cltd
fisubrl
jnp
out
ret
xchg
ss
inc
adc
pop
fstpl
add
bound
lods
or
dec
std
dec
fisttpl
xchg
cmpl
stos
jmp
push
fcmovu
inc
inc
test
add
daa
cmp
sbb
mov
push
jmp
fwait
lds
adc
in
push
xlat
adc
sarb
insl
dec
mov
test
dec
ffreep
mov
insb
sbb
fbstp
loopne
fucomip
sbb
ffreep
insl
int3
fsub
mov
jmp
pushf
sub
mov
stos
dec
cmp
fldt
adc
pop
mov
popl
xchg
dec
cmp
mov
iret
push
jns
call
in
pop
jmp
shl
ljmp
lds
stos
aas
out
insl
lret
jmp
jmp
mov
cmp
sahf
test
in
mov
subb
dec
mov
in
ss
sub
push
xchg
in
dec
flds
stos
cmpl
mov
jge
sahf
dec
imul
mov
mov
and
mov
mov
in
cltd
add
or
iret
mov
mov
lods
outsb
ja
lret
out
xchg
lret
mov
inc
pop
popf
sahf
dec
adc
mov
lea
in
fisubrs
ret
mov
add
fisttpl
jp
pop
out
push
sub
cmp
pop
nop
ss
aas
push
fsubr
mov
xchg
iret
jl
push
ss
push
jmp
lcall
lret
inc
ror
inc
addl
dec
mov
mov
sarl
fcoms
cs
daa
dec
out
fimuls
xor
mov
out
fwait
lcall
pop
test
js
pop
pop
mov
sti
scas
loopne
mov
movsb
cwtl
flds
cmc
bound
cld
ret
fstpl
xlat
sub
xor
insl
mov
es
repz
mov
aas
ljmp
lea
daa
frstor
pop
mov
cmp
lcall
in
imul
mov
jg
ljmp
dec
outsl
stos
fucomi
cmp
mov
fwait
stos
fwait
inc
or
add
xchg
pop
or
xor
fstps
mov
fisttpl
jmp
addr16
sbb
cltd
inc
jle
dec
cli
jecxz
sti
jecxz
sbb
imul
push
sub
fwait
pop
xchg
fldcw
stos
sbb
dec
pop
cmp
add
imul
iret
pop
mov
xlat
iret
inc
mov
sti
ja
and
jae
ljmp
pop
dec
jp
out
inc
into
xchg
or
mov
stos
fwait
xchg
lret
push
lea
dec
dec
mov
into
inc
sub
jnp
add
lcall
dec
cmp
stos
mov
fxam
mov
xchg
pop
fmul
mov
sub
aam
or
nop
push
lret
mov
xchg
jg
sbb
stos
jmp
push
xor
sub
or
xchg
and
loope
xchg
sub
popa
mov
mov
dec
xchg
sub
in
sti
fistpl
lahf
lea
clc
sahf
pop
mov
sub
int3
mov
outsl
lret
aas
and
or
lcall
pop
jb
jmp
mov
les
adc
push
mov
outsl
xchg
push
imul
jmp
lea
fwait
mov
lret
in
mov
mov
in
cmc
enter
push
xlat
cmp
out
pop
into
inc
xchg
inc
fldcw
add
sti
or
frstpm(287
dec
pop
ljmp
mov
es
dec
sbbl
cmpsl
out
filds
jecxz
cmp
aam
das
in
ljmp
insb
pop
mov
cltd
sbb
mov
mov
mov
pusha
mov
sbb
mov
insb
pop
mov
das
aam
push
fsubrl
mov
xchg
lea
fucomi
jnp
jmp
sbb
mov
ret
addb
xchg
test
add
jnp
or
or
fs
pop
lret
jle
jbe
mov
lret
sbb
mov
out
fldenv
lret
and
adc
lea
mov
jle
sub
jecxz
mov
arpl
cmp
inc
insl
adc
fwait
mov
imul
inc
jp
jmp
in
mov
stos
fisubrl
lret
sub
and
flds
test
adc
push
test
push
out
mov
fdivrl
jmp
sub
sub
orb
fistpl
ret
mov
cwtl
outsl
sub
loope
lahf
jne
mov
sub
xchg
sti
lea
push
out
fisttps
jnp
sub
jns
ljmp
xor
sub
insb
sbb
pop
mov
mov
ljmp
dec
stos
jbe
push
cmp
sub
jg
jnp
shlb
cmp
ljmp
cmp
push
cwtl
cmp
lcall
pop
dec
mov
lahf
sub
or
in
xchg
aad
in
adc
mov
ss
movl
mov
fucomip
fcmovne
ret
fcmovu
mov
mov
stos
out
aaa
sub
add
dec
jp
das
cmc
ljmp
daa
stos
mov
lock
leave
ret
mov
xor
sti
stos
mov
mov
and
gs
loop
sti
sti
push
jmp
inc
imul
push
int
ljmp
mov
push
leave
inc
push
xchg
loope
ret
and
mov
in
ljmp
mov
sahf
pop
out
mov
fildll
sub
fstpt
or
xor
inc
inc
popa
orb
xchg
repz
lahf
ficompl
sti
jmp
in
mov
fildl
lock
mov
imul
rcr
jnp
lock
jl
mov
inc
mov
jmp
pop
mov
pop
mov
ljmp
and
adc
fwait
mov
push
mov
mov
into
xlat
ss
inc
xchg
mov
jmp
push
shl
dec
int
push
out
xchg
push
aas
int
je
sbb
xor
dec
in
test
push
inc
jmp
or
cs
imul
mov
xchg
push
pop
adc
arpl
imull
inc
mov
jnp
ljmp
and
fs
ljmp
push
cmc
xchg
adc
dec
or
je
rclb
mov
scas
xchg
ja
stos
fisttpl
addr16
mov
loopne
int
sub
adc
mov
out
lock
add
jecxz
loopne
or
pop
mov
addr16
cmpsl
mov
out
jle
dec
adc
test
xor
mov
ljmp
mov
and
mov
imul
sahf
cmp
sub
or
xlat
sti
out
or
sbb
xchg
popa
pop
std
lcall
out
std
stos
cmp
sub
mov
pop
or
pop
test
pushf
fcmovnb
stos
cli
pop
dec
xlat
jp
fildl
stos
sub
sbb
out
xor
stos
fisttpl
push
xor
hlt
fdivrl
fisttpl
pop
jge
push
add
sbb
fisttpl
out
into
xor
jmp
sbbb
ss
dec
lret
jnp
scas
xor
in
fildl
jnp
jnp
imul
jle
gs
fisttpl
xchg
cs
cmp
out
push
sub
imul
mov
cwtl
mov
gs
fcmovu
sub
and
mov
in
scas
iret
pop
mov
in
in
lret
pop
lret
mov
das
outsl
mov
cmp
inc
ss
imul
dec
les
mov
sbb
mov
cmpsb
lds
fstps
mov
jg
or
out
xchg
dec
lea
push
mov
push
sub
mov
dec
sti
sbb
cmp
cli
inc
mov
in
das
push
or
lea
mov
les
mov
ret
jmp
xor
xchg
fmuls
lods
jmp
cmp
cmp
mov
cmp
fisubrs
mov
push
mov
stos
dec
sbb
pop
ret
xor
repz
bound
jnp
adc
mov
or
xchg
imul
dec
cmp
push
cmp
xor
sar
jmp
jnp
stos
ljmp
lret
fdiv
sbb
mov
jmp
xor
in
sub
lea
in
pop
ljmp
jmp
inc
test
in
xchg
pop
hlt
inc
dec
ret
cmc
fidivrs
jbe
loope
stc
cmpsb
jne
xchg
jge
cmp
ret
add
cltd
sbb
outsl
push
rorb
addr16
lea
shl
fnop
sub
dec
pop
roll
cmp
push
stos
fildl
cmp
mov
inc
popf
pusha
and
mov
push
pop
fisttpll
gs
stos
jmp
fstpt
stos
enter
xchg
into
dec
movsl
ja
jmp
mov
imul
adc
sub
dec
xchg
xchg
jecxz
mov
jp
iret
or
ss
mov
fimull
push
les
fnstsw
ss
int3
mov
push
add
les
xchg
in
subb
fwait
jmp
into
dec
pop
xchg
pop
in
aam
adc
inc
loopne
or
call
mov
mov
mov
mov
jp
int3
cltd
jmp
cmc
fisubl
and
lea
and
jmp
and
pop
mov
in
jmp
lea
xchg
pop
loopne
jmp
rcrb
ret
pop
or
push
push
out
cmpl
push
push
fistpll
dec
arpl
ss
ljmp
xchg
mov
lea
shll
dec
mov
sbb
push
fwait
jge
dec
push
jmp
fstpt
in
jecxz
out
outsb
ret
cwtl
jge
imul
cmp
sahf
jge
fisttpl
adc
xchg
fistpll
aaa
ljmp
cmpsl
dec
fildll
mov
sbb
int3
sbb
scas
mov
ljmp
mov
out
adc
fwait
push
out
testl
lods
mov
int
ljmp
fisttpll
in
jmp
lea
cli
in
stos
sbb
mov
aaa
mov
imul
idivb
inc
dec
into
mov
jl
sbb
mov
dec
inc
jnp
out
gs
mov
sbb
sbbl
loop
dec
pop
jecxz
inc
bound
rcrl
jmp
add
ficoml
lea
mov
mov
mov
in
ror
jecxz
shlb
jg
arpl
fnclex
xlat
mov
in
jecxz
mov
or
inc
jecxz
filds
in
mov
scas
add
xchg
xchg
fidivrs
shlb
mov
fcmovnbe
call
jmp
pushw
lret
xchg
push
jecxz
jp
pop
cld
stos
cmp
pop
loop
xchg
or
cmpsl
mov
fisubrl
fwait
add
imul
into
ljmp
xor
fidivl
push
xor
xchg
or
sub
mov
fldenv
push
arpl
jecxz
lahf
and
mov
ljmp
sub
cmp
lea
jl
rcrl
adc
out
push
lea
mov
dec
sub
frstpm(287
mov
mov
mov
scas
cli
jecxz
jecxz
testl
mov
sbb
inc
es
dec
cltd
cltd
js
lcall
cmp
fistl
jmp
negb
inc
mov
pop
fcmovnu
ret
jmp
in
lea
jmp
pop
mov
ret
cwtl
repz
arpl
dec
fisttpll
fisttps
mov
data16
imul
and
imul
pop
xlat
lea
adcl
imul
inc
ss
jecxz
fildll
push
lcall
ljmp
aam
sti
mov
pop
fmull
cmp
filds
lea
jmp
repnz
fcmovu
in
sub
push
fwait
stos
out
outsl
mov
add
inc
jp
push
add
ret
popa
pop
lahf
jge
fistpl
pop
negl
imul
pop
adc
leave
inc
ljmp
lea
jnp
add
dec
jnp
push
mov
push
mov
inc
sahf
inc
shr
xchg
les
jmp
icebp
loopne
mov
lret
push
in
sub
ret
pusha
inc
and
sbb
push
mov
lea
movl
sub
jge
ret
xlat
xchg
test
fdiv
mov
sub
jecxz
sub
data16
sbb
or
and
mov
cld
mov
adc
shrl
repz
dec
jnp
loope
fldl
dec
add
lcall
in
mov
pop
dec
xchg
xchg
fisubs
int
jns
adc
ret
sbb
outsb
inc
mov
pop
in
sub
popa
jecxz
inc
jge
or
popf
jb
scas
repnz
cld
pop
test
lods
xchg
sbb
jae
cmc
jmp
out
ret
into
popf
mov
push
adcl
cli
mov
mov
pusha
push
push
lods
fsincos
adc
inc
mov
test
stos
imul
ret
int3
rcr
aad
inc
repnz
je
jp
inc
int3
cmp
outsl
push
loope
xchg
inc
jnp
rcll
inc
stos
sbbl
mov
lcall
mov
xchg
stos
adc
stos
jecxz
ljmp
and
xchg
sbb
inc
or
or
icebp
into
repnz
in
adc
fwait
fwait
xchg
inc
dec
push
insb
test
or
mov
sbb
div
jb
and
sbb
stos
fstpt
cmp
daa
aad
fimull
jmp
mov
or
dec
inc
mov
jecxz
addr16
fwait
dec
jecxz
pop
jg
sbb
or
roll
xchg
imul
loop
push
mov
scas
adc
mov
sbb
jecxz
xchg
int
or
jmp
in
dec
push
fwait
lret
fs
ret
movsl
lea
fs
cmpsl
or
or
rcl
aam
jb
inc
mov
js
out
ljmp
fptan
jmp
push
and
nop
sbb
sbb
imul
cmpsl
mov
jg
mov
aaa
pop
hlt
cmovle
sbb
add
pop
jmp
adc
jl
jns
jb
inc
data16
jb
mov
adc
push
mov
cs
xchg
in
les
cltd
jns
xchg
jmp
mov
mov
shll
cmpl
dec
cmpl
cs
push
repz
ret
mov
sbb
mov
loopne
stos
add
mov
jecxz
in
fsubr
and
push
sbb
lcall
sbb
loope
cli
pop
shr
inc
fisubrl
sbb
fucomi
mov
subb
cmp
in
or
pop
xchg
fwait
xchg
or
out
in
xchg
fistl
lea
sti
jmp
ficompl
inc
inc
add
jnp
les
lods
or
int
cli
lret
pushf
pusha
pushf
lea
ja
bt
pushf
mov
stc
imul
bt
stc
pushf
jmp
mov
cmc
dec
btc
mov
test
jmp
push
call
add
rorl
stc
call
out
mov
dec
push
dec
add
in
or
pusha
pop
dec
dec
bound
inc
incb
adc
data16
or
fdiv
mov
push
pop
mov
pop
mov
fwait
and
xchg
je
lahf
jmp
insl
push
sub
mov
fwait
cwtl
jmp
cmpsb
mov
pop
push
bound
cmp
in
or
pop
or
and
cmpsb
mov
insl
cmp
in
fildl
pop
and
faddl
int3
pop
fisubl
mov
pusha
mov
data16
cltd
mov
frstor
rol
xchg
sub
sbb
out
lcall
xchg
repnz
push
inc
testb
fsubs
pop
in
loope
sub
add
stc
neg
stc
mov
mov
mov
out
dec
inc
insl
repz
inc
cmp
cli
lds
jns
dec
fwait
scas
dec
aas
ret
pop
out
cmp
xlat
push
jae
mov
add
ret
lcall
jmp
jg
cs
push
or
sub
push
call
mov
mov
inc
push
dec
inc
dec
dec
xor
cs
insb
add
mov
mov
insb
arpl
add
push
sbb
outsb
out
mov
fsubrs
aas
nop
xchg
dec
and
sbb
mov
aam
sbb
es
shlb
std
mov
xor
aaa
jge
adc
stos
fdivrp
rclb
jge
addr16
ror
inc
mov
stc
fs
add
cmp
mov
icebp
roll
loop
movsl
push
outsl
jl
push
mov
pop
xchg
mov
lea
mov
movsbw
not
jmp
and
cmc
int3
pop
in
addl
insl
aad
fdivr
mull
les
call
push
push
push
sub
arpl
and
adc
and
xor
sbb
inc
jp
fwait
inc
and
incb
jecxz
aam
adc
cmp
mov
fs
rclb
out
cmp
jmp
xchg
subl
movsb
test
and
sbb
out
mov
adc
les
data16
shl
pushf
jmp
push
call
cmp
ja
sbb
int3
pop
pop
rol
jnp
ror
orb
in
mov
mov
stos
mov
cmp
out
popa
push
jecxz
push
mov
xor
or
das
mov
pop
sbb
insb
push
xorb
stc
mov
mov
hlt
dec
movsl
ljmp
incl
je
iret
int3
lahf
xor
or
mov
cmp
pop
mov
ja
ds
xor
ret
vzeroall
or
hlt
or
inc
insl
add
adc
or
loope
mov
jne
add
add
or
sti
ljmp
mov
push
or
dec
push
call
inc
xchg
push
call
sbb
addr16
rorb
or
aad
push
call
adc
lahf
js
xor
int3
pop
lock
lds
ror
adc
orb
pop
btc
in
insb
add
in
or
jge
pop
test
in
int3
pop
cmp
adc
or
sbb
mov
ds
and
imul
repz
inc
scas
test
cmp
imul
lds
sub
popf
jecxz
insl
add
sbb
pushf
popf
addr16
mov
push
cmpl
dec
inc
push
push
popf
rolb
or
fld
movsb
lahf
jns
cmp
loop
cmpb
cmp
add
push
xchg
jb
jge
mov
cmp
addr16
sub
add
pusha
repnz
jmp
push
call
lods
pop
add
cs
sbb
adc
sbb
rcrb
icebp
aaa
into
or
push
and
inc
pop
sub
xchg
mov
repz
js
cld
dec
adcl
pop
shl
xlat
mov
cld
lret
cmc
fstps
add
sbb
or
xchg
arpl
test
scas
clc
adcb
outsl
push
popf
cmp
cmc
xor
mov
movsb
mov
jns
add
add
cld
lods
je
nop/reserved
mov
insl
add
stos
adc
add
push
call
dec
mov
sbb
cli
clc
sub
jge
mov
stc
test
push
pusha
pushl
mov
lea
je
jmp
push
call
nop
jle
pusha
scas
jne
int3
pop
lods
jle
jne
xor
mov
inc
lea
mov
push
lock
dec
and
inc
push
mov
mov
push
adcl
mov
lcall
stos
jmp
stc
sub
arpl
jne
fidivs
adc
sbb
or
and
xchg
js
out
fsubrp
push
lret
movsl
xchg
fdivl
and
in
cwtl
outsl
mov
pop
dec
lret
in
add
pop
add
int3
pop
sbb
in
cmpsb
scas
scas
incb
std
testl
adcl
je
push
stos
push
cmpl
xor
cwtl
sub
adc
movsb
fstl
mov
mov
cmp
aaa
push
test
push
daa
mov
push
xor
jnp
es
in
mov
stos
test
push
inc
xchg
add
xchg
frstor
sub
xchg
sbb
mov
xchg
mov
xor
lock
sarb
add
stos
or
call
jecxz
or
aas
mov
pop
push
fwait
cmp
pop
stos
pop
pop
test
pop
jmp
rolb
or
pop
jne
cmp
or
add
push
inc
mov
testl
xchg
sbb
imul
ja
mov
ret
mov
test
pop
sub
leave
push
fcomps
insb
ret
jmp
mov
test
adc
into
div
and
adc
push
xor
call
and
out
and
ds
movl
mov
lea
call
ss
lock
pop
jp
or
sbb
push
popa
sbb
bound
test
xchg
xor
aaa
jo
add
pop
in
into
ret
and
rorb
ret
push
in
imul
mov
mov
add
stc
ds
ret
in
fdivrl
in
into
sbb
icebp
nop
js
mov
sbb
ds
lahf
jmp
lods
ret
pop
and
add
lcall
mov
xchg
outsb
addl
call
push
call
out
scas
xor
flds
add
popa
jb
push
popa
add
sbb
call
andb
cmpsb
xor
call
xchg
dec
xchg
repnz
popa
ja
imul
ret
out
int3
pop
mov
pop
adc
mov
leave
mov
sbb
cmp
jle
test
fwait
xchg
add
cmp
jmp
push
push
fistps
fbstp
mov
daa
orb
test
loopne
cltd
in
popf
jo
push
cmp
lock
fwait
sarl
fxch
stos
aad
mov
sub
fwait
std
jp
das
int3
adc
int3
fnstsw
cwtl
mov
mov
inc
mov
movsb
outsl
mov
scas
icebp
dec
xchg
cltd
in
aas
push
in
sub
outsb
popf
es
data16
jle
dec
imul
mov
inc
push
and
jae
add
adc
or
out
sbb
lea
ret
lea
jae
bt
push
pushf
cmp
cmp
pushl
lea
jae
call
stos
sbb
sbb
mov
rorb
negb
int
cmp
int3
pop
lods
adc
stos
cmp
mov
test
xchg
in
int3
pop
mov
sub
in
aad
cmp
fnstsw
out
int3
pop
jg
pavgb
cmp
shl
lods
jb
cs
aaa
jb
daa
lea
jl
lcall
out
hlt
movsb
movsb
imull
jmp
dec
jne
cmp
xchg
out
int3
pop
mov
popa
arpl
fs
int3
pop
stos
mov
inc
scas
fdivs
or
in
int3
pop
and
and
add
test
into
stos
dec
cli
sub
int3
pop
clc
lret
mov
mov
jnp
call
je
outsb
mov
ds
and
fdivrl
add
xorl
adc
lret
push
pop
jge
in
sub
mov
mov
loope
gs
pop
negl
and
insl
out
lods
cs
fstpl
or
mov
push
pop
call
or
jo
pop
shrl
lret
push
inc
fdivl
add
and
mov
and
sbb
loope
mov
cmpb
test
mov
int3
pop
jo
inc
aaa
repnz
inc
inc
xlat
inc
aaa
ljmp
fimuls
ljmp
and
sbb
repz
into
scas
loope
mov
mov
mov
xchg
fld
adcb
popa
xor
push
int3
inc
push
repz
push
cmp
je
outsb
jmp
pushf
stos
aad
cli
xor
sahf
inc
pop
lcall
fisttpl
aas
jecxz
leave
aas
dec
adcl
movzbw
not
mov
bswap
push
mov
pushf
pushl
ret
rep
movsbw
mov
pushf
push
lea
jmp
pop
sub
sub
mov
add
mov
cmp
jp
add
adc
repz
push
andl
arpl
fldt
xchg
test
mov
xor
inc
xlat
pusha
cmp
sub
jmp
cmpb
dec
cmp
xlat
xor
jno
filds
std
js
inc
push
dec
stc
mov
in
mov
xchg
xchg
and
movsb
in
sub
mov
es
inc
mov
jns
xor
js
pop
pop
jl
cs
movsb
test
add
iret
adc
add
int3
pop
loope
mov
mov
imul
loope
adc
in
lods
mov
mov
aas
addr16
pop
dec
movsb
dec
xor
jge
pushf
mov
dec
mov
les
loope
frstor
loopne
mov
and
cwtl
aam
ret
scas
daa
and
into
hlt
mov
pop
mov
jne
mov
repnz
sbb
iret
lods
rcrl
sbb
lcall
fwait
imul
js
sub
jno
jae
sbb
in
mov
lock
mov
cmp
in
xchg
xchg
outsb
pop
orl
and
in
or
stc
add
mov
sbb
sub
testb
loopne
push
mov
test
pop
xorl
lcall
push
loope
aas
in
pop
out
mov
test
jg
sub
sbb
lret
add
js
insl
enter
int3
pop
hlt
jge
sarb
mov
fsubrl
mov
xchg
lahf
and
cmp
push
and
dec
les
es
jae
jp
mov
push
sbbl
in
cmp
in
jbe
mov
jmp
adc
insb
sub
testb
mov
jnp
nop
sub
loope
lock
fisttps
add
ret
aam
nop
bound
pop
je
or
sub
out
stos
loop
pop
xor
push
call
mov
pop
ja
jecxz
call
sub
lret
out
inc
nop
adcb
dec
dec
leave
or
test
fisttpll
xchg
inc
xchg
cs
or
xor
iret
pop
sar
lret
fs
fisttpll
xor
mov
pop
nop
push
lret
cmp
pop
xchg
jo
sbb
fwait
lret
test
xchg
mov
pop
lret
imul
jge
mov
jg
addb
jnp
cli
es
jle
xchg
cld
jo
xchg
cs
nop
push
in
sarl
push
clc
aas
push
mov
iret
lahf
mov
lret
dec
mov
lret
dec
lods
pop
lds
or
rol
pop
inc
dec
dec
sub
fisttps
and
aas
sbb
dec
xor
inc
int
push
pop
mov
test
roll
dec
dec
outsl
mov
push
lret
enter
addr16
ja
lret
cmc
mov
adc
lret
scas
or
lret
mov
ret
mov
dec
int3
dec
aaa
cwtl
imulb
xchg
xchg
pop
fdivrs
sub
sbb
and
bswap
aas
pop
pop
dec
ds
popf
leave
fnstcw
cmp
mov
jl
lret
fs
nop
or
rcr
pushf
fcoml
lods
dec
mov
in
xchg
lret
cmc
pop
gs
int
xchg
es
fcomps
xchg
jns
or
mov
xchg
repz
shll
mov
adc
iret
jle
or
add
xor
push
rorb
adc
icebp
or
dec
pop
outsb
mov
fcompl
lret
lcall
icebp
sti
negb
xchg
arpl
cmp
mov
sbb
xor
movsb
push
int
loope
dec
jne
inc
inc
push
inc
mov
pop
cmp
orb
mov
xor
nopl
sbb
lds
leave
loope
call
sbb
lret
stos
xchg
test
mov
repnz
andb
je
imul
mov
insl
add
xor
mov
addl
scas
adc
cmc
mov
adc
jmp
adc
jae
jbe
cmc
cli
xchg
inc
clc
jl
cld
pop
out
push
lret
xchg
imul
call
lds
and
fldl
mov
add
repnz
loopne
or
dec
jo
lret
xor
loope
daa
imul
hlt
ret
push
push
xchg
dec
dec
jmp
and
xchg
or
xchg
icebp
and
lret
sbb
std
jmp
bound
icebp
cld
jl
dec
imul
sub
dec
pushf
dec
int
ret
int
pop
enter
out
lea
add
fcmovne
mov
pop
aaa
call
pop
or
pushl
lret
scas
arpl
sub
lret
leave
pop
aas
jb
cmpsb
push
mov
ror
push
sarb
fdivp
insl
sbb
repnz
lret
sbb
mov
enter
scas
pop
inc
mov
inc
sbb
iret
or
stos
data16
aad
pop
mov
es
and
push
xlat
xchg
pop
fs
lret
fadds
leave
dec
pop
stos
xchg
stos
leave
xor
push
or
lret
test
loop
scas
lea
xor
inc
xor
clc
cmp
push
sbb
push
mov
cmp
subl
or
test
mov
lret
in
dec
jnp
cmp
lds
in
pop
leave
lret
sub
adc
pop
iret
out
repz
mov
xchg
adc
sbb
mov
stos
mov
jg
sub
fisubrs
jl
xor
lahf
sub
imul
in
push
dec
lret
add
xor
fstpl
dec
subb
lret
mov
movsl
and
jl
inc
or
sbb
cmp
or
xlat
jg
sub
cmp
and
or
fcomip
mov
rorl
or
fldcw
test
arpl
push
mov
or
mov
dec
insb
sub
outsl
and
sbb
leave
push
fimuls
mov
dec
ja
enter
or
in
shll
dec
ljmp
jno
dec
jae
adc
mov
and
jmp
repz
jmp
or
rorl
lret
shr
pop
dec
lret
insl
sub
cmp
scas
pop
push
xlat
addr16
into
mov
in
stos
or
push
dec
xlat
jb
inc
push
test
jo
push
leave
mov
and
adc
push
int
hlt
xchg
push
inc
addr16
push
aad
in
stos
pop
sarl
dec
scas
add
rcrl
ficoml
pop
int
pop
decl
sub
sbb
rol
fisttpl
lock
add
push
stc
sbb
incl
lret
xbegin
or
lret
cmpsl
xchg
jl
push
repnz
outsl
lret
ror
loope
ret
hlt
ficoml
jmp
nop
lret
cmp
and
xor
lret
enter
sbb
pop
shl
xor
dec
mov
out
pop
cmp
dec
rcr
sub
cmp
lods
icebp
cmp
pop
xor
pop
inc
add
jae
pushf
jmp
mov
or
adc
fwait
sbb
popf
lret
shlb
and
test
lret
add
jecxz
movsl
out
lret
mov
mov
lret
mov
pushf
das
addb
fcom
jp
shrl
in
xchg
push
rcl
mov
aaa
ds
lret
mov
js
test
in
sbb
lret
fsubl
sti
enter
jle
pop
out
iret
sarb
fwait
int3
loop
hlt
mov
std
xchg
leave
or
mov
mov
push
inc
push
sti
in
aaa
mov
push
mov
xchg
xchg
loope
out
and
jg
pusha
test
repz
notl
jp
lret
inc
pop
lret
addr16
std
mov
fs
adc
sbb
icebp
cltd
and
pop
stc
push
int
jb
fcmovne
cmp
leave
ficompl
dec
and
in
scas
dec
imul
dec
std
push
jecxz
ljmp
mov
popf
lret
js
cli
or
xchg
adc
out
in
addr16
mov
add
mov
imul
cmp
lret
mov
inc
fimull
jmp
loope
mov
fldcw
adc
sahf
push
fisubl
sarl
xor
dec
fwait
cmp
mov
and
or
sub
cmpsb
lret
outsl
or
mov
imul
ja
ret
cmpsb
cmp
iret
sarl
mov
lret
or
gs
lret
lock
pop
pusha
xor
lret
cmp
or
sbb
xor
jne
dec
add
cmp
jnp
mov
xchg
lret
lret
dec
jne
xor
and
inc
mov
roll
cmp
jo
mov
xchg
or
cmp
lret
fcmovb
mov
ja
add
lret
imulb
mov
xor
mov
andb
xor
dec
push
xchg
test
mov
sbb
shll
aaa
js
sarl
test
into
sub
push
ja
das
xlat
and
xor
rcl
fwait
rcll
sbb
test
mov
cmp
push
or
xchg
lret
push
mov
pop
lret
cvttps2pi
into
test
int3
cmp
inc
lret
pop
mov
aad
lods
lret
test
jle
mov
js
inc
rorl
call
out
mov
cmp
leave
test
fisttps
mov
imul
jne
cmc
jnp
movsb
jmp
int
xor
int
ret
jmp
or
mov
adc
ja
jg
stos
or
mov
mov
and
fistl
pushf
in
adc
push
inc
adc
fsubrl
subl
and
and
push
inc
and
fdivrl
cmpl
xor
xor
cs
xor
fildl
fmul
out
add
mov
inc
fst
out
adc
iret
in
roll
fsubr
out
and
fucomip
loope
sti
inc
std
neg
stc
out
xor
out
in
icebp
xchg
mov
addl
xchg
cltd
out
subl
in
adc
sbb
out
orl
in
es
push
inc
push
in
fucom
xchg
dec
out
andl
xchg
pop
fsubl
je
push
pop
xor
iret
xchg
in
out
xchg
jge
sbb
in
xacquire
jp
or
sub
int
fcmovnu
in
xchg
xchg
arpl
fadd
out
xor
lcall
outsb
fcoml
out
fwait
int
int3
dec
daa
add
adc
adc
test
out
sub
mov
push
or
sbb
dec
adc
pop
out
or
stc
rorb
cmp
and
test
sbb
clc
add
scas
addr16
add
adc
adc
add
cmp
sbb
mov
rcl
arpl
push
adc
mov
lcall
popa
sbb
adc
jmp
rcll
pop
add
fisttpl
adc
dec
testl
out
sbb
sub
pop
in
xlat
pop
sub
aas
pop
data16
push
testl
dec
insb
adc
pop
rcrl
and
push
sub
leave
pop
out
push
out
dec
test
add
and
xchg
sar
mov
clc
out
sbb
mov
aaa
sbb
mov
leave
daa
or
cmp
jbe
std
jecxz
adcl
ljmp
test
or
mov
xchg
jne
imul
mov
sub
ds
jle
in
mov
addl
not
test
jecxz
out
inc
mov
cmp
popf
test
imul
adcl
test
stc
shlb
ret
xlat
push
jo
rcrb
add
mov
cmp
out
dec
call
xchg
adc
adc
push
pavgw
adc
pushf
inc
dec
gs
jg
addr16
jg
mov
adc
aas
pop
iret
imul
testl
cmp
movsl
aas
fcomip
test
lock
test
arpl
push
test
fwait
xchg
ficoms
nop
int3
jb
adc
lods
lret
add
repz
jmp
push
in
pop
dec
pop
lret
fildl
mov
int
in
jae
gs
lods
test
repnz
push
push
cmpsb
loop
jecxz
sbb
mov
ljmp
xchg
fnclex
or
and
popf
xor
mov
sub
sub
cmp
test
dec
mov
xchg
test
aas
ljmp
popa
ficompl
subl
xor
frstor
int
dec
mov
mov
nop
ljmp
dec
mov
xchg
ljmp
dec
movsb
dec
test
lds
push
xchg
ljmp
add
inc
ljmp
stos
mov
mov
movsl
scas
lock
xor
cmp
xchg
mov
push
test
pop
push
inc
pop
cmpb
push
pop
cmp
out
inc
fldt
std
and
or
int
pminsw
daa
jmp
xor
lods
fisttpll
adc
mov
xor
or
fadds
mov
pop
adc
std
pop
or
rep
cmpsl
aas
into
lahf
stos
mov
xor
mov
adc
dec
stos
in
adc
cmpsb
jl
and
dec
mov
xchg
jg
movsb
and
pop
dec
inc
mov
lahf
mov
js
dec
call
mov
mov
push
jp
push
pop
mov
aas
mov
enter
mov
mov
repz
inc
dec
stc
adc
pushf
fs
mov
sub
stos
mov
inc
adc
add
dec
das
stc
jo
test
mov
mov
mov
leave
shlb
stos
incb
mov
add
lock
cs
sbb
lahf
daa
ljmp
mov
mov
insl
dec
cld
sub
outsb
mov
mov
jbe
test
dec
inc
lods
iret
scas
add
mov
push
adc
jg
repz
add
pop
mov
cmp
test
dec
or
jo
cmp
or
add
fcmovnb
inc
cmc
jmp
inc
dec
std
pop
fisttps
mov
fs
iret
outsb
in
or
mov
fstpl
or
pop
mov
xchg
insb
jae
iret
lods
fstl
mov
jbe
and
sbb
dec
or
shl
sub
jno
sub
lret
push
cltd
jecxz
cmp
sub
mov
int
and
les
sbb
les
es
fwait
push
scas
popf
cmp
aaa
les
push
shlb
pushf
push
dec
sahf
bound
or
adc
or
hlt
lret
mov
inc
test
imul
adc
jecxz
int
ret
mov
imul
pop
inc
sub
inc
std
int
fwait
jbe
in
and
xchg
inc
sbb
loopne
push
sub
shlb
fwait
dec
mov
cmp
adc
mov
and
hlt
push
ret
pop
add
data16
loop
and
push
subb
fwait
addl
and
pavgw
jecxz
cmp
push
in
jecxz
imul
fisttpl
in
mov
sub
or
mov
in
add
sub
insl
inc
dec
aas
repz
inc
jnp
jmp
paddd
push
repz
scas
roll
jae
inc
mov
dec
push
mov
shll
and
lea
iret
lret
scas
dec
mov
mov
repz
sub
xor
cmp
int
push
iret
icebp
mov
dec
mov
mov
sbb
sbb
adc
xchg
shlb
or
jnp
push
and
out
jge
mov
das
or
imul
add
subl
jg
mov
mov
in
mov
std
or
addb
pop
mov
ret
cmp
mov
pop
lods
xor
jns
in
lret
push
in
iret
jae
paddusw
lock
adc
cli
dec
adc
addr16
add
mov
test
lret
xlat
dec
jecxz
je
or
jmp
jmp
rcrl
popf
push
fwait
movsl
sbb
clc
stc
hlt
mov
mov
in
or
mov
sub
stos
adc
js
jae
lcall
nop
jg
in
adc
ljmp
xor
daa
add
mov
xor
fsub
ret
mov
call
adc
add
fistpl
fwait
dec
dec
mov
dec
or
aas
adc
dec
iret
imul
stos
adc
imul
sub
cltd
mov
fwait
inc
inc
xlat
int
jno
test
fsubs
ret
mov
fcmovnb
mov
pop
and
int
pop
dec
fbld
mov
dec
sbb
inc
xchg
dec
fwait
and
xor
cltd
xlat
out
dec
and
add
add
dec
scas
sbb
icebp
dec
std
fistps
ror
dec
ret
cmovbe
lahf
push
loop
or
jecxz
movl
or
lcall
in
pop
jmp
sbb
fcoms
int3
add
push
pop
sbb
int
sbb
inc
ret
lret
faddl
sbb
pop
xlat
jmp
xor
jg
push
cmp
dec
jo
lret
fdivs
les
vpunpckhwd
cmp
jae
jp
scas
rol
mov
rolb
adcl
imul
std
mov
into
sbb
sbb
pop
jecxz
vpsubusb
fsubr
loop
pop
idiv
fcmovnb
pop
faddl
jl
shl
mov
fidivrl
sbb
pushf
lret
push
and
sbb
dec
jmp
pop
cvtpi2ps
mov
test
sbb
push
pop
es
mov
imull
jecxz
fmul
sbb
inc
jns
xchg
pop
pop
lret
and
fcomp
and
mov
test
ficoml
mov
ficompl
aas
fwait
cmp
fstpl
lea
jns
outsl
stos
idivl
and
pop
and
and
out
dec
ret
mov
fdivs
mov
sub
push
or
inc
sar
pushf
inc
fcmove
and
std
fmuls
push
jg
dec
outsb
repz
cwtl
pop
adc
dec
sbb
aam
dec
mov
cmpsl
xor
xor
jae
into
dec
dec
inc
or
dec
or
subl
fdivs
leave
fsubr
enter
insl
sbb
xchg
mov
shll
ljmp
cmp
repz
mov
fldenv
in
subb
ds
addr16
adc
cs
movb
push
shll
test
ucomiss
push
cmp
add
lods
in
iret
and
sub
pop
sbb
aas
jb
jp
fisubrl
push
lea
cld
cmpsb
pop
inc
out
std
jnp
add
in
mov
push
cs
rcl
mov
je
lcall
imul
or
cmpsb
iret
jmp
ret
sub
ljmp
sub
pmulhw
jmp
shr
ja
jmp
rorl
out
dec
js
mov
jb
lahf
test
sti
mov
imul
and
inc
shl
stos
fdivrs
loop
xlat
lea
add
pop
in
mov
mov
shr
fwait
sarb
lods
out
mov
mov
mov
repnz
mov
mov
fldcw
xor
inc
dec
iret
pop
sub
repnz
sub
cmp
xor
insb
leave
jno
jmp
clc
inc
mov
rorb
pop
jmp
cmp
mov
clc
out
in
cmp
rcl
fidivl
inc
rcl
out
xor
xchg
test
ficompl
cmp
aam
dec
not
fldt
add
add
xchg
arpl
jl
std
out
add
mov
sub
cmp
jbe
fstps
inc
and
jecxz
or
cmp
ss
cld
ds
fdivr
in
mov
jb
sub
jmp
fbld
pop
icebp
aaa
pop
rcll
jb
mov
jno
and
inc
test
out
aas
jp
dec
cli
xchg
test
movsl
dec
jp
jge
cmpps
cmp
cli
mov
scas
jge
cmc
out
add
sbb
inc
loopne
jbe
daa
lcall
sub
out
aas
push
inc
loopne
push
ja
movsl
push
in
cmpl
cltd
xchg
mov
and
dec
movsl
xor
ds
inc
fcomi
insl
das
cmp
xchg
inc
insl
inc
outsb
fisubrs
cmp
int
add
mov
movsl
bswap
rcll
mov
js
or
mov
loope
fistps
inc
fsubrp
sbbl
sbb
mov
out
ja
mov
mov
in
popf
ljmp
cld
mov
add
inc
add
xchg
inc
xor
jp
mov
push
in
in
in
fucomi
icebp
and
jmp
mov
xor
in
push
loop
sub
and
add
fldcw
loop
inc
ret
cli
inc
rcrl
fidivrl
leave
inc
jecxz
sarl
mov
inc
xchg
sbb
fisubrl
call
inc
cmpsl
call
and
jo
jnp
out
in
dec
sub
sub
and
in
aaa
int
imul
ret
mov
scas
out
jmp
in
xchg
outsb
aas
in
aam
int3
jmp
push
and
sbb
xchg
in
repz
pop
hlt
jmp
cmp
aam
and
jmp
xchg
test
push
xlat
mov
jmp
xchg
lods
xchg
xlat
mov
cmc
xchg
aad
mov
xor
add
adc
cmp
roll
in
addr16
shlb
leave
rclb
icebp
or
arpl
and
push
cmp
add
pop
and
std
sbb
cmp
mov
xlat
test
out
mov
adc
int
out
enter
andl
insb
mov
jl
and
dec
cmpsb
test
cmp
rcrl
pop
out
lds
push
sbb
pop
xor
mov
cmpb
mov
jo
sti
xchg
cwtl
ret
test
faddl
mov
mov
cltd
lcall
pop
mov
pop
test
pushf
xchg
adc
lea
inc
xor
out
or
push
mov
push
data16
out
sub
scas
jp
dec
call
xchg
inc
lds
dec
shl
stos
mov
push
cmp
rcrb
jl
out
imul
mov
pop
pop
into
hlt
rorb
lds
mov
dec
in
inc
xchg
pusha
cli
scas
sbb
cmove
out
mov
addr16
aam
fldt
mov
pop
addr16
imul
mov
push
mov
push
adc
inc
loope
into
and
ja
adc
les
add
mov
add
aam
push
mov
push
sahf
pop
rcr
divb
arpl
aam
cmp
mov
cmp
test
movsb
lods
rorb
stc
lcall
inc
fisubl
into
gs
mov
and
or
fiaddl
loopne
add
call
jp
add
dec
out
adc
dec
jge
outsl
pop
out
sbbb
xchg
pop
insb
or
test
xchg
xchg
mov
inc
lea
fistpl
add
jb
jb
imul
pop
adc
cmp
pop
ror
mov
push
ret
jb
mov
ljmp
repnz
push
pop
fs
sarb
enter
dec
push
mov
repnz
mov
rolb
xor
dec
cmp
mov
aam
lcall
sub
pop
dec
dec
lods
cmp
cmp
cmp
mov
ja
arpl
add
or
jb
add
or
cmc
cs
and
ljmp
in
stos
push
in
dec
and
mov
push
add
xor
jp
sub
xchg
sbb
in
xlat
push
sub
or
sarl
popf
adc
cmp
aad
push
in
std
das
pop
adc
sbb
jecxz
jae
in
dec
fsubrl
in
dec
jg
sub
inc
mov
mov
xorb
jnp
fwait
jb
imul
xchg
mov
shr
movsl
sarl
in
jns
xchg
inc
sbb
and
mov
leave
ficomps
shl
dec
or
rcl
jge
adc
test
std
jle
dec
inc
push
mov
dec
fsubrl
fcmovu
push
repnz
sbb
inc
mov
cmp
mov
fisubl
jmp
clc
xchg
sub
push
sbb
inc
mov
aas
add
in
cmp
insl
mov
inc
rol
sarb
adc
loopne
mov
xor
in
loope
mov
mov
mov
call
add
xchg
shlb
movsl
das
in
fildl
sub
or
sbb
bswap
ret
dec
sub
push
cmp
outsl
adc
lock
add
cltd
xlat
aaa
pop
ss
jnp
and
movsl
das
lea
add
ljmp
sbb
cmpps
mov
ret
cmp
lods
mov
fs
mov
mov
cwtl
add
jns
mov
rclb
cmp
add
insb
divl
mov
lds
sub
out
ret
cmpps
ret
fsubs
jg
and
inc
dec
pop
xor
jbe
je
add
sub
mov
inc
mov
mov
or
je
sbb
cmpsb
jns
bound
inc
sbb
dec
push
ret
add
ror
sbb
stos
insb
or
lret
inc
or
inc
jno
iret
add
mov
or
jmp
lret
inc
xor
add
add
xor
xlat
enter
jge
rolb
or
fildl
jno
mov
ret
pop
icebp
cmp
jo
cmp
das
les
adc
mov
das
sub
jo
inc
add
das
in
lds
jmp
outsb
mov
mov
adc
in
das
jmp
outsb
sbb
inc
xor
lods
mov
and
jno
pusha
xor
je
inc
test
mov
mov
or
les
dec
xor
dec
inc
je
xchg
inc
and
in
cmp
or
cmp
rclb
sbb
inc
cmp
push
and
xchg
or
add
mov
xchg
mov
cmp
adc
iret
inc
cmp
cs
cmp
inc
aaa
ret
cmp
aaa
ret
cmp
aaa
cmp
inc
aaa
ret
cmp
aas
aaa
ljmp
inc
cmc
mov
mov
mov
out
sbb
xor
outsb
fstps
leave
jge
out
fwait
or
lahf
pop
mov
test
lcall
mov
out
mov
js
xlat
jmp
cmpsb
inc
filds
out
or
stc
movsb
in
sbb
fucomi
fnstenv
icebp
cmp
imul
xchg
cltd
movsl
jmp
lret
cmpsb
jmp
lahf
cmp
inc
adc
cmc
sbb
popa
mov
mov
lret
jmp
pusha
enter
stc
cmpsl
pushf
int
mov
iret
mov
shll
cmc
fbstp
loope
push
ss
sub
int
popa
dec
in
enter
ds
mov
jnp
scas
fcomps
or
dec
sbb
and
xor
xor
popa
dec
push
jmp
push
push
mov
jge
mov
jno
enter
pop
xor
mov
insb
and
mov
in
int3
or
sbb
mov
push
pop
mov
mov
lods
mov
fcomps
insl
pop
xor
test
ret
out
mov
and
fld
sbb
xor
push
inc
shll
sbb
push
addr16
fdiv
ret
lods
lret
cmp
jnp
mov
sbb
insl
jp
push
ret
xor
loope
ret
add
cmc
mov
and
pop
inc
pop
and
loopne
fcompl
lds
inc
xor
cmp
inc
sahf
enter
xor
ffree
push
sbb
les
dec
insl
jecxz
and
pop
rcl
in
push
test
xor
sbb
xchg
xchg
in
insl
out
pop
cmp
push
into
inc
jge
jb
jge
pop
jmp
cmpl
pop
dec
js
sub
pop
sbb
adc
xchg
cmp
adc
jle
mov
bound
pusha
xchg
push
push
mov
leave
inc
mov
mov
pop
add
mov
rcrb
mov
xchg
mov
xchg
sbb
fildll
int3
jns
sbb
mov
ja
fimull
jmp
pop
pushf
rorl
into
hlt
repz
in
sbb
arpl
shr
pop
fsub
and
or
xchg
jb
arpl
sbb
jnp
leave
fldt
push
shll
int3
and
xor
jno
das
icebp
add
sarb
stos
inc
mov
lcall
inc
testb
daa
adc
inc
cmp
mov
jl
adc
fs
and
or
repnz
and
filds
and
je
sbb
inc
or
movsb
add
jp
mov
test
push
dec
xorl
das
push
repz
js
cmp
sub
ljmp
push
push
xchg
pop
insl
push
bound
leave
mov
adc
sub
mov
bound
pop
ret
push
or
rcr
sub
adc
dec
jmp
adc
cld
push
dec
cmp
in
sub
push
fucomi
inc
xchg
inc
xchg
push
sbb
fcmove
xor
mov
out
lret
rorl
dec
loop
fcmovnb
or
sbb
jmp
scas
lea
cmc
in
aam
sbb
inc
les
daa
or
jnp
sub
inc
ret
pusha
jecxz
rolb
mov
psllw
popa
cmpb
or
cmp
cmp
insb
les
iret
scas
jmp
sub
xchg
mov
mov
fsubrl
stos
sub
inc
inc
xor
add
jns
bound
cmpsb
fstpt
mov
mov
push
jns
mov
lret
sub
push
push
or
fcmove
adc
andl
dec
sbb
iret
sbb
mov
xchg
xor
xchg
icebp
das
mov
stc
insl
test
hlt
outsl
fldenv
outsl
cltd
fildll
sub
int3
sbb
enter
sbb
xchg
mov
cmp
lea
rolb
inc
jecxz
ja
lea
dec
push
jg
cmp
and
xchg
mov
pusha
xchg
xchg
sub
test
pop
pop
inc
dec
inc
push
mov
add
arpl
mov
mov
mov
jb
gs
adc
jo
push
inc
int
push
adc
cmc
push
lock
dec
ret
xor
fisubl
ja
xchg
stc
xor
xchg
or
mov
int3
mov
dec
add
jae
xor
adc
add
js
sbb
ss
incb
push
adc
pop
sub
icebp
punpckldq
repz
clc
xor
stos
int3
push
pop
sub
xor
dec
fisubrl
into
dec
pop
dec
jge
inc
insb
xor
arpl
data16
xchg
mov
ja
sbb
ficoml
mov
adc
cmpsl
pop
sub
push
insb
lea
mov
sarl
inc
cmpsl
mov
mov
xor
lret
push
sbb
adc
xchg
adc
lods
sbbb
jns
push
mov
sbb
dec
sbb
cwtl
jecxz
jns
stos
add
leave
add
mov
mov
push
mov
mov
pop
rorl
inc
inc
sarl
jle
xchg
mov
out
xchg
push
mov
fidivl
sub
lcall
dec
or
je
push
sti
lods
mov
shrb
arpl
pop
addr16
mov
pop
jmp
test
jmp
flds
pop
mov
mov
insb
aad
mov
jecxz
mov
aad
out
fnstenv
xor
fldt
jecxz
repnz
jle
loope
retw
mov
repz
add
xor
into
loopne
and
mov
xchg
mov
mov
imul
mov
mov
mov
xchg
cmp
lods
sbb
aad
xor
and
xchg
je
xorb
sbb
cmp
cli
mov
icebp
sbb
jle
jb
sbb
sbb
punpcklbw
xchg
cmp
adc
lahf
xor
add
and
mov
mov
add
sbb
enter
jmp
adcb
outsl
lret
and
push
sub
sbb
insl
mov
loop
sbbl
cmp
mov
pop
sub
mov
pop
push
aas
mov
push
jp
lahf
add
cmp
jmp
decb
pop
sub
add
push
xor
and
pop
cmp
test
jg
jo
jg
repz
or
cmpsb
hlt
in
arpl
push
or
fs
loopne
mov
lds
incb
cmp
sahf
xorl
adc
xor
clc
xchg
jmp
pop
icebp
inc
pushf
scas
ja
insl
popf
setge
push
out
inc
gs
cmp
std
insl
mov
xchg
dec
leave
pop
mov
inc
and
and
sbb
xorl
mov
pop
mov
jle
pop
shll
repz
inc
xor
jmp
in
jl
xlat
mov
cmp
test
push
lret
lcall
call
mov
cs
xchg
iret
xchg
jmp
aam
ss
les
fnsetpm(287
inc
testb
daa
fisttpl
inc
repnz
insl
sub
or
repnz
jle
shrb
lea
cmp
pop
je
add
fldenv
inc
or
xchg
movsl
shlb
mov
or
pop
jmp
pop
outsb
stc
jmp
xchg
in
sbb
mov
mov
or
inc
mov
xchg
and
mov
dec
and
lods
stos
cmp
ret
ret
mov
inc
jg
mov
adc
cmp
rol
mov
jno
jecxz
or
mov
lds
mov
repnz
mov
dec
adc
mov
xor
pop
mov
jmp
adc
cld
out
jmp
mov
outsl
pop
push
push
rol
int3
jecxz
das
aas
push
dec
imul
jbe
sarl
imul
shrl
sub
push
sub
push
push
jecxz
pop
jecxz
inc
ret
mov
add
cmp
cmpsl
popf
sbb
mov
nop
jmp
add
and
or
push
sbbl
add
mov
mov
push
xchg
mov
push
addb
mov
or
cmp
mov
sub
mov
or
mov
jmp
push
push
pop
xchg
add
jne
sbb
lea
cltd
aaa
push
pop
sti
dec
imul
mov
sub
or
cltd
inc
pop
scas
dec
jmp
adc
addr16
xor
xchg
jns
rcrl
sub
lock
sbb
or
jl
sbb
push
loop
xchg
adc
push
aas
add
inc
dec
xor
jecxz
mov
xor
rcrl
ret
pop
or
fldl
mov
ret
outsl
push
leave
rcr
xlat
fcmovu
dec
pop
shrl
js
je
mov
or
insb
cmp
pop
push
cmp
xorb
xor
test
push
push
mov
adc
daa
jne
jg
loopne
in
push
mov
movb
or
outsl
stos
ja
dec
add
mov
cmp
jle
insb
jmp
hlt
repnz
push
cmp
stc
xchg
jns
stos
inc
out
lcall
jmp
push
cmp
xor
addl
cmc
pop
mov
xchg
add
fcmovb
insl
and
push
or
mov
repnz
addr16
dec
mov
test
sbb
ret
hlt
bound
dec
pop
cmpsb
inc
shrb
loopne
ficomps
sbb
fisubrl
jp
leave
xchg
cmpsb
fidivrl
addr16
pusha
add
mov
cvtpi2ps
outsl
push
xor
ja
pop
addr16
ss
inc
and
fildl
hlt
jecxz
and
ret
inc
loope
daa
or
inc
outsb
ficompl
mov
mov
out
adc
popa
loop
mov
jmp
xor
xlat
jbe
fwait
pop
arpl
jge
add
jp
jmp
sbb
ljmp
push
push
mov
mov
leave
loop
jmp
jbe
aas
sbb
inc
lds
or
jp
sahf
ret
sbb
fistpl
jnp
bnd
jmp
mov
adc
adc
cltd
sub
inc
push
lea
mov
in
sbb
xchg
addl
xlat
xchg
mov
or
hlt
sahf
scas
fcomp
lods
jl
addr16
sbb
mov
jb
xchg
pop
ret
repz
add
sub
ret
cltd
mov
jb
sbbl
cltd
pop
fimuls
in
in
push
jg
push
mov
insl
mov
and
sbb
jecxz
pop
and
inc
fwait
cmc
jge
pop
and
push
sub
sbb
pop
cmp
push
in
out
add
or
adc
jle
fwait
ret
pop
pop
mov
pop
sub
cwtl
daa
subl
pop
int
sub
std
jns
scas
aad
inc
xlat
mov
sub
adc
or
inc
leave
loop
inc
dec
push
roll
sarl
add
insl
push
push
inc
add
shl
mov
insl
mov
mov
mov
mov
jb
sbb
out
xor
lock
sbb
jb
jns
pop
or
cld
jle
loopne
fisttpll
cmp
cmp
mov
addb
jmp
stos
arpl
clc
testl
or
int
shlb
sub
jno
jg
mov
shll
adc
rol
scas
or
scas
shrb
and
push
jl
rcrl
xchg
bound
bound
leave
inc
cmp
xchg
add
fidivrs
in
out
mov
dec
pop
sub
pop
repz
jmp
xchg
mov
jne
out
loop
inc
push
jnp
imul
mov
imul
jge
shll
notb
addr16
mov
push
dec
arpl
je
pop
mov
or
xor
xor
mov
inc
sbb
hlt
cmp
cmpsb
add
push
hlt
or
mov
push
push
imul
imul
pop
push
popa
and
jmp
cmpsb
dec
stos
mov
mov
test
push
jmp
nop
in
fcomi
insl
jl
cs
xor
les
dec
imul
jl
add
cltd
mov
or
test
xchg
jmp
dec
out
jnp
shrl
orb
pop
dec
sbb
jge
sbb
pop
ficomps
push
call
adc
jmp
stos
push
mov
icebp
aas
sti
sarb
fstps
in
repnz
jno
push
xchg
icebp
cwtl
jmp
push
mov
mov
call
jmp
sbb
repnz
aaa
addr16
pop
pop
inc
or
pop
inc
push
es
jecxz
xchg
mov
lea
sub
cmp
dec
ffreep
sub
in
xchg
insl
fstpt
dec
scas
adc
and
fwait
pop
jne
fsubp
pop
je
fildl
dec
push
xor
addl
push
inc
xor
xchg
sbb
sub
sub
les
jmp
push
and
cwtl
scas
movsl
xchg
es
dec
inc
out
ja
jns
mov
jb
xchg
xchg
and
icebp
and
fistps
mov
popf
pop
xchg
mov
adc
pushf
mov
fldt
pop
and
xor
and
scas
sbb
jmp
pop
pushf
cmpsl
inc
lea
dec
pop
mov
adc
lods
aaa
pop
scas
xchg
loop
repz
and
jae
test
add
movsl
mov
mov
es
add
mov
push
sub
jnp
adc
lds
pop
jle
les
push
into
stos
test
adc
insb
fadd
ret
push
add
jge
adc
mov
jno
bound
push
pop
pusha
xor
mov
sbb
sbb
mov
xchg
fcmovnb
cmpsl
inc
cmp
jno
push
jns
in
xchg
inc
add
mov
sub
xchg
push
stc
cmpl
jns
les
insl
push
cmp
pop
push
ljmp
lahf
xor
mov
push
loope
stos
out
clc
sbb
in
sub
cmp
adc
dec
push
aas
sti
ret
pop
ljmp
hlt
mov
addr16
sub
mov
mov
repz
stos
inc
nop
sbb
mov
mov
add
xor
pushf
in
and
add
pop
jecxz
push
pop
call
daa
cmp
jmp
push
jb
inc
rcrb
mov
and
mov
pop
xor
xor
sbb
dec
xchg
pop
outsl
dec
sbb
dec
insb
mov
push
rep
inc
inc
out
insl
jae
cld
mov
inc
jae
inc
into
cmp
inc
jp
sbb
les
loope
leave
fnsave
aas
sub
sub
rcr
in
aas
and
fisubs
inc
in
popf
and
insl
in
push
out
std
push
mov
inc
jge
mov
jnp
outsb
or
inc
xchg
xchg
mov
fwait
insb
rcl
jbe
out
sbb
ffree
fsubr
sbb
xor
pop
adcl
jle
pop
xor
mov
stc
fcmovnb
inc
jl
pop
inc
sub
inc
sub
xor
shll
mov
sbb
inc
mov
inc
jecxz
mov
test
cmp
mov
add
adc
mov
ljmp
fcmovbe
push
dec
icebp
dec
ret
xchg
xchg
adc
out
mov
inc
or
fsubrp
inc
cmc
fidivl
push
rcll
daa
ljmp
fistl
and
cli
in
jg
adc
push
cwtl
aas
xor
jmp
inc
or
jnp
dec
les
bound
das
arpl
js
sbbl
mov
mov
dec
jmp
in
gs
lea
pop
mov
ret
sti
cmc
xchg
add
inc
cmp
add
arpl
inc
movsb
in
loope
push
mov
hlt
xlat
pop
xorb
mov
jecxz
sub
arpl
pop
loope
or
jg
push
jecxz
hlt
or
fcmovnb
cmc
rcl
or
lods
les
dec
in
test
pop
xchg
enter
lea
xor
jns
push
adc
jg
call
jmp
push
std
sti
xlat
sbb
repnz
cmp
inc
adc
mov
test
inc
shll
sbb
dec
rorb
pop
add
xor
adc
push
add
inc
cli
pop
adc
inc
and
ret
dec
jecxz
insb
fidivs
repz
inc
sarl
pop
cltd
inc
cmp
loope
cmpsb
nop
push
in
sbb
add
mov
cli
pop
cmc
sub
ret
ja
mov
test
out
cmp
enter
pop
adc
xor
pop
xchg
sbb
into
insb
push
into
rorb
sbb
adc
fwait
int3
cmp
stos
movq
jp
and
xor
cmpsb
sbb
in
push
and
adc
pop
xchg
mov
add
outsb
adc
frstor
sbb
push
pop
dec
frstor
bound
ficoml
mov
sub
jnp
scas
clc
inc
pop
sub
inc
mov
mov
pop
lcall
out
dec
or
cmpsb
repnz
add
xchg
mov
mov
mov
inc
inc
std
inc
test
jne
test
add
les
add
and
movsb
mov
ret
xchg
in
pusha
mov
xor
push
idiv
leave
sbb
inc
fidivl
lock
xchg
aaa
les
xor
addr16
push
fiaddl
stc
mov
ljmp
xchg
les
mov
pop
mov
pop
dec
into
push
ficoml
rcr
out
mov
lock
ret
mov
mov
dec
loope
cmp
test
icebp
push
ret
xchg
jmp
mov
notb
or
xchg
sub
sbbb
loopne
outsb
out
ud0
loope
pop
shl
repz
int
lds
stc
mov
sbb
cmpsb
mov
inc
pop
push
push
xchg
adc
dec
mov
push
mov
inc
inc
lea
in
ja
ret
dec
dec
cmc
in
and
call
test
aas
mov
add
mov
shr
push
jns
fisubl
jb
sbb
std
xor
lea
imul
les
push
insb
sbb
in
repz
lea
les
scas
jne
mov
test
pushf
xchg
popf
jecxz
sub
push
in
rol
jecxz
es
or
lcall
movsb
mov
outsl
push
imulb
pop
add
adc
and
add
jl
xchg
fnstenv
subl
or
mov
inc
sbb
addb
push
inc
clc
push
cmp
mov
es
jl
out
in
iret
dec
rorb
fnstenv
mov
inc
jecxz
aam
inc
cwtl
mov
and
jo
xorl
scas
inc
or
mov
roll
out
xchg
out
pop
icebp
mov
xor
popa
cmpsl
jns
pop
int3
push
cmc
movsl
jns
in
cmc
cmp
inc
lahf
push
cmp
inc
sbb
xor
repz
pop
lahf
cmp
repz
cmp
sub
jmp
ficomps
fisubrs
xor
sub
xchg
shl
in
lahf
adc
test
sbb
loop
mov
cmpsl
and
repz
mov
nop
dec
movsl
dec
test
sub
mov
adc
bound
jecxz
xchg
fisubrs
loopne
mov
add
lea
cmp
mov
sbb
loopne
insb
dec
inc
sarl
xor
mov
inc
cmpsl
sbb
pushl
sub
ret
das
jmp
in
cltd
cli
jns
rdtsc
lea
ret
decl
xorb
ljmp
stc
test
jle
repnz
mov
inc
iret
mov
sbbl
mov
test
shr
xor
ret
inc
sbb
xchg
cmp
fistps
add
lcall
sub
push
mov
or
mov
sbb
test
das
fiaddl
and
mov
mov
inc
mov
ss
sbb
ds
mov
sbb
jo
and
jnp
mov
incl
fld
sbb
je
orb
and
dec
and
sbbb
pop
sbb
in
ffreep
fldln2
sbb
mov
push
pop
addl
lahf
aas
in
xchg
lds
mov
xor
mov
sar
add
mov
hlt
stos
loop
call
fldenv
push
lods
into
fisubrl
lods
stc
mov
inc
cmp
xchg
mov
xor
lods
es
pop
fwait
xchg
insl
xchg
pop
sub
jmp
jne
lods
gs
sub
mov
arpl
stos
test
loopne
xchg
mov
cmpsl
sbbb
mov
adc
mov
rcrb
inc
addl
inc
cli
pop
out
sti
and
jne
jg
stos
xchg
nop
pop
test
mov
aas
rorl
xchg
lahf
jnp
xchg
rcr
pushf
xchg
adc
xchg
and
out
xchg
mov
jne
xchg
scas
inc
xchg
pop
test
mov
xchg
insb
lea
out
mov
jmp
mov
mov
adc
inc
mov
out
in
cmpsl
mov
and
aad
sbb
mov
mov
ljmp
bound
aas
xchg
pop
jg
mov
inc
mov
cmp
cmpsl
rcl
int3
xor
sarl
sub
stos
jne
rorl
push
sbb
sub
xchg
cmp
add
push
xchg
xchg
out
call
push
push
mov
out
out
ret
fdivrs
in
jns
push
add
mov
push
shl
jmp
inc
add
dec
adc
cmp
jge
jnp
mov
fistl
sub
sbb
clc
or
fs
push
add
push
mov
xchg
lcall
adc
adc
dec
xor
rolb
fcmovb
movl
rol
scas
xchg
mov
lods
testb
pop
pop
sub
int3
xor
rcl
fimuls
out
jb
arpl
mov
cltd
cmp
stc
push
jecxz
fsubrs
adc
aam
jo
xchg
add
mov
ret
xchg
in
mov
cli
cld
or
xchg
icebp
ficompl
inc
jmp
fimull
inc
lea
ds
sbb
sarb
into
jge
sbb
mov
dec
mov
popf
sahf
push
jae
add
ficoml
cmp
aaa
xlat
out
in
test
in
xchg
jbe
xchg
test
inc
jp
cs
movsl
shr
push
loope
jns
fcompl
xchg
xor
test
jno
daa
cmp
sbb
fldcw
dec
lds
nop
pop
jne
and
mov
addl
fwait
mov
jno
xchg
sahf
adc
inc
int
cmp
insb
pop
stos
mov
cmp
cmp
xchg
jecxz
rcrb
jbe
std
add
aad
and
loope
es
inc
aad
cmp
out
outsb
icebp
add
xchg
mov
repnz
fidivrs
out
out
mov
jb
inc
push
jp
loop
insl
jno
push
jp
popf
loop
or
mov
pop
in
pop
cmp
push
and
mov
sub
fcmovb
faddl
insl
fmuls
push
fucomi
mov
cli
sbb
in
cmp
mov
add
jp
inc
cmpsb
rclb
mov
test
and
sub
fcoms
push
fstpt
and
imul
fiaddl
iret
push
test
xchg
jge
aad
ss
mov
repz
in
and
pop
in
dec
mov
add
int
ret
ret
testl
in
in
fcmove
in
xchg
in
sti
leave
push
imul
jne
clc
inc
lret
ja
out
ljmp
xchg
cltd
xchg
out
xor
lea
xor
xchg
adc
fcmovu
xor
sbb
jnp
jg
cmc
mov
cmc
lods
jle
sbb
rorl
sub
call
dec
mov
adcl
jecxz
add
cmp
push
fidivs
inc
jp
subb
inc
dec
mov
iret
sub
cmp
inc
and
mov
decb
inc
mov
stos
rol
mov
xchg
scas
inc
xchg
lcall
hlt
ret
aam
sbb
in
lock
sar
aad
pop
mov
es
mov
loope
mov
pop
mov
movaps
mov
shll
mov
mov
mov
add
xchg
inc
xchg
xchg
ljmp
mov
xchg
mov
lcall
sbb
rolb
out
or
ljmp
mov
xchg
hlt
xor
mov
out
ret
jecxz
test
stc
mov
add
mov
stc
test
mov
xchg
repz
mov
sub
ljmp
mov
mov
jo
mov
mov
add
dec
scas
inc
dec
sub
inc
inc
sbb
loopne
ljmp
mov
adc
mov
cmp
mov
out
mov
imul
out
ljmp
xchg
sbbb
aad
out
inc
addr16
mov
push
rorb
mov
icebp
xchg
ret
mov
inc
lret
aam
jl
xor
jae
xlat
in
or
xlat
jge
push
in
stos
icebp
fisubrl
fcmovnbe
icebp
jb
sub
sbb
xchg
xor
inc
cli
xchg
xchg
mov
add
xchg
ret
mov
xor
sti
inc
shl
mov
out
cmc
inc
inc
mov
lods
or
inc
dec
rep
or
cmc
xlat
mov
iret
lods
dec
das
stc
out
popf
inc
mov
pop
repz
add
cli
sti
or
or
das
fisubrs
mov
mov
sub
xlat
lods
and
iret
lods
outsb
xor
pop
pop
out
mov
mov
hlt
ljmp
jnp
or
repz
xchg
cmc
inc
xor
mov
dec
mov
inc
ret
mulps
ljmp
lret
jnp
sbb
xor
jmp
cld
sub
mov
mov
push
faddl
jns
ss
and
cmp
ja
push
pop
cmp
lret
jmp
xchg
cltd
in
js
test
xor
and
out
in
cltd
sbb
ds
cmpsl
and
mov
cmp
inc
xchg
test
cmpsl
out
jb
mov
dec
sub
mov
sub
cmc
stos
mov
sbb
cmp
push
mov
out
cmpsl
sbb
gs
vdivpd
mov
in
cmp
mov
dec
mov
or
rcrl
icebp
movl
xchg
repz
jmp
jmp
cmp
jo
jb
sbb
rorl
idivb
lea
aad
pushl
xchg
outsb
test
mov
push
vpaddusb
jo
ret
mov
cmpb
aas
aam
xchg
cld
ljmp
jp
stos
jns
add
repz
andb
std
add
adc
popf
push
jg
lea
cmp
dec
pop
sbb
addb
sub
sti
mov
daa
lahf
leave
jmp
mov
push
data16
xor
loope
pop
insb
lods
cs
inc
daa
jo
outsl
cltd
mov
mov
inc
xor
les
cmpsb
cmp
insl
jecxz
ljmp
lcall
or
push
jne
es
inc
and
lods
mov
insb
imul
sub
filds
ljmp
iret
daa
rclb
aas
in
clc
cmc
fsubrp
cmp
mov
in
out
fcomip
cmpsl
fnsave
out
repnz
xor
imulb
adcb
imul
in
and
mov
ficompl
jle
jmp
sub
ret
in
xor
cmp
xlat
fimull
and
xchg
rep
adc
test
les
ret
lock
sahf
xor
jnp
loope
jge
jb
sbb
les
adc
movsb
fcomip
xchg
insl
jecxz
mov
inc
mov
cwtl
jmp
jecxz
mov
mov
imul
inc
dec
filds
in
repnz
aaa
sub
aaa
xor
adc
test
aaa
jo
test
es
jae
lock
inc
aaa
cmp
sub
dec
xchg
fstps
sub
sub
scas
and
or
fnsave
xor
sbb
xor
sbb
jno
rorl
hlt
fmull
inc
xchg
jge
aad
lret
popf
pop
mov
outsb
and
imull
iret
scas
sbb
jb
add
cmp
aaa
les
sbb
mov
in
inc
lret
in
stc
fidivrs
pop
mov
dec
repz
sbb
daa
in
dec
cmp
and
fs
push
adc
pop
into
mov
sarb
std
jle
in
mov
shlb
pop
and
test
cmp
insl
stos
sub
inc
sub
jmp
int
jp
cmp
sub
or
mov
sub
push
test
add
inc
and
pop
and
imul
or
sbb
add
sbb
popf
stc
fiaddl
aas
mov
mov
aam
adc
add
cmpsl
lods
fistpll
mov
sub
in
xchg
insl
scas
pop
mov
adc
adc
enter
in
pop
clc
loope
shll
mov
push
lds
sbb
iret
in
adc
sub
fsubrl
imul
jb
ret
mov
and
xchg
xchg
add
jmp
pusha
xor
xor
sub
adc
inc
pop
aad
xchg
cmp
mov
pop
arpl
adc
fcoms
fiaddl
jmp
jmp
int3
xor
adc
aad
push
cmp
xor
loop
xlat
mov
bound
imul
sbb
int
shl
cs
jl
add
imul
int
mov
sub
xor
pop
sub
rcll
cmc
in
popf
pusha
test
pop
ret
dec
aam
sub
enter
xor
out
dec
sub
push
add
inc
sbb
xor
rcll
rorl
fnstcw
jns
xchg
push
std
mov
jns
out
in
sbb
xor
lock
fisttpll
int3
rorl
lea
rclb
fst
nop
in
xlat
push
push
ljmp
pop
mov
mov
pop
xor
fsubrl
add
mov
aaa
in
or
mov
sbb
aaa
dec
ret
xchg
push
dec
imul
cmp
test
pop
sbb
sarb
fcoml
insb
sbb
inc
fcmovnb
jle
mov
rolb
jmp
aaa
mov
cwtl
sti
movsl
and
shrl
shll
mov
aam
int3
jns
mov
pop
in
movsl
das
lea
ffree
cmp
xchg
loope
mov
mov
je
push
mov
dec
add
push
aaa
jl
std
xchg
mov
adcl
jno
xchg
inc
and
fsubrl
mov
int3
lds
shl
arpl
jnp
sar
mov
rcl
add
jno
adc
inc
hlt
pop
gs
fsubrl
ret
les
add
shr
push
or
cmp
ret
out
ret
cmpps
cmp
leave
ret
xchg
jb
add
sbb
sbb
aas
add
adcl
inc
or
pop
inc
or
sub
cmp
fldcw
xlat
inc
dec
sbb
flds
pop
xchg
inc
and
in
sub
int
ret
mov
scas
inc
xor
int
daa
inc
and
or
push
in
sti
sub
ret
sbb
sbb
fldcw
clc
ret
xor
ret
xchg
xchg
cmpsb
sti
hlt
push
inc
stos
lahf
adc
xor
ret
mov
divb
dec
inc
mov
xchg
xchg
lods
lahf
or
sub
xor
fisubl
sub
xor
cmp
test
sbb
addb
pusha
les
mov
in
fcompl
arpl
popf
adc
push
sub
adc
xor
les
and
les
pop
xor
mov
sub
jmp
das
fidivrl
and
xor
lahf
mov
repnz
or
sub
into
gs
lods
inc
xor
lahf
mov
test
jp
xor
stc
repz
or
ret
mov
rcr
ljmp
or
fistpll
loopne
jae
orb
push
lret
pop
and
mov
loopne
fcomps
fsts
fidivrl
cltd
sbb
dec
add
adc
mov
cmp
ljmp
push
pop
insb
xchg
mov
testl
xchg
gs
xor
ds
aam
fs
jo
movsl
aam
xor
sti
xor
imul
jae
insl
sub
lea
or
jmp
jns
cmp
rorb
ret
ud2
inc
nop
xor
aaa
aam
bound
cmp
fistpll
movsl
mov
cmp
ficomps
divb
fstps
ja
fiaddl
pop
subl
or
scas
cmp
add
cmp
addr16
scas
mov
jge
idivb
xchg
arpl
arpl
loope
ljmp
loop
jmp
out
dec
lcall
dec
pcmpeqb
cmp
mov
mov
or
ret
mov
and
xchg
rolb
xor
inc
jnp
loope
mov
cmp
aam
pop
push
nop
mov
mov
stos
push
inc
mov
in
aaa
cmpsb
push
cmpsl
and
ja
loope
cmpsl
popa
jmp
add
dec
xor
ret
ficomps
les
and
mov
repz
cmp
pop
aam
cmpl
ja
test
das
lea
mov
or
popa
and
mov
sub
and
fiaddl
arpl
sub
insb
push
orb
jno
pop
arpl
add
jmp
in
xchg
arpl
orl
aam
cmpsb
imul
insb
ja
mov
imul
outsl
es
and
mov
mov
mov
xor
sub
aaa
mov
addl
lea
fcmovne
or
popf
sub
mov
aas
insl
sbb
mov
sbb
add
xor
sub
les
jno
mov
imul
jno
lds
jmp
ljmp
adc
fidivl
pop
outsl
imul
notb
push
sub
adc
lea
les
mov
les
ret
adc
ret
inc
mov
inc
mov
jne
loop
icebp
ret
mov
push
mov
dec
push
xchg
xchg
push
ret
adc
scas
inc
dec
xor
adc
or
jae
in
cmpsb
adc
xchg
dec
dec
mov
adc
inc
dec
adc
arpl
pop
ja
jb
xchg
inc
and
in
ss
push
icebp
ret
mov
scas
adc
outsl
aas
adc
daa
jno
jmp
push
mov
out
cmp
sbb
sbb
push
mov
fldcw
sbb
inc
xor
sbb
dec
outsl
jmp
leave
xlat
add
cmp
rcr
mov
rcr
stc
sbb
fstps
rcr
cmp
sub
push
shlb
push
mov
mov
mov
clc
push
push
fwait
push
sub
cmp
jno
sub
aam
adc
pop
mov
pop
mov
mov
sbb
stc
jecxz
sbb
fidivrl
mov
in
dec
sbb
lcall
inc
inc
sbb
or
mov
loop
outsb
add
jmp
popa
mov
inc
pop
ret
mov
and
xchg
fnstsw
add
fwait
and
mov
repz
pop
add
mov
inc
and
ljmp
repz
mov
cmp
jns
and
in
mov
les
ja
ret
jnp
test
les
aas
aam
pop
add
fstpt
shr
mov
inc
aas
aas
sbb
aaa
in
mov
xchg
jmp
aas
ret
jmp
add
fnclex
add
ret
aas
and
jns
cmp
inc
aam
idivl
mov
test
xor
les
sub
lea
les
inc
aam
jno
rcr
push
or
mov
aam
add
rcr
fs
sub
insl
les
mov
arpl
mov
dec
aam
xchg
jno
mov
test
inc
dec
inc
loope
jl
loope
jo
inc
movsb
or
fldt
or
lea
or
dec
or
outsl
lea
das
lea
or
xor
rcr
push
dec
push
or
cmp
or
pop
or
les
xor
loope
in
push
mov
push
sub
mov
adc
sub
jo
pop
xor
test
addr16
push
ret
in
mov
ljmp
mov
outsb
lods
hlt
outsb
mul
lods
insl
cmpsb
mov
outsb
fld
popa
push
cmp
mov
stc
push
and
mov
pop
mov
popa
scas
das
lea
je
and
je
lea
scas
push
je
cmp
jb
pop
jl
mov
xor
dec
xor
imul
inc
jb
cmp
sbb
ret
cmp
jb
mov
jb
sti
in
or
jb
mov
push
clc
jp
adc
pop
mov
mov
insb
fbstp
pop
mov
jno
adc
mov
sub
sarb
pushf
inc
movsl
jbe
in
pop
mov
in
or
or
jl
jmp
pop
mov
mov
jmp
jl
in
stc
mov
cltd
jg
add
or
jp
jl
inc
mov
mov
bnd
xchg
inc
loope
mov
inc
push
jp
inc
mov
mov
or
in
test
pop
pusha
out
ret
and
jl
std
xor
and
mov
ret
pop
lods
mov
cmp
fcmovu
pop
and
jns
mov
pop
loope
sti
mov
inc
or
xor
mov
and
xlat
push
rolb
lahf
mov
xor
fdivrs
flds
jmp
movsl
ret
jmp
bound
in
bound
inc
ret
xchg
inc
int
in
rorl
push
mov
pop
push
xchg
sbb
push
popf
roll
icebp
push
fstpt
data16
les
lcall
hlt
inc
in
jp
test
jae
dec
dec
inc
std
xor
jecxz
ror
ds
xlat
inc
subb
inc
fdivrs
dec
cmpsl
xchg
inc
jns
in
or
icebp
into
cmpsl
stos
sbb
inc
push
inc
push
jmp
dec
mov
inc
lods
xor
mov
in
gs
imul
dec
push
es
loopne
fisttpl
push
push
inc
in
jp
xor
jae
hlt
scas
inc
sub
fisttpl
stos
and
push
les
inc
jmp
in
jp
push
rcr
dec
sub
rcr
stos
dec
sub
dec
sub
dec
rcr
sub
or
fldt
sub
rcr
stos
dec
sub
dec
arpl
lock
push
push
insl
leave
or
push
push
je
push
out
push
daa
mov
xor
xlat
or
jae
push
out
loop
push
lods
xchg
push
xor
or
outsb
push
xlat
rcr
jg
jmp
lret
pop
mov
es
cmp
sub
aas
out
addr16
mov
mov
fstpt
mov
jb
fldcw
jecxz
arpl
sub
mov
aam
xchg
pop
xlat
cltd
mov
xchg
iret
add
outsl
fwait
mov
fwait
lea
ja
xchg
jbe
mov
pop
jnp
nop
pop
mov
xor
push
pop
ficoms
or
sbb
inc
cs
repnz
push
test
xchg
frstor
mov
and
jp
pop
or
inc
aam
xchg
pusha
push
adc
lret
and
push
sub
mov
inc
adc
popf
cmc
and
fcmovu
jnp
xchg
loopne
cmp
icebp
scas
mov
xchg
lds
ljmp
mov
sub
cltd
ret
inc
mov
push
mov
mov
orl
mov
cltd
movsl
dec
ss
cltd
in
test
stos
pop
inc
add
xor
sbb
inc
pop
les
pop
pop
test
js
cltd
in
psubsw
xchg
push
xchg
push
or
lahf
inc
in
mov
mov
in
rol
sbb
adc
aas
popf
sbb
pop
pop
pop
scas
aas
adc
shr
imul
and
in
es
cmp
stc
lods
addb
loop
xchg
es
lahf
into
inc
scas
inc
je
pslld
or
ds
dec
shr
xor
daa
outsb
scas
aas
lea
xchg
shr
repz
push
cmp
aam
dec
inc
rcr
scas
inc
inc
xor
mov
fcmovbe
shrl
stc
cmpsb
out
aas
in
mov
or
or
andb
cmp
std
xlat
mov
xor
lea
inc
inc
lods
adc
xchg
addr16
loope
mov
dec
jecxz
jp
sbb
fdivrs
fldln2
aad
push
fwait
sbb
fistps
mov
push
sub
lea
ljmp
fdivr
or
mov
popa
add
push
ljmp
shll
mov
testb
inc
cmp
sbb
bound
rcrl
adc
test
addr16
or
jb
xchg
dec
rorb
int3
sbb
push
cmp
add
push
push
mov
push
xchg
sbb
inc
out
neg
xor
push
repz
cli
push
inc
xor
mov
enter
bound
mov
mov
les
cmp
xlat
jmp
mov
sub
or
lret
push
es
lock
sti
or
inc
test
std
add
or
inc
add
cmp
jp
mov
pusha
dec
add
jp
inc
lods
rolb
ret
insb
or
out
push
ret
push
in
mov
imul
mov
stos
addb
inc
out
call
pop
push
fwait
adc
pop
dec
scas
aaa
in
lods
outsb
sub
or
sbb
fadd
sbb
fisttpl
dec
jp
mov
push
push
cwtl
jmp
push
dec
ja
cmp
pop
xor
ret
insb
hlt
and
outsb
shlb
dec
inc
mov
xchg
loope
pop
filds
jb
cwtl
inc
jno
jnp
adc
xchg
and
xchg
fcmove
cmp
shll
fld
movsb
fildll
repz
fucomi
popf
mov
ret
and
push
mov
cmp
ljmp
loop
loop
lcall
js
cmp
gs
cmpsb
add
or
xor
mov
scas
out
scas
add
gs
mov
sbb
xor
cmp
test
and
mov
icebp
push
js
insl
mov
in
stc
ljmp
repz
mov
adc
scas
xchg
mov
xchg
xchg
in
bound
mov
test
fstpt
out
cmp
push
fstps
test
adc
andb
mov
inc
sub
in
sbb
adc
mov
call
xchg
mov
push
mov
outsl
inc
xor
test
mov
sbb
rclb
jmp
mov
and
xchg
mov
sub
or
add
sarb
addr16
push
aaa
mov
jb
lods
jne
cmp
add
ss
jo
test
cmp
and
jp
in
cli
dec
insl
jmp
xchg
xor
mov
xlat
lock
mov
fisubs
mov
test
mov
adc
mov
addr16
cmp
insl
jp
dec
sbb
mov
inc
sbb
ja
mov
inc
adc
mov
mov
lea
inc
mov
mov
popa
mov
pop
cmp
out
mov
cld
ljmp
jmp
outsl
nop
jmp
xchg
lcall
icebp
ret
adc
mov
shll
iret
pop
add
pop
ja
fistl
insb
push
stc
jmp
mov
loop
cmp
mov
add
push
pop
rolb
div
lea
fwait
imul
pop
mov
and
lock
insb
fsubrs
xor
rolb
mov
mov
adc
inc
in
xrelease
mov
test
cmp
pop
data16
fldt
xor
jns
push
inc
and
mov
aam
xlat
or
sahf
aam
je
jp
mov
fildl
call
shr
lods
pop
sahf
icebp
inc
ror
mov
inc
sahf
cmpsb
mov
popa
cld
in
inc
jno
xor
ret
cltd
inc
xchg
test
mov
or
movsb
stc
mov
inc
mov
stc
mov
dec
test
clc
hlt
jmp
movsb
test
aas
xchg
out
inc
adc
fldcw
add
add
movsb
mov
push
insl
jmp
fxch
xor
ja
lcall
dec
dec
jmp
les
jle
pop
jg
leave
dec
in
adc
rclb
mov
icebp
movsl
adc
movsb
faddl
inc
iret
popf
adc
jecxz
mov
cmp
push
cld
and
into
pop
popf
or
cmp
les
add
xor
push
inc
xchg
xor
sbb
or
or
inc
add
push
jp
push
add
push
sbb
xchg
dec
data16
add
out
test
mov
mov
aaa
sbb
popa
andb
movsb
test
push
cli
movsb
and
rcrl
stos
pop
and
jle
jl
inc
mov
mov
pop
cmpsb
adc
xor
jp
mov
movsl
adc
mov
adc
ret
into
mov
movsb
inc
les
ds
and
cmpsb
xchg
cltd
fisttpll
push
and
ficomps
jmp
loopne
push
pop
xchg
popf
xchg
repnz
mov
lods
movsl
inc
sbb
pusha
aas
lea
js
in
jmp
lods
and
fildl
out
and
push
xor
lea
and
sbb
mov
movsb
out
push
xor
cs
xorb
out
mov
ret
sub
mov
push
jge
dec
xchg
cmp
popa
in
call
insb
dec
push
fwait
or
sub
dec
sbb
fcmovnu
push
push
pop
lret
stos
inc
sub
fldt
stos
popa
fisubl
inc
stos
pop
jge
sub
sahf
push
mov
mov
inc
sbbb
mov
cmp
jae
sub
adc
xchg
mov
sbb
jecxz
in
fldt
push
into
xchg
nop
in
out
dec
inc
xlat
nop
adc
and
mov
dec
ret
pop
jns
mov
mov
add
mov
inc
jle
sub
scas
pushf
or
sub
mov
and
and
inc
jmp
add
xchg
test
mov
es
movsb
and
sub
xlat
aam
jg
xchg
movl
imul
roll
icebp
fwait
mov
mov
pusha
pop
mov
iret
fstpt
add
mov
xor
mov
shll
lcall
aas
dec
inc
movsb
in
sub
push
inc
lods
sub
shr
js
xchg
pop
dec
xchg
mov
ret
push
in
into
xchg
pusha
adc
leave
rolb
fucom
sub
movsb
xchg
sub
sti
xchg
fldenv
fdivrp
leave
aam
xchg
ret
mov
popf
aad
or
push
cmp
cmpsl
lods
imul
mov
jb
lret
addr16
jecxz
shrl
mov
lahf
imul
mov
ljmp
xlat
mov
dec
xchg
test
push
xor
cmp
jne
inc
cltd
pop
cmpsl
and
xchg
dec
push
xchg
rolb
fldenv
lea
xchg
inc
pop
std
loope
dec
fldpi
cs
les
xchg
loope
cmpsb
cli
je
mov
sub
inc
loopne
mov
mov
aaa
pop
test
dec
sti
movsl
jno
std
xlat
inc
pop
mull
out
fiaddl
lcall
ficompl
adc
in
adc
pop
lcall
sbb
xchg
aaa
fsubrs
subb
shl
les
add
ret
std
sub
fcmovnbe
push
dec
sbb
dec
push
adc
dec
shll
pop
jle
pusha
in
push
nop
shr
sti
les
jle
inc
jmp
xor
std
inc
cmp
fildl
rcr
jecxz
fidivl
mov
mov
test
pop
outsb
aam
sbb
rcr
jl
and
adc
mov
inc
adcl
in
out
pop
jmp
and
mov
icebp
fistpl
jno
or
inc
mov
mov
mov
and
adc
fisttpl
das
int3
xchg
shr
mov
xchg
jnp
rolb
loope
bound
mov
pop
jecxz
out
mov
lock
rolb
ret
mov
sbb
mov
mov
push
mov
loope
dec
shrl
cld
mov
inc
loop
cmc
fcmovnb
mov
aas
mov
orl
lea
push
lock
jp
mov
lea
jns
lock
or
out
fld
xor
cmp
or
les
dec
out
loope
out
in
or
push
in
fcmovb
jecxz
je
rcr
jecxz
cmpsl
out
rcr
xchg
sub
out
rcr
out
sub
hlt
rcr
push
hlt
sub
rcr
inc
hlt
sub
hlt
sub
hlt
rcr
hlt
sub
hlt
les
fcmovne
or
jmp
rol
daa
icebp
fucomi
sti
mov
fstpt
lahf
inc
jmp
push
push
xchg
jmp
aam
adc
aam
mov
lahf
xor
leave
inc
dec
dec
int3
imul
fmul
nop
mov
xchg
imul
mov
adc
lret
addr16
stc
sbb
aad
nop
aam
cmc
fwait
xchg
adc
push
dec
xchg
je
insb
pop
push
push
clc
mov
pop
mov
mov
rolb
push
mov
sub
shlb
jbe
and
pop
enter
and
std
hlt
mov
push
and
cmpb
les
jecxz
add
sbb
mov
icebp
sbb
xchg
jge
inc
cmp
push
cwtl
add
out
dec
xchg
popf
leave
test
sbb
outsl
mov
icebp
int
inc
lds
repnz
test
cmp
jne
pop
xor
ret
sbb
pop
movsb
pop
mov
sbb
pushf
cmp
ss
ja
mov
jae
xchg
gs
int
leave
lock
adc
fs
pop
aaa
add
jne
cmc
lcall
jmp
xor
mov
notb
fidivl
cld
sbb
clc
data16
fs
mov
ss
fistps
adc
cld
lcall
js
xor
pop
push
lcall
xchg
mov
les
fcmove
daa
popa
insl
push
jp
int
xchg
sbb
mov
loop
hlt
fldcw
push
xchg
and
repz
fmulp
jmp
add
stc
sbb
cld
jg
inc
adc
and
fs
jecxz
mov
pop
lock
jnp
adc
sbb
mov
gs
in
xchg
add
or
repnz
adc
cli
js
inc
pop
lea
sahf
dec
adc
es
out
out
mov
xchg
jge
inc
insb
sbb
cld
lea
loopne
pop
icebp
push
mov
sbb
les
leave
fistpll
sarb
adcl
jmp
mov
loopne
out
inc
sbb
dec
ret
lods
push
sarl
pop
in
add
cmpsb
cmp
or
mov
ja
lds
sti
out
xchg
out
mov
daa
pop
dec
xchg
repnz
or
add
inc
add
jmp
gs
leave
lret
xor
ja
mov
scas
add
enter
fmuls
std
shr
ret
ljmp
mov
jo
dec
and
outsl
lea
pop
jl
pop
sahf
in
mov
adc
mov
adc
scas
xchg
je
mov
dec
lret
push
in
jl
cs
aas
or
inc
in
pop
stos
xchg
notl
xor
push
andl
and
jmp
imul
into
dec
push
xor
sub
jg
jmp
and
add
dec
ljmp
sbb
or
sbb
lods
xchg
insb
repz
sti
sbb
inc
leave
iret
ret
daa
insl
jbe
sbb
mov
aas
or
ds
in
mov
stos
sahf
mov
sbb
pushf
inc
xor
movsb
movsb
ljmp
aas
add
adcl
cmpsl
xchg
jp
mov
roll
lea
jmp
nop
aam
xor
mov
sbb
sbb
mov
inc
out
mov
call
mov
rol
xor
sub
pop
enter
xor
les
mov
jb
mov
out
xor
in
rorl
in
cmp
outsl
mov
sbb
nop
jl
in
out
xor
xchg
repz
add
notl
jl
cs
jecxz
mov
ljmp
rcr
jb
inc
dec
ljmp
push
xchg
int3
cmp
push
cmpsb
mov
push
neg
inc
or
popf
jns
mov
add
or
mov
in
xchg
or
ljmp
xchg
addb
fidivl
sbb
pop
xor
cmp
dec
fisubrl
xor
fcoms
mov
js
xorl
and
pop
lea
and
and
and
cmc
arpl
repnz
sub
xchg
jmp
sub
pop
ret
jge
xor
cmp
inc
repnz
popa
mov
sub
stos
ljmp
orl
scas
into
jge
ret
and
pop
test
pop
in
adc
mov
fbld
data16
outsl
or
jo
repz
lret
inc
aam
cmp
andb
inc
xchg
and
sub
roll
cs
push
pop
aad
ja
rcrb
jae
aam
ja
xchg
add
sbb
int
roll
sbb
mov
mov
sbb
subl
xlat
ret
fisubs
mov
js
and
repz
mov
popa
sub
mov
imul
outsl
cmpsl
sub
dec
ja
cmp
mov
jmp
mov
xchg
and
lret
xor
je
sti
ficomps
mov
clc
or
xchg
lea
dec
mov
mov
push
int
pop
jbe
test
jmp
cltd
enter
mov
jmp
fildl
cmp
lea
xor
cmp
mov
leave
lods
out
jne
adc
xchg
jae
inc
cmp
test
je
out
daa
sbb
scas
inc
sbb
sbb
fnstenv
add
mov
push
or
ss
cmp
push
out
es
sub
stc
mov
dec
insb
mov
add
in
in
push
and
ja
cmp
ja
pushl
out
outsb
test
and
je
repnz
shlb
cmp
sbb
mov
inc
repz
and
pop
cmpsl
add
movsl
cli
and
and
sbb
fimull
adcl
cwtl
and
out
je
lea
fidivl
push
outsb
push
jns
movsb
mov
mov
and
xlat
mov
js
cmp
mov
mov
rcll
scas
fimull
aam
and
fxrstor
mov
sti
pop
ret
fimull
push
shlb
cwtl
mov
popf
mov
jae
mov
sbb
add
sbb
addr16
and
sbb
cwtl
repnz
pop
cmpb
scas
mov
xchg
imul
add
mov
hlt
pushf
add
cld
in
jno
loope
insl
mov
xor
adc
mov
out
stc
add
mov
jle
xlat
mov
les
inc
sbb
fistl
xchg
push
test
ficompl
repz
fstps
pop
les
ljmp
setb
decl
lcall
int3
aam
adc
jecxz
jge
xchg
rol
push
sbb
ljmp
mov
push
push
aad
xor
or
mov
add
inc
jae
jge
repnz
ret
sub
sti
cmpsl
aad
test
mov
xchg
cmpsl
aam
test
and
enter
iret
pop
sar
mov
mov
lea
ja
jecxz
cmp
out
pop
lods
and
ror
pop
mov
cmpsl
inc
enter
mov
xor
aas
push
je
cld
inc
imul
jno
es
add
test
mov
into
fisubrl
fidivs
jmp
dec
in
repz
sti
lds
sub
sti
cmpsb
pop
push
inc
dec
cmp
push
sti
mov
push
repz
push
mov
push
repz
jge
xchg
or
int3
pop
xchg
add
mov
sub
int3
outsb
popf
dec
aad
xchg
pop
fs
pop
incb
test
ret
cmpsb
pusha
shlb
leave
mov
xchg
pop
in
popf
fidivs
cld
js
nop
div
bound
ljmp
les
lret
mov
push
fcomi
adc
cmp
lahf
and
xchg
cwtl
outsb
cmp
pop
imul
sbb
or
call
aad
or
jns
and
rcl
jne
jns,pt
mov
insl
dec
or
enter
notl
loop
lret
jge
insl
aam
jb
xchg
jbe
cmp
jns
enter
das
and
into
pop
insb
jae
inc
outsb
scas
xchg
mov
hlt
sarl
lret
mov
inc
ja
jno
pushw
fisubrl
fcoms
adcl
jns
adc
movsb
or
ljmp
sbb
insl
jg
push
les
xchg
mov
lods
mov
xchg
sub
into
add
dec
pop
cmp
es
sub
xor
data16
into
mov
xor
pop
sub
fwait
inc
lret
adc
lea
mov
mov
pop
sbb
arpl
filds
xor
fistl
cltd
mov
mov
xchg
insl
mov
ficoml
cbtw
xlat
popa
add
out
push
cmpsl
cmp
subl
push
fcom
dec
daa
sbb
adc
sub
sbb
mov
aad
nop
cmp
adc
daa
mov
xor
xchg
or
xor
push
mov
sub
add
ljmp
adcb
pop
stc
push
inc
sbb
insl
int3
dec
cltd
inc
adc
js
sbb
push
inc
sub
cmp
sbb
popa
fld
int
adc
xor
dec
inc
and
in
les
mov
popa
fisubrl
xchg
pop
popa
pop
or
fstpl
cs
repnz
fistl
xchg
loope
xor
rcll
dec
repz
test
sti
sbb
jg
pop
pop
outsl
pop
addb
mov
jmp
test
stc
outsl
xor
or
cmp
inc
cmp
pop
jge
cmpsb
xorb
int3
mov
add
or
jecxz,pn
pop
out
dec
shl
std
xor
out
and
cmp
jns
repz
cltd
pop
dec
das
sbb
or
adc
negb
push
ss
cmp
and
in
pushfw
xchg
pop
xor
and
aaa
mov
lret
loope
cmpsb
push
loop
mov
rclb
scas
ljmp
xor
out
sub
or
lret
aaa
outsl
sahf
imul
push
mov
mov
sti
jg
lret
jmp
jl
iret
jno
cli
jg
rclb
jmp
mov
es
test
cmp
sbb
or
insl
or
in
push
cmp
lds
xchg
jbe
rorb
sbb
sub
adc
cmpsb
push
in
adc
filds
push
dec
cmpsw
xor
add
test
jl
adc
xor
stos
mov
popa
cmp
cmpsl
call
movsl
nop
scas
in
mov
cmp
pop
xor
adc
in
add
push
call
inc
shl
mov
pushf
and
insl
andl
fadds
adcl
lea
lea
inc
stos
and
inc
stc
cmp
sbb
pop
in
sbb
insb
and
mov
clc
add
and
mov
arpl
sbb
sbb
fidivs
flds
pop
sahf
imul
rorb
repz
sahf
and
xchg
shlb
lods
nop
call
call
jns
cli
jmp
icebp
adc
cli
sbb
pop
icebp
adc
test
lea
inc
aam
push
out
mov
and
mov
pop
hlt
sbb
hlt
jl
sbb
pop
xchg
lea
cld
and
pop
ljmp
test
add
fsubs
inc
repnz
jns
test
in
and
inc
xchg
adc
lods
mov
sub
mov
inc
dec
or
mov
xlat
inc
mov
loopne
stc
push
sub
mov
inc
cld
rcll
test
push
inc
pop
mov
nop
out
inc
pop
lret
lea
push
xor
ja
adc
repz
mov
std
jecxz
mov
xlat
mov
aas
daa
push
mov
in
push
xchg
test
sti
daa
xchg
lds
pushf
adc
stc
jbe
scas
orb
push
inc
loopne
and
push
cwtl
addr16
lock
cbtw
add
inc
or
imul
xor
mov
pop
addl
mov
and
xlat
sub
sub
push
jl
fs
pop
jecxz
sbb
cmpsl
lds
mov
push
inc
sub
rorl
arpl
sub
inc
jo
jns
insb
jecxz
pop
jecxz
dec
jmp
imul
aam
mov
pushf
fiaddl
cmpsl
mov
and
paddq
lock
call
jnp
pmaxub
addr16
push
inc
sti
cmpsb
sti
cmc
ljmp
aam
pusha
add
jmp
and
xor
push
adc
loop
outsb
mov
pusha
decl
lds
jecxz
jecxz
mov
fstpl
sbb
iret
mov
pop
xor
shll
cwtl
mov
mov
sub
sub
sti
ret
int3
xor
into
loopne
sbb
imul
jns
test
pop
adc
jp
xor
popa
mov
popl
pop
adc
cmp
cmpsl
stos
test
lds
cmp
aad
and
fisubl
sbb
xchg
ret
push
xor
bound
xor
enter
lods
xchg
sbb
pop
jb
jp
repz
xchg
jb
jno
call
das
imul
push
jecxz
ret
push
movsl
cmpsb
leave
jb
cli
ret
lods
xchg
int
dec
jecxz
enter
loope
jge
sarl
cmpsb
inc
iret
and
lods
xchg
mov
out
ret
and
ja
add
lcall
cmpsb
inc
xchg
mov
out
jns
mov
test
shrb
rcrl
and
call
jge
xchg
ret
mov
sbb
les
jnp
popf
pop
shr
cmp
pop
pushf
stc
or
in
shr
test
adc
aad
mov
pop
cmp
popf
fldl
mov
mov
jae
daa
outsl
inc
fimull
push
xorl
push
sbb
mov
inc
pusha
adc
add
pop
mov
pop
stc
popf
mov
xlat
mov
lods
inc
xchg
push
jns
sub
out
test
lahf
push
xchg
fsubl
fcompl
ret
daa
xor
sbb
mov
and
scas
pop
cmp
jne
xchg
in
mov
push
jbe
push
rcl
mov
popa
inc
inc
ret
cmpsb
pop
cs
and
cs
notl
xchg
jp
mov
repz
push
pop
dec
and
cmpsl
aas
addl
enter
dec
shlb
cmp
mov
outsl
popa
arpl
mov
add
cltd
mov
cmc
dec
mov
frstor
hlt
and
xchg
sbb
mov
adc
les
mov
push
pop
lcall
ds
gs
in
xchg
jns
xchg
jno
xor
int
adc
cmpl
in
loope
xchg
popa
repnz
movsl
rcrl
xor
lods
push
mov
xor
icebp
jne
xchg
add
and
popa
aas
rolb
test
pop
xchg
cwtl
aas
push
ficomps
or
data16
verr
push
daa
adc
sbb
fisubs
adc
sbb
xlat
mov
lahf
lock
jge
lods
pop
orl
jl
subl
jl
lods
mov
mov
xchg
mov
inc
sbb
pushf
xchg
dec
rol
aam
or
ret
iret
daa
jbe
mov
sub
popf
lds
cwtl
popf
sub
xchg
test
push
test
test
xchg
mov
push
cmpsb
jp
cmc
fnstsw
or
loopne
pop
or
in
xor
cmc
push
mov
repz
add
shl
cmpsb
daa
mov
gs
pop
lcall
fimull
cmp
daa
mov
ljmp
xor
mov
lods
add
jns
repz
fidivl
or
stc
or
xchg
push
cld
xor
fldenv
mov
es
popf
cmp
imul
repz
cwtl
fadd
jmp
or
cs
sbb
push
mov
imul
mov
inc
test
outsb
inc
inc
ret
repnz
pop
lock
cmpsb
in
stos
pop
in
rorl
pusha
call
mov
xchg
mov
mov
xchg
or
push
push
pop
in
fidivrl
in
testb
xor
stos
dec
fisubl
in
xchg
sarl
sub
inc
xchg
mov
aas
cmp
jno
out
xchg
fwait
push
or
jp
loop
popa
fimull
and
fimull
or
jnp
or
jnp
push
pop
mov
lahf
xor
shlb
les
sbb
adc
and
pop
xor
cmc
inc
mov
jno
subb
fisubl
jno
add
pop
pop
push
mov
add
cmp
or
cmpsl
adc
bound
xchg
outsb
adc
mov
push
out
lcall
add
inc
jecxz
mov
jbe
sbb
in
lcall
xlat
icebp
fiaddl
sarb
aam
pop
or
fstpt
test
mov
add
mov
test
mov
movsl
inc
xor
rcrl
test
push
jl
test
mov
push
subb
sbb
mov
mov
bound
jge
pop
inc
sbb
cmc
popf
in
rclb
in
fwait
jge
jmp
sub
and
popa
jl
cs
mov
inc
movsb
pop
fisttps
movsl
inc
rcrb
cltd
push
push
push
jle
insl
bound
outsb
jo
fsubrl
push
xor
jbe
add
push
adc
out
cmp
xchg
in
inc
sub
ret
dec
fistpll
sti
inc
ret
inc
jnp
gs
add
dec
xchg
test
lcall
retw
adc
push
ret
cmp
mov
sub
push
inc
push
arpl
and
mov
dec
call
aam
bound
mov
cmp
dec
aam
pop
dec
mov
or
pop
fnstcw
adc
jmp
fstl
pop
push
and
repz
pop
mov
cmpsb
xchg
or
insl
stc
es
cmc
inc
icebp
insl
cmc
out
xor
ficoml
jl
cs
inc
add
imul
sub
mov
mov
fildl
je
aam
xor
mov
js
adc
adc
push
ret
adc
pop
add
fcmovbe
dec
jl
cs
inc
idivl
sub
push
negl
push
push
xlat
mov
aas
push
push
mov
scas
inc
pop
push
mov
pop
pop
lods
adc
xchg
in
xchg
pop
mov
in
mov
cmpsb
pop
xchg
in
jo
test
xor
or
cwtl
out
inc
jmp
push
mov
jb
xchg
push
dec
pop
xchg
out
aas
mov
mov
ds
aas
pop
jmp
push
mov
test
pop
mov
jb
xchg
push
dec
pop
mov
mov
mov
ds
pop
shr
pop
mov
sbb
inc
pop
adc
inc
sub
adc
inc
dec
inc
sarb
in
addr16
lods
lret
inc
cmc
push
lahf
mov
add
pop
cmc
faddl
jno
jbe
fs
das
movsb
loope
fisubl
sbb
aas
fbld
sub
inc
aas
xor
fdivs
mov
stc
and
scas
lods
enter
jp
jb
or
adc
xchg
mov
add
mov
ret
popf
sbb
jns
repnz
out
out
lcall
fmuls
mov
mov
push
mov
in
out
cwtl
inc
test
sbb
jmp
popf
jle
out
pop
movsl
cmp
outsl
and
les
and
enter
data16
hlt
jge
xchg
loope
add
adc
dec
outsb
sub
fidivl
in
movsb
insb
sbb
adc
lds
cmpsb
jo
repz
mov
xor
mov
inc
aas
lods
jb
mov
cltd
loope
inc
xor
lock
cmpsb
inc
loopne
mov
mov
nop
and
scas
rep
mov
repz
mov
inc
jmp
xchg
cmp
dec
daa
stc
ficoms
pop
dec
jp
and
bound
test
inc
push
add
add
in
push
popa
lock
scas
lcall
test
and
scas
mov
ud0
out
mov
sbb
sbbb
jae
cmp
aas
dec
inc
and
cmpsb
cli
push
fistpl
xor
push
test
popf
xchg
imul
rorb
cltd
in
sti
aam
inc
mov
mov
jb
inc
popf
in
add
adc
sbb
rcll
add
mov
inc
or
or
and
dec
les
sbb
addb
or
inc
mov
dec
outsb
xor
inc
xchg
jno
loope
jg
lea
pop
lcall
mov
test
jnp
hlt
ficomps
and
add
sub
push
xor
dec
jbe
xor
fwait
mov
roll
jne
stos
jo
xchg
adc
flds
dec
fldcw
inc
sub
fidivl
bound
stos
aam
lds
mov
sbb
cmpsl
fisubrl
in
xor
xchg
mov
ret
repnz
shll
push
fimull
bound
scas
les
call
scas
xor
mov
mov
icebp
mov
inc
inc
in
es
in
mov
mov
add
inc
mov
nopl
dec
popf
cs
lea
pop
hlt
mov
fistpl
mov
mov
arpl
mov
sub
cmp
aam
push
repnz
call
mov
repnz
sub
mov
push
add
xchg
push
mov
push
ljmp
dec
mov
sbb
sub
sbb
in
push
push
test
sub
xchg
jo
inc
mov
sbb
mov
xchg
fmuls
nop
cmp
fidivl
add
fwait
icebp
outsl
mov
ja
xlat
sub
cmp
mov
fldt
fimull
sbb
mov
add
ret
sub
adc
mul
aaa
xor
jmp
xor
jg
gs
mov
mov
push
sbb
xchg
js
jl,pt
leave
inc
stc
dec
mov
and
sub
aaa
sub
iret
mov
cvtpi2ps
in
test
ret
xor
xchg
and
jnp
xchg
mov
push
adc
add
mov
mov
cmpsb
push
idiv
xchg
outsl
in
insl
out
jbe
push
cmp
add
inc
out
mov
mov
xchg
jbe
cmc
mov
aam
jge
pop
jecxz
mov
fisttpl
frstor
mov
lret
jmp
sub
add
out
sub
andb
add
imul
mov
adc
subb
aam
xor
sbb
lahf
ret
outsl
lahf
sub
xor
test
mov
insb
adc
insb
adc
dec
inc
daa
lahf
and
xchg
or
loopne
sbb
test
clc
jo
adc
pop
lea
jp
lds
orb
fcomp
sub
repz
test
ljmp
push
callw
nop
xchg
popa
call
loop
test
jns
and
add
stos
movsl
jmp
cmc
dec
movsl
cmp
bound
pop
cmp
jno
mov
pop
pop
add
dec
in
aad
mov
dec
push
mov
fwait
ljmp
popf
out
mov
adc
mov
cmpsl
loope
adc
lcall
sbb
arpl
and
sbb
add
mov
sub
sub
sbb
jmp
xchg
xchg
aad
xchg
scas
addb
cmp
mov
filds
addr16
sbb
jne
test
dec
shr
pusha
popf
iret
push
mov
test
std
pop
in
iret
mov
cmpsl
repnz
add
cmp
loopne
in
inc
mov
sbb
mov
cs
cmp
or
push
xlat
in
cmpsl
stos
pusha
mov
cmpsl
inc
or
arpl
push
in
lds
out
lods
daa
insb
push
xor
inc
into
lods
jmp
sbb
inc
push
rcrl
xchg
lods
mov
mov
andb
mov
ljmp
lret
dec
lret
sbbl
push
pop
xor
cs
jb,pt
mov
inc
in
adc
dec
inc
test
mov
test
cli
call
add
stos
add
stos
or
stos
flds
es
add
inc
mov
out
mov
nop
jle
inc
iret
stos
cmp
test
push
stc
aas
jmp
mov
and
clc
add
lcall
jp
jb
data16
mov
movsb
out
jmp
pop
lock
xchg
in
pop
and
movsl
dec
pop
sub
fisubl
sbbl
mov
xchg
repz
push
les
cmc
ficompl
sbb
add
negl
mov
jecxz
dec
push
push
sbb
fcmove
pop
pop
cmp
mov
xlat
inc
adc
movsl
ljmp
mov
jb
shl
or
cwtl
pop
ljmp
push
ljmp
push
xchg
xor
inc
push
fidivrl
jecxz
xchg
stos
in
stc
out
add
jmp
lea
int3
cli
rorl
inc
hlt
xchg
jmp
xchg
xchg
xchg
xchg
into
xor
cmp
lahf
xor
adc
inc
push
xchg
in
or
stos
xorl
dec
push
fistl
sti
adcb
sbb
scas
xor
xchg
add
rcl
jmp
aam
adc
inc
inc
sub
popf
test
pop
loopne
icebp
push
pop
cltd
jge
imul
imul
out
lret
sub
add
es
ret
xchg
push
fimull
sub
outsl
xchg
push
lock
cltd
lcall
inc
adc
in
notb
jnp
xchg
aam
jmp
sarb
cld
in
sub
mov
or
add
dec
pop
pop
push
pop
and
mov
iret
cmc
ljmp
sub
push
in
xchg
fwait
pop
imul
mov
jp
sub
popa
cli
cs
or
ret
in
adc
pop
xchg
in
int
pop
jle
mov
sub
xor
orl
cmp
cli
jno
inc
xchg
mov
outsl
out
and
fcoms
icebp
adc
cmpl
lds
adc
into
sub
xor
or
popf
push
pop
cmp
bound
jg
and
jg
in
jge
mov
cmp
out
lahf
xor
mov
into
jnp
sbb
mov
adc
fldl2e
jp
movb
dec
add
in
adc
xor
jno
jge
cmp
cmpsb
in
cld
dec
sti
out
es
pusha
cmpb
fwait
sbbl
pop
jmp
insl
jno
lret
fwait
andl
hlt
sbbl
mov
xchg
mov
lret
lea
aas
loop
inc
push
sbbl
data16
fistps
pushl
test
insb
cltd
es
and
mov
outsl
loop
cmpsb
call
mov
sbb
push
sub
cwtl
in
fwait
mov
mov
jmp
push
pop
int
jmp
out
sbb
xchg
xchg
sub
rolb
sbb
insl
mov
xor
popf
popa
inc
pop
out
sub
jae
xor
repnz
incb
sub
jecxz
js
bound
xchg
add
cli
arpl
or
adc
push
pop
out
xor
pop
incl
mov
jbe
mov
push
popa
ja
xchg
in
clc
lea
pop
pushf
cmpb
add
out
add
jle
mov
inc
les
jmp
ds
adc
sbb
out
mov
ljmp
nop
mov
ret
xor
rorb
stc
dec
sbb
das
mov
sti
ja
add
mulb
and
mov
bound
filds
daa
sti
mov
jl
pop
sub
pushf
icebp
into
movsb
cmp
insb
mov
lock
cwtl
and
icebp
or
jb
jne
dec
dec
repz
mov
mov
fstpl
out
push
add
xor
adc
pop
pop
push
lea
and
mov
ret
and
sti
mov
adc
xchg
repz
lea
sbb
out
mov
dec
sub
lds
pop
inc
add
push
insb
mov
into
adc
fcmovb
out
pop
lea
cmc
add
aam
movsl
inc
cmc
cmpsb
mov
js
nop
icebp
icebp
test
add
cmp
adc
inc
daa
addl
fidivl
pop
xor
loopne
dec
mov
nop
fs
lock
cs
push
repz
addr16
ror
out
out
xchg
xchg
pop
repz
sbb
js
aaa
adcl
jb
ljmp
lret
xorl
sti
int
sbb
jno
mov
push
repnz
int
sbb
xchg
xor
lcall
ds
or
pslld
pop
cld
fiadds
stc
mov
dec
popf
inc
and
stc
inc
mov
or
in
jle
icebp
sbb
cld
or
test
push
aam
cltd
inc
sub
sti
nop
sub
xchg
adc
fistl
es
jecxz
leave
push
fbstp
and
jmp
stos
sbb
movb
aas
push
jns
or
mov
stos
idivl
cltd
shll
fldenv
inc
mov
pop
inc
std
mov
pushl
out
les
fdivrp
mov
push
cld
sbb
movsl
sbb
mov
pop
sub
rcrb
fadds
outsb
fs
lods
into
jg
jmp
xchg
ljmp
popa
mov
es
fistpl
mov
repz
sti
ret
pop
ljmp
and
popa
sti
inc
adc
xor
and
and
xor
lock
movsl
fidivrl
pop
push
lcall
jp
inc
mov
xchg
loope
xor
divb
lret
loopne
les
inc
mov
dec
loope
adc
inc
loope
cmp
ljmp
ja
xchg
pop
sub
mov
lcall
in
push
dec
sbb
rclb
fistpl
lods
sbb
fisttpl
ret
mov
scas
daa
xor
imul
and
push
les
add
mov
jno
mov
lods
push
popf
jb
fdivrp
dec
jb
xor
mov
in
dec
int3
mov
jb
mov
push
das
mov
jb
mov
scas
lret
daa
mov
add
mov
in
fidivl
sub
jp
jbe
jecxz
jp
sahf
ljmp
cwtl
cmp
sbb
out
int
jmp
pop
pop
mov
xchg
jmp
rorb
cld
xor
adc
push
cmpsb
aad
aad
jnp
and
add
jp
lea
negb
mov
mov
imul
cmp
jmp
sub
sub
sahf
aad
sbb
jnp
shlb
push
les
pusha
push
adc
sbb
daa
movsb
pop
aam
rcrb
jecxz
mov
push
sbb
mov
pop
ja
jl
or
or
dec
sub
mov
rcrl
jbe
xor
out
hlt
xor
outsb
scas
inc
addr16
fisubrs
loope
mov
xchg
or
add
es
cmp
and
add
repz
sbb
sub
cmp
int3
xor
stc
fs
les
in
cmp
sbb
push
imul
daa
adc
pop
cs
daa
into
mov
in
jmp
cmp
mov
outsl
or
xor
out
popf
mov
sub
repnz
push
inc
pop
out
xor
xchg
cmp
mov
inc
loopne
and
clc
jmp
and
mov
push
outsl
test
in
jno
pop
sub
jge
and
ret
and
mov
shll
ret
xchg
push
sti
adc
fmuls
mov
inc
sub
adc
std
sub
dec
xor
sub
gs
xor
cmp
add
scas
into
xchg
push
xchg
mull
adc
jmp
xor
scas
in
icebp
sbb
fistl
sub
sti
pushf
inc
iret
ficoml
jl
iret
pop
adc
mov
iret
add
cmp
inc
loope
adc
mov
adc
push
sbb
mov
mov
ret
add
div
jno
sub
psubw
sti
cmp
jae
add
enter
sub
lods
pop
fisttpl
inc
xor
adc
les
es
nop
sub
subl
cltd
dec
arpl
mov
sub
mov
xor
xor
icebp
jno
sub
fnstenv
sub
lock
lods
fnstcw
gs
xor
arpl
test
pop
mov
out
mov
int3
outsl
sbb
inc
decl
out
fldlg2
adc
lock
adc
ds
cmpl
add
jle
insl
jp
mov
pop
je
movsb
dec
mov
xchg
cmpsb
loope
mov
inc
xlat
pop
arpl
mov
and
into
push
fucomp
lods
outsb
fnsave
push
add
xchg
out
andb
leave
repz
das
stos
aaa
jbe
ja
cmp
add
jl
sbb
add
mov
movsb
movsb
adc
fstpl
push
cmp
adc
push
push
xor
xchg
xchg
push
fwait
adc
fisttpll
daa
nop
test
rol
mov
mov
movsb
pusha
adc
mov
dec
adc
adc
dec
sub
adc
adc
int
cmp
ret
cltd
in
ja
test
vphaddbd
xor
xor
mov
fstpt
pop
xor
push
imul
leave
sub
rcll
ficompl
push
and
dec
cmp
lahf
out
std
shr
sub
jmp
inc
dec
ret
push
cltd
out
dec
dec
mov
jmp
jb
lret
stos
enter
scas
data16
pop
or
test
enter
sub
sarl
jmp
addl
bound
xchg
jno
rcl
inc
mov
dec
add
mov
test
push
sbb
ljmp
inc
cltd
mov
pop
add
adc
inc
int
sbb
lods
add
fnstcw
vcvtps2dq
ret
xchg
jmp
lds
and
ljmp
cwtl
xor
jl
cmpsl
xchg
rsm
fwait
sub
sub
xchg
out
rcrb
movsl
and
sub
kmovd
lcall
ret
and
iret
pop
add
add
lcall
ret
jl
sti
cld
jns
push
push
jmp
cs
dec
sub
popa
xor
cmp
divb
sub
jb
cmp
sub
push
mov
pushw
cld
mov
and
sbb
sub
push
mov
movsb
or
dec
sbb
adc
pop
leave
imull
sbb
mov
cmp
or
adc
push
les
loope
or
leave
xchg
xchg
insl
cmp
xor
push
push
in
mov
lea
leave
pop
mov
fsubrp
adc
mov
lea
ss
mov
mov
daa
inc
sbb
xchg
mov
shl
jno
sbb
inc
or
into
xchg
lea
lret
sbb
fs
ljmp
mov
adc
or
repz
fs
sbb
mov
jno
std
xchg
dec
repnz
loopne
jl
push
pop
inc
rcll
lea
outsl
loope
imul
sbb
pushaw
fmull
dec
push
pop
mov
cmpsl
dec
and
push
inc
xchg
shrb
mov
sbb
movl
push
aas
sub
add
pop
in
dec
mov
mov
xor
roll
ficompl
cmp
add
iret
jmp
pop
sub
shll
arpl
sub
jno
scas
fnstenv
mov
or
lods
xchg
and
fldl
mov
fldpi
insb
les
lea
lock
xor
test
jno
xor
fstpt
std
jp
sub
in
sbb
arpl
mov
inc
int3
and
inc
lds
jo
ljmp
scas
lds
cld
fcoms
enter
push
ja
icebp
popa
mov
pop
xor
mov
inc
leave
adc
and
mov
in
pop
cmp
xor
xlat
sbb
ret
dec
mov
push
jecxz
mov
xor
inc
or
mov
movl
data16
insl
xor
inc
cmp
dec
ljmp
sbbl
jmp
bound
ljmp
cli
lds
pop
adc
push
mov
lea
psubd
mov
leave
push
fildll
dec
jmp
aam
xchg
std
bound
out
lock
insb
aad
jno
add
mov
jmp
mov
fdivs
and
out
add
pop
pop
shll
sbb
rcrl
add
jnp
andl
in
outsl
jne
outsl
inc
fadds
push
clc
jecxz
and
jmp
sbb
orl
xchg
je
cmp
sti
fcmovu
add
or
and
pop
jno
dec
add
shlb
jmp
lods
and
mov
sub
or
out
test
mov
je
mull
ret
jnp
xchg
andl
ret
aad
jg
in
pop
dec
jl
addr16
into
ret
and
and
imul
je
mov
aam
xchg
cmpsl
shrl
dec
inc
sub
cmp
and
xor
inc
test
dec
bound
push
cmp
push
into
call
das
dec
aam
xor
sub
sub
cld
mov
ds
pushf
fimull
sbb
pop
shrb
and
das
mov
mov
dec
dec
out
les
xor
roll
mull
pop
pop
fldl
das
xchg
mov
add
ds
sbb
dec
iret
pop
xadd
iret
lret
sbb
mov
jnp
pop
mov
xlat
push
fstl
repz
mov
jmp
dec
mov
or
aam
mov
pop
sarl
int
or
out
dec
repz
loop
int
fnsave
inc
repz
sbb
cmovg
mov
aas
ds
sbb
hlt
and
repz
fmul
mov
pop
aam
outsl
push
add
sbb
dec
repz
inc
jg
mov
test
adc
popa
imul
insl
pop
jno
ret
mov
outsb
mov
dec
jecxz
call
mov
push
xchg
lea
dec
xchg
imul
push
jmp
movsb
lods
fstpl
ret
jl
pop
jge
and
fcmovne
shll
rorb
arpl
jp
push
ror
dec
lret
push
int3
push
xor
lret
in
xchg
add
in
sbb
aad
jge
in
pusha
xlat
pop
int3
jns
sub
jmp
jbe
sbb
push
push
ficomps
ds
pop
dec
push
jne
and
ret
test
dec
pop
orl
jle
fstpl
sbb
ror
data16
leave
shl
inc
push
mov
xchg
fbstp
movsl
sbb
repz
jb
cmc
rorl
mov
sub
das
lods
shl
and
cmpsl
outsl
dec
cltd
ds
mov
repz
lds
inc
mov
sbb
scas
cld
test
adc
push
xor
nop
lea
push
jmp
imul
data16
push
loope
inc
or
int
ret
inc
mov
jns
xchg
insb
sub
scas
out
xor
xor
fst
mov
mov
sub
push
xor
jecxz
outsl
inc
jo
mov
ss
mov
sub
les
in
cmp
inc
push
push
addr16
jg
addr16
inc
mov
stc
enter
sti
stos
addr16
rcrb
fwait
mov
xchg
das
mov
mov
push
cmp
ret
fwait
cltd
pop
loop
leave
sub
mov
xor
mov
popf
inc
jle
arpl
gs
movsb
xchg
ret
cmpsl
fsubrl
int3
sbb
adc
lcall
xchg
add
jmp
and
jp
dec
mov
out
mov
pop
aas
mov
dec
pop
pop
mov
sbbl
mov
mov
xchg
sarl
mov
sub
sbb
inc
cld
fildll
ljmp
fsubs
lods
arpl
sbbl
stc
leave
pop
ror
mov
mov
jcxz
jne
jns
dec
mov
add
bound
or
sbb
add
roll
call
jbe
dec
outsb
shrl
sbbl
sti
and
sub
and
lahf
ficompl
test
inc
leave
sbb
lods
int
lock
fwait
stc
dec
ret
inc
mov
call
aad
lret
neg
inc
inc
sti
movsl
fsubrs
pop
addr16
cs
sub
js
push
jnp
fnsave
add
xorl
faddl
mov
loop
lret
jnp
or
mov
mov
icebp
cmp
roll
dec
mov
dec
in
mov
stos
imul
repz
stos
pop
fldt
fstpt
int3
lret
daa
rol
xlat
aaa
and
mov
fcmovu
stos
add
mov
pop
clc
cmp
jle
shll
cmpsb
imul
sbb
fimuls
inc
ja
les
mov
int
pop
mov
aam
stos
out
fwait
js
out
shll
icebp
int3
push
lcall
in
mov
push
in
inc
filds
scas
filds
mov
mov
mov
fnstsw
sbb
inc
xor
test
stos
add
xor
repz
incb
aas
fstpt
dec
inc
xor
fucomi
and
xchg
stc
je
je
dec
jecxz
push
jecxz
pop
rcrl
adc
jmp
out
cs
mov
and
fwait
jo
mov
pop
inc
ret
jo
mov
sbb
dec
je
sbb
leave
repz
js
sub
aad
out
jne
in
adcl
dec
jo
jl
mov
fnstsw
pop
cmp
outsl
fdivrl
fnsave
fucomip
pop
push
and
cltd
data16
push
sahf
mov
leave
pop
ret
mov
pop
std
jae
arpl
faddl
mov
mov
dec
ret
push
dec
jnp
add
jns
xchg
popa
imul
jecxz
or
sub
mov
and
fistpl
pop
daa
pushf
cmpsl
dec
cmpsl
jmp
call
or
sti
cld
and
cli
jae
rclb
sub
push
repnz
popa
dec
push
repz
iret
outsl
fisubrl
jecxz
cmp
dec
mov
xchg
and
stc
mov
jg
mov
inc
jmp
out
pop
testb
mov
shll
outsl
ds
mov
out
in
test
add
fwait
and
lcall
mov
shr
aam
jne
jae
or
push
out
fucomp
sbb
mov
fiaddl
inc
test
aad
mov
mov
pop
mov
test
jmp
arpl
cmp
sarl
add
sbb
fisttpl
lret
sti
stos
andl
xlat
fldt
xchg
xchg
shll
rcr
xor
aad
loop
jg
test
incl
lahf
dec
xorl
roll
sub
int
lea
mov
int
jecxz
pop
xor
and
je
xor
in
data16
mov
stos
xorb
mov
jmp
inc
pop
test
ss
das
jecxz
cmp
rcll
iret
jnp
dec
dec
mov
sbb
mov
dec
ss
aad
icebp
pop
rcrb
lods
mov
mov
das
mov
arpl
add
inc
xlat
in
popf
or
ficompl
icebp
cmp
popf
lock
cmpsl
mov
pop
out
jmp
cmp
ss
cmc
les
sbb
push
push
stc
enter
inc
cltd
push
repz
xchg
jmp
mov
dec
lahf
outsb
stc
int
mov
pop
sbb
sub
mov
xchg
mov
fiaddl
pop
jmp
repnz
mov
scas
arpl
jp
shrl
push
imul
jbe
push
xchg
ftst
lret
fdiv
inc
mov
ret
jecxz
jbe
push
or
test
cmp
shll
adc
iret
mov
add
in
fcoms
push
fsub
jmp
imul
xchg
imulb
sub
mov
sti
sbb
xchg
les
cmp
arpl
jp
sbb
lods
call
fcmovnu
and
mov
mov
adc
push
rcll
pop
mov
cltd
pop
insl
ljmp
enter
roll
inc
pushf
jo
leave
je
fs
jbe
fmull
dec
and
out
ret
fistps
leave
dec
mov
inc
sti
imull
dec
mov
movsb
fwait
xlat
mov
loop
sub
ffree
sbb
add
cli
or
fwait
dec
adc
push
add
popa
pop
fildl
test
xchg
std
mov
fcompl
jge
mov
add
push
inc
insl
fisttpl
mov
jmp
or
leave
add
xchg
cli
test
fists
jns
mov
daa
mov
jecxz
addr16
lret
mov
add
sub
jo
or
cmpl
outsb
xchg
or
cmp
xor
fstpt
out
mov
nop
sti
aas
xor
mov
and
sbb
arpl
xor
jp
fistps
mov
pop
mov
dec
lods
mov
mov
fsubrs
add
or
push
cmpsl
loopne
jno
xchg
jns
mov
out
mov
mov
adc
pop
stos
inc
jo
push
int
imul
jmp
pushf
repz
push
jl
mov
sahf
es
adc
cwtl
push
roll
std
repz
cmpsl
jmp
sbb
cmp
adc
shrb
int
decb
xor
xchg
xchg
cmp
jl
pop
adc
test
ds
je
inc
jmp
jle
fcmovnbe
imul
out
mov
shll
dec
push
xor
inc
ljmp
and
decb
in
ficoml
lcall
jg
test
aad
or
leave
sbb
inc
pop
mov
ds
out
aad
mov
xchg
ljmp
inc
adc
loope
dec
js
mov
stos
out
shll
bound
stos
subl
jae
shll
sti
ret
xlat
das
aad
adc
movsl
mov
sub
dec
std
sbb
sti
fstpl
jnp
leave
dec
lods
mov
ret
and
jmp
mov
push
add
fildl
dec
into
inc
xor
fisttpll
subl
push
mov
leave
mov
pusha
fnsave
stos
sbb
push
push
sbb
and
xchg
or
lsl
lcall
je
dec
push
cmp
inc
pop
xor
pop
je
xlat
mov
subb
xor
jl
pop
repz
das
dec
sbb
scas
mov
dec
aam
xchg
test
add
xor
out
ss
and
pop
cmp
leave
sbb
jecxz
adc
sbb
inc
xchg
jno
pop
xor
insl
pop
sti
adc
fadd
pop
sarb
test
outsl
xchg
out
test
mov
out
stos
mov
xor
mov
call
push
in
jmp
shl
inc
dec
in
jmp
fisubrl
call
enter
lret
pop
cltd
insb
jnp
pop
cmp
sbb
fmull
repnz
mov
fsubs
mov
aad
xor
dec
add
aam
pop
imulb
inc
sbb
pop
rcll
aam
lods
mov
gs
and
fwait
test
cmp
test
lea
sbb
pop
xchg
enter
leave
popa
imulb
stos
sub
test
cmpsl
stos
icebp
xor
sub
cmpsb
dec
int
loope
pop
cmp
cmpsb
iret
outsl
fistpll
sub
xlat
pushf
aam
cltd
xchg
push
xor
mov
ror
xor
add
push
pop
ret
push
cld
inc
cltd
dec
shl
pop
imul
or
cmp
and
dec
es
subb
fsubrs
pop
insl
jmp
sbb
cltd
push
inc
scas
out
sub
jns
pop
leave
xor
lret
or
xchg
flds
popf
jne
ret
xchg
and
mov
pop
inc
jbe
shrb
loope
aam
lcall
push
pop
and
call
aam
fistpl
inc
aaa
fimuls
fmull
dec
cmpsl
push
jno
jo
cmp
mov
inc
mov
and
movsl
rorb
fst
les
fstl
or
pop
jle
sub
in
sbbl
jle
mov
in
fldenv
shll
in
jg
xlat
ljmp
push
pop
xlat
or
mov
inc
rep
and
mov
int
stc
mov
pop
mov
add
stc
push
dec
test
and
aad
xor
fsub
sbb
mov
xchg
dec
jp
out
pop
fdivs
add
xor
scas
jo
adc
pop
jp
icebp
imul
cmp
lods
dec
imul
xor
dec
mov
jae
call
cltd
pusha
or
addr16
sbb
add
ret
push
and
lahf
sti
fisttpll
xlat
or
jg
dec
repz
ret
add
dec
mov
jge
mov
iret
push
push
mov
jnp
sti
ljmp
jecxz
and
sbb
cmpl
push
sbb
dec
pop
cmp
jnp
cltd
dec
fbld
or
sti
outsl
inc
pop
int
mov
insl
mov
inc
xchg
dec
jmp
in
vxorpd
mov
ja
jbe
dec
std
push
in
dec
mov
add
pop
inc
call
repz
cltd
dec
inc
ret
mov
push
jge
imul
js
scas
adcb
je
mov
iret
mov
fadds
data16
scas
leave
jp
cmp
push
mov
fisttpl
xor
ljmp
ret
mov
mov
xor
fdivrl
sbb
push
lahf
mov
push
repz
add
or
pop
dec
lret
sbb
and
call
mov
daa
dec
lods
adc
aas
jecxz
sub
add
add
push
enter
data16
mov
lret
bound
sbb
inc
std
inc
popa
aas
daa
sbb
jecxz
cltd
inc
leave
dec
in
mov
cmpsb
xchg
xchg
iret
shll
mov
mov
jae
xor
cwtl
test
test
leave
pop
xchg
repz
in
int
mov
mov
arpl
clc
xchg
ret
jnp
cltd
pop
dec
jne
test
out
dec
dec
fisttpll
sbb
imul
pop
stc
jno
ljmp
or
pop
js
shll
sbb
loope
adc
ret
scas
out
push
pop
int3
mov
js
pop
sahf
xchg
mov
stos
or
dec
aam
call
pusha
leave
cmpsl
xchg
jnp
stos
mov
in
dec
jae
ljmp
pop
mov
sub
pop
and
jns
xchg
sub
dec
fiadds
imul
rolb
mov
cmp
and
cli
xchg
push
jmpw
pop
loop
jns
jecxz
jb
jmp
loope
aas
shl
jae
js
fsubs
push
lret
bound
mov
dec
xchg
dec
adc
mov
call
adc
mov
jmp
cmpl
push
fdivrl
inc
ss
in
sbbl
scas
sub
sbb
jns
jl
push
mov
jmp
outsb
fadds
jmp
enter
shll
pop
lret
aas
or
xchg
and
mov
mov
pop
repz
aad
push
imul
lahf
enter
pop
stc
jns
hlt
sbbb
test
and
fsubr
lret
arpl
cld
lret
mov
xor
xor
inc
aaa
mov
mov
pop
mov
cld
ffree
push
add
int
in
in
inc
sub
hlt
int3
es
or
or
inc
fiaddl
out
out
roll
mov
jmp
loop
shl
aam
mov
ficoml
mov
sbb
mull
add
imul
aad
jns
fcoml
and
dec
pop
ret
dec
fsub
pop
sub
mov
mov
dec
and
sub
scas
mov
rcrb
mov
fnstcw
pop
int
cltd
or
mov
jmp
cmp
aam
mov
insl
sbb
clc
adc
pop
mov
add
cltd
mov
inc
lock
ljmp
lock
jno
jecxz
jecxz
sub
in
into
test
imul
adcl
jecxz
fsubrl
imul
push
jo
outsb
xchg
mov
mov
dec
sbb
addb
xor
pushl
fldpi
aas
iret
cmp
xchg
sbb
or
dec
pop
cltd
ds
cld
ret
xor
inc
dec
cmp
in
inc
stos
les
fcomi
cli
pop
mov
jno
mov
mov
rcrl
ret
daa
sti
test
fldt
mov
out
enter
add
rcll
in
and
inc
negl
inc
jbe
cmp
xchg
in
dec
xchg
mov
imul
mov
ljmp
cmc
insl
sub
fucomip
aad
sub
imul
shl
push
clc
sti
sub
jmp
sub
enter
push
nop
in
mov
and
inc
push
scas
inc
in
xor
bound
int
ret
mov
dec
sbb
dec
push
pop
sbb
clc
fxch
cmp
shll
inc
out
std
das
sbb
jmp
and
loop
push
cwtl
popf
fs
aas
aas
jecxz
fwait
aam
int
insb
pop
aad
dec
xchg
aas
mov
movsb
jge
pop
movsl
or
fdivrl
or
xor
jge
mov
loope
addr16
xor
cltd
or
test
test
dec
fildl
arpl
enter
lret
jl
aam
or
add
sbb
in
ja
mov
xchg
push
jecxz
insl
and
mov
ret
addb
and
xlat
dec
sbb
lods
mov
cmp
cmp
movsl
inc
cmp
test
inc
add
jl
fildl
scas
test
cmpsb
mov
sbb
aad
into
in
test
rorb
dec
sbb
add
push
sub
xor
adc
adc
cmp
negl
aas
adc
cltd
imul
mov
mov
cld
cmp
add
pop
nop
cmp
insl
and
xchg
fidivl
jne
and
loopne
push
pop
bound
jmp
add
mov
stc
pop
test
mov
or
int3
mov
imul
cwtl
adc
out
jne
notb
ret
into
xor
push
mov
add
clc
push
jl
pop
mov
dec
cltd
sbbl
scas
out
xlat
push
adc
les
fs
mov
outsl
jne
add
inc
cltd
inc
mov
outsb
and
inc
movsl
and
xchg
push
dec
stos
and
lods
leave
inc
fwait
mov
cmpsl
xchg
and
jae
leave
mov
xor
fs
fistps
sub
mov
jecxz
jmp
mov
xchg
ljmp
aam
scas
adc
mov
leave
xor
and
or
roll
cmp
xor
sbb
jmp
insl
sbb
imul
pop
fdivrl
mov
mov
pusha
mov
sbb
es
lea
imul
jg
jmp
hlt
cltd
fdivrl
cmp
dec
pop
sbb
imul
leave
xor
in
mov
les
or
inc
leave
es
inc
call
movb
cmpsb
les
dec
xlat
outsb
fildl
xor
jecxz
imul
lods
ret
not
lds
pushf
cmp
mov
add
mov
adc
iret
out
add
mov
xor
sbb
sbb
in
lds
sub
mov
sti
in
mov
pushf
lods
or
lcall
js
sub
loopne
xchg
sub
push
sbb
sbb
inc
jecxz
xor
fldl2t
inc
push
mov
and
mov
xorl
mov
das
jbe
dec
aad
loope
stc
test
push
jl
popa
jno
clc
out
out
lahf
mov
and
iret
adcb
sub
sbb
pushf
dec
pop
popa
aaa
fcomi
rcr
inc
and
add
jns
ds
push
pusha
js
hlt
sbb
inc
int
rcll
dec
push
jl
adc
cmpsl
les
mov
inc
negl
sbb
movsb
dec
adc
jb
das
jne
push
movsl
ret
int
mov
and
mov
dec
popa
pop
movsl
mov
push
sarl
cmpsl
loop
dec
and
push
add
dec
and
hlt
inc
add
mov
aam
ret
xchg
cmpl
cmp
sarl
gs
cld
push
rclb
xlat
int
ret
jle
mov
mov
fimull
lea
sbb
jne
sbb
inc
rorl
pop
xchg
outsl
xchg
pop
test
ret
pop
xor
jae
inc
pop
cmpsl
popa
in
jg
movb
sub
fdivrl
push
inc
mov
loopne
fbld
sbb
mov
gs
iret
mov
add
lcall
arpl
aaa
test
cltd
std
xchg
jg
or
loope
ficompl
imul
xchg
lea
arpl
mov
mov
icebp
xor
pop
sub
imul
mov
fidivl
sti
xor
shlb
popa
call
roll
sub
mov
mov
pushf
scas
jg
push
fmul
xlat
out
dec
mov
push
cmp
cmpsl
pcmpeqw
std
sbb
push
int3
jmp
popa
add
repnz
sbb
mov
icebp
and
lret
lds
mov
jmp
jg
mov
mov
pop
fs
in
out
mov
enter
clc
dec
frstor
jae
or
sbb
jmp
pusha
shl
mov
jmp
mov
inc
cmp
test
into
inc
mov
mov
sub
sub
aam
add
test
lods
roll
out
jmp
fcompl
dec
fisttps
hlt
jne
xlat
outsl
mov
or
addl
jg
scas
fbstp
xchg
out
popl
cmp
outsb
ds
dec
xor
jmp
jge
popa
add
lods
ja
and
out
pop
push
xlat
arpl
sbb
sti
aas
inc
lea
pop
xor
xchg
xor
mov
mov
lret
int3
dec
dec
fstps
imul
call
inc
inc
jmp
xchg
pop
in
insl
jnp
jmp
jge
hlt
ds
or
enter
and
pop
sbb
sub
mov
movsl
and
int
mov
lret
fcmovb
sub
dec
pop
ret
adc
std
xor
in
fistps
aad
popf
pop
stos
jecxz
pop
rep
les
or
jbe
pop
cmp
lods
fsub
loope
subl
popl
loop
jmp
mov
ror
addr16
xor
push
jmp
ret
leave
shlb
movnti
push
jmp
les
pop
sbb
or
shl
pop
sbb
inc
aas
mov
imul
xchg
cmp
test
dec
inc
cmp
imul
enter
jmp
jmp
push
fcomps
inc
fimull
lods
xchg
lret
pushf
inc
sbb
pusha
push
pop
es
stos
inc
popa
int3
out
inc
inc
sub
imul
lahf
aas
std
xchg
inc
repz
incb
cmp
repz
adc
popa
mov
mov
sbb
dec
outsl
cld
dec
mov
in
inc
pusha
inc
je
jp
test
add
or
and
xor
iret
repz
push
pop
mov
lret
leave
mov
aam
pop
fcmovu
ds
sub
xorl
push
rolb
in
popf
rol
int3
mov
loope
inc
rcr
lahf
sarl
pop
inc
testb
ljmp
lahf
imul
inc
aas
fldt
and
dec
cmc
pop
cmp
es
xchg
mov
lret
ds
dec
xchg
cltd
dec
inc
pop
int3
push
repz
ljmp
xchg
push
and
aad
in
movsl
xchg
cmp
cmp
out
fstps
or
dec
jecxz
insb
jns
xor
pushf
or
loope
jno
lds
sbb
mull
xor
les
mov
pop
aam
pop
stc
mov
xchg
movsl
fldt
inc
cmpsl
out
pop
cmp
addr16
xchg
inc
fisubs
loope
scas
pop
in
push
inc
cli
pop
push
roll
data16
push
test
addr16
push
jmp
mov
mov
rcl
int3
sbb
insl
andl
mov
popa
stos
pop
jecxz
lds
fcmovnu
mov
mov
fstpt
repz
iret
cmp
sahf
cli
adc
paddd
cmp
shlb
inc
pop
ret
jns
ret
lea
xor
daa
pop
jnp
add
inc
ficompl
int3
dec
xchg
in
mov
pop
sbb
dec
dec
out
repnz
mov
fmull
lea
mov
inc
jno
outsl
out
sub
repz
push
push
loope
jno
mov
out
push
inc
fdivr
mov
or
pop
mov
mov
ret
lea
inc
loop
sub
loop
dec
into
xchg
mov
shr
pop
inc
sub
mov
aam
test
pop
push
mov
orl
arpl
pop
cmp
dec
imul
adc
dec
arpl
imul
aas
ret
inc
mov
push
adc
lock
push
mov
test
les
push
xor
cli
ret
mov
lds
out
fwait
xchg
inc
or
movsb
addr16
aad
jb
mov
mov
out
push
mov
ret
adcl
or
sbb
fisubrl
test
sub
scas
sub
je
loopne
mov
mov
adc
mov
notb
sbb
int
mov
movsb
in
push
fdivl
push
loop
inc
lds
pushf
ficomps
out
jecxz
frstor
icebp
and
inc
mov
repz
xorb
xchg
fcomp
pop
les
dec
lods
hlt
out
jne
cmpl
or
sbb
test
mov
mov
xor
into
stos
jmp
in
and
pop
das
adc
out
inc
inc
jmp
xor
add
icebp
call
mov
inc
rep
icebp
sbb
ret
aad
fmulp
and
fcmovu
mov
sbb
xlat
int
aas
cmp
fld
mov
xchg
scas
inc
mov
adc
jmp
push
xor
dec
fcmovb
faddl
dec
cmc
push
sbb
movsb
push
inc
dec
fs
stos
push
xor
jmp
repz
std
push
int3
pop
jne
ss
inc
sub
mov
adcl
pop
lcall
mov
adc
mov
mov
mov
inc
addr16
mov
ds
mov
out
scas
dec
xor
fidivrs
sbb
addr16
xchg
dec
dec
or
cmc
pusha
test
arpl
inc
push
test
push
mov
mov
push
pop
dec
sbb
fisubrl
aam
push
flds
insl
aam
pop
cmp
rorl
gs
orb
pop
enter
scas
inc
pop
sub
test
or
int3
int3
fsubrp
pop
je
adc
mov
pop
mov
xor
xlat
int3
or
test
pop
and
add
adc
add
std
mov
lahf
and
xchg
adc
pop
aam
loope
icebp
or
lahf
roll
inc
ljmp
mov
lods
xchg
lock
out
add
fcomi
sub
xchg
jns
jne
cwtl
push
ljmp
imul
scas
mov
cmp
sarl
ret
push
sbb
movsb
loopne
test
in
or
xchg
add
cmp
dec
in
jmp
dec
jns
and
sarl
sbb
or
sbb
pop
in
inc
mov
inc
icebp
mov
loop
mov
test
out
loop
std
ja
dec
ret
dec
cwtl
xorl
mov
mov
dec
hlt
mov
lea
or
test
repz
cmpsb
inc
out
xchg
and
je
dec
cltd
insb
mov
add
dec
jae
push
fbstp
test
hlt
add
push
ret
add
xchg
int
and
push
or
testb
aam
hlt
ds
sub
jbe
jge
ja
adcl
lret
sbb
test
repz
das
mov
ret
lds
xchg
mov
ffree
fsubrl
jecxz
cmp
ds
sub
jbe
inc
mov
aam
dec
mov
loopne
xor
adc
shlb
mov
test
repz
jne
fs
pop
ret
add
mov
aad
scas
mov
xlat
mov
das
mov
pop
fmull
arpl
movsl
pop
sub
push
fstpt
out
sub
out
cmpsb
sahf
inc
mov
cld
std
xlat
leave
sbb
test
xlat
sbb
rcrb
pop
mov
sub
arpl
int
dec
in
imul
pop
mov
arpl
inc
jle
ljmp
mov
test
lods
stos
ret
mov
cmpsb
cld
xlat
rcrb
lds
imul
sbb
pop
leave
js
aam
pop
outsb
pop
jg
stos
jge,pt
sbb
and
xchg
mov
repz
sub
adc
mul
dec
fcom
mov
mov
les
lods
dec
test
stos
mov
push
into
lods
xchg
clc
adc
addr16
testl
mov
addl
push
mov
aad
lods
test
push
mov
sub
jne
ljmp
cmp
adc
jge
stos
ja
imul
fiaddl
fiadds
and
loop
imul
mov
into
loopne
outsl
icebp
rcrl
sub
and
dec
jle
sbb
push
xlat
cltd
int
insl
dec
andl
in
icebp
arpl
sbb
scas
inc
push
js
into
push
iret
and
fdivl
rcll
rorb
pop
push
ffree
mov
mov
push
mov
adc
rcr
into
adc
push
imul
int3
xor
cltd
ret
pushf
in
inc
jnp
and
out
cld
gs
out
out
stos
inc
cmp
loope
add
std
sbb
dec
pop
sbb
ljmp
jle
loope
push
lea
lods
xchg
andl
insl
rcrl
aam
dec
xlat
xchg
ficompl
in
pop
ljmp
test
xchg
inc
mov
in
insl
loop
lea
add
psubsb
sbb
loop
xlat
mov
sbb
cli
jns
ss
shl
sti
insl
xchg
sbb
add
and
loopne
inc
xor
ficoms
lahf
rcrl
xchg
xor
cli
fisttpll
dec
add
adc
scas
xchg
inc
call
loope
faddl
sub
data16
sbb
fnstsw
push
xor
les
or
test
in
push
sbb
sti
dec
and
ds
sbb
roll
adc
sbb
inc
mov
rcl
aas
inc
lahf
int
mov
mov
inc
jmp
pop
xor
push
mov
test
icebp
test
orl
test
add
mov
cmp
icebp
push
sub
push
inc
and
cmp
xor
dec
fcomp
out
mov
loope
sbb
jle
insb
pushf
cmp
enter
fwait
imul
pop
stos
flds
into
ljmp
test
sti
pusha
mov
push
add
std
sti
cltd
dec
aad
jno
push
mov
pushf
arpl
scas
imul
lock
pop
outsb
sub
arpl
adc
mov
push
addr16
out
std
test
sbb
and
adc
fistps
inc
mov
push
je
xorb
pop
cli
pusha
mov
jecxz
jecxz
ljmp
repz
mov
jae
mov
dec
xchg
mov
sub
dec
fmull
out
subl
and
dec
and
jb
cwtd
mov
dec
xor
aad
dec
shrl
jle
scas
mov
dec
cmp
add
fisubrl
in
stc
out
and
popf
and
in
inc
repz
fistps
or
repnz
xchg
outsl
push
xor
flds
and
pop
pushf
insb
lret
mov
in
out
mov
out
pop
xchg
dec
lods
stos
jmp
loope
cmp
mov
addr16
leave
test
imul
inc
adc
lea
add
ds
cmp
pop
iret
repz
pop
test
js
mov
jmp
mov
sahf
dec
jge
xchg
mov
mov
pop
hlt
push
jmp
shll
jmp
xor
jae
jmp
and
addr16
out
mov
sub
ss
sub
stos
neg
fcmovnbe
sub
daa
stc
testl
sti
mov
int
fimull
call
int3
or
test
sub
mov
adc
mov
aas
mov
cli
fs
xor
scas
push
mov
xor
lahf
sbb
andl
mov
lret
sub
fnstcw
or
or
pop
dec
mov
pop
adc
int
sbb
das
shl
inc
cmpsb
push
in
mov
lods
mov
push
inc
fwait
in
das
inc
dec
mov
fldl
aad
xchg
pop
outsb
sbb
test
rorb
bound
push
and
repnz
lcall
push
aaa
aas
std
sahf
mov
ret
insb
stos
insl
scas
xor
pop
fstps
ljmp
das
jmp
dec
shll
xor
xchg
and
stos
popa
imul
xor
cmpsb
lret
clc
sub
fisubl
mov
fidivs
push
inc
das
mov
jg
bnd
mov
fistps
sbb
pop
mov
cltd
cmp
fdivs
xor
sub
jnp
mov
mov
xchg
mov
xchg
jecxz
xchg
mov
in
mov
hlt
dec
arpl
jecxz
cs
dec
sbb
dec
daa
mov
sbb
dec
mov
popf
shl
ljmp
sub
sbb
das
es
push
test
pop
push
cltd
aam
mov
dec
pop
ficompl
sub
or
or
insl
dec
mov
xchg
and
jbe
out
ds
adc
pop
mov
sbb
jo
icebp
sbb
arpl
rcr
inc
repnz
sbb
fwait
scas
adc
mov
inc
jmp
std
lcall
mov
sbb
cs
mov
loop
adcb
cltd
jmp
mov
mov
rolb
ljmp
imul
in
mov
pop
out
add
pop
data16
fldln2
shlb
adc
inc
or
mov
mov
fstpl
je
stc
stos
and
mov
stos
cltd
jb
stos
sub
add
jge
subl
scas
inc
inc
mov
sarb
in
pop
call
movsl
pop
imul
test
sbb
xor
subb
cmp
rorl
mov
xchg
cltd
mov
or
sbb
inc
stos
bound
or
xlat
fwait
sbb
ss
aad
and
shl
ret
or
push
ret
inc
jmp
adc
cwtl
mov
fiadds
inc
jecxz
push
or
andl
push
jmp
test
out
iret
insb
mov
and
fistps
divl
iret
mov
cmp
cmp
sbb
cmp
xor
jns
cmp
pop
push
xchg
pop
sbb
sbbb
ja
imul
es
gs
ds
dec
add
push
add
add
mov
iret
mov
jae
lcall
fildl
mov
mov
scas
daa
movsb
sti
fnsave
enter
jnp
jmp
cmp
inc
inc
imul
xor
inc
mov
xchg
movsl
nop
push
cmp
les
xor
icebp
sbb
pusha
or
es
cmpsb
sbb
mov
sbb
movsl
notb
vandnps
mov
cli
jnp
push
in
jo
jb
jecxz
stc
and
sub
adc
std
add
adc
aam
pop
fucom
cmp
adc
roll
lea
adcb
iret
outsl
sub
pop
dec
sbb
movsl
out
pushf
xchg
loope
cld
dec
jg
lock
add
and
inc
in
fninit
sbb
inc
sub
in
arpl
xchg
mov
sub
fsubrs
aas
faddp
movsl
cltd
in
test
adc
dec
lds
sub
mov
cld
add
mov
or
outsl
push
xchg
push
sbb
repnz
sahf
pushf
lods
add
lret
test
adc
insb
jo
cmp
fsts
push
dec
in
cli
mov
int3
xor
ljmp
and
inc
fwait
cmp
arpl
pop
add
fstpl
adc
pop
dec
es
in
inc
adc
rcll
sti
adc
and
enter
jns
or
inc
sub
jg
aam
cld
adcl
lea
gs
outsl
movsb
inc
push
nop
aad
movsl
mov
out
in
in
jno
imul
mov
scas
nop
mov
movsl
jmp
mov
fmuls
dec
mov
leave
pop
fiaddl
pop
sbb
aam
in
mov
shlb
xor
loope
cmpsl
addr16
ror
insb
pop
inc
xor
mov
cmp
xchg
fistpll
fwait
popf
aam
fisttpl
xchg
or
sbb
call
sub
stos
fcompl
fwait
outsb
jo
std
test
fucomp
pop
and
in
mov
gs
lahf
insl
dec
cltd
clc
or
fwait
in
fwait
xchg
pop
cmp
hlt
ss
pop
sahf
xor
pop
sbb
dec
lds
or
popa
sbb
jnp
mov
jmp
add
push
lret
outsl
bound
test
adc
pop
push
in
retw
into
lahf
out
mov
pop
int3
sbbb
rcl
out
imul
jle
in
sbb
sub
push
call
div
jmp
lods
push
dec
xchg
or
rcrl
and
insl
in
inc
push
mov
fsubl
or
mov
sub
sub
or
or
pop
lret
repnz
xchg
fstpl
jno
pop
jmp
test
popa
imul
pop
mov
ja
cld
or
mov
push
pop
pop
pop
aas
stos
dec
adcb
sub
jns
fdivr
imul
xchg
loop
inc
outsl
push
pop
ljmp
xchg
and
rorl
ret
mov
dec
stos
mov
das
dec
jg
mov
dec
fldl
ss
test
xlat
ss
stos
daa
lea
loope
into
out
int
lds
das
inc
roll
dec
stos
dec
pop
mov
and
popa
xchg
sub
inc
push
cmp
xchg
pop
push
push
xchg
inc
adc
jno
and
pushf
fwait
mov
inc
pushf
xor
loopne
test
xor
fists
das
xlat
mov
les
jp
jmp
gs
cmpsl
xor
or
ljmp
sbb
test
dec
cmpsl
rcrl
fscale
in
shlb
pop
or
test
cs
sbbl
shll
jecxz
fwait
sti
mov
fwait
jmp
xchg
test
shrl
shll
ret
dec
sti
xor
pop
dec
mov
div
sbb
fstps
sbbl
insl
andl
pop
cld
mov
in
bndldx
pop
popf
pop
xchg
dec
jmp
das
dec
dec
pop
jg
jl
addl
add
mov
sbb
outsl
xor
inc
pop
icebp
insl
je
mov
ds
in
dec
push
movb
sub
xchg
push
loop
push
push
dec
mov
pop
jmp
fnstsw
fisubl
mov
cmp
and
dec
repz
xchg
imul
fimull
out
lods
in
sbb
and
or
in
es
dec
daa
and
xlat
and
jb
lds
mov
pop
mov
push
in
ljmp
mov
dec
hlt
out
push
xlat
js
xor
sbb
out
mov
xchg
test
outsb
sbb
call
psrlq
jns
testb
aas
loopne
sahf
mov
imul
inc
and
outsb
in
fwait
cmp
cmp
fnsave
pop
sbb
adc
scas
xchg
sub
fdivs
loop
inc
xlat
mov
push
repz
idivb
adc
test
sub
pusha
mov
mov
push
sbb
fnsave
lret
stos
bound
in
xor
fsts
fcoms
push
mov
xchg
pop
jne
mov
mull
push
sub
int3
adc
or
mov
daa
mov
mov
sahf
lret
xlat
cmpsl
adc
jmp
test
mov
inc
inc
cld
mov
sbb
das
jno
es
xor
push
dec
mov
loop
in
mov
push
mov
xchg
cmc
jnp
inc
sub
inc
fbstp
jae
sbb
pop
sub
add
sti
pop
pop
sbbb
pop
lret
cltd
es
hlt
fwait
popa
sub
mov
ret
push
sbb
xchg
inc
mov
leave
je
xchg
lock
imul
in
fnstsw
sbb
lock
cmp
loop
pop
inc
mov
adcl
inc
inc
shlb
fistps
dec
in
stos
push
stos
lds
pop
xor
dec
popf
inc
and
jmp
mov
imul
jnp
xchg
pop
fnstcw
int
sbb
imul
and
outsl
push
dec
pop
dec
lea
scas
dec
rcll
ljmp
enter
and
dec
movntps
call
jmp
sub
sbb
cltd
arpl
xchg
mov
push
xchg
enter
jecxz
sar
inc
repz
lahf
adc
mov
and
imul
lods
adc
test
add
rsqrtps
mov
xchg
xchg
icebp
bound
push
sti
push
push
in
mov
and
add
or
ret
out
jl
and
mov
sbb
pushf
es
outsl
jge
dec
cmpsb
adc
in
shlb
addl
ljmp
and
loopne
adc
sub
push
mov
push
fidivl
sbb
lock
loope
stos
test
mov
sub
repz
mov
movl
rorl
frstor
std
xchg
fbstp
ja
pop
test
inc
xchg
push
mov
ljmp
jmp
sbb
orb
cmpsl
mov
pushf
movsl
push
in
mov
add
arpl
jns
xchg
sti
cld
lret
sbb
testl
negb
dec
xchg
fisubl
nop
lods
or
pop
insb
mov
jmp
push
je
sbb
aam
lret
lcall
jecxz
xlat
pop
out
xor
cmpsl
loopne,pn
mov
sbb
into
jae
inc
lock
cltd
in
sbb
mov
mov
es
lcall
dec
mov
fnstsw
orl
int3
mov
mov
lcall
cmp
fimuls
mov
mov
add
jp
dec
enter
jae
fcompl
ljmp
int
repnz
mov
lods
sbb
fstpt
loope,pt
sub
fucom
xor
in
sbb
je
inc
scas
test
add
mov
pop
xor
or
mov
xchg
sub
enter
xor
mov
das
add
fucomp
jp
sub
cmp
sti
in
and
repz
mov
js
push
mov
jl
pop
add
mov
fildll
push
stc
sti
cmp
hlt
xchg
stc
mov
xchg
cld
dec
mov
dec
rcl
sub
xor
pop
adcl
add
dec
iret
pop
pop
fdiv
pop
hlt
pop
outsl
out
mov
jp
mov
sbb
outsl
insb
mov
adc
lea
aas
addr16
mulb
mov
pop
imul
jmp
jbe
dec
adc
push
lea
add
pop
mov
jge
leave
aam
sub
mov
jae
pop
push
cmp
sti
mov
stos
jnp
leave
push
add
push
pushf
lock
adc
inc
inc
lret
test
stos
sub
addb
cmpsl
sti
in
mov
xchg
outsl
adc
in
shrl
movsl
cmp
ret
test
loop
mov
inc
rcr
cmp
sarb
lcall
gs
imul
jbe
lods
push
pop
cmpsl
add
fcmovbe
arpl
jecxz
xlat
mov
inc
cmpb
addr16
test
push
test
mov
popf
sbb
ret
sub
nop
pop
fistl
shlb
in
int
sbb
in
mov
push
sbbl
add
pop
sub
mov
push
lock
jmp
dec
jmp
fxch
adc
pop
and
or
push
clc
cwtl
jl
adc
sub
mov
xchg
stos
jae
sbb
mov
jl
pminub
xor
cs
mov
sahf
scas
mov
sarl
add
aas
imul
out
pop
outsl
rep
adc
arpl
inc
repz
mov
jnp
xlat
test
pushf
mov
mov
ficompl
mov
push
push
push
daa
jge
daa
mov
jae
andb
insl
push
sub
ds
jb
inc
sbb
sbb
aam
pop
cld
and
insl
imul
fistpl
inc
xlat
inc
ret
stos
dec
pop
and
jmp
fdiv
lcall
add
sub
push
cmp
repnz
inc
jecxz
pop
out
xchg
inc
cmpsl
imul
test
fdivr
jg
adc
fldcw
jg
sub
sbb
jecxz
aas
loop
and
fdivs
push
and
mov
and
aam
inc
inc
inc
xor
inc
lret
sti
sbb
xchg
test
addr16
mov
xchg
addr16
push
mov
aam
mov
adc
mov
sbb
popf
pop
ds
out
loopne
addb
xchg
mov
inc
fiadds
inc
pushf
mov
jne
pusha
popa
xchg
mov
fisubrl
cmpsb
ja
push
sahf
inc
and
in
sbb
fcomp
sti
int3
dec
fadd
movsb
pushf
ljmp
leave
insl
sub
cmp
lahf
cmp
andl
mov
fwait
mov
daa
cmpsb
inc
mov
inc
pop
pop
adc
test
je
sub
mov
mov
mov
mov
stc
nop
pop
add
nop
std
insb
dec
movsl
leave
test
adc
sbb
and
leave
sbb
stc
sar
jecxz
in
test
sbb
call
mov
push
mov
add
mov
cld
xor
mov
adc
jmp
xchg
add
jno
dec
cwtl
jno
mov
or
dec
mov
sbb
pop
sub
mov
or
add
into
mov
int
or
shrl
in
loop
imul
inc
fistpll
das
clc
mov
sbb
pop
outsl
lcall
aad
fwait
jecxz
jl
xlat
mov
mov
mov
les
inc
fyl2xp1
mov
cmp
jne
xor
int
ret
dec
jae
insl
xchg
adc
pop
mov
in
mov
popf
pop
dec
dec
in
fsubrs
mov
lock
adc
rcrl
jge
cltd
mov
popa
lods
or
loopne
inc
pop
lea
das
loope
scas
inc
inc
fadds
jno
sbb
aam
pop
addr16
mov
fcompl
stos
movsb
pushf
das
nop
add
inc
subl
adc
jnp
xlat
sbb
testl
rcrl
pop
add
and
imul
push
mov
es
or
jl
pop
popa
mov
inc
leave
push
jb
les
ja
mov
shll
jle
ret
mov
and
and
and
mov
and
push
xchg
mov
jl
fisubrs
cwtl
roll
fdivrs
jmp
xchg
repz
pop
xor
mov
jecxz
loope
call
out
imul
xor
arpl
ss
dec
mov
xchg
cmpsl
jbe
repz
add
sti
rcrl
mov
enter
repz
dec
cld
std
sti
shlb
mov
in
add
mov
cld
ret
fcmovne
push
cmpsl
in
cwtl
int3
sbb
mov
and
and
push
fwait
fsubs
dec
sub
jne
or
fsubrs
jo
jmp
int
mov
xor
int
mov
push
dec
rcr
popf
outsb
adc
call
inc
imul
pop
cmpsb
mov
jecxz
jmp
lock
out
aam
std
aas
icebp
jae
push
dec
call
dec
adc
sbb
fcom
stc
call
xchg
fdivp
push
mov
subl
in
jge
mov
push
fld
repz
mov
mov
adc
aam
mov
push
int3
jne
sbb
outsb
dec
mov
pop
pop
push
scas
dec
fmull
pop
mov
xor
rolb
data16
imul
rorb
pop
js
jns
imul
int
push
dec
jae
push
icebp
cmpsl
dec
arpl
inc
imul
sub
cltd
lret
inc
stos
enter
loopne
fnstcw
inc
das
add
jnp
pop
stc
inc
pushl
ds
inc
xchg
das
and
call
enter
xorb
mov
mov
in
test
jo
mov
fwait
xor
mov
scas
imul
fadds
lea
int3
mov
dec
push
jnp
cmp
lods
jge
scas
fwait
mov
fmul
cmp
leave
out
in
aad
out
ret
jb
cmc
lds
xchg
xor
cmp
or
loope
fwait
gs
and
in
stos
jg
push
repz
add
adc
dec
pop
xor
lret
pop
imul
stc
pop
cmp
stos
push
add
sbb
loope
mov
loope
sti
cmpsl
gs
pusha
in
mov
push
sbb
call
xchg
out
cltd
in
stos
sbb
sbb
and
rcl
loopne
shll
jmp
fcomi
mov
dec
repz
add
test
dec
mov
ret
std
and
imul
cltd
inc
lea
lea
pop
add
addr16
pop
mov
pop
in
mov
test
jg
cs
push
mov
mov
subl
cltd
inc
cltd
cmpsl
xchg
aas
rorl
mov
cmpsb
inc
cltd
ds
sbb
aam
popl
movsl
loopne
cmp
cld
sbb
int3
mov
jnp
mov
pop
xchg
add
subl
adc
popf
inc
xchg
push
sub
sbb
lcall
lods
dec
adc
sbb
inc
mov
ljmp
mov
inc
scas
pop
lds
jnp
rcll
or
arpl
packuswb
sahf
faddl
xor
sub
pop
fdivr
lcall
mov
pop
sahf
mov
lret
and
insb
fadds
sbb
icebp
leave
push
xor
push
and
out
das
in
pop
repz
cmp
sub
call
imul
inc
aam
inc
inc
mov
jns
sbb
xchg
aaa
inc
jb
stc
sti
xor
add
xorl
add
sub
cmp
insb
mov
mov
dec
out
repnz
ror
or
pop
outsb
pop
add
and
dec
xor
das
je
xorl
lds
xchg
das
pop
and
fiadds
rolb
mov
aas
das
fcoms
sub
pop
mov
mov
cmp
inc
test
inc
push
jmp
ret
mov
fcompl
mov
ljmp
sti
add
dec
sub
dec
and
mov
ror
xor
sbb
stos
inc
mov
mov
fsubs
hlt
andl
fimuls
filds
sub
jmp
leave
pop
dec
pop
mov
inc
insl
dec
push
dec
xchg
fs
insl
lahf
pop
rcrl
sahf
test
dec
sub
jg
ljmp
jmp
jg
and
ss
cmp
sbb
gs
mov
xor
es
test
dec
rol
xor
cwtl
mull
sti
in
leave
call
mov
mov
popa
test
jecxz,pn
dec
fstpt
adc
fimull
and
pop
pop
xor
test
arpl
ljmp
ljmp
ret
cmc
les
pop
cmpsl
pop
push
adc
add
repz
adc
out
aaa
insl
cmc
mov
in
jno
push
shrl
pop
inc
add
rclb
pop
mov
fimull
cs
inc
mov
aam
mov
xor
mov
xchg
jecxz
shll
ds
xchg
inc
das
jl
cmpsl
stos
dec
or
int
and
cmp
cwtl
mov
aad
es
jg
inc
outsb
scas
push
cs
addr16
hlt
xchg
shlb
or
and
test
pop
mov
fisubrl
loope
push
lea
sbb
push
mov
jmp
in
pop
out
and
hlt
and
mov
cmp
test
push
ss
sti
jns
rcl
int
mov
adc
pop
adc
xlat
sarl
cmc
ljmp
fisttpll
in
jno
xchg
cmp
mov
adc
pop
int3
repz
adc
imul
cltd
fsubr
in
cld
arpl
ds
inc
mov
or
pop
outsl
cld
add
xor
hlt
inc
or
ret
xchg
lods
fldl2e
cmp
frstor
xorl
les
mov
jmp
lcall
jae
cmpsl
xchg
dec
getsec
movsb
add
fildl
mov
ja
cmc
movsl
xor
nop
sbb
xchg
imul
mov
push
inc
inc
xchg
pop
mov
stos
stc
andl
clc
add
pop
push
jecxz
ss
pushf
sbb
jmp
xlat
adc
or
or
ljmp
adc
add
outsb
icebp
cwtl
inc
sbbl
cmp
dec
inc
lret
pusha
movsl
test
sub
adc
fstpt
int3
and
movsl
movsb
push
lods
imul
xor
or
mov
mov
cmpxchg
lahf
cli
fcmovne
sbb
pop
xchg
xor
ret
daa
nop
jecxz
lds
xor
or
jmp
adc
int
mov
cltd
mov
pop
pushf
pop
int3
and
push
out
pop
sub
stc
adcl
push
add
xchg
dec
ret
sbb
mov
ljmp
lret
and
pop
dec
lods
xor
add
or
cli
insb
test
ret
pushf
sub
lods
mov
pop
pushf
lea
lock
pop
xchg
out
jg
test
fcompl
rorb
push
divl
faddl
push
pop
pop
fwait
fwait
ret
add
pop
adc
inc
fistpl
mov
adc
cmp
fidivrs
sub
mov
ficoml
xchg
jle
lods
lcall
cmp
add
and
sub
ret
std
std
fwait
add
jmp
popf
dec
lods
stc
in
fnstcw
or
ret
aaa
jae
cmpsb
xchg
add
push
sbb
jne
fidivrl
mov
sbb
adc
mov
arpl
and
popa
push
xchg
out
movsl
pop
push
mov
icebp
fstps
enter
pop
push
outsb
add
out
jae
pop
or
or
adc
xor
leave
xchg
pop
sub
mov
rol
lret
sbb
std
jecxz
leave
sbb
xlat
add
cmpsl
or
ret
filds
mov
dec
imul
ret
out
lcall
pextrw
push
das
xchg
sbb
fisubl
lcall
jge
xchg
out
cwtl
mov
inc
repz
fdiv
andl
mov
lret
sbb
mov
js
adc
xor
mov
dec
adc
mov
add
in
inc
adc
xlat
or
add
inc
jecxz
pop
mov
add
andl
pop
aas
jnp
xor
aad
xlat
pop
jne
pop
mov
ret
mov
or
pop
add
in
shll
push
inc
stos
int
push
dec
dec
and
and
int
sbb
xchg
sub
xlat
hlt
clc
jae
dec
and
outsb
lea
add
jb
mov
orb
out
shll
xchg
and
mov
push
popf
dec
pop
lds
add
adc
pop
lds
or
xor
ss
jns
mov
dec
adc
fstl
mov
push
arpl
xchg
inc
inc
lods
push
imul
aam
jnp
push
mov
inc
imul
pop
mov
pop
inc
jae
pop
sbb
out
push
pop
cltd
imul
ja
pop
or
pop
rcrl
mov
into
sub
push
out
inc
repnz
push
pop
ret
jg
lds
daa
xchg
ret
orl
xor
fcmovu
lods
out
pop
xor
pop
repz
cmp
and
enter
or
ret
xor
cs
mov
sbb
xchg
imul
ljmp
pop
adc
xlat
je
inc
add
xchg
sbb
or
fistps
cmp
test
push
out
sbb
sub
xchg
jg
pop
loope
xchg
add
inc
inc
sub
cmp
aam
fcmovbe
fwait
sbb
test
icebp
jae
cmp
imul
sbb
xchg
in
cmpsl
xchg
push
fldcw
inc
popf
in
inc
hlt
mov
add
in
mov
lods
inc
sub
or
sbb
lock
dec
fwait
ds
int
xchg
loop
sahf
inc
das
xchg
out
pop
xchg
pop
jb
js
fistpl
mov
fcmovne
rcr
out
inc
repz
icebp
arpl
pushf
mov
sbb
xchg
dec
xor
shr
sub
aad
fucom
cmpsl
push
mov
ljmp
jecxz
imul
sub
inc
lods
jecxz
cld
cmpl
clc
push
jnp
jae
in
pop
scas
push
jno
orb
inc
ljmp
cmpsl
mov
loop
cli
mov
add
xor
mov
sbb
insb
out
inc
rorl
js
repnz
dec
aam
sbb
imul
dec
mov
mov
sub
loopne
aas
fwait
outsl
ret
mov
add
cmp
xor
mov
ljmp
or
sbb
lret
aam
mov
and
jecxz
dec
insb
cmpl
dec
xor
ficoml
in
fcoms
fwait
je
mov
sarl
mov
mov
xchg
pop
xor
data16
stos
shll
sbb
inc
dec
cmp
push
fimuls
push
sub
in
test
ret
mov
sti
ja
test
xchg
inc
mov
cwtl
outsl
push
cmp
les
dec
mov
loopne
or
adc
jmp
orl
xorl
push
shl
jb
xor
arpl
and
mov
enter
es
pushf
and
sti
leave
push
fldl2t
jecxz
cs
enter
mov
fadds
cmp
jne
jmp
addr16
inc
or
sub
cmp
mov
lret
push
fdivrl
add
push
imul
mov
loop
in
xor
aas
fldl
inc
ficompl
xchg
loope
pop
mov
xchg
adc
and
in
mov
sbb
jne
mov
in
mov
xchg
pop
scas
inc
es
imul
jmp
add
inc
aad
imul
arpl
test
lcall
lcall
repz
xchg
pop
and
inc
arpl
popa
imul
jl
fisttpl
sbb
mov
cltd
movsb
inc
inc
popf
lret
inc
out
sub
and
imul
lea
cmp
sbb
push
fldcw
mov
pusha
cli
les
sbb
cmp
rolb
lods
repnz
push
scas
and
dec
lret
fcmovb
pop
test
inc
lret
fcmovu
add
xor
mov
andb
mov
cmp
int
mov
call
stos
das
mov
or
sti
arpl
add
mov
sub
push
jmp
ret
ret
inc
cmp
adc
or
ss
sbb
fcompl
ljmp
sbb
mov
adc
repz
mov
mov
iret
push
mov
fimull
sub
push
sub
jno
xchg
pop
fwait
or
mov
scas
jbe
push
fldcw
pusha
fiaddl
push
xor
mov
in
sub
inc
and
imulb
jecxz
push
xchg
cmpl
xchg
cld
inc
push
stos
cli
fisttpll
cmpsl
jle
mov
jno
mov
adc
push
adc
mov
fstpt
stos
add
mov
outsl
dec
bound
into
sbb
or
mov
mov
mov
hlt
push
mov
sub
popa
in
adc
xor
rcr
xlat
loope
lock
pop
insl
ljmp
clc
or
or
adc
rcrb
push
cwtl
cmp
cmp
insl
cmp
fidivrl
js
popa
mov
cs
inc
int
loope,pt
int3
and
dec
sbb
enter
sbb
xchg
dec
insl
sub
xor
add
arpl
mov
mov
mov
mov
or
mov
ljmp
js
lods
push
stc
ljmp
xlat
mov
push
icebp
jge
adc
pop
ret
cltd
fxch
adc
arpl
gs
mov
mov
jae
ficomps
inc
loop
int
cmpsb
ret
pop
sub
mov
xlat
outsl
int
mov
cmp
lock
and
xchg
pop
xor
ret
in
sbb
cwtl
ret
gs
mov
xchg
rcrl
and
sbbl
dec
add
faddl
pop
jb
dec
jecxz
pop
xchg
ret
xchg
aaa
xorb
pop
adc
dec
scas
bnd
jle
out
mov
and
cli
mov
imul
xchg
mov
into
je
xchg
outsl
lret
mov
sbb
and
push
cltd
mov
sub
mov
lods
cmp
es
sti
outsl
mov
sbb
test
sbb
out
dec
ficoml
mov
in
mov
cli
and
or
sub
and
test
outsb
mov
ret
lea
pop
xor
clc
jae
mov
xchg
sbbl
jns
xchg
xchg
inc
xchg
lret
test
int
arpl
addr16
xor
outsl
or
popf
lods
fcompl
jle
mov
sbb
aaa
or
sub
fldcw
push
or
pop
aad
cmpsl
push
and
mov
jecxz
jae
sti
pusha
rcl
adc
pushf
sub
mov
mov
mov
mov
xchg
mov
sub
jae
push
push
stos
mov
fimull
icebp
ret
test
mov
xlat
sbb
push
inc
jecxz
add
sahf
ds
int3
and
xchg
pop
aam
inc
imul
mov
jl
mov
pop
pusha
out
sub
dec
jg
fstpl
xchg
pop
enter
subl
pop
pusha
and
mov
out
icebp
jecxz
jg
cmpsl
out
std
mov
test
inc
mov
in
ss
imul
pop
pusha
cmpsl
inc
es
stc
mov
xchg
dec
flds
popf
addr16
mov
data16
jl
jmp
les
cmp
jecxz
dec
push
push
popa
inc
and
int
mov
or
sbbb
push
fdivs
xchg
push
sub
fcom
addr16
push
sbb
sbb
enter
and
gs
outsb
mov
les
pop
and
out
and
inc
leave
std
push
aad
dec
sti
ds
rorb
je
dec
test
xor
push
add
mov
imul
mov
and
jnp
mov
lock
repnz
inc
lcall
lods
or
cltd
imul
arpl
cmp
mov
stos
mov
fbstp
or
dec
out
aas
popf
call
aas
jge
cmpsb
jnp
subb
dec
aam
pop
xchg
sub
push
push
push
cs
ret
mov
fwait
into
inc
mov
fildll
sbb
sahf
push
mov
pop
push
or
fs
jno
cmp
dec
gs
ljmp
stos
adc
add
push
fbstp
xor
cld
ret
inc
mov
inc
mov
lret
stc
lods
adc
es
fnstsw
es
into
and
and
sti
xchg
mulb
xchg
inc
stos
pop
ficoml
mov
std
mov
into
sub
ret
popa
xorl
pushf
mov
int
dec
and
nop
test
out
sti
cmpsl
xchg
cmp
mov
push
xchg
xor
or
sahf
lret
dec
cmp
mov
in
imul
les
mov
jle
mov
mov
enter
in
shll
pop
aad
xchg
jecxz
xor
iret
sti
pop
lcall
in
mov
out
iret
addl
ficompl
lret
arpl
ja
mov
rol
sbb
fnstcw
int
inc
popa
rorb
lods
dec
push
xor
mov
push
ja
adc
mov
rep
jnp
aam
popa
push
addr16
jns
push
push
inc
mov
sbb
xchg
or
pop
addl
clts
mov
xchg
je
xchg
inc
sub
push
jle
fwait
sub
fsubr
mov
mov
mov
dec
xchg
pop
inc
push
mov
cmp
xor
or
jnp
outsb
or
inc
jbe
or
insl
in
xchg
test
popa
loopne
add
inc
pop
insl
dec
call
enter
mov
repz
jmp
stos
in
xchg
enter
mul
fsubrs
rorb
sbb
loope
mov
inc
lds
mov
subb
dec
push
xor
dec
xor
push
rcrl
fstpt
bound
inc
jp
jne
loop
jno
and
cli
pusha
add
xchg
cmp
int3
push
nop
inc
xor
xchg
lds
inc
imul
int3
aam
cmp
xchg
jno
xor
and
aas
or
cld
test
rcrb
addr16
mov
repz
cmp
rcrb
scas
fwait
imul
lea
ljmp
or
adc
push
xor
cwtl
pusha
mov
imul
jmp
sub
mov
lea
aam
pop
pop
sub
add
aas
dec
aaa
dec
loop
aad
jg
xchg
sahf
sbb
fisttps
cwtl
xchg
cmpsb
ret
cmpsl
inc
ret
dec
iret
sub
cltd
cmpsb
sbb
aam
add
mov
jae
fs
lds
out
out
pop
xchg
outsl
aam
icebp
addr16
mov
dec
test
cld
pusha
mov
inc
mov
cmpsb
enter
sbb
enter
fnstsw
push
inc
dec
or
xor
pop
cmp
ffree
inc
or
cmp
imul
test
fsubrl
jle
int3
fldl
mov
mov
pop
add
cmp
or
jns
pushf
cmp
mov
test
xor
mov
mov
out
out
xor
xchg
scas
xchg
or
mov
inc
add
mov
sbb
xchg
xchg
push
addr16
fucom
fsubl
xor
stos
jne
leave
lock
fidivrl
lret
and
dec
or
aas
dec
xchg
shl
xor
xchg
gs
mov
test
push
jns
sub
iret
jmp
xor
or
bound
push
shll
adc
push
lahf
mov
outsb
lret
jo
push
sub
imul
icebp
fldt
negl
xchg
cmpsb
jnp
mov
pop
push
ret
pop
shll
xchg
fcmovne
gs
jbe
fwait
push
xchg
test
push
xchg
mov
dec
push
adcb
in
popf
and
push
pop
out
xchg
lods
jo
leave
inc
fisubrl
inc
cmp
fucom
jo
inc
cmp
ret
fstpl
inc
push
scas
adc
mov
negb
adc
xor
iret
imul
mov
mov
loop
pop
mov
dec
mov
lods
out
push
call
lea
mov
push
test
outsl
mov
mov
mov
pop
fistpll
imul
dec
pusha
les
imul
sub
out
int3
adc
jle
fistps
mov
dec
jno
cmp
fwait
mov
push
mov
stc
ret
or
rorb
mov
mov
add
ret
ficoml
xlat
int3
inc
jne
pop
pushf
sub
jbe
pop
jecxz
enter
xchg
cmp
pop
mov
lock
fstl
into
fldenv
xchg
or
stos
sti
je
mov
pusha
sbb
mov
pop
xlat
inc
dec
dec
lock
mov
popa
and
push
inc
dec
jmp
enter
rol
add
dec
sbb
push
mov
lret
insb
inc
inc
xchg
ds
shrl
mov
dec
sub
jo
fwait
mov
pop
sbb
stos
sbb
stos
xchg
jg
mov
mov
push
mov
xchg
lods
insl
lea
xchg
mov
lds
ret
jmp
clc
mov
addr16
xchg
and
xchg
mov
ss
inc
shll
sbb
ds
lcall
push
in
fsubl
subb
adc
inc
jl
repz
js
jne
mov
sbb
jecxz
add
sti
lock
fstps
cmpsl
leave
xor
aas
lock
mov
push
test
push
xchg
test
out
inc
pop
sub
xchg
insb
sub
loop
pop
jae
pop
popa
in
fstl
fcom
adc
add
ss
mov
sub
jle
sub
out
mov
std
xchg
cltd
push
add
inc
mov
sub
cmp
and
xchg
arpl
dec
adc
addr16
int
ljmp
fsub
jo
jno
bound
pop
leave
xlat
push
imul
and
mov
stos
clc
stos
popa
cs
pop
scas
out
mov
lds
sbb
in
test
dec
imul
jbe
xchg
or
push
out
push
mov
push
cmpb
and
repnz
cltd
adc
adc
retw
shlb
and
pushl
div
cltd
xchg
xchg
ficomps
jne
sbb
jmp
sub
cmp
xchg
cmp
rol
ret
sbb
aas
aas
pop
imul
mov
in
loop
inc
lds
jno
jg
inc
sarb
xchg
jg
cmp
jne
out
push
jns
mov
out
out
orl
inc
dec
jmp
inc
push
leave
cwtl
ret
enter
push
mov
movsb
xchg
mov
scas
cmova
and
ret
popf
xor
push
pop
push
ret
mov
or
push
cmc
pop
into
dec
mov
xchg
mov
push
push
push
sub
and
sti
xchg
push
push
pop
pop
mov
ret
mov
mov
inc
add
mov
mov
mov
rorl
xlat
add
dec
push
mov
inc
dec
bound
das
lea
int
and
test
fldt
sahf
mov
jge
in
mov
push
mov
out
aas
outsb
or
inc
xlat
push
sbb
repz
sbb
xor
mov
fistpl
inc
xor
jp
pusha
mov
cmpsl
loopne
inc
xchg
mov
push
jb,pt
aaa
sub
mov
cmp
cld
or
jmp
xchg
roll
jmp
push
push
inc
rcrl
out
das
imul
dec
jno
sbb
fs
pop
inc
fadds
scas
mov
push
std
out
or
inc
xor
jne
imul
jb
lea
lret
leave
mov
fdivs
inc
pop
scas
add
inc
mov
lea
daa
data16
lea
pop
imul
sub
cwtl
inc
outsb
imul
orl
and
mov
inc
int
out
ret
mov
lret
sbb
inc
mov
or
inc
mov
cld
sub
push
inc
test
or
add
cmp
gs
fldcw
mov
ret
xchg
jne
out
fstps
mov
std
mov
xchg
test
push
ss
dec
sbb
xor
or
leave
and
sti
fists
pop
std
inc
jno
xor
or
ret
ret
push
mov
or
sbb
hlt
xor
dec
fistps
test
es
xchg
jno
lret
daa
inc
adc
call
mov
bound
mov
fwait
ret
mov
int
jecxz
lds
xchg
or
push
add
roll
icebp
mov
sub
aas
jp
push
icebp
inc
gs
sub
gs
sti
xchg
mov
mov
imul
popa
outsb
ja
addr16
lea
inc
push
lods
inc
fwait
adcb
fbld
les
arpl
lcall
mov
inc
fldl2t
mov
jbe
loopne
iret
pop
fwait
jae
adc
dec
xchg
and
push
std
icebp
jmp
mov
push
loope
inc
test
jne
mov
arpl
jmp
movsb
aad
cmp
mov
xor
inc
push
sub
daa
imul
add
movsb
rolb
aam
adc
cld
sbb
fs
xorl
jns
mov
sbb
sbb
push
repnz
add
push
pop
mov
ljmp
mov
rorl
xchg
dec
fdivrl
pop
pop
dec
cmp
sub
aaa
xlat
jmp
das
jnp
mov
or
enter
aas
add
sub
mov
lods
sub
mov
push
popf
repnz
jmp
push
jl
mov
test
rorb
mov
out
aad
mov
movsb
insb
xor
sub
and
fsubs
psraw
fcoms
outsb
jmp
pop
mov
inc
xchg
popa
repnz
jecxz
sbb
into
xchg
aaa
shl
frstor
sti
insl
aas
jae
xchg
mov
xor
js
icebp
test
push
nop
xchg
mov
jne
jbe
and
loop
mov
out
pop
pop
xor
in
dec
sub
fbstp
out
jmp
fisubs
jno
xor
fidivl
jle
fistpll
jno
imul
stos
ror
out
sti
ficompl
mov
inc
cli
sub
sti
fwait
pop
mov
stos
jns
adc
sbb
shll
inc
mov
inc
jnp
lret
cmp
aas
fstl
push
addl
push
icebp
aam
jae
in
lds
ftst
shll
add
insl
push
in
or
inc
mov
cli
sbb
mov
ja
insb
pop
bound
out
iret
sub
aaa
lahf
lea
outsl
andl
add
adc
stos
pop
scas
cltd
ljmp
popf
mov
fisttpll
xor
ds
imul
pop
and
clc
jno
lea
pop
mov
scas
int
stos
nop
loop
push
insl
hlt
ja
popa
add
sbb
push
movsb
adc
cmp
aad
shr
cmpsl
or
jne
mov
lock
sub
fs
es
insl
mov
inc
cmpsb
fdivr
in
dec
add
lock
insl
xchg
sahf
sub
dec
add
repnz
push
sbb
xchg
test
and
les
xchg
inc
outsl
sar
add
arpl
mov
xchg
jnp
mov
or
test
outsl
cmp
adc
cltd
lea
jge
xlat
pop
sub
sub
pop
jge
inc
out
insl
xchg
push
popf
xor
aaa
gs
loopne
mov
cmp
xchg
inc
in
pop
dec
push
jp
mov
jo
mov
or
shl
sbb
mov
sub
pop
sub
stc
jecxz
insl
jno
xchg
mov
lcall
fsubrs
faddl
push
sub
jnp
in
jmp
push
inc
adcl
mov
mov
pusha
cmp
and
inc
stos
sub
std
lret
mov
cmp
mov
outsl
xor
jae
inc
sbb
adc
imul
ret
ficompl
in
mov
leave
test
and
jb
mov
sbb
test
xchg
out
int
pop
inc
mov
dec
imul
or
push
sbb
arpl
jnp
dec
imul
and
outsb
xchg
xchg
mov
movsl
jmp
fmuls
adc
les
pop
stos
or
xchg
dec
add
sbb
fisttpl
rcll
and
dec
cmpsl
jb
cmp
test
out
sti
mov
pop
in
or
and
jae
int3
or
xchg
sarb
cwtl
cli
ljmp
lea
pusha
sahf
mov
xchg
inc
and
rcl
jnp
cld
dec
inc
leave
add
mov
push
fcoms
cmpsb
ljmp
adc
cmp
push
xor
adc
aas
leave
adc
sahf
stos
sti
cld
sub
inc
dec
inc
sarb
jmp
imul
ret
sbb
lods
shl
idivl
lds
inc
ret
js
arpl
fstpl
cmp
shrb
inc
lock
roll
fwait
repz
scas
and
test
pop
xor
movsl
lds
dec
fcmovbe
jne
aam
jo
mov
dec
add
les
mov
sub
push
clc
jle
xchg
jl
ret
jno
pop
and
and
xor
sub
jns
aam
mov
mov
inc
xor
enter
das
and
inc
adcb
and
incb
lcall
ret
pop
xor
xchg
aaa
dec
data16
ljmp
inc
repz
out
out
push
xchg
arpl
arpl
mov
enter
sub
fldt
cltd
fs
in
rcr
addb
adc
fiaddl
lea
fisttpl
lds
lcall
in
rcrb
mov
aaa
fmuls
ljmp
rolb
and
inc
bound
shrl
nop
sbb
cwtl
add
divb
aad
mov
adc
sbb
cmc
mov
lret
push
andb
sub
les
sub
sub
insb
repnz
push
lahf
lret
dec
repnz
jmp
inc
mov
jmp
jl
xchg
into
pop
inc
ficoms
pop
call
mov
xchg
push
hlt
fildl
js
subb
fadd
jg
insb
or
jp
cmpsb
cmp
cltd
out
pop
imul
decl
fisttpl
lea
xlat
fiaddl
inc
sbb
in
pop
sbb
pop
sbb
in
pop
lods
ret
fiaddl
xchg
xor
stc
fisubrl
into
add
imul
mov
arpl
cwtl
lret
cli
lods
inc
sub
cmp
test
pop
jno
fs
dec
xchg
inc
int
jno
int3
mov
xchg
pop
jns
in
lcall
jmp
sysret
jg
cwtl
lods
je
and
xlat
pusha
mov
je
ljmp
and
shrb
mov
int3
stc
ljmp
icebp
push
leave
pusha
scas
sub
inc
movl
or
or
xchg
pusha
in
push
jl
out
int3
hlt
sub
mov
in
sub
mov
mov
dec
jae
or
cmp
data16
sub
inc
dec
xlat
test
test
ss
jnp
mov
repnz
mov
scas
mov
mov
repnz
mov
lret
out
lret
xchg
xor
lea
inc
sbb
iret
lea
sub
push
sub
jl
addr16
add
add
pop
or
loope
mov
add
inc
leave
mov
lret
fisubl
insb
and
push
stos
scas
ljmp
add
out
ljmp
and
les
cmp
ret
das
pop
cltd
loope
cmp
sbb
test
mov
push
dec
sub
mov
push
pop
addb
pop
fisubrs
flds
mov
rolb
inc
rolb
out
dec
mov
mov
cmp
out
sbb
js
repz
enter
jns
test
mov
fadd
dec
fsubl
imul
mov
loopne
outsb
mov
inc
inc
adc
cmp
daa
mov
xchg
sti
mov
mov
push
sbb
jo
add
dec
push
lret
push
xor
xlat
movsb
pop
imul
push
xlat
pop
jo
shr
idivb
imul
inc
into
inc
fstpl
xor
in
rcrb
lret
adc
flds
cli
xchg
sbb
add
cmc
out
cmpsl
loope
dec
sbbb
leave
daa
inc
mov
pop
lods
sbb
pop
push
aam
sbb
xchg
test
xor
xchg
mov
push
lea
lea
jp
and
xchg
xchg
jge
mov
inc
and
jo
xor
sbb
push
les
add
loope
add
hlt
inc
aas
sbb
push
mov
scas
repnz
lcall
jno
pop
repz
gs
sbb
mov
imul
arpl
out
out
aas
std
or
cmp
cwtl
jb
or
xchg
jmp
cmp
sbb
xchg
arpl
mov
cmp
push
ljmp
adc
mov
mov
out
inc
pop
mov
xor
aaa
ret
mov
popf
insl
sbb
aas
pop
or
imul
or
jge
sarb
fldt
mov
cs
push
pop
movsl
das
mov
push
pop
mov
xor
push
rcrb
imul
cmp
imul
aad
cmc
fwait
je
in
roll
scas
fsubrs
out
xchg
pop
shrl
aas
aaa
mov
in
xchg
mov
lods
stc
mov
xchg
xchg
sbb
stos
lea
inc
lds
xchg
imul
fcomps
push
xchg
imul
xchg
push
or
jmp
sub
add
xchg
in
ret
fisubrl
inc
loop
cli
in
repnz
jmp
ficoml
mov
xchg
sahf
cmpsl
lret
xchg
xchg
sbbl
xorb
lds
jp
test
dec
outsb
xchg
test
xor
jge
scas
xchg
jmp
cmp
clc
daa
sbb
adc
fwait
imul
in
push
jnp
add
mov
shrb
fst
jno
bound
aaa
and
cmpsl
dec
imul
and
or
std
test
push
in
outsl
sarl
sbb
aas
push
fbstp
mov
xor
out
nop
xor
sub
leave
dec
scas
int3
std
cmpsb
subb
and
jmp
mov
in
movsl
loopne
mov
outsb
sar
jae
fwait
sbb
in
push
sti
xchg
ljmp
push
aad
mov
ljmp
stc
fs
es
rcll
jmp
dec
xor
int
mov
inc
cmc
cmpsb
xor
insl
sbb
pop
xchg
dec
fiadds
mov
dec
inc
shrl
outsb
fistps
iret
leave
pop
fistpl
negb
lds
pop
adc
and
imul
sub
adc
mov
shll
xchg
out
push
pop
adc
in
in
jp
adc
stos
sub
jbe
fists
jecxz
imul
mov
mov
out
pop
fists
push
movsl
popf
sub
cmpl
imul
add
sbb
imul
fninit
roll
sbb
aam
scas
sbb
cmp
ret
out
popf
gs
test
push
pop
sti
fists
dec
cmpsb
push
ret
mov
daa
fsts
mov
adc
andb
inc
int
repnz
cmp
shrl
sbb
jae
adc
aad
aad
cmp
inc
sbb
dec
mov
popf
mov
sbb
mov
cmpsl
push
out
mov
arpl
add
lock
dec
add
push
lods
mov
pop
pop
pop
fimuls
mov
xor
call
cltd
in
out
in
sbb
xchg
adc
xlat
aam
xchg
mov
pop
pop
sbb
xchg
pop
adc
or
mov
mov
fsubp
or
ret
mov
mov
arpl
shl
mov
sub
movsb
pop
jle
push
fsts
das
fs
les
sbb
mov
push
das
daa
mov
arpl
pop
filds
imul
movsb
lods
es
scas
popf
arpl
jnp
sub
cli
add
sbb
cmp
fildll
jmp
mov
fisttpl
jecxz
call
sbb
scas
push
dec
mov
lret
inc
lock
or
push
pop
ret
int
jne
jmp
jnp
mov
fadd
xchg
das
jle
push
popa
xor
ss
sub
ret
and
push
pop
cmc
or
in
jnp
add
lcall
cvttps2pi
or
adc
lock
lcall
sub
adc
push
ljmp
int
mov
stos
sbb
fdivp
dec
ret
dec
mov
push
push
sbb
xor
mov
xchg
mov
jmp
cmp
cmp
gs
lds
mov
inc
xchg
mov
jmp
jae
pop
dec
jmp
dec
mov
frstor
ljmp
mov
nop
xchg
in
fwait
lret
mov
fstps
test
ss
cltd
subl
ret
out
sbb
aad
gs
push
cld
jp
inc
ja
push
leave
jp
mov
jns
xor
pop
cltd
sbb
int3
mov
lds
jnp
jecxz
fwait
test
mov
xchg
loopne
js
cli
mov
xor
int
repnz
jle
jmp
out
push
sub
add
dec
inc
xchg
mov
cmp
pushf
orl
cmc
stc
inc
frstor
bound
mov
add
fisubl
xchg
das
pop
cmp
ret
sbb
mov
inc
popf
out
inc
aas
adc
inc
pop
neg
bound
mov
inc
out
repz
aad
xchg
movsl
xchg
sbb
jge
push
adc
insl
adc
mov
imul
mov
pop
inc
ds
imul
hlt
movb
pop
xchg
movsb
inc
stos
push
jne
jl
test
inc
dec
stos
or
repnz
movsb
xor
insl
sti
in
inc
imul
dec
jae
add
repnz
ret
out
sub
in
lds
jg
mov
or
pusha
std
fwait
mov
mov
test
cmp
jns
inc
lahf
add
rcrl
and
out
leave
stos
pop
mov
ret
pand
ret
mov
outsb
lea
outsb
jg
testl
xlat
mov
dec
ja
test
fldl
insl
decb
fmul
mov
jl
or
xchg
pop
lds
fistl
mov
les
mov
jno
cmpsb
ficompl
cmp
xchg
xor
mov
sbb
adc
insl
sarl
xchg
scas
adc
call
shll
fisubl
fidivrs
sbb
lock
ret
jmp
cmpsl
inc
jne
jle
jno
mov
int3
stos
push
stos
push
dec
neg
dec
xor
je
xor
sbb
mov
ret
std
fucomp
xchg
repnz
inc
xchg
aad
push
cmpl
fcomp
xor
arpl
popa
jg
outsb
cmp
cmc
cmp
mov
in
mov
add
shll
rorl
inc
scas
test
mov
mov
in
or
inc
ret
xchg
push
inc
xchg
movsl
push
xchg
data16
mov
xchg
jb
loop
cmc
add
xchg
in
sub
test
xchg
ss
repnz
push
ret
sbb
loop
iret
cwtl
aad
inc
mov
xlat
loop
cmc
fiaddl
in
xchg
shrl
mov
lahf
pop
fistpll
in
jmp
inc
jg
pop
xchg
fisubrl
arpl
jnp
fidivl
adc
in
pop
or
xchg
in
adc
inc
int
lods
loop
shll
ret
xchg
and
call
fidivrl
in
ljmp
jecxz
rcr
inc
inc
pop
pop
lods
cs
out
or
mov
push
mov
lcall
lea
inc
dec
pop
repz
inc
pop
xchg
push
bound
jmp
fiaddl
inc
sbb
cmc
push
pop
mov
inc
sub
xor
ret
fcmovnb
fildl
test
mov
inc
xrelease
inc
xchg
xchg
mov
jmp
ficompl
push
cli
rorl
mov
arpl
inc
jnp
jae
or
pop
add
xchg
in
adc
sub
aas
and
xor
xchg
lods
mov
jmp
pop
mov
lods
out
rorl
pop
stos
pop
push
mov
xor
push
fadd
js
decb
mov
add
mov
inc
push
dec
fcmovbe
les
lds
dec
rcll
mov
gs
mov
lcall
aam
pop
mov
add
and
sub
jle
pop
scas
mov
mov
mov
insl
lods
into
mov
insb
and
imul
add
mov
sti
dec
add
in
dec
fadds
cli
out
leave
xchg
or
pop
jno
add
mov
sub
sub
shlb
je
rclb
cmp
insl
sbb
adc
pop
jecxz
dec
fmull
fisttps
shll
fwait
inc
mov
iret
or
fsubrl
lea
ret
sbb
fs
clc
stos
mov
popf
in
out
data16
adc
inc
outsl
push
mov
mov
roll
lret
jmp
add
jecxz
call
inc
ljmp
jmp
sti
repz
or
xor
rcr
xlat
dec
dec
int3
dec
jo
stos
push
out
outsb
lret
es
ljmp
lock
xor
loope
xor
popf
fcoms
mov
cmp
jno
bound
orl
icebp
popa
mov
sbb
les
pop
cmc
loop
aad
jmp
imul
fadds
jecxz
inc
mov
insl
xchg
push
icebp
inc
push
fcmovu
cmp
xor
sub
jmp
push
mov
mov
push
pop
fwait
cli
cmp
inc
enter
jno
xor
inc
jae
jnp
fsubrs
dec
inc
ret
and
or
aas
cmpsl
and
imul
inc
ficompl
dec
mov
pop
rolb
and
inc
jne
fildl
fadds
loopne
xor
jecxz
inc
push
sbb
jmp
pop
ljmp
dec
and
sbb
in
mov
cmp
leave
sbb
jne
jns
in
jmp
xchg
add
les
mov
push
mov
fcoms
xchg
mov
lea
pop
lods
push
lock
addr16
pop
sub
pop
out
fistpl
out
ret
xchg
add
xchg
and
pop
cmpsl
cmp
jmp
imul
cwtl
cmp
sbb
repz
dec
xor
adc
addl
loope
out
lods
jnp
pushl
cwtl
push
lret
pop
dec
pop
sarb
fnstcw
rcll
call
mov
lea
jge
ljmp
cmp
mov
std
lcall
xor
jmp
sbb
push
cmp
fdivr
and
out
sbb
fistl
push
cld
pop
adc
lods
inc
sbb
pusha
sub
dec
bound
pop
mov
mov
add
pusha
sbb
sbb
jae
and
sbb
xlat
push
hlt
pop
jge
dec
mov
xchg
stos
xchg
jmp
sbb
pop
popf
mov
push
leave
js
dec
jae
lods
dec
enter
popa
shr
jecxz
jmp
cmpsl
xchg
pusha
aad
ficoml
rolb
negl
adc
andl
or
mov
jmp
dec
or
das
out
add
xor
sbb
jno
int
mov
out
add
xlat
push
fisttpll
frstor
arpl
stos
jmp
cmpsb
in
repz
enter
sub
push
pop
sub
lock
add
int
stos
inc
ret
pop
mov
mov
gs
les
leave
pop
fsubs
xorl
out
aad
arpl
sub
loopne
insl
mov
repz
cmp
sbb
mov
push
cmp
and
sbb
add
into
stc
fucomi
ficoml
popa
dec
sbb
mov
scas
or
xor
cmp
addr16
addb
adc
cmpsb
vpcmpgtb
lock
jo
jae
xchg
gs
xchg
filds
fstp
push
and
das
loopne
std
test
cmpl
sbb
pop
mov
jl
fsubs
sbbb
cmpb
cltd
cmp
xor
aaa
andps
fidivrs
insb
fisubrs
andl
lock
xor
outsl
push
and
fstps
inc
pushf
int
dec
add
andb
cmp
shll
inc
push
testl
stos
mov
lret
mov
ss
sub
sbb
imul
aam
ljmp
jb
aad
arpl
push
cmp
mov
lods
mov
xor
mov
stos
sahf
mov
rorl
outsl
lea
hlt
xor
jp
sbb
xchg
cmpsl
jbe
jl
inc
push
mov
scas
ret
in
cmpsl
dec
sbb
push
and
cmpsb
pop
mov
cmp
pop
dec
dec
xchg
ret
sbb
int
xor
pop
outsb
les
ds
or
out
or
test
mov
mov
jcxz
mov
dec
pop
xlat
add
mov
ret
mov
pop
mov
int
insl
xor
cmc
dec
je
dec
sbb
jl
or
ret
xchg
insb
mov
ficompl
sti
out
inc
sbb
xchg
cwtl
js
into
push
add
adc
xor
jae
mov
insl
ja
xor
sti
jns
in
xor
xor
aaa
fcmovu
jmp
push
lret
mov
and
jecxz
imul
stc
popa
jge
testb
data16
loopne
or
fistpl
add
dec
xor
cmpl
ret
mov
push
mov
inc
fnstsw
outsl
mov
loop
rcll
mov
scas
dec
dec
aaa
cmp
jmp
cwtl
push
pop
in
jmp
jmp
outsb
into
sub
mov
inc
push
fwait
scas
les
js
xor
jmp
test
mov
popa
pop
fcoms
sub
ret
stc
sbb
fisubl
and
daa
xchg
jp
fildl
push
movsl
pop
xchg
push
ljmp
dec
insb
popa
xor
lods
rcrl
mov
popf
loop
pop
out
ljmp
out
xlat
mov
fwait
pop
add
icebp
jmp
rcrl
imul
faddp
nop
dec
les
sti
daa
jg
lods
leave
in
movsl
xor
in
push
mov
or
push
sbb
dec
pop
cmp
test
mov
int3
xor
jg
addr16
cmpsb
mov
sbbl
inc
fisubl
push
pop
in
popf
pushf
ficomps
sbb
push
mov
jne
or
jno
and
mov
xor
and
mov
ret
mov
jmp
aam
in
ret
dec
mov
push
ds
xor
call
pop
add
pushf
pop
loopne
add
mov
or
loopne
daa
dec
data16
mov
mov
sbb
lret
fsubrs
push
mov
rcrl
xor
enter
pop
mov
pop
inc
mov
cmp
dec
xor
stos
fsubrl
push
imul
enter
fisubrl
stos
jecxz
stos
jbe
sti
dec
mov
out
sti
lcall
in
and
cmpsb
leave
jo
mov
inc
sbb
aad
jmp
in
cmpsb
outsb
daa
mov
jp
lret
mov
xchg
jp
sbb
iret
mov
test
xchg
les
test
sbb
clc
dec
xchg
fistl
cs
fsubr
sub
mov
ffreep
ljmp
pop
scas
jne
int3
mov
mov
shrl
test
imul
or
ficompl
cmpsl
jns
mov
pop
mov
push
add
shrl
aam
dec
outsl
jns
out
push
lret
cwtl
dec
mov
cmpsl
fsubs
xor
cmpsl
mov
dec
jg
enter
jl
fdivl
fnstcw
mov
nop
jl
dec
push
popa
cltd
dec
int
pop
jmp
dec
ret
inc
cmp
das
cmp
lea
out
mov
cltd
cs
jns
iret
div
jecxz
fstpl
adc
mov
cs
pop
dec
sub
push
pop
mov
shll
shlb
ss
cli
cmpsl
sti
das
fistl
xlat
repz
or
addr16
pop
dec
or
adc
stos
inc
mov
cmpsb
sub
push
insl
imul
das
fistpll
ljmp
aad
xchg
addr16
mov
fistpl
inc
fistpl
xchg
sub
sbb
divb
lods
xor
mov
lods
mov
mulb
inc
sbb
adc
shll
and
scas
je
adc
sbb
into
adc
arpl
pop
fcoml
xchg
inc
xchg
rcll
dec
shl
stos
je
lcall
add
repnz
aam
add
pop
test
cmovne
push
mov
imul
push
cmp
mov
ret
addr16
mov
push
pop
pop
mov
pop
cmp
pop
xchg
dec
pop
scas
mov
adc
mov
add
adc
push
push
jecxz
mov
aam
jns
pop
gs
fldenv
lea
pop
dec
insl
popl
in
negl
inc
popa
mov
xchg
sbb
jmp
cs
sarb
sbb
mov
xor
jge
sbb
xor
out
fidivs
dec
cltd
sti
push
in
jns
pop
mov
push
pop
inc
rcl
sub
sbb
pop
dec
push
mov
xchg
mov
cmpsl
lods
dec
sbb
dec
adc
and
rol
int
xor
dec
jb
outsl
mov
add
inc
lods
push
sub
pop
fmul
pop
cmp
inc
lret
ss
in
xor
push
movb
icebp
fdivrs
inc
lds
cmp
xor
push
mov
cmpsl
add
call
jne
mov
aaa
fcom
jecxz
leave
outsl
icebp
rclb
mov
inc
inc
imul
add
xchg
mov
ret
fsubl
lret
push
repz
mov
xchg
jnp
lret
inc
pop
xlat
aad
push
sub
xchg
lea
xchg
repz
mov
and
push
mov
cwtl
or
adc
jne
xchg
mov
mov
xor
mov
push
mov
jno
cmpsb
xchg
push
add
mov
imul
jmp
imul
xchg
jge
fdivl
xor
stos
scas
ljmp
push
fbld
popa
jnp
jmp
dec
pop
or
sbb
sarb
inc
sub
and
mov
cli
mov
mov
shrl
xor
ljmp
out
cmpsl
clc
mov
shr
int
mov
adc
inc
xchg
push
sub
in
popf
lret
shll
lock
pop
sti
jl
jnp
sbbl
fcompl
fbld
arpl
add
jg
inc
pop
dec
into
inc
mov
outsb
push
or
jmp
mov
movl
mov
fisttpl
andb
cmp
sbbl
pop
ret
clc
cmp
xor
mov
xlat
xchg
xchg
sbb
sbb
les
into
es
cmp
jecxz
fmul
add
pop
fwait
jmp
cmpsl
lds
mov
pop
out
sub
mov
out
rolb
pop
jmp
inc
mov
mov
pop
cmpsl
adc
jmp
dec
xchg
insb
in
adc
or
adc
in
roll
push
mov
ja
push
push
call
rcll
lods
shlb
ljmp
enter
cmpsb
sub
adc
insl
sbb
pop
xlat
test
fsubs
dec
mov
xchg
jnp
inc
push
rclb
or
adc
out
push
pop
imul
lahf
cmpsb
dec
mov
jmp
aas
jecxz
push
inc
lret
and
adc
mov
in
jmp
add
pusha
xchg
adc
popa
cli
and
and
pop
sti
pop
int
push
sbb
andl
sbb
arpl
xlat
xor
push
cltd
in
inc
popa
cmc
mov
in
rcr
mov
cmp
jg
dec
out
mov
mov
mov
mov
sbb
mov
out
cmp
push
sbb
imul
jp
xchg
push
stos
sbb
xchg
jne
inc
adc
xchg
addr16
push
xchg
icebp
jb
cltd
sbb
push
pop
xlat
jbe
dec
mull
aam
idivb
scas
pop
gs
icebp
sbb
mov
lret
push
fdivrs
push
dec
adc
cs
and
inc
icebp
shrl
cmp
mov
pusha
or
xlat
fsubrs
aas
sbb
xlat
leave
pop
jmp
rcrb
cltd
and
adc
test
push
fistpll
leave
adc
xchg
and
push
test
ret
fwait
sbb
hlt
mov
cld
rclb
gs
xor
enter
mov
out
insl
lock
sbb
cli
rorb
scas
aas
cltd
mov
inc
mov
stos
pop
ds
jge
fwait
ja
and
sub
push
jb
pop
jecxz
aad
push
lcall
iret
mov
inc
cmp
in
stos
jl
std
mov
inc
inc
mov
adc
xlat
pop
shll
add
inc
inc
dec
fadd
fnstsw
insl
xor
insb
aam
xor
mov
dec
inc
sbb
packssdw
xor
std
xchg
repz
push
out
dec
adc
les
insl
pop
xor
into
insl
int
mov
ljmp
pop
in
enter
decb
out
aas
popa
jno
test
outsl
mov
push
ljmp
sahf
dec
push
scas
fwait
lret
lret
sbb
fnstsw
popa
mov
addl
xchg
pop
cmp
cmpsb
cmc
out
xor
jl
aam
sti
mov
xor
shlb
stc
jns
or
aam
inc
roll
or
fsubl
xchg
notl
xchg
xor
test
pop
fxch
repz
and
aas
popf
mov
ja
push
ja
and
into
sbb
add
fwait
push
sarl
xchg
in
mov
shrl
mov
data16
ror
dec
test
idivb
sub
hlt
pop
loope
pop
nop
mov
xor
mov
pop
jns
lret
rcrl
dec
jne
ljmp
dec
sub
fbld
sbb
sub
ficomps
cwtl
fistps
pop
pop
addb
lods
fdivr
xchg
fs
pop
mov
mov
daa
popa
adc
outsb
fildl
jmp
add
loope
fsubs
dec
push
xchg
insl
mov
mov
movsb
mov
mov
loopne
pop
adc
jle
dec
adc
pop
das
out
shrl
xor
xchg
inc
loope
jno
test
adc
bnd
push
inc
cmp
in
outsb
adc
push
in
sub
cmc
adc
pop
and
call
jl
xchg
xorl
pop
inc
sbb
insl
jecxz
mull
cwtl
xlat
push
sbb
rol
sbb
pop
out
inc
jl
jns
dec
lock
out
adc
sbb
mov
cmp
cs
sahf
mov
sbb
notl
punpckldq
sahf
inc
test
sub
cmp
push
pop
dec
lds
movsb
aas
mov
cld
das
mov
fists
push
fisubl
roll
test
add
pop
jle
or
xor
jo
rcrb
ja,pt
sub
xchg
jnp
xor
addb
inc
sub
jecxz
push
sbb
ljmp
push
push
mov
scas
pop
sti
push
push
pop
xor
xor
xchg
add
mov
in
push
and
ljmp
inc
cmp
lret
enter
cltd
and
sub
aam
inc
cmpsb
test
in
cs
pop
fistl
and
pop
pop
push
mov
stos
add
fists
xlat
pop
push
mov
mov
lock
loopne
inc
mov
data16
jl
dec
int
xor
enter
xchg
lds
mov
test
call
push
xchg
mov
insl
jle
int3
cmpb
jmp
sbb
sub
fistps
pop
jmp
ljmp
imul
dec
fsubrl
ret
sti
xchg
aam
push
fistl
cmp
push
sbb
lea
or
mov
jle
pop
insl
push
mov
addl
push
jge
jge
rcrb
sub
les
enter
cmp
mov
aas
es
mov
sub
push
inc
xchg
ret
shr
jmp
repz
dec
add
cmc
xchg
and
jb
subb
and
fcmovnb
sbb
pop
ror
roll
scas
or
ret
and
repnz
sti
xchg
mov
into
jmp
add
ret
out
aas
jae
sub
push
sub
mov
mov
test
in
dec
inc
dec
fcmovne
sbb
pop
int
add
in
and
ficompl
sub
jmp
lea
mov
push
fcoms
jb
fisttps
ret
lea
jmp
pop
repnz
jmp
stos
mov
std
sbb
ror
or
sub
negl
dec
and
mov
stc
lret
out
xor
inc
ret
and
cmpsl
loop
cli
addr16
repnz
mov
hlt
dec
sub
gs
mov
pop
mov
mov
fucomi
bound
aas
insb
add
arpl
insb
mov
repnz
sahf
xchg
sbb
jmp
push
or
in
mov
pop
and
sub
fisubrl
roll
jb
in
mov
push
ror
add
jge
jecxz
sti
ljmp
add
mov
out
int
dec
mov
push
xchg
mov
and
imul
and
stos
cmp
dec
mov
enter
pop
sbb
sti
jl
sub
sbb
sbb
lret
aam
mov
loope
jp
adc
cmp
mov
repnz
cmp
add
cmp
fsubl
mov
scas
fnsave
xor
xor
xchg
popf
into
mov
sarl
push
pop
cltd
jbe
jge
addr16
jbe
mov
in
or
in
sbb
push
repnz
ret
pop
mov
sbb
mov
ret
imul
cmp
mov
inc
mov
fs
icebp
fsubrl
ljmp
mov
jg
push
add
add
loop
pop
ret
add
sti
lret
stc
xchg
mov
cs
out
fcom
mov
jecxz
jmp
add
inc
mov
add
mov
inc
loope
jle
or
add
cmpsl
push
mov
mov
add
dec
adc
test
mov
inc
mov
jmp
rcrl
cld
pusha
xchg
hlt
mov
jmp
aad
pop
jb
in
cli
repz
cmp
ret
xlat
add
cmpsl
jae
ret
pop
mov
ljmp
jnp
mov
mov
scas
ret
dec
mov
push
push
xchg
xchg
push
jl
inc
lods
mov
lcall
in
inc
or
dec
insb
jmp
inc
pop
xchg
enter
jp
xor
inc
and
pop
cmpsl
push
dec
adc
test
enter
adc
stos
das
mov
imul
mov
fisubs
sbb
das
int3
ds
int
fnstcw
stos
sti
fcoms
ljmp
bound
mov
aas
inc
inc
and
push
sbb
or
cmpsb
xchg
sti
and
sti
aam
inc
in
leave
fwait
ds
popl
mov
add
repz
xor
loop
xchg
mov
dec
pop
fdivs
push
int3
xor
loop
mov
test
jb
inc
sti
test
or
xor
jne
push
and
pop
push
in
fst
pop
ret
fs
movsb
cltd
aam
int
bound
dec
add
pop
xchg
sbb
mov
movsl
sbb
popf
sbb
sbb
flds
les
xchg
loopne
and
fwait
mov
pusha
lea
adc
cmp
es
std
mov
sahf
xchg
gs
inc
mov
adc
enter
data16
mov
jmp
xlat
sbb
inc
jbe
sbb
jbe
pop
pop
sub
mov
and
jp
cmc
pop
fnstenv
mov
ds
mov
std
sbb
shlb
mov
ds
xlat
bound
add
ror
int
imul
sbb
inc
sbbl
repz
lock
pop
popf
push
in
in
outsl
lods
xchg
in
and
mov
adc
inc
sbb
xchg
gs
pop
fldt
out
pop
gs
pushf
push
out
push
inc
mov
mov
mov
test
jmp
ret
movsl
cli
jmp
fmull
popf
bound
xchg
cli
sbb
fwait
and
jle
inc
pop
or
mov
aam
add
ljmp
aad
sbb
dec
gs
ja
ret
stos
int3
negl
frstor
sub
sbb
adc
mov
out
sbb
mov
add
dec
ret
xchg
cmp
orl
mov
push
out
pop
fisttpll
in
idivl
push
mov
stc
pop
das
lea
add
jne
mov
je
mov
cmc
in
idivb
adc
out
imul
aad
sti
cltd
aam
cmp
or
fldenv
xor
jge
in
test
popa
and
jae
rcl
sbb
fisttpl
mov
adc
std
jp
adc
es
fidivl
jae
pop
call
fldenv
pop
out
bound
xchg
mov
jp
stc
lea
xor
or
mov
mov
aad
adc
arpl
orb
ds
in
stos
add
ficoml
fadds
movsl
push
mov
xchg
ret
push
imul
lods
sti
xor
roll
sbbb
out
adc
aad
push
cmpsb
sub
lea
cltd
fiaddl
fdivrl
repnz
rcr
pop
sub
into
dec
xlat
aaa
pop
jae
cmp
dec
sbb
add
in
sub
inc
jae
and
inc
sarl
mov
arpl
lods
out
pop
fnstsw
sub
cmp
test
add
out
and
test
imul
mov
aad
push
jns
xorl
mov
lea
push
inc
aam
test
sbb
jecxz
lock
jecxz
xor
ret
aam
mov
pop
adc
adcb
divl
out
push
fwait
insl
lahf
aas
dec
cmc
popf
fucomp
fwait
add
scas
repz
lcall
dec
mov
adc
dec
imul
push
sarl
bound
and
xchg
push
xor
jns
pop
shl
inc
iret
ret
lds
aad
aam
mov
xchg
fwait
sub
in
mov
fnstsw
out
or
popa
jmp
jmp
popa
xor
cmp
cmp
jmp
push
lea
dec
ficompl
sahf
pop
filds
shrl
rcl
jbe
aam
call
sbb
mov
jno
ret
mov
imulb
ret
inc
sub
movsb
jp
addr16
icebp
sbb
sbb
pop
es
das
ret
iret
sahf
sbb
xlat
mov
loop
out
push
gs
and
pushf
lods
je
inc
inc
push
cmpsl
mov
push
dec
inc
iret
imul
lret
aaa
cmp
test
das
inc
xchg
das
fst
nop
mov
and
jmp
jge
fisttpl
and
adc
sbb
leave
ds
and
leave
jle
testl
test
cmpsl
mov
clc
pop
leave
mov
addr16
mov
popf
mov
leave
mov
call
imul
out
lcall
lret
mov
cmpsl
dec
cmpsl
dec
xchg
out
mov
fcmovnu
stos
repz
lock
test
sbb
sub
aaa
mov
ret
out
mov
imul
dec
int
pop
shrb
stos
mov
fdivrs
fisubl
sub
rol
mov
loop
fcompl
pop
call
shll
dec
sbb
incb
sbb
add
cltd
sbb
mov
add
out
call
mov
mov
into
fwait
ret
scas
push
loop
cld
mov
cmp
pop
test
addr16
imul
test
repnz
jge
adc
pop
je
jle
call
and
shrl
dec
cmp
rol
das
fstl
aad
test
push
repnz
in
aam
lcall
xchg
andnps
and
in
je
xor
sbb
int3
repz
divl
rcrb
inc
ret
or
mov
fisubs
inc
push
jp
jecxz
mov
shl
loope
shlb
ds
xor
in
inc
inc
fsubl
xor
lds
jmp
repz
fsubl
jae
xchg
pop
xor
stc
mov
sbb
mov
ret
xlat
rcrl
jno
in
mov
mov
es
aas
cmp
cltd
cmp
fldt
loope
rcl
dec
mov
test
js
xchg
rcl
fsubr
fistpl
sub
push
ret
ret
pushf
fisubrl
pop
xchg
mov
xchg
mov
std
ja
mov
test
jmp
adc
sarl
mov
dec
mov
ljmp
adc
dec
std
jmp
fnstsw
pop
mov
fisttpll
ret
les
in
test
inc
mov
inc
inc
cltd
xlat
inc
dec
mov
popf
dec
inc
jmp
pop
dec
ds
add
jb
icebp
inc
in
pop
jmp
xchg
cmp
roll
cmpl
lea
frstor
inc
or
ficompl
in
lahf
in
inc
in
fnstsw
xchg
inc
repnz
dec
push
movsb
fsubrl
addr16
mov
cli
jne
lret
loopne
or
loope
sub
sbb
mov
push
mov
jnp
rcl
cmp
les
imul
push
repz
jecxz
mov
fwait
pop
imul
jae
jno
push
pop
in
xchg
mov
pop
lds
and
mov
sarl
mov
sub
inc
add
stos
fwait
sub
and
sub
pop
popa
ret
sti
sbb
adc
ljmp
jns
push
jmp
fmuls
cld
popf
shl
dec
pushf
jecxz
jl
push
or
sbb
xchg
fimuls
mov
inc
lret
subl
scas
stos
jae
xchg
lea
pop
jno
and
sahf
add
xor
loope
fldl
mov
jecxz
xchg
jne
jmp
repz
clc
mov
inc
xchg
mov
push
inc
icebp
or
pop
lods
mov
sbb
out
xlat
push
in
testl
insl
mov
mov
rcrb
fiaddl
ljmp
inc
stos
sub
mov
sub
push
pushf
scas
jne
icebp
xor
jno
xchg
shl
call
jp
int3
lret
aam
push
and
sbb
inc
pop
mov
int
rcll
in
jnp
adc
add
cmp
dec
jo
or
jae
lcallw
flds
cli
popf
leave
jbe
sub
mov
adc
sbb
and
mov
lods
dec
sbb
cli
sbb
orb
stos
xchg
fcmovnu
push
inc
test
test
cwtl
fwait
stos
rorl
cmovo
mov
sbb
xchg
ret
xchg
int
xchg
hlt
ds
popa
out
je
push
dec
dec
aas
lcall
ss
in
das
aam
repnz
jmp
cmpsl
pop
mov
push
jl
subb
int3
inc
ss
int3
mov
loope
and
adc
lds
xchg
out
jl
fldt
xchg
jne
and
xchg
fcmovbe
fnstsw
ret
in
xor
pop
test
lcall
std
mov
cmp
adc
cmp
lcall
cmp
pusha
cmpsb
daa
or
xor
xor
sbb
test
cmp
jp
adc
rclb
mov
push
jne
jbe
jmp
movsl
jo
repz
nop
xchg
sbb
inc
xchg
pop
dec
push
int
dec
aam
xchg
sub
add
jne
ficomps
mov
jb
xchg
negb
popf
cmpb
int3
adc
movsl
cwtl
iret
addr16
hlt
adc
mov
add
mov
dec
pop
fmuls
sbbl
cmp
out
push
popa
xor
xor
mov
lds
dec
xchg
lea
sar
sub
xchg
mov
stos
in
pop
mov
mov
sbb
push
enter
cmc
out
movsb
cmpsl
fcompl
gs
in
cli
inc
mov
jge
imul
cmpl
loope
xchg
and
xchg
push
xlat
xchg
xchg
ret
mov
jmp
ret
inc
xor
sbb
mov
nop
dec
jno
xchg
push
dec
out
inc
in
ret
sbb
push
ja
in
into
mov
test
xchg
scas
jbe
dec
fistps
xchg
xchg
stos
add
ret
mov
xor
xchg
fdivrl
lock
fldcw
xor
xor
stc
sbb
xor
sti
mov
jmp
sub
ljmp
cmc
stos
frstor
add
into
jae
inc
fdivrs
xor
mov
push
mov
popa
mov
imul
xchg
out
std
push
jecxz
fwait
cltd
pop
bound
fnstenv
and
mov
lea
jnp
icebp
sbb
in
out
xchg
pop
jmp
sahf
out
pop
sarb
mov
and
inc
pop
fsubs
push
add
mov
inc
fiadds
pushf
mov
dec
push
mov
popa
dec
movsl
xchg
loope
loope
cli
imul
push
sbb
add
push
addr16
and
pop
cltd
loop
push
out
testb
inc
adc
fdivrs
pop
test
jp
inc
frstor
jmp
pop
lret
fcomps
mov
add
pop
add
test
out
aam
sbb
mov
pusha
jp
mov
push
gs
leave
xor
mov
push
loope
enter
cmc
push
mov
and
mov
cli
ret
scas
int3
push
fsubrp
mov
out
movsl
test
pop
mov
loop
out
xlat
ljmp
cmp
popa
mov
xchg
sar
addr16
pushf
in
imul
mov
loop
mov
cmp
lret
and
fcoml
mov
ja
or
xor
mov
sbbl
aaa
sub
push
mov
clc
sbb
in
stos
mov
bound
pop
pop
pop
jns
jbe
lock
inc
stos
insl
scas
pop
pop
xchg
mov
ret
lods
imul
lock
xlat
loope
cmp
jno
loope
jno
pop
mov
jno
repnz
cmp
lret
psubw
sbbl
rolb
std
cmp
out
sub
mov
ds
push
mov
mov
lock
xchg
push
jecxz
cmp
lcall
mov
mov
inc
inc
jmp
push
cmp
cltd
lcall
push
out
movsb
int
out
push
les
mov
fwait
push
fstpl
outsb
jmp
imul
cld
ds
mov
sbb
les
mov
ss
popf
ja
sbb
fldt
mov
lods
pusha
jno
or
dec
in
aad
or
movsl
sahf
stc
mov
xlat
adc
rcll
pop
adc
imull
and
hlt
in
pop
xchg
lea
negb
inc
xchg
sbb
jno
lret
push
in
inc
aaa
sti
ret
jecxz
clc
and
add
paddq
and
rol
sbb
fstl
fsubrl
les
jle
pop
enter
push
inc
in
lds
das
mov
xlat
pop
dec
aad
sub
popf
call
aaa
xchg
sbb
imul
mov
in
jb
sbb
jge
and
and
cs
loop
in
les
push
lcall
out
insb
cmp
aam
lods
stos
push
notb
sarl
leave
inc
push
inc
jne
push
orl
ja
popf
xor
in
xchg
sbb
push
in
pop
stc
imul
stos
into
mov
mov
les
int
inc
pop
pushf
xchg
mov
fisubrs
mov
dec
xlat
mov
push
xor
jno
insb
ljmp
je
cmp
mov
pop
fsubs
adc
ss
nop
fstpt
ja
imul
test
ds
es
fnstcw
sbb
aam
out
pop
sbb
rol
and
jl
jno
push
xlat
fldenv
cmp
stos
push
adc
fcmovb
sbb
repz
dec
aam
mov
call
fmull
sarl
lcall
fmuls
pusha
pop
rcrl
dec
ja
pop
cmp
sbb
mov
sub
xor
sub
push
lods
sbb
mov
aas
add
std
mov
xchg
sub
fisubs
xchg
push
xchg
dec
mov
out
sbb
push
mov
movsl
ret
xchg
adc
pop
xor
mov
xlat
or
rol
jecxz
dec
fldcw
push
push
jbe
stc
enterw
mov
clc
sbb
lcall
hlt
dec
inc
insb
lret
int
ja
cmp
fwait
push
jbe
rcr
mov
test
mov
sti
popf
ja
add
mov
js
fbld
mov
icebp
das
das
xchg
addr16
rorl
mov
add
les
mov
insl
lret
pushf
popa
gs
fiaddl
add
jmp
imul
inc
addr16
aam
lods
test
daa
loop
pop
pusha
out
popa
outsb
in
aas
hlt
push
ret
mov
inc
push
and
sub
int3
mov
xchg
jle
pop
push
aad
mov
cmp
out
lea
pop
pop
pop
sarb
jle
in
sbb
clc
push
insb
inc
int3
ds
xor
out
dec
jg
insb
nop
aaa
sbb
aas
sbb
aam
sti
mov
cld
adc
lods
xchg
push
and
ret
outsb
cld
mov
mov
lea
data16
lret
pop
push
cltd
cltd
addl
inc
daa
push
stos
movsb
push
rcr
xor
fisubrl
push
repz
insl
pop
popa
inc
pop
pop
addr16
fcomps
in
pop
dec
push
shl
repnz
idiv
out
lret
lods
push
adc
outsl
dec
and
stos
sub
mov
cmp
adc
dec
mov
inc
push
lcall
sti
push
mov
imul
sbb
cmp
fsub
insb
outsl
xor
or
ja
in
rorb
lret
adc
stc
inc
lds
sub
fmull
stos
adc
test
repnz
jle
push
jne
lds
xor
imul
insl
in
sub
or
fstl
leave
cltd
jbe
dec
dec
and
das
sbb
aam
ret
push
stos
cs
xchg
fwait
push
mov
push
dec
in
mov
aaa
sbb
jmp
mov
cmp
jecxz
addl
rcrb
cli
or
repz
ljmp
fistpl
mov
and
mov
cmpsl
pop
jmp
sbb
and
hlt
push
push
dec
mov
lock
sbb
movsb
add
cltd
fwait
mov
ss
jmp
add
scas
push
fs
out
mov
out
cltd
jmp
xchg
mov
inc
jg
and
sbb
and
inc
dec
sti
xchg
sbb
pushl
das
fnstenv
movsb
add
pop
int
inc
push
fistpl
mov
divl
fldl
xchg
xor
cmp
xchg
push
adc
rcl
and
lods
add
mov
out
mov
mov
scas
imul
ret
imul
and
enter
daa
pop
xor
add
cmpsb
cmp
sub
xchg
pop
xchg
aam
push
hlt
loopne
pop
xchg
and
and
iret
lea
jno
outsl
ljmp
pop
cs
push
add
sub
fists
mov
hlt
shufps
mov
scas
ficoml
stos
sbb
fnclex
inc
inc
sarl
lea
xchg
jb
int
xchg
xchg
subb
cwtl
popf
shr
in
mov
iret
pop
loopne
sbb
lret
loopne
xchg
aas
cmpsl
mov
pop
and
push
loope
dec
jno
push
shll
or
mov
dec
repz
and
jle
push
les
repz
mov
rolb
rcll
dec
jae
mov
xchg
lods
aas
xchg
mov
aam
stos
pop
imul
xlat
ljmp
xchg
sbb
sub
ret
jecxz
test
xchg
xchg
addb
xchg
and
or
adc
sbb
hlt
sahf
orl
mov
and
cmp
int3
bnd
dec
fadd
movsb
xchg
mov
or
push
mov
add
push
xchg
sub
popa
fwait
lds
sbb
ss
out
mov
cmc
push
subb
xor
xchg
push
fisubs
inc
jp
jne
inc
dec
jecxz
pop
xchg
xor
dec
inc
sti
mov
test
out
cs
push
pop
in
inc
repz
sub
stos
hlt
and
sbb
gs
arpl
fs
mov
mov
insb
scas
ret
cmpb
mov
inc
push
or
mov
in
xchg
pushl
pop
pusha
sub
fucomi
fwait
mov
mov
jg
in
das
popf
fucomi
mov
or
in
fwait
push
cmp
inc
sbb
sub
cs
cmc
loop
pop
roll
outsl
push
dec
xchg
in
mov
inc
xchg
in
xorl
ret
ret
fstpt
jno
or
sub
call
in
cmpl
inc
jecxz
adc
jno
fstpl
rcrb
test
inc
jge
loope
dec
shlb
jg
cmovae
mov
xchg
sbb
xlat
cli
jo
inc
cmp
and
bound
sub
arpl
loope
cli
jp
pop
fwait
cmp
pusha
push
xor
fstpt
cmp
add
bound
ret
add
xor
scas
and
dec
sbb
sub
xor
push
push
jmp
mov
add
fadds
je
sub
rcrl
pop
pusha
xchg
xchg
mov
jns
and
cmpsb
xchg
insb
sub
imul
daa
fsubrs
and
stos
sbb
mov
mov
dec
push
mov
cld
cwtl
fstl
sbb
mov
sarb
ficoms
dec
mov
cmpsl
jl
scas
fmull
rcll
pop
xchg
or
xor
movsl
arpl
and
fsubrl
in
add
ds
in
data16
mov
mov
sub
mulps
insb
pop
sbbb
arpl
rcll
movsl
stc
gs
setne
data16
xlat
mov
repz
push
jno
cs
jecxz
aam
jnp
aas
movsl
lea
mov
mov
aam
in
int
sar
stos
xor
fwait
shl
xor
in
lcall
cld
mov
adc
jmp
mov
mov
lods
ret
ds
fisubrl
int3
pop
bound
in
repz
mov
or
aam
js
cli
inc
shlb
cwtl
cli
das
xchg
xchg
mov
and
xor
add
scas
mov
or
pop
xor
jbe
mov
imul
inc
lret
jne
test
bound
cmpsl
lock
sbb
or
mov
insl
sub
inc
push
ss
lods
push
mov
std
xchg
mov
mov
sbb
mov
addr16
mulb
lea
fadd
cli
pop
xchg
mov
cli
aam
add
imul
icebp
int
cld
pop
cmp
fdivs
and
daa
mov
pop
mov
repz
sub
fcoms
stos
push
cmpsl
inc
jl
jb
in
aam
inc
mov
pusha
mov
das
popl
sbb
pop
lcall
int3
sub
call
in
clc
xor
pop
stos
aam
outsb
ret
insl
add
out
xlat
sbb
jl
jecxz
jl
xor
and
or
movsb
lds
cmp
addr16
imul
outsl
ficomps
repz
sbbl
sahf
xor
insl
pop
add
sub
push
loop
dec
push
mov
push
jne
fadd
cld
sbb
jns
stos
int3
enter
ret
sysret
test
jne
push
mov
mov
leave
jl
fstl
loopne
testb
stos
pop
and
pop
stos
jb
rol
int3
xor
pushf
xor
cmpsl
jne
cld
cs
dec
add
mov
push
ret
repnz
lret
pop
sbb
cmp
mov
std
push
inc
cli
mov
or
dec
inc
leave
pop
out
stos
xchg
inc
jns
cmpsl
test
cli
data16
clc
mov
leave
inc
jmp
lods
aas
inc
test
sbb
jp
sarb
fisttpll
adc
jns
aaa
xor
sub
adc
add
stos
xor
fcoms
rol
xchg
pop
sti
and
loope
lcall
fwait
xor
lret
mov
inc
shll
out
mov
xchg
xchg
imul
cld
insl
fidivrs
imul
xchg
xchg
push
xchg
das
push
sbbl
rcr
xor
pushf
test
xor
enter
dec
sbb
push
xor
dec
insl
shrl
mov
imul
mov
push
ljmp
cmpsb
filds
dec
cmp
fcmovnb
pusha
popf
add
add
fildll
in
inc
mov
mov
cmp
and
scas
mov
dec
fwait
jecxz
mov
jmp
outsb
ret
xor
insl
and
lcall
pop
add
shll
jnp
ret
in
sbb
ror
xchg
dec
ss
mov
fsubrs
jecxz
shll
stc
cltd
dec
or
push
jecxz
lahf
sub
xor
ret
rorl
shll
sbb
enter
xlat
xchg
fcoms
add
mov
iret
and
lret
add
lds
or
and
push
daa
notb
pop
aam
add
dec
fdivrs
sbb
xchg
addr16
or
dec
jg
jne
pusha
negb
imul
adc
arpl
xchg
ficompl
les
loop
enter
les
nop
movb
jp
sub
push
aam
fs
insb
mov
inc
enter
fsubrl
cmpsl
xchg
cwtl
iret
jmp
push
loopne
out
stos
add
test
push
addl
push
and
mov
rcll
inc
ror
cltd
jecxz
leave
dec
es
repnz
loope
mov
sbb
fsubl
outsl
imul
cmp
jae
pop
jb
xchg
repz
sti
mov
mov
outsl
pop
in
rcrl
pop
xchg
dec
stos
pusha
xor
sbb
push
scas
and
fucom
dec
je
sub
push
insl
int
mov
mov
ds
xor
dec
and
fsubrl
outsl
imul
push
cmc
or
pop
out
mov
outsl
pop
scas
shl
aad
sti
push
jmp
fneni(8087
xor
add
sbb
pushf
dec
sbb
aaa
daa
jno
sbb
push
add
mov
pop
mov
or
pop
shrl
adc
icebp
lea
roll
sub
jp
add
sbb
rcr
cmp
xor
in
hlt
enter
stos
pop
inc
mov
mov
imul
inc
cld
mov
jb
xchg
add
mov
gs
test
fcompl
hlt
fldlg2
mov
mov
fwait
pavgw
xchg
push
int
xor
imul
xchg
nop
mov
imul
daa
ret
cmpsl
and
add
sbb
jecxz
sahf
sbb
movsl
pushl
pop
xchg
cmp
sub
sbb
adc
and
in
stos
rolb
fdivrs
mov
sbb
mov
popa
fiaddl
adc
in
in
xchg
ljmp
pop
inc
lods
and
sbb
dec
je
xor
push
xchg
cld
sbb
std
int
lods
dec
fstpl
mov
push
dec
xlat
imul
or
dec
push
mov
leave
sbb
dec
fstpt
xchg
dec
adc
movsl
push
xchg
clc
mov
insl
cmpsb
mov
jle
mov
mov
lahf
fistl
call
roll
push
nop
pop
pop
adc
repnz
mov
leave
imul
cld
xchg
movsl
lcall
stos
push
frstor
aam
mov
sub
je
fwait
in
aaa
cmp
adc
sbb
xor
pop
insl
jnp
call
and
pop
icebp
jne
insb
sbb
outsl
cltd
xchg
xchg
es
pop
cmp
lock
pusha
lret
rclb
iret
sahf
iret
fstpt
flds
adc
lea
es
dec
fwait
adc
push
jnp
int
adc
ljmp
jp
stos
xor
subb
imul
mov
loopne
loopne
loop
adc
jb
mov
scas
mov
mov
popa
sbb
adc
arpl
inc
xor
lods
in
out
push
shll
xlat
mov
outsl
pop
int
mov
xor
dec
pop
mov
mov
inc
gs
scas
sub
pop
inc
mov
sbb
idiv
xor
mov
rcl
mov
push
mov
in
loop
xchg
dec
inc
mov
or
sbb
adc
fcomp
es
push
fsubl
repz
and
leave
lcall
fcmovu
testl
xchg
ffree
or
sub
int3
add
or
and
mov
mov
fldenv
mov
loop
fnstenv
test
je
jp
fsubs
cs
push
stos
mov
ljmp
cld
aad
cmp
mov
dec
inc
add
inc
inc
ret
flds
lea
jnp
mov
movsl
test
mov
push
xchg
and
sbb
jb
pop
ret
mov
in
loopne
daa
jno
and
nop
subl
cld
mov
aad
mov
int
loope
adc
dec
leave
adcl
sbb
scas
bound
idivl
aas
ret
lret
jl
xchg
aaa
mov
fldt
stc
ds
mov
out
sbb
scas
out
stos
jo
es
dec
imul
sahf
stos
mov
repz
mov
mov
scas
xor
ja
aam
inc
and
das
int3
cmp
jb
mov
xchg
or
scas
in
rcr
mov
popf
pop
dec
frstor
hlt
js
fldenv
shrl
aas
fwait
loopne
roll
cld
xchg
and
dec
test
cmp
cwtl
pop
incl
cmp
decl
clc
into
jb
jmp
popl
lea
in
or
pop
jo
inc
sbb
push
jmp
push
xchg
repnz
xor
out
in
shlb
imul
in
fldcw
loop
mov
push
xlat
xchg
add
adc
je
and
inc
mov
sbb
idivl
dec
push
mov
iret
sub
lods
fstpl
pusha
sti
outsb
jmp
pop
in
out
sti
lcall
and
push
push
jno
jns
lea
or
insl
mov
mov
fildll
hlt
dec
cltd
mov
popf
or
mov
jnp
fstpl
cmp
je
cmp
cmp
xchg
push
lods
scas
lds
fsub
shll
inc
scas
in
push
ljmp
inc
push
xchg
pushf
mov
aam
push
jbe
rcll
pop
out
mov
or
mov
fldl2t
or
test
xor
loop
cmpsl
inc
ds
push
imul
insb
inc
aas
pusha
popa
cld
mov
inc
jg
dec
jbe
inc
sub
mov
in
fcompl
xor
mov
xlat
sub
ret
lds
push
jbe
xchg
xchg
stos
pop
sahf
out
mov
dec
mov
ja
shrb
jns
jecxz
repnz
sbb
push
nop
ret
fwait
gs
lods
fisttpll
mov
test
cmp
jne
cmp
and
outsl
pop
dec
jmp
pop
gs
jbe
test
pushf
fs
cmp
xchg
ret
stc
imul
fisubrl
cmpsl
dec
xchg
cmp
leave
fidivrs
sub
inc
mov
iret
out
mov
sbb
mov
adc
in
cmpl
push
rol
mov
pop
pop
mov
aam
sti
dec
gs
inc
sar
and
lods
ret
pop
imul
mov
push
sahf
cmp
fadd
pusha
js
enter
aam
lods
out
shll
dec
arpl
clc
push
dec
xchg
cltd
data16
push
xchg
lock
add
or
push
mov
test
movsl
inc
dec
int3
sarb
outsb
sbb
sub
cmp
mov
stos
ret
and
es
in
testl
pminsw
test
inc
xchg
xchg
cltd
dec
xchg
push
push
or
mov
lock
shll
fwait
mov
in
adc
push
push
mov
mov
jo
lret
mov
inc
mov
cwtl
cld
ret
xor
xor
popf
mull
and
repz
gs
mov
in
imul
gs
je
inc
sub
fcmovu
ficompl
repz
fwait
mov
ljmp
pop
iret
sahf
push
daa
and
cld
das
xchg
cmp
subl
pop
or
in
mov
mov
call
lret
ds
dec
imul
fs
lcall
rcll
shlb
imul
outsl
mov
mov
test
cmp
lds
and
xchg
jae
adc
repz
gs
scas
loope
iret
xchg
xchg
data16
cs
cld
mov
lods
push
in
outsb
xchg
inc
js
xchg
lahf
dec
mov
push
pusha
jnp
call
or
popf
ss
jl
scas
fstl
jno
js
jae
pop
dec
andl
imul
mov
xor
mov
sub
xchg
mov
enter
and
lret
repz
xchg
mov
jecxz
insb
loopne
mov
xor
in
sbb
shll
mov
sub
rcrb
pop
xchg
mov
sub
and
xchg
sbb
jl
fidivrl
orb
mov
fmull
mov
jb
movsb
push
jns
inc
jb
insb
adc
jecxz
mov
rol
in
lods
mov
lods
imul
xchg
fsub
pop
jbe
sbb
mov
gs
xchg
sub
fcoml
movsl
and
cmp
outsb
in
loop
xor
lock
cmp
dec
ret
mov
imul
in
xorb
clc
lods
xchg
push
xchg
out
imul
test
aaa
ret
mov
shrl
leave
and
xchg
cmpsl
jno
push
jo
pop
mov
jg
jp
add
das
out
sub
in
mov
sbb
push
stos
xor
cmp
lock
dec
in
ljmp
xchg
popa
addr16
add
xchg
mov
or
jmp
sbb
lret
test
fbstp
and
xchg
adc
mov
clc
ret
loop
sub
mov
cld
and
xor
insb
push
lea
fmul
xchg
mov
hlt
dec
inc
int3
push
xorl
sub
jmp
sbb
mov
lcall
inc
mov
cmpsl
out
jl
subl
ljmp
dec
fistpl
push
xor
lds
out
fsubrs
mov
aam
rcrb
test
xchg
mov
iret
cmp
jecxz
movsb
iret
pop
push
imul
iret
out
xor
xchg
xor
sbb
icebp
das
push
int3
or
mov
scas
rorl
dec
movsl
dec
xchg
dec
es
andl
sbb
pop
in
and
dec
mov
in
stos
mov
aas
ljmp
lret
ljmp
xor
fcoms
fstp
jecxz
inc
out
mov
jecxz
mov
mov
push
scas
pop
pop
mov
pop
ret
add
inc
push
arpl
stc
jg
pop
lods
cmpsb
sub
aaa
xor
sbb
and
dec
inc
sti
lds
ds
push
fistl
imul
inc
icebp
lock
repz
ret
mov
roll
enter
aam
repz
jg
std
dec
fnsave
adc
mov
xor
xchg
popf
jbe
in
arpl
in
dec
fcomps
cmp
cld
cld
pop
xorl
loopne
add
and
stos
xchg
popa
or
cmpsl
iret
sub
scas
cmpl
sub
ljmp
fwait
dec
ret
popa
dec
mov
arpl
sbb
addr16
sbb
cmp
imul
sbb
sub
push
call
mov
jecxz
dec
fstps
mov
inc
mov
js
cs
iret
insl
sbb
sbbl
cmp
test
roll
fistl
mov
dec
fildl
mov
loope
out
push
sbb
mov
cmp
mov
testl
adc
nop
data16
mov
dec
cmpl
repz
cmp
push
mov
jno
fstl
xchg
jecxz
hlt
dec
scas
aad
popa
jecxz
mov
loope
push
push
iret
add
push
ljmp
inc
out
outsl
pop
push
in
das
and
in
fidivrs
sti
in
stos
and
popa
adc
es
bound
jp
lods
push
shll
ljmp
xchg
pop
mov
addr16
repnz
shr
pop
xchg
jecxz
mov
popl
xor
jl
jno
xchg
popl
mov
mov
jnp
lea
ret
ret
repz
jle
imul
bound
mov
fstpt
add
jmp
lds
xchg
test
xchg
enter
xchg
shl
gs
cmp
jp
insl
mov
into
loope
arpl
imul
fcompl
sub
mov
mov
test
adc
fcomi
and
ss
mov
sbbl
pop
repz
out
jg
fdivrl
push
xor
cmpl
cmc
lock
jge
cmp
and
mov
sbb
rcrb
jo
inc
jecxz
fcmove
xor
pushf
rcll
push
outsl
data16
shl
pavgw
popa
xchg
xlat
fcomps
inc
xchg
sub
jl
dec
notl
ror
pand
pop
das
jge
movsb
iret
mov
fcmovnb
inc
mov
pop
sub
cmp
in
imul
sub
cmp
stos
popf
enter
rcll
sti
dec
inc
repnz
lods
cmc
jno
out
fsubl
add
jno
jo
inc
scas
mov
rorb
mov
loope
data16
and
mov
jmp
jns
aaa
insl
mov
enter
sbb
pop
in
dec
cwtl
fistpl
ficomps
xchg
js
loope
xor
es
cmp
fcoml
int3
test
xchg
push
in
xchg
xchg
aad
adc
pop
mov
inc
xlat
sbb
sti
sbb
mov
divb
and
mov
inc
ljmp
stos
movsb
and
add
mov
jae
cmp
jno
popa
movsb
loopne
push
cmp
ffree
lock
push
ljmp
loope
lods
sar
lret
repnz
sbb
mov
pop
in
sbb
not
fdivrs
mov
ret
mov
in
stc
aam
mov
mov
push
adc
pop
jae
dec
leave
rol
pusha
push
fdivs
jmp
call
addb
cwtl
jge
cld
inc
push
sbb
imul
scas
mov
sbbl
loop
nop
push
sub
fisubrl
and
dec
cmp
push
js
push
xchg
loopne
sub
insl
outsl
data16
xor
sbb
sbb
add
and
in
sbb
test
insb
push
cld
dec
leave
jecxz
outsl
or
xlat
out
imulb
dec
and
movsb
mov
jnp
xor
out
jmp
fisubrl
sub
dec
fldcw
pop
push
fiaddl
fsubl
dec
dec
aaa
fwait
cmp
xchg
fucomp
sbb
push
sub
mov
or
and
mov
mov
ljmp
mov
adc
lcall
or
les
popa
add
incl
fwait
or
in
jmp
inc
int3
xor
sub
call
inc
jmp
lret
xor
sbb
mov
fbld
or
stos
js
in
mov
pop
mov
pop
pop
inc
ds
fmull
fstpl
fwait
imul
sub
cs
shll
jp
fmuls
clc
test
mov
std
push
loopne
shlb
push
sub
cltd
pusha
xlat
enter
xor
rcr
je
rorl
push
sbb
xor
ret
xchg
xor
dec
je
inc
pop
int
pop
scas
cmp
push
push
jp
sbb
push
fildl
mov
xor
sbb
cmp
lea
sbb
ret
cwtl
adc
push
fwait
out
loopne
mov
fwait
insl
cmp
imul
and
fsubrl
imul
mov
mov
loopne
mov
mov
fisubs
out
lea
add
shll
fsubp
andl
mov
xchg
gs
aad
mov
jl
out
ss
dec
fsub
jb
cld
js
enter
xor
lea
add
add
mov
stos
subl
pop
int
movsl
popf
sbb
fcmovnu
repnz
mov
out
fistl
xchg
adc
testb
in
test
inc
pusha
and
lods
popw
shl
mov
in
add
xchg
or
stc
jmp
pop
cmp
fxch
mov
push
jle
pop
mov
adc
sahf
inc
cmp
cmpb
in
clc
fstps
jnp
jmp
or
lret
mov
inc
movsl
adcb
or
mov
insl
push
cs
adc
jmp
mov
add
je
mov
jo
out
pop
sbb
test
loop
adc
adc
mov
gs
outsl
fistpll
insl
ret
mov
test
shrl
leave
andl
xchg
outsl
inc
sbb
insl
std
fisttpl
into
in
in
fmul
sbb
shl
jbe
gs
xor
sbb
std
stc
repz
adc
sbb
jne
adc
hlt
add
mov
mov
dec
sub
sbb
in
mov
xor
xchg
ret
adc
pop
dec
fisubl
fstp
call
testb
mov
out
scas
jg
xor
cmp
sub
sbb
xlat
inc
sbb
sub
inc
sub
cmp
imul
cmp
push
cs
popa
cs
xchg
dec
fs
insl
mov
arpl
popf
leave
dec
and
in
mov
sub
aaa
cmpl
clc
dec
mov
fildl
ret
ljmp
and
mov
push
inc
pop
sbb
inc
lds
or
inc
imul
and
stos
sub
dec
mov
and
push
test
dec
call
sbb
out
ret
gs
sbb
push
xor
pop
in
call
push
pop
jecxz
inc
xchg
xor
mov
xlat
sbb
jecxz
decb
aam
fstl
dec
mov
mov
ljmp
ret
test
out
sbb
push
in
cmp
testl
dec
xchg
push
in
ficoml
lcall
scas
ljmp
mov
pusha
ret
out
pop
adc
test
fs
ret
xlat
mov
leave
push
inc
and
lahf
xchg
cs
sbb
dec
pop
inc
mov
outsb
loop
dec
adc
lods
imul
add
mov
adc
pop
ljmp
in
dec
jge
mov
sub
cld
pop
cmp
mov
adc
fwait
xchg
in
jl
cmp
or
imul
lods
lcall
lcall
and
les
sbb
sbb
or
dec
ja
pop
push
jl
fisttpl
daa
inc
rcrl
ficompl
jl
dec
push
jbe
fistl
ds
aas
xor
iret
pop
out
jge
out
icebp
jmp
xchg
fisttps
push
or
daa
xchg
mov
aas
pop
sbb
jmp
xorl
inc
adc
hlt
pop
inc
xchg
pop
out
ret
xor
hlt
push
and
inc
fwait
sub
cld
mov
pop
ja
cmpsb
aas
pop
jge
mull
cmp
test
lock
inc
pop
jle
dec
arpl
sbb
ljmp
cmpsl
pushf
dec
sarb
jbe
push
xchg
or
pop
jg
adc
xor
dec
sbb
inc
sub
out
push
loope
bound
adc
ret
fdivs
imul
xlat
xchg
mov
inc
push
stos
aad
daa
rcl
loope
jmp
in
xchg
inc
movb
out
xchg
shll
mov
and
jmp
xchg
inc
or
stos
in
popf
and
inc
shll
imul
mov
rcll
xchg
in
aaa
insl
jns
dec
add
dec
je
lahf
jns
inc
in
jl
shl
jae
jnp
leave
ret
xchg
sbb
adc
icebp
sbb
xchg
jecxz
fstpt
out
addr16
xlat
mov
mov
addl
sbb
dec
addr16
mov
stos
cmp
test
jle
outsl
push
test
in
xor
loope
mov
mov
cli
lret
jno
das
in
mov
stos
daa
lds
sub
nop
dec
sbb
adc
dec
mov
mov
icebp
out
popa
pop
lcall
sub
repnz
fmull
and
sub
stc
outsl
inc
sti
fnstenv
xchg
std
inc
mov
sub
mov
pop
lahf
lods
pop
sub
cltd
mov
xchg
sbb
ror
pop
xchg
imul
hlt
and
fdivrs
ret
out
enter
inc
dec
cmp
cmp
fcompl
repz
push
rol
dec
mov
xor
and
push
pop
popa
cmpsb
popa
dec
enter
sahf
lret
dec
or
pop
push
fldcw
cmp
arpl
in
jmp
push
xchg
int
imul
push
mov
jmp
aas
fisttpl
or
sbb
adc
fwait
mov
mov
sbb
arpl
cli
mov
xchg
mov
test
xchg
fwait
xor
mov
adc
pushf
mov
sbb
ja
and
sbb
pop
jecxz
adc
push
icebp
cmc
sbbb
inc
cmp
stos
xor
sarb
push
adc
daa
adc
popf
in
push
pusha
jmp
push
sbb
pop
cmp
push
pop
out
xchg
mov
je
fcmove
pop
lock
dec
inc
test
fwait
cmp
jb
cmc
cmp
repz
adc
roll
fistpl
ret
ret
ljmp
push
enter
andl
popf
lods
scas
xor
adc
lea
jno
fsub
out
mov
mov
mov
adc
jno
xchg
loopne
lea
dec
aas
lds
loop
jecxz
mov
das
inc
ljmp
xchg
or
pusha
fs
jnp
inc
mov
out
mov
insb
rcr
mov
pop
xchg
xchg
fld
movsl
sub
lret
daa
inc
sub
mov
jno
int
push
mov
mov
arpl
sbb
stos
into
mov
mov
in
and
aas
adc
mov
popf
mov
cmc
jmp
mov
cld
jl
sub
inc
adc
inc
cmc
ljmp
jmp
ficompl
xor
inc
push
mov
shrb
sbb
ret
and
adc
rolb
xchg
mov
daa
jno
mov
pop
insl
addr16
sbb
jnp
sbb
loopne
xchg
dec
add
cmp
sahf
test
jmp
dec
xor
xor
inc
jecxz
dec
mov
inc
inc
and
call
aas
stc
sub
mov
cmp
inc
jns
sbb
sub
sub
push
mov
xchg
push
inc
pop
inc
and
std
mov
mov
adc
int
sahf
dec
dec
outsb
sub
jmp
in
je
fnstenv
cli
jl
mov
js
in
es
mov
loopne
xchg
out
and
jo
mov
lds
aaa
xor
imul
dec
jecxz
arpl
mov
fsub
push
imul
stc
and
pop
jb
or
pop
add
pushl
sbb
loop
insl
movsl
mov
dec
sbb
shrl
das
hlt
pop
mov
js
inc
lret
into
fstl
int
loop
sub
push
adc
pop
pop
fbld
xchg
mov
jns
imul
bnd
cld
dec
adc
enter
loope
loop
hlt
pcmpgtb
sbb
aaa
adc
sbb
jno
outsb
imul
sbb
push
ss
aas
mov
add
mov
and
cmp
in
jmp
pop
mov
cmpsl
stc
sub
mov
inc
ficomps
push
inc
xchg
mov
dec
stc
imul
scas
pop
sahf
ret
pop
sbb
xor
and
push
aad
xor
pop
jne
cmpl
cmp
xchg
imul
cmp
sub
inc
addr16
pop
neg
jge
fdivrp
cmp
sbb
and
adc
stos
std
aaa
sbb
into
stc
sub
xor
sbb
mov
xlat
and
pop
xor
ljmp
xlat
ficoml
cmp
lods
data16
mov
out
mov
mov
cs
jmp
push
cltd
mov
and
mov
inc
test
mov
jp
xchg
pop
movl
mov
out
and
outsb
dec
outsl
cmp
mov
pop
adc
shlb
sbb
inc
adc
loope
jg
mov
mov
jmp
dec
std
sbb
clc
mov
imul
mov
in
jg
mov
lret
jmp
and
movsb
icebp
jo
add
lahf
out
inc
sbb
ja
and
pop
push
mov
push
mov
mov
mov
push
mov
mov
aas
int
jecxz
sbb
fdiv
fidivl
ljmp
test
sarl
out
jnp
mov
jp
cmp
in
leave
adc
aam
jns
cmp
push
scas
aad
jg
inc
in
push
pop
loop
mov
scas
jmp
out
cmp
out
mov
push
cmp
icebp
sbb
mov
fidivrl
push
dec
in
mov
mov
and
mov
dec
es
lea
sbbl
iret
in
cltd
dec
pop
adc
xchg
inc
fistl
inc
popa
push
mov
xor
xor
es
jmp
je
cmp
mov
pop
out
je
xchg
inc
iret
push
int
gs
jecxz
adc
out
cltd
push
push
out
mov
dec
int
cltd
insb
mov
xlat
aad
imul
dec
addr16
cltd
mov
cltd
pop
repnz
es
or
repz
mov
cmp
mov
ss
int
sbbb
inc
mov
jno
incb
lret
add
fildl
pop
ret
xchg
cmp
mov
dec
mov
popf
mov
repnz
xchg
je
in
add
adc
and
jno
or
sub
fnstcw
ret
adc
out
cwtl
mov
shrl
mov
ret
mov
add
cmpsl
int
sbb
inc
imul
inc
lret
mov
add
movsl
dec
lods
lret
xchg
adc
inc
inc
jnp
dec
jne
cwtl
pop
xor
call
mov
dec
loope
or
sarl
jno
lret
clc
lcall
and
sub
push
stos
lds
mov
push
ja
insl
cli
mov
jle
push
ret
cmp
lock
mov
cmpsb
ret
stos
rcrl
xor
dec
push
xchg
inc
sbb
xchg
loop
mov
repnz
shll
push
decb
fdivs
imull
ror
xchg
fmuls
fldenv
jae
pop
ds
cmc
push
xchg
cmp
lret
adc
mov
in
push
jo
inc
xchg
pop
sbb
gs
dec
rcrb
mov
mov
jecxz
or
pushf
dec
je
jno
mov
xor
and
aam
rorb
inc
aaa
pop
mov
sub
mov
xchg
pop
cmp
xor
loope
push
pop
mov
test
fimull
in
xor
lods
xor
cmp
aaa
fiaddl
fsub
xor
xchg
cmp
xchg
repz
int
xor
mov
xor
leave
ret
inc
mov
pusha
ljmp
add
loope
iret
mov
xor
jmp
sub
push
mov
pop
xor
adc
stos
lret
fstpl
xchg
sub
out
sbb
insl
push
out
fs
dec
sub
mov
cmp
pop
in
je
popa
inc
clc
cltd
mov
in
pop
xor
scas
inc
mov
loope
mov
and
addr16
mov
ret
mov
mov
imul
inc
and
insl
xchg
lahf
cmp
pop
aad
cmp
ljmp
in
push
sub
scas
and
lahf
stos
out
hlt
dec
lret
push
jle
jns
stos
or
xchg
cmp
in
mov
cli
in
inc
inc
xlat
push
cmpsb
mov
pop
fidivs
cmc
xor
stc
mov
sbb
rcll
mov
pop
mov
xor
into
cmc
xor
jmp
xchg
dec
pop
push
fs
je
mov
lds
push
push
pop
xor
bound
fldcw
push
dec
sub
mov
inc
negl
xorb
inc
xchg
xor
adcl
nop
sarb
repnz
mov
add
mov
rolb
cld
cld
jecxz
shll
sbb
cmp
popl
ret
sbb
notb
jp
test
inc
adc
jno
out
andl
fistpl
add
inc
test
mov
gs
sbb
mov
mov
xchg
inc
adc
dec
cltd
xor
lock
out
xor
pop
mov
daa
mov
pop
fisttpll
into
dec
loope
cmp
or
mov
push
stos
xchg
pop
aam
aas
jae
push
jg
inc
push
arpl
sti
xchg
jne
sub
pop
jecxz
xor
ljmp
pop
ja
xor
adc
sbb
repz
shrb
mov
mov
icebp
outsl
xor
fidivs
mov
fisubrl
aas
lret
movsb
fcompl
dec
fiadds
dec
xor
xlat
inc
mov
mov
mov
dec
iret
fiaddl
dec
pop
xchg
mov
insb
jb
or
and
rcll
in
in
jle
mov
cmc
xchg
int3
xchg
out
cmpl
inc
inc
jbe
fcmovb
int3
std
loope
in
dec
ja
jmp
inc
and
xor
mov
and
dec
les
jns
outsl
sbb
or
aam
adc
xor
add
cli
in
xlat
in
roll
jecxz
inc
mov
jnp
aas
inc
push
hlt
shr
jae
gs
test
leave
fisttpl
xchg
xchg
jl
pop
int
inc
lcall
in
sbb
and
dec
xlat
adc
sub
dec
dec
push
lcall
jbe
ret
mov
les
push
add
mov
jl
cmp
daa
jecxz
inc
dec
out
ror
popf
and
bound
pop
lcall
push
xor
xor
movsb
das
mov
fdivl
xchg
mov
and
cs
ret
inc
test
fdivl
in
pop
push
call
or
pop
les
mov
popf
popl
fnclex
in
fucomip
cmp
mov
or
add
jecxz
lea
jmp
std
out
inc
pop
inc
fcmovnb
inc
mov
sub
cmpl
inc
jl
jge
lcall
mov
fbld
into
ljmp
loopne
aad
and
lea
adc
xchg
loopne
or
sub
jne
mov
push
jl
jmp
fwait
cmp
push
int
sbb
mov
jnp
cmc
and
sahf
inc
ja
paddusb
arpl
xchg
jo
gs
fwait
pop
ds
stos
cmc
mov
in
inc
jae
xchg
cltd
out
jle
cld
mov
push
cmp
cli
lock
lea
leave
ja
sub
mov
cs
in
scas
jge
jge
call
pop
inc
and
dec
nop
mov
or
mov
mov
lcall
loop
inc
fistpl
and
jmp
and
popf
iret
pop
cmpl
clc
lds
repz
inc
ret
sub
movsl
rorb
hlt
mov
test
inc
xchg
sub
mov
mov
rorb
js
inc
mov
stos
cltd
cld
test
pusha
sub
iret
pop
sub
cmpsl
xlat
jnp
and
xlat
pop
inc
inc
xor
frstor
fildll
shrl
lahf
xor
pop
roll
cmp
or
xchg
movsb
pop
ljmp
jecxz
aam
mov
pop
xor
leave
and
mov
dec
movb
push
clc
pop
imul
pop
fs
aad
pop
mov
pop
mov
insl
mov
call
sub
repz
icebp
repz
fwait
mov
scas
jp
inc
mov
sbb
test
dec
bound
adc
jp
mov
fildl
pushf
shll
adc
pushf
sti
stos
shll
dec
xchg
xchg
or
in
mov
push
xchg
pop
pusha
ss
lret
in
lds
xchg
inc
or
jmp
jno
call
mov
test
ret
cltd
jne
or
frstor
mov
sub
ss
lds
roll
out
add
rclb
icebp
insl
leave
jl
mov
shlb
jno
cltd
movsb
pop
jo
mov
test
ret
je
leave
repnz
xchg
mov
adc
cmpsl
cmpl
andl
notl
xorl
into
lea
mov
mov
ficompl
icebp
jne
fdivs
stos
and
jle
mov
ficoml
shrb
or
call
xor
dec
jl
sbb
test
mov
inc
sbb
pop
adc
fstpl
int
and
imul
push
sbb
sbbb
inc
test
mov
and
sbb
sub
les
mov
and
mov
dec
pop
popf
mov
mov
imul
xor
mov
jg
ljmp
push
adc
movsb
negb
adc
stc
mov
xor
cmp
inc
ja
mov
sti
dec
ljmp
pop
jne
push
pop
cmpsb
mov
pusha
fbstp
inc
data16
sbb
mov
adc
inc
mov
cmc
dec
lcall
or
lds
jae
andl
in
push
dec
fiadds
out
jne
int
imul
frstor
in
jecxz
scas
mov
mov
push
jmp
inc
fldt
cwtl
and
dec
es
cmpsl
mov
imul
int3
and
scas
hlt
cs
cs
add
js
pop
add
dec
pop
sub
arpl
stc
inc
mov
aam
shrl
clc
inc
add
je
dec
test
pop
pop
cmp
into
mov
insl
push
mov
pop
gs
out
dec
mov
lea
pop
cld
stos
sbb
pop
dec
pop
xor
jp
or
and
sbb
ljmp
dec
pushf
jl
dec
adc
dec
data16
es
popf
adc
mov
push
hlt
add
andb
daa
cmp
sbb
cs
test
jecxz
push
jl
jnp
pop
pop
mov
ret
shll
lods
adc
popa
dec
xor
dec
hlt
das
cmc
fmul
cs
jns
mov
std
and
neg
shll
lret
sub
or
mov
stos
pop
or
dec
rcr
leave
subl
test
sbb
xor
imul
push
mov
ret
add
jno
ljmp
inc
jae
xor
ficompl
mov
lea
xchg
inc
cli
or
mov
mov
mov
mov
sbb
call
lahf
stos
movsl
xor
popa
imul
int
mov
rorl
jge
loopne
jecxz
loop
xlat
enter
clc
cmp
cltd
sbb
mov
popf
insl
imul
jnp
xor
xor
jecxz
push
pop
ret
mov
hlt
sbb
imul
adc
xchg
out
cmp
fdivrs
fisubl
mov
jmp
mov
push
cltd
xchg
mov
movl
sbb
popf
xor
add
out
sub
push
ret
mov
out
jnp
fstpl
mov
ja
cmp
and
pop
and
out
aas
or
repnz
xchg
pop
outsl
movsb
lret
minps
inc
loopne
inc
insl
mov
lods
pushf
push
mov
fsubr
jb
decb
mov
popa
inc
ja
lcall
fs
mov
adc
mov
jns
cmpsb
out
adc
repnz
jp
mov
mov
xor
mov
jne
enter
cmp
arpl
pop
int
mov
enter
xchg
out
aad
pop
xor
inc
mov
movb
test
cli
out
frstor
cwtl
pop
mov
ret
inc
mov
ljmp
push
xlat
and
aam
insb
fidivrs
out
or
push
arpl
mov
xorl
into
add
pop
xor
js
es
mov
or
rcll
test
fimuls
xor
fwait
pop
or
xchg
cmpsl
and
jne
pop
sub
or
adc
test
jno
push
jmp
xor
pop
sbb
pop
xchg
enter
mov
shrb
out
jg
ljmp
loop
mov
sub
hlt
call
cmpsl
cli
sbbl
cmp
fsubr
add
mov
lcall
enter
incl
jmp
in
inc
frstor
sub
adc
inc
sbb
scas
jbe
out
out
divl
jl
mov
inc
pop
in
mov
jne
andb
pop
insl
inc
popf
cmc
aaa
cmp
mov
mov
std
loopne
jmp
int3
aad
int
stc
cld
xchg
mov
into
xlat
js
cmc
adc
xchg
xchg
sub
ljmp
mov
aam
mov
fs
lods
ss
push
imul
insb
mov
dec
ljmp
mov
aaa
movsb
call
pop
push
in
out
ss
cmpsb
inc
xchg
popa
stc
out
in
repz
ss
dec
pushf
cs
fcmovbe
pop
arpl
int3
sbb
int
dec
hlt
call
sbb
ss
icebp
sub
xchg
dec
xor
push
ja
jns
bound
int
mov
nop
mov
jmp
cs
adc
mov
pop
js
or
aam
push
je
cmp
sbb
lahf
mov
mov
incl
lea
add
xor
or
sbb
sbb
rcrb
sbb
cmp
jecxz
mov
inc
popa
dec
xor
ret
ret
pop
and
inc
ds
dec
pushf
dec
jecxz
in
inc
repz
push
call
jge
push
and
add
hlt
mov
loope
ja
jne
fisubs
rcrl
xchg
mov
ljmp
mov
int3
xor
fisubl
ret
lahf
pop
cmp
push
fcomps
ret
mov
inc
jno
ret
ds
std
rcrl
fiaddl
add
jae
cltd
pop
out
pop
mov
pop
sub
dec
jns
mov
dec
xor
xchg
mov
shll
rorl
daa
aad
xchg
out
pop
dec
xchg
sbb
ss
lods
adc
movsb
out
mov
add
in
add
xor
mov
push
ficoml
sahf
xorl
inc
leave
pop
cvtps2pd
add
fsubrs
xor
rolb
mov
lock
pop
jecxz
pop
mov
sahf
mov
adc
es
jl
dec
test
mov
andb
test
push
popa
ss
mov
sub
fstpl
popa
imul
dec
add
jmp
insb
outsl
test
test
jno
test
xchg
bound
jns
mov
outsl
sti
fs
jmp
out
fisttpl
gs
xchg
scas
fwait
mov
scas
fcomps
mov
loop
ffreep
push
imul
movsb
pop
lea
lret
aas
jl
sub
lea
jge
sbb
imul
fisttpl
or
les
fadd
cmc
insl
xchg
dec
outsl
jns
rcrb
push
sahf
addr16
ja
gs
in
sub
cmpsb
stc
out
movsl
pop
jmp
jb
or
xchg
shll
sub
add
outsb
lds
push
bound
ret
mov
aam
pop
jmp
dec
mov
jp
push
dec
cmpsb
inc
jmp
lods
fiadds
std
and
push
int3
jne
or
mov
iret
gs
cmp
mulb
xchg
je
xchg
dec
jmp
sub
pop
jo
cmp
sbb
and
mov
jno
loope
adc
push
rcrb
testl
add
adc
pop
pop
arpl
inc
mov
jns
xor
inc
fistpll
push
js
mov
mov
rcrl
sbb
xchg
push
xchg
xor
stos
repnz
insl
in
cltd
inc
popa
test
sbb
pop
pusha
call
push
mov
adc
in
mov
push
pop
xor
sarb
pop
or
adcb
sbb
pop
sbb
outsl
test
xor
cmpsl
test
sub
mull
xor
sbb
jg
xchg
or
mov
mov
fcomps
repz
cmp
lods
xchg
mov
aam
ret
inc
and
cmpsl
or
ret
push
mov
pushw
lock
dec
sub
xchg
scas
cmpsl
adc
mov
inc
add
mov
fiaddl
jecxz
adc
arpl
add
sbbl
inc
sbb
adc
inc
repz
inc
push
int
imul
push
or
mov
ss
mov
in
and
rclb
xchg
mov
out
movsb
push
addr16
and
ret
xor
mov
xorb
add
insb
xor
lods
aad
jnp,pn
leave
inc
int
out
ret
dec
cwtl
cli
bound
roll
in
jmp
bound
mov
pop
rcrb
scas
xchg
pop
call
xchg
pop
and
outsl
xchg
ret
dec
insb
or
xorl
and
mov
pop
in
xor
adc
out
das
aas
dec
cmp
test
aaa
in
cld
fcoms
enter
cmp
fcomip
mov
inc
mov
push
xor
push
xchg
pushf
insl
push
xchg
xlat
aas
push
out
mov
sbb
out
shrl
jl
adc
and
std
test
insb
jmp
fstl
pop
movsl
ret
or
sti
jecxz
mov
ret
push
sbb
lahf
jmp
mov
shrb
popa
imul
in
in
jmp
add
adc
xchg
pop
cmp
clc
xlat
jmp
cltd
cmpsb
jbe
mov
push
pop
xchg
std
mov
xor
and
loop
pop
xor
pop
pop
mov
fstps
xchg
and
mov
mov
inc
push
sbb
mov
xchg
pusha
sub
jne
xchg
cmp
loope
ret
jno
push
xor
ja
jne
xchg
ret
gs
sub
imul
cli
ds
push
insl
imul
ss
loopne
cmpsb
sbb
fisubrs
jecxz
sub
orl
dec
and
imul
es
mov
xchg
sarb
into
std
filds
fisttpl
into
jne
pop
pop
push
ret
add
inc
cwtl
aam
or
jnp
das
js
jecxz
int
sub
inc
jno
in
int
sti
dec
mov
ror
sub
inc
push
clc
push
pop
insb
cli
and
scas
xor
incl
dec
sbb
rclb
movsl
add
jp
xchg
repz
lock
lret
sbb
mov
mov
js
add
mov
adc
pop
or
xchg
aam
xor
hlt
mov
mov
push
jmp
jecxz
and
lret
jns
rorb
dec
fistl
push
inc
ret
mov
mov
xchg
mov
jle
fwait
aas
mov
aas
add
frstor
popa
imul
jae
daa
xchg
add
movsb
je
push
cmp
rol
mov
fwait
enter
dec
xor
loop
push
xor
mov
jmp
mov
add
push
adc
out
jecxz
sbb
in
ret
ja
jmp
xor
pusha
and
push
stc
pop
loop
pop
and
rorb
sub
pushf
in
andl
dec
adc
cmpsb
or
sub
jns
sbb
fdivrs
call
test
xor
repz
aam
inc
aas
sbb
and
push
stos
sbb
mov
inc
rolb
cmp
xor
enter
push
out
push
sbb
aam
pop
gs
jge
mov
imul
pop
gs
inc
jmp
dec
ffreep
dec
push
aas
push
out
imul
dec
mov
cmc
mov
aas
add
testl
xchg
cli
and
mov
dec
push
xchg
das
cmpsb
fnsave
mov
cmpsl
int3
stos
sti
cmp
outsl
jle
dec
sbb
add
jns
xor
pop
sub
inc
pop
fdivrs
xor
sub
xchg
pushf
aad
adc
fdivr
sub
adc
scas
pop
push
lcall
push
sbb
mov
aaa
jle
dec
sbb
jnp
mov
rorb
jp
stos
jl
pop
lods
jns
push
mov
inc
jmp
lahf
andb
fnstenv
jo
or
fmull
inc
cwtl
fistpll
lds
push
nop
inc
jnp
xchg
in
stos
jecxz
cmp
scas
jae
mov
sbb
lcall
imul
mov
mov
lods
sub
mov
fsubp
xchg
and
out
adc
and
add
fistps
lods
and
sub
xor
fwait
pop
push
xor
adc
adc
push
xor
mov
inc
test
andl
imul
loopnew
jae
mov
jge
nop
cli
push
jne
sbb
pop
xor
inc
mov
orl
loopne
lds
add
cs
rorl
pop
insl
push
inc
mov
mov
in
and
push
xor
scas
cmp
sub
mov
xchg
jl
mov
dec
jecxz
sub
push
lret
cmp
sbb
in
adc
je
and
and
add
and
mov
mov
in
sti
xlat
jmp
test
cmp
xchg
iret
or
lcall
fcomps
push
mov
mov
mov
cmp
mov
add
pop
inc
orb
jb
ret
push
sbb
les
and
nop
xchg
sub
mov
jecxz
jp
inc
mov
sub
mov
add
mov
xchg
mov
lcall
test
push
jecxz
cmp
add
cltd
or
and
insl
je
sub
or
cmp
push
shrb
insl
jae
lods
arpl
jl
pop
dec
cmpsb
xchg
sahf
sbb
xor
shl
enter
popf
loop
mov
fstpt
and
adc
jecxz
mov
xor
cmp
out
mov
inc
rcrl
dec
jmp
ficompl
push
test
jecxz
fcoml
popa
and
dec
sbb
and
push
pop
loopne
aam
repz
icebp
xor
and
dec
add
fwait
popf
sub
jns
ljmp
cmp
jns
sub
je
xchg
fwait
push
jnp
jae
les
fnstsw
jmp
inc
lds
mov
mov
pushf
fcoml
pop
mov
les
xchg
ss
insl
jns
pop
pop
sub
popa
repz
pop
pop
fnstcw
stc
aaa
arpl
pop
ja
ljmp
lock
fucomi
insl
inc
mov
sub
fcomp
fcompl
lods
sub
into
push
ds
fldl
push
fnstsw
add
out
or
stc
sbbl
xchg
jne
xlat
and
pop
int
scas
cmp
fcoml
lods
scas
pop
sub
jb
ret
push
fdivr
repnz
cmpsb
dec
dec
fwait
push
rol
std
in
out
sub
mov
andl
mov
or
and
cs
mov
sbb
int3
and
fadd
cmpsl
test
jne
jmp
xchg
and
roll
insl
sbb
dec
lds
sbb
popa
into
push
aas
cltd
lds
repnz
repz
pop
inc
test
and
sbb
bound
ja
xchg
into
in
mov
jmp
aas
cmp
mov
cmp
sub
sbb
loope
mov
clc
xorb
lret
sbb
cmp
push
jno
xchg
scas
sub
push
fnstcw
aas
call
and
imul
popa
ja
mov
pop
gs
adc
popa
fwait
arpl
push
add
cli
mov
adc
orl
imul
jbe
jle
add
sub
mov
mov
pop
fldenv
xor
lahf
imul
fcoms
cwtl
imul
lcall
into
rcl
iret
repz
fdivl
fstp
shll
jnp
cmp
mov
in
adc
or
lcall
push
arpl
jecxz
and
mov
jecxz
inc
int
les
imul
lock
xor
call
cld
sbb
je
and
ja
mov
pop
push
fldl
sbb
adcl
sti
jmp
cmpb
sbbl
ljmp
shrd
push
pop
jg
call
or
dec
adc
xor
ret
jmp
xchg
jae
dec
fwait
mov
jmp
rcr
mov
insb
int
fstl
mov
out
std
cltd
xlat
stc
dec
fs
jecxz
ret
jg
inc
xlat
enter
std
sbb
es
sbb
pop
inc
sbb
fucomp
mov
pop
sbb
mov
insl
sbbl
insl
and
adc
or
popa
in
loope
loope
repnz
inc
movsb
sarl
addl
call
or
mov
test
stos
sub
sbb
sbb
xchg
je
push
sub
sti
mov
cmpsl
popf
pop
fimull
adc
in
add
addr16
jmp
fdivrs
roll
xchg
pop
std
lods
test
pop
das
fsts
popl
sub
sbb
xchg
sbb
pushf
into
dec
popf
fwait
les
and
div
in
pop
inc
xchg
jns
pop
adc
imul
loope
add
and
xor
lret
rcrl
mov
out
adc
sbb
jne
sub
or
leave
ret
int3
inc
fisttpl
adc
in
mov
mov
ss
lret
fstpl
dec
pop
or
sub
cmp
mov
rcl
mov
ja
ja
jmp
mov
xlat
aam
lods
negb
cmpl
mov
push
test
cmp
bound
into
outsl
xchg
xchg
jmp
xchg
pop
jg
mov
sbb
xlat
in
imul
jecxz
gs
inc
cltd
std
mov
mov
sti
addr16
push
hlt
lods
call
addb
inc
sti
jp
aam
pop
test
jg
sti
dec
and
mov
fcomip
xor
mov
sti
dec
sub
xchg
ljmp
bound
sub
aam
add
jae
ja
addr16
and
cmp
out
jmp
cmp
sub
push
pop
lods
and
sbb
dec
icebp
cld
neg
xor
in
outsl
and
xrelease
pusha
dec
ljmp
hlt
sub
xchg
test
ljmp
sub
icebp
rcrb
dec
bound
push
icebp
mov
mov
push
sarb
lods
gs
cmp
and
push
mov
dec
sbb
or
push
cli
mov
fsts
aas
ljmp
in
xchg
xor
push
repnz
iret
rclb
shl
jae
orb
mov
jb
sbb
icebp
js
fstps
mov
arpl
push
ds
mov
jnp
sar
in
int
aas
inc
pop
adc
test
lahf
ret
or
push
inc
inc
das
les
xchg
jmp
pushf
mov
clc
xor
stos
pop
mov
push
pusha
dec
in
jnp
nop
mov
pusha
popf
and
cltd
pop
insb
xchg
iret
into
dec
adc
inc
lds
inc
imul
cwtl
inc
pop
and
pop
xchg
inc
lods
push
cmpsl
clc
test
jns
add
xchg
cmp
or
xor
imul
cmpsl
and
fsubl
xor
ficoms
fldcw
or
fdivrp
aas
pop
js
mov
bound
push
out
repz
outsb
sbb
inc
ss
xor
insl
loope
mov
lods
xchg
mov
mov
fbld
push
fnstcw
popl
mov
loope
sbb
test
xchg
into
insb
mov
pop
out
pop
xor
mov
mov
bts
popa
adc
cmp
shlb
lcall
adc
stos
dec
pop
mov
es
dec
fdivrl
push
push
add
ret
insl
lret
fdiv
fcompl
fcoml
push
cmp
pop
xchg
fstl
lret
jno
push
pop
aam
cmp
fwait
lret
push
sahf
xor
rcl
cld
mov
xchg
push
imul
adc
add
insb
lea
cmpsl
aas
sub
pop
push
test
add
faddl
dec
faddl
inc
push
ljmp
dec
xor
pop
sti
dec
leave
fsubs
push
nop
mov
dec
pop
in
cmp
jl
mov
insb
cmc
dec
sbb
mov
jmp
or
ror
loope
pop
jmp
jmp
inc
ret
xorl
mov
test
mov
mul
sbb
repnz
inc
fildl
sbb
inc
mov
mov
and
dec
ss
fcoms
in
and
xchg
icebp
pusha
fwait
dec
fidivl
jae
mov
push
stc
mov
sbb
jle
jmp
cmp
in
sbbb
stos
adc
sub
hlt
push
popa
addl
pop
sti
sbb
sbb
fucomi
inc
push
push
push
insb
out
testb
loopne
xchg
cmp
aas
imull
lock
cmp
or
xchg
dec
inc
xchg
rorb
jns
es
sbb
jo
push
and
sub
sti
push
rcrb
out
andl
leave
das
repz
imul
inc
pop
mov
inc
sbb
insb
fstpl
xchg
or
or
popf
js
inc
push
pop
or
aam
adc
stc
inc
lea
jae
adc
xchg
in
insl
fdiv
movnti
xor
fwait
fwait
loope
mov
je
dec
pop
sarb
cltd
in
test
xorl
cmp
mov
movsb
bound
frstor
sub
sub
or
lahf
mov
loop
fisttpl
or
aaa
jmp
pushf
mov
sub
push
xchg
dec
or
sbb
out
cmp
mov
fucomi
fistps
jl
sbb
adc
push
jnp
int
xchg
mov
xor
call
sbb
cmp
fwait
pop
jecxz
clc
movsl
out
imul
sub
scas
jb
fmull
lods
loopne
ljmp
add
sbb
test
inc
ficomps
ror
xchg
mov
lcall
das
por
adc
push
leave
in
fimuls
or
dec
sbb
fwait
or
leave
and
sbb
dec
push
aaa
or
pop
scas
cmp
mov
loope
cld
inc
mov
sti
pop
push
dec
movsl
mov
xor
cmp
ret
aam
mov
ds
sbb
push
pop
pop
addr16
xchg
mov
pop
cmp
mov
cmp
push
and
or
gs
out
idivb
mulb
inc
inc
xchg
and
push
pop
test
jp
xor
fstps
icebp
das
stc
inc
es
push
xchg
stos
xor
or
loope
xchg
addr16
lahf
int3
ficompl
in
sbbl
cmpsb
cmp
mov
test
pop
ret
ret
jmp
pop
jne
rolb
incl
arpl
add
arpl
aam
jl
jp
cmp
push
mov
fcoml
ret
and
clc
in
fildll
ljmp
inc
fmul
cwtl
xchg
rcrl
sub
dec
test
cmp
mov
rol
ljmp
jmp
fnstcw
nop
addr16
mov
mov
pop
lret
out
jne
dec
jno
cmpsl
rcll
arpl
sbb
adc
sbb
pop
roll
repz
imul
pusha
cmp
int
rcll
jecxz
adcl
test
xlat
or
xor
mov
iret
mov
pushf
pop
pop
jo
aam
stos
mov
ret
or
das
imul
ficomps
pop
cld
lret
pop
cmpsl
pop
adc
inc
push
mov
sbb
inc
aas
push
push
imul
filds
cmpsb
ljmp
loopne
lds
cli
hlt
or
test
or
jl
add
sbb
insl
pop
imul
inc
xor
sub
insl
hlt
inc
enter
dec
stos
mov
sbb
bnd
add
cmp
sbb
pop
xchg
jmp
push
push
lea
cmpsl
mov
jmp
sbb
leave
lret
jns
ja
sub
imul
mov
out
jno
sbb
pop
xchg
scas
mov
aam
rorl
fnsave
sbb
pushf
cmp
xor
in
iret
inc
insb
ljmp
repz
loop
inc
lret
gs
test
jmp
mov
push
iret
or
sbb
rcrb
add
xchg
dec
add
ret
dec
inc
push
bnd
pop
repz
imul
lahf
dec
stos
clc
ja
mov
jmp
pop
pop
inc
fwait
sarl
xor
inc
popf
rcr
ljmp
adc
scas
dec
nop
pop
sar
cmpb
orl
mov
pop
sbb
mov
mov
das
sti
mov
sub
xchg
mov
pushf
mov
pusha
mov
in
fwait
sub
cwtl
xchg
or
xor
add
jmp
ror
sbb
int
adc
sbb
xor
mov
dec
mov
ljmp
cld
sbb
inc
push
dec
gs
and
jae
mov
inc
xchg
sub
test
jmp
xor
dec
and
fsubrl
das
mov
stos
jge
aad
mov
push
sbb
sub
clc
test
add
xchg
mov
stc
rcrb
inc
xor
ret
rorb
jp
sbb
test
mov
lahf
aad
div
in
fsubl
sbb
lods
icebp
inc
pop
shl
or
jg
push
aaa
fistl
mov
jl
jp
mov
daa
xchg
jne
in
adc
lods
andl
stos
insl
fistpl
scas
mov
fucomp
and
adc
repz
mov
iret
inc
ret
fwait
mov
mov
pushf
jnp
aaa
mov
loop
push
cwtl
and
xor
jecxz
das
hlt
jle
jecxz
cmp
adc
mov
int3
cmp
fwait
mov
adc
and
mov
mov
mov
dec
jb
or
inc
subl
and
add
ret
xlat
in
pop
mov
push
mov
and
dec
in
dec
mov
xlat
mov
add
mov
out
aaa
lret
dec
push
int3
dec
push
andl
inc
bound
jmp
push
xchg
scas
push
enter
in
jmp
pop
mov
test
ss
test
mov
push
arpl
mov
jecxz
jmp
jle
jg
sub
adcl
std
shrl
pop
fistpll
notb
lds
and
inc
jge
das
faddl
rcll
cld
in
mov
dec
pop
nop
sub
pop
mov
pop
xchg
dec
enter
push
insl
lea
fildl
mov
test
xor
add
or
mov
and
xchg
mov
xor
das
mov
nop
pop
cmp
jne
or
sbb
cli
push
insl
call
into
lods
in
jns
jle
adc
push
mov
jle
dec
dec
iret
fistpl
and
scas
dec
push
xor
cmp
and
arpl
xor
dec
cmp
shl
push
sub
pop
jle
pop
inc
jmp
in
fisttpll
xor
add
adc
mov
mov
dec
cwtl
mov
pop
and
push
les
in
mov
fstpl
xor
add
jmp
mov
cmp
into
sub
out
sti
fcomip
cmpsl
mov
or
fnstenv
push
ss
inc
ret
call
fcoms
ss
jno
inc
je
mov
rorl
jecxz
popa
pop
jae
mov
jb
mov
sti
xor
or
mov
hlt
das
fiadds
gs
and
jno
sub
push
inc
lds
lods
adc
and
cs
push
add
add
popf
sti
ret
sbb
int
cmp
mov
fldenv
dec
pop
mov
pop
roll
iret
jl
mov
dec
mov
or
das
pop
popf
out
insl
xchg
pop
icebp
dec
mov
and
aaa
inc
pop
fldt
dec
or
insl
lret
and
ds
cltd
std
in
sbb
and
pusha
loopne
in
int3
dec
dec
mov
jmp
ljmp
sub
pop
int3
mov
mov
pop
sbb
xchg
bound
lret
mov
add
subl
xorl
and
cld
test
and
sti
int
addb
rorl
xchg
loope
xor
push
movsl
xor
mov
in
mov
lock
int3
rol
mov
int3
pop
lahf
in
test
pop
enter
dec
and
cld
mov
jns
daa
lds
scas
ljmp
lds
sarl
loop
jmp
int
fcmovnbe
daa
mov
mov
cmp
pop
adc
lods
aas
mov
xor
movsl
out
fwait
out
inc
jp
rcr
dec
cmp
lret
mov
inc
pop
inc
mov
jmp
jl
je
sti
lods
sarl
jmp
sub
cmc
jnp
xchg
xor
xlat
call
shrl
dec
xor
scas
jb
icebp
jne
js
and
lods
sbb
daa
test
lods
fcmovu
into
lret
fsubrs
cld
repz
mov
sti
sbb
lods
jne
jae
jnp
les
addr16
xorl
push
nop
in
xchg
adc
push
je
mov
ret
popa
jecxz
lcall
aam
and
add
sub
adc
gs
aam
adc
leave
xor
jb
lahf
jge
hlt
push
sbb
lds
fidivrl
sbb
jns
das
sbb
test
rol
jl
repnz
outsb
pop
popf
out
dec
stos
inc
cmp
mov
dec
fstpt
adc
push
lods
fwait
pop
ret
or
jbe
and
fwait
and
sbb
mov
sti
movsl
or
sets
mov
call
jnp
pop
dec
fistpl
mov
lds
cmp
addr16
cltd
ret
into
addr16
shl
sbb
xchg
aad
xor
fldt
mov
int
xlat
sbb
lret
fs
das
aam
xchg
out
ljmp
not
mov
loope
push
pop
xor
out
xlat
inc
dec
orl
aas
dec
shr
inc
add
jecxz
xlat
sbb
dec
in
test
test
pop
test
testl
fistpl
inc
sbb
xchg
jl
mov
insb
or
bound
shlb
ss
jp
std
xchg
enter
xor
sbb
ljmp
cmp
xchg
sti
popa
jge
sbb
sbb
movsl
addr16
loope
in
ficomps
dec
xchg
sti
jbe
testl
test
movsl
sbb
xor
out
mov
sbbb
repz
and
sbbb
shl
push
subb
dec
test
roll
pusha
sbb
sti
adc
mov
and
lahf
and
or
or
scas
ret
xchg
cld
ret
cmpsb
cmp
lahf
rol
and
mov
sub
lds
iret
jns
lret
sbb
mov
test
xchg
insb
sbb
mov
and
mov
jno
adc
fcompl
pusha
insl
push
gs
mov
dec
int3
mov
fisubl
in
outsb
ret
dec
fisttpll
sbb
arpl
dec
leave
fwait
dec
roll
cltd
mov
test
push
sbb
js
ret
es
jg
xchg
stos
daa
ret
and
inc
dec
mov
xorl
dec
inc
xor
push
push
jmp
mov
and
fwait
dec
xchg
pop
xchg
aaa
xchg
dec
cmc
mov
jp
xlat
adc
cld
sub
imul
xor
mov
sub
push
or
clc
fdivs
or
inc
pop
push
int
pop
or
xchg
sbbl
in
in
ret
inc
bound
frstor
adc
adc
lea
sbbb
repnz
xchg
faddl
adc
andl
and
clc
jb
lcall
iret
aad
cmp
cwtl
dec
cmp
fs
incb
addl
mov
aas
adc
jno
push
in
inc
pop
mov
pop
push
sbbb
jae
out
addr16
dec
rol
mov
and
xor
xchg
jno
test
repnz
test
cmp
ret
sub
ljmp
xor
fadds
mov
push
adcl
mov
inc
outsl
into
mov
push
mov
sub
dec
fidivl
iret
imul
hlt
das
pop
xchg
mov
je
mov
loopne
push
xchg
pusha
mov
pop
test
ds
add
dec
mov
mov
fisttpl
clc
pop
jo
pop
and
addl
incl
mov
outsl
fs
imul
imulb
xorl
jnp
test
in
mov
rorl
pop
sbb
jnp
jge
ja
inc
xchg
jne
cli
mov
std
mov
dec
leave
stos
das
dec
adc
mov
mov
mov
xchg
add
rcl
mov
fldt
sub
ret
enter
cmpsl
dec
dec
repnz
mov
jmp
xor
push
cmp
fcoms
dec
lods
insl
jge
pop
xchg
mov
mov
imul
cmp
dec
sarb
leave
das
mov
es
fnstenv
into
jnp
das
test
cmp
dec
inc
mov
mov
out
cmp
ja
jmp
jmp
ja
mov
lret
fistps
in
jno
mov
out
dec
ss
push
inc
jg
int
movsl
fildl
jbe
les
outsl
xor
les
fldt
daa
pop
daa
push
fadd
ret
mov
loopne
bound
mov
jl
ret
mov
jae
push
cmpsb
mov
mov
ret
xorb
pop
cmpb
push
repnz
cli
stos
xor
mov
lds
shll
mov
out
ss
in
cli
cmp
fwait
ja
dec
mov
ret
jecxz
jo
xchg
call
scas
and
dec
ret
arpl
leave
jmp
sti
xor
xchg
incb
pop
dec
mov
sub
ud1
or
outsl
rcr
das
mov
jmp
lods
lds
out
mov
mov
cmp
neg
fwait
jnp
dec
addb
test
push
fadd
bound
sub
xor
cmp
push
fs
inc
jg
stc
xor
fs
lcall
add
xor
test
push
xchg
xor
ljmp
mov
outsl
cmp
sub
adc
fprem1
push
jnp
xchg
popa
xor
fistps
fsubrl
std
mov
outsl
lea
sbb
pop
movsl
xor
or
test
fisubrl
jne
shlb
shll
insl
mov
and
icebp
mov
mov
cltd
mov
lods
dec
mov
lahf
sbb
mov
imul
loope
jae
aam
push
inc
fldenv
sti
imul
ret
mov
and
xchg
pop
jnp
xor
pop
nop
mov
fimull
lret
push
jns
test
jns
pushl
sbb
gs
shll
or
sar
ficoms
mov
mov
cltd
inc
mov
cmpsb
dec
pop
xchg
stc
sub
pop
inc
add
js
loopne
push
jp
mov
cs
inc
imul
mov
mov
jo
in
nop
mov
sbb
add
repz
mov
mov
dec
inc
inc
into
sbb
fisttps
sub
arpl
in
in
push
mov
and
icebp
and
xor
mov
and
inc
inc
lcall
and
sub
jmp
int
idivl
lods
adc
mov
fdivs
in
aam
outsb
fisttpll
cmpsl
lret
pop
push
data16
in
jae
push
les
bound
and
lds
cmp
xchg
and
and
dec
js
shll
int
sub
mov
xor
sti
and
mov
sub
les
sbb
outsl
adc
mov
movsb
jg
leave
and
xchg
jnp
adc
in
pop
adcl
mov
and
bound
jecxz
popl
call
lret
mov
mov
cmp
cmp
ret
in
pop
xchg
ret
shll
xchg
or
outsl
imul
xor
movsb
les
mov
adc
mov
adc
fadd
sti
fstp
push
loope
addr16
popf
fistl
push
pop
out
inc
pop
bound
mov
push
inc
fistl
nop
ja
ljmp
lcall
pop
jbe
pop
fstpt
mov
sub
xchg
pop
jno
inc
pop
test
xlat
xchg
push
lods
sbb
add
and
rcr
fisttpll
fdivrl
xor
push
lret
inc
dec
mov
mov
shll
cwtl
jae
inc
pop
dec
cmp
imul
mov
mov
sub
xchg
ror
push
jno
sub
ret
dec
cmp
aas
repnz
mov
or
out
aas
xchg
pop
cmp
imul
and
fwait
addr16
xchg
jle
mov
loopne
pop
mov
cmp
push
fwait
arpl
mov
add
adc
dec
movsb
out
or
or
fldenv
sub
dec
test
rorb
test
fldenv
sub
insb
jae
fimuls
loop
push
adc
data16
bound
inc
sbb
jmp
pusha
ds
pop
sub
orl
jae
ret
mov
and
ds
dec
int
inc
rorl
std
mov
icebp
fcmovb
int
mov
nop
fistpll
pop
cmpl
cmpl
sub
mov
scas
mov
xor
dec
and
cmp
int
push
ja
mov
bound
sub
ret
rol
out
xchg
mov
cmp
jmp
cmp
and
xlat
jmp
aad
xlat
in
ja
in
cmpsl
stos
mov
int3
mov
xchg
dec
xchg
mov
add
in
ror
fsub
rcr
rcll
faddl
fucomp
dec
xlat
cmp
test
and
xchg
fistpll
mov
xchg
jecxz
xor
pop
lock
jne
xorb
daa
push
lds
movsb
std
mov
cmp
xchg
fcmovne
insl
cld
jle
insb
fstps
jo
cwtl
gs
pop
pop
aam
movsl
dec
adc
dec
or
sub
daa
jecxz
fildl
es
push
adc
xchg
and
mov
sti
cltd
test
data16
dec
lahf
les
and
lret
fbstp
gs
cmp
cmp
mov
xor
jmp
pop
sbb
test
push
and
fildll
xchg
outsl
cmp
jecxz
out
sbb
fidivl
sahf
xchg
xor
cs
test
mov
mov
inc
iret
sbb
dec
sbb
pop
gs
xor
imul
cmpsl
inc
jno
outsl
mov
lcallw
adc
imul
decb
xchg
pushf
xor
out
fcmovnbe
jae
dec
rcrl
xchg
mov
inc
imul
xchg
js
or
xor
pop
mov
inc
imul
push
mov
mov
pop
insl
sub
loope
loop
mov
int
in
movsb
add
jmp
mov
dec
dec
insl
mov
ret
mov
cli
fcmove
bound
fisttps
add
xor
inc
add
push
outsl
rcrl
jecxz
loop
scas
subl
xchg
je
pop
shrl
test
adc
stc
inc
cmp
fwait
jecxz
jbe
add
aad
push
add
clc
lret
fistpl
pop
andb
mov
jae
lods
ja
ficoml
ret
jp
inc
sti
int
and
repz
xchg
int3
cs
jne
dec
std
movsb
in
stos
fcmovnb
push
mov
cmp
rolb
shrl
mov
cmp
or
and
pop
xlat
das
jmp
dec
loopne
push
pop
filds
pop
mov
mov
inc
adc
loopne
add
aam
push
pop
adc
jnp
call
ficompl
test
shrb
sub
cmpsb
mov
std
lahf
sub
shl
mov
xor
jmp
incb
push
and
jnp
mov
addr16
in
jg
xchg
ss
sub
sbb
or
cmpsl
call
out
test
pop
dec
cltd
pop
dec
inc
das
stc
pop
repz
cmp
jmp
push
cltd
and
jecxz
ror
hlt
in
movsb
push
popa
push
mov
pop
jb
push
sub
les
mov
push
mov
sbb
popa
jp
les
shrl
jae
enter
neg
sbbl
cmp
mov
les
pop
out
jecxz
fsubr
inc
xchg
ret
int3
push
pop
and
scas
outsl
cmp
frstor
imull
data16
xlat
insl
stos
call
shr
notl
push
dec
sub
inc
cmp
and
mov
loopne
mov
dec
pop
fwait
pop
addr16
or
mov
push
push
inc
add
jmp
aas
les
mov
imul
jecxz
in
out
imul
xchg
gs
sub
push
icebp
inc
sbb
ret
sbb
popa
push
xchg
cmpsl
push
xor
test
pop
ret
mov
jmp
pop
xorl
jl
or
ss
cmp
out
jne
out
in
dec
sbb
out
adc
sbb
fdivrs
ss
pop
xchg
jmp
insb
sub
jno
pop
bound
adc
mov
dec
imul
in
jge
arpl
mov
dec
enter
stos
sbb
std
popf
repz
xchg
jmp
jns
jmp
mov
mov
ss
and
jg
xlat
stos
daa
fdivrs
fisttpl
ror
xchg
xlat
repz
and
lds
add
dec
insl
fsubr
add
mov
les
fadd
dec
and
sub
cld
mov
leave
outsb
loopne
xchg
push
popf
cwtl
mov
fs
xchg
insb
add
inc
sahf
jno
adc
dec
jns
inc
es
sbb
or
fldl
enter
test
mov
outsl
pop
nop
daa
and
jge
mov
jg
imul
loop
int3
mov
mov
cmpb
and
inc
sarb
jl
mov
les
mov
fdivrs
mov
mov
ret
mov
iret
adc
movsb
inc
aaa
mov
in
mov
fmull
mov
leave
cmc
dec
inc
sbb
xor
mov
outsl
aaa
fnstenv
pusha
pop
enter
mov
xchg
nop
cmp
repnz
jnp
loop
sbb
inc
shrl
iret
jle
or
fidivl
mov
fnstcw
loope
xor
and
ljmp
add
cwtl
notl
scas
add
mov
cltd
loope
dec
testb
sbbl
cltd
push
int
jl
imul
leave
jno
xor
dec
mov
ljmp
data16
test
pop
pop
fwait
pop
scas
dec
fisubrs
jmp
mov
push
test
push
insb
sbb
mov
rcl
add
sbb
sarb
cmp
mov
aad
xchg
nop
jb
fmuls
pop
clc
xor
and
push
dec
int
jp
and
pop
loop
push
xchg
inc
stos
dec
adc
fsubr
xor
call
sbb
and
scas
or
sarl
or
pop
outsl
xor
push
stos
mov
arpl
sub
push
mov
mov
push
popa
out
jns
popa
mov
pop
imul
push
movsb
in
pop
mov
mov
cltd
push
scas
pop
fwait
dec
ja
mov
pop
clc
icebp
mov
xchg
jnp
lret
mov
inc
popl
std
cmp
stos
xchg
andb
stc
dec
mov
clc
repz
addr16
mov
and
jnp
pop
das
cmp
xchg
es
dec
aad
jb
inc
add
clc
mov
jp
in
or
stos
xchg
xlat
pop
das
ret
leave
sub
dec
mov
dec
dec
pusha
dec
mov
and
push
shr
orw
or
or
faddl
movsl
inc
fwait
fwait
leave
push
inc
stos
inc
xchg
adc
loop
xchg
mov
dec
pushf
mov
xor
cltd
pop
sub
mov
sbb
mov
sti
addr16
js
mov
mov
xchg
sbb
jl
jecxz
aas
pop
jecxz
int
mov
mov
dec
jmp
or
sub
arpl
sub
out
aam
iret
fnstcw
add
std
aad
fstp
loopne
mov
cltd
xchg
or
pop
leave
or
mov
mov
dec
xor
test
movsb
dec
sbb
int3
mov
xchg
stc
add
push
dec
dec
jnp
add
sbb
adc
jo
loop
pop
add
incl
aad
ficomps
or
scas
decb
pop
mov
sti
mov
popa
pop
xlat
addb
or
xchg
xorb
push
mov
cltd
pop
inc
jno
notl
insl
sbb
fisttpl
pop
mov
shr
pushf
iret
ret
xchg
xchg
xor
sbb
out
ds
xchg
dec
outsl
add
nop
push
sub
in
ja
sub
sub
int3
movsl
xor
loope
jmp
test
adc
rol
js
lret
sti
fsubl
xlat
mov
daa
rcr
inc
ret
or
ret
mov
les
sbb
xor
jae
add
std
pop
mov
scas
int3
fisttps
orb
mov
sbb
fwait
out
ror
ss
xlat
shl
mov
push
mov
hlt
xchg
cmpl
inc
jno
sti
addr16
jl
cs
dec
and
inc
jecxz
das
push
inc
dec
sti
xor
jg
adc
sub
add
adc
ja
out
jne
xchg
fcmove
sbb
aas
or
jno
pop
xchg
xlat
das
sarl
out
pop
in
cld
xorl
push
mov
inc
loop
jmp
xor
cmpsl
fdivr
push
lods
aas
mov
test
rorl
ljmp
mov
les
loope
xor
mov
fwait
and
clc
mov
lods
lret
mov
push
insl
and
into
jecxz
push
pop
aas
dec
xor
xor
pop
push
rcrl
cmpl
flds
xchg
into
ffree
adc
xchg
mov
sti
imul
int
stc
sbbl
in
je
test
sbb
call
andb
and
stc
mov
les
dec
pop
xor
and
jb
data16
pusha
sbb
jno
maxps
and
pop
sahf
sbb
adcl
pop
hlt
sbb
cmpsb
in
jmp
repnz
jmp
mov
lret
out
xlat
pop
ret
pop
mov
gs
into
bound
dec
daa
sti
xor
stos
jmp
xor
sti
shll
fcoml
and
xor
pop
sub
push
jp
mov
mov
xchg
sti
iret
dec
and
mov
ret
int
pop
faddp
in
sbb
pop
sub
aaa
jae
dec
lock
lcall
xchg
int
sbb
lds
pop
jns
xchg
iret
bound
loope
mov
shl
or
and
push
shll
sbb
insl
leave
sub
add
push
scas
cmp
fbstp
fistpl
mov
xchg
add
sbb
imul
xchg
nop
sub
pushf
ljmp
cmp
jnp
xor
fwait
sbb
loope
gs
aad
cmp
inc
cld
ficompl
or
push
sbb
out
pop
out
cmpsb
pop
ret
pop
and
ret
cmp
add
mov
sub
aam
lods
pop
or
in
fwait
dec
dec
les
and
xlat
fldenv
lret
add
movsl
xchg
xchg
lahf
and
sub
xchg
adc
jnp,pt
jge
aaa
stos
call
rorl
jns
inc
sub
in
dec
mov
insl
push
out
lcall
fcomps
ret
fisttps
fists
or
inc
sbb
or
popa
movsl
out
jns
loope
push
cmp
fiaddl
xchg
mov
push
add
lcall
iret
lcall
js
fsubl
ss
mov
inc
aam
or
scas
sbb
pop
lahf
dec
test
push
loopne
enter
imul
jg
loope
add
adc
ds
ljmp
or
scas
sqrtps
push
leave
dec
cltd
sarb
jmp
or
pop
fcmovu
in
push
test
imull
ja
aas
in
add
inc
cmpsl
adc
mov
insb
lea
scas
sub
xchg
aas
scas
and
xor
push
enter
popf
ret
lret
pop
mov
mov
pop
sub
lret
imul
gs
ret
fsub
mov
sub
sbb
jge
shll
pop
cmc
and
push
std
sub
movsb
das
jne
xor
dec
mov
add
dec
xor
fidivs
icebp
insl
inc
rol
bound
mov
pop
test
ffreep
jb
inc
xchg
fadds
dec
cmp
test
fldl
mov
jae
mov
and
push
sbb
cs
pop
xor
push
in
xchg
outsl
ret
mov
sbb
or
pop
cltd
test
pop
lret
push
lods
inc
gs
call
pop
jnp
cli
jle
insb
out
int3
ret
mov
cmpsl
mov
and
movsl
push
shlb
adc
mov
fmulp
sbb
dec
and
insb
movsb
loope,pn
mov
sub
sbbb
pop
inc
add
lea
dec
out
pop
leave
gs
loop
xlat
dec
fisttpll
and
ret
loopne
arpl
jecxz
sti
std
mov
ljmp
pop
fistpl
mov
neg
fs
add
xchg
jmp
jle
cmp
xchg
sbb
cmpsl
dec
cmp
int3
adc
mov
push
jge
mov
jl
sarb
loope
mov
rclb
enter
hlt
pop
sub
cs
fstps
movsl
cmpsb
cltd
xchg
jecxz
outsl
rcr
sub
jp
lcall
fnstcw
mov
mov
mov
mov
pop
push
sub
mov
fimuls
add
cmp
lea
out
cli
fstp
fbstp
shrl
mov
push
xchg
dec
ja
push
dec
stos
xor
push
mov
movb
shlb
cmpsb
arpl
mov
movsb
fxch
jne
mov
addr16
mov
push
push
push
clc
out
jno
jg
adc
jno
jns
cmp
mov
mov
sbb
add
mov
push
sbb
movsl
testb
inc
ficoms
sub
js
sub
xchg
inc
push
pop
lds
xor
loope
ret
sbb
loope
ret
mov
jecxz
inc
in
xchg
rcl
call
push
inc
sub
lcall
xchg
or
push
das
ret
nop
inc
out
mov
jne
insb
dec
int
adc
sub
outsl
lcall
lret
out
mov
cmpsl
sub
jle
filds
sbb
loope
add
cmpsl
lea
lcall
mov
mov
sbb
fmul
in
ljmp
inc
sbb
jmp
cli
cmpsb
sbb
and
ja
push
cltd
jns
inc
js
mov
sbb
loope
xchg
and
popl
aaa
sahf
out
fwait
sub
int3
push
sub
mov
arpl
pop
sbb
test
mov
and
sub
int
and
or
insl
sbb
xlat
add
dec
sbb
addl
rcl
sbb
out
xor
jl
inc
out
lea
rclb
sub
xlat
sti
sbb
mov
addr16
cmpsl
inc
das
lcall
fidivrl
test
xchg
cmpsl
pushaw
inc
sti
fcmovbe
pop
push
ret
lahf
in
jno
jnp
xor
flds
bound
in
sbb
mov
sti
iret
mov
sbbl
cltd
pop
xlat
add
cltd
in
xchg
loop
jmp
bound
std
sub
sbb
lds
xlat
rcrl
or
jb
cmc
add
jp
cmp
ja
mov
sbb
scas
sbb
stos
xchg
je
jb
sub
std
mov
aam
inc
jge
bound
sti
pop
das
dec
fistpl
sbb
sbb
sarb
ret
xchg
and
cld
sub
sub
dec
push
repz
cli
and
cli
out
mov
inc
xor
mov
mov
push
imul
and
mov
dec
inc
scas
enter
sbb
or
ljmp
out
arpl
jl
dec
imul
mov
cmp
mov
mov
xchg
xor
jl
sbb
sub
push
pop
xchg
xlat
push
and
jg
aas
or
pop
lock
in
ret
pop
cmpsb
ret
mov
mov
mov
loope
ret
pop
imul
push
lret
mull
scas
jae
pop
enter
lock
int
adc
arpl
hlt
gs
mov
xchg
or
xor
push
dec
loopne
xchg
jmp
arpl
je
fistpl
lahf
ss
out
jae
adc
xchg
mov
pop
xchg
dec
pop
sbb
mov
ja
xchg
inc
add
mov
cmp
sbbb
xchg
and
es
pop
cs
jnp
or
xlat
xor
inc
insl
pop
inc
mov
out
movsb
pop
in
or
and
fmull
loop
adc
movsl
cltd
fwait
cmp
mov
push
inc
ffreep
and
int3
in
scas
mov
sti
leave
fsubr
iret
mov
ret
sbb
hlt
mov
mov
xor
and
pop
cwtl
push
sbb
lods
xchg
popf
dec
and
aam
aaa
int3
loopne
xor
mov
loopne
sbb
out
out
arpl
pop
loope
lret
xor
dec
push
xor
stos
adc
gs
or
faddl
adc
and
xchg
xchg
fadds
fxch
cmp
mov
mov
out
or
aas
adc
push
fwait
test
inc
pop
inc
in
sbb
xor
in
popf
lret
xor
mov
cwtl
into
in
mov
out
test
sahf
gs
jae
inc
scas
popf
and
lds
rcll
pop
in
in
out
or
xchg
cwtl
pop
sub
jno
or
mov
mov
das
push
into
xchg
movsb
pop
jecxz
out
mov
jecxz
pop
popa
mov
lock
test
inc
stos
out
lcall
and
pop
add
add
push
dec
jmp
mov
xor
jno
enter
mov
iret
in
jmp
cltd
das
sub
dec
pop
xor
fstps
jmp
fcomps
cmc
and
jo
je
dec
mov
test
fs
hlt
das
mov
test
add
imull
in
pop
pusha
xchg
je
inc
dec
adc
ret
arpl
rolb
cmpsb
mov
dec
xchg
or
insl
fdivp
icebp
mov
or
add
aas
dec
mov
call
xlat
loopne
dec
inc
mov
sti
sbb
mov
push
cmpsl
mov
ljmp
jmp
inc
aam
lret
xchg
or
jne
rclb
pop
outsl
xor
mov
scas
hlt
lds
aaa
and
push
jno
out
adc
test
stos
adc
mov
add
xchg
push
outsl
push
xchg
cltd
test
push
out
jno
xchg
rcr
icebp
subl
les
fwait
xchg
lret
cmp
movsb
dec
lret
js
bound
in
test
mov
jmp
push
imul
sahf
aad
das
cmp
and
test
pop
fistpl
push
es
xchg
adc
ljmp
cmp
cmovl
popf
scas
inc
and
addb
inc
rcrb
mov
aaa
lods
test
shr
and
jae
sub
out
test
minps
add
mov
fwait
icebp
cli
sbb
neg
aas
push
out
lret
mov
aam
inc
pushf
dec
imul
leave
mov
ljmp
mov
pusha
and
insb
push
mov
mov
xor
add
mov
cmpsb
xchg
cli
pop
call
fnstenv
add
ror
lahf
sbb
outsl
xchg
addr16
fildl
lods
push
pop
subb
pop
sub
sbb
mov
insl
std
mov
jno
and
cltd
ss
scas
xchg
sub
jne
stc
xchg
das
xlat
mov
outsl
inc
arpl
jo
pop
stc
fwait
insb
cmp
sbb
ja
addl
jo
sarl
mov
mov
arpl
mov
pop
leave
fcmovnu
push
ret
inc
imul
arpl
sub
sti
icebp
mov
sbb
imul
stos
mov
test
pop
dec
arpl
inc
movsb
fcomip
or
rcrb
jge
xchg
enter
cmpsl
jg
sub
mov
xorl
test
cmc
aad
sbb
mov
xchg
mov
xchg
xchg
pop
inc
mov
js
sbb
test
repz
and
dec
mov
or
adc
mov
and
das
or
sbb
xchg
in
stos
divl
rorb
dec
jp
sub
cmp
cltd
pop
dec
iret
jmp
fcoml
shl
mov
pop
push
insl
and
ss
int3
push
sub
lret
jg
sti
jp
xor
sarl
mov
jae
shl
decl
pop
movsb
ds
cld
int
jmp
test
mov
fs
pop
cmp
dec
xor
jo
pop
pop
mov
xor
add
fbstp
mov
xchg
subl
mov
dec
nop
inc
and
sbb
inc
jmp
sub
mov
and
dec
outsb
xchg
sbb
pop
out
jns
push
test
nop
je
inc
sbb
dec
sti
aas
clc
mov
mov
fisttps
mov
iret
mov
data16
sar
arpl
xchg
jmp
cs
add
mov
dec
test
out
dec
and
jecxz
leave
sbb
dec
xchg
pop
out
mov
inc
cmp
rcrb
fs
sti
mov
enter
int
rcll
mov
flds
nop
outsl
dec
test
lret
insb
or
jne
aaa
lods
jecxz
cltd
nop
lods
outsl
and
mov
mov
dec
mov
sbb
adc
or
inc
xorb
and
ljmp
repz
cli
inc
repnz
iret
mov
sub
jmp
sub
jecxz
rcll
sbb
lods
repz
dec
int
mov
mov
push
test
pop
shrl
cmp
and
push
or
sarb
inc
repz
add
shrl
popa
insb
sbb
pop
mov
push
ret
sbb
mov
inc
fcom
sbb
push
in
pop
mov
pop
pop
js
pop
jnp
leave
outsl
jno
sbb
stos
arpl
in
mov
and
addr16
and
imul
sbb
or
hlt
inc
lds
es
add
xor
jmp
mov
inc
or
and
popa
je
das
push
pop
jge
inc
pop
jle
mov
icebp
std
cs
test
push
ret
cmp
sarb
jo
xor
movsl
adc
leave
fwait
sub
popf
sbb
movsb
mov
aas
call
add
ljmp
xchg
xchg
or
mov
add
fwait
jns,pt
js
pop
addr16
jmp
shll
sbb
arpl
sbb
jecxz
inc
add
hlt
decb
jb
bound
popa
out
jp
sub
push
lahf
nop
pop
sub
pop
out
xchg
sbb
shrb
imul
sbb
lods
test
xor
xor
notb
bnd
jmp
leave
dec
out
das
xchg
ret
xor
jno
test
in
or
and
adc
push
aam
mov
pop
xchg
or
ja
ret
jecxz
xorb
lret
fisubrl
cmc
dec
fsubr
dec
enter
movsb
jns
mov
fsts
pop
dec
push
iret
imul
ret
fmul
sbb
adc
ds
sahf
loope
icebp
xchg
sbb
fwait
jne
data16
movsl
xchg
mov
das
pop
aad
rorl
fstpt
inc
mov
pop
cmp
pop
inc
je
xor
inc
icebp
loope
inc
push
lods
and
push
or
leave
cmp
imul
push
outsb
xlat
pop
ret
push
and
sub
mov
mov
sub
mov
and
push
xor
gs
dec
or
mov
arpl
scas
sti
and
mov
test
insl
or
icebp
push
dec
jecxz
mov
push
cmp
dec
sub
cwtl
fwait
mov
and
push
cld
fstps
dec
mov
arpl
mov
jg
sbb
andb
mov
test
or
mov
call
lret
jg
xchg
sbb
dec
das
test
and
mov
xchg
dec
cld
xchg
xchg
and
in
in
ret
arpl
inc
pop
and
sub
ror
cs
sti
cmpsb
push
aas
test
and
cmp
test
add
repz
fildll
orl
popf
dec
pop
sbb
int3
insb
mov
ja
pop
inc
push
imul
xor
jecxz
inc
cmp
dec
push
pushf
sbb
cltd
ljmp
adc
sbb
rclb
clc
inc
in
inc
arpl
ret
cmp
repz
ja
hlt
mov
sub
cltd
fidivrs
sbb
sub
inc
dec
stc
sti
sbb
insb
inc
cmp
test
test
mov
dec
pop
rol
bound
out
mov
fmull
addr16
or
les
andl
mov
jmp
dec
aad
xor
lcall
cmp
jle
inc
lcall
mov
in
imul
pop
dec
in
pop
gs
mov
and
xchg
int3
dec
mov
pop
cmp
pusha
push
fs
ficoml
in
pop
dec
pop
push
repz
xor
cwtl
in
mov
xchg
sbb
outsl
and
pop
incl
testl
xchg
pop
adc
jecxz
scas
popa
xor
xor
pop
test
insl
xchg
ret
pop
cltd
popa
enter
mov
dec
xor
in
in
shlb
sarl
inc
jl
insl
popa
ficoml
insb
popf
test
xchg
cli
xor
addr16
adc
out
jae
stc
sbb
ljmp
adcl
ljmp
xor
jnp
xchg
nop
adc
fdivrs
add
es
mov
testl
mov
push
rcr
ret
sub
and
push
test
ret
mov
push
xchg
dec
push
cld
stos
pop
pop
jl
adc
jecxz
popf
mov
mov
sti
xchg
pop
push
arpl
jnp
inc
jae
faddl
jmp
sbb
cmpsb
gs
mov
imul
push
push
jae
pop
fwait
add
pop
jecxz
add
in
and
aaa
cmpsl
pop
insl
gs
pmaxub
ficompl
sbb
cmp
cmp
push
test
das
cmc
clc
addr16
dec
clc
jae
sbbl
mov
push
and
mov
push
out
icebp
or
push
shll
cs
cmpsl
and
bound
fsub
es
push
mov
les
aas
pushf
xchg
in
mov
les
pop
and
lock
add
cmpsb
outsb
fwait
shl
mov
add
mov
pop
aaa
pusha
enter
sub
ficompl
scas
fdivp
inc
sub
and
clc
xor
jnp
out
gs
mov
dec
lea
push
sbb
sub
cmp
mov
mov
pop
jne
sbb
push
sub
xchg
fildl
aas
in
imul
cmp
dec
push
iret
push
jmp
imul
push
fmull
int
faddl
dec
int3
stos
shrl
or
roll
stos
mov
jns
push
push
in
or
stos
imul
out
push
sub
xor
dec
push
sub
cs
inc
xchg
adc
call
cltd
mov
lcall
jae
stos
dec
pop
adc
pop
xor
dec
insb
stos
inc
ret
mov
movsb
lock
fsubs
and
imul
mov
and
je
mov
loop
sbb
lret
sti
and
cmp
xlat
mov
mov
pop
add
add
jp
jmp
test
sbb
xor
cmp
mov
or
test
dec
xchg
dec
js
out
xchg
mov
sbb
or
jle
and
jle
fucomp
sbb
pop
jg
mov
xor
cmp
test
loopne
mov
cld
fstpl
add
pop
jp
sbb
dec
fs
cld
mov
stos
xor
pop
mov
das
mov
cmp
add
adc
int3
mov
adc
add
sub
xchg
daa
cmp
int3
cmpsb
mov
dec
lock
movsl
xchg
fmull
jg
test
and
insb
int
sbb
out
inc
mov
jg
jmp
and
mov
sbb
xor
mov
push
popa
test
xor
movb
ret
xchg
stc
mov
cmpsb
or
jmp
dec
pop
cmc
xchg
test
mov
repz
fistl
mov
xchg
scas
daa
movsb
andb
push
jle
pop
jge
loope
insl
movsb
mov
mov
mov
test
push
xchg
test
je
iret
sti
addr16
cmp
mov
jne
leave
int3
dec
sub
sbb
iret
icebp
in
jb
arpl
fdivl
or
or
mov
int
inc
mov
fstpt
xor
adc
lret
or
jae
sbb
fwait
jne
pop
sub
mov
repz
sbb
out
dec
adc
inc
jne
pushf
call
sub
daa
lcall
mov
dec
cmpsb
or
hlt
out
inc
dec
add
pushf
aaa
movsb
aad
xor
insl
jmp
fdivrl
or
movsb
push
fcomps
jbe
and
xchg
cmp
fistpll
xchg
mov
rolb
negl
fmulp
pop
mov
mov
adc
xor
mov
add
hlt
inc
rclb
mov
pop
jmp
lock
std
mov
lea
xchg
rcrl
fwait
dec
test
cmpsl
xchg
leave
in
test
xor
fisubrl
dec
fnstsw
gs
dec
test
xchg
jbe
in
push
push
jmp
das
ret
pop
fwait
popa
cltd
cmp
xlat
inc
mov
imull
stos
lds
shll
jmp
sarl
mov
ret
pop
ret
inc
xor
or
in
jno
loope
xchg
ret
gs
lahf
push
in
repnz
adc
jmp
sti
loop,pn
cmp
stos
popa
popa
jl
and
in
ljmp
and
in
ljmp
fwait
imul
inc
or
fmuls
mov
mov
mov
adc
rclb
dec
sbb
and
fsubrs
sub
sbb
ret
mov
fs
and
push
add
sar
xchg
push
add
push
jle
xchg
ljmp
loop
push
lahf
push
inc
lcall
push
jg
mov
in
test
xor
int3
mov
fildl
cmp
cli
jae
or
cmpsl
dec
inc
jne
repz
cli
push
mov
push
lahf
dec
push
push
adc
addl
scas
xchg
mov
inc
jno
xchg
mov
push
cmpsl
hlt
popa
jae
imul
xor
mov
in
mov
and
mov
in
sbb
xchg
les
jmp
mov
ljmp
addb
dec
push
mov
pop
popa
les
jg
insb
test
cmpsb
xchg
jecxz
aam
jl
and
scas
pop
insl
mov
cmp
les
push
pop
inc
hlt
fsubr
ljmp
popf
pop
shr
adc
cmp
xchg
inc
flds
sbb
aad
cmpsb
call
fisttpll
addr16
mov
aam
dec
xor
push
lcall
cmpl
adc
dec
arpl
pop
inc
inc
pop
sub
out
mov
mov
xor
push
daa
dec
jns
rcpps
mov
dec
push
and
xor
dec
out
cmp
lock
mov
push
cs
stos
test
sti
xor
adc
lea
push
add
xorl
int3
das
imul
sti
jl
enter
xor
inc
test
mov
iret
leave
mov
fdivrl
xlat
lahf
push
shr
xlat
sbb
fildll
sub
ret
cltd
sbb
mov
das
fmuls
jmp
sub
xchg
div
cs
outsl
jnp
in
shrl
rcrl
pop
in
out
push
int
aad
sbb
scas
jp
jns
fldt
sbb
in
mov
mov
mov
mov
dec
or
ljmp
ljmp
xchg
fmull
or
mov
push
sbb
adc
jge
xchg
sbb
xor
xlat
xchg
por
sub
sahf
loopne
out
out
jno
mov
dec
cld
cmpsl
sbb
pop
or
pop
out
scas
cli
jl
sbb
cmpsl
mov
cltd
inc
nop
push
and
mov
adc
ficompl
mov
xchg
mov
jns
mov
cwtl
cmpsl
sbb
and
push
movsl
lods
dec
aam
pop
push
es
test
jp
dec
in
cmp
mov
inc
pop
mov
mov
adc
xlat
pop
push
xor
cwtl
in
push
ljmp
cmp
or
dec
pusha
repnz
adc
lret
jns
rcrb
in
rcrl
cltd
add
sbb
push
inc
mov
pusha
xor
jp
pop
leave
fsubl
mov
cmp
adc
lock
pop
inc
mov
ljmp
inc
popf
push
xor
iret
scas
dec
cltd
jp
xchg
and
inc
ret
dec
mov
pop
movsb
xor
cmc
leave
sti
aam
xlat
xor
add
pop
sbb
inc
clc
dec
leave
dec
and
sti
dec
jno
mov
orl
jecxz
pop
xchg
adc
pop
sub
sub
ret
popf
ss
js
jb
sbb
fsubp
ja,pn
mov
stos
lret
in
jecxz
mov
faddl
int
dec
dec
icebp
push
das
popf
dec
push
dec
lea
jg
mov
mov
mov
xchg
imul
popf
xor
jecxz
inc
jg
std
lea
or
inc
enter
jnp
sub
xor
jae
int
fwait
lea
jbe
dec
pop
addb
and
in
imul
mov
dec
leave
pop
loopne
fwait
lods
xchg
jnp
aam
in
xor
popf
pop
mov
sbb
xchg
sahf
inc
cmp
push
int
loope
and
sbb
push
lods
stos
pop
dec
jne
faddl
and
aad
movsl
xchg
insl
in
mov
das
lea
aas
ret
jp
jae
inc
fisttps
into
lret
jo
pop
mov
inc
mov
fdivrl
lds
ss
jmp
xor
and
dec
loopne
or
repz
push
cmc
loope
enter
push
fdiv
leave
cmp
mov
pop
pushf
inc
xor
fdivrs
cs
mov
stos
fcoml
push
in
or
inc
cwtl
adc
push
sbb
das
xor
pop
pop
lods
fs
inc
mov
popa
jle
sub
les
sahf
xor
popf
lret
xlat
xor
ds
fcmovnbe
inc
ret
xlat
pop
rorl
pop
int3
push
imul
mov
aam
xor
cs
outsl
pop
sbb
xor
cmpl
test
mov
xchg
flds
xor
dec
test
int
rcl
bound
sbb
cmp
jne
adc
stos
jecxz
push
and
pop
sbb
xchg
repz
and
jbe
jp
and
dec
push
je
imul
and
ret
mov
stc
mov
test
fucom
pop
mov
sti
cltd
pop
orl
pop
sbb
jns
lods
dec
clc
pop
dec
repz
movl
pusha
sahf
call
cmpsl
inc
mov
jns
pop
dec
adc
stos
test
mov
fisubrl
xchg
add
loop
daa
lahf
aaa
out
push
fstpl
hlt
push
push
jmp
sbb
add
xor
mov
cli
inc
lods
ljmp
ljmp
xor
incb
xor
dec
stos
mov
xchg
ficoms
addr16
mov
int
add
push
ss
adc
ljmp
pop
and
xor
add
loope
jecxz
nop
jo
xor
add
out
cmpb
inc
js
test
push
mov
imul
lds
xchg
inc
xchg
and
loopne
push
mov
movsl
hlt
mov
pop
stc
or
lcall
adc
xor
cltd
push
mov
ret
movsb
adc
lea
les
leave
add
jb
pop
jecxz
fstp
fs
cmpsb
jecxz
jp
shl
outsl
mov
jmp
fsub
std
mov
mov
sbb
stos
sbb
pop
mov
loopne
mov
lock
mov
pushl
clc
xor
out
cwtl
stos
fsts
cltd
dec
xor
shr
xor
ljmp
pop
cltd
jo
jbe
add
int
call
xor
cmp
push
add
fistl
push
dec
lret
push
imul
mov
mov
xchg
xor
dec
movsl
adc
cld
dec
xor
mov
pop
sub
ret
leave
jbe
jg
lret
enter
lds
pop
shrb
cwtl
andb
test
xchg
mov
andl
jnp
pop
fwait
insl
mov
lds
push
cmp
sbb
insb
movb
xchg
push
into
cmp
je
dec
dec
inc
mov
in
popf
sbb
or
popf
pusha
cs
mov
push
or
hlt
sub
push
or
xchg
fwait
imul
pop
ljmp
dec
push
push
cld
popa
pop
lcall
aas
mov
sbb
xor
outsl
dec
and
or
mov
jmp
push
aad
inc
xchg
popa
fiadds
jno
mov
cld
xor
mov
inc
clc
js
flds
mov
xchg
mov
mov
add
stos
mov
int
jns
fmul
mov
jmp
ret
mov
lods
cmp
movsb
pop
adc
adc
push
or
jno
push
ja
shll
imul
inc
jmp
inc
pop
std
pop
fwait
jecxz
inc
push
gs
scas
sub
xor
mov
cmp
cld
test
cmpsl
pop
mov
lcall
gs
fwait
mov
adc
cmp
loope
cmp
aaa
data16
jne
jb
es
mov
in
mov
add
icebp
aam
shll
xor
adc
test
iret
lea
xchg
movl
inc
scas
icebp
push
jmp
fcmovu
repnz
cmp
push
pop
dec
or
aaa
push
ljmp
outsb
lret
xor
jmp
xor
dec
adc
cli
fs
hlt
and
test
push
popa
mov
cmp
icebp
les
insl
mov
fadds
outsl
xor
enter
int3
xchg
push
xchg
xor
sbb
cs
fcomi
aad
popa
aas
call
sub
out
sub
and
fwait
lock
imul
call
inc
addl
jmp
call
std
push
adc
mov
lea
pop
fs
push
rcl
ret
ljmp
push
std
fwait
jbe
push
and
sbb
imul
in
jne
cmp
jb
jnp
inc
das
jmp
xor
test
and
xor
cmpsb
mov
cld
lods
mov
mov
push
xor
add
pop
cmovg
outsl
mov
popa
pop
pop
pop
xchg
pop
or
adc
and
mov
inc
fisubrs
imul
lcall
mov
pop
arpl
popa
sbb
mov
sbb
outsl
js
fcoms
lods
cli
jns
out
xor
sub
pop
inc
xor
test
mov
ljmp
in
mov
fisubrl
in
rcl
stc
push
data16
mov
enter
inc
mov
jne
jno
sub
lds
cmpsl
aas
jb
mov
sbb
imul
mov
cmp
mov
push
and
sbb
imul
ss
shrl
cmp
popf
and
ret
sub
push
imull
xor
push
out
mov
xchg
jmp
xor
fwait
enter
xor
insl
loop
ficompl
cmp
aas
add
sbb
push
stc
jnp
sbb
pop
test
iret
fs
jmp
ds
mov
fwait
mov
mov
sub
sub
cmc
rorb
arpl
and
push
cmp
xchg
cmp
jae
test
fstpt
bound
in
ret
insl
lods
mov
fsubrl
test
pop
or
jbe
scas
xor
adc
push
cli
xor
and
mov
or
in
pop
repz
dec
ret
addr16
aaa
jl
push
mull
xchg
mov
rolb
adc
xlat
lds
or
pop
iret
out
sbb
fstpt
jne
xor
push
pop
xchg
hlt
sub
lock
pop
push
sbb
jg
inc
leave
and
jnp
cli
fcmovnu
sti
add
or
leave
out
and
insl
stos
or
push
adc
xor
pop
and
insb
ret
les
popa
and
rorl
jb
jecxz
and
dec
outsl
bound
jne
pop
lahf
ja
cmp
jae
pand
jge
xchg
sarb
call
insb
sbb
jno
pop
xor
xchg
xchg
fwait
outsb
ja
xor
sbb
jge
lds
rcl
nop
dec
pushf
subb
jmp
dec
inc
sub
add
lcall
out
cltd
mull
jle
or
aas
pop
mov
sti
lods
inc
outsl
test
dec
and
mov
push
jnp
and
ss
lret
jne
sub
loopne
frstor
dec
shl
cmp
dec
mov
icebp
add
sub
test
insl
sbb
push
jne
and
sbb
rcrl
daa
push
inc
mov
sbbb
lcall
insb
sbb
stc
repz
xchg
mov
hlt
sbb
mov
in
sub
pop
push
or
aaa
pop
and
icebp
inc
inc
jb
int
sbb
sbb
cli
testl
repz
add
gs
popf
xor
popa
sarl
out
lahf
aam
mov
andb
orl
or
call
jno
sub
dec
scas
std
into
sar
mov
pop
inc
cmc
lds
data16
or
test
imul
std
inc
rorl
sbb
xchg
sti
lock
fsubrs
inc
mov
fistpll
cs
xlat
xchg
pop
movsl
std
xor
sarb
jno
push
fwait
loopne
pop
pop
xlat
or
inc
outsl
fstl
repz
ret
mov
sbbb
in
jns
cmpsl
mov
sbb
mov
add
out
xor
popa
add
mov
xor
pop
mov
shl
out
fadd
pop
aas
ret
dec
push
dec
mov
pop
roll
xchg
push
int
out
ret
out
inc
xchg
lds
repnz
scas
add
aam
fwait
ret
xor
xchg
js
cmpsl
arpl
imul
ljmp
mov
ss
sub
imul
nop
clc
lahf
sub
lods
push
dec
mov
add
lds
ret
rcr
or
test
push
icebp
push
pop
iret
mov
insl
xchg
testl
pop
dec
call
mov
in
ja
mov
adc
adc
mov
dec
pushf
push
ret
push
bound
mov
in
mov
jmp
add
pop
gs
jg
xor
dec
xchg
test
cmpsl
popa
mov
xor
adc
fdivl
mov
fistps
jp
sub
mov
mov
pop
dec
xor
push
fsubrl
lods
decb
mov
dec
ss
push
xchg
jo
mov
aam
in
jnp
and
push
push
imul
add
xchg
sbb
inc
inc
mov
imul
je
push
adc
and
lret
sbb
int3
xor
fs
mov
jae
outsb
not
dec
loope
mov
subps
scas
add
xchg
hlt
jno
jle
inc
fbld
dec
xor
xor
dec
add
stc
mov
out
lea
cmc
in
mov
push
mov
mov
cmp
cmp
inc
and
gs
xor
movsb
das
ja
fists
sti
sarb
dec
lds
xor
addl
add
and
movsl
inc
mov
je
jecxz
out
ds
xchg
push
inc
fwait
pop
call
sbb
mov
sbb
stc
pusha
xlat
addr16
xor
test
std
and
fldenv
fidivl
pop
fstpl
aas
adc
sub
dec
fcmove
out
and
mov
lahf
and
mov
gs
ret
lahf
inc
add
mov
subl
pop
mov
mov
rcll
out
subl
fs
subl
add
push
cltd
outsl
jns
and
adc
xchg
xor
add
xor
push
mov
loope
dec
sbb
movsl
or
imul
mov
scas
dec
jmp
repz
fwait
add
jecxz
mov
mov
dec
inc
insl
in
insl
pop
and
xchg
push
ljmp
xor
shrl
inc
sbb
cmp
addr16
pop
xor
xchg
push
mov
cmp
add
cmpsb
sarl
and
or
inc
pop
sbb
clc
xor
and
xor
jecxz
add
add
and
icebp
in
push
and
jnp
cmpsl
xchg
fs
in
cmpsb
xlat
in
jecxz
add
pop
roll
jb
mov
jns
sbbl
outsl
sarl
jo
xchg
cmpsl
dec
xchg
xor
inc
push
in
int3
pushf
call
sub
and
adc
aaa
loope
lret
inc
repnz
ficoms
ret
popa
sbb
lea
mov
out
lock
std
add
xchg
sub
sub
arpl
pop
jmp
test
mov
push
mov
push
fwait
imul
cltd
popf
sahf
ret
rol
leave
mov
add
xlat
jnp
mov
repz
mov
xor
jg
andl
fistpl
test
insb
test
popa
pop
sbb
push
cmp
pop
es
dec
jecxz
fsubrs
insb
jbe
repz
xchg
dec
push
mov
adc
xor
mov
popa
addr16
aas
jmp
mov
cmpsb
mov
inc
or
imul
inc
scas
fstl
repnz
mov
call
je
imul
dec
dec
hlt
das
inc
call
xorl
sub
je
adc
int
jg
aam
pop
imul
pop
fst
sbb
in
xchg
call
in
xor
cld
aaa
sbb
sub
sub
xchg
xor
push
call
jb
pop
dec
inc
pop
adc
icebp
stos
movsb
xchg
pop
add
mov
test
inc
and
fsubl
fwait
insl
sbb
mov
ja
mov
xchg
aam
sub
outsl
ret
or
push
leave
jmp
popa
sub
imul
inc
sub
and
lahf
mov
lea
cltd
cmp
pop
add
push
sti
paddusb
pop
roll
xchg
jnp
sti
fldenv
dec
mov
out
add
dec
and
xor
out
fstl
orl
dec
mov
cwtl
push
ret
mov
int
movsb
xchg
shrb
out
fcompl
ret
inc
mov
push
dec
jmp
gs
dec
pop
inc
cld
gs
lea
inc
cmp
mov
jmp
sbb
aam
mov
pop
stc
das
call
pop
xor
out
add
dec
outsl
ja
test
cmp
pop
inc
sub
in
and
pop
jmp
popa
push
ss
rorl
jg
out
cmpsl
and
ret
mov
jae
jno
into
stos
xor
arpl
lock
fcomps
imul
push
js
leave
lret
lret
xchg
and
push
fnstsw
dec
fwait
dec
xor
inc
jl
rcl
out
subl
pop
ret
pop
inc
inc
leave
cld
movsl
fists
loop
popf
stc
mov
and
fwait
inc
rol
aas
inc
xchg
leave
mov
push
xchg
cmp
jae
loop
sub
inc
or
cmp
jmp
and
adc
adc
mov
jl
fcmovne
outsb
xlat
cmpsb
mov
mov
cmp
inc
mov
outsb
inc
jb
aad
sti
and
mov
insl
sub
and
lods
xchg
cmpsb
int
and
aam
insl
dec
imul
shll
xor
or
sub
dec
ret
shl
or
mov
xchg
sub
insl
flds
addr16
inc
insl
fcomp
sub
call
repz
pop
in
jp
inc
stos
test
bound
sbb
lahf
jg
xor
aaa
out
fsubl
test
mov
jns
js
push
aad
fwait
push
fwait
push
or
sbb
test
popf
iret
test
stos
dec
xchg
mov
into
imul
mov
xor
dec
push
dec
or
aaa
dec
popf
imul
cmp
cmpsb
pop
push
mull
inc
mov
xor
xor
xchg
push
inc
xor
mov
fistpl
dec
push
and
mov
push
or
dec
mov
adc
nop
push
out
fildll
mov
push
popa
pushf
pop
mov
sbb
shll
and
inc
stos
outsl
xor
jnp
mov
ljmp
sbb
xchg
jno
ss
push
cmp
or
data16
int
mov
mov
shrl
iret
push
mul
loopne
mov
sbb
pusha
out
daa
and
xorl
add
inc
bound
sbb
sbb
push
les
adc
leave
sub
jmp
ret
jp
sbb
cmc
xchg
adc
fwait
lret
xchg
mov
sub
shr
cmp
dec
mov
adc
hlt
insl
imul
inc
dec
jne
fcmovnu
ret
mov
imul
imul
cmp
mov
or
insl
fucomi
sbb
nop
or
fsubr
popa
pop
sbb
ljmp
filds
adc
aam
shl
mov
aad
insb
mov
or
iret
push
into
cmp
mov
cmp
int3
sub
push
mov
xor
and
daa
ficompl
inc
inc
ds
fsubrl
mov
imul
orb
fstpl
aaa
or
xchg
jb
push
stos
xlat
jecxz
mov
fadds
les
push
push
mov
lods
int
add
push
stos
xchg
mov
dec
insb
mull
add
ficoml
inc
bound
mov
sbb
test
mov
dec
xor
xor
sbb
add
addl
and
push
cld
fcoml
gs
and
lds
fidivrs
cmp
jno
mov
xchg
out
js
in
and
add
scas
jecxz
call
fmul
xor
cmpb
jl
jae
sbb
xor
mov
cmp
addr16
push
jae
es
stos
cltd
cmp
push
aam
adc
mov
jbe
in
jno
mov
repz
and
xlat
mov
lcall
insl
int
popa
nop
inc
and
sub
fwait
mov
divl
push
jne
in
aad
fs
filds
insl
push
inc
mov
fwait
fwait
sbb
stos
xchg
cs
es
jecxz
les
or
xor
bound
pop
cs
cmpb
ret
insb
xor
pop
xor
cmp
sub
dec
mov
fcompl
or
xor
shrl
xchg
pop
and
leave
mov
repz
leave
inc
sub
dec
mov
pop
cs
dec
test
pop
out
jmp
imul
pop
std
sbb
and
add
dec
pop
push
mov
jecxz
xchg
and
dec
inc
sbb
sub
out
and
cwtl
xchg
popl
pop
cmpb
sbb
ss
push
imul
lock
in
sub
out
fstpl
push
ljmp
mov
ljmp
mov
iret
loopne
ret
sub
and
adc
imul
out
lods
fisttpl
insb
ljmp
repz
xchg
mov
xchg
sub
pop
adc
popa
jae
sbb
jl
pop
push
stos
lods
cltd
push
pop
and
loope
insl
mov
in
sahf
in
gs
inc
xchg
sbb
jl
jg
iret
add
test
lods
xchg
and
jmp
dec
push
fdivrp
sarl
cmpsb
movsb
cmp
xor
sub
inc
sub
mov
fimuls
sub
adc
std
cmp
into
pop
ds
sbb
movsb
mov
mov
popa
imul
ds
lret
push
fs
test
dec
in
xor
pop
iret
pop
daa
inc
dec
sarl
imul
sub
negb
lods
mov
sub
les
fidivrs
sbb
out
data16
lds
push
xchg
mov
mov
mov
cltd
out
pop
cld
xor
dec
mov
sbb
fsubr
or
rcr
jmp
jecxz
into
inc
out
rcrb
inc
test
mov
cmp
ds
bound
jecxz
test
mov
and
and
sub
ss
insl
jg
pop
sahf
pop
lea
xchg
mov
in
shll
in
cmp
sbb
cmp
movsl
std
xchg
fstpl
sbb
jns
rcr
sub
data16
or
sub
push
rclb
or
scas
pop
cmp
mov
lret
pop
jne
sbb
pop
and
fisubs
icebp
and
adc
xchg
hlt
lds
adc
insl
mov
adc
inc
enter
mov
mov
cmpsl
dec
lret
adc
lcall
lds
mov
mov
push
loop
int3
lret
xlat
rol
in
pop
mov
mov
sarb
fsubs
xlat
movsb
ljmp
test
es
dec
dec
inc
lcall
mov
stos
inc
inc
cltd
out
mov
ljmp
repz
mov
out
dec
jmp
jle
jle
push
inc
lcall
pop
aaa
adc
call
jns
movsl
push
xchg
sbb
fs
push
stos
lret
inc
dec
adc
aam
ret
mov
test
sub
ds
lcall
inc
and
xchg
pop
fwait
arpl
fwait
sbb
xor
repnz
aam
inc
in
jecxz
sarl
add
pop
mov
lods
ds
aas
shrb
and
mov
mov
lock
iret
mov
psubq
repz
mov
jmp
int3
dec
dec
outsl
mov
sbb
les
pop
xor
pop
mov
jnp
repz
scas
jmp
mov
push
in
xchg
fcom
aam
adc
mov
dec
pop
jae
shll
shrl
rcr
pop
push
xchg
shl
out
scas
push
in
scas
mov
scas
rcrb
mov
mov
leave
dec
dec
or
xor
pop
and
test
mov
mov
scas
inc
jecxz
out
inc
sbb
xor
cltd
inc
out
lahf
loopne
mov
jne
lret
and
mov
insb
faddl
insb
fistps
push
mov
mov
repz
jle
push
les
inc
inc
push
stos
movsl
dec
lret
lret
jg
inc
enter
mov
dec
ficompl
xchg
repz
frstor
mov
cs
pop
and
cmc
data16
dec
xor
sub
leave
sub
fstpt
mov
lahf
or
sbb
rcr
mov
aas
cmp
mov
jae
jo
sub
ja
in
fstpl
lods
fisttps
test
sub
mov
cmp
mov
fmul
enter
stos
jne
xchg
pop
enter
dec
mov
fnstsw
imul
jmp
pop
leave
roll
fisttpl
mov
sbbl
mov
adc
xchg
lret
cmpsb
mov
inc
sbb
in
sbb
das
and
dec
pop
jns
cmp
cmc
faddl
pop
add
mov
add
mov
jae
sbb
xor
dec
out
jmp
lcall
jmp
sarl
add
fcmovne
fiaddl
jbe
fldenv
dec
fildl
mov
shrb
xor
pop
mov
pop
call
adc
imul
jl
nop
out
hlt
stos
jg
xchg
fiaddl
jp
pop
repz
in
out
stc
out
nop
sub
pop
in
fistps
inc
cwtl
sbbl
jmp
subl
fdivrs
sarl
jmp
adc
shll
mov
ljmp
inc
push
xor
and
cwtl
mov
sbb
mov
xor
mov
jl
scas
xor
in
cs
sub
mov
jnp
push
xchg
sbb
ds
ret
in
int3
imul
pop
jns
cwtl
pop
xchg
dec
xor
xchg
or
in
repnz
cs
shrb
aas
and
das
or
in
fisubs
fldcw
fimull
mov
out
and
popf
je
jno
lods
xor
mov
add
or
dec
pop
ret
aad
push
xor
mov
jle
push
cwtl
aam
or
lret
push
lock
ljmp
dec
mov
cmp
inc
xchg
xor
and
add
sbb
repnz
fdivrs
out
ja
call
addl
sbb
outsl
inc
mov
jmp
outsb
movsl
data16
out
xchg
or
ret
jns
lahf
imul
dec
cmpsb
jno
push
rcrl
insb
sub
clc
repz
loopne
sbb
test
push
add
jl
sti
repz
mov
sub
mov
mov
mov
orl
jmp
aaa
mov
or
data16
inc
xchg
std
mov
orb
sub
outsb
fnsave
fidivl
sti
sbb
and
in
lret
ljmp
js
ja
repz
imul
ljmp
mov
arpl
sub
in
lods
fcompl
shr
mov
inc
repnz
lds
lods
fcmovnu
cwtl
ret
jns
xlat
loope
pop
or
jmp
add
int3
mov
and
fadds
mov
inc
cmp
pop
and
andb
pop
jl
sbb
repnz
add
sbb
stos
les
jmp
push
divl
test
sbb
testl
mov
adc
fcoms
jmp
popa
sbb
push
jmp
hlt
pop
push
insl
ret
xor
pop
inc
imul
push
push
out
test
mov
mov
push
jecxz
pop
jge
aam
xchg
call
fcoms
dec
mov
lea
sbb
or
lds
jp
push
mov
mov
pop
xchg
outsl
jmp
cmp
daa
fistpl
xchg
xchg
mov
mov
aam
arpl
aas
sbb
sbb
sbb
rorb
icebp
add
negb
decb
mov
lret
lret
jns
insl
mov
push
test
sti
sbb
mov
int3
pop
mov
icebp
daa
sbb
les
pop
ret
pop
int3
push
fsubrl
stc
dec
mov
mov
adc
arpl
mov
insb
mov
dec
push
xor
push
pop
rcll
inc
xchg
leave
cmp
jmp
dec
int
sti
aam
mov
aaa
hlt
xor
call
fwait
mov
cmpsl
pop
mov
call
mov
fiadds
mov
push
insl
push
aad
insl
xchg
cmp
jle
call
icebp
fisubs
push
jbe
dec
cmp
hlt
jl
mov
test
dec
cmp
pop
ret
lods
sub
inc
or
stc
mov
popa
cmp
popf
dec
add
popf
stos
aam
stc
mov
lea
popf
sahf
dec
sbb
inc
adc
dec
frstor
push
jp
aad
dec
jne
orl
movsl
and
xor
sbb
aas
sti
pop
cltd
fnsave
jle
addl
xchg
jl
cli
rcr
int
in
pop
jo
js
lods
cmpsb
fistps
and
xchg
xchg
sub
fdivrl
into
jnp
imul
and
add
push
xchg
sub
sub
setae
pop
inc
push
mov
fisubs
add
cmp
aas
jnp
arpl
inc
inc
ljmp
leave
fdivrl
sbb
pop
pop
outsb
inc
fnstsw
xchg
das
repz
nop
pushf
and
push
frstor
loop
packsswb
fcmovnb
pop
dec
mov
and
xor
ljmp
outsb
stos
pop
lret
daa
ds
inc
frstpm(287
enter
mov
cmp
or
test
inc
loopne
fwait
jnp
shrl
cmc
ss
pop
dec
jnp
push
or
outsb
outsb
popa
dec
fidivl
jecxz
test
mov
iret
repz
stc
mov
pop
int3
jmp
outsl
xor
lds
sti
xchg
cld
inc
enter
push
adc
mov
fwait
dec
dec
mov
stos
mov
popa
lcall
fwait
aam
mov
outsl
push
inc
ret
mov
xchg
hlt
nop
cmp
jecxz
cmc
pop
pop
and
push
xchg
in
cltd
xor
lahf
out
pushf
rorb
mov
mov
ret
push
pop
fmul
sbb
mov
adc
sbb
stos
scas
test
xchg
and
inc
addr16
aam
outsb
mov
mov
loopew
jecxz
shll
or
xchg
repnz
mov
insl
inc
in
insl
lock
push
inc
test
addr16
in
xor
inc
pop
cli
js
fwait
shlb
dec
add
sti
outsb
fsubrs
lahf
mov
push
stos
push
loopne
adcb
dec
mov
dec
pop
insl
mov
and
sbb
sub
movsb
je
scas
ljmp
mov
lcall
mov
and
mov
push
cwtl
fstpl
sbb
ret
sbb
sbb
loopew
int
lods
loope
xlat
out
clc
and
ret
sbb
jae
mov
dec
insl
sahf
outsl
add
sbb
pop
bound
push
xor
ret
mov
mov
cmp
in
fmull
out
and
cltd
push
test
fmulp
dec
test
jno
insl
jecxz
pop
outsb
fisubrs
dec
subl
push
ret
icebp
mov
inc
fstp
std
jp
loope
cmp
subl
mov
inc
call
shr
fisubl
movsl
dec
adc
iret
fistpl
dec
sti
pop
lret
sub
cmp
and
dec
cmpl
push
jnp
dec
and
sbb
add
or
lea
popa
mov
add
bound
sbb
xchg
inc
sub
mov
or
mov
cmp
std
or
mov
imul
xchg
cmpl
sti
push
in
sbb
pop
add
dec
ss
mov
das
mov
inc
shr
out
push
in
inc
dec
inc
fcoml
pop
pop
stos
adc
lock
div
out
cltd
push
or
adc
adcb
jge
mov
aas
cmpsb
inc
push
fnstcw
inc
lret
lds
notb
sbb
call
mov
shr
cli
mov
bound
inc
and
mov
add
and
push
imul
lahf
xor
mov
mov
fs
sbb
sub
cmpsb
push
jo
xor
out
mov
inc
fcoms
push
out
mov
inc
push
lret
ret
push
and
int
enter
inc
out
fldcw
push
ror
and
lcall
sub
dec
dec
pop
inc
pop
sub
jne,pn
leave
daa
pop
ljmp
faddl
sahf
aad
ror
das
xchg
cltd
dec
mov
mov
jno
ret
pop
jle
mov
xchg
push
sub
leave
stos
cmp
mov
cmp
stos
inc
cltd
push
sub
scas
stos
and
movsl
inc
sbb
xor
dec
dec
les
fmul
pusha
rcll
mov
lea
or
inc
rcrl
push
imul
dec
pop
aad
sub
push
and
popa
sahf
mov
mov
pop
imul
pop
mov
mov
jp
loope
stos
dec
cld
cmp
shll
inc
dec
cmp
jno
dec
shrl
sbb
and
jnp
movlps
lret
and
pop
rcr
stos
cmp
loopne
shrb
mov
lret
pop
les
roll
dec
sbb
inc
popa
addr16
int
aad
mov
pop
push
in
mov
xchg
test
xchg
mov
xchg
dec
mov
sbb
mov
inc
fwait
add
leave
aas
mov
sbb
enter
aam
mov
aas
inc
mov
aaa
and
pop
mov
stc
je
sbb
pop
aaa
adc
sub
or
jmp
and
jns
fisttpll
faddl
out
adcl
adc
xchg
arpl
mov
lret
xlat
orb
int
and
je
xchg
sbb
xchg
testl
outsl
ret
in
ja
icebp
sub
push
add
xor
pop
std
jnp
gs
hlt
in
sbb
push
mov
frstor
push
cwtl
fldl
or
jecxz
fcoml
mov
stos
scas
out
fistpl
adc
fcompl
pop
mov
ljmp
mov
andl
push
test
cltd
dec
jge
imul
int3
mov
ret
xchg
pop
stc
shll
push
aaa
lods
outsb
fildl
and
mov
sub
loopne
xchg
inc
push
ficomps
sti
fwait
rcrl
aad
pop
xlat
and
int3
push
loopne
lods
cmpsl
ljmp
xor
pop
popa
sbb
push
scas
mov
sub
shll
xor
mov
jbe
sbb
push
or
iret
ret
push
and
xor
mov
repz
xchg
stc
imul
xchg
cs
or
and
cmpsl
or
dec
loop
rorl
das
shlb
ret
movsl
stc
jecxz
xchg
sbbb
popa
mov
outsl
sarb
jo
dec
xor
inc
cli
outsl
mov
mov
inc
into
sub
inc
sub
ret
mov
pop
test
ret
outsb
loop
jg
mov
mov
pop
in
mov
ficompl
pop
xchg
pop
inc
in
fs
out
sbb
cmp
fisttpll
insl
jno
sbb
ja
jge
ljmp
lds
add
pop
push
xlat
arpl
ja
cmp
mov
dec
daa
pop
fimuls
push
int
lods
leave
cmp
sti
fadd
push
daa
push
enter
add
loope
mov
fdivl
dec
test
int3
loopne
sub
into
aaa
ljmp
push
inc
ret
dec
xchg
out
lea
pop
xchg
inc
pop
and
test
insl
ret
pusha
mov
jnp
popa
jbe
cmp
mov
aas
dec
xchg
test
cmp
fiaddl
sbb
xor
push
mull
jle
movsl
sub
inc
test
jmp
adc
add
pop
or
pop
add
rcl
fwait
rorb
enter
inc
adc
mov
sub
out
mov
ss
inc
and
leave
mov
test
sub
sub
mov
jns
in
jmp
mov
jecxz
fisttpl
push
aas
mov
mov
mov
cli
push
jnp
sbb
inc
cwtl
push
repz
sub
cmpsb
test
mov
pop
shll
mov
dec
mov
xor
leave
and
dec
adc
fsubr
ret
mov
imul
shl
pusha
xchg
gs
pop
lods
shrb
repz
mov
pop
data16
cmp
loopne
fldl
dec
jl
test
cmp
dec
jb
sbb
lea
cld
ljmp
shrl
jno
jmp
jno
pop
mov
dec
xchg
xor
sbb
and
pushf
hlt
es
mov
movb
cmp
dec
dec
xchg
sub
sti
cmpl
inc
jle
aam
test
nop
shrb
xor
popf
cltd
and
sahf
shl
dec
lds
fsubl
xchg
jle
pop
adc
enter
das
out
xor
fcompl
mov
je
mov
cmp
sbb
cltd
cltd
jo
mov
out
aad
pop
mov
shll
les
decb
outsl
sub
sbb
lcall
out
dec
adc
movsb
shll
les
pop
cmc
sbb
leave
mov
cmp
sbbl
and
adc
shlb
scas
jg
sbb
add
pop
xchg
movsb
adcl
outsl
xor
jmp
mov
ret
inc
and
int3
icebp
sbb
or
ret
sbb
test
andb
fisttpll
add
dec
pop
push
and
inc
jno
pop
xor
hlt
rol
xchg
jns
pop
mov
out
jne
pop
les
cmp
jne
out
and
iretw
xchg
fs
mov
jo
adc
sbbb
inc
pusha
sar
xlat
xor
sub
inc
rcrl
xor
xlat
inc
mov
cmp
and
shl
xlat
in
arpl
sarl
arpl
xchg
jno
int3
roll
xchg
jecxz
lea
adc
jge
and
enter
push
mov
sub
mov
mov
xchg
jle
pop
notl
jecxz
test
sub
pand
sub
lret
and
test
ret
jmp
mov
mov
pop
dec
in
push
icebp
nop
inc
lret
sbb
mov
fwait
push
test
push
push
std
shrb
in
ljmp
cwtl
subl
sub
popf
fcmovnb
jmp
out
aam
std
imul
out
xchg
mov
fcomps
push
cmpsb
push
fwait
scas
xchg
sub
xor
shll
repz
or
inc
aas
std
mov
insb
mov
sub
sbbl
pop
insl
sbb
ds
aas
in
test
jg
mov
and
fistpl
mov
decl
dec
addr16
daa
cmc
ljmp
mov
scas
cltd
and
fnsave
std
lods
adc
dec
push
mov
les
popa
jae
or
gs
lds
in
fisttps
push
xlat
xlat
or
loope
dec
roll
jecxz
jne
bound
dec
pop
dec
mov
jae
mov
inc
cmp
jle
fdivrl
popa
inc
mov
sbb
addr16
mov
fwait
xor
push
lds
sbb
sub
xchg
int
mulb
add
pop
xchg
pop
xchg
and
cmp
fimuls
jl
push
fwait
sbb
lds
enter
pop
es
fnstenv
imul
sub
cwtl
add
arpl
adc
adc
push
xchg
push
jne
or
leave
int3
adc
xchg
xchg
or
inc
aas
jecxz
loopne
xor
jecxz
xchg
dec
sub
adc
in
subl
imul
lret
das
jno
jmp
lcall
mov
dec
adc
add
gs
jo
stos
cli
dec
jmp
outsl
out
or
imul
pop
add
dec
jae
fidivs
outsl
sub
or
jns
jbe
lea
xchg
jecxz
jge
insb
fwait
mov
cmp
pop
leave
xor
jg
jns
pop
flds
gs
and
data16
dec
sbb
push
call
imul
dec
fistpll
push
fsubs
and
xchg
lcall
dec
xchg
inc
or
xchg
xchg
leave
es
std
int
outsl
sbb
lea
sbb
rol
and
mov
cltd
out
fpatan
pop
test
sub
dec
stc
int
insb
cmp
sub
jmp
clc
inc
cmpb
rcr
adc
pop
pop
xor
sbb
sub
and
mov
dec
fidivrl
mov
sub
sbb
mov
cld
push
add
sbb
mov
test
sub
lea
addr16
pop
pop
lea
mov
scas
lds
rcl
aam
pusha
and
sbb
mov
int
int3
lods
push
mov
jae
mov
mov
mov
outsl
jne
pushf
adc
rcr
dec
incl
mov
hlt
test
arpl
ss
mov
mov
sub
je
rolb
test
imulb
push
lock
imul
sbb
lcall
je
aam
cld
or
xlat
xlat
push
stc
push
mov
ljmp
fucom
xor
sar
pop
repz
sub
decl
sbb
lock
jb
xchg
mov
jae
push
add
addr16
and
adc
addl
xor
or
test
lea
lahf
incl
aam
shll
fcoms
inc
lods
gs
je
mov
jmp
xor
push
nop
mov
and
stc
push
ret
mov
jl
cmp
sbb
inc
fsts
adc
mov
inc
fistpl
inc
leave
xor
ret
les
daa
ret
out
mov
lds
pop
mov
xlat
cmp
sti
mov
dec
repz
jecxz
addr16
out
cmpsl
cli
sub
imul
gs
das
xlat
stc
ficoml
or
je
pop
aam
xor
mov
add
xchg
cmp
or
xchg
cmp
lods
fmull
cmp
add
in
aam
fs
push
int
or
rcll
pop
cmpb
dec
inc
and
cmc
pop
jmp
xchg
jecxz
fsincos
aam
int
cmp
inc
mov
pop
cmp
push
pop
cmp
mov
sti
js
imul
pop
push
jns
mov
and
cld
aas
jecxz
adc
insl
pop
mov
or
mov
insl
mov
cmpsl
dec
xrelease
mov
xchg
mov
test
jmp
sub
gs
mov
sbb
push
xchg
repz
and
in
or
adc
sti
mulb
iret
adc
stos
int
jecxz
pop
pop
or
mov
sub
push
in
add
movsb
fcoms
mul
jno
pop
jmp
adc
mov
push
xor
dec
pop
loope
cli
int
imulb
fistpll
or
leave
es
js
jmp
push
sub
in
cli
xchg
shll
lcall
cmp
fnsave
imul
pop
jmp
mov
dec
int3
xor
movsl
xchg
pop
andl
loop
stos
push
test
jmp
mov
and
leave
jecxz
sarb
divl
mov
movsb
push
sbb
mov
mov
push
dec
xor
fdivrl
addr16
jbe
mov
outsl
sbb
inc
out
mov
xchg
jmp
roll
mov
sti
sbb
leave
mov
and
fcomps
sbbb
push
es
orl
or
scas
fisttps
adc
sbb
cs
jl
in
test
aaa
loope
in
jmp
cmpsl
scas
dec
jecxz
fwait
stos
rolb
adc
and
movsb
push
push
cmp
sbb
cmp
repz
xlat
sbb
fdivp
lahf
pop
bound
jnp
int
add
aas
pop
push
aam
push
mov
adc
fldenv
jp
sbb
arpl
imul
xchg
or
cli
cwtl
stos
pushf
xchg
jo
push
mov
fwait
repz
cmpl
movb
dec
dec
and
ret
mov
and
mov
mov
sar
cmp
mov
jmp
test
cmc
mov
xor
jno
push
adc
pusha
scas
lret
popa
lcall
push
jae
jge
dec
jmp
je
mull
dec
orl
int
fsubrp
imul
nop
adc
in
movsb
outsb
push
add
push
mov
push
in
mov
xchg
fldt
pushf
subl
inc
fwait
daa
frstor
test
in
fistpl
sti
imul
js
test
mov
shrb
out
xchg
push
xchg
mov
dec
xor
sub
xchg
test
jmp
shrb
push
addb
outsl
sub
arpl
test
mov
ficompl
hlt
xor
mov
pop
sbb
jns
push
mov
roll
es
jnp
lock
and
adc
cmp
addb
pop
scas
test
les
mov
outsl
cmp
jge
mov
imul
push
rorl
loope
sbb
cmp
jp
in
ret
mov
dec
xchg
xchg
inc
pop
pop
popa
xorl
adc
sbb
add
inc
outsl
jo
imul
or
popa
jns
cmp
lock
or
and
cmp
jnp
je
push
push
imul
add
sub
sbb
pop
inc
stos
lock
mov
mov
lret
int
mov
sbb
pop
dec
add
les
test
shl
fstl
rol
pop
sti
jmp
xor
sbb
popl
and
inc
fidivl
adc
jmp
hlt
sub
out
scas
fsubrl
xor
icebp
pusha
jne
in
test
lret
or
cmc
int3
cmp
imul
xchg
scas
fsts
add
jmp
mov
add
ret
imulb
mov
adc
adc
jecxz
gs
pop
cmpl
add
aam
sar
cs
call
fcmovnu
cmp
repz
adc
jmp
imul
and
jp
mov
inc
xchg
fisubrs
jge
sbb
adc
xor
bound
cmp
jp
fisubs
int3
mov
clc
outsl
cltd
adc
fcmove
ja
test
imul
frstor
popa
cmpsl
in
aas
repnz
mov
sbb
add
pop
cmp
es
inc
sub
popa
xchg
movsl
ljmp
cmp
lcall
mov
lods
aaa
jle
std
repnz
sub
xchg
ljmp
inc
pop
fstl
mov
pop
or
xor
inc
int
push
jmp
jecxz
push
addr16
not
push
inc
imul
inc
bound
sub
or
xchg
push
xor
addl
pop
stos
lods
cltd
push
jl
lock
sbb
jl
mov
out
ficomps
xchg
sub
lcall
fld1
sub
bound
push
ret
jmp
test
jae
data16
dec
adc
pop
jno
shll
xor
inc
jp
loope
into
mov
je
gs
fsubrl
test
mov
aas
scas
mov
sbb
jge
leave
push
fildl
rcl
into
sub
test
in
fistpl
leave
sub
adc
clc
cwtl
ficoml
mov
decl
ljmp
or
inc
push
ret
loopne
andl
psllw
fcoms
xchg
adc
cmp
shlb
aad
movl
sbb
xor
mov
loope,pt
sti
sbb
jecxz
loope
mov
rolb
push
dec
fistps
jbe
jmp
fucom
sbb
into
jecxz
jnp
sbb
dec
cli
dec
jmp
rol
sbb
mov
push
in
mov
leave
cmpsb
jmp
mov
cmp
sbb
adc
jmp
or
sbb
lea
sbb
jecxz
repz
sbb
cmp
xor
imul
aas
xchg
pop
pop
ret
repz
aad
fidivrl
mov
add
imul
lds
in
add
mov
fmull
jmp
leave
sbb
sbb
outsl
mov
pop
in
in
ret
inc
call
int
outsl
gs
data16
aas
cmp
in
adc
xchg
cmpsb
in
movsl
lods
test
jnp
mov
cmp
int3
lods
sbb
iret
xlat
int3
stos
sbb
sbb
xlat
int3
sbb
sbb
int3
xchg
sbb
xlat
int3
cltd
sbb
fcoms
mov
xlat
int3
fwait
sbb
xlat
rolb
jg
fcoml
fcoml
fcompl
fcmovbe
cmpsb
xchg
mov
sbb
lea
and
xchg
shl
mov
sbb
fcoml
sub
mov
or
imul
in
imul
int3
shrb
mov
rol
xor
imul
mov
inc
inc
mov
xchg
jno
mov
in
mov
xchg
test
pushf
lcall
sti
ret
add
dec
cmpsl
xchg
sbb
mov
in
jnp
jecxz
pop
jmp
out
das
xchg
jmp
sarl
in
inc
mov
jmp
lds
mov
lds
sbbb
sbb
cmovnp
xchg
repz
dec
pop
xor
mov
leave
add
loop
jmp
xlat
pop
jp
in
sbb
outsl
pop
jmp
xchg
pop
xlat
ja
jmp
sub
pop
lds
pop
jmp
sbb
addr16
pop
jmp
sbb
dec
dec
push
sub
movsb
ret
leave
xlat
shrl
ficompl
mov
stos
inc
arpl
fidivrl
stos
scas
arpl
push
into
stos
mov
inc
les
lahf
arpl
jmp
or
or
cmc
or
xchg
xor
aaa
in
fldenv
ljmp
enter
pop
js
sbb
sti
mov
mov
rol
sub
inc
cmpsb
movsb
pop
and
xchg
sbb
cmp
inc
mov
in
pop
jae
and
es
jae
mov
flds
xchg
aas
inc
mov
jl
adc
cli
vpminsw
xor
loop
out
sbb
in
xchg
into
jge
jno
or
push
mov
adc
mov
int3
cs
cmpl
xor
cmpsb
fmulp
xchg
imul
dec
rcrb
mov
mov
das
mov
xchg
loopne
shll
xor
loop
cli
sbb
fldenv
add
xchg
push
push
sbb
cmc
xor
cmpsb
and
std
ljmp
pop
and
sub
mov
cwtl
xchg
sbb
dec
outsb
enter
and
jge
jnp
outsb
mov
rcrl
addr16
jo
xchg
imulb
in
out
lahf
dec
cmpsb
inc
and
loopne
nop
push
adc
mov
sbb
int
iret
pusha
cmp
cmp
mov
pop
dec
mov
mov
sbb
das
jno
xchg
rcrb
sub
sub
dec
setge
ss
int
out
cmp
jg
cld
fdivrs
fucomi
sbb
ja
adc
stos
and
add
in
jle
push
adcl
add
outsb
in
jns
jg
cmpsl
pushf
and
imul
pushl
les
sub
sbb
dec
test
push
fidivrl
push
dec
mov
xchg
mov
fildll
jle
inc
sbb
pop
add
push
xchg
gs
jle
enter
inc
fwait
rcll
xlat
pop
clc
push
nop
pop
scas
testb
stc
sti
push
xchg
jle
mov
insl
push
shrl
cmp
pop
xor
les
movsl
and
xor
add
sbb
aad
rcr
xor
mov
inc
ret
lods
out
int
ds
test
ret
and
xlat
and
push
cli
cltd
insb
data16
std
sbb
vmulps
jbe
js
test
jg
cmp
xchg
ljmp
xor
enter
movsl
push
pop
pop
imul
sti
xor
in
sbb
ljmp
xor
fldl
cs
in
popa
pop
add
out
imul
xchg
mov
jae
jbe
cld
and
inc
jae
pop
mov
jecxz
mov
and
icebp
lret
adc
lock
add
mov
cs
aaa
sbb
shll
fsts
jecxz
cs
mov
xlat
mov
fldenv
xor
ret
clc
xor
mov
pop
cli
popf
mov
pop
jnp
add
mov
jb
movsb
sti
fnstenv
je
ja
incl
push
jge
xchg
test
mov
push
sbb
sti
mov
sbb
inc
sbb
and
stos
int
dec
mov
cmp
jecxz
inc
mov
jnp
rorl
das
dec
fsub
in
ret
jmp
mov
movsl
dec
mov
mov
mov
sub
rclb
xchg
iret
pop
or
les
dec
push
xchg
test
scas
xor
sbb
jb
fwait
out
aas
stos
push
popa
cmp
mov
mov
pusha
lcall
inc
cmp
aad
out
sti
insb
xor
xor
sbb
or
sub
pop
icebp
leave
ret
sbb
mov
lahf
jnp
shll
scas
je
jle,pt
mov
imul
mov
sarb
nop
adc
stos
sbb
in
mov
test
ret
and
iret
repz
xor
mov
mov
mov
inc
push
xor
cmpsb
into
int
int
js
jg
sub
xchg
sbb
loope
inc
int
lods
pop
xor
mov
inc
je
sub
adc
stc
inc
dec
cmp
xchg
je
sbb
add
testb
xor
ja
rcr
inc
inc
frstor
adc
jp
jns
inc
sbb
inc
sub
fwait
add
arpl
je
lds
fisubs
pop
lret
and
popa
jmp
aam
or
fwait
orl
ret
jle
pop
xlat
fstpl
int3
cltd
xor
xchg
pop
jl
mov
lods
cmp
jecxz
loop
into
and
xor
adc
pusha
out
cmp
lock
fiaddl
xorl
flds
jmp
idivl
or
sbb
jl
and
ljmp
clc
test
ds
inc
lock
and
out
in
enter
int3
mov
cltd
in
rdpmc
fisttps
mov
sbb
leave
jg
ret
out
mov
fstl
sbb
popa
push
mov
and
fistl
mov
daa
or
daa
jmp
push
mov
and
xor
test
nop
add
ss
xchg
mov
or
lcall
call
jmp
xchg
xor
jmp
call
xchg
insb
cmp
add
popf
in
pop
pop
lcall
jo
xchg
xor
jne
ljmp
stc
in
sbb
mul
ret
jb
fdivl
cmp
mov
out
and
fstl
add
ror
ljmp
fldl
fistps
jne
shlb
gs
cmpsl
adc
adc
push
mov
pop
mov
popf
divl
dec
loop
movsl
push
dec
nop
jb
repz
pop
mov
imul
pop
mov
les
dec
fsubrl
cmpb
mov
xor
pop
test
decb
mov
sbb
sbb
cmp
dec
mov
stos
lea
pop
cmp
sbb
add
xor
rcr
mov
dec
sti
leave
xchg
fidivs
icebp
int3
rcr
add
cmp
push
mov
lret
ret
cwtl
sbb
repnz
fsubrp
cmp
movb
in
repz
fadd
inc
xchg
rcr
pop
xor
mov
shl
jbe
inc
outsl
xchg
pop
sar
repz
and
orl
shl
mov
dec
xchg
dec
incb
iret
outsl
pop
inc
aas
dec
jae
xorl
cs
mov
sbb
mov
mov
test
cmp
sbb
das
xlat
jecxz
xor
es
xor
dec
fistpll
push
fisttpl
ds
loopne
imul
fistl
mov
dec
push
add
dec
dec
popa
lock
aas
iret
inc
inc
pop
mov
adc
lods
mov
cmpsl
jmp
cmp
stos
xor
int3
bound
mov
add
mov
dec
mov
fwait
add
scas
pop
inc
dec
cmp
leave
add
cs
mov
sub
fcomps
mov
movswl
jae
sbb
xor
push
push
sbb
das
aam
stc
nop
test
mov
or
sub
or
sbb
xor
mov
repz
fisttpll
inc
pop
mov
jge
popf
std
push
movsb
subl
aam
ret
add
jae
cmpl
ret
jge
jnp
mov
test
nop
and
dec
push
inc
lret
sub
inc
ljmp
shll
add
fnsave
and
and
push
pop
and
mov
xchg
pop
dec
jmp
data16
adc
add
jmp
and
mov
sbb
leave
and
mov
movsb
push
sti
mov
inc
outsl
sbb
cmp
and
mov
aad
std
es
pop
hlt
jne
fsubl
mov
mov
mov
cltd
pusha
movsb
lret
cmpsl
sub
xor
popf
pushf
shll
push
ret
pop
sub
cmp
mov
adc
sbb
imul
ret
gs
add
xchg
push
dec
inc
movsl
dec
popa
sbb
xor
sbb
sub
je
push
jo
mov
and
lcall
fs
jp
insl
aad
mov
lock
xchg
sub
cmp
push
out
push
xchg
jo
mov
stos
movsb
jmp
in
or
int
mov
push
loope
jecxz
iret
ret
mov
out
cmpl
inc
sub
fsubl
xchg
sbb
inc
push
add
ret
jg
mov
aam
imul
je
sub
xor
jmp
in
sbb
xor
shl
xor
cwtl
addb
and
test
popa
cmpl
add
mov
ror
insl
int
inc
jg,pt
adc
adc
pop
popa
pop
pop
jo
fdivs
xor
pop
ret
mov
inc
gs
pop
gs
in
ret
push
mov
mov
mov
fstpt
jns
ljmp
or
nop
gs
pop
lds
cmp
push
or
mov
pushf
popa
push
test
ja
es
aas
fwait
push
xor
mov
cli
or
push
dec
enter
cli
jmp
pop
pop
pop
sbb
xchg
mov
inc
decb
mov
jmp
das
pop
or
cld
dec
movsb
mov
popa
mov
ds
out
ja
and
shll
outsl
out
jne
sti
outsl
dec
imul
xor
scas
mov
jnp
adc
icebp
test
inc
inc
cli
fwait
or
cmp
inc
or
pop
cmpsl
or
popa
jmp
fidivrl
in
ret
in
and
pop
shl
gs
sti
cmp
jecxz
fsubl
clc
push
sub
jmp
lock
out
or
test
push
das
sub
and
mov
leave
jl
sub
lret
sbb
mov
jp
aad
daa
add
push
clc
push
std
xchg
das
stc
das
cltd
jp
gs
in
push
and
jecxz
pop
or
loope
inc
imul
pop
pop
pop
cmp
xchg
mov
and
sbb
xchg
inc
mov
rcll
imul
mov
addl
xchg
cli
xchg
cmp
dec
test
dec
inc
mov
cmp
xor
and
pop
jae
push
mov
inc
sbb
dec
orl
xor
jmp
dec
loop
int3
dec
inc
mov
adc
add
sbb
std
leave
ret
jne
addr16
mov
sbb
imul
mov
andl
ret
mov
addb
or
push
lds
fcompl
pop
xchg
aam
xchg
adc
dec
or
xchg
adc
stc
stc
pop
push
inc
sbb
and
or
mov
jae
xchg
data16
dec
pop
addb
mov
add
dec
adc
mov
pusha
subl
and
pop
fnstenv
cmp
adc
sbb
add
cmpsb
lds
xorl
arpl
pop
sarb
repnz
jns
inc
int
fadd
das
call
stos
xchg
xor
pop
sbb
pop
push
loope
jge
mov
pushf
mov
adc
sub
mov
jmp
mov
in
fsubp
push
mov
mov
repz
shlb
mov
mov
push
out
movsl
stos
fimuls
mov
adc
mov
and
aam
lretw
cmp
lods
lahf
fisttpl
push
lea
sbb
lcall
dec
and
jmp
shrl
push
ret
insl
cltd
mov
mov
loopne
add
jmp
pop
data16
jp
outsl
jns
dec
or
or
insl
iret
flds
cmp
or
sbb
imull
loope
in
or
xor
bound
stos
push
aas
inc
push
movl
sbb
scas
cmc
pop
cmp
or
xchg
mov
ret
ret
cmp
lods
lcall
sbb
xor
fwait
sahf
push
mov
pop
inc
in
subl
mov
std
pushf
scas
add
mov
add
gs
adc
lret
sbb
imul
repz
addr16
imulb
mov
leave
imul
inc
mov
mov
jno
std
lea
xor
add
xlat
insb
xchg
mov
in
adc
arpl
xor
cmp
test
mov
mov
cltd
sbb
mov
out
or
cmpsb
mov
adc
cmp
divl
in
hlt
mov
dec
pop
lcall
popl
dec
insl
xor
and
or
arpl
mov
addr16
ss
insl
inc
stos
inc
xor
in
shl
xchg
stos
add
inc
insl
ja
sahf
stos
mov
cmp
dec
jns
cmp
lret
fsubl
addr16
push
mov
inc
aas
sbb
add
pop
sub
arpl
aad
loope
inc
dec
lret
push
cltd
dec
mov
push
pushf
sub
icebp
pop
gs
jecxz
mov
sbb
mov
or
movsb
lods
mov
sub
adc
and
data16
outsb
pop
addr16
add
push
mov
das
sbb
in
inc
loope
adc
mov
jo
insb
sbb
js
fistpll
pop
pop
mov
xor
or
jmp
in
stos
lcall
aam
scas
movsb
shrb
and
mov
repz
jae
mov
push
addr16
jb
imul
andl
mov
xor
mov
loope
pop
add
sub
in
xor
cmpsl
mov
mov
inc
das
ret
lds
mov
xchg
scas
xchg
push
in
pusha
mov
fildll
xor
push
aas
push
je
sbb
mov
ret
int
movsb
add
xchg
sbb
sbb
add
popa
add
xorl
pushf
insb
leave
pop
in
xor
mov
xor
push
lret
cmpsb
pop
icebp
pop
dec
cli
jp
rolb
hlt
fnsave
mov
popf
inc
dec
sbb
jnp
imul
jmp
pop
or
cmp
hlt
jge
jge
aad
add
in
in
mov
pop
inc
or
out
ja
movl
std
jge
push
cmp
ret
ret
jp
xchg
pop
mov
jge
jmp
mov
pop
cmp
cmc
sbbl
lods
std
movsb
jecxz
inc
scas
test
pop
pop
cltd
add
popa
jb
rcll
enter
lods
mov
stc
mov
int
inc
les
inc
pop
push
mov
shrl
lds
lret
push
iret
mov
fsubrl
push
jmp
aaa
dec
dec
in
jmp
jecxz
mov
fsubl
enter
repz
xor
pop
fstps
xchg
jg
fistpll
jp
out
loopne
stos
lock
pop
in
icebp
fcmovnbe
sub
adc
mov
movsb
js
sbbl
dec
nop
ss
stos
jmp
adc
jle
mov
sbb
pop
lods
pop
loopne
data16
cmp
test
out
ret
decl
push
dec
scas
rcl
lock
stc
rolb
mov
mov
cld
out
in
jb
cs
pop
and
ljmp
and
sbb
mov
std
insl
in
xchg
dec
xchg
sub
add
sbb
mov
pop
mov
std
xor
pop
and
fsubr
in
pop
dec
jmp
sbb
inc
fsub
cmp
mov
sub
pop
inc
cmp
mov
mov
rcr
pop
pop
std
pop
push
ret
cmp
sub
test
neg
pop
sti
inc
fwait
aam
ds
arpl
xchg
roll
cmp
jg
cmc
mov
jecxz
hlt
mov
push
in
pusha
sbb
rcrb
mul
push
popf
push
xchg
push
in
inc
sub
sub
dec
adc
clc
aaa
rolb
insb
in
mov
jg
aaa
push
imul
inc
mov
pop
xchg
aam
mov
mov
push
leave
ret
inc
jmp
out
fistpll
sbb
sbb
ss
loopne
leave
xchg
inc
addr16
pop
repz
rorl
jmp
lods
movsb
sti
jecxz
xor
loop
push
jecxz
in
cmp
and
imul
addr16
fiaddl
fwait
dec
add
xchg
fildll
aaa
inc
xchg
ja
out
je
jns
pop
cld
stos
fwait
mov
xchg
repz
mov
push
mov
notl
mov
xor
bnd
addr16
lds
clc
or
dec
in
fcoml
xor
negb
aas
inc
mov
stos
outsb
adc
in
jge
push
stos
xor
addr16
mov
xchg
and
je
add
push
test
xchg
int3
std
sahf
fistps
das
in
fsubr
adc
sbb
inc
jne
pop
inc
fstl
jo
ja
mov
movsl
or
loope
out
orl
fnstcw
das
xchg
cmpsb
cltd
mov
mov
cmp
pop
adc
pop
cli
xchg
in
das
pop
add
add
sbb
jecxz
xchg
push
add
subb
dec
hlt
popa
sti
add
mulb
ret
pop
imul
leave
mov
popf
cmp
mov
and
fstpl
dec
stc
lahf
lret
call
xlat
sbb
push
fstps
repz
add
sarl
xchg
sbb
sub
ret
xor
fimull
fcoml
repz
iret
sbb
xor
stos
inc
out
and
push
mov
enter
mov
out
mov
ljmp
sbb
jmp
shrb
adc
cs
insl
xor
imul
pop
pop
add
xchg
add
mov
pop
dec
in
sbb
mov
adc
jmp
inc
cmp
loop
shrl
sahf
cmp
ret
rcl
inc
mov
xchg
test
ja
mov
repz
dec
jmp
sub
inc
mov
fcmovbe
mov
add
jo
outsl
cs
arpl
inc
repnz
arpl
divb
cwtl
push
adc
jns
in
xor
add
pop
clc
xor
fwait
jge
lock
sbb
outsb
test
mov
shl
and
arpl
push
ja
cmp
xchg
pop
ss
xchg
or
xchg
arpl
cltd
inc
pop
push
adc
mov
in
repnz
cmpl
test
sbb
aam
cmp
mov
sbb
rolb
ret
pop
xchg
pop
mov
idivl
lea
rcl
int
mov
xor
mov
test
ljmp
inc
imul
fs
dec
cmp
cld
xor
xchg
jmp
imul
inc
push
jb
inc
jp
in
iretw
pop
push
xchg
cmp
and
xchg
push
jmp
ret
in
inc
xor
shrb
and
lea
jmp
cmpsl
movsl
gs
push
ret
iret
mov
cwtl
cmp
ljmp
push
stos
scas
insl
dec
imul
rorl
cld
cmc
jmp
fadd
mov
inc
pop
xor
adc
frstor
mov
pop
aam
push
mov
inc
mov
fisttpll
jo
lea
stos
lds
int
stos
imul
aaa
dec
sbb
fwait
xlat
aam
cmp
push
fisubl
filds
imul
and
flds
mov
popa
gs
xchg
inc
add
imul
int
xor
jns
xor
inc
pusha
sahf
rcr
adc
popf
push
ds
rclb
pop
into
inc
fistps
imul
call
jnp
sbb
inc
dec
pusha
mov
pop
mov
xorb
and
stos
aaa
inc
inc
out
add
stos
gs
mov
push
inc
gs
xchg
addr16
or
dec
call
xlat
xchg
stc
dec
loop
mov
xchg
xor
inc
imul
mov
jmp
push
dec
cltd
jl
sbb
push
ret
mov
fstpl
hlt
in
inc
mov
leave
pop
inc
fstpl
jb
push
push
sbb
cmp
mov
inc
mov
mov
arpl
cmpsb
jbe
add
rol
ds
and
and
lret
div
loope
mov
xor
icebp
mov
bnd
jp
xchg
inc
int3
imul
mov
cmpsl
pop
or
lea
xchg
mov
dec
sbb
cld
hlt
ss
aam
inc
mov
mov
mov
arpl
adc
scas
into
or
in
mov
addr16
imul
inc
pop
popa
sub
xchg
pop
jmp
sbb
push
adc
popf
sub
xor
popf
rclb
inc
dec
sahf
cmp
hlt
dec
push
add
sbb
sbb
aam
rorb
mov
inc
sbb
jne
je
jge
and
pop
subl
xchg
dec
sbb
dec
jno
jne
fnstsw
ret
mov
mov
lcall
jecxz
xorb
jb
xor
mov
pop
mov
idivl
xchg
imul
mov
ret
mov
dec
shl
arpl
int
jge
gs
lea
dec
pop
jmp
push
pop
xchg
pop
inc
imul
mov
je
mov
in
xchg
xchg
mov
push
shlb
jmp
xchg
sahf
shll
jnp
fildl
clc
pop
cmpsl
pop
pop
sbb
xchg
out
std
test
xchg
scas
mov
addr16
mov
add
cmpsl
testl
inc
imul
dec
add
test
add
mov
int
mov
ret
dec
sbb
cmpsb
mov
cmp
hlt
jmp
sbb
and
repnz
mov
aas
out
sbb
cmpsb
fistl
or
cli
call
xchg
inc
pop
or
mov
push
cmp
fsts
add
mov
xchg
out
sbb
push
repz
addl
dec
jbe
insl
rcrb
mov
fwait
jge
mov
lods
pushaw
cmc
and
stc
test
push
es
jg
aas
fwait
mov
rcrl
fcompl
imul
cmc
push
hlt
xchg
ja
mov
lcall
xlat
int
fstpl
sbb
and
or
and
fadds
adc
cmp
push
pushf
jnp
ret
and
sbb
and
std
push
call
push
pop
xchg
ret
mov
mov
outsl
ds
data16
xlat
adc
outsl
sbb
ds
cltd
sbb
dec
xlat
and
pop
fcmovnb
scas
inc
loop
lret
push
scas
loopne
push
ret
add
jmp
test
pop
mov
inc
stc
scas
inc
and
in
inc
dec
pop
cmp
scas
fstpl
test
xor
add
push
sub
inc
pop
sarl
leave
int
loop
imul
jo
cmp
aad
jl
or
push
pop
lret
inc
pop
es
xor
sbb
adc
inc
mov
mov
xchg
jg,pt
imul
xchg
inc
popf
loop
xor
cmpsl
sub
mov
ljmp
xchg
cmpsl
leave
jae
cmp
xor
dec
cmc
sub
repnz
pop
pushf
dec
lret
sbb
enter
sub
adc
pop
inc
sub
out
pop
inc
imul
xchg
pop
or
or
ljmp
lods
imul
jnp
daa
movsl
imul
out
pop
mov
out
test
loopne
push
mov
adcl
lea
aam
sbb
mov
into
insl
pop
mov
sbb
jge
pop
imul
cmpsb
or
inc
aas
jns
inc
mov
pop
mov
or
rol
sti
imul
loop
mov
push
insl
and
stos
popf
cs
pop
cmp
jg
or
add
insb
inc
loopne
inc
adc
pop
dec
or
adc
int
jmp
loopne
mov
adc
in
into
cmp
inc
daa
jl
inc
xchg
lahf
xchg
addr16
and
ror
pop
sub
insl
jl
jns
inc
cmp
sub
frstor
stos
fdivrl
fdivrl
pop
pop
jecxz
int3
mov
in
mov
ljmp
jge
cld
jne
out
sbb
mov
sbb
dec
insl
ret
inc
or
jae
iret
cmp
cmp
jg
fnstsw
leave
cmpsb
fwait
or
aas
xchg
outsl
mov
or
dec
jmp
add
jecxz
pop
mov
stc
mov
sbb
outsb
mov
mov
dec
lods
rolb
mov
jnp
sbb
andl
test
sti
sbb
call
mov
jecxz
sbb
inc
call
push
fcomi
sbb
inc
push
add
sub
sbb
pop
mov
dec
repz
or
or
aas
dec
aam
imul
fwait
and
dec
pop
dec
fwait
rcrb
mov
stos
rcrb
out
stos
outsl
popa
jns
mov
dec
mov
inc
jecxz
pop
out
out
mov
clc
inc
dec
jmp
nop
xchg
shll
push
inc
dec
fdivrl
and
pushf
push
test
ja
xor
xchg
loop
mov
popf
into
add
cmpsl
add
fwait
and
adcl
mov
test
out
pop
jbe
jo
jp
jnp
lahf
fcoms
xchg
inc
xor
ret
mov
outsb
sbb
xchg
cmp
mov
movsb
adc
mov
push
mov
jecxz
jne
mov
cmp
pop
jnp
mov
sub
xor
pop
pop
adc
xchg
rcpps
cld
dec
fisubrs
imul
outsl
xor
inc
dec
cmp
ret
mov
int
aaa
test
or
hlt
sub
ficompl
arpl
push
push
scas
xchg
mov
faddp
loope
mov
pop
dec
jae
sbb
inc
aas
into
or
imul
stos
pop
in
pop
xchg
es
sbb
and
xchg
sbb
mov
or
xchg
mov
sbb
cmp
stos
cmp
out
mov
cmc
ficompl
leave
sbb
mov
sub
ja
pop
xchg
pop
mov
jo
pop
cmpsl
fdivrs
jne
movb
and
cmpsb
idivl
outsb
sbb
data16
cmp
add
push
mov
inc
xchg
inc
cmovge
jae
inc
sbb
imul
xlat
fldcw
popa
xchg
jp
popa
imul
mov
sbb
out
xchg
ljmp
jo
push
push
stos
push
stc
insl
pop
and
cmp
in
xlat
jmp
lods
outsl
sbb
inc
adc
pop
lahf
mov
ret
ret
sbb
cmpsl
jnp
mov
cld
nop
jno
ljmp
pop
mov
inc
sub
xorl
rcll
in
dec
cltd
pop
cmp
xchg
mov
pop
dec
cmpl
inc
jmp
in
xchg
jns
dec
test
fwait
jno
mov
mov
push
cmp
xlat
pop
arpl
inc
adc
in
mov
loopne
popa
sbb
scas
jp
add
push
xchg
ljmp
or
mov
nop
andl
dec
jns
cmp
fcmovbe
adc
hlt
fistps
mov
fidivs
jae
inc
arpl
xor
js
add
dec
notl
xchg
sbb
andl
inc
ss
adc
fdivl
mov
mov
push
call
shr
int
and
xchg
pop
jne
rcr
pop
popf
stos
xor
test
pop
cmpsl
std
adc
cltd
divb
add
stc
pop
jne
push
faddp
cmc
mov
int3
mov
std
dec
das
fyl2x
daa
fnstsw
push
stc
test
mov
cld
std
dec
movsl
pop
sbb
and
inc
jne
out
in
jp
jmp
pop
fdivr
mov
aas
jmp
fildl
icebp
aam
jnp
sub
neg
stc
and
out
test
xor
mov
daa
push
and
std
ljmp
sub
adc
gs
insl
imul
fsubrl
add
pop
int
jne
shrb
loop
out
xor
sbb
insl
xchg
enter
das
xchg
repz
or
push
js
xor
add
fcoml
adc
mov
mov
xchg
fsts
add
inc
aaa
and
insl
and
cmc
insb
xchg
test
push
mov
pop
sbb
clc
mov
mov
mov
mov
ffree
outsl
arpl
ret
testb
jp
leave
sub
cltd
fcoms
pop
or
push
and
lret
jmp
dec
inc
popf
out
in
imul
in
ss
jp
fsub
add
jmp
xor
dec
mov
mov
push
stc
push
insl
and
test
dec
loopne
dec
lods
imul
test
pop
inc
test
sbb
xor
subl
mov
subl
adc
ljmp
int
repz
shl
out
pop
scas
rorb
jmp
dec
out
and
sti
push
dec
sahf
imul
imul
dec
xchg
add
lods
cwtl
add
push
cld
sub
adc
cwtl
mov
adc
aad
or
mov
out
or
loop
jecxz
inc
push
dec
jno
adc
scas
xor
mov
popf
mov
fisttpl
insl
inc
out
lea
sub
xor
pop
clc
fcoms
dec
ss
cmc
fsts
stc
mov
mov
sbb
insb
add
lahf
arpl
icebp
and
in
push
adc
mov
sub
xor
imul
pop
rol
insl
mulb
fistpll
jge
pop
pop
push
pop
iret
push
imul
fnstcw
rep
pop
xor
loope
sub
cltd
imul
imul
movsl
pop
and
in
mov
ljmp
fists
adc
lds
jo
push
adc
cli
andl
pop
pop
pop
dec
and
lret
pop
mov
fwait
imul
xchg
pop
ja
pushf
and
sbb
inc
sbb
jmp
dec
sti
sbb
fs
pop
call
pop
gs
sahf
mov
cld
popf
call
jg
dec
pop
inc
pop
loope
jp
push
dec
xor
mov
dec
sbb
in
in
ret
lods
or
pop
inc
gs
fs
dec
mov
mov
mov
repz
mov
jmp
jecxz
or
adc
xor
cmp
xor
aaa
insl
push
push
das
add
mov
add
pop
push
frstor
push
xor
fdivl
lods
es
outsl
out
popa
or
sbb
cmp
xor
or
xor
fwait
push
negb
lret
arpl
or
mov
dec
jecxz
shl
lahf
add
pop
jg
lods
mov
es
xchg
stos
aam
stc
mov
roll
fstps
mov
push
pop
sub
nop
aad
aad
mov
imul
or
adc
or
sbb
or
fcomi
xor
insl
mov
cwtl
popf
lret
or
aad
and
fistpll
xlat
js
and
and
repnz
leave
cltd
in
inc
mov
addr16
push
xor
lods
xchg
mov
shrl
pop
das
inc
jg
test
jnp
xlat
push
aad
xor
hlt
fwait
jmp
hlt
pusha
mov
pop
cmp
mov
inc
arpl
push
inc
sbb
sbb
sar
sbb
data16
jnp
stos
sbb
jae
lods
mov
lahf
mov
jnp
xchg
and
arpl
divps
lock
into
lods
out
and
ss
popa
loope
push
lods
xor
mov
xor
aaa
cltd
out
js
fdivl
out
dec
jecxz
mov
les
call
xor
cmp
adc
mov
and
lret
xchg
mov
pushf
out
xor
jno
cltd
sbb
popf
sbb
xor
cmpsl
xlat
es
insl
dec
stc
sbb
in
fwait
xchg
inc
xchg
ljmp
ret
jmp
insb
pop
adc
dec
es
cmp
inc
sti
lea
inc
inc
dec
sub
cltd
ss
cmp
je
out
xor
inc
popa
fstl
arpl
xor
test
filds
out
and
lds
push
xor
lods
jbe
adc
sbb
insb
in
fucomip
add
cmp
daa
mov
mov
pop
mov
pushf
jno
out
pusha
out
pop
adc
sahf
mov
ja
fdivl
mov
sbb
ljmp
jecxz
stos
loopne
aam
das
out
and
and
sub
dec
adc
ret
inc
and
movb
add
jecxz
fwait
out
leave
sbb
or
xor
lea
aas
push
fwait
scas
fldcw
cmp
dec
push
lret
jbe
sbb
mov
cli
aad
imul
xor
mov
or
mov
lcall
in
pop
xor
adc
inc
ficomps
inc
xchg
mov
pop
sbb
fwait
mov
mov
mov
sbb
pop
lock
sbb
jae
stc
pop
jo
fs
sub
xor
dec
push
and
lcall
jmp
leave
inc
xchg
xchg
lahf
pop
fldt
push
jecxz
xor
rolb
insb
mov
dec
repz
sbb
sub
fisttps
mov
fimuls
sub
adc
fmull
aam
push
stos
leave
cmp
scas
pop
xchg
scas
fsubrl
fsts
xchg
xor
and
add
aam
inc
fistpl
mov
sbb
cs
adc
mov
aas
dec
ss
cmp
pop
xchg
push
cmp
and
stos
ds
imul
ljmp
je
mov
mov
repz
fnstenv
or
stos
loop
and
lahf
cmp
xchg
shlb
or
lock
stos
inc
and
ret
fcomps
sub
add
adc
inc
mov
mov
fstpl
ds
stos
fdivrp
ret
adc
fldt
xchg
push
mov
pop
xchg
add
out
add
push
dec
lods
inc
mov
ror
mov
cmpsl
stc
add
pushf
xchg
pop
sbb
sbb
test
sub
xchg
loope
push
movsl
gs
inc
adc
or
sbb
jle
enter
and
adc
xchg
pop
push
or
push
mov
aaa
push
sbb
rol
mov
imul
cld
xchg
fisttps
mov
cmp
mov
rcrl
and
in
imul
fwait
loope
ret
negl
or
xor
out
pop
fldenv
es
stos
test
mov
xor
cmp
in
push
sbb
pop
inc
or
std
es
pop
dec
sub
loope
adc
pushf
cmpsl
cld
test
mov
xor
jmp
adc
xlat
push
and
out
pop
imul
imul
enter
lcall
and
add
test
addr16
ficoms
pop
dec
jecxz
jnp
in
bound
repz
int3
pop
aam
pop
das
stos
cwtl
loopne
mov
push
out
add
pop
aaa
das
dec
jne
mov
inc
cmp
pusha
inc
aam
push
dec
mov
and
aaa
inc
test
insl
cwtl
and
cmp
rcl
in
push
add
leave
mov
dec
dec
push
test
cmpsl
jp
or
idivl
imul
sti
push
cmp
imul
movsb
das
mov
addr16
sbb
test
daa
pop
ja
xchg
ljmp
push
inc
imul
stos
jecxz
xor
sbb
xchg
cmp
iret
pop
lock
pop
das
lock
out
repz
push
inc
inc
fcoml
sbb
std
jg
call
push
dec
in
leave
sbb
sbb
pop
bound
fwait
mov
mov
mov
test
xchg
arpl
arpl
dec
lods
stc
cmpsb
dec
dec
je
xchg
hlt
aas
call
jns
mov
inc
andb
sbb
movsb
mov
xor
pop
arpl
jg
inc
mov
mov
and
stc
xlat
push
pop
fcomip
leave
push
mov
and
dec
scas
adc
adc
out
les
jecxz
xchg
mov
mov
sbb
xlat
ret
pop
aad
out
inc
sbb
xchg
adc
cmpsl
pop
push
das
loopne
aas
add
lock
sub
in
xchg
aaa
test
push
imul
push
dec
mov
ret
pop
int3
push
pushf
push
xor
jns
mov
mov
inc
insl
std
jo
dec
out
int3
and
insl
add
sbb
mov
fwait
test
mov
sbb
dec
mov
scas
sbb
leave
xchg
and
ss
enter
dec
sbb
jbe
fcom
out
leave
daa
dec
arpl
fnclex
dec
cmp
sahf
jnp
fucomip
out
sbb
sub
dec
ret
jp
imul
push
push
sbb
push
xchg
jmp
je
stc
adc
jno
push
pop
mov
push
inc
adcl
inc
mov
jae
or
outsb
es
rcr
lods
cmc
xchg
sti
addr16
add
jl
cld
cmp
adc
sub
sbb
ja
movsl
jns
push
xchg
xchg
sub
ja
cltd
je
pop
ljmp
ss
jge
sbbl
mov
pop
add
outsl
adc
test
add
rcl
int3
xchg
rcr
int3
mov
jg
test
mov
stc
rcl
icebp
cltd
inc
adc
sbb
movsb
cltd
les
inc
hlt
out
pop
add
xor
jg
inc
rcrb
ljmp
jmp
cld
jae
test
subl
pop
mov
and
mov
mov
adc
cwtl
shl
push
fdivs
sbbl
lods
clc
je
insb
jbe
scas
xor
mov
fwait
and
mov
loope
popa
xor
and
fsubr
mov
jae
pop
sbb
dec
sti
sbb
fwait
xchg
aad
mov
mov
push
sbb
adc
fdivrs
xchg
xchg
lahf
xchg
inc
and
sahf
xor
dec
imul
mov
pop
sbb
jns
jbe
xor
push
lds
fwait
and
int
xor
cmpsb
jl
scas
out
push
bound
leave
inc
jp
mov
inc
fildll
cmp
inc
cwtl
sbb
mov
cmp
rcrb
mov
xor
leave
aad
or
adc
dec
fcomps
int3
imul
lods
xor
mov
dec
out
xchg
clc
call
jb
test
in
aam
mov
in
aam
imul
or
add
mov
adc
test
loopne
bound
or
mov
xchg
mov
pop
push
test
pop
aad
mov
fst
ret
in
xchg
adc
leave
sbb
sbb
pop
cmp
xchg
test
sti
or
fdivrs
mov
js
js
inc
mov
popa
inc
shl
inc
ret
push
loope
or
fsubs
mov
test
inc
movsl
push
leave
mov
lret
gs
lods
bound
push
hlt
fldcw
std
jnp
jecxz
addr16
stc
pop
leave
mov
loopne
xchg
lock
imul
lahf
and
in
and
mov
repz
cmp
add
mov
pop
dec
rolb
mov
test
inc
aas
pop
fisttpl
adc
fdivrl
imul
sbb
pusha
sti
sbb
lock
stc
dec
jno
pop
jg
mov
and
test
inc
jl
fbstp
in
dec
enter
iret
addr16
jnp
hlt
or
fldt
rorb
adc
out
lods
call
faddl
jle
cld
jae
jle
add
sbb
jnp
adcl
test
scas
add
xor
imul
aam
dec
adc
jno
mov
ljmp
and
push
jnp
fwait
popa
pop
dec
jmp
ret
pop
mov
inc
ljmp
lock
clc
push
stc
cmpsb
ror
outsl
and
mov
std
mov
pop
inc
stos
unpcklps
dec
add
and
push
int
xor
jns
jne
add
jmp
adc
pop
xchg
mov
inc
test
idivl
sbb
pusha
insl
iret
out
sbb
in
repz
imul
pop
sbbl
add
mov
mov
daa
pop
scas
pop
jg
mov
call
sti
insl
xor
fcoml
dec
cmp
insl
dec
cmp
xchg
push
fldl
jno
mov
and
or
repz
fadd
sahf
jnp
pop
stos
add
sbb
pop
imul
dec
fcompl
enter
and
fists
and
sbb
push
sub
pop
gs
mov
sbb
mov
and
and
pop
mov
xchg
fmul
jne
xchg
jne
fcmovbe
push
jbe
lret
imul
mov
xor
inc
lea
sub
sbb
fwait
and
rolb
fisttpl
dec
xchg
addr16
mov
addb
pop
ret
xchg
fidivl
pop
and
in
inc
jbe
fwait
dec
sbb
imul
test
sub
or
neg
fwait
add
test
push
pop
adc
push
xchg
push
add
jmp
andl
flds
jno
dec
movsb
mov
lock
jne
add
pop
movsb
aaa
inc
pop
pop
shrl
cmovae
mov
xchg
inc
jb
add
mov
ss
jp
fcmove
push
sbb
inc
push
iret
enter
mov
cmpsb
inc
xlat
ret
add
sti
jns
adc
test
push
mov
movl
push
dec
fldt
pop
dec
xor
jb
test
fildl
inc
mov
sbb
mov
xlat
hlt
or
push
stc
sbb
push
mov
sbb
xlat
xor
push
rorb
out
mov
mov
mov
pop
mov
cwtl
add
xor
add
sbb
or
xchg
in
jno
sbb
jecxz
jo
stc
mov
fadds
int
outsl
add
je
mov
mov
into
sbb
jle
xchg
imul
add
out
inc
push
pop
jnp
xchg
int
aas
add
dec
std
mov
mov
dec
xor
xchg
xchg
jmp
adc
and
lret
repz
aam
push
xor
imul
pop
in
cmpsl
sub
mov
jmp
xor
jb
cmpsb
inc
mov
mov
pop
xor
jmpw
test
jecxz
push
jg
dec
pusha
imul
fsubp
mov
inc
jg
dec
imulb
mov
jno
adc
je
mov
cmp
sbb
mov
mov
in
scas
inc
sub
aad
imul
jns
fadd
fcoml
fdivr
fldt
sub
out
add
sbbl
stos
mov
clc
mov
arpl
dec
repz
mov
push
ss
xchg
fidivs
dec
test
dec
in
xor
mov
shlb
ja
adcl
pop
imul
push
mov
mov
xor
mov
xchg
lret
dec
and
vpmacsdql
stc
sbb
rol
mov
aaa
lods
jg
loop
cli
cld
dec
push
jns
call
lea
dec
in
push
add
mov
ret
sbb
arpl
mov
ljmp
cltd
es
insb
cwtl
out
mov
pop
mov
fiadds
int
movsl
rol
pusha
das
xor
repnz
ret
cld
aam
test
rcl
daa
mov
movsw
pushf
xchg
jno
filds
out
cltd
jl
mov
xchg
xchg
and
push
js
push
movsl
in
loope
sub
out
push
push
xchg
mov
mov
xor
jb
fadd
pop
dec
xchg
push
cmpsl
and
ljmp
dec
jmp
sub
or
inc
cmpsb
fistl
cmpsl
repnz
popf
add
cmpsb
dec
test
cwtl
add
dec
and
and
insl
imul
pop
in
mov
popa
sbb
sti
inc
and
gs
fisttpl
jg
cmpsl
pop
aas
and
xchg
dec
push
push
inc
xor
test
aad
in
fwait
push
xlat
pop
lret
and
jg
inc
push
jo
sub
jmp
and
aas
adc
cmpsb
cmp
and
inc
mov
insb
in
pop
fistpl
arpl
xor
mov
xchg
xor
push
mov
out
shll
ret
ljmp
aam
mov
in
fnsave
xchg
call
fcompl
jge
and
leave
sub
mov
test
cmp
xor
xor
cmp
jnp
push
lea
mov
mov
mov
xlat
cmp
and
pop
dec
sub
jne
jle
rcrl
inc
out
push
popf
xchg
es
repz
add
ss
cmp
into
ja
xchg
xchg
sti
data16
sub
sbb
mov
cmp
in
aam
jecxz
mov
fisubs
add
fdivrp
imul
ds
in
jmp
sbb
test
out
jmp
pop
in
mov
rcl
xor
mov
iret
cld
fiadds
cmpsb
sbb
mov
jb
call
repnz
cmp
xor
lods
fdivs
addr16
mov
jmp
hlt
mov
dec
pop
pop
rcll
mov
inc
clc
movsb
popa
mov
mov
adc
jo
ja
cmp
ret
or
pop
stc
xor
or
jmp
cmp
push
dec
jl
pop
loope
scas
mov
pop
sub
jp
or
ds
ja
addl
dec
jb
pop
inc
clc
push
cmpsl
sub
pop
popa
imul
jno
mov
mov
adc
push
pusha
lea
jge
jle
in
fwait
cltd
cmp
pop
aas
mov
push
pop
cmp
addr16
lret
lds
sbb
xor
or
imul
cli
ret
loopne
rcr
inc
sbb
xchg
jb
pop
pop
push
dec
xchg
decb
push
ret
xlat
inc
mov
jmp
cmp
cli
mov
push
in
pop
pushf
jns
cmpsl
adc
das
pop
out
mov
mov
popa
inc
sub
jo
ret
arpl
mov
lea
enter
and
and
jmp
or
std
in
fildl
gs
sbb
mov
push
scas
fbld
orl
mov
out
push
arpl
in
mov
dec
push
ss
mov
pop
leave
push
popa
jmp
ficomps
arpl
in
andb
pop
jle
daa
sahf
fidivl
push
fstpt
lcall
and
bound
mov
stos
jmp
imul
pop
jns
lea
mov
adc
imul
mov
xor
aaa
mov
fwait
ljmp
fdivrl
jle
int
or
push
push
stos
and
adc
in
xchg
adc
and
xchg
mov
es
pop
mov
inc
jbe
fdivrl
jo
add
inc
sub
pushf
xchg
pop
mov
xor
jg
push
fisubrl
mov
sarb
scas
jnp
mov
xchg
outsl
cmpsb
test
dec
sbb
les
shl
sbb
inc
mov
jns
mov
and
mov
xor
out
lods
cld
insb
push
jle
mov
push
mov
xlat
xchg
rorl
xchg
push
hlt
push
jge
repz
data16
aam
adc
lods
fisubl
mov
pop
imul
sub
in
pop
add
les
inc
loopne
stos
test
or
sbb
jge
pop
cli
mov
pop
cmc
xor
push
fwait
popf
in
pop
push
add
or
int
movsb
and
push
ss
insb
xchg
notl
push
dec
and
jno
add
daa
stos
repz
insl
jmp
sub
mov
fwait
movsl
call
xchg
mov
and
xorl
xchg
mov
xchg
es
lcall
ja
fidivrs
dec
mov
sbb
aaa
mov
es
mov
inc
sub
xchg
sbb
jnp
hlt
pop
imul
loop
sbb
cmpsl
fsub
imul
adc
ret
loopne
out
outsb
xor
mov
ljmp
or
inc
fsubs
and
add
mov
jl
mov
push
inc
ret
outsl
dec
ret
add
sub
push
add
inc
loopne
insb
test
or
int
lods
int3
popf
mov
jge
sti
in
pop
push
sub
ret
push
pop
inc
adc
or
jbe
cmpsb
fnstenv
push
jmp
repz
dec
xor
dec
icebp
out
leave
je
mov
idivb
mov
xor
lahf
pop
mov
addr16
dec
repnz
dec
mov
loope,pt
mov
call
ret
es
loopne
cmpsb
pop
inc
adc
jmp
pop
pop
fistps
pop
pop
gs
fwait
loope
mov
xchg
shr
ret
imul
push
xchg
fisubrl
pop
mov
sub
lcall
push
pop
jmp
das
xchg
cmp
dec
lods
mov
cltd
insb
mov
xlat
mov
xor
pop
jecxz
aaa
mov
fsubs
gs
int
lods
adc
mov
das
daa
enter
xchg
mov
sbb
ja
repz
xlat
or
ficoms
mov
adc
pop
shll
pop
insl
fadd
mov
hlt
aas
sub
mov
out
fistpll
xor
bound
scas
xchg
imul
out
bnd
or
test
xchg
out
mov
pop
push
push
or
scas
push
test
fstps
inc
fnstenv
movl
inc
inc
xlat
popf
jecxz
jmp
incb
in
imul
int
mov
fists
addr16
insl
fldenv
jecxz
fists
jl
insl
out
lds
add
insl
jmp
daa
sahf
outsl
and
push
cmpsl
mov
mov
xor
inc
add
data16
add
add
dec
in
fadd
lahf
jge
mov
and
stc
mov
pop
sbb
mov
cmp
pushf
pop
jnp
jns
scas
cmpsb
fnstsw
fmulp
sbb
aaa
xchg
or
push
and
enter
aad
popf
dec
insl
repz
sbb
repnz
cmp
and
test
xchg
int3
fcoml
sbb
and
jae
dec
pop
cmp
fstp
dec
loope
push
push
mov
in
add
xor
mov
sbb
add
fwait
inc
adc
push
adcl
push
cs
and
cmp
iret
cmpsb
and
and
shrl
ljmp
mov
dec
inc
scas
sbb
mov
addb
movsl
mov
fwait
xchg
xchg
fsubl
ret
push
test
in
adc
xchg
imul
jge
xor
lea
cli
in
test
jo
ret
sbb
test
int
jg
sahf
and
es
xchg
and
sub
pop
and
std
xor
push
ret
test
enter
sbb
lret
sbb
les
repz
inc
test
jns
xlat
sbb
and
and
dec
cld
shrl
rol
xchg
push
call
lods
cwtl
sub
sub
jb
aam
out
lret
and
into
lea
aad
fstpl
sbb
lcall
scas
mov
dec
ret
stos
inc
pop
and
cmp
fdivl
divl
jno
ret
jb
stos
and
jmp
xor
std
pop
push
les
jno
jle
fidivs
cwtd
cmpsb
mov
dec
out
scas
and
inc
and
inc
cwtl
cmp
lock
addr16
mov
inc
fs
mov
xchg
or
sub
jecxz
pop
adc
jne
xchg
je
add
push
mov
out
xchg
cmp
fwait
and
ret
jne
jl
in
inc
out
lret
xchg
inc
jmp
loope
jae
insl
jecxz
testl
adc
pop
adc
mov
aad
mov
fistps
std
lcall
inc
jno
mov
sub
ljmp
cld
jbe
ljmp
push
xchg
repnz
sub
mov
repnz
jge
repz
xor
cmp
popf
ret
inc
test
jns
lds
push
gs
cmpb
sbb
push
ljmp
mov
pop
jb
loopne
or
jl
pusha
sbb
mov
push
psrlq
sbb
bnd
out
jnp
mov
arpl
out
sbb
outsl
xchg
outsb
push
nop
pop
js
sbb
and
gs
incl
insb
ds
imul
jmp
dec
out
les
hlt
test
xchg
into
leave
and
in
mov
pop
in
out
jnp
lcall
loope
ret
ret
in
cmpsb
mov
or
addr16
sbb
fdivl
lods
in
imul
push
cmp
dec
clc
aaa
ljmp
inc
sbb
add
ljmp
ret
cmp
daa
sub
lock
dec
sbb
inc
jmp
dec
and
xlat
outsl
jns
js
inc
ror
int3
or
lds
fnstcw
lds
mov
add
xchg
jle
ds
jp
hlt
and
push
aad
sbb
fidivs
inc
movsb
push
adc
xor
dec
push
dec
cmp
pop
push
add
xchg
mov
fisubrl
push
and
iret
dec
sbb
jmp
xchg
lea
mov
dec
sti
lds
ss
repz
cmc
pop
out
push
and
xor
pushw
mov
sarb
jp
jno
add
pop
lds
and
repz
sub
arpl
mov
sub
ljmp
jl
pop
and
mov
lret
lret
lcall
rcrb
xor
jns
in
mov
mov
and
imul
add
test
rol
sbb
xor
cli
pop
andl
test
xor
adc
loopne
lds
outsb
popa
imul
nop
push
das
push
ret
sahf
jns
xlat
loope
xchg
xor
cld
pop
cmp
xchg
jno
adc
push
pop
pop
mov
adcl
shlb
adc
fidivs
in
pop
fdiv
aaa
xchg
mov
jmp
sub
imul
pop
mov
inc
es
pop
int3
imul
mov
xor
imul
sbb
jl
inc
call
lods
dec
lahf
pop
mov
in
mov
fdivr
xor
in
mov
xor
add
mov
imul
xchg
xchg
jg
loop
loopne
mov
inc
pop
int3
out
clc
xor
js
jp
dec
test
cmovg
jp
xchg
fisubrs
mov
fsubrp
push
jg
ja
pop
or
fwait
jp
dec
mov
pop
dec
loopne
xchg
imul
flds
aam
imul
imul
in
das
fildl
aas
ret
cmp
sbb
sub
xor
fsubrl
cmp
mov
fsubr
mov
fisttpll
loopne
mov
popa
int3
push
xchg
pop
loop
mov
lahf
addl
and
dec
div
ret
jno
mov
sti
sbb
dec
out
sub
ror
movsb
jge
mov
sub
sahf
cld
mov
test
cmpl
jl
push
xchg
jl
popf
cmp
cli
cwtl
jge
movsb
push
pushf
jl
jl
ss
cmp
jno
insl
or
fisubrs
dec
loopne
stos
mov
out
sub
sub
dec
pop
cmpsl
leave
repnz
pusha
insb
ficompl
xchg
pop
and
push
ret
sbb
push
xchg
adc
gs
add
and
sbb
movsb
lods
jbe
mov
pusha
loopne
imul
pop
sbb
cmp
inc
jo
sub
dec
mov
push
adc
sbb
andl
fsubr
mov
aas
jae
ret
adcl
dec
incl
loop
cwtl
mov
sbb
test
cmp
add
mov
mov
das
cmpsl
mov
les
cmpsb
mov
mov
and
out
iret
movsb
scas
fs
xchg
insl
mov
xchg
xchg
arpl
cmp
mov
adcb
cld
out
inc
lea
or
jl
lds
push
lods
sbb
inc
cltd
mov
decb
adc
dec
call
popa
aas
int
ja
push
jnp
imul
pop
ret
leave
sub
je
scas
movb
jae
add
mov
or
fbstp
fdivrl
cmpsl
arpl
pop
cmp
cmp
pop
insl
push
movsl
ds
jmp
xchg
or
and
jo
mov
icebp
lds
xchg
push
data16
jge
jnp
cltd
sbb
mov
ds
lret
cmp
jo
sbb
icebp
jecxz
dec
fwait
out
dec
aad
rcr
icebp
fcomps
cmp
sub
cld
aam
cltd
sbb
adc
es
pop
inc
sbb
dec
xchg
stos
lock
xchg
subl
jno
int3
leave
xorl
mov
inc
xchg
stos
addr16
shl
fwait
scas
push
rclb
jp
sbb
dec
push
jge
and
lahf
out
jmp
push
in
pop
ja
ljmp
jl
outsb
push
xchg
inc
popa
sbb
clc
ljmp
pop
mov
loopne
rclb
mov
sbb
sub
push
jp
xchg
sub
jle
sub
add
out
and
and
adc
adc
push
imul
cmp
xchg
push
stos
je
push
jns
mov
cmp
mov
popf
cmc
mov
loop
std
insl
sbb
add
aad
inc
mov
outsb
xor
xchg
aam
in
cli
jmp
jle
ret
popa
leave
ds
mov
jecxz
imul
jle
in
inc
pop
ret
cltd
pop
cmp
les
aas
push
and
xor
cmpsl
sbb
mov
jge
mov
das
push
stc
mov
cmpsl
pop
clc
mov
imul
mov
mov
cli
inc
fsts
pushf
cmpsb
adc
push
popa
cld
mov
inc
jecxz
jp
out
inc
lods
or
adc
xchg
lret
cmp
les
divb
push
push
mov
lock
jl
lock
cltd
fwait
push
aaa
out
jns
cld
imul
fidivrl
cmpl
cmp
in
push
dec
fwait
jmp
inc
pop
fwait
cmp
insb
in
out
and
cwtl
cmpsl
in
jge
dec
lcall
pop
or
xchg
data16
rcrb
xchg
das
outsl
add
inc
into
dec
int
or
ljmp
loopne
rol
pop
cmp
cltd
dec
in
fsts
sti
insl
lods
cltd
in
pop
out
mov
pop
sarl
sub
inc
mov
out
fstl
jge
jecxz
fnstenv
mov
imul
inc
xor
xor
add
enter
ret
notb
jbe
pushf
fstps
sbb
sti
lods
and
fdivs
ret
adc
addr16
mov
aad
scas
cmpsl
mov
int3
mov
and
popf
loope,pt
sbb
adc
jecxz
in
dec
int
sub
loop
inc
jmp
clc
xor
push
ss
lret
fsts
aas
ret
fistl
incl
or
out
iret
ds
stc
xchg
sbb
outsb
and
sbb
mov
or
fs
xlat
out
stc
fdivrs
mov
pop
jne
push
pop
scas
inc
jb
mov
shr
xchg
xor
add
mull
loop
inc
push
add
mov
xchg
movsb
push
aad
xchg
xchg
jb
or
sub
xchg
repz
dec
fisttpl
shll
xor
sub
imul
aad
ret
push
and
lret
cltd
ret
jbe
cmp
jb
out
xor
imul
fdivl
sti
ret
fdivrl
sti
std
incl
lods
fcmovu
in
and
fucomp
push
fcmovbe
in
and
fldlg2
and
shr
sub
aad
es
sbb
push
jne
je
sbb
sub
lret
cmp
das
push
fcmovnb
std
out
lds
jmp
fcom
sub
jp
jns
jnp
lret
out
dec
js
mov
scas
mov
fildl
inc
xlat
mov
xchg
xchg
test
mov
pop
cmp
rcrb
sti
scas
push
jmp
shrl
in
or
mov
push
stos
imul
xchg
cmpsb
fcmovu
push
fimull
pop
in
bound
xor
fstl
adcl
jne
mov
cmp
nop
fnstsw
xor
test
lret
sub
jae
pop
dec
inc
xor
fstps
int3
ret
cltd
dec
repz
mov
in
mov
aam
xor
mov
insl
add
xor
or
nop
push
in
dec
mov
mov
aas
rcr
repz
ljmp
xlat
aad
out
popf
shlb
cmpsl
rcl
imul
mov
aam
stos
and
test
fstl
lods
mov
dec
push
leave
fstl
out
insl
test
push
mov
das
jecxz
mov
jo
dec
mov
sbb
mov
sbb
pop
ror
ja
rclb
pop
out
add
inc
mov
push
sbb
aas
sub
test
fstp
mov
out
xchg
pop
aad
cld
ja
fwait
xchg
and
imul
inc
shll
outsb
jecxz
leave
cs
fisttpl
clc
add
popa
sbb
imul
xchg
add
xor
mov
je
pop
jae
gs
and
adc
shll
sbb
add
pop
lret
cmc
pop
repz
fistpll
inc
pop
popa
push
or
and
int
pusha
xor
testb
push
pop
cmp
inc
or
pop
dec
xchg
idivl
xchg
test
sbbl
in
lock
enter
xchg
sub
pop
and
xchg
fisubrl
negl
mov
mov
imul
insl
test
inc
jmp
je
jbe
test
int
enter
in
mov
adc
out
das
pushf
sbbl
adc
and
mov
inc
jmp
and
jo
dec
sub
push
lret
rcl
in
repz
lea
enter
push
jp
or
shrl
mov
add
mov
stc
int
xchg
ljmp
sbb
iret
dec
addr16
sub
mov
push
imul
xor
popa
inc
leave
xlat
ljmp
mov
dec
popa
and
aas
jb
xchg
notl
jnp
add
inc
cmp
lret
int
mov
xchg
jecxz
icebp
inc
xor
adc
cmp
fnstenv
xchg
ja
cmp
push
sbb
push
add
in
xchg
out
dec
fldpi
enter
leave
sbb
sub
fcompl
mov
in
pop
mov
into
inc
pop
pop
pop
andl
xor
xor
push
lds
popa
ret
sbb
cmc
stos
xor
dec
out
test
cmp
inc
inc
or
loope
dec
popa
rclb
or
leave
test
mov
adc
jbe
das
jmp
xor
pop
lahf
push
xchg
stos
lea
sbb
and
xorl
jge
inc
sub
inc
xor
stos
lds
es
imul
sbb
dec
and
fcoms
cwtl
sahf
mov
xor
rorl
and
dec
in
rcl
ret
hlt
movsb
aas
xor
dec
cltd
inc
xchg
mov
add
cmp
cmp
mov
push
fwait
and
lds
jns
cmp
mov
fwait
shrl
roll
fcoml
in
sub
nop
adc
push
xor
xlat
adc
frstor
push
stos
or
jecxz
int
test
sahf
dec
lea
shrl
adc
xchg
jecxz
insl
jge
cmp
ret
jne
and
dec
ret
ss
aaa
aad
aaa
in
inc
ljmp
sti
fs
ds
mov
push
pop
xchg
loop
hlt
and
push
inc
arpl
ja
stos
shll
mov
fs
stos
xchg
into
es
imul
xchg
ret
add
ret
sbb
imul
ret
imul
fwait
add
xchg
push
in
mov
mov
jae
push
jg
shrl
inc
and
pop
das
inc
push
iret
push
imul
or
imul
sub
lea
clc
ret
mov
jmp
dec
mov
lds
gs
cwtl
inc
fs
xor
imul
or
xchg
and
xlat
ficompl
in
inc
aaa
adcb
jecxz
lods
jnp
jnp
jnp
dec
push
and
jno
in
xor
in
push
loop
pop
dec
ds
rcrb
pop
out
fcmovb
inc
jae
cmp
int3
push
ss
xlat
pop
lds
scas
cmc
mov
leave
pop
aam
cli
push
xor
loop
ja
xor
mov
in
mov
cmc
cwtl
bound
jg
and
fistpl
sarl
cli
mov
out
cli
out
xchg
jecxz
mov
dec
xor
xor
inc
les
les
sbb
in
stos
into
xchg
ffree
dec
add
xor
push
mov
dec
cmp
mov
test
mov
xchg
decb
popa
inc
pop
cmp
mov
leave
test
stos
cwtl
mov
and
into
out
xor
pop
xchg
xchg
fistl
jecxz
cmp
or
sti
pop
jb
int
gs
pop
push
out
sbb
sub
inc
call
pusha
cmp
push
dec
push
jmp
cmpsb
in
sub
cmp
cmp
and
mov
aam
test
jecxz
push
test
mull
aaa
cwtl
push
fs
mov
sbb
movb
call
xor
jp
xchg
popa
nop
stos
icebp
mov
sbb
lahf
jbe
inc
mov
sbb
mov
out
sbb
xchg
jns
mov
lret
insl
mov
push
add
sbbl
ss
cmc
add
fidivs
lcall
sub
into
in
fisttpll
scas
sbb
adc
jmp
cltd
add
dec
or
sbb
pop
push
dec
mov
and
push
inc
shr
inc
or
lret
aas
mov
in
subl
popa
in
push
push
cmp
jb
push
popa
cmp
addr16
xchg
addr16
inc
mov
mov
mov
pop
pop
cmp
out
push
out
lods
hlt
fstpl
xor
pushf
pop
pop
or
mov
mov
cmc
inc
cli
push
xchg
and
jns
pop
sub
loop
pusha
popa
enter
cmpsb
push
clc
cli
in
mov
mov
ljmp
in
inc
jmp
scas
fildll
mov
pop
jne
push
aaa
ret
les
jmp
movsl
rcrl
lods
dec
xchg
dec
idivl
xchg
out
lods
and
fucomi
jecxz
mov
inc
jmp
or
ljmp
pop
inc
dec
pop
jnp
and
repnz
pop
aas
repz
pop
out
cltd
push
mov
or
mov
fcmovne
ret
inc
sbb
fldpi
fdivrl
mov
andl
ds
icebp
pushf
xor
or
xor
pop
imul
mov
fistpl
ret
call
mov
dec
cld
das
mov
sbb
and
flds
mov
or
mov
pop
mov
push
xchg
lds
into
stos
add
cmpl
test
mov
jae
lds
movb
outsl
int
dec
sub
in
dec
cmp
leave
leave
xor
sbbl
loopne
pusha
jecxz
add
repnz
jb
sbb
dec
je
nop
ja
push
or
or
mov
test
pop
mov
jl
jecxz
sbb
pop
mov
fidivs
daa
leave
enter
test
sbb
mov
xchg
mov
in
cmp
push
rolb
pop
dec
pop
hlt
test
lret
addb
leave
jo
cmp
test
adc
add
push
cmpl
push
or
ss
jmp
fimuls
fstps
sbb
cmp
jne
jo
addr16
imul
sti
fwait
pop
inc
ljmp
out
pop
scas
fimuls
pop
inc
xor
imul
sub
push
loop
xchg
andb
das
lcall
pushf
dec
test
jg
arpl
xor
jnp
sub
aas
ret
dec
fildl
stc
sbb
mov
movsb
push
sub
insl
xchg
mov
xorl
repnz
inc
insl
pop
fcmovnbe
call
adc
mov
inc
fistpl
push
iret
inc
adc
rcr
lods
inc
inc
push
adc
es
add
cli
jmp
lds
ret
aam
das
les
sub
addr16
jge
xchg
push
inc
loope
dec
ds
lcall
popf
xor
cmp
cmp
ss
outsb
test
jo
mov
sub
fdiv
imul
iret
insl
sub
into
lea
in
aad
fadds
insl
mov
fstps
or
sbb
out
mov
fmul
in
stos
lods
insl
dec
sbb
adc
mov
orl
mov
add
insl
xor
and
insl
in
scas
repz
xchg
call
lods
inc
iret
cmp
jmp
jp
and
cli
imul
xor
push
xor
cld
ror
push
push
jo
lret
popa
imul
push
sbb
jle
iret
fsubrl
dec
clc
iret
sub
icebp
pop
push
mov
cmpsb
aaa
add
jae
call
or
mov
jp
or
pop
das
mov
movb
cmp
fnstcw
arpl
jg
xchg
mov
fsubl
sbb
xor
testl
and
movsl
xchg
sub
stc
loope
xchg
sbb
wrmsr
cmpsw
es
sub
mov
or
pop
arpl
sbb
lds
rorb
arpl
rcrl
dec
outsb
stos
cmp
aam
xor
stos
shrl
mov
das
scas
out
cmpsb
push
and
mov
aam
inc
adcl
xchg
popa
xchg
add
pop
dec
mov
inc
inc
cmpsl
dec
jmp
out
jns
lds
sbb
les
cwtl
ret
pop
arpl
movsb
mov
dec
ret
and
stos
cmp
xchg
stos
mov
scas
test
mov
sbb
sbb
es
mov
jmp
jmp
jge
ds
cld
pusha
aaa
adc
push
cmp
cmp
pop
xor
leave
pop
int
fdivl
cmp
dec
sub
repnz
inc
int
aam
sti
mov
sub
mov
inc
ja
mov
sbb
daa
fwait
jge
add
daa
arpl
sub
aad
xchg
mov
inc
mov
insl
idivl
daa
jle
rol
sbb
sbb
out
lods
xorl
cmp
inc
fildll
push
dec
sub
mov
lret
sub
aad
faddl
in
push
cmp
and
fs
add
outsl
mov
and
dec
roll
mov
sub
pop
mov
sbb
sbb
test
test
jmp
cmpsl
or
jmp
inc
aas
adc
rcl
or
clc
das
in
fdivl
cmp
sbb
out
pop
cmpsl
or
insb
add
xchg
add
push
mov
sub
fwait
mov
mov
mov
adc
push
pop
imul
adc
aas
in
sbb
test
fcomi
pop
inc
push
jb
cli
jmp
andl
insb
xor
out
out
cli
pop
insb
iret
adc
xchg
lods
jno
lret
and
leave
enter
mov
mov
movsb
out
xor
cmpsl
and
repz
xchg
and
xor
sarl
add
and
sub
jl
lods
fisubs
mov
pop
addl
cmp
pop
mov
insl
jbe
jns
hlt
daa
pop
outsl
stos
cwtl
jns
jb
fldt
xlat
pop
jecxz
jns
push
gs
out
xchg
push
pushl
mov
or
pusha
ja
push
xchg
jmp
enter
into
loopne
rcr
add
leave
pop
sti
push
popa
std
add
jecxz
lret
rcl
into
cmpsb
in
call
xor
sbb
jo
test
inc
lret
ret
cmp
rol
adc
push
addl
int3
or
mov
dec
jg
jne
rcl
inc
sti
aas
sbb
sar
fadds
sarl
rclb
enter
add
rorl
pop
ljmp
inc
add
fisttpl
push
push
test
orl
sbb
or
jl
jp
out
cwtl
ljmp
test
and
pop
mov
jb
popf
dec
pop
int
xor
adcl
test
test
insl
imull
int
les
sbb
loopne
pop
or
sahf
add
pop
cmc
nop
mov
das
fstp
sbb
push
leave
das
in
shld
insl
inc
fstps
sbb
sbb
fcmovne
and
pop
jnp
sbb
std
and
addr16
inc
jl
sbb
outsb
repz
mov
sub
fimuls
jecxz
cmpsb
dec
shl
test
out
or
mov
mov
adc
xchg
sub
aaa
push
cmpsb
std
call
xchg
pop
ret
cmpsl
pop
jns
cmp
hlt
push
cwtl
gs
sub
sti
out
inc
dec
xchg
popa
enter
in
push
aas
ret
pop
leave
push
jae
adc
test
jecxz
int3
dec
and
in
shll
into
pop
pushf
mov
push
jmp
cmp
jg
and
xchg
fsubl
push
jne
mov
pop
pushf
push
out
adc
sti
fcomps
adc
xor
push
mov
pusha
in
in
cli
inc
push
fninit
aas
enter
or
out
sti
pushf
fisubrl
jae
loop
fisttpl
in
pop
fcmove
ret
jmp
fsubp
cmp
and
cwtd
int
aam
xchg
jb
mov
sti
enter
inc
or
or
fwait
or
in
cwtl
lret
pop
push
dec
and
xchg
mov
jne
mov
dec
sbb
fnstsw
or
iret
mov
daa
xlat
dec
aaa
and
fdivr
mov
xor
jg
fadds
ss
push
jb
gs
stos
adc
pop
mov
and
lret
xchg
jle
sbbl
xlat
xchg
fwait
and
repz
test
dec
or
cmpsl
cltd
jl
mov
ret
repz
and
xchg
arpl
cmp
push
fildll
inc
lret
xchg
roll
jns
xlat
ljmp
xchg
ss
imul
lods
ret
pop
mov
mov
push
push
dec
mov
push
test
imul
repz
dec
stos
jae
inc
fsubr
fbstp
lds
repz
jno
mov
lret
push
lahf
arpl
rcrl
je
movsb
nop
std
jno
sbb
movsb
icebp
call
mov
fs
loop
test
or
adc
add
lods
fstpl
fistl
jmp
sbb
inc
mov
xor
shr
or
rcrl
push
call
lret
pop
xchg
dec
or
xor
pop
sarb
std
mov
xorl
ret
lods
roll
cwtl
fdivrl
fcmovnbe
mov
aaa
enter
sub
cmp
mov
lret
xor
enter
sbb
shrb
jns
mov
or
aad
push
sbb
pushf
test
popa
inc
jbe
clc
or
cmp
addr16
mov
ds
jmp
mov
add
sub
sbb
pop
les
cmp
mov
push
jmp
lock
jg
jns
fucomp
push
fcompl
mov
imul
adc
mov
test
xor
ljmp
shr
enter
ret
mov
aam
out
dec
xchg
lahf
popa
arpl
daa
outsl
adcb
add
bound
stos
cmpsb
jnp
movsb
inc
lret
stos
mov
mov
call
mov
xchg
sbb
pop
dec
dec
mov
fldt
sti
xlat
mov
mov
lahf
pop
pop
jmp
jns
lret
mov
mov
adc
jecxz
aas
cmpsb
add
aas
ret
loopne
callw
fucomp
lcall
out
jmp
movsb
fldt
in
addr16
nop
test
pop
sub
call
jp
hlt
cmp
ret
mov
lea
push
mov
insl
jp
add
loope
push
int
jmp
mov
insl
lcall
add
fisubrs
popa
faddl
mov
sub
vandps
outsl
das
and
outsl
sub
test
sbb
aaa
cmp
jns
test
div
xor
fsubrs
pop
out
fadds
aam
movsb
mov
jnp
imul
and
push
imul
adc
jg
leave
sub
imul
ret
xor
int3
sbb
pop
in
rcr
dec
aam
jle
es
pop
das
mov
inc
mov
jge
leave
or
std
mov
inc
aam
dec
test
faddl
popa
incb
cmc
or
dec
lea
cltd
dec
mov
xchg
inc
imulb
gs
sahf
mov
cmpb
rorl
inc
ja
lahf
push
adc
cvtps2pd
xor
jmp
ss
pop
mov
ss
push
pop
ret
incb
das
push
shll
aam
inc
std
insl
in
pop
adc
inc
sbb
dec
xchg
sbb
mov
ja
loopne
nop
sbb
sbb
stos
and
fcompl
inc
adc
pop
jno
jge
ds
fdiv
stos
jmp
hlt
xchg
pop
xor
jae
mov
repz
jne
dec
test
pusha
inc
cmpsb
cmp
faddl
sbb
aam
out
ja
fs
xchg
fstpl
jmp
iret
jne
in
fwait
and
in
cld
in
insl
sub
xlat
sbb
adc
movsb
push
inc
xchg
inc
jle
xchg
scas
pop
sbb
icebp
aam
add
imul
inc
add
dec
adc
shl
sbb
fsubrs
sbb
sbb
inc
mov
inc
ljmp
fadd
inc
push
out
cmpsb
xor
cltd
arpl
dec
pop
aas
mov
aaa
rcrl
mov
je
fcoml
adc
xchg
sti
cmp
adc
and
pushf
das
pop
pusha
imul
movb
sti
iret
subl
mov
jne
xchg
pusha
sbb
scas
loopne
insb
inc
mov
cli
ss
gs
pop
push
divl
addr16
jg
push
xchg
ljmp
popf
inc
gs
out
pop
pop
jno
je
xor
adc
cli
inc
in
test
push
ds
dec
xchg
mov
inc
insl
addr16
in
and
ds
ljmp
fisttpll
and
sub
adcl
scas
ret
into
push
mov
arpl
int
pop
cmp
repz
int
fwait
jne
rcrb
mov
push
dec
jmp
fidivrs
insb
xchg
pop
pop
push
push
roll
push
jno
jne
fsts
in
sub
and
sub
jecxz
mov
mov
cmp
inc
dec
popa
aas
xchg
in
jg
or
or
and
out
outsl
out
push
add
adc
stos
jae
lock
xchg
fcomps
jo
cli
ret
inc
xchg
xor
mov
fucomi
imul
push
push
sub
xchg
in
sarb
mov
lcall
stc
imul
addb
lea
js
pop
in
adc
xchg
mov
aas
repnz
movsb
inc
xorb
aam
test
pop
inc
cwtl
xchg
pop
dec
int3
pop
mov
and
jbe
add
xor
call
cmc
mov
cmpsl
inc
pop
cmp
sbb
inc
cmpsl
bound
mov
stos
in
nop
dec
mov
mov
shll
scas
sbb
pop
jle
enter
jns
pmaxub
pusha
add
ljmp
aad
enter
adc
cmp
das
push
push
inc
sbb
iret
jecxz
xchg
ss
jne
jle
fucomi
xor
fists
xor
pop
xlat
mov
mov
sub
lret
push
sbb
xor
mov
stos
enter
cmpl
gs
pop
in
adc
xor
addr16
push
xchg
ret
push
enter
arpl
and
mov
jmp
sbb
and
inc
mov
nop
sbb
sbb
inc
out
fistpl
fcmovnu
lods
cvtpi2ps
out
sbb
les
gs
mov
loop
test
jge
lea
aas
xor
outsl
cmp
hlt
cmp
dec
push
ds
ds
frstor
pop
ds
dec
push
sub
mov
mov
push
popa
outsl
in
lcall
jb
and
scas
pop
loop
negb
or
jmp
imul
ret
jg
out
xchg
int
and
dec
jb
rcrl
jge
push
es
fucomip
cmp
or
fcmovnbe
fdiv
pop
cmc
mov
mov
lods
inc
mov
aas
test
and
cmp
dec
test
jecxz
inc
ret
fcompl
in
pop
xor
arpl
mov
test
aas
clc
insl
sti
inc
imul
ss
fcompl
rorl
sbb
xor
mov
push
subl
xor
rcrl
cmp
aam
mov
and
mov
stos
xchg
popa
fsubrl
imul
jno
xchg
popf
imull
lds
or
and
les
adc
outsl
faddl
mov
fildll
and
movsl
xor
mov
cli
out
fisubl
lods
push
shrb
xor
xlat
and
push
jmp
stos
sbb
inc
aad
xor
mov
xchg
les
and
fistpl
jmp
out
push
fsts
and
add
xchg
inc
mov
in
xchg
add
fsincos
imul
sub
push
push
sbbl
add
fcmovnu
imul
or
sub
jae
rorl
jle
mov
or
pop
imul
or
insb
pop
adc
or
stc
fsubl
sub
hlt
cmp
aam
fwait
push
jmp
fldcw
mov
lds
in
adc
dec
jg
jmp
inc
push
stos
cltd
push
pop
aam
pop
cmc
bound
dec
leave
in
or
ficoms
dec
xor
jmp
lret
push
cs
push
add
pop
xor
daa
in
das
popa
loopne
les
mov
arpl
inc
jno
fisubrl
imul
xchg
mov
lcall
cmpsb
xchg
cmpsb
sbb
jecxz
mov
mov
adc
dec
dec
fnstsw
cs
mov
repz
jge
fcmovnu
sub
xchg
rorb
fbld
jmp
sub
adc
mov
inc
pop
cmp
dec
gs
cs
push
pop
xchg
cltd
movsb
xchg
fs
jmp
sub
cmp
stc
jl
es
add
fwait
mov
jmp
xchg
gs
jp
es
dec
jo
push
pop
shl
das
add
pop
xor
out
pop
mov
icebp
push
sbb
bound
jle
inc
and
enter
push
jb
fsubrl
sarl
xor
ret
dec
sbb
mov
outsl
cmp
mov
mov
das
mov
adc
out
insl
and
and
outsb
xchg
sti
in
xchg
push
subb
inc
sub
mov
pop
insl
inc
add
jns
inc
inc
in
xor
jmp
mov
loope
dec
add
inc
test
sti
fcoml
pop
mov
adcb
fmull
out
lds
push
xchg
and
pop
sti
fists
add
cmpsl
hlt
push
sub
test
fcoms
push
and
pop
pop
dec
inc
icebp
into
ret
pop
aas
inc
bndldx
xchg
jne
arpl
push
bound
stos
lods
dec
repz
xchg
addr16
xchg
pop
dec
jmp
icebp
adc
cmpsl
xchg
jo
pop
out
push
ja
call
mov
inc
sbb
push
sbb
in
popf
loopne
int3
pop
push
gs
fwait
sub
add
in
cld
inc
lea
rorb
lahf
xlat
or
cwtl
fsubs
or
fisubl
pop
repnz
sbb
cmpl
pop
push
je
outsb
xchg
jnp
adc
lock
jmp
fdivrl
gs
and
jmp
nop
sbb
push
aas
push
cmc
xchg
xchg
fwait
lock
sub
lods
mov
add
xchg
inc
outsl
sub
sbb
pushl
lahf
stos
pusha
jno
jge
test
ds
mov
mov
mov
orl
jnp
sbb
ret
mov
mov
mov
pop
jle
fcompl
xchg
gs
in
xchg
or
decl
inc
add
loopne
xchg
iret
inc
pop
jecxz
popf
inc
out
subl
or
stos
imul
xchg
xchg
cmp
out
jle
ljmp
xchg
insl
add
ror
in
xchg
cwtl
pop
pop
xchg
adc
mov
inc
mov
shl
xchg
lock
mul
lea
push
mov
inc
cmp
aam
dec
mov
js
out
data16
or
lods
lret
leave
bound
dec
les
adc
js
sbb
ret
aam
push
dec
daa
jecxz
cmp
xor
repz
imul
xchg
and
sbb
testb
movsb
in
int3
insb
aaa
jecxz
push
adc
push
repnz
cmp
insl
mov
mov
fwait
xor
cs
dec
jecxz
fsub
pop
imul
mov
mov
jno
mov
push
xchg
nop
jno
popa
ljmp
frstor
sbb
pop
or
fstpl
mov
insb
test
jecxz,pt
repnz
sbb
int
test
xor
fcmovnbe
addl
rol
cltd
mov
ret
pop
inc
ja
je
movl
shrl
adc
push
mov
cld
inc
inc
or
jge
andb
popf
mov
jae
pop
out
push
adc
jae
inc
mov
cmpsl
gs
push
push
mov
inc
ljmp
es
jg
rorl
std
pop
enter
mov
push
subb
xor
fstpt
xacquire
stos
in
cmp
imul
sbb
jbe
sub
dec
scas
leave
sub
cli
cltd
xchg
dec
aam
ror
sbb
jecxz
mov
std
hlt
fwait
pop
mov
int3
push
loopne
into
xchg
add
fstpt
sub
inc
popf
mov
out
push
fisubrl
mul
jmp
icebp
mov
sti
mov
or
xor
mov
sbb
sub
cmp
add
add
jp
pslld
lret
sub
hlt
add
mov
stos
gs
and
xchg
sbb
stos
imul
mov
aad
cmp
fcmovne
xchg
call
cmpsl
movsb
cmc
clc
fistpl
push
mov
cmp
inc
iret
addb
jb
push
int
imul
jecxz
dec
pop
jae
xchg
xchg
mov
xor
aam
mov
add
outsl
arpl
pop
mov
outsl
lods
pop
loop
jecxz
subb
jae
in
inc
mov
push
pushf
cld
pop
and
jnp
fmull
or
xor
push
jns
aas
add
and
lds
add
sti
add
inc
jo
and
lods
mov
xor
lret
add
mov
and
fcoms
and
and
or
iret
orl
aaa
sub
ds
cmp
fldcw
jbe
sub
aam
insl
sub
mov
mov
es
pop
test
mov
pop
cld
push
fwait
inc
jge
xchg
and
aaa
mov
scas
insl
cltd
in
mov
vandps
mov
cmp
in
push
push
inc
sub
sbb
push
or
pop
mov
and
test
xor
push
jns
fwait
and
pop
mov
ljmp
mov
sbb
and
movsb
test
imul
xchg
dec
jmp
xor
mov
in
dec
mov
sub
xchg
notb
fbstp
add
sahf
jae
sub
in
out
or
sbb
jmp
xor
daa
and
lock
cmp
loopne
add
ret
add
test
popf
and
nop
mov
aad
push
jb
das
dec
or
pusha
xor
ficomps
data16
lock
adc
sti
mov
xorb
out
inc
ss
sti
push
dec
pop
out
jle
inc
imul
xchg
cmp
pop
mov
pusha
inc
push
jno
push
data16
push
cs
push
sub
pop
stos
popa
int3
cmp
ret
aam
mov
test
push
aam
xchg
xchg
cmp
inc
inc
roll
jns
std
or
loope
mov
xchg
loopne
mov
push
pop
sbb
push
int
cld
ret
testb
mov
inc
inc
std
jno
xchg
sbb
xchg
ja
iret
lock
repnz
popf
lret
cmpps
sbb
adc
stos
test
repnz
aaa
das
into
push
dec
and
dec
mov
fdivl
fs
lcall
cmp
divl
or
in
loop
push
jl
add
jns
test
and
test
sbb
mov
leave
clc
jle
sub
std
pop
inc
bound
insl
pop
or
xchg
call
xor
imul
clc
outsl
jo
imul
cltd
scas
daa
stos
gs
push
jne
push
addr16
shrb
add
ds
xchg
insl
jno
mov
push
push
mov
fwait
in
fucomp
jne
in
xor
mov
jns
mov
push
jmp
js
aas
frstor
cmp
xchg
mov
sahf
out
jle
dec
leave
jnp
pop
addr16
in
stos
xor
sbb
dec
ret
cwtl
add
sbb
xchg
mov
outsl
mov
shl
dec
sbb
push
arpl
cmc
sbb
xchg
out
insb
dec
inc
sub
or
cmpsl
pusha
andl
in
aas
mov
sub
dec
les
inc
mov
xlat
mov
in
fiaddl
aas
aad
and
sbb
dec
mov
cmp
repz
ret
popf
popf
es
ljmp
xchg
inc
pop
ret
push
int
ljmp
hlt
sub
pop
cwtl
sub
fadd
fsubs
jmp
mov
pop
jecxz
pop
shrl
lods
mov
pop
sub
lcall
pop
out
fucomi
ror
dec
sbb
sbb
repz
inc
push
push
push
xchg
jb
sbb
inc
push
sbb
push
iret
in
inc
js
outsl
jno
outsb
add
jmp
adc
mov
in
lret
shll
lret
dec
aam
add
mov
or
sub
lock
mov
dec
xchg
mov
cltd
gs
pop
sbb
fstps
cld
inc
lods
gs
add
loope
into
mov
jns
mov
fmuls
stos
popf
mov
sbb
test
les
ja
pop
xchg
cmp
lock
mov
dec
adcl
xchg
mov
xor
in
popa
fistl
fsubl
iret
push
sti
adc
fdivrl
in
inc
inc
repz
inc
sbb
fldenv
loopne
jae
addr16
mov
inc
js
fmull
gs
sub
insb
mov
ljmp
lds
outsl
pop
adc
and
lret
pop
or
sbb
lret
insl
sti
mov
add
insl
sbb
in
rol
test
and
mov
sub
dec
mov
and
sub
insl
aad
imul
fistpll
xchg
out
adc
cs
sbb
pusha
pop
call
push
mov
pop
or
add
mov
and
pop
repz
imul
into
inc
hlt
inc
int3
outsb
push
add
imul
or
aas
sbb
xchg
dec
lret
add
dec
sti
pop
or
mov
adc
or
lods
mov
fsubl
sbb
aad
icebp
cmp
ss
aas
cmp
int3
xchg
cmpsl
sbb
pop
mov
inc
push
push
xchg
mov
ds
out
ret
xor
out
sbb
lea
insb
insl
insl
xchg
sbb
push
jmp
hlt
sub
adc
shrl
data16
inc
and
push
pop
mov
lods
andb
or
cltd
push
flds
iret
mov
jne
mov
cmp
rorl
les
push
stc
xchg
sub
mov
sbb
aam
dec
pop
popa
fwait
and
jno
mov
push
inc
ret
jnp
pushf
pop
stc
cltd
out
leave
pop
std
add
xor
push
inc
inc
push
mov
and
fisubrs
pop
xor
sub
out
enter
dec
and
lds
cmpsl
imul
ret
and
sub
mov
push
les
int3
xor
or
mov
rcl
rcll
push
xor
dec
or
out
jl
or
xorl
rcll
add
int
xor
shlb
xchg
gs
lcall
loope
test
fucomi
adc
fidivs
and
sti
popa
push
stos
sbb
divl
pop
outsl
and
mov
xchg
hlt
sub
addr16
mov
in
popa
pop
push
ja
popf
and
push
push
outsl
pop
add
pop
loopne
out
negl
push
lcall
pop
mov
add
push
adc
xor
push
rcrl
cmp
mov
fildl
out
push
test
inc
adc
leave
aad
stos
cmpsb
lds
xor
jne
rorl
fldt
mov
cltd
pop
daa
sbb
cmp
popf
xor
andl
or
sar
out
mov
add
loopne
jmp
dec
xchg
mov
sbb
mov
ret
aam
sub
movsl
sub
push
pop
in
fcompl
fsubrs
movsb
imul
xchg
jb
xchg
and
jno
xchg
ret
fs
stc
stc
pop
jp,pt
leave
push
and
dec
gs
popa
xchg
pop
pop
lods
push
jecxz
cltd
xchg
lods
pop
pop
lret
inc
mov
pop
sbb
pop
ds
jne
jmp
push
lahf
ss
mov
sbb
test
mov
dec
mov
jmp
xor
push
xchg
and
xchg
loop
add
mov
shrb
jl
jns
jp
lea
sbb
inc
stos
sbb
insb
pop
ffreep
ret
fldt
xor
add
cmpsl
sbb
outsb
jmp
pop
loop
sbb
lahf
pop
sbb
pusha
mov
jmp
enter
xchg
adc
inc
xchg
iret
jmp
dec
ret
xorl
lret
mov
loopne
insl
fstpt
in
gs
sbb
adc
arpl
xchg
gs
lcall
in
js
xchg
aam
int
int3
dec
fiadds
imul
aam
lods
or
cmp
cmp
jo
inc
movb
dec
sbb
jp
or
inc
push
mov
outsl
mov
xchg
stos
and
pop
cmp
pop
and
loope
es
pop
scas
shll
push
pop
ret
test
and
fcmovne
fsubl
push
lahf
imul
xchg
sbb
test
subb
les
pusha
insb
sub
dec
popa
sbb
sub
pop
lahf
push
pop
pushf
fmull
insb
icebp
lret
ret
push
mov
fisubrl
sti
sbb
lret
jecxz
adc
lods
mov
jge
scas
sti
in
std
mov
push
pop
jae
loopne
mov
jg
xchg
je
inc
popa
or
in
mov
pop
mov
popw
fwait
ljmp
dec
push
nop
jl
int
imul
fbld
push
pop
add
dec
push
cltd
fisubl
je
stos
loope
enter
loop
aas
paddusw
mov
aas
sbbl
mov
sub
fstpl
push
xor
imull
std
dec
filds
adc
lret
sbb
cld
test
mov
aaa
and
sbb
xchg
mov
jmp
hlt
insb
sub
ret
out
aam
push
sub
mov
dec
adc
sbb
ljmp
pop
mov
cmp
mov
mov
mov
and
lcall
jae
mov
pusha
fadds
cmp
inc
sbb
sbb
cmp
mov
xlat
sub
int3
mov
mov
arpl
or
jae
int3
rolb
xchg
shl
cmpsl
cmp
shll
dec
lcall
lret
fisubl
ljmp
out
test
dec
pop
mov
push
mov
mov
sub
sub
imulb
pop
jmp
push
and
out
pop
add
jo
mov
lock
pmaxub
movsb
dec
jl
mov
jecxz
test
inc
mov
pop
xchg
aas
sbb
pop
jbe
fadds
imul
enter
std
mov
lcall
fwait
mov
cli
std
sbb
mov
and
pop
push
push
scas
xchg
sahf
fdivrs
inc
jp
pop
pop
and
adc
testl
or
sti
xor
inc
add
into
adc
lahf
js
stos
jp
aad
jbe
and
mov
push
mov
xor
and
leave
pop
mov
js
jae
addl
insb
arpl
dec
lcall
icebp
xchg
insb
ss
stos
leave
es
cmpb
inc
jno
outsl
dec
hlt
leave
pop
fisttps
sti
es
pop
jns
or
cmc
push
in
imul
fisubs
xlat
mov
aas
insb
xor
cmp
xchg
testl
mov
movb
out
imul
call
lods
lcall
pop
mov
xchg
jo
in
ret
xchg
fdivrs
add
mov
lds
and
xchg
inc
imul
pop
fcom
jl
icebp
nop
or
pop
bound
sbb
bound
xchg
mov
jmp
mov
sbb
lods
adc
xchg
iret
lea
mov
cmpsl
and
pop
and
xchg
xlat
fwait
and
test
cmp
hlt
xchg
mov
sub
lahf
hlt
sbbb
hlt
mov
mov
insl
popa
scas
frndint
sbb
sbb
add
pop
pop
int
sub
loopne
lds
cs
shlb
fiaddl
lea
adcl
test
test
stos
jecxz
sub
sbbb
jl
call
loopne
pop
fwait
fwait
mov
pop
jmp
addb
jl
fistps
scas
aad
or
insl
enter
int
pop
and
pop
push
push
push
int3
loop
dec
inc
pop
mov
mov
mov
gs
mov
add
xchg
pop
mov
pop
mov
fisubl
dec
xchg
movsl
stos
cmp
lret
mov
inc
arpl
ficompl
imul
in
mov
xlat
insl
adc
push
xchg
stos
fwait
jmp
enter
cmp
jmp
adc
adc
call
jp
sub
mov
in
xchg
sub
in
xor
xchg
arpl
jne
shr
pop
fildll
popa
sahf
pop
cmpsl
gs
lcall
pushf
or
fldcw
xchg
and
pop
add
or
adc
mov
arpl
or
cmpsl
sub
inc
out
and
and
mov
lahf
dec
jne
ja
nop
or
cld
mov
ret
idivb
call
leave
subl
push
jmp
inc
les
in
push
push
push
out
push
fstl
outsb
insb
inc
imul
mov
add
pushf
jnp
push
dec
or
xor
lods
pop
push
sbb
add
outsl
adc
sbb
jg
cld
mov
pusha
ffree
push
mov
hlt
or
arpl
testb
cmp
dec
or
push
add
pop
ret
mov
enter
ficoml
cmpsl
mov
jns
mov
adc
cmpsl
inc
or
xchg
jl
int
xchg
sbbb
mov
filds
jp
mov
lcall
addr16
out
hlt
cmpl
data16
cmpsb
imul
imul
mov
cmp
and
pushw
sub
add
fsubl
test
xchg
dec
ja
inc
jno
inc
mov
xchg
jns
cli
and
xchg
sbb
jp,pt
mov
push
loopne
mov
pushf
sbb
jae
ljmp
inc
fwait
xchg
lock
add
arpl
or
aas
mov
jae
pop
jne
leave
dec
and
jmp
jecxz
out
mov
int
adc
les
inc
or
jle
fwait
mov
jecxz
xorb
push
pop
popa
cld
insl
add
rorb
ljmpw
aam
lret
xor
repnz
rcll
sbb
mov
dec
xchg
and
sub
out
pop
cmc
sub
jge
mov
cmpsb
xchg
mov
jp
les
sti
inc
imul
mov
loop
iret
xchg
pop
ja
daa
sbb
outsl
adc
outsl
mov
mov
push
dec
scas
js
mov
dec
outsl
enter
add
dec
in
arpl
insb
stos
inc
fucomi
inc
dec
fwait
dec
shlb
fsub
fdivrl
jno
std
enter
lcall
int
and
into
xchg
scas
push
mov
fwait
inc
pop
adc
cmc
jecxz
dec
pop
in
mov
aas
dec
fsubr
leave
mov
inc
ret
mov
and
fstpt
pop
or
scas
mov
inc
cmp
jg
sti
mov
imul
cmp
xor
xlat
push
dec
lret
enter
pop
dec
push
addr16
cmp
popa
test
or
aas
lds
fdivrl
mov
sarl
or
lea
andb
out
and
cmpsb
into
and
fwait
or
dec
aad
leave
mov
inc
data16
iret
jecxz
cltd
mov
sub
dec
shll
sbb
adcl
sub
aas
pop
pop
shll
mov
popf
popa
xchg
test
lods
and
mov
sbb
cmp
dec
mov
addr16
inc
loop
mov
test
shl
es
mov
ds
test
call
jo
lock
movsb
lock
push
lds
imul
cmp
xchg
lods
sbb
rol
mov
sub
int
mov
repz
jmp
fdivs
adcb
int3
and
lret
repz
loopne
iret
std
and
sarl
push
xchg
pop
pop
dec
push
call
pop
add
imul
sub
xchg
adc
ret
adc
fidivrl
std
jmp
ljmp
aam
cmpsl
lds
cmp
lret
fidivl
mov
outsl
insb
mov
test
xor
aam
int
mov
std
add
cmp
inc
lds
stc
lret
dec
out
push
stos
lret
mov
outsb
push
cli
mov
sbb
inc
sarl
jne
in
outsl
jge
inc
pop
out
in
sti
aas
inc
xor
jmp
gs
sti
mov
fdivr
loop
pop
adc
xchg
into
cmp
mov
mov
sub
jge
sbb
int
aad
fdivs
adc
dec
xchg
rcr
loopne
fst
leave
int
scas
mov
mov
cld
lods
lock
add
cmp
push
outsb
stos
xchg
xor
mov
mov
dec
or
mov
xor
jae
outsl
or
cld
adcl
and
aam
int
jns
adc
dec
imul
aas
jnp
add
push
rcll
inc
lds
ficompl
xor
and
mov
jne
lea
loop
push
aam
inc
fwait
mov
into
xchg
fsubrs
mov
stos
mov
jmp
xor
xchg
mov
insb
testl
jbe
mov
sbb
mov
out
cmpsl
jno
mov
repz
mov
inc
pop
cmp
pop
mov
add
dec
mov
shr
xchg
inc
mov
in
mov
mov
int
jo
imul
into
mov
leave
insb
mov
rcrl
cmp
xlat
ficompl
or
inc
adc
fst
in
neg
imul
mov
fldl
fnstenv
cmp
fstpt
jnp
pushf
mov
imul
scas
lcall
xchg
lret
jecxz
adc
push
ficomps
push
add
mov
out
pop
addl
lcall
popl
stos
out
fistpl
mov
xlat
out
inc
sbb
insb
outsl
pop
ds
mov
cmpsl
pop
push
shll
add
lea
push
adcl
iret
pop
add
sbb
mov
pop
mov
out
data16
xlat
scas
lods
jns
pop
mov
mov
pushw
pop
lcall
loopne
mov
adc
adc
add
sbb
andl
mov
loop
pop
test
xchg
push
imul
insl
int
push
pop
inc
leave
jl
mov
fcomps
dec
and
int
cltd
push
pop
lret
lea
fwait
sbb
push
pop
pop
xchg
idiv
mov
fucomi
adc
pop
xchg
cmpsb
xchg
fwait
mov
fcomps
inc
cwtl
movsb
repnz
rcll
cli
jle
jmp
jl
mov
push
outsb
leave
js
xor
cltd
inc
mov
nop
test
mov
push
push
lret
outsl
cmpb
add
in
aam
cmp
cld
loop
adc
jmp
push
ds
pop
jnp
sbb
sbb
movsl
jecxz
mov
or
xchg
add
dec
dec
insb
lret
fildl
cmpsl
in
vcvtdq2ps
dec
fs
ja
loope
test
pop
fsubrl
jns
adc
jb
fimull
les
pop
in
cld
aaa
jecxz
out
outsl
or
cmpsl
std
ss
add
inc
mov
jg
aad
sbbb
int
add
sarl
or
dec
inc
orl
cli
lods
fstl
mov
lret
fiaddl
dec
lahf
out
inc
loope
in
dec
jmp
mov
dec
inc
in
stos
push
arpl
bound
xlat
push
ss
dec
pop
push
dec
cmpsb
push
into
inc
repz
lea
in
insb
aaa
ret
jbe
ljmp
sbb
sbb
xlat
dec
inc
imul
fildl
test
push
mov
loop
int
cmp
data16
mov
dec
lods
xor
or
leave
jp
jge
data16
jmp
fimull
lds
pop
add
mov
aas
mov
and
ljmp
aaa
imul
ja
nop
sub
fisttpl
mov
pop
jl
and
stos
jmp
mov
sub
cmp
nop
push
and
inc
dec
inc
int
outsl
cmp
adcl
dec
iret
xor
ljmp
cmpsl
adc
dec
hlt
mov
ss
jecxz
lcall
fcompl
nop
cmc
mov
xchg
rol
add
fldl
je
fwait
hlt
cmpsl
call
jecxz
call
gs
mov
fisubs
enter
cmpsl
test
dec
stos
pop
fcomps
mov
and
cmp
cmp
or
int
pusha
xor
dec
or
push
ret
fisubs
pop
andl
push
lret
in
sub
ss
cmpsl
inc
daa
leave
push
ds
imul
fldl
int3
mov
test
jg
std
shll
iret
xor
pop
dec
std
ja
inc
inc
pop
ds
inc
mov
aas
cmp
lret
inc
pop
stos
test
dec
imul
addr16
pop
sub
push
xchg
sti
je
gs
push
and
int3
push
fidivl
dec
addl
xor
mov
shl
xchg
jnp
leave
jp
fs
testb
das
push
push
jg
rcll
cmpsl
je
loope
mov
ja
dec
xchg
inc
inc
push
push
push
aad
jb
sahf
dec
sub
enter
fcom
lea
pop
cmpsb
pop
lahf
lods
mov
in
and
cmp
cmc
xchg
es
clc
jmp
sbb
xchg
mov
lahf
loope
daa
inc
add
pusha
pushf
test
pop
pop
out
mov
mov
test
jae
rcrb
mov
add
push
in
data16
sti
add
in
xor
mov
ret
inc
and
nop
and
stos
mov
push
lcall
xor
dec
pop
mov
imul
pop
push
pop
jns
and
inc
xor
nop
lea
fbstp
mov
inc
jecxz
ret
nop
dec
mov
cwtl
jno
mov
insl
sbb
pushf
and
xchg
arpl
ret
sbb
sub
xor
rcr
sub
in
in
inc
jae
add
dec
sbbb
mov
into
sbb
inc
inc
imul
aas
add
sbb
xor
xchg
sbb
jne
mov
sub
xchg
cmp
jae
adc
and
mov
inc
inc
mov
add
test
daa
xor
stos
subl
ret
adc
in
ja
in
xchg
dec
gs
add
adc
dec
sbb
scas
push
aad
out
scas
pushf
xchg
fsubr
test
mov
jecxz
loopne
mov
mov
cli
sub
lcall
push
sub
insb
pop
mov
fildl
push
xor
lds
xor
push
fmuls
ret
add
push
jp
sarl
insl
mov
mov
sbb
lcall
mov
pop
andl
cmpsl
mov
fisubs
jo
inc
flds
aas
mov
push
ret
cmp
das
aad
movb
popa
sti
aaa
shll
ja
mov
popw
xchg
sarb
xchg
add
fucomp
dec
shlb
sbb
mov
mov
jg
insl
cmp
out
xchg
adc
lcall
int3
sbb
test
aaa
and
pop
cmp
jp
sbb
push
adc
jns
add
cmpl
pop
addb
or
xchg
pop
pushf
loop
push
dec
push
or
adc
faddl
push
ds
and
sub
jmp
out
inc
xchg
fidivrl
gs
sbb
popf
pop
add
addr16
sbb
inc
jge
inc
sbb
imul
pop
mov
sub
orb
dec
fbld
push
sbb
cmpsb
dec
pop
add
enter
xor
pushf
in
fucom
xlat
sti
sbb
push
mov
pop
fwait
add
test
and
pop
rorl
movl
stos
mov
fmul
inc
mov
fstps
xchg
aas
sbb
dec
in
das
inc
sti
sbb
fdivs
in
movb
test
fnstcw
pop
or
shll
jge
xchg
popf
xorb
fwait
xchg
sub
mov
push
loop
adc
ret
xchg
imul
jb
sbb
andl
loope
rcl
fstp
mov
xchg
pop
pop
pop
test
fwait
sbb
fstpl
jne
and
push
rcll
or
divl
xchg
stos
dec
fimull
lods
sbb
cmc
lods
lds
cmp
jnp
mov
mov
xor
rcrb
xor
stos
inc
and
jno
push
mov
cmp
sbb
mov
pop
fnstcw
rcl
and
adc
add
idivl
outsl
fildl
mov
mov
cmp
adc
pop
mov
iret
scas
xor
sub
mov
es
aas
sti
sbb
fwait
popf
andl
inc
mov
xchg
ljmp
ja
push
ret
pop
mov
insb
lods
test
les
cs
into
pop
mov
xchg
mov
fsub
cmp
mov
int
or
lahf
fisubrs
mov
hlt
add
add
xor
adc
dec
jmp
add
fwait
fisttpl
test
lds
jle
imul
mov
add
sbb
push
add
dec
jg
inc
mov
fsubs
daa
xchg
cltd
push
sub
enter
andb
and
pop
ret
pop
sub
imul
inc
dec
cmpsb
jmp
jae
xchg
cmp
dec
cmp
leave
test
mov
jg
xor
xorb
xchg
cmp
and
cmp
and
jecxz
mov
cmp
into
stc
dec
dec
jp
and
in
sbb
or
stc
and
outsl
pop
lea
xchg
frstor
mov
sbb
rol
aas
fistpl
xchg
jnp
inc
lods
aam
pop
les
faddl
or
push
jbe
or
xchg
fwait
xchg
jbe
stos
ljmp
dec
in
pop
ret
test
mov
ficoms
lods
ret
insb
jle
mov
out
dec
daa
and
inc
icebp
leave
inc
dec
adc
sbb
xor
inc
jp
mov
xor
xchg
push
jnp
stos
pop
jmp
leave
and
cmpl
sbb
or
iret
mov
mov
insl
gs
mov
data16
sbb
mov
sbbl
outsl
mov
pop
shrl
jle
pop
lret
aam
stos
popa
mov
cli
sub
std
int3
stos
dec
das
sti
mov
rcll
jl
dec
jmp
shll
inc
movl
aas
popf
mov
inc
fistpl
das
sarl
imul
xor
enter
push
outsl
dec
pop
imul
ret
xor
pop
call
out
ret
fstpt
aam
stos
pop
mov
push
fsubl
incb
xchg
jecxz
lea
cld
and
jp
in
sbb
xor
popa
push
or
aad
loope
pop
xor
xlat
sub
fmull
inc
and
ja
and
pop
pop
inc
imul
popa
andb
push
out
addr16
test
das
lret
cmpl
push
push
add
imul
mov
pop
mov
mov
pop
ret
ror
ds
dec
shr
push
fisubrl
nop
test
je
inc
jg
filds
aad
xor
push
pop
pop
or
lret
sub
leave
dec
xchg
sbb
shrl
inc
ret
or
cwtl
lea
dec
pop
cmc
addl
add
push
test
mov
out
insl
pop
movntq
repnz
dec
out
mov
int3
or
inc
fwait
insl
aad
mov
stos
and
jo
inc
sbb
or
aad
mov
out
inc
in
ja
jg
das
xchg
jge
lds
sti
cmp
test
pop
xor
or
mov
cmp
pop
jno
imul
ret
int3
mov
data16
fnstcw
cltd
es
in
jecxz
fninit
nop
xchg
jb
sbb
inc
scas
or
out
mov
add
dec
test
fdivs
insl
fs
cs
scas
fdivrl
push
mov
xor
aam
mov
jo
iret
and
xchg
fadds
push
dec
leave
shll
fisttpl
test
dec
in
ljmp
mov
and
fmull
add
orb
fisttpll
jno
xor
mov
outsl
cmc
dec
les
fwait
leave
push
icebp
sub
aam
loop
push
xchg
jmp
pop
imul
mov
jg
dec
push
push
test
jbe
mov
sbb
iret
pop
or
adc
arpl
mov
adc
insb
out
jae
pushf
pop
inc
aam
sbb
scas
cmpsb
andb
arpl
pop
aad
cltd
push
mov
push
std
fsubr
jae
push
mov
cltd
inc
inc
in
scas
dec
mov
ljmp
and
pop
or
sti
shll
jecxz
adc
mov
ret
push
rcrl
mov
adc
outsl
loopne
lds
movsl
dec
mov
movsl
fcompl
cmp
mov
aam
jne
cwtl
xchg
imul
jmp
pop
aas
xchg
outsl
sbb
bnd
adc
inc
or
sti
mov
aad
inc
insl
stos
cli
ret
je
scas
xor
push
xchg
icebp
rcr
test
lods
call
mov
xchg
inc
test
pop
push
sahf
repz
sub
aam
jecxz
xchg
jae
fisttpl
fists
and
test
inc
lods
in
gs
sub
xchg
sbb
jecxz
stc
and
imul
sbb
inc
data16
pop
popa
and
sbb
push
mov
aas
xor
sub
ljmp
lea
pop
scas
xchg
or
jmp
pop
xor
and
lds
imul
mov
mov
shll
pop
inc
inc
lock
cmp
and
jl
cli
int
in
dec
into
adcb
mov
leave
inc
aaa
pushf
sub
cmc
inc
fwait
jl
xor
cwtl
sub
rcl
sub
push
pop
iret
ret
dec
int3
inc
pop
je
xchg
enter
int3
dec
jae
popf
andb
das
xchg
xchg
into
adc
push
fwait
pop
divl
popl
outsb
fwait
loop
xchg
popf
stos
fwait
int3
xor
mov
icebp
pop
cld
daa
pop
push
andl
pop
pop
mov
or
mov
stos
jp
and
mov
popa
sbb
add
push
xchg
aas
sarl
inc
insb
in
xchg
and
test
popf
into
mov
fwait
mov
shrb
cmpsl
mov
sti
mov
mov
aam
pop
sbb
int
inc
dec
and
xchg
jns
xor
icebp
sbb
addr16
mov
arpl
push
ljmp
fwait
testl
insl
sarb
pop
mov
ja
ljmp
inc
sbb
and
stc
imul
cmp
je
mov
out
or
jecxz
aad
push
jnp
pop
jmp
inc
fxch
xchg
mov
fadd
and
lret
sbb
lock
out
fadds
or
cltd
jno
mov
mov
mov
sbb
mov
out
aas
push
ds
pop
cwtl
mov
mov
ret
mov
mov
shl
xor
nop
pusha
sahf
adc
push
and
gs
pop
faddl
or
jge
mov
ret
mov
leave
addr16
or
frstor
mov
rcll
and
jmp
ss
rcrl
sbb
jl
xchg
mov
inc
sbb
movsl
rclb
xchg
jb
das
add
in
aas
js
rol
icebp
filds
subb
ret
inc
sbb
push
dec
inc
ss
add
jecxz
and
xor
sub
in
sbb
mov
cli
mov
sti
xchg
mov
mov
orb
sbb
ret
or
push
lea
fwait
pop
in
ret
and
sbb
divps
and
scas
fsubrs
sub
sub
insl
pusha
ds
inc
shll
or
rcrl
es
xchg
jae
scas
xchg
mov
push
or
in
xchg
mov
daa
data16
jmp
mov
shl
and
nop
mov
cld
cmpsb
dec
cltd
cmp
ljmp
jbe
cs
and
test
dec
xor
add
mov
push
insl
mov
cmpsl
cmp
das
mov
xchg
push
xor
loopne
lret
sbb
cli
cs
jbe
in
sbb
xor
cmp
or
pop
mov
rcll
insl
leave
mov
cmp
adcb
cs
fistps
mov
and
inc
push
popa
pop
push
lret
xlat
pop
andl
and
xchg
insb
and
mov
addr16
fs
fwait
leave
dec
rcrl
bnd
xor
mov
rcl
or
leave
push
jbe
mov
and
jp
je
xchg
leave
adc
aas
icebp
push
dec
mov
sub
hlt
add
rcrb
fxch
leave
fcompl
adc
fnsave
repnz
cmp
popf
stos
out
lods
xor
jae
sbb
ret
shll
xor
adc
mov
sub
imul
mov
pop
icebp
pop
std
inc
popa
mov
xchg
jmp
rolb
in
shl
mov
aad
jmp
jmp
mov
aas
in
lea
inc
dec
int
in
xor
push
out
mov
insl
jl
inc
or
mov
push
xchg
dec
jl
fs
int
loope
cli
lret
pusha
inc
es
add
fisubl
pop
push
fidivl
inc
inc
inc
dec
mov
xor
dec
jecxz
fdivl
sarl
dec
addr16
mov
jns
or
mov
fdiv
sbb
inc
mov
pop
jp
pop
adc
out
clc
imul
es
ljmp
push
jl
push
js
dec
arpl
sub
fcmovnbe
xchg
test
and
push
cmc
lea
dec
into
dec
cmp
in
std
adcl
pop
pop
add
xchg
sub
jo
xchg
fwait
fldt
jnp
mov
push
push
mov
mov
fldl
test
push
jmp
sub
faddl
jecxz
jp
sbbl
mov
out
in
loope
fst
inc
push
pop
into
mov
mov
mov
ja
jg
out
iret
ret
jmp
dec
mov
arpl
mov
mov
inc
sahf
adc
add
lcall
out
mov
xchg
mov
leave
jne
xchg
pop
push
dec
jmp
cmp
cmpsb
fildl
jmp
pop
movsl
pop
jae
mov
jmp
mov
and
leave
dec
mov
add
xor
dec
pop
int3
decl
out
iret
xor
fs
sbb
mov
pop
cmp
ss
pop
push
fildl
or
scas
jbe
cmp
and
and
push
or
cmpsb
mov
adc
xchg
jl
dec
std
lcall
andb
shll
dec
push
and
push
ret
add
ret
rcl
and
scas
xchg
ret
iret
jb
push
cld
sub
jl
int
notl
ja
xor
addr16
or
jle
out
scas
push
stos
xchg
pop
sti
add
aas
jle
jmp
add
mov
testl
push
adc
jmp
inc
cmp
int3
fucomp
cmp
loop
jg
ret
in
jle
insb
ret
jl
adc
ret
push
rorb
jp
cmpb
push
xchg
pop
inc
loopne
xchg
mov
fistps
push
jg
aas
mov
xor
push
sbb
repz
push
dec
jo
daa
jp
sbb
out
push
imul
push
sub
mov
addr16
mov
push
insb
inc
fisubl
or
int3
ret
scas
lcall
test
mov
sarl
dec
xchg
ss
or
pusha
test
pop
cmovae
subl
ret
cli
mov
test
sbb
jmp
or
stos
lcall
pop
ljmp
ret
mov
std
cmp
rcl
shlb
push
js
ret
push
sub
in
fldl
test
lds
sbb
push
out
xchg
mov
inc
mov
sahf
leave
xchg
orl
out
andb
xor
les
pop
and
out
xor
test
sbb
xor
popf
vpminub
jmp
cmp
sbbl
imul
bound
mov
or
dec
pop
xor
jae
roll
js
xchg
flds
jg
lahf
lret
xchg
inc
dec
cmp
cld
inc
out
push
sbb
dec
mov
xor
pop
in
pop
fwait
arpl
add
or
fistps
pop
shrl
cmp
imul
mov
inc
out
jmp
sbb
dec
shl
xor
xlat
in
cmpsl
or
push
test
orb
in
rol
fs
cmp
test
fwait
popa
hlt
pop
pop
out
mov
pop
imul
sti
sbb
jns
pop
sysenter
add
mov
andl
adc
imul
out
pop
xlat
cwtl
and
push
addr16
lahf
cltd
push
inc
pop
add
sbb
xor
shll
xchg
aam
xchg
add
mov
daa
sub
lret
insb
jne
pop
les
fwait
shll
rclb
xor
xchg
sbb
push
das
lcall
and
inc
sti
jecxz
sbb
call
mov
pop
add
xchg
pop
and
sbb
mov
xchg
sub
push
lds
hlt
lret
repnz
fisttpl
adc
imul
pusha
test
and
repnz
and
repnz
or
sbb
repnz
and
sub
mov
sbb
repnz
adc
pop
sbb
js
mov
fucomi
push
cmp
fwait
mov
outsl
push
cli
adc
imul
leave
jbe
loop
aam
xchg
push
pop
xchg
dec
aas
jnp
mov
aas
jno
add
mov
mov
ja
stc
jae
pop
jo
add
fnstcw
add
cmp
xchg
aaa
adc
mov
addl
or
push
mov
jp
push
push
xchg
or
int3
outsb
outsl
fdiv
jns
lcall
and
dec
aaa
ret
inc
sahf
loop
sub
mov
int
inc
add
push
adc
arpl
jb
cli
int
pop
add
fdivs
aaa
or
scas
pop
sbb
add
lret
jne
es
in
loopne
sub
imul
insl
xor
jmp
js
xchg
call
mov
out
mov
pop
jno
ljmp
lods
jle
scas
fldt
ja
in
shll
xor
mov
cmp
ret
cltd
pop
insl
sbb
or
adc
xchg
xor
test
or
mov
sbb
xchg
jl,pt
lock
je
adc
mov
sbb
and
imul
fnstcw
inc
sub
fsqrt
popa
ror
pop
sti
and
cmp
cltd
cmp
adc
xchg
fists
test
sbb
jecxz
test
push
test
ljmp
jb
dec
shll
in
int
inc
aam
push
inc
cmpsb
add
std
push
dec
sbb
cmpsl
sub
xor
mov
mov
out
rcll
cmc
cltd
inc
ss
mov
addr16
mov
dec
ret
xor
lods
aam
cltd
pushf
lods
mov
arpl
ss
sti
mov
test
dec
jnp
mov
inc
sub
daa
call
lcall
addl
popa
sbbb
movsl
test
xchg
rcrl
call
rcll
int3
add
in
mov
mov
mov
pop
sbb
xor
sbb
les
sub
sub
and
mov
in
fldcw
nop
ljmp
lret
cmc
pop
mov
sbb
fisttpl
jno
out
int
xor
bswap
cwtl
shll
gs
cmp
nop
push
mov
popf
frstor
jbe
dec
andl
mov
add
push
aam
ss
stc
mov
xchg
sti
xchg
push
add
push
imul
dec
mov
mov
lods
sub
imul
lahf
mov
ret
aam
outsl
xchg
push
je
jmp
xor
out
ja
inc
sbb
mov
cltd
loope
inc
cmpsb
cld
and
cmp
sub
and
pusha
jnp
shlb
mov
out
es
hlt
das
mov
mov
nop
xor
fmuls
cltd
dec
sub
xchg
das
cmpsl
loop
inc
fldt
mov
push
in
mov
sti
cltd
cs
jge
mov
inc
push
mov
mov
and
nop
imul
addr16
ret
fisttpll
mov
mov
inc
ficompl
out
lcall
adc
insb
adcl
test
cmp
inc
cs
scas
push
cmp
addr16
scas
enter
iret
jb
cmp
dec
mov
cmp
les
dec
adc
mov
xor
mov
push
pop
inc
pop
outsl
inc
mov
jmp
lcall
sbb
and
lods
negl
xchg
mov
pop
lahf
ljmp
call
ljmp
rol
add
repnz
mov
roll
aad
xor
dec
fcmove
jle
mov
out
ss
cwtl
mov
cltd
dec
pusha
xchg
test
pop
cmpsb
push
mov
es
pop
add
pop
std
mov
xor
lret
pop
push
jmp
inc
aam
dec
push
cmp
rol
subl
ljmp
add
loop
cmp
inc
sbb
fistpll
popf
adc
loopne
sti
out
jnp
dec
divl
jb
pop
ret
fstpl
dec
loop
cmp
and
adc
aam
mov
cmpsl
addr16
jb
sub
addr16
cmp
add
sahf
jp
dec
dec
push
push
add
bound
xor
shl
das
std
iret
sbb
sbb
fld
adc
fisubs
fucom
mov
xchg
and
enter
pop
imul
sbb
jge
jo
jp
call
dec
jmp
mov
stos
in
and
pop
sbb
dec
sbb
fdivl
cmpsl
xorl
std
pop
dec
mov
push
stos
jb
and
shrb
xor
mov
push
sub
dec
cld
pop
mov
sti
mov
mov
movsl
in
sar
test
inc
idivl
mov
jb
fisubl
push
dec
out
mov
arpl
ret
test
and
int
xor
testb
xor
add
xor
pop
sbbl
mov
pop
mov
push
inc
jg
das
inc
repnz
mov
fcom
rol
stos
xchg
rorb
adc
ficoml
cli
push
push
enter
dec
jb
stos
push
push
push
mov
das
int3
fimull
loope,pn
push
xchg
int
xor
aaa
inc
aaa
cmpsl
aas
xor
pusha
cmp
shll
push
cs
dec
add
inc
adc
sub
fstpt
cmp
push
popa
cmp
daa
fstpt
stc
inc
or
fcompl
xchg
sbb
or
imul
leave
and
popf
lret
push
dec
xor
jmp
push
movsb
ss
fisubl
push
push
inc
das
xchg
test
dec
mov
mov
lcall
mov
lods
scas
pop
lcall
inc
insl
in
test
mov
cmpsl
loope
jle
dec
imul
fcompl
xor
mov
add
adc
xchg
call
push
insl
push
mov
push
adc
dec
int
je
inc
xchg
sub
push
push
xor
inc
cli
popa
dec
jmp
repz
mov
xlat
xor
xchg
inc
dec
leave
xlat
pop
push
and
adc
fmull
sbb
and
jge
insl
push
sbb
sub
push
and
into
xor
pop
mov
sbb
loop
insl
leave
xchg
mov
aad
hlt
push
mull
mov
adc
lods
push
test
jp
popl
in
in
loop
cmpsb
int
jmp
xchg
and
dec
xchg
push
inc
fldl
repz
cmp
rol
int
int
loopne
ljmp
in
adc
lcall
sbb
jmp
lcall
push
sbb
mov
or
jae
cs
jnp
mov
rcll
push
aam
xchg
mov
lods
dec
lock
bound
pop
rolb
add
test
leave
out
out
inc
push
xchg
addr16
pop
push
add
pop
mov
and
in
inc
repz
aas
xor
rcl
fwait
mov
xor
test
lock
inc
mov
mov
into
inc
fsts
leave
push
in
loopne
sbb
aad
xor
add
in
or
ljmp
ljmp
add
push
icebp
dec
cmp
fadd
pop
stos
mov
jmp
addb
sti
ljmp
mov
lods
ljmp
iret
in
into
dec
dec
loope
clc
es
lcall
es
leave
roll
mov
mov
ss
xchg
mov
dec
mov
data16
push
aas
jae
hlt
sbb
sbb
cli
pop
mov
mov
into
out
movsb
fcmovnu
les
scas
pop
orl
adc
int
gs
xchg
rcll
insl
ljmp
add
mov
fnsave
std
mov
lea
test
add
jmp
mov
leave
into
push
push
adc
sbb
ljmp
dec
rcrl
sbb
out
mov
arpl
sbbb
in
xor
ret
enter
push
add
imul
fidivrl
push
inc
int3
ds
ret
pop
xchg
sbb
inc
mov
fdivrs
insl
lret
sbb
lock
mov
push
or
les
fucomp
sbb
xor
jle
insl
push
sbbl
sbb
lcall
fs
pop
rcrl
imul
mov
sbb
pop
jmp
xor
add
xchg
loop
inc
jmp
gs
lods
insb
dec
jg
rcrb
mov
fxch
dec
ljmp
pop
mov
push
cmp
icebp
movsb
dec
jmp
fsubs
jmp
aaa
xor
ja
xor
lods
sbb
adc
pop
pop
jnp
inc
stos
sahf
inc
ret
fmuls
mov
jecxz
adc
iret
lock
testl
cli
cmp
sub
int3
sbb
pop
pushf
push
sti
mov
out
imul
sbb
sub
dec
insl
sbb
inc
xchg
inc
fcompl
push
fsubrs
shlb
pop
mov
in
jno
sub
pushf
stos
dec
sbb
fildl
js
pop
lods
out
iret
xor
filds
cmpsb
aad
cmp
mov
iret
movsl
jecxz
icebp
mov
inc
leave
adc
int
sub
stos
jmp
sbb
imul
mov
js
sub
or
mov
jmp
and
cs
push
rorl
imul
xchg
add
mov
cltd
movsl
xchg
lcall
ss
movsb
cmpsl
out
movsb
daa
je
pop
lea
cld
dec
out
xchg
dec
xchg
subb
adc
pop
in
outsb
loopne
jb
arpl
jae
sbb
adc
ret
and
xchg
int
push
ret
outsl
or
fldenv
orl
shr
jg
pop
inc
dec
jno
pop
jns
xlat
out
cmpsl
arpl
fmuls
xchg
mov
xlat
shrl
add
out
mov
mov
xor
jmp
subl
fwait
ret
mov
cmp
dec
push
call
jo
add
pushf
dec
sub
or
insb
or
stos
push
cli
lock
cld
sti
arpl
xchg
mov
stos
ficompl
sub
icebp
mov
xchg
pop
mov
insb
fcmovnbe
cmpsb
mov
arpl
in
sub
int
jmp
cwtl
mov
add
inc
ret
loopne
lds
push
sti
mov
ljmp
paddusw
sahf
add
sub
aas
pop
jno
lds
aam
fimull
sbb
fistpl
jmp
cmp
in
stos
jge
fldl
inc
out
and
mov
jne
push
jl
mov
pop
push
test
fld
sub
cmpsl
mov
je
movsl
ret
jl
jecxz
ja
and
xchg
fs
outsl
lcall
jecxz
mov
mov
ljmp
out
repnz
mov
pop
in
mov
ret
rcr
mov
sub
push
jne
out
add
loope
imul
rolb
inc
sub
and
fsubrs
mov
lods
jnp
mov
imul
or
xor
inc
jne
and
scas
mov
das
xchg
dec
inc
sbb
xchg
out
daa
fcmovnu
fisubs
ret
fisubl
dec
insl
ret
mov
or
jae
repz
int
cmp
sbb
aad
testb
imul
pop
xchg
inc
cmp
ret
rorb
ja
dec
test
pop
insl
and
test
inc
movsl
mov
rcr
leave
ljmp
fisubl
push
insb
push
iret
mov
inc
push
ret
push
addr16
mov
imul
push
pop
enter
push
ret
sbb
dec
sub
mov
jg
stos
adc
or
mov
movsl
jg
pop
sbb
popf
pusha
cli
int
and
sarb
aas
jmp
or
into
sbb
sbb
faddl
popa
mov
dec
add
cmp
adc
repz
mov
xchg
fwait
pop
imul
and
mov
sbb
sbb
sar
stos
ret
out
sub
pop
lods
rol
jl
xchg
cmp
in
jnp
insl
inc
arpl
nop
sbb
sbb
adc
dec
add
cli
jno
in
sarl
inc
mov
and
lds
subb
mov
ja
addr16
into
les
xor
sti
pop
sbb
loopne
jbe
int3
inc
add
pop
dec
adc
cmp
pop
dec
in
or
cld
push
push
mov
int3
xchg
inc
ret
testb
sbb
dec
daa
mov
pop
mov
ret
cld
aas
aad
fnstsw
mov
stc
ljmp
addr16
fwait
out
call
xchg
popa
addr16
stc
pop
cli
test
mov
sbb
std
jne
gs
xchg
mov
daa
pop
andb
sbb
push
icebp
popf
push
xchg
fwait
lds
mov
lds
je
cmp
sbb
lea
mov
inc
fimull
sbb
dec
inc
loopne
mov
ret
inc
in
or
test
fwait
and
mov
and
insb
leave
popa
cld
mov
lock
cmp
cmp
mov
ret
xorl
dec
and
popa
cmp
pop
leave
push
mov
addr16
mov
cmp
sbb
in
hlt
lret
test
lock
jecxz
test
repnz
xchg
aas
rorb
jb
cld
into
sarl
aam
xor
aad
mov
ret
fwait
xor
insb
cmp
lock
sbb
in
pop
pop
sbb
dec
lods
mov
mov
pop
in
ficoml
insb
or
add
xor
push
loopne
inc
fstps
inc
pop
faddl
ljmp
int
pusha
cwtl
mov
and
push
imul
add
stc
xchg
jae
test
sbb
insl
xchg
pop
ja
push
ret
cmpsb
xorl
fildll
pop
push
xchg
jecxz,pn
pusha
mov
dec
mov
mov
inc
xchg
pop
lock
and
mov
pop
sahf
scas
mull
pop
add
enter
mov
dec
mov
jnp
nop
cmp
sbb
ficomps
mov
xor
nop
fisttpl
pusha
andl
xchg
mov
roll
add
rcr
pushf
popf
test
popf
inc
pop
fidivl
add
movsl
lock
and
sbb
stos
xor
das
mov
aad
fsubl
pop
and
jecxz
mov
sbb
dec
in
sub
loop
add
fiaddl
cmp
popf
sbb
in
scas
cli
or
sbb
lret
inc
mull
jmp
repz
js
sbb
sbb
inc
aas
xchg
aas
addr16
cs
mov
inc
insl
xor
cmpsl
jmp
push
lcall
fsts
lea
and
mov
lock
in
insl
je
sbb
daa
push
lock
cli
in
adc
mov
dec
inc
adc
dec
loop
inc
outsl
and
add
lds
ret
jne
ret
fcompl
int3
lret
rol
test
jae
jmp
in
mov
xchg
fcmovb
xchg
je
xchg
xchg
mov
mov
inc
sbb
or
in
dec
cs
mov
inc
into
mov
aam
imul
jb
in
inc
push
mov
aam
pop
xchg
cmpsl
and
mov
sub
fsubl
rorl
push
jmp
mov
jns
and
xchg
sbb
std
inc
fimuls
je
push
out
cld
ret
fdivrp
jge
fldl
pop
mov
sti
imul
jle
cmp
ljmp
ret
cmp
mov
dec
jae
icebp
jnp
lods
mov
ja
xchg
lods
out
dec
cmpsb
orl
aad
or
fwait
and
mov
and
cmc
sbb
imul
in
les
popf
fistl
mov
std
js
aas
xor
mov
imul
push
add
lret
sbb
jnp
pusha
jmp
jne
cli
stos
mov
add
popf
push
sub
sub
or
mov
ljmp
rcrl
fwait
sbbl
jne
pop
in
hlt
cmp
dec
andl
fdivrl
xor
call
iret
fadd
je
sbb
cld
shrl
cld
add
stos
lcall
fcoms
mov
mov
jecxz
push
shl
jno
stos
cmp
pop
mov
fsubr
in
adc
call
popa
adcl
fbld
addr16
out
out
sub
push
fcmovu
add
and
and
and
test
mov
and
and
mov
mov
adc
xchg
jns
xlat
fisubrl
xchg
jnp
imul
xchg
dec
movsb
adc
pop
popa
insl
pop
int3
popf
dec
scas
ret
dec
cmp
xchg
stc
mov
cmpsl
test
int
jge
test
pop
ret
dec
xor
cli
outsl
xor
subb
jp
sti
in
mov
sub
inc
outsb
lods
sbb
in
popa
sub
or
push
sbb
jne
mov
add
scas
ret
shr
dec
mov
xchg
mov
sbb
lods
xor
jecxz
xchg
insb
or
sbb
and
fiaddl
xchg
and
scas
movsb
and
mov
lds
jp
and
stc
xchg
mov
mov
ret
and
setne
mov
cmp
sub
fiaddl
jle
sbb
sti
xchg
sbb
pop
shl
aas
jns
xchg
sbbb
and
inc
fldenv
shll
int
inc
int3
jecxz
cmp
xchg
sbb
test
subl
inc
pusha
in
stos
fistpll
in
stos
adc
mov
xchg
in
cmp
cltd
stos
and
in
stos
pop
sarl
inc
rcrl
mov
cmpsl
inc
mov
les
aad
clc
pop
mov
popf
ds
clts
jl
stc
jp
cmpsb
jle
mov
xlat
xchg
rol
fcompl
jns
aam
cltd
mov
adc
lds
fldcw
xchg
xor
imul
sbb
mov
jecxz
int
xchg
imul
or
leave
les
lea
push
sub
rcr
mov
insl
dec
or
adc
ja
je
jbe
aas
stc
out
aam
stos
pop
push
sbb
sbb
jnp
push
in
push
mov
sbb
out
xchg
sbb
sub
lahf
les
aas
cmp
lock
iret
fidivrl
sbb
outsl
or
and
into
inc
or
push
cltd
adc
push
fcomip
pop
mov
and
and
sti
out
sbb
jmp
scas
cmpsl
pop
lds
data16
arpl
pop
andl
neg
ror
pushf
aad
inc
rcll
mov
jae
jnp
lea
mov
jmp
sub
push
imul
fsubl
sbb
leave
xchg
cmc
sub
pop
or
shl
dec
push
outsl
adc
ja
pop
addr16
fdivl
clc
pop
xor
inc
imul
sbb
and
inc
dec
dec
arpl
std
mov
and
insb
mov
dec
sub
ja
fbld
sti
mov
fisubl
sahf
pusha
pop
lret
dec
push
mov
rcll
push
pop
mov
cmp
mov
aaa
imul
orl
push
loop,pn
nop
mov
dec
test
push
xlat
lcall
push
xchg
jae
xchg
loope
loop
outsl
jmp
cmpsl
mov
test
sbb
xor
add
push
sub
mov
popl
insl
xor
xchg
cltd
mov
and
lea
mov
push
cmpsb
stos
leave
dec
pop
mov
shlb
and
dec
das
sub
shl
mov
lds
xchg
faddl
fimull
test
add
lcall
rcr
xchg
pop
test
xchg
sub
and
arpl
adc
nop
loope
jb
rcr
sbb
movsl
ret
and
cmp
popa
dec
outsl
mov
push
xchg
pop
or
leave
cld
and
rcr
xchg
cwtl
popf
jecxz
imul
int
push
loopne
out
cmc
sub
mov
dec
pop
insl
push
or
movsl
les
andb
push
fimull
call
xchg
outsb
sbb
inc
mov
rcll
sbb
fsubs
gs
sarl
in
aas
cmp
enter
ds
mov
dec
mov
ds
testl
push
cmpb
pop
fists
pop
in
jg
xlat
in
iret
dec
scas
rorl
sub
int
addr16
xor
sbb
sbb
xchg
or
call
push
fmull
cwtl
sbb
and
ret
fidivrl
loop
push
mov
int
adc
ret
cmp
das
xchg
std
les
push
cmc
out
mov
pusha
or
pop
ret
je
adc
lcall
xor
jle
imul
push
lock
mov
fisubrl
enter
jmp
cs
sbb
xchg
idiv
lods
iret
addr16
sbb
pop
xchg
popf
nop
into
mov
icebp
les
insl
das
hlt
call
pop
mov
and
gs
push
cmp
xor
ljmp
jae
or
xchg
fsubs
jl
in
xchg
or
jmp
add
ret
daa
cmpsl
hlt
imul
mov
push
cmpsb
cld
pop
xor
inc
adc
cmpsl
inc
mov
add
scas
repz
imul
jl
test
mov
add
cltd
xchg
push
pop
out
rcrl
les
iret
out
cltd
pusha
loop
pop
sub
outsl
les
cltd
std
mov
push
or
xor
lods
dec
out
loope
aam
fidivs
mov
pushf
fdivr
rorl
cwtl
js
adc
push
push
xchg
aam
loope
push
sahf
out
fwait
push
mov
xor
loop
cli
ret
mov
ret
pop
into
pop
movsl
pop
scas
orb
dec
jp
test
mov
ljmp
adc
fiadds
adc
std
leave
inc
inc
adc
sbb
jns
xlat
sub
or
or
dec
jae
test
lea
and
addr16
aad
mov
pop
pushl
add
xchg
xor
add
ss
push
add
inc
jnp
or
das
mov
fs
in
add
adc
ljmp
sbb
outsl
mov
mov
xchg
fwait
xchg
lock
fwait
scas
les
shlb
xchg
je
loop
jmp
fdivs
push
push
loop
dec
lahf
stos
jbe
sub
sbb
inc
enter
xchg
jmp
mov
jb
loop
lock
std
enter
les
loopne
pop
add
mov
inc
aam
mov
lahf
insl
cmpb
add
cmp
mov
pop
ficomps
mov
sbb
repz
scas
hlt
cmpsl
jmp
lods
mov
ret
fwait
sbb
jae
jbe
test
lods
inc
sbb
cmp
in
ret
sbb
dec
add
cmc
or
stos
pop
jns
jmp
adc
fmuls
insb
jmp
jb
mov
loope
jmp
ret
leave
and
pop
popf
xor
xchg
mov
scas
pop
or
hlt
fcompl
and
mov
shll
add
fsubrl
adc
jl
and
add
and
xor
test
xchg
ss
push
fdivrl
mov
inc
mov
mov
cld
mov
inc
inc
ficomps
fisttpl
ds
and
imul
or
add
rcr
pop
push
ds
sbb
and
fwait
or
int3
ret
sub
cmpsl
sbb
lret
test
aas
inc
pop
pop
sbb
adcl
mov
insl
xchg
fidivrl
movb
int3
sbb
popa
fmuls
dec
mov
int
sub
mov
jns
jmp
lods
aam
adc
loopne
mov
mov
rol
cltd
adc
mov
es
fwait
xor
dec
sub
dec
aas
leave
in
lea
insb
xchg
dec
fstps
xor
pop
or
fs
sarl
jle
xor
ja
xchg
int
cmpsb
sbb
mov
outsb
imul
xchg
and
int
imul
dec
fwait
aad
fwait
pop
in
mov
aad
xor
or
mov
mov
arpl
jns
js
push
rcrl
or
shll
les
hlt
test
add
inc
imul
pop
jae
push
sub
test
pop
scas
pushf
cmc
mov
mov
mov
pusha
sbb
and
mov
add
cmp
inc
adc
push
fsubrl
mov
and
fsubl
cld
aam
stc
mov
mov
cmp
adcl
and
inc
dec
cmp
int3
mov
pop
xchg
sti
je
cmpsl
repz
int
inc
or
and
repnz
cli
jmp
jecxz
out
lret
test
inc
sbb
out
jmp
andl
inc
mov
ret
xchg
rol
and
kandw
or
push
inc
sub
push
dec
ja
dec
rcll
push
iret
push
ror
sarl
lcall
cmp
add
scas
ljmp
inc
push
xchg
adc
pop
sbb
push
mov
add
mov
inc
rcrb
push
cmc
sbb
test
lret
xor
fnstsw
enter
cmp
mov
mov
jecxz
or
fs
or
sbb
xor
ret
xchg
push
cld
xchg
out
hlt
shrl
mulb
push
int3
mov
std
mov
pop
dec
daa
dec
xchg
je
ds
xchg
cltd
push
sub
cli
dec
pop
mov
cmp
xchg
mov
shrl
mov
sbb
inc
dec
xchg
out
and
aam
inc
scas
clc
xor
dec
out
mov
and
cli
test
les
iret
scas
leave
in
mov
ret
mov
fbld
dec
sub
cwtl
in
xchg
cmp
les
jp
jmp
mov
in
lret
stos
push
mov
sti
push
mov
in
cmp
gs
int3
outsl
insl
or
mov
inc
enter
out
push
mov
inc
push
push
mov
pop
push
outsb
jmp
popf
stos
inc
jecxz
cmp
adcb
shl
adc
pop
mov
cwtl
daa
jmp
mov
daa
and
fstl
test
add
imul
call
mov
mov
mov
ficomps
fdivrp
jno
and
pop
les
fwait
out
aas
jnp
test
pop
dec
cmpsb
xor
push
arpl
jmp
mov
jno
imul
outsl
jns
push
mov
jmp
or
add
fmul
stos
aam
add
imulb
and
inc
aad
or
fistpll
mov
insl
xchg
call
fimull
imul
les
leavew
sbb
ja
stos
push
adc
fidivrl
sysenter
push
push
fs
orl
dec
mov
ja
ljmp
mov
pop
sbb
out
xor
into
stos
inc
push
jecxz
int3
jno
ret
sub
test
or
fdivrl
fstl
pop
lds
push
sbb
int
ret
xchg
mov
fnstcw
out
jbe
fnsave
and
or
pop
fcoml
xor
lret
xor
ficompl
insb
sbb
incb
out
sahf
fistps
and
fadds
and
pop
std
inc
push
sbb
pop
jb
mov
xchg
imul
fs
dec
in
mov
imul
jp
cmp
sbb
aam
loope
pop
sbb
push
xchg
lahf
andl
jmp
jecxz
stos
dec
sbb
mov
sbb
sbb
lds
dec
adcb
pop
sbb
andb
dec
pushf
xlat
test
mov
mov
sbb
insl
cmp
xor
loopne
out
cmp
xchg
aas
lret
push
sub
dec
lods
add
imul
pop
rol
add
shlb
push
test
test
test
cmp
loopne
adc
inc
push
xor
dec
dec
fadd
sti
repnz
fdivr
mov
leave
sbb
push
in
jle
pop
outsl
pop
mov
mov
cli
das
cmpsl
sbb
add
imull
mov
cmc
mov
jmp
sbb
out
in
cmp
aam
sub
clc
add
add
sbbb
std
jge
scas
push
imul
mov
pop
divl
in
xchg
hlt
inc
aam
iret
insl
xchg
divb
pop
jl
hlt
scas
push
jnp
push
jb
addr16
out
sbb
sbb
rcrl
sbb
fdiv
pushf
and
push
sahf
aad
cmp
lcall
xchg
pop
pop
je
xchg
inc
sbb
mov
push
and
rol
cmp
out
pop
insb
stos
call
sbb
inc
cli
fwait
and
and
cmc
jnp
mov
push
fsub
mov
xchg
pop
jo
sbb
push
dec
cmp
repz
neg
inc
mov
lds
mov
rcll
aam
sub
jp
pop
mov
sub
test
ljmp
mov
push
clc
lret
dec
addr16
int
imul
gs
dec
mov
insb
stos
sbbl
inc
fisubs
fucom
pushf
add
rep
push
mov
ja
out
mov
jo
aaa
lods
push
sti
mov
lock
loopne
jmp
insl
mov
sbb
in
testl
pushf
scas
xchg
fsubl
or
jno
sarb
xor
cmp
sub
fdivrl
popa
fsubp
add
shlb
in
push
lods
ret
clc
rcll
outsl
xchg
dec
out
andb
loop
int3
cmp
dec
movsb
and
and
and
inc
pop
int
sbb
imul
jge
mov
push
lea
cmp
mov
mov
testl
mov
test
xchg
call
xor
loopne
lock
dec
addr16
mov
test
pusha
sbb
jg
pop
or
jne
sub
add
sub
xchg
cmp
mov
mov
push
outsb
sbb
cmpsl
test
pop
add
dec
fwait
out
jmp
pop
xchg
cmp
shrl
and
sbb
insl
jecxz
jmp
dec
adc
mov
jbe
or
sub
test
pop
sub
mov
mov
cmpsl
add
inc
enter
mov
dec
mov
fsubr
sbb
sbbl
pand
movsb
insl
push
mov
mov
xor
leave
fdivrl
cmp
shrb
lock
xchg
js
dec
mov
clc
mov
pop
lods
xchg
out
adc
stos
mov
push
mov
aam
mull
jp
mov
or
ret
hlt
rorb
mov
add
fisttps
jns
in
jne
leave
inc
rcrl
sbb
push
push
test
cltd
mov
lods
loope
mov
fsubr
dec
sbb
cmp
sbb
lds
ljmp
jmp
sub
mov
hlt
dec
out
push
inc
stos
mov
mov
lea
loopne
lret
outsb
xchg
pop
leave
cli
pop
aam
loope
test
jne
cmp
jns
cmpsl
inc
inc
mov
mov
sar
ficompl
mov
mov
fs
push
ds
lds
cmp
mov
aam
inc
xchg
fdivl
ss
roll
shrb
movsl
mov
xor
pop
mov
and
mov
loope
push
sbb
out
pop
jp
lods
fwait
popa
imul
sbb
ja
jo
leave
mov
popf
imul
xchg
inc
aas
mov
in
cld
out
pop
enter
dec
mov
out
shr
inc
test
inc
mov
or
cmp
aas
mov
mov
mov
sar
fdivs
cmpsl
push
pop
popa
xor
arpl
rcll
popf
pop
lds
sti
stos
and
mov
sbb
out
jge
das
mov
sub
mov
add
leave
ljmp
ret
imul
push
in
jne
popf
frstpm(287
shrb
insl
cmp
pop
fwait
cmp
adc
popl
xchg
and
je
xchg
jmp
cmc
lock
inc
mov
mov
lcall
in
aam
ljmp
test
mov
out
jae
mov
fildl
hlt
sbbl
pop
push
lods
test
push
and
push
sbb
xchg
push
in
int
les
ljmp
nop
or
in
insb
cmpsl
pop
jecxz
out
xchg
ss
mov
imul
xchg
push
cmpsl
pop
imul
add
rcrb
push
daa
xchg
dec
test
mov
adc
pop
repnz
and
xor
rcrb
retw
shll
sbb
mov
stos
dec
mov
frstor
jmp
hlt
std
clc
nop
inc
leave
xor
out
jp
lods
loop
fnstcw
fs
fstps
inc
stos
cmpsb
cli
std
in
jnp
outsl
push
int
pop
rorl
ja
cmp
cwtl
mov
dec
mov
add
mov
mov
sub
push
je
mov
mov
or
pushf
bnd
sbb
test
push
inc
jmp
int3
inc
mov
rcl
adc
fidivrs
repz
movsl
mov
aas
lret
inc
testl
mov
pusha
leave
adc
jge
xor
push
adc
nop
jecxz
jp
es
sub
adc
cmp
dec
fwait
and
rcll
scas
xchg
jb
out
push
cli
push
mov
cmpl
aas
testb
mov
mov
cli
not
mov
mov
popa
cmp
inc
inc
sarb
and
jae
mov
mov
dec
sti
mov
pop
push
sbb
sub
les
sbb
ror
mov
push
add
xchg
popa
pause
lea
cmp
sbb
test
jmp
sbb
ror
jp
outsl
pop
sub
dec
add
mov
cld
sub
dec
outsl
ja
in
sub
into
mov
loopne
xlat
scas
movl
lahf
mov
sbb
into
inc
in
add
sbb
sahf
dec
sti
fldcw
pop
insl
sbb
popf
xor
push
cmp
mov
popa
inc
adc
addr16
fwait
repz
enter
cmp
fsubl
clc
dec
push
cmc
mov
inc
sub
mov
push
enter
inc
jns
roll
xchg
rclb
adc
shl
fcompl
inc
mov
out
mov
and
adc
dec
mov
mov
sbb
push
cmpsl
mov
sbb
adc
xchg
aas
fs
iret
mov
mov
cltd
ffree
cltd
aas
mov
test
in
sti
mov
push
loope
xor
jmp
jno
sub
loop
cmp
push
jecxz
jecxz
xor
sbb
push
gs
sbb
aad
cmp
rorb
jp
jno
pop
call
imul
movsb
pop
sbb
sbbl
mov
imul
test
mov
xor
cltd
insb
leave
ss
out
lods
mulb
inc
aad
shl
stos
arpl
out
mov
xor
and
add
sub
pop
in
movb
pop
dec
mov
lods
push
push
mov
scas
sti
and
in
lea
sbb
inc
jp
subl
lahf
lret
mov
mov
mov
push
cs
ss
push
jecxz
adc
cmp
xor
jno
out
mov
xor
sbb
jnp
mov
das
fbld
repz
jmp
sti
mov
push
inc
dec
iret
sub
rcll
leave
ds
xor
fsts
pop
rcrb
cmpsl
push
out
cld
into
xchg
arpl
sub
in
xor
pop
sbb
sti
mov
loope
imul
ljmp
cli
mov
lods
sub
rorl
fadds
adc
imul
xchg
fiaddl
mov
and
daa
inc
inc
arpl
in
sub
mov
jo
cmc
jg
and
jecxz
mov
cmpsb
sti
imul
sbb
lods
faddl
popa
sbb
sbb
jecxz
dec
loope
mov
dec
sub
fsubs
jno
sbb
loopne
aaa
mov
mov
jno
sbbl
xor
cmp
xchg
pop
push
dec
repnz
xchg
inc
ret
outsb
cwtl
mov
outsb
sbb
jb,pn
out
push
sub
pop
sbb
bswap
shr
or
xor
sti
fcmovnu
mov
cmp
lock
dec
aaa
pop
jmp
das
out
test
mov
fcomip
mov
add
dec
int
and
rol
mov
mov
out
ljmp
jae
insl
dec
fistl
add
jae
xor
and
pop
jp
ficomps
mov
xchg
test
das
fisubrl
repz
in
pusha
push
hlt
sti
fisubrl
or
mov
jp
daa
cmp
jl
pop
out
jne
sub
sbb
jl
mov
mov
mov
imul
aaa
out
scas
mov
ret
fsubrl
inc
insb
inc
ret
inc
sub
fisttps
inc
call
inc
cli
push
clc
dec
scas
cmpsb
and
scas
pop
dec
insb
or
xchg
lock
clc
fs
or
inc
subl
pop
or
iret
popa
fsubp
ror
call
xchg
or
sbb
mov
and
stos
loope
movntps
jne
les
icebp
push
out
repz
pop
sub
inc
mov
roll
mov
inc
fcoml
sbb
out
repnz
lds
ret
aam
or
scas
mov
shrb
gs
test
aaa
mov
mov
loopne
mov
push
sub
sub
jmp
shll
jmp
insb
or
fmul
pop
push
cmpsl
int
xchg
pop
jp
xor
push
notl
mov
loop
sarl
mov
dec
jp
jg
out
mov
imul
push
into
scas
mov
and
daa
sbbl
ljmp
push
sbb
aas
fisubrs
jmp
mov
sbb
cmpl
js
sbb
ret
mov
or
dec
out
sbb
inc
enter
aad
push
jns
xor
popf
adc
in
jecxz
popa
or
inc
iret
mov
imul
dec
das
lds
imul
mov
loop
fldenv
vmovaps
push
test
or
test
insl
push
fstpt
aad
lea
pop
in
sbb
imul
xor
mov
jmp
subb
mov
movsl
mov
lcall
aas
xchg
insl
daa
mov
repz
xchg
mov
jmp
pop
popa
mov
sbb
mov
outsb
icebp
int3
test
jmp
mov
sbb
mov
int
loopne
fnsave
pop
ljmp
rcrl
pop
pop
lcall
cmpsb
xchg
jp
push
mov
imull
mov
into
fdivl
loop
hlt
jno
push
xchg
loope
imul
dec
or
mov
mov
adc
mov
imul
outsb
push
inc
cmp
imul
orl
incb
jne
aam
test
pop
push
out
mov
outsb
xor
inc
insl
fistpl
mov
lods
mov
adc
push
xor
sbb
stos
ret
rcll
jle
jns
pop
jmp
sbb
sbb
pusha
stos
cmpsb
cltd
sbb
movsl
scas
gs
jecxz
shrd
jge
jle
sahf
out
mov
cmpl
or
sub
stos
or
arpl
out
mov
aas
filds
iret
pmuludq
orl
inc
sbb
ret
insb
mov
cmp
out
arpl
cmp
aas
xchg
jmp
inc
xor
xor
add
push
mov
insl
dec
pop
jae
mov
cli
adc
cmp
jg
lcall
mov
shlb
imul
jnp
dec
nop
test
movb
jne
pop
adc
ss
add
stos
test
stos
in
dec
orb
and
fidivrs
pop
imul
outsl
stos
mov
jns
xlat
loope
cmp
mov
and
lea
xor
cld
fsubrl
test
xor
xchg
cltd
dec
es
fxam
jnp
jl
cs
pusha
loopne
mov
mov
fidivrs
mov
aad
push
xchg
cs
movsb
loope
in
dec
sub
jnp
push
jmp
add
mov
enter
fwait
push
lods
stos
stc
les
sub
aas
lea
push
ret
daa
shll
sbb
popf
les
dec
cld
pop
push
out
aam
cmpsl
les
sub
pop
pop
dec
out
gs
les
add
int
lret
add
adc
stc
jne
mov
imul
mov
and
push
add
les
cs
shr
aad
mov
insb
push
sub
mov
adc
sub
xchg
mov
xlat
aam
out
add
shlb
dec
sbb
inc
push
cltd
test
dec
dec
jmp
xchg
pop
jne
lea
inc
dec
adc
insl
rol
ffree
push
test
fstpl
rol
loop
test
xchg
jmp
scas
xchg
lcall
jecxz
movl
loopne
fnstsw
cmpxchg
cmpsb
hlt
xchg
add
loopne
xor
sti
pop
hlt
xchg
leave
dec
lcall
je
push
mov
insb
add
das
adc
ficoml
std
int
out
call
iret
pop
push
jne
mov
cmp
mov
mov
adc
sub
dec
leave
hlt
or
imul
inc
out
out
mov
inc
fucom
es
sub
stc
out
xchg
out
cmp
mov
sti
dec
cltd
mov
and
in
leave
add
sbb
out
xor
xor
jb
sbb
adcb
arpl
fisttpl
insl
mov
stos
lea
push
push
mov
adcl
scas
and
nop
adc
negl
sub
insl
pop
xchg
inc
sub
or
fbstp
cmpsb
fwait
add
rcrl
test
ja
jns
lret
js
cmp
jo
ret
xor
fninit
push
cmpsb
or
in
outsl
ret
fbld
pop
xchg
mov
xor
sub
aas
rcll
fldt
fstpt
fisttpl
cmpsb
sti
lcall
push
jno
stos
fcomps
sub
aaa
xchg
leave
and
sbb
xchg
push
fnstsw
pop
gs
and
rcrl
dec
sub
jmp
pop
in
mov
shlb
lea
xchg
decb
push
rorb
stos
push
xchg
mov
lock
ret
rcl
inc
lds
and
lds
loopne
iret
fmuls
adc
jecxz
imul
mov
cmp
in
push
addr16
mov
jnp
rcr
add
push
pop
jno
insl
cmp
ds
push
pop
jle
ds
ljmp
xchg
outsb
dec
int
sbb
sub
push
mov
mov
mov
jo
movsl
lds
dec
mov
fnstsw
frstor
in
mov
adc
ret
lret
mov
sti
icebp
les
xor
ret
pop
add
fsubrl
xchg
and
test
mov
and
inc
leave
fsubr
iret
fwait
in
cli
stc
lea
jnp
xor
movsl
inc
sbb
mov
out
shl
daa
roll
xchg
mov
mov
cltd
or
orl
addr16
xchg
inc
fs
fiadds
jmp
in
aaa
dec
dec
fisttps
add
lods
fistpll
xor
lret
mov
stos
sbb
sub
pop
test
call
jnp
test
or
xor
push
repz
jl
mov
xchg
lret
and
inc
dec
mov
xchg
dec
les
pop
dec
mull
mov
ret
je
cmp
in
lds
icebp
mov
xlat
mov
pop
sub
loop
stos
int
pop
jecxz
loope
jmp
loope
sbb
insl
push
repz
mov
imul
test
jnp
stos
jecxz
aas
dec
imul
xor
arpl
decl
push
pop
aas
push
dec
jmp
jnp
fildl
les
pop
mov
pop
push
imul
cmp
lahf
fnstsw
shll
popf
sbb
out
fdivl
or
aaa
dec
mov
xchg
div
sahf
stos
mov
insl
mov
mov
inc
sub
cmp
ret
test
std
call
aam
std
xchg
sarl
xchg
mov
in
mov
aas
mov
inc
jo
popf
dec
xchg
arpl
cltd
hlt
pop
lods
addr16
inc
jge
testl
test
clc
call
sub
lds
aas
xchg
daa
xor
pusha
bound
stos
pop
push
mov
in
outsl
ja
lcall
dec
idiv
ret
mov
mov
ret
dec
movsb
mov
mov
add
push
pop
jmp
jne
bound
xchg
loop
outsl
inc
cmpsl
iret
ret
dec
leave
fwait
xchg
add
loop
cmp
jne
mov
sti
or
jno
xor
or
mov
aaa
lea
hlt
ret
jecxz
test
div
jecxz
clc
lock
andb
inc
dec
fs
dec
aam
fistl
and
adc
pop
popa
out
pop
and
xchg
pop
jb
inc
outsb
add
addl
pop
inc
cmc
ds
mov
add
adc
cmp
dec
sub
dec
pop
and
inc
jno
cmp
outsl
imul
das
orl
out
imul
xor
dec
gs
dec
cltd
fsubrl
inc
ss
and
push
test
cmp
ret
mov
adc
mov
mov
adc
lret
ss
sub
and
cmp
jae
dec
imul
sbb
movsb
xlat
jge
or
or
subb
add
and
and
xchg
ret
cltd
adcl
mov
and
in
ljmp
xchg
in
mov
sub
sti
pop
in
xrelease
mov
mov
fbstp
addr16
mov
jno
cmp
xor
push
inc
lds
leave
je
fsubl
inc
pop
add
std
imul
scas
int3
lret
dec
into
movl
aad
mov
in
lock
mov
xor
aam
cmp
sbb
jle
mov
mov
out
cmovp
ret
push
push
roll
int
sub
test
lret
or
popf
jecxz
sbb
movsl
sub
test
lcall
jecxz
into
pop
push
fldenv
insl
subl
inc
in
adc
aaa
pop
pop
fwait
dec
repz
inc
jnp
insl
or
or
cmp
shl
test
jge
mov
xor
leave
and
insl
pop
xor
or
push
out
fdivr
cmc
loopne
push
das
xchg
shlb
lret
dec
push
leave
pop
addr16
in
stc
into
mov
or
cltd
lods
mov
xor
ja
xor
mov
fsubrl
add
xchg
into
lods
out
in
cmpsb
gs
mov
pop
frstor
and
rcll
dec
inc
mov
sbb
je
cmp
cmp
std
test
push
inc
dec
inc
and
jmp
cwtl
dec
dec
outsw
leave
mov
lea
pop
xor
adc
xlat
pop
into
icebp
xchg
insl
or
loop
add
inc
cmp
and
addr16
push
xchg
jmp
rcl
jns
xchg
jne
fistps
xor
scas
push
enter
jmp
sbb
addl
lahf
in
xor
popf
hlt
inc
sub
and
or
mov
fld
ret
flds
push
lret
imul
pop
adc
mov
mov
xchg
aad
sub
js
push
adc
jmp
sti
xor
sub
lret
inc
ficoml
out
push
decb
inc
inc
jecxz
outsl
jno
push
cmp
mov
jp
jp
daa
and
and
inc
hlt
push
or
push
pop
arpl
jno
fistps
dec
dec
jns
cmp
test
idiv
or
push
js
pop
or
mov
pop
testl
pop
pop
ficoms
ret
popa
mov
out
jb
dec
mov
popa
das
mov
movsb
jge
mov
xchg
and
das
mov
rol
xor
loopne
lods
test
js
repnz
shll
lret
aam
imul
xor
pop
repnz
add
inc
stos
out
xor
xor
lea
ds
shl
xchg
lret
aas
mov
inc
arpl
sub
cmp
xchg
outsb
scas
jg
jmp
repz
jecxz
in
sbb
jg
sbb
mov
rcl
dec
repz
pop
jnp,pn
bound
neg
test
adc
jg
loop
stos
mov
inc
shl
repz
repnz
rcrb
orb
orl
ds
andb
cmp
add
lds
push
rclb
mov
and
into
in
rorl
cmp
cmpsb
mulb
test
in
dec
mov
push
mov
sub
rcrl
adc
mov
in
test
int3
cs
add
in
mov
in
out
push
xor
pusha
jmp
aas
aam
pop
int
or
add
lret
fistpll
shrl
enter
mov
push
inc
fs
lds
outsl
aas
cs
xchg
mov
pop
inc
add
dec
cmpsb
ret
data16
lods
mov
mov
mov
xchg
xor
push
in
cmp
repnz
add
sahf
dec
inc
or
xchg
sub
mov
push
and
shll
xchg
dec
fimuls
roll
xor
fistpll
pop
jae
and
sbb
mov
les
mov
dec
sbb
jle
jne
jp
adc
fwait
sbb
repz
int3
cli
sbb
sbb
push
and
and
insl
adcl
out
out
xchg
fistl
push
hlt
repz
and
movb
inc
rcl
aas
hlt
aad
loop
inc
or
in
fimull
jmp
xchg
xchg
push
rorl
rol
sub
inc
popf
dec
rorl
movsw
mov
nop
cmpsl
xchg
dec
fcoml
mov
xor
andb
lcall
sbb
cmpsl
pop
scas
loop
loop
mov
xlat
jle
jbe
xor
imul
jmp
pop
addl
mov
xchg
xchg
js
mov
leave
test
inc
jmp
jns
das
jno
les
or
loope
mov
arpl
jecxz
dec
movsl
pop
push
jmp
enter
iret
mov
sbb
mov
xchg
stos
jecxz
stos
aas
cmpsl
mov
repz
lret
fistps
fbld
mov
pop
inc
adc
jecxz
std
int
dec
pop
leave
lea
sbb
dec
inc
mov
pop
popa
or
imul
aad
pop
cmc
cmp
pusha
stc
cmpsl
or
repz
xchg
xchg
clc
jg
jae
fmul
out
insb
mov
leave
push
imul
mov
mov
lock
imul
add
in
sub
movsb
testl
dec
mov
adc
mov
shlb
jmp
sbb
add
movl
mov
imul
test
sti
test
add
lock
lret
jnp
fistpl
imul
lods
enter
inc
mov
dec
and
addl
or
js
adc
xor
fcoml
and
pop
jl
test
movsl
ja
and
cmpsl
inc
push
xchg
dec
pop
inc
rorb
call
dec
xor
into
in
adc
fildll
adc
loope
pop
inc
mov
mov
mov
cwtl
iret
sub
add
imul
jmp
mov
xchg
lcall
jmp
push
stos
ret
cld
test
das
sti
lods
gs
pop
jecxz
ja
adc
xchg
dec
in
stos
sub
les
pop
inc
pop
sub
xchg
mov
mov
jmp
pop
mov
in
out
fldl2t
leave
pushw
repz
xchg
dec
xchg
dec
push
mov
out
stos
pop
inc
jecxz
ds
imul
pop
mov
xchg
adc
sub
test
sbb
and
cmp
imul
sbb
mov
sbb
iret
xor
pop
loopne
jae
lahf
aam
xor
cmp
xor
rol
mov
in
jmp
sti
push
xchg
lret
xchg
mov
sub
mov
sbb
leave
jecxz
imul
sbb
fcomi
addr16
jmp
scas
fildl
dec
xchg
daa
fstp
sub
ljmp
shr
inc
ja
xchg
jbe
mov
fisubrs
or
int3
ljmp
xchg
fdivrp
addr16
js
lret
lcall
pop
filds
out
adc
xor
addr16
and
in
aaa
push
and
cmpsl
jmp
add
mov
je
mov
iret
insl
sbb
mov
jne
xchg
or
add
sbb
mov
pop
in
fldl
std
push
sub
rcr
stos
in
sub
int
xchg
int
push
ret
fcmovnb
cmp
int
fcmovnu
xlat
add
int
scas
xchg
roll
sbb
fimuls
dec
sub
mov
mov
mov
dec
cmpsb
vpminub
ds
pop
pop
leave
lret
xchg
mov
pushf
daa
xor
push
jnp
fsubr
jecxz
ja
stos
in
pop
sar
lock
mov
jmp
sbb
push
dec
imul
push
lds
cli
popa
gs
xchg
fmul
mov
jo
es
adc
addr16
mov
ljmp
add
leave
pop
icebp
popf
mov
mov
or
lock
imul
mov
adc
ja
setno
mov
add
andl
enter
out
loope
imul
inc
adc
mov
arpl
fucomi
leave
imul
add
mov
xor
cmp
jecxz
cmp
psubusb
out
cmp
lock
pop
mov
xchg
dec
out
mov
mov
aam
out
scas
xchg
fcoml
subl
into
cmpsb
inc
in
ret
mov
lds
or
ja
cwtl
push
int
test
enter
dec
ss
push
push
inc
fmull
les
mov
pop
stos
daa
imul
es
loopne
in
push
repz
cltd
lods
xor
outsl
rep
jecxz
imul
lea
sbb
sbb
push
sub
test
dec
in
and
and
cmp
in
dec
test
xchg
fdivs
sub
xlat
imul
sbb
int3
loop
xchg
int
mov
arpl
push
push
decb
ss
add
mov
dec
in
mov
int
mov
pop
int
cltd
add
xchg
mov
inc
push
inc
add
fcompl
jl
adc
mov
jno
rcrb
nop
mov
jmp
xchg
lods
pop
mov
pop
leave
dec
mov
jno
ret
fcmove
mov
dec
dec
xchg
mov
inc
inc
repnz
mov
or
in
repz
inc
sti
mov
xchg
loope
cmp
add
pop
xchg
xchg
inc
fwait
ljmp
cld
inc
ljmp
inc
jmp
andl
xchg
mov
ljmp
rcr
pop
pop
les
or
pop
faddl
inc
cli
mov
rolb
xlat
cmp
xchg
push
adc
sub
into
repnz
dec
mov
mov
movsb
sbb
sahf
dec
mov
test
pop
mov
dec
sti
mov
imul
testl
inc
jg
iret
leave
sbb
pop
push
fstps
pop
xchg
into
scas
es
movsl
sub
lcall
pop
adc
xchg
aaa
lds
out
mov
pop
mov
or
xor
jnp
shll
jp
lret
daa
fstp
repnz
int3
sbb
and
leave
cmp
xchg
add
sti
mov
mov
out
and
stos
in
rcl
pop
inc
sub
fsubrl
mov
mov
xor
inc
fwait
int
dec
test
cmpl
jno
xchg
in
add
mov
pop
add
jno
cmp
inc
into
insl
out
out
push
mov
je
mov
arpl
js
mov
add
popf
lea
movsb
inc
lock
mov
fwait
ja
cmpl
jge
int
mov
fadd
addr16
imul
inc
dec
clc
cmp
jno
fmulp
shrb
mov
aas
mov
jecxz
cs
inc
mov
out
fsubr
jne
fwait
pop
movzbl
push
dec
mov
outsl
jnp
jle
int3
jno
pop
or
aam
out
loopne
shll
addr16
dec
in
das
cmpsl
fcompl
sbbb
mov
jecxz
gs
pop
xchg
push
out
inc
cwtl
stos
mov
xor
push
insb
lcall
sbb
out
mov
mov
lcall
das
mov
lock
xchg
out
and
sbb
xchg
or
aam
mov
pop
xchg
imul
fmulp
test
mov
jmp
cmpsb
jb
or
mov
test
insl
pushf
shlb
xor
lods
cmp
inc
add
call
push
stos
test
gs
mov
mov
in
imul
enter
mov
mov
std
push
xlat
repz
shr
push
and
fdivl
or
mov
mov
stos
inc
out
xor
dec
cmp
imul
or
test
ds
and
xchg
xor
sub
or
out
push
scas
pop
sar
jge
lret
pop
and
sub
loopne
mov
mov
cld
sti
mov
pop
loop
jmp
lcall
sbb
pop
and
rcl
mov
insb
inc
ljmp
mov
xchg
ss
mov
out
xchg
jge
mov
push
hlt
sub
aas
jo
in
pop
sub
mov
sub
push
roll
mov
xor
mov
pusha
lock
jge
pop
and
xor
inc
and
fdivrl
dec
cwtl
sub
xor
rorb
sbb
imul
ljmp
movl
sti
inc
push
xchg
test
orb
fldln2
jg
fs
sub
mov
push
js
mov
mov
push
mov
fistl
addr16
out
sub
sbb
cmp
out
or
fistpll
leave
mov
inc
aas
popf
add
dec
mov
xor
xor
add
pop
ret
scas
push
inc
in
cltd
cli
cltd
jge
test
add
filds
pop
push
push
jl
and
adc
dec
add
dec
jnp
fisubl
dec
insb
and
leave
push
inc
mov
sahf
insb
mov
inc
stos
jp
fmuls
jne
or
jbe
in
mov
add
fiaddl
mov
adc
pop
xorl
es
fwait
push
and
popa
sti
sbb
pop
imul
nop
push
mov
popa
ret
xor
sahf
mov
mov
dec
mov
ret
fwait
sub
mov
rorl
sti
jecxz
inc
dec
jmp
ljmp
sub
orl
sub
push
fmull
das
aam
mov
sub
fnstsw
pop
inc
jmp
loopne
mov
shll
push
and
jnp
dec
ret
xchg
push
dec
shll
sbb
daa
cmp
fwait
pop
mov
das
dec
sbb
ret
out
and
scas
test
push
pop
jecxz
push
sbbl
adcl
or
insb
inc
ret
int3
mov
lods
pop
pop
or
jno
pop
dec
inc
jb
icebp
pop
pop
mov
add
faddl
and
dec
loop
loope
jmp
cmpsl
js
stos
xor
cli
loope
cmp
xchg
sub
jp
in
push
shrl
sbb
outsl
ljmp
or
cli
mov
roll
cmp
inc
mov
inc
xlat
aam
scas
insl
lret
in
adc
mov
sub
mov
shrl
mov
cltd
jb
pop
dec
ds
bound
lret
enter
ss
cli
ss
ret
ljmp
jbe
cmp
cmp
jne
inc
jns
fsubrs
ljmp
pop
outsl
dec
fs
iret
jno
test
fwait
mov
les
in
outsl
or
push
hlt
add
incb
and
mov
dec
pop
aam
popa
xchg
fsubr
ret
mov
fwait
xchg
push
adc
fsub
xchg
xor
popf
mov
sub
data16
in
add
insl
xor
ret
mov
and
xchg
rcll
cmp
jmp
les
dec
fadds
daa
xchg
push
dec
test
jmp
xchg
jmp
jp,pn
pop
in
xor
pop
fmulp
mov
enter
dec
leave
push
and
pop
jge
repz
ljmp
mov
pop
pop
mov
jecxz
or
inc
lods
mov
jl
iret
fidivl
mov
ljmp
test
and
cmpsb
and
push
mov
jle
pop
dec
cld
fildll
xor
mov
mov
dec
push
jae
into
pop
xchg
adc
cmpsl
cmp
inc
or
xlat
cmp
push
ret
repz
test
popa
sbb
fisttpll
push
jnp
addl
movsl
dec
xchg
add
or
push
inc
ljmp
sarl
loope
out
mov
dec
jmp
dec
pusha
popa
pop
imul
in
enter
int3
push
testb
iret
out
and
xor
xor
jbe
lret
and
cmp
in
test
and
rcll
dec
outsl
ss
repnz
sbb
add
frstor
aam
jne
imulb
mov
jge
fwait
push
test
addr16
sbb
fnstcw
jmp
push
fwait
dec
jecxz
add
mov
pop
xchg
add
pop
sbb
sub
add
sarl
aas
sbb
call
pop
stos
or
fcom
cvtpi2ps
pop
out
and
pop
gs
pop
xchg
push
sbb
cmp
jecxz
ljmp
enter
mov
push
lds
scas
fucomp
sar
sbb
iret
push
sti
ja
ds
or
pop
jl
push
pop
mov
popa
insl
sub
mov
sbb
mov
sti
negl
aam
cmp
cmp
pop
shll
ror
fsubrs
repz
movq
jecxz
dec
fcompl
add
jmp
mov
into
enter
cmp
jp
sub
ret
mov
outsl
es
mov
daa
adc
push
cmp
sbb
loopw
mov
fbld
aam
xchg
out
lods
xchg
test
push
mov
fsub
cs
es
pop
gs
aad
sbb
outsl
and
mov
int3
jecxz
cmp
repz
ret
repz
push
cltd
insb
mov
xorb
fsqrt
sbb
inc
pop
pop
dec
outsb
call
mov
shrl
out
mov
mov
iret
imul
jecxz
nop
es
jge
adc
mov
inc
es
mov
sbb
cmp
mov
lcall
seto
mov
cmpl
shll
inc
cmp
jae
js
in
js
pminsw
mov
xchg
and
imul
in
jae
js
dec
jae
jp
testb
mov
or
fdivrp
mov
sbb
cmc
jae
or
push
arpl
add
pop
fcompl
movsl
push
lcall
mov
fsubr
sbb
aas
push
ljmp
mov
stc
push
stos
xor
jmp
mov
xchg
mov
sub
flds
push
pop
push
push
inc
xchg
pop
mov
jae
xor
sbb
fcompl
sbb
lds
and
and
faddl
lods
mov
push
rcll
cs
cmp
imul
jae
call
mov
pop
xor
fnstsw
jb
leave
aas
ret
xor
enter
xor
inc
daa
or
pusha
pop
lret
outsl
xor
inc
js
cs
in
jecxz
xchg
jnp
sahf
jno
dec
xor
mov
out
or
sahf
dec
mov
sti
int
jecxz
xlat
pop
jno
rcrl
pop
xor
stos
mov
adc
inc
insb
and
int3
fsqrt
mov
fildll
icebp
sub
cmc
sbb
js
mov
xchg
sbb
aam
les
cltd
ret
dec
and
jnp
test
in
negl
pop
adc
mov
inc
ret
jg
push
pop
dec
imul
push
pop
pop
mov
inc
or
rolb
jns
outsl
adc
adcl
jmp
es
aaa
stc
or
xor
jp
or
sub
or
mov
mov
dec
or
dec
inc
add
fidivrs
dec
outsl
inc
ret
xor
fdivrs
or
inc
mov
insl
add
fisttpl
loope
push
gs
push
or
ret
mov
lock
inc
fistl
xchg
mov
jno
mov
out
loop
push
or
cmp
xchg
rcrl
ret
inc
mov
push
pop
xor
inc
and
dec
in
sbb
xlat
rcll
inc
fcompl
dec
lea
pop
add
ret
dec
mov
push
dec
daa
dec
sub
push
xchg
cltd
test
cmpl
jne
mov
mov
jnp
aaa
fwait
js
mov
cmp
push
fcom
jp
pop
cmp
adc
out
dec
stos
or
mov
or
xorl
xchg
mov
fsub
in
cld
fdivrl
aad
insl
hlt
fistpl
push
out
mov
inc
jmp
push
jmp
int
fdivl
add
push
xor
iret
stos
push
mov
xor
popa
insl
cltd
imul
popa
shr
dec
mov
xor
gs
sahf
loope
test
adc
pop
push
loopne
cmpsb
adc
cmpb
stos
cmp
fbld
mov
cmpl
sub
dec
xor
loopne
sub
lea
pop
sbb
push
cmpsl
sbb
xlat
mov
lahf
leave
insl
testl
fidivl
xchg
in
pop
or
rorb
mov
shrb
sbb
imul
fmuls
xlat
sbb
iret
and
dec
push
mov
adc
sub
pop
aad
mov
lahf
push
jnp
aas
xchg
add
sbb
sub
rcrl
or
lds
dec
mov
test
pop
pop
sarb
xchg
or
dec
aas
inc
add
xchg
into
xchg
imul
popa
fisubrs
inc
dec
test
and
cmp
mov
dec
pop
push
das
test
mov
addr16
fdivrl
js
into
mov
add
pop
xchg
fisubrl
aaa
mov
insl
fwait
xchg
mov
mov
sub
push
jmp
iret
rorl
fildl
cld
mov
sbb
inc
jns
ret
cmpsb
push
push
mov
test
push
repnz
out
fisubrs
pop
jb
cwtl
icebp
fcmovb
jmp
add
test
ret
test
les
xchg
jmp
loop
shl
fcomps
mov
ret
cmp
mov
fsts
inc
out
fsubl
into
insl
xchg
fsts
jmp
sbb
lds
cmpsb
aad
sahf
les
inc
mov
xchg
std
and
std
pop
lods
shl
xchg
sti
fcompl
lods
adc
insl
add
pop
fisttpll
xchg
fwait
mov
fcompl
add
inc
mov
mov
dec
mov
test
lods
jecxz
fistpl
fstpl
mov
movsl
jle
pop
jne
inc
ret
andps
shrl
adc
lods
movsl
test
mov
xchg
inc
dec
out
adc
ss
outsl
jecxz
jbe
call
lock
push
xor
xchg
test
pop
xor
subl
or
sub
imul
out
in
fninit
movsl
movsb
add
sbb
data16
pop
dec
or
push
scas
stos
xor
cltd
inc
lock
sbbl
call
lea
in
das
test
xchg
add
stos
ljmp
push
and
pop
mov
test
pop
ret
xor
mov
cltd
int3
les
leave
xchg
cwtl
push
push
in
xchg
sub
imul
sbb
jmp
insl
jns
dec
rcl
test
sub
imul
inc
insb
mov
jecxz
push
addb
add
adc
and
popf
enter
xor
aaa
cmpsl
adc
jns
adc
xlat
fistpl
out
push
push
xor
xor
mov
ror
popa
aam
or
xchg
lret
fiadds
xchg
in
addr16
pop
negl
inc
sbb
xchg
out
lods
scas
fstpt
mov
dec
ret
inc
out
xor
loop
sub
shrb
sti
popa
sbb
fnsave
orl
mov
cltd
inc
mov
jle
js
ljmp
les
inc
push
mov
jg
sbb
inc
push
orl
mov
loop
jp
aad
xor
lods
stc
fcomi
in
mov
test
dec
test
mov
jecxz
insl
mov
pop
mov
mov
mov
pop
ss
pop
jl
arpl
in
jnp
adcb
test
inc
jl
sub
jmp
pusha
or
fwait
mov
imul
sbb
std
push
mov
stos
aad
jns
ffree
push
dec
push
mov
das
inc
or
call
insl
into
das
sbb
xchg
push
ret
arpl
into
shl
xchg
aam
mov
popa
fsubl
sti
jmp
sub
mov
or
movl
push
xor
rcrl
testl
das
cmpsl
pop
adc
jb
sbb
jl
mov
jae
xchg
in
xor
jmp
sti
jns
or
loop
data16
inc
mov
sub
es
inc
sahf
stos
jo
push
mov
loopne
test
xchg
out
enter
jbe
ficoml
fcoms
adc
imull
xchg
outsl
repz
adc
fdivl
adc
test
insb
or
inc
aad
mov
cltd
insb
gs
xchg
jmp
out
jns
pop
xchg
mov
jl
mov
push
insb
shlb
aam
fisttpl
jecxz
mov
ljmp
cld
push
or
popf
inc
mov
loopne
mov
pusha
rorl
gs
repz
daa
repz
aad
fstpt
xchg
jl
subb
int3
push
cltd
ret
ret
xlat
and
ja
outsb
imul
push
mov
or
bound
xchg
sub
rol
hlt
jb
test
mov
jle
insl
xchg
stos
test
xchg
fists
mov
jmp
xlat
push
cmpsb
js
jno
cmp
enter
pop
jl
ret
rcrb
pop
fsub
pop
lcall
sbb
jg
jno
fcomip
pop
pop
daa
dec
pushf
pop
add
xchg
adc
lahf
fs
test
mov
leave
add
or
mov
inc
in
es
add
stos
pop
stos
out
mov
outsl
insb
dec
inc
mov
pop
loope
data16
pop
inc
shrl
xchg
mov
les
pop
pop
push
add
shll
push
push
shlb
cmp
adc
mov
xchg
aam
test
cmp
js
scas
mov
push
sbb
mulb
mov
push
cs
push
sti
and
gs
int3
in
xor
mov
jp
or
lods
mulb
icebp
push
pop
or
and
xlat
mov
dec
or
mov
push
dec
fs
mov
xchg
repz
inc
mov
insl
cmp
popf
fucomi
out
pop
shrl
das
sub
and
into
pop
cmpb
pushf
dec
dec
ficoms
cmp
outsl
cmp
orl
aas
repz
jmp
repz
sbb
sarl
dec
iret
sub
jmp
ret
xchg
lcall
sbb
les
and
cmpsl
sub
mov
jns
push
or
ret
addr16
fstp
out
popf
fnstenv
xor
sbb
pop
data16
dec
mov
lcall
adc
lret
mov
mov
sbb
iret
mov
jmp
mov
jb
push
jb
or
dec
pop
jo
xor
dec
pop
fwait
and
mov
pop
fisttps
ret
insl
in
sub
aaa
add
fstl
inc
cmp
add
push
gs
sbb
stos
or
out
sti
dec
jl
pop
mov
sbbl
int
ret
dec
js
rcl
xchg
je
pop
in
leave
test
test
flds
sbb
mov
mov
pop
test
pop
mov
mov
xlat
mov
mov
stos
ret
fbstp
sub
lret
mov
xor
bound
lods
faddl
xor
jmp
mov
std
push
jno
mov
mov
bound
or
idiv
jnp
cmp
insl
lret
sub
shr
fcoml
ret
lea
lret
mov
inc
sarl
dec
mov
in
fwait
or
ljmp
jnp
jecxz
jle
inc
mov
and
adcb
inc
jle
out
or
mov
rcl
mov
xchg
pop
shlb
or
int3
ds
and
or
push
in
outsl
push
sti
call
in
sub
jns
mov
movsb
sub
mov
mov
jmp
jae
add
repz
inc
stos
mov
mov
lahf
sbb
xchg
insl
mov
ljmp
adc
mov
mov
cmp
das
pop
sbb
jmp
xor
scas
mov
int3
add
xchg
test
mov
movsl
xchg
mov
fs
daa
fldenv
jle
mov
loope
fwait
aas
das
dec
stos
pop
mov
jae
jmp
lea
popa
gs
pop
xor
out
into
daa
mov
xor
call
dec
xchg
xor
jae
jbe
mov
or
or
and
in
shrl
cli
mov
mov
xchg
repnz
call
mov
xchg
pop
or
inc
cmp
or
fs
sbb
bound
cmp
cld
ret
mov
xchg
xlat
aas
inc
fsub
push
pop
in
lret
cli
sub
mov
mov
popa
fcoml
mov
addr16
or
rorl
dec
sub
adc
cmp
or
jno
add
mov
jnp
jg
int
sti
push
int
xchg
mov
pop
or
fsubrl
xor
sbb
add
cmp
xor
dec
adc
or
loop
jp
mov
sbb
movsb
movsl
pop
mov
xrelease
dec
aas
fwait
sub
cmp
mov
ret
xor
out
cmpsb
jbe
sbb
cltd
loopne
adc
push
outsl
cs
ds
imul
mov
inc
mov
jle
mov
inc
pop
roll
or
inc
xchg
test
int3
ss
and
sti
mov
ds
faddl
les
cmpsb
mov
cmp
test
mov
or
call
jmp
cmp
insb
push
into
lods
dec
or
ja
or
enter
mov
add
cmp
cmp
fistl
mov
in
cmpsl
jl
fcmovnu
inc
loop
ficompl
inc
testb
fnstsw
xchg
test
push
add
test
stos
xor
ljmp
cwtl
out
and
jne
ljmp
xor
and
repnz
mov
lods
ja
sbb
arpl
test
imul
jmp
movsl
fadd
add
inc
add
adc
ret
rcrl
jno
pop
mov
imul
push
adc
shl
gs
ja
mov
pop
in
aas
test
insb
push
mov
fwait
leave
dec
das
addl
outsb
push
out
pop
data16
les
adc
sarl
outsl
popa
mov
push
jmp
dec
repz
jle
push
fs
inc
lret
imul
mov
pop
mov
andb
jmp
jecxz
and
loopne
push
mov
pop
push
popa
out
movsb
shlb
inc
push
mov
xor
lea
repz
rol
stc
dec
jne
pop
jns
adc
and
movsb
jge
mov
rolb
pop
add
adc
mov
sti
or
xchg
outsl
sub
ljmp
loopne
test
scas
les
mov
adc
shl
sub
push
stos
jle
sbb
cltd
cmpsl
enter
mov
cmp
mov
mov
xor
mov
jb
out
sub
fcom
enter
enter
xor
pop
aam
dec
int3
add
xchg
sbb
xlat
sub
in
sbb
stos
pop
add
sub
sti
dec
sarb
jl
mov
pop
pop
and
mov
cmp
xchg
and
pushl
jo
sar
inc
jg
mov
shr
jl
mov
jmp
xor
dec
stos
push
adc
shr
out
cmpsl
xchg
rcl
test
movsb
rcll
leave
dec
mov
inc
adc
ret
sbb
pop
inc
push
test
pop
out
sbb
hlt
mov
xlat
rcrb
aas
int3
in
mov
outsl
fyl2x
ds
aad
setle
push
lds
push
lahf
xchg
jecxz
int3
insb
sahf
dec
push
sarl
dec
xorl
dec
sbb
fistpl
dec
test
addl
push
inc
lret
or
sub
fsubs
mov
cmp
loope
pop
and
fidivrl
mov
inc
push
sbb
in
int
sub
push
mov
dec
mov
outsl
dec
xor
movsl
arpl
mov
incb
mov
pop
pop
in
add
pop
xor
mov
add
cwtl
jo
add
test
aas
into
push
jae
cmpsl
out
ret
mull
mov
add
push
inc
fstpl
stos
jne
ret
das
andnps
xchg
mov
adc
inc
mov
les
scas
or
xor
aad
in
jmp
lods
popf
loopne
inc
call
mov
push
gs
fwait
jecxz
fdivrl
fwait
int3
dec
mov
repz
lcall
mov
mov
xor
imul
ret
test
popa
push
inc
fwait
sbb
adc
xor
sbb
cli
adc
sub
push
mov
fbld
cmc
dec
es
xchg
push
outsl
lock
out
xlat
push
or
loopne
popf
fsubl
pusha
adc
arpl
jl
cmp
sub
out
leave
inc
cld
dec
add
and
das
xchg
fiaddl
sahf
aam
xor
ret
mov
sti
and
xchg
ljmp
pop
fisttpl
pop
add
lods
fimull
hlt
xor
pop
ss
roll
sub
and
xchg
ret
out
dec
inc
mov
out
adc
shlb
fadd
xchg
or
xchg
mov
cltd
add
mov
add
lret
shr
mov
aaa
div
in
mov
pop
xchg
mov
add
mov
fnstsw
mov
lea
ret
repnz
leave
mov
inc
mov
loop
insl
shll
imul
adcb
and
scas
mov
aaa
cmp
mov
pop
lods
mov
test
std
adc
xchg
mov
push
sub
and
add
pop
ret
pusha
aam
xorl
addb
shlb
xor
add
or
xor
rol
mov
jne
jl
sbb
push
or
inc
sub
inc
dec
call
sbb
test
daa
jne
mov
mov
pavgb
jno
outsl
out
push
pop
fs
xchg
repz
out
mov
std
adcl
jns
xor
mov
push
xor
mov
push
inc
imul
mov
cs
xor
sub
dec
out
test
xchg
stos
jmp
push
mov
test
lea
cmp
imul
inc
mov
ss
das
mov
xchg
jnp
lret
shrw
xlat
arpl
loope
dec
ret
ret
ret
test
xlat
das
cli
lret
dec
mov
dec
mov
or
jae
fs
aam
iret
pop
lret
out
lds
fsubrl
int3
mov
cmp
imul
popf
addl
leave
dec
aaa
pop
add
push
and
movsb
jle
xchg
or
inc
jno
inc
bound
sahf
add
out
or
or
lods
rol
ds
rol
or
in
pop
or
xchg
cld
lods
fcoml
push
or
fcmovnb
push
test
in
ret
sub
enter
add
rcr
xlat
mov
inc
dec
and
mov
jmp
aas
in
or
testl
sub
insl
das
mov
pop
repnz
outsl
in
test
sub
xor
sbb
xor
dec
push
ret
rcl
test
pop
pop
ds
adc
mov
cmp
xchg
ret
pop
pushf
inc
pop
xchg
aas
pop
and
jnp
or
repnz
pop
pop
or
cmp
xor
xor
fstps
cmpsl
xchg
fmull
mov
or
sti
hlt
pop
push
loope
fcoms
xor
lcall
nop
aam
psubsb
inc
xor
mov
pop
xchg
mov
push
je
imul
inc
dec
repnz
movsb
add
shll
ret
ljmp
xor
xor
mov
movsl
fistl
xor
ret
xchg
push
push
sub
push
push
sbb
mov
inc
push
mov
xchg
mov
pop
call
andl
cmpsb
mov
pop
mov
pop
push
add
aad
and
fsub
fwait
xor
xor
incb
cmp
add
out
imul
sbb
arpl
arpl
daa
cltd
jae
xor
mov
data16
cltd
push
pop
int
mov
or
mov
in
stc
dec
mov
xor
mov
lea
mov
add
fidivrs
dec
sub
sar
enter
mov
jmp
mov
fucomi
cli
and
pushf
add
mov
pop
repz
jecxz
fiadds
sti
imul
cmp
adc
jnp
les
rdpmc
cs
lea
and
std
out
ss
mov
aam
mov
fwait
mov
fsubl
fst
arpl
mov
cmp
adc
mov
subl
xor
jmp
repz
dec
ss
xor
shr
push
jecxz
jno
push
andl
inc
sti
arpl
out
pop
mov
out
out
cmc
es
jle
loope
cmpsb
cwtl
and
ret
fs
test
fwait
in
ficoms
jnp
test
mov
xor
mov
dec
mov
xor
or
imul
in
rcll
xor
pop
stos
jne
and
mov
xor
add
xor
mov
xor
jecxz
das
test
inc
add
and
mov
xchg
call
outsl
xchg
xlat
adc
jle
ret
sbb
push
or
mov
adc
pop
lock
sbb
pusha
push
call
lds
cltd
or
js
fsubrs
inc
adc
cmpsb
ss
sbb
push
sbb
sahf
mov
inc
sub
inc
sti
jno
and
mov
fwait
enter
sahf
fwait
mov
icebp
ja
jo
push
shlb
dec
shll
mov
mov
mov
leave
sbb
mov
jae
xchg
int
jmp
arpl
mov
aam
fildl
dec
rep
push
int
aas
out
inc
mov
mov
jmp
cs
cmp
cmp
rorb
rcr
and
leave
sbb
jecxz
mov
ret
clc
jecxz
in
push
out
movsl
and
lret
shll
shl
les
es
sub
sarb
insl
push
sbb
inc
inc
out
test
fisttps
push
cmp
les
xchg
xor
stos
movsb
fildl
and
inc
xchg
adc
pushf
jno
dec
repnz
fidivs
dec
outsl
into
pop
and
cmpsb
out
push
or
pop
dec
mov
jnp
dec
push
pop
jb
fnstsw
jg
xchg
pop
adc
cmpsb
into
repnz
stos
or
hlt
cmp
bound
cmpsl
mov
adc
insb
pop
or
repz
rorb
and
xchg
stos
jl
scas
test
inc
sar
jo
xchg
jno
scas
insl
jae
cmp
or
mov
mov
and
lea
fbld
jns
lds
inc
das
xor
vpaddq
jp
fdivs
jb
dec
lds
adc
mov
andl
js
bound
lods
test
mov
enter
ret
xchg
adc
pop
ret
mov
das
outsl
test
sti
imul
mov
jecxz
fsubrs
mov
outsb
mov
dec
cmp
inc
fdivs
mov
xchg
cwtl
xorb
rclb
enter
sti
dec
repz
pop
pop
popa
cmpl
jb
fdivrl
mov
and
mov
ja
cmc
xchg
xlat
dec
lret
xor
enter
sbb
pushl
addr16
add
jl
jnp
jmp
add
aad
xor
outsl
pop
mov
mov
lcall
cmp
or
dec
fists
xor
mul
mov
mov
mov
lock
shrl
imul
inc
dec
fadd
out
addr16
jp
pop
fs
mov
push
aam
mov
hlt
out
jecxz
mov
fcomip
frstor
fstpl
cmp
jmp
xlat
clc
in
lods
jmp
cli
fildll
fadd
in
sub
ret
cmp
cltd
outsb
sti
or
add
test
jmp
ljmp
jb
mov
xchg
fisttps
adc
sbb
aas
sti
out
xchg
inc
mov
mov
sub
jmp
mov
push
xchg
cmpsb
int
push
jle
sti
popf
jecxz
dec
xchg
fmull
adc
adc
jecxz
or
imul
sahf
sub
mov
in
int3
scas
loope
mov
fidivl
xchg
inc
movsb
pop
vpcmpgtw
sbb
fdivs
xor
jo
mov
andb
mov
ja
xor
adc
lds
xchg
pop
ja
jae
mov
test
push
test
mov
jmp
pop
int3
sbb
xchg
fwait
ret
int
sbb
mov
inc
lea
push
test
popa
popf
ret
out
sub
imul
dec
fwait
mov
add
inc
sbb
pusha
mov
xchg
loopne
mov
lods
repz
add
pop
daa
jle
fstps
and
in
jp
jnp
mov
mov
push
or
aaa
jb
lods
adc
mov
sub
cmp
pop
xchg
or
jbe
cwtl
fdiv
arpl
mov
movsl
leave
dec
mov
push
addl
xchg
xor
mov
pop
inc
lret
cli
pop
add
imul
addr16
dec
in
jbe
or
pop
xchg
fildl
jmp
push
jmp
mov
call
punpcklwd
mov
xchg
scas
cmpsl
xchg
fwait
js
jecxz
out
xorl
iret
out
stc
mov
adc
push
pop
xchg
jecxz
mov
int
lahf
insb
xchg
loope
sub
popf
dec
int
mov
sub
out
lea
stos
jmp
es
loopne
je
jmp
outsb
dec
cmp
lahf
inc
and
lods
scas
fldl
push
sub
imul
inc
pop
lahf
inc
call
repz
ja
pushf
dec
or
sbb
cmp
enter
ss
xchg
out
stc
enter
fdivrl
ret
jg
xchg
les
pop
scas
push
add
das
or
mov
xlat
in
xchg
cmp
ret
and
loopne
ss
mov
push
push
sub
cmp
cmc
pop
jecxz
inc
push
fcoml
pop
addr16
xchg
insb
sub
repnz
and
int
mov
fsubrl
mov
push
popa
sbb
or
xchg
xor
fwait
stos
inc
xor
push
fwait
pop
js
and
xchg
jns
mov
add
fsubp
cltd
pop
cmp
idivb
outsl
icebp
mov
xor
inc
mov
mov
and
ss
fs
add
mov
push
push
inc
cmp
incb
jmp
and
out
mov
or
jbe
lea
nop
in
testl
in
mov
rep
aam
dec
stos
rcl
cvtdq2ps
es
mov
mov
stos
add
cmpsl
ljmp
xchg
fcoms
inc
fwait
mov
rorb
icebp
inc
inc
sti
popa
sbb
cmp
dec
mov
inc
int
into
nop
loopne
mov
inc
mov
aaa
popf
add
out
dec
bound
andl
xor
test
add
rclb
lcall
stos
es
std
gs
sti
jae
jnp
jnp
mov
cs
test
insl
sbb
adc
lods
mov
adc
lea
arpl
dec
dec
scas
dec
push
jmp
cmpsb
sub
cwtl
mov
add
jle
jnp
or
push
mov
adc
data16
mov
pop
and
repnz
cmpb
sbb
fadd
in
sbb
pop
xor
dec
lock
sub
fiadds
xchg
rolb
popw
out
std
and
mov
fwait
stos
nop
aam
in
sahf
sbbl
std
inc
xchg
xchg
arpl
push
jecxz
sub
and
loopne
popa
mov
inc
aas
pop
popa
xchg
dec
lret
sub
hlt
fsubrp
xchg
aad
sar
lret
scas
push
insb
and
xor
leave
dec
or
sbb
loop
xchg
f2xm1
add
mov
add
lcall
inc
inc
pop
push
mov
test
outsb
push
pop
das
fimull
jb
cli
das
xchg
dec
inc
std
jnp
mov
data16
mov
gs
imul
inc
add
mov
and
insl
push
pop
or
popf
repz
dec
jbe
cmp
push
mov
fsubrl
xor
dec
sarl
and
dec
cli
mov
les
or
push
or
dec
pop
ja
dec
sbb
inc
push
insb
fidivrl
loopne
push
ja
lret
fstpt
jl
in
xor
and
inc
lret
mov
das
and
cwtl
xor
mov
pop
xchg
sub
add
push
push
adc
mov
ret
xor
push
xchg
gs
inc
add
es
shlb
mov
and
into
incb
pop
mov
push
adc
int
push
pop
and
cmp
std
imul
fnstcw
pop
ret
lret
gs
lods
fs
xchg
mov
int
decb
in
push
sbb
mov
sub
mov
push
xchg
leave
dec
xor
jno
in
cwtl
and
jmp
xchg
shll
imul
fldl
fsubl
in
sub
and
cltd
fwait
mov
rcl
daa
stc
mov
mov
pushf
pop
lahf
push
jecxz
jecxz
sbb
jmp
sub
or
dec
mov
shl
mov
lds
mov
adc
inc
jle
push
cltd
test
in
or
lret
and
xchg
gs
out
or
xor
sarb
ret
mov
stc
inc
fcoml
jge
call
rcrl
mov
scas
sub
sbb
jno
pusha
lds
inc
mov
inc
out
dec
fisttpl
arpl
mov
lcall
iret
jl
xor
xlat
int3
cs
push
pusha
jmp
xchg
sbb
mov
dec
ja
push
xchg
xchg
xchg
push
orb
repz
push
xchg
dec
daa
movb
xor
mov
mov
je
imul
adc
push
and
cs
aaa
jno
fiaddl
jnp
cmpsb
ffree
movsl
inc
mov
jns
lods
jmp
repz
xchg
in
fsubrl
sub
paddsw
test
sbb
jl
xchg
lods
hlt
insb
gs
push
mov
mov
fwait
into
fildl
push
sub
imul
cmpsb
gs
roll
mov
push
lahf
out
mov
adc
sub
enter
pop
shlb
adc
push
dec
cmp
sti
add
xor
jecxz
mov
and
scas
out
xlat
fcmove
mov
inc
lock
mov
arpl
mov
push
push
sbb
imul
mov
push
adc
rep
and
aas
shrl
xor
jb
or
xor
int3
hlt
pand
popa
adc
imul
cltd
movsl
push
jmp
push
pop
xor
into
fadds
frstor
std
loopne
inc
xchg
xlat
hlt
test
pop
vpsubsw
mov
mov
jnp
mov
inc
test
iret
lret
mov
ljmp
add
and
inc
add
ret
add
mov
imul
pusha
sbb
sub
cmpl
cltd
push
addr16
xchg
insb
jle
outsl
loopne
mov
imul
fnstcw
iret
mov
push
notl
fs
mov
pusha
mov
mov
dec
inc
lods
imul
sti
jl
cltd
xor
roll
in
jae
cmp
and
jno
call
rcr
mov
imul
jmp
inc
lea
out
jecxz
inc
rcr
lods
dec
jae
pop
sub
mov
or
ret
sbb
push
pop
int
fsubr
dec
pop
jle
mov
dec
sarl
mov
xchg
in
mov
mov
mov
sbb
mov
ret
pop
xor
push
xor
stos
sbb
pop
pop
xor
inc
jnp
jne
pop
fwait
scas
lahf
movsb
inc
dec
jl
filds
mov
xchg
jp
mov
movsb
insb
cmc
scas
mov
rol
adc
fldt
fstpl
insl
mov
push
jecxz
loope
dec
in
outsb
aaa
add
cltd
or
test
xor
inc
sub
fsubrp
sbb
push
xchg
mov
inc
and
bound
jmp
xlat
cmc
loopne
mov
or
jecxz
xor
imul
subl
fsubr
pop
xor
lcall
push
mov
xchg
fidivs
or
pop
ret
jg
test
pop
movsb
nopl
popa
cli
ret
loop
inc
dec
mov
inc
clc
inc
imul
arpl
stos
pop
push
xor
ja
or
pop
and
dec
or
imul
test
out
jae
mov
call
jmp
out
das
aas
ljmp
leave
pop
jnp
data16
xchg
or
xor
mov
push
aaa
mov
xchg
sub
sbb
gs
mov
lret
or
xchg
lods
jmp
mov
mov
dec
rolb
jnp
mov
mov
mov
iret
ret
jecxz
lea
cmp
scas
cltd
pop
scas
dec
push
jecxz
xor
out
ret
mov
fcmovb
xor
or
fisttpl
jmp
mov
call
divb
scas
lods
or
add
jo
jno
test
rolb
ss
repz
hlt
test
mov
aam
fwait
imul
sbb
push
mov
jg
dec
push
stos
jg
das
stos
in
push
push
out
jp
push
cs
push
cmpsb
popa
inc
jae
ds
lock
or
jb
dec
fwait
enter
das
ffree
sub
mov
bound
xchg
fisttps
lcall
pop
out
pop
rorb
sbb
adc
add
adcl
test
imul
xchg
adc
pop
enter
dec
das
mov
cltd
adc
aad
aam
lcall
fst
fistpll
fcmovbe
jecxz
fdiv
daa
sub
xchg
jno
push
stc
mov
jp
sahf
rorb
ficomps
add
add
mov
adc
addr16
mov
cli
add
inc
shrb
or
lods
sub
pop
ja
sahf
xchg
gs
frstor
xchg
out
mov
fildl
mov
adc
and
subl
int3
adc
or
cltd
and
inc
shrl
outsl
sub
in
dec
fdivrl
aam
arpl
dec
ss
push
shll
icebp
push
push
and
pop
aam
mov
ficoml
int
dec
cmc
jb
mov
jp
outsl
subl
movsb
lods
jle
fldl2e
jae
mov
sbb
mov
add
daa
xor
insb
sub
mov
jge
hlt
inc
jg
ret
push
outsb
out
lea
pop
jns
jge
jge
mov
fsubrl
sbb
dec
rclb
mov
cmpsb
rcr
jge
dec
addr16
int3
dec
cmp
in
xchg
stos
sub
loope
int
push
pop
leave
mov
inc
insl
jmp
into
dec
jecxz
notl
xchg
cmp
rcr
in
mov
bound
roll
outsb
pop
enter
and
ret
jns
xchg
div
shrb
jae
jmp
lods
push
lret
shlb
pop
jbe
daa
mov
int
mov
std
iret
pop
inc
lock
sub
vshufpd
jmp
add
ret
cmpsl
jmp
shr
loop
aam
rol
mov
jno,pn
outsl
mov
dec
sub
cmp
sti
sahf
dec
sub
cmpsl
push
orl
aad
lret
mov
cmc
and
inc
xchg
scas
test
stc
ret
push
in
pop
push
xchg
flds
push
dec
in
clc
mov
stc
out
dec
sbbl
mov
sub
faddl
push
adcl
test
outsb
sub
les
outsl
not
and
andl
leave
stc
lods
and
iret
xchg
stos
sbb
pop
and
pop
fimuls
adc
sub
dec
cmp
shll
out
sbb
inc
cmpsb
mov
das
out
mov
out
dec
dec
adc
stos
mov
xchg
xor
cmp
push
xlat
fdivl
stos
push
cmp
fdivl
out
or
insl
rcll
jge
add
and
mov
sti
push
and
sbb
cmp
xor
std
ret
sub
mov
jmp
out
out
inc
loop
fsubl
xchg
xlat
or
nop
cmc
xor
mov
fsts
mov
xchg
pmaxsw
dec
cmp
loop
int3
inc
mov
in
xchg
mov
int3
inc
xchg
inc
jg
stos
sti
sbb
or
roll
in
sbb
jnp
fmull
add
add
push
xor
push
stos
push
fcompl
insb
insl
sub
ja
lahf
xchg
bound
out
push
ljmp
mov
in
loop
mov
jno
sahf
icebp
xchg
lcall
loop
add
popf
xor
loope
out
pop
adc
inc
fmull
sarl
stos
aad
xor
dec
or
or
and
sub
cltd
sub
adc
nop
test
push
jno
mov
std
leave
repz
in
inc
aad
sbb
outsb
xor
fldl2t
fisubrl
call
rol
cmp
xorl
es
jge
or
mov
xor
test
dec
xchg
adc
pusha
mov
testb
daa
addr16
inc
pop
fbld
mov
repnz
sub
mov
pop
adc
or
lods
sbb
pop
sub
mov
das
stos
in
mov
inc
push
addl
insl
stc
mov
xor
iret
fscale
dec
int3
lcall
sbbl
xor
lahf
in
repnz
call
outsl
mov
fstpl
sub
add
xchg
jmp
mov
mov
push
sbb
sti
inc
jmp
andl
shr
sub
repz
mov
int
stos
push
dec
ss
andl
pop
sub
fidivl
popa
imull
mov
lods
inc
mov
mov
xor
xor
cmp
or
orl
mov
mov
mov
push
mov
sti
fcmovb
pop
push
cltd
mov
xchg
out
inc
dec
out
test
push
xlat
repz
sbb
push
hlt
std
xor
lea
mov
mov
test
clc
arpl
mov
stc
testl
xchg
rorb
pop
xchg
lock
add
xor
jl
jnp
stos
mov
cmpsb
dec
fsubl
mov
or
shrb
inc
dec
fwait
or
xchg
inc
enter
inc
ret
stos
in
push
scas
imul
push
jb
adc
andl
jecxz
imul
lds
pop
fidivrl
stos
mov
inc
pop
jecxz
sti
rep
dec
jmp
jecxz
inc
sti
je
das
out
xchg
xorb
adc
cwtl
pop
and
pop
xchg
dec
jne
ljmp
out
dec
jae
adc
std
and
cltd
cmpl
jns
cli
dec
decl
mov
sbb
mov
fwait
dec
push
mov
or
xchg
ret
mov
inc
dec
pop
mov
cmp
cmpsl
cmc
xchg
jno
mov
gs
sbb
jmp
add
cmp
popf
or
dec
mov
popl
int
push
outsb
es
jmp
ja
insl
mov
jecxz
leave
mov
out
es
xor
push
fistpll
shl
cmp
out
cmp
jg
xchg
sti
and
movsb
iret
mov
and
cltd
sub
and
repnz
outsl
dec
ljmp
jmp
mov
iret
jecxz
repz
dec
js
in
and
push
inc
xlat
sbb
daa
ret
adc
mov
mov
insb
push
rol
mov
xchg
test
leave
fld
inc
sub
fildl
call
dec
sub
mov
mov
call
das
icebp
xchg
jecxz
cmpsb
or
cs
lret
flds
jnp
aam
cs
jl
fistpll
ljmp
inc
fwait
daa
imul
popf
fcoms
jo
loopne
pop
rclb
in
ljmp
push
inc
sub
and
clc
fists
aad
std
cli
aad
push
xlat
mov
cwtl
aam
cmp
mov
mov
fimull
sbb
dec
xlat
imul
shrl
ss
pop
fsubr
call
or
bound
cli
adc
in
or
insl
clc
mov
or
add
in
out
int3
movsb
lods
mov
pop
and
add
call
scas
addr16
in
jl
out
lret
xchg
jmp
ret
xor
inc
dec
icebp
add
inc
fwait
inc
fsubr
out
mov
xchg
cmpsl
orl
cmp
mov
aaa
push
call
and
jecxz
mul
mov
jmp
xchg
jae
leave
in
ficoml
xchg
or
inc
popf
fstp
movl
fisubrl
jge
shll
les
lods
es
repz
leave
ss
cld
out
xlat
rcrl
pusha
popa
test
sbb
push
or
lret
pop
call
dec
sbb
and
loope
jne
or
fsubl
imul
jb
and
push
jbe
arpl
in
xor
xchg
xchg
push
data16
rorl
movl
inc
in
push
loop
fdiv
js
lock
outsl
dec
pop
mov
sub
movsb
or
lret
rorl
jno
negl
imul
push
out
out
ja
test
pop
and
push
sbb
mov
or
je
repz
scas
sar
mov
enter
adc
jle
or
mov
xchg
sub
imul
jno
mov
and
sub
test
dec
loopne
mov
sub
movsl
insb
or
ret
sbb
push
aam
inc
mov
call
stos
add
inc
fimuls
and
mov
mov
fstl
fildl
add
sub
add
ss
aaa
xor
adc
dec
pop
push
and
cmp
dec
fdivrs
js
inc
mov
push
dec
leave
pop
insb
ss
xor
pop
daa
lods
xchg
xor
push
jl
adc
scas
sub
pusha
es
cmpsb
sarb
cltd
sbb
imul
mov
pushf
dec
rcll
loopne
testl
mov
sbb
jnp
xchg
imul
popa
popf
pop
ljmp
repz
pop
aas
jae
ret
xor
adc
xchg
fcmovu
mov
ret
xor
dec
daa
lcall
fwait
mov
movsb
xor
or
outsb
sbb
xchg
mov
jmp
cli
movsl
sbb
sbbl
push
scas
test
outsl
mov
inc
cmp
push
sub
sub
ja
add
popa
fdivp
dec
fld
adc
xor
dec
insl
lret
int
dec
push
inc
mov
mov
push
or
mov
sarl
les
mov
je
rcll
pop
cwtl
jecxz
cmp
mov
daa
es
in
orb
jmp
dec
imul
fstp
ror
clc
and
mov
gs
fwait
push
and
pop
test
or
dec
add
out
aas
imul
insb
cmp
filds
int3
push
add
sub
cli
cmp
sub
sbb
insb
fwait
rcl
iret
cs
ficoml
inc
popa
cld
push
xchg
mov
in
fwait
sub
mov
hlt
test
sbb
int3
cmpsl
sahf
rcr
fxch
adc
int
mov
rorl
repnz
cli
outsb
popa
inc
xchg
fsubrl
mov
ljmp
xor
xor
mov
aam
or
or
mov
xor
insl
out
pop
imul
and
imul
out
sbb
stos
enter
lret
stc
call
push
in
bound
dec
jno
dec
add
or
fisttpll
lods
fadd
sub
and
jle
fcmovbe
xchg
popf
lcall
bound
mov
mov
fwait
scas
test
sahf
addr16
filds
int
sub
jmp
xchg
jmp
inc
cmp
mov
ret
bound
mov
ss
cli
into
fcmovb
jecxz
pusha
ss
gs
adc
sub
les
fbstp
notl
movsb
add
push
push
mov
rcrb
insb
cs
adc
mov
lret
mov
add
int3
jnp
frstpm(287
sbb
push
sbb
or
mov
addr16
ret
idivl
repz
insb
inc
push
rcll
mov
cmpsb
popf
dec
icebp
aaa
lret
insb
or
dec
mov
fsubrs
and
push
outsb
jb
push
leave
push
add
push
adc
cmp
inc
sbb
das
mov
aaa
dec
cmp
add
pop
xchg
mov
mov
leave
ds
push
gs
add
push
or
add
mov
ror
dec
sbb
xor
lds
cs
das
negl
clc
test
mov
in
adc
dec
jmp
fsubr
xchg
in
sti
sub
pop
mov
push
jl
test
sub
dec
jmp
jns
jae
push
cs
or
lcall
outsl
pop
insl
dec
mov
stos
dec
dec
movsl
pop
xor
push
cmp
xchg
mov
lret
mov
popa
mov
sbb
aam
into
imul
ja
jl
out
rcr
dec
xchg
and
test
add
hlt
loope
jecxz
xchg
setne
mov
rorl
xlat
aaa
xlat
adc
inc
nop
pop
sbb
lret
repz
pop
cmp
sub
in
jecxz
aad
icebp
mov
adc
xor
iret
or
xor
xor
push
xchg
xor
ret
lret
mov
mov
inc
popf
dec
mov
mov
std
mov
test
ficompl
jmp
mov
loopne
lahf
insl
mov
cmp
stc
jecxz
pop
inc
adc
jg
mov
push
leave
mov
push
cvtps2pd
jle
inc
aam
repnz
nop
add
pop
jb
push
xchg
sbb
adc
jnp
jae
sub
dec
push
aas
jecxz
repz
mov
pop
sub
mov
cmc
mov
outsb
xchg
in
adc
inc
aam
out
sub
mulb
scas
mov
adc
cmp
iret
psubsb
ja
mov
and
push
and
insl
movsl
sbb
pop
xor
fcompl
std
out
pop
lcall
das
fimull
inc
fistps
dec
and
das
rcr
mov
cmpsl
shrb
das
call
or
call
fcomps
mov
lods
sbb
repnz
arpl
pop
pop
and
ja
cmp
mov
push
rcrb
xchg
imul
cld
add
xor
ror
cmc
mov
push
stc
jecxz
jg
lcall
adc
shll
ss
mov
and
arpl
stos
pop
jnp
push
jae
shrl
ljmp
cmp
fcoml
jo
push
sbb
test
xor
arpl
ret
iret
sar
mov
and
test
ljmp
pop
add
into
inc
adc
pop
ja
jecxz
pop
fcmovb
jg
xor
shll
es
fnop
or
ss
lcall
jg
fcomi
fsubl
inc
lds
fs
inc
and
jg
or
inc
inc
fwait
mov
cmp
stc
cltd
add
ficomps
jp
push
in
inc
ret
mov
addr16
pop
push
or
fldl
sub
or
adc
inc
dec
movsl
mov
mov
les
pop
cs
jne
dec
addb
xor
dec
add
sti
pop
jmp
ret
jl
sbb
std
lock
cmc
push
jnp
and
lret
call
movsb
fisubl
push
push
cmpsl
imul
pop
sbb
out
shlb
inc
mov
out
es
pop
dec
idivb
icebp
push
popa
pop
mov
mov
shll
jecxz
add
gs
pop
fadd
sbb
mov
jmp
sbb
mov
lods
loope
fcoml
jo
xchg
sub
imul
fsubrs
cmp
andl
jnp
cmpsb
xchg
cmp
fildl
jne
and
mov
rcl
jmp
shlb
out
xchg
mov
in
dec
mov
leave
push
jecxz
jecxz
lcall
dec
pop
mov
mov
mov
sub
inc
sti
and
jb
lods
inc
jecxz
test
mov
sbb
xchg
inc
xchg
sub
mov
es
add
mov
add
dec
xor
scas
daa
subl
das
xor
sub
push
in
js
xchg
aas
pop
movb
lea
mov
je
cmc
inc
xor
les
and
xrelease
xor
leave
popf
leave
and
mov
mov
adc
rolb
pop
test
ds
xor
loopne
and
aam
and
pop
mov
sbb
fcompl
in
test
outsb
rorb
sbb
test
test
out
sbb
xlat
dec
fucomi
imul
and
mov
loopne
push
fwait
dec
mov
pop
mov
ljmp
data16
test
sub
aas
popf
cmp
push
ljmp
mov
mov
es
mov
dec
aam
dec
shlb
int3
enter
loopne
mov
pushf
cmpsb
push
lds
mov
mov
lds
sbb
cs
vcomisd
mov
icebp
pop
sbb
incl
ret
xchg
mov
enter
mov
lahf
cmp
push
adc
xor
nop
adc
sub
or
out
sub
pop
leave
test
call
inc
pop
sbb
sub
sub
mov
daa
loop
out
cmp
shll
mov
xchg
push
fcomps
cmp
inc
push
inc
cltd
xchg
add
subl
aam
int
and
and
add
pop
jg
jp
cli
or
mov
scas
out
mov
push
or
xchg
sbb
add
rcll
and
xor
cmp
and
int3
sbb
jmp
repz
andl
pusha
push
or
popa
mov
sbb
push
cmp
in
dec
and
rep
xchg
inc
loope
outsl
and
sub
je
addl
test
jecxz
hlt
mov
push
pop
mov
fists
icebp
sbb
cmp
xor
mov
out
jnp
mov
cmpsb
add
leave
leave
mov
cmp
pusha
ffree
mov
push
cmp
ljmp
mulb
sbb
and
mov
dec
dec
mov
sbb
cmc
fistps
lea
sbb
and
aaa
enter
insl
loope
sbb
jle
jne
mov
xor
dec
rcrb
xor
icebp
popa
ret
and
mov
ljmp
hlt
pop
cltd
test
scas
push
repnz
repz
mov
jge
xor
jb
out
dec
add
es
mov
jns
sub
fisttps
repz
sti
pop
sub
dec
mul
and
cwtl
mov
lock
cli
pop
sti
in
fsubr
xchg
push
inc
out
sarl
sbb
mov
jg
test
xor
add
and
pop
inc
sbb
cltd
pop
hlt
cmp
jge
adcb
sub
xor
popa
pop
xchg
fistps
jmp
mov
jae
aam
xchg
add
add
adc
and
js
loopne
leave
addr16
xchg
mov
hlt
push
imul
mov
leave
sbb
int3
jl
jl
scas
pop
ds
addb
mov
repz
fisttpll
lods
sub
out
dec
pusha
push
cmpsb
fnstcw
das
loope
lret
inc
sahf
aaa
push
rcrl
dec
pop
cmp
orl
jnp
cmpsl
cmp
push
dec
cli
in
mov
out
call
mov
cmpsl
and
imul
in
repz
out
aad
xchg
mov
xchg
cmp
sub
jnp
int
test
dec
jl
mov
or
push
mov
stc
shll
lcall
mov
rcll
xor
pop
aaa
and
and
xchg
dec
lcall
aaa
ss
aam
mov
aad
cmc
mov
pop
dec
movsb
and
pop
xlat
in
sub
push
inc
in
pop
fucomip
stos
je
xchg
mov
xchg
test
jecxz
cmp
aad
fdivrs
xchg
mov
xor
iret
pop
pop
adc
xchg
lds
xor
fcoml
inc
lds
das
pop
test
aad
aam
outsb
ret
popf
push
pop
daa
das
cmp
add
in
pop
les
and
cmpsb
xchg
leave
sbb
cmpl
and
mov
xchg
xor
mov
pushf
dec
xchg
pop
jnp
lock
xlat
fldt
add
in
jecxz
cs
dec
or
jecxz
mov
cmp
push
subl
dec
pop
loopne
ljmp
fsubl
shr
pop
or
push
dec
or
sbb
dec
das
fst
dec
xor
jl
pop
mov
sbb
cmp
fldcw
push
das
sti
push
lcall
cwtl
fidivl
push
xchg
out
gs
nop
mov
pop
add
nop
lods
dec
enter
in
fucomi
add
mov
loope
stos
ss
div
not
push
int
leave
insb
nop
dec
fildll
addl
sbb
cmpsb
call
and
je
cmpsl
sti
lds
xchg
sbb
nop
lods
aam
aam
xor
xchg
jmp
loop
insl
shll
dec
dec
leave
outsl
fsubs
dec
jl
ret
and
xor
rorb
out
pop
popa
mov
and
jo
lock
pop
sbb
xor
outsb
pop
add
test
xchg
cmp
mov
imul
lahf
push
sti
mov
ret
jp
pop
cs
aam
pop
out
sbb
dec
jae
loopne
outsl
jecxz
inc
pop
hlt
add
enter
insb
sub
int3
dec
xor
lea
cvtpi2ps
gs
fadds
jl
andb
shlb
mov
pop
jmp
xor
inc
sub
add
dec
dec
das
push
push
add
push
cli
push
aam
dec
xor
insl
in
icebp
or
int
mov
ljmp
loope
bound
inc
xchg
lods
enter
xor
or
insl
aam
insl
dec
mov
pop
jg
daa
mov
fmull
cs
lcall
imul
scas
push
lods
ficoms
pop
adc
dec
pushl
and
test
pop
pusha
push
dec
mov
pop
into
xor
negb
and
add
inc
inc
cli
jmp
ret
in
movsl
fcoml
arpl
jnp
decb
jmp
ljmp
das
sub
inc
mov
xchg
cmp
pop
add
pop
lea
mov
cld
scas
repz
mov
sarb
push
test
fcmovbe
cmpsl
xchg
inc
std
push
and
mov
jge
jmp
dec
scas
popa
aam
sub
xor
std
cmp
and
das
fdivrs
fmuls
jbe
les
dec
cmc
pushf
pop
mov
aas
mov
sub
ja
aaa
jb
jge
xchg
jp
imul
sub
sbb
mov
fsubs
in
mov
or
mov
loop
or
and
jae
lods
sbb
fdivrl
add
jns
and
popa
setae
or
inc
jecxz
fidivl
lock
xchg
lods
punpckhwd
insb
jg
jl
add
stos
mov
cmp
add
stos
mov
subl
sti
fs
lcall
push
aas
mov
and
jne
fisttpl
mov
stos
dec
andb
xchg
je
adc
dec
mov
loopne
out
sbb
cltd
jmp
stos
cmp
sti
cmp
clc
dec
das
xchg
mov
and
adc
sub
or
repz
fdivrs
loopne
lods
movsb
xchg
pop
inc
push
mov
sbb
jecxz
mov
cmp
out
pop
inc
pop
dec
xor
lea
iret
pop
insb
push
mov
sbb
into
cmp
mov
pushf
and
dec
ss
in
push
mov
mov
aas
mov
pop
in
sub
cmpsb
add
cltd
pop
mov
mov
mov
das
mov
test
out
mov
movsb
cs
xchg
inc
pop
cli
in
les
mov
add
cli
mulb
cmp
fiadds
repnz
cli
jo
mov
popa
push
repz
out
push
std
and
inc
lods
mov
leave
dec
push
dec
insb
xlat
call
push
jg
and
and
fsubr
cmp
dec
xchg
and
insl
repz
movsb
daa
push
rep
inc
cwtl
cmpsl
scas
dec
cmp
fisttpll
sub
jge
loope
add
mov
inc
add
sub
push
lret
into
add
les
popa
pusha
dec
push
mov
lods
pop
push
mov
es
mov
imul
daa
mov
or
leave
daa
sub
cmp
lret
sub
dec
sbb
xor
out
test
push
sbb
movsb
cmpsl
mov
ss
outsl
or
fwait
cmp
repz
std
ja
cmovae
pop
inc
inc
jmp
sarb
and
stos
in
gs
or
mov
add
pop
dec
cmpsl
mov
xchg
or
andl
shrb
cmp
pop
fimuls
loop
mov
adcl
push
cs
lds
addr16
jle
pop
sbb
notb
mov
or
clc
mov
adc
pop
imul
push
je
push
jp
mov
xchg
xchg
sarb
sarb
push
sbb
mov
inc
enter
pop
inc
push
imul
sbb
jmp
inc
repz
imul
aas
mov
rcr
mov
cmp
sub
cmc
sti
sarl
and
cmp
mov
das
movsb
das
aam
movl
pop
sbb
mov
lods
rol
mov
int
insb
fisubl
inc
jg
cltd
and
adc
push
rcll
xchg
cmp
out
push
xchg
sti
fildll
repnz
sahf
das
ret
and
sub
mov
pop
jg
and
inc
fwait
push
outsb
xchg
mov
out
sarb
imul
rorl
inc
lds
outsl
mov
outsl
inc
or
cmp
mov
in
cmc
outsl
jp
pop
fdivrs
insl
imul
mov
pop
scas
sub
pop
adc
ja
jbe
and
fsubrs
cmp
mov
jmp
cmc
cld
stc
dec
inc
fstpl
cld
mov
dec
popf
pop
fldenv
xchg
mov
test
mov
sbb
pop
scas
adc
or
xor
pop
dec
daa
cmpsl
dec
mov
sbb
mov
mov
xchg
out
test
sbb
xchg
imull
xchg
xchg
std
fnstenv
int3
sahf
leave
cltd
sub
jmp
mov
and
xchg
inc
rclb
fnstcw
repz
lahf
fmuls
sti
lahf
xor
mov
add
cmp
mov
mov
push
and
rclb
jae
cmpsb
lcall
scas
pop
inc
push
stos
mov
mov
sbb
bound
push
cmpsb
mov
shrl
add
nop
imul
jecxz
xlat
mov
lret
dec
adc
jmp
imul
jo
xor
out
rorl
mov
je
pop
js
adc
adc
jl
jmp
cld
push
dec
sarl
sub
sbb
testl
jge
test
leave
ret
insb
xor
sbb
mov
or
cli
cwtl
sbb
jne
movsl
fistl
inc
jmp
push
push
out
lret
sbb
jnp
or
cltd
xchg
mov
mov
mov
mov
int
sbb
push
movsb
and
mov
stc
jp
outsl
cmpsl
mov
jecxz
dec
leave
mov
adc
cs
jne
sub
xchg
sti
pushf
mov
lds
jg
add
popa
popf
addl
dec
inc
mov
loope
fcompl
popf
sbbb
dec
pop
cltd
mov
dec
pop
mov
mov
pop
push
ds
flds
cmp
pop
inc
or
fstpt
jg
in
jnp
inc
test
lret
mov
aas
sarb
ror
loop
jae
mov
es
jne
rcr
cmc
jecxz
push
push
xor
xchg
stos
mov
sbb
scas
movb
push
lds
sub
repz
fcmove
cld
dec
rol
leave
shrl
mov
dec
mov
inc
outsl
jmp
push
jecxz
push
fldcw
dec
mov
ljmp
push
movsl
je
mov
js
pushf
or
and
stos
das
sbb
push
test
jle
dec
aaa
addr16
push
jmp
insb
mov
in
jb
adc
pop
loop
fmul
cmpsb
das
ret
jl
push
call
stc
dec
in
inc
jp
xchg
and
pushf
in
mov
mov
adc
add
dec
and
clc
pop
mov
jecxz
test
cld
jp
dec
repz
push
idiv
mov
scas
dec
inc
rcrb
iret
push
jne
mov
adc
sub
repnz
xchg
adc
sbb
out
jecxz
insl
inc
sarl
push
imul
repz
or
jecxz
jp
repz
push
stos
pop
cmp
push
mov
add
sbb
jnp
push
add
pop
cmp
pop
inc
pop
xchg
loop
jmp
dec
das
cwtl
test
mov
jno
fstpt
fiadds
dec
cs
mov
movsb
push
xchg
push
pop
xor
mov
es
and
lea
stos
push
or
loop
imul
mov
add
mov
loope
bound
or
aaa
sub
stc
imul
xchg
pop
dec
inc
mov
push
insl
xor
sti
shll
ja
xlat
xchg
mov
movsl
sbb
mov
repz
nop
mov
mov
dec
mov
pop
arpl
or
in
cli
outsl
sub
int
cs
pop
fsubrs
mov
push
mov
sti
xor
in
out
sub
xorl
loope
pusha
stos
fwait
and
mov
out
rcll
adcl
inc
fisubrl
xor
xchg
gs
mov
es
xlat
mov
jmp
inc
std
add
cmp
fildll
pop
lods
mov
sub
or
scas
repnz
negl
and
cmpsb
gs
dec
add
ss
fs
cltd
lods
cmp
sbb
xchg
data16
push
cmp
pop
stc
xorl
xchg
in
fdivrs
sub
and
mov
in
into
es
jo
jns
cmp
addr16
call
rcrb
lea
fcompl
cli
or
mov
notl
jg
mov
repz
pop
jmp
xchg
xchg
cltd
sub
or
jmp
loopne
insl
lret
jmp
jne
fldl2e
add
andl
popa
pop
xchg
dec
lret
and
out
cmp
pop
ret
jge
stos
push
insl
repz
iret
mov
mov
adc
sbb
pop
sbb
jae
jno
scas
lock
cmpsl
inc
jmp
mov
pop
in
inc
sub
jecxz
ficoml
ljmp
mov
sbb
leave
adc
cltd
push
mov
or
insl
scas
adc
mov
mov
popl
or
cmp
popf
pop
push
sbb
loop
add
in
cmp
loop
aas
jl
inc
sti
adc
aad
mov
stos
movsb
pop
inc
sbb
and
adc
jo
push
dec
or
fsubs
jl
rcrl
cmp
aad
ret
pop
orl
pop
fisubrs
insb
push
xor
lods
enter
cmpsl
lea
call
lcall
xchg
lds
mov
fiaddl
add
push
mov
shrl
movsb
dec
jno
mov
sbb
loop
dec
ljmp
ss
movsb
xchg
or
rcll
lods
arpl
pop
lods
xchg
test
xor
xor
mov
idivb
mov
sbb
aas
push
test
jbe
lcall
stos
addl
lods
xchg
sti
stos
mov
ficompl
hlt
pop
sbbl
ficomps
insl
call
daa
sub
imul
xchg
movsl
ret
cmpsl
xchg
pop
mov
fnstsw
imul
lcall
dec
adcl
jae
pop
pop
xchg
fisubrl
pop
mov
dec
dec
fsubrp
cmp
pop
iret
fsub
xor
call
mov
dec
into
jl
aas
aaa
js
pop
mov
sub
jp
lea
add
je
fisubrs
mov
fwait
in
lock
std
aad
hlt
aad
mov
inc
gs
and
push
test
mov
jecxz
dec
sub
stos
pop
cltd
dec
mov
cmp
xchg
cmpsb
push
push
inc
iret
mov
in
ret
sti
jno
mov
adc
rcl
mov
aad
sbb
pop
cwtl
sbb
fwait
push
movsb
xchg
xchg
sti
jmp
dec
push
jecxz
inc
sbb
aad
push
add
repz
pop
in
dec
clc
cmp
jnp
dec
jmp
mov
ret
sub
mov
sti
js
addr16
pop
mov
test
add
ljmp
sahf
lahf
or
lahf
pop
aas
sub
cmp
xor
xor
leave
xor
jle
xchg
shrl
cmp
in
bound
cmp
cmpsl
and
xchg
ret
ret
jns
xor
ja
sbb
dec
call
inc
pop
ja
arpl
fcomps
jb
pop
sub
sbb
or
popf
jge
ret
test
popf
repnz
jecxz
mov
in
movl
sbb
mov
ror
push
int
sbb
adc
adc
idivl
popa
jecxz
mov
shr
out
add
testl
scas
popa
arpl
les
pop
or
std
adc
mulb
inc
add
les
stc
jge
into
mov
dec
sub
lcall
xchg
mov
imul
cmp
cltd
xchg
mov
sti
cli
jb
loope
mov
push
shrl
jl
lret
push
ss
shll
jne
push
bound
dec
fsubrl
stc
and
fnstenv
sub
sti
imul
outsb
sub
js
and
nop
ja
cmp
fsubrl
adc
xlat
mov
dec
sbb
in
not
mov
pop
push
pop
xor
dec
mov
aam
pop
out
rcll
fcomps
jmp
sbb
in
cmpsl
cltd
fld
lret
insb
or
xchg
dec
in
leave
push
fcoms
ljmp
daa
int
adc
stos
lds
cs
push
pop
sub
rorb
out
or
push
iret
jmp
push
mov
or
rolb
rcll
mov
pop
ret
repz
test
dec
pop
sub
ret
mov
and
sti
adc
inc
adc
call
cmp
dec
ljmp
jl
lds
add
ret
fcompl
sarl
lret
jno
aam
add
jmp
jnp
cmp
fmull
test
jmp
sub
std
lds
ss
orl
pusha
popf
cmp
pop
out
mov
dec
les
scas
or
rcl
jg
cs
push
dec
fimuls
cmp
jmp
lea
pop
mov
test
dec
xchg
jnp
cmp
jae
mov
sti
ret
fldenv
pop
jno
outsb
clc
and
cmp
fbld
jbe
mov
daa
in
dec
insl
dec
iret
data16
pop
and
pop
in
popf
insb
xlat
push
mov
pop
mov
push
ljmp
ljmp
stos
push
outsl
mov
stos
jg
daa
sbb
xchg
cltd
jo
mov
popf
xor
xchg
ja
std
scas
mov
addb
mov
imul
dec
jae
je
cmp
out
fcoml
fnstsw
ljmpw
and
jmp
inc
in
icebp
mov
jle
xchg
mov
addr16
sub
cmpsl
cmp
ret
lcall
adc
stos
das
repnz
popa
pop
inc
pop
popf
xor
mov
mov
jmp
test
ret
mov
scas
xor
jb
scas
imul
cmpsb
arpl
or
mov
mov
add
mov
jmp
push
hlt
add
ret
fldt
fistl
dec
jmp
cmp
push
inc
les
sub
shrl
cs
out
dec
cmp
movsb
pop
adc
in
loop
jne
mov
popf
popa
bound
ror
or
sbb
shlb
pop
hlt
sub
jno
test
mov
fldcw
out
gs
fcomps
jecxz
outsl
add
lods
repnz
mov
movsb
push
mov
in
pop
aam
sub
fucomi
jecxz
push
mov
popf
inc
int3
imul
dec
xlat
fsubl
call
stc
xchg
jnp
test
adc
inc
shll
addl
jnp
lret
jae
add
sarb
pop
sub
popa
xchg
int3
je
dec
pop
ds
pop
xor
inc
lcall
jg
jo
rcrl
rcr
insl
dec
mov
pop
in
hlt
es
repz
sbb
and
and
imul
repz
adc
ss
shll
sti
pop
mov
fcmovnu
orl
cmp
shlb
adc
int
divb
ljmp
fwait
cltd
xor
fs
push
inc
pop
bound
jno
cmpsb
jmp
dec
ss
xor
fnsave
out
push
leave
or
ret
js
int
fcmovb
xlat
dec
das
push
stos
test
mov
inc
std
lret
sbb
push
rcrl
shll
dec
in
cld
in
dec
mov
xor
add
inc
cwtl
pusha
cmp
xchg
xchg
ret
xorb
iret
jg
imul
inc
mov
xchg
or
sbb
cmc
cmpsl
mov
fsubrs
repz
fstpl
fldln2
fnsave
mov
jno
ss
nop
mov
sbb
frstor
jp
fldenv
lods
mov
fbstp
sti
unpcklps
adc
xchg
test
stos
add
inc
aas
inc
dec
roll
lcall
inc
leave
xchg
fmull
xlat
jmp
jns
add
push
jb
and
xchg
lds
adc
stc
icebp
jne
in
xor
inc
out
and
mov
xor
outsb
add
xchg
and
xchg
repnz
add
xchg
mov
dec
adc
fdivrs
in
xor
lea
rcrl
addl
in
stos
push
sti
popa
clc
es
inc
into
iret
in
fisubs
dec
inc
or
xor
nop
pop
jmp
lds
shll
dec
and
add
fldt
shlb
sbb
test
in
inc
inc
jbe
pop
aam
popa
imul
mov
aaa
dec
imul
addr16
fcomi
enter
in
adc
lock
sbb
push
push
jmp
rolb
dec
adc
test
add
fimuls
sub
inc
fadd
test
sbb
xchg
leave
mov
pop
data16
pop
mov
je
idiv
es
cmp
enter
mov
mov
mov
ret
pop
imul
xchg
dec
inc
mov
ret
aad
xchg
push
cltd
fs
nop
jb
inc
insl
adc
ljmp
fiaddl
xchg
mov
adc
mov
mov
push
adc
addr16
cmp
inc
push
imul
lds
ret
ds
scas
ret
dec
and
fdivs
add
mov
outsb
push
pop
sub
xor
xchg
pop
push
cmp
jg
add
jg
ret
int3
xchg
mov
xor
xchg
sbb
sbb
pop
mov
jmp
and
xchg
dec
ss
add
int
sti
mov
outsb
push
xor
adc
or
dec
in
jp
pop
hlt
fimuls
cmpsl
enter
sbbl
int
and
mov
pop
or
sbb
pop
pop
sbb
aad
push
jg
dec
pop
fdivrl
push
cs
xchg
adc
stos
dec
xor
sbb
cmp
sub
xorl
int
jge
out
repz
rol
fidivl
stos
in
out
mov
push
cltd
lret
outsb
push
jns
adc
cmpsb
insl
popa
and
sbb
and
or
pop
mov
jbe
pop
xchg
lret
pop
sbb
pushf
inc
aad
jnp
mov
popa
adc
es
adc
jnp
js
mov
mov
and
pop
push
faddl
sbb
mov
xlat
pop
pop
ret
add
gs
mov
in
jg
insl
cmp
loope
mov
inc
int
fisubrs
push
movsl
mov
add
dec
and
hlt
push
mov
stos
iret
nop
xor
sub
sub
dec
sbb
add
mov
mov
int
insb
sbb
ret
test
ja
jae
test
and
mov
or
dec
or
imul
push
sbb
gs
and
jp
dec
arpl
jg
call
addr16
sbb
pop
jmp
fmul
push
adc
cmp
and
cmp
jecxz
testb
inc
fsubl
sub
lea
xor
clc
mov
stos
pop
or
lods
out
testb
pop
dec
imull
push
jne
dec
dec
out
aam
inc
jno
mov
or
pop
repz
lds
mov
int
les
shufps
pop
das
push
cmp
cmp
adc
cmpsb
cmp
adc
inc
jae
or
scas
stos
js
pop
xchg
fcoms
div
mov
xchg
mov
push
push
and
jno
lea
and
cmpb
push
leave
mov
or
ret
test
adc
loope
cmp
ja
sbb
les
iret
cmc
neg
cmp
mov
pop
lods
or
cmp
mov
jno
pop
das
sub
hlt
jo
lret
mov
movsl
sbb
enter
popl
jecxz
out
xchg
fwait
leave
sahf
pop
dec
cwtl
hlt
out
int
imul
rcrb
repz
fdivrs
mov
inc
cmpsl
movsb
jb
insl
orl
cs
mov
cs
loope
mov
test
in
scas
dec
adc
cmp
sbb
movb
jg
add
jae
jnp
add
out
daa
and
inc
sub
test
rolb
inc
xor
test
inc
push
sbb
out
gs
outsl
fwait
sbb
adc
mov
out
jmp
das
int
sbb
cmp
push
test
incl
in
les
scas
pop
daa
mov
push
bound
ret
xchg
sub
leave
mov
std
insl
test
adc
flds
repz
inc
cltd
ja
push
std
sahf
lret
ss
mov
out
fld
cs
mov
cmpsb
insl
mov
mov
sbb
aas
xor
push
ret
ss
mov
ljmp
pop
js
or
sub
push
xchg
mov
push
es
pusha
inc
stos
lret
xchg
cmpsb
int
jnp
ret
and
imul
pop
repnz
pusha
and
repz
mov
call
sahf
mov
jmp
mov
es
sbb
stos
inc
sti
es
dec
ja
enter
in
out
mov
inc
jmp
xchg
mov
addr16
jno
xor
sbb
add
leave
xlat
xchg
insl
mov
inc
into
push
dec
pop
ret
and
cmp
xchg
xchg
mov
xchg
sbb
std
std
outsl
dec
and
addr16
ret
or
sub
dec
aam
or
les
push
mov
andb
pushf
popa
mov
mov
sub
xor
and
inc
lds
xchg
push
mov
dec
test
rcrb
push
push
dec
insl
test
daa
dec
int
scas
inc
mov
inc
xor
jmp
jl
in
add
push
inc
dec
push
shll
faddp
ficoml
fldt
pop
insl
addr16
jbe
mov
mov
mov
xchg
cltd
ljmp
test
xor
lods
orl
clc
mov
cs
jmp
adc
push
and
les
int
and
mov
insl
call
mov
mov
mov
aaa
push
xor
insl
scas
adc
arpl
inc
rcr
data16
out
outsb
pusha
xchg
jbe
jmp
adc
sti
xor
icebp
popf
fucomi
data16
push
dec
xchg
sub
int3
lcall
lods
lret
cld
in
leave
outsb
mov
push
fcomip
jno
das
lret
in
enter
cmp
pop
sbb
lds
lds
in
fwait
push
adc
daa
push
jae
cmpsb
push
jne
fldt
inc
mov
lret
test
stos
pusha
int
ja
popa
pop
jb
lea
jecxz
mov
sbb
addr16
iret
loopne
dec
ret
sbb
les
fstl
dec
mov
inc
pop
out
cmp
adc
hlt
sub
outsl
ljmp
gs
out
add
sub
inc
aas
ret
jecxz
or
mov
outsl
ret
or
xor
aam
add
pusha
pop
pop
pop
xchg
cwtl
aam
clc
mov
rol
mov
sub
ficompl
insb
fstpl
aad
dec
fsub
push
stos
fidivs
inc
arpl
neg
pop
cmc
sbb
xchg
roll
inc
fildl
inc
scas
xchg
dec
cltd
dec
jp
dec
popf
inc
pop
mov
push
mov
addr16
fcoml
scas
aas
pop
add
xchg
shll
je
push
xchg
data16
jo
dec
inc
mov
idivl
popf
sub
mov
aas
fwait
push
mov
xor
rcrl
jmp
and
cmpsl
fcoml
dec
pushf
inc
dec
push
xchg
jnp
xor
inc
fsubs
loop
inc
mov
cli
pop
sub
pop
inc
xchg
push
pmaddwd
fwait
mov
orl
pop
mov
cwtl
cmp
in
push
and
jno
sbb
pushf
add
sbb
and
push
rolb
adcl
mov
dec
stos
in
mov
loopne
filds
data16
jne
outsl
push
stos
cmp
stos
pop
adc
mov
cmp
xchg
ret
or
pop
push
mov
cmpsb
mov
loop
insl
pop
addr16
sbb
inc
imul
mov
pop
xchg
add
cmp
mov
mov
pop
dec
rcll
mov
sub
daa
jmp
xor
roll
pop
dec
inc
dec
lods
push
pop
lahf
and
mov
mov
xchg
and
pop
lods
mov
jne
iret
jecxz
xchg
xchg
mov
push
and
ja
mov
dec
cmp
ljmp
stc
mov
mov
aad
push
lea
out
fstpl
repnz
int3
orl
out
fsubs
fwait
fwait
stos
les
pop
and
xchg
mov
jne
xchg
pop
dec
jnp
fldenv
aam
sbb
movsb
or
pop
jecxz
jo
ljmp
imul
xchg
loope
fcomp
sbb
ret
pop
test
mov
xor
fmull
sub
fcoml
and
xchg
mov
scas
adc
xchg
dec
int3
sbb
dec
xchg
xor
lds
pushf
sbb
cmpsl
sbb
sub
jmp
aas
xor
adc
mov
jp
cld
lock
add
ret
adc
fisttpl
ret
int
clc
xchg
outsl
jbe
in
sub
add
popf
faddp
push
and
popa
movl
filds
fildll
fstpt
test
ljmp
leave
xor
mov
inc
int
faddl
sbb
dec
mov
mov
repz
sahf
mov
sahf
jns
and
inc
xor
aas
xchg
push
popf
cmp
in
fmull
sbb
sub
sbb
or
xchg
sbb
loop
xor
sbb
inc
cmp
mov
ljmp
mov
add
fidivl
cmp
ljmp
mov
xchg
dec
lea
push
call
or
iret
inc
ret
push
jae
out
mov
outsl
dec
aas
jg
pop
aas
movsl
lcall
jne
lret
pop
lea
and
aam
xchg
adc
sahf
sub
scas
mov
out
push
mov
insl
shlb
aaa
cli
rcll
mov
jp
pusha
jno
outsl
or
cmpsl
lret
inc
andl
sbb
sub
add
push
aas
xor
mov
push
cmp
jne
sbb
loop
data16
aam
or
xchg
aas
cmp
pop
jecxz
cmp
xor
pop
jecxz
test
add
lds
cmpsl
or
vpacksswb
inc
jecxz
in
inc
imul
sti
popl
pop
jae
inc
fstl
cmpsl
inc
jno
mov
stos
dec
cmpsb
mov
dec
fs
test
cmc
andb
push
sti
jb
cmpl
call
les
or
cmp
inc
test
pushf
cmp
jmp
adc
stos
mov
int3
mov
sub
pushf
insb
loope
fnsave
mov
imul
cltd
fsubr
in
fcompl
and
bound
mov
in
ret
cmc
pusha
or
inc
loope
imul
out
or
in
add
dec
push
shlb
jg
stos
mov
jecxz
or
sarb
out
xor
jp
sti
mov
imul
pop
scas
dec
sbb
das
mov
push
mov
daa
imul
ret
or
ds
mov
mov
jmp
pop
jo
imul
xor
or
mov
xor
nop
ljmp
enter
lcall
icebp
popa
daa
ret
and
cmp
loopne
test
loopne
mov
push
shr
dec
jns
pop
stos
or
pushf
loope
mov
sti
outsl
sub
mov
mov
or
dec
fildll
fldl
add
sbb
lea
or
lret
jl
shrl
or
adc
mov
jno
inc
sarb
repnz
imul
xchg
inc
xchg
sbb
pop
ret
cwtl
mov
mov
test
and
nop
push
push
cmp
cmp
mov
add
jno
mov
ret
cs
out
xchg
test
fnstsw
pop
or
fimull
and
xchg
sbb
add
inc
adc
sbb
mov
inc
imul
ret
lods
and
sub
xchg
mov
jo
fwait
sbb
push
in
fstpl
add
lahf
mov
sub
jmp
cmp
cmp
aad
mov
push
jecxz
sbb
dec
sbb
roll
jecxz
leave
xlat
mov
xchg
popf
xchg
inc
inc
sar
es
mov
push
push
ret
sahf
cmp
pop
cmp
insl
xor
fmull
mov
les
pop
arpl
mov
push
in
outsb
adc
jbe
cmp
andl
insb
stos
inc
push
sbb
out
dec
ficoml
daa
les
sub
mov
xor
fadds
ljmp
les
xchg
fs
inc
and
inc
mov
jecxz
fstpt
ss
rclb
mov
sbb
clc
jo
ss
xchg
inc
jecxz
mov
jae
xor
rcrb
flds
pop
sbb
mov
push
jns
stos
xor
xchg
imul
add
xchg
dec
rol
daa
ss
je
fucomip
mov
fs
mov
inc
mov
stos
test
cwtl
or
dec
out
mov
inc
push
arpl
fstp
cmp
and
test
sub
sti
jae
xlat
stos
std
popa
in
jecxz
adc
pop
jns
lea
push
mov
test
in
lea
pusha
fmuls
mov
pop
mov
cmpb
and
filds
pop
mov
movsl
xor
mov
fstpt
sub
aam
adc
mov
fistl
sbb
and
pop
xor
cs
or
xchg
ret
int3
add
mov
mov
popa
gs
pop
cmp
mov
nop
shl
roll
sbb
lods
daa
push
mov
pop
mov
pop
scas
aas
fmuls
push
cmp
cmp
adc
mov
mov
adc
loope
fistpl
ljmp
push
xchg
lods
fisttpll
sub
pushf
test
sbb
shll
lods
out
sbb
ret
mov
jno
aaa
test
mov
addr16
push
or
xor
dec
lods
mov
pop
adc
and
sbb
fcoms
int
in
in
inc
sub
in
ja
fstp
das
mov
mov
jno
xchg
pop
icebp
mov
addb
mov
fst
lock
xchg
mov
dec
ss
rcl
jo
sbb
adc
sarl
ljmp
loop
and
les
dec
lcall
sbb
gs
je
in
mov
shll
int3
dec
and
mov
inc
jno
mov
mov
mov
add
xlat
cltd
push
xor
fwait
dec
dec
sbb
jmp
movsb
bound
and
mov
mov
daa
adc
ret
dec
sbb
push
out
sub
cmpl
mov
fldt
push
sbb
ljmp
mov
fcmove
test
imul
sbbl
sub
out
and
or
movsb
fildll
mov
ja
lret
dec
arpl
sub
cmp
ret
xchg
enter
mov
test
lret
leave
inc
dec
cmp
inc
xchg
stos
les
dec
out
xor
mov
popf
popa
cli
in
mov
mov
scas
xchg
leave
add
daa
sti
jns
push
imul
mull
aad
iret
test
and
outsb
movsl
enter
mov
push
ss
pop
or
jno
and
sbb
fdiv
nop
fnstenv
shrw
push
das
sbb
push
add
push
jl
out
and
and
push
xchg
xchg
or
loopne
pop
mov
fwait
mov
push
roll
pop
ret
int
push
or
jmp
das
mov
push
ja
xor
and
push
rcrl
sub
pop
shll
jecxz
lahf
jo
daa
in
cltd
xchg
inc
jg
add
lods
das
hlt
and
and
mov
dec
ret
or
or
sbb
mov
mov
mov
lret
dec
cmp
mov
xor
repnz
jae
dec
and
test
mov
roll
mov
push
repz
cmp
inc
cmc
mov
aaa
sub
in
add
in
inc
repz
mov
repz
pushf
or
push
fwait
in
rol
cmpsl
inc
iret
mov
jo
sti
je
add
imul
repnz
jp
pop
es
pop
out
inc
cmpsb
dec
imul
call
and
jmp
mov
andb
inc
inc
ds
out
clc
fbstp
fildl
stos
push
shll
dec
sahf
sub
mov
mov
adc
std
xlat
loopne
test
subps
push
js
xchg
lcall
fildll
adc
pop
jae
pusha
into
push
dec
test
dec
aas
stc
mov
sub
mov
xor
cmp
and
sbb
out
notb
push
aam
inc
sub
aas
and
fcompl
push
xchg
inc
loopne
push
insl
sbb
negb
sti
xchg
ja
jnp
test
xorb
fninit
dec
and
mov
std
int
loop
vrcpss
push
xchg
sbb
sub
mov
into
mov
pop
inc
rorl
mov
imul
iret
je
or
in
inc
test
fisttpl
jmp
lret
inc
jecxz
jmp
movsb
pop
test
aad
sub
and
addr16
sbb
fisttps
pop
subl
push
fisttps
out
or
mov
add
addr16
pop
fwait
std
loope
jecxz
xor
imul
gs
sti
jp
xor
sbb
pop
or
data16
sarl
rol
subb
rcrb
dec
fcoml
stos
pop
sbb
stos
mov
xor
rclb
mov
imul
sbb
sub
push
mov
pop
xchg
adc
adcl
dec
mov
jp
xor
dec
aas
inc
ljmp
mov
xor
dec
imul
push
or
out
imul
addr16
add
mov
ret
movsb
insl
fmul
sub
mov
sbb
sub
adc
imul
mov
and
mov
shrb
fildl
mov
imul
idivb
adc
pop
fsubr
in
xchg
inc
mov
ljmp
push
mov
xchg
dec
lds
xchg
aas
movsb
dec
add
mov
repnz
add
stc
jecxz
in
insl
add
loop
test
dec
xorb
std
fdivrl
mov
repz
dec
pop
addr16
xor
das
out
jle
cmpsl
sub
lret
addr16
pop
in
dec
xchg
adc
stos
adc
jmp
ss
lcall
dec
jne
fiaddl
jns
and
mov
sub
hlt
idiv
jp
rcrb
leave
adc
dec
cmp
rol
sbb
dec
jp
lret
adc
arpl
jnp
in
jae
fimull
insb
add
ficompl
arpl
adc
sub
mov
daa
and
inc
out
xor
fisubrl
push
dec
fcmovne
push
inc
xor
shl
rcr
mov
lret
inc
int
mov
imul
sbb
les
mov
jns
cld
sub
loop
in
loop
mov
cwtl
fdivl
push
fisttps
ljmp
mov
add
mov
sbb
cmp
fstps
cmp
shll
inc
or
int
scas
fisttpl
fisubrl
jmp
jecxz
inc
sti
es
dec
mov
pop
outsl
aas
fwait
pop
xchg
jle
mov
fmull
out
sub
mov
cmpsb
xchg
mov
fsub
out
orl
in
sbb
and
adcl
in
and
faddl
jp
adc
xor
fsubrl
add
and
fwait
ret
lds
jg
fcmovnu
dec
fcmovnbe
and
mov
rcl
stos
iret
shr
jmp
out
jmp
sti
or
idiv
or
icebp
sbb
addl
mov
rclb
dec
out
inc
and
nop
fnstcw
ret
stos
ljmp
in
xchg
fmull
lods
jno
pop
xchg
push
daa
fs
cmp
jnp
neg
loope
push
mov
jae
leave
test
mov
or
adc
rcr
pop
sbb
movsl
xlat
pop
mov
scas
sbb
jo
int
sbb
mov
mov
jne
vpsrld
rcrb
sub
popf
mov
scas
add
jmp
enter
stc
sbb
lea
movb
stc
jns
xchg
lods
adc
aam
xchg
cwtl
stos
test
popa
xchg
lret
incb
jno,pt
pop
addr16
xchg
mov
pop
push
pop
fstpt
sbb
jp
leave
call
cwtl
sbb
ret
stc
fnstsw
xor
outsb
cltd
sbb
gs
lods
mov
sahf
jnp
int
fisubs
in
jne
push
mov
jp
cmpsl
and
push
sbb
jb
jnp
push
ret
lods
or
mov
ljmp
mov
ret
add
pop
adc
jae
inc
fisttpl
sub
sti
and
popf
stos
jae
jl
sti
icebp
mov
jae
mov
repz
sahf
into
into
pop
int
in
lahf
add
jne
dec
sub
jne
dec
sbb
fwait
lods
shrl
aaa
cmpsb
leave
lods
xor
kandnw
or
pop
mov
jae
mov
popf
mov
hlt
test
fdivl
nop
or
ds
fnsave
mov
int3
inc
test
jnp
xor
int
in
testl
orl
in
cmp
loope
pop
xchg
push
inc
sbb
fmull
pop
and
in
ret
xchg
jno
fdiv
out
subl
mov
popa
sbb
push
mov
mov
adc
cmp
lea
and
jge
stos
out
fsubr
ret
and
mov
mov
std
push
sbb
popa
fdivs
pop
xchg
sbb
or
and
or
jmp
mov
dec
mov
ljmp
loope
dec
push
mov
mov
mov
int3
imul
sbb
gs
xor
sbb
mov
mov
mov
jno
shlb
fildl
insl
cmp
loop
sbb
fdiv
pop
int3
sbb
dec
ljmp
fldenv
mov
cmp
mov
aad
cmp
jmp
adc
je
xchg
pop
jne
outsb
hlt
mov
jmp
lcall
dec
sbb
pop
jle
into
jmp
push
mov
sub
sub
mov
xor
jae
mov
negl
rorl
jle
cmp
imul
cwtl
dec
lods
out
add
mov
ficoms
jle
sbb
xchg
scas
pop
cmp
pop
mov
jae
leave
mov
mov
negl
divl
ret
in
scas
lods
test
cmp
mov
in
jmp
xchg
mov
sbb
gs
dec
in
mov
mov
or
fucom
addl
mov
xchg
jno
js
imul
movsl
fildl
fidivrl
or
into
jae
inc
mov
push
int3
lds
push
aas
xchg
mov
jmp
ret
cmpsl
dec
xchg
mov
xchg
pop
jmp
push
fiaddl
mov
imul
out
in
xchg
movl
test
in
inc
jno
push
push
mov
ret
ficompl
rolb
stos
inc
xor
jp
cmpsb
stos
std
pop
int
loope
jmp
inc
cmpsl
pop
jmp
mov
inc
pop
add
jmp
pusha
stos
in
fistl
out
gs
push
test
pop
es
jge
push
daa
cmp
push
xlat
loope
rol
push
cmpsl
fnstsw
add
mov
mov
ret
xor
cwtl
lret
dec
pop
ret
cmpsb
cmp
xchg
pushf
out
repz
iret
xor
inc
dec
and
jmp
xor
inc
mov
dec
cmpsb
jmp
jno
jne
push
pop
mov
mov
pop
mov
mov
add
mov
fistpll
xchg
jne
push
loopne
lcall
sub
xchg
test
xchg
notb
sub
mov
dec
cmp
shll
cmc
dec
and
ja
jno
mov
jp
cmp
das
xchg
lock
lret
mov
aam
rcll
sbb
mov
jnp
jo
cmp
fdivs
pop
out
ss
xchg
addr16
adc
xlat
dec
xchg
enter
sbbl
fdiv
jp
mov
xchg
fldenv
dec
sbb
out
insl
inc
dec
cmpsl
test
and
mov
pop
mov
test
pop
dec
mov
cmp
mov
test
and
jbe
mov
sbb
jmp
mov
repnz
fidivrl
mov
mov
mov
pop
xchg
mov
mov
pop
aas
loopne,pt
enter
aam
insl
mov
outsl
stc
xor
shr
xchg
add
add
and
mov
popa
in
mov
aam
sbb
mov
sbb
ljmp
or
fcmove
push
outsb
sub
in
repnz
ds
mov
test
pop
xlat
shl
xchg
imul
dec
repz
adc
push
iret
fcmovu
rorb
fldenv
inc
incb
ret
outsl
cmp
call
xchg
cmpsl
das
dec
sbb
sub
out
inc
ljmp
lea
lcall
jle
dec
movsb
add
push
scas
xor
ljmp
pop
test
lret
xchg
cmp
push
jnp
xor
fstpt
pop
out
mov
add
add
pop
test
inc
imul
sti
test
mov
shr
sub
pop
popf
mov
mov
adc
stos
insl
sbb
mov
cmpsl
xchg
jecxz
sti
pop
xchg
jmp
pop
dec
adc
in
add
push
cld
mov
pop
push
mov
add
fsubrl
dec
jno
and
inc
xchg
je
sbb
or
movsb
adc
add
and
lcall
jnp
mov
lods
dec
cmp
jmp
test
jle
loopne
call
mov
out
and
fsub
cmpsl
lds
mov
cwtl
dec
aam
adc
add
adc
pushf
push
fmul
pop
loop
shr
cmp
xor
imul
xor
add
dec
aas
sti
dec
ret
xchg
lahf
fwait
add
add
cmpsb
jg
cmp
lds
pop
adc
inc
mov
ret
f2xm1
and
xor
xchg
and
push
mov
xchg
stos
sbb
imul
jecxz
xor
push
jmp
cmp
inc
lcall
loopne
stos
aad
mov
sbbb
and
loopne
repnz
ficoms
movsl
mov
fistl
lahf
pop
jge
insl
and
imul
pop
fwait
ret
fdivrs
scas
andb
jne
dec
push
pop
iret
sti
inc
and
leave
fsubrl
ljmp
jnp
dec
xchg
pop
jnp
adc
pusha
inc
pop
jp
mov
push
lods
aaa
loop
fisttps
pop
cmp
pusha
in
scas
mov
imul
arpl
in
shlb
mov
fcmovne
hlt
jmp
orb
rcrb
inc
divl
push
or
jbe
out
mov
pop
xor
jecxz
rorb
loop
imul
stos
ret
mov
popl
xor
mov
loop
out
jnp
bound
pushf
clc
fisttps
push
insl
adc
fcompl
cmp
outsl
rcll
lret
or
fldt
daa
ret
pusha
ljmp
mov
insb
xlat
sbb
inc
pop
mov
xor
enter
xchg
int3
out
xchg
xchg
cmpsb
mov
mov
pop
repnz
or
pop
arpl
xor
ds
arpl
dec
hlt
add
or
imul
sbb
test
rcl
rclb
pop
push
or
xor
ss
mov
inc
psubusb
xor
test
jno
mov
inc
arpl
mov
xchg
mov
and
out
lds
jnp
fsubrl
pop
jge
fiadds
or
sbb
mov
dec
pop
fldcw
call
mov
call
loopne
mov
pop
in
mov
sarb
xor
jp
xlat
loopne
mov
fcmovnbe
cli
call
mov
push
jg
mov
loope
rclb
ljmp
imul
repz
add
test
and
push
rcrl
fs
pop
pop
dec
mov
loopne
push
add
outsb
mov
pop
imul
inc
movsl
orb
imul
movsl
xorb
pop
movlps
std
pop
pop
gs
lahf
insl
stc
mov
mov
imul
mov
inc
xor
jle
dec
xchg
mov
adc
sub
dec
push
ljmp
xor
cs
fistl
ret
fmul
mov
xlat
aam
jp
in
mov
push
or
pop
rcrl
dec
addr16
shll
push
mov
cmp
mov
jecxz
mov
pop
inc
sub
mov
ljmp
addb
sbb
into
push
loope
pop
int
pop
imul
dec
sarl
add
test
shl
mov
outsl
iret
nop
mov
dec
xchg
sub
pop
sbb
cmp
test
fcoms
jmp
es
imull
pop
ret
test
cmp
outsl
adc
int
cmp
mov
mov
xchg
sub
mov
jo
sarb
cld
lods
cmp
mov
shrd
ret
cs
xchg
sbb
push
or
jmp
repz
roll
pop
filds
popa
jecxz
and
lahf
fiadds
inc
lahf
ficomps
pusha
aas
or
jecxz
fsub
mov
dec
sbbl
xchg
mov
xor
mov
push
cli
dec
mov
inc
jmp
in
sti
or
rolb
push
repnz
adc
pop
mov
xchg
jns
push
into
and
push
fnsave
sarb
cmpsl
hlt
hlt
mov
pop
mov
jo
cmp
lahf
or
inc
hlt
aas
enter
fbld
fcoml
pusha
jno
mov
fdiv
sbb
repz
sbb
call
add
dec
lds
sbb
lret
sbb
ljmp
in
in
jg
sub
mov
xor
scas
xchg
test
sub
sbb
in
jecxz
ret
inc
push
pop
mov
aad
out
popf
mov
jecxz
inc
dec
mov
mov
loope
xchg
ret
icebp
jp
push
jnp
out
xchg
jno
fistl
cmp
xchg
jns
push
mov
sub
lock
push
inc
popf
and
sbb
popf
push
test
repz
mov
pusha
lret
enter
mov
roll
std
sbb
mov
aad
int
fnsave
addl
imul
mov
sbb
push
mov
das
xchg
mov
push
xor
or
mov
adc
jg
sti
movsb
fisttpll
mov
int
sbb
ret
leave
pop
jno
or
ret
sub
rcrl
pop
stos
cmp
and
adc
mov
dec
sbb
ljmp
test
cmpsb
shlb
or
fsubl
and
popf
cwtl
pop
add
lock
mov
insl
fs
cld
in
test
sti
in
sbb
mov
mov
sbbl
dec
push
xchg
fcmove
inc
push
add
fimuls
mov
int3
arpl
mov
push
xchg
add
aaa
sbbl
push
sti
mov
stc
push
xchg
pop
mov
cld
or
jl
fstpt
int
push
inc
fadds
jmp
mov
idivb
fcmovnb
xor
ficomps
pop
jae
insb
push
lea
out
out
in
pop
insl
add
imul
sbb
loopne
gs
inc
xor
sbb
je
or
and
sti
xchg
aam
mov
test
fucom
ficoms
rcr
in
in
cld
pop
repz
xchg
loope
rorb
fnstcw
and
push
mov
xrelease
adc
inc
push
xchg
sbb
mov
dec
pop
pop
inc
in
jno
out
and
std
sub
scas
mov
mov
insl
fwait
mov
mov
jecxz
xlat
xchg
fcmovbe
les
sarl
ret
mov
and
xchg
cmpsl
ljmp
dec
sbb
mov
fdivp
sbb
clc
mov
hlt
cmp
sub
cmpsl
jae
pusha
mov
loope
cwtl
pop
push
mov
enter
arpl
lea
push
or
xchg
dec
pop
mov
in
jl
mov
inc
stc
mov
and
push
pop
inc
popf
aaa
mov
xlat
shl
add
outsb
adcl
mov
push
repnz
fwait
ds
nop
xchg
sbb
les
pop
fucomip
adc
fiadds
cs
call
pop
xor
inc
mov
lods
jecxz
leave
std
sti
repz
scas
sub
cmp
out
orl
aaa
inc
push
repnz
hlt
test
add
pop
in
mov
imul
fcmovu
inc
xor
mov
push
test
mov
cmp
pop
movsb
popa
loope
mov
fcmovb
push
inc
sub
pop
cmp
daa
and
scas
pop
add
cmc
sub
xor
mov
addr16
fstpl
xor
outsb
test
jg
and
ficoms
out
inc
xchg
jmp
push
mov
lahf
test
sbb
lds
outsb
fs
fucomp
adc
lods
pop
in
out
leave
dec
inc
mov
lods
mov
out
nop
fbstp
std
push
mov
bound
push
push
lea
fisubrl
inc
iret
je
push
mov
test
push
sti
lcall
shr
lcall
pop
ficompl
andb
push
mov
mov
test
cltd
push
fwait
and
jmp
loopw
inc
stos
sbb
jbe
jae
popf
popf
pop
int3
in
mov
test
add
push
mov
ret
sbb
xchg
pusha
cs
inc
push
addr16
mov
pop
pop
mov
ror
pop
and
fsubrl
jecxz
adc
aam
sti
sti
repz
scas
jo
imul
addr16
jmp
jo
adc
fmuls
mov
and
iret
insb
push
inc
or
addr16
pop
lcall
sub
mov
test
cmp
push
adc
test
test
cltd
push
jge
out
cmp
pop
adc
cmp
push
push
popf
adc
loope
in
mov
adc
js
jmp
std
clc
inc
mov
inc
std
out
push
fistl
cmp
dec
push
inc
js
xchg
adc
push
push
ret
jo
rclb
cld
lret
out
jo
cli
fistps
or
pop
lds
mov
out
mov
imul
shrb
sbb
lds
push
repz
pop
xchg
sti
jl
cmpb
adc
cltd
pop
ret
mov
shll
iret
shrb
cmp
jl
sbb
mov
mov
push
jno
gs
ljmp
dec
mov
mov
addr16
pop
inc
mov
jne
in
arpl
xchg
fidivrs
jl
xor
lods
inc
sbb
dec
inc
call
push
sti
cmp
pusha
dec
and
mov
loopne
stos
and
jg
insl
ret
imul
test
jno
outsl
adc
push
movsl
lcall
das
andl
rcrl
dec
imul
outsl
repnz
xlat
cli
mov
stos
in
mulb
dec
cltd
sbb
mov
ljmp
mov
push
xchg
mov
cltd
repz
inc
jg
mov
in
repnz
jg
pop
lock
lea
jbe
pop
push
inc
mul
out
imul
jl
leave
icebp
inc
imul
imul
pop
test
testb
fwait
sbbl
and
lcall
aad
ret
int
int
or
icebp
or
out
es
mov
movsb
pop
pop
aad
pushf
inc
test
test
push
stos
cmpsb
fisubl
int
inc
sub
aaa
pusha
fcompl
xor
and
sub
or
dec
cmp
xor
sbb
push
push
pop
mov
xchg
pop
pop
and
imul
cmp
mov
daa
es
flds
sub
and
inc
call
sub
fadd
and
in
iret
insl
fistpl
dec
out
sbb
dec
xlat
sbb
xchg
mov
and
sub
push
cmp
pop
fstpt
inc
mov
in
dec
mov
enter
mov
add
inc
scas
sbb
mov
addr16
xchg
out
sbb
pop
dec
cltd
in
mov
xor
aaa
sbb
lret
pushf
rolb
iret
sub
out
pop
adc
inc
push
and
or
sbb
insl
sbb
pop
dec
insl
ret
mov
jcxz
ds
pushf
cmpsl
aam
popf
test
jecxz
xor
mov
add
xor
add
pusha
inc
in
ljmp
rorl
filds
adc
mov
xchg
mov
adc
outsb
jmp
dec
cmpsb
xor
shll
int
or
stos
push
jmp
popa
cs
call
sti
or
lock
xchg
cmp
add
lret
shl
pop
xor
jne
pop
cmc
outsl
jmp
jecxz
rorl
aam
add
out
leave
sbb
aam
inc
stos
mov
arpl
int
iret
push
aas
jmp
popf
jecxz
les
mov
leave
jbe
mov
cwtl
inc
fs
jecxz
mov
xchg
jns
dec
cmp
pop
mov
fidivrl
gs
rcr
call
or
adc
adc
mov
mov
aas
stos
pop
aam
mov
inc
push
and
inc
fmuls
movsb
andb
fucomi
scas
test
out
pop
push
xchg
jle
mov
sbb
cmp
fnsave
cmp
inc
pop
xchg
adc
mov
leave
jnp
leave
fsubrs
xchg
pusha
inc
je
cmp
jp
test
int
fmull
icebp
sbb
leave
ret
inc
lds
loope
in
pop
sub
fwait
push
in
push
leave
mov
ljmp
jnp
inc
and
imul
add
pop
push
stos
inc
inc
jno
push
ficomps
cmp
push
jnp
ror
js
cli
mov
mov
fsubp
jge
inc
mov
mov
int3
mov
cmpsb
scas
pusha
xor
mov
into
ret
jb
rep
rol
sti
jg
fdivrl
xchg
dec
jge
lods
adc
mov
sub
cmc
jne
jge
and
pop
cmc
inc
fistl
push
jne
push
sbb
test
rep
insl
insb
imul
mov
inc
push
repnz
stos
push
ljmp
inc
testl
or
ljmp
gs
stc
lret
xchg
mov
and
add
sub
in
pop
int
inc
inc
xor
stos
jmp
dec
mov
fs
xlat
stos
out
std
cmp
andl
push
jno
sbb
and
out
ret
push
inc
jecxz
ljmp
mov
mov
leave
or
fsub
in
add
jb
mov
out
jmp
icebp
hlt
test
push
and
cmpsl
xchg
xor
push
or
scas
aad
stc
mov
mov
mov
push
call
and
dec
xchg
shll
hlt
push
pop
fldenv
fsubr
fldt
mov
add
and
xchg
outsl
sbb
pop
ja
ljmp
outsl
xor
mov
xor
push
imul
xor
inc
mov
mov
mov
cwtl
add
stos
sbb
cld
loopne
nop
lods
outsl
shl
les
fistpll
ret
sbb
das
sbb
cmc
push
fstpl
add
aam
pop
adc
test
les
mov
xchg
dec
lds
sti
in
jno
xchg
inc
cli
in
xchg
das
pop
or
popf
out
xchg
lea
imul
fstpt
and
push
mov
mov
sbb
sbb
pop
mov
mov
jp
dec
pop
and
fs
lods
arpl
mov
add
stos
pop
sub
cmpsb
mov
pop
arpl
pop
mov
lea
inc
das
popf
pop
arpl
sbb
jne
sbb
shr
jno
cld
or
push
jnp
mov
aad
in
stc
popa
test
addr16
in
cltd
lea
imul
lret
pop
arpl
push
jle
add
add
jge
loope
sbb
lods
lahf
mov
lds
rorb
sub
in
inc
fiaddl
mov
ret
iret
mov
in
inc
imul
push
pop
push
gs
cs
sub
mov
or
dec
xchg
add
inc
push
inc
mov
cmp
insl
fsubrl
jae
ret
fistpl
mov
xor
inc
int3
fimull
jl
out
add
adc
mov
fstpt
xchg
iret
inc
in
imul
imul
mov
insl
jmp
dec
ret
addb
lcall
gs
inc
ret
dec
int
test
das
data16
les
jg
lods
mov
stc
xlat
ret
int3
adc
stos
and
lret
shr
cmp
int
push
in
loope
imul
sub
and
jae
mov
add
and
sbb
gs
mov
stos
mov
mov
repz
das
mov
in
xchg
sbb
jge
aas
lods
xchg
mov
mov
sub
jmp
in
movsl
push
or
cs
xchg
fistl
mov
cs
add
xor
xchg
dec
jp
lret
xchg
sbb
rcr
mov
push
out
mov
push
mov
ja
push
imul
fisttpll
test
mov
dec
sbb
cmp
jmp
or
jl
fwait
xchg
mov
xor
rcrl
stos
sub
push
inc
stc
mov
ret
int
das
jecxz
sub
or
dec
sti
mov
push
mov
sub
fstpt
out
cmp
and
fdivs
dec
sti
mov
inc
sub
and
adcl
pop
jmp
sbb
rolb
sbb
dec
mov
cmp
ljmp
stos
aas
xchg
fisubrl
inc
adc
xchg
sub
stos
ret
mov
add
mov
dec
ret
xor
call
jmp
insl
xchg
hlt
nop
pop
call
xchg
test
or
pop
xchg
sahf
jmp
cli
aaa
mov
roll
xor
sbbl
and
aad
xor
out
test
das
imul
mov
call
outsl
and
mov
lods
neg
jmp
aam
jecxz
scas
xlat
in
add
push
into
pop
mov
loop
sbb
mov
add
cmpsl
sar
jmp
jecxz
dec
sti
std
ljmp
lds
in
test
out
shll
sub
fwait
loopne
mov
dec
mov
ds
mov
sub
push
nop
stc
cltd
push
sahf
out
jns
shlb
test
addr16
and
add
movsb
push
lock
enter
mov
or
cmc
sti
inc
getsec
std
ret
rorl
in
fildl
pop
dec
stc
mov
dec
pop
lcall
iret
push
or
or
or
cmc
cltd
pop
and
inc
fwait
mov
call
inc
push
and
loopne
dec
jecxz
dec
out
pop
cmp
jp
cmp
mov
jno
mov
jecxz
sbb
jmp
ficoms
inc
mov
and
into
in
push
aaa
aas
movsb
jl
cmpb
pop
push
pop
shrl
enter
mov
cmc
xchg
push
sub
sbb
dec
and
or
loopne
mov
xchg
arpl
push
cwtl
pop
outsl
stos
dec
stos
ret
pop
xor
notb
fwait
les
addr16
and
add
xchg
push
inc
push
shll
jge
lods
push
pop
jecxz
mov
push
xor
cmp
mov
mov
xchg
jmp
ljmp
fstpt
push
out
jg
notb
xor
xchg
out
adc
stc
movsb
mov
cmp
mov
mov
jb
out
adc
imul
clc
xchg
pop
pcmpeqb
jecxz
aam
pop
shll
imul
arpl
pop
andb
mov
lods
pop
es
fnstcw
xchg
push
cmp
mov
test
je
movsl
ret
jne
popl
xchg
addr16
cmc
dec
xchg
push
test
pop
ror
sbb
inc
dec
jp
pop
mov
js
clc
or
lock
and
in
inc
mov
jmp
lods
popa
sbb
xor
fdivl
sahf
cwtl
or
adc
inc
mov
scas
and
sbb
in
das
mov
cmp
test
sub
mov
jne
int3
pop
scas
inc
mov
lea
mov
int3
or
clc
lea
sub
pop
xor
sbb
sbb
pop
add
dec
fldcw
sahf
xchg
aas
cwtl
xchg
mov
arpl
mov
rol
mov
aas
cmp
cmpsl
sub
int
add
ja
fld
aas
push
in
fnstcw
out
lods
cltd
js
sbb
imul
sbb
mov
int
int3
cmp
xor
fucomi
adc
in
lret
inc
push
ret
subb
inc
mov
mov
test
dec
mov
scas
cwtl
shll
scas
ret
data16
mov
jae
mov
insb
dec
sti
ljmp
fstl
push
pop
sub
leave
mov
addr16
xchg
sub
test
push
push
pop
gs
shlb
arpl
jnp
or
sti
repz
mov
jnp
sbb
popa
add
mov
popa
in
shrb
out
lds
and
fwait
sti
nopl
leave
aam
fsub
jo
fcoms
loop
ljmp
int
loopne
aad
jnp
and
and
hlt
xor
inc
sub
push
je
cwtl
push
jo
stos
inc
sub
xor
repnz
stos
dec
sbb
jge
mov
push
incb
xchg
idivl
mov
out
mov
ljmp
es
cmp
jg
arpl
imul
mov
jnp
orb
and
sar
or
mov
and
or
inc
repnz
xchg
jecxz
xlat
jge
pop
test
sti
lcall
add
out
lcall
popf
out
mov
xchg
jae
xlat
test
push
stos
popf
sbb
and
in
in
xchg
in
jne
lret
cmp
mov
push
orl
cmp
jno
test
sbb
sub
fwait
dec
mov
adc
dec
mov
and
aam
fmull
insl
xor
repz
insb
enter
pusha
xchg
lds
pop
xlat
sub
add
lock
adcb
adc
dec
mov
cmp
push
imul
xchg
inc
idivl
lods
pop
imul
cmc
mov
mov
cs
push
in
xor
xchg
mov
xchg
popf
cwtl
dec
inc
ljmp
dec
jg
mov
js
pop
cltd
das
cmpsb
sti
jno
sti
sbb
repz
mov
dec
sbb
popa
xchg
lock
and
push
push
loopne
ret
sub
pusha
adc
dec
mov
and
mov
lods
ret
dec
daa
rol
lods
lods
shrl
xor
ret
mov
dec
jmp
sub
sbb
sahf
xor
cmp
addr16
cmp
and
add
loopne
clc
es
add
scas
jg
movl
or
daa
lcall
std
aaa
std
enter
inc
sbb
pop
jnp
sti
aaa
insl
in
sbb
mov
nop
pop
movl
adc
fucomi
pushf
adc
jno
negl
paddq
cmp
sub
sub
jle
cmpsl
and
mov
cs
adc
pop
and
out
imul
mov
xlat
arpl
cld
pop
frstor
imul
mov
lea
test
hlt
and
fstp
xchg
pop
mov
pop
lods
xor
fstp
jbe
test
sbb
or
lds
xor
sbb
psrlw
adc
sti
mov
push
xor
repnz
sar
jno
outsl
xchg
jnp
rcll
sbb
pop
pop
adc
aas
mov
rcll
sarl
inc
or
mov
mov
loop
sub
int3
lahf
cmp
mov
and
lds
fldt
or
and
pop
divb
mov
push
in
pop
pop
popa
jno
xlat
outsl
sbb
and
je
pop
xor
flds
fsub
cld
sbb
pop
aas
mov
xchg
dec
xlat
mov
push
hlt
xor
mov
and
cmp
pop
fisubl
stc
xor
inc
insl
xchg
push
bound
lods
repnz
lods
or
push
xor
jg
lds
cld
sbb
jmp
out
jecxz
daa
repz
aam
roll
out
jns
or
jge
lahf
aam
stc
mov
sub
pop
mov
inc
out
pop
lahf
pop
leave
or
arpl
lahf
push
lret
int3
popa
jp
adc
ljmp
sub
scas
js
ja
popf
ljmp
add
mov
and
xor
pop
mov
inc
out
push
imul
jmp
and
inc
iret
mov
int
mov
sbbl
push
adc
arpl
pop
repnz
push
test
in
es
outsb
arpl
mov
push
push
xchg
inc
sub
mov
lret
push
test
je
lret
fistpl
cmp
cmp
mov
cmp
sub
mov
sub
arpl
outsb
mov
cmp
sub
add
mov
stos
xchg
xor
les
stos
repz
adc
dec
stos
mov
rorb
or
add
and
les
cmp
fcmove
xor
fcmovnbe
mov
loop
int3
mov
pop
lds
rol
ss
sti
jmp
push
or
enter
mov
inc
pop
mov
jns
and
hlt
jbe
je
pop
enter
pop
xchg
and
aam
pop
popa
scas
xchg
pop
push
xor
ljmp
fwait
movsl
das
cltd
inc
cmp
inc
sub
inc
cltd
mov
lret
pushf
in
jecxz
insl
ret
add
adc
sub
gs
pop
jbe
xchg
ljmp
and
daa
jne
sbb
cli
or
test
adcb
mov
pop
mov
enter
dec
fnstcw
push
sbb
inc
movsl
aad
aad
out
lret
xor
fstps
testb
ret
in
std
add
and
repnz
inc
sbb
shl
test
ljmp
jno
lcall
mov
rcll
sti
cli
xlat
mov
push
iret
xlat
and
ljmp
mov
je
mov
sub
repz
adc
movsl
iret
orl
fwait
xlat
jno
lds
loop
cli
test
xor
scas
lcall
aad
xlat
in
mov
pop
pushf
mov
dec
xlat
sti
shr
mov
ljmp
xchg
mov
inc
lds
adc
and
jb
into
add
and
sbb
stc
cli
idivl
mov
stos
imul
inc
lock
xor
fstl
je
andb
mov
rcl
push
leave
inc
les
sti
inc
fbld
dec
jecxz
ret
jg
xchg
outsb
jmp
jg
es
out
and
cmpsb
sahf
mov
cli
insb
lret
sub
jmp
push
iret
mov
sub
fidivl
lahf
les
in
stc
scas
int3
jl
mov
mov
fisubrl
jnp
lcall
inc
lea
inc
jbe
mov
cmpsl
mov
ret
adc
pop
rcll
add
inc
xchg
push
out
fsubr
aaa
out
pop
jae
imul
sbb
sti
cmp
pop
jmp
xchg
divb
pop
cli
jmp
loopne
pop
repz
out
xor
daa
jmp
repnz
mov
std
fiaddl
lcall
ret
mov
mov
mov
mov
out
mov
jp
xor
inc
pop
sahf
xor
bound
and
pop
inc
pop
xchg
push
add
mov
mov
push
repz
lret
pop
jp
out
repz
ret
cmpsl
or
sub
ds
int3
fcomps
dec
lcall
popf
arpl
fdivr
mov
inc
movsl
jecxz
je
ljmp
std
ljmp
jbe
adc
repnz
cltd
sbbl
jecxz
addl
jmp
inc
xchg
jecxz
xor
fs
aas
sti
shl
sbb
je
inc
iret
loopne
testl
pop
mov
jg
adc
mov
flds
pop
in
fists
pushf
lea
mov
mov
outsl
ret
push
push
loope
fwait
xor
orl
mov
pop
fwait
int3
sbbl
push
insl
push
push
popa
les
xor
add
scas
jmp
push
jp
ja
inc
iret
in
loop
mov
std
repnz
mov
in
sbbb
lcall
ret
add
add
pop
xchg
mov
mov
push
mov
pop
and
add
fdivrl
hlt
fchs
push
jg
mov
and
xchg
ficomps
addr16
iret
mov
ss
mov
fildll
push
mov
cld
push
jmp
into
std
pop
inc
adc
inc
stos
fwait
inc
pop
jecxz
sbb
inc
sbb
ljmp
scas
mov
add
xlat
popa
rcrb
sbb
lock
stos
lods
cld
repz
hlt
push
ficompl
ss
or
pop
jmp
mov
pop
repz
std
stos
or
por
sbb
imul
push
dec
lret
sbb
jno
push
or
mov
cmp
aam
adc
and
loopne
dec
notl
xor
int
push
jp
addb
xchg
jmp
xor
filds
mov
xchg
or
or
out
mov
inc
inc
or
mov
xchg
xchg
mov
loop
add
cwtl
mov
addl
jecxz
sbb
dec
mov
mov
fdivl
fsts
sbbl
add
and
mov
or
push
ret
jno
push
and
adc
inc
jge
int
fiaddl
sbb
inc
xlat
inc
repz
in
jmp
cmc
lcall
or
push
jns
lret
test
negl
lods
adc
sbb
cmpsl
addr16
dec
mov
add
scas
adc
das
cmp
xchg
imul
sbb
mov
stc
mov
pop
sbb
std
mov
scas
xchg
lcall
pop
sub
xor
xchg
xchg
dec
std
fucomi
add
clc
bound
out
hlt
add
popa
stos
icebp
rcrl
sti
cld
rorl
popa
insb
aaa
cmp
int
xor
xor
dec
jmp
ds
out
insb
cmp
add
mov
sti
stos
and
stc
and
aaa
stc
pop
sti
ret
rolb
insl
popa
adc
mov
cmc
ficomps
test
and
sbb
adc
ret
jb
mov
popa
js
pop
out
push
add
movsl
mov
in
xchg
inc
std
mov
rolb
cli
xor
stos
out
mov
cwtl
cmpsl
lret
jns
dec
dec
leave
xchg
dec
mov
lds
jge
movsl
dec
jg
cmpsl
jp
xor
dec
fwait
insl
mov
dec
dec
ja
jb
ss
xchg
sahf
or
test
imul
cltd
lret
pop
dec
cmp
mov
rcll
lret
popa
sbb
xchg
aas
sbb
xchg
rcl
jnp
fsubl
mov
pop
ret
mov
shl
jae
jae
cmpl
and
pop
xor
mov
push
insl
sbb
out
xor
jnp
dec
or
fstpl
add
pop
mov
sub
in
dec
pop
ljmp
ss
xchg
or
push
xrelease
std
stc
jmp
xchg
popf
mov
mov
in
cmp
inc
or
lret
imul
subl
leave
out
fiaddl
inc
mov
sub
in
push
cltd
push
sub
xor
psubw
xchg
out
ret
push
loop
in
call
sbb
repnz
jl
fisubrs
cmc
leave
xchg
out
add
cmpsl
or
or
jnp
cmc
mov
clc
push
push
sub
jecxz
imul
in
ret
fcompl
xchg
mov
and
out
imul
scas
xor
pop
xor
mov
fs
inc
negl
mov
dec
pop
mov
nop
ljmp
scas
pop
in
clc
and
pop
lods
push
push
xlat
cmp
cltd
dec
pushf
cmpsb
ret
stos
xchg
ret
shl
je
sub
pop
out
sub
inc
fwait
inc
push
sub
movsb
push
in
dec
pop
fisubl
pop
xlat
addr16
dec
mov
xchg
in
insb
xchg
xchg
ficomps
outsb
and
cmp
addr16
xchg
rcr
cli
or
imul
xor
push
jp
cltd
mov
and
xlat
push
std
std
sbb
ds
gs
in
aad
push
test
mov
xchg
push
out
mov
pop
mov
push
mov
mov
dec
mov
and
aam
filds
testl
fdivl
and
inc
xor
popf
aad
data16
cltd
pusha
and
inc
frstor
fwait
add
xor
sub
inc
test
pop
adc
out
andl
pop
pushf
jo
in
insb
push
sbb
popf
cmp
fcoms
add
movsl
pop
mov
pusha
sub
shll
imul
push
xor
insl
xchg
cli
pop
inc
adc
jb
lret
inc
mov
ljmp
add
or
jg
sub
mov
adcl
in
repz
rolb
add
in
mov
pop
or
push
fnstsw
pop
fcoms
cld
rcll
and
sti
add
xchg
in
xor
push
lock
arpl
inc
cmp
mov
inc
andb
push
pop
pop
lods
shl
and
out
mov
pop
stos
jae
push
lret
dec
mov
insb
cltd
cmp
iret
jno
pop
adc
popf
jae
xchg
jmp
int3
jno
ss
and
jns
pop
xor
cmpsl
adc
imul
nop
push
mov
push
mov
stos
jl
sub
gs
ljmp
rcr
adc
imul
add
pop
mov
lahf
push
nop
xchg
imul
and
in
lods
gs
dec
xchg
imul
push
sub
std
sti
inc
lods
adc
mov
cmpsb
pop
mov
sbb
xor
aas
push
sbb
add
out
out
and
outsb
sub
mov
sub
sahf
cli
stos
jmp
lds
es
fucomp
lea
stc
mov
mov
insb
inc
xlat
lds
lods
aam
dec
int3
lods
add
jb
ret
xor
cmc
aam
xor
xchg
pop
mov
push
rcrl
xor
ficomps
mov
adc
fcompl
loop
hlt
mov
adc
dec
mov
insl
imul
movsb
jns
xchg
jecxz
rolb
shrl
push
mov
fbld
jmp
push
rolb
mov
lea
adc
mov
fs
mov
testl
orl
arpl
mov
pop
inc
sti
push
popf
sbb
push
sbb
jb
pop
rcrl
enter
rcrb
cmc
and
dec
and
mov
pop
pop
incb
subl
in
stos
fmuls
pushf
xchg
mov
aad
in
fucomi
lea
js
into
sbb
ret
js
and
jmp
addb
in
ljmp
aaa
int3
mov
xchg
rolb
add
enter
pop
sbb
xor
pop
mov
pusha
mov
mov
mov
xchg
xor
stos
xor
cmpsl
ret
inc
lods
mov
jmp
shr
out
lds
ret
dec
sar
pop
xchg
idivb
dec
inc
mov
push
or
in
pop
xchg
out
cld
popf
add
inc
or
adc
in
jecxz
jae
jle
scas
lcall
movsb
fnstenv
ljmp
cltd
jbe
mov
jge
pop
mov
aam
inc
cmp
or
testl
jmp
in
lahf
jb
pop
or
jg
add
out
sbb
ffreep
adc
iret
sub
mov
push
into
adc
pop
jp
das
decl
add
imul
inc
sub
fmul
in
sub
dec
stos
inc
or
cld
inc
xlat
mov
divl
fcmovnb
ret
dec
int
ret
in
fld
fiaddl
pop
jcxz
cltd
mov
jg
or
add
fnstsw
push
pop
xlat
into
sarl
outsb
pushf
fsubrl
and
mov
mov
dec
lods
jecxz
addr16
cmp
pop
iret
mov
pop
mov
clc
js
push
dec
nop
xchg
stos
cmp
push
roll
jecxz
sbb
lcall
add
outsb
xchg
fsubrs
dec
xchg
sbb
adc
test
adc
cli
mov
gs
xor
sub
out
jge
mov
xchg
imul
xorb
rolb
aas
dec
xor
dec
pusha
ss
stos
cli
push
cmc
ss
sub
xor
sub
sbb
push
xor
cmpsb
rep
xchg
jmp
jmp
int
insb
push
imul
enter
ss
lods
shll
rcll
out
adc
sbb
popa
sub
sub
mov
cmp
jae
xor
js
jns
rcll
in
pop
pop
dec
je
or
insb
mov
adc
jnp
inc
aas
in
lock
shlb
aaa
and
fs
lds
and
ja
or
push
aas
rcr
repz
cltd
dec
outsl
jns
jns
int
and
cwtl
xor
cmp
sbb
lcall
pop
data16
lcall
ss
xchg
xor
dec
movsb
sub
into
ljmp
bound
mov
cli
scas
in
and
cs
xchg
mov
adc
ss
dec
addr16
xorb
cmp
decl
pop
add
aad
mov
ret
test
xlat
dec
add
and
xor
jecxz
test
jg
lods
ljmp
sbb
mov
imul
add
jecxz
inc
pop
sbb
rcrl
and
mov
mov
dec
int3
inc
sbb
jge
inc
mov
pop
lds
push
pop
mov
outsl
mov
xor
inc
jo
fistpll
mov
or
push
adc
aas
popa
mov
insl
sbb
pop
xor
insb
xchg
out
or
jecxz
jne
ja
inc
mov
sbb
loopne
lret
sub
andl
orw
mov
mov
out
ret
xor
inc
stos
pop
xchg
jnp
cmp
fcmovnb
sbb
sub
inc
jae
xchg
gs
in
pop
jbe
test
dec
std
pop
jae
pop
enter
push
cmp
xor
lcall
pop
movsl
not
inc
in
out
mov
jmp
es
imul
addr16
mov
pushf
sub
sub
pop
adc
xchg
sahf
sbb
popa
pop
je
jp
add
shr
adc
decb
movsl
mov
jle
xchg
mov
xor
ja
out
and
aad
loope
in
test
inc
fnstenv
jl
adc
out
inc
sahf
fnstcw
out
or
mov
adc
ds
iret
and
mov
inc
adc
jmp
inc
fbld
js
insl
inc
inc
xchg
leave
lret
sbb
outsb
mov
fcoms
lahf
mov
imul
mov
xor
jp
xor
jge
das
and
sbb
mov
and
dec
and
out
adc
pusha
add
pop
push
pushf
adc
jnp
cmp
xor
sbb
ds
loope
and
xor
add
dec
mov
pop
xchg
js
adc
rcrb
xlat
jl
mov
push
inc
imul
mov
adc
mov
gs
in
cltd
push
lock
shlb
fldl
imul
fbld
inc
cwtl
jl
pushf
push
stos
mov
fmul
jno
cmp
popa
mov
stc
stos
fwait
and
xchg
cmp
cwtl
mov
xchg
das
lcall
pop
mov
test
cmp
lret
mov
cmp
ret
adcb
fidivrl
cld
lret
das
popf
push
inc
jne
incb
outsl
movsb
divl
fs
sub
mov
mov
jne
lret
out
out
add
mov
and
ja
push
dec
fnstcw
inc
lret
push
js
int3
lods
icebp
push
or
nop
mov
jae
faddp
lea
outsb
stos
inc
dec
dec
jge
mov
pop
add
cmp
fldl
pop
mov
mov
pxor
push
sub
xchg
test
inc
mov
imul
pop
into
aad
mov
insl
fimuls
mov
push
xchg
std
sarl
aad
sti
jmp
in
jecxz
arpl
repz
sti
add
fistl
ljmp
mov
das
mov
jne
pop
jge
les
into
inc
xlat
inc
or
loop
mov
ljmp
sub
lret
push
aad
mov
pop
int
cmpl
jne
mov
jecxz
sti
mov
repz
aas
lahf
inc
imul
stos
fnsave
cmp
xor
ret
add
jb
insl
mov
out
outsl
jns
or
dec
arpl
icebp
aam
dec
xor
xor
imul
sti
mov
les
jne
aad
push
mov
inc
dec
cmp
adc
pop
and
inc
scas
lea
stc
adc
inc
mov
xchg
push
jns
lret
mov
insb
lcall
inc
orl
hlt
mov
jge
shl
lret
sbb
jnp
sub
jge
icebp
mov
dec
xchg
lea
pop
pop
punpckhdq
dec
mov
iret
fsubs
mov
mov
orl
jp
fnsave
dec
jge
in
inc
push
xchg
dec
mov
fldenv
int
mov
fcompl
xchg
inc
int3
adc
inc
or
out
arpl
mov
xchg
cmp
mov
mov
addr16
jae
inc
mov
mov
jae
mov
jge
inc
ficomps
xor
sbb
push
lcall
stos
mov
stos
rcll
ret
xchg
lods
xchg
shll
cmp
or
ret
repz
xchg
ret
shll
mov
lret
scas
and
aad
add
fnstsw
mov
ret
pop
rcll
mov
rol
sbb
daa
loop
stos
jmp
sbb
mov
int
leave
in
sub
shlb
test
cmpsb
xchg
pop
mov
out
popf
mov
mov
cmp
ds
das
jmp
in
ret
fwait
mov
xor
nop
rcll
lock
or
jo
ljmp
jmp
sbb
sarb
sbb
jnp
mov
mov
sbb
jmp
pop
sub
scas
add
imul
imul
aas
lea
mov
cli
or
push
sbbl
roll
fbstp
mov
inc
in
clc
jmp
repz
jne
jle
dec
insl
int3
add
ret
les
sbb
adc
mov
decl
push
ret
movl
or
outsl
sub
hlt
sub
mov
je
xchg
inc
or
jmp
sbb
inc
xchg
fwait
jg
or
je
out
call
shlb
lret
in
int3
dec
mov
mov
loopne
jb
mov
out
push
stos
in
call
pusha
push
mov
jp
repz
addr16
add
jne
ss
aam
push
pop
ja
jae
outsl
loopne
mov
popa
sbb
pavgb
jbe
popf
cmc
fldcw
scas
icebp
cmp
popf
idiv
shl
adc
in
xchg
xlat
mov
lods
adc
rorl
xchg
jb
cmp
fnstcw
jmp
aam
loop
push
mov
cld
lret
pop
in
pushf
xchg
test
cli
jmp
xchg
rclb
pop
andb
lcall
jmp
pop
mov
jecxz
gs
fsubr
sti
cmpsl
andb
in
inc
lea
ret
xchg
xchg
sub
in
push
push
ret
and
inc
fldl
je
in
loop
add
ficoml
sub
mov
jmp
sbb
pop
pop
xchg
jmp
xor
mov
gs
test
fcmovu
and
jb
xchg
sti
and
cmp
lcall
gs
cltd
push
mov
jmp
outsb
mov
std
test
mov
in
xchg
in
jmp
sbb
jp
xlat
fidivl
imul
in
ret
inc
add
adc
dec
pop
outsb
jmp
cmp
ret
dec
mov
rolb
adc
ficompl
jmp
mov
pop
fsubr
pushf
cmpsb
xlat
cmp
in
mov
test
in
inc
add
mov
sbb
or
pop
push
jecxz
mov
inc
sbb
jmp
rclb
mov
cld
cmpsl
push
int3
xchg
sti
out
inc
push
flds
sbb
aaa
int3
sti
sti
sub
rolb
mov
fildl
jo
in
pop
mov
cmp
push
shrl
jmp
mov
xchg
into
loop
push
dec
xor
call
insl
test
lods
cmp
arpl
xor
inc
mov
xchg
in
aas
fidivl
sub
fcmovu
movsl
inc
xchg
inc
xor
dec
adcl
and
inc
jmp
xlat
in
fcmovb
inc
cmp
jae
in
xchg
jmp
test
xchg
xor
out
push
mov
mov
xor
xchg
dec
push
jae
fildl
mov
repz
jecxz
aaa
gs
sarb
rorl
ss
arpl
sub
in
inc
dec
xor
popf
flds
in
in
xchg
ss
mov
test
xchg
jp
ret
pop
pop
jecxz
in
mov
ret
stos
in
inc
lds
pop
xchg
or
ljmp
fldt
imul
fidivl
and
aaa
jbe
hlt
fisttpl
jnp
shr
rclb
cmp
and
cld
fstpt
inc
outsb
int3
fwait
sti
jge
gs
or
repz
pop
jmp
sub
mov
aas
fisttpl
xor
in
in
push
lcall
pop
mov
ret
inc
mov
push
je
in
inc
push
mov
sub
dec
sti
insb
ret
test
mov
pop
push
in
mov
nop
dec
ret
ss
rolb
mov
push
int3
xor
aam
jmp
in
mov
jmp
into
std
fwait
sub
jae
sbb
mov
lea
xor
or
inc
inc
pop
pop
movsb
ret
mov
xchg
ret
xchg
pop
sub
sbbl
ret
into
mov
cmpsl
inc
ljmp
dec
pop
ret
rolb
mov
and
ljmp
lea
push
stos
mov
stos
js
call
jmp
adc
mov
dec
into
jmp
mov
push
les
jmp
mov
pop
inc
jns
stos
or
loop
in
push
sti
mov
or
xor
fwait
out
fildl
in
sub
loope
ss
sbb
mov
orb
jae
and
es
int3
imul
ret
and
aas
inc
fwait
push
xchg
mov
push
sbb
mov
pop
ja
fwait
lods
mov
sub
rolb
sub
das
fstpt
mov
dec
data16
in
test
or
jp
loop
sub
mov
or
jb
popf
jmp
or
jb
inc
sti
test
fcmovb
adc
in
push
int
testb
mov
xchg
jns
mov
sbb
pop
in
aas
repnz
xchg
sbbl
rcr
and
inc
jecxz
add
cmp
push
jmp
out
pop
pop
popa
in
fstp
mov
inc
aas
in
in
stos
fisubl
test
jecxz
jmp
rolb
leave
or
sub
ljmp
sti
inc
push
push
in
loope
inc
rolb
ret
in
mov
xchg
inc
roll
in
cmp
in
in
ljmp
ret
inc
jecxz
and
aas
or
rolb
vcvtps2dq
test
xchg
ret
xchg
loopne
ret
sahf
or
dec
xchg
xchg
push
dec
jmp
aas
xor
inc
dec
or
fsubrl
sti
xor
mov
jp
sbb
and
adc
push
sub
lret
mov
and
lds
pop
jmp
add
lret
push
jecxz
xor
mov
adc
and
test
inc
xchg
insl
sbb
fsubrs
test
pop
imul
pusha
xchg
fs
les
push
add
push
ds
mov
xchg
or
cltd
cld
mov
divl
mov
xchg
in
iret
jmp
loop
std
loopne
lods
daa
sub
sbb
pop
mov
ljmp
xor
push
cmp
mov
adc
mov
cltd
icebp
test
notb
xor
rcrl
pop
jmp
stos
mov
ljmp
fsubs
pop
ss
mov
ljmp
and
lret
mov
mov
jmp
test
ljmp
in
mov
into
loopne
adc
call
insb
arpl
ret
push
inc
pop
xchg
fs
add
cmp
mov
pop
and
out
data16
pop
lods
mov
cmp
cs
in
push
or
push
loope
rorl
xor
cmp
fwait
push
pop
xor
mov
leave
imul
loopne
in
fmuls
dec
hlt
aad
push
or
dec
xor
filds
repz
sbb
xor
std
jne
stos
lahf
loope
xchg
jns
dec
sti
sbb
jo
adc
imul
lea
insb
popf
jecxz
inc
aas
pop
cmp
push
ret
imul
roll
jmp
jecxz
sti
rolb
mov
sbb
popf
mov
and
andl
sbb
and
mov
ljmp
cmp
dec
out
test
xchg
adc
mov
push
bnd
test
ljmp
js
jmp
xor
mov
xchg
es
into
dec
in
mov
and
push
push
pop
pop
ljmp
xor
je
mov
mov
and
lcall
hlt
loopne
cltd
fdivp
push
lea
sti
hlt
sti
jmp
pop
mov
and
push
pop
loopne
repnz
testl
and
sbb
sbb
pop
into
mov
test
loopne
mov
inc
scas
ret
inc
dec
mov
dec
lds
add
es
ljmp
push
or
rolb
sti
mov
push
int3
adc
mov
and
inc
xchg
imul
jle
aas
mov
dec
gs
sti
sbb
ret
jae
inc
dec
jnp
mov
ret
shlb
sbb
out
jmp
push
cmp
push
cmc
rorl
push
repz
push
in
insl
stos
ret
lea
jmp
cmp
loope
popf
cmpsl
sbb
lods
imul
mov
xchg
aaa
ret
ljmp
sbb
outsl
mov
pop
push
fsub
jle
cmp
sub
xchg
insl
gs
out
inc
and
inc
shll
stos
mov
faddl
push
push
popa
fdiv
mov
test
les
aam
jbe
push
mov
fninit
and
out
inc
lds
push
push
out
stos
xchg
repz
and
jae
sub
addb
xchg
sti
mov
push
inc
aam
out
jnp
xor
or
xor
cmc
mov
pop
imul
xor
leave
pop
lods
or
int
and
in
jg
nop
or
ret
fwait
jmp
xchg
shrl
and
mov
cld
lods
mov
inc
hlt
mov
cmc
xlat
and
in
fildl
push
lock
movsb
sub
adc
mov
decb
inc
jnp
pop
jl
jmp
mul
imul
and
and
out
mov
aam
stc
les
xor
push
mov
divl
xchg
and
aas
or
inc
jecxz
mull
mov
gs
pop
divb
mov
xor
loop
jmp
sbb
and
aam
orl
cmp
xor
fstpl
dec
xchg
pop
stc
jne
popa
les
add
in
adc
inc
jmp
test
mov
mov
inc
stos
fisubl
push
frstor
out
pop
in
std
cmp
adc
loope
iret
push
fadd
fistl
pop
push
out
ja
shll
test
sub
push
test
mov
clc
sbb
dec
addr16
fsts
sub
out
xor
fdiv
lds
movl
stos
cmpl
inc
xor
fwait
dec
subl
out
push
dec
xchg
cmp
int3
into
jae
or
outsl
adc
or
aam
aad
mov
mov
mov
inc
fisttpl
iret
lock
ss
push
insl
cmp
mov
popa
cmp
cmp
mov
push
aas
ja
xchg
cld
sbb
das
clc
cmp
fildll
pop
push
add
jne
loope
sbb
int
jl
lcall
add
fiadds
add
sbb
call
mov
inc
inc
mov
hlt
jge
out
cmp
mov
xchg
xchg
sub
leave
leave
insb
les
in
fbld
or
jo
stc
xchg
fadd
data16
push
addr16
or
add
xor
movb
divl
pop
repz
sub
mov
jmp
adc
insl
inc
cli
push
imul
mov
lock
aam
add
xchg
adc
mov
mov
or
jne
pop
idivb
sub
jae
and
ret
test
mov
pop
lds
ja
test
fwait
ljmp
repnz
mov
lds
push
sbb
sbb
adc
push
out
ss
movntps
dec
and
mov
sbb
xor
out
dec
jnp
dec
inc
test
or
ret
xor
scas
popf
mov
hlt
sub
jecxz
cmp
xchg
popa
out
push
pop
icebp
jmp
mov
cmp
rcr
enter
push
add
data16
push
loopne
sti
sbb
lcall
mov
sub
push
sbb
mov
adc
mov
jge
jl
jne
arpl
fiaddl
mov
pop
sti
shl
repnz
cmp
fcmovu
jb
imul
mov
negl
pop
in
pop
xor
ret
movl
fcom
addl
iret
adc
mov
xor
cld
stos
jle
filds
sbb
pop
push
mov
aad
jne
mov
dec
ljmp
ret
int
cmpsl
lcall
movsb
ficoml
rcrl
xchg
pop
rcrl
xor
enter
aam
jnp
movsb
loop
push
adc
mov
adc
and
mov
test
lahf
shlb
push
pop
rorb
jecxz
popa
sbb
cld
ja
lock
pop
adc
data16
stc
das
mov
nop
push
push
addr16
dec
sbb
dec
adc
mov
and
push
dec
adcl
mov
and
and
popl
daa
sbb
and
mov
lea
jnp
pushf
xchg
sbb
dec
sub
es
jmp
jmp
data16
ficompl
and
movsb
clc
insl
mov
fwait
repz
sbb
leave
jmp
and
dec
xchg
and
mov
pop
mov
loope
ret
inc
adc
mov
dec
fstpt
xchg
fs
outsb
and
sub
imul
xor
ljmp
mov
jne
cmpsl
mov
movsl
sbb
fildl
icebp
test
cmp
or
mov
outsl
dec
js
add
jecxz
icebp
aas
sbb
out
pusha
popa
ret
enter
call
push
testl
push
data16
cmpsl
ret
dec
pop
pop
dec
pop
jne
ja
jne
ficoml
push
push
cmc
push
sar
clc
inc
adc
dec
jg,pn
daa
std
dec
or
push
lea
mov
pop
pop
xor
mov
jmp
mov
fidivs
test
mov
aas
add
xor
leave
scas
push
jo
test
jl
jmp
jns
sbb
sub
test
or
mull
int
pop
ret
mov
negw
jo
mulb
inc
mov
rcrl
pop
and
pop
repz
push
mov
add
lds
push
jle
les
mov
sbb
adc
adc
jl
mov
jmp
out
lret
sti
cmpsl
adc
in
pop
std
gs
jnp
outsl
pop
add
movsl
add
mov
popa
xchg
sbb
pop
dec
stc
add
sbb
mov
xlat
movsl
mov
or
dec
pop
stc
or
pop
sbb
or
inc
push
mov
stos
ljmp
xor
leave
pop
cmp
roll
in
mov
insb
test
dec
add
aam
ret
cmpsb
sub
stos
or
mov
test
imul
outsb
or
sbb
test
loop
loop
in
insl
pop
lahf
loop
inc
sub
out
mov
xchg
std
or
daa
cld
in
scas
gs
sub
xchg
xchg
jle
add
push
subl
fisubrl
lea
inc
aad
lahf
fdivp
push
in
mov
test
xchg
fdivrs
mov
rorl
aas
xchg
cmpsb
inc
jp
stos
jb
push
ret
cli
push
aam
cmp
push
dec
jg
jbe
fmul
cltd
int3
inc
out
sbbb
lds
lods
jnp
in
mov
add
xor
inc
push
xor
pusha
cld
mov
mov
insb
inc
fucomi
popf
mov
xchg
mov
addl
pop
imul
out
pusha
push
pavgb
inc
lds
jmp
dec
add
leave
fiaddl
mov
dec
hlt
je
int
lds
gs
sub
call
sbb
movsb
sub
subl
sbb
repz
adc
mov
mov
xchg
xor
xor
das
in
xor
push
rcll
popf
push
in
or
and
dec
lea
adc
out
divl
push
and
inc
add
xchg
negl
push
inc
dec
mov
adcl
ret
cltd
popa
inc
ss
xor
lcall
leave
push
loopne
lods
sbb
and
clc
sarl
rcrl
dec
and
jle
mov
dec
leave
inc
aam
loop
lds
sbb
add
mov
or
xor
pushf
movsl
jo
inc
sub
jecxz
test
pop
lds
ret
push
inc
loop
push
std
es
adc
loope
or
push
push
out
notb
adc
xor
int
push
jp
leave
cmc
cmp
imul
arpl
jne
lods
shrl
ljmp
sbb
or
aam
insl
cmp
in
lahf
pop
into
dec
sbb
dec
loope
jge
out
mov
mov
in
test
lock
stc
fcomps
sbbb
add
test
pop
inc
bound
rcr
cwtl
pop
adc
inc
fsubrl
aam
push
push
pop
mov
pop
mov
clc
lds
test
cmc
mov
adc
and
mov
fcompl
out
movswl
in
int
dec
mov
les
dec
pop
scas
fisubl
cmp
fwait
leave
iret
hlt
loopne
sbb
insl
push
xchg
int3
leave
adc
mov
sarb
mov
xor
sbb
negl
xchg
scas
subl
negl
out
jecxz
sbb
je
stos
mov
insl
sbb
lea
xor
pop
mov
pop
mov
stc
out
push
in
inc
mov
and
cmp
mov
ds
pop
push
pop
popa
rorl
pop
les
add
inc
jae
push
or
out
lods
sbb
sbb
ret
cli
sub
push
mov
arpl
xchg
pop
inc
or
xchg
sbbl
in
jecxz
inc
aam
dec
and
push
sub
pop
mov
cmp
sbb
ret
add
mov
ret
pop
cmpsl
loopne
cmp
or
in
push
dec
cltd
syscall
and
jne
pop
add
add
imul
arpl
out
rclb
loop
leave
ljmp
push
incb
adc
inc
std
loop
test
es
andl
push
and
cmp
cli
hlt
jns
push
dec
cmp
ss
push
cmp
and
cmpsl
cmpb
xor
sbb
pop
xchg
mov
les
lds
testb
dec
lea
cmpsl
fwait
mov
fsts
loope
mov
fsts
cmpsb
sub
push
sub
fcompl
fsubrl
or
stos
add
pop
xor
lods
xchg
push
pop
mov
jnp
shrb
inc
enter
das
sbb
xchg
pushf
vpaddb
sti
or
or
mov
call
mov
andb
je
or
dec
xor
or
xchg
sbb
out
scas
out
in
aad
fwait
pop
adcb
sub
cmp
inc
push
adc
push
test
es
ret
and
mov
mov
loop
das
jae
es
sub
push
daa
adc
sub
mov
jg
adc
fnsave
inc
xchg
fcoml
mov
shl
mov
push
mov
xor
ror
je
pop
jle
cltd
test
sbb
mov
xchg
push
jge
and
jno
or
leave
sbb
sub
push
fwait
mov
out
lret
mov
jg
cltd
sbb
sbb
cld
mov
pavgb
xorb
test
stos
adc
sub
fs
and
xor
addl
push
pop
jmp
and
add
out
and
lcall
fldenv
insl
inc
mov
mov
outsb
xor
lahf
icebp
sub
xchg
adc
imul
xor
fcmovnb
inc
cli
rorl
rorb
pop
insb
neg
sub
stos
imul
lea
out
cmp
adc
inc
je
mulb
pop
sarl
adc
fiadds
push
jnp
popa
and
gs
je
mov
sbb
ljmp
cwtl
jmp
pushf
jmp
push
jmp
push
cmpsb
ror
or
insl
or
jmp
push
inc
adc
inc
shll
and
negb
jl
xlat
add
pop
jg
popf
adc
xchg
addr16
dec
jge
xlat
mov
xchg
gs
xchg
aam
int
es
nop
pand
and
pop
mov
mov
push
ja
ret
mov
pop
sahf
ret
ljmp
enter
loop
pop
fwait
dec
and
shrl
cmp
addl
fcoml
pushf
inc
jmp
mov
lds
je
movntps
movsb
push
xor
and
mov
pop
push
xor
sti
pop
jno
mov
mov
sub
addr16
sbb
adc
jle
inc
dec
out
ret
jl
int
sbb
loop
mov
test
iret
sbb
mov
in
push
push
push
addr16
sbb
out
neg
arpl
mov
ret
mov
rcrb
cltd
shll
insb
or
xchg
shll
dec
insl
mov
in
jns
adc
pop
inc
repnz
cmpsb
out
jb
jbe
mov
mov
popa
out
pop
sbb
xchg
add
mov
fdivs
jmp
out
mov
mov
jb
pop
jecxz
xchg
divb
push
xchg
sahf
popf
in
and
outsl
or
lahf
fcoms
jmp
leave
imul
sub
and
xor
addr16
sti
fwait
sub
ljmp
lods
xchg
xchg
inc
imul
fs
loop
push
hlt
push
mov
mov
test
inc
push
icebp
jbe
test
aas
mov
popa
add
add
shlb
imul
xchg
xchg
lods
add
aad
xor
dec
dec
jns
sub
dec
xor
jb
or
xor
pop
sub
push
ja
into
xlat
lret
pop
jmp
and
or
sub
leave
dec
sbb
data16
mov
ficomps
jmp
pop
ret
xor
mov
test
es
int3
dec
adc
in
and
xor
not
or
sbb
sti
lock
std
loopne
loope
ficoml
leave
push
pop
lods
inc
jno
out
jg
cmpsl
lds
sub
test
aam
mov
push
jnp
mov
test
mov
sbb
xor
adc
jmp
into
int3
in
outsl
fbstp
cld
sbb
insb
icebp
es
call
xor
mov
popf
ror
adc
dec
xchg
or
pop
xchg
ficoml
push
or
xchg
adc
fstps
fwait
repnz
lds
fisttpl
arpl
imul
dec
mov
mov
add
repnz
add
sbb
dec
mov
or
loop
pop
xor
lods
cmp
or
lock
negb
ja
jno
pop
into
adc
or
rcrl
leave
pop
adc
xor
or
mov
add
sti
or
mov
sbb
into
cld
or
mov
xor
fmul
pushf
stc
out
popf
call
pop
addl
pop
xchg
filds
push
test
mov
loop
cli
addb
jo
xchg
mov
cmp
cmp
cmpsb
and
repz
inc
test
mov
ret
pop
hlt
fs
or
stos
xchg
data16
mov
popf
popf
add
cmp
cmpsl
sbb
out
iret
sub
test
aam
mov
and
sahf
hlt
sbb
xchg
lods
xor
leave
adc
out
dec
jno
bswap
push
cmpsb
shl
int
inc
mov
jle
inc
or
sbb
stc
insl
gs
fidivrl
mov
enter
pop
cmp
xchg
push
cwtl
aas
inc
mov
int
jns
test
add
mov
xchg
pop
pop
int3
push
mov
mov
inc
and
pop
mov
inc
and
out
mov
js
push
ja
loope
lcall
pop
outsl
mov
inc
push
ret
out
push
sub
in
ds
adc
inc
mov
addr16
shll
ljmp
pop
insl
sbb
test
lds
das
mov
cmpsl
add
dec
inc
pop
andnps
lahf
pop
int3
and
sub
mov
scas
jp
rcl
arpl
sbb
pop
pusha
testb
test
xor
fcoml
sbb
cs
xchg
pop
mov
mov
sbb
pop
sub
xchg
lock
pop
jmp
or
popf
fidivrs
sbbb
das
push
sbb
loopne
rcl
cmp
pop
add
dec
aad
aam
mov
cli
add
pop
cmc
aaa
jmp
popf
and
inc
mov
cmpsb
lods
push
cltd
dec
ret
mov
cmpb
les
or
sbb
in
shll
out
fisubrs
ss
popa
adc
inc
dec
sahf
clc
inc
std
mov
xchg
push
ficoml
iret
mov
out
and
xor
push
mov
ds
loop
loope
or
jns
call
push
add
mov
sub
pop
and
addr16
fisttpl
mov
out
lods
cli
push
inc
mov
add
repz
out
inc
pop
jo
ja
mov
xchg
daa
xor
std
lds
ljmp
inc
mov
adc
into
out
xchg
pop
mulb
and
push
movsb
mov
pop
push
cmc
out
jae
mov
or
shl
enter
push
in
nop
sub
das
adc
push
adcb
fnstcw
and
sbb
sbb
outsb
dec
sti
das
jecxz
pushf
stos
push
pusha
ljmp
fsts
push
mov
pop
pusha
insb
push
cmpb
das
xor
rcrl
leave
push
lods
lret
das
lea
mov
dec
mov
roll
push
and
nop
mov
inc
inc
ds
scas
xchg
aas
fsubrs
jae
dec
movsb
xor
push
adc
sbb
mov
shl
jnp
inc
test
or
test
out
pop
je
mov
sti
jg
inc
jae
push
xor
int
adc
ret
jecxz
out
insl
pop
sub
pop
lret
clc
jecxz
in
sbb
in
add
xlat
fistpl
jg
clc
jno
imul
or
int
lahf
sarb
sahf
push
or
jg
fsubrl
inc
or
cltd
arpl
push
ret
push
or
movl
pop
push
inc
xor
push
or
js
mov
lods
push
mov
sbbb
cmp
jo
mov
mov
flds
ljmp
out
sbb
loope
imul
repnz
cmpsl
inc
outsl
xor
in
add
mov
out
mov
stos
mov
iret
dec
adc
mov
push
in
sub
popf
mov
jo
inc
sti
jmp
shrl
filds
and
shlb
sbb
xchg
lahf
and
dec
jno
push
arpl
dec
stos
or
mov
orl
scas
or
test
push
ja
inc
adc
or
out
daa
xchg
fstpl
jmp
push
dec
fs
and
sbb
mov
test
imul
mov
cmp
mov
sbb
fiaddl
daa
std
jmp
xlat
sub
ret
lods
ljmp
lcall
loope
push
mov
cmp
dec
cmp
aaa
sbb
dec
cmpsb
leave
out
cmp
sbb
push
test
sarl
imull
arpl
mov
jmp
lsl
in
dec
cmp
inc
sahf
pop
and
inc
loop
jnp
ret
loope
les
ffreep
add
cltd
ss
xor
nop
adc
sub
or
inc
ret
insl
jae
lea
inc
fdivs
cld
loopne
sbb
cmp
pop
in
pushf
repz
popf
add
cltd
push
fwait
mov
sbb
and
ljmp
js
mov
cmc
loope
inc
mov
pop
gs
add
aam
pop
pop
out
sbb
loopne
call
imul
test
pop
int
mov
shll
jne
dec
arpl
repnz
pop
das
xlat
stos
cmp
and
cmp
outsb
mov
xchg
test
pop
inc
test
mov
jb
sub
cmp
pop
int
movsl
cmp
addl
in
lcall
outsl
popa
dec
sbb
mov
push
fidivrl
pop
cmp
imul
push
divb
arpl
pop
or
or
and
into
push
in
aas
test
rcll
push
test
fsubrl
cmp
sub
or
popf
inc
adc
inc
xor
aaa
jmp
or
sbb
ja
ljmp
jno
cs
fsts
fst
lahf
stos
xchg
jmp
inc
or
mov
test
sub
xchg
enter
jb
mov
xor
add
and
jmp
xchg
outsl
xor
ds
mov
sbbb
inc
int
in
mov
xchg
sbb
dec
mov
mov
leave
cs
adc
cmp
mov
fiaddl
cs
mov
incl
jp
pop
sub
jp
and
sub
ljmp
flds
xchg
int3
mov
mov
or
xchg
leave
test
test
mov
cmp
sub
out
rcrl
jnp
add
fsubrs
shll
pop
sub
mov
mov
mov
pop
pop
orb
mov
cmp
sub
scas
and
xchg
popf
repz
sbbl
je
pop
pop
sti
arpl
sbb
push
pop
xchg
fadd
aam
pop
mov
jecxz
scas
test
hlt
cmp
adc
fmull
ds
std
into
mov
rcrb
inc
mov
push
lret
scas
mov
js
dec
pusha
xor
xor
aas
in
xor
push
fisubrl
sub
ss
push
xchg
sub
jl
mov
lock
cmp
xor
popf
sbb
sbb
pop
ret
fwait
aam
jno
lret
iret
fsubrl
fcmovu
push
sub
in
movsb
push
jo
push
movsb
mov
outsb
pop
mov
push
out
ljmp
add
push
iret
sbb
xor
mov
mov
mov
es
iret
add
mov
jecxz
push
lea
cmp
es
std
pop
shrl
mov
sbbl
outsl
dec
cmp
mov
bound
rcr
cmp
add
mov
pop
and
or
push
dec
out
mov
out
cs
lds
add
jg
testl
sub
fisttpl
push
and
mov
jmp
add
cltd
ljmp
out
arpl
mov
pop
jmp
dec
inc
gs
lea
sbb
jecxz
arpl
or
add
lea
sarb
mov
ljmp
jo
mov
mov
lret
subl
jnp
adc
push
test
lock
and
sbb
stc
scas
xchg
mov
adc
js
xchg
fsubr
in
jbe
adc
push
pop
daa
adc
ss
stos
aad
loope
ja
cmp
cmp
sbb
adcl
aaa
sbb
or
fdiv
mov
shll
out
mov
jno
mov
cmp
fwait
sbb
jne
dec
loope
inc
and
mov
push
or
push
call
outsb
inc
insb
sbb
pusha
mov
imul
ds
add
repz
pop
leave
les
pop
mov
shr
fidivrs
mov
imul
cmpsl
xchg
mov
mov
cmp
adc
push
popa
push
mov
lahf
aaa
repnz
popa
imul
sbb
xchg
rcrb
cmp
inc
adc
or
or
jge
shll
inc
cmp
add
sbb
hlt
repnz
adc
fadd
das
imul
out
or
aaa
xor
cmp
jmp
mov
mov
imul
dec
add
sbb
ds
sbb
arpl
or
xchg
mov
add
movb
add
cmp
cmpsb
sti
ret
dec
rcll
in
inc
repnz
imul
hlt
jmp
sbb
cmp
movsl
mov
pop
jo
push
and
jnp
or
leave
ds
sarl
fnsave
das
cld
icebp
push
lods
adc
jge
in
lcall
orb
xor
mov
ret
cmpsl
jne
repz
or
push
shl
dec
dec
hlt
xor
mov
or
cmp
cmc
lcall
adc
pop
mov
lret
pop
push
fildll
adc
sarb
push
leave
pop
addr16
mov
enter
out
ds
fisttpll
sbb
in
dec
push
jns
insl
aad
mov
cltd
jecxz
jp
xchg
test
fbld
inc
outsb
jae
bound
faddp
mov
jbe
rcrl
push
cld
mov
mov
in
cmpsl
mov
lret
xchg
and
sub
and
jge
mov
imul
aas
jae
add
sbb
ds
mov
movsl
mov
test
mov
out
popa
inc
cwtl
fiadds
jmp
mov
scas
xchg
mov
push
imul
adc
inc
xor
ret
imul
lea
cmpsb
xor
insl
sub
imul
in
sub
pop
mov
aam
jp
jecxz
mov
ds
in
mov
aad
cmc
mov
dec
fcoml
andnps
addr16
imul
add
popa
mov
lea
maskmovq
testl
mov
xchg
fcmovu
adc
mov
mov
xor
add
cs
jmp
mov
pop
cmp
and
fstpl
inc
and
push
idivl
jmp
jl
bound
or
fbld
cld
popa
ret
mov
jge
in
cmp
sbb
sub
ljmp
inc
xlat
inc
lret
xchg
mov
lea
add
into
xchg
dec
sbb
dec
jb
cmpsl
push
insl
inc
mov
decl
sbb
ret
push
jge
inc
dec
cli
aaa
rcrl
lea
sub
arpl
dec
cmovns
decl
inc
and
adc
sbb
dec
int3
fmul
sbbl
stos
pop
mov
sahf
xchg
sti
int3
inc
mov
dec
movb
jecxz
mov
xchg
fimull
push
hlt
pushf
into
sbb
jmp
or
add
xchg
cli
nop
fidivs
gs
dec
std
lahf
fldcw
push
std
mov
in
out
push
mov
test
push
or
cmpsb
popf
lea
adc
mov
ficompl
popa
out
inc
jecxz
ds
into
mov
pop
pop
arpl
orb
gs
mov
mov
jecxz
popf
inc
test
dec
dec
in
pop
sti
aam
aas
repz
cltd
jbe
addr16
sbb
test
jecxz
sbb
cld
mov
cmpsl
mov
addr16
or
mov
add
mov
in
cmp
and
sub
inc
mov
jecxz
push
fdiv
cld
mov
mov
mov
rcll
jnp
ret
and
jae
fistl
in
or
sar
add
jmp
sbb
jecxz
adc
sti
std
sub
repz
and
mov
cmp
cmpsl
xor
mov
add
inc
sbb
pop
repnz
mov
movsl
cmp
fcomps
pop
stos
mov
mov
push
and
add
mov
push
push
aad
add
std
stos
neg
add
add
lods
sbb
fwait
mov
push
cmp
push
dec
iret
sbb
jmp
fiaddl
sbb
inc
lds
lea
mov
xlat
imul
fcompl
scas
add
sbb
jl
push
out
fadds
fisubrs
fidivl
mov
lods
sbb
out
cmpsb
sbb
filds
xchg
mov
cmp
fwait
xchg
sub
test
out
and
cmp
std
mov
inc
push
fadd
stos
mov
ds
sti
std
dec
jg
loop
inc
aam
out
cmpsl
inc
das
bound
loop
sarl
cmpsl
sbb
mov
inc
pop
adc
jmp
sub
in
xchg
pop
insl
and
sub
push
jmp
xor
out
lods
sub
mov
xchg
in
push
popf
jmp
mov
outsl
in
pop
sbb
jecxz
imul
popa
mov
mov
cmp
int
sbb
neg
movb
mov
std
pop
ret
pop
adc
mov
std
mov
inc
cwtl
sti
cli
dec
xor
pop
dec
sbb
gs
out
add
fisubs
vcmpsd
leave
fdivl
push
stos
ret
daa
adc
shlb
fmul
test
xchg
in
push
fistpl
int
sbb
dec
imul
ret
mov
aas
inc
xchg
mov
cmp
mov
repnz
imul
imul
fidivrl
add
stos
cmp
rolb
inc
adc
sbbl
push
das
push
or
sbb
clc
into
inc
nop
in
sti
jbe
dec
in
dec
adcl
ds
pop
push
mov
pop
or
clc
jae
cmpsl
xchg
testl
dec
fildl
mov
test
sti
pop
push
sti
into
dec
mov
mov
jae
xchg
loop
sub
mov
lock
cmp
push
fsubr
cmc
in
faddl
inc
inc
pop
mov
pop
sbb
inc
lock
sub
add
mov
in
xorl
cmpsl
push
push
and
sti
lock
jne
jnp
jb
xchg
push
push
arpl
mov
xorl
push
jmp
dec
test
inc
sub
jg
jmp
xchg
xchg
lcall
inc
jl
xchg
insl
in
lea
and
push
jno
dec
test
mov
xchg
adc
xlat
addl
rolb
cmp
fisubs
out
aad
pop
clc
xchg
das
inc
xchg
scas
sbb
insl
push
sbb
es
imul
xchg
jg
repnz
in
adc
in
jmp
imul
sbb
pop
les
cmpsl
sbb
mov
and
sbb
add
jnp
test
dec
jne
mov
push
pop
and
adc
arpl
daa
mov
mov
into
push
adc
stos
sub
cwtl
xlat
rol
push
lcall
loopne
dec
lea
mov
daa
dec
push
inc
rorb
adc
fiadds
rcrl
cmp
out
test
add
xlat
int
into
cmpl
in
out
xchg
les
addl
ljmp
lods
push
pop
nop
jg
mov
gs
inc
push
addr16
into
xchg
test
or
pop
sub
and
mov
stc
out
push
in
shlb
andb
test
push
mov
iret
out
add
test
icebp
sbb
jge
and
pop
pop
add
add
pop
ficoml
pusha
mov
inc
dec
inc
test
call
insl
xor
ret
pusha
pop
cmpb
out
orb
pop
fabs
add
loop
cli
lea
inc
add
lds
ret
shll
mov
aam
out
sub
pop
ds
gs
mov
jno
pop
les
roll
fdivrs
adc
jmp
lcall
les
cmp
iret
insl
imul
jge
pop
pop
jl
mov
pop
cmp
inc
sti
xchg
mov
fnstsw
pusha
std
fisubs
mov
jmp
scas
lods
push
int
jne
jmp
mov
sahf
sahf
xor
xchg
jecxz
xchg
imul
loopne
sbbl
push
cmp
mov
ss
xchg
jae
push
popf
scas
test
test
fwait
jbe
mov
aam
loop
mov
fdivrs
mov
sub
push
inc
sti
xchg
jle
jge
lods
push
jle
fdivrp
jge
movsl
xchg
aam
mov
bound
test
cli
jb
loop
xchg
fimull
cmpb
fistl
jp
inc
mov
add
sti
mov
rcrb
out
xchg
ljmp
jecxz
sbb
sbb
lock
jnp
add
mov
jg
fwait
ret
imul
scas
ficoml
cli
push
pop
fbld
or
mov
pop
sbb
gs
in
jge
addl
xor
aas
and
sti
fcoms
mov
and
sti
sbb
pop
inc
sub
fucom
sbb
cltd
mov
out
mull
mov
loopne
clc
and
std
sbb
jno
mov
iret
ret
dec
ljmp
mov
cmpsl
add
sbb
mov
cltd
ljmp
mov
jp
mov
inc
lret
sahf
mov
mov
mov
leave
or
test
xlat
mov
negl
push
or
loope
stos
jne
mov
lock
stc
sbb
jmp
or
or
xchg
shl
andl
movsb
repz
imul
fmuls
xorb
xchg
dec
or
jno
xchg
fwait
add
adc
icebp
mov
frndint
lahf
rcrl
sub
stos
loopne
lea
bnd
cltd
xor
in
mov
jle
fbstp
icebp
and
push
fsubrl
icebp
mov
mov
popa
in
cld
push
into
mov
ljmp
scas
pop
xchg
inc
inc
pop
adc
add
test
push
jp
sbb
pop
iret
lea
dec
fwait
inc
insb
je
out
pop
lds
xor
std
mov
in
inc
jg
inc
add
ret
and
cmp
aad
repz
or
mov
lea
mov
insl
jae
int
fstpt
add
add
in
jo
je
loop
testl
negl
dec
lea
cld
push
in
jecxz
inc
lea
inc
and
ret
daa
mov
clc
pop
mov
stos
ror
sbb
or
outsl
push
stos
loop
scas
insl
imul
ja
mov
dec
das
jo
lock
mov
add
inc
sti
popf
push
mov
dec
or
cmp
jo
lea
adc
jno
imul
int3
sbb
mov
and
std
imul
and
es
insb
fidivrl
inc
sbb
add
jb
aas
fwait
jp
adc
push
in
clc
dec
sbbl
aam
out
push
xor
jecxz
jbe
push
arpl
jbe
clc
fcmovb
cmp
fwait
sbb
xor
insl
arpl
ret
popf
sbb
outsb
cmpsl
jnp
test
je
push
pop
pop
sar
jne
mov
mov
cmpsb
inc
or
sub
jmp
push
mov
add
inc
std
xchg
mov
std
in
dec
xchg
jmp
outsb
pop
sub
inc
stos
ret
cmp
cltd
sbb
cmpsb
in
xchg
xchg
inc
inc
fistl
cmp
je
inc
fistpl
mov
je
loop
lea
jb
inc
mov
jp
push
or
je
fisttpl
xchg
fldt
inc
inc
popa
mov
or
and
xchg
je
add
mov
addr16
cmp
cwtl
push
imull
out
pop
add
sbb
or
xchg
lahf
stos
hlt
cmpsl
icebp
movl
sbbb
jmp
fcmovnu
outsl
push
outsl
rorl
lret
pop
fcmovne
push
lret
jle
loope
jb
popf
movsl
cld
popf
sbb
mov
pop
ljmp
sub
fsubrp
mov
lods
fsubs
sub
mov
movb
or
movb
adc
mov
push
ret
pop
ljmp
dec
adc
jmp
pop
clc
stc
stos
enter
sbb
cmp
jnp
fiaddl
jno
insb
add
pop
adc
jae
stos
das
les
repz
push
pop
pop
fnstenv
test
jecxz
sbb
jnp
inc
dec
cmp
les
jnp
xchg
xchg
test
xchg
sub
xchg
sti
dec
xor
inc
mov
jl
loope
cltd
push
ret
nop
les
mov
das
fucomi
pop
add
addr16
loopne,pt
fcmovbe
xchg
cwtl
xchg
in
aam
in
imul
scas
sbb
cmp
push
push
and
adc
push
jp
out
rcr
leave
dec
fdivr
hlt
xor
inc
rcrl
xchg
sub
sbb
xchg
mov
mov
jns
xchg
iret
jae
sub
inc
mov
xchg
inc
loop
das
enter
mov
mov
loopne
push
push
adc
xor
push
sti
scas
mov
je
xor
es
gs
mov
push
sbb
int3
inc
imul
push
rolb
mov
mov
fstp
lds
and
and
mov
and
std
cmc
repnz
jg
inc
arpl
rcll
arpl
imul
hlt
clc
cli
jae
ja
subb
push
sarb
sbb
lods
icebp
es
push
sub
repz
sub
negl
lods
jno
insb
xchg
cmp
push
dec
cli
dec
inc
and
push
jno
pop
addl
sub
ret
mov
repz
lods
ja
insl
addr16
mov
in
loopne
cld
pop
cmp
inc
add
inc
ljmp
icebp
pop
jno
jnp
cmp
push
mov
jo
ret
cmp
sub
jnp
mov
cmp
dec
in
dec
iret
adc
jge
lret
push
nop
insb
mov
xor
cld
mov
adc
repnz
js
mov
sahf
sti
jmp
pop
fidivrl
scas
rcl
in
add
es
and
sbb
mov
inc
and
xchg
mov
sar
leave
cmp
add
sub
fisttpl
sbb
mov
clc
shlb
mov
jbe
xchg
imul
add
imul
scas
adc
sub
insl
lea
sbb
jl
stos
or
das
fsubrs
jno
xchg
movsl
movsl
sbb
jg
gs
jnp
data16
mov
mul
rorb
stc
or
aad
mov
fildl
ljmp
inc
imul
dec
insl
popa
adc
pop
adc
pusha
cmp
push
jcxz
hlt
jp
jecxz
cmpsl
stos
in
fldl
xchg
test
jmp
jl
pop
add
sub
cli
popl
pop
ljmp
test
cmp
clc
arpl
jp
add
lock
and
inc
int
jno
dec
push
jno
push
fisttps
fs
sbb
inc
pop
notl
pop
add
jbe
sbb
gs
and
xchg
fcmovu
lds
cmp
push
insl
xchg
shlb
push
mov
cmp
daa
das
pop
cmp
inc
fs
cmp
xlat
in
gs
pushl
loopne
mov
out
mov
mov
add
mov
lds
cmp
mov
or
xchg
jecxz
mov
inc
rcl
or
add
sbb
aas
push
sbb
call
dec
pop
jo
lret
sbb
sbb
mov
std
ret
frstor
imul
jecxz
sbb
data16
leave
std
mov
push
jns
or
pop
pop
shll
out
mov
sbb
dec
xor
jmp
mov
pop
int
sub
mov
mov
daa
jmp
popf
and
cmpsb
ret
dec
xor
les
inc
fs
cmp
ficoml
fadd
stos
lods
xor
push
mov
sbb
mov
fcoml
cwtl
imul
icebp
xor
pop
mov
repz
aaa
cmp
lret
mov
sbb
jecxz
push
xchg
sbb
mov
sbb
lret
sbb
test
sbb
sbb
pop
fwait
and
iret
mov
mov
ss
outsb
fdivrs
ljmp
push
sub
cwtl
lea
fldt
roll
pop
mov
aam
orl
aam
repz
adc
mov
jb
or
adc
ret
xchg
repz
stos
subl
mov
sub
sub
mov
enter
lahf
sbb
push
fwait
pop
ljmp
imul
ljmp
or
jae
add
or
sbb
add
int3
adc
and
sub
cmp
and
pop
out
sbb
jmp
loope
xorl
sub
test
xchg
lret
nop
mov
outsl
hlt
add
jmp
and
stc
fs
mov
aam
aaa
push
fisttpll
lea
cmp
aam
mov
pop
jmp
jo
pop
jns
push
mov
popf
out
push
out
pop
mov
xchg
rclb
cmp
dec
pop
inc
sbb
push
jae
lahf
or
push
int
add
push
add
push
fistl
mov
loop
out
sub
jecxz
xchg
lds
jo
jmp
dec
int3
movsl
adc
aad
lret
fdivrs
rol
lods
cltd
loopne
in
int3
shl
adc
in
and
shl
and
or
mov
lret
mov
mov
insb
out
and
arpl
dec
cmpsl
jecxz
cltd
dec
dec
fstps
fsubrl
sbb
ret
inc
dec
stos
sub
cmpl
stos
cltd
dec
ret
mov
mov
mov
dec
jae
ret
arpl
xchg
mov
jbe
xor
mov
jae
bound
add
jb
sbb
or
in
add
int3
adc
cmp
sub
out
sbb
cmp
lods
jl
mov
adc
xchg
pop
ljmp
and
xchg
leave
fstp
sbb
jge
inc
arpl
jge
bound
cmc
jmp
sbbb
test
push
leave
or
rcr
mov
cmpsl
jecxz
repz
jecxz
mov
mov
mov
inc
push
gs
aas
mov
xchg
cltd
pop
jmp
cmpsl
push
fmuls
mov
inc
inc
jae
jmp
mov
test
pop
inc
mov
jnp
and
subl
add
push
mov
cmp
sub
sbb
push
lahf
adc
adc
fidivrs
ret
cmp
add
pop
enter
lds
and
cmc
push
inc
iret
call
enter
push
adcl
je
inc
jns
pop
push
loopne
ret
pop
mov
ljmp
inc
test
adc
addb
fdivrs
es
jcxz
push
sub
popa
int
xor
aam
sub
mov
sbb
inc
pop
xchg
aam
addr16
cmp
ljmp
pop
enter
dec
stos
ficompl
mov
jmp
call
test
test
xchg
out
and
js
addr16
adc
mov
int3
ret
adc
ja
xor
imull
stos
dec
imul
in
pop
inc
xchg
dec
xchg
imul
pop
sbb
push
mov
xchg
xchg
testl
xchg
repnz
lods
loopne
xor
inc
mov
ds
out
iret
mov
inc
xor
int3
rcrl
mov
dec
in
scas
add
pop
call
in
pushf
dec
ds
sbb
inc
out
pop
xchg
cmp
in
xor
xchg
test
gs
add
outsl
sbb
add
pop
jecxz
pop
xor
mov
push
in
ss
faddl
ret
inc
inc
add
test
mov
pop
aas
jmp
mov
mov
mov
inc
cmp
push
insb
scas
scas
popa
push
insb
pop
push
add
add
popf
lea
add
sbb
mov
int
sub
dec
or
ret
sti
jno
and
lea
aas
push
push
pop
jecxz
repz
ljmp
and
jp
fdivrs
rorl
xor
popa
les
and
sbb
add
mov
xor
xlat
push
stos
xchg
int3
daa
pop
mov
xor
fwait
repz
aam
fimuls
sbb
jmp
mov
rolb
daa
ret
rcll
gs
mov
mov
fistl
negl
fldenv
nop
xor
adc
lret
ret
test
dec
cmp
mov
or
and
imul
pop
cmp
insl
stos
out
xchg
arpl
call
sbb
sti
repz
cmp
mov
out
and
ret
scas
xchg
mov
popa
fdivs
mov
stos
cld
push
call
or
shrb
jmp
outsl
out
push
or
outsl
sbb
das
nop
lcall
mov
cmpb
add
pop
cltd
push
int3
or
out
cmp
or
jno
fistpl
dec
fdivl
xorb
outsl
fs
push
xchg
cltd
ljmp
push
or
fnstenv
aaa
icebp
roll
ret
and
mov
xchg
xor
imul
fucomi
loopne
imul
mov
push
sti
enter
lods
ja
hlt
fisubl
insl
lea
mov
addr16
in
dec
out
out
dec
mov
inc
ds
out
cltd
xor
mov
bound
xchg
jo
stos
and
xchg
xor
jcxz
repz
movsl
mov
jnp
mov
sti
test
xchg
cli
and
hlt
loopne
lea
xchg
test
sub
scas
mov
leave
add
fnstsw
jmp
pop
cmp
push
flds
mov
xchg
int
sbb
push
push
orl
mov
faddl
fmul
stc
in
icebp
sub
cmpsb
shl
jecxz
xchg
cmpsb
movsb
ja
sbbl
xorb
mul
jge
rcrl
cmpsl
outsl
mov
adc
add
push
mov
out
cld
cltd
mov
xor
xchg
inc
std
int
or
stos
out
mov
loopne
insl
scas
testl
pop
dec
dec
pop
fmull
jecxz
fstl
sti
mov
popa
test
inc
stos
mov
jmp
imul
sub
or
aam
inc
and
rorb
fwait
push
lahf
add
jne
stos
insb
nop
dec
lods
xor
add
add
sub
rolb
aaa
dec
xchg
int3
jae
mov
stos
jle
pushf
fcmovne
jecxz
mov
insl
cmc
dec
mov
cmpsb
mov
jecxz
jns
fsubl
add
pop
ljmp
test
pop
jle
xchg
inc
sbb
inc
das
stc
cmp
jmpw
dec
sbb
ret
sbb
jnp
jmp
jge
pop
and
cmc
lock
jl
notl
call
fwait
pop
mov
sbb
loop
cwtl
xchg
std
aam
push
mull
aas
jae
imul
mov
pop
xchg
or
dec
or
cmp
xchg
cmp
inc
int
xchg
ret
adcl
pop
sti
or
xchg
pop
mov
mov
clc
clc
fsub
rcrl
inc
inc
insl
insb
sbb
jmp
std
rcl
push
dec
in
inc
popf
in
arpl
outsl
popf
jns
test
scas
jmp
push
dec
jmp
mov
push
pxor
jge
mov
mov
cmp
lcall
mov
scas
fsubs
mov
pop
pop
xchg
mov
dec
pop
jns
mov
shll
in
jns
sarl
inc
pop
mov
mov
in
pop
leave
andb
call
es
mov
dec
xchg
adc
cld
ret
js
stos
lea
sbb
pop
sbbl
or
loop
jo
loopne
sbb
cmc
xchg
lea
mov
xchg
xor
xchg
add
dec
sbb
fildll
mov
ljmp
cli
and
outsb
cmc
mov
add
jmp
mov
pop
fstpt
xchg
enter
aas
mov
sbb
fninit
mov
ljmp
xchg
xchg
dec
mov
sbb
in
js
movsb
ja
insl
outsl
cltd
and
arpl
jecxz
lea
mov
test
out
mov
ret
pop
scas
outsl
imul
cld
ret
mov
andb
push
pop
std
pop
out
dec
mov
cmc
xor
cmp
dec
in
repz
jmp
mov
and
dec
sbb
sub
jmp
mov
mov
popa
dec
xor
pushf
jmp
jg
add
jecxz
rolb
cmpsl
xor
rcrl
arpl
aam
lcall
or
insl
mov
inc
ret
push
inc
leave
and
cltd
mov
test
lcall
jge
fistpl
cmovp
jecxz
mov
orl
cltd
xchg
or
repz
mov
pop
popf
ret
lcall
cmp
cmpsl
sahf
mov
xor
pop
fldt
je
movsl
popf
enter
insb
sub
das
inc
xchg
lahf
mov
gs
fcomi
arpl
jle
mov
push
pop
adc
mov
insl
inc
add
sti
mov
inc
out
int
and
jmp
paddusw
or
push
jbe
mov
mov
cli
out
push
mov
js
cmp
in
cltd
xchg
dec
insl
aas
cmpsl
in
inc
fcoms
fisubs
pop
fnstsw
mov
pop
addl
scas
mov
inc
jl
lret
and
xor
xor
in
inc
inc
xchg
fidivrl
jp
sbb
in
aam
stos
aam
nop
xchg
in
xchg
push
std
das
pop
sbb
xchg
cmpsl
xchg
bound
inc
jl
xchg
pop
push
inc
cmpsl
int
lds
sarl
pop
cmpsl
loope
cmp
mov
mov
addb
stos
cwtl
dec
mov
ljmp
sbb
jg
mov
fsubrl
inc
push
pop
xchg
repnz
sbb
in
hlt
ret
mov
pop
mov
lds
push
ja
fdivr
fnsave
mov
sub
add
rcrb
add
or
pop
cmp
das
ret
sbb
jno
test
jg
push
out
dec
jg
into
jmp
or
sti
test
imul
mov
call
dec
lods
mov
std
xchg
shrl
xor
in
inc
pushl
mov
in
push
hlt
xchg
push
jl
cli
push
xchg
mov
das
inc
popf
push
int
sbb
inc
cs
push
cmc
mov
sbb
xchg
call
push
addr16
adc
add
pop
inc
inc
test
mov
in
jmp
mov
push
or
mov
mov
cmp
mov
ror
fisubrl
rcll
push
push
loopne
test
add
sbb
leave
jle
jg
mov
ja
test
ljmp
repnz
xchg
data16
jg
stc
xor
adc
aam
pop
or
test
sbb
es
insl
mov
mov
aas
insb
test
mov
fistl
push
jno
imul
pop
dec
jecxz
fs
in
dec
jmp
adc
adc
sbb
mov
adc
mov
add
jne
subl
mov
cmp
out
pop
mov
mov
inc
xchg
mov
fs
scas
push
mov
dec
cs
mov
outsl
or
mov
rcr
in
cmpsl
movsl
adc
fsubl
xchg
pop
int
mov
inc
jae
fisttpll
sbb
sub
subb
lea
outsb
in
les
mov
fcmovnu
or
pop
test
lea
mov
lods
and
inc
add
dec
loop
and
popf
ret
ret
sbb
xchg
std
testl
dec
cmp
adc
sbb
pusha
lcall
xchg
push
sti
mov
push
add
mov
xor
xchg
shrl
insl
sbb
addr16
aas
mov
rorb
xorl
xchg
push
xchg
insl
ljmp
popa
xchg
jmp
test
test
pop
imul
sub
cmpsb
imul
add
sub
sbb
jmp
pop
ret
fisttps
xchg
xchg
sbb
int
lods
add
imul
adc
mov
int
cmc
jecxz
icebp
call
pop
je
fld
push
sbb
lods
fcmovnbe
sub
cmpsb
fnstsw
fsubp
lea
jnp
imul
push
fdivrp
or
xlat
lea
in
call
add
jae
and
pop
jb
add
fildl
sbb
insl
push
shll
sbb
loopne
dec
add
iret
jmp
ret
sub
sbb
lods
rorl
adc
mov
dec
mov
and
sbb
and
sbb
fldl
jae
pop
jb
or
cmp
jge
adc
inc
sub
das
mov
movsb
out
fisubrl
mov
adc
imul
mov
test
add
ljmp
stos
jecxz
shl
pop
dec
add
fistpl
cltd
adc
lret
rcl
and
call
add
ret
jb
push
out
sub
into
insl
lahf
out
cmp
fcmovnb
mov
mov
ljmp
dec
fwait
mov
and
cmp
sahf
jbe
cmp
shl
or
nop
in
lret
cmp
mov
cmp
nop
sub
mov
ret
call
jge
flds
push
lock
mov
jmp
fcmovb
jge
xlat
ret
gs
sub
and
in
adc
xchg
or
adc
xchg
dec
mov
leave
push
scas
imul
add
sti
popa
test
dec
out
sub
jmp
lret
push
les
enter
ds
xchg
sbb
xchg
sahf
dec
inc
cli
cmpsb
pop
gs
out
test
imul
es
push
int
xchg
fdivr
jnp
clc
xchg
xchg
cs
icebp
jecxz
lods
stos
mov
leave
dec
insl
sbb
dec
xchg
push
and
dec
pop
arpl
fdivrl
xchg
or
roll
pop
fwait
lret
ds
mov
jo
sti
mov
sti
stos
xor
icebp
scas
inc
dec
push
inc
popf
add
cmp
out
icebp
adc
ffree
cmp
and
sti
sub
and
ret
push
shll
mov
rorl
inc
cmpsl
sti
std
xor
cltd
adc
dec
rcrl
subl
scas
sub
int3
cwtl
frstor
movsl
mov
sub
out
stos
in
dec
pop
add
imul
adc
fcmovne
cmp
and
inc
xlat
xchg
and
iret
or
pop
mov
jo
out
xchg
lods
fistps
lods
mov
sbb
pop
adc
out
dec
fidivrl
mov
lea
xchg
inc
jp
lds
arpl
fidivrl
cwtl
xor
push
mov
outsl
fstpl
adc
cmp
push
xor
push
mov
mov
pop
scas
dec
pop
xor
pop
sbb
test
jmp
cmpsb
jne
shl
cli
pop
ds
pop
jne
mov
inc
rcll
xlat
sbb
sbb
arpl
fcomps
sbb
fists
dec
ja
in
in
add
movsl
sbb
push
sbb
mov
xchg
andl
xchg
mov
jb
jmp
sar
sbb
mov
push
int3
mov
imul
call
jb
out
push
popf
sbb
inc
sbb
mov
push
gs
sbb
adcb
rcr
cltd
movsb
cmp
mov
stc
dec
mov
adc
sbb
push
imulb
es
adc
add
fildl
mov
mov
inc
test
fistpl
lods
test
repz
shr
mov
out
insl
out
fwait
sti
or
ret
and
imul
fwait
xor
mov
dec
xor
lahf
pop
xor
lods
sti
xor
jle
dec
and
fbstp
inc
mov
leave
and
shrb
ljmp
fld
ljmp
jl
sub
repz
in
bound
daa
mov
xchg
mov
pop
pop
aam
gs
push
ficoml
dec
mov
push
test
jecxz
nop
ds
sbb
pushf
cld
or
ljmp
mov
sbb
pop
jmp
lcall
js
add
lahf
pop
push
pop
jo
stc
std
ret
jno
mov
pop
inc
mov
dec
leave
movsb
bound
inc
out
cwtl
push
in
and
neg
repz
fdivr
and
out
sbb
pop
mov
and
repz
popf
pop
fwait
call
mov
sub
xor
fwait
and
arpl
mov
xchg
add
pop
in
mov
js
jmp
addb
rolb
cmpb
pop
leave
sub
test
push
lea
sub
or
push
push
sub
dec
sbbl
xchg
pop
or
push
out
sub
aas
fwait
push
cmp
jno
es
ja
pop
clc
xchg
sbb
cld
cmpl
mov
std
adc
cld
mov
mov
pushf
mov
imul
dec
sbb
add
mov
xor
and
ret
fiaddl
sar
ljmp
repnz
jg
in
rcrb
imul
pop
inc
imul
test
stos
sub
cwtl
data16
out
shl
adcb
add
loop
mov
mov
pop
iret
dec
negl
out
jmp
sbb
xchg
mov
dec
xchg
lea
das
or
dec
sub
mov
and
shl
mov
sar
imul
dec
fmul
push
jae
aas
xchg
jae
imul
int
push
xor
inc
mov
cmpsl
push
push
pop
sub
rcrb
testl
sarl
out
es
ja
lcall
xor
dec
nop
xchg
cltd
pushf
idivl
jb
sub
sub
dec
ljmp
and
pop
mov
mov
sbb
rcrb
adc
fidivrs
jbe
mov
mov
js
cltd
push
lcall
sti
pop
into
pushf
movsb
filds
and
call
xlat
out
sbb
pop
mov
sub
cmpsl
fnsave
addl
jmp
frstor
cmp
loopne
lret
pop
push
jl
mov
inc
lcall
dec
rcrl
lods
mov
arpl
lahf
mov
inc
xchg
lcall
ds
hlt
push
stos
xchg
mov
push
sbb
xor
or
aaa
mov
fcoml
pushf
ja
fadds
adc
pop
mov
or
repnz
or
cltd
subl
fldt
sbb
movsb
push
insl
push
daa
in
push
into
xor
addr16
lea
lock
jle
nop
data16
ret
jmp
scas
fsubr
xor
push
jle
mov
jnp
xchg
sbb
mov
push
mov
cmp
popa
lods
pop
shll
adc
jmp
and
ljmp
sarl
hlt
and
xlat
cmc
mov
xor
mov
in
ja
test
or
xchg
icebp
jmp
cltd
icebp
mov
xchg
out
repz
xchg
icebp
sti
icebp
xchg
int
aam
int
pop
inc
xor
xor
mov
fwait
dec
sub
mov
fnstcw
aaa
sub
lods
and
ljmp
loope
and
out
inc
sub
push
jge
adc
fisubs
jmp
outsb
jne
int3
aaa
cmp
leave
pop
xlat
fwait
xlat
repz
sub
push
push
out
jmp
fwait
mov
rep
jo
jmp
mov
test
mov
loope
xor
das
pop
push
jmp
mov
std
test
insl
daa
int
mov
stos
and
aas
fcoml
ds
lods
mov
test
adc
mov
xchg
das
imul
in
mov
pop
xor
sub
mov
jmp
sbb
ret
xor
in
repz
and
cmpsb
dec
xor
or
jno
and
push
int
jl
repnz
adcl
xchg
insb
int
sbb
mov
or
push
mov
insl
sbb
call
sbb
ja
aad
les
sub
ret
mov
push
xchg
inc
int
add
push
mov
lahf
inc
inc
xor
push
add
dec
pop
fsubrs
push
pop
fwait
insl
out
inc
ret
int
and
dec
imul
pop
sbb
decb
jp
pop
adcb
push
insl
popf
push
mov
aaa
je
repz
mov
adc
jecxz
addr16
loopne
xchg
lods
push
fwait
lret
mov
xchg
insl
popf
inc
sbb
pop
mov
repz
pop
xor
je
popa
mov
fnstcw
repz
lcall
loop
test
mov
pop
test
dec
fwait
and
xor
aaa
xchg
xchg
fdivrp
pop
and
jo
inc
rcll
jmp
xchg
cmp
xchg
cmp
add
mov
push
push
fsubl
dec
das
push
xchg
sub
das
filds
sbb
out
and
inc
sub
jae
push
fldt
aaa
test
nop
lds
ret
add
and
fdivrl
lea
inc
mov
inc
stos
mov
pop
mov
dec
jnp
sarb
les
ror
cs
sti
fisubrl
jae
add
xchg
movsl
add
imul
sub
test
mov
popf
out
lods
add
fisttpl
insl
pop
adc
xlat
lds
stos
dec
fidivrl
and
sbb
xor
out
jmp
popa
pop
pop
pop
lea
mov
stc
andb
mov
sbb
lea
jmp
pop
jl
test
inc
shll
lods
in
lcall
xor
xchg
repnz
pop
aaa
adc
and
add
xchg
adcl
cmp
push
aad
cmp
sub
cmpsb
fs
fisttps
fldt
shll
lods
push
adc
mov
push
push
mov
rcll
pop
std
testl
jnp
dec
mov
mov
fistpl
aam
lea
ret
jnp
fwait
popf
cld
add
add
jnp
cli
jle
pushf
movsl
ljmp
and
adc
sub
sbb
mov
pop
mov
sbb
stos
push
js
flds
pop
les
or
mov
xlat
out
int
mov
lret
hlt
lock
rcrb
cmc
mov
mov
test
mov
loope
mov
inc
movsl
or
scas
test
jmp
andb
push
addr16
or
pop
sti
inc
fdivr
loope
inc
dec
and
sti
out
lds
cmpsb
push
test
fwait
pop
xchg
rorb
ficompl
loope
ret
pop
ret
out
xor
jle
inc
xlat
pop
xchg
sbb
mov
loope
fcomp
imul
sbb
sbb
mov
xchg
ret
lea
xlat
xchg
std
jp
les
xchg
in
xchg
dec
fimull
lret
sbb
and
add
shr
inc
rcrl
jecxz
adc
aam
sub
sbb
cld
cltd
test
sti
ljmp
mov
push
push
imul
mov
cld
mov
scas
aad
repnz
adc
inc
push
clc
jp
insb
out
dec
sbb
popf
adc
lret
jo
mov
add
das
mov
ficoml
xor
mov
insl
add
sub
mov
in
fs
sbb
adc
pop
lods
lock
ja
jnp
stc
jp
add
mov
pop
pop
cmp
xchg
push
ja
mov
in
lret
xchg
pop
jecxz
cmp
cwtl
xchg
cmpsb
arpl
loope
mov
in
lret
jmp
movsl
pop
outsl
mov
in
fsubr
jl
jnp
imul
jecxz
cli
adc
sbb
inc
xchg
rcll
xchg
fbld
or
sbb
or
dec
sti
pop
and
sbb
sti
sbb
insl
mov
nop
jne
shlb
add
dec
push
jmp
fcom
into
pushf
lea
dec
mov
shl
mov
adc
xchg
addl
popf
in
pushf
dec
push
aas
sti
std
rol
addl
insl
jg
mov
jmp
outsl
mov
adc
outsl
int
test
mov
bound
or
ljmp
aaa
inc
les
clc
imul
xchg
test
das
shrl
mov
insl
fs
pop
mov
mov
sbb
std
pop
nop
shll
jmp
test
call
and
pop
out
and
add
xlat
mov
push
stos
mov
mov
mov
push
mov
fstp
aad
mov
xchg
adcl
cs
ja
test
xor
push
lds
xor
add
rcrl
popa
dec
sbb
sub
pop
sub
push
push
lcall
mov
cmp
js
negb
ret
mov
popl
loope
xor
pop
adc
jnp
outsl
in
xlat
jmp
fisttps
push
dec
adc
rol
jecxz
mov
push
in
push
fnstsw
in
in
fwait
iret
ret
mov
lods
leave
mov
mov
xor
and
xor
arpl
sub
cmp
push
dec
rol
ffree
mov
pop
sub
imul
std
pop
jae
or
daa
ret
std
jmp
je
out
aas
in
fcmovb
sub
sub
add
mov
fcmovb
sub
jmp
push
jp
cld
testl
fiaddl
jne
outsb
repz
mov
mov
fnstsw
repnz
xchg
cmpsl
leave
mov
pop
add
out
dec
rcr
cli
add
aad
jmp
pop
pushf
insb
iret
iret
ret
fcmovbe
addr16
sbb
scas
popa
add
xor
ljmp
or
cmp
pop
cmp
mov
shll
stos
imul
lock
xchg
jae
out
out
lods
jp
loopne
push
dec
rcrb
and
std
in
inc
jecxz
popa
inc
stos
sub
mov
sti
sti
mov
shll
add
add
fmulp
in
ljmp
insl
in
or
mov
mov
inc
js
mov
inc
fsubrs
cmp
jp
arpl
jge
les
lea
cmp
lret
add
out
jno
xor
aad
sbb
divl
xor
ljmp
out
mov
ja
or
inc
mov
jae
jge
cwtl
rcr
mov
cmpsb
add
fisubs
pop
mov
paddq
shlb
fcoml
sbb
xor
mov
mov
sti
xchg
mov
test
test
sbb
cmp
xchg
xor
add
pop
adc
call
movsb
inc
push
orl
push
push
dec
or
fidivs
dec
sbb
test
add
xchg
mov
call
cmp
gs
dec
push
sub
fucomi
sbb
movsl
loope
into
push
addr16
xchg
sbb
cmp
shrl
xor
movaps
std
int3
push
out
adcl
xchg
sub
xchg
arpl
adc
adc
xchg
mov
jb
dec
cs
out
push
xor
cmc
mov
xchg
test
outsb
jecxz
adc
pop
sbb
push
cmp
cltd
fwait
jno
pop
inc
dec
xor
inc
sbb
pop
int3
mov
les
mov
aad
jno
lods
out
xchg
push
shrl
push
popa
mov
and
mov
mov
outsb
notb
gs
xchg
cmp
in
or
je
jbe
adc
fwait
sbb
sbb
movsb
cld
push
jae
popa
cmp
jecxz
sub
xlat
dec
cs
out
mov
dec
rolb
xchg
xor
out
dec
jae
repnz
out
in
int
mov
xor
test
leave
rcr
mov
repz
sub
jmp
sub
repnz
mov
pop
shl
and
xor
push
mov
shll
test
std
shrl
or
jp
xor
sarl
xchg
popa
outsl
out
inc
inc
shrl
cs
pop
pushf
fcmovne
lods
cs
xor
aaa
shrb
jecxz
gs
aam
and
xchg
xor
icebp
fmull
xchg
shll
fwait
pop
fdivrs
xor
or
or
dec
and
mov
xchg
negl
sub
mov
xor
push
pop
stos
jno
inc
mov
mov
xor
mov
ret
xchg
sarl
dec
xchg
sub
out
inc
in
inc
test
fs
push
insb
sti
push
mov
xchg
imul
mov
ljmp
mov
sarb
std
fistpl
rol
mov
cmp
adc
sub
in
pop
adc
jp
and
cmp
jecxz
iret
sub
insl
rol
sbb
fidivl
or
cmp
mov
sub
jnp
addr16
dec
scas
xchg
sub
cmpsl
xchg
addr16
jmp
call
sbb
call
scas
lahf
xor
iret
insb
cmc
jmp
aas
mov
int3
mov
in
push
int
cmp
fcmovnbe
jno
or
bound
in
xchg
xchg
dec
pop
adc
dec
movsl
inc
or
or
jne
cmp
int
popf
insl
sub
pop
fsubrs
ds
addr16
adc
jecxz
loopne
jmp
jmp
jle
arpl
rolb
pop
rcr
shll
jge
imul
adc
sbb
jno
cmp
popa
push
sbb
pop
fists
popa
cld
mov
and
jbe
adc
lds
ret
aaa
and
xor
jno
xchg
loopne
pop
pop
dec
and
and
sub
adc
inc
fcoml
testb
insl
xchg
adc
das
push
daa
ljmp
in
pop
and
cmpb
shlb
mov
pop
lcall
pop
dec
jmp
push
outsl
fs
cs
leave
shrb
mull
cmp
jmp
lcall
mov
roll
jno
or
negb
rcll
cmp
sub
sbb
push
out
out
mov
fs
mov
cmp
inc
lods
rclb
mov
mov
sbb
test
ss
xor
and
mov
fiaddl
jl
outsb
popa
ret
mov
imul
jno
or
ja
iret
adc
ss
mov
dec
subl
out
stos
inc
dec
fcompl
xchg
aaa
pop
pop
lea
aam
adc
insl
rcl
popf
pop
lret
fidivl
jns
cwtl
leave
loop
mov
nop
ja
dec
fucomp
les
push
fwait
imulb
cmp
outsl
dec
jne
mov
sar
mov
jne
fstpl
pop
mov
pop
test
mov
clc
and
cmp
push
pop
inc
pop
pushf
jb
in
xchg
fsubrl
ja
mov
push
xchg
nop
outsl
xor
pop
ret
sub
jns
push
aam
pop
ja
arpl
arpl
and
dec
rcll
cmp
sarl
cmp
bound
pop
inc
shll
inc
dec
int3
sti
and
cmp
ror
repz
or
divb
dec
mov
and
idiv
subb
pop
mov
jmp
idiv
mov
jecxz
into
stc
jo
dec
imul
sbb
pusha
inc
dec
jg
lock
jp
ret
dec
jnp
sbb
inc
jbe
dec
xor
xlat
sbb
loope
lods
outsb
cmpsl
and
notl
lea
ret
xchg
jns
push
es
push
stos
sub
in
lea
test
pop
inc
mov
or
rcrb
loop
stos
pop
cmc
rcrl
adc
ret
or
dec
rcr
dec
ret
adc
xchg
outsl
dec
mov
addl
cmp
pop
ret
jno
hlt
xor
insl
lods
adc
ss
or
mov
in
lcall
testl
test
fidivrl
pop
fstpt
sbb
enter
mov
out
sub
xchg
mov
fcmovbe
jmp
dec
pop
roll
xor
push
jmp
sub
cli
addr16
sti
jno
test
xor
dec
mov
lea
xchg
add
mov
mov
sbb
ss
mov
inc
out
inc
pop
ficomps
pop
out
push
std
push
add
push
dec
imul
arpl
jp
jnp
into
jb
dec
jae
mov
dec
add
mov
aam
and
fisubl
fildll
lods
xchg
int3
inc
mov
inc
movsb
ret
inc
les
dec
pop
and
xor
sahf
stc
inc
adc
inc
and
loope
out
lods
icebp
orb
jns
jb
ja
psubw
adc
mov
sahf
push
mov
fistl
stos
int
je
cmp
daa
xchg
aad
cmp
cmovl
sbb
fxch
and
add
mov
xchg
iret
vunpckhps
mov
xchg
dec
and
ret
jmp
dec
pop
jmp
cltd
or
push
das
jne
fwait
bound
shrl
les
shl
enter
lods
mov
mov
ret
enter
sub
jecxz
and
inc
cmpsl
stc
lds
sbb
xor
mov
or
push
sbb
sbb
adc
sub
push
mov
lock
xlat
jo
fs
popa
cmpsl
and
mov
or
or
test
push
sarb
outsl
dec
and
mov
lods
in
test
insl
and
gs
movsl
xchg
fimull
sbb
movsl
jo
adc
push
pop
sub
popf
push
xlat
inc
dec
jecxz
xchg
fs
or
jle
scas
jg
mov
imul
addr16
jnp
add
cltd
stos
addr16
hlt
or
inc
dec
xor
push
sbb
fnstsw
xor
mov
inc
ret
jl
icebp
roll
jne
jle
push
lods
mov
repz
or
imul
pop
sub
loopne
jno
fcmovb
outsl
test
popf
loopne
insl
sti
leave
pop
push
rcr
insl
sbb
mov
jmp
fists
jmp
mov
insb
dec
cmpsb
push
dec
imul
or
pushf
pop
test
inc
sarl
cmp
sub
lods
leave
pop
dec
pop
push
xlat
jb
xor
sbb
cs
lahf
mov
pop
sbb
ds
adc
fs
lret
push
add
and
xchg
sbb
dec
and
jns
pop
testl
test
fiaddl
bound
or
sbb
ret
mov
xor
jb
xchg
cmp
stc
sarb
not
push
xchg
div
jge
jg
jmp
cmp
icebp
inc
loope
push
mov
jmp
jae
bound
mov
sbbl
gs
xor
mov
mov
pop
leave
loope
in
sbbl
inc
dec
lahf
aad
stos
aaa
jmp
pop
mov
gs
pop
popa
lods
insl
rcll
mov
jge
jmp
mov
inc
mov
inc
arpl
scas
push
movl
pop
imul
in
popa
pop
pop
adc
inc
and
xchg
and
jle
lock
inc
dec
fldt
jge
cmc
ret
nop
call
dec
icebp
sbb
push
fdivrl
cld
mov
push
adc
mov
or
into
cmp
jo
pop
mov
adc
mov
jb
cmp
push
jbe
xor
das
dec
jecxz
or
lods
xchg
jecxz
adc
es
sbb
gs
jecxz
stc
push
movsl
xchg
pop
loopne
fsubs
jecxz
inc
mov
jecxz
pushf
fstl
cli
xor
rcrl
xor
movb
aaa
gs
and
add
cmp
mov
fsub
inc
in
movsl
jne,pt
sti
pushf
inc
and
xchg
pop
inc
inc
inc
and
fildl
push
mov
mov
mov
imul
inc
sub
or
mov
ss
call
cmp
and
in
adc
shlb
mov
ret
xor
jmp
mov
sub
pop
das
mov
sub
inc
shlb
int
push
mov
sub
push
pop
jbe
push
fstps
mov
es
jmp
test
test
or
push
push
insl
sub
daa
arpl
rolb
test
nop
add
ret
lcall
enter
jbe
xchg
pop
repnz
mov
lret
xchg
pop
xor
lret
jns
pushf
hlt
xchg
jbe
aad
pop
jno
scas
popf
pop
or
push
cmp
and
push
jecxz
std
inc
inc
in
sbb
nop
test
lock
std
jno
idiv
enter
sti
xchg
in
pop
xchg
jne
xchg
enter
mov
popa
mov
cmc
popa
movb
mov
testl
push
popa
xchg
sub
sub
in
mov
mov
inc
es
mov
xor
cwtl
leave
into
fnstcw
cmc
mov
pop
inc
cmpsl
cltd
dec
addl
out
daa
xchg
test
push
jmp
and
inc
fst
ret
xlat
insb
or
ror
dec
or
ret
dec
mov
adc
push
inc
jbe
mov
add
repz
les
pop
and
push
je
imul
pop
and
or
xchg
or
jp
jl
cmp
dec
cltd
push
and
mov
sub
xchg
push
dec
sbb
fsts
sbb
adcb
jge
sti
imul
outsl
inc
movsl
xor
dec
es
repz
push
mov
sti
cli
lock
shl
cmpsl
and
les
mov
cwtl
ret
ljmp
ret
lods
cmpsb
xor
push
insb
les
call
shl
stos
inc
push
mov
xchg
sbb
sbbb
inc
loopne
std
xlat
daa
aad
and
std
dec
inc
xlat
pop
dec
daa
es
jb
mov
push
sbbl
sbb
xchg
inc
adc
addr16
jbe
adc
es
fwait
aam
test
int
add
cltd
out
push
jmp
loop
adc
pusha
jae
pop
icebp
enter
push
push
pusha
lcall
cld
add
pusha
inc
div
cmp
adc
and
stc
sub
sub
lock
adc
pusha
mov
jno
inc
dec
and
lahf
lret
mov
sub
cmp
xchg
inc
subl
push
popa
mov
lods
notb
and
imul
pop
ret
es
xor
xlat
subb
jecxz
ror
push
iret
mov
sti
pop
out
sbb
pop
bound
mov
and
xchg
pop
mov
xor
mov
rorb
fldenv
ret
xor
adc
inc
les
sbb
or
and
sbb
rcrb
rorb
dec
ret
and
or
mov
jl
lock
test
push
stos
push
adc
test
fiaddl
fwait
neg
into
fsubrl
stc
shr
inc
pop
fadds
sub
stos
clc
push
jno
add
fstpt
mov
push
cltd
sbb
repz
push
sbb
fcomps
int3
jl
or
pop
adc
lds
outsb
and
mov
fimull
sbb
xchg
fwait
outsl
je
push
sar
out
cltd
mov
inc
jbe
mov
out
pop
popa
jge
paddq
gs
and
push
jno
jle
and
adc
sti
shrl
jecxz
pusha
leave
dec
adc
rol
int
inc
add
shlb
fsubrs
cld
xchg
xor
iret
dec
push
ret
sbb
hlt
cs
lds
mov
addr16
insl
aam
cmp
push
or
sarl
in
sbb
xchg
push
push
add
cltd
adc
cs
xor
adc
dec
out
xchg
inc
mov
faddl
cmp
and
std
dec
enter
adc
loop
je
cwtl
jo
pop
cwtl
pop
mov
xchg
jecxz
cld
sti
and
sbb
sahf
sub
inc
pop
mov
in
out
lea
cmc
push
pop
aas
adc
bound
inc
negb
and
mov
cmpb
pop
sub
and
push
mov
and
mov
pop
sti
or
dec
aas
inc
cmp
mov
outsl
inc
adc
loope
push
arpl
pop
sub
mov
outsl
lea
outsl
inc
adc
jecxz
cli
jg
les
data16
das
scas
inc
jge
xchg
ret
adc
xchg
xor
cmp
jnp
fstl
jb
dec
inc
inc
fisubl
fidivrl
sub
pusha
dec
jbe
push
pop
sbb
mov
jmp
push
ja
pop
mov
jge
jl
sti
ja
dec
cmp
push
out
sbb
aas
out
sbb
jge
dec
ja
cmp
pusha
mov
fstp
xchg
jo
outsl
or
and
sarb
dec
pop
adc
xchg
jne
sbb
pop
in
insl
jb
pop
test
cld
int
push
hlt
gs
imul
ret
mov
scas
imul
or
test
fdivl
dec
aam
int
fsubrs
cmpsl
jno
out
outsb
xchg
pop
out
jne
lods
insl
jns
js
leave
cmp
aad
mov
dec
sbb
pop
mov
je
imul
movsl
push
adc
xor
adc
gs
fneni(8087
dec
mov
jl
sbb
pop
xchg
xor
fldl
pusha
out
sti
fcmovbe
gs
adc
xor
add
sbb
add
pop
sub
cmovns
ret
lods
push
jle
xorl
fs
mov
and
pop
pop
push
mov
icebp
subb
fst
ss
xor
pop
ret
sbb
dec
fwait
repz
inc
xchg
test
add
mov
sub
push
mov
hlt
xchg
push
mov
daa
lds
repnz
jmp
or
mov
dec
add
xorb
test
push
aam
mov
push
aas
lods
fnstcw
dec
dec
sub
pop
out
mov
imul
mov
loopne
int
mov
pop
aaa
xchg
lea
aam
push
out
xor
mov
xchg
xchg
jmp
fistps
mov
dec
add
dec
cs
lcall
ficoms
fisubl
and
add
push
add
in
pop
cmc
push
test
mov
sbb
ret
daa
pop
stos
add
aam
pop
mov
jecxz
jmp
hlt
or
pop
out
sbb
pop
dec
pop
mov
lahf
inc
stos
lcall
daa
mov
dec
pop
insl
enter
outsb
xchg
arpl
cld
cmpl
insb
inc
inc
shrl
cltd
mov
xchg
ss
mov
lret
fucom
and
mov
ja
fcmovbe
pop
fildl
in
dec
in
rcrb
sti
ret
imul
jae
sbb
cmpsl
dec
cmp
inc
jae
ror
lahf
push
push
nop
xor
cltd
dec
imull
loopne
popl
pop
out
jno
sub
cs
loopne,pt
cmc
or
int
adc
inc
jp
and
jge
dec
jecxz
jmp
dec
inc
mov
ljmp
add
mov
pusha
dec
dec
push
stos
insb
div
or
mov
cmpb
out
roll
jmp
cmpsb
push
sub
pop
push
lock
stos
in
xchg
mov
jmp
push
ret
insl
sbb
or
mov
inc
leave
inc
fmull
dec
jl
std
mov
gs
sub
jecxz
outsl
jg
add
fbld
icebp
push
push
pop
cltd
push
push
inc
repnz
and
mov
and
jns
and
gs
mov
in
sbb
jecxz
mov
push
lods
sbb
arpl
arpl
mov
stos
or
push
jecxz
pop
pop
aad
mov
cltd
add
mov
pop
xor
outsb
and
mov
lret
leave
push
jns
lods
pushf
stos
dec
pop
cmp
lea
cltd
cmp
mov
repz
gs
sbb
in
lret
pop
adc
shl
sub
test
movsb
notl
test
or
dec
stc
ja
arpl
mov
lods
int
cltd
sbb
sub
lods
cmp
jmp
mov
divb
mov
add
cmpps
fistpl
xor
les
pop
sub
push
xchg
pop
sub
mov
xchg
sub
sub
leave
scas
jae
cmpb
sub
mov
repz
aam
mov
stc
in
dec
jns
dec
ret
pop
xchg
xchg
xor
mov
cmpsb
sub
ljmp
es
pop
sub
ja
sub
sti
mov
cmpsl
leave
lahf
inc
mov
sub
mov
sub
xor
pop
imul
out
sub
dec
icebp
dec
out
cs
xor
stos
out
pop
lds
aas
movl
sub
test
jno
aam
aam
sbb
pop
cmc
xchg
movsl
dec
mov
jmp
fdivr
add
cmp
add
mov
cli
sub
push
pop
pop
sub
pushf
loopne
fcomip
adc
cmp
lock
add
sbb
in
dec
pop
sbb
arpl
sub
es
and
lds
cli
mov
in
xor
daa
gs
mov
pop
cltd
in
xor
loope
sub
cmpsl
fistpll
push
in
jmp
pop
push
and
push
jbe
adc
fidivrs
jbe
rcrl
dec
xchg
xchg
pop
xchg
xchg
inc
lock
mov
jb
outsl
lcallw
iret
mov
out
inc
in
pop
cs
mov
inc
fnstenv
test
inc
addl
sbb
push
and
inc
mov
fcoms
jmp
sbb
outsb
mov
jecxz
lret
ds
push
and
je
mov
lahf
dec
and
mov
popa
mov
push
mov
inc
into
mov
movsb
cmpsb
mov
lret
xchg
add
int
imul
div
mov
dec
fldt
mov
jmp
stos
cmpb
idivb
loopne
mov
jecxz
xor
push
jmp
add
out
and
orb
fucomp
arpl
shll
ljmp
sbb
pop
jno
stos
jne
imul
jno
icebp
mov
xchg
sbb
sti
sbb
mov
outsl
pusha
ja
pop
jbe
aaa
xor
mov
ficoml
icebp
insl
mov
idivb
loopne
mov
add
add
push
call
call
icebp
sbb
ret
fcoml
pop
jo
ret
pop
daa
inc
mov
movsl
sarl
scas
lret
or
rol
push
filds
sbb
mov
adc
bound
loope
cs
cld
jno
push
push
repz
inc
mov
sbb
or
mov
xchg
jb
or
dec
ret
mov
dec
ret
mov
sub
dec
sbb
jb
or
dec
ret
push
repz
mov
jnp
sub
iret
sub
iret
sub
iret
sub
iret
paddq
sub
sbb
cmp
jle
pop
sbb
loope
mov
jns
jmp
xor
ret
sub
mov
pop
lcall
popa
insl
in
jl
xchg
xor
xchg
popa
inc
pusha
mov
cmp
add
imul
jl
gs
jnp
xchg
fistl
push
out
fsubl
cmp
hlt
mov
pop
repz
dec
ret
imul
dec
arpl
jnp
or
dec
mov
add
sub
iret
sub
iret
sub
sub
cmpl
stc
pop
jge
les
sub
inc
mov
outsb
jnp
addr16
jg
cmpsl
push
sbb
jno
cwtl
cmp
insb
icebp
fstps
fcmove
inc
mov
or
cmpsl
jmp
subb
lock
mov
in
add
push
mov
gs
adc
movsl
push
cwtl
pminub
mov
popf
cltd
test
cmp
fldl
movsl
pushf
stos
loopne
mov
mov
bsf
mov
add
dec
lock
insl
fsubrl
push
es
frstor
popf
cltd
loop
int3
subl
pop
sti
out
jmp
cmp
mov
lret
jae
pop
inc
pop
fldt
sub
mov
and
inc
enter
xor
mov
lods
dec
pop
pushf
fstps
mov
stc
popa
cmp
addb
xor
stos
int
xlat
shl
insl
mov
lea
add
test
loope
mov
dec
mov
push
enter
inc
test
cmp
fwait
aad
jb
adc
ret
mov
test
inc
bnd
sub
lret
lock
pop
and
ljmp
inc
add
dec
andb
mov
xchg
jbe
xchg
mov
test
mov
xor
dec
push
inc
bound
xchg
aas
or
cmp
into
test
movsl
xor
pop
je
sbb
jecxz
jmp
xor
xchg
in
jb
add
test
pop
lret
inc
mov
mov
test
and
fstps
jle
cmp
mov
add
cmp
insl
pop
sti
inc
daa
in
dec
nop
sbb
insl
loopne
and
jbe
outsl
push
fcompl
and
nop
xor
pop
frstor
sub
test
addr16
xchg
sarl
push
cmp
pop
jno
call
stos
dec
mov
cmp
mov
mov
pop
fwait
mov
push
mov
push
imul
rcll
aas
sti
idivl
jae,pn
jae
inc
imul
pop
mov
add
ficoml
jmp
sti
int3
repz
pop
cs
pop
rorl
mov
mov
insb
mov
push
fcmovu
xchg
arpl
xor
popa
divb
push
push
dec
hlt
push
addr16
inc
test
repz
ds
jecxz
or
mov
hlt
test
mov
push
cmp
and
or
jecxz
dec
insl
xor
pop
pop
out
lds
push
sub
enter
cmp
add
mov
adcb
imul
mov
sbbb
push
jnp
jb
fwait
sbb
xchg
rol
mov
jp
or
shll
push
pop
jge
arpl
fwait
hlt
andb
and
loop
stos
pop
fwait
mov
imul
mov
pop
push
pop
faddl
cmp
xor
std
arpl
cltd
pop
pusha
dec
xchg
imul
pop
scas
mov
and
xor
scas
repnz
xchg
in
outsl
out
scas
fmull
arpl
pop
pop
sbb
sbb
out
mov
lahf
iret
xorl
imul
popf
stos
xchg
mov
mov
and
or
sub
sub
repz
mov
imul
test
es
cmp
cmp
adc
cmp
repz
fiadds
mov
dec
mov
fisttps
lock
pand
sbb
and
lret
movsb
pop
sub
fwait
and
mov
cmpl
adc
push
pop
outsb
pop
scas
xchg
insl
ret
mov
int3
inc
jae
mov
orb
call
pop
mov
stos
addr16
cltd
dec
test
mov
stc
and
mov
out
dec
rcrl
dec
sbb
jg
stos
outsb
push
sbb
sbb
sti
iret
pop
and
pusha
inc
xchg
testl
mov
mov
jb
add
std
xlat
push
inc
fmul
bound
pop
in
cmpsb
loopne
pop
out
pop
je
inc
imul
jb
xorb
xchg
out
sti
and
std
jo
das
mov
into
inc
pop
pop
test
inc
imul
add
xchg
inc
in
cmp
push
or
jns
xchg
stos
ret
js
dec
push
jmp
and
sbb
fndisi(8087
xchg
xlat
outsb
dec
js
ljmp
pop
fisubl
sub
or
fld
pop
inc
lret
jmp
lret
or
imul
and
lret
xchg
jbe
cmp
push
ret
pop
jns
push
lretw
shlb
sti
jb
pop
or
or
push
inc
int
xchg
in
mov
pop
cmp
orl
push
dec
js
test
sub
test
sbb
sub
test
sbb
mov
mov
test
int3
or
pop
cld
push
lea
addl
or
inc
ret
mov
sub
lods
fisttpl
les
mov
insl
orl
mov
jp
jb
imul
ljmp
rcrl
test
mov
addr16
dec
insb
fsts
cmpsl
es
mov
je
rorl
jns
cmpsl
outsb
icebp
in
push
lods
and
and
jge
outsl
mov
jmp
mov
sub
mov
lds
fwait
adc
pop
out
cmpsb
movsl
sbb
in
inc
xchg
mov
mov
mov
xchg
mov
lods
ss
sub
and
mov
inc
cmpsb
sti
gs
stos
sbb
push
jnp
lock
cmp
cmc
iret
iret
sti
xor
cli
cmp
les
adc
push
test
out
scas
outsb
mov
push
popf
pop
popa
aam
dec
gs
sub
xor
push
cmpsb
push
and
mov
jecxz
dec
aas
sbb
mov
lods
ja
shr
jmp
mov
fistpl
subl
push
sbb
jae
xchg
loope
sub
pop
mov
nop
aas
cld
sbb
ficompl
mov
lods
jecxz
gs
mov
mov
arpl
inc
fcmovnu
addr16
call
add
bound
mov
inc
sub
fisubrl
mov
movsl
sbbb
imul
insl
mov
arpl
sub
add
gs
adc
adc
sbb
subl
sbb
aaa
adc
dec
fs
fs
aas
add
lret
mov
xchg
xor
popf
lahf
push
xchg
jne
cmc
push
movsl
ds
push
mov
dec
lret
stos
out
sub
dec
loop
cmp
jae
and
add
pop
pushf
add
aam
xchg
call
repnz
and
jmp
adc
dec
add
jae
mov
or
sub
push
jmp
push
arpl
lret
aam
out
dec
cmp
jecxz
mov
jecxz
call
inc
jo
loopne
and
adc
or
idivb
cld
imul
push
mov
and
or
pop
rcll
leave
push
inc
push
out
orb
push
das
scas
sbb
mov
inc
jnp
popf
in
push
subps
jecxz
mov
jmp
xor
lcall
cmp
leave
jl
repz
lock
fwait
in
dec
jno
cmp
idivb
sub
lea
xchg
rcrl
xor
js
out
rcrb
mov
pop
adc
stos
cmpsl
fwait
pop
mov
adc
cltd
inc
pop
sub
dec
fcmovne
sbb
mov
fistps
int
test
ljmp
pop
out
sub
scas
xchg
fwait
add
xchg
cmp
loopne
and
in
mov
jb
jno
loop
lcall
and
xchg
movsl
pop
iret
out
adc
or
push
repz
xchg
pop
in
jae
or
jno
addl
data16
cli
rorl
mov
inc
mov
adc
pop
shr
cld
ficoml
sbb
in
fwait
imul
enter
mov
jecxz
pusha
jae
fstl
notl
push
arpl
pop
fdiv
dec
mov
xchg
out
inc
mov
daa
or
enter
ret
sbb
push
push
and
test
pop
mov
push
push
dec
dec
fildl
dec
out
out
adc
gs
aam
add
stos
insl
fnstsw
ret
adc
cltd
mov
xchg
xor
pusha
inc
mov
in
outsl
jae
add
add
fwait
xchg
popf
dec
mov
or
lea
popf
fwait
adc
sub
add
in
push
mov
jle
mov
sbb
les
test
fcomp
dec
fcomip
inc
jae
inc
ja
int3
pop
fdivl
jg
sbb
adc
mov
sbb
lea
repz
jb
pop
imul
aam
mov
enter
or
loope
cld
and
inc
dec
test
cmp
in
dec
cli
imul
pop
fcmovnbe
pop
arpl
mov
xor
cmp
jmp
into
add
je
mov
fwait
dec
add
push
xor
sbb
movsl
xchg
mov
daa
stos
popa
mov
cs
xchg
pop
jl
mov
xor
xlat
insb
cmp
cmpsl
cmc
inc
mov
xlat
mov
test
fnstsw
jmp
das
xor
sbb
or
push
cld
or
data16
adc
xor
fimull
in
cltd
ret
sbb
cmc
aam
imul
leave
inc
fnstcw
pop
xchg
adc
popf
xor
popa
cmpsl
mov
pop
sub
adc
imul
xchg
push
mov
shrb
pop
aad
hlt
std
repz
jecxz
dec
pop
fldpi
enter
lret
and
jae
into
adcl
lahf
add
jl
push
outsl
int
push
das
bound
jnp
loop
sbb
dec
fsubs
dec
mov
cld
enter
jecxz
xchg
dec
shrb
iret
sbb
arpl
ror
fwait
pop
fisubrl
stos
inc
mov
cld
jae
or
pushf
jb
fmul
adc
pop
orl
mov
daa
inc
or
bnd
adc
call
dec
sub
push
ja
addr16
arpl
test
pop
sbb
fwait
dec
in
leave
inc
sbb
fstpl
or
jp
inc
ret
mov
mov
repz
jns
push
xchg
sti
inc
xlat
mov
out
movsl
cmp
dec
cld
xchg
xor
pop
jae
and
xchg
dec
pop
fldl
xor
rcrl
inc
in
sbb
leave
inc
xchg
xchg
xor
aaa
and
cltd
mov
in
jo
cld
xchg
outsl
xor
ret
out
cmp
out
repz
std
cli
pushf
push
aas
scas
sub
xchg
fdivrl
mov
adc
fiaddl
push
push
cmpsl
insb
cmp
stos
jne
incb
pop
aam
inc
fildl
insb
mov
insb
cmp
mov
dec
pop
fcmovb
icebp
mov
out
push
xor
ret
repz
ljmp
test
icebp
int3
adc
insl
adcl
pop
inc
cltd
dec
out
and
out
xor
fadd
xchg
mov
fdivrs
dec
movsl
leave
jbe
hlt
cmp
mov
shl
loop
rol
xchg
js
pop
ret
mov
inc
cmp
ss
xlat
nop
ret
push
outsb
ret
adc
stc
jo
cmpsb
inc
mov
lahf
or
cmc
jae
outsb
lods
inc
test
pop
dec
dec
fidivl
jae
jne
lds
cmp
cmpsb
jecxz
xchg
mov
insl
fstp
lods
lahf
out
fistl
aas
popa
fdivrl
jns
sbb
roll
xlat
add
fstl
ficoml
cs
dec
add
cltd
or
add
jecxz
faddl
dec
push
iret
cmpsb
inc
inc
xlat
cmpsl
and
inc
iret
xchg
or
call
int
mov
jge
repz
xchg
pop
push
jnp
icebp
and
test
or
adc
dec
add
sahf
lods
fwait
test
jecxz
sub
out
fcmovb
xlat
sarb
push
and
and
jae
mov
adc
and
cmp
jmp
jg
int
push
into
insl
mov
loop
gs
jae
cmp
je
jg
pop
and
cltd
fisubl
pop
sbbl
adc
and
mov
xchg
das
into
jnp
xchg
and
dec
fisubs
jb
cwtl
xchg
movsl
mov
test
dec
pushf
mov
test
push
jg
and
bnd
mov
and
ret
out
xchg
fs
out
pop
cmpsb
jbe,pn
or
test
cmp
adc
mov
cli
cmp
cmpsb
insl
adc
jns
stos
cs
lods
fdivr
dec
xchg
sti
cmp
lret
pusha
xchg
push
lods
mov
cltd
jecxz
push
dec
ds
jmp
cmp
ss
std
mov
cmp
push
mov
and
adc
in
pop
sbb
xchg
enter
mov
inc
jae
fisttps
dec
cli
iret
rol
push
scas
nop
push
cmp
lea
sar
rcll
int
push
das
add
inc
nop
push
in
lea
test
cmp
cs
push
ljmp
push
pop
dec
sbb
scas
or
mov
test
loope
cwtl
shrb
push
cli
nop
push
xor
leave
dec
popa
jne
cwtl
outsl
dec
dec
mov
push
mov
dec
cmp
add
jae
mov
mov
stc
jb
xor
mov
pop
mov
fdivs
rcr
inc
or
push
insb
jmp
loop
and
addr16
jg
and
vexp2pd
ret
test
je
fidivs
stc
rolb
jmp
daa
mov
push
jb
addr16
mov
ret
mov
mov
jae
mov
gs
test
sub
cmpsl
ja
aam
aaa
je
sub
ja
int
data16
cmc
mov
std
fisttpl
test
jmp
adc
pushf
je
push
sbb
outsl
jge
addr16
xchg
test
call
lock
mov
jl
stos
mov
lret
fisttpll
repnz
or
xchg
sub
add
mov
lock
mov
jmp
sbb
sbb
xor
cmp
sti
sbb
inc
xor
and
mov
push
push
stos
sbb
mov
imul
jns
test
call
aas
fs
jbe
xor
pop
jno
push
ret
jb
adc
add
jno
sbb
fwait
lcall
fneni(8087
push
add
ret
mov
mov
cmp
mov
mov
sbb
pop
imul
xchg
hlt
xor
add
dec
mov
xchg
movsb
mov
ret
jmp
std
and
xor
and
sti
add
out
idivl
inc
sbb
push
loopne
cmc
insl
imul
and
sbb
daa
sbb
ja
mov
mov
inc
ljmp
fwait
cmp
out
call
addr16
cmpl
xchg
mov
arpl
stc
xor
imul
leave
cmp
xchg
inc
jnp
mov
in
adc
push
sbb
inc
xchg
shll
je
shr
mov
lds
sti
addr16
cld
dec
lea
in
add
sub
xchg
outsl
jnp
insb
mov
jcxz
or
shlb
and
out
fcompl
mov
mov
mov
jl
aaa
fbld
fwait
sbb
fcmovbe
adc
pop
lods
subb
mov
sbb
mov
mov
xchg
fmull
frstor
jl
mov
mov
pop
cli
jecxz
pusha
aas
ja
adc
fidivl
mov
cmp
pop
addl
adc
lret
push
or
or
sbb
xchg
rcr
fldl
pop
outsb
xchg
mov
pop
fimull
add
and
add
xchg
xchg
jecxz
sub
mov
stos
lock
or
jle
pop
cli
jg
lds
push
out
mov
mov
xor
xor
lods
cmpsb
imul
lods
jp
push
mov
xor
jl
mov
jecxz
jno
jnp
cmp
jb
sti
faddl
int
call
fwait
and
and
cld
push
add
int
add
cmpsb
shlb
repz
rorl
cwtl
sbbb
js
les
jl
shl
ret
inc
pop
jecxz
ja
sbb
mov
push
mov
pop
subl
jge
inc
movsl
fsub
xchg
pop
outsl
in
in
fs
and
in
popf
sbb
dec
mov
nop
ds
lock
and
clc
mov
das
and
xchg
insl
cmp
addr16
mov
xor
call
dec
and
call
popl
jecxz
jmp
xchg
cmp
mov
repz
add
gs
fsubs
xorl
test
nop
inc
mov
fstps
into
inc
sbb
xchg
movsb
scas
inc
sub
pop
mov
pop
fdivrs
push
sub
add
mov
fxch
sub
pop
ret
cmp
add
pop
mov
int
mov
pop
dec
pop
pop
ret
and
push
ljmp
shl
imul
xchg
repz
mov
adc
addr16
jbe
cmpsb
pop
arpl
jnp
mov
push
cmpsb
xchg
mov
mov
mov
push
sbb
pop
loop
pop
sbb
gs
insl
imul
sub
addr16
insl
xchg
mov
pusha
push
popf
jae
inc
fcmovnu
imul
sbb
xchg
pop
dec
arpl
dec
pop
data16
repz
mov
inc
or
test
jp
imul
inc
lods
imul
mov
out
or
xchg
mov
xor
mov
imul
sbb
lods
pop
fsubr
pop
ficoms
ret
adcl
mov
js
sbb
or
or
mov
imul
lds
mov
cmp
xchg
scas
cld
pop
sbb
fiaddl
jle
pop
ja
pop
jbe
pop
and
aad
xlat
or
pop
out
aad
mov
mov
addr16
mov
inc
jmp
mov
adc
repz
inc
push
data16
mov
inc
mov
jmp
add
repz
sbb
pop
sub
or
jns
dec
mov
jne
movsb
jo
gs
mov
jle
adc
out
mov
mov
dec
loopne
dec
ljmp
call
sub
pop
xchg
dec
cmp
fwait
pop
int3
adc
dec
hlt
cld
dec
sub
and
lret
cmp
xchg
pop
sub
stos
hlt
ffree
add
push
xchg
inc
ljmp
and
popf
outsb
sub
xchg
push
mov
icebp
push
fwait
and
mov
lea
in
test
popa
adc
je
sbb
jno
test
pop
dec
in
adc
imul
dec
or
loop
sahf
stc
test
aas
ss
mov
jo
xchg
fwait
hlt
cli
mov
mov
fistl
sub
addr16
jb
scas
and
jmp
iret
cmp
data16
cs
xorl
add
int
jp
mov
and
or
xchg
or
xchg
jns
sub
sti
ret
ljmp
cmpl
shrb
mov
cli
call
movsb
loopne
cmpsl
orl
pop
cmp
sti
jb,pn
dec
fcmovnb
push
and
fs
pop
sub
and
cltd
and
lahf
jb
mov
outsb
jecxz
insl
in
cmpsl
sbb
in
aam
repz
push
mov
pop
mov
mov
data16
fs
mov
sbb
fwait
jns
aas
les
pop
sub
aad
ss
fmul
dec
dec
fidivrl
gs
das
sub
leave
mov
sub
loop
xor
adc
xchg
cltd
gs
arpl
out
push
cli
out
mov
lds
lock
pusha
aas
xchg
sub
mov
jl
fldl
shll
rcr
frstpm(287
ret
fcompl
aad
shrl
sbb
xor
jne
cmp
xchg
adc
push
rorb
add
je
leave
cmp
xchg
and
rcr
jmp
adc
les
jg
xlat
movl
fisttpll
out
jb
push
fmuls
mov
popa
xchg
enter
faddl
call
fsub
mul
sbb
jne
repz
clc
and
add
dec
xchg
std
mov
cld
icebp
stos
xchg
daa
andb
xor
cmpsl
push
cmp
xchg
fnstsw
ljmp
popf
pop
test
popf
jl
andl
popf
mov
xor
push
push
xchg
sbb
add
adc
pop
xor
sbb
add
xor
decl
xor
add
jmp
dec
fsts
insl
pop
imul
sbb
mov
pop
negb
xor
and
xchg
mov
fildl
ljmp
mov
cs
or
push
std
fs
mov
and
inc
dec
aad
in
cmp
loope
cmp
repz
ret
inc
ret
push
mov
xor
popf
dec
add
mov
mov
loope
mov
stc
pop
pushf
push
add
mov
inc
fildll
pop
mov
aas
mov
add
and
mov
inc
fisubs
fwait
insl
mov
jae
jmp
sbbl
push
into
inc
in
xor
mov
or
xor
push
int
sbb
cmpsl
xorb
adc
xchg
dec
dec
sbb
sub
xchg
ffreep
imul
mov
sahf
push
cmc
das
fstpl
pop
and
jmp
cmp
dec
mov
ss
sub
lret
fistps
test
jp
repz
aam
and
icebp
and
sub
fstpt
jb
hlt
or
mov
jecxz
push
ret
roll
fcos
cmp
subl
dec
icebp
sbb
xchg
mov
sti
cmpsl
dec
sbb
pushf
cli
stc
dec
stos
mov
pop
adc
dec
dec
or
sub
stos
repz
rorl
int
sbb
or
lea
andl
xor
xor
cltd
jmp
mov
popa
and
adc
out
hlt
xor
add
dec
mov
fmuls
scas
dec
xor
iret
cvtpi2ps
insl
jmp
leave
mov
mov
pop
pushf
lret
sub
sub
gs
cmp
aad
xor
test
pop
bound
xchg
into
insl
ja
mov
in
lret
jne
push
pop
lds
mov
mov
mov
fwait
movsb
mov
pop
cltd
cmp
ds
int3
rcl
aas
cs
lret
push
icebp
les
insl
dec
pusha
leave
push
push
lds
mov
ljmp
data16
sub
rclb
mov
imul
loopne
rcr
les
xchg
lret
arpl
out
repz
mov
inc
sbb
dec
inc
cmp
dec
in
lret
sti
pop
insb
addr16
pusha
mov
xchg
cwtl
insb
and
xchg
sbb
push
ret
mov
jne
cmpsl
adc
inc
xor
leave
xchg
pushf
das
jmp
sti
sbb
pop
dec
and
lcall
adc
or
fisubl
or
mov
jp
subl
ret
pop
xor
mov
sub
mov
pop
rcrb
push
fwait
inc
rorl
fstp
sti
ds
ss
or
inc
and
dec
dec
mov
and
and
dec
jg
mov
sub
or
loope
in
inc
inc
js
popf
ret
cmp
arpl
push
push
sti
dec
sbb
fs
test
and
jmp
sbbb
jecxz
pop
movups
pop
out
insb
pop
imul
xchg
jmp
mov
fiaddl
sbb
pusha
dec
cld
inc
sbbb
insb
pop
jno
cmp
stos
inc
cmpsb
scas
rcll
inc
aas
repnz
cli
dec
sub
enter
and
js
pop
cmp
sbb
sahf
mov
test
sub
xor
sbb
sbb
inc
pusha
sbb
roll
dec
inc
out
cmpsl
sub
mov
scas
dec
xchg
jecxz
leave
sbb
xor
mov
pop
fstps
cmpsl
sbb
xchg
mov
insl
adc
lcall
mov
rorb
test
sbb
and
mov
push
xor
jo
jp
aam
notl
leave
nop
jecxz
bound
jecxz
movq
jnp
cmp
iret
mov
nop
mov
je
pop
sub
or
out
xchg
sbb
xchg
inc
in
push
dec
lcall
insb
jecxz
cmp
jg
push
ds
cs
in
dec
jmp
xor
pop
mov
fstpt
xor
lret
dec
pop
add
jns
cmp
and
ljmp
jecxz
xor
xor
movl
shr
mov
inc
aad
mov
mov
aam
daa
iret
mov
jb
cltd
mov
int
pop
rcl
clc
or
pop
xor
ljmp
sarb
repz
jge
and
adc
lret
sbb
xlat
leave
cld
outsl
and
cltd
inc
jle
jle
push
sbb
and
push
mov
cmp
jecxz
sti
sbb
lret
mov
sbb
cwtl
ljmp
int3
add
mov
dec
fs
out
into
loopne
mov
out
dec
je
sub
mov
sahf
or
je
fnsave
sbb
and
out
jle
mov
fsub
adc
sub
roll
test
lods
fwait
into
sbbl
cld
jmp
pusha
jb
aas
enter
sbb
out
sub
rorl
pop
dec
les
jl
out
fbstp
jb
sbb
cld
dec
jns
dec
inc
aas
xor
ret
shll
jge
jo
sbb
pop
int
inc
fsubrl
test
out
and
xor
outsb
sub
aam
inc
push
fwait
jmp
movsl
sub
sub
fwait
and
aad
cs
movsb
out
aam
int
inc
icebp
bound
add
fidivrl
and
gs
push
insb
mov
fwait
gs
dec
xrelease
ret
test
leave
dec
pop
mov
enter
imul
cmp
pop
test
mov
jmp
arpl
shl
not
sbb
xchg
sub
xor
or
jo
sahf
stos
mov
stos
fiadds
sarb
dec
aas
push
out
cmp
lods
mov
cld
mov
sti
fcom
mov
pop
fwait
mov
sub
mov
jnp
ljmp
xchg
jae
jo
xlat
imul
ds
dec
push
add
pop
loopne
outsb
pop
push
aas
and
mov
insl
push
into
ret
xchg
mov
shr
push
pop
ds
push
pop
fcoml
ffreep
sbb
in
stos
iret
sub
ljmp
cmp
fdivrl
lret
push
outsb
sbb
pop
fildll
mov
xor
inc
cli
or
mov
out
adc
push
mov
je
dec
jb
push
push
data16
jle
adc
cs
insl
sub
rcr
adc
pop
dec
and
pop
jmp
iret
cmpsl
std
ret
popf
sbb
in
inc
add
orl
xlat
in
inc
jb
arpl
pop
test
inc
jns
outsl
into
int
loope
aaa
subb
repnz
cmp
xchg
neg
js
add
sub
dec
outsb
dec
xlat
xchg
push
lods
filds
es
icebp
pop
jne
add
pop
test
fnstsw
cmc
pop
or
sbb
sbb
mov
fdivl
pusha
jnp
test
mov
das
cmp
test
insl
xlat
jmp
lds
ret
dec
shl
jecxz
dec
sub
adc
cs
ja
ss
in
mov
scas
leave
fcompl
roll
arpl
int
jmp
xor
add
sti
jne
xor
pop
xrelease
pop
dec
push
dec
aam
ljmp
and
xor
jecxz
jmp
shll
popf
bound
dec
outsl
jne
sti
test
fsubrl
out
jo
bound
fucomi
loope
loop
add
mov
in
les
jecxz
cs
fisttpl
in
je
inc
arpl
jle
sbb
inc
int3
sbb
sub
js
pop
mov
mov
cmp
cmp
ret
push
inc
ret
sub
push
js
lea
cmpsl
jae
jb
aaa
ret
aaa
ret
repz
rorb
xchg
mov
repz
test
fldt
xchg
jae
shll
push
dec
sbb
jg
scas
cmpsl
sub
inc
addr16
dec
xor
cmp
outsl
add
pop
xchg
jp
push
cmp
jnp
sbb
and
cmp
jge
int
mov
pop
push
in
inc
pop
imul
or
sbb
dec
sti
mov
sbb
sarb
and
xor
push
cmp
pop
lods
movsl
lret
sbb
bswap
cmp
jne
jno
mov
in
xchg
fisttpl
sbb
ljmp
inc
mov
jge
sub
ljmp
cld
int3
sbb
rorl
lea
sbb
inc
lds
mov
xor
mov
mov
fwait
in
sbbl
sti
push
xor
xlat
push
das
dec
orl
cmp
inc
iret
insl
xor
jp
jg
inc
mov
cli
sbb
frstor
cmc
sbb
xchg
imul
addr16
jmp
xchg
adc
mov
test
das
stc
xlat
xchg
xchg
je
xchg
mov
pusha
aad
xor
aas
ret
xor
inc
jecxz
out
push
movsl
ss
push
mov
pop
popf
in
leave
sbb
inc
es
pop
jb
xchg
xchg
mov
fdivr
inc
outsl
cltd
dec
rcl
inc
bound
in
adc
inc
sbb
out
aas
sub
jecxz
inc
out
test
lea
test
cmp
rcll
adc
dec
sbb
jne
test
push
enter
mov
pop
imul
stos
jo
xorb
dec
popa
arpl
mov
loop
mov
cmp
mov
jecxz
and
cvtdq2ps
outsl
push
xchg
jmp
or
daa
ror
dec
fwait
sbb
lahf
adc
and
add
out
push
outsl
mov
fldt
lods
push
inc
dec
mov
pop
ret
negl
jno
add
pop
jmp
xlat
jmp
jle
jns
fisttpl
pop
xlat
lods
pop
ljmp
lds
push
test
inc
in
movsb
dec
push
jle
imul
push
sub
push
dec
adc
jbe
sbb
mov
mov
out
jle
jno
xor
test
inc
rorl
mov
rcl
pop
sbb
and
mov
inc
cmpsl
movb
adc
es
inc
lea
inc
pop
test
stos
fsubl
mov
ljmp
iret
lret
dec
mov
fucom
leave
test
jne
pop
xor
add
xor
fs
in
dec
fstpt
rcl
dec
pop
push
fcmovu
dec
cli
jge
jmp
cmpsl
ret
lods
outsl
ljmp
imul
sbb
xchg
xchg
inc
hlt
mov
adc
xchg
in
cmpsl
or
cwtl
pop
cmp
pop
stos
and
jmp
mov
enter
dec
add
lds
inc
xlat
leave
test
mov
ffreep
pop
aam
dec
add
out
hlt
into
xchg
mov
cmp
punpckhwd
shl
sbb
jb
jns
je
jmp
out
out
pop
sbb
jp
les
ret
into
xor
pop
imulb
sbb
cmpsl
or
test
cmp
dec
in
sub
jmp
clc
mov
mov
mov
xor
pushf
jmp
lods
xchg
stos
dec
aad
mov
mov
jecxz
xchg
mov
out
cmc
ja
enter
and
dec
lret
pop
xor
push
rcll
sbb
pop
pop
fnstcw
lret
or
movsl
sbb
xlat
xchg
mov
mov
jge
repz
and
mov
mov
pop
sbb
mov
scas
shrl
test
lds
mov
jecxz
roll
in
enter
mov
jg
cs
xlat
and
in
sbb
popa
pop
ljmp
sbb
push
sbb
jmp
shrl
sbb
lods
mov
dec
and
inc
add
cmpsb
movsl
push
push
lea
inc
test
in
pop
jae
stc
outsl
cmp
gs
mov
fsubrl
and
loop
iret
cli
cmp
adc
jb
push
loope
and
jmp
rcrl
jmp
in
adc
mov
xor
dec
dec
fnstsw
dec
xor
lds
daa
jecxz
mov
cmpl
sub
inc
mov
dec
jne
mov
repz
mov
aad
stos
adc
inc
stc
call
imul
xor
dec
adc
push
scas
popf
test
inc
aaa
fldt
xlat
mov
add
pushf
xchg
push
cltd
or
pop
lret
or
int
jl
or
cmp
push
xchg
xchg
dec
and
fdivr
inc
ret
aad
sbb
mov
mov
mov
cmc
mov
dec
sbb
enter
shll
test
sub
test
dec
add
shrl
rol
movsb
push
and
sub
sbb
mov
sahf
imul
xlat
push
mov
push
les
mov
mov
ret
and
push
insl
mov
int3
clc
or
fcompl
inc
popa
std
test
or
out
xor
mov
ror
sbb
inc
sub
cltd
shrl
and
nop
add
pop
jecxz
dec
and
adc
stc
dec
adc
and
loope
icebp
ret
and
js
push
cli
ret
push
cmc
jb
dec
sbb
xor
adc
orl
popf
xchg
sbb
mov
xlat
jl
sbb
stc
cmc
push
insb
scas
das
xor
mov
into
adc
enter
test
dec
cmc
xor
lods
loope
lret
loope
adc
jae
cs
fcomip
outsb
pop
jecxz
repz
pavgb
es
loope
lods
pop
into
or
scas
jb
test
mov
sbb
subl
sbb
hlt
loopne
jle
scas
mulb
outsb
xor
addr16
es
jmp
jno
jge
fsubrl
push
shlb
gs
xchg
inc
push
mov
pop
pop
push
sbb
pop
jnp
inc
sbb
testl
or
and
sbb
xor
sar
sbb
dec
jb
lds
dec
mov
out
cmp
movsl
fimull
test
cwtl
jns
sbb
popf
or
lods
adc
stc
sbb
fcompl
aaa
fwait
je
push
movsl
lods
pop
in
repz
push
in
and
fistps
mov
fucomp
sbb
inc
xlat
mov
mov
popf
sarb
cmp
dec
cmpsl
arpl
mov
out
aaa
add
sbb
and
or
sub
or
sub
xor
mov
push
leave
pop
sbb
mov
push
xor
and
repnz
push
and
insb
fmuls
jno
xchg
loop
rorb
std
lahf
jge
jno
cmp
and
fs
call
testl
sbb
pop
pop
xor
push
incl
pop
adc
fsts
ds
pop
fwait
xchg
jb
pushf
jno
std
iret
int3
pop
sarl
fiaddl
and
dec
stos
and
mov
sbb
scas
and
add
je
adc
shrw
js
cmp
mov
js
hlt
jecxz
test
xor
mov
mov
xchg
push
mov
add
push
jae
jge
in
and
push
in
dec
jne
sbb
and
insl
xor
jnp
aad
and
add
or
jg
mov
mov
sub
and
xchg
and
lahf
and
push
lds
fwait
sbb
mov
out
and
idivl
xor
leave
sar
jg
lods
xchg
lret
fisubl
out
subps
clc
out
fs
dec
jae
jno
scas
inc
in
outsl
dec
dec
jae
adc
mov
inc
add
jp
stc
mov
mov
insl
imul
mov
outsb
out
ret
loopne
xchg
fnstcw
sti
adc
push
dec
icebp
mov
loope
lret
lret
mov
shll
push
xchg
lods
pop
push
inc
lds
mov
xor
loop
pop
imul
daa
push
and
loopw
shll
xchg
mov
subb
imul
cmp
xor
jno
fwait
jnp
jge
ret
xor
roll
out
movsl
out
pop
dec
dec
cld
popf
fucomi
mov
call
inc
mov
add
stc
push
dec
orb
xor
sub
mov
into
leave
subb
fsubrl
rolb
sub
scas
jecxz
push
movsl
and
insb
cmp
xchg
push
fldt
cmp
push
xchg
rorl
dec
push
mov
movsl
add
sti
insl
mov
sub
cmp
sbb
test
and
xor
cmp
mov
mov
bnd
or
cltd
enter
push
or
and
add
repz
inc
nop
aam
add
in
fnstsw
lods
xor
and
fsubrl
jg
adc
repz
inc
push
pop
int
cld
cmpsl
push
mov
shll
out
dec
lea
stos
sbb
sbb
mov
or
in
scas
pop
jge
jp
sbb
mov
pop
push
xchg
add
pop
xchg
pop
fs
call
xor
out
shrl
sbbb
enter
jecxz
mov
cwtl
loope
fimull
mov
subl
fcompl
sbb
in
movsl
hlt
repz
mov
jg
sbb
inc
popa
popf
sti
test
idivb
fsubl
mov
lds
mov
jmp
aam
ret
sahf
mov
int3
outsl
lds
icebp
roll
push
pop
sub
push
addl
aas
fsubrl
int
inc
shll
jo
lcall
movsb
sub
pop
pusha
push
test
mov
stos
xchg
pop
lea
jb
jne
jle
push
insb
jg
cli
repz
mov
add
jae
aas
dec
xor
dec
imul
sbb
movsl
xchg
or
sahf
pop
movsl
jnp
xchg
shlb
mov
fwait
aam
pop
fcom
test
fsubl
xor
mov
insb
dec
adc
arpl
out
dec
add
lds
pop
sub
inc
inc
aad
int3
cmp
sub
cmp
mov
repnz
cmp
sbb
neg
inc
es
call
jns
in
les
fcmove
inc
int
rorl
sub
rorl
push
mov
ret
dec
ret
dec
leave
aas
sbb
mov
sbb
sbbl
or
pop
int
dec
mov
mov
scas
mov
adc
gs
jge
or
inc
mov
xchg
fmuls
ljmp
test
or
lea
mov
sub
sbbb
scas
clc
lods
jae
push
lods
sbb
or
dec
and
lcall
xchg
cmp
insl
loopne
sti
imul
aaa
xor
aam
mov
xor
aam
xchg
sub
mov
sub
xlat
gs
fsubrs
sbb
sti
leave
pop
jmp
cld
mov
dec
mov
sub
jbe
sbb
out
push
xchg
std
sbb
repz
arpl
lcall
pop
mov
lret
jmp
fstps
shll
or
mov
add
fistl
sub
fcmovnbe
or
push
fsubl
sbb
add
pop
xchg
es
cmp
add
idivb
inc
scas
inc
test
adc
lret
adc
ret
and
fst
rol
dec
mov
and
mov
loop
gs
xlat
dec
aas
orl
cmpsl
fstpl
pop
xor
test
jne
andb
mov
mov
mov
jl
popf
pop
out
pop
ss
popf
test
sub
cmpsb
fisubrl
sti
push
mov
add
aaa
mov
aad
cld
dec
int
jp
fistps
jle
lret
and
popa
lret
fisubl
sbb
pusha
xor
mov
clc
imul
ret
sbb
and
pop
dec
mov
cmp
shll
les
fwait
inc
jmp
flds
outsb
lcall
dec
sbb
shll
dec
or
mov
inc
xor
fmuls
in
and
int3
ljmp
mov
push
sbb
ret
shlb
dec
lcall
sti
sarl
jl
mov
mov
fndisi(8087
sti
pop
cmp
loopne
pop
and
xchg
sbb
cmpsl
dec
in
leave
fistpll
loop
sti
inc
icebp
and
sbb
or
add
mov
adc
xchg
mov
jp
push
lea
repz
shr
xor
and
jecxz
imul
jmp
dec
push
sti
mov
insb
sbb
push
jp
fstps
roll
dec
sub
repz
pop
xchg
jle
mov
mov
mov
or
ret
ds
mov
enter
insl
fwait
push
stos
inc
imul
shr
xor
sti
out
fidivrl
inc
push
and
dec
mov
jl
roll
sti
push
cmp
jp
cmc
pop
sub
scas
lods
inc
pop
sti
jnp
fsubrs
jmp
inc
sarl
pop
arpl
scas
in
ss
repnz
cmp
daa
cld
mov
dec
fsubrl
aad
push
rcll
and
hlt
and
sub
push
cmp
push
popf
sub
mov
jecxz
mov
ret
daa
enter
ds
stos
out
stos
test
mov
push
in
xchg
sub
dec
fsts
rcr
fisttpll
and
call
nop
jl
mov
jne
xchg
cmp
or
xchg
jne
mov
cli
inc
jle
ljmp
xlat
not
dec
sub
sbb
in
fstl
xchg
inc
jb
fcoml
ret
jnp
add
aam
jle
inc
sbb
adc
inc
sub
and
inc
cmp
xor
aam
imul
cmp
xlat
cmp
mov
imul
pop
out
iret
sarl
ss
out
cmpb
fsincos
xchg
aam
and
dec
lret
aad
roll
xor
inc
movsl
out
jl
decb
and
ljmp
dec
mov
pop
std
sbb
fnstsw
leave
lea
test
ret
mov
cld
mov
pop
adc
push
rclb
pop
pop
xchg
sub
out
dec
aas
ja
leave
divl
add
adc
ret
out
addl
in
in
sti
and
jecxz
pop
in
jmp
loope
in
fadd
loope
mov
xchg
mov
dec
aad
fldl
adc
mov
xchg
jmp
es
mov
test
int
and
xor
lds
fldt
leave
and
inc
pop
loopne
fsub
ss
fdivl
mov
sbb
cmp
ds
js
pusha
shrb
outsb
lea
scas
mov
sbb
daa
add
sub
rcll
ret
fisubl
push
stos
lret
fidivrl
push
daa
loopne
fwait
stos
inc
lret
dec
inc
or
iret
pop
fcmovu
sbb
mov
call
xchg
jecxz
or
cmp
sub
in
mov
rcll
adcl
sbb
pop
jecxz
scas
pop
jg
inc
loop
and
lret
stc
or
or
mov
insl
movl
add
add
jmp
testb
insl
mov
jmp
bound
sbb
rcll
insl
sti
sub
stos
test
cmovb
into
or
cwtd
imul
or
add
ret
mov
cmc
daa
addb
push
pop
adc
pop
sbb
mov
push
mov
mov
jae
xchg
hlt
and
faddl
and
int3
pop
sbb
and
lds
ljmp
orb
xor
cmp
stc
pop
sbb
sub
ret
jl
mov
xchg
outsl
iret
mov
popa
jb
jmp
mov
jp
and
leave
xchg
out
push
bound
sbb
test
mov
int3
sbb
sbb
out
insl
enter
aad
mov
pop
and
xchg
dec
or
mov
push
add
mov
ss
push
or
outsl
xchg
push
jnp
pop
nop
mov
xor
enter
leave
push
sub
add
iret
fs
iret
int
int3
and
data16
andl
daa
cmpsb
cmpsb
rcl
and
sti
jno
pop
pop
jecxz
xor
cltd
xchg
arpl
sbb
rorl
and
les
ljmp
hlt
outsb
mov
sub
int3
in
jmp
mov
push
faddp
lret
pop
fstpl
dec
adc
push
loop
int3
cmp
adc
xchg
aad
fs
imul
inc
xor
lea
push
imul
or
sarb
fiadds
divb
shll
stos
or
imul
push
cmc
aam
insb
in
idivl
cmp
in
imul
xchg
cs
pop
fdivrp
cmpsl
lahf
fiaddl
jbe
sub
mov
or
xchg
repz
or
mov
jmp
mov
lret
test
movsl
in
shll
pop
dec
lea
cmc
rol
call
jae
cltd
pop
scas
sub
sub
addr16
sbb
cltd
inc
dec
test
fimuls
decl
jmp
fmul
ja
lcall
inc
jns
dec
loopne
mov
leave
xor
and
pop
ficomps
ja
and
roll
ficoml
inc
out
jne
add
sbb
loop
mov
lods
pop
adc
loope
cli
lods
push
jg
fsubl
std
aaa
int
negl
mov
xor
or
fadd
les
mov
das
std
fwait
xor
mov
jbe
sub
lds
cs
icebp
push
movsb
or
dec
mov
push
xorl
movntps
insb
outsl
dec
sbb
mov
iret
lret
adc
and
sbb
shlb
sbb
dec
shll
loope
or
jno
inc
mov
repz
js
je
adc
inc
jecxz
fldenv
pop
negl
adc
movsw
addr16
es
loope
sub
jecxz
cmc
jecxz
jmp
adc
jno
cmp
fwait
in
and
aad
rol
rcrl
sub
mov
mov
outsl
xchg
jbe
repz
lds
pop
loopne
sbbb
xor
vsqrtsd
dec
mov
mov
cmpl
and
push
pop
and
cs
xchg
fucom
mov
dec
insb
push
rcll
cli
loopne
xor
aaa
xor
sbb
stos
test
xchg
adc
dec
cmc
fdivs
iret
xchg
pusha
pop
fldl2t
sbb
jnp
cs
fcoml
les
jno
jl
mov
cmp
lcall
sub
lcall
sub
jle
inc
es
xor
bound
xor
imul
int3
mov
sbb
lea
mov
fistl
push
int
mov
fidivrl
sbb
repz
xchg
aam
xorl
mov
fistl
fistl
inc
mov
and
dec
sbbb
clc
aad
fisttpl
xor
je
mov
sub
in
movsb
daa
sub
sbb
roll
adc
movsl
jecxz
shl
mov
ja
jbe
ret
ret
and
push
in
in
sub
aam
xor
or
and
or
leave
add
mov
aad
sbb
sbb
adcl
testl
lcall
in
rcrl
aaa
mov
out
in
imul
cltd
cmp
shl
jge
repz
mov
and
mov
adc
and
mov
repz
push
sti
out
xlat
jo
cmpsl
subl
sbb
test
cmp
int
aam
xor
pop
imul
cwtl
inc
push
xor
in
inc
leave
jecxz
aaa
rcl
mov
pop
adc
pop
jmp
jp
test
dec
xlat
mov
mov
pop
adc
ret
cmp
sub
add
xor
mov
ror
repnz
ret
test
pop
fwait
push
cmc
jmp
aam
outsl
jno
jno
addb
jp
and
jb
subl
jg
cmpsl
jb
mov
mov
mov
cs
shll
test
push
neg
xorb
mov
dec
and
enter
jecxz
mov
repnz
fxtract
xor
inc
hlt
sbb
movsl
sbb
and
mov
in
add
inc
dec
ret
test
push
sarb
ret
out
insl
int
push
ss
inc
inc
or
and
xor
insb
les
leave
ror
ds
inc
jl
aam
aad
mov
fistl
pop
movsl
fnsave
das
ret
std
dec
cltd
gs
dec
mov
clc
mov
subl
in
pop
mov
aam
or
sub
mov
cmp
push
icebp
int
data16
inc
lds
sti
aas
mov
loopne
cmp
call
pop
insl
xor
addr16
leave
push
movsl
or
lea
and
inc
cmp
lahf
fdivs
loope
out
subl
xchg
jg
and
or
dec
cld
mov
loope
inc
mov
ljmp
popf
push
cltd
xchg
outsb
and
jae
dec
test
in
mov
pop
jg
cmpsl
add
dec
stc
ret
daa
out
lock
cmp
shr
sbb
jno
dec
dec
jnp
pop
scas
out
and
jg
arpl
testl
and
mov
std
mov
sarl
jg
repz
stc
call
xor
ja
and
mov
pop
add
jecxz
or
push
jg
adc
add
repz
leave
sbb
xlat
adc
mov
pop
jae
sti
dec
jmp
test
jmp
iret
mov
mov
and
adc
cmp
pop
lds
negl
xchg
jo
push
fldcw
sti
add
cmpb
int3
rep
aam
mov
mov
rcrb
mov
out
cmp
sbbl
fistl
push
gs
paddw
sbb
imul
push
fiaddl
push
std
jb
xor
push
pop
bsr
add
xchg
add
shr
add
pop
jmp
mov
sbb
xor
pop
fwait
mov
stos
lea
iret
add
xchg
bound
mov
loope
add
jne
lods
pop
lret
aam
jge
push
sbb
test
insl
rorb
jmp
cltd
imul
fisubl
out
jmp
cmp
aam
subb
enter
mov
xlat
ret
scas
mov
orl
iret
xchg
dec
mov
mov
mov
jnp
sub
mov
test
dec
dec
push
shrl
mov
enter
or
or
ss
lea
pop
insl
movl
out
dec
and
ljmp
pop
mov
or
fs
outsl
clc
jge
ret
in
mov
leave
fwait
jp
jnp
les
frstor
xchg
js
mov
add
dec
lcall
sub
jb
lds
jecxz
cmp
iret
push
push
mov
fs
sbb
cli
in
out
sbb
lea
jecxz
or
ljmp
sbb
and
por
push
xchg
fistpl
ftst
outsb
xor
sbb
mov
pop
jb
or
dec
test
mov
aas
outsl
imul
fidivrl
inc
push
xchg
out
mov
in
aam
addr16
loop
repz
inc
inc
dec
pop
xchg
xor
nop
sbb
loop
xorl
and
ja
es
pop
jb
roll
fsubl
loope
sub
inc
jg
imul
xor
cmp
jp
inc
movlps
loopne
stc
and
lods
mov
xchg
mov
sbb
cwtl
popl
lds
xchg
int3
add
pop
movsl
nop
adc
cmp
in
jb
rcr
jl
jle
filds
sti
mov
mov
mov
enter
push
push
jns
jp
popa
mov
add
inc
or
or
out
fwait
pop
insl
imul
ja
nop
xor
xchg
push
pop
sub
pop
call
mov
bound
in
loope
push
jl
imulb
and
out
jp
dec
sub
sarl
sub
push
push
dec
push
lahf
xchg
pop
sub
cmp
cmp
xchg
cltd
call
outsb
dec
sbb
insl
test
mov
incl
lock
xorb
push
cmpl
pop
xchg
jp
mov
ret
pop
notl
lea
and
jb
test
psubq
lcall
push
call
pop
dec
mov
fstpl
jmp
addr16
andl
dec
imul
std
in
jnp
xlat
aas
pop
inc
repz
movsb
popa
cmpsb
js
inc
daa
aad
orb
ss
push
pop
dec
cmpsl
stos
jnp
scas
out
inc
adc
inc
loop
xchg
arpl
out
dec
lcall
jmp
xor
sub
cmp
arpl
or
xor
ret
rorb
xor
jne
data16
lret
cmp
popf
push
jg
mov
test
aaa
jle
fistl
int3
mov
sbb
es
sub
sbb
inc
stc
add
pop
test
push
mov
xchg
jl
lret
jne
cs
cvtps2pd
push
dec
cmpsl
repz
dec
mov
jp
clc
aam
jmp
jmp
adc
ljmp
xor
or
inc
add
inc
fsubl
adc
adc
popl
je
pusha
addr16
test
ret
pushf
jae
and
cmp
xor
pop
xchg
mov
push
xorl
push
and
loop
pop
fwait
dec
pop
in
stc
inc
push
lods
mov
idivl
cmp
test
adc
pop
and
push
cmp
jmp
cmpsb
push
dec
push
pop
inc
or
rcrb
lret
roll
ret
out
sbb
xchg
add
pop
xor
dec
mov
mov
sub
xchg
fmuls
jae
insl
ret
add
cmp
pop
test
sbb
popa
adc
cwtl
pop
ficoml
sbb
jno
cld
sbb
inc
mov
xor
or
adc
push
repz
sbb
fisubrl
pop
pop
jle
pop
cli
push
push
pop
xor
jnp
mov
mov
jnp
xchg
xor
xor
dec
fidivl
dec
mov
test
push
test
xor
dec
xchg
mov
mov
mov
into
lret
scas
mov
mov
das
fldenv
fdivrl
popa
std
cmp
cltd
sub
pop
ljmp
xchg
cmpsl
out
pop
in
addr16
stos
push
shlb
dec
rclb
jp
mov
fmuls
data16
adc
jle
ret
cmp
imul
pusha
icebp
aam
and
jp
in
jmp
ret
add
add
out
aas
sbb
cmp
jp
das
inc
repz
fbstp
adcl
ja
lock
retw
fldl
jmp
add
dec
xor
xchg
xlat
adc
cmpsl
dec
fidivl
jnp
jmp
pop
push
dec
or
arpl
mov
dec
mov
xchg
sub
shlb
jmp
leave
push
pushf
mov
mov
jle
popa
cld
cmp
fwait
daa
mov
pop
negl
push
jecxz
cmpsl
fldenv
imul
inc
ljmp
es
jge
ja
fwait
mov
lahf
in
cmp
scas
mov
rol
lock
push
pop
in
mov
leave
sub
ficoms
jnp
mov
add
ss
push
loop
aam
fldt
jge
out
mov
sbb
stos
ret
scas
inc
xor
scas
loopne
mov
stos
rol
lret
aas
cmpsl
xchg
mov
sbb
cs
push
jecxz
inc
enter
and
sbb
push
xchg
iret
dec
and
leave
ds
mull
daa
popa
daa
rcrl
cmp
je
daa
call
sahf
stc
pop
cmpsb
pop
repz
repz
sub
lea
sub
push
mov
add
fsts
dec
jne
jp
jne
jp
bound
mov
inc
mov
repnz
rclb
jp
lea
and
xor
cwtl
inc
sub
mov
testl
jmp
sub
sub
imul
aam
stc
jae
roll
xchg
frstor
xchg
arpl
xor
pop
mov
lret
fcmovu
cli
pop
xchg
nop
inc
dec
and
pop
aam
enter
aam
xor
dec
push
stos
inc
and
insb
cmp
jnp
xor
add
xchg
sub
add
aam
imul
adc
jecxz
lea
call
dec
dec
lods
out
mov
out
mov
dec
dec
push
gs
push
and
pop
dec
mov
std
sbb
orl
mov
repz
jl
fadds
cmp
add
aas
sub
pop
stc
xchg
xchg
xchg
jge
cltd
mov
or
notrack
pop
popa
dec
xchg
icebp
flds
mov
lret
sahf
iret
int3
xor
mov
aad
pop
pushf
lahf
ret
inc
and
fwait
cmpsl
in
mov
das
jecxz
aas
leave
sbb
orl
loop
lret
xchg
aas
cmp
cmpsl
andb
push
hlt
xchg
jo
out
test
sub
ret
scas
pop
int
sbb
shr
fwait
and
sbb
adc
or
inc
xor
xor
xchg
fnsave
jne
andl
lds
adc
shr
push
imul
add
popa
push
xchg
add
shrb
fdivrl
scas
xchg
dec
dec
test
aad
inc
dec
sub
jnp
ja
hlt
adc
and
and
or
shll
mov
jno
int3
das
add
gs
xor
fidivrs
ja
int3
lds
jmp
push
dec
push
mov
ret
pop
enter
jecxz
add
xor
hlt
loop
cwtl
jnp
xor
and
pop
lds
fldenv
adc
pushf
scas
fdivr
and
iret
int
shll
lods
test
insb
nop
inc
outsb
popa
mov
mov
cmc
sbb
movntq
stos
jg
sub
dec
bound
push
jmp
and
in
pop
cmc
xchg
out
dec
xchg
jno
stc
int
iret
xor
fcomp
dec
sarl
pop
sti
push
push
adc
iret
in
popf
int3
or
mov
mov
mov
cmp
test
popa
mov
mov
ret
sbb
or
frstor
adc
inc
push
aad
cltd
sbb
sbb
sbb
rclb
js
xchg
in
jo
cltd
and
jg,pt
std
push
mov
pusha
sti
push
jl
stos
add
mov
jae
pop
xor
mov
sbb
mov
or
xchg
mov
xchg
or
sbb
in
shrl
cmp
xchg
fcmovbe
fcmove
jg
add
enter
xor
out
fstpl
pop
das
mov
mov
mov
mov
insl
cltd
lds
ja
inc
xor
lret
mov
addl
or
pop
inc
popa
cs
mov
sbb
ds
sbb
xchg
xchg
mov
repnz
add
mov
mov
or
cld
push
xor
jbe
enter
out
popf
push
and
clc
fwait
cld
xchg
cmp
ret
test
jmp
leave
xor
inc
in
xchg
pop
sti
stc
cmp
aas
add
xchg
adc
jge
stos
fisttps
cwtl
sti
pop
mov
icebp
es
lods
sti
pop
inc
dec
jge
jge
mov
int
aas
sarl
pop
in
cmp
iret
aam
fnsetpm(287
mov
lret
pop
loopne
dec
xor
xor
or
cli
pop
sahf
mov
lods
adc
lock
and
cmp
je
out
sub
pop
cmp
mov
test
sbb
outsb
inc
lods
testl
xchg
pop
fisttpl
test
push
sbb
stos
aad
jnp
fstps
push
jo
bound
shrl
ret
or
les
jmp
orl
or
stos
in
jno
mov
add
mov
xor
popf
repnz
xor
pop
cli
shll
pusha
jmp
fdivl
cmc
jb
popf
mov
ficompl
loopne
sub
lret
pop
aam
xor
pop
mov
ret
push
movsl
mov
sub
outsl
sbb
lods
cmp
xchg
pop
scas
fwait
jecxz
and
sarl
and
shl
std
jno
dec
popf
fmul
addb
int3
adcl
aad
insl
mov
fstpl
jp
aad
sub
lock
sbb
rolb
test
jmp
push
scas
xchg
pop
fstpl
outsl
xchg
pop
inc
mov
repz
or
xchg
add
mov
call
dec
leave
fcoml
or
xchg
sub
mov
repnz
loop
cmp
jl
and
hlt
cld
adc
mov
sbbb
pop
cmpsb
inc
sub
jb
bound
cli
in
fsubl
shl
dec
pop
test
jae
lret
bound
cmpsb
push
outsl
hlt
jns
aam
int
fiadds
mov
mov
sbb
xchg
in
jno
rcrb
and
jmp
or
repnz
add
add
popf
add
inc
loop
popf
subb
cmpsb
imul
jg
xor
or
leave
and
jb
gs
cmp
pop
pop
out
fwait
out
enter
out
or
dec
inc
push
popa
adcl
add
xchg
sbb
mov
sbb
inc
mov
fldenv
fldt
cmp
xor
jg
scas
repz
mov
int3
mull
sub
cmp
jmp
and
sbb
jg
jecxz
push
sub
movsl
mov
add
lods
cmp
mov
in
jmp
jg
push
mov
xchg
fcmovnbe
adc
fildll
out
sahf
adc
add
pop
pop
call
leave
leave
addl
push
out
cmp
sbb
fwait
add
or
pop
cmp
jg
mov
add
mov
lret
leave
jle
inc
sarl
mov
sbb
fistpll
jb
mov
scas
xchg
mov
or
cmpsb
push
mov
push
das
out
mov
jge
mov
pop
adcl
icebp
int
jae
stos
dec
stos
mov
mov
inc
mov
and
cmp
insb
stos
push
jecxz
mov
pop
xchg
ss
fcom
daa
inc
and
mov
xlat
xor
dec
sahf
fldcw
mov
fdivrs
test
shll
in
mov
adc
jl
cs
xchg
lret
popa
jmp
ror
rcrl
pop
jmp
cmp
jmp
aaa
ret
in
cwtl
aad
leave
cmp
dec
aam
shll
sbb
cs
mov
inc
mov
out
repnz
push
mov
movsb
sub
mov
lahf
fisttps
cli
inc
mov
mov
aam
imul
leave
repz
mov
inc
xlat
test
shl
xor
xchg
fcmovnu
sub
sbb
pop
mov
lea
fmuls
popf
pop
mov
adc
jmp
ret
cmp
stc
repnz
mov
xor
faddl
gs
jge
data16
sbb
mov
outsl
outsb
lods
dec
scas
sbb
add
repnz
call
in
inc
ret
jge
mov
jecxz
out
xor
adc
das
xchg
xlat
iretw
shr
sti
xchg
mov
xchg
inc
sbbl
test
ja
in
jmp
test
jbe
cmp
enter
lret
in
sbbl
jl
hlt
faddl
sarb
xor
ljmp
sar
out
push
pop
or
push
les
sub
or
adc
test
cltd
aas
inc
rorl
mov
iret
rol
mov
scas
das
aad
insl
jecxz
mov
je
movsl
lret
xchg
stos
inc
sbb
cs
leave
sub
js
jg
mov
dec
fsubrs
ret
mov
dec
enter
push
cli
sbbl
cltd
jecxz
scas
mov
dec
lock
sarl
mov
jmp
loop
out
repz
cmpsl
lods
sti
rcr
or
inc
sahf
sub
test
push
mov
hlt
imul
enter
aas
lods
ret
fiadds
dec
movsl
and
ret
jp
mov
add
sub
outsl
inc
pop
dec
fs
mov
stos
inc
mov
mov
mov
dec
xchg
inc
stos
gs
mov
and
push
mov
pop
sahf
sub
cwtl
xchg
fsubrl
sarl
xor
insb
leave
aam
adc
in
push
adc
mov
aam
out
je
sbb
dec
test
push
xchg
xchg
mov
imul
push
test
sti
inc
fcmove
mov
xchg
jne
shr
je
cvtps2pd
ss
mov
gs
out
in
jecxz
ljmp
dec
or
data16
xor
fwait
add
ret
daa
dec
popa
out
xor
imul
negb
sub
mov
cmp
enter
insb
inc
lock
dec
mov
lcall
in
xchg
inc
fsubl
sti
test
test
fcoml
add
leave
enter
flds
shl
pop
loopne
sbb
data16
xchg
addl
arpl
jbe
pushf
lock
xor
xor
push
dec
ret
and
in
pop
testl
push
rcrl
aad
out
leave
enter
xor
dec
jl
popa
mov
add
repz
xchg
mov
dec
clc
mov
push
pop
addb
vsubpd
mov
loope
mov
xor
lds
sbb
dec
fsubs
and
mov
iret
push
mov
mov
gs
mov
dec
shll
cmc
cltd
pop
push
mov
mov
sbb
pop
test
xor
pop
and
add
fidivl
inc
insb
popa
xchg
pop
sbb
adc
addl
icebp
adc
or
pop
xor
out
jmp
jae
addr16
fsubr
push
fldl
and
test
fcmovbe
loop
mov
lahf
repz
mov
mov
insl
mov
dec
dec
lods
inc
imul
fbld
xlat
ja
test
push
cmp
xor
daa
jmp
iret
push
cld
mov
bound
or
outsl
sbb
xchg
shlb
dec
and
sbb
je
dec
xor
adc
xlat
pop
sbb
stos
inc
hlt
in
sub
scas
and
mov
adc
popf
loop
std
imull
jecxz
mov
xor
xchg
ror
ret
repnz
fcoml
sbb
push
orb
cmc
fwait
ret
inc
mov
ret
inc
dec
imul
jo
jecxz
les
aas
bound
mov
cmc
jp
push
and
popf
fidivrl
sub
pushf
adc
sub
sbb
clc
dec
jge
cmpsb
xchg
movsb
ret
movsl
dec
push
call
scas
inc
dec
and
jmp
jae
shrl
fsubl
repz
pop
cmp
aas
mov
fisubrl
inc
pop
dec
test
ret
in
cmpsl
adc
cltd
shl
cltd
pop
inc
outsl
mov
xchg
sbb
add
and
xor
lock
or
mov
sbb
mov
aam
xchg
sarl
out
enter
dec
dec
ds
mov
mov
sbb
das
mov
loope
nop
push
loop
in
insb
jnp
fwait
adc
mov
pop
mov
add
cmp
mov
negl
add
lods
loop
jecxz
pop
mov
enter
aam
fcmove
rorl
fisttpl
ljmp
or
popf
int3
dec
int3
out
mov
fisttpl
push
mov
test
das
push
xor
fstp
enter
mov
test
fldcw
cwtl
jb
inc
les
cmp
add
rcl
test
int3
adc
xor
fstp
fcmovnbe
pop
ss
aas
dec
je
cld
mov
andl
cmc
mov
xor
and
rorl
or
pop
jecxz
jnp
call
xlat
cli
and
iret
or
icebp
add
popa
sub
add
test
dec
les
push
loope
xor
cmp
xorl
mov
add
shl
sahf
fwait
scas
xor
in
or
inc
int
aam
ror
cmp
imul
dec
sub
inc
daa
push
xor
das
pop
jg
cmp
jg
cs
mov
cld
xchg
mov
lahf
in
mov
movsl
popl
jo
es
int
mov
and
mov
push
inc
cli
push
xchg
aam
mov
mov
test
mov
mov
nop
pop
fisubl
pop
mov
lret
mov
popa
sbb
dec
and
lret
loop
adc
sbb
mov
popa
out
mov
xor
and
les
fdiv
inc
roll
in
mov
jb
scas
cmp
scas
and
pop
jp
jg
sub
mov
lods
movsl
cs
inc
shl
mov
out
dec
xchg
xor
push
cld
jle
test
jl
fs
out
fcom
inc
cwtl
iret
xchg
out
add
mov
jno
lods
imul
in
sahf
mov
hlt
mov
mov
jecxz
ror
lea
outsl
jmp
je
inc
vmaxpd
mov
xchg
lret
and
int
loopne
clc
fdivl
ds
sbb
jl
mov
jne
xchg
xchg
mov
rcrl
gs
aad
test
push
dec
lods
mov
dec
addr16
xchg
icebp
xlat
dec
push
jbe
enter
sti
aas
push
cmp
out
and
pop
inc
inc
pop
cli
in
repz
out
data16
or
mov
sub
pop
mov
jecxz
movl
and
and
xchg
icebp
push
dec
int
test
inc
mov
lret
xchg
sub
loopne
aad
adc
std
sti
shl
inc
xor
sarl
fsubrs
xchg
fs
dec
fmul
ds
mov
lcall
in
fdivs
ficompl
push
imul
mov
adc
cmp
addr16
imul
jmp
pop
enter
jne
popa
xor
jne
rclb
push
lods
pusha
or
xchg
pop
cmpsb
jbe
push
call
fs
shr
roll
add
jns
mov
xchg
fsubrs
imul
ficompl
or
push
scas
les
int3
pop
inc
rcrl
in
imul
mov
xchg
or
pop
sti
and
es
cmp
outsl
movsl
fisttpl
insb
cmp
mov
test
mov
imul
loopne
xor
dec
push
xchg
inc
lods
loopne
xor
lock
imul
jmp
cmpsb
or
mov
or
dec
scas
cmp
dec
lds
cltd
cmp
pop
inc
dec
add
hlt
push
sbb
dec
fldcw
jl
jmp
lock
mov
lods
es
inc
push
addr16
int3
mov
fdivrs
cwtl
int
aad
dec
add
fisubl
out
int
and
adc
xchg
les
fwait
cltd
sbb
inc
fstpt
sbb
test
mov
in
lds
sbb
jne
cltd
dec
pop
les
flds
aaa
inc
mov
testw
ja
push
dec
aam
jecxz
hlt
mov
iret
mov
xor
lret
ret
xchg
mov
dec
mov
pop
fildll
sbb
dec
fistpl
sbb
pop
or
stc
jmp
and
stc
imul
mov
push
out
fwait
mov
and
insb
in
mov
pop
mov
iret
lret
dec
outsl
arpl
mov
sti
pop
xlat
imul
xchg
and
dec
xlat
leave
lcall
mov
jb
lret
mov
mov
xchg
fsubs
xor
loopne
mov
mov
mov
lds
push
and
fsubrs
and
and
and
xlat
dec
scas
and
jb
shll
pop
dec
and
movsl
pop
inc
xor
jnp
inc
lea
in
jo
inc
das
dec
mov
cmc
rcrl
ror
dec
dec
xchg
sarb
shlb
fxtract
jnp
hlt
jecxz
fs
mov
dec
fwait
dec
xlat
repz
inc
jecxz
sub
ficompl
rolb
and
pop
jecxz
ret
pop
fcomps
xchg
cmp
loopne
xor
fwait
lea
sti
dec
mov
out
insb
test
fwait
jmp
int
mov
adc
and
movsl
je
rolb
mov
stc
daa
push
sub
jns
mov
push
inc
push
mov
cwtl
cmpsb
int3
add
aad
adc
pop
sti
inc
sub
leave
jae
scas
sbb
xorl
jg
xor
sbb
inc
jmp
mov
sbb
jge
push
mov
popf
jg
imul
inc
enter
leave
inc
sbb
jecxz
outsb
sbb
inc
repnz
or
xchg
adc
mov
mov
aad
aam
out
test
dec
movsl
add
mov
pop
fwait
dec
std
push
scas
pop
enter
sbb
push
xchg
lods
pop
pop
bound
mov
out
popw
out
ficoml
xchg
fcompl
or
pop
fcmovnb
loop
push
sbb
data16
or
lcall
cmp
jb
and
adc
out
xor
bound
inc
dec
mov
andl
pop
ss
call
mov
dec
sbb
gs
xor
fwait
scas
mov
sub
int3
add
sbb
cmpsl
jno
jecxz
out
cmp
add
and
popa
adc
mov
cs
outsb
rorl
pop
and
lock
stos
fildl
push
sub
push
int
dec
mov
xorl
xchg
std
mov
mov
sbb
cmp
mov
and
dec
and
imul
scas
daa
jp
loopne
aas
dec
insl
cmpsl
insb
push
and
or
sbb
mov
test
fcmovnbe
and
inc
pop
insb
sti
sbb
stc
das
lods
inc
fwait
les
ja
mov
stos
les
stc
jns
gs
jle
mov
dec
aas
int
adc
cwtl
xchg
pushf
xchg
jp
xchg
lock
cs
mov
test
inc
and
shrl
stos
outsl
gs
mov
hlt
andb
movsb
xlat
insl
scas
imul
inc
cld
fstps
and
mov
ss
ds
int
subl
jecxz
out
dec
add
sbb
push
pop
ret
lods
mov
les
dec
jg
outsl
jmp
sbbl
ds
adc
mov
outsl
ret
pop
cmp
fwait
xchg
mov
fmul
xchg
addr16
loope
cs
xlat
mov
jecxz
nop
pop
jge
mov
and
xchg
add
xor
xchg
mov
fmuls
xchg
jp
iret
xor
mov
or
sti
js
mov
ds
stos
lret
in
sbb
sarl
jbe
push
das
addl
cmpl
and
jmp
imul
fmull
sub
pop
ret
inc
mov
xor
and
sbb
fstpt
fmull
cmp
mov
filds
jecxz
fmuls
xor
xchg
pop
cs
arpl
flds
inc
xor
arpl
in
mov
ret
out
repz
mov
dec
mov
pushf
mov
xchg
and
mov
jne
test
push
imul
sbb
jecxz
insl
loopew
mov
mov
cmpsl
push
aad
cmpsl
xchg
aad
outsb
ss
adc
dec
inc
mov
mov
fildll
mov
jmp
jmp
mov
jae
das
pop
xlat
cmp
jo
jle
leave
and
fbld
das
icebp
sub
jne,pt
ljmp
jl
pop
sub
imul
inc
push
outsb
pop
sbb
mov
es
stc
push
les
xor
shrl
sub
xchg
test
adc
test
rorl
sbb
cmp
data16
pusha
inc
mov
fs
mov
lcall
cmp
lea
adc
pop
add
je
test
outsb
ljmp
dec
jle
int3
lods
jbe
dec
xlat
sub
imul
stc
mov
pop
sbb
and
cltd
iret
jl
cmp
fdivrp
inc
std
adc
sbb
sbb
push
aad
mov
enter
test
sbb
int
inc
inc
leave
xchg
nop
cmpsb
jecxz
test
push
fisttps
jmp
cmpsl
in
xor
jge
cltd
jp
jecxz
cmp
ret
dec
xor
push
notl
jb
test
fsubl
aad
mul
xor
sub
and
fldt
pop
cmp
mov
sbb
jle
pop
xchg
fistpll
mov
lock
cmpl
dec
sbb
enterw
lret
aaa
iret
lds
dec
jae
sbb
push
add
xchg
test
push
lret
cmc
mov
hlt
outsl
xchg
xchg
mov
add
jns
insl
loop
fs
repnz
pop
inc
aam
push
hlt
cmp
adc
xor
push
jmp
mov
sbb
mov
xchg
push
xchg
icebp
inc
mov
mov
xlat
inc
loopne
iret
sbb
hlt
icebp
movsb
xor
push
xchg
das
pushf
rcrl
js
sysret
cwtl
push
xchg
mov
dec
cltd
and
ret
sub
int
lds
pop
xchg
mov
xchg
xchg
lea
cmp
adc
out
mov
aad
cmpsb
cmc
inc
xor
aas
xor
lret
cmp
dec
sub
and
fucom
sbb
ljmp
cmp
adc
fistl
or
or
sbb
sbb
xorl
adc
pop
fadd
jb
out
or
xchg
inc
popf
stos
shl
jmp
fstpl
ljmp
neg
dec
pushf
mov
scas
push
xchg
inc
lock
cli
scas
fadds
inc
mov
lds
movl
xor
mov
roll
or
lea
mov
jmp
inc
xlat
xor
xor
inc
int
in
xchg
cmp
add
mov
jb
mov
mov
out
push
or
shll
xchg
and
sub
xchg
add
push
inc
pop
pop
sbb
push
jecxz
and
jge
adc
cmc
mov
mov
adc
shll
int
pop
in
cmpsl
xchg
fwait
dec
jb
xor
mov
adc
ds
sbb
and
jmp
inc
fimuls
ror
pop
test
insl
sub
popf
sbb
mov
xor
mov
imul
insb
and
iret
andl
fnstcw
sbb
aas
push
mov
mov
add
int
sbb
xor
sbb
lahf
out
mov
jmp
adc
mov
sbb
mov
sub
and
dec
mov
mov
push
ffreep
dec
in
enter
jbe
adc
cmc
add
jg
inc
push
add
push
outsl
add
sbb
out
mov
iret
lcall
dec
ret
test
sti
lods
mov
mov
adc
repz
movsl
pop
push
mov
add
out
cmp
frstor
fwait
shll
fsubr
aas
rcll
leave
int
sbb
and
pop
rorb
push
sbb
sbb
mov
int3
jecxz
push
roll
jo
pop
xchg
mov
scas
sti
imul
sbb
xchg
imul
push
mov
sub
jne
les
ret
lods
sub
insl
loopne
leave
lods
xchg
sub
fwait
ljmp
sbb
sbb
jle
enter
sbb
clc
sbb
mov
adc
loopne
push
outsl
adc
std
dec
ret
in
adc
nop
cmp
jmp
push
or
adc
or
fnstsw
jle
pop
jecxz
out
call
mov
clc
pop
sbbb
inc
pop
and
into
or
insb
mov
push
adc
push
jno
inc
fst
xchg
xchg
clc
movsl
enter
lahf
sub
loope
stc
sbb
mov
leave
mov
xor
add
loope
sbb
bound
fld
dec
sbb
enter
lcall
mov
je
cmp
and
jnp
cmp
mov
push
jne
or
pop
stos
mov
push
inc
enter
mov
in
cwtl
sahf
scas
jp
popf
xlat
rorl
mov
mov
fcmovne
mov
scas
xchg
mov
or
notl
sbbb
mov
lret
or
sub
out
lds
icebp
loope
lods
push
dec
cmp
mov
ljmp
repz
mov
xor
mov
repz
lret
roll
sbb
cs
push
subb
push
inc
adc
mov
and
enter
jmp
ret
xchg
inc
xlat
adc
jnp
loop
sbb
xor
or
sbb
repz
fistpll
lret
int
sbb
push
roll
push
ror
xlat
jmp
out
ret
fcoml
adc
insb
jl
roll
sar
pop
xchg
sbb
push
mov
rorl
dec
cmp
daa
xchg
imul
cmpsb
mov
ret
lcall
pop
in
and
mov
imul
sar
pop
insb
sbb
sbb
xchg
sub
cmpsl
mov
pop
fwait
sbb
imul
dec
mov
popa
inc
int3
cmp
sbb
jnp
sbb
fwait
mov
cli
aas
shll
or
ds
sbb
pop
and
movsb
push
pop
cmp
aas
push
pop
mov
sub
mov
jbe
xchg
sbb
cli
fwait
lcall
and
inc
jecxz
inc
pushf
loop
inc
sub
repz
stos
mov
test
pop
mov
roll
push
mov
lcall
jecxz
sbb
push
sub
data16
inc
ss
jg
fsub
xchg
mov
cltd
xor
ret
scas
jp
fcmove
insb
adc
stos
pusha
push
cli
outsb
sti
inc
pop
and
popf
inc
fildl
or
cmpsl
or
fwait
xor
out
gs
bound
inc
popf
in
jmp
jno
jns
aad
je
xor
mov
add
mov
jle
test
or
incb
sbb
and
jo
scas
and
xor
cmc
mov
xchg
or
mov
mov
sbb
int
aad
mov
mov
add
xor
sti
das
repz
leave
xor
loope
sub
rclb
add
dec
or
jmp
aam
pushl
inc
mov
popa
pop
dec
ret
push
adc
mov
xor
sbb
imulb
inc
sbb
out
mov
jnp
pop
sahf
xchg
and
insb
add
push
iret
jnp
pop
cs
inc
xchg
ror
lods
jp
dec
push
flds
or
mov
int3
xor
fnstsw
mov
out
std
leave
or
xor
push
jnp
jb
loope
cmp
sbb
cs
inc
rcl
jge
movl
push
sbb
pop
repz
lss
ret
enter
sub
pop
and
call
adc
dec
push
popa
mov
cmp
jmp
insb
lods
add
inc
sub
dec
mov
dec
sbb
into
faddl
iret
adc
dec
add
add
popa
xchg
dec
jo
rcrb
adcl
fdivp
ror
push
ret
incb
sub
pop
push
jg
mov
stos
inc
insl
clc
ss
iret
lods
stc
js
push
shll
cmpsl
push
adc
aaa
test
mov
push
nop
fsts
loop
jl
cmp
add
push
jnp
mov
xlat
js
xchg
or
jne
clc
cwtl
xor
out
out
enter
jae
pop
adc
sbb
jp
xor
es
std
adc
inc
stos
loopne
addr16
adc
sbb
dec
out
lret
scas
mov
xchg
sbb
mov
xor
mov
scas
sbb
sub
cmc
int
test
aaa
popf
sbb
lea
mov
sub
int
mov
sub
dec
jge
pop
mov
stc
jnp
pop
lfs
inc
cs
cli
sub
out
xchg
movsl
dec
insb
or
iret
fadd
daa
ds
fsubrs
adc
imul
pushf
fcmovnb
dec
sbb
jl
aas
jecxz
dec
gs
xor
jne
subl
repnz
je
cmp
sahf
inc
sbb
aad
cs
sti
sbb
sub
mov
ficompl
mov
xchg
hlt
jae
into
dec
fcompl
pop
fcompl
sti
pop
and
dec
xchg
mov
dec
addl
mov
jb
push
nop
or
imul
pushf
push
outsl
mov
jns
add
lret
sbb
bound
jg
fs
inc
jbe
jo
xchg
dec
cli
dec
inc
fbld
imul
jp
movsl
inc
and
xor
jne
out
dec
mov
addb
push
test
jb
jg
test
imul
sub
ret
arpl
enter
movsl
pushf
mov
and
fildll
dec
leave
push
repz
ret
shll
cmpsb
lahf
in
add
xor
mov
pop
ljmp
jl
xchg
inc
sti
xchg
xchg
sbb
ljmp
repz
mov
loop
loope
sbb
and
pop
cltd
and
idiv
cmpsl
test
dec
pop
sub
mov
and
pop
cli
cmpsl
js
ret
inc
lret
push
fwait
clc
and
sbb
fwait
gs
lds
mov
icebp
or
xor
dec
fstl
addr16
in
fists
cmp
out
psrlq
mov
jmp
pushf
pop
mov
sbb
add
cmp
fildll
mov
pop
popf
sbb
addr16
jbe
jecxz
inc
iret
mov
in
push
orb
icebp
and
sbb
aas
sub
les
stos
push
addb
sti
pop
ret
push
outsl
insl
pop
fistl
adc
sub
push
pop
icebp
push
sub
aas
mov
push
addb
jmp
cmp
xchg
imul
jecxz
pop
outsl
insl
ds
negl
adcb
pop
in
icebp
out
or
fucomip
aas
lret
addr16
mov
aad
cmp
cltd
arpl
sti
dec
and
outsl
inc
xchg
addb
cmpsl
leave
test
jb
mov
aas
inc
jb
jecxz
orb
cmp
inc
stos
pop
xchg
shll
push
outsl
insl
das
fistl
dec
xchg
cmpb
dec
jbe
mov
inc
mov
mov
sbb
addr16
sbb
and
xchg
push
dec
outsl
insl
jbe
testl
dec
in
icebp
out
or
fucomip
aas
loop
andb
andb
mov
sti
in
xchg
pop
pop
lock
sarl
loop
imul
lret
decb
repz
jl
sbb
cmp
rcrb
sbb
popf
inc
rcr
cmc
jp
fcmovnb
push
sarl
or
fwait
push
je
dec
sbb
ljmp
jb
sub
and
fidivl
inc
imull
xchg
cmp
sarb
and
lret
jmp
cs
inc
cs
xor
das
outsl
mov
jmp
cs
inc
cmpsb
iret
cmc
fstpt
ss
sbb
inc
in
popf
in
and
les
inc
or
movsl
fnstsw
imul
rolb
mov
mov
cwtl
cmpsl
lods
fistps
xor
cmpsb
xlat
fwait
jae
aad
out
push
dec
testl
shl
ret
dec
or
sbb
jecxz
or
lds
not
aam
rcr
and
inc
div
cld
pop
mov
mov
mov
sub
push
jl
jge
push
popf
dec
mov
imul
jp
sbb
andl
mov
mov
enter
pop
mov
dec
mov
int
push
int3
inc
test
jp
jae
jl
addb
lods
in
sbb
pop
jb
push
mov
lret
int
add
jge
jecxz
stc
xchg
cmp
arpl
xchg
and
dec
out
xlat
sbb
mov
mov
mov
sti
int
icebp
dec
jns
mov
jp
out
xchg
stc
sbb
rorb
call
int3
add
stos
ret
mov
repz
xor
or
jg
jns
mull
in
cli
sti
mov
cmp
fldenv
xlat
sbb
ret
stos
ja
pop
outsl
cld
int3
cs
je
fsubl
call
into
scas
inc
push
inc
dec
in
fwait
and
mov
mov
scas
fldenv
sti
fwait
imul
ja
mov
or
popa
mov
into
xchg
inc
mov
arpl
out
mov
add
mov
aad
mov
insl
xor
ja
std
int3
rorl
mov
mov
movsl
xchg
mov
mov
jecxz
inc
ret
jmp
shrb
popa
sti
fdivs
push
cltd
int3
shlb
ret
ret
ret
shll
mov
movsl
xchg
xchg
adc
imul
imul
jno
outsl
pushf
loopne
pop
enter
adc
and
mov
loope
jge
sbbb
mov
cwtl
out
roll
xlat
cmp
rcr
ss
mov
pop
jb
mov
jno
lock
stos
subb
imul
pop
push
jmp
jb
xchg
ljmp
or
mov
int
jp
push
sub
repz
push
inc
mov
mov
xlat
mov
xor
cmpl
xor
cltd
or
jo
enter
jmp
and
inc
sti
xchg
scas
imul
inc
xchg
loopne
cld
push
push
ret
jecxz
std
pop
pop
aas
ja
movsb
aad
popa
and
jb
loope
sbb
and
cs
jne
and
pop
mov
mov
and
cmpsb
sub
and
mov
xchg
call
ror
shl
dec
lds
mov
xlat
jge
rep
mov
xor
mov
mov
mov
xchg
xchg
cmpsl
xor
mov
in
shll
sub
mov
fdivrl
jmp
inc
inc
lahf
cltd
data16
cmpsl
fwait
dec
mov
popf
pop
out
jecxz
push
sbb
xor
mov
aaa
dec
and
pop
mov
sbb
push
mov
inc
sbb
fs
loopne
sbb
mov
sti
or
imul
sbb
dec
mov
movsl
cmpl
xor
test
outsb
aam
movsb
pushfw
mov
sbb
ret
xor
add
ret
or
lods
cmp
push
aas
sbb
fnstenv
mov
sbb
popf
mov
pop
insb
leave
insb
cmp
and
mov
push
inc
in
xchg
dec
jmp
pop
or
mov
dec
push
in
xchg
in
mov
fcoml
aad
ret
ret
mov
ret
imull
pusha
inc
dec
cltd
dec
cmp
jmp
cmp
cmp
into
inc
jno
pop
not
sti
or
mov
dec
xor
sbb
loope
adc
fmul
mov
es
in
add
xor
shll
jmp
ret
repnz
mov
fldcw
sbb
push
xchg
xor
loopne
sti
xchg
sbbl
cmpsb
mov
mov
jne
in
aas
rorl
shr
mov
cmp
aaa
cs
leave
int3
xor
dec
rorl
inc
std
in
shll
inc
jle
fisttps
sbb
mov
xorb
stc
pop
push
in
mov
mov
mov
and
test
mov
sar
sbb
ds
cltd
aad
out
neg
popa
decb
sti
popa
mov
and
dec
bnd
cmp
enter
xchg
adc
repz
sbb
test
popa
ds
stos
lret
imul
or
adc
mov
jecxz
fcomps
pusha
pop
cmp
mov
andl
xchg
test
ficoms
sbb
xchg
mov
cmp
sbb
or
jnp
and
cmpsl
mov
fdivr
int
lret
fs
loopne
sbb
inc
jae
xor
ret
inc
fistl
push
mov
jnp
mov
leave
mov
pop
pop
and
scas
jle
fcmovnbe
push
mov
cmp
mov
jg
xor
dec
cmp
dec
and
jmp
outsb
adc
sbb
push
sub
jmp
mov
dec
flds
mov
daa
js
xchg
insb
inc
nop
stos
jne
xor
je
test
adc
pop
jbe
pop
xor
mov
xor
mov
cmp
push
and
dec
in
mov
jnp
jmp
das
jnp
lea
dec
ss
cmp
push
ret
out
das
lahf
pop
dec
test
mov
cmpb
push
xchg
fbld
mov
movsl
je
shrb
test
std
shrl
movsl
xchg
sub
movl
aaa
test
sbb
minps
sbb
jns
rcrl
subl
ficompl
inc
cltd
test
sbb
gs
and
fmuls
dec
sbb
lea
dec
inc
rclb
cmpsl
mov
cmp
jg
data16
fisubrl
or
scas
xor
xor
shl
or
leave
call
add
push
insl
jg
or
sub
mov
inc
mov
notb
jmp
jecxz,pt
sbb
inc
inc
push
and
or
aam
and
xchg
sub
fiadds
sub
inc
inc
inc
jb
xchg
push
mov
xchg
push
rcrl
subl
add
stos
enter
mov
cmpl
cs
mov
aaa
sub
sub
jp
xor
and
leave
in
lds
add
cmpsl
imul
sub
xchg
sub
das
pop
inc
mov
negl
sub
sbb
jmp
or
mov
jle
ds
mov
jl
das
pop
nopl
cmpsb
sub
repz
ffree
jmp
mov
mov
jb
leave
popa
sbb
add
push
adc
aas
ret
cs
xchg
and
mov
out
jmp
pop
jmp
jne
pop
in
lret
xchg
hlt
daa
addr16
mov
mov
jb
in
test
das
stos
mov
sbb
push
filds
sbb
sbb
inc
adc
imul
fnstenv
loope
sub
mov
xor
jg
fcoml
adc
bound
mov
inc
fmuls
lea
pfcmpeq
or
xor
stc
add
and
hlt
imul
xlat
ret
ljmp
popf
loope
enter
mov
andl
sub
rcrl
pop
mov
mov
int
pop
fldenv
fbld
jmp
push
out
cld
ja
scas
in
jg
and
shl
insl
cmc
mov
in
cmp
push
in
or
xchg
inc
xorl
pop
in
rcrl
or
inc
fsubs
loopne
inc
pop
call
xor
in
out
out
lcall
jecxz
mov
sti
loopne
adc
and
jo
dec
rcll
jmp
cmp
repnz
incb
xchg
xor
scas
test
xor
dec
call
stos
pop
pop
sbb
mov
and
aas
imul
and
pushf
jmp
xor
hlt
orb
sbb
jecxz
inc
fwait
push
pop
lahf
in
iret
pop
ss
add
clc
mov
xor
jecxz
fldt
mov
adc
loop
icebp
jnp
cld
shr
call
cld
mov
jnp
movsl
sbb
mov
inc
pop
icebp
rep
add
and
sbb
ret
out
mov
push
or
pop
data16
cmc
mov
sbb
fwait
cltd
scas
mov
jbe
je
xor
xor
aad
cmpsl
out
rolb
pop
dec
fadds
jmp
and
add
ficompl
cli
add
mov
data16
je
popf
outsl
out
int3
cmp
mov
lds
jecxz
jne
shl
shll
jnp
loopne
dec
mov
int
sub
and
add
or
sbb
mov
add
sbb
dec
fwait
dec
sub
pop
mov
scas
pop
mov
mov
rcrl
pop
adc
xor
mulb
test
and
aam
mov
inc
cwtl
rcrb
jg
dec
stc
iret
aad
in
dec
andb
mov
dec
addb
dec
sub
mov
aaa
imul
ret
adc
push
fsubrl
pop
cltd
lods
mov
jno
fldenv
and
inc
xor
mov
pop
ja
and
push
or
mov
addr16
pop
fstpt
shr
dec
scas
int
sahf
insb
push
inc
xor
lret
xchg
in
jb,pn
pop
inc
xor
clc
in
jmp
jns
in
xlat
por
xor
sti
sbb
jp
lcall
test
call
push
pushf
sbb
mov
mov
mov
jg
or
es
mov
mov
ljmp
out
mov
sub
imul
and
cmc
insb
or
sti
mov
movl
or
clc
out
lcall
ljmpw
dec
faddp
mov
cli
pusha
ljmp
mov
xor
jb
xchg
add
int
imul
push
out
mov
xchg
xchg
rcrb
fistpl
sbb
repz
stos
jnp
stos
xchg
push
mov
das
cmpsl
mov
push
push
inc
mov
cltd
cmp
xchg
in
pop
sbb
das
repnz
push
cmpsl
and
xchg
pop
lods
fistl
fisttpl
mov
inc
sub
inc
fdivl
in
jno
repnz
adc
fwait
aam
stc
mov
or
or
ja
ljmp
inc
sbb
setbe
sub
dec
out
adc
push
and
xchg
bound
pop
inc
into
jnp
and
mov
stc
mov
xchg
sbb
and
ret
cmpsl
push
inc
aad
mov
cmpsb
out
pop
xor
cmpsb
js
test
ret
add
inc
mov
ror
jb
jne
cmpsl
out
add
test
xor
and
sbb
repnz
mov
cltd
sbb
mov
repnz
in
pop
dec
dec
ret
mov
cmpsb
sub
sbb
mov
loope
sbb
pop
jp
cmpsl
mov
push
sbb
into
mov
in
pop
fldt
fsubrs
push
inc
inc
enter
inc
mov
cmpsl
sbb
loopne
push
mov
jno
xchg
fcmovu
inc
sbb
adc
pop
shr
pop
mov
in
popf
fldpi
adc
rcrl
add
jecxz
inc
shll
sbb
pop
jbe
ret
inc
and
enter
stc
ror
inc
ret
mov
push
aad
or
adc
inc
jo
icebp
aam
lret
sbb
mov
dec
mov
ret
cltd
imul
jno
test
cmp
push
sbb
cmp
ss
test
sbb
enter
scas
cmp
or
sbb
pop
ror
inc
pushf
neg
stos
cmc
fadds
pop
out
mov
jecxz
lods
aam
xor
and
xor
cmp
aam
push
inc
mov
sub
das
rorl
enter
leave
pop
sbb
or
mov
xchg
lret
lret
lods
aam
mov
jae
inc
frstor
std
sbb
aam
or
mov
mov
xor
jg
leave
mov
imul
and
shll
xor
addr16
lret
lds
push
loopne
movsb
sti
loop
cltd
and
cmp
lahf
mov
sarl
ljmp
mov
jbe
and
dec
xlat
jecxz
scas
mov
cmp
push
arpl
mov
xlat
leave
ret
and
sub
out
mov
mov
sub
jb
dec
call
push
andl
and
mov
push
and
insb
ret
jmp
loop
outsl
add
dec
push
sarl
mov
shrl
dec
jae
sub
test
xor
or
inc
mov
test
add
jecxz
pop
add
ret
frstor
in
inc
stos
mov
out
xor
mov
jae
jb
dec
aad
pop
cmc
jno
add
pop
sarl
int
sub
imul
test
mov
sbb
jbe
or
pop
sub
cmp
enter
cs
cmp
add
sub
sahf
fucomip
jecxz
cmp
test
jb
and
push
lret
inc
rorb
sub
push
into
adc
pop
jecxz
mov
pop
mov
push
adc
stos
xlat
mov
pop
adc
cld
imul
pop
imul
lods
dec
push
popa
les
jp
loope
or
cmpsb
mov
dec
cmp
pop
jne
mov
ret
rorb
sbb
mov
or
sbb
inc
and
cwtl
sbb
int
fldt
std
add
sub
push
xor
fcmovbe
dec
jecxz
jne
test
and
imul
aam
jmp
sub
fdivrl
fistl
adc
jmp
xchg
lcall
sbb
js
mov
jbe
add
jmp
int
cwtl
out
mov
nop
rcrl
seta
xor
andl
pop
jmp
mov
sbb
leave
jo
hlt
loope
in
ret
testl
fldenv
sbb
testb
xor
push
lods
jecxz
and
mov
jno
mov
lds
sbb
fdivrs
dec
arpl
xchg
xlat
cltd
icebp
imulb
or
enter
das
add
aam
fcoms
mov
xor
fistps
rorl
imul
jae
inc
sub
shll
push
adc
fists
in
xchg
out
movsl
lock
adc
lea
sahf
mov
mov
xor
adc
sbb
sub
xchg
xorb
mov
adc
movsl
out
pop
add
dec
mov
xor
loopne
out
push
test
imul
fsts
xlat
sbb
xchg
dec
or
loope
mov
mov
fwait
mov
cmp
pop
fnstcw
test
xchg
mov
adc
mov
cmpsl
xor
mov
iret
ds
aam
mov
scas
jmp
adc
out
and
xchg
push
sub
inc
ret
aam
lahf
leave
in
aad
ja
repnz
fxch
stos
jne
imul
gs
je
and
aam
fwait
pop
ljmp
ja,pn
stos
pop
aas
out
jne
or
lods
sbb
aas
cmp
xchg
pop
pop
inc
daa
mov
cmp
in
dec
in
not
sbb
mov
push
inc
jle
xor
ds
das
ret
add
enter
adcb
sub
jnp
pop
imul
dec
jg
mov
inc
ja
cmp
dec
cmpsb
and
and
insl
mov
cmp
dec
add
je
in
roll
lret
not
pop
ud2
data16
in
and
sarl
sub
sub
jmp
and
lods
xor
inc
dec
jl
in
dec
out
adc
dec
leave
pop
ret
inc
lret
mov
lds
mov
fadds
lds
mov
push
dec
aam
push
shl
jbe
ljmp
mov
add
aas
dec
mov
dec
and
fidivl
dec
and
mov
test
and
imul
shll
and
or
loope
cltd
insl
xchg
enter
push
shrl
push
xor
xchg
xchg
jae
outsl
push
pop
fstpt
ds
jno
cmp
lods
les
leave
jl
sub
rcrb
lods
sub
add
pop
pop
mov
fdivs
add
pop
xchg
fisttps
cmp
aam
int
es
sti
xchg
repnz
sbb
pop
mov
stos
jmp
dec
int
cli
xor
xchg
fisttpl
rorl
push
clc
lods
stos
inc
push
cmp
repz
push
jns
dec
out
ror
or
adc
shrl
jae
rol
int3
xor
jmp
shrl
cmpsb
push
mov
call
mov
test
test
sub
ret
ficoms
or
shrl
dec
les
int
rclb
xchg
outsl
jne
jp
rcl
aam
mov
dec
jo
jle
cmp
test
addr16
cld
mov
outsb
cld
jp
icebp
int
call
push
imul
mov
inc
mov
in
dec
out
mov
adc
iret
cmpl
fisubl
jmp
outsb
or
ret
aad
leave
incl
dec
rcrl
pop
mov
mov
ljmp
loope
xchg
push
mov
pop
mov
mov
sarl
mov
pop
dec
dec
retw
jb
leave
int3
push
sti
xor
inc
mov
fidivl
and
imul
push
iret
sbb
sbb
xor
ret
inc
mov
dec
xchg
lds
mov
arpl
movsb
mov
leave
lock
fdivrl
and
test
or
shl
xor
fistpl
in
fwait
mov
jnp
movsl
fldl
rcrb
lahf
into
cli
in
mov
add
jnp
mov
adc
sub
mov
rol
hlt
inc
push
mov
fmull
int3
xor
xchg
or
loopne
sub
pop
incl
adc
pop
dec
xor
iret
stc
lret
sub
int3
shll
int3
inc
lea
and
int3
lea
dec
loopne
enter
push
pusha
jmp
test
lcall
in
dec
mov
xor
in
fsubl
xchg
dec
fsubrl
in
aad
push
fdivrs
sbb
dec
jns
mov
scas
xor
xor
inc
mov
mov
jecxz
jo
aaa
cltd
imul
dec
pop
icebp
enter
aad
ret
add
ljmp
das
add
add
aad
sbb
les
cmpsb
daa
mov
push
mov
push
mov
xor
gs
dec
mov
mov
rcll
sbb
xor
mov
jge
lods
test
xlat
subb
push
shrb
andl
mov
jecxz
jecxz
and
mov
and
mov
hlt
int3
pushl
push
mov
push
imul
enter
jge
push
cltd
dec
out
sbb
outsl
push
cmp
inc
fildl
outsl
or
cltd
pop
and
outsl
cmp
rcrl
add
inc
jg
ret
loope
and
cmp
dec
mov
adc
mov
popa
cmp
data16
inc
das
fisttpl
pop
sti
mov
inc
cltd
ds
push
leave
dec
or
movb
jnp
mov
rorl
dec
or
test
in
sub
sub
fs
mov
mov
mov
lcall
les
test
xor
push
out
imul
int3
cmp
xor
inc
lahf
push
mov
dec
out
arpl
aad
pop
icebp
fs
fwait
int
pop
lods
in
sbb
or
rorl
aad
mov
sbb
fbstp
jp
push
sub
push
or
ljmp
xbegin
adc
cmpsl
mov
pop
pusha
fmul
lods
popa
pop
arpl
mov
adc
pop
sbb
xor
data16
das
test
mov
and
add
pushf
mov
cld
sbb
in
inc
pop
dec
hlt
popa
out
ja
popf
lret
and
inc
jg
popf
mov
rorl
mov
imul
inc
rcll
adc
icebp
fidivl
jg
scas
pop
pop
dec
mov
test
lcall
std
sbb
pop
sbb
fcomps
xchg
aam
mov
dec
sub
mov
add
xlat
mov
pop
aam
out
loope
ljmp
ficompl
leave
sub
int
popf
fxch
sbb
enter
loope
xor
mov
pop
dec
jns
and
add
mov
sub
sub
sti
ret
stos
cmpsb
mov
jnp
outsl
lret
mov
aas
sbb
subb
cmp
push
or
fisubs
ret
movsb
cld
call
xlat
dec
sbb
mov
sub
inc
cld
and
pusha
dec
and
das
push
push
fistps
xor
popa
jbe
add
outsl
mov
push
rcll
fstpl
popf
cld
dec
lods
addl
add
inc
ret
sbb
sbb
sub
subb
filds
fcmovu
mov
sarl
outsl
cli
cmp
loop
std
pop
mov
mov
dec
test
lock
sarl
inc
sti
xchg
pop
out
leave
cltd
pop
fcmovb
int
push
inc
aas
or
sbb
sub
test
arpl
push
in
mov
sub
lret
inc
leave
dec
stc
and
mov
pop
cs
clc
and
cltd
inc
pop
subl
mov
mov
lea
inc
dec
sbbb
cltd
sbb
mov
rolb
ret
out
shll
movsb
xchg
mov
push
or
popa
xchg
das
jns
jno
lcall
push
fwait
mov
dec
rcll
inc
imul
dec
in
push
std
adc
rcrb
mov
jmp
or
das
movsb
popf
inc
pop
push
popf
stos
mov
dec
lcall
rcrl
mov
out
fildl
arpl
pop
mov
dec
bound
stos
adc
mov
mov
leave
fldt
inc
sub
push
cmc
lahf
jle
and
sbb
insl
loop
int
fsubr
lret
movb
ret
cmp
lea
rcrl
lds
aam
test
test
loope
scas
pop
inc
arpl
outsl
sbb
dec
and
out
ljmp
lds
outsl
mov
arpl
mov
xlat
sbb
in
jecxz
mov
sbb
jg
or
jmp
jp
fnstsw
mov
into
das
int
inc
iret
aas
negl
add
sbb
xchg
add
jno
add
jnp
imul
adc
ja
mov
push
testl
aas
adc
or
jnp
pop
add
fidivrs
out
add
fidivrs
sbb
leave
sti
sbb
out
insl
push
sub
fstl
xchg
iret
out
ret
and
stos
xchg
ret
inc
mov
xorl
out
add
xchg
sbb
lahf
pop
or
stos
div
les
fnstsw
orl
cli
inc
sub
dec
mov
dec
cmpsl
add
jmp
dec
pop
mov
mov
mov
xor
push
xor
inc
cmp
adc
fimull
or
fidivrl
jne
add
int
cmpsl
fisubrl
pop
int
sbb
jl
frstor
pop
push
xor
pushf
mov
lods
sbb
and
aad
pop
sub
pop
cli
das
and
stc
dec
push
pop
ss
fldt
mov
mov
sub
shrl
add
ds
nop
subb
mov
xlat
cld
imulb
ss
xchg
dec
filds
fs
mov
movsl
inc
clc
out
leave
iret
jecxz
cmp
insb
jge
jne
mov
shlb
push
and
pop
sahf
into
and
setne
psubusw
dec
test
fnstsw
loop
mov
mov
mov
cmp
cmp
iret
dec
and
dec
adc
pop
mov
push
fsub
rol
push
in
lea
add
or
popa
sbb
in
aaa
inc
inc
in
movsl
sbb
out
scas
insl
hlt
gs
push
mov
insl
inc
xchg
or
stos
cmp
popf
stos
adcl
push
int
xchg
push
inc
sbbl
fstpl
int
idivl
add
iret
mov
cltd
sub
dec
sbb
mov
scas
inc
sarl
or
in
jmp
and
fwait
cmp
sti
stos
ret
insl
xorl
fisubl
inc
inc
push
xchg
ret
frstor
arpl
mov
mov
mov
stc
fistpl
vminpd
jmp
sbb
fiaddl
sbb
pop
mov
dec
mov
push
dec
add
addl
sbb
mov
or
sbb
sbb
or
fldt
imul
xor
xchg
sub
dec
mov
or
mov
push
xor
and
xchg
push
pop
pop
and
push
mov
xlat
fdivs
xchg
push
jb
test
loopne
mov
dec
xor
repz
sub
mov
and
dec
or
fs
aad
orb
out
dec
call
cmp
pop
jne
stc
and
cli
sbb
nop
nop
cltd
stc
insb
mov
xchg
and
stos
and
stos
pop
dec
lea
int
push
mov
cmpsl
out
jne
push
dec
iret
adc
addb
mov
jecxz
mov
rcrb
insb
flds
jns
cmp
lock
mov
sbb
mov
sub
out
fistl
and
ljmp
std
and
ret
pop
cmpsl
iret
stos
sbb
jmp
mov
rorb
sub
jae
fidivrs
xchg
mov
and
xchg
push
mov
cmpsl
aam
ret
insl
xchg
scas
push
push
jb
push
in
sbb
sbb
das
xchg
jle
ret
push
aad
jp
jbe
pop
push
cmpsl
add
fisubs
jmp
xchg
cmp
loopne
or
leave
mov
jmp
mov
cld
std
mov
xchg
mov
jno
mov
pop
ret
mov
iret
fucomip
enter
int
xchg
popf
sbb
xchg
mov
fcomi
ja
ret
mov
ljmp
mov
sti
lea
stos
jecxz
xchg
and
shrb
loopne
xchg
pop
fnstcw
shrb
pop
jl
add
adc
mov
cmpsl
mov
adc
sbb
fcomps
sub
jo
bound
mov
push
dec
shl
insl
xor
xchg
int3
out
imul
adcl
sbb
das
jne
mov
and
pushf
ret
push
repz
testl
pop
popf
jns
ja
int
jo
jecxz
ss
subl
cmp
mov
xchg
mov
cmpl
inc
mov
outsl
push
add
loop
dec
ret
shl
pop
sbb
scas
jmp
cmp
push
aas
aad
mov
pop
dec
jmp
sbb
int
jge
stc
dec
xchg
xchg
les
pop
gs
xor
and
fstps
lods
sbb
jp
xlat
popa
imul
enter
jno
xchg
mov
or
sub
xor
or
ret
movb
and
and
bound
jb
xor
xorb
rcr
and
lea
jge
mov
clc
and
imul
rcrl
dec
cmpsl
stos
dec
push
push
jno
mov
push
cli
stos
cmc
dec
fwait
sbb
fbld
xchg
cmpsl
lahf
int
and
movsl
add
aas
mov
out
gs
mov
andl
ficompl
rcll
dec
cli
dec
insl
mov
loop
xlat
je
lcall
lods
cmc
pop
int
stc
fcmovnbe
cmc
and
xchg
push
lds
mov
loopne
add
mov
xchg
sbb
sahf
and
cwtl
rcrb
inc
inc
mov
pop
test
popa
dec
sbb
dec
mov
or
push
dec
mov
jno
or
std
fiaddl
mov
cmp
das
sti
loop
mov
jecxz
pop
sar
ret
xlat
inc
sub
shll
fmul
pop
jle
cltd
iret
int
adcb
addr16
into
xor
fldl
andb
xchg
fstps
daa
jbe
xor
adc
fmuls
dec
mov
sahf
mov
add
dec
scas
cmc
aas
inc
iret
mov
jb
fdivr
push
aaa
ds
inc
and
test
clc
aas
mov
pop
ljmp
in
out
pop
inc
std
loope
jl
mov
in
mov
fcomps
fimull
movsb
xchg
enter
dec
icebp
and
sub
fldcw
inc
les
mov
cmpsl
std
cmp
fs
pop
daa
data16
or
mov
jge
xchg
jne
rolb
scas
xchg
in
loopne
flds
test
xchg
scas
jle
mov
orl
inc
data16
xchg
dec
out
add
or
repz
in
fxch
add
jnp
pusha
in
rol
dec
xlat
push
ljmp
ja
jbe
lahf
xor
mov
iret
std
je
lods
xchg
sbbl
mov
inc
fcmovnu
push
test
bound
aad
in
nop
aas
xor
pop
jl
lods
leave
shl
xchg
fadd
out
lret
dec
inc
jl
pop
ljmp
xchg
inc
sub
mov
cmp
dec
or
sarl
inc
sub
iret
push
outsl
xchg
and
jb
or
hlt
xchg
jae
xor
xchg
dec
xchg
mov
add
xor
sahf
sub
xlat
pop
xlat
lds
leave
cs
sub
cmc
mov
mov
push
jnp
hlt
inc
fs
sub
cmpl
ja
add
mov
sub
jbe
das
mov
sub
int3
lret
cmp
push
sub
mov
sub
sbb
rcll
push
xor
fidivl
dec
xor
ret
mov
int
push
mov
test
shufps
fwait
jmp
pop
jecxz
push
cmp
cltd
add
movsb
outsb
stc
fyl2x
repnz
loop
iret
add
fsubl
aad
xlat
adc
jmp
roll
adc
shrb
xor
adc
out
xor
add
cmp
inc
lods
into
pop
dec
roll
das
mov
stc
or
popa
jecxz
mov
cs
xlat
fsts
add
jecxz
push
cmpsl
xchg
inc
das
fwait
lcall
cltd
aam
mov
aaa
mov
std
flds
jg
cltd
inc
mov
jmp
popa
sbb
in
jmp
xchg
or
sbb
outsl
xchg
pushf
sbb
rcll
inc
jecxz
xchg
xchg
and
xchg
jno
sub
in
stos
add
or
out
sub
sarl
and
jae
and
mov
xchg
aas
mov
pop
cmp
adc
mov
cmpsw
xlat
inc
inc
test
into
mov
add
pop
xchg
lods
and
aas
push
sbbl
xchg
roll
aam
fcmovb
jl
inc
out
fistpl
jg
push
outsl
daa
push
xchg
inc
sbbb
push
jb
mov
in
push
push
jg
popa
scas
inc
pop
imul
in
jb
test
popf
jecxz
scas
cmc
xchg
add
ficompl
push
sti
mov
xchg
push
sbb
pop
cltd
fdivrs
into
pop
sub
sbbb
pop
pop
pop
fidivrs
dec
scas
shrb
cmp
lods
sub
mov
xchg
cltd
sbb
aad
ret
shrb
mov
mov
mov
dec
push
sub
inc
aam
ret
aam
inc
cmpsl
xchg
push
fldcw
sbb
in
lahf
or
stos
jmp
inc
dec
testl
jmp
fs
lods
sub
ret
test
mov
fistpll
xchg
mov
sbb
int
add
popa
mov
aam
pop
cmp
jmp
dec
inc
sbb
pop
hlt
jnp
ja
lods
sbb
mov
mov
cmp
dec
frstor
push
mov
iret
gs
add
mov
and
pop
inc
lahf
je
jnp
sub
lret
mov
ret
cmp
fildl
jno
push
enter
mov
fcoms
inc
xchg
sub
pop
mov
int
dec
and
mov
push
dec
nop
icebp
aad
clc
adc
fcmovnb
leave
out
loopne
sbbb
test
test
pop
pop
iret
loop
hlt
aas
sbb
ret
ret
fcomps
int
pop
ja
leave
jne
push
cmp
fists
aad
test
or
push
shll
loop
aas
in
out
inc
pop
inc
lods
mov
pop
aad
lret
ss
push
pop
cmpsb
mov
dec
aam
dec
fldt
fcmovnbe
cmpl
pop
xchg
and
jecxz
mov
leave
testl
or
inc
fistl
sbb
mov
test
xor
mov
daa
mov
add
dec
or
out
jnp
mov
sub
or
ds
lret
adc
pop
leave
adc
loopne
add
or
and
nop
addr16
mov
aad
jecxz
loope
gs
rolb
jb
xlat
jge
dec
and
imul
xchg
dec
imul
adc
popf
xor
xchg
stos
mov
and
movsb
jp
mov
or
in
aam
push
cld
int
in
fildl
addl
lahf
das
add
mov
xchg
ret
sbb
sbb
ret
add
sub
jl
idivl
xchg
xlat
sub
rolb
xlat
jmp
dec
lret
add
sbb
sub
and
dec
ret
mov
adc
inc
int
mov
aam
cltd
icebp
push
inc
jnp
fisttps
inc
jns
fwait
and
and
test
dec
push
mov
sub
ja
and
insl
fucomip
mov
fdivrs
sbbl
sbb
scas
push
sub
outsb
xor
mov
xlat
sub
fldl
push
repnz
and
lret
ljmp
fldenv
lcall
mov
imul
scas
xchg
lock
push
ds
cmp
pop
add
and
push
inc
cltd
sub
adc
bnd
stos
inc
call
rolb
fmuls
cli
jg
push
sti
fsubrl
sub
test
in
test
push
sbb
mov
cmp
mov
pop
pop
and
scas
sub
lea
jns
lea
mov
push
shll
adc
push
push
cmp
xlat
mov
dec
dec
dec
sbb
sub
pusha
mov
and
xor
jns
sbb
lea
popa
test
sbb
fdivrs
cmp
das
rcl
and
xor
sahf
shll
mov
jmp
movb
sub
jmp
fidivs
loope
loopne
mov
fadd
dec
fildl
xor
xor
roll
jmp
mov
cmp
in
jmp
fisubl
test
and
mov
dec
add
cli
and
imul
popa
and
cltd
or
and
cmpsb
sti
pop
jnp
dec
pop
pop
ret
jecxz
mov
lret
xor
loop
jg
movsb
mov
std
fnstcw
dec
xor
push
mov
mov
loop
dec
sub
loopne
out
and
test
pop
xorl
jb
inc
xor
cmp
mov
in
add
xorl
jo
cmp
rcl
mov
push
es
jo
fcmovnbe
loopne
insb
int3
mov
cmp
jmp
xchg
xor
das
fxch
aas
sbb
add
das
pop
movsb
jae
pop
mov
cmp
insb
cli
out
and
ret
repz
dec
sbb
add
pop
jo
mov
push
sti
inc
mov
dec
add
outsb
dec
jecxz
sbb
lret
xor
cltd
jp
mov
xchg
mov
loope
insl
fcompl
xchg
inc
mov
push
mov
dec
and
ljmp
cli
test
hlt
icebp
sbb
push
or
inc
mov
cltd
jecxz
loop
jmp
andl
int
fildl
mov
adc
mov
mov
lds
out
pop
arpl
mov
test
inc
sahf
add
adc
fs
cmp
out
mov
ja
test
mov
repnz
dec
in
jbe
mov
cmpsb
sub
sti
repz
mov
jb
xchg
insl
pop
add
lea
and
ret
sti
sbb
mov
mov
jo
sub
and
xchg
ret
xchg
aam
sub
mov
mov
aas
or
stos
jo
dec
sbb
mov
aaa
mov
mov
or
mov
ret
imul
aam
push
in
dec
es
insb
or
and
ds
sub
xchg
fsub
mov
mov
or
sub
aas
gs
cmp
cs
push
mov
jg
rcr
inc
cmpl
inc
mov
push
daa
fucomip
shr
sbb
imul
cmp
repz
dec
xor
out
shll
insl
vpaddsb
jecxz
cli
pop
movsb
xor
cmp
pop
mov
roll
fstp
cmc
push
jle
in
push
xor
sbb
insl
xor
xor
aad
outsl
or
mov
iret
xor
test
jecxz
jecxz
fcom
xchg
or
sub
jecxz
cmc
out
cmp
int
mov
pop
fsub
mov
mov
sub
sbb
outsl
in
jecxz
inc
daa
dec
and
mov
xchg
roll
imul
pop
int3
mov
inc
sbb
xor
jmp
rcl
arpl
mov
stos
dec
fstl
mov
mov
push
ss
popa
repz
pusha
pop
jl
sub
leave
mov
out
lret
and
or
fsubrl
inc
stos
sbb
cld
xchg
xchg
imul
jmp
sbb
sub
mov
and
push
divps
stc
lcall
nop
inc
lahf
inc
xor
cmpsl
pop
clc
xchg
fwait
or
jmp
pop
popl
aad
rcll
xor
xchg
pop
xor
xchg
enter
sti
pop
and
sub
sbb
ret
lcall
fcomps
pop
and
bound
lcall
mov
dec
xor
lret
mov
adc
push
and
arpl
ret
or
cltd
sub
inc
mov
pop
aad
pop
and
sub
and
das
xlat
mov
inc
sbb
adc
mov
in
call
rorl
scas
jle
add
movsb
mov
ss
fcmovu
test
in
mov
pop
pop
push
inc
push
int
addr16
mov
xchg
lds
jecxz
lds
pop
push
mov
mov
in
or
mov
shrb
xchg
sub
out
inc
xor
in
aaa
daa
cmp
and
loop
jmp
daa
out
mov
jecxz
jecxz
clc
in
push
imul
iret
int
or
xchg
fwait
xchg
std
xchg
inc
repz
fucomi
jg
orl
xchg
mov
jmp
out
outsl
lods
xor
or
mov
lret
inc
icebp
jecxz
mov
lea
sbb
je
pop
fisttpl
sarb
xor
cmc
inc
fidivrl
or
in
out
mov
dec
repz
push
rcl
mov
xor
mov
scas
fwait
jmp
hlt
lods
jecxz
push
fiaddl
fistl
xchg
arpl
mov
sbb
mov
icebp
lds
test
hlt
cmp
mov
imul
ret
notl
mov
xchg
pop
lds
fsubrl
cmc
jecxz
test
pop
inc
les
cld
sbb
addr16
pop
push
repnz
mov
dec
mov
cmp
pop
ror
fadd
mov
pop
mov
movsb
inc
sti
sub
iret
fadd
icebp
cltd
inc
leave
mov
mov
cmp
sbb
iret
addl
push
mov
fcomps
xchg
loop
mov
sbb
xor
arpl
add
shrl
int3
cmpsl
shr
mov
push
leave
dec
xor
jg
subl
sub
cltd
mov
cli
out
mov
cltd
inc
push
push
push
mov
push
cmp
jg
pop
xchg
aad
mov
aad
inc
xor
mov
push
pop
pop
sub
push
inc
sbb
ja
nop
pop
push
add
and
xchg
and
sbb
in
mov
lret
mov
cltd
testl
rcll
push
mov
in
lds
out
add
jge
xchg
inc
dec
cmpsb
or
sbb
data16
pop
xor
cmp
sub
test
mov
xor
mov
jnp
cmp
jl
lods
pushf
fistps
jmp
cmpsb
stos
xchg
imul
popa
sbb
jge
and
mov
and
leave
pop
jmp
jnp
rol
xchg
rcr
pop
lahf
cmp
int3
jmp
cli
in
mov
stos
fsubrs
out
mov
inc
stos
xchg
pop
mov
popl
sbb
inc
fisttpl
push
inc
ljmp
lret
mov
and
mov
aam
fwait
sbb
jne
inc
jmp
jns
mov
out
pop
out
cwtl
imul
mov
jmp
int
mov
addr16
xchg
fcomps
fiaddl
push
scas
std
cmc
cmp
out
pop
sub
add
aad
cmp
sbb
sub
cmpb
lods
jno
shrl
fnstenv
outsl
imul
std
fcomps
mov
jge
cli
es
adc
jmp
fbld
loope
push
enter
push
xor
repz
sbb
leave
xor
xor
repz
pop
mov
xorb
daa
pop
arpl
xchg
push
insl
rcl
mov
icebp
adc
subb
cld
lds
sub
mov
dec
int
add
ret
lcall
repnz
test
jno
push
jecxz
outsl
cld
mov
inc
dec
jecxz
adc
test
in
cltd
xlat
es
dec
mov
outsl
lea
cs
iret
popa
mov
dec
fstpl
mov
mov
xchg
or
dec
adc
pushf
xlat
xor
jecxz
jbe
sub
shlb
adc
scas
stos
fsubl
and
sub
xor
flds
inc
aad
in
cmp
dec
mov
sbbl
inc
inc
stos
and
or
inc
pusha
inc
sbb
dec
push
xchg
fisubl
dec
mov
xor
pop
imul
mov
js
mov
fldcw
pop
in
bound
push
stos
and
pop
jns
and
mov
inc
adc
sub
sbb
add
arpl
fsubrl
mov
rcll
xlat
and
lret
mov
pusha
inc
stos
or
mov
add
add
sti
push
cmpl
pop
dec
fs
loope
adc
push
sub
popl
fildl
popf
mov
jge
xchg
movsl
out
test
pusha
cmp
and
addb
int
dec
adc
push
pop
push
sub
shl
inc
pushf
jge
sbb
cltd
lea
lcall
jmp
pop
inc
bound
mov
arpl
jge
mov
sbb
inc
inc
mov
loope
lods
xchg
insl
xor
xchg
inc
sub
mov
ss
icebp
test
jecxz
and
xchg
leave
sub
pop
add
dec
out
lods
mov
xor
and
fsubrl
stos
fldcw
jo
lcall
fsubs
and
sbb
rcll
xlat
orl
in
adc
sbb
add
jno
or
mov
aam
adc
test
xor
add
shll
dec
sbbl
les
xchg
nop
sbb
arpl
int
ds
inc
loop
adc
dec
test
fcmovne
mov
lret
stos
ja
sub
and
into
imul
add
shlb
lds
and
stos
out
dec
sti
xor
or
popa
sbb
rcrl
cmpsb
movsl
js
into
pop
test
punpcklwd
inc
or
jge
jecxz
in
inc
in
xor
fbld
dec
and
xchg
iret
mov
jl
test
das
mov
movsl
pop
mov
out
das
push
inc
mov
xor
add
mov
repz
out
pop
jl
ficomps
lret
aas
out
cwtl
lds
jno
mov
sbb
test
and
iret
mov
mov
sbb
dec
int
rol
mov
stos
lret
sub
pop
sbb
outsl
mov
cmc
and
pop
lret
sbb
fld
jl
shl
fadd
dec
int3
inc
xchg
mov
jo
rcr
push
negb
fcmovnbe
lcallw
jle
dec
xor
add
ficoml
jle
or
popa
pop
stos
or
jmp
fisttps
adc
ss
sbb
mov
push
out
add
mov
xchg
and
jns
movsl
xchg
insl
iret
pop
hlt
jno
pop
jnp
sub
cmp
pop
mov
fisttps
pop
nop
inc
or
sbb
lods
je
xchg
or
jp
push
pop
adc
jp
aam
ret
loop
ffreep
mov
sub
divb
or
cwtl
cli
add
std
sbb
mov
and
mov
fisttpll
jo
es
fistpl
hlt
push
cltd
cmpsb
add
mov
daa
add
lock
call
imul
sbb
mov
mov
jecxz
lds
jecxz
sub
push
pop
orb
push
jecxz
jne
repz
cs
pop
sbb
pushf
loope
rcll
stos
stc
pop
negl
jge
inc
loop
and
mov
jmp
ret
hlt
ds
sbbb
clc
sarl
cmp
rcll
adc
fldl
gs
mov
insl
xchg
xchg
or
stos
daa
xchg
and
sbb
jmp
xchg
cmp
cmp
ret
inc
push
pop
xchg
dec
xor
jne
pop
sub
test
push
mov
sti
aad
sarl
movsl
push
sbb
lcall
fstpl
and
bound
dec
fmul
dec
cmp
popa
mov
inc
js
in
gs
dec
les
xchg
call
jae
popa
mov
jbe
cmp
and
aaa
fmull
test
xchg
fwait
push
mov
xchg
jp
sahf
push
in
cmp
pop
nop
cmp
xchg
jmp
push
cbtw
sbb
fbld
cwtl
adc
daa
xchg
mov
fs
fistps
int
push
xor
aad
ljmp
pop
sub
sub
outsl
dec
xchg
cltd
add
mov
push
pop
xor
repnz
cld
xchg
push
adc
repz
orb
rorb
sbb
loopne,pn
daa
jo
push
cmpsb
inc
leave
out
daa
popa
push
repz
jae
xor
imul
aaa
inc
or
mov
cmp
or
sub
adc
jge
push
add
cmp
adc
outsl
and
rorb
xlat
enter
lret
aad
leave
inc
sbb
and
outsl
icebp
jmp
shlb
lock
jmp
mov
rcl
sti
mov
cmc
pop
lods
mov
lret
lds
aas
xor
inc
cltd
and
dec
or
xor
inc
shrb
jnp
and
paddd
xchg
xor
lds
cmp
lahf
xchg
add
shrl
ror
fadd
dec
sti
inc
das
out
or
repz
cltd
shlb
adcl
push
or
or
push
jle
fstpl
jnp
jge
push
loop
movsb
inc
jmp
mov
lea
das
in
movntq
cmp
sbb
cltd
push
sbb
mov
push
loop
lret
sub
in
sub
lret
mul
mov
stos
leave
or
xchg
mov
mov
pushf
sbb
mov
mov
mov
sbb
fwait
cltd
sub
jmp
pop
in
push
out
imul
out
in
sbb
mov
outsl
mov
mov
xor
popa
aam
cs
shrb
inc
pop
jb
dec
add
iret
pop
fistpl
add
push
push
test
xor
fcompl
jmp
xor
lea
fisttpll
xchg
jnp
push
sbb
xor
and
dec
push
jl
and
mov
dec
sahf
mov
push
loopne
aad
fsubrl
fcmovne
jmp
push
sub
in
sbb
test
jo
fisubl
pushf
mov
out
sbb
sub
mov
fdiv
pop
xchg
inc
sahf
mov
mov
aaa
imul
insl
std
faddl
mov
aas
shll
mov
shlb
pop
mov
pop
sti
jnp
ljmp
mov
cs
push
pushf
jmp
and
jmp
ljmp
or
lahf
pusha
mov
dec
ret
filds
mov
xor
out
inc
fdivrs
and
pop
xchg
jecxz
in
jmp
ret
jb
cltd
lea
stos
pop
bnd
push
jmp
push
daa
mov
or
dec
adc
adc
iret
sbb
stos
ficoms
jnp
mov
ret
imul
rcrl
sub
gs
out
mov
or
sbb
adc
push
cwtl
xlat
push
call
ficompl
rol
fcmovnu
lret
fsubrl
decb
insb
lods
out
outsl
fsubrp
in
push
pop
mov
enter
xchg
xor
ret
dec
sbb
fsubrl
jno
fistpl
in
jno
mov
leave
pop
pop
push
pop
inc
icebp
push
scas
aam
inc
rcl
inc
int3
cld
fwait
dec
cmp
push
cmp
xchg
push
dec
mov
inc
movsl
nop
fsubs
insb
push
aaa
lahf
repz
xchg
subb
mov
dec
sti
mov
push
mov
stos
and
push
lahf
aam
xchg
push
mov
xor
xchg
push
sbb
xchg
pop
ja
aam
mov
pop
in
xchg
pop
pop
nop
fisubrl
iret
std
sbb
jp
dec
xchg
cmpsl
and
pop
xchg
jne
fwait
push
push
push
push
std
aas
rorl
js
sbb
pop
test
add
mov
xor
xchg
push
lock
outsb
jp
push
mov
mov
int
imul
push
mov
pop
fcos
std
mov
fidivl
add
xchg
pop
popa
sub
and
mov
in
pop
movsl
sti
jno
out
push
inc
stos
ret
xor
mov
pop
cmpl
popf
sub
jae
add
inc
fsubrs
sub
and
sbb
adc
fsubl
stos
sbb
and
fst
dec
jge
js
add
loop
aaa
pop
lock
fcmovnbe
mov
dec
popa
jge
sub
aad
lahf
aam
pop
jp
pop
fwait
xchg
push
xor
or
push
jno
jbe
loope
mov
cld
ret
xor
jmp
lcall
xlat
in
repz
mov
ljmp
add
aam
mov
fcmovne
sub
dec
push
inc
iret
imul
push
aam
adc
out
mov
popf
pusha
loope
push
lods
push
jecxz
ds
aad
push
fcmovb
inc
pop
aam
xchg
cltd
push
and
in
fwait
xor
ret
fstps
iret
out
popa
mov
pop
in
lahf
jae
dec
outsl
loopne
mov
scas
push
dec
or
daa
insl
jbe
fsub
xor
push
xor
mov
outsl
insl
sahf
pop
push
sbb
inc
lcall
pop
sahf
loope
out
pop
and
js
lea
sbb
test
fwait
xchg
repnz
sar
fdivrl
add
fstpl
stos
add
mul
pop
int3
loop
gs
in
imul
test
arpl
ss
rcrl
rorb
inc
adc
xchg
push
and
jno
xor
push
popa
push
push
adc
cmpsb
mov
lds
sub
outsl
pop
adc
push
add
out
lret
lds
lds
lret
imul
dec
ss
adcb
mov
cmpsl
mov
es
and
daa
jecxz
dec
dec
pushf
xchg
int3
sub
pop
shl
add
xor
into
rcrl
outsb
sub
int
ret
jge
out
lcall
pop
dec
mov
mov
sub
push
mov
ror
pop
je
xchg
dec
mov
mov
out
jmp
movsb
sti
dec
xor
pop
mov
inc
dec
xchg
movsl
out
xor
outsl
ds
aad
mov
cwtl
sub
jge
sbb
push
test
rcl
and
pop
ss
icebp
jmp
or
rcr
rorl
movl
dec
sub
xor
push
sbb
mov
mov
mull
ret
fidivrl
dec
xchg
xchg
rol
jo
test
push
jne
and
mov
fidivrl
hlt
pop
xor
in
xor
sbb
scas
sbb
cmpb
in
fcoms
out
inc
arpl
repz
jne
stc
jbe
mov
pop
push
jecxz
and
bound
mov
stos
jmp
pop
js
pop
movsl
or
jmp
push
pop
dec
stos
in
sbb
insb
or
test
insl
sti
pop
ret
popf
push
mov
pop
and
adc
test
outsb
jnp
or
in
addr16
push
dec
mov
pop
test
sti
das
xchg
mov
test
in
pminub
test
fnstsw
and
lds
shll
dec
call
int3
or
jle
fdivs
icebp
dec
pop
cmp
sbb
int
mov
inc
mov
sbb
mov
std
fwait
popa
out
mov
pop
arpl
fildl
leave
frstor
in
call
or
aas
xor
jecxz
fsubrl
mov
stos
mov
mov
stc
call
adc
movsl
mov
icebp
mov
sbb
flds
sbb
lahf
pop
sbb
aam
aad
repz
sbb
xchg
mov
pop
pushf
jns
aad
jecxz
add
ret
and
cmp
fsubl
xor
jae
add
mov
and
jmp
ljmp
shll
mov
out
outsl
cmp
pop
adc
cli
aas
add
aas
int3
ret
add
scas
out
mov
xlat
xchg
sarl
inc
xchg
sbb
pop
xchg
cmc
and
fwait
repnz
cmpsl
sbb
ret
jmp
roll
and
fsubrs
sbb
in
cmp
cmp
inc
and
icebp
sbb
jb
lea
cmp
and
cmp
add
ret
imul
adc
jl
jecxz
xor
pop
jecxz
cmp
or
in
xlat
xlat
fldenv
ffree
and
cmp
aaa
mov
pop
repz
aas
push
shrb
lods
and
cwtl
mov
leave
dec
dec
dec
fwait
mov
sbbl
add
in
xchg
lret
mov
ss
pop
xlat
clc
pop
lret
mov
flds
mov
pop
das
outsl
push
fimuls
xor
ret
xchg
push
mov
mov
pop
mov
outsl
push
pop
push
xchg
aad
inc
cli
xor
jns
sub
mov
pop
mov
inc
sub
mov
xor
subl
ss
test
and
mov
pop
je
jp
cmpsl
mov
dec
sbb
dec
test
imul
jmp
adc
repnz
loope
jnp
adc
push
stos
sbb
fisttpl
lods
inc
lock
adc
shlb
stos
or
jo
dec
leave
push
in
dec
int
mov
sbb
fldcw
cs
pusha
and
insb
or
mov
lahf
xor
outsl
es
stos
pushl
fdiv
fstpt
add
xor
xor
pop
dec
lock
cld
jmp
shll
lret
int3
adc
dec
dec
dec
fsubl
jmp
fistpl
insl
ja
add
sub
aam
sub
movsb
movsl
jl
test
jne
push
push
jmp
ja
outsb
ja
or
lret
lea
addb
mov
add
jno
xchg
mov
fstps
mov
fsubrl
lcall
scas
or
packssdw
sub
leave
sbb
loop
sti
incl
add
fisubs
jns
xchg
arpl
dec
loop
xlat
adc
repnz
adc
pop
scas
adc
mov
inc
pop
and
push
fildl
incl
sbb
push
inc
sbb
fcoml
mov
popf
jmp
leave
dec
xchg
sbb
jns
dec
int3
ror
cli
and
fnstcw
testl
mov
std
fcmovne
dec
int
std
stos
sbb
sbb
das
mov
aaa
lret
icebp
fidivrs
push
cli
icebp
and
lock
dec
rcrl
xchg
outsl
xchg
in
loopne
and
int3
in
cmp
mov
or
not
lea
mov
mov
pop
mov
cld
insb
lds
lea
push
cli
daa
mov
frstor
insl
sbb
sbb
push
xlat
ja
sbb
sub
fiaddl
xchg
gs
xor
int
adc
cmp
ja
lret
xor
shll
mov
pop
sbb
xor
push
dec
int3
xor
imul
cmp
popf
int
and
push
cmp
inc
ljmp
adc
xor
sub
repz
and
mov
xchg
mov
push
fcomi
das
or
push
repz
jno
lret
and
xor
das
aad
cmc
mov
dec
pop
lahf
adc
push
int
rol
pop
fsubl
das
and
push
and
or
int3
les
xor
fstp
xchg
lock
and
xchg
movsl
cmp
push
mov
loop
rol
and
scas
dec
or
sub
sahf
mov
insb
pop
xor
stos
lret
aam
ret
stos
push
fldenv
shll
lock
mov
cmp
ret
dec
xor
or
fisubl
push
push
ret
popa
loop
pop
or
leave
ja
and
cmovge
daa
push
dec
push
mov
xchg
loope
xlat
jmp
sub
xlat
stos
out
push
mov
int3
test
push
int3
push
add
xchg
aam
jp
jae
jg,pn
push
pop
imul
xor
push
sarb
aaa
jae
mov
jle
mov
pop
mov
inc
xor
pop
pop
xchg
xchg
mov
push
mov
stc
sbb
jns
mov
imul
in
xchg
leave
pop
and
pop
cmpl
xor
xchg
rol
pop
fcomp
leave
dec
jne
lahf
pop
or
mov
pop
push
and
out
jbe
out
adc
mov
into
sti
xor
mov
insl
int
lods
sbb
daa
push
loopne
xor
and
cmc
adc
sbb
out
loop
sarl
xor
push
fcmovnb
dec
ret
pop
adc
push
test
add
inc
dec
push
ljmp
testl
loope
movsl
cltd
sbb
xor
mov
jae
jb
fwait
inc
insl
or
ficompl
pop
push
mov
sub
mov
aam
rcr
scas
adc
pop
sub
mov
xlat
test
and
xchg
inc
sbbb
push
push
ljmp
aas
imul
stos
cmc
dec
mov
addr16
aam
jmp
xor
inc
outsb
fsubrs
loopne
aas
test
inc
enter
jmp
dec
add
roll
aad
out
dec
jl
cmc
lahf
and
xor
insl
pusha
pop
rcrl
adc
lods
out
cltd
sub
xchg
or
xchg
iret
jmp
ret
mov
or
ret
xor
xchg
data16
nop
outsl
ja
loope
xchg
pop
adc
xor
xchg
dec
pop
popa
dec
arpl
cmc
leave
pop
or
int3
enter
mov
outsb
inc
jne
hlt
jg
jmp
daa
ljmp
pop
repz
jno
pop
call
dec
xchg
jns
pusha
es
push
push
roll
jnp
pop
push
loope
int
pop
mov
push
push
outsl
fisttps
xlat
and
jb
jnp
fnstsw
jl
loope
mov
fldl
xor
push
test
push
stos
loopne
fimull
xor
subl
test
stos
and
int3
enter
std
xor
dec
mov
jg
shll
cmp
jge
xorl
pop
xchg
pop
mov
popa
sub
dec
and
and
mov
mov
shrl
xor
sub
lock
jmp
lea
rorb
in
dec
fld
enter
mov
in
xchg
add
mov
out
pop
sub
xor
pop
jle
je
jp
fadds
jge
push
jecxz
inc
imul
inc
out
sahf
xor
dec
dec
add
mov
fisubs
and
inc
mov
mov
inc
leave
aam
mov
loope
nop
push
mov
cli
imul
xchg
xchg
dec
fs
insl
xor
sbb
fisttpll
fldl
fcompl
cmp
mov
sbb
mov
call
pop
and
mov
cmp
andb
sub
mov
mov
mov
mov
mov
dec
lds
cltd
sub
dec
sub
leave
xor
xlat
mov
mov
xor
cld
pop
xorb
pop
or
pop
int
cmp
xchg
sub
push
push
cmp
lret
xor
sub
jno
repz
ret
sqrtps
rcl
push
cs
cli
or
gs
mov
pop
leave
dec
sbb
dec
outsl
jno
push
pusha
insl
or
lret
lock
xor
mov
sbb
stc
loopne
in
ljmp
jb
aaa
sbb
push
icebp
sub
es
jle
ja
or
lods
pop
incl
push
out
std
das
out
aas
outsl
sbb
ficoms
mov
and
xchg
movsb
data16
loopne
xor
dec
movl
leave
jno
sbb
stc
insb
stos
addb
sbbb
fistps
xlat
xchg
jb
jl
std
orb
enter
pop
push
sahf
in
dec
ret
adc
push
and
dec
inc
mov
cmp
ss
jns
mov
sub
cmpsl
stos
cmc
pop
inc
cltd
in
sub
arpl
pop
fcmovnu
in
pop
or
loop
fs
scas
rolb
inc
xchg
sti
pop
sub
mov
shl
stos
int
inc
mov
mov
mov
movsl
in
xchg
out
leave
adc
cs
mov
sbb
sbb
es
pop
xchg
fisttpl
mov
sub
cmpsb
lret
ret
data16
into
into
xor
imul
xor
push
aas
pusha
popf
outsl
fildl
dec
insb
add
or
ret
adc
cmp
xchg
mov
xchg
outsb
pop
cmp
fidivrl
in
inc
stc
pop
loope
mov
fsubs
pop
xor
lea
mov
lcall
xor
mov
ja
jecxz
and
mov
sbbb
adc
ret
dec
dec
sbb
mov
jmp
ss
enter
jb
xor
imul
adc
ja
dec
and
xchg
ds
sti
pop
leave
pop
jne
mov
gs
addr16
aas
inc
in
movsl
popf
mov
out
cs
push
sbb
enter
xor
repnz
lds
lret
fnsave
xchg
in
sbb
cltd
sbb
out
fcmovne
stos
imul
roll
pxor
jmp
sbb
stos
jmp
in
add
fiaddl
cld
sbb
pop
fildll
shrl
shlb
push
cmpl
cld
inc
imul
fstps
rcll
imul
out
or
push
sub
push
outsl
mov
fs
inc
pop
adc
loop
push
inc
repz
cmp
fldl
out
dec
xchg
jg
xchg
int
fcmovb
sbb
std
fs
enter
adc
adcb
inc
mov
rolb
scas
fbstp
shlb
ret
add
pop
mov
loope
mov
xchg
leave
out
imul
rcrl
imul
push
es
divb
mov
push
mov
inc
sub
rcrb
les
dec
shl
inc
cmc
dec
sbb
mov
inc
pop
popf
and
sbb
fldcw
les
cmp
cmp
mov
mov
dec
shr
sub
stc
lea
push
sahf
inc
sti
jecxz
imul
js
pop
jmp
cmpsl
ss
push
pop
sti
dec
fisttps
cs
dec
fcmovnb
inc
dec
lea
cltd
int3
pop
sbb
cmp
dec
jb
iret
inc
pop
cmp
mov
inc
gs
dec
fsts
xchg
jmp
movsl
or
cld
or
xchg
sub
fmuls
lea
mov
dec
fcmovbe
jb
inc
jp
std
push
push
popa
adc
inc
shl
pop
rcll
jae
fcmovnb
js
loop
add
lea
aam
or
adc
pop
divl
arpl
dec
jecxz
add
push
jl
in
imul
rolb
dec
cmpsb
insb
cli
movsl
loop
push
fdivl
cmp
push
cs
leave
mov
adc
cmpsl
andl
xor
dec
inc
mov
es
out
sbbl
or
push
movsb
push
rcr
std
jmp
outsw
dec
sub
and
sbb
xchg
js
mov
sbbl
fidivl
movl
jge
rorl
adc
pop
cmpsl
out
mov
inc
outsl
push
leave
outsb
mov
dec
int
cmp
movsl
and
inc
out
in
in
mov
or
ret
gs
or
fdivs
pusha
and
rcl
fldl
rolb
out
icebp
cltd
cwtl
and
dec
cmp
xor
push
mov
add
xor
das
cmpl
lahf
outsb
jg
jmp
xor
ret
xchg
icebp
shlb
cmpsl
xchg
sbb
in
gs
sub
mov
call
nop
push
dec
stos
jmp
dec
cltd
mov
mov
into
sub
inc
pop
fnstsw
pop
xchg
sbb
imul
fistpl
out
mov
sbb
jbe
fsubp
fistpl
in
fs
jae
int
adc
out
out
fld
fsubrl
aaa
pop
mov
xor
add
hlt
inc
inc
mov
jmp
pop
jp
repnz
push
push
cmp
pop
cmp
scas
cltd
inc
dec
pop
lods
inc
dec
and
push
dec
pop
and
test
fdivl
push
addr16
addr16
sbb
sbbb
push
shll
sbb
jo
sub
push
addr16
mov
js
faddp
loope
inc
xlat
imul
iret
and
int3
or
jne
xor
push
xchg
ss
addr16
cmp
jg
outsl
mov
push
ja
out
xchg
fcmovu
aas
ret
imul
inc
xor
lds
mov
in
cmp
gs
inc
es
loopne
mov
cmp
cmp
hlt
shrl
push
dec
xor
jns
cmpsb
pop
cmp
insl
out
adc
and
xchg
pop
les
popf
jecxz
repnz
div
push
adc
cmp
jmpw
pusha
inc
push
sbb
in
inc
jg
inc
inc
test
stos
and
mov
pop
loop
mov
pop
xchg
js
jecxz
ret
push
cmpb
call
xchg
and
and
leave
shrl
scas
ljmp
bsr
xchg
popf
fwait
ja
mov
push
std
push
inc
sub
fnstenv
xchg
sbb
mov
std
and
inc
cmpsb
repz
mov
jnp
mov
pop
xchg
mov
xchg
dec
ds
rcll
repnz
mov
inc
test
jae
add
inc
xchg
jp
and
mov
pop
cmpsl
lods
ror
and
lods
mov
add
std
pushf
push
mov
out
cmpsb
call
jg
or
popf
mov
cwtl
frstor
inc
inc
pushf
pop
stc
jmp
cltd
mov
in
ficomps
les
enter
xchg
lods
cmp
movsl
adc
inc
mov
rcrb
in
out
sarl
cld
pop
iret
je
std
ljmp
xchg
sub
and
pop
scas
or
mov
inc
mov
scas
fsts
mov
pop
mov
outsl
pushf
xchg
mov
pop
mov
or
ret
mov
fidivs
xchg
lcall
sub
xor
mov
test
jl
enter
daa
sbb
das
leave
imul
fadds
and
icebp
pop
dec
mov
repz
sbbl
inc
pop
sbb
mov
cmpsb
sub
stc
scas
lret
out
int3
mov
and
mov
stc
mov
sub
sbb
outsl
pop
cmpsl
xor
push
cmp
and
mov
add
int
dec
aaa
xlat
mov
pop
jge
sub
mov
sbb
outsb
push
out
mov
dec
jg
adc
xor
or
dec
pop
adc
and
cmpsb
push
outsl
je
inc
mov
out
sbb
test
aas
push
jecxz
fiadds
jmp
sbb
sbb
sub
ret
sbb
popa
outsl
test
leave
push
cmp
xchg
sbb
imulw
aam
jae
sub
jecxz
and
jae
enter
xchg
insl
push
fistps
pop
daa
add
dec
in
xchg
hlt
std
inc
ljmp
mov
jb
dec
xchg
popf
ljmp
sbb
fadds
xchg
stos
inc
jae
push
sti
imul
mov
fs
sbb
and
inc
lcall
insb
into
stos
repnz
jnp
xlat
mov
pop
inc
jns
cli
sbb
lret
std
fnstsw
and
inc
push
sahf
push
aad
das
cmp
xor
mov
cmp
mov
xchg
sti
pop
mov
fldcw
scas
jmp
sti
cs
lret
icebp
fistpl
pushf
mov
aas
push
add
enter
shrl
pop
scas
pop
nop
push
mov
mov
stc
ret
out
xchg
frstor
mov
jp
pop
xor
dec
sbb
pop
aad
mov
add
push
sbb
mov
jmp
out
mov
mov
pop
cmp
or
cltd
pop
leave
aas
cs
loopne
rorb
jae
in
dec
fsubl
fwait
add
clc
mov
jb
pop
xchg
ret
xor
std
jge
adc
push
enter
xchg
or
sahf
int
mov
lret
and
fsubrl
sti
sbb
xor
lods
mov
daa
and
cmp
enter
out
je
les
cmpsl
inc
cli
pop
scas
push
jo
adcb
pop
iret
bnd
mov
in
jle
adc
inc
jmp
lock
std
sbb
imul
mov
push
adc
orl
jmp
dec
or
fistl
pusha
mov
pop
scas
out
aam
lahf
dec
xchg
jp
data16
in
or
sub
mov
js
xor
in
cwtl
xlat
sbb
shl
cmp
inc
fxch
cmp
cmp
lods
fisubl
jmp
ret
push
add
aas
lahf
ret
cmp
inc
aas
movl
cmp
repnz
pop
out
imul
fnstsw
mov
inc
popf
scas
fidivrs
pop
xlat
dec
cltd
xor
jecxz
mov
xchg
adc
sahf
add
dec
nop
xchg
mov
scas
pop
pop
add
xor
inc
xor
lea
bound
ret
inc
jle
loope
adcb
rclb
addr16
jne
add
jecxz
fwait
jmp
inc
push
sarl
decb
xor
mov
in
ficoml
adc
leave
lods
jmp
fistps
xchg
movsb
cmp
data16
sub
cmp
dec
aaa
ret
jge
popl
cmpsl
xchg
inc
jno
jmp
fidivrl
pushf
ljmp
cmpsl
mov
pop
loopne
mov
fxtract
xchg
popa
lods
pop
das
sub
sbbl
xor
scas
ds
shrl
push
sbb
sub
aas
adc
inc
fldpi
sub
mov
icebp
and
aaa
sbb
stos
push
mov
sub
je
adc
add
push
xchg
int
sbb
lea
pop
lea
sbb
xchg
testl
dec
jle
pop
cltd
pop
shlb
push
adcb
pusha
jl
bound
mov
cmp
out
jecxz
stos
push
lcall
into
inc
sbb
inc
add
dec
mov
loope
mov
xor
fisubrs
sti
out
ret
mov
push
pop
dec
jmp
lea
pop
movsl
sbb
ss
stos
rorl
shl
ret
shr
sbb
inc
mov
jp
repz
ds
jecxz
sti
xlat
xchg
ret
cmp
rcll
lea
mov
out
and
iret
ret
fs
pusha
mov
and
mov
mov
movsl
addb
pop
sbb
ljmp
mov
sbb
sbb
popl
sbb
xor
into
ret
jle
add
fistl
ret
dec
sbb
jns
jecxz
push
enter
jp
stc
add
sbb
subl
xor
inc
cmp
out
jne
dec
push
negl
test
imulb
xlat
push
aad
shrl
push
test
dec
add
jbe
movsb
jnp
jno
xchg
pop
pop
jecxz
jmp
rcll
inc
xor
sbb
vmovdqu
and
loopne
push
ds
mov
imul
adc
push
sbb
shrl
xor
sbb
enter
in
xlat
lds
lods
mov
call
dec
dec
rcr
and
adc
hlt
pop
das
fstl
cmp
fistpll
notl
cmp
adc
dec
cmpsb
movsl
loopne
out
push
jno
mov
adc
and
mov
out
mov
das
ret
pop
inc
pop
jecxz
sub
shll
push
popf
imul
cs
outsb
fistpll
sub
popf
fsubr
in
mov
stos
fidivrl
hlt
call
and
pop
fwait
and
fdivrs
sarl
fcoml
in
bound
jns
orl
mov
sbb
cmc
mov
psraw
sbb
aam
adc
push
cmc
sub
adc
sti
loop
outsl
cmpsb
ror
call
imul
jle
pop
mov
ja
xor
divl
cmpsl
cmp
gs
push
pop
mov
in
cwtl
pop
roll
add
mov
mov
mov
sub
jno
jl
xor
shll
sbb
push
mov
daa
sub
add
xlat
loope
and
mov
jp
inc
dec
lea
rcrl
fcoml
in
add
xor
dec
dec
fwait
xchg
inc
jp
xchg
fidivs
lds
lcall
inc
mov
jp
or
fwait
mov
add
nop
fninit
into
mov
inc
and
dec
jb
inc
cmp
jecxz
rolb
jnp
ret
ds
jno
es
xchg
xrelease
mov
insl
aad
cmpsl
repnz
and
sbb
pop
in
fcmovu
in
jnp
aam
fucomp
das
inc
adc
pop
mov
mov
adc
pop
sbb
inc
push
xchg
stc
push
jbe
jno
inc
mov
arpl
shll
movsb
loope
out
addr16
mov
movsl
rcr
push
add
mov
mov
mov
fucomip
fisttps
mov
fcompl
in
pop
addb
std
mov
xchg
out
pop
xor
inc
imul
inc
in
fbld
out
ja
mov
gs
add
ss
popa
cmp
sub
adc
sub
fdivrl
sbbl
call
sti
jns
push
mov
dec
enter
or
xchg
jl
arpl
arpl
cmp
aad
pushf
mov
mov
xchg
out
mov
ret
fstl
filds
push
sbb
dec
ret
aam
lock
pop
mov
scas
pop
cmp
movsb
sbb
mov
ret
icebp
sub
fdivrs
fsubrl
mov
dec
and
mov
adc
cwtl
push
pop
push
add
mov
mov
pop
dec
inc
xchg
add
adc
ret
cmp
xor
loope
call
or
test
call
outsl
in
xlat
test
shl
fildl
fsubr
stos
subl
into
cli
dec
xor
ja
pop
rorb
inc
test
push
popf
sarb
mov
out
iret
mov
sub
gs
jmp
jnp
aad
xchg
mov
outsl
jl
int
and
int3
outsb
adc
lock
faddl
mov
jecxz
fsubrl
hlt
xor
cmpsb
fbstp
sbb
pop
sbb
mov
or
and
inc
sub
jo
xchg
dec
imul
loop
sbb
inc
fsubl
xchg
test
lret
xor
lock
and
roll
xchg
pop
dec
pop
lret
or
jge
xor
lea
mov
fbstp
shrb
mov
lock
xchg
pop
add
fdivrl
imul
cmpsl
adc
mov
insl
lods
sbb
pop
test
ljmp
cmpsl
movsl
int
mov
add
std
popf
xor
test
pop
mov
addl
scas
rcrb
xor
mov
cmpsb
mov
lcall
jne
xchg
ret
mov
out
popa
mov
lcall
das
fcos
bound
aas
pop
jnp
out
pusha
mov
mov
leave
rcrb
cltd
pusha
push
inc
cmp
inc
ret
out
mov
sbb
or
mov
xor
data16
mov
cmp
pop
popf
jecxz
arpl
popa
cmpsb
pop
inc
bound
test
int
mov
jg
out
fistl
loopne
test
ret
int3
adc
and
ss
fs
loope
pop
lock
fldpi
sbb
test
out
or
out
dec
xchg
pop
fcmovnbe
inc
test
dec
loope
jmp
mov
out
mov
xchg
add
cli
and
dec
push
int3
add
out
or
cmp
xchg
fiadds
pop
data16
les
jmp
mov
hlt
and
test
mov
fildl
dec
out
jecxz
xchg
sub
xchg
adc
pop
sbb
xchg
out
cmp
adc
sub
and
mov
outsl
jecxz
movsl
mov
or
push
xchg
fistps
fistpl
xchg
lea
cmp
ret
out
imul
fistpl
add
daa
fistl
inc
lcall
mov
in
fidivl
xchg
les
xchg
xchg
sbb
and
sub
xchg
ret
inc
popa
cmp
dec
inc
and
movsl
test
jbe
insl
add
pop
sub
mov
jno
dec
jmp
dec
dec
or
imul
dec
movsb
pop
daa
ja
stos
add
push
jmp
pop
and
sbb
xchg
adc
loop
data16
fiadds
das
push
add
mov
add
push
addr16
sbb
pop
xchg
adcl
mov
stc
dec
call
mov
cmp
sbb
push
jnp
daa
xor
and
xor
jg
jmp
ss
sbb
fnstenv
cmp
mov
negb
jno
repz
pop
fsubl
push
call
mov
and
jo
les
mov
cld
popf
inc
jns
inc
cmp
fisttpl
sub
loop
daa
aad
push
lock
iret
and
sbb
cmpsl
in
xchg
pop
out
fisttps
inc
sub
out
fcmovbe
sbb
mov
dec
and
insb
orl
jp
xchg
xlat
jl
pushf
mov
or
or
xor
test
inc
popf
sti
inc
xor
mov
lret
das
jp
inc
cmp
xchg
fcompl
mov
fcmovnbe
popf
dec
push
cltd
pop
test
mov
stos
repz
bound
pop
sbb
mov
subl
xchg
bound
pop
and
xor
aam
ja
pop
inc
lock
inc
ret
mov
pop
mov
push
mov
push
mov
arpl
dec
and
neg
xchg
leave
pop
mov
fadds
fyl2x
pop
xlat
or
push
out
cmp
out
test
stos
sub
jl
cli
jmp
and
cltd
push
xorl
fmull
xchg
and
imul
pop
ss
fildll
jo
pop
dec
sub
inc
mov
cmp
jg
adc
cltd
inc
inc
lds
in
mov
jp
ret
jmp
pop
xchg
pop
stos
push
mov
outsb
xrelease
jp
aas
imul
imul
xlat
cltd
dec
daa
and
pusha
test
imul
xorl
popf
cmp
push
lahf
mov
jg
inc
and
and
lcall
ljmp
xlat
jns
popf
add
mov
out
repnz
addr16
ret
call
insl
into
in
sbb
push
xchg
sub
inc
mov
ret
bound
mov
cld
inc
popf
fisubrl
push
shrl
mov
add
out
repz
push
loopne
xchg
inc
sub
andl
std
xor
insb
push
fwait
mov
xchg
pop
push
mov
and
xchg
jge
ds
insb
or
inc
pop
push
test
dec
insb
or
xor
xchg
mov
pop
mov
fisttpl
cmp
add
mov
lea
and
inc
fistl
push
dec
ds
cli
jecxz
jecxz
cmc
loop
adc
lods
or
push
jecxz
fisubs
pop
insl
stos
lcall
orl
out
sub
les
pop
ret
jo
and
adc
bound
inc
mov
rcll
dec
ret
xchg
lds
inc
push
push
mov
out
in
pop
rcrl
insl
sbb
inc
stc
ret
pushf
and
in
imul
insb
out
fisubl
push
test
negb
cmpsb
mov
in
push
sbb
dec
aaa
xor
push
mov
jge
cltd
nop
or
jno
jcxz
test
push
and
in
clc
nop
mov
mov
jne
xchg
pop
das
arpl
xchg
sti
jb
adc
aam
pop
fmuls
lret
mov
xor
dec
mov
push
fmull
int3
into
sbb
pop
and
xor
fmull
xchg
ret
cs
ret
out
mov
test
and
jmp
insb
aam
iret
inc
js
iret
jns
aam
cmp
adc
je
xor
mov
mov
push
sub
push
mov
ja
nop
rcrl
aaa
jp
mov
sub
test
xchg
stos
lock
rcr
jbe
xchg
xchg
shl
insb
fnstsw
sbb
bound
cmp
xchg
shr
add
push
jecxz
fwait
jno
in
shlb
push
fisubs
mov
cmp
gs
inc
cli
stos
dec
call
ljmp
sub
stos
and
add
frstor
in
xchg
add
cmpsb
and
mov
scas
push
dec
pop
fwait
js
imul
sub
imull
jecxz
or
mov
inc
xchg
jmp
movsl
jns
movsb
fmuls
mov
mov
jns
mov
repz
fists
add
pop
mov
movsb
out
lock
adc
scas
mov
jg
jno
mov
sub
test
lea
outsl
dec
leave
fistpl
out
popa
sub
xor
ret
enter
dec
mov
sub
inc
daa
add
mov
cmp
jns
mov
fcmovnb
xor
push
test
repz
inc
in
push
popa
push
ret
popf
push
cmc
imul
lahf
xor
orb
push
rolw
pusha
stos
mov
mov
enter
std
jge
out
push
ret
sbb
and
xor
int
sbb
fisttpll
jmp
dec
inc
mov
or
popa
inc
testb
fcomps
iret
dec
mov
pop
stos
clc
push
dec
movsl
mov
ja
mov
pop
clts
xor
pop
or
jne
hlt
mov
push
xor
pop
mov
fwait
jne
lahf
loopne
and
pop
pop
test
pushf
dec
pusha
les
mov
xchg
dec
mov
cld
or
cmpsb
sbb
mov
data16
fdivrl
loope
frstor
aad
in
lea
lds
adc
and
cmp
mov
pop
or
enter
xor
push
inc
xchg
imul
test
pop
stos
clc
leave
mov
xchg
xor
add
pop
imul
adc
jmp
lods
xor
loope
xchg
jecxz
xchg
out
sbb
dec
cmc
mov
push
ret
pop
pop
push
stos
ret
xor
inc
int
in
mov
mov
dec
jmp
xchg
fdivr
fcmovnu
mov
fstps
inc
cld
pop
xchg
mov
test
add
sbb
popa
pop
xor
les
jnp
xchg
sbbl
stos
mov
pushl
inc
dec
mov
sti
out
loope
xchg
fstps
sub
lret
stos
scas
movsl
repz
pushl
dec
dec
or
adc
ja
pop
ljmp
cmp
shr
sbb
andl
pop
cs
mov
mov
adc
sub
movsb
push
ja
sbb
sbb
pop
add
jmp
cltd
sbb
sbbl
test
push
in
pop
lds
xchg
sbb
in
cmpsl
das
mov
subl
jno
lds
sbb
pop
out
sub
ss
ja
jnp
test
pop
mov
jl
jmp
adc
test
and
inc
jns
repnz
jecxz
cmp
xor
and
loopne
jns
fwait
lods
outsl
out
and
mov
shrl
jmp
out
test
out
not
sub
xchg
and
lock
mov
jnp
sub
add
sbb
jecxz
inc
dec
xor
shrl
bound
push
fcoms
xchg
push
int3
popf
fnstsw
add
jecxz
cmp
pop
cmp
sub
mov
enter
cs
pop
dec
mov
adc
int3
mov
mov
in
sarl
clc
jle
je
lock
xor
xchg
sahf
adc
enter
xor
jno
vmovsd
fnsave
sbb
sbb
pop
test
sarl
mov
xchg
inc
or
add
sub
loope
ret
icebp
outsl
jae
xchg
xlat
mov
sub
sti
inc
scas
testl
jl
out
inc
scas
sbb
mov
cmc
ds
add
or
mov
xor
push
insl
insb
sub
gs
and
mov
xchg
ja
mov
sbb
incb
pop
imul
test
sbbb
std
push
imul
adc
inc
enter
in
shll
shl
push
sub
jecxz
mov
and
rolb
fcmovb
bound
dec
aam
mov
cltd
xor
int3
lcall
mov
mov
loopne
insl
sbb
int
inc
rcl
jae
sbb
mov
imul
out
pop
pop
cmp
mov
daa
xor
cmp
pop
test
cmpl
mov
ja
imul
ds
int3
stos
mov
es
mov
insl
mov
dec
cs
int
insb
dec
pop
ficompl
adc
mov
imul
out
jmp
pusha
lea
stc
jae
iret
std
fmull
xlat
outsl
pop
lcall
aaa
pop
rcrb
roll
and
leave
dec
rcrl
icebp
popa
stc
cmp
xchg
stos
test
sub
jl
out
repz
cli
loop
mov
push
imul
sub
dec
fcomip
imul
stc
xor
shrl
fidivl
jl
in
fdivrs
fwait
pop
negb
test
in
jmp
sti
imul
sbb
pop
ds
rclb
ja
push
rclb
movsl
mov
fxch
cmp
fmuls
add
mov
shr
shlb
inc
in
cwtl
add
sbb
int3
pop
repnz
aam
fbstp
add
int
stc
cmpsl
jbe
sbb
jmp
sub
movsb
xchg
xor
push
mull
repz
mov
cwtl
in
in
stos
gs
xorb
lods
jmp
cli
imul
aam
hlt
xchg
stc
sbb
mov
mov
lds
pop
inc
mov
push
jp
pop
fwait
ror
bound
flds
test
or
fstps
in
les
imul
cmc
enter
stos
pop
and
mov
jl
fcomps
flds
pop
mov
pop
lcall
scas
aad
aas
pop
add
movsl
insb
cmp
cwtl
sbb
ja
or
mov
in
add
outsl
and
fadd
sahf
cmpsl
pop
push
or
mov
push
sbb
enter
jno
pop
jg
push
pop
xchg
imul
pop
dec
sarb
outsl
add
add
xor
testl
and
fst
cmpsb
mov
inc
xchg
mov
dec
iret
es
pop
and
iret
rorl
aas
lret
call
and
rorl
mov
loopne
shll
pop
sub
mov
push
rorl
les
pushf
mov
in
idivb
outsl
inc
into
movl
inc
imul
insl
pop
mov
jo
outsb
fcoml
push
xor
pop
outsl
dec
loopne
push
push
cmp
stc
outsl
sbb
outsw
scas
push
popf
xchg
jl
test
mov
pop
mov
ret
pop
jmp
push
fcom
inc
push
arpl
ljmp
popa
mov
rcll
sarl
mov
popf
and
not
sbb
cld
fstpt
mov
inc
addb
test
pop
iret
je
mov
jbe
jno
and
ss
mov
and
ds
pop
dec
dec
cli
fdivrs
pushf
or
cmp
pop
jg
xchg
xchg
std
pop
shll
add
scas
pop
fstps
jge
add
outsl
sarb
jnp
lcall
popf
arpl
inc
mov
add
push
jecxz
jns
sbb
jecxz
inc
and
imul
andl
mov
sub
xchg
mov
in
test
mov
ret
and
push
mov
out
push
sahf
cmpsb
or
sbb
ret
call
test
xchg
sbb
xchg
jb
mov
lcall
push
fimull
inc
pop
push
cmpsl
and
sar
ret
ss
stos
and
imul
pushf
jbe
cmpsb
std
mov
in
sub
or
insb
jp
sub
test
mov
sbb
ret
inc
js
fistpl
fbld
jecxz
push
rorl
mov
ret
and
data16
dec
insl
pop
imul
jmp
jae
cli
pop
sbb
sbb
shrl
cmc
jecxz
jne
fcmove
mov
fldl
jmp
add
shl
orb
sbb
jmp
std
ja
mov
cmp
addr16
xor
add
sar
loop
pop
rolb
shrl
and
cltd
insb
lds
lea
mov
insb
xor
repnz
sbb
shll
xlat
jle
test
push
lcall
cmpsb
and
jl
imul
jb
mov
add
test
jbe
mov
call
pop
jg
stos
push
dec
out
mov
ja
in
imul
mov
mov
test
int3
xor
inc
int3
jae
inc
mov
test
and
sub
mov
lcall
inc
xchg
pop
imulb
lcall
fsts
cmp
or
xchg
into
addb
es
push
mov
ss
xchg
sub
or
dec
mov
jle
push
nop
fld
lret
push
inc
lret
mov
subb
mov
inc
jecxz
lcall
lret
inc
scas
sub
dec
cmp
addr16
in
lcall
xchg
in
xchg
xor
xlat
in
sbb
push
repz
je
cmpsl
insb
das
push
daa
aas
test
jecxz
aad
lcall
mov
in
in
popf
xchg
lds
testl
adc
or
lods
addr16
dec
fnstcw
fcomp
xor
sbb
pop
fimuls
inc
imul
sub
xor
push
xchg
jnp
adcl
mov
fidivrl
xchg
outsl
les
push
je
jb
and
add
mov
ja
and
movsl
je
jle
cmp
jns
dec
push
lcall
jg
cld
fildll
xchg
ret
xchg
data16
dec
sbb
outsb
out
ret
and
adc
int3
jg
and
repz
adc
fnstsw
cmp
fisttpl
leave
sbbb
fimuls
pop
lea
fcmovb
cmp
imul
loope
mov
lock
adc
icebp
sarl
jnp
dec
pop
enter
shll
cli
push
dec
repz
sarl
or
out
add
sbb
subl
rorl
inc
pop
and
dec
lret
jb
pop
fucom
mov
adcb
jp
inc
fistps
jecxz
jmp
pop
imul
std
xlat
scas
push
es
mov
push
aas
inc
call
push
jb
cmpsb
in
mov
shll
fucomp
dec
cwtl
orb
inc
shll
or
iret
idivb
pushf
aad
xchg
das
mov
mov
and
in
pop
aad
aas
imul
stos
pop
and
cmp
jl
ds
pop
fisubl
mov
push
pop
lret
adc
push
mov
aam
outsl
arpl
xor
adc
push
and
xor
jbe
in
cwtl
arpl
push
mov
rol
fcmove
sub
outsl
addb
dec
lcall
push
iret
inc
sti
mov
nop
mov
scas
push
pop
out
inc
jae
ja
sub
cmp
and
ss
sarb
jecxz
add
filds
fsubrl
in
sbb
out
imul
adc
loopne
dec
push
sub
popf
adc
fwait
push
loope
es
mov
xor
jnp
cmpsb
in
sbb
add
pop
aad
dec
or
jmp
movsl
cltd
add
clc
jno
ret
mov
inc
jp
pop
or
dec
add
push
jae
lds
inc
pop
pop
xchg
loop
dec
sbb
xchg
sbb
adc
jb
mov
mov
dec
push
jb
pop
sub
gs
push
mov
aaa
sbb
out
mov
xchg
or
adc
imul
fucomp
sti
pop
imul
sub
xchg
clc
adcl
xchg
sti
jmp
enter
pop
ret
add
add
pop
outsl
adc
loopne
stos
cmpsl
push
mov
stc
inc
sti
mov
push
add
in
test
loope
pop
push
mov
mov
mov
xor
sbb
aaa
in
out
jo
push
add
xor
movsl
loope
call
jg
addl
cmpsl
sbb
popf
sbb
shll
fwait
mov
cmp
mov
les
pop
mov
pop
shrb
inc
push
insb
dec
cmp
adc
test
fistps
out
dec
fdiv
dec
pop
icebp
pop
mov
dec
pusha
inc
push
fcmovne
repnz
lcall
push
xor
fsts
fidivrs
lea
jecxz
pop
and
adc
mov
stos
paddusb
test
xor
mov
cmp
push
insb
mull
xor
enter
and
hlt
ret
imul
lea
insl
jns
inc
jl
sub
es
jnp
and
sbb
rorl
jbe
sti
out
pop
jecxz
sbb
in
xchg
andl
dec
int
and
mov
push
jge
add
or
paddusb
cltd
jg
push
mov
xchg
mov
loope
aam
sbb
inc
add
lods
jle
fdivp
popf
push
loope
xchg
jns
insl
push
cmpsb
imul
mov
xchg
pop
adc
int
adcb
jns
stc
or
and
pop
or
push
cmpsl
lds
lods
int
lret
fldl
dec
repz
pop
fwait
xchg
imul
and
popf
incl
scas
scas
xor
hlt
jmp
es
jecxz
imul
ret
cs
js
pop
shr
xor
les
xlat
sub
sbb
cmp
jno
popa
inc
mov
loope
rcl
mov
add
add
xor
push
add
sub
mov
in
add
jns
mov
xchg
ds
pusha
dec
lcall
insb
mov
push
jecxz
dec
ds
cltd
xchg
insl
icebp
jmp
hlt
jmp
and
xlat
shl
imul
divl
stos
les
jecxz
cs
cmp
sub
div
inc
sbb
inc
adc
add
rolb
inc
xor
push
mov
int
js
fistps
stc
fistps
xchg
mov
jle
ss
push
mov
stos
lret
fcmovnb
mov
pusha
rclb
aaa
cmc
fadds
mov
xchg
movsb
pop
loope
das
inc
xchg
popf
add
mov
int3
outsl
popl
out
mov
or
and
dec
push
sti
xorl
mov
nop
les
jnp
dec
mov
cmpsb
xor
jne
popf
pusha
jmp
bswap
fsubrl
cmc
cltd
sbb
mov
int3
push
fmulp
hlt
shlb
out
rol
ffree
fisubl
jo
jle
std
scas
xor
enter
push
int
jge
popf
orl
adc
lds
out
jb
push
stos
iret
xor
dec
mov
lret
adc
mov
sarl
popa
cmpsb
adc
aaa
out
push
ljmp
pop
dec
push
dec
mov
mov
insb
mov
jne
hlt
imul
ja
add
in
iret
pop
push
mov
jae
sub
cs
or
push
mov
push
xor
sti
fcoms
loopne
mov
pop
dec
popf
inc
popf
xor
sbb
pop
fistps
adc
push
enter
sub
mov
sbb
pop
pop
addr16
out
fldt
adc
mov
ret
lcall
mov
xchg
pop
lcall
xchg
std
fdivrl
inc
out
data16
mov
xchg
mov
imul
enter
fbld
dec
fcomp
mov
jae
or
cmpsb
fidivrl
dec
mov
das
or
or
xchg
mov
push
mov
outsb
in
dec
dec
stc
push
movsl
fwait
jns
mov
xchg
sbb
gs
jge
fwait
ss
out
xchg
mov
ds
inc
or
cwtl
cltd
push
das
sbb
sub
jnp
and
fwait
arpl
stos
cmp
outsl
repz
push
addr16
jno
out
stos
fdivr
popf
outsb
insl
addr16
pop
imulb
sbb
and
dec
inc
cs
mov
jge
movsb
daa
jg
fstpt
lret
or
int3
pop
xchg
or
out
mov
js
out
add
fildll
push
scas
sbb
loop
xchg
push
outsl
ljmp
pop
mov
adc
test
add
pop
lock
push
lcall
cmp
adc
push
push
mov
xchg
popa
in
loopne
add
pop
and
into
test
gs
dec
xor
push
xchg
in
pop
shl
and
movsb
mov
or
adc
xchg
adc
lahf
jbe
jns
xor
dec
mov
mov
inc
ret
stos
test
sbb
push
jecxz
in
cmc
mov
shrl
or
test
loop
sbb
divl
in
ja
rcr
fucomp
ja
xchg
jne
ret
mov
dec
imul
loopne
sbb
xchg
cltd
out
pop
mov
jne
pop
cmp
jecxz
dec
sbb
in
mov
pop
cs
adc
mov
ss
mov
xchg
sti
push
mov
imul
sti
movb
xor
jmp
xchg
ret
mov
xchg
ret
mov
jecxz
pop
jmp
inc
xchg
mov
xchg
stc
pop
inc
call
mov
sub
or
sub
cmp
leave
fwait
insl
pop
cltd
jns
shrl
aad
mov
add
dec
jecxz
cli
cmpsb
pop
cmp
sahf
dec
mov
jne
push
cmp
xchg
out
inc
mov
push
sbb
or
jecxz
mov
mov
aas
mov
inc
jmp
inc
fwait
mov
xchg
frstor
rorl
pop
lds
xchg
pushf
mov
sbb
shr
ds
adc
mov
sbb
pushw
mov
iret
sahf
fmuls
cmpsl
push
add
and
or
pusha
aad
addb
mov
xor
or
pop
movsb
pop
jle
xor
outsb
push
mov
push
scas
imul
fadds
cltd
sbb
mov
jl
cli
cmc
arpl
pop
or
sbb
shl
jmp
push
cmp
test
shlb
push
aad
ret
into
pop
mov
jno
mov
aas
mov
and
push
sbb
fistpll
fwait
ret
in
xor
push
adc
mov
leave
lods
leave
jne
popa
and
in
addb
sub
jecxz
es
xor
mov
cltd
enter
xchg
cmp
fidivrs
xor
popf
fiaddl
sarb
xchg
xor
jno
sbb
mov
inc
das
and
cmp
repnz
jge
ret
pushf
xlat
test
pop
pop
mov
fbstp
stos
push
pop
pop
sbb
ds
mov
add
pusha
lcall
add
xchg
mov
mov
pop
test
xchg
stos
sar
aaa
sbb
xchg
in
xor
pusha
out
pop
lret
out
nop
mov
pop
jmp
xchg
add
adc
cmp
xor
and
jmp
pop
loop
jmp
xchg
xchg
testl
shrb
repz
scas
inc
aas
adc
cmpsl
leave
jg
pop
ret
xchg
mov
pop
or
sub
int3
insb
pop
cltd
ss
ds
or
addr16
dec
pop
outsb
fwait
pop
les
or
ss
test
cs
or
ljmp
or
aad
lcall
dec
mov
lea
enter
enter
and
test
mov
push
fimuls
add
fcomps
add
cmp
dec
pusha
and
jg
sbb
or
sbb
sbb
out
mov
add
addb
mov
fcom
jecxz
jno
pop
mov
sarb
mov
mov
js
outsb
lahf
push
jns
subl
fld
outsl
or
sbb
jle
pop
mov
mov
repz
bound
cmp
imul
es
xchg
inc
mov
je
ret
inc
add
cs
xchg
jnp
sahf
orb
jmp
dec
jmp
shlb
sahf
shll
repz
mov
in
mov
dec
insl
cmp
int3
movsb
or
mov
adc
push
stos
jg
xchg
pop
ficoms
pusha
out
dec
mov
and
sbb
mov
loopne
shl
adc
jne
mov
sub
in
mov
and
clc
andl
sbb
jecxz
imul
mov
fwait
xor
mov
lret
cmpsl
call
fsubrs
jp
cmpsl
mov
lcall
inc
loope
loope
mov
pop
xor
fsubrl
inc
jno
sahf
mov
sahf
pop
pop
repnz
dec
mov
sbb
push
xor
repnz
and
jl
fisubrs
repz
jp
push
testb
sahf
sarl
mov
int
fwait
daa
xchg
fmuls
cmp
lret
int
andl
rcrb
xchg
shrl
inc
loope
int3
dec
out
lret
outsl
xor
pop
std
dec
mov
sti
movsl
mov
jmp
cltd
dec
int
or
or
stos
cmp
scas
sbb
cltd
xor
jmp
ljmp
fucomip
nop
std
outsl
jecxz
mov
fsubr
loopne
jbe
in
test
daa
iret
out
mov
inc
dec
cmpsb
sbb
xor
cmp
fistpl
push
dec
iret
xchg
xchg
push
ret
fldcw
sbb
fcmovnbe
jg
rcrl
cmp
jno
icebp
in
push
ror
and
mov
inc
lcall
push
inc
lret
jp
mov
jecxz
mov
aaa
xchg
shlb
repz
adc
jecxz
sbb
sbb
loop
in
jecxz
filds
imul
mov
sbb
sbb
dec
fdivrp
sub
cmp
push
or
jecxz
and
sbb
insl
mulb
sub
mov
lock
dec
mov
xchg
aaa
icebp
data16
movsl
repnz
xor
imul
into
test
fldl
arpl
rol
pop
faddl
jno
or
and
aas
rcrb
add
push
sbb
and
call
enter
xor
fsubs
pop
mov
jle
mov
movsl
jne
repz
icebp
or
jnp
cs
ret
popf
sbb
enter
inc
push
lods
xor
pop
icebp
popa
fdivs
add
pop
sub
and
fldt
jne
imul
xlat
jecxz
in
frstor
jp
rcrl
insl
inc
insb
sbb
sbb
inc
xchg
jne
or
popa
push
cmpsb
dec
jo
ljmp
add
fimull
int3
cmp
arpl
lcall
mov
mov
data16
cmp
test
jl
aas
and
repz
shll
into
fs
std
andb
and
and
ficoml
insl
out
mov
test
sub
clc
inc
xor
fnsave
stos
or
ret
ja
jbe
fcomp
mov
mov
dec
test
loopne
stos
add
sahf
sbb
or
pop
or
stos
aad
dec
jmp
jg
int3
imul
in
mov
sub
jns
bound
loope
inc
aad
rcr
js
out
cmpsl
inc
jno
or
sub
xchg
sbb
jl
xchg
std
in
cwtl
fimull
std
push
or
les
mov
mov
in
int3
enter
fprem1
mov
dec
sti
outsl
sub
imul
je
pop
shll
jp
and
pop
or
sub
test
aam
loopne
xlat
mov
jp
mov
pop
repnz
arpl
in
mov
pop
movsl
dec
and
mov
jmp
arpl
dec
fidivrs
pop
int3
cmp
push
fsubp
and
mov
imul
pop
gs
sbb
nop
inc
aas
cmp
sub
in
mov
imul
sub
xor
dec
addr16
jns
mov
lahf
or
mov
sub
incb
pop
lahf
mov
jecxz
sbb
jnp
ja
adc
mov
mov
cltd
cmpsb
sti
icebp
jp
test
pop
pop
shrl
jne
into
ret
jns
mov
xor
shll
and
push
andl
movsl
mov
lret
js
cmpsb
jo
int3
xor
xchg
in
sbb
lods
push
jb
fstps
or
clc
sbb
fnstsw
fwait
ret
int3
inc
arpl
cmp
unpckhps
dec
pop
std
bound
in
loope
and
or
fstpt
lods
lret
test
dec
sti
insl
sbb
jnp
dec
push
pop
decb
enter
jg
sbb
xchg
mov
jmp
mov
push
xorl
mov
test
out
add
dec
cltd
mov
stc
dec
addl
bound
rol
ds
mov
or
xor
jle
stc
xor
cmp
in
lds
sbb
xchg
pop
inc
iret
pop
in
leave
faddp
aam
adc
jns
mov
ljmp
xor
add
mov
mov
sbb
fadds
mov
mov
pop
jae
inc
test
cli
leave
cltd
push
pop
test
push
outsb
push
sub
fwait
jb
sbb
or
aaa
jb
mulb
inc
jbe
call
dec
sub
pop
jno
pop
mov
bound
sbb
sar
shll
xor
inc
push
sbb
mov
test
sbb
arpl
mov
push
xchg
sbb
jbe
or
fwait
sti
or
in
mov
repz
loop
sbb
les
repz
pop
shll
sub
adc
cmp
pop
adc
push
mov
in
enter
xchg
fwait
cwtl
mov
pushf
push
mov
adc
fisubrl
pop
mov
jg
icebp
hlt
jno
lret
cli
cmc
fsubl
jl
test
inc
add
push
loopne
inc
ret
pop
push
cmpsb
enter
lea
pop
sbb
into
filds
push
shrl
sti
and
aas
xchg
mov
push
sbb
cmp
jl
fadd
out
sub
jg
in
xor
out
or
test
inc
das
out
loop
shll
push
data16
fldl
fldl
je
imul
jecxz
xchg
in
pop
or
mov
jl
pop
jno
or
sub
fcoml
pop
jnp
or
fsubr
repz
in
xorb
std
or
or
xchg
imul
sbbb
mov
dec
cmc
inc
and
es
pop
xor
mov
fdivl
xor
xchg
jne
ja
loope
and
mov
mov
flds
xchg
add
lods
faddp
in
insl
pop
xor
ret
ss
lret
push
xor
pop
scas
std
test
xor
popa
cwtd
nop
add
inc
aaa
adc
lret
mov
jle
aad
ss
jb
push
push
and
pusha
adc
in
dec
lock
out
nop
negl
fdivrl
fildl
cmpsb
mov
inc
mov
popa
cmpsb
subl
lds
ror
pop
repnz
rcll
xchg
cmp
inc
mov
pop
ret
pop
fs
lret
push
rsqrtps
aad
xchg
ret
pop
repz
imul
ficoms
cmpsl
call
das
mov
lret
xchg
sub
aam
jge
jle
mov
out
pop
ret
adc
negb
ret
sub
lahf
jle
xchg
sbb
sti
popf
std
es
rorl
ljmp
cli
sbb
push
stc
xchg
mov
sub
subl
push
adc
jmp
jmp
jnp
pop
stos
or
xchg
lds
push
hlt
mov
inc
xchg
inc
inc
mov
inc
popa
adc
pop
jne
dec
outsl
push
repnz
nop
addr16
rcrl
sbb
cltd
lods
lods
ret
outsb
test
fwait
xlat
dec
pusha
mov
out
dec
aad
movl
jecxz
sub
mov
rcrl
daa
jg
arpl
cwtl
and
repz
test
add
cmp
cmpsb
cmp
pop
xchg
in
imul
ret
fwait
xor
mov
das
dec
stos
mov
js
pop
insl
jns
lods
insb
sbb
inc
cltd
add
push
rcrb
xor
aas
inc
jnp
jecxz
jmp
jns
or
rcl
add
inc
xor
imul
add
push
jbe
lahf
popf
xorb
mov
and
mov
fldl
rcr
jmp
or
ljmp
jg
jmp
push
fstps
data16
push
jns
ret
in
aam
inc
sub
cmpsl
out
dec
and
les
inc
adc
mov
mov
sub
sub
pop
sbb
lock
popf
sub
imul
xchg
dec
jne
imul
add
xor
or
pushf
in
pop
xor
cld
out
bound
jnp
jns
push
mov
xlat
jge
pushf
mov
shrb
sarb
mov
ret
cs
shrb
jecxz
xchg
int3
mov
roll
or
cmp
cmc
fsubr
xor
xchg
out
mov
mov
cmp
and
fnstcw
cltd
rol
pop
push
shl
xchg
pop
sub
inc
xlat
dec
and
rcrb
xchg
imul
dec
push
inc
insl
xchg
dec
mov
rclb
fwait
sbb
push
arpl
mov
mov
mov
mov
sub
sarl
cli
rcrl
mov
sahf
inc
sbbl
shll
jmp
mov
jecxz
hlt
pop
add
mov
dec
mov
outsb
cld
or
jns
pop
int3
xor
and
push
dec
sbb
nop
sub
negl
and
jg
aaa
faddp
cwtl
inc
andl
cmc
flds
and
fbld
xchg
jle
std
jecxz
int
in
pop
or
jo
push
xchg
xchg
fstpl
xchg
pop
out
or
mov
nop
dec
add
imul
lods
jl
cltd
adc
jle
cmp
fwait
mov
inc
orb
repz
mov
aad
mov
sub
mov
in
clc
ret
push
dec
lds
loop
pop
dec
sarb
push
or
out
pop
js
push
and
xchg
lods
mov
pop
fstl
je
add
push
stos
jl
test
jno
and
test
push
jmp
movsl
mov
push
out
mov
shl
fcomps
cmpsl
lock
push
mov
fisttps
std
es
pop
aas
cmp
cs
sti
pop
mov
pop
imul
in
mov
mov
cmpsl
push
sahf
xorl
addr16
pop
sbb
adc
xchg
mov
loop
jle
fnstcw
mov
mov
inc
popa
pushf
sbb
push
std
fisttpl
jl
xchg
and
cmpl
movsl
jnp
push
ret
mov
mov
scas
mov
add
adc
fildll
in
xchg
repz
imul
je
xchg
push
add
and
adc
out
int
jecxz
sub
jl
pushf
push
leave
pop
cltd
xchg
mov
popf
fistl
out
imul
outsl
lods
pop
and
pop
sub
loope
pushf
int
test
stos
and
jecxz
bound
or
dec
jecxz
in
xor
int
gs
pop
push
push
xlat
pop
xchg
aad
xchg
data16
pop
fidivs
cmp
adc
xchg
lock
or
dec
fiaddl
imul
pop
xchg
sub
cmpl
sub
movsb
inc
ja
mov
add
mov
xchg
mov
xorl
jne
leave
cwtl
loope
sub
xor
das
aam
inc
mov
scas
adc
sahf
jg
and
ret
or
push
sbb
pop
sub
mov
pop
inc
repnz
jl
inc
test
push
xor
mov
jl
adc
sbb
movsb
adc
pop
movsl
or
testb
mov
idiv
or
sbb
dec
sbb
push
inc
sbb
pop
jge
fstps
sbb
xchg
aam
mov
std
test
xchg
push
fmuls
stos
push
pop
sub
xchg
bound
rorl
in
and
fwait
dec
and
das
cs
xchg
out
mov
pop
mov
pop
rcrl
fsubs
mov
ds
xlat
inc
sbb
pop
std
out
push
cs
lods
movsl
xchg
into
test
mov
addr16
pop
jl
jnp
mov
test
enter
mov
lcall
or
dec
cltd
popa
jp
jne
cld
je
add
inc
in
bound
cmp
shl
inc
push
leave
in
push
nop
push
pushf
outsb
cltd
mov
xor
adc
scas
or
nop
les
lock
lock
pop
aad
adc
adc
jne
das
fstp
sti
jb
rcll
mov
repnz
in
xor
pop
insl
pop
sub
xchg
insb
jns
or
jo
pushf
daa
xor
out
test
mov
dec
xchg
push
pop
mov
imul
sbb
in
xchg
je
cmp
inc
mov
push
fwait
movsb
out
xor
cmp
fwait
aas
cmc
iretw
lcall
push
mov
and
mov
and
out
cmp
add
mov
and
jecxz
sti
stc
enter
hlt
jl
mov
sub
sbb
inc
sbb
mov
std
sub
iret
dec
out
sub
pusha
ret
or
sub
les
xor
jp
jno
jmp
pop
add
out
jmp
fdivl
cmpsl
jg
inc
jmp
adc
daa
sarl
pop
iret
xor
fst
and
sbb
clc
cltd
dec
or
pop
jmp
fstps
jae
sti
inc
xor
mov
pop
popf
lods
mov
scas
lahf
enter
lret
in
out
mov
enter
lock
and
xchg
loopw
push
adc
cltd
lret
add
mov
sbb
icebp
xorl
or
ret
mov
shrb
mov
ret
jnp
inc
dec
lcall
dec
pop
leave
test
cld
dec
clc
sti
sbb
icebp
lret
sbb
pop
pop
jae
inc
add
cmc
jmp
sti
aaa
enter
fiaddl
mov
or
mov
inc
gs
aas
roll
in
xor
lock
sub
sbb
shll
hlt
sbb
add
insl
incb
cmp
jmp
ret
leave
dec
sbbl
mov
xchg
cmc
lcall
sti
pop
inc
pop
sbb
and
sbb
pop
and
sbb
ret
fcmovnbe
dec
fsubr
test
mov
sub
jns
jno
and
mov
xchg
add
mov
mov
scas
jmp
outsb
gs
jmp
add
cmp
sar
sbb
pop
adc
mov
jecxz
shll
in
xlat
and
fisubl
sbb
push
cmp
out
jecxz
sbb
repz
dec
dec
test
or
mov
push
or
inc
or
and
lea
mov
ret
cwtl
test
push
mov
imul
rorl
mov
xor
push
inc
sahf
sub
push
orl
jne
adc
pop
add
push
sub
test
outsl
add
mov
lea
inc
mov
enter
movl
iret
popa
pop
jb
call
ret
push
mov
mov
push
imul
sbb
push
jg,pn
ret
ret
sbbl
ret
pop
jle
arpl
mov
test
sbb
mov
mov
rorb
sub
aas
add
inc
dec
and
dec
pop
and
dec
movsl
in
lret
mov
cmp
cmc
repz
inc
and
imul
std
pop
movl
jmp
xor
mov
add
cmc
int
pop
test
xor
fistl
cmp
fcmovnbe
jle
inc
mov
inc
daa
daa
dec
sahf
xchg
dec
xor
lret
dec
idiv
jmp
sbb
xchg
dec
mov
mov
dec
mov
loop
enter
dec
aam
lea
aad
cltd
xlat
mov
popf
int3
pop
xchg
sbb
fidivs
into
pop
int
lock
test
jmp
xchg
cmp
pushf
adc
mov
xchg
cwtl
lea
movl
lret
push
dec
xchg
dec
xchg
icebp
push
xlat
pop
mov
aam
arpl
aaa
fmuls
test
in
xchg
fildll
out
mov
sbb
fcomps
sub
outsb
or
shll
xlat
fidivrs
in
inc
jae
inc
jl
test
fstl
cmp
lods
cltd
xchg
jo
adcl
in
or
mov
adc
jo
cmp
jmp
jne
lcall
std
sbb
mov
jmp
mov
add
sbb
push
movsb
mov
rcrl
test
dec
lods
mov
sub
adc
inc
and
cmc
out
or
pop
jmp
mov
xchg
sub
lret
pop
lods
jae
mov
xor
in
roll
sbb
fists
pop
out
ljmp
insl
mov
xchg
mov
jns
negl
std
movsl
out
fucomip
movsb
inc
fs
and
dec
dec
test
bnd
hlt
xor
imul
adc
push
sti
in
in
pop
es
jmp
push
sbbb
aas
lcall
stos
dec
fs
mov
sarl
sbb
jmp
xchg
xchg
sub
test
xchg
and
out
fnstenv
pop
out
and
pop
aaa
dec
mov
mov
insl
popf
mov
sbb
js
push
int3
adc
adcb
je
out
mov
inc
xchg
fcoms
mov
outsl
sub
jns
cmp
ret
cwtl
sbb
jmp
shrb
jno
xor
mov
push
jecxz
dec
mov
mov
pop
fucompp
stos
fcmove
jbe
sub
aam
imul
movb
xrelease
mov
outsl
es
xchg
repz
add
pop
aaa
xchg
sbb
lahf
inc
sti
nop
cmpsl
inc
sbb
dec
add
addr16
sbb
js
stos
xor
jb
add
mov
pop
xor
mov
fnstsw
sub
dec
sti
nop
or
pop
cmpsl
or
out
mov
adc
enter
pop
enter
cld
mov
les
dec
lea
loope
fidivrl
dec
stos
cmp
es
in
lahf
lock
insl
sub
mov
pop
out
jmp
push
jno
xlat
hlt
clc
fmuls
or
sub
dec
loopne
xor
movsl
add
cmpsl
rcrl
pop
add
cmp
mov
ret
mov
push
pop
sub
mov
sub
sbb
add
imul
and
sbb
inc
ret
lret
and
push
iret
push
popa
in
jae
mov
subb
xchg
rol
and
cmp
inc
mov
cmp
xlat
jbe
mov
std
sbb
jp
testl
loop
scas
leave
and
xlat
addr16
inc
aad
ret
outsl
cwtl
fmuls
dec
outsl
cwtl
jno
adc
mov
lock
mov
mov
jp
popl
lcall
out
xchg
dec
xor
aad
xchg
int
mov
xor
int
shl
or
lahf
mul
insl
imul
and
aam
cmc
mov
push
push
fnsave
xchg
leave
pop
jb
out
mov
repnz
sbb
add
loop
test
pop
cld
push
mov
mov
std
imul
aaa
arpl
fcoml
cltd
xchg
cmp
pushf
in
jo
mov
ror
scas
pushf
fwait
jle
popa
mov
adc
fmuls
jge
pushw
insb
fldt
ljmp
lret
sti
dec
mov
jmp
pop
pop
xor
jnp
dec
xor
lcall
pushf
inc
mov
fsubrp
mov
and
jae
xchg
sbb
cmp
fstpl
pop
out
shrb
sbb
fidivrs
jmp
scas
fucomip
sbb
and
adc
out
jecxz
loop
adc
loopne
mov
imul
inc
jmp
xlat
xor
jecxz
stos
decl
mov
and
or
out
imul
and
push
fldenv
negb
dec
out
outsl
in
jp
sbb
lods
sbb
push
sti
xor
add
jp
and
sbb
loop
sbb
dec
push
loopne,pn
aas
lea
iret
test
insb
pusha
call
fsubp
addr16
pusha
test
xor
cmp
jne
ja
mov
adc
push
and
imul
mov
sbbl
cmpl
add
mov
pop
lods
faddp
dec
push
and
sbb
icebp
pop
movsb
gs
inc
jb
cltd
pusha
ds
jb
sub
pop
int
fmull
cmp
mov
push
mov
cmpl
test
dec
mov
dec
les
nop
xchg
ret
push
aam
ret
fs
mov
je
push
call
pop
sub
mov
loopne
cmp
mov
inc
ret
mov
push
sbb
xor
gs
cmp
jg
in
out
loope
sti
sub
in
mov
loopne
loopne
aad
jp
mov
bound
mov
cli
sub
icebp
jp
test
push
in
xchg
xchg
pushf
dec
pop
fnstsw
inc
mov
subl
repz
add
mov
sbb
xor
movsb
inc
or
lret
lret
ret
mov
cli
mov
inc
sbb
es
andl
repnz
lret
mov
jbe
sub
ss
mov
into
leave
push
pop
pop
repz
or
push
repz
and
jg
jno
inc
aas
sti
int
dec
addr16
push
lods
in
mov
push
fsubs
pop
fistpl
pop
arpl
jne
add
cmpsl
sub
punpcklbw
mov
movsb
js
in
sti
out
daa
loop
push
mov
repz
nop
sub
push
inc
xor
cmp
movsl
dec
xlat
jmp
stos
insb
mov
cltd
out
lds
pop
lods
mov
aad
xlat
lods
movsl
fildl
push
jecxz
inc
mov
es
dec
out
xlat
test
popf
test
inc
ljmp
push
flds
pop
imul
aas
in
jp
jns
xor
sahf
cwtl
fstpl
jns
test
syscall
xchg
dec
popl
arpl
enter
mov
ficoms
xor
pushf
repnz
mov
or
aas
stos
sbb
scas
and
movsb
cld
rclb
jp
mov
sbb
adcb
aad
or
xchg
arpl
sbb
lret
nop
sub
mov
je
jl
sarl
das
lods
and
imul
and
loop
out
push
out
pop
jnp
shll
mov
in
sbb
or
jmp
int3
push
or
and
xchg
lods
xchg
sbb
ret
clc
pop
int3
inc
enter
cmpsb
and
insl
sahf
adc
hlt
pushf
arpl
int
aam
stos
imul
fbstp
aad
in
inc
or
jg
jnp
pusha
popa
fidivl
sbb
inc
add
sti
xor
push
out
xchg
xorl
int3
cs
sbb
std
bnd
xchg
mov
and
fdiv
addr16
cmp
insl
jae
xlat
addr16
sub
in
sub
fdivrl
cmp
push
add
dec
sub
adc
xchg
fcomp
cmp
sub
jg
mov
pop
mov
gs
outsl
pop
imul
gs
iret
fs
or
push
cmpsb
out
out
sub
out
adc
dec
mov
fnstcw
mov
jno
mov
orl
sbb
lods
dec
mov
xchg
cmc
dec
xor
mov
and
sub
cmpsb
jl
mov
and
fmul
into
shl
cmpsl
pop
lds
rcrb
fwait
xchg
stc
or
adc
enter
push
shll
add
shl
pop
insb
stos
repnz
sbb
fmull
ret
mov
xchg
lcall
cmp
out
loope
std
and
add
pusha
push
lret
sub
lahf
push
stos
add
mov
adc
jns
sti
out
and
sbbl
mov
sbb
xor
xchg
mov
mov
xchg
or
inc
out
mov
in
ret
mov
out
loopne
or
cmp
loop
nop
sub
pop
pop
cli
add
or
or
shrb
xchg
out
fistl
xchg
in
jecxz
push
stos
pop
lods
pop
xchg
imul
push
sbb
sub
cmpsl
sbb
dec
shlb
jns
int
loope
sbb
test
xchg
iret
out
pushf
imul
sub
lea
aad
cli
cli
mov
stos
mov
sbb
pop
int3
cmp
repz
xor
sub
mov
push
inc
cmp
mov
ret
jmp
lods
lds
and
push
mov
fwait
mov
out
dec
and
ret
nop
mov
sbb
jmp
inc
sti
xchg
ret
in
mov
xchg
push
mov
push
push
sti
inc
mov
mov
cmc
frstor
out
pop
cmpsl
xor
mov
xor
or
std
and
loop
sub
xchg
sbb
dec
sbb
les
int3
mov
pushw
lea
cmp
out
out
div
push
xor
lret
inc
mov
pop
inc
ss
and
sub
movsb
lods
and
shll
pop
jne
es
addr16
aad
enter
sub
int
aam
or
enter
or
jno
cmp
dec
mov
jl
test
or
imul
push
mov
push
roll
xacquire
mov
mov
aas
jge
jno
cli
ds
xchg
adc
mov
stos
outsl
int3
jnp
xor
int3
das
mov
loop
lods
or
and
dec
pop
dec
mov
je
push
in
leave
inc
pop
inc
cmpsl
scas
stc
and
les
ret
sbb
aam
sti
sbb
pushf
jecxz
notl
ffreep
xor
fs
adc
outsl
lea
jl
out
movsl
fcompl
jbe
inc
mov
addr16
pop
ret
jle,pn
jno
jmp
int
iret
inc
mov
sub
in
sub
mov
inc
insl
mov
sbb
dec
xchg
leave
push
fcompl
and
xchg
in
aas
lods
inc
fmuls
daa
lcall
jo
xor
mov
jg
jmp
mov
and
fisubl
cmp
fldt
inc
ja
xchg
cmp
shrl
mov
gs
hlt
cli
inc
cmpsl
pop
dec
push
dec
and
jecxz
inc
adcb
jge
push
neg
push
in
lret
nop
ss
xchg
and
fadds
sub
movsb
push
pop
test
pop
aad
int
enter
push
and
int3
push
out
sbb
std
mov
int
mov
dec
rol
mov
mov
fcoml
out
inc
in
loop
std
shll
andl
xchg
mov
insb
lds
ljmp
cmp
imul
jns
icebp
cmpsb
add
push
adcb
dec
call
insb
fldcw
aas
jmp
int
mov
imul
sbb
enter
fucomi
es
ret
out
adc
inc
inc
fstpt
dec
stos
mov
mov
je
lock
dec
std
mov
jno
jb
mov
test
lods
fistps
or
or
xlat
es
adc
out
cmp
insl
and
mov
xor
imul
in
int3
out
hlt
in
adc
aad
dec
push
mov
stos
adc
inc
or
lea
mov
leave
mov
and
add
popf
dec
rcll
jl
outsl
sbb
push
pop
rorl
add
dec
sub
rcll
mov
inc
xchg
aaa
aad
aad
sub
sub
sbb
jmp
xchg
adc
fdiv
in
sar
in
in
fistps
sti
sbb
sar
fsubr
inc
pop
push
dec
test
inc
or
sti
rol
in
popf
or
sbb
jg
add
jle
sbb
es
jnp
out
push
cli
in
sbb
aam
cmp
lcall
jbe
xor
push
mov
mov
mov
hlt
add
dec
inc
mov
aaa
jnp
or
insl
pop
jmp
sbb
out
sub
cli
mov
pop
call
push
mov
subb
dec
in
xchg
jb
mull
inc
sub
mov
pop
out
sub
pop
aaa
cmpsl
loopne
xlat
sbb
popa
mov
cmpsb
bound
mov
mov
ljmp
pop
xlat
mov
loope
in
adc
mov
mov
inc
mov
dec
arpl
rcrl
je
pop
in
xchg
mov
xor
push
jmp
fcom
jnp
push
pop
mov
xchg
movl
je
xor
fsubrs
iret
pop
dec
xor
test
mov
repz
pop
sbb
fsubrs
add
test
jp
mov
dec
insb
outsl
push
outsl
mov
lods
jno
inc
add
cmp
into
stos
out
dec
adc
fmull
sub
xchg
dec
cs
cltd
pop
add
sub
mov
test
les
dec
jmp
xor
fildll
sbbl
add
in
xchg
fucom
and
aas
rcrb
imul
in
cld
jmp
repz
das
push
shll
ja
push
ret
jne
data16
mov
subb
mov
aad
xor
or
xor
mov
bound
in
mov
dec
add
das
loope
adc
fnstsw
push
inc
cld
xchg
mov
xchg
pop
or
pop
in
enter
out
add
push
sti
mov
cli
xchg
pushf
aad
cwtl
ss
lret
fdivl
das
inc
ffreep
and
sbb
in
mov
aas
leave
adc
scas
icebp
mov
les
xchg
fistps
xchg
sub
xor
pop
leave
dec
nopl
adc
popf
jne
adc
imul
pop
sti
aas
xchg
push
push
push
mov
inc
mov
stos
mov
adc
fsubp
inc
out
jns
leave
xchg
enter
jae
jecxz
sub
das
sarb
pushf
gs
test
cld
decb
das
mov
dec
loope
fdivrl
sbb
js
ret
imul
lcall
dec
dec
imul
cmp
insb
fiadds
imul
pop
fdivrl
fiaddl
mov
xor
dec
xor
pushf
or
test
mov
xchg
lahf
and
stc
aad
enter
xlat
mov
cmp
xchg
add
inc
jg
repz
push
ljmp
sbb
sbb
cli
xchg
cmp
ja
cmp
mov
inc
iret
lea
out
sbb
outsl
inc
fs
mov
xchg
and
mov
adc
movsb
pop
sbb
in
in
xchg
jge
inc
pop
dec
dec
mov
pop
popa
push
inc
xlat
dec
aam
pop
jl
dec
inc
out
jge
inc
inc
sbb
sub
rorb
pop
push
jnp
and
enter
ds
mov
add
fimuls
out
xlat
movl
rol
mov
bound
loope
jmp
sub
jnp
aas
ret
lcall
mov
movsb
leave
pop
jecxz
pop
cmp
xlat
test
pop
mov
loopne
push
pop
lods
inc
mov
stos
loope
jle
jbe
pop
mov
sub
jp
data16
pop
imul
and
or
mov
xor
fisubrs
je
xor
mov
aas
fwait
dec
rcll
repnz
or
jmp
inc
mov
insb
fnstcw
fwait
outsl
pop
dec
pop
mov
push
scas
fwait
stos
cld
les
mov
dec
aam
aas
imul
jg
cmp
imul
mov
cmpsl
mov
dec
xor
gs
out
jno
dec
xor
bound
add
xor
inc
imul
data16
inc
dec
mov
lds
jge
imul
loopne
inc
cld
sub
sbb
xchg
in
mov
dec
aam
sbb
mov
xchg
int
ret
clc
test
cmc
fwait
pop
dec
mov
ljmp
xchg
mov
xor
xchg
pushf
call
mov
and
cmp
add
xor
inc
ja
ds
pop
xor
lds
jp
out
lods
ja
fisttpl
fucomi
pop
mov
sti
ret
sbb
mov
and
adc
pushf
sub
or
jae
pop
add
add
jecxz
imul
sub
fwait
pop
shl
in
xchg
mov
inc
stos
mov
das
pop
enter
mov
xlat
mov
jmp
inc
mov
in
fsts
iret
push
sbb
out
sbb
aad
out
ret
fisubs
inc
cmc
out
jle
jnp
fcmovu
dec
mov
addr16
jmp
cmp
lock
push
pop
jl
rol
mov
out
int
mov
dec
mov
sbb
scas
jcxz
test
jmp
lcall
cmpsb
movl
out
and
pushf
jecxz
mov
lea
xchg
popa
mov
pop
dec
cli
mov
lods
es
ret
adc
pusha
js
mov
dec
ss
jecxz
mov
dec
xchg
and
jl
leave
and
push
cltd
jns
pop
or
xchg
fistpl
push
jecxz
cltd
xor
iret
mov
js
fwait
push
mov
add
loope
mov
sub
loopne
sub
in
push
pop
stos
dec
dec
mov
fstpt
xchg
ss
insl
adc
push
fistps
and
movsl
sub
sub
mov
pop
fldl
lock
inc
in
imul
add
lcall
ret
outsl
fistpll
hlt
jecxz
pop
mov
popa
and
js
push
lds
imul
shll
sahf
filds
inc
outsb
sbb
pop
push
fmuls
cmp
add
lock
pop
mov
adc
and
sbb
push
jecxz
cmpsl
mov
xor
mov
mov
into
les
mov
add
add
cltd
loopne
and
push
pushf
push
aad
stos
cltd
je
shll
xchg
jl
out
fidivl
mov
imul
rcll
stos
dec
fnstcw
mov
xchg
aaa
std
addr16
jnp
jecxz
addr16
adc
inc
sub
or
xchg
xchg
xchg
outsl
lea
dec
lock
mov
daa
shll
mov
inc
fistps
nop
inc
cmp
dec
sbb
mov
push
cmpsb
in
dec
xchg
lret
jmp
push
push
in
popa
ret
fistl
push
and
sbb
insl
enter
push
fcmovnb
in
fwait
dec
jge
loop
xchg
xchg
push
add
aaa
in
repz
fldt
ffree
xchg
outsl
jmp
and
xor
mov
mov
pop
mov
imul
into
in
es
xor
jmp
arpl
mov
jnp
ljmp
add
arpl
ja
mov
ret
and
push
xchg
mov
lret
lahf
pop
fimuls
pop
test
out
fcompl
jle
inc
jecxz
inc
sub
sub
lea
cmp
je
xor
dec
push
mov
push
sub
dec
mov
cltd
lcall
lcall
sub
ret
sbb
push
cmp
sub
call
dec
sbb
add
sub
sbb
xchg
xchg
mov
mov
out
hlt
fwait
pop
inc
dec
popf
lock
add
jp
jbe
in
inc
inc
cmp
sub
gs
lea
mov
into
lea
cmp
push
in
sub
and
cmpsl
repnz
aam
jecxz
test
lods
mov
and
pop
lea
leave
xchg
lods
cmpsb
push
fistps
fisubs
mov
fwait
mov
test
dec
sub
adc
sub
push
mov
sbb
push
xor
mov
mov
inc
int3
push
sub
cmp
ret
xchg
es
js
mov
or
and
mov
pop
cmpsb
mov
jmp
xchg
fistpl
mov
jg
mov
inc
mov
mov
imul
inc
fildl
mov
dec
push
jmp
ret
pusha
mov
and
ficoml
inc
outsl
push
lahf
iret
mov
mov
das
fcmovnbe
inc
ds
sbb
mov
or
xor
sbb
sub
and
insl
movsl
filds
mov
pop
dec
fisubl
aad
push
or
cmp
and
sbb
test
xchg
hlt
cmp
mov
sbb
sbb
ss
xor
mov
vpunpckhqdq
addb
rcll
stos
ljmp
aas
fcompl
jns
fdiv
aam
push
rcll
xor
negb
shl
out
dec
cs
insl
ret
out
cmp
dec
xor
lea
sub
orl
stos
lds
xor
in
imul
add
xchg
mov
rcll
aam
sub
sbb
sub
lcall
ficoml
std
stos
mov
adc
insl
fcompl
leave
sti
push
enter
pop
enter
dec
and
iret
enter
mov
mov
rol
addr16
pusha
add
jmp
outsl
std
sti
xchg
mov
mov
dec
insb
lods
mov
pop
idivb
repnz
mov
ss
and
ret
push
repz
inc
pop
scas
sub
xchg
insb
andb
ret
xor
jmp
xor
pop
push
stos
push
fsub
fwait
aaa
inc
and
ss
push
adc
xorl
mov
arpl
data16
in
dec
je
inc
jne
cmp
cmp
inc
jne
lods
and
dec
sbb
and
rcll
ss
decl
mov
jmp
mov
jp
test
testb
and
inc
lock
fstps
xchg
fwait
cltd
or
sub
dec
dec
cwtl
int
push
push
jo
jb
inc
fmuls
push
out
sti
pop
cltd
jns
sbb
gs
clc
sub
lods
mov
jg
popf
push
jg
fstpl
mov
rcrl
push
rol
jb
cs
inc
and
jne
mov
jl
xchg
cmp
or
inc
cmp
pop
aam
pop
lret
ud1
daa
jb
xchg
int
aam
mov
testl
in
imul
roll
jmp
xchg
push
push
dec
cmp
or
aaa
pop
mov
mov
and
aaa
aad
arpl
sahf
popa
std
lret
mov
add
mov
xchg
pop
and
xchg
mov
adc
mov
fcoml
out
gs
clc
jbe
cwtl
into
sarl
imul
cltd
inc
or
popa
mov
jbe
inc
pop
xchg
and
sub
dec
inc
and
arpl
leave
std
xor
sbb
gs
je
adc
in
pusha
push
jne
loop
mov
jg
in
jns
push
jno
sbbb
sub
pop
xlat
aam
outsl
aad
cmp
inc
push
push
xchg
and
inc
pop
xor
push
popa
xchg
sub
or
ja
jg
inc
fiadds
flds
outsl
repz
out
int
ficoml
pop
ror
negl
pop
cltd
jp
push
rorl
sti
cmp
jo
pop
mov
sub
dec
insl
xlat
dec
pop
dec
xchg
sbb
and
mov
jbe
imul
iret
stos
inc
sarb
sub
xor
test
mov
out
movsb
test
sub
inc
shrb
negl
lahf
rcr
xor
jge
or
es
pop
in
fsubl
aas
mov
fstpl
iret
jne
jno
sbb
sub
push
sbb
call
dec
xchg
cltd
not
mov
aas
fmull
out
in
pop
aad
xchg
dec
fcom
mov
cmp
inc
lods
or
cwtl
pop
jecxz
fisubl
xlat
inc
cltd
sahf
inc
ljmp
dec
adc
or
ret
fisubrl
push
mov
add
vmovddup
leave
vmovhpd
xchg
push
neg
enter
xchg
xlat
imul
mov
dec
lock
sbb
es
fidivrl
jecxz
add
or
sbb
or
pop
cltd
pop
insb
push
mov
xor
pop
lds
pop
test
ja
bound
stos
add
movsb
incb
xor
mov
dec
cmpsl
pop
sbb
mov
lret
push
fistpl
fistpll
aas
in
and
pop
mov
in
mov
in
stos
push
sbb
push
imul
incl
loopne
out
jno
les
enter
push
xchg
ja
or
outsb
push
xchg
and
ja
sub
mov
or
dec
push
in
jmp
mov
subb
pop
addr16
and
and
rcll
cmp
mov
xchg
arpl
adc
popf
xchg
cmp
sbb
mov
popa
sarb
dec
out
and
jmp
pop
ja
xchg
or
mov
mov
lods
cmpl
ret
fldlg2
and
sbb
sub
jge
cld
cltd
cmp
imul
rsm
imul
pop
mov
into
lcall
xchg
dec
and
inc
fstpt
outsl
dec
inc
sbb
mov
popa
fimuls
fxch
and
sbb
dec
ficoml
icebp
orl
and
or
push
cli
lahf
sub
mov
mov
sub
xchg
mov
mov
test
ljmp
and
test
sbb
jg
jp
xchg
jae
insl
jnp
add
adc
cltd
gs
push
xor
cs
mov
test
fs
sub
pop
or
mov
cmp
fcmovnu
sti
sub
nopl
aam
mov
pop
fisttpll
jb
or
mov
and
push
push
sbb
scas
push
or
fildll
lds
fmull
aas
adc
xor
adc
imulb
mov
mov
mov
jecxz
mov
sbbb
shlb
lds
xor
popa
xor
stc
and
sbb
pop
aam
xchg
add
push
xchg
jmp
into
movsb
repz
ljmp
cmpsl
xor
and
mov
out
dec
push
test
fcos
xorb
pop
inc
fimull
rcrb
mov
push
mov
cmp
mov
mov
cmp
fnsave
mov
daa
ss
mov
pop
call
arpl
mov
loope
jnp
out
aam
add
xor
lds
mov
adc
add
jecxz
sub
push
pop
repz
cwtl
inc
jmp
and
xchg
lea
loop
sbbb
jbe
or
addr16
dec
push
imul
ret
push
or
inc
mov
ret
imul
jae
sub
aam
jle
jp
pop
repz
mov
pop
xchg
sub
cmpsl
jmp
xor
jae
sbb
test
xor
mov
adc
rcr
adc
jbe
pop
jbe
pop
pop
jmp
sbb
pusha
fidivs
xor
mov
fcos
cmc
sbbl
testl
rcrb
push
sbb
pop
cmpsl
mov
sub
dec
movsb
aad
enter
xor
das
lods
fidivs
daa
mov
aas
mov
scas
mov
int
addr16
pop
fistpl
gs
movsb
rcr
dec
fcoml
sti
jmp
dec
cmpsb
pop
pop
push
sbb
or
sbb
mov
in
aas
repz
mov
cltd
lcall
add
inc
out
mov
mov
sbb
fnsave
outsl
jb
jecxz
cmp
fwait
or
xor
sub
fnstcw
jmp
xor
sbb
fsubl
cmp
sti
xor
jb
aam
daa
pop
or
sbb
pop
cmp
push
sbb
xor
sbb
push
lock
movsb
dec
mov
sbb
enter
sub
lahf
and
iret
and
outsl
and
es
pop
repz
cmp
divl
aam
adc
mov
mov
xchg
std
and
lea
sub
xchg
and
adc
ficomps
push
pop
and
bound
mov
jne
jb
in
mov
mov
les
add
cmp
mov
inc
xchg
dec
inc
add
pop
inc
jo
adc
and
add
std
fdiv
push
or
cli
fsts
sbbl
and
out
sbb
mov
lahf
lods
or
jmp
cmp
movsb
test
bound
mov
fcom
and
test
push
cmp
and
pop
mov
and
sub
mov
dec
or
adc
repz
jmp
out
enter
ret
pop
sub
mov
inc
dec
es
jns
testl
int
adc
xchg
dec
das
lea
movsl
add
xchg
mov
or
xchg
mov
stc
fsubl
inc
inc
sahf
fcmovne
jle
loope
fwait
cld
lock
nop
lods
pop
fmul
inc
push
nop
jmp
pusha
jbe
jns
and
xchg
dec
jmp
xchg
imul
sti
fwait
and
sbb
incl
popf
flds
fildll
jmp
aam
mov
jb
sub
mov
rorl
xor
in
pusha
iret
cmp
ja
out
gs
jmp
xchg
call
mov
ja
xchg
sbb
sbb
outsl
or
and
mov
push
sbb
dec
insl
and
inc
push
cmp
test
js
pop
xor
push
mov
test
fstps
adc
dec
or
cmp
pop
test
std
outsl
jecxz
sbbb
mov
testb
jae
dec
and
test
cwtl
aam
lahf
frstor
repz
xchg
pop
call
and
inc
clc
and
mov
jmp
shlb
imul
xor
sbb
sbb
incb
dec
in
leave
mov
inc
loop
jno
cltd
adc
inc
sbb
adc
lock
not
test
ljmp
movsl
mov
aas
sbb
ljmp
lods
xchg
jecxz
stc
test
lret
xor
and
xor
roll
mov
mov
ret
ja
mov
cmp
sub
or
dec
mov
lods
inc
jmp
inc
jecxz
pop
xorl
int3
pop
push
stc
pusha
jmp
vphadduwq
rcrl
mov
es
ret
adc
js
lods
dec
loope
cs
in
iret
mov
push
je
testl
int3
shll
mov
mov
sbb
aas
scas
scas
sti
jno
sbb
stos
cltd
mov
pusha
xor
sub
adc
mov
fidivrl
mov
mov
xlat
xchg
mov
add
push
repz
xchg
andb
jmp
push
lods
pop
adc
fisttpl
fldl2e
mov
out
jge
xchg
test
sbb
pop
cmpsb
ds
xor
stc
sbb
repnz
cld
lret
jmp
dec
in
ja
push
pushf
in
fwait
incl
lock
ret
les
ss
dec
jne
fdivrp
out
and
jl
mov
scas
sub
stos
out
mov
push
sbb
fs
cmpsl
aad
in
fstps
fisubs
ret
pop
fwait
sbb
push
sti
cmp
inc
dec
mov
repnz
mov
hlt
inc
mov
sub
cmp
ret
out
aad
adc
push
bound
cli
and
inc
cmp
cmp
jmp
adc
shll
inc
enter
jns
mov
add
xchg
push
cltd
dec
mov
leave
popa
cmp
pop
dec
lcall
mov
ret
mov
dec
js
mov
and
mov
mov
int
push
lea
insl
syscall
dec
xorb
jnp
cmp
push
pop
sub
push
insb
push
xor
jge
sbb
int
jns
xchg
aaa
lods
jne
out
cmp
in
stos
fildl
sub
imul
push
mov
inc
out
sbb
jbe
push
xchg
int
mov
or
or
iret
test
fucomp
lds
leave
das
cli
call
in
dec
mov
cld
push
jmp
sbb
push
pop
stos
sub
ret
std
scas
gs
pop
mov
or
pop
and
inc
mov
jg
pop
imul
dec
je
mov
cmp
imul
lcall
data16
xchg
ret
movsl
cmp
adc
sbb
in
inc
jno
test
in
loop
mov
jbe
and
cli
mov
adc
arpl
xor
in
arpl
daa
xor
fnstenv
cmpsl
push
js
jae
dec
daa
and
inc
dec
push
aaa
and
mov
loopne
je
pusha
imul
imul
negb
mov
pusha
sahf
jnp
fmuls
rcl
nop
out
cmp
push
aam
sarb
into
jnp
fdivrs
ss
js
xor
imul
and
sub
hlt
dec
lcall
call
mov
and
and
and
test
shll
pop
dec
fcoms
add
dec
push
ret
xchg
dec
cmp
lods
insl
imul
sub
or
cmp
jp
ljmp
xchg
cltd
jns
inc
bound
xor
sbb
or
and
aas
cs
enter
dec
and
and
ds
loope
push
mov
jle
dec
cltd
cli
cmp
jnp
mov
imul
jp
pop
sti
test
sahf
lds
fiaddl
mov
popa
xor
sbb
xchg
cmp
das
dec
mov
jecxz
insb
mov
mulb
sub
cmpsl
int
testl
fcoml
scas
lahf
inc
cltd
pop
sub
cli
aad
pushf
sub
rcrl
mov
dec
push
cli
inc
addb
std
or
nop
and
add
mov
mov
arpl
jmp
sub
mov
ja
mov
add
lods
mov
mov
sbb
mov
xchg
test
push
dec
or
push
lock
xlat
xchg
iret
sbb
xchg
inc
jmp
push
push
scas
iret
inc
sub
mov
stos
mov
out
gs
mov
and
jae
sbb
insl
xor
sbb
mov
neg
jl
sub
mov
add
mov
imul
sub
les
sub
sbb
int3
aaa
nop
adc
push
mov
xor
push
pop
lea
lcall
outsb
sub
loope
inc
test
dec
mov
pop
xchg
ljmp
mov
lea
lret
lock
imul
insb
ss
push
xor
cmp
sbb
out
add
not
add
xchg
cli
dec
sbb
dec
and
aas
daa
iret
iret
lea
cmc
call
ss
push
adc
mov
lret
adcb
jnp
popa
mov
sbb
pop
and
sbb
pop
loope
loope
dec
push
fidivl
mov
sbb
xor
in
movsl
jp
mov
and
inc
jns
jg
addr16
sub
xor
cmp
jg
jp
in
pop
cltd
jns
int3
inc
cmp
aam
mov
shll
in
mov
imul
faddl
test
xchg
inc
push
sub
pop
int3
xor
movsb
les
sarb
xlat
mov
nop
inc
xchg
repnz
pop
xor
mov
pop
xorb
add
mov
ret
test
jp
imul
mov
mov
pop
xor
add
add
out
push
and
bound
fldl
pop
inc
js
mov
imul
cli
mov
pop
out
cmpsl
fisubs
aas
sti
std
and
fisttpll
jge
push
mov
sub
das
xchg
jg
jmp
filds
mov
fs
and
xchg
rcll
dec
ret
leave
inc
pusha
inc
and
pop
ljmp
push
insl
mov
jne
lods
pushf
inc
nop
arpl
nop
arpl
xchg
mov
neg
addr16
xor
jmp
sbb
loope
and
and
nop
es
rcr
sbb
sub
inc
sbb
enter
xchg
jmp
sub
jle
xor
sbb
in
test
arpl
jg
sbb
sar
jle
test
test
dec
shll
rcll
push
sub
hlt
inc
pop
out
and
jbe
popf
std
outsb
idivl
cltd
cmp
mov
fwait
inc
mov
test
mov
adc
mov
adc
xchg
mov
lds
sub
xor
popl
xor
outsl
xor
inc
jnp
adc
mov
cmc
or
xchg
mov
mov
add
mov
mov
shlb
fcmovu
dec
cmp
jne
adc
dec
sbb
jnp
popa
dec
pop
xchg
mov
loope
sbb
imul
enter
jl
iret
arpl
mov
pop
push
push
push
mov
movsw
shld
pop
imul
push
push
adc
and
int
sbb
xor
or
dec
xor
adc
mov
call
jnp
xchg
das
enter
xlat
mov
in
in
inc
cmp
test
mov
mov
xor
xchg
gs
inc
inc
add
ret
loope
outsl
in
mov
fisttpl
ljmp
stc
add
outsb
cmpsb
ficompl
test
cmp
mov
pop
xor
jns
insb
test
leave
mov
popf
pop
jl
ljmp
mov
std
pop
es
jno
pop
sub
inc
sub
mov
lea
cmp
pop
pop
jg
sbb
inc
lock
dec
insl
push
jl
addr16
pop
stos
imul
adcb
unpcklps
inc
cmpsl
stos
mov
pusha
xchg
push
dec
stos
sbb
pop
mov
loopne
movsb
jl
pop
adc
fnstcw
negb
pop
sti
fistpll
imul
push
add
cwtl
lcall
stc
inc
jecxz
imul
inc
js
ljmp
inc
mov
jle
insl
mov
sbb
fdivrl
push
mov
cs
data16
outsl
xchg
lea
push
lds
jl
incb
fldl
out
dec
pop
fcmovnbe
xchg
xchg
dec
and
fadd
ljmp
cltd
push
or
jb
pop
aaa
sbb
dec
inc
dec
push
sbb
inc
add
xor
outsl
inc
mov
test
movsl
out
push
or
sarl
xchg
int3
fildl
pushf
outsl
push
inc
inc
jne
xchg
loop
popf
rolb
addr16
jecxz
jnp
ret
inc
mov
popf
inc
fucomp
sbbl
cwtl
iret
orl
fisubl
xlat
sub
stos
sbbl
rorl
pop
jecxz
sub
ret
xlat
scas
mov
add
mov
pop
pop
inc
adc
cs
or
adc
mov
pop
mov
call
mov
dec
enter
lea
iret
xchg
int
cwtl
or
cli
popf
mov
lds
leave
pop
mov
sub
ds
inc
out
stos
shll
nop
out
push
cmpsl
cmp
fs
aas
xchg
cmpsb
xlat
jne
jmp
xchg
cs
cltd
mov
jmp
adc
push
pop
iret
inc
sub
sub
cwtl
sbb
jmp
rcl
fsubrl
mov
fwait
or
sub
ret
dec
push
push
jmp
mov
pop
out
fistpl
mov
push
fwait
repz
iret
mov
xchg
adc
outsb
addr16
cmpsb
arpl
cmp
pop
sbb
nop
fstpt
jge
ficompl
incb
loopne
cmpsb
cs
lahf
xchg
inc
adc
adc
std
scas
popf
fdivp
test
pushf
inc
jbe
ljmp
ret
cmp
jb
fcmovnbe
data16
sub
pop
data16
fwait
popl
imul
xchg
xlat
mov
pop
lds
vandps
repz
es
mov
ficoms
in
stos
fwait
push
jno
data16
add
sbb
xlat
stos
pop
mov
repz
mov
jg
inc
sub
pop
push
or
xor
lds
lret
aad
sbb
push
xchg
in
nop
movsb
rcr
fs
imulb
aam
addl
xchg
cmp
pop
leave
fildll
sbb
dec
in
call
cmp
divl
rcrl
cmp
sub
xor
insb
test
push
sahf
outsl
xchg
div
nop
lea
cmpsb
push
jne
dec
jmp
in
cmpb
and
adc
fstps
cmpsl
ja
test
adc
and
fucomip
les
sbb
loope
pop
xchg
ds
sbb
dec
sbb
mov
mov
shrl
std
pusha
jne
loopne
jno
jns
jb
push
pop
pushw
mov
addr16
add
dec
imul
xlat
pop
dec
cmp
data16
push
inc
mov
sti
and
int
xlat
rcll
pop
out
dec
inc
xor
in
xor
repz
aam
xchg
cmp
add
mov
cmp
add
dec
ret
inc
and
test
ljmp
pop
pop
cld
dec
enter
movsb
and
jl
mov
lock
jnp
mov
xor
lock
mov
adc
stc
dec
popf
enter
inc
dec
mov
xor
fstp
rcl
loopne
mov
cmp
loopne
loope
or
push
push
repz
sti
in
xchg
aas
jecxz
fstps
insb
adc
sbb
inc
jg
daa
jns
mov
push
inc
stc
sbb
mov
call
mov
push
cmc
dec
dec
or
jno
jecxz
mov
outsl
push
push
sarl
das
dec
xor
fwait
inc
xchg
fisubrl
outsl
jecxz
fstpt
adc
das
lcall
mov
jne
dec
mov
mov
xor
in
cli
mov
cmp
push
cltd
pop
aad
cmp
scas
lcall
pop
subb
aam
ljmp
push
lret
aam
ljmp
in
mov
sbb
inc
into
lock
push
xlat
sub
jne
or
jo
pop
adc
xorb
xchg
ret
xchg
xor
mov
jp
inc
and
dec
adc
pop
jmp
rcl
and
mov
mov
or
data16
testl
sbb
push
xorl
ret
int3
ja
jo
lea
xchg
jne
leave
ds
addl
xchg
gs
fistl
out
fsubr
ljmp
add
xor
das
repz
mov
mov
xor
dec
xor
mov
mov
push
jno
shrl
movsl
push
int3
and
ret
or
pop
imul
pop
jl
xor
adc
sbb
dec
sbbl
out
inc
cmp
arpl
lcall
mov
sub
mov
inc
xchg
xlat
mov
pop
adc
lock
idivl
and
pop
ret
fstpt
dec
pop
test
xchg
mov
mov
inc
cwtl
cmp
fdiv
jecxz
fdiv
xchg
aaa
mov
sbb
cli
dec
loope
idivl
pop
ret
std
lea
sbb
xorb
and
xchg
and
push
mov
dec
enter
repnz
negl
mov
and
push
shrl
fdivrs
mov
aad
sub
popa
xchg
stos
and
loopne
pop
inc
lcall
fsubl
xor
xor
mov
sub
std
push
sub
stos
fwait
mov
push
xchg
les
fdivrl
mov
ja
lret
or
xchg
jmp
fimuls
dec
cmc
lds
cli
pop
and
in
xchg
jle
es
cmpsb
jmp
xlat
arpl
sub
xchg
fldcw
mov
sbb
adc
pop
es
in
fnstsw
in
add
loopne
adc
xchg
cmp
test
jb
movsl
dec
enter
fsubp
mov
fbld
in
enter
fisubrs
sbb
dec
adc
shrb
xor
push
mov
add
ret
sbb
popl
ja
sub
das
sbb
mov
inc
out
cmp
out
and
sbb
fsubrl
aad
enter
pop
mov
xchg
sub
ret
mov
sbb
push
ljmp
test
lcall
cmpsb
sti
stos
pushf
mov
xchg
std
mov
orb
cs
cli
cmpsl
mov
fiaddl
inc
mov
xor
add
lds
adc
sbb
inc
jmp
in
xchg
pushfw
xlat
enter
les
jmp
xlat
lods
test
test
fstl
add
out
sub
mov
shrb
addb
push
into
mov
pop
dec
fistps
push
jns
bswap
andb
in
call
out
xchg
dec
dec
mov
mov
repz
repz
bound
lock
jbe
pop
xchg
inc
das
pop
test
cmpsb
std
rol
into
xchg
test
rorb
or
or
mov
fstpt
fisttpl
push
add
cmp
xor
fistpl
ss
shr
adc
inc
add
mov
aas
int
fwait
sbb
call
cmp
imul
sbb
jp
das
sbb
lock
mov
call
dec
sbb
cmpsl
jmp
mov
xor
fistpll
mov
pushf
xchg
add
pop
inc
inc
add
leave
in
sub
mov
push
mov
ja
xchg
pusha
movsb
inc
inc
fwait
mov
sti
pop
mov
pop
pop
dec
cli
jmp
inc
ret
adc
jge
push
ret
in
faddl
cmp
lcall
pushf
jmp
ret
mov
lds
jecxz
inc
sbbl
pop
sarl
pop
aam
ljmp
aas
loope
mov
adc
cmpsb
das
loopne
das
leave
pop
sub
pop
shll
mov
adc
out
xor
mov
enter
shlb
jnp
mov
adc
std
scas
mul
dec
jge
xor
repz
pop
dec
imul
cmp
nop
mov
push
dec
aam
inc
loope
and
push
repz
rcrl
fildll
push
fiaddl
push
xlat
leave
test
pop
jmp
or
imul
and
out
dec
fs
test
jns
sbb
or
pop
or
test
jns
adc
pop
cmp
jb
movsl
cmp
addr16
inc
xorl
sub
aam
push
mov
jae
pop
lock
jae
aas
dec
jae
dec
and
mov
fwait
mov
inc
push
out
mov
hlt
aaa
xor
jg
loope
nop
out
or
cli
sub
add
mov
inc
or
jns
inc
popa
push
test
mov
addl
xchg
lds
test
cmpsl
fcmove
aaa
fistl
sub
mov
cmp
push
inc
aas
cld
cmp
xchg
jl
addl
jnp
std
or
xchg
pop
dec
lcall
push
xchg
xchg
jns
rcr
push
add
mov
mov
arpl
mov
and
jl
lret
inc
ljmp
leave
pop
inc
sbb
es
or
sub
ja
mov
int
or
sub
loope
or
fsubrl
rcl
jno
rorl
ds
ja
rcll
sbb
jmp
mov
mov
and
pop
inc
outsl
stos
mov
jle
int
and
ror
mov
imul
sbb
lahf
inc
fndisi(8087
shll
imul
std
mov
fstl
pop
cli
popf
in
sbb
mov
pushf
subb
sub
pop
ret
subb
addr16
das
daa
loopne
mov
cmp
dec
ret
or
jecxz
test
sahf
in
mov
aas
cmp
sub
jmp
stos
rolb
out
jne
out
xor
stos
imul
movb
ror
ret
push
ds
sbb
jns
and
sub
mov
and
int3
xchg
mov
inc
xchg
add
mov
fisttpll
mov
cmpsl
out
sti
sub
jns
lods
xchg
xlat
popa
xchg
xor
fsubr
fs
arpl
fs
mov
in
mov
repnz
jno
jecxz
mov
out
xchg
fimull
mov
ret
or
pushf
cmp
add
cli
pop
lcall
fwait
sbb
test
test
stos
jmp
inc
dec
and
aad
fucomp
ficompl
mov
fldt
sarl
inc
lds
imul
fwait
cmp
in
out
fstpl
repz
arpl
aam
cmp
mov
aas
jbe
es
xchg
aam
aad
and
adc
pop
push
xor
jge
jp
gs
add
push
add
nop
fsub
aaa
jne
mov
mov
adc
orb
adcb
cmp
adc
sub
pop
and
mov
mov
pop
add
ret
test
jnp
fmull
sub
push
adc
mov
add
push
sbb
lea
addb
jecxz
xlat
mov
je
jecxz
xchg
mov
xchg
test
fs
push
xchg
inc
dec
or
leave
insl
mov
jbe
pop
mov
mov
xchg
mov
cmpb
pop
or
push
stc
rcrl
push
fcmovnb
leave
push
fmull
mov
pop
icebp
cli
and
stc
inc
push
dec
or
cltd
pop
movsb
ss
jae
or
mov
outsl
sbb
fildl
mov
shl
pop
dec
pop
sbb
mov
out
aaa
subl
mov
mov
sbb
out
outsl
jae
insl
imul
mov
dec
mov
inc
dec
mov
cmp
jns
test
push
xor
in
mov
movl
test
sti
or
pop
mov
imul
cmpsl
fildll
cwtl
add
sbb
arpl
xor
cmpsl
cmp
mov
insb
cmp
ja
xor
xor
inc
sbb
movsb
inc
jb
stc
icebp
mov
mov
stos
inc
xor
add
rcll
xlat
xchg
std
ja
push
and
mov
cmpl
xchg
addl
popa
out
push
test
push
fdivs
sub
xchg
fwait
es
and
mov
dec
ret
insl
sbb
out
sub
inc
arpl
mov
or
xchg
daa
jns
andb
cmp
repz
xchg
pop
sbb
pop
jbe
hlt
aaa
dec
in
popa
dec
and
mov
inc
cmp
test
add
enter
push
ja
mov
xchg
jae
mov
icebp
sbb
fsubrs
leave
aam
int
jbe
adc
jne
or
aam
mov
mov
scas
movsb
rol
fimuls
xchg
lods
sub
xor
idivb
or
scas
les
sahf
out
cmpsl
fcompl
mov
popf
xor
mov
mov
popa
xchg
aad
mov
scas
dec
and
sbb
ja
dec
or
and
mov
ret
fistps
mov
jb
rcrb
insl
sub
fistps
ja
rcrl
stos
mov
fisttpl
cs
fldcw
xlat
jnp
and
js
icebp
mov
sti
push
add
push
rorb
sahf
les
arpl
loope
fiadds
jecxz
in
in
dec
stos
or
dec
pop
inc
lret
xchg
cmp
popf
aaa
pop
cmc
jmp
hlt
or
pop
or
cli
xchg
mov
add
push
jge
dec
mov
repz
ret
mov
out
cs
inc
or
sbb
imul
ret
pop
sub
pop
xchg
lcall
ret
dec
lods
ljmp
loop
add
pop
add
jl
jmp
sub
push
sbb
pop
mov
jecxz
ss
and
xchg
mov
shl
jmp
ret
into
or
stos
test
jp
jmp
loopne
and
cmpsl
iret
lcall
mov
mov
ficompl
xchg
fisttpl
fiaddl
inc
lahf
lret
xor
xor
mov
sbb
push
or
jo
iret
sbb
add
push
insb
pop
mov
insb
inc
xchg
dec
mov
xor
cltd
in
dec
pop
push
pusha
filds
fcoml
cmp
cmp
stos
sub
dec
cmpb
jae
add
mov
mov
hlt
xor
adc
mov
add
jmp
mov
sti
stc
into
cmp
cld
fwait
fwait
jp
or
fwait
dec
fwait
inc
push
lock
sti
popf
dec
dec
ja
or
push
mov
out
cli
cld
jmp
jmp
fbstp
lret
int3
sti
jp
cs
dec
imul
mov
xor
jmp
xchg
dec
pop
pop
mov
cld
mov
inc
out
in
jae
inc
adc
mov
and
leave
fucomip
or
jp
cmp
jnp
push
outsb
loope
xchg
repz
mov
loope
lds
inc
aas
xchg
call
pop
xlat
stos
sti
xchg
push
pop
jnp
push
mov
lea
and
popa
add
sbbl
push
repz
lea
aas
mov
inc
stos
xchg
jp
sahf
inc
call
sti
dec
cmc
pop
out
ja
ljmp
loop
mov
lea
jecxz
xchg
sbb
test
std
lret
sub
jg
inc
adc
adc
in
mov
inc
xor
push
pop
mov
dec
lahf
fistps
jmp
jecxz
adc
ja
cli
sub
fstps
jmp
dec
inc
push
fucomi
cli
inc
icebp
mov
xchg
jb
inc
or
bound
pop
pop
subl
ret
bound
in
mov
out
dec
dec
mov
out
fs
int3
ret
xchg
push
fistps
les
push
jge
push
mov
ret
xchg
fdivl
stos
loope
push
outsb
add
loop,pn
mov
lea
pop
xchg
dec
push
add
xchg
lret
xchg
cmp
pusha
in
repz
addr16
or
inc
nop
lea
jmp
mov
lret
xchg
ljmp
es
pop
dec
sub
cli
pop
mov
pop
ret
cmp
lea
mov
imul
pop
cli
and
fsts
mov
movsb
addr16
les
pop
sub
and
ljmp
dec
inc
xor
xchg
ret
xchg
cld
push
jno
inc
cmp
adc
cmp
ret
in
cmp
rcl
push
xor
mov
xchg
pop
or
inc
xchg
pop
scas
imul
inc
or
lcall
sbb
cmp
scas
inc
stos
inc
sbb
test
lds
inc
pusha
or
scas
xlat
shl
dec
lret
out
mov
or
sarb
fwait
xor
lea
scas
stos
das
mov
inc
mov
imul
inc
lea
push
mov
jmp
adc
imul
into
inc
loop
shr
pop
repnz
in
pop
loopne
inc
addl
nop
pop
sub
fdivl
push
fimull
sarl
fimull
or
into
ljmp
jmp
call
mov
out
lods
push
fldln2
xor
fwait
pop
xor
mov
cmp
ret
repz
or
mov
dec
mov
icebp
jmp
test
dec
xlat
pop
fsub
fwait
pushf
jecxz
stos
mov
xchg
xchg
mov
mov
fimull
pop
xchg
dec
inc
lcall
lahf
mov
ret
mov
push
popf
fcmovnb
mov
or
neg
lea
ret
dec
iret
push
repz
shrl
aad
mov
mov
nop
jle
cmp
push
sbb
lcall
stos
cmp
xchg
xchg
sub
fldt
fnsetpm(287
jmp
pop
dec
mov
xchg
pop
ret
imul
sub
out
sub
sbb
fwait
sbb
inc
dec
mov
in
mov
jle
inc
lret
push
ret
lea
mov
xor
add
les
pop
xchg
pop
sub
dec
cmp
inc
mov
pop
movsl
inc
push
clc
mov
dec
and
aad
dec
xchg
lods
stos
fdivl
lahf
add
inc
jp
push
popf
in
dec
iret
ljmp
and
in
and
inc
int
mov
jmp
mov
fstpt
jmp
ficoml
insl
jae
pop
jecxz
sub
dec
jecxz
cli
lea
iret
fimull
cmp
mov
into
inc
jb
lods
inc
cmp
roll
outsb
xchg
iret
inc
mov
inc
jecxz
push
lea
jecxz
and
jecxz
stos
leave
xchg
jmp
mov
insl
mov
add
xchg
lea
fiaddl
jp
fld
mov
dec
ret
pop
imul
push
in
jnp
in
or
fimull
lcall
sub
in
or
lea
xchg
and
lea
pop
stc
mov
mov
push
and
xchg
inc
pop
lea
jae
mov
inc
sub
mov
inc
cli
out
xchg
insl
sub
fimull
js
loop
lret
dec
into
inc
jb
in
inc
cmp
mov
mov
stos
insl
mov
push
insl
or
mov
cmp
fistl
jmp
repz
popf
out
mov
ljmp
ljmp
inc
test
stos
cmp
inc
ret
fisubl
negl
test
es
xchg
pop
inc
stos
jmp
xchg
lret
sbb
loopne
test
mov
mov
sub
or
fwait
negb
mov
pop
or
mov
mov
fcmove
jno
sti
out
movsl
or
jle
mov
gs
ljmp
mov
mov
scas
lods
mov
jp
push
scas
subb
lret
jp
mov
mov
in
sbb
addr16
imul
stos
fisttpl
jp
iret
iret
pop
fimull
xchg
fimull
mov
pusha
fcoms
lret
loope
jecxz
xchg
lahf
iret
jb
pop
jb
mull
data16
rcr
xchg
jae
mov
mov
mov
xor
flds
push
in
and
js
push
xor
imul
mov
lea
inc
xchg
daa
test
jmp
push
xor
inc
out
inc
or
scas
out
mov
mov
push
mov
mov
fldcw
ljmp
mov
out
in
stos
jmp
les
push
inc
xchg
repnz
imul
movb
fwait
popf
ljmp
lods
stos
inc
lods
cmpb
cmp
jns
or
fisttpl
inc
xchg
adc
mov
xchg
outsb
jae
push
jecxz
ret
xchg
inc
and
sbb
xchg
clc
arpl
push
int
mov
fidivrl
loop
imul
xchg
xor
mov
jnp
inc
aas
and
stos
loope
sbb
test
fiaddl
mov
inc
and
jns
xchg
test
adc
sbb
or
lock
jmp
imul
mov
in
dec
lods
mov
jle
fwait
in
ret
mov
out
test
idivl
idiv
fildll
mov
call
xchg
xchg
or
push
or
inc
insb
xlat
mov
adc
fstpt
ret
xchg
mov
fnstenv
in
jnp
sub
ret
mov
dec
stos
loopne
lret
mov
stos
cmp
insb
mov
fcmove
outsl
int3
lret
mov
adc
fldenv
stos
lock
out
xchg
pop
inc
fistpl
neg
xchg
bound
mov
shlb
out
stos
loopne
out
sbbl
jne
xchg
sub
pop
fld
es
cmp
lea
mov
negb
lea
dec
adc
mov
fucomi
out
pop
sub
sti
inc
xchg
pusha
mov
rcrl
scas
jecxz
mov
jmp
xchg
mov
xor
jnp
fstpt
popf
jmp
movsb
fiaddl
inc
dec
imul
fwait
dec
dec
jnp
call
ss
push
les
fstpt
xchg
int3
mov
jp
push
and
mov
jp
add
or
xor
inc
push
mov
pushf
pop
inc
dec
push
inc
filds
mov
jmp
push
sbb
ret
mov
ljmp
scas
jb
js
xchg
lods
dec
cmc
mov
xchg
xor
push
mov
sbb
stos
icebp
mov
in
movsl
fildll
xchg
pop
ljmp
shr
cmpsb
push
lahf
inc
scas
fwait
fwait
addr16
xchg
or
dec
popa
lods
subb
popa
loope,pt
lods
ret
mov
mov
lea
in
and
rolb
xor
xchg
cmp
pop
test
in
mov
sbb
and
xchg
inc
cs
dec
mov
cmp
outsb
mov
fwait
sbb
dec
inc
or
popa
mov
out
aaa
lret
in
dec
jmp
lahf
ljmp
int3
mov
cmp
inc
xor
popf
sbb
loopne
lcall
stos
add
fwait
popf
lcall
fdivrl
addr16
inc
sub
sbb
cmp
cli
lret
lret
and
xchg
imul
pop
js
mov
push
sbb
gs
and
cmp
jg
fwait
pop
in
mov
test
cltd
scas
xchg
jmp
cwtl
fsubp
fcmovu
mov
outsl
imul
mov
stos
flds
inc
xor
mov
jnp
push
cmpsl
test
ljmp
inc
or
mov
mov
bound
xchg
xchg
dec
sahf
dec
xchg
cs
mov
mov
lock
fidivl
or
testb
dec
imul
mov
outsl
in
cli
or
shll
sti
adc
add
push
fnstenv
push
adc
fcmovu
mov
stos
fs
jmp
in
and
cmc
test
pop
mov
out
mov
dec
imul
mov
cmpsl
gs
mov
inc
mov
sbb
mov
xor
jb
lods
fcmovu
dec
mov
les
dec
sbb
popf
dec
dec
jns
dec
mov
pop
inc
sti
lea
iret
mov
mov
cwtl
xor
lret
push
fwait
iret
ret
pop
lcall
pop
mov
cmp
insl
push
jle
push
sub
loop
mov
mov
stc
popf
add
pop
gs
fimull
xor
ss
pop
test
jnp
sbb
loop
dec
fwait
lea
cmc
inc
sarl
pop
push
add
stos
mov
test
lea
jmp
push
mov
imul
cmp
setl
adc
or
jnp
add
push
pop
mov
cmpsl
jb
cmpsb
ret
arpl
jnp
mov
stos
addr16
in
test
push
in
not
loope
inc
loop
fstps
lret
mov
scas
inc
cmpsb
xchg
jns
fnstenv
sub
inc
test
in
lods
inc
cmpsb
fldpi
xor
jmp
test
outsl
jb
imul
push
mov
test
jb
sahf
inc
lods
inc
arpl
push
in
test
jb
sub
push
add
ret
and
mov
pop
jg
inc
ljmp
inc
lods
cmp
push
stos
inc
jmp
push
push
iret
inc
push
shrl
cmpsb
ljmp
xchg
gs
mov
in
repz
inc
adc
repnz
stc
iret
ret
pop
aad
sbb
lods
mov
jecxz
or
xchg
stos
mov
inc
loop
pop
inc
push
mov
xchg
lds
ficompl
rolb
arpl
into
iret
sub
mov
or
arpl
adc
les
in
inc
fwait
and
lea
xchg
popf
flds
out
ljmp
dec
rolb
addl
dec
dec
fucomip
ret
pop
js
jmp
xchg
mov
les
cmp
mov
mov
rorb
mov
test
or
jae
insl
fidivrl
in
jns
lret
out
jmp
mov
dec
outsl
xchg
imul
dec
rorb
inc
mov
fcmove
outsl
mov
and
je
jmp
out
cmc
fiaddl
fsubrp
mov
inc
lea
jmp
adc
push
xchg
adc
fimull
out
int3
fists
ret
cmpsl
in
std
rorl
inc
xor
mov
fcmovu
fdivrl
add
xlat
je
fldpi
stos
fsubl
dec
repnz
jb
fwait
or
mov
inc
mov
cs
and
in
xor
lods
push
xor
fildll
sarb
outsl
ffreep
test
imul
fildll
mov
add
cmpsl
ffreep
xor
cmpl
ret
in
mov
loopne
movsb
lea
mov
sub
cmp
mov
jbe
pop
push
jp
sub
lea
dec
inc
out
loopne
in
pusha
jno
cmp
mov
cmp
xchg
push
mov
sub
lret
xchg
jmp
or
mov
ljmp
xor
mov
popf
mov
xchg
jmp
jl
inc
add
fisttps
rcrb
jecxz
in
es
lock
in
frstor
cwtl
pop
in
mov
fsubrp
mov
sti
das
cmpsl
sub
cld
fistpl
mov
xchg
mov
sti
pop
imul
iret
les
jl
cltd
push
fisttpl
mov
jmp
push
rorb
push
adc
jle
inc
mov
inc
aas
jle
ljmp
lcall
orl
xor
rol
push
ss
jmp
jle
mov
lret
out
lods
push
fwait
sbb
test
test
int3
sti
jp
iret
pop
icebp
lret
sbb
jno
pop
jmp
fmull
out
inc
lret
inc
lods
rorl
rcr
loope
jmp
sti
sub
or
inc
loop
sbb
dec
mov
jg
jecxz
inc
mov
sub
inc
sub
inc
mov
cmp
sti
pavgb
mov
and
movsl
pop
fwait
stos
out
pop
pushf
cld
shlb
lea
movsl
pop
adc
fildl
and
cmc
mov
paddusw
pop
mov
xlat
imul
pusha
pop
fwait
sbb
inc
scas
in
push
mov
out
mov
jp
push
pusha
or
mov
das
mov
fstpt
xchg
dec
fwait
mov
nop
add
inc
jno
out
sub
or
cmp
negl
sub
mov
inc
cs
mov
sbb
jmp
ja
dec
sti
lea
test
imul
lcall
test
inc
sti
lea
xrelease
cmp
outsl
mov
fisubrl
push
out
adc
ret
jmp
stc
xchg
inc
sti
test
lea
mov
push
dec
jnp
imul
jl
xchg
cmpsl
cmp
jle
mov
pop
dec
inc
cmp
inc
pop
adc
mov
sub
lahf
rolb
sub
pinsrw
mov
jne
lods
mov
stos
fidivl
test
or
aas
std
loope
scas
int3
movsl
pop
rorl
push
rcl
mov
ret
jns
or
inc
mov
jp
pop
shrb
pusha
mov
push
fcoml
icebp
jnp
aam
xchg
shrl
dec
test
in
sbb
stos
lea
flds
jmp
inc
push
mov
out
push
neg
or
and
inc
ljmp
into
jb
or
jmp
fidivrl
shll
fidivrl
flds
sbb
lea
into
mov
inc
mov
cmp
adc
jnp
ljmp
mov
ja
ficoml
ret
out
test
inc
mov
mov
cwtl
add
mov
pop
out
cmp
sti
ljmp
outsb
loope
mov
dec
ficoml
xlat
jmp
jmp
ficompl
xchg
movsb
fildll
mov
mov
or
mov
aas
shlb
insb
mov
divl
mov
movsb
aas
add
mov
cld
aas
sub
aas
shlb
sbb
aas
ret
sbb
aas
mov
mov
divl
mov
inc
fwait
mov
insl
inc
loope
or
lea
das
xor
push
pop
in
or
push
loop
lods
lds
aas
mov
cli
jbe
loope
fcomip
add
pop
mov
cli
fimull
mov
lret
fcoms
sub
jmp
sbb
inc
push
mov
jecxz
sbb
push
cmp
loope
xchg
es
mov
cmp
setne
loop
xchg
stos
arpl
fsubr
or
ffreep
sbb
dec
pop
inc
sarl
dec
cmp
flds
and
insl
mov
test
orl
push
aad
int3
inc
dec
icebp
mov
pop
mov
gs
mov
fmull
or
mov
dec
bound
fwait
lock
inc
fimull
inc
xchg
xchg
shll
cltd
mov
dec
filds
xchg
sub
out
cmp
sub
aas
fbstp
fisttpl
in
adc
test
inc
jbe
push
and
add
cmp
inc
and
sahf
lcall
xlat
xchg
xchg
jle
push
popa
or
fnstcw
aad
mov
pop
aad
mov
ljmp
mov
xlat
pusha
call
dec
mov
jmp
fcmovu
dec
dec
mov
lret
popf
shrb
dec
mov
into
les
inc
test
test
mov
mov
mov
cli
fcos
sti
xor
cmp
mov
xchg
lret
jmp
sti
decb
inc
jg
jns
lret
xchg
fisttps
int3
mov
std
xchg
xchg
xrelease
into
lret
ljmp
dec
stos
pop
inc
pop
lret
fcmovne
cmp
popf
mov
jg
out
and
in
cmovg
inc
lock
pop
cmp
xchg
push
jmp
data16
popl
stc
in
mov
in
les
ret
stos
cs
xor
or
js
sub
imul
mov
cmp
out
in
test
imul
imull
cltd
sub
jmp
fimull
inc
imul
mov
in
subb
adc
insb
stos
fisubrl
dec
push
jmp
dec
push
ret
push
fldt
ljmp
loop
cltd
mov
ret
pop
std
cmc
mov
add
inc
sub
imul
les
mov
loop
mov
fstpt
xchg
icebp
push
es
in
adc
loopne
pop
fcmovnbe
adc
xchg
mov
mov
mov
dec
stos
add
mov
aad
insl
xor
mov
adc
iret
fimull
pop
ret
out
jecxz
jnp
and
or
add
xchg
jp
jle
dec
or
mov
iret
jg
enter
sub
in
pop
out
pop
jmp
push
ret
jne
rorl
sub
and
jnp
and
push
in
fwait
mov
iret
push
adc
cmp
hlt
xorl
mov
inc
repz
leave
inc
cmp
fisttps
fiaddl
ret
stos
addr16
or
loope
lcall
or
nop
loope
rcr
and
cmp
outsl
fidivl
inc
rol
lret
xchg
mov
shrl
xchg
mov
mov
std
push
inc
jmp
sbb
adc
imul
dec
ret
push
sti
push
inc
mov
cld
dec
fistl
in
jno
testb
dec
in
mov
int
insl
imul
inc
dec
inc
mov
dec
test
jns
in
and
cmc
andb
mov
rcll
push
dec
pusha
inc
lahf
add
xchg
imul
cmp
inc
mov
push
or
mov
mov
and
sbb
daa
inc
xor
adc
stos
mov
icebp
outsl
xlat
out
sub
add
dec
mov
lret
mov
or
inc
out
mov
pop
fwait
ret
cltd
sub
xor
sub
ret
jns
jmp
mov
mov
neg
mov
inc
inc
lret
pop
popf
dec
mov
repnz
mov
rorb
in
fwait
pop
out
rolb
repnz
xor
out
int
in
jno
add
sub
xchg
aaa
iret
frstor
insl
mov
aas
pop
iret
ret
in
mov
mov
cmp
sti
jmp
ret
imul
mov
pop
iret
pop
mov
aad
rclb
repz
jl
xchg
xlat
sub
inc
mov
mov
pushf
fidivrl
xlat
push
lret
loop
pop
push
sub
cs
pop
jle
xchg
lret
push
xchg
pop
in
iret
in
in
iret
in
fmuls
adc
lret
imul
ret
jge
jl
lods
lret
insb
push
iret
jnp
mov
xchg
mov
cld
inc
ds
cmp
and
mov
inc
sti
inc
or
fldl
in
int3
out
lock
cmp
daa
sbb
jno
lock
gs
fldt
imul
stos
add
loop
lods
fistps
fldt
fstpt
sub
cmp
mov
scas
adc
ret
out
jp
add
stos
fldt
les
mov
nop
in
mov
fistpl
lock
push
out
jecxz
loopne
loop
rcr
push
xchg
out
int3
push
imul
ds
inc
dec
fwait
inc
add
stos
adc
mov
add
nop
aad
dec
xchg
cltd
xor
addb
jp
sti
xchg
jmp
push
ds
loope
ss
push
negl
into
gs
cmp
addr16
les
in
lds
in
lret
stos
cmpb
lret
fimull
sarl
in
dec
iret
pop
add
xchg
xor
jae
lret
fldcw
and
aas
mov
ljmp
xchg
into
push
add
fwait
loop
dec
rorl
xchg
inc
cmp
popa
jecxz
pop
push
loope
jecxz
push
xchg
or
inc
mov
cmp
push
sub
fpatan
mov
xor
push
orl
mov
lock
dec
ficomps
pop
fsubs
fnstsw
xchg
sbb
xchg
lea
jmp
push
sbb
arpl
inc
pop
cmpsl
and
fldcw
push
inc
lea
fildll
sarl
rol
lea
iret
jmp
fisubrl
xchg
in
fisttps
xor
mov
sbb
sub
mov
notb
orb
shl
cld
fbld
add
mov
enter
inc
xor
mov
stc
adc
cmp
out
notl
loop
cmc
out
ret
test
push
xchg
faddl
sub
cmp
cmpl
dec
push
push
lret
xor
fistpl
fcmovnb
aad
test
out
in
push
mov
jb
mov
pop
fcmovnbe
mov
pop
ja
imul
xchg
rcr
lret
ljmp
jno
pop
jmp
mov
sub
jge
push
aad
mov
dec
leave
les
lret
roll
mov
jo
fistpl
jp
sub
xor
out
roll
lret
stos
cld
jmp
push
mov
pop
les
inc
rcr
sti
dec
inc
scas
leave
add
inc
adc
mov
inc
out
mov
inc
cli
std
cmp
jae
xchg
mov
jmp
xchg
and
mov
ljmp
and
stc
popf
jo
ljmp
stos
mov
cmp
fisttpl
lcall
in
fadds
sub
add
cmpsl
adc
mov
xchg
inc
sbbl
rorl
shrl
shr
dec
les
int
imul
int3
or
int
sub
xlat
fwait
lcall
outsl
imul
ret
es
lret
xlat
dec
cli
ret
xchg
in
popa
iret
push
lret
push
xlat
push
rcr
adc
sub
fdiv
dec
push
sub
push
xlat
pop
sub
pop
mov
adc
cmp
inc
das
lret
xlat
test
jecxz
mov
cli
addl
fucomp
dec
and
xor
add
fsubrl
fldt
cmp
or
pop
rolb
cmp
lods
inc
inc
or
dec
jp
rcr
clc
imul
sbb
jmp
sub
jge
in
fisttpll
popa
loope
sub
stos
mov
pop
or
xor
insl
or
imull
scas
int3
fwait
mov
stos
push
in
adc
ffree
imul
hlt
ss
mov
in
or
insl
fcmovb
inc
jne
daa
stos
test
inc
das
sbb
cmpsb
sbb
aas
stos
daa
mov
pop
int
and
push
ljmp
dec
inc
cmpsb
test
movsb
jg
inc
sub
add
je
lea
mov
scas
daa
cmp
xchg
ljmp
clc
rclb
pop
push
test
pop
or
jnp
jnp
xchg
mov
jmp
fisubrl
ljmp
nop
cmpsl
xor
push
push
daa
cld
xchg
jb
inc
mov
cmpsl
push
mov
cmp
add
cmp
mov
mov
push
jcxz
mov
leave
jge
cmp
fwait
sbbb
mov
cli
fcmovnu
mov
inc
xchg
lea
cmpsb
stc
in
sbb
push
inc
xor
roll
xorl
inc
add
jo
or
jge
fimull
mov
xchg
mov
jp
pop
flds
and
inc
jg
pop
sub
lea
mov
fadd
cmp
add
jmp
jl
pop
out
stc
push
jnp
shl
xchg
cli
dec
dec
fwait
stos
filds
mov
xlat
cltd
cmp
fcomi
dec
fisubrl
dec
pop
shr
jbe
jp
dec
out
fwait
sbb
xorl
mov
inc
mov
lea
or
fmul
pop
jnp
mov
aad
xchg
fstpt
and
jmp
ljmp
pop
in
jnp
jecxz
push
out
arpl
fwait
jmp
xchg
mov
cmpsl
pop
push
loope
jecxz
jecxz
out
add
xchg
in
xlat
fldln2
adc
ss
js
ds
push
and
test
sbb
cmp
mov
scas
ss
and
in
sti
aaa
in
xchg
ss
jp
push
hlt
pop
imul
ret
mov
in
lahf
repz
xchg
lea
cmpsl
sbb
popf
pop
lret
push
fstp
mov
or
mov
cld
inc
sbb
jecxz
ljmp
test
mov
jbe
rcl
pop
cmp
push
dec
mov
lea
fwait
dec
cltd
dec
push
inc
xchg
fld
pop
and
in
sub
mov
int3
cmp
xor
inc
cmp
and
lea
add
xchg
in
pop
loop
mov
sbb
pushf
sbb
inc
cltd
mov
sbb
jge
lret
xchg
loop
sub
fwait
cmp
pop
lods
push
sbb
fisttpl
mov
pop
inc
fildll
fistpll
fldt
ret
lea
cli
jmp
insb
sti
fimull
inc
dec
xchg
cmpsl
jmp
pop
int
bound
inc
daa
test
testb
lods
push
push
fwait
or
fcoml
stos
lahf
stos
mov
int3
jecxz
scas
aaa
adc
loop
fwait
lea
jmp
pop
aam
pop
imul
xor
and
loop
rorl
sbb
ljmp
pop
ds
ds
mov
filds
fwait
sti
sub
lret
daa
mov
ret
xchg
filds
stos
fdivrl
pop
ljmp
aam
lock
inc
in
mov
and
xchg
in
repnz
inc
mov
fwait
mov
out
mov
ret
jecxz
fbld
in
push
jecxz,pt
js
add
mov
int3
icebp
pusha
aad
mov
xchg
cmp
aad
enter
sahf
xchg
test
mov
xchg
cld
repz
cs
mov
adc
xchg
popf
pop
xchg
inc
das
mov
fsubl
mov
cmp
mov
scas
sti
sbb
aas
cmpsl
in
dec
ret
push
mov
jecxz
out
addb
cs
fildl
nop
xor
sbb
push
pop
xchg
in
les
mov
jecxz
mov
fistps
jae
js
jecxz
fildl
lret
xchg
test
inc
lcall
jmp
push
fwait
push
ljmp
or
xor
push
mov
mov
xchg
bound
ror
cmpsb
std
ds
fisttpll
cli
in
out
lret
in
iret
mov
inc
mov
int
xchg
cld
jmp
fnsave
dec
addl
ficoml
mov
jae
push
inc
mov
fdiv
out
xchg
lock
push
pop
or
push
mov
jle
out
andl
outsl
in
push
xchg
mov
adc
pop
xchg
in
add
frstor
pop
pop
in
outsl
xchg
aas
mov
jg
repz
mov
sbb
fdivl
insl
sub
leave
fwait
xchg
lahf
inc
inc
dec
fmull
out
xorl
cli
jl
pop
fldl
jp
push
inc
xor
dec
cwtl
out
fsubrl
pop
add
daa
xchg
inc
shlb
push
dec
loop
jle
sahf
out
xchg
in
scas
ds
es
jnp
mov
mov
testl
jb
push
inc
mov
fcoml
cmp
inc
inc
xchg
out
cmp
pop
pop
sahf
in
xchg
xchg
movntq
sbbl
in
lahf
xchg
sti
ret
ficompl
or
out
adcl
in
stos
xor
fsubp
andl
pop
in
imul
out
mov
or
in
mov
xchg
lret
out
test
push
pop
fstl
fdivl
inc
andl
loop,pn
adc
scas
fmull
pop
pop
in
outsl
xchg
inc
cmpsl
jg
mul
xlat
xchg
call
in
xchg
aaa
out
subl
in
mov
mov
push
out
orl
in
mov
fsubrl
out
andl
in
jg
filds
inc
xchg
in
ret
push
pop
push
inc
xchg
sub
jnp
inc
pop
cmpsl
in
fwait
xchg
inc
mov
addb
daa
out
and
loop
jp
mov
mov
jmp
lahf
repnz
aas
popf
repz
clc
pushf
in
fisttpll
dec
inc
jae
fdivl
out
andl
es
int3
out
xchg
dec
xchg
inc
aaa
into
fsubr
out
sbbl
fidivl
imul
sbb
fsubrl
xchg
adcl
addr16
dec
xchg
mov
push
jg
in
cmp
fstpt
jno
ljmp
inc
mov
or
sub
or
fdiv
out
add
push
cli
fildl
in
pop
xchg
sahf
sbb
out
xorl
adc
outsl
xchg
inc
cmpsl
faddl
jmp
loopne
or
scas
fsubrl
pop
ljmp
outsl
fcompl
mov
in
shr
fiadds
faddl
cmpsb
cmpl
in
xchg
inc
pop
jae
push
out
cmpl
in
jmp
in
jb
push
adc
jge
cmp
ret
xchg
ret
dec
pop
dec
in
jb
push
inc
push
fisttpl
jecxz
xchg
cmpsl
subl
in
sub
fcoml
outsb
adcl
cs
pushf
in
filds
fdivl
sub
xchg
xchg
es
jmp
movl
mov
stos
out
andl
mov
into
fsubrl
out
subl
in
mov
xchg
inc
out
int
mov
ljmp
int
leave
pop
and
jmp
in
inc
xlat
shrl
std
mov
jle
ficomps
repz
inc
jge
imul
inc
adc
jb
rcr
xlat
or
pusha
sar
adcl
mov
mov
jge
mov
fcmovu
xor
xor
cs
xor
popf
fildl
fmul
out
add
mov
inc
fucom
fmull
pop
mov
addl
fwait
out
adcl
xchg
inc
xchg
fsubrl
pop
test
inc
lahf
mov
xorl
or
in
lock
xchg
in
mov
pop
fcompl
sbbl
in
push
xchg
push
push
insb
out
subl
in
xchg
pusha
jp
jl
jbe
js
jb
je
outsb
inc
jo
fmull
push
orl
add
add
incl
sbb
sbb
push
sbbl
cmp
ret
pop
in
in
xchg
inc
out
cmp
adc
lret
inc
repnz
out
cmpl
in
and
fistl
out
xchg
addl
paddsb
xchg
inc
loop
fmull
pop
push
mov
out
fsubrl
pop
jno
adc
call
xorl
incl
xor
fisttpl
std
out
cmpl
pop
inc
adc
fsub
out
sbbl
add
iret
dec
push
sbb
out
andl
in
and
test
movsb
out
sbbl
in
xor
shrl
cmc
inc
stos
lahf
fisttpll
sub
popl
adc
and
int
sbb
movhps
test
push
and
iret
lods
add
add
sbb
add
fwait
adc
sub
pop
adc
xor
push
and
cmp
cmp
mov
imul
or
sub
rol
adc
scas
sub
or
daa
xchg
adc
fwait
or
pop
sub
fbld
mov
sub
fwait
add
cmp
push
mov
cld
aas
sbb
xor
dec
jmp
push
insl
fisttps
and
push
mov
adc
sbb
dec
and
push
lret
pop
push
inc
popf
cmp
push
xor
sbb
imul
and
xor
xchg
rorl
cmp
stos
add
ljmp
adc
jge
ret
in
lods
xlat
pop
sub
shl
aad
add
mull
shll
adc
jle
mov
aas
push
mul
loope
or
xchg
xor
sub
sbb
and
aad
aaa
arpl
daa
inc
dec
sub
or
pop
dec
int
dec
cmp
insl
clc
test
shl
pop
stos
sub
ret
sarb
sub
or
mov
insl
inc
fcoms
imul
inc
push
sbb
arpl
popa
jo
cwtl
jmp
std
sar
inc
and
dec
aam
fwait
imul
lahf
dec
outsl
lret
insl
aas
into
xchg
mov
ja
adc
mov
outsl
aam
cmpl
in
cld
adc
std
inc
mov
aas
mov
sub
in
ss
aad
data16
xchg
xor
inc
sbb
ljmp
xor
insb
in
mov
push
cmp
ljmp
pop
iret
pop
fwait
dec
mov
adc
xchg
adc
repnz
int
add
mov
sti
iret
and
cmpsb
cmp
lock
inc
dec
push
orb
xchg
dec
xor
insb
or
mov
mov
mov
sti
dec
cmp
xchg
insl
jle
push
std
mov
lahf
or
xchg
xchg
loope
inc
cmc
stos
dec
unpckhps
inc
jle
in
pushf
dec
aaa
push
ret
mov
mull
inc
mov
jge
imul
mov
outsb
fucomp
insl
jmp
addr16
add
test
lds
rcr
movsb
in
dec
int
in
dec
popf
mov
test
sbb
jmp
int
inc
jcxz
imul
es
ljmp
mov
dec
int
cmc
mov
jno
sbb
xchg
ljmp
mov
lock
sti
mov
pop
imul
inc
test
adc
cmc
pop
arpl
pop
lret
push
popf
jb
ljmp
shlb
add
mov
movsl
add
nop
push
lahf
xor
or
test
mov
push
movsb
push
test
mov
push
pop
xorb
mov
scas
fisttpl
lret
mov
push
stos
dec
push
or
movsb
dec
push
rorl
dec
lods
or
push
insl
sub
std
mov
dec
lahf
mov
lea
ret
or
pop
push
pop
ljmp
fstpl
cld
in
sahf
in
stos
ljmp
push
add
xchg
dec
lea
fmull
inc
add
fisttpll
imul
pop
and
stos
incb
push
roll
mov
mov
xor
inc
int
xchg
pushf
lds
xor
dec
aas
mov
dec
inc
ja
ret
sbb
test
jo
stos
test
adc
inc
mov
mov
mov
mov
cmp
inc
movsl
stos
aad
mov
xor
xor
aaa
inc
push
dec
cmp
xor
add
or
adc
and
xor
jo
xchg
test
and
jp
scas
stos
mov
or
dec
cmp
jmp
and
or
cmpsl
data16
dec
dec
int
insb
aad
mov
or
mov
mov
inc
pop
imul
mov
iret
pop
mov
or
mov
push
mov
fsubrl
aam
imul
aaa
aaa
arpl
sbb
loop
cmp
stc
xchg
xchg
and
ficoms
lcall
push
mov
gs
iret
int
adc
pmovmskb
outsl
out
dec
test
fstpl
mov
in
adc
mov
dec
cmp
xchg
jle
or
add
stos
mov
frstor
cmp
mov
dec
sbb
enter
out
jecxz
adc
ljmp
lret
push
jecxz
inc
cmp
sub
mov
int
and
sbb
addr16
adc
imul
fwait
jne
jecxz
addr16
and
mov
push
rclb
addr16
lret
mov
mov
es
add
lahf
rorb
pop
push
loopne
add
mov
aaa
loope
pop
jb
int
mov
imul
shr
fistl
sub
imul
stos
mov
inc
and
cmc
jmp
push
sub
sbb
shlb
sbb
mov
mov
dec
sbb
fsubrl
and
mov
lret
test
mov
dec
mov
lret
pop
cmp
negl
sub
jecxz
xchg
xor
test
sub
push
push
hlt
sub
inc
sbb
push
mov
inc
imul
push
movb
adc
mov
fucom
nop
mov
mov
sbb
es
or
push
scas
das
fsubrl
pop
dec
popf
mov
sbb
outsl
xor
insb
in
push
jecxz
int
fimuls
into
test
dec
jecxz
scas
inc
jecxz
xor
jecxz
fldcw
xlat
xchg
mov
out
pop
mov
in
jecxz
jl
outsl
sub
pushf
pop
sbb
pushf
loopne,pt
jbe
adc
jecxz
or
pop
in
outsl
inc
jmp
xchg
pop
mov
pop
stos
mov
mov
and
outsb
out
dec
adc
fldt
ljmp
mov
imul
push
sub
stos
fldl
and
pop
inc
dec
aas
popl
dec
dec
sub
lods
pusha
test
mov
cwtl
inc
stos
xlat
mov
mov
mov
jmp
mov
mov
aas
inc
mov
addr16
aas
add
cmp
aas
xor
jbe
fcmovnu
in
xor
shll
sarb
dec
or
iret
stos
sahf
sub
mov
xchg
mov
xchg
movsb
pop
push
xor
xchg
push
push
lods
xlat
lret
mov
push
incb
dec
sub
frstor
and
mov
les
mov
sbb
fisubl
dec
fucomip
fsubl
int3
jb
sbb
rcrb
std
aad
movsb
mov
leave
add
imul
clc
repz
mov
shrl
mov
mov
in
cmp
fiaddl
inc
mov
cltd
add
out
push
mov
movsl
leave
fs
mov
jle
ret
xchg
inc
and
in
dec
dec
popl
lds
mov
pop
jecxz
mov
and
mov
and
mov
xchg
cmp
mov
clc
dec
mov
or
push
lods
je
mov
cmpsl
lret
pop
nop
mov
frstor
pusha
aaa
scas
xchg
or
lahf
cs
inc
aas
dec
and
and
dec
inc
sti
stos
leave
movsb
jp
roll
push
mov
cltd
sub
mov
ss
mov
dec
mov
mov
pusha
icebp
mov
inc
dec
push
mov
inc
sbbl
and
ljmp
cmpl
call
mov
dec
mov
mov
arpl
sbb
adc
lods
inc
or
insb
cmovo
cmp
add
lcall
imul
aad
xlat
imul
mov
xchg
shr
jb
shl
in
and
cld
jecxz
clc
fnsave
jo
pushf
arpl
jmp
cmp
mov
mov
repnz
jmp
sub
jmp
sbb
xlat
sub
inc
jecxz
int
mov
mov
mov
stos
cmp
ljmp
jmp
push
into
ljmp
pop
aaa
leave
ficoms
mov
daa
jmp
imul
pop
imul
pop
dec
xchg
jnp
ret
loope
rcrl
dec
int
gs
jnp
pop
jb
aam
inc
pop
int
lret
insl
lods
aad
int
lret
mov
popa
fwait
pop
dec
rorb
je
adc
mov
cltd
int
imul
lret
aad
iret
xlat
add
xor
lret
scas
int
or
jmp
xchg
lods
test
lret
enter
lods
cmp
lret
out
pop
xchg
in
jo
lret
in
fcomp
jl
mov
lret
push
out
push
add
inc
mov
push
xor
lret
mov
inc
jbe
lret
push
fisubrl
outsl
pop
jl
lret
insl
daa
xchg
or
and
lret
insb
mov
xor
rcll
in
inc
add
cld
add
or
test
sbb
sbb
jne
cltd
sahf
pop
xor
lret
sbb
adc
xor
gs
mov
int
jmp
inc
mov
sub
sbb
cwtl
pop
jecxz
lcall
push
lret
add
aad
out
sbb
adc
mov
lret
inc
sahf
sbb
popf
add
lret
insb
cs
xchg
push
xchg
mov
add
xchg
cmpsb
pop
pushf
int
cltd
xor
stos
cmp
sti
push
lret
xorl
or
outsb
push
data16
cltd
shrb
sub
inc
cmp
int
pop
outsl
mulb
add
push
sarl
or
aaa
xchg
arpl
xor
jmp
sbb
cmp
jp
inc
pop
lret
mov
loopne
jle
jbe
lret
ds
mov
lret
or
xchg
mov
int
mov
addb
addr16
cmc
enter
lret
push
in
std
jle
mov
jg
fidivs
popa
dec
and
orl
pop
xor
lcall
int
jp
xchg
sub
push
lret
out
dec
fwait
adc
cmp
psllw
push
jecxz
js
and
sbb
add
jge
mov
fldenv
xchg
mov
jno
jns
ror
stc
mov
lods
sub
lret
pop
decl
pop
or
pop
lret
fwait
mov
jne
jno
lret
xchg
adc
sbbb
mov
ljmp
jns
rclb
jecxz
push
lret
mov
adc
test
add
mov
es
addl
test
ds
or
push
shrl
out
cmp
push
shrb
or
lret
mov
test
loop
mov
leave
and
repz
xor
subb
lret
mov
lds
mov
sub
lret
pop
lds
dec
repz
rol
lret
jge
lahf
dec
imul
in
lret
inc
sbb
pop
mov
ds
stc
inc
xchg
add
fidivrl
add
rorl
in
fwait
add
inc
test
mov
jne
dec
ljmp
adc
push
lret
dec
loop
cmp
mov
lret
pop
mov
add
dec
pushl
cmp
out
cld
xchg
and
or
and
push
lret
adc
adc
arpl
xchg
movsb
lret
call
pop
pop
leave
lret
lret
frstpm(287
inc
jmp
mov
repnz
mov
or
imul
xorl
sbb
mov
in
lret
push
dec
adc
das
aas
pop
fidivrl
mov
lret
and
mov
lret
ret
adc
orb
lret
adc
cmpsb
lods
lods
sub
dec
movsb
repnz
outsb
fildl
inc
test
dec
jno
inc
sub
jo
lahf
jne
lret
pop
std
or
inc
lret
push
popf
sbb
lret
pop
iret
or
mov
cmp
outsb
xchg
sub
shrl
rcrl
pop
in
lret
mov
incb
adc
pop
pop
pop
add
nop
and
mov
repz
insb
xor
decl
mov
cwtl
mov
dec
bound
xor
adc
mov
cmpsb
mov
pop
or
jge
stc
arpl
paddusw
add
inc
and
adc
dec
lret
mov
push
roll
mov
and
xor
add
sub
in
imull
sub
dec
jae
fucomp
scas
and
dec
ja
mov
xlat
leave
and
lcall
stc
out
ror
and
push
int
mov
js
fiaddl
lret
sub
add
push
xlat
mov
ror
dec
fwait
aas
imulb
adc
pop
push
jne
fildll
int3
test
or
stos
sub
lds
lret
mov
fmul
out
lods
test
jns
cmp
jno
pop
cli
test
movsb
lret
les
lret
adc
or
push
dec
jne
lret
imul
xchg
push
sub
lret
movsb
mov
inc
cld
lret
clc
mov
repnz
in
out
orl
ss
jo
movsb
jae
push
ds
paddsb
icebp
or
notb
ror
fldenv
adc
mov
push
loopne,pn
ds
out
mov
pop
dec
ss
lret
outsb
lcall
lret
mov
jl
ds
ret
adc
inc
and
bound
repz
int
dec
xor
scas
sub
and
scas
fists
out
ret
inc
inc
sar
das
fwait
cs
popf
add
sti
adc
dec
imul
or
sub
pop
iret
adc
movsl
scas
inc
add
lret
push
out
sbb
int
pop
lret
in
push
xor
sub
js
clc
mov
pop
arpl
mov
dec
fmull
shrl
lret
mov
gs
push
mov
loopne
lret
fs
push
lret
adc
lcall
mov
push
rcl
sbb
xor
call
pop
pop
lds
lock
in
cmp
lret
repnz
mov
lret
sbb
mov
mov
lret
out
mov
jmp
xchg
mov
test
lret
inc
xor
scas
ror
inc
stos
pop
sub
mov
jo
mov
push
xchg
jnp
push
xchg
add
inc
xor
lret
shll
outsl
push
fmuls
lret
xlat
mov
cld
arpl
sub
inc
xor
push
cli
pop
and
mov
cmp
cmc
or
sub
lret
popf
mov
lret
xchg
loop
adc
addr16
mov
lret
jg
jge
popa
inc
decl
fadds
pop
mov
insl
mov
outsl
cmp
xor
cmp
cltd
ljmp
push
ficoml
fstps
out
out
clc
cltd
das
decl
lcall
and
xchg
ret
push
nop
fwait
dec
pop
stc
insb
lret
cld
stos
fucomp
dec
jmp
inc
xlat
cltd
aam
mov
add
sub
in
xchg
pushf
adc
pop
lret
je
call
outsb
lret
jecxz
fs
testl
and
iret
scas
inc
jge
outsb
out
jg
ffreep
nop
xchg
int3
mov
fidivrs
jo
fnstsw
sub
lea
xchg
push
adcl
rcll
jno
jb
jecxz
les
lret
sub
cwtl
movsl
test
lret
sub
call
or
int
ror
lock
or
jle
test
hlt
sub
dec
aad
and
mov
ror
loop
cmpsb
jl
mov
faddp
jae
ljmp
jp
stos
arpl
mov
add
xor
jno
xchg
lock
in
push
or
mov
fwait
or
xor
cwtl
sbb
icebp
shrl
int3
lret
mov
sbb
rcl
dec
sub
jbe
test
loopne
js
mov
decl
sbb
add
les
push
pop
xchg
lret
ljmp
popf
lret
repnz
imul
lods
and
pop
mov
dec
cli
jns
out
std
dec
rcrb
push
mov
lret
js
push
scas
pop
xor
movsb
lret
daa
adc
dec
add
mov
popf
cmp
adc
stos
inc
repz
and
sub
pop
push
or
stc
xchg
lret
sahf
movsb
outsb
xchg
push
or
pop
addr16
cmpsb
rorb
gs
dec
inc
lret
stos
imul
xchg
das
jns
sahf
rcl
into
cli
imul
jle
push
inc
xchg
lret
jg
mov
push
cmpsb
add
lret
loope
xor
outsb
push
or
fwait
in
and
mov
mov
ja
add
xor
in
out
jae
mov
stos
sti
push
inc
add
xchg
into
sbb
js
ljmp
rcll
lret
das
mov
push
lret
jne
add
adc
test
jnp
xor
xor
dec
cmp
in
or
jg
jle
aad
jo
popa
sbb
inc
lret
xor
xchg
pushf
data16
ret
adc
xor
stos
adc
ja
or
lahf
outsl
lret
es
jecxz
scas
mov
pop
lods
ret
lret
les
xchg
cmpsb
mov
test
and
icebp
xor
loopne
aas
dec
lods
xor
mov
out
hlt
pop
movsl
lret
jnp
popf
adc
js
ficompl
xchg
or
fadds
out
test
cmp
pop
hlt
cmp
lret
jae
pop
arpl
adc
ljmp
lret
xchg
jns
sahf
out
mov
int
pop
loop
dec
cld
inc
icebp
inc
jg
sti
ja
xor
xor
out
or
jnp
testb
movsl
lds
mov
mov
push
dec
sbb
xor
inc
jns
clc
mov
jnp
shlb
push
imul
lret
mov
add
mov
ljmp
pop
sub
lret
push
mov
adc
mov
add
cs
int3
sub
test
lret
inc
xchg
sub
inc
js
lret
repz
test
push
inc
xlat
mov
mov
call
out
paddsw
lret
rclb
push
adc
mov
sub
pop
adc
rorl
addr16
add
test
mov
cmp
lret
adc
ror
adcb
stc
lret
push
fs
out
and
jmp
dec
lret
adc
mov
lret
ficomps
xlat
arpl
jl
lret
lret
int
add
add
sub
inc
repnz
push
int
fst
out
jne
inc
jp
mov
das
mov
dec
sub
pop
lea
pop
lcall
add
mov
jno
ljmp
mov
lcall
loop
fistpll
mov
ret
lret
fwait
xor
mov
lret
inc
push
cmp
nop
data16
lret
xchg
and
or
lret
add
ficoms
loopne
lret
dec
mov
adc
icebp
loop
pop
mov
dec
adc
inc
loope
push
fnstsw
sub
mov
mov
lods
dec
lret
mov
xor
or
and
ja
mov
fisttpl
pop
jecxz
add
lret
add
out
adc
je
stos
sub
aaa
call
arpl
das
cmp
jmp
fstl
sarl
xchg
out
in
les
cmp
xchg
sub
adc
stos
ret
pusha
inc
mov
mov
cmp
iret
inc
lods
xchg
xchg
repz
xchg
mov
ljmp
lds
into
mov
jo
push
imul
push
sbb
jns
xchg
imul
jecxz
lods
lret
jmp
aas
js
das
mov
fwait
mov
cmp
cwtl
dec
or
xlat
pop
mov
lret
and
and
pop
in
fsubrs
lret
mov
ds
push
and
push
dec
sti
ret
fdivrs
mov
insl
lret
outsb
lret
fadd
test
cmc
pushf
aad
lret
push
fisubs
bswap
das
lock
xchg
sbb
cltd
sbbl
adc
outsl
lret
cmpsb
or
arpl
lds
repnz
cmpsl
aaa
push
inc
adcl
jl
jnp
inc
mov
rcrl
fisubs
mov
lret
cld
mov
push
jmp
mov
lret
aam
sti
adc
ja
lds
or
fwait
mov
ds
mov
mov
dec
cmp
xchg
cmc
loopne
fimull
jb
add
data16
xor
lret
mov
lret
loopne
in
addl
std
stos
pop
dec
mov
or
in
mov
in
mov
cmp
push
pop
mov
lret
sbb
jne
adc
clc
cs
xchg
dec
int3
pop
in
sbb
lret
and
loop
adc
xor
lret
sub
jmp
mov
and
call
ror
or
jb
lret
test
mov
cld
lret
xchg
dec
push
fisubrs
movsb
add
add
fs
es
inc
leave
jbe
jne
gs
or
jo
fcompl
nop
mov
ficoml
lahf
lret
loope
bound
push
cmp
fisubs
push
lods
sbb
push
mov
add
mov
pop
and
pop
stos
nop
lret
sub
scas
sub
sbb
and
add
rcr
enter
jnp
inc
push
outsl
lret
mov
or
stc
dec
sub
lret
lahf
cmpsl
adc
sub
test
imul
jo
leave
mov
pop
lret
inc
lret
inc
push
or
movsb
daa
pop
call
mov
jae
mov
pusha
or
iret
pop
sbb
xor
jbe
dec
sub
pop
jae
test
adc
arpl
in
dec
shll
adc
xchg
inc
stc
and
iret
xor
dec
pop
in
jmp
pushf
mov
or
dec
shll
stos
imul
ja
lods
or
pop
dec
lock
xor
sub
mov
add
push
mov
sbb
cmc
sbb
leave
xorb
hlt
cmp
and
ret
jmp
lret
jbe
popa
pop
or
mov
lret
out
jnp
cwtl
or
mov
pop
push
jb
imul
xlat
sub
int
imul
daa
adc
repnz
scas
lret
das
push
shll
lret
outsl
movsl
test
lret
adc
sub
adc
lret
mov
mov
cld
les
lock
pop
inc
cmp
sbb
sti
in
fistpl
roll
cmp
rclb
pop
clc
lret
cltd
inc
jo
push
jnp
mov
add
jbe
in
leave
jge
lret
out
call
test
cmp
xchg
mov
add
das
inc
xor
cmp
rorb
sub
xchg
adc
idivl
jge
iret
push
arpl
fs
test
ds
sti
jecxz
sbb
fsubrs
lret
xchg
pop
xchg
sarb
test
std
in
lret
je
push
shl
cmp
enter
dec
nop
mov
fs
mov
test
mov
out
pop
xor
enter
push
jbe
jb
lret
mov
sbb
lcall
mov
leave
fisttpl
pop
cmp
mov
sbb
lods
mov
jp
test
leave
xchg
mov
lret
push
xor
lcall
enter
jmp
dec
inc
jns
lret
xchg
xor
imul
fisubs
adcl
push
xchg
fs
mov
mov
stos
mov
lds
mov
stc
mov
gs
pop
insl
jl
in
pushf
pop
lret
fistl
mov
lret
cmpb
popa
xchg
sbb
lds
and
ljmp
mov
test
stos
cmp
iret
mov
lret
stc
pop
iret
add
sbb
subb
lret
mov
in
inc
jnp
bound
pushf
inc
lret
push
dec
movsl
mov
icebp
pop
add
aas
call
lret
mov
imulb
popf
jl
neg
pop
out
xchg
lahf
dec
movl
xchg
cmp
jo
push
jb
push
sub
es
shr
fisttps
dec
ja
adc
leave
jno
cmp
mov
jle
icebp
stos
jp
int
jne
imul
dec
sbb
inc
movsb
js
bnd
enter
sub
and
std
jbe
sbb
jg
xchg
cwtl
cmp
cmp
sbb
mov
mov
insb
xor
ljmp
inc
add
lret
dec
jg
mov
popa
push
in
push
lret
das
repnz
orb
xchg
cmp
lret
dec
push
gs
arpl
pushf
unpcklps
mov
inc
pop
lret
mov
out
xor
insl
cmp
jmp
pop
mov
leave
popa
cld
ret
xchg
xor
shl
fistpl
lret
mov
cmovl
mov
ret
roll
stos
dec
mov
dec
cmp
lret
sbb
pop
imul
orl
lds
fsubl
sub
call
sub
xchg
clc
hlt
push
add
lea
shlb
out
lret
stos
push
ror
mov
xchg
xor
leave
xchg
pop
loop
lret
sbb
lret
pop
sub
xchg
or
in
cs
mov
shlb
cmc
pusha
adc
sarl
dec
xlat
sti
fsts
mov
ret
xor
dec
repz
lahf
sbb
pop
inc
mov
scas
push
push
orl
outsl
data16
sbb
pushf
sbb
pop
xor
lret
sbb
icebp
sahf
xor
mov
xor
int
adc
sub
loopne
pushf
lret
enter
pop
pop
lret
adcl
pop
pusha
fisubs
ror
subb
xchg
lret
sbb
mov
pop
mov
es
dec
and
lret
lcall
outsb
icebp
int3
jle
lret
dec
adc
loopne
mov
mov
scas
cmc
inc
dec
mov
sbb
push
push
push
inc
mov
cmc
and
enter
lret
jnp
jno
pop
adc
cs
js
add
and
loopne
xor
pop
icebp
adc
jge
je
ss
add
xlat
mov
sbb
icebp
aaa
frstor
dec
xor
in
mov
jecxz
stos
das
int
xor
adc
test
jl
jle
packuswb
cmp
roll
loope
stos
ret
xorl
lret
add
or
lea
mov
push
cmp
rcl
lret
jns
fiaddl
aas
sbb
add
push
cmp
fwait
pop
jmp
repnz
sub
sub
adc
jmp
mov
xor
lret
mov
pop
mov
les
pop
cs
loop
add
cli
leave
imul
cmp
int
sbb
cwtl
fidivrs
aas
repnz
pop
call
call
iret
mov
push
xorl
fimuls
xchg
js
adc
push
mov
cmpsl
and
stc
cli
inc
mov
dec
loope
pop
mov
cmp
pop
daa
push
ss
arpl
sbb
mov
js
jecxz
push
jp
fs
pop
xchg
xchg
pushf
cmpsl
adc
mov
xor
imul
push
test
es
fstl
xor
les
dec
fninit
lret
sub
out
lods
in
mov
iret
jo
js
and
sbb
jg
ret
lretw
nop
imul
inc
add
lods
aas
dec
rolb
lret
pop
das
push
dec
push
fdivrl
adc
cmc
or
popf
mov
repz
and
cs
inc
daa
mov
clc
jmp
pop
mov
adc
insb
push
pushl
sarb
inc
pop
sbb
lret
ja
jnp
adc
sbb
add
dec
dec
jns
push
int
fmulp
xor
mov
xchg
jne
pop
cmp
push
cmp
ror
or
xchg
pushl
jae
int
cmp
sub
lret
ds
fdivr
mov
cmc
ret
mov
scas
into
js
leave
nop
mov
cmp
les
cmpsb
lret
scas
stc
testl
iret
xor
aas
fxch
lret
fucomp
mov
shll
iret
adc
xor
dec
inc
rcll
push
pshufw
rol
leave
jl
lret
lret
xorb
dec
enter
or
loopne
aam
push
idivb
lret
xchg
arpl
stos
dec
mov
dec
lret
faddl
in
mov
add
mov
leave
roll
repz
and
jge
sarl
leave
mov
jmp
push
pop
mov
push
push
insb
mov
out
cwtl
and
lret
addr16
es
mov
xchg
and
pop
push
daa
repz
lret
mov
aad
iret
xchg
insl
push
leave
test
push
stos
mov
pop
clc
loop
jle
xchg
mov
cmpsl
xchg
js
ds
sbb
push
jno
jbe
daa
push
xor
lods
cmp
aad
std
mov
imul
stos
jae
int
aam
fimull
dec
sub
jmp
ljmp
pop
int
add
fmul
pop
push
dec
xchg
jg
data16
sub
rcrl
pcmpgtw
test
dec
mov
out
dec
aam
ret
insb
mov
int
repz
sahf
loopne
and
lret
ficoms
mov
mov
lret
inc
push
push
clc
jns
push
dec
adc
nop
dec
mov
inc
rol
gs
arpl
jns
faddl
adc
cli
adcb
movsl
inc
repz
add
push
cli
lretw
pop
mov
int3
push
imul
mov
inc
add
call
lret
pop
das
stos
xor
dec
cmc
sub
rorb
adc
adc
sarl
adc
leave
push
in
xchg
xchg
nop
in
test
lret
repnz
int
sbb
lret
pop
fimull
sub
and
sbb
or
mov
fs
mov
enter
xchg
dec
cli
and
lds
fiaddl
ror
out
popa
outsb
inc
sbb
pop
lret
in
add
jg
daa
jmp
lret
popf
out
pushf
mov
or
clc
int3
in
repnz
push
lret
lcall
mov
out
fsub
lret
jle
lahf
mov
lret
mov
in
pop
adc
xor
adc
loop
inc
and
pop
scas
push
inc
xchg
in
lret
or
orl
cli
out
hlt
cltd
sar
es
aam
and
and
add
dec
pop
pop
pop
fmul
mov
decl
lret
stos
dec
arpl
mov
ljmp
rcll
inc
popa
mov
push
lretw
ret
popf
test
fwait
aaa
dec
aam
add
fmull
lret
or
lods
stos
mov
lret
mov
mov
ficoms
stc
dec
test
xor
insb
sbb
in
call
sub
repnz
lret
push
mov
out
scas
lret
add
sahf
dec
and
xor
lret
add
dec
and
push
lret
popa
sub
jl
mov
mov
ds
adc
fldcw
shl
out
enter
sub
mov
lret
push
popf
dec
cmp
lret
les
add
in
cmp
jle
adc
movsl
cmpsl
pop
scas
cs
aaa
inc
pop
inc
sub
mov
xor
xchg
adc
push
and
mov
mov
dec
xchg
ljmp
sti
shll
xor
sub
xchg
jmp
lret
and
pusha
dec
cmp
push
lret
adc
scas
mov
int
int
dec
inc
jl
cmp
lret
leave
shll
inc
mov
adc
cmp
lret
out
mov
add
cmp
mov
cmpsb
outsl
mov
push
lret
xchg
icebp
imul
and
pusha
ljmp
lret
movsb
sbb
leave
fistpll
imul
in
dec
pop
lds
shll
add
adc
imul
mov
fcoml
and
add
and
les
xor
mov
lret
psubb
test
in
mov
lea
mov
add
sar
or
mov
test
inc
jno
or
ja
rclb
add
dec
jno
into
mov
in
adc
sti
lret
lods
jns
shl
add
lret
in
test
test
lret
dec
in
fisubs
mov
cmp
movsb
jo
sti
add
adc
mov
mov
xchg
add
test
lret
ds
in
xchg
les
jne
call
das
add
leave
xor
cmp
jp
mov
lea
jbe
stos
cltd
aad
jmp
test
fwait
lret
sbb
add
imul
xchg
sbb
push
lahf
sub
add
jp
xor
xor
mov
pop
jns
mulb
xchg
push
pushf
arpl
aam
loop
int
mov
in
xchg
lret
xor
cli
cmp
lock
sub
cwtl
push
rorb
xor
leave
push
pop
imul
je
lret
mov
add
push
sub
pmullw
repz
and
roll
cmp
pop
enter
sbb
aad
ret
push
aam
lret
or
inc
lret
inc
cmp
jle
mov
lret
dec
bound
std
loopne
lcall
jno
outsl
leave
test
ret
xchg
rcll
repz
push
inc
jne
nop
mov
mov
rcl
xchg
mov
xlat
movsb
sbb
mov
ffree
jae
mov
xchg
push
lret
stc
repz
and
mov
pop
pop
aaa
push
icebp
xor
push
std
rol
leave
adc
or
xor
stos
aas
add
jmp
sarl
jo
mov
fstpt
scas
leave
cmpsl
mov
adc
fs
cmc
mov
pop
leave
xchg
fstps
push
xchg
nop
stos
and
push
cmp
jp
inc
mov
inc
dec
push
xchg
pop
add
lret
lret
into
mov
popa
inc
sub
mov
lret
cli
sub
sub
dec
je
cli
dec
mov
int
mov
jbe
out
pop
mov
js
rcll
imul
inc
std
xchg
enter
push
and
gs
mov
cmp
jle
iret
dec
lret
ret
mov
lret
adc
xchg
mov
jae
lock
xor
loope
push
inc
in
ror
dec
shrb
pop
hlt
sarb
js
xchg
ljmp
addr16
imul
loop
pop
ret
and
mov
pop
subl
pop
arpl
mov
pop
and
inc
sub
or
jae
bound
mov
inc
xlat
data16
ret
jl
inc
jl
mov
cmpl
jo
lret
outsb
mov
lret
sbb
lret
or
jns
jle
movsb
add
movsl
bound
or
cmpsb
dec
repz
lret
pop
test
insl
jle
incl
outsb
shrl
rorl
insb
mov
add
lds
in
lods
int
aaa
add
mov
stos
lret
dec
pop
push
adc
push
mov
into
shr
xchg
mov
add
sub
pushf
int
pop
and
out
jno
cmp
inc
cmp
arpl
cmp
cli
xchg
out
jge
dec
lds
int3
cs
popa
test
cld
ljmp
mov
or
sub
addr16
pop
sbb
inc
lret
and
fnstsw
pusha
pop
pop
mov
cmp
jg
mov
mov
out
jmp
out
mov
les
dec
inc
loope
enter
dec
push
dec
dec
jnp
sub
bound
sub
push
jg
xchg
jle
jnp
lcall
in
mov
xor
jp
iret
lock
jmp
imul
push
jae
mov
pop
in
inc
daa
repz
dec
sti
dec
test
out
lret
or
or
cs
and
cmp
lret
dec
xchg
adc
fcmove
int3
pop
and
xor
ljmp
aaa
sahf
pop
lret
mov
popa
cwtl
filds
xchg
jbe
dec
ffreep
adc
lret
outsl
cs
xchg
dec
nop
mov
icebp
inc
loop
mov
inc
fndisi(8087
cltd
jmp
mov
in
lods
adc
pop
mov
popa
add
stos
movsb
fstl
or
xchg
or
sarb
push
fistpll
sub
out
lret
xor
lret
dec
jge
cltd
outsb
pop
movsb
fcmove
jno
rcrl
jg
sub
lcall
ja
or
je
cltd
imul
push
sub
arpl
lret
jae
dec
imul
dec
push
lret
out
mov
dec
test
lret
adc
cltd
movsb
pop
xor
mov
orb
sub
int
adc
or
int
mov
inc
lods
jb
push
lret
add
test
pop
sbb
sti
mov
aad
sub
es
test
xchg
adc
fmul
enter
jl
sbb
and
ror
dec
shrb
inc
lret
add
xor
fwait
lret
push
loope
scas
cmovnp
icebp
xor
fldl
movsl
mov
popf
lret
inc
sub
lret
inc
jp
pop
out
test
lret
sub
sahf
jae
clc
popa
or
lods
push
subb
mov
add
in
movsb
inc
roll
std
repnz
jmp
push
mov
ja
idivb
loope
lret
xchg
inc
xor
into
add
pop
mov
jae
popa
pop
pop
mov
inc
cmc
scas
out
std
xor
lret
cmp
test
pop
aam
lret
loopne
mov
sarl
test
ljmp
xchg
push
mov
ret
stc
dec
xor
mov
lret
scas
mov
and
adcb
aas
orl
jmp
push
in
sbb
xchg
ss
push
mov
rol
lcall
and
adc
imul
js
push
aaa
pop
add
dec
cmp
xchg
and
inc
or
inc
jle
adc
or
into
xor
ljmp
mov
fsubl
lret
sbb
lahf
or
and
lock
jno
inc
sub
adc
add
mov
lret
daa
dec
mov
cld
lret
data16
lret
inc
jmp
ret
aaa
mov
out
lds
int
inc
fs
add
cld
lret
mov
mov
in
dec
mov
dec
loopne
cmc
mov
lcall
xchg
repz
mov
scas
cmp
lret
xchg
fisttpl
mov
and
or
iret
jns
xor
arpl
pushf
loop
mov
lret
push
xor
push
stos
insl
das
scas
jl
sub
fwait
sbb
gs
push
addr16
stos
mov
mov
adc
cmp
stos
rcl
fsubrl
mov
jne
movsl
mov
lret
xlat
addr16
mov
lret
lahf
fwait
sbb
arpl
add
pop
mov
test
cmpb
sbb
xor
lret
mov
out
sub
loope
mov
push
lret
ret
inc
mull
mov
jbe
pusha
and
das
lods
and
add
cmpsl
lret
push
cmpl
mov
sbb
ljmp
jnp
lahf
fisttps
int
push
xchg
lods
ljmp
cmp
sub
dec
out
push
inc
mov
lret
mov
sbb
stos
cltd
push
and
outsb
arpl
inc
lods
sub
lret
xor
ljmp
mov
les
js
cmc
out
scas
lret
sbb
sub
fimull
popf
mov
pop
pop
rcll
lcall
shlb
je
or
and
loopne
inc
cmpsb
jno,pn
add
sub
lret
lods
cmp
repz
pop
sub
pop
dec
rcr
cmpsl
or
icebp
scas
mov
mov
inc
jae
dec
clc
cmc
xlat
in
add
and
prefetcht0
xor
sarb
mov
jge
aam
adc
aas
std
fs
fld
dec
pushf
mov
dec
push
fwait
lret
xor
sbb
sub
lret
jae
jp
mov
nop
xorl
lret
insl
inc
xlat
mov
dec
repz
jnp
shll
call
bound
cmc
jge
arpl
jne
rcll
in
lret
sub
out
imul
mov
cltd
lahf
cwtl
xlat
scas
lret
fwait
xor
in
lret
sub
and
and
or
jne
mov
and
xor
rcrl
rcll
sbb
adc
dec
push
xchg
inc
jmp
pop
nop
cmp
lret
and
rorl
pop
mov
sbb
jne
decl
inc
xchg
pop
dec
lret
jecxz
push
add
mov
jb
or
fld
scas
add
xor
sbb
fmulp
clc
daa
sbb
pop
dec
lret
dec
aaa
in
addb
push
mov
dec
jl
cmpl
lret
ret
xorb
add
jnp
aas
stos
or
sbb
mov
cmpsb
sbb
ss
mov
dec
xchg
lret
mov
imul
loopne
repz
sub
jne
js
jnp
jnp
rol
cmpl
inc
xor
xchg
lret
in
in
push
or
dec
jl
lds
lret
mov
leave
ljmp
add
hlt
scas
daa
movsb
lret
sti
push
test
cli
leave
xchg
push
bound
flds
negb
xor
sub
mov
xor
cmp
lods
mov
int
mov
into
mov
adc
mov
xor
iret
jg
fsubr
int
imul
ret
je
and
cwtl
pushf
rolb
lret
mov
cmc
addr16
push
cli
cmc
int
aam
ja
enter
data16
and
jns
push
lods
lret
adc
testl
dec
sub
movsb
jno
cmpsl
mov
cwtl
mov
xor
adc
lahf
imul
jmp
lock
inc
es
and
inc
xchg
cmp
cmc
lret
push
daa
cmpsl
insb
js
dec
xor
adc
movsb
dec
push
lret
rcr
ror
in
mov
mov
inc
iret
shrl
fdivs
inc
dec
cs
and
fiaddl
lea
pop
daa
test
mov
sbb
jge
and
in
dec
jae
lds
test
enter
inc
sbb
lods
dec
lret
rcrb
xorl
cli
outsb
xchg
repnz
jp
leave
scas
insb
arpl
xchg
sbb
or
popa
push
cmp
sub
data16
xchg
mov
mov
fnsave
in
sahf
lret
lods
push
sbbb
mov
cmp
mov
push
inc
outsb
test
lock
lahf
mov
lret
imul
pop
lret
cmp
or
fidivrl
push
in
lret
adc
fisubrs
fsub
test
testl
inc
hlt
mov
jl
int
jne
xchg
test
lret
push
lds
xchg
out
scas
loope
lret
mov
lret
andl
jg
mov
add
push
cs
and
js
lret
pop
fidivl
popf
mov
jnp
or
sub
shr
addr16
add
ljmp
das
pushf
cmp
lret
addb
lock
jnp
fcmove
popa
insl
iret
out
sub
lock
insb
mov
cwtl
ds
cmpsb
jnp
or
into
lret
fnstcw
lret
cmp
inc
iret
push
mov
fcmovne
in
cwtl
mov
fisubl
pop
bswap
aam
mov
push
sti
mov
and
cltd
xchg
cmpsl
push
lret
hlt
jne
popa
inc
shlb
mov
cmpl
loop
sbb
push
lret
lods
bound
push
pop
aaa
lret
call
mov
sti
dec
mov
sbb
jl
push
inc
mov
fmulp
and
add
leave
dec
outsl
fsubs
sbb
lret
push
adc
sti
lret
cmp
mov
cmp
nop
sbb
xor
push
lret
ret
std
stos
test
and
iret
lret
pop
sbb
add
pop
and
mov
mov
sahf
sub
lret
dec
pusha
or
lcall
mov
lret
cli
ss
scas
mov
idivl
ljmp
stos
enter
inc
test
mov
push
jnp
inc
inc
rorl
idivl
sahf
lret
subb
inc
lret
pop
pusha
in
or
mov
jle
sub
jp
xorb
roll
mov
int
pop
sub
cli
push
outsb
mov
xor
out
fxch
xor
push
xlat
add
xchg
cmp
test
cmp
int
lret
mov
lods
jb
pop
lret
push
sahf
cmc
repnz
dec
lret
aam
sub
ds
lret
arpl
popf
or
in
stos
lret
mov
sub
sbb
pop
xchg
roll
lret
fs
mov
fmulp
push
sub
push
pop
pop
xorl
jp
push
repz
cmp
cs
lret
out
ret
scas
aad
out
xchg
dec
push
fwait
mov
inc
scas
xor
cwtl
push
je
ss
inc
bswap
lock
insl
shll
xchg
cld
pop
mov
int
pop
fdivrl
call
int
test
cmpb
iret
jb
sbb
cmp
dec
xor
lret
fcoml
sahf
push
lret
mov
pop
nop
dec
je
and
jb
mov
ret
pop
dec
les
cld
sbb
je
leave
mov
cs
stos
loope
push
jnp
lret
divl
les
lret
int
out
sub
mov
push
mov
pushf
adc
xlat
iret
lretw
mov
mov
add
imul
and
jecxz
xchg
cmpsb
data16
lret
cltd
mov
push
fsubs
lret
inc
rorl
mov
sahf
lret
jmp
fldz
clc
js
fiaddl
rcrb
sub
adc
lret
int3
mov
jg
fstpt
inc
jge
jp
xor
mov
lret
adc
add
into
es
sub
mov
shl
dec
push
pop
xor
mov
jae
sar
mov
in
ljmp
test
or
adc
ljmp
enter
out
and
insb
sbb
ss
sar
ret
shr
xchg
sub
ja
repz
jne
scas
dec
nop
lods
xchg
mov
sbb
dec
mov
loop
pop
pop
pop
inc
mov
jnp
hlt
call
lret
mov
pop
loopne
icebp
pop
mov
lock
jbe
jmp
sub
and
xchg
xorb
int3
aad
lods
cmp
push
in
push
inc
fsts
mov
mov
jnp
out
sbb
test
push
sbb
dec
pop
dec
mov
lret
mov
sub
mov
repnz
movsb
pop
lods
test
fdivl
mov
jge
xor
jg
jmp
rcll
stos
mov
lret
jb
xor
pop
or
clc
lret
jo
xchg
movsl
jg
inc
insl
mov
call
or
les
inc
cmp
and
repnz
in
orb
movsl
xchg
int
popf
jp
xlat
lret
lods
addr16
mov
dec
ljmp
or
sar
adc
nop
insl
mov
inc
xchg
ds
mov
enter
add
data16
jo
pop
cmpsb
insb
adc
inc
lret
clc
push
int
dec
mov
xchg
push
pop
in
scas
cmp
and
roll
xor
pop
cld
inc
sbb
int
repz
jecxz
outsl
jb
pop
or
std
xchg
shlb
lret
mov
pop
imul
lret
mov
xor
lret
into
mov
out
movsb
dec
sbb
nop
gs
adc
jne
lret
xor
daa
push
xor
test
xor
sti
lret
or
mov
lret
xor
out
xchg
mov
or
push
dec
push
nop
test
lret
imul
insl
cli
icebp
enter
stc
lret
and
sub
rclb
xchg
xchg
cmpb
fld
arpl
inc
shll
in
mov
and
xchg
mov
and
push
js
outsl
lcall
sarl
lret
out
inc
mov
shrl
cmp
imul
jmp
or
movsb
mov
xchg
sti
pop
ljmp
xor
cli
loope
out
mov
sbb
scas
dec
js
pop
aas
lret
inc
cmp
mov
shr
pop
sbbl
inc
subl
dec
movsb
fmulp
mov
push
jle
add
subl
out
mov
dec
push
test
add
jne
pop
dec
scas
hlt
dec
or
jb
div
jge
add
and
mov
add
std
jns
popa
loop
jl
in
xor
inc
jmp
and
push
pop
cli
ret
mov
leave
pop
rcrb
mov
sbb
push
mov
cmc
add
push
lret
arpl
mov
lret
stc
fs
xchg
lret
rol
lea
mov
and
data16
rep
popl
lret
pop
add
inc
loop
lret
mov
xchg
inc
js
jae
mov
nop
and
lret
jge
jo
lock
orb
mov
cmp
mov
xor
out
lret
jmp
fwait
sub
jecxz
or
push
jbe
dec
lcall
push
dec
pop
or
cmpsb
xchg
lret
inc
push
jns
test
push
lret
mov
rorb
insl
xchg
ds
int
push
sbb
and
cmp
out
pusha
outsl
dec
and
sub
aad
or
pop
int
arpl
dec
lret
test
xchg
lea
lahf
mov
int3
sbb
mov
mov
in
lret
jae
cmp
je
dec
outsl
or
scas
test
xor
mov
es
xchg
mov
dec
rclb
lret
push
jmp
pop
add
dec
lret
push
inc
dec
sub
dec
xchg
adc
sub
xchg
mov
shrb
je
push
cmp
jp
aad
lret
xchg
xchg
rcl
pop
and
and
xchg
inc
jg
int3
add
mov
push
lret
lret
inc
test
mov
cmp
and
cmp
insl
int
xchg
push
test
ja
dec
popa
sub
call
loope
lret
lea
outsl
std
iret
pop
xchg
xor
xchg
pop
test
mov
pop
lret
sub
das
adc
adc
jno
push
lret
mov
je
mov
xor
aas
fidivl
repnz
int3
sbb
and
jp
loope
es
mov
aas
shll
add
xor
int3
movsl
lret
icebp
fsubl
jle
scas
lret
repnz
mov
add
mov
xchg
cmp
sbb
xchg
push
dec
xor
or
leave
pop
imul
pop
jb
aam
dec
mov
xor
cwtl
leave
fdivs
arpl
xor
and
xchg
leave
cmp
hlt
addr16
push
mov
paddd
out
jg
add
xlat
mov
ss
fidivs
sub
lea
jl
nop
cld
aas
lret
and
scas
sub
mov
jo
sub
push
rol
loop
xlat
dec
xchg
out
ret
pop
add
inc
dec
mov
push
adc
pop
dec
aaa
inc
lret
lss
adc
mov
mov
inc
imulb
dec
pop
mov
lret
xchg
pop
clc
pushf
push
or
add
imul
jae
lret
nop
or
fmulp
stos
push
cmp
ror
test
outsl
cs
lahf
int
aas
inc
pop
mov
mov
sub
leave
lods
sbb
xorl
daa
or
ret
or
movsb
sti
ja
push
cmp
jg
add
lret
mov
push
aad
inc
jp
xchg
hlt
es
or
pop
lret
and
fldenv
ror
jp
pop
repnz
out
aaa
adc
aas
stos
imul
lret
sub
sbb
mov
lret
cld
mov
mov
bswap
mov
hlt
lret
out
ret
addl
pop
out
jl
push
in
or
aaa
lret
cs
sti
les
scas
sub
repz
and
lret
jecxz
push
xchg
data16
filds
repnz
dec
std
jo
push
lret
arpl
cwtl
cmpsl
je
jnp
shll
loopne
leave
std
add
rcrb
loop
fcmovnu
xor
shll
cmp
sarb
push
xchg
cmpsb
and
insl
shl
pop
icebp
bound
test
leave
call
or
pop
add
in
cli
pop
mov
imul
iret
jl
jne
push
nop
dec
mov
xlat
inc
and
sbb
stos
mov
lret
jo
mul
nop
mov
mov
ss
test
lods
pop
aad
mov
aaa
cmc
repz
dec
loopne
mov
divl
lret
ficoml
cld
mov
sub
push
sbb
or
lret
bound
pop
jae
mov
aam
rol
cmpsl
xor
insb
dec
inc
lcall
outsb
stos
jne
icebp
lods
cmc
lret
dec
and
lret
into
insl
les
sub
lret
sub
mov
iret
leave
in
pop
out
ret
orl
gs
test
sub
xchg
jl
fnstsw
push
lret
popf
mov
out
or
and
cs
inc
xchg
adc
int
je
test
lods
lret
movsb
adc
lret
inc
jbe
jnp
enter
addr16
xor
jne
lret
add
xchg
cmp
and
or
push
inc
mov
lret
sub
dec
into
pop
mov
adc
inc
orb
loopne
outsb
fwait
or
or
mov
mov
push
aas
mov
add
inc
pop
jo
cli
cmp
pusha
and
leave
xchg
fdivrs
xchg
pop
int
scas
cs
adc
bound
lret
fcomps
inc
jns
lret
mov
inc
mov
fwait
lret
dec
jae
push
inc
cmp
fbstp
test
loopne
jl
leave
ret
dec
popa
fisubs
sbb
lret
shl
sub
xorl
ljmp
cmp
xchg
jp
dec
lcall
mov
xlat
adc
add
sub
shll
sbb
pushf
jmp
sti
cmpsl
cmp
push
lret
mov
loope
rcrl
inc
mov
and
xor
test
lret
shrb
inc
movsb
mov
lahf
lret
stos
out
insb
or
and
gs
add
xchg
pushf
jno
rcrb
sbb
jl
sahf
and
xor
mov
mov
pop
xchg
daa
jns
addr16
lret
sti
rol
nop
mov
jnp
sub
dec
sub
roll
mov
bound
les
xchg
stos
push
mov
hlt
lret
cmp
adc
dec
movzbl
clc
dec
mov
pop
and
lret
push
arpl
repnz
shrl
mov
mov
stos
addb
arpl
sub
lret
cmpsb
pusha
lahf
lcall
mov
push
daa
jl
lods
add
int3
insl
stos
pop
stos
mov
ds
pop
mov
lret
scas
in
jmp
filds
lret
dec
sub
and
jo
pop
mov
and
sub
aam
push
mov
add
lret
testb
rorb
ss
stos
cmp
mov
cmc
xchg
mov
jle
movsb
lret
sarl
mov
addr16
loop
pusha
push
out
scas
pop
cmp
and
shll
cmp
lret
pop
mov
mov
adc
mov
pusha
and
fstl
dec
lret
cld
mov
inc
adc
les
fwait
call
dec
into
mov
sbb
mov
lret
inc
jp
sahf
sub
imul
sbb
fwait
push
stos
lret
mov
gs
xchg
lret
or
mov
mov
arpl
adc
mov
lret
mov
call
dec
mov
scas
ror
xor
imul
ret
jnp
fstp
pop
push
adc
stos
test
je
out
inc
add
in
imul
cmpsl
sbb
pusha
ret
mov
mov
lock
in
mov
ljmp
mov
pop
jecxz
push
js
xlat
lretw
or
jbe
push
dec
mov
lock
aaa
or
sbb
push
movsl
adc
sbb
push
repz
push
jge
movsb
lret
cmpsl
push
and
mov
rorl
lea
inc
lods
adc
cmp
lret
xchg
into
lods
xchg
and
lret
push
xor
xor
pop
dec
cmp
xor
movsb
mov
mov
out
add
outsl
mov
push
lret
les
mov
lret
cmp
sbb
and
mov
lret
test
pop
mov
or
xchg
cmp
sub
iret
xchg
push
xlat
mov
adc
pop
push
stc
lret
leave
outsb
and
sarb
xchg
lret
add
and
out
scas
fildl
mov
ror
push
pop
add
iret
cmpl
and
js
sub
mov
ds
mov
fdiv
lret
dec
jmp
xchg
lods
mov
jg
enter
stos
outsl
lret
push
cmp
int3
mov
or
jmp
pop
loopne
repnz
sub
sub
mov
cmc
jle
push
mov
lret
push
and
inc
push
pop
rol
lret
xchg
lea
aaa
aas
stos
mov
ficoml
iret
notb
mov
mov
mov
xchg
orb
setae
and
mov
ds
jne
sbb
adc
cli
xchg
mov
test
push
into
sub
push
popa
or
adc
ljmp
testl
pop
lret
cld
sar
sub
cltd
sbb
lret
xor
adc
lock
lods
or
lahf
sbb
xor
das
mov
xchg
sub
gs
int3
test
inc
leave
movsb
adc
dec
pop
or
mov
data16
lret
dec
pminsw
pop
in
das
jge
mov
addl
bswap
es
mov
lret
data16
lahf
dec
or
shl
call
sbb
into
mov
in
push
inc
pop
mov
popf
lret
pop
test
int
lret
addr16
imul
push
popa
std
outsl
lea
pop
mov
pop
sbb
pop
call
aad
dec
icebp
sbb
xor
cmc
mov
pop
int
push
pop
cmp
stos
pop
int
insl
sub
sub
mov
mov
adc
push
imul
mov
lret
add
xor
lret
cli
bound
sub
add
sbb
enter
out
sub
pop
leave
rorl
pusha
jno
mov
sub
push
int
or
push
and
ja
pop
daa
mov
movsb
lret
adc
mov
cmp
scas
lret
xchg
jmp
mov
lret
push
sbb
test
jbe
stos
sar
mov
icebp
fstpl
mov
mov
and
lret
andl
adc
add
imul
fmul
icebp
cli
call
xor
js
repnz
adc
scas
flds
out
repz
jmp
lret
mov
test
sub
cs
mov
movsb
mov
scas
fwait
cmpsb
push
leave
or
push
sbb
lret
mov
daa
negl
std
jle
push
add
andb
lret
ja
sub
mov
push
mov
vsqrtsd
mov
inc
lret
push
xor
mov
iret
icebp
ds
lret
xchg
mov
mov
loope
mov
iret
lret
mov
push
in
addl
pop
dec
loope
dec
int
mov
or
inc
jp
call
mov
stc
out
mov
dec
pop
fmuls
fidivl
cmpsl
pusha
aam
xor
lret
xchg
fwait
xor
test
cmp
outsb
imul
pushf
mov
inc
lret
push
add
and
lret
pop
pop
mov
in
sbb
lret
rclb
add
sbb
icebp
xchg
lret
adc
mov
pop
fiaddl
mov
push
jecxz
stos
loope
xor
je
fs
cmp
mov
aad
divl
xchg
enter
lret
and
into
mov
pop
lret
xchg
lcall
lret
mov
sub
rcll
push
fmuls
sbb
stc
cmpsb
aam
xor
jmp
hlt
test
sub
add
sub
lock
mov
pop
pop
push
ja
aam
xor
in
repz
mov
dec
enter
jp
pop
add
cmpsb
mov
and
or
mov
into
scas
mov
xor
pop
lret
xchg
push
xor
mov
fists
mov
shrb
imul
pop
mov
mov
mov
xor
roll
iret
pop
xchg
pop
and
jae
lret
jns
mov
repnz
mov
cmpsl
lods
pop
mov
push
orl
jp
ja
repz
lcall
xchg
les
jge
xchg
fimuls
arpl
in
lret
pop
xlat
addr16
fcmovnu
and
lret
sub
int
jecxz
dec
aam
push
cmp
loop
push
sahf
and
stos
pop
into
repnz
outsl
sti
jae
dec
in
adc
ss
popa
lret
pop
mov
cmova
dec
mov
add
les
push
movsb
int
push
xchg
pushf
or
xchg
lret
rclb
xlat
stos
repnz
fiaddl
out
imul
mov
push
push
sub
jge
and
mov
or
mov
lret
fs
lahf
orb
test
pop
xor
jb
mov
cmpsl
or
arpl
jbe
mov
sub
jg
inc
fmuls
push
in
pop
mov
out
add
jo
inc
mov
clc
dec
leave
mov
lock
push
daa
add
pushf
cmpsl
pop
lret
and
jge
pop
mov
xchg
jmp
jl
push
aad
lret
bound
movb
in
dec
gs
push
or
lret
lea
mov
sub
mov
and
in
inc
leave
mov
ss
sub
ret
arpl
or
stos
es
jbe
frstor
int3
cmp
into
and
jne
loopne
leave
inc
jl
mov
adc
loop
fmull
mov
xchg
lret
inc
push
jle
jae
test
sub
mov
int3
mov
lret
adcl
lods
inc
sbb
fnstcw
mov
pusha
or
and
adc
add
jle
dec
push
xor
jae
les
cmp
lahf
je
popf
sub
jns
add
rclb
xchg
xor
xor
cmpsb
xor
mov
mov
cltd
lret
out
fsubrs
sbb
mov
adc
push
test
fwait
push
or
dec
inc
dec
int3
xlat
mov
mov
ror
mov
popl
mov
lret
push
test
iret
outsb
add
inc
lret
sub
shlb
mov
hlt
xor
sub
arpl
mov
push
add
jg
add
mov
pushf
cmp
mov
xor
cld
in
lret
mov
mov
jne
outsb
fcmove
test
dec
lret
es
mov
outsl
sbb
xchg
cmp
fwait
or
add
mov
xlat
or
jb
nop
or
ror
imul
loop
sbb
mov
dec
lret
lret
repz
ror
xor
pop
sti
js
push
lret
xchg
pop
or
mov
fs
inc
xor
fldenv
daa
rcll
jbe
arpl
mov
outsb
mov
and
lahf
lret
stos
adc
mov
out
adc
shrb
push
xor
enter
xchg
fimuls
mov
dec
lret
push
pop
pop
mov
push
lret
aam
lret
daa
mov
cmc
jecxz
lretw
cmp
test
in
pusha
leave
fcoml
xor
and
inc
push
mov
xor
lret
xchg
xchg
mov
iret
pop
sarb
insb
lcall
dec
dec
fbld
jmp
ret
int
add
cmp
jb
fadds
stos
jl
pop
adc
popa
ja
or
mov
popf
mov
cmp
test
cmp
sub
jb
lock
lret
aaa
in
sbb
scas
test
mov
iret
cmp
fwait
int
xchg
cmp
sbb
lret
mov
mov
lea
fists
sub
gs
xchg
adc
add
enter
sbb
mov
stos
movsb
lret
and
dec
in
or
mov
pop
or
aad
add
hlt
xchg
lret
ret
fdivs
ss
cmp
in
sbb
jge
or
ss
imul
mov
shll
pop
jb
fistpll
pop
aad
cmp
pusha
push
pop
lret
jbe
mov
addr16
mov
leave
rol
xchg
mov
xchg
leave
cld
cli
pop
mov
arpl
add
push
jbe
lret
inc
stos
jl
and
dec
push
mov
add
sti
pop
push
fisubrs
mov
outsl
fcompl
hlt
cli
ret
imul
mov
in
fsts
xor
leave
xchg
testl
xchg
stos
enter
orb
test
in
arpl
cmp
inc
push
jmp
stos
xchg
movsl
xor
inc
push
push
cs
lock
add
mov
frstor
scas
repnz
sahf
clc
mov
pop
jecxz
loope
dec
ror
std
lea
loopne
add
fisubrs
aad
jg
dec
call
or
mov
dec
sti
sahf
jb
and
ror
and
arpl
aam
int
xor
fwait
or
inc
call
xchg
fimull
sub
movsl
mov
clc
ror
cltd
push
sbb
push
mov
pop
lret
sub
sbb
stc
fwait
mulb
xor
ljmp
imul
mov
dec
test
lret
cmp
stc
xor
int
scas
mov
and
lret
enter
shll
xorl
out
icebp
addr16
push
xor
shlb
mov
mov
cmp
lret
aas
pop
xchg
xor
dec
mov
leave
out
sbb
cs
fwait
cmp
mov
lret
gs
stos
out
lret
ds
sbb
push
leave
jl
fwait
or
xchg
lret
xor
sar
and
stc
jmp
sahf
push
adc
sbb
xor
decb
mov
dec
lahf
push
lret
repnz
cwtl
dec
jnp
int
inc
popf
push
push
dec
xchg
jno
add
aas
push
xchg
pop
lret
imul
aam
iret
push
aad
outsl
ret
or
movsl
dec
add
pusha
scas
addr16
xchg
fld1
xor
jecxz
sbb
or
mov
mov
stc
stos
int3
dec
cmp
add
cmp
aad
adc
jne
loopne
icebp
dec
dec
es
or
mov
lret
xor
xor
cmp
sbb
push
sub
sahf
and
pop
les
jo
pop
xor
xchg
xor
cmp
mov
leave
dec
fcmovnb
test
nop
popf
scas
aaa
je
enter
lret
mov
mov
xchg
mov
stc
jne
mov
stc
movl
fimuls
cmpsl
xchg
xchg
dec
ds
add
add
inc
dec
jnp
xor
movsl
dec
leave
int3
cmpsb
mov
stos
jg
push
dec
or
sub
pop
lods
rolb
xor
mov
sti
lea
mov
aam
push
addr16
iret
movsl
mov
sub
pop
mov
lds
or
lret
cmp
pushf
shll
ds
and
leave
neg
rcrb
cli
push
jmp
lret
jno
mov
and
adc
inc
adc
shrb
fcmove
add
xchg
dec
pop
into
out
inc
sub
push
lret
es
sti
lret
std
push
frstor
xor
lret
insl
pushf
fadds
sub
fmul
jge
movsb
pop
iret
sbb
sbb
push
fld
dec
and
stos
inc
cmp
loopne
lret
ret
jae
imul
push
xchg
push
int
hlt
clc
jge
lret
dec
out
xchg
mov
mov
test
fnstsw
mov
mov
ss
lods
lret
notl
gs
add
pop
jb
jns
loope
leave
pushf
xchg
lret
add
push
cmpsb
add
out
lret
mov
jo
iret
bound
pop
dec
or
lret
xor
mov
mov
dec
idivl
andl
lret
in
cltd
jnp
scas
lret
adcl
mov
fs
test
lret
mov
push
mov
jmp
fwait
lret
mov
insl
popa
outsl
xor
dec
mov
insb
xor
pop
push
stos
fxam
mov
or
dec
mov
lret
sbb
aaa
xchg
lret
lock
fstp
lret
add
movsl
rclb
in
into
inc
scas
outsl
sub
call
dec
jo
test
xor
fmul
popf
pop
aaa
push
sbb
mov
scas
fisubrs
sbb
ret
or
mov
lret
adc
in
fldcw
out
outsl
add
xlat
sbb
fidivrs
or
mov
pop
ss
popa
add
iret
or
mov
movsl
adc
jo
inc
dec
push
mov
mov
and
mov
sti
cmp
add
enter
lcall
xlat
std
inc
stc
lret
outsb
or
loope
dec
adc
sub
out
sub
out
nop
sub
mov
leave
adc
jbe
or
enter
in
int
mov
xchg
pop
mov
fstl
push
lret
push
adc
pop
mov
mov
push
push
insb
cltd
ror
in
sub
loop
or
adc
daa
add
fnstcw
and
dec
loopne
cmpsl
cmp
mov
jmp
add
and
test
jns
dec
mov
or
jle,pn
push
xchg
scas
dec
mov
jecxz
fistpl
cmp
jmp
or
dec
movsb
daa
lret
ja
into
in
pop
sbbl
or
adc
lret
inc
mov
lret
test
mov
das
int
sbb
hlt
sub
loop
clc
lret
imul
mov
stos
movsb
es
sub
loopne
lret
sbb
jle
cmp
mov
decl
les
xor
xchg
arpl
subl
cmp
mov
icebp
stc
xchg
sub
sbb
dec
jns
lret
xchg
leave
push
or
int3
pop
mov
and
add
mov
inc
ficomps
les
and
add
arpl
icebp
lret
leave
add
cs
js
out
and
xchg
mov
prefetchw
or
aas
cmpsb
test
leave
in
and
lcall
xlat
sbb
inc
xchg
leave
mov
aam
mov
insl
shll
xchg
dec
pop
ljmp
pop
lret
pop
scas
cmp
mov
sub
dec
push
mov
out
ds
sbb
js
and
inc
stos
test
push
fsts
xchg
loope
push
jbe
lret
adc
or
mov
mov
jmp
mov
inc
xchg
jp
lret
icebp
leave
loope
pop
or
and
je
into
pop
ja
lret
push
mov
pop
lret
pop
or
push
mov
stos
jecxz
dec
pop
add
push
lret
cmp
bound
pop
call
pop
lret
and
dec
ja
xchg
cmc
rcrl
cli
sbb
or
xchg
aas
out
mov
lods
sbb
lret
adc
jge
rcll
jbe
push
push
mov
and
xchg
xor
jecxz
lret
dec
fmul
cltd
lods
ret
push
mov
push
xor
jnp
sub
pop
ja
sbb
mov
lret
lods
mov
aaa
lcall
inc
stos
cmpsl
and
sub
lret
dec
mov
cltd
lret
aam
or
or
sbb
icebp
cmp
cmc
rol
imul
popa
dec
mov
mov
sub
xor
lahf
sub
call
adc
or
in
insl
cmp
es
out
xor
nop
adc
push
jnp
fistpll
jae
out
pop
jp
lock
sbb
out
push
and
adc
and
mov
push
mov
mov
rolb
aad
icebp
dec
or
fldt
jle
out
nop
outsb
pop
or
leave
pop
iret
imul
mov
cmp
ja
add
mov
insl
bound
xchg
leave
les
sahf
pusha
fidivrl
or
outsl
lret
out
rcll
sub
fxch
aas
ljmp
lret
loop
inc
xor
dec
sbb
cmc
mov
push
ss
in
add
lret
ja
sub
push
mov
mov
stos
pop
out
add
push
popf
shl
lret
outsb
divb
ret
imul
jmp
sub
lret
test
pop
fisttpl
rcll
lods
push
inc
lret
jbe
cmp
xor
outsl
inc
sub
xchg
xchg
and
fwait
iret
adc
popf
jge
mov
repz
push
xchg
push
xor
mov
sbb
icebp
lret
cli
dec
jnp
jno
aaa
lcall
ret
pop
scas
lret
pop
rorb
sub
mov
lret
clc
imul
lret
cs
sub
stc
mov
push
push
mov
adc
jmp
sbb
pop
imul
cld
repz
xchg
scas
dec
and
jle
out
xchg
or
out
jae
sub
add
stos
les
sub
lret
push
repz
jo
jbe
mov
rcrb
xchg
subb
xor
or
repnz
dec
icebp
sub
in
pusha
fxch
pop
mov
jle
pop
aaa
cltd
and
add
inc
popfw
ljmp
lret
lods
and
dec
pop
dec
inc
sub
int
leave
sbb
test
push
add
mov
or
mov
stos
push
xchg
add
sti
lret
rorl
out
add
jbe
icebp
in
ret
out
lea
test
adc
int
pop
ja
cmpsb
jmp
bound
and
std
scas
lret
push
push
les
subb
fidivrs
cli
xchg
lds
leave
inc
add
rcrb
adcl
das
xchg
dec
pop
sub
ret
sub
mov
leave
in
jle
sbb
lret
insl
jg
pusha
out
int3
arpl
mov
mov
fnstcw
jle
cmp
into
lret
sbb
push
cwtl
out
xchg
int
repz
rcl
outsl
dec
lods
lahf
sbb
cld
dec
xchg
test
adc
hlt
sbb
xlat
iret
mov
test
mov
addr16
repz
pop
gs
sbb
mov
iret
lods
dec
push
andl
pop
xchg
pop
fs
bound
adc
push
dec
mov
ljmp
adc
mov
hlt
lret
push
adcb
bound
in
xchg
pop
lret
xchg
ja
stc
pop
pop
mov
jge
je
scas
sbb
or
inc
pushf
fxch
movntps
jo
ret
insb
lret
imul
leave
out
mov
cmp
dec
inc
movsb
in
add
dec
aad
jb
or
add
loope
idiv
pop
ror
pop
aad
int3
lret
jle
cmp
xchg
sub
lret
jmp
jl
aas
repnz
lret
push
pushl
lret
jg
inc
push
in
bound
shr
add
orb
lret
test
lahf
aam
sarl
cmpxchg
mov
jne
xchg
lret
inc
lret
mov
add
out
loope
outsl
mov
subb
cli
fcmovnbe
dec
cmc
sub
cmc
in
nop
mov
or
sbb
cmc
xor
icebp
test
push
sti
data16
mov
jae
jge
cltd
fs
fwait
lret
mov
inc
xchg
or
int
sti
addb
sbb
mov
movl
push
mov
and
aaa
mov
xor
cmpsb
and
mov
cmp
pop
push
xor
fwait
xchg
mov
iret
neg
scas
mov
xchg
jle
and
lret
out
push
jnp
lret
repz
lods
add
cmp
outsl
mov
push
sbb
cli
mov
lcall
arpl
aas
and
dec
mov
insb
mov
pop
pop
movsl
mov
testb
and
push
aam
pop
mov
arpl
out
lret
mov
mov
dec
push
and
sbb
icebp
jp
jne
push
lret
adc
or
cld
xchg
sbb
in
imul
add
mov
mov
lret
out
jl
int3
jne
jo
daa
or
enter
push
lods
shl
mov
lahf
sbb
inc
pusha
add
xor
lret
adc
hlt
scas
inc
mulb
xchg
cli
cmc
lret
in
pop
cmpsl
cli
push
outsl
iret
push
call
sbb
mov
punpckhbw
mov
data16
sub
mov
cmp
js
out
sub
sbb
cltd
scas
lahf
push
push
lret
cli
or
lret
outsb
adc
push
mov
mov
inc
push
lret
push
push
cmp
lret
mov
je
ret
data16
ljmp
ja
adc
scas
or
sbb
sub
mov
jae
pop
pop
and
fldt
je
lret
insb
sti
loop
enter
lret
dec
cmp
push
lret
push
and
jmp
jecxz
inc
aaa
add
pushf
fldt
test
int
in
xchg
dec
adc
mov
push
lods
mov
loop
xor
in
mov
aad
inc
mov
lock
cmp
or
xor
and
out
mov
mov
int
jb
dec
jbe
lret
and
bound
das
outsl
cmp
cmpb
movsl
push
push
mov
inc
push
lret
cmc
mov
inc
dec
insl
cmp
shl
dec
dec
ficoml
mov
inc
dec
rcr
or
dec
mov
lret
lcall
pop
iret
pop
fistpl
mov
fcomip
xchg
into
and
scas
dec
pop
ja
xor
pop
lret
adc
and
jno
lret
or
scas
adc
addb
cmpsb
sbb
mov
dec
xchg
cmp
shlb
ljmp
icebp
pop
leave
fcmovne
out
fadds
sub
test
lret
add
enter
cmp
or
cli
jmp
mov
scas
test
sbb
les
push
add
mov
lret
loop
push
cmc
movsl
jmp
outsb
mov
scas
dec
lret
or
mov
jnp
scas
sub
test
jge
inc
dec
add
xchg
or
enter
lret
add
pop
add
dec
outsb
cmp
fs
sub
mov
lahf
mov
push
lret
outsb
aaa
xchg
lret
dec
add
mov
xchg
xor
scas
sarl
in
push
jne
sbb
mov
pop
sub
jge
sti
stos
pop
mov
iret
scas
cli
js
ja
pop
xor
mov
sbb
stos
das
icebp
call
repz
jmp
rorl
jg
int
cmpb
cltd
dec
mov
imul
aas
mov
push
int
add
repz
divl
or
popa
jns
pop
lods
jb
lret
sahf
or
xchg
stos
or
mov
sub
lret
cmpsb
add
xor
rclb
adc
lret
rcll
das
sub
gs
pop
or
xchg
push
stos
push
or
or
rorb
aad
testl
les
inc
cmp
ss
pop
and
ror
test
push
or
insl
sbb
sbb
cmp
jno
jmp
mov
mov
pop
scas
aam
int3
std
sub
inc
add
fadd
insl
mov
xchg
rorb
stc
mov
shrl
add
test
enter
xchg
cmp
jmp
stos
aad
lods
xor
int3
and
fcmove
mov
sbb
lret
scas
mov
gs
mov
punpcklwd
mov
idivb
sbb
sub
fs
lret
sti
cmp
pop
enter
xchg
in
add
arpl
leave
mov
int
pop
lret
jne
jns
movsl
aad
fidivs
sub
inc
cmpl
pushf
add
cli
and
sahf
dec
push
insb
fisubrl
arpl
lods
xor
mov
lret
sbb
mov
add
add
mov
jo
popf
and
jg
insb
sub
int
dec
mov
mov
outsl
xchg
lret
and
mov
lret
inc
into
sbb
in
shll
stos
rorl
ds
xor
loop
mov
push
leave
jle
icebp
push
sbb
subl
lret
cwtl
cmp
dec
lret
andb
inc
lret
in
in
mov
inc
push
lcall
imul
int3
out
add
scas
dec
mov
cmp
sti
test
pushf
sbb
dec
mov
ljmp
cmc
mov
pop
mov
cmp
testb
out
sbb
xchg
scas
xchg
xchg
cld
lret
inc
inc
sti
sbb
bound
push
lret
mov
loop
aas
add
lret
push
and
ljmp
sub
inc
in
xor
and
push
add
insl
iret
loop
hlt
pop
insb
popf
xor
adc
add
or
adc
insl
mov
enter
cli
sbb
add
sbb
movl
mov
jp
pop
lret
imul
cmpsl
or
adc
dec
aas
sub
sbb
push
jmp
test
les
mov
mov
loope
stc
call
lret
mov
lret
and
xchg
fucom
push
lahf
sahf
adc
lret
cmpsb
push
daa
mov
push
loop
lret
in
movsl
jne
pop
jp
mov
jno
lret
dec
push
movsb
pop
inc
jnp
in
shll
jno
mov
stc
add
ljmp
jb
and
mov
sub
mov
je
bound
ffree
add
aam
or
lret
leave
cs
pop
cmp
mov
lret
cwtl
loopne
dec
imul
push
push
xor
sub
out
or
std
lret
push
nop
shrl
adc
out
mov
xchg
and
int3
cwtl
jmp
stos
nop
inc
out
sbb
test
mov
add
shlb
or
enter
ds
sub
loop
test
roll
sub
repnz
mov
imul
xchg
lret
and
dec
mov
stos
or
ror
negl
mov
jno
cmp
lds
lret
mov
or
sbb
daa
das
inc
cwtl
cmpsl
push
lret
mov
dec
inc
cltd
sbb
mov
cli
add
lret
sub
jmp
mov
mov
andb
lret
adc
int3
mov
lret
shrb
dec
ss
fdiv
imul
lret
adc
lea
fwait
cmp
push
imulb
stos
xlat
mov
sbb
lock
mov
jge
lret
sbb
movsb
lret
mov
dec
push
popa
jge
lret
aaa
sub
mov
std
mov
dec
lahf
jno
jg
pop
sub
inc
mov
ret
mov
xorl
push
lcall
jnp
outsl
icebp
jb
int
pop
sbb
cmp
pop
mov
lret
adc
sub
sub
cmp
dec
xchg
into
outsb
adcb
popl
repz
int
add
int
dec
js
mov
add
and
loopne
test
push
outsb
push
mov
int3
adc
xchg
mov
loope
ret
and
int
cmpsl
lret
pop
iret
mov
mov
cmp
lock
xor
xor
test
jp
orb
mov
and
mov
iret
fcomps
cwtl
test
dec
lods
push
lret
fwait
inc
std
fnstenv
add
repnz
mov
mov
mov
arpl
lret
clc
divb
idivl
lret
mov
mov
sbb
mov
cmp
sub
cwtl
pop
into
xor
int
ss
mov
sbb
push
jbe
jmp
jl
aam
mov
mov
negb
mov
and
lea
iret
sub
mov
add
mov
adc
js
lret
insb
mov
push
lret
and
xchg
mov
aad
xor
push
cmp
mov
inc
pushl
and
jecxz
cmp
lret
cmp
mov
inc
lret
insb
cmc
cmpsl
xchg
out
ljmp
or
addr16
xlat
jns
fisttps
lret
mov
cmpsl
sub
int
inc
das
xchg
hlt
sub
out
lret
or
rcrb
mov
jecxz
adc
sub
jl
gs
or
lea
mov
add
or
lods
inc
sarl
xchg
aad
lret
repnz
jl
xchg
arpl
push
scas
lret
test
leave
dec
lcall
in
push
test
cmpsb
aad
dec
add
mov
mov
int
mov
stos
xchg
lds
dec
lods
jo
test
and
inc
mov
ret
adc
lret
xchg
mov
mov
shll
cmp
mov
or
popf
scas
rcrl
or
xor
push
fs
cltd
dec
sbb
jns
mov
stos
js
repnz
scas
lret
in
int3
xchg
and
rcrl
pop
mov
mov
test
inc
mov
std
adc
lret
and
xor
or
mov
rolb
popa
lret
mov
dec
add
push
sarb
pushl
lret
xor
sbbb
or
cmpsb
xor
mov
daa
dec
pop
call
dec
xor
hlt
mov
sbb
iret
adc
lods
dec
shl
fmul
fidivl
mov
add
xchg
dec
mov
jb
xchg
lret
leave
sti
pop
mov
iret
cmpsl
dec
push
pusha
lds
mov
cld
sub
enter
pop
orb
push
popf
rclb
test
xchg
adc
cmp
shll
or
pop
in
int3
sub
jbe
aad
mov
gs
js
scas
xchg
into
test
mov
mov
aaa
sarl
emms
dec
std
adc
add
sub
aad
jbe
pop
shrl
mov
dec
stos
push
inc
sbb
stos
jle
inc
aam
lret
popa
test
mov
arpl
cmp
push
sarb
sbb
lret
cmp
int3
or
shl
cmpsb
movsl
jo
icebp
mov
leave
ja
out
clc
dec
insl
test
lret
addr16
lret
pop
cmp
pop
sub
cs
call
xor
cltd
testb
xor
cmp
lret
clc
mov
hlt
and
into
lret
or
les
push
jbe
enter
mov
jecxz
mov
pop
jle
mov
mov
cmp
jo
mov
dec
addl
lret
pop
cmp
mov
out
gs
jo
cli
cwtl
lret
mov
pop
push
add
popf
push
mov
adc
ss
lea
shrb
movsl
sub
xor
scas
cmc
lds
lret
popf
movsb
ret
xor
rcrl
xchg
mov
sbb
add
inc
aaa
or
mov
mov
mov
xchg
jno
les
sbb
lret
and
jbe
movsb
lret
push
xor
sbb
das
lret
dec
lret
cmp
fs
lret
mov
adc
dec
jbe
add
pusha
jg
shrb
insb
lea
cmpsl
or
shlb
ret
dec
out
or
cmc
outsl
and
repnz
dec
and
rcl
sub
mov
mov
repnz
xor
shl
or
cli
ror
mov
push
and
test
in
push
jp
pop
aas
lret
data16
out
shrb
adc
aaa
out
hlt
daa
lret
sub
mov
rep
push
push
sarb
xchg
pop
lret
xorb
ljmp
mov
or
lret
int
mov
out
stos
jp
xchg
push
sbb
inc
lret
cmp
or
pop
mov
bound
repz
aas
fisttps
ja
mov
push
cmpsb
fcmove
imul
rorl
jg
xor
iret
or
pop
push
add
adc
popl
adc
push
and
cmpsl
mov
cld
xchg
xlat
insb
pop
push
sarl
adc
inc
scas
lret
cmpsb
les
daa
jmp
mov
mov
jo
stos
dec
lret
pop
add
andb
arpl
cmp
shlb
shll
int
cmp
sbb
mov
adc
mov
lret
dec
mov
mov
xlat
cmp
scas
rcll
mov
push
fisttps
sub
pop
inc
jg
xor
test
fimull
sbb
and
movsb
jge
push
and
scas
lret
add
cld
loope
in
repz
lret
push
test
sbb
mov
lret
lea
xor
fs
fsubrp
sub
mov
lret
xchg
mov
add
pop
lcall
lret
push
xor
jne
lret
xchg
outsl
dec
leave
jp
adcb
and
inc
rorl
arpl
push
imul
sbb
xor
xchg
jae
and
adc
cmp
mov
cmpsl
push
mov
std
out
dec
jno
pop
iret
jmp
pop
mov
je
pop
cmc
or
fadd
leave
out
mov
loope
pushf
pop
shll
lcall
es
xor
mov
in
jmp
mov
mov
scas
push
test
enter
push
push
rolb
pop
movsl
lret
sbb
fs
dec
xchg
stos
int3
lret
xchg
fxch
push
lret
mov
mov
push
and
xchg
lret
js
jne
jp
pop
inc
scas
cmp
popf
xor
inc
jnp
push
xor
iret
into
jle
cmp
lret
in
add
cmp
leave
inc
dec
sbb
insb
lretw
dec
mov
dec
imul
cmpsb
leave
push
inc
mov
pop
mov
pop
lret
bound
stos
cmpl
fmuls
gs
jb
lret
in
push
mov
lret
cmp
mov
mov
dec
lret
stos
xchg
repnz
inc
je
in
dec
lods
test
lcall
jb
mov
xchg
mov
icebp
lret
sbb
mov
mov
mov
arpl
xchg
and
or
or
xchg
lret
fwait
gs
orb
pop
or
lret
xor
out
adc
pop
add
cmc
mov
and
mov
xchg
imul
push
inc
lahf
loop
sub
lret
rcll
cwtl
iret
mov
push
fdivs
xchg
lret
pop
scas
adc
test
loope
adc
dec
cmc
imul
push
dec
jg
hlt
cmpsb
bound
adc
aaa
mov
es
sub
clc
call
lods
mov
repz
push
cmp
fwait
imul
jecxz
push
dec
add
mov
lret
int3
adc
xchg
fs
lods
shll
aaa
lret
sub
ds
out
aad
mov
test
push
push
sbb
sbb
clc
mov
and
insb
mov
lret
add
movsb
int3
leave
push
js
or
insl
push
test
adc
lret
adc
daa
push
popa
ljmp
inc
fdivrl
jns
pusha
mulb
and
cwtl
mov
testl
pop
cmp
lahf
push
xchg
jb
mov
rcrl
outsb
mov
cmp
cmp
xchg
sub
add
cmpsb
adc
pop
xchg
and
jb
sbb
pusha
dec
xor
lret
icebp
inc
cmp
lret
mov
xor
rcrl
mov
dec
frstpm(287
ret
jp
dec
clc
dec
iret
add
and
dec
jp
lret
cmc
adc
cmp
int
mov
xchg
data16
sub
ror
mov
pop
pop
mov
sarb
dec
rcl
jae
bnd
push
sub
add
lret
scas
in
push
loop
mov
test
and
rorb
repnz
in
and
rcll
lret
ret
push
mov
mov
out
pop
mov
lret
cld
mov
dec
xor
scas
mov
inc
pop
lret
sub
mov
push
lret
or
mov
sub
shl
fisttps
xor
lret
push
adc
fmulp
sysret
jae
es
dec
je
dec
xchg
das
pushf
clc
fsubrl
insl
and
aam
fwait
inc
mov
pop
push
out
outsb
icebp
sahf
jp
lret
add
ljmp
lret
pop
enter
jle
dec
int
movsb
xor
fwait
and
sbb
aaa
loop
sub
std
fwait
pusha
out
dec
in
int
mov
push
add
int
out
rcl
pop
cmp
lret
iret
loopne
imul
inc
and
sbb
jo
hlt
repz
fcmovnu
aam
lret
jb
testl
popa
cmc
inc
lods
and
shl
ja
mov
or
jmp
imul
fnstsw
mov
cmp
std
push
lret
mov
lret
int3
push
jne
out
jg
lret
hlt
movsb
jp
xchg
inc
sub
push
xchg
test
fiadds
pop
icebp
inc
and
lock
into
jns
fisttpll
mov
hlt
sbbb
lret
lock
dec
dec
shl
leave
sbb
dec
stos
push
mov
mov
rolb
insb
dec
mov
xlat
loope
mov
xchg
lods
sub
add
adc
fs
bswap
and
das
pop
outsb
cmp
xchg
dec
push
mov
idivb
movsb
sarl
fmul
dec
ss
out
lret
cld
mov
jp
lret
sar
fiadds
cmp
int
jnp
out
lret
adc
pop
lret
mov
sbb
dec
imul
lret
jg
adc
pop
lock
je
out
and
xor
aas
in
lods
pushf
lret
xlat
mov
cmp
jae
or
testb
xchg
fsubs
subl
lret
ret
cmp
cs
int
out
push
lahf
insb
lea
xchg
push
addr16
dec
aam
push
lret
scas
push
dec
mov
lret
xchg
jmp
mov
mov
movsl
mov
xchg
mov
jle
jns
pop
push
pop
cwtl
movsb
lret
mov
pop
ss
cmp
jp
lret
rorb
push
dec
inc
outsl
mov
fbld
adc
int3
ffree
test
mov
dec
jbe
lret
dec
fiadds
sub
lret
in
lock
test
add
adc
sbb
shll
mov
jge
out
and
clc
aam
scas
jmp
lret
adc
jb
out
push
sbb
jnp
adc
ret
lret
pushl
fs
lret
leave
sub
mov
imul
cmc
outsl
dec
ror
popl
lret
outsb
jle
push
sbb
dec
pop
stos
ret
out
xor
lret
test
xor
adc
hlt
loope
mov
lret
xchg
std
xchg
xchg
dec
adc
xchg
jle
xor
cs
cwtl
push
fildll
fstl
testl
lret
or
and
xor
fwait
cmc
fdivrs
jbe
std
mov
or
mov
gs
dec
lock
or
push
push
repnz
lret
lret
jg
cmp
daa
cmp
add
mov
fimull
rcl
xor
mov
push
or
cmpsl
fadds
fwait
lret
push
in
adc
xchg
or
icebp
mul
pop
cmp
xlat
push
mov
jge
add
lret
or
pusha
fimull
dec
popf
jg
dec
xor
andl
fxch
cmp
push
mov
and
paddw
cmc
push
or
jnp
dec
call
lret
add
mov
lret
outsl
sub
das
sub
ror
movsl
cmp
mov
ds
mov
sbb
mov
lret
imul
cwtl
lret
mov
cmpsl
mov
iret
adc
daa
pop
lret
je
cmp
rcll
ljmp
dec
lds
cmp
lret
pop
mov
mov
rorl
sub
orb
add
shll
rcrl
cmpsb
stc
fsubp
pop
lret
pop
iret
andl
xchg
mov
roll
pop
sub
mov
sbb
or
mov
lret
mov
xchg
push
leave
insb
ret
rcrb
jp
pop
xor
lret
xchg
or
mov
es
lret
cmpsl
in
fcomps
inc
sub
es
jno
mov
jp
push
mov
pop
dec
or
fdiv
ds
lret
add
out
int
sub
jnp
adc
sbb
fxch
push
push
push
mov
cli
ljmp
lret
pop
add
xchg
out
push
lret
push
test
mov
jecxz
jle
push
inc
int
mov
je
mov
lret
xchg
xor
rcrl
fnstsw
dec
insb
iret
lret
xchg
cmp
dec
jp
dec
loop
add
imul
lret
out
sarl
aam
xor
std
jle
pop
lods
or
cmp
lret
mov
adc
inc
popl
push
jnp
mov
aaa
xchg
cli
fldl
lret
mov
dec
je
fs
mov
xchg
dec
jns
dec
mov
lret
pop
psraw
and
pop
cmc
lret
mov
lahf
inc
fsubr
sbb
rcll
sub
sahf
stc
add
mov
pop
adc
add
mov
sub
sti
jecxz
inc
inc
cs
ret
nop
in
xorl
lret
jne
adc
cli
sti
leave
and
lret
js
popa
mov
shll
lods
nop
scas
jg
lret
or
int
rorl
cmp
sbb
shl
add
or
das
iret
xor
test
or
and
fs
lret
inc
ja
sti
sub
cmc
outsl
insb
and
mov
repz
in
xor
scas
aaa
cwtl
gs
jno
xchg
out
int
push
xor
in
iret
inc
cmp
lret
add
ljmp
insb
test
xchg
lret
xchg
jge
in
into
loop
cli
out
push
idivb
or
lret
pushf
fmuls
mov
xor
aad
sbb
jle
rcrb
sbb
and
test
aaa
add
mov
pop
push
push
stos
lea
into
lret
and
pop
pop
sbb
je
aad
sbb
outsl
lea
int3
or
fdivrs
pop
mov
int
scas
push
aad
inc
call
fmuls
rcl
rcll
movsl
leave
test
adc
xorl
lret
adc
dec
add
or
lret
jp
lcall
repz
pop
xor
sbb
lret
ss
mov
int
fstpt
lret
xor
mul
lret
add
push
pushf
xor
adc
outsb
sti
jg
lret
and
add
call
sub
sbb
enter
clc
and
add
ret
adc
push
mov
adc
inc
movsl
adc
inc
sbb
adc
dec
test
mov
jp
jae
fsub
lcall
or
cmpsb
shll
or
push
lret
push
push
out
cmpsl
lds
icebp
push
dec
pop
lret
mov
ror
mov
test
lret
jmp
hlt
sub
fstl
inc
pop
and
lds
fisttpl
sbb
lret
pop
call
sub
cmp
stos
jmp
mov
mov
cmp
dec
fcoml
mov
mov
mov
push
push
push
aam
lret
sahf
jns
add
xor
iret
mov
dec
cmp
pop
pusha
iret
ss
ror
mov
in
or
stc
clc
lock
test
scas
sub
stos
adc
lret
xor
xchg
cmp
dec
mov
fiadds
add
pop
xchg
sub
in
sahf
lret
mov
dec
fsubrs
stos
fildll
into
adc
lret
sub
xchg
inc
pop
lret
mov
int
and
push
jbe
imul
or
sbb
xor
pop
mov
lret
xchg
jecxz
add
xor
cmp
aad
cmc
int
and
test
shlb
cli
in
fldcw
out
gs
pop
mov
ficompl
jae
test
jp
sbb
lret
sub
in
loope
jne
int3
icebp
call
fmuls
push
ja
mov
ds
xchg
cmp
add
xchg
aaa
mov
fmul
and
das
lret
push
jmp
mov
cmc
push
mov
and
stos
lret
xor
daa
pushf
dec
leave
lret
in
xrelease
cmpsl
pop
sbb
fisubl
xlat
leave
xlat
xor
mov
lret
js
int
mov
xchg
lods
sbb
je
sbb
in
outsb
lret
sub
pop
js
dec
stos
mov
mov
nop
jb
mov
lret
and
daa
mov
xchg
test
sub
cwtl
fimull
shll
lret
inc
aam
imul
orb
lahf
jbe
cmp
mov
test
es
xchg
and
cmp
and
jge
lret
jae
push
mov
mov
cld
lret
cmpsb
jne
insl
ror
jmp
clc
sbb
xor
test
add
pushf
int3
lret
insl
cld
icebp
std
insb
pusha
mov
sub
sub
lret
mov
sub
lret
mov
inc
adc
cltd
cmp
subb
daa
lret
xchg
imul
inc
cmc
jb
pop
dec
jp
push
cli
dec
mov
sbb
out
fwait
and
xorb
push
cwtl
jmp
gs
and
cmpsb
cmpsl
popl
inc
jae
adc
in
add
inc
push
int
xchg
insb
clc
cmp
and
inc
lret
cmp
xchg
iret
mov
push
push
lock
out
sbb
dec
add
mov
cmp
in
shll
and
ret
ret
mov
shrb
insl
mov
xchg
mov
inc
push
lret
in
popa
test
ror
sbb
dec
pop
jbe
lret
mov
daa
fildll
int
jo
mov
gs
xchg
not
loop
xor
and
lret
inc
vpaddq
mov
pop
push
pop
sub
lret
je
ss
int
mov
add
pop
shrb
lods
in
lret
out
lea
mov
fs
add
test
jne
sbb
cmp
inc
sub
fwait
lret
xchg
leave
mov
btr
pusha
inc
or
rcl
loop
adc
xchg
pushw
imul
pop
lock
jmp
stos
js
outsb
mov
dec
cmpsl
mov
sub
into
xlat
pusha
adc
lret
dec
push
loope
push
push
imull
lret
dec
sahf
les
adc
lret
leave
and
sti
dec
int
push
cmpsl
ret
lret
dec
ret
pop
lods
and
pop
outsb
adc
subb
cli
mov
push
lret
cmp
rcl
sub
jle
out
cmpsl
add
fidivl
ss
popa
loopne
sar
sub
lret
adc
jp
push
mov
or
out
or
sub
jno
xchg
int
mov
lret
adc
inc
inc
in
push
jle
lret
push
mov
xchg
inc
inc
lret
and
push
inc
scas
pop
mov
xor
in
stos
add
mov
push
lret
push
add
push
cmp
and
xchg
and
or
nop
push
pop
rolb
push
push
lret
es
and
bound
cmpsl
lret
sub
shl
add
bswap
lret
dec
cs
popl
jne
cmp
int
mov
std
sub
inc
pop
ss
and
lret
fsubr
mov
call
in
out
push
lcall
ljmp
fidivs
mov
jmp
lret
cmp
adcb
and
jl
test
pop
mov
dec
lock
cltd
lret
xor
das
cmp
stc
jo
add
adc
push
xchg
repnz
popf
jae
out
add
test
aad
push
sub
imul
jmp
fwait
loop
icebp
mov
inc
aaa
lret
movsb
push
pop
mov
lret
out
cmp
lret
fldz
mov
mov
icebp
jp
push
es
push
lret
add
loop
sbb
std
das
jmp
or
rorl
pop
clc
int
sahf
scas
mov
dec
cld
testl
fstp
popa
xor
aad
bound
mov
add
in
sti
adc
jbe
cwtl
lret
imul
out
orb
pushf
int
popa
sbb
out
shrl
cmp
mov
movsb
mov
xor
cmp
or
mov
sub
test
and
mov
inc
pop
lret
xchg
sub
int
sbb
es
push
rcll
cli
ljmp
call
mov
inc
sarl
imul
xor
jmp
jmp
add
loop
lret
add
fcomps
stc
pop
and
lds
fxch
jge
sbbl
stc
or
xchg
xchg
cmp
mov
out
jl
lret
dec
call
or
xlat
lret
insb
aam
jae
repnz
xchg
leave
shrb
jns
jmp
mov
cmp
scas
lret
dec
mov
test
xchg
lock
jp
mov
rcrl
jo
les
cmp
scas
push
or
iret
ss
fucomp
dec
cmp
push
lods
pop
cmc
cld
inc
sbb
dec
das
loopne
pop
xchg
not
cmp
mov
sub
data16
push
mov
dec
dec
pop
shrb
xchg
int
test
xchg
lret
inc
cmp
or
jb
stos
lods
push
cld
lret
mov
mov
mov
mov
jno
xor
fidivrs
sub
add
jnp
aas
lret
popf
or
push
mov
jle
xlat
ljmp
sbb
jmp
in
movl
adc
lret
clc
stos
sbb
dec
mov
xchg
int
pop
flds
je
hlt
shll
fiadds
push
add
jecxz
cmp
mov
inc
lret
inc
lcall
lret
and
push
stc
lret
push
sbbb
out
inc
fmul
sub
cs
jecxz
lret
fbstp
sbb
lret
inc
bound
xchg
jp
or
lods
out
sbb
jge
sub
jecxz
inc
pop
sbb
pop
in
push
sbb
daa
add
xchg
sbb
cmpsl
xchg
ret
cmpsb
rcrl
or
cmp
imul
and
stos
push
icebp
popf
sub
or
sub
sub
push
xorl
lret
leave
adc
cmp
cmp
ret
test
lret
jb
or
inc
xor
stos
lret
mov
loope
hlt
lret
mov
pushf
lds
xlat
jae
cmp
cs
lret
xor
frstor
lods
inc
jne
mov
les
icebp
int
xchg
sti
push
nop
mov
cmp
iret
push
sub
mov
or
pop
subl
lds
jae
lret
fmulp
add
xchg
aas
mov
jmp
test
hlt
push
mov
mov
mov
xchg
shrl
adc
sub
lret
pop
fildll
mov
xor
pusha
lret
lods
lds
pop
add
lcall
xchg
jne
je
mov
out
mov
sub
out
jnp
pop
lret
jecxz
push
pop
cmp
push
lret
jl
shr
aam
sbb
rcr
out
sbb
dec
lret
out
in
cmp
dec
xor
push
aam
dec
jl
lret
push
cmp
or
shll
jbe
ja
lret
aas
outsl
adc
mov
adc
push
jge
repnz
xlat
push
mov
stos
adc
shrl
mov
and
or
in
push
rcrb
sub
fbld
mov
in
xchg
ljmp
cmpsb
pusha
lods
mov
sbb
loope
mov
test
rolb
dec
jle
cwtl
lcall
jae
lret
lret
rcrl
rcr
rcrl
aaa
pop
and
or
test
xchg
mov
repnz
adc
mov
int
xchg
mov
fcmove
or
das
mov
cmc
cmp
cmp
mov
push
mov
sahf
int
jl
jmp
dec
std
xor
test
pop
ret
addl
mov
xchg
out
add
xor
xchg
add
push
icebp
psllq
lock
push
pop
mov
movsl
mov
dec
push
push
xchg
lea
or
mov
jmp
xor
loope
push
addr16
int
scas
jnp
adc
jle
out
lret
cmp
push
add
inc
xchg
mov
xchg
mov
adc
icebp
xchg
jo
dec
test
pop
lret
cmp
push
jb
dec
lahf
ljmp
dec
cli
mov
adc
sbb
leave
aam
xchg
movsl
ljmp
or
testl
aam
jle
imul
fdiv
pusha
and
lret
add
xchg
gs
jmp
adc
xchg
dec
sbb
lret
data16
xlat
push
jecxz
lret
xchg
xchg
mov
jp
lret
decl
aad
lods
sbb
jne
je
test
jge
int3
pop
ss
adc
lret
repz
jnp
repz
arpl
loop
jae
lret
mov
cmpsl
inc
and
lret
test
pop
sbb
mov
xor
lret
push
scas
or
js
xor
sbb
std
sub
lret
lahf
pop
inc
fwait
mov
stc
fcmove
adc
and
sub
aam
cmpsl
sub
mov
fistl
pop
std
lret
inc
sub
cmp
xorl
lret
in
mov
call
cmp
addr16
xchg
int3
sub
dec
pop
lcall
lret
cmp
add
insb
arpl
jno
and
pop
icebp
adc
mov
jmp
lret
pop
test
mov
inc
lret
movsb
ja
pop
cmp
mov
mov
mov
incb
hlt
pop
pop
lret
bound
out
data16
ljmp
fsts
in
lret
pop
pop
push
imul
add
hlt
lea
mov
lret
ljmp
ds
ret
and
push
inc
mov
mov
or
pusha
ret
repz
loope
push
and
mov
mov
fstpl
and
lret
outsb
sbb
out
clc
movsb
jl
lret
push
pop
aam
fsubr
dec
lret
rorl
or
lret
fimuls
add
faddl
and
int
xlat
std
mull
imul
xorb
out
dec
jl
cmp
mov
xchg
lret
and
jno
dec
and
ds
pop
enter
dec
jmp
out
stos
leave
outsb
loop
mov
mov
pop
mov
or
out
addl
jmp
fdivrl
mov
cs
push
mov
popa
lret
xchg
xor
xlat
jno
loope
lret
mov
out
sbb
rorl
ds
mov
mov
adc
mov
or
inc
ja
pusha
out
int
std
inc
xchg
cmpsl
call
mov
sbb
lret
scas
test
cmpsl
mov
pop
enter
xor
xchg
cwtl
dec
daa
lret
mov
mov
mov
sub
addr16
xor
mov
cltd
sbbb
jp
popa
leave
mov
outsb
lret
ret
mov
pop
cmp
push
mov
icebp
jno
xor
rcr
jmp
xor
outsl
arpl
ds
jp
jmp
lock
dec
nop
dec
add
sub
xchg
lret
mov
push
mov
pop
dec
jl
loope
lods
lret
dec
pusha
enter
cli
cs
fimull
sub
lret
xchg
lods
xor
pusha
pop
jne
mov
mov
ljmp
mov
jp
outsl
das
lret
pop
mov
pop
fiaddl
icebp
fmull
mov
inc
int
or
ror
inc
mov
xchg
mov
dec
ss
inc
or
cmp
lret
and
stos
mov
mov
mov
pmaxub
mov
cmpsl
adc
xor
mov
lret
adc
sub
sahf
enter
out
ret
mov
xchg
adc
test
cmp
fmul
mov
icebp
xbegin
mov
mov
pop
cld
nop
test
jns
lods
mov
test
jnp
xchg
pop
rcrl
sub
out
or
pop
repz
push
shrl
inc
imul
mov
stos
sbb
dec
mov
lret
xchg
stc
mov
ret
fistpll
mov
pushf
lea
js
xor
lret
mov
and
nop
lret
xchg
push
and
xor
fcoms
sub
int3
mov
and
lret
ja
push
pop
faddl
push
lret
shlb
das
mov
nop
mov
mov
jae
inc
mov
mov
adc
push
je
or
push
addr16
cwtd
pop
jg
sbb
cmp
pop
stos
xor
lret
in
mov
lret
ret
ss
insb
lret
sbb
inc
loope
ljmp
or
fmul
push
jbe
sub
mov
cmpsb
int3
clc
push
pop
pop
cs
pop
mov
lret
mov
inc
lret
pop
int
jmp
lret
pusha
mov
and
lahf
out
repz
dec
mov
push
lret
dec
sub
xlat
xchg
cmp
mov
shld
pop
mov
inc
adc
lret
shr
inc
cltd
dec
add
iret
mov
mov
mov
cld
sub
lret
fistpl
push
jnp
fnstsw
mov
adc
aam
je
rcll
pop
xor
lret
inc
mulb
shrl
pop
push
push
mov
aaa
push
xchg
mov
outsl
xchg
decb
inc
sub
fcmove
fdivs
jl
nop
push
cmp
fwait
in
lret
je
inc
add
push
icebp
sub
addb
sub
arpl
and
jp
int
sub
rolw
lret
cmp
inc
sub
aaa
dec
out
not
lretw
mov
cmc
mov
fsubr
dec
adc
adc
lock
push
cmp
lret
loop
in
push
or
pop
lret
and
cmp
cmpb
imul
mov
and
xlat
dec
xor
push
or
sbb
cmp
xchg
or
fcomps
add
lret
jle
jmp
sub
dec
scas
jnp
dec
and
sahf
inc
in
cmp
jmp
ret
xchg
mov
jp
lret
into
xchg
outsl
mov
and
mov
insb
lret
push
xchg
push
addr16
jae
int
cmpsl
sbb
or
lret
pushf
push
mov
push
mov
push
mov
out
inc
mov
dec
sub
jb
cmp
sbb
jp
movd
in
inc
sub
xchg
add
rorl
adc
pushf
insl
cwtl
fldcw
leave
ljmp
xchg
mov
jle
icebp
in
xlat
dec
dec
push
add
stos
dec
fnstsw
int
lret
sarl
in
pop
push
adc
lret
mov
in
dec
and
lret
push
xorl
jae
adc
rclb
lcall
xchg
xchg
lahf
int
mov
in
dec
popf
jp
das
lret
inc
stos
mov
adc
ss
or
jge
addr16
push
clc
cmpsb
pop
fisubs
lret
cld
jnp
cmp
sbb
movsl
adc
inc
aad
dec
aas
es
lret
hlt
mov
cmp
out
inc
lret
into
imul
push
xchg
repnz
sbb
cmpb
mov
lcall
dec
jmp
mov
dec
mov
mov
fmul
pop
aad
addb
mov
dec
fisubs
loope
pop
in
je
or
stos
xchg
pushf
xchg
sub
dec
mov
rcl
sub
inc
nop
lea
mov
repnz
in
mov
cmc
xlat
cli
add
scas
nop
adc
and
out
pop
cmpsl
fcmovb
mov
out
lret
ss
add
pop
pop
xor
lret
xchg
and
rcll
xor
lret
add
push
test
fld
shlb
lret
inc
cmp
mov
inc
cs
rorb
hlt
stos
dec
xor
outsb
shll
xchg
lds
je
mov
popa
call
jns,pn
xor
jno
cmc
pop
out
stos
xor
jo
data16
cmp
in
mov
sahf
lret
bound
mov
jo
mov
push
add
lret
mov
lret
xor
iret
lcall
lret
dec
and
adc
addr16
cs
mov
hlt
push
lret
enter
fstsw
mov
or
in
mov
pop
lret
mov
loopne
stos
sbb
in
inc
aas
mov
je
shr
repz
stos
subl
sbb
inc
push
stc
in
dec
cmp
rcrl
arpl
push
push
in
nop
mov
push
push
js
lret
xor
xchg
or
mov
pop
mov
fcmovbe
popa
sub
jnp
lcall
lods
mov
push
xchg
jecxz
mov
or
and
lret
stos
and
cs
lret
mov
hlt
pop
adc
pop
mov
ja
nop
sbb
test
push
and
sbb
out
dec
lret
jge
mov
mov
icebp
xchg
ret
cltd
dec
and
pusha
pop
xor
outsb
dec
test
jns
lahf
stos
mov
fcompl
xorl
int
movsl
push
imul
cmp
out
xor
js
cmp
and
iret
sub
jns
nop
dec
adc
nopl
sub
daa
mov
in
pop
adc
jge
sub
lret
test
dec
and
aas
test
inc
or
movsb
lret
mov
in
cmp
push
jmp
ss
sbb
jmp
cmp
test
cmp
sbb
xchg
mov
fucomip
fsubp
mov
inc
aam
xchg
mov
lret
sahf
mov
and
inc
scas
rorl
aad
xor
pop
fwait
adc
lret
shr
arpl
lds
push
lret
bound
cmp
leave
mov
inc
loopne
push
ss
push
cmpsb
xor
add
mov
out
sbb
jns
cli
cmp
roll
in
and
mov
lret
push
loope
push
lret
cs
push
push
js
mov
lret
outsb
xchg
cmp
lret
inc
lret
pusha
cs
adc
adc
adc
out
add
lods
cmp
insl
cli
cmc
ds
int
and
sbb
jge
lock
iret
dec
repz
mov
and
test
lretw
jne
aam
pop
jmp
and
inc
mov
mov
xor
adc
mov
lret
popf
pop
inc
xchg
je
dec
mov
mov
arpl
lret
inc
fmul
pop
pop
cs
ss
push
lret
add
lods
lds
fwait
stc
arpl
add
leave
adc
icebp
sbb
lret
dec
mov
aaa
shlb
push
sarl
sbbl
lret
popf
mov
xchg
pop
repz
lret
mov
sbb
push
mov
sub
lret
daa
mov
inc
add
push
lret
or
or
loope
cmp
lret
ret
xchg
sti
sbb
aad
iret
daa
nop
adc
xchg
add
lds
jle
dec
and
sbb
jno
lret
mov
lds
notb
mov
lret
pop
stc
ret
push
cmp
lret
sbb
jge
add
cwtl
arpl
push
xchg
mov
inc
je
leave
icebp
rcrl
sbb
lret
cmp
popa
push
lret
and
cwtl
repnz
test
mov
inc
mov
xchg
mov
push
mov
push
lret
test
mov
push
jb
sub
mov
pop
push
lret
mov
inc
pop
ss
int
insb
iret
repz
pop
ret
lret
stos
nop
dec
xor
lret
or
mov
and
sti
mov
lret
sbb
fcoms
mov
outsl
jb
and
out
jle
lret
inc
lret
int
lret
push
xorb
push
loop
shll
cmp
icebp
mov
xchg
mov
dec
jge
pushf
frstor
ja
dec
push
push
cmp
js
add
push
xor
iret
outsl
dec
pop
leave
or
nop
mov
sbb
lea
sub
inc
add
or
hlt
push
jg
pop
cmp
xor
mov
pop
mov
xchg
sahf
jo
sub
int
mov
pop
out
scas
sbb
and
into
xchg
mov
cwtl
pop
add
mov
js
inc
adc
into
and
lret
lret
cmp
xor
lret
pusha
cmp
insl
xchg
adc
mov
lret
cmp
push
lcall
xchg
dec
mov
cmp
enter
loop
lret
mov
add
xlat
lret
lock
insl
and
ror
xchg
and
popa
xor
leave
shlb
lods
fistpll
sub
dec
jnp
jg
test
dec
scas
mov
repz
pop
scas
add
or
loope
cmp
sub
rcl
xchg
test
xor
sub
ljmp
aaa
jl
movb
cmp
addb
int3
push
mov
stos
adc
jbe
xchg
lret
mov
mov
xchg
test
adc
jns
inc
in
dec
movl
cmpsl
jo
imul
push
adc
cmc
sub
js
in
adcl
int
pop
lods
and
cmp
or
lds
push
sarl
mov
stos
ja
scas
orl
inc
sbb
mov
push
lret
mov
adc
push
test
xlat
scas
es
pop
fdivs
lret
mov
mov
leave
iret
push
mov
or
mov
dec
test
xor
int
insb
xor
mov
lret
lcall
out
cmp
into
jecxz
or
cmpsb
add
lret
pop
sub
mov
lret
aaa
mov
std
push
lret
jno
sub
lret
pushf
dec
bound
adc
je
sarl
lret
out
adc
gs
leave
dec
mov
js
sub
dec
cmp
xchg
sahf
lock
andl
scas
mov
or
arpl
cli
outsl
leave
or
push
mov
aad
sub
pop
icebp
imul
lcall
xchg
cmpsb
sbb
mov
pop
push
loopne
lret
mov
inc
stos
mov
es
lea
aas
mov
call
xchg
lret
and
icebp
dec
aam
mov
scas
rolb
adc
cmp
lret
out
cmp
lret
mov
and
jnp
loopne
icebp
mov
arpl
add
mov
mov
ljmp
icebp
lret
cmp
sub
iret
lahf
mov
jo
cmp
mov
mov
imul
addr16
dec
mov
int
lds
data16
jg
scas
xchg
iret
aam
mov
or
sbb
cld
pop
out
or
xchg
js
lcall
loopne
int3
data16
mov
and
inc
dec
cli
mov
sub
js
cli
or
push
fcmovb
mov
lret
mov
dec
or
ja
lret
sti
ret
das
mov
lret
and
xchg
test
cmp
data16
mov
pop
stos
inc
lret
es
cwtl
addl
jle
xchg
jno
lret
push
sub
push
jo
push
xchg
shll
adc
inc
cmp
scas
lret
mov
dec
fdivr
int3
idivl
mov
cmp
mov
dec
cmp
jns
in
lret
inc
or
jl
lret
je
mov
leave
shr
or
jmp
aad
or
mov
int
mov
cld
push
insb
mov
iret
fcomip
aaa
sbb
push
test
lahf
clc
jae
push
out
lret
pushf
and
js
or
cmc
mov
ffreep
add
lret
or
ret
xchg
pop
insl
testb
push
sti
dec
popa
out
lret
fdivrs
sub
int3
fsqrt
lret
jne
js
das
push
cmpb
mov
fmul
xchg
in
mov
xchg
cmp
lahf
loope
je
in
pop
popf
stos
sub
lea
fwait
out
push
repnz
mov
mov
sbb
mov
jnp
decl
mov
scas
xchg
in
lea
jne
push
or
or
sbb
xlat
lret
clc
sbb
mov
int
lcall
pop
scas
lret
cltd
repnz
in
mov
mov
loopne
jne
gs
cmp
in
les
rcll
inc
or
mov
jbe
cwtl
xchg
mov
shlb
mov
sti
jle
lret
and
mov
lret
cmp
push
xlat
jo
sahf
sbb
or
add
cmp
loopne
lret
subl
rclb
pop
in
lret
cmp
or
out
inc
js
int
mov
pop
mov
mov
pop
aas
add
dec
inc
xchg
ror
adc
imul
jbe
xchg
pop
int
xchg
inc
vminps
jb
fmulp
rorb
and
into
fwait
add
jle
scas
movsl
cmp
andl
lds
push
orl
cmp
fs
jecxz
mov
inc
ret
addr16
push
jg
rorb
out
mov
adc
mov
movsb
pop
inc
sbb
int
hlt
xor
fcmovnu
lret
nop
pusha
mov
fdivrl
leave
add
mov
adc
lret
fdivrs
inc
out
lret
inc
rcrb
frstor
cld
pop
lret
mov
xor
cmc
loop
ja
add
pop
xor
xchg
xchg
or
lret
sbb
pop
adc
enter
xorl
adc
out
mov
in
inc
and
cld
jno
xor
jns
roll
mov
mov
daa
pop
lods
es
repnz
mov
lret
sarl
xor
adc
int
inc
cmp
mov
call
jle
adc
lods
lret
mov
lods
lret
and
in
and
sbb
mov
dec
sti
adc
push
out
stos
lods
adc
lret
sbb
insb
mov
lret
sub
pop
gs
in
rcrl
dec
pushf
adc
add
addl
test
mov
dec
sub
lret
or
push
ficoms
jnp
cmp
push
push
pop
mov
ja
add
inc
imul
dec
sbb
inc
loopne
lret
push
mov
xchg
and
int
add
push
xor
jmp
adc
call
mov
inc
pushf
stos
sbb
mov
lret
add
data16
insb
pushf
ret
xchg
push
sub
or
gs
out
lret
aaa
stos
shll
fiadds
mov
test
push
scas
xor
jae
fs
mov
cli
loopne
sbb
nop
jno
and
or
pop
aad
ljmp
shrl
iret
repnz
movsl
pop
fstpl
lret
xchg
xchg
cmp
loope
lret
iret
or
lods
ss
stc
mov
fisttps
push
mov
sub
or
mov
loop
add
imul
stos
add
iret
fstpt
je
lret
xchg
pushf
push
push
out
cmp
sbb
jmp
and
and
jo
adc
arpl
inc
je
dec
mov
fldcw
stos
push
dec
lret
push
lret
inc
data16
or
ss
inc
aaa
fcomps
repz
aas
lahf
lret
stos
mov
cmp
or
popa
scas
loope
and
lret
lds
lret
dec
add
push
lret
mov
ds
les
cmp
sbb
cmpb
lret
insl
push
cld
jge
stos
pop
icebp
int
xchg
inc
lock
pop
sub
cmpl
inc
icebp
sub
push
mov
icebp
sbb
movb
aas
xchg
push
adc
lahf
loop
xor
adc
scas
pop
fstp
mov
lds
cmpsl
xchg
lcall
lret
fsubl
loopne
or
push
dec
add
lret
movsl
mov
icebp
lret
adc
add
lret
pusha
push
sub
aaa
movsl
mov
sub
cmc
lret
and
out
lret
sahf
icebp
call
xchg
lret
dec
pop
loope
mov
cmc
lods
push
cmp
adcb
data16
or
lahf
ss
push
sbb
add
sub
xchg
ret
out
aas
fwait
shl
add
adc
cmpl
lcall
lret
pop
rcrb
adc
shrb
pop
lret
pop
jnp
jge
ja
aad
subl
stos
pop
test
out
out
sbb
into
sbb
clc
or
rcrl
popa
int
lret
and
inc
iret
lahf
jns
jle
out
aad
adc
xchg
fs
lds
lods
cmp
lret
pop
shl
cvtps2pi
mov
pop
lret
mov
push
loopne
ret
lret
or
repz
mov
fwait
lret
xchg
fs
aad
into
mov
ss
or
push
lret
mov
cli
xchg
mov
das
mov
sbb
fxch
aad
xchg
mov
loop
leave
add
jecxz
add
push
fmull
jl
fstpl
xor
lret
inc
mov
aad
xchg
pop
arpl
movsl
push
dec
mov
lret
mov
jae
xchg
lods
cmpsb
mov
xchg
roll
jns
jge
lret
mov
or
cmpsl
jbe
push
sarb
repnz
mov
rolb
aam
add
dec
lret
xchg
mov
jle
inc
sti
cmpb
popa
push
xor
push
out
xchg
lret
and
dec
leave
repnz
loopne
loope
add
cmc
sbb
int
jns
fisubl
cwtl
lret
push
fimuls
addr16
jg
lret
jmp
dec
es
xor
lret
push
pop
out
lock
and
lret
jnp
out
push
es
fmul
and
lret
subb
and
sub
mov
jne
lret
sbb
mov
das
jmp
leave
push
push
or
mov
jle
pop
mov
icebp
add
push
jle
dec
sub
popa
mov
fistl
mov
sbb
daa
sbb
push
adc
and
pop
and
jo
jge
addb
icebp
sub
pop
shlb
cli
xchg
lret
loop
push
cmp
aad
shrl
adc
mov
or
pop
push
insl
mov
insb
pop
jns
sbb
in
enter
arpl
mov
or
test
mov
incl
icebp
xchg
cmpsb
pop
mov
jo
and
int3
adc
or
sub
mov
pop
ret
lcall
cmc
loopne
push
cmp
aam
mov
decl
insb
out
bswap
movsl
and
out
add
outsb
lret
xor
enter
jle
fadds
pop
lret
movsb
mov
lret
ret
loop
adc
push
mov
push
mov
rcrb
cmp
dec
std
lods
int3
lahf
xchg
pop
sub
cmp
mov
imulb
cmp
int
sub
jmp
adc
or
gs
fs
pop
push
mov
loop
push
or
repz
xchg
pop
inc
lret
inc
pusha
jp
and
mov
popa
and
sarb
push
lret
shl
xchg
inc
test
lret
insb
xchg
mov
fistps
dec
pop
xchg
lret
push
mov
cmpsb
push
outsl
lret
repnz
inc
int
add
js
or
cmpsl
inc
lret
push
pop
jmp
clc
cwtl
and
mov
arpl
test
push
fwait
mov
inc
jb
inc
pop
and
push
mov
roll
push
push
lret
xchg
scas
pop
out
xor
push
imul
adcb
inc
test
push
adc
scas
dec
xor
xor
xchg
rolb
jp
xor
lret
push
shll
jp
cli
ss
xchg
inc
dec
arpl
leave
aad
pushf
ljmp
dec
pop
dec
aam
pop
jmp
inc
mov
lret
stos
lret
in
pop
icebp
xor
in
xor
insl
lods
lret
pop
mov
lret
lret
or
aas
sti
ja
cli
jne
insb
push
js
pop
mov
push
sti
dec
or
jnp
rcrl
popf
jle
bound
lret
aas
pop
xor
xor
mov
push
js
test
push
push
lret
inc
jp
pop
outsb
add
popa
pop
jl
roll
cwtl
xor
int3
or
ret
xchg
jne
sbb
in
sub
test
fidivl
ljmp
ja
cli
call
ror
in
inc
into
mov
data16
je
stc
dec
jae
scas
pop
loope
lret
mov
das
adc
int
jns
repz
test
sub
and
jb
mov
pop
push
scas
jmp
mov
lret
sub
sub
lret
sar
int3
sub
sbb
scas
roll
ljmp
lret
inc
mov
mov
insb
lret
or
and
mov
sti
jnp
lret
enter
hlt
imul
in
ja
sub
push
add
leave
mov
cli
or
cmp
sub
push
jmp
mov
mov
pop
dec
mov
stos
in
inc
xor
dec
fisttps
mov
aaa
mov
sub
pop
cmp
out
mov
test
inc
int3
movsb
cwtl
or
or
mov
lret
jl
shlb
or
adc
jbe
pop
sti
rcrl
mov
pusha
jg
mov
dec
aaa
cmpsb
lret
xor
loopne
imul
mov
insl
cmc
sbb
lret
lods
pushf
dec
es
fcoml
test
mov
es
cld
mov
inc
rcll
cs
out
lds
xor
and
and
fisubrs
and
sub
push
lret
sub
adc
pop
cmp
fldln2
jno
andl
shrb
bound
nop
cwtl
push
lret
repz
or
mov
ror
push
inc
mov
jae
cwtl
lret
mov
adc
lret
popf
imul
mov
icebp
jb
sub
jno
call
test
sbb
je
xchg
sbb
lret
daa
dec
push
jg
jge
push
loope
pop
pop
repz
dec
adc
add
xchg
test
outsb
lret
xchg
popf
sub
test
shlb
cmp
fs
xchg
cwtl
in
cmp
xchg
sub
shrb
outsl
and
ret
lret
mov
xchg
lds
xor
mov
ljmp
fcmovnb
adc
jecxz
push
push
push
in
lret
mov
xchg
add
dec
dec
xchg
int3
inc
inc
jo
int
add
out
dec
xchg
sbb
sbb
lods
mov
popf
sti
rorl
xchg
fsubl
adc
test
dec
cmpl
sbb
jmp
pop
cld
in
or
fstps
jae
mov
insb
push
add
lcall
cwtl
lock
sub
xor
cmp
ss
or
jo
mov
jmp
pusha
lret
gs
pop
arpl
dec
lret
cmpsl
inc
and
out
fs
stos
ljmp
sbb
jns
mov
scas
std
pusha
sbb
orl
jnp
mov
lret
sub
fildll
adc
push
into
scas
mov
lret
xchg
fs
shrb
mov
loopne
es
movsb
pop
clc
lret
cmp
scas
jnp
mov
push
out
pop
push
cmp
and
int
fildll
inc
into
fmulp
jb
dec
and
push
cmc
cmp
dec
push
jo
sub
call
lea
jecxz
pop
jp
fists
adc
lret
loop
andl
int3
sub
sub
fucomip
xchg
add
pop
leave
pop
fcmovb
or
dec
lret
repnz
orl
lret
jle
ret
jl
push
push
popf
cmpsl
mov
jle
sub
fmul
repnz
in
push
ljmp
lret
loop
in
mov
adc
jecxz
int
cmp
ror
ljmp
dec
ljmp
pop
stos
rcr
aaa
ret
sub
outsb
push
aas
popf
ss
shll
cwtl
sbb
sar
dec
add
or
adc
mov
adc
push
adc
or
adc
aad
mov
lret
testl
xor
shr
scas
inc
sub
mov
test
inc
lret
sbb
add
push
dec
aaa
inc
lahf
lock
lret
scas
and
outsl
cwtl
mov
roll
ret
shlb
icebp
lret
enter
lret
ret
ds
mov
in
das
or
lret
test
adc
dec
add
xlat
andl
cli
sti
mov
xchg
nop
lret
repnz
int
mov
imull
stos
inc
push
mov
lret
xor
dec
lret
xor
jmp
sub
sub
pop
aad
pop
lock
lret
fs
xlat
mov
add
jecxz
dec
pop
call
andl
rorb
xor
fwait
popa
or
pop
test
lret
ret
inc
test
pop
stos
movl
pusha
shr
lret
or
aaa
mov
pop
fbld
mov
js
sbb
inc
je
fnsave
dec
inc
imul
pop
mov
cmpsl
mov
or
mov
call
leave
jne
and
cltd
stc
leave
imul
dec
push
sti
cmp
shrl
gs
in
test
cmpsl
lret
push
es
adc
cmpsb
mov
cmc
push
push
pop
stos
addr16
lret
je
push
cmpsl
ja
jbe
lret
xor
xchg
jl
dec
jo
int
pop
jg
sbb
jbe
popf
xchg
int
cmp
and
mov
arpl
push
cs
cmp
int
das
and
ljmp
push
push
pop
int
aas
nop
push
adc
and
mov
and
lods
je
cmp
and
iret
lcall
aad
js
repnz
icebp
sbb
inc
dec
mov
push
iret
ret
std
dec
sbb
adc
out
add
mov
sbb
test
push
stc
cmp
lret
mov
mov
add
adc
dec
ffree
push
daa
outsb
sub
out
cwtl
out
lret
iret
dec
mov
push
sbb
xchg
fcmove
test
xor
insl
pop
repz
mov
les
shll
add
fwait
lahf
lret
imul
lret
jg
shrb
jmp
int
push
stos
mov
leave
mov
sub
shrl
cli
pop
jmp
mov
iret
dec
lret
cltd
int3
aas
test
stc
lret
cli
mov
cmp
sub
push
sub
add
xchg
icebp
dec
lret
adc
mov
call
test
lret
pop
lock
rorb
push
sub
les
shl
lds
mov
clc
out
loope
stos
jmp
mov
mov
rorl
pop
mov
int3
cmc
ret
jmp
insl
leave
pop
add
dec
mov
mov
dec
ljmp
scas
cmp
orb
mov
lret
or
test
xchg
div
cmp
outsb
mov
push
add
xchg
imul
dec
cmp
cmc
mov
dec
inc
rdpmc
xor
out
loopne
mov
mov
sbb
lcall
cmp
jle,pt
decb
dec
pop
push
xor
stos
mov
pop
cwtl
mov
leave
cmp
push
mov
cmp
push
outsb
lret
mov
out
or
fisubrs
dec
js
cmp
fdivl
stc
sub
mov
enter
outsb
mov
add
mov
orb
in
fisubs
mov
and
jecxz
test
std
arpl
sbb
pop
fsubrp
test
mov
lret
orb
dec
lret
jmp
inc
es
enter
out
clc
outsl
jl
mov
pop
lret
jp
jmp
mov
pop
inc
mov
or
sub
imul
and
call
jmp
lcall
cmpsl
push
or
pop
stos
xchg
int3
lret
xchg
mov
lea
mov
loopne
pop
jne
stc
int
sti
mov
lods
jle
mov
data16
cld
pop
add
mov
dec
lret
mov
xchg
cs
cmpb
loope
into
mov
subl
pop
movsl
dec
pop
bound
cmp
sbb
and
mov
iret
test
in
cmpsl
dec
out
ss
cmp
mov
push
sub
mov
add
popa
scas
cwtl
and
add
mov
loope
dec
lret
sahf
sbb
test
xchg
fwait
lcall
dec
pop
xlat
dec
xor
inc
outsl
popa
mov
mov
dec
notl
adc
xchg
insl
add
shl
in
sbb
jg
sub
cltd
lret
dec
sbb
and
fld
xor
lret
push
mov
loop
cmp
outsl
inc
out
lahf
lret
pop
ret
adc
xor
pushf
fnstcw
arpl
int3
rcll
sub
lret
jae
lods
outsl
in
gs
icebp
out
xor
test
imul
rol
je
inc
push
or
cld
movsb
or
nop
lret
push
jecxz
or
imul
cmpsl
int
xor
mov
mov
lods
nop
and
stos
lret
cmp
pop
in
pop
mov
lret
rcrl
mov
add
push
int
leave
cli
or
mov
leave
cmp
xchg
jne
sub
pop
into
sub
int
sbb
sub
sarb
jp,pt
sar
stos
or
push
push
inc
cmp
fdivs
ss
xor
mov
dec
dec
cwtl
sub
adc
sub
test
jbe
sub
cmp
mov
test
jl
scas
inc
push
dec
mov
pop
loop
test
out
ljmp
test
or
cmp
jno
int
lret
into
es
pop
or
dec
dec
mov
jno
outsl
rol
or
lods
leave
xchg
jmp
add
bound
lret
pop
outsb
push
in
mov
jg
or
sub
scas
dec
inc
fisubrs
inc
fsubrs
stc
in
fdivl
sub
mov
mov
nop
adc
leave
dec
sbb
sub
lret
out
hlt
test
jl
dec
js
rcll
out
movsb
lret
cmp
lods
ljmp
int
sub
das
fimull
inc
inc
cmp
dec
pushf
fmul
inc
lods
sub
repnz
leave
dec
xchg
arpl
add
jl
into
cmp
cmp
mov
mov
mov
mov
push
shrb
fimuls
fdivs
int
mov
cmpsl
lcall
adc
xlat
add
rcrl
in
sbb
push
pop
jb
enter
pop
add
test
add
aaa
dec
push
iret
shrb
mov
cs
jmp
call
stc
rorl
mov
or
cmp
or
int
notl
lret
in
inc
dec
jo
jle
outsb
mov
ljmp
cli
lods
fstpl
sub
xchg
lret
out
mov
xor
xchg
push
cmc
adc
add
fwait
ss
stos
lret
lcall
nop
lret
shll
xor
or
scas
xchg
and
lret
dec
xor
push
mov
dec
movsb
lret
jo
add
mov
rorb
ja
ret
roll
xchg
adc
fstps
loope
push
ds
cmc
inc
sbb
mov
leave
pop
xor
int
mov
pop
lret
cltd
adc
or
push
sub
xor
fs
sti
movsb
pop
nop
push
xor
aaa
dec
lret
movsl
cmpsb
jg
stos
inc
in
lret
in
jb
sub
das
sub
repz
mov
pop
dec
cmc
movsb
or
push
jnp
rcl
scas
sbb
dec
repnz
cli
pop
dec
gs
xchg
lret
dec
inc
hlt
out
sub
int
push
jne
xchg
iret
loopne
in
push
leave
es
lret
stc
shlb
adc
popf
add
aaa
jns
lods
xor
jae
aam
mov
jno
out
incl
test
popf
daa
loopne
lret
fdivrl
loop
cs
mov
std
ss
ret
clc
stos
lret
push
xchg
pop
push
mov
sahf
sub
or
stos
sarb
ret
lret
mov
or
pop
in
sti
dec
lret
add
jl
iret
xchg
mov
addb
xor
jge
sub
les
sahf
mov
push
lret
out
rclb
sub
test
loope
shl
fucomip
sub
insb
movsb
in
clc
mov
cmc
fildl
pusha
push
outsl
cwtl
xchg
xchg
lret
cmp
sub
jg
or
divl
pop
xor
cmp
lret
out
divl
mov
xchg
push
loop
hlt
cmpsb
push
cmpsl
mov
int
or
mov
popa
cmpl
or
lret
adc
addb
add
push
mov
push
push
jno
mov
mov
cli
sarl
sbb
mov
icebp
mov
popa
and
mov
xchg
loope
ret
lret
insl
in
in
negb
mov
adc
shrl
shl
insb
push
repz
jne
cli
dec
and
lds
lret
push
adc
xlat
add
cli
imul
jge
test
add
inc
lret
xchg
pop
and
sbb
shrl
dec
fcmove
lahf
xchg
push
fisubl
jb
in
pop
xchg
lret
test
stos
sahf
lret
dec
sub
imul
in
dec
out
repz
push
lret
cwtl
adc
add
mov
cmp
int
jge
jne
arpl
sahf
mov
pop
lret
orb
mov
mov
aaa
sbb
push
sahf
push
dec
cli
out
jnp
cltd
shrb
fsubl
movsl
add
stos
lret
push
mov
stos
push
xchg
les
addr16
sub
lret
dec
cld
xlat
xor
orb
xor
xor
fadd
cwtl
pop
push
push
jmp
sbbb
mov
lds
decb
inc
fcmovne
mov
lret
pop
jae
and
xchg
jns
sub
adc
mov
pop
test
and
cld
je,pt
lret
sarl
gs
dec
scas
cwtl
daa
inc
rclb
cmp
push
pop
lret
out
inc
clc
adc
adc
or
xchg
loope
mov
lcall
fs
leave
scas
ja
fmull
ror
jno
add
push
lret
jmp
fcoms
lret
sbb
out
lret
ja
sbb
xor
inc
lret
pusha
dec
lock
aam
sub
lret
dec
push
les
daa
xchg
mov
sbb
jmp
lret
push
adc
sbb
scas
int
inc
test
add
cmc
dec
stos
adc
cs
inc
gs
mov
insb
fs
in
mov
adc
movsb
dec
fwait
lods
popf
add
lret
fidivs
pop
ss
sub
pop
gs
dec
dec
xlat
push
addb
lret
lcall
insb
pushf
hlt
sarl
pop
mov
xchg
inc
and
lods
push
sahf
sub
icebp
cmc
pop
or
inc
lret
mov
mov
jg
out
lock
ret
lret
cli
roll
mov
int
xlat
orb
jg
inc
out
or
sub
jmp
push
cwtl
and
add
sub
lret
mov
dec
pop
cmp
and
jmp
lret
shll
stos
pop
scas
test
nop
xor
sbb
sub
or
sbb
lret
cmp
mov
frstor
in
loope
mov
fiadds
jbe
fldcw
adc
icebp
enter
sbb
hlt
add
jmp
imul
push
cwtl
loop
sub
lret
adc
push
sub
shll
mov
jl
insl
jb
or
xor
pushf
fwait
lret
fmulp
dec
inc
cltd
lret
sbb
lcall
sbb
xorb
inc
add
adc
or
pop
mov
dec
mov
xchg
pop
lret
pop
mov
jecxz
lret
mov
pop
push
and
popf
lret
loop
daa
inc
sbb
adcb
jge
lret
dec
xchg
jns
sarl
aaa
stc
mov
pop
lret
fiaddl
ss
add
add
nop
jle
outsb
lret
lods
hlt
mov
fstp
into
leave
repnz
in
dec
test
dec
or
lret
pop
push
jmp
mov
xor
adc
push
cmpb
shlb
jnp
lret
inc
mov
adc
ss
arpl
mov
mov
test
push
stc
push
je
cmp
inc
jns
lret
leave
jnp
cwtl
gs
int
out
or
mov
lret
sbb
aam
test
inc
out
push
push
lret
data16
add
dec
in
stc
mov
lret
das
sub
rcrl
xor
xor
fdivs
ret
and
dec
clc
dec
push
push
lret
and
lret
pop
mov
adc
xor
lret
inc
jge
sbb
fimuls
iret
sub
mov
icebp
add
inc
sbb
push
js
lods
lret
fbstp
dec
outsb
stos
cmp
sbb
into
dec
push
pop
xor
dec
mov
jb
loop
clc
push
add
jb
cmc
lret
jle
int
jnp
imul
loop
clc
xor
lret
lock
mov
shll
sbb
dec
jecxz
repnz
lret
shll
xor
and
or
or
sar
dec
cltd
jecxz
dec
movb
dec
mov
xchg
movsb
lret
stc
lahf
add
lret
loope
adc
pushf
jno
lret
cmpsl
xor
pop
sti
xchg
cmp
lret
fisubrl
fsubr
pop
adc
inc
lret
fisttpl
ret
adc
jmp
mov
and
rorl
stos
xor
jle
and
test
rol
int
int3
sub
mov
loopne
ret
and
lea
in
leave
inc
fs
mov
dec
sbb
repnz
stos
push
cmp
sbb
movsl
lds
add
rcrb
mov
mov
xchg
adc
jb
pop
cmovnp
imulb
fisubrs
fwait
into
mov
add
lret
clc
dec
cmpsl
dec
mov
add
lret
push
mov
cmp
ja
mov
dec
adc
lcall
adc
mov
xor
data16
pop
lret
arpl
jo
cmc
ret
lds
pop
int
aad
and
add
lret
mov
outsl
xchg
aas
leave
xor
jo
or
and
repz
dec
xlat
cmpsb
sarb
lret
leave
int
mov
out
push
aam
jno
out
js
fistpl
xorl
stos
je
aaa
jo
lret
xchg
pop
cmp
stc
outsl
sbb
mov
sub
jg
push
push
cs
bound
inc
movsl
pop
or
lcall
mov
cmp
fstpl
xchg
jb
lret
bnd
imul
je
adc
dec
lods
out
hlt
cmp
inc
pushf
lret
shlb
sbb
jmp
imul
jns
outsl
add
mov
jae
in
or
lret
mov
pop
inc
arpl
cli
out
sub
lret
and
dec
pushl
lods
adc
loopne
lret
or
push
and
dec
popl
iret
adc
jp
mov
cmp
loop
inc
xchg
dec
aas
cwtl
dec
jb
scas
xchg
sub
xor
out
push
lret
cmp
loop
mov
ret
sbb
sub
mov
mov
mov
mov
rolb
xor
sbb
iret
pop
push
lret
sub
sub
mov
jmp
lret
mov
mov
lret
xor
jmp
aas
cltd
loopne
add
mov
std
cmpsb
push
pop
xchg
aad
push
lret
adc
je
or
xchg
mov
clc
mov
mull
sti
mov
mov
jo
int
push
push
or
inc
dec
insl
dec
test
cmp
mov
nop
lock
dec
dec
sbb
leave
sti
aad
testl
test
inc
or
jae
lock
sub
dec
dec
movl
or
dec
sarb
lret
xor
dec
jle
mov
mov
sub
daa
lret
push
dec
movsb
mov
je
push
pop
dec
leave
test
ficompl
adc
leave
xor
out
sbb
pop
pop
out
push
aaa
jle
stos
in
lea
fdivrs
and
inc
lret
mov
js
dec
mov
shll
or
movsl
push
ljmp
lods
mov
lret
mov
jl
dec
das
stos
lret
or
mov
in
fildl
mov
lret
loop
and
test
lret
or
dec
ss
jb
xor
sbb
pop
jae
xor
arpl
cmp
adc
push
dec
out
call
lret
jecxz
in
addr16
dec
mov
dec
adc
test
aam
lret
stos
add
xor
cmp
xchg
in
and
movsl
lret
inc
je
jmp
lret
jne
mov
cmpsb
fnstsw
lea
lret
int3
dec
cmpb
add
mov
mov
shll
popf
gs
push
repz
into
push
ljmp
test
leave
mov
add
test
mov
sub
lret
push
divb
test
add
sbbl
scas
and
inc
clc
aas
sbb
cmpsl
mov
sarb
lret
cmc
dec
sub
std
mov
and
jbe
sar
and
jo
push
fdivrl
or
lret
add
mov
testl
movsb
cltd
cmp
fldcw
push
lret
adc
dec
lret
pop
je
sbb
rcr
and
or
loopne
pop
out
push
mov
pushf
in
icebp
pop
sbbl
cmpb
insb
lret
andl
push
mov
stos
test
scas
ror
sbbb
in
imull
dec
das
push
xchg
ret
jo
cmp
leave
shrb
gs
leave
push
cmc
push
jg
mov
stc
cmc
imul
push
jae
xor
pop
subb
lret
mov
sbb
sub
ffreep
dec
lock
jae
lds
sub
iret
or
jns
dec
clc
mov
lret
lock
mov
ljmp
ds
xchg
cmpsb
jl
dec
sub
mov
int
pop
or
and
mov
nop
push
lret
jo
push
out
xor
ja
lcall
sub
xchg
mov
mov
pop
mov
fs
push
xor
mov
lret
gs
test
pusha
jge
and
shll
or
rol
enter
dec
fidivs
maxps
int
lods
xchg
rolb
adc
xor
pop
lret
ret
aaa
popf
push
cmp
mov
jle
ds
push
fisubrl
in
lret
ss
xor
daa
iret
add
jmp
sub
pop
lret
pop
pop
adc
sbb
lret
push
int3
jbe
lret
xchg
and
cs
popf
push
xchg
xchg
mov
mov
leave
xor
inc
dec
leave
scas
push
sahf
mov
add
clc
push
pop
lret
in
mov
xlat
lret
fmull
sbb
jmp
popf
rcrb
popa
mov
xchg
out
gs
lret
hlt
faddl
mov
sarl
in
sub
pop
sbb
fistl
cmc
lret
test
dec
icebp
lret
decl
dec
stc
negl
sub
lret
bound
pop
cmpsl
mov
or
cld
mov
push
int
push
jp
dec
xor
out
mov
lret
push
dec
clc
inc
xchg
xor
add
sub
fildl
pop
pop
insl
pop
adc
ljmp
scas
xchg
aaa
pop
lret
jle
add
call
das
jno
je
xchg
push
lret
sbb
cmp
lret
lds
jg
mov
cli
stos
or
xor
insl
int
pop
add
in
lret
add
lods
cmp
jmp
dec
and
addr16
rcrl
mov
dec
xchg
stos
mov
mov
lret
dec
inc
aam
sub
aas
lret
jecxz
and
in
adc
aad
and
sub
fstpl
jno
mov
jnp
stos
shll
pop
mov
push
push
lret
pop
movsl
mov
mov
xchg
sub
cmpb
lret
push
add
add
mov
lret
in
xor
dec
iret
flds
adc
sub
inc
ss
in
pop
sahf
mov
and
mull
lret
dec
ds
xchg
cmp
aaa
or
ror
shlb
mov
mov
lret
lods
out
dec
test
cli
les
push
sub
dec
repz
into
lret
loope
pop
cli
ljmp
mov
pop
cmp
jne
hlt
shll
mov
adc
push
cmp
or
inc
gs
jns
cmp
or
ret
dec
inc
fcomip
cmp
push
dec
xlat
icebp
mov
testb
and
pushf
insl
int3
pop
lods
push
sub
out
jle
sbb
movsl
idivl
je
cmpsl
fprem
aam
lret
and
xor
push
fs
sub
mov
or
sub
fbld
cli
and
push
lds
mov
sub
or
jb
mov
mov
hlt
leave
cmpsl
ret
xchg
add
jecxz
jg
pop
sub
fists
pop
push
lret
mov
dec
clc
ljmp
mov
in
cld
xchg
push
daa
outsl
sarl
outsb
adc
mov
mov
and
sub
rcl
lret
not
mov
in
lret
mov
jmp
mov
pop
int3
clc
lret
dec
nop
push
out
lret
xchg
dec
popf
push
add
imul
cwtl
and
mov
lret
aam
loopne
stos
roll
or
adc
out
js
lret
jmp
rcll
jg
pop
enter
fisttpll
lock
xchg
lret
pop
jbe
pop
add
mov
loope
sbb
and
jns
mov
mov
imul
mov
dec
push
cld
lret
into
mov
adc
fstps
in
in
push
mov
outsl
lods
fdecstp
lret
lret
dec
adc
cmp
shl
out
cmpsl
xor
and
sub
lret
call
inc
enter
stos
nop
lds
das
dec
inc
sahf
imul
int
jle
add
ds
mov
aaa
repnz
enter
or
ret
lods
or
leave
mov
into
mov
std
in
popf
fdiv
stos
test
or
scas
dec
mov
cld
or
jo
pop
xor
push
mov
insl
mov
lret
jp
movb
mov
jge
popa
jb
in
add
dec
xor
leave
je
jo
loopne
cmc
cmp
sub
mov
aam
int
outsl
dec
out
clc
sub
cmpsb
mov
pop
int3
lock
jle
xor
shrl
fmul
cmp
or
lcall
push
add
daa
rcll
mov
iret
out
mov
cmp
jns
in
mov
inc
adc
push
mov
fildl
or
fisubrl
in
or
imul
inc
rol
or
or
pop
lret
leave
clc
int3
pinsrw
outsl
imul
lods
pop
mov
inc
sti
dec
imul
shlb
shl
lods
fcmove
dec
xlat
cmp
ret
int
push
sub
adc
push
mov
aad
lret
lods
jne
push
mov
mov
add
es
sbb
imul
cmp
fbstp
adc
mov
push
cmpsl
lret
xchg
pusha
fildl
outsb
ss
in
mov
out
mov
lret
pop
fs
lahf
je
xlat
lret
arpl
xor
and
mov
aad
lret
push
sbb
lock
test
ss
loopne
lret
or
sub
sti
jno
loope
mov
mov
sub
dec
dec
sub
and
lahf
mov
lret
cmp
mov
js
iret
test
lock
repz
loope
dec
sub
lret
mov
push
jge
fwait
add
xor
xchg
hlt
xor
vorps
inc
inc
rcrl
push
dec
data16
loope
lret
sub
jmp
outsb
aad
inc
lret
xchg
ret
scas
fisubrs
nop
ljmp
or
daa
ds
cmp
mov
int3
repz
push
jne
mov
mov
mov
gs
aam
fsubrp
jb
shr
insb
mov
popf
popa
and
loopne
insb
lret
aaa
push
sbb
sbb
ret
xchg
mov
stc
icebp
mov
push
cmp
push
insb
push
arpl
mov
inc
hlt
dec
xor
cmp
push
sbb
test
sub
mov
mov
out
repz
sbb
dec
inc
xchg
enter
pop
lret
xchg
jle
push
mov
sbb
rolb
rol
mov
cmp
mov
repz
push
add
pop
mov
sub
bound
cmpsb
enter
mov
ja
pop
push
add
mov
sarb
int
add
ret
dec
sbb
mov
xor
fstl
cltd
stos
out
dec
lret
sbb
in
lahf
fldcw
lea
cli
jb
sbb
xor
rcll
sub
int
lret
mov
add
outsl
bound
loop
sbb
jl
cmpsl
stos
adc
lret
mov
push
mov
repnz
stos
lret
popf
cmp
lret
test
sbb
mov
lock
aam
dec
cli
inc
rcr
adc
ljmp
repz
repz
fimuls
xchg
cmpsl
inc
fdiv
pop
call
mov
aam
lret
mov
mov
jb
mov
stos
ss
int
lret
xchg
dec
cld
js
sti
xor
aad
shrl
mov
outsb
insb
les
inc
int3
xorl
xlat
xor
xor
push
out
or
fmul
aam
ds
int
xchg
jae
push
add
stos
notl
sub
and
inc
test
aas
lret
orl
pushf
sbb
out
push
in
xchg
cmp
pop
lret
adc
fcmovb
scas
lret
dec
jle
cmp
xchg
in
mov
call
imul
xchg
jmp
scas
cmp
adc
xor
or
inc
lret
movsb
jne
leave
shll
mov
and
cwtl
cmp
int
stos
xchg
fsubrs
ret
pusha
jecxz
jnp
lret
lds
inc
mov
into
int
pop
mov
inc
or
idivl
jb
loop
dec
xor
sahf
lods
and
dec
lret
addr16
scas
mov
lret
xor
popf
add
mov
insl
lret
stos
pop
lods
xlat
sub
lret
repnz
in
lret
and
xchg
test
arpl
lret
sbb
add
jle
mov
xor
or
xchg
add
into
fwait
inc
dec
stos
ljmp
push
and
sbb
pushf
inc
dec
test
aas
add
out
out
repz
les
pop
movsb
daa
dec
xchg
pop
leave
cmp
jg
or
shrb
lret
mov
mov
inc
lret
or
and
test
lret
movsl
add
push
mov
inc
fmul
or
xor
dec
push
jnp
test
in
or
lret
mulb
iret
xchg
mov
lret
popa
in
mov
lret
cs
scas
sbb
cmp
adc
push
ss
push
or
xchg
cmp
push
int
gs
stos
xchg
xchg
out
lahf
inc
stc
jne
jno
lret
pop
out
xchg
sbb
or
xor
jae
lret
jmp
jbe
in
lret
cmpsb
frstor
inc
scas
or
dec
ret
sub
and
das
in
lds
imul
sbb
roll
pop
push
in
pusha
lret
hlt
mov
sub
fld
dec
fsubl
loope
mov
mov
les
pop
and
jle
lret
add
pop
inc
sti
xchg
mov
xchg
lret
scas
out
mov
lret
jbe
push
fsts
push
cmp
sti
or
sarl
imul
push
dec
xor
pop
sti
pop
jae
ds
push
xor
push
jnp
jg
repz
ror
stos
inc
icebp
mov
mov
mov
dec
lret
add
imul
sub
leave
leave
icebp
stc
inc
push
sbbl
dec
sub
lret
pop
daa
dec
inc
add
jg
lcall
fucomp
mov
xchg
pushf
add
lock
icebp
outsl
icebp
sahf
dec
or
and
and
jnp
movsl
lret
xchg
gs
push
addl
pop
cmp
ljmp
lret
arpl
sub
loopne
push
shll
je
lret
mov
dec
aam
push
daa
lret
cld
sbb
push
push
adc
iret
dec
push
lds
rorl
outsb
mov
jo
fsubp
dec
leave
mov
daa
stos
mov
out
mov
rorl
jmp
int
andb
fsubl
sub
mov
lret
pop
jmp
subl
xchg
pusha
inc
call
iret
fdiv
enter
jnp
lret
xorb
scas
or
les
lret
pop
cmp
fdivrl
inc
outsl
xchg
push
in
decb
push
lret
pop
dec
cmp
adc
push
mov
sub
and
in
xchg
dec
rcrb
jbe
bswap
daa
add
mov
lret
inc
mov
mov
call
ds
or
cwtl
int
add
repnz
dec
repz
aaa
rol
arpl
push
pop
mov
sahf
inc
cli
popf
inc
mov
push
arpl
add
in
leave
xor
ss
ret
push
cmpsl
and
lret
mov
dec
pushf
cmp
movsb
dec
jg
lret
adc
mov
mov
js
je
loope
lret
pushl
insb
add
roll
pop
aaa
xchg
sub
jle
mov
icebp
dec
mov
out
mov
sti
add
push
stos
arpl
insl
into
pop
shll
repz
jne
clc
push
out
cmpsb
add
add
jecxz
les
mov
mov
movsl
pushf
dec
popa
lods
mov
cs
lret
jmp
clc
xor
dec
inc
xlat
lret
ljmp
mov
xchg
push
std
push
movsb
repz
lret
das
push
add
jno
cli
lret
adc
test
icebp
sti
inc
fisubs
bound
xchg
sub
mov
fldt
fisttpll
pop
xorb
shrb
hlt
scas
mov
add
mov
out
icebp
mov
inc
push
popa
mov
aad
lods
jecxz
or
pop
sarl
aaa
cmc
lret
mov
push
inc
mov
dec
sbb
fisubl
pop
lahf
mov
jbe
adc
cltd
ficomps
inc
leavew
adc
loop
cld
insb
fisubrl
es
dec
and
push
mov
adc
xchg
inc
adc
sub
cmp
push
scas
sbb
lret
fs
push
lods
jae
xor
lret
aam
jbe
outsl
jl
scas
lret
mov
jnp
lret
int
mov
ror
pop
mov
fs
movsb
sbb
mov
inc
dec
ror
hlt
je
push
jmp
lcall
jb
pusha
mov
lret
add
int
cmc
stos
sub
shlb
add
pop
or
and
movsl
xchg
adc
mov
test
inc
xor
cmc
mov
pop
or
jg
pop
mov
lret
bound
int3
lock
jg
lods
out
ja
mov
xor
int
dec
ds
in
inc
or
push
lret
or
or
adc
cmp
leave
cwtl
xchg
add
pop
sub
icebp
jnp
std
out
jecxz
outsl
pop
xor
inc
lods
pop
sub
dec
add
dec
shll
cmc
or
rorb
paddusw
inc
enter
js
cs
xchg
pop
ret
fs
lock
dec
and
out
mov
mov
lret
mov
lret
movsl
das
inc
push
test
pushf
jne
mov
loope
push
cmpsb
xor
iret
xor
push
mov
mov
pop
pop
lock
in
and
out
push
imul
stos
dec
jl
adc
push
xor
xchg
xadd
mov
fisubs
iret
xchg
lret
xchg
fnsave
add
or
mov
fcmove
cmp
xor
iret
das
xor
int
addr16
xlat
mov
aam
cmp
stc
push
or
lret
gs
or
cmpsb
int
jl
dec
push
dec
push
xor
imul
jecxz
inc
xchg
push
aas
or
lcall
lret
push
xor
add
dec
jle
iret
xor
sbb
inc
cmpsl
xchg
ljmp
mov
sbb
adc
sub
xchg
lock
adc
dec
out
out
cltd
je
adc
dec
inc
xchg
imul
int
sub
stos
mov
ss
adc
stc
pop
frstor
gs
aaa
je
mov
sub
lret
clc
xlat
or
out
int3
lret
stc
bound
xchg
xor
lret
xor
sub
push
add
dec
adc
bound
leave
jmp
popf
or
or
iret
pop
and
inc
mov
rclb
mov
xorl
add
aas
xchg
leave
jns
outsb
lods
add
pop
mov
repnz
repz
icebp
arpl
cmp
dec
cmp
push
lret
mov
push
cmpsb
and
push
dec
adc
xchg
jg
mov
mov
inc
call
xchg
xor
push
sar
lret
stos
addl
push
lret
or
loope
lret
inc
dec
push
cmp
mov
jg
add
les
outsl
jae
mov
mov
pop
push
lret
sti
xchg
add
mov
jl
aad
sub
mov
add
dec
daa
outsl
adc
or
loopne
inc
mov
sbb
into
loop
jmp
push
mov
and
jae
adc
pop
dec
lret
push
inc
cs
div
and
es
dec
lret
and
scas
mov
lret
jg
fwait
push
lret
inc
cmpsb
xor
dec
sub
jp
lret
xor
ret
mov
lret
cwtl
aas
fistpll
mov
cltd
addl
mov
dec
into
lret
imul
pop
std
ja
jl
int
in
fwait
jecxz
fldenv
in
sub
dec
lcall
aaa
push
sarl
lret
hlt
cmpsl
lret
mov
js
roll
lret
lods
mov
pop
inc
ljmp
lret
test
pusha
mov
inc
push
jae
add
xchg
mov
xor
cs
in
jbe
rcll
push
ds
xchg
inc
push
lret
or
mov
lret
add
pop
mov
mov
jp
adc
dec
dec
cmp
lret
cmpsb
insl
lock
cli
mov
mov
pop
jmp
loope
nop
xor
in
pop
repz
or
mov
aad
dec
call
adc
dec
cmp
xchg
sbb
ret
enter
stos
call
imul
push
rcrl
fs
ret
lret
pop
addr16
mov
cmpsb
orl
ficomps
repnz
pop
stos
arpl
pop
fdivrl
stc
lret
iret
loope
mov
cmp
aad
sub
dec
pushf
aaa
mov
lret
xor
jne
push
mov
test
mov
cld
jnp
jb
lret
push
js
mull
jb
or
mov
inc
orl
clc
cmp
and
cmpsb
jp
dec
mov
aam
mov
movsl
or
adc
outsl
stos
aam
push
ret
and
repz
mov
psllw
push
ja
adc
loop
cmp
mov
incb
sarb
sbb
scas
add
mov
lret
iret
and
arpl
ljmp
mov
xchg
iret
cwtl
cmp
add
xchg
rorb
loope
aad
mov
aaa
fsubl
dec
mov
into
pop
xor
push
fildll
lret
inc
imul
mov
leave
dec
ljmp
mov
jmp
pop
out
mov
mov
hlt
cmp
leave
out
sub
lcall
mov
lret
call
push
mov
sub
mov
repnz
ljmp
mov
mov
inc
lcall
mov
xor
adc
mov
mov
jmp
xchg
pop
dec
inc
mov
jno
insb
fs
jnp
pop
ss
out
testb
jmp
lret
je
or
or
mov
daa
pop
pop
fstps
nop
jo
ds
sub
shll
jle
lret
movsb
mov
ljmp
add
lret
hlt
sub
pop
lock
lret
xchg
icebp
and
sbb
pop
fnstsw
lods
shrl
loop
sub
cmp
jo
lock
inc
jge
addr16
add
sub
push
lods
mov
out
rcrl
rol
and
outsb
lock
sbb
sub
lret
inc
and
lret
hlt
ret
cmp
push
out
fmull
mov
mov
icebp
pop
addr16
or
testb
ror
sub
loopne
or
jmp
xchg
inc
or
shll
mov
sbb
xchg
seto
fst
pop
pop
fwait
lret
sub
hlt
iret
mov
filds
scas
add
idivb
mov
aad
ret
jl
cmp
fwait
aas
push
lret
negl
mov
int
mov
mov
xlat
cmc
lret
arpl
outsb
jno
cmpb
lret
lods
shr
jb
cmp
cmp
es
mov
ror
int
pushl
nop
insb
pop
or
into
lret
dec
add
pop
add
repnz
xchg
pusha
out
fwait
lock
mov
pop
test
out
mov
xchg
dec
ror
lock
popa
mov
or
sbb
dec
dec
lret
fstps
lods
int
push
lret
fistpl
std
pop
enter
sub
adc
dec
scas
mov
int
cmp
pop
or
movsl
or
out
sbb
xchg
jb
push
push
insb
jae
sbb
push
pextrw
js
jne
dec
mov
fstps
and
pusha
push
lret
sbb
mov
lret
loop
outsl
ja
and
dec
lds
lret
lods
inc
ret
pop
mov
cmp
fs
jmp
mov
or
cltd
jbe
lret
pop
mov
test
dec
dec
push
jne
mov
rcr
adc
nop
dec
into
jp
leave
push
sub
pop
sahf
lret
loope
sti
cwtl
ficomps
nop
add
cmp
mov
inc
or
pop
fwait
pop
adc
mov
cmp
xchg
jae
xchg
int
jmp
sub
jl
lret
jecxz
ljmp
stos
lret
out
sub
lahf
xor
cmp
lret
pop
ljmp
sub
imul
jbe
icebp
notb
stos
lret
jge
push
cmpsl
cwtl
mov
lret
shll
push
mov
test
add
push
or
shlb
lret
mov
cmc
dec
xchg
test
cmp
sub
lcall
xor
fstps
inc
push
pop
lret
xchg
int
clc
lcall
dec
frstpm(287
mov
rolb
fstl
fcompl
push
pop
int
mov
sub
mov
out
fcomps
mov
in
lea
aad
mov
push
ljmp
sar
daa
push
lret
test
pop
push
jo
pop
push
lret
sub
push
add
push
mov
cld
shll
pop
dec
lret
inc
cmc
cmp
jo
imul
dec
sub
cmp
dec
icebp
bound
or
test
lret
test
xor
je
adc
lret
sbb
lods
mov
mov
xor
lcall
sbb
push
ds
icebp
aaa
xlat
jecxz
out
sbb
loopne
mov
and
or
adc
icebp
push
shll
loope
imul
push
mov
push
mov
and
xchg
jge
lea
popf
stos
pop
mov
mov
sbb
stos
lret
push
push
repnz
adc
add
mov
out
std
jno
stos
dec
cmp
mov
xor
das
jg
and
dec
xor
fsub
into
fldl
or
lret
scas
jge
jl
rorl
mov
ret
or
lret
xchg
mulb
jo
fiaddl
scas
lret
xor
ret
jno
sub
pop
jb
lret
cmpsb
adc
and
subl
leave
aaa
dec
inc
dec
dec
jmp
or
fistps
int
inc
pop
imul
fsubrl
dec
cmpsb
mov
mov
in
fs
das
jo
sbb
add
jae
pop
popa
lret
push
adc
lret
scas
add
dec
mov
int
shlb
in
dec
sbb
or
mov
dec
adc
mov
out
mov
add
and
pushf
lret
nop
xor
fwait
adc
lret
add
xchg
sub
add
adc
aas
es
xchg
push
repnz
inc
iret
and
jle
lahf
lret
jae
aas
aaa
leave
jecxz
jge
iret
sbb
popf
setl
adc
scas
sub
xchg
push
cmp
dec
jne
inc
sbb
sub
lret
cmc
pop
jl
xor
pop
out
imul
or
imul
jmp
fildll
and
and
jp
adc
ret
inc
sub
enter
jmp
xor
sub
inc
lods
test
popa
lcall
lret
adc
test
repz
loope
pop
daa
scas
lret
pop
cmp
mov
cmpsb
cmp
sbb
lock
sahf
lret
sarl
jmp
inc
lret
stos
fdiv
add
out
push
lret
in
and
jecxz
and
popf
out
xor
dec
mov
in
mov
mov
pop
push
sub
mov
inc
push
fwait
lret
jle
int3
or
lock
sub
aas
mov
push
mov
iret
ds
push
mov
nop
sub
out
das
add
sub
mov
dec
pop
adc
inc
jecxz
decb
int
sbbb
ffreep
add
add
mov
mov
xchg
adc
popa
pop
fs
repnz
je
sub
push
aam
pop
xchg
mov
movsl
cmc
int
or
addl
sti
lret
mov
add
lret
dec
fcompl
pop
leave
mov
cmp
mov
fucomp
test
or
mov
lret
je
mov
aas
lret
cltd
mov
andb
cmp
mov
or
dec
pop
push
push
and
lret
cld
daa
outsb
lret
aas
les
ljmp
lcall
xchg
sar
mov
inc
pop
aas
leave
je
mov
lahf
cmp
and
inc
pop
lret
insl
mov
cmp
iret
das
test
fsubrl
cmp
mov
and
sbb
or
mov
xor
mov
stc
pushf
jo
cs
cmp
inc
pop
pop
add
mov
stos
dec
cli
xchg
push
inc
cs
dec
push
mov
lret
std
int
icebp
sti
pop
jo
shll
cs
and
mov
sub
inc
outsb
lret
jno
jnp
pop
sbb
jne
imul
cwtl
mov
add
push
lret
insl
cmp
stc
cli
lret
ljmp
pushf
and
push
loopne
sbb
jne
in
adc
add
adc
sub
pop
lret
add
pop
adc
loope
rcrl
inc
leave
mov
fs
ljmp
dec
push
dec
mov
bts
or
xchg
xchg
mov
fisttpl
mov
sub
xor
jbe
or
push
in
xchg
lret
inc
mov
and
leave
mov
lret
fiaddl
popa
lret
scas
adc
or
xchg
shlb
bound
xchg
stos
in
in
loop
mov
lret
fidivs
xor
mov
mov
jecxz
loopne
push
cld
test
or
cwtl
and
std
xor
mov
sub
cmpsb
ret
cmp
gs
call
inc
xor
arpl
add
sbb
pop
movaps
out
mov
push
rcr
fsubr
or
daa
pop
aam
adc
pop
sbb
icebp
rclb
jne
lret
cmp
push
loopew
sbb
sub
lret
leave
fistl
fidivl
mov
lock
and
scas
clc
lret
test
test
mov
cltd
mov
lret
lret
push
inc
and
cmpsl
dec
ss
cli
sahf
cmc
adc
hlt
lret
jmp
std
push
sarl
or
lret
jmp
inc
fcompl
jno
adc
fldt
jl
xor
mov
push
iret
daa
hlt
dec
call
jge
add
and
pop
xor
xchg
out
or
sub
orb
cmpsb
cld
push
xchg
lret
xor
sahf
pop
imul
xor
ljmp
lret
mov
rolb
mov
es
sub
pop
icebp
add
fs
lret
sub
es
lret
or
mov
lcall
jo
lods
stos
sub
lret
cwtl
icebp
out
ret
scas
push
mov
inc
ror
add
imull
icebp
xorl
jae
xchg
and
lret
bound
outsl
cmp
lret
movsl
iret
lahf
cmp
xor
add
inc
mov
out
in
sub
addb
lret
xor
icebp
scas
sbb
lret
rcll
mov
clc
loopne
outsl
mov
test
mov
push
pop
lret
movsl
mov
jne
iret
lcall
std
adc
and
xor
dec
jp
fmuls
xchg
cmp
sbb
daa
sbb
lds
outsl
push
dec
xchg
scas
pop
inc
lret
pop
or
lret
jne
adc
ljmp
add
lret
push
jo
push
enterw
fcompl
mov
mov
jg
add
lret
adc
lods
push
add
and
push
sbb
fcoml
and
lret
mov
cli
inc
leave
ret
lret
xchg
pop
jbe
jle
sahf
lret
mov
out
and
fidivl
testl
xor
sbb
leave
mov
inc
push
push
inc
lret
xor
or
lret
test
faddl
mov
dec
push
cmp
sbb
adc
lret
mov
sbb
in
shll
rcrb
mov
out
pop
in
addr16
cmpsb
js
lret
daa
pop
lock
pop
xor
add
jmp
mov
das
mov
lret
in
adc
cmpsb
push
arpl
sbb
jecxz
ror
push
cmc
ret
test
nop
mov
jmp
loope
lret
leave
sti
shrb
mov
ret
stos
or
lret
cmpsl
pop
aas
ficomps
dec
lret
cmp
cmpsl
jle
push
mov
adc
nop
icebp
mov
cmpsl
adc
sbb
lret
movl
jbe
in
ljmp
or
movsb
rcl
push
xchg
dec
jo
call
cmpsl
insb
movl
pushf
jl
in
mov
push
lret
or
xorl
imul
rclb
pop
movsb
jo
lret
dec
pop
mov
outsl
lret
test
aam
ja
std
cli
out
xlat
lret
add
lahf
xchg
add
lret
mov
jo
jmp
or
call
xor
out
pop
cmp
pop
out
push
popf
lret
jl
xchg
test
jns
shll
and
mov
jle
jnp
jp
sar
out
lret
and
out
mov
and
jnp
adc
jecxz
shr
ret
mov
fbld
push
lea
cld
sarl
sbb
std
in
jo
call
cmp
sbb
push
dec
sbb
ss
lahf
mov
sub
cmc
dec
lret
dec
mov
ret
mov
lret
jg
push
orl
sahf
lret
into
adc
lret
out
aas
adc
sarl
call
mov
fdiv
lret
jbe
frstor
or
dec
dec
jl
int
add
push
lahf
lcall
lods
clc
xchg
xchg
leave
jns
out
inc
das
mov
jne
jl
cmpsl
lret
jg
push
ret
push
cmpsb
scas
lret
test
or
pusha
xchg
cli
lret
or
pop
inc
fldcw
nop
mov
out
pop
test
les
lret
jae
or
lret
arpl
inc
test
jnp
rolb
pop
es
adc
andb
pop
lret
sar
xor
xchg
pop
dec
data16
mov
jge
enter
or
rcll
pushf
cmp
inc
xchg
lods
stos
es
sub
cmpsl
movsb
jno
xor
mov
adc
jmp
dec
add
dec
cli
xchg
and
mov
cmp
xor
add
shl
xlat
mov
dec
and
stos
inc
test
or
movsl
addr16
xor
add
jns
ror
mov
cli
insb
leave
add
push
popf
mov
movsb
lret
fidivrl
js
out
sub
inc
dec
adc
addb
mov
int
das
fsts
push
shlb
test
or
stos
lret
sub
cmc
pop
addb
cmp
jg,pn
in
sahf
mov
push
sbb
mov
nop
sbb
xchg
jl
stos
sub
cltd
pop
ror
xchg
or
mov
jne
test
outsl
push
xor
sub
les
lret
int3
lret
sbb
push
inc
adc
insl
jne
cmc
cmpsl
adc
loopne
int
adc
les
dec
mov
xchg
lret
push
loope
push
fcmovb
fldl
nop
jp
lret
pop
mov
test
call
lret
aad
cltd
adc
push
fdivs
outsl
xchg
pop
dec
jg
jbe
mov
lret
jo
add
call
repnz
cmp
mov
jo
mov
pop
lret
xchg
dec
dec
aam
lret
ret
add
lock
lret
push
fimuls
and
insb
movsl
rorl
imul
lret
jge
mov
aaa
lret
jmp
mov
xor
inc
push
fwait
adc
daa
add
test
lret
rcl
inc
mov
lret
sbb
cmp
in
pusha
adc
inc
cld
mov
cmc
lret
pop
aas
fisubrl
insb
aad
rorl
mov
jg
xchg
dec
jp
daa
lret
mov
in
lcall
lea
xchg
repz
dec
in
les
xchg
lret
jae
xorb
or
fldenv
mov
cli
lret
repnz
iret
pop
inc
mov
cmpsl
jp
push
out
lret
xor
fnstenv
subb
in
pop
adc
lahf
push
imul
jns
lret
pop
inc
pusha
jmp
lret
adcb
dec
pop
test
rorl
and
test
pop
test
popf
lods
xchg
pop
fwait
stos
lret
sbbb
cmp
dec
out
xchg
cmp
or
lret
add
int3
inc
mov
sbb
gs
pop
mov
mov
fstps
sbb
sub
or
insb
int
mov
jo
iret
push
orb
cmp
je
test
lret
xchg
insb
shll
lahf
jl
jae
fldenv
lret
and
fistpl
mov
lret
push
insl
addr16
jo
xchg
inc
lret
push
mov
dec
jne
sub
das
xchg
xor
xchg
and
xchg
lret
shll
stos
add
test
lret
sbb
iret
scas
push
test
test
push
xchg
rclb
loope
dec
movsb
lret
daa
int
stc
mov
lret
loop
mov
movsl
lret
cmc
xor
mov
imul
sbb
sbb
inc
out
mov
and
add
jo
lret
mov
rcrl
xchg
fadds
out
sti
out
int3
das
lods
iret
and
mov
push
push
int
int
push
lret
xlat
push
adc
jae
mov
jmp
or
lret
mov
ret
dec
mov
push
pop
jg
iret
mov
jp
and
jae
fistpl
sub
fnstenv
push
hlt
movsl
loope
inc
adc
and
in
add
lret
jl
mov
cmp
lods
or
push
je
lret
test
jo
inc
xor
rcll
popf
outsl
push
lret
lods
fimull
shll
and
mov
pop
mov
pop
pop
dec
test
rolb
pop
sbb
loope
shll
cmp
mov
and
and
outsb
lret
ret
sub
out
ror
in
push
xchg
addr16
dec
int
in
out
lret
cmp
hlt
inc
stos
repz
arpl
xchg
xor
and
adc
mov
mov
lret
push
sbb
xor
add
imul
lret
test
add
imul
lret
daa
dec
xchg
dec
cwtl
cld
out
pop
rcll
lock
jp
mov
lahf
lret
mov
jecxz
lret
lret
sbb
xchg
pop
addr16
adc
cmp
mov
sbb
outsb
hlt
ficoms
adc
int
xchg
fistps
enter
xlat
mov
lret
movsb
and
mov
ds
addl
cmpsl
inc
icebp
in
pop
pusha
lret
aad
mov
sbb
cmp
stc
stos
repnz
lret
lea
ret
in
adc
pop
xor
sub
outsb
jae
sarl
mov
arpl
mov
adc
adc
js
add
add
and
lret
push
xchg
mov
pop
test
or
sub
push
lret
sahf
and
repz
lret
mov
bound
pop
mov
jbe
lret
das
mov
pop
push
lret
int
ret
xchg
scas
mov
xor
rorl
mov
mov
lret
nop
jb
xorl
popa
inc
lret
or
rcr
sbb
pop
sbb
lret
xchg
jno
xor
adc
adc
jge
dec
out
jb
pop
dec
xor
sub
into
xlat
or
pop
lret
in
ret
test
enter
int
xor
addb
je
sarb
pop
out
sbb
test
dec
adc
aad
cmp
push
std
scas
dec
mov
loopne
call
imul
addr16
mov
xor
add
dec
lret
pushf
add
push
fildll
xchg
test
divb
fdivl
sub
stos
cmp
ljmp
pop
mov
fisttpl
pop
leave
and
dec
ss
lret
sub
xchg
pop
adc
in
mov
lret
sub
inc
add
lret
addr16
out
lret
pop
or
jnp
and
mov
orl
dec
imul
js
stc
lret
adc
mov
jecxz
mov
loop
xchg
loop
or
dec
rcrl
rcrl
int3
adc
lcall
push
push
popf
add
mov
imul
jmp
lret
jb
fnstcw
or
lret
push
lods
enter
sbb
js
dec
rcll
orb
sub
lret
call
mov
lahf
imul
and
sbb
mov
lret
jb
mov
xchg
lret
divl
add
lret
pop
mov
cmp
cli
jne
sarb
lret
jae
xchg
out
pop
lret
or
sub
shrl
and
mov
and
fcmovne
hlt
xchg
sbb
lods
in
daa
lds
pop
addr16
cmp
into
in
rolb
mov
dec
mov
jl
lods
lret
jnp
mov
mov
mov
mov
lret
in
fldenv
push
sbb
dec
lret
sbb
in
xor
daa
shll
into
jg
lods
out
push
imul
ja
xor
repnz
dec
or
lret
mov
fbstp
or
inc
mov
sbb
jno
dec
push
push
das
mov
dec
cmp
lret
pusha
xchg
daa
adc
xchg
rcrl
xor
inc
and
cmp
and
mov
mov
mov
pusha
rorl
cmpsb
and
add
test
out
in
lret
cmpsl
clc
frstor
sbb
insb
adc
mov
or
shr
cld
ret
dec
jne
lret
stos
jno
sarb
push
imul
hlt
sub
cmp
mov
lret
or
add
pop
lcall
lret
out
push
pminub
mov
sbb
rcrb
test
pop
leave
or
out
js
rol
sub
lret
enter
aad
mov
arpl
outsl
inc
xchg
jmp
andl
ficoms
test
icebp
mov
lret
out
mov
out
aas
pop
push
int3
ja
les
lret
push
aaa
loop
fmull
adc
push
iret
ret
add
jae
int3
pop
in
pop
cmp
inc
mov
in
and
bswap
jl
sub
outsb
frstor
or
mov
inc
ss
sahf
fbld
jbe
loopne
xor
dec
cmc
mov
cmp
and
sbbl
leave
mov
ss
aad
roll
mov
or
or
sub
rcrb
into
mov
imulb
imul
fwait
cmp
shl
mov
sbb
lds
lret
bswap
lret
mov
adc
mov
fisttpl
arpl
inc
add
out
lret
mov
mov
test
inc
cs
push
outsl
nop
leave
mov
push
inc
jg
sub
push
frstor
das
xor
out
ljmp
lret
data16
xchg
insb
rcr
and
jg
cltd
fs
inc
dec
leave
jl
add
or
call
int
loopne
mov
lret
sahf
cs
cwtl
xchg
xor
jmp
mov
xor
sub
jle
mov
mov
dec
cld
or
lret
test
test
push
mov
shrl
outsb
into
jl
xchg
or
leave
imul
inc
lahf
adc
mov
sti
out
insb
in
mov
leave
cmp
lret
outsb
mov
mov
hlt
or
loope
cmp
jg
stos
pop
cmp
sub
cmp
repnz
lret
scas
cs
or
sbb
adc
add
dec
mov
or
lock
jne
and
insb
cmp
ficompl
jb
cmp
scas
gs
test
cwtl
dec
stos
add
nop
lret
fnsave
imul
mov
mov
adc
test
mov
adc
dec
mov
mov
push
cmp
aam
lret
xchg
mov
stos
cmp
lret
cmpb
mov
mov
xor
jo
jnp
lret
mov
xor
stc
shl
fmull
inc
cmp
repnz
and
push
or
push
ds
dec
sbb
iret
pop
call
inc
add
bound
lret
sbb
adc
nop
cmp
dec
mov
jmp
xor
inc
push
dec
shrb
mov
add
in
and
lods
outsl
jnp
lret
xor
add
xchg
add
scas
lret
pop
xchg
into
lret
mov
push
dec
push
int
push
das
lods
outsb
push
into
mov
jb
lcall
aad
lret
xorl
je
jp
or
sub
inc
mov
popl
scas
sub
and
pop
in
or
pop
sbb
out
pusha
cltd
cmp
mov
pop
int
imull
mov
dec
lret
lea
jecxz
jp
cmp
jb
push
dec
addr16
outsl
hlt
cmp
lret
add
xchg
mov
leave
lds
xor
push
stos
dec
dec
cmpsl
inc
fsubp
lret
xchg
push
aas
aad
or
shrl
out
and
jae
adc
rcr
inc
outsl
xchg
insl
cwtl
dec
loop
and
pusha
sub
in
cmc
push
sbb
inc
mov
iret
or
test
das
pop
dec
dec
mov
enter
and
adc
lret
fsubl
aad
repz
mov
push
insb
sub
std
ja
adc
daa
inc
lret
adc
pop
jb
out
or
call
lret
fwait
daa
bound
outsb
adcb
xor
les
subl
nop
xchg
mov
jns
mov
xlat
mov
iret
mov
into
imul
xchg
cmp
pop
cmp
aad
inc
lret
mov
cltd
inc
or
popa
iret
call
daa
adc
imul
ja
dec
lods
xor
and
jns
xchg
lret
lock
imul
stc
int
cs
cmc
mov
jg
add
faddp
aaa
pop
push
out
int
jecxz
int3
gs
insl
sub
fwait
lret
int
rcr
mov
in
mov
test
adc
icebp
imull
fwait
xchg
fsubl
repnz
mov
push
lret
insl
xchg
mov
incl
movsb
jge
lret
test
aaa
stos
lret
pop
xchg
adc
dec
pop
mov
out
imulb
bnd
mov
lret
lods
movsb
sti
mov
lods
int
mov
jge
call
sub
icebp
inc
test
out
divb
lahf
leave
or
or
ljmp
fs
lret
pop
repz
mov
dec
iret
enter
lret
sub
mov
mov
rorl
jl
daa
dec
shlb
jno
pop
stos
pop
mov
xchg
xor
lret
and
sbb
jle
int
lret
add
adc
aaa
movsl
lret
push
sub
test
sbb
sub
lret
cmpsb
into
inc
arpl
test
mov
in
in
jns
lret
pop
xor
outsb
jl
dec
iret
inc
xchg
cli
sbb
fistpll
shlb
fcmovnb
pop
mov
lret
cs
ret
stos
fstps
andl
call
jb
pop
outsb
sub
into
bound
dec
std
pop
mov
mov
or
ret
inc
es
bound
sbb
imul
xchg
in
add
mov
iret
jb
mov
dec
mov
out
scas
lret
sysenter
iret
jle
mov
shrb
pop
add
cld
xchg
adc
rcl
pop
and
cmp
jmp
jbe
das
mov
push
mov
imul
push
add
fnstenv
test
in
loop
mov
jp
out
pop
and
shll
fmul
out
ja
xchg
and
sbb
outsl
dec
xchg
pop
mov
xor
push
sub
out
lret
inc
sti
addl
adc
cmpsb
in
andl
shll
and
jne
jge
push
lret
mov
out
in
or
xor
iret
or
pop
mov
xchg
stos
xchg
in
fistpll
mov
lret
fld
sbb
dec
lret
test
aas
mov
lcall
test
lods
fs
adc
or
icebp
jno
and
fwait
adc
lret
mov
jae
nop
inc
les
push
pop
pushf
mov
repz
lret
fdiv
and
xchg
mov
xchg
lret
jnp
dec
push
dec
jecxz
les
lret
repz
jo
sbb
jecxz
push
enter
lret
pop
testb
or
daa
mov
push
cmp
push
mov
ja
or
out
push
test
and
sarl
dec
lret
pop
mov
push
rclb
lret
enter
push
test
lret
pop
pop
sbb
js
add
or
lock
cmpl
dec
inc
add
pop
lea
jb
pop
lret
pushf
mov
in
fadds
mov
cmc
lds
lret
add
stos
pop
lods
cwtl
lret
insb
outsl
popf
dec
test
lcall
aad
jecxz
sub
jnp
out
dec
imul
inc
dec
arpl
inc
repz
xor
mov
lret
cs
je
and
lret
mov
in
popa
lret
dec
cld
hlt
add
jo
sub
lret
mov
in
insb
lret
scas
lods
dec
adc
add
dec
daa
mov
mov
inc
imulb
inc
popl
sub
dec
lret
cltd
inc
icebp
or
pop
stos
out
push
lcall
fisttpll
inc
insl
dec
xchg
lret
fcom
dec
jns
xchg
enter
out
sahf
scas
cmp
xor
lret
ret
fidivrl
mov
roll
mov
jle
push
adc
je
mov
sub
mov
pushf
ret
jg
in
and
sbbb
lret
jp
and
repz
test
or
push
leave
ret
fiadds
jg
movsl
sub
data16
lcall
addr16
push
lret
inc
xchg
jge
pusha
popl
ficompl
xchg
and
movsl
inc
add
sub
inc
adc
or
dec
loope
es
lret
das
test
xchg
sahf
inc
jb
mov
push
fiaddl
mov
push
xor
sbb
lods
mov
xor
psrlw
iret
xchg
cltd
push
push
lret
test
sbb
dec
lret
ljmp
mov
dec
jmp
or
out
mov
call
leave
add
lcall
pop
lret
ss
ret
or
cmp
lret
and
fidivrs
mov
stos
repz
dec
scas
xchg
push
dec
int
lret
cli
mov
pop
mov
inc
rcll
or
add
mov
jl
lret
or
ja
clc
test
mov
out
sub
dec
push
int
sbb
mov
and
sbb
sbb
xor
cmp
pop
cmpl
add
xchg
adc
push
xor
dec
push
push
daa
shl
dec
add
adc
sbb
daa
jecxz
lahf
lret
add
addb
mov
movsl
mov
xchg
out
lret
fs
icebp
insl
ss
clc
lret
pop
adc
add
lds
xor
or
mov
popa
cwtl
je
adc
sub
pop
push
les
mov
cmpsb
sar
mov
mov
stos
add
test
or
pop
lret
pop
je
andb
nop
pop
mov
mov
mov
jmp
jo
arpl
sarl
inc
stos
clc
in
mov
mov
push
lret
or
scas
lret
add
or
call
int3
xor
mov
push
lret
mov
mov
aam
dec
pushf
and
adc
lret
icebp
incb
fmulp
inc
gs
pop
sbb
xor
inc
lret
xor
dec
lret
cmp
daa
mov
lret
fwait
shll
xchg
int
lcall
into
scas
lret
gs
jge
sbb
cmpsl
xchg
lds
ljmp
xor
jmp
inc
sbbb
xchg
fbld
loop
repnz
sbb
mov
or
lret
dec
loope
xlat
test
stos
pop
sarl
cld
das
in
fs
psubb
pop
adc
fcomip
push
jae
dec
shll
mov
pushf
mov
add
or
lret
clc
hlt
repz
dec
iret
sbb
scas
sbb
lds
jae
cwtl
mov
stc
ljmp
in
jbe
mov
mov
inc
pop
clc
xchg
ljmp
sbb
nop
insb
push
dec
ds
adc
lret
andl
sub
add
jle
pop
or
fldt
lret
outsl
negb
xor
cmpsl
sar
pop
leave
xchg
mov
cmp
fmull
arpl
ret
push
jl
lea
notl
inc
iret
outsl
pop
out
xor
cli
xlat
jno
insl
push
aaa
inc
cmc
mov
mov
cmpsl
xor
push
xchg
rclb
stos
pmulhw
insb
jle
push
pop
lret
mov
add
pop
or
xchg
cli
incb
imul
jnp
cmp
pushf
sub
loope
xor
rol
and
add
cwtl
lock
das
add
imul
sub
incl
lahf
lret
clc
xor
pop
push
sbb
pop
dec
lods
clc
pop
imul
fisubs
lahf
shll
jno
icebp
push
ljmp
jne
sub
xor
lock
sub
dec
mov
add
xor
fnstcw
shl
aas
dec
lret
stc
jmp
mov
iret
push
xor
es
insl
dec
or
pop
hlt
adc
lahf
repz
aaa
jb
stc
dec
xor
pop
lret
loope
icebp
jo
lcall
sbb
popa
mov
lret
call
push
adc
pop
movsb
lahf
mov
cmp
or
sahf
scas
ljmp
ror
pop
dec
mov
repnz
fcmovne
jno
mov
lret
push
pop
js
sbb
inc
adc
xor
je
lret
insl
nop
adcl
dec
shl
push
cmovge
add
lret
xchg
inc
ja
int
adc
lret
inc
mov
fimuls
iret
mov
sahf
iret
dec
and
in
push
lret
lahf
fidivl
add
ljmp
aaa
adc
add
mov
es
fisttps
sbb
or
and
fdivrp
test
xchg
icebp
repz
mov
sub
icebp
rolb
push
dec
inc
ds
lret
loope
rep
jae
or
adc
push
rorb
nop
outsl
fsubrp
fsubrs
addr16
jecxz
lret
and
sbb
lret
into
test
cmpsb
sub
imul
in
sahf
lret
insl
xor
pop
mov
add
or
dec
cli
icebp
movsl
fimull
loope
inc
sbb
ret
push
dec
arpl
or
mov
cmp
jg
mov
lret
inc
ljmp
leave
stos
or
std
ljmp
mov
xchg
scas
test
int
pop
mov
mov
ror
bound
das
fcomps
in
in
cmp
xchg
adc
xor
mov
ja
push
lret
inc
addb
xchg
je
cmp
mov
push
fwait
mov
imul
push
sub
or
test
jg
notb
push
or
lret
dec
xorl
mov
outsb
pop
sbb
add
jns
lret
sub
push
rcll
lret
aad
mov
loopne
lret
shll
stc
ror
subl
outsl
dec
lret
ret
inc
out
lret
pushf
jno
lahf
sti
sub
vmovlps
mov
push
lret
pop
adc
out
lret
xchg
xor
mov
mov
jmp
mov
sub
andb
jge
push
movsb
sub
xchg
and
js
lret
mov
iret
jmp
lret
fidivrs
mov
adc
ljmp
int
xor
xor
stos
inc
repz
rcr
icebp
in
push
xor
call
out
xorb
dec
aad
push
scas
test
lahf
sub
push
lret
lret
sbb
mov
imul
aaa
lret
shrb
call
push
outsl
sahf
inc
sbb
lret
cmp
mov
adc
sub
add
icebp
jno
adc
cmc
cmp
mov
bound
mov
roll
and
out
clc
pop
sub
push
sbb
sub
out
mov
cli
adc
jne
clc
imul
inc
call
xchg
loop
stc
hlt
push
cmp
inc
pushl
scas
lret
test
loop
rol
sbb
and
aam
fwait
inc
jg
lret
out
inc
sub
out
mov
ficompl
in
lret
jnp
pushf
sbb
jge
mov
lret
std
fisubs
fcompl
ss
xor
and
in
lret
gs
lret
inc
push
fwait
or
shlb
jge
mov
adc
mov
out
lret
pop
stos
adc
mov
mov
dec
bound
out
xor
lret
or
jecxz
mov
mov
inc
sub
stc
or
test
fwait
inc
mov
lret
xor
xor
arpl
scas
test
jb
mov
lock
aaa
sub
bound
pop
ret
xor
leave
nop
sbb
fistpl
lret
gs
pop
cmp
lret
adc
inc
inc
cmp
dec
mov
pop
adc
xchg
das
movsb
sbb
imul
repnz
inc
sahf
jmp
imul
js
lret
arpl
jle
repz
mov
and
mov
adc
lret
int
lods
cmp
scas
rclb
mov
adc
pop
cld
lcall
push
sub
add
loopne
lret
push
dec
and
ret
mov
loopne
xchg
jb
adc
aad
lret
sarb
lods
ficompl
sub
jge
push
lret
jecxz
push
jbe
pop
shll
stos
negl
test
mov
aad
ss
mov
mov
or
and
push
mov
cli
loopne
lret
test
sub
mov
scas
xchg
inc
out
aaa
stos
int3
jae
lret
sub
roll
lret
cmpsl
shlb
bound
cltd
mov
andl
icebp
cmp
lret
fmull
add
lret
xchg
and
sahf
inc
in
aaa
mov
es
push
pop
iret
insl
loopne
out
adc
test
sbb
data16
xchg
lds
push
or
inc
dec
jmp
call
push
push
add
jne
sbb
das
and
mov
stos
out
subb
lret
pop
pop
mov
hlt
xor
sub
nop
lods
pusha
xchg
mov
pop
add
popa
lret
jne
in
pushf
add
dec
xlat
int
cmp
fsubrs
lret
pop
push
xchg
movsl
jp
pop
insb
lret
imul
xor
lock
leave
sahf
sbb
add
fwait
ret
mov
jno
faddp
jnp
add
orb
add
cmc
xchg
add
dec
ret
dec
push
mov
cmpsb
jb
leave
stos
sbb
pushf
adc
lret
shlb
and
pop
cmp
inc
das
sbb
adc
aad
jmp
xlat
call
ret
incb
lret
ja
das
or
ljmp
cmp
dec
mov
inc
movsb
xor
jge
in
push
pop
fwait
orl
jae
sbb
inc
lret
sub
pop
out
test
lret
xchg
inc
dec
into
mov
pop
test
and
dec
popa
popf
lret
shll
dec
shlb
or
pop
lahf
fwait
mov
mov
mov
std
pushf
mov
movsl
mov
ret
add
shr
pop
mov
shl
fldt
inc
aaa
stc
jp
mov
cs
mov
inc
or
lret
xor
daa
inc
or
xor
outsl
ffree
jmp
jbe
incl
aaa
ljmp
sub
sub
mov
lret
push
xor
lret
imul
sarl
inc
and
fxch
sbb
mov
mov
scas
lret
push
stc
test
add
jl
or
outsl
fimull
out
loop
dec
es
xchg
int
xor
repnz
int
pop
or
fimuls
add
sub
push
lret
pop
cwtl
leave
cmp
mov
lret
scas
popa
insb
stc
mov
inc
and
mov
mov
xchg
hlt
pop
mov
pop
shrl
xor
lret
adc
leave
adc
dec
lret
push
std
sub
leave
fdivp
jp
inc
push
jmp
je
int
inc
cmc
inc
leave
adc
cmp
lret
push
and
das
jl
lret
repnz
iret
cmp
loop
lret
ja
jb
test
mov
xchg
int3
popa
mov
aad
int
add
pop
dec
push
mov
insl
lret
mov
loop
inc
mov
inc
pop
pusha
fcmovnb
jmp
out
dec
pop
sbb
pushf
int3
mov
or
lret
mov
in
pushf
lret
mov
repz
mov
cmp
jb
jae
addl
cmp
cmp
lcall
lret
xorl
pop
fldenv
or
push
sbb
mov
pop
mov
xor
daa
ret
xchg
stos
sbb
mov
xchg
push
stos
mov
pop
or
out
ja
xchg
das
mov
ror
xchg
aam
sbb
mov
pop
xchg
mov
sar
mov
pusha
sub
mov
arpl
cmpl
nop
syscall
decl
jmp
sub
sub
lret
ret
ret
shlb
push
shrl
dec
mov
xchg
icebp
sbb
ret
pop
enter
mov
mov
lret
push
cmc
inc
jp
icebp
lret
fwait
xchg
xchg
lods
fists
pushf
xor
cmp
jbe
mov
repz
in
add
lcall
insl
and
cmpsb
clc
cli
lretw
add
push
or
sub
ret
repnz
rcrl
lret
xor
daa
inc
repz
adc
push
mov
fdivrl
fisubrs
lret
dec
sbb
movsb
adc
cmp
and
data16
cmp
cmp
icebp
pusha
int
mov
push
out
les
push
ljmp
data16
lea
or
lds
in
inc
dec
jle
add
push
xlat
insb
dec
mov
mov
ret
or
and
call
jmp
dec
cmc
cli
lret
mov
add
pushf
mov
push
shlb
lds
xor
mov
stos
lret
lcall
into
shrl
cmpl
push
lret
cld
das
mov
lret
cmp
pop
pop
sti
dec
stos
mov
adc
cmp
dec
add
push
out
xchg
lea
inc
test
arpl
mov
lret
stos
pop
js
mov
mov
in
or
cmpsb
push
sub
cwtl
daa
mov
leave
adc
or
mov
pop
ja
jge
xchg
xchg
or
lret
repz
arpl
push
cmp
cmp
cld
and
jns
push
add
fnclex
imul
fnstenv
int
pop
sub
push
adc
adc
mov
xchg
jnp
pop
mov
cltd
shll
aam
lret
les
xchg
aas
add
dec
mov
inc
mov
insb
popa
std
xchg
divb
mov
fmul
dec
xor
jecxz
test
ljmp
push
pop
iret
or
lret
xchg
mov
jne
dec
mov
cld
mov
std
sti
cmc
adc
ja
xchg
push
mov
push
hlt
mov
mov
pop
movsb
popa
or
add
lret
or
and
arpl
adc
mov
iret
sbb
lret
or
nop
xchg
xor
ss
sbb
mov
sbb
lock
xor
neg
inc
mov
aas
mov
mov
and
pop
adc
mov
icebp
and
jge,pt
add
sub
xor
mov
jle
jno
xchg
lcall
lret
mov
js
mov
scas
scas
jle
adc
push
repz
mov
out
add
pop
pop
adc
cli
sarl
enter
mov
sbb
dec
pop
xor
in
jp
ror
add
addl
std
lahf
cwtl
xchg
aaa
pop
lret
lret
jmp
mov
popf
leave
addr16
mov
push
insb
jge
cmp
jp
xchg
movsb
add
lret
adcb
xor
lret
push
mov
and
dec
mov
ret
mov
or
mov
test
and
cmp
lret
jecxz
fidivrs
loope
sbb
jne
push
sub
outsl
popf
mov
dec
push
insb
iret
or
testl
fwait
ds
cwtl
mov
xor
cmp
xchg
pop
cld
push
lret
out
aaa
or
adc
pop
lret
add
mov
push
lret
or
push
ljmp
and
ret
lret
negl
das
lret
lret
mov
inc
inc
repnz
pcmpeqw
jo
repz
mov
jnp
push
loope
add
or
leave
inc
insl
mov
lret
push
shlb
pop
nop
mov
or
jns
cmp
idivl
es
xchg
fsubl
lret
inc
dec
stc
clc
in
inc
jno
lret
addr16
and
push
or
lret
lret
jae
jg
cmpsl
push
ds
and
and
sbb
mov
xchg
pop
cltd
lock
push
and
mov
daa
ljmp
mov
push
push
fimull
xchg
js
mov
in
mov
pop
movsb
or
lret
and
xorl
jne
stos
pop
iret
test
and
lret
flds
cmc
push
mov
sbb
rcr
dec
or
out
and
popf
loope
leave
adc
push
imul
leave
call
cs
fistpl
ror
in
mov
lret
test
sarb
xchg
xchg
sbbb
mov
xchg
adc
repnz
scas
inc
cmp
aas
rcrl
mov
sub
inc
jmp
ret
mov
mov
xchg
cltd
cwtl
lret
je
adcl
fs
mov
mov
dec
frstor
xchg
xor
lret
out
vmread
adc
mov
mov
test
frstor
loop
pop
movsb
push
iret
leave
push
lret
ss
mov
jge
testb
xor
dec
pop
dec
fcoml
cmp
insb
push
pop
and
jb
jp
ffreep
sbb
push
pop
jmp
dec
int3
daa
fstps
loope
pop
out
fcoml
lods
movsb
orl
in
xchg
pop
mov
into
sbb
loop
jb
mov
iret
push
lret
fsubs
into
mov
adc
cmp
pandn
sub
popf
sub
out
push
push
or
lret
hlt
es
mov
iret
popf
je
cld
rclb
xchg
lret
adc
pop
sub
rcrl
push
and
rsm
pop
loope
xlat
xchg
fdiv
out
cwtl
cmp
xchg
mov
mov
in
xchg
aad
fcoms
mov
adc
jge
and
ret
inc
je
mov
dec
test
sub
insl
cmc
sub
mov
sahf
mov
mov
pop
lret
stc
test
add
jg
sub
cmp
xchg
pop
outsb
int
lret
out
fcmovnb
lcall
jl
mov
jae
inc
jb
sbb
mov
mov
xor
nop
orb
jae
pop
int
dec
imul
and
scas
lret
arpl
push
leave
jle
sbb
popf
stos
loopne
aam
lock
les
sub
jle
out
leave
add
add
lret
addl
adc
or
call
inc
mov
repz
cltd
rorb
sub
jle
inc
push
int3
popa
dec
push
cmp
cmpsl
mov
push
sbb
lret
femms
dec
push
je
neg
iret
data16
xor
imul
push
shrl
jg
imul
std
lret
sahf
push
mov
subl
xchg
jo
sbb
jno
cwtl
add
xchg
lret
loopne
inc
or
mov
push
add
lret
jp
popf
and
or
lret
dec
jae
xor
fnstsw
mov
int
and
mov
lret
pop
or
adc
arpl
cmp
scas
insb
mov
popa
sub
iret
rcrb
cs
xor
xchg
inc
std
repnz
fcoms
lret
lcall
jecxz
mov
mov
push
mov
pop
int
aas
getsec
jno
or
lods
decl
ror
hlt
pop
dec
and
cmp
inc
push
in
lret
mov
cs
push
rcll
lds
mov
inc
mov
adc
rcrl
or
sahf
sarl
sbb
insb
imul
fcoml
jnp
cmp
test
or
lret
or
out
repz
ret
rorl
jb
iret
scas
sbb
pop
dec
dec
test
jmp
lret
inc
or
xor
lret
pop
or
aaa
std
jne
lretw
push
lea
dec
cmp
xor
dec
and
mov
bound
shrb
adc
jg
fwait
push
rcll
roll
sub
xchg
xchg
fdivrs
inc
jo
rcrl
xchg
pop
enter
iret
test
xchg
pop
outsb
add
aam
dec
lret
jmp
pop
sahf
xor
cmpsb
adc
xor
rcrb
js
pop
cmp
adc
pop
push
jo
xor
xor
lea
lret
mov
int
sbb
mov
les
sbb
xor
shlb
js
xor
in
or
stos
mov
ds
pop
es
xchg
pop
add
cmpb
iret
sub
mov
add
sti
push
inc
imul
and
lret
push
fsubp
rep
insb
in
lret
jge
fisubl
es
loop
cmpsb
testl
push
jnp
lret
bound
lods
jmp
dec
inc
lret
pop
inc
or
pop
repz
fcmovne
test
push
lret
in
fcompl
lret
test
ret
mov
add
test
stc
or
lret
mov
adc
mov
mov
pop
or
and
or
std
push
lret
fwait
aad
loope
icebp
test
mov
fistpll
int
ret
jp
pusha
or
cmp
cltd
inc
mov
mov
xchg
jae
or
mov
ja
pop
inc
bound
out
packssdw
mov
mov
int
or
mov
cmp
out
ljmp
scas
dec
xorb
add
repz
mov
std
int
mov
adc
stos
lods
lret
sub
mov
lret
fwait
sbb
shll
or
test
inc
lea
xor
lret
push
sbb
push
or
inc
fisttps
inc
mov
in
lret
jp
cwtl
rcrl
push
aaa
test
repz
mov
ror
ja
or
cmp
or
inc
jmp
mov
and
lret
icebp
jno
lret
lock
push
leave
mov
sub
cli
test
xor
ljmp
lret
aam
xchg
pop
lods
fdivrl
mov
jae
lcall
aad
rclb
and
rclb
jne
pop
mov
into
mov
mov
and
ret
push
outsb
xchg
push
std
lret
shrb
jnp
cld
daa
lret
xor
and
test
xor
cmp
outsl
sarb
sub
shll
lods
call
mov
das
push
jecxz
xlat
leave
cmpsb
imul
xchg
sti
in
aas
add
lret
push
inc
or
popa
xchg
or
sbb
pop
cmp
cs
fnstenv
hlt
rcrl
xor
push
mov
lret
ljmp
add
jmp
mov
je
in
lret
out
mov
loop
sti
mov
mov
and
push
sub
inc
into
lret
adc
pusha
xchg
movsb
ja
leave
push
push
imul
lods
lret
sysret
sub
std
xor
inc
stc
push
or
pop
pop
shlb
push
pushf
sarb
mov
lret
lret
test
arpl
jge
sub
mov
enter
jae
pop
xor
fucomi
lret
and
jecxz
sub
int
mov
cmp
add
lret
add
in
out
mov
or
hlt
push
leave
cli
push
ret
fcmovbe
xlat
xor
add
lods
sti
inc
iret
dec
inc
int
or
xchg
fnstenv
lret
in
pop
out
lret
mov
movnti
pop
shll
inc
addb
mov
ds
fiaddl
inc
mov
repnz
sub
add
loopne
jo
xor
lret
or
add
sub
es
jns
test
or
add
loope
insb
push
sbb
dec
repnz
mov
sub
lea
loop
dec
cmp
pop
mov
and
inc
sub
inc
arpl
std
loop
cmp
stos
stos
jmp
sub
xor
fldl
inc
sub
lret
testb
cld
xchg
mov
or
ret
out
rolb
add
ror
cmpsl
lret
mov
outsl
adc
mov
adc
dec
arpl
cmp
jp
lret
pop
mov
into
lret
jl
push
stc
icebp
aaa
mov
out
dec
mov
xchg
lret
sbb
es
jb
inc
mov
test
cwtl
add
sahf
mov
or
das
data16
pop
jno
lret
arpl
idivb
test
call
adc
scas
mov
daa
stos
leave
cmc
inc
xlat
loop
add
jne
lret
cmp
adc
mov
fmul
mov
imul
xor
inc
dec
pusha
push
bound
out
and
push
rorl
xorl
lock
or
test
leave
jnp
sub
dec
enter
or
push
cmpsb
call
filds
lea
cmpsl
sarb
and
and
idivl
lret
mov
or
mov
mov
and
addr16
ss
lret
dec
ja
ret
add
add
lret
and
clc
or
xlat
lret
add
ss
shrl
push
popf
lret
jle
sub
add
xor
lret
lea
or
orb
mov
pop
fwait
sub
lret
out
loopne
gs
aad
lret
jae
mov
stc
xlat
mov
pushf
mov
shlb
sbb
cwtl
mov
mov
push
fcompl
mov
shl
je
cmp
add
leave
mov
popf
ljmp
stos
cmp
movb
inc
jge
xchg
dec
dec
xor
call
lea
mov
pusha
lret
xlat
jl
jae
pop
or
cs
stos
push
aam
adc
and
mov
leave
bound
sbb
shrb
shl
ja
push
test
lret
scas
jb
int
xchg
dec
loop
xchg
cs
lods
cld
mov
mov
xchg
scas
push
lret
mov
ret
lret
add
data16
cltd
lret
fldl2e
adc
fwait
stos
into
pop
daa
xor
push
cmc
xchg
mov
insb
add
fs
nop
mov
push
rclb
pop
mov
xchg
dec
mov
leave
sbb
cltd
xor
jbe
aas
lret
hlt
lret
dec
inc
testl
ljmp
arpl
xchg
mov
pop
lret
or
sub
inc
stc
jp
lret
pusha
adc
mov
cmp
lahf
lret
inc
cmp
addr16
movsl
or
xchg
lret
gs
bound
sub
push
sti
add
push
lret
xchg
jmp
ljmp
mov
aad
xor
cltd
push
fs
cwtl
lret
mov
xchg
mov
int
sub
mov
pop
sbb
inc
imul
sarb
imul
out
rcll
and
pop
lret
dec
mov
loop
jl
outsl
jae
and
jle
lahf
push
cmp
push
push
std
xor
rcrl
enter
in
outsl
mov
pushf
pop
imul
lret
jb
ficoml
int3
aas
mov
lret
pop
cmpsl
fmull
rcr
ds
int
or
popa
lock
cmpl
mov
pop
pushf
cld
push
push
dec
and
mov
es
fnstcw
outsl
sub
mov
jge
rolb
cmc
insl
adc
lret
arpl
push
cmp
lret
pop
fisttpll
gs
arpl
push
add
int3
rcl
jecxz
or
pop
xchg
aad
or
cmp
sub
pushf
rorl
and
dec
call
fcmovne
jnp
push
int
pop
test
lret
xor
aaa
mov
loop
xchg
movsb
adc
inc
leave
xor
clc
mov
addr16
cli
loopne
fsts
cmpsb
jnp
mov
les
mov
add
jnp
shlb
jo
lret
sub
les
xchg
in
push
sbb
push
daa
mov
aaa
lret
lahf
cmp
pop
cmp
mov
nop
lcall
lret
ret
iret
inc
addb
mov
mov
leave
lret
push
test
cmp
inc
in
adc
ret
pop
orb
ja
fcoms
mov
lret
push
dec
decl
sbb
xchg
add
dec
dec
stc
inc
cs
or
inc
outsb
aaa
ret
add
xor
push
lret
les
out
rcl
adc
xorb
es
lret
ficomps
dec
lret
mov
cmp
push
icebp
mov
inc
dec
js
mov
xor
fnstsw
push
inc
and
xor
ss
lret
out
enter
out
addr16
sbb
fdivrs
pop
mov
and
iret
test
daa
jmp
test
jb
dec
dec
leave
pop
dec
insb
pop
push
lret
loop
adc
and
push
mov
mov
fnstcw
scas
arpl
into
mov
dec
in
jmp
mov
jmp
jno
imul
push
push
push
lret
push
inc
cld
push
mov
mov
in
cs
cld
scas
jne
dec
cmp
out
jns
mov
fisubs
cltd
lret
scas
rorl
lret
inc
inc
lds
lret
xlat
fldl
mov
push
cmpsb
sub
xchg
lret
pop
mov
stos
lret
cld
jbe
sub
imul
mov
js
cmp
fbld
xor
lods
dec
sub
iret
xor
push
push
lret
adc
add
jmp
pop
fnstcw
pop
push
pop
int
mov
jmp
mov
lret
and
pop
and
xor
push
faddl
dec
iret
fbld
push
cwtl
pushf
iret
ret
add
push
dec
cli
jle
lret
pop
inc
aas
sbb
int3
and
push
inc
je
xchg
cld
jcxz
aaa
mov
jb
fldz
aam
sub
xchg
lea
and
push
in
rcll
sbb
ja
pop
sbb
dec
xchg
cmpsl
imul
mov
movsb
xrelease
lret
push
insb
xor
clc
shl
ljmp
sub
sbb
inc
les
or
incl
adc
inc
fcmovne
mov
out
lcall
shr
lods
pop
inc
ret
pusha
cwtl
lret
cltd
out
mov
test
mov
in
dec
sbb
fstpl
stc
xor
lret
mov
cmp
lret
and
test
leave
jne
dec
inc
shrb
cmp
daa
shll
leave
push
add
lcall
jecxz
dec
cmc
dec
sbb
sub
fwait
pop
and
jl
adc
mov
mov
aam
inc
jge
inc
jns
insl
fmuls
cmp
mov
lret
dec
sbb
xchg
mov
fnsave
and
cmpsl
sbb
lret
xchg
xchg
mov
in
lret
sbbb
adc
movsb
lret
jae
mov
jge
mov
xchg
loop
ljmp
xchg
and
push
or
lods
sub
adc
fwait
xor
sar
xor
int
stos
inc
push
in
mov
jmp
cwtl
xchg
ljmp
mov
icebp
lret
sahf
dec
jp
popa
lea
mov
lret
xchg
out
leave
ja
mov
imul
iret
dec
loop
rcrl
je
andb
lret
cli
enter
int3
imul
aas
mov
push
div
or
inc
dec
pushl
dec
add
jb
lret
lret
sbb
imul
sub
xor
xchg
lret
add
jbe
lret
xor
mov
lret
js
ret
and
or
aam
mov
in
or
in
lret
mov
inc
adc
leave
xchg
repnz
xchg
jmp
loop
push
add
xor
int3
and
mov
cltd
mov
mov
jb
mov
test
nop
jo
xor
push
lahf
cmp
aam
negb
and
mov
pushl
add
jns
stos
xchg
cs
test
inc
lret
stos
mov
jl
inc
outsl
cltd
fists
push
iret
mov
mov
xor
dec
aad
lret
mov
jl,pn
lret
mov
adc
add
mov
push
xor
lods
inc
lret
ja
push
adcl
adc
push
pop
test
mov
cmp
lret
stos
adc
dec
rcll
das
push
lds
movsb
push
push
lret
cli
mov
or
push
lret
dec
dec
and
lret
nop
das
fsubr
stos
inc
mov
and
push
xlat
sub
clc
jbe
jl
mov
fcompl
mov
mov
bound
and
sahf
ror
push
inc
mul
lret
pop
jmp
inc
push
jecxz
xor
test
lret
enter
mov
sbb
insl
mov
mov
jns
out
push
push
mov
inc
and
lret
xor
inc
gs
fwait
lret
lret
xor
mov
push
lret
xor
aaa
push
lret
mov
pop
mov
rclb
jl
aaa
shlb
or
or
sbb
cmp
int
fidivrs
inc
xchg
push
stos
lret
mov
call
jae
lret
push
hlt
vmovlps
push
jne
lods
scas
mov
jmp
pusha
orl
cmp
nop
lret
fwait
lret
loope
jo
mov
xor
lods
push
test
int
and
clc
sti
std
or
push
repz
mov
xchg
mov
mov
lea
pop
cmp
cmp
lds
loop
lret
xchg
adc
mov
jns
sub
push
sbbb
repz
cmp
roll
inc
lretw
bt
jnp
mov
cmp
repnz
mov
adc
in
pop
add
dec
lret
arpl
lea
test
insl
push
cmp
repz
dec
cld
jo
cmp
pop
sbb
push
in
std
xor
sub
out
decl
into
insl
iret
push
xchg
data16
pop
filds
sub
push
clc
lret
dec
cli
mov
fdivrp
ljmp
push
xor
cmp
jl
ror
daa
push
mov
fwait
js
insl
jb
popf
jnp
mov
test
mov
push
push
lret
scas
dec
cwtl
inc
mov
xchg
mov
es
cmp
stc
and
mov
push
hlt
sti
lret
daa
jae
and
cmp
in
jge
test
or
inc
sti
jl
fmulp
jbe
push
pop
cmp
loope
leave
pop
lret
cmp
jb
mov
lret
and
call
xchg
lret
mov
test
lret
pop
fistl
ror
mov
pop
push
xor
clc
stos
pop
adc
dec
sbb
dec
lret
inc
scas
ljmp
sti
jge
push
add
lret
lahf
sub
aad
orb
xchg
imul
pushl
adc
xchg
pop
repz
cmp
loop
mov
adc
mov
rcrl
out
fsub
aad
cli
pop
dec
lods
icebp
inc
or
int
out
push
imul
adc
cs
lret
jo
shlb
daa
int3
jno
lret
jbe
jp
cmp
imul
out
in
lret
add
hlt
lret
sbb
ljmp
popa
pushf
aad
das
stos
mov
icebp
iret
dec
shll
lret
jecxz
in
adcb
iret
scas
shl
sub
lods
sub
lret
mov
cmpsl
ret
fsubrs
pop
add
leave
test
gs
test
push
cmp
das
lret
lret
ss
aaa
sub
ljmp
fwait
scas
test
decb
out
and
shrl
call
fisubs
pop
push
mov
fdiv
push
push
in
fnstcw
lret
das
and
pop
add
out
bswap
vcomiss
stos
jmp
and
inc
sub
dec
insb
xor
pushl
pmulhuw
insb
mov
test
dec
lret
rcll
inc
cmp
stos
jmp
cmp
in
lret
iret
pop
fmull
int
adc
or
lret
mov
int
inc
lret
xchg
push
popf
jae
and
lret
jge
cwtl
inc
inc
push
dec
lcall
or
jecxz
into
and
lock
jle
lret
adc
aad
mov
push
lret
add
lret
or
push
xor
cltd
js
pop
lret
jns
mov
fs
xchg
lret
mov
stos
in
aaa
mov
addr16
mov
jb
adc
xchg
or
pushf
testl
int
jae
lret
repz
test
push
popf
scas
push
mov
and
xor
mov
and
lcall
sbb
test
xor
into
int
sub
dec
dec
rcl
popf
das
mov
xchg
roll
or
lret
enter
inc
add
sbb
fldcw
jae
lret
imul
mov
cmp
lret
jp
stos
jnp
mov
pop
inc
popf
mov
dec
fisubrl
xor
lret
gs
std
inc
mov
ror
or
or
pushf
mov
test
push
lods
loope
stos
dec
cmp
repz
or
and
jecxz
mov
movsb
lock
aaa
push
lret
jae
loop
mov
das
adc
fistpll
xlat
mov
test
jb
dec
repnz
mov
jmp
icebp
push
dec
int
in
push
and
imul
sub
loopne
push
push
out
xor
lret
mov
pop
imul
loope
pushf
repz
lret
out
insl
lret
xchg
cmp
pop
add
inc
mov
insl
lret
mov
push
div
scas
js
lret
adc
ds
add
adc
and
dec
cmp
lret
mov
ljmp
mul
lret
cld
mov
hlt
jbe
mov
popf
dec
xchg
imul
or
lret
cmp
xchg
mov
ret
pop
dec
lods
in
loope
mov
lret
and
test
xchg
push
pop
int
out
nop
and
data16
adc
cmp
mov
mov
stos
mov
sahf
push
sub
lret
pop
gs
add
xor
out
lret
rorl
push
sub
lret
loope
daa
aaa
scas
outsb
sbb
sub
cmp
cli
xor
mov
push
sub
lahf
sahf
int
xchg
scas
sar
dec
cmc
bound
pop
ss
shrl
out
mov
xchg
or
lret
inc
sbb
cmp
lret
push
mov
test
mov
dec
mov
lahf
push
cmp
xchg
lret
inc
ficomps
mov
repz
dec
dec
xor
rcr
aaa
sbb
xor
and
stos
push
adc
aas
rol
jo
ss
lret
xlat
daa
dec
push
jno
mov
lcall
jmp
mov
call
test
and
pop
fs
sbb
mov
mov
pop
scas
test
mov
add
sbb
lret
add
xor
ljmp
xchg
adc
imul
inc
push
inc
sbb
inc
pop
pop
xor
lret
inc
std
adc
cli
lret
adc
pusha
mov
lret
add
jb
and
pop
mov
xchg
fdivr
sbb
pop
mov
or
int3
lret
dec
out
shlb
repz
jmp
jo
repz
int
lret
rcrl
mov
cmc
add
mov
sub
pop
insb
mov
cld
pop
and
adc
pop
sub
leave
mov
inc
xchg
inc
or
mov
jnp
mov
rolb
inc
test
dec
and
insl
dec
mov
xchg
dec
mov
das
lret
push
mov
jge
and
lret
jne
ja
push
xor
stos
in
xchg
and
pop
mov
lock
mov
mov
lret
subb
fistpl
pop
mov
xchg
xor
xlat
lret
fsubs
lods
cmp
jno
push
push
in
ja
lahf
inc
mov
fs
test
mov
dec
sbb
cmp
out
popf
dec
cltd
aam
int
lret
fidivrs
lret
sbb
stos
xor
scas
xor
ljmp
inc
lret
mov
dec
mov
pushf
adc
movsl
inc
repz
sbb
dec
mov
sub
or
pop
dec
enter
pop
popf
dec
or
out
cmc
inc
dec
fmuls
hlt
inc
xchg
test
es
loopne
and
lock
xor
mov
sti
cmp
mov
lock
icebp
mov
sub
xchg
mov
mov
int
imul
mov
lret
jle
js
mov
or
fimuls
lods
lret
dec
lea
inc
sub
cmc
pop
mov
xor
push
das
mov
into
dec
mov
lret
test
lret
jg
sub
add
mov
jle
arpl
push
leave
and
outsl
mov
mov
ljmp
jmp
jl
fcmove
push
icebp
data16
xchg
adc
scas
jo
aam
lret
pusha
dec
hlt
cmc
ss
ret
icebp
loope
add
test
cmpl
mov
out
stc
push
add
pop
jne
lret
push
mov
cmp
enter
adc
and
out
cmp
lret
insl
cmpsb
cltd
js
rclb
sub
jg
movsl
adc
adc
push
mov
jnp
xchg
cwtl
dec
popf
outsb
out
gs
dec
push
inc
sub
xor
sbb
pop
lahf
lret
mov
stc
xor
mulb
jmp
dec
outsb
rcl
arpl
loope
loopne
out
xor
je
xorb
xor
mov
jo
jecxz
cwtl
pop
dec
int
bound
mov
in
leave
mov
filds
mov
out
mov
lret
ljmp
stc
lret
mov
dec
es
dec
cmp
int
dec
cs
push
imul
push
loopne
movsl
dec
sti
cmp
loope
jmp
in
lret
rclb
cmp
push
insb
and
lahf
cmc
test
out
or
add
stc
inc
fwait
repz
push
daa
lret
cmp
jae
or
scas
push
lret
nop
sub
mov
adc
ror
sbb
and
cmp
in
lret
int
sbb
sar
popa
jl
push
mov
dec
orb
movsb
sarl
pop
pushf
les
leave
xchg
inc
rcl
adc
jg
jecxz
jbe
aam
scas
rolb
repz
mov
add
xor
push
adc
roll
xor
lret
pop
pop
jl
popf
ffree
adc
pop
or
lret
stos
or
lret
aas
pop
lods
mov
dec
ret
pop
stos
mov
add
in
xchg
sub
rcrl
jge
shlb
jp
out
dec
ret
hlt
sbb
dec
sub
mov
aas
cmp
jp
pop
xor
lret
pop
pop
jg
adc
or
pop
dec
mov
cmp
or
and
push
and
pop
call
jl
xor
mov
dec
and
ja
jno
cli
insl
push
jne
adc
adc
mov
out
out
pop
push
ror
xchg
scas
mov
out
ja
lret
popf
in
cs
lret
sbb
pop
out
inc
iret
lret
add
dec
fwait
es
test
cs
push
adc
frstor
xchg
pushf
sahf
cmp
adc
xchg
sti
popf
bound
inc
dec
lret
pop
js
orb
sbb
iret
pop
das
mov
cli
ljmp
adc
pop
iret
insl
jns
dec
mov
sub
mov
fildl
in
xchg
fidivl
cmp
pop
sbb
imul
mov
mov
ror
add
inc
mov
sbb
and
xor
fsts
mov
lods
lret
aas
loop
dec
xchg
cmp
imul
leave
icebp
out
mov
mov
loopne
pop
push
mov
and
push
lods
out
sbb
dec
ficompl
mov
mov
js
imul
inc
mov
jo
push
lret
inc
jbe
mov
inc
sbb
movsl
xchg
leave
insl
inc
repz
lret
clc
fnstenv
hlt
lret
jp
into
inc
rorl
jmp
std
lret
mov
aaa
jno
lret
inc
or
rcrb
pop
lahf
ja
mov
pop
inc
lret
push
sbb
xor
push
leave
mov
imulb
jp
repnz
out
cmpb
pop
mov
add
std
jbe
lret
jne
jns
popa
dec
repz
sub
hlt
dec
shlb
lret
out
gs
scas
lret
into
xchg
ret
add
int3
pop
adc
mov
dec
sbb
pop
sub
sub
mov
mov
sub
lret
push
mov
lret
dec
xlat
xchg
addl
je
movb
push
lret
xor
push
call
jnp
jmp
ss
sub
cmp
xchg
lret
sub
mov
ds
les
pop
ror
sub
and
sub
int
mov
mov
push
lret
dec
test
mov
lret
popf
push
xchg
lea
lret
xor
push
adc
and
fwait
iret
out
dec
iret
push
jne
or
jno
mov
sbb
call
jmp
ret
nop
pop
pop
das
int
idivl
inc
or
cmp
mov
call
lret
int
fisubl
rcrb
xor
loopne
cmp
cmp
les
mov
out
rcr
arpl
push
lret
ja
cmpb
lret
scas
fnstcw
pop
lret
dec
shlb
jecxz
mov
icebp
push
mov
addb
fstpt
jle
leave
insb
stos
ret
shlb
pop
mov
inc
pop
pop
jo
insb
dec
lret
cmp
or
out
sbb
inc
ljmp
dec
leave
pop
mov
test
sbb
in
mov
fwait
lret
and
dec
lret
adcb
add
fs
mov
and
dec
xlat
ret
pop
and
pop
lret
les
lods
pop
filds
dec
xchg
add
dec
jnp
xor
cwtl
clc
sbb
arpl
lret
mov
mov
int
outsl
lds
repz
or
xchg
xlat
add
aam
push
dec
pop
mov
xchg
subl
or
inc
addr16
lret
sbb
aaa
lcall
scas
aam
xor
pop
mov
lret
add
iret
ss
fistl
dec
push
sub
ljmp
dec
pop
xchg
adc
pop
cld
mov
cmp
jb
sbb
enter
push
int3
or
mov
in
mov
pop
cmp
inc
dec
mov
addr16
sbb
lret
inc
or
and
fdivrs
cwtl
add
push
shrl
push
insb
jg
xor
ret
push
enter
or
je
lret
sbb
mov
sti
mov
dec
lret
or
mov
xchg
xchg
push
leave
lock
ljmp
aad
and
pop
cltd
mov
pushf
shlb
ds
rcl
sub
pop
ljmp
das
mov
push
mov
ja
or
mov
xchg
sbb
dec
dec
mov
ljmp
popf
sub
jne
push
lret
into
psubsw
ljmp
lret
call
add
sbb
hlt
adc
lret
push
fdivr
mov
jp,pn
sbbb
insl
lret
jno
or
stos
push
xchg
cmp
iret
rcrl
out
lret
mov
cmp
adc
mov
inc
imull
jb
dec
movl
jns
call
and
cmp
jo
jp
ror
ljmp
lret
scas
std
cmp
mov
sbbb
add
push
fcmovne
xchg
jmp
dec
pop
in
push
mov
xor
push
aas
repnz
fcom
xchg
jge
dec
ljmp
jb
jbe
mov
loope
pop
shrb
stos
leave
add
outsl
jno
aas
lret
mov
fdivrl
lret
cwtl
mov
or
in
push
out
lds
icebp
addr16
lret
rcrb
and
add
mov
loopne
imull
pusha
dec
sbb
subb
adc
jno
leave
jne
cmp
outsb
mov
lret
adc
and
cs
fldcw
push
lret
push
xchg
stos
push
cmpsb
loopne
ror
or
das
pop
lret
mov
sbb
inc
int
ret
dec
or
lret
dec
mov
sti
movsl
fwait
cmp
mov
in
xchg
xor
aam
mov
jns
dec
cmp
test
ret
jbe
lcall
imul
mov
out
mov
and
and
add
mov
ljmp
fidivs
and
test
mov
mov
dec
jmp
aas
dec
add
mov
shll
mov
testl
loopne
xor
loope
cli
inc
repz
jmp
in
mov
wbinvd
lret
push
mov
adc
push
enter
cmc
or
test
dec
sub
push
inc
lret
jns
cmpsl
inc
push
xor
shr
mov
bnd
je
jae
loope
sbb
bswap
pop
imul
and
lret
push
adc
lret
vpshufd
pop
pop
adc
shrb
idiv
nop
fisubrl
xor
and
jae
jnp
dec
out
fstps
adc
and
ja
dec
or
or
in
mov
scas
and
add
call
aad
jbe
mov
push
test
test
aaa
pop
or
mov
lret
addr16
aad
pop
adc
ret
mov
jo
sbb
lret
adc
shlb
pop
push
lret
or
jno
sub
xchg
roll
mov
clc
dec
ror
cmp
daa
push
jecxz
test
lret
mov
push
jmp
lcall
in
sbb
push
or
das
fmull
arpl
rorl
jbe
or
push
add
lret
flds
push
test
lret
jge
mov
xlat
call
inc
lods
pop
rolb
lret
xor
mov
pop
sbb
int3
std
pop
sub
sub
pushf
xchg
pop
mov
push
lds
jl
jbe
sahf
mov
lods
lret
sbb
cli
xchg
adc
sub
add
dec
aad
jp
lret
dec
jle
cmp
int
xlat
out
clc
and
cmp
lret
les
mov
inc
rorw
sub
pop
lret
sub
mov
adc
stos
ss
out
fnsave
fdivs
inc
dec
and
and
mov
stos
dec
nop
mov
or
lahf
int
negl
add
cmc
adc
rorl
jge
jecxz
lahf
aam
icebp
dec
mov
addr16
subl
xchg
cmp
push
dec
in
add
inc
mov
pusha
mov
lret
xorb
inc
aaa
jp
das
pop
pop
pop
mov
nop
lret
xchg
mov
lret
aaa
imulb
pop
lret
adcb
add
jmp
jg
ret
rol
cmpsb
mov
pusha
and
dec
fildl
mov
hlt
or
pop
lret
xchg
fnstcw
cmp
pop
sub
lret
xor
pop
inc
push
or
popf
movsl
mov
bound
addr16
jno
or
lcall
lret
outsb
je
gs
lock
push
stos
sbb
test
mov
incl
mov
mov
or
jge
inc
imul
mov
cli
das
ror
loop
mov
mov
cmpsl
mov
sbb
inc
fstps
or
jne
adcb
or
out
xlat
xor
jno
iret
push
in
sub
jge
je
sarb
scas
mov
femms
lret
jo
jmp
xor
sub
in
jnp
test
xchg
xor
dec
mov
int
sbb
push
pop
pop
out
pop
cmpl
imul
lret
mov
sbb
add
ret
fildll
sbb
sbb
fstps
pop
mov
data16
imul
push
jne
int
in
add
dec
sarl
xchg
shr
mov
aas
int
test
inc
add
sub
pop
shrb
dec
and
je
fisubrl
shl
or
sarl
dec
aas
inc
mov
lahf
jge
lret
mov
lret
ret
and
xchg
fwait
push
cltd
xchg
inc
test
imul
das
into
ds
pop
insb
or
ljmp
mov
test
push
sarb
lret
aam
inc
mov
or
aas
lret
xchg
sub
cmp
inc
data16
jmp
cld
lret
sub
inc
mov
add
movsb
or
jb
mov
mov
fs
test
lret
sti
xor
mov
inc
repz
faddl
fstpl
or
pushf
stos
loop
push
sub
je
push
stos
adc
cs
sub
push
stos
movsb
adc
xor
cli
lret
insl
mov
push
cmpsl
jne
dec
lret
out
inc
sti
pop
inc
push
jno
pop
sub
xchg
push
movsl
lret
das
or
inc
adc
in
lret
ret
fimuls
cltd
mov
das
loop
bound
maskmovq
sbb
lret
cmp
adc
and
inc
and
gs
mov
sbb
into
lret
stc
or
jbe
add
lret
scas
mov
xchg
int
push
ds
add
scas
shll
test
mov
aad
dec
sub
jnp
push
iret
fcomps
cmp
mov
std
mov
inc
push
or
lret
cmp
stos
pop
out
pop
lret
icebp
pop
jp
push
loope
popa
leave
test
mov
int
pop
mov
cmp
jmp
xor
nop
or
movsl
adc
rorl
jb
dec
jge
lret
roll
out
rcrl
sub
pusha
push
sub
pop
fstpl
fxch
inc
and
jne
or
shrl
outsl
stos
int
or
cmp
call
mov
stos
mov
add
lret
push
out
test
testl
loope
es
arpl
cs
mov
enter
push
inc
xchg
inc
paddsb
mov
and
idivl
leave
pushf
out
mov
inc
imul
subb
push
sbb
mov
cmp
cmp
test
ret
adc
stc
jnp
std
lret
sbb
test
lret
rcr
jp
lsl
lock
stos
ds
lret
or
cwtl
and
jecxz
lret
hlt
or
sub
dec
in
test
xor
mov
mov
fadds
cmpb
adc
pop
gs
mov
mov
dec
pop
pop
add
inc
pop
sub
rorl
ret
fimuls
rcrl
or
or
sub
push
scas
lcall
dec
das
add
gs
mov
in
xchg
cmp
sbb
ljmp
jmp
loopne
ljmp
movl
or
cltd
jb
repz
or
icebp
dec
dec
ljmp
jo
dec
fstl
into
xchg
pop
fisttpl
cmpsb
jmp
in
push
pop
lret
mov
lret
ljmp
cli
lret
scas
push
je
nop
mov
inc
lret
mov
repnz
lret
add
jle
cmp
fidivrl
in
adc
lret
mov
sub
sub
popf
or
pop
xchg
mov
orb
repz
arpl
jno
dec
neg
lods
dec
and
imul
scas
lret
mov
xor
cmp
movsl
jp
gs
leave
mov
or
lret
sbb
loopne
jo
jl
loope
mov
cli
dec
mov
ja
int
pop
cmp
inc
and
lret
test
xor
lret
adc
jg
imul
sub
inc
cli
lret
out
loopne
or
addr16
cmp
xor
clc
mov
xchg
insl
mov
or
cmp
pop
lret
fsubl
jns
call
xor
pushf
sti
jp
or
ret
leave
mov
imul
ja
jl
test
fisttpll
and
outsb
pop
fsts
leave
jmp
adc
ror
lcall
push
pop
lds
jae
fmul
jbe
loop
mov
cmp
fistl
xchg
ja
xchg
cmp
sarb
nop
cmpl
mov
leave
dec
clc
push
push
or
xorb
rorb
repnz
mov
adc
ljmp
add
popa
jge
out
fcoml
cmp
xchg
and
fwait
cmp
stos
leave
popa
enter
loop
dec
cmp
or
cmp
dec
cmc
lret
mov
pusha
and
push
or
clc
int
add
lret
mov
lahf
int3
cmpsl
insl
scas
fmul
pop
subl
pop
popf
aam
add
push
sub
mov
xchg
das
xchg
adc
sar
jge
push
mov
sets
repnz
or
pop
jae
int3
shll
lea
les
lret
mov
ljmp
dec
int
in
push
es
xor
clc
arpl
pop
aas
iret
xchg
out
fcmovu
mov
imul
or
jae
jmp
lret
cltd
ljmp
push
stc
mov
dec
lods
sbb
ds
xor
push
adc
iret
jmp
decl
mov
mov
push
pop
lret
incb
add
loopne
sbb
lret
inc
sbb
nop
mov
hlt
stos
mov
jne
jp
movsb
lret
add
rorl
dec
loopne
test
outsl
fnstcw
adc
mov
pop
jge
jno
scas
lret
dec
inc
dec
mull
sub
sub
mov
iret
pop
stos
in
lods
push
shll
lret
pop
movsb
mov
lret
mov
aaa
int
inc
xchg
js
sbb
sub
repz
lret
cmp
test
aad
push
lret
mov
int3
fwait
add
cmc
loop
jp
mov
jns
mov
pop
dec
xor
mov
insl
mov
adc
cmc
and
jecxz
add
fwait
into
sub
lret
ss
xchg
mov
fwait
dec
ljmp
sbb
fstl
arpl
das
sub
lret
aam
ret
es
je
cmp
jl
dec
lret
mov
enter
testb
sub
and
sbb
or
scas
xchg
push
push
cmp
lret
aas
push
loope
cli
movsb
testb
scas
arpl
jae
daa
mov
mov
push
shrl
or
push
and
ret
adc
sub
test
pop
cmc
repz
lods
xchg
cli
cmp
rcrl
inc
data16
cmp
pop
pop
xor
adc
int
or
jl
push
fwait
lret
jge
js
movsl
movsb
fnstsw
lret
xchg
aam
test
scas
adc
lret
sbb
inc
pop
rcrl
fsts
sahf
sub
pop
mov
jl
or
frstor
cmp
jle
inc
mov
lret
aam
pop
xor
jb
lret
sub
sbb
add
loop
mov
lret
inc
xor
jne
mov
cmpsb
iret
mov
lret
stos
dec
sbb
xor
int
repnz
aam
cmp
or
scas
sar
sub
mov
jmp
add
fwait
push
xchg
mov
dec
sti
mov
std
lret
lret
jl
add
sub
mov
loope
jmp
rcrl
enter
stos
shrl
stos
ror
cltd
mov
out
sti
cs
xchg
mov
inc
dec
je
mov
dec
jl
push
adc
mov
dec
mov
lret
pop
xlat
dec
pop
push
fistpll
imul
movsl
mov
dec
loopne
dec
pop
dec
sbb
lock
lret
cmc
jne
mov
mov
push
jmp
cmp
je
stos
inc
jne
inc
orb
icebp
jnp
dec
aam
sub
movsl
lret
sbb
outsl
call
inc
add
sub
out
cmp
xor
es
aaa
mov
adc
xchg
or
xor
xchg
shll
sub
sub
repz
aaa
cmovg
adc
ror
loopne
decl
mov
cmpsb
lret
pop
pop
add
out
xchg
sub
sarb
loop
shlb
iret
lods
jg
gs
lret
ja
mov
test
adc
rorl
or
or
orb
scas
fnstcw
pushf
movsl
leave
inc
adc
push
or
hlt
adc
xchg
dec
mov
imul
int
sbb
aad
mov
dec
icebp
fsub
cmc
xor
lea
lret
bound
xchg
cli
adc
fld
int
mov
adc
dec
leave
ljmp
lret
divb
fs
mov
popa
into
stos
or
mov
xlat
ds
cs
or
xorl
xor
jbe
inc
add
xchg
ficoml
lret
mov
sbb
outsb
jecxz
das
int
add
adc
imul
mov
les
int
mov
jg
sbb
xor
push
sarl
lret
test
sti
out
pop
arpl
iret
mov
jae
das
lret
and
dec
imul
scas
dec
mov
enter
popa
add
adc
int
lods
cli
insl
sub
pop
inc
sbb
cs
lret
xor
and
lret
sarl
or
xchg
fldenv
ret
sub
and
mov
adc
leave
xor
xchg
outsl
scas
movsb
inc
lret
inc
jmp
js
scas
push
push
push
xor
cs
in
popa
mov
mov
jmp
pop
ds
mov
lret
test
inc
push
cli
lret
test
cs
int
ret
es
pop
jg
and
mov
and
test
mov
lret
mov
es
jg
inc
add
mov
cmc
sub
lret
insl
imul
lret
push
sbb
mov
test
xchg
pop
and
cmp
mov
loopne
shll
adcl
mov
ja
mov
sbb
adc
add
int
movsl
push
xor
dec
lret
je
push
adc
inc
sub
orl
add
push
stos
mov
ja
xchg
sub
add
test
mov
push
inc
repnz
or
sbb
jnp
inc
lret
push
push
push
fidivrl
mov
sti
gs
inc
es
test
push
push
pop
lret
jmp
fdivrl
pop
data16
mov
sub
fmulp
xchg
bound
cmc
mov
adcl
insb
push
xor
and
lret
popf
cltd
stos
mov
lret
ja
fldt
arpl
lods
mov
lea
mov
push
and
rcll
sbb
roll
mov
fidivrs
int
xchg
jb
fwait
pop
mov
leave
lret
int3
xchg
push
fnstsw
push
add
int
sar
jns
test
inc
lret
jecxz
inc
cli
adc
lret
mov
cltd
mov
pop
inc
ret
pop
rclb
icebp
cli
stc
icebp
lds
dec
repz
inc
and
aaa
push
push
push
icebp
sbb
lret
cli
xor
cltd
mov
loop
ss
mov
neg
push
lret
dec
mov
popf
subb
out
cmpsb
mov
insb
pop
into
pop
rcll
cmp
call
pusha
movsl
aam
dec
or
cmp
mov
lret
shrb
xor
inc
push
lret
xchg
jmp
arpl
pop
lds
add
lods
repnz
xor
lcall
mov
stc
cmc
push
je
dec
lret
dec
leave
aad
and
xlat
jmp
push
mov
loop
xchg
ror
das
inc
pop
outsl
jle
roll
mov
pushf
xchg
xor
xor
punpckhwd
rcrb
js
jbe
and
outsl
add
out
aam
and
in
xor
lret
jo
pop
clc
rcrl
enter
fiadds
sbb
lret
jmp
push
cmp
in
out
push
pop
imul
mov
mov
cmp
mov
mov
mov
pop
pushf
lret
sub
and
lahf
mov
lret
rcl
jle
lret
out
aas
mov
rcll
clc
cmpsb
or
insl
pop
iret
push
leave
rclb
push
mov
stos
dec
rcrl
iret
std
pushf
push
add
jl
int3
stc
fmul
add
outsb
shlw
pop
push
lcall
test
jmp
lret
mov
int3
negl
jnp
push
lret
mov
mov
lret
jp
test
aas
xchg
pop
lcall
mov
imul
jbe
and
dec
test
mov
out
outsb
out
mov
and
push
mov
add
adc
mov
or
inc
or
sbb
push
push
jns
jge
jbe
or
xlat
scas
lods
add
ds
jno
pop
push
test
xchg
test
bound
mov
nop
sbb
ljmp
cli
shlb
popf
cmc
lret
aad
pop
mov
lret
ss
pop
push
jne
add
icebp
cltd
lods
adc
push
mov
push
pop
stc
imul
in
push
jae
push
jle
mov
leave
or
mov
or
insb
lret
adc
cmp
add
aas
and
inc
mov
into
mov
jecxz
pop
push
lret
sti
loop
int3
shrb
mov
pop
or
lock
into
dec
clc
rorb
mov
lret
pop
int
mov
add
lea
inc
xlat
sbb
pop
xor
clc
clc
sbb
ja
ffreep
arpl
mov
dec
add
jb
daa
popa
in
iret
sti
aad
jno
jne
std
lods
cmp
xlat
jge
xchg
cwtl
test
fnsave
ljmp
loop
imul
xchg
push
fdivrl
sbb
ror
outsl
outsb
xchg
sbb
jnp
cmp
mov
mov
fsubrp
lret
or
nop
lcall
xor
in
roll
into
or
mov
addr16
and
divb
dec
fs
inc
enter
mov
mov
lahf
lret
scas
lret
lods
xchg
lods
leave
fsubr
or
sub
or
push
and
mov
cmpsb
cmp
dec
mov
lret
sbb
mov
and
push
inc
pop
movsl
push
xor
xchg
dec
hlt
and
les
je
sub
cmc
repnz
lock
lcall
inc
lret
cwtl
xchg
leave
sbb
lret
dec
mov
out
mov
push
xor
xchg
jne
sti
lods
test
pop
jg
push
test
pop
jb
inc
fdivl
int
fcmovne
in
clc
out
sarb
fwait
and
inc
icebp
pusha
dec
push
mov
and
and
lret
sahf
mov
adc
lret
fimuls
clc
sub
xor
out
mov
or
and
cmp
xor
mov
outsl
scas
inc
mov
dec
ffree
sbb
pop
addr16
cli
sarl
xchg
and
loopne
lret
inc
loop
repz
lret
lahf
aaa
js
pop
cwtl
mov
lock
ja
dec
fwait
lret
mov
rcr
pop
iret
cmpsb
rcrl
or
mov
pop
xlat
js
in
cltd
lret
das
test
fadds
scas
das
ror
pop
or
sub
lret
push
cmp
jne
lret
ss
out
mov
cmp
sub
mov
pop
cltd
xor
lret
cmpsb
mov
fcmovu
and
outsb
xor
or
aaa
outsl
adc
lret
or
std
leave
inc
xor
int3
sub
fistpl
mov
push
push
push
iret
fldenv
push
lret
jge
lea
lret
dec
jg
orb
fs
pop
arpl
fmul
dec
loope
or
push
mov
aaa
int3
jns
lret
ret
or
xor
addl
add
or
inc
jp
xchg
mov
adc
sbb
shl
stos
lret
int3
loope
neg
pop
cmp
lret
sahf
je
jp
loope
pop
xor
not
mov
int
rol
jl
and
lret
imul
cmp
loope
subb
jae
cltd
mov
xchg
dec
pusha
in
adc
cld
add
mov
inc
ret
movsb
xchg
lods
xor
lret
add
rcl
mov
in
ljmp
lret
mov
push
daa
lret
adc
mov
hlt
adcl
sub
frstor
pushf
mov
fyl2x
int
pop
inc
xchg
fmull
mov
lret
scas
mov
or
daa
xor
hlt
lret
adc
loopne
out
lret
pop
fsubrs
insl
lret
rol
jp
addr16
loopne
mov
push
popl
fs
nop
or
popa
das
mov
loope
xor
inc
sbb
stc
aas
pop
lret
cmc
out
mov
lret
cmp
fcomps
dec
mov
push
loop
cmp
jle
jp
or
sbb
repnz
mov
int
inc
popa
cmp
adcl
sbb
mov
icebp
xor
insl
das
loope
pop
pop
mov
lret
inc
or
loop
xor
sbb
jnp
ljmp
nop
jmp
icebp
xor
xor
out
fcmovu
adc
or
or
loope
iret
sub
call
lret
ja
cmp
test
jno
xchg
mov
sub
cmp
add
xchg
mov
ds
mov
leave
mov
jne
pushf
sub
into
fsts
xor
mov
loop
addr16
jle
dec
cmc
jp
arpl
mov
lret
cmp
push
xchg
adc
out
sbb
and
lret
out
or
rcrl
filds
mov
or
jp
lret
and
mov
int
sbb
gs
or
clc
lret
pop
adc
add
iret
cmp
mov
sub
in
stos
movsb
in
fdivp
add
and
ret
dec
bound
push
lret
daa
push
adc
dec
cmp
ret
ret
sbbb
out
test
insl
inc
fmul
js
xchg
or
lret
cmc
psrld
subb
pop
mov
je
cmp
scas
sub
mov
lret
pusha
gs
add
dec
les
mull
mov
int
outsl
icebp
ljmp
es
cmp
in
jge
leave
test
sbb
enter
lret
and
rorb
jl
and
stos
mov
loop
lret
lods
jno
sub
and
mov
push
cmp
push
repnz
jns
pop
ljmp
fcmovne
lret
xor
arpl
cmp
cwtl
cmpsl
test
xor
ficomps
fisubl
push
sub
jno
mov
pop
leave
shr
test
inc
mov
leave
dec
jne
adc
jg
adc
arpl
mov
ja
mov
pop
dec
dec
enter
or
pushf
lret
popf
loop
popl
cs
lret
iret
test
stos
repz
cmpl
rcrl
andl
lret
pop
inc
stos
loope
cmp
jle
in
fmul
call
push
nop
sub
lods
mov
lret
jge
jg
dec
stos
push
hlt
mov
and
dec
sub
sub
or
notl
push
call
dec
cmp
push
dec
enter
add
sbb
add
pop
pop
std
int
adc
popa
mov
jmp
lret
cmp
push
out
xchg
cs
lret
cld
mov
add
pop
fildll
shlb
lret
add
lret
jmp
inc
lret
adc
fisubrs
mov
and
xor
push
iret
push
lds
lret
mov
daa
movsl
inc
lret
and
adc
sbb
lret
aaa
lahf
sbb
lock
mov
bound
push
fcmove
in
scas
lret
rol
adc
xchg
xchg
rol
das
loop
sbb
leave
dec
mov
cli
jo
ljmp
dec
in
std
adc
mov
lret
push
outsb
mov
pusha
lret
addr16
hlt
xor
dec
push
adc
mov
jp
lret
xchg
scas
insb
xchg
or
test
sub
pop
cmpsb
pop
lret
inc
and
push
mov
lods
and
and
add
sbb
int3
shl
in
out
xorl
pop
popa
mov
lret
push
mov
pop
jecxz
cmpsb
xlat
lret
dec
add
lret
xchg
int3
rcrb
stos
add
popa
cltd
fs
push
add
mov
call
cmc
pushl
dec
push
jb
add
lret
loope
jp
and
adc
or
shlb
lds
and
mov
inc
cmp
ds
pop
cmp
cli
fdivl
pop
cmp
xchg
lret
pop
stos
pop
fwait
stc
lahf
dec
inc
int
sahf
movb
dec
lret
in
int
fsts
popf
pusha
shrl
mov
fmulp
pop
clc
jo
mov
xor
int
xor
sub
leave
inc
push
lret
call
jecxz
xor
bound
jnp
rcrb
mov
xchg
jbe
sti
test
sbb
pop
iret
in
pop
inc
or
test
pop
or
cmp
push
roll
lret
fnstcw
mov
lret
decl
fildl
mov
or
stos
inc
ja
pop
lret
push
insl
bound
iret
xchg
cltd
push
jne
inc
lret
jecxz
mov
out
pop
iret
sti
addr16
mov
mov
sub
sbb
insb
jbe
test
push
dec
sbb
fstps
lahf
adc
jg
movsl
stos
xchg
aad
mov
cmpsl
dec
lret
mov
daa
stos
fnsave
out
lret
arpl
fcmovne
xchg
rorl
lret
push
add
cmp
call
bound
jle
in
scas
xchg
das
aaa
ret
sbb
lock
sti
pop
cmp
leave
pop
out
and
sub
jmp
and
cmp
jns
icebp
push
sub
sbb
inc
adc
sahf
xor
xchg
dec
mov
insl
pop
xor
int
sub
or
daa
mov
push
mov
jae
les
mov
lret
jnp
in
cli
sub
xchg
lret
xchg
lea
inc
ret
cmpsb
cs
xchg
inc
sbb
mov
lret
fimuls
mov
jge
sub
mov
repz
jns
jecxz
lret
mov
sub
hlt
fisttps
insl
out
es
lret
rcrl
out
cmc
fdivrl
lret
pop
jge
jno
or
xchg
subb
lret
pop
push
cli
cld
push
shll
fstps
mov
fs
cmp
int
aam
mov
xchg
push
leave
sub
sub
mov
mov
lret
jl
mov
or
in
int
iret
pop
or
es
popa
cwtl
test
jg
fmull
mov
mov
ljmp
ret
outsl
push
sub
mov
or
mov
sbb
sub
mov
out
icebp
or
lea
add
dec
loop
jns
lret
mov
push
test
in
adc
sbb
int
out
imulb
popa
call
lea
mov
int3
jb
jbe
lock
cli
rol
sbb
push
or
push
in
dec
inc
hlt
cltd
fmul
lds
add
call
je
dec
jecxz
cmp
jb
in
mov
sub
pop
shr
jmp
lret
outsl
pushf
test
in
mov
inc
xchg
cwtl
xor
xchg
cmc
dec
cmpsb
jbe
test
sub
sub
out
lods
pop
mov
push
lret
lcall
icebp
lret
or
aaa
mov
sbb
push
int3
std
mov
and
xor
pop
fiaddl
sub
jge
movsb
adc
dec
xchg
mov
lret
inc
push
ret
aam
gs
test
and
repz
jle
ja
aad
sbb
jne
fdivrl
orb
adc
inc
sub
jp
mov
das
ljmp
sub
pop
lods
push
lret
mov
repz
popa
jno
fisubrl
int
cld
push
pop
add
add
push
xor
pop
mov
aaa
cmpsb
lock
inc
ret
xor
xchg
fdivrl
lret
ret
push
push
aas
inc
ror
cwtl
lods
dec
cli
inc
add
iret
lret
lock
mov
dec
or
xchg
sub
sbb
shrl
mov
stos
adc
mov
sub
stos
outsl
daa
lret
sbb
mov
push
add
xor
fdivrs
lret
xchg
sti
xlat
das
inc
lret
arpl
sbb
iret
shrl
fcmovnbe
mov
int
adc
in
dec
lcall
rcll
popf
pop
adc
add
add
adc
lret
adc
and
sub
cld
iret
sbb
rcrl
xor
fidivl
mov
sbb
jo
add
push
leave
je
jl
andb
icebp
inc
out
push
das
out
dec
add
and
repz
and
xor
adc
sbb
xchg
dec
lret
adc
roll
fldenv
movsl
push
mov
scas
and
loopne
je
and
ret
mov
cmc
fwait
cmp
inc
sbb
sub
lods
adc
mov
in
pop
aam
out
cmp
push
lds
push
das
dec
inc
rcrb
mov
fwait
mov
mov
bound
incb
leave
adc
cmpsb
mov
inc
mov
xor
adc
pushaw
push
mov
xchg
lret
in
outsl
jae
lods
pop
in
or
pop
mov
lret
xchg
ret
call
incb
and
pop
adc
push
mov
in
leave
or
xchg
lret
and
fwait
outsl
mov
xchg
sub
cmpsl
movsl
cltd
leave
aas
jno
test
sti
mov
fiadds
mov
inc
and
push
and
xor
push
lret
adc
cmp
int
xchg
add
mov
into
leave
push
aad
fcompl
lret
std
xlat
mov
out
mov
ror
cmpsb
pop
cmc
and
and
int
mov
inc
or
inc
insb
jecxz
mov
jp
mov
jmp
lret
cwtl
add
aad
mov
pop
shll
aas
or
dec
and
lret
sbb
jge
xchg
aaa
xchg
push
and
in
xchg
daa
dec
rcr
fisubs
rorb
fcomps
stos
repnz
mov
les
push
and
pushf
icebp
jp
lahf
dec
aas
sbb
call
std
lret
ss
pushf
repz
sti
adc
xor
jnp
lret
lcall
mov
xchg
testb
push
or
lret
or
or
stos
inc
jne
mov
fmul
sub
cwtl
push
fs
lret
aas
and
insb
aaa
lret
sti
enterw
fs
rcrl
and
dec
stos
jg
cmpsl
add
sbbl
icebp
lret
xor
pop
neg
jo
lret
jmp
dec
in
pop
pop
std
roll
adc
daa
and
jge
scas
xchg
rcl
out
leave
fpatan
cmpsl
jecxz
inc
lcall
cmp
icebp
cmp
data16
inc
lret
adc
pop
lret
int
lcall
xchg
dec
cmpsl
es
test
xchg
cwtl
jbe
xchg
lret
jnp
cmpsb
push
fdivrs
int3
lret
mov
and
jo
lret
shl
jle
jbe
lret
mov
popa
test
lret
push
jge
hlt
cs
lret
cmp
cwtl
ds
lret
mov
jl
lret
add
clc
xchg
xchg
incb
adc
scas
fidivs
cmpsl
cltd
jl
xchg
loop
lret
xchg
mov
repnz
lret
addr16
popa
pusha
xchg
and
iret
repz
negl
mov
shll
push
call
jl
inc
das
push
cmpsb
jmp
jge
push
out
add
jb
and
pop
fwait
leave
xlat
int
jg
cmpsl
fidivrl
inc
andb
pop
lret
in
push
adc
pop
cmp
in
into
imull
ret
dec
popf
fistps
push
lret
repnz
jecxz
lods
cltd
int
or
insl
lahf
outsb
xchg
xor
lock
in
inc
imul
inc
mov
shll
lret
xchg
mov
sbb
push
cmp
pop
dec
ret
inc
imul
leave
loopne
cmp
iret
inc
mov
out
dec
enter
inc
mov
mov
test
and
adc
dec
or
sti
add
or
test
cltd
rorl
mov
mov
xchg
or
push
fcom
mov
shlb
cmp
add
mov
dec
insl
sbb
push
repz
cli
pop
std
aaa
int
cmc
stc
jmp
ss
into
test
ds
shll
push
fcoms
lret
icebp
test
loope
int
cltd
lods
frstor
mov
mov
data16
fidivrs
cmp
lret
dec
nop
mov
leave
stc
push
adc
ljmp
idivb
mov
fisttpl
out
xor
jge
or
dec
lret
jmp
mov
enter
fldt
out
movsb
fcoml
ffree
mov
pop
test
add
pop
pop
out
popa
movsb
jge
lret
cmp
jae
loopne
or
rorl
xchg
jmp
fwait
hlt
dec
ja
in
rcrl
mov
mov
out
dec
cli
std
lret
cltd
add
mov
in
lret
sbb
fcomp
fs
stos
mov
cmpb
push
sbb
xchg
sub
mov
cmpsb
ret
sbb
push
lret
xor
scas
jle
lcall
push
in
lret
jmp
mov
pop
and
lret
fcoms
ss
insl
stc
dec
lret
mov
icebp
cwtl
out
inc
fldcw
mov
jmp
idivl
add
sahf
shll
enter
stc
and
and
lret
adc
inc
mov
repnz
out
lret
je
data16
gs
frstor
mov
iret
aam
inc
pusha
into
jne
enter
jb
das
neg
ret
xchg
sub
xchg
or
sbb
jl
repz
mov
jno
pushf
lret
inc
stc
aad
loopne
mov
addr16
sub
sbb
pop
lods
imul
adc
and
lret
cmc
mov
mov
lret
cmp
jecxz
lret
sbb
mov
subb
and
test
add
clc
fisubrl
in
or
jae
and
shll
dec
daa
mulb
scas
push
ret
cmc
xchg
jnp
fistpl
or
test
mov
sbb
xchg
leave
std
enter
shr
mov
clc
mov
fabs
in
int
sub
lds
lret
adc
xchg
lret
cmp
mov
xchg
sub
pop
jb
sbb
sub
adc
ret
cmp
int
pushf
repz
fcmovne
clc
and
inc
sbb
jp
ret
and
cmp
mov
fisttpl
fwait
pop
les
stc
mov
shlb
pop
jo
movsl
gs
loope
cld
xchg
out
shll
stos
cltd
rcrl
adc
sub
push
push
leave
mov
into
xor
and
repz
fsubl
xchg
lret
cmpsl
mov
lret
inc
js
lock
sbb
sub
jne
out
lret
jnp
pop
xchg
mov
outsl
cmp
pop
xchg
int3
and
shll
or
std
or
lret
push
das
enter
push
sub
sub
scas
sub
lret
jnp
add
dec
stos
jo
xchg
ljmp
testb
setno
movsb
adc
mov
in
mov
or
mov
dec
sarl
pop
lret
pop
cld
daa
mov
int
lret
mov
jnp
push
lret
push
in
ret
xor
lret
or
loope
mov
and
push
dec
lds
mov
ss
inc
xchg
xor
out
inc
scas
mov
sub
jp
mov
xchg
out
lret
mov
add
lret
insb
sub
xchg
jne
pop
pop
jmp
lea
pop
iret
sbb
mov
add
jb
lret
xor
adc
mov
ret
leave
shr
mov
sub
sbb
fisubl
fwait
out
inc
mov
ljmp
cmp
ror
and
push
pop
sbb
lret
cmpsb
daa
not
fisubrl
mov
popa
gs
fsubp
iret
sub
mov
lret
adc
mov
loopne
mov
cs
lret
sub
das
aas
inc
rorl
lret
adcb
repz
mov
xchg
fs
push
dec
xchg
out
js
pop
push
out
xor
cmp
xchg
mov
sub
fbstp
push
bound
mov
enter
in
ret
inc
loopne
aad
mov
mov
cmp
test
sub
fisubl
dec
lret
jle
push
mov
std
push
fmul
ret
fstpl
adc
lret
adc
inc
dec
jmp
cmpsb
xlat
lret
push
jnp
aad
lret
cmc
leave
push
imul
cmp
adc
movsl
lret
sbb
sar
push
and
sbbb
subb
nop
outsl
push
and
and
leave
dec
pushf
les
jle
stos
xchg
push
sub
pop
stos
mov
rorb
ret
cmp
inc
rcrl
ss
jns
or
loope
clc
xlat
rolb
hlt
in
or
add
add
sbb
dec
loope
mov
lret
push
mov
jmp
xor
ds
mov
xor
lret
xchg
jmp
dec
pop
test
leave
jl
mov
outsb
dec
cld
mov
inc
mov
sub
test
nop
pop
lret
ret
hlt
out
xchg
mov
or
xor
scas
lret
jp
out
push
mov
pop
inc
les
lret
into
stos
ss
inc
jne
jae
lahf
out
hlt
hlt
lock
mov
dec
in
mov
add
xchg
inc
je
cmp
sub
xor
lret
les
mov
lret
mov
inc
push
fdivrl
sub
lret
mov
and
mov
cmpsl
sbb
shlb
add
jnp
outsb
jmp
ficoms
cmp
push
lock
xor
pusha
test
sub
gs
mov
sahf
jl
cltd
lret
ljmp
js
pushf
inc
jle
repz
add
loop
dec
lods
mov
add
test
add
mov
sub
leave
sub
aaa
xchg
add
lret
jmp
sbb
jge
or
enter
push
xchg
sub
xor
mov
xchg
dec
test
or
jg
lret
es
repz
fwait
adc
mov
jecxz
fcompl
xchg
push
add
data16
lret
int
stc
fcompl
sub
lret
mov
xor
mov
sbb
outsl
mov
and
in
icebp
dec
in
dec
mov
xchg
outsb
adc
shrb
dec
and
imul
jo
out
lret
cmpb
shl
push
clc
mov
xor
xor
pop
jb
cmp
sbb
clc
xor
lret
xchg
or
jecxz
les
mov
sarl
dec
pop
sub
sub
cmp
pusha
repnz
push
lods
xlat
lret
mov
dec
mov
lock
lock
dec
int3
sbb
xor
mov
in
dec
jnp
shlb
inc
je
mov
mov
lret
mov
sbb
aaa
int
repz
testb
divps
pop
dec
xchg
es
xlat
lret
int3
sahf
mov
xchg
rcrl
jge
into
ror
dec
add
push
mov
dec
mov
ljmp
lret
and
jb
mov
out
mov
pop
mov
nop
lret
andb
lret
rclb
adc
add
ljmp
sahf
in
xchg
shlb
lret
test
fxch
fwait
ljmp
xchg
lret
adc
jno
adc
xor
inc
out
lret
push
and
jle
mov
sti
xchg
fs
fsubrs
mov
ljmp
cwtl
arpl
cmpb
pusha
insb
in
mov
xchg
out
out
sti
and
leave
dec
pop
jl
syscall
mov
fisttpl
popa
mov
cmp
insb
add
ret
fcmovnb
lret
fsts
out
loope
push
lret
xor
loopne
or
mov
insl
push
jmp
jne
cltd
mov
fisttpl
and
push
out
roll
xchg
mov
sahf
orl
jbe
pusha
adc
lret
sbb
call
int
push
sub
sub
test
push
mov
hlt
rcrl
sbb
jge
lret
add
cmpsl
mov
sbb
repnz
push
das
xchg
ljmp
rcrl
pop
sub
pop
lret
jne
cmp
cmpsl
outsl
fmulp
sub
les
std
fcmove
out
sbb
cmp
mov
movsl
js
inc
cli
pop
icebp
sbb
lret
mov
movsb
fwait
ror
movsl
lcall
adc
lret
dec
sahf
rolb
lret
push
mov
jmp
push
sahf
ss
lcall
leave
xor
xor
mov
mov
jl
enter
int3
mov
fs
cmp
adc
lret
push
inc
mov
shlb
loopne
sti
in
mov
lret
push
adc
mov
mov
roll
ret
or
jae
jg
lret
pop
jnp
addb
gs
lds
mov
sbb
lret
dec
push
fcmovb
or
pop
pop
ret
xchg
sbb
cmp
pushf
subl
pop
xor
pop
fidivl
sbb
lret
or
mov
or
jns
cmp
dec
shr
mulb
lret
jnp
cmc
xor
lret
fnsave
jae
lret
sbb
cmp
shrb
xor
inc
mov
ror
lods
jge
lods
int
jecxz
insb
pop
cmp
push
mov
mov
jle
out
cmp
push
out
insb
js
sti
scas
or
stos
jmp
cmp
and
repnz
div
dec
out
outsl
or
and
imul
cmp
cmpsl
inc
roll
xchg
jo
repz
negb
insl
inc
add
lret
add
in
lret
jbe
popa
pop
stos
sub
lret
ror
push
jmp
inc
icebp
hlt
xchg
jnp
cli
insl
ljmp
sarb
lds
lret
iret
inc
lret
insl
and
lret
test
lret
push
clc
test
cli
sub
mov
mov
and
arpl
add
mov
data16
nop
pop
shl
pushf
mov
jo
cli
outsl
lret
leave
dec
cmpsb
jg
arpl
or
pop
mov
jo
push
lods
int3
clc
sbb
leave
lods
pop
mov
mov
lock
gs
loop
and
rcrl
shl
stc
xor
bound
inc
lret
mov
jno
sbb
lret
adc
in
imul
cmp
lret
cmpsb
pop
xor
dec
aam
mov
lret
shll
pop
out
inc
imul
mov
iret
lock
pop
cs
stc
daa
in
hlt
mov
lret
in
outsb
jg
fistpl
aaa
lock
push
add
insb
fsts
mov
jo
bound
jg
lret
or
mov
test
pop
lds
inc
call
sub
lods
mov
pop
sarl
mov
fimull
xlat
lret
cmpsb
xor
xchg
add
cs
xchg
lret
or
inc
sbb
jp
mov
dec
push
enter
lret
dec
xor
mov
sub
jmp
mov
or
or
cld
lds
pop
jge
jns
xchg
stc
mov
fwait
hlt
inc
cmc
push
scas
lret
mov
sub
ss
lcall
lret
cmp
lock
dec
ror
int3
or
iret
repnz
sti
or
cmp
aas
outsl
pop
lret
sub
adc
push
cltd
lret
pop
xchg
cli
xorb
jmp
adc
test
lret
aam
xor
jb
xor
test
lret
and
or
out
ret
sahf
jg
repz
cmp
mov
mov
clc
or
out
cmc
int
xor
repnz
pusha
lret
stc
jp
js
je
mov
mov
fwait
mov
sbb
jo
pop
pop
out
add
xor
or
lods
mov
in
mov
pop
adc
inc
or
cltd
jnp
sub
in
inc
xchg
lret
fildl
mov
subl
inc
lret
cmp
sbb
cmp
adc
icebp
sub
jp
scas
mov
lock
adc
xchg
lret
lds
pop
cmp
cmpsb
int
mov
mov
cmc
xor
fwait
loop
roll
mov
cwtl
aas
enter
jb
test
push
aam
int
nop
cmc
shll
fidivrs
lret
sub
lret
and
fs
mov
inc
push
repnz
push
pop
lret
cmp
enter
add
mov
das
cmpb
outsb
ja
fistl
hlt
leave
inc
pop
sub
ret
cmp
lret
mov
sbb
lret
iret
or
sub
pusha
push
xchg
out
jb
out
dec
aad
mov
xchg
xor
jecxz
aam
lret
enter
push
int
cld
adc
mov
nop
dec
outsl
lret
add
push
mov
and
jns
lods
cwtl
xor
xor
adc
out
add
xor
repnz
jecxz
xor
sbb
pop
bound
gs
sbb
shr
mov
mov
push
or
mov
sti
inc
outsb
enter
mov
add
push
lret
mov
movsb
sbb
cmp
rol
mov
sub
das
jns
daa
jne
pusha
adc
xor
fmulp
mov
pop
sub
fcmovnbe
or
inc
cli
pop
lret
mov
pop
sbb
jp
jbe
sub
in
jmp
mov
lret
scas
cmp
shlb
sub
cltd
push
xor
ret
push
cs
mov
push
mov
xchg
and
lret
mov
xor
in
mov
add
cs
cmp
cli
pop
arpl
out
lea
and
sbb
mov
rclb
or
fimull
test
fistps
sbb
es
pop
mov
addr16
adc
inc
lret
mov
cmp
lret
rcr
stos
cmpsb
int
xchg
enter
lret
inc
pop
xorl
push
stos
loope
scas
lret
push
nop
mov
pop
pop
push
test
lret
int
sbb
pop
pop
jp
xor
pusha
lcall
push
xchg
adc
ror
inc
sub
pushf
mov
mov
cs
adc
xor
xlat
lret
jl
cmp
jmp
icebp
das
into
hlt
dec
or
lret
mov
lret
pop
shlb
shll
and
fdivs
dec
shrl
dec
repz
in
icebp
mov
push
dec
jo
into
lret
rorl
rcrl
mov
xchg
fwait
out
movsl
dec
lret
jb
add
push
sub
jbe
idiv
je
scas
push
lret
jecxz
sub
jae,pt
hlt
lret
fdivs
jmp
push
mov
inc
push
or
aad
lret
xchg
in
dec
ja
outsl
loopne
cmp
ror
and
push
sbb
dec
jbe
shll
loopne
mov
mov
addr16
negb
sbb
inc
in
ljmp
dec
xor
daa
lret
cli
xor
lret
push
push
lods
adc
add
incl
inc
push
mov
rsqrtps
mov
stos
push
lret
lcall
pop
sub
lcall
insl
lret
push
sub
mov
lea
mov
lret
inc
cmpsl
jmp
imul
sarl
pop
push
dec
lret
pop
lret
xchg
sub
lcall
roll
pop
pop
fmul
xchg
sub
iret
push
ret
pop
repz
ss
cmp
add
inc
and
fisubrl
lret
push
mov
lea
lret
pop
cwtl
cmp
lret
xchg
aam
push
jns
mov
lret
push
xchg
andb
enter
cltd
push
je
dec
pushf
fwait
in
pop
mov
fnstenv
xorl
test
ds
cmp
rorl
push
pop
loop
fcmove
lahf
cltd
xchg
addr16
rcrb
pop
lret
mov
xor
dec
or
sbb
test
and
dec
lret
xchg
clc
out
add
or
and
aam
dec
ja
daa
pusha
lea
sub
inc
int
mov
dec
adc
add
jnp
jo
dec
and
mov
lret
jl
xor
and
fldl
mov
imul
lret
mov
xlat
out
and
push
pop
and
push
or
push
push
sarl
xor
dec
xchg
pop
sti
fwait
jne
bound
cmp
ljmp
lret
test
popf
xchg
stos
rorl
sti
mov
jp
and
dec
cwtl
lret
push
sub
inc
mov
aam
lret
movsb
pop
es
mov
push
sbb
rorb
pop
add
imul
xchg
cmp
loopne
lret
fisttpl
inc
pop
push
loope
aas
sub
lret
mov
cmp
das
movsbl
lret
lcall
cltd
push
mov
push
sarl
xor
push
dec
dec
add
shl
adc
mov
dec
or
fwait
dec
pop
mov
pop
arpl
mov
add
xlat
in
mov
lret
sbb
push
ret
dec
adc
pop
daa
out
mov
jne
insb
lret
xor
or
or
fnstsw
xchg
or
lret
in
aad
mov
das
inc
into
dec
mov
inc
lret
dec
adc
lret
or
xor
lret
out
mov
xchg
mov
mov
lret
mov
loopne,pn
jae
addr16
ficompl
bswap
push
sahf
scas
cmc
inc
ja
pop
imul
popf
or
lret
mov
add
jnp
movsb
addr16
add
lock
lret
in
adc
mov
lret
dec
sti
insb
fimuls
daa
int
cmp
lret
dec
sbb
ja
inc
pop
cwtl
cmp
icebp
imul
lret
dec
fs
dec
adc
xchg
push
out
popf
xchg
pop
shl
adc
cs
adc
rcl
sub
jp
fdivrs
or
lret
and
xchg
inc
sub
mov
sub
dec
or
jnp
xchg
xor
aad
icebp
or
cmp
das
lret
inc
jns
jecxz
cmp
sbb
cmp
cli
mov
fcmovbe
fdivrs
add
int
inc
sbb
jp
ss
pop
xor
lret
xchg
leave
adc
fimuls
lret
scas
les
xchg
pop
pop
and
jae
cmp
dec
cld
xor
mov
lret
ja
and
mov
lret
fcmovnb
imul
lret
movsb
imul
add
pop
loopne
sub
lret
xchg
push
ror
fisubs
mov
add
or
sti
or
lret
and
cmp
ja
popf
push
dec
sti
aaa
shr
jae
and
cs
iret
push
lret
and
test
lret
mov
data16
jno
jnp
pop
push
daa
adc
fdivl
pop
xor
add
cmp
rcll
cmpsb
mov
lret
in
and
dec
xchg
push
mov
adc
xor
scas
jbe
jno
jle
shr
stos
mov
push
shll
int
mov
je
add
lret
loope
fistl
pop
xchg
clc
lret
sub
jmp
adc
xchg
inc
jae
jnp
sbb
pop
loope
loopne
lret
cmp
xchg
cmp
cmc
push
lret
mov
les
jo
sbb
pop
lret
push
stos
pusha
scas
mov
rorl
arpl
bswap
adc
cmp
in
xchg
add
sbb
and
cwtl
dec
mov
and
inc
xchg
fnsave
dec
std
shl
and
fisubrs
leave
rorl
sub
mov
push
into
js
mov
xlat
or
loopne
int
div
push
outsl
lods
and
popf
dec
xorb
mov
adc
dec
lret
adc
out
jae
ret
pop
jb
into
lret
sbb
lret
popa
mov
std
neg
jbe
lret
cmp
xor
and
popa
bound
sub
pop
lret
fcoms
pop
mov
dec
pop
imul
lret
mov
sub
lret
stos
scas
dec
mov
cmp
or
int3
lret
inc
enter
pop
mov
inc
je
xchg
cltd
lods
xchg
out
push
mov
push
or
ficomps
out
mov
lret
jmp
sbb
sbb
cmp
pop
sub
push
movsl
cli
lret
adcl
rcrb
aas
cmc
out
shrl
lret
shrb
and
cmpsb
lahf
pop
int
add
push
movsb
sub
and
lea
sahf
out
int
iret
stos
xlat
xorb
mov
fnsave
or
mov
push
push
in
repz
and
lret
xor
xor
mov
jnp
xor
sbb
cltd
pop
sub
adc
adc
mov
dec
call
jl
lret
inc
adc
test
out
xlat
lret
lcall
dec
lret
shl
inc
outsl
lret
cmpsl
cmp
jl
mov
add
inc
int3
mov
push
sbb
fcmovu
lock
jb
jl
xchg
clc
cmp
scas
xor
es
movsb
fstpt
mov
jmp
xor
pop
fwait
iret
pop
add
lret
push
xor
mov
sub
pusha
outsl
dec
adcl
or
pop
inc
aaa
push
outsl
int3
adc
dec
mov
repnz
out
pop
inc
pushf
and
or
mov
mov
outsb
mov
adc
test
xor
sub
sbb
xcrypt-ecb
cmpsl
mov
sub
vprotd
jo
fidivl
dec
jg
xor
add
jne
push
xchg
cmp
add
iret
mov
adc
xorl
jb
mov
mov
or
push
mov
cmpsb
add
lret
dec
push
out
lret
or
lahf
shl
add
inc
lret
mov
xchg
lret
pop
dec
test
scas
xor
lret
add
sti
mov
out
movl
dec
adc
enter
jno
mov
mov
leave
xchg
jmp
dec
outsb
cmpl
pop
and
dec
cmp
ror
inc
pop
jnp
cmp
lret
lret
adc
ds
lods
jge
into
jle
jmp
cli
pop
lret
inc
cltd
nop
inc
divb
iret
lret
and
xchg
lret
and
fsubrs
cmp
into
push
and
sar
call
cwtl
int
mov
xor
and
into
push
lcall
dec
add
lahf
movsl
push
imul
cli
call
xor
call
sub
pushf
mov
xchg
and
enter
shrl
mov
mov
adc
lods
xor
ljmp
fwait
pop
stc
jno
jns
clc
lret
lahf
fs
ret
mov
fwait
cltd
not
les
jecxz
ficoml
xor
jne
or
test
frstor
loope
gs
ret
repz
outsl
inc
dec
fimull
pop
push
xchg
inc
adc
cld
int
aas
inc
shll
inc
loop
divb
mov
popa
mov
lret
add
das
jno
push
pop
stos
lret
daa
xchg
shr
or
cmpsl
lahf
scas
jmp
push
cmp
mov
fs
mov
pusha
das
dec
sbb
or
xor
mov
xchg
push
mov
push
mov
push
or
xchg
push
xor
int
fnstsw
stos
ficompl
cmp
mov
lret
push
push
lret
mov
sahf
in
jg
or
push
push
mov
push
loopne
ret
out
sbb
int3
lret
inc
movb
leave
fcom
push
sbb
sbb
in
stos
mov
lret
mov
repz
mov
imul
scas
jno
push
icebp
lret
mov
aaa
stos
repnz
cmp
fs
and
bswap
and
mov
cmpsb
enter
push
pop
daa
pop
sub
movsb
adc
or
fstpl
mov
inc
mov
popa
xchg
mov
jb
addl
jne
bsr
push
jb
lret
xor
cmc
sub
in
pusha
shlb
rorl
fucomip
cmpsb
sub
sahf
add
sub
aas
inc
xchg
idivl
dec
lret
mov
xor
lret
dec
push
rorl
and
inc
push
sub
jle
popf
jp
rclb
jbe
ds
rcrl
and
sbb
xchg
mov
inc
and
mov
add
popl
inc
setno
pushfw
sarl
mov
mov
lret
jne
test
outsl
jle
or
sub
cmpsl
pop
lret
shrb
scas
xor
xchg
xor
sbb
lods
cli
in
xor
test
adc
and
pop
in
inc
aas
mov
aam
out
data16
cld
lret
push
dec
jle
shlb
repz
jmp
dec
add
cmp
aad
or
jne
lret
repnz
xor
rol
dec
add
jp
stc
repnz
mov
jl
jmp
jnp
xor
lret
mov
inc
sbb
push
fs
sub
repz
pop
repz
mov
lret
cmp
outsb
cli
pushf
lret
inc
loope
std
out
fadd
lret
mov
lods
push
loopne
cmpsl
jg
les
ljmp
jl
repz
iret
lods
lds
leave
mov
leave
inc
or
xchg
movsl
jp
inc
pop
rorl
xor
out
add
mov
mov
leave
lcall
push
loopne
das
mov
fs
push
insb
inc
aas
or
imul
lret
mov
add
xchg
dec
nop
xor
test
js
push
ret
loop
lret
jle
aad
lret
inc
lret
mov
ja
out
sub
xchg
dec
lahf
mov
rcll
pop
jo
dec
je
cmp
mov
sub
pop
sahf
lret
add
push
adc
sub
fists
mov
mov
les
mov
mov
push
ficompl
push
pop
lret
mov
pop
clc
mov
mov
fnsave
mov
dec
and
int3
mov
mov
mov
lret
outsl
fpatan
sub
cmc
pop
shll
sarl
push
cmp
sub
in
std
push
les
jb
outsb
mov
push
fmul
out
sbb
out
cmp
jge
push
int
lret
mov
cmc
mov
int
jb
dec
push
inc
dec
stc
sub
push
lret
fistpll
sbb
pop
sbb
pop
sub
fnstenv
in
xchg
pop
addl
dec
lret
cli
adc
je
inc
jp
mov
ror
pop
push
imul
loop
and
outsl
jns
mov
inc
je
fs
fcmove
adc
out
jge
mov
xchg
movsl
lret
add
add
lret
cmpl
shlb
je
inc
or
pushf
ret
jb
aad
aas
dec
sub
ljmp
inc
fstpl
mov
iret
cmp
dec
clc
and
or
sbb
hlt
lret
pushf
mov
inc
sub
cli
dec
outsb
daa
out
lret
outsl
into
jg
or
imul
lcall
push
pop
fwait
ret
data16
call
in
cmpb
pushf
sarl
jno
sbb
call
lret
push
mov
xor
stc
roll
push
in
dec
rorb
xchg
sbb
jae
shll
cltd
fs
mov
xchg
leave
xchg
int
add
push
arpl
outsl
aas
dec
pop
sahf
inc
pop
add
lret
pushl
jae
lret
xchg
push
pop
mov
inc
adc
cwtl
scas
aas
cmp
push
cmc
adc
push
lds
dec
mov
mov
or
incb
jnp
sub
lods
cmpsb
loop
sahf
lahf
push
leave
cmp
addr16
dec
sbb
sbbb
imul
inc
xor
mov
and
stc
mov
adc
or
inc
mov
mov
fiadds
and
jle
xorb
push
int
or
xor
cmp
lret
stos
iret
ja
div
mov
jb
dec
mov
sub
rclb
rcr
push
xchg
push
inc
pop
sub
in
lret
movsb
cmp
adc
and
jl
pushf
mov
sub
and
aaa
mov
std
jb
outsl
cmp
outsl
iret
jbe
repz
jo
xchg
xor
aad
iret
repnz
lret
int3
insb
cwtl
mov
sub
arpl
out
inc
add
jbe
sbb
jo
sbb
cmp
pop
dec
addr16
push
insl
push
test
rcr
int
pop
orb
dec
mov
leave
aad
imul
leave
sbb
cmc
sbbl
xchg
jno
and
sub
mov
xchg
push
int
daa
jmp
pop
lret
lret
push
mov
mov
mov
repnz
lret
cmp
adc
dec
mov
inc
jo
and
xor
das
lock
mov
adc
xchg
stc
icebp
lret
jne
out
add
call
ljmp
dec
cmp
xchg
push
in
test
cmpsb
dec
and
mov
lea
jl
std
popf
sbb
jo
ret
dec
mov
pusha
and
clc
xor
stos
loope
mov
outsl
add
cld
push
movsl
xchg
mov
sbb
push
test
call
out
out
int
pop
das
lods
sub
mov
push
icebp
or
sub
or
xor
mov
lea
fldcw
xor
jbe
lret
cmc
mov
dec
call
fmul
movsb
adc
mov
sub
mov
mov
jge
mov
ret
fisubs
inc
lret
scas
dec
push
xchg
arpl
mov
les
pushf
xor
rorl
and
sbb
lods
xor
cli
loope
push
enter
insb
aaa
dec
or
ret
das
out
xchg
outsb
dec
push
inc
jge
sbb
add
fistl
into
rcrl
pop
and
lret
repz
pop
rcrl
lret
lock
jne
insb
in
and
mov
into
loope
rcrl
das
rcrb
and
jge
stc
or
repnz
ret
stc
lret
or
aaa
push
xchg
dec
lret
sbb
pop
add
stos
push
or
out
rcrl
xor
lret
rorb
xchg
push
or
lret
js
pop
dec
dec
aaa
inc
je
std
and
lret
xchg
decb
pusha
mov
sahf
les
mov
mov
fucompp
xchg
lret
push
and
sub
lret
push
xchg
lea
sbb
and
fisubrs
inc
nop
divl
push
arpl
jl
xor
lret
ret
pop
push
mov
lret
repz
mov
leave
daa
jl
cld
and
push
repz
cwtl
pop
dec
cmp
xchg
push
cmp
mov
adc
add
inc
dec
mov
popf
and
aad
rcrl
dec
lcall
mov
sbb
push
int3
test
test
inc
or
lahf
imull
ds
movsb
and
addb
cs
sub
mov
lret
shll
mov
lret
adc
cli
ljmp
hlt
mov
loope
std
ret
out
jp
or
ficompl
cmp
or
fmul
mov
sub
mov
lods
aam
mov
sub
xchg
pop
orl
cli
repz
lret
pop
cmp
aaa
cmp
mov
fwait
cld
arpl
and
lea
pusha
bnd
scas
push
adc
xor
adc
mov
lret
mov
cltd
lret
or
sti
jl
imul
lret
aaa
jecxz
inc
aam
cmc
test
pop
iret
mov
or
into
xchg
jmp
pusha
xchg
lcall
int3
mov
sahf
dec
cmp
icebp
ljmp
dec
int
sahf
pop
xor
xor
lret
js
fs
pop
ret
lret
pop
testl
daa
out
ss
push
mov
adc
lret
pop
lcall
int
push
push
stos
dec
and
ss
xor
cmp
or
xchg
cs
add
mov
insl
lret
fs
ss
inc
xchg
aad
sub
cmp
out
roll
mov
sti
lret
inc
xor
and
sarl
lret
push
jle
xchg
leave
and
mov
jecxz
mov
lret
nop
testb
lret
subl
ljmp
lds
dec
mov
lret
jecxz
lret
adc
mov
jno
pop
gs
into
mov
pop
out
fidivrs
lret
push
outsl
les
repz
cmpsb
lret
aad
xchg
jb
mov
test
mov
or
xchg
iret
pusha
mov
mov
sbb
andnps
xchg
cmp
mov
fidivs
inc
xchg
jl
fadds
cmp
lds
leave
sbb
test
aaa
dec
mov
jp
fs
lret
clc
jl
cld
dec
lret
cwtl
xchg
and
lret
cli
mov
push
xlat
jo
push
lret
outsb
lret
dec
cmpsb
cmp
jmp
call
lods
lret
outsl
xor
jge
inc
add
xchg
repz
cs
pop
jecxz
loopne
jl
mov
mov
lret
das
scas
incb
ds
ss
or
test
fisttpl
lahf
lret
xchg
inc
dec
jne
xchg
cmp
int
cmp
dec
push
lock
dec
inc
es
push
rorl
scas
pusha
sub
or
inc
push
lret
push
pop
pop
sbb
lret
scas
pop
mov
cwtl
dec
sub
sbbl
add
dec
lret
jne
mov
mov
xchg
mov
in
ja
mov
ror
out
in
mov
sbb
lret
inc
sub
clc
add
daa
cmc
int3
mov
xchg
lret
cli
push
sbb
int
insl
scas
mov
add
cs
dec
mov
xchg
lret
test
push
pop
insl
pop
repz
int
mov
imul
sarb
or
sarl
repz
cli
rcrb
cmp
in
jae
call
cmpxchg
iret
fildll
mov
pop
or
lcall
adc
jno
nop
lret
sahf
mov
addr16
int
mov
dec
cmp
test
push
lret
aas
mov
out
lret
lahf
jp
std
sahf
inc
sub
mov
mov
lahf
cmp
iret
fstp
jne
inc
stos
int3
adc
pop
sarb
nop
lret
inc
ret
mov
add
jge
lret
aad
adc
cltd
lcall
dec
aas
pop
inc
shrl
rorl
popa
lret
xor
xor
lods
jo
jae
xchg
test
js
mov
add
std
imul
stc
mov
lret
rorl
into
xchg
add
sbb
or
mov
insl
lds
cs
cmp
pushf
xchg
stos
add
mov
data16
dec
int
push
inc
lret
jmp
mov
inc
fdivl
out
pop
cs
or
shrl
shlb
mov
aad
lock
lret
in
mov
adc
test
xchg
cmp
and
sbb
jae
popa
mov
or
ljmp
outsb
into
jmp
mov
repz
adc
aas
and
lret
int3
orl
push
or
sbb
mov
fnstenv
enter
adc
insb
ficoms
mov
sub
xchg
aaa
dec
scas
xchg
fs
jno
insb
dec
push
push
inc
inc
lret
push
pop
shlb
addr16
xor
and
xor
lret
and
xor
jp
pop
int
insb
dec
mov
sub
push
sbb
pushf
or
jecxz
add
imulb
xchg
xchg
ret
stos
dec
jl
outsl
cmp
add
mov
inc
lret
dec
rolb
pop
and
adcl
int
mov
inc
mov
out
addl
or
add
mov
mov
fnstsw
loop
int
imul
pop
mov
cltd
pop
das
enter
inc
lret
popa
and
cmpsb
es
cmc
ja
shrl
jmp
fcoms
pushf
sbb
cmc
xchg
mov
loopne
nopl
mov
lret
sahf
notl
lcall
fmuls
mov
mov
ret
dec
es
icebp
test
inc
arpl
adcb
xchg
std
hlt
fs
mov
and
lret
in
lds
pop
push
mov
test
sarl
stc
mov
jg
int
xchg
andb
sbb
popa
push
mov
or
lret
jno
insl
int
lret
daa
pusha
lret
repnz
leave
sbb
xchg
sub
fcmovbe
lret
mov
ret
push
mov
mov
int
sbb
jl
sbb
cmp
or
lret
jnp
pop
into
aam
mov
lret
sub
or
ds
dec
js
mov
mov
and
popa
insl
add
ljmp
inc
movl
pop
rol
dec
in
ljmp
mov
or
shrl
xor
mov
xlat
lret
mov
icebp
xchg
sbb
pusha
aas
in
sbb
mov
iret
ss
cli
mov
xchg
int3
clc
pusha
lret
adc
retw
or
jmp
lret
test
sbb
std
lret
in
inc
pop
int3
or
jmp
clc
lahf
decb
mov
sahf
imul
fldt
pusha
cmp
negl
cmp
mov
add
jmp
sub
add
push
int
inc
push
add
sub
pop
inc
jge
push
jnp
lods
lret
bound
xchg
aaa
lcall
push
adc
test
lret
sub
iret
mov
mov
aad
xchg
pop
mov
pop
dec
or
lods
pop
mov
repz
jne
adc
pushf
out
push
mov
jmp
xchg
lret
sub
pop
adc
lret
scas
dec
lods
iret
push
xor
lret
and
inc
cmp
lret
push
mov
jnp
lret
xchg
jecxz
jno
loopne
mov
push
sti
cmpsb
inc
inc
andl
leave
jp
adc
xor
flds
scas
and
mov
fimuls
sub
lcall
out
xor
jns
fcmovnbe
in
vphadddq
and
int
jecxz
xchg
les
inc
repz
pop
shlb
movsb
imul
sub
xchg
insb
mov
stos
rolb
dec
sbb
xchg
and
lcall
adc
mov
mov
sub
std
lret
jno
cmpsl
xchg
stos
int
fstps
cmp
lret
push
jmp
lret
dec
jp
xchg
imul
ror
and
hlt
push
mov
icebp
out
mov
dec
pop
mov
idiv
push
lret
sub
ss
sbb
and
lret
mov
add
or
cwtl
xlat
dec
jmp
cs
inc
jle
in
pop
rcll
xorl
lret
sarb
aaa
hlt
xchg
xchg
mov
pop
lcall
roll
jno
das
or
pop
outsb
pop
fisttpll
push
lret
cmp
hlt
mov
int
xchg
scas
mov
adc
out
push
mov
cmc
outsl
cmp
mov
sub
lret
xchg
xor
xchg
insl
or
xor
fwait
push
inc
mov
sti
xchg
mov
jmp
cmpsl
cmc
dec
mov
lret
test
out
dec
shrl
dec
push
aam
add
jb
push
addb
aaa
test
out
movsb
lret
pusha
lcall
lret
imul
cmp
mov
or
pop
lret
inc
in
mov
mov
mov
jle
shl
cld
add
adc
insl
daa
hlt
pop
mov
or
mov
dec
ss
loopne
adc
in
fcomip
ret
out
mov
into
fiaddl
lret
subb
ljmp
ret
inc
mov
xchg
lahf
movsb
jmp
lret
and
nop
mov
repnz
lret
test
mov
mov
pop
jecxz
loopne
sbb
es
and
lret
das
jle
and
xchg
or
mov
and
lods
dec
mov
iret
push
sub
daa
sbb
cmp
pop
dec
push
and
stos
sbb
fists
lret
out
nop
push
cld
dec
outsb
es
inc
lea
loop
lret
pop
lods
aas
jb
push
pop
rol
ljmp
gs
mov
les
xorb
jns
mov
iret
test
daa
push
jo
pop
mov
popf
xchg
xor
cli
cmp
sbb
dec
sub
lret
and
inc
jbe
and
jl
imul
lock
cmp
lret
jno
xchg
ljmp
mov
jg
lret
cli
add
push
lret
xor
std
loop
lret
sarl
int
idiv
sub
leave
in
test
adc
lret
scas
sbb
push
ljmp
rcr
mov
lcall
jg,pn
mov
lret
das
push
cmp
sbb
mov
fidivrl
out
xor
push
loope
mov
xor
pop
shr
sbb
std
icebp
push
and
sub
adcb
leave
ja
mov
mov
inc
out
sub
mov
insb
das
or
lds
inc
loop
and
lret
mov
das
jbe
bound
enter
out
lret
mov
test
dec
roll
aaa
or
aas
leave
jne
add
jmp
lahf
cltd
sbb
roll
testb
lods
dec
ds
mov
cmpsb
lret
iret
sar
into
ss
pop
adc
adc
mov
adc
lret
jno
aas
jg
mov
lret
ret
loop
int
push
mov
add
pop
fwait
mov
stc
movsl
fcmove
js
cmpsl
push
insl
jno
cmp
pop
mov
enter
push
and
into
leave
adc
ljmp
cmpsl
das
clc
mov
cmp
leave
bound
cmp
push
pushf
lret
mov
xor
jnp
xchg
cld
push
movsb
aam
call
pop
jecxz
jae
xchg
adc
xchg
mov
rorb
jp
inc
scas
mov
xor
cmp
lret
fdivs
notb
lret
mov
mov
push
shrl
push
push
movsl
mov
lret
and
jns
stos
xchg
int3
mov
popa
std
mov
add
mov
sub
lret
rclb
mov
add
int
lret
fcmovne
rcl
les
fisttps
or
aam
shr
xor
popa
faddl
repnz
int
imul
imul
popa
enter
jecxz
scas
int
pop
jmp
inc
dec
fwait
movl
pop
int3
enter
loop
sub
xchg
inc
inc
bound
outsl
test
fcoms
aam
ret
out
cmp
sahf
push
movl
pop
mov
icebp
int
or
icebp
sbb
ret
iret
cmpsl
inc
inc
repz
pop
jmp
lock
iret
sub
and
int
jnp
add
imul
xor
ficompl
push
and
iret
fdivr
xor
in
ret
enter
push
push
bound
lods
loop
lods
xor
add
leave
fdivl
mov
sub
mov
rcl
ret
mov
dec
roll
fildl
or
ss
das
and
repz
ror
add
fsubr
sbb
cld
fistl
dec
or
lds
cmp
jno
inc
int
int3
xor
inc
and
call
add
pushf
adc
xchg
sbb
shll
mov
inc
neg
test
popf
pop
jp
dec
cmp
scas
ljmp
push
sub
faddl
cmp
adc
adc
mov
popa
shll
push
dec
mov
or
aam
ret
iret
imul
ror
push
inc
pop
mov
mov
mov
insb
fdivs
lahf
mov
or
mov
or
add
push
jmp
or
rolb
out
push
sub
lds
mov
xchg
pop
test
mov
pop
int
jecxz
xchg
leave
and
inc
mov
daa
xchg
dec
cmp
lock
test
inc
aam
iret
int3
xor
into
arpl
sbb
iret
in
sub
popf
adc
jmp
sarl
xchg
cld
ljmp
sbb
pop
sar
stos
push
mov
sub
mov
ffree
xlat
inc
jmp
leave
faddl
xor
push
nop
fstpl
shrl
add
mov
aaa
in
test
lcall
mov
inc
int3
cmp
dec
repnz
and
and
push
fdivrs
pop
mov
pop
sti
in
int
mov
jmp
fdivrl
xchg
bound
pop
js
movsl
mov
fildll
cmp
mov
pop
push
arpl
rorb
int3
mov
jl
dec
inc
xchg
or
pop
lret
into
xchg
push
ds
push
xor
fwait
in
pop
les
fbstp
es
push
aam
cli
xor
push
push
pusha
push
mov
jle
cmp
mov
xchg
ss
pop
cli
xchg
vcvtpd2psx
ss
in
daa
ret
cmp
cmpb
sub
sbb
sub
addb
std
xchg
ljmp
movsl
outsb
test
addr16
cmp
fldl
fadd
mov
and
sbb
and
fadds
lcall
pop
popf
pop
pop
movsl
pop
adc
addr16
fwait
mov
insb
lds
push
subl
js
dec
stos
inc
pop
orl
lods
dec
mov
jnp
cmpl
mov
stos
and
imul
mov
inc
and
sbb
out
ljmp
std
icebp
imul
push
and
xor
fdivs
cmp
pop
mov
xlat
fiaddl
add
dec
or
xchg
xlat
mov
sub
xchg
sbb
add
into
push
xchg
sbb
scas
xchg
ret
pushf
out
sub
in
fsubl
and
es
jmp
daa
jg
fiadds
cltd
in
sub
in
ss
push
shr
xchg
int
mov
leave
popf
sbb
out
jle
lahf
jmp
fcmovb
mov
dec
and
mov
mov
adc
inc
xor
pop
xchg
jmp
push
daa
sub
mov
pop
jnp
fmull
in
sub
inc
or
aam
pop
int
fwait
dec
mov
ret
mov
leave
je
mov
rolb
jo
add
subl
lds
xlat
rcrl
ret
add
inc
inc
dec
xchg
loopne
in
xlat
scas
inc
inc
or
aam
int
push
daa
push
ss
inc
aam
dec
pop
test
cmp
jmp
or
insb
cmp
call
aam
mov
aad
or
insl
mov
data16
push
shrb
outsl
add
mov
cmpsl
sbb
cmp
mov
mov
int
mov
cltd
aad
cmp
push
pop
addr16
shrl
xchg
lds
mov
jp
jnp
std
repz
cmc
jbe
dec
movsl
dec
lock
sti
in
adc
push
ret
xchg
jge
ljmp
sti
sbb
push
orl
ret
repz
ffree
mul
jnp
clc
cmp
cmp
inc
lods
aas
sbb
in
shr
xor
enter
xchg
jno
lods
lods
and
leave
cmp
fwait
mov
movl
inc
rcr
xchg
insb
lahf
stos
cmp
in
psrlw
shl
mov
inc
in
mov
shll
mov
jle
cmc
dec
fcoms
dec
fisubl
fdiv
and
cmp
xor
jno
repz
sub
push
cmp
push
stos
and
fcoml
imul
lods
pop
outsl
sub
mov
fisubs
int
mov
daa
xlat
enter
mov
and
scas
mov
mov
and
fildll
mov
sub
dec
jns
nopl
jecxz
xor
push
stos
fisttpll
pop
mov
jno
jl
stos
pop
inc
mov
int
imul
xor
mov
inc
or
rcrl
mov
adc
cmc
jno
fcoml
int
sbb
dec
aad
aam
xor
stos
jns
xchg
int
fmul
inc
es
mov
call
icebp
dec
add
xor
and
lahf
mov
in
xor
dec
js
les
imul
ret
imul
addl
fwait
mov
xchg
mov
inc
or
pop
pop
or
inc
and
sbb
loopne
mov
int
sub
jae
sti
xacquire
sub
fcmovne
pop
out
jae
iret
xchg
adc
testl
pop
enter
push
aad
test
push
enter
push
aad
sti
jmp
mov
adc
cs
pop
mov
fldt
push
cmpsl
ret
xchg
fwait
jecxz
jg
mov
iret
daa
iret
sbb
hlt
bnd
stc
add
lods
adc
sahf
mov
addr16
inc
sub
inc
fildll
lds
lods
in
sbb
jmp
mov
sub
test
arpl
adc
and
scas
or
mov
imul
iret
imul
adc
testb
pushf
mov
out
lret
inc
or
sub
lods
xadd
loop
mov
pop
jg
lahf
or
test
pop
add
lods
or
in
lahf
push
mov
cmpsl
fisubs
nop
mov
ds
xor
aas
aaa
xchg
dec
in
inc
xlat
push
inc
mov
or
out
imul
dec
divl
xor
notb
xchg
and
or
jecxz
inc
sub
xor
pop
cmp
pop
sub
xor
inc
aad
push
push
sub
inc
loop
xor
push
dec
pop
xlat
jno
sbb
imul
push
inc
pop
add
in
and
add
add
adc
xlat
fsts
in
cltd
stos
lods
lcall
push
push
negl
pop
ret
mov
pop
lods
outsl
push
or
fcompl
stos
mov
popa
inc
stos
fs
hlt
sbb
push
jecxz
mov
data16
push
fcmovnbe
in
arpl
sti
cmp
out
scas
inc
and
lods
ljmp
scas
fwait
popf
push
fucomi
jb
add
and
ss
pop
inc
addr16
or
cmpsl
popl
js
dec
push
push
jmp
aad
adc
dec
inc
inc
imul
cs
xlat
pop
dec
addr16
inc
aas
popa
cld
loope
sub
fstps
out
adc
daa
jb
cmp
add
or
mov
jg
cmp
pop
sbb
adc
cwtl
jmp
dec
pop
inc
push
iret
mov
pop
cmp
sub
jno
fdivp
and
xor
adc
sub
dec
add
arpl
push
sub
dec
jg
dec
adc
out
test
in
fsubp
push
ret
mov
inc
mov
or
jmp
stos
jne
dec
inc
or
push
lea
imul
fsubrl
out
subl
lret
popf
xchg
mov
or
mov
dec
push
popf
cltd
sub
pop
fstl
jge
sbb
fcmovu
mul
addb
xchg
inc
push
xor
sarl
cmc
out
orl
in
sbb
cmpsl
xchg
ffreep
inc
lods
fstl
das
or
iret
pop
xor
in
dec
imul
dec
jecxz
in
push
imul
jno
sub
cli
pop
and
ret
in
or
pop
test
add
sbb
in
cmp
mov
lea
out
jmp
cmpsl
scas
inc
addr16
jo
ds
jmp
daa
rcrl
sub
or
cmp
push
xlat
dec
pop
xlat
add
jo
dec
push
cmc
inc
outsb
xchg
sbb
push
cmpl
iret
mov
jmp
fisttpl
jl
push
inc
and
addr16
je
lcall
xlat
jmp
adc
cltd
jbe
in
push
pop
or
inc
pop
cmc
adcb
out
pusha
add
fwait
dec
xor
les
cmp
xchg
lea
fisubrl
jnp
movsl
fistpll
fnstenv
adc
jge
push
fistpll
jecxz
cmp
add
adc
sahf
popf
arpl
sti
enter
call
sbb
lret
xchg
test
ljmpw
xchg
sbb
sbb
and
mov
push
or
lret
jl
ret
insl
add
cmp
and
dec
int
mov
dec
in
add
movsb
fs
add
ljmp
cli
repz
fwait
dec
in
push
ss
sub
movsl
jecxz
cmp
adc
addr16
rol
mov
pop
sahf
mov
xor
mov
enter
add
cmp
mov
lcall
inc
add
push
ror
lock
rorb
and
jle
iret
push
push
cs
or
lret
jecxz
pop
pusha
pop
sub
mov
pop
push
sbbl
lret
repz
mov
in
icebp
out
test
ja
dec
jle
push
test
lods
or
mov
into
cmp
cltd
sub
add
fisubrs
jo
lret
mov
mov
fcmove
test
mov
and
xor
push
gs
sub
jae
pop
outsb
cmc
dec
xchg
inc
push
jb
dec
je
adc
mov
push
xchg
lret
mov
pop
cmp
pop
xchg
lret
pop
daa
mulb
lret
adc
push
push
sbb
xchg
shll
dec
fwait
sub
inc
out
or
out
popf
mov
lret
orb
std
lret
sbb
cli
jp
lret
lock
inc
mov
loope
js
adc
mov
and
jmp
rorl
or
adc
aad
cmp
jnp
addr16
or
loopne
sub
mov
scas
lret
rcr
imul
popf
and
xor
or
subl
lret
pop
inc
or
xchg
ror
sarl
push
in
scas
int3
mov
mov
out
pusha
out
xor
shll
mov
mov
sub
lds
ret
push
lret
dec
daa
arpl
stos
push
sbb
sbb
push
into
xchg
int
je
std
mov
push
jmp
loope
shlb
pusha
mov
jnp
je
lock
jmp
loop
inc
xchg
cld
xchg
lods
iret
and
pop
mov
lret
sbb
lds
fmul
lcall
out
ror
lods
mov
lret
aad
xchg
call
stos
dec
ja
xor
rcr
outsb
repz
sbb
test
mov
jne
xchg
mov
or
push
dec
cmp
lret
dec
xor
xchg
add
js
jg
enter
dec
lret
push
or
jl
xchg
lret
aad
jmp
xchg
aaa
repz
sarb
clc
lret
lahf
imul
out
aaa
popa
rorl
out
ja
mov
fwait
xchg
cmp
push
ljmp
loope
lret
dec
pop
lret
loopne
enter
test
adc
repnz
and
pop
mov
fs
sbb
movsl
pushf
lret
sub
aas
movsb
inc
or
add
ror
xchg
orb
xor
fdivp
mov
nop
insb
push
sub
andb
outsb
xchg
dec
sub
mov
dec
int
outsl
mov
stos
pop
clc
lret
pop
mov
scas
push
sbb
add
inc
je
push
movsb
sar
in
xchg
bound
movsl
imul
cmp
dec
push
jp
pushf
lret
repnz
ficompl
icebp
sahf
sbb
mov
movsl
lret
mov
fldenv
leave
pop
push
cmp
aas
fimull
xor
mov
lret
mov
inc
mov
movsl
sbb
lret
pop
mov
inc
ljmp
nop
dec
aad
adc
xchg
test
addr16
lret
xor
nop
movsl
mov
gs
jo
mov
rcll
push
mov
mov
or
shlb
js
pop
lret
pusha
ret
lds
xor
mov
lret
leave
push
push
inc
push
sbb
xor
sub
loop
imul
lock
xchg
and
sub
fidivrl
lret
sbb
push
and
pandn
lret
lahf
mov
mov
jb
ret
sbb
data16
lret
or
xor
xchg
lcall
notl
lods
leave
cs
sub
lret
sub
sarb
mov
xchg
pop
fmull
loope
sbb
ss
call
dec
shld
leave
out
mov
sub
mov
push
push
inc
sbbl
scas
mov
or
xchg
push
xor
dec
xor
xchg
dec
lret
pusha
ss
aas
loopne
xor
fldenv
and
mov
lret
sbb
test
mov
insb
or
dec
scas
push
aam
ljmp
xchg
in
lret
add
imul
pop
mov
adc
sub
test
add
jge
add
mov
test
or
cmc
mov
lcall
mov
fs
lret
dec
daa
fadds
add
popf
push
pop
and
mov
sbb
test
jecxz
mov
push
add
clc
int
xor
fwait
and
fimuls
inc
mov
sti
into
xchg
jnp
and
lret
rorl
fst
mov
lret
xchg
cmc
int3
lret
dec
sahf
enter
rol
lret
out
scas
sub
lret
xlat
into
es
mov
cmp
ds
mov
sarb
sahf
mov
stc
pushf
inc
sbb
push
ror
pop
lahf
push
cmp
pop
pop
mov
and
test
loop
jne
or
ss
mov
pop
adc
bound
sub
jnp
ds
jmp
scas
mov
lret
aam
jp
icebp
dec
pop
mov
mov
lret
or
dec
mov
and
dec
mov
xchg
mov
jmp
jecxz
dec
dec
inc
sbb
lret
shr
imul
out
lcall
pop
imul
jecxz
in
mov
lret
adc
mov
or
push
int3
jne
and
loop
or
fildl
mov
lret
outsb
push
daa
lea
jne
lret
data16
ja
nop
mov
jmp
add
popf
ljmp
stos
sub
pop
in
jge
or
je
lods
cmp
movsl
sbb
push
jmp
loop
stc
iret
js
adc
int3
mov
bound
aad
mov
iret
std
sub
lea
lret
outsl
xor
jb
inc
aam
mov
ljmp
dec
popa
push
test
jle
jecxz
mov
xchg
mov
push
or
ljmp
outsb
adc
icebp
xchg
xor
in
sbb
insl
xor
sub
popa
stos
lret
out
jecxz
cmpsl
das
hlt
xor
or
jp
or
add
lret
cmp
inc
xchg
or
stos
imul
fdivl
lret
rorl
scas
and
pop
mov
sbbl
daa
mov
jge
xchg
add
sub
int3
popa
sub
jmp
lret
gs
xor
lret
cmp
filds
lret
das
imul
frstor
lret
jecxz
cli
jg
stc
lock
call
sbb
or
shlb
pop
adc
lret
cwtl
pushf
das
outsl
scas
mov
fcomp
out
idivl
inc
imul
sarl
into
mov
test
cmp
dec
pop
sbb
dec
mov
lret
add
mov
adc
xor
shll
jl
call
jecxz
in
lret
xchg
adc
rclb
lret
xor
mov
push
inc
insb
outsb
mov
stc
adc
pop
test
lret
cmc
in
movsb
ret
sub
fidivs
lods
dec
insb
aaa
or
sub
insl
xchg
lret
cmpsw
es
xor
xchg
cld
push
in
sti
cmp
cmp
lret
icebp
out
lret
xchg
or
jno
lret
push
push
mov
lods
lret
outsb
xlat
xchg
xorb
jecxz
int
mov
mov
inc
test
xchg
sub
jnp
pusha
lods
stos
lret
shrl
insb
mov
mov
out
nop
cltd
arpl
inc
rclb
push
data16
dec
sub
jge
pop
lcall
cmpsb
push
xchg
das
mov
push
repnz
and
fs
mov
cmp
ficoms
lret
mov
inc
pop
scas
rcrl
scas
pushf
mov
in
or
push
lret
jle
in
dec
adc
lret
int
jmp
adc
sub
push
lret
ss
imul
fs
xor
jl
rcr
mov
mov
sbb
clc
jmp
jns
out
sub
push
pop
mov
xor
jae
xchg
int3
repz
jl
rorb
mov
xchg
mov
aam
or
ds
loopne
or
int3
lretw
xlat
adc
sub
movsl
leave
sub
lret
inc
lret
clc
add
lahf
lds
lret
dec
cmp
cmp
mov
sbb
cmpsb
fbld
out
ret
lret
pop
jle
cmpsl
insb
jo
jns
insl
and
sarl
or
xor
sub
mov
fdivp
fdivr
lahf
push
divl
or
push
loopne
addr16
mov
and
adc
xchg
lret
test
mov
jg
jl
xchg
pushf
or
dec
cmc
or
daa
sbb
cmp
xchg
pop
js
fxch
sbb
loope
mov
sub
jle
inc
lret
stc
cltd
shll
mov
xchg
lds
test
loopne
enter
stos
push
pop
inc
and
lret
or
pop
cmpsl
cmp
add
cmp
mov
fnsave
scas
inc
inc
lret
out
sbb
outsl
iret
mov
push
xchg
sahf
lret
pop
xorl
sar
xchg
xchg
scas
lock
fldenv
xor
ds
into
inc
push
lret
jnp
scas
mov
push
int
iret
fnsave
or
loope
and
mov
and
aaa
lret
mov
ret
leave
xor
xchg
and
lret
aad
dec
pop
sbb
pop
jl
push
rcl
mov
popf
fimull
xor
sub
outsb
mov
lret
or
add
nop
lret
enter
fidivl
or
icebp
rolb
dec
dec
or
das
mov
lret
and
stos
xchg
push
mov
sbb
dec
inc
lret
fdivrs
fiadds
shl
lahf
xor
rclb
test
or
cld
outsb
test
ficoms
push
test
xor
lret
ret
mov
cmpsb
jl
out
aas
mov
lret
mov
cmc
xchg
ret
jecxz
js
and
jge
mov
push
lret
outsb
lret
stos
in
test
mov
push
dec
xchg
out
mov
add
push
pop
mov
fmul
mov
imul
xor
popa
xchg
add
outsl
add
sub
popa
jg
adc
shl
pop
pop
or
push
addl
mov
xor
fdivrp
loop
lock
mov
cmp
imul
lret
pop
out
out
neg
xchg
xchg
lret
xor
rclb
mov
inc
mov
lods
bound
lret
push
sub
clc
test
inc
xor
mov
cmp
iret
mov
dec
mov
push
ljmp
cmc
dec
jmp
shrl
dec
popl
pop
leave
or
in
sub
insb
fldcw
cmp
scas
into
and
xor
int
add
jno
jbe
push
jp
mov
cli
repnz
xor
sub
shll
adc
fdivp
mov
jb
cli
fadd
std
sbb
test
popf
int
xchg
pushf
hlt
push
data16
aas
mov
add
mov
xor
ds
stc
mov
mov
jmp
fwait
popa
scas
jl
add
scas
shlb
mov
adc
sub
jns
ret
popf
stc
test
mov
dec
mov
jb
in
inc
out
jmp
inc
dec
pop
jae
out
and
shll
mov
fstpl
fs
sar
dec
into
lret
test
dec
movsb
cmpsb
lret
xor
xor
sub
lret
or
adc
loopne
lret
icebp
inc
jmp
mov
cmpsl
cmp
dec
fdivp
sub
jecxz
inc
clc
cmp
jp
aaa
pop
gs
xchg
shll
xchg
pusha
sahf
stos
sub
cld
lret
mov
jl
or
lret
shlb
icebp
dec
lret
fsubs
xchg
dec
sub
xchg
jle
mov
mov
jns
sbb
inc
enter
inc
adc
hlt
lret
dec
xor
jbe
and
in
int
es
lret
xchg
sub
jo
cmp
outsb
push
movl
push
ret
cmp
jnp
lret
add
dec
xchg
jns
jmp
or
popf
call
pop
push
lret
arpl
lsl
and
les
mov
jbe
or
sahf
sbb
ljmp
adc
test
sarl
push
sub
cmp
inc
mov
and
pop
incl
shrl
test
adc
xchg
leave
ja
add
in
mov
roll
jns
lret
cmc
pusha
dec
dec
int
ljmp
bound
pop
sub
daa
mov
test
lret
add
xor
dec
int3
lret
cmp
lret
rolb
movsb
inc
sbbl
push
addl
test
inc
sbb
lret
sub
lret
call
jae
ret
inc
push
stos
test
in
es
dec
jno
jmp
and
lret
xchg
clc
adc
cwtl
add
loop
push
lret
pop
mov
fwait
and
sbb
sub
or
cmc
insl
lods
cs
push
sbb
dec
xchg
or
sbb
add
ret
lcall
cmpb
hlt
jge
mov
inc
test
out
int
push
nop
subl
xor
pop
adc
pop
imul
aam
and
in
addr16
inc
bound
mov
mov
adc
std
mov
fcmovnbe
lret
jae
inc
push
iret
or
push
lret
ss
rclb
xchg
hlt
push
in
adc
lret
js
mov
lret
push
dec
mov
mov
mov
pop
jge
fwait
int
cmp
inc
cld
dec
inc
lret
mov
jne
inc
mov
jns
mov
sti
cmp
xor
testl
xchg
dec
mov
pop
mov
and
adc
mov
and
sbb
scas
fwait
shll
pop
sbb
ljmp
pop
leave
inc
mov
pop
pop
pop
push
pop
aaa
cmp
ret
mov
mov
leave
sub
test
sub
dec
jnp
scas
fnsave
lret
mov
mov
lods
lret
pop
sub
dec
es
lret
and
pop
sub
leave
leave
popf
scas
jne
sub
es
repz
mov
or
sbb
mov
xchg
dec
xchg
fstp
add
lock
ja
and
mov
mov
lret
test
dec
cmpsb
jmp
repz
rcrb
cmpsl
es
cmc
mov
cmp
out
sub
lret
outsb
arpl
repz
and
xor
les
loope
fcmovne
lahf
rclb
lret
jp
stos
movsl
gs
es
jl
cs
fdivrl
xchg
sti
dec
mov
stos
stos
nop
and
pop
cltd
cmp
mov
jp
inc
xor
cmp
negb
push
xor
jmp
iret
fldcw
add
adc
add
lret
insb
mov
lret
loope
jge
and
stos
dec
mov
jns
aaa
and
sub
jl
sub
test
lahf
lret
add
out
mov
test
cltd
jae
lret
and
xchg
aas
jb
lret
add
mov
out
pop
dec
sub
fiadds
aaa
loope
iret
mov
adcb
es
leave
das
mov
or
or
ds
jns
mov
sub
push
rolb
fstl
sbb
jbe
loop
cmp
cmp
cld
lret
jmp
sub
xor
repz
int
fcoms
test
iret
mov
xor
leave
faddl
xor
int
mov
pop
fistpl
data16
les
adc
lret
fbld
mov
icebp
sub
pop
rclb
repz
push
mov
hlt
rorl
int3
lret
jg
data16
or
outsb
ljmp
push
push
stos
push
push
cmp
imul
mov
cmpsb
mov
xchg
mov
and
daa
mov
fwait
sbb
adc
outsl
lret
orl
mov
clc
mov
rorl
in
or
adc
cmc
lds
enter
jb
lock
push
dec
stos
mov
adc
lret
shrb
dec
or
add
mov
cmp
pop
jp
int
mov
addl
rcll
imul
mov
and
popf
test
cltd
sbb
cmp
lret
jbe
in
lret
out
imul
mov
fcmove
adc
rcrb
gs
push
rep
add
divl
and
addb
sub
jae
ss
movsl
mov
jo
adc
mov
jnp
cmp
push
or
dec
pop
adc
data16
popf
aam
xchg
lret
or
push
or
jge
fidivrl
lret
push
and
lret
and
int3
sar
push
vmovupd
mov
test
int
andl
rorl
dec
fdivs
mov
jnp
mov
cli
repz
test
sub
add
shll
pop
stc
push
pushf
cmp
outsb
aam
mov
clc
icebp
pop
dec
ds
sub
lret
scas
inc
sbb
xor
ficompl
inc
les
call
push
sahf
scas
lret
cmp
ljmp
adc
in
popf
sub
ficomps
xlat
jl
rcll
dec
andb
es
lret
push
dec
jno
arpl
test
out
push
ror
leave
cs
into
bswap
lds
sbb
push
popa
pop
xor
loope
jbe
or
mov
cmp
pushf
inc
mov
jmp
test
mov
lahf
iret
mov
xchg
js
or
mov
xchg
add
or
pop
lret
mov
pusha
cmp
roll
leave
xor
dec
lret
cld
jnp
cmp
and
cmpsb
int
push
pop
add
adc
push
or
dec
fisubrs
mov
xchg
fsubrl
lcall
lret
and
mov
jl
add
cmp
jp
jle
roll
inc
jno
dec
lret
pop
mov
int
mov
or
fcomi
in
adc
xchg
mov
sbb
mull
out
xchg
outsl
ss
int
pop
xor
idivb
lds
adc
mov
daa
lret
int3
dec
cld
sti
mov
stc
rcr
pop
fwait
orb
sbb
dec
push
jecxz
inc
ret
push
sub
push
xor
mov
xor
dec
in
inc
icebp
mov
push
pop
lret
inc
fnstsw
aam
dec
xchg
lret
mov
push
jmp
jae
or
cmp
dec
movl
or
rol
shrb
add
mov
xor
pop
inc
cmp
jp
mov
cmpl
adc
or
and
lret
dec
mov
jne
lret
shrl
aam
fidivs
sbb
mov
jne
int3
je
lret
push
or
hlt
cmpsb
mov
jp
ss
leavew
in
sbb
je
fcoms
cmpsl
popa
lret
xchg
lods
fwait
or
add
xorb
es
fwait
mov
xchg
sub
call
int
mov
scas
adc
int
ret
sbb
repnz
mov
sub
cs
dec
push
dec
lret
cld
dec
add
cmp
icebp
inc
inc
bound
js
push
mov
out
mov
and
lret
in
inc
hlt
xor
movsl
insb
xchg
mov
cmp
push
lret
mov
cmpsl
repz
call
xor
pop
sar
push
icebp
mov
lret
xchg
mov
sub
ss
lret
dec
push
int
imulb
sbb
ljmp
ds
movsl
mov
push
jne
sub
outsb
lret
test
sub
inc
pushf
rclb
int
clc
add
mov
ljmp
shlb
loope
sub
xchg
xorl
xchg
cmp
icebp
push
adc
or
dec
inc
sahf
leave
and
lcall
rolb
pop
lret
push
pop
lret
xor
xchg
movsb
lcall
in
cmp
dec
adc
adc
sarl
and
lods
adc
scas
pop
adc
lret
cmp
push
lret
popa
mov
sbb
idivl
insl
mov
cmp
pop
add
xchg
lock
cmp
iret
popf
mov
lret
les
xchg
add
fsubl
mov
testb
sub
test
in
leave
inc
inc
out
cltd
sub
in
pop
fldcw
dec
jno
dec
shll
push
pop
insb
int
cmp
fisttpll
sbb
mov
int3
pop
jecxz
mov
cmp
loop
stos
out
push
mov
jge
dec
cli
jp
xchg
lret
mov
or
sub
sbb
test
cld
and
fldlg2
add
es
lret
mov
lcall
jecxz
dec
xor
push
call
mov
sub
in
jl,pt
mov
lret
out
rcrl
lret
daa
imul
lret
and
repnz
stos
mov
repz
lret
fdiv
cmp
dec
lret
or
ja
jbe
xlat
and
jns
loopne
stos
dec
add
mov
fs
mov
dec
fldcw
sub
fadds
gs
jle
add
push
lret
std
add
adcb
lret
xchg
xchg
stc
lcall
mov
hlt
jle
int
negl
test
xchg
shrb
sub
sahf
mov
push
lret
andl
mov
mov
ljmp
lret
cwtl
jge
push
negb
je
movsl
lahf
mov
dec
fistpll
out
lret
xor
push
pop
fnstenv
inc
cmpb
mov
in
adc
adc
sarb
add
mov
mov
iret
imul
push
adc
push
mov
negl
lret
adcl
repnz
add
cmp
andb
fldenv
lret
mov
fstpt
scas
dec
ror
lahf
mov
lret
push
outsl
sbb
jno
mov
xchg
daa
sub
inc
call
jle
lret
mov
out
imul
sbbl
negb
lock
mov
inc
lret
and
jo
cmp
insl
lret
js,pn
fwait
cmp
cwtl
lret
test
adc
lock
inc
jmp
xchg
inc
divl
leave
jmp
jns
xchg
adc
xchg
cmpsb
insl
push
fwait
sbb
cmp
int
inc
pop
cwtl
rcrl
lods
push
xchg
pop
out
lret
or
popf
mov
or
dec
outsb
movsb
mov
sub
dec
add
enter
mov
stos
ja
fdivp
mov
lret
fisubl
xchg
add
pop
xchg
test
movsb
fstps
jl
shr
dec
movsb
popa
pop
nop
lret
fsub
sub
fwait
inc
loop
lahf
outsl
mov
adc
jmp
cmovle
lret
addr16
or
jge
lcall
mov
je
std
sub
mov
or
mov
xlat
rorb
dec
lret
mov
fisttpl
mov
and
or
adc
lret
dec
addl
int3
push
stos
push
mov
or
sbb
nop
mov
arpl
mov
lret
mov
aaa
je
cs
ss
lret
xchg
shlb
inc
mov
lret
rcrb
cmp
clc
inc
lods
into
add
test
sbb
add
fimuls
lret
fcmovne
jb
mov
jns
xor
mov
mov
dec
out
aas
push
mov
lahf
loopne
and
add
push
ror
test
dec
dec
lret
pop
or
pop
sbb
push
inc
mov
lret
mov
loop
ror
jo
fnstcw
adc
mov
rcll
mov
push
xchg
sub
stos
push
mov
sub
mov
or
dec
mov
adc
pop
mov
hlt
inc
mov
outsb
jmp
xor
into
int
std
xor
jge,pn
rorb
xor
mov
lret
sbb
sbb
add
cli
loop
in
lret
mov
mov
add
js
stc
mov
shlb
lret
stos
dec
sbb
push
and
adc
call
jne
lret
and
repz
lret
lods
pop
mov
fldcw
lret
outsb
adc
sbb
dec
std
arpl
sub
int
lret
ds
scas
mov
pushl
lret
clc
das
pop
dec
ret
adc
pop
outsb
pop
out
sbb
inc
leave
loopne
mov
xor
popf
insb
fcmovne
mov
out
xchg
enter
and
add
dec
adc
test
cmc
shlb
insl
ds
or
sbb
pop
xor
inc
mov
les
fdivrl
mov
and
xchg
icebp
daa
sub
lcall
fidivl
enter
and
xchg
addr16
rol
sbbl
out
lret
scas
std
not
les
faddl
sbb
sub
rcrl
insl
bound
int
push
test
xorb
push
and
pop
sti
icebp
jg
jmp
sbb
lret
mov
pop
lock
sub
lret
in
sbb
int
mov
lea
addr16
aaa
and
xchg
in
inc
ljmp
outsl
test
inc
leave
and
xor
lret
inc
or
lret
sbb
add
lret
xchg
daa
mov
sbb
mov
push
arpl
das
mov
in
or
inc
add
leave
add
jae
repnz
ss
pop
dec
ret
adc
fildll
into
bound
aaa
ror
push
das
ja
sub
pop
cmp
lret
and
imul
jae
pop
lret
scas
jl
xor
pop
mov
repz
jbe
adc
push
in
xor
aad
or
lret
sbbl
and
lock
lret
testb
sti
lret
pop
xchg
jge
jbe
pushl
xchg
pop
in
addr16
pusha
repz
mov
mov
pop
shr
and
mov
lret
xor
dec
adc
out
mov
outsb
mov
pop
addl
lret
jb
lret
jl
fxch
fcmovnu
xchg
sbb
cmpsb
rep
and
jge
lret
arpl
pop
lret
ljmp
popf
push
lcall
xchg
out
pop
add
movsl
pusha
andl
or
les
push
add
cmp
lret
and
jmp
iret
insl
lahf
daa
aad
bound
das
dec
lret
sar
dec
leave
pop
lods
xor
shll
sub
nop
cmp
ljmp
lret
mov
rcll
int3
loopne
mov
add
in
pop
jp
sahf
lods
icebp
push
mov
lret
data16
out
inc
and
mov
outsb
jge
bound
ss
xchg
lret
int
popa
mov
jae
je
xchg
nop
iret
insb
lret
getsec
mov
xchg
lret
data16
push
int3
test
xchg
fistl
cli
lods
mov
lret
mov
xor
rorb
pop
lret
xchg
pop
xchg
jnp
pusha
movsb
lret
das
mov
enter
xor
sbb
adc
retw
scas
inc
jno
jne
stos
pop
jnp
lds
into
leave
pop
jge
das
xor
cmp
sahf
roll
mov
inc
dec
lret
sub
jl
mov
aad
call
out
inc
add
cmpsb
addr16
test
cmp
jmp
clc
xchg
mov
and
or
in
iret
out
repnz
add
aaa
push
mov
adcl
out
lret
lcall
jg
adc
cli
iretw
fsub
dec
fs
shll
rol
cmc
rcrl
push
aaa
or
ret
lret
mov
dec
xchg
inc
adc
lret
in
insb
add
lret
mov
cs
lret
mov
and
outsb
push
cwtl
in
repz
shll
stos
dec
mov
lret
xchg
xchg
xor
dec
xor
lret
cmp
jnp
fwait
inc
mov
lret
or
in
mov
mov
lret
popa
push
arpl
out
cld
sub
call
push
int3
sub
jle
dec
js,pt
lret
aas
lds
jb
cmp
xor
jmp
sbb
lahf
xchg
inc
cmc
pop
pop
nop
lret
dec
clc
cmp
into
js
int
mov
lret
stos
xchg
rcrl
shll
in
or
mov
lret
enter
fdivrs
sahf
jp
inc
adc
in
sub
push
aaa
and
aaa
push
test
or
lret
cld
push
test
jbe
mov
aas
sub
mov
push
lret
add
stos
push
mov
pop
mov
in
mov
mov
lret
mov
jno
cmp
outsb
fs
loope
dec
loopne
jns
jge
cwtl
imul
push
push
fisubs
rcrb
sub
test
loopne
addr16
lock
xchg
popf
xor
push
push
mov
mov
cmp
xchg
cmpsl
gs
pop
fsubrl
push
mov
push
jge
mov
sub
adc
ja
gs
push
inc
mov
cmp
cld
xchg
test
out
outsl
into
cwtl
mov
int
mov
add
outsl
adc
push
lret
add
cmp
xlat
push
leave
jecxz
push
add
push
xchg
or
xor
push
push
enter
pop
out
aam
xchg
rol
leave
imul
lahf
cmp
enter
cmp
push
lret
negb
mov
mov
lret
pop
mov
lret
or
cld
mov
je
and
cmp
jg
lret
scas
loop
jnp
mov
and
fmull
pop
mov
shll
scas
jbe
daa
lret
movsl
sahf
jl
rcrl
push
iret
pop
dec
pushw
loop
das
inc
lret
dec
push
hlt
in
stos
pop
jmp
mov
adc
leave
fwait
or
dec
leave
aam
xchg
push
out
lcall
fnstsw
frstor
ljmp
lods
movsb
iret
inc
jp
ja
icebp
shl
bswap
scas
push
and
dec
cmp
add
int
call
je
inc
addb
mov
mov
xchg
leave
mov
jns
and
movsb
lret
es
cmp
lret
in
mov
and
es
push
mov
inc
data16
lret
xchg
rcll
jae
es
fdiv
in
jns
addr16
popl
and
lret
les
icebp
lock
push
std
push
fdivs
rcr
nop
divl
ret
lret
lret
ljmp
jmp
dec
lret
push
cmpl
jae
or
jnp
out
cmpsb
xor
inc
int3
int
sbb
imul
adc
sub
mov
ret
lcall
jbe
fnsave
loope
adc
lret
sub
lods
rolb
lock
lds
pop
inc
lret
pop
mov
icebp
mov
fisubrl
pop
iret
mov
inc
cmp
lret
xchg
push
pop
setno
ja
lret
bound
adc
rclb
fldt
lret
call
inc
out
lea
lcall
mov
lret
xchg
lret
ljmp
mov
mov
inc
dec
xor
mov
aad
test
cwtl
in
jecxz
neg
outsb
clc
rcr
adc
jnp
in
or
pop
lods
cli
dec
mov
mov
loopne
call
push
or
imul
push
mov
xchg
shll
mov
add
hlt
pop
mov
inc
addr16
out
xor
mov
jg
inc
lret
cld
into
sub
dec
ss
int
inc
sbb
mov
cmp
sbb
push
sub
sub
and
sarl
cli
push
sub
fxch
insl
fisttpl
push
xchg
aas
insb
mov
mov
jge
inc
cmpsb
stos
sahf
stos
lret
lods
or
outsb
fisttps
imull
add
and
add
pusha
mov
rol
mov
dec
xchg
jo
mov
sub
jnp
shl
sarl
loop
sbb
add
ret
xor
mov
cmp
jecxz
mov
pop
add
lret
lods
mov
fnstenv
pop
lret
js
push
pop
lahf
test
lret
inc
mov
into
add
cmc
push
lcall
cmp
addr16
lret
ret
loop
ret
out
rcl
mov
mov
lret
lock
dec
rcll
adc
sub
aas
sbb
loopne
sub
cmp
orl
nop
lahf
pop
mov
xchg
sbb
dec
inc
sub
or
pop
cli
jmp
cs
jge
jae
ljmp
xchg
xchg
dec
push
push
fsubrl
jl
je
inc
adc
or
subl
lret
xchg
sub
cwtl
data16
jo
mov
add
pusha
cmpl
clc
xor
imul
sbb
xchg
dec
mov
pop
mov
dec
lods
fwait
insl
lret
or
rcrl
shrl
xchg
mov
loope
jl
mov
jecxz
jno
lahf
xchg
les
cmpsb
mov
push
int
add
inc
sbb
sahf
addr16
cltd
inc
insb
mov
pop
pop
out
stos
and
push
mov
sti
cld
lret
mov
mov
and
out
or
aas
sub
adc
andl
xchg
mov
mov
loopne
imul
xorb
js
out
pop
rcrl
imul
jno
mov
xchg
repnz
jge
adc
and
xchg
popa
icebp
add
dec
lret
add
mov
sub
cmp
hlt
daa
or
popa
leave
out
arpl
es
pmulhuw
popf
lret
and
dec
ss
aad
lret
pop
sub
aam
dec
fbstp
sbb
mov
lods
daa
sub
push
sahf
mov
maxps
jmp
iret
push
sti
cmpsb
lret
scas
popf
call
stos
lret
lret
sbb
lret
outsb
rolb
mov
push
mov
adc
and
mov
add
out
icebp
cmp
lret
lret
add
jbe
lret
cmp
and
lret
dec
pop
inc
pop
mov
add
stos
rclb
imul
add
xchg
fsubrl
lret
fiadds
fstps
out
mov
lahf
mov
dec
movsb
cmpsl
adc
mov
or
pop
pop
js
and
push
lock
xor
pushf
aad
cmpsl
dec
lret
ret
fwait
xor
dec
out
mov
xor
add
daa
ja
cmp
adc
out
leave
add
icebp
das
repz
push
add
mov
fsubrl
sbb
pop
dec
mov
cmp
xor
lretw
ds
lahf
jnp
push
fldenv
lret
lret
test
fwait
lret
shl
iret
ud1
sub
shl
outsl
leave
inc
cmc
gs
cmpsl
jo
lret
pop
xor
leave
std
push
rolb
repz
xchg
mov
sub
fstp
push
fdivrs
jbe
fsubrp
sub
push
dec
mov
retw
in
les
flds
mov
lret
push
inc
pop
pop
ficomps
add
mov
in
push
popf
sub
stc
leave
dec
sub
pop
lods
pop
mov
aam
cmp
into
rorl
lret
pop
inc
das
push
jnp
pop
divb
jno
push
lds
mov
ds
cltd
in
dec
icebp
lret
cli
adc
andb
iret
ljmp
ret
mov
jb
adc
dec
call
adc
or
ficompl
pop
lret
iret
cmpsl
push
lret
mov
mov
stos
lret
cli
dec
adcl
scas
sub
cmp
pop
dec
andb
cli
or
push
rorl
sbb
mov
outsb
scas
jg
enter
std
xlat
stos
pushf
sub
xor
sbb
loopne
xchg
jg
pop
aaa
lret
fwait
inc
xor
fdivrl
lret
xchg
loop
push
jne
pop
or
jge
mov
cmc
sahf
dec
add
out
cli
test
sar
inc
out
xchg
fidivrs
xchg
mov
adc
jmp
fdivrl
popa
scas
jb
cmp
add
sbb
or
mov
ljmp
sub
lret
mov
rclb
bswap
hlt
pop
stos
shll
inc
test
ljmp
lret
movsb
jae
sub
jp
scas
pop
adc
adcb
ret
or
sbb
ret
lret
xor
lret
inc
leave
nop
push
iret
xlat
sbb
and
lds
lret
sbb
cmpl
jg
or
lret
mov
fs
mov
xchg
mov
daa
dec
lret
pop
mov
scas
push
test
lret
push
in
bound
mov
push
lret
mov
sub
rorl
repz
test
mov
push
dec
sub
cmpl
pop
lret
mov
or
rorl
lret
shll
mov
int
hlt
clc
sub
add
loopne
mov
xchg
pop
pop
mov
jb
mov
lret
lds
add
hlt
pop
aad
mov
dec
lahf
stos
movsl
mov
or
sub
outsb
mov
sub
stc
shrb
hlt
roll
std
insl
out
cld
lret
jge
stos
es
xchg
in
inc
jnp
ror
call
push
pusha
lret
hlt
lret
jno
popa
or
call
jp
inc
mov
scas
je
in
inc
xlat
push
in
cmpsl
or
cltd
aas
mov
xchg
push
rcrl
inc
repnz
xor
out
cmp
jmp
inc
dec
lret
and
popa
mov
dec
pop
les
test
adc
fnstcw
int
mov
mov
lahf
imul
mov
leave
fwait
push
insb
rolb
sub
cmp
dec
test
icebp
jge
pop
cmc
sub
xor
mov
lret
push
shrb
aam
into
pop
pop
pop
lret
in
test
popf
mov
push
mov
pushf
lret
or
enter
xlat
rorl
int3
and
push
lods
rcrb
push
mov
lret
test
out
jns
shll
xor
mov
fmul
call
inc
add
outsl
jg
ror
stc
inc
js
dec
mov
adc
popf
inc
xchg
push
loopew
call
ret
mov
aas
addb
inc
sub
mov
into
mov
adc
dec
xchg
dec
add
sub
lret
imulb
adc
rcll
jbe
jnp
sarl
xchg
cmp
scas
xchg
jecxz
push
cmp
ja
iret
jns
dec
cld
pop
push
push
and
std
gs
jmp
dec
lret
or
pop
mov
iret
cmc
iret
icebp
mov
push
fdivl
sbb
mov
jo
mov
iret
adc
mov
test
lock
and
mov
push
fs
push
fsubr
pop
inc
ds
cmp
push
icebp
leave
repz
mov
inc
lret
and
sub
loope
push
je
xchg
sbb
popf
sbb
dec
or
lcall
iret
pop
dec
push
adc
xchg
jp
and
sub
pop
jbe
jmp
pop
sti
cmp
imul
add
loopne
pop
shrl
ffreep
pusha
fisubs
push
mov
push
shl
mov
lret
dec
test
xchg
std
cmp
inc
mov
xor
rcrb
out
lret
jmp
adc
aad
mov
stos
outsb
mov
mov
imul
mov
jno
cmp
mov
or
add
xchg
sub
push
dec
ja
loope
adc
sahf
test
cmpxchg8b
lret
addr16
faddl
outsl
sbb
cmc
out
in
mov
jne
xor
mov
sub
stc
or
cmp
push
shll
jge
roll
lret
jne
mov
aad
pop
or
test
mov
lret
push
ds
mov
mov
lret
xor
mov
xor
adc
dec
cmp
lcall
mov
pop
pop
adc
dec
push
jo
and
mov
xor
aam
int3
adc
sbb
pop
andl
es
fdivr
ror
cmp
hlt
mov
inc
addr16
xor
jle
mov
data16
sub
je
mov
lret
xor
mov
test
mov
cmpsl
mov
mov
or
adc
cmp
or
mov
imul
jbe
js
roll
int3
jge
lea
lret
push
jecxz
xchg
adc
pusha
clc
daa
cli
jnp
test
xor
lret
xor
cs
scas
aaa
xchg
lret
cmpsb
push
cmpsl
std
inc
and
xchg
jl
mov
lret
clc
and
lret
xchg
fisubl
xchg
push
dec
cmp
xchg
mov
cmpsb
add
adc
dec
xor
and
lret
pop
sub
jge
sti
push
jp
mov
cmc
cwtl
pop
dec
adc
push
pusha
enter
lea
or
mov
cmc
sbb
imul
scas
enter
mov
pop
cmp
and
loope
adc
jno
hlt
push
cli
mov
dec
aam
pop
icebp
js
inc
orl
lret
fs
lret
jb
dec
lcall
mov
add
les
enter
stos
mov
xchg
adc
or
dec
xchg
jl
addb
sub
enter
mov
test
sbb
xor
movsb
loope
clc
xor
xchg
notl
inc
or
dec
int
jae
div
push
lret
jo
or
jl
pop
dec
lret
movhps
xor
movsb
xor
inc
push
cmp
jbe
in
xchg
mov
stos
out
mov
mov
sbb
insl
lods
jg
dec
jge
xchg
add
or
ljmp
fiadds
int
jo
sub
jl
or
cwtl
inc
jmp
inc
lret
sti
outsl
mov
xchg
ljmp
insb
or
shrl
xchg
mov
jmp
push
and
lret
push
mov
inc
icebp
pop
std
and
nop
enter
push
mov
or
addl
in
pop
push
lretw
popf
in
mov
cmp
lcall
ja
xchg
mov
xchg
or
inc
ljmp
das
dec
lret
dec
jmp
sub
xor
fs
mov
scas
mov
push
fstpl
lret
adc
es
daa
aam
lret
pop
inc
cmp
cmp
cmp
push
jl
jmp
lret
push
cwtl
xchg
inc
add
in
pop
aaa
out
mov
and
and
insl
lret
mov
mov
in
leave
in
jl
imul
out
sbb
bound
dec
dec
hlt
in
inc
add
pop
cmp
stos
sub
daa
jmp
sti
xor
movsl
sbb
shl
add
inc
xchg
call
pop
adc
or
stc
xchg
int
cli
scas
es
push
movl
lret
and
repz
push
add
lret
test
and
pushl
sahf
mov
mov
ret
push
add
push
mov
out
add
lret
scas
insl
jnp
adc
js
jnp
jbe
mov
inc
lret
fs
rcr
and
fisttpll
add
push
sahf
fsub
mov
add
outsb
loope
pop
push
sbb
jmp
jae
lret
nop
cmpsl
xchg
ret
aad
rcll
jl
inc
xor
fsub
lods
jp
js
repz
leave
pop
sub
cmp
sbb
fidivl
mov
lret
lret
push
cs
xor
sub
imul
orl
jb
int
iret
pop
ficomps
bound
lods
lret
xor
pop
mov
mov
out
outsb
test
xchg
out
lret
lds
mov
and
push
inc
inc
add
xor
add
sub
popa
in
or
mov
scas
ret
std
mul
sbb
mov
fists
lret
shrb
mov
sub
das
fists
mov
sub
lahf
mov
test
mov
movsb
in
or
xor
test
and
xor
subb
jns
lcall
ret
mov
lret
stos
repnz
dec
jmp
jo
inc
lods
mov
out
mov
bts
cmpsb
cmp
sbbb
push
shl
pop
add
sub
mov
outsl
cli
mov
cmp
repnz
stc
shll
leave
lahf
sbbl
in
lret
cmp
jge
push
dec
pop
pop
leave
xchg
adc
out
imul
sarb
mov
sbbl
inc
mov
into
adc
mov
dec
mov
pop
add
lods
pushf
fs
ror
dec
mov
pop
iret
lahf
xchg
out
lret
adc
mov
std
mov
xchg
lret
pop
sub
sub
lret
jae
ret
mov
lds
lret
hlt
sbb
dec
scas
into
mov
lret
js
in
pop
insl
test
into
iret
xlat
add
or
call
ror
fistl
mov
imul
xchg
mov
lret
popf
pop
cmp
jne
lret
rcrb
int
xchg
in
loop
out
mov
scas
lret
push
pop
test
mov
jae
es
arpl
sbb
adc
test
adc
jle
fsubrs
mov
addr16
sbb
jecxz
pop
lret
clc
repz
jb
jns
scas
sub
fdiv
in
push
push
push
iret
lret
sub
repz
fstps
sarb
leave
sbb
mov
push
out
mov
shrl
movl
stc
loope
cs
fwait
mov
in
cvttps2pi
lret
mov
add
sbbb
leave
fdivp
stos
xor
cld
jp
lcall
jmp
pushf
lret
cmp
sti
repz
insb
pop
lock
popf
mov
pusha
xor
lret
jp
pop
cmp
scas
sub
lret
shrl
clc
sub
lret
jae
push
out
call
jno
js
fistpl
lods
mov
push
lret
orl
repz
jmp
ss
xchg
icebp
inc
jp
lret
les
out
dec
rcrl
mov
mov
lret
in
mov
shll
lret
out
dec
inc
and
or
hlt
adcb
push
lret
stos
addr16
or
lret
out
jb
cwtl
xchg
test
xor
jge
iret
xor
mov
shrb
mov
aaa
jb
mov
cltd
lret
pop
shrb
out
jge
enter
adc
sub
jb
outsl
lret
sbb
call
adc
inc
das
inc
outsb
push
fnstenv
test
or
sbb
lret
movsl
add
lret
push
inc
arpl
ret
inc
sub
jge
icebp
adc
mov
push
out
scas
mov
rcrl
sarb
scas
sbb
iret
aas
and
dec
xor
add
sub
push
mov
lcall
jnp
out
mov
lret
xchg
xchg
fadd
dec
daa
inc
jp
lret
lret
test
rorb
pop
and
rep
imul
dec
cmp
sub
stos
shl
jns
jg
iret
xchg
imul
inc
push
dec
adc
jmp
mov
out
xor
loopne
lret
ret
data16
aam
lds
lret
lret
loopne
push
cmp
dec
es
inc
sbb
sbb
mov
push
add
pop
xchg
pop
int3
mov
dec
iret
ror
mov
cmp
fmul
and
notl
jmp
aad
cmp
jge
push
adc
xchg
mov
jns
dec
das
pop
sbb
mov
es
rorb
in
lret
and
loope
sub
sti
out
pop
xlat
iret
cmpsb
jp
xchg
insb
sbb
sbb
aad
push
btc
clc
mov
add
pop
out
imulb
push
std
ljmp
lahf
dec
cmp
cmpsb
jmp
popa
pop
sbb
jg
addb
je
mov
pop
lret
leave
cltd
adc
test
in
add
sbb
lahf
jno
icebp
push
leave
popf
xchg
sbb
mov
in
lret
aad
loop
xor
jmp
lods
cmc
ret
stos
dec
lret
and
cmp
and
push
das
repnz
jbe
push
mov
movsb
ret
lret
or
dec
jp
mov
jne
enter
inc
or
shll
and
out
mov
adc
jb
into
test
nop
pop
xlat
add
jb
int
xor
cmp
lret
mov
mov
test
ret
cmp
xchg
popa
dec
push
jmp
push
sub
adc
mov
pop
xchg
mov
sbb
repnz
clc
lods
test
rol
xor
je
rorl
sub
xor
in
dec
cmpl
add
rcrb
xchg
ror
jbe
or
lret
or
sub
lods
xchg
mov
inc
test
cmp
sbb
jg
dec
dec
lret
push
lret
scas
dec
sub
push
cltd
lret
jns
jl
rorl
cmc
mov
mov
inc
inc
sbbb
lret
dec
sbb
fildl
fsts
leave
mov
jno
xor
dec
ror
jg
pop
mov
sbbl
lret
pop
dec
push
push
jge
lret
stos
xchg
or
lret
andb
shr
ja
mov
mov
aad
fisubl
and
or
inc
fisubrl
mov
mov
ds
xchg
jbe
fcomps
mov
cmp
icebp
dec
mov
leave
or
ljmp
popf
das
lret
xor
sub
aad
xchg
adc
xchg
out
cmp
and
shrl
mov
gs
fcmove
fidivs
out
pop
jecxz
dec
sub
mov
pushf
push
das
rcrb
cmp
or
sbb
jmp
sbbb
pop
push
cmp
scas
fcomps
cmpsl
je
cmp
mov
movsb
iret
jns
push
fmuls
into
pusha
lcall
hlt
pop
popf
mov
push
fidivrs
cwtl
cltd
sbb
adc
lret
scas
push
outsb
icebp
pop
xchg
nop
cmc
aam
dec
sbb
pop
lea
imul
lret
mov
sbb
icebp
or
cltd
pushf
movsb
lret
mov
pop
aam
xchg
push
xchg
arpl
lret
push
xchg
mov
std
lds
aad
dec
lret
ja
bound
sbb
and
mov
iret
mov
push
push
stc
dec
aam
sub
arpl
adc
movsb
imull
and
lret
mov
sub
sbb
add
jg
push
dec
jne
cmc
xor
and
ficoml
mov
sarl
int
cwtl
push
jle
or
mov
test
ffree
mov
sti
push
popf
add
xor
lretw
dec
sti
in
mov
and
adc
push
in
and
push
out
pop
push
roll
stos
inc
inc
sbb
stos
mov
gs
mov
lea
cmpsb
int
xchg
push
cwtl
mov
mov
xlat
mov
rcll
movsb
add
addr16
flds
inc
ss
leave
xchg
dec
sahf
xchg
test
sub
or
sbbl
or
cmpsl
mov
xor
push
je
lods
mov
dec
sub
push
pop
push
pop
dec
insl
adc
sahf
nop
jl
sahf
rep
dec
lods
mov
popa
mov
mov
out
dec
sub
xor
roll
pop
lods
rclw
mov
xchg
and
cwtl
push
mov
push
mov
push
pop
inc
and
adc
bound
mov
jp
jg
xor
inc
and
or
jb
or
imul
sub
in
dec
fwait
idiv
and
data16
scas
xchg
in
pop
xchg
push
or
push
pusha
push
pop
sub
dec
sub
in
dec
int
push
push
inc
inc
out
push
sarb
ja
jb
jecxz
push
imul
mov
stos
out
and
mov
mov
pop
inc
cmovle
outsb
movsb
push
inc
mov
sahf
cmp
cmp
pop
dec
push
out
sub
fwait
data16
xchg
aad
ret
jge
int
aas
mov
mov
or
ds
mov
push
fisubrl
stos
sbb
or
shlb
xchg
test
jmp
push
fwait
sahf
sub
lret
inc
decl
or
in
xlat
jmp
inc
dec
lret
jae
mov
mov
aad
fldenv
sarl
inc
jmp
imul
sub
out
jb
lahf
or
mov
lret
pusha
mov
lods
sub
pop
adc
jnp
and
andl
cmp
lods
push
dec
mov
xlat
movl
pop
or
cmp
mov
fldl
mov
mov
movsl
cmp
lahf
das
xor
ja
mov
and
aas
xchg
int3
lds
cmp
inc
mov
movsb
dec
bound
mov
jae
dec
mov
xor
mov
paddd
test
push
adc
imul
and
push
cmp
dec
or
or
sbb
arpl
mov
mov
shll
push
jmp
and
test
dec
aam
idivl
ljmp
shr
pop
out
and
pushf
jo
cltd
das
rorb
loop
scas
cmp
xor
push
xor
pop
cwtl
sti
mov
fldcw
lods
inc
mov
aaa
cld
mov
incl
cmpsl
and
pop
ret
rorl
repnz
notb
imul
mov
fwait
orl
inc
testl
pop
inc
mov
rorl
add
ja
pop
add
add
add
add
add
add
add
add
add
pop
add
incl
push
add
add
or
lods
lahf
pop
dec
push
cmpsl
daa
loope
cwtl
test
push
inc
push
or
std
lahf
daa
sbb
aaa
pop
test
mov
jecxz
icebp
pop
xchg
insb
cmpsl
jl
or
sbb
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
shll
negl
mov
xchg
aaa
cmpsl
xor
or
das
xor
out
mov
sahf
das
mov
inc
das
dec
das
push
or
mov
lock
dec
ss
mov
add
sbb
mov
mov
inc
scas
push
mov
mov
mov
mov
iret
loope
sub
loop
mov
enter
push
xchg
add
repz
out
test
xchg
lock
fbld
sub
lret
or
loopne
out
add
add
adc
add
or
test
imul
sbb
sub
cmp
cmp
cmp
cmp
mov
pop
cmpl
test
dec
das
pop
das
insb
repz
inc
hlt
push
cmc
imul
out
or
push
icebp
lock
push
lock
sub
push
lock
leave
lahf
aad
push
cs
ja
in
jl
or
sbb
sub
cmp
mov
pop
outsl
cmp
aaa
lret
sar
jg
add
add
jp
test
pop
add
rol
out
add
add
or
scas
rcrl
push
jl
or
sbb
sub
imul
sbb
call
stos
leave
mov
sarb
scas
fdivs
xchg
cmp
mov
mov
scas
sahf
mov
mov
mov
mov
jnp
mov
mov
mov
mov
mov
popf
dec
push
lock
lock
sub
cmp
leave
mov
cmpsl
add
insl
sbbb
add
add
add
sub
insl
jl
or
test
sahf
push
pushl
in
mov
inc
push
pop
sar
push
stos
sarb
stc
mov
call
inc
dec
jge
pop
or
sub
sub
sub
rcrb
cld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
pop
lahf
cmp
das
pop
das
outsl
das
das
into
das
mov
das
sbb
cmp
leave
mov
hlt
stos
cmc
scas
out
dec
out
jae
adc
xor
out
push
xchg
pusha
push
or
dec
mov
call
xchg
inc
sbb
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
xor
xor
data16
pop
das
push
das
or
adc
aas
stos
subb
leave
movsl
loop
lods
mov
icebp
add
out
xor
das
and
cmp
mov
shlb
cli
xchg
lock
rolb
jne
sub
lock
cmp
or
rep
aaa
mov
lret
fwait
xor
shrl
sub
push
cmp
repz
es
or
jmp
push
sar
out
dec
and
bound
push
cmc
cltd
pop
decl
fwait
xchg
insb
dec
and
pop
pop
repz
pop
icebp
dec
or
scas
mov
xor
xor
imul
rorb
int
pop
lret
and
sbb
lret
and
fistpll
out
dec
dec
push
dec
sbb
xor
rcl
daa
es
cltd
idiv
repz
cli
hlt
addb
arpl
movl
mov
repz
leave
or
int
or
test
xor
sub
iret
icebp
mov
mov
ljmp
mov
sbb
loope,pt
jb
inc
add
icebp
add
and
xor
daa
or
lret
addr16
mov
mov
dec
std
outsl
cltd
inc
xchg
repz
or
into
mov
and
adc
mov
stc
and
dec
sbbb
jmp
out
push
mov
sbb
dec
xlat
stos
fwait
adc
lret
or
or
cltd
jmp
lret
xchg
add
icebp
sub
and
out
cld
mov
dec
pop
mov
lcall
sarb
gs
je
lret
sarb
or
jge
push
imul
mov
daa
mov
dec
inc
sbb
test
lret
adc
fcmovnbe
int
enter
dec
cltd
ret
das
and
shl
cmpb
nop
iret
orb
cmpsl
daa
or
mov
mov
ret
adc
lret
cmovge
ret
out
add
in
add
cmpsl
shll
mov
jne
rorl
test
jmp
cmpsl
fmuls
jmp
mov
and
mov
jb
mov
daa
xchg
sub
or
in
lret
sbb
add
daa
cli
sti
leave
imul
mov
xor
lret
int
mov
fmuls
jns,pn
sbb
loop
mov
shlb
fimull
pop
xor
or
lret
and
iret
mov
sbb
dec
stc
pop
mov
dec
lahf
enter
icebp
ror
jno
aas
sbb
fadds
jns
shr
jecxz
fldl2e
mov
data16
out
aam
insb
ret
fmul
or
fwait
dec
aaa
fldcw
fcmovnu
jp
dec
ror
add
lock
ret
adc
in
lret
xor
push
mov
adc
imul
and
in
jp
sbb
jnp
ret
fadds
sbb
inc
stos
into
xor
lahf
rcrl
outsb
leave
clc
out
xchg
jnp
or
in
int
or
int
ja
outsl
pop
sbb
jl
push
orb
test
cli
mov
push
lret
in
jle
insl
mov
lret
mov
ljmp
jl
sub
lret
shl
mov
inc
adc
ja
sti
jecxz
push
loope
addr16
icebp
push
inc
xchg
leave
lret
mov
mov
lret
dec
dec
fisttpl
lret
int
sbb
adc
and
sbb
icebp
mov
sub
sbb
ss
cs
ret
sub
pop
lret
enter
mov
pop
ficompl
rol
pop
sarl
lret
mov
ds
lret
leave
jno
and
lret
jo
pop
fimull
push
iret
sti
int
fcmovnb
fistps
mov
cmp
xchg
lods
pop
add
sub
push
sbb
dec
pop
xlat
xchg
popf
mov
test
ja
in
outsb
stos
scas
mov
das
lret
pop
xor
pusha
rcr
pop
xor
mov
mov
pop
xchg
out
sti
cmc
in
jecxz
insl
dec
mov
sbb
sbb
push
ljmp
pop
int3
cs
mov
int
shrl
mov
jne
lret
fdivrp
arpl
sub
sub
lret
pop
int
and
mov
fdivrl
lret
mov
out
bound
sbb
jb
jle
jmp
stos
mov
pop
imul
jecxz
xchg
aas
add
dec
inc
cmc
pop
leave
xchg
imul
shll
or
xor
imul
fwait
push
lret
push
mov
push
out
aad
and
hlt
lea
dec
xor
les
mov
pop
sbb
lock
cmpsb
loope
xor
jno
lret
cwtl
jmp
arpl
add
fwait
jecxz
push
mov
sbb
clc
mov
dec
inc
jae
mov
mov
dec
or
mov
jecxz
and
inc
sbb
push
sub
jmp
in
imulb
int
pop
xor
fcmovu
test
clc
lret
xlat
inc
lds
lret
xchg
in
xor
stc
jnp
cli
mov
shlb
rcll
dec
int
in
push
movsl
xlat
xchg
inc
add
sti
inc
sbb
lret
mov
insb
lret
push
das
cmp
out
shll
out
push
xchg
insb
lret
mov
inc
adc
subl
jb
jmp
pop
stos
pop
cltd
xlat
xchg
jge
sbb
lret
mov
inc
jmp
sub
xchg
test
and
pop
ljmp
sub
lret
jmp
mov
cltd
lock
dec
fwait
sbb
cmp
sbb
stc
mov
cmpsb
and
jbe
lret
scas
dec
jae
push
int3
inc
lods
int
add
adc
lret
pop
dec
jge
icebp
lret
sub
jo
out
mov
sbb
mov
pop
lea
cmpsl
mov
lock
lret
xchg
xor
lret
adc
mov
ljmp
mov
mov
jo
pop
sarb
ficoml
pop
loope
int
fstpt
mov
inc
insb
adc
cmp
sbb
loope
and
cmp
lret
mov
mov
xchg
cmp
stos
imul
repz
sarl
inc
arpl
ret
xchg
xchg
dec
lret
inc
lea
pop
iret
sbb
lret
in
and
pop
rcll
out
and
mov
jmp
mov
imul
mov
stos
lret
dec
adc
sbb
movsl
xor
lret
xchg
fucomi
test
movhps
rorl
fdivs
pop
aad
sbb
jne
and
jmp
test
dec
push
xchg
mov
lret
push
cmp
mov
xchg
xchg
arpl
pop
adc
sbb
lods
xor
inc
cld
stos
xor
lret
and
es
cmpsb
sbb
roll
in
mov
lret
lahf
lcall
mov
sarl
cmp
mov
ljmp
push
push
flds
mov
popf
pop
sbb
mov
sbb
xor
mov
inc
add
mov
test
cmp
inc
jns
clc
push
sbb
int
in
ret
lea
jb
js
sti
inc
jp
gs
adc
test
sbb
xor
xchg
popf
mov
dec
and
stc
mov
or
lret
in
lods
jae
ds
cmp
mov
lret
jmp
xchg
fcompl
cmp
shll
mov
rcl
xchg
enter
ret
mov
in
iret
push
and
test
and
xor
fmul
lret
gs
sub
in
mov
jne
cmpsl
mov
enter
aam
bswap
sbb
xchg
cmp
or
sbb
lret
or
mov
mov
jne
adc
jp
dec
sahf
arpl
mov
rol
sbb
dec
mov
add
inc
testl
bound
jmp
adc
mov
jle
aad
xchg
xchg
std
dec
inc
cmp
stc
lret
loop
adc
daa
fisubl
shl
push
je
jp
js
call
inc
in
inc
pop
xlat
in
push
add
xor
xor
sub
dec
xchg
iret
add
jo
mov
lret
sti
jne
xlat
test
jecxz
js
sub
mov
jb
int
loop
fsts
xlat
sub
lret
int3
ss
sbb
xor
lret
adc
cmp
inc
fisttpll
mov
ret
mov
ljmp
aad
mov
stos
repz
jae
in
and
psubusb
mov
sbb
mov
jmp
push
cs
cli
ret
dec
pop
fdiv
jae
mov
mov
dec
mov
lock
leave
imul
test
push
mov
xchg
ljmp
das
sub
fnsave
fcoml
lret
mov
aam
lcall
jmp
jmp
lret
rcll
insb
sbb
rcr
push
stos
ret
mov
shrl
out
pop
int
jmp
xor
cmc
repnz
dec
push
push
cli
lret
jmp
loope
lods
lret
in
xchg
sbb
cmp
adc
dec
pop
shll
and
mov
insl
cltd
dec
lret
xlat
dec
leave
inc
enter
cs
imul
or
pop
imul
loop
inc
lret
ret
mov
or
pop
test
rep
hlt
mov
pop
mov
lret
popf
aas
stos
mov
loope
cltd
lret
ds
mov
mov
mov
sub
jnp
lret
or
push
sarl
scas
push
or
xlat
cmovnp
test
stos
jp
lcall
jnp
pop
cs
test
fcmovne
stc
enter
ja,pt
adc
and
test
sbb
sub
pop
ret
rcrb
adc
int3
mov
add
jp
and
out
cltd
insb
lret
push
divl
adc
sub
repz
inc
lret
xor
fs
imul
sbb
repz
add
ret
fsts
fstl
dec
sub
in
jo
mov
popa
adc
insl
ror
jns
push
push
stc
xlat
lret
aam
push
mov
lret
bound
xchg
imull
and
xchg
mov
or
jl
int
jbe
leave
scas
sbb
and
int3
iret
cmp
push
dec
mov
in
arpl
xor
xor
dec
pusha
adc
rolb
or
cmp
mov
adc
mov
cs
xor
ret
xor
lret
push
add
dec
mov
cmpsb
and
jmp
lret
jnp
cmp
mov
cmp
das
dec
pop
fldl
aaa
popf
lods
mov
jmp
cltd
mov
pop
pushf
adc
out
lret
inc
inc
ffree
in
mov
mov
shll
pop
out
xchg
lret
sub
test
lret
ret
mov
sahf
jne
leave
pusha
xchg
sub
inc
mov
addr16
cmp
sub
push
stos
popf
test
mov
hlt
fldcw
pop
and
sub
loope
mov
dec
aam
mov
lret
xor
imul
lret
movsl
mov
enter
int
jmp
or
sub
lret
mov
aad
push
cmp
lret
loop
js
fadds
popa
sarl
xchg
mov
scas
ljmp
aam
xchg
cmc
dec
sbb
lret
inc
jg
or
insl
sahf
add
jmp
push
lret
std
push
push
int3
and
mov
enter
fistl
aam
add
ja
mov
dec
mov
jge
pop
mov
add
int
ror
cwtl
mov
jle
in
jp
inc
testb
fdivl
cmp
fildll
jbe
push
mov
lret
test
sbb
lret
popa
cmp
pushf
pop
iret
lret
fstpl
jns
adc
mov
or
cmc
adc
mov
dec
sbb
stc
lock
mov
out
lret
and
lret
xchg
test
jle
popa
push
int
aas
ja
bound
adc
dec
gs
xor
mov
pop
outsb
cmp
pop
aaa
sub
fwait
xor
dec
dec
lret
das
push
test
sbb
inc
jbe
sub
pop
push
mov
aad
lret
sbb
push
stos
pop
add
ret
ljmp
sbb
and
xchg
xor
rol
xchg
xor
ljmp
int
dec
inc
rorb
dec
lret
sar
pop
xor
xlat
iret
cmc
lds
mov
cld
and
cmp
dec
lret
mov
pusha
pop
cli
push
idivl
adc
in
xchg
cs
pop
test
mov
sti
and
lret
sbb
inc
push
jae
or
push
or
in
sbb
inc
roll
cmp
sarl
mov
xchg
dec
fs
xlat
sbb
aad
ret
aam
dec
cmc
cmpsl
push
and
stos
xor
sarl
aad
dec
out
mov
cwtl
fiadds
pop
outsl
outsb
inc
push
and
cmpsl
mov
subb
jnp
sub
mov
push
roll
sbb
xchg
movb
lret
push
test
icebp
sbb
mov
and
imul
fdivp
mov
sub
frstor
cmp
mov
mov
sti
lds
dec
or
mov
sbb
jmp
test
fimuls
jge
vdivpd
arpl
and
mov
inc
lret
pop
out
out
pushf
leave
lret
push
cmpsl
mov
in
or
jb
cltd
stos
mov
push
inc
adc
jnp
cmc
xchg
add
bound
test
sbb
inc
lret
mov
and
adc
aas
push
int3
movsl
push
dec
lret
pop
das
lds
jno
out
leave
mov
xchg
cmp
test
and
or
faddp
pop
fnstcw
dec
mov
enter
lret
mov
mov
cmp
ret
int3
and
inc
fisttpll
inc
negb
mov
fwait
sbb
lret
ja
push
mov
mov
leave
jnp
adc
fs
lcall
imul
out
int3
dec
lahf
jmp
xchg
leave
xor
sub
mov
sbb
cli
movsb
ffreep
jp
fldpi
push
cltd
jnp
gs
bnd
fxch
adc
inc
dec
rcl
adc
sub
pushf
std
dec
rcr
imull
leave
jae
inc
aas
repz
lcall
mov
or
inc
rcrl
lret
insb
or
mov
xor
popf
lret
fwait
mov
mov
rcrl
dec
testb
fdivrs
ret
cmp
push
mov
mov
sar
xchg
jecxz
xchg
sahf
add
cltd
ds
hlt
mov
add
fnstcw
mov
scas
ret
fs
jp
inc
repz
sbb
mov
fwait
leave
lret
xchg
cltd
stos
ret
lret
mov
and
adc
and
inc
dec
sbb
je
lea
push
orl
lret
or
repz
sarl
movsl
addr16
inc
sbb
jnp,pn
dec
lret
sbb
dec
jbe
shrb
sbb
inc
fsubs
jmp
add
cli
mov
fistpl
dec
fcomps
in
lret
xchg
inc
into
lds
sbb
ret
pop
lret
jne
fiaddl
cmpsl
inc
int3
mov
mov
leave
pop
adc
cli
mov
jbe
or
dec
stos
ret
inc
subl
cmp
or
lret
js
das
mul
xor
xorl
mov
sub
int
jp
aas
lds
jp
cli
lret
and
mov
rorl
fldcw
sbb
lret
xor
dec
aas
lret
pop
mov
cmpsl
mov
imul
cli
xchg
in
jge
decb
int
arpl
cmpsl
ret
stos
shll
sub
jmp
push
les
or
in
enter
int
xor
push
in
and
repz
mov
js
rcrb
or
shr
sbb
lret
sti
and
rcl
dec
mov
stos
dec
xlat
fmul
jae
xchg
push
xchg
adc
or
xor
jecxz
sbb
lea
iret
stos
xchg
sbb
dec
and
mov
repz
jle
and
jmp
cmp
cmp
enter
leave
push
or
fmulp
and
mov
in
xor
mov
lret
mov
jb
arpl
sub
pop
jecxz
int
hlt
xchg
fstpl
or
cmp
mov
testl
rcl
leave
cmp
jmp
xor
cli
sbb
test
loop
out
lret
dec
mov
scas
inc
sbb
cli
push
pop
cmpsb
aas
int
push
cltd
ror
negb
repz
push
ja
mov
int
add
cltd
or
lret
or
iret
fcmove
adc
stos
push
gs
jmp
shlb
int3
lret
mov
addl
sub
lret
lret
push
xor
inc
mov
jecxz
adc
inc
lret
cmp
loop
xor
addr16
lea
add
xor
add
int3
loopne
int
adc
push
lds
rcrl
mov
aam
lret
imul
jns
pop
fdivr
fiaddl
fxch
lret
sbb
in
lret
push
pop
aad
lret
sbb
ror
dec
cmc
sbb
xchg
lret
je
xchg
pop
out
stc
cmp
sbb
xlat
lods
inc
daa
xchg
lret
and
lds
leave
insb
mov
pop
jp
imul
iret
lea
dec
cwtl
xor
sbb
lret
int3
cmp
cld
pop
test
out
mov
xor
ds
xor
jno
jmp
ficoml
ljmp
lret
cwtl
out
or
insl
lret
imul
lods
dec
dec
js
mov
ret
rcl
out
stos
sbb
or
iret
xchg
jl
pop
xlat
cltd
sub
movl
gs
inc
mov
push
dec
out
lret
std
mov
ret
aad
xor
frstor
test
aam
xor
daa
dec
out
sbb
ljmp
push
and
arpl
js
stos
lret
mov
pop
cmp
jns
outsb
sub
inc
je
dec
pop
repnz
xor
and
std
or
mov
pop
add
jmp
in
lret
lds
push
dec
xlat
loop
lret
pop
push
cltd
ret
pop
jmp
and
or
idivb
push
fdivl
cmpsl
or
xor
idiv
push
nop
enter
shll
pop
test
mov
lcall
das
test
shll
mov
pop
lahf
pop
lret
mov
mov
sbb
jge
jmp
lret
inc
xchg
enter
sub
lret
je
jl
fstpt
movsl
ror
fcompl
notl
add
xlat
bound
dec
dec
sbb
lds
mov
sub
xor
mov
or
inc
xor
inc
in
iret
fisttpll
arpl
addr16
inc
jae
leave
adc
adc
inc
add
xor
mov
or
xlat
lret
adc
js
lret
clc
jl
mov
xchg
pop
icebp
fwait
shll
jp
lret
jmp
cltd
dec
pop
in
hlt
mov
ss
ret
adc
scas
shl
xor
std
jle
mov
fldcw
in
fcmovne
pop
jnp
fdivl
fisttpll
pop
sti
ret
xor
imul
popf
fmulp
std
fmuls
lret
cmp
or
xlat
sbb
jle
inc
lret
inc
movsb
dec
dec
cmpsl
hlt
insl
cli
iret
mov
mov
shrl
xchg
dec
mov
mov
rcrl
push
xchg
or
dec
pop
lret
out
dec
fs
or
icebp
and
dec
and
mov
shl
jmp
or
lret
sti
push
pop
jecxz
and
xor
sbb
insb
in
rorl
ret
insl
jnp,pn
ror
add
cmp
sub
iret
and
jbe
jns
jecxz
pop
lret
popf
dec
xchg
xchg
and
ret
insb
lret
or
or
cmp
fs
shrl
cmc
rcr
fnstsw
imul
add
jmp
daa
imul
or
xchg
insl
fwait
lret
js
sbb
pop
imul
inc
jg
test
stos
xlat
mov
stos
std
ret
lret
inc
inc
push
xchg
int3
imul
mov
jae
xchg
lret
pop
mov
stos
fucomp
fsubr
lcall
mov
mov
xchg
out
or
lret
push
fdivp
inc
notl
pop
lock
pop
insl
int
sbb
mov
sub
es
lret
sbb
rorl
sahf
cmovnp
enter
ret
xor
dec
and
fistpl
lret
sbb
fs
loopne
lods
sub
add
lock
lcall
popa
lret
test
and
add
mov
pop
jne
lret
jo
lea
dec
lods
xchg
iret
pop
inc
mov
mov
lret
xchg
sbb
stos
pop
out
adc
dec
mov
xchg
and
lret
into
dec
fucom
pop
popa
xchg
lds
fwait
lret
rcrb
mov
int3
stos
add
or
sub
sbb
daa
repz
xor
push
pop
in
mov
dec
aas
or
sbb
xchg
mov
mov
jg
iret
xchg
stos
pop
into
xchg
rcrb
mov
push
dec
xchg
push
test
pusha
add
sbb
out
jp
iret
cmp
xlat
mov
jl
sbb
push
outsl
pusha
xchg
and
jb
cli
and
jne
dec
loop
mov
repnz
aam
movsl
lret
sti
xchg
dec
jo
and
mov
xchg
push
jae
test
imul
lret
cmc
add
ss
adc
std
inc
loop
lret
ds
jecxz
ret
xchg
mov
xchg
mov
leave
mov
stos
xchg
outsl
fucomip
sbb
inc
xor
pop
jnp
dec
imul
xlat
out
into
adc
pop
stos
dec
cltd
sbb
mov
mov
fstps
repz
pop
and
jge
aaa
cmp
scas
xor
mov
addl
lret
mov
lret
aas
fildl
shll
sbb
inc
lret
frstor
lds
repz
stc
pop
cmp
leave
dec
push
leave
shll
xor
lret
lahf
xor
sub
jecxz
sbb
out
pop
sbb
mov
fchs
lret
pop
inc
fidivs
add
lret
sub
stos
test
lret
fld
mov
mov
and
lret
jno
sub
in
lret
mov
lea
dec
aas
jae
aam
xor
xlat
sub
test
lret
lds
in
shll
mov
mov
stos
lret
inc
add
lret
dec
lahf
lods
pop
nop
add
jecxz
fadds
push
lret
xchg
push
mov
lret
inc
aaa
sub
jecxz
sbb
sub
rorl
and
cmpsb
pop
mov
es
leave
xor
lret
insl
test
jne
mov
jmp
pop
mov
mov
xor
enter
rolb
sti
lds
sub
dec
rcll
mov
or
sbb
rclb
mov
iret
lods
jmp
cmc
jecxz
out
dec
mov
ret
nop
lret
dec
insb
dec
leave
add
push
pop
mov
repz
ret
lret
mov
out
sbb
das
sarl
sti
lret
dec
sbb
inc
dec
and
lret
imul
and
dec
cli
inc
jno
or
mov
repz
mov
mov
lret
mov
dec
mov
inc
sbb
pop
push
rclb
lcall
in
lret
xor
aam
lret
jb
sbb
lret
sbb
dec
xor
cmp
stc
int3
sbb
mov
inc
je
repnz
sti
ret
push
sbb
dec
or
pusha
leave
out
jbe
leave
cs
jecxz
jae
std
mov
imul
fwait
inc
lret
pandn
scas
outsl
rcr
mov
lods
outsb
dec
add
adc
movsb
jge
lret
ret
in
sbb
leave
aam
test
and
xchg
pop
es
jnp
rolb
int
fnsave
jmp
sub
jns
sar
cmp
int
xor
and
insb
xlat
lret
sbb
lds
lret
lock
mov
ss
shlb
out
fprem
xchg
imul
sti
or
or
jnp
xchg
jmp
sbb
cmp
pop
lret
sbb
repnz
lret
mov
jbe
lret
pop
mov
aad
fcomp
testw
fcoml
pop
xor
jmp
lret
xor
and
inc
ss
or
jns
dec
mov
mov
mov
jmp
lret
leave
cmpsb
iret
std
fildl
mov
mov
lret
ret
dec
xor
pusha
ljmp
xor
imul
sub
fs
stos
mov
pop
add
gs
lret
sbb
add
xor
jecxz
sub
sub
pop
iret
lret
das
subl
xlat
add
lret
cwtl
xorl
xbegin
fcomp
mov
cwtl
lret
cmp
mov
cmc
push
lods
dec
sub
shll
and
push
fnsave
sbb
or
jp
jecxz
lret
jmp
mov
repz
addr16
mov
out
rolb
test
imul
xchg
int3
inc
mov
pop
stos
daa
add
lahf
jno
call
xor
rcrl
pop
sbb
aam
bswap
lret
int3
out
mov
cltd
push
orb
nop
jb
cmpsb
lret
xchg
push
call
cmpl
lret
rcrl
jne
sbb
xchg
lret
std
je
js
push
mov
test
stos
jecxz
dec
icebp
ficoml
mov
arpl
xlat
jne
fstp
push
int
lret
mov
lret
leave
stos
iret
enter
sbb
insb
ja
lcall
iret
mov
push
pop
sub
fcomip
jns
ret
dec
ja
inc
loope
or
sbb
sub
push
dec
aad
out
repz
es
sbb
dec
jno
sbb
popa
mov
lret
dec
xor
push
push
loop
lret
mov
insl
pop
cmp
notl
sbb
sub
leave
ds
mov
cmp
ret
cmp
and
xor
arpl
sbb
roll
jg
fldt
lahf
mov
fadds
sti
es
lret
push
xlat
mov
int
sbb
ljmp
je
in
rcll
neg
sbb
jnp
and
and
sahf
inc
add
das
lea
call
xor
stos
mov
fcomip
mov
xchg
add
dec
mov
mov
sub
dec
ds
sbb
out
lret
cltd
cmpsl
mov
stos
xor
fistps
jmp
push
sub
repz
in
sbb
cmc
xchg
fwait
cmp
jge
inc
push
daa
scas
mov
push
pop
repz
jge
dec
xlat
sbb
imul
and
add
repz
inc
test
daa
pop
fwait
lret
in
insl
mov
lret
jb
jl
dec
lea
fwait
add
sbb
adc
loopne
mov
in
cmpsb
lret
sbb
jp
cmp
lret
fsub
sbb
iret
in
stos
jb
sbb
data16
xchg
iret
dec
nop
add
or
and
mov
sub
lret
test
loop
mov
shll
jmp
addl
les
sub
lret
xchg
test
lret
lcall
sub
loope
lret
out
les
lret
aad
jnp
xor
pop
fstpl
lret
aad
pop
xlat
outsl
inc
mov
lret
pop
lds
mov
sbb
lret
jp
xlat
push
out
xchg
das
add
jo
xchg
lahf
add
sub
or
xchg
lret
dec
dec
int
or
imul
ds
jo
inc
adc
mov
jecxz
loope
test
lahf
lret
bound
mov
aam
add
mov
leave
adc
cld
mov
in
stos
pusha
xor
mov
or
sbb
mov
xchg
in
addb
fwait
lret
test
sahf
movsl
sbb
xchg
or
popa
lret
stos
jne
mov
sbb
cs
int
in
jmp
andb
popa
mov
mov
fcmovbe
sub
das
cld
lret
ret
cmc
inc
mov
cmpl
sbb
ret
xchg
lds
lret
testb
lahf
enter
loope
lret
into
sti
xlat
mov
push
or
dec
pop
ds
out
addr16
out
lcall
in
sar
mov
jae
dec
lret
sbb
sub
and
mov
fcmove
jae
sbb
out
clc
adc
ret
popa
lret
add
jb
xchg
mov
push
jecxz
pop
fstps
in
or
lret
aad
inc
xchg
jmp
xchg
jg
jnp
imul
lret
inc
movsb
test
xor
jecxz
dec
mov
jl
lret
add
js
pop
ficoml
lret
push
mov
roll
lret
dec
xchg
push
addr16
vhsubpd
add
ss
movw
aad
sub
bound
mov
inc
dec
and
and
ret
mov
mov
inc
dec
fsin
xchg
inc
rcrl
es
sbb
and
shll
lea
add
ret
sub
adc
jle
inc
enter
cmp
add
jnp
arpl
lret
inc
pop
mov
dec
pop
mov
add
repz
dec
xchg
aaa
pop
leave
add
daa
jecxz
out
or
out
lret
fcmovnbe
test
ror
enter
mov
mov
push
rol
fisttps
inc
add
dec
jae
imul
out
rcl
daa
dec
jns
decb
lret
pop
mov
cs
call
mov
and
icebp
sbb
lret
mov
lods
lret
sub
xor
add
test
repz
sbb
pop
stc
lods
lret
lret
int3
nop
das
inc
sbb
ret
out
lret
in
and
in
lahf
arpl
leave
test
mov
cli
mov
shr
push
push
or
lea
jge
testb
decl
ljmp
lret
sbb
cmpb
insb
cmpsl
sti
push
mov
push
ds
mov
aam
insb
lret
out
or
icebp
jle
aas
lret
cmp
popa
ret
outsl
jno
mov
jns
fsubrl
scas
lret
add
mov
dec
shll
add
fldenv
pop
stc
in
scas
cmp
dec
push
adc
inc
xor
cmp
push
dec
mov
inc
aaa
ret
lret
ljmp
pop
lret
jnp
sub
fwait
outsb
cmp
sub
mov
lret
fidivs
in
or
lods
test
cmp
mov
loope
jl
mov
add
xor
or
rcrl
pop
mov
lret
mov
fdivl
daa
popf
repz
inc
or
mov
mov
and
lret
dec
jecxz
addr16
sbb
jl
xchg
sub
lret
sbb
aam
push
push
lret
mov
mov
cs
clc
xor
pop
les
and
push
aad
int
push
push
ret
mov
enter
shrl
inc
stos
ror
dec
mov
sahf
rcl
dec
push
xchg
imul
push
adc
lret
loope
in
shll
cmpsb
sahf
dec
and
shll
jns
push
mov
and
loop
pop
imul
stc
mov
dec
push
jae
sbb
jae
addr16
cmc
leave
xchg
jl
and
int3
iret
lret
jp
sbb
sti
ret
pop
cltd
push
mov
loope
and
cmp
and
lret
lds
pop
or
inc
dec
sub
in
sub
enter
leave
lret
aam
push
out
push
cmpsb
push
int
mov
mov
add
lret
out
jge
jmp
dec
cli
sbb
aad
inc
dec
sbb
mov
pop
and
lahf
out
mov
mov
iret
jle
inc
xchg
add
rorl
mov
ljmp
add
aad
out
pop
cmp
sar
adc
cmp
lret
or
pop
iret
lret
jmp
cmp
xlat
lret
xchg
sbb
loope
mov
mov
les
dec
mov
or
sub
ss
mov
inc
push
lcall
test
roll
push
imul
cmp
sub
mov
sti
adc
lret
inc
adc
bound
fwait
jmp
add
mov
ret
xor
clc
cmpsl
add
in
lret
outsl
inc
stos
imul
je
jmp
loop
imul
ret
lret
sub
sub
out
push
pop
add
mov
or
mov
dec
mov
push
sub
lret
jmp
or
mov
inc
negl
enter
and
add
gs
int
dec
cwtl
dec
lret
imul
iretw
mov
dec
pop
aad
push
ret
pop
rcll
popf
cmp
lret
cli
ficoms
jae
ret
or
or
arpl
mov
lret
scas
adc
insb
sbb
adcl
fwait
mov
mov
push
sbb
add
rol
inc
mov
dec
adc
cmp
leave
dec
test
les
jns
iret
inc
dec
movsl
sbb
icebp
inc
sub
shrl
or
pushf
fwait
sbb
repz
inc
int
nop
push
aam
mov
idivb
cmpsl
ret
and
jge
lock
daa
aam
inc
divb
xor
xchg
call
stos
dec
leave
lret
adc
push
lret
sbb
dec
mov
fs
xor
jg
int3
mov
cwtl
std
lret
mov
inc
jae
dec
lret
ret
popf
pop
fisttpll
mov
rclb
dec
sbb
stos
shll
mov
enter
pushf
stos
sbb
lret
push
and
sub
push
mov
fsts
aas
cmpsb
mov
dec
mov
lods
jge
inc
jnp
jp
mov
arpl
jae
enter
push
fwait
jo
imul
lods
dec
insb
or
daa
fnstsw
pop
aas
xchg
test
clc
mov
xchg
arpl
mov
dec
dec
lret
dec
and
lret
jecxz
imul
dec
dec
xchg
xorb
into
sub
cmp
movl
dec
mov
push
fistpl
clc
std
dec
popl
shl
cs
pop
out
jns
and
lret
cmpsl
adc
inc
lret
fwait
sbb
xor
scas
imul
lret
ret
lret
les
push
mov
inc
push
out
lds
dec
fsts
jb
gs
jge
sbb
inc
idivl
lret
das
shll
iret
iret
cmp
adc
out
lret
fistpl
cwtl
fs
xchg
push
movsb
iret
sub
lds
imul
les
lods
addr16
and
mov
insb
lcall
arpl
in
dec
fisttpll
rorl
stc
or
imul
sbb
push
arpl
or
adc
lret
jle
add
outsb
and
leave
sbb
pop
imul
shll
popf
xchg
mov
adc
push
lret
out
mov
mov
out
mov
lret
inc
inc
nop
leave
repnz
mov
loop
imul
inc
lret
push
sbb
or
dec
sbb
pop
add
sbb
lret
mov
mov
int
stos
fcoml
mov
lret
ja
cmpl
test
mov
mov
sti
out
pop
xchg
sbb
mov
popa
or
inc
cmpsl
dec
pop
ficoml
lcall
lret
aad
test
dec
push
push
cmp
or
fnstsw
inc
pop
scas
dec
jecxz
pop
sarl
fwait
scas
leave
sbb
jmp
mov
iret
loope
bound
or
mov
out
pop
int
mov
xor
leave
dec
imul
stos
ret
fidivl
ret
int
jecxz
sti
fldt
jg
pop
push
lret
iret
pop
pop
pusha
push
lock
js
jbe
push
int
je
outsb
jo
or
dec
add
inc
or
scas
sti
lret
fisubl
leave
mov
adc
cmc
jmp
int
xor
dec
stos
lods
cmpsl
test
lahf
mov
dec
xlat
inc
lret
inc
aas
loope
jge
push
cli
lret
pop
sti
or
lret
in
inc
int
mov
lret
ljmp
mov
aam
sti
xor
add
mov
aaa
dec
mov
lcall
daa
mov
xor
xor
lret
mov
repz
in
jmp
mov
cmp
jecxz
xchg
sub
jp
xchg
add
pop
int
cmp
cs
sub
lods
jmp
and
or
rcr
mov
inc
ret
sub
push
push
cld
lds
dec
ret
loopne
shll
mov
movsb
dec
andb
out
adc
repz
push
mov
out
jmp
or
mov
sub
dec
xor
lret
test
dec
mov
in
push
lret
mov
jmp
lret
aaa
jbe
addr16
cmp
subl
repnz
dec
jnp
lret
or
int
lret
jmp
ljmp
cli
lret
cmp
popf
imul
and
mov
sarl
cmc
add
dec
mov
dec
mov
jmp
in
roll
or
mov
popf
mov
out
mov
lret
out
fwait
test
add
dec
add
mov
jbe
jmp
imull
and
ds
daa
sbb
mov
imul
xor
test
lret
jl
lret
daa
push
sti
dec
pop
js
das
int
addr16
movsl
test
cmp
push
aas
mov
lret
dec
lret
or
cmc
repz
std
inc
push
inc
imulb
jbe
push
roll
cmc
dec
and
arpl
sbb
rorl
out
popa
icebp
sbb
daa
dec
adc
push
and
cmp
out
test
xchg
bound
pop
sar
dec
xorb
lsl
dec
aas
sbb
adc
push
iret
rorb
aaa
sub
negb
xchg
cld
sti
pop
js
lods
out
cmp
sub
ljmp
les
scas
ljmpw
std
stc
gs
adc
lret
mov
xchg
pop
test
xor
lock
and
insl
int3
push
add
push
lret
pop
scas
cmc
repz
mov
cmp
arpl
lret
sub
add
out
push
iret
inc
dec
jo
adc
pop
jl
das
sbb
add
fidivrs
or
jecxz
push
lret
je
dec
aad
xor
orb
pop
sub
pop
mov
lret
cmc
inc
aam
inc
movsb
in
fnsave
ja
lret
inc
rorl
adc
mov
mov
mov
push
call
loop
inc
mov
push
lret
xchg
sbb
out
xlat
fdivrl
add
and
pop
jmp
lret
dec
jecxz
inc
ss
sbb
shr
daa
or
dec
frstor
fwait
shlb
test
sub
popf
sbb
std
mov
and
es
or
aad
xor
outsl
psrld
dec
dec
lret
xchg
fcmovu
jns
pop
out
lret
add
pushf
cmp
andl
cmc
int
das
mov
fiaddl
jle
lret
fwait
lea
adc
bound
mov
mov
repz
leave
ret
mov
pop
sub
scas
int3
sar
orb
xchg
or
int3
fisubrl
jne
sbb
mov
mov
mov
movsb
insl
fucom
lret
mov
push
sbb
gs
adc
stos
daa
xlat
and
out
idivl
xchg
xchg
xor
cmpsl
das
mov
inc
cmc
push
out
addr16
ja
pop
icebp
pop
lock
lock
loopne
icebp
cmpsb
lock
div
ds
lock
lock
lock
push
lock
fsubrl
repz
ret
hlt
dec
rcrl
lret
cld
and
push
push
repz
rcr
aaa
cli
arpl
add
daa
sbbl
hlt
xchg
cmc
cmpsl
out
mov
aas
mov
imul
mov
scas
lcall
mov
mov
mov
in
cmp
int
testl
xorb
repz
hlt
and
out
mov
sahf
icebp
mov
inc
lock
lret
and
mov
push
mov
pushf
mov
iret
xor
int
lret
inc
leave
lret
call
test
dec
inc
push
sub
push
in
and
int
cmp
and
or
jb
test
dec
aaa
push
arpl
or
sub
xchg
jmp
ror
dec
add
sub
sarl
loopne
out
lock
xchg
out
inc
out
dec
lock
fidivl
dec
lret
mov
jae
add
push
sub
andb
dec
add
ja
into
and
pop
insb
push
mov
push
mov
in
scas
push
mov
mov
sub
cmp
dec
push
cs
mov
stos
mov
mov
loopne
lock
jmp
push
sbb
outsl
adc
lret
mov
std
iret
lock
in
dec
and
pushf
shll
mov
mov
push
adc
ret
out
ds
push
fimull
dec
shr
mov
test
push
push
subb
or
ljmp
jmp
js
leave
lret
add
mov
mov
mov
scas
fdivs
jp
orl
lret
push
xchg
shrl
mov
mov
mov
mov
mov
dec
xor
fsubrp
mov
dec
int
push
ljmp
insb
add
int3
cmp
leave
mov
lret
and
pop
cmpsl
cmp
insl
out
xor
cmp
mov
jg
aad
repz
cmp
cmc
insl
out
outsl
int
pop
sahf
movl
inc
adc
pop
int
and
cs
mov
jge
pop
mov
add
sbb
adc
roll
rorl
add
pop
andb
xor
call
mov
scas
lret
aas
orb
add
sbb
adc
cmp
xor
inc
or
shrl
jae
adc
xor
lret
mov
add
sbb
int
lret
mov
sbbl
push
icebp
mov
pop
dec
pop
data16
sbb
push
dec
notb
into
cmp
cmpsb
push
mov
inc
and
pop
jbe
imul
add
pushl
adc
mov
inc
xorl
mov
shll
xchg
dec
sbb
adcl
cmp
xor
stos
das
ret
insb
sarb
loop
int
mov
cwtl
sub
imul
repz
clc
hlt
xchg
cmc
fisttpll
jbe
mov
adc
insl
mov
leave
std
xor
popf
push
or
in
dec
dec
mov
cmp
push
mov
jnp
outsb
fsubrl
jns
add
cwtl
push
fwait
rcl
sti
jb
mov
lret
stos
mov
dec
fisttpl
cmp
int3
push
push
mov
std
scas
mov
push
pop
inc
xchg
int
inc
mov
bound
jae
jnp
fxch
imul
repz
repnz
sbb
pop
sub
aas
int
push
insl
jg
adc
mov
leave
shl
lret
clc
mov
adc
xor
imul
fcmovne
leave
int3
inc
addr16
ret
mov
aas
stc
popf
cwtl
out
icebp
pop
ljmp
jno
aad
addr16
in
adc
aaa
cmp
push
pop
fnsave
test
sub
mov
mov
xchg
or
jae
fistpll
jne
bswap
hlt
hlt
jmp
adc
movsb
lret
repz
adc
mov
mov
frstor
into
mov
ror
mov
pop
adc
inc
cmp
cmc
arpl
push
lret
imul
aad
fisttpll
push
int
insb
addr16
push
inc
cmp
or
or
push
bound
aad
lret
sbb
aaa
mov
xchg
xchg
lcall
shl
rcll
or
int
sub
dec
cs
dec
add
sahf
cmp
sbbl
xlat
jecxz
cmpb
inc
push
jmp
int3
add
xlat
repz
mov
ljmp
sti
lret
int
jle
sbb
ret
add
and
pop
cs
xlat
bound
lret
cmpsb
mov
movl
js
dec
inc
clc
lret
jb
mov
int
xor
adc
mov
mov
adc
adc
pop
dec
cmp
das
imul
xchg
push
inc
inc
pop
xor
inc
add
addr16
in
pop
out
lea
fs
xchg
and
into
loopne
mov
lods
adc
mov
loope
mov
inc
fisubl
mov
jp
push
arpl
rolw
lea
inc
and
dec
inc
cmp
mov
jmp
sub
jmp
je
mov
fstpt
xor
adcl
aam
cmp
push
sbb
push
jl
leave
adc
push
sbb
mov
xor
aas
bound
mov
loop
sub
xchg
mov
xchg
add
mov
pop
or
mov
xlat
add
xchg
int3
dec
inc
and
xor
cmp
sub
sub
out
inc
ss
adc
dec
das
outsl
and
repz
push
sub
inc
sarb
jl
push
mov
punpckhdq
iret
pop
dec
aad
dec
cmpsb
icebp
cmp
shll
imul
inc
shrl
pop
in
hlt
ss
clc
pop
mov
ret
cwtl
in
mov
or
xchg
add
rcll
pushf
imul
lahf
out
test
or
mov
jecxz
stc
xlat
sbb
jecxz
sbb
in
pop
js
dec
xchg
aad
mov
jbe
pop
loopne
adc
cld
in
lods
dec
or
pushf
mov
popfw
int
or
sbb
push
popa
iret
aaa
xchg
movsb
sbb
cmpl
test
ljmp
adc
popf
push
aaa
loopne
fwait
mov
stc
mov
mov
mov
sti
jmp
nop
fcomi
mov
roll
jg
and
std
or
xchg
xchg
ret
sub
xchg
pop
fistpl
in
js
push
cmpsl
mov
mov
dec
mov
dec
mov
dec
dec
mov
inc
faddl
dec
imul
adc
lods
in
pop
mov
fidivrl
inc
jbe
jmp
dec
or
imul
inc
dec
xor
sub
movsb
jp
sbb
adcb
inc
mov
lcall
shrl
push
dec
mov
pusha
cld
shrl
or
adc
out
and
fnstenv
xor
push
mov
mov
and
pop
cmp
jnp
mov
and
cmp
ret
mov
xchg
test
repz
ret
ficoms
and
adc
jmp
jecxz
cmpsb
xor
cmp
add
cmpb
mov
frstor
insl
movsl
cmc
aad
out
pmaxub
movsb
hlt
popf
mov
stos
decl
gs
pop
cwtl
sbb
and
lods
pop
push
shlw
mov
xchg
lods
inc
int
aad
xchg
fstps
lds
aad
pusha
roll
jecxz
inc
icebp
fs
sub
inc
push
in
das
lds
lret
xlat
mov
das
xor
mov
pushf
mov
mov
pop
push
sbb
int
pop
dec
xchg
inc
js
je
sbb
push
mov
cmp
mov
dec
cmp
xlat
lods
or
data16
sub
sbb
aas
jmp
cs
paddw
lret
enter
push
pop
push
cmp
repz
dec
mov
add
daa
pop
imul
jnp
popf
lret
pop
lods
push
je
gs
aad
mov
inc
cmp
dec
mov
inc
pop
sub
cmpb
jecxz
pusha
les
mov
or
ret
xchg
or
mov
mov
cmp
push
rorl
pop
fistps
sahf
nop
scas
xchg
pop
sbb
aaa
dec
add
push
cmp
addr16
negl
adc
sarl
inc
adc
fwait
jno
vpshufhw
dec
into
sub
jp
pop
lcall
fwait
inc
mov
sub
dec
cmpsb
mov
dec
cmp
jb
jo
jae
pop
pop
pop
cmp
dec
mov
aam
sahf
arpl
sti
sbb
mov
inc
jo,pt
lods
sub
dec
scas
pop
sti
push
mov
adc
shrb
xchg
push
notb
or
mov
push
mov
lret
jo
xor
adc
inc
add
cld
mov
cmpl
scas
mov
into
add
inc
inc
lods
mov
push
pop
push
dec
xchg
push
sbb
inc
xchg
arpl
cltd
add
loop
push
js
mov
xor
inc
inc
leave
subb
out
mov
mov
fwait
scas
mov
or
mov
cmc
mov
jnp
jecxz
jno
cmpsl
lgs
adc
orl
mov
dec
add
pop
gs
dec
les
testl
fdiv
loop
add
and
test
xchg
mov
cmovb
sub
aaa
test
movsl
jecxz
repnz
testl
fnstcw
xchg
pusha
mov
int
xchg
scas
mov
in
or
jmp
mov
popf
and
adc
xchg
mov
js
mov
leave
push
jecxz
loop
fsts
pop
dec
dec
fwait
xchg
jnp
adc
mov
pop
cwtl
jno
cli
imul
mov
xor
lock
xor
push
daa
popa
lret
pop
jno
shrb
scas
in
sbb
mov
adc
and
xorb
pop
add
mov
inc
mul
cmp
jmp
mov
lsl
lea
inc
cwtl
lea
test
inc
sbb
sub
jo
mov
dec
testl
cmpsl
lods
xor
jo
outsl
jb
dec
arpl
adc
mov
sbb
aam
shlb
jae
int
jge
xlat
aad
out
out
cmpsl
xchg
xchg
mov
mov
lds
pusha
aaa
scas
pop
ljmp
mov
mov
push
in
ss
call
scas
and
push
popf
stos
jae
pushf
dec
fucomi
fndisi(8087
cmp
sbb
testl
fbstp
testl
fldl
add
push
cmp
adc
mov
or
xchg
fucomip
sub
popa
adc
sbb
fwait
add
sbb
pop
push
out
jno
xchg
arpl
pop
mov
and
sub
sub
mov
lahf
mov
sbb
push
dec
jecxz
and
xor
sub
out
decb
sub
scas
sub
jle
js
lret
shll
jne
aas
pushf
shl
fcompl
out
mov
sahf
push
xchg
add
fisttpll
cmp
imull
jg
icebp
pop
dec
cmp
fprem1
insl
xchg
sbb
push
insb
out
cmpsb
xor
mov
loop
call
jno
sub
jl
arpl
orl
loope
enter
dec
into
cmp
popa
das
sbb
jno
out
stos
sub
jmp
add
pop
stos
or
sub
cmpsb
loop
mov
test
arpl
and
out
and
inc
jbe
inc
inc
xor
sub
pop
dec
inc
loopne
out
xor
mov
or
sbb
xchg
popf
int3
mov
js
loope
cld
cld
add
sub
xchg
or
test
and
in
mov
jmp
lcall
dec
testl
or
not
mov
mov
xchg
inc
and
cmpsl
mov
sbb
jnp
iret
and
add
pusha
cmp
mov
bound
pop
inc
xor
dec
adc
push
sbb
sahf
lods
push
les
arpl
lcall
mov
icebp
push
or
unpckhps
push
shlb
jmp
mov
imul
int
imul
mov
sub
rcrl
std
mov
fucom
dec
stos
rcrl
filds
aam
pop
add
jne
jae
jns
fdivrl
jnp
popa
pop
pop
in
xchg
insl
fsubrl
push
orl
in
push
xchg
push
pop
fcompl
inc
cmpl
inc
in
inc
xchg
inc
dec
fmull
mov
scas
pop
mov
mov
mov
mov
pop
movsl
in
mov
iret
jmp
ss
int3
leave
es
sti
inc
inc
pushf
es
fcmovu
cli
neg
and
fcmovnbe
repz
fstpt
fucomi
mov
cmp
addr16
scas
sbb
test
fistpll
movl
jmp
xchg
jmp
cltd
mov
xchg
or
repnz
and
movl
mov
aas
lahf
ret
push
mov
icebp
mov
mov
push
mov
mov
dec
mov
dec
scas
push
push
in
push
add
scas
int
cmpsl
ret
fimull
xlat
popa
rep
ret
cltd
pushf
xchg
sti
mov
rcll
imul
std
mov
ret
inc
jae
std
mov
fsubrl
sub
xlat
lcall
pop
repnz
popf
sti
xchg
sub
les
dec
scas
mov
mov
pop
pop
dec
enter
dec
gs
nop
inc
jnp
dec
dec
jne
sub
xor
or
jno
roll
or
sbb
mov
ret
mov
xor
sub
pop
fistpl
jmp
insb
jno
fisttpl
jae
add
jnp
or
or
ja
fidivl
imul
insl
dec
aas
sub
xor
pop
inc
scas
mov
ds
pop
fwait
and
addr16
ret
aad
or
outsl
aam
adc
fldl
mov
sub
xor
push
mov
dec
dec
push
cmp
lahf
stc
mov
sbb
push
sbb
int3
sub
xor
cli
mov
xlat
rolb
mov
ja
stos
scas
pop
imul
gs
push
push
inc
sub
dec
xor
pop
xor
sbb
sub
mov
lahf
mov
ret
dec
test
xchg
sub
ljmp
dec
cli
jge
sub
mov
cmp
scas
and
shl
adc
add
sarb
hlt
shlb
sub
xchg
sub
imul
stos
xchg
cmp
xchg
mov
or
sti
insl
imul
fildl
enter
jae
imul
js
adc
sub
xchg
jmp
adc
rcr
adc
mov
rcrl
dec
jmp
or
cmp
add
mov
xor
add
je
jo
fisubrs
scas
cmc
jb
pop
scas
push
rorl
scas
enter
or
int
inc
or
and
sub
xor
inc
orl
push
jb
jnp
and
ljmp
and
mov
sar
push
out
pop
sbb
push
enter
lods
dec
leave
sbb
fldcw
and
push
push
mov
stos
lea
jmp
and
movsb
scas
jge
fcomi
cmp
repnz
dec
adc
add
leave
loopne
cmp
xor
cli
or
imul
cmc
sbb
lret
xchg
push
add
inc
add
shlb
int3
and
push
inc
lret
or
inc
aam
je
repz
shll
std
cli
mov
mov
and
lea
sub
xchg
pop
lds
push
lds
push
fdivr
xor
int
and
and
fiaddl
xchg
cli
mov
lret
inc
mov
loope
mov
inc
int3
dec
ja
push
lcall
jmp
in
addr16
push
jg
pop
push
icebp
jmp
sbb
push
pop
adc
dec
loop
bound
loope
mov
fsubp
xlat
insb
pop
pop
adc
lcall
sbb
scas
cmp
imul
mov
insl
pop
lcall
lds
mov
bound
xchg
adc
lds
or
jns
sbbl
jmp
and
int3
dec
dec
fwait
inc
addr16
aas
xchg
sti
outsb
repz
sub
cmp
and
sub
and
or
es
stos
into
jle
lret
hlt
repnz
insl
inc
lret
sbb
int3
xchg
or
sub
les
and
mov
dec
sub
out
inc
bound
hlt
inc
mov
mov
pop
mov
sbb
cmp
pushf
xor
outsl
shrb
stc
sbb
mov
sub
ficompl
push
jl
idivl
ss
jg
xchg
xor
sbb
or
mov
orb
push
sbb
sbb
test
push
imul
bound
popa
stos
push
pop
push
push
andb
fsubrl
hlt
jae
sarb
and
push
sti
into
lret
push
add
or
push
pop
pop
bound
shrb
test
ret
inc
push
cmpl
stos
lods
cli
adc
sub
mov
aas
fwait
mov
xchg
xchg
lcall
shll
sti
and
and
sub
int
push
lahf
stos
sub
push
cld
pop
repz
jmp
call
cli
sub
pop
lret
sbb
and
dec
stos
jnp
lret
sbb
sbb
or
sub
dec
sbb
pusha
lods
xor
inc
pop
inc
std
jp
jl
dec
dec
cmp
sarb
fwait
mov
repnz
push
mov
jle
ljmp
lea
daa
cmp
fcmove
subb
hlt
jmp
cmpsb
std
sub
mov
stos
fwait
int3
ror
pop
inc
xor
mov
sub
ffree
xor
cli
xor
push
push
xor
sti
sbb
cli
add
aad
stos
add
mov
ret
pop
pop
push
mov
hlt
xchg
loope
mov
sti
pop
mov
xor
adc
sbb
sub
dec
mov
pop
scas
pop
bound
out
add
lret
mov
lret
cmp
adc
ljmp
and
sarl
ljmp
dec
lret
or
lcall
inc
and
bound
popf
int3
or
mov
xchg
mov
out
or
popf
pop
stc
sbb
mov
stos
xchg
repnz
mov
mov
xor
lods
into
fdivrl
fcmovb
rcr
aaa
cmp
sub
push
sbb
ret
lods
xor
sti
xor
sub
loop
ret
pop
mov
push
mov
pushf
jle
out
nop
jno
xlat
inc
hlt
push
js
inc
subl
jb
ljmp
adc
out
iret
jnp
cmp
jp
dec
push
mov
inc
imul
repz
cli
cmp
dec
cmpl
cmp
scas
shlb
and
mov
fistl
adc
cmp
sub
xor
and
fcmovbe
imul
ljmp
dec
cwtl
mov
xchg
lds
scas
dec
iret
cli
inc
jl
push
repz
bound
jo
dec
jp
pusha
dec
sarb
jmp
push
je
sbb
sbb
icebp
dec
mov
mov
adcb
rorl
jmp
mov
fdiv
lret
rol
xor
add
or
sbb
cmp
sti
mov
push
cmp
scas
fcmovu
clc
in
enter
lcall
lret
mov
test
inc
scas
mov
dec
dec
lret
push
sbb
ljmp
fwait
call
ljmp
mov
dec
mov
scas
dec
or
aad
jle
dec
dec
inc
in
mov
sub
cld
mov
stos
fadd
stos
ret
cli
int
lret
cmp
push
daa
mov
xor
mov
aam
ret
jp
out
mov
cmpsb
mov
testb
ds
lret
pop
add
int3
cmp
ret
jo
add
mov
jae
es
lret
int
dec
pop
arpl
mov
mov
sbbb
hlt
cld
lcall
lret
fistpl
add
sub
mov
cmp
cmp
add
xor
pop
dec
test
lods
mov
lret
dec
jb
dec
mov
sub
xor
adc
mov
cli
and
or
lret
int3
fucom
leavew
jecxz
push
fistps
inc
pop
sti
test
sarb
xchg
dec
sub
pop
daa
pop
mov
jecxz
cli
inc
jg
push
mov
fcmovu
jnp
cmp
cli
fucomi
das
aaa
sub
or
lret
stos
ljmp
inc
or
sbb
loopne
pushf
lcall
mov
stos
jb
pop
push
ret
or
sub
push
cmp
outsb
mov
in
adc
ljmp
or
stos
fdivp
lds
add
les
lcall
fstl
int3
mov
sbb
lret
cli
lret
cmp
adc
sbb
add
or
je
inc
push
mov
xchg
sub
push
frstor
leave
add
repnz
inc
out
mov
pushf
notb
scas
pop
add
lahf
jmp
jnp
and
jbe
pop
stos
pop
arpl
sub
iret
inc
dec
adc
push
int
divl
pop
lods
mov
repnz
dec
and
ljmp
ret
fsubrl
test
inc
pop
sbb
jge
mov
and
ficompl
xchg
or
sbb
stos
adc
adc
jb
sbb
push
sbb
pop
ljmp
jp
inc
sti
fs
push
js
or
sbb
ljmp
imul
pop
fistpl
dec
addb
inc
lret
int3
push
mov
jo
cli
lret
inc
stos
mov
enter
lret
daa
mov
lret
lock
xor
inc
mov
dec
jae
imul
fcmovnu
and
jg
push
jmp
jmp
adc
push
inc
push
pop
cmp
sbb
lret
or
jp
rcrb
movsl
xchg
cmp
fwait
sbb
lcall
jmp
es
test
mov
int3
xor
fsubs
pop
cmp
jecxz
bswap
jns
cmp
lret
ret
js
jo
push
int
es
sbb
xchg
outsb
sub
pop
into
push
cli
dec
or
add
and
push
adcl
lret
mov
push
ja
dec
fcmovnbe
pop
jg
mov
shrb
inc
mov
cmpl
mov
repnz
imul
xor
mov
mov
shl
jmp
xlat
nop
push
cwtl
mov
mov
and
mov
jp
fsts
lods
inc
aaa
jp
and
fucompp
sbb
inc
cwtl
dec
or
push
cmpsl
negb
ret
push
in
cmp
mov
pop
daa
cmp
push
jnp
sti
jecxz
aad
jmp
in
pop
adc
mov
in
mov
loopne
stos
jnp
xor
mov
or
xor
incl
fwait
sub
aaa
sbb
adc
es
inc
xlat
dec
dec
inc
fldl
xchg
jbe
push
jmp
dec
das
inc
mov
sub
ret
repnz
rcr
adc
repz
scas
out
repnz
fwait
imul
mov
cmp
jnp
subl
fstps
xor
mov
sbb
add
dec
jmp
es
jbe
pop
lret
or
mov
pop
jp
jae
mov
sbb
mov
jecxz
int3
mov
xchg
jecxz
jnp
and
orb
inc
cli
ss
mov
js
sbb
mov
pop
lret
repz
stc
sub
push
insl
movb
and
pop
xor
mov
adc
lret
cmp
sub
repz
mov
jp
jbe
fwait
lds
arpl
sub
movsl
data16
cli
xorl
jmp
das
jnp
test
push
daa
sarl
adc
loope
out
or
add
lret
stc
jo
cmp
sbb
cmp
out
add
dec
bound
mov
fxch
sub
cmp
sbb
ja
jae
adc
fsubr
pop
add
in
ret
fdivrl
inc
mov
adc
aaa
in
sub
pop
mov
rcll
enter
sbbl
fdivl
not
mov
mov
inc
pop
sbb
test
lcall
push
xchg
iret
loop
jno
and
lret
cmp
xchg
pop
or
or
lret
mov
add
dec
popa
jnp
sub
imul
add
fistpl
sbb
dec
xchg
pop
cmp
fldcw
push
or
add
mov
jno
ret
or
lret
out
pop
fucomi
int
in
loopne
mov
repz
enter
das
in
mov
mov
add
push
frstor
int3
cmp
add
inc
cmp
sbb
jne
dec
pop
addr16
es
enter
or
fstpl
stos
imul
sahf
stos
fdivl
int
das
popa
ficoml
ret
int3
cmp
ds
push
fst
fcmove
stos
jmp
pop
subb
icebp
mov
cmp
fwait
fwait
mulb
jne
adc
out
jecxz
or
sbb
icebp
pop
addr16
xlat
jge
ret
ja
fcmovnb
enter
xchg
loopne
loope
ljmp
adc
xor
and
enter
or
push
shll
or
aas
jp
push
jmp
mov
pop
mov
outsb
sbb
and
adc
mov
sbb
sbb
cmp
jge
jp
and
insl
cmp
pop
inc
ljmp
jge
loop
outsl
imul
insl
pop
mov
jbe
ret
mov
adc
dec
andb
mov
cmp
xor
ret
shlb
stc
or
in
inc
cmp
cmp
jnp
sub
sbb
sub
iret
and
add
jno
addb
gs
jp
cmp
cmp
in
pop
jne
mov
lock
repz
subl
lods
scas
repz
adc
dec
mov
inc
and
sub
subb
dec
and
add
int3
lret
cmp
push
or
mov
in
sti
cmp
sbb
hlt
std
aas
sti
inc
pop
lds
int
cmp
ret
dec
rcl
mov
testb
adc
int
jmp
ret
rcl
sub
xlat
mov
ret
imul
stc
pop
adc
loope
mov
mov
xor
dec
mov
jae
into
pop
sahf
aad
sbb
loope
jno
adc
xchg
dec
push
add
xchg
xor
dec
xor
nop
scas
sub
lods
aam
popf
mov
das
and
sbb
pop
imul
cmpsl
shr
test
mov
imul
dec
daa
hlt
inc
push
push
stos
in
jge
jg
xorb
pop
lahf
js
movsl
test
sub
inc
mov
out
cmpsb
pop
adc
sub
aas
mov
aad
fidivs
jae
mov
sbb
cmp
xchg
push
pop
add
mov
lock
or
movsl
add
push
daa
xchg
inc
lock
and
shl
and
insb
into
lods
sub
mov
dec
enter
xchg
mov
jnp
cmp
adc
in
sub
mov
arpl
sti
mov
mov
out
mov
and
pop
icebp
sbb
adc
ljmp
in
mov
js
sahf
xor
flds
inc
test
das
inc
dec
lods
cmp
pop
das
lds
mov
xchg
add
in
mov
and
add
ljmp
outsb
repz
and
lret
xchg
addr16
pop
stos
jp
add
cs
test
lret
inc
movsb
or
push
bound
scas
pushf
leave
out
sub
jnp
pushf
popf
inc
xlat
cmpsl
cmp
push
arpl
test
sbb
and
test
insb
xchg
pop
pop
mov
push
xchg
lret
sarb
sbb
push
add
adc
ret
push
lods
pop
push
inc
fistpl
xchg
sbb
ret
sbb
push
cld
sub
iret
dec
push
movsb
push
test
ret
pop
iret
mov
pop
int
sub
imulb
cmp
cld
push
and
lods
mov
inc
or
iret
dec
movsb
lods
inc
stos
xchg
int3
mov
es
xchg
or
mov
cmp
jo
inc
in
lods
scas
adc
and
mov
lret
inc
push
dec
sub
pop
jbe
ds
sti
xchg
pusha
bound
mov
mov
push
mov
xchg
add
push
fdivp
pop
mov
mov
dec
fbld
mov
int
and
fists
shrl
or
loop
gs
cltd
pop
push
xchg
mov
xchg
push
push
ja
or
out
int
fwait
pop
bound
filds
and
cltd
xchg
inc
imul
mov
aad
jecxz
inc
inc
or
pop
mov
and
lea
mov
stos
lcall
fs
and
inc
mov
and
aas
fwait
lea
mov
lahf
std
ficoml
out
imul
in
insb
stc
jmp
mov
cmc
fmuls
fnstenv
inc
mov
jne
out
jg
fsts
push
out
sub
inc
fwait
scas
ret
clts
imul
mov
xchg
sub
dec
adc
sti
lret
cmp
mov
lea
jl
mov
xchg
jne
std
jecxz
adc
jo
pop
xor
inc
daa
std
lds
lea
push
fsubl
cs
int3
inc
mov
xor
pop
pop
push
xchg
mov
outsb
mov
orb
pusha
cmpsb
mov
cs
lret
mov
cmpsb
dec
jns
adc
dec
adc
sbb
jne
test
xchg
lahf
mov
xchg
push
cld
into
pop
xchg
adc
ljmp
mov
adc
ds
stos
add
mov
rcr
xor
test
jo
mov
adc
mov
test
adc
ja
jae
loope
xchg
inc
pop
jne
cltd
adc
sbb
inc
cmpsl
mov
in
jne
fsubl
adc
xchg
pusha
fists
cmp
dec
jne
cltd
sbb
sub
push
jns
inc
mov
ljmp
ja
xstore-rng
cmpsl
lds
pop
adc
xlat
jnp
fnstsw
push
test
xchg
mov
push
test
pusha
sbb
fwait
xor
inc
pusha
ret
clts
mov
mov
repz
aas
sti
sbb
aas
lcall
lds
inc
and
xchg
iret
mov
fstp
fxch
inc
push
adc
jecxz
pop
or
les
xor
mov
test
cmpsb
mov
mov
test
mov
scas
jge
in
xchg
sub
push
sbb
xchg
cltd
stos
cmpsl
lods
or
inc
cmp
jmp
fwait
cltd
mov
add
fwait
cltd
add
popa
pop
cltd
cltd
lcall
cwtl
inc
adc
or
mov
xchg
pop
in
add
dec
pop
sbb
xchg
mov
xchg
jnp
scas
mull
ret
pop
mov
lds
jge
jecxz
gs
lds
add
out
cltd
repnz
movsl
bnd
add
ret
loope
fucom
fdivl
pop
aaa
mov
js
out
outsl
xor
sbb
pop
add
pop
ljmp
enter
xchg
jmp
push
xor
add
ljmp
jo
and
cmp
out
xor
adc
aas
inc
push
cltd
ret
test
push
push
jle
mov
adc
subl
inc
mov
repnz
aam
ret
push
add
jnp
mov
mov
push
push
jg
adc
subl
mov
mov
std
aam
ret
testl
out
sbb
fstpl
and
in
loope
cli
cmp
imul
or
push
mov
mov
int
scas
je
bound
mov
sbb
lea
lcall
popa
xchg
sub
lods
sahf
push
xor
imul
ds
mov
add
inc
and
stc
fmul
mov
add
nop
ret
dec
adc
fwait
jmp
arpl
lcall
int
inc
mov
rclb
push
movsb
adc
fwait
adc
xchg
pop
xor
subl
sub
addr16
outsl
dec
cmpsl
loop
mov
into
dec
xchg
push
jbe
mov
and
and
mov
jns
jl
iret
mov
sbb
aam
gs
sbb
xor
in
cmp
lods
jno
out
jns
out
ficoms
adc
lods
or
in
push
sub
stos
jbe
inc
jbe
int
jmp
orl
out
dec
imull
mov
fildl
lret
orl
int
dec
data16
sar
or
pop
inc
jp
dec
jo
mov
mov
push
scas
or
jp
inc
stos
lods
inc
mov
jmp
mov
mov
mov
scas
mov
fisubrl
rcr
fisttpl
or
scas
out
xchg
mov
inc
cli
scas
outsb
sar
cli
into
fisttpl
inc
sti
xor
xchg
jg
fisttpll
lods
ret
arpl
stos
ss
int3
imul
mov
jmp
int
leave
pop
stos
pop
lods
mov
sub
fldt
stos
leave
icebp
xchg
inc
imul
subl
xchg
movsl
rcr
push
jle
adc
in
ljmp
ljmp
loop
loope
frstpm(287
enter
xchg
xor
ret
xchg
ljmp
fisubrs
mov
ret
xlat
sub
pop
insl
sub
ja
inc
cli
adc
mov
jp
jl
jmp
movl
aas
fstps
lods
pop
shr
mov
dec
xlat
pop
test
decl
lods
sub
sub
jl
out
sbbl
pop
ret
rorb
testl
cld
dec
lods
in
data16
or
pop
in
dec
or
ret
push
into
lcall
mov
iret
psubd
cmp
lret
stc
rol
or
scas
out
stc
mov
call
pop
cs
loop
mov
add
pop
sub
in
in
mov
lcall
xchg
add
lods
rcll
sbb
cmp
in
mov
scas
mov
mov
lret
add
mov
aas
mov
aas
mov
ficoml
mov
mov
mov
mov
loopne
stos
push
dec
mov
in
dec
push
pop
sub
cmp
mov
fiaddl
cmp
mov
mov
mov
mov
xor
or
mov
lret
cltd
cli
pop
in
jmp
lret
es
add
stos
call
sti
mov
add
leave
scas
inc
ljmp
dec
mov
dec
inc
iret
cli
push
dec
mov
aas
stos
cmp
dec
or
dec
xchg
lret
cmp
in
sti
sub
rolb
push
mov
add
xor
pop
aas
stos
cmp
sub
cli
or
mov
mov
pop
ljmp
push
mov
jnp
jmp
mov
arpl
dec
lret
popa
das
loope
testb
push
aaa
mov
int
mov
add
inc
dec
outsl
scas
mov
jnp
mov
lret
clc
sub
push
imul
ljmp
insl
fwait
sub
rol
jmp
scas
push
or
scas
fisubrl
dec
adc
adc
pop
fisttpl
sub
lea
cmp
rol
lret
lret
push
xor
in
cmp
fcmovu
cmp
pop
cmp
roll
push
or
mov
lods
stos
cmp
pop
pop
xor
sub
dec
xor
and
mov
outsl
inc
cmp
out
rol
mov
push
cmp
or
scas
jmp
cmp
xor
les
sub
adc
cmp
fldt
lock
push
add
or
stos
out
int3
scas
jmp
stos
mov
jmp
dec
xor
add
inc
or
outsl
or
dec
lea
aam
addr16
jo
mov
fwait
pop
in
sub
ljmp
mov
ficompl
adc
ljmp
sbb
das
aas
sub
sahf
int
xchg
ljmp
cmpsb
stos
xchg
pop
and
mov
clc
lds
stos
cltd
clc
cli
sub
mov
rcrb
lret
sub
call
imul
sub
sbb
xchg
mov
dec
xor
push
cli
inc
dec
hlt
lock
mov
fidivrl
mov
inc
mov
push
mov
xlat
sub
mov
ljmp
ljmp
or
and
sti
fsubrl
mov
xlat
stos
test
pop
jae
jp
or
push
int
test
movl
leave
push
mov
mov
jmp
dec
fstp
pop
fnstsw
or
push
mov
dec
xor
dec
das
nop
inc
int3
or
mov
in
sbb
mov
jl
xchg
ret
inc
lock
or
adc
pop
dec
in
mov
ljmp
int3
in
fisttpll
or
pop
scas
cmp
fisttpll
pop
and
enter
inc
mov
pop
adc
aas
int3
jmp
pop
jecxz
xor
cmp
dec
fcmovnb
in
imul
inc
sub
stos
dec
stc
inc
int3
mov
stos
adc
rcrb
mov
leave
xchg
push
popf
dec
xchg
mov
ljmp
imul
mov
lret
shll
dec
cltd
stos
lret
inc
or
mov
push
fimull
or
dec
push
out
push
lret
arpl
pop
mov
in
outsl
cmp
dec
outsl
std
dec
ja
imul
push
adc
shlb
or
es
repnz
bound
leave
stos
xor
xchg
repz
ljmp
and
fldt
jno
or
cmp
mov
lret
inc
jmp
aaa
mov
adc
lods
pop
jno
shll
push
in
mov
adc
pop
pushf
std
aad
adc
imul
push
or
popf
mov
mov
dec
test
in
pushf
std
dec
std
stos
cmp
lret
inc
add
fsubrl
inc
fisubrl
jmp
lret
insl
mov
push
leave
arpl
pop
pop
inc
stos
loope
mov
fisttps
dec
sbb
mov
add
mov
addr16
mov
xchg
mov
pop
or
sub
cmp
in
push
ret
cwtl
xchg
lcall
push
outsl
leave
mov
fisttpll
leave
outsl
mov
mov
inc
push
ffree
sub
cmp
sub
jge
in
sbb
pop
stos
fucomp
xchg
mov
fwait
mov
push
leave
movsl
ret
leave
or
sub
les
or
and
sub
or
cmp
mov
fimull
cmp
fisubrl
aam
mov
sbb
aas
sub
sbb
ljmp
lods
mov
sub
add
cltd
ljmp
or
sub
mov
sbb
and
popf
pop
leave
pop
adc
mov
mov
sbb
mov
ficompl
push
cmc
fcmovbe
or
test
mov
dec
xorb
sub
test
mov
mov
dec
sti
stos
shl
ret
push
lea
mov
nop
loop
imul
sub
scas
add
test
mov
xchg
push
test
pop
repnz
fcmovnb
inc
inc
lahf
dec
mov
lcall
mov
addr16
jmp
inc
in
mov
call
mov
and
rorl
or
mov
pop
ljmp
ret
sub
inc
sti
aad
add
fbld
lret
cmp
sbb
ljmp
cmp
jecxz
inc
sub
outsl
mov
push
mov
es
ret
ror
sub
stos
or
ret
and
push
sahf
cmp
mov
ljmp
pop
ret
mov
fisttpl
rol
jmp
sbb
mov
ret
insl
stos
push
into
pop
stos
outsl
mov
jmp
jmp
faddp
add
sub
pop
sub
pop
dec
push
dec
pop
in
fimuls
fildl
ret
jg
stos
lock
pushl
fldt
lret
inc
mov
adc
xor
jl
mov
push
xchg
mov
mov
jmp
fists
es
imul
mov
and
pop
inc
sub
frstor
outsl
add
sti
cmpsl
mov
sub
mov
mov
ret
adc
lea
ret
je
scas
pop
pop
or
ljmp
dec
jns
sarb
xor
mov
xlat
stos
mov
ret
rcrb
sub
lds
ljmp
sub
jecxz
ret
ret
rcl
std
mov
outsl
and
add
loope
push
sub
inc
dec
data16
in
inc
and
stos
sti
pop
dec
mov
stos
cmpsb
push
loop
xchg
imul
xchg
xchg
sarl
out
sub
inc
ret
ret
sarb
ljmp
inc
lea
pop
jne
ljmp
mov
push
fadds
jnp
mov
sbb
stos
shr
and
dec
or
mov
jmp
push
push
or
mov
lds
icebp
jnp
inc
aas
lds
sub
fadds
xlat
idiv
int
mov
out
rcl
rcrb
lret
jb
xlat
test
addr16
or
sub
or
or
dec
in
adc
mov
movsl
outsl
mov
hlt
adc
jl
popa
leave
push
cmpsl
inc
lods
mov
out
lret
mov
xorb
push
lretw
dec
xor
or
jecxz
inc
or
ret
lret
jmp
push
pop
cmp
or
xor
pop
push
jno
add
dec
rcr
push
test
in
jae
into
lea
lea
sub
pop
sti
xchg
xlat
lea
sti
ljmp
sti
inc
pop
mov
popf
mov
jp
jns
mov
mov
jno
lret
ljmp
or
push
xchg
fldt
lds
out
sbb
mov
int
stos
xor
stos
inc
sub
ficompl
fisttps
sub
or
lds
or
xchg
lret
fimull
pushf
jmp
mov
jne
cli
shrb
and
sub
and
cmp
and
xchg
inc
push
lds
lds
sbb
loopne
lcall
pop
mov
shrl
mov
scas
in
mov
loopne
repnz
fwait
test
inc
dec
or
fcmovb
icebp
fcmovnu
lds
jmp
rol
or
mov
in
leave
cmp
in
leave
lods
sti
sub
movb
inc
jmp
sti
iret
fmull
stos
xor
les
enter
mov
jb
addr16
inc
sub
stos
inc
out
stos
lods
out
lock
out
pop
cmpsl
lcall
dec
mov
jmp
jmp
fwait
and
fimuls
leave
push
and
cmpsl
sti
fisttpll
call
hlt
mov
inc
testl
xchg
fucompp
mov
pop
in
xrelease
mov
fcompl
std
shll
test
mov
mov
lods
stos
icebp
out
sbbl
lahf
in
xchg
xchg
outsl
test
and
mov
sub
shll
leave
xor
fnstsw
sub
or
dec
int3
fmul
fldt
fdivl
out
subl
or
dec
mov
lret
dec
inc
jnp
imul
mov
lea
xor
sub
sbb
mov
aad
stos
das
sti
mov
arpl
mov
xchg
out
arpl
mov
jmp
mov
outsl
dec
adc
mov
mov
fwait
shrb
sahf
arpl
repz
out
fldl
lcall
repz
out
xchg
sub
imul
push
in
mov
and
xchg
in
adc
out
pop
push
cltd
mov
mov
cmpl
int
mov
aaa
insl
or
jne
ret
daa
outsb
gs
push
lret
mov
leave
dec
test
xor
lret
sub
push
mov
lret
enter
rclb
xor
xchg
adc
jb
or
jmp
jo
or
ljmp
or
call
jno
pop
lret
mov
and
pop
lret
mov
and
pop
lret
mov
and
pop
lret
mov
and
addl
bound
addl
lret
cli
jnp
add
arpl
addb
popa
movl
scas
cs
lret
lods
sub
push
mov
movb
daa
into
dec
scas
das
int3
dec
lret
lods
sub
xchg
lret
out
push
out
outsb
lea
in
insb
xchg
adc
je
pop
lret
out
mov
out
outsl
mov
adc
lret
mov
mov
pop
lret
mov
and
push
lret
mov
mov
pop
lret
mov
and
jbe
fistps
sbb
std
jl
add
fs
pop
lret
divb
ficomps
sbb
add
lret
mov
mov
orl
ret
movsb
mov
aas
pop
add
inc
stos
sub
scas
fucomip
push
mov
jle
mov
cs
dec
lods
add
push
pop
sbb
in
sub
mov
sub
mov
or
add
mov
dec
arpl
imul
push
mov
leave
lret
gs
mov
lret
lret
inc
and
push
lods
lock
cmpsb
or
popa
gs
cmpb
mov
imul
mov
xor
imul
push
imul
addr16
cmp
jge
fldt
sti
mov
or
lods
clc
icebp
popf
ljmp
stos
shl
or
ljmp
jne
mov
add
lret
fisubrs
jno
ljmp
outsl
cmp
push
test
or
mov
push
pop
imul
mov
mov
xor
add
pop
push
or
cmp
stos
dec
sbb
adc
pop
in
sti
push
mov
inc
lret
ljmp
cmp
dec
clc
setno
fldcw
dec
stos
aam
stos
add
add
sbb
mov
mov
mov
test
orl
jnp
cli
push
dec
mov
pop
int3
jmp
jmp
stos
inc
add
push
sub
ret
lock
ret
cltd
ret
jo
mov
imul
push
ficoms
adcb
mov
add
add
dec
jnp
leave
add
dec
ljmp
daa
stos
popf
cmp
push
mov
in
mov
or
xchg
add
imul
dec
mov
xchg
insb
lret
jmp
cmp
dec
inc
lret
or
adc
mov
push
in
pop
sbb
testb
sarl
es
into
jmp
mov
mov
imul
pop
out
add
shr
ja
mov
add
xchg
pop
leave
pop
scas
lock
jnp
mov
test
jmp
sub
mov
aad
pop
fmul
jecxz
lods
dec
sti
aas
pop
push
jmp
fucomp
jmp
fisubl
imul
mov
mov
mov
cmp
mov
pop
lret
leave
or
scas
and
mov
inc
jb
ret
lret
int
xchg
sub
test
fistps
mov
jmp
sbb
or
mov
ljmp
dec
leave
dec
adc
imul
cmpsb
stos
ljmp
fists
fldt
les
jmp
inc
cmpsb
repz
cmp
fcoml
sti
int3
mov
push
js
mov
sti
pop
cmp
jnp
jne
mov
fcmovnb
cmp
jne
adc
std
clc
mov
jge
cmp
shrb
cli
shrl
xchg
loop
lcall
sti
daa
mov
rclb
cmp
xchg
sub
xchg
int3
daa
fstl
loop
adc
add
ret
or
cmp
fnsave
mov
cmp
jp
ljmp
nop
sahf
test
or
pop
sbbb
insb
inc
jbe
jnp
orl
rolb
mov
shlb
sub
dec
inc
sbb
sub
into
xchg
push
jp
or
and
fwait
scas
mov
imul
or
fsubrs
cmpsl
sub
ficomps
push
or
and
cli
popf
lods
jecxz
daa
popa
sub
mov
inc
adc
sbb
ficompl
pop
fstpt
or
add
stos
scas
fwait
pop
push
add
ljmp
ljmp
xchg
pop
cmpsl
in
mov
cmp
jle
lret
int3
mov
push
xchg
dec
fisubl
cld
in
scas
jmp
divb
jnp
stos
cmpsl
xchg
fnsave
fisubl
int3
mov
fisubrl
jo
cli
pop
popa
fcmovb
out
jo
sbb
in
mov
fcmovne
ret
test
dec
push
adc
mov
sub
jno
pop
lcall
leave
jecxz
or
lea
fwait
push
notl
cmp
mov
adc
jg
cmp
dec
outsb
into
jno
mov
fimull
fmuls
enter
int
fists
and
xchg
inc
cmp
mov
in
cld
loopne
push
sti
pop
fs
inc
int3
stos
inc
loope
cmp
sbb
testb
filds
inc
stos
push
andl
mov
inc
xchg
fidivs
mov
shll
sub
cmp
ljmp
pop
add
push
imul
out
mov
mov
inc
out
fldt
fistpl
jecxz
fnclex
push
popa
maxps
fwait
lea
sbb
sbb
mov
cmp
push
mov
pop
mov
and
ljmp
mov
cmpsl
cmp
rcrl
stos
mov
add
xchg
xchg
jmp
jnp
fistpl
add
lcall
fadds
outsl
jmp
sbb
jge
insb
mul
dec
xchg
sti
cmpsb
mov
das
jno
arpl
sub
in
mov
stos
fcmovu
sbb
stc
sti
cmpsb
icebp
cmpl
cmp
out
orb
xchg
fcmovb
sbb
gs
in
ljmp
ljmp
dec
mov
orb
jb
dec
cmp
add
movsb
jne
ljmp
mov
jo
mov
or
push
inc
pop
aas
cs
insb
aad
push
pop
mov
mov
mov
cmp
mov
xor
xchg
and
or
sub
or
dec
fnstsw
sbb
imul
pop
mul
loopne
inc
sbb
sbb
pop
jae
pop
and
push
out
outsb
or
cltd
mov
mov
adc
mov
push
push
mov
sbb
adc
lea
mov
jns
push
fcompl
mov
out
leave
or
jecxz
dec
sarl
aas
ret
inc
pop
out
dec
pop
jmp
fdivrl
cmp
repnz
cmp
adc
mov
push
pop
and
stos
test
inc
sbb
iret
xor
imul
pop
or
out
mov
out
jmp
ficomps
arpl
incl
scas
add
lret
inc
and
jecxz
mov
mov
pop
pop
sub
repnz
leave
fidivl
add
in
mov
mov
ja
loopne
in
dec
xchg
inc
dec
xchg
dec
ret
mov
push
inc
fcmove
xor
pop
movsb
xchg
mov
add
mov
das
cmp
jmp
sti
sbb
mov
mov
pop
or
cld
lea
int3
xchg
pop
ljmp
les
sbbl
les
mov
pop
dec
inc
mov
mov
js
imul
movsb
mov
xchg
scas
lods
mov
fisttpll
sbb
jnp
int
dec
and
scas
mov
fstps
mov
pop
cs
arpl
xor
jecxz
fisttpl
out
idiv
int3
lods
lods
pop
cld
pushf
imul
out
adcl
cmp
push
dec
pop
sti
dec
shr
dec
push
sbb
cltd
push
subb
rdtsc
mov
std
test
incb
andl
inc
dec
cmp
and
mov
jnp
sub
xor
les
mov
lods
dec
or
ret
sbb
test
ja
cmp
popf
push
cltd
lods
in
repnz
lods
clc
jmp
imul
add
pushf
insl
add
imul
xchg
jnp
mov
popw
pop
in
adc
push
mov
bound
mov
mov
fs
sbb
add
cmp
mov
int
adc
pop
ret
mov
fwait
pop
xchg
jle
add
or
stos
imul
xor
ficoml
ret
ret
roll
pop
sbb
mov
adc
lret
jbe
mov
mov
jno
idivl
or
std
mov
aad
orl
fistl
xorb
icebp
pop
inc
pop
mov
dec
cmpsl
sti
rorl
inc
fwait
mov
xor
jle
or
sbb
enter
push
sahf
inc
inc
jbe
cmp
sub
pop
mov
rcll
dec
int3
pop
inc
rolb
scas
push
or
leave
jns
push
pop
mov
repz
cmp
adc
pop
pop
sbb
shll
andb
movsl
int
pop
dec
push
cmp
fistpl
pop
jecxz
cmp
or
mov
pop
fisttpl
cmp
push
stos
cmp
push
stos
xor
pop
dec
xor
fisttpll
pop
pop
sbb
and
stos
movsb
ret
or
sub
jp
mov
fwait
dec
cwtl
mov
inc
cmp
stos
out
addb
pop
out
jne
clc
dec
xchg
cmp
inc
pop
xchg
jecxz
sub
lret
popf
pop
sub
lcall
loop
fwait
cmpsb
xor
sbbl
loopne
mov
add
in
stos
mov
jl
mov
addr16
sti
dec
mov
popa
jmp
sbb
jno
incl
push
stc
dec
xchg
in
mov
in
xchg
dec
ret
xchg
cmp
sbb
lahf
push
ret
push
mov
or
arpl
fxch
jmp
out
pop
lcall
sub
jb
jne
fstpl
lcall
mov
ret
dec
lods
ret
les
lea
dec
mov
pop
mov
fwait
inc
mov
loopne
pop
adc
addr16
pop
push
add
jno
add
test
mov
sub
sahf
cmp
orb
xchg
test
push
stos
sub
mov
fbld
sbb
ficomps
jmp
mov
in
pop
ret
ljmp
jl
out
pop
sbb
ret
adc
out
pushf
push
sarb
fwait
and
pop
dec
or
std
ss
pop
fwait
int3
lea
pop
dec
push
shr
pop
push
imul
lea
sbb
fstl
mov
ficompl
int3
test
sbb
jns
sti
jb
mov
jp
lahf
sti
cvtps2pd
xor
adc
outsl
jno
stos
addr16
inc
cmc
into
jecxz
xor
sbbl
push
pop
jmp
xor
xor
pop
mov
arpl
pop
dec
aas
sti
stc
push
inc
inc
mov
and
dec
pop
adc
into
outsb
ja
jno
dec
jne
sbb
pop
jecxz
stos
je
jo
pop
xchg
and
dec
sub
or
popa
pop
sub
addr16
hlt
daa
sti
inc
jne
add
adc
sbb
fwait
push
mov
repz
cmc
jmp
lods
ljmp
dec
mov
cmp
cmp
inc
sub
pop
int3
jp
pushf
push
push
rol
pop
nopl
xor
add
jns
adc
test
mov
call
mov
imul
sbb
add
in
xchg
mov
mov
cmp
xchg
add
shll
fldl
stos
adc
push
and
pop
rcrl
dec
fldenv
dec
and
mov
test
inc
and
syscall
lea
lea
xchg
insl
rorb
mov
aas
add
fldl
insb
fisttpl
jnp
arpl
push
fistpl
cmpsl
sub
mov
repz
mov
bound
insb
scas
xlat
std
arpl
jg
push
jecxz
cli
mov
aad
arpl
inc
in
imul
mov
orl
jns
lret
xchg
rcll
dec
jae
push
cmp
outsl
shr
mov
push
inc
dec
sbb
aas
pushf
imul
mov
out
dec
arpl
inc
mov
xor
sti
dec
mov
push
daa
sub
dec
xor
in
iret
aad
repnz
shll
aad
push
dec
jg
out
addr16
stos
cmpsl
mov
ljmp
sbbb
out
iret
ret
fwait
mov
jbe
xlat
shrb
stos
sub
or
sub
lcall
rcrb
in
mov
sub
xchg
and
adc
negl
addr16
add
jno
fidivrs
mov
xchg
cmpsb
shll
cltd
lods
mov
cmp
lea
push
sbb
ficoms
push
ret
mov
movsl
negl
scas
xor
test
xchg
sbb
movsl
jb
insl
cmpsb
mov
ss
dec
cmp
cmp
movsl
inc
sbb
imul
inc
pop
adc
out
mov
and
or
sti
inc
jo
add
mov
xchg
lret
sbb
mov
cmp
or
mov
xchg
es
inc
fcmovbe
lea
imul
mov
mov
pop
je
inc
and
lret
mov
dec
in
mov
inc
sub
bound
faddl
call
pause
inc
lea
cltd
sub
sbb
lret
mov
movsl
inc
sbb
pop
scas
dec
sub
adc
xchg
cld
fisttpl
sub
scas
shll
paddusw
jb
ja
sub
mov
cmp
imul
pop
mov
mov
mov
ja
jmp
ds
mov
mov
ljmp
inc
sub
or
fucomip
inc
fdivs
dec
sbb
xchg
sahf
jecxz
lods
stos
fcomi
fwait
aam
and
xor
ljmp
push
out
ljmp
in
or
mov
lods
xchg
movsb
data16
test
test
mov
add
sbb
and
mov
scas
test
push
jecxz
add
stos
cli
adcb
xchg
std
cli
mov
jo
jne
push
ret
inc
mov
mov
mov
or
sub
lea
repnz
sbb
leave
dec
out
xchg
cmp
xor
inc
je
xor
shl
vpsrlw
clc
shlb
adc
ja
mov
cmp
cmc
jae
jp
outsl
mov
ret
fsts
out
std
mov
aam
fwait
enter
mov
std
lock
out
ret
inc
popf
pop
pop
leave
arpl
jmp
push
or
pop
cli
pop
stos
fsubs
and
cs
pop
gs
fs
popa
repz
mov
loope
cmc
stc
subl
dec
jl
jmp
or
inc
lods
inc
shrl
lods
cmpsb
mov
int
dec
in
jmp
pop
mov
fisttpl
jmp
mov
add
cmp
movsl
sarl
jmp
adc
dec
jmp
mov
push
cmpsb
dec
lret
fs
cmpsl
dec
stc
stos
xchg
dec
daa
cltd
fnstsw
out
aam
in
mov
cmc
dec
shr
or
daa
xchg
mov
int
mov
stos
outsl
inc
stos
leave
les
mov
push
dec
jmp
jp
xor
mov
push
popf
imul
imul
xor
jecxz
es
push
imul
sbb
mov
cmp
sub
das
popf
mov
subb
mov
inc
pop
jle
imul
fisubl
xlat
inc
cli
jecxz
pop
mov
in
dec
mov
inc
imul
ss
dec
mov
mov
inc
mov
imul
adc
outsb
arpl
imul
aam
pop
xor
jecxz
es
dec
inc
pop
mov
sub
stos
ret
add
inc
dec
jecxz
or
lret
inc
ljmp
mov
pop
into
imul
dec
bound
jecxz
jecxz
ljmp
sub
inc
sbb
xor
mov
les
push
dec
jle
popf
mov
and
mov
cld
jecxz
add
or
xor
push
mov
dec
movsl
fisubl
xlat
push
mov
sbb
xchg
mov
lock
xor
xadd
stos
sti
sbb
dec
jecxz
pop
cmp
lea
shll
jnp
push
popf
cli
jecxz
or
dec
pop
rcr
jp
dec
xor
rorb
dec
mov
fldt
rorb
scas
mov
fucomi
popa
in
jnp
xlat
push
lcall
push
inc
sbb
sub
jecxz
sbb
ffree
sub
rorb
popf
lret
lret
cli
scas
int3
push
stos
push
jecxz
clc
lret
insl
insb
imul
rorb
scas
push
fwait
xlat
nop
dec
xlat
add
inc
imul
jp
imul
inc
mov
add
std
ret
push
mov
lds
fldl
mov
lret
flds
sbb
dec
inc
jnp
mov
inc
sbb
imul
lcall
sub
aas
or
cmp
clc
jnp
outsl
scas
fwait
sbb
and
pop
push
sarl
fsubrl
jecxz
jp
cmp
sarl
imul
jle
imul
sub
sbb
inc
and
popf
sti
cmp
mov
aam
mov
pop
push
jecxz
cmp
dec
or
cmp
fisttpl
fidivl
cmp
imul
or
push
sarb
pop
mov
iret
mov
push
sbb
stos
in
sub
ljmp
imul
jle
pop
push
xor
jbe
lcall
int
fcmovnbe
cmp
test
pop
shll
jecxz
cmp
lret
cmp
dec
lock
jecxz
aam
mov
stos
shl
mov
int
bound
push
jecxz
adc
jmp
mov
pop
jnp
insl
lret
sub
stc
insb
imul
cmp
lret
ja
imul
mov
stos
cmp
mov
insb
imul
fisttpl
sub
in
stc
ret
cmp
jecxz
dec
imul
inc
cli
push
popf
lcall
pop
imul
push
popf
cmp
lock
out
sbb
out
dec
push
imul
jnp
sub
out
mov
add
cmp
or
lods
pop
out
push
or
jmp
mov
push
sbb
dec
jecxz
lds
hlt
pop
out
mov
jmp
out
cmp
mov
in
cli
sub
jns
dec
push
sbb
xor
jecxz
dec
in
fwait
jecxz
xlat
inc
mov
sub
orl
mov
push
popf
lret
test
inc
lcall
mov
pop
jecxz
dec
mov
inc
mov
sbb
add
jbe
push
fwait
inc
mov
mov
inc
stos
push
jecxz
mov
mov
sub
fiaddl
ljmp
mov
mov
sub
imul
fwait
mov
jbe
lods
jnp
stc
push
ljmp
cmp
add
jno
int3
stos
sub
dec
fwait
sub
push
jmp
cmp
mov
rcr
loope
dec
std
mov
int3
pushf
fs
sbb
fld
jmp
cmp
aas
push
push
sub
pop
dec
fwait
mov
cmp
stos
cld
jnp
push
inc
lcall
inc
jnp
leave
hlt
test
dec
sub
popf
inc
int
stos
sti
pop
dec
ret
add
mov
sti
js
pop
push
sub
sti
aam
or
add
fwait
xchg
fstpt
jnp
or
fucomi
or
fsubs
stos
add
fdiv
pop
pop
pop
dec
cmpsb
dec
fwait
shl
pop
dec
push
pop
fbstp
sub
outsb
imul
mov
std
mov
ret
out
fidivrs
aas
cmp
sub
paddsw
add
sti
in
rorb
shlb
add
cld
mov
pop
outsl
xchg
xlat
mov
pop
fwait
mov
dec
rorl
cmp
add
mov
movl
jnp
ljmp
stc
pop
ljmp
loop
sbb
pop
shll
jae
js
fildl
xchg
inc
leave
cmp
mov
in
rcrl
mov
out
mov
add
mov
cmp
into
inc
int
aam
lret
sbb
cmp
lcall
scas
mov
pop
fistpl
fwait
push
push
mov
or
cmc
or
add
dec
ret
mov
mov
inc
or
add
or
cmc
out
push
jnp
popl
fidivrl
in
js
pop
add
dec
stos
lods
ljmp
pop
popa
stos
or
dec
out
jnp
cld
jmp
push
mov
stos
push
mov
loope
adc
stos
sub
out
les
xchg
repz
icebp
sub
dec
fwait
xchg
dec
ret
fistpl
arpl
cmp
stc
insb
dec
push
cmp
cmp
sbb
jmp
cwtl
inc
leave
sahf
sub
stos
sub
addr16
push
sti
lods
mov
dec
fwait
xchg
jmp
sbb
mov
inc
mov
pop
stos
and
aam
pop
imul
out
stos
add
inc
pop
fidivl
sub
orl
jbe
xchg
add
stc
pop
sbb
lret
fwait
xchg
stos
daa
sub
push
pop
pop
cmp
or
sbb
aas
stos
sub
push
subl
cmpb
cld
lret
sbb
xchg
imul
sub
xchg
inc
sub
repz
jle
imul
sub
sbb
fld
dec
push
cltd
cli
xchg
stos
ret
mov
or
lret
aas
fwait
movsb
jmp
stos
or
mov
stos
sub
ret
cltd
ret
pop
sbb
push
or
mov
les
into
or
jecxz
fistpl
nop
jmp
cmp
or
sbb
cwtl
pop
add
mov
sbb
inc
sub
aas
adc
mov
sti
fwait
sub
test
fldt
sti
popf
popa
fwait
in
jno
mov
and
fdiv
sbb
sub
test
inc
dec
mov
aam
or
adc
cmp
pop
mov
cmp
push
sub
jecxz
rcr
jmp
repz
dec
lods
mov
pop
add
out
lret
aam
add
daa
sbb
cmp
sub
pop
sub
jmp
fcmovnu
scas
inc
mov
in
mov
fcompl
aam
dec
cmpsl
stos
pop
mov
and
adcl
stc
pop
lret
pop
jnp
popa
mov
popf
lcall
movsb
mov
stos
jge
stc
pop
sub
pop
sub
jmp
inc
sti
fwait
mov
mov
push
mov
pop
or
sbb
pop
fwait
inc
inc
ret
sbb
push
pop
stos
decb
fdivrl
pop
push
in
fildl
adc
and
fldpi
sub
sub
iret
in
xchg
xchg
inc
mov
sbbl
in
pop
xchg
inc
add
fsubl
out
or
in
into
xchg
inc
repnz
xchg
out
cmpl
testl
repz
sub
cmc
inc
cs
fcmovbe
sub
icebp
out
cltd
inc
lret
in
popf
mov
mov
stos
pop
imul
push
lret
or
lret
sti
subb
sub
dec
sub
dec
sub
jb
sti
push
sub
cmp
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
mov
aas
in
sub
xor
mov
aas
mov
aas
mov
inc
in
in
pop
xchg
inc
pop
xchg
lret
insl
cltd
stc
ret
or
inc
xchg
mov
sbb
pop
push
lcall
sub
and
push
pop
push
jae
jp
fldcw
or
jns
inc
dec
sub
jp
cmc
jne
mov
fildl
mov
push
dec
lret
aas
dec
lods
jmp
push
sbb
sarb
mov
fistl
fbstp
fwait
jge
stc
pop
lret
stc
pop
mov
inc
xchg
mov
in
pop
dec
stos
or
pushf
pop
fisubs
push
stos
lods
cmp
mov
leave
repz
aam
push
loope
push
fimull
inc
cltd
fsubrl
cmp
fildl
ds
out
insb
lret
inc
jl
inc
or
lods
mov
jnp
lret
arpl
jno
shr
pop
xchg
inc
and
roll
stos
aam
out
cli
in
jmp
cwtl
fsub
out
fwait
or
fwait
mov
subl
push
lods
flds
push
lret
cmp
loop
add
jl
pop
sti
xchg
mov
jns
imul
pand
cmp
aas
mov
aas
mov
aas
mov
ja
lret
aas
sbb
negl
sbb
sub
and
jecxz
pop
xchg
jp
xchg
imul
and
push
lods
insl
push
push
fwait
imul
and
rcr
out
sbb
xchg
mov
aam
dec
cmpsl
imul
jp
pop
negl
negl
jae
sbb
je
mov
jmp
mov
stos
add
push
lret
mov
sbb
cmp
mov
mov
pop
mov
add
sahf
lret
daa
movsl
dec
loop
cmp
fisttps
lret
in
stos
xchg
or
cmp
cmp
out
aas
mov
out
mov
or
into
inc
fstpt
mov
fistl
sti
add
in
add
add
mov
sti
aas
test
lret
add
fwait
lea
imul
mov
cmp
cmp
sub
xchg
in
dec
cmp
mov
lods
pop
push
lods
push
or
xchg
inc
mov
sti
sub
push
leave
fisubl
fmul
xchg
mov
inc
sub
push
jmp
cmp
in
jne
shl
in
rolb
xchg
imul
cmp
push
jecxz
fisubrl
outsl
sub
inc
sub
in
pop
xchg
ljmp
stos
push
cli
cltd
pop
fwait
jge
jae
jp
inc
or
rcrl
xor
stos
out
cltd
mov
lahf
test
lret
mov
mov
fwait
xchg
int3
sarl
push
or
sbb
lahf
setge
lea
lret
sub
lcall
push
lahf
jmp
sbb
mov
fidivl
mov
mov
fildl
imul
jnp
or
inc
cli
sbb
sub
sub
imul
out
fiaddl
pop
mov
lret
daa
movsl
fwait
loop
jnp
pop
pushf
sub
sub
sub
mov
fwait
aas
mov
mov
stos
push
sub
in
pop
cmpsl
fisttpl
mov
mov
ret
or
jmp
cs
sub
pop
leave
mov
sub
inc
stos
cltd
inc
imul
lret
fstps
popa
in
stos
add
out
mov
sub
int
cmp
jne
lcall
push
sbb
mov
daa
inc
xor
mov
sbb
pop
stos
loopne
hlt
imul
popa
fstpl
loope
fistpl
ficoml
or
cmp
sar
stos
mov
in
cwtl
push
sahf
cmp
push
dec
lret
aas
fwait
cmpsb
sub
or
push
ljmp
jl
mov
mov
dec
mov
sbb
repz
aas
mov
or
xlat
repz
add
mov
aam
mov
es
mov
in
sub
add
push
lret
neg
mov
loope
jbe
ret
sub
cmp
add
ljmp
sbb
pop
cmp
pop
aas
mov
or
in
ret
out
add
in
mov
cli
out
sbb
mov
inc
adc
push
in
aad
jbe
iret
add
shl
sub
in
mov
add
in
repz
inc
and
xorl
sti
inc
imul
mov
std
sub
inc
fiaddl
rcl
push
out
out
hlt
mov
cmpsl
lcall
in
scas
xchg
out
xorl
in
push
xchg
rcl
jmp
out
sbb
cltd
in
lea
andl
xchg
inc
push
stos
fdivrl
lods
orl
mov
mov
lret
jmp
fiaddl
inc
mov
inc
nop
fiaddl
jp
pop
fiaddl
fiaddl
fiaddl
ficoml
ret
inc
in
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fiaddl
fidivrl
inc
jmp
lret
jge
stc
les
ret
or
sbb
push
inc
add
or
inc
or
inc
into
sbb
pop
fwait
mov
imul
add
dec
sahf
fisttpl
add
inc
dec
in
mov
cwtl
ljmp
fwait
pop
ljmp
cli
sbb
mov
rcr
inc
jb
dec
pop
stos
outsb
dec
or
outsb
dec
lret
cmp
cmp
push
pop
or
cmp
mov
sti
int
shll
in
rolb
sarb
rorb
sarb
rolb
in
rclb
in
shlb
in
rol
in
ljmp
cld
pop
lods
push
jnp
jle
imul
je
push
sbb
in
cs
insl
fnstsw
or
mov
jp
dec
fistpl
cmpl
inc
inc
mov
jmp
pop
fwait
cmpsb
ljmp
cmp
push
stos
stos
add
or
pop
sub
pop
sbb
insb
xor
push
mov
sbb
mov
jg
ret
in
lods
push
mov
add
cld
dec
jne
push
lret
faddl
mov
fistpl
mov
cmp
in
cmp
dec
out
fnstsw
add
fisubrs
mov
aas
add
xlat
or
inc
mov
daa
fwait
mov
inc
dec
xchg
arpl
imul
pop
stc
pop
lret
daa
int
cmp
popf
mov
imul
popa
or
cltd
sbb
sub
xor
pop
ljmp
inc
fisubrl
dec
cltd
sbb
sbb
shll
mov
faddl
fwait
pop
jb
mov
jecxz
dec
push
test
cmp
push
jge
stc
pop
sub
sarl
jmp
mov
ret
dec
fistpl
sbb
ret
sarl
stos
sbb
push
ret
push
cmp
repnz
inc
pop
cmp
inc
imul
jnp
in
int
push
in
push
adc
icebp
fiaddl
cmp
jae
mov
inc
loope
pop
adc
imul
ljmp
outsl
cli
xchg
addl
ror
sub
push
rolb
es
in
cli
xor
inc
or
cmp
inc
in
lret
cmpsl
sub
loope
push
jp
lret
pop
in
fildl
daa
ja
popf
jo
sbb
pop
lods
sbb
loope
sub
mov
sub
dec
pop
nop
cmpsl
lret
sub
jmp
jae
sti
sti
jecxz
adc
dec
ret
sti
push
push
push
lret
and
cld
jmp
sti
pop
push
sub
stos
mov
xchg
mov
rcrl
cmp
fwait
pop
dec
imul
dec
sub
outsb
dec
ljmp
in
mov
push
lret
jnp
sub
lea
add
adc
jmp
sar
jmp
pop
mov
sub
pop
imul
stos
or
stc
fisubrl
add
daa
ret
subl
ljmp
jmp
mov
dec
pop
push
jp
or
lcall
fildl
lret
in
stos
xchg
mov
dec
repz
fcompl
push
or
add
cmpsl
fldt
mov
fidivrl
stos
cmp
cmp
fsubrl
sti
cmp
or
loop
pop
mov
fwait
aas
or
dec
mov
mov
or
jmp
sbb
push
lcall
sti
ja
stos
call
in
enter
daa
sub
pop
or
lret
fisubrl
subl
xchg
dec
cmp
les
and
xchg
cmp
stos
or
pop
lret
test
sbb
or
outsl
jle
push
sub
or
addr16
xchg
sbb
cmpsb
dec
roll
fwait
pop
dec
aas
addr16
in
sti
sti
sub
mov
lods
sub
mov
sti
push
sub
jns
sti
sbb
sti
les
call
sti
nop
sub
mov
sti
pop
sub
jl
sti
add
and
sti
leave
aas
out
sub
icebp
cmp
xchg
sub
mov
sti
popa
sub
or
fwait
imul
cmp
mov
add
daa
clc
fwait
jmp
jle
add
mov
mov
xor
push
fucomi
inc
arpl
stos
fstpt
fdivrl
pop
mov
mov
in
int
lret
pop
fwait
mov
subl
dec
lret
mov
outsb
cmpsl
sti
sbb
pop
mov
gs
jecxz
fildl
and
daa
movsl
stos
in
mov
cmp
add
int
lcall
adc
mov
mov
cwtl
and
fildl
dec
pop
leave
in
push
xchg
addr16
imul
inc
sub
lods
jmp
push
lods
repz
lods
xchg
test
jge
inc
mov
xlat
push
jecxz
fimull
add
daa
xor
jle
cmp
add
stos
mov
or
imul
dec
cmp
mov
outsb
inc
dec
xchg
fucomi
sbb
add
fildl
inc
ror
mov
mov
shrb
lcall
fwait
pop
sub
or
pop
cli
outsb
or
xchg
stos
cmp
mov
daa
movsl
stos
loop
fwait
cmpsb
sub
jge
fimull
add
pop
dec
mov
sub
sub
mov
sub
mov
mov
fistpl
dec
mov
push
fwait
sub
ja
sub
aas
fwait
sub
sti
xchg
lret
add
fwait
xchg
jge
stc
pop
imul
daa
int
stos
adc
sub
test
in
fwait
xchg
ljmp
mov
adc
popf
pop
stos
add
mov
loop
dec
sub
inc
cli
jns
test
shll
cltd
jbe
inc
sbb
aam
add
rcll
jae
or
jns
sbb
add
pop
in
scas
mov
les
shl
mov
mov
push
dec
fiaddl
sub
push
sub
sti
push
adc
push
fwait
xor
imul
jne
mov
out
test
out
push
mov
jne
add
mov
lret
repz
aam
add
mov
fcompl
inc
test
pop
push
jp
stos
or
inc
push
popf
cmp
scas
mov
in
rcrl
mov
jecxz
sbb
in
sarb
mov
add
sub
inc
xchg
cli
stos
pop
rcr
inc
dec
xchg
cmp
aam
or
sbb
stos
es
dec
fcomi
inc
sub
add
adc
adcl
sbb
push
enter
mov
sbb
add
mov
or
fildl
movl
jnp
jmp
sti
sti
sub
add
cmpsl
fisttpl
dec
pop
subl
sub
loopne
mov
sub
stc
sub
pop
sub
or
add
mov
mov
stos
xchg
push
fwait
in
mov
pop
fmul
fildl
movsb
loopne
in
out
sar
out
sub
lock
jecxz
jmp
int
test
inc
sti
pop
loopne
frstor
repz
mov
sub
rolb
sub
cmp
ljmp
test
stos
cmp
push
sarb
je
cmp
sarb
cmp
mov
icebp
out
in
out
mov
mov
outsb
mov
imul
cmp
cmc
push
mov
in
outsb
mov
mov
into
sub
add
lods
or
dec
fiaddl
fsubr
lret
shrb
inc
push
lret
mov
sub
fmul
out
mov
repnz
aam
add
aam
sub
repz
push
stos
mov
in
imul
cmpsl
fisttpl
mov
sub
loop
cmp
dec
pop
pop
sbb
test
daa
mov
repz
lea
in
push
fcmove
in
ret
rorb
push
rep
push
lcall
mov
cmp
shlb
cmp
mov
and
movl
inc
mov
lret
jb
dec
xchg
mov
push
lret
int3
pop
dec
stc
push
or
jge
stc
push
lret
xchg
outsl
insl
add
cwtl
imul
lcall
cmc
push
push
mov
fisttpl
leave
mov
iret
mov
inc
xchg
mov
push
daa
inc
cld
sti
imul
into
inc
popf
mov
inc
sub
xor
add
daa
out
hlt
repz
sahf
lret
sub
imul
lea
cltd
scas
lret
fistpl
add
push
mov
or
push
lods
cmp
sbb
popf
ljmp
mov
pop
sbb
out
js
adc
jg
popf
sbb
pop
fwait
sbb
add
xchg
mov
insb
jmp
sbb
dec
sarb
pop
fildl
imul
inc
cmpsb
stos
push
stos
or
sub
lret
aaa
movsl
mov
cmp
push
or
popa
push
popf
jp
loop
sub
cmpl
lret
add
cmpsl
fldt
in
leave
mov
pop
push
imul
or
push
sub
inc
ljmp
stos
lcall
ljmp
push
jp
mov
add
daa
cmp
fcmovnb
subl
mov
stos
sub
add
cmpsl
or
ret
loope
adc
popf
sub
add
fcmovnb
sub
stos
or
inc
stos
mov
cli
movsb
mov
jmp
xchg
dec
fwait
mov
lret
negl
inc
sti
adc
rorl
cs
daa
movsl
stos
in
lret
test
xor
lret
aas
mov
repz
jle
cmp
dec
inc
dec
sbb
or
sbb
add
mov
fstpt
jp
inc
pop
fisttpl
inc
stos
cmpsl
mov
jnp
in
sub
add
cmpsl
fcmovnu
fimuls
cli
mov
jmp
mov
popf
inc
sbb
mov
xchg
mov
xchg
jl
roll
xchg
mov
mov
pop
lcall
inc
into
dec
cltd
jp
jge
repz
sub
mov
popf
loop
push
sti
sub
dec
mov
mov
ljmp
inc
rcr
inc
lret
mov
shr
mov
into
dec
add
sub
sbbb
inc
mov
push
sbb
daa
cmp
add
jo
cltd
lret
mov
cli
mov
in
mov
push
dec
sub
push
stos
out
scas
jb
stos
daa
adc
fisubl
cmp
insb
lret
push
in
mov
lret
aas
fwait
cmpsb
fwait
fwait
mov
fbstp
pop
xchg
out
aam
add
sbb
add
mov
aam
ret
aam
cli
mov
aam
xchg
mov
aas
and
dec
out
aas
stos
es
out
aas
jnp
sbb
aas
lret
out
aas
lcall
cmp
cmp
and
lret
sti
cmp
and
sub
or
and
and
lret
sbb
cmp
and
repnz
push
fstl
cmp
pop
pop
jnp
jb
sub
iret
mov
ljmp
out
cmp
lcall
xor
insl
popf
dec
push
lret
and
and
fcmovb
cmp
icebp
xchg
insl
jge
push
mov
in
leave
cltd
cmp
pop
clc
mov
cmp
mov
mov
dec
mov
stos
xchg
jp
cli
push
push
sbb
fldl
sbb
dec
mov
sbb
loop
jge
lea
add
adc
lea
mov
push
in
leave
sub
aaa
push
or
pop
sub
sbbb
out
xchg
mov
negl
pop
fisubrl
xchg
shll
es
ficomps
out
lret
cmp
in
stos
xchg
loop
lret
pop
fwait
pop
pop
lcall
cli
mov
cmp
insl
data16
jge
jns
push
push
add
mov
add
pop
sti
and
pop
dec
stos
lods
mov
fwait
lea
pop
in
mov
shll
jge
stc
pop
ljmp
xor
aas
dec
es
out
aas
sbb
jb
aas
ljmp
ret
lods
iret
mov
cmp
fldt
aam
mov
pop
jp
cmp
sub
sar
das
out
adc
lcall
cmp
repz
imul
sbbb
rolb
mov
mov
jnp
xor
lret
fdiv
push
lret
fnstsw
int3
add
mov
sbbb
fwait
mov
fwait
cmpsb
fwait
mov
imul
cmpl
mov
pop
push
add
pop
pop
outsb
inc
or
rcrl
inc
adc
loop
pop
dec
adc
lret
lret
dec
int3
mov
les
mov
negl
aam
add
fidivrs
cmp
adc
sub
scas
lret
push
jmp
xchg
insb
jnp
dec
fadds
inc
cmp
pavgw
test
fwait
in
mov
cltd
test
or
in
cmp
adc
jnp
push
enter
fisubl
fidivrl
inc
sbb
xor
lret
mov
daa
jnp
mov
scas
inc
adc
imul
mov
stos
ret
inc
add
daa
sub
add
xor
mov
in
mov
in
fisttpl
in
fcmovnb
mov
adc
lret
insl
les
or
push
cmp
lret
fstpl
push
repnz
mov
repz
daa
stos
or
mov
add
cld
lcall
popf
sub
repnz
aas
mov
in
fwait
xchg
cmp
insb
push
lea
sbb
frstor
imul
mov
mov
push
mov
mov
fwait
mov
push
cmp
repz
jge
fwait
xchg
mov
dec
ljmp
imul
insl
push
out
xchg
fdiv
mov
mov
dec
lea
push
repnz
mov
xor
push
ds
cli
push
mov
fwait
jnp
xchg
insl
inc
xchg
imul
inc
mov
sar
negb
fwait
cmpsb
addb
lahf
mov
sti
out
fidivs
push
int
push
loop
es
cld
cld
bound
in
mov
fisttpll
out
pop
and
cld
in
iret
mov
pop
xchg
int3
adc
fnsave
dec
inc
inc
mov
jae
push
xorl
fisttpl
or
push
mov
jle
fsubrp
xchg
inc
daa
outsl
fcoml
cmpsl
cmpl
in
mov
adc
jp
pop
out
jg
sub
loop
das
fldl
pop
fsubrl
cmpl
mov
jg
repz
jmp
fidivl
hlt
int3
sbb
jb
inc
pop
mov
jmp
cmpsl
fstpl
in
or
push
jl
fldl
jp
push
xorl
jmp
fucomi
in
stos
xchg
jnp
fsubl
out
adc
aaa
dec
loop
fnstsw
sahf
xchg
imul
jnp
mov
scas
cmpb
dec
jle
fdivl
push
xorl
mov
outsl
out
adcl
in
incl
fcoml
pop
das
in
ja
fcompl
pop
ret
ficompl
sub
xchg
push
dec
fsubrl
xchg
inc
and
fsubrl
mov
stos
pop
mov
out
mov
or
mov
xchg
sbb
pop
fstl
in
ja
inc
inc
mov
loop,pn
adc
mov
fsubrl
aas
andl
xlat
mov
call
ds
cmpl
in
aaa
xchg
inc
outsl
imul
out
sub
mov
push
xchg
dec
dec
fmull
pop
lret
xchg
inc
arpl
or
xchg
push
inc
out
orl
jnp
inc
cmpsl
fcompl
aas
sub
sub
fildl
in
daa
xchg
inc
out
push
jle
fmuls
mov
and
repz
sti
clc
pushf
fldl
dec
fdivl
jae
cmpsb
xchg
outsb
es
inc
movsb
xchg
stos
fldl
orl
in
aaa
xchg
inc
out
mov
pop
out
xchg
test
jno
inc
scas
jnp
hlt
xchg
ljmp
orl
in
addl
cld
push
fcompl
cld
in
cmp
cmp
push
ljmp
inc
xchg
lret
orl
dec
in
mov
iret
fadd
in
push
cli
movl
in
sahf
xchg
xor
adc
inc
xchg
ret
loopne
or
dec
xchg
repnz
add
pop
in
adc
fcoml
inc
ss
push
in
outsb
xchg
inc
cmpsb
fdivrl
testb
xchg
push
mov
add
push
in
jb
push
inc
hlt
jge
fnstsw
inc
ret
stos
test
or
out
xorl
in
push
jmp
lcall
imul
subl
mov
inc
push
outsb
fcoml
out
xchg
pushf
ret
fistps
in
mov
sub
out
adcl
jb
es
xchg
adc
int
stos
cmp
pop
fisttpll
inc
pushw
fadd
ljmp
xchg
inc
outsl
dec
fdivl
imul
sahf
mov
xor
fsubrp
inc
add
inc
leave
and
jmp
in
adc
sarl
mov
fnstsw
fmulp
int
add
cmp
mov
sbb
mov
and
jae
dec
imul
pop
aad
push
xchg
fldt
or
imul
addr16
sub
outsb
daa
or
jecxz
and
out
push
and
in
push
xchg
rcll
sub
ficoml
enter
pop
stos
xor
js
and
fwait
add
push
fwait
jae
gs
sub
mov
jbe
test
sar
or
lds
lds
mov
test
mov
das
xsha1
cmpsb
mov
inc
dec
ljmp
push
add
inc
imul
or
push
dec
addr16
and
hlt
jno
add
adc
sbb
and
inc
and
jbe
lret
push
out
and
mov
xlat
jbe
push
int
push
xor
jecxz
adc
je
cltd
sbb
cmpsl
jne
imul
cmp
mov
add
cmp
pop
aas
sbb
pop
fnstcw
pop
and
ljmp
cwtl
sarl
cmp
fwait
clc
mov
sbb
mov
mov
shl
push
pushf
iret
int3
cmc
mov
xchg
aam
sbb
ret
lods
sbb
jge
fcoml
ss
hlt
and
icebp
shr
and
notl
jl
jge
lods
mov
int
mov
rolb
cmp
jmp
sbb
inc
and
mov
sbb
testl
imul
ret
cld
int
adc
lods
mov
xor
cmp
ljmp
lock
mov
mov
inc
hlt
shl
dec
xor
call
inc
or
cmp
sbb
cmp
xchg
fildll
fcoml
out
cmp
and
and
fidivrl
rol
inc
ljmp
hlt
and
jecxz
ss
push
xchg
addb
or
bound
arpl
fs
cmp
int
inc
mov
mov
and
test
mov
testl
and
aaa
push
or
jp
mov
hlt
jo
mov
ss
inc
dec
pop
add
int
xchg
es
xor
cmpsl
mov
cmp
std
sub
pop
outsb
pop
xchg
and
inc
sub
mov
jno
jbe
xor
pusha
js
paddusw
sub
es
scas
lock
addr16
scas
inc
out
and
mov
push
test
out
jne
mov
nop
test
shlb
das
test
inc
dec
jbe
push
shl
add
jo
xor
in
xor
cmp
cmpsb
rol
fnsave
xchg
divb
jnp
repz
and
add
jne
ss
fcompl
jo
xchg
es
sbb
ds
stos
adc
xor
dec
xlat
test
jle
roll
in
xchg
push
aas
push
int
xchg
pop
xorl
sbb
mov
scas
int
pop
mov
jns
stos
fwait
pop
out
clc
jecxz
dec
testl
addl
mov
pop
push
and
outsb
cmp
cs
inc
lods
stos
adc
jnp
movsl
insb
mov
mov
sub
sbb
aaa
add
and
test
out
jmp
in
jno
repnz
sub
jae
mov
sbb
mov
aam
call
xchg
sub
leave
lret
mov
dec
into
mov
bound
sub
cmpsb
sbb
jnp
orb
fwait
mov
mov
adc
popa
in
daa
jnp
ret
add
jp
int
xor
mov
push
fisubl
jmp
out
and
sub
stos
inc
decb
mov
push
mov
adc
insl
pop
sbb
mov
inc
jmp
movsl
push
sub
cmp
pusha
inc
or
les
icebp
orb
cmc
aam
lods
push
insb
and
ficoml
pop
out
addr16
and
push
in
pop
push
daa
in
aad
xchg
fisttpl
pop
cli
pop
pop
cwtl
pop
popa
out
inc
icebp
push
mov
mov
pop
xor
xchg
or
imul
sbbl
xchg
addr16
push
jae
ficomps
xchg
fistpll
pop
scas
arpl
adc
xor
je
js
call
shl
out
or
jb
dec
lret
out
inc
movsl
out
test
xlat
cmpsl
ret
and
sub
add
jae
sbb
inc
out
rolb
addr16
jmp
mov
or
hlt
shll
and
or
into
insl
and
repnz
movmskps
xor
arpl
lea
outsl
sbb
sahf
sbb
into
pop
mov
ficomps
xchg
outsb
push
inc
ss
cld
lods
mov
push
lret
test
jg
movsb
sbb
sbb
dec
inc
jle
ss
xchg
add
fildl
adc
and
stos
pop
fcomps
inc
popa
mov
int
xchg
fistps
sub
sbb
loop
jecxz
iret
jnp
sbb
xchg
xchg
ret
ja
xchg
fimull
jmp
cmp
imul
mov
add
push
pop
jae
xchg
jge
xchg
jnp
addr16
push
lea
inc
repz
lahf
or
dec
out
xchg
out
jmp
inc
lods
ret
aad
mov
adc
jmp
inc
add
lcall
jl
out
out
pop
out
jbe
pop
pop
add
rcll
or
mov
mov
je
imul
jp
int
je
mov
sbb
or
and
adc
mov
pop
xor
in
jmp
lods
arpl
sub
lods
mov
jb
sbb
inc
adc
pop
inc
scas
jecxz
jecxz
sahf
mov
sbb
out
loope
mov
shl
cwtl
mov
inc
jg
call
xor
popf
std
mov
pop
xchg
mov
inc
jge
loop
adc
in
in
int
sub
jo
xor
jg
mov
test
pop
add
nop
test
dec
imul
repnz
insb
mov
imul
dec
inc
outsb
adc
loop
je
push
es
mov
mov
mov
in
int
outsl
mov
xor
roll
jge
imul
fbstp
movb
xchg
jmp
xlat
inc
xchg
mov
push
adc
adc
sbb
scas
popf
sbb
adcl
xchg
pop
out
inc
out
pop
mov
daa
pop
popf
pop
xchg
lahf
pop
in
loop
pop
pop
jle
inc
ljmp
cmp
loopne
call
lcall
sub
add
ja
xchg
mov
aaa
mov
loope
or
test
push
or
inc
enter
jmp
push
subl
repnz
pmovmskb
iret
pop
and
popf
shl
push
test
push
and
cmpsl
and
in
in
push
sbb
jg
jne
adc
jg
jmp
inc
popf
movsb
rcll
daa
jmp
inc
cmp
push
sub
sub
jecxz
test
ja
push
out
in
pop
sub
inc
adc
xchg
es
ja
daa
xchg
aas
into
in
imul
das
dec
out
test
ficomps
jmp
mov
mov
pop
ja
imul
push
nop
jecxz
xorb
stc
inc
dec
lea
mov
xchg
sbb
es
out
xchg
sub
call
stc
and
out
push
out
int
imul
jecxz
fcmovbe
mov
in
jnp
xchg
pcmpeqb
movsl
mov
dec
jbe
test
jp
sbb
xchg
test
test
xchg
enter
addr16
jmp
test
shlb
push
jmp
jmp
mov
push
cmp
ret
ss
push
test
inc
push
fst
lahf
pop
inc
pop
push
imul
cmpsb
cmp
cmp
out
shrl
pop
inc
push
jb
mov
pop
inc
fiadds
or
dec
cmp
imul
fwait
jmp
push
scas
push
lds
arpl
xor
jmp
loop
dec
xlat
lods
jecxz
call
testl
jecxz
jecxz
addr16
mov
and
icebp
stc
xchg
popa
loop
mov
ret
inc
arpl
xchg
stos
testb
sbb
das
adc
mov
fsubl
and
jns
push
int
mov
pop
vsubss
jbe
push
rol
mov
sti
fisttpll
xchg
and
addr16
push
sub
inc
mov
ljmp
rclb
mov
push
popa
iret
test
jmp
jmp
xor
cmp
outsb
call
mov
sbb
ret
cmpsb
mov
xor
mov
out
mov
out
lods
add
jge
xchg
std
push
andl
arpl
sub
add
push
lds
test
xchg
and
addl
cmp
dec
cmp
cld
or
push
pop
pop
ljmp
push
fs
mov
add
imul
inc
push
out
fdivrl
and
mov
cltd
aaa
testl
mov
inc
imul
int3
arpl
mov
pop
pop
add
xchg
fiadds
mov
pop
out
jmp
lock
cmp
adc
jae
xor
popa
ret
aas
std
pushf
dec
fisttpl
clc
pop
fstpl
mov
jp
cmp
clc
iret
jge
cli
adc
push
out
and
add
lahf
dec
bnd
xor
adc
andb
mov
je
stc
mov
ja
mov
test
lahf
mov
call
cld
inc
test
xchg
out
inc
ret
or
ret
mov
pop
pop
out
xlat
and
dec
and
push
jmp
mov
jbe
inc
in
in
or
adc
xchg
sbb
xchg
xchg
mov
sub
jg
ret
add
jns
pusha
jmp
shrl
xor
scas
pop
fists
out
nop
sub
xchg
std
cwtl
add
push
adc
push
mov
jns
outsb
in
ja
cmp
stc
jecxz
into
fisubs
cli
xchg
or
clc
jns
xchg
cld
mov
push
loopne
mov
inc
std
int
insb
mov
add
lds
stc
adc
aaa
popa
sbb
mov
pop
mov
roll
es
sub
cltd
jge
cmpb
mov
mov
sub
fldt
test
push
mov
and
shrl
inc
cmp
iret
movl
jge
out
jmp
pop
push
dec
sbb
aas
mov
cmp
out
and
test
pop
mov
fcom
cs
jbe
inc
mov
call
pop
sub
mov
xchg
scas
cmpsl
leave
aad
ja
fwait
inc
sbb
outsb
iret
movsl
adc
xlat
xchg
dec
sbb
repz
xor
jle
aas
loope
and
daa
push
or
add
mov
xorl
jecxz
testl
repnz
xchg
int3
scas
lcall
fcomi
mov
dec
cmp
jmp
mov
and
sbb
loop
pop
insl
out
dec
repz
push
repz
nop
test
insl
mov
xchg
jmp
xchg
inc
jecxz
fucom
push
mov
pop
aad
lcall
xchg
jl
or
hlt
cs
daa
lret
int
test
dec
xchg
aad
pop
loop
sub
sti
lea
cmp
mov
xchg
popf
jae
inc
add
ljmp
xchg
addr16
inc
iret
pop
pop
ss
add
leave
sahf
nop
pusha
and
push
mov
push
sub
nop
int
cmp
outsb
fstl
or
fisttpl
jge
fucomi
pop
rcr
jl
jmp
lret
int3
mov
lea
je
cli
fisubrl
push
xor
icebp
lret
fldt
leave
fisttpl
rorl
ret
inc
imul
sub
fisttpl
or
dec
fs
inc
cmp
inc
push
dec
inc
sbb
fidivl
mov
sbb
add
mov
dec
fcomi
in
cs
ret
xchg
inc
xchg
pop
dec
rcl
fisttpl
sub
mov
rolb
mov
add
test
mov
push
fcmovnu
pop
flds
dec
and
mov
dec
outsl
cmpb
mov
out
lahf
iret
inc
dec
shrl
fsubrl
out
sbbl
leave
cmp
xlat
dec
bound
fcmovne
push
mov
es
data16
mov
lret
dec
or
sahf
cs
xor
pop
inc
dec
add
cmp
jo
add
add
inc
xchg
push
fcomi
sbb
mov
pop
mov
inc
mov
mov
inc
lret
cmpsb
mov
push
shll
sub
inc
popf
mov
test
lret
scas
je
roll
push
insb
lods
cmpsb
dec
lock
aaa
scas
outsb
lods
orb
in
fnstsw
add
xlat
pop
fs
lods
jmp
lods
fcmovu
mov
jmp
jae
fidivl
imul
xor
mov
lahf
dec
mov
pop
ret
jbe
scas
fwait
movsb
jae
aaa
in
mov
lret
mov
and
daa
sub
mov
add
pop
fs
rorl
popf
gs
jp
cmp
push
in
cmpb
cmp
imul
pusha
outsl
fmull
repz
inc
cli
fmull
mov
adc
push
out
cmp
jae
mov
xchg
loop
repz
push
repz
jecxz
fildl
scas
lea
hlt
imul
lcall
push
fwait
pop
addr16
cmpsb
and
int3
ret
sbb
push
sbb
jne
shlb
jecxz
ret
mov
int
flds
in
mov
int
outsl
addr16
adc
jecxz
rcrb
cltd
fwait
popf
xor
andb
hlt
loop
sbb
mov
xchg
inc
inc
inc
fistpl
cmpsb
sbb
sbb
cli
int
addr16
cs
mov
add
cli
arpl
jecxz
movsb
inc
xchg
lret
and
inc
adc
xchg
mov
mov
and
imul
sbb
and
cmp
push
outsb
mov
jecxz
and
stos
outsl
lods
lcall
and
sub
jae
adc
or
push
fiaddl
imul
jecxz
out
mov
push
sti
jo
mov
data16
jae
int
shl
int
cs
lret
ljmp
or
sbb
and
insl
cltd
arpl
adc
and
add
push
out
and
jecxz
into
dec
addb
add
cmp
mov
icebp
fwait
test
jae
loopne
xor
fcoms
push
loop
push
jbe
and
or
bound
sbb
fwait
ret
pop
fiaddl
add
mov
outsl
outsl
and
pop
cmp
xchg
sbb
loop
popf
loopne
mov
add
and
sti
xchg
add
stos
mov
mov
mov
lret
add
jecxz
out
inc
mov
faddp
fsubrs
ja
sti
jmp
cwtl
push
jbe
bound
shrb
popa
dec
sbb
mov
jno
adc
mov
lcall
adc
xchg
bound
xchg
lret
loope
add
fimull
cltd
and
jbe
fcmovnb
outsl
jecxz
popl
loopne
add
popa
mov
and
mov
fs
and
sbb
pushf
jo
adc
cs
and
adc
insl
test
and
fsubl
out
ret
inc
inc
in
sbb
imul
xchg
dec
frstor
inc
lret
ret
mov
adc
insb
aas
fstpt
test
xor
repnz
cmp
sub
or
inc
repz
icebp
stc
scas
aad
cmc
sub
xor
push
xorl
cmpsl
rcr
pop
xchg
jbe
out
ret
pop
cld
bound
addb
imul
rorl
sub
push
rcr
xor
inc
and
cmp
cmpsb
orl
dec
ret
push
dec
xor
cmp
jmp
adc
sbb
jo
aam
rol
cs
mov
in
popa
fdivl
push
data16
cmp
gs
test
iret
xlat
ret
fildl
and
imul
shl
lds
xorb
cmp
jne
dec
and
enter
jmp
mov
mov
mov
mov
mov
add
cmpsl
cmp
mov
mov
adc
orb
in
fisttpll
mov
mov
shr
adc
sub
hlt
adc
addr16
int
sahf
fisubl
aaa
mov
int
pop
jl
and
hlt
jnp
test
add
add
adc
fcomp
mov
ljmp
daa
cmp
subl
pop
in
and
mov
xchg
outsl
ret
jno
push
mov
push
and
stos
mov
cmp
jno
adc
lret
sbb
es
inc
cmp
stos
mov
add
sub
dec
pop
in
fldt
ljmp
mov
push
adc
push
sub
stos
pop
fisttpll
scas
lcall
sub
cmp
adc
jae
arpl
es
push
xchg
sbb
sbb
bound
xor
xchg
pop
das
xchg
gs
mov
inc
test
std
pop
jl
cmp
or
mov
movsb
inc
xchg
mov
xchg
sub
push
xchg
inc
sub
dec
mov
sub
int
sbb
lods
dec
jecxz
dec
push
fwait
pop
sti
dec
xchg
fcomp
outsb
or
sub
scas
mov
push
lods
inc
iret
test
mov
or
insb
push
bound
inc
aad
and
int
push
pop
mov
push
imul
sahf
je
mov
mov
xlat
pop
mov
testb
out
inc
mov
or
sbb
dec
enter
pusha
jecxz,pn
scas
add
movsb
mov
fs
rcrl
stos
mov
push
out
push
test
cmp
scas
jg
stos
ret
jmp
inc
mov
movsb
and
push
mov
mov
sahf
insb
fs
xor
idivl
test
cwtl
sti
lds
sti
pop
cmp
push
push
in
ret
pop
fidivrs
lods
dec
sti
test
jecxz
cmp
mov
cmc
xlat
inc
mov
stos
sub
scas
jo
push
jmp
scas
mov
sti
mov
push
ljmp
lcall
cltd
xchg
stos
adc
adc
jno
sub
or
rorb
inc
inc
pop
arpl
lods
lcall
iret
std
inc
arpl
mov
into
frstor
sbb
shl
mov
test
jmp
push
sub
mov
push
cmp
inc
repz
in
test
mov
xchg
sub
push
aad
es
int3
imul
dec
xchg
mov
push
xchg
push
push
pop
shrb
mov
ljmp
or
dec
sub
gs
ret
frstor
lret
mov
pop
subb
mov
push
fnstsw
sbb
mov
dec
outsb
mov
push
cmp
fsubrl
fwait
mov
lods
mov
ljmp
and
adcb
in
xchg
lods
aam
data16
mov
fsubp
inc
mov
push
dec
dec
test
cli
mov
add
xchg
add
fnstsw
pusha
leave
mov
inc
in
sub
push
push
xchg
xlat
jae
jecxz
inc
sbb
pop
push
pop
dec
in
push
lea
mov
cmp
mov
addr16
dec
xor
dec
gs
frstor
pop
dec
xchg
push
jmp
repz
xlat
int3
push
mov
dec
mov
iret
ljmp
push
push
in
push
inc
mov
sub
lret
out
arpl
repz
sti
jb
pusha
xchg
mov
inc
add
stos
sbb
mov
inc
jns
mov
cmp
pop
sub
outsl
and
adc
push
jl
xor
cmp
es
sbb
mov
inc
sbb
std
xor
mov
xchg
xor
or
mov
xchg
xchg
adcb
dec
jmp
xchg
pop
in
in
xor
icebp
loop
or
outsb
cmpsl
aad
testb
inc
xor
pop
inc
inc
adc
negl
lods
ret
lret
mov
fwait
cld
std
mov
pop
or
jnp
rcl
stos
jmp
cmpsl
sbb
push
push
aas
inc
shrl
stos
adc
jmp
sub
cmc
mov
xchg
mov
lret
mov
outsb
jnp
xchg
jecxz
test
shll
push
xchg
pop
push
jmp
frstor
xor
xchg
add
jl
les
xor
call
mov
sbb
mov
xor
ret
sbb
sahf
dec
or
imulb
xchg
leave
jecxz
mov
out
adc
into
cmova
mov
jg
jecxz
loope
aaa
mov
out
adc
and
ja
shll
insb
jmp
or
int
and
mov
out
rorl
adc
aas
adc
xchg
cmc
add
cmpsl
sahf
mov
rolb
popl
lahf
push
vmread
jecxz
ror
popa
out
call
sub
mov
lds
gs
push
sbb
jle
mov
jge
mov
inc
push
xor
push
xchg
test
cmpsl
cmpsl
mov
in
mov
addb
scas
fcmovnb
mov
imul
jg
test
mov
add
jmp
loop
xchg
push
fcmovnu
scas
sti
pop
out
add
idivl
xlat
ret
sbb
dec
repnz
sahf
cld
fistpl
fwait
jmp
mov
mov
pop
fistpl
pop
sar
ja
xchg
ds
inc
pop
cmp
lock
gs
jmp
das
pop
push
lret
stos
adc
jmp
inc
fisttpll
dec
ret
push
jmp
fldl
rolb
rep
fldl
jecxz
in
push
adc
fadd
out
adc
mov
fadd
out
sbb
shll
test
lahf
add
inc
push
xor
sub
inc
fisttpl
pop
int
xchg
std
stos
in
leave
out
add
lcall
mov
shl
sbb
cli
in
fldl
out
adc
aad
ret
lret
pop
xor
out
and
sub
jmp
sbb
in
add
loope
jae
sti
jnp
std
out
xor
imul
xchg
repz
fdiv
out
sub
dec
in
icebp
xchg
out
addl
xchg
inc
andl
pop
repz
jg
jecxz
sbbl
in
popf
xchg
inc
xchg
ret
fcompl
jmp
mov
fsubl
out
subl
stos
in
adc
faddl
out
orl
mov
inc
jp
fsubl
mov
mov
or
dec
add
sbb
setne
sub
pop
and
cmp
fcmovne
rcl
rcl
fnstcw
lret
in
leave
int
in
dec
fisttps
test
dec
adc
or
or
mov
std
sti
lahf
div
lret
stc
xchg
lods
xchg
out
fwait
jg
mov
xchg
and
sbb
pop
adc
pop
daa
lret
aaa
or
test
icebp
mov
xor
in
sti
inc
cmp
push
lret
adc
loope
fisttps
pop
negl
inc
sti
fwait
lret
lds
mov
iret
ror
arpl
mov
pop
out
xlat
xlat
in
mov
into
dec
std
pop
lahf
jne
roll
aad
iret
mov
mov
cmp
and
jmp
mov
mov
mov
fcomi
sti
rolb
sti
lahf
mov
ffree
dec
std
aas
in
lret
loope
sti
ljmp
sti
push
and
popf
stc
out
repz
push
lret
push
in
out
in
mov
pop
icebp
outsl
xor
je
popf
in
xlat
cltd
jmp
lds
imul
fwait
jae
cmc
aam
or
inc
test
mov
inc
xchg
jecxz
lret
cld
add
mov
in
cmpsl
lods
movsl
fwait
mov
fwait
mov
xor
xchg
add
seta
lea
cmp
iret
pop
idivl
xchg
mov
push
xchg
jmp
daa
repz
ljmp
movl
mov
sti
es
mov
popf
mov
sbb
movsl
push
mov
sub
test
es
repz
imul
mov
in
insl
mov
std
mov
xchg
addr16
cmpsl
shll
dec
cmpl
movsl
mov
dec
lret
inc
sub
jmp
icebp
out
sahf
mov
lea
test
aam
in
sti
jl
rcrl
push
inc
std
or
lret
mov
pop
mov
arpl
pop
push
jne
rorl
lret
test
repz
fisttpl
push
lret
push
rorl
ret
push
sti
icebp
lds
std
pop
fwait
push
inc
cmc
cmpsb
mov
iret
jge
pop
lea
adc
in
aam
repz
imul
or
lea
mull
mov
lret
inc
xrelease
stos
mov
pop
in
popa
fldl
jge
xrelease
icebp
cmpsl
std
filds
sarb
cmc
add
mov
shr
mov
outsl
xlat
stc
popf
jno
jle
add
or
subl
mov
lret
mov
pop
cmpsl
cmpsl
add
movsl
mov
rcrl
pop
jae
xchg
and
test
jl
data16
ret
pop
jle
push
ret
sbb
inc
xchg
scas
mov
adc
test
je
cwtl
dec
adc
jmp
xor
inc
sub
mov
sub
sub
and
xchg
outsl
jecxz
lret
and
cmp
fbstp
lods
mov
cli
pop
sti
jg
inc
xchg
mov
and
cltd
xor
jecxz
es
repz
xor
cltd
cmpsl
stc
xor
xor
jmp
ret
das
int3
xor
enter
notl
ret
mov
repz
in
mov
push
out
icebp
sar
shrb
mov
into
inc
xchg
adc
xchg
mov
lret
fadd
cmpsl
mov
fwait
jecxz
xchg
xlat
imul
aam
sti
test
rep
into
scas
adc
in
cltd
rorl
out
sar
pop
lds
xchg
adc
iret
loop
in
iret
push
xchg
movl
jl
fidivrs
cmc
mov
cli
xchg
jmp
cld
mov
cmp
inc
cmpsl
mov
movsl
mov
repnz
mov
std
hlt
mov
pop
out
mov
dec
lock
push
ret
mov
inc
mov
in
fildl
sbb
sar
ret
dec
jecxz
pop
lahf
aas
test
xlat
addb
les
jl
out
out
dec
adcl
lret
cwtl
push
xchg
in
stc
cmc
xchg
fwait
addb
leave
xlat
lea
pop
stos
inc
lods
cmp
jnp
cmpsb
push
repz
std
test
mov
std
ljmp
cmp
lret
imul
fwait
ret
jnp
mov
or
repz
cmc
lods
lds
mov
aas
sti
test
ret
mov
mov
icebp
std
aam
lahf
scas
in
lret
xchg
movl
lods
xchg
or
cmpsl
mov
xchg
iret
cmc
mov
lret
shl
inc
icebp
inc
lock
rol
pop
lea
push
insb
mov
or
push
nop
test
push
mov
push
ret
push
iret
hlt
push
loop
mov
aad
or
lret
icebp
xchg
push
lds
fs
cwtl
movl
inc
mov
pop
xchg
arpl
jp
push
jl,pt
pop
cmpsl
ret
out
mov
in
mov
lahf
es
loope
cmc
pop
mov
mov
lret
in
pop
stc
icebp
js
aad
cld
sti
shl
into
mov
push
icebp
inc
std
je
leave
lea
stc
xor
jo
jbe
in
sti
mov
lret
jnp
aas
push
in
dec
mov
icebp
in
or
jmp
std
push
iret
add
add
rcll
sub
lret
add
fistpl
aad
mov
sbb
loop
xchg
mov
mov
push
out
adc
jmp
aam
popf
sub
push
orl
dec
movsl
mov
in
ret
sub
mov
sub
and
fwait
jl
repz
test
xchg
pop
xchg
pop
dec
cmpsl
lea
fisttpll
xlat
das
popa
stc
pop
mull
cmp
sti
dec
popf
cmp
inc
repz
ss
fisttpl
aas
lahf
mov
pop
inc
xchg
pop
cltd
jge
roll
mov
ljmp
xor
lret
xor
lock
shrb
fcmovnu
xor
loope
cmp
mov
mov
cmp
int3
outsl
out
leave
jecxz
xchg
std
ret
dec
xchg
inc
ffree
pop
mov
addr16
cmp
inc
lahf
lcall
jmp
fnsave
test
roll
mov
pop
test
cltd
ror
shl
cltd
stc
jmp
aad
ffree
out
insl
xchg
push
mov
ffree
movl
imul
test
loop
es
in
mov
ret
loope
sbb
sti
and
xchg
xchg
stos
std
std
arpl
std
mov
icebp
dec
idiv
int3
xchg
repz
cmp
xlat
cmpsb
repz
mov
imul
icebp
mov
addr16
mov
sbb
inc
mov
das
xchg
or
int3
jae
cmc
test
jl
xlat
aam
fidivl
in
inc
adcl
test
lcall
add
aad
pop
cmpsl
xor
mov
mul
sti
std
repz
cltd
pop
mov
mov
icebp
pop
std
stc
xchg
repz
mov
test
daa
stc
faddp
inc
mull
das
inc
sti
cmpsb
repz
test
ffree
cmpsb
icebp
mov
std
adc
jecxz
pushf
xor
movl
fwait
mov
pushf
shl
jnp
mov
mov
jecxz
int3
sti
mov
ljmp
mov
scas
mov
orl
mov
xchg
mov
stos
dec
int3
sbb
dec
addl
lahf
movl
fwait
in
int3
fistpl
mov
add
pop
movsl
aas
aas
inc
sub
movl
rcrl
xlat
xchg
in
aaa
lds
shll
int3
dec
repz
leave
pop
lret
lds
movsl
in
cmp
aaa
flds
in
mov
xchg
adcl
pop
push
cmp
loopne
lahf
push
dec
in
pop
mov
dec
jae
shrl
ds
jmp
cs
adc
lcall
adc
mov
popf
lds
push
and
fcmovnu
orl
into
push
int3
xlat
mov
mov
xor
jg
mov
sbb
rcll
mov
jp
adc
mov
cltd
stc
rol
xlat
fwait
mov
imul
jbe
aam
sub
std
rclb
loop
mov
in
loope
or
xchg
aad
shll
rorl
xchg
imul
ret
ret
lods
xlat
movsl
or
scas
aad
xchg
bnd
lea
testl
aam
stos
jecxz
mov
fwait
shll
pop
xchg
imul
loop
pop
fists
pop
ret
lret
shll
icebp
xchg
mov
pop
iret
and
and
sarl
mov
jmp
jbe
fwait
ret
xchg
aas
xchg
jmp
movsl
aad
jae
mov
leave
imul
jmp
push
aaa
std
out
in
mov
mov
inc
xchg
dec
jp
mov
movsb
fnstcw
shlb
cmc
adc
fucompp
or
mov
ror
out
cli
ficomps
stc
cmpsl
cmp
jae
lods
test
mov
jb
add
imul
xlat
xchg
fsubl
mov
fwait
into
dec
imul
jg
or
jecxz
je
mov
lds
test
scas
jmp
jae
push
andl
out
pop
mov
or
rcll
pop
pop
dec
jbe
mov
sbb
xchg
mov
repz
rcrl
std
sub
fcmovnbe
mov
push
lds
sahf
int3
orb
leave
arpl
cmpsb
add
xchg
or
add
push
int3
stos
repz
call
sbb
movl
fistl
loop
mov
dec
push
out
mov
inc
mul
mov
xor
mov
div
das
push
ja
ret
xchg
vpaddusw
out
repz
cli
mov
mov
jl
dec
mov
test
out
pop
dec
out
fildl
fistpll
stos
test
jns
sbb
adc
ret
jne
outsl
sbb
out
fistpl
jecxz
jmp
inc
push
jbe
cmp
inc
popf
out
xchg
repnz
mov
ret
lea
enter
mov
cltd
sbb
mov
or
or
std
pop
xchg
mov
int
shll
in
jmp
mov
mov
mov
cmpb
shll
mov
lret
in
xchg
xchg
aad
dec
add
ljmp
jbe
ljmp
mov
xchg
dec
scas
andl
test
mov
aam
int3
jp
sbb
jecxz
sarb
sti
cli
sbbl
out
fldenv
imul
adc
xchg
push
xlat
ret
repz
dec
addl
lret
cli
icebp
xor
mov
orl
notl
adc
rorb
aad
std
fcomi
sub
xchg
jecxz
lods
mov
aad
sti
xlat
sbb
pop
push
and
out
cli
or
pop
fwait
in
add
push
std
pop
out
stos
push
out
mull
dec
sti
and
insw
sar
mov
dec
xchg
fisttpl
int3
vunpckhps
cltd
xor
lret
dec
adc
jp
push
int3
adc
out
jmp
sbb
mov
adc
ret
cmp
imul
adc
jb
xorb
pop
jbe
jbe
ljmp
inc
bswap
or
pop
fs
sub
ljmp
bound
aam
cmp
xlat
inc
sbb
int3
pop
push
ret
shlb
movl
stos
or
repz
mov
int3
add
mov
jl
jmp
test
fistpl
pop
shl
cmc
in
pop
cmp
pop
xchg
xorl
roll
repz
add
gs
xchg
mov
dec
scas
jb,pt
flds
jg
pop
cmpsl
and
fimull
cmpsb
push
mov
adc
xchg
and
ljmp
add
sti
mov
int3
cmp
fisttps
fwait
aad
and
jecxz
cmp
ja
sub
push
mov
lcall
pop
repnz
test
sti
push
int3
das
out
cli
fldt
mov
or
jae
stos
out
jge
xor
jno
mov
jb
out
mov
xchg
addr16
xor
in
stc
lds
xchg
les
mov
cmpsl
add
fbld
inc
jmp
enter
int
ret
rorl
subb
inc
fiadds
sbb
pop
ljmp
icebp
fnstcw
iret
xchg
jle
push
xlat
rclb
cmc
or
mov
int
std
inc
out
inc
xchg
fwait
pop
jbe
push
addr16
sub
repz
sarl
arpl
divl
lcall
ret
fcmove
jecxz
lret
ds
cld
jmp
sub
arpl
addl
out
fwait
ret
out
pop
cmpb
aad
mov
pop
and
mov
lds
cli
adc
push
out
jnp
cli
xlat
ljmp
fiaddl
aam
jb
loop
fwait
xor
lret
lea
cmp
jae
ja
fstpl
cmpsb
pop
xchg
and
sbb
add
lcall
push
cmpsb
xchg
and
jbe
pop
and
xor
scas
int3
push
xchg
jns
das
loop
xor
mov
push
xchg
lahf
cmc
mov
fwait
jmp
ds
dec
orl
rclb
xchg
std
aas
sti
jmp
repz
aam
mov
loop
bound
cmpsb
insl
sti
dec
sub
int3
sub
movsl
add
jmp
xchg
fwait
adcl
cmc
cld
ja
inc
ret
jbe
std
int
stos
out
ljmp
pop
ja
mov
fdivrl
inc
mov
out
aad
daa
jg
loope
pop
repz
lret
xlat
aad
mov
fstpl
into
int3
dec
dec
orl
and
mov
adc
inc
sahf
sbb
outsl
fadd
enter
test
stos
fdivr
xlat
mov
out
aad
xchg
and
jmp
pop
cmp
push
xchg
test
loope
arpl
jnp
xchg
out
xchg
pop
movb
out
testb
pushf
mov
pop
in
into
insl
fisubs
ss
shrl
jecxz
enter
jb
inc
jnp
xchg
fiadds
cs
lds
bound
loopne
dec
out
mov
test
push
or
push
iret
xlat
loope
fbstp
push
mov
cli
ljmp
cli
int3
push
dec
add
mov
in
lahf
adc
cmpsb
imul
xchg
ds
in
xchg
sar
and
lretw
mov
sub
filds
mov
cli
les
roll
cltd
jbe
xchg
cs
jg
mov
out
or
test
lea
ret
and
pop
sahf
gs
callw
std
popf
test
repnz
xchg
fstpl
dec
xchg
mov
sub
roll
mov
test
pop
repnz
fmulp
add
lret
jg
mov
mul
dec
ja
cmc
xchg
cmpsl
into
out
push
repnz
out
pop
push
pop
jbe
and
fisttpl
outsl
add
sub
sarl
subl
ds
xchg
jnp
syscall
push
xchg
enter
in
daa
or
xlat
xor
aaa
or
loop
stc
mov
enter
inc
pop
iret
mov
aaa
add
iret
mov
dec
jg
mov
jecxz
mov
add
repnz
jbe
pop
push
jecxz
sbb
xchg
jle
hlt
fs
aad
cmpsl
add
lcall
jmp
push
addr16
sub
cmpsl
std
pop
cli
out
fwait
mov
loop
ror
sti
data16
ror
adc
push
mov
xchg
call
cmc
bound
fdivl
ljmp
int3
mov
lods
lahf
sbb
std
sbb
mov
dec
stos
xchg
jmp
lahf
aad
and
divb
ds
xchg
pop
test
dec
push
lea
push
inc
rcr
notb
cmp
dec
push
loope
push
fwait
cli
cli
ret
in
xchg
push
xchg
ja
mov
inc
daa
cli
xchg
jmp
xchg
data16
fstps
jmp
ss
sarl
xor
out
and
inc
mov
xchg
mov
jmp
lea
push
adc
into
inc
cmpsb
out
push
xchg
test
cmp
fcmovnb
iret
test
enter
sbbb
inc
ljmp
aad
sbbl
add
movsl
std
pushf
jmp
cmp
jp
push
in
aad
rcr
js
stos
dec
mov
push
addl
add
cmp
cwtl
stos
out
jo
mov
into
orb
push
out
lea
repnz
jno
stos
in
cmpsl
imul
add
ljmp
int
mov
cmp
xchg
pop
push
pop
add
iret
loop
inc
mov
loop
sbb
push
cmpsl
inc
loop
aaa
mulb
xchg
fsts
jecxz
jb
sub
mov
out
mov
and
jbe
xchg
push
mov
fldt
loop
jecxz
dec
test
addr16
lods
arpl
jle
jo
std
rcrl
cmc
inc
sub
or
pop
mov
xchg
xchg
mov
sub
mov
loope
dec
push
cmpsl
mov
out
dec
outsb
xlat
mov
push
mov
ficompl
mov
rcpps
push
xchg
imul
jmp
sbb
sti
nop
int3
pop
xchg
inc
mov
pop
xchg
cmpsl
fwait
xchg
sahf
pop
cmpsb
pop
bound
pop
fiadds
mov
data16
xchg
vmovhps
push
fistl
out
mov
loop
frstor
lret
mov
imul
jbe
jne
sub
adc
fistpl
xchg
dec
fwait
inc
adc
mov
inc
sti
movsb
xchg
lods
jae
stos
movsl
ljmp
or
mov
mov
or
int
adc
arpl
aad
push
fwait
mov
jmp
out
mov
mov
cli
fbld
inc
jmp
jno
daa
movsl
xchg
ret
data16
cli
push
pop
cltd
dec
test
push
inc
fsubr
in
mov
lret
mov
das
jg
jae
xlat
lcall
popf
xchg
fmull
aas
faddl
out
push
mov
iret
rclb
sbb
inc
mov
or
pop
inc
imul
mull
jae
mov
add
dec
out
cmpsl
fsts
stos
dec
lcall
icebp
mov
pop
inc
jae
dec
adc
sbb
popf
sti
test
or
shl
iret
and
jmp
repnz
or
jg
movsl
cmpl
aaa
push
movsl
mov
lahf
xchg
fnstsw
jecxz
mov
sti
mov
sub
push
icebp
sub
xchg
pushl
stos
dec
sti
mov
stos
or
jae
mov
mov
rol
fucomp
pop
pop
mov
jmp
adc
mov
pop
fisttpll
dec
jb
cmpl
lds
dec
xchg
ds
dec
ret
xchg
pop
pushf
fcmovbe
imul
lea
sti
enter
repnz
jnp
ss
cli
in
lahf
xchg
mov
cmc
mov
mov
mov
mov
mov
call
xlat
popf
dec
dec
sbb
xchg
fsqrt
mov
rol
sub
ret
dec
inc
rcr
icebp
leave
mov
pop
jno
lcall
lds
inc
mov
fwait
dec
jns
mov
jmp
mov
pop
leave
xor
pop
stc
out
and
jbe
rorl
adc
iret
movsl
dec
lock
ror
std
inc
mov
lcall
repz
bound
mov
and
cltd
imul
test
nop
inc
ret
fistpl
mov
xor
dec
mov
cli
add
repz
ljmp
aad
repnz
repnz
stos
dec
push
aad
push
jg
cmp
les
ret
pop
mov
and
cmpsl
push
in
jmp
out
iret
xchg
rcrl
push
inc
rcrl
ljmp
sti
imul
mov
jmp
pop
int3
cli
mov
out
xchg
lret
pop
jmp
sbb
pop
fildll
lahf
jae
outsb
jnp
ret
loop
mov
loop
insl
rcrl
out
shrl
mov
inc
jmp
xchg
shl
jg
orl
sbb
fwait
cs
sbb
or
sbb
mov
int3
data16
lret
xchg
ss
or
fildll
push
and
add
xchg
mov
add
jnp
and
mulb
and
jle
mov
inc
cli
imul
orl
jb
push
add
pop
fldpi
inc
cmpsb
add
lret
pop
addr16
adc
add
ret
lods
and
test
loope
pop
push
stc
cli
scas
mov
stc
cmc
fwait
and
fstpl
in
mov
jg
push
inc
xchg
fucom
lahf
fcomi
sbb
mov
test
repz
out
push
mov
out
dec
mov
aad
cmp
cmp
xchg
or
cltd
push
int3
push
insb
gs
cmpsl
ret
shl
stos
mov
pop
cmp
lret
push
shrl
pop
mov
mov
inc
imul
fstl
pop
out
faddl
inc
adc
mov
fsts
cltd
dec
loop
push
rcl
psllq
xchg
ret
and
divl
pushf
jp
ljmp
push
loopne
push
rcrl
lahf
shrl
adc
out
fisttps
push
jg
addb
jle
push
fnstsw
jnp
push
sbb
out
fs
test
into
repz
jmp
popf
sub
ja
push
ret
stos
dec
ret
and
pop
jnp
lds
les
inc
es
repnz
and
ljmp
lea
push
lret
jno
jle
daa
adcl
and
das
xchg
dec
out
pusha
popf
aad
test
loop
js
cmp
adc
mov
sbb
mov
bound
out
imul
sub
fsts
push
or
aad
jp
sub
dec
mull
adc
shll
push
fldl
ljmp
fwait
pop
cli
cltd
push
insl
xchg
loop
repz
lcall
out
xchg
jp
adcl
jbe
repz
jo
jne
inc
mov
adcl
mov
xor
std
fwait
cmc
add
jmp
xlat
arpl
sub
jno
test
mov
dec
ss
push
cmpb
push
mov
add
mov
cmc
scas
jp
xchg
test
ja
inc
aam
inc
xchg
push
add
jp
int3
jae
dec
xor
mov
adc
mov
mov
popa
xchg
jle
dec
pop
movsl
test
iret
fucomi
lods
pop
lea
or
jbe
push
pop
lahf
subl
and
rcl
cltd
xchg
pop
pop
mov
stos
and
xchg
jbe
lahf
fisttpll
imul
pop
xchg
aad
out
push
push
xchg
into
cli
push
push
test
frstor
js,pt
dec
jbe
adc
sub
push
mov
ret
outsb
jb
inc
dec
ficompl
roll
sbb
mov
fistpl
sbb
inc
sbb
out
shll
fstps
loope
icebp
fstp
cli
mov
fnstsw
inc
roll
jp
adc
pop
xchg
push
xor
push
dec
pop
sub
xchg
jle
jecxz
lahf
cmp
cwtl
bound
pop
sbb
cmp
loope
sub
nop
popf
and
fimuls
bound
mov
inc
push
add
mov
cmp
jae
fwait
mov
out
andb
xor
andb
adcb
sub
rol
into
jmp
movl
orb
mov
aad
in
ja
mov
adc
cmpsl
mov
repnz
pop
ret
mov
xor
jp
dec
sbb
mov
push
adc
fucom
popf
fildll
push
lcallw
sbb
adc
mov
jmp
pop
xchg
ja
and
cltd
xchg
mov
repz
sbb
sub
or
scas
push
xchg
repz
jg
xchg
in
push
mull
ret
ljmp
pop
repnz
fimuls
xchg
cmp
xchg
sbb
inc
es
iret
pop
repz
xchg
in
out
adc
sar
mov
les
repz
xchg
xchg
sbb
test
mov
xchg
pop
jne
stos
insl
mov
icebp
stos
pop
sti
sbb
pushf
pop
add
lahf
mov
lcall
xchg
jecxz
std
mov
push
stc
mov
sub
mov
sbb
xchg
out
js
fistpl
mov
out
pushf
push
push
pushf
movsl
jl
jecxz
jmp
aad
sub
fcmovnu
shll
sahf
xor
pushf
movb
mov
pop
mov
jns
cmpsl
mov
push
sub
repz
jle
mov
data16
shl
mov
out
or
jle
pop
lahf
lods
mov
loope
rcrb
scas
std
xchg
mov
xchg
pop
sub
fcom
movsb
mov
aad
add
iret
gs
sbb
cmp
and
test
outsl
push
mov
insl
mov
movsl
enter
jmp
mov
idiv
aad
aad
test
ret
mov
cs
das
inc
xchg
inc
ficoms
imul
xchg
das
aad
sub
adc
lahf
jecxz
mov
fcmovnbe
test
shr
mov
and
insl
in
mov
mov
fnstsw
jmp
int
ret
repz
mov
out
ljmp
jg
test
aad
fcmovne
mov
mov
or
fcom
inc
in
aaa
outsl
sti
arpl
repz
mov
aad
std
inc
sti
sbb
push
mov
addr16
scas
push
sub
pusha
aad
jb
mov
lea
sbb
pop
fiadds
out
orl
rcrl
fcmovnu
xchg
ret
stos
mov
mul
inc
mov
inc
std
repz
sti
aam
xor
mov
std
sbbl
xchg
inc
fwait
xchg
jnp
sbb
mov
mov
mov
cld
aad
cmc
lahf
xchg
mov
fcmovnu
mov
ss
stos
std
mov
stc
ljmp
sti
inc
lock
cmp
into
mov
xorl
mov
roll
pop
std
inc
fucompp
mov
jae
loop
pop
scas
bound
cmp
in
xchg
mov
out
mov
sarl
nop
insb
push
inc
mov
hlt
pop
mov
stos
mov
xchg
dec
cmc
in
push
sub
ret
rcll
movsl
pop
mov
sbb
xchg
mov
test
sub
mull
test
mov
aad
mov
mov
or
adcl
aad
stos
adc
add
mov
mov
xchg
jecxz
xor
out
popf
jecxz
fsubs
push
jge
shl
push
in
leave
movsl
jl
fnstsw
mov
cmp
ficoms
lahf
fidivs
jae
mov
xor
pmullw
int
das
or
fildl
out
jp
les
shll
push
jecxz,pt
xchg
out
mov
in
jnp
sub
shll
daa
inc
addl
int3
mov
ss
cmp
lret
mov
cmpl
fcmovb
mov
gs
lahf
stos
repnz
push
push
in
mov
lret
popf
and
fsubrl
stc
adc
inc
ljmp
mov
xchg
pop
sub
pop
stos
iret
neg
add
in
adc
jmp
mov
jecxz
aad
std
test
addr16
dec
xchg
pop
lret
xchg
jp
repz
sub
cmpsb
mov
xchg
ret
addr16
ret
cmp
push
mov
mov
inc
cmp
mov
loop
push
repnz
xchg
in
jbe
sub
fcompl
inc
dec
sbbl
jae
xchg
das
enter
lods
mov
in
orl
in
jmp
mov
xor
jmp
sti
iret
xchg
call
rorl
pop
pop
xbegin
jge
jle
mov
out
daa
sarl
xchg
fs
xchg
ja
lahf
cltd
fimuls
fists
fwait
scas
jecxz
xchg
sbb
pop
inc
add
pop
daa
sti
push
test
fwait
addl
adc
add
movsl
aad
out
fidivrl
pop
sbb
cmpsl
xchg
ss
cmpb
out
pop
mov
repnz
popf
pop
pop
xchg
inc
hlt
mov
fstl
xchg
jg
push
sahf
shr
cld
mov
imul
jecxz
adc
test
jmp
sub
cmc
aaa
sub
xchg
push
lret
lds
xchg
fwait
inc
push
lods
scas
dec
in
push
mov
cltd
data16
loop
inc
iret
and
lods
adc
push
fwait
movsl
leave
adc
push
cmpsb
mov
lods
push
mov
pop
jmp
fdivr
cli
int
xchg
lea
fildll
pop
cltd
push
out
out
xchg
inc
lret
es
mov
neg
lret
icebp
ret
hlt
pop
addr16
shr
lods
into
test
stos
pop
push
out
mov
lahf
cmpsl
std
xchg
fnstsw
inc
jb
call
data16
stc
fwait
lods
xchg
inc
or
jmp
mov
or
xchg
pop
mov
xchg
xor
arpl
inc
shl
mov
mov
jmp
pop
xchg
ret
ret
pop
movsl
sahf
inc
add
cmp
fcomip
sarb
pop
sti
dec
push
daa
mov
cmp
dec
cmpsl
jnp
aaa
jnp
pusha
mov
lret
push
cmp
mov
push
pop
sbb
mov
cmpsb
push
arpl
pushf
out
xor
movsl
cmpsl
es
insb
adc
pop
mov
movsl
mov
mov
xchg
and
jmp
movzbl
inc
add
es
mov
insl
or
add
ret
repz
cmc
mov
adc
pushf
add
popf
and
fninit
mov
insl
cmp
or
fsubrl
pop
sbb
cvtdq2ps
in
add
faddl
jmp
fnsave
std
add
rcr
jecxz
inc
lret
int
iret
lret
lods
mov
push
mov
inc
daa
xor
enter
xchg
mov
mov
ror
xchg
lods
mov
xor
fwait
imul
jmp
mov
int3
cmpsb
sbb
mov
xchg
outsb
lret
dec
jmp
jbe
nop
pop
iret
ret
stos
scas
push
test
mov
test
lahf
lret
ds
bound
jne
and
jmp
arpl
in
sub
insb
sti
mov
in
and
int3
popa
dec
pop
mov
inc
pop
aad
sbb
xchg
repz
movsl
add
loope
test
lods
scas
or
jmp
sbb
pop
fs
iret
jmp
fucomp
out
or
cmp
sub
fsubrl
pop
orl
in
stos
xchg
adc
mov
sub
sbb
or
push
xchg
inc
dec
fdivl
pop
stos
in
xchg
xchg
cli
out
sbb
lret
xchg
inc
sbb
fdivrl
push
xchg
sub
mov
adc
fidivrl
mov
adc
fdivl
pop
loop
ret
inc
add
inc
out
addl
and
jb
inc
loop
fistl
fldl
dec
in
inc
xchg
aas
inc
fcompl
pop
adcl
in
push
xchg
dec
push
fsubrl
insl
andl
in
arpl
fdivrl
jge
ja
cvtps2pi
into
and
scas
pop
cmp
sbb
daa
subl
and
and
cmp
cmp
ret
fadds
pop
scas
inc
es
in
xor
add
cmp
rorl
jno
cmp
pop
scas
inc
es
in
xor
add
xchg
out
lods
mov
pop
sbb
bound
mov
in
cmp
stos
out
mov
cmp
icebp
mov
shr
test
lods
sarl
imul
cmpb
mov
inc
out
lock
clc
sub
jb
rcrb
mov
mov
adc
mov
mov
daa
mov
into
push
add
ret
popa
subl
orl
subl
jle
jecxz
imul
pop
popa
add
gs
inc
mov
imul
dec
daa
push
mov
inc
push
mov
pop
pop
inc
add
daa
inc
mov
inc
repz
lret
mov
outsb
jg
pop
mov
push
jecxz
sbb
int3
inc
inc
push
jo
aad
pop
aas
hlt
push
je
inc
gs
xor
fistl
sbb
fistps
loope
sarl
xchg
lods
push
push
pushf
xchg
adc
sub
mov
ret
loop
pop
repz
mov
mov
movups
add
cmp
andl
jmp
stos
xchg
mov
mov
aad
pop
in
scas
push
push
inc
dec
pop
fcoml
in
xchg
and
push
inc
sbb
or
mov
mov
data16
adc
xor
imul
cs
dec
xchg
stos
xor
and
and
ss
push
int3
cmp
jp
and
in
push
xchg
and
ret
pop
and
xchg
inc
sub
fsubrl
out
adcl
stos
in
push
jmp
pop
xchg
lcall
lret
in
sbb
fidivrl
int3
add
dec
cmp
lcall
fcmovu
or
xor
or
mov
or
fdivl
ret
subl
pop
xchg
cmpb
out
addl
jl
push
xchg
mov
faddl
pop
ret
fs
jb
bound
fsubl
lcall
xchg
inc
push
adc
dec
out
adcl
push
xchg
push
inc
bound
pop
in
pop
and
mov
pop
ds
fiaddl
fdivl
dec
xchg
cmpsb
or
imul
dec
inc
mov
scas
adc
mov
cmp
in
mov
add
fdivl
pop
lcall
imul
out
andl
inc
test
dec
inc
cmpsb
fcoml
pop
stos
in
cmp
mov
movsb
inc
dec
jb
sbb
outsb
mov
out
scas
lods
cmc
xor
xchg
push
sub
mov
mov
fisttpll
lcall
inc
ds
data16
or
push
push
and
mov
xchg
sarl
jns
ja
mov
push
lret
mov
xchg
lret
dec
lcall
and
ficomps
mov
orl
mov
out
or
mov
mov
mov
mov
ret
cmp
repz
ret
lods
inc
stos
bound
rcrb
pusha
xchg
dec
lret
movsb
pop
jge
cmp
jle
mov
loopne
scas
pop
xor
inc
mov
pop
iret
lretw
xchg
pop
sbb
xchg
daa
push
sbb
out
mov
jecxz
jbe
fwait
jecxz
pop
mov
addr16
pop
sahf
cli
ja
jg
fisttpll
loopne
sub
push
pop
imul
push
rolb
push
push
stos
insb
xchg
cmp
mov
xlat
mov
inc
imul
xchg
push
xor
pusha
or
mov
cli
fnstsw
arpl
aaa
mov
jnp
andb
sub
xchg
cmp
dec
std
ret
fwait
mov
sbb
add
mov
inc
out
incl
dec
pop
jecxz
pop
cmpsb
ljmp
sub
push
mov
and
cmp
and
push
lret
pop
xchg
mov
xchg
push
xchg
scas
out
pushf
mov
addr16
paddd
pop
shlb
push
cwtl
or
addr16
into
dec
inc
xchg
lods
mov
dec
xor
mov
jp
imul
jmp
push
cmpsl
cmpb
pop
adc
addr16
adc
cmp
jp
xchg
inc
inc
testl
dec
mov
dec
jmp
out
aas
jecxz
jb
inc
dec
call
inc
mov
push
cmp
popf
shll
mov
insl
mov
cmpsl
dec
repnz
adcl
sti
cmp
pusha
jae
dec
lods
sub
mov
mov
mov
iret
pop
cwtl
pop
stos
mov
iret
lcall
add
mov
mov
ret
push
dec
popf
mov
rcrb
andl
sbb
mov
xchg
or
pop
adc
xchg
xor
iret
jge
daa
add
fisubrl
push
aas
ljmp
jmp
jmp
mov
add
dec
daa
jecxz
sahf
pop
xchg
ja
iret
iret
mov
cmp
add
xor
mov
and
sar
push
adc
pop
fidivrl
repnz
pop
push
sbbl
adc
fiadds
cmpsb
ss
push
ja
xlat
test
push
mov
insb
shl
cmp
jecxz
sbb
mov
call
jne
lds
xchg
jecxz
lret
inc
call
cmpsb
lds
add
jbe
inc
mov
and
repz
and
adc
sbb
dec
arpl
xor
insb
fs
cwtl
jbe
hlt
pusha
fimull
adc
adc
inc
and
aas
ds
push
mov
mov
add
or
cmp
jb
test
stc
stos
flds
jecxz
fldt
add
sbb
cs
pop
mov
mov
jecxz
or
push
mov
mov
sub
xlat
or
push
lods
jo
sub
in
jne
repz
in
outsb
stc
and
sbb
or
cmpsb
mov
mov
dec
aad
incl
sub
ror
mov
push
cmp
inc
loop
not
ficompl
or
sti
lds
std
ja
fstpt
jae
jne
outsl
in
jno
or
pop
fadd
fsubrl
push
push
pop
fstl
inc
xchg
mov
sti
xchg
lods
out
pop
fistps
cmpsl
ret
data16
mov
ret
and
adcl
sti
cmpl
mov
push
fnclex
fstps
jmp
addr16
outsl
rcl
lock
fsubr
pop
push
xchg
les
sbb
inc
inc
mov
jl
fildll
adc
movb
add
mov
cltd
mov
jp
mov
mov
es
cli
lods
lcall
insl
push
add
xchg
fisttpl
sbb
out
or
in
icebp
push
fcmovnb
pop
mov
mov
dec
mov
stos
dec
xor
lcall
dec
adc
ljmp
in
lret
out
jge
jmp
in
jnp
or
sbb
inc
dec
xor
xchg
imul
repz
adc
ljmp
fwait
in
lret
sub
sti
xchg
xor
out
fucomi
mov
mov
dec
jb
mov
mov
push
ss
test
lea
dec
sahf
jmp
mov
push
fstpl
cli
mov
stos
push
inc
addr16
mov
addr16
adc
xlat
pop
dec
pop
mov
cmpsb
addr16
sbb
cmp
fstpl
or
mov
rorl
ret
xor
imulb
std
stos
data16
inc
addr16
sbb
pop
cli
mov
lret
ret
inc
cwtl
lret
inc
mov
ljmp
sbb
adc
or
jle
jnp
int
push
add
lret
push
cmp
movb
fwait
stos
xchg
mov
aaa
adc
dec
push
imul
add
fildl
xor
lods
push
inc
pushf
xor
in
xor
jg
repz
loope
xchg
cmpb
xlat
push
pushf
cmpsb
adc
push
sahf
pushl
je
int
pop
iret
fisttps
dec
imul
mov
xchg
hlt
and
scas
in
imul
daa
ret
dec
mov
loop
and
lock
mov
fcomip
icebp
and
sbb
pop
orb
lea
adc
jae
mov
dec
add
and
rolb
mov
stc
lods
pop
loop
mulb
jp
rcl
inc
dec
aaa
rorb
inc
dec
mov
fisttpl
das
fsubrs
movsl
ljmp
push
adc
loopne
pop
or
xor
outsl
cli
pop
loopne
mov
jb
dec
dec
or
sbb
push
add
sbb
sub
xlat
addr16
dec
arpl
mulb
popf
xchg
fucomp
cld
mov
cmpl
stos
mov
jnp
sbb
stos
xchg
mov
in
stos
popa
andl
mov
pop
cmp
mov
mov
pop
outsb
xchg
mov
sbb
mov
movsb
lahf
push
sub
or
sbb
jnp
ljmp
cli
add
leave
xchg
sub
mov
repnz
js
insb
div
dec
call
mov
push
jne
push
xchg
pop
fimuls
xor
cmp
cmp
dec
mov
cmpsl
repz
jl
pop
add
cmpsl
mov
test
mov
fs
test
dec
daa
sbb
mov
cmpsb
movsl
push
ret
and
lahf
mov
addr16
cmpsl
fcmovb
addr16
push
pushf
sub
add
prefetcht0
xchg
sbb
pop
loop
ss
add
sub
push
in
sbb
or
mov
cmp
aas
pop
daa
daa
movsb
das
push
xchg
sbb
inc
das
jg
xchg
xor
in
ficoml
mov
popf
movsb
enter
xchg
bound
xchg
cltd
in
xchg
lea
arpl
sub
pop
fcomip
popf
ljmp
ds
arpl
mov
inc
inc
loop
mov
aam
cmp
movsb
cs
cmp
leave
mov
adc
dec
imul
xchg
bound
int3
fwait
pop
arpl
mov
jecxz
fcompl
cmp
pop
inc
rol
fadd
inc
cmp
and
adc
fsubl
push
pop
pop
inc
loop
jmp
jg
pop
sub
add
sub
inc
in
psrlq
ret
lods
insl
xchg
loop
pushf
rorl
sub
cmp
fiadds
loope
xchg
sub
stc
insl
roll
repz
add
adc
push
movsl
pop
or
sar
dec
inc
adc
rcl
fwait
and
adc
inc
pop
jmp
adc
in
jecxz
fwait
sti
mov
sbbb
jecxz
and
mov
std
pushf
ja
pop
das
fst
mov
cmpsl
jecxz
shl
cwtl
enter
and
and
insl
and
and
sbb
ja
gs
jp
stos
or
arpl
out
repz
ret
aas
xchg
fisttps
mov
and
cmp
mull
ret
cmp
stc
or
push
mov
sbb
mov
mov
jbe
sub
push
xchg
es
es
imul
and
mov
nop
pop
push
and
mov
test
and
stos
rorl
xlat
andb
fisttps
insl
into
imul
mov
shrl
je
xor
rcll
fneni(8087
add
mov
xlat
das
cmp
sub
jecxz
cmp
push
xchg
pop
fisttpl
sbb
mov
adc
ret
not
cmpsl
xchg
pop
dec
subl
lret
ret
jmp
cld
pop
jo
and
out
xchg
cmp
jle
push
fninit
or
movsl
scas
outsl
sbb
xchg
nop
shll
cmc
pop
jo
add
por
cli
es
imul
mov
add
fsubrl
xor
mov
jle
jmp
in
mov
jmp
fucomi
sub
bound
add
std
fcmovnbe
or
insb
pop
stos
jae
inc
sbb
jmp
xchg
mov
add
aaa
out
inc
lea
mov
inc
aad
jmp
lds
cld
sub
sbb
loop
cmp
popf
push
test
aas
addl
popf
out
aaa
out
sbb
int
ds
sbb
pop
inc
mov
mov
sbb
in
ss
add
sbb
mov
pop
adc
cmp
jae
sbb
jnp
out
jecxz
lahf
xchg
sti
or
mov
hlt
xor
jmp
out
add
adc
xchg
xor
jle
rcll
add
loop
popf
rol
mov
inc
sub
shll
pop
fstl
push
outsl
ret
lret
pop
out
add
jmp
aam
mov
inc
jmp
mov
fistpl
rcrl
xor
in
rcll
pop
dec
adc
adc
pop
roll
ret
fsubs
jmp
or
ja
arpl
fwait
int
sub
popa
sub
bound
and
arpl
mov
mov
or
sub
iret
pop
fwait
cmpb
adc
push
sti
mov
xor
mov
mov
mov
push
adc
and
pop
push
movsb
fucomp
or
jae
scas
pop
cmc
pop
sbb
vmwrite
mov
sub
push
loopw
test
popf
or
sub
mov
test
arpl
xchg
lret
pop
pop
addr16
jae
push
xchg
out
mov
jae
pop
fcompl
cmpsl
lret
insb
mov
add
sti
mov
add
iret
fcomps
mov
mov
insb
decb
lods
lea
dec
cli
or
rorb
arpl
in
nopl
mov
adc
in
xor
sbb
addl
jnp
imull
dec
sbb
jno
adc
or
pop
jmp
adc
mov
add
mov
call
ja
sahf
lret
push
shlb
jae
pop
cmpsl
fldl
xlat
xchg
test
lds
or
testb
sbb
pop
test
sub
fisubrs
xlat
imul
mov
fadd
jge
jecxz
xchg
mov
rcrl
mov
mov
pop
or
xor
pop
subl
stos
xchg
mov
xchg
mov
andl
or
arpl
vpaddusw
cld
mov
ret
std
mov
add
adc
pop
out
push
movsl
xor
aaa
sbb
jl
adc
addr16
aas
jl
pop
xor
cwtl
adc
je
push
pop
pop
pop
out
pop
xor
fldenv
int
test
aad
push
sub
adc
mov
fstl
jnp
addb
insl
int3
rcrl
or
sub
and
add
rcl
mov
add
std
jmp
xor
adc
popa
mov
jb
jmp
pusha
test
jmp
dec
in
fcomps
rcrl
sbb
cltd
or
dec
jbe
pop
cld
rorb
jb
ret
mov
jl
xor
xchg
sbb
stc
pop
movsl
sub
repz
roll
cmp
or
dec
and
test
setno
add
daa
adc
sbb
add
orl
and
clc
bound
adcl
neg
mov
lcall
mov
aad
pushf
push
mov
mov
adc
shll
sub
mov
xor
mov
inc
shrl
jne
adc
cmpsb
pop
cltd
rcll
repz
mov
repz
rcll
cmp
loop
sbb
repz
or
out
dec
inc
aam
add
xchg
aas
xorl
sti
test
mov
adc
pop
fldl
outsl
jns
int3
pop
fistpl
dec
out
add
dec
sub
test
cmpsl
jmp
rorl
mov
xchg
sub
mov
jmp
xor
mov
bound
ret
int
jb
ja
adc
inc
loopne
fsubl
jmp
int
stos
inc
dec
adc
push
jnp
mov
mov
imul
push
imul
dec
jnp
mov
adc
lea
popa
in
mov
xchg
loope
mov
pop
sti
cmp
push
scas
es
mov
cli
fisttps
jl
out
sti
xlat
imul
inc
lods
out
push
imul
mov
mov
pop
cmp
add
jae
adc
loope
jne
lret
cmp
sub
adc
addl
imul
sbb
pop
stos
pop
stos
jae
repz
imul
ljmp
sbb
dec
dec
jno
aas
jnp
aaa
push
mov
inc
mov
nop
dec
shrb
ret
fwait
test
or
inc
das
sbb
jp
repz
cmp
inc
inc
adc
loopne
cli
iret
pop
inc
pop
pop
push
pop
repnz
inc
or
push
add
sub
addr16
ljmp
aaa
add
loope
enter
inc
jb
lods
dec
mov
icebp
int
push
inc
gs
inc
mov
xchg
mov
aas
inc
sbb
jno
or
xor
cltd
imul
rcrb
dec
lret
sub
setb
mov
jns
mov
push
out
int
lret
pop
dec
mov
orl
clc
dec
cmpsb
sub
add
lcall
loopne
adc
mov
adc
out
mov
clc
lahf
subl
pop
stos
and
icebp
stos
mov
out
add
scas
dec
mov
sbb
ficoms
ds
fwait
rorb
pop
andl
sbb
pop
jl
addl
shl
jge
imul
mov
gs
cmp
arpl
flds
pop
sbb
aaa
add
out
add
lahf
loop
outsb
sbb
pop
insb
mov
pop
pop
nop
fstpl
lret
imul
or
inc
adc
inc
cmp
icebp
ja
jmp
imul
fucomi
and
fstl
aas
mov
or
mov
popf
add
arpl
pop
cmp
push
inc
in
xchg
xchg
mov
mov
into
das
cmp
sub
and
add
dec
inc
sub
mov
idivl
add
and
int
ss
mov
cmpsl
inc
lcall
in
xor
popf
xor
loopne
rolb
stc
fistpl
std
test
xchg
stos
inc
xchg
faddl
jno
inc
dec
cmp
fcompl
out
cmpl
in
push
push
inc
pop
inc
fmull
mov
mov
xchg
ljmp
cmp
jae
imul
fdivl
pop
sti
subb
repnz
cmpsl
ret
add
aad
mov
add
fcmovnu
mov
shl
mov
fistpl
jecxz
in
loop
ret
push
mov
dec
add
imul
addr16
sti
imul
jge
loop
sti
pop
adc
inc
repz
mov
lret
int3
fistl
mov
enter
pop
in
out
test
cmpsl
jmp
mov
or
mov
in
pusha
inc
sti
sar
int
mov
leave
repz
cmp
jle
pop
fisttpl
or
mov
lret
lcall
test
mov
movsb
stos
jne
dec
pop
sahf
rclb
xor
ret
dec
ljmp
fnsave
xchg
dec
jno
pop
sub
outsb
or
lods
addr16
mov
cs
xlat
test
sub
xorl
cmp
fucom
dec
fwait
mov
pop
sub
in
xchg
out
fsubr
in
sub
sti
cmpl
testl
xrelease
cmp
cmp
in
cmp
pop
fdivl
out
gs
push
movsb
mov
fistl
lret
xlat
adc
jb
pusha
mov
lods
aad
and
jecxz
lahf
lret
dec
sar
std
push
in
mov
xchg
inc
xor
fisubrs
or
std
pop
repnz
mov
int3
and
sub
decb
lret
movsl
inc
sbb
and
inc
sub
pop
add
rcr
rcll
xor
bound
cmp
fidivrl
inc
in
inc
icebp
mov
jmp
pop
xchg
in
iret
xchg
shl
loop
lods
xchg
inc
out
out
and
xor
mov
sbb
sbb
in
or
jnp
std
out
sub
pop
in
sti
xchg
fistpll
addl
fwait
inc
andl
push
incb
sahf
push
jmp
mov
mov
adc
popf
mov
fwait
stos
mov
int
bound
add
ffree
pop
xchg
repz
int
in
sub
cmpsl
fstpt
inc
xor
dec
mov
xchg
push
sub
push
out
xchg
ret
out
pop
mov
mov
pop
fsubrl
out
orl
inc
es
cmpsl
fsubl
popa
subl
xchg
inc
inc
pop
fcompl
out
xchg
rol
negl
in
dec
xchg
inc
aaa
neg
lock
subl
xlat
aam
xchg
scas
inc
dec
jne
pop
out
sbb
mov
inc
xchg
inc
add
dec
into
mov
andl
enter
and
or
imul
mov
int
push
aaa
mov
ret
jbe
movl
add
jmp
ret
xchg
pop
int
mov
xchg
mov
mov
dec
xchg
mov
dec
cli
jg
mov
inc
sbb
ljmp
xchg
xchg
xchg
push
add
or
rorl
clc
fisttpll
test
mov
mov
xchg
aad
jne
loop
ds
add
dec
dec
imul
jae
imul
push
xchg
ljmp
jb
int
jmp
lds
inc
cmc
ret
into
dec
ficomps
in
fistpl
cmp
add
mov
shr
sub
xchg
roll
mov
inc
out
cmp
and
mov
and
push
cmpsl
insl
xchg
fstl
adc
xor
movsl
out
orl
aam
lret
mov
fcmovnu
mov
xor
les
pop
jmp
dec
shrl
lret
fisttpl
ret
mov
stc
into
mov
dec
jp
push
sub
movsb
sub
hlt
sbb
test
into
rcll
sbb
lret
pusha
in
leave
iret
nop
out
or
mov
inc
adc
out
test
mov
jle
aad
pop
icebp
cmp
sub
ds
or
sbb
pop
inc
mov
lret
lcall
mov
or
inc
or
lret
cmp
cmp
das
xchg
insl
dec
lret
mov
pop
or
popf
xchg
lret
ret
inc
fwait
jmp
xchg
mov
mov
or
dec
sbb
lret
or
aaa
in
inc
add
iret
jle
mov
or
mov
aad
loope
and
pop
lret
pop
push
jnp
add
movsl
mov
mov
fsubr
out
out
xor
jle
mov
shlb
ja
jp
test
cmp
add
xorl
pop
clc
loopne
xlat
or
and
inc
ret
int
cmp
mov
lds
cmp
add
movntq
push
jnp
loope
insb
sub
push
mov
inc
daa
stc
rcll
dec
jle
sbb
mov
mov
mov
inc
aaa
add
loop
pop
add
inc
sub
ret
push
cwtl
add
xchg
lret
push
jns
push
inc
scas
loop
scas
lcall
int
mov
cmp
nop
cmp
add
out
lods
and
adc
ds
mov
mov
cmp
gs
dec
das
lods
imul
pusha
lret
push
xchg
aam
scas
out
in
cmp
or
sbb
push
adcl
lret
xor
add
xor
push
gs
or
lret
mov
enter
int3
mov
ss
aaa
or
xchg
mov
fsubrl
movb
lret
xor
mov
lods
sbb
mov
ds
rcrl
mov
sub
lret
cmpsl
push
pop
ljmp
dec
popa
jbe
dec
xchg
in
andb
lret
jge
jmp
test
xchg
int
mov
sbb
sarb
ret
orb
xor
out
out
add
ja
in
lret
mov
imul
sti
dec
pop
out
add
nop
mov
jae
lock
pop
ret
ret
je
jp
bound
mov
or
mov
repnz
lds
xchg
or
inc
or
add
loopne
loopne
jecxz
jnp
pop
stc
cli
pop
jecxz
lds
mov
mov
sub
clc
andnps
cmp
push
jb
and
int3
out
imul
insl
sub
pop
lds
mov
xchg
lds
xchg
push
jnp
insl
mov
stc
cli
js
lods
imul
call
lds
lds
jecxz
fcomi
xor
repz
das
mov
mov
repnz
jecxz
fucomi
int3
xchg
cmp
icebp
jmp
mov
cltd
dec
jmp
fisttpl
pop
sti
iret
add
cmc
fldt
sub
jmp
add
dec
loope
mov
into
out
fldenv
repz
andl
xchg
js
xlat
into
jmp
sbb
loope
or
call
imul
std
jns
lea
divl
pop
push
repz
dec
dec
xchg
sbb
mov
jmp
add
inc
lea
decb
insb
repz
dec
inc
popf
jnp
xchg
mov
pop
xlat
push
dec
iret
sbbl
pop
ljmp
pop
push
mov
xorl
fistpl
mov
and
test
paddsb
or
mov
rcr
pop
mov
repz
pop
filds
and
stos
psllq
iret
jmp
adc
int3
cmpsl
xchg
dec
mov
test
movsl
ret
sub
int
mov
sbb
gs
mov
add
lock
call
in
out
adc
jge
in
push
dec
pushf
imul
xchg
rcl
dec
in
orb
in
push
icebp
rcrb
sub
mov
mov
mov
ret
or
sub
test
push
lahf
fistpl
jmp
push
lods
inc
and
sub
shrl
stos
xchg
and
lock
ss
call
daa
les
rcrb
jnp
xlat
aaa
xor
das
dec
rclb
cs
repz
cltd
int
and
int
mov
or
inc
jae
in
in
mov
int
fwait
cmp
in
lds
in
or
iret
sbb
jmp
stos
dec
or
dec
sarb
aas
mov
aas
cltd
cmp
leave
or
or
jnp
sbb
pop
jle
sub
in
inc
iret
mov
daa
out
subl
push
and
cmp
and
in
cmp
fiaddl
int3
cmp
out
ljmp
mov
addr16
push
lods
sub
stos
fcmovnb
sarb
mov
mov
inc
lcall
mov
mov
sbb
cmp
out
push
dec
cli
in
xchg
push
dec
stos
in
aad
dec
pop
in
mov
or
add
jmp
in
das
xchg
dec
fdivrl
sbb
and
ficompl
in
mov
fsubrl
jmp
mov
sti
fdivr
out
xor
pop
in
cmc
xchg
in
lret
insl
jmp
in
ljmp
push
je
pop
push
cld
lods
xor
sub
sub
aam
sti
cmp
mov
sti
mov
mov
imul
pop
sub
dec
lret
icebp
ljmp
mov
push
or
pop
sub
or
rolb
lea
dec
das
dec
imul
icebp
ljmp
xchg
dec
int
cmp
stos
mov
dec
or
sti
pop
or
dec
sub
ret
xlat
scas
jmp
mov
pop
stos
das
dec
dec
es
or
sub
add
mov
ljmp
dec
dec
es
ljmp
fnstenv
dec
jmp
mov
ljmp
mov
or
vmovntpd
jl
rcrl
repnz
and
std
dec
sar
ffreep
in
stos
jmp
int
ret
mov
inc
adc
mov
mov
sub
adc
or
jmp
jmp
in
inc
mov
push
ffreep
jnp
jmp
inc
sti
ret
cmp
test
inc
cmc
ret
cmp
icebp
jmp
or
or
or
in
popf
dec
or
xchg
sbb
or
inc
sbb
stos
stos
ret
ret
sbb
rorl
cmpsl
adc
sub
fidivl
mov
lds
xchg
mov
push
fsubrp
inc
adc
pop
iret
cmpsb
jmp
imul
out
cltd
repz
mov
push
dec
push
inc
mov
sub
imul
xchg
dec
xlat
inc
dec
jnp
push
int3
xchg
lahf
jmp
insl
jmp
sub
addr16
dec
fimuls
xchg
lea
mov
dec
imul
jecxz
xor
sbbl
mov
mov
pop
lea
cmp
stos
jmp
inc
inc
mov
shlb
pop
inc
testb
repz
inc
test
jno
test
xchg
cmc
dec
stos
push
adcl
fcoms
aas
lea
push
jle
push
ljmp
fisttpll
sbb
cmp
xchg
fwait
pop
aad
rorb
jbe
and
push
enter
pop
arpl
inc
addr16
push
xor
gs
roll
xor
push
inc
icebp
jb
arpl
dec
pop
inc
sbb
addr16
inc
arpl
sub
push
sbb
xchg
add
inc
push
ficompl
repnz
and
pop
aas
xlat
imul
test
jb
gs
inc
mov
shrl
or
in
aad
sub
test
dec
test
mov
data16
xchg
mov
cltd
xchg
and
out
daa
push
daa
push
xrelease
and
cmpsb
push
cld
imul
pop
dec
add
mov
outsl
push
dec
xchg
call
gs
and
mov
mov
ret
mov
insl
inc
dec
movsb
fucom
add
dec
pop
in
pop
xchg
xchg
dec
inc
lret
xor
pop
sub
push
fisttpll
mov
ret
xor
fnstsw
fisubrl
xor
or
sti
inc
adc
mov
fldt
sti
ret
aad
imul
xor
mov
xor
rcr
icebp
out
fwait
sti
add
jns
sbb
xchg
roll
mov
mov
mov
int
int
pop
ret
mov
ret
jmp
dec
lret
in
flds
dec
xor
inc
adc
pop
or
ret
add
mov
xor
ret
insl
cmp
sub
ret
dec
fmul
repz
jmp
xchg
sub
xor
jae
jecxz
mov
add
pop
in
lret
xchg
orl
fsubs
cmp
jmp
xor
int
cs
enter
cld
std
mov
iret
movl
icebp
int
mov
dec
mov
fadd
fisttpll
dec
cmp
imul
cld
loopne
fstl
ljmp
mov
sarl
int
pop
int
cmp
out
in
enter
ljmp
mov
xor
mov
mov
shl
fwait
mov
mov
in
xchg
inc
push
rcr
dec
enter
and
aad
ret
je
pop
dec
lcall
rcl
jmp
fcmovnu
xchg
pusha
fstpt
fsub
sbb
int
sub
fiaddl
aad
fwait
xor
fwait
cs
fwait
and
cmp
insl
rcl
cmp
mov
mov
push
test
cmp
jecxz
mov
popf
jecxz
push
addr16
push
push
fiaddl
ja
loopne
imul
and
inc
cmp
and
add
rclb
lea
pusha
in
int
inc
cmpsl
mov
jp
mov
lret
je
lea
cmp
aas
int
sub
int
test
cmp
mov
jmp
insl
and
push
sbb
in
stos
sub
sub
dec
inc
stos
xor
insb
jmp
push
sarb
fucomi
fcoms
aam
vpand
dec
aas
mov
lret
stos
xchg
stos
stos
jmp
cmp
int3
cwtl
and
je
mov
fcompl
es
fwait
cld
nop
jge
fstpt
pusha
fldcw
sbb
xchg
push
in
jno
xchg
fldcw
mov
call
jecxz
inc
jmp
mov
shrb
rorb
sbb
push
fwait
out
into
ret
cmp
jecxz
imul
cmp
push
mov
jecxz
inc
jecxz
ret
loop
inc
sub
iret
ret
addr16
sbb
dec
movsl
pop
aaa
inc
cltd
fcmove
mov
lret
rcr
scas
jmp
shrl
and
sti
pop
stos
aaa
jecxz
repnz
shll
and
jbe
in
jo
in
sarl
shlb
pop
push
jnp
and
add
mov
les
stos
push
and
jnp
dec
ficomps
shrl
mov
mov
xor
stos
movsb
dec
cmp
mov
jnp
push
cs
ret
rcll
pop
shll
pop
daa
mov
push
jnp
in
push
jnp
ret
jnp
aas
pushl
lds
sbb
cmpsl
shlb
in
iret
subb
sub
adc
lods
pop
mov
iret
dec
shr
rorb
leave
mov
xchg
add
lret
sub
stos
leave
das
pop
ret
outsl
jle
pop
rolb
iret
push
sar
cli
fucomi
fld
jb
lea
int3
pop
cmp
lret
sub
xchg
pop
adc
sub
lods
daa
dec
sbb
xchg
pop
add
je
stc
pop
lea
pop
pop
stc
popf
pop
inc
insb
mov
or
push
into
jp
inc
pop
out
popf
out
mov
jns
orl
xchg
inc
int
jecxz
ret
rcrl
push
and
scas
pop
iret
ljmp
stc
rcl
movsl
divl
mov
xchg
mov
push
mov
out
and
iret
jnp
cwtl
insb
mov
and
rcll
xor
mov
lea
cmp
jg
rcl
mov
xor
aaa
andl
leave
roll
das
add
sub
cmp
pop
movb
ljmp
cmp
and
andl
mov
mov
cmpsl
roll
push
lds
insb
loope
mov
insb
sarl
outsl
push
sub
jg
int3
sbb
pop
cmpl
or
and
shrb
lret
rcl
sar
add
pop
notl
loop
jmp
movsb
jnp
inc
adc
fsts
pop
test
adc
iret
popa
ljmp
inc
negl
cltd
iret
loop
es
fstpt
mov
into
fsubl
pop
rcrl
rcrb
or
xchg
inc
add
popl
add
and
daa
jecxz
outsb
xor
or
jecxz
cltd
stos
sbb
insl
add
imul
xor
mov
sub
add
jp
repz
mov
mov
fwait
push
sub
push
jecxz
sub
fwait
mov
imul
xchg
iret
mov
pop
mov
shll
ficoml
je
inc
sbb
jecxz
sub
push
lahf
or
fdivrl
push
mov
repnz
add
popf
cmp
mov
bound
ja
lea
mov
mov
outsl
clc
sbb
cmc
sbb
in
pop
mov
sub
sbb
in
cmp
mov
das
pop
std
shll
fnstenv
scas
insl
lea
sub
and
cmp
mov
jns
mov
loop
cmp
sub
roll
cli
push
rcr
mov
imul
mov
lret
push
pop
mov
int
jmp
cwtl
jmp
or
sub
test
xor
mov
adc
push
ret
jg
push
insb
leave
loop
dec
stos
jge
in
mov
cmp
adc
ret
mov
add
xchg
dec
fcmovnb
push
fisttpl
icebp
xor
add
jmp
push
adc
add
and
fwait
rorl
fildl
sub
mov
cmpsl
mov
int
ret
pop
leave
ljmp
xor
mov
sbb
jmp
mov
inc
mov
pop
sbb
rol
push
in
lock
pop
movl
mov
inc
adc
add
jnp
push
in
cs
jmp
push
roll
mov
ljmp
or
test
jo
jmp
and
lock
xor
loope
stos
jbe
testl
inc
icebp
mov
cmpsl
sarl
popa
enter
mov
mov
fists
jmp
jmp
jmp
add
mov
aad
inc
rorl
lea
out
insb
stos
outsb
and
sub
jmp
rorl
punpckhdq
xor
sarl
shr
cmpsl
add
and
mov
mov
test
mov
sub
jle
sbbl
mov
sub
sub
xor
pop
jmp
and
in
ljmp
mov
jge
outsb
inc
sub
mov
mov
fnstsw
and
lods
xor
sti
and
loope
jns
mov
sti
jecxz
mov
repz
mov
fsubs
sti
sbb
inc
sti
mov
mov
js
adc
ljmp
mov
fwait
int
subb
pop
rcrb
test
mov
clc
adc
jge
cmpl
or
lods
cmp
fdivr
adc
mov
lods
aas
sti
adc
pushf
lods
xchg
adc
mov
imul
jne
leave
push
pop
dec
dec
aas
lods
inc
sti
ljmp
cmpsl
mov
jmp
shr
mov
into
rolb
scas
inc
xor
inc
mov
ss
jmp
mov
xor
arpl
sub
pop
sti
pop
inc
inc
adc
ss
cmp
inc
lock
or
jle
in
cmpsl
sahf
pop
mov
jl
stc
sti
add
out
subl
mov
xor
sbb
xlat
cs
imul
std
add
cmpb
cld
xlat
pop
mov
sti
pop
test
out
mov
mov
push
dec
push
push
andb
lock
stos
pop
repz
jne
push
mov
dec
lock
loope
mov
enter
ret
enter
enter
fsubs
jno
aad
lea
lds
jecxz
xor
repz
daa
repz
cltd
stos
sti
or
movsb
inc
lcall
shrl
enter
vmwrite
jg
repz
dec
mov
inc
xchg
orl
outsl
dec
call
inc
xlat
and
inc
fldl
inc
push
fidivl
inc
mov
jns
sbb
fucomip
aas
ret
popa
jns
sbb
jecxz
stos
test
inc
das
rcrl
add
fwait
inc
push
xor
jg
ljmp
sbb
imul
pop
push
out
mov
repz
cwtl
push
test
and
xlat
lret
fistl
popf
push
mov
sub
in
xlat
pop
fucomip
call
out
jnp
mov
lea
cmp
xlat
fmull
mov
mov
movl
or
xchg
dec
inc
cmpsl
rcll
mov
bswap
inc
dec
pop
fldl
cwtl
fiaddl
cld
jae
out
dec
ja
jp
add
inc
xchg
dec
fistpl
sub
jno
add
fdivrs
push
clc
test
imul
jle
lahf
mov
inc
int3
dec
ret
lret
mov
outsb
repz
mov
mov
repz
notl
and
in
sub
jecxz
dec
fst
or
adc
faddp
ret
sti
mov
cmpsb
rol
int
lds
xchg
cmp
pop
jmp
in
loop
fistl
repz
repz
fwait
cmp
jecxz
xchg
add
fwait
jmp
add
stos
jae
pop
pop
sbb
mov
push
enter
mov
inc
inc
cmpsb
test
jmp
add
inc
jno
ret
ljmp
in
fmull
sbb
je
jnp
cli
sbb
arpl
xchg
add
stos
pop
imul
push
imul
jmp
pop
outsb
jns
lret
jns,pt
cmp
rolb
cmp
pop
outsl
fstp
sub
and
jg
or
inc
push
in
mov
fistpl
mov
jecxz
ret
stos
pop
ret
repnz
sub
leave
add
mov
repz
aad
dec
xor
dec
jg
repnz
sub
sbbb
add
add
movsl
fwait
mov
xor
jae
bound
lea
add
popf
bnd
push
xrelease
push
xchg
shll
repnz
stc
repnz
stos
add
sub
jns
popf
push
sbb
or
dec
jmp
dec
adc
mov
inc
lahf
hlt
in
mov
pop
sub
fadd
rdtsc
cmp
je
aas
sbb
mov
fcomi
addl
add
fsubs
xchg
lea
mov
pushf
xor
jno
test
out
dec
gs
mov
xchg
in
leave
jl
icebp
dec
mov
insb
dec
fwait
dec
sbb
push
dec
mov
push
jle
repz
in
loop
inc
insl
int3
sahf
adc
and
repz
pop
mov
or
lods
iret
and
dec
sbb
mov
into
mov
push
ret
sbb
sub
popf
lock
repnz
in
cmpsb
xlat
in
call
call
adc
push
scas
movsl
int
inc
ret
or
mov
adc
jno
lret
add
mov
push
sbbl
push
es
ljmp
pop
xor
pop
sbb
jae
jns
pop
ret
mov
inc
push
xchg
sbb
fisubrl
imul
decb
push
shlb
mov
rorb
scas
add
inc
cld
mov
fidivs
jne
mov
mov
mov
adcl
jno
pop
outsl
or
jge
aam
dec
std
fsubrs
jae
sub
or
idivb
out
xor
test
inc
ret
dec
and
ret
pop
mov
sti
mov
and
and
shlb
add
and
lcall
mov
jge
or
add
repz
repz
dec
and
sub
jle
dec
daa
ret
push
mov
mov
push
xchg
mov
pop
addl
mov
fidivrl
cmovbe
mov
and
pop
jge
and
arpl
dec
or
cmp
push
arpl
addr16
and
lret
scas
stos
push
xchg
imul
mov
sub
push
enter
andl
mov
pop
mov
xor
addb
out
pushf
dec
pop
orb
rolb
inc
clc
andl
imul
xchg
lret
lret
rdtsc
mov
imul
in
addb
pop
sahf
xor
dec
into
mov
xor
stos
loop
pushf
loop
mov
sub
jnp
jo
idiv
insb
lods
fstpt
lcall
sbb
mov
jmp
into
aaa
inc
xor
mov
aas
ret
pop
pop
mov
cltd
mov
or
out
adc
sbb
jb
stos
xorb
xlat
sub
ret
mov
pop
jge
sub
in
aas
flds
int
mov
push
data16
jmp
repnz
fwait
dec
xor
in
fisttpl
pop
loopne
aam
shlb
orb
jle
cltd
mov
das
mov
add
out
jnp
jns
inc
mov
leave
add
ret
adc
pop
popa
cli
lret
and
aad
aaa
std
imul
es
mov
in
or
mov
fcoml
adc
lock
add
add
push
imul
mov
mov
sbb
mov
mov
dec
int3
fsts
sub
and
and
add
insl
loopne
out
out
dec
inc
in
div
mov
stos
add
push
testb
fisubrl
add
sti
inc
loop
add
and
mov
mov
sub
pop
xor
enter
fdivl
sbb
lea
nop
repnz
mov
cltd
inc
aas
or
outsl
pushf
addr16
add
dec
std
xlat
lcall
add
sbb
or
jb
fwait
inc
jnp
or
jae
testl
loop
pop
shrl
ret
jmp
cli
jne
sahf
cli
inc
fisttps
pop
ret
aam
jmp
sub
jne
addr16
mov
aas
push
jno
addr16
jecxz
push
pop
sub
cld
mov
lret
push
mov
mov
cld
jnp
sub
fidivl
lea
sub
pushf
sbb
sub
mov
ret
mov
out
jge
fistpl
add
sahf
sbb
dec
xchg
add
jg
cmp
inc
ljmp
int
lret
loopne
aad
stos
lret
ss
std
in
push
adc
fs
fsubrs
pop
add
dec
mov
das
mov
ljmp
mov
pop
dec
repz
aam
cmovge
adc
rol
insl
mov
sti
or
mov
lods
imul
shrl
mov
pop
sub
mov
or
or
lods
jge
test
jmp
iret
jmp
lcall
neg
sbb
testl
aaa
mov
fmuls
xchg
sub
cmp
stos
fldl
rcll
sub
jmp
repz
ljmp
pop
shr
out
jb
sbb
aaa
fisttpll
icebp
lcall
sti
ljmp
insl
cmp
shlb
cmc
jecxz
cmp
bnd
mov
out
push
fucomp
ret
inc
imul
push
xor
mov
mov
push
aam
bnd
pop
out
jg
or
push
lods
jnp
pop
ja
pop
sbb
call
sbb
xchg
jg
cli
mov
sbb
dec
xchg
fdivrl
test
dec
outsb
incl
dec
sub
xchg
jnp
call
jp
jae
add
sbb
aad
lret
pop
cmc
lret
xchg
insl
mov
daa
xchg
add
test
add
adc
out
jmp
xchg
mov
mov
shll
in
loop
xlat
cmc
mov
jns
fwait
shll
shl
jge
data16
or
mov
inc
pop
cmp
or
jl
xchg
movsl
mov
movb
adc
sub
jmp
hlt
add
icebp
add
xchg
mov
pop
xor
adc
push
push
les
enter
xor
ret
mov
shll
div
loop
mov
stos
loop
testb
das
ljmp
push
jb
out
repz
fsubp
xorl
dec
mov
jecxz
lcall
loope
push
cmp
negl
roll
out
cli
mov
push
das
stos
lahf
pop
iret
insl
pop
dec
mov
pop
jmp
in
insl
inc
or
mov
imul
xchg
dec
jg
xor
imul
rol
es
mov
cld
insl
es
lahf
push
pop
xchg
pop
jb
push
ret
xchg
cmp
mov
mov
out
orb
pop
fimull
push
scas
faddp
or
or
jb
jmp
push
push
xchg
and
out
out
stos
cli
out
sar
fwait
mov
and
imul
cmp
ljmp
mov
pop
cli
mov
imul
inc
outsb
mov
mov
popf
mov
push
ret
sbb
leave
cmp
ret
mov
iret
in
jecxz
jae
stos
inc
add
xor
xchg
or
lret
out
repz
in
out
test
push
iret
jmp
xlat
pop
loopne
and
imul
cwtl
or
imul
addr16
ljmp
adc
mov
push
jnp
loop
ljmp
xlat
shrl
insl
ret
cwtl
dec
je
fmuls
push
int
in
out
aad
push
in
fisubs
dec
aam
rclb
int3
push
adc
cmpsl
jbe
mov
insb
sti
arpl
push
cmpsl
loop
stc
shll
sbb
out
cmc
pop
insl
jae
cmp
jecxz
fwait
pop
or
idivb
pop
cmpsl
xor
sbb
imul
pop
lea
stos
lea
sbbb
jae
movl
cld
push
int
dec
mov
mov
in
mov
daa
aam
leave
push
bound
inc
lods
lret
mov
filds
orl
movl
mov
sbb
das
jle
sub
ljmp
dec
jp
repnz
std
addr16
xchg
cmpsb
xorw
inc
jl
enter
les
fildl
sbb
es
sbbl
cmp
hlt
jmp
enter
repz
push
sub
pushf
subl
push
inc
rcr
out
into
stos
jno
pop
dec
sub
arpl
pop
ret
mov
dec
out
inc
nop
ficompl
loop
lret
push
and
cmpsb
sbb
cld
pop
in
and
or
mov
add
sub
or
mov
push
fistpl
lcall
push
sbb
test
xchg
sbb
mov
daa
dec
push
out
mov
test
pop
outsl
xor
fwait
and
dec
mov
push
dec
mov
loop
unpckhps
jb
das
test
daa
into
outsl
pop
movl
mov
pop
dec
stos
ret
fldt
push
pop
repz
inc
jnp
fisttpll
aaa
in
inc
in
xchg
sar
test
or
popa
pop
jno
add
mov
jl
or
shll
loop
repnz
inc
xor
repz
lahf
fcomip
mov
ret
out
pop
lock
icebp
and
popf
mov
sub
subb
mov
insb
cmp
jle
push
sub
mov
aaa
xchg
xor
or
sbb
sub
fsubrp
pop
lock
icebp
add
fnstsw
xchg
add
dec
pop
mov
pop
shrb
cwtl
or
sbb
nopl
cmp
aaa
nop
repz
pop
out
adc
in
lock
shll
add
shrb
pop
pop
add
std
stos
xchg
lods
movsl
pop
inc
insb
jp
cmpsl
and
sub
mov
jne
and
movsl
adc
push
int3
negl
out
pop
or
sbb
loopne
jl
repz
test
fs
mov
pop
inc
lret
mov
mov
rcrb
inc
decl
mov
or
dec
sbb
mov
jmp
cmp
aaa
aam
in
mov
hlt
pop
cmc
imul
out
lcall
sarb
les
cwtl
shlb
xor
inc
mov
adcl
stos
lods
cmp
or
sbb
sub
cmp
or
sbb
sub
cmp
lods
daa
inc
and
cmp
aaa
sub
cs
cmpsl
xchg
hlt
pop
cmc
pop
out
fs
or
fldcw
push
add
inc
sub
mov
cmpb
sbb
sub
movsl
daa
cmp
mov
aaa
push
es
sbb
cli
shl
xor
sahf
push
shll
or
push
sbb
or
sbb
leave
mov
mov
inc
sbb
das
and
mov
mov
fiaddl
push
pop
cltd
cltd
daa
and
pop
sbb
mov
hlt
jno
add
lock
inc
lock
mov
inc
das
add
rorb
sub
lds
mov
sbb
sub
cmp
cmp
cmp
cmp
cmp
cmp
imul
popl
mov
sub
and
mov
mov
mov
add
sarb
dec
mov
inc
pop
in
lahf
daa
repz
pop
sub
xor
adc
pop
inc
and
orb
mov
mov
push
sarb
add
hlt
pop
cmc
jnp
jno
daa
lock
push
sbb
adc
lds
out
sbb
daa
sbb
cmp
cwtl
sbb
sub
ss
pop
sarl
sahf
hlt
sub
in
and
mov
xchg
mov
movsl
in
imul
add
pop
push
insb
adc
fdivs
xorl
mov
in
into
scas
sbb
fwait
inc
rcll
inc
int
lahf
mov
insb
mov
sub
dec
scas
shl
push
rorl
jb
add
pop
std
shrl
jl
test
lea
bound
leave
mov
mov
cld
dec
add
pop
xchg
mov
testb
sbb
cmp
adcb
sub
div
movsb
out
xor
mov
dec
and
adc
or
shlb
pop
scas
xorl
mov
outsl
dec
add
dec
fisubrl
mov
arpl
leave
cmpsl
daa
das
and
pop
test
pop
repz
test
aaa
shl
xchg
jae
movsl
jmp
adc
push
inc
add
mov
cmc
loop
xchg
mov
dec
and
jns
and
repnz
call
mov
dec
adc
pop
and
or
or
lds
pop
adc
xor
inc
mov
ret
stos
push
add
pushf
push
push
or
lods
daa
and
cmpsl
mov
cmp
cld
call
push
popf
mov
test
cs
out
movsl
add
or
ret
lahf
addr16
push
cmc
push
fisubs
pop
repz
inc
mov
subl
pop
cmp
ljmp
push
mov
push
jb
mov
or
lret
xchg
cltd
stos
pmuludq
pop
and
mov
iret
cmpsl
ja
lcall
test
xchg
mov
iret
int
mov
push
pop
fstl
leave
mov
lahf
pusha
out
sbb
sub
mov
mov
adc
in
inc
lock
sbb
sarl
repnz
dec
fbstp
sarb
jle
or
sub
sbb
and
mov
mov
orl
call
dec
movsb
push
and
pop
sub
xchg
push
pop
cmp
xor
mov
mov
mov
pop
mov
stos
sbb
jg
dec
les
pop
pop
push
xor
rclb
out
and
ret
test
pop
dec
cmp
cmp
ljmp
sub
lea
enter
imul
ret
mov
insl
out
cs
cmp
das
icebp
cli
lock
lock
cmp
test
adc
sub
and
jo,pn
or
pop
insb
adc
mov
iret
and
arpl
xor
inc
sbb
test
dec
outsb
xorl
test
dec
jmp
into
push
arpl
jge
fdivs
push
pop
or
out
dec
fidivs
in
hlt
dec
dec
data16
lcall
loope
mov
les
rcll
data16
dec
jbe
sbbl
or
shll
push
jl
or
sbb
sub
cmp
test
pop
test
shrl
adc
in
mov
cmpsb
test
dec
insb
data16
inc
movsl
sbb
out
fucompp
lds
pop
push
aam
ljmp
pushf
mov
icebp
mov
adc
roll
outsb
mov
mov
pop
in
fwait
es
mov
scas
cmp
jmp
into
fcompl
lock
icebp
xor
imul
out
scas
out
enter
lods
mov
test
dec
les
pop
or
adc
sub
xor
cmc
and
lock
push
arpl
iret
mov
mov
dec
scas
sub
inc
loopne
stos
mov
and
pop
cmp
inc
icebp
sbb
and
fdivp
into
push
shr
mov
cmp
movsl
add
nop
shll
cmpsl
mov
inc
sbb
adc
sub
xor
sub
mov
scas
sbb
xor
inc
jle
mov
call
xchg
xor
fstp
or
mov
gs
pop
iret
mov
lret
mov
pop
push
pop
sub
pushl
mov
cmc
aam
jle
pop
fisubrs
adc
data16
or
mov
pop
pop
insl
cmp
aaa
shlb
and
lods
xchg
hlt
test
out
lret
cmpsl
in
imul
sbb
sub
test
dec
or
test
dec
mov
add
and
loope
cltd
insb
mov
dec
or
sbb
add
into
repnz
hlt
lods
cmc
repnz
sub
shl
std
sbbl
cs
xor
js
aaa
roll
mov
add
orb
add
sub
mov
pop
jge
xor
mov
mov
jl
or
imul
popf
mov
add
shl
out
test
add
mov
sbbl
mov
scas
gs
pop
push
xor
fdivrl
cmp
and
mov
sub
fldenv
jmp
mov
push
mov
mov
pop
sbbl
loopne
vsubpd
dec
outsb
and
jne
lods
jge
adc
dec
mov
mov
out
in
push
dec
push
dec
fstpt
jae
movb
shrl
sub
and
cmp
mov
and
daa
cmp
jnp
and
mov
push
adc
push
sub
cmp
mov
out
sbbl
insb
pop
jl
gs
enter
in
scas
dec
add
pop
adc
mov
push
ss
aaa
cltd
dec
inc
fdivr
subb
sti
loop
stos
daa
aad
jg
pop
dec
mov
sbbl
imul
insb
pushw
push
decb
insb
xchg
xchg
repz
push
xchg
dec
jecxz
xor
movsl
daa
in
lods
pop
imul
aaa
ret
jne
aas
mov
mov
iret
jns
das
pop
jle
out
fldl
adc
sub
mov
cmc
addl
adc
ljmp
sub
mov
and
mov
xchg
mov
pop
lcall
test
sarl
add
mov
xchg
idivl
jae
or
cmpsl
fwait
hlt
dec
cmc
sbb
mov
data16
cmp
xchg
inc
pop
and
mov
imul
mov
stos
lret
xchg
or
leave
add
mov
pop
and
fabs
mov
inc
add
int
xchg
jno
loopne
loop
inc
push
mov
mov
sar
loope
movsb
popf
inc
scas
cltd
mov
dec
into
subb
xchg
mov
scas
mov
cmpsb
xchg
pop
and
xchg
sti
lret
test
sahf
ficoms
cmc
fidivs
push
or
inc
pop
jae
pop
jl
or
sbb
lahf
daa
stos
xchg
mov
lahf
nop
xchg
jae
xchg
iret
aaa
sbb
adc
sub
enter
lcall
fwait
pushl
push
iret
cmpsl
out
dec
pushf
fsub
dec
repnz
xchg
sub
scas
jmp
es
push
and
lahf
mov
mov
call
or
jl
or
js
push
mov
dec
cli
add
xor
lods
aas
cmpsl
insl
sbbl
pop
pop
mov
aad
sti
push
pop
repnz
mov
orl
dec
pushf
cmp
cmc
and
loope
call
popf
int
and
jo
cmpl
and
sbb
sbbb
lret
enter
out
fdivrs
dec
fwait
mov
je
sbb
jg
fdiv
jl
stos
popa
cmpsl
daa
push
and
xor
jmp
pop
outsb
outsl
fxch
mov
call
push
push
shll
jmp
cmpsb
mov
xlat
mov
or
mov
jne
fcmovnu
repz
insb
inc
jl
fwait
mov
ret
mov
pop
lea
repz
pop
mov
or
daa
dec
push
inc
rcr
add
cmp
or
sbb
jbe
mov
mov
inc
lds
popa
arpl
cli
inc
cmp
or
mov
cmp
jge
jmp
inc
mov
xchg
rclb
or
dec
dec
mov
dec
lahf
in
mov
add
push
repnz
in
sahf
iret
jmp
stc
dec
inc
fsubrs
cmpsb
out
hlt
xor
or
mov
cmpsb
sar
aaa
repz
mov
jp
sbb
push
fistpll
pop
ljmp
mov
subl
call
stos
outsl
out
mov
ljmp
rep
hlt
pop
cmc
rol
fadds
test
pop
cli
jg
xor
mov
leave
fnstsw
fidivl
jns
sub
stos
ljmp
inc
daa
mov
mov
xor
xor
xor
sahf
jg
cltd
cmc
cmpsl
out
dec
out
push
lock
icebp
adc
fiadds
stos
sub
and
xor
lahf
cli
xor
jp
jb
repnz
push
adc
pop
cltd
xorl
stos
mov
sub
xchg
iret
fwait
mov
pop
dec
sub
mov
addl
push
sub
lahf
xlat
mov
scas
fsubrp
jmp
das
fisubrl
daa
xorb
mov
sti
sarb
mov
iret
push
mov
pop
call
mov
add
enter
xchg
pop
xor
shl
sub
in
push
jae
in
pop
dec
pop
pop
pop
jl
or
sbb
lods
cmp
jg
lahf
add
or
outsl
inc
xchg
mov
push
idivl
xchg
mov
jmp
mov
rcrl
mov
and
mov
xchg
jmp
out
mov
add
pop
xchg
or
cmpsl
ljmp
jmp
dec
push
mov
shl
xchg
call
sarl
iret
mov
repz
scas
lret
inc
dec
or
sub
jp
cmc
dec
mov
insb
add
pop
mov
cli
sub
inc
call
dec
xchg
jae
or
cmp
and
sub
and
cmp
call
mov
dec
movsl
inc
pop
pop
insb
push
xchg
shll
bound
fdivl
into
add
cmp
cmp
fldl
into
mov
push
jmp
imul
pop
aam
dec
sub
mov
push
mov
ret
mov
stos
add
das
in
repnz
icebp
jb
ss
pop
data16
shlb
mov
pop
cmpsl
cmp
addr16
pop
fnstenv
dec
or
jp
mov
mov
cmp
lods
fbld
fmull
push
or
fstl
fildl
les
pop
subl
out
cmp
pop
arpl
jae
or
addr16
test
or
mov
and
xor
rol
push
call
pop
inc
subb
cmpl
jmp
xchg
pop
mov
mov
sbb
into
nop
repz
xor
inc
jle
cmpsl
in
jnp
pop
push
retw
pop
cmp
mov
cmp
jmp
pop
sbb
adc
mov
sub
fidivs
fnstenv
xchg
push
scas
daa
stos
push
inc
addr16
fnstcw
cmp
jp
ret
loop
rcrl
lods
mov
dec
mov
adc
mov
fidivrs
out
dec
hlt
pop
mov
movsl
scas
pop
lahf
inc
arpl
xchg
inc
sbb
cmp
and
add
enter
andb
or
repnz
pusha
out
add
sub
leave
mov
jg
inc
dec
stos
dec
or
mov
inc
sub
push
es
fwait
daa
cltd
pop
push
dec
cmp
call
mov
out
sub
loop
incb
lret
pop
jne
mov
loop
cli
push
repnz
mov
repz
sbb
adc
sub
and
mov
xchg
push
sub
sub
sbb
mov
sub
and
cmpsb
xchg
das
das
out
xchg
repz
movsl
mov
or
shr
mov
push
int
pop
call
cmpsb
cmp
mov
fcomi
rorl
jne
mov
lock
fcomi
shr
jmp
jo
out
loope
dec
push
mov
call
add
data16
dec
dec
arpl
dec
mov
jg
mov
jb
sahf
out
jae
cmc
into
out
mov
sub
mov
mov
cmpb
mov
or
cmpsl
test
ds
jns
sub
mov
xchg
pop
ljmp
ljmp
scas
stos
inc
ljmp
rclb
adc
push
pop
or
mov
xchg
lds
mul
push
and
repz
hlt
mov
mov
addr16
das
cmp
enter
aaa
daa
jno
into
cmp
fnstenv
dec
push
inc
dec
mov
mov
fildll
add
stos
rclb
mov
mov
rol
ret
scas
push
lds
cmpsb
xchg
pop
div
mov
rorb
dec
mov
daa
ljmp
pop
cmpb
push
shrl
inc
xchg
push
pop
jo
push
or
inc
fstps
xchg
mov
movsl
gs
push
faddl
scas
jbe
pop
pop
shrl
and
rcrb
ljmp
mov
push
lcall
mov
or
loope
dec
mov
data16
pop
jmp
lock
and
repnz
faddp
int3
mov
xlat
ja
add
and
push
sub
or
sub
xor
xlat
mov
add
mov
lcall
inc
mov
inc
shrb
sbb
mov
xorl
testl
icebp
push
jae
and
imul
xlat
mov
divb
iret
aas
push
lret
and
push
hlt
faddl
int3
mov
cmp
icebp
mov
dec
ficoms
mov
add
add
add
sub
jmp
lock
cltd
icebp
mov
enter
dec
sub
jge
xchg
sbb
adc
xor
dec
loopne
out
xor
cwtl
repnz
loope
dec
jae
sub
push
sub
es
jmp
cmp
movsl
fucomp
out
sti
cmpsb
cmp
ret
fistps
adc
loopne
inc
pop
cmp
gs
xchg
insb
movsb
xchg
leave
scas
cmp
repz
loope
enter
cmp
push
arpl
fbld
orb
xchg
dec
decl
cmpsb
fnstenv
clc
dec
fwait
jbe
push
mov
test
stos
ret
cmp
push
ljmp
add
sub
frstor
push
imul
test
cmp
cltd
rcr
fcoml
push
ficoms
push
mov
pop
xchg
dec
idivb
pop
call
mov
inc
push
add
sub
jecxz
stc
sub
push
es
out
out
sbb
mov
mov
test
push
es
pop
icebp
mov
lock
lock
push
xor
xor
loop
ror
mov
loope
cmc
and
xor
xor
push
xor
pop
loop
loope
push
push
sbb
push
cmp
or
rolb
loop
les
out
push
sub
sbb
nopw
out
push
das
cmp
test
pop
jmp
frstor
fwait
sub
das
dec
das
aas
jge
aaa
mov
mov
addl
arpl
dec
push
fsubs
jb
mull
adc
scas
mov
repz
adcl
dec
shll
int3
insb
nop
js
mov
cltd
pushf
imulb
cmp
lods
aas
repnz
fadds
shl
mov
sbb
sub
popa
pop
les
adc
rcll
ret
stos
dec
rclb
fcoml
call
sub
pop
in
mov
sbb
scas
test
ficomps
fwait
push
push
cli
mov
mov
pop
mov
jle
loope
inc
push
idivl
adc
fisttpll
imul
arpl
hlt
fstl
ror
lds
filds
rclb
adc
sahf
iret
cwtl
mov
pop
pusha
dec
sub
mov
std
pop
xchg
enter
mov
push
push
cmp
jbe
sbb
es
or
jae
dec
sub
jg
jmp
leave
lods
cmpsb
inc
push
jbe
mov
add
iret
lret
test
mov
mov
ret
shlb
cli
ja
enter
lcall
jae
icebp
mov
dec
lock
call
sub
jp
repnz
adc
xor
cmp
enter
fldt
cmp
aaa
jecxz
sti
push
repz
jnp
push
xchg
dec
ja
es
filds
add
sar
add
jg
dec
lea
push
push
int3
repnz
out
jge
pop
push
loopne
and
out
sub
add
fisttps
out
add
mov
or
xor
or
out
and
jne
into
or
repnz
call
inc
jl
lret
push
cmp
scas
xor
sub
ror
repnz
sub
stos
mov
fdivr
test
or
fimull
mov
mov
dec
or
mov
xchg
sbb
adc
pop
mov
jno
lcall
pop
fistl
loop
ds
std
push
push
fmul
xchg
out
cmp
push
icebp
mov
test
dec
xchg
data16
inc
pop
push
jmp
sti
insl
adc
icebp
mov
cwtl
icebp
jg
jmp
push
sub
xchg
mov
aaa
stos
xchg
pop
xor
out
sub
ljmp
fdiv
jp
dec
and
mov
pop
fldl
loop
fiadds
pop
sahf
addl
outsb
pop
fwait
andl
push
cmp
xchg
shrb
call
and
test
pop
pusha
scas
stos
out
and
adc
rolb
shlb
pop
xchg
push
rorb
add
test
loop
push
fstpl
jne
push
mov
xchg
xchg
jecxz
orl
xchg
adc
sub
ja
enter
sub
jnp
jbe
dec
dec
push
mov
mov
add
sbb
adc
sub
and
cmp
xor
lret
ficompl
jmp
ljmp
mov
subb
rcll
test
lahf
pop
mov
mov
movzwl
sahf
call
repz
mov
shl
call
rclb
leave
cmp
mov
jne
push
arpl
mov
test
jp
sbb
iret
inc
orl
mov
pop
repnz
into
sti
in
push
dec
sahf
mov
ljmp
sbb
mov
add
push
lods
jnp
daa
inc
jne
mov
dec
dec
into
jb
cmp
iret
mov
negb
enter
add
in
sbb
xchg
or
mov
mov
push
dec
scas
popf
mov
mov
outsb
daa
xchg
mov
aaa
fnsave
cmp
inc
ja
fldenv
cmp
cmp
mov
xchg
pop
sub
cmpsl
cmp
es
push
ficompl
sub
ret
mov
mov
xchg
lcall
xlat
or
adc
and
loope
dec
mov
sub
sarb
push
push
loop
outsl
dec
rorl
pop
jmp
and
es
icebp
adc
xorl
ret
xchg
push
fadd
fmull
push
or
mov
xchg
testb
or
sbb
cmpsl
daa
aas
dec
dec
lret
test
mov
or
dec
das
iret
xchg
pop
xchg
or
mov
jg
add
scas
loope
mov
cwtl
out
push
out
insb
ret
in
mov
js
sub
pop
add
bound
jp
outsl
out
and
mov
cmp
mov
fisubrs
cmpsl
stos
out
inc
rorl
shll
cmp
pushf
ret
testl
lcall
pop
arpl
insb
orb
mov
mov
inc
movsl
pop
lahf
xor
test
rcrl
inc
ljmp
jecxz
sub
shrb
push
or
dec
orl
arpl
rorl
pop
xchg
pop
icebp
iret
mov
sti
test
or
out
xor
push
push
sub
cmp
lahf
in
mov
loope
sub
mov
dec
cmpsl
sub
shll
xchg
xor
mov
lods
mov
inc
inc
dec
add
data16
mov
cs
add
xchg
and
dec
cmpsl
inc
and
arpl
out
lcall
dec
dec
adcb
xchg
inc
int
jecxz
addl
cli
adc
jmp
inc
and
repz
push
push
iret
fcomps
andl
cmp
inc
dec
andl
sub
popf
lret
orb
mov
test
aad
ja
decb
lret
sub
das
movsb
das
scas
das
pop
push
adc
sti
loope
jbe
jl
add
add
lds
pop
or
sub
inc
out
sub
mov
and
and
mov
mov
mov
sti
xchg
lret
jnp
pop
daa
imul
hlt
rcrl
mov
out
pop
pop
push
mov
mov
dec
xchg
push
adcb
sbb
pop
int3
mov
ljmp
mov
mov
movsl
inc
sbbb
mov
enter
leave
or
push
sbb
adc
lock
jne
daa
pop
dec
insb
outsb
xchg
fcmovne
decb
ret
ret
inc
stos
mov
mov
mov
pusha
adc
enter
sbb
add
add
stos
inc
jne
mov
dec
pop
mov
mov
lock
fwait
and
ror
pop
pop
add
mov
dec
cli
sub
test
out
mov
orl
mov
xor
inc
lock
dec
inc
daa
icebp
movsl
push
jnp
jno
dec
and
push
lea
pop
jg
xor
mov
data16
fxch
jge
arpl
xchg
mov
mov
adc
jmp
popa
ret
jg
or
cltd
add
mov
rsm
or
cmp
test
ss
sub
mov
xor
jle
ret
sbb
ret
popa
mov
outsb
ror
add
jle
cmp
xor
sbbl
cltd
enter
faddl
cmp
inc
loop,pt
and
shrl
fsubs
ret
decb
pextrw
mov
pop
sbb
or
add
pop
mov
rcl
xchg
popf
ret
andl
push
dec
mov
aaa
sub
movsl
mov
xchg
fstl
or
leave
pop
mov
stos
adc
xchg
dec
shlb
cli
mov
xchg
mov
test
add
mov
pop
pop
mov
ds
xor
add
jg
icebp
xor
add
pop
jp
pop
sbb
push
outsl
outsl
fs
jb
aas
inc
hlt
push
fwait
mov
or
addr16
mov
push
or
lcall
scas
fisttps
stos
pop
pop
mov
enter
jae
outsb
stos
std
out
dec
sbb
xchg
xchg
icebp
mov
aas
pop
fucomi
xchg
jb
stos
jmp
mov
fiadds
push
push
or
mov
or
scas
or
es
cmpsb
test
or
int3
cmp
jnp
add
setg
daa
ds
xor
data16
rep
call
mov
mov
out
cmp
push
movsb
ret
pop
in
mov
xchg
add
push
les
mov
iret
adc
fs
movsl
aaa
xlat
cmpsb
dec
subl
mov
test
hlt
lret
scas
add
mov
push
add
ret
insl
mov
lret
cld
mov
out
cmc
cmp
sbb
int
test
adc
lret
movsb
adc
sub
lret
pop
pop
push
shll
adc
add
psrlw
testb
pop
lcall
lods
cli
or
pop
mov
push
pop
push
mov
mov
push
addr16
test
mov
stos
inc
sahf
pop
inc
out
mov
dec
out
fwait
popl
cwtl
fidivs
leave
adc
jnp
sub
lock
mov
out
jb
mov
out
repnz
mov
pop
pop
loop
orb
outsl
cmpsl
fdivl
cmp
popf
jnp
mov
pop
dec
and
mov
dec
loope
arpl
xchg
test
mov
mov
lds
pop
dec
imul
scas
mov
mov
lcall
push
mov
cmpsl
mov
and
xor
stc
mov
test
scas
mov
into
pop
fcompl
sub
dec
or
mov
out
jb
pop
xchg
inc
xchg
data16
arpl
iret
test
iret
pop
jae
push
ja
xchg
jp
pop
jno
or
scas
iret
lret
push
dec
in
push
dec
pop
push
sbb
mov
cmp
fadd
sub
cli
adc
daa
clc
cli
mov
les
dec
aaa
loopne
pop
ret
shrl
jb
das
mov
add
pop
mov
mov
xchg
jp
jno
dec
fisubs
add
jae
push
ficoml
fisubrl
push
lods
and
repz
in
push
test
lcall
add
lret
and
es
mov
mov
xchg
pop
mov
dec
mov
xchg
sbb
insb
lret
scas
pop
xor
and
push
lods
mov
lret
movsl
jno
lcall
lds
mov
outsl
test
and
mov
out
out
mov
adc
inc
imul
adcl
lods
subl
xchg
leave
mov
call
les
enter
in
clc
mov
fstl
arpl
fnsave
or
mov
lahf
adc
push
sub
pop
push
dec
insl
into
pop
out
or
mov
or
push
dec
and
jmp
adc
mov
stos
adc
or
cmp
mov
xchg
out
sbb
insb
aaa
jp
mov
ss
mov
mov
dec
pop
jae
and
dec
movq
jbe
adc
iret
out
pop
ret
push
mov
mov
in
pop
mov
fwait
or
push
mov
ds
xchg
push
repz
hlt
repz
mov
sub
loop
fcomps
xor
xlat
push
pop
les
or
ret
mov
stc
loopne
imul
jns
daa
xor
push
mov
xchg
dec
sbb
cmpb
std
scas
idivb
outsl
push
mov
scas
fnstenv
and
pushf
ret
sbb
fsubrs
pop
insl
aaa
mov
cmp
xor
mov
arpl
mov
jg
test
lock
mov
imul
loop
xchg
inc
out
and
and
in
sub
ret
mov
mov
xchg
sub
mov
push
mov
mov
decl
shll
or
sti
movsl
call
daa
pop
mov
mov
jg
out
hlt
outsb
mov
push
mov
rorb
push
aaa
out
jb
repz
inc
cmpsl
pusha
push
dec
in
outsb
mov
xchg
adcl
cmp
dec
xchg
push
int
scas
lea
or
loopne
sbb
dec
stos
sbb
push
incl
or
xchg
pop
call
pop
repz
repz
inc
testb
fwait
pop
sbb
sahf
jg
mov
call
dec
shll
test
dec
add
pop
lods
sbb
mov
arpl
mov
cmp
dec
inc
push
subb
pop
fidivl
add
repz
mov
mov
mov
sub
jmp
sub
mov
repz
hlt
adc
mov
mov
loopne
mov
cmpsb
out
ss
pop
lock
mulb
sub
xchg
adc
mov
jg
int
inc
jmp
add
ljmp
xor
mov
inc
cmpsl
std
and
pop
stos
jecxz
and
sarl
fs
ljmp
adc
lds
mov
mov
shl
mov
push
rolb
push
das
ret
cmc
fwait
jmp
lock
outsl
test
cmp
sbb
sub
mov
addr16
adc
sub
jnp
or
outsl
aaa
and
push
push
push
push
stos
out
out
xchg
repnz
mov
dec
cmpsl
gs
xor
inc
mov
mov
dec
push
es
mov
pop
cmpsb
pop
arpl
fdivl
add
shl
fsubl
fisubs
push
pop
mov
sbb
dec
sahf
addr16
cmp
fucomip
jl
cmp
loop
arpl
insl
sbb
push
imul
mov
pop
in
push
jno
dec
ret
mov
incl
pop
xchg
popa
jge
out
lcall
rol
ljmpw
or
dec
add
or
mov
fsubrl
int
daa
std
pop
lods
shrl
sarl
dec
push
jl
dec
cli
mov
dec
or
pop
jbe
ret
jnp
lcall
ret
push
mov
test
shlb
fnsave
pushf
dec
outsb
dec
or
xchg
shl
jb
xor
mov
ret
xor
inc
push
pop
fucompp
sub
and
lods
xor
test
popa
inc
lcall
cmpsl
lods
mov
pop
fs
sti
sbb
leave
lahf
loope
fdivp
imul
ret
fistpll
jnp
cmp
cltd
fisubrl
stc
add
les
or
mov
repnz
mov
roll
push
mov
xor
dec
jmp
cmc
cmp
mov
outsl
ret
stos
repz
mov
inc
lea
mov
cmp
or
xor
pop
aaa
fstp
or
push
test
fnstsw
xchg
das
add
out
xchg
sarb
lock
mov
xchg
xor
push
mov
test
adc
pop
fidivrs
push
clc
add
orl
les
push
test
sbb
pop
jnp
mov
fwait
sarb
dec
sub
test
or
sbb
aas
in
pop
enter
mov
pop
scas
test
xor
fisubrl
cs
sbb
adc
fisubrs
jl
cltd
iret
pop
popf
pop
push
or
out
mov
mov
mov
lods
and
pop
and
dec
pop
pop
add
fstpl
fwait
mov
call
xor
scas
imull
pop
push
fldl
sub
dec
lret
add
stos
cmc
pop
xchg
xchg
enter
fldcw
xor
movsb
ret
sub
imul
dec
dec
add
call
shlb
jne
jmp
sub
imul
ljmp
xor
and
sub
fsubl
xor
xchg
or
out
or
ret
xchg
and
mov
data16
jmp
out
sbb
lds
mov
fadd
lds
adc
mov
cwtl
mov
pop
jnp
fwait
jb
mov
setno
mov
sbb
sub
sub
scas
scas
jmp
mov
cld
mov
movsl
inc
mov
inc
xlat
das
adc
add
jl
decb
in
pop
sbb
cmp
hlt
fcomi
sarl
mov
mov
les
outsl
js
ret
push
push
daa
pop
dec
xchg
mov
sti
out
cmp
inc
jnp
outsl
ds
stos
popf
xchg
cmpsl
mov
mov
lods
pop
sbb
scas
xlat
or
sbb
ffreep
scas
aad
stc
add
mov
or
xchg
test
mov
adc
mov
push
out
mov
rolb
pop
xchg
bound
mov
stos
jmp
dec
jle
xchg
es
je
js
sbb
xchg
insb
mov
pop
jecxz
movsl
jnp
and
icebp
addr16
xchg
imul
cld
pop
adc
dec
cmpsb
je
imul
inc
mov
push
pop
cmpsl
mov
lea
or
stos
int3
sti
out
jne
into
cwtl
inc
outsb
pop
mov
mov
push
and
das
iret
inc
aaa
pop
mov
cmpb
mov
call
mov
sahf
mov
ja
das
pop
jmp
cmpsl
repz
adc
push
xchg
jge
rol
out
xorl
or
inc
xchg
pop
pushw
cmp
outsl
std
pop
sub
cli
fs
fildll
fmull
stos
dec
cmc
mov
incb
bound
ret
rolb
push
pop
lahf
loop
outsb
repnz
mov
out
mov
xchg
shrl
fsubp
and
sub
push
stc
pop
mov
popa
cmc
sbb
and
orb
cltd
fnstsw
jae
jmp
cmpl
jnp
pop
enter
xchg
loope
outsb
lea
push
es
rorb
push
inc
fstpl
out
pop
ljmp
cmpsl
sarb
fiadds
cmp
outsl
mov
mov
orl
jae
test
shrl
push
mov
xchg
mov
in
cs
int3
jb
jmp
dec
sub
jns
iret
xor
dec
std
into
lods
push
dec
and
mov
iret
push
daa
into
aaa
pop
das
lret
loope
inc
cli
lcall
mov
sub
pop
cmpsb
dec
push
jae
mov
ljmp
sub
das
xchg
das
stos
push
mov
sti
inc
jnp
das
bound
rorl
sbb
lret
fldl2e
xor
jno
mov
jmp
jecxz
sti
cmp
xor
push
adc
cmp
add
mov
mov
test
loop
add
xchg
xor
xor
jg
outsb
mov
sbb
jmp
mov
xchg
xchg
in
sbb
ja
daa
or
xchg
mov
loopne
sub
sub
lock
nop
fxch
nop
dec
das
or
xchg
push
xchg
fmuls
cld
or
adc
addl
rclb
enter
push
jae
fildll
mov
and
icebp
add
std
xor
loope
push
arpl
aaa
fstpl
push
mov
adc
push
test
add
aaa
mov
daa
test
dec
push
xor
mov
push
dec
jb
or
das
leave
cmpsb
mov
aas
out
outsl
jle
loop
aas
scas
pop
cmc
sub
jno
frstor
shll
xchg
imul
clc
jmp
mov
mov
adc
test
inc
fucomi
repnz
mov
add
jle
mov
iret
or
je
adc
out
shl
jecxz
stc
inc
xchg
add
cmp
dec
icebp
es
cmpsl
adc
cmp
lcall
int3
mov
push
cltd
push
push
sbb
int
and
pop
scas
mov
sbb
pop
inc
add
mov
cmp
arpl
cmp
mov
lcall
adc
and
mov
sub
arpl
push
andl
jbe
xor
cmp
enter
sbb
pop
je
xchg
xor
xchg
daa
xchg
xor
and
ss
inc
cs
hlt
dec
xchg
inc
jg
ret
inc
sbb
pop
push
fwait
adc
adc
or
aaa
cmpl
mov
push
cmpsb
cmpsl
int3
pop
lcall
fsubl
sbb
jbe
rclb
iret
inc
add
mov
dec
sahf
rorl
shlb
xorb
ds
add
lahf
loop
cmpsb
fmuls
sub
fbstp
inc
repnz
popa
ret
xor
test
adc
popl
mov
xchg
push
ljmp
mov
push
nop
xchg
or
jns
call
sbb
fxch
test
or
mov
loopne
lods
cmpsb
push
das
adc
sbb
jecxz
loopne
fwait
lahf
rcrl
push
out
mov
lock
das
inc
sti
cld
popa
in
adc
pop
out
sub
shr
lret
mov
mov
inc
or
mov
add
inc
cmp
loop
sbb
xchg
xchg
pushf
insb
jmp
and
das
sbb
test
test
jns
movsl
mov
jb
lcall
inc
je
fwait
push
sub
jb
fldl
outsb
add
fisubrs
mov
push
dec
outsb
push
and
mov
sub
inc
or
xlat
add
mov
decl
test
iret
dec
mov
jne
xorb
pop
aas
out
pop
out
cmp
icebp
jg
fdivl
mov
scas
and
mov
clc
cmp
jns
inc
pop
dec
arpl
xchg
dec
int
xchg
stos
fisttpll
sbb
mov
test
mov
outsl
jbe
or
dec
mov
rolb
int
repz
popf
pop
sbb
cmp
mov
insb
adc
imul
xorl
xor
ljmp
add
push
pop
roll
jne
cs
xchg
shl
adc
or
scas
fld
push
mov
scas
push
hlt
or
adc
fcmove
lock
cmp
and
je
loopne
rcrb
and
loope
mov
sub
insb
pop
push
leave
aas
ret
mov
out
cmp
out
jge
pop
enter
hlt
xor
mov
es
loope
ret
roll
jnp
ret
pop
aaa
or
scas
inc
push
or
scas
loope
or
andl
arpl
fdivr
cmp
loope
mov
sub
push
mov
cmp
xchg
cmp
idivb
adcl
mov
push
xchg
roll
or
test
xor
das
and
fisubrl
cld
das
xchg
das
mov
push
dec
cmpsl
jmp
loopne
bound
lds
mov
out
out
push
dec
or
push
sahf
aas
jmp
jg
imul
add
shrl
or
es
cmp
sbb
popf
movsl
jns
leave
sbb
mov
sub
dec
insb
dec
xchg
sahf
mov
into
pop
lock
pop
mov
mov
orb
xlat
jmp
es
leave
stos
lds
dec
sub
and
mov
sbb
out
mov
adc
mov
arpl
stos
add
pop
xchg
or
inc
mov
rolb
xchg
rcll
fadd
jnp
pop
fucom
icebp
jnp
jno
inc
fistps
out
sbb
xchg
cmpl
movl
mov
pop
loop
loope
es
and
jp
mov
hlt
in
out
pop
lds
imul
scas
cmpsl
hlt
inc
out
xchg
sahf
jnp
push
pop
adcb
adcb
subl
mov
ja
lods
jecxz
das
push
out
repnz
addr16
aaa
das
outsl
cmpsb
dec
inc
cmp
roll
arpl
out
pop
dec
aas
sbb
movl
add
push
inc
dec
pop
adc
jg
popf
mov
out
xchg
ret
sbb
rolb
adc
push
roll
adc
test
out
or
and
sti
sbb
aaa
mov
inc
ret
xchg
popa
or
repnz
repz
hlt
mov
addr16
jns
and
dec
xor
mov
add
adc
mov
cmpsb
fsubr
push
fdivp
cmp
subb
ljmp
and
dec
xchg
stos
addl
jmp
test
out
enter
pop
xchg
in
dec
dec
mov
xlat
enter
cmp
jne
out
xchg
mov
fldcw
mov
or
mov
ss
test
fdivs
lahf
fildll
into
mov
stos
bound
pop
xchg
sbb
push
inc
fstpl
mov
out
push
add
jge
dec
mov
xchg
std
aas
out
sub
sub
in
sti
jae
jnp
mov
cmp
fistps
inc
pop
es
loopne
fisttpl
pop
mov
inc
mov
jne
push
jae
aas
jmp
test
into
inc
mov
das
and
mov
cmp
inc
cli
xchg
cmp
jmp
cltd
dec
push
cmpb
scas
adc
cmc
sub
aam
xchg
dec
arpl
mov
xchg
xchg
out
jb
out
cmpsb
mov
dec
es
imul
mov
mov
pop
test
cmc
in
iret
dec
adc
inc
stos
les
cmp
and
pop
mov
fiaddl
nop
outsb
dec
jmp
lahf
xchg
out
cs
mov
inc
xchg
ret
adc
mov
jp
dec
lds
inc
test
add
rcll
js
cmp
adc
imul
pop
scas
push
loope
dec
sub
or
imul
mov
movsb
dec
xchg
aaa
push
rorb
mov
addr16
loopne
cmpsb
jns
mull
ret
mov
xchg
fldcw
mov
mov
xor
sub
lahf
daa
fisttpll
mov
jae
sti
jmp
stos
shrl
pop
iret
jbe
jb
cmpsl
rorl
test
enter
filds
mov
loop
xor
sbb
cmpsb
pop
or
rorl
scas
arpl
sbb
rcrb
pop
pop
outsl
loopne
es
xchg
cmp
fwait
cwtl
sub
lea
cwtl
rcrl
out
mov
div
push
lcall
mov
mov
test
cmc
xorl
inc
dec
push
fucomi
xchg
lds
push
outsb
dec
adc
subb
sub
mov
mov
loop
mov
mov
iret
xchg
icebp
jnp
jno
fldl
push
xor
enter
addr16
ds
jle
and
in
loop
push
rcrl
push
loopne
push
inc
clc
mov
mov
adcl
jbe
mov
int
rcll
fimull
sub
mov
dec
sti
push
repz
jp
inc
sub
add
out
scas
xchg
stos
jle
loopne
fisubrs
fldenv
xor
fisttps
inc
sbb
int3
lods
or
paddq
dec
fisttpl
dec
mov
pop
push
pop
inc
stos
outsl
and
xor
aad
ret
das
jb
stos
jmp
ret
push
add
das
imul
fldcw
or
addl
neg
push
dec
imul
lahf
dec
pusha
lret
mov
dec
outsl
iret
mov
push
pop
ss
shll
cli
test
repnz
dec
xor
cwtl
mov
ja
fnstcw
jmp
pop
mov
pop
cmpsb
sub
daa
mov
add
mov
push
xor
mov
cmp
inc
cmp
pop
and
adc
push
stos
jnp
add
lods
adc
enter
ja
pushf
shll
fcomps
pop
call
mov
out
mov
call
inc
movsb
and
cmp
test
fimuls
sbb
pop
xchg
roll
fstpl
jp
das
pop
push
gs
mov
test
xor
arpl
cmp
xchg
inc
pop
adc
sti
out
shl
dec
sub
xor
or
hlt
or
push
sub
sbb
xor
mov
cltd
pop
ror
push
fldl
xor
icebp
pop
out
dec
ret
imul
popf
jle
dec
mov
mov
shlb
mul
adc
test
ret
pushfw
or
repnz
jmp
jmp
mov
lds
lcall
sti
pop
sub
rclb
xor
test
rolb
inc
inc
adc
xchg
dec
dec
xchg
jnp
out
inc
fidivs
inc
push
mov
into
les
mov
dec
or
xchg
out
and
inc
mov
sbb
out
pop
out
inc
pop
push
jae
jmp
cld
stos
jmp
xchg
dec
jmp
cmp
inc
ret
inc
jb
repz
rcr
mov
add
test
push
icebp
stos
out
mov
cmp
das
flds
jnp
pop
mov
fld
in
adc
push
pop
test
fimuls
xchg
xchg
test
lahf
daa
add
mov
sbb
xor
fisttpll
cmp
into
jns
stos
jbe
loop
cmc
outsl
out
mov
mulb
lcall
xchg
add
mov
mov
sbb
xor
popa
sub
scas
daa
icebp
aam
pushf
inc
arpl
loope
cmp
mov
subl
mov
fisttpll
in
inc
sarl
enter
pop
xchg
fwait
dec
jnp
push
and
jg
aas
hlt
adc
out
pop
into
fucomip
sbb
xchg
cwtl
xchg
mov
outsl
inc
mov
inc
sub
stos
lret
mov
push
test
and
xor
daa
xchg
dec
pop
jno
xchg
inc
lret
lds
pop
mov
inc
subb
xchg
push
hlt
ror
or
mov
mov
fiaddl
mov
inc
rolb
adc
mov
jns
stos
ret
add
or
scas
fidivs
lds
mov
rclb
ss
sahf
sub
and
inc
ret
pop
es
inc
fistl
mov
cmp
mov
pop
xor
mov
dec
imul
dec
aaa
inc
push
or
fucomip
mov
cmpsb
pushf
push
pop
idivl
int3
outsb
outsb
mov
sbb
push
out
mov
sbb
icebp
repz
scas
lds
call
leave
mov
mov
xchg
iret
mov
and
sbb
jno
mov
or
repnz
lods
movsb
ret
sbb
fcmove
insl
movsb
ret
xchg
pop
xchg
inc
les
push
shll
mov
sub
push
add
and
xor
mov
sti
fsubrp
push
adc
xorb
lret
xchg
out
adc
and
push
loope
mov
mov
lret
sbb
iret
dec
in
xchg
cmpsl
push
imul
cmp
dec
lock
sbb
inc
xchg
mov
lahf
iret
add
sbb
stos
out
in
pop
and
fadds
in
mov
mov
outsl
cmp
xchg
jecxz
out
push
pop
arpl
mov
out
add
ss
sti
and
jnp
mov
push
je
sbb
ficompl
xchg
out
pop
jecxz
sub
stos
arpl
push
ja
xchg
pop
sub
add
sbb
sub
jae
xor
loope
push
jb
divl
adc
rclb
dec
jle
sub
stos
das
jle
mov
inc
loopne,pt
out
sbb
shll
movsb
rorb
ret
ljmp
roll
in
imul
shll
xchg
or
xchg
out
cmp
sbb
mov
out
xchg
jp
pop
jns
cwtl
push
out
cmpsb
lds
mov
push
xchg
and
les
push
pop
stos
jp
test
imul
push
cmpl
mov
rorb
stos
outsl
sbb
lret
inc
mov
mov
sub
dec
xchg
leave
movsl
incb
cltd
jno
or
test
data16
rcrl
popf
insb
sbb
pop
push
pop
lret
dec
es
stos
shll
addb
rcrb
jp
sub
xor
mov
pop
clc
ljmp
cli
mov
notb
addr16
insb
cmpsb
stos
mov
aad
roll
jae
adc
xor
daa
mov
addb
cmp
aas
rcl
xchg
xorl
and
out
or
shlb
inc
testb
cmp
jnp
test
repz
mov
or
lcall
dec
lods
ret
andb
jbe
jo
cs
push
sti
mov
cmpsb
xor
push
xor
aad
push
pop
das
dec
add
inc
push
sbb
das
fisubl
lock
fistpll
xor
enter
outsb
pop
mov
jmp
jecxz
xchg
xor
push
add
xchg
loope
sub
dec
jmp
add
mov
add
mov
dec
adc
inc
cmpsb
sbb
lcall
fistl
into
ja
stos
das
pop
mov
mov
ficomps
icebp
mov
pop
out
outsl
jno
outsl
out
int3
loope
pop
scas
loopne
out
inc
scas
repz
inc
scas
iret
cmp
jns
fdivrl
sahf
in
push
ss
xchg
or
mov
mov
arpl
jmp
mov
dec
sub
sbb
ljmp
adc
xchg
test
adc
test
xor
push
fwait
dec
popf
lahf
ret
cmp
pop
repz
arpl
divl
cmpsl
push
repz
in
xchg
outsl
mov
sbbb
mov
dec
repnz
jno
sub
repz
int
stos
xor
jnp
xchg
lcall
jl
push
test
mov
sbb
dec
pop
mov
das
and
inc
sub
arpl
fwait
xchg
daa
sub
mov
mov
aaa
mov
es
jp
push
ss
fbld
lahf
orl
aas
sub
in
jmp
add
mov
xor
xor
jp
mov
fxch
mov
xchg
insb
repnz
ljmp
lock
fwait
jae
dec
and
shrb
adcb
mov
adc
xchg
add
and
or
jno
fistpl
sti
lds
and
jno
fisttpll
cmp
push
jnp
outsl
adc
mov
cmp
frstor
mov
out
pop
add
jecxz
sub
shlb
fldt
stos
inc
pop
scas
fnstsw
jb
jmp
hlt
les
cmpsb
nop
fnstenv
imul
stc
es
adc
dec
dec
dec
and
jae
fs
mov
add
pop
scas
inc
and
shl
mov
imul
hlt
ror
or
sbb
enter
mov
mov
and
xor
and
xchg
push
pop
mov
mov
xchg
inc
cmp
and
addb
fcmovnu
lret
mov
mov
ret
xor
adc
cmp
or
mov
mov
packssdw
push
adc
out
mov
and
cs
stos
loopne
sti
enter
mov
cmp
loopne
xchg
mov
arpl
sbb
into
clc
pop
or
xor
subl
popa
lds
add
fwait
cmpsb
gs
test
out
pop
ljmp
cmp
jg
lods
xchg
cmpsl
lds
push
cwtl
out
rcrl
push
das
sub
xor
ret
mov
mov
push
mov
or
pop
stos
xchg
adc
cltd
jmp
pop
nop
adcb
lcall
iret
movsl
daa
mov
dec
lcall
push
jnp
das
push
out
lahf
push
inc
mov
jne
pop
jns
or
out
mov
cmpl
ja
inc
pushf
fmull
pop
xchg
mov
sbb
scas
ja
enter
stos
push
fimull
sbb
js
data16
les
and
ret
pop
mov
mov
data16
imul
ret
or
jmp
inc
inc
mov
xchg
mov
mov
mov
lds
or
stos
adc
stos
jp
test
sbb
outsl
sub
dec
jns
outsl
pop
les
cmp
or
das
and
scas
icebp
outsb
fimuls
pop
xlat
adc
bound
xchg
jmp
pop
push
ret
mov
cmp
dec
ror
mov
mov
stos
xchg
mov
cmp
dec
cmp
push
inc
sub
sbb
test
jl
xchg
repz
out
jg
fbstp
mov
es
inc
stos
mov
int3
mov
cmp
mov
fucomp
arpl
mov
fldcw
movsb
mov
and
iret
scas
mov
or
push
and
test
push
fs
or
cmp
rolb
push
stos
mov
mov
mov
and
lcall
fwait
icebp
jae
call
or
mov
popa
or
xchg
push
jno
dec
mov
mov
xchg
push
out
stos
lret
or
adc
pop
pop
ss
mov
pop
lea
popa
mov
insl
movsl
jne
repnz
jl
das
xor
lea
and
mov
out
cli
aas
dec
fcmovbe
xor
iret
cmp
stos
mov
in
add
fld
mov
sbbl
push
stos
mov
insb
mov
mov
mov
subb
fldcw
jno
or
loop
inc
cs
fcmovu
movsb
call
pop
enter
sbb
fwait
repz
push
data16
ficomps
sti
or
pusha
jmp
icebp
scas
test
lret
xchg
push
cmp
cmp
jne
xchg
jg
sbb
mov
jb
rorl
fildll
xchg
cmpsb
cmpsl
push
jnp
or
dec
out
lock
lcall
mov
pop
adc
inc
jbe
sbb
bound
add
fs
stos
sbb
dec
add
push
or
gs
fcoml
stos
adc
sub
push
icebp
divl
mov
jbe
or
movsl
cmpsb
repnz
enter
ret
addr16
daa
and
cli
pop
mov
das
pop
das
sbb
imull
sbb
into
cmp
xchg
inc
out
mov
addr16
out
cmp
aaa
pop
ljmp
sub
aaa
jbe
push
jnp
scas
dec
jb
fnstenv
and
or
out
push
push
leave
iret
xchg
pop
fdivrs
push
ja
or
xor
cmpsb
arpl
mov
movsb
vdivss
sbb
call
inc
call
and
jecxz
lcall
cltd
movb
es
aam
dec
in
out
hlt
mov
test
jb
xchg
jnp
movsb
mov
mov
insb
notb
push
jl
mov
addl
sub
cli
cmp
xor
int
xchg
popa
mov
std
mov
lea
test
popf
not
push
movsl
pop
dec
and
loope
stos
jae
movsb
rorl
pop
les
xor
push
jmp
mov
outsl
jnp
test
cmp
pushf
outsb
cmp
push
dec
and
inc
sub
cmpsb
out
sub
mov
test
mov
adc
in
dec
je
mov
popl
repz
and
xlat
pop
adcb
sbb
sbb
xchg
stos
add
ret
cmpsb
xlat
stos
iret
xchg
loopne
sub
test
jb
inc
jmp
into
cmp
push
lcall
cmp
mov
pop
lret
mov
test
sub
adc
xor
iret
add
xchg
and
aaa
fists
iret
fwait
adc
push
outsl
daa
dec
push
movsb
dec
mov
repz
lods
jmp
and
ljmp
fldt
mov
nop
aaa
fstpl
mov
aas
pop
sbbl
pop
faddp
cmpl
or
and
jns
inc
add
rol
add
sub
aaa
dec
inc
pop
ss
jmp
cmpl
push
dec
scas
aam
insb
adcb
je
or
add
shll
adc
sub
out
das
cmp
xor
pop
mov
test
dec
in
std
push
cmc
arpl
out
cmp
das
mov
dec
enter
push
es
pop
add
mov
mov
push
and
xor
add
cwtl
push
and
stos
test
iret
xor
adc
ja
stos
sbb
jbe
fldt
iret
xor
fcoms
fisubrl
paddusw
out
cmp
jne
pop
xor
cmpsb
ja
fisttpll
add
and
pop
aam
ja
lods
sub
lahf
jae
stos
mov
addr16
jbe
out
outsb
push
out
stos
imul
or
cs
out
pop
sub
outsb
in
arpl
data16
mov
iret
ret
aaa
rorl
pop
cmp
mov
aad
push
dec
nop
or
adc
mov
rorl
xlat
test
pop
mov
jnp
dec
stos
insb
xchg
iret
iret
lds
xchg
push
push
fnsave
mov
mov
dec
cmp
adc
rorl
jle
mov
push
add
es
adc
mov
add
ljmp
xor
cmp
add
cmp
dec
sub
jecxz
ret
iret
jnp
inc
testb
out
mov
xchg
adc
cmpsb
sub
add
fucomp
add
cmpsb
mov
dec
shlb
push
cs
push
jno
leave
leavew
mov
imull
push
outsl
stos
fstps
mov
bound
ret
fimuls
dec
data16
arpl
fistps
jnp
dec
mov
fidivl
cs
cmp
stos
mov
dec
push
insl
inc
enter
shlb
inc
adc
xor
dec
stos
jecxz
and
cmp
cmpsb
xchg
fldl
dec
sub
ret
inc
jmp
xchg
rorb
push
pop
xchg
jnp
das
les
fldcw
inc
xor
xor
jecxz
icebp
das
xchg
fists
lret
jnp
shl
sub
cmp
jns
sub
mov
outsb
dec
loop
sub
lahf
test
cmp
outsl
dec
mov
test
push
or
mov
xchg
adc
scas
clc
mov
test
flds
xlat
cmp
push
mov
aas
hlt
or
or
pop
lock
sti
mov
xor
ja
xor
fldt
in
mov
das
out
mov
cmp
int3
jl
or
xchg
pop
jae
test
mov
imul
xchg
push
sbb
fxtract
jecxz
jg
xchg
jb
and
push
dec
or
add
ret
cwtl
fnstcw
jp
or
fnsave
sub
stc
stos
pop
dec
ds
push
push
fisttpll
dec
ret
ret
fwait
jbe
push
jp
push
adc
jbe
sarl
dec
pop
push
sub
out
jp
cmp
xlat
xor
or
out
stos
xor
arpl
out
sbb
mov
xchg
ds
inc
cmpb
aad
loope
les
xchg
pop
jae
out
pop
mov
dec
andl
push
pop
jg
outsb
es
pop
fisubl
arpl
jmp
insb
into
jmp
out
push
leave
enter
xchg
jp
push
scas
sub
cli
xchg
cmp
neg
jg
imul
xchg
dec
ret
into
or
fnstsw
cmp
daa
mov
repz
mov
mov
movl
add
repnz
icebp
mov
xor
daa
mov
dec
aas
bound
adc
ficoml
inc
xor
shll
adc
mov
loopne
ret
fildll
popf
or
xor
outsb
cmp
or
fstpl
repz
jecxz
push
push
ja
fldt
add
sub
imul
loope
ror
into
cld
pop
mov
daa
lea
stos
cmp
cmp
xchg
cmp
out
daa
pop
xor
out
ljmp
mov
ret
adc
and
mov
xchg
int3
or
scas
fstps
fldl
inc
mov
dec
xor
dec
sbb
mov
jae
sbb
test
shr
inc
fdivl
cmp
mov
out
cs
or
subl
ret
lock
addr16
mov
popf
iret
das
adc
pop
jnp
and
std
fisubrs
fmull
fld
inc
mov
xrelease
pop
addr16
cmpsb
fnstsw
test
imul
std
dec
bndstx
dec
repz
cld
or
dec
out
out
arpl
mov
dec
fidivrs
std
je
in
pop
fcmovu
push
rorl
add
add
mov
xor
ror
out
inc
jno
jns
out
push
rcll
inc
sbb
pop
jmp
and
rorl
or
pop
jp
loope
lahf
popf
pop
add
pop
pop
les
jge
repnz
sub
sub
add
add
jg
jnp
jns
ror
inc
fnsave
pop
outsl
std
fincstp
or
orb
out
sub
movsb
dec
mov
add
xor
lea
mov
inc
dec
jecxz
dec
xlat
pop
fwait
repz
cltd
mov
xchg
inc
fstpl
insl
jmp
jae
out
mov
lahf
std
hlt
rcr
inc
fcompl
jecxz
lods
std
loopw
inc
stos
xlat
scas
pushf
mov
push
mov
fbld
outsl
sbbl
scas
jb
cmp
push
push
pushf
rorl
pop
fsubrl
pop
shl
fdivrl
cmp
lods
dec
jge
cs
jp
popa
mov
pop
pop
xchg
jl
ljmp
xchg
inc
mov
jp
neg
ljmp
cmp
jg
mov
mov
adc
ffree
mov
mov
xchg
lds
or
repnz
insl
insb
ljmp
popf
fimuls
arpl
jnp
dec
in
jl
fisttpll
das
shll
inc
roll
pop
cmp
and
ret
pop
insl
mov
mov
pop
sbb
bound
xchg
pop
das
gs
push
cmp
das
insb
push
je
sahf
in
daa
movsl
and
sub
cld
and
xor
jmp
das
mov
mov
pop
stos
xlat
loopne
and
add
cmp
lds
lcall
push
jmp
pop
dec
adc
mov
outsb
std
lock
add
sarl
and
lret
test
dec
mov
cli
les
in
mov
push
stos
inc
adc
iret
push
in
xchg
enter
cmp
mov
subl
mov
cmp
pop
mov
testb
sub
imul
xor
test
mov
fidivrl
test
mov
call
mov
inc
test
push
adc
mov
jg
call
lock
xor
cltd
fldl
mov
pop
mov
jnp
inc
enter
imul
dec
jnp
inc
or
lock
insb
jno
or
or
xchg
jp
es
jne
stos
movsb
sbb
repz
fwait
sub
addr16
loop
fwait
dec
addl
sub
xor
ret
test
cmp
push
push
out
out
lock
jb
pop
or
sub
and
imul
lcall
es
xchg
push
ret
sub
jae
cmp
cli
in
xor
pop
fldt
out
fbstp
inc
xor
bound
dec
cli
xor
fisttpl
jecxz
sahf
loope
mov
pop
or
imul
jp
jae
out
das
add
sbb
mov
xchg
xor
pop
ja
inc
outsb
sarb
jmp
mov
jmp
pop
and
fnstsw
sub
shlb
ljmp
loopne
push
mov
inc
cs
dec
ret
or
cmp
iret
xchg
sbb
ljmp
jecxz
jbe
jp
dec
shll
pop
jno
fstps
add
mov
jne
or
fildll
push
xor
faddl
aam
call
push
sub
mov
scas
dec
xchg
inc
adc
je
mov
add
xor
aam
xor
ret
fstl
sbbb
jmp
ljmp
ret
cmp
xchg
cli
xor
mov
lret
lods
xchg
add
ds
and
stos
xorb
das
jb
and
inc
dec
mov
in
mov
sbb
sbb
xorl
repz
mov
repnz
icebp
push
call
jge
push
sbb
test
ret
sbb
cmp
pop
inc
hlt
add
xchg
es
aas
imul
jnp
push
add
jg
pop
xchg
jp
daa
ret
jnp
pop
arpl
mov
lret
pop
add
es
jge
xchg
cmpsl
cmp
sbb
push
cld
mov
ret
mov
andl
ret
ss
bound
sub
daa
shr
xor
push
rcrb
xchg
and
add
rorb
jae
fbld
scas
fcom
outsb
pop
mov
pop
dec
ret
or
pop
les
repnz
or
out
mov
cltd
lret
negl
test
out
addr16
arpl
add
sub
lods
repz
or
cmp
arpl
out
mov
inc
xor
orb
inc
pop
jb
inc
or
xchg
add
loopne
sub
xor
in
ret
stos
mov
xchg
fadds
xchg
sbbl
inc
shrb
and
push
pop
jmp
lahf
into
fcompl
jmp
adc
lahf
jnp
jae
cli
or
fbld
push
cmp
sbb
push
mov
xchg
cli
imul
sub
xchg
xor
pop
mov
jp
scas
out
push
push
sbb
jnp
jns
sub
xor
jp
fildl
mov
push
mov
push
fwait
scas
dec
push
xorl
push
testl
push
mov
push
fisubl
jo
push
es
and
jp
jb
xor
add
sti
xchg
adc
add
xchg
mov
xchg
mov
stos
push
mov
dec
cmpsb
inc
pop
pop
inc
pop
push
out
jp
dec
or
fistps
sub
cmp
iret
xchg
pop
fcmovne
push
pop
or
and
repnz
imul
or
xchg
nop
jbe
xor
dec
repnz
cmp
and
sub
fnstcw
lret
fidivl
out
lcall
nop
mov
repz
fwait
mov
inc
mov
mov
loopne
pop
ljmp
xor
fcos
xchg
sub
jb
fsubrs
jecxz
jnp
mov
sub
add
stos
jp
fisubs
mov
iret
pop
sbb
pop
bound
insl
sbb
sbb
aaa
and
xor
ret
jae
add
pop
jmp
jp
insl
lret
inc
mov
sbbb
mov
test
jecxz
das
or
add
pop
outsl
arpl
fwait
out
lods
or
dec
jo
dec
pop
add
jbe
ja
iret
push
xor
pop
ret
inc
loop
cli
or
mov
lahf
out
nop
sbb
mov
push
cmp
jb
or
daa
out
jl
pop
push
mov
in
mov
ret
gs
inc
dec
stos
ss
jnp
loop
inc
inc
loop
out
lcall
dec
pop
in
mov
loopne
pop
lcall
jae
rcrl
mov
arpl
fwait
and
jg
mov
adc
xchg
push
pop
divb
pop
sbb
mov
inc
imul
mov
dec
cmp
add
jl
xor
scas
repnz
mov
cmp
fcompl
push
push
orl
and
sbb
lcall
cmpl
lret
cmpsl
mov
cmp
sbb
add
adc
mov
xchg
ljmp
mov
popf
push
cltd
test
pop
dec
inc
pop
rorl
adc
adc
sub
fistpll
jae
frstor
rcr
jmp
repz
ljmp
xchg
jl
and
pop
sahf
inc
fcoml
shll
mov
jns
add
stos
jae
testb
dec
jg
lcall
test
shr
add
cmpsb
dec
add
pop
adc
ret
loop
out
adc
cmp
push
xchg
dec
testb
loop
jmp
cs
jle
add
sbb
adc
lock
sbb
das
push
pop
push
push
fists
ret
xor
mov
inc
sub
arpl
daa
adcl
mov
sub
outsb
fwait
inc
xchg
div
xchg
adc
xor
inc
out
push
out
xchg
xchg
pop
xchg
mov
ss
fildll
cmpl
ret
mov
xlat
call
adc
ret
jbe
repnz
subl
mov
arpl
inc
cmpsb
mov
sahf
bound
sbbb
cli
loope
shrb
fldcw
sub
cmp
stos
in
dec
jnp
scas
xchg
lret
lcall
sub
ret
sti
add
pop
jmp
mov
clc
aaa
xchg
sti
mov
dec
loop
sahf
dec
add
das
push
add
adc
jbe
jecxz
jnp
sbb
and
pop
xchg
add
bound
data16
adc
inc
call
cmpsb
push
dec
cli
rcr
mov
push
lcall
test
dec
ret
ret
sbb
sahf
daa
jno
cmc
sub
inc
xlat
aaa
xor
add
push
fldenv
repz
sbb
addr16
stos
adc
shlb
pusha
shlb
addl
inc
sbb
mov
jne
cli
jecxz
and
fldenv
in
jnp
jae
icebp
sub
lret
test
mov
pop
pop
jae
ds
rcll
sbb
dec
inc
mov
test
mov
sbb
push
sbb
lock
pop
sbb
shll
ja
add
mov
push
pop
mov
push
sub
sbb
xchg
cmpsl
fwait
movsb
je
and
or
push
fiaddl
mov
shrb
sbb
inc
push
and
add
add
add
mov
nop
push
mov
mov
cmp
out
sub
cli
mov
das
stos
das
mov
pop
push
repnz
cmp
xchg
inc
push
push
fwait
inc
pop
mov
stos
andl
lcall
mov
repnz
pop
mov
into
push
jp
jg
xchg
orl
cmp
mov
mov
mov
sbb
fsubl
scas
dec
sub
cmpsl
cmpb
jns
xchg
and
out
inc
jmp
xchg
andl
stos
bnd
in
push
xchg
fldcw
es
push
fiaddl
sbb
lods
jp
mov
scas
andl
xchg
cltd
xchg
andl
and
inc
push
cmpsb
mov
adcl
sub
mov
std
mov
ljmp
out
cmp
dec
dec
jp
add
movsb
in
jecxz
sbb
inc
cmp
jb
push
push
shll
inc
fwait
lcall
lret
test
data16
inc
inc
push
fwait
pop
sahf
jae
lcall
imul
or
xchg
push
dec
xchg
ljmp
adc
lock
cmp
aaa
sbb
ficoml
pop
xor
lock
adc
inc
pop
das
sub
fwait
and
add
xchg
repz
pop
push
mov
lods
jae
aad
jmp
loop
inc
jecxz
in
into
stos
and
xchg
add
cmp
daa
es
mov
push
adc
in
arpl
in
scas
subl
out
arpl
add
or
out
jecxz
jo
adc
lods
inc
jmp
ret
push
xchg
cmp
push
xchg
sub
xchg
pop
pop
fwait
jl
or
sbb
sub
pop
ret
lcall
inc
xchg
xchg
or
pop
sarb
dec
cld
lcall
pop
lcall
icebp
sbb
ret
pop
divl
jmp
pop
mov
add
rorl
mov
mov
fucomp
xor
ljmpw
mov
push
mov
sub
rclb
mov
add
lret
movb
ja
ret
xchg
cmp
das
mov
inc
xor
add
sub
and
add
xor
sbb
xor
inc
adc
cmp
flds
aaa
push
rolb
push
popf
ret
sbb
pop
xchg
or
movl
add
adc
vmwrite
roll
fcos
or
ljmp
lds
xchg
sub
xor
pop
sbb
push
sbb
jg
pop
call
pop
inc
add
call
test
shlb
mov
ret
and
jae
repz
inc
jnp
arpl
or
addr16
dec
xchg
fldcw
add
cmp
mov
sbb
jp
stos
pop
aas
out
sub
arpl
dec
dec
add
cmpsl
shlb
lahf
inc
mov
das
cmp
cs
mov
call
sub
cli
cmpb
push
pop
inc
jp
push
mov
or
mov
push
jmp
pop
repnz
mov
mov
lahf
call
test
fidivl
mov
pop
mov
cmpb
cmp
data16
jnp
dec
and
ret
loop
scas
xorb
jb
loopne
pop
push
xchg
test
arpl
xor
push
testb
subb
aas
mov
lahf
loope
jg
sub
loop
testl
sti
dec
in
dec
push
sbb
xchg
cmp
scas
repnz
mov
jp
pop
xchg
divl
add
push
and
loop
push
cmpb
pop
mov
xchg
push
ret
dec
adc
xor
jp
arpl
mov
inc
ja
or
add
lcall
ret
shr
inc
repz
or
inc
jne
or
or
jns
ffree
bound
xchg
push
add
pop
repz
push
stos
fimull
mulb
jns
xchg
or
xchg
sbb
imul
xchg
call
es
call
or
mov
inc
stos
add
ret
sahf
and
mov
fsubl
add
imul
xor
cld
cmp
ret
bound
das
lock
sbb
bound
or
data16
sub
ja
ficompl
shll
jecxz
inc
pop
hlt
pop
pop
mov
jnp
loopne
push
jp
pop
loop
mov
jp
pusha
out
inc
ljmp
xchg
shl
arpl
xorb
loop
jp
pop
push
bound
sbb
mov
pop
dec
lret
push
loop
mov
mov
xchg
jb
or
ds
pop
ljmp
repnz
inc
fsubl
cli
ljmp
ljmp
sbb
or
neg
sbb
stos
and
mov
push
add
cmp
out
inc
fiadds
dec
ds
cmp
adc
gs
ljmp
inc
push
xor
jmp
ljmp
stos
mov
ret
jmp
aaa
pop
push
push
push
sub
lcall
mulb
push
jmp
pop
stos
test
jnp
dec
jae
dec
arpl
mov
sti
push
mov
imul
repnz
jmp
mov
add
cmp
and
mov
mov
push
loope
inc
notb
call
add
cmpl
jae
add
repnz
lock
call
mov
or
and
pop
pop
add
cmp
adc
adc
daa
mov
sub
cld
sub
sbb
pop
shl
push
ss
add
data16
xlat
imull
mov
fldenv
and
xchg
xor
mov
shl
shlb
mov
push
ss
mov
xor
jbe
rcrb
pusha
movsl
mov
pop
xchg
ja
fistpl
arpl
sub
into
jmp
dec
add
cmp
test
dec
sub
and
lret
add
arpl
sbb
bound
ljmp
push
adc
xchg
jb
pop
push
pop
dec
cwtl
aaa
jo
pop
fidivl
jl
decb
test
inc
loop
push
mov
push
pop
imul
pop
push
fistpll
daa
push
adcl
das
ret
clc
fisubrs
push
sahf
pop
call
jmp
jg
push
or
and
ret
jg
cs
push
es
xor
pop
pop
mov
pop
pop
stos
cld
add
mov
jne
mov
andb
push
dec
pop
aas
and
dec
mov
push
sub
cld
jle
cmp
daa
lcall
cmp
sub
data16
pop
xchg
ret
stos
out
jecxz
mov
push
cmp
and
pop
das
ret
dec
loop
mov
mov
jnp
test
sbb
mov
mov
push
lds
testb
inc
sbb
repnz
mov
dec
psubsw
mov
stos
xchg
dec
xchg
ret
xchg
adc
sbb
dec
jg
mov
add
dec
das
mov
inc
dec
pop
jb
aas
dec
ret
inc
lahf
xchg
arpl
out
arpl
or
xor
add
popf
aas
adc
pop
jnp
dec
jmp
repnz
jg
ficomps
inc
xlat
das
xor
mov
pop
jb
ret
mov
pop
mov
xchg
cli
decb
jl
cmp
andl
cs
mov
and
sbbl
fisubs
scas
add
adc
xchg
cmpb
out
add
jne
xchg
push
cli
jae
out
cmp
inc
pop
out
jnp
and
push
adc
or
pop
lods
and
jae
lret
jp
add
cmpsl
push
daa
fisubl
out
stos
mov
push
loopne
or
pop
mov
and
sbb
add
push
pop
mov
lahf
call
or
sbb
adc
xor
xor
add
or
push
scas
ja
xchg
lcall
cmp
mov
scas
ss
ds
movsl
mov
addr16
pop
out
stos
jecxz
mov
testb
sbb
lret
icebp
inc
fisubrs
loop
jmp
mov
jno
mov
fsubs
inc
into
das
shrb
pop
sbb
into
das
cmp
daa
push
cmp
sub
xorb
ja
das
jp
and
push
pop
mov
inc
lret
jo
mov
xchg
sbb
sarb
fwait
inc
dec
push
xchg
lret
jmp
xor
mov
fisttpl
sbb
cmpsb
push
bnd
int
add
pop
lock
loop
inc
loopne
xchg
xchg
mov
pop
sbb
inc
loop
mov
sub
ficomps
or
shl
pop
lcall
ljmp
arpl
fstpt
addl
xchg
dec
ficompl
add
orl
sbb
cli
mov
mov
aaa
sti
lea
cli
lcall
jg
mul
dec
inc
mov
lods
jecxz
aaa
out
mov
repnz
pop
iret
jg
fistpl
jecxz
sahf
ljmp
ret
pop
mov
xor
lcall
test
push
push
jl
add
adc
or
push
adc
test
add
xor
shrl
sub
push
xchg
pop
inc
sub
add
ret
imul
mov
sub
ret
pop
test
inc
test
stos
decl
repz
inc
and
xchg
sbb
ret
outsb
fimull
data16
sub
adc
cmp
push
jb
cmp
and
lret
jno
es
jnp
fcompl
inc
or
pop
jp
cmp
aaa
pop
ret
jb
lret
icebp
sub
or
or
neg
sbb
neg
ret
mov
loop
sub
xchg
leave
out
inc
xchg
data16
sbb
add
xchg
jmp
out
jg
mov
iret
push
push
xor
mov
push
push
push
inc
inc
xor
scas
incb
pushf
lcall
nop
mov
nop
mov
adc
data16
push
mov
xchg
xorb
sub
mov
add
xor
push
xchg
sbb
scas
fcompl
iret
adcl
add
mov
das
and
loopne
sahf
pop
outsl
aam
aaa
movsl
pop
sbb
mov
xchg
or
out
pop
push
lock
xor
notl
xchg
push
add
cmp
scas
xor
mov
sub
or
das
lahf
pop
and
sbb
mov
flds
mov
jnp
in
lret
mov
mov
scas
and
aas
out
mov
repz
sbb
inc
iret
xor
jnp
arpl
lret
add
mov
notb
ficoms
out
or
mov
push
mov
mov
test
mov
jns
push
adc
sbb
push
push
mov
sub
mov
xchg
imul
fsubr
pushf
mov
ret
loope
imul
push
mov
push
adcb
mov
xchg
cld
add
iret
xchg
push
into
mov
fisubrs
adc
inc
add
jecxz
mov
sbb
outsb
mov
dec
xor
rcrb
pop
adc
jmp
xchg
mov
or
sbb
in
jle
aaa
add
cli
sbb
adc
dec
add
popf
and
jg
sbb
pop
fimuls
out
into
jg
pop
pushf
ret
pop
aaa
add
jns
xorb
and
shlb
mov
fcoml
fisubrs
das
push
mov
adc
jnp
jb
lret
push
cli
pop
lcall
data16
push
xchg
add
fisttps
into
mov
fisubrs
adc
pop
sub
fists
add
repnz
mov
sbb
xchg
pop
sub
xchg
push
jns
and
fildll
pop
mov
fisubrs
push
jns
inc
xchg
jmp
sub
pop
arpl
cmp
test
test
test
xchg
sbb
rorl
stos
push
mov
ret
add
xchg
out
lcall
ret
push
mov
jno
xor
fisubrs
or
push
jb
pop
pop
cmp
nop
call
xchg
ja
fists
test
xchg
add
mov
xor
fsubl
jle
adc
addl
inc
push
es
fstpt
lea
out
sbb
outsb
cmp
jmp
imulb
push
sbb
nop
incl
testb
sbb
mov
fldcw
cmp
test
loopne
jae
out
jne
imul
inc
scas
loopne
mov
mov
push
sahf
cs
pop
cmp
out
xchg
add
loopne
mov
push
xchg
add
lock
inc
xor
xor
inc
add
mov
push
push
xchg
jno
sahf
cmpsl
stos
cmp
mov
sub
xor
pop
jnp
loope
es
push
xchg
fidivs
rdmsr
addr16
imul
loop
cmpsb
dec
adc
lcall
incl
add
aad
mov
mov
jnp
inc
addr16
push
pop
mov
out
push
mov
mov
test
into
push
or
xor
test
lahf
lret
into
hlt
inc
adc
pop
and
cld
mov
cmp
sbb
lret
cmp
les
fidivs
pop
xorl
cmpsl
adc
mov
push
nop
aas
mov
dec
cmp
xchg
sbb
loope
imull
outsl
adc
push
mov
call
and
lahf
dec
mov
push
daa
cmp
cs
mov
rcrb
push
add
adc
add
sbb
data16
jno
lret
cmp
das
push
and
cvtps2pd
imul
pushf
jbe
bound
mov
inc
adc
push
sub
cltd
pop
mov
hlt
aas
mov
dec
jle
mov
sbbl
fisubl
bound
pop
jnp
mov
mov
xchg
stos
outsl
xchg
inc
jnp
lcall
xchg
movsb
adc
outsl
mov
cmpsl
jp
add
adc
fs
negb
testb
inc
imulb
imulb
cmpsl
test
ret
das
in
cmp
add
nop
add
movsl
ja
addr16
mov
sbbb
out
aaa
jle
pop
bound
sub
xor
push
out
jle
or
rcr
pop
shl
mov
stos
sahf
ss
xchg
sub
cs
fistl
cmpsb
cmp
xor
jno
outsb
fdivrl
lcall
inc
pop
push
ret
sbb
mov
repnz
lcall
gs
gs
gs
xor
dec
push
cs
inc
sub
and
dec
cmp
out
push
out
or
jnp
or
mov
call
cmpsl
sub
xor
out
push
adc
out
push
jge
aad
inc
cs
cli
sub
add
sarl
mov
fdiv
adc
jecxz
test
scas
pop
fldt
cmp
sbb
xchg
sbb
es
fwait
sbb
repz
xchg
cmpsl
rorb
pop
add
cmp
mov
mov
mov
call
shlb
sub
pop
inc
pop
sub
out
repz
fdiv
inc
jnp
mov
mov
lcall
bnd
cmp
loopne
daa
loopne
pavgb
pop
lock
repnz
lock
fidivs
sub
jl
rorb
jmp
push
ds
decb
mulb
cltd
jl
mov
dec
cltd
aam
mov
mov
pop
aaa
sub
mov
dec
xchg
cmp
hlt
fmuls
and
stos
xor
mov
adc
add
ret
sbb
jecxz
popf
aaa
cmpsl
cs
push
inc
sahf
jno
dec
xor
andb
inc
pop
mov
inc
mov
ret
hlt
inc
sub
xlat
imul
push
add
repnz
out
mov
fwait
push
add
mov
into
das
or
pop
lretw
addr16
mov
push
orl
sub
mov
sub
xlat
mov
mov
jl
sbb
pop
cmpsb
es
push
jmp
int
mov
ljmp
jmp
arpl
imul
ljmp
push
add
in
inc
push
ljmp
cltd
fldcw
pushf
pushl
loopne
jae
xchg
ret
or
cli
mov
jp
sub
lcall
xchg
xor
jp
xor
pushl
sbb
pop
imul
ljmp
pop
or
xchg
lahf
inc
outsl
xchg
cmp
mov
shll
sbbl
sbb
push
test
dec
sbb
stos
pop
scas
dec
cli
or
xchg
movsl
mov
hlt
psubq
push
out
jle
imul
add
test
xchg
push
arpl
pop
das
cmp
xchg
jg
cmpsb
das
das
outsb
das
push
das
ljmp
push
das
push
das
xor
das
ss
sbb
mov
fildll
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
ret
aaa
inc
and
pop
hlt
xorl
or
add
jno
cmpsb
mov
ret
pop
outsl
mov
lret
jae
dec
mov
sbb
int
push
mov
leave
loope
ret
fnsave
sti
jecxz
xchg
push
dec
dec
gs
sbb
iret
icebp
sub
push
lea
arpl
sbb
mov
adc
xor
add
or
imul
add
subl
das
lds
ret
shll
in
int3
scas
std
xchg
xchg
fucomip
xor
mov
cmp
pushf
jmp
sub
in
push
negl
inc
push
xchg
addr16
xchg
imul
push
int
mov
pop
jecxz
or
jl
stc
lret
test
jecxz
jmp
gs
scas
jecxz
jmp
ret
mov
fwait
cld
leave
push
cltd
mov
sub
pop
push
and
incb
sub
pop
pop
rcll
lret
call
ret
int
icebp
dec
and
dec
jae
imul
aam
daa
repz
iret
xor
shll
add
stos
fldt
dec
adc
repz
lahf
leave
loop
imul
add
sub
dec
push
fwait
stos
test
or
add
pop
sar
xchg
mov
mov
je
jp
fisubrl
test
les
push
sbb
stos
dec
out
in
or
das
dec
repz
rcll
imul
inc
rorb
in
aad
insl
imul
mov
lds
push
ljmp
fcmovne
sbb
and
pop
and
cmp
in
mov
inc
dec
sbb
leave
inc
shll
mov
fcoms
inc
insl
sbb
cmpsl
and
xchg
rcll
cmp
cmpsl
xchg
std
or
adc
mov
aad
lods
adc
aaa
popa
aaa
arpl
cmpsl
push
stos
mov
mov
jo
pop
sub
incb
mov
cltd
mov
stc
sbb
rcrl
jbe
jno
daa
outsl
inc
sti
mov
test
mull
fwait
or
ljmp
jg
es
ljmp
int
enter
mov
sbb
not
mov
fld
int
imul
sti
std
repz
call
dec
mov
cld
fstl
imul
and
movsl
dec
outsl
xlat
xlat
or
subb
in
pop
sub
stos
rcrl
imul
inc
sub
aad
stos
sbb
imul
adc
repnz
mov
ja
aad
loop
add
mov
test
pop
popa
mov
dec
popf
shrl
fstpl
pop
shll
xchg
pop
pop
jecxz
sti
mov
ret
or
aaa
mov
insb
iret
cltd
cmp
dec
jne
xorl
mov
test
sub
or
xorb
mov
sbb
pop
or
out
mov
xchg
fdivrs
xor
shlb
das
pop
pop
lds
shrb
pop
stos
add
xchg
out
jmp
or
mov
jecxz
in
jmp
imul
ss
xor
inc
mov
sub
push
and
dec
mov
xor
ja
and
pop
lahf
repz
gs
imul
sbb
out
mov
fwait
shll
xor
adc
fimull
pop
fwait
mov
xchg
mov
flds
mov
inc
ror
int3
aad
sti
in
test
imul
jle
cmp
aad
or
xchg
mov
and
ljmp
mov
mov
and
mov
cld
mov
int
xor
movsl
sbb
and
iret
das
xchg
mov
fistpl
or
and
imul
fs
leave
sbb
jge
dec
jnp
sub
pop
adc
scas
and
jmp
test
pop
jae
es
int
or
and
in
scas
frstor
imul
icebp
sbb
cs
fs
add
imul
dec
cmp
testb
popa
imul
inc
loop
jg
popf
cmpsb
movsl
mov
lea
xor
pop
jae
stc
movsl
cmp
mov
fmuls
and
fwait
add
push
nop
jb
push
xchg
xor
out
ret
jge
jmp
mov
sub
arpl
ficomps
sub
subl
or
js
mov
dec
jecxz
lds
popa
in
fidivl
ret
rcll
push
lock
xchg
jno
mov
std
and
pop
mov
stos
movsl
ret
ret
sbb
stos
jnp
in
cmp
out
xlat
shrl
inc
xchg
out
push
lret
in
aam
xor
aas
clc
ror
push
ret
push
movsl
mov
sub
sbb
pop
cli
jecxz
inc
dec
roll
fucomi
repz
cmpsl
stos
les
scas
and
cmc
bound
movb
into
fcmovne
xchg
stos
adcl
sbb
fstl
sbb
out
mov
jae
ds
ret
sbb
sbbl
mov
mov
dec
pop
and
sbb
and
test
int3
popf
pop
xor
mov
ds
sub
add
ret
dec
pop
neg
mov
fistpl
xchg
orb
std
inc
inc
xchg
aad
jae
stos
fmulp
enter
neg
iret
jecxz
add
les
imul
add
push
cmc
push
nop
mov
fmuls
fidivrl
sub
pushf
jnp
rcr
fsub
sbb
pop
mov
pop
movsb
pop
les
fwait
call
xchg
jecxz
inc
aad
test
iret
and
ds
sbbl
cmpsl
jge
fwait
stos
and
mov
in
mov
pop
push
lods
inc
sti
mov
es
adc
in
mov
cmpsb
add
pop
xlat
pop
data16
pop
imul
in
adc
and
and
int3
fsubl
lds
popf
mov
xchg
dec
pop
sub
sub
inc
out
iret
rclb
mov
lret
mov
outsb
aam
mov
incb
inc
cmp
int
imul
fistpll
jmp
aam
jnp
push
push
adc
xor
xor
rcrb
sbb
clc
stos
loop
sarl
loop
jecxz
fcmove
dec
dec
sub
inc
or
dec
fsubrs
int3
dec
int3
add
bound
lea
mov
xlat
test
das
push
icebp
xor
enter
mov
pusha
mov
xor
lret
jb
sbb
mov
dec
cmp
xchg
or
insb
rcl
pop
leave
test
mov
fstp
fcmovnbe
pop
xchg
enter
dec
mov
js
jae
sbbl
int3
and
and
fwait
rcrl
int
pop
push
jnp
dec
call
dec
cli
and
iret
inc
jnp
add
push
loope
mov
fsubrl
mov
dec
sbb
pop
xchg
out
loope
xor
aad
dec
enter
pop
loopne
jmp
mov
arpl
test
jno
imul
ret
pop
cmp
mov
add
push
rorl
inc
daa
push
mov
xlat
cmc
push
jg
arpl
dec
cs
mov
mov
mov
in
fcomps
dec
test
rorl
mov
inc
int
or
aad
aam
mov
ss
or
add
mov
pop
add
dec
arpl
dec
inc
mov
gs
fcom
jge
lret
xchg
arpl
sarb
xchg
inc
in
xchg
popa
out
mov
xor
and
rcrl
add
xchg
fsubrl
sarl
nop
in
or
jns
pop
insl
ds
inc
subl
dec
sub
sub
mov
cs
iret
cwtl
adc
xor
imul
ja
lcall
jns
enter
pusha
xchg
stos
sbbl
mov
loope
xor
imul
sahf
mov
leave
hlt
mov
cld
cld
idiv
mov
mov
and
roll
int
stos
aad
fstps
fcompl
lock
or
roll
int
loopne
clc
enter
mov
jmp
lock
jg
xor
mov
fisttps
sti
sbb
aad
test
push
loop
pop
mov
dec
test
lds
xlat
dec
lock
jbe
enter
sti
aas
push
mov
fstp
jle
push
and
pop
mov
stos
in
enter
sbb
ja
lds
scas
sub
sti
pop
jecxz
mov
mov
jecxz
insl
insb
fnstsw
mov
pop
lds
and
das
int
test
mov
lret
xchg
aas
add
leave
sub
out
jg
data16
leave
sti
shl
inc
push
rol
insb
sbb
push
iret
dec
ljmp
cmpsb
jecxz
and
push
bswap
lret
xlat
fcomp
mov
mov
sahf
or
mov
leave
xchg
mov
out
jnp
mov
lcall
pop
adc
xor
dec
push
mov
pop
imul
fstpt
and
roll
int3
xor
clc
sti
sbb
jge
cmp
cmp
push
jecxz
repz
mov
push
flds
inc
sarl
imul
mov
sub
and
cltd
jnp
stos
lods
and
insb
cmp
imull
jp
fbld
mov
test
xchg
jmp
xchg
mov
imul
mov
push
inc
mov
fwait
mov
in
jae
jecxz
fstpl
lock
dec
sbb
or
push
jle
mov
mov
or
dec
xor
push
cltd
and
dec
or
jns
sbb
stos
mov
or
add
sbb
test
jne
jge
push
pop
mov
mov
int3
mov
jecxz
pop
mov
loop
aad
dec
mov
fcmove
pushf
dec
stc
bound
int
and
mov
xlat
out
les
imul
xchg
inc
xchg
insl
test
dec
popf
mov
rol
daa
ds
jnp
fwait
lahf
mov
loope
ljmp
pop
sti
ret
fnsave
cld
aam
lea
jmp
or
xor
xchg
mov
fcmovb
dec
mov
inc
pop
fucomip
das
fcmovnbe
sbb
jb
dec
mov
idiv
sbb
add
cmpl
mov
pop
xor
stc
imul
dec
mov
out
mov
scas
pop
xchg
repz
cwtl
mov
pop
and
iret
mov
mov
std
sbb
imul
fs
std
and
xlat
leave
fs
adc
dec
sbb
out
movsb
lret
mov
and
daa
mov
in
sub
fwait
pop
test
ds
lahf
sbb
add
icebp
and
arpl
jge
sbb
dec
and
mov
dec
shll
movsl
aas
cmpsl
das
inc
rclb
mov
movsl
pop
xor
jmp
sub
dec
das
dec
mov
mov
jl
stc
aam
rcll
test
xchg
sarb
shrb
mov
pop
ret
out
jne
enter
dec
mov
fwait
ret
dec
popf
repz
addr16
sub
int
iret
pop
sbb
fcomps
mov
mov
lea
xor
mov
mov
aam
jge
into
dec
rcr
lods
jg
mov
loopne
rorb
test
mov
jns
dec
mov
sub
into
or
mov
inc
sub
shll
sbb
or
add
std
pop
sti
sub
leave
jae
scas
mov
mov
or
clc
sti
or
imul
scas
push
lds
jecxz,pn
fcmovnu
sbb
aas
scas
dec
jge
jecxz
pop
popf
idiv
imul
loope
rcr
leave
icebp
jle
rol
xor
xor
or
xchg
sub
ret
mov
mov
aad
adc
jbe
inc
sahf
mov
sbbl
in
mov
pop
fwait
inc
sti
fdivp
mov
jno
sbb
jg
xchg
addr16
and
pushfw
out
repnz
outsl
pop
and
arpl
and
mov
jmp
out
jmp
fwait
int3
movsl
stos
data16
jmp
lea
jmp
lea
fsts
loop
push
test
mov
jns
pusha
mov
jecxz
outsb
loope
mov
push
or
add
popa
pop
dec
lret
xor
fdivrl
cmc
xor
je
xor
inc
es
push
or
xlat
ret
push
fmull
cmp
jno
outsb
in
in
push
jne
or
xchg
lcall
dec
add
inc
outsb
xlat
testl
adc
push
or
push
rcll
leave
add
fisttps
and
loope
fsts
leave
lds
outsl
iret
push
sar
ljmp
movsl
mov
jne
mov
rcrb
icebp
dec
fdivs
pop
inc
and
mov
cmpsb
xor
in
mov
inc
push
jl
pop
roll
pop
mov
or
sbb
fdivrp
rorl
mov
dec
mov
sarb
inc
sbb
dec
sbb
pop
popf
add
push
add
out
push
and
not
test
pop
pop
pop
fildl
xchg
mov
mov
icebp
arpl
out
call
jecxz
sbb
fmull
outsl
adcl
jmp
fsubp
jbe
mov
mov
les
ret
pop
xchg
mul
cmpsl
mov
add
lcall
and
push
inc
sarl
sub
pop
add
imul
daa
dec
cmp
sbb
mov
pop
fiadds
clc
adc
divb
shrl
stos
mov
std
mov
add
and
xlat
pop
in
pop
fsts
filds
push
in
mov
push
lahf
xchg
repnz
ljmp
out
es
repz
add
and
jecxz
cmc
shrb
mov
rcrl
out
subl
fmull
xor
cltd
mov
pop
in
roll
sbb
pop
cltd
std
pop
xor
xchg
movsb
dec
dec
aam
sub
fadd
roll
xchg
xor
mov
outsl
jge
xlat
leave
and
fs
cmp
mov
xchg
subl
lahf
call
push
push
int
lock
mov
adcb
scas
xorb
ljmp
pushf
dec
ret
mov
fdivs
mov
sub
push
sub
test
pushf
enter
and
std
fmuls
push
mov
negl
iret
shr
cmp
sbb
push
aam
ss
xlat
cs
xor
push
xlat
xor
dec
rorl
inc
std
in
shll
inc
jle
rorl
sbb
fsubl
outsb
stc
pop
push
in
mov
mov
and
pop
out
rcrl
inc
push
popf
dec
ffree
ds
xlat
aad
out
jle
ret
xor
jo
dec
inc
out
add
in
sbb
sub
cltd
dec
dec
jecxz
ljmp
adc
lds
std
sbb
mov
in
dec
jp
mov
xchg
int3
lret
shrl
les
out
pop
mov
fsubl
cli
dec
cwtl
mov
pusha
ret
stos
inc
mov
sub
stos
popa
sbb
adc
jge
dec
enter
es
int
and
fsubrl
sarl
xor
mov
push
adc
rclb
nop
fsubs
and
loop
outsl
fimull
cld
or
mov
mov
xchg
in
lcall
pop
and
mov
lret
mov
gs
test
xchg
rcrl
fwait
pop
mov
mov
lcall
ret
dec
push
inc
out
lods
shrl
test
add
cmp
push
jge
mov
mov
push
ret
pushf
les
mov
std
or
out
jmp
imul
movsl
arpl
rorl
fimull
call
jnp
repnz
jno
mov
sbb
aaa
jecxz
dec
out
mov
cmp
jge
testb
pop
mov
sbb
pushf
dec
xor
xor
in
mov
mov
inc
fwait
imull
xchg
addb
xchg
dec
dec
cwtl
loope
xlat
aad
inc
mov
leave
dec
mov
out
mov
add
repz
xchg
mov
dec
clc
mov
push
aas
ret
es
jnp
adc
add
dec
dec
scas
mov
lds
sbb
fmul
ds
and
inc
cmpsb
push
mov
gs
mov
dec
shll
cmc
cltd
pop
push
mov
mov
xchg
fdivrs
cwtl
lea
cmovno
inc
loope
lahf
xor
mov
pop
sbb
mov
cmp
arpl
or
mov
repz
xor
vmaxsd
icebp
xchg
movsl
dec
sbb
push
xorl
inc
sbb
imul
inc
jae
pop
aam
sub
inc
int
fistps
loop
add
lods
sbb
lahf
and
mov
mov
into
cmc
fisttpll
inc
int
mov
pop
hlt
fisttps
dec
sub
jg
ja
mov
pop
push
dec
mov
xchg
push
or
jmp
iret
push
mov
sbb
sbb
push
cmpsl
loopne
push
ljmp
out
xor
sti
insl
scas
test
addl
push
jmp
sub
leave
ds
cmp
cmp
inc
push
xor
enter
cmp
daa
popf
sub
xchg
ret
imul
mov
mov
xor
xchg
mov
mov
in
repz
stos
popf
jb
fisttpll
stc
mov
mov
shl
int
inc
sub
adc
inc
addr16
fistpll
inc
jg
iret
push
ret
push
ljmp
not
orb
rcll
in
fldl
xchg
arpl
inc
out
popf
int
into
add
and
push
out
in
xchg
sbb
and
out
popf
push
add
fdiv
leave
sub
cmp
mov
fstl
subl
jecxz
out
ljmp
gs
insl
fsts
cmc
push
mov
mov
xor
mov
push
fidivrl
cltd
lea
xchg
mov
lret
jb
mov
test
push
popa
sahf
shlb
push
pop
mov
pop
xchg
popf
ljmp
push
xchg
adc
xchg
ja
mov
bound
jb
add
adc
and
loope
mov
xchg
sbb
sti
in
xchg
sbb
jmp
mov
shll
loope
in
ret
and
cli
push
mov
stos
aad
mov
pushf
rcrb
mov
xchg
nop
ret
push
mov
std
jmp
pop
cmp
dec
lods
dec
shrl
add
sbb
icebp
aam
int
and
loopne
data16
pop
nop
stos
pop
fldt
outsl
push
jae
jno
dec
fcom
mov
ret
dec
lea
lret
out
aas
sbb
cmp
enter
cmp
clc
repz
fists
push
rcrb
jl
ret
out
sbbl
cld
pop
mov
outsl
stos
and
inc
andl
jno
xor
and
arpl
fcmovnb
xchg
icebp
fcoml
sti
mov
imul
xor
outsl
int
or
mov
shr
mov
pushf
fcompl
jle
sub
rcll
ret
pop
sbb
stos
mov
mov
rcrl
scas
pop
fcomi
stos
push
jecxz
dec
std
pop
cltd
sti
fdivrs
inc
pop
popa
push
out
ret
ret
aam
aas
fcomps
fwait
mov
lahf
in
push
jnp
and
inc
ret
push
pop
jmp
ret
sbb
rcrb
sub
lock
sti
sbb
mov
mov
jb
mov
out
and
pop
int3
sbb
pop
lcall
stc
mov
fwait
scas
jle
leave
stc
int3
xor
and
xchg
or
xor
mov
int
test
je
sti
sbb
lods
add
push
enter
leave
ds
xchg
mov
jl
ljmp
xchg
in
je
xlat
shrl
mov
mov
mov
xor
sahf
scas
xor
add
push
mov
jp
or
ljmp
dec
jmp
mov
pop
pop
insl
jmp
jp
inc
mov
pop
out
xlat
jns
andl
ret
inc
test
enter
push
int
push
ds
inc
ret
int3
or
ret
fldenv
insl
push
data16
call
lods
jns
push
dec
fadds
mov
shrl
jb
subl
out
cmpl
jae
and
in
xor
xor
pop
dec
xchg
imul
rcrb
sub
push
cld
lock
jecxz
sarl
push
imul
xlat
frstor
imul
scas
sub
sbb
das
xor
fwait
xchg
or
call
sti
lcall
jo
lods
or
sbb
inc
sbb
lock
inc
inc
fdivrl
rorl
cmpsb
and
add
pop
lds
jle
pushf
mov
jg
ret
jp
pop
pop
and
jns
mov
or
mov
push
push
aam
sbbb
xchg
int
int
adc
idivl
ret
imul
cmpsb
ja
pushf
jbe
xor
ret
out
fldenv
enter
and
in
nop
cmp
icebp
addr16
inc
lds
std
sub
aam
lret
pop
fcmovnu
jp
pop
jecxz
das
scas
cltd
imul
ss
and
dec
jecxz
sbb
mov
in
rcr
test
cli
jns
inc
insl
cs
popf
xor
adc
ret
imul
lods
mov
push
sub
iret
pop
push
xor
rol
pushl
aam
mov
gs
pop
xor
mov
lret
das
dec
iret
ss
push
enter
leave
pop
push
fdivs
pop
sub
mov
fwait
ret
fcoms
lret
mov
jae
inc
frstor
std
sbb
aam
or
mov
mov
movb
leave
ret
int3
lahf
jns
sbb
fdivl
shll
es
lods
insb
lret
adc
test
and
movsb
fs
rorb
dec
mov
jecxz
pop
outsl
mov
sbb
ljmp
divps
or
jecxz
inc
scas
mov
ret
repz
stos
pop
push
lea
mov
push
leave
ret
and
mov
or
inc
cmc
mov
mov
sub
pop
test
dec
adc
andl
and
xor
jbe
ret
pop
inc
adc
jae
ret
ret
loop
add
cmp
enter
out
and
insl
int3
ficoml
cs
pusha
sar
test
xor
or
adc
pop
std
clts
inc
rorb
test
jmp
add
jg
pop
lea
jle
fucomp
movb
inc
stos
jnp
cli
cmp
mov
and
fbstp
fcom
mov
pop
movsl
addr16
leave
dec
or
leave
pop
rcll
inc
or
scas
int3
imul
test
fistl
add
sbbb
jbe
push
lea
popf
pop
dec
fnstenv
push
fst
enter
out
sarb
add
imul
sahf
jmp
iret
sbbb
fdivrs
les
pop
popf
dec
inc
push
in
adc
iret
imul
mov
sbb
mov
dec
pop
adc
push
fdivl
mov
aas
inc
popf
jecxz
add
lods
dec
push
popa
les
xor
sub
xlat
pusha
dec
mov
loope
addr16
and
jmp
in
push
dec
sbb
icebp
push
xchg
mov
out
mov
jge
mov
push
mov
dec
fsts
cli
enter
jne
xor
and
jp
and
pushl
sub
cmp
fcomi
dec
jp
sbb
mov
repz
mov
les
and
xor
jbe
jge
stos
push
stos
fsubrs
pushf
mov
dec
sbb
inc
cltd
fdiv
lahf
jle
add
ss
stc
xor
shr
xchg
inc
mov
andl
outsb
ja
mov
push
leave
das
sti
and
mov
inc
inc
dec
jno
mov
sbb
test
test
pop
sti
push
lods
dec
and
pop
mov
lret
pop
xor
insb
or
sbb
or
dec
arpl
fcmovbe
cltd
push
icebp
sub
stos
ds
and
xchg
mov
add
jmp
int
push
iret
xchg
fisttpll
cltd
cli
int
lods
rcll
imul
fiaddl
shll
lahf
adc
push
inc
in
xchg
fidivrs
lock
mov
inc
cld
movsl
xchg
jmp
pop
mov
sbb
cmp
fistl
cltd
ffreep
loop
dec
lds
stc
jle
out
adc
xchg
add
mov
xor
mov
ds
lods
dec
push
fldcw
imul
sbb
popf
dec
aad
dec
or
gs
cmp
aam
lahf
mov
mov
lods
daa
xlat
stos
int
xor
cmp
and
int
jmp
push
iret
rolb
cmp
jg
cmc
adc
aad
cld
push
xchg
rcr
push
test
aam
ret
neg
adc
pop
aad
pop
xor
dec
stos
stos
sub
jge
sub
mov
fisubl
in
dec
ret
and
fmull
fwait
test
ret
inc
dec
ja
stos
pop
aas
out
popa
fstl
aas
and
fdivrl
or
xchg
pop
ret
sub
outsl
mov
lcall
jecxz
pop
jle
ss
mov
xor
ds
das
ret
push
lds
test
enter
shrb
popa
push
sub
test
fimull
dec
call
test
ja
cmp
test
dec
fstpt
push
test
cmp
mov
cmp
into
lret
test
push
xchg
sbb
lret
aam
mov
pop
mov
cmpsl
inc
sub
sub
and
je
into
roll
pop
sub
xor
jle
ret
inc
lret
push
in
pop
push
jp
push
inc
and
push
jmp
lds
jno
add
aam
shll
lret
out
add
mov
jmp
aas
sub
pop
shl
ret
cmp
dec
dec
and
ret
mov
notb
and
lea
decb
xchg
and
sub
xor
xor
aad
cmc
sbb
jno
mov
mov
test
aaa
dec
mov
sbb
movsl
mov
mov
push
mov
and
add
repz
repz
mov
fldl
movsl
mov
fsub
scas
ror
ds
cli
in
push
mov
loop
and
das
push
lds
and
enterw
hlt
inc
push
mov
add
cmpsl
pop
int3
jno
add
pop
or
in
sbb
push
out
dec
adc
xor
roll
add
stc
int3
movsb
inc
sbb
les
xorl
cs
in
shl
aas
aam
mov
inc
cmp
mov
dec
mov
lea
cmpsl
in
fsubl
xchg
repz
cmpsl
in
sub
fwait
popa
enter
mov
and
sub
out
mov
leave
xchg
aaa
xor
dec
xlat
icebp
enter
aad
jae
pop
pop
pop
test
shll
shrb
push
aad
sbb
stos
enter
js
push
cmpsb
inc
sbb
or
dec
pop
ret
and
xor
dec
mov
sub
roll
addr16
adc
mov
jb
mov
sbb
aad
shrb
scas
fwait
jecxz
sbbb
ds
mov
daa
inc
and
mov
push
fstpl
popa
mov
popa
pushl
mov
es
mov
push
mov
aad
xchg
pop
dec
pop
sub
inc
outsl
fdivrs
ret
rorb
jb
pop
popa
xchg
mov
cltd
pop
jmp
lods
cmp
pop
sti
mov
lret
rcrl
lea
out
xor
fldt
cmpl
sarl
in
subb
sahf
dec
dec
cld
push
jle
and
ja
mov
lret
sti
mov
inc
cltd
ds
push
leave
iret
mov
movb
pop
sub
jp
pop
xor
mov
in
or
pop
or
inc
inc
sbb
daa
pop
jge
ljmp
sti
jg
cli
les
fadd
pop
dec
xor
mov
imul
cld
int3
cmp
int3
jle
xor
aas
lahf
cmp
mov
dec
push
adc
aad
popf
icebp
lret
fistpl
int
pop
test
and
dec
iret
mov
aad
mov
xchg
shrb
jno
inc
mov
cltd
and
or
cs
pop
and
cmpsl
mov
push
mov
cmp
push
outsb
inc
imul
cmpsb
sbb
xchg
adc
pop
sbb
leave
xchg
data16
in
mov
stos
test
mov
and
add
addr16
cld
push
in
inc
dec
cs
sub
lret
pop
fdivl
andb
test
mov
dec
push
mov
pop
jecxz
jecxz
mov
aam
mov
scas
ljmp
cmp
fbld
popf
dec
std
fidivrl
cmpsl
arpl
ficomps
cltd
push
mov
aam
fsubl
movsb
push
cmp
mov
ljmp
std
ret
cmpsb
mov
leave
aam
loope
loop
jle
ror
in
popf
into
sbb
enter
or
test
leave
and
scas
and
or
lret
sub
dec
sti
ret
jge
mov
jnp
outsl
dec
and
dec
aas
lods
sbb
subb
es
push
inc
cmp
xor
cmp
movsb
xchg
pop
jnp
ret
sbb
mov
xchg
leave
inc
add
jno
and
das
mov
pop
mov
test
jnp
test
push
jnp
mov
cltd
aad
std
xchg
xlat
cld
cmp
jmp
jg
or
inc
dec
sbb
sbb
sub
sub
fiaddl
dec
insb
mov
fisttps
pop
shrl
jns
int3
xchg
sbbl
cmpsb
add
inc
sbb
mov
dec
mov
std
sbb
xchg
popa
test
pop
pop
into
lret
xchg
and
ret
sub
mov
mov
setns
xor
xchg
fbstp
push
pop
or
mov
in
jecxz
imul
test
fwait
xchg
dec
mov
loopne
sub
popa
out
test
aaa
or
jecxz
ds
add
inc
adc
sbb
lret
and
mov
push
insl
mov
or
inc
lea
mov
push
fists
es
inc
call
and
fdivrl
call
popf
push
mov
outsl
ss
adc
pusha
cmpsb
cmp
pop
mov
rep
fcoml
sti
and
sti
int3
push
sub
jae
imul
xchg
xlat
xlat
cmp
xchg
pop
jns
lods
xchg
les
xchg
out
pushf
bnd
loop
and
xchg
mov
and
inc
test
sbb
call
pop
push
ret
daa
xchg
and
call
orl
loopne
shr
push
mov
dec
lods
sub
push
popa
or
pop
movb
out
icebp
mov
subl
push
nop
or
adc
jne
repnz
add
negb
push
ja
push
jmp
mov
into
stos
enter
leave
sbb
inc
dec
imul
sbb
movsl
mov
add
jnp
cmp
ja,pn
mov
cmpsb
fwait
dec
rcrl
fdiv
shrl
pop
out
stos
xor
ret
sub
pushl
or
xor
out
dec
add
popf
xor
aad
int3
fwait
cmp
cs
ljmp
dec
repnz
fcoms
mov
sbb
fstl
mov
sbb
jge
inc
push
pop
pop
and
data16
imull
aam
jne
les
dec
movsl
add
xor
popf
jl
mov
out
ficomps
sub
cmp
inc
dec
or
cmpsb
shr
rolb
inc
sbb
xchg
arpl
sti
jne
mov
imul
inc
ret
cmpsl
mov
imull
fistpl
rol
or
sub
cmp
sbb
jle
xor
mov
xor
out
jne,pt
and
gs
loopne
lods
dec
repz
sti
xlat
sbb
jge
in
mov
add
mov
mov
xor
jns
sbb
stos
or
addr16
push
pop
xlat
mov
xchg
jmp
push
inc
imul
movl
pop
sahf
lock
movsl
jge
xorb
xchg
gs
cmc
popl
mov
pop
sbbl
inc
pop
loope
push
lahf
adc
ja
out
ret
xor
sub
add
jnp
jecxz
mov
adc
push
mov
fstpl
mov
jo
inc
test
jb
jg
sbb
aas
push
and
dec
xchg
out
daa
aaa
push
and
imul
into
jnp
and
mov
stc
mov
push
fsubrs
dec
lret
jp
and
cmpsl
push
inc
aad
ret
decb
repz
cmpsb
mov
xchg
js
test
rolb
xchg
test
and
push
ret
lahf
stos
mov
jb
jne
ljmp
xor
jo
mov
sbb
and
ljmp
sbb
sbb
and
sub
adc
jmp
ljmp
iret
aad
mov
fsubrs
stc
outsl
stos
imul
mov
out
adc
fsubrl
inc
outsb
fidivl
xchg
xor
lods
add
push
clc
movsb
xlat
int3
jp
ds
push
fwait
sbb
repz
pop
push
fisubrl
bound
sbb
mov
popl
or
repz
lds
imul
jmp
ret
xchg
ror
xchg
push
ret
movsl
add
decb
into
mov
or
ret
jnp
gs
push
andl
fbstp
adc
in
lods
push
ret
rcrl
ret
lods
pop
ret
cwtl
popf
jecxz
or
divb
test
jecxz
add
movsb
jno
push
push
scas
sti
sbb
movsb
dec
fcomi
and
jmp
sbb
xlat
aaa
xor
sbb
adc
lods
popa
pop
mov
sbb
fdivs
iret
xchg
pusha
ret
pop
jmp
imul
out
add
xlat
mov
leave
gs
fcmovne
mov
sub
imul
sub
dec
cmp
sub
in
mov
ljmp
lds
dec
enter
xchg
jmp
sbb
in
stos
jecxz
cmp
lret
rcrl
int
mov
fidivrl
sbb
repz
aam
pop
mov
insl
imul
xchg
sub
aas
cmp
fisttpll
jbe
mov
sbb
aad
jbe
adc
and
mov
xlat
pop
int
cmp
inc
and
push
jbe
mov
outsl
pop
jmp
shl
dec
cmp
mov
outsl
in
into
cs
jge
outsb
aad
ror
xlat
mov
pop
xchg
jmp
add
repz
inc
mov
inc
insb
test
das
lea
sub
pop
mov
jb
sub
repnz
xchg
fmuls
pop
push
push
mov
xchg
pop
fldl
inc
rol
fidivl
pop
in
dec
das
lea
lea
lret
dec
fs
or
cmp
aam
sbb
es
jg
std
add
jmp
jb
or
mov
push
arpl
repnz
xchg
fsubl
pop
pusha
test
jne
mov
fisttpl
repz
cltd
dec
test
mov
arpl
shlb
sbb
sub
add
xor
fwait
rorl
sar
cltd
in
int3
leave
pushl
loope
sub
mov
fwait
data16
enter
mov
push
inc
int
push
mov
sbb
mov
dec
lcall
lea
pop
mov
shr
sar
push
pop
lcall
jb
sbb
cwtl
ret
sbbl
mov
pop
ljmp
rorl
xchg
out
test
les
mov
les
add
imul
and
mov
mov
adc
stos
addl
xchg
dec
mov
lea
mov
imul
data16
repz
scas
mov
cmp
mov
ja
test
mov
movsl
fnstenv
jae
rcrl
in
aad
loop
addr16
mov
ljmp
jp
mov
xchg
mov
and
dec
andl
repz
jnp
xor
push
out
push
inc
fmuls
cmp
stos
inc
sbb
dec
lret
int3
js
ror
dec
mov
mov
fwait
out
cmc
call
aas
lret
cmp
xor
mov
loope
jle
in
jp
mov
and
pusha
test
clc
mov
sub
loope
negl
shl
push
in
std
inc
fdivrs
data16
sbb
xchg
mov
adc
ficoml
inc
mov
and
sub
lea
add
aaa
fstpl
fs
pop
daa
movl
or
pop
mov
adc
pop
lret
cmp
adc
jmp
pop
stc
sub
stos
in
in
push
xor
movsl
arpl
mov
mov
ret
and
sub
inc
icebp
lret
insb
daa
iret
mov
arpl
sarb
stos
int
neg
outsl
push
jns
test
aad
jecxz
jge
jmp
cli
aad
sti
sbb
adc
out
sbb
pop
in
push
fldpi
adc
shrl
adc
sub
and
and
mov
or
xor
popa
push
jno
dec
dec
xchg
mov
mov
mov
pop
or
jo
xor
or
cmpl
sub
ds
or
pop
mov
pop
jnp
or
xor
call
inc
es
mov
xor
daa
cmpl
ret
and
add
rcrl
leave
mov
or
push
xor
ja
cs
std
pop
sbb
daa
jecxz
int
add
inc
push
fcompl
push
dec
repnz
fstl
inc
or
fcmovb
sbb
adcl
ja
pop
cmp
out
cmpl
pop
sbb
pop
pop
fsubl
out
or
repnz
lcall
sbb
rcrl
in
xchg
fdivrl
jae
mov
int
jle
xchg
fldl
xlat
fcompl
imul
jno
inc
push
push
inc
dec
or
inc
cwtl
imul
nop
outsb
add
test
sti
push
nop
pop
adc
sbb
mov
push
mov
or
arpl
imul
scas
ficompl
inc
cmp
inc
push
push
sbb
out
addr16
sti
stos
cmpsl
mov
cli
or
adc
pusha
xchg
mov
add
aaa
repz
sub
cmpb
and
dec
xlat
and
sub
cmp
adc
clc
iret
and
imul
add
and
and
sbb
jle
or
sbb
add
jno
fidivrs
mov
xchg
cmpsb
rorl
cltd
lods
mov
cmp
lea
push
sbb
ficoms
push
rol
add
divl
dec
andl
xchg
cmp
sti
xchg
or
stos
add
sti
dec
movsl
ja
sbb
inc
fwait
daa
adc
push
scas
lcall
mov
inc
cld
pop
adc
xchg
aas
mov
and
fimull
xchg
jecxz
inc
pop
jo
add
enter
ja
test
andl
inc
dec
mov
mov
pop
and
cwtl
iret
dec
cltd
scas
push
xchg
pop
into
movsb
push
cmp
lods
loope
xchg
cmpsl
lea
mov
dec
mov
decl
test
ja
mov
and
dec
inc
shrl
sbbl
in
icebp
test
dec
and
jg
lock
jmp
cmp
pop
pop
mov
fisubrs
popa
outsb
testl
sub
test
dec
enter
pop
cmpsl
push
add
jge
add
and
inc
jmp
test
and
fstpl
fdivrp
add
xchg
mov
pop
mov
pop
xchg
xor
fisttpl
inc
lods
mov
jp
xlat
dec
adc
roll
icebp
cld
lcall
in
dec
movsb
dec
loopne
push
dec
inc
add
jnp
jmp
dec
fisttpl
mov
sbb
fisttpl
sbb
aas
add
xor
sets
dec
insb
or
jnp
arpl
pop
mov
inc
ret
dec
jmp
mov
out
add
inc
sbb
scas
xlat
shlb
jg
jle
push
popa
lds
ss
arpl
paddsw
imul
stos
fwait
mov
loope
sahf
test
stos
in
enter
in
insl
cli
lock
jle
xchg
insl
mov
pop
into
leave
repnz
jmp
sbb
mov
or
cmp
loop
ljmp
or
int
out
cld
or
nop
sbb
push
popf
sub
adc
int3
cmp
or
mov
lods
add
inc
testl
sar
push
pop
inc
mov
push
imul
xor
enter
or
jne
add
jns
mov
fsubr
setl
int
mov
mov
dec
mov
int
xor
dec
dec
imul
aad
mulb
pop
mov
xlat
adc
popf
push
mov
mov
push
xorb
fldt
lret
pop
test
addb
adc
push
arpl
rclb
dec
xlat
and
dec
or
jae
ss
out
fidivl
add
arpl
xor
roll
mov
or
enter
adc
sub
jnp
testl
mov
add
imul
inc
in
aas
sbb
sub
imul
pop
jecxz
adc
repz
daa
or
xchg
add
addl
push
scas
fisttpll
adc
push
test
jae
cli
sub
add
test
negl
adc
push
xchg
add
inc
push
arpl
push
daa
mov
mov
lea
iret
sti
clc
into
jg
out
je
ljmp
jae
je
and
sbb
jmp
adc
jg
stos
in
iret
orl
fmuls
mov
pop
testb
lock
jae
jecxz
mov
sti
push
lods
cmp
xchg
jnp
dec
les
push
dec
outsb
add
dec
cld
add
xor
xchg
pop
imul
out
pop
fisubs
dec
push
inc
imul
test
imul
cld
les
and
int
pop
lcall
mov
pop
test
enter
sbb
pop
mov
lea
test
imul
stos
stos
push
int
ret
jo
ret
jge
out
outsl
pop
in
ret
sti
jle
cmpsb
aas
dec
fisttpll
in
jmp
aad
out
ret
shrl
dec
popf
sub
mov
jmp
mov
popf
stos
mov
push
lods
adc
mov
fsubl
out
sub
lcall
js
adc
rorl
jecxz
jg
stos
lea
aam
mov
cmpsb
lea
dec
rorl
pop
xchg
roll
xor
lods
rclb
dec
mulb
test
sub
loope
jecxz
cmp
and
out
jl
jmp
jno
scas
cwtl
sub
adc
and
fstps
aad
lahf
and
andl
pop
loope
mov
push
daa
int3
popa
or
add
jl
loopne
gs
add
bound
add
pop
fs
out
pop
vfrczss
xlat
andl
sub
fstps
sbb
icebp
enter
dec
aad
xor
gs
push
jnp
cmp
and
xchg
mov
dec
jnp
dec
xchg
pop
pop
jle
mov
and
or
push
push
out
imul
sub
lret
pop
sbb
mov
sub
pop
lods
stos
pusha
movsb
int
mov
cmc
or
xor
movsl
mov
int
hlt
fcmovb
shl
or
fistpl
sub
fldl
mov
inc
and
in
faddl
out
mov
in
and
fsub
out
xchg
ret
stc
pop
sub
xchg
inc
cmp
fdivrl
pop
push
in
xor
fadd
inc
cmp
lock
mov
jmp
inc
insb
int
rol
mov
xchg
inc
ret
fiadds
aam
fildl
into
mov
shr
es
out
dec
out
call
roll
mov
or
sti
jle
fildl
test
xor
dec
das
lret
iret
or
mov
das
or
xor
fildl
dec
add
loop
stos
add
sbb
movsb
or
das
mov
shrb
fnsave
outsl
dec
dec
jno
pop
outsb
or
lods
das
and
sti
xchg
es
ret
lcall
sub
push
int
xchg
orb
jmp
jecxz
call
stc
mov
ret
pop
sti
in
lds
fadd
out
sbb
fnstsw
shl
mov
fistpl
jecxz
in
loop
ret
push
mov
dec
add
imul
addr16
sti
imul
jge
loop
sti
pop
adc
inc
repz
mov
lret
int3
fistl
mov
enter
pop
in
out
test
cmpsl
jmp
mov
or
mov
in
pusha
inc
sti
sar
inc
insl
in
ret
ret
insl
faddp
fbstp
and
in
pushf
mov
les
xchg
int
rorb
cmpsb
loope
mov
mov
loop
push
fisttpl
ret
icebp
int
dec
or
scas
jmp
xor
and
in
adc
fsubl
push
orl
in
xchg
xchg
loop
ljmp
xchg
inc
xor
fsubl
out
sbbl
jae
arpl
xchg
mov
jecxz
fistpl
mov
add
jb
pop
push
int
sti
cld
jge
push
ret
xchg
cli
int
cld
hlt
push
push
fmul
sub
sub
imul
dec
xor
adc
cltd
xchg
mov
jmp
sti
sub
ja
cmp
loopne
movsb
frstor
sub
or
stos
fisttpll
adc
jle
xchg
inc
fisubs
jg
insl
add
int
gs
xor
lret
dec
out
cmpl
xchg
pop
bound
cltd
sti
xchg
mov
fcmovb
fistl
sub
ficompl
xlat
sbb
imull
inc
push
fninit
xchg
jnp
dec
inc
popl
add
sub
jno
inc
mov
sub
dec
std
aad
xchg
fwait
iret
mov
adc
repz
mov
pop
ret
xchg
loop
jae
mov
jno
dec
out
sbb
add
jmp
call
cmpsl
adc
std
stos
dec
mov
pop
aad
sti
pop
test
lds
popf
xchg
sti
shrl
or
inc
imul
mov
jno
inc
cmpsb
int
and
ffree
or
shrb
mov
push
fwait
popa
out
incb
lea
and
sbb
insl
cmc
call
adc
aad
mov
jecxz
jbe
push
pop
pop
cmpsb
ljmp
xchg
xor
sti
mov
dec
scas
int
sub
cwtl
mov
andb
popf
ret
sbb
sub
lret
ljmp
lahf
out
lds
test
sbb
dec
pop
fwait
push
mov
adc
insb
xor
imul
push
jl
sbb
movsl
std
sbb
fwait
push
jle
sbb
adc
das
test
lret
push
and
negb
and
push
inc
dec
and
mov
adc
lea
dec
jl
jg
sub
test
push
ljmp
sub
rorb
mov
mov
movl
dec
jmp
stos
add
mov
adc
mov
xlat
and
jmp
test
xchg
leave
fildl
out
fcmovnb
jmp
push
and
and
decl
xor
fldt
mov
cmp
xor
jmp
faddp
jo
cmp
int3
cmp
mov
jmp
inc
stc
jnp
ror
push
stos
jb
dec
jns
mov
fimull
xor
lods
int
mov
dec
sub
sbb
test
in
ret
and
push
dec
ret
push
lods
into
test
cs
ret
mov
mov
jmp
lcall
adc
push
inc
or
cmp
stos
daa
xlat
and
icebp
or
sbb
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lods
daa
frstor
stc
pop
lea
mov
push
or
push
adc
push
push
push
or
dec
fbld
inc
test
dec
imulb
or
test
pop
adc
push
and
cmp
ret
mov
mov
mov
mov
mov
mov
mov
mov
iret
fwait
movsl
dec
dec
addr16
pop
ror
push
mov
push
push
push
jl
or
push
push
push
xor
rcrl
test
dec
scas
push
clc
sub
sub
adc
cmp
xor
shll
xchg
adc
dec
and
pop
xor
xor
xor
xor
mov
mov
xor
push
mov
iret
fnstsw
or
sar
push
push
shlb
jo
iret
mov
dec
mov
rol
push
pop
shlb
outsb
push
es
mov
sti
push
sub
aaa
push
inc
enter
ljmp
ja
sub
and
mov
mov
and
cmp
adc
push
dec
push
lds
mov
push
dec
insl
push
les
in
sub
sub
bound
jbe
push
sub
leave
lods
popf
add
sub
and
cmp
xor
push
xor
andl
mov
mov
scas
sub
mov
lock
cwtl
das
test
mov
pop
or
mov
mov
iret
shrl
jae
adc
daa
push
das
ror
push
push
outsb
dec
lea
push
push
mov
enter
call
add
lahf
iret
call
inc
repz
out
push
iret
mov
sarb
dec
xlat
mov
dec
test
dec
sbb
or
sub
sub
sub
sub
sub
sub
mov
add
sbb
lock
mov
lock
mov
mov
addl
lret
inc
xchg
add
push
or
mov
pop
test
cmp
sbb
sub
cmp
cmp
cmp
cmp
cmp
cmp
mov
repz
aaa
xchg
xor
mov
mov
mov
mov
xorl
repnz
xor
mov
lock
lock
lock
lock
lock
lock
lock
divl
fwait
add
pop
movsw
push
inc
mov
or
rcrb
jno
fadd
in
and
hlt
add
inc
jecxz
adc
out
inc
lock
icebp
jnp
or
and
lock
lock
lock
call
pop
add
mov
inc
sbb
je
lds
fwait
add
push
es
pop
aam
call
mov
pop
push
cmp
or
divl
cmpsl
out
mov
dec
lock
icebp
data16
or
sbb
lds
stc
out
movsl
out
mov
lock
lock
and
in
scas
out
cli
inc
lods
or
ret
jbe
xchg
in
inc
pop
xchg
mov
push
dec
sbb
and
leave
leave
cmpsl
xlat
out
sbb
sbb
sub
stos
iret
test
mov
lods
rorb
jo
adc
outsb
fisttpl
into
mov
push
or
and
lret
out
mov
mov
cmp
xor
das
sub
es
into
jecxz
jg
dec
into
sbb
push
xor
inc
ret
mov
cmpb
add
mov
jno
add
sbb
mov
add
add
add
add
add
add
add
or
mov
imul
mov
inc
or
sub
sub
sub
sub
es
addb
inc
and
cmp
xor
bound
or
add
sbb
adc
outsl
out
and
imul
xor
stos
mov
out
lcall
addl
or
mov
pop
pop
insb
arpl
rclb
mov
push
pop
sbb
bound
ss
sub
shrl
mov
inc
fists
imul
xor
add
add
rolb
inc
repz
inc
mov
outsl
add
and
ret
test
repnz
dec
or
mov
mov
or
mov
mov
scas
and
lret
shl
ljmp
lock
xor
lock
lock
loopne
push
mov
push
dec
push
inc
push
pop
push
push
push
push
bound
push
jb
or
push
sbb
push
sub
sbbl
hlt
fcomi
shr
jmp
mov
xor
loop
or
das
mov
outsl
mov
mov
adcl
mov
inc
inc
dec
aas
je
jecxz
jge
mov
sahf
inc
mov
xlat
cmc
insb
push
es
and
push
daa
in
inc
dec
fistpll
das
bound
lods
test
mov
aad
ret
int
dec
sub
push
xchg
dec
dec
ror
popa
imul
and
or
add
icebp
cmp
jo
mov
sub
cmc
xchg
push
pop
js
iret
jp
dec
or
xchg
pop
popa
adc
sub
in
sub
shld
or
inc
jb
push
mov
mov
movsb
pop
iret
mov
nop
push
push
mov
leave
bound
and
lcall
movsb
dec
stos
insb
mov
stos
push
fs
sub
sub
stos
push
iret
adc
movsb
or
sub
sub
ret
leave
in
pop
subb
dec
or
inc
fnstsw
ret
xor
out
push
ret
inc
insl
ret
in
addr16
cld
imul
in
test
jb
jmp
popa
jmp
jge
pusha
mov
jae
cmp
testb
pop
or
mov
adc
mov
lods
scas
movsb
cmpl
jecxz
test
adc
leave
fcompl
ror
lods
mov
dec
mov
movsb
push
cmp
mov
adc
cmp
add
pop
fwait
cmp
filds
es
adc
icebp
sub
add
mov
push
dec
pop
fwait
sub
cmp
add
or
mov
jmp
cmpsl
popf
es
jo
hlt
mov
sbb
push
loop
jge
push
xchg
aaa
sbbb
cmc
idivl
insb
setne
movsb
mov
imul
call
mov
mov
les
dec
mov
and
lods
pop
push
data16
push
push
mov
pop
out
xorl
dec
pushf
shlb
rcrl
fs
inc
jecxz
mov
lcall
mov
pop
xor
add
add
ret
mov
shlb
cmpsb
or
pop
rorl
js
cmp
mov
mov
jnp
mov
sbb
xchg
xlat
shrl
dec
outsb
sbb
in
mov
lea
shll
lret
mov
push
mov
into
pop
dec
mov
add
ret
pop
xor
push
mov
pop
lods
push
je
gs
inc
cmp
or
stos
add
sub
mov
repz
movsb
sbb
lea
movb
lds
mov
cmp
push
leave
or
jecxz
push
out
dec
push
sahf
nop
scas
adcl
imul
push
mov
sahf
sub
push
ret
xlat
dec
mov
mov
inc
adc
inc
inc
jno
lds
cld
cwtl
stos
bound
insl
stos
mov
fwait
sub
lret
mov
outsl
mov
jb
jo
jae
pop
mov
fcmovnu
mov
or
insl
sti
pop
sbb
pop
lahf
ds
jo
lods
sti
dec
and
pop
mov
cmp
jnp
or
dec
cmp
sub
push
mov
and
mov
testb
xor
movsl
aas
push
ret
sbb
inc
jb
inc
inc
mov
stos
imul
cmp
sahf
ss
mov
sbb
sbb
pop
push
push
daa
xchg
mov
and
mov
fwait
js
int3
icebp
insb
and
push
inc
inc
or
jb
cmp
mov
mov
iret
fwait
scas
int3
adc
add
mov
xchg
sbb
movlps
and
imul
dec
imul
dec
cli
mov
mov
xchg
idivl
in
fdivr
repnz
inc
mov
scas
adc
push
jne
adc
rcrl
cmp
test
movsl
jecxz
aaa
mov
stos
loope
add
push
or
mov
and
stc
in
xchg
aas
das
pop
add
pop
mov
and
mov
popf
add
inc
inc
xchg
adc
imul
leave
stc
aad
cmp
dec
push
pop
pop
and
pop
fwait
xchg
roll
mov
gs
jno
adc
or
mov
lcall
dec
xor
add
lock
add
push
decb
cmpsl
jno
add
sbb
mov
or
icebp
adc
jg
popa
add
mov
mov
jmp
dec
lods
pavgw
addr16
lods
adc
imul
lret
aas
test
and
lods
mov
dec
push
testl
cmpsl
lods
je
xor
cs
or
cmpsl
test
mov
fisttpll
inc
aas
adc
xchg
dec
xor
inc
cltd
mov
sub
and
les
in
inc
ret
mov
fsubl
xor
pop
cmp
xor
mov
imul
jmp
add
jne
arpl
and
push
cld
add
inc
xchg
jo
outsb
ret
sbb
pop
fstpt
movl
in
push
pop
sub
sub
ljmp
sti
jmp
jle
out
mov
push
js
dec
mov
arpl
ret
or
pop
push
iret
out
sub
and
aas
sbb
xor
stc
pop
out
and
sbbb
loop
mov
pop
adc
jg
push
xchg
sbb
adc
repz
daa
push
adc
dec
inc
idiv
sub
inc
pushl
notl
mov
and
dec
or
pop
call
cmp
mov
push
test
int
pop
adc
jge
ret
in
movsl
xlat
sbb
pop
outsb
data16
mov
inc
arpl
hlt
pusha
mov
pop
sbb
dec
fprem1
dec
popa
roll
push
cli
pop
jns
popa
fstps
test
addb
enter
xchg
fwait
popa
mov
sbb
les
je
inc
and
repnz
je
push
test
mov
xchg
aam
negl
addb
sbb
xchg
loope
mov
or
fsubr
adc
outsl
das
and
mov
jmp
jmp
inc
dec
mov
jecxz
out
cmovae
iret
loopne
add
popf
test
imul
xchg
mov
gs
pop
xchg
out
fs
insb
xchg
xchg
dec
loope
mov
add
xchg
cmpsb
mov
cltd
mov
mov
mov
jo
stc
rcll
js
inc
cmp
idivb
jo
sbb
repz
jmp
push
cltd
adc
int
frstor
jae
bound
scas
jnp
les
add
xchg
mov
daa
dec
or
fisttpl
inc
mov
pop
popf
int
push
and
ret
imul
leave
in
and
in
inc
in
add
shl
fwait
dec
jge
mov
inc
iret
ret
inc
jae
popf
stos
jbe
push
sbb
mov
repz
xlat
lcall
aaa
addb
repnz
mov
mov
pop
pop
dec
dec
imul
gs
pusha
or
dec
or
cmp
jae
rorl
nop
jge
add
fcomi
sbb
jne
adc
cmp
bndstx
or
xor
lret
ud2
dec
aam
fcmovnb
dec
pop
jae
add
jnp
or
shrl
fidivl
imul
shrl
aas
enter
or
scas
cmp
dec
mov
pop
fwait
push
nop
xchg
sub
pop
mov
adc
cmp
add
mov
mov
cmp
dec
cmp
adc
add
fistl
pop
cli
sbb
imul
fwait
add
ja
stos
pop
imul
inc
ret
push
mov
pushf
rorb
imul
and
sbb
dec
repnz
xor
test
xchg
dec
mov
ja
shl
inc
mov
cli
jge
dec
mov
rcrl
cld
jne
or
and
cmp
scas
adc
hlt
mov
cmp
mov
sub
clc
shrb
movsl
sahf
loopne
into
enter
or
mov
or
sti
insl
fxch
lret
and
out
shll
pop
mov
cmp
sub
jecxz
js
adc
sub
scas
xlat
adc
scas
fsts
mov
xor
icebp
pop
lahf
dec
sar
or
leave
loopne
mov
lods
sub
sti
je
jo
jnp
cmc
jb
pop
scas
fwait
push
rorl
scas
enter
or
int
inc
or
and
sub
xor
inc
orl
xlat
sarl
insl
and
ljmp
and
mov
sar
push
out
pop
sbb
push
enter
lods
dec
leave
sbb
fldcw
and
push
push
mov
stos
lea
jmp
and
movsb
scas
jge
fcomi
cmp
repnz
dec
adc
add
leave
loopne
cmp
xor
cli
or
imul
cmc
sbb
lret
xchg
push
add
inc
add
shlb
int3
and
push
inc
lret
or
inc
aam
je
repz
shll
std
cli
mov
mov
and
lea
sub
xchg
pop
lds
push
lds
push
fdivr
xor
int
and
and
fiaddl
xchg
cli
mov
lret
inc
mov
loope
mov
inc
int3
dec
ja
push
lcall
jmp
in
addr16
push
jg
pop
push
icebp
jmp
sbb
push
pop
adc
dec
loop
bound
loope
mov
fsubp
xlat
insb
pop
pop
adc
lcall
sbb
scas
cmp
imul
mov
insl
pop
lcall
lds
mov
bound
xchg
adc
lds
or
jns
sbbl
jmp
and
int3
dec
dec
fwait
inc
addr16
aas
xchg
sti
outsb
repz
sub
cmp
and
sub
and
or
es
stos
into
jle
lret
hlt
repnz
insl
inc
lret
sbb
int3
xchg
or
sub
les
and
mov
dec
sub
out
inc
bound
hlt
inc
mov
mov
pop
mov
sbb
cmp
pushf
xor
outsl
shrb
stc
sbb
mov
sub
ficompl
push
jl
idivl
ss
jg
xchg
xor
sbb
or
mov
orb
push
sbb
sbb
test
push
imul
bound
popa
stos
push
pop
push
push
andb
fsubrl
hlt
jae
sarb
and
push
sti
into
lret
push
add
or
push
pop
pop
bound
shrb
test
ret
inc
push
cmpl
stos
lods
cli
adc
sub
mov
aas
fwait
mov
xchg
xchg
lcall
shll
sti
and
and
sub
int
push
lahf
stos
sub
push
cld
pop
repz
jmp
call
cli
sub
pop
lret
sbb
and
dec
stos
jnp
lret
sbb
sbb
or
sub
dec
sbb
pusha
lods
xor
inc
pop
inc
std
jp
jl
dec
dec
cmp
sarb
fwait
mov
repnz
push
mov
jle
ljmp
lea
daa
cmp
fcmove
subb
hlt
jmp
cmpsb
std
sub
mov
stos
fwait
int3
ror
pop
inc
xor
mov
sub
ffree
xor
cli
xor
push
push
xor
sti
sbb
cli
add
aad
stos
add
mov
ret
pop
pop
push
mov
hlt
xchg
loope
mov
sti
pop
mov
xor
adc
sbb
sub
dec
mov
pop
scas
pop
bound
out
add
lret
mov
lret
cmp
adc
ljmp
and
sarl
ljmp
dec
lret
or
lcall
inc
and
bound
popf
int3
or
mov
xchg
mov
out
or
popf
pop
stc
sbb
mov
stos
xchg
repnz
mov
mov
xor
lods
into
fdivrl
fcmovb
rcr
aaa
cmp
sub
push
sbb
ret
lods
xor
sti
xor
sub
loop
ret
pop
mov
push
mov
pushf
jle
out
nop
jno
xlat
inc
hlt
push
js
inc
subl
jb
ljmp
adc
out
iret
jnp
cmp
jp
dec
push
mov
inc
imul
repz
cli
cmp
dec
cmpl
cmp
scas
shlb
and
mov
fistl
adc
cmp
sub
xor
and
fcmovbe
imul
ljmp
dec
cwtl
mov
xchg
lds
scas
dec
iret
cli
inc
jl
push
repz
bound
jo
dec
jp
pusha
dec
sarb
jmp
push
je
sbb
sbb
icebp
dec
mov
mov
adcb
rorl
jmp
mov
fdiv
lret
rol
xor
add
or
sbb
cmp
sti
mov
push
cmp
scas
fcmovu
clc
in
enter
lcall
lret
mov
test
inc
scas
mov
dec
dec
lret
push
sbb
ljmp
fwait
call
ljmp
mov
dec
mov
scas
dec
or
aad
jle
dec
dec
inc
in
mov
sub
cld
mov
stos
fadd
stos
ret
cli
int
lret
cmp
push
daa
mov
xor
mov
aam
ret
jp
out
mov
cmpsb
mov
testb
ds
lret
pop
add
int3
cmp
ret
jo
add
mov
jae
es
lret
int
dec
pop
arpl
mov
mov
sbbb
hlt
cld
lcall
lret
fistpl
add
sub
mov
cmp
cmp
add
xor
pop
dec
test
lods
mov
lret
dec
jb
dec
mov
sub
xor
adc
mov
cli
and
or
lret
int3
fucom
leavew
jecxz
push
fistps
inc
pop
sti
test
sarb
xchg
dec
sub
pop
daa
pop
mov
jecxz
cli
inc
jg
push
mov
fcmovu
jnp
cmp
cli
fucomi
das
aaa
sub
or
lret
stos
ljmp
inc
or
sbb
loopne
pushf
lcall
mov
stos
jb
pop
push
ret
or
sub
push
cmp
outsb
mov
in
adc
ljmp
or
stos
fdivp
lds
add
les
lcall
fstl
int3
mov
sbb
lret
cli
lret
cmp
adc
sbb
add
or
je
inc
push
mov
xchg
sub
push
frstor
leave
add
repnz
inc
out
mov
pushf
notb
scas
pop
add
lahf
jmp
jnp
and
jbe
pop
stos
pop
arpl
sub
iret
inc
dec
adc
push
int
divl
pop
lods
mov
repnz
dec
and
ljmp
ret
fsubrl
test
inc
pop
sbb
jge
mov
and
ficompl
xchg
or
sbb
stos
adc
adc
jb
sbb
push
sbb
pop
ljmp
jp
inc
sti
fs
push
js
or
sbb
ljmp
imul
pop
fistpl
dec
addb
inc
lret
int3
push
mov
jo
cli
lret
inc
stos
mov
enter
lret
daa
mov
lret
lock
xor
inc
mov
dec
jae
imul
fcmovnu
and
jg
push
jmp
jmp
adc
push
inc
push
pop
cmp
sbb
lret
or
jp
rcrb
movsl
xchg
cmp
fwait
sbb
lcall
jmp
es
test
mov
int3
xor
fsubs
pop
cmp
jecxz
bswap
ja
outsl
cmc
lret
ret
js
jo
push
int
es
sbb
xchg
outsb
sub
pop
into
push
cli
dec
or
add
and
push
adcl
lret
mov
push
ja
dec
fcmovnbe
pop
jg
mov
shrb
inc
mov
cmpl
mov
repnz
imul
xor
mov
mov
shl
jmp
xlat
nop
push
cwtl
mov
mov
and
mov
jp
fsts
lods
inc
aaa
jp
and
fucompp
sbb
inc
cwtl
dec
or
push
cmpsl
negb
ret
push
in
cmp
mov
pop
daa
cmp
push
jnp
sti
jecxz
aad
jmp
in
pop
adc
mov
in
mov
loopne
stos
jnp
xor
mov
or
xor
incl
fwait
sub
aaa
sbb
adc
es
inc
xlat
dec
dec
inc
fldl
xchg
jbe
push
jmp
dec
das
inc
mov
sub
ret
repnz
rcr
adc
repz
scas
out
repnz
fwait
imul
mov
cmp
jnp
subl
fstps
xor
mov
sbb
add
dec
jmp
es
jbe
pop
lret
or
mov
pop
jp
jae
mov
sbb
mov
jecxz
int3
mov
xchg
jecxz
jnp
and
orb
inc
cli
ss
mov
js
sbb
mov
pop
lret
repz
stc
sub
push
insl
movb
and
pop
xor
mov
adc
lret
cmp
sub
repz
mov
jp
jbe
fwait
lds
arpl
sub
movsl
data16
cli
xorl
jmp
das
jnp
test
push
daa
sarl
adc
loope
out
or
add
lret
stc
jo
cmp
sbb
cmp
out
add
dec
bound
mov
fxch
sub
cmp
sbb
ja
jae
adc
fsubr
pop
add
in
ret
fdivrl
inc
mov
adc
aaa
in
sub
pop
mov
rcll
enter
sbbl
fdivl
not
mov
mov
inc
pop
sbb
test
lcall
push
xchg
iret
loop
jno
and
lret
cmp
xchg
pop
or
or
lret
mov
add
dec
popa
jnp
sub
imul
add
fistpl
sbb
dec
xchg
pop
cmp
fldcw
push
or
add
mov
jno
ret
or
lret
out
pop
fucomi
int
in
loopne
mov
repz
enter
das
in
mov
mov
add
push
frstor
int3
cmp
add
inc
cmp
sbb
jne
dec
pop
addr16
es
enter
or
fstpl
stos
imul
sahf
stos
fdivl
int
das
popa
ficoml
ret
int3
cmp
ds
push
fst
fcmove
stos
jmp
pop
subb
icebp
mov
cmp
fwait
fwait
mulb
jne
adc
out
jecxz
or
sbb
icebp
pop
addr16
xlat
jge
ret
ja
fcmovnb
enter
xchg
loopne
loope
ljmp
adc
xor
and
enter
or
push
shll
or
aas
jp
push
jmp
mov
pop
mov
outsb
sbb
and
adc
mov
sbb
sbb
cmp
jge
jp
and
insl
cmp
pop
inc
ljmp
jge
loop
outsl
imul
insl
pop
mov
jbe
ret
mov
adc
dec
andb
mov
cmp
xor
ret
shlb
stc
or
in
inc
cmp
cmp
jnp
sub
sbb
sub
iret
and
add
jno
addb
gs
jp
cmp
cmp
in
add
jno
push
push
mov
stos
dec
inc
leave
inc
jb
outsb
movsb
push
imul
lods
mov
sarl
dec
sbb
push
sub
into
scas
es
push
fs
xchg
pusha
dec
pop
dec
xchg
push
movsb
mov
push
faddl
and
sbb
pop
dec
pop
cmp
sbb
lea
leave
inc
mov
rcr
stos
push
mov
push
inc
pushf
test
cmp
in
mov
xor
inc
mov
es
sub
mov
mov
dec
or
mov
rcrl
cs
or
std
aam
mov
xor
inc
mov
pusha
add
mov
xor
push
aad
in
jmp
xlat
fisubl
aaa
inc
aad
lea
dec
iret
xchg
mov
mov
push
adc
inc
mov
lock
cld
mov
lret
test
dec
inc
lods
scas
add
lods
stc
insb
jmp
ret
popf
dec
int
add
popa
addb
in
fnsave
imul
stos
and
repz
andb
call
mov
sub
in
sub
mov
pop
andb
jge
sub
mov
outsl
loopne
inc
insl
jge
xchg
lret
add
movl
jne
clc
out
mov
sbb
mov
int
inc
movsb
nop
mov
inc
sahf
mov
lock
xor
pop
fnstsw
in
inc
and
pop
or
and
dec
das
xchg
fstpl
sub
enter
mov
jo
cmp
movsb
sbb
icebp
dec
push
lods
out
or
xchg
pop
mov
xchg
jmp
nop
jno
test
mov
rol
lret
aas
dec
sbb
or
fildl
dec
adc
push
mov
fnsave
insl
dec
mov
jp
scas
sub
jg
lods
sub
stc
pop
xor
sti
repz
leave
pop
dec
jmp
push
push
sub
or
lods
jnp
jmp
pop
rcr
ss
jg
ret
addr16
stos
mov
bound
xchg
sub
ds
push
sub
xchg
sub
mov
push
xor
sub
lock
std
bound
mov
pop
lret
imul
mov
int
jmp
dec
lods
sti
or
xchg
mov
inc
lds
in
ljmp
in
inc
es
int
mov
les
jnp
rcr
mov
xchg
xlat
sahf
or
push
xchg
xchg
ret
stos
stos
test
enter
or
icebp
xchg
xor
fisubrs
lods
adc
in
fisttpl
xchg
push
test
dec
push
insl
fcmovnu
jl
sub
sti
push
nop
rcrb
stos
inc
dec
nop
fst
loope
fisubrl
jecxz
cli
mov
dec
mov
sub
jg
jmp
xchg
dec
pop
or
push
orl
cmc
fmull
adc
or
jmp
out
cmpsb
scas
lcall
or
cmpsb
cli
sub
movb
scas
scas
lret
scas
cmp
scas
ljmp
or
pop
cmp
gs
mov
lret
cmp
imul
pop
ret
in
mov
lcall
loope
mov
shl
in
sub
sbb
fiaddl
dec
inc
rolb
icebp
fucomi
push
ffreep
mov
jmp
pop
popa
jecxz
lret
aas
pop
scas
xchg
aam
inc
lcall
in
sti
sbb
pop
push
mov
jnp
stos
sbb
sub
jge
fidivrl
xor
push
sti
cmp
in
mov
mov
dec
pop
or
pop
shl
jmp
popf
cld
sti
jnp
push
call
pop
jmp
lret
jae,pn
mov
stos
push
push
cmpsl
stos
sti
in
ret
es
stos
leave
icebp
xchg
sub
xor
push
pop
dec
lock
imull
sub
or
stos
sub
push
inc
imul
repnz
ret
pop
int
mov
in
lds
ret
pusha
shrb
xor
lret
iret
jmp
fidivrs
cmp
enter
inc
jl
cmp
insb
int
push
lods
jg
mov
sti
pop
stos
jle
and
jns
fwait
pop
cltd
jmp
mov
jmp
mov
or
pop
fst
push
mov
xchg
jmp
mov
lret
in
sub
push
inc
jnp
dec
or
push
cmc
fisubrl
push
push
dec
push
mov
rolb
push
lret
add
scas
pop
jmp
add
dec
add
ret
scas
jmp
popf
outsl
lret
sbb
jp
cltd
jmp
cli
in
fldt
sbb
rcl
sub
cmp
sbb
sti
pop
lea
sbb
lret
inc
push
add
inc
dec
sbb
xor
scas
sub
in
sbbb
pop
sbb
cmp
dec
jno
imul
cmp
adc
ret
scas
jmp
adc
lret
scas
sbb
push
scas
in
push
or
jae
jp
mov
mov
popf
leave
stos
jnp
sub
jmp
adc
fldpi
adc
lret
cmp
or
sti
inc
fisttpl
movsl
stos
pop
add
xor
jmp
dec
into
lret
dec
sbb
mov
jp
xlat
xchg
mov
das
aas
imul
xchg
or
in
sub
in
ljmp
stos
hlt
pop
fisttpl
fldpi
adc
test
pop
mov
ret
daa
xchg
xchg
xchg
lret
popf
add
sub
iret
lock
imul
push
sub
lock
mov
iret
dec
es
cli
fmull
mov
fstp
add
in
subb
jmp
mov
cltd
sub
mov
ljmp
jp
out
ljmp
sub
or
imul
pop
fldcw
inc
mov
jp
mov
fidivl
add
cmp
dec
movsl
mov
mov
out
pop
or
scas
sub
jmp
jmp
cwtl
jmp
fs
ds
retw
stos
jg
dec
jne
mov
cmpsl
in
outsl
fldl
push
dec
xchg
pop
ret
inc
je
and
in
pop
mov
repz
jle
and
in
xchg
fildll
fucom
lea
sbb
lods
aad
fstl
sti
in
stos
or
shlb
sti
or
imul
sti
mov
sti
mov
sub
ljmp
adc
popl
xchg
sub
or
dec
les
insl
outsb
push
pop
lret
pop
sub
shrl
lods
jmp
dec
insb
lret
insl
lods
add
pusha
fcmovnu
shrl
leave
jno
in
or
sub
mov
xchg
jnp
fisubrl
dec
pop
in
sub
dec
ss
in
in
mov
or
in
repz
stos
pop
stos
xor
add
mov
jnp
test
mov
sbb
fwait
lret
lret
shr
fucomip
imul
hlt
repz
fisttpll
arpl
pop
cltd
cmp
lret
in
sti
add
xchg
dec
fs
mov
insl
dec
jp
dec
and
cmpsl
mov
or
ret
mov
mov
sub
fdivrs
xchg
jmp
xchg
insl
push
imul
orb
fisubrl
mov
jmp
pushf
jg
arpl
inc
inc
dec
stos
sub
nop
sub
or
movsb
cmp
scas
sahf
je
pop
cmp
lret
dec
sti
fimull
dec
mov
jmp
loope
sub
xor
xchg
sbb
aam
add
addr16
mov
sbb
mov
mov
mov
fwait
cmpsl
ljmp
inc
cmp
lret
jbe
mov
mov
sub
push
in
pop
inc
pop
adc
test
inc
insl
dec
push
in
nop
sbb
imul
cmp
nop
sbb
adc
jp
in
dec
sub
fsubrs
sbb
or
daa
sti
ret
test
sti
dec
mov
jle
inc
shrl
sti
loop
ret
push
push
sti
insl
rcll
mov
pop
int
inc
or
or
loope
icebp
sub
inc
les
hlt
rorb
notb
imull
xlat
outsb
pop
int3
xchg
shl
fwait
inc
enter
pop
xchg
push
mov
mov
and
stos
xor
dec
sub
mov
gs
mov
lret
sub
inc
int3
ret
mov
lods
xor
or
fcmovu
mov
xchg
add
jge
jp
sti
push
mov
inc
mov
inc
mov
mov
push
stos
cmpl
imul
stc
lret
arpl
jge
int
ret
xchg
stos
mov
daa
mov
cmp
inc
dec
fwait
aam
lods
mov
fcmovnu
mov
dec
add
iret
jl
dec
mov
sbb
std
sub
dec
lea
mov
sub
jae
jp
lret
stos
ret
cltd
pop
sub
xlat
xchg
sti
ljmp
rcr
sbb
xchg
stos
push
dec
mov
lret
cli
sub
test
lock
jmp
or
mov
mov
mov
add
jecxz
mov
mov
mov
cmpsb
fdivrp
mov
and
cli
dec
ret
sbb
pop
inc
or
dec
and
and
sti
cmpsl
jmp
sbb
pop
xchg
add
lret
push
mov
les
cmovns
fstpt
push
pop
sub
cmp
push
dec
pop
sbb
sub
stos
pusha
ret
dec
cltd
fildll
rcrb
stos
mov
jnp
ret
add
stos
test
sti
add
lea
inc
dec
mov
shr
and
loop
sti
cmpsb
dec
loop
xchg
push
fadds
fstps
mov
pop
test
cmp
jecxz
ret
ret
sarb
push
movsb
sti
fiaddl
inc
sub
ficompl
inc
lea
ljmp
ljmp
mov
fadds
arpl
mov
into
dec
lret
mov
xchg
jmp
jmp
nop
dec
mov
lods
dec
ss
sub
mov
scas
idiv
int
mov
out
rcl
rcrb
lret
jb
out
test
roll
enter
dec
insb
or
adc
in
adc
mov
outsl
mov
hlt
leave
adc
add
popa
push
cmpsl
inc
rep
mov
out
mov
or
mov
andl
cmpsb
or
mov
inc
or
ret
mov
or
pop
fimuls
jg
inc
cli
daa
loop
lret
pop
shr
and
lea
push
pop
mov
sub
pop
sti
xchg
xlat
inc
or
mov
fisubrl
lods
push
les
daa
stos
fdivrp
lock
cld
sbb
in
or
cli
in
sub
push
xchg
sti
adcl
xchg
ljmp
dec
mov
mov
dec
dec
int
mov
shrb
cmp
xchg
mov
les
mov
lret
or
mov
outsb
mov
fwait
cli
stos
lods
int
in
fwait
sub
xchg
icebp
das
ret
push
mov
cmp
jb
jnp
je
pop
pop
stos
mov
add
bnd
mov
imul
mov
ret
add
add
das
dec
push
or
scas
sub
or
adc
ret
push
mov
inc
leave
fimull
in
leave
sti
jae
mov
cld
stos
insb
or
lods
repz
subl
js
jb
sbb
lock
mov
imul
sbb
lcall
inc
sarl
rorl
stos
jmp
ljmp
inc
fucompp
xchg
int
jb
jmp
jp
sbb
push
cli
push
sti
pop
ret
inc
bound
out
dec
fnstcw
and
roll
fisttpll
sbbl
lods
rorb
mov
rcr
lcall
mov
pop
adcl
loopne
jbe
in
sub
fldl
mov
mov
xchg
mov
icebp
fldl
in
fnsave
xchg
fsubl
xchg
and
dec
call
and
mov
xor
xor
inc
cmp
fmull
dec
or
int
cs
xor
cmp
fmul
ret
xchg
lret
leave
inc
jnp
imul
mov
lea
xor
pop
sbb
mov
fldcw
repz
std
adc
jo
xchg
out
js
mov
jmp
mov
jecxz
sub
mov
stc
stc
or
fwait
adc
jmp
mov
into
adc
shrb
jmp
mov
iret
sub
lods
imul
shr
mov
and
xchg
in
adc
pop
mov
es
mov
mov
sbbl
leave
mov
aaa
insl
or
jne
daa
fldt
lcall
push
mov
xor
dec
test
xor
lret
dec
stos
sub
push
mov
enter
sub
push
mov
mov
or
push
adc
jb
lret
or
push
mov
or
imul
or
imul
ret
inc
mov
mov
and
lret
pop
mov
and
lret
pop
mov
and
addl
bound
addl
sbb
jnp
add
arpl
addb
popa
lret
inc
cmpsl
es
dec
scas
cs
dec
lods
sub
push
mov
lret
inc
cmpsb
daa
into
dec
scas
das
int3
lret
dec
lods
sub
xchg
push
out
push
out
outsb
lret
or
insb
xchg
adc
je
lret
pop
out
mov
out
outsl
mov
or
hlt
jne
lret
push
mov
mov
lret
pop
mov
and
lret
push
mov
mov
lret
pop
mov
and
jbe
fistps
lret
sbb
jl
add
fs
lret
pop
divb
ficomps
int
cld
jge
add
std
dec
fcom
mov
leave
mov
dec
outsl
enter
ret
movsb
in
mov
int
fdivrl
dec
test
ja
mov
les
pop
fmul
stos
jae
das
test
mov
lcall
ljmp
mov
mov
stos
mov
imul
lock
cli
fsubrl
sub
push
pop
movsb
push
stos
mov
dec
imul
inc
mov
cmc
loop
sti
inc
int
cmp
mov
pop
mov
jg
sub
fdivr
icebp
xchg
movsb
push
jmp
cli
shlb
sub
in
leave
or
jp
sbb
out
cmp
cmp
jns
mov
inc
cs
and
sbb
sbb
scas
stos
jecxz
inc
sbb
cli
jp
cmp
and
xlat
inc
dec
cmp
cmp
fdivrs
and
ljmp
sbb
inc
dec
inc
loope
or
mov
std
mov
insb
xchg
inc
icebp
rol
dec
inc
xchg
inc
mov
loope
mov
mov
jmp
lret
imul
fldt
aas
int
scas
int
dec
and
dec
rorl
std
sub
aaa
aas
int
in
sbb
aas
jo
mov
inc
mov
lret
aas
add
jb
push
dec
in
pop
jg
xchg
add
inc
xchg
inc
add
pop
mov
test
mov
ljmp
lret
inc
fdivrs
movsl
inc
jmp
out
lahf
inc
into
mov
or
or
sbb
icebp
inc
pop
push
dec
rorb
sub
repnz
sub
stos
jae
jmp
sub
and
push
in
mov
mov
mov
test
mov
mov
loope
push
dec
stos
inc
bound
lock
xlat
push
movb
pop
adc
imul
inc
sub
in
xor
jp
scas
fcmovu
mov
dec
clc
fimuls
mov
ljmp
lret
fcmovnu
pop
pop
fwait
lcall
jp
mov
ret
addl
arpl
mov
rclb
xchg
xchg
adc
lret
repz
mov
xor
lret
mov
pop
push
lret
out
cmpsw
cmpsb
daa
es
xlat
push
push
xchg
xchg
pop
push
lret
div
ja
mov
aaa
ss
mov
jle
dec
pop
pop
lahf
sahf
pop
push
lret
iret
into
dec
dec
mov
push
lret
out
out
outsl
outsb
scas
scas
das
cs
int
dec
dec
lea
insl
insb
lods
lods
sub
pop
pop
popf
pushf
sbb
jge
mov
inc
test
gs
movsb
and
push
push
xchg
xchg
adc
jne
mov
xor
dec
dec
mov
call
sub
lret
pop
pop
cltd
cwtl
sbb
lret
stc
clc
jns
mov
rol
inc
addl
mov
rclb
xchg
nop
adc
int
lock
mov
xor
add
lret
imul
mov
or
sub
lret
inc
ret
arpl
bound
mov
lret
pop
ficompl
jnp
jp
lret
sbb
cmp
lret
push
rclb
jae
jb
lret
adc
xor
lret
dec
int3
dec
in
insl
in
insb
lret
or
lods
sub
lret
inc
les
in
test
add
movsb
and
lret
pop
fcompl
cld
jl
lret
sbb
mov
aam
cmc
jne
je
lret
adc
mov
lret
inc
movb
out
xchg
pop
xchg
cmpsl
daa
cmpsb
es
fistps
pop
jg
jle
lahf
pop
sahf
push
xlat
lret
push
push
divl
jbe
lret
pop
xchg
push
mov
mov
iret
lret
dec
into
dec
out
outsl
out
outsb
lret
jle
cs
lret
dec
enter
call
mov
test
lret
inc
rolb
loopne
or
and
fcomps
jns
js
lret
sbb
cmp
lret
push
rclb
jno
jo
adc
dec
lret
jmp
lret
stos
dec
imul
lret
lret
stos
dec
push
sub
in
lret
lods
dec
insl
or
lret
lods
dec
insb
or
out
lret
cmpsl
inc
addr16
daa
out
lret
cmpsb
inc
pushw
es
jmp
imul
lret
test
push
or
inc
arpl
and
loop
lret
mov
mov
and
inc
lret
fs
mov
lret
pop
pop
mov
lret
pop
lcall
shl
mov
and
loopne
mov
and
sti
fwait
mov
cmp
cli
lcall
popf
mov
cmp
pop
lret
jl
cmp
notl
pop
aaa
notb
push
ss
cltd
mov
cmp
clc
cwtl
mov
cmp
repz
mov
lret
jae
xor
repnz
mov
lret
jb
xor
cmc
xchg
mov
lret
jne
xor
push
lret
je
xor
out
scas
dec
lret
outsl
comiss
out
mov
cs
xchg
mov
lret
jno
xor
lock
mov
fnsave
xor
sub
inc
xchg
mov
int
pop
mov
jge
jge
lods
cmpsl
loopne
mov
imul
into
hlt
dec
pop
pop
inc
addr16
jmp
add
arpl
inc
dec
lcall
pop
pop
inc
imul
pop
addr16
push
cmc
add
inc
xlat
sbb
stos
into
sbb
icebp
fidivrl
dec
adc
sub
sub
dec
push
scas
push
jge
mov
inc
pop
arpl
lea
xlat
and
push
fildll
dec
imul
push
mov
sub
test
out
lret
data16
jbe
xor
pop
mov
aas
lret
fidivl
gs
xor
add
mov
repz
or
push
fldenv
and
idivb
mov
unpcklps
and
push
dec
adc
mov
jmp
aas
lea
je
dec
push
iret
adc
lock
xchg
in
iret
dec
fisubrs
or
std
scas
inc
adc
sub
mov
add
cmpsl
fidivrl
iret
cmpb
or
jl
lret
loopne
push
sahf
fnsave
xchg
mov
iret
ljmp
stos
pop
pop
lret
sub
scas
ret
bound
sbb
je
insl
cmp
les
pop
cli
adc
jmp
aaa
cmp
lret
xor
pop
add
shl
adc
sub
aam
mov
mov
push
add
fs
sub
lret
inc
pop
xor
aad
sbb
lret
movsl
adc
cmpsb
inc
pop
pop
mov
mov
or
jp
and
push
aad
jb
lret
mov
cwtl
xchg
stos
jl
mov
outsb
mov
pop
fisttps
and
pop
cld
lret
in
push
roll
lret
fcmovnu
lds
jl
lret
sbbl
shlb
lret
xchg
in
push
sbb
cmc
or
sahf
ljmp
js
mov
lretw
cli
xchg
jmp
adc
les
mov
test
xchg
mov
into
lcall
or
aad
xor
pop
adc
add
int
or
and
or
add
es
in
lret
int
dec
and
lret
popa
inc
shll
jl
lret
add
push
mov
fidivrl
pop
pop
xchg
jbe
sub
push
bound
jnp
cmpsb
push
dec
ljmp
mov
stos
mov
jo
pusha
in
lret
inc
inc
insb
cmpb
pop
push
lret
xor
aas
fcmove
add
xchg
lret
ret
inc
add
leave
test
xchg
pop
xor
je
sub
dec
movl
pop
test
adc
frstor
mov
outsb
outsl
cli
dec
mov
xchg
stos
lret
mov
mov
jge
int3
aad
mov
adc
mov
mov
mov
mov
roll
dec
leave
mov
and
nop
and
ret
lret
enter
out
or
lret
ret
loop
pop
adc
xor
push
iret
add
xor
call
xlat
lods
out
shll
lret
mov
rcrb
int
cs
inc
mov
and
add
std
add
sbb
nop
bound
or
aaa
jbe
push
push
je
add
jo
cmp
adc
mov
or
mov
das
call
inc
jp
addr16
push
sub
mov
jle
mov
lahf
cmpsb
pop
jbe
aad
jp
stc
xlat
nop
push
push
leave
xor
shll
dec
dec
adc
jo
in
add
lods
cmp
test
lret
pop
test
adc
test
and
lret
push
leave
inc
fnstcw
xchg
mov
lret
out
mov
test
xorb
inc
lods
lret
push
push
fsubr
jl
cmc
rorl
add
jg
or
adc
mov
and
pushf
mov
iret
sbb
roll
daa
jmp
push
mov
in
aaa
mov
lret
cmp
into
lretw
out
scas
fs
adc
xor
cmp
inc
pop
push
lret
sub
test
sbb
enter
push
fildll
rcrl
and
sti
call
das
lret
sub
shll
push
mov
fxch
in
ljmp
pop
cmp
sbb
cmp
push
xlat
mov
data16
arpl
enter
test
mov
andb
or
lret
inc
sbb
scas
push
lret
pop
insb
mov
pop
jl
lret
fnstenv
sub
mov
pushf
inc
out
mov
dec
inc
mov
es
inc
mov
es
mov
push
mov
popa
outsb
arpl
aaa
test
sub
lret
stc
sbb
cltd
adc
mov
jo,pn
lds
adc
xchg
jmp
loop
out
lret
test
and
loopne
cld
rclb
daa
rcl
jae
inc
aad
jb
loop
inc
rcrl
les
decb
mov
test
cmp
sbb
mov
fnstcw
pop
dec
xor
in
movsb
repz
xlat
jle
imul
lret
jp
icebp
scas
mov
cltd
jle
xchg
or
xchg
inc
mov
or
popa
jge
pop
pop
int
pop
cmp
icebp
mov
add
xor
int
inc
rclb
adc
rolb
dec
fmull
dec
mov
mov
fldl
or
ret
jl
scas
cmpsl
fcmovnu
roll
mov
xchg
add
arpl
inc
inc
mov
sbb
stos
sbbb
andb
adc
cld
sub
mov
mov
dec
sub
ljmp
aas
dec
mov
in
sub
pop
sbb
in
ljmp
aas
mov
xor
pand
add
sbb
stos
cmp
mov
or
inc
lret
dec
imulb
and
sti
ret
sub
jnp
clc
leave
in
lcall
cmp
in
lret
and
imull
inc
lods
and
fisubl
dec
dec
mov
addr16
rcrb
lds
inc
pop
sti
mov
xor
in
fwait
in
inc
imul
movsb
movsb
stos
cmpb
lea
inc
sub
rorb
dec
stos
into
xor
fldt
sti
stos
jle
inc
loop
ljmp
test
rol
stos
pop
xchg
cmp
push
mov
fdivp
jmp
jmp
pop
cmp
hlt
cmp
les
scas
mov
jl
cmp
js
insl
adc
push
jge
mov
jl
xchg
or
sub
cltd
inc
sbb
pop
les
pop
dec
lock
sub
lods
stos
sbb
mov
test
lods
dec
sbb
or
mov
cmp
mov
lea
jnp
jno
incb
pushf
jae
repz
mov
jl
inc
cs
pop
fwait
in
adc
jb
sbb
imul
stos
sbb
sbb
sub
xchg
inc
cli
sub
add
adc
adc
cltd
ljmp
in
stos
mov
in
sti
add
ficompl
rcr
loopne
adc
cmp
sub
mov
dec
add
jne
cld
mov
sub
and
sub
stos
sub
stos
jg
lods
xor
in
lret
paddb
inc
push
ret
rorb
pop
push
fcoml
pop
jmp
jo
movsl
fcmovu
push
test
pop
lahf
mov
jecxz
scas
fcmovne
jp
dec
mov
out
cld
xor
fimull
dec
adc
sbb
adc
mov
inc
cmp
nop
mov
push
stos
loopne
mov
int
push
dec
fldt
les
xor
mov
or
in
sti
push
mov
rolb
jmp
and
or
mov
mov
xchg
shlb
adc
xchg
push
sub
dec
mov
rcr
subb
mov
cmc
call
jle
imul
mov
lods
leave
ret
hlt
stos
les
and
fnstsw
add
pop
pop
in
push
test
insl
scas
and
test
cmp
lds
jle
ljmp
mov
mov
mov
stos
insb
inc
add
mov
addr16
add
push
mov
imul
fldt
push
fwait
lret
and
pop
mov
adc
xchg
xor
and
fstpt
ficompl
mov
stos
adc
int
imul
pop
stos
or
sbb
aas
cmp
sbb
sbb
popf
mov
sbb
pop
jle
sub
xchg
sbb
cmp
push
cmp
addb
adc
jmp
lods
test
sub
sbb
mov
in
in
xchg
adc
or
fcmovbe
adc
pop
out
xchg
sub
out
push
lcall
addl
mov
sub
mov
xchg
or
int3
inc
in
shlb
cmp
and
cmp
sbb
jmp
sub
or
add
jbe
movsb
lcall
lcall
lea
cmp
dec
add
stos
add
add
ret
jae
mov
loope
sbb
scas
ror
xchg
gs
or
call
int
push
cmpsb
rorl
into
fwait
rorb
cltd
stos
cmpsl
sub
in
in
add
jmp
mov
or
fcmovbe
loop
pop
xchg
and
stos
loope
filds
inc
pop
push
xorl
xlat
lods
xchg
in
negb
sub
repnz
push
or
xchg
pop
jecxz
adc
jb
push
imul
sbb
mov
add
mov
fcmovnu
out
dec
pop
out
push
lsl
insb
cmc
ret
sbb
cmp
add
mov
and
test
add
cmpsl
rcrl
das
in
imul
xchg
pop
stos
xchg
outsl
mov
cld
fldt
dec
gs
dec
in
sub
shr
stc
jmp
dec
ja
pop
sub
lea
ljmp
in
mov
es
pop
imul
xchg
sbb
movl
stos
jmp
scas
cltd
stc
sti
add
pop
sbb
imul
ret
divl
xchg
fcmovu
scas
arpl
outsl
arpl
cmp
inc
cmp
cli
dec
or
rcll
jno
or
push
cmp
cmp
adc
or
jecxz
mov
sub
das
add
shlb
rorl
aas
adc
out
aad
push
adc
mov
mov
in
loop
sub
sub
jno
sub
ljmp
dec
aad
scas
mov
adc
loop
jecxz
mov
iret
jmp
add
loope
push
test
outsb
xchg
or
mov
lret
cmp
adc
dec
jle
push
mov
mov
add
sbb
fwait
lock
pop
loop
cmp
add
mov
push
leave
sub
or
mov
out
pop
mov
xor
sub
fnstsw
push
push
mov
cmc
inc
cmp
adc
pop
and
fs
fwait
sbb
or
loope
pop
sbb
xor
dec
mov
cmp
pop
inc
hlt
inc
or
sti
xchg
fstp
mov
jmp
adc
dec
jne
cmova
push
fwait
enter
aam
inc
lret
pop
jo
or
push
repnz
inc
lret
inc
fisubl
sbb
sub
cmp
dec
in
sub
pop
ljmp
push
outsl
test
jmp
xchg
pop
sub
dec
sub
loope
lcall
insb
pop
push
out
pop
sub
test
mov
out
jmp
rorb
rol
add
xchg
jecxz
cld
es
sbb
xchg
es
jmp
in
idivb
ret
pop
push
sti
mov
push
ja
push
pop
sti
fwait
lea
int3
pop
cli
in
fsubrl
push
cmp
add
sub
dec
sbb
divb
xchg
jnp
in
pop
in
sbb
shrb
and
cmc
inc
mov
jno
add
enter
sub
or
inc
mov
stos
adc
cmp
jmp
aam
popf
xor
std
push
push
in
cltd
and
cmp
cmp
xorl
mov
sbb
mov
fwait
jnp
sub
xor
ret
mov
dec
jecxz
or
fsubrp
dec
test
cltd
movsl
cli
pushf
bound
push
test
mov
pop
repnz
pop
rcll
pop
mov
add
in
hlt
inc
inc
shrl
lcall
in
push
xchg
shrl
call
jp
pop
jne
xchg
xchg
pop
lods
jns
es
mov
fisttps
dec
push
mov
fadd
mov
or
pop
hlt
pop
jo
lea
inc
cmp
sbbl
mov
dec
xor
hlt
dec
push
push
lods
cmp
mov
mov
inc
push
pop
inc
ljmp
pop
fadd
flds
adc
mov
adc
sub
or
pop
dec
scas
or
in
push
pop
lea
mov
insb
jmp
fwait
mov
sti
sbb
or
sbb
pop
jnp
roll
fsts
mov
cmpsl
sub
mov
ret
or
sbb
lret
xchg
ret
fcomps
adc
mov
testl
sub
repz
outsl
push
adc
ljmp
nop
mov
mov
mov
jae
imul
jae
les
sub
mov
aaa
push
mov
rorl
lcall
xor
stos
jmp
push
stos
pop
stos
or
and
sarl
dec
pusha
fildl
scas
fwait
sbb
fistpl
push
call
lahf
xchg
enter
push
or
jnp
xchg
ljmp
fs
jp
insb
fnstsw
mov
mov
mov
fcomps
and
adc
or
ja
sbb
pushf
and
mov
fwait
push
jp
jno
xchg
fistps
lahf
jno
jae
mov
dec
inc
xor
loope
inc
rcrb
cmp
fisttpl
stc
dec
push
mov
fbld
mov
jmp
push
push
mov
push
or
arpl
dec
fldpi
pop
inc
pop
lds
inc
out
jnp
cli
js
fcoms
mov
test
hlt
loope
fstpt
daa
fucomi
ret
jae
popf
sub
sti
lods
shlb
scas
xchg
out
idivb
fnstcw
ret
pop
sub
sub
push
ljmp
test
jnp
mov
sub
cld
std
out
sub
fisttps
lods
fcompl
mov
sbb
pop
dec
sbb
cli
sbb
jno
fcomps
inc
sti
sub
jp
mov
inc
int
imul
dec
rcrl
add
adc
jno
jp
andl
jl
xchg
or
fnstsw
dec
push
fisubl
cmp
ret
pop
cmp
js
push
cld
fucomi
imul
mov
and
xor
add
jmp
xor
mov
inc
mov
inc
adcl
in
push
and
cmpsl
loope
push
hlt
sbb
loop
adc
sti
in
std
fstpt
jmp
dec
cmpl
in
ret
test
fnstsw
jecxz
push
sub
pop
mov
and
lret
movsb
dec
sti
mov
sti
aas
cmc
cli
insb
lods
scas
dec
pop
in
fstl
lods
mov
fwait
or
fstpt
fsubl
repz
ja
and
ficoml
sarl
dec
outsl
lock
and
push
pop
int
imul
ret
ja
mov
insb
xorb
ret
xlat
mov
fbld
inc
jb
imul
imul
inc
imul
sub
out
jnp
icebp
xor
ljmp
jmp
dec
sub
jg
jecxz
mov
hlt
cli
and
pop
fisttpll
ficoml
je
adc
test
rcrl
adc
imul
subl
dec
arpl
pop
pop
xchg
push
jno
insl
movsb
mov
cmp
lds
sbb
fstpt
test
adc
pop
pop
jne
jecxz
sbb
dec
sub
loope
pop
mov
xchg
mov
pop
jg
pop
xchg
mov
pop
sbb
mov
aad
inc
inc
je
out
mov
cmp
in
out
sub
out
cli
and
cli
arpl
mov
push
push
xor
movsl
and
dec
lret
sbb
push
push
adcl
aas
enter
shll
ret
loope
loop
iret
mov
test
jmp
dec
xchg
lea
add
scas
popa
mov
push
mov
jmp
mov
pop
int
mov
mov
scas
out
sbbl
sti
pop
mov
pop
in
mov
sti
xchg
inc
cmpsl
fisttpl
ret
bound
in
jp
pop
sub
rorb
scas
lea
pushf
xchg
inc
fildl
stc
movsl
fistpl
in
fiadds
dec
lahf
data16
idivl
inc
loope
or
dec
mov
ficompl
pop
xchg
mov
dec
push
jl,pn
imul
cmc
adc
out
inc
sti
add
cmp
aad
int
cmp
mov
cli
std
adc
aad
int3
popa
out
and
stc
nopl
sbb
xor
popf
std
pop
pop
mov
cmovns
sub
mov
clc
lods
enter
mov
sar
lods
imul
jmp
pop
mov
inc
dec
int
ret
jb
rcll
cmp
and
xor
scas
dec
jle
daa
in
add
or
mov
mov
push
in
push
fisttpll
mov
ljmp
fstl
fdivrs
lcall
popf
sbb
add
leave
pop
push
ret
xchg
arpl
fldcw
mov
push
xor
adc
mov
rcrb
pop
imul
in
pop
xchg
mov
inc
pop
push
scas
imul
addr16
dec
mov
and
or
out
mov
pusha
sbb
or
jle
ret
aas
push
les
popa
sarl
pop
int
nopl
outsb
jno
arpl
dec
jmp
inc
adc
aad
jmp
cmp
dec
cld
and
daa
fptan
mov
push
push
sbb
dec
or
dec
push
mov
int
ret
jmp
ffree
jg
dec
add
mov
pop
fstp
cld
mov
subl
push
imul
iret
data16
bound
xchg
dec
leave
int
fucomp
inc
lahf
cli
fdivrl
mov
push
ljmp
flds
sub
stos
or
lcall
push
jl
into
inc
mov
orb
inc
mov
pop
jp
cmpsl
pop
mov
jae
dec
push
imul
add
mov
test
subl
imul
pop
hlt
push
pop
arpl
fwait
clc
hlt
add
test
jae
movsl
jne
cs
fwait
mov
cmpsl
mov
mov
test
push
sub
stos
es
lcall
cmpl
inc
or
inc
inc
les
mov
xchg
into
push
cmpsl
repz
cmp
sti
dec
dec
and
arpl
mov
lahf
mov
or
dec
xchg
push
sbb
call
xor
stc
jl
imul
pshufw
cmpsb
mov
out
arpl
rolb
inc
faddp
cmp
sbb
mov
mov
ret
and
ret
dec
mov
ret
dec
push
mov
jnp
scas
xchg
inc
fwait
cmp
arpl
rcr
sbb
push
mov
pop
or
and
cli
test
popf
mov
adc
addl
mov
add
test
cmp
sti
loope
in
xchg
xchg
dec
jae
insb
dec
fwait
loop
sub
lea
push
mov
add
xor
or
pop
cmp
sbb
pop
loop
pop
lcall
lea
repnz
repz
cmp
test
dec
lcall
sub
leave
nop
jne
pop
in
loope
popa
cltd
lcall
roll
sahf
mov
sbb
daa
out
test
mov
cltd
sbb
das
int
sbb
push
inc
inc
inc
sub
jg
push
cmp
js
cltd
inc
mov
sub
inc
sbb
pop
scas
dec
insb
mov
adc
and
dec
cld
fisttpl
sub
scas
shll
paddusw
jb
add
lcall
cmp
imulb
inc
and
add
mov
decb
movsl
pop
mov
mov
and
lahf
xor
sub
or
ja
inc
xchg
mov
pop
std
mov
sub
jecxz
lods
stos
fcomi
fwait
aam
and
scas
sbb
lds
incl
xor
imul
and
sti
rcll
sbb
add
jp
repnz
scas
dec
inc
cld
jp
loopne
push
stos
jp
push
mov
in
rcr
leave
leave
sarb
int
inc
je
and
jb
inc
pop
mov
mov
jnp
sub
push
mov
jb
das
insl
loope
or
add
leave
out
fdivrs
xor
jb
mov
inc
shll
sub
and
add
xor
inc
orl
add
and
sub
ljmp
or
dec
sub
pop
iret
aas
in
fiaddl
imul
push
jmp
int3
fnstsw
int
cmpsl
mov
jmp
mov
rcrl
leave
or
scas
and
icebp
sub
or
fdivrp
lods
mov
fisubl
int
add
lret
mov
mov
xchg
or
push
scas
fnstcw
push
pop
push
lret
pop
fcmovbe
pop
mov
pusha
lds
xor
or
cltd
popl
fstpl
cltd
xchg
stc
scas
inc
fistps
cmp
icebp
mov
imul
mov
mov
or
lcall
mov
xchg
or
adcb
or
pop
push
cmp
ret
movsb
pop
sub
fildl
inc
and
mov
shl
xchg
repz
loop
xor
icebp
lret
dec
adc
fisubrl
pop
jmp
repnz
int
cmp
sub
dec
stos
ret
pop
fmull
std
scas
inc
sti
push
dec
jl
jns
cltd
shrb
mov
sub
leave
pop
lahf
xlat
xchg
stos
lret
divl
mov
out
jl
jns
cltd
enter
mov
jle
js
lret
int
mov
insb
ja
xor
pop
lock
jmp
inc
fwait
cs
int
and
sti
xchg
jecxz
cltd
sti
and
add
mov
leave
cmp
rcrl
das
dec
mov
ffree
add
mov
fnstcw
rcrl
das
dec
iret
es
ljmp
xor
rolb
mov
in
pop
loope
dec
sti
es
icebp
ljmp
jg
push
mov
sti
dec
ljmp
ret
cmp
rcrl
das
popa
rcll
adc
ffreep
cmp
mov
jmp
pop
xchg
or
test
lea
loope
cmp
loopne
add
fcmovnu
sub
cmp
mov
in
or
adc
sbb
pop
sti
cwtl
hlt
jnp
ljmp
dec
jecxz
dec
loop
cmp
subb
add
inc
jmp
jecxz
es
sti
inc
mov
leave
cltd
imul
jecxz
jecxz
cmp
inc
ficompl
rolb
xor
jecxz
push
sub
push
jns
popf
or
jecxz
mov
fwait
dec
or
push
or
or
dec
inc
imul
dec
imul
xlat
inc
mov
add
pop
cmp
sub
sub
dec
sub
xchg
dec
sbb
stos
add
sti
ljmp
popf
jnp
loop
imul
aam
cli
xor
jecxz
sbb
push
push
mov
jecxz
dec
fidivrl
fildl
dec
sub
imul
jp
sub
inc
jecxz
jecxz
dec
loopne
sti
jmp
add
cltd
dec
jnp
push
jecxz
jecxz
sbb
or
les
sti
call
mov
stos
jecxz
fistl
cmp
xchg
fiaddl
fidivrl
fldl
neg
fimull
mov
leave
pop
or
push
jnp
dec
fwait
push
sub
subl
cmp
sti
mov
jnp
popf
ljmp
cli
jns
dec
push
stos
jle
imul
cmp
sbb
mov
sti
jecxz
subb
sbb
jnp
imul
sbb
sbb
jmp
pop
lcall
loop
jnp
sbb
cmp
sbb
enter
jecxz
hlt
jnp
dec
sbb
in
jnp
xlat
push
sub
add
cli
outsl
inc
stos
push
popf
pop
jecxz
or
das
aas
sbb
push
mov
or
lods
push
push
pop
sbb
jnp
imul
sbb
mov
mov
jecxz
cmpsl
std
ret
cmp
lds
fildl
mov
dec
arpl
sbb
jnp
sbb
sub
push
jecxz
imul
inc
push
add
cmp
jmp
rorb
scas
or
cmp
adc
sbb
in
imul
mov
cltd
stos
imul
jecxz
jecxz
popf
imul
sub
inc
adc
inc
popf
jmp
fldt
adc
imul
inc
or
xor
sub
or
fstpt
mov
push
jecxz
cmpb
pop
xchg
or
jmp
cmp
jecxz
mov
sub
push
jg
push
sbb
push
jecxz
in
sti
cmp
movsb
dec
lcall
loop
pop
jecxz
or
inc
sub
mov
ljmp
push
lret
ficoml
xchg
divl
jnp
push
sub
out
pop
pop
inc
int
xchg
stos
addb
sar
sbb
jp
cmp
int
mov
sti
sub
add
imul
ja
imul
cmp
or
lret
sub
dec
inc
pop
jle
imul
fcmovu
sub
lds
cmpsl
jecxz
hlt
imul
sub
inc
jnp
inc
popf
sbb
loop
imul
aam
lcall
sub
sbb
cmp
push
jmp
pop
xor
shlb
pop
es
shrb
dec
jle
xor
mov
pop
sbb
mov
jecxz
jecxz
ljmp
xor
lret
push
cmpsb
mov
or
mov
shl
adc
mov
lds
lods
jecxz
test
fcmovb
push
js
ret
xor
push
imul
mov
fistpl
test
fldt
imul
adc
inc
lret
push
cli
cld
jecxz
dec
sub
sahf
stos
cmpsb
jp
imul
sbb
cmp
lock
fistpl
pop
xor
jecxz
jecxz
mov
lret
pop
cltd
cli
imul
jecxz
jecxz
jnp
pop
popf
sub
fidivrs
pop
or
rorb
popf
stos
sbb
push
mov
imul
jle
imul
fimull
cmpsl
jecxz
lock
jmp
sub
sub
mov
or
and
js
ret
cmp
jecxz
es
or
mov
mov
add
stos
cmp
jp
jecxz
lret
mov
or
cmp
sub
in
stos
cmp
dec
jecxz
push
jl
mov
sub
mov
sbb
ret
addr16
cli
sub
push
stos
lods
jecxz
sahf
mov
ficoml
sub
fstpt
int3
inc
sti
push
jecxz
sbbb
ljmp
mov
mov
sbb
lret
dec
sbb
dec
or
dec
sbbl
jecxz
jecxz
jmp
mov
jmp
ss
and
fwait
inc
ss
imul
insl
ljmp
fidivrl
xor
fidivrs
xor
sbb
pop
dec
stos
loop
cmp
rorb
popf
dec
imul
call
rorb
popf
sub
ds
sbb
movl
sub
out
sbb
sbb
push
popf
sub
lock
sbb
shrb
pop
xor
jecxz
jecxz
jmp
js
lret
ja
imul
cmp
jecxz
imul
jecxz
cmp
das
sti
mov
fstpt
pop
mov
sbb
lods
mov
and
mov
gs
rcrl
dec
jecxz
mov
push
xor
in
cs
mov
mov
sbb
cs
imul
lds
imul
mov
arpl
fcompl
pop
sub
xor
or
xor
pop
pop
lcall
ret
stos
xchg
dec
sti
test
push
and
dec
or
xor
pop
std
fisubl
mov
in
jp
stos
cmp
aam
push
jns
test
xlat
int3
popf
fimuls
adc
jns
fwait
or
aas
sbb
mov
add
inc
sbb
add
fwait
lcall
js
dec
jmp
jp
jns
pop
cmc
push
jnp
fistpl
mov
popa
push
fwait
mov
jnp
imul
lret
rorl
mov
stos
repz
fdivrl
stc
pop
push
fistpl
jnp
aam
sub
ret
test
fwait
xlat
mov
fucomi
fwait
pop
jmp
sti
insl
sbb
ljmp
aas
mov
jecxz
fistpl
add
pop
leave
in
fcompl
add
daa
cmp
cmpsb
out
test
push
mov
stos
popf
cmp
sbb
stos
jecxz
jge
fcmovu
in
ljmp
in
arpl
dec
sub
dec
cs
fildl
push
sti
adc
imul
ljmp
outsb
in
ret
mov
or
or
lcall
fildl
lods
sub
jge
stc
pop
or
mov
lret
inc
fiaddl
jle
imul
push
add
adc
jmp
jns
push
ljmp
and
mov
insl
mov
shr
mov
into
add
cli
mov
outsb
dec
inc
or
push
inc
lcall
jae
stc
stos
xchg
mov
shrl
push
dec
push
adc
xor
adc
jnp
in
or
add
test
mov
xchg
sub
ljmp
stos
xchg
stos
test
into
jnp
adc
lret
fstpt
aam
pop
mov
fwait
pop
stos
mov
cmp
mov
dec
cli
stos
pop
popf
or
inc
dec
adc
dec
arpl
jle
inc
lea
aam
stos
daa
mov
inc
bound
sbb
pop
in
ret
in
sub
fcmovbe
outsl
fisubrs
fistpl
adc
inc
in
flds
out
or
xor
roll
fsubr
out
and
mov
inc
jecxz
fsub
out
sbb
adc
loope
ss
sti
fisttpl
std
out
addl
repz
dec
cmc
fmull
out
xorl
in
pop
addr16
ljmp
imul
cmpl
es
clc
or
lret
sti
and
sub
out
sub
xchg
sub
mov
std
cmp
pop
inc
or
inc
or
inc
or
inc
or
inc
or
inc
or
or
inc
or
or
inc
or
inc
or
inc
or
sub
fwait
sub
lahf
sub
inc
sub
addr16
or
cvttps2pi
xor
sub
in
inc
cli
repz
loop
mov
sarb
jbe
or
fld
mov
jge
mov
cmp
dec
sub
sbb
test
mov
lcall
pop
pop
jb
pop
inc
dec
daa
jmp
xchg
dec
fldl
jmp
pop
xchg
jnp
xchg
fwait
add
in
dec
jo
push
cli
push
sbb
jmp
stc
fcmove
add
pop
fcoml
sbb
imul
test
shr
mov
shr
mov
push
or
shrb
stos
or
out
iret
cmpsb
jmp
mov
mov
imul
cltd
imul
loope
cmp
ret
cmp
lods
cmp
push
fcmovnu
jne
lret
rcr
in
rorb
shrb
popf
or
inc
subb
mov
sti
inc
sub
push
sub
test
out
sbb
jmp
in
cmp
or
mov
cmp
fwait
leave
sub
inc
dec
cmp
mov
jns
lods
lret
incb
insl
lret
in
jp
xor
pop
stos
cltd
dec
pop
jge
repz
into
inc
sahf
sti
scas
cld
fistpl
mov
jo
add
adc
jge
inc
jmp
loope
add
fwait
add
lods
dec
push
lods
dec
push
sti
jge
ret
out
cld
imul
mov
add
daa
mov
add
cmpl
js
jmp
inc
sti
in
paddsw
mov
add
adc
pop
ljmp
repz
int
or
fisttpl
repz
shrb
lret
aam
add
push
xor
daa
movsl
mov
or
in
sub
lret
push
out
fucomi
add
fsubrl
stos
fwait
pop
ljmp
dec
sub
outsb
inc
ljmp
mov
in
stos
xchg
or
lret
and
fwait
insl
in
add
fiaddl
fucomi
cld
sti
popf
out
andl
fimull
add
xchg
fwait
sbb
add
mov
aas
jecxz
mov
in
lcall
jecxz
sub
stos
add
sbb
sbb
stc
push
lods
mov
jno
jecxz
jecxz
pop
sbb
or
leave
iret
inc
insl
ljmp
fwait
lret
in
inc
dec
sbb
shrb
cmp
adc
inc
jnp
imul
imul
push
mov
or
jecxz
cli
push
sub
fiaddl
fiaddl
fiaddl
fdiv
cmp
pop
call
push
mov
mov
mov
cli
movsb
fwait
in
lcall
or
sbb
jp
lds
popf
fwait
dec
loope
fimull
dec
cmp
add
pop
cmp
int
ljmp
fiaddl
loope
or
cmp
mov
out
lcall
sbb
sti
pop
jle
imul
mov
pop
ret
in
fwait
xchg
jmp
adc
fsubrl
inc
sbb
mov
dec
into
cmp
repz
aam
add
aam
lret
mov
aam
mov
lret
fldt
pop
in
sub
sbb
sbb
or
jae
cli
std
inc
mov
or
inc
or
ret
adc
lea
inc
fwait
imull
mov
add
pop
fiaddl
lcall
loopne
sahf
pop
lods
dec
divl
mov
pop
sub
mov
mov
mov
dec
stc
or
jmp
adc
mov
mov
outsb
imul
add
daa
cmp
sub
negl
adc
inc
lret
mov
fistpl
pushf
jecxz
sbb
mov
mov
loop
dec
es
loop
fwait
cmpsb
cmp
cmc
jge
jmp
adc
sub
stos
xchg
inc
cli
int
mov
imul
inc
jnp
push
jmp
push
loope
hlt
repz
out
sarb
mov
inc
sub
jnp
xchg
sbb
mov
sarl
out
in
sbb
pop
adc
lret
cmp
sarb
jle
ljmp
aas
or
inc
sahf
lret
add
inc
je
insl
pop
out
sbb
test
ljmp
push
lods
icebp
push
lods
xchg
push
lods
movsl
push
lods
dec
push
lods
pop
push
lods
pop
push
lods
or
lods
and
lods
movb
aam
lods
cli
push
lods
mov
lods
pop
cwtl
push
xor
add
inc
push
fiaddl
fiaddl
fiaddl
fidivrl
cmp
inc
leave
dec
sub
mov
inc
test
xchg
out
xorl
fwait
inc
imul
pop
cltd
mov
xchg
fdivl
out
add
in
out
xchg
inc
hlt
stos
fcompl
arpl
mov
sti
sub
mov
sub
mov
aas
in
aad
sar
in
rcrb
rolb
shrb
rorb
shlb
sar
in
rolb
rorb
shrb
jo
rclb
add
sub
fimull
out
mov
out
insl
cltd
sbb
jae
out
add
jge
pop
fwait
xor
add
fwait
pop
popa
dec
mov
inc
lret
mov
sub
jmp
jb
jmp
repnz
aam
add
imul
stos
aam
ljmp
lods
or
fwait
fwait
aam
sub
and
mov
add
cmp
sub
push
lods
insl
push
lods
jae
push
jnp
add
cmp
sarb
xor
cmp
sarb
out
sarb
pushf
sarb
mov
cmp
cmp
or
popf
sbb
int
mov
inc
mov
loope
mov
xchg
xchg
inc
or
mov
inc
or
jge
push
or
orl
lret
fcmovu
ljmp
cmp
mov
repz
aam
pop
dec
pop
inc
jmp
sub
inc
sbb
dec
frstor
push
push
xchg
or
sti
test
in
dec
xchg
stos
into
cmp
ljmp
test
sbb
pop
xchg
inc
int3
popf
sar
loop
fistl
dec
add
mov
fildl
inc
into
cmp
mov
push
sbb
adc
sub
stos
mov
cmp
in
pop
mov
into
dec
jnp
cmp
sub
into
add
fwait
cmp
popa
faddl
jmp
jle
mov
push
sub
inc
push
jp
dec
lret
aas
stos
cmpsb
sub
fwait
aas
pop
sub
cmp
fwait
pop
stos
pushf
jnp
pop
pop
mov
push
push
or
mov
jno
lret
fwait
aam
sub
shl
stos
xchg
ljmp
pop
imul
insb
jmp
dec
jge
jae
cmp
popf
leave
aaa
mov
popf
mov
stos
mov
mov
in
lret
cmp
sub
pop
lret
dec
sbb
stos
popf
cmp
add
inc
push
cltd
dec
push
pop
in
sbb
outsl
dec
fwait
cli
or
add
xor
mov
lcall
and
xchg
outsl
fiaddl
cmp
jae
mov
xchg
mov
mov
mov
mov
push
cli
in
add
pop
mov
std
int
jmp
sti
fwait
sub
bnd
mov
dec
cltd
add
dec
push
or
out
mov
sub
fwait
sub
lret
test
pop
inc
mov
fisubrs
jo
sbb
xchg
push
dec
in
fwait
xchg
loope
mov
rolb
sbb
popf
cli
sub
fldcw
xchg
in
lret
fisttpll
outsl
lret
and
xchg
call
mov
or
jmp
test
dec
mov
ret
mov
add
fwait
lea
dec
add
adc
sub
xchg
stos
sbb
mov
push
into
lret
mov
xor
sbb
aas
sub
lret
cli
mov
pop
cmp
inc
ret
cmp
add
daa
sbb
jmp
inc
sbb
push
xchg
mov
mov
sub
in
mov
jnp
lret
daa
movsl
stos
loop
fwait
cmpsb
pop
mov
in
sub
mov
pop
sbb
or
dec
das
fcmove
outsb
inc
mov
dec
fstpt
add
adc
lods
mov
in
stos
dec
mov
inc
das
or
dec
das
pop
mov
stos
cltd
or
push
mov
jmp
lods
repz
lcall
loopne
lret
in
lods
pop
cmpsl
jae
mov
outsl
ja
push
stos
inc
inc
addb
lret
ljmp
add
les
cmpsl
repz
inc
sbb
xchg
pop
dec
fcmovb
xchg
rorb
in
sbb
add
fsubrl
lret
cli
mov
hlt
jmp
xor
mov
inc
pop
rcr
fs
test
fwait
push
sub
or
sub
aas
lret
aas
mov
aas
mov
aas
mov
dec
push
pop
imul
sub
xor
sti
cld
sub
subb
ret
paddsw
rcrb
xor
push
mov
pop
sbb
repnz
aam
pop
jmp
pop
lret
daa
movsl
fwait
in
stos
pop
leave
in
fidivl
mov
pop
dec
outsb
inc
lret
fcomps
jge
pop
mov
popf
mov
mov
imul
cmp
popl
jmp
mov
cld
sti
mov
xchg
pop
add
jnp
stos
aas
sub
sub
lahf
push
ljmp
stc
push
stos
jnp
cmp
pop
push
jp
mov
sub
mov
fmul
out
add
orl
jle
inc
imul
adc
inc
aaa
xchg
and
lcall
push
popf
jbe
loop
mov
fists
lret
push
mov
mov
mov
mov
mov
cmp
xchg
fwait
add
in
dec
push
xorl
push
sti
jp
inc
lret
mov
sub
xlat
int
lcall
dec
jnp
sti
mov
sub
loop
mov
repnz
dec
cmp
aam
imul
iret
test
cmp
fwait
shr
jmp
jnp
mov
lods
mov
addr16
push
sarb
sarb
je
cmp
popa
adc
dec
mov
sbb
mov
fisttps
xchg
mov
mov
push
loop
aas
fisubl
or
inc
das
mov
in
loop
lock
pop
or
dec
mov
pop
jmp
outsb
jnp
sbb
and
xlat
pop
rorb
in
rorb
jne
jnp
ror
fstpt
imul
es
mov
sub
lcall
fnclex
push
sbb
jmp
cmp
pop
fwait
pop
inc
stos
xchg
aas
ljmp
jg
sub
lret
adc
ljmp
or
mov
stos
inc
sti
mov
lea
dec
sbb
cmp
jmp
inc
sti
fdivrl
pop
stos
pop
test
pop
fwait
cmpsb
imul
jnp
es
fildl
fucomi
cmp
aam
ljmp
movl
mov
dec
push
sub
cli
mov
lret
aam
add
pop
mov
dec
cwtl
xchg
cmp
aas
mov
or
jl
rcr
sub
sub
ror
loope
mov
push
sti
cli
jle
imul
sti
pop
ljmp
push
fisttpl
jle
imul
add
sbb
jmp
fwait
add
clc
or
cmpsb
fwait
mov
scas
aas
sub
lret
mov
cmp
stos
cmp
jp
fldt
sbb
mov
xor
dec
inc
fmul
mov
sub
cltd
jnp
jnp
shr
lret
out
sti
lea
stos
pop
stos
fwait
pop
stos
outsb
dec
imul
inc
sub
fwait
out
sti
lea
ljmp
mov
sbb
insb
inc
mov
fidivl
fldt
fistpl
sbb
dec
adc
dec
aam
sbb
mov
sub
inc
stos
pop
dec
outsb
inc
or
sbb
cli
cli
xchg
fwait
add
cld
fldt
cmp
stos
mov
repz
in
stos
mov
aas
into
mov
dec
fimull
outsb
inc
stos
mov
add
jnp
int
inc
or
add
inc
mov
mov
dec
xchg
jmp
xchg
pop
add
daa
cli
mov
inc
mov
pop
ficompl
popf
or
sti
rcl
jmp
cmp
fisubl
in
add
jnp
or
inc
xchg
lret
add
pop
popf
lret
cmp
mov
stos
sub
mov
dec
aas
sub
sbb
pop
add
xor
lret
pop
mov
jae
cmp
lret
aam
push
mov
adc
cmp
xchg
dec
dec
ljmp
push
jnp
shl
stos
xchg
ljmp
call
cmpsb
lcall
jp
inc
ret
in
pop
xor
cmp
aam
fwait
sub
add
sbb
jae
xor
ret
xor
pop
nop
mov
push
or
pop
lret
lds
fstp
fcompl
loope
jb
sbb
aam
push
jmp
mov
stos
pop
test
aas
push
lret
in
fwait
xchg
loop
sbb
repnz
lret
aaa
movsl
stos
loop
fwait
cmpsb
cmp
push
jge
sub
in
sub
cli
outsb
dec
sti
pop
dec
outsb
dec
xchg
pop
sbb
dec
inc
jmp
jge
lea
add
adc
ljmp
jp
xchg
das
sti
in
or
dec
push
test
mov
sub
sub
cmp
xchg
cmc
cli
test
pop
mov
sti
sbb
cmp
insl
stos
cli
push
inc
xchg
lret
rcrl
sbb
sbb
push
sbb
fcmovb
clc
rcr
push
inc
dec
fidivl
in
jnp
jmp
in
sub
lret
inc
push
psraw
call
lret
xor
cli
or
test
jb
mov
dec
inc
mov
jnp
cmp
pop
nop
shr
mov
into
inc
leave
stos
xchg
fwait
add
imul
sub
sbb
add
mov
in
jmp
rorb
addr16
jnp
insl
jecxz
dec
inc
sub
xrelease
push
sub
mov
pop
cmp
cmp
imul
jmp
loop
sbb
sbbl
inc
mov
es
fwait
int
arpl
push
jae
jge
stc
push
sub
inc
ret
orl
cli
lret
sub
cli
mov
dec
mov
cmp
in
sti
addr16
ret
mov
shrb
mov
ret
nop
cltd
pop
jecxz
fwait
jnp
cli
mov
int
sbb
pop
stos
xchg
sbb
inc
or
xor
nop
xchg
cmp
and
lret
in
imul
in
ljmp
pop
in
sti
add
sbb
jb
stos
jmp
arpl
fdivrp
fldt
lret
insb
stos
xchg
mov
mov
shr
mov
shr
mov
shr
mov
into
inc
fstpt
gs
mov
jg
dec
xor
rolb
lret
add
jg
in
mov
pop
fwait
pop
dec
cmp
pop
por
loopne
stos
mov
mov
mov
mov
mov
mov
popa
jge
xchg
into
inc
sub
add
int
pop
outsl
cli
lcall
inc
popa
or
popa
iret
cltd
sbb
jge
repz
pop
adc
xchg
fcmovnb
cli
aaa
movsl
fwait
in
sti
pop
in
sub
les
mov
mov
into
sbb
in
int
fstpt
mov
push
or
mov
sub
rcr
jge
ljmp
dec
aad
in
lret
aas
jge
mov
dec
ja
sbb
stos
ja
dec
fidivl
fnstsw
popa
in
les
fisubl
jnp
in
pop
pop
mov
sti
repz
test
lret
mov
dec
xor
inc
mov
imul
push
cld
das
lret
sub
fistpl
or
push
lret
cmpb
inc
jns
lret
xchg
add
lret
and
fimull
jae
inc
fidivl
add
repnz
sbb
jae
sub
or
jae
xchg
sub
ljmp
jmp
xchg
mov
testb
inc
xchg
cmp
jmp
sub
pop
jne
mov
dec
cmp
jnp
jp
dec
xchg
cmpl
cmp
ljmp
mov
push
out
sub
cmp
lods
fwait
sub
and
push
jnp
sarb
pop
mov
sarb
jns
or
fwait
jno
mov
jno
push
jnp
fildl
jno
jmp
testb
movsb
fwait
ljmp
cmp
or
mov
in
leave
aaa
aam
and
xchg
xor
sar
lret
pop
mov
pop
lcall
dec
pop
pop
cmp
jae
sub
xor
aas
daa
fiaddl
push
add
cmp
sbb
dec
outsl
ljmp
mov
fwait
jmp
inc
lahf
repnz
pop
lods
or
push
icebp
inc
fwait
pop
sub
orb
jnp
inc
cmp
jnp
jle
and
dec
aas
jecxz
stos
jle
imul
rclb
mov
rorl
jmp
stos
or
dec
inc
mov
jnp
pop
fcmovnb
stc
mov
pop
cli
xor
stos
mov
into
inc
int
xchg
jp
or
lret
mov
sub
stos
cmp
repnz
mov
into
inc
lret
mov
stos
add
fldt
stos
mov
cmp
into
inc
fucomi
dec
add
inc
cltd
popf
loop
mov
cmpl
ljmp
pusha
jl
push
or
and
jmp
jge
rcr
push
imul
mov
add
popf
cmp
push
jnp
fidivrl
in
repnz
fxtract
xchg
lea
add
ret
in
add
and
push
push
fildl
push
daa
pusha
mov
into
inc
push
popf
addr16
loop
fistpl
add
adc
ret
add
cli
xchg
sbb
imul
sub
inc
mov
cmp
pop
xchg
hlt
sbb
ljmp
fwait
xchg
or
in
cmp
mov
out
stos
lea
sbbl
mov
daa
add
push
push
or
es
ljmp
sub
or
sbb
clc
sub
dec
ljmp
pop
xor
por
es
mov
pop
xchg
cmp
lea
adc
hlt
cmp
cltd
jmp
sub
mov
popa
ljmp
sbb
pop
repnz
or
or
iret
dec
out
ljmp
lret
call
mov
dec
sub
enter
jns
stos
push
push
test
arpl
scas
mov
cwtl
mov
outsl
xchg
pop
ret
cmp
lret
aas
dec
call
lret
shll
or
cmpsl
mov
pop
lods
mov
mov
dec
pop
clc
push
js
sbb
push
or
cmp
lods
mov
cmp
fprem1
cli
adc
pop
pop
inc
push
ret
add
rorl
pop
or
icebp
aaa
lret
xchg
sbbb
adc
sub
mov
mov
icebp
add
dec
ss
xor
mov
fstpt
decb
jg
pop
inc
iret
xchg
lret
ret
mov
enter
and
sbb
pop
lret
loop
pop
bound
mov
and
xchg
inc
mov
nop
adc
lret
repnz
mov
aaa
sbb
rcl
adc
jp
mov
push
mov
add
xchg
mov
mov
xchg
xor
add
inc
rcrb
mov
pop
cli
mov
xor
and
cmpsl
fcmove
std
sbb
bound
cmp
dec
jae
inc
mov
fisttpll
lret
mov
ret
and
sbb
mov
out
jge
shrl
jmp
pop
shlb
ljmp
inc
inc
push
add
ss
aam
in
fstpl
xchg
mov
push
dec
pop
in
or
lea
sbb
stos
scas
fcoml
pop
jg
insl
add
in
test
fstl
sahf
add
jnp
push
fmull
xchg
xor
xchg
dec
fsubrl
pop
out
in
into
test
fdivrl
fldl
mov
pop
in
mov
fstp
push
xor
cld
xlat
int3
lret
adc
fcoml
inc
ja
fistl
in
cmp
loop
lcall
xchg
sbb
fsubrl
jmp
sub
or
leave
aaa
xchg
fiaddl
sbb
out
subl
in
xchg
xor
faddl
out
add
inc
dec
stos
pop
fstp
fisubrl
cmp
add
adc
lods
in
cli
pop
ffree
mov
add
push
out
adcl
lahf
push
aaa
cmp
inc
push
fmull
pop
in
and
fmull
mov
jle
cmpsl
andl
in
sahf
xchg
daa
out
sbbl
in
addl
xchg
push
cmp
pop
in
fstpl
mov
jle
fdivl
out
orl
in
xchg
xchg
lahf
and
mov
xchg
sub
in
pop
xchg
inc
pop
aas
fsubrl
inc
cs
fldt
in
jp
mov
stos
jle
mul
xorl
paddsb
xchg
inc
xchg
fdivr
out
xchg
and
in
xchg
shl
das
subl
or
imul
mov
or
inc
pop
mov
cmpl
leave
call
aam
cmp
rorl
jg
mov
out
cmpl
std
mov
test
fisttpll
fcmovnu
loope
sti
pop
in
in
jecxz
jmp
push
cmpsb
loope
rcr
andl
add
in
pop
jmp
stos
push
rcl
fstl
xchg
out
cmpl
pop
inc
inc
stos
fdiv
out
xchg
mov
in
mov
xchg
inc
not
fsubrl
out
addl
addr16
mov
xchg
inc
xchg
inc
in
sahf
xchg
xor
pop
sbbl
in
lahf
xchg
sbb
ret
bound
in
xchg
xchg
inc
ljmp
popl
fisubl
enter
lcall
out
pop
out
orl
in
popl
adc
jl
jbe
pop
out
sub
ljmp
push
andl
ret
mov
int3
inc
jmp
push
out
subl
mov
imul
orl
ss
inc
push
pop
faddl
sahf
sbbl
and
jae
push
out
andl
mov
xor
dec
fmull
mov
ret
inc
sub
fcompl
push
subl
rorl
or
xor
adc
jbe
push
subl
out
mov
ja
push
pop
mov
popl
dec
xor
dec
orl
out
call
aam
dec
into
leave
jecxz
fldl
outsl
out
cmpl
inc
inc
pushw
fsubl
in
rol
testl
in
cmp
into
fcmovu
gs
mov
push
fucomi
fst
test
in
add
fwait
pop
int
clc
outsl
out
add
or
xchg
mov
pop
push
adc
fldl
or
sub
outsb
adcl
lea
frstor
cld
fnsave
push
ret
xchg
movsb
lret
call
add
mov
push
adc
cs
sbb
iret
push
cmpsb
push
add
int
repnz
out
sub
xor
dec
push
dec
mov
push
lret
pop
cmp
aaa
dec
gs
xchg
cs
fsts
mov
bound
call
outsl
dec
pop
mov
rcll
loopne
xchg
fdivp
lret
lret
mov
mov
mov
ret
inc
int
dec
cltd
in
push
dec
mov
lret
sub
mov
jo
popa
cmpsl
adc
push
aas
lret
scas
xchg
loopne
adc
sbb
int
pusha
rorb
lret
jbe
xor
push
lock
and
dec
movsl
pop
out
jne
sbb
lret
lds
lret
jno
or
mov
mov
in
push
xchg
dec
lods
lret
loop
fstps
stos
inc
or
pop
out
mov
mov
push
sbb
stos
inc
add
inc
lret
sub
ja
fcoml
js
xor
sti
ds
adc
push
xchg
shlb
add
or
cwtl
xlat
in
push
adc
lret
pop
cmp
sub
and
leave
jne
or
pop
add
jae
add
shll
sbb
mov
clc
or
out
data16
sub
scas
sub
das
jb
gs
repnz
repz
fwait
mov
into
shll
add
xchg
fcoml
in
xor
stos
mov
sbb
xor
ret
or
in
sti
lret
pushf
enter
xchg
int3
cmp
adc
movsb
insb
mov
pop
cld
sbb
ret
enter
lcall
jle
aam
rolb
lret
cli
cltd
mov
gs
push
orb
push
fs
cmp
push
in
faddl
mov
stos
mov
lahf
push
dec
outsl
lret
jae
rorl
jle
jne,pt
lret
cwtl
or
xchg
dec
outsb
push
rcll
aam
pop
push
pusha
test
lds
sbb
cmpsl
adc
jae
or
pushf
jle
test
cltd
call
bound
or
mov
nop
and
lea
shrb
out
sub
jge
xchg
lods
jp
repnz
xor
inc
insb
dec
fidivs
scas
jnp
pushf
dec
push
inc
sti
sub
jl
xchg
dec
shr
push
int3
mov
mov
sahf
loope
or
rol
jmp
movsb
mov
mov
jbe
mov
int
mov
bound
cwtl
jne
pop
xchg
ljmp
lret
loope
daa
and
stc
lret
mov
mov
inc
int
in
pop
sub
lret
mov
aas
xchg
inc
dec
jnp
rdpmc
and
mov
shl
test
ret
cmpsl
or
les
test
mov
mov
test
or
push
xchg
jne
mov
fs
pop
inc
insb
and
js
sub
idivb
clc
sbb
lret
daa
jae
sbb
jg
arpl
popa
ret
dec
xchg
push
fimuls
and
iret
out
push
lret
sbb
xchg
fs
fwait
push
dec
jle
sbb
mov
rol
in
dec
pop
in
sbb
std
dec
xor
xchg
push
sbb
aam
jb
mov
xchg
leave
shll
int3
jg
or
push
pushf
stos
es
xor
or
stos
ret
lret
insl
xchg
rcrb
ret
or
push
lret
ret
jecxz
hlt
dec
loope
sbb
mov
movsb
lret
sub
mov
sbbl
xlat
and
mov
and
lahf
pop
mov
or
test
mov
pop
dec
cltd
scas
imul
sbb
test
and
lea
push
rorl
popf
or
mov
insl
test
inc
std
repnz
leave
jo
mov
sub
sbb
sub
in
cmc
or
pop
cmp
lret
int
outsb
icebp
cmp
mov
inc
scas
adc
rcrl
int
insl
inc
adc
mov
jne
pop
jb
sbb
stos
xorb
xchg
aaa
jne
nop
lret
and
mov
int
roll
xchg
push
lret
test
push
pusha
lahf
sbb
ftst
aas
mov
fwait
lret
push
or
inc
arpl
shll
sub
push
stc
test
pop
sbb
inc
rorl
add
sbb
test
cwtl
je
fldl
fbld
mov
lret
pop
cmc
jecxz
insb
mov
or
lret
movsl
fucom
or
add
lret
push
into
lret
loopne
mov
aad
pop
shll
cli
repz
andb
pop
xor
aam
sub
push
dec
pop
or
lret
rorl
mov
lret
sub
inc
push
add
sbb
push
cltd
and
in
adc
dec
pushf
add
inc
lret
add
sbb
and
adc
cmpsb
adc
cli
inc
leave
xchg
les
pop
jmp
into
and
mov
clc
imul
lret
pop
jp
cmpsb
or
nop
int
add
movsl
scas
inc
mov
stos
out
pop
and
imul
mov
xor
dec
jmp
push
mov
mov
repnz
arpl
inc
push
out
cmp
mov
push
mov
mov
leave
or
test
pop
ja
push
dec
or
xor
loopne
push
mov
cmpsb
hlt
insl
lret
mov
adc
loop
femms
adc
pop
stos
cmp
lret
and
dec
loopne
out
lret
dec
cmp
into
push
js
xor
out
mov
repz
fcomi
scas
sub
cmp
aad
fdivrl
roll
ja
push
sub
cmp
cld
leave
mov
jmp
shrb
bound
sti
ljmp
sub
lret
dec
arpl
mov
push
dec
icebp
mov
lret
out
inc
add
mov
dec
lds
mov
shll
andb
mov
jmp
dec
push
dec
mov
or
aas
incb
push
inc
sub
fsub
and
into
dec
sub
scas
repz
xchg
pop
xor
cmp
cmp
pop
cmc
cmp
inc
movsb
jmp
add
mov
ss
adc
lret
xor
stos
imul
shrl
lret
adc
std
stos
cmpsl
out
sub
dec
mov
bnd
adc
fcomps
xchg
inc
cmc
dec
mov
inc
xor
xchg
in
loopne
mov
stos
aam
insl
pop
nop
lret
addl
xchg
add
push
aad
push
xor
shll
shll
push
dec
mov
test
push
sub
dec
lea
jnp
mov
mov
imul
push
mov
aam
movsl
std
fnstsw
out
outsl
mov
outsb
sbb
leave
loopne
dec
xlat
fmull
lcall
inc
add
repnz
fwait
lret
inc
pop
mov
mov
dec
adc
cmp
push
fdivr
mov
adc
test
stos
mov
jmp
fistps
int
jecxz
fiaddl
mov
fistpl
mov
mov
mov
aaa
push
or
inc
stos
int
pop
jne
loopne
sbb
rcr
mov
mov
lret
and
enter
dec
inc
test
mov
fcmovnu
lret
cs
stos
mov
jg
mov
out
jnp
rorl
jns
shll
sub
and
rcr
push
popf
repz
aaa
lret
ss
xchg
inc
cmc
push
lret
push
and
call
cmp
xor
mov
pop
inc
mov
test
int3
mov
mov
test
xchg
add
and
lret
enter
mov
ljmp
mov
lods
sarl
inc
push
in
adc
lret
daa
inc
in
es
add
and
push
rcr
pusha
repz
adc
push
hlt
stos
cmp
popf
mov
lcall
mov
sub
jl
sub
mov
mov
shl
arpl
cmp
ljmp
popa
pop
or
jne
jno
sub
repnz
push
les
jl
push
pop
pop
adc
xor
sbb
mov
jmp
push
fsubr
lea
jg
imul
inc
add
xlat
add
sub
outsl
outsb
sub
js
add
jae
cmp
mov
lret
lea
cmp
fcos
adc
dec
push
and
dec
mov
ds
aam
icebp
adc
outsl
in
pop
pop
mov
mov
mov
out
daa
sub
lds
inc
inc
arpl
in
in
xchg
inc
cmpsl
pop
adc
pop
or
xlat
repnz
lret
pusha
bound
push
lods
into
test
stc
in
cmpsb
out
out
xor
aam
mov
enter
jnp
adc
sub
sub
in
into
or
or
mov
inc
jge
roll
jecxz
sbbl
or
mov
push
add
fldt
inc
ret
dec
mov
or
sarb
icebp
or
out
aaa
jp
dec
inc
mov
andl
cmovp
ret
mov
in
clc
pop
inc
lret
pop
sub
add
add
in
mov
xchg
xlat
sbb
mov
adc
ret
or
roll
lret
jne
jnp
jle
cwtl
cmp
aad
lock
jp
dec
lods
or
lret
pusha
adc
out
push
ds
aam
fsubrp
jle
stos
leave
ror
je
rcrl
fmuls
mov
sarl
lret
pop
roll
mov
rorl
mov
stos
and
jae
ss
into
jne
stc
dec
in
in
cmc
lahf
mov
clc
lea
inc
lret
neg
adc
mov
or
xor
push
les
jnp
int3
daa
cmp
pop
cmpsl
jle
cmpsb
mov
xor
pop
mov
mov
fcmovne
inc
cwtl
fcmove
popf
fwait
dec
cmp
jecxz
cmpsl
mov
cld
cmp
sar
andl
mov
lret
punpcklwd
rcll
push
jb
mov
pop
push
out
lds
dec
scas
leave
cmp
push
jbe
test
fimull
add
pop
cli
jge
fdivs
push
pop
jp
std
lret
into
rclb
jae
xlat
mov
xor
decb
lea
cmp
nop
and
cmpsb
test
mov
repz
rorl
mov
jo
mov
imul
push
icebp
mov
push
sub
xchg
xchg
adc
mov
push
mov
int3
sub
lds
mov
imul
inc
push
xchg
int
ds
adc
adc
sbb
stos
icebp
lret
out
or
int3
in
roll
sarl
or
cli
mov
push
rcr
add
ret
jmp
shll
arpl
xor
stc
rcl
imul
lret
or
rcr
mov
or
cmpsb
rclb
dec
test
mov
scas
xchg
mov
or
mov
add
inc
mov
test
sti
jns
inc
add
lods
lret
add
xchg
into
fistpll
or
js
pop
inc
lcall
xchg
lds
into
pop
mov
adc
inc
mov
push
sub
lods
xchg
faddp
outsb
mov
cs
scas
or
jmp
repz
dec
cli
cmp
fcmovne
dec
xlat
jns
lret
mov
daa
scas
jmp
std
add
lret
test
jo
repz
fcmovb
adc
decb
leave
xor
popa
jmp
loopne
dec
dec
inc
add
bnd
lcall
out
add
aaa
cmp
jbe
lret
shrb
dec
push
dec
sahf
je
out
and
sti
mov
repz
push
lret
rcll
je
aad
mov
dec
add
lret
out
fwait
dec
xchg
shll
mov
rolb
popf
aas
cmpsb
faddl
mov
out
sub
popa
ljmp
fldl
jno
pop
scas
cmp
cld
ljmp
int
add
enter
jnp
cmp
js
fldt
lret
sbb
pop
mov
stos
cli
push
mov
xorl
popl
lds
xchg
mov
insb
mov
xchg
lret
iret
std
repz
dec
mov
cs
fucomi
hlt
jb
mov
in
cmc
mov
pop
pop
movsl
or
xor
lret
mov
mov
scas
jg
cmpsb
mov
into
push
fisubl
adc
adc
int3
in
hlt
lret
pop
je
shrl
add
pop
sbbl
notb
stc
mov
inc
gs
scas
and
mov
or
out
movsl
cmpsb
jp
pusha
js
lds
insb
loope
mov
push
add
hlt
dec
lea
or
rclb
rorl
sub
lret
shlb
das
repz
jo
stos
dec
cld
pop
enter
xchg
int
outsb
xchg
cli
addr16
lret
cmpsb
shlb
leave
mov
cs
mov
inc
ljmp
adc
fisubl
pop
shrb
lret
into
cmpsb
dec
popf
bound
stos
dec
sbb
ficomps
adc
mov
repnz
push
jbe
mov
mov
push
inc
std
add
dec
ds
mov
xchg
mov
insb
mov
repnz
adc
pop
icebp
add
mov
fs
cmp
test
outsb
mov
es
mov
test
shrb
lret
icebp
sbb
jnp
cmpsb
dec
xor
into
xor
lret
stos
lcall
fsubrs
lcall
ret
cmp
cmp
push
sub
push
lret
pop
popf
dec
fildll
icebp
nop
pop
dec
xchg
mov
jae
arpl
lds
das
cmp
or
test
cmp
out
loope
in
adc
or
aas
xchg
lret
test
sbb
adc
int
ljmp
cmpsl
int
pusha
gs
add
push
cmp
jnp
jne
aam
adcl
lret
pop
inc
sub
mov
and
lret
adc
test
jbe
outsb
leave
insl
mov
ss
sahf
dec
out
fldl
pop
iret
shrl
lret
mov
cli
popa
mov
mov
in
movsb
pop
ret
mov
imul
cmpsb
and
mov
aaa
leave
pop
mov
loope
dec
rorb
stc
aam
jo
xchg
xlat
lretw
out
gs
mov
or
insb
roll
pop
pop
hlt
and
lds
fcmovnb
ret
lret
push
cwtl
lret
jno
aaa
push
dec
cmp
pop
jecxz
leave
rolb
enter
push
inc
leave
push
mov
pop
fldenv
test
roll
mov
mov
shlb
pop
adc
cmp
mov
sub
dec
mov
cmp
das
jo
inc
inc
push
push
lret
dec
out
and
mov
shll
sbb
fwait
or
stos
jb
inc
adc
cwtl
jns
push
lret
mov
xchg
dec
and
loopne
rcr
lret
inc
fwait
int
lock
jo
xor
and
mov
int
mov
mov
cmp
shl
cmpb
testl
lds
fiadds
in
stos
jnp
lret
js
stos
fimull
or
mov
orb
out
xor
mov
push
movsl
inc
loop
ljmp
lgdtl
cli
and
movsl
fcoms
aas
xchg
leave
inc
pop
sbb
test
cwtl
shrl
dec
xchg
push
jmp
icebp
jo
mov
mov
lret
inc
jmp
add
popa
cs
or
mov
aam
lret
hlt
jle
and
cmp
out
movsl
sti
shrl
xchg
dec
ret
or
mov
pop
sub
cmp
xor
dec
ljmp
loope
jmp
push
jl
inc
test
popf
test
mov
dec
insb
or
test
push
int
gs
test
cli
aad
mov
push
inc
dec
dec
notl
icebp
cli
push
roll
rorl
out
stos
adc
sub
imulb
mov
loopne
movsl
addr16
scas
mov
in
std
pop
sti
push
mov
aam
mov
adc
mov
dec
push
or
pushf
jnp
adc
rcrl
sub
or
les
pop
scas
xchg
jae
call
jns
leave
sub
cmc
addb
pop
call
test
lret
out
or
icebp
mov
inc
sbb
lea
test
add
jo
or
mov
xor
rcr
ds
mov
mov
cltd
lret
pop
push
iret
dec
shrl
das
mov
sti
sahf
or
in
xchg
shr
sbb
roll
sbb
push
push
js
ds
shll
imul
ja
xorb
dec
push
xor
leave
add
and
jle
or
rcl
pop
outsl
inc
or
push
ss
loopw
int
insl
mov
lret
sub
mov
or
add
daa
loopne
or
mov
adc
scas
lret
and
xor
mov
hlt
lcall
push
sarb
cmp
fldcw
lods
cmpsb
jnp
iret
jecxz
lret
ljmp
pop
jmp
scas
cld
aam
mov
mov
jmp
jns
push
mov
scas
sbb
push
mov
movb
movsb
iret
jecxz
jns
dec
jl
sarl
pop
add
sub
lret
jbe
popa
out
cmpsl
pmulhuw
icebp
mov
xchg
int
and
fidivs
jb
int
imul
sub
call
pop
sarb
loope
das
rcll
outsb
mov
xor
loopne
inc
sbb
call
dec
stc
vpshufhw
cmp
lret
pop
movsl
cmp
idivl
cmp
jb
mov
popf
pop
outsb
pop
mov
push
aad
sub
or
clc
xchg
dec
push
lret
xor
jl
mov
or
repnz
addb
sub
lret
push
addr16
pop
push
adc
cmp
jb,pn
xchg
out
aaa
mov
ret
mov
je
ret
test
rcll
xorb
add
repnz
pop
idiv
fisttps
into
scas
iret
cwtl
lods
mov
movl
pop
push
rcll
mov
jne
push
repnz
scas
and
lret
pop
cwtl
aam
sti
sub
jp
mov
cld
pop
outsl
rorl
out
dec
mov
mov
push
stc
jp
fadds
cmpsl
lods
pop
into
jb
mov
test
cmp
lret
in
inc
mov
nop
lret
fistpl
push
or
jb
int3
test
push
ror
fisttps
mov
int
loope
adc
jle
test
dec
and
imul
or
cmp
rcrl
shll
nop
fimuls
call
rclb
and
jo
out
mov
jge
fmul
inc
pop
idivl
daa
int
push
enter
pushf
lret
and
dec
repz
scas
aaa
lret
hlt
cld
mov
push
jbe
mov
dec
filds
and
iret
fdiv
jecxz
or
mov
lret
xchg
sbb
inc
add
outsb
lret
aas
inc
fdivrs
add
xor
inc
xor
xchg
lret
mov
movsb
add
pop
xor
cmc
jbe
pop
xor
sub
sbb
mov
jl
orb
lret
push
or
daa
ljmp
or
jmp
lret
push
cmpsb
jge
sahf
jg
arpl
nop
mov
sbb
cld
or
std
jne
dec
jecxz
je
sub
fnsave
es
mov
inc
stos
push
rcll
fld
in
or
fwait
and
cmp
pop
and
add
test
cmp
adc
pop
xchg
cmp
push
aas
insl
scas
cmc
add
xchg
cli
push
cmc
out
xor
mov
fwait
lret
pmuludq
cmp
rcl
in
imul
mov
sbb
iret
cmpsb
dec
icebp
push
pop
xor
bswap
ret
notb
orb
cmpsl
mov
fnsave
into
leave
ljmp
mov
dec
mov
fisttpll
push
mov
xchg
sbb
sub
stc
xchg
leave
mov
or
ret
lret
iret
jnp
push
movsb
mov
sub
lret
pop
dec
stos
or
leave
les
and
sub
popa
mov
mov
shlb
icebp
or
or
scas
push
or
sbbl
fnstenv
mov
dec
jns
push
int
sub
xchg
in
dec
inc
jle
xor
pop
adc
and
ljmp
push
add
pop
cmp
into
fimull
or
inc
lret
pushf
pop
test
xor
xor
sbb
push
enter
sub
das
fwait
lret
xchg
cmp
xchg
xchg
jl
aam
pop
lahf
rcrl
sbb
jmp
loope
lods
stos
mov
mov
xchg
xorl
arpl
xlat
lret
inc
das
lret
imul
mov
adc
cmc
fadd
add
in
sub
jae
jb
repz
lret
enter
xchg
outsl
test
jbe
rcrl
jge
shl
adc
jb
pop
ror
fcmovnb
movsl
int3
iret
outsb
pushf
sti
or
lret
fs
mov
mov
lahf
test
shrl
je
mov
xor
mov
push
stos
stos
lds
out
aad
shll
pop
cmp
pop
ja
jns
lret
xor
insb
arpl
iret
test
push
mov
out
loop
shll
mov
xchg
scas
pop
les
lret
shl
cmp
mov
cmc
ja
inc
mov
and
int
aam
les
in
dec
mov
stos
out
fwait
test
jp
dec
mov
nop
xchg
pushf
cwtl
jl
rcll
push
dec
fs
push
mov
mov
xlat
mov
rorb
cmp
shr
jns
lret
repnz
je
test
or
pop
pop
lret
imul
xor
dec
setle
lret
add
mov
push
out
out
mov
and
scas
mov
lret
xchg
xchg
xchg
lret
adc
leave
cmp
fbld
ret
lret
mov
ds
popa
loopne
lods
and
repz
pushf
dec
ds
pop
jo
pop
mov
lret
lret
imul
ljmp
imul
cmc
shrb
push
sub
int
loope
mov
jg
ds
lret
or
jecxz
mov
repz
cli
ret
clc
lret
enter
jo
dec
inc
mov
sbb
mov
mov
fbstp
cld
dec
jb
xlat
insb
pop
pop
test
jg
mov
sbb
pop
loop
loope
lret
or
sbb
lret
or
adc
ret
dec
lret
add
ds
adc
in
inc
int
test
ss
xchg
cmpsb
lret
pushf
xchg
rclb
dec
imul
pusha
lret
icebp
cmc
or
vpcmpgtb
push
adc
or
pop
leave
iret
idivl
add
das
jmp
scas
fbld
enter
mov
mov
cs
or
or
mulps
lret
int
pop
mov
jno
sub
push
pusha
sub
jnp
jne
push
ret
cmc
xor
roll
mov
push
cmp
jnp
mov
push
xor
lret
pop
repnz
pop
fisttps
shll
xor
push
int
pop
sub
sub
mov
lods
shrb
add
xlat
lret
xchg
out
rcrl
or
out
lret
mov
pusha
ret
lret
jno
cmpsl
cwtl
das
popa
testl
xor
adc
mov
fs
pop
dec
mov
jmp
fistps
fnstcw
fidivrl
icebp
mov
loopne
shr
popa
cmpsl
ljmp
xchg
mov
enter
stos
psubsb
cmp
mov
test
cmp
add
xchg
aaa
imul
xchg
fmulp
pop
sbb
xchg
cmc
push
xor
mov
and
in
shlb
pop
test
sti
cltd
fwait
stos
pusha
lret
and
mov
sbb
lahf
xchg
push
inc
repnz
lret
jl
inc
pop
sahf
fsub
int
sbb
int3
fs
daa
cmp
xchg
jb
int
lds
xchg
cmp
pop
mov
lret
push
repz
jb
or
ja
and
cltd
xor
cmc
fnsave
leave
in
inc
test
jae
and
mov
cmpsl
stc
test
aaa
gs
push
adc
add
inc
add
ljmpw
cwtl
pop
or
xchg
dec
sub
in
or
mov
cmp
fs
adc
fistpl
data16
jp
inc
out
sarl
loop
cmp
bound
in
shll
adc
mov
inc
lret
stos
cwtl
jnp
mov
fisttpll
mov
js,pn
arpl
decl
rcrl
lds
pop
mov
inc
scas
cmp
pop
sarl
mov
pop
mov
mov
divb
fisubrs
hlt
sub
mov
clc
fistps
sub
xchg
lret
mov
scas
inc
out
sub
pop
divl
repnz
pop
mov
xchg
pushf
addl
and
xlat
pop
stos
cmp
push
mov
xbegin
jns
lea
xchg
lods
mov
icebp
mov
lret
push
enter
in
lods
adc
sbb
lahf
addr16
test
fdivrs
popf
lods
stos
repz
js
sub
rcrl
shr
dec
jnp
inc
jns
dec
lret
fistl
lret
xchg
add
shl
lret
ljmp
pop
jb
mov
xor
lret
jecxz
test
or
in
leave
and
mov
mov
mov
xchg
or
mov
push
xchg
and
inc
fsubs
fstl
movsb
lock
dec
push
in
ret
lret
push
inc
jb
iret
mov
and
lret
daa
loop
sub
lret
scas
cmp
shrl
dec
leave
das
push
or
enter
lret
adc
pop
js
je
sbb
or
pop
and
mov
in
xchg
dec
in
jbe
iret
mov
out
or
lahf
cmpb
outsb
or
jbe
push
sbb
or
pop
sti
pop
pop
jle
push
ss
into
std
insb
pushf
mov
lds
jmp
cwtl
dec
ret
inc
inc
call
pop
dec
shll
aam
sbb
sbbl
mov
hlt
lret
push
mov
cmpsl
into
int
sbb
cmp
fwait
xchg
lret
cmc
imul
xchg
icebp
pop
xchg
je
iret
jp
dec
leave
adc
xchg
loope
data16
mov
or
inc
push
mov
lret
or
fs
lret
jmp
ret
and
cmp
ljmp
mov
push
lret
imul
mov
push
or
add
and
sub
pop
push
lcall
adc
jo
or
lods
test
lahf
fbstp
std
add
xchg
dec
xlat
stos
cltd
leave
ja
testb
stos
dec
sahf
lret
xchg
push
fadd
jns
xlat
push
int
out
mov
cmpsl
std
xor
fs
mov
das
pop
loop
sbb
insb
add
lea
lods
lret
or
lret
sub
mov
and
fadds
stc
fldcw
call
leave
adc
mov
movsl
js
imulb
lret
pop
dec
fisttpll
pop
lret
cli
fdivp
iret
sbb
mov
lret
or
lret
cmp
inc
and
jg
mov
mov
cmp
jb
cmpsl
sahf
int3
out
add
push
dec
lcall
push
or
add
stos
and
dec
sbbl
mov
dec
lds
or
and
add
lods
mov
call
iret
pushf
adc
push
cs
jg
and
fldcw
insl
xchg
lea
imul
or
lret
add
mulb
inc
mov
jb
clc
dec
ljmp
psubsw
rcll
jno
mov
xchg
andl
and
lahf
adc
pmaxub
out
out
stos
icebp
mov
cmc
xchg
dec
lods
bound
mov
imul
xchg
rclb
ror
orb
repz
pusha
xchg
mov
fmul
push
adc
mov
sbb
xor
sbb
sbb
mov
cs
sub
xor
push
mov
or
lret
cmp
mov
es
xor
loopne
repz
das
lret
adcb
lcall
dec
ret
dec
ret
pushf
icebp
rol
rolb
shll
mov
inc
lret
add
push
lods
repz
xor
les
lret
push
rorb
sbb
sbb
xchg
out
and
test
addr16
or
clc
xor
push
shll
shrl
adcb
xchg
mov
lret
add
lret
cmp
push
lret
mov
mov
cmp
sbb
lahf
add
lret
cmp
add
out
fs
das
into
fldenv
in
mov
and
test
rcl
xlat
sarb
int
jg
hlt
daa
xchg
xor
sahf
and
int
rcrl
xchg
push
sar
filds
insl
mov
push
pop
push
sub
or
inc
leave
movsl
out
lret
into
js
test
lret
fimuls
ljmp
xchg
xor
mov
sub
vpinsrw
or
jg
sub
ret
out
pop
aaa
test
ret
pop
lcall
adc
dec
in
push
dec
add
andb
movsb
test
inc
cmp
cli
mov
xor
mov
pop
loop
add
movsb
loope
xchg
cmp
mov
jmp
or
sub
cmp
push
mov
lods
lds
jg
pop
mov
scas
lods
lds
cli
or
lret
inc
cmp
adc
sub
sub
addb
pop
fisttpl
cmc
ret
pop
push
and
and
rcrb
pop
iret
cmp
dec
fcomi
scas
inc
mov
out
mov
push
add
push
or
clc
pop
push
imulb
mov
xor
outsl
and
sti
and
cmp
pop
pop
lock
mov
adc
fs
cmpsb
aam
psadbw
dec
ror
push
in
aas
lret
fs
fmull
stos
and
jmp
orl
sbb
cmp
repz
cmp
outsl
lea
fdiv
dec
pop
aas
and
test
movzbw
movb
movzbw
mov
movzbw
lea
push
push
pushf
movl
pusha
pushf
call
sbbl
cmc
ret
pop
mov
xchg
mov
cmp
mov
push
cli
push
je
cld
pop
loopne
and
sbb
inc
rclb
ljmp
test
pop
inc
fistl
dec
inc
loopne
mov
ficompl
push
or
sbb
mov
fdivrs
fldl
clc
cmp
daa
add
out
shl
xchg
cmc
ret
pop
out
add
push
dec
add
add
dec
or
or
xchg
pusha
clc
push
push
sub
fxch
cld
pop
push
jae
mov
mov
mov
mov
push
aaa
ja
sbb
sbb
pop
movsl
sub
cmp
inc
mov
insb
in
cld
popf
push
addr16
jno
or
pusha
in
mov
loopne
movb
mov
xchg
test
sub
outsb
pushf
or
push
lods
mov
sub
ret
pop
push
dec
mov
inc
lods
stos
movsl
mov
push
adc
push
scas
pop
sbb
jmp
loopne
push
pop
adc
in
sbb
pusha
loopne
jle
bound
mov
cs
cli
dec
add
push
adcl
or
sub
fistpll
jbe
jbe
jecxz
jnp
mov
shr
cmp
sbb
lret
call
outsl
stos
jmp
add
mov
jmp
arpl
stos
xor
mov
mov
mov
jae
xchg
and
jne
loop
jae
push
fidivs
nop
ret
jo
adc
shrl
roll
nop
pop
inc
test
mov
or
pop
mov
or
pop
into
adc
xchg
cmpsb
rcrl
adc
mov
out
mov
rcll
jnp
stos
int
cmc
pop
out
xchg
mov
andb
in
leave
loopne
scas
mov
xchg
jae
pusha
inc
mov
pushf
pushl
ret
add
ret
pop
inc
int
shlb
sbb
xlat
mov
jno
pop
loopne
sbb
dec
bound
pop
sub
and
push
andb
adc
lcall
mov
push
test
outsl
or
pop
inc
int
lock
mov
jbe
ret
sbb
scas
mov
loopne
movaps
test
mov
lods
pop
cs
jmp
and
push
dec
inc
int3
dec
xor
aad
xchg
cli
rcr
jmp
mov
movzwl
lea
mov
pusha
stc
call
cmpsb
hlt
das
bnd
pop
insb
add
cld
push
in
pop
or
orb
pop
pop
xor
pop
cmp
xor
in
xchg
xchg
push
xchg
lcall
daa
dec
push
dec
mov
jns
sbb
jne
in
inc
pushf
loop
mov
loope
cld
xchg
xor
lret
dec
mov
insb
mov
jg
pop
jo
neg
lods
enter
mov
aaa
dec
dec
jne
lret
adc
or
out
dec
aam
cmpsb
xor
xchg
sub
cmp
in
jae
jns
push
call
push
mov
jmp
push
call
lods
int3
ljmp
call
dec
jo
bt
movb
cmpb
jmp
push
call
add
mov
push
bnd
pop
sub
cmp
sub
mov
push
test
pop
push
cmp
inc
push
out
int3
mov
and
and
imul
or
dec
push
ret
push
ljmp
sbb
pop
int
ss
xchg
js
test
adc
or
rolb
dec
or
inc
xor
addr16
push
inc
cmp
dec
jne
test
sub
mov
imul
mov
push
xor
add
push
or
add
add
inc
and
iret
neg
clc
pushl
jmp
dec
xchg
mov
ret
pop
xchg
push
mov
lea
int
sbb
pushf
mov
loopne
bnd
pop
or
addr16
dec
data16
shlb
xchg
aad
mov
pop
mov
pusha
sub
xchg
addr16
psllq
shlb
push
add
push
sbb
add
cmpsl
push
push
stos
xchg
popf
adc
add
xchg
das
xchg
cmpsl
jmp
xchg
das
int3
adc
push
pop
push
popf
adc
mov
push
add
je
das
push
adc
rcll
clc
mov
clc
in
push
call
stc
xor
add
ss
jp
cltd
push
call
xchg
shrb
lock
pop
push
xor
call
mov
push
add
mov
mov
adc
loope
into
sbb
push
mov
pop
cmp
test
adc
js,pn
mov
push
jg
or
test
sbb
js
hlt
je
dec
dec
je
pop
adc
mov
in
enter
pop
push
pushf
sub
fisttps
cmp
inc
sbb
in
outsb
jl
add
js
mov
test
call
push
call
pop
ss
clc
jo
sbb
ret
pop
gs
ret
jns
int
mov
lret
shr
push
aam
sbb
inc
pop
cmp
cmc
icebp
stos
mov
xchg
stos
mov
mov
xchg
out
andb
sub
sub
and
aaa
jmp
pop
cmp
inc
jecxz
sbb
nop
outsl
sbb
fs
jmp
inc
add
aas
inc
xlat
cmc
pop
push
cmc
mov
dec
rdmsr
mov
mov
ss
cmp
int
icebp
fsubs
lret
cmpsb
fidivs
or
jnp
pop
jb
and
lock
movsl
mov
mov
add
xlat
add
or
push
leave
sarl
push
btc
div
es
ja
test
sub
add
out
add
inc
les
das
jnp
call
xchg
add
push
push
js
arpl
gs
add
jae
add
add
add
imul
lock
ret
pop
xchg
pop
stc
bound
pop
push
adc
imul
push
push
js
dec
sub
xor
imul
jg
int
sub
mov
mov
xor
pop
sti
dec
pop
and
sbb
push
push
rolb
ja
lahf
cwtl
mov
xchg
mov
loope
mov
dec
clc
mov
out
idivl
mov
dec
dec
imul
add
insb
pop
adc
xor
inc
mov
rcrb
lea
mov
or
pop
sbb
mov
out
ret
pop
lea
pop
popa
adc
addr16
nopl
call
mov
inc
add
aas
inc
sbb
sarl
shlb
loop
aas
fcmovbe
stos
jb
aas
adc
sub
fmul
adc
push
insb
cmpsb
and
imul
mov
pushf
cmp
lret
mov
sbb
or
cmpsl
pusha
int
lcall
rcr
mov
mov
into
or
push
jnp
call
test
pop
fwait
testl
mov
cli
rcl
lret
cwtl
nop
insb
mov
bnd
adc
lahf
jle
dec
aad
and
fcmovbe
mov
pop
popa
cli
xor
and
pop
cmp
pop
inc
sbb
aad
insb
sub
pop
add
mov
lods
int3
pop
ffree
mov
ljmp
scas
call
jle
inc
mov
test
lock
loop
insb
test
imul
outsl
jl
lea
jne
stc
neg
xor
bswap
bsf
mov
rcl
add
rcr
rcr
rol
mov
call
push
call
cmp
imull
or
add
shll
ret
pop
fmull
mov
outsl
mov
mov
js
repz
cmpsb
ret
jae
cmpsl
xor
iret
inc
push
inc
repz
adc
clc
sbb
inc
push
cmp
repz
sbb
pop
andb
pop
sub
outsl
in
jnp
popf
enter
xor
xor
out
add
adcb
adc
pop
xchg
mov
mov
jae
jne
jecxz
pop
xchg
or
scas
mov
rcrl
lods
outsl
inc
js
pop
out
dec
xor
out
lods
mov
shrb
lmsw
push
call
dec
mov
pop
insl
xchg
nop
in
ret
pop
xor
add
stos
repnz
mov
int3
mov
fimull
push
dec
xchg
aam
clc
lods
cmp
jg
fwait
adc
inc
and
jmp
ja
cmp
pop
or
jecxz
lods
push
orb
aas
pop
and
loopne
jl
jae
sub
fisttpll
lcall
or
and
pop
pop
cmpsl
scas
mov
mov
hlt
stos
stc
push
and
ficompl
das
scas
mov
iret
xor
mov
pop
add
in
cs
adc
pop
sbb
xchg
pop
ret
cmpsl
in
test
or
pop
rorb
xor
push
and
cmp
dec
js
in
jmp
and
test
or
pop
push
ds
iret
dec
sbb
mov
aas
pop
push
call
xchg
add
jns
jp
lret
mov
subb
pop
lods
xor
cmp
xchg
subb
subl
aas
mov
xchg
lock
fistps
cwtl
mov
push
mov
mov
jne
sub
pop
shll
int
xor
les
adc
lods
les
ds
lds
inc
push
sub
scas
pushf
lea
jne
mov
call
push
call
xor
push
cmp
ret
pop
cmp
xchg
sub
add
clc
xor
popl
sub
add
add
add
sub
lahf
add
add
cmp
cmpsl
add
add
add
add
cmp
mov
sub
add
lret
sub
mov
push
cmp
and
sub
movl
cmp
in
cmp
iret
add
add
sub
add
aam
add
add
add
pop
cmp
out
sub
add
ret
sub
out
add
add
add
add
add
add
add
add
sub
pop
add
add
scas
je
ret
pop
push
aam
and
lret
fdivrl
inc
pop
jmp
pop
mov
das
sbbb
loope
pop
fs
nop
jb
jae
sti
inc
mov
pop
pop
fdivrl
inc
mov
pop
jae
addr16
mov
jl
icebp
inc
mov
or
lret
cwtl
inc
dec
add
js
out
pop
in
mov
aad
in
xchg
jne
test
jge
adc
push
jmp
iret
jge
jp
das
rclb
push
int
xchg
gs
je
fadds
add
xor
out
pop
stos
mov
inc
inc
dec
cwtl
inc
dec
int3
popa
loop
lods
inc
or
in
gs
mov
push
or
insl
mov
roll
enterw
mov
movl
movaps
mov
arpl
out
mov
lods
ret
test
sbb
or
sarb
inc
xor
push
int3
sbb
jae
and
flds
dec
enter
int3
movsl
push
call
into
xor
pusha
push
lea
ja
call
stos
pushf
push
lea
jmp
push
call
mov
mov
pushf
pushl
push
lea
jmp
push
call
loope
cmc
add
add
mov
add
or
out
pop
pop
fisttpll
fcom
iret
rorb
int
mov
enter
mov
fs
andb
cld
cmp
call
lods
dec
adc
test
inc
in
cmpsl
push
adcb
xchg
ds
sbb
mov
int
jno
cmpsl
jle
adc
rol
je
xchg
ds
mov
push
scas
jb
addr16
aad
enter
add
mov
cmpsb
jb
and
lea
call
outsl
mov
mov
cwtl
nop
mov
inc
dec
dec
dec
mov
je
dec
incb
ds
iret
leave
pushf
lret
call
mov
mov
aam
in
mov
js
pop
enter
mov
cmp
dec
xor
cmp
dec
add
lret
arpl
push
popw
jg
add
sbb
mov
ret
scas
jle
jne
int3
sbb
adc
fwait
test
arpl
dec
xor
pop
push
call
and
pusha
call
push
call
test
ret
not
bt
pushf
ror
call
sub
pop
stos
or
mov
mov
push
inc
call
lret
mov
jb
pop
sbb
es
push
in
scas
hlt
incb
jl
or
mov
outsl
fstps
cltd
jp
and
mov
scas
std
cmp
push
cmp
cwtl
jmp
cld
ss
lahf
or
rcrl
xor
stos
mov
pop
ds
xadd
xchg
dec
hlt
push
mov
rcl
aad
push
call
scas
pop
sbb
push
call
jmp
and
and
cld
repz
not
and
test
xchg
pusha
push
test
clc
mov
gs
nop
insl
mov
rcll
cs
mov
into
je
xor
and
xchg
in
ss
mov
lock
sbbl
pop
imul
xlat
mov
push
into
call
mov
xchg
out
mov
fwait
mov
ret
pop
notb
or
inc
repnz
testl
push
xor
jnp
outsl
fst
mov
cmp
jae
aad
sbb
test
in
clc
mov
aam
xlat
inc
dec
pop
ret
or
pop
xchg
sbb
inc
dec
fstpl
xlat
xchg
inc
pop
es
movsb
in
ss
dec
cmp
xchg
jnp
sub
sub
add
sub
cmc
add
or
cmp
icebp
lock
movsl
addr16
movb
movb
lea
je
sar
mov
btc
bts
setns
sub
add
sbb
mov
cmc
jmp
push
call
mov
mov
popa
insl
jnp
call
mov
iret
jecxz
pop
push
fisubrs
fldt
frstor
aas
or
jbe
das
jno
dec
arpl
in
pop
sbb
xchg
jl
fcoms
in
std
dec
xor
mov
inc
inc
fsts
pop
jl
cld
std
sti
xchg
xchg
scas
fwait
push
jne
aaa
dec
mov
sbb
cltd
lods
xchg
inc
pop
push
stc
bt
cmpl
pusha
pushf
call
push
out
xor
inc
inc
ds
add
dec
dec
clc
decb
dec
pop
pop
dec
jae
pop
jge
daa
or
jecxz
push
repnz
xchg
push
stc
test
shlb
dec
divb
mov
sti
loop
pop
sbb
leave
test
shlb
orl
xor
in
out
leave
mov
mov
xchg
sbb
jmp
push
call
sbb
lcall
or
testb
adc
mov
data16
or
xor
ss
ret
outsb
sub
roll
xor
sbb
out
inc
or
mov
fisubrs
js
mov
aaa
cmc
push
je
push
outsb
movsb
shl
out
jbe
sub
test
fistpl
ds
sbb
or
lea
call
pushf
push
push
adc
pushl
lea
jae
push
push
lea
jne
jns
push
movb
stos
push
lea
jmp
push
call
cmc
jo
xchg
and
loope
pop
jg
loope
mov
fcom
push
mov
jmp
and
test
add
fsubs
jge
or
rcrb
xor
cld
xchg
adc
test
xorb
fistps
mov
cld
aas
xchg
nop
mov
test
pop
icebp
inc
pop
or
lret
movsl
mov
and
and
sti
test
mov
andb
or
iret
cld
cmp
xchg
sbb
movsl
sbb
mov
xor
jb
outsb
aam
ds
xchg
xchg
loop
pop
or
out
xchg
call
jecxz
loop
xor
pop
or
adc
or
xchg
or
pop
and
jno
or
push
cmp
in
xor
es
or
dec
dec
xchg
fisttpll
mov
es
mul
jmp
pop
pop
ret
outsl
push
xor
and
cmpsl
mov
jl
adc
test
hlt
mov
sti
fisubs
int3
xchg
xchg
add
imul
xor
cld
mov
push
push
dec
mov
and
jne
xchg
pusha
or
fisubs
out
add
gs
call
popa
xchg
stc
push
call
dec
jge
push
call
xchg
imul
xor
call
cmpsb
cmc
cmp
push
cmpsb
push
call
push
call
test
daa
push
xchg
loope
pop
xchg
and
sub
sub
jp
xchg
push
mov
lods
cmp
out
int
dec
outsb
pop
into
call
inc
pop
xchg
adc
es
in
test
inc
jo
inc
lds
adc
lods
mull
outsl
lds
xchg
inc
inc
add
jecxz
outsl
test
jecxz
mov
imul
ret
loopne
stos
in
xchg
je
sub
int
adc
ret
pop
adc
loopne
mov
movsl
movsb
in
mov
xor
clc
mov
rclb
or
clc
xlat
inc
sbb
cmc
ds
mov
add
testl
ja
cld
jmp
pop
sub
clc
out
pop
sbb
fsubrs
stc
ret
sub
adcl
sub
repnz
lcall
mov
hlt
movsl
mov
cmc
jmp
fnop
sbb
cmp
or
loopne
pop
xchg
arpl
pop
sbb
jae
sub
or
and
push
jle
test
xchg
fldln2
inc
div
inc
mov
lret
cmp
push
sbb
sub
out
fidivs
or
stc
jno
mov
jg
add
div
loopne
cli
popa
jb
and
mov
mov
cmc
mov
jno
and
adc
orl
fidivl
mov
jb
das
sub
or
fwait
je
or
mov
push
lds
faddp
pop
and
lods
scas
sti
lock
lods
sti
out
icebp
stos
cmpsb
fstps
in
enter
cmpsl
test
in
enter
std
scas
divb
sbb
push
mov
jb
nop
cmc
rolb
imul
in
cltd
mov
cmp
pop
xchg
dec
dec
sbbl
in
sub
std
xchg
icebp
inc
mov
popf
push
rcrl
push
movsl
in
mov
in
push
and
fistl
out
mov
xchg
mov
into
dec
out
and
ret
pop
xor
mov
jp
cmp
sbb
jae
cs
sbb
pop
test
jl
insb
or
sub
jge
cwtl
mov
and
std
daa
cltd
and
test
mov
bound
cmc
scas
ss
xchg
jmp
cmpsl
test
ficoms
sub
out
scas
iret
lds
mov
lds
inc
movsl
or
dec
push
mov
push
out
ds
enter
jle
mov
dec
out
cmp
cmp
jge
aam
sub
inc
lds
stc
jecxz
jb
arpl
andl
mov
movsl
push
call
andb
scas
or
dec
ffree
pop
test
pop
add
or
roll
inc
dec
push
xchg
adc
mov
xchg
stos
or
adc
ficoml
cs
mov
insb
xchg
out
mov
popf
mov
insb
mov
dec
inc
subl
stc
divl
xchg
ror
test
call
lea
push
push
popw
dec
dec
add
lds
jge
mov
xrelease
jb,pn
inc
insl
xchg
shll
mov
cmpsl
mov
add
test
cld
fsubrs
sub
repnz
adc
call
les
rol
push
call
imul
add
cltd
in
xchg
xchg
in
or
mov
mov
sahf
pushf
jo
xor
sarl
sbb
ret
mov
xlat
test
and
js
jg
push
pop
mov
mov
or
subl
jb
xor
pop
js
cwtl
in
jg
test
mov
repz
pusha
push
sbb
inc
mov
mov
push
imull
cli
insb
add
or
add
out
sub
insl
add
data16
add
popa
push
call
add
ffree
pop
mov
sub
xor
mov
sbb
mulb
arpl
cmpsb
aad
cmp
movsb
and
outsb
or
sub
mov
mov
cltd
mov
jge
push
inc
aas
gs
in
mov
loope
pop
mov
pop
lcall
gs
cmp
sbb
push
jns
fnstcw
adc
sbb
call
ss
nop
mov
gs
ja
jmp
mov
sbb
and
scas
insl
add
mov
add
push
or
fadd
pop
out
lret
mov
jg
orl
xchg
xor
in
fsubrl
les
xchg
cmpsb
mov
mov
ljmp
jp
cmpsb
lret
scas
and
pop
sbb
ljmp
and
add
cmp
es
mov
mov
shl
mov
lcall
lret
ret
inc
xor
adc
push
out
xor
adc
arpl
arpl
and
pop
nop
adc
inc
pop
xor
xor
pop
xchg
out
push
shl
jmp
push
les
pop
add
out
bound
push
je
shll
stc
mov
daa
in
arpl
mov
nop
hlt
in
or
lea
loope
data16
fbld
inc
in
flds
jmp
pushf
cmpsl
call
push
call
mov
stc
insb
add
push
testb
or
fcmovb
pop
pop
das
rcr
loopne
ljmp
adc
adc
cld
inc
stos
pop
lods
jo
test
dec
dec
mov
gs
xlat
add
xchg
inc
in
mov
sbb
orl
or
lods
mov
mov
outsb
orl
jnp
cmp
dec
mov
sub
hlt
out
xchg
cmpsl
mov
ds
mov
imul
pavgb
lea
je
stc
sub
stc
push
bt
mov
mov
sete
mov
pusha
pushf
jmp
mov
cmp
call
out
xor
fld
pop
xor
mov
leave
int3
int
and
gs
push
mov
mov
inc
and
and
in
mov
out
sub
mov
in
dec
pop
das
or
les
jb
int
mov
popa
inc
shlb
jb
xchg
mov
or
in
xchg
mov
or
add
xchg
mov
sbb
rclb
addr16
xor
add
mov
and
cld
jno
call
cmpsl
and
lods
ja
ret
pop
and
pop
or
test
mov
or
shrb
push
test
xchg
adcb
inc
icebp
pop
sbb
bound
in
cwtl
mov
sti
sub
inc
sub
fidivl
push
dec
dec
dec
test
fwait
fwait
in
adc
jno
add
push
in
inc
rorb
jbe
pop
outsb
call
jo
mov
mov
jmp
bound
xchg
movsl
mov
or
aam
mov
sbb
pop
push
pop
icebp
add
push
push
call
repz
call
pop
aad
jecxz
lret
out
out
cmp
inc
cmp
jmp
pushf
mov
cmp
lret
mov
add
ret
mov
lods
and
push
icebp
xchg
loope
inc
xlat
test
jo
mov
rcll
xchg
mov
clc
or
mov
gs
mull
sbb
lods
clc
mov
stos
les
out
add
pop
push
mov
daa
jge
sbb
mov
pop
iret
call
jmp
iret
and
xchg
and
add
iret
fsubrs
inc
jnp
call
je
aas
movsl
or
rorb
call
xor
jmp
push
call
jp
mov
xlat
ret
pop
in
mov
movsl
mov
imul
mov
add
ss
jl
mov
cmpsl
arpl
or
ss
es
pusha
sub
das
sub
cwtl
cmp
mov
pop
and
idivl
leave
xchg
das
push
ljmp
jg
loope
cmp
xor
sahf
arpl
push
or
enter
and
xchg
loop
aaa
loop
or
push
insb
adc
jmp
push
call
mov
test
pushf
call
push
in
ss
pop
jmp
ret
insb
mov
cmpsl
inc
test
push
push
jecxz
mov
js
movsl
sbb
pop
or
sti
sbb
jbe
addr16
insb
insb
gs
and
mov
mov
insb
sub
ret
scas
nop
lea
pop
or
ret
dec
xor
inc
aaa
nop
leave
sti
inc
xchg
push
jne
mov
bound
popf
pop
pop
adc
clc
mov
jmp
ds
push
call
imul
jnp
call
lret
push
call
or
jno
add
inc
incb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
bt
mov
pushf
cmc
mov
jmp
or
mov
lea
mov
cmp
rcll
or
inc
fdivrl
mov
fisubl
jb
sub
lret
inc
sbb
dec
fildl
ret
stos
shl
mov
cmp
push
dec
inc
sub
and
out
xor
cmp
out
xchg
or
loop
inc
push
sbb
inc
out
xor
mov
inc
sti
sub
neg
mov
push
xor
mov
test
xor
xchg
jmp
add
ret
pop
pop
out
stos
scas
stos
std
stc
stos
mov
mov
add
shlb
fbld
xor
fcoms
fisubl
add
pop
mov
stc
scas
jl
pop
mov
test
int3
lods
lahf
clc
mov
cmpsl
dec
es
mov
push
xchg
add
sarb
or
cmpsl
loop
mov
dec
das
aas
out
shrb
and
cmp
test
push
call
mov
sbb
pop
sub
dec
nop
xchg
inc
inc
stos
inc
bnd
stc
fildl
ficompl
ret
pop
and
and
ljmp
sti
xchg
pop
adc
inc
mov
sbb
or
out
dec
fdivr
lret
cmp
push
arpl
cwtl
loop
hlt
aam
pusha
mov
pop
and
imul
xor
xor
sub
or
ror
pop
and
xor
and
fs
jnp
repnz
stos
test
jno
pop
test
nop
mov
daa
fisttps
lahf
adc
fcmovne
in
leave
lods
xchg
jle
por
sarb
cmp
cld
adc
lods
aad
pop
sbb
ret
andl
stos
mov
idivl
ret
pop
xchg
add
sahf
dec
cltd
dec
mov
push
mov
cmc
add
aas
insl
mov
mov
mov
in
sbb
dec
outsb
cwtl
cltd
jmp
sbb
mov
xchg
dec
ljmp
mov
stc
fstpt
jecxz
loopne
mov
xchg
or
dec
pop
ret
dec
push
sbb
mov
xlat
mov
dec
mov
mov
or
mov
pop
pop
call
loope
data16
add
mov
rol
pop
jg
xchg
in
out
xchg
sub
or
dec
cmp
cs
lods
mov
daa
ss
mov
inc
dec
fidivs
xor
mov
jecxz
dec
in
data16
jae
test
ret
cmp
fwait
in
jbe
dec
dec
daa
pop
jns
mov
lahf
mov
mov
xchg
and
clc
mov
fisubl
sahf
and
jnp
in
xor
lock
test
adc
in
cltd
stos
nop
stos
ljmp
pushf
js
pop
dec
lea
je
push
jmp
push
call
push
mov
adc
stc
rol
mov
xor
lahf
rol
aaa
lea
dec
movsbw
mov
stc
test
pusha
mov
mov
jmp
ljmp
push
pop
mov
cmp
push
pop
cld
mov
add
pop
sbb
loop
repnz
sbb
push
push
dec
shll
addr16
addr16
cmpsl
repz
repnz
popa
xor
je
leave
dec
dec
xor
cwtl
mov
mov
push
movsb
aad
push
loope
fsubl
arpl
jge
pushf
jg
mov
fistps
jnp
dec
lret
sar
cmp
pusha
fwait
xchg
fs
lods
out
out
js
mov
xchg
jmp
and
out
mov
add
inc
sbb
add
push
call
sbb
pop
jnp
call
ret
sbb
add
es
add
loopne
test
mov
orb
sub
cmp
clc
pushw
lahf
mov
sub
addr16
loope
pop
or
cld
movsb
jne,pn
mov
shr
bound
aaa
popa
xchg
sbb
cmp
es
inc
sarb
dec
fiaddl
jl
outsb
hlt
addr16
outsl
cs
std
int3
jns
movsb
repnz
push
dec
jae
icebp
rorl
xchg
pushl
rcrl
xlat
ljmp
out
push
mov
shrb
jo
fstl
rol
pop
cmc
jp
ja
push
je
lret
enter
aam
xlat
xor
decb
cmp
out
out
mov
sbbb
sub
mov
movsb
xor
hlt
push
cmp
call
out
jne
jp
sub
test
mov
mov
mov
adc
or
je
mov
cmp
enter
inc
shrb
push
aas
lea
iret
mov
sbb
mov
bt
rol
pusha
jmp
push
call
jge
add
pop
lods
jne
jne
jno
jbe
jns
jb
and
xchg
mov
jae
jne
mov
push
lahf
movsb
out
sbb
pop
or
pop
sbb
clc
repz
push
ljmp
jns
cmc
xchg
inc
je
clc
mov
push
adc
clc
aaa
mov
out
je
pop
sbb
xorl
ret
pushl
ret
fsubrl
and
repnz
mov
xor
pop
sub
scas
in
jg
rol
pop
not
int
leave
jp
or
jle
mov
rolb
pop
hlt
jl
xchg
insl
fs
dec
jge
iret
xor
dec
pop
mov
mov
pop
sbb
mov
hlt
jno
fs
imul
cmp
rcl
dec
int3
rcrb
xlat
js
and
call
sbb
adc
sti
jmp
rcrl
out
shrb
ficomps
sti
jmp
pop
int3
cmp
dec
sti
adc
movsl
jns
jb
std
call
fildll
addr16
cld
dec
pop
in
popa
in
fsubrs
or
call
out
or
pusha
pushl
rep
call
push
call
or
mov
imul
and
sub
iret
ret
pop
clc
jp
imul
aad
ret
jg
rolb
dec
pop
shll
cmp
adc
insl
fisttps
lods
movsb
pop
or
mov
inc
inc
loope
push
add
loopne
fstpt
in
fcmovnbe
aam
sbb
shrl
insb
jnp
call
xchg
cmc
xchg
imul
and
ljmp
sbb
add
xor
add
insb
add
lret
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
inc
push
push
xor
cs
insb
add
shrl
mov
loop
and
jae
add
gs
add
xchg
dec
addr16
add
lcall
cmp
call
outsb
push
enter
incl
add
push
and
movb
lea
jbe
not
shl
shl
or
mov
neg
bsf
xor
and
add
xor
clc
mov
cmp
sub
not
add
shl
movl
add
shr
bsr
mov
bt
stc
test
push
pushf
push
pushl
lea
je
pushf
sub
stc
mov
rcr
rcl
mov
cmp
cmp
pushf
pushf
pushf
pushl
lea
ja
pushf
add
neg
btr
shr
ror
shrd
jmp
mov
pop
cli
xchg
xchg
add
push
into
fnsave
dec
call
ret
pop
lcall
andl
movsb
mov
rcrb
adc
jmp
adc
mov
xchg
jg
pop
sbb
push
loopne
nop
mov
pop
xchg
sub
scas
cmp
push
int
mov
mov
mov
mov
add
sub
or
loope
arpl
sbb
js
cwtl
bound
stc
lea
fidivl
jns
insl
sub
in
cmp
std
je
lea
adc
call
xchg
test
sbb
repnz
lea
jmp
sub
mov
leave
xchg
lahf
loope
hlt
jne
sbb
inc
xor
rep
and
xchg
xlat
sbb
and
and
mov
pop
xchg
sub
xor
mov
pop
in
mov
mov
lods
scas
popa
mov
insl
insl
outsb
call
movsl
in
add
push
sbb
loopne
scas
fsubs
push
in
loop
jae
or
add
lock
jle
sub
pop
imulb
data16
pushf
mov
scas
adc
pop
push
dec
gs
dec
xchg
loopne
adc
cwtl
loopne
mov
lahf
mov
test
dec
xchg
or
mov
cmp
dec
std
xor
xchg
into
mov
lahf
jle
inc
sub
cld
lods
mov
sub
fildl
add
out
icebp
lcall
mov
int
pop
scas
aaa
inc
inc
sub
xchg
dec
pushf
xchg
nop
inc
lcall
lahf
xorb
ss
orl
into
insl
repnz
dec
xlat
push
clc
sub
pop
push
dec
push
pop
cmp
in
test
out
jno
lret
or
sbb
push
cmp
int
negb
cwtl
lahf
in
cmc
test
hlt
xor
aad
sbb
movsl
mov
push
sub
sti
pusha
mov
xchg
je
and
pop
pop
mov
into
test
aam
push
iret
cld
dec
push
xor
ja
add
add
loop
movsl
jb
jmp
mov
pop
push
and
aam
rcl
sub
add
add
lods
xlat
test
arpl
push
inc
and
pop
adc
inc
mov
push
fs
data16
setae
push
lret
jp
insl
xor
pushf
lret
pop
sub
pop
push
aaa
jge
in
scas
sti
push
mov
mov
mov
jae
das
adc
mov
daa
mov
sti
je
push
sbb
push
call
mov
xchg
mov
test
cmp
xor
adc
and
loop
jl
fistpl
int3
ret
pop
cld
xchg
pop
and
and
sub
imul
shlb
cmc
outsb
jb
mov
fcoms
pop
xchg
adc
test
pusha
cltd
cmpsl
lods
fsubrp
rolb
adc
mov
int3
and
cli
loopne
clc
movsl
aaa
in
lret
fstps
gs
mov
mov
into
call
repnz
fsubl
sub
sub
cmp
jns
xor
mov
adc
jo
dec
fld1
xchg
adc
data16
cli
std
mov
add
or
cmpsl
icebp
push
aaa
xchg
ja
mov
sub
jno
shll
aaa
xchg
out
push
mov
stos
sahf
lods
cltd
inc
sbb
into
mov
loopne
xchg
pop
inc
adc
adc
ret
pop
mov
cmp
dec
dec
push
mov
int3
push
pop
jg
mov
mov
add
hlt
jbe
fisttpll
cmp
mov
mov
int
sub
lret
pop
in
sub
clc
mov
add
and
mov
fildl
mov
test
aam
push
inc
sub
inc
xchg
fstpl
mov
pop
mov
test
push
testl
jge
push
push
adc
gs
adc
push
call
nop
push
call
jle
inc
loop
dec
add
call
pop
rolb
pusha
push
lea
je
clc
jmp
push
call
and
insl
add
mov
push
call
sub
push
call
adc
or
js
js
sub
lahf
or
out
lret
es
jb
sbb
lret
ret
sahf
shlb
iret
xchg
pop
leave
xchg
adc
bound
mov
out
mov
outsl
cld
xchg
in
or
mov
xchg
imul
push
mov
adc
inc
or
push
add
arpl
jo
sbb
mov
xor
sti
test
pop
call
xchg
ret
pop
or
in
loopne
fists
sbb
pop
arpl
into
sbb
inc
out
fimuls
cmp
stos
in
fwait
aaa
jbe
jae
pusha
std
bound
in
push
clc
push
mov
or
popa
std
bound
cs
bound
je
jnp
out
mov
mov
cmp
addr16
bound
jmp
jl
fs
or
ds
scas
pop
pop
leave
imul
fs
cs
insb
add
lds
and
pushf
lea
je
sar
stc
inc
mov
rcr
mov
test
cmp
xor
pushf
push
cmc
shr
sub
jmp
push
call
jo
push
adc
call
push
dec
pop
add
inc
jnp
call
push
or
enter
sarb
mov
dec
push
ja
shrb
pop
ljmp
cmpsl
mov
insl
mov
push
or
and
into
pop
dec
adc
xor
mov
fsubrs
xchg
xor
dec
fstpt
sbbb
mov
out
add
push
xchg
xor
bound
jae
cmc
shlb
imul
nop
outsl
sbbb
cmp
call
int3
lea
cmpsl
enter
mov
cwtl
mov
mov
xchg
in
mov
inc
das
mov
push
divb
orb
mov
ljmp
loopne
push
addb
andb
loop
pushl
inc
decl
stos
fcmove
scas
test
xchg
mov
sub
shll
clc
or
cmp
sbb
jno
js
xchg
sub
mov
nop
or
mov
mov
into
jg
rolb
dec
and
push
ja
or
lods
mov
push
sub
cltd
xor
dec
fisubs
inc
adc
lret
lds
dec
jge
test
mov
sbb
mov
rcrl
pop
repnz
or
test
mov
dec
jge
lock
scas
cwtl
in
inc
mov
pop
push
pop
shlb
add
sub
mov
adc
dec
rcl
mov
and
push
sbb
adc
mov
push
pop
and
mov
jmp
jg
push
cltd
cmc
mov
fwait
xor
insl
das
idivb
mov
inc
divl
xor
out
cmpsl
and
fs
xor
fnstenv
inc
frstor
sbb
or
daa
or
aad
mov
jecxz
or
leave
loop
rolb
add
jne
outsb
je
jb
jo
jb
imul
shrb
xchg
add
imul
iret
vmovhps
fsubrs
and
aam
pop
and
mov
int
inc
std
jbe
mov
sarb
jns
adc
mov
stos
movsl
pop
mov
iret
cmc
sbb
inc
cwtl
xor
mov
push
inc
imul
mov
arpl
push
push
adc
dec
inc
nop
maskmovq
idivl
xor
pop
or
add
cld
movsl
and
adc
test
jb
push
push
xor
xor
rcrb
inc
imul
or
lret
push
lea
je
clc
stc
cmc
bsr
add
bsf
shl
mov
stc
push
add
pusha
cmc
call
add
inc
push
dec
push
je
gs
insl
dec
outsb
outsw
inc
add
clc
jno
call
nop
add
inc
add
push
call
gs
ret
pop
xor
mov
adc
adc
add
jmp
mov
mov
xor
outsb
ss
mov
pop
push
pop
or
cmp
scas
xor
outsl
loope
in
imul
xor
fxch
test
jbe
add
lock
mov
push
sti
adc
mov
ret
pop
xchg
imul
sbb
sbb
stos
pop
sbb
jecxz
shl
sbb
mov
inc
hlt
push
ficoms
scas
jne
mov
xchg
and
hlt
dec
inc
cmp
pop
insb
or
and
sbb
icebp
inc
cli
dec
mov
lods
jbe
and
in
and
cli
dec
mov
mov
jp
pop
cmp
rorb
stc
loop
fs
push
das
loopne
ret
cmp
mov
sub
ret
ret
pop
daa
mov
add
mov
aas
cs
cld
add
adc
pop
inc
int
popf
out
fdivr
push
fbld
popa
push
popa
inc
sub
jae
or
add
sbb
popa
inc
sbb
fldcw
lea
loope
inc
decl
jb
shlb
or
test
enter
sbb
sbb
adc
insl
cmc
daa
pop
shrd
ret
pop
stos
cmpl
jbe
and
xchg
mov
fldl2t
icebp
pop
push
xor
rol
pusha
sbb
jae
mov
stos
add
std
fisubl
pop
mov
mov
xchg
and
sbb
mul
jle
xor
mov
jle
sbb
add
addr16
xorb
mov
and
add
mov
pusha
xlat
cmp
push
mov
lods
scas
xchg
or
ret
ret
pop
mov
iret
adc
js
int
lds
bnd
fldcw
imull
mov
cmp
mov
lods
repz
sbb
out
in
dec
xorb
jno
gs
adc
and
gs
arpl
lret
bound
pushf
mov
add
mov
stos
xchg
jb
xchg
fwait
adc
or
adc
mov
xor
call
in
bound
in
add
neg
add
std
jp
xchg
ret
pop
lcall
daa
jne
insb
daa
sub
mov
sub
rcrb
lock
fwait
loopne
xor
sub
push
je
fwait
mov
pop
jle
or
mov
outsb
bound
xor
jns
div
popa
aaa
and
dec
ljmp
int
and
and
push
mov
shrb
or
sbb
aaa
and
sbb
rcrb
jge,pn
mov
mov
sub
push
and
mov
idivb
push
sti
fsubl
subl
adc
aad
mov
ret
pop
insl
inc
cmp
cmp
cmp
idiv
and
sub
in
jae
cltd
mov
test
sbb
sbb
ja
js
jle
orb
jecxz
stc
pop
cmp
scas
push
stos
mov
out
adc
dec
xor
or
cmp
stc
push
scas
pop
mov
stos
lock
call
test
jb
lahf
cmp
jge
cmp
cli
or
sahf
jns
cmp
std
lods
mov
pop
add
push
call
mov
mov
pop
loopne
mov
arpl
mov
mov
insb
jo
loopne
sbb
push
std
xchg
mov
insl
mov
aam
gs
mov
fwait
leave
sbb
pop
pop
cmp
mov
lods
ret
ss
cld
imul
adc
mov
sahf
ss
imul
mov
pop
and
fsubr
into
jle
inc
and
out
rol
popf
jne
lea
jnp
call
lds
lea
stc
cmc
test
pushf
lea
je
stc
add
cmp
cmp
push
pusha
pusha
movb
lea
jb
cmc
stc
stc
cmp
cmp
push
lea
jae
inc
mov
dec
mov
sub
mov
cmc
push
cmc
mov
xor
stc
repnz
pushf
lea
jne
movsbl
rcl
bt
mov
shl
sub
xor
lea
mov
jmp
push
call
inc
mov
xor
mov
mov
hlt
stc
cmpsb
stos
cli
sti
scas
pushf
mov
notl
iret
shll
xor
inc
or
inc
sti
fs
pop
sbb
std
stos
mov
cltd
dec
adc
sub
dec
push
shr
cld
addb
and
sub
jo
push
inc
sbb
or
dec
ret
jns
jl
into
rol
shl
addb
adc
inc
cmp
imul
xor
or
aam
ret
inc
dec
and
or
mov
mov
pusha
pushf
pushf
pushl
ret
lea
ja
pusha
pushf
lea
jb
stc
call
push
call
iret
popa
push
call
inc
popf
je
cs
in
mov
dec
add
dec
push
push
dec
push
add
pop
movsl
mov
mov
add
pop
jmp
sub
and
xorl
fisubl
dec
jae
push
iret
shl
mov
popf
lock
and
dec
hlt
out
movsl
rorb
int3
addr16
rcll
jge
and
push
aas
sbb
fstpt
icebp
inc
addr16
rorl
xor
dec
pusha
and
imul
test
mov
into
fistpll
mov
mov
push
sub
fdivr
mov
loopne
sub
loopne
int
xchg
mov
dec
or
dec
add
or
popa
adc
and
sbb
loop
pop
int3
fimuls
imul
inc
adc
push
cli
cltd
repz
cwtl
jbe
pop
shl
xchg
addb
sbb
ret
popa
pushl
and
sbb
cwtl
lods
mov
pop
imul
mov
out
lea
mov
stos
out
cmp
pusha
and
icebp
sub
mov
xchg
mov
je
cmp
jmp
cwtl
enter
add
sub
out
cmp
mov
mov
test
stos
les
pop
jne
sub
je
movsb
pop
pop
fisubs
cld
mov
mov
jbe
hlt
jb
jmp
into
inc
add
je
notb
popf
pop
cmp
sub
popa
push
lret
sbb
sub
xorl
xchg
insl
movswl
pop
adc
lock
stos
call
das
push
int3
mov
clc
inc
outsl
in
loop
hlt
add
iret
push
mov
stos
mov
push
pop
pop
addr16
shlb
pop
das
filds
fxch
iret
jp
pop
push
sbb
jmp
push
cmp
in
cmp
jno
jge
stc
xchg
imul
int
jmp
repnz
out
mov
fstp
nop
jo
cltd
outsb
jmp
push
aam
xchg
mov
addr16
mov
ja
mov
jo
or
jb
pop
sbb
incb
gs
fs
or
ljmp
adc
mov
adc
and
mov
xchg
mov
and
scas
call
dec
push
or
pop
push
loopne
jg
fildll
pop
repz
cwtl
nop
movsb
push
sbbb
mov
inc
mov
dec
dec
decb
hlt
inc
cli
mov
fsubrs
adc
add
stos
push
ljmp
adc
xchg
out
fisubrl
or
jno
cmp
loopne
fidivrs
andl
dec
jmp
mov
dec
xchg
pop
lret
pop
les
ljmp
lret
insb
int
jnp
imul
and
add
mov
mov
pushf
movw
lea
call
jmp
dec
push
dec
dec
inc
xor
cs
insb
add
aaa
in
mov
rcll
enter
push
or
lods
pop
or
pop
or
stc
addb
mov
jge
push
xor
mov
mov
loop
xchg
cli
push
dec
jge
xor
adc
test
push
or
fdivl
bound
jnp
push
push
stos
xor
mov
out
insb
sub
jp
stc
xchg
fstpl
or
sahf
cltd
sub
push
mov
sub
jp
mov
bound
mov
imull
fiadds
push
call
std
pushf
push
mov
pushf
pusha
mov
movb
jmp
cmp
call
test
cmp
cmc
xor
push
cld
std
pushw
popfw
mov
movb
call
push
call
in
leave
or
push
call
cli
add
fnstcw
insl
outsl
mov
jg
js
xchg
test
pop
sub
sbb
sahf
push
and
mov
iret
push
add
dec
aam
jmp
xor
mov
mov
aad
xchg
and
mov
sahf
imul
cli
xchg
inc
mov
enter
sub
xlat
dec
pop
mov
push
iret
jl
pop
and
sbb
shr
mov
ljmp
mov
aad
add
push
jecxz
out
mov
mov
push
insl
jno
les
std
ret
fwait
repnz
shl
cld
rolb
pop
scas
dec
movsb
mov
xor
cwtl
loope
aam
leave
xchg
or
fnstenv
mov
dec
jmp
scas
sbb
fcomps
inc
fld1
inc
mov
ss
iret
cmpsb
int3
mov
into
fdivr
xor
outsb
clc
stos
in
or
int
jge
xchg
aad
push
dec
xor
mov
or
test
cli
jb
aam
or
pop
iret
in
sbb
out
lea
sub
push
call
sbb
add
cmpsb
rolb
add
jo
push
call
pop
into
or
pop
mov
ja
xor
jg
sub
test
or
call
adc
push
scas
int
and
flds
in
pop
pop
cmp
dec
mov
outsb
push
lcall
dec
in
dec
dec
mov
xchg
pop
fcom
push
pop
loopne
and
add
or
dec
cli
sbb
daa
cmp
xchg
mov
dec
jb
rcll
jge
test
popa
pop
fists
add
clc
or
dec
repnz
test
dec
outsl
leave
loopne
shrl
insb
add
mov
add
push
add
pop
and
sti
stos
scas
xchg
mov
ljmp
lret
pop
icebp
inc
and
and
mulb
or
repnz
mov
push
mov
mov
inc
xor
icebp
cmp
fucomi
gs
push
ljmp
cs
call
sbb
adc
movsb
rol
push
and
push
in
mov
out
mov
lret
ja
xor
int
add
sbb
and
mov
je
pushf
push
jmp
cmpb
pusha
pushf
movw
call
call
mov
inc
mov
test
push
mov
sarl
out
jb
lret
xchg
lods
scas
mov
lcall
jmp
dec
xor
repz
out
mov
pop
sbb
icebp
rep
out
lcall
add
pusha
mov
out
addb
add
jp
lret
inc
cmp
rcl
fadds
arpl
xor
mov
rol
mov
mov
cmpsb
add
out
or
add
jmp
and
leave
ret
mov
mov
or
xor
lahf
lds
lcall
mov
dec
add
lods
arpl
aad
mov
sub
push
aas
in
add
ret
cmp
push
adc
xor
push
call
clc
in
ja
add
and
inc
and
scas
pushl
pushl
lea
jmp
ret
in
ss
pop
dec
pop
inc
lods
mov
insb
scas
mov
mov
sub
popl
mov
pop
pop
mov
rcrl
aaa
orl
hlt
addr16
and
loop
or
inc
test
jns
jne
mov
xchg
rcl
mov
xchg
and
sub
test
test
js
lcall
add
pop
inc
sub
scas
xchg
test
out
test
cld
or
js
mov
pop
lock
addr16
lret
cmp
ficoml
jge
push
and
mov
dec
into
iret
fs
mov
jge
xchg
mov
sbb
jnp,pn
xor
adc
adc
xchg
popa
stc
dec
adc
scas
lcall
popa
add
sahf
out
adc
pop
mov
pop
dec
int3
pop
cmp
inc
add
sub
mov
mov
xchg
mov
inc
push
jo
repnz
xchg
insb
ds
pop
bswap
pop
call
push
call
cmc
cmpsb
xor
sbb
mov
pop
sbb
mov
cmc
imull
fbld
out
sahf
or
stc
mov
cmpl
fs
stc
and
inc
adc
add
push
jl
and
pop
ficomps
repz
shll
sbb
add
jecxz
cltd
fstl
mov
in
xchg
jecxz
jns
sub
dec
mov
and
mov
ret
popf
fwait
xor
rcrl
leave
arpl
out
or
xchg
pop
mov
pop
mov
pop
push
and
fmulp
sub
jmp
add
insb
mov
lahf
mov
aam
mov
cmc
push
into
sub
jge
test
jg
cmp
mov
jns
mov
push
pop
add
in
jae
pop
cmc
imul
mov
mov
xchg
leave
mov
lock
cmpsl
daa
popf
aad
int
insl
fwait
mov
movsl
in
rolb
pcmpeqw
cmp
fs
into
mov
inc
push
cs
aam
mov
mov
cmp
repz
mov
movb
iret
fcmovu
repz
sbb
in
call
push
mov
adc
scas
lods
cmp
int3
leave
loope
incl
inc
cmpsb
mov
daa
popa
pop
lret
loop
loop
mov
sbbb
push
sahf
sbb
pop
test
dec
sti
in
cld
jns
xchg
sub
ja
dec
lret
insb
stos
test
dec
addr16
mov
add
repz
add
stc
sti
sbb
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
sbb
call
xor
adc
mov
shll
push
test
mov
bt
and
jmp
cmpb
call
dec
cwtl
mov
ljmp
leave
mov
rolb
call
jo
pop
je
enter
sbb
mov
cmp
shll
and
jb
mov
sbb
pusha
ret
mov
adcb
leave
test
shrl
inc
or
inc
sbb
add
jg
add
sub
pop
add
insb
add
sbb
add
mov
dec
into
cld
daa
mov
pop
je
dec
push
push
loop
cli
std
pop
push
pop
adc
popf
in
pop
test
ret
rcr
stos
pushf
jmp
lret
xchg
bound
xor
cmp
scas
lods
or
sub
xchg
pushf
sbb
fstpl
lahf
mov
cmp
addb
dec
sti
or
gs
pop
push
in
sub
sub
popa
and
mov
pop
test
fdivp
and
mov
cmp
ret
sub
pop
push
aam
scas
xchg
cwtl
testb
dec
and
movw
bt
cmp
pushf
pushl
lea
ja
movsbl
shr
mov
bt
add
shld
and
rcr
jnp
shr
not
btc
mov
mov
add
add
shl
shl
bsr
rcr
mov
bt
call
push
call
je
insb
add
cmc
cmp
pushf
pusha
call
lods
dec
fdivs
int
fsubs
rcrl
adc
daa
inc
pop
cmc
adc
movsl
jl
cs
xor
mov
jmp
and
pop
lods
lock
dec
xchg
mov
scas
ja
aas
enter
mov
dec
out
xchg
lods
cmp
fmull
fdivs
cmp
xor
sbb
in
out
fadds
or
int
aad
adc
mov
pop
mov
sbb
xchg
fldcw
loopne
insb
test
ljmp
nop
insb
das
adc
push
inc
push
dec
xor
cs
insb
add
rol
rol
pusha
cmc
push
not
ror
rcr
push
rol
ror
rol
neg
sar
jmp
js
adc
loop
fmull
ficoms
negl
pop
push
xor
push
cmp
xchg
shrb
nop
mov
pop
loopne
insb
push
mov
mov
leave
and
pop
jmp
sub
sub
cmp
mov
aaa
lret
jecxz
cltd
jecxz
mov
adc
push
out
aad
and
adcl
jb
das
aad
push
jne
movsb
jg
pop
pop
inc
repnz
xor
inc
fisttps
jo
sarl
lcall
add
jns
add
mov
jnp
call
adcl
and
mov
imul
gs
pop
prefetcht2
aas
imul
int3
sub
mov
xchg
jns
subb
mov
xor
lcall
sbb
push
add
icebp
mov
arpl
push
mov
daa
jbe
xlat
cmp
test
push
cmc
or
mov
xor
lock
stos
sbbl
push
call
and
jb
jmp
push
call
fildll
or
call
mov
push
call
xchg
dec
dec
adc
in
ret
pop
cmp
lret
sbb
push
push
sbb
rcl
and
push
and
pop
out
je
mov
xor
push
pop
hlt
mov
fs
outsb
dec
aad
mov
lret
nop
shlb
in
inc
lret
daa
out
sbb
fildl
xorl
inc
dec
adcb
lret
ja
pop
push
rcrl
mov
mov
aad
mov
int3
fst
sub
out
nop
rclb
ret
pop
shlb
cmp
in
fisubrs
mov
mov
pop
mov
ret
movsb
push
lret
aad
cmpsb
mov
dec
cmp
push
or
in
hlt
ljmp
mov
loopne
dec
push
shlb
in
hlt
loope
cmpsl
fisubrl
rorl
ss
jg
popa
cmp
das
sbb
stos
pushf
fs
cmp
shrb
lods
xor
dec
std
inc
fsubrl
dec
push
push
test
pushf
cltd
mov
mov
mov
pop
aas
adc
push
stos
fsubrs
pop
xchg
lea
cmpsb
cmpsb
dec
pop
pop
mov
mov
ljmp
insb
dec
outsb
mov
ret
pop
insb
hlt
incl
add
dec
dec
dec
add
or
xchg
scas
mov
jb
lds
mov
into
jg
pop
movsl
shlb
movsb
jp
lahf
sbb
xchg
push
mov
push
push
mov
xor
inc
pop
cs
fdivrs
xor
pusha
dec
adcb
aas
inc
fstl
adc
stc
or
sbb
push
pop
icebp
shrb
ret
pop
clc
or
jae
subb
push
mov
lock
jmp
mov
std
fs
inc
mov
cmc
cmc
lods
pop
pop
iret
cmc
ljmp
jp
idivl
xor
xchg
jb
sbb
mov
enter
std
leave
fdivrl
jmp
and
stc
pusha
test
add
pusha
mov
pushl
mov
lea
jmp
push
call
in
hlt
loopne
push
call
cli
frstor
mov
rorb
in
push
movsbw
or
xadd
push
bt
inc
bsr
das
push
stc
dec
pushf
mov
sar
push
bsr
js
or
xadd
push
rcl
movsbw
xor
push
shl
xadd
call
jmp
push
call
je
inc
push
movl
bsf
rcl
mov
push
add
js
stc
test
jmp
clc
test
test
sub
jmp
lea
jae
push
pusha
pusha
lea
jmp
lea
ja
pushf
jmp
add
push
lea
jmp
in
push
lods
ret
pop
push
shlb
lock
cmp
inc
push
lcall
sub
lahf
ss
cs
xor
ficoms
inc
xlat
xchg
stos
repz
aam
ljmp
adc
mov
clc
outsl
ljmp
adc
cmp
lods
cmp
adc
cld
and
sbb
enter
inc
dec
xor
dec
sahf
je
movsl
sub
mov
cmp
or
mov
cli
out
iret
cmc
lods
ret
pop
repz
adc
xchg
hlt
out
jmp
repnz
or
fistpl
stc
shrb
add
cmpsb
int3
stos
cli
out
fcomps
pushf
ss
xor
out
mov
insb
popf
fistps
push
add
mov
cli
add
hlt
int
mov
push
insb
mov
sti
in
sahf
xchg
jmp
leave
xchg
jp
out
clc
repnz
pop
les
cmp
add
push
cmp
dec
xchg
movsb
test
lea
jbe
setge
lea
pop
movzbw
pop
jmp
push
call
or
jl
add
sub
add
pop
cltd
mov
push
call
or
xor
std
es
ret
pop
sti
sarl
les
lret
mov
ror
stos
clc
imul
push
pop
pop
dec
dec
jne
xor
mov
lods
xor
rcl
or
cmpsb
icebp
cmpsb
jbe
jle
cltd
int3
sbb
mov
xchg
insl
xor
stos
mov
out
pop
iret
sbb
ret
dec
cld
dec
test
mov
or
and
fistl
scas
sbb
xor
jp
pusha
into
mov
xor
pop
js
xor
jge
lret
jmp
pop
or
andb
ljmp
jb
mov
outsb
and
add
popf
repz
jmp
in
xchg
jmp
mov
lods
es
mov
aam
jb
pop
mov
pop
clc
pushf
cs
push
pop
cld
into
movsb
pop
cmp
dec
or
lret
mov
mov
inc
and
jne
movsb
aaa
lea
xchg
aam
fs
xorb
ret
addr16
adc
push
lret
push
xlat
insl
push
jb
pop
xor
dec
mov
ret
fdivl
ffreep
xchg
loope
lock
push
call
and
call
test
push
push
call
add
jmp
add
jl
add
das
inc
lods
dec
push
call
cli
cmp
push
call
test
add
mov
dec
push
call
loop
divb
imul
mov
add
js
popf
xchg
outsb
insl
gs
pop
sub
jbe
jle
or
hlt
jle
adc
push
addr16
dec
pop
jns
les
push
loope
fs
cli
push
jnp
daa
cld
popf
add
sahf
popa
cwtl
mov
outsl
jo
jnp
rcrl
sahf
push
sub
iret
jecxz
addr16
pop
dec
pusha
aad
push
xor
daa
test
insl
push
push
push
sub
xor
jnp
sub
cmp
xchg
test
into
jmp
popf
cld
rcr
test
sbb
test
popf
add
hlt
and
sbb
cmp
push
add
sbb
clc
arpl
inc
and
push
dec
jne
daa
fcomps
mov
mov
dec
dec
mov
mov
or
add
mov
ds
pop
repz
fimuls
jo
lret
push
repz
add
add
pushf
xchg
sar
jl
test
push
push
incl
push
push
add
push
dec
pusha
adc
jno
insl
rorl
int
rorl
fldcw
lcall
mov
xchg
xorl
je
fnstcw
mov
add
aas
cmp
loopne
push
inc
mov
jo
or
aas
or
lcall
rcll
and
sbb
andb
iret
cmc
mov
push
insl
inc
push
add
fwait
adc
test
pop
setl
jns
nop
xchg
jecxz
xchg
jmp
in
jmp
out
mov
dec
pop
lret
sbb
adc
mov
pop
js
sarb
pop
test
movsb
out
loop
xchg
sbb
loop
cld
cmpsb
leave
xchg
fwait
es
popf
fbld
sub
es
mov
in
adcl
xchg
add
daa
adc
adcl
aas
sub
and
inc
xor
fcomp
andb
pop
dec
lods
fadd
aad
mov
mov
ljmp
movsb
jg
ret
pop
inc
adc
sbb
adc
adc
lock
lret
int
rcrl
xacquire
sti
mov
xchg
lods
or
lea
and
and
gs
xchg
jmp
pop
or
push
adc
lock
adc
ret
in
sti
xchg
adc
xchg
sub
mov
xorb
sub
in
lcall
out
mov
nopl
pop
jnp
call
jb
test
dec
aam
ret
pop
dec
fcmovbe
sub
and
push
into
and
std
inc
and
pop
ja
or
xchg
mov
cmp
daa
jbe
jecxz
add
or
ljmp
filds
or
push
nop
nop
sub
icebp
stos
mov
les
or
fwait
jae
loop
and
push
jmp
adc
js
scas
inc
or
out
mov
xor
jae
push
cwtl
mov
cwtl
repnz
aas
mov
loopne
xchg
in
leave
mov
ret
pop
and
jle
je
jae
sub
jg
and
addr16
fcomp
rcl
inc
scas
xchg
xlat
sub
jbe
fisttpl
xor
rorl
stos
mov
cld
out
push
fiaddl
ds
in
rorl
xor
lcall
aas
dec
call
int
out
into
push
cmc
push
xor
imul
xchg
into
mov
out
xchg
and
dec
test
out
and
sbb
xor
mov
mulps
jge
cs
movzbl
add
movsbw
neg
movsbl
mov
pushl
call
push
call
cmp
ss
or
add
add
stc
imul
cmpsb
ret
pop
inc
jmp
lret
stos
lods
stos
popa
inc
scas
arpl
jb
inc
pusha
push
outsb
les
adc
jae
mov
cmp
fs
in
and
mov
cmpsb
pop
mov
push
in
and
rcr
cmpsb
jnp
mov
lcall
leave
stos
pop
jne
inc
push
mov
and
lret
rol
js
xchg
in
mov
add
pop
and
sbb
mov
stos
xorb
dec
mov
adc
pop
push
mov
dec
stos
es
xchg
mov
pushf
cmp
call
loopne
cmp
xchg
sub
int3
sub
loop
cli
pusha
mov
popa
xchg
ret
fimuls
and
lock
jne
adc
lds
adc
pusha
lea
jae
call
pop
mov
movsl
ret
pop
sub
enter
rcrl
inc
ss
push
or
add
sbb
scas
sti
movsl
cli
fwait
push
aam
inc
lds
xor
xor
lock
push
test
inc
dec
mov
lds
cli
cltd
test
movsl
mov
mov
mov
xchg
xor
pop
mov
clc
jecxz
add
dec
pusha
aas
in
cmc
mov
pop
test
adc
mov
pop
aaa
or
mov
hlt
sub
cld
sub
shll
shrb
mov
mov
outsb
cwtl
mov
mov
mov
sbb
mov
popf
inc
mov
pop
lret
mov
push
or
stos
leave
clc
cmp
sbb
shlb
pop
and
sbb
sub
jnp
push
arpl
mov
bound
js
and
mov
popa
jo
test
ds
jecxz
cld
adcl
or
mov
xchg
fnstsw
inc
outsl
enter
jg
fs
cmp
dec
sub
mov
popf
test
sub
add
mov
and
addr16
sbb
movsl
data16
rcl
stc
push
rcr
add
sar
dec
neg
mov
pusha
test
pushf
jmp
xchg
xor
mov
rol
lret
int3
sbb
iret
sbb
movups
push
push
ja
cwtl
lret
scas
leave
es
cwtl
lahf
push
hlt
sub
les
and
cwtl
mov
cwtl
outsl
lods
xchg
jno
mov
sub
and
mov
pop
xor
jmp
jg
inc
push
aaa
in
cld
fst
shlb
iret
jp
push
call
push
bt
sub
cmp
mov
pushl
popl
call
add
decb
or
push
popw
outsl
push
shl
aam
jo
or
push
sbb
jo
cmp
fstl
hlt
xchg
inc
sti
or
mov
outsl
push
pop
aaa
int
mov
adcl
pop
xor
in
call
lret
fs
or
cmc
pop
out
lcall
push
sti
in
adc
fcmovu
xchg
dec
push
inc
jbe
pop
pop
jp
fsubr
inc
out
nop
into
push
jbe
add
push
sbb
jmp
in
lret
test
addr16
pop
inc
push
cmpsl
cmp
shlb
adc
lret
rcrb
sbb
inc
or
adc
xchg
add
or
pop
cmp
dec
adc
cmp
fwait
adc
jb
pop
std
ds
cwtl
mov
out
add
ftst
mov
adc
xchg
mov
jno
add
stos
jmp
ja
js
sbb
lret
or
lods
mov
sahf
sbb
jo
sub
add
cwtl
cmpsl
xchg
pushf
jecxz
clc
xchg
sub
out
std
test
mov
inc
lea
xchg
mov
dec
les
ds
sub
sub
outsl
dec
adc
ret
and
ja
and
hlt
dec
ja
jge
notl
out
fs
cmpl
rorb
add
js
sub
mov
mov
xchg
in
popf
iret
xor
sub
or
mov
rcrb
ret
mov
ss
sub
mov
cmp
and
fstpl
arpl
mov
and
fsubrl
push
push
rcl
push
aad
ret
cmp
cmp
addr16
pop
fstpt
lock
ret
pop
scas
jne
pop
mov
movsl
repz
leave
adc
add
xor
mov
aaa
sub
add
cmc
mov
aam
jg
jne
lahf
push
cs
push
jp
cltd
je
cmp
lods
jne
lahf
sti
jp
dec
push
jp
push
sub
mov
push
pop
dec
hlt
call
fisubs
fsubrl
insb
add
call
push
loope
es
jp
call
add
add
ret
add
mov
pop
icebp
push
call
loopne
push
jmp
push
call
fcom
or
popf
aaa
in
lahf
ret
pop
xchg
lock
lock
mov
xchg
loope
or
cmc
or
aad
add
or
xor
xlat
push
outsb
xor
sub
mov
xchg
mov
ja
jg
lock
or
jo
outsl
ja
jl
and
or
mov
mov
jp
insb
sbb
and
test
inc
xchg
hlt
lods
adc
ret
shll
add
enter
add
sbb
mov
add
pop
leave
add
jle
mov
mov
pushf
push
pushl
ret
push
call
insl
pop
xor
ret
pop
loop
outsb
mov
dec
push
jno
jne
int
in
or
test
adc
mov
out
aaa
es
out
push
lcall
rep
out
xchg
aam
ficomps
push
es
jbe
lahf
xchg
aam
pusha
outsb
stos
inc
dec
scas
xchg
ja
adc
lret
loopne
mov
pusha
rorb
and
mov
pop
mov
or
dec
out
cmp
pop
jbe
lea
mov
jmp
and
in
sbb
cmp
data16
pop
cs
xlat
popa
dec
cmc
and
cli
xor
cmp
movsl
lahf
ret
pop
jl
pop
cmc
pop
push
or
adc
arpl
js
jbe
div
in
sbbb
jns
insb
add
push
cmpb
icebp
movsb
cmc
push
fwait
or
int3
lods
fiaddl
faddp
or
xorb
aad
int3
lods
inc
sub
icebp
icebp
lret
stos
shlb
pop
add
lods
fmulp
outsl
daa
and
xchg
jb
sbb
cmp
pusha
btr
pushf
add
bt
not
mov
clc
test
cmpsb
mov
jmp
lea
jne
shl
bsf
bt
mov
pusha
stc
add
call
xchg
xor
popf
ret
pop
xor
or
or
push
and
add
pop
and
cmp
fnsave
lret
rcl
stos
pop
jle
lret
icebp
inc
fnsave
sahf
xchg
stos
cld
jge
adc
cmpb
inc
and
mov
jnp
incb
jbe
xor
and
adc
or
jne
adc
adc
arpl
dec
clc
sahf
pusha
movw
lea
jb
pusha
pushl
ret
push
pushl
add
add
add
cmp
add
add
iret
loop
add
add
add
jae
add
add
add
pushl
add
add
add
sub
add
add
add
sub
add
add
add
add
add
sub
add
add
add
cmp
add
add
jbe
cmp
add
add
add
add
mov
daa
add
add
add
add
addb
add
adc
add
std
push
cmp
jmp
cmp
jns
sub
add
add
add
add
add
cmp
pushf
ret
pop
mov
lea
xchg
xchg
inc
xchg
daa
sub
adc
lods
mov
outsb
mov
out
xor
sub
cmp
fdivrs
jnp
cmp
addr16
push
jae
cs
jge
cmp
popf
jl
ljmp
mov
inc
ficoms
jp
pop
repnz
icebp
out
push
mov
mov
inc
cwtl
push
lahf
add
and
dec
js
sub
add
in
out
ljmp
push
jnp
call
push
ret
pop
loope
scas
scas
mov
scas
lods
mov
inc
jnp
mov
outsl
imul
fmuls
and
fiaddl
jmp
cmp
rolb
in
lcall
mov
iret
mov
pop
mov
lret
mov
fildl
cmp
xchg
sbb
pop
add
mov
xchg
push
and
and
jp
aaa
push
push
int
xchg
movsb
sahf
or
dec
fs
lea
ja
cmp
movsbw
movzbw
clc
add
lea
add
sub
sub
shr
shl
and
movsbw
cmc
mov
dec
rol
lea
add
inc
xor
mov
jmp
push
call
pusha
push
call
push
xchg
pop
repz
roll
lret
jl
add
dec
sahf
loop
and
pop
fwait
ret
pop
mov
xor
jb
scas
daa
and
or
pop
popa
adc
push
xor
jecxz
ljmp
adc
inc
fwait
ret
pop
lret
scas
dec
imul
fdivp
mov
cmp
adc
lds
mov
mov
push
jae
mov
hlt
sub
outsb
adc
out
push
jnp
xor
fs
dec
out
adc
push
lahf
cmpl
inc
pop
pop
pop
out
jmp
ss
mov
jns
mov
jnp
call
xchg
pop
popf
repnz
call
lds
int
fwait
ret
pop
sub
cmp
mov
gs
insl
and
jge
enter
dec
cmpsb
xchg
xchg
push
sub
xchg
cmpsl
pusha
into
cmp
sarl
xchg
rcrl
cmc
loopne
push
inc
cmp
pop
sub
jmp
aas
xchg
add
hlt
xchg
or
inc
cmp
push
dec
shrl
mov
sub
ret
js
xor
xchg
push
xor
sub
cwtl
ffreep
fsubr
dec
jnp
ret
mov
loop
outsl
jl
dec
sub
mov
cs
scas
cmp
jle
mov
ret
pop
pushf
cli
stos
scas
hlt
lock
movsb
scas
std
stos
adc
test
insb
push
push
test
pop
iret
mov
fiadds
inc
das
xchg
mov
ret
pop
xchg
lcall
mov
imul
pop
sub
mov
cmp
push
lea
imul
push
enter
xor
leave
mov
and
pop
cmp
xor
inc
xchg
sub
repz
pusha
jp
fcomi
push
cli
push
sub
xor
push
addb
mov
xchg
push
inc
xorb
push
je
dec
ds
jl
je
cmp
adc
sahf
cmp
sub
in
insl
andb
mov
mov
and
daa
mov
cmp
push
inc
cmp
pop
or
mov
pop
in
pop
mov
gs
fstps
adc
adc
mov
pop
mov
pusha
mov
inc
int3
int3
xor
pop
jnp
stc
aad
ja
js
fs
jne
cwtl
mov
sub
icebp
test
faddl
pop
cmp
push
mov
mov
int3
jle
jmp
sub
sahf
in
and
in
push
stc
ffree
test
push
cld
adc
mov
lcall
lret
xchg
in
jne
ret
shrb
xor
adc
add
nop
ljmp
fcomip
movsl
xor
xlat
mov
into
stos
subl
jge
add
loop
rorl
cwtl
ret
pop
or
hlt
mov
mov
pop
pop
add
pop
icebp
jp
les
or
jecxz
call
dec
adcl
mov
int3
daa
xchg
inc
dec
xor
xor
push
mov
faddl
daa
or
sbb
out
mov
sbb
cmp
xor
daa
or
cmp
and
insb
xlat
inc
cli
cmp
sbb
movsb
xchg
nop
sbb
movsl
jns
sahf
push
call
int3
mov
mov
cmp
xor
and
and
sub
push
pop
sarb
push
jg
subl
and
xchg
sarl
inc
and
or
mov
fldl
ret
pop
fldt
lods
test
pop
stos
scas
pop
mov
shl
mov
jmp
scas
cmp
adc
jne
push
adc
lea
xchg
lret
add
adc
popf
sbb
jae
jecxz
inc
or
fdivs
pushf
movsl
into
mov
ss
cltd
mov
sbb
inc
inc
and
push
xor
inc
add
stos
pop
sarl
aad
mov
push
out
xor
adc
xor
sbb
inc
mov
push
jnp
call
int
pop
lock
jae
addr16
dec
mov
loope
push
call
add
dec
jnp
call
pop
out
fsubrs
call
xlat
xchg
shlb
pop
mov
cmp
dec
mov
lea
sbb
inc
push
push
outsb
int3
fdivr
push
mov
xchg
mov
push
test
sub
inc
test
adc
sub
pop
lahf
mov
dec
adc
sbb
xchg
dec
orl
lock
mov
out
xchg
sub
sbb
jns
fiadds
dec
scas
sarl
js
lods
sbb
mov
inc
and
dec
ljmp
adc
jb
imul
stos
pop
mov
hlt
leave
push
call
mov
add
shrb
mov
call
push
ja
push
cld
insb
add
insl
mov
add
jnp
call
in
ds
fsubs
xchg
push
add
mov
out
mov
cmp
neg
jmp
pusha
jmp
movb
push
inc
pushf
pushf
mov
jmp
and
and
jno
jns
xor
sub
dec
jge
push
das
jns
xchg
inc
dec
push
cmp
hlt
add
into
push
popa
out
pop
popf
jae
dec
test
jns
cmpsb
je
js
push
sbbb
jbe
sub
xchg
adcb
jmp
inc
cmp
inc
adc
mov
fmul
xchg
jae
xchg
std
pop
adc
mulb
add
inc
leave
mov
sbbb
fs
je
shl
bt
setge
movzbl
mov
test
sub
sub
stc
setg
ror
shr
lea
rcl
bts
mov
adc
shl
add
shrd
add
bt
bswap
mov
bt
test
cmc
pushf
shr
clc
stc
cmp
call
push
call
or
adc
xchg
add
and
shl
clc
rcr
sub
stc
btc
sar
pusha
sub
add
shl
pushf
not
setnp
mov
sbb
pusha
rol
mov
movb
repnz
call
enter
ret
pop
inc
popf
mov
mov
scas
mov
repnz
pop
inc
ss
add
sub
vcvttps2dq
jbe
push
sbb
call
adc
sahf
enter
xchg
xor
mov
add
rorl
pop
lcall
aam
test
cld
cmp
mov
sub
mov
leave
xchg
xor
dec
mov
sbb
inc
xchg
in
js
ljmp
adc
ss
call
and
lods
xor
add
sub
dec
push
push
inc
push
xor
cs
insb
add
pop
push
xor
jle
ds
mov
mov
imul
sbb
ja
jno
xchg
stos
pop
hlt
jp
ds
shlb
or
or
loop
outsl
inc
ljmp
mov
icebp
bound
ss
inc
sbb
loope
mov
mov
addr16
stc
jp
enter
popf
loopne
or
fmull
cli
cmp
fwait
jp
jne
je
dec
adc
fwait
xchg
addb
out
enter
xor
loop
shr
sbb
loop
push
and
adc
mov
mov
pop
push
add
lods
pusha
mov
shlb
or
xchg
ret
pop
test
add
stos
icebp
scas
nop
hlt
stos
mov
rorl
adc
mov
fwait
lds
icebp
adc
dec
call
push
xor
inc
push
mov
mov
or
xor
jecxz
hlt
push
adc
sub
movsl
push
ss
sbb
or
cltd
testb
pop
xchg
jg
xchg
add
mov
and
stos
fwait
jnp
fwait
ja
inc
clc
push
mov
jo
aaa
jns
xchg
loopne
fnstsw
sub
ret
pop
sub
mov
mov
xchg
cmp
jae
in
jb
xlat
movsl
int3
push
loopne
std
lret
in
insl
or
push
mov
fisttps
dec
sti
pusha
sub
or
inc
cmp
jg
sbb
dec
push
mov
in
dec
and
mov
repnz
incb
and
and
xchg
and
dec
aam
jno
loope
lahf
jp
cs
sub
out
int3
scas
lods
cld
arpl
mov
cwtl
jb
pusha
pushf
lea
call
push
movb
push
movb
adc
lea
jo
call
call
pop
test
cmpsl
jp
adc
sub
cmp
push
sbb
and
hlt
or
sub
mov
ja
arpl
pop
sub
fldcw
mov
lock
int3
bound
lahf
add
int3
lret
int
jmp
es
jl
push
in
inc
jns
sub
repnz
xor
inc
inc
lods
or
dec
and
cld
push
movsl
loopne
mov
inc
cmc
push
mov
push
testl
pushf
mov
push
push
icebp
insb
add
fnstsw
and
nop
ret
pop
mov
mov
les
mov
jmp
pop
cmp
sbb
xchg
js
mov
dec
shlb
mov
mov
push
and
hlt
sbb
scas
test
std
das
jecxz
mov
out
enter
sub
sub
or
cmc
jno
in
cwtl
xor
mov
lcall
pop
pop
test
pop
or
sub
mov
and
scas
test
add
aam
mov
into
jmp
cmp
pop
mov
inc
inc
xor
dec
dec
lcall
adc
fwait
lahf
lds
rolb
mov
sub
cs
dec
push
hlt
stos
add
sub
mov
ret
push
cs
sub
mov
push
xor
or
scas
out
es
or
jmp
add
les
imul
jmp
call
push
call
dec
or
cmp
push
call
icebp
shrb
jo
nop
ret
pop
outsb
idiv
pop
push
push
add
add
negb
push
cltd
nop
xor
out
sub
fdivrl
int3
adc
mov
mov
inc
pop
inc
lock
mov
test
mov
outsl
daa
sbbl
test
and
popa
cmp
sbb
dec
aaa
xchg
aaa
ret
mov
scas
sub
add
test
xchg
and
mov
fs
jnp
cmp
call
mov
pop
inc
push
popa
stos
sahf
pop
cmpsb
push
mov
fcoml
outsl
inc
aas
sbb
mov
xchg
mov
imul
xchg
add
bound
adc
add
xchg
push
and
scas
stc
inc
mov
sbb
cmp
add
xchg
loope
pushf
ficoms
pop
jp
jle
std
sahf
icebp
jp
sub
mov
inc
inc
jle
movsb
and
adc
sub
mov
sahf
mov
push
das
dec
icebp
lret
fmuls
push
pop
mov
andl
pop
movsb
sub
adc
je
sbb
and
inc
int
test
lods
inc
jae
add
pop
jmp
xor
test
pop
mov
lahf
cmpb
push
pop
dec
test
rcr
test
lret
or
ljmp
mov
cli
push
cmp
push
mov
mov
cmp
repz
iret
lret
and
test
in
rorb
add
xchg
in
sbb
or
movsb
and
subl
ret
mov
lcall
jo
mov
pop
xchg
movsl
lock
in
call
test
push
pop
roll
or
popl
cmpsb
lock
jecxz
mov
rorb
fisttpl
inc
fnsave
lea
into
or
xlat
pop
push
push
pop
jmp
movsb
inc
sub
mov
mov
in
pushf
push
call
pop
adc
push
mov
pop
into
popf
mov
cmpsl
test
mov
mov
out
jb
mov
out
pop
je
mov
inc
ljmp
pop
push
mov
jle
dec
icebp
sti
loopne
xchg
add
xchg
xchg
xchg
push
shrb
xor
mov
cwtl
icebp
mov
push
lcall
sbb
cmp
dec
xor
mov
popa
adc
aas
push
call
push
pop
push
call
pop
sbb
dec
add
add
addr16
jo
outsb
push
je
jb
addr16
outsb
dec
dec
outsl
arpl
jns
gs
push
call
inc
ss
mov
inc
cmp
stc
add
add
addr16
outsl
xchg
xor
sahf
push
mov
or
xor
lcall
sarl
push
inc
pop
inc
pop
in
aad
icebp
xchg
loopne
movsl
inc
jge
stos
cld
test
shrl
in
or
jne
add
pusha
int3
sbb
lock
sub
outsl
or
and
xchg
cmp
sbb
add
aas
std
dec
push
xor
sbb
mov
sahf
xchg
jmp
nop
fwait
std
and
or
std
fldenv
cld
mov
pop
and
cld
test
pushf
add
fimuls
out
out
xor
in
sbbb
fwait
insb
imul
pop
add
pop
dec
loope
push
clc
aaa
es
xor
shl
fsts
cmpsb
dec
cs
test
and
adc
push
outsl
mov
push
add
sub
and
xchg
sub
add
sub
inc
daa
aad
shlb
ds
leave
ffreep
xlat
notl
inc
mov
mov
icebp
jmp
dec
and
xor
call
push
call
fs
mov
mov
pop
mov
inc
mov
xor
xor
dec
jge
xchg
in
adc
mov
jl
xchg
ret
inc
dec
xchg
lret
fstpt
cmc
test
jl
loop
add
add
dec
inc
xchg
or
xchg
outsb
arpl
cmc
or
bound
pop
fidivrl
xchg
outsb
arpl
into
dec
mov
jo
sub
xchg
jns
xor
leave
fmuls
mov
mov
pop
inc
iret
push
rcl
and
sbb
adc
fs
sub
out
adc
cmpsl
sbb
sub
inc
daa
sbb
jne
lods
sbb
jo
jb
xor
inc
push
lret
int3
inc
icebp
mov
sbb
or
push
aad
scas
fprem1
add
imul
jmp
cmp
sbb
pop
xor
daa
scas
push
add
shll
frstor
cmpb
xchg
in
sbb
das
push
call
mov
sahf
les
ret
pop
pop
xor
das
jnp
outsb
and
xor
and
mov
add
jnp
fimuls
mov
stos
cmp
xchg
enter
out
pop
jecxz
jp
sub
outsb
or
inc
std
sbb
lahf
add
stos
out
sub
xchg
mov
icebp
mov
sbb
jnp
and
mov
xchg
xchg
push
ljmp
hlt
push
push
in
mov
outsl
xchg
shrl
mov
cmp
rclb
adc
movsl
lods
jmp
push
call
push
bound
sub
add
fnstenv
lret
mov
lea
rcr
neg
adc
mov
sar
shr
clc
neg
mov
setge
rcr
rol
sub
sub
lea
push
pushf
xchg
pusha
lods
bt
rcr
pushf
rol
rcl
not
not
ror
mov
rcr
ror
stc
adc
ror
cmc
neg
pushf
xor
jmp
clc
bt
clc
mov
ror
mov
jmp
push
call
mov
sub
mov
loopne
fistl
call
xchg
les
xchg
sti
icebp
aad
and
das
cld
out
mov
bound
in
ss
mov
int
or
out
inc
int
inc
aaa
movsb
out
test
mov
inc
into
or
sub
mov
popf
loop
lock
fstps
loop
mov
jae
test
sbb
adc
popa
cmp
adc
xchg
xchg
nop
sbb
testb
cmp
dec
adc
stc
mov
cmp
leave
scas
test
push
out
scas
add
lcall
call
pop
jne
dec
mov
lcall
pop
pop
xor
add
add
dec
inc
jo
scas
push
pop
in
fldt
inc
lds
lahf
shrb
hlt
inc
and
ja
int3
es
xor
sahf
sti
and
jmp
mov
je
dec
sub
xchg
and
in
xchg
outsl
cmp
cmpsl
stc
push
stos
stos
xchg
sub
push
adc
in
rol
inc
pop
jb
in
xchg
or
xchg
pop
pop
lret
pop
shrl
jae
enter
jp
icebp
jo
popf
jo
xor
stc
loope
xor
and
jo
sbb
jae
fcoms
jo
lcall
movsl
lods
test
outsl
or
pop
fisubrl
mov
in
insb
stc
add
xchg
das
mov
imulb
flds
cmp
adc
adc
adc
iret
mov
imul
and
and
pop
ds
leave
pop
mov
pop
imul
aaa
hlt
cmp
decl
inc
push
push
mov
push
push
sub
xor
js
xchg
mov
xor
push
bound
jo
pop
and
ds
inc
mov
jp
adc
bound
jle
out
dec
sub
inc
push
into
mov
test
popa
sbb
xchg
je
push
popa
or
insb
inc
pop
cmp
xor
fwait
repnz
xor
adc
scas
xchg
pop
in
test
fdivl
xchg
fimuls
mov
sub
repnz
jns
push
mov
xchg
cmp
leave
xchg
cwtl
imul
push
mov
sub
and
jecxz
xchg
sbb
stc
aas
push
xchg
subb
dec
insb
lret
loop
xchg
dec
in
pop
leave
addb
out
fstpt
cltd
mov
jbe
push
mov
movl
shll
jbe
mov
push
call
cmpsl
out
ficoml
push
call
fidivrl
pop
out
insl
mov
push
jne
pop
mov
cmp
hlt
mov
pop
aaa
jge
lret
scas
movsl
jbe
stos
lea
lcall
cmpsb
dec
mov
ficoms
movsl
sub
lods
inc
adc
push
pushf
adc
push
xchg
jbe
cmpsb
mov
xor
sbb
into
cld
andl
sub
jbe
in
outsb
add
nop
adc
lock
adc
orl
inc
out
ljmp
imul
dec
adc
rcr
push
call
or
movsb
jg
ret
pop
mov
jg,pn
xor
mov
fisttps
ret
stos
repnz
popf
mov
rcrl
rcrl
pop
mov
or
fldenv
xchg
in
or
dec
outsl
in
fmuls
xlat
sub
filds
push
or
js
mov
xchg
or
stc
fwait
push
rclb
add
push
jecxz
mov
dec
pushf
sub
fdivs
and
mov
repz
cltd
mov
jns
sti
and
ret
gs
call
loope
adc
push
call
ss
push
out
in
push
call
enter
leave
push
call
in
fldenv
inc
fiadds
mov
mov
add
add
push
mov
sub
add
enter
inc
cmp
shll
add
hlt
mov
mov
pop
in
jno
sbb
in
icebp
loope
int3
and
rol
daa
pop
idivb
push
repnz
lahf
cmp
insb
adc
or
xchg
mov
xchg
in
lea
fcoml
in
add
mov
rcrb
cmpsl
mov
lock
jge
rol
movl
addr16
fisttpll
arpl
cmp
mov
add
lock
aad
testl
mov
mov
push
aaa
shrl
dec
frstor
dec
lds
outsb
or
dec
int3
ja
xor
stos
mov
js
scas
out
or
lds
test
lea
sbbl
add
into
add
push
xlat
and
iret
les
push
scas
jmp
imul
lcall
dec
xlat
ficompl
movsl
push
xchg
sub
das
je
pop
xchg
mov
mov
pop
fs
mov
mov
mov
jecxz
inc
xchg
add
mov
mov
adc
leave
jecxz
insl
arpl
xor
dec
sbb
in
mov
icebp
sbb
or
fldl
ret
pop
cmp
push
aas
mov
pop
mov
xchg
repnz
xor
fistpll
dec
pop
in
jg
jbe
push
pop
jmp
dec
jmp
push
sbb
sub
jo
ret
jp
or
ret
cmp
mov
lahf
std
das
shll
mov
scas
jmp
jg
shrb
or
mov
cli
fadds
dec
push
loop
test
call
push
call
bound
add
imul
cmp
xor
loope
aaa
rcrl
cmp
out
mov
js
sahf
jmp
cmp
and
jns
lods
in
fwait
popf
dec
pop
mov
adc
rep
cld
out
xchg
push
adc
mov
lret
movsb
jno
repz
fimull
adc
add
leave
add
sub
mov
test
lea
stos
mov
test
push
hlt
add
xchg
pop
add
dec
push
popa
bsr
lea
sub
pusha
clc
call
or
mov
mov
test
cmpb
call
stos
sbb
add
sbb
out
sahf
call
mov
inc
dec
jnp
or
popf
mov
leave
lods
or
push
add
mov
lret
leave
arpl
flds
dec
cld
fdiv
jge
andb
inc
stos
xchg
test
mov
sti
mov
mov
lret
xor
enter
dec
jae
sub
aaa
aam
push
mov
inc
pop
xor
loopne
shrb
pop
dec
jo
dec
ret
sbb
ret
jns
push
mov
inc
cwtl
xor
pushf
mov
out
cmp
imul
into
popf
mov
rorl
mov
dec
sbb
push
sbb
jmp
pop
jno
inc
xchg
pop
aas
aad
in
cmp
iret
mov
jl
and
push
jge
inc
push
adc
fwait
push
movsb
add
add
cwtl
shlb
addr16
xor
out
lahf
js
subl
xor
push
roll
pop
mov
roll
mov
mov
ret
mov
lret
out
mov
jge
mov
imul
bswap
out
inc
jns
andl
sarl
adc
out
mov
test
push
arpl
call
mov
add
pushf
out
xchg
sbb
ljmp
lods
push
repz
stc
mov
lea
jae
sbb
rcl
inc
mov
not
shrd
cmc
mov
add
sbb
mov
mov
clc
call
push
call
cmc
shrb
outsl
addr16
pop
scas
add
vpsubusb
out
push
insl
add
mov
add
mov
push
pushf
pushf
lea
jae
inc
cmp
not
neg
mov
push
shrd
mov
cmc
pusha
mov
stc
sub
bt
pusha
movb
repnz
mov
lea
jne
or
mov
or
sub
clc
mov
bt
pushf
sub
pushl
push
movw
pushl
popl
pushf
pushl
cmp
jmp
adc
mov
xchg
sti
clc
jmp
out
in
movsb
mov
push
or
daa
insl
dec
fs
inc
testb
jmp
in
and
hlt
leave
fdivs
mov
int
lret
stc
xchg
mov
or
insl
idivl
shrb
mov
mov
dec
loop
mov
lret
add
dec
adc
add
pop
mov
call
inc
cs
mov
lds
mov
push
pushf
jecxz
testb
adc
lret
mov
sbb
sbb
xchg
sti
fsub
lea
jb
pushf
mov
jmp
push
call
out
jo
jg
pop
adc
mov
loopne
jo
xlat
lcall
xor
push
fisubrs
jno
adc
sahf
mov
jg
lea
jb
inc
jbe
inc
std
cmp
fiadds
xlat
popf
mov
adc
pop
sbb
icebp
movsb
orb
adc
mov
leave
pop
jg
pop
imul
sub
xor
loopne
in
icebp
push
imul
sti
iret
pop
test
pop
push
fsubs
sti
scas
testl
out
mov
xchg
dec
es
outsl
daa
inc
cmp
repz
out
inc
inc
lret
leave
xchg
decl
mov
jl
repnz
mov
repnz
notl
and
leave
movsl
jae
sbb
push
out
xchg
in
int
and
movsl
xlat
out
push
call
or
fldl
ret
pop
or
jmp
loop
xchg
ljmp
pop
sub
xchg
clc
rol
or
pop
mov
mov
call
int
jne
jo
xor
jecxz
mov
mov
aas
imul
jmp
rcll
ret
popa
xor
enter
sub
rcrb
push
mov
jp
int
xchg
add
aad
mov
inc
mov
pop
outsl
pop
ss
mov
sbb
sub
sub
xorb
shrl
push
imul
push
xor
cmpsl
bound
stos
call
test
mov
mov
vmread
mov
sbb
lods
xor
cli
adcl
xor
sti
ret
int
sbbl
outsb
lods
fcmovnb
cmpsl
xchg
xor
adc
aad
jnp
sub
pushf
enter
xor
push
jge
pop
push
cmp
lock
jg
dec
mov
xchg
jb
sbb
pop
mov
fldenv
mov
dec
pop
inc
push
cmp
out
repnz
or
add
arpl
iret
into
dec
out
jne
sub
dec
scas
xchg
outsb
mov
data16
sub
or
and
enter
jne
cmp
jbe
mov
sbbb
mov
insb
add
dec
xchg
add
das
mov
jnp
call
mov
push
call
lds
aas
jl
pop
loop
mov
pop
inc
stos
pop
test
mov
cmp
pop
test
aad
test
cmpl
lret
imul
int
pop
xorl
pusha
sti
cld
push
les
call
arpl
sahf
out
aad
push
jo
and
or
pop
mov
insb
fildl
pop
mov
push
pop
push
inc
inc
int3
es
movb
mov
adc
cltd
js
ds
push
xchg
mov
pop
in
or
pushf
outsl
push
leave
cmp
xor
ret
rcr
jne
loop
jnp
pop
push
xchg
adc
iret
lret
push
cmp
push
js
stos
inc
mov
fs
push
push
add
jo
push
mov
xchg
inc
test
or
sarl
push
lret
mov
add
imul
popa
jae
inc
add
cmp
dec
pop
icebp
ljmp
push
jnp
call
mov
add
notb
cltd
unpcklps
pop
or
rcl
adc
mov
xchg
repz
js
shrb
xchg
pusha
rolb
xor
sbb
mov
cltd
mov
pop
add
inc
std
hlt
pop
es
dec
jne
mov
cli
icebp
inc
std
pop
xor
push
subl
push
shl
jecxz
cmp
push
dec
sbb
inc
adc
ja
adc
cmp
and
je
dec
bswap
or
mov
pusha
rcl
sub
jno
cmp
add
btr
dec
mov
pusha
test
call
push
call
or
push
cmpsb
setp
pushf
mov
lea
push
jmp
mov
xor
pop
dec
pop
dec
push
mov
insb
mov
sti
imull
and
repz
mov
addb
jle
popw
mov
jg
mov
mov
xchg
inc
mov
ret
xor
aaa
jl
test
les
dec
adc
fstl
pushf
adc
and
addb
sbb
push
in
pop
outsb
leave
call
sub
icebp
add
in
jo
mov
pop
stc
insb
sbb
ret
shll
jle,pt
xchg
mov
addr16
xor
cs
mov
pop
adc
or
adc
sbb
push
push
xchg
inc
ds
dec
int3
jmp
jecxz
push
test
jo
jo
or
jns
outsb
sub
mov
or
aas
pop
push
cwtl
mov
add
or
pop
jnp
mov
mov
add
int3
mov
dec
xchg
pop
ss
testb
push
test
mov
or
inc
and
dec
and
cmpsl
mov
insl
add
mov
add
aad
data16
fildl
clc
xor
jmp
push
call
pop
test
clc
bsf
mov
cmc
stc
pusha
cmp
and
call
push
call
and
ret
pop
imul
icebp
cli
dec
inc
inc
ds
inc
repz
cli
nop
jecxz
out
mov
mov
mov
movsl
push
jg,pt
and
into
inc
int3
jbe
add
lea
or
lea
sub
shrb
dec
jge
ret
add
lods
xor
cmp
mov
jge
je
fnstenv
stos
jp
sbb
adc
lahf
push
adc
sub
fcoms
scas
mov
bnd
repnz
adc
push
ss
out
insl
xor
sub
rclb
dec
mov
pusha
icebp
jle
daa
js
pop
je
or
or
or
popa
repz
push
sub
lea
stos
out
push
mov
es
mov
jnp
jo
jae
dec
imul
adc
xchg
sbb
rcll
mov
mov
outsb
bnd
in
cmp
push
fdivrp
cmp
mov
lcall
mov
sub
ret
xlat
aad
jno
push
popf
repnz
cmp
xor
ror
adcl
lock
or
lea
jmp
push
cmc
clc
cmp
pusha
pusha
push
call
xorb
or
stc
lock
lods
mov
call
xchg
push
movsl
xchg
adc
shlb
into
fsubp
push
or
shrb
lahf
cmp
mov
adc
popf
jbe
mov
repz
call
cmp
out
nop
fstps
loop
outsb
mov
xor
loope
sub
jae
add
push
xor
mov
pop
inc
cmp
test
addr16
pop
addr16
pop
nop
out
andl
call
cltd
mov
ret
cli
cwtl
inc
and
jecxz
xlat
mov
xchg
push
and
sub
shrb
mov
mov
cmpsb
mov
or
jmp
add
xchg
pop
sub
rol
faddp
pop
xor
jecxz
jns
jle
cli
arpl
mov
ljmp
push
iret
clc
inc
sbb
fisubrl
dec
das
sbb
cwtl
out
hlt
jbe
xor
filds
pop
push
ss
out
in
sarb
ljmp
adc
dec
dec
mov
xchg
or
popa
cmpsb
in
imul
xchg
fmulp
fsubrs
pop
and
scas
imulb
out
imul
adc
leave
or
mov
jb
push
data16
jge
or
imul
cmp
fcmovnu
mov
sti
in
pop
dec
or
xor
mov
mov
jp
call
mov
jne
pop
push
xlat
sub
iret
fcomp
in
xor
daa
push
popa
hlt
loop
mov
jo
pop
sti
repz
outsb
mov
add
mov
xchg
orb
or
pop
movsl
mov
jp
sbb
enter
fsubrs
outsb
addb
loop
jp
sub
sbb
xchg
push
adc
adc
sub
sub
pusha
mov
dec
shrl
mov
pop
sahf
or
cmpb
push
call
and
jne
pop
pop
dec
outsl
mov
outsb
insl
ja
jb
xchg
jp
aam
loope
sub
and
fidivrl
std
push
inc
inc
aaa
mov
clc
jbe
insb
sbb
sbb
inc
push
incb
lods
push
jnp
call
sarb
pop
sub
scas
fidivl
inc
iret
mov
jne
pop
ffree
cmpsl
int
idiv
push
dec
inc
inc
inc
xlat
idiv
je
push
jo
jmp
xor
enter
pop
outsb
or
hlt
pop
jo
es
adc
call
into
ret
inc
inc
jno
xor
out
int3
mov
cmp
xlat
lret
cwtl
mov
jae
mov
mov
sbb
cmp
lea
test
mov
test
int3
mul
mov
shr
fyl2xp1
nop
int3
push
pop
push
push
daa
test
mov
sbb
fnstenv
stc
imul
add
add
int
nop
loope
xor
add
mov
popa
fisttps
sbb
pop
bound
in
ss
adc
cmp
jbe
push
mov
pop
lret
adc
cmp
fwait
out
fcmovnb
xchg
pop
cs
xor
mov
or
mov
mov
pop
cmpsl
mov
and
cmp
dec
xchg
mov
push
inc
pop
enter
sbb
scas
inc
test
jle
pop
leave
test
dec
icebp
pop
gs
inc
sti
clc
adcl
jle
imul
sub
sahf
es
and
pop
xor
lret
mov
add
rorb
ljmp
and
aad
pop
into
jg
icebp
inc
dec
adc
aam
mov
adc
mov
push
pop
int
outsb
out
push
sbb
jl
lds
ret
pop
ret
xchg
xchg
xchg
lea
inc
xchg
mov
xchg
xchg
inc
loopne
aad
hlt
pop
mov
inc
jae
mov
hlt
pop
or
ds
imul
jnp
mov
jae
push
test
lahf
xchg
cwtl
ljmp
mov
clc
loop
adc
and
xchg
mov
mov
sub
xchg
test
mov
jg
loop
pop
shlb
inc
jnp
daa
mov
in
pushf
mov
call
ficompl
in
inc
enter
es
xlat
jb
pop
dec
aad
loope
xor
sub
rcrb
nop
cld
fmull
nop
sbb
mov
and
jne
ret
pop
rclb
mov
mov
cwtl
cmp
jne
ret
pop
int3
jle
jb
out
pushf
or
das
imul
mov
inc
jge
xchg
jb
pop
shrb
loope
test
cs
aas
fldl
ret
pop
fldt
mov
bound
push
mov
sbb
mov
xchg
stos
mov
je
movsl
mov
or
addr16
fmuls
pop
pop
pop
fincstp
mov
fnsave
dec
aam
stos
fs
sar
and
incl
adc
ret
aad
jmp
mov
mov
rcl
push
mov
gs
mov
mov
call
ja
sub
jecxz
push
movsb
jne
cmp
dec
leave
mov
fstpl
mov
shlb
and
dec
dec
mov
xchg
dec
xchg
add
icebp
addr16
std
loope
mov
imul
cltd
mov
fwait
mov
dec
or
and
stos
int
dec
ljmp
mov
into
sti
fimull
push
inc
int3
stc
cld
jnp
frstor
hlt
std
sub
out
fistl
sbbl
fildll
inc
lods
sub
fisttpll
test
loopne
sbb
mov
cmpsb
fisttpll
lods
lods
cld
pop
clc
fcmovu
lock
xor
jl
sub
into
mov
sub
sub
sub
sub
sub
sub
outsl
sub
sub
sub
sub
insl
ret
add
stos
mov
loop
inc
xor
fdivl
jnp
leave
cmp
xlat
or
xchg
imul
jl
adcb
in
jbe
ljmp
sahf
cs
shll
dec
add
cmp
jo
es
imul
sbb
sbb
std
jmp
mov
pop
cs
ljmp
push
stos
outsb
scas
mov
xchg
fisttpll
lret
test
push
xor
je
inc
rorl
push
mov
and
outsb
or
fldl
inc
push
xlat
pop
fs
fcmovu
mov
jmp
jae
mov
fisttpl
dec
inc
cmp
add
adc
dec
out
jecxz
mov
imul
xchg
rcrl
add
inc
push
xchg
dec
sub
mov
daa
bswap
mov
imul
dec
int
mov
mov
popf
xor
mov
push
loope
in
and
dec
mov
fistpl
mov
lret
dec
cmpsb
mov
jbe
lods
int
fwait
je
adc
frstor
inc
inc
repz
js
popf
fnsave
jmp
sub
mov
jbe
in
in
cmp
fstps
jno
sub
lret
push
popf
push
jecxz
push
in
loop
jecxz
and
mov
addr16
cmpsb
sbb
fwait
sbb
and
jecxz
fcmovnb
jb
int
sbb
int3
mov
pop
mov
mov
daa
xor
test
leave
in
pop
jo
loop
push
sbb
inc
inc
inc
fistpl
cmpsb
sbb
sbb
cli
int
addr16
cs
add
ja
jecxz
int
cli
test
and
jecxz
pop
inc
jnp
push
dec
ret
push
inc
inc
add
in
pop
jbe
mov
jnp
mov
ficompl
test
lcall
fdivrs
sbb
xor
push
jecxz
and
stos
and
fnstsw
cmpb
or
ficoml
xchg
push
lret
in
jecxz
mov
jecxz
pop
sbb
sbb
test
sti
mov
repz
jecxz
pushf
frstor
xchg
ljmp
or
sbb
and
insl
cltd
arpl
adc
and
add
push
test
or
jnp
push
inc
mov
jecxz
xchg
xor
push
cmp
je
fwait
es
jae
jl
xor
cmp
mov
mov
ja
ret
jno
lock
cmpb
fwait
ss
and
xchg
repnz
sbbb
and
test
ss
loop
popfw
mov
mov
adc
in
stos
and
lret
and
add
inc
adc
insb
stos
and
jecxz
pop
sti
push
in
leave
cmp
sbb
outsl
mov
adc
leave
sub
data16
add
mov
fmul
inc
lret
xchg
sbb
mov
inc
and
imul
nop
jecxz
loopne
pop
sahf
add
push
or
in
mov
sbb
bound
cld
push
jo
xor
popf
jo
repnz
adc
mov
push
lahf
sub
fucomi
mov
ret
pop
inc
loop
push
ret
cmp
inc
fcmovnu
add
xchg
fildl
lret
xchg
ret
mov
in
jecxz
fistl
cld
enter
out
cmp
pop
jge
dec
cmp
or
rorb
scas
mov
cmc
sub
adc
cmc
xorl
cmpsl
pop
fildl
mov
push
and
fildl
aad
testb
jecxz
int3
shrl
push
jecxz
push
fnsave
movl
cmp
out
movsl
mov
cmpsb
sbb
daa
iret
dec
fsts
push
iret
add
cmp
in
mov
jns
add
mov
clc
jo
ret
add
mov
in
popa
dec
xor
insw
cmp
mov
dec
iret
mov
imul
jecxz
push
mov
push
jb
cmp
push
fistl
and
hlt
stc
mov
mov
lds
fistl
test
popf
rol
cmp
push
movsb
fcmovnbe
push
sbb
in
orb
adc
std
lret
scas
mov
jmp
aaa
jne
sub
adc
ret
xor
fidivrl
int
dec
push
lret
cwtl
bound
sbb
outsb
add
mov
fidivl
jecxz
popf
ljmp
fsubs
dec
andb
inc
pop
and
and
push
out
es
cmp
in
ficompl
push
xor
daa
jecxz
adc
movsb
lret
sbb
cmpl
xchg
adc
dec
leave
push
xchg
or
ljmp
or
lret
dec
popf
sub
insl
add
sub
pop
frstor
inc
xchg
sbb
popl
sub
in
sub
fldt
bound
sub
inc
pushf
std
aas
pop
sbb
xor
push
or
pushf
and
mov
mov
push
xchg
inc
sub
mov
lcall
lods
dec
xor
fwait
sti
dec
xchg
xchg
and
jbe
jp
push
mov
or
mov
test
out
or
sahf
or
and
sub
mov
lret
mov
mov
popf
pop
into
dec
lods
adc
sahf
push
subb
mov
mov
pop
insb
inc
jb
mov
mov
add
fisttpl
test
adc
mov
jp
push
fs
mov
dec
push
test
cmp
scas
or
stos
inc
push
jmp
orl
inc
push
mov
mov
insb
fs
xor
pop
ljmp
inc
add
sti
stos
subl
into
cmp
sbb
jecxz
ret
lods
dec
sti
mov
cmp
cmp
xchg
lods
inc
popw
mov
mov
stos
mov
scas
jo
push
push
scas
cmp
sbb
lret
jg
lcall
mov
inc
inc
pop
arpl
rolb
in
mov
testb
and
fwait
mov
xlat
push
jae
sub
into
adc
push
wbinvd
dec
adc
sbb
in
stos
xchg
sbb
or
adc
or
imul
dec
xchg
mov
push
adcl
inc
or
inc
cmp
adc
in
push
inc
scas
inc
dec
adc
icebp
wbinvd
adc
daa
sbb
aas
arpl
push
and
lret
mov
bound
pop
subb
pop
sbb
jbe
lret
sahf
cmp
mov
push
cmp
fsubrl
fwait
rcll
lods
mov
ljmp
and
adcb
xchg
aas
fs
pop
xlat
dec
sbb
in
sub
pop
push
aaa
xor
jo
pop
out
stos
xor
xchg
pop
mov
lea
jbe
inc
xchg
ret
sub
sub
loopne
jecxz
ss
sbb
bound
push
jecxz
push
arpl
ret
gs
add
adc
pop
mov
addr16
inc
aas
dec
gs
leave
arpl
dec
push
dec
ret
dec
cs
xlat
push
fstps
mov
iret
imulb
repz
push
add
mov
sbb
mov
out
idivb
dec
jb
xchg
mov
push
inc
mov
adc
adc
inc
mov
fnstsw
adcl
and
and
aaa
sub
xchg
and
cmp
pop
shll
sbb
lock
pop
jmp
xor
loope
pop
scas
insb
mul
jmp
cmp
aad
mov
imul
xchg
gs
mov
lret
cwtl
filds
push
icebp
fmuls
jle
sub
aad
or
xor
aaa
jmp
or
sbb
xchg
cmpl
pop
or
jnp
mov
stos
jmp
dec
cmpsl
test
rcll
inc
lahf
shr
enter
addl
cld
add
mov
fwait
movsl
mov
inc
xor
jg
jecxz
push
lahf
jno,pn
jnp
xchg
jo
cli
test
lods
jae
jb
xchg
inc
pop
in
jmp
frstor
lea
imul
test
fwait
mov
cmp
mulb
ret
sub
mov
stos
mov
or
dec
mov
ret
jecxz
stc
mov
out
inc
or
or
daa
pop
jmp
fsincos
jg
xlat
loope
imul
out
inc
adc
ja
shll
jg
xchg
jmp
ljmp
or
sti
xchg
inc
jmp
pop
xlat
mov
stos
cli
dec
gs
adc
aas
or
cmc
testl
xchg
rolb
rolb
sbbl
inc
js
cld
push
mov
rcll
orl
adc
test
out
mov
fwait
lahf
xchg
push
insb
adcl
aad
jge
cmpsb
out
jmp
xchg
mov
ret
pop
daa
mov
loop
mov
add
dec
iret
pop
add
jmp
mov
imul
jg
push
jg
ret
inc
jg
enter
jmp
ret
ret
jg
fldt
loop
xchg
neg
out
stos
pop
out
xlat
ret
jnp
fwait
jecxz
sbb
xchg
adc
rcrb
inc
adc
fistpl
call
ret
sbb
pop
fistl
cli
ja
ja
imul
aas
iret
adc
adc
sti
xor
and
stos
or
pop
pop
fisttpll
sub
mov
ret
dec
inc
ljmp
out
out
scas
xchg
adc
leave
pop
in
fadds
fmul
out
add
ret
xchg
or
and
insl
fldt
dec
sub
lahf
fcmovnu
fwait
mov
inc
int
ret
mov
in
sbb
leave
xchg
inc
ret
or
in
mov
arpl
imul
xchg
flds
shl
dec
adc
mov
iret
xchg
jmp
stos
sub
xchg
in
out
fwait
inc
jmp
mov
filds
fadds
pop
jmp
std
xchg
inc
neg
fdivr
out
xor
xchg
xor
out
fdivrl
out
andl
mov
sub
fcompl
out
addl
sub
xchg
push
out
sbbl
in
inc
cmp
dec
out
xorl
xchg
inc
mov
popl
lcall
mov
cmpsl
xor
test
inc
loop
fsubr
out
adc
mov
lret
add
add
lret
sbb
movntps
and
pop
aaa
ret
lret
jecxz
rcl
ror
aad
mov
in
int
in
fisttps
or
test
adc
mov
mov
cltd
addl
lahf
div
stc
lret
xchg
lods
xchg
rcrl
test
mov
add
adc
pop
daa
dec
aaa
or
idiv
lret
repz
out
icebp
mov
addr16
lock
ljmp
sub
rcr
ret
lea
lcall
sti
data16
inc
mull
mov
cmpsl
jmp
ljmp
fcmovnu
push
lods
out
jnp
mov
out
inc
lahf
sbb
jo
hlt
rcll
mov
mov
jge
repz
into
dec
lods
pop
sbbl
push
rorl
shll
mov
jp
out
lret
add
or
cltd
fwait
repz
lods
sti
mov
cmpsb
ffree
std
mov
xchg
xlat
inc
loope
push
aas
std
stos
pop
sti
xor
repz
push
lret
andl
out
jecxz
mov
inc
icebp
sub
cs
sbb
mov
lds
repnz
addr16
fwait
movl
lret
test
test
es
jmp
lret
xor
jbe
xchg
xchg
cmpsl
aam
movsl
fwait
lds
fwait
add
add
icebp
lea
xchg
pop
mov
rcrl
pop
inc
mull
ffree
jecxz
jmp
sti
ljmp
arpl
es
mov
lods
lret
cmpsl
cmp
or
lret
cltd
cltd
aas
movsl
mov
xchg
rcrb
lock
mov
xlat
cmc
repnz
mov
mov
adcl
mov
mov
mov
in
movsl
or
lret
inc
test
les
repnz
in
lods
rorl
lret
sbb
cmp
iret
pop
mov
inc
icebp
cmpsb
std
loope
aas
lret
mov
aam
std
xlat
mov
push
sbb
inc
stc
shlb
loopne
ljmp
lret
mov
les
fstpt
mov
push
cmpsl
sti
icebp
inc
fwait
cmpsb
cmc
in
mov
iret
push
mov
xchg
rorb
insl
and
xor
repz
movsl
ror
lea
jl
repz
gs
mov
pop
cmpsl
in
popa
fnstsw
jge
or
mov
std
cmpsb
fwait
mov
jns
cmc
mov
mov
mov
test
popf
jno
jmp
ret
or
or
andl
mov
pop
lret
or
cmpsl
lods
movl
or
lahf
xlat
icebp
add
decb
lcall
bndstx
sbb
pop
lahf
fcmovnb
pop
sbb
popf
xchg
and
adc
mov
mov
sbb
sub
fucomi
sub
in
frstor
mov
imul
lret
jmp
dec
cmp
fistpll
push
lods
in
ds
sbb
movl
in
mov
pushf
insb
xor
xchg
add
stos
or
lret
das
int3
cmpsl
jnp
xor
push
jmp
aad
ret
int3
sub
adc
stc
xlat
enter
test
lret
cmp
push
mov
rol
mov
push
std
add
cmc
mov
add
xor
mov
std
jecxz
dec
add
xlat
stc
mov
test
repz
adc
out
fucomp
std
in
rorl
out
call
lahf
nop
mov
mov
cltd
push
lret
mov
popa
xchg
lea
jae
fidivrs
shr
mov
imul
pop
xchg
cmp
cmpsl
test
movsl
mov
mov
movl
mov
movl
sti
ret
mov
jecxz
lret
xchg
mov
mov
icebp
add
mov
inc
lahf
mov
push
xlat
in
orb
xchg
pushf
lret
cltd
pop
xchg
ljmp
inc
xchg
xchg
lret
cwtl
sbb
xchg
je
mov
mov
repz
nop
test
stos
cmpsb
lods
xchg
push
stc
cmpsb
repz
repz
test
orl
lahf
les
mov
push
test
movsb
cmpsl
lret
xchg
out
das
lods
dec
sbbl
stc
jnp
mov
std
stos
filds
movsl
pop
movl
xlat
icebp
mov
sti
lods
mov
mov
mov
in
movl
adc
mov
imul
adc
mov
sti
xchg
rorb
dec
iret
icebp
cmc
loop
or
dec
add
roll
inc
xor
xor
mov
pop
push
lea
push
mov
mov
fildll
push
outsb
mov
rcrl
push
roll
lret
nop
xlat
lretw
xchg
push
cmpsb
lds
jns
mov
scas
mov
outsl
inc
xchg
mov
fcmovbe
stos
jp
pop
test
ret
out
pop
sti
jge
rorl
std
lock
ljmp
es
adcl
sub
stc
js
loop
test
sub
das
das
icebp
mov
je
leave
ret
outsb
mov
in
stc
mov
pshufw
mov
addr16
mov
mov
ljmp
push
std
imul
daa
add
shll
mov
add
fcomi
sbb
in
inc
push
sub
test
add
jmp
adc
push
xchg
out
adc
shlb
sti
cld
lds
repz
rolb
in
mov
and
in
or
lret
jecxz
fwait
pop
cmc
add
fistl
cmpsb
cmpsl
std
movsl
fistpl
outsb
jae
fcmovnu
lea
lret
es
scas
movl
sti
sub
xrelease
add
cmpsl
lahf
lods
cmp
scas
inc
cltd
pop
xchg
add
cmc
repz
xchg
dec
xor
jmp
cmpsl
xor
xor
sbb
xor
imul
cld
aad
ret
int
jmp
pop
mov
sub
sti
icebp
test
add
mov
testl
aas
mov
loopne
inc
in
lahf
mov
ror
pop
jmp
fisttpll
test
mov
cmpsl
test
fistl
std
pop
inc
test
mov
jmp
jbe
addr16
xchg
insl
jmp
fnstsw
adc
iret
jg
ljmp
cld
ret
loope
aad
inc
sti
mov
add
cmpsl
ds
aam
fcmovnu
lea
std
idiv
int3
fcomi
jecxz
pop
sti
gs
repz
out
push
cld
rcrl
mov
mov
jge
fisttpl
jl
xlat
sub
xchg
roll
arpl
mov
mov
cmp
jg
in
fisubrl
fwait
aad
dec
cmpsl
or
sar
aam
popf
int3
xchg
xchg
pop
imul
sti
pop
repz
cltd
mov
mov
das
icebp
dec
std
xchg
je
hlt
cmc
xchg
int
insl
stos
hlt
cmc
lods
mov
stc
cmpsb
imul
cmpsl
mov
imul
repz
aam
in
icebp
xor
rolb
lahf
mov
push
ss
mov
jecxz
sbbl
test
stc
mov
push
shl
ds
cmp
mov
sti
add
xchg
ret
add
xlat
add
mov
adcl
les
xchg
dec
std
inc
mov
add
dec
jmp
fwait
ljmp
push
mov
popa
movl
aas
inc
dec
in
dec
mov
ror
stc
xlat
xchg
in
lds
jp
scas
inc
int3
repz
leave
dec
lret
lds
movsl
cmp
int
pop
jge
jp
aad
xchg
shll
push
mov
pop
add
jmp
lahf
scas
push
fucom
mov
cli
leave
jecxz
icebp
not
stos
loopne
outsl
shrb
hlt
leave
cs
xchg
cmp
mov
sar
adc
add
cmp
jmp
iret
and
lahf
inc
loope
jmp
adc
mov
into
push
int3
mov
mov
loopne
inc
cmp
lods
mov
jge
dec
xchg
cmp
pushf
mov
dec
cli
testl
stc
and
loope
fwait
mov
fnstcw
aam
sub
xor
shll
mov
loope
fadd
ljmp
in
xchg
imul
mov
mov
xlat
andl
pop
shrl
fwait
add
call
jmp
mov
cmpsl
iret
mov
pop
xchg
sub
mov
fildl
push
cmpsb
mov
dec
lret
cmpsl
mov
xchg
and
mov
in
aad
fwait
jecxz
mov
adc
leave
mov
jbe
cmpps
dec
aas
jmp
pop
aad
lcall
xchg
leave
icebp
ret
dec
push
std
push
in
mov
pop
mov
xchg
aad
mov
hlt
lcall
sbb
pop
sarb
fucompp
loopne
lret
mov
ror
loop
fimuls
cmpsl
je
mov
pop
adc
xchg
pslld
jb
ret
notl
sti
subl
rcl
xchg
mov
or
mov
pop
sti
imul
jg
mov
mov
xchg
xchg
pop
xchg
test
scas
jmp
gs
cmpsl
test
mov
push
adc
out
pop
fnstsw
ljmp
jbe
fstps
cmp
mov
repz
push
shrl
std
lret
in
pop
fcmovnbe
bound
pop
lcall
aad
fcmovne
rorl
xchg
jnp
aad
or
fistl
stos
roll
xchg
cli
out
mov
out
fwait
out
leave
sbb
jge
aad
xchg
in
div
fwait
mov
xor
das
ja
mov
fucomp
ret
repz
ds
mov
dec
mov
test
fwait
lods
xchg
out
dec
dec
stc
fucomi
out
fucomi
fistpll
jg
stos
test
jns
jg
adc
sub
and
out
xchg
pop
dec
mov
lods
jg
push
push
inc
pop
out
pop
repnz
aaa
ret
addb
jle
jecxz
jp
out
stc
cmpl
out
or
js
jno
or
or
ret
xchg
mov
int
mov
push
in
mov
mov
mov
mov
test
mov
add
icebp
mov
or
ret
mov
mov
filds
fildl
icebp
incb
rcrl
and
jecxz
fwait
ja
jecxz
xor
sbb
pop
jecxz
add
jmp
dec
sbbl
test
fcomip
inc
imul
imul
repz
xchg
add
out
cmc
push
sub
mov
mov
in
divl
call
mov
sub
fnsave
lods
mov
sbb
pop
imul
mov
jl
dec
roll
popf
fwait
push
push
jmp
sbb
mov
ljmp
jle
ljmp
fucomip
xchg
fisttpl
int3
vunpckhps
cltd
cmp
cmpsb
adc
mov
jp
rorl
adc
jmp
inc
cmpsl
fstl
xlat
and
sub
mov
fwait
xchg
loop
inc
mov
int
add
mov
lcall
jbe
ret
push
popf
mov
and
mov
pop
xchg
fisubrs
inc
dec
psubsw
and
shll
push
xlat
sbb
push
fildl
inc
push
jecxz
ljmp
repz
inc
mov
sub
xchg
mov
mov
and
fwait
xlat
fildl
dec
shl
in
bound
stos
inc
mul
jp
xchg
mov
mov
pop
out
roll
inc
adc
add
xchg
xchg
lret
mov
scas
out
scas
cmpsl
jb
or
loop
in
push
cmp
bound
aaa
imul
fxch
xchg
and
sti
ret
jp
fadds
fld
fcmovu
subl
cmp
cmp
sub
cmpsl
jp
aad
inc
and
xchg
lahf
cmp
xor
lcall
cmp
cli
cltd
ds
inc
cli
xchg
cli
sbb
push
out
das
mov
mov
lds
fnsave
out
jmp
xor
xorl
inc
jb
out
mov
mov
ret
in
repz
lret
in
lds
cmp
popfw
cmpsl
xchg
filds
out
enter
lods
ret
shll
out
fimuls
pop
mov
les
inc
push
int3
xchg
icebp
flds
test
arpl
pop
shrb
dec
mov
fildll
rol
int
outsb
out
jg
jmp
push
sbb
faddl
rcrl
repz
lcall
jle
cmc
mov
testl
lcall
fidivrl
jecxz
scas
sti
repz
jmp
push
sub
data16
xchg
pop
fldl
ret
out
pop
cmpb
aad
mov
pop
and
mov
lds
cli
adc
push
out
jnp
cli
xlat
ljmp
fiaddl
aam
jb
loop
fwait
xor
lret
lea
cmp
jae
ja
fstpl
cmpsb
pop
xchg
and
sbb
add
lcall
push
cmpsb
xchg
and
jbe
pop
and
xor
scas
int3
push
xchg
jns
das
loop
xor
mov
push
xchg
lahf
cmc
mov
fwait
jmp
ds
dec
orl
rclb
xchg
std
aas
sti
jmp
repz
aam
mov
loop
bound
cmpsb
insl
sti
dec
sub
int3
sub
movsl
add
jmp
xchg
fwait
adcl
cmc
cld
ja
inc
ret
jbe
std
int
stos
out
ljmp
pop
ja
mov
fdivrl
inc
mov
out
aad
daa
jg
loope
pop
repz
lret
xlat
aad
mov
fstpl
into
int3
dec
dec
orl
and
mov
adc
inc
sahf
sbb
outsl
fadd
enter
test
stos
fdivr
xlat
mov
out
aad
xchg
and
jmp
pop
cmp
push
xchg
test
loope
arpl
jnp
xchg
out
xchg
pop
movb
out
testb
pushf
mov
pop
in
into
insl
fisubs
ss
shrl
jecxz
enter
jb
inc
jnp
xchg
fiadds
cs
lds
bound
loopne
dec
out
mov
test
push
or
push
iret
xlat
loope
fbstp
push
mov
cli
ljmp
cli
int3
push
dec
add
mov
in
lahf
adc
cmpsb
imul
xchg
ds
in
xchg
sar
and
lretw
mov
sub
fcomip
idivl
les
dec
pushf
roll
cltd
jbe
xchg
cs
jg
mov
out
or
test
lea
ret
and
pop
sahf
gs
callw
std
popf
test
repnz
xchg
fstpl
dec
xchg
mov
sub
roll
mov
test
pop
repnz
fmulp
add
lret
jg
mov
mul
dec
ja
cmc
xchg
cmpsl
into
out
push
repnz
out
pop
push
pop
jbe
and
fisttpl
outsl
add
sub
sarl
subl
ds
xchg
jnp
syscall
push
xchg
enter
in
daa
or
xlat
xor
aaa
or
loop
stc
mov
enter
inc
pop
iret
mov
aaa
add
iret
mov
dec
jg
mov
jecxz
mov
add
repnz
jbe
pop
push
jecxz
sbb
xchg
jle
hlt
fs
aad
cmpsl
add
lcall
jmp
push
addr16
sub
cmpsl
std
pop
cli
out
fwait
mov
loop
ror
sti
data16
ror
adc
push
mov
xchg
call
cmc
bound
fdivl
ljmp
int3
mov
lods
lahf
sbb
std
sbb
mov
dec
stos
xchg
jmp
lahf
aad
and
divb
ds
xchg
pop
test
dec
push
lea
push
inc
rcr
notb
cmp
dec
push
loope
push
fwait
cli
cli
ret
in
xchg
push
xchg
ja
mov
inc
daa
cli
xchg
jmp
xchg
data16
fstps
jmp
ss
sarl
xor
out
and
inc
mov
xchg
mov
jmp
lea
push
adc
into
inc
cmpsb
out
push
xchg
test
cmp
fcmovnb
iret
test
enter
sbbb
inc
ljmp
aad
sbbl
add
movsl
std
pushf
jmp
cmp
jp
push
in
aad
rcr
js
stos
dec
mov
push
addl
add
cmp
cwtl
stos
out
jo
mov
into
orb
push
out
lea
repnz
jno
stos
in
cmpsl
imul
add
ljmp
int
mov
cmp
xchg
pop
push
pop
add
iret
loop
inc
mov
loop
sbb
push
cmpsl
inc
loop
aaa
mulb
xchg
fsts
jecxz
jb
sub
mov
out
mov
and
jbe
xchg
push
mov
fldt
loop
jecxz
dec
test
addr16
lods
arpl
jle
jo
std
rcrl
cmc
inc
sub
or
pop
mov
xchg
xchg
mov
sub
mov
loope
dec
push
cmpsl
mov
out
dec
outsb
xlat
mov
push
mov
ficompl
mov
rcpps
push
xchg
imul
jmp
sbb
sti
nop
int3
pop
xchg
inc
mov
pop
xchg
cmpsl
fwait
xchg
sahf
pop
cmpsb
pop
bound
pop
fiadds
mov
data16
xchg
vmovhps
push
fistl
out
mov
loop
frstor
lret
mov
imul
jbe
jne
sub
adc
fistpl
xchg
dec
fwait
inc
adc
mov
inc
sti
movsb
xchg
lods
jae
stos
movsl
ljmp
or
mov
mov
or
int
adc
arpl
aad
push
fwait
mov
jmp
out
mov
mov
cli
fbld
inc
jmp
jno
daa
movsl
xchg
ret
data16
cli
push
pop
cltd
dec
test
push
inc
fsubr
in
mov
lret
mov
das
jg
jae
xlat
lcall
popf
xchg
fmull
aas
faddl
out
push
mov
iret
rclb
sbb
inc
mov
or
pop
inc
imul
mull
jae
mov
add
dec
out
cmpsl
fsts
stos
dec
lcall
icebp
mov
pop
inc
jae
dec
adc
sbb
popf
sti
test
or
shl
iret
and
jmp
repnz
or
jg
movsl
cmpl
aaa
push
movsl
mov
lahf
xchg
fnstsw
jecxz
mov
sti
mov
sub
push
icebp
sub
xchg
pushl
stos
dec
sti
mov
stos
or
jae
mov
mov
rol
fucomp
pop
pop
mov
jmp
adc
mov
pop
fisttpll
dec
jb
cmpl
lds
dec
xchg
ds
dec
ret
xchg
pop
pushf
fcmovbe
imul
lea
sti
enter
repnz
jnp
ss
cli
in
lahf
xchg
mov
cmc
mov
mov
mov
mov
mov
call
xlat
popf
dec
dec
sbb
xchg
fsqrt
mov
rol
sub
ret
dec
inc
rcr
icebp
leave
mov
pop
jno
lcall
lds
inc
mov
fwait
dec
jns
mov
jmp
mov
pop
leave
xor
pop
stc
out
and
jbe
rorl
adc
iret
movsl
dec
lock
ror
std
inc
mov
lcall
repz
bound
mov
and
cltd
imul
test
nop
inc
ret
fistpl
mov
xor
dec
mov
cli
add
repz
ljmp
aad
repnz
repnz
stos
dec
push
aad
push
jg
cmp
les
ret
pop
mov
and
cmpsl
push
in
jmp
out
iret
xchg
rcrl
push
inc
rcrl
ljmp
sti
imul
mov
jmp
pop
int3
cli
mov
out
xchg
lret
pop
jmp
sbb
pop
fildll
lahf
jae
outsb
jnp
ret
loop
mov
loop
insl
rcrl
out
shrl
mov
inc
jmp
xchg
shl
jg
orl
sbb
fwait
cs
sbb
or
sbb
mov
int3
data16
lret
xchg
ss
or
fildll
push
and
add
xchg
mov
add
jnp
and
mulb
and
jle
mov
inc
cli
imul
orl
jb
push
add
pop
fldpi
inc
cmpsb
add
lret
pop
addr16
adc
add
ret
lods
and
test
loope
pop
push
stc
cli
scas
mov
stc
cmc
fwait
and
fstpl
in
mov
jg
push
inc
xchg
fucom
lahf
fcomi
sbb
mov
test
repz
out
push
mov
out
dec
mov
aad
cmp
cmp
xchg
or
cltd
push
int3
push
insb
gs
cmpsl
ret
shl
stos
mov
pop
cmp
lret
push
shrl
pop
mov
mov
inc
imul
fstl
pop
out
faddl
inc
adc
mov
fsts
cltd
dec
loop
push
rcl
psllq
xchg
ret
and
divl
pushf
jp
ljmp
push
loopne
push
rcrl
lahf
shrl
adc
out
fisttps
push
jg
addb
jle
push
fnstsw
jnp
push
sbb
out
fs
test
into
repz
jmp
popf
sub
ja
push
ret
stos
dec
ret
and
pop
jnp
lds
les
inc
es
repnz
and
ljmp
lea
push
lret
jno
jle
daa
adcl
and
das
xchg
dec
out
pusha
popf
aad
test
loop
js
cmp
adc
mov
sbb
mov
bound
out
imul
sub
fsts
push
or
aad
jp
sub
dec
mull
adc
shll
push
fldl
ljmp
fwait
pop
cli
cltd
push
insl
xchg
loop
repz
lcall
out
xchg
jp
adcl
jbe
repz
jo
jne
inc
mov
adcl
mov
xor
std
fwait
cmc
add
jmp
xlat
arpl
sub
jno
test
mov
dec
ss
push
cmpb
push
mov
add
mov
cmc
scas
jp
xchg
test
ja
inc
aam
inc
xchg
push
add
jp
int3
jae
dec
xor
mov
adc
mov
mov
popa
xchg
jle
dec
pop
movsl
test
iret
fucomi
lods
pop
lea
or
jbe
push
pop
lahf
subl
and
rcl
cltd
xchg
pop
pop
mov
stos
and
xchg
jbe
lahf
fisttpll
imul
pop
xchg
aad
out
push
push
xchg
into
cli
push
push
test
frstor
js,pt
dec
jbe
adc
sub
push
mov
ret
outsb
jb
inc
dec
ficompl
roll
sbb
mov
fistpl
sbb
inc
sbb
out
shll
fstps
loope
icebp
fstp
cli
mov
fnstsw
inc
roll
jp
adc
pop
xchg
push
xor
push
dec
pop
sub
xchg
jle
jecxz
lahf
cmp
cwtl
bound
pop
sbb
cmp
loope
sub
nop
popf
and
fimuls
bound
mov
inc
push
add
mov
cmp
jae
fwait
mov
out
andb
xor
andb
adcb
sub
rol
into
jmp
movl
orb
mov
aad
in
ja
mov
adc
cmpsl
mov
repnz
pop
ret
mov
xor
jp
dec
sbb
mov
push
adc
fucom
popf
fildll
push
lcallw
sbb
adc
mov
jmp
pop
xchg
ja
and
cltd
xchg
mov
repz
sbb
sub
or
scas
push
xchg
repz
jg
xchg
in
push
mull
ret
ljmp
pop
repnz
fimuls
xchg
cmp
xchg
sbb
inc
es
iret
pop
repz
xchg
in
out
adc
sar
mov
les
repz
xchg
xchg
sbb
test
mov
xchg
pop
jne
stos
insl
mov
icebp
stos
pop
sti
sbb
pushf
pop
add
lahf
mov
lcall
xchg
jecxz
std
mov
push
stc
mov
sub
mov
sbb
xchg
out
js
fistpl
mov
out
pushf
push
push
pushf
movsl
jl
jecxz
jmp
aad
sub
fcmovnu
shll
sahf
xor
pushf
movb
mov
pop
mov
jns
cmpsl
mov
push
sub
repz
jle
mov
data16
shl
mov
out
or
jle
pop
lahf
lods
mov
loope
rcrb
scas
std
xchg
mov
xchg
pop
sub
fcom
movsb
mov
aad
add
iret
gs
sbb
cmp
and
test
outsl
push
mov
insl
mov
movsl
enter
jmp
mov
idiv
aad
aad
test
ret
mov
cs
das
inc
xchg
inc
ficoms
imul
xchg
das
aad
sub
adc
lahf
jecxz
mov
fcmovnbe
test
shr
mov
and
insl
in
mov
mov
fnstsw
jmp
int
ret
repz
mov
out
ljmp
jg
test
aad
fcmovne
mov
mov
or
fcom
inc
in
aaa
outsl
sti
arpl
repz
mov
aad
std
inc
sti
sbb
push
mov
addr16
scas
push
sub
pusha
aad
jb
mov
lea
sbb
pop
fiadds
out
orl
rcrl
fcmovnu
xchg
ret
stos
mov
mul
inc
mov
inc
std
repz
sti
aam
xor
mov
std
sbbl
xchg
inc
fwait
xchg
jnp
sbb
mov
mov
mov
cld
aad
cmc
lahf
xchg
mov
fcmovnu
mov
ss
stos
std
mov
stc
ljmp
sti
inc
lock
cmp
into
mov
xorl
mov
roll
pop
std
inc
fucompp
mov
jae
loop
pop
scas
bound
cmp
in
xchg
mov
out
mov
sarl
nop
insb
push
inc
mov
hlt
pop
mov
stos
mov
xchg
dec
cmc
in
push
sub
ret
rcll
movsl
pop
mov
sbb
xchg
mov
test
sub
mull
test
mov
aad
mov
mov
or
adcl
aad
stos
adc
add
mov
mov
xchg
jecxz
xor
out
popf
jecxz
fsubs
push
jge
shl
push
in
leave
movsl
jl
fnstsw
mov
cmp
ficoms
lahf
fidivs
jae
mov
xor
pmullw
int
das
or
fildl
out
jp
les
shll
push
jecxz,pt
xchg
out
mov
in
jnp
sub
shll
daa
inc
addl
int3
mov
ss
cmp
lret
mov
cmpl
fcmovb
mov
gs
lahf
stos
repnz
push
push
in
mov
lret
popf
and
fsubrl
stc
adc
inc
ljmp
mov
xchg
pop
sub
pop
stos
iret
neg
add
in
adc
jmp
mov
jecxz
aad
std
test
addr16
dec
xchg
pop
lret
xchg
jp
repz
sub
cmpsb
mov
xchg
ret
addr16
ret
cmp
push
mov
mov
inc
cmp
mov
loop
push
repnz
xchg
in
jbe
sub
fcompl
inc
dec
sbbl
jae
xchg
das
enter
lods
mov
in
orl
in
jmp
mov
xor
jmp
sti
iret
xchg
call
rorl
pop
pop
xbegin
jge
jle
mov
out
daa
sarl
xchg
fs
xchg
ja
lahf
cltd
fimuls
fists
fwait
scas
jecxz
xchg
sbb
pop
inc
add
pop
daa
sti
push
test
fwait
addl
adc
add
movsl
aad
out
fidivrl
pop
sbb
cmpsl
xchg
ss
cmpb
out
pop
mov
repnz
popf
pop
pop
xchg
inc
hlt
mov
fstl
xchg
jg
push
sahf
shr
cld
mov
imul
jecxz
adc
test
jmp
sub
cmc
aaa
sub
xchg
push
lret
lds
xchg
fwait
inc
push
lods
scas
dec
in
push
mov
cltd
data16
loop
inc
iret
and
lods
adc
push
fwait
movsl
leave
adc
push
cmpsb
mov
lods
push
mov
pop
jmp
fdivr
cli
int
xchg
lea
fildll
pop
cltd
push
out
out
xchg
inc
lret
es
mov
neg
lret
icebp
ret
hlt
pop
addr16
shr
lods
into
test
stos
pop
push
out
mov
lahf
cmpsl
std
xchg
fnstsw
inc
jb
call
data16
stc
fwait
lods
xchg
inc
or
jmp
mov
or
xchg
pop
mov
xchg
xor
arpl
inc
shl
mov
mov
jmp
pop
xchg
ret
ret
pop
movsl
sahf
inc
add
cmp
fcomip
sarb
pop
sti
dec
push
daa
mov
cmp
dec
cmpsl
jnp
aaa
jnp
pusha
mov
lret
push
cmp
mov
push
pop
sbb
mov
cmpsb
push
arpl
pushf
out
xor
movsl
cmpsl
es
insb
adc
pop
mov
movsl
mov
mov
xchg
and
jmp
movzbl
inc
add
es
mov
insl
or
fldl
insl
ret
rcr
mov
and
nop
ret
and
outsb
pushf
std
daa
popf
and
fcmovnbe
jecxz
leave
test
orl
aaa
in
daa
xchg
inc
sub
sbb
movntq
addl
in
adc
sub
or
aaa
mov
add
fisttpl
popa
int
mov
push
mov
inc
repnz
ret
xchg
or
sub
mov
dec
xchg
lods
mov
xor
fwait
loop
fcmovnb
lods
or
mov
mov
xchg
fisubrl
stos
jmp
jbe
addr16
iret
dec
stos
xchg
mov
mov
xor
xchg
repz
push
popa
cmp
arpl
test
loopne
mov
les
or
popa
dec
pop
or
inc
mov
adc
in
xchg
pop
loope
test
lods
scas
jnp
and
cmp
je
pushf
shlb
aas
out
and
lods
jae
imul
out
cmpl
mov
jmp
fndisi(8087
fcmovnu
cmp
inc
or
push
pop
orl
in
stos
xchg
ljmp
in
xor
fcoml
out
addl
or
out
orl
mov
fmull
pop
ret
fidivrl
xchg
in
adc
fdivl
pop
cli
in
rolb
fsubs
pop
push
in
mov
xchg
inc
repz
xor
out
xorl
cli
inc
loop
int
or
fldl
dec
xchg
inc
aas
faddl
pop
sbbl
in
pop
xchg
push
dec
fcoml
imul
xchg
gs
fsubl
jnp
jge
ja
cvtps2pi
xchg
xchg
sub
add
jb
and
dec
cmp
andl
sub
and
fdivrl
out
xorl
or
loope
mov
es
in
xor
add
cmp
pop
scas
inc
es
xchg
pop
scas
inc
es
in
xor
add
cmp
pop
test
xchg
sbb
mov
addr16
cmovs
dec
and
pop
cltd
imul
repz
lods
cmpsl
cltd
jmp
lods
es
mov
mov
mov
movsl
cmp
icebp
mov
out
mov
subb
cwtl
push
jecxz
and
mov
les
or
loopne
sub
imul
inc
shll
add
inc
mov
pop
movsl
add
cmc
mov
popa
outsb
pop
pop
pop
dec
pop
ds
scas
pop
sahf
pop
mov
push
out
push
ja
fildl
mov
popa
pop
pop
add
arpl
inc
insl
mov
push
pop
dec
add
push
mov
inc
pop
mov
inc
pop
aas
add
inc
mov
dec
lret
mov
pushf
pop
jne
out
jecxz
sbb
leave
inc
inc
push
scas
aad
pop
inc
aas
mov
les
popf
xor
icebp
mov
aas
push
je
jge
insb
xchg
rcrl
cmp
xchg
sarl
lods
push
clc
pushf
inc
jg
jp
sub
mov
ret
fwait
repz
inc
add
adc
out
pop
sbb
and
subl
xchg
jb
fstp
cmpsl
dec
xor
jns
lret
cmp
sub
ret
out
addl
in
push
inc
xchg
aam
mov
jbe
jb
pop
data16
or
leave
cmp
inc
xor
cmp
push
xorl
mov
inc
cmp
fsubl
out
sbbl
adc
and
arpl
subl
xchg
in
es
inc
sub
fsubrl
in
cmp
pop
push
in
sub
fcoml
sbb
mov
inc
sbb
faddl
out
cmp
or
add
push
inc
add
or
mov
in
or
and
jo
mov
outsb
xor
je
ret
xor
js
mov
xchg
jp
and
sbbl
in
fs
inc
sub
insb
xchg
push
fcoml
addl
jmp
mov
pop
fdivrl
pop
pop
in
lret
inc
adc
jnp
orl
in
addl
bound
in
fisttpl
lahf
jmp
pop
adc
mov
jp
scas
inc
fdivl
repnz
mov
xor
mov
pop
mov
mov
or
movsb
fsubrl
mov
in
rolb
fmull
stos
subl
inc
dec
jb
ja
imul
xor
nop
lods
shlb
cmp
mov
xchg
mov
pop
xchg
inc
mov
pop
and
shrl
inc
shlb
stos
dec
cmp
ret
push
push
rclb
jb
lods
mov
sub
stos
leave
push
and
js
mov
push
leave
mov
adc
xor
scas
cli
sub
pop
or
andl
outsl
icebp
mov
mov
or
pop
mov
push
lods
lock
dec
push
mov
mov
push
cmpsl
andb
or
lret
or
bt
mov
adc
sahf
into
push
sbb
aas
mov
xchg
aas
iret
ljmp
daa
mov
push
ljmp
test
int
jecxz
ljmp
test
push
call
gs
cmpsb
cli
pusha
fdivrs
fst
shrl
dec
mov
addr16
int3
mov
push
and
or
mov
pusha
inc
mov
push
mov
inc
notb
cmpsl
mov
imul
pusha
or
out
fsubl
lcall
push
imul
mov
in
mov
xchg
pop
dec
pop
ret
lea
sbb
inc
sbb
es
fisttpl
cmpsb
ret
jecxz
push
sub
aas
jmp
adc
and
mov
mov
add
sub
call
add
push
lret
dec
xchg
fs
xchg
xchg
or
pop
mov
ljmp
pop
sbbl
push
and
dec
loop
pop
jmp
incb
sti
jmp
sbb
inc
imul
jmp
mov
test
xchg
dec
cmp
jp
push
xchg
inc
out
ds
mov
mov
addr16
out
cmpsw
jecxz
jge
mov
cld
pop
push
scas
sub
add
rcrl
ficoms
sar
ficompl
inc
bound
pushf
in
push
sti
imul
lods
sub
mov
out
add
in
leave
iret
pop
cwtl
stos
lods
mov
jle
les
jmp
xchg
add
cmp
shll
cmp
mov
mov
mov
jecxz
dec
pop
xor
push
sbb
xchg
add
iret
stos
push
daa
cltd
movl
lret
test
jmp
orl
mov
dec
ljmp
sbb
lods
sub
clc
out
push
sbb
mov
stos
add
loop
sti
das
adc
inc
push
push
push
lods
lcall
pop
mov
jmp
lods
cmpsb
ss
addr16
test
push
imul
fs
dec
in
pop
addr16
fdivl
jecxz
cld
push
push
in
sbb
mov
repz
dec
add
mov
out
cli
sbb
cltd
loop
mov
mov
test
rep
jecxz
pop
xchg
jns
repnz
dec
adc
dec
and
ja
lcall
fs
cwtl
pop
or
add
adc
les
inc
leave
aas
rolb
insb
repnz
mov
or
cmp
lea
jb
inc
test
pop
imul
adc
push
jae
cs
cli
lea
insl
cmp
ret
or
dec
sub
lods
xchg
rorl
pop
lds
jo
sub
jne
shrl
ss
cwtl
in
cmp
jo
jle
adc
outsl
mov
mov
in
push
aad
inc
mov
leave
mov
or
cmp
xlat
loop
rcll
sahf
rcl
ds
mov
test
sar
loope
add
ret
fstpt
jae
jne
outsl
inc
jno
fmull
insl
cmp
fstp
xor
orl
jp
push
pop
adcl
ret
jmp
fcmovnb
mov
lea
or
inc
incl
mov
push
ret
flds
and
loop
add
cmp
push
xchg
xchg
fs
popf
sbb
popf
mov
dec
push
fildll
push
out
fists
nop
mov
std
sti
jge
fstpl
jle
repz
mov
push
cmpsl
es
push
inc
lods
lcall
pop
add
outsl
mov
addl
ljmp
sbb
fldt
dec
mov
sbb
cs
fcmovne
jnp
imul
sub
fnclex
ret
dec
fildl
out
pop
dec
jmp
fwait
jnp
or
mov
inc
dec
xor
push
stos
stc
lcall
cmp
jmp
std
pop
in
ljmp
jmp
fcmove
mov
jp
jecxz
mov
stos
pop
rcr
imul
cwtl
jmp
stos
mov
ret
push
mov
mov
adc
push
xor
test
pop
mov
dec
sahf
fst
push
inc
push
mov
adc
les
ret
cli
out
cmp
js
out
mov
les
dec
jg
dec
ret
cmpsb
jp
mov
ret
or
hlt
bound
jmp
outsb
push
jmp
xor
push
sub
stos
data16
jb
or
cli
dec
in
lret
inc
dec
jecxz
cwtl
lret
jmp
jbe
dec
inc
jmp
sbb
mov
mov
mov
or
push
mov
pop
dec
push
jmp
pusha
xchg
push
rcrb
popf
xchg
xor
pop
push
imul
inc
push
cmp
lock
sbb
adc
mov
stos
imul
and
dec
jecxz
insb
jmp
or
cmp
test
push
lods
fwait
mov
ljmp
sbb
jecxz
enter
cmpsb
out
jmp
inc
les
xor
test
mov
cmpsl
jmp
rcrl
inc
ret
lea
xchg
jecxz
add
jp
push
sbb
pop
mov
mov
daa
cli
adc
push
fst
or
add
jnp
mov
xchg
std
addr16
enter
test
fstl
in
cmp
adc
push
cld
jecxz
out
orl
adc
or
lcall
loop
adc
in
push
jmp
int3
popf
cmp
cld
jp
push
aas
fwait
test
fnstsw
lret
adc
fwait
fwait
ds
add
fwait
in
dec
jmp
jb
popf
and
cld
std
push
in
fstl
mov
ljmp
push
std
dec
pop
fstp
loop
cmp
das
shrl
fldl
jecxz
mov
and
fwait
sbb
and
cmp
jb
repz
push
dec
fldl
xlat
mov
xchg
add
std
sti
std
rcr
fldl
in
cmp
xchg
sub
mov
out
test
mov
add
inc
cmp
mov
dec
popa
in
lcall
mov
fstpl
xchg
cmp
ficoml
fnsave
cmp
jecxz
addl
cmp
frstor
and
test
fldl
mov
std
dec
fldl
dec
pop
sbb
jecxz
jp
push
arpl
in
fisttpll
dec
cmpsl
add
mov
fistpl
pop
dec
aas
cmp
pop
mov
or
lea
cmp
and
jae
or
sub
test
test
stos
cmpb
mov
fldt
xchg
sbb
imul
jmp
fistl
lods
sbb
pop
std
and
jecxz
rcrb
mov
xor
lods
adc
inc
jecxz
or
ffree
jecxz
xor
mov
sti
jecxz
fsubl
sub
fsub
out
mov
leave
ljmp
fldl
xchg
popf
bound
pop
in
std
mov
fstl
popf
sbb
cld
in
or
lea
cmc
fldt
fcmovne
arpl
ret
cmpsb
shr
pop
out
add
mov
pusha
add
push
mov
push
data16
adc
std
mov
inc
jecxz
jle
inc
rol
fimull
in
subb
std
repnz
sbb
frstor
mov
sbb
pop
push
frstor
adc
push
add
in
sub
sub
andl
std
pop
repz
xchg
std
sbb
arpl
std
pop
inc
fnsave
mov
je
inc
cmp
jmp
pop
sbb
xchg
fldl
imul
std
imul
cld
push
insl
jmp
in
ret
fnstsw
sbb
cli
jecxz
mov
cmp
loop
mov
add
jecxz
add
aas
cmp
insb
jns
adc
test
cmpsl
std
ljmp
push
lods
std
inc
fnsave
push
add
push
and
call
addb
push
sti
dec
shll
shll
or
mov
add
pop
jecxz
in
jecxz
pop
arpl
popf
sbb
mov
in
pop
or
shl
popf
lcall
inc
cmp
ret
add
bound
dec
lea
push
leave
mov
adc
in
movl
fwait
mov
lea
cmp
mov
push
lea
jl
out
mov
xor
in
jmp
mov
fwait
popf
ret
fwait
sbb
icebp
cmp
and
cmp
into
inc
ret
inc
fmull
mov
in
and
jecxz
mov
ja
bound
imul
ljmp
xchg
jge
inc
pop
push
out
jb
pop
ret
xor
jp
sbb
mov
ret
arpl
and
push
sub
add
mov
mov
in
fstpl
imul
out
fadds
pop
out
mov
inc
daa
or
sub
jecxz
mov
pop
mov
shll
pop
xchg
mov
mov
fldenv
cwtl
fldl
addr16
ror
add
cmp
cmp
and
mov
scas
push
sub
and
mov
xchg
pop
push
push
mov
mov
mov
sahf
lcall
stos
std
mov
pop
push
and
loopne
add
xchg
inc
scas
push
and
mov
lods
hlt
fstpt
jecxz
add
jbe
nop
mov
cltd
movsb
inc
jnp
pop
sub
cmp
xchg
les
push
jp
je
mov
sbb
inc
std
shlb
mov
iret
jmp
stos
jle
inc
cmpsl
insb
stc
fisubrl
movsl
fucomp
lahf
xchg
mov
test
iret
inc
sahf
mov
mov
sub
scas
mov
pushf
push
notl
mov
push
mov
mov
mov
fldt
fs
xchg
jmp
mov
dec
mov
out
aas
push
loope
inc
les
xchg
ror
pop
mov
mov
mov
pusha
xor
dec
cmpsb
lcall
pusha
pushf
mov
in
ffree
mov
adc
out
mov
sub
jp
je
incb
add
push
inc
push
inc
adc
push
add
lahf
push
cmp
fadd
ret
repz
push
insl
shrl
arpl
push
imul
and
popf
jp
inc
out
stos
dec
and
mov
bound
jecxz
pop
pop
fs
mov
jnp
mov
mov
cmpsl
mov
mov
aad
sbb
shlb
mov
call
sahf
cs
mov
movb
sbb
push
lds
pop
ds
test
mov
ds
push
and
scas
dec
dec
push
movsl
andl
cmpsl
lahf
int
adc
xchg
ret
repz
sbbl
add
mov
mov
mov
push
xchg
in
mov
jmp
subl
cmpsb
jl
and
mov
jb
pop
xor
xchg
mov
addr16
pop
imul
insl
or
lea
test
mov
push
ds
pushf
mov
xchg
cmpsl
dec
test
out
mov
into
push
xchg
xor
lods
rclb
mov
push
cmc
test
fidivl
lods
mov
stos
xchg
cmp
ljmp
xor
and
fcmovne
lods
insl
mov
aad
fs
lcall
jecxz
aam
pop
insl
push
jle
xor
push
xchg
push
mov
mov
inc
jae
xchg
dec
orl
js
jecxz
push
lods
rorl
mov
xchg
icebp
stc
movsb
cwtl
ja
out
call
mov
mov
inc
dec
push
pop
arpl
or
lret
push
pop
dec
loopne
pop
inc
loop
lods
loop
mov
mov
in
testl
push
push
xorb
jmp
push
adc
imul
decl
jne
push
xchg
lea
pop
cmp
ljmp
mov
push
les
jbe
gs
mov
lea
insl
mov
out
fnstsw
pop
pusha
fsubrs
and
pop
mov
out
repz
mov
jb
out
jecxz
rorb
jecxz
mov
sub
mov
push
push
dec
mov
add
and
imul
mov
mov
insl
fwait
xchg
fcmovnbe
and
or
popf
cmpsb
inc
ljmp
ret
push
out
adc
add
lret
pusha
cmpsb
movsb
adc
dec
ret
pop
fnstsw
fldl
mov
call
test
dec
out
fucom
std
xchg
out
jmp
push
repz
add
push
jle
mov
fidivl
stos
addr16
pop
repz
mov
testl
jl
fdivrs
stos
lea
inc
mov
xchg
andl
or
fs
jmp
push
sbb
out
fimull
mov
mov
stos
ds
pop
cli
aad
stos
cmpsl
cmp
shr
shlb
sbb
pop
mov
shrb
sbb
lahf
ret
jbe
mov
jmp
mov
inc
loopne
jmp
xchg
xor
outsl
out
stos
gs
stc
sahf
push
sahf
insb
cmpsl
ljmp
dec
sub
push
or
push
lods
lods
imul
add
sbb
and
cmc
hlt
xlat
lcall
sub
mov
out
bound
inc
jne
dec
mov
insl
cmp
loope
cmc
pusha
mov
push
lret
dec
dec
mov
push
xchg
and
push
or
and
push
push
fwait
in
dec
pop
int
movsb
test
pop
xor
xor
mov
pusha
data16
sub
xchg
add
pop
or
mov
mov
and
dec
xchg
ja
xor
pop
cld
or
mov
mov
mov
data16
fisubl
mov
mov
xchg
clc
jmp
fisubs
inc
push
push
inc
or
jecxz
inc
inc
cmp
movsb
gs
stos
dec
push
or
mov
jmp
aas
les
mov
jg
mov
loope
popa
inc
enter
cmp
cmp
sub
jecxz
dec
mov
or
mov
lods
adc
scas
aaa
idivb
jnp
xchg
out
fnsave
sbb
push
sbb
mov
loope
mov
mov
scas
jo
jne
pusha
negl
xchg
cmp
mov
aam
jb
push
xchg
mov
pop
loop
andl
mov
xchg
in
inc
push
je
cmp
push
ljmp
es
dec
mov
insl
sbb
mov
mov
mov
jg
mov
push
mov
push
pop
inc
xlat
mov
jmp
inc
loopne
jle
jl
insl
negl
fistpl
sub
and
sbb
jle
jo
out
mov
repz
loop
mov
loop
push
jo
out
pushf
push
stos
ret
mov
add
jbe
subl
popf
mov
sti
add
push
jmp
mov
add
mov
jecxz
sub
pop
and
mov
xchg
lea
lea
or
mov
rclb
jcxz
je
jecxz
div
sahf
test
inc
xchg
inc
pop
ljmp
data16
push
rcll
add
iret
fiadds
push
cmpsb
filds
jmp
aas
sub
jp
into
or
inc
jae
mov
ja
jmp
ja
mov
imul
mov
outsl
outsl
sbb
aas
xchg
lods
in
xlat
dec
mov
stos
inc
sub
fnstenv
frstor
jne
inc
in
lods
repnz
cltd
mov
fsubrs
xchg
lea
adc
test
nop
div
scas
test
rcl
sbb
push
inc
xchg
cmp
xor
jae
mov
aam
add
cmp
jge
popf
and
frstor
cmp
sbbl
movsl
lcall
push
es
out
add
mov
mov
cmp
inc
sbb
imul
in
mov
push
imul
mov
js
push
inc
inc
int3
and
adc
ss
xor
fsubrl
sub
jle
faddp
pop
mov
push
xchg
arpl
lods
scas
push
inc
pop
movsb
outsl
jbe
mov
xor
mov
xor
mov
pop
les
jl
cwtl
loop
xorl
inc
fsubp
jb
les
xchg
shl
cli
sbb
pop
sbb
dec
shll
and
sbb
hlt
ljmp
or
sub
and
adc
xchg
adc
in
or
add
dec
out
jecxz
or
lea
push
and
ja
in
inc
push
jecxz
adc
push
pop
outsb
jns
sub
addl
lods
xchg
dec
addr16
iret
mov
fcoml
xor
lret
andl
xchg
fldl
add
scas
fstpl
fistps
or
adcl
ds
iret
arpl
jmp
cltd
fdivrs
pop
jle
movsb
and
or
xor
movsb
pop
xchg
fstpl
fwait
arpl
jbe
jp
stos
ljmp
aas
andb
mov
ljmp
or
je
or
add
jmp
xor
data16
test
flds
int
ret
inc
ljmp
jle
and
bound
enter
movsb
push
push
push
xchg
push
dec
ja
cmp
jno
cld
mov
lret
sahf
jbe
xor
inc
or
lods
pop
dec
xor
pop
aaa
adc
stos
mov
push
jecxz
mov
out
repnz
cmp
xchg
mov
mov
lock
mov
mov
call
out
fs
sbb
sbb
lods
xlat
xchg
inc
xchg
fiadds
sub
subb
mov
into
mov
fnsave
stos
jecxz
incb
inc
addr16
mov
mov
arpl
ret
sbb
xchg
loop
and
jb
and
pop
jmp
xchg
inc
mov
mov
addr16
lods
adc
inc
sub
movsb
push
or
inc
mov
pop
insb
arpl
repnz
int3
add
and
mov
stc
insb
or
loopne
mov
xor
xchg
ja
sub
dec
test
inc
pop
ss
call
sub
mov
mov
and
dec
cmc
jnp
shlb
push
popf
jp
push
aas
bound
jns
lds
dec
and
cltd
mov
rol
enter
dec
push
arpl
jnp
jmp
and
insb
push
inc
jno
stos
idivl
sbb
pop
sbbb
xchg
jnp
loope
sbb
aad
pop
pop
xor
imul
ret
insb
push
ljmp
inc
xchg
jmp
jmp
inc
outsl
fildll
ss
xchg
ret
out
cmpsb
mov
sti
fisttps
test
mov
lret
xchg
pop
and
lcall
daa
decb
outsb
or
cld
sti
xchg
jg
sub
out
outsb
and
std
out
xlat
repnz
arpl
mov
pop
cmp
mov
test
mov
push
and
sbb
cmc
inc
add
aam
adc
pop
out
out
and
pop
aaa
fcmovu
rcl
push
scas
lods
dec
shll
pop
mov
jmp
and
jmp
inc
fmuls
cmpsl
cltd
push
pop
sar
mov
xchg
mov
addl
inc
sti
pop
dec
jb
mov
cmc
mov
or
fistpll
xchg
xor
mov
pop
aad
or
lds
mov
stos
mov
add
repz
in
inc
call
in
fucomi
ljmp
pop
jl
mov
mov
xchg
mov
dec
add
xor
inc
stos
loopne
sti
mov
setbe
lock
xchg
fwait
movzwl
cli
addb
testl
xchg
xor
mov
dec
pop
xor
pop
je
and
or
xorb
aaa
mov
mov
xchg
inc
addr16
sbb
xor
sti
movsb
sbb
dec
or
mov
cmp
pop
divl
mov
jle
dec
rol
in
jae
push
std
push
cmp
dec
pop
pusha
xchg
jmp
lahf
ja
testb
cmp
push
adc
xor
loop
sti
fucomp
lds
mov
cltd
repnz
int3
add
mov
loop
mov
mov
repz
adc
sbb
es
sbb
mov
pop
jecxz
lods
dec
inc
sbb
aad
cld
sub
sub
ds
mov
inc
rcrb
insl
jl
xchg
mov
and
dec
scas
fistpll
in
adc
jp
push
mov
loop
inc
xchg
into
inc
aas
stos
and
inc
cmp
lea
jb
add
or
sub
outsl
test
adc
imul
aas
pop
push
and
pop
inc
mov
inc
cmp
lahf
xchg
pop
fidivrl
sti
inc
mov
pop
push
out
andl
in
cli
imul
or
xchg
mov
pop
adcl
rolb
rcr
dec
mov
push
sbb
sbb
pop
dec
jae
lahf
jg
addr16
inc
fisttpll
and
aas
sub
fwait
pop
ret
dec
outsb
inc
fbld
pop
push
std
mov
jbe
jmp
frstor
jo
jecxz
fxch
pop
les
add
rclb
pop
push
xchg
add
aam
ret
out
mov
mov
aas
fldenv
divb
lcall
lcall
sub
ret
rcrl
pop
cmpsl
mov
inc
out
call
pop
sbb
add
and
imul
cmpsl
out
daa
pop
mov
push
daa
sbb
mov
sbb
pop
mov
push
and
or
mov
inc
ds
roll
ljmp
push
gs
scas
adcb
mov
daa
pop
repnz
or
pop
jp
inc
rcll
ret
jp
add
pop
es
push
test
not
adc
push
jle
lret
jae
jbe
mov
mov
pop
dec
ja
jge
imull
mov
jecxz
jle
aam
pop
pop
sub
mov
lret
pop
mov
mov
not
add
cmp
xchg
pop
mov
or
out
repz
es
scas
sub
mov
jmp
xchg
dec
fisubl
jecxz
add
add
mov
mov
dec
add
and
aam
mov
mov
push
mov
and
dec
inc
xchg
mov
mov
stos
jns
andb
jnp
xchg
or
les
jns
jecxz
cmp
aad
je
inc
gs
nop
outsb
and
jbe
ss
mov
push
loopne
das
repz
mov
stos
xchg
fidivs
or
sbb
lods
jnp
sub
mov
cltd
mov
mov
fiadds
inc
pop
psubd
push
ds
mov
inc
addr16
sbb
loop
sub
inc
ret
lods
and
shrb
pushf
push
pop
lods
fistpll
ret
or
mov
push
stos
sub
lahf
bnd
adc
popa
out
insb
iret
xchg
out
outsb
in
inc
mov
mov
data16
hlt
out
sbb
loop
mov
mov
cli
daa
frstor
mov
xchg
or
mov
repz
test
lret
push
das
push
mov
pusha
fiaddl
sti
mov
pop
filds
mov
andb
mov
mov
addr16
mov
aas
out
repz
jnp
push
out
jecxz
inc
subl
add
or
pop
lret
dec
lods
das
fidivs
popl
push
or
xor
mov
addl
push
dec
dec
xchg
pop
pop
and
scas
dec
loop
pop
push
mov
xchg
dec
xchg
dec
pushf
fs
pop
out
xchg
outsl
jl,pn
xchg
sbb
out
adc
dec
int3
adc
sbb
xchg
outsl
lea
lcall
cld
cmp
imul
pop
inc
or
gs
mov
in
xor
loope
test
aas
ds
insl
jnp
xlat
dec
and
movsb
pop
push
les
jbe
mov
cmp
add
cltd
insb
je
test
iret
arpl
and
adc
pop
sbb
push
pop
popf
insb
adc
iret
xchg
jnp
stc
sahf
bound
scas
imul
add
out
xchg
pop
sbb
es
data16
cld
pusha
mov
outsb
mov
fmull
fdivr
add
rorl
jg
adc
sbb
pop
es
mov
repnz
mov
sti
sbb
mov
in
pop
repnz
inc
out
cvtps2pd
arpl
dec
push
xchg
pop
sbb
aaa
jle
mov
fstl
fnstsw
or
les
xor
sub
cmp
jo
ret
mov
cmp
cmpsb
adc
xchg
jmp
sub
movsb
mov
inc
into
aas
xchg
and
insl
cld
or
push
loopne
lea
xchg
push
push
mov
inc
aas
add
inc
stos
mov
mov
or
or
ret
inc
mov
ljmp
ret
sbb
push
and
mov
and
imul
push
sbb
lea
add
pop
mov
mov
pop
mov
ret
jnp
mov
cmpsl
mov
out
out
sbb
mov
or
div
shrb
test
push
aas
jmp
mov
test
pop
scas
imul
cmp
adc
pop
sub
pop
aas
daa
aas
jg
dec
pushf
fs
xchg
xchg
push
cmpsb
push
mov
outsl
mov
cmp
ljmp
mov
cmpsl
or
adcb
jne
mov
add
imul
sbb
pop
cmp
jp
ja
data16
rclb
mov
rorl
in
ljmp
mov
sbbb
bound
loop,pt
pop
jnp
movsb
aas
mulb
out
mov
cmpsl
aas
cmpsl
inc
ret
dec
inc
mov
dec
xchg
mov
mov
jmpw
shll
mov
fbld
out
cmpsb
imul
test
mov
ds
cld
js
cli
adc
repz
jp
iret
mov
pop
push
shlb
mov
mov
jl
or
dec
adc
lods
xchg
into
push
add
pop
mov
addl
dec
jno
mov
je
mov
sub
dec
fidivs
add
jmp
fidivrl
jne
sahf
mull
inc
push
idiv
int3
dec
incl
or
and
shrl
dec
ja
sti
push
pop
adc
sbb
mov
add
jmp
pop
daa
ret
jecxz
jmp
and
inc
ret
outsb
pop
pop
mov
and
push
ret
adc
lock
adc
out
mov
cmpl
add
fbstp
cltd
subb
repz
test
mov
xchg
sub
arpl
mov
dec
cmc
cmpsl
jno
pop
inc
dec
icebp
pop
inc
addr16
in
dec
inc
push
or
push
sbb
imul
mov
sbb
lcall
sbb
movsb
push
jl
sti
fs
jecxz
sub
jecxz
cwtl
add
xchg
and
scas
cld
jp
out
fidivrs
sbb
xchg
mov
pusha
fdivrl
inc
xchg
cmpl
inc
dec
xchg
jae
adc
xchg
insl
pushf
enter
mov
mov
jno
test
mov
mov
mov
push
mov
xor
test
and
mov
lahf
addb
insl
jnp
in
mov
add
dec
cmp
xchg
adc
sub
cmpsb
sub
and
movsb
incb
sbb
mov
push
fists
ds
aad
lea
addr16
mov
pop
scas
mov
add
in
ret
jecxz
fcmovbe
rclb
in
jb
roll
mov
in
fnsave
xchg
inc
sbb
dec
out
sbbl
jae
popf
sub
adc
lret
adc
fstl
popa
lret
imul
movsl
test
dec
pop
sti
in
cmc
stos
lret
mov
mov
lahf
fstps
scas
mov
cmp
inc
jnp
jecxz
orl
or
adc
sub
jnp
xlat
loop
push
inc
sarb
ljmp
mov
sub
add
jnp
adc
push
test
jecxz
iret
repz
jle
insb
cmp
mov
xlat
test
xchg
ss
mov
and
pop
in
in
movsl
in
push
xchg
mov
sti
or
push
inc
mov
xchg
push
outsl
xchg
pop
mov
sbb
imul
dec
test
arpl
inc
arpl
pop
adc
rcr
aad
mov
fnsave
popf
lret
scas
or
adc
xchg
js,pn
inc
mov
test
test
or
and
xchg
cmp
pop
sub
and
adc
mov
rep
jne
test
pusha
aam
pop
into
test
jge
fisttpll
rcll
mov
inc
arpl
fsubl
dec
icebp
sti
push
sub
add
shrl
inc
xlat
mov
in
mov
jmp
jecxz
pop
lret
cmpsl
mov
cld
dec
mov
sti
xchg
add
mov
repz
insl
out
mov
imul
mov
sub
pop
ret
add
jecxz
gs
popa
or
mov
add
aad
add
or
lcall
mov
lret
daa
jae
repz
mov
fsubl
imul
loope
adc
xchg
mov
jle
inc
rcrb
lret
add
out
lret
inc
mov
cmpsl
add
fnstcw
inc
orb
add
and
mov
inc
aaa
mov
add
daa
xchg
mov
inc
mov
and
add
filds
pop
dec
test
cld
dec
push
or
pop
jg
xchg
daa
mov
into
inc
adc
into
inc
outsl
mov
in
repnz
or
das
daa
scas
mov
inc
jns
iret
add
daa
dec
mov
insl
add
jb
enter
sub
icebp
mov
add
daa
int3
mov
in
jge
std
add
xor
data16
cmc
push
mov
inc
es
gs
pop
imul
int
and
push
pop
add
mov
inc
inc
mov
add
cmc
mov
in
mov
jbe
adc
mov
aad
aam
push
add
xor
lret
loopne
xor
sub
inc
test
daa
mov
enter
mov
repz
into
inc
ficomps
add
sbb
flds
fsubs
pop
mov
ljmp
mov
add
cmpl
in
push
es
icebp
repz
shr
xor
add
adc
inc
xchg
mov
add
cs
xor
mov
rolb
insb
xor
es
mov
pushf
xor
add
xor
pop
cmp
in
inc
xor
in
fs
pop
movsb
cs
and
push
rolb
xchg
xor
pop
je
inc
mov
xor
add
mov
call
test
in
sub
mov
cwtl
icebp
pop
sbb
inc
clc
es
in
mov
inc
icebp
pop
subb
add
loopne
in
pusha
xor
pop
push
cs
nop
adc
rolb
mov
xchg
xchg
imul
inc
popa
std
fucomi
imul
jmp
int3
insl
loope
ljmp
dec
inc
jne
dec
dec
in
leave
lea
movl
out
jmp
fcmovnbe
dec
jmp
or
lret
daa
std
jecxz
sti
roll
or
ret
lret
inc
lods
fwait
stos
rolb
fcmovbe
inc
dec
mov
push
xor
sbb
shl
or
mov
cli
sub
mov
int
leave
add
shr
icebp
xchg
dec
mov
hlt
sub
pop
fldl
mov
out
inc
adc
fcoml
mov
stos
pop
mov
ljmp
repnz
sub
or
push
lea
and
or
in
fisttpl
ret
ret
mov
dec
mov
movsb
inc
lahf
fisttpl
loop
push
rol
xchg
pop
or
insl
mov
inc
stos
ret
mov
ds
xchg
sahf
fistl
insl
fstpt
ds
ret
adc
lods
and
mov
dec
adc
stos
insb
sbb
ficompl
into
ds
lods
shr
sbb
sbb
jecxz
dec
jge
sub
sbb
in
push
jmp
pop
fwait
xchg
fcmovb
dec
or
ret
inc
into
cld
xor
movsb
scas
jae
mov
sbb
dec
pop
jecxz
call
test
aam
sahf
inc
mov
in
and
dec
pop
ds
ret
in
jns
pop
stos
loop
xchg
mov
scas
mov
fistpl
es
lds
fwait
or
or
push
arpl
movsb
andl
ret
shlb
adc
xor
sub
les
xchg
cmpsb
dec
xchg
outsb
jo
pop
bnd
in
fisttpl
inc
mov
in
fwait
jecxz
dec
mov
ret
enter
lret
ret
into
jmp
pop
mov
or
xchg
daa
or
pop
push
shl
das
sub
mov
imul
xchg
inc
adc
sbb
mov
ret
fldenv
setae
push
pop
fs
mov
stos
loop
pop
dec
push
ficompl
mov
xchg
cmpsb
adc
into
jmp
aad
cltd
lods
pop
push
loope
cmpsl
sbb
sbb
stos
sbb
lock
and
and
in
sbb
push
sbb
and
arpl
sti
lods
loope
inc
pushf
popf
xor
int
in
loope
pushf
aad
arpl
out
push
fcmovu
roll
and
stos
pop
std
mov
int
fwait
lea
hlt
sub
mov
pop
inc
fisubl
jle
imul
push
xchg
sbb
lods
pop
lea
ja
cmpsl
pop
lea
sahf
jecxz
out
scas
mov
andb
lock
ficoml
cmp
and
ret
sbb
xor
sahf
xor
jecxz
cmpl
fcompl
xchg
mov
adc
mov
pop
sub
es
out
jg
fisttpll
push
fwait
rcll
sti
fcoml
xchg
ficomps
frstor
jecxz
cli
in
loop
adc
adcl
fst
fiaddl
mov
adc
sahf
jp
jb
bound
pop
mov
pushf
jmp
push
sbb
mov
inc
and
int3
xchg
dec
outsb
fstpt
mov
loop
mov
cmp
daa
xchg
and
imul
push
jno
sbb
cmpsw
in
and
arpl
xor
dec
in
subl
pop
push
dec
cmp
das
out
xorl
lods
fimuls
lret
daa
rcrl
add
ds
hlt
decb
notl
dec
rcrl
mov
popa
xchg
mov
imul
lds
lret
xchg
ljmp
das
lcall
mov
push
incb
adc
push
jo
lret
push
test
aam
cmp
popf
xlat
iret
jae
inc
lods
mov
cmp
pop
mov
add
pusha
ds
in
jb
xor
filds
jnp
push
outsb
dec
xchg
loopne
jb
mov
mov
out
dec
xchg
fnstcw
push
out
jbe
inc
jne
movsb
jb
mov
das
pop
xchg
test
mov
fidivrl
outsb
jmp
mov
jecxz
or
mov
sub
ret
lret
mov
outsb
out
inc
sahf
fistpl
mov
push
xchg
cmpsb
jns
mov
or
ja
arpl
lret
call
das
xor
inc
jg
and
lods
aaa
test
mulb
mov
add
aas
out
mul
add
daa
cmc
pop
lahf
addr16
adc
sub
xchg
data16
frstor
cmp
test
outsl
loopne
das
mov
jae
mov
push
pushf
push
xor
mov
mov
cmp
xchg
and
xor
mov
out
fdecstp
and
xchg
and
xchg
xchg
push
jno
xchg
mov
lds
pop
sbb
addr16
rcl
add
pusha
inc
jg
cmp
lea
sub
pop
loop
mov
mov
mov
ret
add
jecxz
pop
test
mov
repz
data16
dec
push
iret
mov
loop
push
lcall
sahf
pop
jae
rorl
hlt
sbb
mov
in
push
xchg
das
mov
jg
mov
test
pop
incb
adcb
sti
ja
ja
push
push
sub
add
inc
push
addr16
ljmp
xchg
add
jecxz
ret
js
adc
movsl
cmpsb
pop
shrb
push
add
lods
aas
test
mov
aaa
ljmp
ljmp
test
or
mov
mov
mov
mov
cmpsb
and
dec
lods
jnp
test
and
lret
jnp
add
xor
fsubl
repnz
pop
out
int
in
sti
sbb
cltd
jno
sbb
mov
inc
or
mov
push
insb
dec
pop
int
icebp
inc
and
cmpl
ss
enter
fisttpll
adc
in
scas
mov
stos
lcall
arpl
dec
imul
nop
cmpl
popf
mov
jl
xchg
adc
mov
xlat
and
mov
xchg
xchg
sti
aas
mov
ljmp
push
popf
adc
roll
mov
or
sti
movb
inc
imul
lcall
sub
sti
aas
adc
addr16
pop
or
xor
jge
and
pop
sub
adc
daa
add
add
aad
adc
add
pop
into
stos
inc
sub
xchg
repz
imul
ljmp
sahf
dec
sub
aas
jnp
aaa
push
test
xor
inc
xor
mov
ret
fwait
xchg
xchg
sbb
aas
sbb
jp
jns
mov
ja
push
cli
cmp
inc
jecxz
push
pop
cld
dec
repnz
or
push
sub
add
in
fisubrl
sbb
lret
sbb
outsl
shll
addr16
daa
mov
icebp
push
ret
push
inc
gs
inc
shrb
mov
push
inc
lds
xor
mov
repz
ja,pt
pop
pop
sbb
mov
sub
sbb
aad
mov
pop
movsb
cwtl
rcl
sub
push
sbb
xchg
hlt
lcall
pop
sbb
clc
dec
cmpsb
sub
add
push
call
sbb
push
cli
and
jmp
sbbl
jbe
idivl
pop
lahf
xor
dec
mov
push
test
xor
push
inc
pop
int3
push
add
dec
es
repz
icebp
call
adc
mov
les
jne
leave
arpl
push
push
mov
pop
repz
push
loopne
mov
ja
jp
sub
mov
lret
les
push
hlt
or
pop
push
pop
imulb
pop
fmuls
xchg
sti
adc
adc
mov
adcl
ret
shrl
mov
inc
cmp
nopl
dec
xor
flds
sub
adc
inc
in
mov
stos
arpl
mov
mov
inc
ret
outsb
stos
ljmp
push
or
dec
push
lsl
daa
in
lret
and
jnp
sbb
int
inc
test
mov
inc
cmp
adc
add
test
fimull
adc
icebp
pop
xchg
or
adcb
mov
sub
or
nopl
rorb
testl
sbb
cmp
imul
aaa
inc
inc
addl
loop
imul
sbb
pop
xlat
and
xchg
xlat
mov
mov
push
insl
cmp
sbb
mov
cltd
addr16
stos
push
jbe
inc
ss
add
inc
lret
sub
and
repnz
int3
dec
mov
out
ret
mov
pop
mov
adc
mov
lcall
aad
dec
fwait
lret
lds
dec
fucomip
xchg
add
inc
and
mov
jmp
shl
aas
lcall
sub
add
and
xor
mov
xchg
test
jb
sbb
cmc
test
pop
mov
push
xchg
jp
mov
xlat
inc
and
jge
insl
push
adc
aas
mov
dec
and
rolb
jb
ret
int
or
xchg
mov
adc
and
mov
jo
pop
fildl
je
ret
sar
aas
fwait
mov
mov
call
negl
cmp
jg
mov
adc
rorl
jno
fldt
jmp
pushf
mov
int
push
ret
xlat
int
or
stc
inc
lahf
repz
mov
ret
dec
mov
inc
orl
jmp
fstpt
sbb
or
bound
pop
xchg
dec
mov
mov
pop
xchg
in
lcall
lret
cmp
sub
arpl
fsubl
pop
jmp
push
stos
jnp
ret
es
cld
fcmovnb
out
add
aad
mov
rcr
fcomi
imul
fbld
jnp
jmp
jecxz
test
mov
add
cmpsl
jmp
mov
mov
imul
jge
add
orl
daa
xchg
loop
stos
push
lret
int3
cmpsl
fcmovnb
cld
mov
repz
inc
in
popf
fsubr
push
jmp
mov
imul
mov
pusha
sub
ror
ret
fcmovnu
fiaddl
cmp
jle
jo
in
mov
fisttpl
das
lret
or
push
mov
xor
aas
cs
dec
fnclex
movsb
stos
mov
iret
push
xchg
dec
test
jns
int3
ljmp
fnsave
jge
jno
pop
or
fxch
push
lret
xorb
repz
mov
ret
ljmp
into
out
dec
rcrb
cmp
add
mov
jb
cmp
or
add
sub
jecxz
cmp
imul
jmp
repz
jmp
pop
cmp
rorl
bound
jmp
inc
cli
std
fsubrl
out
cmpl
fidivrl
int3
cmp
pop
cmpl
lcall
xor
inc
lea
loopne
mov
or
xlat
adc
lret
pusha
mov
aad
test
stos
jecxz
lahf
dec
int
cli
std
push
in
mov
push
dec
leave
add
int
jecxz
repz
jmp
jmp
fildll
sbb
lea
inc
add
ret
js
ret
mov
leave
sbb
mov
xor
xchg
in
rolb
out
and
in
rolb
fdivl
out
andl
jmp
adc
fmull
out
xorl
in
jnp
roll
pop
out
orl
in
mov
in
fcompl
pop
fildll
out
adc
mov
fildl
and
cmp
stos
daa
adc
out
xor
jmp
out
xor
fwait
stos
push
cmp
ret
mov
jg
imul
frstor
repz
push
jecxz
imul
pop
ljmp
xor
mov
mov
inc
adcl
in
pop
xchg
pop
das
fmul
out
sub
mov
push
xchg
push
iret
dec
add
fcoml
pop
in
das
xchg
inc
cmpsb
mov
sbbl
xlat
sbb
xchg
lahf
xchg
jns
fdivl
out
orl
ss
xor
dec
sbb
fsubrl
pop
das
in
out
xchg
push
out
mov
push
add
pop
inc
in
or
neg
cmpsb
jecxz
int
sub
out
pop
mov
jmp
stos
repnz
jecxz
xor
cmove
andb
ss
pop
ret
jmp
ret
xchg
pop
int
mov
xchg
mov
mov
lret
int
fisttpll
inc
jae
ret
cli
sbb
sar
sub
gs
jae
rorb
int
and
add
mov
aad
and
mov
subl
dec
jl
inc
jne
adc
sub
xor
imul
adc
imul
out
sbb
push
xchg
sbb
roll
int3
shr
jecxz
dec
mov
cmpl
in
fiadds
fsubr
out
adcl
loop
pop
ret
jg
xor
inc
movsl
dec
loope
leave
fcmovne
cld
int3
pushf
sti
out
orl
bound
push
fisttpl
push
jp
cltd
es
cmp
push
int
push
int
mov
dec
mov
lea
inc
ss
es
roll
dec
rcr
jmp
and
mov
fdivrp
inc
mov
ret
mov
stc
into
mov
cmp
inc
push
out
movsb
sub
hlt
sbb
test
add
into
push
std
sbb
sub
dec
iret
nop
xor
lret
cmp
mov
int3
out
inc
xor
push
xor
cmp
or
sbb
pop
lret
inc
mov
lcall
cmpl
je
outsb
cmp
cmp
das
lret
xchg
insl
dec
mov
pop
or
es
xchg
ret
inc
fwait
shr
xchg
cmp
cmp
iret
andb
mov
aaa
in
lret
inc
add
jle
leave
mov
or
shll
pop
pop
pop
push
jnp
add
sub
mov
xor
jne
inc
cs
ja
push
sub
shlb
fdivs
jp
jne
cmp
lret
add
mov
xor
rcpps
mov
or
and
push
ret
int
cmp
pusha
mov
lret
ja
mov
loopne
out
and
dec
push
push
jnp
mov
ror
mov
inc
stc
dec
xchg
inc
orb
dec
jle
sahf
sbb
mov
test
add
loop
mov
add
inc
xor
dec
or
push
cwtl
add
xchg
push
jns
push
inc
shrl
out
imul
lret
outsb
add
xchg
out
lods
push
xor
orl
lods
icebp
or
gs
das
lods
imul
lret
pusha
push
xchg
aam
scas
mov
inc
pop
xor
push
xor
mov
add
je
lret
scas
or
mov
ror
in
int3
mov
ss
aaa
lret
or
mov
int
insb
mov
dec
xor
lret
mov
stc
lods
sbb
or
ret
ror
cld
and
test
mov
cmpsl
push
pop
ljmp
dec
popa
jbe
cmp
lret
xchg
or
lock
jge
jmp
test
pop
add
mov
jge
orb
lret
xor
out
add
lret
ja
in
mov
imul
leave
sti
dec
pop
add
nop
mov
jae
lock
pop
ret
je
jp
pop
fdivp
or
jl
loope
or
or
inc
or
add
enter
jecxz
jg
aam
stc
pop
jecxz
lds
mov
mov
sub
clc
andnps
cmp
push
jb
and
mov
add
jmp
jecxz
jg
pop
mov
lds
out
xchg
mov
call
inc
stc
imul
sti
cmpsl
lods
inc
jg
fnstsw
aaa
mov
cmp
lahf
or
pop
ret
or
pop
repz
mov
mov
stos
scas
or
jno
adc
mov
lods
aas
enter
pop
lret
iret
add
vmovntps
jmp
add
mov
xor
inc
add
daa
ret
addr16
jb
fs
jne
into
cmpsl
std
jmp
ret
cs
fistps
loope
adc
push
call
imul
das
std
jns
mov
divl
clc
cmp
cmp
pop
loop
sbb
pop
pop
out
mov
mov
mov
aas
pusha
mov
lea
movb
cmp
arpl
xor
dec
push
dec
dec
sbbl
pop
daa
jp
test
jmp
jg
cmp
push
out
fwait
push
or
dec
push
popf
sbb
fidivs
dec
and
rclb
adc
int3
mov
pop
lock
xchg
pop
or
sbb
stos
dec
lock
lods
adc
cmpsl
xchg
xor
pop
test
push
mov
inc
mov
xchg
dec
and
push
mov
pop
gs
push
test
lds
mov
in
pop
adc
push
push
dec
pushf
lcall
xlat
les
orb
icebp
dec
pop
add
sub
mov
mov
mov
ret
pop
mov
push
lahf
fnsave
cld
sub
pop
jmp
dec
lods
and
in
in
insl
test
stos
ret
out
imul
rorb
push
shlb
imul
jo
stos
lret
pop
dec
fiaddl
ret
pop
movsb
pushl
or
lcall
cltd
mov
pop
mov
mov
fisubrs
cmc
sub
test
or
ss
fldenv
jecxz
cmp
mov
lcall
daa
push
inc
add
push
push
lcall
fildl
add
je
imul
add
and
inc
inc
hlt
push
faddl
pop
cmp
sti
jp
call
outsl
mov
pop
jnp
call
cmp
mov
cli
fsubrs
xlat
push
add
js
sbb
pop
add
pushl
jmp
push
call
js
movsb
xchg
xor
call
jecxz
test
add
lods
sub
add
push
daa
jnp
mov
shlb
add
and
fs
call
push
call
push
call
add
add
pop
pop
cs
cmp
aad
daa
loopne
push
push
mov
stc
mov
push
push
jno
mov
cld
mov
push
loop
inc
and
clc
fdivl
and
ret
dec
in
inc
inc
stc
mov
dec
and
pop
mov
inc
fidivl
mov
je
and
dec
dec
jge
out
hlt
add
jae
movsb
inc
cs
inc
or
int3
cmp
lds
call
sti
mov
push
sub
not
movsbw
pop
pusha
jmp
push
call
movsl
pushw
jnp
call
das
push
call
add
insl
or
xchg
add
mov
rorl
xlat
rolb
je
or
dec
lods
adc
add
mov
and
imul
arpl
fsubs
xchg
jae
nop
mov
sbb
pop
inc
push
push
cmp
xor
cs
inc
pop
in
out
cmp
push
sub
lahf
mov
das
dec
mov
test
adc
xchg
mov
pusha
rol
push
push
lret
test
rclb
pop
sub
push
sbb
aad
xchg
cmpsb
mov
adc
push
dec
push
cmp
insb
add
add
push
push
call
push
sub
pop
cwtl
mov
mov
lea
xchg
lcall
mov
dec
dec
es
sub
jb
scas
out
test
push
pop
mov
pop
mov
outsb
xchg
movl
sbb
popf
pop
jg
dec
or
add
outsb
pusha
inc
push
mov
xchg
jp
adc
xlat
or
vmaxpd
add
cmpsl
ja
lret
in
out
ss
in
dec
xor
jl
out
scas
leave
ficompl
sbb
sub
sub
sub
inc
mov
subb
and
faddp
nop
stc
or
dec
and
pop
adcl
inc
clc
add
jmp
test
lcall
and
mov
leave
xchg
xchg
fisubrs
lods
sbb
xor
mov
inc
pop
sub
cmp
xlat
add
sbb
sbb
pop
std
nop
sbb
sub
outsb
ljmp
dec
mov
dec
mov
mov
mov
test
inc
sbb
xchg
pop
jb
ss
mov
sbb
das
inc
push
insl
pop
add
ret
pop
jp
xchg
loope
jecxz
pop
push
or
adc
lods
mov
adc
stos
inc
adc
daa
cmp
rcr
cmp
fstp
dec
push
mov
popa
pop
push
cmp
push
xchg
cmc
add
xlat
outsl
or
shll
jmp
inc
outsl
sbb
jg
js
out
add
xor
outsl
sbb
adc
fsubr
mov
mov
inc
not
iret
add
mov
sub
fistps
lahf
add
pop
orb
and
sbb
imul
fs
cmc
push
sbb
dec
adc
loop
pmuludq
pop
sbb
jnp
incb
dec
push
sbb
add
jb
ror
fwait
jecxz
jl
jo
insl
je
mov
lods
scas
and
or
xor
ret
das
shll
lahf
into
mov
movd
and
cmp
shr
xchg
mov
mov
sub
repz
push
pusha
lea
call
push
pushf
pushf
lea
jae
pushf
not
pusha
mov
dec
call
call
push
call
jecxz
shrb
not
mov
pushf
pusha
pushf
pushl
ret
push
call
mov
jp
call
pop
push
dec
xchg
xchg
inc
pop
in
add
pop
dec
push
add
dec
add
pop
pop
mov
aaa
test
and
jecxz
outsb
aad
loopne
ds
nop
cmp
jae
movsb
loop
adc
cltd
pop
cmp
mov
cmc
in
loopne
fstl
cmpsl
data16
fwait
jne
cmpsb
outsb
jge
mov
das
pop
cmp
sbb
and
popa
daa
loopne
icebp
leave
fcmovb
imul
sbb
testb
push
call
fisttps
push
call
push
call
jns
lock
sbb
inc
insl
add
mov
add
xor
or
call
push
pop
mov
imul
inc
push
icebp
jmp
test
rcl
mov
pushf
add
jmp
push
call
les
inc
and
inc
fsubrl
jmp
add
inc
pop
jne
inc
repnz
call
push
add
jmp
push
imul
mov
clc
push
or
arpl
inc
push
inc
xchg
in
push
loope
movsb
jae
leave
jae
aam
sti
dec
push
outsb
push
sub
add
lahf
or
push
jle
pop
sub
daa
mov
les
xchg
fwait
jp
stos
dec
mov
push
push
and
xchg
jo
push
push
sbb
lret
lahf
test
xor
jne
xchg
les
inc
or
orb
xor
pusha
or
insb
add
test
add
test
or
call
mov
xor
movl
lea
jae
call
bt
push
btc
mov
call
fcoml
cld
ret
mov
pop
movsb
mov
cltd
xor
leave
jle
jns
nop
jg
push
xor
mov
adc
mov
dec
pop
mov
xchg
sbb
cmp
cmp
xor
lods
or
adc
cmp
sti
push
orl
lcall
ror
loope
arpl
sub
sbbb
xlat
std
xchg
mov
loop
push
in
fs
cmp
sub
loop
insl
add
cmp
push
call
iret
mov
insb
add
and
add
hlt
das
cld
ret
pop
mov
lods
ds
bound
jno
mov
fs
mov
repz
std
addr16
mov
mov
je
cs
add
xchg
xor
inc
bound
inc
xor
cli
rcl
scas
icebp
mov
adc
push
xlat
pop
gs
jne
shr
je
dec
call
fdivs
cltd
loop
xor
inc
call
pop
inc
fmull
out
loop
mov
fistpll
jb
sub
adc
pusha
and
call
lea
cld
ret
lock
inc
inc
cli
dec
cld
dec
dec
clc
inc
inc
cld
outsb
dec
aaa
cmp
pop
loope
inc
ss
imul
out
pop
pop
lods
lods
pop
mov
add
inc
or
into
hlt
addr16
jp
lret
jge
sub
aam
scas
int
mov
sti
lea
pop
ss
in
movaps
ss
cwtl
add
mov
in
mov
pop
aaa
dec
cld
fnsave
dec
cli
clc
or
stos
shrb
cli
ret
jmp
loopne
ja
mov
pushf
adc
test
mov
cmpsl
and
push
jnp
cld
ljmp
fwait
sti
mov
sahf
cmc
lahf
cmp
dec
sub
add
and
out
jl
fstpl
scas
cmp
jl
add
gs
pop
pop
sub
mov
scas
cmp
xchg
sub
pop
or
mov
and
and
ret
push
xor
mov
sti
hlt
mov
out
out
icebp
pushf
mov
cmp
out
mov
out
jg
sub
in
arpl
sbb
stc
call
lods
mov
ret
mov
dec
adc
adcl
push
and
xchg
sbb
pop
jae
outsb
in
mov
std
daa
xor
mov
inc
mov
mov
out
mov
aam
pop
jae
aaa
jmp
test
push
aas
push
repnz
mov
ret
adc
rol
rclb
mov
adc
inc
sbb
inc
add
push
pop
inc
add
pop
test
ds
mov
or
xchg
call
xor
cmp
and
push
je
popa
lea
dec
xor
inc
pop
aam
in
push
call
ljmp
and
call
push
cmp
cmp
pushf
pushf
call
insl
fwait
mov
ret
out
test
stos
lods
mov
add
hlt
rcrb
push
mov
and
loop
mov
and
popf
ds
cmp
sahf
xor
inc
inc
sbb
fildll
xor
push
xorb
sti
xchg
cltd
in
mov
push
pop
or
mov
js
fbld
mov
jae
sti
mov
cmp
push
shrl
push
repz
call
mov
clc
ret
in
loope
ficoml
xlat
test
pushl
repz
sbb
lods
sbb
pop
in
stos
in
cmpsl
xor
aam
cmp
clc
ret
out
xor
mov
enter
inc
dec
adc
jae
pop
and
ljmp
sbb
jae
and
add
add
fisubl
cmc
into
adc
insb
hlt
push
insl
inc
push
or
orl
int
hlt
movsb
mov
into
lods
mov
mov
stc
ret
and
or
insl
sbb
push
jnp
fdiv
leave
push
or
leave
adc
push
js
xchg
xor
out
and
inc
cmp
stc
arpl
or
adc
leave
mov
xor
inc
imul
dec
sub
add
lods
test
imul
subl
mov
push
test
or
data16
insb
add
mov
repz
push
call
inc
adc
loopne
test
xor
in
das
and
sub
fists
cmp
jmp
pop
push
cmp
loope
pop
test
aad
subb
lret
add
pandn
add
cltd
inc
lods
push
cmpl
not
repnz
jns
push
adcb
jnp
call
shll
pop
out
lea
call
and
int
cli
sub
ret
push
pop
adc
adc
add
pop
sbb
lea
or
or
adc
lock
inc
inc
xorl
sub
inc
sbb
leave
arpl
push
xchg
shll
movsl
sahf
cld
cmp
xchg
adc
gs
xchg
jecxz
push
mov
rclb
inc
loope
jge
or
or
insb
and
jle
aas
pop
sbb
mov
add
sub
lods
test
sub
sub
fildll
call
pop
es
sbb
jp
sub
hlt
cmp
mov
xchg
add
mov
or
out
dec
in
in
pop
movsl
and
fisubs
imul
cltd
fists
mov
andl
loop
fistpll
mov
notl
xchg
test
or
push
jge
je
add
jne
mov
cmc
jg
jmp
fs
call
out
jl
roll
test
bound
jbe
jne
push
jns
movsb
enter
push
jmp
addr16
test
pop
addb
mov
adc
mov
jg
jle
mov
test
mov
daa
scas
cmpsl
or
inc
mov
jge
sub
pop
call
out
lea
add
ljmp
fwait
stc
arpl
and
loop
repz
pop
dec
cmp
jg
dec
sahf
outsl
popa
les
add
clc
test
adc
fincstp
or
clc
cmp
add
pushf
jmp
lea
je
bswap
add
cmc
sbb
ror
mov
clc
pusha
mov
add
jmp
add
push
imul
insb
insb
outsl
arpl
pop
hlt
das
test
bnd
shrb
rorl
fldl2e
lret
fs
xor
test
lea
adcb
enter
sbb
fcmovne
lahf
xchg
xchg
jno
inc
sbb
xlat
imul
ret
push
cmp
mov
shlb
push
cld
jnp,pn
call
or
xchg
jmp
rcrl
ret
lret
gs
xchg
leave
jne
ret
jne
loope
cwtd
in
mov
mov
jb
cltd
add
imul
movsl
or
inc
pusha
adc
mov
dec
aad
push
and
scas
jae
xor
pushl
jmp
lahf
loope
ret
outsl
jecxz
sahf
movsl
xor
mov
jns
sets
sub
sub
sub
mov
adc
loop
je
aad
mov
cli
fdivrl
loop
cld
xor
imul
add
pushf
adc
mov
lahf
push
call
inc
stos
mov
leave
rorb
hlt
ret
cld
gs
pop
push
orps
push
hlt
adc
xchg
lret
les
mov
xchg
jl
dec
shrb
push
pop
popf
fistpll
xor
lahf
scas
sub
mov
add
inc
push
arpl
in
xchg
out
bound
cld
and
scas
mov
stc
repnz
loop
inc
es
sub
sbb
push
lcall
sahf
push
mov
aad
adc
clc
jbe
hlt
ret
out
fidivrs
xchg
xchg
lcall
cld
fwait
jb
lahf
xorb
mov
psllw
div
mov
xchg
es
dec
push
pop
jge
sbb
add
cmp
lods
iret
push
dec
test
xchg
call
das
xchg
mov
ds
out
cmp
sti
xchg
inc
pop
repz
jnp
add
sahf
andb
dec
pusha
mov
stos
xchg
jno
out
xor
ret
inc
sti
pop
push
add
dec
dec
add
dec
out
jnp
xchg
inc
mov
orl
mov
or
outsb
add
add
sarb
mov
or
cmp
jno
jmp
dec
std
out
pop
hlt
pop
dec
ljmp
and
stc
dec
movsb
mov
fdivrl
inc
enter
fiaddl
dec
out
push
rorb
mov
dec
sub
in
cwtl
xchg
js
xor
dec
pop
mov
adc
orb
sbb
fs
pop
imul
pop
push
jnp
arpl
enter
cmp
dec
inc
aad
ror
hlt
pop
cmp
popa
push
movsb
and
sub
hlt
inc
push
loop
mov
sbb
pop
hlt
jmp
data16
and
cli
dec
daa
inc
pop
leave
loop
gs
and
adc
and
mov
pop
pop
mov
popa
mov
push
mov
shl
pop
cmc
lods
aam
push
pop
ret
pop
nop
lods
in
jl
adc
mov
pop
cltd
mov
jne
jp
int
fcomps
and
push
mov
jg
lds
ds
pop
cmp
imul
int3
insl
push
and
insl
arpl
jecxz
or
jbe
cmpsb
mov
adcl
stos
mov
or
jo
mov
insl
jle
cmc
test
call
push
jge
bnd
mov
loop
fstp
mov
nop
cltd
jnp
adc
mov
and
popa
adcl
sbb
mov
add
mov
inc
adc
aaa
fnsave
sahf
mov
test
test
mov
sbb
cld
and
pushf
push
inc
nop
mov
xchg
add
cld
sbb
adc
das
sbbl
mov
or
clc
loopne
sub
push
fstpl
cwtl
bound
data16
sub
dec
inc
inc
dec
xor
cs
insb
add
pop
inc
adc
and
sbb
shlb
scas
ljmp
mov
pop
sahf
jb
push
std
stc
mov
call
adc
mov
js
xor
pop
add
cmp
pop
sub
or
stc
mov
fwait
mov
inc
xlat
push
sub
push
xchg
idivb
xchg
and
fwait
xor
inc
sbb
mov
fidivl
in
rclb
rclb
cmp
mov
out
jmp
mov
hlt
xlat
int
test
loop
inc
mov
daa
int
sub
shll
cmpsl
xor
shl
outsl
mov
add
popa
hlt
insb
add
sti
sbb
add
lock
pop
or
pop
push
pop
add
push
insl
out
pop
or
xchg
xchg
ret
cmovnp
mov
iret
pop
xchg
sbb
mov
mov
test
mov
bound
outsb
push
xchg
mov
pop
rep
rcrb
popf
xor
or
movsl
jnp
lcall
inc
mov
mov
into
inc
lahf
in
dec
xchg
test
mov
jne
jl
lahf
cltd
cwtl
jge
jne
jge
pop
psrld
bound
mov
cld
cmc
test
incl
sbb
xchg
pop
icebp
stos
push
and
in
adc
dec
adc
or
sub
inc
mov
nop
jle
jae
and
inc
xor
nop
dec
sub
loope
stc
mov
lret
out
jp
mov
loope
pop
into
add
insl
sub
mov
cmp
cld
jae
popf
cli
stc
adc
pop
addr16
xchg
mov
aaa
ret
add
js
add
dec
or
add
sub
clc
shl
mov
lea
js
push
movl
mov
pushf
pushf
mov
push
pushf
popl
mov
pushf
pushl
popl
push
lea
jmp
mov
stc
rol
stc
mov
clc
sub
call
mov
mov
pushf
lea
jmp
pushl
popl
pushl
push
lea
jmp
pushf
pusha
mov
call
mov
movb
lea
jmp
clc
mul
call
inc
pusha
movl
pushf
decl
movw
push
lea
jne
pusha
jmp
rcr
shrd
rcl
mov
pusha
add
pushf
pusha
push
lea
jmp
mov
mov
and
shl
mov
pusha
add
call
push
mov
mov
lea
jmp
pushf
popl
jmp
stc
bt
popf
push
pushf
push
lea
jmp
call
mov
setae
mov
push
mov
pushf
pushl
ret
jmp
push
mov
movb
mov
push
push
lea
jmp
pushf
mov
pushf
popl
call
pushf
popl
call
inc
or
movsbw
xadd
mov
movsbw
shrd
mov
pushf
test
movl
pushf
not
call
movl
rep
pushf
push
adc
mov
movsbw
shr
mov
cmc
test
pushl
popf
pushl
lea
jmp
cmc
movb
add
jmp
stc
neg
clc
mov
cmp
test
clc
sub
pushf
stc
clc
add
push
pushf
popl
pushf
jmp
mov
push
call
add
add
inc
pushf
stc
call
cmc
stc
cmp
sub
movl
cmc
sub
pushl
call
mov
movb
lea
jns
mov
setne
mov
mov
not
mov
call
bts
lea
aaa
mov
or
pusha
setne
pusha
mov
pushf
add
call
push
mov
pushf
pushf
pusha
lea
jmp
cmc
xor
pusha
bt
movb
add
jl
not
cmc
pusha
jmp
jmp
call
call
bt
sub
call
pusha
push
jmp
jmp
setne
btr
xadd
mov
setns
mov
cmc
pushf
add
jmp
mov
pusha
movw
push
lea
jmp
pushf
mov
movl
xor
jmp
pushl
pushf
pushl
popl
pushf
movw
movb
pushl
lea
jmp
pushf
jmp
push
pusha
cld
jmp
call
push
pushl
pusha
mov
pushf
jmp
push
sub
adc
and
btr
bsr
xor
rol
setl
bswap
ror
btc
sub
btc
ror
test
jmp
pushf
mov
pusha
pushf
movb
mov
mov
pusha
lea
jmp
push
call
shl
cmp
call
push
pushf
inc
cmp
xor
pushf
movw
ror
bt
pushl
stc
sub
bt
jmp
std
pushl
popf
movb
pushf
lea
jmp
dec
lahf
mov
btr
jmp
or
movzbl
mov
pusha
lea
cmc
clc
bt
pusha
cmp
pushl
lea
ja
dec
mov
bsf
shr
lea
aaa
sub
shl
sar
lea
shrd
btc
xor
movsbw
and
neg
pushf
sub
pop
pusha
pushf
bswap
mov
lea
mov
jmp
sub
call
push
push
pushf
popl
jmp
pusha
lea
ja
pushf
mov
movb
lea
jmp
jmp
pushf
mov
pushf
mov
pushl
push
pusha
pushf
lea
jmp
xadd
mov
cmc
cmc
or
btr
mov
xadd
ror
cmc
mov
xor
sbb
pushl
popf
lea
jmp
sub
jne
neg
test
jmp
movsbw
and
pusha
mov
clc
add
movl
pusha
pushf
lea
jmp
jmp
cmp
add
clc
call
xor
stc
stc
sub
bt
stc
cmp
test
cwtl
jmp
bt
mov
cmc
jmp
test
sub
stc
call
mov
pushf
movb
pushf
pushf
lea
jmp
not
pushf
bsf
push
inc
bsr
push
dec
not
push
xchg
push
pusha
pop
movl
dec
mov
setne
dec
movzbw
mov
pusha
mov
mov
dec
pushl
popl
bswap
pop
xchg
movl
pop
jmp
bt
sar
mov
bswap
call
sub
test
rdtsc
call
pushf
call
pushf
popl
movb
movb
pushf
pushl
popl
mov
pushf
mov
lea
jmp
push
mov
push
sets
lea
pop
mov
push
push
pushl
pushf
divl
mov
mov
pushl
pushf
push
call
pushf
mov
pushf
lea
jmp
jmp
movb
pushl
popl
movb
push
lea
jmp
mov
pushf
push
lea
jmp
jmp
pushf
push
movb
pusha
mov
mov
call
call
stc
not
push
mov
dec
adc
add
jmp
push
mov
push
pusha
lea
jmp
lea
je
pusha
pushf
pushf
popl
pusha
call
mov
push
pushf
movw
movw
pushl
ret
call
mov
mov
push
mov
mov
mov
jmp
movsbl
mov
call
pushf
mov
pusha
lea
jmp
pushf
popl
push
movb
pusha
pushl
popl
pushl
pushl
movb
lea
jmp
lea
mov
sar
mov
cmp
jmp
mov
call
lea
jae
mov
pusha
push
lea
jmp
pusha
movw
mov
pushl
pusha
mov
movb
push
movb
lea
jmp
push
mov
pushf
mov
lea
jmp
pusha
pushl
popl
movw
movb
lea
jmp
pushf
popl
push
jmp
rol
pusha
jmp
shld
btr
ror
pusha
mov
bt
stc
add
jmp
shrd
mov
ror
sar
dec
mov
add
push
not
seta
setg
mov
jmp
call
mov
pushf
lea
jmp
mov
jmp
bts
lahf
mov
rcr
add
adc
test
mov
clc
call
bsr
add
cmp
inc
clc
btr
add
bswap
sete
btc
sub
setge
inc
not
dec
mov
mov
movb
pusha
add
lea
ja
pusha
pushf
mov
mov
movb
pushf
pushf
pushf
lea
jmp
movw
pushl
mov
push
movb
movb
lea
jmp
stc
cmc
add
clc
cmp
sub
movl
mov
cmc
cmp
sub
jmp
push
push
jmp
pusha
clc
push
add
pushf
shrd
push
push
mov
movw
push
call
pushf
popl
mov
call
jmp
call
jmp
mov
pushf
mov
push
pusha
lea
jmp
bts
mov
sar
inc
cmc
not
mov
push
call
movb
pusha
rep
shl
bsf
btr
shr
mov
ror
add
jmp
pushf
jmp
seta
pusha
movzbl
clc
clc
sub
push
push
clc
pushf
sub
call
pushf
popl
lea
js
popl
pushf
pushf
pusha
mov
lea
jmp
mov
shr
push
or
cmc
pushl
test
call
mov
mov
movl
pushf
pushf
lea
jmp
call
pushf
popl
pusha
mov
jmp
push
pushl
popl
pusha
mov
lea
jmp
call
sub
pusha
pusha
mov
pushf
pushf
pushl
movw
lea
jmp
sub
push
mov
movb
pushf
push
pushf
lea
jmp
pushf
popl
pushf
pushl
popl
mov
lea
jmp
rol
sub
sub
mov
rcl
cmp
sar
adc
mov
call
pop
mov
jmp
clc
mov
add
jmp
call
stc
sub
jmp
bt
stc
call
pushf
call
movw
jmp
lea
add
rol
pushf
sub
movsbl
mov
btr
mov
test
dec
movsbw
add
not
bts
mov
pusha
sub
inc
xor
not
bswap
inc
stc
ror
btr
xor
sub
sar
neg
shl
xor
dec
bt
and
sub
movzbw
movzbl
clc
cmc
shld
mov
sub
jg
pushf
pusha
add
cmc
bt
add
pushf
jmp
stc
stc
shr
pusha
mov
jmp
pushl
popl
push
lea
jmp
mov
pusha
pushf
pushf
mov
lea
jmp
pusha
lea
jge
inc
pushf
jmp
jmp
push
mov
jmp
jmp
sub
pusha
pushf
add
movb
call
sub
cmc
push
jmp
push
pusha
push
push
mov
call
pushf
pushf
mov
mov
pushf
movw
lea
jmp
pusha
sub
pusha
call
pushl
popl
pushf
mov
pushf
lea
jmp
call
pushf
pusha
mov
pushl
movb
push
pushf
lea
jmp
call
pusha
mov
call
jmp
pusha
movl
mov
pusha
call
pushf
jmp
bts
push
rol
rcr
rol
mov
call
bts
movzbw
mov
mov
rcl
adc
mov
cmp
clc
test
add
pushf
pushf
push
mov
movb
push
push
lea
jmp
pushf
pusha
pushl
popl
pushf
pushf
push
movb
lea
jmp
call
inc
test
jmp
mov
jmp
pushf
movb
jmp
jmp
jmp
call
shr
cmc
bswap
bts
mov
test
mov
cmp
not
mov
call
pushf
pushl
jmp
call
jmp
pushf
pushf
popl
push
pushf
push
pushl
popl
pushl
push
pushf
pushl
lea
jmp
dec
mov
call
rcl
mov
pusha
cmp
stc
add
push
pusha
mov
inc
clc
push
rol
cmp
pushf
xor
pushf
mov
movb
cmp
not
mov
bt
add
movb
mov
test
cmc
sub
jmp
bswap
cbtw
pusha
mov
test
mov
push
clc
pushf
sub
mov
shr
call
btc
xadd
rcl
bsf
mov
ror
rcr
test
pushf
mov
call
bt
cmc
call
push
pusha
pushl
cbtw
cmp
bt
cmp
movb
cwtl
bt
stc
bt
jmp
call
mov
movb
push
push
push
lea
jmp
mov
push
pushf
pusha
lea
jmp
shl
sar
or
cmp
mov
rol
dec
add
mov
push
pushl
sub
jmp
lea
bswap
mov
call
cmc
add
push
mov
push
movb
lea
jmp
sub
call
clc
clc
rol
call
mov
movw
push
lea
jmp
pushf
popl
pushf
jmp
mov
movl
push
call
pushf
popl
movb
pushl
popl
pushf
movl
lea
jmp
clc
rcr
mov
call
jmp
mov
mov
pushl
pushf
lea
jmp
call
stc
sub
jmp
mov
jmp
test
neg
pushl
add
pusha
jmp
xchg
jmp
inc
movzbw
mov
stc
mov
cmp
push
sub
movw
call
cbtw
pushf
jmp
push
pushf
lea
lea
jmp
mov
mov
movw
movb
lea
jmp
dec
inc
btr
rcr
rol
push
rcl
and
not
bts
add
lea
mov
movb
clc
add
mov
lea
jnp
pushf
mov
movw
pusha
push
push
lea
jmp
call
pusha
mov
mov
mov
pushf
mov
jmp
push
pushl
popl
movw
pushf
lea
jmp
pusha
mov
cmc
pusha
add
mov
pushf
pushf
movl
inc
jmp
jmp
mov
pushf
call
aaa
mov
stc
clc
pusha
sub
jmp
aad
shr
neg
mov
clc
cmc
jmp
sub
test
jmp
aaa
dec
and
aam
notl
aaa
shld
mov
cmc
jmp
mov
mov
mov
lea
jmp
jmp
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
out
xlat
pop
push
adc
pop
jbe
pop
dec
xchg
pop
xor
xlat
pop
ret
pop
enter
mov
jp
pop
push
jl
pop
call
jb
pop
jb
xlat
pop
flds
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
jbe
xlat
pop
inc
jl
pop
push
adc
lret
adc
dec
jno
pop
adc
xlat
pop
adc
pop
scas
insb
xlat
pop
xchg
je
pop
mov
jae
pop
cmp
pop
dec
jno
pop
aad
xlat
pop
daa
jns
pop
mov
pop
jns
xlat
pop
xchg
mov
pop
ret
pop
adc
xlat
pop
cwtl
js
pop
xchg
jae
pop
xchg
jae
pop
call
mov
pop
mov
pop
hlt
je
pop
push
test
pop
in
jns
pop
adc
xlat
pop
push
test
pop
xchg
jae
pop
mov
xlat
pop
sahf
insl
xlat
pop
adc
pop
in
jns
pop
mov
jae
pop
add
xlat
pop
jns
xlat
pop
xchg
jae
pop
xchg
jns
pop
lret
adc
into
adc
mov
xlat
pop
sbb
pop
xchg
jae
pop
xchg
mov
pop
push
outsl
xlat
pop
xor
xlat
pop
sub
pop
xor
xlat
pop
into
adc
sub
pop
adc
pop
xchg
je
pop
mov
pop
out
xlat
pop
xor
xlat
pop
and
pop
scas
insb
xlat
pop
out
xlat
pop
xchg
jae
pop
xchg
jns
pop
sbb
aad
xlat
pop
xchg
jns
pop
inc
jp
pop
jb
xlat
pop
adc
pop
shll
pop
adc
pop
jb
xlat
pop
push
test
pop
ret
pop
push
adc
push
jns
pop
hlt
je
pop
mov
pop
ret
pop
aad
xlat
pop
mov
xlat
pop
sub
pop
into
adc
enter
push
test
pop
flds
xlat
pop
jp
pop
xor
xlat
pop
push
jns
pop
addl
xlat
pop
and
pop
sbb
enter
dec
xchg
pop
xchg
jns
pop
jp
pop
in
jns
pop
adc
pop
cmp
pop
cmp
pop
push
jl
pop
lret
adc
mov
jp
pop
adc
pop
jp
pop
jns
xlat
pop
adc
pop
mov
pop
aad
xlat
pop
xor
xlat
pop
hlt
je
pop
push
outsl
xlat
pop
shll
pop
in
jns
pop
sbb
jae
pop
push
outsl
xlat
pop
jb
xlat
pop
push
adc
mov
pop
cmp
pop
mov
pop
ja
xlat
pop
push
adc
sub
pop
sahf
insl
xlat
pop
jns
xlat
pop
jb
xlat
pop
addl
xlat
pop
sub
pop
aad
xlat
pop
into
adc
ja
xlat
pop
aad
xlat
pop
lret
adc
jp
pop
scas
insb
xlat
pop
push
adc
pop
cmp
pop
push
test
pop
pop
jbe
pop
adc
pop
xor
xlat
pop
and
pop
push
jl
pop
add
xlat
pop
sub
pop
daa
jns
pop
cmp
pop
inc
js
pop
mov
xlat
pop
inc
jl
pop
ja
xlat
pop
xor
xlat
pop
push
test
pop
sbb
pop
scas
insb
xlat
pop
xchg
je
pop
cwtl
js
pop
call
jb
pop
flds
xlat
pop
ret
pop
scas
insb
xlat
pop
xor
xlat
pop
into
adc
add
xlat
pop
enter
into
adc
call
je
pop
jb
xlat
pop
and
pop
sub
pop
xchg
mov
pop
xchg
jns
pop
push
jns
pop
sbb
pop
push
outsl
xlat
pop
sbb
jbe
pop
sahf
insl
xlat
pop
aad
xlat
pop
push
xchg
pop
shll
pop
aad
xlat
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
js,pn
pop
call
not
clc
pushl
cmc
push
not
stc
pushf
test
sub
cmp
call
jmp
das
movzbw
movzww
call
movzbl
lea
aad
dec
mov
push
push
cmp
pusha
add
jmp
bswap
das
mov
cmp
push
bt
sub
pushf
call
mov
pop
pop
mov
mov
mov
pushf
mov
lea
jmp
movb
mov
pusha
mov
lea
jmp
mov
push
mov
push
mov
pushl
call
pushl
jmp
sub
movb
pushl
pushl
lea
jmp
movsbw
push
mov
push
pusha
mov
mov
mov
pushf
pushf
pushf
lea
jmp
call
jmp
decl
pusha
pushf
mov
lea
jne
pushf
movb
call
pushf
clc
test
pushl
popl
push
movb
test
add
cld
clc
pushl
popf
mov
pushf
pushl
pushf
lea
jmp
bt
movb
sub
pushf
mov
mov
movb
lea
jmp
pushl
pushl
popl
pushf
pushl
movw
push
lea
jmp
mov
mov
pushf
lea
jmp
call
test
pusha
not
clc
add
bt
call
cbtw
push
bt
test
stc
cwtl
stc
call
cmc
add
bt
sub
pushf
clc
push
mov
mov
stc
stc
call
mov
pushf
pushf
push
pushl
lea
jmp
mov
ror
mov
rcr
mov
jmp
mov
or
mov
rcr
pusha
dec
mov
jmp
test
jl
push
clc
pushl
popl
push
add
sub
jno
push
bt
stc
pushl
popf
pushl
lea
jmp
test
shl
push
call
pushf
mov
pushf
lea
jmp
call
pusha
call
push
inc
call
and
rcl
jmp
pushl
popl
pushf
pushf
movw
lea
jmp
xor
jmp
jmp
pushf
dec
setns
mov
not
dec
pusha
inc
rcr
stc
sub
call
test
pusha
add
test
call
shrd
bt
mov
jmp
shrd
rol
movzbw
shrd
movzww
jmp
shr
mov
sbb
setae
or
sub
bsf
sub
pusha
rcl
rol
mov
bswap
call
jmp
jmp
and
mov
stc
movl
add
pusha
push
mov
pushf
mov
pushf
mov
lea
jmp
jmp
push
pushl
popl
push
mov
lea
jmp
cmc
stc
bt
stc
add
test
pusha
add
movw
push
push
mov
pusha
pushf
pushl
ret
jmp
add
movw
cmc
rol
clc
add
clc
lea
jge
xor
test
test
js
not
cmc
test
clc
add
jp
pushf
bt
cbtw
stc
pusha
stc
cwtl
cmc
sub
jmp
sub
pushf
clc
pushf
shl
pushf
pushf
lea
jg
mov
call
push
pusha
movb
mov
pusha
push
mov
pushf
call
mov
movb
pushf
pushf
jmp
lea
call
shr
mov
bswap
test
shl
push
mov
xchg
btr
mov
mov
movzbw
xadd
or
btc
mov
shl
and
shr
xchg
mov
jmp
mov
jmp
bt
mov
test
sub
movw
pushf
lea
jmp
push
cwtl
clc
cmp
push
sub
mov
mov
jmp
call
mov
call
push
push
mov
jmp
push
mov
push
pushl
push
lea
jmp
pusha
push
pushl
popl
mov
push
lea
jmp
mov
movzbw
movzbl
mov
lea
pushf
pushf
pushf
xchg
movzbw
not
movzbw
mov
cld
lea
jae
cld
push
call
das
movsbw
mov
bt
stc
add
jmp
mov
mov
pusha
lea
jmp
test
add
pusha
movb
shld
jmp
pusha
lea
cpuid
cmp
jmp
call
mov
test
cmp
jmp
mov
jmp
mov
bsr
pop
not
inc
pushf
movsbl
mov
inc
xadd
or
pushf
clc
not
rol
jmp
mov
movb
mov
mov
movb
lea
jmp
push
pushf
mov
jmp
movb
lea
jl
mov
pushf
movb
pushl
lea
jmp
mov
adc
push
bsf
add
shr
shr
xor
xor
lea
test
inc
bswap
mov
jmp
and
push
pushf
mov
call
rol
aad
aad
pushf
mov
xadd
mov
add
movsbw
dec
mov
pushf
sub
pusha
pushf
div
jmp
pushf
popl
jmp
pusha
bsf
pushf
inc
bt
not
btc
rol
add
not
and
sub
movzbw
add
bswap
mov
cmp
add
jp
stc
test
sub
pushf
lea
jo
pusha
mov
mov
mov
lea
jmp
mov
pusha
mov
pushf
pushf
pushf
lea
jmp
mov
pushf
pushf
pushf
lea
jmp
cmc
and
call
mov
pusha
pushf
call
bt
add
call
stc
add
cmp
push
pusha
jmp
pusha
not
mov
mov
movb
and
call
push
pushl
mov
pushf
pusha
pushl
mov
push
mov
mov
lea
jmp
pushl
call
pusha
mov
movw
pushf
call
pushf
add
call
mov
push
pushf
mov
pusha
pushf
lea
jmp
mov
pushl
popl
pushf
push
mov
mov
lea
jmp
bsf
shr
movzbw
dec
mov
aam
rcl
mov
stc
call
pushf
cmc
pusha
sub
clc
pushf
clc
clc
sub
clc
rol
call
push
mov
pushf
lea
jmp
cmc
cmp
push
sub
call
jmp
pushf
popl
call
pusha
bt
not
bt
cmp
pushl
clc
add
bt
cmp
test
cmc
cbtw
mov
pushf
cwtl
bt
sub
jmp
pushf
mov
pushf
mov
call
shr
jmp
push
bswap
mov
push
push
movb
lea
jmp
pusha
mov
lea
jo
push
mov
mov
mov
mov
mov
pushf
lea
jmp
jmp
jmp
cmp
call
