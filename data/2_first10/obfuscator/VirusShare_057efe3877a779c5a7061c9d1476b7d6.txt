inc
decl
in
dec
rcrb
add
dec
push
push
ret
add
xchg
shlb
dec
rol
jno
mov
sarl
mov
divl
std
push
sub
xchg
or
add
dec
lret
push
pushf
mov
test
test
pop
nop
cmp
sub
xchg
and
and
sbb
mov
movsl
gs
repz
shll
push
mov
jno
cmpsl
mov
xor
dec
test
adc
mov
or
and
inc
lret
fisubrs
pop
clc
pop
pop
in
push
jge
lret
adc
inc
adc
mov
xchg
pop
mov
dec
jno
sbb
pop
bound
push
mov
lret
jbe
js
stos
or
hlt
and
rorb
adc
sbb
jno
sub
mov
call
xchg
cltd
int
movsl
pop
lea
stos
stos
fs
stos
and
ds
sahf
mov
dec
inc
mov
push
cmpsb
lds
dec
outsb
mov
sti
sbb
push
stc
xor
and
cmp
rcrb
push
call
mov
mov
and
push
in
ljmp
and
jb
mov
fbld
inc
out
xchg
leave
push
and
sti
push
pop
jb
movsb
inc
inc
ret
repnz
mov
mov
push
fstps
xchg
lock
xchg
dec
cmpsl
aaa
lret
inc
repnz
sbb
cmc
nop
sbb
or
nop
out
imul
int3
mov
cmp
pop
outsb
cmp
in
inc
dec
dec
cld
dec
mov
jp
mov
sbb
mov
mov
mov
mov
gs
into
mov
xor
sbb
dec
cmp
rcr
dec
sbb
adc
bound
mov
mov
scas
sub
xor
rcrb
decb
mov
nop
icebp
jmp
fisubl
fndisi(8087
sub
xchg
or
add
fsts
xor
mov
ret
xchg
fdivr
pop
lods
add
pushf
xchg
popa
mov
lret
inc
pushf
gs
popa
mov
lea
ljmp
test
xchg
or
or
pcmpeqw
sub
inc
popa
je
and
repz
imul
clc
jns
aad
call
xor
jmp
lds
cld
add
push
pop
fs
lock
cmp
mov
in
cmpsb
scas
mov
cmp
rcrl
in
add
push
or
fdiv
pop
jl
mov
xchg
nop
popf
sbb
rorb
popa
and
stos
push
stc
pop
test
xor
mov
xchg
mov
in
mov
adc
jae
mov
mov
outsb
stos
mov
xor
test
aaa
in
sbb
push
and
add
inc
pop
lods
mov
push
hlt
add
push
and
popa
int3
sti
adc
and
sbb
insl
pop
imul
jecxz
outsb
mov
dec
mov
imul
push
cmc
push
pop
dec
cmp
pop
leave
xchg
and
add
arpl
fistl
xchg
loop
and
pop
push
arpl
addr16
leave
mov
dec
mov
sub
loopne
mov
add
sub
and
repz
cmp
aam
mov
add
testb
jne
mov
popf
pushf
dec
addl
adc
mov
jl
pusha
aaa
dec
loope
rorb
scas
mov
mov
mov
test
ljmp
in
pop
xor
sub
pop
mov
icebp
mov
sahf
adc
or
sub
xor
popa
xrelease
mov
scas
jmp
and
add
arpl
lahf
jg
mov
xorb
inc
ds
pop
inc
lcall
out
pushl
add
lds
in
daa
ljmp
mov
movsb
jge
in
mov
fldenv
ffreep
sahf
pop
data16
test
pusha
shl
es
in
dec
das
cmpsb
sub
mov
insb
enter
lcall
jecxz
shlb
sbb
je
nop
add
inc
push
sti
enter
das
push
dec
mov
inc
sbb
out
cs
fwait
sahf
xchg
daa
cmp
movsb
scas
jne
sub
push
rclb
or
and
xlat
xchg
add
fnstenv
xchg
inc
scas
lods
push
lahf
mov
jp
inc
fisttps
cmp
mov
sub
mov
xorb
fistps
cmpsl
mov
push
and
fsubl
xor
shl
mov
std
lock
sbb
xchg
lcall
aam
shll
xor
xor
mov
fmull
inc
pop
push
mov
mov
mov
mov
out
repnz
push
inc
repnz
cmpsl
push
test
mov
jmp
inc
mov
rol
or
pop
imul
enter
xor
xchg
es
cmpsb
out
loopne
inc
xchg
and
xchg
or
call
ret
and
xlat
add
cmp
or
mov
mov
or
inc
imul
aas
movsl
mov
pop
sub
xor
icebp
adc
out
and
imulb
enter
mov
mov
loope
add
or
cltd
jecxz
cmc
push
dec
out
push
xlat
pushf
pushf
inc
clc
xchg
mov
or
mov
jnp
pop
xlat
lahf
xchg
mov
mov
lods
inc
in
push
mov
push
out
lods
jecxz
shr
js
out
mov
lcall
ret
inc
add
bnd
mov
dec
dec
adc
cmp
loope
push
xchg
das
cmp
inc
movsb
push
push
sub
pop
loope
jbe
inc
loopne
push
cli
call
and
scas
ficoms
adc
lcall
test
mov
or
rol
cmp
push
mov
sub
leave
pusha
inc
test
push
jno
jbe
icebp
iret
and
rolb
cmp
scas
jbe
mov
popa
sarb
fwait
adc
lcall
hlt
es
and
xchg
push
jbe
cmpsb
loopne
dec
insl
inc
ljmp
loop
ret
fildl
bound
rcll
in
fisubrl
inc
jl
dec
jp
adc
jo
inc
sub
cmpsl
push
jno
icebp
pop
and
or
cs
pop
mov
pop
dec
pop
push
xor
cmp
inc
scas
mov
test
in
mov
lcall
sbb
jno
xchg
sub
shl
lods
daa
xchg
push
testl
pop
pusha
mov
xchg
lcall
hlt
pop
arpl
adc
decb
xor
push
movsl
sbb
xor
dec
cltd
mov
ret
popf
and
adc
ja
adc
mov
xor
insb
js
bound
push
movsl
add
imul
jle
push
fiadds
mov
aas
or
pop
push
cmp
mov
or
sub
sub
ljmp
shl
and
xchg
cmp
pop
jnp
je
push
jne
adc
scas
ror
das
sahf
adc
or
test
mov
push
jmp
cs
icebp
out
or
push
sbb
outsb
or
sub
push
mov
popf
int
pop
out
call
or
js
mov
int
movsl
cmpl
pop
adc
inc
push
call
repnz
ljmp
xchg
add
cmp
in
pop
add
rcrl
out
fldenv
jg
lods
xchg
outsl
loop
push
jle
loop
in
xor
in
pusha
fwait
mov
in
mov
push
inc
fldcw
icebp
mov
pop
sti
test
push
xchg
out
lods
jnp
push
jae
lods
or
jb
or
sub
sub
lea
mov
sbb
scas
pop
rcrl
mov
jnp
fucomp
mov
int3
insb
add
lds
movsl
sub
cmp
lcall
aad
sbb
mov
ficoml
sarb
jnp
push
jnp
fdivs
mov
fwait
insb
mov
stos
push
mov
sub
fistl
icebp
xor
nop
dec
hlt
cltd
movsl
std
and
mov
sbb
mov
daa
rorl
push
and
int3
cmp
in
into
sbb
cld
adc
push
popf
xor
in
jecxz
mov
mov
mov
rcrl
mov
sbb
xor
imul
mov
jecxz
xor
xlat
scas
push
cld
test
and
xor
stos
mov
push
cmpsb
scas
int3
int
push
push
xchg
ret
js
aad
lret
push
pop
into
lret
ja
addr16
pop
mov
cli
ljmp
icebp
ret
lret
test
addr16
lea
inc
cmp
sbb
imul
and
lret
fldt
in
scas
xor
mov
mov
outsl
popa
ljmp
leave
repz
cmp
in
out
push
xor
daa
jnp
lock
jo
xchg
inc
mov
add
les
and
xchg
xchg
roll
sbb
cmp
sub
inc
out
push
cmp
sbb
cltd
push
push
shl
test
inc
pop
dec
pushf
repnz
jg
fiadds
jno
je
test
shrb
loope
jae
fisubl
shll
and
and
aad
ret
mov
and
out
mov
push
rorb
xor
fistpl
dec
int
push
ss
jle
or
stos
xor
and
lret
aad
pusha
ret
cmpsl
cmp
test
leave
pop
out
jg
ficomps
pop
lock
mov
add
push
push
outsb
push
dec
lea
fnstcw
out
pop
mov
inc
sub
lret
mov
adc
aaa
int3
jbe
jb
test
rcrb
test
pop
cli
pushf
shlb
pop
orb
outsl
add
push
imul
adc
imul
adc
cmp
push
movsl
scas
add
add
xchg
sti
stos
aaa
imull
subb
out
aas
insb
pop
pop
lds
shl
mov
mov
xorb
jmp
sbbl
cmp
xchg
jb
lahf
xorl
ljmp
pop
mov
jmp
test
pop
fmul
or
int
fs
lea
jne
repnz
stos
or
fs
sbb
into
dec
enter
adc
add
xor
out
xchg
cmp
repnz
pop
addr16
das
push
add
loop
jle
fwait
leave
popf
inc
shl
fisubrl
inc
dec
cmp
in
xchg
insl
lcall
xlat
negl
cmp
jl
mov
std
sub
jg
ret
pop
push
sbb
popa
mov
pusha
jle
lds
je
js
or
bnd
xor
jg
call
mov
xchg
mov
push
dec
loopne
and
sub
aaa
cmc
and
jmp
xchg
mov
pop
fsubp
test
aam
ret
sub
inc
pop
pop
cwtl
stos
scas
rcll
mov
jnp
call
leave
dec
cmp
jno
jge
and
js
lret
pop
lods
repnz
shr
and
in
out
mov
std
dec
movsl
fisubs
in
xchg
pop
add
cmp
push
pop
aam
mov
cmp
mov
outsb
jb
out
lods
jnp
mov
cmp
shll
jg
inc
xor
scas
int3
fwait
jmp
sub
mov
jmp
add
dec
movsl
dec
fmull
lret
cs
adc
cmp
push
movsb
mov
sub
push
cmc
loope
jo
jb
add
ret
sub
out
sub
loop
cmp
jg
jmp
movl
mov
daa
aad
xor
sbb
iret
test
adc
ret
cmpl
push
in
in
movsl
push
push
ds
faddl
test
or
daa
addr16
cmp
sub
popf
push
iret
xchg
stos
or
cmc
push
mov
pop
push
mov
dec
inc
adc
sub
out
lds
nop
insl
xchg
lods
scas
fisttps
cmc
cltd
or
xor
push
sbb
dec
out
imul
popa
xchg
test
scas
add
xchg
or
hlt
fimuls
scas
pop
sarl
rcl
aaa
jns
incl
adc
cmp
sti
or
inc
rcrl
fwait
push
aaa
mov
push
xchg
xor
inc
fdivrs
orb
pop
fcom
iret
in
nop
dec
pop
subb
mov
in
xchg
repnz
sub
inc
ret
jecxz
jo
inc
outsb
or
sbb
pushf
jp
fwait
add
pop
sahf
and
icebp
outsb
outsb
movsl
add
lea
lea
push
jge
or
push
shrb
les
fwait
roll
adc
and
clc
sti
adc
push
mov
int3
pop
inc
and
sbb
mov
repz
popf
lock
and
nop
fwait
mov
pop
dec
or
cmp
pop
mov
sahf
xchg
or
xchg
or
lock
push
lods
rolb
jnp
call
mov
sub
and
sbb
lock
xchg
stos
mov
jecxz
int3
pop
jle
stos
jo
fadd
mov
outsl
pop
popf
xchg
push
scas
add
cmp
daa
fldenv
and
shll
mov
sti
loope
pushf
ss
stos
rclb
out
dec
popa
js
inc
adc
cmp
jg
mov
fidivrl
int3
les
push
sbb
pop
mov
add
xor
jge
mov
jo
jnp
imul
xor
push
cwtl
jmp
mov
jl
shlb
mov
push
outsb
mov
mov
and
or
fdivrp
push
mov
out
push
cld
inc
jae
movsb
xchg
insb
call
fs
test
lea
jno
les
lret
xor
int3
inc
pop
notb
or
jns
fdivs
pop
movsl
xor
pop
in
push
roll
push
jne
jae
lahf
clc
pop
ljmp
shll
jbe
pop
xor
push
sub
fistpll
sub
data16
pop
and
xlat
js
jno
out
in
sbb
pop
push
pusha
fimuls
mov
andb
cmp
inc
sarl
out
and
inc
pop
into
inc
push
sub
cmc
int
sahf
stos
fdivs
inc
call
mov
pop
push
mov
inc
push
stos
mov
jmp
movsl
test
sub
add
stos
adc
jns
mov
outsb
mov
imul
popf
ja
shlb
add
push
sbb
cmp
mov
pop
js
push
ret
mov
int
shrl
cs
jne
lret
mov
push
out
inc
loope
repnz
pusha
and
daa
pop
mov
mov
pushf
addl
xchg
jnp
dec
cmp
and
std
xor
jp
cmovo
inc
sbb
out
xor
mov
iret
push
xor
into
out
mov
xchg
sub
idivl
cld
fcomi
mov
lret
loope
adc
leave
in
xchg
movsb
pop
mov
xchg
push
push
mov
xor
xchg
dec
pop
fwait
popa
xchg
clc
lock
jle
jmp
and
dec
push
jb
sahf
add
mov
stc
mov
movsl
mov
mov
xorb
pop
jmp
in
shrb
sub
jae
test
imul
jno
lahf
gs
jecxz
mov
xchg
stc
lea
push
inc
call
mov
cmovp
lock
sbb
mov
test
push
xor
in
sbb
and
mov
pusha
and
repnz
xlat
aad
pop
mov
xchg
repz
push
mov
jl
lods
xor
scas
das
sbb
mov
jecxz
fisubrs
cmp
xor
scas
and
inc
pop
clc
pop
and
xchg
or
fdivrl
add
push
inc
or
rcrb
arpl
jmp
mov
and
dec
into
sub
adc
roll
sub
lods
adc
jae
mov
jl
rcrl
jle
fnstcw
dec
in
mov
and
jp
jnp
call
push
scas
aam
les
mov
ret
popf
sbb
rorb
lcall
loopne
jl
aaa
pop
nop
adc
cmp
and
dec
movsl
push
mov
dec
xor
lea
cwtl
std
sub
repnz
into
jg
test
jg
loopne
inc
lock
ds
xor
pop
xor
js
dec
ret
popf
loopne
mov
jno
cmp
cltd
js
aas
mov
aaa
mov
in
rolb
mov
mov
push
mov
xchg
ds
inc
xor
sub
popf
ss
test
rcrl
pop
pop
ficoms
cwtl
fwait
cltd
push
lret
pop
adc
xor
dec
js
dec
xor
cmp
cmp
fldl
rolb
mov
fstpt
aad
sarl
mov
pop
int3
jns
push
and
clc
dec
sbb
inc
inc
pop
lock
mov
bound
xchg
jno
and
call
adc
xchg
data16
movsb
jb
mov
cwtl
in
jo
iret
scas
ds
test
fisubs
dec
cmp
test
sbb
lods
test
lock
sbb
push
hlt
fs
xor
ret
in
lret
movsl
dec
dec
xchg
xor
popf
dec
xchg
rcr
jno
mov
jb
mov
and
shr
mov
or
adc
rcrb
sbb
mov
repnz
in
sti
icebp
xor
or
pop
cmp
push
and
mov
sti
aam
push
sbb
jae
movsb
add
ds
add
and
in
xlat
popa
lcall
cmpl
push
pop
xlat
aam
dec
inc
loopne
out
shrl
jmp
cli
in
mov
mov
icebp
repnz
add
fcmovnu
xor
loop
addr16
jmp
es
dec
dec
jg
fcomip
jg
inc
and
lods
lcall
in
sub
sub
pop
mov
adc
push
xchg
das
lea
fnstcw
mov
cmp
mov
popa
add
mov
sbb
divl
cmpsl
jb
cwtl
hlt
inc
adcl
sbb
imul
movsl
sbb
pushf
cmc
fisubs
or
cmp
dec
mov
xor
sbb
push
aad
adcb
pop
pop
xor
jp
loop
insb
xchg
adc
cmp
stc
cs
shl
xor
inc
inc
mov
sub
jg
lods
sub
mov
sbb
sub
adc
arpl
pop
or
shr
and
inc
aam
roll
pop
mov
mov
hlt
lret
cmpsb
in
xchg
mov
pop
adc
shlb
imul
inc
jne
addr16
or
or
jnp
mov
or
jl
mov
pop
in
mov
or
jne
aas
call
jbe
pop
in
cwtl
pop
aad
or
in
or
mov
pushf
dec
add
test
dec
repnz
push
cmp
popa
andnps
pop
dec
add
mov
lret
mov
test
adc
std
popf
scas
call
push
movsl
sub
aam
xor
insb
addl
repz
or
xchg
xor
outsl
insb
add
test
insb
mov
insl
add
xor
fisttpl
mov
aas
mov
pusha
add
mov
mov
in
xchg
je
bound
dec
sbb
jmp
and
inc
cmpsb
scas
lods
mov
jp
ret
mov
imul
imul
inc
ficomps
dec
push
push
sti
inc
cs
inc
pop
test
gs
inc
mov
xchg
jo
mov
ljmp
decb
rorl
xchg
test
inc
das
cmp
mov
sbb
jl
mov
cmpsl
and
jne
mov
lahf
add
js
dec
leave
and
repnz
cltd
ret
xchg
aaa
push
aas
pushf
lcall
dec
clc
movsb
fstpt
xchg
jne
sbb
mov
xor
pop
clc
inc
xor
pop
aad
lcall
fmulp
mov
dec
jg
jno
cmc
and
icebp
sti
pop
and
fcomip
repnz
jo
call
stc
mov
or
mov
push
or
xor
icebp
sbb
movsb
push
ds
cmp
add
sub
stos
push
sub
or
mov
push
data16
mov
cld
aaa
sahf
mov
fldpi
inc
out
out
lds
ljmp
orb
clc
outsb
jo
mov
mov
movsb
pop
inc
in
pop
mov
add
pushf
add
mov
xchg
pop
push
in
dec
sub
js
jmp
mov
sub
dec
stos
sub
ja
mov
cmp
mov
fucomi
dec
test
dec
mov
fwait
pop
push
shll
dec
cmp
and
add
jne
mov
cli
movsb
pop
lds
sbbb
jae
movsb
add
loop
je
fmull
pushf
ret
ficoms
add
mov
jb
sub
mov
xchg
bound
mov
push
xchg
dec
xor
ss
jno
sbb
fidivrs
dec
stos
or
in
cmp
mov
fcmove
out
cltd
or
push
xor
xor
subl
cli
adc
in
mov
std
jns
pop
xchg
jno
popf
in
xchg
or
push
mov
cltd
push
adc
sbb
cmpsl
xchg
mov
in
pop
leave
aam
or
cltd
fstl
loopne
cmp
pusha
xor
gs
and
les
mov
movsb
dec
cwtl
rorl
ffree
int
mov
sub
mov
mov
fcompl
xchg
lret
addl
ss
mov
xlat
mov
pop
shlb
stc
movsb
mov
leave
pushf
mov
mov
mov
pop
sbb
mov
dec
sub
mov
cmp
pop
mov
adc
jmp
scas
lret
lahf
jb
mov
movsb
shll
pop
or
pop
sbb
pop
sub
push
leave
xchg
add
sbb
add
lcall
mov
and
dec
inc
jo
pop
jmp
mov
js
mov
mov
lock
in
call
movsb
mov
sbb
mov
and
lahf
repz
mov
cmpsb
mov
xlat
rorb
sbb
rorl
xchg
jb
mulb
push
and
cmp
mov
lcall
mov
jle
ror
mov
sub
add
jae
dec
fistpll
imul
movsl
pop
push
sub
jmp
fldt
pop
sub
hlt
add
cwtl
and
movb
rcrl
in
or
xchg
clc
adc
xor
xor
test
js
push
pop
mov
ret
insl
in
jg
sbbl
ljmp
outsl
push
shll
adc
xor
leave
and
movsl
popf
cmp
adc
cmpsb
aas
pop
adc
mov
decb
push
push
xchg
inc
adc
movsb
xchg
ljmp
ja
das
push
imul
addb
rclb
outsb
fwait
sahf
lock
inc
insb
in
repz
mov
mov
movb
jnp
cmpl
repnz
sti
aas
cld
push
jl
inc
add
fisubl
mov
cmp
sbb
je
cmp
cpuid
ja
or
sbb
or
pop
jnp
add
test
ret
fnsave
or
mov
sub
addl
jbe
mov
xchg
adcb
dec
dec
dec
xchg
sub
fstpt
int
push
setae
inc
data16
mov
lea
and
mov
fisttps
insl
in
movsb
adc
pop
and
scas
xor
movsb
pop
loopne
inc
lret
jg
sbb
negb
insl
pop
decb
pop
or
imul
inc
adc
pop
or
mov
xor
xchg
sahf
nop
scas
dec
arpl
jg
and
jg
pop
sub
fmull
testb
mov
js
or
clc
jae
sbb
mov
lret
loope
cld
mov
xchg
imul
push
mov
mov
icebp
push
jae
mov
add
data16
push
test
add
jp
adc
pop
mov
push
popa
sub
aam
loop
sbb
jne
lds
sub
iret
lahf
mov
mov
lods
daa
and
mov
mov
in
mov
repnz
orb
bound
repnz
and
lret
cs
and
or
push
sub
das
adc
mov
cltd
sub
data16
loopne
fistpll
cmp
mov
pop
mov
push
mov
aaa
daa
pop
mov
mov
mov
loope
push
enter
xor
dec
mov
aam
cmc
incb
sbb
pop
imul
sbbb
popf
cltd
jb
lods
testl
mov
mov
daa
inc
test
jnp
add
mov
pusha
mov
movsb
push
add
sub
mov
xlat
mov
enter
xor
push
xchg
jmp
cmc
insl
stos
in
inc
cmpxchg
lcall
das
add
or
imul
add
xchg
pop
inc
sar
xor
or
ja
xor
adc
lock
dec
dec
ja
add
mov
jg
adc
lds
into
ja
push
sti
push
xor
lahf
xor
fsubl
repnz
fadd
aad
out
movsb
push
and
push
shlb
push
mov
jnp
cmpsl
pop
adc
adc
mov
gs
ret
movsb
in
and
jno
scas
adc
pop
add
inc
fimull
mov
pop
add
rcl
insb
clc
jp
xchg
mov
or
rcl
in
repz
mov
mov
addr16
cmp
and
dec
sub
aaa
push
fwait
dec
sarl
shr
cmp
mov
lahf
sti
jle
lods
and
mov
ss
pop
inc
or
or
jmp
or
loop
mov
cmpsb
pusha
push
adc
cmpsb
dec
push
xchg
xchg
insl
dec
and
jecxz
lods
sub
mov
and
pop
inc
and
adc
add
mov
cmc
enter
mov
xor
sbb
aas
mov
lods
mov
fiadds
adc
ja
xchg
mov
movsb
cmc
dec
adc
jmp
and
enter
popa
iret
xchg
lods
je
push
aaa
data16
dec
bound
inc
pop
xor
in
cmpsl
loope
and
std
shlb
iret
ljmp
add
pop
in
sbb
fdivs
push
repz
popa
cmp
daa
or
jecxz
jns
popf
leave
push
fwait
mov
mov
insl
mov
popf
xchg
leave
inc
mov
repnz
and
mov
insl
rorb
adc
sbb
jne
out
xchg
es
push
ror
xchg
inc
push
and
dec
rcr
aas
cmp
negl
mov
mov
sbb
bound
js
cmp
push
inc
das
insb
mov
jb
out
jb
xchg
bound
arpl
icebp
clc
sbb
inc
and
add
add
rcrl
out
inc
mov
jmp
fs
mov
fdivrl
xor
les
es
adc
push
jmp
iret
test
das
push
in
and
sbb
out
imul
push
ja
jb
shrb
sub
je
pop
fwait
and
out
aam
loop
imul
adc
jp
outsl
cmp
fisttpll
mov
jle
xchg
cli
cltd
cltd
dec
cs
js
xor
cmp
in
inc
cld
xor
and
dec
cmp
mov
iret
jg
pop
jne
nop
repnz
in
adc
dec
cmpb
in
rep
dec
and
mov
data16
push
test
and
pop
cmp
and
pop
push
sbb
push
cmc
lahf
sahf
in
push
push
xor
sbb
jae
outsl
and
in
add
mov
test
xor
mov
in
xor
and
add
inc
mov
mov
pusha
out
ja
dec
mov
bound
les
cmp
leave
adc
ficompl
std
insb
mov
out
jo
xchg
cmp
sahf
sbb
sub
out
cmp
mov
cli
rol
push
or
or
push
mov
mov
rclb
pushf
push
fiaddl
or
pop
xchg
xchg
push
je
sub
sar
xor
cmp
int3
jnp
mov
inc
ss
outsb
mov
out
leave
adc
push
out
add
pop
and
sbb
mov
or
insb
add
cs
das
jns
and
clc
push
out
pop
in
sub
xchg
xchg
js
and
xor
sbb
out
push
pop
popf
pop
cmpsb
fisubl
add
push
fwait
or
xchg
mov
push
add
lds
aam
dec
dec
sbb
add
add
mov
popa
inc
inc
push
in
xchg
mov
xor
int3
xchg
ffree
xchg
repnz
int3
imul
loopne
jmp
shll
fadd
scas
repnz
xchg
pop
out
out
test
popa
imul
mov
or
jmp
shll
lods
leave
add
adc
dec
lock
popf
inc
dec
data16
pop
test
shrb
jbe
iret
lea
je
outsb
add
or
out
jnp
push
jmp
ffree
dec
xchg
mov
jno
adc
aam
aas
aaa
mov
fiaddl
fsubl
lahf
ficompl
xor
adc
mov
mov
outsl
shlb
add
mov
fsubrs
std
hlt
xor
pop
lea
adc
je
pop
stos
shr
mov
xor
and
fstps
xchg
ret
mov
loope
popa
cmpsb
daa
mov
xor
mov
sbb
pop
daa
sub
lret
aad
out
scas
int
xchg
stos
repz
lock
add
inc
mov
cmpsb
add
xchg
out
and
cwtl
add
mov
or
or
repnz
inc
push
inc
mov
jno
repnz
lret
push
xchg
popa
stc
sub
push
mov
outsb
pop
push
in
hlt
and
mov
and
mov
ficoms
insb
push
and
cwtl
insb
sar
adcl
mov
insl
mov
ficoml
pushf
dec
test
jp
or
push
lock
inc
addr16
add
jne
jbe
or
adc
lcall
mov
dec
jmp
je
mov
imul
add
pop
cmp
in
pop
stos
shrl
cmp
icebp
push
xchg
roll
sti
and
add
xchg
test
loope
dec
mov
mov
in
call
adcb
pop
jmp
dec
aad
mov
pushf
push
outsb
mov
lock
pop
mov
arpl
push
dec
pop
movsb
xlat
dec
das
push
rcrb
dec
add
fwait
pop
gs
nop
out
in
mov
xor
add
sub
xchg
sub
out
pop
aad
out
jge
int
xchg
aas
mulb
dec
push
shlb
push
in
jno
jnp
pushf
inc
jge
pop
shrl
mov
pop
dec
adc
sbb
adc
lds
les
ret
mov
je
pushf
faddl
xor
lds
loope
lcall
lea
push
xchg
adc
int
sub
pop
imul
sub
arpl
mov
loopne
pop
ret
test
andl
dec
rcrb
pop
jg
sar
adc
es
inc
adc
sub
jb
shl
nop
mov
xchg
scas
mov
sub
sbb
in
jno
bound
loop
fisttpll
lretw
clc
mov
outsl
inc
adc
sub
mov
push
xor
mov
pusha
loopne
jl
jae
xchg
sbb
inc
les
push
ljmp
sub
sbb
sub
sti
stos
mov
lahf
lret
sbb
popa
add
jl
pop
pop
icebp
push
lcall
add
cmpsb
inc
and
out
jle
sbb
add
cmpsb
pop
cmp
mov
mov
inc
and
sub
dec
dec
xorl
frstor
pusha
dec
sub
jg
lods
pop
in
jnp
out
out
addr16
or
cmp
xchg
cmp
ret
push
stos
inc
sti
cmc
cltd
jge
xor
inc
mov
pop
lret
sub
sub
test
sub
shrb
mov
in
sub
mov
sbb
call
fs
or
jge
fildll
popf
dec
icebp
dec
mov
out
nop
lock
jmp
test
ss
add
testb
jle
in
adc
sbb
adc
jns
pop
mov
data16
ja
movsl
jbe
fwait
and
jl
mov
cmpsl
clc
test
jle
fsubr
inc
jle
push
or
ret
mov
in
sbbl
inc
lods
shrb
inc
in
pop
test
add
push
dec
jecxz
jge
shlb
std
pop
xor
stos
push
jge
cmp
xchg
sbb
xchg
jnp
into
loope
fidivs
mov
popf
xor
pop
mov
std
inc
js
pop
xchg
nop
pusha
out
aam
xchg
pushf
mov
sub
xchg
xor
mov
inc
push
mov
outsl
movl
aam
inc
pushf
rorb
mov
mov
and
fists
push
add
xor
cli
leave
popa
jns
add
jns
mov
sbb
mov
lea
pop
in
sub
sub
sub
mov
jl
ja
sub
xor
mov
pop
es
das
cmp
sub
outsb
stos
cmp
pop
out
pop
cmp
jne
stos
xor
out
jmp
mov
pop
jnp
xor
mov
call
pop
enter
xchg
fbld
jbe
stos
pop
push
outsl
sti
dec
int
sub
mov
pop
sti
rclb
jmp
and
add
inc
bound
sub
xor
popa
xchg
andb
repz
jo
xlat
popa
outsb
push
dec
icebp
jle
push
in
stos
insl
mov
imul
cmc
jg
mov
xor
push
mov
jecxz
xor
mov
arpl
push
mov
dec
fistps
repnz
mov
mov
jge
movsb
addl
js
imul
mov
fwait
jp
lods
mov
sub
test
push
xlat
loop
out
imul
inc
add
fists
pop
call
addl
mov
ja
cmpsl
mov
jae
out
cmp
xchg
shrl
repz
or
fisttps
jl
inc
jnp
repz
and
pop
lcall
jg
gs
outsl
jg
dec
out
jge
jp
imul
push
xchg
stos
cld
test
push
dec
mov
in
loope
dec
add
fldenv
jg
inc
mov
fstps
xchg
je
fwait
push
xchg
jecxz
scas
mov
jl
and
daa
or
jbe
jecxz
imul
fst
sti
mov
lods
xor
push
pop
rolb
jecxz
mov
lock
mov
scas
jle
aam
jmp
test
movsl
loopne
mov
repnz
xchg
mov
sbb
fildll
push
add
pop
cli
test
sahf
or
pop
imul
push
inc
adc
dec
into
sti
sub
sbb
dec
out
leave
int3
test
or
arpl
add
push
pop
pop
mov
and
and
mov
sub
adc
fwait
outsl
xor
test
dec
imul
test
and
sub
mov
loopne
jmp
jnp,pn
inc
sub
add
push
add
and
popf
jo
aas
movsl
xor
push
xor
fcoms
jnp
push
fldl
dec
bound
push
int3
lret
inc
arpl
insb
jo
jge
lds
stos
adc
xchg
xlat
push
pop
jb
push
cmc
mov
cwtl
dec
lods
inc
clc
push
icebp
hlt
adc
aad
jmp
orb
dec
dec
vmwrite
lea
popf
inc
leave
push
xlat
gs
inc
ja
pop
daa
push
jecxz
jge
lahf
les
push
xchg
subb
push
mov
add
aaa
mov
mov
gs
add
mov
or
popf
andl
and
cmp
mov
mov
jbe
inc
in
push
sub
inc
movsl
add
cli
lret
and
call
add
incl
cmp
push
repz
sbb
outsl
mov
xor
sub
ret
lret
mov
push
ja
insb
cmpb
sub
dec
mov
push
xor
and
pop
mov
loope
add
mov
arpl
jmp
fs
push
mov
sbb
sbb
pusha
test
lock
fmull
add
popf
insb
dec
cli
shlb
pop
xchg
xor
mov
test
fwait
rclb
dec
mov
mov
adcb
adc
mov
xchg
hlt
and
and
insb
xchg
mov
push
test
int3
mov
or
scas
fidivrl
xchg
sub
or
cmp
inc
mov
insb
imul
inc
cwtl
mov
ss
and
test
xor
addr16
icebp
dec
xor
pusha
mov
or
jne
out
cwtl
scas
out
pop
mov
xor
popf
out
fs
iret
lcall
loopne
adc
mov
inc
test
push
jne
repnz
pop
lock
mov
pop
ljmp
lret
jo
jns
adc
and
inc
cmp
jae
xchg
dec
sub
lea
fiadds
inc
orl
add
push
hlt
lock
jno
push
push
into
lcall
sub
les
mov
adc
mov
test
in
ja
rcrb
xchg
jae
ret
mov
sub
scas
sbb
xor
adc
fistl
adc
adc
mov
test
push
lret
gs
jns
adc
jp
mov
lahf
xor
aad
xorl
iret
cs
daa
cltd
cmp
or
scas
jl
cmp
xchg
fistl
jno
shl
test
jns
cs
in
rcrb
sbb
js
pop
adc
into
xchg
outsb
sub
dec
sbb
add
jae
cli
movups
jbe
mov
dec
mov
out
inc
cwtl
adc
jbe
adc
pop
push
dec
and
or
xor
aam
jae
addr16
pop
or
bound
scas
cmp
adc
shl
push
mov
call
sbb
out
adc
aas
push
and
ret
inc
clc
mov
inc
ret
pushf
int
mov
push
jne
lahf
scas
push
pop
or
gs
mov
or
sub
push
push
das
mov
cmp
inc
add
pop
cmp
enter
pop
sahf
jns
in
dec
pop
movsb
ret
into
sarb
xlat
test
andb
ret
sbb
aas
in
or
ja
fiaddl
ja
and
xor
pop
out
fstps
sti
cli
mov
ds
insb
fs
mov
out
dec
and
jmp
xor
inc
out
cli
xor
out
mov
push
or
jnp
or
or
sbb
clc
inc
xchg
sbb
jecxz
ret
sub
dec
aad
sbb
pop
mov
mov
ss
fcompl
add
push
cmp
out
test
or
shlb
in
fs
add
sub
add
push
lods
push
iret
lahf
xor
push
pusha
xor
inc
jb
xor
xlat
xorl
mov
mov
test
or
jno
sub
cltd
cmpsl
mov
sbb
repnz
shlb
shr
push
je
pop
ret
ror
inc
mov
jmp
pop
popaw
jle
inc
sub
pop
jbe
xor
in
pop
mov
fimull
cmpsb
pop
add
movsb
jl
jle
xor
xor
and
mov
jmp
dec
rclb
stos
jle
hlt
stos
and
pop
mov
xchg
lods
mov
call
xchg
out
aas
lret
stc
cmpsl
xor
add
mov
or
and
jecxz
jnp
shlb
mov
add
xchg
and
repnz
pop
mov
push
sbb
jl
imul
pop
inc
adc
or
inc
jo
enterw
pop
jge
sub
in
repz
jno
pop
and
sbb
push
jge
pop
stos
mov
mov
xchg
adc
ljmp
sbbb
cmp
insl
mov
mov
push
les
push
shrb
adc
mov
add
jmp
adc
sbb
mov
push
out
ss
lret
pop
loop
adc
mov
jae
mov
out
stc
mov
add
in
ja
jb
add
sub
mov
inc
xorl
xchg
cmp
stc
sub
arpl
adc
dec
sub
out
pusha
enter
inc
fists
push
dec
xlat
insl
pop
ds
adc
sbb
xchg
xchg
mov
leave
sahf
stc
loop
jge
dec
test
adc
dec
lods
xchg
mov
sti
lods
inc
add
ret
aad
andb
ljmp
ret
out
popf
jno
cwtl
jb
push
fs
pop
mov
aad
add
clc
ficoml
test
adc
lds
mov
push
dec
in
sbb
outsb
imul
adc
fdivrs
aad
jo
aam
mov
shlb
popa
jp
and
sub
adc
pop
rolb
ja
dec
jbe
inc
jmp
jno
mov
pop
pop
fmull
icebp
outsb
push
insb
xchg
push
in
push
fistl
lcall
jg
xlat
sahf
xor
pop
jp
popa
jbe
pop
push
pusha
and
mov
in
sub
icebp
mov
insb
lret
mov
jl
mov
out
push
in
adc
lcall
push
data16
in
aad
iret
lret
xor
sub
add
gs
or
sbb
in
mov
jo
jg
js
bound
push
jp
xchg
sbb
jge
pop
xchg
push
xchg
mov
insl
cld
adc
xlat
cmp
sbb
push
es
push
icebp
or
fldenv
sub
bound
lods
in
fcmovnbe
mov
shlb
add
shrb
push
movb
loope
or
add
outsl
push
mov
inc
jg
fndisi(8087
cmp
sub
lods
pop
data16
loopne
arpl
add
jnp
xor
add
movsb
jb
cld
xchg
loop
jl
fidivs
inc
fwait
addr16
jo
cltd
mov
xchg
jno,pt
test
jg
sarb
dec
inc
add
ljmp
or
movb
mov
dec
in
xchg
fs
fwait
xor
mov
loopne
push
fcomps
insb
ret
call
mov
pop
out
aad
repnz
cmp
xor
pop
inc
sbb
inc
xchg
dec
outsb
js
sub
mov
enter
jecxz
cmp
nop
testb
fcoml
jmp
loopne
mov
out
cmp
pop
jno
lods
sbb
cmpsl
cwtl
xor
jmp
pop
add
jecxz
enter
mov
mov
or
loop
lods
aad
or
mov
fldl
pusha
cld
aam
mov
jge
dec
dec
or
cli
jp
lods
test
into
mov
jbe
out
or
mov
pop
xchg
push
jne
lock
out
mov
jge
loopne
and
or
inc
jae
popl
dec
daa
mov
xor
jecxz
inc
sahf
data16
shrb
xor
ss
lcall
mov
mov
aas
dec
test
lret
in
push
clc
loop
nop
aas
pop
jg
aam
in
mov
xorl
or
mov
cmp
test
pop
or
aaa
push
pop
pop
mov
lcall
ret
inc
xchg
xchg
xor
mov
je
xlat
xchg
sti
repz
sub
push
xor
jmp
inc
push
enter
sub
and
clc
pusha
ljmp
adc
cmp
inc
mov
dec
or
out
test
mov
sub
insb
mov
and
or
loop
push
xchg
xchg
lret
cld
ljmp
push
cmc
movsb
jl
jae
inc
cmc
ficoms
js
sarb
scas
dec
adc
nop
fisubrl
and
inc
dec
or
aaa
in
push
dec
lret
pop
call
sbb
xor
push
and
sbb
ficompl
sbbl
pop
add
ror
xor
daa
lds
cli
lods
out
pop
mov
dec
mov
loop
test
cmp
add
cmp
adc
stos
aad
test
int3
sar
loopne
faddl
inc
inc
in
call
push
fstpl
jb
aam
jg
sub
lods
xor
push
in
lea
ficompl
test
adc
scas
arpl
imull
pop
xchg
das
out
and
inc
loop
mov
mov
inc
je
and
int
daa
add
test
cmpsl
fsubrl
sub
dec
add
or
cmp
jae
into
and
and
in
mov
scas
in
add
insb
mov
and
dec
in
stc
int3
add
dec
jns
mov
icebp
and
lcall
leave
test
pop
push
xchg
add
add
gs
push
fcomi
addr16
jecxz
hlt
adc
int
fsub
jge
dec
out
cli
fucomp
std
push
add
fwait
jecxz
repnz
adc
incl
outsl
sub
lret
xor
mov
leave
rcrl
into
addr16
add
out
ds
jae
ljmp
icebp
pop
lahf
fdiv
add
fcoms
ds
aaa
sbb
inc
adc
xor
jae
sub
or
out
xchg
in
or
dec
scas
jb
pop
inc
fnsave
in
arpl
lahf
mov
hlt
cmp
pop
sbb
mov
xor
push
dec
fdivrl
or
mov
scas
out
mov
and
fisttpll
rol
xor
hlt
or
ljmp
add
repnz
mov
inc
enter
mov
pop
pop
inc
xor
adc
sar
test
xor
add
adc
gs
sti
xchg
popf
pop
test
push
enter
jbe
fildl
jae
mov
cmpsl
gs
inc
sti
je
aad
push
lret
nop
mov
push
mov
or
out
fldl
push
ss
nop
sahf
arpl
and
int3
mov
cli
lahf
fistl
in
insl
jbe
push
inc
and
sbb
es
rcrb
jl
test
in
pop
aaa
jb
jbe
cld
mov
jns
dec
hlt
mov
outsl
pusha
decb
imul
jmp
ret
cwtl
jle
enter
ret
clc
addr16
mov
add
jbe
cmp
jp
mov
and
and
mov
cmp
inc
and
hlt
out
fcmovnb
cli
sub
fidivs
int3
shl
cmpsb
inc
loope
out
out
pop
les
jmp
notl
movsb
push
dec
push
cmp
pop
inc
sub
mov
sub
xor
mov
cmpsb
add
scas
mov
jl
xchg
pop
loop
sbb
imul
lods
stc
sti
push
lds
inc
jb
andl
loopne
pop
dec
or
loopne
stc
repz
pop
push
push
outsb
bound
pop
and
test
mov
mov
ja
movsl
adc
mov
mov
xchg
xor
out
fnstenv
repnz
int
pusha
out
or
out
xor
mov
sub
adc
popa
or
sahf
clc
push
sub
rorl
cmc
mov
enter
pop
mov
push
test
popa
push
xor
push
mov
ljmp
hlt
mov
orl
stos
stc
xchg
jmp
pop
jecxz
out
pop
out
jecxz
jb
adc
test
or
repz
push
pop
and
shlb
sbb
mov
loopne
push
and
xor
mov
push
int
movsb
std
jle
lcall
xchg
adc
push
jno
out
mov
into
mov
inc
int3
or
dec
test
cmpl
mov
das
push
xchg
movsb
xchg
test
mov
sbbl
popf
cmovl
pop
loopne
jecxz
loop
out
add
xchg
ret
stc
and
dec
fsubr
pop
mov
std
pop
adc
pop
insb
aad
push
test
ss
aam
mov
and
stos
out
movsl
in
out
mov
cmp
pop
sub
in
mov
push
cmp
pop
sbb
mov
pop
test
repz
mov
shl
std
sti
movb
jnp
dec
jns
das
jp
rclb
inc
or
imul
mov
mov
mov
out
shr
add
xchg
cmc
jl
scas
sar
mov
and
add
push
xchg
cli
daa
mov
sbb
xchg
arpl
rorl
or
addr16
mov
inc
std
adc
mov
push
lahf
cwtl
xlat
cmc
cmc
and
mov
cld
clc
inc
into
rorb
inc
sub
xchg
lret
sub
adc
sbb
dec
dec
adc
sub
xchg
and
jmp
sahf
out
jge
sbb
xchg
xor
les
cmpb
aad
pop
jg
sbb
test
inc
jl
loope
xchg
push
and
test
pop
sub
and
mov
adc
mov
pop
lods
cmp
sub
cmpl
mov
cltd
mov
push
pop
cld
jo
xor
mov
and
lahf
jp
addr16
mov
lods
stos
xor
push
outsl
dec
lock
bound
push
push
sti
mov
cmp
rcrl
xor
inc
inc
push
xchg
sub
loop
mov
mov
arpl
and
xchg
aas
pushf
push
test
jmp
mov
test
psrlq
dec
pop
inc
leave
push
repz
inc
lods
pop
inc
nop
xor
ja
jle
xlat
jbe
in
sbb
xchg
adc
vpaddq
sub
sub
data16
loop
lcall
add
add
and
xchg
cmp
xchg
mov
scas
call
mov
sbb
leave
out
decl
in
dec
ret
pusha
xchg
jmp
jb
xchg
xchg
sub
xchg
and
icebp
and
xchg
mov
test
push
pop
ret
xchg
sti
in
fstl
jl
rcrl
pusha
mov
or
out
or
repnz
outsl
cmpsb
jge
lea
clc
mov
ret
movsl
push
aas
out
arpl
add
jge
or
insl
pop
fldt
repnz
sub
push
dec
xchg
push
cmpsl
enter
xchg
and
jb
jo
mov
sbb
push
rol
fs
lock
jne
or
pop
push
lahf
mov
lcall
cmpsb
or
ss
adcl
xor
xchg
sbb
movsb
mov
gs
ds
xchg
ds
es
int3
je
je
arpl
cmp
mov
outsl
or
out
mov
pop
mov
sahf
sub
mov
mov
movsl
repz
xchg
inc
mov
jle
dec
repnz
sbb
bound
cmpsb
sti
mov
xor
fucomip
js
mov
mov
mov
push
enter
ds
fsubrp
mov
das
push
sbbl
adc
dec
dec
arpl
xor
push
pop
cmpl
push
loope
lcall
pushf
aad
pop
movsb
loop
cmp
fwait
loopne
jecxz
fsubrl
movsb
out
shll
push
loop
das
jp
nop
cmpb
clc
add
loopne
lahf
or
sub
je
hlt
mov
js
int
pusha
mov
mov
adc
inc
mov
sbb
dec
mov
or
and
clc
sbb
cmc
js
lods
fldcw
add
stos
mov
es
test
movsb
mov
pop
fnsave
aaa
les
jecxz
dec
xlat
adc
mov
xor
and
fwait
into
jle
stos
lea
sbbl
inc
cmpsl
pop
inc
xchg
outsl
out
or
mov
jl
cmp
adc
dec
pop
pop
push
sarl
xor
push
hlt
dec
scas
mov
cmpsl
push
xchg
js
and
shlb
jmp
mov
stc
addr16
xchg
pop
scas
sbb
xor
sahf
imul
inc
movsl
int3
mov
fs
cld
lock
je
test
mov
pop
sub
in
xchg
ror
xlat
jo
xor
es
pop
mov
pop
test
sarb
inc
insl
imul
sub
jmp
mov
cld
test
pop
mov
jb
outsb
stos
repz
icebp
xor
xor
jp
xchg
test
xlat
mov
fistps
cmp
lea
arpl
test
xchg
gs
xor
loop
adc
int
jp
xor
stc
mov
or
push
jecxz
push
jne
cmp
lret
lret
movb
mov
je
sbb
xchg
and
mov
inc
fs
adc
mov
push
hlt
nop
les
dec
mov
lahf
rcrl
pop
jg
cltd
pop
or
inc
andl
stos
outsl
fstpt
rorl
add
xor
leave
jae
rol
scas
daa
ret
fwait
test
shrl
pusha
clc
mov
aaa
inc
ror
inc
lods
adc
inc
add
sub
into
cmpsl
adc
lock
rorb
cmp
out
imul
push
rclb
inc
mov
push
sbb
cmpl
add
popf
jmp
seta
fs
mov
jmp
cmp
sub
movsl
cli
nop
pop
mov
rcll
adc
or
sub
aas
xchg
fcomi
mov
mov
add
push
sahf
mov
lock
sbb
sbb
jmp
adc
out
pop
popa
insl
daa
xchg
add
fwait
out
dec
scas
dec
sar
push
filds
fcompl
ret
ljmp
frstor
aas
and
inc
mov
mov
cmp
xchg
insl
xchg
or
cmp
push
pop
push
sub
into
cmp
cmp
jle
outsl
inc
jnp
outsb
cli
sti
andb
jl
mov
roll
inc
sub
lcall
fildl
in
xor
cmpsl
mov
mov
mov
enter
lods
dec
mull
inc
mov
add
cmp
xchg
inc
lods
sbb
stos
and
lret
add
mov
aam
mov
xchg
out
dec
inc
pop
xchg
add
and
je
daa
cltd
xor
sub
cli
add
xor
mov
pop
mov
jne
fwait
jg
push
out
xchg
cmc
lahf
clc
adc
mov
and
out
xor
xchg
ret
fstpt
mov
pop
pusha
enter
shll
xchg
bound
xchg
scas
lds
inc
mov
mov
in
into
aaa
test
jg
mull
jle
inc
insl
inc
adc
movsl
xchg
or
sahf
inc
enter
add
jl
out
out
js
mov
xor
cmp
mov
daa
or
cmpsb
mov
sbb
test
aam
lcall
shr
xor
popa
sub
jecxz
jno
mov
or
sbb
cmp
shrb
bound
sbb
push
and
xor
sub
fadd
imul
icebp
pop
lods
sbb
ror
cmc
int
cli
insb
mov
popf
xchg
cmp
add
cmpsl
lahf
mov
mov
cmc
cmp
outsl
add
mov
mov
mov
cmpb
and
pause
mov
push
mov
pop
mov
aad
outsb
jno
addb
mov
jnp
mov
aad
push
mov
push
das
icebp
rclb
lret
dec
out
outsl
xor
lahf
cmp
cld
xchg
mov
sbb
aam
icebp
fiaddl
das
mov
mov
cli
lods
shrb
ss
fidivrl
xchg
or
sbb
fninit
xor
inc
enter
dec
cmpsb
fildll
lcall
mov
mov
xor
mov
divl
jmp
mov
out
adc
sarl
push
mov
push
ljmp
in
lcall
es
jp
mov
dec
sbb
ret
inc
jbe
add
pop
cs
in
rcl
dec
mov
mov
das
add
dec
sbb
adc
add
or
push
xchg
repnz
hlt
pop
aas
lret
hlt
sbb
cmc
lea
das
filds
data16
xor
rol
pushl
les
pusha
mov
xor
mov
shrb
test
cmp
icebp
add
adc
jnp
stos
and
pop
into
outsl
lcall
pop
push
int
stc
fistl
push
out
fists
and
dec
lcall
mov
or
call
mov
mov
mov
daa
repz
push
leave
fcmovbe
loope
adc
mov
sbb
or
pop
ret
or
hlt
rorl
ret
addr16
mov
outsb
jns
shlb
add
leave
aam
xchg
jae
out
add
add
jmp
jecxz
inc
xor
adc
test
push
push
and
add
sub
jbe
mov
jl
out
imul
imul
ret
xlat
mov
mov
mov
push
xor
pop
je
xchg
cmp
fdivrs
outsb
test
add
pop
xchg
add
or
popa
bound
fisubl
sbb
outsb
imulb
js
mov
adcl
cmp
das
and
jmp
xchg
sub
jg
push
fimull
or
cltd
rcll
adc
hlt
and
movsb
int3
outsb
loop
shr
adc
xchg
add
push
call
fcmovbe
clc
sbb
testl
iret
in
test
iret
push
pusha
jge
pop
and
outsl
in
loop
mov
xchg
ret
and
and
daa
test
or
movsb
es
daa
mov
cmpsl
pop
jl
subl
test
call
sub
mov
rcrl
jmp
or
dec
fnstcw
subb
mov
lods
fidivrl
push
or
iret
lret
call
mov
repz
daa
out
or
dec
stos
in
inc
out
aam
or
loop
xchg
mov
sub
dec
sub
mov
icebp
sbb
cmp
jecxz
add
imul
sbb
sub
sti
ret
in
pop
xchg
add
ja
gs
sbb
inc
jl
aas
loope
jne
dec
push
aaa
xchg
out
ss
lcall
xor
int
or
cmp
cld
mov
insl
push
rep
loopne
push
jge
shrl
add
mov
mov
jo
inc
pushf
jno
mov
lods
cmp
cmc
sub
dec
fwait
or
ret
mov
or
aas
sbb
jne
push
std
shl
repnz
sbb
dec
ss
lcall
es
inc
push
jne
rcrl
sub
inc
mov
loopne
xchg
or
jmp
fwait
loopne
push
xchg
dec
mov
loope
or
xchg
bound
push
mov
icebp
and
fs
cmp
dec
xor
sbb
ret
leave
test
loopne
fadds
inc
enter
nop
mov
xchg
push
inc
ds
jns
and
add
mov
pop
jo
xchg
ljmp
pop
fisttps
cmp
lret
pushf
pop
fldt
xor
push
adc
push
fistl
mov
rorb
loope
jl
es
inc
mov
lods
iret
add
xchg
xor
fcmovnbe
pop
pusha
data16
loop
aaa
push
mov
mov
mov
rcll
mov
mov
add
cmpsl
faddl
fmul
cs
pop
or
push
dec
jle
add
fs
pop
pop
fisttpll
idivl
lods
icebp
cmp
mov
jbe
pop
or
bound
jb
dec
shl
mov
test
add
movsl
dec
mov
mov
int3
mov
out
inc
mov
mov
js
cmp
sub
mov
mov
push
inc
inc
jl
pushl
jae
cltd
and
push
xchg
mov
push
push
push
ret
fldl
xor
fstps
enter
jg
das
shl
push
pop
xchg
jb
negb
xor
xor
push
mov
shr
stos
mov
inc
dec
fcmove
lods
push
cwtl
inc
jl
add
mov
inc
out
sbb
jbe
push
cmpl
xlat
sub
push
cmp
push
je
pop
cmp
xlat
jp
sbb
je
jmp
gs
hlt
mov
pushaw
add
sbb
inc
daa
sbb
daa
xchg
dec
outsl
mov
add
push
adc
and
insb
popl
fstpt
or
adc
idivb
inc
lods
xchg
mov
roll
or
push
xchg
aaa
push
lret
mov
pop
pushf
lahf
add
push
or
xlat
loope
lahf
ret
lcall
adc
inc
adc
fcoml
xchg
mov
fsts
into
mov
jne
pop
enter
pop
hlt
xchg
in
je
xchg
sub
mov
outsl
lods
insl
add
outsl
stos
out
inc
jg
daa
out
inc
or
out
push
xor
adc
es
dec
cltd
in
fwait
shll
sahf
ss
pusha
rorl
pop
call
or
cmp
arpl
in
push
aad
jns
loop
in
xchg
and
call
add
sub
imul
jp
pop
inc
pop
push
and
pop
icebp
xor
in
imul
xorb
inc
pop
xchg
sahf
adc
and
outsb
mov
pusha
js
lret
sub
data16
xchg
jg
cs
xchg
ja
ficoml
mov
testb
in
mov
int3
sub
repz
add
add
int3
fcompl
popf
leave
add
test
clc
jle
fnstcw
jbe
int3
test
pop
mov
jge
xchg
sub
lods
jecxz
leave
xor
fsubl
stc
sbb
jecxz
jne
cmp
test
sbb
push
mov
sbb
sbb
add
roll
mov
xchg
fcomp
jae
or
std
inc
daa
out
xchg
out
cmc
mov
push
dec
lret
test
cmpsb
rclb
pop
insb
add
adc
out
jmp
out
andl
jge
mov
xchg
movsb
dec
lahf
cmpsb
ficompl
jae
or
pop
push
xor
xchg
mov
stos
lret
push
imul
cltd
dec
dec
jle
xor
or
loop
jne
push
fidivs
and
mov
jae
fs
pop
out
add
inc
mov
sti
dec
dec
lahf
mov
je
jnp
xchg
lds
nop
aam
sub
insl
jp
insb
dec
mov
ja
outsb
dec
in
mov
push
insl
sbb
and
jns
xlat
out
bound
or
or
cli
mov
adc
add
popf
inc
scas
cs
call
or
test
pushl
mov
gs
xchg
inc
dec
stos
jnp
cli
pop
pop
lods
test
test
xor
push
and
insb
jb
jp
jo
daa
cmp
and
dec
pop
xchg
test
iret
or
inc
add
or
es
mov
cwtl
xchg
jg
call
and
and
jl
xchg
lods
mov
sbb
push
or
stc
mov
mov
sub
mov
push
fcmovnb
mov
pop
cmp
lea
xor
xchg
xor
in
jg
stos
sbb
loopne
dec
mov
sub
mov
xor
mov
adc
pop
adc
pop
pop
mov
sahf
mov
jb
or
jl
push
dec
pop
iret
push
adc
dec
mov
hlt
movl
dec
scas
push
mov
mov
nop
mov
pop
mov
repnz
ds
push
sbb
cmpsl
adc
pop
ret
push
mov
ds
iret
orb
lods
inc
movsl
imul
out
mov
loope
out
inc
lret
ret
ljmp
arpl
mov
xchg
lods
aaa
push
in
sbb
jmp
rorb
in
aad
ja
mov
gs
loopne
mov
adc
mov
cwtl
pop
mov
pop
in
push
mov
adc
xor
jcxz
or
push
ficoml
dec
cmp
insb
ss
int
popl
call
into
aam
or
pop
fcmovb
jne
addb
inc
jno
cmp
cmp
xor
les
mov
fstpt
dec
sarb
cmp
xor
lea
jne
ds
inc
nop
outsl
in
sub
push
sbbb
or
mov
es
dec
out
ret
push
fwait
push
dec
mov
mov
pop
imul
pop
loopne
stc
gs
pop
insl
mov
ret
nop
jg
xchg
fdivrs
daa
pop
xchg
pusha
rorb
dec
pop
jb
repnz
dec
adc
shrb
sbb
loopne
mov
adc
cmp
stos
mov
imul
add
repz
ja
nop
sbb
sbb
adc
or
mov
push
stos
int3
pop
aas
sbb
leave
jae
insb
inc
lcall
in
xchg
lds
imul
mov
repz
xchg
jmp
add
test
hlt
fwait
pop
addb
add
out
arpl
xlat
xchg
in
movsl
ds
adc
cltd
sub
sbb
dec
iret
pop
or
xchg
jbe
push
sub
inc
mov
pop
pop
xor
cmp
fdivrp
inc
loopne
ffreep
movsl
adc
jno
dec
xor
jle
lcall
or
cmc
and
ljmp
cs
mov
pop
sub
arpl
orb
lock
incb
insl
repz
jl
xor
popa
aad
jg
cmp
pop
or
sub
testl
inc
push
cmp
mov
out
movsl
les
push
mov
data16
iret
or
xchg
roll
dec
imul
pop
mov
sbb
mov
push
mov
jmp
aad
imul
pop
xor
mov
push
repz
sbb
addr16
cmpsl
aam
adc
jb
lcall
fs
add
rcll
cld
sub
in
scas
ficoml
ds
push
mov
pop
mov
test
into
inc
out
mov
mov
mov
sbb
je
aas
or
stos
push
xchg
sahf
rorb
push
je
jl
pop
cmpsl
cltd
into
jmp
jmp
mov
inc
roll
out
mulb
xchg
stos
jmp
mov
aas
xor
clc
popa
jb
sub
lret
jg
pop
bound
jnp
cmc
dec
push
lea
fidivs
cmp
inc
rclb
sub
icebp
jmp
dec
mov
jp
pop
or
cmp
dec
repz
movsl
cmp
dec
add
hlt
and
cmp
and
cmpsl
mov
sub
pop
add
rolb
jae
add
out
icebp
orb
sbb
xchg
subb
aam
cmpsb
mov
lds
jne
jno
ds
pop
int3
es
xchg
mov
mov
stc
pop
ds
outsl
sub
cmp
stos
inc
testb
pop
mov
addr16
sbb
push
dec
ficoml
inc
xor
jns
push
shr
push
popf
ficoms
mov
out
mov
scas
inc
mov
xchg
mov
ja
scas
mov
iret
out
sbb
cmc
mov
xchg
sti
dec
lock
shlb
dec
hlt
sbb
xchg
lock
mov
iret
imul
and
mov
in
pop
xchg
pop
sar
pop
jb
mov
or
shlb
out
push
pusha
int3
aam
es
ret
xchg
hlt
lea
test
pop
sbbl
push
div
daa
xlat
jb
sbb
push
int3
jnp
aad
cmp
xchg
hlt
insl
lcall
ficompl
dec
inc
negb
stos
lea
push
dec
test
stos
xchg
test
xor
fdiv
mov
fisubl
iret
cs
mov
mov
test
in
ss
mov
adc
rorb
lret
sbb
xor
idiv
call
cld
pop
ror
add
mov
ficoml
rorl
ficoms
bound
xorb
xor
insl
adc
nop
mov
ficompl
jle
cmp
fs
icebp
jecxz
jmp
mov
add
adc
add
sbb
push
push
cwtl
dec
mov
andl
and
fdivrl
test
clc
insl
pop
out
jle
push
pop
jno
xor
add
pop
mov
xor
inc
pop
rolb
mov
std
sarb
inc
mov
cmp
pop
add
jno
mov
jge
popf
lret
test
sbb
inc
gs
mov
sub
bound
jnp
lahf
aaa
and
int
outsl
notb
jge
pop
popa
or
fcompl
pop
fldl
fmul
ja
bound
fldt
cmp
lods
clc
loop
outsl
insl
pop
in
add
bnd
ja
roll
enter
sub
rol
daa
inc
mov
pusha
xchg
adc
push
andl
f2xm1
test
mov
frstor
lods
jg
mov
aaa
int3
fwait
or
mov
xchg
fsubl
jmp
es
jecxz
cld
ret
inc
bound
add
sub
xor
aad
dec
fisttps
lret
clc
and
iret
sub
mov
jg
repz
fnstsw
inc
jg
dec
pop
xor
pop
les
jb
inc
ficomps
push
dec
xchg
inc
cmpsl
scas
cmp
sbb
movsb
mov
xor
push
cmc
and
xchg
repz
repz
sahf
popf
sahf
adc
xor
out
shrl
les
cmp
mov
neg
adc
sub
cmp
fnstcw
arpl
adc
in
fidivs
inc
scas
fcmovnbe
sbb
or
pop
and
dec
mov
mov
mov
mov
xchg
es
adc
std
es
pop
cmp
outsl
leave
ret
cmp
or
mov
addr16
push
inc
jae
mov
in
bound
add
sahf
mov
xchg
cwtl
repnz
scas
xchg
adc
or
cmp
fidivrs
out
add
sbb
sbb
jb
rcrb
lahf
cmpsb
insl
jle
movd
xlat
mov
mov
adc
aas
mov
je
popf
mov
flds
outsb
sub
sbb
and
jns
and
cmp
push
dec
popf
pusha
stos
out
aad
mov
adc
testb
lret
adc
dec
adc
test
test
cmp
addr16
mov
into
jnp
lcall
fs
insb
insl
fidivrl
lods
pop
fldl2e
popf
jl
pop
jbe
fidivrs
clc
imul
push
out
je
cmp
sbb
das
cli
xchg
aad
jno
fcmovb
add
popf
clc
outsl
in
call
lret
mov
adc
insb
shlb
sbb
jecxz
fdivl
shrb
jp
movsb
inc
inc
mov
pop
add
shll
pushf
xchg
repz
es
daa
inc
and
stos
loopne
es
adc
mov
ss
repz
arpl
test
push
xor
js
cmp
insl
or
cmp
jnp
mov
fadds
shll
into
sbb
xchg
sub
rclb
je
sub
popa
outsl
or
iret
movsb
adc
xor
adc
js
pop
aaa
in
xchg
roll
dec
push
xchg
fsubl
bound
outsl
jmp
test
aas
out
cwtl
pop
sub
and
scas
push
xor
cwtl
add
and
mov
lds
mov
or
aaa
add
test
inc
xchg
out
jne
es
shll
nop
xchg
test
or
adc
adc
in
scas
repz
fsubs
mov
adc
push
xor
add
sbb
aad
cltd
mov
sub
sbb
adc
mov
mov
fstp
fsubr
fyl2xp1
push
adc
pop
adc
add
loope
dec
and
inc
imul
push
lret
pushf
push
cmp
inc
pop
imull
movsb
imul
hlt
gs
and
es
xorb
jp
test
jbe
rorl
cli
outsb
xchg
into
fiaddl
cmp
dec
xor
jno
aaa
mov
dec
popa
call
push
bound
sub
push
jno
mov
cmpsl
in
cs
rcrb
out
add
out
jecxz
icebp
ror
mov
xchg
cli
inc
leave
iret
cld
cs
sub
jns
jno
gs
inc
pop
jne
push
dec
xorb
adc
pop
xor
ret
fnstenv
out
test
dec
mov
aas
rcrb
jnp
sbb
sahf
shl
jno
push
mov
jne
xor
mov
sub
push
add
jg
lahf
inc
push
push
in
ret
js
pop
xor
cmp
pop
push
lret
adc
mov
stos
rcl
adc
stos
push
mov
popf
les
jb
adc
mov
sti
sarb
mov
stos
lahf
jp
sahf
rcll
cmp
scas
je
ljmp
mov
dec
push
notb
faddl
jp
insb
mov
xchg
push
les
sbbl
test
rol
xor
xor
enter
stc
out
fidivrs
sub
jg
mov
movsb
and
dec
or
iret
out
imulb
adc
inc
orl
and
xor
fdivrp
add
inc
xor
mov
js
sub
jo
add
adc
adc
lods
jg
cltd
or
mov
adc
sub
and
dec
jno
leave
hlt
rcr
shll
pop
scas
lods
sbb
xor
jns
push
mov
stos
mov
out
stc
stos
jmp
xchg
aad
jnp
push
out
loopne
sbb
push
aas
mov
stos
les
mov
stc
mov
or
addr16
outsb
sarb
push
inc
ds
fildl
lds
cmc
pop
inc
push
lods
mov
pop
pop
push
push
les
popa
pop
and
fs
adc
fidivs
shl
mov
repz
xchg
jmp
jo
pop
ja
mov
test
jno
movsb
jge
daa
mov
das
shlb
mov
ret
cmp
or
cltd
ret
mov
jecxz
jb
xor
add
outsl
adc
aam
mov
mov
mov
xchg
xor
push
jecxz
test
jbe
pop
fidivl
jb
pop
mov
je
lret
hlt
pop
sub
jne
dec
test
inc
inc
dec
orl
pop
mov
mov
xchg
mov
scas
outsl
rcrb
sub
xrelease
in
sti
mov
lds
mov
push
mov
scas
xchg
xor
xchg
adc
rorl
jne
push
ret
jecxz
or
aam
lea
xor
sahf
aaa
outsl
adc
sub
fsubs
pop
jp
and
and
es
pop
xchg
fs
fdivrs
iret
push
jp
add
mov
arpl
pop
cmp
inc
ret
shrl
scas
inc
mov
gs
dec
roll
push
loopne
jle
and
xor
mov
and
loope
sbb
pop
xchg
fldt
fcomp
jb
gs
pushf
addl
cmp
jmp
je
scas
movsb
sbb
sbb
mov
add
or
pushf
jl
jmp
je
mov
lods
fs
lahf
popf
ja
sub
loop
fsubr
mov
pop
cmp
js
shlb
dec
sub
cmp
and
shlb
jge
outsb
sti
adc
mov
jo
jp
sub
pop
adc
lods
or
in
rcrl
mov
test
out
push
and
decl
test
pop
into
and
jno
mov
loope
mov
mov
fiaddl
and
mov
mov
loope
daa
sbb
inc
icebp
lock
flds
push
adc
rclb
aad
pop
pop
icebp
jl
shlb
pushf
dec
jmp
outsl
and
out
clc
hlt
sbb
shll
mov
or
xchg
and
popa
cmp
cmpl
or
inc
cmc
nop
data16
dec
insb
push
sbb
lock
filds
lods
jbe
or
fdivr
jle
fnstenv
xchg
movsl
mov
add
pop
cmpsb
inc
insb
adcl
in
sarl
mov
lahf
in
jae
inc
rcll
mov
pop
push
xchg
test
jne
and
dec
mov
cmp
sbbl
pushf
ret
push
cmpsb
faddl
test
mov
lods
outsb
dec
push
outsl
xor
mov
and
mov
fstpl
int3
flds
xor
jp
push
and
cltd
popf
push
and
cltd
mov
jle
sbb
mov
cmp
movsb
scas
adc
out
cmp
push
scas
jb
and
jmp
add
scas
sbb
add
or
adc
clc
jl
adc
sub
jl
pusha
pop
jns
inc
mov
inc
aas
insb
outsb
cmp
push
jnp
push
loopnew
pop
dec
or
dec
push
in
loop
fs
mov
add
leave
pop
cwtl
jl
sub
sbb
sub
mov
jnp
out
sub
loope
xor
andl
cli
cmp
divb
sbb
testl
add
mov
outsl
sbbl
dec
inc
sub
test
sbb
sub
cmp
pop
jmp
iret
stos
mov
pusha
push
inc
cmpsl
cmpsl
xchg
jg
repz
pop
mov
ficomps
mov
push
mov
mov
pop
fisubs
shl
jae
clc
adc
cmpsb
xor
in
jg
int3
stos
pushf
lret
jmp
add
in
pop
iret
lret
ret
xor
pop
ljmp
adcl
andb
sbb
hlt
rcrl
sbb
dec
xchg
pop
or
mov
or
mov
inc
xor
fadd
test
cmp
inc
push
xor
leave
and
mov
data16
lock
cmpsb
scas
scas
adc
dec
and
pop
movb
fidivrs
cmp
ficomps
leave
pop
xorl
imul
iret
cmp
or
dec
shlb
in
jns
pop
mov
mov
stos
mov
imul
dec
cmp
ljmp
insb
mov
sbb
scas
inc
inc
fldt
xchg
cwtl
xchg
adc
fdivs
adc
push
das
mov
jns
sbb
ror
cmp
fstps
adc
test
ja
add
mov
pop
aad
fsts
dec
sub
aad
adc
test
repnz
cmp
jge
sbb
loop
fcompl
out
imul
xor
mov
cmpsl
add
imul
push
cli
js
fneni(8087
mov
ret
push
dec
in
ljmp
mov
das
clc
jp
ja
mov
xlat
mov
and
inc
dec
dec
orps
leave
push
mov
xor
insl
sbb
pop
fs
mov
xchg
pop
mov
lcall
or
mov
xor
popf
pop
icebp
mov
fbld
mov
push
push
imul
repnz
xor
mov
and
dec
sub
pop
outsb
xchg
jbe
dec
das
dec
xchg
push
shr
repnz
repz
rolb
outsb
daa
fnstcw
sbb
test
outsb
das
out
pop
ret
sub
fnstcw
xchg
cmp
and
into
inc
jecxz
ds
push
jb
add
push
lods
enter
repnz
sub
sub
jno
loopne
js
mov
das
inc
bound
inc
or
cld
movsl
loopne
cmp
repnz
lds
sub
loope
imul
sbbl
adc
jnp
aaa
xchg
xchg
or
and
lahf
push
sahf
xchg
xor
jno
cltd
and
pop
fucomi
push
int3
out
lcall
mov
es
loop
push
insb
cmpsb
clc
mov
mov
mov
loopne
jecxz
addl
mov
mov
jg
fdivl
inc
popa
addr16
cli
pop
imul
jae
jae
gs
and
mov
fdivl
mov
pop
jns
out
aas
or
in
mov
stos
repnz
aam
cli
cli
pusha
fldcw
cmc
pop
fstp
rclb
scas
outsl
js
loop
or
mov
pop
cmpsl
and
mov
aaa
cli
push
imul
stos
fiaddl
call
jns
and
mov
dec
mov
lods
inc
sbb
stc
jge
cmp
sub
mov
xor
lret
push
mov
in
mov
clc
test
addr16
ljmp
lods
shll
div
push
mov
out
fs
cmc
push
sbb
xlat
jno
test
lret
or
lods
lods
xchg
repnz
inc
sub
jae
inc
mov
in
sahf
xchg
loope
mov
xchg
stc
sub
aad
iret
lock
jge
div
loope
dec
std
nop
in
xchg
test
push
lods
nop
fs
pusha
lds
and
mov
test
pop
lods
xchg
outsl
cs
dec
repnz
pop
cmp
mov
lret
mov
frstor
push
testb
adc
sbb
dec
iret
loopne
cltd
out
xor
nop
inc
pop
sti
addb
outsb
lods
and
push
icebp
and
xchg
ror
test
pop
pop
fldenv
jbe
push
cmp
push
ficoms
inc
ds
sub
into
imul
pop
jecxz
pop
stc
push
pop
rcrb
loopne
push
aas
inc
stos
dec
add
gs
lock
mov
adcl
mov
inc
rcl
out
lods
shrl
jne
sbbb
loop
and
outsb
xchg
cmpsb
xchg
inc
pop
mov
mov
popa
jb
fildl
pop
sarl
mov
pop
jne
push
cmp
inc
jmp
loopne
cmp
xor
and
bound
fbld
ljmp
sbb
sahf
or
sub
or
dec
pop
or
int
repnz
push
ret
imul
mov
add
scas
push
pop
lea
jae
je
jecxz
and
and
xchg
inc
in
cmp
jo
daa
push
pop
enter
pop
push
mov
inc
inc
mov
inc
adc
pop
mov
xchg
inc
addl
add
jmp
cld
daa
mov
mov
stc
movsl
lret
sti
cmp
repz
pop
incl
adc
shll
daa
fcmovu
mov
rclb
or
scas
or
sub
jnp
out
mov
call
inc
in
test
pop
and
pop
sub
xchg
stos
sbb
out
inc
mov
pusha
in
loopne
stc
sub
mov
jo
loop
add
sub
mov
xchg
sbb
je
sub
in
insb
bound
insl
out
pusha
pusha
insl
mov
jnp
loope
movsl
cmp
ret
or
insb
jl
push
jns
pop
mov
in
push
push
sub
xor
mov
jne
movsb
pop
pop
xchg
push
out
cmp
fidivl
in
xor
movsl
inc
aad
in
psubsw
jle
push
out
fstpl
fwait
sub
in
mov
jmp
inc
push
scas
negb
lea
mov
mov
pop
mov
xor
cmp
pop
sub
sub
ret
repz
into
lods
jg
stos
pop
xor
into
or
dec
mov
cli
xlat
pop
test
mov
and
xchg
dec
ret
xchg
sbb
bnd
cmp
gs
mov
shl
adc
push
inc
ror
lock
push
scas
fldt
loop
adc
idiv
subb
andb
je
sbb
mov
aam
addr16
push
add
mul
test
aas
imul
clc
mov
int
enter
shrl
push
insl
sub
add
sbb
jbe
and
and
sub
xchg
adc
or
and
cmc
push
cld
push
and
ss
int3
les
xor
jecxz
jb
test
sub
pop
or
shrl
push
mov
ljmp
mov
lods
mov
test
mov
and
or
dec
push
pop
ficoms
out
lods
sub
sub
aad
cmpsl
stos
cmpb
ficoml
dec
fisttpl
sub
addl
sub
cli
or
imul
mov
jmp
fsubrp
cmp
jae
int3
test
loop
sub
int3
and
outsb
adc
in
mov
ret
out
push
enter
fiaddl
imul
inc
jo
popa
and
cmpsl
jo
out
push
enter
arpl
inc
mov
push
pop
mov
cmp
mov
jge
cmp
dec
jl
inc
fnstcw
xchg
push
in
push
push
mov
scas
mov
mov
xchg
sub
xor
xor
push
mov
cmp
jae
sbb
mov
pop
jbe
adc
or
jge
sbb
cmpsl
push
faddl
lcall
fbstp
jp
js
fiaddl
push
adcb
je
mov
jb
mov
inc
cmpsb
sub
mov
fistl
dec
cmpsb
cwtl
xchg
cmpsl
xchg
pop
sub
inc
jbe
movsl
xchg
push
or
arpl
scas
jbe
push
clc
leave
sbb
xor
jge
pop
sbb
das
stos
rorb
mov
frstor
imulb
repnz
inc
shlb
in
adc
and
mov
jne
loopne
jl
mov
add
push
pop
cmp
mov
lret
push
aas
cmp
scas
mull
stc
jecxz
fldl
enter
pop
sub
loop
call
int3
cwtl
xchg
add
int
mov
enter
fldlg2
or
inc
and
stos
or
xor
and
shrb
hlt
out
xchg
lret
dec
add
loopne
divb
sbb
mov
imul
xchg
push
xor
push
imul
orl
popa
shrl
cmp
pushf
mov
lcall
lret
cmp
sbb
daa
shll
pop
das
xchg
bound
jl
or
stos
les
addr16
mov
mov
and
hlt
imul
jge
lds
rcll
xchg
outsl
jb
add
les
jmp
or
flds
bswap
jmp
out
mov
dec
in
movsb
aaa
jle
mov
lcall
stos
adc
lret
xor
cvtdq2ps
shrb
mov
pop
aam
dec
adc
popa
out
push
mov
cmp
shrl
xor
aaa
test
sbb
fisubl
ljmp
stos
xor
sbb
mov
xor
cmp
ret
cmp
jo
enter
xchg
aad
inc
push
inc
repnz
lods
popa
test
sub
cmp
pusha
sbb
sub
cmpsb
mov
xchg
mov
scas
push
test
pop
sahf
push
fdivl
push
push
or
movsl
ret
iret
shrb
inc
int3
adc
aas
stos
repnz
mov
test
dec
add
mov
stos
shrb
and
jp
xor
in
in
xor
push
cmp
aas
pop
aas
jmp
sub
pushf
inc
mov
inc
add
xchg
out
xchg
xchg
inc
faddl
shl
lret
mov
xor
fs
jmp
sbb
loopne
jae
cld
dec
jbe
jmp
sub
bound
scas
popa
sub
in
test
dec
jno
int
into
lea
add
leave
jb
rcll
lcall
push
enter
add
jo
or
sub
cmp
test
mov
cmpsl
push
fmuls
stc
mov
call
or
in
mov
xlat
xchg
mov
out
push
inc
loopne
lods
inc
mov
loop
cs
aaa
leave
pop
call
bound
pop
xchg
xor
cwtl
cmpsb
jl
cmp
aaa
fists
mov
jp
mov
mov
enter
repnz
mov
daa
popf
stos
iret
sbb
add
insl
mov
xor
imul
pop
cmpsl
or
data16
sub
fwait
cld
fcmovu
lods
loopne
fs
fmuls
dec
xchg
iret
lahf
mov
gs
jg
add
data16
mov
mov
aaa
push
scas
paddq
sbb
cmp
jb
lods
test
out
bound
mov
mov
jo
data16
imul
imul
pop
out
mov
push
or
mov
mov
sub
sbb
jnp
lds
mov
inc
movsl
bound
push
pop
push
xchg
mov
test
stos
sahf
push
cmp
or
push
xchg
xor
test
pop
xchg
dec
in
and
inc
or
icebp
sahf
add
orb
popa
jecxz
scas
xchg
pusha
inc
ret
ss
pop
mov
cmp
and
sahf
push
outsb
lods
ss
test
pop
mov
push
xor
repz
dec
sub
fldt
popf
xor
cmc
lcall
leave
fcoml
ljmp
ja
mov
pop
stc
loopne
sbb
hlt
popf
aas
mov
inc
subl
pop
fists
jg
aaa
lret
std
cli
push
dec
mov
mov
adc
int
insl
insb
enter
enter
or
cwtl
loopne
mov
jb
push
push
mov
test
adc
pop
mov
lock
addr16
mov
pop
in
add
pop
dec
cmp
dec
jb
fimull
mov
inc
push
lea
xor
mov
mull
jnp
jb
sub
rcrb
jg
xchg
bound
adc
jnp
pop
paddsb
pop
ja
and
insl
cmp
mov
es
pusha
lds
or
out
imul
mov
cmp
or
fmul
lods
test
adc
lods
sub
sub
sub
ja
outsb
gs
inc
das
aam
jp
icebp
repz
push
sbb
addr16
pusha
push
pop
popf
cwtl
pop
jl
test
adc
lods
test
dec
mov
fildl
andb
repz
or
outsb
lahf
adc
mov
das
or
mov
in
dec
mov
push
ret
inc
mov
sti
test
imul
jns
xor
rcl
mov
mov
pusha
arpl
insw
sub
je
xchg
mov
insb
mov
sarl
out
cmp
mov
add
loop
ljmp
inc
leave
inc
inc
sahf
jns
fstpl
sbb
push
push
cmp
popa
imull
stos
cmpb
inc
jne
notb
int3
mov
lcall
xlat
divl
enter
ret
rcrb
sub
loopne
push
sub
inc
push
push
fimull
mov
movlps
es
ficomps
pop
lods
stc
push
xor
jmp
lods
xor
xlat
and
jo
test
dec
xor
divb
sbb
adc
sub
imul
in
pop
in
rorl
cld
mov
fists
push
lahf
push
xor
push
push
lods
enter
dec
adc
lods
lods
bswap
pop
stos
je
dec
push
int3
je
out
push
repnz
xchg
out
adc
jb
push
add
adc
add
hlt
lcall
cmp
jns
out
xlat
add
jmp
test
xor
scas
dec
dec
and
loope
aad
sti
enter
sbb
dec
popa
cmpsl
test
xlat
cmpsl
popl
cwtl
push
negl
flds
xchg
mov
push
push
jnp
fisttpl
xor
cmpsb
rorb
dec
xor
jae
test
adc
lahf
out
loope
cs
pushf
and
cmp
push
xchg
lock
mov
push
pop
mov
xchg
push
mov
or
mov
cwtl
jmp
clc
dec
add
dec
inc
xor
mov
pop
sbb
push
lahf
xor
test
mov
adc
bound
xchg
ja
xrelease
adc
pop
mov
mov
shrb
rcrb
and
sbb
aaa
pop
int3
or
inc
les
add
inc
push
fsubrl
popf
insl
push
xchg
or
and
into
outsl
mov
iret
cltd
adc
mov
imul
testb
aad
push
in
cmc
jmp
test
adcb
mov
push
dec
lea
cmp
sbb
iret
test
add
rorb
into
mov
and
jbe
shll
sub
mov
mov
xor
mov
in
daa
inc
push
add
jb
or
je
mov
mov
xchg
ja
jno
ljmp
ljmp
fisubl
addr16
pop
dec
add
sar
test
loopne
fstps
sbb
aas
jns
dec
add
adc
push
jns
sub
sub
sbb
pop
rorb
xor
test
sbb
ds
test
dec
push
dec
hlt
pop
mov
jo
insb
jbe
int3
inc
mov
adc
aad
sbb
sbb
xchg
iret
rcrl
adcb
call
out
mov
pop
cmpsb
lret
test
add
iret
fwait
add
in
test
add
imul
mov
scas
bswap
fldl
out
sti
jl
popa
pop
mov
ret
or
xchg
inc
push
popf
mov
push
repz
out
sbb
push
and
sbb
jge
orb
insl
cmc
dec
dec
jmp
sbb
xchg
push
sti
add
pusha
fwait
hlt
stos
rclb
jbe
adc
cmp
dec
add
loopne
daa
pop
add
dec
add
xchg
adc
adc
add
adc
lahf
cmp
adc
es
lahf
stos
sub
dec
xor
insb
push
imul
inc
lahf
cli
and
lcall
das
js
testl
pop
cmp
lret
aad
mov
mov
lcall
cli
pop
repz
scas
test
psraw
rcll
int
fld1
addr16
xlat
jb
cmp
jns
jnp
jb
dec
in
sbb
leave
sbb
push
adc
out
dec
cli
push
stc
sbb
out
or
dec
ds
std
pop
sub
test
and
movsb
push
aad
scas
pop
les
call
lods
in
dec
movsb
push
or
cli
pusha
jns
sub
pop
out
jecxz
data16
push
xchg
test
sub
sbb
adc
fistl
push
push
mov
add
es
lahf
mov
pop
stos
inc
mov
arpl
div
daa
xchg
adc
lods
imul
mov
pop
mov
jbe
test
aas
mov
in
add
xor
cmp
cmp
xchg
xor
pushf
push
push
pop
mov
mov
gs
cmp
aas
in
jo
lea
loope
lock
push
and
push
push
mov
in
mov
popf
pop
mov
cmp
test
rcr
popf
jno
repz
je
mov
push
out
jge
inc
push
adc
adc
mov
xor
xor
rcrb
test
mov
inc
inc
xchg
inc
push
pushf
mov
add
inc
test
adc
push
dec
stos
js
fwait
jne
in
rcl
mov
lret
inc
sub
test
fisubs
sti
jp
lock
jne
push
dec
xor
loopne
cmp
mov
jl
imul
or
mov
mov
or
inc
pop
and
aaa
bound
es
jnp
out
jmp
add
in
not
jl
pop
loop
add
leave
xchg
sbb
ds
mov
ss
inc
cmp
xchg
add
stos
and
mov
cltd
fwait
clc
mov
into
rorb
jle
stos
adcb
ja
add
adc
inc
popf
lcall
movsl
stos
test
imul
pop
push
das
sub
and
shlb
pusha
outsb
lea
adc
push
hlt
push
psrlw
pop
imul
or
adc
xor
adc
adc
or
fwait
and
add
xchg
and
in
enter
jnp
in
iret
pop
mov
cmp
je
fcoml
scas
lcall
mov
lret
inc
icebp
pop
or
mov
mov
push
pop
inc
test
cmpb
cmp
mov
mov
push
int3
lcall
inc
rcrl
pop
test
into
insb
mov
roll
pop
test
gs
iret
xchg
cmp
or
repz
mull
push
lret
iret
clc
leave
cli
test
dec
mov
mov
inc
inc
sub
xchg
shlb
xor
xor
pop
aad
mov
inc
mov
cmpsb
mov
nopl
jbe
fisubrl
adc
mov
mov
jo
xchg
into
dec
in
sub
repz
into
inc
inc
xor
jnp
arpl
out
xchg
push
sbb
push
sub
add
adc
cmp
mov
pop
mov
mov
in
pop
inc
mov
push
scas
push
push
test
jmp
xor
push
insl
push
popf
inc
push
loop
lret
std
mov
jnp
adc
lods
iret
jl
cmp
push
scas
mov
stos
loop
mov
aas
out
fisubrl
shlb
jecxz
dec
pusha
or
push
daa
stos
test
xor
inc
cmpsb
xor
cs
add
jne
je
test
sub
stos
sbb
mov
mov
sub
movsl
push
aam
scas
fwait
pop
xlat
clc
mov
sti
cltd
or
pop
sub
arpl
cs
jo
loope
out
push
aaa
shrb
loop
push
cmp
xor
hlt
cli
shrb
sbb
enter
push
in
cltd
cmp
std
test
xchg
pop
jecxz
cmpsb
lahf
adc
mov
icebp
cld
xor
cmpsb
scas
xchg
mov
je
hlt
in
nop
inc
sub
fcmovnu
jg
inc
mov
cmpsb
loope
lods
xchg
pushf
add
xor
lret
dec
jb
mov
cmp
sbb
cmp
cmp
stos
insb
pop
pusha
push
outsb
lret
int
ds
mov
cmpb
ds
ret
and
rcl
test
ret
test
cmp
pop
ds
adc
xor
fldcw
push
adc
xor
jmp
mov
mov
jnp
sbb
ss
test
dec
jnp
dec
dec
cmp
loop
ficoml
mov
jg
out
jbe
or
mov
loopne
int
ret
cmp
or
xor
mov
sub
cmp
add
insb
inc
push
push
xor
xorb
sar
cmp
mov
and
inc
testl
mov
es
cld
xor
cld
sbb
lods
in
loopne
int
scas
lret
fwait
mov
cmp
jecxz
loop
shlb
sub
jle
jnp
push
sahf
jns
dec
out
push
jae
jge
push
dec
les
mov
cmp
rcl
aas
andb
jl
cmpsl
das
xchg
jnp
nop
xor
dec
jl
cmpb
bnd
aas
adc
ja
xlat
clc
insl
add
sar
gs
adc
dec
pop
scas
rclb
push
mov
xchg
mov
add
mov
ret
sub
enter
dec
jg
inc
sbb
lret
stos
fisubl
ljmp
add
inc
cmpsl
jecxz
fs
cmp
mov
ja
dec
loopne
jns
js
jmp
cs
mov
push
push
lea
subl
adc
jno
scas
sub
cmpsl
in
mov
pop
wrmsr
sti
push
mov
out
mov
aas
mov
push
xor
dec
xchg
idivl
mov
adc
int
movsl
dec
jl
mov
jbe
push
adc
and
inc
push
push
inc
aad
in
in
pop
xchg
jge
fs
movsl
cmpsl
in
push
sbbb
ret
push
ret
shl
dec
mov
push
add
pop
addb
jno
negl
jg
aas
xor
testl
xor
sbb
jle
in
loop
aad
cmc
and
aas
inc
daa
push
fs
dec
cmpb
mov
push
and
stos
push
inc
sub
sub
dec
sub
popf
stos
adc
mov
aaa
fcomps
dec
mov
dec
xchg
mov
ficoml
push
insl
dec
psubw
sub
mov
cli
sub
into
cld
pop
and
adc
xor
das
mov
dec
jmp
inc
fisttpl
cmp
add
add
or
lea
xchg
sbb
scas
xchg
adc
jae
addr16
cmp
and
push
dec
ror
push
shll
adc
cltd
cs
test
ja
xor
add
cmp
daa
ljmp
lret
xor
arpl
push
leave
ficompl
xchg
pop
cwtl
pop
rcll
sbb
pop
and
call
inc
mov
addb
flds
adc
in
push
add
out
fwait
mov
in
and
int3
and
test
js
cmp
jecxz
adc
movsb
or
xor
or
push
imul
adc
xor
cwtl
and
lahf
cmc
pop
jnp
in
ljmp
adc
shlb
std
inc
inc
mov
mov
loop
mov
rolb
push
jcxz
mov
test
mov
repz
adc
cmp
inc
sbb
sahf
fwait
dec
call
je
stos
jne
xor
pop
xor
mov
jnp
dec
ret
pop
out
dec
cwtl
push
mov
adc
mov
cmp
test
ret
out
add
stos
scas
mulb
inc
xchg
sbb
repz
push
pop
or
lea
xchg
push
adc
lret
xchg
sahf
adcl
scas
xchg
inc
mov
mov
cmp
insl
mov
mov
stos
shl
push
sbb
sbb
lret
or
scas
lds
ljmp
cwtl
add
add
ljmp
and
insb
ljmp
ja
stc
enter
push
divl
jl
xor
loop
cmp
jge
lea
pop
fiadds
pop
or
pop
mov
push
or
test
push
ret
and
xchg
data16
nop
adcl
imul
mov
inc
adc
cmc
sbb
add
and
cmp
mov
xchg
cmp
std
sti
loope
lea
gs
fisubl
mov
or
xchg
xor
adc
stos
cmp
xchg
adc
pushf
inc
cmp
push
fisubs
stos
fs
inc
dec
imul
xor
pushf
xlat
cli
out
jnp
popa
cmp
dec
jns
stos
lods
das
hlt
cmpsb
sti
jmp
orb
mov
and
sbb
pop
jp
outsl
aas
or
mov
dec
in
lods
mov
fnstcw
mov
stos
mov
dec
lock
push
xchg
jle
xor
and
xor
sbb
loop
cmp
inc
andb
out
jge
mov
sub
test
lret
hlt
jne
mov
imul
lahf
add
ror
icebp
mov
int
or
dec
movsl
xchg
push
mov
sbb
jb
imul
dec
sub
adc
mov
jge
stos
adc
int
ret
pop
cmp
stos
pop
jge
fwait
sbb
push
mov
jae
push
ret
pop
mov
sub
xchg
inc
out
in
push
gs
pop
je
xor
pushl
sbb
bound
sti
das
data16
jg
cmp
mov
sub
cs
push
inc
lcall
dec
ret
sbb
gs
fninit
cwtl
aad
ss
mov
mov
push
lods
sbbl
mov
pop
subb
mov
xchg
jo
sub
shlb
cmp
push
jp
aas
es
shrb
mov
bound
loope
xor
add
xchg
aad
int3
js
adc
and
psraw
and
jno
push
outsl
pusha
cli
sti
cmp
xchg
in
loopne
in
lret
lcall
mov
movsb
or
sti
insb
cld
mov
lods
lea
inc
jg
xchg
ret
cmp
jge
fmull
jecxz
faddl
ja
sarb
dec
stc
and
ficoml
mov
pop
shl
sbb
mov
jl
mov
mov
jge
pop
mov
sub
test
shlb
jnp
sub
mov
xchg
cmp
stos
repz
cli
add
in
mov
jle
pusha
cmp
mov
mov
cmpsb
push
enter
dec
data16
ja
sarl
daa
or
daa
andb
cwtl
shlb
mov
and
push
add
adc
fdivrl
inc
add
jae
insl
out
dec
jecxz
scas
pop
push
bound
dec
xchg
cmp
mov
sub
jl
andb
lret
dec
xorl
sub
mov
pop
or
jp
std
fwait
shl
pop
mov
jns
je
sbb
mov
popf
and
int
lcall
fsubrl
pop
or
divl
mov
mov
push
lret
sub
push
into
push
jne
iretw
mov
cld
mov
and
fnop
lahf
mov
es
fwait
popf
stos
into
xor
out
dec
or
insl
xchg
sub
jnp
mov
jnp
leave
in
lods
push
and
lea
push
rol
enter
aas
sub
orb
mov
or
mov
adc
test
daa
add
shl
sahf
ret
repnz
pop
jno
cmp
adc
xor
in
or
bound
cmpsl
dec
fnstsw
je
fsub
mov
cli
push
test
pusha
cmpsb
adc
test
adc
sbb
loop
dec
mov
mov
xchg
push
or
xchg
daa
pop
cltd
ficoml
mov
sbb
cmc
shl
into
add
dec
xchg
inc
mov
movsb
xchg
push
sahf
and
push
push
rcrb
dec
mov
jbe
bound
ret
inc
and
in
inc
repz
outsb
sarb
mov
add
loope
cwtl
test
and
add
jbe
test
pop
add
gs
adc
jnp
stc
xor
xor
outsb
inc
idiv
or
adc
jle
fwait
sub
jo
and
stos
adc
pop
add
dec
adc
dec
out
adc
sbb
mov
push
pop
cmp
xor
mov
or
scas
mov
mov
loop
push
sti
mov
push
outsb
hlt
mov
xchg
or
and
pop
loopne
insb
jp
push
fwait
pusha
dec
fs
sbb
call
sbb
or
push
jo
insb
dec
cltd
dec
mov
pxor
fisttpl
addl
arpl
cmp
outsl
xor
cmp
dec
jp
repnz
out
inc
jo
aam
push
pop
or
cmc
or
jg
test
das
mov
les
arpl
fucomip
sbb
pop
sbb
paddusw
xor
and
add
ljmp
int3
xchg
out
shrl
pop
ljmp
arpl
jge
inc
mov
in
shrl
cmc
lds
lcall
inc
cltd
mov
jg
shrb
mov
jns
sbb
xchg
incb
dec
and
out
or
adc
neg
stc
outsl
mov
push
in
call
push
lds
mov
ljmp
mov
sub
add
jg
mov
or
rcrl
jp
orb
and
clc
and
sub
adc
adc
adc
adc
add
imul
clc
xor
ja
out
dec
jl
push
imul
cmp
shll
ss
jl
out
xor
daa
adc
or
mov
rcr
lea
lods
mov
or
outsb
clc
in
addr16
push
xchg
lahf
sub
pop
or
stos
and
xor
pop
mov
cmp
outsb
sub
es
sahf
dec
fisttpll
rcrl
orb
cmc
rcrb
call
adc
mov
stos
and
xchg
jo
lea
fisubs
xor
pop
xchg
add
repz
pop
mov
pop
mov
sub
pop
dec
xor
or
jne
mov
xchg
sub
into
mov
lds
sahf
jno
cmp
sub
clc
jle
mov
dec
hlt
jp
sbb
push
mov
mov
ss
mov
lods
mov
add
leave
adc
stc
mov
xor
pusha
sub
stc
and
call
xchg
rcll
sbb
jno
push
in
lock
xor
loop
or
ds
dec
inc
push
sbb
push
lock
gs
das
inc
out
andb
dec
dec
sbb
jb
adc
faddp
in
mov
sbb
lods
cltd
and
ficomps
test
ret
out
mov
lods
ret
gs
xchg
dec
repnz
jns
lahf
aas
pushf
pop
mov
mov
mov
loope
jns
xchg
ds
push
das
lods
fstpt
cmc
mov
cmp
add
iret
xchg
xchg
lcall
sbb
scas
jl
pop
mov
pop
xor
jae
pop
in
pop
je
or
into
popf
pop
add
adc
test
adc
outsb
mov
lds
push
adc
adc
out
dec
jns
je,pt
pop
pop
lea
insl
lret
mov
dec
js
test
int3
push
loop
fists
scas
fs
jmp
jae
stc
imul
and
xchg
jne
imul
push
xor
add
jmp
shll
mov
sbbl
dec
js
inc
or
or
push
rcrb
or
bound
insl
cmp
push
or
mov
out
inc
xor
mov
xchg
xchg
fs
sub
lret
jl
cmp
mov
mov
xchg
in
ss
stos
push
daa
push
movsb
and
xchg
xor
or
add
xor
push
loope
dec
jno
test
adc
insl
push
jnp
popa
lea
push
pop
and
cmp
dec
jb
cmpsb
sbb
jo
xor
das
sub
push
testb
rcrb
movsb
lea
cwtl
xchg
jbe
shrl
add
sbb
rep
push
nop
je
add
test
mov
cwtl
xor
xchg
fisubl
in
cs
dec
inc
or
push
enter
jecxz
ret
dec
cmp
jne
adc
test
mov
mov
ljmp
stc
cmc
ljmp
push
pop
shrl
sub
inc
into
xlat
js
mov
sbb
pushf
mov
ss
adc
in
xchg
jno
or
mov
fdivrl
repnz
js
adc
pop
loopne,pt
lahf
adc
sbb
xchg
pop
arpl
scas
hlt
adcl
stc
xor
dec
adc
lret
shll
sbb
jae
cmc
adc
mov
pop
lret
xchg
adc
or
lea
push
mov
lods
pop
cmp
lods
fsubr
fnstsw
sbb
ret
sbbb
les
or
sarl
mov
mov
mov
mov
inc
shl
movsb
movsl
dec
xchg
ss
mov
stc
jp
outsl
fstps
add
or
aad
fidivrs
je
lea
adc
jbe
mov
push
fsubp
insl
sar
stos
cmpsl
cld
iret
cmpl
sbb
cmp
jae
in
scas
into
add
enter
cmp
add
jmp
in
dec
inc
adc
ret
jecxz
loope
stos
fistpl
or
sbb
test
les
cmp
mov
mov
je
adc
mov
aad
adcb
imulb
add
sub
orb
push
shll
mov
sub
dec
and
loopne
popf
jae
push
ljmp
inc
mov
in
arpl
jl
jnp
je
cltd
cli
adc
subb
popl
scas
lods
mov
inc
add
mov
cli
jmp
or
mov
into
mov
sub
shrl
cmp
adc
cli
and
popf
fcoms
cmp
pusha
bound
cmp
push
jg
push
or
inc
pop
testb
out
pop
shrb
push
shll
inc
sub
cld
gs
pop
push
xor
stc
mov
and
lret
dec
pop
lret
scas
enter
mov
scas
lock
push
inc
dec
lret
and
ds
outsb
stos
mov
inc
cmp
mov
jge
movsl
jl
mov
add
mov
jns
dec
imul
and
loope
cmpsl
pop
mov
add
mov
jp
in
xchg
or
in
orb
dec
shlb
adc
cmp
notb
clc
mov
testl
insb
push
mov
out
and
adc
push
xchg
mov
in
movsb
or
repz
pop
xor
adc
stc
push
push
cmpsl
push
sub
and
scas
jge
sub
repnz
xor
inc
cmc
mov
cmp
pop
movsl
mov
ds
pop
lods
dec
or
fstpt
xor
cs
mov
arpl
and
sahf
jmp
mov
fsts
push
je
fneni(8087
xor
mov
out
jg
aaa
xorb
or
repnz
and
inc
lcall
leave
faddl
movsl
in
xchg
jmp
sahf
outsb
aaa
mov
push
jge
sub
nop
mov
dec
dec
enter
mov
and
inc
pop
jg
jl
iret
out
mov
xchg
test
loope
shll
dec
mov
mov
mov
dec
enter
out
scas
lock
pop
imul
divl
nop
mov
dec
xchg
xor
or
push
cli
test
scas
lods
fdivs
sbb
inc
xchg
sbb
push
cmp
and
sbb
in
test
mov
and
xor
cltd
test
in
cmc
pop
lock
xor
js
sbb
mov
adc
lahf
das
loope
inc
inc
stc
mov
das
icebp
xchg
mov
pop
enter
test
mov
mov
leave
cmp
les
mov
mov
das
add
into
jo
aam
ret
and
shrb
icebp
subb
call
out
push
shlb
lds
insb
sub
int
popa
loopne
and
dec
popf
and
and
fdivs
fcoms
mov
fildl
jmp
push
xor
push
sub
sbb
in
popa
push
ret
push
inc
out
out
inc
jno
stos
aad
xor
dec
fnstsw
test
lds
sub
jo
inc
push
ficompl
stos
pop
cmp
in
mov
sbb
test
adc
xchg
xor
adc
or
idiv
sub
ret
fistpl
loop
pop
push
in
dec
arpl
inc
xor
or
das
test
inc
pop
xchg
aaa
sub
dec
cmpsb
xchg
jns
sbb
dec
add
push
lds
cld
cmc
add
jmp
push
shlb
jne
pusha
xchg
movsl
dec
jb
cltd
jno
test
push
nop
into
xchg
call
std
cli
into
mov
mov
jl
out
xchg
in
mov
lea
fdivl
pop
mov
fwait
ja
cmp
scas
cmp
mov
mov
imul
in
sub
xchg
mov
imul
icebp
push
xchg
mov
push
cmpsl
fiaddl
std
push
mov
sti
pop
sar
shrb
push
loope
pop
fucomi
jae
jo
rclb
inc
inc
xchg
pop
cmp
or
jl
jns
in
testb
xchg
enter
imull
inc
mov
shrb
scas
and
sbb
pop
add
dec
popa
push
and
bound
mov
cmp
pusha
pop
lock
xor
mov
aaa
in
fwait
int3
imul
repz
sti
outsb
adc
imul
lds
jbe
mov
jb
fcom
xchg
mov
jl
mov
push
shrl
xchg
int3
mov
inc
mov
cltd
je
jp
shr
dec
iret
sahf
push
int
lds
call
xor
mov
inc
cmc
stc
cmp
and
push
cmp
xchg
fstl
sub
out
lcall
fs
das
mov
out
xor
inc
scas
sbb
dec
clc
xchg
inc
inc
lock
clc
xchg
arpl
adc
inc
xchg
into
xor
xlat
xor
nop
cmp
sbb
pop
daa
lock
ficomps
xchg
test
jl
in
stos
add
inc
movsw
addr16
adc
mov
push
cltd
adc
inc
lods
xor
shrl
push
movsl
test
mov
mov
mov
cwtl
fisubrs
xchg
dec
push
divb
leave
mov
xchg
andl
aas
imul
inc
mov
sahf
fcoms
ret
aam
mov
mov
mov
mov
loope
push
decb
sbb
dec
adc
jmp
das
test
ljmp
in
cs
mov
jo
mov
mov
in
add
cmp
ss
cmp
call
mov
movsl
ficomps
or
daa
test
add
push
outsl
loope
lahf
dec
inc
out
lea
cmp
lods
lock
xor
jmp
sub
icebp
daa
jg
pop
sub
in
jno
jmp
cli
or
add
mov
push
mov
lock
out
jle
lret
jne
jp
inc
cmp
mov
jg
jecxz
adc
xor
inc
jne
pop
jns
mov
dec
hlt
xchg
mov
cmp
cmp
hlt
fbld
xor
mov
aaa
test
xchg
loope
inc
xchg
and
xor
fldl
notb
test
movsl
gs
lods
push
inc
aad
repz
sbbl
lock
in
jns
dec
lds
cmpsl
daa
xchg
insl
inc
repz
ficomps
adcl
cltd
push
cmp
clc
push
shr
and
inc
jb
mov
mov
test
leave
cli
stos
mov
stc
inc
adc
orb
xchg
rcl
orb
outsb
mov
pop
addr16
dec
and
in
push
mov
pop
jnp
mov
and
insl
cmpsb
movsb
enter
mov
jmp
xor
mov
mov
mov
cli
icebp
fs
test
into
ljmpw
sub
cmpsb
test
jp
loopne
cltd
xchg
sub
aam
ret
xchg
cmpsb
jge
sbb
dec
jle
aad
imul
mov
push
imul
pop
leave
mov
shlb
scas
std
scas
popa
ret
aad
cmp
into
sbb
cmp
mov
mov
subb
pusha
sub
insb
sti
mov
inc
sub
xor
jg
ds
fidivrs
or
add
mov
add
pusha
rorl
outsl
dec
push
cmp
mov
and
and
pop
ljmp
or
fildll
mov
cli
xchg
xchg
xor
int3
sub
lock
and
inc
jns
outsl
pop
pop
bswap
lods
les
push
ficompl
subl
clc
xchg
jg
add
mov
repz
jo
push
lahf
lcall
into
cmpsl
xor
xchg
dec
push
push
out
add
jb
pop
jns
lret
lods
cs
in
dec
lds
fnstenv
inc
xor
xchg
testl
or
das
cmpsl
mov
adc
arpl
sbb
gs
inc
int3
mov
add
dec
nop
xchg
in
xchg
in
mov
cmp
faddl
inc
inc
call
mov
jns
jmp
icebp
movb
cld
inc
add
pop
das
inc
xorl
subb
push
jg
cmp
nop
lret
push
testl
mov
mov
jge
inc
mov
fistps
repz
fdiv
scas
xchg
loopne
test
adc
out
dec
mov
test
fdivr
sbb
js
sbb
jle
pop
out
les
cmp
icebp
aam
aad
and
inc
repnz
movzwl
mov
repz
fnstcw
xor
xor
cmp
push
nop
fcmovnbe
adc
mov
shll
popf
sub
dec
xor
movsl
enter
sbb
out
add
ljmp
dec
sub
addr16
mov
pop
in
jge
inc
or
xor
mov
addr16
jns
pushf
lds
sbb
push
sbb
mov
mov
and
pop
mov
sbb
add
jge
out
testl
mov
out
cmp
push
push
cmp
and
push
and
aaa
inc
or
xlat
stc
scas
adc
mov
jecxz
adc
jle
and
mov
and
cmp
sub
arpl
dec
mov
push
xor
cltd
loope
mov
sub
lcall
es
clc
inc
xchg
lret
sar
inc
push
push
imul
inc
mov
imul
sub
or
adc
mov
pop
bound
repz
mov
push
jno
daa
push
xchg
sbb
pushf
inc
pusha
fsubrp
push
jp
dec
in
mov
mov
rep
pop
add
lock
and
adc
xor
cs
xor
mov
es
and
pop
add
xor
addl
adc
xor
loopne
sub
dec
imul
gs
test
ja
dec
inc
arpl
adc
cmpsl
lock
test
inc
test
xchg
inc
push
stos
adc
sahf
push
xchg
stc
sahf
dec
cs
lahf
repnz
lods
iret
mov
push
addr16
cltd
fstpl
inc
loope
xor
pusha
xor
insb
jb
mov
cmp
and
mov
cli
pop
and
xorb
mov
scas
into
xchg
lret
movsb
sub
rcr
leave
and
dec
or
cmc
add
dec
adc
xor
popa
lods
in
sbb
lock
stc
cmp
lcall
mov
addr16
jecxz
test
insb
loopne
ss
lahf
xor
cld
jae
repz
fisubs
xor
or
sub
dec
adc
movb
xchg
push
dec
adc
push
loope
lcall
dec
aad
or
sbb
stos
stos
loop
rcrb
fistpll
mov
mov
stc
fdiv
rcrl
ss
aam
and
movsl
push
lahf
jne
repnz
add
pop
aam
int
mov
rcl
and
inc
aam
mov
or
ljmp
inc
xchg
xchg
fnsave
mov
fsubl
das
repnz
push
push
movsl
sahf
fsubp
push
cmpsl
or
or
pop
jne
push
ja
sbb
pop
mov
push
popa
mov
sub
out
mov
int3
xor
add
adc
jno
sbb
jne
stc
push
xor
popa
xchg
ficoms
movsl
xchg
das
leave
repnz
xchg
ret
and
xlat
cs
push
dec
call
mov
adc
jae
dec
imul
lcall
or
jo
add
mov
fsubr
sbb
mov
mov
lea
adc
add
jo
mov
sti
dec
cmp
push
inc
jmp
stos
add
popa
mull
icebp
jg
xchg
gs
add
pop
cmpsb
fidivl
fstpl
push
or
mov
inc
xchg
dec
pop
bound
dec
cmc
mov
int3
cmc
aam
mov
rclb
jge
push
loop
addb
adc
aad
orl
mov
cmp
adc
sbb
sbb
or
enter
pop
mov
dec
mov
pop
sti
js
cs
mov
sub
mov
loopne
mov
aad
xor
adc
adc
sarb
je
push
int3
mov
aad
loopne
iret
out
sti
pop
incl
mov
adc
xchg
mov
mov
aam
aaa
jle
mov
xlat
or
pop
je
in
sbb
add
lret
push
je
mov
inc
mov
daa
dec
jmp
xchg
mov
cli
rcrl
push
xor
inc
sahf
mov
arpl
pushf
loopne
das
pop
mov
iret
xor
sbb
rorb
addr16
adc
mov
pop
jbe
inc
mov
sub
fildll
jns
mov
xchg
dec
cwtl
sub
pop
pop
or
popa
pop
cmp
mov
ja
and
test
dec
jnp
inc
iret
cmp
aam
adc
lods
sub
sub
sahf
repz
xchg
cs
mov
lcall
sbb
inc
aad
push
xchg
xchg
rcll
mov
mov
dec
cmp
popl
outsl
cmp
dec
xchg
mov
mov
movsb
jmp
andl
mov
pop
xchg
sub
add
das
push
out
jae
cwtl
or
lret
fs
cmp
fiaddl
mov
xchg
dec
mov
out
inc
add
mov
in
in
stos
adc
repz
lods
jmp
or
je
inc
roll
int3
add
int3
outsb
stc
and
into
sub
jge
inc
adc
lock
movsb
cmp
fbld
sarl
mov
or
push
and
push
mov
test
adc
push
pushl
xchg
sub
cmpsl
in
shlb
pop
jle
pop
sub
loope
loope
es
les
lret
pop
lcall
jne
pop
xor
in
shl
bound
xchg
fs
mov
testb
jl
mov
inc
cld
mov
insb
sbb
xchg
iret
ss
int3
lret
push
inc
push
iret
pop
add
fstpt
mov
cmc
sbb
es
movsb
and
inc
hlt
mov
push
jecxz
into
sti
mov
cmp
xchg
repz
testl
subl
shlb
mov
mov
and
out
scas
push
sbb
js
mov
cld
mov
xlat
add
aas
dec
mov
mov
xchg
sub
outsl
mov
in
fidivrl
js
adc
out
test
pop
push
xor
jge
popf
push
push
jnp
xchg
mov
mov
stos
pop
push
lret
xchg
int3
xor
out
inc
adc
movsb
mov
xchg
pop
adc
pop
out
sbb
mov
jne
mov
jp
mov
mov
push
sbb
pop
pusha
dec
jecxz
mov
cwtl
inc
pushf
scas
dec
or
jl
push
lock
mov
in
sbb
push
dec
jl
mov
adc
int3
js
test
cmc
aaa
mov
xor
or
add
xor
stos
jg
inc
bound
mov
add
sbb
and
fldt
pop
jne
dec
jbe
lea
pand
pushl
rcrl
xor
push
lods
mov
adc
pop
dec
dec
in
lea
test
out
in
jnp
add
push
jle
dec
fdivrl
nop
iret
popa
lret
sub
jp
in
imul
sbb
rclb
mov
cwtl
jno
jnp
lods
mov
pop
push
imul
jnp
xchg
jmp
or
push
stos
mov
nop
inc
call
je
push
xchg
push
sub
aas
pop
dec
cli
adc
push
test
lcall
fidivrs
dec
mov
sti
xchg
movsl
clc
add
sahf
sti
push
push
mov
or
jmp
push
cmp
inc
ds
std
mov
insb
xchg
cwtl
fs
jae
jmp
mov
shrl
adc
inc
clc
add
cmp
orl
mov
std
incl
test
outsb
lods
and
pop
sarl
int
dec
rcl
cwtl
jge
mov
sti
inc
pop
in
pop
mov
out
ss
mov
sub
xchg
mov
xchg
ja
mov
mov
ljmp
or
test
jg
pop
lds
pop
into
xor
lcall
sub
push
cli
pop
scas
mov
out
mov
fbstp
mov
dec
mov
xchg
sub
popa
mov
xchg
mov
sub
mov
popa
cs
mov
out
sub
jle
icebp
test
add
clc
sub
push
mov
push
shrb
add
sbb
mov
cli
fcmovnbe
push
test
or
push
popf
ljmp
aaa
dec
mov
dec
cld
inc
cld
push
ss
addr16
dec
jmp
jne
out
ljmp
inc
lods
xchg
daa
inc
dec
movsb
js
inc
testl
add
jae
add
out
pop
clc
fdivrl
push
jnp
mov
fidivrl
test
in
repz
xlat
cmp
test
scas
sbb
inc
pop
jle
mov
pop
mov
jo
push
push
xchg
jae
dec
test
insb
mov
xchg
cmp
scas
add
mov
mov
dec
out
push
loop
xlat
cmp
adc
xchg
mov
dec
mov
inc
jo
jbe
leave
insb
mov
dec
out
loop
aas
mulb
les
xor
jp
stos
push
sbb
pop
push
out
sti
cltd
in
test
pusha
into
aam
add
fnstenv
mov
inc
push
jne
sub
xchg
add
popf
int
pop
sarb
cmp
add
or
cmpsl
or
ds
inc
lahf
test
arpl
data16
add
addr16
into
fwait
push
adc
shlb
push
push
cltd
outsb
mov
out
mov
inc
std
shll
pop
loope
adc
daa
insl
and
cmp
pop
push
setp
mov
mov
hlt
sbb
push
out
cli
push
mov
sub
jge
cmp
scas
jg
sbb
lds
int3
scas
mov
out
jmp
flds
lret
sti
scas
cmc
repz
hlt
lds
and
es
jne
cwtl
jbe
stos
out
sbb
dec
out
rcrl
out
inc
push
pusha
pop
ds
mov
shlb
push
shl
int3
call
jno
xor
je
scas
test
and
inc
xchg
incl
or
nop
les
cld
jo
fldt
adc
xchg
add
cs
mov
rorl
inc
fisttps
es
xchg
rolb
xor
lret
ljmp
xchg
jo
sub
pusha
lods
fidivl
ljmp
pop
test
xor
mov
in
aaa
fnstcw
cltd
pushf
pop
sbb
leave
inc
jle
pop
scas
dec
jmp
nop
sub
insb
cli
fimuls
xchg
cmpsb
dec
and
adc
subl
inc
lds
push
mov
lahf
mov
das
or
rcl
or
xlat
popa
xchg
iret
jge
shlb
sub
adc
rcl
mov
lock
pop
sbb
xor
jnp
push
sbb
xor
ss
xchg
or
adc
fldl
cmp
mov
push
sbb
add
push
dec
aaa
and
push
call
mov
or
cmp
cmp
lds
sbb
sahf
in
and
icebp
ret
pop
adc
fistpll
pop
xor
in
mov
and
push
xor
ss
cmpsb
pop
push
in
lcall
push
enter
sahf
cmp
mov
cmp
pop
hlt
xlat
jb
loopne
pop
jb
ds
test
ja
daa
das
add
cltd
jae
sbb
sub
fldenv
cmp
push
sub
imul
xor
inc
and
sub
in
stos
add
cwtl
aas
push
out
sub
dec
mov
jne
push
lret
adc
in
insb
mov
test
add
int3
mov
xor
xchg
je
mov
pop
test
mov
push
test
dec
push
add
ret
add
in
dec
add
xor
out
lds
sbb
in
fs
and
mov
and
inc
inc
pushf
xchg
cs
mov
seta
dec
ss
inc
ss
sarb
mov
ret
popa
jo
mov
mov
push
jge
xchg
movsb
or
clc
jae
daa
sbb
sbb
or
mov
dec
sbb
sbbb
mov
lock
mov
nop
lahf
push
movlps
mov
repnz
jp
roll
inc
sub
jne
divl
fiaddl
inc
hlt
loope
xchg
jg
cs
cli
stos
das
jae
pop
push
cltd
hlt
jl
out
filds
lea
jp
out
xchg
and
in
fcompl
sti
aas
test
mov
mov
ljmp
cs
mov
adcl
sbb
jae
mov
out
xlat
xor
xchg
test
imul
xchg
add
adc
and
daa
pop
bound
dec
test
mov
repz
mov
jmp
pusha
stos
dec
rcr
jp
jbe
mov
add
cwtl
test
sti
adc
cwtl
sti
popa
mov
rcrb
sbb
stos
mov
test
es
stos
xor
cmp
movsl
xchg
mov
jnp
jae
stos
xor
mov
sbb
cld
push
mov
call
subb
xlat
push
sbb
sub
mov
or
lock
pop
push
lea
mov
xchg
or
rolb
mov
jno
scas
xchg
jg
mov
frstor
xor
outsb
lods
push
mov
aad
xchg
mov
add
cld
mov
movsb
pushf
or
shlb
or
repz
je
loop
xchg
fistps
mov
mov
xor
and
loope
xchg
cmp
inc
mov
mov
sbb
cs
jp
fldcw
fs
jo
xor
pushf
mov
lods
js
enter
or
mov
sarb
lods
cmpsb
popf
dec
rcr
xchg
xor
in
data16
movsl
mov
stos
cld
mov
pop
mov
fs
mov
mov
rorb
outsb
inc
iret
leave
xor
and
sbb
sbbb
dec
int
sbb
mov
shll
xor
mov
cmp
cmpsl
and
mov
in
ja
das
mov
lret
inc
inc
fisubl
xor
cmp
jg
adc
xchg
shll
mov
mov
pop
jns
adc
pop
dec
inc
pop
bound
sub
push
jno
mov
test
adc
cmp
jne
xor
lock
xor
iret
and
adc
xchg
mov
frstor
cmpsl
mov
out
popf
mov
int3
std
in
filds
cmp
pop
adc
cmp
inc
std
call
add
cmc
inc
andl
or
cmpsl
and
arpl
mov
js
xor
loop
lcall
jns
mov
or
pop
aas
mov
stc
push
outsb
cmp
into
cmp
call
mov
mov
mov
sbb
orl
iret
iret
mov
mov
movsb
fsts
inc
sub
fsubrl
xchg
jmp
stc
xor
mov
mov
mov
xor
or
mov
into
lcall
addr16
iret
shrl
hlt
pop
fwait
lds
cmpsb
data16
xor
push
sbb
fisubrs
ljmp
lods
rcrb
ljmp
pop
incl
adc
or
mov
mov
sub
push
mov
jae
hlt
mov
addl
or
cmp
in
aad
lods
pop
pusha
lods
lock
and
mov
add
dec
push
shll
into
add
fisttpll
subl
adc
shl
fisubrl
leave
out
cli
jecxz
mov
xlat
int
inc
bound
cmp
dec
xchg
dec
stc
movsb
ret
pop
push
imul
pushf
lods
add
mov
push
or
or
movsl
fistpl
test
imul
fistpl
jge
cmp
pop
dec
dec
subb
xor
xor
mov
aad
cmpsb
insl
cmc
push
cmp
mov
aas
sub
jg
lods
jnp
xor
into
mov
dec
popa
lock
inc
or
and
cmp
add
sbb
push
pop
in
cmc
or
pop
cld
or
jmp
inc
int3
cmc
sbb
stos
shll
je
xor
outsb
sbb
je
pop
mov
data16
insb
sub
scas
aad
jl
jno
aas
lea
mov
leave
lods
jne
rorb
mov
cmpsb
pop
xor
dec
mov
subb
push
shlb
add
cmp
mov
fisubrl
jl
dec
hlt
aas
add
out
or
push
outsb
aaa
jp
dec
sbb
sbb
mov
and
dec
subb
mov
push
pmulhuw
jb
ret
lahf
sbb
adc
cwtl
arpl
jge
mov
ret
mov
int3
push
or
dec
pop
stc
pop
lock
psubsw
test
jge
test
outsl
jg
dec
jecxz
pop
aaa
cmpsl
sti
pop
push
lahf
xlat
sub
movsb
aaa
pop
bound
sbb
shrb
push
lods
scas
mov
and
fists
add
jg
add
xchg
or
ret
or
and
push
jp
cmp
dec
push
jl
sub
ljmp
inc
fnstenv
jge
inc
loop
sbb
sbb
cmp
pushf
pop
jne
fdivrs
sbb
ja
push
push
pop
jb
and
push
adc
cmp
adc
sub
jno
push
sub
inc
fsubs
imul
cmpsb
push
int3
icebp
inc
in
mov
imul
mov
push
mov
sbb
xchg
das
and
add
xchg
add
aas
mov
sbb
cmp
sbb
lds
mov
cmp
jle
mov
in
mov
sbb
xor
xchg
subl
das
pop
ja
mov
dec
mov
insl
xchg
fmuls
jbe
scas
cli
out
xor
pop
xor
push
cmp
movsl
push
mov
push
mov
sarl
ja
mov
mov
jo
movsb
popa
cmpsl
jns
adc
or
mov
add
pop
cli
cmpsb
lcall
xchg
mov
mov
shl
and
dec
mov
push
jne
mov
mov
cmp
push
dec
dec
jp
scas
les
mov
je
movsl
ss
aaa
faddl
jno
nop
mov
adc
and
and
push
pop
bts
mov
testb
and
push
loop
mov
movsb
adc
and
sbb
jg
pop
lret
rorl
pop
cmp
cltd
inc
and
mov
lcall
jg
pop
mov
or
int
push
ret
shll
sub
mov
mov
ret
scas
pop
sbb
std
lds
xor
fstps
cs
lds
sarb
popa
cmpsl
movsl
cmp
popa
inc
ljmp
rorl
mov
jecxz
paddsw
hlt
push
lods
mov
cmp
iret
jnp
ret
rorl
mov
sub
jno
pop
loopne
dec
mov
pop
sub
xchg
lea
sbb
jp
sub
sub
jnp
mov
gs
imul
and
test
cmp
xor
mov
cmp
mov
or
mov
jp
rcll
mov
xor
sarb
scas
stos
sbb
leave
xor
jb
or
out
pop
pop
rcl
jmp
js
mov
xchg
dec
test
fstl
dec
xchg
mov
aaa
insb
and
cmp
mov
jb
pusha
mov
ror
shrb
xlat
test
mov
or
aaa
dec
fcmovnu
fs
xchg
in
daa
lock
mov
and
xchg
in
aad
dec
stos
inc
dec
mov
jecxz
xor
mov
mov
jns
cltd
cmp
sub
gs
cwtl
stos
lock
sub
iret
or
or
movsb
in
mov
dec
insb
outsl
in
shrl
cld
fstpt
outsb
sbbb
cmp
cs
test
mov
fistl
xor
add
rcr
xchg
mov
inc
cwtl
inc
out
lds
jmp
aam
out
je
or
out
loop
cmpsb
inc
push
movsl
hlt
nop
mov
sbb
mov
pop
stos
push
push
xchg
add
notl
dec
test
cmc
or
enter
int
pop
addr16
aad
lea
dec
loope
in
and
lea
push
cli
test
mov
push
and
push
mov
push
es
imul
cmc
loopne
lret
sbb
negl
add
mov
cli
out
scas
mov
popa
enter
cld
out
vpunpckhwd
lods
test
sub
mov
push
push
out
adc
lret
add
mov
mov
ror
add
pop
aas
push
frstor
mov
pop
in
and
loop
push
add
xor
pop
sti
subl
dec
xchg
mov
insl
nopl
or
inc
scas
enter
add
mov
mov
jbe
push
mov
inc
jae
adc
dec
fdiv
adc
out
pop
imulb
dec
gs
adc
test
pop
and
std
xchg
xchg
pop
and
repz
jns
sub
mov
mov
sub
popa
fcomps
mov
cmp
mov
cld
icebp
icebp
int3
hlt
movsl
nopl
mov
fisubs
pushf
hlt
loope
leave
pop
insl
fdivs
mov
jg
ljmp
mov
add
outsl
scas
sbb
dec
lahf
add
jmp
jnp
sub
cmp
fxch
sarl
out
or
inc
out
jge
rorb
inc
adc
shr
xchg
push
jo
pop
out
pusha
test
inc
inc
iret
idivl
sbbl
jmp
pop
into
xchg
jno
mov
loope
cmpsl
lods
push
pop
fucomip
shl
mov
mov
cld
mov
stc
sub
xchg
imul
shrb
push
pop
enter
int
push
mov
or
lret
sbb
andb
jno
in
pop
repnz
dec
dec
and
lds
adc
sub
jno
xchg
dec
adc
sahf
sahf
test
pop
dec
pop
mov
jmp
mov
xchg
orl
in
mov
mov
xorl
mov
push
popa
lods
cltd
repz
stos
mov
and
movl
sub
scas
jge
les
push
bound
lods
sbb
pop
insl
movsl
je
xchg
mov
mov
pop
movsl
sbb
and
ret
aam
fstl
add
dec
or
mov
fildl
shlb
hlt
divb
aam
dec
inc
and
fists
mov
fdivrs
adcl
sbb
jns
loope
cmpsl
jp
lods
insb
mov
addr16
negl
imul
xor
and
sbb
jecxz
pop
fdivr
xor
sbb
loope
repnz
out
movsl
stos
push
outsb
mov
dec
jae
push
xor
ss
mov
and
mov
dec
mov
addl
test
push
or
mov
mov
out
jle
and
gs
aam
push
outsb
mov
lods
outsb
fimull
inc
push
pop
jmp
pop
adc
jmp
ljmp
cld
lret
mov
pushl
int3
insb
out
mov
jl
sahf
mov
mov
adc
mov
nop
jno
or
addr16
and
sub
repnz
or
add
gs
cmpsl
xchg
shlb
xchg
and
mov
and
push
aaa
aas
rorl
ds
jmp
dec
adc
adc
lret
je
rcrl
adc
std
mov
mov
sbb
adc
shl
xchg
jno
jne
nop
out
cmpsl
mov
flds
xorb
sub
cmp
and
mov
mul
mov
pop
adc
aas
jp
std
pop
cmp
add
pop
rclb
mov
xchg
inc
jle
mov
and
adc
test
xor
cs
fiaddl
inc
xchg
jae
mov
fmulp
repz
push
lahf
push
jnp
arpl
fistpl
insb
out
xchg
cmp
lods
add
mov
jnp
ljmp
sbb
sbb
insl
add
jge
jecxz
pop
inc
and
adc
sbb
shrb
addr16
gs
popa
mov
or
dec
enter
lock
xchg
adc
jne
mov
jl
insb
sarb
rclb
cmp
sarb
jmp
inc
xchg
sti
inc
cmp
lock
loope
test
les
ret
mov
popa
adc
je
call
cltd
mov
fisttpll
hlt
inc
andb
repz
sti
sub
push
add
adc
test
push
dec
inc
out
jno
std
fwait
ret
dec
dec
ljmp
jns
scas
out
push
jmp
add
xor
xorb
scas
jp
addb
mov
test
pop
xchg
lods
addr16
jbe
add
stc
fbld
gs
xchg
xor
sub
fcmovbe
mov
pop
out
push
push
shl
jge
ds
lcall
inc
mov
jp
adc
cli
add
mov
insl
idiv
fistpll
push
cmpl
insb
pcmpeqw
das
and
jge
inc
shll
add
in
lcall
mov
inc
pop
ret
mov
add
cmp
xor
in
dec
repnz
mov
fdivr
push
push
xor
rcrb
sbb
cmp
mov
sbb
test
xor
in
fs
inc
mov
or
lret
xchg
insb
push
xor
cmpsb
dec
push
cmc
imul
mov
sti
cli
jns
and
pushf
pop
cmc
add
roll
inc
into
out
sbb
pop
fidivs
int
pop
mov
enter
int
outsb
aaa
outsl
jp
pop
adc
pop
dec
sub
fcomip
call
mov
jle
pop
call
adc
push
int3
adc
mov
lret
xchg
and
test
lock
inc
pop
push
xlat
cs
inc
shlb
ljmp
or
or
mov
dec
and
lcall
jle
pop
push
jo
pop
dec
mov
fsubrp
pop
jle
lods
jno
aam
je
testl
mov
or
imul
out
popa
frstor
mov
xchg
js
sub
push
daa
gs
or
push
imul
lahf
cmpsb
scas
dec
fimuls
movsb
push
loope
jne
mov
sahf
or
lcall
inc
loopne
fs
test
stc
cmp
inc
jnp
mov
mov
pusha
push
add
push
fdivs
js
mov
jo
mov
add
mov
lret
ret
or
int
outsl
repnz
push
scas
inc
mov
push
adc
jp
dec
imul
sbb
push
sub
int
loop
jae
mov
mov
and
sarl
test
gs
mov
mov
daa
jae
sti
mov
sub
inc
xchg
jmp
mov
shlb
out
jle
mov
inc
mov
push
sub
je
push
sub
js
or
decl
pop
rorb
push
cmpsb
mov
jle
pop
arpl
pop
add
test
idivb
dec
xor
cmp
pop
mov
or
cmp
ljmp
dec
mov
cmp
fcoml
dec
cmp
mov
sbb
fdivrl
jge
inc
push
sub
int3
sarl
cmp
ret
mov
push
adc
lock
cmpsl
movsl
mov
add
mov
andb
jle
jno
dec
inc
fcmovne
or
addr16
mov
push
pop
cltd
mov
fistpl
and
stos
xchg
sbb
es
sbb
call
adc
jl
test
pop
push
xor
mov
mov
scas
dec
popa
rep
xorl
or
pop
jb
pop
addr16
sbb
push
mov
es
enter
xchg
sbb
loop
sub
repz
push
fldl
repz
and
xchg
and
xor
pop
popf
scas
aas
adc
inc
and
das
push
mov
sub
arpl
mov
pop
fmull
int
addl
dec
lret
cmp
clc
jne
dec
imul
or
fs
cmp
paddusb
inc
push
jne
jge
sub
and
adc
lock
aas
sbb
shrl
cmc
push
lahf
movsb
rolb
mov
mov
in
loopne
movsl
or
data16
push
mov
popf
pop
mov
cld
aaa
cmp
movsl
ficompl
and
sbb
pop
movsb
fmuls
mov
push
add
fs
jbe
repnz
jae
xor
bound
sub
sub
mov
out
xchg
sub
add
pushf
jge
repz
add
data16
cmp
in
pop
stos
mov
xor
jle
gs
addl
sub
das
push
pusha
jle
jb
inc
lcall
stos
les
dec
insl
cmpsb
out
lock
mov
subl
or
lahf
adc
dec
cmpsb
or
pop
test
loopne
das
cmp
jg
mov
div
orb
inc
out
cmp
push
loope
inc
push
outsb
xchg
push
sbb
sub
ret
or
stc
mov
sarl
sti
sub
jnp
rcl
ficomps
mov
add
xor
loopne
int
mov
push
xchg
xchg
movsl
bound
popa
repnz
rcrb
stc
mov
push
mov
je
dec
jbe
std
bnd
aaa
mov
jg
inc
jns
and
jns
lock
sbb
dec
js
loop
sub
mov
orb
lods
cmp
rcrb
mov
add
leave
repz
jl
mov
pop
push
jae
add
or
mov
fucomp
stos
pop
add
dec
repz
fidivs
cmpl
les
xchg
jo
shll
testb
inc
enter
cs
pop
xor
xchg
js
jo
mov
push
clc
cmpl
div
inc
std
imul
dec
jg
icebp
mov
jle
mov
inc
push
mov
ret
mov
xchg
jo
xor
pop
cmc
xchg
adc
jns
jne
lock
insl
push
xor
aad
das
das
fwait
std
xor
decb
mov
std
add
in
cmp
cmc
in
cmp
lcall
dec
mov
push
xchg
sub
and
or
and
test
pop
test
lret
mov
sub
xchg
pop
fisubrs
in
xor
lcall
les
out
cmp
mov
push
sbb
cmpsl
roll
insl
fwait
add
hlt
push
sbb
jge
hlt
ret
sbb
mov
mov
dec
inc
push
xchg
add
jmp
mov
imul
leave
pop
push
fstpl
mov
mov
cmp
jnp
lahf
rclb
ficoml
lahf
testl
dec
adcl
dec
xchg
and
dec
sub
add
notb
imul
test
mov
addl
jbe
ret
pop
test
andl
in
inc
cmp
dec
mov
inc
sub
insb
xchg
addr16
push
cmpb
jae
add
divb
inc
and
and
test
or
repz
stc
clc
das
mov
cwtl
jecxz
ffree
nop
fcomi
mov
cltd
sbb
mov
dec
add
popf
xor
xchg
je
jns
outsb
fwait
scas
xchg
lods
lods
loopne
mov
cmp
or
cmp
mov
out
loopew
jg
out
jno
xchg
mov
iret
je
out
or
in
xor
mov
pop
test
or
pop
fmuls
cmp
push
add
roll
pop
sub
movsl
fsubrl
int3
imul
std
das
es
mov
cmp
aad
sar
mov
mov
aad
xchg
enter
je
pusha
cltd
loope
dec
lock
bound
pop
xchg
lods
insb
mov
jge
out
push
lods
inc
pop
icebp
adc
mov
sbb
pop
cltd
stc
lahf
lock
in
dec
xor
fidivl
jb
jecxz
xchg
mov
popf
out
mov
rorb
out
ds
ja
cmpsb
cmovp
jp
stos
jns
jb
xorb
movsl
sub
hlt
mov
sbb
and
rcrl
inc
fsubs
add
inc
lahf
cmp
jbe
inc
mov
cmp
fildl
jecxz
lea
std
in
out
pop
rcrb
sbb
mov
sbb
add
jb
loope
add
enter
jb
mov
fildl
cli
cmc
jne
lods
mov
push
mov
loope
xchg
xorl
sbb
into
xor
xor
mov
jno
aam
notl
mov
xchg
cmp
pop
xor
ljmp
rol
shl
stos
in
mov
imul
add
cmp
cmp
xor
mov
pop
adc
decl
rcrl
jbe
jle
stos
mov
mov
jg
popf
and
cli
cmc
mul
push
jae
dec
push
fwait
out
xchg
nop
pop
cmp
scas
int
rcrl
sub
sahf
pop
fisttpl
loop
gs
sub
lock
xor
out
mov
pop
imul
mov
orl
mov
jp
xchg
lfs
incb
sbbl
xor
enter
xlat
outsl
notl
mov
mov
and
ret
and
fsts
aas
fdivs
xchg
popf
cmp
push
test
loope
int3
movsl
arpl
int
int
mov
arpl
sbb
enter
std
jne
aaa
mov
pusha
movsl
pop
cmp
dec
movsl
lea
imul
pusha
mov
mov
mov
mov
test
jg
mov
xchg
or
ss
js
pop
sub
push
inc
incl
xor
jge
add
inc
push
in
mov
movsb
int
fwait
jbe
jo
subb
sbbl
popa
stos
scas
xchg
repnz
jmp
or
popa
mov
fidivrs
inc
loopne
in
gs
stc
xchg
or
test
insl
nop
cmp
xchg
ljmp
daa
and
les
lret
imul
inc
cli
adc
pop
scas
push
dec
in
sbb
repz
dec
lds
add
idiv
cmpsb
xor
insl
add
xchg
call
gs
in
sbb
data16
jae
stos
adc
int
jbe
lock
or
adc
and
sbbl
xchg
loope
in
mov
popa
lcall
movsb
or
icebp
in
dec
jno
es
out
cmp
push
dec
sbb
add
cld
inc
xor
add
xchg
pop
jl
pop
shrb
fistps
jbe
cmc
pop
mov
mov
jb
fadd
or
or
hlt
lcall
ds
dec
dec
push
popa
je
pop
jmp
in
and
scas
ficoml
fmuls
pop
enter
popf
add
nop
and
fdivrl
xchg
and
mov
scas
pop
shl
mov
push
sub
jb
out
dec
xchg
aad
ret
fst
push
ret
push
sahf
cli
ja
pop
and
and
mov
outsl
mov
frstor
add
and
jnp
orl
addr16
mov
rolb
ljmp
mov
sub
dec
push
scas
test
push
dec
pop
add
lcall
testb
sub
inc
imul
xor
test
adc
xchg
mov
mov
mov
outsl
sub
bound
push
divb
enter
lea
data16
mov
mov
je
adc
iret
and
jnp
push
cmp
call
fbld
inc
dec
cwtl
fildll
xchg
sub
test
push
dec
jmp
popa
ret
sub
lret
lahf
sub
or
cmpsl
imulb
mov
hlt
inc
cli
mov
repz
inc
push
jp
dec
into
cmp
jne
call
in
fnstenv
inc
enter
jo
shrl
fdivrs
mov
adc
jo
jns
daa
pushf
ljmp
call
and
push
out
hlt
ret
enter
lea
adc
aad
imul
mov
pop
insl
jbe
popf
fbstp
ret
sub
mov
notl
scas
pop
sub
jae
jmp
movntps
mov
sbb
and
mov
out
push
fdivrl
sbbb
cli
jbe
sub
cmp
and
sub
xchg
fsubr
icebp
test
pop
fldt
lahf
into
lock
out
inc
jns
mul
test
add
or
jb
imul
pop
add
sbb
aas
xchg
leave
jno
sub
mov
ja
mov
xchg
mov
xchg
test
mov
mov
jae
imul
addb
dec
cli
jl
or
mov
adcb
movsl
incl
mov
jmp
cmp
adc
cmp
sbb
mov
mov
cmp
add
pop
loope
dec
dec
jl
lahf
cmp
fdivr
mov
inc
and
jnp
jmp
jns
xchg
jecxz
push
roll
sub
mov
fdivl
mov
stos
cmc
movsl
shrb
mov
or
xchg
inc
mov
cs
cmc
xor
stc
int
dec
pop
xor
scas
arpl
add
pop
fs
jb
xchg
jg
push
lret
push
leave
popf
cli
mov
fdivr
shl
push
mov
push
inc
xor
fxtract
test
cmp
test
mov
adc
aad
sti
leave
adc
and
sbbl
sbb
ss
dec
xchg
mov
mov
xor
in
mov
xor
ljmp
fnstenv
xabort
mov
dec
nop
jmp
cld
outsl
xor
cmpsl
repnz
ret
sbb
push
lods
mov
testl
mov
arpl
or
sbb
xchg
xor
out
mov
call
rcrl
cmp
add
inc
push
pop
inc
out
daa
push
loopne
sbb
push
xor
loope
cmp
das
xor
mov
lret
aad
data16
xor
jge
xchg
in
repz
mov
mov
je
fnsave
mov
or
dec
jae
pop
mov
loope
jp
cmpsl
pushf
cmp
loopne
pop
cmp
imul
push
push
mov
ret
cwtl
jge
fmull
lret
sbb
aaa
sub
sti
pop
aad
subb
jg
push
das
mov
test
jnp
rcl
inc
adc
xor
push
jns
test
insb
pop
mov
mov
fcmovnu
sbb
cmp
sbb
jl
inc
jp
push
lds
push
fistps
sub
xor
add
lds
in
pop
mov
push
cli
adc
cmp
rorl
call
ficomps
fmul
and
sbb
push
lds
stos
add
int3
sbbl
jl
dec
cmp
mov
mov
adc
mov
fdivrs
sti
pop
je
cmp
and
jb
jp
mov
dec
lret
and
cld
in
std
add
lret
fwait
inc
jmp
mov
pop
test
xlat
push
add
pop
test
jnp
ss
mov
clc
fisubl
xchg
dec
scas
lahf
mov
imul
cmc
fimuls
popf
mov
ljmp
add
jne
psubsb
jo
and
fdivrl
popl
movsl
adcl
in
je
push
cmpsl
imul
dec
xor
inc
adc
aas
out
cmpw
cwtl
add
add
into
jl
mov
pop
movsl
and
das
movsl
push
push
pop
mov
pusha
fwait
adc
rcrl
cmp
je
or
insb
ret
bnd
pop
int3
les
cltd
pop
cmp
loop
call
movsb
mov
int
test
pop
cmpsl
sbb
scas
clc
xchg
imul
xchg
or
ret
outsb
std
push
dec
mov
mov
push
cmp
ss
mov
cmp
in
push
jbe
mov
mov
push
push
dec
sub
jp
add
inc
iret
mov
inc
mov
or
das
mov
push
xor
mov
aaa
cmp
data16
outsl
xchg
sub
sub
popf
ret
mov
pop
insb
cmp
arpl
ss
in
movsb
sub
cwtl
sub
sub
mov
xchg
jmp
loope
out
dec
push
aas
scas
pop
or
mov
jo
rclb
sbb
mov
std
mov
inc
loop
jecxz
mov
int3
inc
pop
push
or
inc
imull
mov
mov
dec
aad
lret
pop
jne
sti
add
nop
fcmovnu
ss
int
les
adc
sub
push
add
pusha
jne
movsl
jne
mov
mov
jle
pop
inc
push
sbb
out
popa
cmp
dec
gs
mov
mov
out
adc
add
cmc
sbb
lea
outsl
sbb
loop
pop
add
jp
fs
xchg
push
push
sbb
add
push
test
and
stos
out
pop
rorb
in
or
xorl
jb
mov
scas
push
inc
popa
add
xchg
jle
stos
sbb
sub
xchg
adc
pusha
pop
cmpsl
ss
mov
fisttpl
lea
mov
loopne
data16
std
aam
sahf
and
je
ja
shl
test
stos
mov
scas
dec
xor
xor
xchg
jnp
addr16
and
mov
or
lret
stos
cmc
xchg
pop
stc
imul
mov
dec
sbbl
xor
and
gs
adc
add
jmp
mov
repz
js
adc
pop
sub
push
mov
cmpl
incl
fs
pop
jns
out
imul
xchg
dec
dec
lods
out
jp
jmp
pop
insb
scas
ja
mov
insl
out
imul
das
inc
inc
xchg
or
xor
ja
adcl
mov
dec
cmpsb
test
xlat
or
repz
roll
lock
dec
ss
jb
out
lods
push
leave
enter
pop
add
gs
scas
inc
mov
or
mov
inc
daa
mov
and
push
dec
aam
sbb
aas
jns
add
jle
push
outsl
repz
inc
xchg
loop
in
stc
xchg
stc
insl
dec
inc
cmc
imul
mov
in
enter
jb
loopne
mov
out
mov
lock
add
xor
in
scas
popf
xor
pop
sub
aam
jp
cmpb
mov
je
inc
mov
and
cmp
and
cli
insl
lret
das
xchg
fmull
dec
lahf
fistps
jbe
ds
mov
pushf
dec
push
mov
popa
mov
push
mov
cmp
arpl
nop
jne
mov
xchg
dec
push
int
je
and
pop
sub
cmp
out
call
in
cmp
pop
std
jle
out
std
repnz
ds
sub
clc
out
mov
pop
je
popf
outsl
sub
jp
rorl
pop
jl
xchg
or
clc
xchg
dec
repz
pop
divb
das
fneni(8087
xchg
pop
xchg
sbb
mov
lret
cwtl
dec
dec
ljmp
xchg
or
lods
push
mov
sbb
or
xor
into
mov
enter
scas
out
pop
mov
jmp
inc
pop
jne
mov
inc
inc
sahf
xchg
cli
aas
stc
mull
push
icebp
mov
test
mov
aas
mov
jnp
es
pushf
xchg
add
add
jne
jnp
mov
into
push
sbb
xchg
pop
bound
and
pop
sti
pusha
sbb
push
jl
cmp
mov
jnp
in
test
aas
cmp
int3
mov
mov
dec
pop
cmpsl
push
xchg
test
pop
cmp
mov
xor
jns
neg
dec
and
loopne
shrb
and
inc
call
fistl
push
aaa
int
sbb
dec
adc
fiaddl
rcl
dec
int
sub
ret
bound
jmp
fsubl
ret
gs
nop
xchg
jl
mov
bound
mov
daa
and
fwait
or
fcoms
jmp
fmull
mov
fcmovu
sahf
scas
push
ja
or
xor
mov
mov
cltd
sub
xchg
repnz
dec
mov
dec
lcall
lret
or
mov
mov
fnstcw
aaa
bound
mov
push
test
sub
cmp
shrb
xchg
std
jg
push
push
and
arpl
cs
sub
sbbb
or
sub
loope
fnsave
outsb
in
or
out
sbb
ljmp
push
movsl
jle
aas
rcr
sub
push
xchg
dec
mov
push
cltd
test
inc
sbb
fmull
mov
lea
push
add
test
ret
lret
add
push
xor
mov
testl
xchg
call
repnz
mov
nop
mov
mov
add
lret
mov
inc
and
cmp
dec
pop
out
shl
add
mov
push
ljmp
mov
aam
ja
leave
ror
call
pop
jge
and
dec
imul
add
and
xor
pop
mov
shrb
stos
fidivrs
pop
ds
aam
or
or
add
enter
iret
pushf
sbb
mov
inc
pop
and
mov
sub
pushf
scas
cmp
sahf
jecxz
sbb
lds
dec
ljmp
mov
sub
cmc
add
jnp
pop
movsb
scas
popf
je
ljmp
xchg
inc
rcr
xlat
push
or
and
cs
cmp
adc
pop
outsl
inc
jge
add
sbb
jae
mov
push
xchg
push
sbbb
mov
xchg
pop
push
xchg
jb
mov
data16
pop
push
jecxz
sub
push
sub
add
pop
popl
scas
addr16
xlat
xchg
int
adc
lods
xchg
push
gs
outsl
imul
std
sbb
lret
outsb
inc
cwtl
xchg
add
push
jb
pop
and
pushf
js
aad
lret
xor
mov
adc
fadd
jecxz
push
xor
fcomps
inc
out
mov
icebp
add
push
mulb
neg
dec
pop
imul
jne
ljmp
or
insl
mov
inc
daa
inc
inc
xchg
mov
or
dec
jno
dec
outsb
add
add
pushf
aas
jo
enter
sub
inc
sub
icebp
test
jnp
test
push
mov
inc
sbb
push
imul
cmp
mov
push
in
push
jae
inc
jg
cs
sbb
xchg
push
loope
scas
call
inc
insb
inc
or
pop
jge
jp
les
cmp
or
jp
repnz
sbb
pop
ds
and
dec
inc
lods
leave
mov
int
inc
dec
push
lea
dec
add
mov
xchg
sbb
pop
push
inc
jecxz
mov
ss
jge
dec
cmp
pop
pop
and
lret
cmpsl
xchg
inc
imul
add
mov
mov
adc
mov
dec
inc
xor
test
dec
push
enter
inc
mov
or
testl
and
lods
je
dec
les
arpl
je
roll
dec
jge
cwtl
scas
lret
xor
lahf
adc
int
push
loop
push
add
jns
sub
push
fsincos
sbb
jb
sbb
mov
and
ss
inc
aas
xchg
xchg
enter
cmp
inc
gs
dec
shr
mov
pop
pop
test
and
inc
pop
scas
cmpsl
lock
mov
jge
hlt
jl
push
stos
sub
jb
push
ss
das
mov
lds
xchg
mov
aaa
dec
cmp
add
gs
mov
test
imul
sahf
jl
cli
inc
aad
dec
addl
nop
push
icebp
dec
arpl
outsl
sti
iret
and
or
pusha
popa
aaa
xor
ds
fdivrl
jecxz
daa
pop
or
stc
xchg
imul
ficompl
push
pop
pop
leave
adc
lods
sbb
gs
outsl
notb
sbb
and
push
inc
movsl
push
push
dec
pop
in
loopne
lods
or
pop
xor
out
xchg
push
and
and
out
pop
movsb
cmpb
decb
pop
mov
imul
in
mov
xchg
dec
inc
jb
mov
jmp
mov
rorl
inc
cmc
loope
movsb
mov
sub
pop
js
notb
sub
jne
jp
sbb
int
scas
xchg
cmp
mov
es
or
jecxz
pop
and
jmp
push
or
je
jae
xor
xor
push
cwtl
xchg
cmp
inc
add
cmpsb
jge
sub
mov
jle
jne
add
jl
bnd
into
pushf
push
and
in
rcrb
popa
or
mov
cli
or
dec
mov
sbb
inc
jb
inc
cltd
test
push
pop
jmp
sub
add
mov
xor
inc
adc
mov
imull
dec
imul
aam
mov
lret
jne
cmpb
push
lret
es
cmp
adc
jne
xchg
jo
push
and
push
jns
jbe
popf
cld
test
inc
mov
push
inc
cmp
jae
popa
int3
xor
jo
data16
inc
mov
cmp
ret
inc
push
ret
lret
inc
push
inc
lahf
dec
repz
pushf
iret
jae
jle
negb
xchg
push
fists
lods
lods
cli
jnp
mov
push
sahf
shlb
jb
cmpsl
push
fstl
dec
or
jns
xlat
scas
xchg
fnstsw
test
cltd
push
stos
jbe
loopne
test
sub
lea
sbbl
cmc
imul
out
add
jne
test
inc
jl
das
sbb
mulb
in
enter
inc
cld
mov
mov
jo
mov
loopne
ret
into
mov
fwait
ret
adcl
mov
push
or
pop
push
and
mov
mov
loopne
fdivp
stc
inc
inc
push
inc
sbb
inc
orl
js
in
mov
xlat
leave
mov
rcr
in
or
sub
jmp
jmp
xchg
jnp
adc
jo
decl
cmpsl
jl
sbb
lcall
jecxz
repnz
add
xlat
pop
in
mov
or
dec
sub
hlt
and
and
push
loopne
sub
add
out
pop
xchg
fwait
gs
pop
mulb
daa
or
cmp
pushf
mov
clc
loope
mov
or
mov
push
aam
sarb
mov
in
mov
dec
inc
pop
ds
and
loop
xchg
mov
inc
fbstp
cmp
mov
jnp
pop
fiadds
lret
cmp
jp
clc
popa
aam
adc
jl
inc
cld
cli
adc
pop
push
mov
mov
outsl
sbb
int
push
sti
adc
cmp
pusha
mov
adc
sub
mov
xor
and
cmp
mov
or
sub
or
jp
pusha
test
or
dec
int3
out
or
xor
push
insb
mov
dec
sahf
mov
std
mov
xor
daa
adc
adc
xchg
mov
inc
testb
notl
xor
ret
iret
testl
popa
jp
lds
inc
cld
xor
test
loopne
repz
cmc
lahf
loope
loopne
sti
lcall
xchg
stc
call
xchg
movb
pop
lret
mov
sub
insl
add
jbe
sub
rcl
xchg
xchg
lret
jbe
sbb
ret
mov
cld
int
cmp
ror
mov
aaa
movsb
mov
mov
xchg
xor
lds
pop
popf
mov
shlb
mov
mov
out
add
and
jne
js
movsb
inc
aam
cmp
lret
or
mov
out
fmull
mov
addb
dec
int3
or
mov
cli
popf
push
gs
dec
or
pop
int3
sbb
mov
cmc
xor
push
xchg
clc
test
inc
sbb
dec
aas
int
out
adc
lods
in
sub
stc
sub
adc
shll
jns
push
push
loopne
arpl
adc
ficoms
add
mov
cltd
insl
loope
sbb
lcall
ja
inc
lret
dec
sahf
push
loop
fstp
push
dec
xlat
xor
pop
push
mov
mov
lcall
out
iret
xor
js
jmp
ret
mov
and
sahf
sarl
jle
mov
xorl
mov
fwait
sbb
cmpsl
cmpsb
popa
lods
dec
mov
ret
pop
test
shrl
push
xchg
dec
push
adc
test
popl
jne
cmp
out
seta
out
pop
sub
or
je
mov
js
add
mov
mov
jl
icebp
cmp
in
out
out
inc
xlat
jae
mov
mov
test
cld
cmpsl
adc
lcall
cmp
push
xor
xchg
jl
shl
add
jne
js
inc
insb
ret
pop
in
ret
pop
arpl
xor
add
and
add
das
clc
test
fistl
ja
insb
aas
rclb
mov
sbb
hlt
dec
sti
outsl
xchg
ret
outsb
xchg
dec
rol
or
xchg
add
cmp
push
mov
mov
in
int3
jae
stos
cmp
inc
cmp
add
mov
pusha
nop
sbb
lea
cmpsl
nop
lret
xchg
add
call
xor
inc
adc
mov
mov
lahf
loope
xchg
ss
rcl
mov
dec
fbld
mov
xor
into
add
ret
mov
mov
popa
sub
and
ja,pt
dec
jmp
out
xor
jne
in
icebp
sbb
jge
out
xchg
and
jge
repz
dec
mov
fists
jbe
repnz
jl
jecxz
adc
cltd
and
jb
mov
xorb
inc
add
sbb
rcrb
xchg
lock
lcall
dec
cmc
jae
lret
lock
in
loop
mov
aam
cmp
lods
and
mov
sub
mov
ret
sbb
sbb
pop
inc
sbb
pop
cmp
aad
cmp
mov
xchg
cmpsb
insl
dec
pop
add
add
inc
in
inc
ror
rclb
out
movsl
xchg
xor
lret
bound
jmp
shrl
sub
stos
jl
stc
cmp
lea
adc
and
or
xchg
lahf
es
xor
das
cltd
jecxz
push
pop
mov
or
cltd
outsb
cld
sbb
xorl
aaa
cmp
icebp
push
test
fsubrs
add
dec
out
insb
aad
mov
dec
mov
jno
jge
ja
cld
sbb
mov
jp
push
pushf
cs
mov
pop
mov
nop
or
xchg
fisubrs
enter
shl
ja
das
add
jg
repz
ss
ljmp
xor
incl
int
mov
push
or
xor
xchg
pusha
lea
rcrl
mov
les
jecxz
jge
fmuls
jne
jge
in
popa
add
jnp
aaa
repz
dec
xor
arpl
xor
mov
data16
xor
ljmp
call
andl
xor
xchg
push
notb
fwait
mov
fs
cmp
dec
ljmp
dec
ljmp
xchg
mov
or
or
dec
ds
movsb
mov
push
in
cltd
cwtl
adc
clc
pop
aam
imul
mov
mov
cmpsb
add
call
sbb
xchg
push
pushl
inc
shlb
adc
cli
jne
arpl
xchg
mov
or
rorl
push
ds
insb
cmpsl
mov
jmp
fidivs
dec
test
lret
adc
popa
xor
test
mov
lret
adc
xchg
fmull
dec
sbb
fisttpll
or
adc
clc
adc
sub
loop
pop
mov
push
outsb
in
xchg
inc
ss
sub
call
ret
sti
sbb
pop
into
js
daa
dec
hlt
cwtl
test
bound
out
add
mov
ret
outsl
sahf
dec
sbb
add
sbb
mov
push
cwtl
cmp
dec
movsl
pop
loope
bound
push
rclb
pusha
and
std
mov
inc
pop
cmp
inc
xchg
test
test
jns
jmp
jl
lcall
mov
mov
xchg
and
mov
pop
push
cli
andb
mov
aad
inc
lea
push
mov
xor
lea
enter
adc
repz
ljmp
lods
push
hlt
dec
fwait
test
stc
testb
in
loop
add
sbb
and
and
rcr
add
push
and
xor
mov
and
dec
sbb
adc
sbb
dec
fildl
dec
pusha
iret
dec
jge
push
scas
and
out
cmp
mov
inc
pop
mov
insl
jno
mov
sbb
xor
sbb
xchg
and
into
jecxz
xchg
xor
push
loope
jp
sbb
data16
ljmp
fistl
pop
inc
inc
mov
inc
mov
and
lock
arpl
ficomps
iret
sbb
mov
sub
test
mov
arpl
clc
push
fdiv
sub
mov
jge
ret
xor
lds
nop
and
cmp
xchg
add
sub
lods
lds
xor
xchg
outsb
and
push
or
jecxz
mov
mov
scas
int3
rcrb
and
pop
mov
push
mov
xlat
sti
lahf
jnp
xchg
loopne
mov
sub
push
sub
test
dec
rcr
jnp
xor
es
jae
adcb
mov
cli
leave
cltd
push
outsb
sub
shrl
mov
xchg
xor
enter
or
rorb
pop
xchg
jge
jo
mov
into
mov
aaa
sub
xchg
adc
shrl
mov
xchg
cmp
aaa
mov
push
cmc
shll
gs
es
das
outsb
xor
cwtl
shll
push
lods
cmp
or
dec
jb
out
sbb
dec
mov
push
mov
pop
addr16
inc
mov
repnz
scas
icebp
shll
adc
dec
pop
add
inc
mov
add
mov
mov
std
or
mov
sub
sub
inc
mov
mov
xor
cmp
loope
pop
popf
sbb
mov
sub
pop
test
addb
push
ds
sub
adc
js
lahf
icebp
out
cmc
push
dec
mov
mov
lret
ret
inc
pop
mov
add
sbb
xor
sub
movsb
into
cli
shrb
xor
int3
out
push
subb
jge
into
stos
jmp
scas
fnstenv
lahf
outsb
dec
pop
out
cmp
jo
xchg
xor
js
rorl
mov
cs
ret
mov
jae
dec
mov
inc
sbb
adc
cmpsb
stc
inc
lahf
sub
cmp
iret
xchg
call
xor
adc
imul
int
adc
pop
sarb
pop
push
mov
loopne
dec
jbe
push
cmc
add
stos
xchg
jmp
mov
xlat
popf
bound
ret
inc
push
pop
and
dec
jnp
push
scas
mov
out
movsl
mov
push
fisubl
mov
mov
add
std
mov
stc
cs
mov
mov
test
adc
dec
jg
fisubs
cmp
addr16
std
sti
in
xchg
and
cmc
and
push
shl
mov
lret
xor
add
in
sbbb
adc
sbb
xor
mov
pushf
mov
int3
pop
sbb
test
dec
xor
cltd
cld
in
mov
fs
jmp
inc
scas
fiadds
nop
rorl
cs
dec
push
rorl
sbb
push
cmp
lds
lahf
mov
stos
mov
pop
nop
movlps
and
aas
dec
cmp
and
lds
movsb
xor
mov
inc
push
fdivl
inc
lret
add
ljmp
or
jecxz
xchg
mov
cmp
ds
cmc
stc
call
sti
imul
stos
and
jge
sbb
and
jg
mov
bound
fisttpl
imul
jp
push
fildl
cli
pop
mov
xorb
sbb
in
xchg
test
mov
ss
lods
leave
out
ljmp
cmp
leave
daa
jp
dec
cwtl
push
loope
test
add
fnsave
cmpsb
sar
mov
inc
nop
adc
fisubrl
pop
std
xchg
dec
aas
mov
mov
adc
popa
or
aaa
cld
mov
xchg
and
jmp
cmp
std
lods
repnz
jnp
popf
loopne
addr16
xchg
out
pop
push
mov
rorb
mov
and
outsl
sub
fcomp
and
ret
out
je
testb
mov
mulb
lret
push
sub
sbb
dec
xchg
sub
inc
lock
in
test
mov
xor
mov
rol
fcmovnb
rcrl
jne
in
mov
mov
test
push
add
arpl
adc
dec
pop
mov
popa
mov
xor
cmpsl
in
push
orl
push
es
stos
cltd
jns
mov
and
lret
lods
stc
in
nop
scas
push
xor
push
xchg
dec
fcmovb
test
jecxz
int
scas
pop
scas
movsl
adc
push
outsb
gs
inc
dec
sub
pop
sbb
cmp
lret
lret
pop
cmp
insl
xchg
cltd
lret
es
es
push
int3
sbb
daa
mov
icebp
mov
fsubrs
gs
jp
add
xchg
mov
mov
adc
insl
xor
mov
cmp
imul
sbb
dec
dec
xor
xchg
fisubrl
leave
in
and
and
movsb
mov
mov
sbb
rolb
pop
push
inc
xchg
ss
or
or
ljmp
jle
dec
xchg
cmp
or
xlat
xchg
in
lods
enter
jo
mov
mov
dec
aad
push
add
mov
pushf
in
imul
dec
and
jle
call
insl
xor
cltd
sub
mov
addr16
ds
jle
inc
jp
mov
dec
push
add
lods
mov
test
jp
cs
inc
mov
sub
out
daa
or
sbb
inc
inc
mov
cmpsb
dec
mov
cwtl
mov
js
mov
jl
add
sbb
mov
arpl
scas
and
fs
and
xor
inc
xchg
fsubrs
inc
iret
mov
out
add
sbb
jle
icebp
mov
push
lcall
lods
nop
pop
es
andb
pop
das
xor
xor
cld
popf
out
data16
ficompl
mov
xor
aad
sub
jb
call
stos
inc
loop
movl
dec
cmpsl
inc
push
adc
int
mov
bound
sbb
xor
cmpl
jne
push
clc
inc
sarb
push
scas
jbe
sbb
lock
fwait
push
fistpl
pop
push
push
stc
cmpsl
repnz
pusha
addr16
mov
mov
mov
push
iret
outsl
inc
sbb
adc
nop
jp
sub
movsl
iret
jmpw
out
inc
fldcw
push
fmuls
aas
insl
xchg
inc
mov
xor
cwtl
push
cmp
loope
xchg
cmc
icebp
outsl
dec
or
out
push
cmp
cmp
jbe
clc
fs
imul
jbe
adc
lods
dec
push
movq
dec
andb
aad
iret
loop
iret
lret
out
popf
mov
data16
sub
add
es
out
pop
xor
lcall
bound
dec
movsl
iret
mov
add
dec
movsb
in
sbb
shlb
add
pop
push
add
cmp
out
xchg
fucomi
sbb
aad
cmc
aam
jbe
push
or
dec
adc
mov
adcl
movb
push
int3
orl
in
data16
jno
das
inc
push
dec
pop
ret
inc
test
push
lods
mov
jmp
mov
fsubr
lea
pop
cld
jmp
repnz
mov
cltd
inc
and
inc
or
in
push
push
sub
cs
lret
adc
nop
lods
jmp
xchg
adc
mov
jmp
jns
or
lret
lret
adc
cmp
shlb
nop
movsb
jle
xsaves
and
data16
lret
orl
aas
popf
mov
jge
fdivrl
adc
into
stos
dec
cs
and
jbe
fs
jl
dec
rcrb
push
lahf
mov
sbb
hlt
loope
pop
rcr
in
cld
xor
out
movsb
fsubl
push
cli
or
jnp
int
xchg
fsubl
lods
shll
jp
pushl
xor
int
fistpll
out
fstpt
sbb
divl
cmp
mov
pop
mov
mov
sti
push
push
sbb
dec
nop
lcall
xchg
xchg
xchg
imul
sub
jb
mov
or
fidivl
jg
subl
jb
es
sbb
enter
mov
fadd
daa
pop
mov
clc
loope
loop
icebp
and
push
mov
or
outsl
xor
pop
mov
jl
pop
xor
pop
movsb
mov
mov
repnz
aaa
shlb
loope
add
cltd
nop
mov
in
movsb
in
je
shll
sub
inc
jg
ffreep
xchg
shlb
xlat
mov
mov
and
faddl
lahf
jmp
cmp
in
lret
xchg
je
inc
out
std
les
ss
sub
mov
dec
push
jmp
stos
fldl
add
jl
pop
jns
imul
jg
and
ror
jecxz
push
and
jp
jns
adc
dec
imul
cmpl
adc
repz
dec
lods
jge
push
es
es
sahf
pushf
pop
lret
inc
or
sbb
imul
hlt
add
mov
scas
arpl
pop
jl
adc
outsl
out
xor
push
mov
mov
dec
loope
aaa
jbe
xchg
dec
pop
dec
scas
icebp
shr
ss
test
mov
sub
mov
pop
shlb
or
mov
cmp
cs
fldt
scas
mov
call
xor
les
push
sub
adcl
xlat
scas
leave
ljmp
pusha
movsl
loope
mov
add
pop
hlt
xchg
sbb
dec
mov
add
mov
unpcklps
fsubr
aad
mov
xchg
jp
test
test
in
int
mov
aam
nop
dec
sub
insb
sbb
pop
data16
cli
mov
xchg
mov
lods
jb
or
xchg
push
add
punpcklbw
enter
lret
jle
jle
lods
addr16
dec
and
pop
mov
dec
stos
jl
dec
jns
in
sbb
ds
jle
fwait
push
ficompl
or
fxch
iret
sti
fwait
adc
mov
fdivrp
mov
cld
bound
ret
xchg
dec
inc
cmp
xor
ds
and
or
lea
sub
cmp
cmp
xchg
push
push
push
fsubs
inc
fcoml
cltd
fsubp
inc
test
insl
pop
mov
shll
jb
xchg
dec
and
loope
dec
fs
mov
jmp
sbb
or
shrl
pop
movsl
push
push
ljmp
imul
inc
mov
mov
inc
or
test
dec
outsl
jns
in
xor
pop
insl
xchg
jnp
add
sahf
push
pop
stc
xor
js
inc
pop
idivb
in
jp
popf
lahf
fldl
stc
stc
call
test
call
push
push
sub
hlt
or
push
lods
inc
sub
sti
scas
or
stos
stc
xor
inc
fmuls
sbb
push
push
lods
add
cmp
sbb
push
mov
sarb
xor
jmp
fwait
mov
mov
sub
loope
lods
pushf
ds
mov
add
sub
mov
fbstp
jle
mov
xlat
jecxz
adc
ret
nop
pop
push
imul
xchg
jbe
xchg
movb
aaa
mov
xchg
jl
mov
push
adc
sar
and
jp
cmp
xlat
enter
inc
dec
jbe
sbb
jo
stos
les
lods
jl
mov
shll
sbb
pop
adc
mov
dec
ljmp
push
sub
and
ja
aad
into
rep
stos
mov
mov
mov
dec
call
or
pop
push
scas
nop
stos
push
insl
addr16
mov
cmpsb
pop
dec
aad
repz
sti
xchg
cmp
jns
fdivl
fucomip
cmp
dec
pop
ljmp
add
shll
pop
cmpsl
adc
pop
xchg
and
jecxz
cmp
das
dec
jmp
cld
std
aaa
imul
add
enter
out
push
lock
add
clc
iret
aam
or
xchg
lock
les
ret
dec
and
sbb
mov
mov
stc
jae
jno
lods
pop
mov
je
xchg
dec
mov
movb
out
push
repz
pop
mov
gs
sbb
rol
xchg
das
insb
dec
add
sahf
out
repz
push
int3
out
loopne
jecxz
adc
dec
cmp
mov
and
adc
lods
loopne
out
sbb
mov
sub
adcl
push
xchg
negl
movsb
icebp
testb
scas
jl
fs
mov
jno
dec
inc
clc
fs
nop
fidivl
add
xchg
or
es
iret
clc
xchg
pop
and
cmp
out
mov
into
inc
adc
mov
test
push
or
in
aas
mov
jb
xchg
nop
cmpsb
xchg
shrb
sbb
mov
popa
scas
incl
and
pop
xchg
jnp
inc
sub
icebp
pop
cmpb
sub
add
out
adc
push
outsb
sbb
xchg
jmp
fdivr
lds
flds
pusha
cs
iret
inc
jge
ffreep
lea
pop
jns
popa
pop
test
dec
mov
ja
daa
insl
jecxz
and
push
push
xchg
test
cld
sub
les
pop
inc
jno
in
lds
or
jge
xor
jle
mov
lret
mull
jb
sbb
iret
cmp
push
or
pop
movsb
mov
outsb
enter
test
cmp
rclb
in
cmp
rol
sti
mov
dec
negb
pop
fisttpl
add
aaa
gs
mov
popf
aam
imul
loope
fiadds
andl
lods
inc
inc
mov
push
mov
fdivrs
loopne
fiaddl
xchg
sub
mov
inc
dec
repz
add
xor
and
cs
and
cmp
popa
jno
ldmxcsr
aas
imul
mov
cmp
pop
aam
inc
scas
imul
mov
dec
add
cmp
dec
pop
repz
mov
adc
mov
sar
ljmp
add
lret
jg
push
dec
les
out
int3
mov
jb
lcall
fs
mov
or
in
mov
js
jecxz
daa
leave
popf
out
xchg
add
sbb
xchg
loope
je
push
rcll
add
pop
adc
shrb
pop
inc
enter
xchg
test
out
in
daa
addps
fcomps
fisubl
or
jb
sbb
dec
hlt
push
pop
lret
add
and
xchg
push
int
pop
jmp
jo
dec
sub
aam
lock
xchg
pop
leave
pop
aam
fimull
pop
popa
xor
pop
shlb
cltd
jg
pop
dec
mov
mov
in
in
addr16
adc
sub
jns
mov
cs
or
lahf
xchg
inc
xchg
iret
rorl
clc
inc
fidivl
dec
aad
add
inc
cld
xchg
shll
scas
jle,pn
je
aas
cltd
cmp
push
add
das
adc
pop
mov
stc
push
mov
push
dec
xor
sbb
xor
pop
pusha
cmpsb
inc
jl
adc
shrl
aaa
jb
fisubl
cmp
js
cmp
sti
sbb
leave
movsl
xor
lods
jle
mov
sbb
dec
inc
xchg
or
mull
fsubl
in
or
fidivl
push
sub
cmpsl
cs
out
mov
insl
frstor
mov
stos
inc
mov
imul
clc
push
dec
in
imul
rcll
sahf
xchg
mov
int3
aaa
and
or
adc
out
sub
add
cmp
jno
aaa
or
sarl
jle
es
test
mov
loop
mov
loop
add
ror
rclb
xchg
gs
push
pop
ficompl
mov
pop
pop
push
or
xor
imul
loope
add
orb
nop
scas
pop
scas
les
testb
mov
sub
xor
mov
xor
push
ja
addr16
push
push
inc
adc
adc
dec
xor
adc
xchg
dec
mov
std
push
and
mov
ficoml
sbb
lcall
inc
lea
add
mov
mov
pop
add
add
ljmp
rorb
xchg
mov
xor
cmp
dec
in
fucom
pop
and
stos
xor
incb
cmp
dec
inc
stc
xor
hlt
pop
cmp
inc
mov
xchg
pop
push
into
cltd
cmp
test
test
cwtl
mov
enter
shrl
push
subb
adc
lahf
sub
sbb
scas
xor
pop
jmp
ljmp
and
mov
pop
mov
inc
jp
jb
in
push
daa
test
lea
sub
xchg
mov
call
ror
jg
mov
xchg
rcll
sub
xchg
xchg
sub
fwait
ss
int
lret
mov
in
mov
pop
pop
push
sub
add
push
cmp
cmc
arpl
and
jo
mul
mov
xchg
data16
or
mov
sbb
inc
lds
xor
test
cmc
sub
pop
into
or
stos
mov
push
xlat
jecxz
jnp
das
inc
or
into
dec
mov
mov
rcrb
out
lods
outsl
aaa
sub
add
push
pop
mov
mov
rorl
aas
push
mov
sbb
fwait
add
jmp
ja
fisttpll
push
and
decl
dec
push
scas
push
cmp
lret
or
out
in
xor
mov
shlb
fstpt
ljmp
mov
push
push
stos
dec
or
xor
xor
mov
mov
mov
scas
xor
sbb
jl
cli
lock
sbb
ss
call
jg
pop
inc
push
mov
dec
cmp
cmp
test
xchg
inc
in
jle
repnz
or
jecxz
ficoml
sbb
sahf
lods
sub
jge
mov
mov
lods
mov
sbb
subl
ret
shll
cltd
fcomi
aad
ljmp
mov
hlt
mov
jne
bound
add
dec
jecxz
rep
push
repnz
push
push
pusha
nop
movsl
lahf
bound
push
add
sti
inc
sub
in
mov
enter
cmp
adc
cmc
je
jno
cwtl
cmp
in
scas
cmp
popf
jno
cmp
cmp
inc
mov
push
jg
pop
loope,pn
adcb
popl
test
jge
adc
adc
xchg
jp
dec
or
out
xor
aam
iret
andl
insb
ds
aaa
jp
fdivs
cmpsl
xor
outsl
repnz
js
inc
xor
jle
add
shrb
inc
push
je
jge
das
scas
movsb
pop
add
mov
lcall
sahf
xor
fadds
imulb
or
pushf
fst
fsubrl
loopne
rorl
ljmp
dec
adc
int
imul
adc
in
cmp
outsb
adc
or
lahf
inc
xchg
std
cwtl
push
fwait
adc
cli
dec
mov
lret
fwait
dec
loopne
jne
dec
push
mov
mov
cmpsb
ds
push
lock
cmpsl
or
xchg
aas
cwtl
adc
mov
or
mov
popf
lea
test
aaa
dec
aad
out
sub
mov
addr16
test
adc
jmp
cmp
std
cld
add
jg
rorl
cmp
cmpsb
stos
lea
stos
mov
jo
aaa
adc
loop
xchg
jnp
jnp
enter
xor
out
lds
pushf
xor
jge
repnz
bound
clc
mov
jl
xchg
sub
xor
call
jns
mov
out
fsubs
aad
mov
je
lods
test
or
movsb
shlb
xor
out
popf
stc
cmp
mov
int
mov
and
cmp
int
aam
or
inc
mov
mov
sub
cmpsl
xchg
addr16
dec
mov
push
lahf
adc
and
mov
lahf
jb
mov
scas
push
or
sub
pop
cmpsl
sbb
push
pushf
test
shrl
mov
pop
jnp
xchg
sub
or
xor
jo
sub
scas
mov
outsl
inc
and
rcrl
pop
daa
iret
or
movsb
push
dec
and
dec
mov
cmp
cmp
inc
inc
mov
jle
idiv
add
out
pusha
ret
stos
push
xor
or
cmp
lcall
movsb
lcall
int3
lea
xor
jb
out
pop
mov
sbb
scas
out
add
jb
jnp
fbstp
sti
test
lahf
adc
rolb
mov
mov
lret
nop
sub
cmp
clc
repnz
mov
fwait
mov
jge
mov
push
leave
es
aaa
leave
jnp
mov
inc
xorl
ret
popa
xchg
or
ficompl
mov
rorb
jae
xchg
dec
xor
adc
shll
mov
dec
xchg
outsl
and
in
or
out
les
jecxz
push
add
fsubrs
mov
mov
bound
cltd
jns
rclb
jecxz
inc
add
cmp
jp
or
mov
aaa
fwait
jmp
ds
add
imul
xchg
fstpt
sub
mov
pop
fists
ss
fdivs
push
adc
pop
fcompl
mov
xor
fimull
xor
stos
das
addb
cmc
or
xor
jle
dec
cltd
cmp
int
sbb
arpl
scas
and
add
stc
lea
jnp
push
jno
inc
stc
call
xor
out
in
xlat
sahf
stc
out
mov
lock
and
mov
stc
mov
mov
cmp
roll
pop
imul
bound
lcall
mov
ret
inc
ss
jns
adc
lods
or
call
sti
fs
jecxz
push
iret
sub
sub
in
fisttpll
mov
and
inc
mov
stos
test
lret
jg
rorl
jmp
xchg
mov
stos
rorl
sbb
popa
rclb
fldcw
movsl
fstpt
je
sahf
scas
push
movsb
add
mov
xchg
ljmp
adc
dec
inc
mov
jmp
push
scas
dec
add
testb
lret
nop
sar
adc
fistps
or
xor
andl
pop
pushf
fcompl
xchg
pop
dec
rorb
cwtl
jns
subl
dec
sbb
xor
in
fstps
ret
mov
dec
inc
or
pop
sub
ss
rcrb
xchg
or
jbe
repnz
ret
push
lds
mov
push
cmp
test
mov
sub
loope
mov
jge
inc
adc
pop
push
out
jb
dec
xchg
adc
subl
or
pusha
int3
dec
dec
xorl
and
push
dec
scas
subb
sbbb
repnz
mov
addr16
rcrl
outsb
and
xor
lahf
or
xchg
out
jo
mov
mov
fs
rcrl
dec
sbb
pop
mov
xchg
lods
jo
imul
and
adc
lock
xchg
jge
je
and
lret
int
enter
fstpl
dec
xchg
sbb
jecxz
mov
pushf
imul
loopne
repz
iret
xor
stos
adc
cmpsb
outsb
mov
sub
sti
xchg
shlb
roll
mov
cmp
int
adc
movsl
int
cwtl
leave
xor
adc
pop
sbb
cmp
inc
ret
jg
jmp
dec
test
movsb
enter
push
movsl
jl
aad
cmp
test
imul
shlb
das
push
dec
xchg
push
push
jnp
gs
xor
or
sbb
jmp
loopne
rorl
mov
lea
idivb
adc
lods
add
cmp
shlb
lock
aas
pop
rsm
push
stos
bound
nop
jp
sbb
cmp
inc
inc
pop
cmp
adc
popa
les
pop
repnz
and
scas
mov
jmp
sub
and
sub
lcall
mov
dec
je
jmp
adc
add
pusha
xcrypt-ctr
cmpsl
pushf
mov
call
psubb
push
xchg
mov
add
lcall
inc
adc
pop
ja
mov
cmp
std
cmp
mov
mov
or
jno
adc
in
jg
sbb
clc
cmp
aaa
cmp
dec
pop
lcall
out
adc
cwtl
gs
sub
cltd
cmp
sub
ds
push
mov
mov
decb
jae
into
dec
jge
jno
lods
pushf
je
add
in
popa
xor
in
mov
inc
jne
mov
pop
adc
ds
lock
sbb
jno
stc
mov
insb
jg
lcall
sahf
in
mov
jbe
lds
movsb
testl
adc
dec
repz
push
adc
sahf
das
cmp
adc
dec
and
mov
xchg
pop
movsl
rcl
outsb
add
mov
sahf
push
in
cmp
or
insb
ss
pop
rcrl
mov
aam
aaa
test
pop
sub
ja
pop
mov
jae
test
dec
sahf
inc
jbe,pt
sti
sub
pop
pusha
inc
mov
ds
lcall
pop
jmp
lahf
xorb
sbb
outsb
mov
enter
lret
les
pop
adc
add
ret
bnd
and
cmpsl
std
es
sbbb
loope
aam
inc
jmp
jp
push
push
dec
sarl
adc
and
lahf
mov
push
nop
sub
test
notb
jle
pop
pop
ds
dec
xchg
out
mov
shl
fistpl
mov
sub
mov
fisubrs
imul
pop
sub
cld
push
push
out
rol
xchg
jecxz
iret
push
sbb
dec
std
mov
add
cmp
or
mov
roll
xchg
cmp
or
dec
aad
sub
gs
stos
outsb
sbbb
inc
xchg
push
icebp
in
lcall
loopne
stos
sub
bound
inc
xchg
xor
pusha
xor
jnp
inc
mov
sbb
xor
dec
imul
movsb
cmp
jl
data16
call
cmovbe
inc
dec
nop
cmp
or
mov
jo
xor
andl
test
mulb
mov
dec
adc
aam
push
lret
cld
inc
lret
jle
inc
mov
xchg
in
sub
aaa
xchg
xor
adc
rorb
xor
sbb
sbb
jb
sti
pop
mov
je
ss
insb
orb
int3
testl
mov
push
pop
add
and
xor
test
push
andb
addl
data16
mov
dec
sahf
add
or
pop
out
ss
sbb
cmp
mov
out
pop
imul
lods
cmpsl
xlat
xor
cmc
lock
je
addl
nop
inc
pop
and
aas
pop
and
fisubrs
mov
rcrl
subb
gs
mov
jmp
xchg
das
pop
xor
mov
addb
aam
fwait
jns
test
xlat
xor
daa
daa
fidivrs
fwait
pushf
enter
lret
dec
xor
xchg
repz
aad
ficompl
into
cmovb
mov
cmp
mov
mov
loop
lret
pop
pushf
pusha
add
jno
nop
xor
push
ljmp
pushf
imulb
test
stos
and
jnp
cmpps
lcall
aas
push
ja
in
mov
and
xchg
icebp
pop
lahf
add
orb
lahf
push
xchg
dec
add
add
loope
jp
rcr
dec
jg
je
xchg
pop
xchg
scas
btc
rcl
or
mov
cmp
out
leave
and
fistpll
pop
push
cltd
add
mov
mov
xchg
inc
fcompl
mov
mov
fistps
subb
xchg
mov
xchg
dec
mov
out
sub
mov
pop
mov
mov
sbb
push
mov
cli
pop
sub
mov
mov
adc
and
push
push
repnz
out
stos
subl
mov
pop
je
adc
subb
mov
cltd
xlat
stos
mov
ss
or
and
xchg
mov
popf
sbb
stos
test
or
dec
dec
rol
mov
mov
push
syscall
cmpsl
lret
imull
sbb
in
or
xchg
mov
or
sub
and
aaa
push
fsts
mov
int3
loope
mov
dec
mov
repz
in
cld
mov
jmp
ljmp
mov
shll
inc
shrl
jl
jbe
out
int3
movsl
sti
movsl
outsb
sarl
mov
pop
inc
das
out
std
movsl
in
pusha
js
call
pusha
sub
in
xchg
xchg
aas
es
push
int3
inc
ds
pop
dec
cltd
pop
lcall
and
ret
call
lahf
outsl
ds
sub
xor
sub
stos
and
imul
enter
in
ret
movsl
into
imul
popf
cmp
in
dec
sub
cmp
sub
repz
sarb
jge
adc
cltd
adc
inc
mov
jge
jecxz
add
mov
insb
dec
das
and
ds
out
icebp
imul
jae
xchg
push
xchg
mov
jne
add
mov
sub
mov
xchg
je
leave
fcmovne
das
ret
dec
not
mov
mov
arpl
sbb
inc
cmc
fisttps
and
push
sbb
xor
xchg
cmp
addb
movsb
addr16
push
nopl
jg
lods
cmp
mov
das
inc
pop
and
fs
sub
out
sbb
scas
mov
test
jno
dec
inc
lods
push
imul
add
cli
cmp
pop
int
xchg
fistpl
cmc
ja
seto
mov
cs
push
leave
nop
stos
mov
dec
sbb
andl
inc
sahf
leave
insl
pop
pop
or
mov
push
fsubrs
cmpsb
xchg
stc
pop
sbb
sti
xchg
addr16
xchg
ja
push
lcall
adc
movsb
dec
and
push
lods
pop
xchg
jae
mov
sub
scas
jne
orl
rcl
xchg
aad
ds
lahf
mov
rcl
jl
push
cwtl
addps
xchg
in
inc
jle
mov
fistl
add
lret
sub
cwtl
fsubl
adc
les
loopne
jp
xlat
out
test
inc
mov
je
inc
xchg
sbb
sahf
mov
fbstp
and
call
jnp
or
and
jl
xchg
insb
jg
sbb
in
pop
xchg
into
imulb
jmp
stos
pop
cmp
pop
es
inc
adc
aad
mov
push
push
addr16
sahf
jo
icebp
mov
aaa
cmp
fs
dec
in
xchg
mov
add
cli
stos
add
jl
dec
cmp
pop
fcmovu
mov
sub
cli
incb
sbbl
xchg
ficomps
or
das
movsl
sub
push
adc
inc
xchg
cmpsl
jnp
sbb
mov
int3
pushf
outsb
ror
xor
in
pop
push
js
sbb
cmpsb
sub
call
mov
pop
dec
hlt
sahf
jnp
in
test
addr16
ja
js
inc
adc
sbb
test
or
or
sbb
inc
jge
lcall
ja
arpl
mov
frstor
loope
sub
or
lahf
push
sub
stc
pop
mov
push
jae
ret
dec
dec
out
adc
sbb
mov
shl
in
and
inc
sbb
and
sub
cmpl
xchg
or
testb
sub
test
dec
lret
shrb
out
push
stos
pop
lds
fidivrl
neg
xchg
movsb
ret
movsb
pop
insb
popa
cmpsl
mov
dec
add
push
xchg
mov
or
sbb
mov
leave
pop
pusha
sbb
inc
int
sbb
popf
push
mov
pop
std
cmp
imul
leave
call
ja
push
and
inc
sub
pop
mov
xor
jecxz
mov
dec
mov
or
push
xchg
aad
fwait
outsl
das
cmp
lock
add
clc
pop
ret
cmpsl
orps
xor
sub
push
dec
arpl
push
adc
stos
xchg
pop
pop
ljmp
add
mov
rcll
adc
jnp
add
lock
mov
test
call
fwait
push
cs
daa
out
fisttpl
dec
scas
inc
fcompl
dec
pop
jl
cmpsb
mov
sub
xor
mov
or
iret
mov
imul
push
xorl
and
loop
add
pop
in
push
sub
inc
jbe
outsl
jl
int
sbb
ds
dec
ljmp
rcr
fimuls
in
inc
int3
push
mov
pop
xorb
xchg
sub
adc
call
sbb
ljmp
movsb
dec
icebp
loopne
sahf
or
mulb
imul
mov
jne
fistl
stos
lcall
mov
xor
mov
stc
jmp
or
inc
fildll
aam
repz
shll
dec
jae
and
cld
jne
dec
nop
test
cmp
inc
out
in
adc
cmp
add
or
push
jmp
jge
adc
sub
push
cmp
lret
test
pop
cmpsl
les
repz
and
scas
add
cs
jb
xor
inc
loop
sbb
mov
jns
dec
cwtl
and
adc
in
xor
jmp
lea
loope
push
mov
adc
icebp
sbb
inc
gs
in
mov
icebp
loop
xchg
sbb
push
jo
pusha
ljmp
sub
or
sub
pop
push
and
mov
pushf
pop
in
data16
hlt
fsubs
mov
scas
mov
xchg
mulb
dec
jle
add
or
js
ja
out
push
cmp
out
mov
leave
inc
out
xor
imul
cmp
sbb
jae
mov
xor
dec
lahf
shl
lcall
jl
in
sbb
inc
sbb
dec
push
jg
pop
mov
dec
mov
outsl
lret
out
mov
fwait
adc
popa
or
mov
aad
push
xor
sub
movsl
daa
jl
mov
sbb
dec
adc
in
clc
div
lds
jno
aas
outsb
jbe
sub
ficomps
and
stos
and
stos
icebp
sub
rcr
adc
sbb
shl
xor
fidivs
add
sub
shrl
ret
xlat
pop
jg
shrb
data16
stos
std
mov
or
test
insl
cmp
inc
int
dec
or
out
repnz
pop
ret
je
lret
inc
xor
jns
mov
sub
dec
invd
cmp
das
rclb
cmp
mov
jb
inc
jge
adc
push
loope
add
enter
rcrl
rcll
int
or
test
fcmovu
ljmp
xchg
xor
outsl
aaa
dec
pop
orb
xor
mov
mov
push
in
pop
xchg
cmp
inc
fldl
shlb
sbb
jno
inc
adc
xlat
adc
mov
sub
ja
popa
repz
and
stc
call
in
ds
add
mov
fisubs
stos
rcl
call
add
push
sub
jae
pop
adc
xchg
lret
cltd
pop
shll
inc
mov
ret
adc
mov
jbe
rorl
shlb
lock
hlt
pop
cmp
xor
jle
dec
mov
in
cmp
sbb
data16
leave
cmp
pop
push
scas
aaa
mov
xchg
les
xor
mov
aaa
mov
cmp
and
loope
int
fistpl
rep
inc
push
mov
and
add
shrl
ljmp
ljmp
test
and
psraw
fnstsw
or
ljmp
lcall
mov
clc
daa
mov
xchg
push
scas
sub
nop
or
push
inc
sbb
popf
cwtl
lods
clc
adc
movsb
fnstsw
repz
add
sub
mov
sbb
pop
mov
mov
fidivrl
nop
js
lea
sarb
lcall
sbb
xchg
jnp
std
rcll
in
push
cltd
mov
dec
sub
cmp
sarb
out
xchg
and
movsl
mov
push
aam
shlb
stos
xchg
nop
lret
dec
ss
sbb
outsl
les
movsb
dec
lods
lret
imul
ja
mov
inc
shlb
adc
ljmp
jge
dec
sarb
cmpsl
mov
icebp
push
in
add
pop
adc
jge
fistpll
inc
test
ret
arpl
lret
dec
xor
pop
mov
das
lret
daa
test
les
mov
pop
test
pcmpeqb
pop
dec
call
xor
icebp
in
xchg
daa
sbb
pop
idivb
fs
or
ret
xor
mov
inc
rorl
movsb
mov
test
pusha
adc
jns
nop
mov
ficoms
cli
cmpsb
push
out
lea
sti
jb
je
sbb
mov
adc
jp
outsl
cli
jmp
ljmp
std
arpl
ret
push
fildl
leave
mov
scas
push
fsubrl
orb
orb
mov
add
or
adc
or
cmc
lods
xor
xchg
cmp
fs
out
inc
mov
pop
hlt
and
pop
xor
sbbb
push
mov
jbe
mov
sti
popa
pop
loopne
jno
lock
adc
loope
push
mov
data16
mov
mov
in
pop
push
or
adc
stc
ja
and
fcompl
mov
inc
loop
cmp
and
pop
in
fsubrl
int3
jmp
aaa
dec
ret
pop
cmp
mov
xor
xchg
sub
jmp
and
cmp
cmp
jns
push
and
xor
adc
pop
mov
xchg
mov
fwait
icebp
mov
lock
cltd
clc
sub
push
repnz
sub
sub
out
xor
icebp
jno
jle
xor
push
outsb
mov
sub
fnstenv
pop
das
hlt
sahf
dec
mov
pop
add
sbb
jb
mov
xchg
adc
add
fwait
pop
shrb
sbb
outsl
ljmp
lahf
xlat
push
jbe
mov
lea
mov
movsb
shrb
loopne
add
add
and
test
loopne
ljmp
loopne
in
pop
mov
push
jns
pop
push
cli
fldl
dec
fs
mov
push
clc
std
bound
mov
jae
shll
mov
jo
push
fsts
push
cld
dec
mov
pop
loop
iret
movsb
xchg
js
bound
push
rclb
and
int3
adc
dec
ds
dec
movsl
mov
ljmp
sub
mov
mov
inc
ja
ret
aad
sahf
lahf
mov
dec
jns
outsb
sub
fistps
mov
in
movsb
dec
js
movsl
inc
mov
test
scas
test
shll
mov
adc
jle
dec
add
imul
fcoml
xchg
mov
out
test
mov
and
fsubrp
pop
jp
cmpsb
test
xor
sbb
jne
cmp
inc
int3
in
adc
popa
stos
adc
mov
pop
adc
jae
cmpsl
repnz
mov
dec
adc
lahf
mov
fsubrl
lahf
adc
xchg
or
repz
adc
adc
mov
add
rcl
pop
add
inc
mov
push
dec
cmp
lret
push
stos
add
inc
or
rcr
xchg
xchg
push
enter
xchg
pushf
test
lahf
lock
sbb
fnstcw
and
and
shl
xchg
pop
sarl
jge
insl
adc
je
cwtl
out
popf
out
push
sub
pop
inc
jmp
push
sub
sub
lret
dec
clc
and
mov
add
loopne
hlt
pushf
pop
fistpl
ficomps
or
sbb
pushf
popa
push
and
pop
fwait
mov
adc
push
rclb
lcall
clc
push
pusha
jo
xchg
push
mov
icebp
adc
mov
out
dec
hlt
adc
cmp
inc
or
div
popf
repz
pop
scas
scas
hlt
add
xchg
stc
mov
dec
cli
or
repz
adc
jle
loopne
lea
aad
imul
icebp
sbb
adc
pop
ret
enter
adc
sbb
push
xlat
xchg
inc
fisubrl
enter
test
pop
cmpsb
ss
mov
fsubrs
mov
or
nop
loopne
sbb
cmp
inc
push
inc
push
xor
sub
test
jnp
gs
roll
mov
sbb
jecxz
mov
add
mov
and
in
adc
mov
jne
inc
out
sub
loope
jp
pop
rcrb
pop
adc
cmp
daa
mov
outsb
pop
and
inc
pop
xchg
pop
mov
mov
dec
fildl
lret
mov
das
dec
push
vmovhps
sub
pushf
xor
imul
mov
jmp
xchg
cmp
fsub
dec
neg
div
mov
cwtl
xlat
push
mov
pop
jae
sbb
jp
or
mov
and
jns
aam
mov
push
outsb
fsubrl
jo
fwait
mov
mov
outsl
rcrl
in
mov
cmpl
dec
cld
fsubl
inc
add
push
lret
iret
lock
jb
xchg
mov
pop
push
call
movsl
push
sub
xor
pop
mov
sbb
jg
bound
inc
sbb
icebp
test
mov
add
cmp
fnsave
xlat
out
out
push
inc
adc
inc
or
vdivsd
mov
sub
or
std
mov
movsb
ret
xor
outsb
stc
sahf
adc
imul
loope
pop
lcall
adc
fimull
mov
add
push
flds
mov
out
shr
inc
adc
shrb
dec
push
das
mov
movsb
aad
mov
data16
.byte
.byte
loopne
lods
inc
decl
in
dec
rcrb
add
dec
push
push
ret
add
xchg
shlb
dec
rol
jno
mov
sarl
mov
divl
std
push
sub
xchg
or
add
dec
lret
push
pushf
mov
test
test
pop
nop
cmp
sub
xchg
and
and
sbb
mov
movsl
gs
repz
shll
push
mov
jno
cmpsl
mov
xor
dec
test
adc
mov
or
and
inc
lret
fisubrs
pop
clc
pop
pop
in
push
jge
lret
adc
inc
adc
mov
xchg
pop
mov
dec
jno
sbb
pop
bound
push
mov
lret
jbe
js
stos
or
hlt
and
rorb
adc
sbb
jno
sub
mov
call
xchg
cltd
int
movsl
pop
lea
stos
stos
fs
stos
and
ds
sahf
mov
dec
inc
mov
push
cmpsb
lds
dec
outsb
mov
sti
sbb
push
stc
xor
and
cmp
rcrb
push
call
mov
mov
and
push
in
ljmp
and
jb
mov
fbld
inc
out
xchg
leave
push
and
sti
push
pop
jb
movsb
inc
inc
ret
repnz
mov
mov
push
fstps
xchg
lock
xchg
dec
cmpsl
aaa
lret
inc
repnz
sbb
cmc
nop
sbb
or
nop
out
imul
int3
mov
cmp
pop
outsb
cmp
in
inc
dec
dec
cld
dec
mov
jp
mov
sbb
mov
mov
mov
mov
gs
into
mov
xor
sbb
dec
cmp
rcr
dec
sbb
adc
bound
mov
mov
scas
sub
xor
rcrb
decb
mov
nop
icebp
jmp
fisubl
fndisi(8087
sub
xchg
or
add
fsts
xor
mov
ret
xchg
fdivr
pop
lods
add
pushf
xchg
popa
mov
lret
inc
pushf
gs
popa
mov
lea
ljmp
test
xchg
or
or
pcmpeqw
sub
inc
popa
je
and
repz
imul
clc
jns
aad
call
xor
jmp
lds
cld
add
push
pop
fs
lock
cmp
mov
in
cmpsb
scas
mov
cmp
rcrl
in
add
push
or
fdiv
pop
jl
mov
xchg
nop
popf
sbb
rorb
popa
and
stos
push
stc
pop
test
xor
mov
xchg
mov
in
mov
adc
jae
mov
mov
outsb
stos
mov
xor
test
aaa
in
sbb
push
and
add
inc
pop
lods
mov
push
hlt
add
push
and
popa
int3
sti
adc
and
sbb
insl
pop
imul
jecxz
outsb
mov
dec
mov
imul
push
cmc
push
pop
dec
cmp
pop
leave
xchg
and
add
arpl
fistl
xchg
loop
and
pop
push
arpl
addr16
leave
mov
dec
mov
sub
loopne
mov
add
sub
and
repz
cmp
aam
mov
add
testb
jne
mov
popf
pushf
dec
addl
adc
mov
jl
pusha
aaa
dec
loope
rorb
scas
mov
mov
mov
test
ljmp
in
pop
xor
sub
pop
mov
icebp
mov
sahf
adc
or
sub
xor
popa
xrelease
mov
scas
jmp
and
add
arpl
lahf
jg
mov
xorb
inc
ds
pop
inc
lcall
out
pushl
add
lds
in
daa
ljmp
mov
movsb
jge
in
mov
fldenv
ffreep
sahf
pop
data16
test
pusha
shl
es
in
dec
das
cmpsb
sub
mov
insb
enter
lcall
jecxz
shlb
sbb
je
nop
add
inc
push
sti
enter
das
push
dec
mov
inc
sbb
out
cs
fwait
sahf
xchg
daa
cmp
movsb
scas
jne
sub
push
rclb
or
and
xlat
xchg
add
fnstenv
xchg
inc
scas
lods
push
lahf
mov
jp
inc
fisttps
cmp
mov
sub
mov
xorb
fistps
cmpsl
mov
push
and
fsubl
xor
shl
mov
std
lock
sbb
xchg
lcall
aam
shll
xor
xor
mov
fmull
inc
pop
push
mov
mov
mov
mov
out
repnz
push
inc
repnz
cmpsl
push
test
mov
jmp
inc
mov
rol
or
pop
imul
enter
xor
xchg
es
cmpsb
out
loopne
inc
xchg
and
xchg
or
call
ret
and
xlat
add
cmp
or
mov
mov
or
inc
imul
aas
movsl
mov
pop
sub
xor
icebp
adc
out
and
imulb
enter
mov
mov
loope
add
or
cltd
jecxz
cmc
push
dec
out
push
xlat
pushf
pushf
inc
clc
xchg
mov
or
mov
jnp
pop
xlat
lahf
xchg
mov
mov
lods
inc
in
push
mov
push
out
lods
jecxz
shr
js
out
mov
lcall
ret
inc
add
bnd
mov
dec
dec
adc
cmp
loope
push
xchg
das
cmp
inc
movsb
push
push
sub
pop
loope
jbe
inc
loopne
push
cli
call
and
scas
ficoms
adc
lcall
test
mov
or
rol
cmp
push
mov
sub
leave
pusha
inc
test
push
jno
jbe
icebp
iret
and
rolb
cmp
scas
jbe
mov
popa
sarb
fwait
adc
lcall
hlt
es
and
xchg
push
jbe
cmpsb
loopne
dec
insl
inc
ljmp
loop
ret
fildl
bound
rcll
in
fisubrl
inc
jl
dec
jp
adc
jo
inc
sub
cmpsl
push
jno
icebp
pop
and
or
cs
pop
mov
pop
dec
pop
push
xor
cmp
inc
scas
mov
test
in
mov
lcall
sbb
jno
xchg
sub
shl
lods
daa
xchg
push
testl
pop
pusha
mov
xchg
lcall
hlt
pop
arpl
adc
decb
xor
push
movsl
sbb
xor
dec
cltd
mov
ret
popf
and
adc
ja
adc
mov
xor
insb
js
bound
push
movsl
add
imul
jle
push
fiadds
mov
aas
or
pop
push
cmp
mov
or
sub
sub
ljmp
shl
and
xchg
cmp
pop
jnp
je
push
jne
adc
scas
ror
das
sahf
adc
or
test
mov
push
jmp
cs
icebp
out
or
push
sbb
outsb
or
sub
push
mov
popf
int
pop
out
call
or
js
mov
int
movsl
cmpl
pop
adc
inc
push
call
repnz
ljmp
xchg
add
cmp
in
pop
add
rcrl
out
fldenv
jg
lods
xchg
outsl
loop
push
jle
loop
in
xor
in
pusha
fwait
mov
in
mov
push
inc
fldcw
icebp
mov
pop
sti
test
push
xchg
out
lods
jnp
push
jae
lods
or
jb
or
sub
sub
lea
mov
sbb
scas
pop
rcrl
mov
jnp
fucomp
mov
int3
insb
add
lds
movsl
sub
cmp
lcall
aad
sbb
mov
ficoml
sarb
jnp
push
jnp
fdivs
mov
fwait
insb
mov
stos
push
mov
sub
fistl
icebp
xor
nop
dec
hlt
cltd
movsl
std
and
mov
sbb
mov
daa
rorl
push
and
int3
cmp
in
into
sbb
cld
adc
push
popf
xor
in
jecxz
mov
mov
mov
rcrl
mov
sbb
xor
imul
mov
jecxz
xor
xlat
scas
push
cld
test
and
xor
stos
mov
push
cmpsb
scas
int3
int
push
push
xchg
ret
js
aad
lret
push
pop
into
lret
ja
addr16
pop
mov
cli
ljmp
icebp
ret
lret
test
addr16
lea
inc
cmp
sbb
imul
and
lret
fldt
in
scas
xor
mov
mov
outsl
popa
ljmp
leave
repz
cmp
in
out
push
xor
daa
jnp
lock
jo
xchg
inc
mov
add
les
and
xchg
xchg
roll
sbb
cmp
sub
inc
out
push
cmp
sbb
cltd
push
push
shl
test
inc
pop
dec
pushf
repnz
jg
fiadds
jno
je
test
shrb
loope
jae
fisubl
shll
and
and
aad
ret
mov
and
out
mov
push
rorb
xor
fistpl
dec
int
push
ss
jle
or
stos
xor
and
lret
aad
pusha
ret
cmpsl
cmp
test
leave
pop
out
jg
ficomps
pop
lock
mov
add
push
push
outsb
push
dec
lea
fnstcw
out
pop
mov
inc
sub
lret
mov
adc
aaa
int3
jbe
jb
test
rcrb
test
pop
cli
pushf
shlb
pop
orb
outsl
add
push
imul
adc
imul
adc
cmp
push
movsl
scas
add
add
xchg
sti
stos
aaa
imull
subb
out
aas
insb
pop
pop
lds
shl
mov
mov
xorb
jmp
sbbl
cmp
xchg
jb
lahf
xorl
ljmp
pop
mov
jmp
test
pop
fmul
or
int
fs
lea
jne
repnz
stos
or
fs
sbb
into
dec
enter
adc
add
xor
out
xchg
cmp
repnz
pop
addr16
das
push
add
loop
jle
fwait
leave
popf
inc
shl
fisubrl
inc
dec
cmp
in
xchg
insl
lcall
xlat
negl
cmp
jl
mov
std
sub
jg
ret
pop
push
sbb
popa
mov
pusha
jle
lds
je
js
or
bnd
xor
jg
call
mov
xchg
mov
push
dec
loopne
and
sub
aaa
cmc
and
jmp
xchg
mov
pop
fsubp
test
aam
ret
sub
inc
pop
pop
cwtl
stos
scas
rcll
mov
jnp
call
leave
dec
cmp
jno
jge
and
js
lret
pop
lods
repnz
shr
and
in
out
mov
std
dec
movsl
fisubs
in
xchg
pop
add
cmp
push
pop
aam
mov
cmp
mov
outsb
jb
out
lods
jnp
mov
cmp
shll
jg
inc
xor
scas
int3
fwait
jmp
sub
mov
jmp
add
dec
movsl
dec
fmull
lret
cs
adc
cmp
push
movsb
mov
sub
push
cmc
loope
jo
jb
add
ret
sub
out
sub
loop
cmp
jg
jmp
movl
mov
daa
aad
xor
sbb
iret
test
adc
ret
cmpl
push
in
in
movsl
push
push
ds
faddl
test
or
daa
addr16
cmp
sub
popf
push
iret
xchg
stos
or
cmc
push
mov
pop
push
mov
dec
inc
adc
sub
out
lds
nop
insl
xchg
lods
scas
fisttps
cmc
cltd
or
xor
push
sbb
dec
out
imul
popa
xchg
test
scas
add
xchg
or
hlt
fimuls
scas
pop
sarl
rcl
aaa
jns
incl
adc
cmp
sti
or
inc
rcrl
fwait
push
aaa
mov
push
xchg
xor
inc
fdivrs
orb
pop
fcom
iret
in
nop
dec
pop
subb
mov
in
xchg
repnz
sub
inc
ret
jecxz
jo
inc
outsb
or
sbb
pushf
jp
fwait
add
pop
sahf
and
icebp
outsb
outsb
movsl
add
lea
lea
push
jge
or
push
shrb
les
fwait
roll
adc
and
clc
sti
adc
push
mov
int3
pop
inc
and
sbb
mov
repz
popf
lock
and
nop
fwait
mov
pop
dec
or
cmp
pop
mov
sahf
xchg
or
xchg
or
lock
push
lods
rolb
jnp
call
mov
sub
and
sbb
lock
xchg
stos
mov
jecxz
int3
pop
jle
stos
jo
fadd
mov
outsl
pop
popf
xchg
push
scas
add
cmp
daa
fldenv
and
shll
mov
sti
loope
pushf
ss
stos
rclb
out
dec
popa
js
inc
adc
cmp
jg
mov
fidivrl
int3
les
push
sbb
pop
mov
add
xor
jge
mov
jo
jnp
imul
xor
push
cwtl
jmp
mov
jl
shlb
mov
push
outsb
mov
mov
and
or
fdivrp
push
mov
out
push
cld
inc
jae
movsb
xchg
insb
call
fs
test
lea
jno
les
lret
xor
int3
inc
pop
notb
or
jns
fdivs
pop
movsl
xor
pop
in
push
roll
push
jne
jae
lahf
clc
pop
ljmp
shll
jbe
pop
xor
push
sub
fistpll
sub
data16
pop
and
xlat
js
jno
out
in
sbb
pop
push
pusha
fimuls
mov
andb
cmp
inc
sarl
out
and
inc
pop
into
inc
push
sub
cmc
int
sahf
stos
fdivs
inc
call
mov
pop
push
mov
inc
push
stos
mov
jmp
movsl
test
sub
add
stos
adc
jns
mov
outsb
mov
imul
popf
ja
shlb
add
push
sbb
cmp
mov
pop
js
push
ret
mov
int
shrl
cs
jne
lret
mov
push
out
inc
loope
repnz
pusha
and
daa
pop
mov
mov
pushf
addl
xchg
jnp
dec
cmp
and
std
xor
jp
cmovo
inc
sbb
out
xor
mov
iret
push
xor
into
out
mov
xchg
sub
idivl
cld
fcomi
mov
lret
loope
adc
leave
in
xchg
movsb
pop
mov
xchg
push
push
mov
xor
xchg
dec
pop
fwait
popa
xchg
clc
lock
jle
jmp
and
dec
push
jb
sahf
add
mov
stc
mov
movsl
mov
mov
xorb
pop
jmp
in
shrb
sub
jae
test
imul
jno
lahf
gs
jecxz
mov
xchg
stc
lea
push
inc
call
mov
cmovp
lock
sbb
mov
test
push
xor
in
sbb
and
mov
pusha
and
repnz
xlat
aad
pop
mov
xchg
repz
push
mov
jl
lods
xor
scas
das
sbb
mov
jecxz
fisubrs
cmp
xor
scas
and
inc
pop
clc
pop
and
xchg
or
fdivrl
add
push
inc
or
rcrb
arpl
jmp
mov
and
dec
into
sub
adc
roll
sub
lods
adc
jae
mov
jl
rcrl
jle
fnstcw
dec
in
mov
and
jp
jnp
call
push
scas
aam
les
mov
ret
popf
sbb
rorb
lcall
loopne
jl
aaa
pop
nop
adc
cmp
and
dec
movsl
push
mov
dec
xor
lea
cwtl
std
sub
repnz
into
jg
test
jg
loopne
inc
lock
ds
xor
pop
xor
js
dec
ret
popf
loopne
mov
jno
cmp
cltd
js
aas
mov
aaa
mov
in
rolb
mov
mov
push
mov
xchg
ds
inc
xor
sub
popf
ss
test
rcrl
pop
pop
ficoms
cwtl
fwait
cltd
push
lret
pop
adc
xor
dec
js
dec
xor
cmp
cmp
fldl
rolb
mov
fstpt
aad
sarl
mov
pop
int3
jns
push
and
clc
dec
sbb
inc
inc
pop
lock
mov
bound
xchg
jno
and
call
adc
xchg
data16
movsb
jb
mov
cwtl
in
jo
iret
scas
ds
test
fisubs
dec
cmp
test
sbb
lods
test
lock
sbb
push
hlt
fs
xor
ret
in
lret
movsl
dec
dec
xchg
xor
popf
dec
xchg
rcr
jno
mov
jb
mov
and
shr
mov
or
adc
rcrb
sbb
mov
repnz
in
sti
icebp
xor
or
pop
cmp
push
and
mov
sti
aam
push
sbb
jae
movsb
add
ds
add
and
in
xlat
popa
lcall
cmpl
push
pop
xlat
aam
dec
inc
loopne
out
shrl
jmp
cli
in
mov
mov
icebp
repnz
add
fcmovnu
xor
loop
addr16
jmp
es
dec
dec
jg
fcomip
jg
inc
and
lods
lcall
in
sub
sub
pop
mov
adc
push
xchg
das
lea
fnstcw
mov
cmp
mov
popa
add
mov
sbb
divl
cmpsl
jb
cwtl
hlt
inc
adcl
sbb
imul
movsl
sbb
pushf
cmc
fisubs
or
cmp
dec
mov
xor
sbb
push
aad
adcb
pop
pop
xor
jp
loop
insb
xchg
adc
cmp
stc
cs
shl
xor
inc
inc
mov
sub
jg
lods
sub
mov
sbb
sub
adc
arpl
pop
or
shr
and
inc
aam
roll
pop
mov
mov
hlt
lret
cmpsb
in
xchg
mov
pop
adc
shlb
imul
inc
jne
addr16
or
or
jnp
mov
or
jl
mov
pop
in
mov
or
jne
aas
call
jbe
pop
in
cwtl
pop
aad
or
in
or
mov
pushf
dec
add
test
dec
repnz
push
cmp
popa
andnps
pop
dec
add
mov
lret
mov
test
adc
std
popf
scas
call
push
movsl
sub
aam
xor
insb
addl
repz
or
xchg
xor
outsl
insb
add
test
insb
mov
insl
add
xor
fisttpl
mov
aas
mov
pusha
add
mov
mov
in
xchg
je
bound
dec
sbb
jmp
and
inc
cmpsb
scas
lods
mov
jp
ret
mov
imul
imul
inc
ficomps
dec
push
push
sti
inc
cs
inc
pop
test
gs
inc
mov
xchg
jo
mov
ljmp
decb
rorl
xchg
test
inc
das
cmp
mov
sbb
jl
mov
cmpsl
and
jne
mov
lahf
add
js
dec
leave
and
repnz
cltd
ret
xchg
aaa
push
aas
pushf
lcall
dec
clc
movsb
fstpt
xchg
jne
sbb
mov
xor
pop
clc
inc
xor
pop
aad
lcall
fmulp
mov
dec
jg
jno
cmc
and
icebp
sti
pop
and
fcomip
repnz
jo
call
stc
mov
or
mov
push
or
xor
icebp
sbb
movsb
push
ds
cmp
add
sub
stos
push
sub
or
mov
push
data16
mov
cld
aaa
sahf
mov
fldpi
inc
out
out
lds
ljmp
orb
clc
outsb
jo
mov
mov
movsb
pop
inc
in
pop
mov
add
pushf
add
mov
xchg
pop
push
in
dec
sub
js
jmp
mov
sub
dec
stos
sub
ja
mov
cmp
mov
fucomi
dec
test
dec
mov
fwait
pop
push
shll
dec
cmp
and
add
jne
mov
cli
movsb
pop
lds
sbbb
jae
movsb
add
loop
je
fmull
pushf
ret
ficoms
add
mov
jb
sub
mov
xchg
bound
mov
push
xchg
dec
xor
ss
jno
sbb
fidivrs
dec
stos
or
in
cmp
mov
fcmove
out
cltd
or
push
xor
xor
subl
cli
adc
in
mov
std
jns
pop
xchg
jno
popf
in
xchg
or
push
mov
cltd
push
adc
sbb
cmpsl
xchg
mov
in
pop
leave
aam
or
cltd
fstl
loopne
cmp
pusha
xor
gs
and
les
mov
movsb
dec
cwtl
rorl
ffree
int
mov
sub
mov
mov
fcompl
xchg
lret
addl
ss
mov
xlat
mov
pop
shlb
stc
movsb
mov
leave
pushf
mov
mov
mov
pop
sbb
mov
dec
sub
mov
cmp
pop
mov
adc
jmp
scas
lret
lahf
jb
mov
movsb
shll
pop
or
pop
sbb
pop
sub
push
leave
xchg
add
sbb
add
lcall
mov
and
dec
inc
jo
pop
jmp
mov
js
mov
mov
lock
in
call
movsb
mov
sbb
mov
and
lahf
repz
mov
cmpsb
mov
xlat
rorb
sbb
rorl
xchg
jb
mulb
push
and
cmp
mov
lcall
mov
jle
ror
mov
sub
add
jae
dec
fistpll
imul
movsl
pop
push
sub
jmp
fldt
pop
sub
hlt
add
cwtl
and
movb
rcrl
in
or
xchg
clc
adc
xor
xor
test
js
push
pop
mov
ret
insl
in
jg
sbbl
ljmp
outsl
push
shll
adc
xor
leave
and
movsl
popf
cmp
adc
cmpsb
aas
pop
adc
mov
decb
push
push
xchg
inc
adc
movsb
xchg
ljmp
ja
das
push
imul
addb
rclb
outsb
fwait
sahf
lock
inc
insb
in
repz
mov
mov
movb
jnp
cmpl
repnz
sti
aas
cld
push
jl
inc
add
fisubl
mov
cmp
sbb
je
cmp
cpuid
ja
or
sbb
or
pop
jnp
add
test
ret
fnsave
or
mov
sub
addl
jbe
mov
xchg
adcb
dec
dec
dec
xchg
sub
fstpt
int
push
setae
inc
data16
mov
lea
and
mov
fisttps
insl
in
movsb
adc
pop
and
scas
xor
movsb
pop
loopne
inc
lret
jg
sbb
negb
insl
pop
decb
pop
or
imul
inc
adc
pop
or
mov
xor
xchg
sahf
nop
scas
dec
arpl
jg
and
jg
pop
sub
fmull
testb
mov
js
or
clc
jae
sbb
mov
lret
loope
cld
mov
xchg
imul
push
mov
mov
icebp
push
jae
mov
add
data16
push
test
add
jp
adc
pop
mov
push
popa
sub
aam
loop
sbb
jne
lds
sub
iret
lahf
mov
mov
lods
daa
and
mov
mov
in
mov
repnz
orb
bound
repnz
and
lret
cs
and
or
push
sub
das
adc
mov
cltd
sub
data16
loopne
fistpll
cmp
mov
pop
mov
push
mov
aaa
daa
pop
mov
mov
mov
loope
push
enter
xor
dec
mov
aam
cmc
incb
sbb
pop
imul
sbbb
popf
cltd
jb
lods
testl
mov
mov
daa
inc
test
jnp
add
mov
pusha
mov
movsb
push
add
sub
mov
xlat
mov
enter
xor
push
xchg
jmp
cmc
insl
stos
in
inc
cmpxchg
lcall
das
add
or
imul
add
xchg
pop
inc
sar
xor
or
ja
xor
adc
lock
dec
dec
ja
add
mov
jg
adc
lds
into
ja
push
sti
push
xor
lahf
xor
fsubl
repnz
fadd
aad
out
movsb
push
and
push
shlb
push
mov
jnp
cmpsl
pop
adc
adc
mov
gs
ret
movsb
in
and
jno
scas
adc
pop
add
inc
fimull
mov
pop
add
rcl
insb
clc
jp
xchg
mov
or
rcl
in
repz
mov
mov
addr16
cmp
and
dec
sub
aaa
push
fwait
dec
sarl
shr
cmp
mov
lahf
sti
jle
lods
and
mov
ss
pop
inc
or
or
jmp
or
loop
mov
cmpsb
pusha
push
adc
cmpsb
dec
push
xchg
xchg
insl
dec
and
jecxz
lods
sub
mov
and
pop
inc
and
adc
add
mov
cmc
enter
mov
xor
sbb
aas
mov
lods
mov
fiadds
adc
ja
xchg
mov
movsb
cmc
dec
adc
jmp
and
enter
popa
iret
xchg
lods
je
push
aaa
data16
dec
bound
inc
pop
xor
in
cmpsl
loope
and
std
shlb
iret
ljmp
add
pop
in
sbb
fdivs
push
repz
popa
cmp
daa
or
jecxz
jns
popf
leave
push
fwait
mov
mov
insl
mov
popf
xchg
leave
inc
mov
repnz
and
mov
insl
rorb
adc
sbb
jne
out
xchg
es
push
ror
xchg
inc
push
and
dec
rcr
aas
cmp
negl
mov
mov
sbb
bound
js
cmp
push
inc
das
insb
mov
jb
out
jb
xchg
bound
arpl
icebp
clc
sbb
inc
and
add
add
rcrl
out
inc
mov
jmp
fs
mov
fdivrl
xor
les
es
adc
push
jmp
iret
test
das
push
in
and
sbb
out
imul
push
ja
jb
shrb
sub
je
pop
fwait
and
out
aam
loop
imul
adc
jp
outsl
cmp
fisttpll
mov
jle
xchg
cli
cltd
cltd
dec
cs
js
xor
cmp
in
inc
cld
xor
and
dec
cmp
mov
iret
jg
pop
jne
nop
repnz
in
adc
dec
cmpb
in
rep
dec
and
mov
data16
push
test
and
pop
cmp
and
pop
push
sbb
push
cmc
lahf
sahf
in
push
push
xor
sbb
jae
outsl
and
in
add
mov
test
xor
mov
in
xor
and
add
inc
mov
mov
pusha
out
ja
dec
mov
bound
les
cmp
leave
adc
ficompl
std
insb
mov
out
jo
xchg
cmp
sahf
sbb
sub
out
cmp
mov
cli
rol
push
or
or
push
mov
mov
rclb
pushf
push
fiaddl
or
pop
xchg
xchg
push
je
sub
sar
xor
cmp
int3
jnp
mov
inc
ss
outsb
mov
out
leave
adc
push
out
add
pop
and
sbb
mov
or
insb
add
cs
das
jns
and
clc
push
out
pop
in
sub
xchg
xchg
js
and
xor
sbb
out
push
pop
popf
pop
cmpsb
fisubl
add
push
fwait
or
xchg
mov
push
add
lds
aam
dec
dec
sbb
add
add
mov
popa
inc
inc
push
in
xchg
mov
xor
int3
xchg
ffree
xchg
repnz
int3
imul
loopne
jmp
shll
fadd
scas
repnz
xchg
pop
out
out
test
popa
imul
mov
or
jmp
shll
lods
leave
add
adc
dec
lock
popf
inc
dec
data16
pop
test
shrb
jbe
iret
lea
je
outsb
add
or
out
jnp
push
jmp
ffree
dec
xchg
mov
jno
adc
aam
aas
aaa
mov
fiaddl
fsubl
lahf
ficompl
xor
adc
mov
mov
outsl
shlb
add
mov
fsubrs
std
hlt
xor
pop
lea
adc
je
pop
stos
shr
mov
xor
and
fstps
xchg
ret
mov
loope
popa
cmpsb
daa
mov
xor
mov
sbb
pop
daa
sub
lret
aad
out
scas
int
xchg
stos
repz
lock
add
inc
mov
cmpsb
add
xchg
out
and
cwtl
add
mov
or
or
repnz
inc
push
inc
mov
jno
repnz
lret
push
xchg
popa
stc
sub
push
mov
outsb
pop
push
in
hlt
and
mov
and
mov
ficoms
insb
push
and
cwtl
insb
sar
adcl
mov
insl
mov
ficoml
pushf
dec
test
jp
or
push
lock
inc
addr16
add
jne
jbe
or
adc
lcall
mov
dec
jmp
je
mov
imul
add
pop
cmp
in
pop
stos
shrl
cmp
icebp
push
xchg
roll
sti
and
add
xchg
test
loope
dec
mov
mov
in
call
adcb
pop
jmp
dec
aad
mov
pushf
push
outsb
mov
lock
pop
mov
arpl
push
dec
pop
movsb
xlat
dec
das
push
rcrb
dec
add
fwait
pop
gs
nop
out
in
mov
xor
add
sub
xchg
sub
out
pop
aad
out
jge
int
xchg
aas
mulb
dec
push
shlb
push
in
jno
jnp
pushf
inc
jge
pop
shrl
mov
pop
dec
adc
sbb
adc
lds
les
ret
mov
je
pushf
faddl
xor
lds
loope
lcall
lea
push
xchg
adc
int
sub
pop
imul
sub
arpl
mov
loopne
pop
ret
test
andl
dec
rcrb
pop
jg
sar
adc
es
inc
adc
sub
jb
shl
nop
mov
xchg
scas
mov
sub
sbb
in
jno
bound
loop
fisttpll
lretw
clc
mov
outsl
inc
adc
sub
mov
push
xor
mov
pusha
loopne
jl
jae
xchg
sbb
inc
les
push
ljmp
sub
sbb
sub
sti
stos
mov
lahf
lret
sbb
popa
add
jl
pop
pop
icebp
push
lcall
add
cmpsb
inc
and
out
jle
sbb
add
cmpsb
pop
cmp
mov
mov
inc
and
sub
dec
dec
xorl
frstor
pusha
dec
sub
jg
lods
pop
in
jnp
out
out
addr16
or
cmp
xchg
cmp
ret
push
stos
inc
sti
cmc
cltd
jge
xor
inc
mov
pop
lret
sub
sub
test
sub
shrb
mov
in
sub
mov
sbb
call
fs
or
jge
fildll
popf
dec
icebp
dec
mov
out
nop
lock
jmp
test
ss
add
testb
jle
in
adc
sbb
adc
jns
pop
mov
data16
ja
movsl
jbe
fwait
and
jl
mov
cmpsl
clc
test
jle
fsubr
inc
jle
push
or
ret
mov
in
sbbl
inc
lods
shrb
inc
in
pop
test
add
push
dec
jecxz
jge
shlb
std
pop
xor
stos
push
jge
cmp
xchg
sbb
xchg
jnp
into
loope
fidivs
mov
popf
xor
pop
mov
std
inc
js
pop
xchg
nop
pusha
out
aam
xchg
pushf
mov
sub
xchg
xor
mov
inc
push
mov
outsl
movl
aam
inc
pushf
rorb
mov
mov
and
fists
push
add
xor
cli
leave
popa
jns
add
jns
mov
sbb
mov
lea
pop
in
sub
sub
sub
mov
jl
ja
sub
xor
mov
pop
es
das
cmp
sub
outsb
stos
cmp
pop
out
pop
cmp
jne
stos
xor
out
jmp
mov
pop
jnp
xor
mov
call
pop
enter
xchg
fbld
jbe
stos
pop
push
outsl
sti
dec
int
sub
mov
pop
sti
rclb
jmp
and
add
inc
bound
sub
xor
popa
xchg
andb
repz
jo
xlat
popa
outsb
push
dec
icebp
jle
push
in
stos
insl
mov
imul
cmc
jg
mov
xor
push
mov
jecxz
xor
mov
arpl
push
mov
dec
fistps
repnz
mov
mov
jge
movsb
addl
js
imul
mov
fwait
jp
lods
mov
sub
test
push
xlat
loop
out
imul
inc
add
fists
pop
call
addl
mov
ja
cmpsl
mov
jae
out
cmp
xchg
shrl
repz
or
fisttps
jl
inc
jnp
repz
and
pop
lcall
jg
gs
outsl
jg
dec
out
jge
jp
imul
push
xchg
stos
cld
test
push
dec
mov
in
loope
dec
add
fldenv
jg
inc
mov
fstps
xchg
je
fwait
push
xchg
jecxz
scas
mov
jl
and
daa
or
jbe
jecxz
imul
fst
sti
mov
lods
xor
push
pop
rolb
jecxz
mov
lock
mov
scas
jle
aam
jmp
test
movsl
loopne
mov
repnz
xchg
mov
sbb
fildll
push
add
pop
cli
test
sahf
or
pop
imul
push
inc
adc
dec
into
sti
sub
sbb
dec
out
leave
int3
test
or
arpl
add
push
pop
pop
mov
and
and
mov
sub
adc
fwait
outsl
xor
test
dec
imul
test
and
sub
mov
loopne
jmp
jnp,pn
inc
sub
add
push
add
and
popf
jo
aas
movsl
xor
push
xor
fcoms
jnp
push
fldl
dec
bound
push
int3
lret
inc
arpl
insb
jo
jge
lds
stos
adc
xchg
xlat
push
pop
jb
push
cmc
mov
cwtl
dec
lods
inc
clc
push
icebp
hlt
adc
aad
jmp
orb
dec
dec
vmwrite
lea
popf
inc
leave
push
xlat
gs
inc
ja
pop
daa
push
jecxz
jge
lahf
les
push
xchg
subb
push
mov
add
aaa
mov
mov
gs
add
mov
or
popf
andl
and
cmp
mov
mov
jbe
inc
in
push
sub
inc
movsl
add
cli
lret
and
call
add
incl
cmp
push
repz
sbb
outsl
mov
xor
sub
ret
lret
mov
push
ja
insb
cmpb
sub
dec
mov
push
xor
and
pop
mov
loope
add
mov
arpl
jmp
fs
push
mov
sbb
sbb
pusha
test
lock
fmull
add
popf
insb
dec
cli
shlb
pop
xchg
xor
mov
test
fwait
rclb
dec
mov
mov
adcb
adc
mov
xchg
hlt
and
and
insb
xchg
mov
push
test
int3
mov
or
scas
fidivrl
xchg
sub
or
cmp
inc
mov
insb
imul
inc
cwtl
mov
ss
and
test
xor
addr16
icebp
dec
xor
pusha
mov
or
jne
out
cwtl
scas
out
pop
mov
xor
popf
out
fs
iret
lcall
loopne
adc
mov
inc
test
push
jne
repnz
pop
lock
mov
pop
ljmp
lret
jo
jns
adc
and
inc
cmp
jae
xchg
dec
sub
lea
fiadds
inc
orl
add
push
hlt
lock
jno
push
push
into
lcall
sub
les
mov
adc
mov
test
in
ja
rcrb
xchg
jae
ret
mov
sub
scas
sbb
xor
adc
fistl
adc
adc
mov
test
push
lret
gs
jns
adc
jp
mov
lahf
xor
aad
xorl
iret
cs
daa
cltd
cmp
or
scas
jl
cmp
xchg
fistl
jno
shl
test
jns
cs
in
rcrb
sbb
js
pop
adc
into
xchg
outsb
sub
dec
sbb
add
jae
cli
movups
jbe
mov
dec
mov
out
inc
cwtl
adc
jbe
adc
pop
push
dec
and
or
xor
aam
jae
addr16
pop
or
bound
scas
cmp
adc
shl
push
mov
call
sbb
out
adc
aas
push
and
ret
inc
clc
mov
inc
ret
pushf
int
mov
push
jne
lahf
scas
push
pop
or
gs
mov
or
sub
push
push
das
mov
cmp
inc
add
pop
cmp
enter
pop
sahf
jns
in
dec
pop
movsb
ret
into
sarb
xlat
test
andb
ret
sbb
aas
in
or
ja
fiaddl
ja
and
xor
pop
out
fstps
sti
cli
mov
ds
insb
fs
mov
out
dec
and
jmp
xor
inc
out
cli
xor
out
mov
push
or
jnp
or
or
sbb
clc
inc
xchg
sbb
jecxz
ret
sub
dec
aad
sbb
pop
mov
mov
ss
fcompl
add
push
cmp
out
test
or
shlb
in
fs
add
sub
add
push
lods
push
iret
lahf
xor
push
pusha
xor
inc
jb
xor
xlat
xorl
mov
mov
test
or
jno
sub
cltd
cmpsl
mov
sbb
repnz
shlb
shr
push
je
pop
ret
ror
inc
mov
jmp
pop
popaw
jle
inc
sub
pop
jbe
xor
in
pop
mov
fimull
cmpsb
pop
add
movsb
jl
jle
xor
xor
and
mov
jmp
dec
rclb
stos
jle
hlt
stos
and
pop
mov
xchg
lods
mov
call
xchg
out
aas
lret
stc
cmpsl
xor
add
mov
or
and
jecxz
jnp
shlb
mov
add
xchg
and
repnz
pop
mov
push
sbb
jl
imul
pop
inc
adc
or
inc
jo
enterw
pop
jge
sub
in
repz
jno
pop
and
sbb
push
jge
pop
stos
mov
mov
xchg
adc
ljmp
sbbb
cmp
insl
mov
mov
push
les
push
shrb
adc
mov
add
jmp
adc
sbb
mov
push
out
ss
lret
pop
loop
adc
mov
jae
mov
out
stc
mov
add
in
ja
jb
add
sub
mov
inc
xorl
xchg
cmp
stc
sub
arpl
adc
dec
sub
out
pusha
enter
inc
fists
push
dec
xlat
insl
pop
ds
adc
sbb
xchg
xchg
mov
leave
sahf
stc
loop
jge
dec
test
adc
dec
lods
xchg
mov
sti
lods
inc
add
ret
aad
andb
ljmp
ret
out
popf
jno
cwtl
jb
push
fs
pop
mov
aad
add
clc
ficoml
test
adc
lds
mov
push
dec
in
sbb
outsb
imul
adc
fdivrs
aad
jo
aam
mov
shlb
popa
jp
and
sub
adc
pop
rolb
ja
dec
jbe
inc
jmp
jno
mov
pop
pop
fmull
icebp
outsb
push
insb
xchg
push
in
push
fistl
lcall
jg
xlat
sahf
xor
pop
jp
popa
jbe
pop
push
pusha
and
mov
in
sub
icebp
mov
insb
lret
mov
jl
mov
out
push
in
adc
lcall
push
data16
in
aad
iret
lret
xor
sub
add
gs
or
sbb
in
mov
jo
jg
js
bound
push
jp
xchg
sbb
jge
pop
xchg
push
xchg
mov
insl
cld
adc
xlat
cmp
sbb
push
es
push
icebp
or
fldenv
sub
bound
lods
in
fcmovnbe
mov
shlb
add
shrb
push
movb
loope
or
add
outsl
push
mov
inc
jg
fndisi(8087
cmp
sub
lods
pop
data16
loopne
arpl
add
jnp
xor
add
movsb
jb
cld
xchg
loop
jl
fidivs
inc
fwait
addr16
jo
cltd
mov
xchg
jno,pt
test
jg
sarb
dec
inc
add
ljmp
or
movb
mov
dec
in
xchg
fs
fwait
xor
mov
loopne
push
fcomps
insb
ret
call
mov
pop
out
aad
repnz
cmp
xor
pop
inc
sbb
inc
xchg
dec
outsb
js
sub
mov
enter
jecxz
cmp
nop
testb
fcoml
jmp
loopne
mov
out
cmp
pop
jno
lods
sbb
cmpsl
cwtl
xor
jmp
pop
add
jecxz
enter
mov
mov
or
loop
lods
aad
or
mov
fldl
pusha
cld
aam
mov
jge
dec
dec
or
cli
jp
lods
test
into
mov
jbe
out
or
mov
pop
xchg
push
jne
lock
out
mov
jge
loopne
and
or
inc
jae
popl
dec
daa
mov
xor
jecxz
inc
sahf
data16
shrb
xor
ss
lcall
mov
mov
aas
dec
test
lret
in
push
clc
loop
nop
aas
pop
jg
aam
in
mov
xorl
or
mov
cmp
test
pop
or
aaa
push
pop
pop
mov
lcall
ret
inc
xchg
xchg
xor
mov
je
xlat
xchg
sti
repz
sub
push
xor
jmp
inc
push
enter
sub
and
clc
pusha
ljmp
adc
cmp
inc
mov
dec
or
out
test
mov
sub
insb
mov
and
or
loop
push
xchg
xchg
lret
cld
ljmp
push
cmc
movsb
jl
jae
inc
cmc
ficoms
js
sarb
scas
dec
adc
nop
fisubrl
and
inc
dec
or
aaa
in
push
dec
lret
pop
call
sbb
xor
push
and
sbb
ficompl
sbbl
pop
add
ror
xor
daa
lds
cli
lods
out
pop
mov
dec
mov
loop
test
cmp
add
cmp
adc
stos
aad
test
int3
sar
loopne
faddl
inc
inc
in
call
push
fstpl
jb
aam
jg
sub
lods
xor
push
in
lea
ficompl
test
adc
scas
arpl
imull
pop
xchg
das
out
and
inc
loop
mov
mov
inc
je
and
int
daa
add
test
cmpsl
fsubrl
sub
dec
add
or
cmp
jae
into
and
and
in
mov
scas
in
add
insb
mov
and
dec
in
stc
int3
add
dec
jns
mov
icebp
and
lcall
leave
test
pop
push
xchg
add
add
gs
push
fcomi
addr16
jecxz
hlt
adc
int
fsub
jge
dec
out
cli
fucomp
std
push
add
fwait
jecxz
repnz
adc
incl
outsl
sub
lret
xor
mov
leave
rcrl
into
addr16
add
out
ds
jae
ljmp
icebp
pop
lahf
fdiv
add
fcoms
ds
aaa
sbb
inc
adc
xor
jae
sub
or
out
xchg
in
or
dec
scas
jb
pop
inc
fnsave
in
arpl
lahf
mov
hlt
cmp
pop
sbb
mov
xor
push
dec
fdivrl
or
mov
scas
out
mov
and
fisttpll
rol
xor
hlt
or
ljmp
add
repnz
mov
inc
enter
mov
pop
pop
inc
xor
adc
sar
test
xor
add
adc
gs
sti
xchg
popf
pop
test
push
enter
jbe
fildl
jae
mov
cmpsl
gs
inc
sti
je
aad
push
lret
nop
mov
push
mov
or
out
fldl
push
ss
nop
sahf
arpl
and
int3
mov
cli
lahf
fistl
in
insl
jbe
push
inc
and
sbb
es
rcrb
jl
test
in
pop
aaa
jb
jbe
cld
mov
jns
dec
hlt
mov
outsl
pusha
decb
imul
jmp
ret
cwtl
jle
enter
ret
clc
addr16
mov
add
jbe
cmp
jp
mov
and
and
mov
cmp
inc
and
hlt
out
fcmovnb
cli
sub
fidivs
int3
shl
cmpsb
inc
loope
out
out
pop
les
jmp
notl
movsb
push
dec
push
cmp
pop
inc
sub
mov
sub
xor
mov
cmpsb
add
scas
mov
jl
xchg
pop
loop
sbb
imul
lods
stc
sti
push
lds
inc
jb
andl
loopne
pop
dec
or
loopne
stc
repz
pop
push
push
outsb
bound
pop
and
test
mov
mov
ja
movsl
adc
mov
mov
xchg
xor
out
fnstenv
repnz
int
pusha
out
or
out
xor
mov
sub
adc
popa
or
sahf
clc
push
sub
rorl
cmc
mov
enter
pop
mov
push
test
popa
push
xor
push
mov
ljmp
hlt
mov
orl
stos
stc
xchg
jmp
pop
jecxz
out
pop
out
jecxz
jb
adc
test
or
repz
push
pop
and
shlb
sbb
mov
loopne
push
and
xor
mov
push
int
movsb
std
jle
lcall
xchg
adc
push
jno
out
mov
into
mov
inc
int3
or
dec
test
cmpl
mov
das
push
xchg
movsb
xchg
test
mov
sbbl
popf
cmovl
pop
loopne
jecxz
loop
out
add
xchg
ret
stc
and
dec
fsubr
pop
mov
std
pop
adc
pop
insb
aad
push
test
ss
aam
mov
and
stos
out
movsl
in
out
mov
cmp
pop
sub
in
mov
push
cmp
pop
sbb
mov
pop
test
repz
mov
shl
std
sti
movb
jnp
dec
jns
das
jp
rclb
inc
or
imul
mov
mov
mov
out
shr
add
xchg
cmc
jl
scas
sar
mov
and
add
push
xchg
cli
daa
mov
sbb
xchg
arpl
rorl
or
addr16
mov
inc
std
adc
mov
push
lahf
cwtl
xlat
cmc
cmc
and
mov
cld
clc
inc
into
rorb
inc
sub
xchg
lret
sub
adc
sbb
dec
dec
adc
sub
xchg
and
jmp
sahf
out
jge
sbb
xchg
xor
les
cmpb
aad
pop
jg
sbb
test
inc
jl
loope
xchg
push
and
test
pop
sub
and
mov
adc
mov
pop
lods
cmp
sub
cmpl
mov
cltd
mov
push
pop
cld
jo
xor
mov
and
lahf
jp
addr16
mov
lods
stos
xor
push
outsl
dec
lock
bound
push
push
sti
mov
cmp
rcrl
xor
inc
inc
push
xchg
sub
loop
mov
mov
arpl
and
xchg
aas
pushf
push
test
jmp
mov
test
psrlq
dec
pop
inc
leave
push
repz
inc
lods
pop
inc
nop
xor
ja
jle
xlat
jbe
in
sbb
xchg
adc
vpaddq
sub
sub
data16
loop
lcall
add
add
and
xchg
cmp
xchg
mov
scas
call
mov
sbb
leave
out
decl
in
dec
ret
pusha
xchg
jmp
jb
xchg
xchg
sub
xchg
and
icebp
and
xchg
mov
test
push
pop
ret
xchg
sti
in
fstl
jl
rcrl
pusha
mov
or
out
or
repnz
outsl
cmpsb
jge
lea
clc
mov
ret
movsl
push
aas
out
arpl
add
jge
or
insl
pop
fldt
repnz
sub
push
dec
xchg
push
cmpsl
enter
xchg
and
jb
jo
mov
sbb
push
rol
fs
lock
jne
or
pop
push
lahf
mov
lcall
cmpsb
or
ss
adcl
xor
xchg
sbb
movsb
mov
gs
ds
xchg
ds
es
int3
je
je
arpl
cmp
mov
outsl
or
out
mov
pop
mov
sahf
sub
mov
mov
movsl
repz
xchg
inc
mov
jle
dec
repnz
sbb
bound
cmpsb
sti
mov
xor
fucomip
js
mov
mov
mov
push
enter
ds
fsubrp
mov
das
push
sbbl
adc
dec
dec
arpl
xor
push
pop
cmpl
push
loope
lcall
pushf
aad
pop
movsb
loop
cmp
fwait
loopne
jecxz
fsubrl
movsb
out
shll
push
loop
das
jp
nop
cmpb
clc
add
loopne
lahf
or
sub
je
hlt
mov
js
int
pusha
mov
mov
adc
inc
mov
sbb
dec
mov
or
and
clc
sbb
cmc
js
lods
fldcw
add
stos
mov
es
test
movsb
mov
pop
fnsave
aaa
les
jecxz
dec
xlat
adc
mov
xor
and
fwait
into
jle
stos
lea
sbbl
inc
cmpsl
pop
inc
xchg
outsl
out
or
mov
jl
cmp
adc
dec
pop
pop
push
sarl
xor
push
hlt
dec
scas
mov
cmpsl
push
xchg
js
and
shlb
jmp
mov
stc
addr16
xchg
pop
scas
sbb
xor
sahf
imul
inc
movsl
int3
mov
fs
cld
lock
je
test
mov
pop
sub
in
xchg
ror
xlat
jo
xor
es
pop
mov
pop
test
sarb
inc
insl
imul
sub
jmp
mov
cld
test
pop
mov
jb
outsb
stos
repz
icebp
xor
xor
jp
xchg
test
xlat
mov
fistps
cmp
lea
arpl
test
xchg
gs
xor
loop
adc
int
jp
xor
stc
mov
or
push
jecxz
push
jne
cmp
lret
lret
movb
mov
je
sbb
xchg
and
mov
inc
fs
adc
mov
push
hlt
nop
les
dec
mov
lahf
rcrl
pop
jg
cltd
pop
or
inc
andl
stos
outsl
fstpt
rorl
add
xor
leave
jae
rol
scas
daa
ret
fwait
test
shrl
pusha
clc
mov
aaa
inc
ror
inc
lods
adc
inc
add
sub
into
cmpsl
adc
lock
rorb
cmp
out
imul
push
rclb
inc
mov
push
sbb
cmpl
add
popf
jmp
seta
fs
mov
jmp
cmp
sub
movsl
cli
nop
pop
mov
rcll
adc
or
sub
aas
xchg
fcomi
mov
mov
add
push
sahf
mov
lock
sbb
sbb
jmp
adc
out
pop
popa
insl
daa
xchg
add
fwait
out
dec
scas
dec
sar
push
filds
fcompl
ret
ljmp
frstor
aas
and
inc
mov
mov
cmp
xchg
insl
xchg
or
cmp
push
pop
push
sub
into
cmp
cmp
jle
outsl
inc
jnp
outsb
cli
sti
andb
jl
mov
roll
inc
sub
lcall
fildl
in
xor
cmpsl
mov
mov
mov
enter
lods
dec
mull
inc
mov
add
cmp
xchg
inc
lods
sbb
stos
and
lret
add
mov
aam
mov
xchg
out
dec
inc
pop
xchg
add
and
je
daa
cltd
xor
sub
cli
add
xor
mov
pop
mov
jne
fwait
jg
push
out
xchg
cmc
lahf
clc
adc
mov
and
out
xor
xchg
ret
fstpt
mov
pop
pusha
enter
shll
xchg
bound
xchg
scas
lds
inc
mov
mov
in
into
aaa
test
jg
mull
jle
inc
insl
inc
adc
movsl
xchg
or
sahf
inc
enter
add
jl
out
out
js
mov
xor
cmp
mov
daa
or
cmpsb
mov
sbb
test
aam
lcall
shr
xor
popa
sub
jecxz
jno
mov
or
sbb
cmp
shrb
bound
sbb
push
and
xor
sub
fadd
imul
icebp
pop
lods
sbb
ror
cmc
int
cli
insb
mov
popf
xchg
cmp
add
cmpsl
lahf
mov
mov
cmc
cmp
outsl
add
mov
mov
mov
cmpb
and
pause
mov
push
mov
pop
mov
aad
outsb
jno
addb
mov
jnp
mov
aad
push
mov
push
das
icebp
rclb
lret
dec
out
outsl
xor
lahf
cmp
cld
xchg
mov
sbb
aam
icebp
fiaddl
das
mov
mov
cli
lods
shrb
ss
fidivrl
xchg
or
sbb
fninit
xor
inc
enter
dec
cmpsb
fildll
lcall
mov
mov
xor
mov
divl
jmp
mov
out
adc
sarl
push
mov
push
ljmp
in
lcall
es
jp
mov
dec
sbb
ret
inc
jbe
add
pop
cs
in
rcl
dec
mov
mov
das
add
dec
sbb
adc
add
or
push
xchg
repnz
hlt
pop
aas
lret
hlt
sbb
cmc
lea
das
filds
data16
xor
rol
pushl
les
pusha
mov
xor
mov
shrb
test
cmp
icebp
add
adc
jnp
stos
and
pop
into
outsl
lcall
pop
push
int
stc
fistl
push
out
fists
and
dec
lcall
mov
or
call
mov
mov
mov
daa
repz
push
leave
fcmovbe
loope
adc
mov
sbb
or
pop
ret
or
hlt
rorl
ret
addr16
mov
outsb
jns
shlb
add
leave
aam
xchg
jae
out
add
add
jmp
jecxz
inc
xor
adc
test
push
push
and
add
sub
jbe
mov
jl
out
imul
imul
ret
xlat
mov
mov
mov
push
xor
pop
je
xchg
cmp
fdivrs
outsb
test
add
pop
xchg
add
or
popa
bound
fisubl
sbb
outsb
imulb
js
mov
adcl
cmp
das
and
jmp
xchg
sub
jg
push
fimull
or
cltd
rcll
adc
hlt
and
movsb
int3
outsb
loop
shr
adc
xchg
add
push
call
fcmovbe
clc
sbb
testl
iret
in
test
iret
push
pusha
jge
pop
and
outsl
in
loop
mov
xchg
ret
and
and
daa
test
or
movsb
es
daa
mov
cmpsl
pop
jl
subl
test
call
sub
mov
rcrl
jmp
or
dec
fnstcw
subb
mov
lods
fidivrl
push
or
iret
lret
call
mov
repz
daa
out
or
dec
stos
in
inc
out
aam
or
loop
xchg
mov
sub
dec
sub
mov
icebp
sbb
cmp
jecxz
add
imul
sbb
sub
sti
ret
in
pop
xchg
add
ja
gs
sbb
inc
jl
aas
loope
jne
dec
push
aaa
xchg
out
ss
lcall
xor
int
or
cmp
cld
mov
insl
push
rep
loopne
push
jge
shrl
add
mov
mov
jo
inc
pushf
jno
mov
lods
cmp
cmc
sub
dec
fwait
or
ret
mov
or
aas
sbb
jne
push
std
shl
repnz
sbb
dec
ss
lcall
es
inc
push
jne
rcrl
sub
inc
mov
loopne
xchg
or
jmp
fwait
loopne
push
xchg
dec
mov
loope
or
xchg
bound
push
mov
icebp
and
fs
cmp
dec
xor
sbb
ret
leave
test
loopne
fadds
inc
enter
nop
mov
xchg
push
inc
ds
jns
and
add
mov
pop
jo
xchg
ljmp
pop
fisttps
cmp
lret
pushf
pop
fldt
xor
push
adc
push
fistl
mov
rorb
loope
jl
es
inc
mov
lods
iret
add
xchg
xor
fcmovnbe
pop
pusha
data16
loop
aaa
push
mov
mov
mov
rcll
mov
mov
add
cmpsl
faddl
fmul
cs
pop
or
push
dec
jle
add
fs
pop
pop
fisttpll
idivl
lods
icebp
cmp
mov
jbe
pop
or
bound
jb
dec
shl
mov
test
add
movsl
dec
mov
mov
int3
mov
out
inc
mov
mov
js
cmp
sub
mov
mov
push
inc
inc
jl
pushl
jae
cltd
and
push
xchg
mov
push
push
push
ret
fldl
xor
fstps
enter
jg
das
shl
push
pop
xchg
jb
negb
xor
xor
push
mov
shr
stos
mov
inc
dec
fcmove
lods
push
cwtl
inc
jl
add
mov
inc
out
sbb
jbe
push
cmpl
xlat
sub
push
cmp
push
je
pop
cmp
xlat
jp
sbb
je
jmp
gs
hlt
mov
pushaw
add
sbb
inc
daa
sbb
daa
xchg
dec
outsl
mov
add
push
adc
and
insb
popl
fstpt
or
adc
idivb
inc
lods
xchg
mov
roll
or
push
xchg
aaa
push
lret
mov
pop
pushf
lahf
add
push
or
xlat
loope
lahf
ret
lcall
adc
inc
adc
fcoml
xchg
mov
fsts
into
mov
jne
pop
enter
pop
hlt
xchg
in
je
xchg
sub
mov
outsl
lods
insl
add
outsl
stos
out
inc
jg
daa
out
inc
or
out
push
xor
adc
es
dec
cltd
in
fwait
shll
sahf
ss
pusha
rorl
pop
call
or
cmp
arpl
in
push
aad
jns
loop
in
xchg
and
call
add
sub
imul
jp
pop
inc
pop
push
and
pop
icebp
xor
in
imul
xorb
inc
pop
xchg
sahf
adc
and
outsb
mov
pusha
js
lret
sub
data16
xchg
jg
cs
xchg
ja
ficoml
mov
testb
in
mov
int3
sub
repz
add
add
int3
fcompl
popf
leave
add
test
clc
jle
fnstcw
jbe
int3
test
pop
mov
jge
xchg
sub
lods
jecxz
leave
xor
fsubl
stc
sbb
jecxz
jne
cmp
test
sbb
push
mov
sbb
sbb
add
roll
mov
xchg
fcomp
jae
or
std
inc
daa
out
xchg
out
cmc
mov
push
dec
lret
test
cmpsb
rclb
pop
insb
add
adc
out
jmp
out
andl
jge
mov
xchg
movsb
dec
lahf
cmpsb
ficompl
jae
or
pop
push
xor
xchg
mov
stos
lret
push
imul
cltd
dec
dec
jle
xor
or
loop
jne
push
fidivs
and
mov
jae
fs
pop
out
add
inc
mov
sti
dec
dec
lahf
mov
je
jnp
xchg
lds
nop
aam
sub
insl
jp
insb
dec
mov
ja
outsb
dec
in
mov
push
insl
sbb
and
jns
xlat
out
bound
or
or
cli
mov
adc
add
popf
inc
scas
cs
call
or
test
pushl
mov
gs
xchg
inc
dec
stos
jnp
cli
pop
pop
lods
test
test
xor
push
and
insb
jb
jp
jo
daa
cmp
and
dec
pop
xchg
test
iret
or
inc
add
or
es
mov
cwtl
xchg
jg
call
and
and
jl
xchg
lods
mov
sbb
push
or
stc
mov
mov
sub
mov
push
fcmovnb
mov
pop
cmp
lea
xor
xchg
xor
in
jg
stos
sbb
loopne
dec
mov
sub
mov
xor
mov
adc
pop
adc
pop
pop
mov
sahf
mov
jb
or
jl
push
dec
pop
iret
push
adc
dec
mov
hlt
movl
dec
scas
push
mov
mov
nop
mov
pop
mov
repnz
ds
push
sbb
cmpsl
adc
pop
ret
push
mov
ds
iret
orb
lods
inc
movsl
imul
out
mov
loope
out
inc
lret
ret
ljmp
arpl
mov
xchg
lods
aaa
push
in
sbb
jmp
rorb
in
aad
ja
mov
gs
loopne
mov
adc
mov
cwtl
pop
mov
pop
in
push
mov
adc
xor
jcxz
or
push
ficoml
dec
cmp
insb
ss
int
popl
call
into
aam
or
pop
fcmovb
jne
addb
inc
jno
cmp
cmp
xor
les
mov
fstpt
dec
sarb
cmp
xor
lea
jne
ds
inc
nop
outsl
in
sub
push
sbbb
or
mov
es
dec
out
ret
push
fwait
push
dec
mov
mov
pop
imul
pop
loopne
stc
gs
pop
insl
mov
ret
nop
jg
xchg
fdivrs
daa
pop
xchg
pusha
rorb
dec
pop
jb
repnz
dec
adc
shrb
sbb
loopne
mov
adc
cmp
stos
mov
imul
add
repz
ja
nop
sbb
sbb
adc
or
mov
push
stos
int3
pop
aas
sbb
leave
jae
insb
inc
lcall
in
xchg
lds
imul
mov
repz
xchg
jmp
add
test
hlt
fwait
pop
addb
add
out
arpl
xlat
xchg
in
movsl
ds
adc
cltd
sub
sbb
dec
iret
pop
or
xchg
jbe
push
sub
inc
mov
pop
pop
xor
cmp
fdivrp
inc
loopne
ffreep
movsl
adc
jno
dec
xor
jle
lcall
or
cmc
and
ljmp
cs
mov
pop
sub
arpl
orb
lock
incb
insl
repz
jl
xor
popa
aad
jg
cmp
pop
or
sub
testl
inc
push
cmp
mov
out
movsl
les
push
mov
data16
iret
or
xchg
roll
dec
imul
pop
mov
sbb
mov
push
mov
jmp
aad
imul
pop
xor
mov
push
repz
sbb
addr16
cmpsl
aam
adc
jb
lcall
fs
add
rcll
cld
sub
in
scas
ficoml
ds
push
mov
pop
mov
test
into
inc
out
mov
mov
mov
sbb
je
aas
or
stos
push
xchg
sahf
rorb
push
je
jl
pop
cmpsl
cltd
into
jmp
jmp
mov
inc
roll
out
mulb
xchg
stos
jmp
mov
aas
xor
clc
popa
jb
sub
lret
jg
pop
bound
jnp
cmc
dec
push
lea
fidivs
cmp
inc
rclb
sub
icebp
jmp
dec
mov
jp
pop
or
cmp
dec
repz
movsl
cmp
dec
add
hlt
and
cmp
and
cmpsl
mov
sub
pop
add
rolb
jae
add
out
icebp
orb
sbb
xchg
subb
aam
cmpsb
mov
lds
jne
jno
ds
pop
int3
es
xchg
mov
mov
stc
pop
ds
outsl
sub
cmp
stos
inc
testb
pop
mov
addr16
sbb
push
dec
ficoml
inc
xor
jns
push
shr
push
popf
ficoms
mov
out
mov
scas
inc
mov
xchg
mov
ja
scas
mov
iret
out
sbb
cmc
mov
xchg
sti
dec
lock
shlb
dec
hlt
sbb
xchg
lock
mov
iret
imul
and
mov
in
pop
xchg
pop
sar
pop
jb
mov
or
shlb
out
push
pusha
int3
aam
es
ret
xchg
hlt
lea
test
pop
sbbl
push
div
daa
xlat
jb
sbb
push
int3
jnp
aad
cmp
xchg
hlt
insl
lcall
ficompl
dec
inc
negb
stos
lea
push
dec
test
stos
xchg
test
xor
fdiv
mov
fisubl
iret
cs
mov
mov
test
in
ss
mov
adc
rorb
lret
sbb
xor
idiv
call
cld
pop
ror
add
mov
ficoml
rorl
ficoms
bound
xorb
xor
insl
adc
nop
mov
ficompl
jle
cmp
fs
icebp
jecxz
jmp
mov
add
adc
add
sbb
push
push
cwtl
dec
mov
andl
and
fdivrl
test
clc
insl
pop
out
jle
push
pop
jno
xor
add
pop
mov
xor
inc
pop
rolb
mov
std
sarb
inc
mov
cmp
pop
add
jno
mov
jge
popf
lret
test
sbb
inc
gs
mov
sub
bound
jnp
lahf
aaa
and
int
outsl
notb
jge
pop
popa
or
fcompl
pop
fldl
fmul
ja
bound
fldt
cmp
lods
clc
loop
outsl
insl
pop
in
add
bnd
ja
roll
enter
sub
rol
daa
inc
mov
pusha
xchg
adc
push
andl
f2xm1
test
mov
frstor
lods
jg
mov
aaa
int3
fwait
or
mov
xchg
fsubl
jmp
es
jecxz
cld
ret
inc
bound
add
sub
xor
aad
dec
fisttps
lret
clc
and
iret
sub
mov
jg
repz
fnstsw
inc
jg
dec
pop
xor
pop
les
jb
inc
ficomps
push
dec
xchg
inc
cmpsl
scas
cmp
sbb
movsb
mov
xor
push
cmc
and
xchg
repz
repz
sahf
popf
sahf
adc
xor
out
shrl
les
cmp
mov
neg
adc
sub
cmp
fnstcw
arpl
adc
in
fidivs
inc
scas
fcmovnbe
sbb
or
pop
and
dec
mov
mov
mov
mov
xchg
es
adc
std
es
pop
cmp
outsl
leave
ret
cmp
or
mov
addr16
push
inc
jae
mov
in
bound
add
sahf
mov
xchg
cwtl
repnz
scas
xchg
adc
or
cmp
fidivrs
out
add
sbb
sbb
jb
rcrb
lahf
cmpsb
insl
jle
movd
xlat
mov
mov
adc
aas
mov
je
popf
mov
flds
outsb
sub
sbb
and
jns
and
cmp
push
dec
popf
pusha
stos
out
aad
mov
adc
testb
lret
adc
dec
adc
test
test
cmp
addr16
mov
into
jnp
lcall
fs
insb
insl
fidivrl
lods
pop
fldl2e
popf
jl
pop
jbe
fidivrs
clc
imul
push
out
je
cmp
sbb
das
cli
xchg
aad
jno
fcmovb
add
popf
clc
outsl
in
call
lret
mov
adc
insb
shlb
sbb
jecxz
fdivl
shrb
jp
movsb
inc
inc
mov
pop
add
shll
pushf
xchg
repz
es
daa
inc
and
stos
loopne
es
adc
mov
ss
repz
arpl
test
push
xor
js
cmp
insl
or
cmp
jnp
mov
fadds
shll
into
sbb
xchg
sub
rclb
je
sub
popa
outsl
or
iret
movsb
adc
xor
adc
js
pop
aaa
in
xchg
roll
dec
push
xchg
fsubl
bound
outsl
jmp
test
aas
out
cwtl
pop
sub
and
scas
push
xor
cwtl
add
and
mov
lds
mov
or
aaa
add
test
inc
xchg
out
jne
es
shll
nop
xchg
test
or
adc
adc
in
scas
repz
fsubs
mov
adc
push
xor
add
sbb
aad
cltd
mov
sub
sbb
adc
mov
mov
fstp
fsubr
fyl2xp1
push
adc
pop
adc
add
loope
dec
and
inc
imul
push
lret
pushf
push
cmp
inc
pop
imull
movsb
imul
hlt
gs
and
es
xorb
jp
test
jbe
rorl
cli
outsb
xchg
into
fiaddl
cmp
dec
xor
jno
aaa
mov
dec
popa
call
push
bound
sub
push
jno
mov
cmpsl
in
cs
rcrb
out
add
out
jecxz
icebp
ror
mov
xchg
cli
inc
leave
iret
cld
cs
sub
jns
jno
gs
inc
pop
jne
push
dec
xorb
adc
pop
xor
ret
fnstenv
out
test
dec
mov
aas
rcrb
jnp
sbb
sahf
shl
jno
push
mov
jne
xor
mov
sub
push
add
jg
lahf
inc
push
push
in
ret
js
pop
xor
cmp
pop
push
lret
adc
mov
stos
rcl
adc
stos
push
mov
popf
les
jb
adc
mov
sti
sarb
mov
stos
lahf
jp
sahf
rcll
cmp
scas
je
ljmp
mov
dec
push
notb
faddl
jp
insb
mov
xchg
push
les
sbbl
test
rol
xor
xor
enter
stc
out
fidivrs
sub
jg
mov
movsb
and
dec
or
iret
out
imulb
adc
inc
orl
and
xor
fdivrp
add
inc
xor
mov
js
sub
jo
add
adc
adc
lods
jg
cltd
or
mov
adc
sub
and
dec
jno
leave
hlt
rcr
shll
pop
scas
lods
sbb
xor
jns
push
mov
stos
mov
out
stc
stos
jmp
xchg
aad
jnp
push
out
loopne
sbb
push
aas
mov
stos
les
mov
stc
mov
or
addr16
outsb
sarb
push
inc
ds
fildl
lds
cmc
pop
inc
push
lods
mov
pop
pop
push
push
les
popa
pop
and
fs
adc
fidivs
shl
mov
repz
xchg
jmp
jo
pop
ja
mov
test
jno
movsb
jge
daa
mov
das
shlb
mov
ret
cmp
or
cltd
ret
mov
jecxz
jb
xor
add
outsl
adc
aam
mov
mov
mov
xchg
xor
push
jecxz
test
jbe
pop
fidivl
jb
pop
mov
je
lret
hlt
pop
sub
jne
dec
test
inc
inc
dec
orl
pop
mov
mov
xchg
mov
scas
outsl
rcrb
sub
xrelease
in
sti
mov
lds
mov
push
mov
scas
xchg
xor
xchg
adc
rorl
jne
push
ret
jecxz
or
aam
lea
xor
sahf
aaa
outsl
adc
sub
fsubs
pop
jp
and
and
es
pop
xchg
fs
fdivrs
iret
push
jp
add
mov
arpl
pop
cmp
inc
ret
shrl
scas
inc
mov
gs
dec
roll
push
loopne
jle
and
xor
mov
and
loope
sbb
pop
xchg
fldt
fcomp
jb
gs
pushf
addl
cmp
jmp
je
scas
movsb
sbb
sbb
mov
add
or
pushf
jl
jmp
je
mov
lods
fs
lahf
popf
ja
sub
loop
fsubr
mov
pop
cmp
js
shlb
dec
sub
cmp
and
shlb
jge
outsb
sti
adc
mov
jo
jp
sub
pop
adc
lods
or
in
rcrl
mov
test
out
push
and
decl
test
pop
into
and
jno
mov
loope
mov
mov
fiaddl
and
mov
mov
loope
daa
sbb
inc
icebp
lock
flds
push
adc
rclb
aad
pop
pop
icebp
jl
shlb
pushf
dec
jmp
outsl
and
out
clc
hlt
sbb
shll
mov
or
xchg
and
popa
cmp
cmpl
or
inc
cmc
nop
data16
dec
insb
push
sbb
lock
filds
lods
jbe
or
fdivr
jle
fnstenv
xchg
movsl
mov
add
pop
cmpsb
inc
insb
adcl
in
sarl
mov
lahf
in
jae
inc
rcll
mov
pop
push
xchg
test
jne
and
dec
mov
cmp
sbbl
pushf
ret
push
cmpsb
faddl
test
mov
lods
outsb
dec
push
outsl
xor
mov
and
mov
fstpl
int3
flds
xor
jp
push
and
cltd
popf
push
and
cltd
mov
jle
sbb
mov
cmp
movsb
scas
adc
out
cmp
push
scas
jb
and
jmp
add
scas
sbb
add
or
adc
clc
jl
adc
sub
jl
pusha
pop
jns
inc
mov
inc
aas
insb
outsb
cmp
push
jnp
push
loopnew
pop
dec
or
dec
push
in
loop
fs
mov
add
leave
pop
cwtl
jl
sub
sbb
sub
mov
jnp
out
sub
loope
xor
andl
cli
cmp
divb
sbb
testl
add
mov
outsl
sbbl
dec
inc
sub
test
sbb
sub
cmp
pop
jmp
iret
stos
mov
pusha
push
inc
cmpsl
cmpsl
xchg
jg
repz
pop
mov
ficomps
mov
push
mov
mov
pop
fisubs
shl
jae
clc
adc
cmpsb
xor
in
jg
int3
stos
pushf
lret
jmp
add
in
pop
iret
lret
ret
xor
pop
ljmp
adcl
andb
sbb
hlt
rcrl
sbb
dec
xchg
pop
or
mov
or
mov
inc
xor
fadd
test
cmp
inc
push
xor
leave
and
mov
data16
lock
cmpsb
scas
scas
adc
dec
and
pop
movb
fidivrs
cmp
ficomps
leave
pop
xorl
imul
iret
cmp
or
dec
shlb
in
jns
pop
mov
mov
stos
mov
imul
dec
cmp
ljmp
insb
mov
sbb
scas
inc
inc
fldt
xchg
cwtl
xchg
adc
fdivs
adc
push
das
mov
jns
sbb
ror
cmp
fstps
adc
test
ja
add
mov
pop
aad
fsts
dec
sub
aad
adc
test
repnz
cmp
jge
sbb
loop
fcompl
out
imul
xor
mov
cmpsl
add
imul
push
cli
js
fneni(8087
mov
ret
push
dec
in
ljmp
mov
das
clc
jp
ja
mov
xlat
mov
and
inc
dec
dec
orps
leave
push
mov
xor
insl
sbb
pop
fs
mov
xchg
pop
mov
lcall
or
mov
xor
popf
pop
icebp
mov
fbld
mov
push
push
imul
repnz
xor
mov
and
dec
sub
pop
outsb
xchg
jbe
dec
das
dec
xchg
push
shr
repnz
repz
rolb
outsb
daa
fnstcw
sbb
test
outsb
das
out
pop
ret
sub
fnstcw
xchg
cmp
and
into
inc
jecxz
ds
push
jb
add
push
lods
enter
repnz
sub
sub
jno
loopne
js
mov
das
inc
bound
inc
or
cld
movsl
loopne
cmp
repnz
lds
sub
loope
imul
sbbl
adc
jnp
aaa
xchg
xchg
or
and
lahf
push
sahf
xchg
xor
jno
cltd
and
pop
fucomi
push
int3
out
lcall
mov
es
loop
push
insb
cmpsb
clc
mov
mov
mov
loopne
jecxz
addl
mov
mov
jg
fdivl
inc
popa
addr16
cli
pop
imul
jae
jae
gs
and
mov
fdivl
mov
pop
jns
out
aas
or
in
mov
stos
repnz
aam
cli
cli
pusha
fldcw
cmc
pop
fstp
rclb
scas
outsl
js
loop
or
mov
pop
cmpsl
and
mov
aaa
cli
push
imul
stos
fiaddl
call
jns
and
mov
dec
mov
lods
inc
sbb
stc
jge
cmp
sub
mov
xor
lret
push
mov
in
mov
clc
test
addr16
ljmp
lods
shll
div
push
mov
out
fs
cmc
push
sbb
xlat
jno
test
lret
or
lods
lods
xchg
repnz
inc
sub
jae
inc
mov
in
sahf
xchg
loope
mov
xchg
stc
sub
aad
iret
lock
jge
div
loope
dec
std
nop
in
xchg
test
push
lods
nop
fs
pusha
lds
and
mov
test
pop
lods
xchg
outsl
cs
dec
repnz
pop
cmp
mov
lret
mov
frstor
push
testb
adc
sbb
dec
iret
loopne
cltd
out
xor
nop
inc
pop
sti
addb
outsb
lods
and
push
icebp
and
xchg
ror
test
pop
pop
fldenv
jbe
push
cmp
push
ficoms
inc
ds
sub
into
imul
pop
jecxz
pop
stc
push
pop
rcrb
loopne
push
aas
inc
stos
dec
add
gs
lock
mov
adcl
mov
inc
rcl
out
lods
shrl
jne
sbbb
loop
and
outsb
xchg
cmpsb
xchg
inc
pop
mov
mov
popa
jb
fildl
pop
sarl
mov
pop
jne
push
cmp
inc
jmp
loopne
cmp
xor
and
bound
fbld
ljmp
sbb
sahf
or
sub
or
dec
pop
or
int
repnz
push
ret
imul
mov
add
scas
push
pop
lea
jae
je
jecxz
and
and
xchg
inc
in
cmp
jo
daa
push
pop
enter
pop
push
mov
inc
inc
mov
inc
adc
pop
mov
xchg
inc
addl
add
jmp
cld
daa
mov
mov
stc
movsl
lret
sti
cmp
repz
pop
incl
adc
shll
daa
fcmovu
mov
rclb
or
scas
or
sub
jnp
out
mov
call
inc
in
test
pop
and
pop
sub
xchg
stos
sbb
out
inc
mov
pusha
in
loopne
stc
sub
mov
jo
loop
add
sub
mov
xchg
sbb
je
sub
in
insb
bound
insl
out
pusha
pusha
insl
mov
jnp
loope
movsl
cmp
ret
or
insb
jl
push
jns
pop
mov
in
push
push
sub
xor
mov
jne
movsb
pop
pop
xchg
push
out
cmp
fidivl
in
xor
movsl
inc
aad
in
psubsw
jle
push
out
fstpl
fwait
sub
in
mov
jmp
inc
push
scas
negb
lea
mov
mov
pop
mov
xor
cmp
pop
sub
sub
ret
repz
into
lods
jg
stos
pop
xor
into
or
dec
mov
cli
xlat
pop
test
mov
and
xchg
dec
ret
xchg
sbb
bnd
cmp
gs
mov
shl
adc
push
inc
ror
lock
push
scas
fldt
loop
adc
idiv
subb
andb
je
sbb
mov
aam
addr16
push
add
mul
test
aas
imul
clc
mov
int
enter
shrl
push
insl
sub
add
sbb
jbe
and
and
sub
xchg
adc
or
and
cmc
push
cld
push
and
ss
int3
les
xor
jecxz
jb
test
sub
pop
or
shrl
push
mov
ljmp
mov
lods
mov
test
mov
and
or
dec
push
pop
ficoms
out
lods
sub
sub
aad
cmpsl
stos
cmpb
ficoml
dec
fisttpl
sub
addl
sub
cli
or
imul
mov
jmp
fsubrp
cmp
jae
int3
test
loop
sub
int3
and
outsb
adc
in
mov
ret
out
push
enter
fiaddl
imul
inc
jo
popa
and
cmpsl
jo
out
push
enter
arpl
inc
mov
push
pop
mov
cmp
mov
jge
cmp
dec
jl
inc
fnstcw
xchg
push
in
push
push
mov
scas
mov
mov
xchg
sub
xor
xor
push
mov
cmp
jae
sbb
mov
pop
jbe
adc
or
jge
sbb
cmpsl
push
faddl
lcall
fbstp
jp
js
fiaddl
push
adcb
je
mov
jb
mov
inc
cmpsb
sub
mov
fistl
dec
cmpsb
cwtl
xchg
cmpsl
xchg
pop
sub
inc
jbe
movsl
xchg
push
or
arpl
scas
jbe
push
clc
leave
sbb
xor
jge
pop
sbb
das
stos
rorb
mov
frstor
imulb
repnz
inc
shlb
in
adc
and
mov
jne
loopne
jl
mov
add
push
pop
cmp
mov
lret
push
aas
cmp
scas
mull
stc
jecxz
fldl
enter
pop
sub
loop
call
int3
cwtl
xchg
add
int
mov
enter
fldlg2
or
inc
and
stos
or
xor
and
shrb
hlt
out
xchg
lret
dec
add
loopne
divb
sbb
mov
imul
xchg
push
xor
push
imul
orl
popa
shrl
cmp
pushf
mov
lcall
lret
cmp
sbb
daa
shll
pop
das
xchg
bound
jl
or
stos
les
addr16
mov
mov
and
hlt
imul
jge
lds
rcll
xchg
outsl
jb
add
les
jmp
or
flds
bswap
jmp
out
mov
dec
in
movsb
aaa
jle
mov
lcall
stos
adc
lret
xor
cvtdq2ps
shrb
mov
pop
aam
dec
adc
popa
out
push
mov
cmp
shrl
xor
aaa
test
sbb
fisubl
ljmp
stos
xor
sbb
mov
xor
cmp
ret
cmp
jo
enter
xchg
aad
inc
push
inc
repnz
lods
popa
test
sub
cmp
pusha
sbb
sub
cmpsb
mov
xchg
mov
scas
push
test
pop
sahf
push
fdivl
push
push
or
movsl
ret
iret
shrb
inc
int3
adc
aas
stos
repnz
mov
test
dec
add
mov
stos
shrb
and
jp
xor
in
in
xor
push
cmp
aas
pop
aas
jmp
sub
pushf
inc
mov
inc
add
xchg
out
xchg
xchg
inc
faddl
shl
lret
mov
xor
fs
jmp
sbb
loopne
jae
cld
dec
jbe
jmp
sub
bound
scas
popa
sub
in
test
dec
jno
int
into
lea
add
leave
jb
rcll
lcall
push
enter
add
jo
or
sub
cmp
test
mov
cmpsl
push
fmuls
stc
mov
call
or
in
mov
xlat
xchg
mov
out
push
inc
loopne
lods
inc
mov
loop
cs
aaa
leave
pop
call
bound
pop
xchg
xor
cwtl
cmpsb
jl
cmp
aaa
fists
mov
jp
mov
mov
enter
repnz
mov
daa
popf
stos
iret
sbb
add
insl
mov
xor
imul
pop
cmpsl
or
data16
sub
fwait
cld
fcmovu
lods
loopne
fs
fmuls
dec
xchg
iret
lahf
mov
gs
jg
add
data16
mov
mov
aaa
push
scas
paddq
sbb
cmp
jb
lods
test
out
bound
mov
mov
jo
data16
imul
imul
pop
out
mov
push
or
mov
mov
sub
sbb
jnp
lds
mov
inc
movsl
bound
push
pop
push
xchg
mov
test
stos
sahf
push
cmp
or
push
xchg
xor
test
pop
xchg
dec
in
and
inc
or
icebp
sahf
add
orb
popa
jecxz
scas
xchg
pusha
inc
ret
ss
pop
mov
cmp
and
sahf
push
outsb
lods
ss
test
pop
mov
push
xor
repz
dec
sub
fldt
popf
xor
cmc
lcall
leave
fcoml
ljmp
ja
mov
pop
stc
loopne
sbb
hlt
popf
aas
mov
inc
subl
pop
fists
jg
aaa
lret
std
cli
push
dec
mov
mov
adc
int
insl
insb
enter
enter
or
cwtl
loopne
mov
jb
push
push
mov
test
adc
pop
mov
lock
addr16
mov
pop
in
add
pop
dec
cmp
dec
jb
fimull
mov
inc
push
lea
xor
mov
mull
jnp
jb
sub
rcrb
jg
xchg
bound
adc
jnp
pop
paddsb
pop
ja
and
insl
cmp
mov
es
pusha
lds
or
out
imul
mov
cmp
or
fmul
lods
test
adc
lods
sub
sub
sub
ja
outsb
gs
inc
das
aam
jp
icebp
repz
push
sbb
addr16
pusha
push
pop
popf
cwtl
pop
jl
test
adc
lods
test
dec
mov
fildl
andb
repz
or
outsb
lahf
adc
mov
das
or
mov
in
dec
mov
push
ret
inc
mov
sti
test
imul
jns
xor
rcl
mov
mov
pusha
arpl
insw
sub
je
xchg
mov
insb
mov
sarl
out
cmp
mov
add
loop
ljmp
inc
leave
inc
inc
sahf
jns
fstpl
sbb
push
push
cmp
popa
imull
stos
cmpb
inc
jne
notb
int3
mov
lcall
xlat
divl
enter
ret
rcrb
sub
loopne
push
sub
inc
push
push
fimull
mov
movlps
es
ficomps
pop
lods
stc
push
xor
jmp
lods
xor
xlat
and
jo
test
dec
xor
divb
sbb
adc
sub
imul
in
pop
in
rorl
cld
mov
fists
push
lahf
push
xor
push
push
lods
enter
dec
adc
lods
lods
bswap
pop
stos
je
dec
push
int3
je
out
push
repnz
xchg
out
adc
jb
push
add
adc
add
hlt
lcall
cmp
jns
out
xlat
add
jmp
test
xor
scas
dec
dec
and
loope
aad
sti
enter
sbb
dec
popa
cmpsl
test
xlat
cmpsl
popl
cwtl
push
negl
flds
xchg
mov
push
push
jnp
fisttpl
xor
cmpsb
rorb
dec
xor
jae
test
adc
lahf
out
loope
cs
pushf
and
cmp
push
xchg
lock
mov
push
pop
mov
xchg
push
mov
or
mov
cwtl
jmp
clc
dec
add
dec
inc
xor
mov
pop
sbb
push
lahf
xor
test
mov
adc
bound
xchg
ja
xrelease
adc
pop
mov
mov
shrb
rcrb
and
sbb
aaa
pop
int3
or
inc
les
add
inc
push
fsubrl
popf
insl
push
xchg
or
and
into
outsl
mov
iret
cltd
adc
mov
imul
testb
aad
push
in
cmc
jmp
test
adcb
mov
push
dec
lea
cmp
sbb
iret
test
add
rorb
into
mov
and
jbe
shll
sub
mov
mov
xor
mov
in
daa
inc
push
add
jb
or
je
mov
mov
xchg
ja
jno
ljmp
ljmp
fisubl
addr16
pop
dec
add
sar
test
loopne
fstps
sbb
aas
jns
dec
add
adc
push
jns
sub
sub
sbb
pop
rorb
xor
test
sbb
ds
test
dec
push
dec
hlt
pop
mov
jo
insb
jbe
int3
inc
mov
adc
aad
sbb
sbb
xchg
iret
rcrl
adcb
call
out
mov
pop
cmpsb
lret
test
add
iret
fwait
add
in
test
add
imul
mov
scas
bswap
fldl
out
sti
jl
popa
pop
mov
ret
or
xchg
inc
push
popf
mov
push
repz
out
sbb
push
and
sbb
jge
orb
insl
cmc
dec
dec
jmp
sbb
xchg
push
sti
add
pusha
fwait
hlt
stos
rclb
jbe
adc
cmp
dec
add
loopne
daa
pop
add
dec
add
xchg
adc
adc
add
adc
lahf
cmp
adc
es
lahf
stos
sub
dec
xor
insb
push
imul
inc
lahf
cli
and
lcall
das
js
testl
pop
cmp
lret
aad
mov
mov
lcall
cli
pop
repz
scas
test
psraw
rcll
int
fld1
addr16
xlat
jb
cmp
jns
jnp
jb
dec
in
sbb
leave
sbb
push
adc
out
dec
cli
push
stc
sbb
out
or
dec
ds
std
pop
sub
test
and
movsb
push
aad
scas
pop
les
call
lods
in
dec
movsb
push
or
cli
pusha
jns
sub
pop
out
jecxz
data16
push
xchg
test
sub
sbb
adc
fistl
push
push
mov
add
es
lahf
mov
pop
stos
inc
mov
arpl
div
daa
xchg
adc
lods
imul
mov
pop
mov
jbe
test
aas
mov
in
add
xor
cmp
cmp
xchg
xor
pushf
push
push
pop
mov
mov
gs
cmp
aas
in
jo
lea
loope
lock
push
and
push
push
mov
in
mov
popf
pop
mov
cmp
test
rcr
popf
jno
repz
je
mov
push
out
jge
inc
push
adc
adc
mov
xor
xor
rcrb
test
mov
inc
inc
xchg
inc
push
pushf
mov
add
inc
test
adc
push
dec
stos
js
fwait
jne
in
rcl
mov
lret
inc
sub
test
fisubs
sti
jp
lock
jne
push
dec
xor
loopne
cmp
mov
jl
imul
or
mov
mov
or
inc
pop
and
aaa
bound
es
jnp
out
jmp
add
in
not
jl
pop
loop
add
leave
xchg
sbb
ds
mov
ss
inc
cmp
xchg
add
stos
and
mov
cltd
fwait
clc
mov
into
rorb
jle
stos
adcb
ja
add
adc
inc
popf
lcall
movsl
stos
test
imul
pop
push
das
sub
and
shlb
pusha
outsb
lea
adc
push
hlt
push
psrlw
pop
imul
or
adc
xor
adc
adc
or
fwait
and
add
xchg
and
in
enter
jnp
in
iret
pop
mov
cmp
je
fcoml
scas
lcall
mov
lret
inc
icebp
pop
or
mov
mov
push
pop
inc
test
cmpb
cmp
mov
mov
push
int3
lcall
inc
rcrl
pop
test
into
insb
mov
roll
pop
test
gs
iret
xchg
cmp
or
repz
mull
push
lret
iret
clc
leave
cli
test
dec
mov
mov
inc
inc
sub
xchg
shlb
xor
xor
pop
aad
mov
inc
mov
cmpsb
mov
nopl
jbe
fisubrl
adc
mov
mov
jo
xchg
into
dec
in
sub
repz
into
inc
inc
xor
jnp
arpl
out
xchg
push
sbb
push
sub
add
adc
cmp
mov
pop
mov
mov
in
pop
inc
mov
push
scas
push
push
test
jmp
xor
push
insl
push
popf
inc
push
loop
lret
std
mov
jnp
adc
lods
iret
jl
cmp
push
scas
mov
stos
loop
mov
aas
out
fisubrl
shlb
jecxz
dec
pusha
or
push
daa
stos
test
xor
inc
cmpsb
xor
cs
add
jne
je
test
sub
stos
sbb
mov
mov
sub
movsl
push
aam
scas
fwait
pop
xlat
clc
mov
sti
cltd
or
pop
sub
arpl
cs
jo
loope
out
push
aaa
shrb
loop
push
cmp
xor
hlt
cli
shrb
sbb
enter
push
in
cltd
cmp
std
test
xchg
pop
jecxz
cmpsb
lahf
adc
mov
icebp
cld
xor
cmpsb
scas
xchg
mov
je
hlt
in
nop
inc
sub
fcmovnu
jg
inc
mov
cmpsb
loope
lods
xchg
pushf
add
xor
lret
dec
jb
mov
cmp
sbb
cmp
cmp
stos
insb
pop
pusha
push
outsb
lret
int
ds
mov
cmpb
ds
ret
and
rcl
test
ret
test
cmp
pop
ds
adc
xor
fldcw
push
adc
xor
jmp
mov
mov
jnp
sbb
ss
test
dec
jnp
dec
dec
cmp
loop
ficoml
mov
jg
out
jbe
or
mov
loopne
int
ret
cmp
or
xor
mov
sub
cmp
add
insb
inc
push
push
xor
xorb
sar
cmp
mov
and
inc
testl
mov
es
cld
xor
cld
sbb
lods
in
loopne
int
scas
lret
fwait
mov
cmp
jecxz
loop
shlb
sub
jle
jnp
push
sahf
jns
dec
out
push
jae
jge
push
dec
les
mov
cmp
rcl
aas
andb
jl
cmpsl
das
xchg
jnp
nop
xor
dec
jl
cmpb
bnd
aas
adc
ja
xlat
clc
insl
add
sar
gs
adc
dec
pop
scas
rclb
push
mov
xchg
mov
add
mov
ret
sub
enter
dec
jg
inc
sbb
lret
stos
fisubl
ljmp
add
inc
cmpsl
jecxz
fs
cmp
mov
ja
dec
loopne
jns
js
jmp
cs
mov
push
push
lea
subl
adc
jno
scas
sub
cmpsl
in
mov
pop
wrmsr
sti
push
mov
out
mov
aas
mov
push
xor
dec
xchg
idivl
mov
adc
int
movsl
dec
jl
mov
jbe
push
adc
and
inc
push
push
inc
aad
in
in
pop
xchg
jge
fs
movsl
cmpsl
in
push
sbbb
ret
push
ret
shl
dec
mov
push
add
pop
addb
jno
negl
jg
aas
xor
testl
xor
sbb
jle
in
loop
aad
cmc
and
aas
inc
daa
push
fs
dec
cmpb
mov
push
and
stos
push
inc
sub
sub
dec
sub
popf
stos
adc
mov
aaa
fcomps
dec
mov
dec
xchg
mov
ficoml
push
insl
dec
psubw
sub
mov
cli
sub
into
cld
pop
and
adc
xor
das
mov
dec
jmp
inc
fisttpl
cmp
add
add
or
lea
xchg
sbb
scas
xchg
adc
jae
addr16
cmp
and
push
dec
ror
push
shll
adc
cltd
cs
test
ja
xor
add
cmp
daa
ljmp
lret
xor
arpl
push
leave
ficompl
xchg
pop
cwtl
pop
rcll
sbb
pop
and
call
inc
mov
addb
flds
adc
in
push
add
out
fwait
mov
in
and
int3
and
test
js
cmp
jecxz
adc
movsb
or
xor
or
push
imul
adc
xor
cwtl
and
lahf
cmc
pop
jnp
in
ljmp
adc
shlb
std
inc
inc
mov
mov
loop
mov
rolb
push
jcxz
mov
test
mov
repz
adc
cmp
inc
sbb
sahf
fwait
dec
call
je
stos
jne
xor
pop
xor
mov
jnp
dec
ret
pop
out
dec
cwtl
push
mov
adc
mov
cmp
test
ret
out
add
stos
scas
mulb
inc
xchg
sbb
repz
push
pop
or
lea
xchg
push
adc
lret
xchg
sahf
adcl
scas
xchg
inc
mov
mov
cmp
insl
mov
mov
stos
shl
push
sbb
sbb
lret
or
scas
lds
ljmp
cwtl
add
add
ljmp
and
insb
ljmp
ja
stc
enter
push
divl
jl
xor
loop
cmp
jge
lea
pop
fiadds
pop
or
pop
mov
push
or
test
push
ret
and
xchg
data16
nop
adcl
imul
mov
inc
adc
cmc
sbb
add
and
cmp
mov
xchg
cmp
std
sti
loope
lea
gs
fisubl
mov
or
xchg
xor
adc
stos
cmp
xchg
adc
pushf
inc
cmp
push
fisubs
stos
fs
inc
dec
imul
xor
pushf
xlat
cli
out
jnp
popa
cmp
dec
jns
stos
lods
das
hlt
cmpsb
sti
jmp
orb
mov
and
sbb
pop
jp
outsl
aas
or
mov
dec
in
lods
mov
fnstcw
mov
stos
mov
dec
lock
push
xchg
jle
xor
and
xor
sbb
loop
cmp
inc
andb
out
jge
mov
sub
test
lret
hlt
jne
mov
imul
lahf
add
ror
icebp
mov
int
or
dec
movsl
xchg
push
mov
sbb
jb
imul
dec
sub
adc
mov
jge
stos
adc
int
ret
pop
cmp
stos
pop
jge
fwait
sbb
push
mov
jae
push
ret
pop
mov
sub
xchg
inc
out
in
push
gs
pop
je
xor
pushl
sbb
bound
sti
das
data16
jg
cmp
mov
sub
cs
push
inc
lcall
dec
ret
sbb
gs
fninit
cwtl
aad
ss
mov
mov
push
lods
sbbl
mov
pop
subb
mov
xchg
jo
sub
shlb
cmp
push
jp
aas
es
shrb
mov
bound
loope
xor
add
xchg
aad
int3
js
adc
and
psraw
and
jno
push
outsl
pusha
cli
sti
cmp
xchg
in
loopne
in
lret
lcall
mov
movsb
or
sti
insb
cld
mov
lods
lea
inc
jg
xchg
ret
cmp
jge
fmull
jecxz
faddl
ja
sarb
dec
stc
and
ficoml
mov
pop
shl
sbb
mov
jl
mov
mov
jge
pop
mov
sub
test
shlb
jnp
sub
mov
xchg
cmp
stos
repz
cli
add
in
mov
jle
pusha
cmp
mov
mov
cmpsb
push
enter
dec
data16
ja
sarl
daa
or
daa
andb
cwtl
shlb
mov
and
push
add
adc
fdivrl
inc
add
jae
insl
out
dec
jecxz
scas
pop
push
bound
dec
xchg
cmp
mov
sub
jl
andb
lret
dec
xorl
sub
mov
pop
or
jp
std
fwait
shl
pop
mov
jns
je
sbb
mov
popf
and
int
lcall
fsubrl
pop
or
divl
mov
mov
push
lret
sub
push
into
push
jne
iretw
mov
cld
mov
and
fnop
lahf
mov
es
fwait
popf
stos
into
xor
out
dec
or
insl
xchg
sub
jnp
mov
jnp
leave
in
lods
push
and
lea
push
rol
enter
aas
sub
orb
mov
or
mov
adc
test
daa
add
shl
sahf
ret
repnz
pop
jno
cmp
adc
xor
in
or
bound
cmpsl
dec
fnstsw
je
fsub
mov
cli
push
test
pusha
cmpsb
adc
test
adc
sbb
loop
dec
mov
mov
xchg
push
or
xchg
daa
pop
cltd
ficoml
mov
sbb
cmc
shl
into
add
dec
xchg
inc
mov
movsb
xchg
push
sahf
and
push
push
rcrb
dec
mov
jbe
bound
ret
inc
and
in
inc
repz
outsb
sarb
mov
add
loope
cwtl
test
and
add
jbe
test
pop
add
gs
adc
jnp
stc
xor
xor
outsb
inc
idiv
or
adc
jle
fwait
sub
jo
and
stos
adc
pop
add
dec
adc
dec
out
adc
sbb
mov
push
pop
cmp
xor
mov
or
scas
mov
mov
loop
push
sti
mov
push
outsb
hlt
mov
xchg
or
and
pop
loopne
insb
jp
push
fwait
pusha
dec
fs
sbb
call
sbb
or
push
jo
insb
dec
cltd
dec
mov
pxor
fisttpl
addl
arpl
cmp
outsl
xor
cmp
dec
jp
repnz
out
inc
jo
aam
push
pop
or
cmc
or
jg
test
das
mov
les
arpl
fucomip
sbb
pop
sbb
paddusw
xor
and
add
ljmp
int3
xchg
out
shrl
pop
ljmp
arpl
jge
inc
mov
in
shrl
cmc
lds
lcall
inc
cltd
mov
jg
shrb
mov
jns
sbb
xchg
incb
dec
and
out
or
adc
neg
stc
outsl
mov
push
in
call
push
lds
mov
ljmp
mov
sub
add
jg
mov
or
rcrl
jp
orb
and
clc
and
sub
adc
adc
adc
adc
add
imul
clc
xor
ja
out
dec
jl
push
imul
cmp
shll
ss
jl
out
xor
daa
adc
or
mov
rcr
lea
lods
mov
or
outsb
clc
in
addr16
push
xchg
lahf
sub
pop
or
stos
and
xor
pop
mov
cmp
outsb
sub
es
sahf
dec
fisttpll
rcrl
orb
cmc
rcrb
call
adc
mov
stos
and
xchg
jo
lea
fisubs
xor
pop
xchg
add
repz
pop
mov
pop
mov
sub
pop
dec
xor
or
jne
mov
xchg
sub
into
mov
lds
sahf
jno
cmp
sub
clc
jle
mov
dec
hlt
jp
sbb
push
mov
mov
ss
mov
lods
mov
add
leave
adc
stc
mov
xor
pusha
sub
stc
and
call
xchg
rcll
sbb
jno
push
in
lock
xor
loop
or
ds
dec
inc
push
sbb
push
lock
gs
das
inc
out
andb
dec
dec
sbb
jb
adc
faddp
in
mov
sbb
lods
cltd
and
ficomps
test
ret
out
mov
lods
ret
gs
xchg
dec
repnz
jns
lahf
aas
pushf
pop
mov
mov
mov
loope
jns
xchg
ds
push
das
lods
fstpt
cmc
mov
cmp
add
iret
xchg
xchg
lcall
sbb
scas
jl
pop
mov
pop
xor
jae
pop
in
pop
je
or
into
popf
pop
add
adc
test
adc
outsb
mov
lds
push
adc
adc
out
dec
jns
je,pt
pop
pop
lea
insl
lret
mov
dec
js
test
int3
push
loop
fists
scas
fs
jmp
jae
stc
imul
and
xchg
jne
imul
push
xor
add
jmp
shll
mov
sbbl
dec
js
inc
or
or
push
rcrb
or
bound
insl
cmp
push
or
mov
out
inc
xor
mov
xchg
xchg
fs
sub
lret
jl
cmp
mov
mov
xchg
in
ss
stos
push
daa
push
movsb
and
xchg
xor
or
add
xor
push
loope
dec
jno
test
adc
insl
push
jnp
popa
lea
push
pop
and
cmp
dec
jb
cmpsb
sbb
jo
xor
das
sub
push
testb
rcrb
movsb
lea
cwtl
xchg
jbe
shrl
add
sbb
rep
push
nop
je
add
test
mov
cwtl
xor
xchg
fisubl
in
cs
dec
inc
or
push
enter
jecxz
ret
dec
cmp
jne
adc
test
mov
mov
ljmp
stc
cmc
ljmp
push
pop
shrl
sub
inc
into
xlat
js
mov
sbb
pushf
mov
ss
adc
in
xchg
jno
or
mov
fdivrl
repnz
js
adc
pop
loopne,pt
lahf
adc
sbb
xchg
pop
arpl
scas
hlt
adcl
stc
xor
dec
adc
lret
shll
sbb
jae
cmc
adc
mov
pop
lret
xchg
adc
or
lea
push
mov
lods
pop
cmp
lods
fsubr
fnstsw
sbb
ret
sbbb
les
or
sarl
mov
mov
mov
mov
inc
shl
movsb
movsl
dec
xchg
ss
mov
stc
jp
outsl
fstps
add
or
aad
fidivrs
je
lea
adc
jbe
mov
push
fsubp
insl
sar
stos
cmpsl
cld
iret
cmpl
sbb
cmp
jae
in
scas
into
add
enter
cmp
add
jmp
in
dec
inc
adc
ret
jecxz
loope
stos
fistpl
or
sbb
test
les
cmp
mov
mov
je
adc
mov
aad
adcb
imulb
add
sub
orb
push
shll
mov
sub
dec
and
loopne
popf
jae
push
ljmp
inc
mov
in
arpl
jl
jnp
je
cltd
cli
adc
subb
popl
scas
lods
mov
inc
add
mov
cli
jmp
or
mov
into
mov
sub
shrl
cmp
adc
cli
and
popf
fcoms
cmp
pusha
bound
cmp
push
jg
push
or
inc
pop
testb
out
pop
shrb
push
shll
inc
sub
cld
gs
pop
push
xor
stc
mov
and
lret
dec
pop
lret
scas
enter
mov
scas
lock
push
inc
dec
lret
and
ds
outsb
stos
mov
inc
cmp
mov
jge
movsl
jl
mov
add
mov
jns
dec
imul
and
loope
cmpsl
pop
mov
add
mov
jp
in
xchg
or
in
orb
dec
shlb
adc
cmp
notb
clc
mov
testl
insb
push
mov
out
and
adc
push
xchg
mov
in
movsb
or
repz
pop
xor
adc
stc
push
push
cmpsl
push
sub
and
scas
jge
sub
repnz
xor
inc
cmc
mov
cmp
pop
movsl
mov
ds
pop
lods
dec
or
fstpt
xor
cs
mov
arpl
and
sahf
jmp
mov
fsts
push
je
fneni(8087
xor
mov
out
jg
aaa
xorb
or
repnz
and
inc
lcall
leave
faddl
movsl
in
xchg
jmp
sahf
outsb
aaa
mov
push
jge
sub
nop
mov
dec
dec
enter
mov
and
inc
pop
jg
jl
iret
out
mov
xchg
test
loope
shll
dec
mov
mov
mov
dec
enter
out
scas
lock
pop
imul
divl
nop
mov
dec
xchg
xor
or
push
cli
test
scas
lods
fdivs
sbb
inc
xchg
sbb
push
cmp
and
sbb
in
test
mov
and
xor
cltd
test
in
cmc
pop
lock
xor
js
sbb
mov
adc
lahf
das
loope
inc
inc
stc
mov
das
icebp
xchg
mov
pop
enter
test
mov
mov
leave
cmp
les
mov
mov
das
add
into
jo
aam
ret
and
shrb
icebp
subb
call
out
push
shlb
lds
insb
sub
int
popa
loopne
and
dec
popf
and
and
fdivs
fcoms
mov
fildl
jmp
push
xor
push
sub
sbb
in
popa
push
ret
push
inc
out
out
inc
jno
stos
aad
xor
dec
fnstsw
test
lds
sub
jo
inc
push
ficompl
stos
pop
cmp
in
mov
sbb
test
adc
xchg
xor
adc
or
idiv
sub
ret
fistpl
loop
pop
push
in
dec
arpl
inc
xor
or
das
test
inc
pop
xchg
aaa
sub
dec
cmpsb
xchg
jns
sbb
dec
add
push
lds
cld
cmc
add
jmp
push
shlb
jne
pusha
xchg
movsl
dec
jb
cltd
jno
test
push
nop
into
xchg
call
std
cli
into
mov
mov
jl
out
xchg
in
mov
lea
fdivl
pop
mov
fwait
ja
cmp
scas
cmp
mov
mov
imul
in
sub
xchg
mov
imul
icebp
push
xchg
mov
push
cmpsl
fiaddl
std
push
mov
sti
pop
sar
shrb
push
loope
pop
fucomi
jae
jo
rclb
inc
inc
xchg
pop
cmp
or
jl
jns
in
testb
xchg
enter
imull
inc
mov
shrb
scas
and
sbb
pop
add
dec
popa
push
and
bound
mov
cmp
pusha
pop
lock
xor
mov
aaa
in
fwait
int3
imul
repz
sti
outsb
adc
imul
lds
jbe
mov
jb
fcom
xchg
mov
jl
mov
push
shrl
xchg
int3
mov
inc
mov
cltd
je
jp
shr
dec
iret
sahf
push
int
lds
call
xor
mov
inc
cmc
stc
cmp
and
push
cmp
xchg
fstl
sub
out
lcall
fs
das
mov
out
xor
inc
scas
sbb
dec
clc
xchg
inc
inc
lock
clc
xchg
arpl
adc
inc
xchg
into
xor
xlat
xor
nop
cmp
sbb
pop
daa
lock
ficomps
xchg
test
jl
in
stos
add
inc
movsw
addr16
adc
mov
push
cltd
adc
inc
lods
xor
shrl
push
movsl
test
mov
mov
mov
cwtl
fisubrs
xchg
dec
push
divb
leave
mov
xchg
andl
aas
imul
inc
mov
sahf
fcoms
ret
aam
mov
mov
mov
mov
loope
push
decb
sbb
dec
adc
jmp
das
test
ljmp
in
cs
mov
jo
mov
mov
in
add
cmp
ss
cmp
call
mov
movsl
ficomps
or
daa
test
add
push
outsl
loope
lahf
dec
inc
out
lea
cmp
lods
lock
xor
jmp
sub
icebp
daa
jg
pop
sub
in
jno
jmp
cli
or
add
mov
push
mov
lock
out
jle
lret
jne
jp
inc
cmp
mov
jg
jecxz
adc
xor
inc
jne
pop
jns
mov
dec
hlt
xchg
mov
cmp
cmp
hlt
fbld
xor
mov
aaa
test
xchg
loope
inc
xchg
and
xor
fldl
notb
test
movsl
gs
lods
push
inc
aad
repz
sbbl
lock
in
jns
dec
lds
cmpsl
daa
xchg
insl
inc
repz
ficomps
adcl
cltd
push
cmp
clc
push
shr
and
inc
jb
mov
mov
test
leave
cli
stos
mov
stc
inc
adc
orb
xchg
rcl
orb
outsb
mov
pop
addr16
dec
and
in
push
mov
pop
jnp
mov
and
insl
cmpsb
movsb
enter
mov
jmp
xor
mov
mov
mov
cli
icebp
fs
test
into
ljmpw
sub
cmpsb
test
jp
loopne
cltd
xchg
sub
aam
ret
xchg
cmpsb
jge
sbb
dec
jle
aad
imul
mov
push
imul
pop
leave
mov
shlb
scas
std
scas
popa
ret
aad
cmp
into
sbb
cmp
mov
mov
subb
pusha
sub
insb
sti
mov
inc
sub
xor
jg
ds
fidivrs
or
add
mov
add
pusha
rorl
outsl
dec
push
cmp
mov
and
and
pop
ljmp
or
fildll
mov
cli
xchg
xchg
xor
int3
sub
lock
and
inc
jns
outsl
pop
pop
bswap
lods
les
push
ficompl
subl
clc
xchg
jg
add
mov
repz
jo
push
lahf
lcall
into
cmpsl
xor
xchg
dec
push
push
out
add
jb
pop
jns
lret
lods
cs
in
dec
lds
fnstenv
inc
xor
xchg
testl
or
das
cmpsl
mov
adc
arpl
sbb
gs
inc
int3
mov
add
dec
nop
xchg
in
xchg
in
mov
cmp
faddl
inc
inc
call
mov
jns
jmp
icebp
movb
cld
inc
add
pop
das
inc
xorl
subb
push
jg
cmp
nop
lret
push
testl
mov
mov
jge
inc
mov
fistps
repz
fdiv
scas
xchg
loopne
test
adc
out
dec
mov
test
fdivr
sbb
js
sbb
jle
pop
out
les
cmp
icebp
aam
aad
and
inc
repnz
movzwl
mov
repz
fnstcw
xor
xor
cmp
push
nop
fcmovnbe
adc
mov
shll
popf
sub
dec
xor
movsl
enter
sbb
out
add
ljmp
dec
sub
addr16
mov
pop
in
jge
inc
or
xor
mov
addr16
jns
pushf
lds
sbb
push
sbb
mov
mov
and
pop
mov
sbb
add
jge
out
testl
mov
out
cmp
push
push
cmp
and
push
and
aaa
inc
or
xlat
stc
scas
adc
mov
jecxz
adc
jle
and
mov
and
cmp
sub
arpl
dec
mov
push
xor
cltd
loope
mov
sub
lcall
es
clc
inc
xchg
lret
sar
inc
push
push
imul
inc
mov
imul
sub
or
adc
mov
pop
bound
repz
mov
push
jno
daa
push
xchg
sbb
pushf
inc
pusha
fsubrp
push
jp
dec
in
mov
mov
rep
pop
add
lock
and
adc
xor
cs
xor
mov
es
and
pop
add
xor
addl
adc
xor
loopne
sub
dec
imul
gs
test
ja
dec
inc
arpl
adc
cmpsl
lock
test
inc
test
xchg
inc
push
stos
adc
sahf
push
xchg
stc
sahf
dec
cs
lahf
repnz
lods
iret
mov
push
addr16
cltd
fstpl
inc
loope
xor
pusha
xor
insb
jb
mov
cmp
and
mov
cli
pop
and
xorb
mov
scas
into
xchg
lret
movsb
sub
rcr
leave
and
dec
or
cmc
add
dec
adc
xor
popa
lods
in
sbb
lock
stc
cmp
lcall
mov
addr16
jecxz
test
insb
loopne
ss
lahf
xor
cld
jae
repz
fisubs
xor
or
sub
dec
adc
movb
xchg
push
dec
adc
push
loope
lcall
dec
aad
or
sbb
stos
stos
loop
rcrb
fistpll
mov
mov
stc
fdiv
rcrl
ss
aam
and
movsl
push
lahf
jne
repnz
add
pop
aam
int
mov
rcl
and
inc
aam
mov
or
ljmp
inc
xchg
xchg
fnsave
mov
fsubl
das
repnz
push
push
movsl
sahf
fsubp
push
cmpsl
or
or
pop
jne
push
ja
sbb
pop
mov
push
popa
mov
sub
out
mov
int3
xor
add
adc
jno
sbb
jne
stc
push
xor
popa
xchg
ficoms
movsl
xchg
das
leave
repnz
xchg
ret
and
xlat
cs
push
dec
call
mov
adc
jae
dec
imul
lcall
or
jo
add
mov
fsubr
sbb
mov
mov
lea
adc
add
jo
mov
sti
dec
cmp
push
inc
jmp
stos
add
popa
mull
icebp
jg
xchg
gs
add
pop
cmpsb
fidivl
fstpl
push
or
mov
inc
xchg
dec
pop
bound
dec
cmc
mov
int3
cmc
aam
mov
rclb
jge
push
loop
addb
adc
aad
orl
mov
cmp
adc
sbb
sbb
or
enter
pop
mov
dec
mov
pop
sti
js
cs
mov
sub
mov
loopne
mov
aad
xor
adc
adc
sarb
je
push
int3
mov
aad
loopne
iret
out
sti
pop
incl
mov
adc
xchg
mov
mov
aam
aaa
jle
mov
xlat
or
pop
je
in
sbb
add
lret
push
je
mov
inc
mov
daa
dec
jmp
xchg
mov
cli
rcrl
push
xor
inc
sahf
mov
arpl
pushf
loopne
das
pop
mov
iret
xor
sbb
rorb
addr16
adc
mov
pop
jbe
inc
mov
sub
fildll
jns
mov
xchg
dec
cwtl
sub
pop
pop
or
popa
pop
cmp
mov
ja
and
test
dec
jnp
inc
iret
cmp
aam
adc
lods
sub
sub
sahf
repz
xchg
cs
mov
lcall
sbb
inc
aad
push
xchg
xchg
rcll
mov
mov
dec
cmp
popl
outsl
cmp
dec
xchg
mov
mov
movsb
jmp
andl
mov
pop
xchg
sub
add
das
push
out
jae
cwtl
or
lret
fs
cmp
fiaddl
mov
xchg
dec
mov
out
inc
add
mov
in
in
stos
adc
repz
lods
jmp
or
je
inc
roll
int3
add
int3
outsb
stc
and
into
sub
jge
inc
adc
lock
movsb
cmp
fbld
sarl
mov
or
push
and
push
mov
test
adc
push
pushl
xchg
sub
cmpsl
in
shlb
pop
jle
pop
sub
loope
loope
es
les
lret
pop
lcall
jne
pop
xor
in
shl
bound
xchg
fs
mov
testb
jl
mov
inc
cld
mov
insb
sbb
xchg
iret
ss
int3
lret
push
inc
push
iret
pop
add
fstpt
mov
cmc
sbb
es
movsb
and
inc
hlt
mov
push
jecxz
into
sti
mov
cmp
xchg
repz
testl
subl
shlb
mov
mov
and
out
scas
push
sbb
js
mov
cld
mov
xlat
add
aas
dec
mov
mov
xchg
sub
outsl
mov
in
fidivrl
js
adc
out
test
pop
push
xor
jge
popf
push
push
jnp
xchg
mov
mov
stos
pop
push
lret
xchg
int3
xor
out
inc
adc
movsb
mov
xchg
pop
adc
pop
out
sbb
mov
jne
mov
jp
mov
mov
push
sbb
pop
pusha
dec
jecxz
mov
cwtl
inc
pushf
scas
dec
or
jl
push
lock
mov
in
sbb
push
dec
jl
mov
adc
int3
js
test
cmc
aaa
mov
xor
or
add
xor
stos
jg
inc
bound
mov
add
sbb
and
fldt
pop
jne
dec
jbe
lea
pand
pushl
rcrl
xor
push
lods
mov
adc
pop
dec
dec
in
lea
test
out
in
jnp
add
push
jle
dec
fdivrl
nop
iret
popa
lret
sub
jp
in
imul
sbb
rclb
mov
cwtl
jno
jnp
lods
mov
pop
push
imul
jnp
xchg
jmp
or
push
stos
mov
nop
inc
call
je
push
xchg
push
sub
aas
pop
dec
cli
adc
push
test
lcall
fidivrs
dec
mov
sti
xchg
movsl
clc
add
sahf
sti
push
push
mov
or
jmp
push
cmp
inc
ds
std
mov
insb
xchg
cwtl
fs
jae
jmp
mov
shrl
adc
inc
clc
add
cmp
orl
mov
std
incl
test
outsb
lods
and
pop
sarl
int
dec
rcl
cwtl
jge
mov
sti
inc
pop
in
pop
mov
out
ss
mov
sub
xchg
mov
xchg
ja
mov
mov
ljmp
or
test
jg
pop
lds
pop
into
xor
lcall
sub
push
cli
pop
scas
mov
out
mov
fbstp
mov
dec
mov
xchg
sub
popa
mov
xchg
mov
sub
mov
popa
cs
mov
out
sub
jle
icebp
test
add
clc
sub
push
mov
push
shrb
add
sbb
mov
cli
fcmovnbe
push
test
or
push
popf
ljmp
aaa
dec
mov
dec
cld
inc
cld
push
ss
addr16
dec
jmp
jne
out
ljmp
inc
lods
xchg
daa
inc
dec
movsb
js
inc
testl
add
jae
add
out
pop
clc
fdivrl
push
jnp
mov
fidivrl
test
in
repz
xlat
cmp
test
scas
sbb
inc
pop
jle
mov
pop
mov
jo
push
push
xchg
jae
dec
test
insb
mov
xchg
cmp
scas
add
mov
mov
dec
out
push
loop
xlat
cmp
adc
xchg
mov
dec
mov
inc
jo
jbe
leave
insb
mov
dec
out
loop
aas
mulb
les
xor
jp
stos
push
sbb
pop
push
out
sti
cltd
in
test
pusha
into
aam
add
fnstenv
mov
inc
push
jne
sub
xchg
add
popf
int
pop
sarb
cmp
add
or
cmpsl
or
ds
inc
lahf
test
arpl
data16
add
addr16
into
fwait
push
adc
shlb
push
push
cltd
outsb
mov
out
mov
inc
std
shll
pop
loope
adc
daa
insl
and
cmp
pop
push
setp
mov
mov
hlt
sbb
push
out
cli
push
mov
sub
jge
cmp
scas
jg
sbb
lds
int3
scas
mov
out
jmp
flds
lret
sti
scas
cmc
repz
hlt
lds
and
es
jne
cwtl
jbe
stos
out
sbb
dec
out
rcrl
out
inc
push
pusha
pop
ds
mov
shlb
push
shl
int3
call
jno
xor
je
scas
test
and
inc
xchg
incl
or
nop
les
cld
jo
fldt
adc
xchg
add
cs
mov
rorl
inc
fisttps
es
xchg
rolb
xor
lret
ljmp
xchg
jo
sub
pusha
lods
fidivl
ljmp
pop
test
xor
mov
in
aaa
fnstcw
cltd
pushf
pop
sbb
leave
inc
jle
pop
scas
dec
jmp
nop
sub
insb
cli
fimuls
xchg
cmpsb
dec
and
adc
subl
inc
lds
push
mov
lahf
mov
das
or
rcl
or
xlat
popa
xchg
iret
jge
shlb
sub
adc
rcl
mov
lock
pop
sbb
xor
jnp
push
sbb
xor
ss
xchg
or
adc
fldl
cmp
mov
push
sbb
add
push
dec
aaa
and
push
call
mov
or
cmp
cmp
lds
sbb
sahf
in
and
icebp
ret
pop
adc
fistpll
pop
xor
in
mov
and
push
xor
ss
cmpsb
pop
push
in
lcall
push
enter
sahf
cmp
mov
cmp
pop
hlt
xlat
jb
loopne
pop
jb
ds
test
ja
daa
das
add
cltd
jae
sbb
sub
fldenv
cmp
push
sub
imul
xor
inc
and
sub
in
stos
add
cwtl
aas
push
out
sub
dec
mov
jne
push
lret
adc
in
insb
mov
test
add
int3
mov
xor
xchg
je
mov
pop
test
mov
push
test
dec
push
add
ret
add
in
dec
add
xor
out
lds
sbb
in
fs
and
mov
and
inc
inc
pushf
xchg
cs
mov
seta
dec
ss
inc
ss
sarb
mov
ret
popa
jo
mov
mov
push
jge
xchg
movsb
or
clc
jae
daa
sbb
sbb
or
mov
dec
sbb
sbbb
mov
lock
mov
nop
lahf
push
movlps
mov
repnz
jp
roll
inc
sub
jne
divl
fiaddl
inc
hlt
loope
xchg
jg
cs
cli
stos
das
jae
pop
push
cltd
hlt
jl
out
filds
lea
jp
out
xchg
and
in
fcompl
sti
aas
test
mov
mov
ljmp
cs
mov
adcl
sbb
jae
mov
out
xlat
xor
xchg
test
imul
xchg
add
adc
and
daa
pop
bound
dec
test
mov
repz
mov
jmp
pusha
stos
dec
rcr
jp
jbe
mov
add
cwtl
test
sti
adc
cwtl
sti
popa
mov
rcrb
sbb
stos
mov
test
es
stos
xor
cmp
movsl
xchg
mov
jnp
jae
stos
xor
mov
sbb
cld
push
mov
call
subb
xlat
push
sbb
sub
mov
or
lock
pop
push
lea
mov
xchg
or
rolb
mov
jno
scas
xchg
jg
mov
frstor
xor
outsb
lods
push
mov
aad
xchg
mov
add
cld
mov
movsb
pushf
or
shlb
or
repz
je
loop
xchg
fistps
mov
mov
xor
and
loope
xchg
cmp
inc
mov
mov
sbb
cs
jp
fldcw
fs
jo
xor
pushf
mov
lods
js
enter
or
mov
sarb
lods
cmpsb
popf
dec
rcr
xchg
xor
in
data16
movsl
mov
stos
cld
mov
pop
mov
fs
mov
mov
rorb
outsb
inc
iret
leave
xor
and
sbb
sbbb
dec
int
sbb
mov
shll
xor
mov
cmp
cmpsl
and
mov
in
ja
das
mov
lret
inc
inc
fisubl
xor
cmp
jg
adc
xchg
shll
mov
mov
pop
jns
adc
pop
dec
inc
pop
bound
sub
push
jno
mov
test
adc
cmp
jne
xor
lock
xor
iret
and
adc
xchg
mov
frstor
cmpsl
mov
out
popf
mov
int3
std
in
filds
cmp
pop
adc
cmp
inc
std
call
add
cmc
inc
andl
or
cmpsl
and
arpl
mov
js
xor
loop
lcall
jns
mov
or
pop
aas
mov
stc
push
outsb
cmp
into
cmp
call
mov
mov
mov
sbb
orl
iret
iret
mov
mov
movsb
fsts
inc
sub
fsubrl
xchg
jmp
stc
xor
mov
mov
mov
xor
or
mov
into
lcall
addr16
iret
shrl
hlt
pop
fwait
lds
cmpsb
data16
xor
push
sbb
fisubrs
ljmp
lods
rcrb
ljmp
pop
incl
adc
or
mov
mov
sub
push
mov
jae
hlt
mov
addl
or
cmp
in
aad
lods
pop
pusha
lods
lock
and
mov
add
dec
push
shll
into
add
fisttpll
subl
adc
shl
fisubrl
leave
out
cli
jecxz
mov
xlat
int
inc
bound
cmp
dec
xchg
dec
stc
movsb
ret
pop
push
imul
pushf
lods
add
mov
push
or
or
movsl
fistpl
test
imul
fistpl
jge
cmp
pop
dec
dec
subb
xor
xor
mov
aad
cmpsb
insl
cmc
push
cmp
mov
aas
sub
jg
lods
jnp
xor
into
mov
dec
popa
lock
inc
or
and
cmp
add
sbb
push
pop
in
cmc
or
pop
cld
or
jmp
inc
int3
cmc
sbb
stos
shll
je
xor
outsb
sbb
je
pop
mov
data16
insb
sub
scas
aad
jl
jno
aas
lea
mov
leave
lods
jne
rorb
mov
cmpsb
pop
xor
dec
mov
subb
push
shlb
add
cmp
mov
fisubrl
jl
dec
hlt
aas
add
out
or
push
outsb
aaa
jp
dec
sbb
sbb
mov
and
dec
subb
mov
push
pmulhuw
jb
ret
lahf
sbb
adc
cwtl
arpl
jge
mov
ret
mov
int3
push
or
dec
pop
stc
pop
lock
psubsw
test
jge
test
outsl
jg
dec
jecxz
pop
aaa
cmpsl
sti
pop
push
lahf
xlat
sub
movsb
aaa
pop
bound
sbb
shrb
push
lods
scas
mov
and
fists
add
jg
add
xchg
or
ret
or
and
push
jp
cmp
dec
push
jl
sub
ljmp
inc
fnstenv
jge
inc
loop
sbb
sbb
cmp
pushf
pop
jne
fdivrs
sbb
ja
push
push
pop
jb
and
push
adc
cmp
adc
sub
jno
push
sub
inc
fsubs
imul
cmpsb
push
int3
icebp
inc
in
mov
imul
mov
push
mov
sbb
xchg
das
and
add
xchg
add
aas
mov
sbb
cmp
sbb
lds
mov
cmp
jle
mov
in
mov
sbb
xor
xchg
subl
das
pop
ja
mov
dec
mov
insl
xchg
fmuls
jbe
scas
cli
out
xor
pop
xor
push
cmp
movsl
push
mov
push
mov
sarl
ja
mov
mov
jo
movsb
popa
cmpsl
jns
adc
or
mov
add
pop
cli
cmpsb
lcall
xchg
mov
mov
shl
and
dec
mov
push
jne
mov
mov
cmp
push
dec
dec
jp
scas
les
mov
je
movsl
ss
aaa
faddl
jno
nop
mov
adc
and
and
push
pop
bts
mov
testb
and
push
loop
mov
movsb
adc
and
sbb
jg
pop
lret
rorl
pop
cmp
cltd
inc
and
mov
lcall
jg
pop
mov
or
int
push
ret
shll
sub
mov
mov
ret
scas
pop
sbb
std
lds
xor
fstps
cs
lds
sarb
popa
cmpsl
movsl
cmp
popa
inc
ljmp
rorl
mov
jecxz
paddsw
hlt
push
lods
mov
cmp
iret
jnp
ret
rorl
mov
sub
jno
pop
loopne
dec
mov
pop
sub
xchg
lea
sbb
jp
sub
sub
jnp
mov
gs
imul
and
test
cmp
xor
mov
cmp
mov
or
mov
jp
rcll
mov
xor
sarb
scas
stos
sbb
leave
xor
jb
or
out
pop
pop
rcl
jmp
js
mov
xchg
dec
test
fstl
dec
xchg
mov
aaa
insb
and
cmp
mov
jb
pusha
mov
ror
shrb
xlat
test
mov
or
aaa
dec
fcmovnu
fs
xchg
in
daa
lock
mov
and
xchg
in
aad
dec
stos
inc
dec
mov
jecxz
xor
mov
mov
jns
cltd
cmp
sub
gs
cwtl
stos
lock
sub
iret
or
or
movsb
in
mov
dec
insb
outsl
in
shrl
cld
fstpt
outsb
sbbb
cmp
cs
test
mov
fistl
xor
add
rcr
xchg
mov
inc
cwtl
inc
out
lds
jmp
aam
out
je
or
out
loop
cmpsb
inc
push
movsl
hlt
nop
mov
sbb
mov
pop
stos
push
push
xchg
add
notl
dec
test
cmc
or
enter
int
pop
addr16
aad
lea
dec
loope
in
and
lea
push
cli
test
mov
push
and
push
mov
push
es
imul
cmc
loopne
lret
sbb
negl
add
mov
cli
out
scas
mov
popa
enter
cld
out
vpunpckhwd
lods
test
sub
mov
push
push
out
adc
lret
add
mov
mov
ror
add
pop
aas
push
frstor
mov
pop
in
and
loop
push
add
xor
pop
sti
subl
dec
xchg
mov
insl
nopl
or
inc
scas
enter
add
mov
mov
jbe
push
mov
inc
jae
adc
dec
fdiv
adc
out
pop
imulb
dec
gs
adc
test
pop
and
std
xchg
xchg
pop
and
repz
jns
sub
mov
mov
sub
popa
fcomps
mov
cmp
mov
cld
icebp
icebp
int3
hlt
movsl
nopl
mov
fisubs
pushf
hlt
loope
leave
pop
insl
fdivs
mov
jg
ljmp
mov
add
outsl
scas
sbb
dec
lahf
add
jmp
jnp
sub
cmp
fxch
sarl
out
or
inc
out
jge
rorb
inc
adc
shr
xchg
push
jo
pop
out
pusha
test
inc
inc
iret
idivl
sbbl
jmp
pop
into
xchg
jno
mov
loope
cmpsl
lods
push
pop
fucomip
shl
mov
mov
cld
mov
stc
sub
xchg
imul
shrb
push
pop
enter
int
push
mov
or
lret
sbb
andb
jno
in
pop
repnz
dec
dec
and
lds
adc
sub
jno
xchg
dec
adc
sahf
sahf
test
pop
dec
pop
mov
jmp
mov
xchg
orl
in
mov
mov
xorl
mov
push
popa
lods
cltd
repz
stos
mov
and
movl
sub
scas
jge
les
push
bound
lods
sbb
pop
insl
movsl
je
xchg
mov
mov
pop
movsl
sbb
and
ret
aam
fstl
add
dec
or
mov
fildl
shlb
hlt
divb
aam
dec
inc
and
fists
mov
fdivrs
adcl
sbb
jns
loope
cmpsl
jp
lods
insb
mov
addr16
negl
imul
xor
and
sbb
jecxz
pop
fdivr
xor
sbb
loope
repnz
out
movsl
stos
push
outsb
mov
dec
jae
push
xor
ss
mov
and
mov
dec
mov
addl
test
push
or
mov
mov
out
jle
and
gs
aam
push
outsb
mov
lods
outsb
fimull
inc
push
pop
jmp
pop
adc
jmp
ljmp
cld
lret
mov
pushl
int3
insb
out
mov
jl
sahf
mov
mov
adc
mov
nop
jno
or
addr16
and
sub
repnz
or
add
gs
cmpsl
xchg
shlb
xchg
and
mov
and
push
aaa
aas
rorl
ds
jmp
dec
adc
adc
lret
je
rcrl
adc
std
mov
mov
sbb
adc
shl
xchg
jno
jne
nop
out
cmpsl
mov
flds
xorb
sub
cmp
and
mov
mul
mov
pop
adc
aas
jp
std
pop
cmp
add
pop
rclb
mov
xchg
inc
jle
mov
and
adc
test
xor
cs
fiaddl
inc
xchg
jae
mov
fmulp
repz
push
lahf
push
jnp
arpl
fistpl
insb
out
xchg
cmp
lods
add
mov
jnp
ljmp
sbb
sbb
insl
add
jge
jecxz
pop
inc
and
adc
sbb
shrb
addr16
gs
popa
mov
or
dec
enter
lock
xchg
adc
jne
mov
jl
insb
sarb
rclb
cmp
sarb
jmp
inc
xchg
sti
inc
cmp
lock
loope
test
les
ret
mov
popa
adc
je
call
cltd
mov
fisttpll
hlt
inc
andb
repz
sti
sub
push
add
adc
test
push
dec
inc
out
jno
std
fwait
ret
dec
dec
ljmp
jns
scas
out
push
jmp
add
xor
xorb
scas
jp
addb
mov
test
pop
xchg
lods
addr16
jbe
add
stc
fbld
gs
xchg
xor
sub
fcmovbe
mov
pop
out
push
push
shl
jge
ds
lcall
inc
mov
jp
adc
cli
add
mov
insl
idiv
fistpll
push
cmpl
insb
pcmpeqw
das
and
jge
inc
shll
add
in
lcall
mov
inc
pop
ret
mov
add
cmp
xor
in
dec
repnz
mov
fdivr
push
push
xor
rcrb
sbb
cmp
mov
sbb
test
xor
in
fs
inc
mov
or
lret
xchg
insb
push
xor
cmpsb
dec
push
cmc
imul
mov
sti
cli
jns
and
pushf
pop
cmc
add
roll
inc
into
out
sbb
pop
fidivs
int
pop
mov
enter
int
outsb
aaa
outsl
jp
pop
adc
pop
dec
sub
fcomip
call
mov
jle
pop
call
adc
push
int3
adc
mov
lret
xchg
and
test
lock
inc
pop
push
xlat
cs
inc
shlb
ljmp
or
or
mov
dec
and
lcall
jle
pop
push
jo
pop
dec
mov
fsubrp
pop
jle
lods
jno
aam
je
testl
mov
or
imul
out
popa
frstor
mov
xchg
js
sub
push
daa
gs
or
push
imul
lahf
cmpsb
scas
dec
fimuls
movsb
push
loope
jne
mov
sahf
or
lcall
inc
loopne
fs
test
stc
cmp
inc
jnp
mov
mov
pusha
push
add
push
fdivs
js
mov
jo
mov
add
mov
lret
ret
or
int
outsl
repnz
push
scas
inc
mov
push
adc
jp
dec
imul
sbb
push
sub
int
loop
jae
mov
mov
and
sarl
test
gs
mov
mov
daa
jae
sti
mov
sub
inc
xchg
jmp
mov
shlb
out
jle
mov
inc
mov
push
sub
je
push
sub
js
or
decl
pop
rorb
push
cmpsb
mov
jle
pop
arpl
pop
add
test
idivb
dec
xor
cmp
pop
mov
or
cmp
ljmp
dec
mov
cmp
fcoml
dec
cmp
mov
sbb
fdivrl
jge
inc
push
sub
int3
sarl
cmp
ret
mov
push
adc
lock
cmpsl
movsl
mov
add
mov
andb
jle
jno
dec
inc
fcmovne
or
addr16
mov
push
pop
cltd
mov
fistpl
and
stos
xchg
sbb
es
sbb
call
adc
jl
test
pop
push
xor
mov
mov
scas
dec
popa
rep
xorl
or
pop
jb
pop
addr16
sbb
push
mov
es
enter
xchg
sbb
loop
sub
repz
push
fldl
repz
and
xchg
and
xor
pop
popf
scas
aas
adc
inc
and
das
push
mov
sub
arpl
mov
pop
fmull
int
addl
dec
lret
cmp
clc
jne
dec
imul
or
fs
cmp
paddusb
inc
push
jne
jge
sub
and
adc
lock
aas
sbb
shrl
cmc
push
lahf
movsb
rolb
mov
mov
in
loopne
movsl
or
data16
push
mov
popf
pop
mov
cld
aaa
cmp
movsl
ficompl
and
sbb
pop
movsb
fmuls
mov
push
add
fs
jbe
repnz
jae
xor
bound
sub
sub
mov
out
xchg
sub
add
pushf
jge
repz
add
data16
cmp
in
pop
stos
mov
xor
jle
gs
addl
sub
das
push
pusha
jle
jb
inc
lcall
stos
les
dec
insl
cmpsb
out
lock
mov
subl
or
lahf
adc
dec
cmpsb
or
pop
test
loopne
das
cmp
jg
mov
div
orb
inc
out
cmp
push
loope
inc
push
outsb
xchg
push
sbb
sub
ret
or
stc
mov
sarl
sti
sub
jnp
rcl
ficomps
mov
add
xor
loopne
int
mov
push
xchg
xchg
movsl
bound
popa
repnz
rcrb
stc
mov
push
mov
je
dec
jbe
std
bnd
aaa
mov
jg
inc
jns
and
jns
lock
sbb
dec
js
loop
sub
mov
orb
lods
cmp
rcrb
mov
add
leave
repz
jl
mov
pop
push
jae
add
or
mov
fucomp
stos
pop
add
dec
repz
fidivs
cmpl
les
xchg
jo
shll
testb
inc
enter
cs
pop
xor
xchg
js
jo
mov
push
clc
cmpl
div
inc
std
imul
dec
jg
icebp
mov
jle
mov
inc
push
mov
ret
mov
xchg
jo
xor
pop
cmc
xchg
adc
jns
jne
lock
insl
push
xor
aad
das
das
fwait
std
xor
decb
mov
std
add
in
cmp
cmc
in
cmp
lcall
dec
mov
push
xchg
sub
and
or
and
test
pop
test
lret
mov
sub
xchg
pop
fisubrs
in
xor
lcall
les
out
cmp
mov
push
sbb
cmpsl
roll
insl
fwait
add
hlt
push
sbb
jge
hlt
ret
sbb
mov
mov
dec
inc
push
xchg
add
jmp
mov
imul
leave
pop
push
fstpl
mov
mov
cmp
jnp
lahf
rclb
ficoml
lahf
testl
dec
adcl
dec
xchg
and
dec
sub
add
notb
imul
test
mov
addl
jbe
ret
pop
test
andl
in
inc
cmp
dec
mov
inc
sub
insb
xchg
addr16
push
cmpb
jae
add
divb
inc
and
and
test
or
repz
stc
clc
das
mov
cwtl
jecxz
ffree
nop
fcomi
mov
cltd
sbb
mov
dec
add
popf
xor
xchg
je
jns
outsb
fwait
scas
xchg
lods
lods
loopne
mov
cmp
or
cmp
mov
out
loopew
jg
out
jno
xchg
mov
iret
je
out
or
in
xor
mov
pop
test
or
pop
fmuls
cmp
push
add
roll
pop
sub
movsl
fsubrl
int3
imul
std
das
es
mov
cmp
aad
sar
mov
mov
aad
xchg
enter
je
pusha
cltd
loope
dec
lock
bound
pop
xchg
lods
insb
mov
jge
out
push
lods
inc
pop
icebp
adc
mov
sbb
pop
cltd
stc
lahf
lock
in
dec
xor
fidivl
jb
jecxz
xchg
mov
popf
out
mov
rorb
out
ds
ja
cmpsb
cmovp
jp
stos
jns
jb
xorb
movsl
sub
hlt
mov
sbb
and
rcrl
inc
fsubs
add
inc
lahf
cmp
jbe
inc
mov
cmp
fildl
jecxz
lea
std
in
out
pop
rcrb
sbb
mov
sbb
add
jb
loope
add
enter
jb
mov
fildl
cli
cmc
jne
lods
mov
push
mov
loope
xchg
xorl
sbb
into
xor
xor
mov
jno
aam
notl
mov
xchg
cmp
pop
xor
ljmp
rol
shl
stos
in
mov
imul
add
cmp
cmp
xor
mov
pop
adc
decl
rcrl
jbe
jle
stos
mov
mov
jg
popf
and
cli
cmc
mul
push
jae
dec
push
fwait
out
xchg
nop
pop
cmp
scas
int
rcrl
sub
sahf
pop
fisttpl
loop
gs
sub
lock
xor
out
mov
pop
imul
mov
orl
mov
jp
xchg
lfs
incb
sbbl
xor
enter
xlat
outsl
notl
mov
mov
and
ret
and
fsts
aas
fdivs
xchg
popf
cmp
push
test
loope
int3
movsl
arpl
int
int
mov
arpl
sbb
enter
std
jne
aaa
mov
pusha
movsl
pop
cmp
dec
movsl
lea
imul
pusha
mov
mov
mov
mov
test
jg
mov
xchg
or
ss
js
pop
sub
push
inc
incl
xor
jge
add
inc
push
in
mov
movsb
int
fwait
jbe
jo
subb
sbbl
popa
stos
scas
xchg
repnz
jmp
or
popa
mov
fidivrs
inc
loopne
in
gs
stc
xchg
or
test
insl
nop
cmp
xchg
ljmp
daa
and
les
lret
imul
inc
cli
adc
pop
scas
push
dec
in
sbb
repz
dec
lds
add
idiv
cmpsb
xor
insl
add
xchg
call
gs
in
sbb
data16
jae
stos
adc
int
jbe
lock
or
adc
and
sbbl
xchg
loope
in
mov
popa
lcall
movsb
or
icebp
in
dec
jno
es
out
cmp
push
dec
sbb
add
cld
inc
xor
add
xchg
pop
jl
pop
shrb
fistps
jbe
cmc
pop
mov
mov
jb
fadd
or
or
hlt
lcall
ds
dec
dec
push
popa
je
pop
jmp
in
and
scas
ficoml
fmuls
pop
enter
popf
add
nop
and
fdivrl
xchg
and
mov
scas
pop
shl
mov
push
sub
jb
out
dec
xchg
aad
ret
fst
push
ret
push
sahf
cli
ja
pop
and
and
mov
outsl
mov
frstor
add
and
jnp
orl
addr16
mov
rolb
ljmp
mov
sub
dec
push
scas
test
push
dec
pop
add
lcall
testb
sub
inc
imul
xor
test
adc
xchg
mov
mov
mov
outsl
sub
bound
push
divb
enter
lea
data16
mov
mov
je
adc
iret
and
jnp
push
cmp
call
fbld
inc
dec
cwtl
fildll
xchg
sub
test
push
dec
jmp
popa
ret
sub
lret
lahf
sub
or
cmpsl
imulb
mov
hlt
inc
cli
mov
repz
inc
push
jp
dec
into
cmp
jne
call
in
fnstenv
inc
enter
jo
shrl
fdivrs
mov
adc
jo
jns
daa
pushf
ljmp
call
and
push
out
hlt
ret
enter
lea
adc
aad
imul
mov
pop
insl
jbe
popf
fbstp
ret
sub
mov
notl
scas
pop
sub
jae
jmp
movntps
mov
sbb
and
mov
out
push
fdivrl
sbbb
cli
jbe
sub
cmp
and
sub
xchg
fsubr
icebp
test
pop
fldt
lahf
into
lock
out
inc
jns
mul
test
add
or
jb
imul
pop
add
sbb
aas
xchg
leave
jno
sub
mov
ja
mov
xchg
mov
xchg
test
mov
mov
jae
imul
addb
dec
cli
jl
or
mov
adcb
movsl
incl
mov
jmp
cmp
adc
cmp
sbb
mov
mov
cmp
add
pop
loope
dec
dec
jl
lahf
cmp
fdivr
mov
inc
and
jnp
jmp
jns
xchg
jecxz
push
roll
sub
mov
fdivl
mov
stos
cmc
movsl
shrb
mov
or
xchg
inc
mov
cs
cmc
xor
stc
int
dec
pop
xor
scas
arpl
add
pop
fs
jb
xchg
jg
push
lret
push
leave
popf
cli
mov
fdivr
shl
push
mov
push
inc
xor
fxtract
test
cmp
test
mov
adc
aad
sti
leave
adc
and
sbbl
sbb
ss
dec
xchg
mov
mov
xor
in
mov
xor
ljmp
fnstenv
xabort
mov
dec
nop
jmp
cld
outsl
xor
cmpsl
repnz
ret
sbb
push
lods
mov
testl
mov
arpl
or
sbb
xchg
xor
out
mov
call
rcrl
cmp
add
inc
push
pop
inc
out
daa
push
loopne
sbb
push
xor
loope
cmp
das
xor
mov
lret
aad
data16
xor
jge
xchg
in
repz
mov
mov
je
fnsave
mov
or
dec
jae
pop
mov
loope
jp
cmpsl
pushf
cmp
loopne
pop
cmp
imul
push
push
mov
ret
cwtl
jge
fmull
lret
sbb
aaa
sub
sti
pop
aad
subb
jg
push
das
mov
test
jnp
rcl
inc
adc
xor
push
jns
test
insb
pop
mov
mov
fcmovnu
sbb
cmp
sbb
jl
inc
jp
push
lds
push
fistps
sub
xor
add
lds
in
pop
mov
push
cli
adc
cmp
rorl
call
ficomps
fmul
and
sbb
push
lds
stos
add
int3
sbbl
jl
dec
cmp
mov
mov
adc
mov
fdivrs
sti
pop
je
cmp
and
jb
jp
mov
dec
lret
and
cld
in
std
add
lret
fwait
inc
jmp
mov
pop
test
xlat
push
add
pop
test
jnp
ss
mov
clc
fisubl
xchg
dec
scas
lahf
mov
imul
cmc
fimuls
popf
mov
ljmp
add
jne
psubsb
jo
and
fdivrl
popl
movsl
adcl
in
je
push
cmpsl
imul
dec
xor
inc
adc
aas
out
cmpw
cwtl
add
add
into
jl
mov
pop
movsl
and
das
movsl
push
push
pop
mov
pusha
fwait
adc
rcrl
cmp
je
or
insb
ret
bnd
pop
int3
les
cltd
pop
cmp
loop
call
movsb
mov
int
test
pop
cmpsl
sbb
scas
clc
xchg
imul
xchg
or
ret
outsb
std
push
dec
mov
mov
push
cmp
ss
mov
cmp
in
push
jbe
mov
mov
push
push
dec
sub
jp
add
inc
iret
mov
inc
mov
or
das
mov
push
xor
mov
aaa
cmp
data16
outsl
xchg
sub
sub
popf
ret
mov
pop
insb
cmp
arpl
ss
in
movsb
sub
cwtl
sub
sub
mov
xchg
jmp
loope
out
dec
push
aas
scas
pop
or
mov
jo
rclb
sbb
mov
std
mov
inc
loop
jecxz
mov
int3
inc
pop
push
or
inc
imull
mov
mov
dec
aad
lret
pop
jne
sti
add
nop
fcmovnu
ss
int
les
adc
sub
push
add
pusha
jne
movsl
jne
mov
mov
jle
pop
inc
push
sbb
out
popa
cmp
dec
gs
mov
mov
out
adc
add
cmc
sbb
lea
outsl
sbb
loop
pop
add
jp
fs
xchg
push
push
sbb
add
push
test
and
stos
out
pop
rorb
in
or
xorl
jb
mov
scas
push
inc
popa
add
xchg
jle
stos
sbb
sub
xchg
adc
pusha
pop
cmpsl
ss
mov
fisttpl
lea
mov
loopne
data16
std
aam
sahf
and
je
ja
shl
test
stos
mov
scas
dec
xor
xor
xchg
jnp
addr16
and
mov
or
lret
stos
cmc
xchg
pop
stc
imul
mov
dec
sbbl
xor
and
gs
adc
add
jmp
mov
repz
js
adc
pop
sub
push
mov
cmpl
incl
fs
pop
jns
out
imul
xchg
dec
dec
lods
out
jp
jmp
pop
insb
scas
ja
mov
insl
out
imul
das
inc
inc
xchg
or
xor
ja
adcl
mov
dec
cmpsb
test
xlat
or
repz
roll
lock
dec
ss
jb
out
lods
push
leave
enter
pop
add
gs
scas
inc
mov
or
mov
inc
daa
mov
and
push
dec
aam
sbb
aas
jns
add
jle
push
outsl
repz
inc
xchg
loop
in
stc
xchg
stc
insl
dec
inc
cmc
imul
mov
in
enter
jb
loopne
mov
out
mov
lock
add
xor
in
scas
popf
xor
pop
sub
aam
jp
cmpb
mov
je
inc
mov
and
cmp
and
cli
insl
lret
das
xchg
fmull
dec
lahf
fistps
jbe
ds
mov
pushf
dec
push
mov
popa
mov
push
mov
cmp
arpl
nop
jne
mov
xchg
dec
push
int
je
and
pop
sub
cmp
out
call
in
cmp
pop
std
jle
out
std
repnz
ds
sub
clc
out
mov
pop
je
popf
outsl
sub
jp
rorl
pop
jl
xchg
or
clc
xchg
dec
repz
pop
divb
das
fneni(8087
xchg
pop
xchg
sbb
mov
lret
cwtl
dec
dec
ljmp
xchg
or
lods
push
mov
sbb
or
xor
into
mov
enter
scas
out
pop
mov
jmp
inc
pop
jne
mov
inc
inc
sahf
xchg
cli
aas
stc
mull
push
icebp
mov
test
mov
aas
mov
jnp
es
pushf
xchg
add
add
jne
jnp
mov
into
push
sbb
xchg
pop
bound
and
pop
sti
pusha
sbb
push
jl
cmp
mov
jnp
in
test
aas
cmp
int3
mov
mov
dec
pop
cmpsl
push
xchg
test
pop
cmp
mov
xor
jns
neg
dec
and
loopne
shrb
and
inc
call
fistl
push
aaa
int
sbb
dec
adc
fiaddl
rcl
dec
int
sub
ret
bound
jmp
fsubl
ret
gs
nop
xchg
jl
mov
bound
mov
daa
and
fwait
or
fcoms
jmp
fmull
mov
fcmovu
sahf
scas
push
ja
or
xor
mov
mov
cltd
sub
xchg
repnz
dec
mov
dec
lcall
lret
or
mov
mov
fnstcw
aaa
bound
mov
push
test
sub
cmp
shrb
xchg
std
jg
push
push
and
arpl
cs
sub
sbbb
or
sub
loope
fnsave
outsb
in
or
out
sbb
ljmp
push
movsl
jle
aas
rcr
sub
push
xchg
dec
mov
push
cltd
test
inc
sbb
fmull
mov
lea
push
add
test
ret
lret
add
push
xor
mov
testl
xchg
call
repnz
mov
nop
mov
mov
add
lret
mov
inc
and
cmp
dec
pop
out
shl
add
mov
push
ljmp
mov
aam
ja
leave
ror
call
pop
jge
and
dec
imul
add
and
xor
pop
mov
shrb
stos
fidivrs
pop
ds
aam
or
or
add
enter
iret
pushf
sbb
mov
inc
pop
and
mov
sub
pushf
scas
cmp
sahf
jecxz
sbb
lds
dec
ljmp
mov
sub
cmc
add
jnp
pop
movsb
scas
popf
je
ljmp
xchg
inc
rcr
xlat
push
or
and
cs
cmp
adc
pop
outsl
inc
jge
add
sbb
jae
mov
push
xchg
push
sbbb
mov
xchg
pop
push
xchg
jb
mov
data16
pop
push
jecxz
sub
push
sub
add
pop
popl
scas
addr16
xlat
xchg
int
adc
lods
xchg
push
gs
outsl
imul
std
sbb
lret
outsb
inc
cwtl
xchg
add
push
jb
pop
and
pushf
js
aad
lret
xor
mov
adc
fadd
jecxz
push
xor
fcomps
inc
out
mov
icebp
add
push
mulb
neg
dec
pop
imul
jne
ljmp
or
insl
mov
inc
daa
inc
inc
xchg
mov
or
dec
jno
dec
outsb
add
add
pushf
aas
jo
enter
sub
inc
sub
icebp
test
jnp
test
push
mov
inc
sbb
push
imul
cmp
mov
push
in
push
jae
inc
jg
cs
sbb
xchg
push
loope
scas
call
inc
insb
inc
or
pop
jge
jp
les
cmp
or
jp
repnz
sbb
pop
ds
and
dec
inc
lods
leave
mov
int
inc
dec
push
lea
dec
add
mov
xchg
sbb
pop
push
inc
jecxz
mov
ss
jge
dec
cmp
pop
pop
and
lret
cmpsl
xchg
inc
imul
add
mov
mov
adc
mov
dec
inc
xor
test
dec
push
enter
inc
mov
or
testl
and
lods
je
dec
les
arpl
je
roll
dec
jge
cwtl
scas
lret
xor
lahf
adc
int
push
loop
push
add
jns
sub
push
fsincos
sbb
jb
sbb
mov
and
ss
inc
aas
xchg
xchg
enter
cmp
inc
gs
dec
shr
mov
pop
pop
test
and
inc
pop
scas
cmpsl
lock
mov
jge
hlt
jl
push
stos
sub
jb
push
ss
das
mov
lds
xchg
mov
aaa
dec
cmp
add
gs
mov
test
imul
sahf
jl
cli
inc
aad
dec
addl
nop
push
icebp
dec
arpl
outsl
sti
iret
and
or
pusha
popa
aaa
xor
ds
fdivrl
jecxz
daa
pop
or
stc
xchg
imul
ficompl
push
pop
pop
leave
adc
lods
sbb
gs
outsl
notb
sbb
and
push
inc
movsl
push
push
dec
pop
in
loopne
lods
or
pop
xor
out
xchg
push
and
and
out
pop
movsb
cmpb
decb
pop
mov
imul
in
mov
xchg
dec
inc
jb
mov
jmp
mov
rorl
inc
cmc
loope
movsb
mov
sub
pop
js
notb
sub
jne
jp
sbb
int
scas
xchg
cmp
mov
es
or
jecxz
pop
and
jmp
push
or
je
jae
xor
xor
push
cwtl
xchg
cmp
inc
add
cmpsb
jge
sub
mov
jle
jne
add
jl
bnd
into
pushf
push
and
in
rcrb
popa
or
mov
cli
or
dec
mov
sbb
inc
jb
inc
cltd
test
push
pop
jmp
sub
add
mov
xor
inc
adc
mov
imull
dec
imul
aam
mov
lret
jne
cmpb
push
lret
es
cmp
adc
jne
xchg
jo
push
and
push
jns
jbe
popf
cld
test
inc
mov
push
inc
cmp
jae
popa
int3
xor
jo
data16
inc
mov
cmp
ret
inc
push
ret
lret
inc
push
inc
lahf
dec
repz
pushf
iret
jae
jle
negb
xchg
push
fists
lods
lods
cli
jnp
mov
push
sahf
shlb
jb
cmpsl
push
fstl
dec
or
jns
xlat
scas
xchg
fnstsw
test
cltd
push
stos
jbe
loopne
test
sub
lea
sbbl
cmc
imul
out
add
jne
test
inc
jl
das
sbb
mulb
in
enter
inc
cld
mov
mov
jo
mov
loopne
ret
into
mov
fwait
ret
adcl
mov
push
or
pop
push
and
mov
mov
loopne
fdivp
stc
inc
inc
push
inc
sbb
inc
orl
js
in
mov
xlat
leave
mov
rcr
in
or
sub
jmp
jmp
xchg
jnp
adc
jo
decl
cmpsl
jl
sbb
lcall
jecxz
repnz
add
xlat
pop
in
mov
or
dec
sub
hlt
and
and
push
loopne
sub
add
out
pop
xchg
fwait
gs
pop
mulb
daa
or
cmp
pushf
mov
clc
loope
mov
or
mov
push
aam
sarb
mov
in
mov
dec
inc
pop
ds
and
loop
xchg
mov
inc
fbstp
cmp
mov
jnp
pop
fiadds
lret
cmp
jp
clc
popa
aam
adc
jl
inc
cld
cli
adc
pop
push
mov
mov
outsl
sbb
int
push
sti
adc
cmp
pusha
mov
adc
sub
mov
xor
and
cmp
mov
or
sub
or
jp
pusha
test
or
dec
int3
out
or
xor
push
insb
mov
dec
sahf
mov
std
mov
xor
daa
adc
adc
xchg
mov
inc
testb
notl
xor
ret
iret
testl
popa
jp
lds
inc
cld
xor
test
loopne
repz
cmc
lahf
loope
loopne
sti
lcall
xchg
stc
call
xchg
movb
pop
lret
mov
sub
insl
add
jbe
sub
rcl
xchg
xchg
lret
jbe
sbb
ret
mov
cld
int
cmp
ror
mov
aaa
movsb
mov
mov
xchg
xor
lds
pop
popf
mov
shlb
mov
mov
out
add
and
jne
js
movsb
inc
aam
cmp
lret
or
mov
out
fmull
mov
addb
dec
int3
or
mov
cli
popf
push
gs
dec
or
pop
int3
sbb
mov
cmc
xor
push
xchg
clc
test
inc
sbb
dec
aas
int
out
adc
lods
in
sub
stc
sub
adc
shll
jns
push
push
loopne
arpl
adc
ficoms
add
mov
cltd
insl
loope
sbb
lcall
ja
inc
lret
dec
sahf
push
loop
fstp
push
dec
xlat
xor
pop
push
mov
mov
lcall
out
iret
xor
js
jmp
ret
mov
and
sahf
sarl
jle
mov
xorl
mov
fwait
sbb
cmpsl
cmpsb
popa
lods
dec
mov
ret
pop
test
shrl
push
xchg
dec
push
adc
test
popl
jne
cmp
out
seta
out
pop
sub
or
je
mov
js
add
mov
mov
jl
icebp
cmp
in
out
out
inc
xlat
jae
mov
mov
test
cld
cmpsl
adc
lcall
cmp
push
xor
xchg
jl
shl
add
jne
js
inc
insb
ret
pop
in
ret
pop
arpl
xor
add
and
add
das
clc
test
fistl
ja
insb
aas
rclb
mov
sbb
hlt
dec
sti
outsl
xchg
ret
outsb
xchg
dec
rol
or
xchg
add
cmp
push
mov
mov
in
int3
jae
stos
cmp
inc
cmp
add
mov
pusha
nop
sbb
lea
cmpsl
nop
lret
xchg
add
call
xor
inc
adc
mov
mov
lahf
loope
xchg
ss
rcl
mov
dec
fbld
mov
xor
into
add
ret
mov
mov
popa
sub
and
ja,pt
dec
jmp
out
xor
jne
in
icebp
sbb
jge
out
xchg
and
jge
repz
dec
mov
fists
jbe
repnz
jl
jecxz
adc
cltd
and
jb
mov
xorb
inc
add
sbb
rcrb
xchg
lock
lcall
dec
cmc
jae
lret
lock
in
loop
mov
aam
cmp
lods
and
mov
sub
mov
ret
sbb
sbb
pop
inc
sbb
pop
cmp
aad
cmp
mov
xchg
cmpsb
insl
dec
pop
add
add
inc
in
inc
ror
rclb
out
movsl
xchg
xor
lret
bound
jmp
shrl
sub
stos
jl
stc
cmp
lea
adc
and
or
xchg
lahf
es
xor
das
cltd
jecxz
push
pop
mov
or
cltd
outsb
cld
sbb
xorl
aaa
cmp
icebp
push
test
fsubrs
add
dec
out
insb
aad
mov
dec
mov
jno
jge
ja
cld
sbb
mov
jp
push
pushf
cs
mov
pop
mov
nop
or
xchg
fisubrs
enter
shl
ja
das
add
jg
repz
ss
ljmp
xor
incl
int
mov
push
or
xor
xchg
pusha
lea
rcrl
mov
les
jecxz
jge
fmuls
jne
jge
in
popa
add
jnp
aaa
repz
dec
xor
arpl
xor
mov
data16
xor
ljmp
call
andl
xor
xchg
push
notb
fwait
mov
fs
cmp
dec
ljmp
dec
ljmp
xchg
mov
or
or
dec
ds
movsb
mov
push
in
cltd
cwtl
adc
clc
pop
aam
imul
mov
mov
cmpsb
add
call
sbb
xchg
push
pushl
inc
shlb
adc
cli
jne
arpl
xchg
mov
or
rorl
push
ds
insb
cmpsl
mov
jmp
fidivs
dec
test
lret
adc
popa
xor
test
mov
lret
adc
xchg
fmull
dec
sbb
fisttpll
or
adc
clc
adc
sub
loop
pop
mov
push
outsb
in
xchg
inc
ss
sub
call
ret
sti
sbb
pop
into
js
daa
dec
hlt
cwtl
test
bound
out
add
mov
ret
outsl
sahf
dec
sbb
add
sbb
mov
push
cwtl
cmp
dec
movsl
pop
loope
bound
push
rclb
pusha
and
std
mov
inc
pop
cmp
inc
xchg
test
test
jns
jmp
jl
lcall
mov
mov
xchg
and
mov
pop
push
cli
andb
mov
aad
inc
lea
push
mov
xor
lea
enter
adc
repz
ljmp
lods
push
hlt
dec
fwait
test
stc
testb
in
loop
add
sbb
and
and
rcr
add
push
and
xor
mov
and
dec
sbb
adc
sbb
dec
fildl
dec
pusha
iret
dec
jge
push
scas
and
out
cmp
mov
inc
pop
mov
insl
jno
mov
sbb
xor
sbb
xchg
and
into
jecxz
xchg
xor
push
loope
jp
sbb
data16
ljmp
fistl
pop
inc
inc
mov
inc
mov
and
lock
arpl
ficomps
iret
sbb
mov
sub
test
mov
arpl
clc
push
fdiv
sub
mov
jge
ret
xor
lds
nop
and
cmp
xchg
add
sub
lods
lds
xor
xchg
outsb
and
push
or
jecxz
mov
mov
scas
int3
rcrb
and
pop
mov
push
mov
xlat
sti
lahf
jnp
xchg
loopne
mov
sub
push
sub
test
dec
rcr
jnp
xor
es
jae
adcb
mov
cli
leave
cltd
push
outsb
sub
shrl
mov
xchg
xor
enter
or
rorb
pop
xchg
jge
jo
mov
into
mov
aaa
sub
xchg
adc
shrl
mov
xchg
cmp
aaa
mov
push
cmc
shll
gs
es
das
outsb
xor
cwtl
shll
push
lods
cmp
or
dec
jb
out
sbb
dec
mov
push
mov
pop
addr16
inc
mov
repnz
scas
icebp
shll
adc
dec
pop
add
inc
mov
add
mov
mov
std
or
mov
sub
sub
inc
mov
mov
xor
cmp
loope
pop
popf
sbb
mov
sub
pop
test
addb
push
ds
sub
adc
js
lahf
icebp
out
cmc
push
dec
mov
mov
lret
ret
inc
pop
mov
add
sbb
xor
sub
movsb
into
cli
shrb
xor
int3
out
push
subb
jge
into
stos
jmp
scas
fnstenv
lahf
outsb
dec
pop
out
cmp
jo
xchg
xor
js
rorl
mov
cs
ret
mov
jae
dec
mov
inc
sbb
adc
cmpsb
stc
inc
lahf
sub
cmp
iret
xchg
call
xor
adc
imul
int
adc
pop
sarb
pop
push
mov
loopne
dec
jbe
push
cmc
add
stos
xchg
jmp
mov
xlat
popf
bound
ret
inc
push
pop
and
dec
jnp
push
scas
mov
out
movsl
mov
push
fisubl
mov
mov
add
std
mov
stc
cs
mov
mov
test
adc
dec
jg
fisubs
cmp
addr16
std
sti
in
xchg
and
cmc
and
push
shl
mov
lret
xor
add
in
sbbb
adc
sbb
xor
mov
pushf
mov
int3
pop
sbb
test
dec
xor
cltd
cld
in
mov
fs
jmp
inc
scas
fiadds
nop
rorl
cs
dec
push
rorl
sbb
push
cmp
lds
lahf
mov
stos
mov
pop
nop
movlps
and
aas
dec
cmp
and
lds
movsb
xor
mov
inc
push
fdivl
inc
lret
add
ljmp
or
jecxz
xchg
mov
cmp
ds
cmc
stc
call
sti
imul
stos
and
jge
sbb
and
jg
mov
bound
fisttpl
imul
jp
push
fildl
cli
pop
mov
xorb
sbb
in
xchg
test
mov
ss
lods
leave
out
ljmp
cmp
leave
daa
jp
dec
cwtl
push
loope
test
add
fnsave
cmpsb
sar
mov
inc
nop
adc
fisubrl
pop
std
xchg
dec
aas
mov
mov
adc
popa
or
aaa
cld
mov
xchg
and
jmp
cmp
std
lods
repnz
jnp
popf
loopne
addr16
xchg
out
pop
push
mov
rorb
mov
and
outsl
sub
fcomp
and
ret
out
je
testb
mov
mulb
lret
push
sub
sbb
dec
xchg
sub
inc
lock
in
test
mov
xor
mov
rol
fcmovnb
rcrl
jne
in
mov
mov
test
push
add
arpl
adc
dec
pop
mov
popa
mov
xor
cmpsl
in
push
orl
push
es
stos
cltd
jns
mov
and
lret
lods
stc
in
nop
scas
push
xor
push
xchg
dec
fcmovb
test
jecxz
int
scas
pop
scas
movsl
adc
push
outsb
gs
inc
dec
sub
pop
sbb
cmp
lret
lret
pop
cmp
insl
xchg
cltd
lret
es
es
push
int3
sbb
daa
mov
icebp
mov
fsubrs
gs
jp
add
xchg
mov
mov
adc
insl
xor
mov
cmp
imul
sbb
dec
dec
xor
xchg
fisubrl
leave
in
and
and
movsb
mov
mov
sbb
rolb
pop
push
inc
xchg
ss
or
or
ljmp
jle
dec
xchg
cmp
or
xlat
xchg
in
lods
enter
jo
mov
mov
dec
aad
push
add
mov
pushf
in
imul
dec
and
jle
call
insl
xor
cltd
sub
mov
addr16
ds
jle
inc
jp
mov
dec
push
add
lods
mov
test
jp
cs
inc
mov
sub
out
daa
or
sbb
inc
inc
mov
cmpsb
dec
mov
cwtl
mov
js
mov
jl
add
sbb
mov
arpl
scas
and
fs
and
xor
inc
xchg
fsubrs
inc
iret
mov
out
add
sbb
jle
icebp
mov
push
lcall
lods
nop
pop
es
andb
pop
das
xor
xor
cld
popf
out
data16
ficompl
mov
xor
aad
sub
jb
call
stos
inc
loop
movl
dec
cmpsl
inc
push
adc
int
mov
bound
sbb
xor
cmpl
jne
push
clc
inc
sarb
push
scas
jbe
sbb
lock
fwait
push
fistpl
pop
push
push
stc
cmpsl
repnz
pusha
addr16
mov
mov
mov
push
iret
outsl
inc
sbb
adc
nop
jp
sub
movsl
iret
jmpw
out
inc
fldcw
push
fmuls
aas
insl
xchg
inc
mov
xor
cwtl
push
cmp
loope
xchg
cmc
icebp
outsl
dec
or
out
push
cmp
cmp
jbe
clc
fs
imul
jbe
adc
lods
dec
push
movq
dec
andb
aad
iret
loop
iret
lret
out
popf
mov
data16
sub
add
es
out
pop
xor
lcall
bound
dec
movsl
iret
mov
add
dec
movsb
in
sbb
shlb
add
pop
push
add
cmp
out
xchg
fucomi
sbb
aad
cmc
aam
jbe
push
or
dec
adc
mov
adcl
movb
push
int3
orl
in
data16
jno
das
inc
push
dec
pop
ret
inc
test
push
lods
mov
jmp
mov
fsubr
lea
pop
cld
jmp
repnz
mov
cltd
inc
and
inc
or
in
push
push
sub
cs
lret
adc
nop
lods
jmp
xchg
adc
mov
jmp
jns
or
lret
lret
adc
cmp
shlb
nop
movsb
jle
xsaves
and
data16
lret
orl
aas
popf
mov
jge
fdivrl
adc
into
stos
dec
cs
and
jbe
fs
jl
dec
rcrb
push
lahf
mov
sbb
hlt
loope
pop
rcr
in
cld
xor
out
movsb
fsubl
push
cli
or
jnp
int
xchg
fsubl
lods
shll
jp
pushl
xor
int
fistpll
out
fstpt
sbb
divl
cmp
mov
pop
mov
mov
sti
push
push
sbb
dec
nop
lcall
xchg
xchg
xchg
imul
sub
jb
mov
or
fidivl
jg
subl
jb
es
sbb
enter
mov
fadd
daa
pop
mov
clc
loope
loop
icebp
and
push
mov
or
outsl
xor
pop
mov
jl
pop
xor
pop
movsb
mov
mov
repnz
aaa
shlb
loope
add
cltd
nop
mov
in
movsb
in
je
shll
sub
inc
jg
ffreep
xchg
shlb
xlat
mov
mov
and
faddl
lahf
jmp
cmp
in
lret
xchg
je
inc
out
std
les
ss
sub
mov
dec
push
jmp
stos
fldl
add
jl
pop
jns
imul
jg
and
ror
jecxz
push
and
jp
jns
adc
dec
imul
cmpl
adc
repz
dec
lods
jge
push
es
es
sahf
pushf
pop
lret
inc
or
sbb
imul
hlt
add
mov
scas
arpl
pop
jl
adc
outsl
out
xor
push
mov
mov
dec
loope
aaa
jbe
xchg
dec
pop
dec
scas
icebp
shr
ss
test
mov
sub
mov
pop
shlb
or
mov
cmp
cs
fldt
scas
mov
call
xor
les
push
sub
adcl
xlat
scas
leave
ljmp
pusha
movsl
loope
mov
add
pop
hlt
xchg
sbb
dec
mov
add
mov
unpcklps
fsubr
aad
mov
xchg
jp
test
test
in
int
mov
aam
nop
dec
sub
insb
sbb
pop
data16
cli
mov
xchg
mov
lods
jb
or
xchg
push
add
punpcklbw
enter
lret
jle
jle
lods
addr16
dec
and
pop
mov
dec
stos
jl
dec
jns
in
sbb
ds
jle
fwait
push
ficompl
or
fxch
iret
sti
fwait
adc
mov
fdivrp
mov
cld
bound
ret
xchg
dec
inc
cmp
xor
ds
and
or
lea
sub
cmp
cmp
xchg
push
push
push
fsubs
inc
fcoml
cltd
fsubp
inc
test
insl
pop
mov
shll
jb
xchg
dec
and
loope
dec
fs
mov
jmp
sbb
or
shrl
pop
movsl
push
push
ljmp
imul
inc
mov
mov
inc
or
test
dec
outsl
jns
in
xor
pop
insl
xchg
jnp
add
sahf
push
pop
stc
xor
js
inc
pop
idivb
in
jp
popf
lahf
fldl
stc
stc
call
test
call
push
push
sub
hlt
or
push
lods
inc
sub
sti
scas
or
stos
stc
xor
inc
fmuls
sbb
push
push
lods
add
cmp
sbb
push
mov
sarb
xor
jmp
fwait
mov
mov
sub
loope
lods
pushf
ds
mov
add
sub
mov
fbstp
jle
mov
xlat
jecxz
adc
ret
nop
pop
push
imul
xchg
jbe
xchg
movb
aaa
mov
xchg
jl
mov
push
adc
sar
and
jp
cmp
xlat
enter
inc
dec
jbe
sbb
jo
stos
les
lods
jl
mov
shll
sbb
pop
adc
mov
dec
ljmp
push
sub
and
ja
aad
into
rep
stos
mov
mov
mov
dec
call
or
pop
push
scas
nop
stos
push
insl
addr16
mov
cmpsb
pop
dec
aad
repz
sti
xchg
cmp
jns
fdivl
fucomip
cmp
dec
pop
ljmp
add
shll
pop
cmpsl
adc
pop
xchg
and
jecxz
cmp
das
dec
jmp
cld
std
aaa
imul
add
enter
out
push
lock
add
clc
iret
aam
or
xchg
lock
les
ret
dec
and
sbb
mov
mov
stc
jae
jno
lods
pop
mov
je
xchg
dec
mov
movb
out
push
repz
pop
mov
gs
sbb
rol
xchg
das
insb
dec
add
sahf
out
repz
push
int3
out
loopne
jecxz
adc
dec
cmp
mov
and
adc
lods
loopne
out
sbb
mov
sub
adcl
push
xchg
negl
movsb
icebp
testb
scas
jl
fs
mov
jno
dec
inc
clc
fs
nop
fidivl
add
xchg
or
es
iret
clc
xchg
pop
and
cmp
out
mov
into
inc
adc
mov
test
push
or
in
aas
mov
jb
xchg
nop
cmpsb
xchg
shrb
sbb
mov
popa
scas
incl
and
pop
xchg
jnp
inc
sub
icebp
pop
cmpb
sub
add
out
adc
push
outsb
sbb
xchg
jmp
fdivr
lds
flds
pusha
cs
iret
inc
jge
ffreep
lea
pop
jns
popa
pop
test
dec
mov
ja
daa
insl
jecxz
and
push
push
xchg
test
cld
sub
les
pop
inc
jno
in
lds
or
jge
xor
jle
mov
lret
mull
jb
sbb
iret
cmp
push
or
pop
movsb
mov
outsb
enter
test
cmp
rclb
in
cmp
rol
sti
mov
dec
negb
pop
fisttpl
add
aaa
gs
mov
popf
aam
imul
loope
fiadds
andl
lods
inc
inc
mov
push
mov
fdivrs
loopne
fiaddl
xchg
sub
mov
inc
dec
repz
add
xor
and
cs
and
cmp
popa
jno
ldmxcsr
aas
imul
mov
cmp
pop
aam
inc
scas
imul
mov
dec
add
cmp
dec
pop
repz
mov
adc
mov
sar
ljmp
add
lret
jg
push
dec
les
out
int3
mov
jb
lcall
fs
mov
or
in
mov
js
jecxz
daa
leave
popf
out
xchg
add
sbb
xchg
loope
je
push
rcll
add
pop
adc
shrb
pop
inc
enter
xchg
test
out
in
daa
addps
fcomps
fisubl
or
jb
sbb
dec
hlt
push
pop
lret
add
and
xchg
push
int
pop
jmp
jo
dec
sub
aam
lock
xchg
pop
leave
pop
aam
fimull
pop
popa
xor
pop
shlb
cltd
jg
pop
dec
mov
mov
in
in
addr16
adc
sub
jns
mov
cs
or
lahf
xchg
inc
xchg
iret
rorl
clc
inc
fidivl
dec
aad
add
inc
cld
xchg
shll
scas
jle,pn
je
aas
cltd
cmp
push
add
das
adc
pop
mov
stc
push
mov
push
dec
xor
sbb
xor
pop
pusha
cmpsb
inc
jl
adc
shrl
aaa
jb
fisubl
cmp
js
cmp
sti
sbb
leave
movsl
xor
lods
jle
mov
sbb
dec
inc
xchg
or
mull
fsubl
in
or
fidivl
push
sub
cmpsl
cs
out
mov
insl
frstor
mov
stos
inc
mov
imul
clc
push
dec
in
imul
rcll
sahf
xchg
mov
int3
aaa
and
or
adc
out
sub
add
cmp
jno
aaa
or
sarl
jle
es
test
mov
loop
mov
loop
add
ror
rclb
xchg
gs
push
pop
ficompl
mov
pop
pop
push
or
xor
imul
loope
add
orb
nop
scas
pop
scas
les
testb
mov
sub
xor
mov
xor
push
ja
addr16
push
push
inc
adc
adc
dec
xor
adc
xchg
dec
mov
std
push
and
mov
ficoml
sbb
lcall
inc
lea
add
mov
mov
pop
add
add
ljmp
rorb
xchg
mov
xor
cmp
dec
in
fucom
pop
and
stos
xor
incb
cmp
dec
inc
stc
xor
hlt
pop
cmp
inc
mov
xchg
pop
push
into
cltd
cmp
test
test
cwtl
mov
enter
shrl
push
subb
adc
lahf
sub
sbb
scas
xor
pop
jmp
ljmp
and
mov
pop
mov
inc
jp
jb
in
push
daa
test
lea
sub
xchg
mov
call
ror
jg
mov
xchg
rcll
sub
xchg
xchg
sub
fwait
ss
int
lret
mov
in
mov
pop
pop
push
sub
add
push
cmp
cmc
arpl
and
jo
mul
mov
xchg
data16
or
mov
sbb
inc
lds
xor
test
cmc
sub
pop
into
or
stos
mov
push
xlat
jecxz
jnp
das
inc
or
into
dec
mov
mov
rcrb
out
lods
outsl
aaa
sub
add
push
pop
mov
mov
rorl
aas
push
mov
sbb
fwait
add
jmp
ja
fisttpll
push
and
decl
dec
push
scas
push
cmp
lret
or
out
in
xor
mov
shlb
fstpt
ljmp
mov
push
push
stos
dec
or
xor
xor
mov
mov
mov
scas
xor
sbb
jl
cli
lock
sbb
ss
call
jg
pop
inc
push
mov
dec
cmp
cmp
test
xchg
inc
in
jle
repnz
or
jecxz
ficoml
sbb
sahf
lods
sub
jge
mov
mov
lods
mov
sbb
subl
ret
shll
cltd
fcomi
aad
ljmp
mov
hlt
mov
jne
bound
add
dec
jecxz
rep
push
repnz
push
push
pusha
nop
movsl
lahf
bound
push
add
sti
inc
sub
in
mov
enter
cmp
adc
cmc
je
jno
cwtl
cmp
in
scas
cmp
popf
jno
cmp
cmp
inc
mov
push
jg
pop
loope,pn
adcb
popl
test
jge
adc
adc
xchg
jp
dec
or
out
xor
aam
iret
andl
insb
ds
aaa
jp
fdivs
cmpsl
xor
outsl
repnz
js
inc
xor
jle
add
shrb
inc
push
je
jge
das
scas
movsb
pop
add
mov
lcall
sahf
xor
fadds
imulb
or
pushf
fst
fsubrl
loopne
rorl
ljmp
dec
adc
int
imul
adc
in
cmp
outsb
adc
or
lahf
inc
xchg
std
cwtl
push
fwait
adc
cli
dec
mov
lret
fwait
dec
loopne
jne
dec
push
mov
mov
cmpsb
ds
push
lock
cmpsl
or
xchg
aas
cwtl
adc
mov
or
mov
popf
lea
test
aaa
dec
aad
out
sub
mov
addr16
test
adc
jmp
cmp
std
cld
add
jg
rorl
cmp
cmpsb
stos
lea
stos
mov
jo
aaa
adc
loop
xchg
jnp
jnp
enter
xor
out
lds
pushf
xor
jge
repnz
bound
clc
mov
jl
xchg
sub
xor
call
jns
mov
out
fsubs
aad
mov
je
lods
test
or
movsb
shlb
xor
out
popf
stc
cmp
mov
int
mov
and
cmp
int
aam
or
inc
mov
mov
sub
cmpsl
xchg
addr16
dec
mov
push
lahf
adc
and
mov
lahf
jb
mov
scas
push
or
sub
pop
cmpsl
sbb
push
pushf
test
shrl
mov
pop
jnp
xchg
sub
or
xor
jo
sub
scas
mov
outsl
inc
and
rcrl
pop
daa
iret
or
movsb
push
dec
and
dec
mov
cmp
cmp
inc
inc
mov
jle
idiv
add
out
pusha
ret
stos
push
xor
or
cmp
lcall
movsb
lcall
int3
lea
xor
jb
out
pop
mov
sbb
scas
out
add
jb
jnp
fbstp
sti
test
lahf
adc
rolb
mov
mov
lret
nop
sub
cmp
clc
repnz
mov
fwait
mov
jge
mov
push
leave
es
aaa
leave
jnp
mov
inc
xorl
ret
popa
xchg
or
ficompl
mov
rorb
jae
xchg
dec
xor
adc
shll
mov
dec
xchg
outsl
and
in
or
out
les
jecxz
push
add
fsubrs
mov
mov
bound
cltd
jns
rclb
jecxz
inc
add
cmp
jp
or
mov
aaa
fwait
jmp
ds
add
imul
xchg
fstpt
sub
mov
pop
fists
ss
fdivs
push
adc
pop
fcompl
mov
xor
fimull
xor
stos
das
addb
cmc
or
xor
jle
dec
cltd
cmp
int
sbb
arpl
scas
and
add
stc
lea
jnp
push
jno
inc
stc
call
xor
out
in
xlat
sahf
stc
out
mov
lock
and
mov
stc
mov
mov
cmp
roll
pop
imul
bound
lcall
mov
ret
inc
ss
jns
adc
lods
or
call
sti
fs
jecxz
push
iret
sub
sub
in
fisttpll
mov
and
inc
mov
stos
test
lret
jg
rorl
jmp
xchg
mov
stos
rorl
sbb
popa
rclb
fldcw
movsl
fstpt
je
sahf
scas
push
movsb
add
mov
xchg
ljmp
adc
dec
inc
mov
jmp
push
scas
dec
add
testb
lret
nop
sar
adc
fistps
or
xor
andl
pop
pushf
fcompl
xchg
pop
dec
rorb
cwtl
jns
subl
dec
sbb
xor
in
fstps
ret
mov
dec
inc
or
pop
sub
ss
rcrb
xchg
or
jbe
repnz
ret
push
lds
mov
push
cmp
test
mov
sub
loope
mov
jge
inc
adc
pop
push
out
jb
dec
xchg
adc
subl
or
pusha
int3
dec
dec
xorl
and
push
dec
scas
subb
sbbb
repnz
mov
addr16
rcrl
outsb
and
xor
lahf
or
xchg
out
jo
mov
mov
fs
rcrl
dec
sbb
pop
mov
xchg
lods
jo
imul
and
adc
lock
xchg
jge
je
and
lret
int
enter
fstpl
dec
xchg
sbb
jecxz
mov
pushf
imul
loopne
repz
iret
xor
stos
adc
cmpsb
outsb
mov
sub
sti
xchg
shlb
roll
mov
cmp
int
adc
movsl
int
cwtl
leave
xor
adc
pop
sbb
cmp
inc
ret
jg
jmp
dec
test
movsb
enter
push
movsl
jl
aad
cmp
test
imul
shlb
das
push
dec
xchg
push
push
jnp
gs
xor
or
sbb
jmp
loopne
rorl
mov
lea
idivb
adc
lods
add
cmp
shlb
lock
aas
pop
rsm
push
stos
bound
nop
jp
sbb
cmp
inc
inc
pop
cmp
adc
popa
les
pop
repnz
and
scas
mov
jmp
sub
and
sub
lcall
mov
dec
je
jmp
adc
add
pusha
xcrypt-ctr
cmpsl
pushf
mov
call
psubb
push
xchg
mov
add
lcall
inc
adc
pop
ja
mov
cmp
std
cmp
mov
mov
or
jno
adc
in
jg
sbb
clc
cmp
aaa
cmp
dec
pop
lcall
out
adc
cwtl
gs
sub
cltd
cmp
sub
ds
push
mov
mov
decb
jae
into
dec
jge
jno
lods
pushf
je
add
in
popa
xor
in
mov
inc
jne
mov
pop
adc
ds
lock
sbb
jno
stc
mov
insb
jg
lcall
sahf
in
mov
jbe
lds
movsb
testl
adc
dec
repz
push
adc
sahf
das
cmp
adc
dec
and
mov
xchg
pop
movsl
rcl
outsb
add
mov
sahf
push
in
cmp
or
insb
ss
pop
rcrl
mov
aam
aaa
test
pop
sub
ja
pop
mov
jae
test
dec
sahf
inc
jbe,pt
sti
sub
pop
pusha
inc
mov
ds
lcall
pop
jmp
lahf
xorb
sbb
outsb
mov
enter
lret
les
pop
adc
add
ret
bnd
and
cmpsl
std
es
sbbb
loope
aam
inc
jmp
jp
push
push
dec
sarl
adc
and
lahf
mov
push
nop
sub
test
notb
jle
pop
pop
ds
dec
xchg
out
mov
shl
fistpl
mov
sub
mov
fisubrs
imul
pop
sub
cld
push
push
out
rol
xchg
jecxz
iret
push
sbb
dec
std
mov
add
cmp
or
mov
roll
xchg
cmp
or
dec
aad
sub
gs
stos
outsb
sbbb
inc
xchg
push
icebp
in
lcall
loopne
stos
sub
bound
inc
xchg
xor
pusha
xor
jnp
inc
mov
sbb
xor
dec
imul
movsb
cmp
jl
data16
call
cmovbe
inc
dec
nop
cmp
or
mov
jo
xor
andl
test
mulb
mov
dec
adc
aam
push
lret
cld
inc
lret
jle
inc
mov
xchg
in
sub
aaa
xchg
xor
adc
rorb
xor
sbb
sbb
jb
sti
pop
mov
je
ss
insb
orb
int3
testl
mov
push
pop
add
and
xor
test
push
andb
addl
data16
mov
dec
sahf
add
or
pop
out
ss
sbb
cmp
mov
out
pop
imul
lods
cmpsl
xlat
xor
cmc
lock
je
addl
nop
inc
pop
and
aas
pop
and
fisubrs
mov
rcrl
subb
gs
mov
jmp
xchg
das
pop
xor
mov
addb
aam
fwait
jns
test
xlat
xor
daa
daa
fidivrs
fwait
pushf
enter
lret
dec
xor
xchg
repz
aad
ficompl
into
cmovb
mov
cmp
mov
mov
loop
lret
pop
pushf
pusha
add
jno
nop
xor
push
ljmp
pushf
imulb
test
stos
and
jnp
cmpps
lcall
aas
push
ja
in
mov
and
xchg
icebp
pop
lahf
add
orb
lahf
push
xchg
dec
add
add
loope
jp
rcr
dec
jg
je
xchg
pop
xchg
scas
btc
rcl
or
mov
cmp
out
leave
and
fistpll
pop
push
cltd
add
mov
mov
xchg
inc
fcompl
mov
mov
fistps
subb
xchg
mov
xchg
dec
mov
out
sub
mov
pop
mov
mov
sbb
push
mov
cli
pop
sub
mov
mov
adc
and
push
push
repnz
out
stos
subl
mov
pop
je
adc
subb
mov
cltd
xlat
stos
mov
ss
or
and
xchg
mov
popf
sbb
stos
test
or
dec
dec
rol
mov
mov
push
syscall
cmpsl
lret
imull
sbb
in
or
xchg
mov
or
sub
and
aaa
push
fsts
mov
int3
loope
mov
dec
mov
repz
in
cld
mov
jmp
ljmp
mov
shll
inc
shrl
jl
jbe
out
int3
movsl
sti
movsl
outsb
sarl
mov
pop
inc
das
out
std
movsl
in
pusha
js
call
pusha
sub
in
xchg
xchg
aas
es
push
int3
inc
ds
pop
dec
cltd
pop
lcall
and
ret
call
lahf
outsl
ds
sub
xor
sub
stos
and
imul
enter
in
ret
movsl
into
imul
popf
cmp
in
dec
sub
cmp
sub
repz
sarb
jge
adc
cltd
adc
inc
mov
jge
jecxz
add
mov
insb
dec
das
and
ds
out
icebp
imul
jae
xchg
push
xchg
mov
jne
add
mov
sub
mov
xchg
je
leave
fcmovne
das
ret
dec
not
mov
mov
arpl
sbb
inc
cmc
fisttps
and
push
sbb
xor
xchg
cmp
addb
movsb
addr16
push
nopl
jg
lods
cmp
mov
das
inc
pop
and
fs
sub
out
sbb
scas
mov
test
jno
dec
inc
lods
push
imul
add
cli
cmp
pop
int
xchg
fistpl
cmc
ja
seto
mov
cs
push
leave
nop
stos
mov
dec
sbb
andl
inc
sahf
leave
insl
pop
pop
or
mov
push
fsubrs
cmpsb
xchg
stc
pop
sbb
sti
xchg
addr16
xchg
ja
push
lcall
adc
movsb
dec
and
push
lods
pop
xchg
jae
mov
sub
scas
jne
orl
rcl
xchg
aad
ds
lahf
mov
rcl
jl
push
cwtl
addps
xchg
in
inc
jle
mov
fistl
add
lret
sub
cwtl
fsubl
adc
les
loopne
jp
xlat
out
test
inc
mov
je
inc
xchg
sbb
sahf
mov
fbstp
and
call
jnp
or
and
jl
xchg
insb
jg
sbb
in
pop
xchg
into
imulb
jmp
stos
pop
cmp
pop
es
inc
adc
aad
mov
push
push
addr16
sahf
jo
icebp
mov
aaa
cmp
fs
dec
in
xchg
mov
add
cli
stos
add
jl
dec
cmp
pop
fcmovu
mov
sub
cli
incb
sbbl
xchg
ficomps
or
das
movsl
sub
push
adc
inc
xchg
cmpsl
jnp
sbb
mov
int3
pushf
outsb
ror
xor
in
pop
push
js
sbb
cmpsb
sub
call
mov
pop
dec
hlt
sahf
jnp
in
test
addr16
ja
js
inc
adc
sbb
test
or
or
sbb
inc
jge
lcall
ja
arpl
mov
frstor
loope
sub
or
lahf
push
sub
stc
pop
mov
push
jae
ret
dec
dec
out
adc
sbb
mov
shl
in
and
inc
sbb
and
sub
cmpl
xchg
or
testb
sub
test
dec
lret
shrb
out
push
stos
pop
lds
fidivrl
neg
xchg
movsb
ret
movsb
pop
insb
popa
cmpsl
mov
dec
add
push
xchg
mov
or
sbb
mov
leave
pop
pusha
sbb
inc
int
sbb
popf
push
mov
pop
std
cmp
imul
leave
call
ja
push
and
inc
sub
pop
mov
xor
jecxz
mov
dec
mov
or
push
xchg
aad
fwait
outsl
das
cmp
lock
add
clc
pop
ret
cmpsl
orps
xor
sub
push
dec
arpl
push
adc
stos
xchg
pop
pop
ljmp
add
mov
rcll
adc
jnp
add
lock
mov
test
call
fwait
push
cs
daa
out
fisttpl
dec
scas
inc
fcompl
dec
pop
jl
cmpsb
mov
sub
xor
mov
or
iret
mov
imul
push
xorl
and
loop
add
pop
in
push
sub
inc
jbe
outsl
jl
int
sbb
ds
dec
ljmp
rcr
fimuls
in
inc
int3
push
mov
pop
xorb
xchg
sub
adc
call
sbb
ljmp
movsb
dec
icebp
loopne
sahf
or
mulb
imul
mov
jne
fistl
stos
lcall
mov
xor
mov
stc
jmp
or
inc
fildll
aam
repz
shll
dec
jae
and
cld
jne
dec
nop
test
cmp
inc
out
in
adc
cmp
add
or
push
jmp
jge
adc
sub
push
cmp
lret
test
pop
cmpsl
les
repz
and
scas
add
cs
jb
xor
inc
loop
sbb
mov
jns
dec
cwtl
and
adc
in
xor
jmp
lea
loope
push
mov
adc
icebp
sbb
inc
gs
in
mov
icebp
loop
xchg
sbb
push
jo
pusha
ljmp
sub
or
sub
pop
push
and
mov
pushf
pop
in
data16
hlt
fsubs
mov
scas
mov
xchg
mulb
dec
jle
add
or
js
ja
out
push
cmp
out
mov
leave
inc
out
xor
imul
cmp
sbb
jae
mov
xor
dec
lahf
shl
lcall
jl
in
sbb
inc
sbb
dec
push
jg
pop
mov
dec
mov
outsl
lret
out
mov
fwait
adc
popa
or
mov
aad
push
xor
sub
movsl
daa
jl
mov
sbb
dec
adc
in
clc
div
lds
jno
aas
outsb
jbe
sub
ficomps
and
stos
and
stos
icebp
sub
rcr
adc
sbb
shl
xor
fidivs
add
sub
shrl
ret
xlat
pop
jg
shrb
data16
stos
std
mov
or
test
insl
cmp
inc
int
dec
or
out
repnz
pop
ret
je
lret
inc
xor
jns
mov
sub
dec
invd
cmp
das
rclb
cmp
mov
jb
inc
jge
adc
push
loope
add
enter
rcrl
rcll
int
or
test
fcmovu
ljmp
xchg
xor
outsl
aaa
dec
pop
orb
xor
mov
mov
push
in
pop
xchg
cmp
inc
fldl
shlb
sbb
jno
inc
adc
xlat
adc
mov
sub
ja
popa
repz
and
stc
call
in
ds
add
mov
fisubs
stos
rcl
call
add
push
sub
jae
pop
adc
xchg
lret
cltd
pop
shll
inc
mov
ret
adc
mov
jbe
rorl
shlb
lock
hlt
pop
cmp
xor
jle
dec
mov
in
cmp
sbb
data16
leave
cmp
pop
push
scas
aaa
mov
xchg
les
xor
mov
aaa
mov
cmp
and
loope
int
fistpl
rep
inc
push
mov
and
add
shrl
ljmp
ljmp
test
and
psraw
fnstsw
or
ljmp
lcall
mov
clc
daa
mov
xchg
push
scas
sub
nop
or
push
inc
sbb
popf
cwtl
lods
clc
adc
movsb
fnstsw
repz
add
sub
mov
sbb
pop
mov
mov
fidivrl
nop
js
lea
sarb
lcall
sbb
xchg
jnp
std
rcll
in
push
cltd
mov
dec
sub
cmp
sarb
out
xchg
and
movsl
mov
push
aam
shlb
stos
xchg
nop
lret
dec
ss
sbb
outsl
les
movsb
dec
lods
lret
imul
ja
mov
inc
shlb
adc
ljmp
jge
dec
sarb
cmpsl
mov
icebp
push
in
add
pop
adc
jge
fistpll
inc
test
ret
arpl
lret
dec
xor
pop
mov
das
lret
daa
test
les
mov
pop
test
pcmpeqb
pop
dec
call
xor
icebp
in
xchg
daa
sbb
pop
idivb
fs
or
ret
xor
mov
inc
rorl
movsb
mov
test
pusha
adc
jns
nop
mov
ficoms
cli
cmpsb
push
out
lea
sti
jb
je
sbb
mov
adc
jp
outsl
cli
jmp
ljmp
std
arpl
ret
push
fildl
leave
mov
scas
push
fsubrl
orb
orb
mov
add
or
adc
or
cmc
lods
xor
xchg
cmp
fs
out
inc
mov
pop
hlt
and
pop
xor
sbbb
push
mov
jbe
mov
sti
popa
pop
loopne
jno
lock
adc
loope
push
mov
data16
mov
mov
in
pop
push
or
adc
stc
ja
and
fcompl
mov
inc
loop
cmp
and
pop
in
fsubrl
int3
jmp
aaa
dec
ret
pop
cmp
mov
xor
xchg
sub
jmp
and
cmp
cmp
jns
push
and
xor
adc
pop
mov
xchg
mov
fwait
icebp
mov
lock
cltd
clc
sub
push
repnz
sub
sub
out
xor
icebp
jno
jle
xor
push
outsb
mov
sub
fnstenv
pop
das
hlt
sahf
dec
mov
pop
add
sbb
jb
mov
xchg
adc
add
fwait
pop
shrb
sbb
outsl
ljmp
lahf
xlat
push
jbe
mov
lea
mov
movsb
shrb
loopne
add
add
and
test
loopne
ljmp
loopne
in
pop
mov
push
jns
pop
push
cli
fldl
dec
fs
mov
push
clc
std
bound
mov
jae
shll
mov
jo
push
fsts
push
cld
dec
mov
pop
loop
iret
movsb
xchg
js
bound
push
rclb
and
int3
adc
dec
ds
dec
movsl
mov
ljmp
sub
mov
mov
inc
ja
ret
aad
sahf
lahf
mov
dec
jns
outsb
sub
fistps
mov
in
movsb
dec
js
movsl
inc
mov
test
scas
test
shll
mov
adc
jle
dec
add
imul
fcoml
xchg
mov
out
test
mov
and
fsubrp
pop
jp
cmpsb
test
xor
sbb
jne
cmp
inc
int3
in
adc
popa
stos
adc
mov
pop
adc
jae
cmpsl
repnz
mov
dec
adc
lahf
mov
fsubrl
lahf
adc
xchg
or
repz
adc
adc
mov
add
rcl
pop
add
inc
mov
push
dec
cmp
lret
push
stos
add
inc
or
rcr
xchg
xchg
push
enter
xchg
pushf
test
lahf
lock
sbb
fnstcw
and
and
shl
xchg
pop
sarl
jge
insl
adc
je
cwtl
out
popf
out
push
sub
pop
inc
jmp
push
sub
sub
lret
dec
clc
and
mov
add
loopne
hlt
pushf
pop
fistpl
ficomps
or
sbb
pushf
popa
push
and
pop
fwait
mov
adc
push
rclb
lcall
clc
push
pusha
jo
xchg
push
mov
icebp
adc
mov
out
dec
hlt
adc
cmp
inc
or
div
popf
repz
pop
scas
scas
hlt
add
xchg
stc
mov
dec
cli
or
repz
adc
jle
loopne
lea
aad
imul
icebp
sbb
adc
pop
ret
enter
adc
sbb
push
xlat
xchg
inc
fisubrl
enter
test
pop
cmpsb
ss
mov
fsubrs
mov
or
nop
loopne
sbb
cmp
inc
push
inc
push
xor
sub
test
jnp
gs
roll
mov
sbb
jecxz
mov
add
mov
and
in
adc
mov
jne
inc
out
sub
loope
jp
pop
rcrb
pop
adc
cmp
daa
mov
outsb
pop
and
inc
pop
xchg
pop
mov
mov
dec
fildl
lret
mov
das
dec
push
vmovhps
sub
pushf
xor
imul
mov
jmp
xchg
cmp
fsub
dec
neg
div
mov
cwtl
xlat
push
mov
pop
jae
sbb
jp
or
mov
and
jns
aam
mov
push
outsb
fsubrl
jo
fwait
mov
mov
outsl
rcrl
in
mov
cmpl
dec
cld
fsubl
inc
add
push
lret
iret
lock
jb
xchg
mov
pop
push
call
movsl
push
sub
xor
pop
mov
sbb
jg
bound
inc
sbb
icebp
test
mov
add
cmp
fnsave
xlat
out
out
push
inc
adc
inc
or
vdivsd
mov
sub
or
std
mov
movsb
ret
xor
outsb
stc
sahf
adc
imul
loope
pop
lcall
adc
fimull
mov
add
push
flds
mov
out
shr
inc
adc
shrb
dec
push
das
mov
movsb
aad
mov
data16
xchg
and
or
int
pop
sahf
sub
push
cmpsb
mov
adc
pop
popa
xor
test
outsb
pushf
mov
push
mov
decl
push
and
xchg
test
cmp
sub
push
xchg
sub
repz
push
mov
cmp
xor
loop
test
jae
sbb
mov
push
das
aaa
pop
pop
push
inc
inc
or
fldenv
mov
insl
insl
xchg
and
xor
jmp
stos
sbb
sbb
fwait
cmpl
mov
fldl
dec
fisubrs
jmp
imul
andb
insl
jp
mov
mov
cmpsl
test
ss
shl
rcrl
mov
loopne
repnz
arpl
arpl
cmp
popf
jbe
sbb
cmpsl
dec
ds
lods
sbb
int
frstor
mov
sbb
flds
cmp
sti
fnstsw
pop
mov
scas
and
in
out
xchg
cmp
push
mov
out
sub
cmp
inc
cmp
in
cmc
repnz
push
adc
mov
jecxz
mov
ret
xchg
dec
inc
mov
xchg
orb
mov
jo
mov
in
push
js
fwait
pop
testb
push
dec
lock
aam
pop
add
mov
pop
fcoml
add
fbstp
nop
lods
mov
and
mov
daa
inc
lahf
pop
add
adc
xorl
pop
push
pop
jo
lea
jnp
icebp
insb
std
adc
mov
pop
dec
mov
ja
imul
aaa
popa
sbb
stc
call
sbb
fcmovu
pop
cmp
outsb
pop
add
pop
mov
push
movsl
or
or
or
lcall
ficoml
cmp
cs
and
ficoms
mov
add
push
jge
loop
sub
aaa
push
imul
add
or
push
lock
leave
mov
shrl
in
sbb
or
jo
mov
jno
aas
mov
or
imul
fstpl
subl
fsubrs
movsl
divb
inc
mov
out
lods
rcrl
stos
and
xor
push
sub
sub
pop
cmp
mov
mov
insl
push
ljmp
scas
sbb
add
cmc
scas
hlt
hlt
push
lds
add
jnp
jge
adc
lea
frstor
and
sbb
push
std
or
andb
xchg
cmpsl
cmpb
add
dec
xor
cs
add
sahf
push
pop
jg
xchg
movl
sbb
ja
push
hlt
ds
pop
push
roll
fs
and
cs
cwtl
clc
fldcw
inc
pop
xor
inc
hlt
push
push
popf
outsl
mov
int
push
fwait
lods
arpl
xchg
mov
inc
cld
sub
inc
jmp
sbb
iret
push
mov
xor
xchg
inc
testb
test
mov
cwtl
xchg
mov
mov
fs
cmp
mov
dec
jne
mov
jne
pusha
stos
sti
add
cltd
outsl
lret
in
clc
jecxz
mov
xlat
fs
mov
push
pop
mov
mov
jmp
cmp
mov
repnz
cmp
sarb
sub
mov
int3
nop
cwtl
xor
push
bound
into
imul
lret
shlb
inc
cmp
in
mov
shlb
imul
movzbl
imul
cmp
or
fsubrp
cmpsl
out
je
lahf
inc
fldpi
push
xchg
outsb
dec
imul
stos
fsincos
stos
push
inc
add
push
aad
jne
repz
mov
mov
aas
ret
movsl
lcall
inc
and
cmp
mov
and
xacquire
das
dec
mov
xchg
jne
and
int3
shll
fwait
jecxz
xor
mov
push
inc
xor
push
push
jg
inc
sbb
inc
sub
pop
std
xchg
fsubl
xor
push
mov
push
int3
ds
insl
push
sub
adc
jp
pop
push
dec
mov
and
xchg
leave
jae
andb
scas
adc
sub
scas
add
std
std
lret
test
rclb
adc
cmpsl
adc
jle
pop
sbb
mov
loop
std
add
xchg
js
idivl
jne
cmp
lret
adc
push
xor
inc
rcll
sbb
gs
movsl
cmp
or
into
cmpxchg
add
leave
rolb
pop
and
sub
sub
lret
mov
enter
jnp
pop
sbb
adc
mov
aam
adc
mov
jnp
rorl
stos
cli
imul
mov
sbb
in
ret
adcb
push
xchg
ret
into
sbb
jb
outsb
cmp
dec
push
fmul
cmc
pop
in
mov
ds
xor
loopne
pusha
xor
aas
sbb
jge
fstl
or
pop
or
js
cs
sub
popf
out
pop
rcll
incl
sbb
mov
popf
loopne
stc
mov
cmp
aaa
test
mov
call
imul
fwait
pop
cltd
jp
fneni(8087
mov
mov
cmp
movsb
faddp
jp
jb
mov
cmc
shrb
inc
xor
jbe
inc
in
xchg
mov
fisubrs
sub
mov
mov
into
jne
fsubr
mov
mov
call
je
popf
loope
jns
dec
in
addb
push
push
xor
test
push
inc
ss
aam
pop
repz
pop
sub
xorb
jl
or
sub
xchg
push
sti
lahf
add
xor
jae
out
inc
lods
mov
out
faddl
add
fmull
shrb
dec
in
push
mov
xchg
movl
push
das
cmpsb
aam
cltd
jge
stos
pop
dec
das
mov
jb
adc
jnp
pop
mov
or
sub
sbb
xor
movlps
fistpll
add
add
int3
cmp
mov
loop
arpl
push
or
out
aam
inc
mov
mov
adc
andb
push
out
dec
lods
and
xor
pop
or
xor
mov
mov
pop
xor
pop
push
push
push
stc
or
jb
xchg
std
add
fdivl
insl
dec
xchg
xchg
insl
mov
fsubrl
jg
test
xchg
out
leave
jne
push
nop
aad
inc
mov
inc
sbb
ficoms
inc
mov
mov
cmp
addr16
jmp
out
mov
dec
cli
jo
insl
lods
add
sub
lret
sub
sbb
es
xchg
mov
repz
xchg
imul
in
je
pop
adc
mov
dec
cli
jo
insl
xchg
cmp
js
fsubrs
rorb
in
fdivrs
stc
je
sbb
rcl
mov
jae
scas
orb
imul
ret
aas
push
lds
push
pop
loop
popa
add
std
mov
loop
xor
sub
adc
add
mov
sub
jnp
xlat
push
mov
aas
rcrl
ja
insl
add
jo
cwtl
push
adc
bound
dec
ds
pop
std
xor
pop
mov
mov
inc
mov
fs
adc
adc
add
cmc
test
mov
xor
ljmp
inc
nop
jns
loopne
cli
ss
insl
repnz
cli
negl
xchg
sub
stos
dec
jb
push
mov
cwtl
sbb
lcall
ja
pop
gs
icebp
xchg
adc
xlat
jle
out
decl
dec
les
cmc
les
addr16
xchg
movsb
or
fsubr
addr16
aad
sahf
sbb
or
aaa
call
mov
addr16
and
test
fcoml
das
sbb
stc
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
gs
or
push
out
leave
pusha
call
pop
sub
xor
inc
xor
inc
cmp
jne
mov
jmp
jmp
mov
cmp
jne
xor
add
cmp
je
mov
xor
inc
inc
jmp
sub
sub
sbb
loopne
mov
and
aam
and
mov
aad
sub
lods
mov
mov
imul
and
aam
sub
lods
mov
mov
loopne
and
aad
and
mov
out
mov
pop
mov
mov
pop
mov
outsb
dec
xchg
lcall
data16
mov
mov
dec
adc
and
jmp
cmp
test
dec
not
and
mov
pop
pop
ret
pusha
xor
inc
nop
dec
xor
mov
mov
pusha
call
popa
add
sub
loop
popa
ret
push
mov
mov
push
pop
inc
mov
dec
shl
mov
dec
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
sub
dec
jne
pop
mov
mov
ret
mov
add
add
add
add
add
add
inc
add
add
add
add
add
mov
inc
pop
mov
fsubs
ret
dec
pop
pop
