dec
in
and
cs
xchg
stc
cmpsb
ja
rcll
dec
mov
loopne
in
xchg
inc
stos
jp
mov
push
loope
xchg
leave
cmp
dec
and
push
aam
pop
xor
movsl
mov
xchg
push
push
mov
popf
arpl
or
push
dec
les
sub
dec
addb
roll
sub
addr16
dec
xor
inc
scas
cld
adc
aaa
mov
pushf
add
test
pop
rcr
jg
adc
das
sub
pop
xlat
jmp
push
icebp
sti
test
in
inc
and
repz
add
jmp
push
and
dec
imul
adc
or
movsl
cmp
adc
rol
cmc
mov
movsb
icebp
in
movb
sub
mov
pop
fldenv
rcll
mov
jo
pushf
bnd
fisttpll
cmpb
lret
mov
mov
mov
and
stos
sbbl
enter
cld
orb
in
sti
adcb
mov
push
daa
and
test
dec
sub
aad
xorl
or
fnstsw
sub
es
imul
adc
movsb
cmp
sbb
mov
cmpsb
idivb
mov
pop
and
and
test
arpl
add
aaa
push
mov
ja
das
add
pop
pop
aas
and
daa
pop
inc
movntps
ja
mov
inc
not
inc
xor
xchg
xadd
rol
mov
cmc
rol
shl
mov
jmp
movsbw
bswap
mov
stc
add
push
pushf
mov
cmp
stc
bt
jmp
repnz
pushf
pushf
lea
jne
inc
shl
push
shl
mov
bt
pusha
rcr
add
sub
add
lea
call
or
call
mov
dec
xor
cmpsb
xchg
in
in
iret
jmp
lea
aad
movsl
shll
add
aad
xchg
scas
cmp
out
mov
int3
dec
jl
adc
in
in
add
sbb
dec
gs
loop
inc
pop
mov
jecxz
pop
sbb
adc
dec
out
ljmp
rcr
xchg
rcrb
add
jle
pop
or
bound
bound
push
push
sub
xchg
dec
sbb
insl
mov
lods
jl
push
push
push
inc
push
jle
adc
or
inc
in
jb
arpl
test
cmp
mov
add
pop
ret
xchg
pop
arpl
pop
call
ret
dec
divb
xlat
cmpsb
jnp
adc
adc
mov
orps
adc
ret
push
dec
add
sub
imul
xchg
cmpsl
repz
mov
hlt
aaa
hlt
lret
xchg
sub
jbe
idiv
nop
loopne
loopne
call
movsb
mov
cmpsb
add
daa
or
subl
clc
xlat
xor
cwtl
pop
int
inc
mov
dec
mov
imul
add
mov
sbb
add
mov
aam
sub
shr
ficompl
sarb
inc
add
ret
or
sub
mov
fadds
pop
imul
outsl
ja
push
aaa
dec
ja
sub
mov
dec
jnp
jmp
or
inc
or
xor
aam
cmp
xchg
in
sahf
push
out
aad
lret
fwait
sar
popa
and
ljmp
push
sbb
pop
jg
mov
or
cmp
scas
repz
scas
aaa
xchg
out
insl
xor
roll
jns
add
mov
out
jl
inc
dec
out
loopne
cmp
imul
aad
or
enter
jne
jne
mov
sbb
push
inc
mov
xor
cmp
mov
daa
sub
inc
aas
pop
aas
sbb
aaa
sub
pusha
movb
pushf
call
repz
xchg
fsubrs
hlt
mov
mov
hlt
in
pop
sbb
data16
test
das
clc
in
sub
les
js
int
add
mov
outsl
fistl
jle
mov
out
mov
mov
out
adc
inc
data16
dec
dec
bound
inc
jb
xor
push
sub
ss
mov
scas
scas
mov
cmc
movsl
int
cmc
cltd
icebp
lods
fnstsw
xchg
jns
out
iret
in
push
rorl
cmpsb
ficomps
incb
pop
repz
cmpb
or
roll
dec
lods
push
mov
dec
or
cmp
cmpsl
bound
hlt
or
inc
push
cmp
push
or
mov
loop
iret
inc
lea
pop
cmovo
pop
cmp
xorl
fsubr
mov
jbe
cs
add
cs
push
adc
add
int3
mov
push
je
mov
jecxz
idivl
iret
mov
dec
inc
add
sub
frstor
test
sbb
push
pop
ret
jmp
push
mov
push
leave
lea
fcompl
arpl
pop
sarb
jbe
xchg
jp
ret
lods
shr
fistps
lret
pop
or
js
mov
lods
stc
mov
ffree
shr
rcl
in
loope
sub
in
fldl
in
xor
sbb
imul
das
add
mov
inc
pop
je
or
call
mov
cmp
pusha
cmp
cmp
xchg
js
int
cld
inc
mov
push
imul
insb
sbb
sbb
mov
dec
outsl
outsb
sti
dec
cld
add
fbstp
inc
popa
dec
sbb
add
cmp
in
scas
xlat
mov
lahf
xchg
mov
mov
add
adc
xlat
mov
mov
clc
pushf
lock
outsb
xorl
stos
fdivrp
repz
outsb
pop
jno
std
mov
cmp
sbb
adc
sar
icebp
jge
mov
adc
bound
push
ficoms
mov
cmp
js
pop
push
pop
cmpl
in
fsubr
in
mov
lock
add
and
cmc
pushf
cmp
add
pusha
push
movw
lea
jmp
pusha
pushf
call
push
lea
bswap
pushf
mov
movzbl
mov
call
and
fs
lret
bound
bound
add
jb
pop
push
add
sub
mov
or
into
inc
xor
dec
bound
jg
pop
dec
scas
and
cmp
nop
mov
sbb
mov
insl
mov
jno
inc
xchg
xlat
rorb
shrl
or
xchg
inc
cmpsb
cld
mov
cmpsl
les
addb
test
imul
jecxz
lds
sbb
pusha
or
cmp
add
or
sbb
xor
sub
aaa
push
adc
mov
sbb
cmp
dec
add
or
pusha
fs
sbb
sbb
cmp
pushf
add
data16
ret
subl
stos
xchg
mov
lock
imul
pop
repnz
movsb
fdivrl
aad
outsl
fwait
ret
loop
clc
clc
loope
in
outsl
inc
xor
xchg
mov
loope
cltd
mov
sub
and
jno
pop
les
push
mov
mov
out
inc
jno
in
aad
arpl
dec
dec
xchg
xor
je
sar
push
jae
xchg
int
jnp
xchg
outsb
andl
fidivl
mov
test
sbb
add
lods
fwait
cld
sbb
sbb
ja
pop
mov
int
fimull
mov
mov
fiaddl
add
fwait
dec
cli
nop
mov
mov
in
call
ror
ud1
sahf
cwtl
in
rorb
mov
add
movsl
and
jb
pop
repnz
dec
addl
in
jae
dec
push
jg
rcrl
mov
and
mov
mov
pushf
movsb
inc
mov
std
ds
add
and
mov
fildl
sbb
gs
lcall
push
inc
inc
dec
jl
push
inc
sub
out
sub
fdivs
inc
popa
inc
or
outsl
daa
imul
cmp
arpl
repz
cwtl
daa
mov
lcall
add
int
testl
or
outsl
roll
pop
mov
push
mov
subl
neg
movl
mov
cmp
leave
out
jmp
enter
mov
stos
sub
call
lods
aam
test
xchg
mov
mov
sub
sbb
sbb
fwait
pop
adc
movsb
rorb
les
or
mov
ljmp
cmpsl
test
scas
inc
fisttps
push
sbb
jge
push
or
rcrb
pop
jl
rol
aas
out
jecxz
insb
sub
or
add
ret
mov
or
xchg
mov
mov
scas
mov
stos
sub
movb
pushf
movsbw
mov
pusha
lahf
pusha
jmp
filds
dec
adc
jne
add
pop
push
mov
cmpsl
stos
mov
mov
mov
fwait
stos
pushw
sub
call
aaa
rorl
xlat
sar
sub
push
sub
cmp
push
pushl
popl
bt
pushf
pushf
push
cmp
pushf
movb
push
lea
ja
sar
bt
sbb
dec
sub
bt
jmp
icebp
mov
cwtl
mov
fwait
jg
andb
fisubrl
mov
inc
je
mov
jle
out
je
fxch
inc
outsl
adc
divl
cs
call
xchg
int3
int
sub
inc
cwtl
sbb
pop
inc
out
pop
fstps
dec
lods
adc
mov
mov
and
fs
scas
fwait
mov
stos
fwait
mov
xchg
cmpsl
sub
dec
adc
sub
jecxz
or
add
pop
and
jp
inc
inc
jae
mov
adcl
cmc
pop
bound
dec
inc
dec
adc
pop
sbb
push
arpl
not
cmp
jg
sarl
jns
mov
xchg
mov
imul
ret
or
jmp
repz
stos
insb
push
fs
or
jo
jl
add
pushf
stc
test
std
fsubrl
sub
int
mov
sahf
out
scas
xorb
shr
ja
add
push
cmp
cwtl
insl
mov
xchg
mov
js
mov
lcall
mov
push
mov
sub
pop
xor
sub
sub
inc
and
sub
and
push
insb
cmp
xor
sub
leave
fnsave
mov
xlat
mov
lret
xlat
lret
xchg
testl
sbb
lahf
sub
sbb
push
pop
clc
sbb
mov
push
sti
xor
addb
fdiv
iret
and
outsb
jbe
imul
stc
mov
and
ret
out
into
rcl
movsb
subb
mov
sub
pop
mov
loope
lret
mov
lcall
xlat
bound
lods
pop
dec
sub
add
mov
cmc
pusha
and
xor
mov
mov
add
bound
lret
out
repz
out
lea
nop
imul
pop
cld
inc
inc
mov
test
mov
push
or
shrb
inc
repz
ret
test
hlt
sub
jns
aad
jmp
adc
add
es
add
cs
sub
lea
je
jmp
add
inc
jge
xchg
std
nop
pop
pop
aas
inc
xor
adc
pop
cmp
dec
pop
pop
scas
mov
pop
inc
fs
sti
push
sub
fiaddl
sub
jo
addl
pusha
jno
mov
addr16
rorb
ret
fmull
test
mov
ss
jbe
pop
inc
jle
jbe
jp
jb
add
js
pop
add
test
arpl
sub
pop
or
inc
daa
imul
jmp
lods
push
clc
jno
push
ss
pop
dec
push
sahf
ret
inc
pusha
mov
gs
call
mov
fistpl
mov
add
test
push
sub
lret
repz
add
mov
sbb
xor
aas
dec
jae
xor
dec
jl
adc
jge
adc
or
cmp
push
pop
xor
dec
imul
dec
inc
jg
pop
dec
sub
testl
mov
test
loope
leave
xchg
leave
in
xor
rorb
call
ror
xchg
jbe
add
mov
mov
into
inc
add
dec
mov
mov
bound
dec
sub
inc
and
hlt
addr16
mov
inc
insb
popa
mov
dec
dec
test
dec
jbe
repz
ds
add
sub
xchg
mov
mov
fidivs
gs
pop
mov
dec
push
inc
inc
jle
jp
dec
es
push
push
add
add
sub
popf
add
fcomip
test
stc
cmc
xchg
in
shr
sbb
mov
or
mov
jecxz
fwait
xchg
add
sbb
call
jb
les
cmc
shrb
xchg
arpl
int
sbb
aad
mov
mov
inc
mov
push
std
jg
ljmp
inc
xchg
or
andl
dec
jbe
rclb
adc
jg
and
aaa
adc
fnstenv
ss
add
sbb
push
push
pop
add
incb
je
pop
pop
xchg
fmul
mov
cli
jg
jns
pop
adc
pop
add
sub
mov
push
cltd
andl
mov
fildl
outsl
xor
adc
push
mov
dec
imul
enter
rcll
pop
xor
inc
js
ljmp
fists
sub
jns
adc
hlt
cmpb
or
cmp
cmp
push
xor
pop
es
cmp
dec
hlt
add
push
xchg
mov
xchg
scas
sub
sub
movw
cmp
pusha
lea
jae
pushf
mov
push
lea
jmp
push
lea
jne
pushf
pusha
pushf
pushl
mov
call
lea
jne
setbe
je
pushfw
mov
mov
mov
call
call
jmp
push
movl
call
das
ret
out
bound
or
adc
inc
push
insl
jns
adc
jl
ret
ja
daa
push
jbe
lahf
dec
inc
cmp
stos
fnstcw
aas
xchg
and
pusha
cmpsb
mov
xchg
daa
and
push
movsb
test
add
clc
jp
xchg
movsl
nop
dec
mov
lret
cmp
out
and
in
ljmp
add
or
xor
adc
and
pop
jnp
pop
sub
dec
adc
aaa
cmpsl
ljmp
test
xchg
xchg
in
loope
fxch
into
push
dec
leave
push
dec
mov
jne
adc
inc
and
jl
or
pusha
shrl
mov
rorl
sbbl
mov
jle
push
sub
inc
lret
dec
inc
push
sbb
scas
iret
lret
jmp
jmp
xlat
sti
fninit
sub
ror
shr
rcl
ror
add
mov
bswap
movsbw
bts
add
pop
mov
call
es
in
data16
call
jno
sub
sub
xchg
fstps
cmpsb
hlt
sbb
push
inc
inc
push
mov
jmp
addl
pop
addr16
and
mov
mov
cltd
xchg
iret
sahf
nop
cmpb
push
push
sub
adc
push
pop
mov
mov
dec
in
push
test
lods
push
xchg
add
jle
and
inc
popa
pop
sbb
loop
inc
xchg
mov
push
enter
icebp
xor
jno
dec
dec
or
int3
out
dec
ret
stos
cltd
add
mov
mov
dec
sbb
xor
add
sbb
xor
xor
cmp
shrl
incb
sbb
xchg
cmpsb
cmp
xchg
das
pop
sbb
imul
idiv
or
sbb
pop
xchg
lret
loop
cmp
inc
push
sbb
insl
out
mov
jmp
xor
xor
sbb
test
int3
stc
jp
push
cmp
xorb
jns
sbb
rol
notb
addr16
mov
adc
inc
jg
mov
loop
cmp
loope
inc
imul
lret
mov
inc
cmp
imul
sbb
pop
push
dec
jge
sbb
pop
icebp
sbb
shll
psrlq
movsb
add
cmp
sub
aaa
sub
cmp
sbb
adc
addr16
jnp
and
pop
pop
imul
push
shl
adc
add
dec
pop
push
jb
lahf
ret
dec
mov
mov
xor
fsubrs
sbb
lock
dec
call
imul
and
xchg
aad
enter
push
decl
jno
inc
sti
inc
jns
imul
pop
imul
push
inc
push
sub
clc
xchg
std
mov
test
mov
mov
mov
xchg
cmp
and
jne
aad
into
dec
orl
mov
fstpt
jmp
pop
arpl
add
movsb
mov
push
stos
in
stos
aaa
ss
nop
push
sbb
push
data16
scas
das
int
popa
popa
addr16
ljmp
movsl
leave
cmc
lods
test
lods
xchg
lea
sub
mov
adc
lods
mov
loope
std
mov
jl
cmp
gs
ret
push
xor
jns
xor
out
movsb
sbb
dec
mov
mov
daa
fdivrs
adc
jne
xchg
inc
insb
test
data16
andb
jmp
pop
push
data16
or
or
cmp
adc
out
push
add
jl
xor
or
adc
add
std
shr
adcb
sarb
out
orb
fnsave
ss
iret
loope
insl
filds
mov
aas
mov
lahf
aas
sarb
pcmpgtd
fidivrl
lock
dec
das
jno
popf
mov
push
repnz
ds
jl
cmp
sub
int
rclb
subb
out
add
push
jmp
mov
vpsubusw
cmc
lds
add
add
add
ret
out
popf
jmp
lods
leave
mov
in
add
lea
sarb
push
mov
aaa
sub
bound
push
add
xlat
cmp
pop
mov
ret
inc
pop
push
or
and
lods
xor
add
add
sub
xor
mov
mov
pushf
pushf
lea
call
pushf
pushl
lea
jae
not
mov
setbe
inc
inc
inc
pusha
push
sets
pushl
mov
lea
pushf
pusha
call
pusha
lods
pushf
rol
pushf
dec
movw
cmc
pushf
clc
ror
bt
not
stc
cmp
movsbw
lea
pop
cwtl
setle
mov
movb
call
xchg
enter
shr
lods
mov
stos
mov
stos
cmpsb
mov
outsb
imul
add
and
mov
jno
dec
movswl
and
mov
cmc
sbb
repnz
int3
add
jno
popf
je
inc
clc
dec
mov
lahf
hlt
dec
icebp
xorl
test
ret
push
pusha
pusha
popa
mov
fcomi
les
mov
xor
mov
xor
add
inc
jg
inc
adc
mov
pop
dec
inc
inc
test
imul
repnz
xor
out
mov
sbb
push
rcrl
jb
pop
pop
shl
xchg
push
movsb
lods
mov
add
in
enter
enter
pop
pop
pop
pop
add
or
xor
pop
stc
inc
push
push
dec
and
aam
xor
or
cmp
adc
add
cli
insb
sbb
jp
or
adc
jae
dec
sub
pop
outsl
pop
inc
outsl
pop
inc
je
std
jnp
adc
sbb
pushf
stos
dec
cmp
sub
int3
xchg
aaa
push
adc
or
addr16
xor
call
add
fst
dec
xchg
daa
or
sub
and
xchg
ja
gs
fs
ja
test
xchg
fnsave
jp
scas
jge
js
push
das
stc
fsubp
pop
pop
out
ret
sti
repz
loopne
pop
data16
clc
jmp
enter
es
push
add
es
push
lds
pop
cmpsb
addr16
imulb
mov
mov
loope
leave
xor
xchg
out
mov
outsl
leave
push
jbe
dec
sub
pop
lea
sahf
or
pushf
mov
call
xor
js
and
push
inc
fs
pop
adc
jg
movsl
stos
shlb
dec
aam
aam
mov
call
jb
js
sub
xor
push
sub
sarb
jmp
cld
out
lock
dec
xor
shlb
jp
ss
cmp
jbe
push
ljmp
jae
lock
jne
lahf
mov
imul
mov
popa
or
or
sbb
add
call
cmp
or
int3
jp
add
pop
das
jae
inc
add
inc
sub
or
iret
fisubrl
call
mov
cmp
imulb
sub
adc
enter
out
movsl
cs
addb
dec
xchg
dec
bound
loop
fbstp
jno
dec
jne
jecxz
out
gs
adc
cmp
subl
fists
leave
es
hlt
enter
call
mov
add
jns
loop
repnz
pusha
jl
pop
jno
add
xor
or
out
inc
jae
sub
sbb
sub
push
and
jae
das
sub
and
inc
outsb
imul
pop
adc
ss
ja
in
xor
test
mov
sbb
mov
push
mov
test
or
xor
xchg
inc
xor
pop
mov
and
mov
test
or
push
cmp
push
imul
jo
jecxz
mov
mov
jb
bound
push
dec
pop
push
pop
sub
ds
lods
cwtl
mov
xchg
mov
lret
sahf
out
orb
ja
inc
jmp
add
stos
lods
xchg
jne
test
mov
lret
aam
fucomip
push
and
ret
aaa
xor
cmp
leave
lock
mov
fwait
loop
sub
push
cmp
insb
jmp
adc
xor
sub
icebp
dec
xchg
mov
adc
ret
or
inc
scas
and
mov
testb
fstp
cltd
mov
vpsubw
mov
movsb
inc
xor
mov
fwait
orl
int3
hlt
enter
lock
in
in
lods
pushf
mov
jno
cmpsb
cltd
mov
ret
int
int
mov
xchg
shrb
cmp
and
xchg
loope
cmp
and
imul
dec
into
cmp
jo
pop
mov
mov
or
cmp
out
js
push
jmp
pop
insb
sub
and
sbb
or
or
add
loop
push
xor
sub
sub
pop
xor
dec
pop
inc
mov
pop
stos
fsubrs
fstl
rolb
dec
inc
sbb
fs
dec
inc
in
jbe
test
orb
pop
jnp
mov
dec
js
or
adc
mov
cmp
dec
nop
inc
jo
ds
cwtl
mov
sbb
fisttps
cmpps
ss
cmpl
cmp
mov
pushf
mov
mov
jmp
pop
test
lods
leave
int
mov
insb
pusha
lea
out
cmpsb
loop
idivb
daa
add
push
xor
add
or
pop
jb,pt
cmp
mov
adc
mov
popl
mov
test
dec
mov
push
hlt
mov
or
jbe
out
jecxz
gs
imul
pop
movsl
into
movsl
ret
sub
dec
xor
xchg
sbb
loopne
popa
xor
dec
js
das
mov
ss
in
lods
mov
leave
fyl2xp1
in
std
int
cmc
mov
add
push
dec
inc
dec
dec
xor
cs
insb
add
insb
ss
xchg
cmc
popf
lods
mov
rclb
mov
out
cmp
xchg
and
mov
mov
jno
imulb
cmp
adc
inc
push
aam
inc
cli
xchg
arpl
inc
loop
dec
push
bound
fucom
jo
cmp
push
sbb
push
lock
test
mov
shrb
xchg
lds
fs
je
clc
cmp
pushf
jmp
pushf
push
mov
pushf
movb
pushl
ret
sbb
push
enter
jmp
lahf
iret
cmpsl
sti
rcr
cmpsl
lret
mov
loop
dec
mov
xchg
mov
ljmp
aam
lock
and
push
pushf
xor
faddl
bnd
xchg
sub
roll
adc
lea
dec
mov
gs
repz
fnsave
add
sub
push
and
or
jno
mov
pop
pop
inc
mov
add
daa
adc
pushf
into
lret
push
std
sub
loope
rcr
jmp
ljmp
sub
xchg
adc
pusha
pop
mov
movsbl
mov
pusha
pushf
pop
pop
mov
pushl
not
mov
push
movb
movb
call
sbb
es
aaa
adc
dec
cmp
or
xchg
leave
movsl
fmull
dec
and
jbe
inc
loopne
adc
movsl
std
movsl
movsl
subl
push
scas
pusha
dec
call
jbe
push
sbb
adc
dec
ds
pop
nop
lahf
xchg
js
notb
pop
bound
pop
dec
test
dec
outsl
cmp
arpl
push
pop
pop
ja
sub
aaa
loope
lea
je
cs
xor
and
outsb
push
push
or
jb
mov
inc
xchg
cmp
pop
inc
faddl
jno
adc
test
test
mov
xchg
mov
lock
gs
sbb
push
lahf
sahf
dec
outsb
jg
push
cmp
push
mov
mov
or
not
mov
mov
xchg
into
ljmp
call
in
call
icebp
mov
movsb
cwtl
test
mov
loop
mov
ret
xchg
sahf
mov
test
adc
sbb
dec
pop
in
dec
cmp
imul
das
cs
iret
xlat
xor
and
lcall
jecxz
subl
loop
dec
xor
push
repz
inc
xor
and
cmp
xor
add
dec
xchg
test
jle
jo
sub
sbb
jp
jp
jbe
dec
dec
imul
lds
jne
adc
cwtl
clc
cwtl
xchg
add
in
push
mov
jle
orb
add
mov
arpl
dec
push
stos
mov
adc
sub
xor
sub
and
lahf
or
xchg
int3
sti
xchg
std
stc
and
mov
lret
mov
loop
fnstsw
imul
fdivrp
mov
aam
mov
bound
aad
pop
pop
sarb
push
repnz
repnz
out
arpl
push
pusha
xorb
adc
cmpl
mov
inc
mov
pop
and
fsubs
dec
jae
pop
cmp
pop
push
cmova
add
call
mov
lcall
xchg
test
pushf
in
fcoml
test
mov
mov
loopne
out
xchg
adc
or
jmp
dec
pop
mov
jnp
in
fwait
aaa
stos
cli
lret
and
add
pop
int3
nop
popa
ficompl
dec
jmp
into
mov
out
loop
imul
sub
pop
or
jl
adc
testb
push
inc
push
push
dec
mov
pop
ds
sbb
es
and
aaa
sub
add
inc
gs
imul
inc
add
pushf
pushf
lea
je
bt
cmc
or
jmp
lods
sbb
sub
pop
loopne
cli
lcall
sarb
out
and
jns
pop
jnp
mov
stos
or
or
adc
ds
inc
add
rolb
cltd
push
pop
dec
sbbb
ljmp
inc
mov
in
sahf
out
notb
xchg
lcall
and
mul
sub
pop
adc
cmp
sub
sub
add
push
call
sbb
jecxz
dec
loopne
fwait
push
push
jb,pn
jbe
adc
or
dec
jp
ret
les
leave
pop
lret
push
dec
mov
jg
repnz
mull
mov
jae
popl
cmpsl
es
jo,pt
pop
pusha
mov
rorb
fs
pop
pop
scas
mov
cli
mov
nop
jecxz
xchg
add
pop
and
loop
push
test
jne
dec
pop
jge
push
insl
pop
inc
sbb
push
sub
lea
jb
pushf
clc
cmpb
call
adc
push
mov
lea
jae
pushf
jmp
scas
adc
sbb
popa
mov
imul
repnz
mov
or
dec
arpl
add
aas
add
adc
int3
inc
push
mov
and
sbb
xor
addr16
test
sbb
cld
xor
pop
xchg
xchg
lahf
xor
mov
mov
sar
test
mov
mov
iret
out
out
cltd
fistps
jo
je
push
dec
fs
sub
mov
cmp
adc
pop
push
inc
push
and
push
push
dec
pop
dec
mov
push
sarb
pop
pop
pop
pushf
inc
imul
dec
adc
stos
and
jo
lea
pushf
lcall
dec
sub
lahf
push
mov
fsubs
lds
icebp
push
adc
push
xor
jo
gs
sub
outsl
inc
addr16
sbb
outsl
sub
jg
sub
popa
inc
mov
mov
loope
mov
jb
out
push
xchg
hlt
sbb
aad
in
ret
in
adc
jmp
add
jnp
and
lods
in
insl
lds
fnsave
fnstsw
pop
pop
js
mov
sub
movsb
mov
push
rcrl
ffreep
jbe
orl
mov
mov
movsl
popf
sub
jmp
not
pushf
ror
pushf
shr
jmp
cwtl
ss
cmp
cwtl
lea
mov
negb
into
stos
mov
xorl
movl
jns
adc
xchg
roll
push
pop
inc
and
in
cwtl
imul
and
insb
lods
mov
mov
inc
cmp
mov
and
aaa
cmc
jge
das
lret
lret
lret
jg
pop
pop
mov
std
adc
sbb
cmp
inc
xchg
and
popa
push
lock
repz
push
add
pop
inc
fldcw
popf
mov
addb
gs
dec
scas
dec
push
stos
mov
dec
sub
imul
jnp
outsl
arpl
enter
aam
sub
add
fs
pop
jb
push
sub
and
lret
sub
insb
xorl
ja
jnp
jg
pop
sbb
push
adc
jne
ljmp
and
cmp
popa
addr16
add
icebp
inc
pushf
xor
les
mov
jmp
adc
setae
cli
fiaddl
sbb
and
sbb
sub
mov
pop
sub
subb
jp
push
inc
push
adc
sbb
adc
dec
outsl
icebp
loopne
stos
hlt
out
push
push
sub
int
js
xor
mov
xchg
jp
shrl
xchg
ljmp
shrb
into
adc
fwait
jge
pop
rcrb
pusha
add
loopne
ds
loop
cmpsl
repz
cmp
mov
push
sub
xor
je
lret
aam
push
fxch
in
sar
stc
lods
cltd
shr
int
std
shrl
add
call
shr
jmp
not
bt
bt
jmp
je
stos
out
xlat
inc
mov
lret
test
mov
call
icebp
bound
outsl
pop
xor
mov
sub
push
sbb
sbb
mul
fisubs
mov
cld
sbb
xlat
or
lea
lret
jo
mov
frstor
jae
std
daa
xchg
decb
push
sbb
outsl
fwait
dec
fldl2t
shll
xchg
icebp
mov
sub
push
movb
mov
bswap
lea
pop
pusha
pushf
pushl
ret
pusha
mov
mov
lea
jae
pusha
xor
mov
movw
lea
call
call
mov
pop
loope
scas
mov
shl
mov
mov
rcl
cmp
iret
jae
push
cmp
push
push
mov
lea
lea
addr16
mov
push
mov
lods
imul
or
pavgw
push
in
xor
cmp
and
dec
mov
sub
pop
cmpsb
cmc
ffree
add
clc
mov
cmc
xor
xor
adc
xor
cmp
dec
jb
sub
push
inc
push
push
neg
cmc
bt
mov
not
bt
ror
cld
cmc
clc
cmc
pushw
popfw
push
call
repz
pop
inc
je
xchg
call
pop
sub
push
adc
inc
pop
or
out
data16
mov
arpl
adc
andl
mov
push
dec
in
out
jo
popa
inc
mov
xorl
pop
cmpb
enter
mov
ds
mov
insb
mov
mov
cli
movb
cmp
and
sub
add
cmp
sub
les
push
pop
jb
mov
sub
inc
jo
js
push
and
sbb
push
mov
arpl
sbb
hlt
clc
dec
insb
popa
mov
cwtl
and
xchg
aam
sub
aas
mov
push
pushl
pop
dec
pop
loope
push
shrl
xchg
cmc
adc
imul
arpl
das
sbb
inc
adc
sbb
pop
outsl
daa
pop
sub
stos
out
mov
fildl
test
fdivs
mov
mov
jo
iret
pusha
mov
test
mov
xchg
sahf
jl
pushf
aam
fsubl
mov
cli
push
xor
pop
mov
mov
pop
inc
add
mov
and
cmp
sbbl
les
or
or
daa
or
rcr
fisubrl
popa
dec
je
pop
adc
xchg
addr16
sub
push
pop
pop
dec
aaa
mov
aad
mov
popf
xchg
mov
add
sbb
scas
xchg
xchg
cmp
das
sub
jno
insl
and
pop
sub
adc
mov
mov
xor
pusha
rcrb
lods
jae
in
idivl
in
mov
jge
jne
mov
pop
mov
in
mov
loop
pop
aaa
lret
pushf
cmp
ret
xchg
out
mov
and
enter
fidivrl
adc
mov
xor
mov
mov
cmp
xor
sub
xchg
mov
scas
mov
add
lea
jb
pushf
mov
pushl
ret
fs
cs
pop
xor
lods
push
jg
add
pop
popa
fucomp
imul
mov
or
mov
test
cmovnp
mov
and
shrl
leave
psubw
inc
pusha
xchg
and
nop
das
mov
ficoml
out
dec
mov
lods
iret
push
dec
inc
cmpsb
xorl
xor
shl
popf
mov
ret
dec
jmp
ret
add
dec
jo
push
insb
mov
sbb
popf
cmc
add
cmp
push
jnp
jae
push
or
inc
lds
fisubrs
push
popa
jno
into
cli
xchg
imul
movw
pushf
push
inc
jmp
xchg
shrl
js
lret
stos
inc
stc
arpl
lcall
push
xor
mov
cli
add
lock
cmp
mov
ds
stos
push
pop
imul
incl
es
mov
pop
ret
jmp
and
jo
xor
sbb
andb
mov
pop
cmpsl
sbb
stc
sahf
imul
push
inc
sti
pop
scas
arpl
dec
sub
xorl
fwait
inc
push
mov
in
xchg
incl
sahf
cmp
clc
inc
test
jl
inc
mov
repz
sub
sbb
in
in
jg
cmp
call
mov
mov
push
mov
mov
pop
and
lcall
lods
loop
enter
add
lret
pop
sub
jmp
push
jg
ret
pusha
push
call
inc
nop
mov
cld
lcall
jle
iret
jmp
fwait
add
into
xchg
jp
pushl
xchg
rclb
lods
sub
jg
xchg
imul
dec
mov
mov
and
inc
divb
push
sbb
mov
cs
xor
call
pop
xor
outsl
jge
jno
mov
sbb
inc
lds
jmp
sub
pop
scas
int3
ds
sahf
repnz
and
imul
push
popa
and
jmp
cmp
ja
jg
push
mov
xor
mov
xchg
imul
decl
cltd
sbb
cli
mov
sbb
push
outsb
pop
dec
sub
jle
cld
mov
out
mov
ss
dec
stos
call
pop
pop
mov
mov
sbb
lds
inc
dec
call
stc
sbb
push
add
push
push
xchg
jge
popl
fnsave
popf
and
std
out
and
push
xchg
cmp
fdivl
repnz
dec
pop
or
iret
std
cs
mov
dec
adc
ljmp
cmpsb
jmp
mov
cmp
dec
pop
test
mov
andb
ja
icebp
pop
mov
jge
xor
in
leave
cmp
add
pop
dec
cli
clc
lret
push
cmp
fs
mov
jge
push
sti
loop
scas
cmp
inc
sub
or
mov
pusha
sbb
xchg
pop
push
jbe
fnstsw
icebp
decl
shr
incl
scas
or
insb
mov
movsl
push
and
adc
xor
pushl
and
sbb
pop
repz
in
call
xchg
add
inc
cmp
sbb
aam
incl
dec
push
int3
jl
fildl
rorb
cmp
fbld
mov
sti
push
hlt
push
shrl
ds
sbb
inc
ss
mov
pop
insb
or
jmp
sub
cmp
adcb
or
cmp
inc
popa
call
movsl
ret
or
sbbb
mov
jne
mov
inc
jbe
xchg
arpl
mov
mov
xor
jae
addb
mov
stc
incl
sarb
push
pop
mov
push
or
or
jo
jno
pop
mov
insb
xchg
std
sub
dec
lds
gs
mov
and
rolb
adcb
mov
repnz
scas
rolb
sub
add
xor
inc
mov
mov
push
dec
dec
xor
fs
ljmp
sub
mov
push
mov
add
mov
push
ljmp
aas
pop
test
cmp
pop
cmpsl
sti
jnp
lods
cmp
adc
mov
sbb
lahf
out
std
insb
repz
mov
adcl
icebp
lcallw
and
lcall
push
jecxz
les
gs
scas
aad
mov
mov
dec
jge
or
in
cmc
test
stos
jmp
loopne
push
add
jecxz
adc
mov
fmull
jle
lahf
inc
enter
xor
adc
das
ret
mov
jle
pushl
lea
fbstp
mov
jo
ds
das
xor
outsb
jmp
cltd
repz
and
hlt
push
xor
stc
std
int3
subb
mov
fisttpl
sbb
out
push
pop
arpl
test
leave
jno
cld
testb
and
jbe
in
sbb
in
cld
scas
and
filds
repz
repz
mov
dec
push
inc
aas
fidivrs
pop
nop
push
call
xor
out
xadd
ror
sbb
push
jle
pop
clc
and
rcr
lret
ret
adc
icebp
and
inc
jl
in
sar
loop
dec
push
xor
jbe
jo
dec
lods
in
insb
pushl
out
popa
jecxz
in
jno
lahf
jp
mov
repz
mov
pop
mov
call
inc
bound
dec
outsl
and
stc
mov
mov
addr16
and
and
jmp
aaa
jbe
call
mov
lahf
lret
in
ljmp
icebp
jp
out
mov
sahf
or
decl
jg
aad
adc
in
test
lea
mov
imul
pop
pusha
pop
push
ficoml
incl
mov
daa
call
push
push
fstpt
in
jge
imul
or
mov
mov
lea
les
inc
jb
jo
out
mov
aam
call
mov
and
jmp
repz
mov
scas
stc
dec
add
mov
push
sub
es
push
jl
inc
pushl
dec
fwait
cmc
enter
lcall
fcoms
mov
fisubrl
cmp
sbb
cli
test
mov
and
jl
mov
jmp
std
push
loop
cmp
lock
push
cwtl
xor
inc
push
mov
xchg
xchg
jmp
xchg
and
dec
popw
push
jg
push
push
jg
mov
and
mov
xor
and
jge
mov
jle
pop
pushf
and
push
jmp
inc
jp
xchg
xchg
dec
fisttpl
cli
js
jnp
cld
daa
incl
sub
out
rorl
cmp
dec
repz
mov
pop
or
jp
cmp
pushl
push
daa
mov
paddw
jle
mov
leave
adc
pushl
pop
stos
testb
ss
adc
repz
shrl
pushl
std
mov
and
cmp
iret
cmp
loopne
cs
mov
xchg
out
popf
jl
sbb
add
dec
enter
and
cld
inc
cli
repz
mov
sbb
ja
mov
pop
add
sbb
push
mov
add
lock
push
inc
xor
pushl
jl
add
cli
fcmovu
jns
flds
pop
dec
inc
hlt
push
push
loopne
test
repz
push
cmp
in
std
dec
pusha
scas
bound
outsb
pop
into
fdivr
out
iret
test
in
out
mov
jecxz
mov
cwtl
repz
aas
jecxz
testl
mov
mov
cmp
sbb
mov
pop
in
fildll
push
out
pop
pop
fsts
outsl
dec
fimuls
inc
ja
out
cmp
fnstenv
xor
fisubrs
mov
sbb
fsts
adc
fimuls
mov
push
stc
sti
mov
outsl
repz
mov
jecxz
mov
outsl
rcr
iret
mov
ret
mov
outsl
mov
scas
mov
mov
xchg
outsl
xchg
fimuls
out
cmpl
mov
outsl
jae
outsl
mov
arpl
pop
mov
outsl
push
fimuls
dec
ja
out
inc
aas
fnstcw
mov
outsl
xor
das
mov
and
fstps
mov
outsl
adc
ud1
ja
out
add
fsqrt
mov
outsl
repnz
mov
loop
outsl
cmpsb
fiadds
push
ja
out
popf
fldenv
mov
outsl
mov
mov
out
addr16
fdecstp
mov
outsl
sbb
mov
mov
outsl
fcomp
je
inc
ja
jg
dec
out
stos
outsl
fldcw
mov
outsl
lcall
out
mov
lock
test
jo
and
out
das
fnstcw
fsubp
mov
adc
outsl
inc
fimuls
fistl
out
sarb
xor
imul
mov
ja
cmp
mov
push
stc
fstps
fiadds
out
pusha
sub
idivl
stc
mov
outsl
adc
sarb
push
xchg
sti
sbb
dec
ljmp
cli
jp
sbb
mov
inc
ds
xor
mov
or
mov
xchg
outsl
out
push
add
or
xchg
outsb
adc
push
das
lret
pop
sub
loopne
inc
leave
out
pop
jle
inc
xchg
mov
fnstsw
mov
in
fwait
scas
sar
ret
aam
jp
loop
inc
lods
mov
xor
fimull
ret
ret
inc
movsb
lods
push
lret
enter
and
data16
repz
dec
lret
mov
pushf
sbb
mov
leave
movsl
xchg
fnstcw
sub
inc
mov
cmp
rcr
arpl
jb
mov
jg
test
shll
sub
cmpsl
adcl
scas
or
mov
mov
mov
pop
xor
inc
out
mov
testl
imul
dec
xchg
dec
xorl
aaa
mov
jae
adc
dec
aad
repnz
ret
ss
sbb
fwait
test
adc
or
sub
pop
fimuls
ljmp
bound
xchg
mov
jp
psllw
scas
fstps
push
jg
jb
cmp
pop
cmpsb
jo
mov
jge
stos
fwait
jno
or
jnp
pop
daa
icebp
in
xchg
imul
incb
outsl
jge
sbb
xor
fnstenv
mov
outsb
dec
roll
add
xchg
icebp
inc
fiadds
pop
pushf
cli
fmul
outsb
jg
into
nop
mov
xchg
stc
addr16
es
into
jbe
xlat
sub
ficoms
in
sub
test
cmc
daa
jb
incb
outsb
dec
addr16
mov
insb
sbb
ret
jnp
ljmp
jb
mov
in
adc
cli
lea
in
or
inc
fxam
mov
dec
xchg
lods
pop
insb
mov
pop
xor
addr16
ss
mov
xlat
test
xor
rol
enter
xchg
insb
int
idivb
ss
cli
test
pop
bound
outsb
inc
lret
ss
fiadds
mov
shll
push
or
dec
out
push
loopne
jbe
inc
sbb
packuswb
data16
ss
je
dec
imul
es
sbb
xlat
inc
inc
cli
dec
scas
js
adc
pushf
es
popf
stos
or
lret
mov
out
and
out
add
adc
addr16
fistps
xchg
aam
lods
cmpsb
shrb
je
push
ret
das
out
in
mov
cli
mov
dec
xchg
mov
cli
xchg
adc
das
xor
xor
insb
mov
sti
cs
sar
dec
pop
mov
test
mov
fdivrp
ds
insl
mov
scas
cmc
cld
jb
mov
lea
cmpsl
repz
cli
sti
out
add
popf
clc
push
mov
shrd
scas
jmp
cld
ljmp
ret
jae
in
cld
push
mov
mov
test
pop
and
mov
mov
repnz
fnstcw
ljmp
sbb
xor
dec
pop
cmp
sub
mov
jp
add
lock
std
shrb
sti
xor
popa
sbbb
cld
dec
mov
xchg
ret
mov
pop
pop
sti
aas
cmp
mov
pop
fistpl
xchg
sbb
fidivrl
jecxz
and
and
mov
mov
incb
jnp
jb
mov
mov
jl
cmp
pop
std
xchg
cmp
sbb
pop
into
fisubrl
cmp
mov
cmp
jg
pop
jl
fwait
dec
or
mov
sbb
out
and
fwait
push
test
sbb
or
out
outsl
push
xor
repnz
stos
divb
jg
or
out
sbb
mov
push
cli
mov
pop
mov
testb
or
insb
cmp
cmp
pushf
aam
je
cld
sub
cmp
out
mov
jnp
pusha
jo
or
push
xor
imul
sbb
in
cmp
pop
add
loope
and
cmc
aas
data16
cli
hlt
push
push
sub
add
jo
test
daa
and
enter
test
outsl
lea
mov
outsl
or
hlt
loopne
fimull
leave
fwait
jg
sub
fidivrl
in
cs
ficomps
out
mov
add
aas
jnp
cli
jb
loopne
jg
cmpsb
pop
fcomp
or
in
jg
ds
pusha
fdiv
sahf
imul
fidivs
pop
mov
mov
mov
adc
pop
aam
pop
and
mov
sbb
fcmovnu
cmp
movsb
jg
shrb
jns
fnstsw
cwtl
ret
mov
jge
ljmp
arpl
in
loope
pop
repz
jl
sub
scas
fisttpll
notb
xor
out
std
push
pop
inc
scas
lcall
idiv
xor
push
inc
jnp
cwtl
sti
shrb
xor
es
int
sbb
mov
int3
jecxz
push
loopne
dec
jp
push
dec
rcll
xor
mov
sub
mov
sub
inc
jnp
sbb
cmp
jecxz
sub
mov
inc
bound
ficompl
adc
pop
jge
cmp
mov
loop
sti
and
cmp
and
jmp
ss
hlt
or
or
cld
fisubrs
imul
xchg
int3
add
sbb
scas
fcompl
stc
jge
ret
enter
dec
pop
std
scas
ss
xor
sar
jne
mov
push
push
out
cmp
test
out
std
fnstcw
cwtl
icebp
cmc
xchg
out
cld
into
jl
jg
fstpt
negl
inc
cs
jb
dec
iret
cmp
ljmp
sub
inc
pop
inc
mov
sub
loope
or
imul
xchg
call
sahf
jl
stos
out
pop
xchg
cltd
shll
pop
xchg
in
ds
sub
xlat
ss
ljmp
pop
mov
push
mov
xor
aaa
lods
push
daa
leave
outsb
dec
pop
or
jg
test
mov
fistps
mov
rol
adcl
pop
jnp
cmp
pop
divl
jg
ss
bound
packuswb
pop
adc
cs
pop
sub
sub
xchg
dec
inc
outsb
dec
pop
lret
lods
xlat
outsl
out
cld
mov
xor
es
cmpsb
sub
ret
jbe
mov
cmp
sbb
ffree
loopne
out
sub
fxch
mov
mov
xchg
loope
inc
add
loopne
fsub
mov
loopne
mov
out
xor
fildl
mov
mov
jb
jne
sub
fistpll
jmp
mov
cwtl
lret
mov
sar
out
cmp
loop
sbb
cld
jecxz
pop
ljmp
pop
cmp
notl
fbstp
xchg
loop
bswap
pop
mov
mov
out
imul
sbb
in
out
sbb
cmpsb
cmpsb
into
not
push
dec
jecxz
jnp
outsl
aad
add
inc
outsb
push
mov
jmp
sub
ss
ljmp
inc
fisubl
dec
es
fcomi
cmp
mov
jge
mov
loope
dec
fsubrl
mov
jg
mov
pop
sti
xchg
out
lret
lea
pop
mulb
xor
lock
icebp
in
sub
or
cs
mov
orb
cwtl
add
xor
stos
sbb
push
insb
sahf
enter
hlt
insl
jecxz
jbe
cmp
dec
int
pop
repz
lahf
lea
mov
lahf
cmpl
jmp
pop
daa
dec
add
cmp
out
pop
fbstp
repz
dec
dec
push
out
push
lock
mov
xchg
add
pop
out
pop
sti
jg
xlat
mov
in
add
data16
outsb
lods
insl
outsb
mov
fidivs
mov
repz
add
data16
mov
ret
or
sub
jae
insb
cmp
push
ret
sub
add
leave
mov
mov
add
sbb
aas
repz
pop
or
xchg
lcall
lret
insb
fsubrl
popa
popf
mov
insb
mul
scas
add
sub
sti
sub
add
xchg
sub
ret
adc
dec
sti
mov
inc
data16
mov
jl
outsb
fdivl
and
jnp
test
sbb
push
mov
xchg
scas
jmp
ss
xchg
in
addr16
aaa
dec
out
ret
sahf
cmp
mov
mov
scas
outsl
scas
into
pop
insb
jmp
into
adc
fsubrs
out
sbb
mov
cmpsl
sub
ja
pop
adcl
and
notl
inc
cld
push
xlat
cld
outsl
cmp
shlb
clc
pop
add
xchg
in
push
inc
repz
clc
out
xchg
hlt
test
sub
xor
mov
cs
scas
aad
idiv
push
data16
lcall
pop
xchg
mov
shlb
int
notl
xorl
rcl
rolb
and
clc
hlt
aad
cli
in
lods
into
adc
icebp
sub
rcrl
adc
psllw
xor
xor
sti
in
stc
cs
pop
sar
or
addr16
xchg
mov
xor
ret
mov
leave
cli
lea
ss
add
or
or
rorb
jl
sbb
leave
cmova
jae
sti
adc
icebp
in
mov
negl
jecxz
loopne
fisubrl
pop
add
in
pop
xor
jecxz
leave
outsl
mov
shrl
xchg
testb
insl
fdivp
and
sbb
pop
out
idivb
jmp
fcmovb
mov
mov
ja
adc
cli
bound
fimuls
fbld
push
inc
jp
test
in
cwtl
mov
cmpsl
movsl
les
fwait
add
in
pop
in
pop
scas
mov
mov
add
das
pop
or
pop
dec
lahf
aas
nop
scas
mov
sbb
pop
mov
push
pop
inc
addr16
ja
fsts
mov
xlat
cld
outsb
fdivrs
ret
fdivs
mov
lock
inc
fcoms
sub
sahf
add
in
sub
mov
sbb
pop
add
lds
neg
push
mov
mov
mov
lret
pop
out
stos
and
cmp
dec
outsl
pop
xorb
pop
sub
dec
pop
jg
stos
or
push
stos
mov
clc
push
mov
sbb
scas
sub
lret
pushf
hlt
ljmp
call
cmp
fcomp
daa
rcl
jb
lcall
gs
inc
iret
ss
mov
push
loope
fbld
repz
xchg
icebp
in
out
scas
dec
mov
fiaddl
lret
mov
push
mov
fistpll
scas
sbb
sarb
enter
sub
into
hlt
cmp
add
imul
dec
jecxz
mov
add
ljmp
adc
sbb
push
arpl
and
idivl
in
lods
xorl
cmpl
pusha
nop
lea
or
push
iret
or
insb
sbb
xlat
sbb
push
or
ja
cmp
and
sbb
cmp
movl
add
les
ja
sahf
scas
dec
sarl
shll
insb
mov
add
mov
pop
xor
cli
jl
jmp
jp
mov
mov
decb
and
cs
lods
std
sub
add
cmp
mov
add
jmp
leave
repz
push
stos
icebp
mov
in
or
xchg
lods
jo
jns
sub
imul
pop
int
or
outsw
repnz
call
hlt
xchg
mov
jb
scas
adc
mov
adc
sbb
std
mov
xchg
aam
sbb
xor
mov
lret
je
push
mov
repz
sub
cltd
iret
sbb
cli
xor
cmp
test
sbb
lea
ljmp
sbb
push
sbb
out
sbb
imul
lods
adc
xor
or
das
negb
jmp
fnop
mov
cmpsb
insl
ret
cli
jmp
negb
outsl
sub
pop
xorl
cvtdq2ps
and
mov
test
cmpsb
xorl
jecxz
sbb
pop
jle
popf
lods
or
sti
sbb
daa
mov
push
test
xlat
fldz
scas
pop
jns
mov
std
ror
fisttps
sub
xchg
or
fisttps
pop
mov
loop
notl
data16
outsb
outsl
inc
fadds
cs
in
insl
popf
lods
xchg
adc
add
mov
insl
sbb
in
jnp
and
in
or
push
mov
in
mov
jno
aam
subl
pop
fisttpll
in
pop
iret
xor
dec
push
push
imul
sbb
div
iret
insl
push
out
in
ja
push
xacquire
dec
or
cmpsl
negb
fisttpll
jmp
pop
fwait
js
push
fadd
xchg
cmp
rcr
push
loope
cwtl
cmp
lea
adc
pop
int3
jns
outsb
pop
pop
dec
xor
xchg
mov
inc
pop
fiadds
jo
mov
idivb
sbb
iret
shlb
dec
sub
sub
mov
sbb
aas
fisubs
daa
mov
cmpl
call
jo
int
nop
out
cli
mov
iret
mov
mov
imul
iret
jl
add
sub
int3
pushf
push
out
push
cmp
mov
adc
outsl
cltd
pop
lods
test
out
mov
aaa
xor
cmp
in
pop
pushf
pop
mov
adcb
lcall
mov
mov
repz
insb
int
jl
mov
sbb
and
mov
mov
inc
inc
and
cmp
push
xchg
sbb
mov
sarl
add
in
mov
jge
xchg
fdivrl
sbb
jne
popf
int3
movb
outsl
jg
push
loope
and
pop
sbb
out
stc
sbbl
test
leave
rcl
inc
dec
into
push
sub
mov
fstl
insb
sbb
or
xchg
push
imul
dec
or
cld
js
or
ja
jecxz
iret
push
divl
cld
sbb
mov
je
dec
xor
in
ret
pop
punpckhwd
jl
repz
outsb
ffreep
xor
sahf
insl
push
jmp
mov
lcall
dec
cmpsl
repnz
pusha
cli
sub
outsb
xchg
pop
jnp
cmp
jnp
lods
mov
js
sub
and
xchg
movsl
lods
daa
popa
xorb
dec
cmp
divl
div
lahf
cmp
rclb
out
xor
sbb
call
cmp
pop
dec
and
xlat
and
aas
mov
mov
sub
fdivrl
rorl
adc
aam
push
in
adc
sbb
fldcw
shlb
fstpl
movsl
pop
cmp
jge
add
notb
push
jmp
ret
int
pop
jecxz
lcall
dec
pop
mov
je
out
pop
stc
add
sbb
push
lret
cli
jo
sbb
inc
imul
pop
and
xlat
fstpl
das
adc
xchg
adcb
lret
or
xor
adc
mov
imul
sbbl
cmpsb
fsubrs
sub
jmp
jne
lods
js
shll
push
mov
into
xchg
btcl
pop
push
aas
lock
rcr
sbb
fistpl
push
xor
mov
cli
sub
inc
movsb
push
inc
test
sbb
and
cmpsl
or
or
mov
inc
lds
mov
and
jb
sbb
cmpb
lea
jns
leave
xor
xor
inc
aam
pop
mov
inc
jnp
adc
pusha
cmp
aam
inc
mov
fdivrs
pusha
mov
jmp
fs
cmp
in
or
in
shrb
loope
jecxz
sbb
sbb
push
add
jo
cmpsl
mov
cmpsl
fstpl
scas
subl
add
aaa
fs
pop
cmp
or
cmp
push
sbb
mov
mov
push
cmpsb
push
dec
push
insb
stos
or
xor
inc
dec
jg
insl
stos
sub
mov
pop
fisubs
es
or
sbb
aas
add
out
rorl
inc
adc
movsl
mov
cmpsl
iret
pop
cmc
push
dec
arpl
out
fwait
xchg
jp
jmp
rorl
pop
fsubrs
pop
stc
xor
imul
sbb
jae
outsb
xchg
cmp
out
movsb
cmp
addr16
cmp
adc
pop
pop
xchg
mov
or
out
stos
sbb
cmp
icebp
mov
push
scas
cmpsb
loope
insb
in
inc
dec
les
jnp
outsb
dec
push
outsl
loope
in
xor
call
sub
out
ljmp
inc
rorb
insl
ss
jo
push
sbb
pop
outsl
rcl
bound
sbb
lods
insb
cmp
jae
mov
jo
lods
jmp
push
scas
pop
dec
mov
mov
mov
jmp
or
cltd
stos
gs
nop
fildl
pop
or
inc
sbb
je
jmp
ss
rcr
je
frstor
sbb
je
jnp
je
jae
je
dec
jp
xchg
xchg
or
sbb
fbld
push
push
push
lea
jnp
xchg
lahf
sarl
leave
xlat
sbb
orb
ret
stos
fcoml
frstor
mov
jl
pop
sarl
jl
pop
jmp
addb
imul
leave
hlt
pusha
andb
xchg
mov
insb
inc
dec
inc
sarl
jecxz
and
test
jae
test
or
test
pop
faddl
sbb
aad
cwtl
mov
mulb
jecxz
enter
xchg
dec
and
rcr
jae
rorl
add
mov
cmpsb
mov
sbb
mov
divb
mov
mov
mov
imul
jnp
mov
adc
sbb
fs
aam
jnp
fdivr
pop
call
outsb
sbb
jo
push
or
jno
sub
xchg
adc
clc
sbb
pop
pushf
jmp
cmp
xchg
xchg
notb
sarl
pop
cmpl
daa
xlat
je
pop
repnz
cwtl
lahf
cmp
cwtl
jmp
mov
stc
mov
mov
je
pushf
mov
sbb
in
fwait
dec
push
negb
loop
jnp
jbe
pushf
mov
fbstp
ss
push
js
sahf
dec
push
mov
repnz
movb
dec
pop
dec
negb
inc
mov
push
in
sbb
lret
dec
cmp
mov
jns
movsb
jnp
jbe
movsb
mov
scas
sbb
fisubs
pop
outsl
repnz
js
movsb
xchg
add
mov
aad
pop
shl
in
lock
jnp
jbe
test
je
test
or
in
daa
dec
jb
test
ja
test
xlat
stos
xchg
push
test
sbb
enter
repnz
js
test
add
mov
in
loope
lods
ret
fcompl
add
testb
mov
in
pop
mov
pop
loope
pop
push
ds
jnp
mov
aaa
mov
hlt
xor
daa
add
sbb
inc
add
inc
fbstp
jnp,pn
mov
cmovg
mov
push
repnz
fisubs
cmpsb
mov
add
mov
xor
bound
pusha
xchg
popf
testb
mov
sarl
std
mov
pop
jg
fisttpll
sbb
mov
repnz
frstor
movsb
mov
push
jae
mov
mov
mov
sarl
cli
mov
pop
outsl
jmp
fisttpll
jnp
rcr
ds
sarb
mov
sub
mov
imul
stos
daa
out
mov
scas
rcrb
sarl
fadd
pop
gs
fnstsw
sbb
dec
stos
push
mov
les
in
xchg
pop
mov
out
rorb
insl
aas
rcrl
pop
sbb
enter
enter
enter
mov
das
enter
stos
jns
in
jg
add
int3
in
or
pop
mov
or
push
jnp
pusha
push
push
notb
out
js
int3
rcr
sbbl
int3
call
mov
rcrb
sarb
ror
testb
insb
ret
fwait
outsb
ret
dec
pusha
out
js
aam
frstor
fisttps
mov
sbbb
shll
insb
imul
mov
fbld
mov
sarl
fcomps
xchg
faddl
test
inc
sbb
psubsw
faddl
xlat
jbe
fmull
jae
fdivrl
fcompl
dec
add
mov
jnp
jbe
fsubl
fbstp
cmp
sarl
cmp
stos
jns
hlt
loopne
in
push
jnp
loopne
sbb
loope
sbb
daa
add
js
and
movsl
lock
cmpsl
in
jecxz
inc
in
pop
insl
repnz
mov
sbb
in
ljmp
mov
inc
add
in
mov
out
rclb
jne
in
es
mov
cmc
outsl
or
iret
pop
pop
rclb
dec
pop
xchg
cmpl
call
mov
arpl
iret
into
cmp
push
sbb
lcall
jnp
fistps
jmp
pop
xchg
add
add
push
adc
mov
jl
sbb
faddl
mov
lret
xchg
sub
sbbb
or
sbb
xchg
pop
popa
fsubs
repz
rcrb
mov
mov
out
xor
cmp
jmp
andnps
leave
dec
jmp
cmpl
aam
aas
in
nopl
mov
stos
fldt
sarb
jle
fnstsw
aad
sub
mov
xlat
dec
fnstsw
lock
sarb
mov
mov
ljmp
cmp
push
lret
xchg
outsl
fiaddl
lahf
pop
out
mov
ds
in
xor
mov
add
divl
fadds
cli
mov
sti
adc
ret
roll
xchg
iret
ja
fdivs
ficomps
int
out
adc
mov
cmp
scas
rcll
cmp
sbb
in
adc
mov
jnp
hlt
lcall
mov
cmp
jmp
xchg
insb
mov
ljmp
pop
cmpsb
divb
push
cltd
adc
push
enter
jnp
jbe
clc
stos
mov
out
adc
mov
mul
jne
test
jo
pop
out
jae
aad
loop
pop
rcr
arpl
dec
idivl
mov
pop
in
popf
xchg
dec
push
sub
aad
cld
jno
jp
adc
pop
fsts
pop
sbb
ret
or
sbb
fcompl
inc
hlt
lcall
in
pop
push
sbb
or
sbb
pop
cli
dec
push
out
adc
and
gs
enter
les
fstpt
pop
ret
lret
or
mov
mov
icebp
pushf
xchg
mov
icebp
adc
cs
lahf
xor
push
out
outsb
insb
scas
add
jno
divb
mov
add
repz
mov
push
dec
pop
add
and
mul
stc
adc
test
jmp
or
xchg
sahf
sub
xchg
and
jo
sbb
add
push
jno
or
outsl
mov
mov
add
jae
mov
mov
add
fistps
push
mov
popa
cwtl
dec
mov
shl
cmp
mov
xchg
ror
jb
mov
xchg
call
add
jmp
in
xchg
insb
sub
in
jnp
add
or
test
mov
int
gs
call
in
jae
dec
mov
mov
dec
imul
rcll
fidivl
stos
into
adcl
ja
and
adc
int
repnz
imul
ljmp
dec
cmp
adc
imul
lea
es
iret
mov
movsl
or
iret
pop
xor
shl
mov
xorl
outsl
inc
or
pop
leave
into
test
stos
mov
jno
in
xlat
ja
lods
mov
push
xor
sbbl
and
stos
push
out
in
jl
push
jnp
cmp
ret
mov
pop
into
lods
jmp
push
xchg
mov
rcr
je
adc
call
and
mov
and
icebp
xchg
rclw
cmpsb
add
lea
sti
push
pop
jmp
mov
cld
jbe
mov
es
testl
jae
outsb
xchg
pop
int3
icebp
lea
jae
insb
in
ja
mov
sbb
ds
ffreep
adc
pop
rcr
sbb
mov
mov
stc
jge
pop
mov
mov
fnsave
mov
mov
cwtl
insb
cmpb
ucomiss
and
cmp
in
sbb
jbe
add
dec
lahf
sbb
shl
mov
sbb
dec
es
in
adc
pop
mov
in
fisubrl
mov
std
xor
rcr
add
or
dec
negl
mov
mov
subl
sub
mov
xchg
and
cmp
cmpsl
fs
ret
xor
sbb
mov
imul
hlt
aaa
jl
mov
mov
cltd
es
imul
rcrb
sar
and
iret
cmpsb
mov
daa
xchg
addb
mov
aas
xlat
mov
les
and
ss
pop
stos
pop
pop
repz
cmp
lahf
and
or
mov
fistpl
pop
mov
inc
aas
pop
mov
jnp
lods
xlat
jne
out
and
add
pop
imul
leave
or
xchg
pushf
pop
add
jns
mull
pop
jbe
mov
or
xor
aas
and
jns
add
bound
aam
das
mov
fists
pop
jne
or
mov
jnp
fisubrl
mov
mov
jo
mov
nop
andb
sbbl
add
inc
jns
sub
aam
ret
fwait
jns
sub
push
lcall
mov
sbb
dec
mov
sub
test
sub
aaa
pop
mov
mov
xor
push
xor
jb
add
leave
or
mov
or
cmp
rcr
xlat
sbb
xor
jmp
jbe
xor
mul
mov
cmp
xchg
cmp
in
mov
inc
in
mov
push
mov
sub
xchg
aas
cmp
adc
movsb
cmp
push
xor
idivb
cmp
cmp
daa
jno
mov
fidivrs
jnp
inc
ds
rcr
inc
sub
lock
sbb
inc
cmpsb
jae
inc
testb
xchg
sbb
sarl
dec
shll
mov
je
loope
nop
inc
jmp
jbe
inc
das
fs
in
es
in
push
inc
push
cmpsl
jmp
hlt
cmc
xor
jnp
dec
movsb
jnp
dec
push
jnp
dec
sahf
mov
leave
fisttps
insb
rorb
dec
fstpl
frstor
dec
mov
xor
shrl
dec
cmpsb
jae
dec
fmull
movsl
pop
insb
mov
fisttpll
mov
dec
mov
cmp
push
dec
mov
dec
mov
push
mov
inc
in
cld
push
push
ret
push
jmp
jnp
push
movsb
jnp
push
push
jnp
push
xchg
push
push
das
jnp
push
mov
jno
mov
pushf
push
xchg
es
push
je,pt
rcr
push
sub
mov
cmpb
in
or
test
pop
movsl
fsubrl
adc
lods
push
cmpsb
pop
sub
stos
push
leave
loop
jae
testl
dec
or
mov
cli
in
lods
inc
push
into
int
shll
or
mov
xor
add
cmpb
enter
jnp
jbe
pop
mov
pop
cmp
sarl
cltd
pop
pop
and
jns
hlt
jmp
hlt
out
pop
mov
ja
push
jae
pop
bound
testb
jecxz
cmp
sarl
inc
popa
in
leave
popa
sbb
cmpsl
jnp
popa
push
jnp
popa
mov
push
fucom
mov
add
jmp
mov
jo
push
jae
popa
bound
testb
sub
hlt
cwtl
push
mov
gs
jnp
gs
push
imul
sbb
sahf
loope
jmp
jnp
imul
insl
jmp
sbb
add
cmp
xlat
sarl
loope
pop
push
insl
fst
sahf
xor
sbb
insl
loope
mov
jnp
fisubrl
mov
adc
jae
insl
bound
pusha
jb
mulb
add
dec
fdecstp
jno
fdivp
jno
addr16
jnp
jbe
jno
je
jne
fistpll
outsl
xorb
fldl
jne
leave
orl
sbb
and
xor
aas
mov
cld
sti
ja
jae
idivl
iret
pop
ret
mov
jnp
popa
xchg
sub
sarb
sarl
or
in
xchg
jns
mov
fstpl
sbb
jns
mov
stos
mov
imul
fistpll
jge
jae
jns
jbe
pusha
lcall
out
pop
dec
add
jge
pop
dec
in
jge
mov
cmp
push
jge
in
pop
adcl
pop
push
test
addl
pop
repnz
loopne
xchg
hlt
mov
leave
rep
mov
or
sbb
dec
xor
sub
loop
jnp
mov
jbe
test
repz
pop
pop
fmul
push
jnp
adcl
jmp
push
test
mov
nop
fsubr
jp
repz
ret
inc
mov
fldcw
int
mov
fpatan
inc
sbb
xlat
cmpl
xor
orl
mov
jae
imul
jae
dec
mov
mov
pop
mov
dec
scas
fdiv
mov
fists
jmp
mov
pop
call
ljmp
pop
mov
icebp
or
inc
and
add
mov
ficomps
loop
cmp
into
jmp
aaa
sbb
aaa
dec
in
icebp
cmpl
pop
or
frstor
add
mov
mov
jne
mov
idivl
cmpsb
push
and
sti
pop
loopne
rcl
adc
fsts
cmp
lds
in
push
add
mov
push
pcmpgtw
xor
jge
ljmp
lea
pop
imul
and
lcall
jnp
loop
mov
into
sbb
jnp
pop
sub
mov
mov
lea
or
xchg
rorb
add
lahf
insb
mov
shrb
cmp
jno
dec
pop
ret
and
je
pop
scas
negb
lods
nop
mov
imul
lret
mov
mov
mov
add
in
mov
fiadds
rorl
push
jo
and
scas
out
xchg
inc
or
mov
jne
cmpsl
xchg
in
std
or
xchg
pop
fisubl
sbb
xchg
addr16
push
xchg
adc
cmpsb
sub
sub
xchg
movsb
popa
mov
cmp
sahf
push
dec
icebp
pop
sbb
xchg
add
orl
xor
fidivrs
dec
sbb
fisubs
jl
sub
adc
js
fucomi
xor
test
test
out
into
mov
dec
add
cltd
xchg
stos
fstpt
adc
cltd
jo
shr
fisubs
repz
sahf
ss
jnp
cwtl
cltd
addr16
in
cmp
nop
mov
fildll
cltd
aam
das
negb
in
mov
jecxz
mov
jbe
jbe
aam
arpl
sub
in
lods
outsl
xlat
icebp
mov
sti
pop
test
sbb
popf
mov
add
pusha
inc
cwtl
adc
cmp
jne
leave
sbb
scas
xor
cli
pop
cs
mov
cmp
insb
mov
add
mov
xchg
ret
push
sbb
icebp
xchg
mov
mov
push
in
test
arpl
ja
add
jns
pop
les
sbb
hlt
jno
ret
ret
popl
mov
hlt
cmc
add
mov
aaa
jmp
inc
mov
sbb
pop
aas
aaa
ljmp
add
movsl
fldenv
pop
and
ja
addr16
movsl
or
pop
cmpb
movsl
ja
test
mov
dec
cmpsb
mov
insb
movsl
mov
mov
dec
aad
sbb
sbb
jno
mov
xchg
jae
fisttps
mov
dec
out
call
jl
jnp
test
jae
call
int
rorl
adc
mov
or
sbb
notb
adc
ret
shll
leave
loop
mov
xchg
mov
push
pushf
xorb
movsl
fbstp
test
shlb
pmullw
fs
jg
into
mov
out
hlt
lret
or
scas
int
cli
or
dec
push
imulb
jg
xlat
jl
inc
xchg
sahf
arpl
or
cmp
lods
lret
test
es
enter
movl
mov
mov
sbb
inc
xchg
sub
sarl
mov
in
js
push
cmpsl
leave
mov
mov
loop
je
lea
testb
push
loope
std
xchg
lcall
mov
daa
add
call
repnz
and
pop
mov
mov
add
movsl
pop
mov
lret
out
sahf
sbb
xor
mov
negb
mov
imul
lcall
xor
fwait
call
fnstsw
pop
mov
out
dec
sahf
xchg
xor
shl
mov
mov
adc
es
mov
or
iret
stc
inc
or
fwait
sub
mov
popa
jg
cmp
push
aam
movsl
int3
fdivl
jae
mov
out
cmc
lock
pushf
outsl
add
fcmovnbe
mov
repz
sbb
mov
sarl
xchg
dec
pop
psubsw
andb
insb
mov
mov
xchg
jae
lods
lahf
xchg
loop
fcmovbe
sub
in
out
fsubrs
test
lcall
push
push
pop
nop
inc
jmp
mov
mov
dec
sbb
jb
push
mov
xchg
sbbb
mulb
shrl
daa
add
xor
mov
xchg
xchg
addb
or
and
movsl
aad
mov
jns
push
mov
dec
pushf
mov
xor
sub
xorl
xchg
iret
sbb
scas
test
sarb
lret
cmp
cmp
jmp
sbb
cmp
pop
rorb
or
sti
ret
jne
jnp
xlat
mov
mov
adc
xor
cmc
into
fdiv
outsl
push
push
dec
out
movsl
outsb
lods
int3
add
leave
push
xchg
int
div
fucomp
outsb
sub
and
movsl
repz
fcmove
cmp
lea
sub
cmc
add
and
mov
imul
push
shl
push
adc
and
xor
mov
aad
addr16
stos
popa
pop
int
lahf
xchg
int
sub
lahf
sbb
aad
mov
mov
out
shlb
dec
lds
pop
into
or
lods
mov
sbb
cmp
dec
sarb
pop
aam
ret
or
or
sbb
xlat
mov
call
inc
in
pushf
sbb
push
jecxz
inc
sub
sub
mov
filds
hlt
or
loope
pop
gs
push
arpl
movsl
ljmp
test
fnstenv
test
xchg
ret
sbb
xor
loop
das
shrb
sub
mov
arpl
pop
xchg
cmpb
push
out
rorl
aaa
xlat
pop
fidivs
mov
and
ja
pop
jbe
sbb
ja
pop
int
or
aad
insb
fistpl
xlat
jg
ljmp
or
or
andb
sub
lcall
repz
push
xor
out
mov
push
test
push
jp
andl
jbe
sbb
sbb
xlat
mov
mov
mov
inc
movsb
stos
inc
cmp
add
sub
mov
bound
mov
sti
into
dec
test
adcl
dec
imul
sub
mov
sbb
mov
dec
aaa
mov
inc
mov
push
inc
push
mov
fnstcw
fcmovne
fsts
fcomi
sbb
xchg
adc
call
pop
jno
cwtl
add
int3
fdiv
xor
pop
ret
into
add
fnstsw
mov
subl
rcr
fisttpll
sub
in
jb
xor
mov
jl
cmpsl
adc
cmp
loope
or
out
sti
ret
leave
jmp
pop
test
in
ret
iret
out
jmp
add
std
loop
or
jp
out
adc
lret
sbb
loope
aam
lret
push
fmuls
sbb
push
mov
jae
xor
repz
test
pop
inc
in
and
sbb
cmp
loope
xor
pop
xchg
cmp
jne
sub
pop
inc
rcrb
fwait
inc
iret
mov
fdivrp
aad
mov
out
testl
and
mov
mov
daa
stc
mov
jecxz
cmpsl
jl
or
add
std
insb
mov
out
jg
fldl
xor
in
fnstsw
xchg
jmp
test
push
mov
sbb
cmpsb
outsl
repnz
fcomps
xchg
mov
negb
lcall
jecxz
daa
inc
or
mov
jl
mov
xchg
jnp
fistpll
lods
mov
notb
lcall
stos
lret
sti
push
and
pop
xor
adc
pop
adc
adc
lret
in
mov
fisttps
lahf
push
lcall
mov
xchg
adc
sbb
jmp
leave
sbb
and
es
sbb
ja
xor
lahf
jmp
subl
push
cmp
pop
lcall
cmp
pop
shlb
testl
fstl
ss
ja
adc
pop
insl
fildll
stc
es
mov
in
pop
mov
jmp
cmpsb
sub
mov
xor
stc
daa
notb
movsb
aad
addr16
and
rcll
dec
add
mov
ss
mov
and
cli
sbb
repz
ljmp
andb
fistps
pop
inc
dec
rolb
xor
aam
imul
cmpsb
push
repz
rol
cmp
inc
dec
addl
mov
mov
gs
dec
add
into
filds
dec
addr16
shll
sub
cmpsl
mov
xor
adc
inc
fbstp
popa
push
js
std
or
cwtl
or
aas
dec
mov
mov
pushf
aas
fsubr
pop
mov
icebp
adc
or
xchg
mov
mov
sbb
mov
adc
add
imull
push
push
insb
mov
test
ja
arpl
popl
mov
xchg
sub
and
mov
aaa
mov
in
xchg
dec
mov
sub
sub
mov
pop
pop
mov
aad
mov
in
outsl
adc
js
push
xlat
enter
xor
xchg
sbbb
sub
inc
xor
rolb
sahf
cmc
cmp
push
xlat
mov
mov
mov
sbb
cli
leave
insl
pop
in
std
lods
inc
popf
jnp
in
jae
or
sbb
pop
inc
pop
pushf
stos
cmpsl
fisttpll
pop
leave
mov
dec
sbb
enter
xor
daa
imul
imul
adc
stos
clc
iret
sbb
or
mov
jno
ss
xchg
push
test
xchg
addb
lods
push
addr16
rolb
xor
lods
fbstp
add
ret
int
outsb
and
mov
cmc
outsl
push
lret
push
in
ret
lds
sti
push
jmp
aas
popa
dec
lahf
jl
sbb
rcrl
rcl
dec
pop
jl
ljmp
push
xor
push
cmc
pop
mov
push
outsb
addb
pushf
and
jne
dec
push
out
test
jg
mov
adc
mov
mov
aad
notb
add
loop
mov
pop
jno
adc
imul
dec
dec
mov
push
mov
nop
insb
repz
mov
and
neg
mov
mov
cs
lock
push
adc
jno
or
jmp
stc
add
mov
insb
push
xor
sbb
sub
fadds
dec
mov
push
fidivrs
std
adc
in
lods
das
or
mov
push
aam
std
push
leave
adcl
push
xlat
dec
pop
and
sbb
inc
fsubs
test
or
or
push
mov
or
push
fmull
rorb
mov
loope
cmp
jnp
sbb
mov
xor
in
or
pop
pop
cltd
lcall
ret
sbb
rcrb
xchg
out
cltd
std
sbb
sbb
shlb
push
in
inc
mov
jg
imulb
scas
jnp
push
mov
cs
jp
push
aam
in
ds
push
mov
pop
mov
add
loop
mov
or
repz
inc
and
or
movsl
dec
cmpsl
or
lods
mov
mov
push
add
ss
mov
aad
and
icebp
dec
fimuls
and
insl
loope
insl
or
and
mov
cmp
xor
mov
ljmp
fildll
fsubs
andl
loop
fimull
shll
insb
sub
testb
xor
mov
outsb
sub
shlb
pop
lods
push
add
push
in
jb
push
mov
out
dec
cmpsl
arpl
in
repz
pop
fildll
sub
std
and
sbb
dec
inc
pop
push
insb
pop
mov
pop
loopne
or
mov
rcr
sbb
push
add
dec
lea
imul
sub
int
ja
cmp
addl
jnp
cs
dec
loope,pn
fldt
leave
push
sub
mov
xor
and
dec
push
pop
scas
aas
test
and
loop
mov
in
sub
xchg
xchg
aad
fisttpll
leave
pop
sbb
imul
shrl
pop
mov
xor
xor
mov
hlt
fbld
addl
xchg
fbld
xor
and
xor
xor
xchg
sub
xlat
in
loopne
scas
ja
inc
stos
push
push
ss
subl
jnp
ss
jb
loope
add
leave
dec
cld
adcb
shl
jg
sub
pop
test
mov
add
mov
mov
hlt
jge
outsl
jne
jl
and
mov
shrb
jae
xchg
sub
imul
js
cmp
lods
jmp
mov
mov
mov
xchg
add
push
rol
mov
imul
mov
idivb
cmp
ds
xchg
pop
scas
shrl
jnp
in
mov
add
in
inc
mov
mov
outsl
iret
mov
cmpsb
mov
cld
mov
je
cs
pop
mov
add
sub
mov
adc
cmp
adc
xor
insb
mul
lods
out
pop
and
mov
fsub
jl
clc
pop
mov
pop
arpl
rclb
mov
inc
sbb
push
outsb
mov
mov
xor
dec
add
in
sbb
cmpsl
repz
pop
mov
lahf
adc
cmp
js
js
push
iret
out
das
enter
js
cld
and
or
push
add
ret
push
aaa
jae
push
or
testb
iret
shr
jle
dec
xchg
jp
ds
iret
or
mov
out
mov
xlat
xor
pop
adc
cwtl
faddl
pushf
inc
mov
pop
inc
jno
mov
ja
mov
or
enter
popa
mov
push
jg
lret
push
dec
sbb
mov
clc
dec
pushf
jno
mov
test
lea
ja
aad
xchg
xchg
xor
fmuls
mov
rcrl
adc
ret
into
sub
in
in
outsl
aam
shrb
call
mov
xor
imul
decb
pop
dec
or
repnz
sub
pop
mov
pushf
xlat
add
mov
xchg
lock
into
repz
out
cmp
sti
mov
inc
ja
mov
les
in
icebp
mov
insb
fcoml
push
scas
or
test
cmp
rol
pop
mov
iret
cmpb
cmpsl
inc
xor
xchg
pop
pop
jne
cmp
mov
fucomip
icebp
lea
das
aad
imul
push
pop
stos
sbb
jns
jmp
dec
pop
loop
pop
outsb
jle
push
sbb
ret
sbb
mov
ficoms
iret
pop
test
jne
xor
dec
or
pusha
fistl
or
int3
imul
or
cmp
mov
test
push
out
or
jg
pusha
mov
pop
xor
push
test
iret
adc
test
xchg
inc
xlat
xchg
fildl
dec
jns
mov
out
gs
aam
jb
mov
scas
push
rcr
cld
xchg
addr16
pop
jns
pushf
fmulp
push
or
rcrb
sbb
mov
data16
mov
inc
mov
mov
mov
lods
subl
push
fildll
in
pop
xchg
dec
dec
mov
mov
cmpsb
push
outsb
fisubrs
lods
int
sub
pop
mov
xor
jg
fs
stos
xchg
scas
test
shrb
or
aas
or
shll
mov
pop
fists
sbb
pop
js
lret
pop
push
mov
sbb
push
mov
imul
rcrl
pop
ja
mov
pop
daa
jns
push
popa
xchg
scas
pop
sbb
les
les
outsl
sbb
out
mov
mov
xchg
jnp
pop
imul
imul
cmpsb
and
roll
outsb
sbb
sbb
inc
inc
loop
shl
imul
mov
out
shrb
movsb
inc
pusha
aaa
add
jge
aam
inc
pop
gs
pop
sub
data16
mov
fisttpl
cmpsl
mov
icebp
push
or
outsl
les
int3
insl
arpl
mov
dec
mov
or
push
jns
jno
stos
inc
dec
pop
jecxz
addr16
leave
jb
mov
add
test
daa
add
fistpl
ljmp
inc
mov
push
fdiv
xor
dec
push
lcall
xchg
and
mov
jb
dec
negl
je
xor
fwait
in
pop
popf
jg
pusha
add
imulb
mov
into
sbb
insb
pop
jno
out
jge
sub
iret
stc
popf
jecxz
sbb
outsl
mov
in
dec
icebp
sbb
push
jmp
xlat
out
adc
jnp
push
fisubrs
into
mov
pop
xchg
dec
bound
outsb
sub
insb
movsb
mov
sbb
mov
orb
pop
pushf
push
call
cs
or
movsb
lea
sub
outsb
xchg
cmp
insb
sbb
or
popa
mov
fs
movsl
pop
cmp
addr16
outsb
sub
jae
mov
pop
movsb
imul
sbb
jo
in
rep
ss
in
cwtl
jb
add
outsb
ja
pop
cmp
cli
dec
inc
and
jb
in
loop
jg
aad
scas
adc
xor
mov
push
pop
cs
jb
rcrl
jbe
mov
jb
fists
and
rcrb
xor
cmp
lods
inc
or
daa
add
push
dec
jp
jnp
adc
xchg
jmp
push
push
out
setbe
leave
jbe
jle
add
cmp
jae
bound
and
cwtl
xor
push
jnp
loop
aaa
dec
lahf
mov
lods
gs
das
outsb
pop
test
mov
test
add
push
in
scas
cmpsl
add
je
sbb
out
pop
insl
testb
outsb
xchg
in
cli
xchg
in
push
xchg
add
les
cmp
adc
mov
xchg
inc
in
mov
xchg
dec
and
mov
gs
in
adc
data16
mov
xor
mov
xchg
fmul
add
inc
pop
incb
and
ljmp
mov
fdivrl
cli
cld
loopne
ljmp
bound
dec
mov
mov
hlt
jns
daa
add
jmp
mov
loopne
cmp
xchg
mov
ret
into
lods
mov
lods
pusha
test
andb
mov
add
dec
add
mov
dec
mov
scas
insb
icebp
mov
jb
pop
in
sbb
push
mov
daa
fldenv
clc
rcr
pop
cs
icebp
stos
jno
js
cmpsb
xchg
add
cwtl
stos
jp
and
adc
mov
dec
push
xchg
je
cmp
stos
add
mov
or
test
dec
mov
xchg
pop
insl
imulb
faddp
roll
add
in
cmc
fistl
xor
das
xor
stos
mov
test
push
sbb
popf
loope
xchg
stos
push
mov
fstpl
mov
mov
jbe
mov
sahf
divl
test
out
mov
fnstcw
inc
imul
jnp
xor
or
jnp
push
jae
ret
sbb
loop
xchg
inc
in
dec
push
jns
mov
jnp
push
and
lret
add
dec
aad
lret
add
sbb
test
or
in
mov
into
inc
in
inc
lret
jbe
dec
dec
ficoms
xchg
dec
fildl
cmp
sbb
cmp
rclb
sbb
scas
bnd
xor
cmp
mov
dec
int3
add
and
and
add
push
aam
out
idivb
and
xchg
in
jl
dec
rolb
xchg
in
movsl
fimull
fs
cmp
ret
mov
sarl
mov
mov
faddp
jae
mov
pop
push
pop
faddp
sub
jnp
out
daa
mov
stos
sub
mov
pop
xor
fisubrs
pop
push
push
mov
mov
cmp
out
fimuls
into
adc
rolb
mov
adc
adc
and
loop
lods
pushf
stc
mov
pop
cmp
jnp
leave
repz
sbb
adc
pop
cmc
and
mov
mov
sub
pop
sti
cld
sub
push
rolb
dec
jge
jp
cs
mov
outsb
int3
mov
out
mov
cltd
in
fstl
out
cwtl
xchg
push
out
xchg
pop
mov
in
out
cmp
sub
sub
mov
jnp
push
and
jge
cmp
sub
and
cltd
mov
dec
into
fisttpll
testl
inc
into
pop
int3
xchg
dec
jmp
jae
out
outsb
adcb
ret
jg
out
lods
roll
adc
mov
pop
pop
idivb
movsb
ljmp
add
xchg
fstl
inc
pusha
xchg
cmp
sbb
sahf
sbb
jmp
ret
sbb
mov
lods
xchg
or
lods
pop
aad
add
or
enter
sbb
outsb
and
call
test
in
dec
mov
rcl
sub
dec
out
dec
pop
cmp
mov
mov
pop
mov
lds
jbe
jno
mov
mov
das
push
ret
fucom
or
or
shl
push
jmp
js
cmp
mov
mov
div
mov
push
std
pop
addr16
jo
inc
adc
bound
add
jl
mov
jne
loopne
imulb
repnz
jnp
repnz
push
push
mov
xor
mov
fs
pusha
int
ret
data16
adc
sahf
pop
jne
test
testb
cmp
insb
mov
jmp
dec
fstl
push
lock
xor
pop
and
fisubrl
aam
and
fnstsw
rorl
dec
mov
or
mov
adc
mov
cli
xor
cld
jmp
ficomps
idiv
cmp
cli
sbb
out
pop
out
loop
jns
adc
mov
inc
aam
lods
incb
pop
xlat
js
sub
sti
test
test
sub
scas
jnp
add
jge
addl
add
and
andl
jl
push
test
pushl
stos
mov
outsb
pop
add
cmpsb
loop
insb
inc
and
mov
out
jmp
fisttpll
cmp
repnz
mov
sub
mov
or
aas
repnz
jbe
add
leave
pusha
sbb
mov
div
inc
bts
cmpsb
cvttps2pi
push
movsl
adcb
xchg
pop
mov
mov
mov
lahf
pop
mov
lret
femms
push
xor
or
imul
sbb
popf
push
and
insb
insb
push
push
add
push
push
idivb
and
add
adc
adc
pop
sbb
add
mov
lret
xlat
xchg
jno
jg
xor
inc
pop
fsubs
sub
cmp
das
stos
sbb
mov
push
jne
outsl
in
cmp
ret
in
dec
leave
dec
xchg
mov
or
sub
enter
pop
in
xlat
add
sbb
push
out
ja
add
sti
mov
mov
xlat
inc
repz
mov
notb
jnp
fnstsw
sbb
jg
neg
mov
aaa
add
imul
sub
mov
xor
fwait
sbb
mov
ret
or
daa
call
ds
adcl
add
mov
mov
aam
das
jno
adc
popl
or
outsb
rcrl
repz
pop
fldt
mov
mov
fnstcw
pop
and
fwait
pop
mov
shll
outsl
adc
fistpl
lea
mov
sbb
das
dec
dec
adc
mov
mov
cwtl
repnz
mov
xlat
xor
mov
mov
cmc
enter
cmp
leave
mov
add
mov
cmp
ffreep
lret
xor
into
ss
pop
mov
stos
fwait
mov
xchg
lahf
xorl
arpl
call
or
imul
add
jmp
mov
fwait
repnz
adc
xor
aad
mov
or
loop
in
lea
adc
mov
push
test
inc
mov
or
pop
push
sub
cli
mov
sbb
aad
movsl
adc
sub
push
push
mov
call
shll
sbb
push
and
push
cmp
and
mov
inc
xchg
pop
sub
shlb
gs
xchg
js
lea
lds
mov
cmpsb
das
inc
mov
pop
sbb
in
fwait
das
insb
aad
stc
andl
imul
scas
inc
cmpsb
loop
inc
lahf
push
lret
jl
jne
insl
inc
cmp
xor
and
or
mov
dec
jle
das
movsl
fsubrs
cmpsb
out
sbb
fidivl
mov
aam
mov
xor
repnz
in
and
aaa
and
inc
fdivrp
cmp
lcall
lds
stc
mov
xor
int
dec
jno
idivb
ja
aaa
ljmp
sahf
or
lds
mov
and
pop
aaa
or
jg
xor
cmp
xorb
pop
lcall
dec
pusha
or
cmp
inc
mov
hlt
mov
mov
sbb
mov
loope
cmp
scas
mov
mov
orl
mov
jl
mov
pop
inc
aad
fimull
cmpsb
divl
jae
aas
xor
sub
into
incl
push
dec
fdivrl
idivb
cmp
sub
mov
outsl
xchg
push
or
aas
ss
daa
jmp
je
mov
jae
mov
repnz
push
mov
mov
jno
stos
out
fcomp
stos
cmpsb
jnp
inc
sahf
push
inc
inc
add
jl
scas
mov
sub
xchg
stos
pusha
ja
mov
mov
jnp
sub
jo
fildll
push
and
mov
cli
fcoml
dec
test
dec
in
out
repnz
jg
repnz
dec
out
cmp
mov
stc
insl
ret
jnp
out
lods
fistps
inc
xchg
jnp
das
mov
jp
das
cs
movsl
sub
int
jnp
cmp
cmpsb
scas
sub
aas
mov
inc
fnstcw
mov
pusha
out
push
add
xchg
dec
push
push
jnp
or
sub
imul
mov
sahf
xor
popa
push
insb
sbb
ja
jnp
dec
lret
es
adc
push
cmp
pop
cmp
rcl
push
mulps
movsb
jg
push
mov
add
jmp
xlat
jnp
push
call
leave
out
repz
cmpl
cmpl
xlat
in
fstl
in
ret
add
push
in
loope
push
mov
mov
push
js
push
xchg
mov
notb
fsubrl
or
in
xlat
push
adc
cmp
push
aas
or
dec
shl
in
or
push
mov
movsl
or
iret
and
mov
subb
cmp
mov
dec
adc
aam
ficompl
cmpsb
mov
mov
push
push
sti
adc
sub
adc
xchg
pop
hlt
jo
les
in
push
mov
pop
add
cld
pop
inc
pop
test
dec
roll
pop
insb
icebp
lea
pop
pop
popf
jmp
inc
xchg
inc
or
mov
test
inc
xor
dec
sbb
cwtl
cmp
jl
jae
arpl
mov
dec
mov
popw
arpl
subb
out
pop
add
pop
imul
pushf
addr16
test
loope
bound
repz
inc
popa
cmp
pop
fcomps
insb
or
scas
pop
mov
push
jae
fsubl
frstor
push
into
fdivs
mov
add
adc
xchg
mov
xchg
mov
mov
jo
cmpsb
jae
imul
dec
push
subl
xchg
ja
aam
mov
pop
lea
push
xchg
lods
mov
and
add
sbb
outsl
sbb
push
mov
outsl
xchg
mov
jle
aas
mov
pop
cmp
cmpsb
sti
sarb
outsl
icebp
idivb
inc
xorb
das
jbe
jns
dec
pop
xor
outsl
jbe
cmp
fnsave
pushf
sbb
mov
mov
xchg
xor
mov
jbe
dec
lcall
add
jecxz
scas
pushf
add
pop
lret
adc
movsl
mov
outsb
aaa
jae
mov
sbb
xchg
ja
adcl
sub
push
mov
outsb
xor
or
xorb
aam
mov
repnz
or
inc
imul
jnp
mov
inc
loop
fstpt
movsl
add
les
cmp
imul
add
dec
sub
mov
and
sbb
mov
mov
hlt
mov
pop
jno
dec
scas
xchg
ss
xor
jns
jnp
orl
fnstsw
push
jp
loopne
push
jbe
pushf
and
nop
fldt
jg
outsb
repnz
or
loop
in
dec
orl
mov
pop
sti
cmpsl
add
in
mov
and
outsl
leave
lahf
add
jmp
or
out
dec
cmp
push
xchg
sub
jmp
shll
cld
xor
add
push
sbb
push
jnp
cmp
inc
out
cmpl
adc
cmp
mov
mov
xchg
stc
or
xor
jne
add
fsub
add
mov
pop
sub
xchg
add
or
aaa
imul
out
into
dec
xlat
xchg
xchg
mov
into
mov
cwtl
pushf
fildl
jne
xchg
sbb
cmc
pop
imul
movsl
add
fucomip
and
jbe
les
movsb
add
push
bound
sbb
das
fwait
decl
loop
bound
dec
cli
popa
loopne
es
shll
cmpsl
in
lods
sti
sbb
mov
jno
jbe
ja
jl
cmp
mov
inc
mov
shl
push
mov
shr
jecxz
push
push
jmp
dec
push
test
daa
sbb
jge
mov
xchg
jns
pop
xchg
flds
ja
ret
jle
inc
out
inc
ds
and
xchg
lret
iret
cmpsb
sbb
mov
sub
aas
add
jmp
push
pushf
xchg
lds
sub
out
mov
fsub
add
xchg
mov
loope
xchg
ffreep
lods
pusha
and
xchg
in
pop
xlat
mov
or
mov
cltd
add
mov
idiv
mov
sbb
fwait
hlt
scas
imul
cmp
add
inc
das
add
and
and
push
sahf
or
insb
pop
cmp
popa
fs
jbe
pop
fwait
sbb
mov
jne
sub
dec
lahf
lret
inc
int
pop
inc
test
mulb
movsl
fcomip
lahf
cmp
outsl
xchg
cmc
ja
lahf
xchg
adc
jbe
jg
jmp
pop
in
bnd
xchg
add
aaa
lahf
inc
mov
mov
scas
push
jno
in
mov
push
or
out
out
jl
adc
push
ror
daa
lahf
and
jmp
adc
and
test
aaa
mov
mov
fdivr
mov
sbb
sub
jbe
sub
fsubrl
insb
pushf
mov
mov
cmpb
out
pushf
fisttps
and
push
imul
je
fstpt
xchg
mov
movsb
pop
in
repz
xchg
pop
or
fcompl
cmp
fmull
cmp
inc
push
negb
lea
lcall
mov
jg
mov
mov
jae
scas
hlt
xchg
scas
pop
xor
xchg
aam
test
add
adc
push
sahf
mov
int
lahf
test
adc
adc
xchg
scas
outsl
mov
dec
push
and
cmp
push
in
push
xor
int3
xor
das
jl
add
mov
push
dec
push
push
mov
adc
inc
inc
call
movsb
sbb
addr16
adc
pop
push
mull
scas
and
imul
cmp
scas
and
sbb
jne
inc
fwait
inc
popa
pop
loopne
mov
scas
adc
add
mov
dec
aas
out
arpl
pop
xor
push
out
mov
sbb
jbe
mov
mov
scas
int
mov
sub
adc
mov
lahf
jbe
mov
in
sub
popa
jmp
mov
imul
mov
mov
mov
in
jle
xchg
mov
xchg
xor
not
out
and
pop
mov
dec
enter
sarl
or
jo
add
js
mov
test
cmp
inc
rcl
jnp
imul
subl
scas
dec
fadds
insb
andl
mov
push
ret
jne
daa
repnz
dec
sbb
ret
cwtl
pop
add
ds
jmp
scas
ret
and
nop
push
add
loope
test
jne
pusha
ret
mov
subl
dec
mov
loope
jg
lahf
stos
hlt
jb
cmpb
cmp
dec
cmp
cmp
push
mov
jnp
cmp
mov
pop
imul
mov
or
push
dec
jae
sahf
insl
lret
int
sub
push
aad
mov
cmpsb
push
push
add
push
cmp
mov
test
dec
flds
lret
sti
mov
or
sub
das
and
iret
dec
mov
iret
dec
addr16
negb
sub
iret
ss
mov
in
pop
testb
bnd
or
iret
mov
loopne
insb
cmp
pop
movsb
mov
xor
and
out
inc
push
jae
shrl
fimull
unpckhps
loopne
jg
add
pop
dec
ret
push
repz
imul
mov
in
mov
mov
sbb
cmpsb
sub
mov
sahf
mov
jmp
push
mov
in
jle
mov
xor
mov
inc
mov
xlat
pop
hlt
jno
ss
aaa
in
adc
xor
dec
outsb
mov
aaa
fadd
cmp
cld
jecxz
dec
inc
ljmp
sahf
inc
fucomi
jbe
fldt
push
inc
ds
int
lods
or
js
fistl
pop
add
fnstenv
test
fisttpl
pop
fadd
inc
mov
jge
in
inc
ffreep
push
sbb
repnz
or
fcomi
out
push
push
repnz
push
push
push
xor
std
stc
xor
ds
jg
fisubrl
adc
cmc
sti
test
jae,pt
in
lods
jo
stos
ljmp
popa
scas
arpl
xlat
mov
adcl
pop
arpl
fwait
mov
imul
jmp
leave
adc
cmpsb
or
ffreep
lods
rorl
aaa
or
jecxz
sbbb
std
sti
in
cmp
lret
in
insb
dec
push
jecxz
ja
mov
imul
leave
sub
imulb
aam
shll
cmc
jecxz
aad
negl
pop
imul
gs
dec
pop
add
and
shll
and
dec
mov
iret
cltd
and
jge
fldcw
out
and
pop
xlat
in
and
outsb
dec
bound
ss
dec
lock
inc
je
sub
lcall
cmp
pop
arpl
or
nopl
inc
cmc
das
outsb
jns
jnp
mov
push
or
outsb
and
dec
aam
iret
xchg
pop
add
repnz
mov
pop
xchg
test
xchg
jbe
adc
popf
pop
pop
pop
push
cli
xchg
mov
loop
lahf
lds
lcall
test
mov
adc
pop
cmp
sbb
hlt
das
and
ljmp
jno
inc
sub
xchg
pop
cmp
inc
sbb
add
cmp
lods
inc
fisubl
or
jge
mov
test
es
or
das
sarb
out
shlb
and
js
jle
pop
out
sub
fdivrl
xchg
repz
jno
stos
shlb
stos
fisttps
repz
fcomps
hlt
jle
cmp
shl
js
loope
neg
xchg
fistpl
pop
repnz
ljmp
jnp
xor
dec
mov
loope
xorb
mov
mov
push
rcrl
fbld
sbb
push
jae
ljmp
sub
ficomps
lret
sub
ja
mov
jp
mov
fidivrl
mov
shll
add
daa
idivl
jae
mov
xor
test
bound
adc
sahf
cmpb
fistps
cmpsb
sahf
xchg
cmp
jae
flds
sub
js
cs
ror
add
inc
xchg
adc
mov
jno
pop
add
push
push
data16
xor
xchg
jno
xchg
mov
or
fdivl
insb
dec
push
dec
lock
push
imul
jae
add
ret
notb
fisttpll
mov
xor
lcall
add
fisubrl
inc
outsl
push
ja
in
jp
rorl
jo
pushf
cmc
arpl
sti
add
imul
xchg
mov
lock
cmp
jge
popf
aaa
int
std
iret
in
in
lea
mov
fst
int3
sti
push
add
aas
neg
or
loop
in
pop
add
nop
out
loope
movsl
cmp
jmp
psrlw
into
jae
hlt
loopne
mov
mov
fadds
jmp
xor
push
mov
jb
pop
div
inc
out
aaa
loope
call
or
lahf
into
adc
outsb
pop
mov
mov
sub
popl
fnstsw
addr16
lret
cmp
in
in
xchg
pusha
fwait
cltd
mov
push
mov
out
sub
cmp
pop
sbb
mov
test
sbb
out
in
mov
je
movsb
inc
lcall
out
mov
mov
inc
icebp
sbb
pop
jg
cmp
jne
movsb
popa
repnz
cli
mov
push
fs
ret
pop
sti
fildl
or
scas
jmp
xor
iret
or
cmpsb
ds
sbb
push
cmp
inc
jno
cs
pop
push
movsl
iret
jae
test
xlat
loop
loopne
xchg
outsb
scas
mov
pop
pop
insl
jnp
xor
inc
out
push
inc
aad
lahf
fst
adc
fisttps
pop
cwtl
ljmp
push
mov
arpl
jnp
aad
xchg
adc
mov
not
mov
fbstp
cs
mov
push
out
jle
inc
arpl
fucom
lret
inc
addr16
lock
fsubp
sti
pop
mov
sbb
js
mov
stos
mov
sbb
lods
fbld
pushf
add
pop
mov
inc
adc
mov
mov
leave
push
addl
out
ret
loop
icebp
in
mov
popf
clc
sbb
bound
out
fsubrs
adc
les
xchg
orb
add
test
mov
and
mul
cs
orb
fwait
in
hlt
push
pop
lock
fmulp
jecxz
sub
xor
divl
mov
jo
cli
xchg
pop
lock
ret
into
mov
mov
pop
xchg
dec
mov
jg
negl
in
xlat
iret
in
xchg
jnp
mov
loopne
mov
pushf
inc
lock
jns
movsb
cmc
arpl
sti
sbb
cs
rol
repnz
lahf
fsts
pop
leave
cli
dec
jns
test
and
scas
add
xchg
out
jne
xor
cmp
aam
rcrl
mov
cld
sti
fiaddl
stc
ljmp
lock
jp
aam
divl
cmp
scas
lods
mov
mov
mov
fstpt
push
cwtl
loop
iret
jp
lcall
push
or
cwtl
pop
lock
inc
fwait
mov
jge
sub
add
lret
push
lods
push
ret
repz
mov
icebp
std
leave
into
mov
outsl
pop
cmp
lcall
stc
adc
cmp
out
add
xchg
pop
mov
sahf
and
cmpsl
sarb
std
adc
mov
mov
jp
pop
fucomp
rclb
sarl
fdivrp
fildll
aas
pop
and
push
inc
adc
aas
mov
ret
hlt
adc
mov
mov
mov
add
pop
or
sbb
jae
adc
les
dec
test
faddl
iret
aaa
xchg
lock
in
or
dec
add
and
daa
mov
inc
loop
and
add
rep
cmp
sbb
mov
sti
lock
mov
hlt
addl
push
cmp
adc
mov
shll
add
das
pushf
lcall
add
orb
adc
jge
adc
mov
out
movsb
repz
cmp
add
in
xchg
jge
cmp
mov
iret
idivb
ficomps
pop
adc
repz
jg
maskmovq
notl
fdivrl
repz
movsl
mov
xor
mov
or
pop
push
jne
or
pop
xchg
mov
pop
loopne
sbb
dec
iret
fnstenv
dec
ljmp
and
jg
negb
out
out
shlb
dec
mov
fistps
push
sub
push
push
cld
in
out
frndint
es
push
cmp
mov
lods
aas
add
or
or
sarl
ljmp
xchg
outsl
jp
rorb
ret
dec
lds
lret
xorb
scas
xchg
adc
push
dec
cmp
sbb
lods
push
jb
mov
pop
push
movsl
outsb
mov
pop
arpl
push
xchg
lcall
push
rcrb
lahf
sub
jnp
inc
daa
fstl
and
repz
fcmovnbe
cmp
in
adcl
mov
scas
or
lret
jns
mov
lahf
sub
jge
mov
stc
push
aad
es
push
sti
loop
pop
nop
and
movsl
outsb
xchg
push
hlt
fldcw
fildll
jnp
jmp
cmpsb
leave
lods
sar
pop
pushf
push
inc
jb
das
loopne
fistpll
out
sbb
ret
loope
xor
mov
arpl
mov
mov
aas
scas
fiaddl
fcom
filds
stc
std
sbb
iret
loope
push
and
jge
jg
fistpll
xlat
adc
xchg
adc
mov
xchg
push
ds
mov
scas
test
lods
movsl
cli
mov
jne
mov
mov
leave
jae
fcmove
scas
rcr
mov
iret
mov
idiv
outsb
jecxz
jo
dec
out
insl
and
mov
testb
xor
mov
cmpsl
in
in
jg
jno
scas
aas
dec
mov
and
test
push
sbb
out
pop
dec
cli
adc
out
fchs
negb
push
push
mov
pop
mov
push
inc
notl
scas
fucomip
inc
jne
pop
dec
mov
sub
arpl
and
pop
cmpb
mov
out
xor
push
xor
mov
xchg
pop
inc
sub
test
out
jo
mov
lret
and
fcmovbe
adc
orb
pop
xchg
mov
xor
sub
mov
jle
aad
xor
fisttpl
add
dec
push
imul
cmp
loop
adcb
ficomps
mov
cwtl
sub
sahf
inc
or
in
out
popf
clc
cmp
cmp
out
inc
mov
mov
aas
je
ja
push
out
outsl
and
mov
push
insb
pop
outsb
stc
aaa
mov
in
mov
lahf
aaa
and
sub
mov
xor
xor
pop
mov
jae
es
popf
mov
movl
mov
inc
cs
in
movsb
jb
outsb
mov
mov
pop
push
adc
daa
mov
xchg
out
cld
mov
hlt
cmc
jmp
out
jns
jle
jmp
xchg
vmovq
int
and
repnz
pop
mov
insl
mov
sti
loop
mov
mov
fsts
sbb
scas
mov
push
xor
cwtl
and
stos
scas
mov
loop
sbb
mov
mov
dec
pop
outsl
aas
xor
jle
push
mov
stos
cmpsb
mul
fistpll
sub
add
lret
imul
sti
xor
xchg
outsb
daa
in
adc
mov
cmc
leave
dec
xchg
cmp
pop
jnp
jg
fstpt
out
imul
hlt
sub
mov
mov
in
sbb
pmullw
imul
push
sti
iret
or
fdivr
push
xchg
mov
push
aas
sar
push
inc
cmpl
sbb
sub
rcrl
in
int3
pop
cmp
add
jle
dec
cli
jmp
jmp
imul
push
cmc
dec
data16
mov
in
adc
mov
pop
mov
mov
scas
pop
lcall
push
push
mov
mov
ljmp
jae
cmpsb
pop
xor
in
pop
out
jmp
jecxz,pn
mov
mov
mov
fcmovne
bound
imul
pop
fdivs
jmp
sbb
mov
fimuls
fisubl
push
cmp
xchg
ljmp
scas
mov
lahf
js
xor
mov
xchg
cmp
aaa
push
jecxz
iret
xor
aam
jg
push
jg
push
mov
movsl
loope
lock
in
imul
cmp
and
test
pop
cmpsb
in
jmp
mov
js
outsl
test
mov
lea
sub
mov
push
jecxz
adc
shl
push
dec
ror
enter
pop
mov
rclb
mov
cmp
inc
mov
inc
cmc
xrelease
xchg
add
jge
lock
pop
ficompl
fsin
mull
mov
int
mov
xchg
lods
xlat
jg
dec
orl
std
sbb
push
pop
in
stos
int3
movsl
enter
in
std
int
clc
sbb
sbb
leave
mov
jge
loopne
fmulp
in
cmp
dec
loopne
xchg
add
jno
push
sarb
jnp
mov
add
adc
xor
sti
movsl
popf
mov
cmpsl
push
ret
xlat
aam
xchg
int
mov
inc
shrl
sbb
pop
mov
fisubl
out
icebp
jl
outsl
push
pushf
jl
test
js
mov
shll
add
pop
cmp
mov
out
fldenv
aas
push
ljmp
mov
in
std
xchg
sub
stc
mov
pushf
test
xchg
es
leave
lret
lea
rorl
bound
sbb
mov
mov
xchg
sbb
cmpb
sti
hlt
mov
cmpsb
aad
arpl
inc
and
rol
mov
xchg
repz
outsl
push
enter
push
xor
aaa
rcll
and
repnz
sti
mov
jp
lods
pop
or
sbb
bound
dec
or
in
shll
or
in
pop
mov
aaa
ffreep
pop
cmc
xor
test
push
pop
loopne
and
out
hlt
loope
loope
adc
add
jl
es
mov
cli
mov
pop
cli
int3
push
imul
aas
jne
gs
mov
repz
hlt
xchg
out
pop
push
ds
in
ljmp
xchg
frstor
loopne
fmulp
pop
jns
lock
xor
push
iret
imul
cli
rorb
jmp
xlat
push
lret
pop
rorb
push
jbe
hlt
mov
or
outsb
mov
sahf
repz
push
mov
out
out
arpl
pop
in
das
stc
out
movsb
outsl
pop
xchg
neg
neg
outsl
rep
ret
mov
add
ss
push
out
dec
pop
repz
cmc
mov
adc
adc
subl
js
fwait
inc
jecxz
aad
push
push
repz
lret
xor
nop
mov
sub
out
fwait
mov
cwtl
sub
fisttpl
pushf
or
mov
cbtw
xor
fistpl
leave
add
aas
repnz
cs
imul
dec
add
adc
clc
sub
stc
push
fbstp
movsb
sbb
xor
repz
lret
scas
adc
std
ljmp
xor
ficomps
fmul
in
leave
ljmp
dec
mov
xor
adc
and
out
adc
fs
mov
adc
jp
inc
jg
mov
mov
lret
mov
iret
mov
mov
in
out
cmp
popf
imulb
icebp
fsubs
neg
push
mov
aad
pop
ret
iret
fdiv
lcall
or
mov
cmp
jl
or
in
pop
rol
insb
leave
out
and
fnstcw
cld
aam
scas
cmp
mov
repz
pop
sub
in
sbb
sub
lods
push
insl
outsb
or
fwait
cmpsb
icebp
lock
sahf
xchg
xor
push
xor
jg
outsl
mov
lahf
sti
jmp
mov
cmpsl
push
cmp
cmpsl
cmp
mov
xlat
leave
imul
jno
cmp
xlat
icebp
enter
fsubl
mov
pop
fwait
ret
vpsrlw
adc
fnstcw
push
jbe
out
mov
imul
mov
cmpsb
mov
arpl
mov
push
sbb
cs
adc
cmp
xor
aad
in
push
push
push
ljmp
repnz
scas
sti
add
pop
icebp
or
std
mov
ds
movsl
sarl
pop
mov
in
sbb
xchg
or
xchg
jnp
xchg
in
roll
pop
leave
movsb
clc
rorl
insl
hlt
mov
xchg
leave
push
fbld
loopne
mov
out
adc
int3
outsb
orb
fbstp
sbb
hlt
inc
cs
cmp
lahf
in
ret
jmp
test
xchg
xor
pop
fidivl
mov
jae
repz
mov
mov
mov
sub
scas
xchg
pop
aam
mov
jmp
mov
iret
sub
jmp
pop
and
fsubrs
jmp
outsb
in
inc
dec
adc
mov
pop
icebp
mov
mov
mov
add
dec
inc
fs
mov
add
rclb
ja
jbe
pop
ret
xchg
mov
jecxz
mov
xor
mov
mov
sub
and
lahf
mov
outsl
fisttpll
inc
pop
lret
jp,pn
negl
jae
iret
fists
out
fldcw
repnz
lahf
imull
mov
sub
fistpll
fmul
mov
loop
ret
push
repnz
or
outsl
rcr
inc
sbb
push
push
loopne
lahf
xchg
stc
push
jge
sub
cmp
ret
imull
jmp
inc
aas
jne
inc
mov
cmp
push
mov
mov
dec
decb
pop
mov
rclb
or
ret
leave
pop
lahf
pop
cmpsl
movsl
imulb
adc
insl
and
add
cmpsl
repnz
or
jl
fnsetpm(287
mov
lret
cmp
jle
int
xor
lret
popa
xchg
aam
and
leave
out
jecxz
mov
in
ljmp
sub
outsl
int
and
xlat
push
push
fcompl
add
or
mov
pop
jnp
insb
jecxz
out
sbb
jg
and
test
mov
ret
add
dec
cs
jg
mov
pop
mov
jbe
out
leave
add
pop
dec
fucomp
loop
dec
out
mov
sbb
mov
pop
adc
fcomps
std
lahf
jnp
movsb
imul
dec
mov
clc
add
fistpl
sbbb
scas
pop
dec
scas
or
and
outsb
stc
pop
inc
fmull
notb
aas
out
loopne
aas
setbe
push
ficompl
add
fwait
dec
sahf
sbb
dec
lea
xor
jmp
insl
mov
pushl
fcoms
jmp
es
hlt
mov
call
cmpsl
cmp
push
sbbb
fcmovb
js
loop
fadd
xchg
lcall
scas
pop
dec
shl
jmp
hlt
in
push
test
jnp
nop
cmpsl
mov
imul
outsl
mov
jmp
out
push
int3
dec
sbb
and
in
mov
shrl
pushf
icebp
sti
loope
mov
sbbl
lss
push
inc
movsb
adc
out
fdivs
out
fdivrs
mov
mov
jg
mov
test
int
pop
push
pop
mov
daa
sbb
repz
xchg
stc
in
faddp
lock
pop
insl
ds
inc
ret
jg
xor
xor
stc
dec
lods
sub
scas
iret
scas
mov
aad
fildl
mov
hlt
lods
fisttps
in
das
inc
cmp
pop
dec
aad
jne
jecxz
rcll
push
adc
pop
adc
mov
fldenv
pop
jl
jg
adc
pop
rcr
mov
and
scas
arpl
mov
inc
test
test
les
sub
mov
dec
dec
adc
cmp
clc
aas
ja
outsl
cli
gs
outsl
jbe
std
cmpsb
insb
jne
insl
or
fwait
push
into
data16
mov
xor
sbb
and
out
pop
xchg
leave
mov
or
stos
in
lret
mov
outsl
push
dec
mov
push
jmp
pop
xor
mov
mov
fstpl
jecxz
sub
stc
add
jae
add
push
jns
mov
fiadds
lcall
iret
fisttpll
mov
ss
jl
fstpt
iret
sbb
mov
imul
rol
xor
jno
mov
subl
pop
mov
sub
xlat
jecxz
lcall
xchg
mov
iret
cmpsb
adc
dec
cmc
cwtl
sub
pop
add
dec
fiadds
call
pop
jecxz
clc
inc
mov
sarb
mov
ss
cwtl
adc
xor
add
pop
iret
adc
push
dec
mov
jecxz
xlat
push
xchg
test
in
add
push
pop
mov
lcall
mov
jo
inc
inc
pop
push
enter
clc
mov
add
fildll
subb
fiadds
and
cmp
mov
leave
sub
cmpsb
mov
jbe
lret
mov
xor
inc
outsb
mov
test
mov
push
or
dec
scas
xor
or
cs
in
cmp
shl
sti
sbb
dec
mov
or
loopne
push
in
pop
or
out
repz
clc
sbb
inc
aas
pop
jmp
jmp
mov
out
xchg
popa
xchg
ss
bound
icebp
adc
ss
in
scas
fbld
ret
adc
repnz
sub
fsqrt
and
and
das
loope
decb
aas
cmpsl
adc
fisttpll
dec
sbb
stc
cs
or
lahf
jg
int
out
cmpl
aas
jmp
ss
xchg
rol
inc
or
bnd
pop
jcxz
push
shll
pop
push
sbb
outsb
cld
addb
and
cmp
jnp
pusha
lea
jge
idivl
push
mov
daa
push
insb
shrb
scas
and
mov
or
adc
les
ds
iret
cmpsb
outsl
fsts
and
insb
loop
test
mov
scas
mov
in
hlt
out
pop
leave
std
int
mov
clc
out
lret
call
xchg
lahf
mov
push
arpl
jb
adc
in
scas
adcb
pop
sti
or
scas
dec
ret
test
mov
dec
outsl
sar
cwtl
mov
push
cmp
imul
mov
push
insb
stos
int
dec
jg
arpl
xlat
cmp
xchg
in
mov
movsl
sahf
xlat
cli
pop
push
push
pop
adcb
popf
daa
cmpsb
aaa
gs
sbb
ja
popa
negl
add
fbld
aad
push
fidivrl
xchg
addl
adc
lret
jo
loopne
test
loopne
pop
mov
out
shlb
idiv
sub
dec
mov
ret
sbb
sbbl
subl
int
ljmp
push
push
mov
mov
aas
cmpsb
mov
or
aaa
sbb
mov
inc
sbb
jge
adc
mov
push
push
or
mov
data16
scas
lods
pop
dec
pop
push
fidivrl
outsl
add
xchg
fdivs
aas
lret
stc
jne
xchg
mov
popa
loopne
fsubrs
lahf
enter
movb
pop
lret
add
push
sti
jg
gs
out
popa
daa
enter
insl
outsl
je
in
lock
aam
dec
in
push
movups
jno
shr
stos
pop
xlat
adc
push
das
shl
hlt
pop
push
inc
pusha
jl
scas
sahf
ss
mov
sub
xchg
pop
out
adc
adc
lock
in
repz
ja
sub
lahf
int
mov
repz
mov
inc
sti
movsb
mov
add
hlt
lahf
stos
pop
fisubl
mov
pop
lods
andb
mov
ficomps
sti
push
or
cmp
out
pop
mov
mov
add
in
fsubs
xchg
lret
push
stos
xor
mov
dec
dec
fadds
cld
push
ret
in
jo
adcb
loope
or
or
insl
in
lcall
adc
lock
mov
loopne
jns
repz
mov
mov
push
sub
dec
imul
cmc
mov
xchg
imul
mov
cli
jmp
xchg
lods
or
dec
scas
xchg
cmpsb
cmp
jae
mov
cmpsb
jnp
cs
ja
mov
sti
bound
outsl
dec
stc
in
fistpll
mov
mov
jg
cmp
jp
pop
sub
ljmp
push
ret
je
pop
dec
pop
leave
cmpsl
sbb
cli
or
mov
lret
cs
into
and
mov
scas
out
inc
dec
mov
les
mov
xchg
jnp
mov
mov
fwait
push
jg
cwtl
shlb
add
leave
lods
pop
cmp
sub
cmpsl
dec
mov
cltd
mov
mov
dec
mov
dec
and
and
repz
imul
mov
fcmovbe
cmp
xlat
push
outsb
lds
mov
int3
js
jecxz
push
addr16
addr16
inc
cmp
xor
xchg
pop
sbb
and
mov
notb
enter
dec
add
data16
sti
ret
lods
dec
shll
mov
add
dec
push
inc
mov
shlb
movsl
dec
in
repnz
mov
iret
inc
cmpsl
std
cmp
push
inc
sub
jecxz
pop
in
pop
fsubrl
jecxz
inc
outsb
sub
aas
mov
aam
sahf
fwait
or
or
sahf
jle
cli
popf
jmp
fldcw
dec
adc
mov
sahf
mov
inc
xchg
mov
push
pop
fstl
idivl
aad
stos
addr16
stc
ljmp
fsubp
in
and
adc
imul
iret
es
fstp
sti
add
mov
icebp
pop
cmpsb
lret
stc
subps
repnz
xorb
fildl
popf
ds
add
push
mull
shl
mov
fnstcw
aad
inc
fucomip
ljmp
jle
shl
adcb
inc
int
out
daa
stos
inc
pop
and
mov
cmc
scas
pop
lods
pop
dec
pop
in
in
pop
test
mov
dec
stos
xor
scas
out
popa
fisttps
fucomp
dec
hlt
lods
mov
or
lds
cmc
clc
mov
add
mov
int
sub
faddp
mov
lds
out
out
pop
inc
out
into
das
int
mov
jae
mov
mov
mov
ret
das
shr
and
iret
out
push
jno
and
test
xor
mov
mov
pop
pop
mov
fdivp
push
xchg
push
adc
mov
popl
stos
jmp
xlat
movsb
sbb
movsl
push
and
mov
addb
xchg
cmp
jl
int3
xchg
inc
fldt
mov
pop
mov
hlt
out
or
ret
fcmovnu
sub
push
int
jg
das
fsubp
adc
in
pop
mov
movsl
xor
out
add
push
dec
cs
jbe
in
leave
mov
lods
mov
xrelease
ret
push
adc
dec
mov
mov
sti
rcrl
outsl
pop
jnp
divl
fdivr
adc
insl
aas
mov
push
cld
pop
push
or
mov
test
and
ja
pushf
les
cmpsl
sbb
mov
mov
jecxz
in
xlat
clc
aad
add
mov
mov
dec
adc
shlb
test
cmp
fistps
dec
xchg
jno
int
push
jbe
xchg
test
mov
jge
insl
jg
insl
shll
lret
pop
or
pop
pop
push
fcompl
cld
mov
mov
push
pop
jge
loopne
into
mov
and
sbb
out
in
sti
push
add
outsl
lea
cwtl
or
leave
mov
cmpsl
adc
sbb
cmpsb
enter
fidivs
cli
xor
jns
out
and
fwait
pop
aaa
mov
cs
mov
icebp
push
sarb
push
xchg
or
outsl
stos
xorb
mov
mov
aam
push
jmp
mov
ljmp
cmp
fidivl
stos
cmp
pop
mov
sub
mov
adc
lods
jmp
jp
add
lods
lods
mov
fisubrs
aam
add
cs
cmp
mov
push
testb
dec
sbb
and
jbe
jbe
mull
cmpsl
sub
mov
daa
or
mov
repz
loop
pop
adc
or
mov
dec
mov
loopne
enter
lahf
mov
and
es
jno
adc
jae
scas
fimuls
fwait
mov
mov
outsl
or
mov
stc
out
test
or
pushf
jnp
jae
xor
lahf
loopne
int
add
mov
test
push
fxch
hlt
cltd
mov
fisubrl
mov
repnz
mov
aad
cmpsb
mov
cmp
mov
test
in
dec
ja
pop
fwait
out
idivl
and
inc
mov
sub
outsl
cli
out
xchg
xor
ds
sbb
mov
es
scas
scas
loopne
fistps
in
iret
scas
orl
fdivl
mov
aas
stc
das
negl
repz
fwait
inc
push
push
out
neg
out
push
mov
sahf
daa
pop
adc
push
jle
xor
mov
rolb
repnz
mov
sbb
mov
fucomip
mov
xchg
sub
and
pop
pop
mov
lock
fisubl
rcrb
leave
insb
sarb
pop
repz
sub
mov
rorb
cmp
ret
loope
mov
xchg
lock
shlb
out
andl
push
pop
ret
sub
mov
pop
test
leave
mov
mov
outsb
int
jge
ret
mov
xor
pop
insl
cmpsl
das
ja
fwait
pop
fbstp
fbld
jecxz
adc
jbe
mov
xlat
ret
mov
jnp
xchg
js
into
aad
cmpsl
mov
scas
ja
fwait
sahf
fbld
fidivrl
stos
out
mov
rcrb
xor
mov
ds
cld
xchg
pop
cmp
gs
arpl
movsl
inc
jnp
sti
enter
lea
mov
adc
outsl
jnp
ja
sub
lahf
lds
sti
stos
jbe
mov
call
adc
iret
paddsw
insl
fwait
cmp
fdivr
lds
mov
cmp
out
loope
out
leave
xlat
xor
fidivrs
mov
dec
adc
cmp
mov
dec
mov
mov
cli
out
adc
outsl
mov
dec
fcmovbe
arpl
xor
or
not
ljmp
outsb
adc
adc
es
mov
push
jmp
fstps
jle
jmp
shrb
sbb
in
or
push
dec
aas
out
arpl
out
lods
icebp
in
inc
jbe
leave
pop
cmp
sahf
xchg
ds
rol
loop
xchg
in
add
sub
aaa
fsubs
jl
add
in
dec
lods
pop
sbb
adc
mov
xlat
stos
cmpsb
pop
scas
test
pop
mov
fldcw
les
leave
outsl
push
fildll
movsl
cmp
gs
fnsave
insl
mov
cmpl
imul
ror
jmp
mov
inc
cmpsl
push
inc
cmpsl
in
dec
shrb
mov
das
jb
pop
in
sarb
mov
pop
sbb
stc
enter
inc
lds
sub
dec
fidivs
dec
sub
xchg
out
mov
jmp
repz
xorl
out
pop
and
aas
adcl
jg
in
cli
mov
sbb
fstp
sbb
lret
enter
xlat
sti
push
out
mov
shr
jg
push
pop
out
in
mov
mov
shrb
imul
test
pop
pop
sbb
inc
aaa
add
insl
test
mov
inc
mov
mov
and
out
stc
fmuls
sbbb
sub
mov
push
or
shl
xor
sbb
out
ja
cmpsl
pop
mov
adc
outsb
decb
sub
addl
outsl
mov
aam
ret
add
mov
cmp
js
shll
xor
xor
inc
add
push
pop
xor
test
into
das
aad
leave
mov
das
cltd
out
ret
pop
stos
fsubrl
push
loopne
sub
push
cmp
add
cmc
xor
stc
cmp
scas
setge
and
icebp
inc
aam
push
jmp
idiv
js
out
adc
rcrl
enter
in
out
mov
inc
lret
fildll
fisttpl
dec
ret
mov
lret
outsb
mov
out
out
fdivl
popa
adc
outsb
and
mov
mov
sahf
in
jge
xchg
xor
cmpl
nop
leave
pop
add
cs
sbb
rcrb
lods
mov
pusha
ret
push
sahf
xor
mov
testl
out
jge
mov
iret
sbb
stos
pop
repnz
jb
xlat
push
rcll
testb
sbb
xchg
jb
jne
cmp
adc
into
mov
cmpsl
fwait
loope
out
clc
mov
mov
inc
push
movsl
cwtl
pop
jg
lock
loop
repnz
pop
push
test
jg
pop
ja
lock
adcl
xchg
mov
push
push
inc
mov
dec
push
mov
int3
push
lods
in
lret
jle
xchg
xor
gs
sub
cltd
iret
leave
leave
pop
leave
push
mov
xor
pop
xchg
xchg
movsl
std
bnd
xor
outsl
popl
out
adc
mov
add
cltd
popa
dec
push
es
fnstenv
mov
ret
loope
dec
xor
xchg
dec
loopne
scas
shlb
leave
push
cld
dec
fistpll
xor
mov
mov
dec
aam
pop
flds
mov
mov
pop
push
movsb
out
bound
pop
xor
mov
push
pop
sbb
fxtract
scas
in
cmp
cmp
rcr
adc
out
test
fwait
sbb
and
addb
repz
scas
in
sbb
js
pop
pop
mov
rcrb
cmp
fs
ficomps
loope
mov
mov
fisubrs
xchg
fcompp
ja
mov
xchg
cmc
pop
sbb
sbb
sub
xor
adc
xor
call
xchg
leave
fisubrs
cmp
in
stos
js
pop
xor
cwtl
ja
scas
bound
outsb
sbb
enter
inc
xchg
ss
mov
fdivs
mov
cmp
cmp
sahf
dec
enter
mov
in
repz
dec
into
imull
loop
mov
and
test
pop
ds
mov
data16
in
lahf
xor
xchg
test
inc
mov
test
or
and
mov
adc
mov
mov
inc
mov
push
jge
and
mov
shlb
lods
sbb
sub
or
push
ret
and
xchg
cmp
in
cs
data16
mov
clc
mov
ljmp
ret
pop
outsl
cmp
cltd
mov
scas
push
in
sbb
sti
pop
mulb
sub
push
in
inc
jnp
push
iret
fcmove
mov
addr16
mov
sbb
mov
and
cmp
sarl
lds
mov
inc
fnstsw
xor
jns
jbe
in
scas
fstps
add
sahf
lahf
cs
add
stos
pop
mov
mov
aas
negb
shrb
fwait
pop
das
in
ficoms
js
ja
mov
movsl
in
in
mov
aam
cmp
lods
fnstcw
movsl
das
out
mov
leave
mov
pop
testb
fstpl
mov
or
enter
movsl
xchg
fldenv
jno
mov
add
outsb
test
ljmp
hlt
jnp
push
dec
rcrl
sbb
mov
inc
pop
mov
scas
xchg
and
call
pop
cmp
add
add
sti
dec
cmp
push
shr
fxch
mov
outsl
xchg
out
repz
fistpll
scas
ja
out
sbb
dec
xor
dec
imul
xor
xchg
mov
push
cs
ljmp
and
cmpsl
sbb
lea
jp
aas
scas
dec
sub
fbld
js
or
stos
pop
pop
mov
jbe
xlat
nop
push
in
iret
scas
int
out
daa
stos
sti
jae
jg
out
frstor
fidivrs
mov
jle
mov
and
xorl
int
sahf
sbb
add
push
sbb
xchg
xchg
stc
mov
fnstcw
xchg
ljmp
lds
pop
pop
or
icebp
leave
pop
pop
scas
mov
aas
xor
ds
adc
xor
lds
mov
mov
mov
push
lahf
adc
mov
mov
iret
inc
lahf
push
clc
lret
popl
in
lods
adc
or
scas
clc
pop
leave
pop
add
mov
ljmp
fmuls
repz
xchg
lods
scas
mov
push
add
pop
dec
xchg
push
xor
inc
add
popf
mov
and
scas
xchg
cmp
int
dec
mov
ja
out
xchg
flds
fiadds
ja
out
aad
sbb
mov
sub
dec
dec
std
leave
fimuls
pop
xchg
mov
cli
idivl
data16
add
mov
sbb
clc
loopne
mov
push
push
push
jmp
mov
cmp
lods
adc
mov
outsb
jecxz
fsubp
mov
out
pop
or
out
cmpsl
fidivs
ret
fistpl
pushw
push
and
and
shll
mov
stc
ret
push
stos
or
xor
mov
sub
lods
and
xchg
xchg
clc
pop
aaa
mov
mov
iret
repz
push
mov
jo
sarl
fwait
pop
testb
pop
cmp
xor
fwait
outsb
in
negl
jo
in
inc
sti
fidivl
dec
call
or
repnz
push
frstor
mov
scas
icebp
je
std
adc
inc
sbbb
cmp
js
and
sarb
mov
lds
lret
scas
fildl
mov
jb
cltd
arpl
out
xor
mov
jmp
inc
cmpsb
int
sub
fistps
in
adc
fsubr
fnstsw
test
cmp
arpl
mov
fwait
stc
js
imul
cs
pop
xchg
sub
cld
loopne
sahf
mov
out
stos
in
les
cli
xor
sbb
mov
mov
mov
bound
cmc
push
mov
leave
mov
add
mov
sti
std
pop
nop
imul
in
xor
push
decb
stos
push
lahf
sbb
int
lret
sub
shrl
mov
push
push
sbb
fnstsw
add
pop
ret
insl
data16
inc
out
movsb
in
sbb
or
mov
add
movsl
in
ficoms
insl
jmp
aas
push
stos
mov
ret
mov
icebp
adc
add
test
mov
add
repz
pop
dec
cmp
sub
mov
iret
sti
or
push
jns
mov
ja
add
ret
mov
sub
pop
mov
sub
pop
inc
mov
out
push
jmp
add
jbe
xchg
stos
into
cwtl
add
sbb
xchg
sub
push
inc
call
leave
inc
scas
ss
push
mov
jmp
mov
faddp
add
pop
pushf
dec
jecxz
and
mov
lcall
in
push
incb
fdivr
push
repnz
push
add
push
pop
inc
fidivrl
fisubrl
fldcw
mov
insl
pop
cs
push
fisttpl
push
mov
std
stos
popa
cwtl
in
cmc
dec
cmp
addr16
sub
arpl
rclb
nop
sub
imul
cmpl
movsl
lea
fiadds
mov
insl
into
mov
in
pop
sbb
repz
stos
rolb
mov
mov
dec
mov
in
test
cmp
jae
jmp
mov
shrl
sbb
mov
aad
imul
test
pushf
rolb
and
dec
aaa
mov
cmpb
std
adc
cs
jle
sbb
jmp
movsb
sub
sbb
push
xlat
in
iret
stc
xor
clc
cmp
cmpsb
or
in
in
int
and
mov
outsb
jg
mov
ret
mov
or
mov
xchg
xlat
out
in
push
stos
jge
cmp
pop
dec
in
popf
mov
stos
popf
insl
pop
ret
scas
xlat
pop
jge
or
mov
imulb
inc
mov
ret
mov
test
add
mov
aaa
lcall
mov
sub
in
out
sbb
imul
clc
mov
in
mov
sub
mov
sub
xchg
in
dec
sub
xorl
or
mov
sub
xorb
pop
stos
rclb
aaa
inc
adc
jle
jecxz
loopne
add
push
outsb
sub
mov
cmp
mov
arpl
out
dec
xlat
ffree
jnp
inc
cmp
ljmp
jae
sub
jle
or
orb
jge
fcoms
fbstp
inc
rcr
ljmp
mov
sub
pop
cwtl
cmc
hlt
cmpsl
mov
inc
loope
mov
jnp
das
cmp
push
mov
sub
push
jmp
addr16
jo
xchg
incb
xchg
ret
push
cmp
das
dec
sbb
cmp
rcrb
xchg
sahf
dec
out
cmc
xor
subl
push
fistpll
ja
imul
outsl
sbb
pop
jle
test
je
daa
lret
into
pop
sub
xchg
sub
adc
xchg
push
out
addr16
jl
andl
es
push
mov
aas
in
ja
movsb
fisubrs
xchg
call
sarl
in
sub
inc
and
cmp
push
ror
ds
cltd
xor
sub
jl
sbb
repz
sub
mov
fdivl
lods
cmp
mov
mov
push
addb
fdiv
stos
mov
jmp
mov
stos
or
scas
scas
icebp
lock
mov
push
cmp
cld
mov
cmpsb
push
add
pop
divl
rol
in
clc
and
push
and
push
lds
in
insb
jle
dec
xchg
or
pop
cltd
arpl
inc
mov
insl
mov
and
cmpsb
jo
loop
adc
outsb
subb
testl
int
mov
fistl
sbb
xlat
and
and
aad
out
dec
jp
sbb
add
in
mov
cmc
int
mov
out
push
aaa
ret
mov
repz
sbb
filds
pop
mov
sbb
pop
fbstp
mov
notl
outsl
jge
mov
aad
add
mov
outsb
xor
fwait
xlat
rep
adc
adc
sar
fs
test
in
clc
into
ljmp
pop
leave
ret
and
jmp
pop
sbb
neg
mov
inc
add
out
hlt
jl
pop
shlb
adc
stos
pop
std
gs
xor
in
inc
add
inc
pop
fcmove
mov
cs
lds
mov
out
fxch
and
stc
das
xor
mov
aas
sub
mov
pop
jb
mov
pop
cld
mov
or
aam
sahf
or
sub
cmp
fidivrs
jb
jnp
push
or
mov
jne
mov
mov
cmp
out
test
sub
cli
out
mov
jnp
pop
lret
push
mov
lock
mov
add
push
shl
outsl
subb
mov
and
mov
mov
push
sbb
imull
push
cmp
push
and
push
fimuls
fidivrs
insl
add
inc
andl
enter
dec
lods
and
xchg
sar
out
in
test
pop
cmp
jg
outsb
cli
movsb
mov
jmp
jmp
sti
out
xor
filds
addr16
or
mov
xchg
add
rcl
pop
fistpll
ss
sbb
mov
xor
pop
in
and
jmp
pop
frstor
jge
shrl
shrl
jno
loope
ficompl
leave
mov
dec
inc
repnz
sub
aad
add
mov
aaa
jmp
or
push
ljmp
push
xlat
sbb
js
pop
pushf
mov
add
in
out
pop
or
xchg
inc
sbb
jmp
push
mov
rcrl
mov
sti
mov
push
pop
imul
mov
repz
push
imul
and
lahf
daa
aam
xor
out
xor
sbb
mov
cmc
push
lahf
add
es
jecxz
push
pusha
push
sbb
cs
xor
mov
data16
mov
test
pop
inc
scas
pop
add
add
scas
mov
adc
mov
dec
scas
sub
mov
sbb
cli
iret
push
xchg
mov
push
jns
push
ficoms
stos
pop
out
or
pop
arpl
or
xchg
pop
mov
pop
pop
out
xor
jmp
mov
shrl
xchg
fistpl
mov
pop
pop
or
test
aad
imul
fisubrs
dec
aad
and
xlat
mov
mov
outsb
adc
scas
ja
cmp
je
cs
pop
xchg
nop
jo
sbb
pop
fisubrl
ret
inc
and
and
test
cmp
iret
pop
addps
dec
mov
xorb
mov
mov
aas
xor
jne
sbb
dec
push
fcmovnu
ficomps
or
mov
and
imul
out
in
xor
lods
sbb
jmp
jae
movsl
loopne
and
mov
adc
imul
and
lds
add
bound
hlt
xchg
mov
into
imul
into
ret
hlt
xchg
je
in
mov
fisubs
push
ficompl
pop
push
loopne
iretw
stc
pop
dec
jp
cli
lods
daa
push
jg
repnz
dec
cli
cwtl
ss
out
jg
mov
xlat
fstpt
shl
mov
inc
xchg
mov
xchg
ljmp
cmp
mov
jg
mov
in
mov
inc
out
mov
icebp
pop
clc
cwtl
cmpsb
ret
fcompl
movsl
scas
mov
out
mov
inc
inc
xor
sarb
divl
lahf
push
mov
inc
ja
fdivr
xorl
mov
sbb
mov
rorb
push
mov
hlt
jb
das
sbb
idivb
in
mov
lods
je,pn
subl
jg
jg
pop
lods
mov
ljmp
jne
pop
in
or
cmpsb
push
jge
fidivl
add
shll
test
movsb
int3
test
cmpsl
push
rcrl
sti
pop
mov
lock
mov
mov
sub
stc
shr
enter
shlb
stc
cmp
icebp
sbb
sub
cli
inc
jbe,pt
int
rcll
mov
int
sbb
mov
pushf
icebp
sub
loope
lahf
fisttpl
pop
movsl
sbb
data16
aas
adc
insl
dec
mov
iret
call
xchg
scas
dec
adc
jnp
das
lret
pop
pop
or
pop
mov
pop
mov
inc
xor
imulb
xchg
in
fdivrs
push
inc
ljmp
stc
push
negl
icebp
or
mov
rol
lahf
adc
dec
or
out
adc
int
shrb
mov
int3
stc
ret
mov
aas
outsl
icebp
push
cmp
das
xchg
pop
into
push
out
rcrb
xor
pop
sub
pop
pop
xor
jae
jnp
pop
mov
mov
fstps
jg
loop
jnp
test
cmp
cs
pop
arpl
add
imul
xchg
imul
pop
into
and
adc
ds
xchg
push
filds
leave
and
scas
scas
sbb
jle
pop
stos
lock
jg
divps
push
movsl
adc
dec
clc
inc
ds
mov
sahf
lods
pop
mov
int
jg
fmull
negl
es
mov
xor
inc
sbb
ds
stc
jmp
sub
mov
imul
and
pop
arpl
out
xor
mov
insb
mov
adc
jne
lods
mov
sub
dec
pusha
adc
pop
es
in
mov
pop
sbb
arpl
inc
mov
sbb
and
scas
daa
dec
push
leave
addr16
mov
mov
fbstp
clc
or
push
sub
rolb
movsb
insb
mov
cwtl
dec
jns
movsb
fcompl
fisttpll
jle
mov
testb
fsub
pop
mov
pop
lds
mov
and
test
sub
mov
shlb
stos
mov
pop
int3
rorl
stos
clc
sar
mov
stos
mov
jno
lret
rcrb
xlat
jne
hlt
mov
pop
dec
jne
int
sbb
fdivl
in
inc
lods
pop
jnp
cmp
fcompl
mov
mov
mov
cmp
aad
roll
push
out
push
mov
fistps
cmp
and
lods
jle
jnp
pop
jge
cmp
scas
jmp
push
into
cltd
mov
and
lahf
dec
scas
sysenter
sub
shlb
add
add
clc
cmp
mov
mov
jnp
loopne
andb
test
and
ljmp
cmp
push
mov
ret
push
xlat
cmc
mov
mov
mov
jnp
mov
jnp
pop
cwtl
imul
fistpll
dec
ret
sub
fld
xchg
push
xor
cmp
sbb
jg
inc
mov
sub
jns
in
out
add
out
dec
xchg
fsubr
inc
popf
test
add
in
cmpsb
rcr
popa
in
repnz
fiaddl
add
hlt
dec
add
fiadds
imull
fmuls
xchg
aad
xchg
mov
sbb
jecxz
rcll
inc
pop
pop
or
repnz
mov
leave
and
dec
xchg
pushw
pop
ja
jne
movsl
in
mov
repz
or
out
dec
pop
arpl
jnp
mov
cmpb
add
jae
mov
pop
pop
dec
pop
lods
jno
adc
lcall
loopne
mov
jmp
mov
pop
in
push
aas
mov
out
ss
pop
mov
sub
and
pop
mov
push
arpl
xchg
clc
repnz
add
lret
stc
in
ds
aad
outsb
mov
push
in
cmp
and
in
pop
neg
sti
push
iret
flds
out
fsub
fucomip
scas
xlat
jge
lods
cli
call
sub
add
xchg
int3
loop
xchg
sub
mov
pop
sub
testl
add
sub
sub
outsl
pop
popa
ljmp
fisttps
mov
rol
push
xchg
mov
xchg
test
mov
xor
add
jge
push
jge
cwtl
insl
je
stos
insb
pop
adc
outsb
outsb
hlt
fs
lret
mov
jecxz
in
ja
rclb
cmp
adc
mov
lock
xor
pop
mov
outsl
dec
mov
ja
out
sar
rcll
sbb
mov
es
out
or
aad
stos
mov
sti
lcall
mov
inc
push
aaa
sbb
mov
daa
xchg
mov
mov
xchg
fisubrs
ret
xchg
jae
xor
in
pop
hlt
jne
xchg
dec
cmpsb
shrb
dec
out
add
out
xchg
add
mov
jnp
pusha
fisttpll
xor
cmp
push
mov
stos
out
sar
mov
cmpsl
pop
add
imulb
fstpl
sbb
fsubrl
loop
fmull
out
mov
xchg
out
mov
fldln2
mov
outsl
fisubs
mov
lret
push
out
lret
sub
cmp
dec
sbb
out
jl
shr
pop
mov
inc
fimull
mov
xorb
jge
push
sub
or
hlt
iret
mov
aaa
sub
popf
jae
sub
lcall
stc
scas
pop
cs
shll
out
fiadds
or
insb
pcmpeqd
das
repnz
mov
das
cmp
fisttpl
out
in
pop
es
fstpl
sahf
fcompl
iret
repz
daa
jae
test
lahf
cmpsl
neg
scas
push
mov
pop
dec
stos
mov
stos
mov
jnp
xor
sbb
insb
push
popf
dec
mov
shll
repz
insl
mov
sub
sti
push
pushf
or
out
sub
lock
jge
push
jp
mov
aas
repnz
jle
push
mov
and
xor
ds
out
mov
pop
cli
pop
rorl
inc
or
push
call
or
scas
inc
cmp
mov
repz
mov
add
scas
sti
sti
ss
out
jecxz
cwtl
pop
dec
out
insb
ljmp
outsl
and
jl
pop
push
mov
adc
mov
aam
mov
dec
sbb
out
push
jo
xchg
imul
fldcw
pop
push
loope
xchg
iret
jmp
push
and
push
loop
adc
jmp
stos
stos
mov
out
push
cmc
dec
pop
sub
popl
idivl
shll
addr16
mov
inc
data16
dec
sub
outsl
insl
pop
sti
sbb
aas
in
dec
inc
jns
sti
xlat
mov
ds
xor
sub
push
dec
mov
sub
pushf
jecxz
mov
es
cmp
pop
sbb
and
push
sub
push
pop
adc
pop
sub
pop
cmp
jae
fbld
sub
fxch
lds
mul
arpl
gs
push
mov
xlat
out
push
mov
inc
add
jmp
flds
pop
pop
ret
mov
mov
decb
pop
jne
jae
pop
fstcw
sahf
loop
add
push
outsb
ret
fistpl
mov
fisubrs
call
insl
mov
mov
in
fcoms
arpl
mov
cmp
in
jns
inc
jae
andl
jae
mov
rol
or
orl
scas
mov
push
or
scas
mov
sarl
outsb
cmp
das
adc
mov
emms
fistpl
out
fmulp
fsin
mov
repz
mov
sub
jge
lock
data16
jle
adc
cs
ljmp
lret
pushf
insb
les
icebp
push
cmpsl
fbstp
mov
lret
jmp
dec
push
lahf
pop
xchg
fbld
js,pt
hlt
fisttpl
add
push
mov
mov
mov
stos
cmp
xchg
jg
iret
ret
inc
cmp
fstps
out
sbb
push
push
push
int3
push
fstpt
push
mov
or
mov
out
xchg
loopne
cwtl
fadds
negb
jo
xor
mov
scas
ficoms
leave
jne
cltd
lret
add
leave
push
clc
int
cmp
push
pop
jg,pt
int3
loop
stos
pop
mov
lds
dec
jbe
add
mov
lret
push
jne
das
mov
or
sahf
bound
out
lret
adc
xchg
dec
mov
sub
mov
dec
mov
cmp
faddp
and
sbb
or
mov
add
ret
imul
jns
sbb
scas
lahf
aaa
adc
loope
loope
repz
in
pop
adc
movsl
jg
call
jp
pop
mov
leave
ds
jnp
sbb
scas
xchg
jnp
mov
jae
aas
mov
imul
out
mov
sahf
out
lods
out
mov
loope
repz
int
add
and
inc
xchg
repz
dec
pop
mov
sub
fsub
test
pop
lret
shrl
outsl
das
lock
xchg
fisubs
cs
bound
cwtl
xor
leave
out
cmp
push
cmpsb
and
adc
cwtl
push
mov
or
in
mov
in
mov
mov
add
ds
into
or
loopne
inc
push
jl
dec
adc
outsb
stc
add
mov
dec
adc
pushf
jg
jle
mov
pop
xor
jecxz
mov
cmpsl
pop
cmp
fstps
mov
mov
jmp
fldl
ljmp
dec
ds
mov
into
mov
push
xor
or
xchg
scas
fidivs
outsb
loop
sahf
pop
push
cmp
jae
push
cmp
sti
outsl
into
mov
sub
cmp
lcall
mov
and
sarl
cltd
xor
sti
pop
inc
pop
sub
sub
cltd
mov
cwtl
out
cld
mov
call
pop
add
rcr
cs
sti
outsb
sahf
div
or
jnp
ffreep
mov
xor
mov
outsl
leave
dec
fnsave
mov
subb
cmpsl
fwait
into
sahf
dec
insl
imul
pop
or
jae
imul
lods
in
in
xor
roll
jb
sbb
ja
dec
sbbb
sub
dec
imul
jg,pt
or
outsl
fxam
mov
mov
sub
stc
mov
movsl
or
fs
int3
mov
pop
sbb
inc
dec
or
cli
lahf
pop
js
pop
in
pop
sub
inc
lods
or
xchg
add
je
mov
xor
jne
in
popf
mov
mov
sahf
ja
outsl
psubb
ds
fucomip
pop
mov
call
sbb
jmp
test
mov
xchg
test
mov
and
cmpsb
xchg
hlt
jle
stos
sbb
repz
and
mov
out
sbb
sarb
mov
fisubrs
sub
das
lahf
push
out
sbb
pop
mov
clc
fadd
pop
repz
into
jecxz
faddl
fs
sbb
sub
xor
push
scas
cmp
xor
mov
outsb
push
out
mov
add
pop
push
scas
iret
ds
dec
aaa
outsb
and
test
push
ret
sub
lock
test
fbld
dec
fucom
jge
add
jecxz
mov
sub
mov
add
sbb
shrb
out
scas
mov
pop
enter
movsl
xlat
jg
jge
ja
dec
pop
out
xchg
orb
push
xlat
cmpsl
mov
pop
or
outsl
in
jmp
mov
sbb
imul
test
pop
pop
into
data16
mov
lods
in
arpl
pop
add
jbe
mov
loop
mov
push
jb
jge
sub
lret
rorl
ljmp
test
call
cmp
fs
sub
mov
jne
add
nopl
in
sahf
sti
call
pop
dec
sub
in
mov
daa
sahf
shl
aam
testb
and
lret
sub
jl
in
into
fdivs
pop
jle
jb
jmp
jnp
or
sub
pushf
mov
in
scas
cmp
cmpsb
mov
insl
mov
add
inc
cltd
dec
pop
sub
sub
jecxz
adc
cmpb
in
adc
jbe
arpl
lock
ss
mov
pop
pop
jae
notl
jo
in
cmpsl
ljmp
push
xor
jg
pop
jo
mov
xor
dec
sti
jmp
mov
hlt
dec
sti
fwait
das
test
inc
sbb
mov
mov
adc
xor
sahf
mov
scas
rcr
mov
leave
shll
orl
adc
cs
das
loope
push
push
ljmp
dec
xor
dec
push
push
or
out
lret
jle
pop
cmc
int
pop
mov
pop
inc
jae
outsl
cmpsb
ficoml
icebp
leave
orl
fsts
dec
cld
pop
pop
subl
faddl
ja
inc
sahf
jno
inc
out
out
fildl
mov
inc
into
gs
mov
shl
loope
mov
fs
in
xchg
fistpll
ret
push
jnp
fsts
cltd
inc
scas
push
and
and
in
push
mov
dec
lods
sahf
mov
stos
mov
dec
mov
lods
jbe
pop
mov
or
jne
in
push
jnp
scas
leave
pop
cld
loop
xchg
and
shr
dec
cmpsl
aas
rorl
mov
subb
adc
movsb
inc
jg
cmp
outsb
cmp
out
out
psrlw
into
cmp
in
and
jne
push
mov
cmp
mov
mov
fwait
neg
lret
xchg
jb
out
nop
lods
std
mov
sbb
cmp
sbb
fistl
mov
sbb
adc
pop
clc
inc
mov
mov
push
pop
xor
xchg
idivl
repnz
jg
mov
jae
mov
pushf
dec
pop
push
pop
insl
push
pop
push
outsb
jb
hlt
mov
fisubs
scas
push
xchg
popl
mov
lcall
cs
mov
jecxz
mov
stc
notb
out
fstpt
mov
arpl
insl
dec
fldt
jns
xor
sbb
repz
gs
push
lds
bound
xor
push
hlt
fadd
pop
jnp,pt
cmp
popf
and
cmp
jge
push
dec
cwtl
popf
add
cmp
rorb
add
arpl
sub
adc
or
in
loopne
aaa
xor
scas
ret
sbb
lahf
push
push
pop
push
in
cmpsl
pop
jg
leave
out
inc
sub
pop
ficompl
push
arpl
xchg
mov
ljmp
and
fcmovbe
dec
xchg
mov
aad
pop
xchg
icebp
pop
popf
inc
imul
cmp
cmp
inc
jne
popf
out
pop
pop
addr16
mov
cmp
push
mov
add
imul
loope
sti
icebp
fldt
mov
sbb
mov
movsb
sbb
mov
mov
push
test
push
pop
sbb
cld
mull
inc
mov
clc
xlat
repz
and
dec
push
mov
push
jmp
mov
or
mov
mov
push
sbb
or
cmp
jg
xchg
lahf
fucomp
outsb
aaa
pop
jno
add
aaa
stos
into
push
pop
pop
lods
add
xor
jnp
pop
daa
imul
inc
int
rcr
incb
cli
mov
lds
push
outsl
inc
xor
ficoms
stos
insl
and
xchg
in
rolb
inc
arpl
jmp
pop
dec
outsl
cs
stos
out
out
dec
dec
int3
out
std
stos
jecxz
out
push
rorl
fistps
xchg
mov
dec
cld
fistps
or
test
out
repnz
mov
pop
sbb
aam
stos
fcmovnu
in
lcall
and
xchg
pop
inc
inc
cmpsb
xchg
out
jl
scas
pop
pop
lcall
in
sbb
mov
ljmp
xorl
insb
sti
push
outsl
dec
sub
inc
aad
in
xor
dec
les
cmp
addr16
pop
rcrl
sub
xlat
les
fimull
repnz
mov
insb
test
mov
iret
jo
ficomps
cmp
push
das
xor
xlat
add
inc
gs
loopne
mov
fs
test
sub
cmc
dec
sarl
mov
jmp
pop
out
adc
lret
out
push
in
in
imul
cwtl
mov
sub
into
fnstenv
jle
stc
pop
nop
pop
push
dec
popf
mov
sbb
iret
scas
loope
xchg
inc
mov
dec
ds
sbb
dec
jmp
ficoms
sahf
rcr
bswap
or
lcall
lds
out
dec
pop
popf
add
pop
out
mov
scas
iret
mov
mov
mull
sub
pop
mov
add
push
adc
sbb
dec
loop
and
xchg
push
add
subb
lret
lea
pop
mov
outsl
pop
out
or
subb
mov
pop
jns
dec
ss
cltd
imul
out
add
mov
cmp
loopne
pop
out
mov
xor
je
pop
movsb
lea
dec
ret
or
dec
cmpsb
dec
mov
jae
out
fstpt
out
out
ja
add
hlt
push
aam
call
test
and
pushf
fucomip
mov
jmp
sahf
cmpsl
push
outsb
xlat
idivb
sbb
push
fstpl
data16
js
fucomi
pop
rcr
mov
jmp
cmp
mov
rorl
sbb
adc
jne
das
jmp
pop
lea
dec
push
dec
mov
sbb
jns
nop
movsl
jge
xchg
pop
movsl
pop
push
in
cmc
mov
notb
mov
test
jmp
scas
push
test
icebp
cmp
sbb
mov
cmp
xlat
in
jge
or
lahf
xchg
ret
out
pop
mov
xchg
in
add
fstl
lods
pop
mov
ja
in
scas
dec
mov
imul
out
test
daa
add
jnp
mov
inc
dec
xchg
adc
imul
push
leave
mov
mov
ss
scas
mov
xchg
test
out
in
push
sbb
mov
rcrl
into
sub
mov
test
xchg
and
int3
xchg
in
mov
xchg
mov
sahf
mov
push
jmp
iret
call
data16
lret
dec
out
rorb
insl
and
mov
dec
movsb
aam
inc
mov
push
shlb
test
fwait
or
sub
and
jl
cmp
jl
js
in
shl
fldt
pop
frstor
mov
call
leave
outsl
dec
inc
cmp
fstpl
push
clc
cmp
bound
ret
add
sub
cmp
out
fcos
push
mov
cmp
outsb
repnz
lock
ret
lods
jle
pop
sbb
mov
sbb
mov
in
xchg
out
dec
mov
add
cltd
pop
mov
pop
fildl
jg
stos
test
shrb
push
jbe
jmp
and
es
pop
lcall
push
jnp
lret
addr16
popa
dec
movsb
mov
sahf
ljmp
repnz
xor
jnp
adc
test
gs
fdivp
xor
push
loopne
jge
std
out
in
ss
push
mov
pop
xchg
lret
sbb
xchg
cmpsl
pop
dec
cmp
dec
cli
inc
dec
js
pop
test
mov
pop
adc
sub
push
in
adcl
push
in
inc
xchg
aaa
andl
lahf
push
je
mov
pushl
ret
push
popa
jmp
cmpsb
sarb
or
test
std
shlb
int
stos
repz
aaa
xlat
divl
jle
out
sarl
mov
ret
in
out
jg
fadd
enter
add
aaa
cmpsb
fisttpll
movsl
fldcw
mov
sub
mov
cmp
insl
inc
aas
sub
mov
outsl
pop
repz
shrb
decb
subb
jge
loop
inc
int
inc
out
out
cmc
es
xor
loop
out
aas
aas
inc
mov
iret
pop
inc
test
jg
fs
jmp
inc
daa
mov
stos
mov
dec
lea
push
lret
fwait
xlat
rclb
stos
jg
mov
lcall
add
xor
out
arpl
mov
lock
rolb
ljmp
pop
and
mov
int3
data16
dec
mov
das
mov
aaa
pop
xchg
or
dec
ret
aaa
xchg
popa
mov
fwait
xor
xchg
iret
bound
and
call
mov
push
cmp
lock
dec
or
loopne
add
rclb
and
scas
pop
insb
xor
fldcw
xchg
mov
jnp
sub
lods
outsb
andb
push
adc
lock
shl
mov
push
je
xor
mov
inc
std
dec
imul
mov
xchg
addr16
xor
in
aaa
jecxz
and
dec
jno
mov
mov
in
int
outsl
js
push
iret
repz
rcr
cmp
add
xor
inc
in
pop
jmp
movsb
jb
jle
jg
aad
loop
daa
fadds
xlat
mov
mov
or
dec
insb
jle
sub
push
lea
xor
fucomi
call
sbb
test
mov
pop
rcrl
jg
jl
add
fisubl
sub
imul
cvttps2pi
mov
or
sbb
imul
aam
sahf
fidivrs
movsl
or
outsb
outsl
pop
cmp
jle
fdivrs
jnp
test
das
sahf
ja
test
rcrl
in
fdivs
pop
in
sti
cmp
inc
out
mov
push
pop
shrb
rorl
fisubs
mov
xchg
cwtl
mov
jnp
rcr
in
or
add
leave
push
cwtl
dec
jo
dec
jl
mov
mov
neg
inc
jno
dec
out
mov
jno
push
aas
mov
push
dec
xor
pop
mov
ljmp
sahf
pop
icebp
fnsave
sbb
outsl
nop
popa
movsb
adc
add
mov
push
int
repnz
mov
fstpl
xchg
xlat
in
cmp
adc
mov
lea
cs
leave
push
fcomps
push
jl
jno
sti
and
inc
mov
rcrb
std
add
or
fildl
mov
fstps
repz
repnz
sub
iret
adcl
and
pushf
sbb
and
cli
push
cltd
fimull
push
jo
insl
inc
aad
loope
adc
adc
ds
push
inc
push
pop
mov
and
jp
cltd
out
divb
push
fistps
mov
mov
imul
fisubrs
in
pop
stc
push
pop
xchg
dec
idivb
mov
mov
and
pop
sbb
adc
fbstp
fdivr
sub
mov
je
inc
mov
xchg
call
dec
scas
sub
or
add
mov
pop
popf
rcpps
xor
mov
repz
aas
xlat
fistpl
inc
scas
jb,pn
and
in
jle
mov
out
push
popl
cmp
movsb
jl
loop
std
inc
cmpsb
mov
ret
fisttpll
mov
inc
out
adc
fisttpl
out
icebp
ficomps
in
push
popf
sbb
test
mov
movzwl
outsl
cli
fidivrs
pop
cli
and
lcall
jmp
pop
inc
mov
ja
mov
int
sbb
cli
jg
into
mov
mov
imul
sub
lahf
into
inc
cs
pop
mov
pop
jmp
aam
add
mov
push
xchg
push
lock
jg
pop
getsec
pop
dec
rolb
out
ja
out
cs
and
jnp
sbb
inc
mull
nop
pop
imul
mov
add
xor
mov
loop
adc
scas
ds
jmp
and
fnstsw
jae
test
add
repnz
aad
sti
divl
pop
adc
fs
cli
clc
imul
cmp
idiv
mov
mov
sarb
insb
sbb
rorl
sti
mov
loope
ffree
out
outsl
adc
dec
repz
idiv
lret
sbb
leave
out
fdivp
mov
mov
pop
das
sub
iret
pop
mov
xadd
push
xlat
mov
sub
xor
std
xchg
loopne
rcrb
or
in
jg
mov
pop
std
jle
mov
std
cmp
mov
jmp
jle
sar
sub
stos
jns,pn
stos
dec
xor
loopne
mov
jno
pop
int3
mov
dec
in
movsb
mov
mov
lahf
divb
pop
fs
mov
lods
dec
push
aam
mov
es
out
cmpsl
pop
cltd
std
aaa
cmp
sti
hlt
dec
mov
fxch
test
or
sub
loopne
inc
aam
mov
mov
sbb
cmp
gs
rorb
out
sti
shr
test
and
fnsave
subb
lods
cmp
aas
jg
push
jle
or
mov
or
push
ret
sbb
xor
sbb
jmp
nop
mov
dec
pop
xor
jmp
sti
add
sub
jecxz
mov
pop
dec
inc
mov
in
mov
mov
xor
bound
push
mov
fstpt
ja
mov
add
cmp
ds
push
es
cmp
mov
jnp
cmpsb
mov
xor
dec
fxch
sub
push
jmp
push
fdivr
inc
pop
popf
pop
fbld
jns
push
mov
inc
mov
cli
mov
sub
push
xchg
int3
lcall
lret
cmp
fistpl
shll
xor
idivl
cmp
in
nop
push
cs
jg
inc
iret
pop
inc
jae
outsl
scas
dec
or
fdivrl
outsb
sub
mov
inc
fimuls
iret
sub
push
insl
or
pop
jbe
mov
shr
rorl
rorb
hlt
adc
push
bound
mov
mov
out
dec
mov
and
scas
xlat
and
in
sbbb
dec
cmp
pop
mov
mov
mov
aas
repz
les
inc
mov
shrb
rcrl
xorb
mov
inc
dec
inc
push
xor
jnp
lods
mov
psubsw
jge
pop
insb
mov
mov
ret
jge
xchg
les
rcll
in
pop
int
test
pop
inc
jnp
pop
xor
add
mov
popf
pop
int
xchg
jmp
adc
out
dec
std
mov
pop
xlat
mov
mov
or
test
notl
call
gs
xchg
jb
rorl
lcall
push
enter
scas
outsb
xchg
mov
push
push
fstl
cltd
pop
scas
mov
jle
jle
pop
xchg
add
out
xor
out
mov
mov
iret
popf
mov
push
jg
sub
cwtl
aaa
pop
mov
mov
test
pop
enter
jne,pn
mov
and
sbb
push
popa
leave
outsb
fstpt
mov
fisubrs
popf
stos
cmc
xor
lods
jp
fldt
inc
pop
mov
cwtl
fcmovne
mov
addl
addr16
sbb
outsb
imul
xchg
and
imul
jbe
push
or
xchg
outsl
daa
negl
mov
imul
out
aaa
sti
add
leave
imul
jle
outsb
nop
into
mov
mov
mov
movb
add
mov
jecxz
sub
jg
jle
iret
pop
cmpsl
enter
ljmp
push
cmp
iret
mov
ret
out
sub
fidivs
sub
orl
or
cmpsb
sub
cmc
icebp
push
xchg
int3
add
ja
das
add
fidivrs
jge
jae
or
imul
pop
ret
lret
xchg
ret
jl
out
inc
hlt
icebp
lret
cmc
mov
fcomi
mov
adc
cmc
fsubrl
xor
cld
mov
rclb
cmpsl
loopne
push
mov
jle
mov
mov
push
jnp
xor
inc
cmp
arpl
repnz
das
mov
enter
loope
or
ficoms
mov
inc
jnp
inc
mov
xor
mov
mov
jge
push
into
popf
jae
jne,pt
xchg
push
mov
ficompl
cli
in
loope
ja
fidivrl
inc
cmpsb
mov
scas
xchg
mov
ror
popa
iret
arpl
sub
cmp
arpl
adc
in
jle
loop
sbb
push
and
inc
mov
aad
push
xchg
dec
into
adc
mov
mov
cltd
mov
lds
and
push
dec
xchg
xor
pop
fimuls
aas
ja
into
pop
mov
mov
xor
rorb
and
negl
lock
imul
int
dec
push
test
lods
scas
push
outsl
loopne
popa
cmpsb
std
cmpsb
hlt
mov
icebp
in
xchg
push
sbb
pop
sbb
sbb
fnstsw
cs
xchg
push
jmp
out
enter
mov
sbb
insb
mov
dec
cmp
inc
gs
jg
xchg
arpl
xor
aas
xchg
jnp
push
aas
imul
pop
add
movsl
xchg
es
popf
jg
mov
in
les
cmpsl
sbb
pop
push
jnp
neg
test
push
or
push
jo
mov
dec
iret
inc
jp
cmpsb
mov
and
cld
add
scas
sub
ja
sbb
iret
cli
xor
out
jp
add
int
les
aam
push
scas
xchg
in
mov
es
mov
push
mov
and
cmc
insl
idivl
adc
nop
ret
xor
cmp
xchg
outsl
data16
ja
cmpsl
xchg
cld
pop
fisubl
fstl
mov
add
dec
dec
xchg
and
mov
cli
and
mov
lock
icebp
add
ret
loope
or
xchg
cmp
lea
sbb
mov
in
mov
pop
fs
jb
repnz
int
push
inc
aad
pop
jns
outsb
movsl
and
cmpsl
pop
std
fstpl
cli
cmp
pop
mov
aas
pop
push
cmp
aad
push
mov
out
mov
and
fstl
cmp
imull
lcall
push
push
adc
fcmovnu
fisubrl
out
push
scas
icebp
push
mov
push
stos
fldcw
cmp
mov
inc
push
sbbl
mov
cmpsl
adc
pop
sbb
lahf
and
cmpsl
scas
mov
cltd
repz
jo
mov
gs
xor
adc
out
push
pop
test
jbe
std
shr
mov
loopne
mov
stos
mov
or
jg
push
dec
stc
push
movsl
aas
sbb
ja
pop
dec
mov
pop
call
pop
dec
push
enter
adc
xchg
mov
popa
scas
push
dec
inc
subl
add
mov
int
repz
into
cmpb
out
add
push
jmp
and
mov
push
mov
adc
mov
push
out
mov
ljmp
bound
pushf
fucomip
in
mov
leave
lea
dec
add
add
push
cmp
cld
jo
sub
xchg
xchg
stos
adc
adc
scas
push
aas
mov
imul
hlt
sub
push
jg
cltd
sub
pop
shll
mov
mov
fstpl
jmp
mov
aas
loopne
popf
dec
jae
sub
imulb
inc
push
paddb
stc
into
push
and
mov
fsubrl
in
lret
mov
push
out
ret
icebp
je
mov
js
and
fstp
das
imul
push
cli
loopne
out
hlt
movsl
add
loope
push
loop
jbe
stos
add
les
pop
fmuls
jp
jno
xchg
push
pop
mul
fld
pop
push
icebp
jbe
fiaddl
sbb
dec
icebp
sbb
sarb
arpl
mov
mov
mov
add
and
stos
mov
fbstp
out
adc
scas
mov
sbb
sti
js
scas
push
lds
or
insl
add
xchg
mov
mov
ficomps
xor
inc
out
push
mov
inc
pusha
pop
scas
lret
js
pop
cmpb
in
lods
inc
rcr
sub
test
mov
mov
cmpsb
sbb
dec
mov
jb
mov
xorl
lods
jg
clc
repnz
push
mov
sbbb
mov
in
pushf
pop
pop
push
addl
popf
mov
sti
or
pop
inc
xchg
mov
add
adc
rcll
cmpsb
aas
scas
mov
dec
aas
js
lock
lock
mov
jnp
jge
mov
pop
cmpsb
and
dec
loopne
sti
sbb
stc
inc
scas
aas
je
shlb
std
stc
pop
cmp
dec
sahf
rcl
out
popa
mov
out
stc
faddp
mov
cmp
mov
mov
out
sbb
xlat
out
cld
sub
inc
in
sbb
mov
sbb
pop
jl
push
fldl
je
cmpsl
mov
mov
cmpsl
lcall
out
jl
je
jbe
repz
mov
mov
mov
push
mov
lret
cltd
mov
pop
mov
add
scas
imul
pop
aaa
out
xor
jle
push
lahf
loopne
pop
push
dec
xor
pop
cmc
or
dec
scas
aas
cmc
push
xor
jne
pop
add
addr16
into
xor
jecxz
pop
shll
sbb
mov
test
pop
addr16
cld
aam
imul
stos
fstps
cmp
rcrl
shll
aam
or
fisttpll
jo
inc
rorb
loop
jge
or
int
into
jae
ret
pop
pop
mov
aam
ds
rcrb
push
rolb
ret
mov
dec
add
mov
mov
ja
cmpl
push
cmp
out
jbe
fnstcw
js
mov
mov
mov
mov
jmp
das
ds
adc
outsb
into
inc
jae
fiadds
pop
aad
and
pop
jne
sarb
xor
jp
data16
push
mov
loop
mov
arpl
push
shr
aad
ja
scas
dec
adc
push
xor
notb
and
stos
dec
sbb
pop
dec
adc
sub
or
lock
pop
dec
out
popf
ret
cli
jnp
fnsave
ja
out
mov
lcall
mov
in
adc
mov
mov
ja
sub
call
jno
lods
fistpll
icebp
rolb
ret
mov
iret
mov
setb
das
cmp
pop
xchg
cmpsb
sahf
sbb
mov
lea
pop
xor
and
stos
push
int
dec
jae
cmc
lahf
pop
loope
ja
dec
mov
or
mov
pop
aam
aas
call
aaa
sbb
mov
lret
dec
and
loope
clc
jae
dec
xchg
es
pop
push
cmp
ficoms
lea
mov
push
push
cmp
and
xlat
or
adc
push
cli
addr16
cmc
adc
imull
lods
xlat
pop
and
in
scas
sbb
cmpsl
sbb
pop
sub
or
outsb
or
pop
cmp
mov
shl
adc
or
scas
or
ds
repz
cmp
lahf
or
pop
and
ds
push
mov
pushf
mov
cmp
mov
pop
add
pop
test
scas
mov
std
mov
in
repnz
and
into
fcmovne
push
mov
aad
xor
jecxz
jns
int3
das
xor
imul
dec
stos
jle
mov
jg
push
popf
pop
push
loop
rclb
fisubl
sub
outsb
pop
shll
movsb
jnp
xchg
loop
test
ja
cmp
mov
cmp
lods
testb
ds
hlt
movsb
pop
rclb
addr16
mov
and
adc
subb
in
nop
mov
roll
mov
clc
lods
clc
mov
mov
das
stos
add
pop
push
lret
ja
mov
stos
xchg
xchg
leave
fcmovu
int
in
sub
out
cmp
mov
stc
out
jns
add
mov
fbstp
in
ja
ljmp
cmp
push
fs
inc
outsb
dec
cmp
stos
in
imul
js
data16
ljmp
push
add
loop
pop
sahf
shlb
movsl
insl
fsubl
in
dec
jle
outsb
outsb
push
jnp
lcall
cmp
lcall
int3
pop
push
xchg
push
mov
arpl
inc
outsl
mov
cmp
push
pop
jno
pop
lret
sub
add
call
outsw
cli
shlb
fcmovnu
mov
outsl
dec
fiadds
mov
sub
mov
fsts
pushl
sahf
scas
std
sbb
mov
mov
xor
push
repnz
mov
adc
cltd
cmp
xchg
leave
mov
stos
in
cltd
std
dec
lahf
mov
loopne
push
scas
mov
or
jp
mov
or
xchg
jle
push
out
jae
inc
jmp
repz
or
stos
lods
out
mov
dec
mov
mov
imul
or
or
cld
mov
xor
fstl
outsb
in
out
push
mov
cmp
mov
or
and
ljmp
ljmp
int3
xorl
in
jl
push
addb
xchg
stos
popa
mov
inc
xchg
mov
fnstsw
xchg
lcall
pop
je
fmul
sbb
add
lods
adc
fidivrs
testb
xchg
push
out
or
idivl
sbb
repz
orb
cli
dec
and
insb
pop
mov
pop
cmp
inc
or
nop
mov
out
call
mov
dec
aad
shll
xchg
repz
fisubrl
out
dec
pop
cmc
stc
adc
cmpsl
push
sub
lahf
cmp
xchg
test
jp
fstpl
aad
lods
xchg
sbb
movsl
lea
adc
fistpl
or
and
fbld
mov
pop
scas
test
pop
int3
inc
inc
mov
leave
pop
fidivrl
fsubr
jnp
test
insl
pop
and
ds
mov
mov
imul
xor
in
inc
or
pop
mov
mov
xchg
lret
lcall
mov
adc
cs
or
dec
ljmp
pop
lods
mov
popa
dec
data16
jl
xor
mov
or
or
out
mov
mov
pop
test
insb
mov
cmp
pop
xor
and
movsb
not
sbb
fistps
in
jnp
fildl
jne
je
cmp
popf
loop
jnp
fstps
and
stos
mov
pop
sarl
scas
adc
testb
push
flds
and
jne
lahf
rcr
xchg
push
les
scas
inc
loop
mov
jnp
sti
fisttpll
mov
fidivs
xor
mov
cmp
adc
out
push
mov
jge
loope
fldenv
es
aad
nop
jl
pop
mov
out
mov
jne
sbb
out
mov
inc
fcompl
scas
push
adc
jge
mov
mov
mov
inc
pop
mov
inc
pop
ds
jmp
dec
fnstsw
jbe
mov
cmp
daa
mov
push
pop
or
loop
mov
or
add
in
cwtl
movsb
mov
mov
jnp
mov
pop
imul
pop
and
mov
hlt
pop
xchg
fucomp
ds
jle
addb
cmpsb
mov
jnp
xchg
fs
adc
mov
rol
stos
mov
loop
jmp
in
lahf
jb
insb
in
pop
rcll
call
mov
notb
xor
in
lds
ljmp
in
and
jnp
sti
int
sub
jae
cmp
add
pop
xor
cld
mov
push
cmp
mov
add
ret
decb
int3
and
gs
cmp
stc
sub
out
or
push
lcall
in
lcall
stos
mov
xor
repz
jo
adc
mov
out
jmp
add
mov
xchg
dec
xor
icebp
mov
fwait
xchg
mov
push
mov
cmp
andl
sub
cld
jnp
in
jle
jnp
xchg
jnp
xchg
mov
jp
xor
leave
and
addr16
xchg
push
and
pop
pop
mov
or
cmp
in
in
jnp
aad
fisttpll
testb
cmpsl
sbb
adc
aad
jg
aad
mov
lds
repnz
sub
fcompl
aad
jae
frstor
int
mov
pop
push
push
mov
pop
sub
xchg
or
stos
lcall
leave
cmp
fidivrs
mov
stc
lcall
xchg
aas
in
lret
cmp
xor
dec
repz
insb
push
mov
xor
and
in
jb
mov
out
xlat
fstpl
mov
push
pusha
jl
xor
mov
loopne
shr
and
shlb
cmpl
out
ja
stos
out
nop
push
cmpsb
mov
xor
push
push
inc
jns
lock
inc
shll
icebp
push
sahf
add
popa
loopne
ljmp
rcr
repnz
sbb
lea
fnsave
nop
cmp
xor
ds
mul
repnz
lret
inc
out
sub
call
jae
mov
adc
lock
out
mov
jmp
cs
fistpll
fs
mov
pop
hlt
mov
jo
dec
lret
jnp
cmp
cltd
incb
out
pop
fcmovnu
mov
add
ds
int3
call
mov
mov
stos
inc
int
jge
ss
adc
dec
pop
push
cmp
or
mov
aam
xchg
inc
and
or
jbe
fidivs
stos
xchg
sub
iret
push
clc
or
pop
clc
scas
ljmp
sub
adcb
sbb
mov
sub
xchg
cmpsb
cmp
hlt
sub
jecxz
leave
push
push
push
out
cld
fidivl
xor
jae
sbb
into
xor
xchg
pop
pusha
lds
cld
xlat
push
and
mov
mov
xchg
sahf
testb
fistpl
sub
loopw
adc
mov
add
loopne
add
add
push
test
pop
push
mov
mov
in
sbb
pop
in
pop
inc
pop
mov
or
mov
cmp
dec
or
loop
dec
push
out
sbb
out
js
loop
fcompl
add
pop
out
and
inc
dec
idiv
loop
sbb
shll
lahf
dec
adc
mov
pop
out
jbe
ljmp
xchg
ljmp
cmc
jns
push
fstpt
jle
adc
ret
dec
dec
jecxz
movsb
cmp
mov
stos
xor
dec
outsb
xchg
jbe
cmp
lahf
cmpsb
int
push
push
dec
xor
adc
aas
leave
jno
icebp
test
imul
or
jmp
out
ja
repz
iret
jmp
call
fstpl
mov
pop
pop
jmp
das
push
pop
inc
out
jae
mov
into
fiadds
sahf
mov
out
ja
out
and
idivb
jnp
mov
sub
mov
std
mov
je
jno
jmp
fstpl
arpl
push
mov
out
lods
jno
popf
jmp
in
mov
imul
gs
pop
ja
lock
cwtl
jl
push
aad
imul
adc
mov
dec
ret
pop
lods
push
shll
arpl
sti
mov
aam
dec
repnz
jbe
hlt
cmpsb
aaa
outsl
fldcw
sub
repnz
repnz
xor
pop
xor
mov
adc
pushf
dec
xchg
inc
xchg
imul
xor
jp
jmp
cmp
xchg
or
bound
jnp
cmp
mov
or
leave
mov
repz
mov
idivl
ret
test
shrl
stos
stos
insb
out
lret
divb
sbb
mov
addb
shl
out
sub
movsb
fstpl
imul
jb
imul
dec
mov
jbe
in
push
inc
loope
sub
scas
mov
out
sbb
fucom
mov
loop
movb
fists
imul
fcoms
xchg
jo
cmp
lcall
push
mov
lret
fildll
or
mov
cmc
ds
and
xchg
jle
nop
mov
stos
sub
jae
rcrb
cmpsb
inc
cmpl
inc
in
add
or
mov
enter
jnp
in
mov
sub
mov
scas
iret
jno
sub
lahf
leave
add
mov
out
mov
scas
inc
jne
outsb
adc
pop
cld
lcall
sub
ds
dec
imul
pushf
cmp
sti
jae
adc
cmp
pop
add
subl
inc
jl
xlat
push
out
or
jmp
rcrb
pop
xchg
mov
xchg
cmpps
or
shr
scas
sbb
jg
les
sbb
jnp
iret
cmpsb
jae
dec
shlb
cmp
mov
scas
jl
adc
dec
ja
cmp
stos
leave
mov
ljmp
popf
fcomps
adc
jnp
lahf
dec
leave
les
rolb
insb
mov
inc
test
and
lret
mov
cmp
ja
in
icebp
pop
or
inc
and
dec
push
shl
mov
sub
jmp
cmp
jecxz
test
addl
xchg
mov
pop
jae
popw
mov
into
cmc
dec
mov
fstpt
aad
jne
sahf
out
or
data16
ret
pop
pop
ss
rcrb
fnstcw
test
or
dec
cmp
pop
pop
lret
shrl
inc
lock
pushl
ja
push
arpl
inc
pop
cli
pop
jnp
hlt
mov
rcrl
and
push
push
or
jns
cmp
mov
jb
ja
addr16
ljmp
out
jmp
cld
sarl
mov
stos
inc
xor
pop
repz
mov
lcall
mov
mov
aad
aas
mov
and
cs
cli
and
in
mov
inc
stos
cmp
push
jnp
pushf
sub
stos
push
jmp
fstl
loop
sub
lock
or
xchg
clc
dec
adc
adc
or
outsl
or
flds
add
out
fmuls
jno
sarb
mov
jp
sbb
jle
adc
repz
jle
out
push
pop
inc
cmp
mov
repnz
stos
into
cltd
pushf
push
hlt
xchg
adc
mov
push
notl
mov
sub
mov
jmp
mov
jg
ja
pop
cmp
pop
imul
popa
fstpl
loop
sub
sahf
stos
mov
in
xor
dec
sbb
andb
das
movsl
mov
sbb
aad
std
adc
divl
xchg
pop
and
jg
movsl
adc
decb
imul
sub
push
lahf
mov
sbb
out
ret
mov
mov
add
pop
not
ss
scas
in
cmc
hlt
out
xchg
xchg
jno
inc
repz
inc
push
jne
loope
jno
stos
out
dec
push
dec
mov
int3
pushf
mov
mov
das
in
cmpsb
movsl
in
mov
add
fimull
in
jp
mov
xor
fneni(8087
jle
mov
xor
rorb
inc
pop
mov
mov
mov
cld
pop
sbb
out
adc
cmp
shlb
jmp
adc
jbe
out
or
stos
frstor
xor
cli
sub
scas
jg
xchg
incb
mov
jmp
repz
movsb
adc
sti
sbb
loop
lret
add
or
xchg
push
imul
xlat
lock
inc
rorb
sub
mov
imul
sub
ds
dec
shll
xor
fbld
jbe
ret
sub
ret
jg
mov
cmp
jle
outsb
data16
xchg
and
sbb
out
iret
inc
jae
pop
dec
ljmp
jecxz
std
mov
sub
movsl
push
negl
sbb
add
das
mov
out
stc
aas
repnz
cli
xchg
repnz
lret
test
push
mov
cmp
xchg
pop
xor
xor
push
or
stos
inc
in
orb
mov
shll
push
cmp
add
and
mov
pop
in
ja
lods
mov
xchg
xchg
ja
add
aaa
adc
jae
insb
or
out
stos
in
jno
fucomip
int
mov
sub
pop
sub
jge
insl
pop
mov
in
cmp
push
mov
ja
sbb
jns
int3
mov
mov
lret
pushf
ja
mov
jmp
mov
aaa
dec
mov
negb
loopne
or
and
iret
inc
repnz
jns
fbld
lret
sub
push
mov
mov
mov
imul
dec
stos
bnd
mov
das
imul
pop
mov
paddusw
out
out
ja
lahf
or
int
jnp
mov
mov
sub
jbe
jecxz
es
mov
xchg
jbe
aas
idivl
outsb
ret
sub
lcall
push
jnp
mov
mov
lods
ja
cmp
insl
jnp
mov
aad
xor
sbb
cmp
mov
fdivrl
out
jnp
mov
insb
ja
cmp
in
imulb
sbb
or
mov
pop
fucomip
test
rcll
scas
jecxz
stos
cmpsl
jae
lahf
jnp
mov
pop
jbe
fwait
dec
fistpll
in
imulb
jae
mov
ja
mov
out
jnp
mov
mov
lahf
or
sub
pop
aad
aas
mov
xor
cmp
dec
into
idivl
and
aaa
in
imul
adc
out
add
out
test
leave
pop
jnp
dec
or
int
pop
sub
gs
xlat
loopne
or
mov
es
xchg
mov
or
imul
pop
cld
andb
popf
lds
mov
in
movsl
mov
cmp
pop
pop
sub
das
inc
aas
mov
jp
fldt
test
cli
lock
push
xor
xor
cmpsb
adc
aad
std
out
pushf
int
test
dec
out
sbb
insl
sarl
fwait
ret
loopne
jl
jae
xchg
dec
pop
iret
aaa
or
js
pop
ljmp
pop
aam
xchg
ds
pop
push
test
inc
xchg
std
psubd
jmp
add
sti
push
das
xchg
push
and
sbb
loopne
cs
sti
mov
adc
add
ret
adc
lods
or
repnz
and
jg
cli
push
stc
clc
adc
cmp
mov
imul
add
cs
rol
inc
jl
ja
cmpsl
push
jbe
subb
lock
pop
add
mov
jecxz
add
inc
pop
shl
and
daa
push
pop
mov
frstor
mov
cmp
lahf
dec
leave
mov
call
aam
pop
popf
adc
icebp
push
pop
cmc
pop
iret
mov
sahf
sarl
xchg
mov
stc
push
jle
daa
inc
cld
add
mov
insb
xchg
lret
jne
sbb
lods
scas
ss
push
sbb
mov
hlt
cs
or
mov
out
mov
idiv
shrl
mov
movsl
fbstp
addr16
scas
scas
divb
mov
stos
dec
loop
int
pushf
outsl
popf
call
pop
fidivrl
jne
pop
jno
mov
mov
mov
into
dec
popa
in
jmp
dec
aad
loop
stc
cmp
scas
jnp
cmpsb
leave
cmp
inc
adc
sahf
add
mov
pop
scas
mov
out
pop
mov
ficompl
iret
data16
int3
aad
pop
xchg
dec
stos
stc
adc
fdivrl
dec
dec
insb
scas
in
arpl
stc
rcrb
ret
mov
and
out
bound
and
push
mov
jbe
sub
mov
dec
sbb
inc
push
push
dec
dec
out
mov
mov
test
jp
pushf
inc
mov
outsl
sub
or
hlt
xchg
stos
inc
test
es
movsb
xchg
cmp
push
movsb
ja
jge
mov
xchg
sub
cmpsl
jmp
lods
imul
pop
dec
mov
ds
in
shr
insb
fldl
in
pop
cmp
in
sahf
dec
scas
jmp
out
loopne
cmp
and
stc
test
and
ret
shrb
mov
lods
jge
shll
subl
mul
ds
pushf
cmp
xchg
adc
sbbl
out
test
clc
pop
out
hlt
push
stos
pop
xchg
jae
dec
push
jbe
pop
mov
insb
push
inc
mov
in
jbe
sahf
pop
test
loope
out
in
push
mov
mov
mov
jecxz
dec
imul
xchg
pop
jbe
sub
loopne
scas
mov
aam
cmc
jnp
out
outsl
scas
fistpll
push
cmp
or
ret
inc
inc
mov
push
mov
mov
xchg
cmp
or
mov
aam
rcrl
popf
cmp
dec
test
cmpsb
mov
stc
jle
fsts
sub
fwait
adcb
sbb
or
pop
jbe
push
fdivr
or
adc
push
scas
out
scas
jge
sbb
cmp
ds
imul
push
xchg
pop
shrl
sub
sub
mov
out
pop
ret
mov
or
in
mov
xor
in
adc
cmp
mov
and
mov
cwtl
lock
mov
in
inc
mov
adc
cld
outsb
fldt
leave
and
sbb
mov
out
cmp
and
js
mov
mov
push
mov
fld
add
idivl
adc
push
inc
mov
mov
lock
xchg
sahf
incb
aam
test
popa
jns
out
mov
aas
pop
sub
scas
push
xor
cmpsb
arpl
fcomi
push
and
stos
add
mov
mov
je
in
arpl
jne
in
sub
or
and
pop
mov
loope
daa
inc
ss
cmp
inc
add
inc
dec
adc
mov
cs
push
sub
inc
jne
loopne
in
into
ja
arpl
je
dec
pop
sub
adc
cmp
je
xor
xchg
popl
mov
aas
mov
sbb
imull
popf
int
clc
jge
pop
pop
or
add
mov
sbb
mov
inc
cmp
pop
push
loope
notb
and
out
rcrl
stos
movsb
pop
push
sbb
test
out
mov
shr
inc
xchg
stc
mov
rcrb
mov
xchg
loop
xchg
push
imul
jmp
fistl
pop
or
xchg
xor
les
movsl
int3
cmp
fnstsw
inc
fbstp
insb
pusha
mov
insb
jae
push
or
or
std
xchg
xor
pop
jo
mov
rclb
mov
icebp
jl
scas
cltd
jo
pop
pop
fnstcw
ficompl
in
ret
movb
fstpt
push
dec
add
xchg
out
mov
js
lahf
daa
push
mov
dec
pushl
daa
ljmp
sti
mov
repnz
and
push
jnp
mov
in
inc
aas
or
push
cmpsb
stc
dec
out
mov
xchg
daa
pop
sbb
sub
loop
push
jp
arpl
add
dec
negl
or
fbstp
clc
out
mov
sbb
mov
xlat
out
movsl
adc
sbb
sbb
mov
loope
xor
sti
sarl
fcomi
push
stc
xchg
jecxz
sub
js
sahf
fisttps
fstps
jnp
mov
pop
out
cmp
lahf
lahf
loope
pop
fisttpll
dec
out
mov
push
nop
or
repz
push
sub
sahf
sbb
mov
rcll
fldl2e
sub
rcl
mov
sub
in
fsubrs
scas
lock
enter
xchg
mov
repnz
xchg
push
hlt
mul
mov
sti
repnz
inc
imul
mov
imul
dec
outsb
nopl
jbe
xchg
xchg
mov
jnp
fldl
scas
fdivr
fsubp
mov
sbb
ret
jnp
stos
adc
push
cmpb
sub
ljmp
sbb
xor
add
scas
jno
sub
iret
add
loop
pop
pop
subl
mov
mov
mov
mov
mov
cmp
pop
outsl
leave
inc
pop
lods
push
rcr
cmp
fcompp
pop
pop
mov
cmc
divps
cmp
lahf
mov
cmpsb
pop
ret
iret
call
mov
stos
pop
add
push
dec
xor
repz
out
xor
int
mov
push
popa
imul
xor
adc
pop
pop
xchg
add
rep
imulb
cmpsl
lahf
add
mov
movsl
insl
negb
sub
scas
push
pop
mov
mov
es
leave
and
cmp
and
call
cmpb
fidivrs
cs
pop
ljmp
cmp
xchg
mov
clc
lock
xor
mov
in
add
pop
aaa
scas
xchg
fsubl
pop
scas
cs
jmp
or
out
pushf
jne
and
jne
ficoml
hlt
fisttps
mov
adc
add
insl
jge
xchg
cmpsb
adc
leave
jae
xor
sahf
and
mov
jge
mov
push
ds
cld
in
cmp
es
outsb
mov
mov
xchg
ja
gs
mov
xor
aaa
cmp
lahf
mov
leave
iret
test
sti
pop
out
xor
adc
test
mov
insl
call
std
sub
sbb
fbstp
fdivr
stc
ficoms
mov
fistl
xor
scas
cmp
and
mov
lods
out
pusha
or
fsubrs
jns
psadbw
jecxz
xlat
jl
repz
xorl
xor
shll
add
xabort
neg
aam
dec
jae
shll
leave
sbb
mov
jne
imul
pop
scas
jno
shll
adcb
addr16
jne
jmp
aad
xor
or
das
or
shlb
add
shlb
adc
mov
mov
sbb
filds
enter
xchg
fidivrs
movsl
mov
xor
fildll
jl
into
mov
loopne
add
test
fwait
push
in
push
add
jo
ficompl
mov
lahf
lahf
shl
xor
aad
and
and
cmp
push
xlat
mov
push
sar
jl
dec
pop
cmp
call
sbb
int3
mov
xor
popl
cmpsl
sbb
pop
jg
movsb
data16
arpl
mov
testb
jge
push
in
dec
ja
filds
out
out
aad
lds
scas
xchg
pop
mov
gs
push
imulb
iret
ds
jae
fildll
bnd
push
lcall
out
cwtl
jmp
bound
out
pop
push
fcomps
dec
rcl
pop
xchg
lds
scas
cmpsb
fsqrt
dec
push
ljmp
xor
mov
adc
mov
pusha
testl
outsb
mov
ljmp
inc
sbb
mov
cmpsl
sbb
mov
sbb
frstor
jg
call
fcmovu
mov
rolb
pop
out
pop
mov
and
push
add
scas
pmulhuw
sar
mov
shll
cmpl
push
mov
push
inc
mov
cmp
mov
fistpll
gs
iret
cmpsb
mov
lahf
jmp
push
jno
xchg
jno
mov
or
mov
xor
jge
data16
mov
sub
cmpsb
ljmp
sbb
inc
shrb
mov
ds
in
pop
iret
dec
sub
clc
xchg
xor
jge
mov
out
ror
or
mov
xchg
bound
dec
cmp
jge
dec
fsincos
rcr
std
xchg
adc
add
push
inc
dec
ret
sbbl
testb
fisttps
punpckhdq
std
int3
pop
outsl
imul
sbb
mov
sti
xchg
scas
jecxz
in
loope
xor
subb
xor
mov
dec
sbb
sti
or
fldcw
int3
std
lahf
xchg
stos
pop
int3
or
mov
xorps
test
icebp
mov
dec
jnp
cmp
repz
mov
popl
push
xchg
lahf
mov
data16
xlat
sbb
push
adc
lahf
dec
out
push
sbb
movsl
push
mov
fstps
push
stc
repz
enter
or
rcrb
js
ja
outsl
pop
mov
std
jge
repz
test
inc
popf
xchg
add
inc
mov
pop
into
lret
imul
aaa
insb
and
aam
push
in
sub
jg
jo
mov
fsubl
iret
add
popf
sub
iret
push
or
mov
fsts
jecxz
repz
push
inc
testl
xorb
dec
dec
inc
mov
stos
cmpl
fstl
ficoms
insl
adc
xchg
lahf
aam
in
outsl
popa
mov
lret
mov
repz
jle
sahf
ljmp
jbe
mov
and
jb
test
mov
jg
movsb
out
test
scas
or
add
out
imul
adc
icebp
xor
push
dec
cmpsl
pop
add
push
jmp
add
adc
aad
shl
push
mov
fcom
cmp
push
aaa
cmc
pop
pop
sbb
test
lods
mov
mov
into
movsl
ljmp
out
cs
shlb
adc
pop
add
ds
mov
push
jno
cli
xchg
and
pop
pop
mov
jne
pop
jp
test
aam
inc
xchg
xlat
iret
lret
shrl
pop
or
movb
jne
divl
mov
jmp
xchg
mov
aas
rclb
and
adc
shll
or
je
cmp
inc
dec
lret
ljmp
shl
rcrb
pop
inc
mov
int3
les
or
push
jmp
scas
and
std
xlat
movsl
insl
scas
fildl
adc
popf
lcall
cli
dec
mov
mov
and
lahf
push
daa
enter
das
imul
icebp
push
mov
iret
cmpsl
scas
pop
aad
cmp
fisubs
mov
add
sbb
sub
jb
adc
das
xchg
mov
pop
or
adc
les
clc
or
rolb
mov
outsl
sbb
stos
mov
sub
mov
add
fidivrl
and
sbb
ljmp
fnstsw
xor
or
mov
mov
mov
jnp
dec
lret
or
push
pop
divb
xchg
and
cmpsb
xchg
roll
pop
xchg
imulb
dec
cs
mov
dec
xor
and
cwtl
icebp
rcrb
lea
mov
adc
test
xlat
dec
mov
out
nop
xlat
fwait
repz
stos
cs
push
and
in
sub
pop
pop
adc
out
push
mov
nop
push
pop
xor
xchg
stos
bound
loop
out
subl
inc
fsubl
ret
or
sub
cmp
sub
mov
push
mov
leave
xchg
int
adc
or
fisttpll
aas
and
mov
mov
pop
sub
call
xchg
dec
call
add
mov
adc
fwait
push
repz
shl
stos
fstpt
sbb
or
add
add
mov
fincstp
fistpl
jecxz
mov
jb
adc
jmp
out
pop
aaa
stos
sbb
add
mov
and
in
lahf
lock
jnp
sahf
mov
push
add
mov
cmp
cli
xchg
sarb
pop
int3
scas
inc
dec
adc
and
mov
outsb
lret
imul
or
push
sbb
xchg
or
sahf
imul
jbe
loope
dec
mov
jnp
hlt
test
pop
je
mov
mov
in
lahf
sbb
std
fistps
xchg
cmpsl
jl
enter
ljmp
ja
push
push
arpl
xor
or
imul
rol
and
das
test
cmp
int3
pop
cs
pop
adc
bound
fsubr
pop
jne
pop
mov
jg
iret
in
hlt
cmc
lahf
out
test
jb
rcr
jo
imul
popf
js
stos
movsl
sahf
push
add
lea
mov
sub
push
test
push
mov
inc
gs
xchg
dec
pop
aas
inc
ja
lock
mov
mov
bound
xchg
pop
add
and
imul
or
push
shlb
jbe
lahf
mov
arpl
ja
mov
iret
cmpsb
test
insb
xchg
xchg
mov
stos
shll
mov
jne
sbb
sbb
pop
ja
mov
fs
push
fcompl
insb
inc
push
testb
hlt
popa
insb
xor
pop
dec
cmp
adc
mov
scas
and
push
out
mov
mov
cmp
mov
testl
negb
xchg
cwtl
xor
push
in
loopne
imul
loop
fsubrl
scas
adcl
push
xlat
je
imul
mov
cmp
int
mov
addr16
mov
xchg
lcall
mov
push
or
shlb
jb
je
inc
lret
aas
popf
das
aam
cwtl
int3
xchg
iret
jbe
in
adc
lods
add
outsl
pop
sarb
bnd
shlb
ret
lea
stc
jbe
scas
sbbb
add
lret
inc
int
inc
cltd
arpl
shll
sub
enter
mov
idivb
add
int3
and
test
scas
lods
enter
xor
fwait
push
mov
das
adcl
cs
ja
cmp
aaa
sub
hlt
inc
scas
ficomps
push
in
int3
adc
mov
cli
in
adc
icebp
in
stos
ret
movsl
push
aas
scas
stc
leave
aaa
out
lcall
add
fisttps
adc
outsl
rolb
aas
xor
pop
daa
lcall
dec
or
ljmp
inc
xchg
sbb
decl
popf
or
jecxz
icebp
idivb
xchg
xlat
sbb
mov
hlt
enter
pop
gs
jnp
xor
pop
out
jne
sub
and
mov
out
mov
push
mov
add
test
ja
leave
dec
push
fisttps
mov
sbb
repnz
mov
jnp
sbb
xorl
in
dec
clc
outsl
and
mov
dec
lds
lds
into
imul
es
mov
ljmp
inc
and
mov
call
mov
cmc
adc
jmp
pop
jns
push
pop
xchg
add
lods
xchg
pushf
div
mov
inc
mov
out
jnp
adc
push
iret
iret
cli
sti
dec
popa
shll
mov
lret
lods
jl
cmp
ds
aad
loopne
scas
add
das
lahf
and
mov
mov
fldl
sbb
lahf
push
loope
popf
fstpl
loope
lock
out
xlat
jns
sub
push
sti
out
clc
xor
xlat
cmpsl
stos
test
divl
jbe
xchg
pop
jnp
hlt
pop
stc
outsb
jae
jle
es
fists
testb
adc
iret
inc
jb
insl
mov
or
adc
std
push
cmp
in
aaa
mov
mov
lea
jge
xlat
mov
stos
mov
mov
out
jnp
in
mov
mov
jg
mov
mov
cmp
bswap
fldenv
fistpll
out
jg
jl
test
mov
cmp
int
lcall
inc
scas
shl
frstor
mov
popf
outsb
lods
aaa
int
icebp
dec
mov
mov
out
outsb
xor
in
ja
fwait
int3
iret
das
pop
maxps
cmp
sub
push
xchg
aas
div
insb
adc
jl
jmp
pop
aas
sbb
in
push
and
mov
cmpsl
pop
xlat
shrb
mov
adc
xchg
inc
xchg
das
std
out
xchg
leave
cmp
fucomip
lret
pop
xor
sti
ficompl
lahf
dec
cli
xchg
out
in
daa
push
inc
aad
jmp
cmpsl
rorl
cli
popf
inc
scas
cmp
fistl
or
xchg
add
or
push
pop
lds
jecxz
test
pop
pop
inc
aam
in
gs
dec
insl
xchg
jp
pop
mov
mov
es
test
vmwrite
ror
jnp
pop
adc
push
pop
out
xchg
mov
rorl
fistl
out
and
in
ljmp
fnstcw
mov
das
mov
mov
bound
outsb
jbe
sahf
mov
mov
pusha
aaa
cli
lea
outsb
xchg
ja
sbb
shlb
add
ja
dec
insl
xchg
mov
cs
sbb
fsub
outsb
jle
cmpsl
pop
cmp
in
loop
jae
mov
scas
ss
fwait
jg
mov
repnz
jae
mov
sbb
in
mov
mov
jg
push
mov
ret
jnp
xor
lcall
lods
lret
out
movd
addr16
in
sub
loop
jae
fstl
out
mov
fistpl
insb
iret
faddp
loop
jnp
mov
sbb
ss
add
jecxz
lods
jl
shlb
pop
and
sub
jb
and
mov
xchg
das
pop
cmp
jnp
jne
bnd
out
jb
xchg
in
movsl
icebp
lcall
pop
jl
in
loop
outsl
sti
mov
call
jl
mov
stos
fiaddl
das
xor
fsubrp
cs
jmp
ret
in
fisubl
pop
push
jge
stc
in
out
sti
nop
and
lock
pop
lods
test
xor
out
loopne
ds
scas
loop
or
jo
jnp
cs
loop
xchg
mul
push
cmc
inc
sub
cmp
sbb
sub
addb
pop
fcom
jno
push
and
leave
or
stc
or
shl
shll
fistpll
jmp
movl
jno
push
and
out
adc
arpl
sarb
mov
add
cmpl
sti
or
jg
scas
pop
in
or
dec
mov
aad
iret
pop
jo
mov
or
mov
fidivrs
jmp
loope
sbb
leave
pop
mov
mov
imul
insb
clc
aaa
pop
add
sub
dec
dec
stos
out
out
and
lahf
das
cmpsb
jl
pop
mov
push
aas
mov
pop
pop
ljmp
pushf
pop
ljmp
jae
arpl
das
sahf
xor
add
stos
cld
mov
pop
int
add
in
pop
pop
push
fistl
sub
or
lahf
cld
imul
dec
js
out
push
das
or
mov
sbb
push
xabort
pop
loopne
lahf
ja
cmp
pop
xor
subl
pop
xor
and
mov
add
out
pop
in
ljmp
dec
insl
imul
add
mov
neg
fildll
cwtl
int
xchg
sbb
add
jnp
cmpsl
in
fcmovnu
pop
xchg
out
mov
imul
pop
jp
adc
mov
and
sbb
aas
js
adc
push
lcall
sarb
fnstenv
leave
push
movsb
aaa
negb
push
pop
ss
dec
lret
pop
jb
loopne
xor
outsb
stos
lds
in
lret
out
aas
xchg
mov
adc
xor
mov
pop
and
pop
sub
mov
sbb
jne
loopne
sbbb
jmp
jmp
sahf
arpl
das
lock
jo
mov
ret
pop
test
mov
sbb
mov
lret
inc
push
es
fldt
jg
or
jg
mov
subb
xchg
xchg
pushf
push
out
cmp
mov
ret
cwtl
jl
jbe
add
and
mul
lahf
mov
test
scas
fbld
dec
mov
mov
fistpl
fbstp
or
jbe
pushf
pop
jp
mov
mov
fidivl
shrl
cmp
adc
dec
ror
das
popa
in
mov
pushf
jnp
jnp
dec
shl
out
mov
mov
sub
int3
mov
ror
xor
scas
rcrb
pushf
insb
test
iret
in
out
sub
outsb
push
mov
popf
and
aad
xchg
pop
cltd
loopne
xchg
push
jecxz
mov
push
xchg
fbstp
add
mov
pop
fnsave
shlb
fcompp
jnp
in
mov
bound
es
divl
xlat
xchg
mov
pop
sub
fisttps
mov
sub
cmp
sarb
or
out
bnd
scas
int
sub
push
movsb
mov
pop
call
xchg
mov
dec
cli
sbb
xchg
in
mov
xchg
jg
xchg
add
faddl
insl
rcrb
xor
and
jecxz
dec
xor
mov
out
or
mov
outsb
leave
pop
jmp
jle
mov
adc
sbb
int
pop
outsb
fistpl
sbb
das
jns
xlat
adc
pop
add
mov
cld
in
mov
cwtl
aad
iret
jmp
cmp
jb
lods
xchg
mov
xchg
sub
jmp
orl
xchg
sub
loope
xchg
jmp
push
lret
mov
add
dec
mov
push
mov
mov
mov
ds
jle
mov
jnp
out
push
push
mov
adc
nop
adc
xlat
mov
adc
mov
xchg
dec
shlb
ss
fwait
in
xchg
inc
leave
dec
jmp
lds
cmpsb
jne
lret
in
std
mov
fildll
mov
loop
jae
cmpsl
addb
iret
repnz
int
pop
in
fbstp
jge
and
ds
mov
jg
jmp
lret
mov
push
fmulp
in
jae
negb
lcall
pop
push
pop
int
or
mov
pop
imul
in
loop
loop
fcmovnb
inc
out
sti
rcr
sub
pop
filds
xor
js
ret
inc
mov
mov
cmc
pop
cwtl
repz
in
mov
mov
jmp
xchg
mov
pop
scas
js
mov
inc
dec
out
lods
out
fistpl
repz
stc
pop
mov
xlat
fistps
pop
push
repz
push
jg
jbe
mov
cmpsl
scas
pop
out
mov
decl
sbb
mov
pop
adc
in
shl
aas
das
popl
imul
ja
fisubl
sub
test
outsl
popf
idivl
fwait
outsb
xor
pop
mov
push
mov
aaa
shr
aas
or
sub
fwait
pop
jns
or
xor
stos
mov
sub
or
iret
or
mov
push
mov
cs
dec
test
jg
in
push
stc
and
pop
lret
adc
mov
loop
mov
cltd
mov
push
scas
aam
xor
pop
mov
push
sbb
pop
imul
call
sub
dec
imul
scas
sub
push
insb
cmp
fnstsw
insb
sti
jge
call
stos
fsubs
fsub
cwtl
pop
lahf
jnp
pop
test
test
and
js
and
dec
mov
jg
hlt
mov
inc
scas
mov
pop
push
ljmp
mov
rcrl
repz
test
pushf
mov
cmp
faddp
movhlps
rorb
or
bound
and
fwait
scas
fldcw
mov
fldl2t
mov
aad
and
orl
and
pop
pop
push
mov
pop
xor
pop
dec
mov
adc
cmpb
sbb
add
sbb
jmp
sbb
stos
fbstp
adc
lret
std
and
xchg
out
add
jbe
mov
not
fistps
inc
cmpsb
dec
sub
mov
mov
loop
adc
mov
rcrb
mov
jo
arpl
add
bound
mov
sbb
fisttps
adc
test
xor
sbb
xchg
push
idivl
out
dec
daa
jbe
mov
dec
jmp
outsl
loopne
fisttps
push
popf
xlat
cli
and
outsb
mov
mov
xchg
fiadds
or
fwait
aam
mov
aas
out
push
or
out
divps
es
ja
aaa
out
out
pushf
popf
imul
ja
out
fwait
jl
xor
push
das
repz
xor
fistpl
out
aad
sub
sub
and
sub
and
stos
mov
or
mov
sub
inc
in
call
pop
add
xor
roll
xor
popl
mov
imul
movsb
in
mov
jnp
sbb
xchg
cwtl
dec
jae
push
jmp
loop
mov
out
mov
mov
out
loopne
sub
xor
mov
dec
sub
lret
mov
lahf
pop
sub
fsubl
mov
add
fcmovnbe
lock
pop
repnz
cltd
scas
fstpl
sub
lcall
js
cwtl
add
mov
popa
xor
sbb
add
jnp
or
or
in
add
sub
inc
scas
and
js
and
fisubrs
fcoms
xor
push
add
sub
or
pop
fnstenv
mov
xlat
push
stos
imul
add
xor
in
enter
out
fstp
mov
mov
in
dec
adc
xor
cmp
clc
inc
cmp
pop
mov
insb
add
rorb
scas
shrl
cld
das
stc
leave
lret
fldcw
jl
shlb
pop
mov
jle
pop
mov
stos
sbb
dec
lods
sbb
lock
aad
and
dec
fstl
fdivrl
cwtl
mov
xor
mov
push
mov
insl
leave
int3
stos
sbb
fstp
cmp
dec
mov
jae
dec
jg
pop
mov
into
out
jmp
dec
dec
push
iret
mov
mov
jp
push
pop
out
jne
cmpb
pop
loop
mov
inc
stos
jg
cmpsb
notl
adc
aas
imul
in
sbb
xchg
sbb
cmp
stc
loopne
mov
mov
push
dec
xchg
iret
add
dec
outsl
cmp
subb
std
fdivl
out
paddsw
push
sbb
and
cmp
ror
lds
shl
xor
ficomps
or
fwait
jns
outsb
shr
mov
stc
in
cli
ds
dec
ffree
pop
add
shl
sub
and
adcl
addr16
fistpl
push
sbb
test
adc
scas
xchg
pusha
pop
push
mov
sub
xor
dec
pop
mov
je
leave
scas
dec
cmp
outsb
pop
add
shlb
dec
xchg
pop
scas
sbb
stos
mov
lods
pop
jo
mov
mov
outsb
pop
sub
rcll
orl
imull
icebp
shrb
test
mov
jmp
scas
sub
jne
fildll
add
mov
mov
pop
mov
add
in
pop
rolb
icebp
or
in
fstps
sbb
push
mov
xchg
push
fldt
ss
in
arpl
xlat
stc
in
in
add
inc
lcall
xlat
push
inc
ja
stos
in
scas
sti
and
ret
pop
adc
out
out
ret
mov
and
shrb
mov
mov
jo
mov
push
mov
into
ja
jbe
leave
lds
imul
cmp
cmpsl
jmp
push
arpl
lods
mov
inc
and
cmp
int3
jns
xchg
data16
cli
dec
scas
pop
addr16
jg
add
enter
outsl
call
push
mov
pop
pop
mov
xor
mov
ret
lds
jne
push
add
shlb
pop
add
mov
cs
xchg
test
aam
mov
push
movsb
pop
call
pop
adc
inc
pop
les
jnp
push
sahf
and
dec
xchg
and
repz
leave
sub
pusha
add
jb
ret
sbb
or
jb
mov
sar
enter
movsb
movsl
inc
fwait
mov
dec
rcll
mov
jl
clc
push
movsb
mov
mov
mov
pop
mov
adc
push
lods
cmpsb
cmp
and
rol
insl
lods
es
clc
push
scas
lds
jb
cs
leave
rcl
sub
push
iret
and
std
bound
insb
leave
popf
es
push
and
enter
add
mov
popl
xchg
fs
clc
stos
jp
mov
cmc
imull
jmp
lods
ffreep
int3
out
add
mov
fcmovu
stos
xchg
xor
xchg
iret
shlb
dec
jno
cmp
pop
mov
adc
mov
lods
gs
ret
fdivrl
dec
insb
mov
lods
stos
inc
in
adc
cmp
loop
mov
lret
cmc
xchg
jb
or
outsl
fisubrs
push
cmp
add
xchg
lods
fcmovu
push
fcoms
fwait
out
aas
mov
in
mov
scas
fdivrl
mov
fs
mov
sub
jne
pop
adc
push
add
sub
dec
cmpsb
and
xchg
jns
outsl
adc
mov
mov
negb
push
inc
lods
adc
sub
jg
sbb
pop
adc
jae
pop
sbb
pop
dec
xchg
mov
adc
jg
and
mov
shll
push
sub
push
add
or
int3
jbe
in
sub
mov
and
aaa
in
jmp
lods
arpl
jecxz
mov
outsb
mov
shll
xor
imul
cmpsl
test
dec
pop
add
pop
filds
sbb
and
inc
aas
cmp
jae
lret
scas
cmp
push
sbb
popf
shrl
cmp
mov
sub
cmpsb
dec
jnp
sub
insb
out
xchg
shlb
sub
in
mov
fildll
sub
dec
sub
inc
out
cmc
push
mov
insl
sbb
arpl
addb
out
lahf
sahf
fdivp
dec
setne
ljmp
xchg
outsl
xlat
ficomps
add
aaa
push
pop
arpl
inc
int
aad
inc
mov
mov
mov
dec
test
movsl
test
int3
fsubrl
arpl
ret
add
aaa
push
mov
cmp
xchg
cli
or
std
mov
mov
pushf
xor
add
mov
ror
pop
lds
pop
hlt
add
dec
leave
xchg
add
sbb
ljmp
mov
fsubp
mov
sub
inc
ficomps
adc
or
rcrb
sbb
mov
or
mov
push
mov
or
push
fisttpll
xor
loopne
fstpl
dec
mov
push
xchg
or
mov
mov
jno
and
rcll
out
dec
sub
dec
loop
leavew
cmpsb
mov
mov
pop
out
mov
leave
mov
pop
scas
cmpb
aas
sbb
pop
pop
mov
xor
out
push
mov
in
fsubl
neg
push
roll
inc
iret
mov
rcrb
pop
mov
jge
xor
lock
sbb
pop
mov
pop
xchg
or
jl
fwait
out
iret
shl
xor
lock
cwtl
stos
sub
jo
movsl
push
lock
int
flds
or
mov
icebp
or
add
sub
or
push
xor
adc
xlat
loope
mov
add
aam
xchg
xchg
mov
icebp
je
hlt
sub
push
xchg
loop
lahf
adc
out
jecxz
std
add
rclb
pop
rclb
pop
sub
inc
lahf
mov
xchg
test
pushl
add
test
or
push
cmp
rcll
mov
fnstenv
not
leave
int
subl
mov
lcall
je
sub
cld
xchg
cwtl
cmp
in
pop
out
loope
cmp
imul
sub
mov
jb
hlt
pop
mov
fnsave
or
mov
fadd
jmp
fmulp
lret
fprem1
or
mov
jnp
scas
mov
ror
adc
js
aas
gs
push
sbb
mov
stc
in
pop
inc
es
add
inc
stos
mov
jns
jb
out
jnp
insl
iret
sub
cwtl
lahf
jno
rcrb
lea
adc
out
cmp
stos
ja
out
pop
add
jle
adc
and
push
insb
jo
xor
gs
push
mov
inc
lahf
cld
cmp
sbb
das
roll
cmpsb
pop
pop
fwait
mov
push
cld
xchg
fistpl
cmp
add
loope
cmp
insl
pushf
sbb
fsubs
jne
mov
inc
cmp
ja
mov
std
aam
insb
andl
scas
clc
add
mov
stos
scas
or
std
dec
sub
adc
dec
mov
jbe
pop
push
pop
das
ja
inc
dec
aaa
aad
xchg
fldcw
fwait
mov
lcall
pop
xchg
mov
sbb
or
adc
cmp
mov
stos
into
push
sahf
pushf
mov
clc
inc
repz
xchg
test
sub
lahf
push
jo
cli
mov
mov
subb
shll
mov
mov
fcoml
cmovae
inc
add
outsl
insl
pop
pop
in
outsb
aad
out
inc
pop
out
add
mov
pop
insb
std
ljmp
arpl
ret
mov
jl
aaa
fucompp
mov
in
push
inc
push
mov
ss
in
out
jecxz
popa
adc
mov
outsb
repnz
outsb
ret
lock
mov
mov
faddl
sub
xchg
imul
je
addr16
mov
xor
mov
lahf
pop
jle
popf
addb
cmc
sub
jp
mov
mov
mov
mov
mov
xor
sbb
in
ljmp
and
adc
imul
roll
sar
enter
jg
jmp
sub
cmp
mov
cs
fimull
push
sbb
mov
jle
cs
cmpsb
inc
leave
das
into
mov
push
das
stos
fisttps
fnstsw
dec
testb
mov
imul
into
or
rcr
aas
into
inc
pop
mov
insb
dec
nop
mov
mov
or
rcrl
inc
fistpll
inc
aas
pop
mov
cs
ret
adc
in
pop
jnp
ficomps
pop
mov
sahf
sti
mov
stc
popa
aas
ss
lods
pop
notb
sarl
pop
call
mov
cmpsl
std
pop
fbld
xchg
aaa
mov
inc
popf
shrb
insl
jne
in
mov
cmc
out
mov
lock
out
cmpsb
adc
jg
mov
sbb
jle
dec
jmp
xchg
icebp
add
daa
out
add
mov
loop
jecxz
jg
mov
mov
jmp
leave
and
cmpsb
iret
mov
sbb
mov
fimuls
out
cmpsb
pop
sub
xor
out
xlat
mov
inc
mov
ja
push
mov
mov
addr16
dec
subl
aaa
scas
sarl
fsubrl
bound
cmp
xchg
inc
add
stc
ljmp
mov
mov
jne
sbb
in
lods
push
sarl
scas
adc
push
cmp
sub
add
ret
adc
and
mov
cmp
add
movsl
sub
pushf
les
pop
fimull
jae
jmp
icebp
call
stos
fidivrl
push
xor
inc
push
mov
ljmp
xor
subb
vpshab
movsb
adc
insl
adc
imul
sub
jle
inc
jns
pop
imull
scas
sbb
mov
in
mov
push
popa
sbb
add
push
dec
pop
push
mov
bound
push
xchg
push
xchg
sbb
mov
push
lret
ja
mov
mov
fsub
iret
mov
or
out
cmpsb
xchg
fisubrl
cs
fistpll
clc
add
jle
mov
test
decb
std
xorb
pop
pusha
ds
rorl
lea
sub
addr16
push
filds
mull
not
sbb
fwait
imulb
pusha
or
mov
ds
push
push
cmpsl
arpl
iret
popf
or
rcrb
push
fldl
dec
lods
aaa
sarb
shlb
push
add
push
aaa
lcall
sub
jnp
es
push
push
xor
jg
xchg
add
mov
mov
push
adc
jne
dec
call
fistl
cs
rorl
out
xchg
adc
or
add
dec
mov
iret
test
sarl
xor
and
and
mov
add
insb
and
lret
icebp
or
inc
cltd
push
fcmovne
pop
push
cmp
out
test
lcall
xchg
jo
mov
cwtl
inc
dec
clc
cltd
ret
push
add
movsb
jle
sub
inc
imul
movsb
xor
mov
cmp
test
aad
xchg
cmc
mov
dec
pop
cmp
daa
cli
inc
inc
ljmp
subb
fbstp
mov
cmpsb
sbb
xor
pop
pop
pop
pop
mov
push
cmp
inc
scas
mov
out
jnp
adc
push
pushf
jecxz
fidivrl
scas
push
sbb
sbb
shl
jne
pop
xchg
je
inc
ds
lods
cmp
jge
in
int
ds
stc
lods
mov
stos
pop
arpl
out
hlt
subb
aas
mov
fdivl
leave
popf
dec
sbb
pushf
sub
daa
outsb
cmp
std
das
pop
jae
shll
pop
push
fldz
push
push
imul
leave
mov
mov
sub
out
cmpsb
aas
arpl
std
aaa
mov
mov
clc
mov
jge
jne
cmpsl
adc
and
xchg
sub
jl
push
push
out
mov
jg
call
pop
repnz
inc
adc
mov
xchg
ja
popa
divl
lods
ja
std
pop
jge
ret
decb
sbb
fldl
aam
stos
cmpl
cltd
cmpsb
mov
cli
out
mov
adc
clc
cmpsb
lea
cmp
cltd
aaa
call
ja
loope
out
mov
mov
sub
mov
cwtl
inc
jmp
pop
dec
mov
mov
push
xor
adc
in
movb
dec
push
pop
inc
jne
jmp
pusha
rorb
dec
test
pop
lahf
movsb
or
sub
jns
pushf
jge
aad
cli
cmpb
push
aas
mov
sbb
add
fisttpll
mov
gs
add
mov
insl
push
xor
lods
mov
adc
fincstp
out
cltd
push
xchg
or
icebp
inc
shrl
int3
xor
adc
jb
cmpsl
out
jle
pop
std
cwtl
or
mov
psrld
sub
cmp
jbe
pop
push
push
mov
cltd
cmp
clc
rcrl
jecxz
imul
js
je
mov
dec
dec
out
dec
mov
pop
lods
push
das
mov
inc
in
mov
xor
and
loope
dec
hlt
inc
fisttpll
insl
loop
and
xchg
cli
popf
je
and
mov
rclb
std
ja
out
pushf
out
rcrl
in
inc
roll
xor
cmp
sub
hlt
cmp
test
pusha
inc
dec
mov
mov
shrl
sbb
fstp
mov
mov
xchg
or
lds
and
sbb
mov
rorb
fmull
xlat
mov
loopne
iret
inc
mov
dec
js
scas
ds
xchg
mov
adc
lcall
out
add
or
cmpb
dec
pop
shlb
inc
test
mov
sbb
or
jne
cld
mov
popf
fbstp
xchg
mov
inc
xorb
jae
insb
cltd
xchg
push
fcomi
outsl
pop
in
sub
pop
ret
loope
sbb
dec
lods
subl
adc
mov
sub
mov
jmp
mov
pop
out
pop
adc
xchg
lret
mov
jl
sub
aam
cmp
test
test
or
mov
loop
dec
pop
rcl
test
pusha
clc
or
sub
pop
shll
notl
stc
fs
outsb
add
cwtl
adc
scas
or
leave
iret
sub
push
les
jo
out
aam
daa
imul
jnp
iret
add
dec
sub
icebp
enter
xlat
rorl
mov
mov
stos
scas
push
jecxz
add
xor
imulb
popf
push
outsl
add
into
ss
es
ss
sbb
inc
jp,pn
pop
ja
mov
es
add
test
push
jne
shr
pop
lcall
jne
jae
stos
in
sub
push
lods
icebp
or
fs
and
int3
push
bswap
lret
fsubrl
cltd
icebp
sub
mov
fnstcw
in
dec
mov
jg
mov
decl
sbb
fistl
and
add
xor
mov
pushf
repnz
cmpsl
leave
adc
mov
sarl
icebp
clc
sbb
inc
lret
loopne
sub
iret
mov
mov
mov
les
sbb
fisubrl
mov
arpl
int
push
popa
js,pt
push
pop
jne
js
jg
mov
push
dec
fcoms
stos
mov
jns
push
pop
lock
notl
mov
mov
les
arpl
mov
sti
jle
jg
sub
sbb
sub
ret
lock
mov
loopne
push
jmp
cmp
push
frstor
lahf
pushf
imulb
filds
mov
andb
imul
mov
pop
push
mov
stos
insb
loope
or
cmpl
ret
mov
sbb
arpl
stos
fisubs
sysret
adc
sbb
fmull
outsl
aas
jne
dec
jnp
out
in
jl
pop
mov
orb
jge
pop
arpl
jmp
inc
mov
fwait
insb
xchg
jl
cmpsl
mov
xchg
or
mov
stos
into
out
fisttps
sti
mov
ljmp
mov
scas
lods
inc
xchg
cli
or
dec
outsb
in
mov
and
movsl
ss
aaa
fldt
dec
add
icebp
insb
mov
mov
pop
and
enter
sbb
cmp
mov
inc
int3
sub
aad
popf
shr
mov
mov
mov
push
jno
cmp
in
or
dec
stc
xchg
ss
push
cmp
sub
fstpl
push
in
add
cltd
cmp
cmc
imull
in
into
push
mov
fwait
sti
in
shrb
out
push
add
sbb
pushf
cltd
outsb
pushf
stc
fdivrp
cli
test
and
repz
mov
pushf
fwait
lods
lods
sub
dec
dec
push
je
xor
cmp
jge,pt
popf
push
out
repz
out
fucomp
popf
vmovlhps
lret
jbe
mov
jbe
adc
push
sbb
test
int
outsb
dec
lods
pop
in
jns
sub
mov
leave
push
and
jnp
mov
fisttpll
movsb
sbb
mov
or
rclb
mov
mov
cli
outsl
mov
movsl
es
sbb
jb
mov
pop
inc
cmpsl
push
out
je
mov
push
inc
rolb
push
jmp
inc
xchg
out
fadds
das
jmp
nop
test
jnp
sub
pop
loope
ljmp
or
dec
fdivr
mov
mov
lds
test
adc
enter
mov
add
dec
int
outsl
stos
mov
add
adc
rol
sbb
xchg
mov
sti
cmp
add
lea
lcall
add
rolb
cmp
pop
rolb
test
or
lahf
decb
add
in
lret
mov
ja
sub
pop
jg
cli
pop
repz
sti
shll
das
test
aas
cs
jge
sub
dec
pop
sti
sub
mov
sbb
mov
mov
jp
imul
cmp
stc
sbb
mov
mov
mov
outsb
jae
pop
mov
out
adc
setae
pop
scas
sbb
lods
push
hlt
mov
or
mov
not
push
rolb
rorb
mov
daa
rolb
push
fcmove
sbb
lods
div
pusha
and
imul
filds
mov
testb
fsubrl
push
divb
test
mov
pop
stos
sub
out
inc
bound
pop
inc
addb
mov
fists
pop
pop
add
jae
cmp
dec
cs
xchg
out
test
xor
lahf
cmp
in
push
mov
xorl
out
pop
ljmp
sahf
ficomps
mov
outsb
pop
sbb
stc
jae
push
xchg
scas
in
iret
sbb
rolb
fdivrs
mov
adc
xorb
jbe
cmp
icebp
dec
jg
vpshld
test
push
pop
xor
adc
lock
sbb
lret
testb
push
mov
sahf
iret
leave
rcr
fstpt
sub
cmp
enter
fcomps
movsl
cs
test
pop
jge
jge
cltd
mov
fcomi
jl
pushf
jbe
sbb
lods
mov
test
xchg
ds
xlat
jb
mov
push
push
addr16
mov
mov
mulb
mov
jge
mov
icebp
or
mov
sub
inc
fdivrp
cmc
ror
cmp
into
xchg
pop
push
lcall
je
out
xlat
push
pop
ret
mov
enter
xchg
sub
shrb
mov
fmul
fsin
sbb
mov
cmp
test
add
adc
mov
xor
mov
adcb
jnp
jge
jns
fnsave
ret
push
mov
dec
mov
cmp
mov
and
cmp
and
and
dec
fisubs
jg
fcom
fisttpll
testl
add
shll
mov
in
aaa
cmc
lcall
mov
int3
imul
stos
in
cmp
mov
adc
mov
sbb
insl
dec
cmp
xor
das
sbb
jp
mov
fisttpl
pop
dec
mov
call
xor
push
lcall
out
or
syscall
les
std
ja
test
or
ds
sti
cmp
out
jmp
gs
call
sbb
pop
inc
push
or
xchg
roll
scas
and
cmp
movb
pop
mov
pop
jle
fistpl
imul
pop
imul
mov
mov
pop
xlat
add
push
xlat
fidivrl
fdivrl
test
xchg
cmp
pop
jnp
xchg
mov
mov
iret
jle
cltd
sbb
repnz
out
icebp
clc
mov
cmp
jmp
jnp
pop
pop
movsl
sbb
imul
lahf
mov
mov
jecxz
out
subl
pop
sahf
add
leave
push
lahf
mov
pop
cmp
xchg
or
dec
out
aad
cmpsb
mov
pop
fdivl
test
popa
lcall
pop
mov
cmp
xor
idiv
scas
clc
scas
sub
pop
incb
ljmp
adc
mov
cli
insl
jnp
or
xchg
xor
idiv
jle
addr16
push
xchg
sti
jecxz
sub
imul
ficomps
jns
mov
push
and
imull
mov
pop
jne
stos
push
clc
dec
imul
pop
arpl
nop
shrl
shll
xorb
sub
mov
jmp
or
adcb
insb
mov
add
iret
pop
das
add
dec
xchg
sub
in
fstpt
cmp
rorl
fldl
mov
jge
jno
sub
test
insb
pop
jae
mov
out
mov
inc
push
int
pop
xchg
fstpt
push
fst
mov
int3
pop
or
cmp
xchg
fadd
and
cltd
test
arpl
enter
in
lods
mov
mov
jge
in
std
in
mov
jg
push
jbe
pop
pop
hlt
pop
mov
iret
ret
mov
stos
loope
pop
xchg
pop
shr
cld
inc
mov
push
stos
dec
aaa
dec
mov
sbb
fsubrl
cmpsb
ror
dec
mov
cmpb
out
test
sbb
xchg
xor
scas
cmpsb
repz
fsubrs
push
sbb
adc
daa
incb
push
test
pop
push
cwtl
pop
fucomi
ret
nop
mov
data16
out
and
push
adc
in
imul
insl
inc
mov
inc
push
inc
sub
pop
aam
std
xor
dec
aad
loop
int3
fnstenv
test
dec
xchg
pop
pop
cmpsl
pop
mov
test
jno
mov
repnz
xor
int
cmpsb
inc
adc
sbb
pop
xor
inc
fimull
jb
jbe
das
aad
mov
in
xchg
add
mov
mov
stc
ret
add
iret
jmp
xor
es
inc
rep
mov
out
dec
xchg
mov
das
xchg
out
pop
ret
pop
add
xchg
in
fxch
sub
neg
filds
test
lods
pop
stos
in
mov
lock
xor
gs
inc
sub
push
test
xchg
mov
mov
jns
rolb
and
cltd
mov
lods
daa
data16
push
iret
xlat
xor
sub
int3
outsl
dec
mov
add
jg
and
pop
add
mov
das
shl
push
jnp
arpl
add
icebp
adc
adc
int
sar
push
pop
jnp
mov
pop
andb
mov
dec
xor
cmpsl
add
rorb
add
outsb
xchg
out
jb
mov
loop
nop
cld
hlt
cltd
and
imul
mov
div
mov
fistpl
pop
sar
ljmp
stc
je
test
cmp
dec
push
jbe
xor
outsb
pop
cmpsb
mov
xlat
negb
stos
mov
cli
pop
aaa
mov
mov
mov
clc
hlt
xchg
in
pop
pop
or
mov
dec
dec
xor
mov
jg
push
das
std
add
xlat
outsl
leave
shll
stc
je
pop
or
fidivrs
mov
add
mov
call
add
cmc
push
pop
stc
js
inc
sub
clc
inc
fs
imul
mov
sbb
subl
sbb
cli
jae
sbb
mov
in
into
insb
cmpsl
pushl
jg
fistps
add
mov
loopne
cmp
jns
mov
mov
mov
orps
out
lahf
mov
fdivrs
push
inc
mov
pop
or
mov
hlt
lahf
cld
lock
popf
xlat
xor
push
fisttps
mov
fsts
mov
out
inc
dec
jmp
out
jecxz
jge
sti
loopne
leave
xchg
fistl
mov
das
negb
scas
aas
adc
int
cmpsb
adc
cltd
rcrl
and
sbb
xchg
cmp
lret
cltd
cmp
mov
sti
dec
ret
lods
cmp
jno
jnp
into
gs
addr16
out
inc
cli
imul
mov
xor
or
mul
jbe
outsb
cmp
fistps
pop
popf
cmpsb
es
xchg
mov
pop
nop
sahf
in
mov
lods
jg
nop
mov
jnp
push
or
scas
xchg
xor
sahf
xor
negl
arpl
mov
cld
jae
mov
jnp
pop
scas
fldenv
cli
jne
sub
nopl
out
cmovnp
pop
addr16
stos
inc
dec
stos
insl
add
jbe
ficomps
movsl
pop
xor
cmp
adc
add
in
ret
push
stc
sbb
and
ret
mov
add
jae
mov
xor
cmpsl
data16
inc
xchg
xchg
push
adc
aam
shl
pop
lahf
pop
push
es
mov
ds
mov
ret
imul
das
aaa
xor
fldenv
xchg
shr
adc
out
stos
lods
ret
outsl
test
dec
xlat
jae
cmc
cmp
jno
push
sbb
sbb
inc
scas
shl
and
or
sbbl
repnz
div
imul
sti
inc
jmp
xor
addr16
push
aaa
out
pop
cltd
fildll
dec
and
mov
out
fucomi
cmp
fstpt
imull
dec
cwtl
stos
cmc
add
jl
add
mov
xor
mov
scas
cmpb
or
pop
lock
push
and
jmp
aaa
rcrl
mov
push
iret
mov
cmc
cltd
fimuls
cltd
fnstcw
add
popl
mov
mov
or
inc
rcrl
mov
repz
pop
sub
xlat
cmc
push
mov
cmp
icebp
fs
int
lods
frstor
aaa
scas
out
scas
aam
stc
add
push
insl
ret
outsl
add
in
mov
mov
jle
shll
push
mov
push
cs
cmp
into
aas
iret
icebp
inc
fistps
pop
cld
ficoms
push
lcall
dec
mov
fucomip
notb
mov
ds
out
sbb
test
arpl
sbb
aas
pop
icebp
xchg
jecxz
adc
movsb
or
cmp
das
pop
fnsave
addr16
das
cmpl
or
sarl
or
sbb
mov
test
jge
mov
pop
out
pop
inc
call
pusha
sti
pop
push
mov
xchg
mov
inc
mov
dec
inc
orb
sbb
mov
and
dec
cmp
fcmovu
push
jmp
dec
pop
sbb
push
out
jne
ja
sbb
mov
lret
mov
jg
test
mov
scas
ljmp
mov
and
fstps
shrl
mov
inc
imul
rcrb
insl
scas
pop
test
sub
cmpl
jle
enter
je
pop
cmp
popf
std
sub
push
int
mov
cmpsb
mov
ret
rcrl
jge
jae
lahf
ret
leave
xor
fidivl
out
rcpps
dec
rcr
push
inc
rorb
loope
sarl
std
sti
rorl
mov
add
sarl
mov
dec
pop
push
lods
lcall
mov
push
fcoms
cmpsl
mov
mov
subb
mov
cmp
loopne
cmp
call
adc
sub
push
out
iret
out
pop
or
negb
ja
adc
imul
push
mov
notb
ljmp
lods
xlat
pop
out
jns
mov
lods
xchg
xor
sub
add
xchg
mov
rcll
outsl
mov
ja
jge
leave
sbb
lock
pop
popa
scas
xchg
inc
repz
dec
mov
inc
mov
adc
pop
cs
cmpsl
xor
dec
mov
sub
pop
xchg
pop
fsubs
dec
xorb
test
test
sti
out
movsb
sbb
sbb
mov
cmc
xlat
mov
out
dec
aas
stc
or
inc
add
dec
ret
mov
or
or
adc
mov
hlt
daa
aas
fwait
adc
or
stos
cmp
sbb
rcr
hlt
inc
in
cmc
aad
inc
test
dec
push
fistpl
outsb
out
push
pop
mov
jno
ror
cmp
out
sub
jmp
push
test
bound
loopne
jle
push
das
mov
fwait
bound
push
mov
jmp
icebp
or
ret
rorl
fldenv
into
ret
lret
jge
out
push
add
jg
push
loopne
sti
pop
rolb
out
pop
test
mov
js
dec
imul
adc
call
cmpsb
sahf
ficoms
lahf
clc
cmp
arpl
out
stos
imul
or
xchg
stc
pop
mov
ret
add
mov
or
bound
imull
xchg
fisubs
and
fnstcw
pop
mov
jns
das
das
aaa
push
add
sub
and
add
cld
dec
test
movsl
imul
cs
mov
das
fstpt
pop
push
sahf
sub
adc
aad
inc
adcb
mov
adc
stos
mov
cli
shrl
imul
cmp
stos
push
lret
push
outsb
in
das
xor
out
aas
outsl
mov
jmp
sub
jae
movsb
in
pop
ja
loop
sarb
into
push
out
push
dec
mov
outsl
std
mov
fnsave
jecxz
test
jne
and
pop
sahf
mov
out
jg
test
jp
repz
fs
fistpl
in
das
sbb
dec
add
sar
aaa
sub
adc
fisubl
inc
xchg
ljmp
test
stc
pop
stos
lea
push
fstl
adc
push
xchg
scas
push
jl
test
cmp
add
scas
adc
mov
mov
in
in
mov
mov
push
xor
adc
mov
add
adc
dec
jecxz
subl
dec
xor
jb
push
push
mov
stos
stc
xchg
fs
movb
jg
xchg
rep
mov
call
das
lds
push
fwait
jecxz
adc
push
add
pop
cmp
fisubrl
jmp
xor
pop
adc
mov
mov
outsl
pop
call
decb
pop
pop
test
jb
out
dec
lock
cmpsb
sub
fbstp
or
notl
jnp
cwtl
sti
mov
pop
addr16
sbb
mov
pop
cmp
mov
add
loop
shlb
or
cli
icebp
lock
shll
adc
or
adc
ss
mov
and
mov
mov
repz
and
cmp
xchg
inc
rorb
imul
or
inc
jge
cmp
fistps
fucomi
scas
int3
xor
lock
xlat
cs
and
fdecstp
sbb
cmpsb
or
adc
mov
mov
fildll
mov
jne
into
xor
jne
iret
icebp
pop
lahf
pop
pop
xchg
test
shrb
movsb
stos
fisttpll
jecxz
add
shll
call
into
cmp
out
imulb
jo
jle
fisttpl
add
arpl
clc
outsb
test
out
mov
mov
test
in
pop
shrb
stos
add
mov
xlat
pop
adc
xchg
mov
mov
mov
arpl
dec
test
dec
jae
fdivrs
imul
add
mov
insl
push
cmc
test
fnsave
mov
out
or
repz
sub
push
rcrb
daa
movsb
add
or
fidivrl
addr16
lods
outsb
decb
jle
outsb
sub
xchg
dec
mov
je
es
cmovs
sbb
xor
mov
sbb
mov
sbb
cmc
test
stos
xchg
mov
sub
mov
sahf
pop
int
pop
xlat
cmc
mov
cmp
xlat
jle
mov
jbe
ficomps
pop
mov
mov
push
les
mov
add
call
pop
mov
pop
cwtl
or
sub
aam
mov
into
icebp
in
out
xchg
test
mov
bnd
jp
insl
out
inc
cmp
dec
sbb
fmuls
in
sub
jb
arpl
mov
add
loop
push
addr16
mov
movsl
outsb
dec
out
lcall
lea
push
ljmp
xchg
jo
jnp
mov
mov
rclb
cli
jno
stos
xchg
enter
push
jecxz
fisubs
inc
pop
gs
cwtl
push
add
pop
dec
mov
mov
jno
add
lahf
hlt
adc
fnstenv
ffreep
es
and
mov
ss
sti
mov
negl
mov
or
sub
adc
mov
push
ja
out
daa
xchg
aad
xchg
mov
popf
mov
jae
mov
push
push
xchg
hlt
lock
out
scas
aad
movb
lods
mov
test
sahf
mov
mov
sbb
dec
stos
es
cwtl
stc
cli
fwait
push
or
cmp
repz
lahf
push
pop
dec
dec
leave
lds
sbbl
scas
pop
xchg
incb
and
movsb
outsl
xor
fdivr
mov
push
loope
testl
mov
stc
out
cmp
or
sbb
hlt
std
cmpsb
cld
addb
or
jle
aas
ss
ds
fadd
mov
cli
ljmp
pop
xchg
sbb
std
inc
jle
and
movsl
pop
lret
dec
jg
sti
movsl
jno
pop
or
add
mov
adc
movl
xchg
mov
imull
iret
clc
mov
pop
sub
cmpsl
loopne
xor
out
das
aas
jg
das
xchg
pop
pop
mov
add
data16
out
ja
dec
sahf
mov
push
ds
pop
xchg
push
dec
add
ret
cwtl
in
mov
fstpl
imul
ds
push
add
and
mov
stos
inc
jno
xor
mov
out
popf
cmp
adc
scas
mov
outsl
xchg
fsubs
push
test
dec
iret
test
mov
dec
in
ljmp
addb
shlb
or
push
bound
mov
dec
fucom
outsb
ja,pt
fwait
push
fistpll
aad
es
mov
outsb
mov
out
repz
xor
cwtl
imul
mov
adc
cld
mov
mov
leave
mov
je
cld
jmp
pop
loope
and
pop
scas
ljmp
push
mov
and
inc
jge
mov
push
dec
testl
loopne
push
mov
adc
fists
lcall
inc
add
mov
not
cmc
daa
mov
mov
aas
jmp
andb
inc
aad
pop
xchg
outsb
js
add
repnz
dec
ds
push
cmp
fmull
mov
fwait
jne
data16
dec
fisttpll
cs
and
repnz
dec
pop
jmp
sub
mov
mov
sub
mov
outsb
add
mov
addr16
dec
mov
sub
scas
xor
mov
pushf
sbb
sub
or
testl
lds
icebp
lods
push
ja
jmp
adc
mov
or
pop
push
out
xor
loop
mov
inc
stos
fs
adc
sub
add
sbb
adc
or
jp
inc
nop
hlt
mov
fmuls
in
jp
mov
sub
push
in
pop
cs
add
add
dec
lea
jne
arpl
inc
mov
inc
aaa
cmc
test
mov
notl
shl
call
dec
push
leave
inc
out
cmp
mov
jl
or
mov
mov
jge
and
lods
clc
mov
aaa
mov
and
aas
ror
mov
lretw
frstor
std
mov
lds
test
leave
push
push
or
popaw
pop
cltd
iret
imul
aaa
ss
dec
mov
addb
int
or
sub
leave
cli
push
cmpsb
insl
dec
aas
jno
cmpsl
ficoms
add
jne
and
test
fsts
or
outsl
mov
out
insl
and
mov
call
mov
sbb
dec
sbb
xor
mov
movsl
pop
mov
aad
iret
sti
scas
insl
lds
sbb
pop
jg
pop
fmuls
neg
pop
fildll
mov
add
sub
add
sub
mov
add
adc
dec
sbb
mov
jno
dec
lahf
mov
jae
sbb
pop
push
xchg
in
fwait
and
negb
and
orb
dec
out
jns
dec
pop
lret
jnp
xchg
test
pop
insb
sti
cli
cmp
out
sarl
addb
stos
fmuls
sbb
jge
inc
add
idivb
pop
les
repnz
mov
ds
lea
out
stc
adc
jbe
pusha
lds
movupd
test
xchg
out
adc
mov
cmpsb
dec
sahf
mov
psubw
xchg
fldenv
adc
in
stc
mov
fs
adc
sub
fwait
push
ret
xchg
pop
cwtl
fucomi
lahf
mov
sbb
das
ds
addr16
out
jae
xlat
in
les
iret
std
dec
sbb
fld
adc
dec
pop
cwtl
mov
pop
xlat
dec
not
mov
insb
mov
dec
xchg
out
fisubrs
addr16
fwait
cltd
dec
aad
pop
add
add
sti
test
pop
lea
mov
mov
push
call
hlt
ret
out
xchg
xchg
imul
mov
inc
cld
scas
leave
out
xchg
mov
dec
mov
jnp
adc
in
mov
lods
add
incb
adc
fdivrp
mov
or
into
sbbl
fisttpl
pop
lahf
fnstsw
mov
stos
or
pop
fstp
jae
push
mov
xor
jl
fwait
int3
arpl
pop
scas
dec
movsl
aas
mov
ds
lock
inc
add
out
cmp
mov
imul
sub
fs
fldcw
ja
cmpsl
and
lods
enter
mov
mov
sti
push
ss
cmpsl
xchg
mov
mov
mov
scas
leave
xchg
jmp
mov
repnz
fst
hlt
cmp
mov
xor
popf
bound
pop
cmpsl
cmp
ret
cmp
stos
adc
dec
adc
add
aas
adc
sti
pop
insl
cmpsb
vphadduwd
mov
movsb
fldcw
arpl
jge
cmc
cmp
shll
mov
stos
insl
and
sbbb
arpl
hlt
ret
out
into
jo
loopne
cmpsl
int
dec
mov
jmp
jnp
xchg
imul
fsubs
and
sbb
dec
inc
mov
cmpsb
add
sbb
shlb
pop
outsb
insl
mov
outsb
inc
sub
mov
and
movsl
outsb
loopne
pushf
push
and
inc
pop
ljmp
mov
rorl
fcomi
jbe
sub
xor
popf
jmp
shrl
mov
out
movsb
in
pop
test
xchg
push
iret
mov
ret
cmp
adc
imul
dec
into
adc
jp
in
sub
lret
gs
and
add
cmp
out
cmc
ret
sub
arpl
test
lahf
insl
fildll
ror
jne
jge
and
into
lret
vpxor
test
dec
ret
dec
mov
mov
fmulp
adc
xchg
xchg
push
push
in
pop
out
imul
inc
sub
ss
inc
jne
or
out
jmp
imulb
or
add
scas
jle
pop
test
pop
inc
mov
idivl
dec
and
lahf
aas
enter
int
or
push
mov
int3
pop
xor
je
and
sub
pop
out
add
mov
pop
ljmp
int
idivb
sbb
sarl
push
mov
outsb
mov
sub
in
pop
stos
pop
sbb
sub
outsl
and
pop
ds
adc
outsb
repz
insl
ljmp
xchg
je
fildl
out
clts
test
arpl
sbb
test
fildl
jnp
or
jmp
jge
jmp
dec
dec
push
cltd
push
jle
push
mov
add
adc
mov
rorb
xor
arpl
sahf
rorb
in
fsubl
xchg
icebp
test
sub
in
sbb
mov
sub
ja
stos
mov
jge
mov
lcall
fdivrl
sarl
push
in
push
movq
jne
adc
and
scas
icebp
stos
popl
jno
aas
rolb
imul
lds
mov
imulb
popf
mov
lcall
movsl
or
mov
je
xchg
jno
inc
lods
pop
cli
pop
add
arpl
fcmovbe
bound
jbe
mov
mov
mov
ja
mov
fists
mov
sub
mov
cmc
add
or
test
add
cmc
xor
fadd
and
mov
mov
cmpsb
leave
out
dec
add
mov
sbb
pop
hlt
sub
sbb
in
mov
jne
clc
jno
loope
push
jle
cltd
scas
sbb
imul
inc
fnstenv
add
das
jnp
cmp
mov
outsl
sub
xchg
xor
pushf
jg
shrl
jl
or
inc
mov
jg
mov
mov
push
mov
xlat
int3
fildll
mov
or
outsl
jo
aas
lods
filds
frstor
inc
mov
out
insl
push
fstps
xchg
pop
mov
adcl
ds
popf
mov
decb
xor
mov
sub
scas
lahf
scas
sub
xchg
sarb
xor
testb
mov
pop
clc
xor
test
pop
leave
dec
add
add
neg
dec
mov
mov
rorl
arpl
cmp
xchg
scas
in
jl
movsl
neg
jnp
mov
movsb
outsl
ficoms
lcall
inc
xlat
scas
in
add
pop
or
jnp
mov
xor
test
in
js
mov
mov
mov
jns
and
mov
ja
ljmp
mov
add
pop
mov
push
mov
scas
sbbl
loopne
sub
xchg
or
jle
leave
rorl
sbb
lods
pop
jmp
lret
ja
pop
insl
iret
dec
ret
mov
in
add
je
ljmp
inc
stos
push
repnz
mov
cli
jge
cwtl
mov
pop
shll
scas
rcrl
mov
arpl
cs
adc
aas
mov
call
sub
jge
clc
push
mov
in
jmp
cmp
xchg
dec
jnp
div
rcrl
push
in
sub
xlat
ss
sahf
ljmp
and
lods
dec
ficomps
mulb
and
ret
push
rcrl
sub
in
pop
gs
xchg
xchg
aas
cmp
jge
pop
cmc
push
stos
mov
mov
in
in
pop
ljmp
in
xchg
adc
and
js
test
xor
jnp
mov
mull
imul
fstp
testb
xor
lods
scas
imul
add
jae
fstpl
scas
arpl
loopne
fisubrl
mov
lret
mov
mov
in
jnp
scas
movsb
xchg
adc
das
aas
xor
andb
insl
aaa
mov
xchg
stos
es
shlb
sbb
mov
jno
mov
jae
in
call
ljmp
mov
mov
int
mov
adc
pop
mov
jb
nop
fldcw
cmp
dec
fcoml
mov
aam
mov
pop
fimull
or
add
mov
lods
mov
shlb
lea
out
pop
push
fstpl
sub
ret
mov
xchg
sub
fsubl
jb
jl
inc
mov
inc
xchg
jmp
fs
stos
loop
ja
sbb
out
mov
in
imulb
mov
sub
jnp
add
fistpll
dec
or
xchg
mov
dec
or
imull
cmp
stos
mov
jo
mov
hlt
add
in
cmpsl
sbb
pop
daa
ljmp
mov
push
scas
out
sbb
jle
mov
add
pushf
ss
out
xchg
xor
fstps
inc
or
repz
out
add
cmp
int
aaa
fcmovb
mov
mov
imul
fstpt
push
lahf
movsb
xchg
add
cs
shll
cmp
repz
jmp
jmp
mov
and
fnstcw
add
lods
lock
or
fstpt
iret
lods
aaa
jl
mov
dec
in
pushf
mov
iret
mov
mov
mov
dec
aaa
jl
out
aaa
sub
jo
js
add
mov
jg
out
andb
fmuls
inc
outsl
xor
dec
or
mov
test
mov
inc
mov
iret
xchg
movsl
scas
loope
xchg
andl
repz
jg
pop
iret
lret
leave
ja
lods
mov
cmp
jg
xor
inc
out
rorl
mov
inc
mov
push
jg
inc
mov
js
sbb
fsubrs
xlat
pop
imul
adc
fcmovnb
movsl
xor
iret
test
jg
cmp
jg
in
lds
frstor
add
gs
mov
fnstenv
mov
out
jl
sbb
ret
int3
mov
pop
add
and
out
mov
test
iret
adc
stc
jbe
aam
xor
adc
and
mov
in
clc
test
pop
das
jmp
xlat
pop
icebp
shrl
fistpl
aas
cli
sub
push
pop
lret
icebp
pop
pop
iret
cld
pop
push
cs
imul
dec
mov
push
addr16
push
jnp
fisubrl
pop
aas
shrl
and
add
fists
andb
hlt
shrl
cld
xchg
push
xorl
pusha
or
pop
aaa
sub
test
jne
mov
test
or
add
jb
xorl
sub
push
mov
mov
sub
jno
pop
mov
into
jge
js
fstps
jns
push
pop
imul
fildl
fnsave
adc
mov
sbb
xor
in
xor
insl
aaa
and
pop
jne
into
gs
cs
push
pop
orl
in
lahf
nop
push
outsb
sub
fidivrl
mov
notl
out
or
leave
out
jecxz
subl
mov
mov
push
in
fwait
jp
outsl
stos
sahf
sarl
xchg
jne
jmp
mov
das
xor
cmp
idiv
orb
cld
arpl
xchg
pop
push
cmp
mov
fcoml
mov
pop
mov
pop
ljmp
repnz
sbb
adc
sbb
out
add
mov
scas
movsb
enter
sub
mov
ret
in
daa
and
sbb
or
add
stc
push
mov
or
xor
cs
fcoml
sub
ficoms
dec
movswl
or
jecxz
cmp
mov
int
mov
cmpsb
lret
negl
add
mov
out
mov
adc
movsl
ficomps
test
or
inc
outsl
jge
jmp
out
pop
repnz
call
sub
fildl
popf
arpl
mov
out
sahf
sbb
dec
mov
cmpb
iret
sub
subb
pop
hlt
sti
movsb
mov
insl
loop
call
call
loopne
xlat
clc
sbb
negl
sbb
push
pop
adc
mov
lock
mov
inc
sahf
add
in
rclb
pop
ret
arpl
ss
and
inc
lea
in
orl
mov
add
sbb
pop
or
les
das
xor
xlat
fmulp
push
imul
mov
cwtl
pop
addr16
mov
sbb
lcall
ret
rolb
pop
and
pop
mov
out
mov
orb
mov
enter
test
icebp
ja
adc
mov
jae
int
pop
shlb
mov
sub
outsb
fildll
dec
sbb
fadds
repz
adc
fistpl
mov
scas
psubsb
add
ret
jnp
mov
xor
cmp
add
les
and
in
push
push
pop
xchg
and
shrl
jge
mov
push
repnz
fimuls
test
ljmp
mov
xchg
add
arpl
arpl
cmp
ljmp
stos
into
js
pop
and
scas
xor
mov
testb
out
xchg
add
xlat
mov
add
cmp
lock
or
inc
sarb
aad
adc
push
inc
add
mov
mov
cmpsb
out
jp
out
jmp
mov
mov
xor
mov
adc
test
es
pop
ficoms
cmp
out
add
aas
outsl
out
ficomps
cltd
bsr
subb
cwtl
xchg
push
fs
into
repnz
jmp
andl
dec
add
mov
pop
sar
icebp
adc
push
popf
jne
test
adc
cmpsl
xchg
les
sbb
mov
fnstcw
popa
and
cmpsb
cmpsb
in
aaa
dec
testl
add
mul
je
adc
mov
lcall
xchg
cltd
scas
add
mov
nop
imul
dec
xor
fsubrs
and
pop
mov
adc
push
mov
mov
cld
mov
dec
jne
pop
mov
insb
adc
push
mov
sbb
mov
repz
jmp
in
clc
pop
add
popa
push
lock
int
scas
or
fnstcw
stc
stc
pop
lcall
out
pop
mov
cmp
arpl
cmpsb
sbb
ficoms
mov
cltd
sbb
mov
add
gs
mov
jb
sahf
inc
fisttpl
into
mov
fidivl
in
xchg
or
mov
into
data16
addl
or
lock
xchg
xor
mov
mov
lea
pop
mov
test
inc
ljmp
ds
cs
sbb
pop
cli
scas
ljmp
mov
or
pop
shlb
lcall
mov
mov
mov
pop
movsl
scas
iret
jecxz
cmpsb
cmp
scas
jg
mov
fcmovnbe
scas
mov
arpl
sbb
int
daa
cmpsb
addl
xchg
pop
inc
mov
mov
std
fwait
jecxz
ljmp
insb
negb
mov
cmpsb
pop
dec
sarb
aas
fstpt
push
pop
je
inc
aam
movsl
cli
jmp
js
sbb
ret
cs
sub
cmc
dec
jg
ret
cmc
test
mov
nop
pop
mov
inc
and
sub
callw
dec
mov
and
push
and
cmp
mull
or
bound
movsb
pop
push
in
jp
add
popf
cmp
ret
int3
push
and
movzbl
loopne
xor
jo
das
fisubl
into
jg
cs
sbb
pop
xchg
in
sar
mov
jg
mov
xchg
or
sub
xor
inc
push
adc
enter
jg
cmc
lret
pandn
cli
pop
clc
sub
or
push
subb
xor
cmc
inc
push
lods
and
sbb
js
adc
mov
fists
mov
add
je
and
cmpsl
jmp
xchg
fcoml
jnp
leave
cmpsl
sbb
cwtl
rcll
xor
jnp
int3
and
sbb
mov
icebp
in
lock
ss
xlat
mov
adc
mov
into
jbe
imull
mov
outsl
sub
loopne
fwait
inc
pushf
xlat
out
ret
inc
sbb
push
cs
test
cmpsb
repz
pxor
dec
popf
idivl
mov
outsb
mov
jne
cmpb
push
stos
in
or
xor
lahf
in
int
adc
pop
push
mov
cmp
cmc
mov
add
jbe
xor
push
push
jbe
jnp
loop
repnz
add
cmp
inc
jp
repnz
dec
fiaddl
int
mov
stos
sub
add
imul
in
mov
jle
icebp
add
shrl
scas
shrl
ljmp
in
inc
insl
push
mov
arpl
pop
cmpsb
push
stos
pop
add
jmp
inc
xor
or
cmp
stos
cmp
out
push
int3
mov
scas
mov
adcl
into
ret
in
sbbb
mov
loop
inc
int3
fmuls
fidivl
aad
gs
push
cmpsb
pop
inc
sbb
mov
xchg
mov
mov
cmp
cli
arpl
into
or
out
in
stos
cmp
push
je
cmpsl
shll
cmpsl
xchg
stc
push
push
xor
cmp
ja
scas
fcmovnbe
sub
mov
mov
add
add
add
insl
mov
in
jae
outsb
inc
dec
scas
in
jo
and
cmpb
push
div
bnd
das
sti
out
js
pop
jbe
cmp
call
adc
mov
jg
cwtl
adc
out
pop
xor
push
jmp
jmp
xchg
mov
stc
hlt
imul
lock
push
dec
xchg
aaa
call
rcrb
popf
lret
and
dec
sbb
sti
and
out
jle
sahf
sbb
in
add
xchg
lods
and
inc
dec
testb
mov
scas
mov
mov
arpl
jmp
xchg
mov
mov
dec
fdivs
or
addr16
les
sahf
fldcw
dec
lahf
mov
push
out
cli
adc
sub
push
out
out
rorl
icebp
mov
js
sub
lods
push
cld
stos
mov
adc
dec
mov
fildll
xlat
out
ret
cmp
dec
nop
push
mov
add
cwtl
jmp
movsl
imul
pop
mov
insl
sub
cmp
pop
aad
hlt
inc
adc
daa
repnz
add
std
mull
mov
or
movsl
mov
iret
mov
mov
sub
bound
fmuls
and
mov
or
xchg
xchg
pop
aad
mov
pop
cmp
mov
dec
jl
add
xchg
jge
xchg
fnsave
dec
or
or
lret
mov
xorl
xlat
dec
inc
mov
inc
hlt
loope
pop
mov
xor
sub
mov
stc
lcall
in
movsb
dec
push
and
xor
mov
sub
clc
jle
sbb
movsl
mov
and
in
in
dec
scas
movsb
sub
or
sar
cs
mov
push
int3
mov
jns,pn
inc
or
mov
out
aas
fbstp
mov
or
or
in
push
int3
lock
dec
fwait
xor
mov
scas
sti
pop
out
fisubrs
stos
idivl
lahf
xchg
adc
dec
sbb
jmp
mov
push
popf
sub
add
adcb
xlat
xlat
movb
aad
pop
jbe
dec
mov
pushf
push
mov
outsl
xor
inc
add
xor
pop
aam
arpl
pop
jg
pop
gs
mov
jo
das
mov
shll
in
add
mov
out
push
mov
scas
and
xchg
std
xchg
dec
xchg
out
push
in
mov
fisttpll
adc
inc
pop
adc
pop
jae
scas
mov
fsubp
xor
in
cltd
jg
adc
fdiv
adc
ja
pop
ss
push
mov
lcall
leave
iret
cmc
sbb
icebp
pop
sub
sub
insl
out
jne
add
jmp
out
lcall
inc
push
out
jns
outsb
outsl
data16
pop
jnp
adc
mov
push
iret
dec
mov
fcompp
fldt
test
push
cmp
scas
in
clc
inc
negl
sub
jb
pushf
stos
pop
add
ja
mov
pop
add
icebp
imul
fistpl
cmp
out
mov
stc
in
movsl
ljmp
push
pop
dec
iret
and
and
loopne
mov
cmp
mov
icebp
iret
in
or
pop
and
lcall
pop
das
addb
jbe
sahf
mov
sub
xor
jno
mov
mov
or
sbb
gs
out
mov
leave
sbb
pop
mov
dec
into
and
add
out
mov
fstpl
lcall
sbb
iret
shr
rcr
sti
test
stc
imul
les
sahf
xor
add
inc
ds
out
dec
pop
inc
jns
push
dec
xchg
fs
xchg
sub
pop
jns,pn
or
outsb
enter
xchg
or
into
sub
pop
in
out
mov
stos
sarl
cmp
xchg
pushf
cmp
lcall
xchg
mov
hlt
mov
outsl
mov
mov
lea
adc
jmp
inc
mov
mov
and
ljmp
pop
fstpt
out
imul
faddl
or
jge
rcrb
mov
fidivrl
pusha
sub
popf
sbb
mov
mov
mov
pop
mov
cmpsb
in
dec
sahf
jno
inc
into
cwtl
xchg
sub
pop
test
rcrl
and
outsl
adc
popf
mov
fbstp
dec
mov
mov
mov
mov
and
sub
loope
sbb
lds
cmc
out
mov
pop
ljmp
jo
inc
push
sub
sub
or
cmc
popa
pop
fxch
lods
rclb
lods
pushf
loop
testb
ja
and
js
push
pop
gs
fsts
movsl
pop
in
rorl
lock
rol
and
scas
mov
fsub
and
sbb
add
sbb
pop
dec
push
pop
mov
mov
aaa
fists
sub
sub
mov
add
shll
jo
mov
mov
insb
cs
pop
cmp
movsb
call
cmp
and
mov
push
gs
sbb
xor
adc
fbld
sbb
add
lods
testb
mov
orb
sbbl
sub
or
inc
lock
add
xchg
add
sbb
sub
pusha
pop
add
push
ja
mov
mov
mov
dec
arpl
pop
test
leave
inc
mov
cmpsb
xchg
jle
movsl
jp
lahf
stos
pop
mov
aad
mov
cmpsl
aam
xchg
stos
xor
insl
mov
mov
add
mov
inc
in
sub
xor
cmp
or
aaa
add
inc
pop
pop
cmpsl
repnz
scas
jns
imul
sbbb
cmp
cmp
jne
mov
fisubrs
sub
rol
fwait
aam
stc
popl
fs
loopne
addl
scas
and
push
das
fxch
scas
fwait
or
cmp
pop
xor
push
test
stos
icebp
mov
jne
fstpl
mov
loopne
mov
cmp
insl
pop
mov
popf
and
mov
sbb
orb
test
cmpsl
jg
inc
pop
scas
mov
sarb
pop
popa
xchg
imul
shrl
xor
and
xorb
push
js
mov
ret
xor
and
xchg
xor
adc
aas
test
scas
and
pushf
mov
sbb
je,pt
mov
pop
fdivrp
data16
push
xlat
es
outsl
sti
mov
inc
fcoml
xorl
clc
cmp
lahf
aam
mov
outsl
les
or
add
lcall
xchg
push
call
jl
add
cltd
add
fistps
jae
out
or
lahf
or
shlb
stos
mov
fnstsw
ljmp
mov
mov
inc
movsb
jmp
sbb
mov
loop
lret
imull
jmp
mov
mov
jns
xlat
sbb
mov
leave
lods
aas
xchg
vpshld
ja
pushf
lds
sub
or
fld
fdivrs
inc
xchg
gs
jbe
adc
mov
out
outsb
xchg
insl
mov
aad
div
pop
shll
pinsrw
lret
and
in
pop
pop
sbb
shll
sub
push
scas
mov
fmuls
and
clc
ljmp
scas
jne
cmpb
pop
add
push
fmul
mov
adc
pop
xchg
mov
mov
cmp
jns
imul
pushf
adc
dec
add
out
gs
loop
jnp
mov
enter
mov
stc
jp
pop
xlat
jae
mov
cmpsb
lds
int
neg
sbbb
fld
and
push
rcl
or
mov
xor
pop
push
xchg
jae
outsl
mov
jg
sub
scas
das
ds
and
shr
mov
ja
mov
add
arpl
sbbb
pop
mov
repz
stos
jge
pop
jns
push
lods
stos
push
inc
fldt
inc
mov
mov
push
add
lods
lcall
jg
pop
inc
rorb
jge
rol
fcoms
clc
out
adc
lret
jnp
mov
push
push
mov
scas
out
fdivrl
test
rol
div
fldt
leave
mov
out
fcmovu
lret
iret
push
xlat
xchg
jns
or
testb
cmpsl
icebp
or
pop
or
mov
mov
push
negl
mov
sarb
stos
adc
repnz
and
mov
xchg
scas
cmpsl
push
dec
int
sub
mov
outsl
into
lea
insl
sarb
jbe
loop
cmp
nop
stc
shll
daa
sub
mov
in
mov
insl
or
test
ja
aaa
cmpsb
mov
xlat
out
in
fucomp
mov
call
sub
pop
adc
inc
pop
out
jecxz
arpl
jmp
jns
testl
loopne
shrl
inc
mov
adc
pop
dec
cmp
pop
aad
push
imul
jl
repz
stos
adc
xchg
dec
shlb
and
pop
mov
mov
or
std
xlat
iret
pop
cmc
mov
jmp
xchg
jae
mov
les
mov
jge
push
repz
stc
aas
push
insl
jo
insb
ret
je
jl
adc
std
fucomp
mov
pop
cwtl
icebp
adc
sbb
xchg
cli
lret
ret
int
add
sbb
mov
sar
clc
jg
sahf
xchg
jo
cmp
in
and
adc
xlat
int3
icebp
popa
mov
push
and
arpl
xchg
addr16
adc
sub
mov
mov
clc
adc
xchg
test
fwait
imul
pop
pushf
adc
xor
mov
fdiv
sub
fptan
ss
lods
mov
adc
outsb
xchg
pushf
lahf
cs
shl
adc
add
xchg
out
out
jne
test
cmpsb
mov
and
loop
lcall
push
fstpl
mov
jg
mov
filds
lret
clc
sbb
pop
jp
cmp
sub
fs
inc
testl
scas
mov
pop
and
outsl
shl
mov
imull
pop
sub
xor
fmuls
mov
outsb
outsl
cmp
cmp
adc
subl
stc
out
arpl
mov
dec
ss
inc
inc
adc
dec
test
pop
in
or
ds
clc
xor
jns
push
pop
mov
dec
insb
movsl
into
sub
rcl
mov
outsb
sahf
pop
cs
shrl
cmpl
cwtl
int
pop
push
xchg
aam
push
jo
jg
push
mov
in
push
fstpt
nop
adc
shll
ljmp
in
shl
push
pop
je
jns
in
sti
pop
mov
daa
ds
and
flds
insl
ret
testb
pop
mov
xchg
and
cmp
cmp
jbe
jmp
cs
jns
int3
dec
mov
pop
arpl
jne
mov
fcmovnb
jecxz
ljmp
add
shrb
dec
lods
cmp
aaa
imul
xor
fldt
mov
sbb
xchg
jb
imul
mov
pop
das
popf
out
jl
out
add
in
fldcw
insb
xor
imul
outsl
out
movsl
mov
sarl
gs
cmpsb
inc
movsb
xor
mov
mov
add
mov
loopne
aaa
sub
pop
rol
hlt
xchg
mov
repz
and
push
or
jne
sarl
pop
pop
mov
fldln2
adc
and
mull
fsts
rolb
sub
fcomps
lods
dec
fnstcw
mov
inc
dec
inc
mov
sbb
test
ret
loope
xchg
std
pop
in
jmp
hlt
rclb
mov
mov
pop
sbb
popf
data16
fstps
pop
adc
xchg
insb
divb
mov
out
in
faddl
and
je
iret
cmp
fcmovne
mov
inc
pop
pop
iret
adc
add
dec
or
popf
pop
dec
and
mov
cltd
or
jne
mov
movsb
lock
mov
sub
ficomps
out
jmp
dec
scas
xchg
fwait
jecxz
bound
ret
jnp
or
jnp
out
repz
sub
das
sti
push
iret
xor
push
mov
push
clc
pop
fidivrl
cmpb
in
fiadds
movsb
cmp
or
add
ljmp
mov
out
fcmovnb
rcrb
cmpsl
sub
jbe
mov
hlt
ljmp
lea
ljmp
push
cld
scas
sbb
or
mov
stos
out
aam
stos
pop
sub
push
andl
scas
insl
cmp
adc
inc
mov
dec
pop
gs
popa
repnz
jbe
mov
jne
sub
test
insl
pop
cltd
xchg
push
je
xchg
add
add
std
mov
fldt
out
sbb
jg
aam
scas
int3
int
out
xchg
sbb
jl
js
je
jns
hlt
add
fstpt
dec
add
and
test
pop
ja
call
sbb
subl
sbb
pop
push
imul
cmp
out
scas
adc
xchg
shrl
jl
push
mov
mov
mov
test
test
sbb
in
pop
inc
inc
call
xchg
dec
cmp
adc
xchg
pop
dec
scas
jns
test
test
shl
mov
ss
pop
mov
cmp
or
leave
dec
cmp
dec
sub
pop
mov
not
adcb
imul
adc
and
mov
cmp
fwait
xchg
pop
repz
mov
jle
stc
jl
or
rcrl
push
mov
es
push
jmp
sbb
mov
cwtl
cmpsl
pop
bound
test
mov
adc
arpl
pop
dec
push
rcrl
in
sbb
fnstenv
xor
in
arpl
hlt
push
mov
mov
test
int
push
out
psrld
ljmp
or
mov
inc
ds
mov
xchg
pop
mov
hlt
cmc
repnz
xor
xlat
imull
xchg
fmul
cmc
sub
rcrb
push
subb
ja
lahf
enter
fldcw
or
lods
mov
add
xor
sbb
cmp
add
cli
leave
out
and
into
push
in
or
enter
fidivl
out
out
jmp
and
sbb
sub
lahf
lcall
addr16
jle
stos
aas
xchg
push
push
repnz
in
cld
add
add
mov
xor
adc
push
jo
push
xor
rol
pop
cld
addb
jbe
dec
mov
sub
outsl
mov
jge
sbb
fidivrs
repnz
xchg
imul
test
dec
arpl
mov
lcall
push
mov
ja
leave
mov
sub
jb
test
push
cmp
lahf
out
pop
jo
mov
je
aam
fucomip
pop
lahf
mov
jo
cmp
rcl
stc
cmpsb
ret
xchg
mov
mov
push
or
and
test
cld
mov
hlt
mov
mov
and
imul
push
repnz
scas
repz
lock
adc
pop
push
and
popf
out
mov
pop
test
fmuls
sub
jbe
pop
lock
pop
iret
jno
cmpsl
sub
iret
pop
fistpl
jae
jg
stos
adcl
orb
or
fnstcw
pop
test
sbb
push
mov
sub
gs
mov
std
out
push
cmpsb
sub
push
dec
jae
imul
ret
into
dec
mov
cmp
out
mov
fbstp
jmp
mov
aad
cmc
jb
pop
mov
mov
mov
cmpsb
push
push
xor
xchg
mov
cwtl
jne
loope
and
repnz
lock
push
testl
xor
stos
mov
jno
jmp
dec
pop
push
jae
mov
rorl
int3
push
icebp
cli
fistpll
divl
xchg
xchg
lds
jnp
mov
mov
mov
sbbb
sbb
loopne
leave
iret
jecxz
fwait
push
aaa
adc
push
xor
arpl
add
mov
xchg
pop
mov
lahf
stos
pop
xor
ret
or
aas
arpl
clc
cmp
roll
ja
sti
test
pop
loopne
ljmp
jnp
int3
movsb
fbstp
mov
xchg
xchg
push
je
es
jl
inc
lods
shl
out
iret
fldenv
add
ss
outsl
push
cmpsl
mov
cs
push
pop
add
lahf
sahf
cld
ja
idivb
and
aam
daa
ss
mov
xor
lret
dec
xchg
cmpsb
add
in
mov
out
push
pop
out
mov
adc
pop
movzwl
jb
pop
mov
adc
out
icebp
pop
sti
aas
dec
icebp
popf
pop
cmpsl
lret
push
or
mov
sub
iret
into
mov
add
mov
outsb
enter
cltd
mov
sbb
pop
pop
loopne
cmp
xor
pop
jle
lahf
cs
loopne
andl
sbb
mov
xchg
xorb
pop
bnd
jecxz
pop
cmp
pop
lock
sub
ror
es
idivb
shll
mov
mov
xor
stos
test
pop
jl
addr16
inc
lock
mov
das
repnz
dec
mul
icebp
js
insb
fdivp
ret
fbld
sub
and
inc
stos
fisttpll
cmpsb
cmp
jg
in
mov
stc
or
mov
jbe
out
push
mov
mov
das
pop
popa
icebp
ffreep
out
lods
pop
stos
sbbl
inc
lods
scas
aaa
gs
lods
call
and
hlt
fs
sbb
loope
sub
in
in
push
pop
push
aaa
stc
push
pop
out
lret
out
jg
rcrl
popf
or
in
and
lret
in
outsl
out
sub
out
push
popa
add
jnp
fcmovu
jae
pop
out
inc
jge
cs
stos
pop
dec
out
dec
repnz
pop
mov
xchg
aaa
jg
lret
mov
js
lods
xor
out
mov
icebp
hlt
out
mov
mov
scas
leave
fcmovnu
hlt
fstpt
bound
jg
fnstcw
xor
jmp
lcall
mov
fimull
xchg
sub
jmp
loopne
std
push
mov
ss
call
pop
cs
xor
xlat
mov
lret
cmp
ficomps
das
dec
jg
imul
pop
xchg
icebp
dec
mov
jle
jno
pop
and
mov
push
pop
sbbb
loop
lcall
push
mov
sbb
pop
leave
data16
mov
lds
xchg
mov
repnz
inc
jnp,pt
repnz
ficomps
lret
push
sub
lods
mov
xor
mov
insl
or
lret
sbb
iret
pusha
mov
imul
and
mov
or
mov
xor
pop
pusha
stc
dec
push
cwtl
mov
push
pop
in
cld
push
or
push
jo
sub
outsl
test
pop
or
dec
jg
add
test
outsl
mov
fildl
arpl
cs
dec
aaa
cli
cmp
xchg
sbb
int
sub
sub
testb
mov
push
add
adc
mov
adc
jns
movsl
jb
mov
xchg
add
inc
lahf
add
jp
iret
aaa
adc
push
outsl
leave
mov
gs
add
fstpt
cs
inc
pop
movsb
fnstsw
ja
movsl
xchg
cmp
inc
int
filds
push
test
sub
lock
test
out
repnz
in
ret
incb
cli
cwtl
movsb
mov
mov
inc
aaa
stc
rorl
pop
lock
subl
or
out
aad
fbld
icebp
add
aas
ss
xchg
stc
in
push
dec
fwait
mov
mov
stc
les
stos
ljmp
mov
ja
test
dec
sub
cmp
mov
push
xchg
in
out
popa
inc
adc
adc
in
xchg
xchg
inc
push
mov
outsb
push
mov
ret
arpl
pop
push
jecxz
icebp
jecxz
xlat
andl
pop
sbbb
pop
in
mov
lea
sti
cs
add
fwait
jns
jecxz
jae
shrl
scas
cmp
shl
or
mov
pop
call
push
sub
adcl
and
mov
cmp
in
mov
adc
stc
daa
out
mov
jmp
icebp
fmull
sub
adc
xchg
jg
in
mov
add
mov
sbb
fdivrl
fld
mov
cmc
pop
sub
mov
outsl
ss
std
pop
mov
sub
mov
sti
dec
aad
idivl
out
pop
mov
xrelease
notb
cli
mov
lahf
dec
shr
cltd
loop
cld
adc
dec
mov
clc
push
loope
loope
cmc
mov
pop
sub
pop
jl
ljmp
add
add
or
sbb
mov
mov
lock
sarl
xor
push
aam
fs
xchg
jmp
clc
sahf
jmp
arpl
adc
dec
inc
enter
ljmp
aam
jl
leave
push
pop
out
dec
add
fcompl
mov
stos
cmp
ljmp
fsubrs
ficomps
in
outsb
aam
jmp
ja
xchg
pushf
mov
dec
repz
cmpsl
xor
jp
cwtl
fs
out
cld
test
fdivrs
mov
cld
cmpsl
pop
movsl
adc
pop
mov
lods
or
nop
es
in
pop
sbb
xchg
andl
outsl
inc
ljmp
jo
xchg
inc
outsb
add
pop
add
mov
sub
inc
sbb
mov
push
push
out
lds
aaa
jecxz
mov
call
faddl
inc
xchg
mov
int
repnz
mov
out
xlat
pop
add
dec
push
inc
sub
sub
jne
aas
xor
call
xor
push
mov
pusha
call
mov
cli
ret
jae
mov
jg
mov
es
cld
shlb
cmp
into
add
mov
cmp
mov
add
pop
or
xchg
fisttpll
cmp
dec
sbb
mov
shr
jle
imul
fs
or
pop
shl
pushf
sub
pop
dec
adc
sarb
clc
fistl
mov
inc
jmp
lahf
mov
fwait
pop
jl
mov
dec
push
xor
pop
mov
mov
cli
adc
xchg
xlat
ret
push
sub
or
jae
rcll
imul
out
arpl
lods
popl
add
hlt
aad
sbb
cli
insl
sub
cmpsb
push
cs
xor
aad
loop
add
std
sub
add
call
das
shll
cmp
imul
daa
jmp
movq
inc
mov
jmp
mov
sub
sbb
mov
jne
outsb
paddd
std
add
sub
aaa
mov
cmp
push
push
je
out
pop
pop
push
rcrb
and
add
mov
pop
imul
arpl
aad
repz
dec
push
aad
xchg
cmp
mov
add
push
xor
fsubs
mov
ss
xlat
sbb
in
mov
pusha
insb
or
add
sbb
cmpb
out
cs
sub
ja
dec
insl
mov
pop
iret
pushf
xlat
inc
add
les
push
clc
or
in
cmp
push
scas
jle
xchg
ja
mov
jo
out
sar
insl
lods
in
notb
in
testb
hlt
lods
sub
ja
fucomi
inc
fcompl
mov
daa
fdivrl
xchg
ficomps
int3
pop
pop
sub
aam
push
fildll
inc
sbb
test
sub
repnz
xchg
addb
ret
add
lret
ja
dec
ret
xor
fnstsw
aam
dec
dec
cwtl
sahf
mov
data16
ja
mov
and
dec
data16
bound
mov
das
enter
test
inc
aam
mov
push
lock
jmp
popf
das
mov
pop
adc
call
test
dec
add
xor
das
lcall
push
lret
mov
stos
out
xor
shlb
or
xchg
vandps
cmpsb
sbb
cmp
sbb
mov
sarl
je
and
cltd
dec
jns
mov
pop
adc
xchg
or
cld
mov
add
xchg
imul
scas
mov
ds
and
popa
lcall
scas
push
push
loope
pop
xchg
dec
out
mov
push
clc
sbbl
faddp
sti
arpl
jle
fs
lods
or
mov
add
mov
aaa
mov
cmp
loopne
imul
or
out
or
inc
imull
jb
pushf
lock
push
inc
sahf
lcall
or
sbb
jns
call
pop
repz
ret
jg
inc
popa
inc
inc
and
jno
iret
sbb
pop
es
add
out
icebp
jl
lock
cld
mov
fnstsw
insl
add
push
mov
in
lcall
mov
xchg
push
arpl
cmpsl
stos
add
inc
loope
aam
or
sbb
push
out
fsqrt
push
xor
shll
lds
push
dec
popf
cld
add
dec
xor
jmp
pop
mov
push
sti
jae
shl
sbb
pop
mulb
mov
insl
sub
pop
sbb
mov
jno
clc
aad
sti
cmp
xchg
or
push
xchg
inc
arpl
xchg
ss
int3
mov
jno
and
popa
sub
xchg
fdiv
mov
leave
loop
xchg
fnstsw
pusha
jg
test
in
paddsw
xor
add
dec
sub
aas
testl
mov
rorl
adc
jge
fsubl
sqrtps
outsl
adc
in
pop
fiadds
and
pop
or
out
scas
or
mov
mov
jle
in
or
mov
xor
jb,pn
xchg
test
and
in
fs
rcrb
andnps
mov
in
pop
dec
das
mov
imul
inc
or
ljmp
ja
stc
xor
and
mov
in
les
pop
dec
rol
in
sbb
dec
adc
mov
sub
push
pusha
xchg
xchg
cmp
ret
in
add
pop
adc
in
scas
fidivrl
fistpl
push
shlb
adc
mov
or
aam
fnstenv
fwait
pop
mov
fwait
xorps
xchg
dec
pop
dec
cld
sti
out
add
jle
pop
push
or
and
iret
cmp
dec
xchg
jge
xchg
scas
sub
rclb
pushf
inc
iret
shrl
add
repz
mov
lods
push
scas
mov
xchg
stos
stos
shll
push
out
shr
add
lods
imul
mov
jae
outsl
fxch
ficompl
push
add
push
push
enter
ds
sbb
repz
cld
aad
mov
adc
loop
push
call
daa
fdiv
dec
outsb
mov
mov
push
arpl
jg
rcr
jns
pop
negb
cli
faddp
stc
out
and
inc
jbe
mov
mov
jmp
je
xchg
mov
mov
push
xchg
jae
sub
push
pusha
pop
xchg
push
dec
in
outsl
stos
or
cmp
cwtl
in
sti
and
fildl
loope
out
out
in
outsl
std
mov
sbb
faddl
cs
add
and
inc
repz
sub
out
aaa
jmp
dec
and
test
jns
leave
push
fucomi
movups
in
mov
pop
shll
sbb
or
adc
push
sub
dec
mov
xchg
push
imul
clc
push
xor
sbb
inc
in
xor
cmc
cmp
out
iret
orl
aas
cs
xlat
es
and
fwait
inc
in
add
sbb
adc
roll
xor
sub
xchg
out
stc
add
add
aad
fimuls
fistps
mov
cmc
imul
lods
shll
adc
xchg
inc
shll
test
mov
cmp
xor
out
jmp
mov
push
arpl
cmp
push
xchg
idivl
or
xchg
mov
mov
fisttpl
shlb
sbb
lods
mov
fisttps
mov
mov
adc
mov
push
lcall
js,pn
mov
es
jne
sub
shlb
push
iret
lods
pop
inc
dec
rorl
pop
lret
hlt
fisubs
sbb
add
fldt
fistl
sub
idivl
aad
clts
sbb
test
push
mov
add
jg
mov
mov
mov
mov
std
push
subb
pop
jno
mov
pop
aas
adc
push
inc
mov
outsb
lahf
cmp
push
sub
add
push
mov
out
sub
scas
and
shr
gs
in
mov
jmp
mov
jmp
jle
add
pop
aam
mov
mov
div
jno
fdivr
jae
shrl
inc
ror
mov
addr16
ss
cli
mov
push
jns
and
repz
loopne
dec
adc
xchg
push
xchg
fistps
clc
mov
adc
mov
mov
jle
cs
in
sti
das
loop
insb
jno
jo
sbb
sti
scas
sub
or
in
filds
bound
jg
std
xor
dec
jbe
jg
push
xchg
pop
sub
push
add
and
dec
addr16
mov
dec
and
push
push
aas
lcall
ret
jmp
or
std
sbb
and
mov
dec
or
cmpsl
sub
arpl
fadd
daa
mov
mull
mov
mov
imull
stos
in
rcl
in
inc
aas
in
cmp
out
sbbl
xor
stos
adc
mov
jnp
push
xlat
imul
imul
ficoms
pop
clc
pop
mov
pop
scas
sub
shl
pop
fsubs
adcl
inc
shl
subb
sti
out
mov
movsb
xchg
jae
cmpsb
leave
addr16
sub
mov
add
jl
push
mov
scas
pop
sbb
mov
mov
sahf
mov
sub
outsl
stc
sub
and
mov
cmp
inc
movsl
lahf
daa
sti
jmp
std
adc
pop
psrlw
and
adc
mov
inc
inc
adc
mov
fstl
xor
insl
fwait
pop
xchg
sub
lea
imul
scas
outsb
xchg
stos
mov
or
xor
data16
jne
test
inc
sub
mov
cmp
mov
repnz
es
or
stos
mov
jne
negl
xchg
std
sbb
not
stc
jae
mov
xor
cli
fwait
sub
aas
mov
dec
push
xchg
or
mov
mov
ss
loopne
mov
mov
mov
das
jae
ss
imul
repz
or
fs
stos
movsl
insl
sbb
add
or
pushf
sti
aas
test
sti
xorps
sub
xchg
dec
int
mov
sarl
adc
sub
sbb
xor
jmp
xor
jmp
vprotb
lods
lods
add
test
fnsave
jecxz
pop
xor
adc
adc
inc
jge
out
xchg
pop
scas
inc
xchg
adc
jge
repz
enter
std
sbb
popa
fsubrs
cli
sbb
mov
enter
pushf
leave
loop
sti
cltd
and
add
orb
jne
or
sub
cmp
fldenv
aad
imul
fucomp
ret
mov
jns
sbb
mov
add
xlat
push
mov
idivl
ficoml
sub
out
adc
es
ljmp
leave
test
dec
fwait
ds
sahf
jae
aad
pop
dec
mov
nop
pop
int
ds
push
mov
aaa
lret
fwait
daa
cmp
jecxz
loop
pusha
mov
cmc
nop
inc
push
sub
mov
std
stc
addr16
xor
adc
cmp
mov
cmp
mov
pop
mov
mov
jbe
out
push
xchg
fimuls
xlat
mov
inc
scas
je
lds
aam
lahf
ss
or
mov
lret
xor
or
stc
je
lods
mov
std
mov
mov
adc
iret
mov
mov
mov
and
scas
clc
sbb
scas
psubsw
scas
add
inc
testl
jno
xchg
pop
mov
mov
std
jmp
fwait
aas
iret
das
cmp
cltd
xchg
xchg
mov
mov
pushf
shll
fldenv
fs
out
xor
push
pop
mov
jp
repnz
daa
or
das
into
xchg
movsb
mov
mov
loopne
push
sub
jmp
sti
popf
leave
test
push
gs
rorb
xor
mov
rol
in
and
insl
mov
cmpsl
or
iret
xor
and
add
jns
ret
push
outsl
enter
js
pop
sbb
dec
and
imul
cmpsl
push
stc
pop
stc
inc
lds
sub
rcr
push
xorl
fdivl
or
mov
lods
mov
push
pop
sti
sub
sti
lcall
movsl
fwait
adc
into
jmp
icebp
dec
pop
repz
leave
movb
out
fucompp
dec
mov
add
lock
xor
mov
jg
mov
dec
xlat
aas
fstpl
sub
sub
push
xlat
jno
dec
cli
and
pop
xor
insl
dec
cmc
jl
sarl
stc
scas
cli
jmp
clc
cs
repnz
test
pop
test
fmull
pop
dec
pop
push
mov
pop
std
and
xchg
sahf
xchg
dec
dec
inc
popf
cmp
sub
orb
mov
cmpsb
pop
mov
mov
scas
movsl
mov
lahf
addr16
mov
jg
fidivs
daa
push
in
pop
movsb
jle
add
adc
nop
ljmp
popa
sub
es
xchg
mov
cwtl
or
leave
idivb
mov
sub
pop
je
xchg
or
sbb
stc
mov
out
sub
mov
and
push
add
pushf
inc
xor
pushf
xchg
adc
dec
cli
mov
or
cmp
out
push
gs
nop
fldl
push
dec
and
adc
add
out
mov
dec
cmpsl
dec
xchg
and
ljmp
hlt
push
shrl
outsb
outsl
cli
cltd
push
mov
mov
mov
cmp
xchg
inc
imul
xchg
lahf
pop
or
mov
xchg
mov
cmpsb
outsl
adc
mulb
nop
add
fildl
xor
add
loope
shl
add
imul
insb
outsl
das
repnz
sbb
add
dec
xchg
xchg
or
in
mov
mov
inc
cltd
neg
or
mov
mov
inc
aas
lcall
mov
mov
xchg
jb
sbb
add
mov
xchg
cmp
inc
fidivl
sub
push
jge
mov
adc
pop
dec
jmp
into
mov
arpl
int3
pop
pop
lea
stc
xchg
adc
cmp
sahf
mov
out
hlt
call
pop
mov
sbb
dec
lock
aas
popa
das
movsb
ds
lahf
adc
xchg
push
xor
ficoms
out
imul
into
hlt
fcompl
xchg
das
ja
push
and
loope
sub
push
fcomps
test
add
divb
fldl
fcompl
out
flds
cmp
mov
das
adc
iret
jg
test
inc
addr16
ret
jle
ret
mov
rcrl
mov
inc
inc
aad
mov
mov
dec
fcompp
shrl
sti
test
inc
fidivrs
mov
movsb
inc
xor
push
pop
inc
jne
cmpsb
jg
cli
aaa
sti
ficomps
inc
imul
pop
or
mov
out
scas
sti
out
mov
xchg
mov
cld
notb
lahf
stos
les
cld
mulb
xlat
shl
outsb
negl
mov
das
les
mov
in
push
aaa
sarl
call
sti
or
pop
lahf
lret
leave
pushf
out
repz
fs
and
pop
rorl
ja
xchg
outsb
mov
sahf
jnp
lret
pop
iret
sahf
push
dec
ss
mov
pop
pusha
pop
xchg
pop
and
addr16
push
aaa
icebp
pop
inc
push
add
fsubrs
lahf
and
int
negb
xlat
cmp
mov
out
hlt
out
and
out
cmp
add
scas
test
sbb
repz
ficoms
mov
iret
cmpsl
pop
fildll
or
add
cmp
popf
push
xchg
or
jg
mov
cmp
or
fsubl
ds
dec
sub
repz
mov
dec
aad
cld
negl
inc
xlat
std
rcrl
les
loope
fucom
outsl
filds
repnz
xlat
imulb
rcrb
les
sub
and
repz
jae
push
aas
fsubrl
and
bswap
pop
pop
pop
jl
ret
lds
jae
rorl
orl
cmp
leave
cmpl
repz
aas
add
insb
pop
push
sbb
scas
fimuls
in
divl
sub
pushf
dec
mov
scas
xchg
jmp
add
push
dec
cmc
xchg
lahf
mov
mov
dec
pop
inc
out
gs
add
sbb
fcomi
sarb
jnp
or
cmpsb
enter
or
ljmp
or
sbb
data16
dec
out
xchg
xor
push
out
jecxz
jg
mov
push
outsb
xlat
scas
cmpsl
cltd
mov
mov
daa
push
jecxz
sub
lret
fs
outsl
sub
mov
ljmp
aaa
xchg
push
cmp
add
es
xchg
jecxz
outsl
fwait
lcall
mov
jnp
lds
sub
mov
push
adc
stos
pop
xchg
out
xchg
arpl
push
sbb
mov
bound
insl
popa
filds
sub
mov
mov
xchg
pop
sub
push
jp
sbb
fimull
or
pop
push
cmc
test
jge
push
xchg
mov
sub
aaa
fst
and
imul
xlat
lahf
outsb
mov
xchg
incl
mov
sbb
je
and
adc
out
cwtl
sub
xor
cmp
ss
gs
divl
gs
adc
das
jl
outsb
lods
test
int
and
push
sbb
xchg
loope
and
jo
fwait
sub
fisubs
jg
sti
stc
push
mov
mov
mov
mov
test
or
push
dec
pop
jg
repz
push
cmpsb
mov
inc
dec
rorl
mov
jmp
leave
rcr
pop
addr16
shlb
ret
or
xlat
adc
pop
shl
xor
sbb
dec
jno
mov
jge
push
jle
pop
loop
push
negl
cmp
ret
ret
inc
jle,pt
mov
in
repz
mov
mov
push
cmc
mov
lea
mov
mov
fstp
popf
jb
inc
int3
pop
aaa
je
cwtl
loope
or
fsubrl
pop
in
repnz
adc
insb
lahf
jg
xor
mov
cmp
cld
jmp
aas
cs
shrl
inc
adc
jmp
dec
push
daa
sub
push
mov
push
pop
popa
in
fistps
cmpsb
popf
into
arpl
cli
out
cmp
scas
test
hlt
push
jge
mov
lods
pop
jg
aam
sub
test
in
int3
stc
cmpsl
cli
ljmp
jbe
jo
lret
mov
pop
pop
mov
push
dec
sahf
lods
inc
xor
mull
push
mov
addr16
shl
xor
les
aam
aad
jae
mov
nop
jle
sub
popa
xchg
pop
and
stos
mov
call
push
lods
cmp
daa
out
imul
ss
dec
fldt
pop
mov
jmp
push
ficomps
iret
push
jl
adc
and
pop
mov
arpl
push
jb
push
pop
aam
leave
lods
mov
aas
stc
movsb
fucomp
mov
in
xor
insb
cltd
fwait
out
fisttpll
ja
sarb
mov
outsb
pop
xor
jecxz
add
jg
and
sarb
mov
fstl
dec
mov
fidivl
in
pop
test
out
shrl
jge
xchg
and
lcall
cs
fwait
ds
lods
jg
std
sub
dec
add
imul
lret
lock
push
cmpl
push
in
jg
fcom
imul
jecxz
aad
in
fwait
ljmp
inc
ja
jecxz
sbb
pop
dec
movsb
mov
mov
sbb
pop
and
cld
cmc
xchg
ja
stos
jne
add
int
push
xchg
sbb
mov
dec
sub
pop
xchg
push
scas
imul
ljmp
lcall
push
lcall
jl
sahf
stos
clc
gs
out
xor
jp
mov
and
dec
mov
mov
jbe
loop
pusha
out
sub
sbb
bnd
out
insl
pop
xchg
mov
call
or
push
test
jnp
stos
insl
fisubl
push
data16
fucomi
cmp
sti
scas
fldcw
outsl
pop
lahf
fwait
xor
ja
mov
jge
lcall
out
imull
and
dec
fistps
xor
add
mov
dec
sub
or
nop
ret
ret
int
mov
ret
enter
icebp
arpl
sub
stc
cmp
call
mov
xor
scas
pop
xchg
mulb
push
pushf
dec
xchg
fsubl
imul
lea
mov
inc
sbb
in
and
flds
jnp
sbb
in
push
movnti
out
ds
sub
repz
jmp
sbb
cmpsl
jg
les
repz
push
jg
leave
enter
aam
in
rclb
out
loope
ret
ja
shll
sub
stos
xor
stc
cmpsl
adc
add
jno
mov
hlt
je
sub
test
xchg
repz
cwtl
mov
sbb
test
int3
push
xchg
sbb
mov
inc
fbld
jno
jg
or
mov
mov
hlt
push
in
push
in
aas
fdivs
scas
cmp
mov
jnp
pop
xchg
hlt
mov
jg
out
pop
fisubrl
sarb
lods
into
fistps
scas
mov
jb
insb
int3
xor
addr16
rcrl
mov
jnp
dec
mov
mov
xchg
pop
arpl
or
clc
pop
ja
push
popf
sub
inc
push
std
lcall
insl
lods
mov
scas
hlt
negl
outsb
or
mov
fadd
repz
lds
pop
and
repz
cmp
pop
and
adc
popf
dec
pop
pop
jmp
xchg
pop
mov
hlt
dec
lods
incb
movzwl
push
mov
fsubr
loopne
pop
mov
lods
xor
ffreep
loope
cwtl
cmp
das
lret
popf
scas
fidivs
lea
lahf
rcrl
stc
sub
dec
xor
jecxz
pop
and
cmp
mov
push
xchg
xlat
ja
pop
and
inc
mov
mov
mov
mov
mov
stos
pop
test
sahf
push
pop
and
mov
cmpsl
mov
xor
stc
xchg
fisubs
pop
pushf
in
push
mov
adcb
out
push
scas
add
rorl
test
mov
and
xchg
les
pop
add
push
xlat
mov
aaa
jecxz
cmp
push
pop
imul
cwtl
dec
faddl
shr
mov
fmulp
push
jp
pop
dec
mov
pushf
xor
mov
pop
cs
movb
test
mov
mov
popf
mov
imul
mov
aad
sahf
lods
rorb
popa
std
lahf
mov
mov
fiadds
int
sub
push
stc
aaa
cmp
xchg
cmpb
adcl
imul
repnz
cmpsb
dec
push
in
ret
adc
push
xor
sub
aam
mov
pop
lahf
xchg
mov
insl
jno
dec
and
mov
cmp
bound
testl
fildl
rcr
sarb
ret
dec
dec
cmp
lahf
push
adc
jg
ss
out
ds
jbe
xlat
xchg
sub
test
imul
jo
test
scas
lods
xor
repnz
xchg
or
mov
mov
mov
and
out
mov
inc
sbb
out
xor
pop
adc
pop
push
in
fdivrs
jb
sbb
cmp
mov
scas
sub
fistps
sub
and
out
lahf
cld
mov
in
addr16
cmc
fdivs
xchg
arpl
ficompl
stos
stc
js
dec
add
cli
loope
mov
xchg
pop
mov
jmp
and
pop
ja
imul
mov
cld
fstl
cltd
scas
into
mov
shlw
mov
jnp
pop
xor
add
fld
mov
push
or
mov
jmp
mov
shrl
pop
sti
jnp
jecxz
ret
cmp
aas
or
jo
cmc
sti
aas
out
pop
dec
test
mov
loopne
sbb
in
hlt
mov
mov
stos
movsb
popaw
lea
xchg
rolb
jmp
xor
in
cld
repz
je
inc
leave
test
imul
in
mov
mov
mov
stos
scas
jmp
adc
cltd
sbb
dec
mov
stos
mov
jle
inc
cs
fldenv
push
sub
shr
lcall
jge
out
std
pop
addb
into
pop
xor
out
shr
fnstcw
mov
jge
push
xor
sbb
ret
jmp
pop
add
lahf
into
xchg
lock
int3
and
repz
sub
cli
or
inc
lods
xlat
push
roll
lock
scas
std
in
dec
add
jg
adc
lea
sub
mov
insb
xchg
rcrl
clc
fisttpl
sbb
and
movsbl
mov
fwait
rcll
jae
or
addl
adc
js
es
or
jg
pop
scas
inc
cmp
sbb
cltd
mov
shl
orl
mov
xor
mov
mov
push
xor
push
aam
movb
jle
pusha
fisubl
add
inc
lea
jecxz
in
mov
push
fimuls
mov
jle
cmpsb
mov
or
movsl
fcomi
hlt
lods
adc
cltd
jp
mov
ds
sbb
inc
movsl
cmpsl
and
pop
xlat
imul
imul
data16
xlat
sub
negb
inc
mov
ficomps
mov
out
xchg
jns
cltd
sahf
jle
xor
lret
xlat
outsl
inc
push
loope
loopne
jmp
push
insb
push
xchg
lds
xor
popf
jmp
stos
cmc
dec
fmull
lods
outsb
ljmp
push
push
xor
dec
mov
ret
subl
in
ret
dec
sub
jmp
sbb
xchg
sub
push
push
xor
pop
enter
push
lods
mov
out
jnp
cltd
mov
push
lahf
arpl
push
xchg
mov
lret
std
push
push
adc
sub
mov
nop
dec
pushf
push
fcmovnu
pop
test
dec
test
insl
jns
ret
push
lods
scas
adc
pop
aas
or
repz
cmp
cmp
cs
cs
loopne
test
dec
push
fnstcw
imul
insl
cwtl
fistps
cmp
lods
add
dec
addr16
outsb
mov
sbb
jns
push
stos
xor
fnsave
fneni(8087
std
mov
jge
push
movsl
pushf
int
leave
and
les
addr16
fs
jnp
sbb
std
and
loop
mov
bsr
dec
mov
gs
mov
lods
jmp
mov
fstpl
mov
mov
icebp
daa
pop
push
mov
fildll
and
add
popl
fdivrs
pop
or
xchg
pop
inc
sbb
mov
push
cmpb
mov
pop
icebp
shl
mov
dec
push
xlat
and
jp
sti
inc
xor
and
dec
xorb
inc
dec
out
sbbb
jne
por
fwait
dec
out
fdivp
fcomip
into
out
aas
mov
testl
xlat
mov
dec
add
push
xchg
cmp
jnp
imul
les
inc
adc
cmp
mov
daa
xor
shr
int3
add
push
aaa
mulb
jnp
sti
aaa
decb
outsb
cmp
daa
lods
inc
lret
and
push
adc
inc
mov
push
fwait
roll
dec
adc
add
inc
pop
pop
scas
test
dec
aas
sbb
and
fcoms
bnd
inc
sbb
call
jbe
sub
jmp
in
aas
or
push
pop
fstps
lods
mov
jns
mov
testl
push
add
dec
int
test
rcl
mov
or
lods
std
inc
div
out
lahf
push
pushf
mov
ljmp
imul
mov
repz
and
sti
xor
test
test
pop
stos
xor
movswl
ljmp
xor
popl
add
cmp
imul
mov
bound
inc
lea
ja
or
sub
mov
cli
push
fnclex
mov
les
add
adc
jg
or
fdivs
lahf
iret
inc
data16
push
push
xchg
out
cmpsl
insl
mov
jg
sbb
jle
adc
mov
adc
stos
in
cltd
pop
repz
jo
fidivrl
fwait
scas
jg
ret
pop
pop
jp
add
cltd
sahf
mov
jne
aas
dec
push
lods
lock
xchg
inc
jne
repnz
fcomip
pop
daa
repnz
and
pop
mov
sbb
adc
daa
lahf
mov
xor
std
icebp
sbb
sti
cs
jecxz
int3
jno
imul
mov
or
push
mov
push
mov
insb
push
in
scas
push
testl
in
nop
cmc
pop
cmc
mov
push
dec
fidivs
lea
dec
jae
jae
rcrb
jne
pop
les
das
jbe
adc
into
jnp
jnp
adc
jmp
fcom
dec
orl
dec
into
iret
adc
scas
rcrl
sub
mov
sbb
push
jns
add
loope
loopne
mov
mov
lock
iret
add
lahf
push
xchg
and
shrb
in
ror
sarl
cmpsl
insl
mov
pop
lahf
imul
pop
xchg
repnz
ja
sub
ret
lea
jnp
mov
stos
pop
jo
jle
or
mov
xchg
pusha
imul
loop
inc
sub
jns
sub
mov
or
js
sub
adc
xor
pop
gs
add
lock
fprem1
mov
rcrl
cwtl
int
andb
shrb
repz
iret
filds
sub
lret
pop
out
mov
inc
lahf
outsl
sub
jmp
xchg
sub
iret
subl
popf
ds
imul
adc
pop
mov
mov
inc
sub
adcb
pop
fstpt
fldt
sbb
mov
insb
mov
in
jne
add
mov
mov
fld
dec
out
imul
mov
flds
push
sub
loope
mov
lea
mov
sahf
imul
lea
mov
sub
xchg
mov
sub
pop
push
xor
pushf
inc
call
jne
mov
shl
mov
mov
aad
jmp
sbb
std
aam
repz
fnstcw
xlat
sub
ret
cmp
scas
stos
mov
jnp
ja
pop
fsincos
lods
pop
gs
cli
in
push
jmp
push
pop
mov
sub
sar
push
lret
repz
xor
inc
cmpsl
lcall
jle
pop
xchg
xlat
mov
call
out
jno
pop
hlt
lahf
pusha
xchg
out
cmp
sbb
lock
mov
rcr
clc
mov
fidivs
mov
movq
mov
sub
push
fdiv
jp
out
sub
cmp
pop
cld
push
mov
jecxz
mov
add
add
sub
xor
jns
cli
fs
jecxz
adc
pop
pop
or
adc
lods
daa
cmpsl
in
outsb
je
adc
icebp
adc
scas
shll
push
jnp
dec
xchg
lahf
insl
mov
sbb
pop
lock
sbb
pop
iret
mov
out
pusha
lcall
std
xchg
repz
cmc
push
data16
mov
repz
inc
ret
idivb
dec
lock
int
sub
jg
imull
fistpll
mov
pop
jecxz
fisubrs
out
lahf
fbstp
inc
fld
lds
aam
aas
xor
xor
dec
adc
fists
cmp
push
decb
fisubrs
mov
insl
dec
mov
repz
out
adc
shll
idivb
dec
cli
or
scas
addr16
stos
xlat
lret
mov
scas
adc
push
subl
mov
adc
int
xchg
enter
hlt
adc
in
rcrb
and
movsl
adc
mov
cwtl
arpl
cmp
out
pop
fs
fcmovbe
pop
push
or
pop
push
mov
add
pop
mov
jne
jae
xchg
mov
js
inc
mov
xor
sub
or
mov
lcall
out
cs
ret
aam
outsb
xor
pop
sti
mov
xlat
push
stos
mov
mov
xchg
test
cmpsl
push
push
stc
les
or
cs
or
jbe
and
dec
inc
sub
inc
pop
rcr
mov
xchg
add
fldcw
enter
cmpsb
cltd
xchg
scas
add
dec
fsub
inc
or
xlat
stos
mov
imul
dec
addr16
leave
pushf
out
movsl
xlat
out
fisubrs
xchg
ficomps
int3
out
fstps
aad
add
mov
dec
fidivs
roll
xchg
in
lea
cs
cmp
mov
sarb
ficoms
inc
dec
sub
pop
adc
xor
mov
and
inc
push
icebp
or
xchg
push
imul
xor
cmp
aas
movsl
push
and
out
add
xlat
push
ret
add
mov
out
add
or
cmpsl
aas
cmpsb
dec
sbb
xchg
ljmp
jecxz
dec
lahf
dec
aam
adc
mov
jle
outsb
negl
sub
mov
imul
adc
xor
jae
pop
popf
imull
pop
adc
orl
arpl
inc
dec
sbb
sarl
push
add
xlat
cli
lods
pop
outsl
xlat
sbb
mov
adc
dec
mov
inc
idivb
ficompl
fwait
sub
xchg
jge
sub
imul
ret
stos
inc
mov
jl
sbb
cli
jecxz
fadd
push
or
add
aaa
cs
scas
shll
inc
jns
lods
jge
jmp
push
ficoms
shrl
xor
add
cmpsb
test
int
lods
dec
shrl
push
pop
addr16
sub
fnstenv
jno
pop
xchg
cmpl
inc
add
sahf
test
lock
inc
ficomps
push
pop
mov
pop
mov
sarb
jo
cmp
cltd
mov
dec
push
popf
dec
sub
sub
shll
or
dec
xchg
std
aad
mov
sub
pop
addr16
notl
iret
mov
scas
pushf
dec
test
mov
jmp
daa
fldl2e
xchg
in
iretw
jle
fstpt
push
mov
pop
cmp
ror
je
jl
mov
mov
lods
cmp
push
stc
mov
call
loop
push
in
mov
inc
xchg
push
fdivr
cwtl
mov
cmp
mov
cmp
scas
sub
jo
mov
jns
lea
cmp
sub
sbb
sub
lods
insb
push
jle
scas
or
adc
jmp
mov
push
mov
dec
addr16
mov
jge
xchg
imul
xchg
or
sbb
sbb
pop
jle
mov
vaddss
jg
out
pop
inc
mov
cs
fs
fdivl
insl
pop
push
xchg
sti
xor
xchg
inc
mov
test
pop
in
mov
insb
in
outsb
out
pushf
sub
movsl
shll
or
cmp
fisubrs
mov
data16
fwait
stos
dec
pop
cwtl
leave
stc
adc
inc
pusha
rorb
mov
outsl
cmpsb
shll
pop
data16
adc
testl
or
fnstenv
dec
in
testl
aas
stc
lret
jmp
jne
inc
cmp
cmp
aas
mov
call
xlat
add
mov
add
add
mov
rorb
jg
popa
loopne
aam
scas
add
sbb
pop
xchg
jnp
clc
dec
mov
or
popa
hlt
and
xchg
das
push
aaa
or
orb
mov
inc
into
movsl
xor
push
jno
fldcw
add
aas
dec
in
imul
cltd
push
stos
mov
mov
adc
adc
repz
cld
scas
cmp
hlt
pop
and
into
lret
stc
negl
pop
stos
cmp
mov
jge
jmp
push
push
cmc
jmp
sti
mov
pop
ja
mov
pop
aad
cmp
add
ror
jnp
jbe
lock
out
repnz
add
les
bound
pop
push
and
addr16
repz
bt
cld
inc
pop
xchg
ss
mov
push
push
gs
lret
sti
cmp
out
mov
cmc
jae
pop
lds
mov
lret
adc
fmull
sbb
sti
pop
fimuls
mov
dec
adc
test
jae
pop
into
and
stc
adc
inc
es
das
adc
dec
stos
imul
imul
shll
sbb
mov
mov
das
xor
push
daa
cmc
mov
dec
pop
mov
out
jne
mov
cmp
dec
dec
lret
fisttpll
mov
xchg
mov
ss
push
dec
lea
loope
push
mov
sbb
loopne
aas
push
or
hlt
addr16
out
cld
jmp
jecxz
arpl
pop
scas
mov
jg
xlat
jnp
add
mov
out
add
fidivrl
hlt
push
stos
hlt
in
mov
mov
aad
jmp
mov
xchg
pop
dec
ds
mov
pop
test
or
outsl
fdivrs
test
cmp
fsubrl
xor
jae
xchg
or
stos
icebp
hlt
js
sarl
dec
jmp
jp
jo
mov
movsb
xchg
push
and
jae
clc
js
cmc
pop
shrb
loop
xchg
pop
insl
cmp
out
xor
test
lcall
pop
icebp
jg
pop
aas
add
int
repnz
fwait
pop
outsb
sbb
repz
or
fsave
pop
ds
lods
xor
daa
ret
call
jbe
ret
sub
mov
inc
jge
jge
lods
dec
hlt
xchg
pop
pop
mov
fistpl
jnp
cmp
ret
fisttpll
out
ret
or
outsl
mov
pop
pop
dec
and
mov
loop
shr
call
testl
and
fbld
subl
jns
jae
movl
xchg
jmp
addb
jo
aad
and
in
inc
inc
popa
out
mov
movb
stc
jge
mov
ds
mov
scas
fmulp
lods
cwtl
sahf
cs
lret
stos
add
inc
outsl
sbb
fcompl
mov
out
loop
dec
mov
jno
pop
outsb
lahf
pop
lods
shll
cmpsl
loop
xor
push
dec
mov
addr16
int
pushf
ja
mov
divl
pop
and
push
sbb
leave
or
popf
jle
fwait
std
push
mov
sbb
dec
jo
scas
hlt
jae
call
mov
xchg
lcall
jmp
jae
sbb
repnz
dec
call
cmp
pop
mov
sbb
add
leave
mov
push
je
mov
rcrb
xchg
jbe
jp
cmpsl
filds
dec
mov
push
cmp
mov
testb
idiv
push
mov
scas
icebp
add
or
ss
xorb
sbb
filds
repz
jl
iret
cwtl
mov
lock
mov
outsl
aam
and
out
pop
push
jns
add
hlt
lahf
hlt
cmp
dec
mov
ret
inc
clc
and
lds
or
sti
add
cmc
pop
push
pop
pushf
inc
xchg
neg
mov
data16
shld
in
add
push
clc
jl
mov
js
mov
xor
clc
dec
fld
ds
xchg
dec
popf
ss
leave
cs
mov
dec
push
dec
in
add
hlt
imul
inc
jl
or
mov
and
jnp
imul
scas
cltd
jo
jecxz
fidivrs
cmp
test
loopne
or
dec
arpl
sub
or
jge
ret
out
int
out
push
jnp
lea
scas
sbb
xchg
lock
lds
shlb
push
int
rorl
notb
repnz
mov
and
mov
pushf
xlat
repnz
add
out
in
and
leave
sub
dec
push
xlat
xor
add
pop
push
call
cli
loop
cwtl
adc
jb
cld
sub
pop
shll
adc
push
imul
xor
adc
outsb
test
xchg
in
inc
pop
into
bound
es
aam
movsb
repz
scas
idivl
add
cwtl
sbb
sbb
mov
idivl
orb
out
insl
mov
inc
fadd
sub
aas
pop
push
rcrl
mul
out
adc
lods
stos
stos
push
sub
dec
mov
cld
lahf
leave
push
xlat
or
pusha
xor
xchg
repz
or
lahf
mov
adc
cld
push
jmp
mov
xchg
jmp
push
clc
mov
out
into
adc
stos
mov
cld
pop
clc
insl
notl
inc
movsl
lods
fs
mov
aas
push
std
mov
test
cltd
sti
insl
mov
xchg
cli
test
mov
mov
push
and
lock
rcl
stos
mov
mov
fwait
lahf
call
mov
sahf
cmp
mov
pop
push
div
xchg
cli
fidivs
mov
shrb
push
mov
mov
pop
lds
out
cmpsb
shl
repz
mov
sahf
or
rolb
cmp
pop
push
and
ret
sbb
pop
xchg
cmp
repnz
nop
adc
sub
pop
pop
sub
cmp
xlat
cmpl
mov
rol
lret
push
sbb
or
adc
leave
scas
popf
std
sbb
and
pop
xchg
loope
and
out
or
mov
xchg
push
pop
outsl
int3
sub
jnp
adc
icebp
cmp
jp
repz
jge
cli
mov
or
fistps
jne
roll
andl
mov
js
scas
jbe
push
add
je
mov
inc
inc
push
cwtl
movsb
cmp
call
daa
mov
mov
inc
loopne
sub
je
mov
mov
add
aas
fists
xor
fcompl
xchg
jo
mov
cltd
mov
arpl
leave
xor
mov
and
jnp
test
dec
pop
shl
call
xchg
sub
cli
imul
stc
pop
jnp
fsubrs
aas
out
cltd
or
repnz
xor
aad
xchg
pop
mov
xchg
mov
inc
lock
fistps
push
addr16
mov
hlt
mov
fistpl
data16
into
push
mov
int
repnz
mov
sbb
in
mov
sbb
add
rclb
lahf
mov
fmul
jnp
loopne
pushf
fdivs
cmp
mov
stc
inc
data16
jmp
mov
mov
out
mov
push
test
ja
fs
pusha
or
stc
jo
lods
dec
ss
xchg
mov
push
or
insl
clc
mov
inc
out
mov
mov
mov
or
scas
cs
pop
jnp
fistpll
mov
or
lods
ljmp
fidivrl
aaa
cli
aas
out
sub
out
es
xchg
dec
cmp
mov
and
inc
mov
out
aad
lods
push
xchg
xor
mov
sub
fiaddl
push
dec
iret
cmc
sub
inc
mov
test
repz
in
sub
imul
mov
sbb
or
cli
and
in
call
iret
mov
or
dec
xor
lahf
xchg
mov
jb
js
mov
add
jne
dec
pop
stc
lock
aam
jg
mov
sbb
jno
mov
montmul
cmpsb
inc
popf
jmp
rorb
neg
sub
es
jnp
les
jne
out
rorb
cltd
andb
call
shll
imul
mov
sbb
ja
sti
xor
or
pop
xor
cs
xchg
aas
in
fcoms
rorl
push
les
cmp
outsl
ds
ret
push
orb
outsb
cltd
jg
cld
inc
dec
sti
outsl
addr16
and
add
lcall
into
xor
inc
std
push
mov
mov
scas
pop
cmp
xlat
lds
rorl
lock
ja
pop
push
hlt
cltd
cmp
inc
out
push
xchg
cmp
inc
and
std
or
sbb
push
pop
jmp
push
dec
leave
movsb
jp
mov
push
pop
xor
imul
out
test
ja
mov
ficompl
mov
jno
pop
into
mov
xchg
dec
dec
pusha
dec
cs
cmc
stc
scas
mov
mov
test
cld
mov
xchg
pop
mov
dec
cmp
xchg
pop
sub
ret
xor
jle
cli
push
add
push
sahf
rcl
mov
and
stos
cld
pop
jle
sub
and
ret
pushf
mov
jns
sbb
pop
jle
xchg
mov
jl
lret
rep
mov
rorl
lret
push
ljmp
inc
addr16
lret
mov
nop
fidivl
cld
mov
mov
jg
icebp
or
cltd
into
mov
arpl
mov
cli
out
ficoms
jne
cmp
mov
xchg
or
rcl
addb
mov
mov
jg
pminsw
cli
mov
inc
mov
ljmp
add
sbb
call
imul
mov
into
ds
je
iret
cltd
or
mov
push
dec
leave
imul
xchg
mov
dec
adcl
xchg
lods
mov
iret
adc
jno
movsb
cmp
dec
mov
mov
insl
idiv
ljmp
sbb
adc
mov
lret
mov
push
faddl
mov
pusha
cmp
add
cmp
xlat
add
nop
xchg
adc
mov
sub
mov
sbb
mov
cmp
pusha
sti
mov
dec
add
jnp
rcrl
or
in
lret
test
cli
mov
fidivrl
stc
xor
sbb
ja
cltd
pop
add
jge
lods
out
or
or
lea
hlt
outsl
rclb
mov
das
adc
testl
leave
in
pushf
xor
or
mov
ficomps
fwait
call
lret
inc
sub
out
stos
pop
lret
adc
stos
jne
jnp,pn
sahf
loop
push
mov
ds
xor
cmp
lds
or
inc
rorl
mov
push
shrl
xor
add
mov
es
orl
adc
mov
outsl
aaa
sub
mov
lret
mov
popf
and
inc
scas
cli
jmp
pop
lock
das
add
int3
pop
mov
flds
iret
cmc
xchg
faddl
and
xchg
cmp
lahf
xchg
cs
fisttpl
das
movb
mov
and
scas
loope
add
out
aaa
icebp
movsb
or
or
push
imull
cmpb
jmp
mov
out
jno,pt
pop
aad
add
ljmp
jge
or
mov
add
mov
push
mov
cmp
mov
sbb
ss
push
push
mov
fcomip
sbb
sub
shlb
je
pop
insl
or
lret
mov
jl
icebp
add
sti
add
pop
and
push
repz
push
sub
mov
push
fstpt
xchg
jmp
adc
dec
push
enter
cmpsb
out
idivl
psubusw
mov
ja
lods
xor
in
push
scas
mov
sub
sbb
xor
repz
adc
mov
cmp
lods
jne
out
into
mov
xor
mov
and
pop
sub
lods
cli
data16
sbb
fcoml
mov
insb
sbb
jns
popf
mov
out
bound
or
jp
xchg
sbb
lret
addb
adc
fistpll
cs
imul
mov
es
inc
int
lahf
add
cmp
call
sahf
mul
lahf
arpl
adc
jl
sub
je
fnstcw
in
mov
adc
cmp
jmp
xlat
inc
dec
imul
jge
mov
add
jne
mov
repnz
imul
jnp
dec
or
sub
arpl
mov
xchg
addr16
mov
mov
mov
add
pop
push
xchg
push
or
das
cmpsl
enter
ret
pop
inc
lock
clc
ljmp
fbstp
aas
cmpsl
pop
push
mov
xchg
dec
shlb
jle
lahf
faddl
lahf
test
call
sub
sub
aad
and
jmp
and
add
push
out
shrl
lahf
icebp
repnz
clc
push
jmp
jo
jge
xor
sarb
addr16
cmp
outsb
xchg
iret
es
sub
add
xor
insl
mov
push
pop
mov
mov
insl
pop
scas
in
and
js
fwait
mov
cmp
dec
test
lods
hlt
add
fiadds
std
lcall
into
cs
into
xchg
jg
shll
cmp
ror
push
mov
ret
dec
xor
int3
popa
push
mov
orl
std
pop
and
lock
dec
out
add
add
jbe
dec
inc
fidivrl
xor
cmp
repnz
ljmp
push
aas
mov
addl
loopne
cmpsl
testb
xlat
dec
xor
sbbb
rcll
pushf
clc
fiaddl
mov
lahf
xlat
roll
data16
inc
fnclex
push
ja
loop
ret
cmp
cmp
inc
mov
cpuid
outsl
outsb
xchg
mov
sub
inc
xor
mov
or
xchg
jecxz
out
mov
movsl
mov
ja
js
shll
sti
pop
xchg
mov
sub
inc
roll
std
insb
leave
loope
out
add
sub
pushf
int3
fwait
jle
jecxz
rcrb
mov
mov
test
sub
incb
mov
enter
mov
into
jge
in
adc
filds
xor
push
cmc
jecxz
mov
xlat
cltd
add
xchg
or
btsl
scas
mov
inc
idivb
mov
add
rol
test
mov
dec
inc
pop
movsl
dec
dec
cli
or
lods
jge
int
mov
bound
fucom
jns
mov
mov
jns
aaa
shrb
or
insb
or
fsin
stos
mov
filds
flds
flds
inc
ljmp
int
xchg
das
mov
aaa
pop
fisttpl
outsl
incb
into
sbb
xchg
data16
xchg
mov
stos
xchg
cmpsl
cmpsl
movsl
loope
and
cmc
cmpb
adc
pop
mov
testl
es
aas
cld
jge
mov
test
out
lea
std
mov
nop
stos
stc
push
pop
ja
lods
leave
scas
add
and
ret
es
and
dec
push
or
mov
repnz
pop
lret
lahf
xchg
push
pop
mov
sbb
fisubrs
mov
dec
pop
mov
subps
ret
loop
sub
cmp
pop
stos
fiadds
sub
pop
adc
xchg
mov
in
mov
and
add
or
xchg
vpermilps
jns
and
xchg
insb
sub
or
jne
out
or
popf
test
inc
fsubrs
test
negb
cmpsb
jb
data16
call
mov
jp
ds
or
sub
pop
fists
iret
jmp
imul
pop
out
mov
dec
movsl
jge
stc
fdivs
sbb
popa
xchg
cs
testb
pop
pop
in
fnsave
and
mov
mov
sbb
pop
ficoml
jno
pop
dec
pop
xor
push
and
insl
pop
movsl
or
test
inc
push
push
sbb
sub
inc
ljmp
cmpsl
movsb
les
mov
gs
ljmp
aas
fistps
and
call
pop
pop
jle
cltd
jg
add
mov
mov
cmpsb
sbb
dec
adc
outsb
icebp
sbb
dec
xor
mov
shlb
mov
dec
cli
jp
mov
sti
sbb
lret
ret
lods
imulb
mov
push
divps
adc
push
mov
loop
sahf
fwait
imul
cmpsb
and
addl
add
movsl
inc
lret
xlat
movsl
mov
iret
lcall
push
out
shr
push
dec
xor
pop
clc
cmc
mov
sbbb
cli
push
add
xor
fld
jae
mov
xchg
js
pop
jo
mov
mov
fwait
outsb
dec
fs
add
push
mov
lcall
in
sahf
mov
jmp
shl
inc
sub
push
dec
and
sbb
imul
pop
fwait
mov
jb
fucomi
mov
jg
xor
ret
ret
mov
and
pop
or
mov
pop
pop
je
or
repz
and
lock
mov
mov
js
dec
inc
scas
scas
pop
pushf
xor
addb
push
mov
clc
or
xor
pop
loopne
dec
jbe
je
add
int3
cli
jg
mov
mov
xchg
popa
and
lret
push
rorb
lret
fldt
inc
adc
mov
lea
mov
mov
rorb
pop
xor
loope
mov
das
mov
jns
push
jne
pop
xor
shll
cmp
pop
jmp
dec
sub
cld
pop
xor
scas
clc
inc
std
mov
ds
sbb
stos
mov
xor
fs
insl
xchg
inc
cltd
push
push
sub
fnsave
repz
cmp
or
ds
pop
icebp
cmc
mov
ja
fisttps
inc
dec
xlat
fstpt
push
cld
lret
cs
fnstenv
pop
mov
mov
xchg
scas
adc
cmp
out
jl
into
repz
mov
in
sarb
hlt
cmp
jge
xor
inc
sub
daa
jg
inc
jnp
push
push
inc
fiadds
and
inc
mov
inc
ja
cmc
xchg
ljmp
adc
cmp
outsl
inc
repz
out
fcoms
fdivl
loopne
pop
arpl
in
scas
xchg
pop
cli
sub
inc
jge
in
daa
fneni(8087
sti
pushf
pusha
stos
xchg
test
imul
fstps
mov
pop
fcomip
out
mov
cld
jnp
aad
cmp
aad
repnz
pop
out
jnp
mov
pop
in
hlt
ror
repnz
sub
fistpl
stc
or
inc
xor
xor
mov
cmp
sarl
mov
sub
mov
add
inc
lods
adc
xlat
popa
mov
addr16
jae
jg
ljmp
mov
hlt
jae
mov
cmpsb
fldcw
pop
fnstenv
mov
adc
ret
int
inc
pushf
repz
mov
ret
and
lret
sbb
repnz
pop
add
pushf
inc
cmp
cmp
arpl
pop
sbb
fsubrp
outsb
es
repz
movsl
sub
mov
in
loop
inc
fcmove
pop
iret
testl
push
pop
and
and
ds
jp
push
xor
jmp
scas
sub
pushw
add
out
fwait
mov
mov
push
jae
jecxz
and
pop
inc
jg
mov
xchg
loope
sub
icebp
insb
push
out
rcrb
xchg
inc
fidivrl
test
cmpsl
cmp
push
jnp
sub
inc
cmp
leave
outsb
ljmp
rcrl
mov
add
outsl
idivb
xchg
inc
inc
push
rcr
mov
sub
cmp
fisttpll
out
loope
fistpll
int
mov
mov
rolb
xchg
loope
fildll
bound
lea
aas
outsl
xor
ja
mov
pop
sub
lea
in
addr16
jnp
mov
mov
fnsave
jecxz
test
nop
cltd
xlat
lret
testl
jge
pop
mov
inc
stc
pop
imul
fldt
jecxz
adc
add
sar
js
sahf
pop
inc
mov
outsl
movsb
pop
scas
push
cmpsl
in
push
lcall
jg
std
or
in
andl
jmp
xlat
aad
in
add
xlat
fisubrs
scas
loop
dec
rorl
fstpt
mov
jecxz
adc
sub
push
add
xchg
sbb
test
adc
push
cmpsb
ret
idivb
push
repz
ss
sahf
mov
ret
mov
xchg
mov
mov
js
jno
movsl
movsb
push
test
into
in
icebp
outsb
in
iret
in
sbb
add
enter
aaa
jg
outsl
mov
jns
add
arpl
sbb
and
dec
adcl
cs
iret
mov
repz
lcall
xchg
cmpsl
mov
insb
repz
fldenv
and
sbb
push
mov
fstpt
and
fucomp
cs
fucomp
cmpsb
ds
in
sbb
jnp
sahf
stc
dec
fistps
mov
sub
jl
lock
ja
icebp
das
mov
cmpsl
cmc
adc
mov
sbb
sahf
aas
call
adc
mov
add
add
icebp
shll
mov
decb
sahf
arpl
dec
add
daa
bound
int3
mov
fnstenv
inc
addr16
pextrw
sbb
hlt
push
add
xchg
add
pusha
xlat
add
jbe
pop
jecxz
js
cs
sub
mov
lahf
in
mov
fnstcw
jg
pusha
jecxz
psubb
std
scas
cld
clc
mov
jb
push
inc
out
jb
pushf
iret
mov
clc
aas
scas
loopne
jmp
xor
pop
shll
cmp
sbb
cmpsl
push
scas
sti
pop
into
aas
xor
ret
jae
add
test
xor
in
cmc
shl
sub
pop
out
std
sbb
lods
mov
dec
jg
fimuls
add
xchg
inc
mov
jb
jo
insb
orb
int
call
sbb
scas
push
or
test
push
jg
sub
icebp
pop
pop
jmp
or
sbb
adc
cmpb
xchg
sti
push
sbb
popf
pop
scas
ret
je
fldcw
jle
mov
inc
mov
in
xor
or
mov
lahf
out
push
adc
sbb
in
xchg
inc
fldl
mov
ficoms
adc
inc
and
mov
add
fisubrl
mov
mov
pop
mov
out
rclb
imul
fistpll
mov
nop
xchg
scas
pop
pop
inc
aas
mov
adc
sbb
xlat
ret
jmp
sbb
inc
mov
add
lods
jg
ds
loopne
add
push
in
dec
test
std
scas
mov
push
mov
pop
clc
adc
inc
mov
out
in
push
or
lahf
adc
repz
out
adc
repz
push
imul
ljmp
dec
faddl
adc
sti
cltd
adc
imul
mov
push
or
out
and
bound
pop
ret
fdivs
scas
cmpsb
push
sub
mov
idivb
xchg
imul
je
push
jp
mov
add
mov
mov
aam
mov
fistl
sub
mov
lock
add
fisubrs
shrb
lret
mov
insb
in
lock
mov
jl
lret
add
aad
mov
fidivrl
fildll
ret
push
mov
adc
mov
push
ficomps
lea
mov
bound
mov
cmpsl
push
enter
cmp
cmp
push
rclb
mov
loopne
inc
push
mov
call
cwtl
pop
cmpsl
xor
push
and
fisttps
cmp
iret
adc
or
pop
cwtl
gs
xor
mov
dec
mov
in
or
xor
into
xor
fwait
pop
repnz
push
xor
cmp
inc
inc
rcrl
mov
popl
movsb
pop
push
inc
mov
and
mov
mov
or
dec
sbb
fisubs
outsl
ljmp
rcll
fcmovnbe
jno
pop
adc
push
add
pop
mov
mov
mull
xchg
lret
aas
lcall
ja
add
xchg
ret
loope
aaa
cwtl
pop
fiaddl
mov
xor
push
aam
out
adc
sbb
pop
xor
out
iret
idivl
loopne
insl
rcll
xor
mov
dec
daa
negb
cmp
leave
lods
pop
xchg
cmp
xchg
aas
pop
adc
int
sub
repz
adc
and
fidivrl
jbe
inc
inc
call
add
fs
mov
cmpsl
pop
pop
add
std
push
xchg
mov
pushf
ss
push
xchg
aaa
xchg
jbe,pt
lea
mov
into
or
rol
fninit
rcrb
xor
push
fimuls
frstor
movsb
xchg
fdecstp
dec
mov
fistps
pushf
sti
push
add
add
xchg
out
das
jl
pop
arpl
sarb
inc
mov
pop
cmp
testl
mov
sbb
mov
mov
dec
pop
mov
sub
mov
cmpsl
adc
into
sbb
pop
jle
lret
xlat
ret
jmp
pop
sti
stc
in
sbb
jmp
rcll
add
mov
mulb
xor
sysret
rcrl
mov
push
xor
aas
mov
adc
adc
add
inc
repnz
nopl
data16
adc
outsb
add
aam
sub
jnp
xlat
pop
leave
mov
inc
iret
adc
add
inc
vpxor
mov
xor
pop
cmc
mov
pop
xorl
cmpsb
in
cs
push
test
pop
push
out
push
mov
or
mov
rcr
ret
sub
jle
xchg
sarb
addr16
pop
cmp
loope
add
and
jp
and
out
add
js
and
dec
lahf
fcompl
out
push
cmpb
dec
add
push
jmp
jae
fimuls
pop
or
ja
push
sub
test
mov
mov
fld
loop
sub
es
mov
iret
ret
push
push
ret
fcmovnu
into
cs
idivb
hlt
shl
add
mov
pop
loope
aad
loop
loop
std
lock
jl
inc
iretw
xchg
sub
mov
push
sub
pushf
add
repz
push
ret
adc
enter
scas
push
mov
mov
int
push
dec
mov
imul
mov
jne
mov
fdivrs
and
xor
jno
scas
adc
stos
cmp
mov
aad
fldt
std
test
or
loopne
mov
inc
aad
decb
frstor
fisttpl
adcl
fisubrl
insb
addr16
pop
mov
mov
push
sbb
pop
mov
ds
sarl
dec
daa
mov
mov
push
add
rcll
push
adc
lds
xor
mov
sbb
clc
add
inc
push
cmp
pop
add
fsubp
sbb
and
mov
stc
data16
std
dec
out
fadds
sub
xchg
cmp
mov
pop
fisttpll
loopne
mov
call
in
xor
repnz
push
inc
mov
outsl
out
fidivs
outsb
cmp
push
mov
mov
xor
ljmp
into
loop
and
sub
testl
adc
dec
mov
pusha
cmp
adc
in
mov
stc
xor
fsubs
jnp
insl
ljmp
push
dec
sti
ljmp
jmp
notb
out
push
sarl
jg
aam
addr16
and
jb
push
pop
pusha
lahf
pop
adc
mov
jno
insl
call
ret
fimull
test
mov
stos
or
pop
sbb
cmpsl
and
in
in
aad
out
mov
nop
push
iret
outsb
xlat
mov
inc
and
mov
aam
push
mov
loope
sbb
and
stos
repz
rolb
movsb
rolb
clc
dec
mov
popa
xlat
roll
sbb
adc
adc
xchg
ja
mov
das
xchg
push
outsl
mov
in
mov
cld
stos
mov
xchg
sub
mov
dec
cmpl
outsb
push
lock
cmpsb
jl
clc
jmp
repz
sub
fucom
mov
jle
xor
aaa
aad
rcll
push
mov
cs
out
aad
pop
adc
push
mov
xor
inc
jl
loope
ret
lock
stos
data16
cmp
inc
inc
adc
orb
call
jge
push
jns
push
mov
enter
bound
sti
sbb
shl
mov
lret
mov
in
dec
mov
mov
sub
push
je
gs
ds
mov
jle
cmp
pop
mov
iret
dec
repnz
ljmp
cmpsl
nop
add
adc
shl
sub
mov
jp
clc
ds
dec
dec
out
stc
idivl
outsl
fistps
dec
idivl
loopne
das
outsb
mov
push
pop
jg
invd
mov
out
movsl
movsb
scas
outsb
fsubp
into
fistpll
std
sbb
mov
jns
cs
sbb
pop
adc
inc
scas
xor
mov
hlt
inc
out
mov
or
pop
sahf
ds
outsb
mov
std
les
or
dec
pop
xchg
mov
fdivrp
fstpt
out
mov
daa
and
stos
lcall
fstps
out
int
repnz
ja
cmp
popf
fucomip
push
out
xchg
xor
jle
sti
mov
es
pusha
jmp
pop
lret
sub
sbb
nop
mov
cs
mov
sbb
arpl
sahf
repnz
or
push
dec
and
imul
lods
sti
cld
jmp
rcl
xchg
and
mov
xchg
scas
pop
fists
sbb
cs
adc
inc
leave
inc
mov
shrb
mov
fistpll
sti
mov
cmp
out
sub
stos
lods
into
or
mov
dec
enter
movsl
in
cmp
iret
in
stos
mov
inc
mov
pop
imulb
jecxz
mov
xor
pop
jb
jns
or
pushf
test
cmp
sub
dec
xchg
fists
fcompl
and
movsl
jg
adc
ret
out
mov
mov
in
mov
mov
jg
iret
mov
stos
outsl
push
push
scas
xchg
mov
cmpsl
xor
ja
mov
ret
in
cmp
add
mov
jno
xor
stc
je
mov
scas
and
scas
push
aam
in
fistpll
pop
mov
xchg
or
push
pop
rcrb
adc
and
mov
icebp
iret
pop
sti
push
aaa
lahf
leave
jg
shl
inc
mov
out
or
out
push
mov
fsub
pushf
xor
sbb
lret
xor
shr
movsl
inc
or
arpl
fnstcw
jb
int3
hlt
adc
imul
ficoml
es
adc
outsb
outsb
ja
std
xor
push
loopne
dec
sbb
cmp
pop
test
jp
popa
or
adc
mov
mov
jmp
jnp
dec
and
mov
fnstsw
pushf
stc
into
xchg
cld
mov
pop
or
pop
cmp
dec
mov
aaa
out
push
fildl
gs
loopne
mov
jecxz
push
pop
sti
stos
or
mov
out
aad
jo
jnp
lahf
xchg
fstps
sbb
add
jnp
cmp
push
insb
es
adcl
cmp
cmp
or
xchg
push
fcomp
lret
scas
mov
movsl
outsb
fsub
dec
dec
call
shrb
loop
lock
push
repnz
sub
flds
push
lret
inc
cmpsb
pop
test
imul
sbbb
inc
imul
lahf
inc
sub
imul
iret
ja
fildll
sub
xor
cmc
test
jbe
das
sub
dec
mov
std
jae
ss
pop
fbstp
movl
or
or
mov
iret
push
pop
adc
dec
es
jb
pushf
jle
in
xor
mov
out
and
xchg
sbb
out
fdivrs
xchg
out
mov
jle
fadds
scas
jmp
dec
cltd
ljmp
ss
pop
lock
ja
mov
fsubrp
cs
leave
movsl
jge
fs
test
out
stc
iret
mov
sbb
scas
in
jbe
cs
push
stos
jae
add
mull
mov
pop
int
sbb
jg
pop
idivl
mov
cltd
icebp
pop
cmp
shlb
paddb
aas
add
ljmp
test
push
outsb
into
and
or
scas
or
mov
lds
mov
test
cmpsl
jne
idivb
in
inc
outsb
mov
jbe
mov
fcompp
xlat
stos
xor
nop
shl
popf
nop
cmp
loope
mov
outsb
rcrl
jns
leave
out
pop
add
cmp
adc
std
cli
adc
xor
fidivrs
loop
push
push
xchg
pop
xor
pop
sub
pop
mov
push
fists
loopne
adc
lahf
mov
repz
push
lret
sub
pop
inc
or
sti
xor
mov
xchg
sub
dec
xchg
movsl
in
fbstp
mov
inc
mov
pop
in
lods
and
into
or
outsb
out
out
test
xlat
add
mov
and
push
mov
mov
movsl
sti
cli
imul
xchg
sub
fadds
jmp
clc
outsl
cmp
ret
paddb
fcmovnu
negl
sbb
mov
inc
adc
push
out
fs
mov
decb
or
fistps
lahf
fdivr
js
cmp
sbb
cs
cmp
arpl
lock
sahf
les
insl
push
andb
test
sbb
inc
sarl
mov
ret
jmp
pop
rcl
adc
cmp
or
js
pop
dec
push
mov
js
add
arpl
mov
mov
xor
aad
test
add
movb
sbb
idivl
cmp
loop
ret
test
fldenv
fsubs
es
ret
xchg
leave
test
js
dec
adc
xchg
mov
aad
mov
loopw
adc
lods
mov
loopne
add
inc
sub
push
lret
cs
push
es
vcvtss2si
pop
int
mov
pop
xor
movsb
loop
call
jnp
das
out
cmc
mov
arpl
ja
enter
ljmp
and
push
icebp
xchg
fld
xlat
inc
shrl
jne
fidivl
add
push
shll
negb
in
test
aad
aaa
fimuls
add
fs
cmp
sub
adc
call
xchg
fnstcw
xchg
fsubrs
xchg
and
std
fdiv
mov
pop
fldl2e
into
lret
cmp
push
push
adc
es
sbb
sbb
gs
add
sbb
push
ds
push
sbb
xlat
in
out
push
and
xor
das
dec
pop
aas
cs
fnstcw
sahf
or
clc
push
cld
jmp
add
and
sub
lret
jnp
sbb
shrl
pop
jbe
aad
cld
fidivrs
inc
mov
sub
in
mov
sbb
xor
fs
jmp
push
sbb
mov
sub
cmp
jmp
sbb
stc
fcmovu
loopne
pop
sbb
icebp
scas
cld
iret
xchg
adc
sahf
mov
ss
sub
mov
movsl
lea
cmc
adc
andb
mov
xlat
pop
dec
sarb
pop
mov
or
sbb
jmp
pop
sbb
mov
add
mov
jae
inc
xor
dec
cmp
adc
jg
jmp
aas
pop
dec
pop
fldcw
or
repz
and
mulb
jns
icebp
dec
xchg
jle
pop
mov
stc
pop
leave
out
adc
shlb
inc
je
adc
pop
inc
sub
push
outsl
test
mov
push
pop
clc
jle
sbb
mov
out
jle
fstps
dec
cs
dec
and
leavew
push
push
decb
jge
repz
stc
mov
addr16
ja
inc
add
rcl
xchg
jg
fcompl
mull
add
inc
xor
inc
sub
or
insl
mov
fwait
sahf
mov
push
jg
mov
mov
scas
mov
sub
xor
lea
push
iret
outsb
outsl
stc
cmp
adc
std
aas
pop
fldcw
push
and
xchg
pusha
or
xor
mov
push
dec
decb
push
int3
push
int
stos
adc
enter
clc
xor
dec
stc
ds
pop
cmpsb
xchg
mov
jnp
sub
mov
mov
xor
and
xchg
mov
cs
push
movsl
mov
pop
in
and
cmpsb
scas
mov
into
scas
or
aaa
mov
out
aad
push
pop
icebp
mov
ret
jmp
mov
jns
ss
mov
fnstcw
cmovbe
dec
inc
mov
xchg
iret
cmc
fildl
or
adc
inc
add
add
lahf
in
sub
enter
cli
cmpl
add
dec
inc
je
cmc
jp
lsl
xchg
ljmp
xor
xor
xchg
mov
mov
add
or
div
loopne
popf
push
js
dec
shld
pop
icebp
loopne
inc
aaa
pop
xchg
pushf
sub
sbb
stos
mov
repz
push
addr16
pop
mov
scas
jns
and
jne
mov
clc
pop
and
cmpsb
fdivp
sbb
outsl
popf
xor
sbb
mov
pop
xor
imul
fs
sub
std
enter
jg
push
fildl
jg
les
add
repz
sarb
mov
mov
push
idiv
adc
ficoms
stc
ds
xchg
push
jl
mov
aad
fsubrp
sbb
into
stc
dec
pop
jae
xchg
jnp
add
in
sub
idivb
mov
scas
js
push
mov
inc
cs
cmc
mov
xor
stos
out
aad
movsb
sbb
sahf
lret
inc
fldl
or
movsb
inc
dec
xchg
push
add
xor
imul
cmp
in
stc
js
fisubl
sbb
iret
pop
int
xchg
icebp
imul
popa
and
cmp
inc
jge
and
jg
pop
pop
repz
ds
out
iret
xor
mov
add
repnz
repnz
aad
out
pop
pop
ret
leave
subb
mov
ret
outsl
pop
mov
cmp
lods
mov
inc
clc
jns
rolw
outsb
pop
flds
push
inc
cld
jmp
jmp
or
sti
repz
sub
push
push
je
mov
fidivrs
lret
ja
mov
sub
iret
inc
dec
push
adc
cmp
or
and
jb
mov
fcmovne
outsl
xchg
cmp
push
mov
mov
das
adc
iret
xchg
mov
cwtl
lcall
and
dec
jle
sub
push
shrb
dec
icebp
outsb
mov
and
and
dec
push
shlb
pop
push
les
lahf
adcl
xchg
enter
jmp
push
mov
test
pop
ss
push
mov
imul
aas
call
mov
cli
mov
divb
test
scas
ret
lods
scas
bound
adc
imul
lods
mov
pop
sub
jb
gs
and
sub
hlt
pop
ljmp
jns
fists
cmp
xor
adc
pop
lock
xchg
push
mov
mov
pop
lock
in
mov
jg
pop
push
stos
popa
inc
jns
add
xor
pop
sub
repz
push
leave
scas
mov
test
ret
sbb
es
fildl
adc
jmp
faddp
ljmp
imul
mov
xor
fists
push
push
aas
jne
push
adc
pop
cmpsb
sbb
mov
ss
lret
in
sub
push
cmpsl
xlat
adc
movb
jns
adc
cmpsl
xchg
or
hlt
std
sub
mov
int3
jne
daa
int3
jge
ret
in
cmc
xor
or
icebp
push
mov
mov
mov
mov
inc
push
test
icebp
pop
lea
pop
inc
in
into
mov
push
mov
xlat
aad
cltd
outsb
xchg
add
jnp
hlt
sti
inc
test
aam
mov
adc
jle
fwait
aam
jmp
out
mov
out
test
rcll
pop
lahf
dec
sahf
cmp
inc
pop
pop
or
inc
fdivl
push
ror
imul
pop
mov
mov
fldl
mov
push
rol
into
ds
icebp
push
insb
aam
jp
into
jb
push
movsl
jmp
pop
cmp
mov
xor
xchg
imul
push
dec
stos
jmp
ljmp
call
js
popf
pop
adc
cmp
cmp
cmp
stc
loopne
xor
fstl
mov
cmp
lahf
mov
xor
je
insb
in
inc
add
jae
orb
push
cmp
iret
rolb
shrl
fimuls
mov
out
adc
cmp
int3
repnz
jbe
subb
push
addr16
sbb
iret
aaa
cmc
jg
mov
scas
sbb
out
lods
gs
ljmp
or
jbe
jg
cltd
aad
and
fstpl
scas
xchg
sub
in
ficomps
scas
inc
jns
dec
aad
mov
inc
xchg
std
test
arpl
out
mov
hlt
or
and
add
jmp
iret
mov
jmp
cld
mov
mov
jno
test
fwait
test
imul
pop
sbb
sub
loopne
push
int
fildll
test
fwait
sarl
dec
out
pusha
jns
int
es
cmp
push
shll
leave
pop
in
bound
js
xor
mov
mov
mov
inc
fsubr
in
insl
out
mov
lret
mov
fmull
pop
je
stc
in
mov
jbe
stos
or
movsb
scas
arpl
mov
dec
jle
rcl
mulb
lods
repnz
ds
mov
and
jno
bound
push
cmp
adc
mov
fmuls
ja
fstp
ret
in
jns
imul
test
incb
add
aaa
aas
fldt
outsl
pop
rorb
test
shll
mov
mov
dec
mov
mov
rol
ss
mov
insl
lds
sbb
addr16
xchg
lret
dec
adc
ja
int
cmpsb
data16
repnz
xlat
pop
sbb
add
add
xlat
sarl
mov
aaa
inc
pop
xchg
data16
cmp
jnp
pop
cld
int
data16
idivl
mov
fdivrs
ja
mov
sbb
mov
pop
out
fstps
dec
movsb
outsl
cmpsl
test
lods
mov
data16
cltd
lods
ret
shrb
xchg
pop
data16
adc
or
add
movsl
push
inc
or
push
stc
rcrb
inc
mov
hlt
jecxz
xchg
pop
or
lods
outsb
inc
cmpsl
psadbw
push
fwait
mov
aam
out
dec
push
ret
push
mov
or
mov
fs
pop
push
dec
stos
mov
mov
push
shrb
cmp
ret
mov
adc
lcall
outsl
lock
cs
sub
or
pop
outsl
je
aad
mov
inc
inc
out
cmpsb
fldcw
lret
repnz
xchg
or
sbb
lods
mov
ret
imul
orb
push
push
cmpsl
sub
out
mov
arpl
outsl
lods
std
popf
and
pop
mov
push
pop
cmpsb
scas
fstl
sub
data16
test
pushf
es
mov
pop
mov
scas
xchg
sub
cld
cmpsl
jg
add
or
dec
mov
cwtl
ror
mov
out
dec
push
repnz
out
sti
or
aas
cmpsb
mov
pop
dec
mov
pop
mov
push
pop
mov
xchg
imul
sti
mov
ficompl
xor
movsb
mov
outsl
mov
movsl
scas
add
pmaddwd
pop
pop
fiaddl
sbb
mov
jae
imul
popa
cmp
cwtl
iret
mov
mov
sub
sarb
and
jne
cltd
push
xchg
orl
notl
inc
lret
rcrb
repnz
outsb
in
stos
sbb
push
xchg
andb
lods
cltd
lcall
scas
adc
mov
sbb
push
je
or
and
push
cmpsl
imul
call
je
sub
pop
ficomps
pop
pop
int3
mov
mov
pop
fidivs
out
outsb
lret
out
jne
add
adc
add
outsb
clc
adc
in
fsts
clc
lret
pop
cmpsl
imul
jne
inc
jle
mov
sbb
sub
dec
out
mov
jp
loop
inc
insb
sbb
dec
pop
testl
imul
mov
push
sub
pop
push
and
pop
scas
and
out
mov
ret
adc
loop
inc
fdiv
repz
or
das
and
mov
repz
mov
fcompl
mov
jp
fbstp
js
addr16
pop
daa
fs
call
fisubrs
stos
cs
sub
xchg
mov
pop
enter
testl
adc
je
jg
lahf
xchg
dec
pop
bound
lock
pop
pop
fdivs
push
imul
jae
cmp
mov
imul
adc
jnp
sar
mov
iret
aad
outsl
push
adc
pop
mov
sti
rcrl
gs
sub
or
fistpl
xchg
dec
adc
fs
popf
pop
imul
std
scas
inc
es
cld
adc
js
loopne
mulb
pop
out
xchg
add
arpl
in
and
sbbb
addl
out
sbb
mov
dec
ja
orl
std
mov
sbb
fistpll
cmp
fildl
mov
jge
fimuls
aas
cld
pop
jae
and
add
ftst
idiv
jo
pop
ss
push
mov
pop
dec
jmp
mov
sbb
jo
outsb
jg
repnz
fwait
mov
hlt
lods
xor
aaa
scas
push
stc
dec
iret
int
adc
lods
ret
pop
leave
fwait
jo
lret
cmp
or
fdivp
sub
mov
or
stos
ret
loope
mov
testl
repz
adc
repnz
out
lock
imull
pop
negb
ja
cmovg
stos
jae
jp
push
jmp
ffreep
push
out
orps
xlat
hlt
push
push
jecxz
data16
jg
jmp
aad
fnsave
popf
mov
xor
std
sub
push
jmp
mov
mov
mov
shll
adc
mov
leave
loop
sbb
or
int3
sbbb
xor
fistpl
ffreep
mov
pop
mov
outsl
jmp
sub
jbe
mov
ds
cwtl
sbb
ja
or
call
jmp
repnz
call
inc
lahf
leave
inc
sti
push
cmp
jne
aad
scas
adc
sub
out
mov
mov
xchg
das
iret
xor
dec
add
and
or
dec
push
jle
paddb
mov
iret
repnz
jno
cmp
pop
clc
sbb
gs
push
or
insb
movsb
mov
das
push
jmp
adc
repz
adc
jae
mov
and
mov
push
testb
xor
rcrb
push
mov
adc
pop
dec
divb
dec
cs
mov
add
out
pop
dec
fcomi
mov
sub
aam
and
cs
jmp
cmp
fwait
mov
jno
push
leave
pop
push
jge
or
add
and
mov
mov
push
ja
fidivrl
push
rorl
faddl
xchg
popf
sub
mov
loopne
insb
les
fstp
addr16
test
int3
dec
iret
or
or
jbe
mov
adc
fistl
jns
outsb
fdivrl
mov
mov
sti
or
add
rcrl
mov
mov
and
out
loope
mov
and
add
test
cmpl
mov
lret
call
decb
seta
test
aas
shl
or
pop
cmpb
mov
aas
push
cli
mov
push
fsubrl
popa
push
mov
mov
jmp
jle
cmpsb
int3
dec
add
mov
push
push
clc
movb
je
rorb
sub
jae
in
aaa
push
scas
loope
aas
mov
sub
scas
inc
jg
mov
mov
xorb
mov
es
aam
lahf
sbb
int3
or
push
mov
mov
sahf
sti
sbb
fcompl
add
cmpsb
push
lds
inc
dec
jge
pop
xchg
fwait
iret
scas
mov
mov
push
fldcw
push
sarb
out
lret
fimull
push
aad
dec
mov
rclb
in
and
push
push
pop
pusha
xchg
repnz
movnti
jge
pushf
mov
sti
sbb
xchg
mov
mov
sbb
mov
stos
subb
dec
mov
xchg
into
jmp
loop
in
enter
std
std
icebp
jl
mov
mov
mov
inc
cmp
adc
and
jbe
jg
outsl
out
repnz
jecxz
mov
sbb
filds
cwtl
sbb
enter
mov
ficompl
and
mov
fsubrs
lahf
repnz
lahf
jnp
dec
nop
add
das
sti
mov
xlat
int
fnstenv
adc
mov
call
push
data16
fwait
mov
into
fisubrs
inc
out
xchg
pop
sbb
xor
test
inc
adc
mov
pop
inc
xchg
or
sub
dec
mov
xchg
lods
or
add
das
mov
adc
shlb
inc
mov
and
jnp
iret
pop
cld
adc
scas
push
cmp
clc
xchg
push
mov
cmp
mov
shr
in
leave
mov
inc
pusha
xchg
dec
imul
arpl
scas
cmc
mov
test
add
xchg
mov
xor
cmc
sub
mov
adc
jo
sub
xchg
mov
repnz
mov
sub
imul
imul
mov
idivb
mov
inc
mov
inc
pop
and
adc
fadds
fs
bound
cmpsl
add
cltd
sbbl
jmp
push
push
stos
add
into
inc
add
ss
stc
jmp
divb
dec
jg
inc
pop
and
imul
push
push
jmp
movsl
xor
aaa
dec
mov
ljmp
jecxz
stc
sbb
cs
sahf
pop
jecxz
dec
pop
es
testb
adc
jg
sub
dec
lock
mov
cmp
jb
movsl
dec
mov
stos
mov
packuswb
outsb
cmp
sbb
add
mov
in
push
sbb
pop
iret
stos
dec
sbb
dec
mov
imul
or
mov
push
xchg
mov
mov
pushf
fnstenv
push
fnstcw
push
add
cmpsl
push
jae
xchg
jnp
pop
imul
jns
idivb
cli
movsb
jnp
xchg
lea
aas
ljmp
movsl
dec
outsl
mov
sub
xor
sarb
adc
and
mov
and
add
lcall
hlt
sbb
pop
in
fmul
mov
movsb
imul
fists
scas
pop
fisttpll
cmc
fsub
sti
out
les
scas
out
mov
xchg
cmp
mov
in
jae
xlat
adcl
xchg
or
inc
xor
push
lret
sbb
sbb
dec
stos
dec
lock
in
inc
add
adc
cwtl
and
cmpsl
mov
mov
popf
push
call
or
sahf
out
mov
xchg
arpl
pop
mov
cltd
mov
stc
ret
popf
xchg
loop
push
mov
push
inc
add
sub
pop
add
iret
adc
adc
mov
rclb
js
xor
out
data16
mov
mov
push
jecxz
aam
mov
lds
jne
xchg
xor
movsl
dec
ds
jge
stc
dec
das
out
outsl
jmp
push
dec
out
out
sti
into
mov
das
jb
xor
cmpsl
pop
or
out
out
repz
cli
inc
int
int3
jmp
imul
sbb
and
lret
mull
pop
dec
xchg
pop
fstps
mov
dec
in
lahf
pop
push
mov
scas
jmp
pop
ljmp
cmp
imull
lods
out
jmp
bound
ds
cmp
xlat
mov
jl
pop
mov
es
jmp
jbe
lods
scas
mov
dec
ds
pop
out
jnp
clc
lret
pop
or
xlat
xchg
pop
scas
out
sbb
stos
mov
sbb
adc
scas
xlat
fistpl
out
out
sbb
sub
jecxz
sbb
sti
scas
pop
jmp
addl
pop
scas
jmp
pop
dec
and
scas
ds
pop
out
pop
pushf
div
repz
iret
cmp
aas
xchg
mov
fnstsw
out
xlat
pop
xchg
cmpsl
mov
das
sbb
ja
jle
out
jnp
cmp
sbb
arpl
fnsave
neg
pop
stos
idivl
pop
and
stos
idivl
pop
mov
fstpt
and
push
and
outsb
and
mov
pop
push
pop
pop
and
jmp
pop
cmp
stos
mull
mov
stos
mull
fisubl
stos
imull
sub
stos
pop
fistps
scas
sahf
jae
addr16
pand
test
mov
dec
jns
in
jg
mov
pop
out
jnp
cld
xchg
cltd
das
mov
sub
sub
or
leave
cmc
xchg
pop
push
sub
into
insl
sub
jne
jmp
lock
cmp
pop
out
cld
xchg
jne
mov
jne
xchg
mov
data16
dec
stos
pop
andb
dec
arpl
outsb
jnp
sub
cmc
inc
sub
jle
sbbl
xchg
sub
mov
mov
filds
aad
sahf
mov
fidivrs
push
jmp
test
jg
cmp
lods
insl
mov
mov
xchg
xlat
xchg
ret
mov
jmp
add
mov
inc
mov
stos
mov
ffreep
sub
push
fstpl
mov
imulb
mov
mov
stos
xchg
sbb
cmp
pop
lds
pop
mov
inc
ljmp
cmp
and
push
les
xor
fldenv
jl
nop
mov
mulb
lahf
sub
push
push
inc
lods
rcr
jne
pop
in
inc
dec
and
out
xlat
lods
outsb
loopne
aas
hlt
nop
mov
xlat
or
xor
lret
arpl
call
sub
cwtl
mov
and
mov
lods
fiadds
jmp
xchg
ret
pop
insl
call
mov
mov
inc
push
sahf
das
test
inc
push
leave
sub
push
adc
in
mov
adc
mov
mov
xchg
push
jae
lret
out
push
xor
in
inc
dec
pop
dec
lods
popf
push
pop
lahf
pop
mov
test
pop
das
adc
jl
std
rcrl
or
inc
movsb
iret
jae
jg
pop
pop
loopne
dec
fisttps
adc
and
inc
jbe
pop
stos
push
sti
insl
das
dec
pop
pushf
pop
push
call
mov
and
shrl
popa
push
xchg
test
jle
ljmp
enter
test
jg
pop
mov
push
arpl
pop
mov
adc
ret
pushf
shl
adc
xor
push
orb
fidivl
cmp
ja
movb
ja
mov
stos
mov
mov
cltd
jbe
fildll
pop
outsb
sti
inc
das
mov
xchg
testl
pop
xor
scas
cmpsb
add
or
xchg
mov
aaa
sub
sbb
mov
xchg
or
mov
das
into
xorb
imul
adc
inc
movsb
jne
or
rclb
or
jmp
cmp
pushf
cmp
sahf
bound
in
stos
in
pop
add
pop
fwait
iret
repz
mov
rsm
insb
xchg
inc
mov
pushf
mov
fstps
xor
add
inc
ror
lea
sbb
scas
cli
jl
mov
adcb
sti
xlat
push
int
push
pop
jbe
jnp
jae
jnp
and
pop
jnp
inc
ds
std
shl
pop
imul
outsl
scas
pop
mov
mov
popf
mov
aaa
fucomip
test
nop
repz
inc
dec
int3
addr16
je
cmpb
xor
or
cmpsb
or
in
repz
stc
jne
cmp
test
mov
iret
sbb
cs
add
sub
push
outsb
addl
stos
jmp
outsb
add
push
add
and
popa
mov
int3
call
mov
scas
xor
push
pop
mull
filds
sbb
testl
push
pusha
and
shr
inc
mov
mov
adc
pop
clc
ja
shll
push
jnp
mov
xchg
inc
out
dec
cmpsb
pop
jp
clc
scas
pop
sbb
adc
mov
idivl
shl
fisubrs
lahf
rorl
add
pop
push
mulb
rcrb
lods
mov
imul
xchg
push
or
sbb
push
push
inc
hlt
sbb
mov
adc
dec
lock
scas
aas
call
iret
jb
push
cli
fldcw
push
adc
cli
pop
pop
cwtl
aaa
sbb
mov
xor
mov
rolb
into
fcompl
pop
sub
jge
out
dec
push
cmp
mov
aas
xor
aas
sub
das
xor
rcr
add
repnz
push
lret
xchg
mov
in
mov
pusha
mov
repz
and
mov
sbb
mov
in
punpckhbw
cmp
jle
sbb
dec
adcl
dec
lret
aas
push
xlat
jae
inc
filds
dec
fldt
jg
fdivl
mov
in
pushf
movsb
scas
dec
xor
mov
xchg
jg
ljmp
imull
repz
jmp
cmp
out
into
pop
insl
inc
mov
push
dec
add
out
pop
hlt
adc
sti
adc
pop
xchg
add
push
jp
pop
mov
icebp
movsb
lcall
dec
adc
ffreep
out
idivb
push
inc
adc
fmull
aaa
push
leave
pop
out
dec
lret
mov
fcomps
mov
jmp
leave
iret
ficompl
test
mov
jbe
jle
jle
pop
jmp
rolb
sbb
xlat
jmp
es
mov
pop
jge
pop
xor
fisttps
rol
and
mov
mov
iret
imul
fisttpll
ds
hlt
mov
call
and
mov
fs
jbe
push
sbb
lahf
sub
outsb
test
pop
aad
mov
aas
sbb
sbb
mov
pop
or
das
fsts
xor
ds
aas
fstl
and
adc
lods
mov
or
mov
sub
js
sti
mov
add
sbb
in
pop
sarb
setae
push
pushf
lods
aaa
cltd
aaa
bound
mov
rcrl
jmp
in
scas
add
xor
pop
add
loope
adc
or
popf
negl
iret
or
and
xchg
add
and
fildll
adc
out
mov
mov
cltd
jnp
sbb
inc
iret
lods
jnp
cmp
push
lret
cmp
fldt
cmp
cmpsl
pop
sub
test
ljmp
cmpl
push
sbb
xchg
insl
pop
push
sub
mov
mov
xor
rorl
rcrl
out
mov
push
dec
data16
jmp
pusha
rcll
popa
test
pop
add
push
push
test
imul
pop
mov
jecxz
sub
lock
std
sarl
and
push
in
pop
out
jg
and
psubw
push
repz
les
orl
xchg
and
add
dec
dec
mov
int3
ds
imul
sub
jno
jle
arpl
outsb
mov
mov
xchg
jmp
scas
iret
cmpsb
dec
cmp
rcll
xchg
iret
lahf
popl
pop
mov
cmpsl
outsl
and
iret
pop
pop
bound
inc
test
xor
scas
aas
out
movl
test
mov
inc
add
mov
or
jg
sbb
pop
or
xor
sub
pop
jno
xlat
ret
inc
scas
or
or
cmc
mov
sbb
cmc
clc
pop
mov
and
mov
jo
sbb
or
cmpsb
clc
mov
in
loop
push
xor
push
outsl
testb
push
sbb
iret
arpl
jg
xor
cld
das
icebp
fistps
mov
pusha
je
loopne
adc
mov
fidivrs
xor
xor
adc
cmp
movsb
mov
sahf
test
jg
andb
dec
out
xlat
popf
rep
add
xchg
xor
call
mov
mov
mov
xlat
add
mov
dec
pop
lahf
lret
inc
fstpt
cmp
lock
sbb
fwait
sub
repz
loope
cs
xor
iret
mov
arpl
les
adc
idivb
ljmp
testl
iret
lock
std
mov
pop
mov
cmp
sti
test
mov
leave
mov
xchg
js
sub
sub
jp
pop
or
cmp
dec
lock
or
outsb
outsl
cmpsl
nop
dec
imul
or
aas
jmp
repz
sbb
out
std
stos
test
lahf
das
mov
xchg
push
loope
jbe
aas
mov
pop
aaa
arpl
or
xor
mov
leave
fisubl
out
lahf
sub
jbe
insb
or
pop
pop
cmc
ret
sub
ljmp
add
lds
mov
in
mov
cmc
push
lahf
mov
dec
adc
xor
mov
cmp
ds
mov
jmp
pop
ja
and
mov
sub
pop
outsl
fwait
sbb
mov
pop
in
lcall
loop
or
ja
cmp
out
ret
jns
inc
pop
idivb
mov
mov
fsincos
arpl
jl
cwtl
and
inc
scas
sti
outsl
mov
imul
mov
add
ret
mov
jbe
shll
dec
cmpsl
loopne
outsb
lods
dec
lahf
fsts
out
addr16
mov
mov
xor
sub
mov
mov
rcl
push
iret
stos
dec
or
insl
imul
fnstcw
pop
clc
pop
mov
hlt
ja
mov
lds
arpl
xchg
add
pop
mov
push
pop
adc
fwait
mov
loopne
mov
pop
mov
call
in
jae
fists
sbb
jnp
imul
shrl
fimuls
imull
imul
adc
sbb
scas
inc
mov
bound
pushaw
mov
xchg
xchg
inc
pop
leave
out
pop
jne
fimuls
mov
sub
clc
mov
out
push
mov
das
imul
ret
xchg
mov
clc
push
sahf
in
jno
repnz
imul
xor
jns
inc
mov
jo
cs
pop
or
mov
mov
sbb
cs
imul
ret
mov
adc
jmp
je
imul
out
pop
jg
into
sbb
sbb
cltd
jp
mov
jno
addr16
stos
ss
leave
jae
idivl
shrb
push
nop
scas
in
cs
enter
mov
fldenv
aas
mov
sub
mov
dec
pop
sub
pop
cs
cmp
xlat
orl
fiaddl
stos
adc
add
push
lret
sub
insl
mov
sbb
les
push
in
stos
test
fistpll
jle
adc
mov
mov
pop
and
xchg
js
jnp
push
lcall
sbb
pop
jne
ljmp
enter
rcrb
add
push
dec
ret
fisttpl
add
sbb
les
lock
push
mov
psubw
clc
ljmp
push
fbld
and
sbb
mov
test
lret
mov
aaa
ljmp
movsb
sti
ret
test
mov
hlt
pop
std
xchg
int
mov
outsl
push
fcomi
jbe
mov
mov
fwait
sbb
jb
aas
jne
add
jg
and
mov
mov
or
scas
in
mov
jg,pt
pop
lret
fstps
mov
leave
imul
dec
scas
pop
out
xchg
pushf
loop
sahf
orl
push
jnp
imul
inc
jnp
dec
filds
les
outsl
iret
out
mov
mov
jne
sub
out
pop
jg
mov
cmp
loop
mov
movb
ss
add
repnz
sub
xor
and
fistpl
scas
push
cmp
sti
mov
sarb
out
xor
out
stos
cmpsb
jmp
adc
jnp
fwait
lahf
xor
or
sub
xchg
push
lock
test
sbb
sbb
pop
cmpsl
outsl
in
xchg
sbb
gs
xor
mov
mov
iret
jl
mov
xor
in
cltd
test
imul
pop
xchg
insl
mov
jge
retw
jno
dec
shll
je
lret
cld
and
xor
dec
xchg
jno
mov
leave
cmpsl
mov
sub
mov
adc
imul
xor
inc
mov
mov
shl
fildll
cmp
daa
icebp
in
jg
leave
repnz
sarl
stos
push
add
stc
xor
sahf
mov
sub
sarl
lahf
sti
popf
mov
lret
pop
push
inc
cmc
cmc
shll
shlb
and
mov
pop
or
push
filds
in
sbb
push
jnp
outsb
fnstcw
cmp
jl
loop
in
inc
cmc
psrlq
jbe
mov
pop
mov
jae
mov
out
negl
sarl
mov
lret
pop
mov
pop
out
add
in
gs
stc
push
xor
in
adc
push
mov
stc
xchg
add
inc
mov
out
mov
jns
test
pop
jge
leave
mov
sbb
dec
sarb
xchg
into
push
ret
decb
pop
push
adc
leave
outsl
lahf
mov
sbb
test
test
fstp
sarb
cmpsl
repz
or
aad
pop
fcmovu
mov
inc
incb
stc
xlat
fisttpll
push
jge
stos
xchg
fxch
inc
scas
and
sbb
sub
lahf
pop
mov
jmp
xchg
and
stos
pop
pop
mov
fnstsw
in
ljmp
sbbb
push
mov
scas
mov
imul
insl
inc
fmull
add
je
outsl
out
ljmp
push
aas
outsb
sbb
lret
sti
std
mov
cmp
adc
or
push
aas
ja
out
out
je
push
push
fldcw
ljmp
add
jmp
popa
jge
fstps
adc
mov
pop
sbb
in
lcall
scas
lret
sub
mov
cltd
rolb
cmp
inc
gs
or
scas
call
stc
xlat
pop
sub
dec
mov
test
stc
lahf
pop
enter
add
imulb
dec
push
sarl
out
and
clc
mov
add
jecxz
xor
and
sub
sbbl
clc
jbe
ja
sahf
shr
jg
push
xor
movsb
ja
pop
dec
adc
add
push
std
or
aad
cmpsl
pop
pop
mov
test
inc
mov
mov
clc
adc
out
or
mov
mov
aas
mov
ljmp
dec
mov
in
add
inc
push
popf
inc
scas
jmp
iret
test
jmp
push
rcr
aaa
add
out
jg
out
push
push
jg
ljmp
adc
lds
lret
andl
mov
cmp
cmp
fwait
out
ja
sti
add
jmp
lcall
cmp
imul
mov
lahf
ficomps
sub
and
std
xchg
stos
mov
popf
pushf
cmpsb
in
outsb
testb
mov
fsubs
or
lcall
jmp
xor
mov
lock
outsb
mov
ja
jmp
imul
mov
sti
fldt
jnp
pop
not
imul
add
mov
lcall
lcall
fadds
shlb
test
sbb
shl
push
ficomps
mov
outsl
pop
cmp
push
xor
es
push
insl
mov
int
daa
mov
cmp
push
xchg
adc
shl
sub
call
fisubs
cmp
call
xor
scas
aaa
mov
mov
mov
sub
add
lret
push
idiv
negb
push
stos
fstpt
push
dec
push
push
mov
or
movsb
jne
lret
lret
jae
inc
fsin
add
imul
and
jp
stos
push
imul
xor
mov
dec
in
stos
jg
and
jbe
shll
into
out
fs
stos
cli
rcrb
int3
popl
les
ja
xchg
cmpsl
mov
mov
mov
inc
lcall
adcl
dec
sub
pop
cmp
jno
fwait
mov
cmp
cmpsl
mov
jecxz
lods
mov
in
jbe
leave
push
lods
sub
push
sbb
hlt
shr
shrb
add
xor
test
ret
fcmovu
sbbb
xchg
test
inc
sub
aad
cmpsl
sub
jbe
stos
in
lret
test
xchg
iret
sub
rcr
mov
lahf
mov
mov
push
jecxz
dec
ficompl
jo
mov
mov
in
pop
scas
and
jmp
rcrl
push
das
xchg
add
mov
push
inc
and
call
or
adc
cmp
dec
subb
daa
push
mov
dec
fdivs
add
xor
pop
mov
cmc
in
dec
pop
pop
cmpsl
rcrl
and
adc
mov
mov
mov
ja
repnz
inc
cs
arpl
sub
pop
inc
in
scas
mov
mov
test
fnstsw
neg
push
mov
out
fucomp
mov
pop
div
push
repz
bound
cmp
jge
aaa
imul
mov
inc
sub
in
dec
xchg
into
jne
addr16
mov
sub
or
jge
fsts
ficoml
ficompl
add
jle
inc
sbb
jo
lods
inc
fcom
mov
pop
leave
loopne
inc
jecxz
mov
hlt
jns
add
out
sbb
cmp
mov
pop
test
mov
lret
pop
push
jb
mov
negl
or
jg
lahf
pop
mov
mov
out
movsl
mov
push
sub
cmp
add
hlt
mov
ret
push
int3
rcll
mov
add
mov
movsl
ret
addl
mov
stos
or
lods
mov
iret
mov
stos
out
pop
jne
push
pop
sub
push
mov
pop
lods
cmp
mov
fcmovnu
shll
fistps
shll
add
fidivrs
mov
jge
data16
arpl
mov
push
and
sub
iret
xchg
xlat
ja
jl
stos
mov
pop
fsubr
sbb
scas
sti
jecxz
int
pop
xchg
aad
ljmp
fimuls
dec
pop
add
fistpl
add
adc
xor
cmp
faddl
dec
push
imul
push
sarb
in
movsl
mov
repz
sbb
mov
std
cltd
fsts
call
cwtl
dec
push
cmpsb
stos
pop
adc
cltd
lcall
adc
es
pop
mov
or
adc
add
pop
imul
dec
xchg
or
lods
popf
add
or
ret
shl
hlt
icebp
dec
pop
xor
ljmp
call
fldl
mov
imul
pop
push
ret
leave
insb
xor
flds
push
lahf
or
in
js
mov
jmp
mov
lods
es
sub
or
mov
scas
loope
dec
xchg
lcall
sub
pop
push
outsl
es
fidivs
push
int
stos
stos
sub
and
pop
cmpl
xchg
mov
dec
inc
sub
shrb
or
add
pop
sbb
fsubr
push
sahf
add
add
sbb
lahf
loop
out
rorb
mov
sub
jnp
negl
iret
sti
mov
inc
lahf
shrb
xlat
xor
sbb
sbb
lcall
outsl
data16
mov
sub
lcall
scas
cli
jne
mov
and
dec
mov
jl
hlt
lods
mov
ja
mov
out
insb
mov
daa
and
scas
mov
pop
cmpsb
imul
sahf
int
mov
xchg
cmp
sbb
mov
stos
ja
fstl
lret
sub
imul
inc
out
mov
mov
jecxz
insb
pop
fincstp
mov
mov
push
sbb
mov
inc
mov
mov
shrb
lea
mov
cltd
pand
arpl
fwait
or
scas
imul
xchg
daa
div
pop
pop
popf
push
pop
bound
mov
pop
mov
ljmp
jns
mov
bsr
push
pop
scas
ret
rsm
ss
or
psadbw
aaa
jnp
mov
or
fsub
std
xchg
or
push
clc
mov
loope
dec
xchg
pop
lea
insb
fdivl
js
mov
out
mov
dec
lcall
enter
shrb
pop
leave
fcmovnbe
pop
or
mov
pop
repz
popf
cmp
cltd
push
fucomip
neg
pusha
mov
aas
stos
imul
mov
pop
mov
stos
mov
lods
mov
aas
out
mov
inc
roll
add
push
cld
cmpsb
int
or
outsb
jb
cs
movlps
adc
cmp
jp
push
cwtl
inc
pop
mov
cli
nop
mov
fsubrs
lcall
jmp
test
mov
or
fistl
mov
push
push
adc
insb
stos
inc
ljmp
fldcw
lahf
insb
test
aad
pusha
and
es
fcomip
std
outsb
cs
mov
push
push
xor
xchg
imul
mov
sub
addb
jnp
fimull
out
pusha
mov
mov
push
popf
mov
subl
cmp
arpl
jae
fimuls
jae
push
or
pushf
out
pop
idivb
loopne
mulb
mov
or
pop
mov
mov
je
repnz
mov
out
or
mov
pop
sahf
int3
and
adc
inc
mov
sahf
dec
rcrl
xchg
js
pushf
adc
leave
out
int
sbb
xchg
rdmsr
negb
ret
aaa
mov
aam
lcall
push
mov
notb
push
das
pop
sub
fstpt
push
out
popf
adc
dec
ret
fdivp
xlat
or
lds
leave
pop
aam
or
das
dec
jo
movsl
and
sbb
orps
pop
adc
fucomp
pop
fsts
fnstenv
ret
scas
cli
cmp
push
mov
dec
mov
mov
pusha
mov
push
jb
stc
xchg
jae
inc
sbb
mov
ja
push
lcall
pop
sub
jnp
outsb
mov
sub
sahf
mov
mov
inc
fiadds
rol
cld
xchg
cmpsl
mov
fcomip
pop
mov
mov
cmp
mov
mov
push
outsl
scas
mov
in
outsb
aas
xor
pop
adc
lea
sub
cmpsl
out
in
adcb
rcrb
sbb
fcom
push
imull
lea
push
fwait
mov
mov
out
dec
jle
popf
fs
adcb
cmp
fnstcw
insl
iret
xchg
lret
sbb
sahf
mov
fimull
xchg
inc
sub
insb
lock
lahf
dec
insb
pop
rep
jbe
iret
lcall
out
xchg
lods
mov
hlt
mov
adc
xchg
mov
dec
push
and
cmp
jecxz
mov
es
pop
mov
mov
sub
fdivl
inc
pushf
mov
sahf
sub
inc
mov
adc
add
sbb
cmpsl
je
jle
clc
nop
subl
stos
shll
scas
pop
push
mov
push
imul
ret
repnz
shl
ret
fldcw
inc
sub
mov
adc
inc
pusha
xchg
jo
stos
pop
mov
jmp
fidivrl
fcomip
pop
in
mov
ja
xchg
cld
sahf
pop
int3
rorb
fdivrs
dec
movsl
sbb
mov
roll
imul
in
sub
incb
or
dec
push
fwait
push
scas
add
dec
ds
stos
cmp
sub
pushf
sti
in
lods
push
jg
daa
add
mov
lret
loope
cwtl
adc
sbb
shrb
push
lods
mov
add
jo
pop
imulb
shrl
sub
jg
adc
mov
mov
mov
jmp
cmc
mov
mov
aaa
jno
ficompl
jg
push
aas
or
cld
loopne
ret
lea
jae
push
movl
pop
mov
fidivl
mov
mov
push
push
fdivrs
shll
ret
mov
pop
lret
mov
ss
jb
add
pop
xchg
addr16
rcl
mov
dec
fsubr
jb,pn
jp
xor
sbb
lods
push
jge
inc
cmpsb
dec
mov
js
out
out
xchg
out
jp
jle
lret
jbe
fwait
jl
mov
outsb
jo
lahf
mov
nop
mov
shrb
or
mov
push
jmp
or
xor
insb
mov
dec
fadd
test
pop
or
pop
and
loop
jmp
rorl
mov
cmpsl
ss
mov
scas
inc
movsl
mov
lds
xchg
arpl
call
test
jne
aam
dec
aad
sbb
scas
lods
movsb
pop
scas
repz
dec
or
cmp
pop
mov
or
xchg
stos
sti
scas
rol
mov
aad
mov
sbb
in
pop
jle
out
xchg
cmp
mov
ljmp
and
bound
cmp
das
xor
sarl
cmpsl
pop
dec
jb
in
and
mov
in
fisubrs
pop
add
mov
stos
lahf
pop
dec
xchg
outsb
fs
pop
push
ljmp
xchg
mov
into
int
out
xchg
pop
sub
out
xor
xchg
fcompl
jge
sarb
jg
out
dec
fs
pop
ja
mov
xlat
shrl
loope
or
cmp
xchg
lret
sti
pop
adc
scas
inc
outsb
xchg
data16
stos
enter
mov
mov
fisubl
cld
out
sbb
insb
xchg
fisttps
lods
dec
mov
dec
stos
add
and
xorb
bound
pop
pop
mov
sub
sbb
in
jmp
xchg
loope
orb
mov
push
loop
xchg
adc
push
je
test
pop
imul
imul
xchg
inc
or
xlat
fstps
xchg
in
fsubrp
imul
or
pop
sti
loopne
fs
aaa
inc
or
shlb
std
inc
inc
into
push
call
js
sbb
xor
xchg
push
scas
inc
add
hlt
cli
push
inc
testb
sti
or
cmp
in
out
pop
scas
divb
cld
pop
sbb
shr
mov
andb
cmpsb
cli
pop
mov
shl
in
sahf
mov
push
fcmovnu
dec
insb
bsr
andb
pushf
push
lcall
bound
stos
pop
sbb
rclb
rcrb
xchg
adc
pushf
mov
push
negb
out
icebp
cmp
movsb
xchg
mov
xor
cli
fiadds
mov
dec
inc
adc
pop
inc
test
les
ret
inc
xor
xlat
aas
test
dec
jecxz
push
fidivl
cmp
mov
push
int3
je
and
cli
add
fisubrl
mov
sbb
mov
scas
jg
stos
pushf
repz
iret
pop
sub
addr16
mov
aaa
push
jns
jecxz
dec
scas
popa
push
mov
dec
aas
pop
xchg
pop
mov
xchg
push
adc
shlb
xor
stos
xlat
movsb
cli
xchg
pop
push
repz
pop
test
and
imul
pop
icebp
outsb
repz
jp
pop
and
push
subb
ret
mov
imul
ja
push
mov
cld
mov
add
lds
test
js
fdivr
ficompl
xor
mov
das
adc
mov
std
movsl
je
ficompl
mov
push
enter
mov
mov
fstp
imul
clc
out
mov
jge
js
and
mov
shll
inc
xor
fstps
and
outsl
sub
jp
mov
jge
cmp
jne
mov
cmpsb
pushf
arpl
add
mov
iret
xchg
mov
arpl
lock
arpl
xchg
notl
insl
xchg
jg
daa
mov
jle
adc
into
iret
ds
jl
mov
subb
daa
out
outsl
divl
push
outsl
arpl
shrl
dec
push
or
movsb
mov
fincstp
pop
aas
sbbb
push
xchg
neg
pop
sbb
out
mov
cld
rclb
mov
stc
mov
imull
stos
dec
loop
adc
push
roll
push
mov
stc
fdivp
mov
jo
mov
push
mov
ret
out
fucomi
in
outsb
pushf
mov
imul
jne
lahf
stos
test
fistps
outsb
stc
xorl
sahf
ds
fsts
imul
adc
sahf
xchg
mov
into
mov
jbe
fwait
outsl
dec
pop
pop
stc
test
xchg
out
dec
test
mov
fidivrs
das
ja
sti
mov
jg
mov
push
enter
hlt
push
rorb
pop
add
test
nop
sbb
fbld
out
mov
cmp
mov
jg
inc
jmp
push
out
pop
dec
inc
movl
sbb
mov
or
in
adc
mov
dec
mov
jne
inc
shlb
inc
sahf
push
sub
loopne
sbb
and
push
xchg
scas
ret
in
mov
xchg
movsl
jle
inc
push
mov
xchg
inc
dec
add
pop
imul
inc
jae
dec
push
xchg
mov
aam
sub
scas
pop
ret
out
mov
jmp
rorl
scas
adc
push
jbe
dec
scas
mov
pop
lods
sahf
xorl
adc
and
xchg
push
xchg
mov
test
mov
xorb
mov
mov
enter
es
scas
or
xor
mov
lods
fldl
jge
mov
fbstp
pop
pop
das
jl
int
mov
xorl
fcmovnu
xchg
aas
and
pop
stos
or
jl
scas
mov
push
mov
pop
lock
push
out
and
inc
xor
lret
push
xchg
js
sbb
cmpsl
adc
mov
add
dec
mov
xor
xchg
mov
pop
js
enter
in
fcomps
mov
dec
loope
cmpsl
rorl
ret
ja
xchg
inc
push
push
mov
dec
xchg
sbb
xchg
mov
dec
sarl
push
mov
stos
adc
dec
pop
xchg
mov
movsb
mov
clc
mov
and
movsl
fnstenv
mov
fmull
jmp
jl
cmp
lods
push
insb
test
fxch
xorb
mov
lds
mov
jmp
sti
enter
inc
xor
ds
repz
xchg
inc
popf
faddp
or
std
and
dec
pop
lods
sbbb
rcl
xchg
adc
sub
mov
sub
imul
sbb
inc
fstp
lahf
pop
mov
in
stos
sti
fs
cltd
pop
mov
jmp
or
les
movsb
mov
incb
shrl
lock
xlat
mov
jle
fdivp
stos
pop
test
sub
repnz
push
roll
inc
rol
inc
push
pop
push
dec
rorl
lock
mov
inc
jp
pop
test
inc
pop
cmp
sbb
or
push
mov
fbstp
out
ffreep
fisubl
cmp
and
and
add
flds
xchg
sub
and
add
pop
mov
mov
fimull
scas
xchg
lods
lea
pop
jb
mov
lret
out
cmp
mov
in
ss
dec
adc
mov
sbb
mov
cmp
push
shll
push
xor
sarb
dec
inc
lret
test
sbb
adc
mov
push
dec
mov
lea
inc
pop
pusha
insb
jp
mov
inc
xor
mov
mov
add
test
jns
sub
into
dec
push
pop
std
mov
or
shrl
jmp
push
mov
push
fisttps
mov
mov
jecxz
or
lahf
mov
mov
outsb
testb
ljmp
popa
lret
js
mov
out
lea
movsb
scas
mov
scas
pop
cmpb
cli
pop
jge
aaa
cwtl
fnstsw
pop
dec
mov
mov
aas
aad
inc
mov
mov
push
cwtl
pop
daa
mov
jp
sahf
or
and
or
int
test
aam
mov
mov
mov
test
push
loop
and
add
lret
arpl
outsl
mov
popf
or
sub
std
add
sar
pop
dec
mov
pop
sub
std
jae
out
mov
rorb
mov
cmpb
pop
pop
pop
sub
lods
push
out
rcrb
jmp
outsb
idivl
push
xlat
jnp
mov
aaa
dec
outsl
decb
repz
dec
out
cmp
mov
push
ss
sbb
mov
mov
lods
jp
push
rcr
sbb
cmpsl
pop
sbb
mov
outsb
push
mov
jmp
cwtl
cmpsl
xor
or
xchg
xchg
pop
outsl
cmpsl
mov
inc
sahf
stos
jne
push
enter
xorl
nop
mov
stc
clc
sbb
or
dec
dec
xchg
mov
cld
xchg
cwtl
fldenv
popfw
into
jg
dec
lea
ja
mov
fsubrl
scas
leave
push
xchg
scas
aam
sub
divb
and
outsb
clc
mov
outsb
push
add
pcmpeqw
cmpsb
cld
shl
or
cmp
aad
ja
mov
mov
lods
daa
popa
adc
into
outsl
sti
push
xchg
push
ja
adc
fnsave
mov
mov
pop
das
loop
pop
push
insb
stos
fs
scas
pop
fsubrl
push
mov
aam
ljmp
aaa
sbb
cmpsl
xchg
pop
loopne
sbb
xor
imul
sbb
emms
pop
repz
jno
adc
mov
sub
cmp
pop
sub
mov
jmp
imulb
cli
in
out
add
cwtl
fists
or
int
sarb
leave
sarb
cmp
fldenv
mov
addb
or
mulb
mov
scas
lret
fidivrl
loopne
fmulp
leave
fmul
jp
push
xor
xchg
sti
call
out
aas
into
cmc
subb
add
mov
sti
mov
fsubp
push
jne
rclb
mov
int
rcr
sbb
decb
push
xchg
fisttpl
sti
jnp
jg
ljmp
sbb
adc
mov
out
jg
loope
mov
movsl
cmp
xor
push
sbb
and
fcompl
mov
pop
and
sbb
mov
lret
pop
imul
push
stos
int
push
fistpl
repz
cs
pop
mov
js
iret
arpl
fsubrl
cmpsb
arpl
dec
push
mov
jne
pop
mov
in
pop
and
push
fistpll
sub
fmull
ja
jns
xchg
sbb
lods
ret
call
mov
jae
aaa
xchg
push
out
fdiv
pop
jne
jg
in
das
pop
mov
cmp
and
in
inc
push
jp
mov
in
cmp
sti
icebp
adc
pop
sub
xchg
rol
js
int3
jae
push
push
lods
or
jmp
shll
dec
cmpsl
jg
xchg
push
mov
adc
icebp
pusha
ret
pop
jmp
test
push
sub
out
mov
pop
inc
hlt
or
fidivl
rorl
lcall
push
mov
je
mov
iret
push
mov
or
notb
flds
dec
ds
inc
push
cmpsb
push
into
in
sbb
in
cli
call
dec
fisttpll
xlat
mov
int3
test
and
mov
outsl
aad
lcall
popf
repz
cs
into
adc
fs
stos
mov
cs
push
and
leave
movsb
orl
mov
subl
fsubp
add
xchg
xchg
loopne
sub
and
mov
shll
xor
btl
icebp
sbb
cltd
jecxz
ret
test
repz
push
daa
les
lcall
arpl
fidivrs
inc
cmp
push
les
xlat
imul
mov
cmpsl
lret
add
mov
mov
lods
cmpsl
shr
xor
nop
imul
rcl
test
mov
or
mov
lods
call
pop
mov
push
adc
es
div
mov
ret
ds
popa
fs
push
cmp
das
into
jbe
out
out
aam
pop
lods
loop
fiaddl
into
sub
cmp
shl
pop
push
ja
push
jecxz
lods
aaa
mov
dec
mov
fmuls
dec
icebp
test
lods
mov
sahf
clc
xchg
cwtl
cli
inc
dec
hlt
stos
inc
fdivrs
and
js
pop
mov
incl
pop
popa
data16
cmpsl
sub
jae
icebp
or
or
mov
jmp
xchg
xlat
pusha
insl
cmpsl
ret
repz
xlat
mov
fldt
xchg
iret
or
cli
andb
ret
ja
mov
jg
xlat
jecxz
mov
enter
xlat
out
push
xchg
ja
mov
sbb
imul
imul
mov
sti
clc
jecxz
add
dec
inc
out
push
aam
in
aad
enter
mov
shlb
jbe
enter
pop
pop
lods
pop
jg
add
aas
mov
add
outsb
cmpsl
jge
dec
jbe
mov
pop
pop
fsubrs
mov
lods
je
out
addr16
ret
orb
cli
jmp
add
sub
out
push
pop
pop
push
add
repz
fsubrl
fists
clc
dec
test
insl
mov
popl
das
or
popf
pushf
mov
xchg
das
fstl
jno
push
pop
sub
lret
sub
and
dec
inc
fiadds
jecxz
imulb
fildl
hlt
mov
jae
dec
mov
mov
inc
xor
jnp
test
stos
lahf
xor
out
fcmovnb
outsb
adc
fisttpl
ds
pop
scas
mov
pop
test
or
ja
mov
pop
push
mov
adcb
lods
sub
mov
lods
xor
fldt
xchg
lret
in
push
imul
jnp
mov
imull
imul
jg
fnstcw
in
dec
repz
cmpsl
ficoms
imul
xor
jne
into
fimuls
fnstsw
pop
lods
jb
or
shlb
xchg
insl
cmpb
dec
pop
orl
mov
arpl
pop
jg
fwait
test
out
rorl
cmp
push
add
ds
pop
inc
pop
or
adcl
add
ret
mov
mov
fcomps
outsb
lods
mov
push
ror
xor
mov
add
mov
add
lahf
push
ja
daa
xchg
mulb
hlt
sbbb
and
push
out
and
mov
mov
pushf
ljmp
fs
pop
sbb
push
and
xor
aas
add
lret
pop
sahf
in
loopne
jp
push
call
adc
jo
push
mov
icebp
insl
or
cwtl
cmpsb
je
jnp
outsl
inc
fyl2x
or
repz
mov
mov
sbb
fdiv
shll
jne
into
xchg
inc
rclb
add
outsb
xchg
aam
mov
and
int
leave
ret
mov
leave
scas
mov
inc
pop
loopne
pop
or
aam
xchg
xchg
dec
pop
ret
pop
jl
repz
adc
lods
inc
xor
push
or
mov
jg
test
aad
dec
scas
sub
dec
sbb
shrb
stc
fcomps
mov
sbb
pop
jl
rcl
in
jge
popf
dec
mov
sub
cld
dec
sub
aad
out
mov
shll
pop
inc
ja
repz
cmpsb
stos
pop
sbb
adc
shl
retw
sub
fwait
sahf
push
scas
xchg
enter
fcoml
fcompl
test
arpl
pop
mov
repz
mov
mov
sbb
and
imul
inc
loop
arpl
add
cmp
into
cld
ljmp
imul
aas
cmpsb
fbstp
push
sti
subl
xor
pop
add
mov
add
daa
xchg
orb
into
or
bound
push
shl
xor
inc
loope
jl
mov
sub
loopne
add
iret
xchg
fistpll
lret
dec
out
in
mov
mov
packssdw
rcrb
insl
or
inc
insb
insb
pop
add
adc
imul
jle
mov
jg
mov
add
mov
arpl
mov
or
cmc
cmp
popf
mov
ret
daa
repnz
or
push
push
cs
add
push
orb
cs
or
movb
call
cmpsl
cli
jnp
repnz
dec
in
and
sbb
addb
adc
rorl
cmc
negl
fwait
dec
mov
leave
adc
push
or
fnstcw
and
adc
mov
mov
or
shrb
sahf
and
adc
popf
and
icebp
je
clc
fstps
arpl
mov
lahf
dec
fwait
aaa
insb
subb
in
mov
dec
je
lcall
mov
dec
fldenv
rcrl
iret
insl
sarb
sub
aas
mov
cmp
and
fcoms
clc
mov
push
add
xor
pop
sub
int
or
push
mov
adc
ret
push
sub
fidivrl
fcompl
loopne
neg
repz
jg
fcoml
xlat
mov
cmp
ljmp
ret
fnstcw
mov
test
sub
fbstp
ja
out
mov
jmp
jbe
add
or
out
ret
loop
xchg
pop
in
stos
pop
les
imul
fdivrl
rcrb
out
xchg
pop
in
mov
scas
sub
jnp
jbe
aam
sbb
mov
outsb
fwait
neg
push
jg
push
stc
ss
mov
mov
insb
or
mov
sub
jle
lock
mov
push
loopne
ror
xor
imul
inc
jl
sbb
inc
xlat
and
jmp
dec
dec
jmp
and
adc
std
movsl
push
mov
icebp
inc
jmp
fistpl
jne
ja
out
xchg
movl
outsl
jmp
or
jae
push
mov
push
cmpsl
gs
in
add
fidivrl
sbb
mov
jge
sti
pop
rcr
jnp
insb
xlat
arpl
out
xchg
ja
jge
ss
add
cmpb
cwtl
lret
mov
outsl
mov
inc
xor
push
mov
xchg
test
cmpsl
jl
popa
fnstsw
je
hlt
int3
jb
ret
in
ja
fidivrs
addb
rorl
sti
xchg
adc
aas
mov
test
sub
and
out
mov
repz
js
mov
aam
jle
mov
out
xor
or
das
into
cmc
and
xor
and
orb
ljmp
mov
ja
popl
or
mov
out
mov
adc
arpl
mov
stos
push
aaa
lock
pop
shrb
adc
popa
xor
adc
push
add
xor
xchg
decb
and
in
les
pmaxsw
bound
add
push
pop
or
cmc
pop
xchg
or
add
ror
cltd
mov
ss
push
leave
in
in
in
inc
fstps
scas
sub
push
push
cmc
mov
mov
inc
xchg
ja
repz
jo
xor
cmp
imul
mov
ds
int
xchg
pop
mov
xor
jecxz
sub
ret
outsl
pop
out
jae
cli
add
lar
and
and
ds
xor
xchg
idiv
ret
jmp
xchg
addr16
or
mov
or
push
jnp
jg
mov
into
idiv
out
fld
out
add
scas
lods
in
fldt
jo
imul
or
cltd
ret
scas
in
pushf
push
mov
or
mov
vpminsw
loope
mov
cmc
out
stc
add
vphaddbw
ss
or
cmpsl
popa
mov
xchg
mov
push
cwtl
inc
divl
dec
inc
sub
in
cmpsb
je
stos
loop
xchg
sub
sbb
aad
fsub
imul
stc
ja
aaa
jns
aaa
inc
cmp
mov
arpl
adc
xchg
lock
jmp
aaa
mov
mov
jne
mov
pop
outsb
cli
rorb
aas
lret
sub
and
sbb
cmc
sarb
jnp
adc
push
jbe
in
cs
push
cs
mov
outsb
push
out
jle
icebp
cld
xchg
and
loopne
in
int3
outsb
bound
mov
pop
into
xlat
movsl
dec
pop
xchg
pop
in
je
mov
movb
sub
into
cmpb
movsl
out
jae
mov
mov
flds
testl
inc
add
out
sbb
push
adc
or
out
add
mov
rcr
repnz
popa
ja
out
cwtl
decb
fcmovne
mov
cli
pop
pop
div
out
jmp
jecxz
mov
sbb
xlat
add
js
popa
xchg
dec
into
push
hlt
mov
mov
mov
mov
movsl
push
faddl
aaa
ficoml
adc
shl
sub
mov
cmp
sti
gs
pop
mull
mov
or
sbb
xor
rorl
aam
push
adc
adc
lds
testl
push
push
sbb
mov
addb
push
jae
sarb
das
and
sbb
push
mov
and
loopne
imul
jmp
xor
pop
push
cmc
fisubrl
subb
in
ret
das
leave
or
pop
push
movl
pop
mov
cltd
mov
inc
mov
loopne
adc
rcr
push
or
rcll
out
mov
mov
mov
rcr
ret
int
cmp
pop
gs
mov
xchg
pop
fwait
jno
push
add
cmp
jl
fisubs
push
push
mov
jo
scas
clc
lea
sbb
cltd
cld
xor
add
push
shlb
iret
stc
pushf
gs
xchg
in
xchg
xor
mov
pop
in
dec
xchg
popf
aaa
jl
dec
mov
or
sahf
xchg
cmpsb
mov
inc
or
xchg
jnp
lcall
adc
or
call
aas
xchg
mov
je
roll
mov
and
xchg
lret
pop
out
jg
in
cs
jns
mov
sub
stos
push
jp
das
into
jb
lcall
lock
dec
adc
lock
enter
in
dec
fs
jg
out
das
mov
test
mov
jns
push
enter
push
outsb
inc
xorb
ret
imul
filds
not
loope
add
imul
push
pop
sub
fnstsw
mov
ja
fildll
push
xor
adc
and
enter
mov
lock
ja
nop
fisubl
xchg
mov
into
mov
in
cmpsb
aam
mov
scas
sbb
and
and
mov
jl
mulb
sub
xor
subb
pop
adc
sub
jns
xchg
testl
pusha
jg
fisubrs
pop
shlb
outsb
nop
and
inc
adc
fildll
ficomps
daa
cmovl
aad
daa
dec
notrack
sub
pop
dec
das
xor
sti
mov
pop
add
mov
je
dec
dec
dec
pop
fdivrl
jne
out
cld
adc
lock
fdivl
push
and
imul
pushf
sbb
outsb
and
ds
pop
dec
aad
push
dec
pop
fs
add
dec
pop
add
xchg
jg
lahf
dec
loope
ret
or
cwtl
aaa
mov
mov
ja
sbbb
cmc
pop
loop
sbb
rorl
test
jmp
or
and
mov
gs
jg
or
push
test
in
mov
out
ja
outsl
inc
in
ja
iret
cmp
mov
xor
out
xorb
mov
fcomip
cmp
das
ja
daa
repnz
jnp
push
jmp
sbb
add
jmp
sarl
fiaddl
fidivrs
lods
adc
sub
fmull
or
pop
pop
pop
ret
scas
test
inc
sub
data16
sub
sbb
adc
mov
mov
in
aam
sbb
sub
and
fisttps
aam
jge
add
sub
jne
push
pop
call
jo
add
rol
enter
dec
xor
pop
jp
add
movsl
push
clc
or
in
inc
adc
xchg
jle
sbb
pusha
call
je
dec
pop
clc
sahf
mov
pop
xchg
lds
fldcw
int3
mov
fistps
movsl
movsb
push
test
shll
sub
rcrl
and
imul
cmpsl
cmp
sbb
fmul
in
or
cmp
imul
shll
pop
ds
in
gs
cmp
push
outsl
mov
mov
stc
pop
sub
xor
fdivrl
in
sub
mov
repnz
sub
rcrl
enter
or
add
and
mov
fadd
mov
test
lret
mov
mov
mov
das
daa
cmpsb
sbb
mov
mov
sbb
fbld
jg
pop
cmp
sbb
out
add
push
mov
jle
cmc
inc
and
push
repnz
cmpsb
stos
mov
out
dec
loope
paddsw
inc
mov
in
mov
aam
fnstsw
push
addb
sarb
sbb
mov
jae
scas
clc
push
pop
fildll
jnp
testb
sbb
popa
mov
rcrb
inc
iret
aam
push
pop
and
xlat
and
or
inc
dec
or
sbb
shrl
mov
sti
cmp
pop
push
es
push
push
ss
add
sub
cld
imul
push
arpl
in
mov
xlat
jo
inc
mov
fstl
dec
pop
in
xor
add
ret
adc
sbb
xor
ds
gs
rolb
es
mov
mov
sbb
sbb
pushf
ror
mov
aad
mov
jl
pop
cmpsb
cmp
pop
dec
test
in
jne
mov
xchg
and
pop
and
scas
mov
out
sbb
shll
cmpsl
push
stc
push
cmpsl
test
out
imull
ljmp
outsb
sti
mov
mov
mov
mov
leave
push
xor
inc
lahf
in
int
pop
mov
test
xchg
enter
fcoml
cmp
insb
outsl
paddsb
jbe
daa
cmpsb
incl
or
popa
sub
adc
in
lret
push
rorl
out
test
push
cmpsb
fisubl
fldt
pop
xchg
push
ds
clc
lret
icebp
pop
adcb
add
mov
das
lea
popf
aad
lds
ret
mov
or
out
push
in
or
inc
arpl
test
pop
arpl
mov
pushf
stc
jge
out
mull
ret
inc
jg
shlb
pop
outsb
iret
mov
push
in
imul
push
pop
dec
xchg
sti
and
nop
in
jbe
jle
arpl
outsl
jbe
adc
adc
outsb
iret
mov
and
inc
std
push
mov
dec
popa
inc
arpl
mov
mov
cs
sbb
imul
sub
lahf
mov
or
and
pop
push
rcrb
add
insl
pop
xchg
sar
or
aam
xor
and
cs
cmpl
or
iret
push
push
fwait
or
push
in
notb
sub
pop
mov
adc
cmpsl
fisubl
or
mov
jp
pop
fldcw
adc
push
std
insl
adc
sahf
jecxz
cmpsl
cs
shl
push
ret
gs
nop
mov
cmp
insl
and
push
lahf
cmp
std
and
cs
pop
or
mov
stos
push
aas
out
pop
xchg
mov
or
jno
mov
clc
dec
rcr
jecxz
cmpsb
adc
mov
in
push
mov
insl
aam
sub
and
ss
xlat
dec
fbstp
mov
push
push
outsb
pop
xor
push
push
or
and
das
movsb
clc
pop
mov
movsl
sbb
cmpsl
pop
inc
xchg
adc
rcrb
pop
dec
inc
pop
sahf
leave
scas
shl
xor
fldenv
add
outsb
jge
sbb
int3
sbb
or
fwait
sub
sub
mov
aad
loopne
dec
add
ljmp
and
inc
pop
mov
xchg
movsb
call
mull
mov
test
or
add
mov
xchg
pop
and
lahf
ljmp
rcll
inc
push
je
ds
or
xor
rclb
gs
ja
mov
push
gs
in
inc
push
int
lret
cltd
lea
or
clc
stc
push
pop
fucomip
popa
push
imul
insl
xchg
jmp
add
xchg
mov
repnz
inc
insl
sbb
pop
cmc
pop
pushf
push
add
fcomi
daa
loopne
mov
push
jo
cwtl
dec
or
mov
add
mov
xor
iret
pop
pop
xchg
cmpb
scas
add
xchg
push
out
nop
xlat
enter
fldt
and
outsb
in
mov
movsb
out
mov
mov
sahf
or
sti
and
cld
pop
repnz
jae
cmpsb
test
out
pop
add
mov
inc
je
out
decb
mov
mov
mov
popf
sbb
xchg
cmc
sub
out
orb
sar
popa
mov
cmp
cmc
add
mov
lock
or
sub
cmpsl
xchg
jl
dec
jo
lahf
imul
dec
mov
jmp
cmpsb
inc
arpl
dec
cmpsl
popa
outsb
lods
inc
xchg
mov
sbb
mov
push
xor
lret
and
mov
adc
jmp
sub
xor
outsb
pop
push
or
mov
sbb
inc
xor
mov
cmp
lods
and
cmp
push
outsb
mov
ja
lret
test
cld
aaa
mov
mov
sbb
lahf
fistps
add
jns
mov
xchg
fadds
pop
mov
fistpll
cli
xchg
scas
rcll
pop
or
adc
lret
ja
xor
shrb
mov
jecxz
sbb
into
out
ss
lcall
pop
orb
jge
pop
addb
pushf
incl
xchg
xor
jmp
fwait
or
das
fnstcw
adc
and
out
dec
imul
in
mov
or
lahf
aas
fisubrs
ficoms
xor
add
es
and
jmp
test
jae
add
add
or
aaa
testl
mov
data16
xchg
jns
shll
ficompl
inc
insl
lcall
inc
mov
pop
xchg
jmp
adcl
xorb
ds
mov
add
cmp
ljmp
fwait
shlb
pop
fisttpl
dec
sub
push
cmp
fmull
pop
jne
popa
or
cwtl
das
loopne
sbb
mov
cmp
daa
fdivs
mov
xor
lea
sbb
adc
lock
ret
xor
lret
cmc
push
lods
stos
mov
fnstenv
lret
stc
mov
fiadds
pop
nop
ficompl
inc
pop
adc
jb
jno
jne
sahf
mov
dec
in
mov
arpl
mov
and
mov
leave
movsl
dec
and
shlb
mov
movsl
call
mov
mov
out
jns
sub
lds
xchg
addb
push
sar
incb
xor
pusha
dec
push
mov
enter
lods
add
pop
mov
outsl
inc
movsl
stos
mov
icebp
fistpll
mov
subb
out
lahf
das
inc
fldenv
rol
sti
xchg
lcall
and
pop
push
fists
push
outsb
leave
push
mov
jmp
xchg
lods
or
into
push
dec
cli
sub
cwtl
pop
cwtl
mov
push
mov
sub
pop
mov
dec
out
add
mov
mov
pop
add
fsubrs
sbb
scas
add
jbe
rorb
arpl
ja
sbb
inc
add
int
divl
dec
dec
add
jno
push
and
jg
lds
repz
stos
cmp
mov
mov
jno
into
mov
adc
or
cmpsb
push
movsl
lahf
jmp
inc
ds
xchg
pop
inc
outsb
jmp
dec
mov
cmpsb
push
mov
push
addr16
and
ss
imull
loopne
push
fsub
mov
stos
mov
int
and
insl
int
rcrb
rcrb
mov
sar
add
not
lods
mov
cs
jmp
push
es
sbb
imul
into
shrb
push
mov
dec
stos
jne
scas
adcb
sbb
std
mov
aaa
imull
gs
pop
sub
ret
cmp
push
mov
add
test
arpl
sti
int
xchg
jmp
sbbl
aad
cs
jnp
xor
stos
pop
adc
in
add
cmpsb
sbb
imul
add
push
lsl
ret
cmpsl
inc
fs
rclb
rcrl
mov
imulb
xchg
add
icebp
mov
pop
xlat
out
jge
push
idiv
mov
inc
add
stc
cmp
pop
sahf
mov
fstps
pop
sbb
sar
adc
adcb
sbbl
lret
push
pop
iret
adc
ret
push
in
out
fmull
push
push
pop
push
dec
cmpl
add
aas
sub
dec
xor
mov
dec
add
outsl
pop
mov
movb
or
dec
sub
js
fistpl
push
dec
cmc
mov
stos
pop
std
xor
mov
movsl
out
mov
das
test
sub
pop
inc
cmp
jnp
mov
sub
fcoms
call
jne
jae
adcb
rolb
aas
jns
cmp
sub
mov
mov
push
test
sti
int
pop
mov
testl
or
mov
repz
imul
fisubrl
mov
mov
scas
pop
mov
mov
icebp
lock
mov
jne
and
sbb
jl
addb
and
out
or
movsb
cld
mov
sub
aad
mov
mov
das
aas
fdivp
out
push
faddl
and
or
or
in
mov
fcomp
sub
cmpsl
lcall
add
xchg
andnps
push
sbb
das
icebp
je
in
hlt
imul
rcl
lahf
shlb
mov
mov
mov
repz
and
call
dec
dec
sub
sti
push
or
pop
rol
xchg
add
call
stos
pop
mov
adcl
push
and
mov
aas
pop
jne
dec
mov
inc
fcomps
cmpsb
stos
mov
xor
cli
mov
mov
jno
jge
stos
pop
ljmp
aad
out
pop
lahf
ja
iret
inc
aas
push
push
xchg
scas
mov
sbb
out
push
in
shl
aaa
les
pop
adc
fstpt
adc
clc
ljmp
call
out
frstor
cmp
pop
jmp
xor
mov
mov
divl
sub
or
or
fsts
xor
dec
icebp
cmc
orb
fnstenv
inc
and
fs
rcrl
negl
rcll
out
into
andb
jp
lods
mov
shrb
dec
loopne
mov
repz
and
testl
mov
sbb
mov
pop
loop
imul
ret
xchg
shlb
mov
pop
stos
mov
mov
fistpll
and
filds
aaa
dec
mov
pop
shr
xchg
pop
cmpsl
adc
push
pop
cmp
call
sbbl
sub
lret
or
or
out
pop
or
jnp
pop
mov
mov
in
xchg
fidivs
jns
lock
bnd
sbb
dec
inc
inc
fs
mov
sbb
sbb
mov
or
stos
repz
push
cmp
lock
enter
jbe
adc
fisubl
add
mov
or
lahf
out
fsts
lahf
jmp
adc
outsl
sbb
inc
cmp
fistpll
and
xlat
mov
sub
iret
mov
xor
pop
movl
push
cmp
push
ret
jmp
loopne
add
push
lret
jne
mov
mov
inc
imull
aas
push
sub
inc
movsb
fcomip
pop
aas
jg
fildll
ficoml
mov
fdivs
imulb
dec
iret
cmp
sbb
lods
sti
xor
push
leave
ret
loop
in
fnstenv
cmp
shlb
insb
jl
cmpsb
enter
jns
push
push
arpl
gs
mov
fdivrs
nop
cs
js
and
xor
inc
jnp
mov
add
lock
xor
sar
push
ljmp
faddl
ret
mov
add
adc
inc
mov
xchg
movsb
fildll
mov
leave
cmpsl
cmc
std
pop
ficoml
ljmp
mov
add
ja
rcr
ror
incb
leave
xchg
aas
pop
std
aad
stc
shll
add
fcmovne
xchg
sub
repz
pop
xlat
stc
mov
jmp
mov
add
scas
icebp
sbb
xlat
jge
call
in
xor
adc
faddp
dec
lds
adc
rcl
test
jae
inc
pop
or
or
sub
rcr
xchg
iret
pop
gs
jecxz
es
cltd
dec
pop
filds
inc
jg
mov
scas
mov
in
iret
adc
push
add
add
enter
pop
pop
mov
push
dec
xor
push
mov
testb
jmp
stos
push
mov
dec
jg
mull
adcb
sbb
mov
mov
ja
insl
cmpsl
insl
inc
fdiv
mov
in
adc
sub
stos
push
xchg
out
jae
pop
and
mov
jle
sbb
cli
clc
push
gs
sub
cli
lahf
push
mov
jnp
scas
mov
insb
js
ds
mov
in
add
xor
cmc
ucomiss
jmp
mov
testb
jp
sti
mov
je
nop
aam
paddsb
and
xlat
pop
je
aas
fimull
push
outsb
add
mov
sbb
leave
pop
outsb
xor
jbe
pop
mov
push
stc
sarb
icebp
cmc
in
pushf
pop
inc
sahf
stos
jns
iret
xor
rclb
arpl
pop
mov
hlt
mov
sti
and
mov
outsl
fucom
lock
xor
adc
mov
pushf
sbb
jmp
data16
push
and
das
pop
mov
adc
cmc
mov
iret
out
cs
xchg
dec
ret
aas
adc
rcll
fdivr
adc
dec
aad
mul
sarb
repz
mov
push
adc
sbb
hlt
cli
pop
cmp
mov
test
sbb
push
mov
cld
das
sarl
stos
jl
repz
push
sbb
jnp
daa
test
mov
fdivr
cmpsb
add
arpl
imul
cmp
popf
imul
imul
leave
mov
jbe
add
add
in
stc
jnp
fninit
sub
add
xor
jp
sahf
and
lock
cmp
jb
repz
in
aas
popf
std
mov
jp
mov
xchg
sub
orb
mov
outsb
aas
jmp
mov
imul
sub
cmpsl
cmp
sub
fists
stos
inc
inc
ret
mov
cmp
jne
or
cs
xor
sub
or
push
scas
jecxz
call
mov
mov
mov
xchg
pop
cmp
filds
or
or
decl
mov
divb
dec
pop
sub
iret
stos
pop
jnp
icebp
in
mov
adc
push
mov
flds
xchg
mov
ret
rcrl
out
std
add
xchg
push
push
mov
test
mov
xchg
scas
loopne
pop
imul
daa
cmp
stc
dec
pop
ja
scas
ss
cmp
mov
in
repnz
adc
loope
push
adc
addr16
mov
adc
sub
cmpsb
fimull
rorl
sbb
and
or
fnstcw
mov
sub
in
dec
lds
mov
mov
insb
outsl
or
mov
aaa
in
test
pop
lcall
jmp
shr
mov
testb
popa
aas
jae
stos
sub
add
cs
pop
dec
call
aas
sbb
in
push
out
pop
int3
mov
sbb
push
jmp
lods
clc
jl
mov
push
iret
popa
popf
cmp
iret
mov
cmp
fimuls
mov
enter
or
push
add
aas
dec
xchg
sub
icebp
pop
subl
adc
outsb
mov
and
idivl
or
or
rorl
fstpl
cs
ljmp
mov
jp
jb
ret
and
pcmpgtw
test
push
aam
cmpsb
bnd
int
pop
pop
ljmp
jmp
arpl
adc
jb
es
mov
lds
inc
aam
cmp
jbe
or
aam
dec
out
mov
or
mov
movl
fists
sbb
mov
ja
int3
and
fmul
ficompl
mov
jne
aad
inc
adc
or
jmp
stos
hlt
ficoms
repz
pushf
fcomi
clc
pusha
fildl
je
sbb
sbb
mov
and
ljmp
sbb
mov
repz
add
sbb
js
ljmp
push
jmp
fistps
scas
sbb
adc
cli
js
inc
fdivrs
stos
in
jbe
mov
pop
mov
and
mov
adc
filds
cmc
mov
cmpsb
movsl
cltd
mov
cmp
neg
mov
or
adc
sub
out
andl
cmp
enter
fstps
push
imul
ljmp
adc
cmc
out
add
push
repnz
ljmp
aas
jo
and
in
or
lods
hlt
mov
push
into
and
push
dec
mov
imul
xchg
jae
lret
popf
std
repz
mov
cmp
pop
xlat
adc
mov
fnstsw
inc
add
test
push
cmp
push
aam
inc
cwtl
or
xchg
push
sbb
push
rcr
popa
or
push
jle
sub
rcr
jo
mov
out
outsl
cmp
cmp
cpuid
pop
xchg
sub
arpl
xchg
shll
out
fs
cmpsb
out
xchg
and
pop
insl
jge
leave
fcmovu
sbb
shll
mov
inc
inc
outsl
mov
pushf
pop
cmpsb
punpcklbw
add
cs
adcb
xchg
mov
and
mov
popf
cmp
push
pop
push
bound
mov
pop
dec
cmp
dec
push
mov
jne
aam
int
dec
or
mov
xchg
lea
pop
cld
pop
negl
mov
out
das
repnz
mov
sbb
mov
cmp
and
pop
bound
cmp
adc
mov
cmp
push
jb
sbb
cs
or
out
inc
mov
dec
mov
pop
addb
in
in
add
iret
in
cmp
js
sub
out
insl
out
cmpsl
add
fucomi
in
call
les
jl
js
push
mov
pop
or
pop
fildll
aaa
out
sub
pop
and
or
notl
scas
mov
dec
gs
add
or
je
cmp
sub
cld
push
icebp
sbb
fs
fdiv
pop
mov
xor
imul
jp
sti
adc
jmp
roll
lcall
add
or
lret
aad
and
xchg
sub
lea
add
sti
mov
inc
xchg
fists
pop
mov
movl
xchg
pop
outsl
fmulp
repz
loop
push
mov
push
push
btl
mov
xchg
push
ret
pop
roll
push
test
ret
js
fbld
mov
and
std
icebp
in
loopne
sbb
in
mov
mov
dec
repz
insb
cli
adc
mov
lret
int3
in
sub
insl
mov
rcr
push
and
fcoms
sbb
mov
movsb
mov
out
pop
shl
mov
mov
mov
pop
movsl
mov
mov
or
sub
fildll
xor
enter
push
insl
test
add
lods
imull
imul
gs
shl
mov
dec
gs
movsl
pusha
jp
cli
fistpll
stc
xchg
aaa
pop
fstps
dec
ss
push
ficoms
aas
push
outsl
add
fildll
mov
inc
jae
cmpl
dec
idiv
xor
popf
outsb
pop
gs
mov
mov
jb
cmpb
dec
add
dec
lods
sbb
mov
in
mov
pop
outsl
sti
adc
sbb
sbb
adc
imul
jno
rorl
or
pop
jbe
pop
mov
push
dec
aaa
fsub
aam
dec
cmp
lds
push
ret
pop
imul
addr16
iret
leave
ja
lods
cmpsl
pop
sub
xchg
stos
xchg
dec
mov
pop
pop
sbb
push
mov
aas
sti
pandn
adc
das
xchg
lret
add
out
or
lods
pop
push
sub
dec
mov
sub
dec
mov
jle
in
stc
adc
iret
inc
scas
mov
pop
pushf
dec
mov
xlat
xchg
or
iret
ss
mov
jecxz
push
xchg
pop
out
push
negl
mov
add
gs
xchg
xor
sbb
xor
fs
or
dec
jle
pop
test
mov
pushf
pop
js
cmpsb
push
das
mov
ljmp
push
sub
scas
cmp
sahf
loope
addr16
jne
jns
fldcw
xchg
pusha
fistpl
mov
dec
aaa
jnp
lods
sub
add
cmc
mov
inc
add
mov
jp
mov
out
fisubrs
mov
pushf
ret
shl
scas
fld
pop
ret
aas
push
push
inc
leave
in
or
aam
imul
test
adc
jne
add
and
pop
inc
push
insb
jmp
xchg
dec
cs
outsl
int3
fidivs
jns
push
mov
aaa
mov
cli
in
xchg
jle
ret
out
xchg
jmp
push
jl
jnp
jns
das
mov
jns
mov
jmp
mov
lds
lock
out
clc
clc
dec
pop
lret
mov
push
das
mov
popa
lret
pop
jl
add
push
pop
lret
mov
lods
jle
test
dec
or
add
sbb
xchg
dec
and
sbb
mov
mov
pop
fs
repz
adc
sahf
cmp
push
adc
xchg
stos
and
xor
imul
aam
insb
scas
mov
ror
xor
jmp
shll
mov
xor
jbe
inc
ja
dec
mov
cmp
pusha
push
filds
mov
jns
push
inc
mov
dec
lcall
cmp
jle
sarb
sti
inc
fisubrl
mov
sub
sub
rcrb
mov
cs
mov
ja
sti
xchg
es
ja
rcrb
and
ja
sub
jnp
sbb
mov
aad
inc
sub
mov
int
xchg
push
subl
pop
mov
mov
fisubrs
push
jne
out
mov
or
lods
mov
rcll
fdivl
or
pop
cmpsl
and
xor
jge
aad
xchg
or
cli
push
push
dec
cwtl
cmp
inc
into
push
into
in
mov
adc
repz
mov
fldenv
mov
mov
mov
sbb
or
fidivl
popa
stos
cmp
mov
mov
cli
fcmovnu
cmp
add
pop
jl
cs
idivb
xor
add
in
es
cmp
lods
dec
lahf
popf
movsl
sub
cld
adc
cmpsb
ja
in
adc
fnstcw
aaa
inc
rclb
mov
dec
adc
scas
pop
push
test
add
in
in
into
push
and
lret
lcall
insb
sbb
lds
iret
jnp
dec
repz
lahf
mov
scas
dec
mov
lds
cmp
out
ja
adc
xchg
push
test
out
sbb
ffreep
loope
add
sbb
or
iret
pop
clc
addr16
cmp
shl
loop
pop
mov
ret
shl
out
dec
adc
pop
rorl
xor
stos
scas
pop
xor
mov
outsb
pop
cmpsl
jae
mov
mov
dec
mov
mov
int
outsl
add
mov
pop
mov
cwtl
jecxz
xchg
in
and
sub
mov
mov
mov
mov
ret
fdivr
data16
mov
shr
js
push
lret
std
pop
jno
lock
ja
insl
std
push
push
push
mov
adc
es
rclb
test
cmp
fucomi
pop
scas
in
push
add
lahf
jle
rcrl
int3
aad
mov
fidivs
ficoml
stc
and
cmpsb
sahf
test
fwait
and
fs
sti
test
dec
sbb
adc
sub
pop
and
cli
add
iret
imul
pop
fdivp
lret
sbb
cmp
xchg
dec
fcmovu
xlat
movntq
jle
cltd
mov
outsl
push
out
rorl
insl
decb
mov
cltd
lahf
out
pop
loopne
pop
mov
mov
mov
repz
pop
scas
clc
stc
pop
jns
inc
hlt
sub
movsb
scas
pop
stc
aam
incb
pop
add
clc
pop
xor
adc
mov
jbe
out
fdivs
imul
insl
out
int
rcl
and
rorl
and
mov
inc
sub
and
imull
out
fistps
int
adc
jle
mov
cmp
add
int
lods
inc
mov
mov
mov
mov
sub
pop
insl
cmpsb
repz
leave
popl
cmp
inc
sub
jp
ljmp
test
das
adc
push
cmpsb
push
jmp
imull
fwait
setbe
arpl
stc
jns
lret
in
xor
pop
sahf
or
mov
jp
pushl
and
out
jl
pop
rcll
aaa
icebp
add
sub
sbb
mov
sbb
fmuls
lods
mov
cmpsl
aas
stos
mov
cmp
cmc
pop
js
and
pop
mov
adc
adc
ja
into
fildl
shll
outsl
pushl
jo
push
outsb
cwtl
imul
lcall
in
stos
jmp
nop
lods
adc
fucom
out
cmpsl
jle
xor
loopne
cs
ret
mov
sub
mov
pop
enter
cmp
xor
mov
in
sbb
xor
mov
sbb
xchg
popl
std
xor
popf
daa
pop
mov
scas
ljmp
aaa
orb
call
fisubrs
fwait
imul
test
aaa
jns
mov
adc
out
mov
pop
test
in
sbb
pop
sub
pop
cld
sub
iret
mov
inc
inc
mov
mov
dec
jge
mov
pop
add
cmp
arpl
or
inc
sub
ret
ja
sbb
lahf
rcr
sahf
jecxz
ret
add
notl
icebp
add
ds
jecxz
mov
inc
push
icebp
sbb
imul
mov
push
push
adc
jle
pop
imul
jne
das
mov
jb
sbb
repnz
push
mov
mov
insb
mov
pop
push
pop
test
and
jmp
dec
sub
sub
xorl
push
das
cmpsb
add
push
sub
add
popf
movsb
mov
cmpb
mov
sbb
push
enter
xchg
sbb
push
int
mov
and
ljmp
push
fwait
mov
lock
dec
imul
pusha
aad
je
cmp
add
out
dec
and
mov
mov
aas
jnp
push
scas
jle
lea
xchg
sub
mov
test
sub
mov
aaa
repnz
sub
ret
xlat
sbb
sti
scas
daa
leave
cmpsb
mov
jmp
sbb
fildll
inc
shr
scas
xchg
pusha
push
bound
or
hlt
roll
sbb
out
adc
dec
sti
pop
mov
and
ja
adc
fidivl
es
inc
sbb
push
mov
cmpb
pop
cs
adcl
in
arpl
icebp
pop
push
sbbb
or
aad
mov
mov
sub
adc
dec
or
mov
mov
mov
xor
imul
xor
iret
js
aas
fsubrl
les
fdivl
ja
pop
mov
stos
cmp
push
or
mulb
leave
dec
sub
jg
sahf
pushf
xchg
mov
jb
cmpsb
dec
clc
cmpsl
cs
sbb
push
andb
mov
inc
outsl
imul
jbe
shr
imul
or
mov
dec
mov
cld
push
lods
addl
les
in
test
leave
filds
rcrl
pop
loop
out
fld1
xlat
repz
ds
add
mull
enter
push
push
mov
out
and
mov
fdivr
lods
ss
leave
or
pushf
mov
sarb
sbb
sub
pop
cmc
inc
pushw
imul
mov
inc
mov
mov
adc
pop
sub
jne
aam
jg
dec
push
inc
add
push
inc
mov
mov
push
inc
out
sub
pop
or
les
fiadds
push
pop
mov
out
movsb
dec
jne
pusha
push
lods
push
divl
ja
sbb
mov
fistl
leave
mov
aad
jge
sbb
mov
mov
mov
lcall
xchg
mov
fwait
stos
sub
push
ljmp
inc
leave
push
and
cmpsb
loopne
mov
cmp
or
fs
shr
lods
in
loope
pop
dec
jge
into
inc
adc
daa
pop
das
repnz
push
jno
mov
fnstenvs
imulb
loopne
xchg
xor
mov
jg
out
out
and
mov
outsl
rclb
push
lahf
pop
jmp
mov
sub
push
arpl
into
fisubs
dec
mov
fstpt
lahf
pop
mov
lods
rol
lea
cmp
and
test
cmpsb
adc
push
lods
stos
mov
popa
pop
sbb
call
fistl
daa
push
push
pop
stos
xor
popf
imul
or
rcrb
in
mov
in
dec
decl
push
iret
ljmp
pusha
and
add
out
pop
mov
xchg
and
enter
cmp
add
inc
lret
push
add
enter
ret
jae
idivl
insb
pop
cmp
dec
pop
add
ret
mov
jae
ret
scas
jmp
fwait
mov
cmp
in
fists
dec
mov
rol
out
out
ljmp
scas
fcoml
fists
std
cmp
aas
push
imul
lret
push
cmp
dec
jo
scas
mov
hlt
shll
xchg
inc
dec
pushf
mov
lahf
jne
fldz
xlat
hlt
shll
out
out
inc
add
mov
jmp
cmp
mov
pop
sti
leave
or
mov
rol
inc
cmp
and
loope
mov
nop
push
fisubrs
flds
jg
pop
out
push
sub
mov
leave
or
cmpsb
ljmp
ljmp
leave
push
ret
and
add
push
hlt
mov
mov
xor
xor
mov
cmp
inc
xor
icebp
cmpsb
in
test
push
jecxz
jb
add
sub
gs
icebp
enter
pop
imul
cmp
das
dec
pop
lret
inc
daa
icebp
cmp
dec
and
push
shll
sbb
js
and
notb
mov
jmp
sub
ja
inc
push
jo
ja
mov
mov
test
push
jbe
xchg
inc
pop
rorl
jae
and
insl
incl
pop
inc
add
xchg
aas
imul
test
out
and
pop
or
cmp
pop
push
dec
testl
dec
cltd
out
popf
icebp
out
cs
rclb
cmpsl
out
psadbw
sub
mov
fld
roll
inc
mov
sub
and
sbbl
and
mov
pop
aad
push
lods
shl
add
pop
call
push
fsts
rorb
lods
ja
int
or
outsl
mov
add
sbb
bound
mov
pop
xor
int
das
mov
std
jl
es
lea
stc
xor
sbb
outsl
dec
into
mov
or
mov
sbb
sub
cs
in
adc
je
in
sub
out
push
shll
pop
dec
fdivrp
sub
push
sub
mov
xchg
pop
leave
ja
fisubrs
or
jge
ret
pop
pop
mov
cli
and
cmpsb
dec
aaa
xor
scas
leave
loop
fld
jae
ja
int
shl
scas
in
adc
dec
mov
loop
adc
idivb
addr16
subl
jp
add
fildll
sub
jnp
arpl
jbe
jbe
push
neg
out
cmp
pop
mov
cmp
leave
adc
cmpsl
mov
push
xchg
icebp
ret
lcall
ror
out
pop
add
pop
lahf
sbb
jmp
hlt
cs
loop
hlt
call
jl
dec
mov
xchg
ljmp
outsl
imul
mov
jbe
adc
or
mov
jl
fs
popa
sbb
push
sbb
mov
ficoms
mov
sbb
movsl
imul
sub
xor
sarb
xchg
popf
xchg
inc
sub
pop
mov
jmp
loopne
sahf
cs
inc
ljmp
fisubl
pop
mov
je
pop
mov
mov
shlb
dec
adc
pusha
mov
jl
fidivrl
iret
fldcw
pop
xor
repnz
xchg
or
movsl
es
jb
in
dec
jo
pop
es
sbb
pop
push
xchg
fsts
pop
ffreep
or
push
fstpl
xor
ficoms
cwtl
shr
cmp
sbbb
in
xchg
loop
push
hlt
inc
pushf
mov
jae
ret
enter
push
lods
xor
cmp
ret
or
mov
hlt
cld
std
mov
aaa
aam
pop
sarb
add
negl
mov
jmp
outsb
or
push
lds
loop
in
xor
xchg
cmpsb
adc
xsaveopt
scas
push
cmc
mov
pop
daa
addb
stc
das
push
in
push
ret
fistpl
adc
mov
dec
cmp
push
fstp
lcall
dec
sub
pop
movsb
imul
add
out
dec
lret
movsb
cmc
jno
and
xchg
or
fisttpl
jl
mov
mov
outsl
adc
xchg
and
adc
out
pop
pushf
and
fbld
jecxz
push
and
lds
into
jns
stc
fsubrl
mov
inc
out
imul
xlat
mov
icebp
ret
sbb
fldenv
movl
fcomip
mov
sahf
loopne
xlat
fisubrl
insb
sarl
shlb
xchg
sub
test
lods
sbb
sub
scas
mov
sub
jne
inc
divb
je
fidivrl
inc
scas
mov
adcl
sbb
fldl
ffreep
pusha
addl
sub
mov
xor
fdivrs
lods
scas
lret
fptan
mov
icebp
pop
movsb
push
pop
addb
mov
lret
cmpsl
outsb
push
mov
sub
cs
mul
lret
popf
jbe
add
sti
ficoms
mov
stos
pop
inc
fisubrs
jnp
lods
xor
sarb
cmp
mov
dec
mov
je
dec
mov
enter
sub
sbb
out
fimull
push
movaps
pop
lcall
fcmovbe
stos
aam
mov
into
mov
cltd
out
imulb
orb
cmpsl
jle
pop
push
fistpll
ljmp
not
pop
js
outsl
cmp
insl
mov
add
dec
sahf
sbb
out
pop
cli
lock
mov
stos
lds
xor
or
jnp
inc
push
jae
in
notb
out
push
pop
stos
pop
pop
cwtl
sbb
out
jbe
sub
push
out
cmp
cmpsb
cmp
push
lahf
shrl
push
adc
mov
adc
in
mov
sahf
jo
sbb
setns
fsts
aaa
repnz
xlat
cmpsb
not
test
pop
pop
ds
call
jnp
out
push
hlt
jmp
push
or
int3
pop
push
mov
jecxz
scas
mov
data16
enter
adc
sahf
dec
adc
fisubrl
dec
sarl
mov
ljmp
mov
loope
jae
scas
push
shlb
push
fdivp
or
out
mov
pop
jne
or
xchg
push
jnp
jp
push
push
lods
pop
push
fstps
xchg
mov
jg
nop
cmp
lahf
mov
push
cmp
pop
and
pop
out
rcll
imul
lahf
pop
adc
insl
leave
mov
leave
sbb
push
in
add
mov
sub
pop
xchg
dec
arpl
mov
ja
mov
test
aam
gs
int3
fcoms
jle
das
sub
fnstcw
cmc
data16
scas
es
idivl
mov
cmp
add
repz
jbe
pop
adc
aas
scas
fildll
mov
jg
dec
mov
pop
outsl
js
fs
and
out
xor
in
pop
shrl
pop
xor
stc
sub
cmp
lret
loop
cmp
xchg
cmpsl
ja
pop
and
and
jp
loopne
push
cs
jbe
pusha
adc
adc
iret
hlt
gs
mov
ss
sbb
call
cli
jno
cmpsb
popaw
mov
cmpsb
pop
or
rolb
rclb
mov
push
lret
lea
inc
shlb
in
imul
dec
popf
jl
sbb
mov
fucomi
mov
mov
mov
xchg
shlb
fnstcw
mov
fnclex
jne
push
xchg
cmp
outsl
repnz
repz
cmp
pop
push
scas
out
xor
pop
popa
stc
neg
xchg
fildl
dec
popf
adc
fldz
ja
cltd
jg
mov
mov
gs
mov
adcl
mov
push
mov
fs
sub
ret
sbb
test
vpmacsdd
pop
mov
arpl
inc
or
fdivs
push
lods
scas
dec
cmp
ret
jmp
js
adc
mov
bswap
cmp
movl
pop
scas
test
xchg
pop
sbb
lods
sbb
les
iret
hlt
cmp
jae
mov
ret
mov
pop
jmp
pop
pop
push
mov
movsl
mov
push
adc
adc
scas
stos
leave
sbb
je
es
or
xor
mov
scas
dec
fidivrs
stos
sbbl
fldcw
inc
mov
mov
push
es
fnstenv
or
mov
fbld
outsl
sub
mov
sahf
jmp
out
fidivs
push
imul
cmpb
cmp
imul
dec
inc
sti
outsb
sub
in
sbb
xchg
aad
jecxz,pn
test
stos
xor
inc
lods
loopne
call
fimuls
in
mov
mov
mov
cmp
pop
dec
fidivs
arpl
mov
mov
call
cmc
adc
loop
xor
sub
pop
jl
iret
mov
jae
sbb
enter
test
out
mov
into
arpl
pushf
pop
fs
mov
loopne
cs
and
adc
inc
push
xchg
frstor
mov
xchg
push
pop
push
mov
jne
inc
mov
cmc
movsl
insl
repz
in
lret
pop
adc
dec
adc
in
xchg
jne
xor
mul
cmpsl
push
xchg
dec
mov
imul
inc
xor
out
dec
test
xor
test
fisubrs
cmp
call
sub
cmp
pop
mov
movsb
jae
adc
and
es
mov
mov
dec
and
xorl
or
xor
imul
out
loop
repnz
stos
addr16
sub
mov
xchg
mov
pop
and
push
mov
xchg
mov
mov
add
mov
pop
jae
es
jae
scas
mov
cld
leave
pop
mov
roll
and
inc
outsb
stc
ja
iret
scas
mov
mov
push
adc
ret
ja
jbe
pop
addr16
jne
xchg
sti
sti
pop
push
outsb
out
cmp
xchg
div
adcb
adc
ljmp
push
cs
aaa
sbb
aad
mov
push
jg
fisttpl
orb
mov
mov
mov
xor
mov
and
pop
adc
cli
xor
das
push
cmp
sbb
mov
mov
inc
cld
or
pop
mov
pop
cli
cmp
js
mov
push
push
test
out
sub
icebp
push
mov
shrb
sbb
mov
out
pop
lods
xor
ljmp
mov
notb
xchg
adcb
mov
sub
dec
mov
and
shlb
mov
addr16
pusha
aas
push
stos
ret
aas
mov
dec
xor
jl
int
dec
dec
mov
fcmovb
inc
adc
sub
test
imul
test
jns
xchg
push
inc
ss
mov
fldt
clc
jmp
cli
fldt
xor
jmp
mov
push
fsubp
jb
out
repz
xchg
mov
push
and
ja
shl
or
cld
and
sbb
iret
int3
pop
bswap
inc
scas
mov
aaa
push
mov
or
shlb
sub
or
lret
mov
mov
and
jmp
repz
push
and
cmp
sbb
outsb
mov
dec
mov
adc
icebp
pop
fptan
movsb
pop
insb
mov
pop
stos
inc
jbe
stos
cmpsb
notb
push
enter
out
faddp
mov
leave
push
jle
into
xlat
ror
mov
inc
inc
lret
mov
mov
jg
divl
dec
fbld
dec
mov
push
adc
cmpsb
push
mov
iret
xchg
pushl
cld
pop
or
rolb
loopne
into
not
dec
mov
pop
cmp
scas
and
mov
mul
push
add
outsb
mov
xor
stos
inc
std
fnstenv
mov
std
jns
out
leave
outsb
add
fistpl
inc
ja
jle
in
or
adc
mov
stos
pop
pop
sub
mov
adc
pop
inc
outsl
fcoml
cmp
rcr
movsb
xchg
fbstp
ret
xor
sar
sbb
ss
inc
test
jo
pop
pop
jmp
adc
decb
cmc
and
pop
sub
ret
stos
pop
push
icebp
add
fbld
in
mov
inc
out
scas
mov
icebp
loopne
ja
pop
sub
add
mov
rol
mov
loope
jnp
adc
aad
jge
mov
mov
xchg
dec
andb
mov
sub
aas
lret
pop
xchg
std
insb
arpl
in
sar
cmp
lods
stos
loope
mov
pop
mov
mull
in
pop
xor
mov
incb
movsl
mov
lods
lret
fwait
mov
sbb
pop
iret
jmp
push
xor
xchg
add
addr16
mov
sbb
mov
cmpsb
fwait
jo
repz
scas
shlb
lods
mov
jnp
ljmp
cmp
push
jl
or
push
dec
cld
mov
inc
or
jmp
mov
enter
pop
bound
sbb
mov
mov
jns
popf
arpl
pushf
ds
push
xor
dec
mov
inc
das
push
push
shrl
mov
xchg
fistps
in
testb
xchg
psubsw
xlat
pop
mov
aaa
fidivrl
es
into
mov
push
inc
sahf
fcmovnb
mov
loopne
or
popa
mov
out
push
mov
cmp
sbb
call
test
mov
push
repz
dec
xchg
xor
xlat
pop
into
aas
add
lahf
leave
repnz
neg
mov
cmpb
mov
fcoml
fcompl
movsl
rol
add
into
or
out
pop
movsl
xor
mov
or
imul
sub
mov
ja
imul
mov
mov
add
adc
lahf
pop
fwait
inc
stc
add
push
insb
cli
sahf
mov
pop
push
iret
iret
rclb
pusha
xor
xorb
fldt
jne
lahf
push
mov
outsl
jae
cmp
lret
mov
pop
sti
or
jp
mov
pop
mov
shrb
jns
adc
mov
ds
adc
pusha
and
pop
out
mov
aas
adc
nop
add
xchg
ret
cs
mov
in
mov
push
insb
mov
aad
xchg
mov
xchg
add
in
inc
adc
xchg
mov
imul
mov
imul
out
shr
and
popa
out
adc
dec
dec
in
push
jp
rep
icebp
pop
jecxz
imul
add
out
cmp
daa
fidivrl
scas
rclb
cmp
out
mov
outsb
lock
mov
jecxz
pop
adc
loope
mov
shrb
push
imul
pop
add
xlat
inc
push
std
leave
iret
xchg
adc
adc
xchg
xchg
cmpsl
stos
mov
xchg
xor
dec
fwait
sub
test
andb
mov
add
sub
clc
lods
sub
inc
fdivrs
neg
movsb
mov
insb
stc
in
sub
cmpl
outsb
dec
movsb
insl
mov
mov
pop
in
push
test
mov
adc
push
mov
mov
mov
scas
lock
jmp
out
dec
fistpll
in
roll
negl
mov
push
aas
rolb
outsb
testl
xchg
fwait
sahf
cs
arpl
sbb
ret
push
out
xor
fdivrl
mov
mov
cmpsl
std
fsts
out
push
in
and
cmpsl
outsb
test
add
imul
xor
jge
repnz
icebp
sub
xor
jge
inc
and
fldenv
fildll
testl
fs
andb
cmp
pop
lds
fpatan
mov
xchg
out
scas
add
stc
les
shl
mov
outsb
pop
flds
mov
jmp
call
sub
and
add
adc
xlat
clc
push
pushf
dec
repnz
and
je
jmp
pop
and
push
cmp
fmull
mov
insl
flds
inc
fucomp
mov
xor
sub
outsl
stos
int3
aam
xchg
bound
pop
push
add
jmp
clc
aas
mov
sub
xor
cmpsb
cmpsl
ret
fnstcw
or
pop
sbb
in
lock
mov
xlat
mov
stos
lahf
pop
jae
clc
scas
pop
cmp
out
in
scas
inc
push
sti
int3
xchg
lret
push
lahf
cmp
scas
fwait
rcrl
pop
cs
mov
sub
and
popf
or
mov
and
cltd
adc
pop
mov
mov
cltd
cld
push
add
inc
jmp
mov
ja
lcall
inc
aam
fisubrs
push
jnp
pop
jne
jmp
dec
mov
outsb
pop
lods
into
out
mov
xchg
xor
pop
sbb
addr16
pop
ljmp
mov
ret
xchg
jecxz
fwait
lea
cwtl
jle
dec
push
add
mov
xchg
cmp
das
loope
mov
mov
aaa
jge
inc
sbb
cltd
icebp
fsts
je
outsb
iret
sbb
cmp
in
imul
and
int3
jg
sarl
dec
mov
pop
mov
push
sbb
dec
push
decl
jmp
mov
push
pop
std
incb
mov
in
imul
adc
pop
lahf
fisttpl
in
inc
mov
and
testl
cmp
cwtl
ja
ffree
mov
xlat
loope
test
jge
loopne
fidivrs
jns
sahf
mov
push
mov
stc
int
iret
repnz
jnp
mov
pop
aaa
cmp
mov
ret
test
xchg
ljmp
mov
in
fdivl
fcomi
sbb
mov
es
imull
cmpsb
aam
faddp
outsb
jb
sti
in
adc
sti
jge
enter
mov
mov
push
pop
sbb
shrb
dec
cmp
jg
lahf
into
inc
ficomps
push
adc
pushf
xchg
icebp
sbb
aaa
xchg
mov
cwtl
cltd
das
out
stos
adc
movsl
mov
fldcw
mov
adc
sub
into
add
out
jae
and
popl
out
mov
negb
push
pop
jecxz
lahf
add
outsb
ret
mov
call
aas
pushf
cmp
lret
mov
mov
push
jo
subl
sti
ss
das
fincstp
nop
in
mov
in
adcl
cltd
pop
push
idiv
andl
adc
aas
repz
jns
sbb
lods
and
add
andb
xchg
jno
jmp
jbe
cmpsl
pushf
ljmp
fwait
outsb
xchg
out
cmpsl
movsl
lods
cltd
xlat
inc
mov
fistps
ja
stos
push
mov
ljmp
adc
dec
stc
lea
or
sbb
popa
lds
cmp
pop
push
neg
imul
sbbb
sbb
jg
fmull
sbb
enter
cmc
jne
cmc
sbbb
fs
cmpsb
ficomps
jp
pop
jne
cmpsb
lods
lds
pop
dec
sub
ds
mov
xchg
test
daa
or
cmc
sub
jne
imul
out
pop
push
iret
sub
push
xlat
xlat
xlat
sub
jg
int
aam
into
sbb
or
push
fstpl
scas
mov
divl
pop
pop
jae
pop
push
or
xor
es
mov
pop
and
adc
and
fisttpll
push
cmp
sbb
pushf
mov
arpl
lahf
add
pop
xorb
aas
fldt
rcll
aaa
outsb
dec
stos
fsubs
mov
cmpsb
scas
pop
das
pop
pop
stc
mov
cmp
mov
loopne
imul
adc
mov
cli
sti
cmpsb
adc
stc
jle
ljmp
sbb
xor
cs
stos
stc
sub
push
fnstcw
push
sub
pop
fidivrs
test
cs
inc
sbb
xorb
loopne
sarl
pop
mov
int
jno
xchg
push
add
shl
ja
cmp
icebp
dec
out
or
sbb
outsl
sbb
xchg
leave
push
outsl
int
fisttpll
pushf
xor
mov
fisubrl
dec
dec
scas
xor
xlat
lcall
mov
mov
pop
into
lods
movsb
cmp
mov
sub
daa
stos
mov
push
mov
dec
repnz
adc
fsubs
cwtl
mov
and
mov
imul
stos
xor
push
lcall
cmp
outsl
sub
fadds
mov
lds
outsb
fwait
mov
xchg
test
test
push
out
fmuls
lods
out
pushf
test
movsl
jl
pusha
cli
repz
and
lret
aad
mov
in
push
lret
pop
mov
xor
push
mov
sbb
sbb
outsl
ret
cmpsl
sahf
fdivrs
and
pop
push
outsb
and
cmp
orb
and
mov
pop
pop
mov
leave
sub
notl
scas
lds
sbb
push
ffreep
outsb
sahf
je
lds
adc
jle
cltd
xchg
scas
jno
mov
out
jge
icebp
lods
mov
jne
aaa
addr16
div
in
sbbb
pop
aaa
imul
cwtl
sti
stos
cmp
jge
jmp
imul
and
es
push
lods
call
stos
insl
cmpl
int
mov
jb
stos
pop
out
mov
jmp
mov
mov
call
sub
sbb
sub
pop
stos
imul
sub
ja
jns
xchg
xchg
sbb
in
inc
inc
rcll
popf
sub
sarb
adc
in
pop
mov
fidivs
lods
mov
mov
pop
push
imul
fs
out
pop
dec
cmpl
xlat
mov
push
adc
cmpsb
dec
in
mov
and
and
fistpll
outsl
insb
das
popa
ss
sti
adc
rolb
leave
out
pop
jo
pop
gs
or
mov
scas
das
inc
cltd
cmpsb
mov
scas
or
imul
js
shrb
notl
lea
lea
imul
cltd
dec
fisubrl
imul
jl
stos
int3
lods
dec
addr16
sub
pop
or
mov
lahf
jo
mov
mov
mov
xchg
fbstp
cltd
out
adc
jg
pop
aad
mov
mov
adc
icebp
sbb
xchg
out
mov
cmp
push
jne
cmp
mov
add
jge
icebp
add
lret
mov
lcall
adc
ret
lds
aas
lahf
scas
std
or
movsb
cmpl
imull
ror
repz
pop
stc
fst
ljmp
sbb
sub
push
jmp
pushf
ds
cld
add
push
out
mov
fdivp
dec
popf
lahf
lret
mov
shrl
dec
or
and
clc
std
cs
js
sarb
mov
mov
sahf
fistpl
repnz
sbb
inc
jns
fcmove
mov
add
fwait
or
mov
popa
xor
mov
sub
sbb
aad
jle
cli
lret
push
repz
icebp
call
scas
push
xor
out
mov
pop
xlat
and
rclb
mov
pop
add
mov
inc
fnstenv
lea
pop
mov
ss
pop
pop
adc
adc
repnz
mov
dec
fdivrs
sub
jecxz
ret
mov
pop
adc
iret
mov
cltd
sbb
shll
aam
imul
cmp
scas
cmpsl
pop
jmp
ss
mov
into
nop
lcall
pushf
jne
dec
pop
xchg
cs
shl
or
sti
push
sbb
cmp
aad
pop
rcll
mov
sti
stc
ret
loope
sti
decb
std
inc
out
test
dec
popf
cmpsb
inc
insl
dec
push
add
in
aas
fsubrl
in
jle
ja
mov
or
mov
inc
cmp
ficompl
scas
xor
mov
jbe
aaa
scas
inc
leave
in
jmp
mov
jl
sbb
pop
xlat
enter
pop
lock
xchg
pop
pop
outsl
sbb
ror
scas
mov
pop
cmp
fwait
in
mov
add
jge
mov
mov
sub
stos
sbb
pop
pop
ss
outsb
out
pop
and
fwait
push
mov
jne,pn
orl
call
mov
cmp
cmpsl
mov
das
push
mov
iret
fstps
cltd
xlat
outsl
jecxz
sbb
or
std
lcall
out
mov
stc
les
std
pop
inc
fwait
xlat
repz
and
add
daa
jl
int3
mov
scas
add
add
call
je
ja
cmp
rolb
xor
inc
fsubrp
mov
fildl
jle
in
adc
mov
cmpsb
mov
inc
fwait
andb
out
aam
rep
into
jnp
dec
sti
xchg
int
dec
mov
outsb
lods
push
fstpt
imul
outsb
xor
pop
cmp
lods
sub
lret
mov
popa
jae
loop
xchg
fucom
sbb
cmp
aam
push
jbe
mov
mov
data16
ja
sub
mov
mov
push
push
or
shr
xchg
sbb
and
jl
inc
loopne
jo
or
jo
cmpb
int3
mov
aad
or
ljmp
add
pusha
sbb
fcmovnb
int
dec
shrb
ja
aad
notl
movsb
fcmovne
sti
cmpb
outsl
lods
iret
add
repz
lret
ret
in
adc
aad
fstp
mov
into
negb
aad
fnstsw
push
cli
aaa
aad
into
or
fucomp
shr
in
sbb
std
pop
sub
fisttpll
xchg
dec
inc
aaa
jae
int
mov
repz
xchg
movsl
aad
jae
adc
loop
stos
neg
mov
or
iret
sahf
lods
mov
outsl
in
loop
add
xor
dec
jecxz
jle
jnp
aad
ja
mov
xor
jp
dec
push
or
out
mov
fsubp
sbb
mov
into
addr16
push
cmp
rcrl
mov
fdivrp
push
je
xor
push
outsb
mov
inc
mov
ss
aad
rdtsc
sti
mov
jnp
push
jo
mov
rclb
cwtl
aad
mov
push
rcrb
or
clc
fnsaves
push
mov
adc
and
ss
pop
mov
ja
lods
jne
mov
mov
sti
xchg
ret
repz
cwtl
pop
jae
sar
adc
cs
mov
rcr
std
aam
mov
rcrl
sub
jmp
mov
xchg
jno
cli
pusha
fdivrs
dec
and
aam
push
push
ja
fstl
xlat
and
sub
fadd
scas
push
shlb
mov
shll
cwtl
icebp
rcr
mov
aad
sbb
notl
push
hlt
pop
fistps
mov
lret
das
pop
fiadds
lds
dec
xlat
xchg
fisubrs
fs
mov
jo
add
pop
and
insb
fstpt
out
fcmovbe
jmp
stos
ret
sub
es
mov
out
mov
push
aam
push
push
aaa
jnp
mov
test
push
mov
cmp
test
js
fsubl
jecxz
fidivs
jge
xchg
fnstcw
mov
xchg
pop
fwait
adc
stc
pusha
das
inc
ss
andb
popa
pop
pop
sti
in
into
mov
adc
add
add
scas
insb
imul
jg
mov
mov
jg,pt
fadds
xchg
fcmovb
daa
outsl
arpl
mov
pushf
or
aas
stos
aad
aaa
fidivl
mov
xlat
fistpll
aam
fbstp
xor
hlt
je
mov
xchg
ficompl
out
rcl
test
mov
shlb
int3
les
mov
sahf
rcr
lods
mov
sti
mov
repz
fidivs
fsubrl
mov
scas
or
jg
pop
repz
jle
mov
push
push
jmp
icebp
loopne
inc
flds
pop
adc
mov
test
out
fimuls
imul
ljmp
loopne
xchg
and
pop
out
add
pop
fbstp
or
or
lods
and
mov
jecxz
sti
adc
in
pop
hlt
xor
ret
inc
inc
mov
loopne
lahf
fisttpll
dec
outsl
inc
pop
in
pushf
mov
pop
lret
jmp
sub
dec
repz
push
mov
dec
or
pop
inc
mov
adc
imull
jecxz
in
ret
testb
aaa
pop
shlb
es
leave
scas
fisubl
stos
out
adc
lock
jle
adc
aaa
jae
cmp
les
fists
cmpsb
jb
sub
imul
mov
pop
fs
fsts
jg
mov
sbb
xchg
out
push
cmpb
jg
adc
mulb
jg
scas
pop
ljmp
aaa
dec
ss
aam
pop
scas
mov
addr16
shlb
cmp
imul
out
jle
scas
ljmp
mov
cmpsb
in
aas
xchg
sahf
mov
sbb
out
popf
push
mov
std
mov
cs
aad
mov
or
in
sub
jmp
loop
arpl
das
pop
inc
xor
sub
sub
or
enter
xchg
fisubrs
xor
fidivrs
xchg
adc
mov
repz
pop
test
mov
scas
outsb
jecxz
cwtl
mov
outsl
mov
insl
into
dec
insb
call
nop
mov
push
jne
icebp
cmp
lods
fwait
shll
jb
filds
push
pop
add
dec
adc
mov
mov
push
scas
ss
mov
xchg
lods
adc
fiadds
fcomps
scas
aam
loope
adcb
int3
sub
xchg
int
cmp
in
xchg
adc
push
scas
rol
xor
mov
test
mov
mov
dec
ja
scas
pop
popa
scas
outsl
outsb
or
scas
jmp
mov
test
cs
adc
in
into
or
mov
mov
cmp
andb
push
add
arpl
testl
inc
mov
pop
add
push
xchg
arpl
in
sbb
xor
push
int3
loope
push
loopne
movsl
sub
aaa
sar
insl
scas
sbb
cs
mov
xchg
pusha
mov
ljmp
mov
cli
or
das
jg
sbb
adc
jge
mov
sub
xchg
shl
jl
int3
mov
jo
mov
sbb
add
cmp
sbb
insb
mov
push
leave
sarb
xchg
mov
or
xor
aad
mov
fs
mov
add
xchg
mov
push
enter
lcall
popa
xchg
into
cmp
test
dec
iret
sbbb
popa
fistl
imul
fbstp
push
lock
divl
mov
push
and
imul
xor
sub
repz
push
fcoml
mov
pop
mov
push
xor
xchg
or
push
mov
popa
cmc
mov
mov
pop
cmpsb
loopne
shl
loopne
jno
mov
div
sbb
adc
mov
lret
test
int
iret
dec
add
xrelease
cmpsb
shll
mov
or
rol
xchg
dec
cmp
addr16
es
jno
ret
test
imul
into
push
mov
and
decl
imul
nop
or
inc
and
mov
imul
leave
out
add
and
mov
inc
out
push
insl
ret
scas
cs
sarb
js
and
fcmovnu
and
sti
mov
icebp
sbb
ret
xor
cmp
mov
adcb
dec
outsl
aas
stos
in
push
je
xchg
sbb
nop
fstps
sarb
mov
dec
push
int3
shrl
add
lcall
pop
inc
or
jne
mov
std
sub
lock
or
mov
mov
xchg
fisttpll
stos
dec
pop
fldt
pop
aaa
cli
lret
adcb
fsubrs
and
dec
aad
mov
ror
outsl
mov
mov
sbb
add
sahf
xor
scas
cmp
jg
mov
movsb
cmp
stos
out
repnz
push
pop
ret
rorl
dec
lock
imul
imulb
inc
or
out
ja
cmc
adc
mulb
popl
mov
mov
aam
or
jne
leave
cmp
in
ljmp
inc
or
cli
testb
jle
test
or
stos
in
and
add
hlt
loope
outsb
out
dec
xchg
std
scas
cmpsb
pop
mov
xorl
add
pop
cmp
sahf
aaa
dec
testb
pop
test
leave
xchg
sbb
cmpsl
shll
mov
cs
or
pop
sub
jecxz
leave
sbb
sbb
mov
jle
mov
sbb
leave
and
fists
nop
inc
inc
or
mov
mov
and
fdivl
imul
mov
std
dec
and
into
pop
test
jo
pop
ss
push
or
sub
in
mov
outsl
pop
out
jg
pop
sahf
fs
mov
outsb
mov
xor
shll
nop
sub
loopne
stos
sbb
mov
jb
aas
sti
cli
iret
mov
mov
jmp
mov
jge
cli
into
lods
out
pop
add
loope
pop
mov
scas
clc
aas
jge
std
jno
shll
pop
mov
or
xchg
mov
es
leave
mov
pop
movsl
stos
test
cmc
repnz
mov
cli
xchg
adc
mov
ja
push
mov
div
xor
ret
insl
xor
jb
loopne,pn
fsubr
shrb
mov
iret
imul
jae
mov
repz
sbb
repz
testb
insl
add
rorl
out
cltd
cmc
out
pusha
add
mov
mov
sbb
dec
jmp
or
rcrl
jle
jne
outsb
and
in
and
into
jo
insl
cmp
push
pop
adcb
fistps
loopne
scas
inc
stos
jg
fldenv
pop
stc
lret
jmp
ja
pop
mov
xchg
stos
les
leave
cmpsb
out
pop
xor
jmp
aas
movsl
mov
cmp
push
sub
mov
sbb
hlt
rcr
repz
dec
sub
push
or
xor
dec
push
adc
ret
inc
mov
sahf
leave
mov
repz
lret
shlb
mov
les
mov
clc
mov
hlt
fldt
mov
mov
cs
sbb
ret
pop
testl
ret
in
pop
push
dec
dec
shll
ror
or
mov
popf
inc
mov
movb
rorl
clc
jo
repz
cwtl
inc
repnz
ljmp
fsubp
gs
fists
or
pop
push
pop
jecxz
jecxz
push
pop
aas
fistpl
or
nop
cvtps2pi
xchg
fptan
out
insl
sbb
enter
out
test
mov
push
aas
cmpsb
mov
ret
out
outsb
scas
sbb
jnp
cltd
and
or
sbb
add
loopne
lret
mov
push
ljmp
leave
jge
rcl
loopne
aas
xchg
xlat
cmpsb
mov
aad
scas
cli
pop
mov
in
stos
out
mov
in
fst
ljmp
sbb
lock
aad
add
stos
out
mov
xor
in
iret
push
cwtl
push
jae
iret
fcomi
in
fwait
xchg
mov
imul
in
lret
out
adc
loope
in
movsb
in
jp
mov
das
sbb
cs
push
sbbb
jnp
insl
imul
loopne
add
das
out
mov
or
in
jno
xor
stos
pop
sbb
pop
lret
mov
stos
iret
cmc
loop
mov
jg
imul
lret
stos
dec
cli
mov
arpl
pop
sub
add
rcrl
loopne
imul
cmpsl
cmpsb
or
scas
shrb
leave
push
rorb
cmpsb
add
es
cmpb
sbb
mov
jbe
xchg
pop
in
out
adc
mov
filds
pop
dec
mov
aas
cs
imul
aaa
loop
inc
mov
fnsave
sbb
dec
mov
mov
pop
add
cmc
jbe
xor
daa
ja
daa
test
lods
xchg
adc
inc
cmc
imul
sub
dec
rol
es
int
mov
roll
push
in
or
shr
add
testl
icebp
scas
adc
xchg
shl
test
jl
repz
xlat
hlt
mov
mov
or
pop
cmpb
jmp
pop
dec
mov
add
leave
iret
cmc
fld
sub
idiv
sub
push
call
test
lahf
cmp
subb
mov
stc
enter
and
lods
mov
lods
les
imul
adc
flds
in
xchg
je
mov
push
mov
mov
inc
sbb
negb
dec
hlt
adc
cwtl
popf
sub
stos
mull
scas
clc
push
push
push
enter
and
flds
fcmovbe
push
call
sarl
or
or
pop
std
hlt
fldcw
push
push
jb
ret
ret
hlt
aaa
fnstcw
xchg
bound
mov
clc
mov
cmpsb
inc
xchg
cmp
pop
inc
aam
mov
and
push
scas
sub
mov
fsubrl
outsb
pop
fidivrl
adc
mov
push
cmpsl
mov
mov
xchg
dec
dec
sti
iret
and
lret
add
mov
fcomi
lahf
cld
test
shr
mov
lret
pop
lods
fwait
nop
pusha
or
fnstenv
lcall
jne
jbe
subl
sub
arpl
xchg
imul
jmp
pop
movsb
fmuls
arpl
xchg
scas
add
mov
or
xor
pushf
je
jecxz
loop
push
scas
ficoml
test
inc
pop
and
imul
repz
pusha
pop
xchg
xlat
in
pop
fucom
push
repz
jno
jle
xchg
jnp
mov
testb
push
cmp
add
mov
repnz
cld
idivl
xchg
ret
pop
pop
xchg
fiadds
scas
div
dec
jae
or
in
insb
aad
movsb
jp
jl
stos
cwtl
jg
sti
test
jmp
pop
jns
aaa
repz
pop
mov
mov
lods
sub
fs
or
inc
adc
rorl
pop
mov
sub
in
ja
jnp
loopne
inc
push
ja
mov
sub
lock
stc
clc
mov
jae
inc
nop
push
ja
jl
lds
sarl
pop
out
int
outsl
sbb
pop
mov
ficomps
dec
push
fwait
mov
adc
rorb
fdivl
mov
test
push
cmp
mov
dec
and
lret
pop
jns
out
cmp
enter
sbb
pop
outsl
aas
jb
inc
and
scas
mov
cmp
pushf
and
pop
stos
dec
add
ljmp
enter
jns
jae
pop
int
mov
ja
jnp
or
ret
in
idiv
leave
lret
push
xchg
rcll
ljmp
push
push
push
sbb
gs
testl
pop
rcll
jns
femms
add
mov
mov
sahf
mov
cltd
fstpt
xchg
stos
mov
push
adc
sarl
out
pop
mov
std
or
scas
shl
repnz
jno
push
insb
push
mov
xchg
mov
jg
sub
pop
repz
out
in
arpl
out
fnstsw
cmp
pop
insb
shll
adc
lahf
pop
mov
push
cmc
sub
xchg
inc
mov
sub
pop
arpl
ds
mov
or
outsb
cmp
fs
leave
cs
test
or
popa
insl
stos
jl
cmpsb
push
jp
into
inc
xlat
lcall
pop
mov
cmp
fucomp
mov
fwait
das
lods
iret
aas
cli
iret
sub
mov
rcr
aad
stos
mov
mov
adc
pop
xchg
repnz
jmp
lahf
nop
ret
pop
jmp
fmulp
popa
addr16
pop
mov
aam
clc
mov
bound
scas
push
clc
popa
pop
sub
or
cmpsl
jge
arpl
fstl
jns
pop
gs
sbb
or
sbb
enter
cmp
out
push
cwtl
jecxz
fbld
outsl
sub
in
mov
sub
inc
xlat
cmc
icebp
dec
mov
add
flds
ds
leave
dec
mov
inc
scas
ja
pop
arpl
in
xor
out
rcr
arpl
sub
inc
inc
or
adc
dec
jge
out
fildll
divl
xchg
inc
sarb
iret
test
add
xor
sbb
fs
test
adcb
lret
cmc
fld
or
outsb
jecxz
imul
scas
xchg
imul
push
jo
mov
outsb
into
mov
pop
and
test
outsb
sahf
adc
pop
inc
dec
push
stc
pop
pop
push
add
shlb
shlb
lods
cld
cmp
clc
call
out
sti
int
push
insl
push
mov
fwait
cmp
daa
repz
mov
mov
faddl
dec
add
lods
xlat
cmpsb
and
cli
pusha
aam
arpl
jne
pop
add
jae
mov
test
rcrb
iret
pop
repz
lea
sub
jo
sarl
loopne
xchg
jae
and
rcrl
out
inc
xor
or
cltd
pusha
cmpsl
pushf
push
xlat
push
shrl
int
fistl
pop
fwait
aas
cmp
js
mov
pop
inc
ret
push
sub
test
repz
fdivs
sar
fdivrs
call
hlt
sti
clc
push
in
loop
scas
stc
iret
fwait
adc
repnz
jg
mov
out
pop
ja
out
mov
lock
clc
sti
test
xchg
test
imul
aaa
test
imul
std
pop
scas
mov
icebp
lock
data16
in
fcomps
fldz
out
loopne
clc
and
fsubr
scas
mov
lock
outsb
ficoms
xchg
add
mov
in
aam
into
test
fptan
in
repnz
es
jno
aaa
mov
cltd
test
mov
mov
mul
outsl
enter
mov
jne
jg
mov
popf
or
scas
iret
aad
xor
pop
aaa
adc
push
testb
mov
ret
mov
push
insl
push
outsb
loope
imul
fmuls
leave
repz
pop
jnp
sub
notl
iret
inc
push
jne
fcmovne
xchg
jmp
mov
imul
xchg
add
jnp
mov
fldcw
pushf
jae
xor
ljmp
jnp
mov
mov
dec
sbb
mov
cs
mov
mov
cli
sbb
clc
and
adc
push
or
mov
cltd
add
push
loopne
cmp
fs
pop
jo
xchg
clc
outsl
repnz
outsl
ljmp
inc
movsb
jge
stc
mov
jecxz
cmp
xchg
mov
fcomip
mov
xchg
loopne
orb
data16
and
mov
out
idivl
test
lock
pop
movsl
es
stc
fs
enter
inc
push
into
test
rclb
adc
mov
push
pushf
fdivrs
xlat
lock
mov
adc
sub
pop
sub
js
imul
daa
gs
sahf
cwtl
cli
mov
sahf
push
inc
adc
fidivrs
and
fbld
enter
jne
movb
dec
fwait
gs
mov
sub
divb
in
fmul
cltd
xor
dec
subl
pop
js
cli
push
jo
hlt
aas
fsub
lahf
into
cwtl
mov
jmp
inc
jo
gs
push
pushf
cmp
jno
mov
mov
loopne
sbb
inc
or
popf
mov
aaa
loopne
inc
in
cli
jnp
testl
jg
lret
in
jae
int3
adc
into
es
pop
call
das
add
cmc
and
mov
jbe
aas
insl
shl
cmpsl
sbb
ljmp
outsl
lret
xor
into
dec
out
stc
and
loope
sbb
jns
cli
mov
imul
mov
xor
sahf
pop
mov
dec
fisttps
mov
cmc
sti
mov
xor
jae
sti
pop
mov
and
pop
cmc
sbbb
jo
xor
jae
outsl
aas
inc
cmc
out
push
add
out
cltd
add
hlt
xor
mov
xor
test
cmp
jo
push
cmp
enter
decl
jle
adc
sbb
push
pop
xor
insl
nop
popf
out
fimuls
ds
mov
ficomps
jle
daa
pop
in
xchg
xchg
jl
hlt
push
cli
je
inc
adc
out
xchg
cld
and
jns
xchg
fwait
test
push
cli
aaa
mov
push
mov
aas
inc
lods
out
mov
sub
outsl
or
push
subps
jmp
fnstsw
dec
ret
mov
ret
out
mov
cwtl
aaa
push
cmp
ret
test
and
sbb
mov
pop
jecxz
cltd
nop
fs
jg
out
testb
jne
in
out
fistpl
jl
out
pop
outsl
pop
cmp
lock
sbb
jbe
ficoms
insl
ljmp
out
in
jl
icebp
pop
jbe
test
lods
mov
in
ja
sub
pop
xchg
fneni(8087
out
jg
fsubr
js
sbb
das
shll
cmpsl
mov
jne
aad
jl
dec
xor
jae
push
inc
out
mov
pop
fidivs
imul
mov
int
mov
lahf
pop
lock
and
push
mov
pop
inc
push
int3
jno
sti
pop
mov
iret
rcll
and
cs
mov
xor
outsb
ret
aas
ret
leave
cld
pop
or
add
ret
xor
leave
push
pushf
sub
pusha
mov
pop
mov
ja
sub
pop
fcoml
in
incb
or
pop
inc
jne
out
sub
push
outsb
mov
mov
scas
pop
jl
dec
mov
jns
call
fstps
and
jo
lea
mov
xchg
ret
sub
out
jns
ffreep
cmpsl
or
fdivrs
movb
out
pop
cmc
scas
push
mov
sub
inc
iret
and
add
nop
ret
sti
pop
sub
or
fildll
outsb
aas
xor
xor
mov
data16
pop
sbb
mov
jecxz
pushf
outsb
pop
aaa
divb
scas
out
into
dec
in
mov
xchg
jmp
push
push
ja
repnz
sahf
pop
jg
mov
andl
push
mov
std
xchg
mov
mov
sbb
xlat
jo
jmp
push
pushf
push
shlb
jl
testl
sarl
jmp
out
loopne
sub
fdecstp
fsubp
out
or
mov
inc
scas
filds
adc
dec
aaa
or
lods
mov
push
out
es
pop
xchg
fildll
add
mov
xor
mov
mov
icebp
mov
sti
iret
lahf
mov
mov
lods
xchg
sar
movsb
sti
dec
cmp
mov
cld
mov
xchg
dec
xor
sti
or
icebp
jl
enter
jmp
sbb
jnp
fdivrl
and
dec
mov
mov
sbb
jg
dec
inc
sub
mulb
stos
inc
jnp
aad
iret
and
xor
add
sti
xchg
push
push
movnti
lret
pop
frstor
pop
pop
in
mov
cld
andl
insl
lahf
adc
xchg
push
sbb
and
cwtl
pusha
rcl
ret
sub
or
dec
cmp
divl
insl
push
mov
out
push
inc
jnp
iret
stos
adc
std
xor
leave
das
enter
negb
movsb
mov
call
adc
out
or
xchg
push
mov
iret
adc
enter
xorb
arpl
leave
shrb
push
sub
or
add
stc
lahf
adc
xor
in
aaa
clc
jg
sub
icebp
in
xchg
loopne
das
ss
incl
mov
mov
mov
rcrb
dec
iret
mov
fbld
sahf
aaa
cmp
popa
cli
cmp
pop
outsb
test
leave
test
push
aaa
push
mov
fs
lahf
pop
out
xlat
fldl2t
cmpb
pop
leave
enter
ret
loopnew
pop
or
inc
cmp
popf
push
cs
lahf
leave
mov
imul
repnz
mov
call
mov
lcallw
inc
mov
ss
out
sbb
push
inc
add
sub
fwait
ret
inc
sub
stc
iret
aas
pop
stos
scas
mov
outsl
imull
lahf
mov
ja
xor
ss
xor
leave
loop
mov
mov
mov
mov
clc
ja
das
mov
pop
inc
das
add
or
ja
adc
pop
cmpsb
leave
jnp
xchg
xor
pop
cmpsl
aad
test
notb
fwait
sub
push
leave
xchg
mov
outsb
sub
mov
jns
cld
xlat
icebp
xchg
sub
pusha
sahf
jne
fcmovnb
cs
imul
aam
sub
xchg
stc
clc
in
jns
pop
jg
sub
or
sub
sbb
jl
lock
and
dec
push
aaa
mov
rcr
mov
xchg
in
aad
dec
jns
fnsave
mov
rol
ljmp
test
lock
mov
out
imul
sbbb
xchg
filds
inc
faddp
adc
rcrl
push
jnp
and
and
shlb
shrl
or
push
arpl
hlt
mov
mov
add
or
cmpsb
test
add
rcr
lock
inc
rcrl
cmp
lea
jnp
arpl
sub
xor
mov
lods
and
pop
or
sti
call
pop
sbb
push
enter
cwtl
dec
jae
inc
dec
popf
ret
pop
iret
lret
sub
jmp
std
or
imulb
lret
mov
fxch
mov
lds
in
cmp
adc
push
pop
popf
push
les
sbb
cmp
push
xor
movsb
insb
push
lods
jmp
or
mov
jl
sub
pop
out
leave
jle
inc
sbb
ret
loope
cmp
cmp
add
ret
lods
insb
sbb
out
cmpsl
lcall
mov
mov
sahf
push
xchg
mov
fistpl
pop
adc
xor
push
adc
testl
mov
xor
into
insb
test
lods
or
dec
cwtl
pop
mov
push
fwait
pop
sub
lds
sub
shl
dec
mov
or
fcomi
or
sbb
pop
mov
test
push
clc
imul
dec
lret
repnz
mov
and
loopne
jnp
fmull
idivb
das
out
lods
aas
push
mov
pushf
enter
mov
sub
cmpsl
into
cmp
cltd
xor
or
sti
inc
stos
pushf
push
push
xor
addr16
adc
mov
mov
mov
lock
ja
imul
cs
sti
je
add
jmp
push
push
mov
out
movsb
outsb
inc
mov
inc
lcall
lods
out
xchg
pop
fs
push
lea
rcl
int
jmp
cmpsb
rcr
dec
scas
fdivl
icebp
in
push
xchg
aam
sbb
xor
lock
repz
ffree
add
mov
scas
or
mov
mov
mov
test
lock
in
mov
imul
enter
loop
cmp
je
outsl
mov
adc
fstps
out
or
push
jb
mov
and
repz
pop
jmp
push
addr16
mov
adc
sbb
in
push
dec
imul
jno
test
and
jmp
pop
repz
pop
or
ret
cmp
fcompl
pop
mov
cmp
outsl
ficomps
out
xlat
outsb
inc
cmp
dec
stc
mov
clc
xchg
mov
fnstcw
or
loope
iret
loopne
inc
insb
jns
fdivs
xchg
scas
cld
push
fists
insl
push
jne
add
lret
push
sub
sti
mov
icebp
hlt
imull
adc
lds
rcr
sahf
es
fwait
xlat
add
push
in
repz
outsb
push
dec
lock
mov
add
fldcw
pop
int3
pop
sbb
lds
push
xchg
mov
mov
neg
cld
mov
sub
mov
lcall
or
pushf
mov
mov
fwait
inc
je
xchg
mov
inc
cs
jae
push
jne
fstpt
mov
je
xor
pop
clc
loopne
and
lods
jae
fwait
pop
inc
mov
pop
mov
shll
fisttps
push
cmp
push
dec
imul
leave
add
scas
sti
cmp
loope
lods
fdiv
mov
arpl
sti
jbe
outsl
rorl
into
xor
lahf
outsb
jmp
nop
jbe
ret
mov
lock
and
push
fisubrs
lods
mov
xor
adc
sub
ret
jae
mov
jbe
repz
mov
xchg
pop
ja
repnz
fsubrl
movl
ds
out
int
mov
xchg
cmp
into
lahf
mov
fwait
lods
mov
jno
aas
jae
mov
jmp
cmp
insb
fidivs
stos
imul
out
cmpsl
repnz
mov
pop
mov
negl
mov
out
cmp
flds
shll
jne
cld
inc
movsb
mov
sahf
cmpsl
leave
popa
scas
jg
leave
out
cmp
add
xorb
repz
mov
arpl
lods
divb
xchg
ja
outsb
fmull
outsb
fdivrl
into
sti
fildll
daa
fbstp
in
mov
mov
lret
bound
sahf
ret
inc
bound
sahf
out
cmpsb
aaa
mov
repnz
jnp
mov
dec
repz
lret
and
imul
divl
jl
idivb
lds
fidivs
dec
dec
add
jnp
test
fcoml
fwait
pop
iret
iret
imul
jnp
add
fstpl
in
out
cmpsb
push
pop
xorb
js
sbb
mov
and
iret
aas
jmp
sti
mov
mov
leave
outsl
xchg
out
jbe
sub
loope
pop
popf
cltd
xchg
fisubrl
ds
ror
cmpsb
mov
stc
pusha
jmp
pop
popa
sti
inc
cmpsb
push
mov
rcrl
xchg
popf
popf
dec
lods
cmp
xchg
lock
addr16
rcrl
stc
push
mov
sbb
idivl
or
mov
pop
sti
or
mov
xchg
sub
mov
roll
andb
aas
push
not
cmpsb
fwait
add
push
inc
mov
cmp
pusha
pop
mov
fstl
repnz
adc
sbb
ljmp
out
xchg
sti
xor
cmp
rolb
inc
lahf
es
jno
inc
xchg
pop
pop
test
jne,pn
jecxz
mov
fsubl
sbb
cmp
int
test
stos
sub
in
stos
test
nop
and
cmp
fsubr
jg
push
sahf
hlt
add
inc
out
ficompl
std
dec
push
addl
hlt
push
and
sub
stos
sti
pop
or
int3
jl
pop
push
dec
sbb
stos
outsb
je
out
mov
pop
das
sbb
xchg
jbe
jl
andb
sub
out
sahf
sbbl
rcrb
loopne
shll
pop
insb
and
dec
fstpl
lcall
pop
repnz
mov
mov
sbb
xchg
jge
cmp
cmpsl
pop
adc
jmp
sub
shrl
sub
imul
popw
and
test
mov
repnz
mov
test
ljmp
or
jmp
xchg
repnz
cld
sahf
test
ficoms
loope
mov
mov
add
mov
adc
inc
adc
ja
jmp
test
cwtl
rclb
add
lock
dec
jle
inc
clc
insl
mov
push
sti
int3
mov
add
jns
imul
jp
mov
sub
fmull
pop
xlat
cmp
xchg
jnp
cmpsb
out
in
pushf
or
imul
jne
stos
outsb
fisttpll
jmp
adcl
fmulp
xlat
cmp
out
jl
lods
mov
add
outsl
aas
inc
jno
or
cld
pop
mov
rcll
or
pop
push
mov
lcall
in
or
insl
mov
mov
dec
hlt
sub
mov
add
in
xchg
or
ljmp
sbb
pop
xlat
leave
lea
jno
adc
jecxz
mov
inc
pop
cmp
jno
leave
in
xchg
cmc
imul
cmp
fdivrs
jnp
xchg
mov
sar
push
roll
popf
adc
out
and
mov
imul
out
mov
ds
mov
pop
pop
in
xorb
cmp
test
fucomip
movsl
cs
jne
outsl
mov
mov
lret
pop
rol
mov
mov
pop
sbb
push
push
pop
in
sub
xor
adc
jb
push
push
neg
adc
ljmp
push
int
mov
pop
out
inc
pop
in
jae
mov
dec
in
fsubr
dec
repz
sub
out
fst
cmp
arpl
frstor
lcall
cwtl
mov
mov
inc
js
mov
leave
pop
in
jb
adc
cmp
out
data16
pop
push
ret
mov
pop
sahf
addr16
mov
outsl
push
pop
adc
pop
cmp
aas
movsl
jl
rol
repnz
mov
fildll
add
sub
jnp
pop
inc
push
mov
push
cli
aam
cmp
push
in
cmp
mov
clc
shrb
xor
push
jg
xor
lock
ret
scas
cmp
and
cmpsb
sub
sub
loope
xor
insl
je
sbb
cmc
fidivl
adc
jnp
dec
mov
stos
push
lods
sbbl
pop
jns
mov
push
insl
imul
stc
push
loopne
or
out
jmp
arpl
aaa
mov
pop
mov
add
jmp
loop
push
lahf
fcomps
ret
and
aad
lock
xchg
fadd
stos
in
cltd
pop
cmp
cltd
mov
lds
lods
ret
cmp
in
stos
jge
and
mov
fstp
inc
int
add
pop
mov
notb
mov
xor
fldenv
pop
mov
lret
andb
sub
jne
add
sub
jb
inc
mov
out
pop
push
add
sbb
jne
sbb
cs
ds
mov
fisttps
movsb
jns
pushf
sbb
sahf
pop
lods
out
push
fstpl
insl
dec
js
mov
in
jmp
jp
mov
jnp
into
mov
lock
fdivr
mov
pop
sbb
test
rorl
push
xchg
sbb
clc
mov
pop
fisttpl
mov
mov
mov
push
mov
mov
dec
fnstsw
fcomps
sbb
or
pushf
pop
cmp
imul
and
push
scas
xchg
xor
inc
mov
and
mov
xor
and
cmp
mov
lods
dec
call
mov
fcompp
in
pop
fcomps
call
or
sti
stos
and
fstl
pusha
lods
pop
and
insb
das
mov
push
out
fdivrl
bound
cmpsb
fldl
sbb
mov
adc
mov
jne
test
mov
cmp
movsl
ret
mov
outsb
mov
xor
fistpl
lcall
pop
add
das
xor
aad
lret
popa
call
repnz
rcr
jnp
outsb
jecxz
das
sbb
pop
xor
lahf
mul
in
maskmovq
ficompl
push
outsb
vmwrite
xchg
xor
bound
jecxz
lds
push
push
ds
add
aaa
scas
fcompl
addr16
cmpsl
mov
pop
mov
mov
inc
idivl
mov
loopne
mov
out
out
push
dec
mov
loopne
cwtl
jno
xlat
fcmove
hlt
push
pop
fcmovb
jnp
jg
pop
mov
leave
mov
pusha
mov
leave
repnz
pop
je
push
push
scas
mov
jne
in
push
sbbl
fstpt
pop
xor
insl
ds
mov
dec
lds
xchg
cmp
pop
jecxz
lods
push
sarl
mov
mov
ret
fisubs
insl
mov
clc
push
jle
xchg
dec
jo
loop
loope
mov
add
das
addr16
cmp
inc
pop
ja
in
cs
flds
pop
push
subb
mov
or
jbe
out
pand
mov
iret
mov
add
je
mov
popf
test
sbb
cli
testb
push
lcall
pop
cmp
mov
cwtl
xchg
inc
icebp
mov
mov
out
fisubl
shrb
jnp
sahf
neg
stos
iret
add
in
jmp
inc
cmp
sahf
lret
mov
cld
mov
loop
in
aaa
push
xchg
add
cmp
mov
pop
jnp
insb
lahf
pop
pop
leave
mov
add
aam
arpl
mov
das
mov
std
pop
push
leave
mov
enter
fildl
jae
popw
mov
jb
ds
mov
mov
lcall
aam
or
push
aaa
iret
or
into
add
mov
mov
jecxz
sahf
cwtl
lds
inc
xchg
and
dec
rep
inc
jne
mov
jo
pop
pop
mov
cmpsb
mov
xor
decb
mov
lods
jnp
mov
mov
stos
jnp
fidivs
scas
fisubrs
pop
xlat
leave
mov
arpl
push
jmp
repz
xchg
push
xor
jne
mull
cmpsb
sbb
add
out
fwait
mov
scas
das
inc
stc
pop
pop
xlat
mov
outsl
out
mov
or
test
fidivrs
mov
scas
jecxz
pop
outsl
xor
fldcw
mov
dec
outsl
imul
shrl
jg
or
fincstp
pop
mov
xchg
cmp
pusha
testb
push
push
aas
xchg
jnp
or
sub
stos
into
fistl
cmpsl
add
outsl
scas
mov
pop
dec
mov
icebp
pop
lret
movsb
fistl
xchg
mov
inc
fsub
pop
pop
out
imul
enter
inc
cmpsl
dec
mov
cmp
fs
ret
sub
pushf
mov
jo
ficomps
mov
adc
add
imull
inc
and
xchg
mov
into
xchg
xchg
sti
jno
jle
add
in
jge
lret
dec
cmpsb
mov
xchg
xchg
outsb
sub
sti
pop
and
test
es
aas
inc
and
jbe
push
sti
mov
notl
jbe
lahf
mov
push
mov
mov
imul
scas
dec
add
jl
ret
dec
jo
mov
stos
fsubl
repnz
jnp
insb
push
mov
lock
mov
xchg
int
fs
cli
push
lahf
mov
jmp
xchg
sbb
cmc
pop
aad
sbb
rolb
fs
xchg
jge
jmp
cmp
loop
into
push
mov
xchg
clc
out
idivl
xorb
lret
lds
cli
mov
fstpl
push
popa
in
sbb
aad
pop
and
in
addr16
and
aam
scas
jg
jmp
mov
sbb
rcl
test
pop
leave
cmp
repz
pop
fsubrl
cltd
push
cs
sbb
push
xor
out
push
xchg
add
inc
stos
xor
and
aas
fildll
push
call
jecxz
ja
scas
jg
aaa
jae
fsubrs
jns
lret
stc
dec
jl
scas
xchg
pushf
ficompl
adc
cltd
popf
in
or
dec
popf
xchg
pushf
js
gs
jmp
pop
out
mov
divl
push
cmc
or
fdivrp
rolb
ror
icebp
jg
stos
push
mov
mov
adc
rclb
mov
scas
sti
pop
add
mov
hlt
adc
sub
jne
sub
mov
aam
pop
popf
ds
sub
cmpsl
jle
mov
in
and
pop
sbbb
leave
add
pop
or
insl
paddd
shrb
cmpsl
test
cmpsb
imul
jg
daa
fbstp
mov
rcrl
mov
ret
mov
pusha
add
into
jo
iret
ret
in
add
adc
jbe
test
mov
movsb
xchg
leave
mov
test
add
stc
sub
xchg
mov
scas
loopne
out
das
filds
jo
xchg
rcll
repz
mov
cli
mov
xchg
sahf
ret
jnp
mov
mov
mov
stc
jb
xchg
mov
jg
pop
push
add
ja
das
and
xchg
and
loope
ds
mov
ret
loop
xor
inc
je
or
shlb
push
add
jbe
xchg
or
cli
pop
push
pop
cmp
push
pop
in
out
fstps
mov
outsl
mov
dec
and
xchg
es
inc
inc
mov
pop
imul
mov
mov
ret
aad
sbb
into
data16
sub
mov
test
jne
xchg
mov
stos
mov
and
inc
shr
cmp
scas
pop
fcomi
aam
mov
test
arpl
dec
std
fcoms
sub
in
add
insl
ljmp
xor
sarl
fisttps
in
xor
jae
xor
pop
add
or
les
addr16
xchg
out
adc
adcb
mov
mov
adc
cmc
xor
xchg
loop
fistpl
lock
xchg
into
sub
div
clc
fimuls
xor
push
stos
cs
mov
stos
add
jmp
aaa
push
fnstenv
pop
mov
cmpsb
imul
repnz
cmp
out
dec
int
jne
shrb
dec
xor
es
mov
mov
inc
push
loope
movsl
mov
rcrl
mull
data16
xlat
mov
xlat
leave
out
std
repz
clc
iret
fists
rcl
scas
mov
out
sti
inc
sub
incb
jg
cmp
jno
outsl
aaa
mov
mov
ficompl
or
jne
push
push
outsl
cmp
in
pop
cld
mov
test
scas
add
and
xchg
dec
xchg
sti
shll
fnstcw
xchg
dec
mov
icebp
inc
mov
in
mov
adc
mov
out
xor
fnstcw
test
mov
ftst
test
popa
into
dec
dec
ja
movsb
cwtl
int3
pusha
mov
loop
ja
ljmp
cmp
pop
cld
fdivr
jbe
pop
mov
je
out
movsl
aaa
enter
outsl
jns
gs
aad
lds
jl
out
cmp
out
stos
popa
sbb
mov
in
inc
hlt
push
sarl
sub
inc
jbe,pt
mov
shr
jg
push
je
sahf
mov
or
sub
mov
jl
mov
mov
adc
sbb
stc
xor
out
mov
xchg
cs
cwtl
sub
add
pop
mov
data16
fnstenv
in
test
add
inc
pop
sbb
mov
stos
xchg
sub
or
insl
scas
pop
xor
adc
out
push
add
and
scas
dec
fdiv
in
clc
js
xor
dec
and
cs
enter
xor
mov
mov
cmp
cs
aam
into
xor
add
xchg
dec
aaa
notb
inc
jae
inc
aaa
cwtl
hlt
xor
mov
jg
xchg
sub
push
push
sbb
add
sahf
jecxz
stos
fstl
inc
xorl
test
imul
hlt
xor
push
jp
inc
or
sub
pop
icebp
cld
xchg
mov
clc
and
hlt
adc
shlb
shrl
loopne
or
dec
mov
mov
orb
lahf
sub
cli
aad
mov
mov
mov
pop
cltd
ret
leave
mov
cmpsb
mov
jbe
loope
lods
sub
mov
lds
ficoml
push
iret
ret
mov
pushf
imul
mov
add
pusha
lods
mov
in
out
loopne
ds
testb
sbb
fiaddl
inc
clc
xlat
inc
mov
dec
jns
int
test
dec
stc
mov
or
jnp
repz
sbb
mov
push
das
daa
push
mov
cmpsb
int3
pand
cmpb
lods
push
pop
jo
dec
adcb
push
call
ficoms
ljmp
add
in
push
mov
mov
pop
jle
mov
sbb
or
cwtl
and
jmp
cwtl
ret
push
adc
lcall
arpl
mov
cmp
test
push
aaa
push
ljmp
sub
sub
iret
movsl
mov
sti
leave
fwait
icebp
add
inc
pusha
aam
add
outsb
push
pop
push
fdivp
jnp
leave
into
and
mov
dec
lods
dec
push
xchg
jnp
cmp
inc
je
mull
adc
add
fnstsw
pop
testb
mov
sahf
mov
mov
fiaddl
mov
cmp
sub
mov
xacquire
adc
cmpsl
jg
shrl
jne
loop
mov
mov
fidivrs
pop
stos
popf
pushl
fadds
movsl
push
into
push
push
push
pop
mov
cli
mov
mov
jne
cmp
pop
pop
xchg
call
pop
xor
ss
jb
and
popf
inc
iret
mov
leave
push
outsb
or
jae
cwtl
pop
add
jecxz
repz
dec
add
jns
popf
andl
dec
insl
cli
pop
pusha
xor
pop
roll
nop
iret
pop
in
sti
or
push
enter
test
cli
filds
xchg
xor
shl
mov
cmp
cmp
out
lods
xchg
mov
mov
bound
std
push
mov
xorl
and
dec
jno
outsl
movb
pop
sbbb
mov
mov
push
fbstp
jb
xor
negb
pop
mull
xchg
rcll
xor
je
dec
cmp
mov
dec
out
fcomps
int3
das
and
cld
add
ret
add
adc
test
cmp
or
rcll
mov
dec
push
sbb
jp
fsts
push
sbb
gs
cmp
sbb
es
cmpsb
icebp
cmp
test
lret
stos
ficomps
cmpsl
pop
jmp
sub
mov
push
mov
jg
mov
fcmovnu
inc
in
xor
pusha
fisttps
int3
test
jp
mov
sub
inc
jo
negb
jg
dec
in
xor
rep
adc
mov
pop
cmp
or
mov
mov
sbb
gs
jne
xchg
pop
lret
inc
add
jmp
fdivs
scas
inc
cmp
push
cmp
mov
mov
sub
pop
and
xchg
es
push
jp
cltd
leave
popf
jle
jg
sahf
sti
mov
pop
aaa
pop
sahf
shll
dec
scas
mov
cmp
mov
pop
jmp
loop
sub
shlb
and
mov
sti
insb
stos
inc
out
mov
mov
mov
std
adc
imul
mov
repz
loop
adc
push
push
pop
add
pop
in
xor
push
mov
mov
pop
sti
jg
jmp
loop
sbb
and
hlt
add
xor
movsl
sarb
inc
and
std
push
iret
les
lahf
push
pop
push
mov
jbe
adc
xchg
bound
pushf
rcll
sbb
or
inc
jl
push
stos
or
outsb
iret
aad
int3
cmc
sti
loop
push
mov
fildl
loop
pop
mov
adc
lahf
fcomps
fldenv
andl
xlat
cmpsl
mov
rcll
aam
pop
leave
xchg
pop
jo
push
mov
push
out
push
mov
fisttps
add
in
movsb
ljmp
adc
adc
ss
out
jmp
test
inc
push
mov
adc
popf
cld
fidivs
push
jbe
inc
adc
mov
mov
arpl
out
clc
dec
mov
sub
leave
sbbl
pop
jae
jnp
das
mov
push
or
add
pop
dec
movb
sbb
sbb
std
fldt
xor
mov
lods
dec
jmp
push
pop
pusha
lret
push
cmp
movsb
adc
lahf
dec
repnz
xor
push
sti
xchg
jge
outsl
in
icebp
inc
ret
stos
adc
rolb
aam
movsl
aam
jnp
pop
and
imul
pop
sbb
pop
pusha
push
pop
ljmp
mov
inc
or
mov
pop
jb
mov
pop
addl
dec
jg,pn
insb
cs
fisubl
sbbb
push
pop
and
cmp
stos
mul
mov
mov
mov
aas
lahf
pop
push
jns
xorb
push
mov
ret
cld
imul
dec
jecxz
repz
in
roll
outsb
adcb
out
out
lret
arpl
pop
or
insb
jo
xchg
xor
faddl
mov
loop
les
cmpsl
or
jg
pop
lahf
frstor
inc
test
dec
xchg
scas
sub
and
push
sarl
in
jo
int
test
stc
in
cmpsb
push
pop
inc
mov
int3
add
mov
loope
stc
dec
cmp
mov
aas
pusha
or
xor
arpl
cmpsl
fxam
mov
cmp
jmp
mov
dec
dec
sub
pop
out
jl
dec
sti
xchg
out
jne
movsl
sbb
sub
sub
inc
mov
push
xor
xchg
out
ljmp
jb
push
mov
xor
add
pop
pop
sub
hlt
pop
xor
sahf
push
xchg
xchg
out
mov
cmp
ljmp
in
cmp
pop
cs
or
dec
push
mov
push
jbe
ficomps
mov
jecxz
pop
int
push
push
jle
leave
mov
jge
mov
mov
scas
ja
aas
pop
negl
add
jg
mov
push
mov
pop
popf
jp
dec
cltd
mov
movsb
push
and
in
repnz
mov
mov
mov
xor
ret
sub
mov
subb
mov
inc
cmp
insb
xlat
std
dec
je
test
mov
fsub
lods
or
in
push
int
int3
push
ss
outsb
inc
xor
cld
or
and
xor
or
insb
push
jmp
cltd
cs
mov
adc
mov
paddusw
pop
outsl
pop
sbb
fs
imul
fistps
lret
mov
fwait
scas
fsts
mov
or
cwtl
and
pop
dec
cld
mov
sarl
sbb
mov
stos
lods
nop
dec
mov
stos
ds
rdmsr
add
out
mov
outsb
dec
ljmp
adc
es
flds
mov
cmc
out
pop
mov
inc
dec
mov
or
mov
mov
insb
fcompl
pop
mov
sahf
mov
pushf
push
mov
mov
pop
outsl
int3
int3
jne
outsl
inc
pusha
inc
jo
sbb
push
or
mov
ficomps
push
int
xor
sti
inc
add
sub
data16
loopne
scas
int
enter
loopne
pop
sub
cmc
push
dec
lea
jbe
dec
fidivrl
jecxz
mov
ljmp
ror
in
xchg
jae
enter
cs
loopne
test
adc
pop
sbb
mov
mov
mov
cmpsl
sbb
jmp
cmp
ds
out
inc
aam
mov
mov
pushf
negl
insl
add
int
mov
popa
fstps
mov
leave
inc
sti
mov
push
cli
and
in
aas
pop
into
mov
push
in
call
arpl
rcrb
dec
dec
dec
mov
and
vpackssdw
cmp
dec
enter
mov
in
mov
mov
xlat
ret
in
cld
testl
xor
ret
add
dec
sbb
bound
je
je
loop
lods
cltd
xchg
push
sub
adc
mov
out
adc
popa
pop
scas
and
stc
adc
cli
dec
insb
out
sub
xchg
sub
push
sti
push
adc
fnsave
in
or
sarb
add
scas
inc
jns
js
notb
inc
out
jg
adc
xchg
xor
mov
scas
or
mov
xchg
rorl
sub
mov
cmc
rclb
mov
xchg
cmpsl
dec
fdivrs
fnsave
imulb
mov
bound
push
pop
push
mov
push
mov
lret
or
rcrl
or
int3
xor
fcmove
cli
aam
mov
or
imul
mov
xchg
cmp
rsm
leave
mov
shr
mov
mov
int3
xchg
sbb
mov
lods
jbe
cmp
mov
insb
mov
sbb
je
or
icebp
clc
iret
adc
sbb
sahf
repnz
jmp
jmp
pop
pop
inc
movsl
mov
ja
cltd
jns
xchg
sub
insb
xor
pop
mov
fmul
popf
xor
mov
and
orb
repnz
mov
mov
test
leave
je
fwait
sahf
or
loop
out
in
out
jl
fdivrp
into
inc
dec
test
adc
cmp
hlt
sub
or
jg
mov
leave
mov
fcomip
repnz
push
ficoml
add
pop
mov
push
inc
shll
in
pushf
js
data16
js
jae
imul
shl
pop
mov
jmp
cmp
xor
pop
notl
cmp
in
enter
mov
pop
pop
testl
jns
xor
dec
dec
and
popf
fmul
push
mov
mov
mov
lahf
ret
sbb
in
loopne
adc
insl
cltd
jg
iret
popf
fstp
pusha
cmc
jmp
outsl
pop
fistpll
les
jmp
out
and
inc
pop
leave
cmp
dec
flds
out
pop
aam
insl
mov
add
sub
aaa
sub
call
mov
je
xchg
cmpl
in
idivl
mov
test
cmp
mov
jne
add
mov
jae
stc
dec
aaa
inc
mov
fiadds
dec
loopne
movq
sahf
test
mov
xchg
out
in
fidivs
jecxz
lock
mov
mov
cs
mov
lret
mov
jnp
adc
jns
movsb
add
push
iret
jne
or
jo
loope
into
fisubrs
dec
pop
scas
in
ret
push
pop
mov
sub
jg
and
testl
jp
pop
rcl
lcall
adc
imul
push
sbb
mov
push
imul
test
sub
lods
into
sahf
fstpl
pop
push
jmp
jae
jnp
xchg
test
mov
push
fsubr
leave
add
xchg
xchg
xor
scas
jno
test
xchg
addr16
mov
fcmovbe
xlat
mov
out
rcl
shlb
push
enter
sub
or
sub
mov
inc
and
fsubrl
lock
loope
ja
xor
mov
pop
ret
xchg
sub
fcomip
into
ss
clc
inc
fistl
cmpsb
sub
dec
push
add
aaa
imul
push
outsb
fsubrp
cs
pop
cli
mov
lcall
arpl
mov
int
cltd
inc
mov
and
lahf
andb
rcll
out
jns
pop
inc
test
popf
repnz
into
pop
pop
jecxz,pt
jecxz
fcompl
pushf
xchg
add
inc
ljmp
or
mov
cs
cli
mov
push
or
lods
sbb
pop
leave
inc
gs
mov
fimuls
cmp
mov
pop
inc
test
dec
lahf
sahf
addr16
stos
pop
add
jg
test
std
in
or
pop
jecxz
pusha
data16
jnp
inc
fs
arpl
mov
mov
popa
push
ret
cmp
mov
stos
jmp
push
pop
sub
add
or
in
mov
and
sbb
or
or
repnz
xor
addr16
out
xor
sahf
jbe
or
and
mov
xlat
scas
iret
adc
fnstsw
mov
bound
xlat
idivb
sub
mov
mul
repnz
push
jb
mov
mov
pop
xchg
nop
sub
mov
adc
out
sub
frstor
mov
iret
mov
in
xchg
out
xor
mov
imulb
push
xchg
ljmp
or
sbb
loopne
xchg
add
add
jmp
mov
xchg
mov
into
enter
sarl
ret
ja
insl
in
stc
fidivs
push
inc
insl
lds
pop
sarl
jle
lahf
cmp
mov
add
inc
lret
incb
push
cmpsl
divb
dec
fistpl
push
inc
inc
mov
fcmovne
icebp
fidivrl
ja
jno
jnp
xchg
scas
pushf
movsb
in
mov
int3
icebp
jmp
ficompl
mov
loope
int3
pop
or
mov
and
mov
les
mov
xlat
jg
insb
sub
dec
pop
scas
dec
inc
pop
mov
cmp
and
push
xchg
xor
stos
mov
pop
or
sarl
fsubrl
in
and
push
push
jle
push
out
mov
cmp
push
mov
jnp
fbstp
jb
out
xor
xchg
adc
imul
xorl
jno
mull
ljmp
sub
iret
stos
adc
dec
hlt
inc
xorb
push
test
xor
mov
scas
jle
mov
sahf
push
dec
jbe
add
push
cli
mov
adc
ds
rol
sbb
adc
push
mov
imul
loopne
lret
insl
loope
sbb
jmp
and
lret
xlat
arpl
xchg
out
fucomip
popf
cmp
enter
push
jge
push
sbb
in
add
cwtl
decb
sub
sub
in
repnz
pop
dec
adc
and
mov
mov
enter
ficompl
sub
add
push
sbb
icebp
adc
mov
mov
push
jmp
fildl
xchg
xchg
jno
dec
ja
cmpsl
add
jbe
repz
adc
idiv
adc
iret
ret
inc
hlt
inc
jo
repz
and
xchg
sub
dec
nop
mov
mov
lds
mov
in
inc
out
or
mov
xchg
lahf
adc
iret
adc
mul
bound
jno
popf
sbb
loope
xchg
in
neg
stos
shl
mov
add
cmp
stc
xor
fidivrs
mov
mov
loopne
scas
loop
mov
push
out
loope
add
pop
cs
or
or
sub
fs
cs
aas
vpaddusb
pop
add
or
mov
cmp
mov
pop
mov
scas
jge
lock
test
sub
test
pop
or
dec
and
push
push
adc
cmpsl
sub
inc
cmc
add
mov
push
or
sti
fdivl
adc
lea
test
adc
jne
and
and
stc
pop
repz
cmp
jge
mov
mov
fistps
cltd
sbb
dec
in
mov
sbb
sahf
xor
add
sahf
mov
cld
sub
aad
lret
ret
in
and
jbe
out
das
pop
push
pop
xchg
movsl
mov
mov
cmp
test
imul
addb
mov
sub
mov
in
int3
cmp
xlat
clc
ja
stos
pop
imul
mov
gs
sbb
mov
ds
das
imul
sbb
lods
in
mov
notl
ja
cmp
push
out
cwtl
sub
arpl
mov
jb
loopne
jecxz
inc
mov
in
jecxz
flds
out
xchg
out
das
out
loop
push
xor
scas
lds
mov
ficoml
add
js
lods
add
ss
mov
mov
jl
mov
mov
adc
lahf
in
mov
ret
cld
dec
cmpb
stos
leave
inc
ds
adcl
and
aam
or
mov
ljmp
lret
je
out
in
xor
jo
fldenv
sub
mov
cmpsl
mov
lea
movsl
sahf
jle
lret
out
leave
xchg
cmp
jae
add
pop
cld
scas
push
lods
rcrb
adc
dec
xor
mov
mov
je
fsts
cmpb
mov
cmpsl
jne
lds
dec
mov
stos
dec
cmpb
jmp
call
mov
cli
addr16
jns
inc
cmpsl
pop
mov
popa
mov
test
mov
push
scas
cltd
push
sub
pop
decb
enter
cld
out
stos
cs
mov
mov
mov
imul
adc
xchg
pop
xchg
aas
adc
xor
outsl
add
psubd
cmc
sub
icebp
lock
lret
das
aam
sbb
xor
mov
push
push
call
mov
arpl
lods
dec
sub
or
mov
out
lods
rclb
pop
xlat
lods
jmp
cs
xor
js
imul
mov
sbb
pop
sbb
jnp
enter
dec
cmpsl
mov
movsl
ret
fnstcw
pop
cwtl
jg
mov
scas
loopne
insl
and
ficoms
mov
das
jne
fistl
sbb
mov
outsl
mov
bound
or
movsb
cld
cmp
xor
dec
mov
push
pop
insb
or
mov
inc
cs
jns
pop
shl
jae
loopne
sti
sbb
out
and
ss
mov
jp
pop
mov
or
jmp
xor
imul
das
pop
aas
sbb
test
gs
mov
lods
inc
mov
sarl
jl
mov
out
jle
sahf
or
aaa
jns
test
adc
cmp
call
mov
imul
add
imul
inc
dec
movsb
scas
imul
add
arpl
mov
lahf
pop
mov
and
aaa
cmc
or
cwtl
adc
ljmp
jecxz
push
mov
ds
arpl
dec
arpl
cld
sub
cli
inc
call
xchg
and
out
xor
inc
sbb
xorb
enter
jg
ficomps
mov
cmpsl
sarb
adc
mov
stos
sub
jo
ljmp
pop
scas
cmp
mov
movsb
daa
dec
lahf
push
shll
add
push
or
xchg
mov
inc
jl
inc
scas
aaa
lock
mov
std
dec
addr16
imul
in
bnd
push
addr16
pop
cmc
fstpt
repz
lods
aaa
or
cmc
cmpsb
fistps
sub
mov
ds
fcoml
xchg
mov
xchg
pop
shr
test
xor
out
icebp
cs
push
hlt
fldt
aas
mov
mov
test
rclb
mov
mov
sub
xor
iret
adc
xlat
push
xlat
and
fldt
and
fnstcw
mov
push
xor
fsubrl
add
mov
in
leave
test
inc
in
jmp
pop
fistpl
movsb
mov
xchg
jne
outsl
fistpl
in
sub
xor
aaa
outsl
rcrb
fmul
or
mov
imul
mov
je
ljmp
out
mov
mov
pusha
adc
fisttpl
pushf
pop
mov
je
leave
into
out
out
fldenv
mov
jnp
mov
sbb
or
xchg
cmp
mov
int3
and
pop
push
aad
mov
les
mov
push
test
xchg
lret
popf
or
lahf
inc
sub
fidivs
aad
xchg
xchg
mov
lea
loope
scas
mov
and
cmp
cli
cli
repz
es
cmp
mov
ret
aas
pop
idivl
out
mov
push
mov
int3
adc
push
pop
add
std
imull
je
aaa
sarl
mov
pop
fmuls
in
mull
scas
mov
popa
dec
pop
cltd
adc
dec
adc
pop
mov
inc
fsubl
sar
inc
pop
pusha
pushf
dec
mov
sub
es
mov
pmaxsw
cmc
rcr
data16
test
ret
arpl
repz
mov
fst
ret
leave
mov
ficompl
push
mov
mov
das
mov
cmp
jne
test
push
xlat
jl
fcoml
imul
mov
outsb
cmp
out
imul
mov
pop
sub
imul
sbb
cmp
xor
cmc
sahf
in
into
xchg
or
jnp
in
mov
mov
sbb
ds
js
add
push
mov
leave
es
pop
mov
add
iret
lea
pop
sub
call
inc
iret
xor
nop
icebp
sbb
flds
out
add
out
xchg
cld
xor
jg
ljmp
dec
mov
movb
or
add
dec
push
xor
enter
in
shll
pop
push
sbb
shr
dec
sbb
cmp
mov
sub
ja
pop
ret
inc
fists
fsubrl
es
sub
ds
cmp
xchg
mov
ret
or
xor
test
jae,pn
pop
imul
fistps
clc
xor
call
lock
ds
shl
jmp
aam
scas
mov
and
jl
mov
or
inc
shlb
js
scas
aad
mov
ljmp
ss
xchg
stos
bound
fs
fbstp
loopne
rcl
ret
aad
out
daa
mov
inc
jmp
xor
cmc
sti
mov
pusha
add
mov
sarl
ret
mov
inc
add
pop
mov
pop
shl
mov
pop
sbb
fildl
out
cwtl
fldt
push
sti
in
or
fildl
mov
out
in
outsl
jmp
flds
cs
ja
lahf
sbb
fsubr
repz
pop
idivl
outsl
mov
sahf
cmc
jne
out
mov
push
shlb
aaa
pop
add
sub
pop
idivl
push
xlat
arpl
jecxz
pop
push
cmp
sbb
loop
stos
ret
movsl
test
test
mov
scas
iret
lods
cli
outsb
jno
cmpsl
and
inc
push
sbb
outsb
dec
out
inc
sub
enter
fisubs
or
dec
aaa
sahf
jno
aaa
xchg
mov
out
enter
dec
inc
enter
fmul
loop
les
pop
jmp
dec
xchg
cmpsl
adc
xor
das
movsl
lret
xchg
xchg
mov
push
orl
rcrb
dec
mov
jbe
cmp
pop
inc
mov
outsl
mov
mov
mov
jb
rolb
inc
xor
cmp
push
in
sahf
cmp
stc
out
fidivrs
stos
sub
mov
enter
jmp
sub
jbe
mov
fbld
mov
pop
jnp
mov
fcomps
or
cltd
fbstp
lods
aam
adc
mov
fildll
frstor
push
sbb
negb
dec
mov
xor
cmpsb
add
dec
dec
popf
inc
or
js
push
mov
arpl
dec
and
faddl
sbb
hlt
mov
gs
loopne
int
sahf
fsqrt
daa
xor
fwait
mov
leave
add
dec
lea
scas
stos
dec
frstor
and
test
cld
fsubrl
dec
adcl
push
jecxz
or
fcmove
mov
cmpsb
call
hlt
xchg
or
xor
loopne
data16
mov
pusha
sub
sub
ret
test
out
out
or
and
xor
out
movsb
jl
shll
gs
stc
or
ds
cld
dec
jae
inc
bound
mov
outsl
mov
decb
pusha
mov
mov
cltd
push
movb
cmp
lods
orl
mov
fsubl
testl
repnz
push
jnp
ret
out
scas
mov
insl
mov
xchg
scas
add
jmp
mov
cli
test
mov
leave
mov
and
mov
and
mov
test
mov
xchg
pop
sub
out
mov
idivl
pusha
cmp
dec
lret
cli
xor
les
scas
cmc
out
xorb
inc
jno
mov
and
and
arpl
adc
mov
mov
leave
pop
inc
add
adc
or
add
stos
repz
fnstenv
loop
cltd
and
fdivrs
cld
lret
mov
iret
fwait
pop
jl
iret
inc
pop
out
cmc
repz
ds
sbb
mov
sbb
pop
daa
push
xor
jns
mov
ds
cmp
popa
test
sub
outsb
jns
mov
cmc
mov
sti
or
fisubs
jg
adc
cmovbe
out
sbb
and
in
and
ds
repz
jnp
add
aas
in
or
sbb
xor
pop
xor
dec
inc
cwtl
xor
daa
mov
rcrl
fwait
add
mov
mov
and
outsb
lock
lahf
sbb
ds
insb
pop
test
loope
jg
mov
jle
rclb
adc
fsubrs
lret
lods
pop
push
outsl
stos
outsb
addl
daa
mov
jno
out
xchg
mov
cmp
pop
sbb
cmc
mov
fstps
mov
jne
scas
and
cmp
scas
into
test
dec
lahf
pop
mov
mov
arpl
inc
out
aad
sbb
pop
lods
add
mov
cmp
sub
lods
cmp
push
scas
data16
icebp
int
ja
fimuls
popl
cld
dec
movsl
mov
clc
es
xor
mov
jg
mov
pop
int
das
out
stc
pxor
mov
test
mov
outsb
cltd
mov
sarl
dec
pop
mov
push
sahf
loope
out
aad
aas
stos
sti
fistpl
clc
mov
inc
aad
lds
mov
cmpsb
add
aad
mov
sbb
stos
pop
jge
jge
int
call
push
idivb
jnp
mov
push
popa
pop
inc
ret
inc
mov
inc
push
pop
pop
iret
cmp
sbb
bound
push
addb
mov
imul
jmp
sub
mov
roll
xchg
cmp
bnd
lds
sub
pusha
mov
fildll
addb
push
outsl
int
or
clc
mov
push
mov
pop
jp
nop
test
pop
icebp
inc
cmp
inc
mov
imulb
mov
addb
inc
mov
sti
pop
add
or
cmp
xor
insl
add
mov
add
in
in
push
sti
jg
add
jg
sbb
dec
std
test
int
enter
movsb
mov
mov
andb
xor
dec
fnsave
jnp
lock
imul
cltd
in
loop
insl
add
or
aaa
push
mov
add
push
lahf
loopne
mov
or
cltd
cmpsb
scas
adcl
insb
and
inc
das
adc
jge
sbb
jb
xchg
shrb
lock
pop
js
mov
in
pushf
sub
fisubs
sbb
out
popl
jmp
lahf
push
inc
pop
pusha
push
xor
xchg
cltd
push
jg
ret
shll
movb
jbe
nop
or
std
ret
cmpsb
leave
push
iret
jns
or
dec
lea
add
repz
pop
sahf
aas
in
outsl
ret
cmpsl
add
int
ret
scas
out
out
jg
icebp
loopne
adc
scas
push
hlt
outsb
pop
outsl
fists
into
popl
dec
pop
fildll
mov
mov
cmp
aaa
fisubl
in
pop
adc
xor
das
mov
outsb
popf
mov
add
aas
mov
lcall
or
outsb
inc
mov
insl
push
cli
je
scas
es
in
outsb
ljmp
fildll
mov
add
xchg
loopne
ret
jbe
xchg
lock
ret
add
shrb
mov
mov
shlb
popa
mov
and
jge,pt
mov
fsubrs
and
int
sub
gs
add
jmp
xor
aaa
xchg
xchg
mov
sar
icebp
js
or
jge
adc
sti
cs
leave
mov
icebp
je
jg
hlt
xor
addr16
push
ret
cmp
adc
push
add
insl
cmp
int
ret
push
out
imul
adc
stos
pop
pop
cwtl
push
jne
pop
outsb
add
jmp
mov
test
pushf
xor
and
xor
les
lods
scas
sahf
lahf
movsl
aad
jecxz
or
cmc
cs
jmp
mov
and
daa
adc
dec
mulb
jae
aad
jp
cmp
enter
popa
fnstsw
cmp
ret
push
in
in
mov
push
gs
push
mov
pop
xlat
icebp
clc
notl
mov
lcall
mov
loope
xchg
mov
jns
dec
rcrb
jns
mov
mov
iret
mov
xor
neg
inc
cli
xchg
inc
jmp
inc
addr16
iret
inc
out
cld
mov
movsl
notb
mov
aas
sub
ret
fwait
inc
cld
push
in
inc
or
adc
push
sub
cmpsb
dec
rcrb
fidivrs
xchg
pop
add
test
pop
mov
outsl
push
scas
gs
sub
stos
mov
pop
insl
out
enter
pop
shr
arpl
test
jae
push
xchg
and
ret
repz
shl
in
not
dec
addr16
push
add
scas
xlat
adc
mov
push
scas
scas
scas
loop
sub
fcmovbe
icebp
div
pop
movsb
mov
jle
scas
stos
cmp
push
jo
fidivl
mov
pop
sahf
mov
dec
lahf
in
cltd
pop
pop
or
cs
fdiv
repnz
cmp
pop
push
aam
jp
lahf
lock
and
inc
hlt
fidivs
ret
and
dec
fmull
aaa
cld
pop
arpl
inc
and
mov
fyl2x
xchg
dec
ret
inc
repz
lahf
gs
jbe
mov
dec
adcl
xlat
stos
push
int
rep
mov
jnp
das
decb
movsl
sarl
fisttpl
mov
adc
dec
addr16
push
mov
rcl
insl
push
out
arpl
test
pop
push
or
mov
xor
fdivrs
sar
sahf
adc
mov
jbe
jnp
in
hlt
pop
fiaddl
sbb
test
std
mov
jg
fisttpl
iret
in
cwtl
pop
xor
mov
dec
aaa
insl
shr
dec
icebp
movsb
ljmp
addr16
ja
cli
adc
fidivrl
pushf
fcmovb
cmpsl
inc
or
frstor
lahf
push
das
test
sub
arpl
mov
test
popa
push
mov
outsl
push
inc
lods
mov
pop
mov
adc
stos
call
out
xor
push
lahf
jb
inc
fisubrs
jo
cld
xchg
push
test
xchg
mov
jbe
cmpsb
mov
dec
xor
aad
jae
mov
xchg
dec
out
pop
clc
stos
jg
pmullw
arpl
insl
push
sbb
stc
push
bnd
add
flds
mov
cmp
or
mov
sbb
inc
je
cmpsb
xor
mov
ret
push
iret
xor
xor
mov
mov
leave
fiadds
stc
sbb
hlt
enter
sub
pushf
idivl
cmc
ret
cmpsb
pop
sbb
pop
mov
jecxz
sbb
xlat
icebp
jbe
daa
or
mov
imul
in
mov
fcmove
mov
mov
mov
xchg
fistpll
push
decb
or
lcall
jl
xchg
test
jns
dec
add
inc
xlat
lods
stc
mov
outsl
jnp
mov
nop
mov
jg
pop
fisubrl
cmpsl
ljmp
jbe
mov
lahf
push
scas
and
push
inc
add
inc
lods
arpl
cmpsl
mov
and
rcr
sbb
fwait
dec
xchg
cmp
das
mov
ja
int3
fidivrl
insl
fcompl
mov
fstpt
cmp
shr
jmp
cmp
mov
pop
sti
std
xlat
ror
lret
aam
sti
xchg
das
pop
xchg
ret
aad
stos
pop
or
jae
dec
hlt
shl
xor
lcall
push
mov
cld
and
xor
cmp
mov
leave
dec
adc
pop
cmpsw
inc
jle
flds
aas
andnps
out
lahf
fstpl
dec
jmp
loopne
xchg
sarl
outsl
iret
pop
and
popa
stos
jmp
out
mov
stos
mov
sub
icebp
dec
jmp
rcrb
in
mull
stc
mov
fbstp
xchg
dec
cmp
pop
repz
cmpl
iret
mov
lods
inc
cmp
idivb
pop
ja
xor
ds
and
arpl
int3
mov
rcrb
push
mov
mov
xchg
or
sbb
mov
bnd
mov
pop
mov
xchg
popf
jb
cmpl
es
mov
jg
fcoml
sarl
scas
rclb
pop
adc
shlb
sbbb
adc
pop
aam
jecxz
dec
push
mov
inc
fcmovnb
mov
mov
or
imul
xor
mov
pushf
jge
pop
sub
xor
push
aam
sti
imul
roll
ret
clc
adc
into
es
fsqrt
iret
lcall
aas
mov
sbb
xor
addr16
cwtl
push
push
test
ficoms
fcomp
fcmovnbe
hlt
push
ds
lods
mov
subl
mov
scas
pop
ret
stos
lahf
popa
fisubrs
inc
cmp
push
pop
add
xchg
cmc
jne
lods
mov
outsl
icebp
and
aad
repnz
psubw
ja
pop
sti
pop
push
sub
repz
ret
pop
mov
repnz
int
mov
mov
sti
push
xchg
and
adc
fs
mov
arpl
fldz
cwtl
addl
hlt
ret
outsl
sti
fsubrl
push
sbb
in
dec
inc
jmp
mov
repz
add
cli
adc
cli
pop
sub
outsl
imulb
jns
cmp
dec
jl
pop
fstps
insb
mov
lahf
sbb
nop
lahf
orl
fcompl
loop
pop
cmc
pop
sbb
in
fstpl
test
sbb
mov
ficompl
roll
gs
out
sbb
js
cmpsb
fld
lods
inc
ja
popf
pop
rolb
pop
sahf
mov
clc
repnz
leave
lds
inc
js
lock
clc
xchg
scas
add
addb
or
cltd
lahf
mov
sti
aad
lahf
push
mov
push
aad
out
inc
jmp
outsl
xor
mov
hlt
addr16
repz
xchg
out
aam
xchg
jnp
lds
fisttpll
xchg
xchg
out
mov
ret
jle
push
testl
sbb
lahf
daa
lcall
cld
ret
mov
out
fcmovnu
lea
rcll
aad
std
ljmp
clc
adc
fstl
fwait
lahf
pop
test
es
mov
stos
pop
shl
cmp
xor
sub
imul
xchg
xor
mov
jne
addr16
sti
flds
cmpb
mov
imul
mov
lret
arpl
pop
sbb
pop
xor
jecxz
ljmp
fcmovnb
insl
sub
or
fwait
shlb
outsl
dec
lock
shll
lcall
xchg
shr
shrb
scas
test
das
sub
sti
loope
das
pop
ljmp
icebp
add
mov
lea
pop
stos
inc
mov
cmp
adc
xor
hlt
gs
mov
pop
dec
xchg
sbb
dec
mov
jg
popl
aaa
push
fldcw
psubusb
xchg
scas
pop
aad
imul
int3
pop
ljmp
les
mov
cs
sbb
or
shlb
mov
dec
or
xor
dec
pop
loope
dec
mov
sbb
lahf
mov
add
fnstcw
in
and
cmp
push
iret
cmp
mov
add
sahf
mov
xor
add
or
inc
imul
outsl
mov
push
or
pop
pop
pop
push
or
sub
add
stos
mov
sti
outsl
sub
aad
pop
out
fwait
cmpsb
xlat
pop
jae
mov
and
out
das
nop
mov
mov
icebp
hlt
xchg
pop
lock
or
xor
sti
pop
mov
filds
mov
iret
push
xor
mov
xchg
popf
fmull
mov
add
in
cltd
fstps
jnp
jbe
fistps
imul
pop
cs
mov
lcall
jmp
repz
push
xchg
int
das
ret
rolb
pop
sub
movsb
push
sbb
adc
ret
int
ds
fstps
sbb
testl
mov
xor
shrb
inc
inc
mov
jmp
mov
xor
jge
sub
dec
mov
xorb
sub
cmp
popf
xchg
out
call
pop
lahf
mov
xchg
dec
mov
inc
rcrl
out
cltd
stos
js
out
test
xor
add
ret
jmp
mov
je
mov
add
push
xor
mov
dec
repz
mov
push
neg
ret
push
iret
or
insb
cs
sbb
lcall
arpl
add
rclb
pop
push
testl
leave
fstpl
cmc
mov
mov
pop
stc
call
movsl
dec
add
jp
fnstcw
mov
jo
das
xchg
ja
inc
aas
ret
fnstenv
cmp
mov
fnstenv
mov
mov
sbb
adc
mov
fsubrs
cmp
push
adc
subl
mov
add
out
inc
jl
out
out
cld
aas
jecxz
fistpll
xchg
mov
mov
jle
mov
jg
daa
mov
fistps
sbb
inc
fld
add
mov
sbb
in
sahf
sbb
pop
rorb
mov
push
sub
adc
out
fdivp
dec
adc
dec
iret
iret
mov
pop
out
or
pop
lock
adc
repnz
icebp
cmovp
out
jns
sub
mov
adcb
iret
iret
scas
stc
je
cli
pop
dec
push
mov
mov
or
mov
add
int
es
lret
and
dec
loopne
sbb
and
dec
sub
cs
cli
cli
jnp
cmp
xchg
inc
iret
cmp
sbb
fbstp
xlat
mov
jmp
into
xor
push
push
mov
das
sub
cld
inc
push
jecxz
mov
sbb
loopne
adc
es
stos
jmp
iret
pop
mov
daa
add
aaa
xor
div
and
das
out
pop
mov
cmpsb
adc
movsb
push
push
inc
sbb
int3
jb
fstps
lods
xchg
pop
xchg
cld
fnstcw
fildll
xlat
sbb
clc
mov
repz
adc
fsubrp
push
cmp
mov
dec
gs
pandn
fwait
and
mov
test
int3
fidivrs
mov
push
pcmpgtw
inc
test
mov
mov
out
fdiv
inc
aas
sti
leave
loop
inc
les
xor
test
or
out
aad
loop
ficomps
mov
mov
sub
lods
in
push
xor
imul
lods
sbb
xor
pop
inc
sbb
movsb
cmp
pop
std
outsb
sti
mov
in
jg
adc
add
pop
sbb
sbb
mov
into
add
ror
xor
xor
repnz
mov
divl
ret
inc
rcr
daa
dec
fists
dec
add
add
fsincos
icebp
clc
and
sti
lock
sub
or
push
pop
lcall
clc
jo
test
fistpll
fimuls
scas
clc
js
jno
mov
jg
out
or
jg
sbb
ret
adc
and
sub
jl
sbb
movsb
outsl
dec
cmpsl
aas
or
fadds
mov
pop
jg
mov
pop
fimuls
out
push
mov
jle
repnz
fbstp
and
mov
subl
imul
dec
mov
mov
sub
dec
xor
out
fisubrs
fwait
dec
jle
jecxz
pop
mov
mov
sti
aaa
mov
xor
jl
mov
rol
xchg
cld
aam
cmp
fcmovnb
cltd
and
imul
and
dec
jg
pop
push
jp
out
xor
and
sub
incb
fnstenv
push
imul
shll
leave
movb
mov
sbb
lcall
mov
sbb
inc
xor
dec
mov
into
pop
lods
scas
scas
or
lahf
out
ljmp
es
xor
out
fidivrs
out
outsb
push
cmpsb
icebp
lret
pop
sbb
cmpsl
out
or
leave
cmpsb
aas
cmp
mov
lret
and
das
cmpsb
mov
outsb
stos
ja
stos
imul
fisttpll
aad
fisubrs
clc
and
xlat
mov
jns
pop
add
repz
push
lahf
adc
xor
imull
outsb
lret
inc
jnp
mov
pop
push
cmp
loop
ds
outsl
fstl
inc
lret
lahf
es
xlat
out
sbb
es
sbb
pop
xor
jne
roll
adc
xor
mov
scas
fcmovnb
in
daa
sub
je
xor
pop
repz
aas
inc
fists
fcomps
enter
xchg
iret
jae
loop
pop
ss
lods
data16
movsl
lahf
aas
push
arpl
sub
jg
lahf
cmpsl
and
mov
push
outsl
cli
cmp
jmp
scas
add
xor
xor
rclb
in
push
sub
push
and
jae
scas
cmp
and
repz
xchg
inc
push
out
ror
pop
push
push
es
sub
test
pop
add
sbb
add
mov
out
cmc
test
sbb
and
mov
xor
mov
mov
mov
aas
int
mov
dec
repz
pop
or
dec
ss
or
mov
adc
mov
mov
xchg
mov
jnp
xlat
insb
or
mov
insb
pushf
ja
mov
mov
cltd
mov
out
xchg
mov
imul
xor
mov
shl
push
pusha
push
xor
inc
lods
and
adc
push
xor
ljmp
and
das
cs
sbb
pop
mov
lret
ret
je
fbld
add
sub
sbb
jmp
mov
push
out
out
push
add
sub
add
mov
pop
mov
fisubrs
loopne
mov
lahf
sub
add
imul
imul
push
iret
mov
add
das
stc
ffreep
sbb
inc
mov
mov
mov
inc
bound
popa
add
sbb
inc
sbb
out
add
imul
js
push
sub
mov
cmp
loopne
jecxz
push
fsubrl
stos
and
icebp
jae
mov
in
aas
std
and
in
jg
lahf
sti
sbb
sti
jmp
push
outsb
jp
pop
cmp
mov
or
dec
scas
call
arpl
push
push
cmp
das
jg
ds
mov
movb
push
push
leave
pop
scas
jmp
out
mov
sahf
sub
jae
fsubp
dec
aaa
jg
loop
adc
loop
fsubr
out
cmpsl
fcoms
mov
sbb
mov
popf
js
pop
roll
mov
fldt
jmp
sbb
or
add
unpcklps
mov
add
das
into
mov
mov
jecxz
cld
clc
jp
cwtl
fsqrt
pop
push
pop
jg
shlb
out
push
dec
and
and
cmp
nop
outsb
jle
outsl
icebp
loopne
xlat
mov
mov
pop
stos
shlb
ret
jmp
pusha
mov
mov
je
jmp
jo
fisttps
ljmp
fistpll
outsb
por
roll
push
lahf
lds
pop
repz
mov
or
cmp
add
mov
pop
pop
or
jne
mov
xchg
mov
repnz
cmp
test
xor
imulb
xor
pop
sub
pop
outsl
sbb
mov
idivb
sahf
icebp
push
pop
mull
shlb
pushf
cli
es
xorl
cmpb
add
iret
testl
jle
ja
sub
mov
jbe
outsl
sub
lret
sbb
aad
mov
int3
outsl
jge,pn
cmpb
push
or
mov
fwait
add
add
pushw
mov
or
mov
push
iret
test
pop
pop
or
cmpsb
repz
and
fsts
iret
sub
pop
mov
scas
out
adc
lods
mov
ds
sub
out
out
outsl
sbb
cmp
loopne
sbb
mov
jne
imul
mov
aaa
pop
mov
xlat
dec
sub
nop
mov
or
fldl
in
scas
inc
aaa
dec
sub
loope
int
mov
pop
jo
mov
test
pop
lahf
push
sub
pop
push
cmp
out
push
jmp
cmp
sahf
lret
mov
aaa
js
or
out
mov
in
std
jecxz
jg
outsl
adc
lods
mov
sbb
mov
pop
shlb
sahf
cmp
xlat
leave
cli
out
inc
orl
repz
lds
xchg
mov
shrb
jno
dec
scas
jno
cs
push
lods
pusha
push
sbb
fnstcw
dec
test
cmpsb
cmpsb
push
jae
out
pop
push
cmp
out
jae
pushf
loopne
test
mov
push
fisttps
pop
std
mov
shr
push
inc
fcom
mov
in
xorl
adc
push
fucomp
add
sub
into
std
mov
jmp
idivb
test
push
std
push
pop
sbb
imul
aas
sub
dec
fs
fsubrl
jnp
lds
rcrl
ret
insl
rorl
fmul
aaa
and
popf
leave
sub
ja
ficompl
call
sarb
sub
outsb
inc
rcl
outsl
jno
daa
push
sbb
cmp
or
fstps
dec
pop
mov
xor
jle
vpaddsw
pop
in
scas
mov
and
in
add
movsb
xchg
fmull
sub
and
mov
testb
imul
jnp
cmpsl
hlt
testb
outsb
loop
fidivl
sbbl
adc
xchg
jnp
sub
add
aam
xchg
dec
mov
sub
cmp
adc
std
fnstsw
jne
fidivrl
test
mov
pop
lcall
lock
imul
leave
into
aas
add
test
push
hlt
add
sub
lret
jnp
std
sbb
scas
mov
or
movsl
pop
push
pop
push
fxch
mov
mov
insl
sub
imul
ret
outsb
cmp
dec
add
xchg
jle
push
out
jmp
push
push
pop
aam
push
in
sbb
jge
cmp
popa
cmp
cmpsl
gs
mov
cs
mov
mov
xchg
ja
jg
scas
flds
loopne
mov
lea
sub
jmp
pop
icebp
movb
inc
into
push
dec
rcrb
xor
cltd
cld
testl
jg
sub
or
lcall
out
push
outsl
icebp
lock
and
sahf
outsb
push
mov
xchg
xchg
jnp
loop
jne
test
add
pop
int3
fwait
jg
jbe
sbb
ret
hlt
ds
mov
mov
in
leave
fstpt
mov
cmp
shl
pop
push
sahf
fcmovbe
gs
iret
out
mov
jne
mov
std
fisttpll
shr
pop
cld
mov
mov
mov
pushf
fisubrs
xchg
ja
mov
repnz
int3
jne
mov
into
xchg
or
fimull
cltd
ja
scas
cltd
out
mov
or
xchg
push
sub
push
mov
out
sahf
cmp
push
shrb
icebp
pop
push
test
mov
outsl
cmp
mov
sarl
fildll
ja
cmpsl
jl
pop
pop
fwait
aam
jnp
mov
aas
das
mov
mov
lods
jg
jg
outsb
dec
in
push
fidivrl
pop
stos
imul
sbb
push
jge
ret
cmp
iret
dec
leave
mov
mov
jae
scas
push
stos
mov
mov
xor
push
not
xchg
cli
xor
inc
jb
push
sub
iret
sbbb
dec
push
cmp
pop
test
aaa
addr16
mov
push
pop
into
cwtl
sbb
cltd
aad
mov
mov
cmpsl
push
mov
lret
lahf
dec
jl
pop
dec
mov
mov
loop
cmp
int
out
aas
and
leave
das
cmp
xor
xchg
in
jmp
jecxz
push
mov
or
rol
sub
jl
xchg
xor
xchg
push
sahf
adc
mov
in
fcom
jmp
setg
cmp
sub
jo
ljmp
stos
pop
fldcw
scas
ficomps
int
add
dec
imul
std
gs
adc
aas
lods
aam
mov
rcr
sbb
aaa
dec
loop
in
dec
movsl
inc
bound
stos
add
xchg
fs
xchg
mov
inc
js
repz
ss
adc
mov
lret
mov
ja
mov
pop
cld
sub
push
in
sub
mov
xlat
and
jbe,pt
into
adc
shr
lods
outsb
push
cmp
mov
or
ret
jmp
or
cmp
mov
imul
jne
cmpsl
into
movsl
pop
jne
mov
insl
imul
nop
push
cmpb
icebp
xorl
pop
in
fnstenv
push
sub
mov
rolb
jbe
pop
shrb
arpl
lret
dec
push
aaa
xor
test
lahf
xchg
icebp
sbb
imul
adc
xor
insb
test
jbe
aas
jbe
mov
sbb
mov
stos
mov
inc
mov
call
jg
sbb
sub
jmp
in
cmpsb
fs
outsb
aad
psubusb
das
push
loope
mov
add
dec
mov
dec
leave
push
imul
idivb
push
repz
movsl
shll
pop
mov
scas
cli
sbb
xor
lahf
sub
orb
aas
pushf
mov
cmp
fdivp
jo
adc
xchg
sub
and
cwtl
xlat
or
cli
jb
sub
sub
mov
test
add
insl
lock
testb
inc
dec
lahf
pop
fistpll
ret
out
xor
test
pop
lock
aam
sbb
sahf
or
xchg
arpl
mov
out
in
mov
mov
push
pop
jecxz
mov
pop
mov
add
push
out
dec
pop
push
cmp
iret
cmp
subl
sub
pop
pop
jg
xchg
lods
and
mov
popf
jmp
fnsave
subb
dec
add
push
mov
cmp
das
jl
ja
pop
pop
xlat
pop
add
cld
pslld
mov
ds
or
hlt
mov
mov
jp
aad
mov
xchg
fimuls
aad
cld
jmp
add
jbe
out
mov
mov
mov
enter
das
sbb
dec
mov
shrb
aas
dec
push
jbe
lahf
xchg
xchg
dec
scas
and
leave
lret
fucomp
pop
mov
scas
ret
sub
rol
imul
pop
adc
movsl
iret
andl
scas
mov
jg
and
in
mov
shll
and
jb
dec
cmp
fdivr
lahf
jae
add
push
pop
mov
adc
shlb
fwait
inc
xor
sbb
mov
das
mov
mov
lock
sar
pop
outsb
mov
ljmp
out
inc
imull
mov
clc
in
adc
pop
cmp
push
xchg
outsb
decb
icebp
gs
hlt
adc
or
inc
nop
into
imull
hlt
and
mov
fildl
out
and
or
mov
movd
and
int3
ja
and
mov
dec
cmpsb
mov
xor
xchg
push
cli
push
push
je
ja
sahf
das
pusha
into
add
ficoms
popl
push
pop
aas
out
xlat
iret
repz
fistpl
out
xor
icebp
or
inc
lret
pop
dec
fwait
xor
sahf
das
movsl
loope
add
jg
xchg
push
dec
pop
fnstsw
jg
test
shl
push
cmc
push
es
rorb
push
sub
xchg
sbb
sbb
rcll
and
or
mov
cli
sarb
jno
leave
mov
sbb
mov
mov
mov
add
sbb
xchg
dec
cli
out
dec
sbb
test
in
mov
sub
das
lods
jle
fnstcw
lock
mov
ret
aas
push
in
and
adc
jg
das
adc
test
mov
ljmp
mov
pop
and
ljmp
aaa
xor
push
cld
mov
adc
jg
push
int
mov
aaa
out
es
sbb
xor
out
fldcw
popf
sti
xor
pop
inc
push
int3
out
xchg
repz
lahf
pop
lock
mov
test
adc
sub
iret
loop
pop
push
nop
js
dec
aas
es
decb
inc
mov
test
les
mov
cs
rcrb
scas
inc
test
mov
sbb
xchg
xor
push
cli
xchg
jg
ja
dec
xorb
repnz
shlb
arpl
pushf
mov
jne
push
sub
cli
orl
cltd
sbb
pop
jp
or
scas
add
js
push
cli
pop
lds
aas
cwtl
sub
adc
int3
ror
cmp
sar
mulb
sbb
mov
ret
push
inc
ljmp
xchg
leave
cs
cltd
jmp
icebp
in
cmc
mov
adc
imul
pop
push
imul
push
add
pop
addr16
xchg
lret
sbb
sbb
lods
lds
in
xchg
push
ss
xchg
dec
jp
jne
in
icebp
fcmovne
loop
mov
rcl
and
fidivl
das
negl
jno
fidivrl
movsl
lods
in
mov
imul
and
adc
aas
into
int
ret
sub
xor
adc
pop
mov
outsl
popl
icebp
mov
sbb
push
mov
outsl
lods
in
lea
mov
xchg
mov
ds
mov
icebp
dec
mov
inc
lds
fsts
jmp
push
loopne
pusha
mov
sahf
pop
xchg
in
mov
jb
mov
mov
mov
jns
mov
divb
fucom
xchg
push
ret
sub
xchg
push
sub
sarb
mov
pop
repz
outsl
or
rclb
lods
test
cltd
test
add
shll
je
data16
das
mov
mov
sarb
popl
into
cs
test
pop
call
pop
ss
and
movsl
jno
scas
fisubrl
fisubs
mov
scas
sub
inc
lahf
in
or
rcrb
loopne
adc
loop
sti
incb
sbbb
rclb
mov
cld
mov
xchg
or
xchg
mov
pop
cld
or
mov
and
sbb
aas
dec
mov
cmpl
xchg
xchg
jg
out
sub
stos
xchg
or
or
push
aas
es
ret
cli
rol
pop
je
std
into
lods
cmp
rcrb
icebp
push
jns
out
push
mull
fwait
cs
jg
sbb
out
push
pop
rol
icebp
imul
jecxz
icebp
sbb
push
std
cmp
sbb
std
mov
mov
je
push
sti
mov
outsb
push
test
jl
lahf
fdivp
loope
mov
cwtl
inc
sbb
mov
fisttpl
mov
xchg
pop
push
enter
mov
popf
shll
sbb
movsb
mov
mov
sbb
shll
nop
sub
cli
aas
dec
outsl
scas
inc
int
outsl
orl
jecxz
ret
test
lock
and
sbb
fcmovnb
fistpl
push
push
xor
stos
cmpsb
pop
xchg
dec
jbe
add
jb
sub
int
jg
stc
jp
sbb
xchg
in
mov
cmpsl
ds
outsb
and
daa
jns
and
stc
and
cmp
xchg
mov
rclb
jle
out
fcomi
cld
push
dec
sub
insb
fbld
xchg
orl
sub
mov
hlt
das
ja
dec
jmp
cmpsl
divl
cmp
mov
xchg
mov
cli
adc
in
mov
das
fcmovne
push
jg
imul
into
jns
sti
scas
inc
cmpsl
cmp
xchg
or
cwtl
scas
xchg
add
pop
ljmp
jg
mov
imull
push
in
jg
in
mov
sbb
jne
xor
mov
aaa
pop
std
scas
lds
adc
aaa
out
xchg
push
pop
mov
out
mov
mov
out
insb
inc
mov
push
in
in
cwtl
out
out
adc
pushf
push
into
in
or
add
add
lret
mov
pop
push
hlt
sbb
pmulhw
ret
add
pop
stos
fadds
popf
scas
sbb
lahf
movsl
xor
stc
clc
shl
mov
xor
fstpt
mov
jle
lock
stos
dec
mov
mov
lcall
insl
pop
pop
arpl
dec
and
jne
pop
fdiv
dec
xor
mov
out
sub
cmpsl
xor
incb
and
inc
jp
jg
xchg
jne
add
popf
das
test
lahf
cmpsl
mov
mull
cmp
repz
cltd
dec
push
pushw
inc
push
arpl
mov
lods
std
and
push
xor
ffree
cmp
mov
dec
data16
aaa
xor
mov
adc
lcall
push
adc
fcmove
testb
sbb
cmc
lret
out
mov
outsb
bnd
pop
sbb
jg
push
imul
xor
push
outsb
pop
out
push
inc
into
sbbl
repz
loopne
or
std
pop
loopne
pusha
testl
icebp
xchg
out
add
out
fstps
fisttps
cmp
aaa
jecxz
xchg
in
push
fimull
adc
call
mov
aam
insl
rcrb
scas
inc
mov
push
mov
bswap
cmp
std
rcrl
mov
mov
cmp
cmp
jno
cmpsl
cmp
imul
fsubl
ret
in
push
stos
shl
or
icebp
imul
in
mov
int
ljmp
push
pop
push
mov
ret
hlt
lahf
das
lock
or
sub
movsb
jno
ja
adc
inc
mov
mov
xchg
lea
dec
mov
jmp
sbb
das
push
pop
cs
mov
into
inc
aas
xchg
pop
sub
dec
jecxz
pop
call
sbb
mov
add
out
stc
cmpb
add
push
sub
leave
add
outsl
sbb
into
mov
pop
pop
adc
cmp
lret
rsqrtps
loope
xchg
lcall
out
icebp
adc
push
sbb
es
adc
in
mov
ret
add
jle
push
adc
in
sahf
popf
jg
out
fisubrs
arpl
jl
cli
adc
inc
cs
add
sub
leave
dec
loop
std
setnp
cmp
aaa
ds
mov
out
fwait
repz
imulb
adc
scas
add
cli
and
sbb
int3
shl
lcall
sub
lods
and
push
jnp
imul
lods
push
mov
adc
ret
cmc
inc
mov
jo
adc
mov
mov
movsl
pushf
fcomip
mov
jl
cmc
arpl
out
scas
xor
lods
out
aaa
fdivrp
std
push
pop
aad
push
fst
aad
test
or
push
insl
sbb
out
in
scas
jb
xchg
ffreep
pop
and
xor
mov
stc
scas
ljmp
stos
sbb
pop
cmp
jmp
imul
outsb
mov
outsl
mov
leave
xor
or
dec
cmp
jecxz
sub
push
call
sub
out
add
pop
push
int3
jbe
pop
aad
add
and
mov
call
push
fldenv
adc
jnp
push
fcmovnb
lahf
mov
rcll
test
addr16
cmpsl
notl
inc
add
rclb
neg
sub
int
mov
push
movsb
out
outsl
roll
cmpsb
push
xchg
in
dec
pop
sub
repnz
loopne
or
nop
add
pop
mov
pop
push
add
push
mov
filds
xorl
out
sbbb
aas
dec
fdivrl
inc
rcr
mov
std
mov
add
pop
inc
adc
push
mov
mov
lea
out
fisubrs
push
push
cmp
xor
push
fnstenv
add
ror
repnz
push
outsb
sub
xchg
imul
xor
xorl
add
pushf
ss
and
aad
aaa
mov
xor
mov
xchg
sbb
aas
xchg
imul
mov
or
jnp
rolb
push
add
ds
fwait
icebp
add
mov
mov
fistpll
cmpsl
imul
outsb
iret
in
ret
lds
rorb
movsl
insb
lahf
mov
mov
xor
lahf
jmp
mov
jnp
add
jg
nop
sbb
fwait
test
add
aad
mov
pop
adc
outsb
in
fcmovne
scas
mov
mov
orl
das
push
rcrb
sbb
fldcw
lahf
mov
mov
adc
outsb
iret
out
iret
mov
sub
outsl
sub
fcomip
jns
out
lahf
scas
add
jl
filds
cmpps
gs
mov
sub
movsb
in
out
lock
imul
in
imul
fs
out
paddd
jns
repnz
inc
pop
mov
adc
in
ret
ret
lahf
fdivrs
mov
das
sbb
mov
inc
loope
leave
imul
outsl
xchg
xor
or
jae
imul
lretw
stos
addr16
mov
pop
hlt
dec
or
jmp
mov
lcall
add
push
jbe
or
mov
leave
ficomps
mov
adc
add
jmp
ret
push
jl
aad
aaa
sbb
hlt
dec
fistl
sub
rcrb
pop
cmp
inc
jns
idivb
test
imul
scas
jmp
in
jg
pop
icebp
loope
and
mov
adcl
and
clc
iret
sub
inc
clc
dec
jae
adc
jle
mov
xor
divl
jne
jnp
in
sub
scas
jg
scas
int
push
leave
xchg
fcomip
in
sbb
popaw
aaa
ja
sbb
cli
out
gs
pop
fs
iret
imul
adc
jnp
add
loop
fstl
mov
cmp
mov
mov
repz
dec
scas
pop
popa
rcr
jne
and
cs
cmp
das
push
iret
jecxz
mov
test
xchg
scas
inc
push
sbb
pop
pop
int3
fidivs
in
xchg
or
adc
mov
shrl
aas
jge
push
fistps
sub
imul
addb
cli
push
mov
xchg
cmc
sar
fadd
pop
mov
xor
lds
les
jmp
adc
outsw
fucomi
dec
call
pop
and
lret
fnstcw
push
pop
xor
dec
adc
or
lret
rorb
add
lods
cs
das
iret
add
cmp
iret
xchg
cltd
cmp
cmp
mov
or
mov
mov
or
xchg
repz
inc
cmpb
leave
ret
jo
shll
hlt
push
dec
adc
aaa
in
mov
sbb
sub
int
push
ret
xor
sbb
icebp
cld
rorb
out
stc
inc
fsubrp
sub
ret
adc
mov
adc
imul
testl
mov
push
add
shrb
mov
iret
jno
lret
xor
pop
jbe
mov
popa
lods
lock
and
fldt
xlat
sbb
ss
xchg
push
mov
jmp
mov
push
data16
add
into
popf
lods
push
ljmp
ficoms
mov
lret
add
divb
push
xchg
jno
cmp
cltd
ret
inc
xchg
scas
shl
sub
fisttpl
in
jle
add
add
adc
test
in
lods
pushf
add
pop
leave
jno
sub
rcl
fsubrl
das
push
in
fnstenv
push
pushf
push
fcoms
in
lock
mov
xor
mov
lods
out
sub
pop
clc
adc
xchg
out
mov
cmp
mov
jg
dec
rorl
push
mov
inc
int3
dec
ljmp
scas
sub
ds
mov
xchg
sub
adc
mov
es
mov
dec
mov
decb
jmp
mov
fnstcw
xchg
xor
insb
lahf
push
scas
bnd
enter
cld
scas
xchg
jl
cwtl
mov
jo
dec
iret
dec
aas
movsl
out
fdivl
mov
arpl
hlt
test
sbb
scas
pop
adc
ja
negb
jmp
xchg
stos
pop
xlat
idivl
adc
add
into
adc
xor
pop
das
subb
inc
das
mov
sub
xchg
add
test
je
mov
andb
xchg
es
cmp
outsb
es
push
subb
dec
fistl
xlat
cmc
repz
cwtd
mov
aad
fwait
in
scas
pushl
sub
mov
arpl
in
push
mov
mov
dec
xor
lds
sub
adc
sahf
mov
mov
ror
scas
shlb
dec
push
jne
fsubrs
adc
jb
dec
adc
dec
sbb
stos
pop
leave
push
sbb
cmp
iret
sysenter
cmp
popa
and
dec
dec
in
sahf
cmp
sub
pop
scas
inc
ss
xchg
push
xrelease
lahf
movsl
and
fsubp
sub
push
adc
cmpsb
std
outsb
push
popf
dec
outsb
aam
out
sahf
push
test
cs
mov
ja
stos
cld
sub
add
rolb
shl
jns
ret
out
pop
push
dec
mov
jno
mov
lahf
ljmp
and
fimull
sub
inc
xor
mov
xchg
jg
int
and
clc
mov
or
jne
inc
fnstsw
sahf
pop
sti
mov
jge
push
arpl
daa
mov
imulb
xor
stos
inc
sub
clc
adc
daa
aad
cmp
add
scas
mov
push
cmp
movsl
dec
pop
movsbl
xchg
daa
mov
pop
aaa
push
rorl
fisttpl
test
icebp
adc
sbb
push
fiadds
sub
fldenv
push
push
shrb
push
inc
decl
lock
or
xlat
dec
mov
aad
aas
loop
hlt
in
mov
jae
mov
cltd
push
push
mov
cmpsb
scas
sub
fnstenv
imul
in
pop
mov
popa
mov
mov
sbb
test
jg
ds
insl
jae
cwtl
pop
daa
ret
mov
imul
loop
or
pop
jecxz
or
lahf
sbb
pop
or
add
lahf
imul
outsb
push
fldenv
pop
pop
popa
imul
js
or
or
mov
mov
or
andb
mov
out
stos
and
add
into
popw
bound
stos
pop
das
mov
xchg
jnp
inc
mov
mov
xchg
outsl
fcmovnu
in
xchg
mov
leave
mov
out
iret
fisubrs
mov
dec
or
mov
pop
push
xlat
roll
inc
dec
inc
xchg
pop
scas
jnp
mov
pusha
subl
lahf
mov
out
rcrl
into
sti
mov
adc
adc
push
outsb
mov
testb
or
pusha
mov
jne
mov
int
xor
mov
push
int
scas
add
shrb
xchg
das
imul
stos
mov
sahf
icebp
add
adc
jmp
mov
arpl
cmp
mov
fwait
inc
das
xchg
scas
dec
leave
movb
cmp
loope
arpl
jle
lods
pop
cmp
movsl
push
jecxz
sbb
bound
enter
sub
clc
dec
std
mov
shr
or
or
shrb
or
shr
lahf
push
push
add
xor
jnp
movsl
into
movsl
mov
dec
aad
rcrb
mov
xchg
sbbb
leave
out
test
aad
and
xchg
jnp
cmp
cmpsl
scas
popa
xchg
or
sbb
out
mov
fistps
mov
std
dec
cmpsl
pop
cmp
movsl
cwtl
dec
aas
sub
add
sub
inc
repz
pop
cltd
push
mov
dec
fcmovbe
and
js
jg
mov
leave
fwait
push
out
ds
imulb
leave
push
mov
je
shll
mov
push
dec
cli
fwait
sahf
shl
xor
or
cli
pop
popf
cs
test
aaa
pop
out
add
fisubs
jle
lahf
or
out
cmp
jg
cmpsb
and
mov
test
sbb
mov
sbb
push
sbb
push
and
jbe
ret
in
and
fidivl
clc
ja
iret
jmp
pop
clc
out
divl
cs
jmp
outsl
xchg
mov
std
pop
jg
vphaddwq
add
jbe
std
add
add
add
mov
ret
mov
notb
push
into
sarl
dec
and
sti
iret
pop
push
into
add
dec
stos
std
popl
stos
mov
in
mov
aas
jg
out
int
cmp
in
ficomps
in
cvtpi2ps
ss
into
mov
inc
cmp
jnp
fnstsw
dec
sbb
aad
sbb
inc
dec
mov
imull
test
leave
pop
dec
adc
sti
sub
push
sbb
movb
jb
push
loopne
sub
call
cltd
repz
push
arpl
and
dec
pop
sub
sub
mov
fildll
outsl
stos
stc
mov
fldcw
cs
dec
sbb
jecxz
ret
loope
xchg
xor
mov
call
scas
cmp
mov
insb
sbb
in
mov
jecxz
outsb
mov
add
out
jle
cltd
pop
push
cmp
mov
loop
pop
lahf
rcr
mov
jo
inc
aad
pushf
test
sbb
aaa
mov
push
scas
mov
fisubl
mov
out
lret
sbb
rcrb
jae
fdivrl
out
aad
shl
loopne
sbb
jo
push
cld
int3
hlt
cmp
pop
scas
push
xor
arpl
or
jl
cwtl
xchg
pop
push
nop
add
mov
clc
mov
mov
dec
push
jle
sbb
mov
xchg
popa
in
divl
fmuls
cmc
clc
ficoms
xlat
lcall
das
xchg
movzwl
adc
cmp
neg
pop
or
sub
pop
mov
dec
mov
add
fistl
andb
outsl
rorl
das
sahf
cmc
dec
lods
mov
mov
popf
mov
lret
mov
dec
in
loopne
cld
test
and
cmpsb
mov
sub
dec
cs
popf
mov
cli
mov
push
clc
sahf
adc
lods
and
ds
stos
imul
popf
xchg
enter
sbb
and
push
int
pop
xchg
cmp
dec
ss
psubd
dec
lahf
xor
imul
jns
cmp
fists
je
ficoms
xor
jg
sbb
pop
mov
std
cs
xchg
iret
bnd
out
inc
sub
jg
rorb
sub
out
iret
pop
sarb
pop
pusha
xlat
mov
mov
push
xor
arpl
into
push
sub
es
lods
fcmovnbe
inc
mov
mov
mov
or
dec
inc
fs
mov
add
incb
sahf
mov
out
arpl
cmpsb
imul
and
sub
mov
dec
aas
lahf
leave
xchg
mov
and
adc
in
mov
cltd
mov
insb
push
cltd
in
mov
inc
pop
adc
arpl
in
cmpsb
rcr
push
xor
out
push
inc
fldenv
xor
imul
icebp
hlt
sti
stos
rcll
fmull
scas
mov
movsb
cmpsl
dec
add
cmp
inc
jne
mov
sti
inc
lahf
in
cwtl
dec
push
or
outsl
lret
adc
lcall
hlt
jne
add
insl
push
lret
mov
or
pop
mov
push
popa
mov
cmp
ss
xorb
rcll
fnstcw
mov
out
pop
jge
xchg
stos
jne
sahf
clc
rcr
test
stos
aas
jmp
ds
ss
push
mov
in
out
adc
sbb
mov
gs
sbb
into
inc
add
pop
xor
pop
jbe
add
pop
inc
pushf
stos
aas
dec
xchg
dec
cmp
das
mov
mov
add
outsb
leave
xchg
ljmp
and
ret
mov
dec
dec
or
mov
sarl
jge
std
pop
sub
sbb
ret
mov
mov
push
ljmp
pop
or
xchg
adc
sahf
cmpsl
mov
enter
xchg
jge
and
gs
fwait
xor
push
cwtl
in
mov
xchg
or
aad
sub
mov
cmpsl
sbb
aas
cltd
jg
cmp
push
mov
mov
and
movsl
push
rcrb
in
mov
rolb
or
mov
repnz
pop
jle
testb
mov
ret
int
imulb
cmp
sbb
cs
cli
dec
jle
cmp
subl
mov
out
shrl
push
out
js
xor
push
jnp
cmpsb
sahf
imul
push
hlt
jl
ror
adc
and
mov
inc
in
xchg
xor
cmp
mov
mov
and
imul
jle
xor
jno
xchg
jbe
aas
pop
pop
push
fsubl
adc
arpl
int
in
mov
cmc
sub
repnz
cwtl
adc
repz
mov
cmp
mov
movsb
or
mov
mov
pushf
xchg
push
out
jmp
inc
and
hlt
lock
addr16
add
popf
sub
icebp
push
rcl
add
sub
xor
bound
xchg
in
adc
or
sbb
xchg
mov
mov
push
or
cmp
daa
adc
push
inc
adc
xor
aad
lret
jp
dec
push
aas
push
hlt
rol
mov
dec
mov
in
leave
inc
outsb
mov
lods
add
jb
nop
and
push
sbb
adc
push
fidivrs
xlat
ds
mov
mov
adc
dec
mov
cmc
adc
clc
pop
test
out
pushf
or
aam
dec
jbe
adc
cmp
inc
fucomi
pop
stos
xor
mov
fstl
cld
dec
push
adc
xlat
cmc
xor
cmp
icebp
leave
inc
pop
inc
mov
pop
xor
aad
cmpsl
out
xchg
scas
jecxz
xchg
xor
push
test
test
xchg
movsl
pop
cmpsb
mov
and
push
out
scas
jg
mov
call
pop
cmp
loop
jp
leave
cmpsb
sti
adc
pop
mov
cmp
pop
movsb
call
daa
mov
cli
jne
imul
fldln2
cs
fiaddl
push
gs
jb
aas
dec
out
mov
aad
inc
pop
jl
test
inc
push
and
test
ror
pop
ds
mov
ds
mov
fwait
jnp
leave
scas
xchg
idiv
adc
inc
in
ret
sub
fidivs
cs
push
popf
xor
mov
aaa
sti
mov
sbb
pushf
fldl
add
into
sarl
sbb
fistpll
data16
dec
aad
adc
add
mov
xorb
popl
int
cmpsb
xchg
pop
fisttpl
adc
addr16
mov
test
jnp
and
lcall
fsts
jae
lahf
dec
and
nop
or
outsb
iret
int3
lcall
cmp
cmp
mov
push
es
loop
mov
pop
xchg
xchg
sub
push
fstsw
mov
arpl
xchg
xchg
pop
or
movsb
icebp
push
mov
in
push
aad
and
add
lock
es
xchg
mov
adc
es
fwait
pop
shrb
sub
das
lock
out
xor
je
jmp
sbb
pop
addr16
sti
outsb
fdiv
fistpl
scas
cmp
xchg
xchg
pop
add
cmpb
jl
scas
xchg
lock
cmp
dec
cld
pusha
fidivs
ret
iret
aaa
outsl
orl
cld
outsb
sti
cs
push
push
pusha
mov
jnp
bound
dec
rolb
or
pop
lods
mov
and
jbe,pn
pop
daa
xchg
adc
outsl
mov
loop
jl
ds
stc
pop
je
cmp
outsl
adc
push
xchg
jmp
imul
and
mov
cmp
mov
lret
dec
sub
mov
repz
sub
mov
std
jae
iret
push
outsb
inc
negl
fildl
add
adc
into
mov
sbb
or
clc
push
cs
adc
xchg
push
inc
jb
cmc
dec
outsb
rcll
std
inc
clc
push
xchg
mov
sbb
dec
fistpll
xor
int
xlat
jno
mov
inc
adc
inc
push
enter
mov
fistpll
scas
pop
out
fsubl
push
test
adc
adc
inc
lahf
inc
pop
and
out
mov
cmp
or
mov
jmp
loop
mov
fstpl
pop
xchg
jecxz
incl
add
mov
xlat
leave
dec
dec
lahf
inc
test
pop
jle
lods
cmp
pop
pop
mov
scas
scas
stc
loopne
call
lahf
push
mov
hlt
jecxz
shlb
sahf
test
jl
sbb
shrb
xor
mov
jne
jl
stc
in
sub
pop
stos
sub
imul
mov
xor
and
int3
mov
inc
das
aas
pop
fldl
dec
orl
jecxz
cvtdq2ps
les
add
seto
fprem1
mov
into
test
repnz
jl
dec
jmp
in
sub
cmp
fcmovb
jb
add
mov
stos
repz
aad
sbb
test
push
push
arpl
mov
scas
mov
fnstsw
pop
adc
add
xor
push
adc
add
loopne
movups
das
xor
push
mov
add
xchg
les
outsb
lods
insb
fisubrs
mov
pop
jg
pop
mov
push
clc
push
ds
mov
fimuls
jg
mov
js
or
xorb
mov
jae
ljmp
jne
ds
in
add
aad
mov
pop
ret
sahf
cmp
mov
xor
lods
outsl
add
fs
mov
popf
mov
sub
sub
out
out
jno
faddp
arpl
jae
test
cmp
add
pop
adc
mov
lahf
sarl
cmp
stc
push
iret
addr16
popl
push
jbe
pop
fidivrs
sti
in
aas
cltd
adc
inc
fisubrs
cmp
fidivrs
mov
or
sbb
out
cmp
in
inc
pop
pop
sub
sbb
add
fdivrp
add
pop
leave
sbb
push
mov
mov
scas
jnp
mov
scas
xor
movsb
xchg
mov
hlt
cmc
fisttps
jg
into
push
xchg
xlat
sbb
xlat
inc
aad
outsl
aaa
mov
adc
aas
xchg
push
pop
mov
bound
pop
pop
ret
pop
arpl
xchg
xchg
das
fnstcw
fwait
lock
sbb
sti
dec
sbb
inc
xor
es
imul
xor
xor
lahf
pop
push
ret
cs
push
ds
pop
xchg
cmp
icebp
add
sbb
std
loope
addr16
mov
rorb
pop
inc
jno
lcall
jg
lds
mov
cld
sbb
fsubrl
popl
loop
mov
test
adc
incb
push
fisubrl
negl
mov
sbb
divl
inc
mov
aas
imul
sub
fs
or
mov
pop
mov
jb
int3
in
pop
xchg
push
jp
mov
push
out
adc
xor
sub
sbb
jo
shrb
xlat
xchg
test
jp
cmp
lock
out
inc
out
mov
xor
sbbl
mov
mov
mov
lahf
cwtl
scas
sub
pop
add
dec
mov
xor
or
int3
cmpsl
adc
test
push
sbb
addr16
cmpsl
mov
cli
movsl
mov
jns
fldcw
jecxz
xor
fadds
jg
mov
dec
mov
scas
jg
jns
nop
and
push
in
xlat
push
cmp
pmulhw
out
inc
mov
jge
cmpsl
mov
cmc
xor
inc
stos
sbb
idivl
test
sahf
dec
xor
mov
inc
repz
out
cmp
imul
xor
cli
xor
les
out
cmp
scas
push
xor
clc
dec
add
cld
call
loop
sahf
adc
inc
inc
add
cwtl
fwait
cmpsl
adc
push
cmpsb
loop
ss
mov
cli
aas
jge
pop
pop
rcll
inc
mov
insl
test
jno
lcall
ljmp
cmpsl
lret
imul
leave
int3
adc
movsl
mov
lods
cmp
in
and
cli
xlat
mov
adc
shl
shll
ss
lods
jle
dec
icebp
mov
sbb
jl
fiaddl
fs
sub
jg
movsb
and
pusha
sub
lahf
pop
adc
add
movsl
fldt
xlat
jnp
mov
ja
mov
cli
out
push
xlat
out
les
pop
ljmp
fwait
mov
dec
aaa
arpl
movl
xchg
push
mov
imul
adc
int
xchg
stos
das
push
or
ret
add
mov
push
pop
fstpt
ljmp
pop
push
testb
add
pop
iret
add
add
jnp
ret
cmpsb
pop
repz
cltd
xchg
jecxz
pop
bound
imul
mov
push
std
sub
outsl
and
push
mov
insb
mov
das
lret
add
and
mov
mov
add
pop
push
xchg
lcall
xor
ret
stc
inc
push
push
mov
sti
iret
pop
imull
xorl
hlt
mov
mov
mov
jge
pop
repnz
cli
push
jmp
mov
lcall
xchg
xor
mov
or
adc
dec
mov
stos
mov
inc
ret
call
push
sti
sub
fisttpll
fwait
bound
xchg
adc
or
and
dec
aad
jno
repz
mov
adc
outsb
aad
add
std
inc
inc
cmpsb
fwait
andl
lcall
fnstcw
and
ss
pop
stos
scas
into
push
out
test
sub
cmp
or
insl
in
sub
test
or
ficomps
out
push
test
call
inc
popf
cli
ror
jecxz
cmp
ds
aas
push
cld
rcrl
negb
das
inc
xchg
sbb
mov
jo
repnz
repz
adc
push
inc
stc
xor
ret
or
scas
jle
out
in
insl
xor
cmp
test
mov
ljmp
inc
mov
fsts
jecxz
fs
mov
add
sbb
test
int
add
jg
mov
in
pop
mov
test
jns
adc
jb
fldenv
mov
and
and
push
sbb
fwait
mov
frstor
test
push
sub
out
add
xchg
add
in
test
mov
lods
mov
mov
aas
sub
arpl
mov
stos
shrb
push
add
mov
out
cmp
cmpl
pusha
scas
mov
jmp
or
mov
clc
push
jmp
pop
push
lret
sti
repz
out
in
add
ret
xor
mov
and
sbb
adc
fcoml
push
and
push
or
mov
mov
ja
jg
in
and
add
insl
cli
iret
mov
ret
lds
scas
push
fsubrl
and
mov
outsb
ja
cld
fsubs
out
fidivs
repnz
sbb
jne
aad
fldenv
jo
or
fistps
rclb
pop
dec
push
pop
dec
pushf
mov
add
fcomp
lret
inc
aaa
inc
dec
cs
pop
jo
push
adc
mov
stc
mov
mov
sete
loope
jmp
dec
mov
and
js
xor
jnp
jg
outsl
clc
adc
fwait
or
add
mov
xchg
inc
sub
mov
jmp
xor
loopne
mov
mov
push
xor
outsb
mov
push
xor
ljmp
daa
mov
shrl
mov
cld
aas
subb
jecxz
jl
fldln2
push
xor
ret
and
gs
mov
shll
pop
jbe
fwait
les
fbld
mov
add
mov
loopne
cmp
fidivrs
dec
jg
out
js
sub
in
sbb
inc
int3
mov
test
pop
dec
adc
jno
adc
fmul
rcr
fucomp
pop
stc
inc
sub
sub
leave
inc
popl
out
dec
mov
inc
push
cmp
mov
repz
into
jmp
leave
fistpl
mov
nop
push
dec
adc
insl
or
fnsave
cvtdq2ps
scas
sub
fists
inc
add
xor
pop
outsl
das
insl
mov
out
xchg
adc
or
adc
pop
push
mov
mov
xchg
lahf
mov
pop
cmc
subl
sub
cld
adc
or
mov
push
and
rorl
repz
enter
lcall
js
push
in
std
push
adc
add
cmp
aaa
push
shrb
xchg
rorb
mov
repz
enter
lea
or
xor
push
sub
jecxz
mov
sti
jmp
add
in
push
adc
xor
les
dec
aaa
cltd
or
das
add
add
mov
aas
in
fnstcw
pop
rcrb
mov
mov
int3
and
jg
add
jb
mov
mov
dec
push
adc
fst
iret
aas
cli
sub
rorb
push
popf
adc
inc
and
jg
out
mov
mov
sahf
lds
pop
imull
xor
outsl
test
cld
cmpsl
push
inc
data16
neg
shlb
inc
scas
fists
sbb
ret
cmc
cmp
sub
stos
in
out
andb
mov
dec
pop
push
cmp
dec
fbstp
xchg
roll
pushf
repz
mov
hlt
leave
dec
es
xchg
sub
jae
xor
popf
inc
add
out
sti
jmp
dec
xor
addr16
pop
push
sbb
int
pop
jg
push
fdivl
fildll
fwait
call
out
mov
sbb
mov
sbb
inc
pushf
daa
jg
mov
xchg
pop
test
dec
repz
jmp
testl
fxch
out
lea
mov
mov
out
pop
jg
aas
icebp
dec
sahf
in
mov
adc
cltd
out
aaa
pop
dec
dec
mov
fidivrs
cltd
mov
pop
popa
sahf
jb
push
jmp
mov
out
leave
stc
imull
xor
xchg
adc
cmpsl
adcb
sbb
mov
adc
or
jmp
inc
sub
sub
fistpl
fldenv
mov
fcom
push
mov
in
loop
cs
mov
jg
movsl
push
aas
xlat
and
iret
addl
mov
andb
mov
shll
aam
imul
in
popf
scas
das
sub
push
fcmovnb
add
aaa
lcall
aad
enter
bnd
cmp
mov
pop
push
dec
out
xchg
clc
iret
xadd
pop
adc
push
ret
inc
sub
inc
shr
fistpll
sahf
notl
scas
mov
cmp
adc
in
add
lods
aad
mov
fiaddl
jmp
mov
add
scas
shl
filds
mov
cmp
scas
sub
push
mov
aad
push
adc
movsl
lds
shll
jecxz
sahf
or
mov
jns
roll
leave
out
daa
cmpb
cmp
movsb
fbld
fldcw
fwait
test
testb
add
into
push
into
sarb
mov
pop
out
loop
notl
jmp
repz
xchg
mov
push
dec
insl
enter
cs
mov
cmp
fistpll
sub
and
js
sub
repz
jle
ret
jmp
adc
movsl
fbstp
daa
nopl
lret
lahf
mov
mov
mov
daa
mov
sbb
cwtl
jmp
addr16
sub
pop
or
adc
loope
fs
sub
enter
rcrl
shlb
andl
xchg
iret
ljmp
push
fdivrl
mov
mov
fistl
push
push
mov
jbe
sub
fsubs
adc
mov
hlt
mov
sub
mov
outsb
push
lahf
not
mov
ds
ret
pop
pop
aad
sahf
scas
outsb
dec
xor
xchg
sub
jl
ret
dec
leave
mov
loopne
popa
rcll
pop
mov
or
adc
add
sbb
aad
test
div
enter
ficomps
icebp
sub
int3
cmc
cmpsb
sbb
mov
mov
test
icebp
hlt
lahf
and
mov
imulb
cmp
js
adc
dec
out
push
jge
fdivl
or
mov
cmc
inc
mov
mov
stc
cmc
push
push
fcmove
jbe
js
jns
mov
movsb
jmp
repz
leave
mov
fsts
inc
dec
fiadds
mov
cs
or
cmpsl
jmp
cli
fisubs
xchg
pop
add
cs
add
sub
mov
add
subb
pop
loopne
fdivp
xchg
fsubrp
mov
mov
cs
dec
sub
cli
adc
pop
addb
push
mov
fldenv
or
stc
push
pop
push
mov
jmp
jmp
jge
add
push
sbb
jmp
clc
fnstcw
dec
das
mov
jnp
cmp
out
cmp
sti
imul
mov
into
arpl
in
out
xor
mov
arpl
aam
push
adc
hlt
xor
mov
sub
cli
leave
pop
loope
fcomi
icebp
in
xchg
inc
mulps
cltd
jmp
mov
outsl
dec
xchg
and
jge
push
sbb
jnp
push
movsb
mov
push
jae
sbb
scas
or
out
push
mov
xchg
test
out
push
mov
mov
or
mov
inc
stc
gs
inc
nop
lock
jl
or
sbb
sub
insb
mov
xor
cltd
loopne
pop
fdivl
xor
dec
insl
aam
js
cltd
ss
cmpsb
imul
dec
cltd
cmp
push
add
mov
mov
mov
mov
outsb
pop
rcr
cmp
loop
outsb
ljmp
sbb
push
pushf
add
js
inc
outsl
pop
jo
push
imul
add
pop
xchg
push
add
mov
xorl
pop
add
mov
fiadds
cs
xlat
pop
lods
rolb
cli
mov
add
pop
mull
and
pop
and
fcoml
pop
jbe
test
aas
ljmp
sbb
jge
cmpsl
rorb
mov
scas
or
out
cmpsb
out
ficompl
add
dec
jp
sbb
lcall
mov
lar
dec
mov
repz
push
mov
sbb
push
mov
or
and
aaa
xor
xor
sti
sbbl
addr16
jp
or
dec
iret
mov
or
mov
add
inc
stos
sub
fdivrs
pop
dec
mov
gs
jbe
jg
sbb
mov
out
sub
imull
mov
push
das
addl
adc
loopne
dec
mov
jns
pop
dec
push
sbb
call
jge
lcall
cli
insb
imul
mov
xchg
pop
ds
dec
decb
dec
cmp
inc
mov
pop
sahf
jmp
fildl
mov
shll
in
loopne
mov
mov
addr16
xor
lods
add
pop
push
pop
or
sub
cmpsl
call
adc
mov
mov
jle
aas
adc
mov
add
mov
xchg
addr16
inc
aad
testl
mov
xchg
subb
lret
insl
repnz
dec
stos
scas
sub
nop
sahf
mov
scas
jae
pop
sbb
mov
xor
xchg
xchg
ret
fcmovnb
cwtl
stc
xor
mov
fisubl
and
mov
cmp
in
pop
imul
int
inc
sub
outsb
pmullw
dec
jnp
dec
inc
cli
mov
nop
pop
mov
pop
cmp
into
cmc
popf
mov
je
adc
int
clc
scas
jns
out
fisubrs
mov
xchg
xchg
mov
push
outsb
fsubr
loopne
xor
adc
sbb
fsubrs
jns
dec
xlat
js
aas
out
enter
pop
cmc
xchg
iret
mov
sub
jb
imul
inc
testl
test
add
pop
insl
mov
adc
push
adc
ror
inc
jg
or
mov
repnz
cmpsb
sub
jle
xlat
test
repnz
ljmp
mov
push
das
ss
mov
dec
imul
sbb
ret
outsl
rcrl
in
pop
push
add
fsts
out
adc
push
loopne
push
push
jbe
nop
adc
fcmove
das
leave
ljmp
push
adc
or
cwtl
insb
mov
test
and
xor
outsl
adc
std
jmp
push
sub
jno
sahf
fldt
mov
push
mov
add
pop
jne
sbb
insb
sub
outsb
loopne
mov
xbegin
lods
jae
je
sbb
es
aam
xor
ret
and
je
dec
pop
jo
or
xchg
jle
aas
fs
repnz
icebp
add
push
push
fcmovne
movb
cwtl
cmp
and
adc
mov
dec
testl
mov
mov
mov
movsb
xor
xchg
push
dec
mov
stos
testl
fisubrs
jmp
icebp
sbb
mov
aaa
dec
jmp
push
call
pop
sti
xor
add
mov
inc
out
iret
xor
sub
lahf
push
cmpsl
dec
push
test
leave
push
or
mov
out
das
std
sbb
fistpll
mov
mov
xchg
mov
and
add
mov
jae
adc
sub
iret
add
jnp
repnz
add
adc
andl
arpl
sub
lahf
nop
inc
das
xor
jmp
leave
sarb
test
or
pop
lock
mov
out
inc
cs
xchg
jp
int3
stc
clc
mov
mov
adc
adc
pop
stos
es
arpl
mov
cmp
mov
adc
fmul
mov
aad
int3
sbb
jmp
out
add
movb
and
xlat
aam
jp
cmp
pop
stc
lret
frstor
cmc
lods
sti
xchg
sbb
or
fs
insl
or
push
sbb
js
in
push
in
icebp
push
pop
sbb
mov
sub
in
mov
cltd
xchg
mov
adc
sbb
in
dec
and
mov
sahf
push
loopne
insb
stos
adc
cmp
loop
or
sub
xchg
or
jno
arpl
ret
jmp
inc
adc
lcall
push
push
jbe
out
jb
mov
into
pop
test
flds
mov
lods
fnstsw
cltd
cli
mov
cld
inc
push
cmp
stos
inc
fistpll
fucom
push
jno
test
jno
push
jg
out
data16
gs
add
in
sbb
cltd
arpl
xlat
emms
iret
jg
insl
shll
mov
lcall
imul
pop
mov
scas
dec
js
add
je
jl
mov
push
inc
in
dec
xchg
jmp
mov
push
xlat
cld
mov
insl
fstps
jae
cmp
pop
push
cmp
aam
sub
jo
cmp
fistl
mov
add
xchg
mov
sub
clc
icebp
or
mov
jl
sbb
mov
fstpt
aam
cli
lahf
or
cmp
out
add
sub
lods
push
add
jg
sub
stos
mov
int
mov
push
ja
fisttps
and
mov
xor
or
shrl
mov
mov
js
mov
aas
std
into
add
xchg
mov
jl
ljmp
sub
push
addr16
mov
pop
jnp
pop
mov
in
xor
arpl
inc
in
pop
mov
fiadds
pop
jae
mov
dec
push
arpl
filds
stc
jbe
sub
jo
cltd
jnp
xorb
int3
mov
sbb
cmp
push
mov
mov
cmp
imulb
cmp
fisttps
fdivrp
pop
mov
incb
push
sub
push
mov
push
sbb
rcl
cmp
xchg
mov
mov
dec
ljmp
aaa
test
and
pop
cld
fidivs
sbb
out
mov
in
fisttps
or
popa
pushf
shl
xor
inc
fsubrl
mov
scas
es
imul
or
lea
and
data16
jbe
mov
leave
push
loop
pop
mov
pcmpeqd
add
sbb
bsr
inc
fwait
icebp
add
hlt
mov
jp
sbb
out
es
mov
and
div
xchg
shl
sbb
pop
cli
repz
aas
mov
imul
rolb
inc
pop
das
fisttpll
push
scas
loope
cs
and
into
rorb
adc
mov
jnp
mov
imul
jbe
divb
push
aas
mov
adc
daa
std
jge
lds
jmp
lock
jo
dec
xsave
aam
icebp
sbb
lret
movsb
imul
fcomps
push
push
pop
cmp
and
insl
pop
es
inc
mov
ret
xchg
mov
dec
add
aaa
mov
ds
and
aaa
out
sub
js
pop
jl
pop
xor
fwait
pop
cwtl
inc
mov
iret
fcmovbe
fsubr
fdivp
mov
fcmovu
inc
and
je
jge
mov
jne
xchg
ret
sbb
inc
testb
imul
sub
jno
push
xor
mov
cmc
out
popf
out
add
push
adc
dec
test
lods
jg
imul
fisttpll
mov
arpl
cwtl
add
cmpsl
push
rcrb
mov
jne
pop
push
out
xchg
mov
jbe
and
jns
inc
dec
leave
repnz
xchg
sarb
scas
movb
out
add
mov
rcrb
xchg
mov
rorb
out
icebp
cmp
cmp
arpl
pop
mov
cs
cmpsb
mov
mov
mov
jle
pop
xchg
pop
scas
push
jmp
sbb
imul
rcrl
cmovb
scas
push
fsubrs
leave
sbb
mov
aad
xor
repz
xlat
mov
dec
cmp
add
fst
fsub
scas
mov
sub
inc
mov
inc
push
xchg
dec
lahf
cmpsl
sbb
je
ss
popf
xor
scas
leave
das
push
cs
aad
pop
ret
push
pushf
es
cltd
and
mov
and
cmp
cwtl
mov
sbb
repnz
mov
lret
loop
mov
pusha
push
stc
dec
pop
or
outsb
push
fiadds
mov
in
mov
adc
jns
jmp
sub
push
cmpsb
xchg
sub
xor
mov
xchg
incb
ja
outsb
jg
repnz
fisubrs
dec
roll
pop
jle
xor
jle
sub
jnp
jg
repz
imul
cli
jg
out
mov
add
push
jge
repnz
ja
sbb
xchg
movsl
les
push
pop
popf
sbb
adc
pop
leave
out
inc
lods
fwait
mov
and
mov
cmpsl
jno
test
call
dec
dec
inc
js
push
add
jmp
call
daa
loopne
setns
into
sbb
xlat
out
adc
std
pop
cmpsb
cs
dec
rcrl
jecxz
loopne
popa
aam
lret
sbb
add
pop
lcall
pop
popf
adc
arpl
mov
mov
ror
ret
je
cmp
mov
add
jle
lock
scas
mov
mov
xchg
jmp
repz
mov
ret
mov
jg
mov
jns
xchg
add
lock
iret
xchg
cmp
cld
xor
pop
push
mov
jae
dec
xor
xlat
repz
fcomip
decb
insb
aaa
shl
mov
xor
pop
add
popf
push
pop
popa
xor
sub
jnp
scas
mov
and
pop
xchg
pop
mov
fistpl
jbe
jmp
pop
jae
das
movsl
or
mov
out
pop
nop
scas
jbe
adc
movsb
inc
sarl
ds
dec
pushf
lahf
aaa
push
js
insb
dec
scas
in
repz
and
in
push
and
test
popa
push
out
imulb
push
rcrl
lcall
jg
cld
mov
pop
mov
adcb
insl
insl
call
lcall
lock
cmc
stos
leave
or
insl
stc
jmp
pop
sbb
scas
jle
xchg
jg
or
pminsw
clc
jne
imull
fisttps
mov
iret
pop
repz
cmp
out
loope,pn
fisttps
sub
xchg
out
jecxz
mov
arpl
jmp
jl
repz
cld
or
ss
outsb
cli
jecxz
fcomip
add
jmp
out
jecxz
scas
mov
into
loopne
mov
and
lods
cmpsl
mov
cmc
in
xlat
push
movsb
mov
xor
mov
xchg
cmovp
pop
sbb
and
rcrl
fmulp
inc
mov
scas
xchg
inc
out
mov
dec
outsl
inc
or
push
aam
mov
bound
or
pop
out
mov
dec
mov
pop
ljmp
xor
aaa
xchg
insb
nop
outsb
clc
mov
mov
scas
divl
cli
cmpsl
outsb
pushf
sub
ss
inc
mov
aaa
out
pop
lahf
or
pop
adc
int3
popa
xor
mov
bound
or
scas
cmp
fnstsw
scas
stc
hlt
loop
outsb
jo
aam
mov
aad
ficoml
loope
fwait
sub
jecxz
xor
adc
loopne
mov
imulb
mov
xchg
add
pop
sbb
jnp
ja
mov
adc
stos
fisubrl
pop
pop
sub
orb
out
cmp
in
lcall
inc
test
dec
pop
jbe
inc
in
das
fistpll
sub
fstpt
pop
sti
in
cmp
sarb
aaa
jle
cmp
mov
add
xchg
cmp
leave
jle
popf
pop
push
push
mov
int
push
ds
aad
ret
aam
mov
mov
ljmp
aaa
pop
inc
lods
mov
scas
jle
jg
out
lret
aas
scas
push
movsb
mov
dec
xor
dec
inc
sbb
iret
neg
pop
push
mov
xchg
out
je
lret
cwtl
jge
out
fwait
jl
and
xor
pop
es
rolb
rcl
cmp
fimull
repz
lahf
or
ds
dec
push
xorl
xor
mov
dec
aad
test
inc
mov
enter
out
ja
bound
cmpsl
sub
sub
arpl
shrb
rcrl
jg
cli
mov
rcrb
movsl
cmpsl
mov
xor
jl
das
pop
lea
inc
mov
xor
test
leave
scas
pop
test
into
xchg
lds
out
in
scas
sub
dec
test
rcl
into
in
pop
adc
mov
out
stos
mov
mov
add
mov
and
and
scas
sub
subb
in
sbb
pop
fsts
xchg
fidivs
addr16
push
jmp
xlat
ljmp
out
dec
xchg
push
jae
das
ja
cld
dec
pop
jns
mov
and
mov
ds
push
push
clc
mov
jnp
cmp
mov
inc
rol
mov
xchg
sar
bound
mov
mov
sbb
jg
lods
mov
xchg
mov
iret
clc
lret
xchg
shrl
pop
les
mov
inc
mov
mov
push
sbb
stos
mov
sub
mov
aaa
fstl
jg
mul
repz
stc
jmp
out
jecxz
cwtl
push
scas
fisttpl
push
aam
push
add
add
fcomp
roll
mov
pop
rcl
dec
cmp
dec
mov
stos
leave
pop
xchg
inc
mov
lahf
mov
mov
adc
flds
out
test
sub
clc
js
scas
mov
aaa
sbb
stos
das
in
cmpb
movsl
adc
pop
mov
sahf
icebp
in
scas
xchg
sub
mov
xchg
inc
xor
xchg
es
push
dec
jmp
adc
xor
jecxz
pop
pusha
cmp
pop
fadd
sahf
outsb
jecxz
sbb
out
es
repnz
xorb
sahf
jmp
scas
arpl
inc
fsubp
lds
imul
inc
mov
js
iret
cmp
call
scas
and
or
push
test
inc
imul
mov
imul
mov
pop
and
cmp
in
dec
jbe
fwait
popf
push
pusha
movsl
jg
mov
dec
pop
mov
jg
xchg
call
xlat
mov
mov
sub
mov
jecxz
fistpl
out
jle
mov
jge
cld
mov
repnz
adc
es
cmp
push
jg
xor
mov
out
scas
outsl
add
dec
mov
push
cld
adc
out
dec
fidivrl
xchg
cld
cld
pushf
hlt
fdivrl
popa
mov
fisttps
stc
pop
adc
fwait
lret
sbb
jp
stos
xchg
sub
aaa
scas
sbb
mov
cli
jg
sbb
and
aad
jge
lahf
jl
outsl
and
mov
arpl
xor
lahf
fiadds
push
dec
mov
ror
jns
mov
pop
push
pop
sub
lahf
mov
dec
call
pop
mov
or
rorb
push
adc
dec
mov
adc
sub
mov
jge
mov
inc
lcall
sbb
sbb
test
cli
icebp
shrb
daa
int
loopne
fistpll
out
pushf
enter
and
adc
shr
faddp
repz
mov
xor
das
insb
mov
hlt
jae
mov
lea
cs
aam
out
out
inc
pop
push
or
and
xchg
pop
mov
clc
mov
mov
imul
xor
es
pop
cmpsb
pop
pop
adc
out
imul
lahf
frstor
sbb
out
xchg
clc
pop
cmc
sbb
data16
iret
inc
sti
pop
pop
pop
popa
dec
push
pop
xchg
cmc
negl
xchg
xchg
jne
sahf
scas
jmp
mov
shl
and
xchg
pop
ds
fwait
and
xchg
mov
ja
pop
ficomps
add
mov
leave
dec
jle
jge
bound
pop
ret
shlb
sub
mov
rorb
into
mov
arpl
mov
and
out
xchg
ret
in
inc
and
mov
mov
aam
cld
fildl
out
cmp
xchg
and
rolb
xlat
daa
iret
lahf
jg
cmp
test
xchg
or
jge
inc
mov
mov
jp
out
pop
mov
les
sub
add
iret
jge
fiaddl
repz
scas
rol
incb
or
idiv
mov
stos
jmp
enter
das
out
push
shlb
sub
and
cmp
and
add
aam
cmp
loope
push
iret
mov
jmp
ffreep
scas
mov
in
mov
inc
or
inc
loopne
icebp
push
push
mov
ljmp
int
jmp
movsb
push
mov
in
ja
cli
out
cmc
sub
daa
lahf
rorl
xchg
loopne
dec
dec
xlat
mov
inc
jnp
lahf
mov
fsub
pop
xchg
pop
dec
sub
pop
cld
mov
test
xor
out
fldcw
iret
or
inc
iret
cli
in
xor
ds
popf
test
cli
jl
inc
mov
lods
aas
pop
fwait
in
mov
adc
outsl
jg
pop
push
mov
push
lods
sbb
fcmovnu
mull
out
les
mov
aas
pop
ret
shrl
outsb
ret
xor
rolb
rcrb
jne
jg
sbb
mov
cmpsl
sahf
or
out
mov
mov
out
shll
bound
or
data16
pop
cmpsl
pop
sub
mov
sbb
pop
out
inc
inc
xor
aas
jo
mov
mov
test
mov
je
push
stos
testb
fisubs
hlt
pop
or
add
hlt
lret
jne
push
inc
insl
jg
push
popa
and
add
push
dec
dec
iret
pop
out
cmp
mov
inc
mov
push
jnp
mov
arpl
test
addr16
in
sbb
pop
mov
sub
fistpl
mov
xor
mov
cmp
cmp
pop
pop
xor
cltd
cmc
sbb
in
imul
mov
sahf
push
out
outsb
mov
lods
add
mov
mov
lcall
addl
mov
scas
inc
xor
fbld
leave
into
sub
push
mov
sbb
mov
or
mov
out
mov
imul
aam
fcomi
inc
js
mov
jmp
cltd
cmp
jecxz
xlat
sbb
cmp
cmp
dec
jg
pop
push
lods
mov
adc
out
lods
mov
repz
add
out
out
cmpsb
sbb
inc
mov
divb
mov
stos
push
rcrl
jle
jmp
pop
inc
arpl
mov
les
repz
adc
jg
mov
push
out
sbb
fistpll
sub
hlt
mov
fldcw
mov
xchg
cs
mov
fisubrs
insb
inc
adc
push
gs
mov
leave
sbb
decl
loop
lcall
pop
push
push
cld
mov
lock
in
repz
lods
lret
xchg
mov
out
testl
sti
pop
cmpsb
aad
mov
xor
sbb
in
test
insl
xchg
pop
ret
movsl
iret
int3
mov
outsl
ljmp
aam
iret
sub
lahf
push
ja
fucomip
in
jns
imul
frstor
fsub
sti
mov
mov
cld
or
pop
push
add
push
enter
push
mov
outsl
sbb
fldt
into
or
aam
aas
aad
xchg
sti
dec
dec
std
scas
fucomp
xlat
lock
mov
js
dec
inc
push
cld
cs
pop
jmp
xchg
fcompl
pop
pop
dec
pop
test
xchg
mov
std
js
sbb
push
aad
pop
mov
sti
jp
pop
jecxz
fcompl
jge
shlb
icebp
in
lahf
stc
adcb
dec
out
movsl
push
bound
inc
test
pop
mov
cwtl
sti
push
lock
filds
inc
xchg
stos
sbb
jnp
mov
lcall
repz
mov
scas
ja
out
jmp
shr
mov
jns
adc
test
mov
repz
mov
inc
xor
jns,pn
ret
fildl
pop
pop
pop
jno
mov
mov
repz
dec
jae
xlat
in
pop
arpl
shrl
mov
inc
das
mov
add
fdivl
mov
dec
je
mov
push
iret
xlat
repz
xlat
cmp
adc
pop
rcll
mov
out
stc
and
dec
xor
out
out
push
mov
int
subb
bnd
cmp
mov
mov
js
imul
imul
in
sahf
push
pop
jne
or
sub
cmpsb
xor
dec
pop
ret
adc
imul
pop
dec
jo
add
jecxz
push
cmp
push
and
sub
lret
mov
repz
add
shl
pop
push
cwtl
ja
fnstcw
dec
mov
test
stc
push
push
mov
sub
aas
pop
stos
fcomip
jg
and
mov
pop
pop
xor
nop
and
mov
add
xchg
insl
dec
mov
jae
mov
pop
ja
addr16
sahf
mov
push
int
dec
and
sbb
adc
aas
xchg
pop
adc
test
pop
fistpl
mov
and
pop
ret
arpl
mov
push
in
xchg
adc
cmc
mov
add
das
jecxz
and
filds
lret
clc
push
outsb
cltd
mov
and
adc
lahf
sbb
adc
fwait
mov
mov
lock
aas
cmp
iret
shl
push
jecxz
push
jae
sbb
dec
insl
add
in
sti
rcl
leave
or
pop
stos
sbb
iret
push
cld
mov
repz
add
xor
xchg
or
scas
mov
lahf
adc
jmp
pop
push
inc
lcall
leave
addr16
addr16
das
cld
dec
pop
call
cltd
xchg
add
cmp
popf
rclb
das
and
iret
repz
sti
ficompl
lahf
push
cld
psllq
stc
pop
loopne
stos
xlat
mov
fnstenv
xchg
nop
insl
out
jmp
lret
sbb
insb
or
or
vpmacsdd
push
notl
sub
fcomps
hlt
into
das
int
mov
or
test
mov
pop
cmc
push
jmp
jnp
xor
es
mov
pop
jb
outsl
push
out
mov
out
repz
cld
pop
push
mov
mov
outsl
stc
in
sbbl
int3
sarl
cmp
adc
jmp
push
out
push
jecxz
inc
cmp
xlat
negl
aad
scas
fdiv
out
neg
mov
fisubrl
push
fildl
add
test
adc
loop
das
pop
mov
cmp
pop
and
lret
xlat
add
sub
adcl
leave
push
sti
scas
loopne
lods
fsubrl
ljmp
xorb
repz
and
sti
mov
jg
fwait
jp
push
adc
scas
ds
stos
sbb
shlb
adc
loopne
mov
iret
mov
xor
insl
insl
pop
or
jb
lock
mov
movsl
push
xlat
push
sti
out
jmp
sbb
sbb
add
pop
lock
lahf
shl
push
inc
cltd
rcll
or
mov
sub
test
neg
push
ja
push
fisttps
incb
cmp
xchg
jne
int3
rolb
mov
out
insl
xor
sti
pop
es
fildl
push
mov
fisttpll
jae
outsl
jbe
push
fwait
data16
fldcw
cmpsl
imull
add
add
xor
loopne
out
mov
pushf
js
aam
pop
hlt
fbstp
rorb
pop
mov
aas
jb
hlt
mov
xor
outsl
cmpl
sub
mov
inc
jae
cli
jbe
add
cmp
fdivr
jg
rorb
data16
fwait
mov
mov
mov
jl
xlat
mov
imul
jl
leave
subl
clc
hlt
jbe
ret
jg
cmpsb
or
mov
mov
add
push
sbb
xlat
sub
in
jmp
imul
lret
nop
xlat
ret
push
fnstsw
lcall
add
outsb
insb
add
outsb
jl
jnp
outsb
mov
arpl
xchg
dec
jle
hlt
pusha
ja
arpl
cmc
into
pop
mov
lcall
mov
or
jnp
imul
scas
adc
add
add
fcoml
cmpb
jecxz
xlat
lods
dec
mov
filds
push
pusha
loopne
mov
stos
mov
mov
mov
addr16
out
fcompl
cmpsb
mulb
xor
cld
jb
sub
scas
mov
scas
lods
sbb
xchg
call
and
cmp
fistpll
shl
out
pop
mov
push
mov
pop
scas
pop
add
push
jg
lcall
dec
lret
cmp
in
mov
minps
mov
out
fstpt
lret
ret
fcompl
sbb
push
cmp
lret
pop
clc
jecxz
inc
add
or
and
jge
idivb
add
jg
sbb
scas
imul
pop
cmpsb
icebp
imul
rcrl
or
ds
pop
fs
xchg
cld
js
push
andl
jg
sbb
scas
call
es
pop
xchg
aad
into
test
imull
fists
rclb
into
mov
call
iret
mov
dec
lahf
pop
ffree
test
adc
xlat
fcomi
insl
stos
sahf
lock
sbb
adc
es
mov
mov
jno
cmc
mov
sbbb
mov
pop
dec
outsb
jge
or
jmp
pop
out
cmpsl
testb
pop
das
outsb
pop
arpl
dec
scas
cltd
stc
push
aas
lea
mov
cli
xlat
loopne
dec
inc
mov
stos
pop
movsl
shr
jnp
enter
pop
stos
adc
daa
and
mov
icebp
push
xchg
push
xlat
push
cmpsl
stos
rorl
dec
mov
daa
or
adc
out
push
cmp
imulb
das
mov
jno
sahf
dec
jmp
pop
loopne
ficoml
ficomps
ljmp
scas
or
shrl
ret
cmc
test
mov
repz
lret
jae
cmp
test
ficomps
xlat
pop
loop
dec
jnp
push
jbe
mov
mov
cmpsl
inc
in
fisubl
mov
jmp
test
xchg
icebp
push
pop
aaa
ss
shll
stos
jg
push
out
mov
ret
enter
adcl
scas
sub
cmp
testl
push
mov
ss
pop
pop
pop
cld
or
sub
int
hlt
cmp
cli
mov
cli
jg
cs
jb
adc
xorl
dec
or
out
pop
xchg
dec
jae
shlb
ljmp
insb
push
int
pushf
push
das
mov
aas
fsubrl
jns
cmp
inc
popf
pop
mov
cmp
cltd
xor
sbb
or
fxch
cmp
pop
mov
idiv
iret
pop
add
test
dec
call
lret
xchg
mov
sbb
pop
xlat
inc
and
ret
cmpsb
pop
dec
mov
jno
add
popa
in
aam
ds
adc
jbe
mov
mov
ljmp
mov
mov
jbe
or
xchg
cmc
jo
push
pop
std
pop
and
xor
xor
repz
jo
pop
lahf
out
ja
aam
xchg
sub
jmp
and
jae
lock
leave
in
js
pop
mov
icebp
sbb
ljmp
xor
jle
fistps
adc
dec
in
cmpb
cmp
xorb
daa
fldcw
loop
clc
leave
xchg
push
fdivrs
out
pusha
daa
insl
sub
mov
lock
sahf
inc
cltd
pop
inc
mov
fdivrs
add
push
ret
jmp
fstps
push
push
xchg
imul
mov
jnp,pn
ljmp
cld
mov
rcrb
js
sub
fstpl
xchg
rol
xor
jae
push
dec
mov
outsb
and
pusha
xchg
aaa
sub
ret
cmpsl
jno
xor
pop
jae
sbb
aad
jns
arpl
mov
dec
mov
jno
outsb
lret
leave
xchg
pop
lret
push
fwait
divb
cmc
pop
jne
mov
mov
leave
icebp
outsb
sub
in
inc
outsb
lock
xchg
daa
fstl
arpl
or
arpl
cli
add
outsb
repnz
jnp
aaa
incl
jmp
in
push
pop
pushf
notl
clc
sub
lret
stc
movl
out
lods
sub
pop
in
fst
leave
add
xchg
push
iret
sbb
imul
xchg
lcall
sub
adc
ret
mov
adc
xchg
fcomi
or
jle
lahf
jmp
imull
stos
ja
pop
test
mov
mov
mov
rclb
fildll
xor
mov
scas
and
push
xlat
imul
push
ljmp
xchg
xchg
mov
inc
jns
dec
fnstcw
push
popf
ja
adc
sub
pop
insl
mov
jle
xlat
mov
adc
outsl
add
jae
fldt
push
cmp
out
xor
jb
into
xchg
xchg
scas
jno
mov
xchg
jl
jns
int
decb
mov
lods
leave
mov
int3
imull
add
jecxz
outsl
sbb
sub
lock
scas
xchg
jo
std
rcr
ret
mov
data16
fistps
testl
filds
cmp
loop
sbb
dec
mov
and
pop
insl
cmpsl
ljmp
js
xchg
jp
shlb
fsts
stc
sub
cmpsl
data16
jmp
fstpl
adc
ret
mov
xlat
mov
clc
pop
pop
mov
jle
repnz
sbb
cli
push
xor
call
jnp
jecxz
sub
pop
arpl
clc
shrl
cli
jnp
mov
mov
imul
stc
je
mov
out
repnz
loope
insl
adc
jnp
ror
sarb
mov
mov
mov
jp
xor
push
lahf
mov
sub
fistpll
and
fwait
mov
push
scas
int
cs
or
aad
mov
jecxz
inc
mov
cmpsl
nop
dec
fidivrl
xchg
enter
outsb
mov
pop
and
in
outsl
aam
cmp
mov
repnz
int3
std
jecxz
pop
pop
test
lds
xlat
pop
iret
in
fmuls
nop
out
inc
cmc
xor
mov
imul
pushf
mov
loope
mov
loope
test
lock
dec
cmpsb
jbe
xchg
out
push
pop
das
pushf
cmpsb
inc
sub
leave
adc
insl
pop
mov
mov
out
mov
dec
and
sub
ja
xchg
aam
fcom
push
add
fcomip
push
ja
dec
ljmp
push
cltd
pop
jp
sahf
scas
pop
sub
cli
scas
jl
out
sbb
das
push
ret
push
lahf
aas
push
cs
sbb
in
mov
nop
daa
xchg
sub
div
lcall
push
loop
pop
mov
mov
mov
js
dec
lahf
rcll
fcmovbe
fdiv
ficompl
frstor
pop
mov
and
pushf
loopne
pop
sbb
adc
clc
pop
xlat
out
lss
gs
xchg
mov
insl
bound
xchg
pusha
mov
jb
xchg
xchg
ret
jo
ficompl
and
test
add
gs
add
pop
loop
and
fidivrl
pushf
xchg
mov
outsl
setbe
outsb
lcall
lods
xor
sub
stc
mov
jae
aaa
jae
jo
int3
int
push
scas
ds
lcall
push
scas
sbb
notl
in
and
dec
mov
jnp
xor
and
jg
dec
jno
add
loopne
or
push
sub
pop
or
std
int3
iret
or
dec
xchg
orb
iret
xchg
adc
push
stos
sbb
cmp
xchg
lret
inc
pop
xchg
aam
fimuls
lods
sbb
ficoml
inc
jns
fwait
sub
mov
cs
iret
mov
insl
std
mov
lock
push
sbb
push
popa
sub
add
sub
cmc
icebp
negb
push
pop
frstor
pop
scas
cmpsl
sub
sahf
mov
pop
daa
rol
fucomip
xlat
sti
pop
sbbl
cli
xchg
aaa
scas
xchg
mov
mov
fmuls
repnz
stc
cld
test
sub
std
cmp
lock
push
iret
dec
loope
movsl
repz
sahf
in
jg
cmp
movsb
lods
imul
in
lock
mov
cli
addr16
push
jb
sub
push
mov
add
lock
mov
mov
cs
and
subl
test
xchg
out
sbb
cmp
lcall
pop
out
sub
mov
push
ljmp
out
pop
leave
out
pop
sti
or
lods
std
movsb
mov
in
in
pop
insb
test
mov
psllq
fbstp
pushf
stc
or
sbb
or
sahf
lret
lcall
jbe
movsl
adc
cmp
pushf
pushf
jmp
adc
inc
clc
sub
lods
out
mov
in
mov
rcrb
xor
cmp
or
rep
mov
cli
notb
xchg
pop
scas
sub
test
xchg
dec
lret
xchg
push
das
sti
aad
pop
cwtl
repz
xor
pop
les
xor
xchg
push
js
jne
mov
movsl
fwait
pop
mov
push
data16
cmc
fsub
cmc
ds
fildll
mov
fcompl
push
lcall
mov
daa
int3
jl
iret
insb
stc
pop
out
sahf
inc
mov
cmp
push
fwait
sub
sbb
or
cmpb
and
addr16
dec
sbb
test
pushf
les
cltd
in
aaa
mov
leave
int3
mov
jnp
xlat
aas
pop
lods
daa
add
popf
int3
jmp
cmpsl
add
xchg
push
fstpt
aad
inc
int3
pusha
pop
push
fimuls
mov
mov
sbb
cmc
inc
xchg
xchg
lret
jae
scas
pop
out
lret
lcall
push
dec
jae
push
outsl
cmp
jno
pop
push
pushf
outsl
mov
push
jg
movsl
lahf
jno
mov
pop
loop
pop
lahf
xor
out
adc
in
sub
add
push
jmp
pop
xor
push
mov
and
cld
xchg
adc
filds
push
testb
gs
push
ficomps
sub
lret
and
jecxz
cs
adc
iret
xchg
js
add
out
repnz
sbb
movsl
adc
pop
jg
in
es
cmp
testl
popf
out
sub
fldt
testl
push
add
jp
icebp
outsb
add
sbb
ja
jns
sahf
pop
jle
fstl
inc
xor
add
xor
iret
xor
jnp
scas
ret
icebp
push
sti
imul
cltd
or
int
add
outsb
shr
imul
mov
inc
scas
in
jnp
jmp
sbb
stos
pop
xor
adc
mov
sbb
fisttps
lret
shll
xor
fstpt
repnz
xchg
mov
push
jns
mov
lock
push
ret
frstor
ret
add
ss
cmp
ret
cmp
in
es
daa
aad
cli
hlt
neg
jg
out
mov
xor
pop
fdivrl
fidivrl
jle
rorl
scas
xchg
fisubs
pop
mov
pop
inc
cmp
loop
adc
fisubs
fcompl
mov
into
jp
out
insb
pop
mov
or
ds
lret
push
sbb
mov
mov
icebp
or
in
sub
and
rorl
push
lcall
mov
ficoml
xchg
in
enter
pop
leave
mov
cmp
xlat
stos
mov
xor
jp
lcall
pop
or
inc
and
mov
test
mov
jo
push
not
mov
push
pop
in
push
sbb
xchg
in
pop
dec
mov
loopne
imul
jp
lret
iret
sub
cli
dec
and
lret
mov
cmp
scas
repz
sarl
xchg
sbb
pushf
lods
movq
icebp
pushf
fidivs
pop
dec
pop
fnstcw
xor
fwait
aad
jbe
gs
xchg
xlat
lcall
loop
sti
dec
and
cli
imul
out
cmpsl
aad
in
cld
ret
pop
push
addr16
xor
fldcw
push
lock
out
mov
out
outsl
out
imul
jge
cwtl
push
sbb
add
xchg
int
adc
test
cwtl
jne
in
lcall
xor
jbe
sti
fwait
aaa
fwait
inc
fidivl
dec
test
sub
cli
lret
scas
sbb
sti
stc
mov
cmc
lret
enter
pop
std
sbb
push
push
jl
or
clc
inc
outsl
call
in
sbb
xchg
addr16
ds
movsb
push
addr16
rcr
or
lahf
adc
shr
or
fcoms
sbb
or
ret
and
fwait
std
js
sbb
xlat
in
sbb
mov
out
sub
stc
int
sub
mov
std
pop
shr
and
jp
jnp
out
scas
sbb
iret
out
jg
cmp
call
loope
aad
xchg
fucomip
fistps
test
push
out
imul
fnstcw
pop
orb
scas
mov
jp
mov
mov
hlt
faddl
lret
cmp
fdivs
icebp
movsb
jmp
sbb
cld
or
jg
pushf
outsl
mov
icebp
pop
xchg
mov
sbb
popl
add
add
mov
mov
cli
lahf
subb
cwtl
lds
rcll
cmp
mov
fs
mov
jo
lcall
in
imul
je
icebp
js
mov
scas
mov
inc
cmpb
pop
mov
lods
mov
notb
and
inc
push
cwtl
or
hlt
stc
lahf
ret
push
mov
cmp
xor
ja
mov
ljmp
push
insl
add
movsl
mov
lea
roll
ss
sbb
fnstcw
aad
cmp
and
sbb
sub
je
pushf
sbb
pop
xor
imul
jl
loopne
jne
cmpb
jle
jl
cmp
je
leave
lahf
int3
add
aas
aaa
rorl
mov
pop
out
sti
js
xchg
iret
testl
loopne
mov
sbb
dec
mov
dec
jecxz
out
gs
mov
ljmp
movsb
js
dec
fldt
mov
in
or
insb
cli
leave
shll
dec
inc
mov
sub
mov
or
loope
out
pop
aam
jb
mov
ljmp
fisttpl
mov
into
sub
mov
jae
jnp
jne
dec
push
ror
dec
lahf
leave
cmp
jnp
hlt
lret
or
insb
or
jnp
insb
cwtl
arpl
adc
sbb
jo
jge
cltd
sbb
dec
xchg
mov
mov
xor
mulb
jg
insl
jo
outsl
out
push
push
dec
push
mov
pop
dec
inc
jns
inc
fiaddl
out
adc
scas
ret
mov
out
cs
fldln2
mov
push
pop
mov
lahf
adc
fidivrs
insl
adc
test
lret
sbb
mov
int
sbb
stos
mov
cmpsb
sbb
and
ret
sbb
iret
add
jmp
fbstp
repz
aad
mov
arpl
or
mov
jle
iret
in
dec
out
and
adcb
daa
dec
flds
xor
mov
cmp
dec
mov
cmp
inc
pand
adc
out
jae
push
negl
fucom
mul
jmp
add
lock
std
addr16
js
adc
adc
in
add
ret
imulb
sbb
xor
out
dec
mov
inc
add
jb
xchg
scas
mov
sti
out
sbb
pop
cmp
sahf
inc
mov
mov
lret
pop
js
or
dec
shrb
pop
loope
ds
jmp
or
insl
ss
pop
stc
pop
iret
mov
sti
lahf
xor
dec
imul
mov
mov
mov
outsb
ret
in
mov
lea
sub
inc
mov
pop
adc
lcall
or
sub
push
out
call
stc
ficoml
ucomiss
jmp
sbb
or
pop
xor
fcoms
push
jae
mov
xchg
sbb
push
or
add
fucomp
ret
push
roll
repnz
mov
mov
pop
shrl
in
mov
push
inc
into
jno
push
jnp
adc
imul
jecxz
ljmp
mov
aam
lret
jnp
or
rcrb
fnstcw
pop
scas
cs
mov
into
mov
adc
dec
xor
fucomip
xchg
mov
inc
adc
push
shl
repz
hlt
push
pop
sti
jg
cs
mov
dec
pop
aas
iret
xchg
hlt
ss
mov
jbe
cs
lahf
or
shr
aaa
out
imulb
xchg
xlat
xlat
je
cmc
jle
sbb
cmp
insl
mov
lods
add
xor
out
pusha
fcomps
idiv
mov
jae
idivl
adc
pop
mov
sbbl
push
call
xlat
mov
ret
sub
or
loop
ds
aaa
push
mov
or
mov
shlb
jl
rcrl
movl
push
data16
pushf
lds
rcrl
xchg
leave
push
mov
cmpsb
push
jmp
sub
outsb
sarb
push
sbb
imul
jnp
jmp
icebp
push
jmp
and
pop
daa
arpl
outsl
sbb
aad
mov
lock
dec
lea
leave
out
iret
scas
xor
sub
mov
loope
jne
jns
pop
mov
int
rorb
cmc
dec
pop
in
push
test
into
outsl
xchg
test
add
ret
shll
stc
mov
in
popf
xlat
sub
outsb
inc
mov
add
test
push
xchg
pop
sub
dec
cmpsb
push
movsl
xor
xchg
mov
mov
icebp
sbb
mov
sarl
mov
add
mov
push
xchg
xor
jno
xchg
push
inc
ja
in
or
and
jnp
cmpsb
fnstcw
enter
out
xchg
pop
and
into
cld
fistpl
mov
out
mov
lahf
or
pop
push
push
in
pop
adc
outsb
roll
jecxz
cmpl
jg
mov
out
cld
sub
in
xchg
loop
xchg
or
inc
xlat
add
hlt
jg
stc
adc
cld
xchg
push
mov
pop
repnz
dec
pop
in
cs
pop
shr
sbb
sbb
dec
xor
clc
and
faddl
insl
pop
stos
lret
inc
or
pop
inc
cmp
pop
xorl
jae
mov
jl
psrlq
clc
adc
jae
scas
mov
scas
or
sub
enter
cli
jecxz
xor
idiv
cmp
or
jns
inc
or
adc
dec
arpl
pop
ljmp
jno
arpl
fisubrs
push
add
fucomp
iret
mov
cmp
dec
jbe
mov
xchg
sub
lcall
sbb
xor
push
lcall
pop
add
lods
ja
cltd
loopne
jg
fldt
mov
lret
popf
mov
loop
add
loope
add
mov
iret
mov
lock
or
lahf
fwait
cs
push
mov
inc
scas
in
add
xchg
fnstcw
nop
add
or
mov
fcomps
mov
or
pop
inc
mov
pop
pop
ljmp
push
sbb
test
jno
mov
pop
je
cld
divl
mov
repnz
outsl
push
push
adc
lods
scas
mov
and
scas
sti
std
pop
xor
push
and
mov
mov
pop
push
push
inc
cmp
sub
push
sbb
mov
pop
mov
cmc
xchg
outsb
jnp
adc
jg
cs
push
mov
jns
aas
popa
push
lretw
lret
or
mov
pop
push
xor
jle
aad
mov
pop
out
cmp
jge
ret
shrb
jns
out
mov
or
pop
out
xlat
sub
sub
inc
subb
push
leave
push
add
jp
in
insb
cs
pop
dec
jne
pop
jl
in
mov
repz
dec
data16
clc
jae
adcb
jle
aad
or
shll
mov
lret
fucom
lret
dec
cmp
ret
insb
push
push
mov
rcr
movsl
jg
add
push
sbb
int
stos
lcall
xor
xchg
and
inc
mov
push
movsb
notl
aad
pop
shl
pop
pop
push
icebp
or
or
inc
sub
ja
aaa
divl
push
enter
push
jae
out
leave
testb
movsb
stos
insl
inc
fmuls
not
push
loop
or
add
and
cmp
pushl
cwtl
inc
mov
mov
rcrl
and
mov
xlat
add
dec
sar
std
sbb
cmp
incb
xchg
mov
js
cli
sub
mov
jecxz
into
mov
fs
std
incb
adc
sub
imul
or
pushf
cs
lods
pop
ret
and
sbb
data16
out
das
push
movsl
mov
cmpsb
add
stc
jecxz
lahf
or
add
insl
inc
mov
outsl
ret
lahf
or
mov
hlt
pop
test
sub
mov
sub
mov
clc
gs
mov
fidivs
aas
hlt
out
and
sub
loope
pop
gs
mov
into
adc
shl
cld
sti
sub
mov
repz
enter
mov
mov
call
fistps
xchg
movsb
arpl
mov
iret
out
cli
push
stos
inc
clc
mov
xchg
jg
arpl
xchg
push
lods
add
leave
or
xor
repnz
fstps
repz
leave
pop
out
jmp
aas
lahf
out
push
adc
push
notl
mov
mov
mov
clc
inc
repz
sub
in
clc
arpl
xor
rcll
and
mov
test
std
ja
pop
cltd
adc
push
hlt
insb
jns
jae
and
or
gs
mov
outsl
dec
stc
fcom
mov
xor
aaa
icebp
mov
inc
aaa
mov
out
ss
adcl
sbb
mov
icebp
cld
jg
xlat
insl
inc
fildl
fisubrs
and
fcomps
pop
mov
mov
das
cmpsb
leave
jnp
ja
aam
add
jae
push
and
fwait
clc
pop
mov
mov
push
insl
xchg
fdivs
xchg
into
fldl
outsb
xchg
xlat
push
stc
mov
iret
dec
jbe
bound
or
scas
xor
out
aas
aaa
repnz
cltd
testl
fidivrs
and
imul
hlt
adc
mov
push
pop
xchg
fidivrl
push
jnp
imul
or
jb
shr
cld
dec
sbb
es
jmp
ja
xor
pop
push
cld
mov
andb
lahf
outsb
xchg
adc
lods
pcmpgtw
jb
cmp
repnz
cltd
sub
aaa
roll
pop
cmp
or
mov
shlb
movsl
lahf
cmc
test
rolb
cmp
sub
mov
psubd
test
mov
sub
fsubrs
loopne
rcr
inc
xor
jl
loop
insl
xchg
insb
push
leave
mov
stos
daa
pop
xchg
add
mov
or
sbb
iret
and
mov
and
cli
sbb
or
lret
xor
xchg
lcall
repnz
imul
mov
pop
or
mov
inc
ror
out
addr16
pop
xor
leave
inc
jmp
mov
aam
push
fdivl
adc
mul
pop
outsb
insb
sbb
stos
adc
mov
push
fildll
cmp
rorb
fistpl
push
jb
pop
imul
cli
ja
outsl
cld
inc
in
dec
lret
ds
mov
ja
cli
mov
jns
cld
mov
in
jbe
adc
lds
cmp
arpl
mov
in
push
sbb
arpl
fwait
imul
in
lods
cmp
ja
mov
xchg
cli
inc
adc
pop
mov
sub
cmp
pop
mov
or
outsl
pop
fwait
cmc
lcall
adc
fnstsw
mov
nop
subl
mov
sbb
cmp
mov
or
inc
push
xchg
loopne
in
insl
adc
in
and
jmp
push
pop
pop
mov
jbe
inc
mov
mov
fisubrs
les
mov
cmp
dec
imul
scas
sarb
mov
xor
cmc
rcrb
or
test
mov
mov
repz
fmull
fbstp
imul
cmpsl
out
cmp
aad
andb
mov
sti
sbb
pop
jb
outsl
imul
dec
lock
push
push
loop
add
and
and
or
jp
push
lods
in
pop
js
test
mov
mov
mov
test
push
out
jno
sub
inc
enter
out
add
pop
push
into
rorb
mov
out
xchg
int3
mov
imul
jne
out
aad
inc
test
daa
jnp
push
jg
dec
mov
jmp
loop
icebp
aas
push
mov
mov
aaa
cmc
addr16
xchg
jbe
data16
mov
inc
insb
jo
push
rcrb
fisubrl
mov
push
xor
dec
sbb
inc
xchg
sub
adc
adc
xor
dec
clc
push
cmpsl
adc
imul
dec
ret
pop
push
sbb
sbb
sbb
fistpll
dec
dec
jge
or
pop
pop
sub
ret
int
fucomi
mov
dec
outsb
in
pop
sbb
cmp
ja
int3
ljmp
adc
mov
repnz
adc
sahf
fwait
push
ja
jge
sub
adc
adc
std
add
fucomi
or
fldt
ljmp
jg
aaa
lret
sahf
fistpl
push
cmpsb
jne
adc
inc
icebp
sbb
cli
imull
push
jecxz
mov
xchg
and
clc
cmpsl
mov
push
dec
pop
les
es
cmpsl
leave
fldt
lock
fildll
es
fsubr
out
in
mov
dec
int
cmp
mov
xchg
mov
inc
rcrl
inc
mov
mov
xchg
fwait
push
outsl
lock
sub
adc
outsb
in
sub
fwait
negb
leave
out
jns
xchg
aad
push
outsb
lcall
mov
sub
sub
loop,pn
dec
movsb
pop
leave
mov
adc
mov
rcll
je
cs
inc
insb
cmp
mov
rcr
or
mov
aam
scas
adc
xchg
out
push
and
addr16
stos
out
jmp
cmp
stos
xchg
pop
je
scas
push
mov
push
mov
push
js
sahf
pop
mov
xor
fmulp
shll
clc
in
cmp
scas
aad
cli
adc
cmp
dec
sar
sub
push
clc
mov
addr16
iret
cli
or
aaa
test
lods
ret
ret
movsb
mov
fnsave
jg
outsb
lock
add
or
mov
cmp
stc
xchg
sbb
subl
add
push
sar
sarl
fldl2e
xlat
addb
xchg
imul
mov
xlat
push
cli
fwait
sti
pop
sbb
shll
popf
aad
hlt
shlb
mov
fsubs
sahf
jo,pt
fnstcw
lds
sub
xchg
sbb
test
xor
mov
decb
outsb
sbb
aad
pop
ret
sub
imul
mov
xchg
mov
test
js
into
and
add
adc
mov
sub
test
movsb
mov
negl
repz
add
or
adc
dec
ret
pop
aam
sub
lahf
adc
arpl
mov
xor
push
inc
enter
addr16
roll
pop
dec
shll
dec
imul
push
cmp
insb
mov
stos
push
clc
mov
jmp
adc
lret
pop
add
aas
rorb
cmp
mov
negb
sbb
negb
sbb
push
push
mov
fs
fucomp
pop
js
adc
sbb
popf
mov
push
pop
mov
popa
cmp
aas
and
int
push
jnp
mov
cmpsb
sbb
xor
cmc
sub
scas
ja
inc
jae
aas
mov
iret
pop
je
loope
inc
inc
stos
mov
adc
iret
jnp
arpl
stc
movsl
int3
fstl
clc
lcall
scas
push
cmc
adc
mov
inc
add
xchg
pop
mov
mov
ja
outsl
je
out
scas
fidivrs
icebp
jecxz
test
das
shlb
imul
mov
mov
mov
lods
mov
jnp
push
jecxz
rclb
mov
cmp
jg
add
imul
roll
jg
notb
sbb
and
xor
or
push
shlb
sub
jbe
xchg
pop
lahf
or
pop
mov
pop
lahf
pop
inc
out
inc
std
sub
movl
or
or
cltd
xlat
stos
push
xlat
fdivrl
xchg
fldt
mov
imul
cmpsb
pop
dec
aad
outsl
fiaddl
mov
sbb
pop
aaa
aas
inc
dec
mov
jg
stc
pop
push
mov
xchg
dec
stos
mov
xchg
insb
repnz
dec
jp
jne
sbb
icebp
jns
mov
movsl
ja
inc
cltd
push
fs
repnz
mov
add
icebp
hlt
btc
ja
lahf
sbb
out
test
and
adc
lcall
jbe
push
andl
lcall
out
pop
out
dec
outsl
jmp
lock
bnd
out
fildll
jae
out
mov
movsb
icebp
out
addl
adc
dec
sti
rol
int
notl
mov
loope
sbb
xor
or
mov
loope
push
push
outsl
and
call
cli
outsl
inc
int3
cmp
dec
push
xlat
mov
adc
aam
lahf
pop
xchg
rcrl
adc
rcll
jbe
or
fldl
inc
arpl
lret
or
sbbb
popf
outsb
ss
mov
jg
mov
adc
inc
out
push
js
xor
lods
loop
pop
mov
add
loope
mov
jle
leave
cmp
adc
mov
out
clc
icebp
inc
out
add
jns
xor
pop
mov
popf
cs
ljmp
mov
jmp
jecxz
and
adcb
fsts
sahf
lret
xchg
pop
push
or
out
fcomi
sub
inc
adc
xor
adc
movsb
push
jp
jge
ret
fmull
add
es
jae
mov
mov
xchg
cwtl
imul
ret
jl
xchg
sub
mov
fcmovnbe
repz
cwtl
dec
mov
js
pop
dec
aad
adc
cwtl
dec
test
int
int
push
mov
and
fistl
outsl
mov
lods
mov
icebp
adc
pushf
mov
xor
xchg
clc
cli
jbe
dec
lahf
jg
fldt
jns
pop
sti
or
dec
cmp
cmp
test
push
je
cli
adc
loopne
sbb
sbb
out
inc
adc
leave
pop
pop
jge
shll
into
or
outsl
fcomi
mov
dec
and
scas
dec
fs
imul
mov
cmp
jg
divb
pop
movsb
mov
arpl
rol
and
ret
mov
mov
sub
fnstsw
pop
sbb
je
adc
mov
mov
pop
sbb
popf
cld
mov
pop
pusha
cmpsb
push
decb
leave
and
fsubs
cmpl
faddp
jo
pop
push
test
out
push
mov
insb
out
gs
testl
sub
aam
ret
int
sti
mov
in
std
fcmovnbe
sbb
aaa
and
sbb
fneni(8087
mov
insb
mov
nopl
lret
ljmp
loopne
movsl
sbb
and
mov
jg
pop
sti
sub
sbb
dec
mov
add
mov
sbb
xor
loope
ffreep
add
aas
je
mov
sarl
jae
mov
out
mov
test
jmp
and
out
leave
xor
cmc
xchg
inc
sub
inc
push
iret
in
mov
aam
ja
into
in
sbb
cmp
movsl
into
shl
imul
aad
mov
adc
add
cs
fisttps
in
cmp
xor
outsl
or
push
rcrb
jp
loop
sub
adc
or
xchg
std
and
pop
dec
sbb
popf
arpl
jae
int
loopne
ja
stos
mov
add
cmp
xchg
jo
test
dec
sbb
inc
jmp
andb
mov
aaa
sbb
mov
cmp
and
xchg
mov
fsubl
mov
sbb
clc
fbstp
and
mov
adc
and
xorb
out
or
ds
or
cmp
mov
mov
push
xlat
pop
sub
out
sub
or
cs
sbb
mov
pop
test
dec
ffreep
sub
jae
fcomip
jecxz
lock
sbb
mov
popf
sub
into
ljmp
mov
and
roll
daa
mov
sbb
iret
movsb
popf
or
scas
add
iret
jmp
hlt
iret
pop
fidivl
adc
sti
lcall
mov
adc
sti
mov
add
dec
or
add
add
hlt
or
dec
jnp
imul
fisttps
adc
jno
outsb
inc
popf
adc
push
push
adc
jge
leave
ljmp
sbb
lods
push
in
sar
insb
lahf
ret
test
mov
insl
sub
sub
push
ja
cld
cmp
xchg
sub
insb
testl
xchg
sub
out
sarl
sub
mov
fsubp
add
xlat
cmpsl
lods
push
mov
pop
push
dec
jmp
cmpb
add
sti
jp
cmp
fimuls
scas
cmp
add
push
icebp
rcrl
incl
ja
sbb
imul
iret
rcrb
rcll
jns
pop
xor
mov
mov
aas
xor
mov
jno
js
icebp
add
adc
aad
outsl
pop
movl
insb
data16
ret
add
in
in
adc
mov
jl
sbb
xor
iret
jmp
xor
sti
test
xchg
push
int
ret
scas
stc
sbb
iret
mov
es
adc
int
push
fsts
inc
add
push
decl
cmp
add
repz
sbb
jmp
aaa
scas
rorb
insl
xchg
sub
sbb
and
popf
arpl
cmpsb
mov
scas
loope
adc
iret
pop
xchg
ljmp
lods
incb
cmp
xchg
lcall
es
aad
jp
mov
cmp
xor
clc
sub
iret
test
lcall
mov
das
pop
ds
repz
in
cmpsb
mov
mov
cs
xor
imulb
or
rol
in
xor
sbb
fiaddl
inc
jnp
cs
imul
mov
add
push
mov
into
pop
xor
scas
flds
push
or
cltd
clc
sti
leave
lret
mov
arpl
and
sub
aad
lods
arpl
or
out
push
inc
sarl
shll
test
std
adc
rcl
cs
sbb
mov
std
adc
loopne
scas
jmp
stos
or
mov
scas
fistpll
pop
sub
lods
xlat
outsl
push
jo
cmp
jns
jmp
outsl
push
jno
scas
mov
les
and
les
imul
mov
icebp
sbb
hlt
cmp
in
dec
fildll
mov
mov
sub
imul
idivb
push
idivl
in
andl
ret
pop
rol
push
or
rcrl
add
icebp
mov
push
mov
xor
mov
fmuls
imul
repnz
sub
add
insb
xchg
cmpsb
or
sub
jns
jnp,pn
xchg
sub
test
lock
pop
mov
lret
insb
repz
lock
stos
mov
cmp
fistpll
ss
add
clc
gs
fidivl
subb
fsubs
cltd
cmpsl
dec
loope
jmp
pop
mov
in
push
jmp
pop
mov
jl
sub
aad
xor
jmp
mov
leave
stos
xor
sbb
out
adc
clc
and
repnz
cli
sbb
adc
jmp
pop
divb
add
push
sub
fstl
or
mov
cmp
jnp
jg
mov
sub
fmull
test
mov
test
mov
jns
in
xor
mov
cmpsl
out
les
lods
jmp
push
mov
daa
adc
cs
jg
sbb
std
mov
call
push
fcmovb
cmpsl
or
push
int3
fwait
xlat
xchg
popf
xor
into
sbb
or
jg
pop
and
jp
mov
stos
push
and
ret
pop
lods
push
jl
lret
add
into
cs
sub
lahf
mov
pop
fnstsw
loopne
stos
insb
mov
shll
add
mov
imul
into
sbb
and
ficompl
cli
xchg
mov
and
add
sbb
hlt
jbe
out
scas
stos
bound
jns
aas
mov
or
jmp
aas
inc
loopne
mov
cmpsb
scas
jmp
pop
push
rcll
lods
nop
mov
and
add
in
mov
ret
pop
add
ret
fsts
push
out
test
dec
in
pop
lock
xchg
sub
mov
push
outsl
and
addr16
sub
mov
dec
add
andb
addr16
aas
jae
mov
jp
movsb
iret
out
int
inc
sbb
mov
icebp
xor
stos
shrb
or
fdivrp
std
pop
std
xor
cmp
sub
push
add
pop
lods
sbb
icebp
lods
ljmp
xor
icebp
movl
out
pop
xlat
jns
adc
push
cmc
jg
test
push
sbb
out
sbb
push
das
inc
in
mov
mov
in
rcrl
leave
sahf
push
ror
adc
sbb
jno
jge
sbb
cmpsb
add
jecxz
mov
in
cli
push
leave
icebp
clc
rdmsr
ja
cli
filds
enter
clc
gs
jl
mov
push
in
fwait
cmpsb
xlat
adc
mov
push
into
and
fcomip
sbb
arpl
cmpsl
aad
pop
shll
aaa
jle
sarl
adc
js
sbb
out
nop
jle
fcmovnu
cmpsl
rcll
vpaddsw
xchg
sub
outsl
psraw
psubw
and
cli
sub
jmp
jle
jmp
and
push
out
mov
fiadds
fsubrs
ja
ja
push
sbb
aad
mov
imul
push
pop
push
divb
std
sahf
jp
ret
mov
xlat
or
repnz
adc
push
mov
aam
pushf
clc
mov
add
push
and
xor
or
pop
adc
or
mov
ret
or
addr16
lock
divb
je
daa
pop
imul
out
je
pop
mov
add
sbb
fcoms
sbb
adc
arpl
xor
cs
or
sti
loop
into
into
pop
mov
adc
jo
mov
adc
xor
es
mov
sub
inc
jmp
inc
jnp
lds
pop
mov
mov
mov
dec
lcall
stos
add
in
push
adc
hlt
push
insl
inc
xorb
test
jmp
or
ds
mov
cmp
pop
mov
sub
xchg
inc
cmc
test
xchg
cwtl
mov
adc
out
sub
lret
jns
daa
int
sub
cmp
movb
outsl
sub
or
mov
idivb
data16
cwtl
fnstsw
aad
in
add
xor
ja
or
rcl
push
xchg
pop
mov
aaa
scas
fisubs
jno
ret
push
daa
dec
xchg
mov
mov
jnp
sub
hlt
add
aaa
jmp
and
std
pop
ja
sub
aad
sti
rclb
in
add
sub
dec
fwait
sbb
out
mov
and
les
imulb
int3
lods
cli
jbe
push
repnz
mov
lahf
fldl
fcmovnbe
gs
sub
int3
mov
data16
mov
inc
test
aad
mov
add
out
icebp
shrl
mov
jbe
mov
jle
repnz
mov
mov
dec
and
sti
insb
imul
sbb
jg
lret
pop
std
push
scas
ja
insb
xchg
inc
mov
js
push
mov
fwait
lahf
add
hlt
cmp
mov
cs
repnz
mov
xor
stc
pop
movsl
or
mov
shll
push
pop
test
mov
ret
out
aam
in
ret
sar
repz
out
push
pop
sahf
scas
sbb
gs
mov
repz
arpl
add
cld
jns
jg
push
add
hlt
dec
or
mov
cs
pop
outsb
sub
test
ret
jmp
push
int3
jg
push
pop
aas
lcall
out
lahf
push
mov
test
imul
stc
mov
out
iret
rolb
out
jl
sbb
loopne
mov
jecxz
dec
push
in
add
pop
mov
sbb
sar
jnp
imul
jle
adc
mov
add
jae
stos
mov
lret
sbb
insb
insb
dec
push
mov
sub
inc
insb
scas
in
insl
andl
in
xor
jp
loopne
jo
add
and
adc
les
popf
not
stos
xchg
and
outsl
adc
mov
mov
inc
jo
jmp
pop
lret
scas
out
rcr
psubsw
std
sub
clc
aad
xchg
pop
ffree
mov
xchg
sti
outsb
sub
dec
cld
dec
pop
imul
leave
jmp
pop
loopne
fists
arpl
sbb
ja
push
stc
sub
mov
ss
xor
es
pop
mov
pop
mov
aam
clc
in
mov
pop
jnp
pop
mov
mov
jnp
push
add
dec
jg
sbb
jg
fwait
in
divb
push
cmpsl
push
mov
lret
repnz
mov
or
mov
sbb
xchg
scas
mov
insb
pop
xchg
cs
cmp
fs
adcb
aas
shll
jns
std
sbb
xchg
fwait
scas
push
sysenter
lahf
push
xlat
mov
dec
fstpl
cs
xlat
repz
lahf
xchg
sti
lods
in
inc
cmp
std
or
movsl
ret
scas
xchg
push
mov
inc
sub
jbe
cmp
mov
cs
pop
mov
push
xor
sub
pop
scas
out
cs
push
into
inc
xlat
lock
lahf
imul
cs
ret
sbb
fsubrl
insw
or
int
or
sahf
and
xchg
mov
adc
mov
pop
dec
jp
push
jns,pt
out
fucom
add
popf
loope
mov
or
shll
dec
imull
adc
push
les
pop
aad
mov
mov
ja
jge
mov
jl
out
sti
scas
sarb
shlb
cmp
arpl
jbe
das
mov
pop
or
enter
lcall
pusha
loop
popf
mov
sbb
xchg
fistpll
cmp
push
in
cli
or
mov
mov
adc
add
je
outsb
jo
sub
out
es
sbb
rolb
cli
pop
add
mov
lahf
mov
ljmp
add
pop
cmp
xlat
lcall
xchg
mov
inc
ljmp
pop
pop
insb
or
loop
fwait
int3
imul
jle
dec
sub
lret
cmp
xchg
cmp
sub
pop
or
cmpsb
sti
pop
jnp
shl
cs
jp
subb
jo
mov
cmpsb
ret
lcall
test
hlt
and
repz
loope
and
cld
jl
jmp
mov
pop
mov
bound
dec
sbbb
mov
dec
dec
pushf
in
fdiv
sahf
jge
outsl
mov
adc
es
cltd
into
jg
int
mov
pop
cltd
xor
out
and
sahf
push
cmpsl
dec
out
aam
aaa
mov
stos
int3
pop
mov
push
sbb
repz
inc
out
xchg
sbb
inc
or
or
sub
xchg
adc
push
stos
xchg
outsl
cs
pop
aam
je
enter
or
add
push
push
fwait
lret
lret
std
sbb
mov
ljmp
fisubs
adc
cs
and
sti
add
test
mov
pop
clc
jno
dec
fsts
int3
xchg
mov
add
fcomi
xchg
pop
jle
fcmovnbe
push
xor
cmp
imul
or
fiadds
sbbl
pop
xchg
xchg
popa
pop
imul
lahf
pop
daa
pushf
cmpsb
xchg
mov
push
pop
sub
out
cmpsl
stos
cmpl
dec
aam
push
cmp
cmp
mov
out
sti
insl
jl
push
iret
arpl
fnstsw
fistl
sti
aas
xchg
fdiv
pop
mov
lods
mov
and
pop
jmp
repz
cltd
notl
jg
rol
sub
in
jo
loop
mov
push
mov
test
xlat
das
neg
sar
xor
movsl
cmp
sub
xlat
sbb
addr16
xchg
ljmp
cli
fucom
sysenter
xchg
out
rcrb
jmp
nop
outsl
pop
dec
cmp
adc
mov
add
repnz
push
scas
add
xchg
inc
xlat
lret
xchg
daa
icebp
leave
imul
jae
and
jno
mov
ja
pop
add
imul
cmpsb
sbb
es
out
repz
scas
std
cs
adc
pop
sub
nop
pop
shlb
in
aas
std
jle
stos
arpl
fwait
repz
add
mov
outsl
outsl
lcall
imul
cwtl
sbb
scas
push
out
lahf
ja
fidivrs
fstps
out
loop
popf
stos
or
push
iret
and
mov
repz
push
sbb
int
push
aas
cmpsl
mov
sub
sbb
push
fiadds
scas
ja
es
and
hlt
jmp
dec
cmpsl
push
scas
jle
nop
sub
jle
test
ret
clc
jge
push
push
addr16
or
sub
aad
repnz
sub
jg
add
mov
adc
and
mov
stos
fisubrl
and
lcall
mov
lock
dec
inc
lret
data16
push
testb
cmpsl
fisubl
mov
divl
sbb
xchg
insb
xlat
xor
jmp
cmpsl
jle
out
outsl
xchg
aas
jmp
dec
sub
cwtl
fdiv
cmp
popf
mov
imul
in
and
jp
adc
pop
scas
xchg
or
jg
xchg
mov
hlt
push
iret
or
cs
iret
jl
xor
in
sar
xchg
test
adc
sbbl
repz
ss
repz
cwtl
dec
out
fisubrl
or
test
mov
lock
cmp
lock
ss
xchg
xor
xchg
inc
ficompl
and
js
xchg
jmp
add
outsb
out
outsl
xor
fwait
dec
mov
mov
lret
imul
and
mov
ret
lods
push
loope
cmc
out
pop
mov
repz
inc
scas
fsubrl
cld
and
cmpsl
add
pop
test
mov
mov
push
sub
repnz
push
int3
cmpsl
xchg
lock
mov
mov
xchg
pop
push
cmp
lret
inc
xor
mov
rcll
mov
sub
lret
add
out
gs
imul
add
add
in
mov
pop
pop
lock
mov
jmp
mov
mov
adc
xor
jmp
xor
push
out
adc
fstps
xchg
adc
fldcw
lcall
mov
jo
mov
add
test
std
fpatan
pushf
icebp
xlat
lock
push
push
jnp
sub
pop
inc
test
push
rcll
test
and
call
int
fadd
pop
push
sub
pop
and
stos
push
and
test
pop
sub
jecxz
jo
or
push
mov
pop
jnp
fistps
stc
sti
mov
scas
xor
pop
fmuls
fisttpl
cmp
shrl
arpl
mov
mov
add
pop
cmp
push
cwtl
or
lahf
sub
mov
ror
lret
push
cmc
arpl
dec
filds
jl
psubusw
cmpsb
rcr
push
pop
dec
cs
popa
cs
repz
dec
adc
cmp
rorl
js
mov
cmpsl
dec
imul
push
in
jb
mov
pop
xchg
fiadds
aam
in
lahf
out
dec
fcomip
pop
mov
jns
xor
outsb
stos
adc
aas
movsl
sub
add
adc
call
mov
sbb
add
cli
and
addl
insl
clc
js
jnp
mov
popf
xchg
das
in
xlat
popa
adc
cmp
out
push
sti
mov
cli
sbb
mov
jne
or
jl
dec
stos
jne
xchg
iret
or
lock
ljmp
xchg
insl
cmpsb
add
scas
imulb
or
push
in
jnp
jnp
lahf
and
mov
xchg
mov
aaa
dec
pop
cli
mov
test
loopne
lahf
dec
jae
add
mov
sbb
xlat
ja
and
stc
outsb
fbld
xchg
mov
and
xor
mov
inc
sbb
roll
sbb
scas
sub
push
stos
sub
pop
and
dec
inc
cwtl
loop
sbb
sub
imul
ss
xchg
leave
jg
inc
push
xchg
sbb
in
mov
rorb
mov
add
je
push
and
cmp
push
push
adc
popa
sbb
insb
sub
icebp
adc
in
xchg
cmpsl
dec
jge
arpl
mov
mov
inc
xor
enter
pop
aas
ficoms
testb
sbb
test
mov
xchg
pop
dec
adcb
sub
push
adc
jae,pt
push
mull
into
arpl
sarb
xor
faddl
popl
clc
das
pop
iret
mov
out
sub
sti
inc
pop
in
inc
xor
in
push
xor
pop
sub
loopne
jnp
jl
scas
pop
int3
jecxz
dec
fildl
xchg
push
push
jg
add
pop
daa
repz
lret
arpl
push
add
lods
subl
pop
jo
mov
xlat
addr16
cmp
cmp
jno
pop
repz
ds
jg
mov
lea
push
out
lret
mov
loopne
test
popf
lahf
out
dec
sub
or
cmp
pusha
and
iret
aad
inc
cmpsl
add
adc
sar
fistpl
fidivs
fucomip
imul
sarb
neg
vmovlps
pop
mov
sub
lds
aas
mov
rcl
icebp
je
std
cli
out
rcl
subb
out
mov
sub
and
add
adc
outsb
xor
push
clc
fistps
jae
mov
jle
mov
stc
inc
in
lock
mov
stos
mov
or
xchg
pop
adc
mov
jg
ljmp
or
jae
clc
cs
stos
mov
outsb
add
fcmove
or
leave
pop
loop
icebp
xchg
repz
jg
mov
xlat
lret
rcl
pusha
sub
out
repz
scas
testl
jo
xchg
lds
pusha
pop
fsubr
pop
ror
or
lret
cmp
sbb
icebp
je
notb
clc
xchg
mov
jge
fstps
ficoms
xchg
mov
in
push
sahf
scas
mov
lret
dec
or
mov
pop
pop
xorb
mov
cmp
and
rorb
addr16
dec
ja
outsl
out
ja
outsl
idivl
in
sahf
pop
xchg
cmp
adc
aaa
js
pop
icebp
mov
ficoml
mov
idiv
sti
iret
push
clc
mov
and
mov
and
out
fld1
stc
jmp
push
ficompl
jecxz
cli
mov
cmp
push
push
mov
jae
fidivrs
popa
jecxz
xchg
mov
shrl
add
shr
mov
mov
cmp
scas
mov
cli
sub
ret
mov
adc
sbb
aam
adc
cmp
sbb
or
pop
jp
cmc
adc
push
or
imul
fmull
xor
divb
out
jl
repz
jae
ja
sbb
mov
adc
jmp
iret
mov
popf
aam
mov
aaa
inc
sub
push
inc
dec
jg
cmpsb
sbbb
pop
mov
and
mov
xchg
add
movsb
pop
popf
pop
idivl
les
in
mov
fcomi
shll
sahf
ret
mov
lds
fsub
shrl
jmp
int
lcall
or
mov
dec
int
push
mov
repnz
jmp
repz
ljmp
data16
mov
repz
mov
adcl
jle
pop
push
sbb
ret
xor
push
fisubrs
xchg
jo
neg
negb
lahf
push
stos
enter
push
ret
popa
dec
mov
sub
fld
imul
mov
jmp
rcll
hlt
test
std
pop
add
push
mov
inc
enter
insb
cs
insb
cmp
scas
sub
imul
pop
adc
sub
mov
or
int
iret
or
mov
imul
mov
outsl
hlt
pop
cli
jg
jno
pxor
adc
fistps
bnd
lcall
cld
repz
xchg
fmulp
jnp
pushf
fdivrs
xor
leave
cs
sbb
lea
push
dec
sbb
adc
dec
xchg
or
jmp
jmp
cmpsl
movsb
xchg
mov
or
int3
mov
imul
mov
gs
jmp
jmp
mov
data16
ret
std
movsl
pushf
inc
sahf
dec
shll
js
inc
stc
or
push
inc
arpl
cmpsl
xor
jg
jp
test
push
data16
push
arpl
mov
mov
fstl
jecxz
jmp
lcall
mov
jnp
cmp
iret
das
outsl
std
ja
ret
out
fsubs
outsb
icebp
push
mov
mov
xor
int3
pop
movsl
push
invd
and
xchg
iret
mov
std
idivb
icebp
clc
out
cmc
xchg
ffreep
push
pusha
vpunpcklqdq
inc
hlt
jb
outsb
cmc
insb
cmp
dec
mov
arpl
cmpsl
ja
pop
shll
je
imul
ret
add
fiadds
das
scas
lahf
adc
push
add
dec
jnp
cmp
ret
ret
push
imul
inc
lcall
lods
cwtl
dec
adc
insb
bound
jge
xlat
nop
outsl
dec
aas
mov
xchg
push
or
mov
mov
icebp
xchg
xchg
xchg
mov
fimull
mov
push
das
push
jp
imul
repnz
rcrl
add
xor
or
out
scas
pop
loop
xchg
repz
out
and
lret
stos
cmc
lea
xchg
pop
jno
pop
sti
inc
imul
out
fcomi
or
cltd
lods
adc
imul
aam
ficomps
in
cmp
xchg
sti
lret
fmull
test
fidivrl
xchg
cld
lret
sub
cld
imull
xlat
pop
into
pop
cvttps2pi
push
add
mov
aas
cmp
xor
rcll
shrl
stos
scas
push
iret
loopne
jle
cli
push
push
cwtl
dec
mov
daa
or
add
pop
cmpsl
fistps
jbe
push
add
mov
fiadds
out
xorl
iret
lret
sahf
fwait
push
mov
inc
jnp
mov
es
mov
mov
jmp
repnz
outsl
and
sarb
xchg
or
or
pop
or
pop
arpl
std
adc
and
aad
jp
rcr
data16
mov
and
push
filds
jle
aad
push
outsl
xor
cmpsb
xchg
xchg
inc
inc
push
mov
shr
sub
pushw
popa
or
cmpsb
jmp
or
add
cmpsl
jge
mov
pushf
shl
sub
and
dec
adc
pop
sbb
or
inc
out
cld
ret
icebp
in
jbe
fcmovnb
pop
std
jmp
repz
sahf
lock
std
sbb
rol
stos
xchg
xchg
fsubl
bound
cwtl
push
sub
rcr
daa
xor
outsb
movsb
inc
cwtl
dec
mov
aaa
mov
leave
push
fbld
jno
xchg
inc
mov
aad
das
sub
imul
push
imul
xlat
mov
aaa
movsb
pop
addr16
lods
fsubrp
lcall
pop
sbb
stos
lret
or
mov
cli
mov
sbb
fcmovne
out
sbb
rcr
cmpsl
test
mov
dec
iret
es
es
mov
pop
lea
fdivrs
mov
fists
xchg
cmpsl
das
pop
loop
ljmp
pop
scas
pop
pop
pop
loop
scas
je
movsl
outsl
mov
dec
fmul
mov
jmp
inc
or
sbbl
fmull
pop
mov
jmp
lea
sub
fstl
aam
push
dec
insl
aam
cmpsb
rolb
sbb
adc
jmp
repnz
mov
outsb
mov
lahf
jl
lds
in
scas
shrb
int3
cwtl
ror
popa
dec
andl
pop
cmpsl
out
std
shl
insl
mov
push
mov
int
mov
dec
scas
int3
xchg
mov
xchg
insl
jnp
test
dec
cmpsl
xchg
mov
insl
fildl
sub
fcmovnbe
push
test
cmp
jne
sub
fldl
out
enter
dec
insl
xchg
fwait
sbbb
out
pop
cmpsl
jmp
lock
mov
jno
imulb
test
les
les
rcrb
and
pop
cmpsl
out
lods
shl
insl
mov
push
fmulp
ljmp
inc
dec
xor
adc
into
arpl
pop
jbe
std
mov
repz
cmpsl
mov
cwtl
xchg
xor
mov
and
pop
loope
out
push
mov
in
pop
pop
in
iret
mov
arpl
loopne
jnp
out
mov
xchg
in
dec
mov
out
cwtl
pop
mov
or
insb
xorb
jmp
adc
les
cmp
add
je
add
testb
push
testb
add
jnp
pushf
testb
dec
add
mov
or
addr16
stos
outsl
pop
push
add
dec
stos
push
mov
jl
cmpsl
sub
hlt
pop
pop
stc
jmp
jmp
pop
rcll
xor
sbb
in
sarb
add
jecxz
fucomi
xlat
ret
in
mov
inc
xchg
ja
lret
out
arpl
cmpsb
jmp
fists
lea
mov
lret
xlat
push
pushf
and
cmpsl
ret
fstpl
lret
pop
or
rorb
pop
icebp
sbb
and
out
sub
movsb
pop
test
xchg
into
fimuls
lcall
cmp
jne
hlt
mov
arpl
fbstp
in
into
das
mov
xchg
pop
add
icebp
out
cltd
faddl
out
clc
or
stc
call
insl
in
iret
pushf
mov
sub
push
pop
sub
mov
lea
icebp
pop
sti
sub
mov
lcall
sbb
pop
imul
movl
jge
aas
sbb
aas
loope
mov
cs
in
mov
cld
mov
pushf
int
sub
bound
shll
das
sar
outsb
mov
or
popl
testb
lcall
popf
fstps
mov
out
addr16
inc
pop
mov
aas
xchg
lock
xchg
shrl
arpl
sbb
aam
lds
mov
pop
mov
jg
or
mov
pop
push
sbbb
jl
jg
or
xchg
adc
ja
cmpl
mov
adc
mov
and
adc
adc
pop
lds
iret
sahf
int
xor
xor
jl
sub
sub
sub
dec
movsb
fdivrl
sub
mov
stos
add
cs
stc
mov
mov
mov
sub
faddl
aas
fisttps
out
ds
xlat
in
xchg
push
and
adc
push
test
addb
pop
psubsw
leave
stos
das
fisttps
mov
jle
adc
arpl
jo
mov
sbb
cmpsb
pop
or
mov
fsts
xlat
out
je
xchg
mov
or
mov
mov
outsl
sahf
inc
enter
jle
mov
cwtl
sbb
and
sti
inc
pushf
adc
cmpsb
testl
add
or
jmp
ss
shl
sbb
add
xchg
mov
mov
mov
in
inc
cs
fistpll
popa
mov
stos
pop
mov
pop
lcall
pop
fwait
push
sbb
movsl
pop
fbstp
sub
mov
add
add
sahf
fildll
sbb
or
mov
sub
and
sbb
sarl
lds
add
lods
lock
push
xchg
mov
lcall
mov
push
mov
outsl
inc
mov
pop
shlb
sbb
iret
dec
cmp
gs
pop
fstps
das
iret
sub
ljmp
aaa
fistpl
jmp
mov
push
repnz
add
movsb
das
and
pcmpgtb
imul
insb
out
xor
and
or
pop
sub
inc
jle
sub
fcompl
out
and
in
sub
popf
test
leave
xchg
push
scas
addr16
pop
mov
mov
in
imul
ss
cmp
out
cmp
in
mov
pop
outsb
out
push
imul
in
cmp
inc
and
loop
out
sbb
std
stos
and
outsl
jae
dec
outsl
pop
fistps
cmp
int
inc
sarb
inc
mov
add
mov
pop
pop
adc
mov
add
mov
out
pop
ud2
cli
mov
mov
mov
psubb
in
inc
mov
mov
mov
xor
ficoml
cwtl
sarl
ss
dec
icebp
and
out
lods
in
insl
and
mov
push
mov
mov
add
cmp
fistl
add
arpl
mov
inc
push
push
or
hlt
adc
pop
imul
adc
jae
xchg
cmp
movl
xlat
add
ffreep
or
or
iret
into
jle
jg
mov
frstor
push
jmp
xor
ljmp
mov
das
mov
gs
ss
cli
in
div
adc
pop
mov
fildll
xchg
jle
mov
mov
mov
and
mov
data16
icebp
push
dec
push
inc
popf
inc
mov
push
add
fdiv
sub
cld
mov
xor
stos
decb
fidivs
popl
mov
and
sbb
shlb
mov
add
pop
outsl
xchg
jb
xlat
jmp
mov
sub
in
lahf
jmp
std
push
mov
and
sbb
inc
rorl
lahf
adc
out
scas
push
ja
mov
adc
lock
rcl
rcll
inc
les
add
xchg
push
dec
mov
jmp
add
ds
or
mov
repz
pop
cmc
scas
mov
jbe
in
push
jecxz
mov
sbb
hlt
jnp
xor
mov
mov
cmp
flds
jg
gs
or
adc
movsb
xchg
or
pop
ret
sbb
loop
push
mov
out
push
and
rclb
lret
jp
sub
outsb
add
pop
dec
leave
push
out
into
sti
mov
push
jg
es
jmp
rclb
sbb
sub
lret
and
hlt
push
push
outsl
mov
cltd
mov
shll
testb
or
fadds
imul
push
fldl
cmp
lcall
add
push
xor
push
test
xchg
roll
out
fdivl
aaa
pop
popf
jnp
and
mov
xor
adc
mov
jp
xor
lods
pop
push
sbb
popf
aad
add
mov
popf
pop
lret
mov
aaa
addr16
push
shll
jg
lret
pop
in
scas
push
pop
inc
mov
loop
std
cs
cmp
push
aad
mov
xchg
ds
out
je
fistpll
and
xchg
inc
movsb
or
sub
adc
sti
ds
pop
sti
ret
rcl
adc
insl
mov
out
mov
je
imul
pop
inc
mov
xor
mov
xchg
jmp
and
aaa
in
test
fsubrp
cmp
imul
push
icebp
lahf
push
sub
push
push
ficoml
imul
mov
icebp
stos
insl
and
jb
and
inc
in
nop
mov
or
cmpsl
push
adc
pop
lods
mov
xor
hlt
cmc
imul
ret
add
fisubl
pop
repz
pop
xor
cs
aaa
inc
in
and
sub
fs
ja
pop
fxam
inc
xor
fidivl
mov
push
lret
mov
ss
sub
and
loopne
adc
pushf
xchg
pop
in
push
dec
or
or
mov
mov
xchg
adc
cmp
fiadds
add
mov
sub
cltd
dec
xor
ljmp
jg
daa
fimuls
jmp
pop
in
test
rolb
sbb
pop
sarl
stc
add
add
shlb
cwtl
scas
ss
fadds
cs
pop
dec
jns
add
xchg
mov
sahf
fwait
mov
cmp
xchg
cltd
push
lds
scas
ljmp
xchg
cli
or
repnz
sub
mov
arpl
fsubl
push
mov
or
inc
out
rcrl
shll
mov
arpl
xor
mov
xchg
lods
iret
jns
hlt
scas
cmp
pop
lahf
mov
clc
bound
xchg
xchg
jg
popf
popf
dec
push
mov
mov
xor
rcrl
insb
out
gs
enter
rorl
test
cmp
ret
jmp
jecxz
jae
gs
fbld
lahf
cmpsb
cmpsb
jmp
pop
pop
out
ss
cltd
sahf
cs
push
pop
das
jg
ds
pop
lret
push
mov
out
pop
cmpsb
daa
negb
addr16
mov
hlt
cmc
dec
out
mov
loop
outsb
mov
lods
push
push
adcl
jle
cmp
sbb
add
mov
subb
cmp
fsubrp
xchg
je
ja
fidivrs
ds
push
mov
push
jbe
mov
pop
ljmp
push
add
adc
jp
out
repz
cmp
dec
aaa
test
add
ss
clc
hlt
add
xchg
jl
mov
add
dec
clc
pusha
ja
out
mov
mov
mov
jge
sub
test
inc
pop
mov
lcall
pop
xorl
hlt
lcall
jle,pt
xorl
pop
cmpsb
into
jae
cmp
push
shll
into
cmp
into
ljmp
jns
mov
pop
mov
pop
push
jecxz
sbb
imul
mov
xchg
out
leave
sub
pushf
dec
int3
mov
lock
lret
add
sub
jp
out
push
inc
or
out
lcall
push
pop
add
inc
and
shl
ret
or
push
stc
shr
mov
push
pushf
in
inc
fstps
addb
pop
jo
sub
xchg
in
and
adc
push
shll
ret
clc
inc
cld
push
and
cmpsl
sti
std
xchg
test
ljmp
cmpsl
sub
xchg
in
jae
gs
mov
sbb
popa
lock
negl
mov
dec
mov
shrl
push
jb
vmread
pop
negb
addr16
mov
imul
xchg
mov
fcompl
shrl
test
mov
mov
xchg
mov
mov
cld
scas
aad
mul
rcrl
jb
jl
mov
pop
xchg
xor
out
fmul
clc
movsl
testl
jl
jg
out
add
pop
add
sti
xchg
mov
mov
mov
fidivl
stos
jge
out
scas
mov
push
ja
negb
xor
jne
mov
scas
push
aam
push
mov
ljmp
mov
leave
sub
adc
pop
mov
ljmp
push
dec
pop
fildl
in
fists
mov
pop
hlt
ds
ljmp
in
lea
sti
pop
leave
out
xchg
adc
mov
rcl
test
in
pop
xchg
in
push
mov
push
out
shll
fldcw
data16
jbe
out
mov
xor
out
ja
ret
mov
and
lret
out
xorl
xor
imul
movsb
add
mov
jge
leave
push
fdivl
mov
imull
int
mov
mov
subb
sub
pop
push
lea
call
leave
mov
pop
jg
int
stos
mov
or
xor
in
dec
ret
add
mov
ror
outsl
jmp
inc
push
mov
or
ret
arpl
pop
in
xor
cli
seta
std
js
loope
xor
sub
push
mov
cld
xor
pop
jecxz
push
cmp
jmp
ja
mov
add
clc
fcoml
mov
out
xchg
inc
adc
je
mov
add
mov
mov
stos
daa
jns
lcall
mov
xchg
gs
pushf
dec
xchg
ret
xlat
jno
aad
add
fisubrl
push
adc
jl
adc
nop
pushf
or
sbb
pushf
pop
insb
nop
in
fdivs
jnp
cmp
ljmp
nop
repnz
pop
fnop
xchg
sbb
mov
gs
jae
xlat
push
mov
iret
loop
int
mov
xchg
dec
loop
jns
mov
iret
and
fcoms
pop
and
enter
adc
mov
or
icebp
imul
lock
in
mov
mov
lret
cmp
or
push
addl
test
sub
mov
test
cmpsl
scas
push
pop
leave
inc
inc
test
sbb
push
push
sbb
rcrb
sub
int
out
mov
fnstcw
rol
rcr
cmp
movsl
mov
lret
out
xor
cmp
leave
popl
rsm
sub
cmpsb
or
sbb
xchg
mov
hlt
jo
adc
icebp
stc
add
repz
mov
xor
lahf
fildll
into
jg
xor
adc
std
rcl
cmp
into
imul
and
mov
pop
mov
cmp
jl
jnp
orl
out
das
lcall
repz
fbstp
sub
adc
stos
iret
test
int
cmp
popa
scas
jo
sub
sub
sbb
clc
adc
daa
lods
push
call
xchg
test
imull
rcrl
fstps
and
movsb
imul
xchg
jb,pn
les
idiv
icebp
adc
popl
inc
and
repz
sub
xchg
ret
sub
jl
orl
jbe
cmp
fs
dec
pop
fld
iret
psubb
outsl
sub
sub
into
push
shrb
sub
out
jnp
rep
xchg
mov
add
adc
xchg
jle
jg
mov
sub
clc
fwait
xor
or
cmc
jle
mov
fistpl
inc
adc
mov
out
jnp
adc
sbb
mov
out
out
aas
cmp
movsl
push
dec
pop
outsb
dec
jns
push
jne
pop
mov
and
mov
add
repz
mov
mov
add
jb
mov
mov
fstl
fdivp
mov
loopne
std
sbb
jle
add
mov
or
sub
add
shll
xchg
pop
fwait
and
inc
data16
out
std
je
jbe
arpl
sbb
into
mov
scas
or
sub
xlat
test
pop
lret
cli
aas
adc
divb
cli
rorb
scas
jb
into
mov
ljmp
xchg
fstpl
outsb
pop
int
enter
mov
neg
mov
jae
sbb
out
fisubrl
mov
or
adc
mov
hlt
fistl
lret
jl
lahf
lret
and
pop
addl
jns
inc
add
popf
jmp
xor
jae
les
pop
lock
popf
mov
ss
clc
mov
or
jmp
inc
fs
dec
lcall
jl
pop
stos
pop
push
dec
pop
mulb
lret
jne
out
inc
movl
add
lcall
adc
pop
mov
jbe
push
aam
adc
lret
stos
or
sub
mov
push
pop
out
and
stos
jmp
imul
in
lahf
or
push
mov
cs
call
sbb
mov
xchg
jmp
xor
cmpb
aas
into
cmp
sub
bound
push
jg
subb
dec
jmp
out
loop
and
repnz
outsb
cmpl
xchg
in
popa
icebp
testb
fsubs
sbb
inc
lret
mov
sti
ja
icebp
add
push
xor
cmpsl
shrb
jno
pop
lods
mov
sub
jae
fucomp
inc
cmc
fildl
sub
xchg
lret
rcll
aam
cmp
mov
fwait
scas
mov
out
in
xor
jle
or
sbb
andb
fbstp
dec
ljmp
gs
mov
mov
inc
test
es
cld
rorl
sahf
pop
hlt
into
mov
imul
aas
cmp
mov
push
fistl
shll
or
jge
push
inc
imul
dec
jnp
adc
inc
dec
inc
jbe
in
and
or
loop
aam
sti
or
das
add
cmp
mov
aaa
or
jge
out
xor
sbb
pushf
xchg
adc
mov
adc
xor
fmul
imul
cmp
gs
lret
sub
cmpsb
dec
sbb
rcr
mov
in
rorb
das
xchg
jne
repnz
rcrl
in
sbb
cmp
and
push
out
loopne
js
push
push
pop
fcomi
jg
cmp
mov
ror
cli
xchg
es
mov
or
ja
adc
out
push
jmp
enter
inc
imul
sbb
xorb
lock
aas
pop
pop
adc
cmc
inc
xchg
sbb
and
fisttps
or
jg
mov
adc
in
pusha
js
sbb
add
push
lods
push
pop
int
aad
gs
pop
mov
sub
adc
push
punpckhdq
cmp
loope
cli
fisttpll
sub
adc
ret
loopne
mov
xchg
mov
std
pop
jae
stos
jmp
addr16
or
or
xchg
loopne
sbb
in
iret
jmp
sbb
cmpsb
orb
mov
test
in
lcall
into
fmul
mov
ffree
cld
sub
fistpl
imul
cmp
mov
mov
sub
cmp
mov
push
mov
fs
cmpsl
push
ret
mov
push
icebp
jmp
or
adc
sbb
int
adc
dec
addr16
cwtl
lods
xor
imul
fldenv
out
ret
roll
cld
fdivp
dec
jg
sub
cmc
sbb
into
sti
cmp
mov
jns
xorl
mov
push
fstps
push
aas
mov
sbb
or
lea
adc
iret
iret
clc
add
ret
test
arpl
sbb
xchg
and
xchg
out
sbb
fsts
roll
jecxz
add
mov
shlb
rclb
insl
xor
in
adc
shr
fisubrs
lcall
loope
mov
jp
push
sbb
loop
adc
inc
bnd
ret
leave
pop
lret
lret
sbbb
insl
shr
inc
mov
mov
in
pop
les
sub
rolb
sbb
outsb
jmp
fwait
ja
adc
sub
jg
dec
jne
ja
out
push
cmpsl
rorl
in
out
and
cmp
shl
fs
iret
es
loopne
mov
adc
or
push
mov
movsb
or
sbb
jbe
ffree
shlb
ja
fadd
push
decb
lahf
or
mov
sub
cmp
addr16
xor
lock
add
mov
inc
pop
xchg
mov
push
in
dec
in
mov
notl
rcrl
push
in
xchg
das
dec
pop
mov
shrl
sbb
das
sub
jb
int
insl
in
jge
push
stos
scas
jns
xchg
adc
push
sub
mov
loope
arpl
out
mov
cmp
cmp
sti
jns
sbb
popa
dec
push
pop
orl
ret
mov
jae
fs
stc
xchg
or
push
xchg
jo
shll
jno
sahf
dec
mov
lock
pusha
xchg
std
roll
es
stc
ret
fdivrs
stc
cmp
sub
mov
paddsb
dec
cs
jp
push
dec
xchg
mov
lahf
repnz
sbb
cld
popf
cmpsl
mov
stos
jb
jg
jnp
mov
mov
flds
enter
mov
inc
mov
dec
mov
cmp
pop
cmp
loop
pop
adc
call
xorb
sbbb
sbb
lods
pusha
adc
loopne
loope
push
add
push
inc
std
pusha
lret
stc
push
jge
icebp
inc
and
mov
jae
mov
cld
cmpsb
sbb
leave
cli
jg
sbb
std
iret
idivb
inc
fstpt
pushf
push
incb
lcall
push
mov
arpl
and
in
adc
pushf
es
xlat
scas
ss
and
cmp
pop
ret
sub
mov
stc
xchg
adc
cwtl
inc
out
mov
fdivrl
sti
je
clc
adc
fstps
loope
fistps
popa
fiadds
clc
iret
inc
fsubl
mov
jnp
pop
ja
fneni(8087
out
mov
add
adc
jg
add
pop
add
push
xor
jae
pop
mov
jp
cmpl
lahf
jg
loopne
in
icebp
pop
bound
xor
hlt
adc
movsl
cmp
xor
rol
push
les
decl
xchg
sbb
or
sahf
lea
fildl
loopne
negb
mov
int
out
jle
push
outsb
lahf
addr16
jmp
xor
jecxz
lock
fwait
out
lret
inc
ja
push
sbb
addr16
cltd
stc
push
xchg
jge
adc
sbb
mov
out
xor
and
stos
outsl
pop
repnz
test
cmp
fistps
sti
bound
mov
jo
pop
iret
iret
lock
add
mov
call
mov
jecxz
push
and
fistpll
outsl
and
fwait
adc
sub
fs
push
fists
into
sbb
cmc
inc
push
mov
mov
stos
cmpsb
sbb
xorb
ds
sbb
pop
aad
sbb
ja
or
jmp
mov
sahf
sbb
sub
enter
push
adc
mov
loopne
stos
mov
loope
xlat
sub
pop
and
adc
xor
jno
cmp
adc
inc
sub
not
xchg
clc
jne
lds
or
in
pop
or
and
mov
stc
ret
fstpl
movsl
daa
es
frstor
push
mov
scas
outsl
ja
negl
lahf
leave
stc
fldcw
test
popf
lea
pop
adc
sub
bound
cltd
outsl
fwait
jmp
negl
sahf
repz
out
mov
xor
sti
aas
mov
icebp
or
mov
or
xchg
repz
pop
mov
leave
das
lcall
jmp
in
nop
sub
mov
sahf
popf
xchg
adc
ds
and
insl
xor
fcom
lret
bnd
cmp
int3
sbb
cltd
aas
shl
mov
repz
rcrb
add
and
cmpsl
pop
add
es
imul
sahf
cld
xor
fwait
jns
cltd
ret
cmp
mov
arpl
xor
outsl
ss
cmp
push
inc
in
cld
adc
cmp
popa
cmpsl
cmp
mov
sub
jl
push
fcom
ret
jns
cmp
xchg
jnp
insb
aaa
cmpsb
in
mov
lock
mov
inc
iret
call
lret
push
loopne
xchg
idiv
ret
lods
loop
js
xchg
jle
push
jecxz
imull
icebp
int
cmp
and
mov
xlat
std
pop
in
scas
repz
xor
aad
out
roll
mov
arpl
xor
pop
out
jecxz
std
cvtps2pd
sub
bnd
jb
aas
xchg
repz
dec
xorb
clc
sti
cmpsb
repnz
aas
sahf
mov
shr
les
push
xchg
lods
fwait
mov
add
cmc
push
mov
mov
inc
out
xor
adc
jp
loopne
icebp
push
rcll
pop
ljmp
scas
lahf
mov
xchg
xor
bswap
or
lods
sbb
cltd
or
filds
mov
cltd
rcr
lret
fistpl
out
enter
add
out
push
jns
int3
inc
popl
mov
add
aad
add
push
dec
pop
jne
insb
xorb
int3
cli
aaa
mov
push
imul
jg
out
cmp
mov
mov
sbb
stc
mov
testl
jp
mov
fwait
sarl
sub
repz
jecxz
add
arpl
adc
lret
adc
in
stos
das
scas
hlt
or
jg
push
cld
loop
adc
mov
xlat
push
add
jecxz
lock
xchg
sub
fdivrs
lret
xor
fsubp
imul
in
ret
loope
test
xchg
fstpt
xor
fsubr
pushf
rorl
call
popf
cs
xlat
repz
dec
xchg
lds
mov
lods
gs
cs
mov
out
aam
cmp
push
push
scas
cmc
mov
negl
adc
jae
cwtl
rcl
jecxz
xchg
cld
pushf
ret
leave
andb
and
fs
mov
add
jmp
cli
mov
inc
stos
sbb
incb
sbb
cmp
pop
stos
cmpsl
adc
add
pop
fimull
or
stc
and
or
neg
lock
ret
push
pushf
fnclex
jg
shlb
pop
push
sti
das
dec
cmp
jns
or
pop
and
js
das
movsl
push
cmpsb
xchg
add
cld
mov
mulb
test
adc
mov
out
fwait
ljmp
jp
sbb
cwtl
roll
mov
repnz
in
xchg
mov
daa
lahf
lret
pop
repnz
stos
out
xor
fisttpl
ja
fucomip
xchg
out
jne
inc
mov
test
mov
dec
adc
mov
ja
es
sbb
xchg
mov
fsubrs
mov
popf
gs
mov
movsb
movb
cmp
mov
stos
clc
push
cmc
std
lock
cmpsl
gs
sub
test
enter
sbb
pop
pop
push
sti
mov
sub
aad
scas
jmp
xchg
sub
cmp
cmp
or
push
fsubr
sti
push
mov
cs
xlat
fimuls
negl
cmp
repz
pop
sbb
lcall
fdivp
push
sub
xchg
repnz
mov
out
daa
imul
mov
push
push
jno
js
ret
jle
mov
mov
leave
pop
push
inc
fidivrl
sub
lahf
dec
cmpl
xlat
aaa
xchg
mov
pop
cli
cmpsl
bound
clc
push
sub
stos
insb
push
repz
cmp
lret
sbb
jae
outsl
das
lcall
adc
jmp
jecxz,pn
rol
sub
adc
push
addr16
test
cld
cmc
call
dec
fimuls
adc
sub
sbb
cmpsb
mov
pop
js
push
adc
dec
imulb
out
mov
int
lcall
mov
dec
xchg
fsubrp
sti
loop
nop
mov
sub
sub
enter
jmp
leave
dec
or
mov
mov
push
outsl
pop
xor
testl
sub
movsb
pop
enter
jne
aaa
mov
cs
fcmovnb
test
cwtl
cmp
push
pop
pop
and
sbb
scas
pop
jecxz
sbb
mov
mov
pop
in
push
aas
cmp
mov
fstl
aad
cltd
ja
fists
pop
fldt
stos
fdivp
or
sub
clc
fbld
push
jmp
mov
jmp
aam
xlat
pop
gs
cs
adc
cli
pop
iret
jnp,pn
cltd
push
iret
pop
sub
lcall
call
test
pop
lods
mov
jge
xor
jo
fwait
rorb
jge
xor
jp
jl
xchg
ja
mov
out
mov
and
clc
insl
jne
fistpl
mov
inc
lods
mov
mov
mov
fstpl
insb
dec
mov
iret
mov
mov
add
iret
add
adc
mov
lock
push
rclb
aaa
lock
jge
sbb
icebp
cwtl
adc
fiaddl
sbb
and
inc
enter
jne
movsl
lret
sahf
cs
std
lods
std
sbb
stos
sub
mov
jnp
sti
pop
aas
and
fsub
xor
lock
addr16
loopne
test
outsl
insl
dec
das
push
scas
jg
rcll
fninit
imull
sbb
push
pusha
push
xor
cmp
iret
xchg
mov
adc
imul
jge
rcr
push
sub
cmpsl
xchg
xchg
or
xlat
mov
aaa
aam
aam
shlb
sarb
cli
ror
cmp
notb
mov
dec
push
push
cmp
mov
cmpb
dec
pop
addr16
leave
out
xchg
mov
push
mov
ret
or
gs
enter
outsl
outsb
pop
gs
dec
cs
mov
pop
mov
arpl
scas
mov
pop
mov
fdivrs
femms
std
adc
outsb
fbld
xor
fistl
add
icebp
push
mov
pop
testl
mov
scas
or
mov
arpl
js
imul
mov
jnp
call
ret
fldt
fs
pop
jecxz
jnp
push
cmp
add
roll
shlb
mov
addr16
xor
mov
out
adc
sub
testb
mov
push
jno
ds
sub
outsb
das
lret
in
out
into
cli
shrl
and
mov
inc
push
aas
mov
inc
xlat
jnp
repz
push
test
cmpsl
lret
jl
or
loope
mov
rorl
insb
lahf
adc
scas
mov
push
cmp
imul
xlat
ljmp
sbb
xchg
sub
fisubs
ljmp
xor
sbb
mov
testb
movsl
into
loop
imul
int
jae
imul
push
lods
jl
pop
arpl
test
out
xor
and
int
ret
iret
aas
mov
in
xchg
mov
push
sub
pop
pop
xchg
subl
mov
fildl
mov
shll
mov
mull
xchg
outsl
insl
outsl
adc
jg
stc
mov
cmp
adc
scas
push
pop
pop
xchg
fisubrs
ljmp
xor
cmpsb
pop
lret
jecxz
outsl
inc
jmp
adc
mov
imul
sbb
and
movsb
jle
jmp
movsl
fisubs
jmp
out
cmp
pop
xchg
inc
aas
jle
lcall
pop
mov
mov
ljmp
call
cmp
int3
pop
push
pop
mov
jmp
mov
mov
test
lock
sbb
push
cmpsl
icebp
add
jg
rolb
jb
push
jl
fld
out
xchg
mov
call
aam
stos
lods
stc
fptan
shl
mov
mov
fdivrs
lcall
fs
mov
test
into
and
aaa
aas
pusha
push
pop
js
inc
hlt
pop
add
aas
xlat
mov
push
xchg
cmpsl
dec
and
imul
sub
shll
mov
outsl
push
int
test
scas
sti
fidivl
cs
insb
repz
and
movsb
xlat
icebp
ret
in
loopne
or
add
push
xlat
mov
cmp
jb
mov
push
jmp
and
imul
out
imul
lret
xchg
fisubrs
push
shll
or
xchg
pop
pop
xor
ja
shlb
cmp
or
xchg
xor
sub
in
lods
add
adc
ljmp
js
iret
fnsave
cmp
pushf
sub
stc
push
rcrb
std
jno
fildll
adc
out
out
loopne
dec
mov
mov
subb
xor
lret
or
jns
fdiv
test
push
cld
mov
inc
and
xor
out
xlat
insb
icebp
jecxz
jnp
incl
or
ss
mov
testl
ftst
pop
in
sub
lret
fcmove
mov
inc
jnp
sbb
or
popf
cmc
mov
lods
int
sbb
cwtl
cmp
adc
enter
rcl
in
shl
cli
subl
nop
pusha
cwtl
cmp
inc
stc
jnp
std
xlat
or
bnd
mov
bound
imull
dec
push
jle
cvtps2pi
push
jne
mov
fistpll
sbb
sub
inc
pop
or
jns
out
xchg
cli
dec
xor
jp
repz
lods
clc
test
mov
loop
imul
lods
std
push
scas
jno
fstpl
in
cld
xlat
int3
mov
jne
ss
loop
mov
shll
xchg
out
out
push
daa
mov
cli
mov
imul
fdiv
js
sub
cmpsl
dec
push
pop
mov
addr16
mov
std
pop
imul
fwait
rcr
pop
mov
outsl
xor
cmp
iret
adc
inc
mov
jl
sub
ljmp
xchg
push
xchg
pusha
jg
int
add
insl
fidivl
mov
call
icebp
adc
add
cs
push
js
cmp
pop
scas
adc
into
repz
add
push
les
dec
iret
imull
pop
leave
out
outsb
jae
mov
fsubr
cmp
push
arpl
xor
ja
xchg
pop
arpl
xlat
dec
loope
and
fstpt
lret
xchg
sbb
out
or
push
lret
std
or
add
jge
mov
ds
je
dec
or
inc
mov
or
cmovbe
mov
push
add
jno
xor
aam
xor
push
popf
add
cmc
in
bound
jb
scas
xlat
adc
sub
lea
inc
dec
hlt
sti
sbb
xor
cmc
xlat
push
inc
mov
inc
mov
out
int
jmp
lds
mov
hlt
jg
cmp
cmp
push
mov
lock
pop
cs
mov
imull
into
lahf
rcrl
rcll
or
outsb
dec
testb
pop
pop
sti
xchg
push
mov
push
leave
sub
add
sub
sub
fisttpll
pop
iret
mov
mov
popa
in
pop
les
out
push
repz
or
sub
test
lea
dec
xchg
dec
dec
aaa
adc
aas
fimuls
mov
frstor
adc
mov
shrl
sbb
mov
jmp
fucom
xlat
push
out
sbb
xor
xchg
mov
pop
xor
push
outsb
xlat
ljmp
es
in
push
rcl
test
jbe
sub
in
in
popf
arpl
jnp
dec
ret
fimuls
enter
mov
jmp
into
jge
xchg
jns
jne
out
insl
and
cltd
mov
jge
bound
dec
lods
mov
ret
add
lods
fidivrs
test
push
push
mov
outsl
frstor
push
lahf
add
pop
rcl
push
rcrl
jno
scas
jne
stos
mov
adc
cmpsb
movsl
mov
mov
outsl
andl
add
aad
out
mov
mov
loop
pop
sbb
sarl
loop
add
fneni(8087
leave
push
in
sub
ja
dec
flds
sarl
sti
push
mov
mov
mov
xchg
jae
arpl
jle
adc
inc
mov
xor
pop
push
inc
xchg
gs
jne
in
pop
jp
daa
push
aas
xlat
xchg
pop
or
ljmp
jmp
sarb
pop
add
mov
cwtl
push
je
cwtl
xor
lea
sub
loop
popa
jg
add
sbb
loope
and
shll
push
fiadds
sbb
daa
loop
mov
push
mov
hlt
or
mov
and
xor
out
aam
hlt
push
stc
mov
sti
push
pop
or
jecxz
sub
imul
mov
das
push
xchg
dec
mov
ja
repz
test
and
outsl
xchg
fidivrs
mov
or
fmulp
repnz
inc
das
cwtl
int
xchg
jns
sbb
sub
rcr
push
sti
rclb
pop
mov
clc
aas
sbb
cmpsl
into
lret
divl
shr
mov
xor
mov
push
imul
rcr
mov
jno
dec
lret
fcoms
xor
cmp
inc
hlt
fbstp
addr16
or
inc
and
dec
repz
jge
xchg
js
neg
lret
jnp
repz
sbb
aaa
in
add
das
cmpsb
fidivs
jns
aaa
jge
mov
icebp
jg
clc
jle
mov
sahf
xor
aam
out
in
std
fcmovb
dec
xchg
fdivp
inc
imul
sti
fwait
cmp
aaa
pop
mov
ret
dec
pop
sub
mull
and
imul
xor
lcall
dec
addb
lcall
int
cmp
pop
sub
mov
fdiv
mov
js
xlat
pop
fsubrl
xchg
or
leave
repnz
mov
cmp
outsl
mov
push
xchg
pop
push
mov
pop
add
div
decb
std
in
mov
sbb
mov
or
cwtl
jo
pop
in
in
aad
jae
iret
cs
ds
pop
dec
call
sbb
xlat
in
decl
pusha
repz
add
invlpg
jns
mov
inc
dec
cmp
out
sti
imul
xlat
leave
push
cmpl
mov
xchg
sti
xlat
jmp
mull
sbb
out
arpl
les
hlt
sub
cmpsb
test
ja
pushf
test
lods
mov
xor
jbe
fcomps
in
data16
push
add
mov
iret
or
notb
xlat
and
outsl
fmul
adc
adc
shll
lods
pop
xchg
scas
mov
pop
mov
push
cmp
in
imul
test
icebp
and
out
aam
sub
pop
pop
cmpsb
stc
adc
aas
lcall
pusha
aam
out
add
mov
fistps
aaa
imul
xor
sbb
push
rclb
pop
jmp
enter
fnstenv
out
aas
inc
jecxz
mov
adc
or
int3
push
fistl
or
mov
fidivl
mov
sub
ret
or
lret
xor
bound
pop
lods
sub
rcrl
sarl
sub
sbb
pop
xor
repnz
pop
sti
mov
outsl
dec
iret
pop
js
mov
fdivs
flds
and
or
pop
or
jae
xorl
push
cltd
mov
decb
loope
rolb
sub
mov
js
inc
pmullw
clc
sbb
dec
xchg
imul
adc
and
outsb
frstor
jl
into
roll
lods
insb
mov
fwait
std
jne
inc
loopne
data16
jnp
and
out
cmc
push
out
int
out
mov
in
incb
imul
fimull
mov
dec
sub
mov
sbb
or
mov
and
pushf
push
cld
test
push
andnps
mov
div
in
fimuls
push
out
movsl
fldenv
xchg
mov
mov
aad
jmp
xlat
mov
fldl
sti
or
std
in
aas
jmp
and
sahf
xchg
mov
mov
stos
fimuls
mov
push
jmp
or
imull
pop
jbe
mov
xchg
sbb
in
mov
mov
out
in
ret
mov
stos
sub
sbb
movsl
out
out
aad
pop
pop
inc
std
sbb
jmp
sahf
xlat
test
iret
dec
sti
imull
jecxz
addb
inc
cmp
scas
ret
icebp
rorb
aad
seta
cs
lret
cs
sub
add
pop
mov
in
xor
pop
mov
and
mov
push
xchg
repz
repnz
mov
leave
mov
loop
lods
xor
mov
out
mov
mov
mov
repnz
cmp
jmp
pop
adc
ret
and
inc
and
lea
sub
fcoml
aad
ja
ret
cmc
add
cs
sub
pop
scas
push
push
or
mov
je
jnp
fistps
jnp
sbb
jmp
mov
jg
xchg
push
rclb
dec
jno
stos
push
xchg
das
cli
aad
sarl
in
xchg
jnp
in
popf
outsl
inc
mov
roll
push
inc
jnp
fcomp
lret
or
mov
xlat
pop
mov
pop
cmc
fstps
mov
cmpsl
push
outsb
hlt
mov
fildll
fld
test
or
inc
mov
and
divl
add
dec
mov
ljmp
rclb
cmc
pushf
scas
mov
data16
sti
mov
in
fisubrs
jbe
xor
scas
push
fildl
mov
rcll
daa
scas
adc
fwait
clc
pusha
lock
jl
jmp
mov
stos
sti
sub
xor
sahf
insb
insb
add
dec
outsl
fisttps
pop
aaa
mov
andl
pop
mov
out
mov
sub
test
jmp
fdecstp
xchg
mov
cmp
add
xchg
in
adc
cli
out
push
gs
pop
pop
xchg
idivb
mov
mov
mov
jne
stc
cmp
mov
repz
inc
cwtl
jp
lock
call
iret
fisubs
clc
gs
dec
or
ffreep
inc
in
in
xor
adc
out
lcall
and
cmp
loopne
cmp
test
cmp
leave
test
add
scas
push
int3
mov
lcall
insb
cltd
push
out
iret
cs
repnz
cmpsl
out
push
shrl
mov
ss
adc
scas
adc
adcb
jbe
lea
loop
jg
pop
cmp
mov
cltd
mov
daa
enter
adc
sub
mov
jne
pop
mov
out
hlt
mov
dec
fimuls
mov
dec
jne
mov
dec
xor
lods
mov
ljmp
out
std
jg
push
mov
imul
xor
mov
hlt
pop
testl
ret
push
out
outsl
arpl
hlt
mov
mov
xor
leave
mov
ss
dec
jle
jecxz
mov
sub
jecxz
add
mov
fwait
es
aad
imul
cmpsb
jae
out
inc
std
mov
xchg
leave
mov
cmc
ss
clc
xor
xor
cltd
cmp
inc
cld
dec
jns
jnp
mov
mov
mov
cmc
and
and
sub
sub
xchg
cltd
cld
out
in
mov
in
mov
out
das
les
push
or
sbb
in
jns
rorl
movsb
add
mov
andl
lahf
xchg
mov
jg
lahf
and
or
cs
icebp
leave
rcpps
les
mov
cmp
mov
inc
xchg
popa
push
js
js
pop
aad
jl
jle
pop
mov
mov
cs
push
inc
iret
arpl
pop
jnp
mov
imul
fnstcw
std
cs
dec
xchg
pop
dec
movsb
mov
negb
scas
popa
mov
pop
pop
and
fwait
test
lahf
adc
mov
scas
outsb
outsl
cmp
fistps
rcll
cli
int
cmp
and
lret
hlt
shll
or
stos
xlat
icebp
adc
add
mov
sti
out
lret
lock
rorb
mov
or
andb
pop
cmp
hlt
adc
add
fdivrs
mov
push
fmuls
scas
repz
imul
in
or
push
hlt
sti
hlt
inc
and
dec
int
std
stc
stos
push
adc
jge
push
push
in
mov
jo
add
mov
enter
pop
mov
sbb
fisttpl
inc
cwtl
mov
sub
out
push
mov
pop
jae
mov
sub
cwtl
out
xlat
add
ret
aaa
sbb
lcall
inc
sub
sbb
jp
pop
lret
popf
xchg
xor
fstpt
jns
pop
jp
adc
or
das
adc
fidivs
jns
sarl
lret
insb
lret
push
cld
bswap
sbb
xchg
jno
inc
fnstcw
cmp
and
stos
in
push
push
cli
test
xchg
jns
insl
ret
lahf
in
push
clc
mov
jno
notb
ffree
mov
cld
scas
shrl
or
jle
add
push
jg
enter
lret
lods
adc
mov
sbbb
mov
xlat
repz
out
std
jle
cmp
jg
jge
pop
mov
in
sbb
pop
mov
imul
test
iret
cli
pop
test
aaa
das
ja
cmp
inc
in
adc
notl
cmp
icebp
cmp
incb
ja
xor
adc
movsl
int
inc
push
mov
add
fdivrs
mov
in
in
inc
lahf
sub
push
mov
jb
pop
push
mov
rcr
pop
fcoms
mov
adcl
push
jecxz
sbb
repz
out
inc
push
pop
sub
adc
in
or
arpl
fsubrl
pop
push
xor
ljmp
push
cltd
scas
fsubl
cwtl
xchg
jmp
outsl
jno
fisubrl
ret
mov
frstor
sub
push
mov
mov
sub
mov
lods
mov
imul
dec
sub
jnp
das
xchg
mov
xchg
sbb
jmp
movsl
fwait
stos
mov
rorb
ficoms
adc
jae
mov
ljmp
aas
in
aaa
sub
xlat
mov
xchg
outsb
push
outsl
stc
jae
scas
sahf
scas
mov
mov
sti
jle
jmp
nop
iret
dec
dec
call
imul
test
iret
sub
pushf
fldenv
xchg
movsb
fistl
adc
jge
add
testb
jnp
test
das
idivl
dec
xor
loop
or
pusha
jns
adc
out
mov
call
shll
jecxz
adc
enter
sbb
sbb
aam
push
pop
jmp
mov
scas
push
jbe
outsl
add
push
fucomip
push
test
inc
xlat
inc
out
out
out
test
jbe,pt
sub
and
lret
jmp
xor
adc
jge
lea
dec
ds
xchg
scas
je
icebp
push
fcmovu
movsb
shr
adc
imul
testl
jle
movsl
mov
xchg
pop
mov
das
sbb
sbb
sbb
jecxz
or
sbbb
adc
shl
jecxz
hlt
repz
cmpsb
pop
mov
fmul
insl
push
lahf
mov
sub
push
jg
and
fdivrl
push
jg
pop
add
stos
xchg
fldcw
inc
fstpt
mov
stc
aaa
jecxz
jle
repz
or
sti
sub
imulb
pop
and
cmp
cmp
dec
lcall
notb
insl
push
lea
out
sub
ret
push
ja
sbb
jmp
mov
fcmove
imull
hlt
push
scas
popa
stos
cli
mov
out
movsb
popf
cmpsb
test
adc
out
cli
ja
std
jb
pop
lahf
xchg
test
jbe
bound
arpl
cs
sti
cs
mov
jno
push
mov
out
mov
inc
sub
into
mov
dec
adc
stos
jne
or
fistl
pop
mov
in
bound
xor
and
scas
shrl
jb
in
cmpsb
loopne
negb
fcomps
lods
xor
mov
aam
xchg
arpl
insb
mov
pop
stos
and
jl
repz
xor
test
ret
and
mov
cli
sti
xor
mov
fildll
rcl
cmpsb
sarl
add
or
roll
scas
mov
movsb
cmp
test
mov
sti
jae
xchg
sbb
enter
leave
cmp
push
lret
orb
xchg
negb
mov
cmpsb
adc
mov
aad
popf
inc
mov
jg
and
in
jne
rcl
adc
aaa
mov
popf
jbe
iret
push
fistps
xlat
mov
sub
xchg
push
lahf
mov
cs
pushf
ret
out
rcrl
pop
hlt
xchg
sarb
out
mov
lcall
cmpb
sbb
icebp
ret
add
scas
cmp
stc
add
or
push
dec
push
icebp
movsb
jae
push
xor
xchg
xchg
arpl
imul
xchg
scas
ret
sub
inc
sbbl
stc
cltd
and
push
jg
push
mov
into
iret
stos
sti
faddl
inc
in
inc
out
push
hlt
dec
pusha
sub
pop
sub
cli
das
adc
cmp
shl
cltd
cltd
sub
fisubrs
jne
jne
xchg
mov
rol
fisttpl
repnz
cmp
scas
rcrb
ljmp
fs
dec
lods
mov
jge
sbb
adc
add
mov
push
and
cmpsb
nop
scas
pop
out
add
push
pop
mov
sbbb
out
je
mov
out
stos
imul
lea
jmp
cltd
out
loopne
push
mov
aad
pushf
imul
push
xchg
cmp
les
jae
inc
roll
jecxz
sub
mov
js
mov
popf
sub
notl
lcall
ret
hlt
push
loope
cs
inc
cmp
push
andb
cmp
or
xchg
enter
leave
stc
push
or
rcrb
ss
out
mov
outsb
sub
cwtl
push
cwtl
add
xchg
shrl
adc
cld
push
pop
addr16
and
in
or
xchg
jnp
pop
outsl
pop
add
lcall
push
xor
mov
ss
and
ja
adcl
adc
shl
sbb
fs
sahf
ret
cmp
mov
pop
lcall
add
scas
inc
and
outsb
cmp
xchg
mov
xor
lods
or
outsl
scas
lods
lcall
loop
subl
mov
inc
mov
mov
and
stc
jne
mov
dec
subl
push
add
repz
loope
fisttpl
pop
add
movb
fadds
aam
icebp
mov
fiaddl
dec
sbb
xchg
pusha
jg
xlat
hlt
outsl
jg
jmp
pop
cmp
pusha
arpl
in
jb
cmc
enter
cmp
imul
push
push
outsl
mov
pop
ret
fadds
dec
jnp
insb
test
inc
mov
or
scas
push
sti
in
out
jmp
sbb
sub
out
add
notl
xchg
fnstsw
sub
inc
lahf
daa
mov
sub
or
cmp
add
sub
mov
cmp
mov
mov
jb
push
outsl
mov
lea
mov
out
scas
pushfw
fildll
and
adc
imul
sbbb
in
in
jecxz
ljmp
inc
xchg
out
dec
adc
add
inc
xchg
in
push
jbe
jbe
mov
push
out
out
add
add
fcompl
pop
jae
rorb
popf
fdivl
cwtl
add
test
loopne
cld
outsb
cs
imul
sbb
inc
push
pop
add
inc
jnp
mov
mov
ficomps
iret
fcoms
mov
sbb
cmc
inc
sahf
stos
lcall
shll
fdiv
push
and
xchg
enter
les
mov
loopne
fdivr
xchg
clc
push
xor
cwtl
leave
iret
mov
cmc
stc
loopne
xchg
les
rcl
rclb
sahf
xor
pop
into
sti
stc
or
push
fdiv
adc
jp
fidivrs
jle
push
dec
cmp
cmpsl
and
sbb
jecxz
sub
mov
out
flds
jbe
mov
pop
pop
cmp
call
dec
xchg
sbb
xchg
mov
inc
cmp
sbb
movsl
xlat
sub
shr
test
ja
jg
dec
mov
dec
js
cmp
sbbb
pop
dec
in
inc
cmpsb
aaa
jp
mov
cmp
ficomps
fldcw
scas
push
pusha
test
sarl
mov
int3
stc
filds
movsl
pop
or
imul
rcr
clc
push
stos
add
sub
mov
adc
rorb
rorb
ja
jae
pushf
jnp
fld
in
pop
add
jmp
jnp
mov
jecxz
adc
push
sub
jns
sub
scas
sbb
cmp
loope
test
mov
insb
gs
insl
xchg
shlb
mov
lock
adc
mov
dec
das
popf
inc
daa
out
cmp
or
adc
mov
inc
and
jns
scas
mov
jl
in
lahf
divl
ja
aam
xor
push
fistl
mov
fldl
aam
pand
fbstp
out
jns
es
push
pop
mov
scas
imul
movsl
jnp
sbb
ret
dec
in
mov
xchg
je
push
mov
push
fisttpl
dec
sub
jbe
cld
cs
jbe
into
mov
mov
into
mov
scas
mov
push
mov
movsb
call
and
sub
test
insb
fidivrl
mov
ja
jl
push
jp
in
mov
pop
inc
or
pushf
adc
icebp
push
inc
fistpl
cs
fstl
mov
inc
and
out
in
aad
jae
inc
and
fsubrs
jns
jle
cmpsl
add
lret
dec
rol
stc
push
mov
push
xchg
push
add
hlt
cli
sub
adc
push
xor
rclb
jbe
daa
repnz
insl
loope
lahf
push
push
xlat
mov
movsl
add
push
xchg
fisttpl
pop
mov
xchg
adc
xchg
das
insl
push
cmp
adc
pop
inc
fldl
and
push
ljmp
sbb
add
mov
jg
rcr
push
xlat
movl
sub
loop
pusha
jle
xchg
jmp
ret
loope
testl
aas
push
iret
xlat
sbb
jecxz
and
mov
rclb
jo
bound
dec
mov
pop
mov
fsubrl
das
sub
fsub
rol
jns
sahf
push
popa
pop
in
jnp
mov
cmp
call
rclb
aad
xlat
dec
pop
dec
xchg
mov
vmaskmovdqu
lahf
ljmp
adc
mov
dec
out
ss
ret
push
cld
jne
out
fistl
cmp
lret
lods
sub
out
mov
sbb
mov
mov
or
dec
adc
sbb
fiadds
fwait
xor
std
push
aas
xchg
iret
sub
sbb
push
pop
and
shll
pop
pop
hlt
xchg
bound
mov
lret
inc
imul
fwait
mov
mul
sbb
jae
lods
xlat
xor
mov
das
pop
test
xchg
jp
rep
inc
jne
ret
mov
int
stos
addr16
out
adc
int
outsb
pop
xchg
push
xor
icebp
leave
and
inc
dec
sbb
mov
push
xlat
pop
push
sarl
dec
sahf
ret
fimuls
sub
sub
push
clc
adc
cs
push
sub
scas
data16
and
insb
test
sbb
fistpll
cltd
imul
mov
mov
mov
sub
mov
jne
sbb
cmpb
add
divb
cmp
ret
add
push
rcrb
add
push
lahf
sahf
ficomps
pop
dec
es
decl
adc
push
repz
xchg
sub
sub
jnp
push
sub
fnsave
stos
js
hlt
mov
xor
mov
cmc
cmpsl
insl
cmpsb
icebp
aaa
cmp
add
and
inc
mov
daa
repz
mov
push
xlat
or
testb
sub
pop
mov
out
adc
xor
shl
ja
test
mov
mov
mov
or
stos
xor
jb
adc
ss
jb
movsl
push
xlat
int3
mov
in
shrb
mov
jle
orb
mull
cli
xlat
fwait
mov
xchg
sahf
xchg
pop
out
fildl
pop
fcomip
mov
ja
out
lcall
insl
adcb
insl
test
outsb
repz
push
pop
pop
out
stc
iret
iret
aad
iret
inc
pop
incb
xchg
and
inc
pop
sub
movsl
adc
aas
or
sub
add
mov
mov
and
movb
mov
push
sub
mov
in
and
xchg
mov
add
and
popf
fstp
sahf
daa
leave
ljmp
or
mov
lds
pop
mov
imul
add
pop
into
pop
and
mov
mov
mov
xor
inc
lock
fwait
xor
jne
jecxz
inc
std
adc
rcrl
lcall
pop
repz
jmp
insb
andb
and
mov
lret
mov
scas
sub
adc
test
pop
xchg
loop
mov
inc
cmc
xchg
cld
divb
or
push
mov
dec
scas
aaa
out
mov
imul
sbb
fsincos
mov
adcl
mov
out
jnp
sub
inc
pop
jmp
stos
sbb
fsubr
add
lahf
frstor
pop
arpl
aas
shrb
mov
pop
sti
test
sub
jns
add
repz
push
sbb
stc
inc
ffreep
dec
test
cmpsb
scas
ror
jne
xchg
jae
sub
inc
xchg
cmc
mov
es
mov
add
add
adc
sub
mov
push
fmul
sti
mov
sar
out
imul
in
add
jae
outsl
imul
mov
adc
adc
mov
and
loope
stc
inc
icebp
push
inc
in
inc
fidivrl
push
pop
add
or
fcompl
jecxz
fstps
pop
aas
mov
pop
lahf
lock
jae
mov
lock
test
outsl
inc
mov
stos
fwait
sbb
jnp
adc
aaa
mov
mov
sahf
jnp
inc
mov
cmc
icebp
and
pop
pop
mov
add
sbb
fidivl
fistpll
sub
fwait
xlat
sub
lods
xlat
and
mov
icebp
iret
aas
inc
not
push
cmpsl
pop
repnz
scas
inc
adc
test
andb
xor
and
xchg
push
xlat
add
pusha
or
outsb
adc
das
push
pop
push
mov
clc
pusha
or
and
shlb
jmp
cli
lret
push
hlt
jg
mul
mov
adc
jbe
and
out
mov
repz
out
pop
lahf
pop
call
cltd
test
add
add
pop
fcmovbe
faddp
dec
ss
out
out
mov
sbb
pop
pmovmskb
push
out
lahf
aam
fildll
test
mov
notb
sub
fadd
cmp
push
adc
xchg
lcall
push
mov
or
xorl
adc
outsb
cmpsl
xor
sahf
out
ljmp
jge
cwtl
add
cs
lahf
jge
enter
cmp
sbb
adc
xlat
sub
jmp
out
xchg
shll
clc
xchg
mov
fimull
nop
int
cmp
cmp
and
jg
xchg
jns
outsl
shl
clc
mov
mov
test
mov
or
lods
stos
ja
mov
jae
div
adc
rorb
jl
fld
insl
xchg
in
ja
xchg
test
pusha
sahf
push
mov
leave
mov
cltd
sbb
dec
shll
fdivr
sbb
addr16
add
fdivrs
mov
lret
inc
mov
sbb
adc
mov
or
out
adc
xor
sbb
in
add
add
aad
clc
ret
cs
inc
adc
or
cmpb
push
cmpsl
les
fidivs
sbbl
movsl
mov
cmp
lea
out
mov
and
icebp
mov
loop
mov
loope
inc
sti
mov
push
aas
and
and
xchg
and
dec
incl
clc
pop
adc
or
jns
mov
push
insl
mov
loop
and
or
cmp
rol
fnstenv
fwait
xor
inc
cmpsb
push
xchg
and
cmp
adc
out
jae
jecxz
mov
mov
jmp
fbld
mov
xor
or
jo
cltd
pop
ds
mov
add
pop
mov
inc
and
xchg
ret
add
arpl
jbe
mov
pop
pop
lahf
sub
dec
inc
jmp
shr
adc
repnz
inc
xchg
inc
add
js
mov
mov
add
clc
add
push
mov
or
jmp
ljmp
cmpsl
data16
cmpps
cmp
faddl
xchg
jae
in
jmp
insb
int3
mov
out
pusha
pop
fstps
push
outsl
push
fimuls
mov
add
rcr
mov
testl
bswap
loope
mov
xchg
in
push
xchg
adc
icebp
jae
fwait
jbe
repz
out
aas
pop
add
push
ds
xor
sbb
ds
or
and
pop
loopne
or
decb
imul
pop
push
out
mov
shlb
fstpl
adc
inc
pop
mov
jae
pushf
mov
fidivs
sub
addr16
mov
pop
jbe
mov
cmp
mov
hlt
rol
fidivrs
cld
mov
fcomip
popa
push
or
push
out
adc
std
inc
stos
adc
adc
lret
and
sub
sub
clc
rolb
mov
and
push
or
or
sub
ss
xlat
adc
fwait
negb
fndisi(8087
and
lahf
int
xor
mov
repz
fistps
adc
cli
or
pop
js
mov
adc
jge
add
push
adc
and
mov
pop
lret
lcall
and
push
lret
fimuls
incb
sti
push
xchg
fnstenv
or
push
mov
sub
pop
mov
imul
xchg
add
push
je
cmpsb
filds
int3
pmullw
pop
test
fldt
jecxz
inc
and
fiadds
hlt
std
sbb
leave
jle
push
aas
cmp
pop
xchg
out
ficoms
xor
data16
add
push
lock
dec
fnstsw
mov
out
test
iret
std
aas
sub
xchg
sub
cwtl
and
std
jb
arpl
mov
pop
mov
dec
rcl
cmp
das
rorb
sbb
out
out
test
sbb
hlt
in
aam
pusha
fdivrl
leave
scas
stos
jp
fistpll
add
cltd
ret
jle
cmpsl
repnz
ret
adc
add
jne
imul
push
pop
ficoms
dec
aad
add
lahf
outsb
add
dec
sbb
adc
dec
adc
sub
xchg
xorl
pop
mov
mov
pop
inc
mov
outsb
cmp
popf
or
dec
iret
jmp
shr
repz
inc
sub
fidivrl
mov
cmp
sub
pop
popf
dec
lahf
mov
fwait
pop
out
pushf
inc
clc
loopne
or
xchg
std
sbb
sbb
shr
add
test
lret
fsubl
xchg
or
cmp
roll
sti
enter
mull
dec
addr16
imul
sbb
adc
xchg
je
jecxz
cmpsl
rol
xchg
push
lods
popa
add
and
sti
xlat
roll
push
mov
cli
and
push
dec
inc
add
sub
xchg
and
roll
sbb
xchg
fwait
xlat
sub
testb
xchg
je
mov
inc
fwait
mov
push
cmp
mov
push
aam
mov
or
xor
xor
loopne
mov
test
xchg
sub
inc
scas
in
mov
loopne
xchg
outsb
sbb
sbb
mov
stc
test
jecxz
jb,pn
pop
int
adc
mov
push
movsb
shlb
stc
ja
cmpsb
mov
or
aas
repz
jle
cs
leave
xor
hlt
mov
in
pop
sub
insl
outsb
cmpsl
and
pop
inc
jne
cmpsl
or
and
add
popf
jmp
dec
imul
iret
dec
mul
jnp
mov
int3
pop
cmp
cwtl
mov
jecxz
pop
or
push
rorl
nop
pop
lods
adc
pusha
fxch
cmp
cmp
or
insb
cmp
xlat
or
jb
sub
mov
jl
mov
mov
jns
jne
xchg
or
cs
cli
fucomip
add
ret
movsb
jns
mov
xchg
xchg
pop
jbe
and
fwait
sti
outsb
cmp
push
gs
sarb
mov
fidivrl
daa
aas
jmp
fdivp
cmp
addr16
enter
xchg
int
loopne
in
pop
mov
and
jge
jmp
xor
into
cld
cmp
es
adc
inc
ret
in
hlt
ret
movsb
xchg
cmp
into
jno
inc
lret
sub
jge
and
dec
pop
sbb
push
into
or
pop
int3
jae
sar
ret
cmp
inc
stos
mov
add
cmp
loope
lret
xchg
push
push
mov
movsl
or
into
cmp
sbb
cs
clc
jg
addr16
mov
sbb
lret
jne
testl
pextrw
into
in
xchg
cs
xchg
jns
sbb
sti
fsubr
in
cld
mov
fnstsw
or
jge
cmpsb
fldenv
sub
cmpsl
push
jns
ja
xchg
push
and
xor
out
ficomps
mov
xchg
repz
pop
stos
or
shr
insb
ja
push
out
sbb
into
dec
sbb
push
ja
filds
cmpb
inc
cmp
jp
mov
pop
or
in
addr16
loopne
xor
cld
pop
fwait
cli
setbe
and
loopne
push
in
scas
sub
out
popa
adc
icebp
aas
push
mov
mov
jo
jo
jbe
mov
rclb
add
and
sbb
cmpsb
pop
pop
imul
cmpb
cs
stos
gs
std
js
scas
jae
pmuludq
cmpsl
dec
push
js
jg
fwait
inc
sub
cmp
je
mov
mov
push
arpl
push
repz
cmp
or
mov
pop
push
insb
ljmp
mov
adc
sub
std
fisubrs
enter
add
pop
shll
icebp
hlt
out
jae
js
outsl
iret
xchg
out
sub
jecxz
fisubrl
fisubl
popf
pop
shll
jb
pop
add
jae
xor
pop
fstl
and
mov
mov
inc
scas
icebp
mov
or
in
sbb
pop
mov
sti
mov
push
enter
mov
iret
xor
xor
mov
aaa
mov
icebp
adc
in
jmp
daa
mov
addr16
hlt
lods
out
jmp
out
sub
idivl
iret
xchg
lcall
xchg
dec
lea
out
push
out
fwait
cmpsb
jae
sub
cmp
adc
push
push
out
addr16
cs
xor
or
insl
jl
and
lods
or
in
int
mov
div
push
push
push
loop
nop
int3
inc
pop
cli
xor
add
shrl
cmp
mov
jge
or
pop
pop
call
decb
mov
and
testl
mov
cmpsl
jmp
xchg
push
divb
sbb
mov
scas
dec
ljmp
loop
call
sub
xlat
icebp
sub
adc
dec
lcall
or
cmpsb
outsb
xchg
cmp
subb
xor
imul
lahf
lahf
les
cmp
shll
leave
push
int3
scas
mov
shrl
mov
lock
leave
out
loopne
or
lret
pop
inc
pop
sbb
or
add
mov
fisubs
repz
inc
and
jecxz
and
hlt
pop
lret
scas
leave
out
mov
push
pusha
leave
push
mov
fdivrs
ds
sbb
xchg
repz
iret
cli
jno
fwait
mov
shr
outsb
loop
xchg
push
jne
mov
pop
movsb
cmp
push
or
test
imul
xor
dec
hlt
std
mov
mov
in
push
sti
loopne
aas
mov
lods
pop
movsb
loop
movb
out
pop
repnz
jno
cmp
xlat
fldl
adc
popf
lcall
fstpl
flds
lods
and
push
scas
push
out
out
sti
lds
sbb
fcmovnu
sbb
rcrl
mov
jmp
mov
std
and
or
pop
pushf
xor
out
sbb
outsb
push
jge
mov
out
test
cmpsb
xchg
aad
pop
movsl
setg
xor
pop
sbb
jnp
push
push
popf
adc
xchg
add
lahf
jg
hlt
xor
pop
insl
cmp
test
add
or
cld
mov
loope
xchg
fbstp
add
bound
lea
repz
cmpb
frstor
jl
fld
fstps
stc
fistps
repnz
jle
test
cmpsb
lea
call
dec
fucomp
pop
rcl
add
jle
test
fildll
inc
cs
fnstenv
lahf
push
out
jmp
add
mov
and
xor
rol
icebp
mov
scas
jmp
popf
fimull
popf
adc
xlat
sbb
dec
mov
scas
mov
sahf
dec
ja
sbb
ljmp
mov
in
jge
lret
popf
int
and
repnz
sub
clc
push
or
shlb
add
daa
push
negl
fcompl
out
std
add
in
xchg
or
aas
or
repnz
adcl
iret
xchg
adc
push
pushf
movsb
pop
cmp
in
mov
inc
cmc
data16
mov
scas
out
in
dec
cwtl
xchg
and
pop
iret
xchg
imulb
lods
push
cmp
push
ret
mov
mov
jo
std
mov
mov
imul
fsubl
xor
mov
lcall
add
dec
fdivl
lock
adc
or
in
pop
push
or
cli
loop
or
xor
sbb
test
mov
lods
insl
jecxz
or
in
push
push
mulb
mov
ret
out
inc
lret
mov
fmulp
jl
out
jnp
mov
jns
mov
mov
in
into
add
mov
out
outsl
push
mov
stos
lret
outsl
mov
push
gs
mov
out
pop
mov
das
push
mov
arpl
push
out
jmp
loopne
sub
in
arpl
hlt
subb
ljmp
jns
adc
ret
jl
mov
push
xchg
inc
fsts
out
pop
jge
adc
outsl
jg
loopne
in
leave
adc
movq
ds
test
mov
fs
out
inc
sbb
icebp
or
andl
mov
pop
out
icebp
outsl
fisttps
lahf
mov
mov
mov
xor
push
cmc
cmpsl
jmp
pop
leave
popa
aaa
mov
imul
out
rol
mov
push
push
jmp
push
arpl
lock
pop
es
out
sbb
jge
in
scas
sub
lock
mov
sbb
sub
push
or
lahf
pop
mov
push
xchg
fnstsw
sbb
inc
mov
popf
cmp
in
lahf
fisubrl
fcmovnu
lcall
lea
js
das
cs
pop
pop
pop
xor
lahf
mov
cmpl
int
dec
jae
mov
faddp
or
cltd
in
pop
sbb
xlat
pop
adc
adc
outsl
pop
js,pt
enter
sbb
or
mov
and
cli
fidivrl
fstpl
xlat
jo
in
loop
mov
fldt
xchg
aad
mov
jns
test
sub
push
push
inc
out
fildll
in
sub
in
inc
loop
xlat
icebp
gs
iret
jnp
rcll
in
out
pop
cmpsb
out
scas
mov
inc
out
mov
inc
pop
mov
inc
cmp
push
in
scas
popf
rorb
add
lcall
jge
pop
scas
add
ret
xor
je
or
daa
mov
dec
aaa
fisubrs
loopne
es
in
jmp
sbb
rolb
mov
jnp
jae
mov
out
mov
jo
dec
ret
xor
xor
mov
xlat
push
dec
shlb
mov
mov
cmp
notl
fs
adc
mov
and
fs
cwtl
xchg
cltd
mov
movsb
mov
int
test
dec
jno
arpl
hlt
aas
imul
mov
sbb
fldl
aaa
gs
adc
js
int3
emms
icebp
adc
cwtl
or
cltd
iret
iret
or
mov
adc
repnz
xchg
popf
dec
pushf
cmp
das
iret
mov
xor
pushf
int
leave
rol
push
fstpt
pop
inc
pusha
fwait
movsl
sbb
mov
or
fcomps
dec
fs
inc
loopne
ja
xor
test
cld
inc
or
fnstcw
out
lods
pusha
pop
add
pushf
jl
int
iret
stc
insb
shl
outsb
inc
fistpll
xchg
jae
xor
sbb
incb
cmp
aaa
ja
scas
cltd
scas
lahf
pop
fsub
cltd
mov
stos
aaa
mov
jg
add
sub
jbe
mov
mov
divl
cmp
pop
fistl
jne
aas
pop
or
je
fidivl
sub
cwtl
mov
pop
ja
out
imul
mov
xorl
and
gs
or
shrl
enter
jne
out
sub
mov
fsubs
xlat
mov
cld
aam
outsb
into
testb
frstor
fcompl
inc
imulb
inc
sahf
jg
in
in
repz
aaa
fnstcw
mov
ds
pop
inc
cmp
push
sbb
outsb
lods
out
mov
mov
in
aaa
push
fidivrs
es
push
imul
push
movsl
jns
push
push
jl
sbb
cmp
leave
stos
fildll
out
out
pop
and
lahf
xchg
push
push
iret
loopne
out
mov
faddp
or
mov
push
or
mov
addb
cli
incl
out
dec
mov
push
ljmp
fiadds
and
inc
xchg
shlb
fdivs
pop
fsubrl
icebp
inc
push
jg
add
sarl
jne
cmp
clc
mov
sbb
dec
ficoms
xchg
and
xchg
arpl
push
rcll
out
jne
cmc
test
xchg
lods
in
or
mov
pop
je
xchg
ret
cmpsl
mov
sub
in
stc
or
jp
and
add
sbb
ljmp
inc
mov
mov
pop
push
in
push
into
shlb
jb
adc
xlat
jle
movsl
sahf
and
xchg
xor
outsb
outsl
out
shr
adc
adcb
vmovapd
lret
cltd
mov
in
stos
das
push
jge
mov
loopne
cltd
lret
pusha
fisubs
sub
inc
into
stos
xchg
dec
adc
call
lcall
jge
sub
pop
adc
cmpsl
sub
xor
mov
push
mov
lcall
cwtl
negb
inc
push
repz
in
mov
pop
pop
out
clc
jl
jge
mov
jge
mov
ljmp
fwait
add
les
fists
testb
in
adc
dec
stc
movsb
adc
mull
repz
repnz
pushf
mov
and
andb
xor
jne
inc
int
cmpsb
lods
lea
mov
xchg
adc
sbb
pop
arpl
xchg
sbb
aam
cmp
add
mov
cmp
push
pop
adcb
and
sbb
rcr
jne
xchg
add
fbstp
add
cmpsl
mov
loopne
sti
cmpsb
pop
cli
iret
push
xlat
aaa
sub
ds
test
xor
clc
sub
dec
cmpsl
out
sbb
lea
out
scas
pop
pop
jmp
shll
fwait
in
test
test
cmp
mov
mov
jmp
pop
outsb
ljmp
cwtl
filds
xor
shrb
imul
clc
jo
mov
xchg
mov
imul
lea
inc
mov
pop
xor
add
push
push
insb
mov
mov
in
add
mov
mov
pop
stos
bound
notl
and
push
test
jecxz
push
mov
sub
popw
xchg
push
fildll
leave
or
push
fldt
cltd
push
add
test
mov
adc
ja
std
xchg
add
or
or
mov
cmp
outsb
jne
xor
arpl
sub
sub
push
mov
mov
pop
cltd
pop
sbb
shl
fdivl
nop
daa
lock
lret
mov
push
mov
ffreep
sahf
shll
mov
fs
ror
cmpsl
mov
jle
add
cld
cmp
sub
mov
mov
push
and
imul
sbbl
jp
out
outsb
jp
mov
imul
dec
cmpsl
negb
loopne
or
mov
es
pushf
push
loopne
cltd
ja
jg
inc
pop
sub
faddl
adc
mov
aaa
clc
rclb
sub
push
xchg
sbb
xor
pop
fucomi
in
fidivl
jbe
sub
push
sbb
mov
sbb
and
ror
out
xchg
add
andl
cmp
add
addb
mov
sbb
mov
xor
out
adc
loope
les
test
popf
movsb
mov
popa
mov
pop
push
loop
sub
inc
mov
mov
loopne
outsl
jg
push
sbb
cli
out
jg
sbb
push
lahf
pop
loop
addr16
dec
aaa
push
push
loop
pop
and
pushf
insl
fs
mov
test
mov
cmp
in
xchg
xlat
jno
or
mov
out
in
xchg
mov
sbb
insl
add
pop
mov
fisubs
and
xchg
xor
pop
jnp
mov
ficompl
push
int3
test
cmpl
lret
cli
cmpsb
imull
push
mov
push
fwait
mov
pop
aad
inc
push
or
rcr
lea
sarb
mov
adc
ja
sub
cmpsb
fiaddl
je
xchg
lcall
xlat
xor
insl
pop
in
jnp
aaa
out
jge
push
mov
cmpsl
popl
testl
xor
testb
sbb
iret
add
mov
push
and
push
jbe
mov
jl
call
std
testb
repnz
xor
out
mov
fdivrl
jnp,pn
pop
call
jnp
sbb
add
aaa
jae
aam
xor
mov
shrb
inc
std
test
jb
sbb
scas
add
aas
jns
fidivl
les
movsb
xchg
or
xchg
aad
mov
fisttps
mov
lds
test
jbe
push
aam
loop
xor
or
xchg
adc
repz
cld
out
pop
dec
jmp
je
into
jns
mov
xor
and
aad
mov
fists
lret
sub
dec
imul
push
mov
pop
mov
mov
lahf
adc
pop
imul
xchg
sbb
cmpb
andl
fwait
sub
lock
or
scas
mov
adc
aaa
lods
xchg
mov
nop
nop
xchg
rclb
push
push
add
addl
std
or
mov
iret
fisubrl
xor
dec
filds
or
cmp
dec
inc
fisttps
fwait
jb
call
cwtl
xchg
cmp
push
addr16
popf
nop
mov
and
xor
pand
jae,pn
popl
ds
pop
mov
movsl
adc
or
push
and
leave
mov
mov
lock
xchg
scas
and
fisubrl
mov
cld
outsl
insb
mov
pop
int
iret
mov
cli
sahf
pop
push
or
int
push
in
int3
out
push
iret
push
mov
jmp
push
js
adc
icebp
loop
mov
movsl
leave
in
xor
mov
aas
mov
aaa
pop
or
mov
mov
pop
push
aas
sub
mov
mov
outsb
xor
sub
fidivs
adc
mov
pop
arpl
into
outsl
repz
adc
ficoml
mov
div
dec
mov
xchg
adc
aam
fstps
push
or
pop
mov
sub
fisttps
xchg
push
jmp
mov
fdiv
mov
xor
into
adcl
sbb
aaa
adcb
dec
fdivl
xor
sbb
adc
dec
xchg
push
lret
fbld
xchg
dec
adc
jl,pn
ret
int
repz
repnz
data16
adcb
inc
data16
xchg
sbb
cmp
fidivrs
or
or
mov
mov
sub
or
or
je
data16
mov
inc
xor
or
mov
aas
leave
and
addr16
ret
xor
aas
cmp
cmp
mov
sarb
repz
cld
cmpsb
sti
out
inc
mov
mov
xorl
cmp
sbb
mov
popa
and
jb
push
insl
adc
xchg
cltd
jnp
fiaddl
adc
sbb
cmpsb
or
xorl
jmp
jg
and
fwait
xchg
adc
adc
mov
movsl
bound
fstp
out
shl
das
xchg
leave
mov
mov
insb
dec
pop
divl
fidivrl
adc
outsl
mov
dec
jbe
mov
sbb
jnp
sub
int
int3
int3
push
lahf
lcall
sti
icebp
push
ds
push
je
jne
mov
mov
dec
cmp
dec
inc
or
pop
ret
rcll
jmp
fldt
lock
inc
mov
xchg
sahf
out
mov
inc
mov
xchg
pop
mov
aaa
negb
negb
sti
fnstcw
fistl
filds
idivb
jnp
lcall
in
ja
mov
xchg
inc
inc
test
sub
cmpsb
repz
pop
mov
fcmovb
dec
lods
ljmp
push
imul
cmc
sti
cltd
mov
testl
dec
inc
jge
fnstcw
fnstsw
jno
std
std
outsb
aas
popf
add
adc
cmp
pop
js
or
pop
lret
push
ret
ja
add
fcmovne
pop
sub
hlt
sti
out
fisubrs
lret
dec
scas
loopne
dec
jbe
into
push
cmp
pop
iret
pop
lret
mov
insl
ret
sub
insl
sbbl
or
out
stos
int3
stos
jmp
lods
add
jnp
stos
test
sbb
and
je
test
pop
or
enter
jbe
imul
and
imul
imul
dec
or
push
ret
cwtl
out
addr16
ss
les
leave
fdivrs
xchg
pushf
lea
repz
sbb
dec
mov
cmp
test
repz
jmp
lods
ret
mov
jmp
push
daa
ret
shll
rol
and
or
mov
sub
pushf
scas
fidivrs
clc
cli
or
mov
ror
add
nop
addr16
scas
shrb
fists
sub
add
dec
adc
jge
adc
fldt
sbb
sbb
push
mov
add
out
dec
xorb
xchg
repz
jno
stos
sbb
lret
gs
push
fmul
inc
cmp
and
jb
xchg
arpl
jmp
inc
loopne
fistpl
lcall
repz
movsl
imul
idivl
and
out
addl
jmp
inc
or
cmp
mov
mov
loopne
dec
push
pop
cmc
sub
arpl
dec
imul
push
cmpsl
adc
xchg
test
in
mov
fildl
mov
inc
xchg
addb
test
or
mov
in
sub
push
or
addr16
pop
push
dec
into
outsl
or
push
and
mov
mov
fwait
and
sahf
cs
loope
cwtl
adc
stos
ret
fstl
iret
insb
iret
pop
jns
ds
add
out
push
js
fnstenv
daa
enter
loope
sahf
repnz
fdivp
pop
scas
sbb
mov
jg
ja
out
mov
loope
in
mov
xchg
sbb
scas
outsl
sbb
std
fidivs
insb
imul
xor
test
mov
test
xchg
mov
aas
cmp
inc
shr
mov
jecxz
mov
jno
push
or
sti
mov
divb
sbb
or
jns
xchg
out
inc
jnp
es
es
mov
cli
sbb
xlat
xchg
xchg
ljmp
iret
in
adc
clc
ret
and
es
mov
fcomps
mov
adc
iret
cmc
std
adc
mov
cmp
jecxz
cmpsb
push
dec
ret
jo
xchg
jne
call
lock
out
fisttpll
pop
push
sbb
imul
mov
sahf
fisubl
into
lods
testb
mov
in
ret
decb
sbb
sub
push
sarl
adc
fldt
mov
loop
lock
jno
insl
test
inc
push
push
or
aad
arpl
mull
addr16
xchg
mov
and
ljmp
mov
not
pop
mov
or
push
aam
mov
dec
mulb
scas
aas
cmpsb
test
shll
jge
push
cli
test
cmp
dec
mov
imulb
xor
mov
pop
out
jb
jecxz
or
es
lods
dec
sub
loopne
insb
inc
sbb
jo
lock
int
dec
daa
fcmovb
xlat
daa
cmpsb
lahf
mov
mov
adc
mov
hlt
movsb
mov
roll
pop
divl
insb
jge
cmc
sbb
dec
enter
in
sbb
push
popa
adc
out
push
fcom
sbb
jg
jmp
adc
test
xlat
adc
jge
stos
jg
sub
dec
xor
sub
or
push
fnstcw
adc
adcb
arpl
inc
xchg
imul
rol
gs
adc
add
rcrb
sbb
lods
aam
cmp
push
sub
in
xchg
pop
pop
and
cmpsl
loopne
shr
jl
push
clc
add
sub
mov
jecxz
mov
out
ds
jnp,pn
insl
dec
pop
jg
mov
aas
or
repz
push
scas
pushf
cs
push
dec
jmp
jecxz
jae
push
jne
iret
jmp
push
cmp
mov
ret
push
pop
mul
je
pop
repz
push
cmpsb
arpl
mov
outsb
setbe
push
call
shrl
in
pop
xchg
ror
pop
das
rol
test
sbb
dec
push
cmp
add
test
leave
inc
fxch
push
inc
pop
pop
pop
fdivs
xchg
inc
or
cmp
aad
and
ljmp
int
xchg
iret
dec
adc
shlb
xchg
dec
pop
loop
jnp
pop
mov
rolb
push
lea
pop
lock
mov
imul
lock
andb
aam
fcomp
lock
stos
out
arpl
or
rolb
es
loop
ja
push
jae
addr16
dec
shr
add
dec
push
xchg
cli
fwait
pop
rorl
mov
nop
sbb
mov
jns
jge
and
ljmp
xchg
dec
enter
dec
jnp
imul
sub
mov
pushf
mov
mov
mov
mov
mov
pop
xor
pop
arpl
lea
pop
popf
mov
sub
adc
xor
movl
inc
cmpsb
sub
inc
addb
lock
aaa
imull
mov
xchg
out
sub
and
mov
cmp
mov
fwait
pop
lods
jbe
mov
sti
adcb
iret
dec
inc
imul
fimull
fistpll
fsubrl
nop
mov
cmp
xchg
scas
mov
aad
ret
clc
call
shrb
ja
sbb
inc
mov
lret
mov
cwtl
negl
aad
push
xchg
or
jl
dec
adc
inc
mov
jnp
stc
sbb
add
xchg
mov
inc
push
xlat
xor
fstpl
imull
push
mov
aaa
movsb
cmc
push
xor
jge
jmp
popf
mov
sub
or
pop
mov
stc
push
adc
cld
mov
rcl
xlat
cmpsb
jo
imul
movsl
cltd
adc
mov
sbb
mov
ret
ret
les
mov
or
outsb
frstor
fmul
lock
scas
jp
xor
xor
mov
dec
stc
add
data16
shl
hlt
into
xchg
or
repz
mov
call
jg
jmp
ja
ficoml
popa
je
xor
shll
mov
mov
rolb
mov
adc
push
add
mov
les
inc
jge
sbb
loopne
bnd
in
jl
xor
jge
mov
in
mov
scas
incl
sbb
jnp
xchg
pop
aam
shlb
xchg
nop
sahf
movl
xchg
pop
ret
jmp
and
testb
ss
ds
cmp
pop
sbb
push
push
mov
fstpt
shrl
lods
mov
cltd
inc
loope
cmp
or
sbb
aas
mov
fsub
pop
movsl
fildll
cld
repz
pop
shrl
dec
jae
lret
mov
adc
mov
fwait
mov
aam
imul
mov
jo
insb
insb
fstpt
mov
sub
xor
ret
rolb
push
fildl
mov
fistpl
mov
or
out
cmp
sub
ftst
mov
sub
mov
lea
into
lods
test
push
mov
jnp
or
fldl
not
into
cmp
mull
jne
mov
adc
cli
sbbl
jg
clc
fstp
icebp
movb
movsb
outsb
pop
in
ret
movsl
mov
add
decb
inc
out
push
dec
pop
add
mov
out
pop
fnstsw
mov
pop
mov
fisubl
out
fisubrs
jbe
and
pop
or
test
cmp
mov
outsb
popf
and
ret
arpl
lcall
pop
and
mov
icebp
or
stos
xor
mov
test
push
call
imul
pop
sahf
shlb
pop
jmp
leave
push
orps
sub
dec
out
pop
sub
fldcw
out
stos
add
jecxz
loopne
in
in
rcrb
inc
cmp
fistl
repz
lret
and
je
jmp
leave
scas
jl
adcl
add
or
jg
cwtl
sahf
fistl
scas
add
mov
neg
pop
ret
add
shl
aaa
jmp
clc
in
jp
jbe
sti
mov
cmp
sub
dec
mov
out
and
fisubrs
out
loope
or
push
sahf
or
xchg
jmp
adc
into
mov
jp
pop
jo
outsb
xchg
sub
sbb
scas
mov
insl
pop
pop
int3
or
cmp
sub
jb
gs
sarb
mov
jb
cmpsb
jecxz
jb
popf
fsubrs
mov
xchg
cmp
adc
call
lods
addr16
jo
aas
inc
and
push
repnz
adcl
mov
sti
pop
cs
pop
mov
sbb
fildll
jecxz
mov
xor
repnz
adc
or
fidivrs
lds
dec
loope
sub
popa
adc
ljmp
inc
adc
dec
inc
outsl
pop
jne
jne
lahf
xor
ja
ffreep
stos
jecxz
out
das
pop
add
in
pop
pop
out
cmp
mov
aaa
into
inc
and
int3
in
pop
and
adc
lods
xor
sub
into
cmp
xchg
into
in
mov
mov
add
mov
lahf
ret
test
je
and
xchg
lahf
sub
push
mov
aaa
mov
push
call
pop
enter
or
cmp
adc
inc
jbe
add
fldcw
cmc
lahf
lock
out
cmp
lds
pop
out
push
or
mov
cwtl
jne
sbb
testb
fdivl
stc
cmpsl
pop
add
xor
ljmp
mov
into
fisttps
mov
mov
dec
lret
inc
pop
lock
jnp
jbe
add
add
xchg
sub
jnp
dec
imul
andb
icebp
jl
jge
aas
sub
test
cmp
xchg
jmp
dec
mov
pop
shl
mov
icebp
add
and
add
into
out
lea
cmp
and
aad
ljmp
lea
and
stc
push
neg
ffreep
cmp
pop
iret
mov
es
push
fistpll
and
sti
lahf
arpl
ret
shlb
jg
mov
int3
imul
pop
mov
fistpl
scas
ficompl
cmp
js
pop
pop
insb
cmc
fnstenv
cmp
push
mov
ja
jecxz
fldcw
in
mov
cld
pop
dec
test
call
add
lock
jnp
dec
repnz
imul
or
out
fbld
jmp
cmp
cmc
aad
lret
pop
pop
mov
inc
lahf
mov
pop
adc
pop
in
imul
shrd
and
clc
add
pushf
xchg
mov
fwait
sbb
fsubp
or
test
stos
pop
sbb
pop
jge
sbb
and
xlat
loope
fbld
arpl
pop
adc
xor
sbb
leave
test
mull
xchg
pop
repz
clc
insl
out
ja
xlat
xor
and
movsl
add
je
dec
cmp
add
mov
cmp
lahf
imul
and
push
pop
jmp
adc
and
scas
adc
cmp
aad
mov
ljmp
mov
jne
imul
hlt
scas
mov
cmp
jg
xchg
fxtract
and
xchg
repnz
jae
imul
pusha
call
lods
push
outsl
into
testl
mov
cmpsb
or
dec
pop
repnz
aad
popa
pop
mov
pop
movlhps
neg
adc
mov
sub
xchg
pop
or
push
mov
in
test
fwait
sarl
arpl
gs
jbe
push
jnp
xchg
mov
cwtl
jle
adc
loop,pn
and
mov
lahf
mov
jne
rcrb
inc
jmp
jnp
or
xor
push
inc
push
out
sbb
xchg
push
ljmp
scas
sti
mov
outsb
mov
jecxz
fldt
ljmp
mov
ds
pop
out
iret
movsb
xchg
lcall
inc
sti
notl
cmp
fwait
jne
mov
aas
xor
into
jo
jno
mov
sbb
mov
dec
movsl
jle
out
sbb
pushf
push
ret
cld
fs
das
xchg
test
xor
mov
aam
test
sbb
cmp
push
testl
xor
mov
stos
outsb
ret
pop
lea
mov
mov
addb
or
loopne
xor
and
jnp
lahf
shll
inc
mov
push
mov
jns
pop
out
push
and
xor
fsubrl
and
clc
ret
sbb
mov
mov
out
fcompl
jecxz
pop
in
xchg
mov
leave
push
lods
push
mov
pop
adc
cld
xlat
sub
sub
insl
xchg
cmpsb
jno
in
cmc
outsl
pop
xchg
ret
out
mov
lods
in
mov
add
push
jno
fwait
ficoms
jle
das
cmp
jns
jbe
stc
xlat
fldpi
shll
out
js
jge
outsl
sbb
ret
fcmovnb
mov
push
add
outsb
scas
push
xchg
lea
add
cmp
pushf
out
jle
pop
in
xchg
and
sub
jne
shrb
xchg
sub
fisubl
roll
add
cmp
orb
or
fcoml
scas
cmp
sbb
and
mov
lret
push
aas
dec
pusha
pop
sbb
addr16
sub
cs
call
or
or
dec
fistps
xchg
cmpsl
es
jmp
jle
fbld
adc
pop
mov
mov
pop
pop
jne
or
or
inc
out
repnz
fildl
push
dec
mov
jnp
inc
fnstenv
jnp
fdivrl
fistpl
fimuls
adc
xor
push
or
notl
mov
in
mov
cs
dec
push
cwtl
cld
jg
gs
mov
mov
loope
sbb
mov
roll
imul
xchg
dec
xchg
cmp
dec
adc
xchg
idivb
sarb
out
ret
push
outsb
add
lret
fnstsw
aad
aas
cmp
nop
push
sti
cmp
or
into
xchg
fsubs
loop
jp
fnstenv
mov
pop
inc
adc
sub
sbb
or
sub
sub
mov
sub
add
dec
jp
aam
sbb
push
or
cmc
pop
xchg
outsb
pop
sbb
fnstsw
mov
cmp
ljmp
push
outsb
jg
daa
ja
out
pop
ja
out
and
out
das
out
sub
mov
les
notb
pop
dec
xchg
mov
mov
inc
inc
push
insb
sub
cltd
sub
fldt
repz
jnp
pop
jne
call
sahf
leave
pop
or
ds
scas
sbb
ret
and
adc
loope
mov
loop
or
je
sti
adc
mov
fisttps
push
fs
leave
jl
mov
loop
cs
fisubrl
std
lret
jg
xchg
ret
fs
add
mov
sbb
aas
jae
std
shll
push
movsb
mov
jno
movsb
scas
repnz
pop
push
jne
xchg
and
fwait
pop
ljmp
pop
jp
lods
aaa
gs
lret
or
imul
mov
rorl
ss
inc
repz
ret
xchg
das
adc
mov
or
shrl
sbb
and
test
jg
pusha
pop
dec
cmpsl
fisubl
adc
pop
mov
mov
ret
mov
adc
lods
and
inc
sti
stos
divb
jno
push
xchg
and
fistpll
aaa
fisubl
pop
pop
xchg
mov
mov
sub
movsl
or
jb
lds
sahf
pop
mov
movsb
and
dec
sub
push
out
insl
push
repz
cmp
sahf
cs
mov
into
mov
xchg
mov
insb
jne,pt
mov
mov
push
icebp
cmp
and
inc
lods
pushf
call
mov
pop
imul
enter
jnp
adc
std
std
push
scas
andl
pop
lcall
xor
sub
aas
stos
outsb
int
xchg
or
sbb
imul
dec
cmp
inc
dec
or
pushf
jle
sub
mov
aas
or
mov
lods
inc
dec
or
mov
fdivl
add
mov
inc
ja
jl
insb
fstps
sbb
cmp
insl
jbe
inc
test
lods
test
ljmp
fldl
iret
popl
fimull
mov
mov
or
cltd
mov
es
push
adc
in
insl
jns
mov
mov
mov
dec
lods
and
fcomp
mov
cwtl
jnp
xlat
js
stc
add
jns
outsb
mov
pushf
xchg
outsl
lret
fistps
jnp
das
push
sbb
push
pop
sbb
jge
icebp
jle
mov
sub
dec
imul
pop
outsb
xchg
jne
movsb
mov
sbb
mov
cs
sbb
pop
sub
nopl
sahf
push
scas
push
fwait
outsb
aaa
stos
adc
or
mov
out
pop
sbb
orb
loopne
int3
aas
addr16
push
adc
addb
xchg
scas
lods
outsl
mov
hlt
in
xchg
stos
pop
sbb
mov
nop
jg
decb
jl
sbbl
nop
sbb
imul
pop
xchg
ja
lahf
jmp
pusha
mov
lods
dec
scas
call
jl
pop
cli
and
mov
xorb
jnp
iret
mov
mov
jg
push
dec
push
mov
pushf
jle
lods
jge
xor
inc
outsb
sarl
mov
mov
pop
dec
fmuls
cmp
mov
testl
jmp
out
push
imul
lcall
sub
sub
add
lds
call
mov
push
mov
dec
xchg
jp
or
das
mov
arpl
ljmp
mov
in
jo
arpl
data16
sbb
dec
cmpsb
bound
mov
pop
addr16
addr16
stos
mov
push
cmpsb
movsl
add
mov
dec
ljmp
divl
pop
pushf
mov
insb
in
movsb
cmp
lret
ret
and
mov
jmp
roll
jp
sti
aad
outsl
add
cltd
loope
mov
cmpsb
iret
in
pop
and
out
es
stc
imul
cmp
aaa
cld
pop
imull
inc
cmp
sub
out
sbb
mov
inc
mov
out
and
xchg
fcomip
pop
cmpsb
pop
push
push
jns
sti
fstl
mov
fmuls
mov
stc
scas
cmpsl
pop
fstpt
xor
mov
mov
stos
xchg
lahf
ss
sbb
fneni(8087
movsb
push
xchg
push
push
add
fistps
push
ja
push
je
xor
roll
mov
addr16
pop
cmpsb
arpl
outsb
idivb
mov
lret
cs
imul
test
sub
cmp
fwait
xor
ja
pop
outsb
cmp
mov
ds
mov
inc
sub
mov
scas
and
pushf
xor
fwait
outsb
dec
adc
mov
jle
push
into
loopne
xchg
enter
pop
shll
push
fidivrl
jne
lcall
sti
nop
fidivrs
scas
push
fildll
xchg
cmp
mov
sbb
pop
add
dec
orl
mov
testb
mov
mov
pop
sbb
leave
repz
jne
push
sub
adc
fldcw
xor
and
pop
or
leave
sub
outsl
scas
call
jmp
inc
test
insl
test
cmp
std
ss
dec
and
cmc
push
das
jg
movsb
in
xlat
in
pop
mov
rorl
add
add
out
pop
pop
jno
jns
mov
aam
lds
daa
add
jp
cmc
sub
cmp
in
lret
mov
inc
push
fucomip
mov
or
xlat
scas
imul
insl
add
xchg
mov
jae
out
popl
mov
adc
mov
mov
aam
shll
mov
sub
jl
mov
inc
iret
jns
jg
add
or
shr
cwtl
jge
push
jbe
fcoms
das
mov
mov
jg
pop
and
lock
pop
leave
cmpsl
fisttpll
fimull
fadds
mov
jno
xorb
xor
and
sti
push
cmpsb
jo
jb
inc
out
out
xchg
adc
dec
shrl
sbb
mov
les
xor
movsl
pop
in
cmp
pop
adc
push
clc
ss
mov
cli
mov
sahf
jnp
xor
inc
jg
inc
adc
test
cmpsl
push
mov
icebp
pop
lret
cmp
pusha
pop
out
ret
jbe
pop
dec
cmp
dec
pop
mov
xor
push
cmc
dec
push
mov
and
cmc
sbb
lock
stc
icebp
xchg
adc
xor
adc
or
fcomi
lahf
mov
sub
shlb
fbstp
scas
mov
and
or
jb
xchg
or
leave
imul
inc
mov
lea
scas
test
xlat
stos
out
mov
xor
mov
jecxz
scas
push
fsubrs
ffree
stc
adcb
aam
movsl
sub
or
stos
pop
xchg
mov
adc
mov
mov
cmp
sub
inc
out
mov
xchg
fs
out
jae
data16
out
negb
sub
jg
in
mov
cmp
cmpsb
pop
mov
adc
push
shll
fmul
fbstp
mov
push
fcoml
xor
push
aas
xor
xchg
adc
mov
sti
sub
repnz
lods
scas
sub
mov
mov
mov
stc
sbb
test
xchg
pop
ror
mov
shll
jle
fsts
xor
jnp
aam
cmpsl
movsl
pop
pop
mov
ds
mov
aas
inc
dec
addr16
cli
fnstcw
or
inc
or
pop
xchg
data16
out
stos
fistps
mov
imul
cld
lahf
pop
fwait
sahf
mov
data16
pop
jmp
sbb
pop
push
ljmp
das
mov
lds
lods
mov
into
xchg
jae
sbb
xchg
dec
cli
int
mov
stos
sub
mov
pxor
lods
inc
fimuls
in
jno
pop
mov
inc
mov
or
jno
mov
adc
fcomps
inc
idivl
add
lret
pop
and
in
fidivs
dec
jmp
sub
mov
cmc
movsl
push
sbb
adc
adc
pop
inc
int3
out
cmpsl
shl
das
mov
jl
or
pop
sub
repz
ja
jge
insl
orb
jl
fisttps
popf
mov
jo
xlat
mov
es
fcoml
mov
loopne,pn
shll
mov
mov
jg
lods
fimuls
push
arpl
in
and
cmpsb
pop
loop
pop
push
out
xlat
hlt
test
jnp
insl
pop
mov
pop
push
fcmovnb
mov
dec
dec
jbe
xchg
loop
andl
pop
xlat
pop
add
mov
test
repz
pop
cmp
xchg
or
jecxz
and
out
lods
add
xor
sbb
int
dec
jecxz
shlb
and
pop
icebp
les
jg
out
adc
outsb
dec
lods
idivb
lods
in
addr16
lcall
cmp
mov
stos
push
fcom
mov
xor
outsb
push
int3
jnp
push
adc
outsb
xor
int3
pop
xor
and
jecxz
or
mov
test
test
imul
mov
imul
shrb
jg
fnstenv
xchg
jo
push
sbb
idivb
add
lods
jp
and
ss
mov
mov
stos
out
pop
cmp
popf
scas
jecxz
std
xor
stc
mov
daa
mov
ja
pop
mov
out
mov
aad
lods
fucomi
pop
sub
cld
mov
outsl
jo
dec
mov
ss
fimuls
mov
dec
out
jge
in
dec
push
mov
pop
outsb
lret
imul
sub
js
push
xor
sti
gs
addb
cli
lahf
mov
sbb
dec
push
popa
pop
adcb
pop
and
outsl
data16
lods
and
jne
movsl
aas
stos
mov
push
cmpl
or
pop
jb
pop
das
mov
xchg
xchg
mov
test
gs
sbb
cs
adc
add
int3
jbe
ds
call
xor
jo
xchg
mov
mov
pop
and
mov
mov
loope
mov
inc
jmp
inc
iret
xor
fsubrs
in
sbb
shlb
sbb
inc
shrb
cli
das
add
repz
xchg
push
dec
pop
shrb
adc
cmp
popl
out
test
and
push
sbb
mov
arpl
int
push
ja
cmp
jbe,pn
cmp
fldt
push
out
and
xchg
sub
push
outsl
adc
inc
fldenv
gs
pop
insl
dec
push
enter
pop
xor
xchg
clc
testl
dec
sub
lahf
pop
inc
push
sub
mov
out
jg
std
mov
pusha
mov
imulb
and
mov
cmc
jp
sub
lods
mov
or
push
jnp
shl
fisttpl
pushf
lock
mov
cltd
jle
push
rolb
cmpsb
stos
add
shl
pop
lcall
push
mov
mov
jae
out
lret
push
testl
mov
ds
in
daa
dec
shlb
xchg
imul
inc
and
sahf
ds
mov
inc
and
lahf
cmpsb
dec
arpl
jl
out
pop
add
lock
pop
nop
mov
cmp
ss
in
cmpsb
dec
pop
add
int3
pop
mov
xchg
ret
sahf
je
mov
cld
les
jo
outsb
ds
test
mov
or
mov
sub
popa
inc
fldenv
outsl
lcall
mov
ret
sarl
mov
cwtl
data16
push
xchg
xchg
and
ja
cmpsb
xor
mov
nopl
xor
push
push
inc
ds
fcoml
in
mov
fwait
mov
into
loop
mov
mov
mov
pusha
cmp
xchg
sbb
pop
stos
in
add
cmpsl
or
pop
and
pop
xchg
dec
mov
fbld
lcall
or
sub
loope
mov
adc
leave
in
fcmovb
mov
stc
add
xchg
ss
ja
pop
xchg
jo
mov
scas
push
xor
mov
imul
or
adc
dec
cs
sbb
inc
ret
cmc
dec
inc
mov
aaa
es
sbb
lret
rcl
sub
rolb
int
sahf
add
mov
daa
shr
enter
or
stos
mov
fwait
sbb
lahf
cmpsb
sub
jl
test
adc
sahf
pop
pop
popf
push
outsb
or
fisubs
ret
es
lods
mov
imul
test
sub
cli
sbb
mov
arpl
inc
shr
les
stc
rorl
scas
sbb
les
pop
fwait
cmp
test
pop
sbb
subb
outsb
dec
outsl
cmpsb
data16
out
or
fbstp
pop
imull
ret
andl
imul
jae
insb
ja
std
fldcw
lea
test
xor
jb
insl
mov
ret
and
cmc
xlat
sbb
xchg
dec
push
icebp
pop
push
jle
cmp
lahf
gs
ja
out
pop
adc
in
jge
andb
scas
hlt
pop
mov
stos
pop
mov
je
add
xchg
mov
out
insb
out
cmp
jb
dec
mov
cmpsb
nop
mov
pop
int
sbb
pop
mov
aas
xor
sub
sub
push
lods
mov
sub
mov
test
lods
xchg
push
xchg
sbb
xor
test
je,pt
clc
sub
fidivs
and
fwait
sub
inc
push
out
ljmp
or
jl
push
in
sbb
cmovg
fildl
cmp
pop
mov
repz
aam
push
cmp
dec
adc
ja
mov
rcrl
jne
je
adc
adc
out
pop
dec
adc
mov
dec
sarb
outsl
cltd
adc
sub
je,pt
inc
jbe
mov
push
cmp
cmp
cld
insb
ja
cwtl
mov
mov
pop
mov
pop
je
fmuls
popa
inc
xorb
sbb
shl
push
mov
push
mov
sahf
outsl
add
cmpsl
shlb
pop
mov
rcr
sub
sub
cmp
test
iret
scas
fisttpl
sti
xor
jmp
into
xlat
hlt
ror
cmp
mov
cltd
es
outsb
int
add
inc
fldt
cmp
out
ljmp
jnp
call
pop
lahf
clc
test
mov
sahf
sbb
out
xchg
cmp
lods
xchg
fnstsw
ljmp
popa
jb
sub
ret
adc
repz
mov
or
mov
out
lret
pop
dec
fbld
out
in
mov
out
arpl
jg
pop
fistpll
mov
pop
aas
not
shrb
xchg
imul
xchg
or
xchg
mov
sub
jle
das
imul
pop
pop
fistl
adc
lds
and
add
inc
shll
push
ss
stos
insb
or
mov
in
pop
push
hlt
cpuid
sub
xchg
imull
mov
test
scas
mov
rol
jmp
fwait
push
cmp
mov
scas
jecxz
jg
sbb
ss
jge
pop
ret
pop
adc
dec
hlt
lret
mulb
jle
add
shrl
pop
jl
addb
int3
in
insl
xlat
out
pop
push
mov
mov
jge
sbbb
mov
pop
pop
imul
or
dec
movsb
lods
lea
pushf
mov
xchg
cli
fsubp
daa
std
jg
push
push
mov
mov
or
jl
clc
push
inc
pushf
lock
hlt
shlb
dec
loopne
stos
lock
lods
mov
popl
mov
ret
mov
adc
repnz
pop
push
mov
sbb
mov
xchg
sub
xlat
push
mov
sub
push
adc
sbb
cmp
out
cmpsb
mov
in
filds
inc
das
loope
or
push
xor
hlt
adc
pushf
jne
pop
int3
mov
pop
mov
lahf
sbb
call
lock
fdivs
int3
imul
aaa
xchg
xchg
call
push
fwait
mov
lds
adc
sub
imul
jle
cs
mov
and
bound
fcoml
repnz
lahf
xchg
fcomi
lret
mov
in
mov
jb
dec
mov
pop
cs
out
xchg
sub
dec
pop
xbegin
mov
jo
mov
add
add
and
adc
dec
pop
shrb
xorl
or
sub
push
testb
cmp
shr
movl
fs
mull
fbstp
xchg
dec
sarb
fildl
es
add
pop
xchg
rcrl
xchg
arpl
mov
lahf
ljmp
out
dec
inc
xchg
pop
cli
cmp
or
pop
cmp
sub
ret
and
mov
arpl
outsl
call
cs
sbb
push
fdivr
mov
pop
test
lcall
sub
repnz
lret
scas
aas
mov
mov
mov
pop
mov
sub
in
in
add
testb
fstpt
sbb
popf
lock
lahf
push
mov
int
insb
mov
jae
mov
lahf
mov
dec
fnstsw
out
cmpsb
xor
pop
stos
subps
out
pop
stos
ljmp
mov
mov
add
jle
fmuls
out
sub
mov
outsl
pusha
dec
pop
push
mov
outsl
inc
jl
je
or
xor
mov
xor
xchg
ja
lods
pop
test
ja
mov
mov
out
and
insb
cmp
aaa
pop
js
lcall
pop
jmp
sub
pop
shlb
pop
movsl
sub
add
mov
outsb
popf
sbb
xor
mov
sbb
and
xor
jo
add
or
sub
daa
jns
and
adc
sbb
scas
add
out
stc
les
jmp
sub
pop
push
mov
lahf
and
imul
add
std
int3
lock
push
shll
mov
dec
loop
addr16
mov
or
dec
dec
xchg
aam
hlt
mov
loopne
roll
xor
in
pop
nop
cmp
cltd
repz
xchg
std
lret
jge
jnp
xlat
fsts
fincstp
push
or
pop
icebp
movl
out
cmpsb
jg
mov
or
dec
mov
data16
add
cmpsl
out
in
or
imull
iret
xlat
pop
lea
jb
into
inc
testb
shll
imul
pop
pop
add
lcall
lahf
filds
cld
loop
cs
scas
push
inc
idivb
xor
jp
sub
mov
sbb
testb
aas
jmp
aad
popa
sbb
repz
fwait
test
jg
fs
adc
addr16
mov
mov
repnz
add
out
jnp
mov
inc
mov
rorl
loop
push
push
outsb
or
lcall
fwait
jge
leave
ret
xlat
pop
jae
sarb
sti
outsl
out
inc
hlt
xchg
adc
cmp
jae
adc
into
icebp
mov
jnp
xchg
jae
cli
inc
push
popa
xlat
adc
insb
pop
stc
enter
or
jl
lds
ret
add
negl
je
imul
mov
and
icebp
pop
cld
mov
mov
ficompl
ds
fnstenv
sbbl
xchg
jo
dec
scas
mov
dec
cli
das
leave
lods
stos
dec
cs
cmp
out
pop
cmpsb
pushf
and
pop
mov
jge
push
popa
push
test
ret
push
xlat
movsl
addr16
loopne
dec
hlt
cwtl
imul
xchg
mov
push
add
std
loop
das
ss
addr16
enter
or
loopne
pop
dec
lcall
arpl
mov
out
pop
mov
xchg
inc
cmpsb
insb
fcoms
inc
pop
sub
pop
mov
inc
out
dec
lock
jbe
xchg
mov
and
jl
ficomps
jns,pn
sub
mov
call
cmp
add
inc
outsl
ret
out
fnstsw
fdivs
scas
xlat
jae
mov
jns
jne
das
xor
push
lods
xchg
int
das
fwait
sub
dec
xchg
movsb
add
sub
imul
add
ss
mov
test
dec
jmp
lahf
mov
jae
in
in
jge
jnp
in
insl
mov
xchg
out
mov
filds
jnp
popa
adc
sbbl
addl
adc
int
mov
fwait
mov
push
int
mov
int
pusha
inc
out
sub
mov
mov
sub
stc
dec
sub
and
popa
test
mov
and
mov
sar
mov
and
and
stos
jne
fs
add
push
add
inc
push
mov
std
sbb
into
push
aam
mov
mov
js
in
mov
fucomp
cmc
hlt
faddl
outsb
push
adc
adc
or
pop
mov
push
push
ja
pop
inc
sub
inc
aaa
out
pop
push
lock
pop
dec
pop
hlt
jle
leave
out
mov
faddp
and
fsubs
repz
rorb
mul
pop
mov
cmp
pop
mov
cltd
jb
xchg
and
add
les
cmc
cltd
out
sub
push
notb
or
lock
jnp
inc
fucom
push
cmp
jnp
xor
ret
mov
ja
out
xor
dec
fidivs
lods
into
rolb
push
jg
rcrl
fldl
jp
lock
lods
test
pusha
mov
inc
jae
mov
mov
fnsave
or
xchg
jg
fabs
in
test
sbb
enter
in
mov
jmp
dec
repz
cs
inc
push
mov
or
int
scas
fistpl
xchg
sbb
loop
lahf
add
pop
pop
test
mov
out
inc
aas
mov
cmp
and
pop
push
jnp
in
cld
sub
xlat
xchg
mov
dec
mov
inc
dec
jg
mov
sbb
imul
adcl
jbe
inc
mov
mov
cmpsl
or
dec
or
sub
push
lret
add
sub
jb
add
and
ret
in
mov
shlb
loopne
sub
shll
and
pushf
fildl
inc
fdivp
shl
fdivrl
lods
fidivrs
xorb
popa
gs
push
lods
test
inc
push
addr16
add
iret
loop
push
notb
jns,pn
fldenv
cltd
test
fcomps
inc
idivb
jecxz
flds
pop
mov
clc
negl
xor
fsub
iret
fwait
mov
lock
fnstsw
imul
andl
fwait
repz
adc
movsl
fsts
xchg
cs
test
pop
jl
sbb
int
pop
and
icebp
inc
faddp
loop
xor
out
mov
xchg
sbb
pop
out
in
dec
add
dec
popa
fldt
daa
mov
mov
aad
jmp
mov
dec
aas
xor
jg
hlt
or
jb
jl
jg
mov
outsl
mov
into
pop
repnz
lret
cmpl
xchg
lock
aaa
push
subl
push
bound
pushf
stos
mov
sub
mov
inc
mov
pop
out
jnp
shlb
scas
cmp
sbb
mov
mov
fistl
rorl
shrb
in
leave
inc
out
push
mov
mov
hlt
mov
cltd
js
jbe
es
mulb
out
sub
jecxz
enter
push
imul
adcl
stos
and
dec
js
or
xor
and
jbe
repnz
sbb
jg
cmp
lods
outsl
xchg
pop
int3
imul
clc
jg
and
lock
loope
dec
in
push
outsl
int3
leave
mov
test
out
or
mov
fidivrl
cmpsl
out
cmp
insl
sub
sbb
push
jbe
jmp
idiv
mov
lods
jle
sub
adc
shrb
faddl
push
sbb
sahf
in
out
fwait
cmp
push
mov
xchg
xchg
dec
mov
test
fnstcw
jne
in
jne
jmp
jmp
add
sub
mov
out
out
mov
push
cs
mov
imul
es
iret
or
addr16
fbld
sahf
or
jmp
std
enter
lods
mov
out
push
stos
inc
ja
mov
scas
mov
aad
mov
popa
and
jno
push
inc
mov
insb
fimull
pop
out
fdivs
imul
or
mov
aam
out
and
lahf
sti
inc
pop
bnd
lahf
mov
adc
fists
aaa
inc
scas
scas
test
testl
cs
sbb
lahf
add
inc
jge
sbb
pop
cmc
out
sub
lret
push
sbb
sub
xlat
mov
pushf
inc
sub
out
imul
cmp
xchg
mov
loope
lods
scas
add
push
repnz
lods
repnz
imul
dec
mov
jg
imul
and
loopne
jbe
sbbb
push
mov
js
into
ret
xor
xchg
ficomps
insl
iret
mov
mov
shr
ficoml
lea
jae
xorl
inc
std
aas
pop
mov
and
shll
add
cmpsb
add
insb
sar
repnz
sbb
fimuls
imul
test
push
add
imull
out
xlat
lret
sub
mov
daa
jo
scas
or
and
rcrb
ficoms
ret
popa
adc
pop
xchg
lret
mov
mov
arpl
push
mov
ja
pop
movsl
and
jg
pop
sbb
mov
mov
inc
adcb
xchg
inc
aas
mov
xchg
aaa
mov
sbb
xchg
mov
pop
push
and
popf
mov
cmpsl
xor
cmp
mov
aaa
inc
pop
mov
jmp
mov
mov
icebp
lock
push
xchg
mov
sar
mov
or
mov
inc
sbb
sti
adc
outsb
cs
stos
ds
fyl2x
subl
xor
xchg
xor
dec
cmpsb
sbb
sub
dec
rcrl
adc
cmp
adc
hlt
dec
jb
adc
in
test
stos
xchg
test
cmp
sbb
xchg
pop
es
out
clc
push
movsl
rcrb
sbb
adc
xchg
jle
inc
fiaddl
inc
fnstsw
sub
in
bnd
fwait
jb
push
mov
push
mov
sub
fcompl
mov
fcomps
mov
mov
fyl2x
lds
push
into
sarl
sbb
cli
jecxz
mov
dec
mov
outsl
sbb
mov
sti
mov
shrl
fwait
adc
sub
mov
out
add
stos
jo
xor
xchg
leave
mov
icebp
xor
es
mov
push
das
in
das
mov
sbb
ret
outsl
shr
in
inc
mov
adc
imul
and
xchg
scas
scas
jne
xor
sbb
jns
add
push
jl
cs
popa
cwtl
js
iret
adc
test
inc
addl
je
xor
popa
test
dec
sub
out
dec
dec
cmp
or
call
insb
jae
sti
or
int3
mov
fidivrl
adc
pop
dec
sub
fcoms
or
sti
std
fldenv
xchg
imul
mov
push
jnp
lret
hlt
dec
ficoml
ds
inc
int
xchg
stc
push
adc
sahf
sbb
ds
cmp
shrb
and
in
and
sub
cmp
arpl
lods
mov
jmp
ljmp
sub
pop
lret
lcall
lock
or
pop
mov
push
or
mov
les
pop
rol
adc
mov
sbb
outsl
add
and
aaa
xorb
addr16
imul
negl
mov
pop
jbe
lahf
pop
add
stc
or
mov
or
outsb
enter
test
push
pop
ss
push
in
outsl
sbb
adc
sahf
jg
cs
dec
out
sub
outsb
mov
mov
scas
sahf
lods
cmc
icebp
pushf
icebp
adc
push
jecxz
or
mov
cmpsl
xor
es
cmp
cmp
inc
xchg
pop
mov
sahf
sub
jno
sbb
aad
iret
pop
pop
mov
mov
aaa
in
mov
inc
mov
jg
leave
pop
push
aas
xchg
sahf
stos
rdmsr
mov
cs
push
das
adc
cmc
cwtl
jp
jb
fdivr
outsl
adc
lock
xlat
repz
cli
data16
lahf
and
fxch
inc
out
out
pop
cmp
out
out
jmp
lahf
mov
fdivl
jmp
movsb
and
dec
add
xlat
divb
cmp
lret
inc
gs
cmp
dec
fisubrl
stos
mov
stos
pop
or
jg
sti
jns
jno
add
jbe
adc
lods
rorl
hlt
popf
ss
hlt
add
les
xor
imul
loop
inc
rcrb
out
and
popa
push
cmc
sub
pop
out
addr16
stos
clc
movsb
pop
ds
out
mov
push
mov
inc
fcoml
mov
dec
xchg
xor
push
and
pop
cmp
pusha
fwait
stos
xor
in
adc
ret
cmpsb
push
scas
sti
push
fstpt
ds
cld
inc
sub
and
pop
xchg
sti
sarl
push
lods
jbe
jne
loopne
ltr
jge
adc
cld
push
mov
testl
pop
jmp
sti
mov
rorl
arpl
mov
int
in
fwait
pop
xchg
fwait
iret
and
mov
lahf
enter
pop
clc
es
push
ss
xchg
pop
add
and
inc
testb
into
or
arpl
jg
imul
push
fsubrl
lock
pop
mov
stos
jb
jmp
fistl
loop
out
out
jnp
idiv
jg
pop
dec
call
jg
push
xchg
cld
data16
mov
xor
ja
mov
pop
fistpll
repnz
push
and
and
in
push
or
sbb
int3
push
cmp
cmp
imul
rclb
cmpsl
hlt
test
mov
jmp
sbb
lods
test
mov
pop
and
je
in
cmp
sarl
sbb
out
loopne
lret
out
movd
aas
inc
and
pop
ja
jp
inc
out
jnp
pop
cmc
das
sbb
xchg
fmull
mov
fildl
mov
jecxz
inc
jnp
xlat
jmp
jecxz
push
iret
outsb
cmpsb
subl
mov
fcmovnu
cs
mov
lret
xchg
mov
add
addr16
adc
mov
jo
adcl
scas
and
lahf
into
mov
pop
shr
ret
sub
out
arpl
fdivp
cltd
mov
or
jnp
jns
hlt
inc
pop
mov
aaa
mov
mov
and
lods
and
pop
pop
aas
mov
sahf
pop
inc
sub
lods
sub
jle
xorl
dec
ja
adc
cmp
enter
mulb
call
push
mov
mov
out
scas
dec
sub
mov
rcl
scas
ret
pop
out
cmpsb
add
mov
mov
hlt
fcoms
jmp
clc
lcall
hlt
cmp
mov
xchg
imul
pop
imul
mov
mov
cmp
add
mov
scas
shl
add
mov
add
sbb
out
imull
cwtl
rcr
mov
adc
xor
shll
or
int3
add
xor
xchg
stc
push
shll
mov
pop
jnp
sbb
cmp
add
sbb
and
movsl
out
jnp
dec
orl
hlt
jle
dec
mov
nop
jmp
lods
out
mov
orb
mov
xchg
dec
push
jo
mov
push
aaa
push
aaa
jne
xor
fdivrs
sbb
cs
mov
js
out
je
jg
popf
les
jo
pop
sti
repz
push
out
imull
adc
fistpl
out
push
hlt
xor
jno
pop
rsm
xchg
insb
out
dec
leave
flds
cmpsl
jae
das
add
xchg
or
stos
fists
test
popf
cmp
lock
test
add
lret
jne
inc
ret
ja
mov
iret
push
daa
xlat
lahf
inc
out
cmp
adc
or
lods
and
xor
mov
movsl
xorl
adc
xor
sbb
imul
jg
test
adcb
or
loope
lds
rol
push
fsubl
mov
pushf
or
es
mov
jl
andb
dec
sub
roll
sub
int3
push
loop
push
lods
sbb
xor
jns
pushf
fsub
push
out
lock
ljmp
sbb
ret
int
pop
dec
pop
pop
fwait
push
shrl
in
inc
stos
dec
lahf
add
jg
out
and
cmpsl
pop
shll
fmul
jp
scas
stos
dec
addr16
xchg
sbb
enter
outsl
nop
sti
cmpl
cli
je
div
pop
stos
xchg
xor
xchg
mov
stos
arpl
int
xchg
pop
popa
sbb
mov
ja
cmp
out
mov
adc
stc
pop
out
stos
in
arpl
icebp
jmp
arpl
mov
push
inc
loop
cmpsl
adc
sbb
push
mov
lahf
dec
mov
jbe
xorb
cmp
icebp
cld
mov
sbb
sbb
adc
push
mov
stos
jne
mov
mov
xchg
fdivs
out
data16
add
movsb
negb
loop
inc
jge
daa
xchg
and
out
icebp
jl
mov
jle
cmp
mov
adc
adcl
mov
enter
daa
dec
xchg
xchg
push
repz
mov
imul
sbb
xchg
sub
mov
xchg
push
lock
hlt
sub
xor
dec
cmp
iret
jmp
mov
and
mov
sub
or
inc
not
jmp
and
jge
shlb
cli
leave
pmaxub
lcall
cmp
inc
in
int3
fistps
es
sahf
sbb
scas
icebp
fs
in
ret
and
inc
movsl
jns
inc
mov
imull
out
pop
jo
imul
fstpl
lods
test
sub
inc
cmp
sahf
mov
pop
pop
inc
mov
jb
add
rep
scas
lcall
pop
xor
dec
addr16
ret
in
in
das
fidivrs
gs
adc
jmp
push
lret
mov
push
dec
push
mov
lcall
pop
or
adc
movsl
cmp
inc
popf
repnz
scas
repnz
out
jecxz
lea
div
imul
lret
mov
test
nop
fs
mov
or
imul
push
jg,pt
jne
pop
jmp
jno
jmp
out
out
fdivl
mull
cld
and
mov
push
aaa
and
clc
pop
aam
push
lahf
into
out
stos
fistpll
or
push
mov
push
into
pop
mov
fisttps
sub
std
mov
mov
decb
push
pushf
repz
lcall
cmp
cmp
stos
in
push
in
cmc
dec
mov
fdivrl
and
or
rorb
sti
push
out
xor
xor
jns
adcb
mov
sub
push
in
cld
jecxz
scas
xlat
and
dec
add
push
jno
pop
mov
popf
cmp
jne
jbe
sub
inc
mov
in
shlb
out
or
mov
sbb
and
cmpsb
inc
out
mov
or
jle
lock
mov
pushf
aaa
cmpsl
fisttps
dec
orl
cmp
mov
cmp
sub
popa
jp
ret
adc
ret
pop
fadd
scas
mov
aas
out
das
out
ljmp
scas
outsl
out
pop
jg
frstor
mov
jo
push
pop
in
sub
stos
pop
xchg
mov
popf
add
leave
lock
cmc
movsl
sbb
mov
cmp
gs
sahf
pop
in
movsl
mov
xor
test
add
inc
gs
aad
mov
cwtl
push
hlt
mov
mov
mov
fsubrl
in
push
mov
aas
dec
not
jbe
test
ror
pop
scas
insb
stc
sub
lea
scas
fmull
insb
cltd
ja
jbe
mov
xor
cli
popf
add
inc
in
je
dec
addr16
jae
hlt
cltd
popf
mov
shrl
loopne
sbb
jmp
loopne
add
add
fcomip
outsb
sti
inc
cs
pop
movsl
push
xchg
shl
jo
dec
fbld
push
and
aam
and
push
out
xlat
push
mov
adc
xchg
mov
ds
ja
mov
mov
or
add
clc
add
fistpl
mov
stos
insl
js
or
dec
or
jbe
dec
xchg
in
jnp
into
or
cs
cmpsl
inc
ja
mov
int3
scas
mov
shr
nop
std
and
out
mov
or
mov
jmp
loop
sub
test
jp
dec
pushf
sbbb
mov
cltd
pop
dec
adc
lods
lds
pop
mov
pop
scas
sbb
mov
and
and
aas
jmp
lahf
mov
sub
loope
jg
jbe
lret
stos
pop
cmp
outsb
lret
push
leave
mov
int3
mov
in
or
pop
hlt
iret
popa
into
mov
mov
mov
mov
mov
inc
sahf
jae
ljmp
into
lcall
nop
inc
out
dec
cmp
xsaves
pop
mov
push
jns
scas
mul
cmpsl
ja
add
adc
int
int
movsb
movsl
add
test
sub
movsb
or
roll
icebp
or
stos
mov
push
ficoms
rcrl
inc
cmpsl
divl
cltd
inc
stos
popa
adc
push
xchg
xor
pop
mov
orb
adc
sti
push
sub
fs
leave
sbb
fildl
ja
cmp
pop
test
pushf
jecxz
rcr
xchg
ret
pop
xor
or
nopl
mov
jne
lods
or
mov
clc
pop
xchg
push
call
cmc
push
mov
jle
jle
fists
mov
sbb
mov
div
push
lcall
xchg
idiv
mov
arpl
movsl
lods
inc
out
jmp
pop
and
jae
mov
mov
fstps
adc
scas
pop
loop
fcompl
cltd
in
mov
mov
or
add
sub
cld
loopne
std
je
sub
xchg
sub
and
daa
push
repz
cmp
in
adc
fiaddl
pop
cltd
jnp
mov
int3
out
test
ds
lret
jne
jns
pop
inc
mov
jb
add
push
or
jns
jl
testb
sub
call
frstor
jp
sub
push
das
negb
mulb
fbld
xor
cmp
scas
pop
xor
jae
sub
mov
es
push
aaa
sub
cmp
ja
movsl
lds
adc
dec
or
jg
fisttps
pusha
sub
add
fistpll
dec
inc
ret
out
jg
and
pop
xor
roll
lahf
push
pop
cmp
addr16
or
lds
and
xor
mov
sbb
or
outsb
xor
popf
dec
pop
aad
pop
pop
dec
cld
mov
orl
es
sahf
mov
fistpll
sbb
stos
mov
jnp
out
mov
pop
jo
icebp
int
std
sti
mov
sub
daa
pop
mov
or
push
dec
hlt
mov
push
cli
loopne
stc
adc
cli
mov
cmp
out
data16
es
pop
mov
jno
pop
inc
mov
mov
stc
daa
repnz
es
clc
fistps
repz
inc
mov
mov
out
movsl
dec
mov
in
inc
std
or
push
xor
ret
and
lahf
mov
cli
or
insl
int3
out
jno
insb
xlat
mov
popf
or
ret
and
pop
imul
mov
dec
push
mov
scas
jle
xchg
mov
jmp
xor
inc
or
dec
mov
out
inc
int3
test
jl
out
xchg
jnp
sub
cwtl
lods
adc
ret
into
ret
and
sbb
push
repz
fisubs
dec
leave
ds
sub
int
xor
mov
xchg
mov
adc
imul
repz
push
mov
lahf
jmp
leave
into
rolb
in
in
movl
push
das
pop
mov
movsl
movswl
cmp
pop
mov
xchg
mov
aas
push
fsts
rcll
push
push
pop
mov
add
dec
das
sbb
pop
sub
aam
and
loopne
and
pop
cmpsb
insl
fnstsw
leave
dec
repnz
or
fsubl
movsb
sub
adc
mov
mov
add
out
sbb
mov
negl
jbe
les
push
dec
or
sbb
popf
inc
mov
and
insl
les
cs
fisubl
or
cwtl
pop
enter
push
lea
nop
add
loopne
and
add
cmp
dec
arpl
xor
loope
cld
out
insb
pop
push
clc
pop
xorb
mov
and
sti
sbb
fdivl
sar
ds
addb
loop
lock
stos
out
fimuls
adc
mov
jg
xchg
test
cmp
mov
nop
mov
sbb
mov
out
and
out
and
adcb
sbb
mov
ljmp
pushf
and
repz
arpl
ret
out
or
insb
leave
xlat
imul
adc
ss
leave
iret
pop
mov
and
push
test
ficomps
js
mov
cmpsl
jecxz
stos
rcr
pop
sub
jb
xor
gs
or
filds
sub
cmc
xchg
pop
push
cs
scas
scas
and
popw
mov
mov
scas
mov
adc
fstps
cwtl
cmp
sti
xchg
adc
std
in
dec
fsts
pop
stos
pop
cmp
push
hlt
cmp
mov
push
dec
jnp
cmpsb
dec
push
insl
xor
mov
hlt
push
sub
mov
mov
push
arpl
inc
pop
inc
pop
xor
inc
push
mov
shrl
mov
aaa
xchg
mov
in
mov
call
xchg
sbb
loopne
push
jne
sub
es
inc
push
cmpsl
mov
mov
push
movsl
adc
mov
mov
jae
mov
int
rclb
fsts
outsl
aam
jmp
sbb
hlt
ss
and
xor
clc
xlat
loop
dec
push
lret
push
rep
and
daa
jge
mov
xchg
mov
push
hlt
xchg
stos
xor
add
jno
mov
or
cmp
movsl
mov
movsb
pop
lods
xor
fistpl
test
rcll
adc
push
sbb
ljmp
pop
scas
xchg
out
in
jns
jl
test
into
std
pop
into
movsl
jl
sbb
xor
inc
pop
xlat
cmp
imul
pushf
push
nop
xlat
mov
repnz
mov
mov
fldcw
cmp
and
imul
or
fsubp
int
stc
and
cli
dec
jmp
mov
pop
repz
push
cmp
lcall
jne
sub
data16
scas
mov
sbbl
mov
mov
aaa
scas
xor
push
push
dec
ret
aad
push
xchg
push
rcr
enter
fmul
push
jmp
push
add
add
inc
mov
scas
outsb
sub
data16
add
and
push
std
aaa
cmpsb
push
and
in
std
xchg
sub
mov
push
int
adc
pop
cmp
pop
test
shll
movsb
scas
das
mov
mov
iret
or
fnstsw
xorb
sub
addr16
and
jns
push
and
push
and
xchg
jle
cmpsb
pop
xchg
in
mov
mov
gs
mov
insb
scas
add
jecxz
xor
jge
cs
or
scas
in
jae
pushf
ss
sub
loop
into
and
iret
pop
sub
fbstp
mov
sub
xchg
cltd
mov
push
jnp
push
push
and
xchg
mov
arpl
mov
test
sbbb
and
cmp
lcall
out
mov
adc
ficoms
sub
mov
ja
test
and
mov
mov
mov
mov
loopne
outsl
sub
push
pop
test
clc
in
mov
dec
insl
fldcw
jp
xchg
fiaddl
jae
xchg
mov
movsl
push
add
jb
mov
push
aam
xchg
cmovge
fstps
cmp
rcr
les
pop
cld
xchg
sti
dec
pushl
cs
pop
imul
push
dec
xor
out
push
jge
inc
orl
aaa
dec
and
and
mov
cmpl
sti
insl
and
fsubrp
fnsave
mov
inc
jg
add
adc
jg
and
pop
or
adc
fistl
dec
in
sbb
ss
jg
aaa
fildll
cmpsl
sub
dec
icebp
leave
out
jb
shlb
ja
out
inc
push
outsb
cmpsl
scas
scas
xor
je
and
cs
jns
push
imul
cmpsl
push
jg
push
repz
pop
enter
sti
in
inc
jno
repnz
int
push
scas
mov
loopne
pop
dec
into
cmpsl
lahf
mov
outsb
movsl
cmpb
dec
mov
les
es
in
adc
jmp
jns
repz
mov
insb
out
push
mov
mov
or
lea
xchg
repz
and
xlat
shrl
call
flds
push
rorl
adc
rol
outsl
sub
mov
loope
jge
pop
xor
nop
aad
lock
cli
mov
out
icebp
adc
mov
data16
xchg
aad
mov
stos
subl
out
imul
nop
adc
pop
sub
ror
imul
sub
sar
push
std
lahf
mov
setne
clc
cmp
sti
lahf
push
pop
icebp
sub
out
sub
push
stos
cwtl
out
xlat
stos
sbb
ret
lods
push
and
mov
movsb
ret
lds
and
adc
mov
mov
push
push
rcll
sub
scas
mov
adc
arpl
outsl
xor
stos
sub
mov
pusha
add
and
cmp
out
sarl
leave
and
sbbl
out
in
and
cmp
mov
arpl
and
iret
mov
hlt
sub
push
std
movsb
add
push
xchg
push
leave
rorb
push
push
mov
ja
mov
cltd
or
jo
cli
test
xor
in
test
inc
mov
shl
andb
pop
adc
test
and
mov
pop
push
sbb
dec
scas
and
cltd
rorl
mov
push
inc
out
mov
cltd
aas
lds
out
jg
in
test
leave
mov
popf
dec
outsl
dec
addl
push
icebp
out
xor
xor
dec
push
je
into
mov
jns,pn
mov
arpl
cmpsb
xchg
lret
sub
cmpsb
sub
and
hlt
xchg
cli
pop
push
or
and
adc
push
jmp
test
cld
jnp
ds
fdivrs
inc
add
xchg
push
push
dec
mov
xchg
jnp
mov
in
xchg
imul
and
xchg
dec
push
in
add
dec
into
push
push
out
jnp
sub
xchg
pop
jecxz
nop
hlt
cmc
pop
jg
xor
mov
xlat
fisubs
mov
cmpl
fscale
mov
sbb
jg
fisubl
rcrl
out
pusha
mov
mov
imul
or
jnp
push
cli
cmp
fbld
stos
shll
fsubs
test
loope
mov
outsl
jns
xor
add
mov
imul
xchg
ljmp
popa
ret
mov
mov
cmp
pop
outsl
int3
lock
jmp
fdivs
test
ljmp
jb
adc
pop
mov
ret
push
cmp
sbb
and
xor
mov
cs
mov
orb
cmp
push
aas
push
daa
cltd
jge
or
rcrl
insl
out
mov
jno
mov
cld
inc
bound
leave
lods
xor
dec
push
push
lahf
negl
xchg
or
iret
mov
mov
hlt
das
xor
mov
jl
js
mov
mov
xchg
inc
sub
xchg
adc
jne
out
testl
sahf
pop
mov
cli
cld
loop
push
out
pop
push
cmp
jo
loope
clc
xchg
add
ffreep
add
pop
push
out
cmp
cli
adc
scas
or
sub
out
outsb
stc
rclb
pushf
idivl
and
lock
xor
jno
mov
cmp
sahf
int
rcrl
push
inc
aad
movl
incb
jmp
push
in
add
push
hlt
inc
sub
rorb
imul
out
and
in
push
xchg
leave
push
adc
out
mov
push
jns
push
rclb
rcrb
out
scas
pop
or
js
lret
lahf
pop
arpl
sarb
mov
pop
in
pop
cmp
mov
das
neg
push
cs
dec
and
xor
pushf
jmp
mov
jne
dec
mov
lea
mov
and
sahf
insl
sahf
fxam
mov
pop
fstps
jbe
add
xchg
pushf
and
xor
aaa
js
addl
pop
cmc
xor
fidivs
aaa
out
cmpsl
iret
add
loop
arpl
dec
xlat
or
mov
mov
in
adc
gs
testb
pop
lea
out
int3
pop
pop
lcall
sbb
push
popa
je
ret
pop
push
jge
fnsave
sbb
mov
into
dec
arpl
mov
push
js
in
sub
imul
xchg
insb
ret
mov
aaa
sub
push
icebp
push
movsb
outsl
mul
pop
mov
popa
xor
add
mov
jmp
fsubs
mov
lods
sbb
push
sbb
pop
cli
or
out
pushf
add
movsb
adc
out
mov
fistpll
and
idivl
push
movsl
es
cmp
xlat
loopne
jne
mov
jecxz
into
xchg
sub
inc
testl
rolb
mov
adc
cltd
sti
mov
shlb
push
jmp
xchg
push
add
into
mov
hlt
adc
fs
adc
lahf
adc
cmpsl
adc
and
sub
jno
dec
jle
ffreep
xor
in
imul
push
repz
std
outsl
ja
mov
jmp
out
sti
sub
lahf
push
insl
dec
sbb
mov
add
ud1
mov
sbbl
movsl
andl
es
imul
clc
clc
clc
divl
sti
pop
xchg
fld
jmp
mov
psllq
push
and
add
loop
mov
mov
fstps
outsl
arpl
sub
popf
pop
xor
cwtl
or
outsb
push
xchg
mull
pop
aad
iret
cmp
roll
in
lods
nop
mov
xlat
inc
dec
xchg
adc
jns
imul
cmp
sub
pop
jns
movsl
mov
mov
hlt
mov
mov
mov
leave
rcll
inc
iret
or
or
mov
pop
fnstcw
fisubrs
jmp
es
mov
mov
ret
sbb
or
pop
xor
fsubs
adc
loopne
add
push
or
dec
sahf
leave
sub
adc
test
add
sbb
pop
in
mov
fcompl
xor
clc
jl
adc
in
xor
cmc
pushf
fsin
jo
cmpsb
push
pop
mov
roll
inc
and
mov
movsl
pop
pop
bnd
outsl
pop
dec
inc
mov
fwait
out
push
loopne
sub
subb
sub
les
mov
pop
add
mov
pop
mov
mov
int
lahf
xor
fdiv
pop
dec
sbb
pop
add
mov
add
lret
roll
sub
jb
loopne
jne
mov
cmc
sti
fisubrs
std
pop
out
mov
fldcw
push
fcmove
jns
ffree
movsb
adc
loope
pop
fbstp
in
icebp
loope
inc
das
inc
insb
popf
call
mov
lahf
mov
outsb
pop
pop
mov
scas
mov
aad
sub
xor
adc
outsb
popf
xchg
mov
mov
data16
popa
mov
inc
jg
dec
enter
jmp
xor
je
into
subl
sbb
lods
mov
adc
cld
pop
loop
jno
mov
pop
fildll
push
sbb
in
dec
stos
shl
adc
mov
mov
pop
fsts
adc
pop
movb
inc
xchg
testb
cli
stos
mov
jg
xchg
jmp
push
outsl
dec
in
mov
mov
mov
dec
push
stos
inc
pop
into
stc
test
insb
sbb
add
cwtl
adc
out
enter
clc
inc
jnp
mov
sub
mov
arpl
or
lock
cmp
push
insb
cmp
stos
mov
aaa
jge
push
fidivs
icebp
mov
xor
and
add
bound
mov
clc
orl
lahf
sbb
mov
ffreep
mov
mov
mov
sbb
aam
gs
pop
std
jne
mov
fisttpll
jecxz
pop
xchg
test
scas
jle
sbb
jne
sbb
iret
push
xor
je
mov
or
shrb
mov
push
inc
adc
mov
xchg
mov
mov
cmp
aaa
push
into
addr16
pop
pushf
test
mov
mov
mov
lret
aad
mov
jecxz
inc
outsl
ffreep
push
sahf
outsb
cmp
sahf
insb
sub
or
mov
in
test
ss
stc
loope
outsb
mov
repnz
jp
mov
jnp
ljmp
jbe
xlat
loopne
push
sub
ljmp
insb
and
cmp
pop
pushf
xor
repnz
jecxz
jl
add
cmc
fcomp
add
and
push
lcall
mov
lods
push
test
xor
dec
jge
xor
arpl
jno
xchg
pop
inc
scas
lock
jbe
xchg
dec
jg
leave
xchg
lcall
mov
fdivrl
scas
and
test
cmpsl
dec
push
inc
dec
push
cmp
lahf
mov
mov
stos
inc
iret
lret
mov
hlt
inc
in
sub
stc
or
pop
or
sub
mov
mov
push
test
dec
mov
mov
aas
lds
repnz
std
adc
mov
pop
jmp
pop
push
dec
aad
mov
in
dec
fisttpll
mov
dec
xchg
cmpl
mov
push
aas
mov
add
fstpt
or
xlat
mov
sub
int
xchg
sar
adc
xchg
dec
outsb
mov
lahf
lock
es
jg
fcomps
fimuls
add
repnz
data16
jnp
imul
xchg
das
cmc
sub
and
test
cmp
jecxz
aam
in
pop
pop
jmp
fisttps
jnp
mov
test
jp
sbb
pop
pop
jae
xchg
sub
adc
pop
dec
xor
and
or
jg
push
ljmp
xchg
fisubrs
in
mul
pushf
sti
fildl
xor
push
fcomps
and
clc
repnz
mov
cmpsb
cmp
pop
fistpll
fldenv
mov
testl
mov
mov
mov
fwait
lahf
fists
fistps
inc
repnz
in
pop
jmp
push
stc
addr16
mov
fidivrs
mull
test
je
in
add
lahf
jns
mov
lahf
aaa
inc
aam
sub
dec
pop
lahf
xor
frstor
xlat
sbb
mov
mov
shl
mov
push
loop
sbb
popf
push
pop
cmc
out
int
pop
push
mov
stc
imul
pop
and
xchg
jb
push
and
jl
add
cltd
pop
pop
enter
fistps
cmpsb
fists
fstp
divl
leave
imul
out
out
jp
fstpl
lcall
sub
add
pop
notb
mov
mov
in
pusha
mov
js
ret
movsb
inc
adc
insb
shr
cltd
pop
mov
lret
add
sahf
lods
sbb
lds
cmp
sbbb
pop
xchg
pop
filds
outsb
mov
pop
mov
imulb
sbb
push
mov
jno
out
aad
in
inc
xlat
push
push
xchg
aas
pop
fmul
in
and
jge
loope
mov
lock
scas
mov
pop
iret
aaa
popf
lret
xchg
inc
out
call
sti
aad
cmp
mov
in
imul
cmp
shr
sahf
inc
xor
xchg
iret
icebp
sti
mov
ljmp
inc
push
pop
pop
std
jns
loop
adc
out
das
inc
leave
test
addl
imul
pop
cli
aas
xor
ret
out
cmpsb
dec
xlat
jl
and
out
mov
lcall
fisubs
jnp
in
in
in
fwait
scas
mov
leave
fldl
repnz
mov
outsl
pop
sbb
or
mov
mov
mov
jg
add
mov
ljmp
dec
lahf
sbb
mov
jo
pop
lahf
mov
jnp
imull
jnp
test
out
std
mov
mov
stos
mov
or
jg
sbb
insl
mov
pop
mov
repnz
mov
pop
in
stos
jecxz
push
mov
aas
faddl
scas
jle
fadd
out
mov
fcmovb
inc
jnp
fildll
lods
mov
mov
testb
xchg
jmp
arpl
sbb
jnp
insb
pop
mulb
fdivrs
mov
pop
cmp
xlat
aas
jbe
mov
xchg
insb
lret
repnz
movsb
add
rclb
mov
notb
je
jmp
inc
dec
mov
pop
int
mov
out
pushf
test
mov
add
leave
lods
xchg
arpl
mov
pushf
inc
or
mov
mov
push
in
enter
sbb
lcall
xor
xor
cmpsb
pop
add
add
sbb
mov
mov
int3
sbbl
and
inc
jnp
pop
xor
mov
xchg
hlt
ficomps
rcrl
call
adc
sarl
fldcw
mov
or
xchg
mov
jmp
test
add
cmp
notb
fsts
cmpl
mov
pop
in
mov
sbbb
aad
mov
sub
dec
adc
add
lods
pop
fmuls
jge
ficoms
xor
ja
push
or
sti
xlat
mov
inc
adc
fmull
push
das
fsts
xchg
mov
sbbb
add
add
ljmp
pusha
xchg
call
sub
sbb
insb
in
sbb
fcom
fs
cmpsb
add
das
addb
push
cli
dec
push
sub
sub
mov
or
lret
pop
test
xchg
sbb
push
jle
pop
icebp
cld
fbld
jnp
test
cmp
ffreep
int
pop
enter
jg
sbb
sub
icebp
rcrb
and
cmpsl
int3
push
push
mov
mov
out
sub
mov
pop
sbb
mov
xchg
add
inc
aaa
into
ss
lcall
add
or
shll
idivl
lock
js
inc
mov
fdivl
fstps
xchg
int3
jecxz
adc
jge
out
loop
mov
jne
out
mov
scas
fistps
lcall
push
pop
scas
cmp
jp
mov
pop
jae
xchg
mov
or
loope
icebp
outsl
popf
rcrl
loop
lahf
ja
pushf
add
fcompl
arpl
arpl
lds
adc
leave
sub
repz
out
pop
cmpsb
insb
pop
ss
pop
push
shl
lds
std
mov
imul
dec
adc
cmpsb
aas
ja
into
or
insl
aaa
pushf
loop
pop
or
push
js
and
iret
mov
adc
pushf
xchg
fldcw
not
repz
pushf
sub
ret
xchg
out
stc
out
xchg
cmpsl
mov
pop
repz
mov
movsb
stos
jns
xchg
loope
fldcw
inc
mov
aad
lock
int
leave
pop
push
cmpsb
sub
sbb
pop
cmpl
rolb
ja
jecxz
leave
call
jp
pop
push
js
ja
lods
loop
adc
orb
test
pop
add
lahf
stos
inc
sbb
out
pop
ret
pop
rorl
sbb
push
sub
shll
cmpl
outsb
shrb
mov
or
les
xor
sub
push
mov
pop
out
inc
or
mov
js
mov
xchg
mov
fcompl
hlt
push
xorb
mov
adc
inc
dec
test
ja
call
add
pop
lea
fiaddl
fnstenv
pop
outsl
rolb
jecxz
cli
iret
shll
dec
aas
sar
fcmovne
adc
add
arpl
shrl
cmp
xlat
lcall
xor
imul
packssdw
lcall
out
cmp
test
mov
cmp
flds
mulb
sbb
xchg
leave
cmp
fcoml
sbb
pop
in
inc
rcrb
stos
dec
lock
jmp
jb
mov
or
faddl
sub
aad
cwtl
das
and
mov
shll
and
mov
lret
gs
jp
fdiv
shrb
stos
push
push
mov
insl
jne
add
popa
ljmp
or
jecxz
lods
pop
lret
fldt
push
pop
test
imul
add
xchg
scas
jp
xor
ret
dec
sbb
cmp
scas
sbb
lahf
int
mov
or
or
xorb
cs
push
mov
mov
ja
push
test
lds
and
sbb
pushf
jae
leave
in
xor
push
push
cld
orl
hlt
mov
pop
inc
das
insb
add
dec
sbb
out
test
cmpsb
add
mov
mov
mov
pop
insl
stos
std
into
data16
xor
ds
dec
iret
jge
ds
xorl
in
in
loopne
in
mov
dec
fwait
mov
push
testb
mov
mov
pop
icebp
sbb
popf
cmp
loope
cmp
xchg
mov
jo
xchg
pop
cmp
das
lea
out
inc
mov
jmp
in
lahf
scas
lds
imul
rcrb
xchg
dec
pop
lds
mov
cwtl
insb
and
add
sahf
inc
out
mov
pop
sbb
mulb
fisubrl
fwait
aad
filds
movsb
pop
mov
ja
push
push
and
out
adc
xor
lds
add
cmc
leave
stos
inc
ror
jl
push
sbb
pop
pushf
cmc
fucomip
mov
icebp
adc
insl
mov
dec
fcmovnu
and
insl
ror
ja
fwait
mov
and
scas
cld
pushf
xchg
inc
or
mov
xor
jns
rorl
mov
pop
mov
cmp
xchg
clc
sbb
in
jnp
mov
push
mov
push
sub
and
xchg
outsb
out
or
out
outsb
pop
pop
mov
imul
mov
repnz
sbb
fbld
sub
lds
jg
stc
adc
test
scas
mov
mov
out
cltd
or
call
fildll
jg
xchg
std
inc
repnz
aam
mov
int3
out
aad
ja
pop
jge
sbb
pop
fildl
outsl
mov
in
call
or
add
std
inc
push
repz
inc
xchg
dec
leave
repnz
push
xchg
ret
dec
and
clc
add
sub
mov
xadd
icebp
dec
iret
repnz
adc
scas
xchg
fstps
fxch
test
bound
mov
mov
in
pop
aaa
jb
cltd
cld
adc
out
mov
ret
inc
in
and
mov
xchg
lods
pop
aas
add
shlb
jl
push
jl
cmpsl
xor
and
sti
jp
rep
add
cli
jl
cmpsb
xchg
mov
sub
jb
cld
dec
add
adc
mov
jo
jo
jg
in
aad
mov
fisttpll
sahf
sbb
mul
xorb
mov
test
pop
fwait
dec
mov
into
out
lock
fisubl
aad
out
mov
call
pop
adc
out
cmc
jg
lock
mov
out
orl
jno
push
frndint
and
dec
cmp
hlt
out
xchg
loop
mov
xchg
cmp
or
add
out
xchg
cwtl
imul
bound
outsb
sub
seta
cmp
push
out
lret
lcall
es
scas
xor
mov
push
idivl
mov
test
in
jb
sbb
ds
vdivss
scas
cmp
out
notb
aam
out
es
sub
cmpsl
daa
call
xor
pushf
xor
testb
sub
lahf
out
sti
std
mov
cmp
ds
inc
incb
push
xor
fimuls
mov
repz
xor
xchg
xchg
jns
pop
pusha
arpl
sahf
mov
iret
repz
lods
ret
mov
stos
out
inc
lret
fbld
jg
or
sub
pop
mov
mov
outsb
fs
xchg
into
cmp
sbb
out
arpl
pop
rorb
pop
xor
dec
pop
push
ljmp
xchg
sub
fmuls
iret
jl
fnsave
mov
out
and
push
lds
int
leave
je
ljmp
jnp
mov
jl
cmp
xchg
shll
aad
pop
in
scas
imul
mov
hlt
aad
cmpb
push
pop
iret
repz
out
mov
inc
roll
notl
sub
clc
xchg
pop
inc
scas
pop
dec
outsb
mov
aas
cmp
cwtl
and
xorb
std
mov
lahf
add
icebp
imul
xor
mov
sub
inc
hlt
insb
sub
lret
or
mov
sbb
faddl
popa
cmp
mov
fdivrl
jns
aas
in
call
add
pop
mov
sub
xor
mov
push
shl
out
jmp
outsl
insb
sub
rcrb
cmc
xor
pop
or
inc
push
mov
xchg
push
ljmp
or
out
mov
mov
sub
stos
jno
cmp
mov
xor
call
pop
jbe
stos
cmp
lods
mov
xlat
inc
imul
adc
aaa
cmp
sbb
cmp
jge
adc
adc
stos
imul
pusha
inc
xchg
repnz
dec
cli
inc
cmp
mov
in
je
jns
pop
out
push
cmp
cmp
jle
or
adc
sbb
push
ss
xchg
das
rol
pop
addr16
out
jnp
xlat
sahf
sbb
in
xlat
ljmp
mov
cmp
mov
dec
call
dec
lock
shl
insb
repz
jnp
loopne
jmp
mov
push
jno
enter
loop
fisubrs
jnp
jnp
gs
pop
aas
jle
fcomps
ret
and
sti
je
repz
scas
push
sbb
sbbl
scas
sahf
xchg
je,pt
popf
jecxz
push
fsubl
dec
cltd
mov
pop
iret
mov
mov
mov
and
push
inc
pop
add
adc
outsl
imul
das
mull
jno,pt
daa
mov
gs
lret
push
out
add
fsin
test
rol
xchg
sub
enter
mov
cmp
cmpsb
lret
pop
in
movsb
and
mov
mov
xor
fwait
xor
add
hlt
and
mov
dec
in
xchg
push
fwait
mov
add
fisttps
sub
mov
adc
pop
adc
adc
cmp
xor
lock
mov
add
xchg
mov
jns
ja
cmp
jle
sbb
popf
or
inc
movsb
lods
jg
xlat
sub
imul
arpl
and
outsl
mov
sub
sbb
or
outsb
imul
outsl
dec
push
xor
push
test
fwait
cmpsb
shrl
mov
int
pop
test
ret
adc
clc
out
mov
pushf
pop
add
jno
pop
sbb
int3
scas
insb
mov
popf
repnz
mov
mov
fsubrp
pop
fwait
ja
sbb
pop
or
push
xchg
popf
mov
push
mov
adc
xchg
shrb
push
pop
or
dec
mov
das
mov
sbb
shll
xlat
or
inc
test
stos
int3
fldl
add
call
push
xchg
in
dec
fisttpll
inc
pop
gs
sbb
ret
xchg
jnp
pop
jp
cmp
sub
dec
sbb
sbb
jae
mov
adc
add
in
mov
jbe
jg
dec
adc
adc
and
or
ds
mov
popf
adc
jmp
les
int3
popa
sti
cmp
pop
scas
scas
pop
mov
gs
pop
loopne
jo
push
jnp
sahf
stos
vcvttss2si
jg
out
std
ja
mov
iret
sahf
pop
test
loop
in
loop
mov
bound
jno
stos
imull
cmpsl
enter
mov
lods
hlt
out
mov
cmp
push
sub
pop
js
loop
icebp
jno
jnp
jge
jo
dec
push
frstor
mov
mov
mov
jle
pop
scas
jg
or
lcall
xchg
repnz
pop
cld
repnz
or
fldl
mov
iret
pop
fidivl
mov
mov
std
lods
pop
pop
lahf
idivb
sahf
mov
sbb
lods
push
sti
fisubrs
jg
jae
clc
cmp
fldenv
xchg
movsb
and
shrl
rorl
fidivs
scas
insl
jg
pop
mov
sahf
jl
pop
arpl
test
stc
sbb
inc
or
mov
jnp
push
insb
or
fsubr
mov
loop
mov
ljmp
std
pop
popa
mov
std
cmp
or
and
cwtl
pop
lret
std
icebp
mov
repnz
scas
in
lock
stos
push
push
push
mov
cmp
mov
push
cmp
out
or
xchg
out
mov
mov
sbb
pop
push
jmp
fwait
out
jg
fiadds
sbb
cmpsb
inc
out
jge
dec
or
aas
pop
sbb
jle
pop
movsb
cmpsl
in
jge
push
cmp
cmp
bound
xor
ja
pop
xchg
ds
imul
mov
sub
dec
mov
xchg
cmpsb
mov
xchg
mov
cmp
sub
daa
mov
movsl
mov
test
sarl
jnp
idiv
jle
xchg
xchg
push
add
pop
sarb
cmp
arpl
stos
in
aas
fucomip
ds
or
mov
sbb
loop
ss
jne
mov
dec
fidivrs
neg
jg
mov
in
cld
gs
cmp
cmpsb
shl
cld
pop
popf
lahf
neg
pop
pop
mov
jle
adc
jmp
push
popa
ret
cmpsb
dec
out
test
add
mov
iret
jnp
mov
ret
rol
rol
das
aad
cmpsl
mov
cmp
lret
mov
cmp
jg
lahf
push
or
sub
jl
ljmp
sub
pop
pop
out
dec
jmp
inc
scas
cld
jmp
sahf
dec
testb
adc
jle
shll
cltd
in
cli
rorl
sarl
jne
adc
fldenv
xchg
jno
lret
mov
mov
jle
pop
lahf
and
testb
jno
cli
lahf
out
mov
jnp
fistps
out
out
mov
lret
pushl
cmp
std
scas
cmpsb
xchg
jnp
rcll
mov
lretw
movsl
in
rcll
dec
jbe
xchg
cmc
push
insl
mov
fistpll
stos
mov
fsubrp
fldl
decb
ja
int3
lods
cld
jmp
stc
sahf
aas
mov
pop
in
cltd
into
mov
loopne
fidivs
pusha
inc
fidivrs
jns
int3
sahf
or
jno
aad
mov
insb
aas
ja
mov
mov
std
cmpsl
xchg
add
and
loop
fists
ret
mov
pop
ds
fistpll
scas
fcomp
in
cmp
in
cld
ljmp
xor
cltd
in
ja
loop
test
or
fbstp
ljmp
dec
and
jno
mov
mov
fbld
divb
jne
dec
stc
call
scas
arpl
mov
leave
out
fwait
mov
jge
lahf
fidivs
or
or
stc
xchg
add
decl
inc
sub
jle
roll
pushf
ficoml
jge
cmp
imul
lcall
mov
popf
mov
cltd
mov
adc
xchg
cmp
dec
sbbl
xchg
idivb
aam
mov
es
and
jnp
jns
pusha
mov
ret
cmp
lret
and
out
fdivrp
jp
inc
pop
cwtl
jge
mov
and
dec
mov
jl
dec
out
mov
dec
mov
jge
pop
flds
bnd
fstpt
je
fstps
filds
inc
cld
outsl
pop
jl
lods
jg
les
sarl
lahf
ja
mov
rcr
inc
xchg
aas
jle
sbb
sbb
pushf
pop
mov
fnstsw
jge
incb
xchg
rcrl
fists
inc
rorl
std
fcoml
push
mov
pop
rcrl
pop
out
ret
imul
loop
jnp
cmp
ficomps
hlt
mov
int
gs
jl
pop
decb
faddp
xchg
dec
std
frstor
mov
fstp
ja
adc
std
fbld
adc
jns
adc
cmp
ja
test
push
jge
frstor
sub
jmp
arpl
popf
ljmp
jg
fistps
jns
sahf
filds
int
mov
movsl
cmpsl
in
mov
jb
fistps
cld
in
jae
outsb
aaa
lahf
push
into
dec
decl
stc
out
test
scas
jmp
leave
out
pop
lahf
out
imul
jecxz
out
insb
sarb
loopne
fists
mov
jnp
mov
adc
mov
jae
sbb
jnp
imul
sti
jnp
mov
mov
das
out
pop
pop
fsubrp
notb
pop
ds
adc
mov
dec
fildll
int
pushf
fistps
and
fstpl
lea
iret
divl
jmp
mov
mov
cs
jmp
mov
test
fistpll
in
test
jl
das
aad
mov
outsb
adc
cmp
in
in
xchg
pop
stos
clc
cld
mov
in
pushf
movsl
sarb
push
ret
jne
in
lahf
pop
jnp
pop
mov
fidivrl
nop
repnz
lods
mov
mov
subb
idivb
mov
test
test
das
jmp
fnstenv
mov
testb
in
div
fisttpll
sub
ljmp
and
sbb
cmpsb
push
pop
fidivrs
inc
in
jg
jle
negb
jnp
out
into
ja
scas
idivb
daa
out
ja,pn
scas
testb
or
adc
mov
ret
cld
scas
das
mov
fnstsw
out
sbb
aaa
and
in
jmp
pop
mull
mov
lret
fimuls
cli
inc
in
jmp
jmp
mov
cli
jg
mov
dec
gs
fldl
lods
pop
popf
std
mov
in
push
aaa
mov
fistps
sbb
inc
dec
pop
test
sbb
pop
hlt
cmp
out
cmp
mov
xchg
xor
xor
cltd
mov
pushf
js
mov
addr16
mov
mov
jg
filds
jne
mov
outsb
pop
jnp
mov
inc
mov
movsl
push
idivb
stos
pop
std
jl
ljmp
adc
and
in
es
rcr
mov
dec
mov
scas
jg
adcl
push
add
shrl
ret
xlat
adc
pop
push
test
stos
adc
fldl
arpl
sbbl
stos
fistpll
add
push
into
sti
imul
mov
mov
fnstsw
pushf
ja
xor
lods
aas
cmpsl
add
dec
notb
mov
mov
mov
mov
jae
test
push
jp
fisubrs
stos
fnstsw
out
cmpsb
cld
mulb
lods
mov
pop
adc
add
fdiv
ds
in
and
xchg
pop
scas
les
lahf
jg
loop
mov
mov
leave
mov
jns
sbb
imulb
xchg
imulb
leave
sub
in
rclb
sub
or
repnz
pop
aas
inc
sbb
add
data16
sbb
lods
into
pop
mov
vpunpcklwd
aam
out
in
mov
not
ss
jnp
lods
push
pop
cmpsl
mov
ja
mov
jnp
or
scas
popf
icebp
ffree
sub
jl
mov
add
imul
popa
fucomip
in
fdivs
clc
ja
mov
ss
ljmp
fbld
jg
jg
idiv
cmpsl
std
aam
jg
pop
fldl
neg
mov
push
repz
sbb
jg
inc
sub
aas
fisttpl
scas
jmp
push
mov
fbstp
rcrl
cli
jmp
xor
inc
cmp
mov
arpl
push
xor
jge
mov
notb
jnp
inc
es
mov
jnp
loope
sarb
mov
jno
out
fcompl
cmp
fsubr
stc
jns
pop
xlat
mov
mov
pop
rcrl
inc
jnp
xchg
out
cmp
js
mov
mov
sahf
stc
mov
fdivrp
mov
out
push
mov
mov
sub
adc
jg
jo
cmc
popf
or
cld
pmuludq
adc
rol
or
cmp
fistpll
out
pop
jnp
std
neg
in
icebp
rcrl
mov
in
mov
in
xor
mov
in
and
scas
xchg
rol
outsb
push
std
and
jno
lds
cmp
mov
sbb
negb
test
cmp
jg
fiadds
push
in
lds
dec
mov
mov
fdivp
mov
pop
inc
jle
test
ljmp
push
in
and
pop
jg
sub
lds
mov
and
xlat
ljmp
ficomps
jl
cmpsl
out
fstpl
pop
adc
jl
sbb
sbb
add
pop
add
sahf
jg
test
idiv
jnp
push
cmc
jle
jne
pop
fistpll
xchg
clc
mov
fmul
stc
dec
loope
jle
adc
jge
cwtl
jle
pop
or
mov
xchg
rorl
mov
or
lods
pop
lahf
jnp
mov
pushf
ss
mov
aas
push
out
jg
sbb
fistpll
pop
movsl
popa
mov
push
movsl
xchg
loopne
xor
mov
ficomps
pop
xchg
insb
popf
lods
fnstsw
testb
sub
aam
stos
dec
pop
shr
jbe
dec
mov
sbb
bsr
popf
in
test
add
cmp
jge
jg
flds
aas
jg
std
fldl
int
sahf
dec
or
mov
imul
aam
testb
out
jle
imul
dec
jnp
ds
shrl
popf
fistpll
cmpsb
xchg
popf
in
push
jbe
cmp
push
dec
shrb
adc
aas
cmp
jnp
fistpll
jp
sub
insb
xlat
pop
mov
push
mov
pushf
pop
adc
idiv
out
pop
cmpsb
dec
aaa
mov
sub
outsb
sbb
mov
push
add
adc
notb
adc
fistpl
imul
jmp
inc
pop
push
outsb
fnsave
mov
out
jge
inc
mov
dec
add
jg
lds
adc
mov
mov
imul
mov
insl
in
mov
xchg
in
mov
pop
fs
cli
std
out
addr16
cld
inc
pop
lock
movb
mov
sub
aaa
lods
mov
mov
adc
mov
into
in
cld
push
sbb
mov
cmpsl
pop
xor
jb
cs
cmp
dec
out
xlat
cmp
mov
sarl
mov
mov
dec
in
jbe
add
rcl
cmpsl
scas
shrl
stos
into
sarl
mov
push
popa
dec
mov
add
push
push
or
mov
lret
divb
shl
cmp
xor
sarb
loop
rorl
pmuludq
pop
xor
imulb
mov
cmp
rorl
inc
hlt
shrb
mov
divb
loop
dec
mov
or
hlt
in
mov
lahf
stos
cli
xlat
aas
bnd
push
and
add
mov
loop
popf
rorl
hlt
mov
into
in
divb
fstp
loop
sbb
in
ja
scas
jl
fnsave
xor
dec
out
push
ja
scas
imulb
mov
xlat
jnp
mov
popf
xlat
jnp
mov
mov
in
mulb
lods
testb
mov
iret
jmp
mov
fidivrs
jns
pop
xlat
jnp
rcll
mov
daa
stos
dec
xchg
test
insl
test
out
xchg
aas
ja
cmc
roll
ja
idivb
insl
rcr
ja
fwait
aas
filds
data16
daa
int
aas
scas
pop
cmpsl
jnp
mov
in
sbb
sbb
shrb
pop
jg
jg
movsb
inc
add
cmovs
sahf
sar
and
jns
pop
negb
call
fstl
mov
mov
in
imul
mov
adc
ja
mov
fucomi
fistps
inc
xchg
das
cltd
incb
aas
jns
mov
jnp
das
in
sub
fdivrp
out
les
jnp
mov
imulb
sbb
mov
icebp
xchg
je
mov
xchg
std
cmpsl
inc
sub
fdivrl
outsb
iret
lods
in
repnz
cld
jbe
add
sahf
and
or
xor
mov
nopl
out
jp
adc
sub
mov
fisttps
dec
je
dec
shrl
push
mov
in
jb
sub
sbb
test
imul
fsubl
sarb
shlb
ja
mov
in
mov
mov
pop
ds
mov
test
call
jle
dec
pop
aam
sbb
ja
outsl
add
cmp
mov
jbe
movsl
loope
dec
cmc
cmp
pop
push
negb
cmpsl
movsl
mov
pop
das
mov
mov
jge
repnz
mov
popf
enter
pop
idivl
xchg
ds
jg
lods
and
push
rcr
aad
out
pop
jae
mov
and
scas
sub
icebp
inc
dec
push
xchg
stos
sarb
push
cmp
aad
incb
push
fs
fists
push
aam
jg
mov
push
cld
push
sarl
mov
mov
or
mov
decb
lods
in
pop
aas
jg
out
dec
leavew
lods
cs
fdivr
ljmp
iret
or
push
fbld
xor
std
push
scas
sbb
sahf
div
addr16
jg
jle
mov
pop
dec
inc
aas
mov
fucomi
or
mov
jge
mul
movsb
ja
pop
cmc
lahf
jg
ja
aas
loop
repnz
cmp
fidivrs
lds
pop
fwait
int
stc
push
xchg
sbb
shr
lods
mov
addr16
outsl
shlb
xor
in
test
inc
ljmp
std
addr16
hlt
pop
addr16
sbb
pop
jmp
cmp
mov
or
shl
dec
and
cltd
ret
inc
stos
mov
enter
cmp
jg
mov
leave
scas
and
jnp
mov
in
jmp
fstl
ds
outsb
adc
out
inc
out
pushf
inc
ja
cmpsb
mov
filds
xchg
outsb
mov
mov
imul
jge
dec
cmp
jbe
sbb
xchg
fistpll
fldl
stc
jg
filds
mov
aas
mov
cmp
dec
idiv
lahf
mov
inc
jl
sbb
sbb
out
pushf
jmp
daa
inc
xchg
mov
jge
fldl
jg
mov
pop
ja
mov
negb
jnp
mov
je
cltd
xchg
xchg
jmp
jnp
aas
iret
adc
mov
ljmp
popf
ja
mov
mov
sub
mulb
lods
mov
xchg
or
mov
dec
jne
cltd
jg
in
repnz
mov
pushl
mov
sahf
neg
inc
cmpsl
fisubs
cltd
aad
sbb
pop
gs
aas
sarb
addr16
jno
into
mov
loope
aas
repnz
jge
stc
imul
inc
jnp
and
fistpll
sub
addl
fidivs
pop
cmp
mov
fildll
cmpsb
mov
push
xor
lods
cmp
cmp
pushf
mov
in
mov
push
shll
addr16
mov
aas
rcr
dec
fistpll
xchg
adc
jg
xor
jp
and
jbe
push
loope
mov
aam
into
cmpsl
mov
xor
fsubl
in
fdivrl
insb
or
repnz
mov
pop
xor
fisubs
aad
push
mov
sahf
jg
testb
or
sub
mov
jle
sarb
aad
mov
mov
mov
sbb
mov
imul
out
in
in
pop
out
shll
jno
sub
cmpsl
or
adc
pop
adc
jno
cmpsl
insl
pop
and
sarl
gs
rcrl
negl
ja
pop
mov
jle
ja
stos
stc
fistpll
lcall
movsb
rclb
cld
lods
xor
stos
movsb
sub
shrb
mov
xchg
std
mov
jg
idivb
push
jp
mov
popf
scas
sbb
test
sbb
out
jnp
mov
pop
je
mov
fistps
jmp
out
mov
push
fbstp
divb
inc
mov
mov
es
jg
filds
pop
cld
mov
mov
jmp
loopne
inc
cmp
aad
sbb
mov
xor
mov
repnz
push
scas
loopne
test
mov
arpl
lahf
jle
jnp
jge
jg
xchg
adc
mov
negl
notb
xor
sbb
jae
dec
cmp
adc
mov
xchg
jg
idivb
mov
out
mov
fwait
cmc
imul
inc
push
ja
push
loop
ds
loop
inc
sahf
cmp
xor
and
sbb
sbb
sub
adc
outsb
dec
push
ja
mov
outsb
jle
mov
aam
jo
fidivrs
scas
and
and
mov
and
in
mov
addr16
imul
enter
mull
lds
mov
fwait
aad
mov
clc
mov
mov
inc
inc
cmpsb
jge
sub
mov
pop
addb
cmp
pop
fisttps
mov
lahf
ja
pop
sbb
outsl
xchg
paddusb
out
push
jno
outsl
jb
flds
lds
dec
mov
inc
mov
dec
lock
pop
fimull
xor
fsubr
repnz
mov
repnz
sbb
shll
ja
mov
in
inc
add
xorb
jnp
out
inc
ja
mov
out
cmc
ja
mov
inc
out
mov
in
std
imul
xchg
incl
inc
cs
mov
pop
mov
xchg
insl
sbb
push
pop
pop
das
xchg
pop
fidivrs
fistps
out
adc
aad
pop
mov
jne
jmp
idivl
paddusw
mov
mov
imulb
jnp
mov
mov
jnp
mov
or
jle
test
jnp
mov
jge
nop
fwait
fwait
cmp
pop
out
or
sbb
pushf
ljmp
fcomip
mov
pop
fists
jmp
popf
jns
addr16
sbb
lret
int3
clc
mov
xlat
in
push
in
or
pop
pop
std
iret
repnz
popf
jae
scas
pushf
cmpsl
ja
fcompl
test
cltd
sahf
scas
mov
dec
xor
mov
cmpsl
pop
pushf
filds
incl
fs
ljmp
push
outsl
inc
test
push
sbb
jg
repnz
iret
xchg
adc
cmp
fcomi
stos
ljmp
dec
enter
jge
adc
cltd
scas
fistps
je
ss
sbb
mov
rcr
pop
mov
mov
jg
fsubrp
mov
das
cmp
test
jp
jl
adc
push
jg
fcoml
pop
fistpll
out
sbb
fucomp
movsl
jg
insb
jl
in
aam
scas
mov
js
pop
stos
jnp
jg
arpl
lret
nop
xchg
xchg
movsl
jg
ljmp
idiv
pop
pop
std
jbe
scas
fcmovnu
sub
adc
fnstsw
mov
out
scas
fistpll
jge
std
mov
sbbl
fildll
iret
mov
testl
divb
mov
xchg
inc
dec
mov
lahf
aad
adc
push
ret
insl
int
fisubrs
dec
lock
pop
ds
divb
ja
adc
dec
mov
pop
cld
mov
sbb
or
scas
mov
outsl
push
das
adc
cmpsl
pop
cmpsl
ljmp
lods
pop
mov
hlt
packssdw
aaa
gs
add
lahf
vpshufd
int
scas
arpl
lahf
fs
in
mov
cs
dec
pop
dec
inc
lods
insb
sub
int
mov
cli
pop
sahf
int
movsl
cmp
imull
rorl
rcrl
pop
idivb
mov
or
out
add
mov
mov
std
das
stc
jle
cli
fucomp
test
scas
dec
mov
insl
jg
xchg
stos
lods
pushf
cmpsl
ja
cmp
mov
jne
mov
fsubrl
idiv
jnp
mov
insl
mov
lods
jge
mov
mov
clc
dec
loope
inc
lret
pop
lahf
out
shll
stos
pop
dec
imull
and
jmp
call
jge
adcl
ljmp
dec
or
adc
add
fwait
int
mov
insl
aad
sub
xchg
dec
cmp
jnp
scas
std
ja
push
jne
jmp
inc
scas
dec
lea
mov
popf
shlb
cli
jle
scas
cmpsl
divb
fnstsw
aad
scas
mov
or
in
fldt
fldt
fisttpll
jg
cmp
fdivrl
mov
pop
fcomip
mov
outsl
int3
fimuls
out
std
fnstenv
mov
fisubrs
mov
or
out
cmp
fldenv
lea
push
outsb
fnstenv
fimuls
imul
les
xchg
mov
outsb
fstps
fimuls
ja
cmpsl
out
iret
neg
inc
insl
stc
je
aam
adc
movsb
mov
ja
jg
sub
jg
mov
out
xor
test
fldt
pop
lods
fprem1
mov
outsl
xchg
fsubp
mov
jo
fcmovu
jbe
divl
mov
inc
stc
aad
cli
int3
mov
ja
out
cmc
fldenv
sahf
outsl
pop
fisubrs
iret
mov
out
in
fstps
movsl
outsl
int
std
mov
into
aaa
fnstcw
scas
outsl
fucomip
or
fistps
ja
out
and
out
sub
ja
out
xchg
fsts
mov
outsl
xlat
out
and
fists
ja
out
sub
aad
push
ficoms
scas
ja
out
aas
ja
scas
mov
outsl
lods
mov
test
outsl
data16
out
pop
lahf
fstl
fildl
or
ja
out
outsb
scas
mov
outsl
inc
fidivrs
xlat
mov
out
mov
fldenv
mov
sahf
fcompp
inc
mov
addr16
mov
fsubp
mov
xor
repz
xor
cmpsl
jnp
xchg
fstpt
clc
ja
lods
out
in
inc
iret
adc
fstpt
pop
pop
lods
sbb
push
insl
jg
iret
test
aas
int3
mov
push
mov
ja
jg
push
fstp
popf
mov
ja
sbb
jl
cmp
or
filds
ja
out
cmpsb
fldenv
push
outsl
aad
lods
mov
adc
stc
std
mov
outsl
jle
into
mov
xchg
dec
mov
outsl
sub
ja
out
dec
xchg
mov
ficomps
jne
mov
cld
flds
movsl
outsl
fstp
ds
imulb
fldcw
mov
fucomip
add
filds
ja
out
in
sbb
outsl
push
fimuls
mov
out
pop
dec
fnstcw
scas
outsl
imul
ss
fucomip
mov
sbb
insb
outsl
cmp
add
iret
cmp
out
out
fnstcw
mov
outsl
jge
xor
out
test
cmc
cmp
mov
ja
out
sahf
dec
flds
mov
outsl
insl
fisubs
out
xor
xor
pop
outsl
mov
aad
test
sub
stc
fs
outsl
hlt
fidivs
out
aad
fnstcw
mov
outsl
mov
ja
out
iret
add
orl
xlat
aaa
pop
jl
fistpl
mov
sbb
xor
out
out
cmpsl
fisubs
daa
ja
ljmp
mov
pop
xchg
mov
mov
out
xor
fldpi
mov
outsl
out
fdivp
mov
mov
scas
mov
fcmovnb
outsl
cmpsb
and
in
fstpt
aad
aad
fisubrs
iret
out
sbb
sub
mov
jbe
mov
int3
loopne
lahf
adc
mov
mov
test
outsl
je
jo
insb
ja
out
fs
fstps
outsl
push
ficoms
dec
ja
out
inc
inc
fnstcw
cmp
fidivs
mov
and
fstps
sbb
ficoms
mov
add
shl
fsubr
sti
fdivp
mov
jmp
shrl
fistpll
ror
fxch
mov
outsl
ret
xorb
mov
mov
scas
outsl
stos
fisubs
out
xor
fldl2e
mov
outsl
data16
mov
jge
flds
ja
out
cmp
aam
fstps
sub
faddp
mov
add
outsl
adc
dec
mov
outsl
inc
fsubrp
mov
in
mov
insl
mov
outsl
aam
insb
mov
ja
out
addr16
fldz
mov
outsl
push
push
mov
dec
cld
aad
mov
jp
icebp
pop
jbe
and
cli
std
loop
cs
mov
outsb
add
xor
dec
mov
inc
jne
sbb
fisttpl
bnd
cpuid
pop
xlat
outsb
inc
and
ret
ret
jno
pop
dec
pop
lret
movsb
inc
dec
bound
cmpsb
xor
ret
cmpsl
jle
cs
lret
punpcklwd
add
xor
fidivrs
das
icebp
push
sbb
ss
nop
ror
iret
adc
lahf
lss
fs
lahf
pushf
cmpsl
es
pop
sub
cli
out
cli
xor
test
mov
jp
push
dec
bnd
scas
out
pop
outsb
mov
push
push
push
mov
jae
push
or
or
sbb
cwtl
sti
aam
sub
fwait
push
mov
or
repnz
push
bound
xchg
sub
fwait
in
mov
dec
or
shlb
test
mov
sub
jo
sub
fidivs
or
mov
mov
xchg
int
in
scas
stc
xchg
adc
mov
push
scas
push
inc
xor
xor
icebp
mov
mov
pop
xchg
popa
or
shlb
addr16
es
stc
andl
mov
decb
or
dec
idivb
dec
jae
push
iret
popa
aam
fisubrl
pop
mov
stos
fisubl
cmp
inc
into
jg
or
mov
sbb
fmuls
mov
outsb
xor
pop
mov
ret
push
push
jb
xor
adc
aam
push
scas
mov
cmpsb
push
ret
inc
js
add
out
xchg
inc
mov
pop
ja
out
jo
repnz
inc
dec
nop
mov
popa
fimuls
test
out
das
mov
shl
loop
push
mov
jmp
xor
or
outsb
dec
pushf
sub
pop
enter
push
iret
cmp
ffree
mov
pushf
jecxz
fistps
mov
int
fstpt
pop
sbb
mov
mov
rep
dec
xor
adc
scas
xlat
jmp
push
mov
push
pop
xlat
jg
jmp
movsb
imulb
inc
mov
bswap
mov
cmpl
das
sbb
cmp
sub
push
xor
add
xchg
and
aaa
sub
shrb
sti
xor
popa
sbbb
mov
stos
iret
jl
std
fnstsw
sarl
mov
out
mov
cmp
scas
fimull
lcall
ficoml
addr16
sbb
cmp
pop
ja
cltd
mov
pop
pop
enter
add
cmp
mov
mov
jp
cmp
pop
cli
mov
clc
das
out
ljmp
cmp
aas
inc
sub
test
or
fidivrs
pushf
aam
sbb
mov
sub
out
daa
aas
aaa
lahf
ret
ficomps
das
lods
outsb
mov
and
out
outsl
pop
xor
aas
test
cwtl
mov
pusha
pop
lock
outsb
cld
test
inc
scas
lea
out
jp
fdivrp
mov
mov
cmp
jns
shll
jl
mov
mov
mov
test
mov
cld
cld
sti
in
leave
mov
jl
jl
push
pusha
jg
fiaddl
lahf
mov
pop
and
fidivrl
jo
pop
subl
cmp
mov
scas
insl
pop
jns
insb
repz
or
out
stos
inc
in
mov
mov
mov
jb
imul
cmp
lock
je
insl
cmp
sbbl
lret
mov
xchg
imul
cmp
sti
pop
repz
jl
sub
scas
fisttpll
notb
xor
out
std
push
pop
inc
scas
lcall
idiv
xor
push
inc
jnp
cwtl
sti
shrb
xor
es
int
sbb
mov
int3
sti
cmp
add
ljmp
push
nop
rcll
and
xorb
or
mov
mov
scas
and
mov
neg
xor
clc
and
sub
sahf
ds
adc
pop
cld
into
jp
jbe
dec
inc
ret
dec
jae
pop
and
lcall
add
push
add
sub
jb
cmp
imulb
cmp
addr16
inc
mov
add
or
pop
sarl
loope
pop
push
repnz
push
fnstcw
call
mov
mov
mov
mov
enter
adc
pop
cmc
add
adc
dec
mov
cld
adc
mov
jle
jge
cmp
pop
pushf
lahf
cmp
jl
fistps
scas
fimull
adc
inc
xchg
scas
mov
mov
xor
and
jp
pop
inc
outsb
add
scas
inc
fiaddl
inc
inc
mov
adc
jmp
leave
mov
mov
repz
pop
push
fidivl
xchg
inc
jae
lret
pop
pop
sub
ja
repz
addb
mov
ds
sub
stc
inc
dec
ljmp
loopne
mov
sub
inc
pop
ss
jl
jl
dec
data16
ss
js
cld
pop
sahf
repnz
lahf
ffreep
mov
out
ljmp
outsb
xor
sbb
std
add
jbe
jg
jmp
std
push
jne
hlt
and
and
sbb
adc
and
sbb
sub
xchg
std
mov
add
push
or
or
and
mov
dec
mov
jae
les
pushf
adc
aas
xor
aaa
and
xor
sub
dec
add
xchg
add
mov
pusha
sbb
pop
xchg
test
sbbb
or
imulb
jbe
cli
loopne
cli
pop
mov
idiv
fdiv
adc
jg
idivb
push
loopne
sub
mov
xor
push
sahf
pop
or
sub
push
or
sbb
lods
dec
pop
lock
ljmp
push
cwtl
mov
aam
xchg
push
clc
xchg
push
sub
mov
sub
xor
test
iret
lahf
sti
mov
js
popa
add
xchg
stc
std
out
cmc
stc
test
icebp
out
cwtl
out
out
aad
pop
rcr
mov
int
stc
leave
out
scas
mov
inc
test
fistl
lahf
test
ljmp
in
mov
test
je
fs
cmp
or
jle
sbb
xchg
sub
cld
jl
movsb
bound
clc
movsb
sbb
loopne
jg
add
pop
icebp
insl
dec
or
jno
and
jecxz
and
lods
adc
jg
cmp
in
or
mov
cwtl
xor
jle
dec
push
xor
xor
mov
ja
xorb
push
pusha
mov
and
testl
insb
inc
dec
cmpsl
sbb
jp
xchg
inc
repnz
mov
cmp
sbb
fisttps
push
pop
scas
bound
xor
or
sub
cmp
out
decb
dec
sahf
mov
lea
ds
jg
xor
cs
dec
sub
xlat
movsl
sub
mov
mov
jmp
cs
push
dec
bound
inc
in
cmpsb
and
sub
cld
dec
lods
cmp
int3
mov
mov
adc
popa
scas
je
mov
or
xlat
fisttpll
fmuls
push
lock
adc
iret
fstpl
pop
in
add
xchg
loopne
mov
dec
or
xor
insb
rorb
int3
jno
mov
adc
movsb
jns
pop
repnz
fadd
push
hlt
nop
icebp
rcll
movsb
and
and
add
lea
sub
and
aam
jno
xlat
jecxz
jl
jl
xor
test
cli
out
add
jnp
xor
std
scas
aam
dec
xor
or
int3
movsb
mov
les
adc
xor
in
fmull
jecxz
fsubrs
mov
dec
int3
fdivrl
rorb
or
lock
nop
fs
scas
jg
lods
jmp
mov
mov
divb
cli
mov
jo
jle
out
pop
iret
pop
sbb
rclb
jecxz
loopne
cmpsl
pop
or
inc
and
inc
mov
shl
push
push
out
stc
and
jge
xlat
in
sub
cmp
and
iret
in
add
mov
cmpb
pushf
lods
fsubs
cmp
add
sbb
clc
sbb
add
into
fisubs
dec
dec
jmp
dec
leave
lock
pop
repnz
mul
cmpb
incb
adc
adc
lods
dec
rclb
add
dec
push
jge
pop
xor
or
dec
jns
xor
in
hlt
or
fcomps
jecxz
jns
sbb
sbb
add
sbb
outsl
idiv
in
adc
pushf
mov
push
mov
fcoms
shlb
push
pop
ss
scas
or
ss
jg
nop
mov
inc
mov
insl
add
cmpsl
scas
mov
jbe
mov
clc
pop
pop
mov
jg
mov
jecxz
outsb
xorb
bound
or
or
lret
xlat
dec
xor
push
fildl
repnz
aas
adc
xchg
and
push
sbb
rorl
out
inc
sub
dec
mov
mov
push
cmp
jp
dec
popa
xchg
sarl
push
imul
mov
es
sub
mov
arpl
xchg
pop
inc
and
push
and
pop
inc
pop
out
mov
jb
xchg
or
jns
pop
pop
inc
inc
dec
out
dec
adc
mov
dec
dec
ret
jg
pop
repz
scas
inc
aam
inc
imul
rcrl
ds
sbb
mov
pop
adc
sbbb
xchg
es
or
ja
pop
inc
fiaddl
sbb
add
data16
pop
cwtl
pop
mov
inc
out
js
jp
pop
loop
or
fisttpl
int3
or
inc
inc
rcpps
outsb
jg
ja
pop
cs
mov
scas
push
inc
or
pop
pop
jns
cmp
hlt
stos
mov
stos
lcall
out
daa
sub
aas
out
add
mov
cli
xchg
testb
cmp
adc
scas
cmp
jl
add
std
jbe
daa
and
pop
sbb
div
out
ljmp
or
sub
lods
or
xchg
push
outsl
cld
jecxz
mov
xor
icebp
lcall
xchg
outsl
ja
push
popa
cmp
cwtl
stc
mov
hlt
pop
nop
ret
push
pusha
ds
ret
in
dec
push
popf
jae
adc
icebp
or
dec
icebp
push
loope
jg
and
aaa
fildl
add
xchg
mov
mov
pop
and
mov
andb
mov
negl
out
cmp
fndisi(8087
inc
not
outsl
mov
mov
std
std
or
mov
push
fwait
aad
ret
sub
repz
pop
out
cmp
cmpsl
jmp
fldenv
fidivs
cmp
stc
inc
mov
outsl
std
fiadds
mov
fiaddl
fbstp
add
or
ror
fxch
mov
outsl
rcr
mov
mov
fldcw
ficomps
ja
out
icebp
cmc
fyl2xp1
mov
arpl
fistpll
repnz
jecxz
fildll
mov
lret
fld
mov
outsl
mov
ja
ljmp
mov
xchg
fidivrs
jnp
ja
jae
fldcw
outsl
arpl
pop
mov
push
dec
inc
outsl
inc
fidivrs
mov
xor
fldcw
mov
outsl
and
pop
mov
adc
mov
outsl
fdivrp
mov
sbb
cmp
lahf
scas
sti
pop
stos
repz
mov
sbb
outsb
push
fistpl
push
fildll
xchg
mov
mov
mov
jg
cmpl
jg
jnp
dec
adc
ja
jae
outsl
mov
cmp
dec
lahf
test
icebp
push
icebp
adc
jp
ss
imull
dec
out
pop
out
xchg
inc
out
daa
inc
out
mov
filds
cmp
sbb
filds
sub
inc
daa
fistpll
sbbl
or
mov
jg
movq
or
pop
jg
add
cwtl
xor
cli
enter
repnz
out
mov
inc
fidivrs
mov
aaa
adc
outsb
aaa
sbb
mov
jg
mov
das
mov
add
scas
xchg
stos
cmpsb
add
mov
frstor
std
push
xchg
fdivrl
lahf
mov
cmp
sbb
jle
jp
jbe
push
repz
adc
sub
mov
sbb
into
out
xor
shlb
lret
stos
sti
fistpll
pop
sbb
mov
pop
push
sbb
jno
leave
xchg
or
add
jg
out
xlat
push
imul
sbb
lahf
jmp
mov
or
stos
scas
mov
mov
xor
sti
ret
mov
inc
ss
fsts
add
mov
fdiv
xchg
int3
negl
stc
mov
cli
test
add
out
frstor
mov
gs
inc
push
xor
iret
fcmovnb
jae
sarl
divl
jmp
mov
pop
sysenter
inc
xchg
cmp
je
mov
cmpl
mov
adc
stos
sbbl
iret
cmpsl
std
pop
push
mov
mov
or
je
sbb
push
sub
xor
rcl
and
mov
sti
mov
adc
mov
das
div
arpl
cmp
les
in
mov
sti
xor
out
fisubs
mov
dec
stc
jno
mov
in
imul
jne
sbb
loope
cltd
cmp
cmp
or
imull
std
inc
scas
add
incl
or
aad
lea
adcl
cld
aam
push
pop
adc
sti
fdivrl
jg
lea
dec
ljmp
movl
lods
mov
xor
iret
dec
inc
sbb
idivl
fmulp
xchg
mull
xor
mov
xor
jge
or
mov
push
add
ss
fnsave
fcomip
push
sbb
sub
mov
mov
cmpsb
lcall
or
daa
fcomip
cmc
ds
sti
fwait
dec
push
vpaddw
adc
call
fwait
mov
xor
test
jne
cmp
fwait
cmpsl
xchg
fdivp
mov
cmp
pop
xchg
jns
cmp
push
in
pop
cmp
iret
lock
fcmovb
movsl
leave
xor
out
jmp
pop
test
ret
fdivrl
shrb
movsb
test
sarl
fdivr
lret
jecxz
loopne
loope
mov
jmp
outsb
xchg
ljmp
pop
cmpb
xchg
je
clc
mov
jecxz
cmp
xchg
outsb
clc
jl
cmp
fsubrl
cmp
popf
or
mov
insl
fxch
mov
xor
jl
add
push
jecxz
jmp
loopne
mov
dec
hlt
cltd
test
ljmp
jge
sbb
fcmovnb
mov
repz
pop
mov
jno
push
js
in
pop
mov
outsb
data16
fiadds
roll
xchg
pop
xchg
mov
pusha
xor
cld
inc
cmp
sbb
pop
rorl
cmc
fs
dec
icebp
lods
mov
js
loope
sub
or
inc
sub
cmp
xlat
scas
nopl
scas
rorl
jo
adc
mov
ret
stos
clc
pop
dec
push
jg
pop
push
sub
jnp
lcall
push
mov
pop
test
sti
mov
aas
push
push
push
cmp
inc
and
cld
adc
xchg
rcl
push
std
out
negb
popf
pop
jmp
outsl
mov
cmp
jle
push
jge
mov
jecxz
aaa
shl
sub
lods
jno
push
cmp
adc
add
dec
cmp
clc
jg
pop
jg
and
ja
jge
addr16
stc
dec
shl
iret
bound
daa
sbb
mov
adc
mov
mov
and
jo
mov
outsb
int3
enter
or
dec
addr16
xchg
out
addl
ss
cli
in
ret
pop
mov
lods
mov
cmp
das
cmp
inc
jae
dec
cmp
sbb
or
jne
jle
icebp
fnstenv
loope
sahf
daa
je
mov
mov
xchg
cmp
dec
push
out
pop
jns
sti
mov
push
jecxz
jp
ljmp
push
cli
mov
fistl
arpl
bswap
cmp
cmc
sbb
ret
popl
femms
cli
pop
addr16
int
dec
stos
cmp
out
popf
insb
fisubrs
adc
popf
int
imul
outsl
push
push
sbb
and
scas
cmp
pop
dec
sti
pop
push
clc
stos
in
aas
insl
loop
jbe
movnti
stc
ds
out
adc
sbb
aad
mov
and
in
fcomip
cmp
jae
sarl
lods
mov
fstpt
outsb
ds
int3
test
or
das
cmc
lahf
cmpsb
std
jle
jb
mov
outsl
cmp
incl
and
into
mov
mov
jnp
pop
pop
lods
jge
jb
jg
xchg
lods
lock
movb
pop
sahf
push
ret
jbe
adc
fisubrs
pop
mov
pop
sbb
pop
out
inc
sbb
cld
jmp
push
sub
pop
sbb
int3
or
pushf
pop
push
cs
pop
push
inc
out
inc
loopne
xor
cld
in
loopne
or
jge
xchg
enter
inc
mov
pop
psadbw
js
mov
pop
xchg
sahf
loope
mov
ljmp
cmp
hlt
mov
rcpps
cmp
mov
mov
xchg
shll
jg
sti
das
and
inc
cmp
sahf
data16
iret
push
xlat
test
pop
lahf
pop
std
aas
notl
ret
jno
jmp
lea
out
xlat
mov
cmpsl
push
ss
fldt
mov
icebp
mov
cmpsb
insl
sbb
fucom
mov
mov
std
jbe
ds
dec
addr16
cmp
push
xchg
sbb
cli
scas
cmpsl
std
in
jg
clc
clc
scas
fisubrl
ficomps
push
jmp
popf
std
mov
adc
sub
push
push
jg
or
push
jmp
mov
mov
lcall
negb
pop
popf
outsl
push
les
push
sub
jp
daa
jg
dec
into
cmp
mov
icebp
popa
in
js
outsb
movsl
cld
cld
inc
push
cmp
pop
push
lret
jecxz
aaa
dec
and
xor
sub
mov
push
inc
iret
pop
xlat
dec
ja
add
mov
jg
mov
ds
add
jmp
jp
dec
in
jno
cmp
ficompl
les
hlt
cmp
jb
adc
decb
out
pop
out
cmpl
popa
shl
stc
sub
fstp
ds
push
mov
sti
sub
dec
and
int3
lret
push
mov
pop
or
push
dec
mov
push
std
ret
aaa
in
imul
cld
push
mov
pop
iret
mov
jge
sub
fdivr
cmpsl
ljmp
cli
fldt
pop
aad
std
cmc
rolb
clc
cs
sub
out
lahf
lcall
sarl
add
rcll
or
lahf
test
dec
out
pop
sbb
popa
sbb
inc
gs
fwait
sbbl
inc
nop
outsl
push
push
test
iret
fwait
out
jnp
mov
and
pop
loopne
sub
gs
pushf
push
cmp
filds
scas
mov
cmpsl
push
adc
aas
idivb
scas
cmp
jle
push
cld
mov
std
aaa
pop
sbb
mov
stos
fnstsw
ret
xchg
jns
jmp
stos
sbb
jb,pt
cld
cld
lret
shr
mov
dec
mov
aas
std
aaa
daa
mov
dec
mov
push
std
xlat
lcall
stc
jg
or
lahf
mov
loopne
loope
cld
sub
mov
movl
push
dec
sbb
cmp
xchg
sti
std
incl
pop
jns
ja
cvtdq2ps
fisubrl
into
scas
mov
cmpsb
or
mov
std
push
aas
cmp
sbb
ljmp
or
cmc
mov
push
mov
dec
sbb
jge
cmpsb
jae
add
test
xchg
test
stc
jle
jbe
insb
scas
adc
lret
int
lcall
fucomi
inc
mov
mov
xlat
xchg
fs
repnz
sahf
jb
jl
jnp
push
iret
sti
out
sbb
das
outsb
cmc
mov
in
mov
sub
in
popf
stc
icebp
out
dec
aad
sbb
sti
iret
dec
arpl
in
inc
mov
aaa
mov
std
out
out
fstpl
pop
jno
xchg
or
imul
jg
cmp
cmp
jnp
jg
pop
pop
jg
mov
out
jge
inc
cld
dec
pop
inc
fcomp
dec
stc
jle
shrb
mov
push
out
loop
out
cmpsl
inc
icebp
mov
jle
arpl
scas
stc
std
jnp
push
jno
mov
addr16
in
sti
mov
push
outsl
fwait
pxor
arpl
paddb
ret
mov
rcrb
jecxz
dec
jmp
jle
stc
push
mov
std
ret
cmp
mov
sbb
sub
sub
jb
ss
in
ret
hlt
cld
jp
pop
icebp
outsl
jl
pop
std
xchg
mov
in
cs
std
dec
in
mov
jge
jmp
sbb
lahf
xlat
add
ror
pushf
rol
bound
lahf
out
daa
pop
iret
scas
fwait
mov
sub
cmp
arpl
dec
pop
mov
pusha
mov
cmc
dec
pop
xchg
popf
jge
lret
mov
std
mov
cs
daa
xorl
xlat
cmpsl
loope
ret
adc
mov
cld
dec
and
mov
call
sbb
mov
call
in
mov
xor
aam
cmp
adcl
fmuls
sbb
iret
jl
stc
out
data16
mov
jmp
sbb
inc
popf
lcall
dec
repz
movb
shlb
xor
cli
popf
jle
addr16
mov
std
ret
mov
pop
cmp
cmp
neg
rorb
cwtl
pusha
jmp
test
jnp
dec
sbb
pushf
mov
in
mov
cs
jle
pop
out
scas
jge
repnz
mov
insl
push
xor
xchg
mov
sarb
lea
aas
mov
cmp
in
push
ret
or
cli
out
sbbl
sbb
test
icebp
cs
fcomps
jecxz
push
jae
std
ret
adc
cmpsb
sub
loopne
and
das
imul
mov
fsincos
dec
std
jg
orl
cmc
lods
cltd
adc
pusha
mov
inc
jno
in
jmp
dec
fadd
in
test
jno
add
cld
mov
push
jmp
mov
dec
rorl
sbb
sbb
aas
or
testl
jp
lea
sub
mov
pushl
mov
fcmovb
sub
sti
ss
decl
push
in
jne
cmp
cmp
dec
roll
adc
sub
mov
pop
xchg
mov
bound
call
xchg
fcmovbe
cmp
jge
lea
cmp
cltd
xor
cli
pop
sti
xlat
incl
repz
jge
cli
sti
add
in
mov
outsl
mov
xchg
push
ret
test
mov
jmp
add
fdivrl
mov
jge
inc
sbbb
jmp
mov
cmp
out
inc
mov
rorl
scas
mov
mull
leave
fcmovu
pop
push
in
popf
pop
out
imul
and
jmp
rcr
fidivs
idiv
inc
mov
ja
fldl
add
fidivrs
dec
pushl
xchg
mov
pop
xlat
das
inc
in
fdivrp
xor
push
jle
imul
sub
adc
jle
cltd
ds
cmp
push
sarb
jge
std
imul
cld
stc
pop
fninit
divb
mov
sbbl
or
in
movl
fbld
in
mov
aaa
xor
and
in
pop
les
and
mov
and
mov
fldt
mov
push
adc
movsb
dec
ljmp
lods
sar
mov
movsb
sbb
inc
fwait
sbb
mov
sbbl
ja
bnd
inc
mov
ds
filds
jo
fldt
add
sub
mov
sarl
fdivr
add
mov
push
scas
je
inc
fistpll
fst
mov
cmp
loope
scas
or
loope
jge
int3
push
jle
mov
cwtl
sarl
add
mov
mov
out
jmp
jbe
lret
ljmp
lret
push
pop
pushf
cmp
movsb
out
iret
out
test
push
fsubr
cmp
rol
mov
hlt
sub
shr
out
cld
es
and
loop
or
mov
inc
jle
pop
jg
cmc
mov
sti
sub
aas
push
shrl
addl
scas
xchg
sti
cltd
xlat
mov
in
sti
lcall
in
fdivp
adc
cld
xchg
imull
data16
and
insb
sub
mov
sbbl
fcoml
ret
sbb
mov
es
jmp
stos
pop
push
cmp
ret
movsl
mov
rcrb
cmp
mov
loop
xor
add
aaa
outsb
pop
cmp
scas
xchg
aaa
mov
dec
das
out
sbb
jo
inc
insb
fists
aas
adc
sahf
xor
pop
xor
in
sahf
fs
jnp
cs
dec
fwait
jae
les
pop
iret
sbb
mov
insb
mov
mov
sub
aam
sub
xchg
sti
dec
pop
mov
sbb
mov
jg
lock
mov
fcoms
xor
xor
mov
arpl
xor
cmp
loopne
ret
and
aas
or
loop,pn
xor
in
aaa
lahf
adc
xchg
incb
ja
add
cmp
cmp
fdivrl
loop
sbb
add
sti
sbb
mov
sbb
pop
jns
pop
push
rcrl
aam
or
or
xor
mov
cs
xchg
out
sbb
cmp
cmp
push
xor
test
sbb
and
sbb
mov
jbe
cs
mov
inc
ja
mov
push
in
push
scas
pop
dec
repz
stos
addr16
insb
popf
cmpsb
sub
mov
dec
pop
fnstsw
inc
sbb
or
imul
jo
mov
ja
roll
sub
jle
fcmove
mov
xchg
lock
or
mov
out
adc
test
ret
mov
aaa
sbb
pop
mov
sbb
xor
sub
sahf
push
lcall
lods
cwtl
dec
mov
xchg
lds
and
cmp
jmp
push
jle
test
cmp
fildll
and
and
lock
mov
jae
pop
fldpi
mov
inc
mov
cmp
loop
xor
ja
cmpsb
divb
dec
xor
outsl
or
xor
das
les
popa
adc
das
mov
outsb
sub
daa
in
or
xor
xor
mov
add
std
loop
je
cmp
bound
mov
adc
ss
or
cmp
popl
pop
mov
shlb
or
std
shrl
jbe
sbb
arpl
lret
nop
push
mov
jno
lret
imul
call
sub
dec
dec
rcll
push
aaa
aas
xor
fistl
pushf
mov
addr16
jge
xchg
outsb
fstpl
pop
cmp
and
aad
push
or
lds
inc
insl
sub
movsl
popf
in
fucomi
pop
push
js
adc
xchg
mov
je
pop
xor
loop
fst
repnz
pushf
adc
scas
loopne
cwtl
nop
push
jae
fucom
pop
push
push
dec
adc
inc
nop
adc
iret
std
xor
lock
and
imul
and
sbb
aam
jbe
rcrb
nop
jne
cmp
lods
mov
adc
das
mov
cltd
mov
sahf
scas
cmpsb
test
dec
imul
and
rorb
push
rcr
adc
or
jns
es
aam
add
mov
lcall
push
add
sub
popa
sbb
fnstenv
add
mov
or
mov
pop
es
mov
xor
cmc
sbb
pushf
and
iret
idivl
xlat
rolb
cmp
std
es
jle
lods
or
mov
add
mov
sub
xchg
lcall
mov
mov
shlb
arpl
jp
xchg
les
inc
sub
add
iret
xchg
movb
mov
mov
andb
and
inc
adc
mov
pop
fists
rol
shrb
data16
cmpsl
test
jae
push
pop
shlb
ficomps
sub
testl
insb
pop
sti
in
call
loope
mov
sbb
aaa
daa
dec
test
ds
out
pop
cmp
pop
aad
fsubrl
jae
sar
mov
les
xor
daa
jnp
or
pop
jecxz
add
sub
negb
or
xor
mov
js
adc
mov
pop
pusha
notb
fistpl
and
fxch
mov
cmp
ds
leave
push
add
mov
in
and
mov
push
mul
sbb
inc
push
aas
loope
cmp
loope
fdivl
jae
aas
mov
mov
mov
pop
sub
aaa
sbb
popa
rcll
cmp
loope
and
jae
jae,pn
jnp
test
hlt
aaa
pop
repnz
fsubl
cmp
xlat
add
xor
pop
daa
pop
sub
negb
or
clc
xor
add
add
cmp
aas
and
pop
xor
pop
in
addr16
mov
fsubrl
cmp
ret
push
jnp
in
loop
pop
sub
das
movsb
repnz
fstp
mov
mov
hlt
enter
aas
je
andl
scas
mov
jnp
in
pop
inc
in
inc
dec
push
jl
cmp
scas
out
mov
cld
dec
cwtl
mov
ljmp
cmp
mov
fnclex
addl
sbb
jbe
das
clc
lret
sub
fiadds
inc
ror
mov
insb
movsb
pop
mov
arpl
push
jnp
in
arpl
aas
je
repnz
loope
pop
adc
stc
rolb
xor
repnz
fsubrl
cmp
xlat
add
xor
negb
fimuls
cld
aam
inc
dec
jmp
shll
cmp
movsb
imul
pop
mov
mov
xchg
lahf
or
xor
jnp
call
jo
adc
cmp
mov
xor
aas
cltd
bound
fists
sarb
sub
cmpb
jecxz
pop
inc
sub
jmp
popa
aam
add
pop
frstors
cmp
popa
in
cmpsb
push
pusha
jo
sub
loopne
mov
add
and
mov
out
and
cmp
xchg
jns
pop
xchg
pusha
inc
jnp
in
bound
pop
sub
mov
aad
mov
pop
pop
leave
mov
filds
jo
mov
mov
lods
repnz
loop
adc
fistps
sub
idivb
dec
or
mov
jnp
add
repnz
frstor
xor
out
aaa
pop
pop
leave
mov
and
fdivrl
fdivrl
fmul
dec
enter
in
pushf
mov
ss
pop
in
xchg
pusha
leave
insb
dec
push
fistps
cmpsl
cmp
mov
inc
push
or
adc
stos
pop
lahf
outsb
out
xchg
ret
mov
dec
frstor
pop
push
shl
or
mov
inc
sahf
movsb
push
push
push
adc
mov
dec
repnz
inc
mov
mov
and
cwtl
lods
es
outsb
mov
or
int3
sub
fidivl
sub
loop
out
pop
jmp
xor
hlt
mov
mov
daa
fistl
divl
lret
xlat
add
and
daa
test
shlb
arpl
mov
fcmovnb
mov
test
fmull
jno
pop
mov
scas
pop
cmpsl
fnsave
xchg
mov
in
popa
lahf
dec
cmp
and
fstpl
pop
int3
dec
mov
xor
stos
cmp
pop
mov
int
fs
rep
sarb
cmpsb
mov
pop
pop
cld
mov
pusha
in
mov
pop
sub
adc
cmp
push
pop
and
aas
sbb
jg
mov
lods
in
das
jecxz
test
sbb
pop
mov
mov
pop
jg
cmp
jg
dec
xchg
fnstsw
jg
pop
pop
cld
scas
aam
loop
jae
jg
lods
and
rolb
insb
js
push
addr16
cli
inc
mov
and
lahf
sbb
pop
insl
mov
aaa
adc
dec
sub
and
je
fsubrl
cmc
push
aam
lods
ja
add
inc
in
jg
or
out
or
fs
mov
or
jle
pop
push
gs
jnp
pop
imul
lahf
mov
icebp
shrl
xlat
shll
lahf
pop
jmp
stc
das
inc
lahf
adcb
and
cmc
adc
hlt
test
shll
sbb
sub
arpl
mov
imulb
and
das
xchg
push
out
jae
pop
xchg
jge
mov
push
jg
dec
imul
and
mov
jnp
sbb
cli
leave
test
lcall
mov
daa
mov
jae
mov
insl
scas
dec
jbe
inc
fwait
mov
call
outsb
cs
mov
push
outsb
cmpsl
sti
loopne
call
clc
lock
adc
loopne
dec
jg
sub
mov
add
sahf
sub
scas
xchg
pop
mov
adcl
pop
jns
jg
jge
sbb
pop
int3
loopne
cmp
scas
fdivs
out
sbb
or
ds
pop
jg
pop
loope
xchg
pop
sbb
vphaddbw
test
mov
inc
jmp
lahf
adc
jg
xor
ficoms
aas
sub
call
xor
jae
and
pushf
mov
iret
jbe
rclb
and
jbe
mov
std
mov
pop
hlt
xor
loopne
repz
or
clc
or
mov
xor
mov
mov
xor
mov
dec
mov
gs
iret
dec
in
iret
inc
mov
jo
sub
pop
not
mov
iret
ret
clc
lret
lahf
add
std
sbb
or
js
mov
pop
inc
pop
jmp
mov
jmp
cld
insl
das
bound
sub
jne
in
mov
mov
outsl
in
push
pmaxub
loope
pop
clc
mov
test
lock
sub
insl
inc
pop
dec
in
adc
jle
and
jecxz
fdivs
and
cmp
push
out
cld
mov
add
mulb
and
jbe
dec
jp
and
mov
fs
movsb
mov
pop
dec
mov
in
stos
jo
repz
imul
cs
jg
inc
mov
out
addr16
xor
cmpsl
dec
aaa
insl
fcmovu
mov
in
call
xor
popa
clc
sahf
push
and
loopne
cmpsl
addl
xchg
xlat
mov
jg
movsb
adc
neg
pop
mov
and
mov
or
sbb
fwait
xchg
sbb
mov
and
jle
pushf
cwtl
popf
push
out
jl
pop
xor
int
mov
out
push
in
call
fimuls
and
daa
xchg
pop
into
sbb
jmp
int3
clc
pop
sub
std
and
fmuls
sub
cmp
cmp
jg
xchg
cmc
dec
and
mov
sbb
xchg
mov
add
and
add
in
scas
jge
mov
mov
scas
negl
mov
or
mov
jb
lods
fstl
cmp
sbb
sahf
mov
test
and
cmc
mov
xor
cmp
mov
xor
and
pop
imulb
hlt
insb
cmc
popf
xor
and
cli
scas
jle
pop
stos
push
mov
xor
int3
and
add
jg
cmp
ret
inc
mov
popa
sti
dec
pop
mov
mov
jecxz
jg
call
cmc
mov
push
call
scas
add
ret
jbe
rcrb
pop
pushf
cmp
negb
adc
sub
lods
dec
mov
mov
and
fsts
scas
jg
push
mov
adc
cld
jbe
adc
aad
ss
pop
std
in
call
pushl
jg
popf
and
mov
cmp
daa
call
inc
sub
cmp
cmp
fldcw
or
xchg
pop
mov
adc
pusha
movsb
xor
cmp
lods
jmp
int3
adc
dec
outsl
mov
jmp
mulb
mov
lahf
cwtl
popf
aam
mov
jmp
popa
adc
loopne
addr16
jmp
jg
xlat
loop
sahf
into
fiadds
ljmp
aam
fsubs
jl
pmovmskb
xchg
adc
and
mov
int3
mov
arpl
imull
int3
mov
jnp
xlat
jg
adc
call
or
mov
sub
lret
dec
cmp
sbb
fidivrs
faddp
dec
pop
out
movsb
sbb
cmc
adc
test
pop
lret
mov
fstpt
add
sbb
ret
loopne
std
push
adc
push
insl
mov
fidivrs
test
mov
add
pop
push
adc
into
add
jmp
imul
loope
fidivrs
lods
in
mov
mov
mov
xchg
inc
dec
mov
pop
push
jle
jg
jns
aam
mov
push
inc
gs
into
iret
push
das
idiv
push
add
inc
clc
ds
mov
jl
and
lods
jb
loop
addr16
das
push
sub
aam
jne
xchg
mov
mov
sar
insb
xchg
int
mov
scas
andl
out
in
rcl
xchg
ss
mov
xor
mov
fs
jne
jbe
aaa
outsl
ret
fs
cmp
add
mov
les
and
jnp
xor
movsb
out
les
lret
inc
or
sub
and
pop
xor
test
ret
out
les
cmp
aas
mov
inc
shlb
insl
lds
daa
cmp
das
xor
sbb
cmp
insl
fdivr
adc
pop
add
imul
mov
push
cmp
mov
dec
sahf
shlb
xchg
or
shlb
ret
addr16
aas
pop
cmp
gs
mov
rclb
lea
sti
ja
cld
push
inc
je
inc
push
inc
aaa
inc
jno
push
xor
sub
call
popf
fwait
pop
sti
cld
pop
outsl
lock
dec
jnp
popa
xchg
aaa
jnp
test
dec
sub
cmp
and
in
mov
dec
arpl
call
jge
in
and
xor
scas
and
dec
or
mov
and
out
loopne
or
push
xchg
jmp
and
aad
icebp
idivl
or
mov
push
sub
stos
sub
in
cmc
shrl
test
adc
rolb
mov
popf
cltd
cmp
scas
cmp
cmp
push
sub
shlb
and
aas
jl
cs
pop
pop
jge
add
test
popa
mov
imul
mov
aaa
dec
mov
jae
lods
xlat
dec
sub
pop
pop
sbb
xor
xchg
sbb
inc
xchg
jl
lods
and
add
in
enter
dec
mov
stos
lcall
cmpsl
dec
jmp
mov
ja
sbb
add
loopne
sub
cmpsl
movsl
pop
mov
rcrl
enter
mov
daa
das
in
std
add
test
and
out
pop
dec
sahf
aad
je
inc
call
push
xor
xor
xor
pop
fwait
xor
sub
mov
adc
ljmp
arpl
push
imul
hlt
and
cli
aad
cmp
pop
aam
ficoms
dec
lods
shl
cmp
cmp
jnp
insl
gs
mov
daa
imul
in
adc
mov
scas
mov
dec
mov
shr
imul
shrb
leave
mov
pop
into
outsl
mov
adc
lret
jmp
sub
jg
xor
movsb
jae
outsl
cli
imul
push
ja
pop
mov
stc
fidivs
in
je
mov
lock
test
or
out
xor
mov
pop
daa
imul
lahf
mov
or
or
mov
shlb
jecxz
loopne
in
jno
mov
mov
scas
fnclex
insb
ffree
das
mov
pushf
add
cmp
mov
les
mov
fmuls
insb
faddl
pop
adc
aam
popa
mov
or
mov
jne
mov
pop
cmp
jle
enter
jno
test
shl
shl
cld
mov
scas
push
xchg
inc
push
push
orb
pop
and
aam
or
shlb
mov
sub
faddp
pop
insb
pop
stc
jmp
enter
cld
out
shlb
das
les
dec
mov
sub
adc
out
push
loopne
fcomps
mov
mov
aad
cmpsl
mov
test
cmp
fs
xchg
call
xchg
imul
mov
jmp
clc
cmc
ret
pop
std
dec
enter
pop
cmp
cmpsl
inc
jecxz
jns
rcr
xchg
or
divb
cld
adc
popf
xlat
lahf
mov
movsl
mov
or
add
xor
imul
ja
or
mov
sti
fidivrs
cli
outsw
mov
jo
pop
add
xchg
sti
lods
push
rcrb
mov
mov
call
lods
insl
pop
movsb
push
lahf
pop
test
outsl
rcll
pop
mov
aam
roll
clc
jl
aas
shrl
dec
movsb
cmp
jno
dec
mov
dec
xor
int
push
js
add
mov
das
stos
lahf
jmp
xlat
fwait
mov
sbb
cmp
aaa
xor
pop
daa
lret
mov
and
and
jg
hlt
or
js
int3
scas
mov
and
push
inc
out
and
jge
mov
insl
lahf
movsl
cmp
scas
insl
fs
aas
or
jecxz
sub
xor
mov
adc
cmp
sub
inc
or
sbb
ja
icebp
icebp
movsl
sub
adc
or
pop
and
fwait
mov
out
adc
cmpsl
das
pop
call
cmpsl
jne
mov
mov
and
addr16
push
or
xlat
les
pushf
jae
insb
mov
aas
mov
test
and
je
mov
cmpsb
dec
mov
xchg
daa
fnstcw
pop
jnp
cld
loopne
lahf
shlb
out
movsb
and
aam
pop
scas
lea
cmp
cld
xor
sbb
aad
xlat
push
pop
pop
insl
imull
scas
repz
jl
out
mov
mov
pop
mov
ret
mov
add
enter
dec
adc
inc
movsb
pop
mov
test
test
mov
in
adc
int3
dec
mov
mov
loopne
cmp
lods
lock
pop
push
push
outsl
das
lods
jl
movsb
scas
cmp
adc
mov
adc
cmp
jg
cmp
orb
cmp
xor
negl
aas
cli
jns
and
sub
and
adc
imulb
cmpsl
cwtl
pop
fmull
and
fs
hlt
dec
or
loop
vmovupd
mov
jmp
lock
push
out
mov
cmpsl
cmpsl
pusha
adc
fsubl
imul
add
add
les
hlt
in
jmp
mov
iret
pushf
mov
jne
mov
sbb
jge
xor
jg
and
addr16
lret
adc
mov
push
sbb
inc
xchg
fnstsw
mov
cmp
mov
xchg
fcoms
insl
scas
lods
mov
fdivrl
in
fdivrs
sbb
cmp
arpl
stc
mov
inc
addr16
sbbl
enter
mov
add
mov
sub
push
aaa
cmpsl
sub
mov
aaa
clc
sarl
dec
and
inc
orb
mov
repz
les
aam
jg
jb
or
dec
mov
fisubs
dec
sti
fadds
sub
adc
mov
arpl
mov
adc
lcall
xlat
int3
pop
scas
fidivl
pop
mov
outsl
sbb
cmpsb
jmp
lock
aam
fistpl
into
fmuls
insl
fmull
mov
pop
pop
mov
jno
add
cmp
ret
bound
and
cs
mov
jl
add
out
call
and
rorb
mov
lock
push
dec
mov
icebp
mov
mov
pop
push
mov
cmp
scas
inc
mov
ss
add
xchg
add
mov
xcrypt-cfb
cmpsl
mov
cwtl
ss
bound
lods
in
pop
sub
in
lahf
xorl
sbb
jl
pop
pusha
fiadds
dec
mov
mov
fldt
lock
mov
adc
pop
xchg
mov
xor
mov
inc
lahf
push
xchg
fadd
jg
hlt
mov
cs
dec
or
xchg
add
lret
daa
in
ret
mov
in
mov
mov
xor
pop
cmp
and
add
loope
cmp
lock
loope
pop
jmp
dec
aas
fcomps
subb
cmc
cmp
cltd
sarb
mov
xor
rcr
xchg
mov
outsl
lea
arpl
sbb
cs
sub
pushf
mov
cmp
scas
adc
test
andl
cmpsl
movsl
xchg
nop
cmpsl
push
dec
in
add
ja
nop
cmpsl
negb
mov
push
shrl
add
mov
sbb
cmp
cmp
pop
jmp
adc
lret
pop
das
sub
aaa
aam
push
das
cmc
sti
iret
adc
lds
hlt
lock
dec
pop
in
lret
mov
mov
mov
cwtl
mov
in
in
sub
mov
mov
cmp
loop
sub
movsb
and
xor
add
inc
ds
lds
lods
aaa
push
sub
les
rolb
or
aaa
jge
in
inc
aaa
lret
mulb
in
xlat
jg
inc
pop
aaa
mov
lock
ja
or
push
mov
add
aas
xor
sbb
outsb
mov
aas
adc
fildll
and
roll
lahf
jb
jg
or
dec
movsb
mov
rcll
dec
fidivl
cmp
xchg
das
out
dec
and
xor
jno
inc
mov
je
outsl
jae
jl
mov
je
cmp
lahf
pop
cmpsb
fsubrl
add
test
loopne
jmp
fcoms
or
outsl
mov
fmull
test
fisubs
and
jp
or
sti
shrl
test
mov
cld
mov
sbb
sub
mov
mov
push
ljmp
pop
fsubrp
pop
shlb
shrl
mov
mov
sbb
and
and
xor
insl
mov
jnp
aaa
lds
lock
sub
out
loopne
xor
cmp
jg
lods
pop
fisttpl
xchg
clc
sub
andb
jnp
mov
hlt
mov
sti
mov
jno
fwait
mov
sbb
call
cmc
adc
lods
insb
jmp
into
aam
adc
loop
jnp
inc
test
out
shrl
mov
lock
loopne
and
and
mov
pop
xor
add
idivb
outsb
daa
das
mov
mov
scas
and
inc
sbb
int
jecxz
sbb
jg
cmc
js
fdiv
mov
jg
sbb
lret
fnstcw
clc
movsb
rcll
adc
sbb
push
aaa
gs
pop
scas
in
and
dec
pop
sbb
mov
xchg
and
sub
xchg
and
je
mov
mov
xor
or
inc
push
popa
lea
pop
notl
test
jl
lcall
test
xlat
push
imul
mov
cli
pop
ljmp
push
aam
xchg
out
sbb
pop
enter
sub
insb
rclb
movsl
pop
mov
xchg
test
or
ds
in
mov
sarl
dec
movsb
mov
cmpsl
sbb
mov
imul
mov
mov
pop
outsl
adc
mov
lods
jno
xor
xchg
dec
mov
js
xor
idivl
das
fbld
clc
mov
lahf
bnd
cmp
mov
repnz
daa
movsl
out
cmpsl
inc
idivb
cmp
and
xor
add
and
xor
mov
jno
pop
scas
mov
sti
lods
in
fucomip
mov
cmp
xlat
in
ss
mov
lods
mov
rcll
aas
sar
mov
negb
mov
addl
dec
mov
cli
jge
fidivs
mov
mov
cltd
les
add
add
fidivs
outsl
lret
bnd
cltd
ljmp
lods
mov
ret
mov
mov
dec
or
scas
sub
cmc
mov
mov
inc
jmp
in
fcmovnbe
pop
pop
sub
push
rclb
fucomp
int3
mov
fsubrp
and
push
pop
fidivrs
cmpsb
cli
xchg
addr16
pop
das
xchg
xchg
xchg
mov
mov
pop
popa
mov
daa
dec
push
push
jge
mov
pop
mov
pop
sbb
inc
pop
daa
imul
sbb
mov
jae
xchg
inc
mov
imul
icebp
and
imul
js
aaa
shlb
jno
xchg
aas
movsl
cmpsl
xchg
faddl
scas
and
push
lods
loope
cmpsl
cmp
aaa
dec
pop
mov
xor
shlb
dec
ficompl
mov
add
push
push
xchg
stos
pop
dec
cli
cmp
orb
pop
inc
or
mov
inc
jmp
les
insl
adc
fdivrp
je
and
sub
movb
lea
sbb
rorb
lods
idiv
out
out
rcl
mov
fmul
cmpsl
imul
ljmp
loopne
xor
jecxz
and
fdivl
xor
mov
jg
mov
mov
push
das
mov
movsb
outsl
inc
aam
mov
cmp
and
push
xor
fcmovne
sub
stos
pusha
stos
enter
mov
mov
jmp
mov
ficoml
das
pop
mov
mov
hlt
test
pop
addl
or
xlat
int3
add
inc
clc
pop
leave
dec
sbb
mov
in
movsb
dec
dec
adc
mov
pushl
push
shlb
sbb
push
and
mov
loopne
in
mov
jg
inc
in
jne
sbb
mov
add
mov
ret
xor
adc
sbb
fdivs
sub
mov
cli
mov
mov
inc
fsub
pop
push
mov
out
pop
mov
push
jg
insb
mov
cmc
mov
and
stos
icebp
mov
or
int3
fcompl
mov
mov
mov
sar
stos
sub
adc
stos
movsb
xchg
mov
xchg
mov
or
mov
xor
das
pop
rorl
mov
sub
leave
mov
aad
loope
mov
and
lods
jno
mov
mov
cli
mov
mov
test
dec
mov
aaa
mov
or
mov
jne
or
or
add
mov
push
int
cmp
mov
ljmp
cmpb
and
inc
fwait
outsl
and
push
xor
ret
fidivl
add
ja
daa
div
sub
push
int
lods
in
test
lea
nop
mov
repz
pop
dec
sub
shrb
cld
mov
sbb
shr
imul
rcl
cli
outsb
cmp
pop
daa
arpl
add
gs
mov
xchg
adc
int3
test
adc
test
sbb
sbb
hlt
popf
jbe
and
jno
test
lret
xlat
clc
stos
sbb
xchg
les
xor
cmpsl
lods
shlb
insb
pop
dec
mov
push
pop
lods
mov
cmpsb
divl
jbe
sub
call
insb
ljmp
idivb
mov
fsubl
mov
pop
aam
sub
mov
fdivs
fmull
clc
mov
aaa
outsb
cmp
mov
rcl
adc
aad
sub
neg
cwtl
mov
cmpsl
out
daa
loopne
add
pop
stos
sbb
fsubl
dec
xchg
cmp
mov
shll
xchg
fs
xchg
add
mov
mov
sub
inc
cli
inc
pop
stc
xlat
and
insb
sub
sbb
js
sarb
jle
fs
movsb
add
xchg
in
cmp
push
lock
dec
or
lds
es
fwait
jbe
xchg
rcrl
sahf
mov
pushf
mov
mov
push
mov
jno
jl
nop
inc
aas
pop
mov
or
sbb
cld
inc
mov
and
or
or
cmc
mov
jno
stos
in
cld
js
ja
pop
adc
inc
add
loop
jge
ljmp
shl
sarb
xorb
jl
jb
adc
pop
adc
fdivrs
pop
call
pop
hlt
fcmovne
mov
pop
test
out
loopne
stc
mov
jbe
and
or
push
imulb
push
fdivl
sub
lock
aam
pop
bound
pop
cmc
xor
rolb
mov
xchg
andb
outsb
ja
out
aas
in
jmp
xor
sbb
xor
sub
jg
pusha
fisttpl
pop
add
sub
and
xor
fdivrl
mov
mov
or
pop
aad
pop
push
mov
mov
popa
minps
pop
cmp
cmp
mov
and
movsb
scas
lock
daa
cltd
xchg
inc
lock
fnsave
scas
sub
cmp
adcl
lock
enter
popa
adc
sub
insb
adc
leave
cmp
xchg
lods
movsl
mov
jne
das
scas
out
xor
loop
lea
scas
jne
bound
fnsave
mov
cli
push
mov
mov
mov
push
out
ret
push
shl
popf
sub
mov
daa
cli
jno
sbb
outsl
fstpl
ffree
mov
push
hlt
ret
pop
insl
mov
das
repz
ret
or
ss
dec
ja
pop
adc
mov
push
mov
xchg
int
popa
add
mov
xchg
or
or
add
fisubrl
pop
in
repz
cld
adc
push
arpl
jl
aam
and
adc
pop
fisttps
aaa
insb
sub
call
push
xor
push
fdivl
ss
test
or
movsl
adc
clc
gs
jb
rcrl
aad
inc
pop
aaa
or
out
fdivrs
jne
inc
cli
loopne
adc
dec
bnd
inc
push
lret
outsl
and
xor
int
ja
inc
sarl
ljmp
cmpsl
ja
lds
mov
fcmovnb
adc
mov
fmuls
inc
jg
push
imul
add
or
jne
hlt
sahf
pop
mov
cld
mov
add
mov
xchg
scas
xchg
mov
cs
arpl
mov
popf
out
aam
mov
dec
clc
cli
sbb
daa
iret
fwait
and
ret
xor
in
push
push
cmp
fcomps
adc
addr16
dec
int3
mov
xchg
xor
mov
and
ss
sbb
xchg
in
stos
jo
rcrl
divb
pop
mov
sub
xor
scas
lret
pop
jns
ret
out
cmc
arpl
popf
fmull
pusha
ficoml
mov
xchg
imul
xchg
es
mov
int3
push
mov
into
jae
das
mov
inc
jnp
sub
es
mov
js
sti
ret
jl
xchg
pusha
mov
xor
in
sti
out
pop
inc
jno
xor
rorl
xor
fistpl
mov
add
scas
mov
aas
testl
das
mov
outsb
fcomip
ret
das
or
daa
dec
adc
out
fdivl
xchg
and
mov
jp
ds
dec
xor
mov
xor
subl
push
in
or
rorb
cmp
out
outsl
ljmp
in
shll
movsl
pop
jns
ficoml
jle
fbstp
loop
jae
and
sub
out
push
cmp
sub
jecxz
fwait
sbb
ret
adc
sub
dec
push
das
mov
sub
and
out
sbb
cwtl
out
stc
aad
rcrl
mov
mov
inc
pop
stos
adc
jg
dec
inc
repz
mov
lcall
fmull
or
lods
ja
stos
outsb
xchg
lret
mov
je
push
andb
mov
sbb
fdivrl
sbb
in
loope
push
pushf
lds
mov
or
sbb
push
xor
xor
dec
iret
out
xor
es
mov
test
cmpsl
dec
adc
pop
aaa
sbb
loop
les
xchg
stos
jb
mov
movsb
add
push
aaa
dec
daa
mov
movsb
lods
lods
xchg
jmp
in
push
sub
push
push
lcall
xchg
into
movsb
loope
dec
ficomps
push
into
fnsave
sub
dec
pop
std
ficomps
scas
popf
aam
das
popf
mov
cmpsl
popf
cwtl
cmpsl
pop
popf
push
cmpsl
mov
mov
popf
adc
sbb
or
xor
das
sbbb
xor
cmp
clc
jmp
mov
pop
out
int3
fimuls
xorb
fildl
jge
cmp
and
sub
rcrb
lea
cmpb
push
dec
add
sarb
bound
popf
xor
add
mov
sub
mov
sub
rorb
cmp
mov
pop
pop
and
xchg
pop
fcmovu
pop
outsl
inc
jnp
dec
adc
dec
sbb
and
inc
xor
cmp
jg
adc
outsl
lods
jnp
xor
movsb
outsl
pop
inc
movsb
pop
pop
imul
mov
in
push
push
adc
lock
leave
data16
dec
addl
addl
out
xor
dec
je
and
cmp
sub
mov
adc
mov
mov
inc
dec
ja
push
scas
sbb
push
repnz
jno
or
fldcw
pop
mov
xor
in
mov
cmpsb
push
popa
not
or
mov
pop
aaa
mov
pusha
ret
sbb
or
lds
mov
or
frstor
scas
mov
add
in
add
jns
ret
mov
cmp
inc
andb
ja
call
add
ja
aad
lock
js
test
xchg
and
dec
mov
cli
dec
push
lds
aam
aam
xchg
rorb
add
arpl
insl
adc
mov
push
add
cwtl
and
shll
sub
fdivr
mov
subb
mov
sbb
aas
aas
mov
or
das
aas
mov
scas
clc
aaa
loop
frstor
fidivrs
cmpsb
shr
inc
movsb
dec
stc
js
or
push
lods
pushf
cmp
xor
test
aaa
pop
cli
dec
add
sbb
xor
inc
scas
test
mov
hlt
pop
pop
mov
popf
xchg
in
mov
and
lahf
insb
and
adc
push
leave
fwait
jle
js
jo
mov
ret
mov
pop
mov
pop
rcrl
mov
mov
pop
fisubrl
cs
mov
aaa
orb
xchg
ret
sub
sub
inc
jbe
les
dec
lret
jl
mov
fmull
mov
jl
push
daa
das
int3
push
dec
roll
outsl
mov
adcl
add
scas
fcmovu
sub
imul
test
imul
pop
cmp
xor
in
negb
cmp
xchg
sub
or
les
mov
outsb
fwait
jnp
add
mov
test
ficompl
inc
or
stos
pop
shrl
push
lds
mov
xchg
imul
out
fisubs
in
and
aas
insb
jbe
xor
lea
push
adc
xchg
push
cmp
das
ret
mov
hlt
mov
out
out
sbb
pusha
scas
mov
outsl
and
mov
fbstp
cmpsl
das
mov
sub
fcomip
cmpsl
xor
cmpsl
and
outsl
pop
in
std
stos
mov
cli
xchg
jns
add
fistpll
outsl
ds
sti
mov
mov
rcrl
jge
out
pushf
pop
jg
pop
adc
cs
out
jecxz
dec
jecxz
popf
fbstp
nop
push
out
sub
sbb
cwtl
cltd
pop
dec
fcomi
int
inc
mov
xchg
aad
or
cltd
jle
fisttps
or
mov
push
jg
fstpt
fistps
jbe
lahf
inc
or
mov
popa
xlat
clc
std
lcall
pop
jmp
jecxz
pop
xor
fidivrl
mov
jae
insb
mov
xor
outsl
cmp
loop
outsl
mov
or
mov
lahf
cmp
lds
aaa
mov
lret
mov
popf
mov
cmpb
pop
out
imul
ja
aas
loop
mov
aas
scas
xorl
cld
mov
std
aas
mov
or
sbb
lret
fstpl
negl
aas
push
stos
pushf
aas
xor
outsl
cmp
mov
mov
popf
and
cmp
js
ja
addr16
or
neg
outsb
cmp
ja
loop
fsubr
frndint
xchg
inc
cmp
pop
jp
lahf
xchg
ret
fdiv
fistpll
in
cltd
fistpll
mov
push
jmp
push
lahf
mov
or
scas
popf
pusha
lods
mov
pop
std
pushf
jle
loope
push
outsl
std
sarl
loope
mov
pop
call
ds
decl
pop
cmp
fstpt
mov
mov
aas
jecxz
mov
pop
loop
faddl
jnp
pop
cmp
push
stc
divl
cmp
outsb
out
jmp
std
stos
fstpl
hlt
pop
loopne
jg
ljmp
xlat
stos
lahf
es
outsb
push
add
jge
dec
cmp
xor
lods
push
rolb
fstpl
xchg
lahf
mov
mov
cmp
push
loope
jg
negb
pushl
cmp
mov
mov
inc
add
inc
fdivrs
arpl
push
xor
mov
mov
pop
std
lods
jg
stos
mov
add
and
cmp
cmp
clc
and
js
cmp
in
cmp
pop
mov
push
pop
outsl
jg
aas
push
mov
lahf
jae
insb
cld
mov
lods
cmp
popf
les
mov
cmp
pop
je
ret
shr
sti
negl
cmp
jge
jns
lahf
xor
or
cld
rorb
pop
sub
sbb
xchg
push
pop
mov
mov
jge
jle
call
call
xor
je
or
mov
mov
sti
fsubr
ds
pop
mov
cwtl
ret
cld
test
pushf
je
sbb
test
jmp
xchg
fdivrl
cwtl
loope
mov
xchg
add
jns
sbb
addb
popf
mov
ficomps
test
loop
jbe
addb
mov
std
test
sbb
nop
sar
mov
cmp
incb
rolb
aas
je
sbb
je,pt
cld
bnd
mov
jo
pop
dec
aas
bnd
cmp
ds
pushf
fsubrs
sahf
jbe
pusha
jmp
push
aas
mov
pop
add
mov
pushl
pusha
std
hlt
jl
xchg
cmp
mov
push
incl
mov
pop
hlt
mov
add
dec
std
out
js
pop
lods
pop
dec
jg
add
jne
outsl
cld
add
sub
sbb
mov
cmpl
aas
repnz
mov
pop
mov
mov
jl
aas
sbb
aas
cmp
jge
jnp
sbb
jl
loopne
shl
sbb
jecxz
std
stos
mov
pop
mov
sbbl
mov
cmp
popf
je
ffreep
std
hlt
pop
lods
frstor
pop
sarl
pop
hlt
pop
test
xlat
rcrl
lods
jg
push
pop
scas
push
pop
pop
mov
mov
out
cmp
iret
xlat
cs
cmpsb
outsl
mov
aas
movsb
pop
nop
dec
cmpsl
adc
fisubl
pusha
or
dec
sahf
idivb
mov
mov
ss
aas
mov
lahf
sbb
aad
mov
sbb
jb
xor
fisubl
mov
lret
mov
aas
out
pop
dec
in
cld
xor
data16
out
pop
mov
sbb
mov
into
sti
xchg
mov
inc
push
sbb
jg
fstpt
and
in
aas
jl
out
adc
jg
sub
scas
mov
insl
dec
jae
jg
mov
xlat
xchg
sbb
or
jle
sti
xlat
in
mov
xchg
cld
stc
mov
xchg
cld
in
dec
fucomip
mov
pop
push
lods
mov
or
pop
jnp
cmp
push
dec
cld
jnp
aad
mov
hlt
cmp
jl
jle
int3
jle
fneni(8087
xchg
sahf
jnp
cltd
mov
xchg
add
fucomip
es
loope
push
mov
lea
imul
pusha
test
pop
in
into
out
fsubr
mov
fistpll
mov
cld
jbe
fstpt
in
mov
mov
in
mov
cwtl
ret
mov
mov
mul
stos
jb
test
imull
aas
in
fistpll
decb
mov
std
push
dec
pop
xlat
mov
int3
adc
mov
negl
mov
fstpt
jl
std
mov
sbb
xchg
mov
es
cmp
ficomps
pusha
imul
sti
push
jnp
cmp
popf
mov
int3
cmp
test
iret
add
popf
ds
in
mov
jg
mov
rcrb
outsb
insb
stc
push
push
sub
jl
fwait
incb
pop
fwait
cmp
out
mov
xchg
in
mov
jecxz
mov
mov
jg
jae
sti
in
cmpsl
out
mov
sbb
lahf
outsb
out
jg
mov
repz
std
int3
dec
cmp
mov
fidivrs
enter
popf
mov
adc
mov
jne
in
mov
arpl
call
imulb
cmp
pop
push
sarb
clc
int3
cld
fstp
incb
pop
cmp
mov
mull
popf
cmc
std
add
stos
fnstcw
jl
cmp
jmp
sub
pop
dec
mov
sbb
sbb
jmp
lock
fnstsw
cli
jo
sarb
cmp
xchg
pop
in
out
ds
pop
insb
fistpll
loop
idivb
cmpsb
mov
pusha
mov
mov
mov
cmpsb
push
mov
stos
sbb
mull
imulb
orb
jle
repz
pop
mov
dec
jge
push
movsb
mov
lret
xchg
cmp
jg
mov
repz
jg
inc
mov
sbb
lahf
test
aam
out
pop
lahf
mov
out
out
lahf
mov
in
mov
lahf
aad
out
outsb
iret
ljmp
stc
jl
ret
repz
mov
and
subb
jl
repz
pop
jb
repnz
mov
mov
cmp
push
fs
jne
idivl
add
fisubs
or
leave
lock
mov
mov
sbb
push
mov
and
mov
pushf
sbb
cli
push
or
pop
test
sahf
cmp
sbb
mov
in
mov
ret
jg
rep
jp
cmc
repz
adc
sub
je
pushf
negb
idiv
out
es
sbb
repnz
js
clc
jmp
pop
or
fdivrl
or
lea
cs
aas
dec
adc
mov
mov
mov
cmc
jl
out
lcall
ds
mov
popf
lret
jge
aas
aam
fidivrs
outsb
inc
ljmp
movsl
and
out
mov
sbb
push
jnp
mov
sahf
push
add
jle
push
push
les
mov
incb
and
hlt
cmp
xchg
jbe
ds
mov
lahf
sahf
mov
lret
je
cmpb
push
std
aas
push
les
in
outsb
aas
testb
outsl
pop
inc
mov
ds
push
or
cmpsb
jl
imul
dec
jnp,pt
out
mov
jg
ds
push
mov
jge
sar
jge
out
inc
sbb
outsl
inc
out
push
mov
ds
or
leave
out
push
lahf
cld
lds
jns
lcall
and
inc
nopl
xor
pop
or
pop
rcr
jp
divb
inc
mov
cli
shrl
aas
ja
pop
cmp
lahf
mov
outsb
ret
lahf
lcall
mov
cmp
imul
addr16
imul
adc
mov
jl
into
inc
mov
fstpl
insb
mov
jae
ds
inc
mov
mov
cmp
fisubs
test
mov
adc
adc
ds
and
clc
out
iret
cld
push
loopne
aad
cltd
sti
sti
sbb
loopne
test
int
loope
cmpsl
shr
movsb
std
ret
cmpsb
mov
xor
and
mov
popa
std
sbb
jp
sbb
mov
inc
cld
mov
sub
popa
in
and
cwtl
dec
mov
cmp
popf
add
cmovg
sbb
arpl
jb
push
ds
adc
in
je
mov
in
mov
push
mov
negl
mov
jge
cmc
lods
subl
mov
jg
iret
sarl
std
lahf
xor
cmp
iret
fnstcw
ret
xchg
pop
jl
scas
ljmp
xor
or
sbb
cli
nop
maxps
out
cmp
jge
cld
test
sti
sbb
ljmp
pushf
aas
fs
out
pop
cmp
cmp
and
jo
cmp
mov
sbb
jge
sti
std
dec
cld
sbb
outsb
outsl
je
in
jge
push
jl
fs
jmp
out
cmp
fcmovnu
sub
pop
pushf
jg
adc
pop
jmp
mov
pop
push
jae
pop
imul
aas
out
insb
mov
dec
frstor
dec
jle
mov
adc
jnp
sbb
cmp
aas
and
mov
std
jecxz
mov
sbb
fimuls
cmp
mov
push
in
jle
push
fsubrl
and
jl
sbb
xlat
pop
ds
fists
pop
inc
std
inc
outsl
pop
stos
cmpl
jl
jmp
aas
mov
fs
popa
dec
daa
jnp
mov
mov
addb
repz
inc
popf
cltd
lahf
fstpt
fwait
outsl
mov
rcll
stc
loop
mov
out
aas
pop
fnstenv
xchg
outsl
scas
pop
fstp
out
insb
mov
mov
jl
ja
sbb
aaa
push
fldcw
aas
int
fcmovnb
xchg
insl
cltd
xchg
imul
mov
dec
pushf
cmp
xchg
lods
fwait
sub
movzwl
outsl
daa
fiadds
and
testb
mov
fincstp
pop
scas
lods
fisubs
push
jnp
stc
add
mov
outsl
js
clc
mov
add
or
sbb
fnstcw
outsl
std
mov
call
not
mov
ja
mov
or
jbe
sti
mov
push
lahf
cmp
scas
bound
xor
repz
mov
dec
scas
pop
popl
jle
mov
push
lock
dec
iret
and
mov
jl
lret
pop
int
ds
mov
out
pop
int
ds
dec
xchg
cmp
inc
jp
ret
cmp
inc
lret
punpcklbw
push
mov
xor
sahf
jg
repz
pop
outsl
pop
cld
adc
ret
adc
mov
test
cld
aas
cmp
int3
repz
xor
ret
sarb
cmp
or
divl
rol
add
ljmp
jae
mov
inc
incl
cmpb
mov
mov
mov
inc
testl
jl
in
das
ljmp
rclb
adc
loopne
jmp
fstp
sbb
ljmp
rcl
adc
loope
and
and
lahf
pushf
outsl
insb
scas
ljmp
pusha
mov
popf
sahf
insl
outsb
lods
ljmp
popa
bound
aaa
xor
les
incl
clc
cmp
lret
enter
cmc
divb
incl
stc
cli
cmp
leave
lret
or
mov
inc
inc
xchg
test
mov
decl
inc
inc
test
xchg
mov
rorl
xlat
in
and
fcomps
sbb
call
adc
es
ficompl
sbb
ljmp
xchg
cmpsl
movsb
pop
lcall
cwtl
imul
push
call
xchg
movsw
cmpsb
pop
lcall
lcall
dec
pop
cmp
add
or
xchg
dec
cmp
pop
out
sub
mov
scas
int3
frndint
int
out
mov
fnsave
xchg
mov
sti
test
xchg
jg
stc
fistpl
in
ja
adc
aas
iret
push
std
mov
and
cs
mov
cmc
out
cmp
ds
data16
mov
daa
das
pop
mov
pop
insl
pushf
add
popf
lock
adc
aaa
mov
add
iret
repnz
sub
shll
push
ljmp
fwait
jae
mov
je
notb
sti
leave
std
cli
aam
aas
mov
push
cmp
jle
insb
mov
int3
pop
jo
xor
xchg
fstpl
pushf
cmp
mov
sub
fistpl
jg
dec
in
pop
pushf
out
in
xchg
fucomip
sbb
xor
mov
stc
ja
sub
dec
arpl
fistpll
lahf
mov
sbb
lods
pop
cwtl
add
jnp
mov
rcr
ljmp
mov
ja
out
lahf
fstps
rcr
mov
fidivs
call
cmp
jg
scas
mov
pop
stos
test
rcr
cmp
mov
out
daa
cld
vmovdqu
pop
jg
mov
xor
pop
sti
negb
dec
jp
clc
pop
ret
out
ja
sbb
sub
pop
pushl
lcall
fnstcw
pop
in
cmpsl
aas
popa
iret
jge
push
mov
mov
fldz
test
scas
inc
pop
add
std
popa
pop
fadds
mov
hlt
jge
ja
fdivr
xor
jl
xor
ss
xor
sbbl
sub
cmc
dec
pop
cwtl
in
cwtl
xorl
mov
aad
shll
call
daa
stc
push
mov
outsl
mov
sbb
pop
mov
ja
lcall
ja
aam
adc
xor
push
cmp
ja
mov
mov
or
cmp
ja
pop
and
push
std
mov
sti
iret
popf
fdivrl
fnstsw
in
mov
jae
jg
out
std
xchg
pop
xchg
pop
sbb
fdivrl
push
mov
mov
jp
lods
sbb
jg
fdivrl
aad
rolb
inc
pop
in
fmull
jg
incb
inc
bound
decl
inc
lds
cmpb
and
pushf
pop
inc
lea
cmp
and
data16
lahf
in
cmp
mov
insb
aas
js
fstpl
push
inc
inc
push
sub
ljmp
outsl
sub
mov
mov
test
and
sub
jb
fs
dec
fisubrs
icebp
lret
mov
xlat
jmp
pop
xor
out
pop
bound
lods
out
pandn
mov
mov
pop
hlt
lahf
jecxz
out
and
loop
repnz
xor
pop
outsl
ficompl
sbb
xor
outsb
sub
jnp
sbb
ret
fdivl
push
repnz
inc
mov
dec
shr
imul
hlt
fninit
lods
fsubrl
inc
enter
xor
orl
mov
inc
lahf
cwtl
out
mov
lahf
arpl
push
hlt
xor
cs
cmp
mov
cmp
fbstp
std
loop
faddl
je
arpl
ljmp
sarb
bnd
jbe
xor
loop
cmc
lods
xchg
iret
cli
das
jl
pushw
mov
dec
outsb
mov
adc
das
pop
aaa
xor
xor
dec
repnz
notb
dec
pop
idivb
arpl
lret
out
jp
dec
push
mov
aam
in
mov
pop
cmp
pop
push
add
pop
fnstenv
mov
mov
cs
subl
out
clc
xor
dec
jp
lret
jge
dec
mov
lods
dec
scas
mov
pop
jnp
fsubs
mov
gs
stos
jb
jmp
mov
mov
cmp
adc
mov
sub
gs
into
jge
in
jb
inc
jl
mov
mov
std
xor
je
mov
pop
inc
mov
scas
pop
imul
xlat
scas
mov
jl
inc
out
mov
fcmovu
adc
mov
in
xor
push
arpl
js
into
jg
inc
sub
dec
push
dec
popf
sbb
pop
jae
push
call
jge
mov
xor
xor
loope
cli
pop
in
sbb
ljmp
sbb
jne
hlt
lahf
lret
mov
mov
jbe
and
insb
adc
jle
push
test
cmp
js
repz
cmp
mul
jnp
cltd
sti
or
xor
insl
cld
enter
pop
sbb
scas
inc
sbb
jg
push
insb
add
sub
pop
hlt
sub
mov
push
jge
xchg
jecxz
sbb
ss
jle
mov
pop
pop
sbb
xchg
sbb
jmp
cltd
inc
ja
neg
cmp
mov
inc
mov
mov
jge
xor
cmp
dec
addr16
or
jo
fistpll
stos
pop
int3
mov
icebp
mov
mov
js
out
pop
sbb
or
fdivl
adcl
test
push
scas
push
mov
aam
out
jbe
sub
ror
imul
dec
cmp
ds
fdivrp
in
mov
xor
jg
pop
sbb
inc
bound
jl
fdivrl
push
leave
xor
push
clc
loopne
fldt
jg
dec
mov
mov
cld
lea
fwait
push
and
pop
mov
pop
cli
js
dec
jnp
psrad
stos
lahf
sbb
mov
mov
aas
jecxz
sbb
fnstenv
and
es
bound
mov
in
mov
mov
out
mov
ds
cmp
fwait
xor
jb
ds
cmp
xchg
sbb
testb
leave
xchg
out
ret
fdivrl
enter
push
pop
jl
pusha
stos
subb
in
rcrl
cmp
outsl
cmp
movsl
lock
andl
sbb
ficomps
mov
jnp
pop
iret
mov
jle
mov
pop
pop
mov
out
fcompl
pop
jbe
add
stos
insl
jl
aad
jmp
lahf
test
ds
cmp
adc
cld
outsl
loopne
sbb
xor
daa
mov
xor
jnp
push
mov
fisttpll
xorl
es
sbb
andl
arpl
fwait
cld
mov
loopne
mov
jp
subl
push
ja
addb
pop
jae
jp
mov
call
outsb
scas
fnstenv
out
xchg
divl
enter
inc
inc
mov
pop
xlat
sbb
mov
jo
das
jp
lcall
out
aas
sbb
sbb
pop
stc
cmp
ret
jg
cmp
repnz
mov
fldt
cmpl
loop
popa
ljmp
clc
fdivrl
sahf
pop
pop
mov
sbb
aas
adc
mov
mov
fistl
ds
ljmp
jg
sub
xchg
pop
cs
sub
pop
xor
fwait
outsl
cld
popf
pop
imul
les
adc
fdivrl
mov
fdivs
ret
repnz
mov
and
jp
mov
stc
aas
mov
lods
fcomip
xchg
popa
out
sbb
es
cmp
mov
scas
loopne
ficoml
xor
lret
cmpsb
xor
scas
inc
shll
daa
fcomps
data16
push
xchg
sahf
lods
jl
mov
dec
fistpl
dec
jecxz
mov
mov
movsb
cltd
or
hlt
aas
out
inc
mov
cmp
leave
push
ficomps
sbb
jnp
cld
sub
ficompl
xor
mov
pushf
in
pop
pop
std
cmpsl
rcr
lea
jle
xchg
fnstenv
mov
jo
cmp
sbb
je
jae
sbb
mov
xchg
sbb
call
inc
cmp
push
fnstcw
lods
inc
fidivl
insl
cmp
ficomps
mov
adc
repnz
mov
sub
mov
pop
lahf
sahf
cmp
mov
es
cmc
outsb
dec
bound
loop
das
dec
sub
outsl
faddl
pop
mov
push
rcr
xchg
mov
and
mov
mov
cwtl
repnz
inc
inc
add
movb
data16
xor
xor
mov
aaa
pop
xchg
sbb
inc
xchg
adc
push
stc
mov
cmp
push
scas
pop
pop
iret
popa
out
pop
pop
int3
loope
pop
push
mov
fisttps
divl
dec
jl
push
push
in
arpl
inc
fidivrs
sbb
outsb
fcomip
dec
jg
adc
repz
inc
xor
ret
xchg
out
jmp
and
cmp
insb
ret
push
shll
icebp
cli
sub
sub
add
imulb
cli
ds
sbb
repnz
sub
lahf
outsl
mov
cmc
jle
sahf
scas
jg
cmc
fmulp
out
cmp
jne
movq
lods
fimuls
cltd
or
jne
xlat
aaa
scas
pop
xor
jnp
jns
lret
aad
sub
ficompl
fnstsw
mov
out
aas
mov
dec
lea
out
out
jle
inc
jmp
iret
repnz
mov
loop
ret
popa
icebp
fsubrp
push
mov
pusha
repnz
gs
pop
sarb
inc
cmpsb
inc
mov
insl
lret
das
ss
jg
or
lods
es
pop
pop
push
mov
xchg
sbb
orl
rep
ret
mulb
shll
mov
dec
jg
jp
dec
cmc
shll
pop
inc
push
mov
mov
mov
jnp
mov
xchg
sub
mov
xor
data16
xchg
out
jmp
xlat
push
outsb
pop
movsb
imulb
outsl
ds
and
lret
push
rorb
adc
mov
pop
das
jle
orb
cli
xor
jo
jle
sbb
xchg
xor
roll
outsb
inc
pop
lods
dec
xor
cmc
pop
pop
gs
dec
sahf
jg
loop
rorb
jae
out
ljmp
push
lahf
ss
sub
out
jno
out
ss
ds
or
testb
mov
aas
cmp
push
divb
cmpsb
dec
mov
pop
leave
push
cli
or
negb
ljmp
hlt
push
sbb
icebp
dec
push
ret
dec
adc
arpl
in
lret
hlt
cmp
mov
push
repnz
shrl
das
adc
mov
jnp
outsl
mov
pop
cli
pcmpeqb
mov
ljmp
and
jle
push
sti
mov
inc
mov
fucomi
xor
mov
shlb
adc
shr
sbb
lods
push
jno
lods
jne
jge
add
push
sub
pop
jnp
xchg
ret
mov
xchg
inc
ret
xor
cltd
lahf
cmp
add
iret
sbbb
fstpt
shll
sub
mov
push
inc
outsb
popl
pop
sbb
jmp
xchg
into
add
idivb
pop
mov
mov
push
daa
mov
ss
scas
jp
push
aaa
fbstp
mov
shrb
fcomps
popf
stos
xor
jne
fcomip
and
fucomip
leave
and
push
inc
das
mov
inc
dec
fisubrl
mov
fidivrs
mov
mov
mov
pop
lahf
mov
jb
pop
mov
lds
sbbb
lcall
fnsetpm(287
popf
out
sti
hlt
and
mov
ljmp
jg
jg
pop
cmp
pop
jecxz
sbbb
jnp
cmpb
pop
shlb
mov
cmpsl
push
repz
and
enter
add
or
outsl
sub
aaa
jmp
cltd
in
pop
add
addb
or
push
bound
mov
lahf
push
fistpl
mov
in
xchg
jns
pop
pop
mov
in
daa
jno
mov
in
mov
cltd
mov
sbb
popa
out
dec
mov
in
or
sahf
mov
mov
cli
add
popf
push
cmp
scas
mov
or
fmuls
sbb
arpl
out
dec
jo
sbb
fsub
sbb
fcmovnu
jecxz
jae
cli
dec
incb
jae
out
aam
lahf
test
jecxz
add
jge
mov
out
push
inc
loopne
fistl
popf
jno
mov
arpl
mov
push
jle
jb
mov
jmp
xchg
sbb
pop
mov
arpl
mov
stos
aas
pop
lahf
insl
xlat
into
fisubrs
jnp
xchg
fnstsw
outsb
jl
fdivl
outsl
jl
imul
cmp
scas
lahf
xor
lahf
hlt
lahf
pop
subl
scas
insl
xlat
out
scas
push
adc
pop
cmp
cmp
mov
cmp
sbb
mov
aaa
scas
pop
cmpl
pop
push
jae
push
fsubr
scas
aas
scas
aam
mov
ds
icebp
out
imul
mov
jge
mov
scas
outsl
cmp
pop
cmp
ret
in
pop
push
sbb
out
pop
cltd
scas
pop
mov
push
mov
sub
jl
cmp
cld
inc
xlat
push
push
ljmp
insb
out
pop
scas
lods
lahf
mov
pushf
je
and
into
scas
std
sbb
lahf
js
dec
xlat
je
and
into
scas
pop
popa
sahf
outsb
jl
fcompl
into
push
dec
scas
loop
fadds
push
jl
popa
fucom
pop
jns
mov
pop
std
loop
mov
jns
cmp
mov
and
mov
les
aas
popw
mov
inc
ficompl
inc
xor
out
pop
aaa
scas
mov
inc
mov
xlat
into
mov
cld
jnp
sbb
pop
pop
out
scas
sbb
aam
mov
fisttpll
scas
fisubrs
fnstsw
inc
mov
xlat
into
jge
push
adc
jl
into
pop
sbb
lods
cmp
dec
jg
aas
sbb
into
pop
mov
sahf
negb
or
mov
scas
pop
jg
decl
leave
pop
mov
xor
jmp
in
pop
cmp
jecxz
scas
push
adc
cmp
popf
gs
push
fwait
out
jne
xor
out
jmp
xor
push
ja
cmpsb
cmp
mov
scas
outsl
sbb
aaa
ds
mov
scas
pop
pushf
mov
jge
jmp
cmp
mov
sarl
xor
sbb
insl
ja
addr16
xor
scas
cmpl
adc
out
jge
scas
mov
mov
lods
cmpsb
jl
mov
lods
jge
dec
lahf
out
js
das
xchg
out
gs
fdivrp
decb
mov
sbb
les
pop
mov
ds
into
scas
cmp
es
sahf
jge
arpl
sub
pop
pop
sahf
in
aas
sub
fisubrs
sbb
into
jle
scas
pop
xor
ljmp
mov
jmp
cmp
sarl
pushf
cli
dec
pop
pop
push
cmpsb
cmp
mov
outsb
std
adc
mov
out
mov
fimuls
mov
aad
out
mov
les
sti
test
or
gs
mov
jl
rcr
pop
pop
mov
outsl
jl
push
imul
and
jae
pop
out
stos
jle
fsts
mov
out
cmp
cltd
lcall
and
jge
cmc
mov
sbb
pop
leave
hlt
pop
psubw
mov
mov
mov
scas
test
cwtl
fcoml
out
cmp
scas
cld
insb
pop
lcall
cmp
aas
sbb
into
scas
fisubrs
sbb
mov
sbb
dec
scas
push
adc
sbb
jle
scas
scas
sbb
sarb
pop
sarb
aas
cltd
pop
mov
paddd
cmp
sbb
pop
pop
and
std
mov
scas
call
sbb
setl
or
outsl
packssdw
cwtl
lea
mov
fisubs
mov
jp
sahf
out
cmp
jge
aas
ret
jae
sbb
scas
mov
mov
ds
jg
push
dec
mov
iret
pop
imul
pop
hlt
stc
fidivl
sti
sbb
negb
xor
pop
out
xor
pop
out
dec
shl
das
pop
cld
cmpsb
nopl
sahf
adc
stos
cmp
dec
mov
repz
dec
fcompl
pop
jmp
cld
imul
mov
cld
sbb
jg
lret
or
or
pop
movsb
ljmp
jl
leave
in
ds
imul
pop
mov
sub
test
fidivrs
pop
xchg
fdivr
jge
mov
pop
movsb
jge
jge
jae
mov
mov
lahf
int
jae
jge
cmp
out
ja
int
jae
add
ds
pop
rcr
xchg
aam
push
outsb
popf
ss
cmp
lahf
pop
nop
pop
lods
jo
fcoml
fbstp
out
mov
jge
sbb
fdivrl
inc
fistpll
sbb
or
or
std
leave
insb
cld
mov
dec
je
cmp
je
fistpll
sarl
sbb
mov
fcomip
les
push
pop
pop
lcall
scas
push
xor
sbb
repnz
xor
in
loop
psubw
je
sub
mov
pop
pop
cmp
aas
outsb
cld
fcompl
test
ljmp
pop
in
testb
icebp
pop
je
sub
nop
sbb
xchg
aam
pop
outsb
iret
fidivrs
rcrl
fpatan
mov
sbb
loopne
ja
sub
into
lahf
xor
jae
in
mov
in
rcrl
aas
lods
aas
pop
mov
sahf
ljmp
sbb
filds
into
lahf
shll
xchg
pop
pop
imul
pop
lcall
in
jmp
dec
pop
test
loopne
fistps
ljmp
pop
ja
stc
fistps
lea
cmp
jmp
ljmp
mov
fidivs
in
popf
sahf
push
gs
ljmp
cmp
ljmp
fdivrl
cmpsb
cmp
xor
sbb
cli
fadd
pop
mov
dec
cld
push
push
lods
jg
sahf
xchg
aas
fdivr
insb
fidivrs
mov
test
ss
lods
std
pop
xor
popf
xor
and
mov
popf
jl
mov
loope
push
jle
lcall
fdivr
pop
aas
or
scas
xchg
aam
jg
loopne,pt
fisttpll
jnp
fidivrs
in
jae
fidivrs
cmp
dec
mov
fsubp
jge
mov
cmp
sbb
sbb
jae
ficomps
fnsave
jg
mov
frstor
fnstcw
je
fidivs
push
mov
xchg
jge,pt
mov
fidivs
lods
mov
mov
lock
and
repz
mov
out
lahf
arpl
fsts
mov
fucomip
mov
sbb
out
mov
cmp
mov
cmp
xor
leave
hlt
mov
xor
adc
mov
sahf
call
sbb
je
std
push
push
fidivs
test
aas
mov
out
or
mov
fdivrl
jl
loop
pop
cmp
test
cld
ds
int
jle
hlt
mov
into
push
sub
in
aas
rol
popf
push
mov
imull
sbb
pop
test
sahf
sahf
pop
lret
mov
insb
cmp
inc
push
mov
aam
sbb
mov
aas
jne
and
fnsave
aam
and
pop
xor
stos
je
repnz
ja
out
xor
sbb
in
sub
hlt
add
out
jmp
mov
inc
mov
mov
cmpsl
ja
xlat
out
outsl
rcr
aaa
mov
outsl
fmulp
mov
mov
fsts
popf
mov
in
fldcw
fisubrs
out
add
mov
mov
and
fucomp
lds
mov
mov
inc
mov
adc
lods
sbb
ds
push
loope
fdivrl
dec
mov
cmp
insb
cmp
loopne
fucom
lods
fucom
je
cmp
cmp
cmp
aas
iret
ror
xchg
int
pop
int
daa
int
out
int
mov
push
jle
push
inc
int
push
int
aad
push
popf
int
gs
sub
push
mov
push
dec
int
adc
jae
mov
outsl
jae
aaa
jae
jae
jae
mov
push
ja
mov
in
lds
inc
mov
cmpsl
rcrl
sarb
mov
fpatan
mov
adc
out
xorl
outsb
push
decb
mov
adc
mov
cmp
mov
xchg
jmp
lahf
cltd
fistpll
pop
aad
fdivrp
movsb
pop
mov
jae
mov
aaa
fistps
movsl
pop
out
xor
movsl
pop
out
xor
xchg
mov
mov
cmp
repz
fistpll
std
adc
fidivs
mov
sbb
not
test
mov
mov
scas
mov
mov
shll
push
inc
cltd
fists
jae
and
popf
lahf
sti
mov
sarl
fldt
sahf
in
gs
out
ror
xchg
mov
arpl
cmp
dec
je
sub
pop
aas
or
mov
fsubrl
fidivs
out
stos
jo
fistpll
out
mov
scas
mov
negl
mov
mov
mov
mov
cmp
into
negl
stos
jae
sub
loopne
sarb
sbb
xchg
pop
call
je
and
out
inc
lahf
mov
out
push
cmp
pop
push
aaa
mov
repz
fisttps
out
cmp
in
shr
aas
test
lds
pop
jbe
lods
into
sahf
adc
insl
fdivrp
mov
bound
aad
call
sbb
inc
aas
movhps
call
cltd
jge
pusha
pop
stos
ds
dec
pushf
aad
aaa
pop
fcoml
lods
setb
call
mov
xchg
aas
call
je
and
aas
movsl
push
sub
mov
ds
mov
jmp
mov
insb
cld
fildll
inc
jae
mov
fbstp
mov
jae
sub
push
pop
mov
pop
pop
outsb
jle
jnp
insb
fldl
std
mov
cmp
out
fstpt
mov
sbb
aas
pushf
inc
pop
mov
sbb
pop
push
pop
xchg
mov
adc
hlt
repz
sub
fistps
xor
lahf
fstpt
fnstsw
rcrl
jg
popf
cltd
fidivs
into
push
cli
cmp
jle
into
cmpsb
jge
mov
sub
push
gs
test
xchg
js
popf
ret
out
xor
pop
pop
and
cltd
mov
cmp
or
ss
mov
ficomps
mov
std
cltd
pusha
jge
jno
cmp
pop
push
lds
pop
push
push
pop
jl
outsb
push
inc
ds
fnstsw
bnd
faddl
cmp
fstp
mov
mov
jle
adc
ss
in
mov
jle
loopne
fnstcw
pop
popf
je
jge
lahf
pop
gs
mov
fistps
pop
push
mov
dec
pop
push
aaa
sahf
sbb
ds
ja
fists
pop
jae
xchg
jg
int
push
orl
leave
insb
jle
pop
mov
std
mov
fbstp
mov
pop
cmp
out
nop
js
xchg
xlat
js
adcb
xlat
sbb
repz
pop
and
fisttpll
jmp
loop
jnp
push
hlt
cmp
insb
fldl
int
out
clc
jle
jg
rcr
jg
sti
mov
pop
call
cmp
fstpl
mov
lea
mov
lds
or
outsl
pop
jle
mov
mov
lahf
jp
fistpll
lea
cmpsb
mov
nop
fs
sbb
fstpl
dec
clc
mov
mov
out
negl
pmaxub
inc
mov
mov
vdivpd
gs
mov
cld
aam
aas
movsb
mov
pop
fcompl
cld
test
cmp
pop
test
test
fnsave
loop
ja
out
pop
sti
fstps
lcall
pop
js
jb
jmp
pop
jge
mov
mov
jge
pop
push
popf
pop
mov
inc
fsubl
jmp
xchg
fucom
flds
fadd
mov
loopne
int3
pop
mov
lahf
mov
inc
cltd
pop
je
cmp
xor
loopne
fnstcw
sbb
lahf
push
scas
int
or
push
int
sub
push
dec
push
ror
push
cmpsb
int
jp
push
dec
int
and
push
cmc
int
leave
int
popf
int
jno
fcompl
push
sbbl
je
mov
cmp
cmp
mov
ja
out
jae
fwait
mov
inc
mov
fsts
mov
outsl
ljmp
out
xchg
push
fldenv
push
outsl
cmp
dec
mov
loope
fnstenv
fidivrs
mov
xor
sbb
and
mov
lahf
jo
lahf
cmp
addr16
lret
jns
xchg
mov
and
mov
sarl
inc
mov
sarl
popa
mov
lock
cmpb
mov
ret
jl
pop
inc
mov
mov
mov
dec
pop
push
bound
pop
call
std
pop
inc
fbld
loop
outsb
fimuls
push
ss
sbb
pop
mov
sbb
pop
pop
pushf
leave
insb
aas
or
pop
xchg
fnstsw
sbb
push
xchg
fdivrl
mov
cmp
insb
inc
mov
fstpl
sti
iret
outsb
imul
loopne
fucom
mov
cmp
je
or
je
mov
cmp
cmp
cmp
je
test
cmp
push
gs
mov
fisubrs
iret
scas
pop
shll
ffree
dec
stos
popf
rcrl
pop
shl
sbb
rcrl
push
xor
adc
and
repnz
lahf
test
push
cmp
fsubrp
cld
imul
lcall
out
cld
leave
inc
sahf
cmpps
je
jl,pt
leave
call
in
inc
dec
sahf
aas
dec
aas
outsb
mov
or
fistpll
out
jae
lods
int
aam
fildll
xor
dec
call
outsb
cld
fcompl
pushf
cmp
sbb
xchg
fdivrs
fbstp
dec
ds
imul
fcompl
loop
jnp
insb
popf
inc
jae
mov
fdivl
jle
jae
fildll
dec
inc
jae
mov
aas
lcall
mov
leave
pop
outsb
aas
scas
sahf
test
xchg
imul
jnp
test
fisubrs
mov
pushl
ds
aas
push
pop
pop
cmp
aam
jge
mov
decb
inc
jl
sbb
repz
jge
pop
and
and
mov
dec
inc
nop
decl
idivb
pop
cmpl
mov
addr16
xor
mov
sub
call
cld
or
mov
pop
scas
in
mov
mov
push
int
roll
out
lahf
adc
push
test
xchg
mov
popf
outsb
mov
stc
ds
fists
mov
movsl
pop
xor
je
xor
std
cmp
into
ds
cmp
sbb
jns
and
shr
cmp
and
pop
popf
gs
idivb
push
loopne
pop
js
sbb
test
jmp
fistps
or
out
jle
test
sub
fwait
aaa
mov
cmp
cld
jg
jg
mov
sub
pop
ds
ss
hlt
std
push
xchg
sub
jge
lods
xor
cld
insb
pop
inc
jnp
insb
jle
ds
push
dec
cmp
jg
iret
rcpps
repnz
fdivrl
jle
pop
inc
pop
cs
std
aam
pop
movsb
mov
sahf
pop
pop
aas
outsb
pop
inc
jae
mov
popf
or
adc
xor
call
jb
in
jb
in
xor
mov
ret
xchg
aas
aam
pop
lcall
xorb
mov
sbb
pop
fcompl
mov
outsb
sbb
ds
test
out
repz
insb
mov
mov
lods
ds
xor
mov
and
sbb
cld
mov
aad
lahf
xchg
jmp
jo
cmp
nop
aad
les
and
pop
and
mov
pop
in
pop
and
fiadds
js
and
jg
movsb
pushf
stos
and
pop
jae
and
jg
mov
inc
cmp
inc
mov
sahf
ficomps
jmp
out
in
push
jnp
out
outsb
cld
mul
sub
fdivrl
jle
popf
pop
in
adc
fldl
xchg
mov
lcall
push
sbb
mov
bound
jo
in
push
cmp
mov
jbe
inc
cmp
cmp
je
ljmp
loopne
fucom
inc
fucom
or
loopne
fucom
cltd
fucom
popa
rorl
ds
inc
int
fcompl
aas
jae
mov
cmp
sbb
xchg
pop
in
mov
push
and
aas
cmp
pop
fdivrl
push
dec
pop
xor
mov
aad
int
je
pushl
sub
lods
cmp
sbb
xchg
aam
pop
lcall
mov
sarb
cltd
mov
into
filds
lahf
ljmp
lcall
mov
push
fdivr
test
mov
jae
sbb
push
sbb
ja
cmpsb
fidivrs
xor
pop
scas
out
mov
out
out
arpl
cmp
xor
mov
imull
aaa
mov
pop
xchg
fdivrl
pop
xor
add
xchg
mov
cmp
cmp
in
or
mov
jnp
insb
popf
inc
jnp
insb
cld
inc
jnp
insb
pop
inc
jae
mov
je
pop
fistpll
mov
fistpll
mov
mov
mov
sub
fisttpll
call
leave
insb
sahf
ss
cmp
push
loope
fimuls
fcompl
test
lods
jnp
insb
pop
inc
ds
bt
cld
jmp
pop
arpl
or
jg
sahf
jge
jg
jg
push
jg
jmp
pop
std
cltd
cld
lahf
fistpl
lods
pushf
push
fistpl
sti
cltd
jg
std
add
jge
incl
add
in
sub
in
or
lcall
xchg
sbb
jl
fdivrl
in
in
leave
insb
pushf
setle
insb
dec
paddw
inc
fbld
scas
sbb
xchg
fmull
adc
icebp
and
mov
push
lahf
hlt
mov
icebp
lea
and
lcall
aas
insb
aaa
sti
int
jge
jns
lahf
fmuls
rcrl
out
in
xorl
test
ja
insb
loop
jnp
add
fdivrl
jmp
in
je
sbb
fucomip
dec
std
push
aas
loope
fsubrp
shll
test
fistps
jmp
jge
cmp
in
mov
int3
sbb
dec
and
jmp
and
pop
push
outsl
sbb
pop
pop
movsb
pop
pop
and
in
mov
pop
aas
lcall
arpl
jecxz
jle
insb
mov
insb
inc
mov
pop
loope
mov
pop
fcompl
test
std
fdivrl
repnz
test
pop
fdivrl
pushf
test
mov
mov
pandn
pop
outsb
sbb
fistpll
movsl
dec
pop
push
dec
pop
insb
aas
imull
inc
push
out
std
mov
mov
xchg
fstpl
sbb
xchg
pop
aam
std
insb
lods
movd
outsb
dec
xchg
jmp
pop
xor
fldenv
or
pushf
fldcw
jbe
inc
lods
sahf
push
std
cmp
jl
out
bswap
xchg
sbb
xchg
aas
aam
pop
lcall
xchg
fdivrl
neg
jl
mov
inc
pop
rorl
movsb
repnz
fldl
repnz
pushf
test
adc
inc
mov
mov
dec
cld
pop
iret
fstpt
sti
xchg
aas
call
dec
pextrw
bswap
fdivrp
sub
pop
pop
outsb
pop
outsb
pushf
inc
jnp
inc
mov
int
pop
test
jge
cmp
jle
sbb
test
pushf
jg
ljmp
pop
cld
pop
insb
mov
outsb
sbb
jnp
inc
ffreep
mov
or
fiadds
inc
jnp
insb
popf
inc
jae
mov
into
scas
ret
iret
scas
mov
aas
in
hlt
fildl
mov
rcll
ss
pushl
lcall
insl
mov
ficomps
mov
sahf
outsb
cmp
jnp
je
mov
and
lcall
pusha
cmp
dec
push
ljmp
mov
mov
ret
xor
pop
out
pop
xor
pop
mov
xor
mov
cmp
in
mov
sub
pop
jnp
insb
mov
into
lods
fldt
mov
push
movsl
scas
mov
lock
cmc
mov
jg
pop
jg
cld
jnp
popf
hlt
push
pop
neg
in
dec
cltd
out
sbb
loope
fists
lods
sbb
xor
mov
pop
sub
faddl
mov
lods
sysexit
les
out
push
cltd
cvtps2pi
jge
pop
sti
cmp
mov
lods
ja
insb
out
and
mov
pop
push
movsb
mov
pop
xor
neg
jg
popa
out
jl
fdivrp
mov
mov
fldcw
mov
outsl
out
or
fistpll
fs
out
hlt
dec
ficomps
mov
pop
dec
imul
test
out
cld
dec
fsts
fidivrs
mov
into
neg
dec
mov
outsl
cmpsl
fmulp
mov
ja
out
aam
shr
into
insb
movsb
mov
ja
xor
out
out
sub
ja
out
mov
fnstenv
sbb
and
ja
out
ds
mov
pop
sti
xchg
es
jg
inc
out
mov
fnstcw
mov
inc
mov
aad
int3
aaa
mov
fdivp
mov
sahf
pop
fldcw
iret
ja
dec
out
pushf
fsubp
mov
movsl
int
std
mov
outsl
mov
into
mov
scas
or
stc
pop
mov
outsl
aam
and
mov
outsl
fiadds
out
ja
frstor
outsl
fisubrs
out
aad
fsts
scas
outsl
pop
fidivrs
mov
or
out
jl
mov
outsl
inc
fiadds
out
fnstenvs
ficomps
lahf
xchg
adc
cmp
fildl
or
outsl
inc
fisubrs
scas
ja
out
pop
inc
fnstcw
xlat
ja
push
out
fidivs
pop
mov
outsl
outsb
ficomps
out
cmpsl
push
int3
mov
out
inc
xlat
cmp
push
xchg
cmp
outsb
clc
fldt
mov
jge
lea
fstpt
pop
aaa
pop
sbb
scas
jg
iret
test
insb
mov
pop
jg
push
mov
pop
fistpl
ja
out
cmp
fstp
cmp
pop
mov
push
aad
lods
mov
outsl
inc
ficoms
insl
ja
out
dec
jle
into
mov
outsl
aas
fiadds
jno
dec
out
mov
int
push
fimuls
xchg
out
daa
fstps
ja
jne
mov
les
movsl
fstp
ds
outsl
mov
idivb
mov
fldl
stc
inc
mov
outsl
movsb
fsubrp
mov
lds
mov
out
pop
mov
scas
neg
ss
stc
in
mov
outsl
push
ficomps
out
insb
cmp
add
iret
cmp
fsubp
mov
aad
fnstenv
fiadds
mov
outsl
sahf
mov
lds
and
fidivs
ja
out
pop
fcompp
data16
outsl
aad
test
ja
out
lods
hlt
fnstenv
mov
jbe
fsin
mov
outsl
xchg
iret
fldl
mov
sti
sti
aaa
pop
cmpsb
jl
out
sahf
pop
fsts
mov
outsl
jne
sbb
out
xor
pop
cmpsl
fldenv
daa
outsl
out
xchg
data16
mov
mov
rcr
out
iret
das
fnstenv
mov
outsl
jmp
mov
out
push
fldenv
lea
lds
fldln2
movsl
fstpt
pop
xchg
std
repnz
inc
repz
jp
outsb
in
xchg
mull
inc
ss
sahf
mov
dec
sti
loop
pushf
scas
pop
sub
xlat
repnz
sub
aam
jnp
cmp
push
into
mov
cli
cld
jo
ret
lret
out
dec
es
pop
sub
outsb
loopne
imul
ret
lret
notb
and
sahf
fcoms
subb
divl
and
sbb
inc
pop
sbb
sub
dec
addr16
cld
cmp
cmpsl
iret
fisttps
ss
pop
mov
pop
and
mov
mov
scas
jbe
repnz
inc
cli
sarb
mov
or
lret
fstp
call
xchg
jmp
es
mov
pushf
push
pop
dec
inc
icebp
sbb
pop
sub
sub
push
push
xor
out
inc
out
ljmp
adc
sbb
sti
out
or
jnp
leave
mov
xchg
iret
pushf
mov
cmc
cltd
sti
fsubrp
mov
ljmp
pcmpeqw
add
shll
push
arpl
pop
mull
mov
stos
pop
push
xor
sbb
dec
push
sti
fimull
lods
shll
stos
inc
inc
mov
outsb
rol
stos
ret
out
xchg
int
push
lahf
frstor
int
loop
daa
mov
or
adc
loop
mov
outsl
mov
add
aad
sti
mov
add
loopne
pop
mov
fwait
mov
lods
cwtl
cwtl
pop
das
arpl
mov
test
cmp
aad
fcmove
jnp
inc
push
pop
inc
test
divl
lahf
cmpb
mov
sub
pop
xor
jno
outsl
sahf
es
cmpsb
popf
gs
xor
icebp
lahf
sbb
sbb
pushf
mov
scas
in
cmp
jb
pop
xor
or
std
push
loop
jno
push
fildll
sti
mov
or
xor
xchg
fisubs
jbe
pop
es
mov
sbb
inc
pop
outsb
jns
pop
cmp
cld
mov
dec
sarl
pop
int3
push
jno
fwait
dec
testl
xchg
xlat
jns
jbe
out
push
inc
xor
dec
cmp
jno
sti
ret
jmp
imull
hlt
ljmp
imul
subb
jl
xor
adc
sub
xchg
push
fbstp
test
sbb
stc
fdiv
mov
jp
mov
xor
pop
add
pop
ljmp
jg
sub
pop
jecxz
push
jns
sub
cmp
pop
dec
es
mov
mov
xchg
mull
stos
mov
mov
sbb
out
mov
lods
aas
inc
mov
cmp
outsb
aaa
xor
lods
lods
test
in
add
repz
out
repnz
lds
repnz
lods
mov
dec
mov
cmc
or
outsl
mov
mov
insl
xchg
scas
mov
out
pop
das
dec
ss
jg
shlb
cs
push
xor
outsl
sahf
in
xor
xchg
mov
cmp
or
loopne
adc
mov
sti
lahf
mov
cmpsb
inc
pop
das
xor
popf
icebp
mulb
stos
int3
mov
jge
xchg
jnp
mov
pop
fimull
push
nop
into
cs
xchg
scas
dec
ja
out
ffree
sub
sub
dec
sbb
sbb
in
movsb
mov
push
cmc
je
daa
mov
mov
mov
icebp
cmpsl
sub
insb
neg
fdiv
scas
inc
lds
sahf
pop
loopne
neg
test
lret
out
gs
jbe
fcoms
leave
push
pop
sbb
jnp
adc
hlt
out
dec
jmp
movsb
pushl
push
stos
das
xlat
imull
shll
mov
mov
cmc
movb
fldcw
scas
imul
inc
fisubrs
xchg
rorl
inc
mov
scas
mov
mov
jmp
idiv
push
loopne
scas
sub
push
enter
xlat
in
rcrb
pop
aad
pop
ror
pusha
cmp
mov
mov
dec
gs
mov
xchg
inc
shll
rcr
jl
lds
lods
lea
pop
mov
sbb
add
scas
in
pop
inc
xor
sub
push
outsb
into
mov
cltd
in
repnz
pop
sub
lds
movsl
jbe
dec
cmp
adc
pop
std
aad
mov
in
clc
mov
adc
movsb
push
jbe
insb
dec
jg
dec
bound
inc
jl
pushf
mov
mov
sti
stc
jecxz
data16
bound
jecxz
fnstcw
cli
lret
sahf
gs
add
leave
ja
ficoms
lret
dec
fiadds
mov
pop
mov
xchg
push
lods
mov
dec
mull
and
jge
out
xor
fcmovbe
rorl
cld
imul
mov
lret
mov
into
daa
jb
pop
mov
push
bound
and
mov
out
insl
mov
xchg
int
imul
scas
pop
cltd
fisttps
dec
cmp
dec
jb
pop
cmc
lds
testl
pop
and
outsb
fucomip
fst
aaa
mov
pop
int3
fsubrs
lods
stos
mov
xchg
adc
aaa
mov
lds
dec
sahf
mov
adc
inc
pop
xchg
dec
dec
or
mov
inc
into
aaa
scas
cmc
leave
dec
stos
adc
inc
push
inc
mov
pop
ljmp
arpl
xchg
stos
xchg
daa
sahf
mov
push
shlb
sti
add
cwtl
or
iret
out
cmp
cmpsl
mov
xchg
gs
outsb
dec
fsubrl
and
add
in
add
dec
adcb
push
mov
inc
jbe
sub
cmp
xchg
mov
jb
pop
fidivs
add
daa
aas
stos
das
lods
sti
movsb
jbe
out
push
outsl
sbb
cli
pop
mov
mov
pop
inc
ljmp
fs
push
cli
fdivl
out
arpl
sbb
push
jle
das
jle
push
mov
divl
in
notb
icebp
dec
sbb
outsl
outsl
pop
mov
xchg
nop
test
pop
sub
aaa
sub
cmp
stos
test
jl
iret
cmovge
mov
dec
fidivrs
pop
sub
imul
out
cmpsl
ret
ja
sbb
and
lret
and
jl
cltd
scas
adc
ficoml
into
jl
out
fidivrl
mov
xchg
outsl
mov
outsl
fsub
pop
mov
push
push
xacquire
cmpsl
pop
in
sub
outsb
sub
ficoml
mov
aad
push
pop
mov
mov
lods
or
jne
cltd
xchg
sub
push
aad
fisubrl
xor
stc
pop
sub
sahf
setge
jne
inc
sbb
out
ljmp
mov
inc
cltd
cmp
mov
and
dec
sbb
ja
test
les
jmp
jb
mov
fidivrl
pop
jbe
dec
daa
sub
pop
fisttpll
ds
mov
stos
sub
xchg
negb
sbb
sub
insl
fwait
cmp
outsb
scas
bound
jmp
outsb
mov
mov
jnp
shr
mov
filds
push
mov
cmp
lret
mov
or
in
andl
pop
mov
push
jmp
adc
xorl
mov
xchg
lods
and
loop
bnd
mov
mov
mov
jge
sub
loop
jmp
iret
mov
xchg
ss
sbb
fidivrs
pop
sbb
or
subb
scas
mov
fisubs
mov
or
shlb
xor
jno
jl
movsl
cli
inc
xchg
pop
cmc
jl
aam
sub
jl
jns
fcmovbe
mov
mov
stos
scas
pop
movsl
ja
inc
pop
sub
or
mov
mov
iret
cmp
lret
imul
enter
int3
test
mov
mov
jne
int3
mov
iret
push
mov
jnp
imul
sbb
out
sbb
jno
arpl
and
push
inc
and
push
sub
scas
test
pop
addr16
adc
push
cmp
lahf
aam
decb
aad
mov
sbb
dec
mov
mov
xor
sbb
les
les
into
add
pop
outsb
mov
dec
jge
mov
xor
cmpsb
or
outsb
sub
cltd
aas
inc
and
jns
iret
lods
rcl
mov
mov
pop
imul
shl
xor
mul
fnstenv
sbb
imul
push
into
push
loope
insb
adc
outsl
mov
dec
int
push
es
arpl
in
xlat
daa
ljmp
mov
jp
and
clc
shll
inc
lds
out
xchg
js
ror
repnz
mov
test
jl
out
adc
shlb
mov
push
mov
cmc
dec
insl
add
lods
mov
out
fsubrs
scas
fisubrs
idivl
negb
mov
xor
lods
sbb
lods
xor
cmc
out
fwait
pop
pop
fistps
fistl
data16
jne
pop
out
hlt
dec
add
cmpsb
mov
push
mov
popf
jg
cmpsb
and
mov
fimuls
mov
mov
xor
int3
push
lods
mov
popa
mov
shr
push
fisttpl
mov
xchg
aaa
mov
jl
sbb
lods
jmp
pop
jmp
mov
adc
gs
mov
sarb
adcb
sbb
lods
pop
stos
ds
xor
lods
addr16
fmull
ds
jl
iret
xor
cmp
in
int3
rcl
ret
mov
dec
outsb
cwtl
int
sbb
rolb
pushf
cmp
jbe
into
adc
imul
sbb
pop
xor
sbb
ret
cmp
enterw
mov
mov
sti
add
pusha
mov
jmp
in
inc
mov
fwait
lcall
adc
jecxz
pop
inc
pop
push
xor
clc
fdivp
mov
ja
push
push
imul
stos
stos
mov
clc
jbe
dec
lods
lret
cli
mov
lcall
jae
mov
ja
mov
pop
lea
or
into
inc
pop
int3
idivl
outsb
push
sub
adc
fistpl
sti
pop
and
fsubr
aas
fdivs
sbb
jbe
divl
fstl
jno
pop
cmp
fadds
ret
pop
imul
rcll
sub
arpl
cmp
mov
outsl
sub
xor
pop
mov
data16
mov
dec
push
movsb
push
xchg
lcall
insb
push
dec
pop
mov
inc
out
mov
sti
scas
mov
es
jae
sbb
lret
push
les
out
push
lahf
xor
push
in
scas
or
mov
and
aad
fxch
nop
les
ljmp
clc
pop
ds
dec
cmpsl
mov
sbb
hlt
pop
jnp
push
push
mov
mov
imul
scas
pop
dec
push
in
or
lahf
cltd
scas
mov
out
lods
jmp
movsl
mov
pop
roll
fidivrs
test
imul
subl
xorl
aam
sarl
sbb
ljmp
div
mov
xor
roll
fldcw
mov
subb
sbb
mov
cwtl
lret
outsl
sub
push
mov
pop
or
xor
inc
into
mov
into
mov
mov
or
dec
int3
sbb
fcmovne
flds
mov
test
jecxz
jmp
push
daa
leave
aaa
stc
mov
in
mov
fidivrs
mov
outsl
pop
testb
jl
clc
test
aam
mov
sub
lock
out
xchg
or
sti
mov
out
push
fucomi
push
mov
cmp
pushf
std
jbe
fists
divl
testl
cmp
es
jg
jp
dec
sti
cmp
push
std
aas
and
pop
mov
cmp
mov
mov
cmp
out
fdivrl
pop
jle
jo
fistpl
out
pusha
mov
out
movsb
scas
pop
and
aas
cmp
fbstp
mov
imul
test
jp
in
mov
ret
sahf
or
mov
lahf
fistl
jnp
imul
cmp
ds
ds
xchg
ret
hlt
pop
xchg
sub
jge
clc
xchg
mov
jl
ljmp
out
into
aas
pop
repz
lcall
mov
aam
cmp
mov
fildll
push
clc
jo
adc
shr
les
sbb
cmpb
aam
pop
nop
loopne
push
pop
pop
fwait
mov
and
add
mov
in
cmp
xor
xor
mov
aam
in
clc
cmp
pop
jns
js
fsubrl
repz
cld
jl
enter
rorb
popa
imul
fldt
push
imull
fidivrs
and
mov
xor
jmp
mov
in
pop
jg
test
out
adc
sahf
pop
mov
shr
jg
mov
adc
xor
fdivs
inc
mov
inc
std
sub
aam
mov
add
pop
push
jbe
pop
pop
push
inc
jecxz
rcrb
mov
lcall
xchg
inc
mov
push
cld
inc
movsb
sbb
sub
les
sub
cmp
or
fwait
dec
or
sub
fidivrs
outsl
add
adc
mov
jnp
jne
lret
sti
addps
clc
jl
fists
je
mov
xor
inc
pop
out
mov
pop
push
push
scas
jae
pop
out
scas
push
scas
dec
pop
imul
mov
out
out
mov
push
mov
sti
imul
int
add
xor
das
sub
fimuls
and
aam
outsl
out
out
cs
fistpll
outsl
push
lods
xchg
inc
pop
addr16
fldl
insl
test
and
loopne
mov
out
cmp
in
aam
sub
sub
outsb
sahf
mov
imul
aas
add
pop
lret
mov
dec
and
pop
aas
adc
fildll
addr16
jle
inc
frstor
or
fsubs
push
mov
add
and
scas
or
test
sti
push
fimuls
pop
mov
mov
sbb
jl
push
mov
popf
scas
mov
xor
pop
pop
scas
subb
fisttpll
ja
cmpsb
dec
pop
addr16
mov
sahf
push
testb
scas
pop
push
add
sbb
mov
xor
mov
fldl
in
fistps
adc
fstpt
inc
xchg
pop
jle
sbb
pop
out
dec
fstl
fsubrl
fidivl
faddl
jne
or
lods
pop
pop
sbb
cs
and
fidivrs
adc
call
lods
std
arpl
ljmp
out
and
push
mov
adc
push
lahf
cmp
xlat
sub
scas
sbb
add
push
mov
dec
adc
push
sub
pop
dec
call
dec
mov
jne
sbb
mov
test
je
or
scas
pop
aaa
outsb
pop
es
test
jle
pop
mov
or
dec
into
into
inc
aad
imull
filds
add
neg
adc
xchg
pop
push
ja
mov
stos
mov
jnp
insb
out
mov
out
fstpl
ja
jmp
fucomi
dec
fcomip
outsl
std
fisttps
pop
mul
and
fbld
or
cltd
icebp
xor
xchg
mov
sbb
cmp
jo
loopne
sar
clc
pop
or
mov
dec
dec
push
mov
dec
negl
call
cmp
push
cs
ljmp
aaa
iret
scas
in
stc
iret
cmp
scas
ret
aam
add
outsb
and
xlat
adc
sub
add
mov
mov
lret
adc
test
add
add
pop
fmull
and
imull
add
mul
ja
outsb
sub
js
push
mov
adc
maxps
jge
mov
fbld
xchg
mov
push
test
mov
sbb
data16
mov
cwtl
aaa
clc
jmp
dec
notl
hlt
cltd
clc
xor
jmp
fistps
idivl
sub
lret
push
js
mov
stos
inc
add
fwait
fwait
std
hlt
addb
lea
cmp
testl
push
lods
inc
insl
inc
sti
inc
mov
push
lods
sahf
inc
pop
push
test
push
adc
rorb
fisttpll
mov
mov
ss
popa
sub
out
es
sub
sbb
mov
xor
sbb
test
into
add
sub
dec
subl
inc
ds
mov
xorb
loope
mov
ja
jle
jge
cmpb
cmp
jl
mov
int
lock
adc
outsb
pop
fldt
fisubrs
in
pop
mov
ds
popa
es
pop
adc
shrl
loop
fwait
out
inc
pop
inc
push
pop
mov
js
pop
sub
shrl
in
sub
inc
push
xor
adc
xor
jns
movsb
pushf
and
mov
lock
inc
lahf
pop
lahf
les
cmpsl
and
mov
out
rcll
dec
imul
pop
faddl
enter
and
mov
icebp
shlb
mov
cmp
mov
xor
and
rol
js
dec
pop
add
adc
andb
sahf
pop
jle
jg
cmc
iret
jg
mov
mov
and
jbe
test
leave
iret
cmp
enter
sbb
add
hlt
cli
mov
jb
dec
out
into
leave
dec
adc
jmp
dec
les
jmp
xchg
stc
in
call
outsl
xor
jb
shl
push
ljmp
fistps
scas
add
cmp
mov
sbb
pop
loopne
xor
add
mov
das
cmp
or
pop
idiv
mov
frstor
ucomiss
insl
in
push
cld
testl
subb
sub
mov
jo
ljmp
in
fildll
lret
aas
fwait
aad
loopne
scas
jecxz
stos
scas
mov
cmp
mov
mov
enter
scas
jg
fldt
xchg
ja
mov
mov
xchg
cmpb
jmp
fcoms
rcrl
das
cli
stos
iret
in
jp
sahf
movsl
adc
jl
dec
js,pt
xor
add
jmp
mov
into
cli
scas
lcall
dec
sub
pop
push
mov
jbe
xor
mov
add
push
je
pop
inc
adc
jb
ret
lea
xchg
scas
and
scas
movsb
popa
xor
lmsw
fcoml
sub
and
pop
cmp
mov
fstpt
sbb
cmp
pop
incb
add
mov
jg
mov
fdivrp
out
sub
inc
jge
aam
push
mov
mov
aad
movsl
hlt
add
fsubrs
popf
lock
aas
divb
push
mov
movsb
jg
leave
inc
mov
test
jnp
inc
inc
xor
popa
and
lock
scas
sub
sarb
jnp
rorb
xor
scas
mov
mov
push
ljmp
sbb
mov
popa
mov
mov
adc
lock
add
outsl
xchg
mov
adc
fmulp
lods
aas
mov
dec
hlt
pop
aas
fwait
addr16
lods
jns
adc
xchg
lahf
lahf
mov
ss
mov
aas
dec
pop
mov
mov
std
or
arpl
mov
sub
test
push
inc
movb
xor
dec
or
sbb
add
out
jne
cmpsb
and
filds
add
add
shl
insb
sbbb
mov
in
test
pop
hlt
push
push
mov
jg
movb
push
stos
stos
stos
cmpsl
xor
adc
jle
push
aam
cmpl
sub
testb
push
pop
cmp
out
dec
arpl
jg
jb
push
mov
iret
aas
das
mov
fistpll
aaa
xor
pop
call
out
iret
cli
mov
imulb
mov
sub
es
pop
scas
ljmp
std
push
scas
xchg
add
outsl
push
sahf
inc
push
scas
int3
imul
mov
dec
jno
fnsave
pop
jecxz
dec
bound
scas
add
pop
in
jb
sbb
inc
dec
pop
lret
out
popf
lahf
outsl
sub
repz
jno
jg
push
in
js
xchg
jl
mov
in
dec
scas
lret
or
call
negb
sbb
ror
scas
xlat
dec
mov
cmp
scas
xchg
and
jl
inc
jecxz
push
dec
dec
mov
out
mov
pop
test
jmp
and
popf
clc
stos
cmp
and
mov
and
cmp
shll
std
cmc
outsl
ficoml
std
fistl
jg
push
sbb
scas
iret
lcall
push
jle
lock
rcrl
jmp
xchg
mov
jne
dec
add
xchg
sahf
xchg
aaa
xor
jg
aaa
stos
add
fcmovnbe
and
ss
das
dec
push
in
pop
jle
outsl
aaa
fsubl
cmpsb
cmc
mov
fldl
out
jnp
daa
fildll
mov
lret
out
enterw
out
dec
xchg
mov
lret
outsl
lods
jnp
jnp
das
fildll
jp
mov
out
scas
out
sahf
pop
pop
out
pop
pop
in
dec
xchg
cli
orb
out
in
dec
nop
pop
mov
out
fs
out
pop
leave
lcall
ss
add
sbb
arpl
stos
pop
stos
sbb
add
add
nop
stc
cmp
lcall
out
incb
and
fildll
mov
repz
sti
out
not
mov
outsl
in
icebp
mov
in
out
mov
jecxz
imul
xlat
ffreep
cmp
aas
mov
pop
pop
fistpll
fbld
movsb
cli
iret
test
cs
inc
stos
sti
insb
paddsw
std
ja
repz
push
out
fstps
mov
outsl
cs
mov
dec
pop
mov
outsl
outsb
xchg
jle
fmulp
mov
mov
popf
mov
out
mov
mov
outsl
pmaxub
out
das
cmpsl
fnstcw
mov
outsl
dec
ficomps
out
outsl
xchg
fnstcw
xchg
outsl
lahf
mov
scas
mov
inc
cmp
out
iret
jg
fbstp
ja
out
jae
or
stc
outsl
mov
outsl
imul
mov
arpl
mov
outsl
pop
ficomps
push
mov
outsl
dec
mov
inc
cld
fnstcw
mov
outsl
cmp
sbb
out
xor
outsl
sub
pop
mov
and
out
lea
jb
bound
push
push
jmp
dec
inc
cmp
sub
and
ljmp
test
xlat
jmp
xchg
mov
jb
push
xor
pop
push
dec
and
ds
adc
outsl
imul
lahf
jmp
xchg
xchg
dec
cmp
pushl
inc
push
xchg
aas
and
dec
xor
inc
pop
pop
jg
jmp
bound
call
ss
jp
push
lahf
fwait
xchg
xchg
mov
ja
adc
loope
testl
xchg
cli
adc
out
jnp
sti
std
es
xchg
inc
repz
lods
divl
aam
out
jmp
out
mov
jecxz
fildll
mov
xlat
xlat
call
cmpl
sar
or
pop
mov
dec
mov
add
push
insb
inc
cmp
mov
ret
std
iret
mov
mov
scas
jnp
xchg
lock
mov
loop
divl
fwait
mov
lahf
jae
fstpt
jnp
cmpsl
std
jbe
mov
xchg
jmp
push
aaa
fwait
aas
lahf
xor
or
iret
xchg
mov
loop
mov
mov
outsl
insl
imull
scas
jae
testl
jg
xlat
jnp
dec
jmp
in
inc
ja
scas
divl
mov
mov
outsl
std
mov
or
sbbl
arpl
outsl
out
inc
arpl
outsb
aaa
dec
sub
pop
cvtdq2ps
negl
jae
mov
aaa
iret
sub
sub
neg
jnp
push
sbb
dec
push
repnz
xor
comiss
pop
testl
loope
jae
aas
scas
fwait
popa
idivl
repnz
xor
call
not
das
std
mov
aaa
sub
inc
imull
jg
dec
testl
std
pop
push
xlat
lods
mov
jo
pop
pop
and
xchg
pop
stos
scas
divl
mul
movq
or
pop
sbb
mov
imull
rcl
std
out
testb
dec
mov
neg
jecxz
sbb
sub
neg
lahf
es
orl
fwait
sbb
mov
negl
fwait
imull
div
iret
jnp
xchg
jp
std
lods
lret
xchg
testl
fbstp
negl
std
out
lret
jns
fwait
ret
mov
or
hlt
mov
das
neg
pop
outsb
push
adc
push
push
loope
mov
aaa
insl
imull
pop
ss
xchg
fcoml
fcompl
aam
jae
fwait
cmpsb
mov
ja
loope
fwait
xchg
jg
sbb
mov
into
mov
insb
and
mov
iret
in
das
mov
xlat
in
cmpb
push
repnz
mov
mov
std
iret
fnsave
aaa
test
neg
ret
daa
mov
mov
imul
bound
xor
out
pop
es
cs
jno
pop
out
push
fbstp
dec
ret
dec
std
dec
vmaskmovdqu
shl
imul
pop
push
idivl
std
add
std
cmp
int3
stos
xor
fldcw
adc
addr16
jmp
and
es
mov
cmpsl
subb
pop
arpl
mull
jnp
sbb
jmp
push
jae
in
lods
or
not
push
xchg
call
loope
or
fucomip
push
xlat
aaa
mul
add
jnp
out
stc
xor
icebp
out
xchg
shl
jnp
xlat
in
std
ffreep
aam
imull
pop
jmp
mov
xor
fwait
loope
aas
pop
idivl
das
shll
mov
dec
pop
fnstsw
aaa
fdivp
aad
scas
sub
jnp
shll
push
xlat
lods
xchg
divl
leave
lahf
xchg
sub
mov
inc
lds
rcr
cmp
aam
jg
mov
aaa
iret
fwait
jmp
stos
sbb
sbb
fsubrl
out
icebp
lods
std
test
sbb
cmp
fsubl
testb
push
sbb
mov
clc
mov
mov
test
push
fdivrl
mov
test
xchg
std
repnz
cmp
jnp
idivl
out
movzbl
mov
jge
out
idivl
jne
imul
div
cmpl
insl
call
imul
lret
mov
std
mov
push
and
loope
arpl
inc
xor
mov
push
mov
out
mul
mov
pop
sbb
xchg
idiv
xlat
jnp
std
inc
push
cmp
cmpsb
xchg
divl
xor
lahf
jnp
out
outsl
bound
andl
daa
inc
aaa
sub
jp
fildll
std
and
xor
xor
xchg
inc
jnp
lahf
and
jmp
sbb
cmpsl
aam
sub
loop
out
mov
bnd
xchg
mov
sarl
out
adc
or
stos
mov
daa
ret
jmp
dec
cltd
notl
inc
fnstcw
sarl
inc
add
add
cld
mov
and
jecxz
std
lock
iret
loopne
loopne
pusha
in
mov
mul
fdivrl
fsubrs
not
push
std
int3
cmpsl
call
out
pop
cmp
xor
mov
idivl
push
divl
mov
lods
jg
mov
scas
push
negl
mov
adc
push
stos
iret
mov
pushf
mov
negl
mov
fmull
xchg
fwait
daa
or
jmp
mov
mov
in
sub
nop
dec
lret
xchg
gs
lahf
jae
leave
jae
pop
mov
cmpl
mov
enter
notl
es
popa
imull
jl
std
js
mov
idivl
divb
test
insb
std
push
or
out
pusha
scas
pop
fistps
lret
testl
jns
mov
jae
mov
jmp
std
inc
dec
mov
insl
mov
cmp
lahf
fsubr
push
mov
aaa
jb
pop
sub
jnp
daa
xorl
sub
scas
pop
and
and
push
mov
dec
mov
and
cmp
neg
out
stos
and
xlat
subl
mov
not
sbb
stos
adc
filds
jae
fwait
idivl
push
test
push
cmpsl
repnz
jnp
sbb
fmull
push
out
lahf
or
lret
aaa
or
popa
push
sub
add
jnp
imul
xchg
xchg
rol
stc
lret
lahf
enter
xchg
test
bnd
mull
call
fwait
lahf
out
ja
mov
das
inc
out
lods
testl
fistpl
xorl
jge
negl
fisttps
leave
fwait
shl
xor
stc
iret
push
stc
lret
mov
lods
mov
mov
sbb
cmp
fsubl
pop
stos
stc
push
maskmovq
testl
mov
out
mov
lahf
mov
push
push
idivl
out
scas
cmpsb
aaa
imull
xchg
fwait
pop
mull
xchg
stc
jno
push
negb
jae
mov
xchg
scas
inc
sbbl
testl
fdivrl
out
pop
cmp
neg
arpl
sbb
pop
mov
mulb
jno
push
cmp
pop
push
imul
push
push
imull
aas
cli
arpl
divl
sbb
jnp
xchg
pop
pop
sbb
push
push
out
xchg
lahf
in
push
mov
negl
jae
mov
xor
jg
xorl
dec
dec
inc
pop
inc
dec
sti
mov
test
xchg
imul
das
je
idivl
out
popf
das
jae
fisttpl
add
fwait
adc
xchg
sub
push
testl
and
ljmp
mov
push
iret
cmpsb
mov
and
jg
negl
stc
inc
lahf
outsl
das
scas
mov
or
pop
xlat
mov
test
imul
aaa
sub
pop
stc
fistpll
lods
daa
pop
div
dec
mov
out
stc
fisttps
ljmp
dec
sbb
mov
mov
idivl
inc
sti
jecxz
and
daa
mov
dec
xchg
clc
sub
stc
cmp
jae
repz
out
daa
fldt
insb
push
xchg
cmc
jbe
fcompl
jo
cmp
fmulp
xchg
fidivl
daa
cmp
jae
rcrb
mov
adc
jmp
iret
pop
add
out
dec
das
hlt
das
lock
jg,pn
lods
add
lret
and
dec
xchg
sarl
push
into
ret
inc
lock
jmp
pop
outsb
mov
lahf
out
mov
popf
dec
pop
shll
test
orl
sbb
push
add
hlt
fmul
shl
xlat
in
adc
and
dec
mov
push
sub
jmp
sbb
xchg
psllq
fistl
xchg
ret
jge
pop
out
fildll
scas
shll
inc
cmp
stc
jecxz
js
mov
xor
iret
imul
ja
mov
ret
aas
jecxz
xchg
mov
dec
mov
das
sti
fistpl
negl
popf
ret
dec
es
fiadds
push
fwait
push
fists
fnsave
mov
cli
cli
aaa
pop
iret
jge
fsubrl
lahf
push
int3
mov
out
repz
out
jecxz
rcll
mov
dec
xor
pop
jg
aas
sub
mov
scas
repz
out
add
ret
jp
repz
mov
xchg
jno
cs
mov
xlat
out
fmul
lret
outsl
mov
pop
mov
repz
xchg
jmp
mov
mov
sbb
cs
dec
mulb
js
jae
rorb
adc
mov
incl
int
repz
movsl
sub
in
push
dec
ficomps
dec
fidivrl
inc
pop
lea
pop
lahf
mov
aad
out
pop
xlat
jbe
sub
lret
sbb
jo
xchg
mov
lahf
sahf
fsubp
scas
and
lret
jne
cli
jbe
outsb
cmpsb
and
stos
dec
jbe
jecxz
outsb
jecxz
inc
fistpl
fucomip
inc
mov
mov
shll
push
pop
push
pop
out
pushf
pop
repz
je
iret
sub
lea
inc
stos
mov
mov
inc
cli
pop
loop
pop
cmpsb
and
out
jecxz
repz
fwait
xor
push
jle
daa
in
outsl
fistps
jbe
mov
inc
repz
fisttps
clc
mov
sahf
adc
idivl
outsl
sbb
lcall
jg
outsb
or
pop
xchg
mov
inc
outsl
ud2
addr16
push
mov
sti
sub
jg
fists
jle
scas
daa
mov
mulb
fidivrl
ljmp
xchg
fcomip
cmpsl
addr16
mov
pop
mov
dec
out
in
ret
jge
roll
neg
lcall
mov
cmc
hlt
test
fstl
insl
addr16
jg
pop
out
jnp
jns
mov
out
arpl
push
ficomps
mov
cmp
arpl
mov
in
jbe
into
and
iret
das
push
insl
mov
push
jge
or
pop
fstpt
outsb
movsb
fcompl
xchg
stos
push
cs
lret
mov
jg
das
out
iret
mov
push
int
dec
lahf
fildll
or
loopne
aaa
ret
cld
inc
leave
outsl
cs
scas
xchg
sub
mov
pop
out
scas
outsb
jno
addr16
push
in
out
cmp
pushf
xchg
and
dec
loope
aam
cmc
out
jmp
fnstenv
xchg
fldt
incl
push
inc
fnstcw
jg
out
fimuls
fpatan
adc
cld
stos
lock
fisttps
scas
adc
cmp
lret
lahf
cmc
push
stc
mov
jmp
jle
jecxz
jg
pop
lcall
fwait
popf
mov
lods
fisubrs
out
int3
in
insl
cmp
mov
cmpsl
aas
cmpsl
dec
fistpll
mov
pop
push
call
sbb
push
pushf
mov
xchg
cld
mov
mov
xchg
inc
push
sub
cmp
inc
jecxz
out
test
inc
fisubs
adc
sti
int
fists
les
xchg
jg
pop
negl
xchg
sti
jl
stos
lahf
jge
fsubrl
outsb
idivl
and
mov
lret
xor
adc
push
sbb
push
xchg
push
mov
xlat
pop
cmp
stc
popf
into
jns
out
jnp
push
in
je
jns
jae
cmp
aad
inc
xor
cltd
inc
mov
lret
sub
dec
mov
cld
mov
arpl
pop
xlat
mov
mov
jmp
mov
cmp
dec
fmuls
stc
iret
outsl
mov
push
inc
dec
outsb
sub
sub
cmp
cmp
fwait
int
outsl
stos
jne
push
push
gs
out
decb
push
sahf
and
pushf
scas
rep
sahf
out
lcall
fadd
das
push
stc
sbb
push
shl
frstor
pop
mov
inc
mov
ljmp
cmp
mov
cmc
pop
jbe
fstps
clc
ja
stc
sub
popf
fbstp
jg
push
sub
jg
popf
inc
shrb
ds
scas
mov
push
mov
adc
mov
mov
and
lods
insl
in
out
fldt
pop
sbb
mov
aaa
sbb
or
adc
lahf
sti
cmp
lahf
shr
rol
iret
pop
jl
test
cmp
push
cltd
outsb
xchg
jmp
jne
scas
adc
or
gs
test
push
in
iret
mov
in
loope
xchg
cmpsl
sti
fwait
cmp
xchg
mov
popf
insb
fisubs
data16
pop
imul
mov
fwait
inc
xchg
xchg
daa
pop
xchg
out
or
sahf
sti
xchg
scas
sub
cmp
push
idivw
mov
fsubrs
movsb
inc
jbe
aad
in
mov
mov
fldt
icebp
in
jecxz
mov
fmull
jnp
jp
pop
dec
cli
jge
mov
xchg
popf
push
dec
adc
xlat
outsl
out
xlat
jnp
into
mov
addr16
fisubs
push
outsb
fisttpl
shlb
fisubs
dec
es
adc
xchg
jg
push
ret
dec
outsl
es
mov
dec
dec
sub
out
fisttpl
sub
sbb
aad
divl
cmpsb
push
in
lods
add
inc
scas
ds
ja
mov
lret
pop
mov
shrl
stc
imul
fwait
ja
lahf
mov
jge
popl
jae
scas
jae
mov
xchg
scas
xor
push
stc
or
sub
in
dec
arpl
mov
lret
movq
outsl
cmp
jmp
dec
sbb
jbe
mov
out
ficomps
movsl
lret
je
testb
mov
mov
ret
daa
aas
jb
jbe
iret
fdivrs
dec
jle
imulb
jnp
les
pop
dec
sar
sub
hlt
xchg
and
xchg
jle
mov
jbe
jbe
testb
sub
icebp
inc
push
mov
mov
add
test
mov
mov
mov
es
jg
imul
mov
xchg
mov
push
out
in
cmp
lds
pop
ficoms
aas
jbe
lods
stc
lods
repz
sub
push
push
mov
test
popf
add
add
mov
jmp
lods
pop
ja
in
mov
mov
loope
push
gs
dec
mov
stc
push
sub
ljmp
out
mov
addr16
outsl
inc
addr16
outsl
inc
lret
popf
stc
mov
dec
pop
std
stos
movsl
daa
adc
mov
dec
std
cltd
stc
xchg
stos
dec
int
popf
xlat
lcall
aas
jecxz
jnp
adc
dec
in
pop
jns
mov
jp
push
mov
iret
dec
add
pop
ss
mov
lock
xchg
fidivs
into
cmpsl
fsubrp
cli
in
jp
or
cli
in
stos
fsubrl
outsl
outsl
in
xor
outsb
scas
dec
cmc
and
shl
mov
daa
cmpsl
lret
cmc
adc
pop
hlt
xchg
pop
setne
insl
xlat
pop
int3
jecxz
lea
sub
insl
insb
std
fcmovu
ffree
lea
jne
mov
movsb
mov
sub
mov
jbe
fsubr
xchg
arpl
fistps
xchg
in
cmp
iret
push
fdivrs
fildl
cmpsl
push
xchg
pop
push
mov
ja
leave
jbe
jle
sti
pop
mov
xlat
sahf
push
push
shrb
and
in
xchg
pop
in
jle
out
cmp
movl
pop
xchg
inc
sti
inc
das
jmp
scas
sub
cld
jae
jge
in
das
movsb
aas
cld
icebp
insb
dec
std
lea
pop
cmc
push
jmp
mov
cmc
bnd
insb
pop
iret
mov
pop
jecxz
inc
mov
ds
aaa
in
popf
test
repz
sub
mov
xchg
pop
mov
mov
lods
push
in
pushf
outsb
dec
sbb
lock
mov
lods
std
ss
push
jne
mov
cmc
aad
mov
cld
jg
into
jge
xchg
and
mov
insl
testb
out
test
xchg
cmp
xchg
repz
fbld
scas
mov
aas
pop
lea
mov
ret
in
iret
mov
and
sub
mov
cmp
notb
fbstp
dec
mov
out
imul
ror
xlat
xchg
pop
outsl
jg,pn
mov
paddsw
cmc
cmp
shlw
mov
xchg
add
mov
fldcw
mov
inc
test
jecxz
jnp
sub
stos
lds
xor
xor
aas
cs
outsl
leave
data16
imul
popa
dec
insl
jle
add
mov
pop
outsl
mov
stc
outsb
xchg
lret
fwait
pop
mov
int
mov
fistps
mov
pop
mov
push
jnp
adc
mov
es
sbb
sti
in
mov
mov
dec
dec
inc
mov
jne
pop
vhsubps
push
cli
out
je
inc
jnp
lea
outsb
inc
arpl
stos
aaa
scas
mov
fucomip
sti
dec
stc
mov
sti
sub
mov
lcall
das
sbb
cmp
mov
aaa
imul
addr16
ja
out
mov
scas
clc
mov
dec
lret
dec
fistpll
pop
out
dec
mov
cmc
xor
or
push
lods
scas
int
pop
jae
xlat
dec
jmp
sub
les
mov
pop
inc
fdiv
xchg
fists
cli
mov
jl
es
mov
inc
or
gs
mov
aaa
into
inc
out
sub
adc
push
inc
repz
jae
fstp
inc
dec
dec
xchg
into
sub
imul
mov
jmp
inc
stc
mov
mov
addr16
push
rcl
aaa
ja
pop
mov
mov
daa
lods
scas
xchg
movsl
mov
adc
push
sub
cmp
inc
lock
cmp
xor
lcall
pop
lahf
in
stos
xchg
and
ds
jns
fildll
fisttps
dec
cmp
mov
into
mov
dec
sub
inc
mov
jle
xchg
popf
test
addr16
dec
and
je
shl
cmp
mov
iret
das
jno
lcall
mov
stos
mov
dec
jp
jmp
sbb
andb
and
push
xor
adc
out
dec
mov
mov
push
mov
aad
cmc
mov
pusha
pop
shlb
jbe
jbe
xchg
sub
jp
pop
and
sub
sub
xor
inc
movsb
insl
stc
int
and
xor
mov
test
sbb
out
fbstp
cmc
push
repz
aas
push
cld
sub
inc
out
sbb
fsubl
pop
fwait
popf
fisttpl
out
into
arpl
aam
stos
push
dec
imul
sub
out
adc
jbe
ret
addr16
dec
outsl
jp
insl
pop
jge
std
aam
adc
daa
xchg
or
adc
aam
outsl
xor
into
adcl
dec
jle
or
into
incb
lods
out
outsb
sahf
aas
mov
lahf
inc
mov
jae
out
in
cmc
mov
xchg
mov
mov
xchg
inc
mov
mov
fidivs
xchg
clc
mov
in
pop
out
in
push
fnsave
idivb
adc
mov
in
movsl
scas
mov
daa
push
fiaddl
lock
pop
das
dec
fcmovnbe
pop
in
sbb
sbb
out
add
xchg
in
sub
clc
cmp
lret
push
dec
notb
fwait
pop
in
int
ds
jnp
sub
jge
repz
movsb
mov
push
mov
je
rcr
cli
mov
and
cmpsl
cld
in
or
pop
push
push
mov
mov
subl
int
jl
mov
arpl
lock
int
fwait
cmp
daa
mov
push
in
cmpsl
sub
cmpsl
scas
loopne
push
lods
cltd
call
fisttps
ss
lods
add
call
clc
fists
or
in
lcall
loopne
cltd
popf
stos
pop
pop
cmp
and
lea
ror
call
mov
je
fcomps
jp
xlat
jnp
jp
inc
mov
aaa
push
mov
inc
divb
int
into
stos
lea
push
sarb
sub
je
mov
mov
outsl
pop
mov
or
incb
addr16
mov
pop
out
addr16
packsswb
xchg
pop
mov
dec
pushf
cmpsl
mov
lods
sahf
fnstenv
in
subb
xchg
lods
fs
lahf
arpl
lock
inc
lahf
stos
ss
cmpsl
hlt
int
push
iret
fnstenv
lds
xlat
jne
aaa
pop
mov
xchg
sbb
jle
mov
ja
test
stc
sub
pop
test
adc
lahf
negl
ds
cmc
dec
pop
mov
push
or
sub
xchg
inc
or
gs
aam
popf
cmp
push
cmpsl
sbb
mov
in
out
fwait
xor
dec
jmp
sub
rorl
mov
js
int3
dec
sub
out
mov
aas
jmp
xor
addr16
add
pop
or
pop
jmp
ss
pop
stos
pop
lods
cmp
sbb
lods
jle
fisttps
enter
lods
std
loope
outsl
mov
and
jg
shlb
call
rcr
sti
jle
sar
fdivrs
jns
jg
iret
push
pop
pop
pop
cmp
pop
jbe
out
outsl
std
insl
test
mov
lret
mov
stos
cmp
test
dec
cmpl
mov
outsl
dec
sbb
mov
shrb
adc
les
mul
push
pop
and
push
insl
sbb
aam
imul
dec
iret
xchg
inc
mov
rorb
aam
mov
cmpsl
jnp
mov
mov
mov
repz
sub
mov
mov
test
pop
pop
jle
cmp
out
cmpsl
fstl
aas
jns
sbb
aaa
rcrl
jp
cmp
dec
fwait
iret
stos
push
mov
int3
xchg
icebp
pop
in
ret
cmpsb
hlt
mov
repz
mov
outsl
mov
cmp
outsl
pop
out
jg
dec
mov
dec
imul
sbb
cmp
addr16
jp
mov
inc
out
add
fwait
mov
in
cmc
lods
push
sbb
push
lret
and
xchg
sub
dec
cs
iret
dec
into
vphadduwd
cli
in
dec
mov
fdivrp
lretw
pop
mov
push
cs
scas
dec
lods
shl
push
push
jl
mov
push
cli
inc
das
xchg
test
dec
mov
out
or
out
imull
dec
dec
mov
hlt
ret
outsl
movsl
xchg
sub
lods
scas
fwait
aam
insb
daa
scas
mov
movsl
mov
xchg
popf
js
push
lods
adc
je
push
hlt
inc
lret
sub
sbb
add
mov
ljmp
jno
fsubrp
lods
mov
fwait
jae
out
and
mov
popl
mov
inc
xchg
roll
mov
cmpsb
jns
jg
iret
sbb
mov
ds
jne
in
fcomip
dec
push
fisubs
sahf
sahf
aas
enter
lods
sbb
or
cli
int
dec
test
cmpsb
mov
sahf
popf
aas
cs
inc
lret
xchg
stc
fstpt
mov
imul
jbe
ja
xchg
lret
out
outsb
or
lds
mov
testb
pop
push
cmp
dec
mov
pop
cmp
das
insl
mov
cli
test
pop
jecxz
push
dec
xlat
xor
jge
or
push
push
cmpsb
mov
xchg
ljmp
stos
insb
sub
das
rcrl
sbb
popf
rorl
cmp
sub
xchg
into
outsl
pop
xchg
sbb
test
gs
mov
xchg
push
lods
sub
mov
xchg
mov
aam
jbe
ds
sub
cmpsl
btr
mov
cmp
push
ds
xlat
std
adc
inc
cld
push
aaa
iret
mov
jne
lods
repz
pop
or
lds
divl
xlat
daa
std
adc
imul
fstpl
pop
addr16
push
scas
iret
shll
lea
xor
in
pop
fisttpl
aaa
pop
pushf
mov
lock
or
cmc
lods
cmpsl
mov
in
outsl
sbb
push
xchg
dec
sbb
sbb
cmp
xor
push
cmpsl
dec
in
outsl
shrl
das
xor
jge
frstor
xchg
mov
sahf
test
in
mov
inc
jle
into
rorl
daa
out
aaa
sti
push
mov
stc
mov
lods
aas
xchg
lea
test
push
cmp
fistpl
repnz
test
xor
sub
inc
xchg
xchg
push
fistpll
xchg
jnp
gs
or
fwait
orl
dec
push
cmpsl
push
imul
and
mov
out
std
fadds
mov
mov
outsb
daa
and
pop
sti
pop
jnp,pn
cmp
loopne
add
scas
fwait
pop
outsl
movsb
fwait
cmp
out
movsb
iret
cmp
out
sbb
cmp
insl
sub
pop
fists
out
imul
xor
and
es
push
mov
out
repnz
cmp
shrl
iret
cmp
dec
fstpt
pop
insl
icebp
out
fisttps
sub
inc
cmpsl
aam
aaa
inc
or
add
mov
ss
lret
jns
out
shl
das
fcmovu
iret
mov
sbb
cmpsb
cmp
daa
jmp
insl
out
ret
arpl
and
lret
fimull
push
in
lret
sub
jnp
ret
rorb
stos
lahf
xchg
xchg
in
mov
xchg
iret
mov
inc
lret
imul
int
stos
jae
push
lret
mov
and
inc
iret
fisubrs
jg
xchg
insl
mov
aaa
xchg
lret
sub
out
imul
jae
add
lret
cmpl
lret
dec
lret
jne
aaa
daa
lret
lods
pop
das
iret
xchg
daa
jmp
lret
xor
jnp
jbe
outsl
iret
and
xor
mov
jecxz
ds
cmc
out
mov
sti
sub
testl
and
push
mov
mov
dec
int
lret
aas
xchg
outsb
lret
add
jg
or
in
in
inc
sahf
lret
jge
test
aad
jo
push
test
sbb
lret
fwait
mov
jecxz
fmull
add
scas
in
rcrl
mov
cmc
sub
js
out
popf
ror
fdivrl
cmpsl
aas
adc
movsl
and
stos
mov
flds
and
mov
jne
jge
into
stc
aas
out
mov
mov
out
fwait
push
lahf
jno
push
or
arpl
push
push
jmp
push
divb
ja
idivb
xchg
decb
and
sub
ljmp
out
mov
mov
mov
jmp
xor
pop
jge
pop
in
fwait
push
and
jmp
sbb
rolb
into
add
arpl
xchg
inc
jg
lret
or
sub
cmp
out
out
rorl
adc
pop
lods
movsl
xchg
idivb
xchg
fisttps
xor
mov
push
sub
cmp
xchg
lret
push
xrelease
and
cmp
mov
in
mov
push
jp
aas
iret
dec
fcmovnu
sbb
ss
jae
in
dec
xchg
test
jg
push
mov
out
xchg
or
push
xchg
pop
lret
sub
or
inc
sahf
adc
arpl
push
lret
inc
xchg
cmp
sti
lret
jnp
iret
and
aad
push
jmp
pop
ja
dec
sub
sub
cmpsb
in
iret
push
scas
in
div
into
movsl
xor
sub
xchg
js
popa
lret
sahf
sbb
lret
movsl
mov
daa
andb
xchg
pop
lret
jne
mov
fnstsw
pop
jp
fbstp
cs
ja
das
out
sub
jne
ss
out
mov
pop
rol
lahf
xchg
mov
iret
stos
dec
mov
ja
movsl
mov
in
push
ret
aad
xchg
ja
jae
arpl
mov
fisubrs
ja
neg
iret
stos
inc
daa
into
lea
or
aam
and
sub
out
sti
pop
mov
and
push
cmp
xchg
adc
dec
lret
mov
inc
fildll
cmp
mov
addr16
fistps
mov
push
or
fnstenv
test
repnz
into
fwait
mov
fcomip
scas
out
iret
and
call
pushf
hlt
outsb
out
jae
popa
cmp
out
fisubrs
lods
mov
adcl
subl
imul
dec
stos
lret
iret
ja
mov
aad
mov
xchg
mov
sub
pop
or
or
fdivrs
and
loop
pop
fisubl
gs
mov
xchg
or
jbe
push
insb
add
and
mov
jbe
testl
pop
dec
xor
insb
sub
sub
push
jge
push
cmp
push
aad
add
xchg
sbb
pop
jmp
mov
lahf
mov
mov
outsl
xchg
mov
call
insb
outsl
test
jp
jbe
xlat
inc
mov
pop
inc
mov
lods
aaa
push
arpl
test
shrb
mulb
mov
inc
arpl
inc
fstp
mov
pop
insb
fnstenv
int3
iret
xchg
pop
mov
push
scas
mov
in
out
scas
jg
testl
push
std
aad
clc
lods
jecxz
jne
mov
mov
inc
or
mov
xchg
imul
dec
mulb
pop
rep
lret
push
dec
jg
int
out
dec
fisubs
jbe
sti
sbb
sub
jmp
cmp
push
outsl
xor
dec
jns
push
pop
xor
lret
jecxz
out
mov
mov
int
dec
lds
mov
insl
jno
es
pop
fwait
in
cmc
push
sbb
and
outsl
arpl
das
addr16
in
cmp
mov
mov
sbb
data16
mov
jae
or
mov
imull
ljmp
rorb
imul
scas
lods
scas
aam
push
jns
das
jnp
jae
dec
sub
out
filds
call
lods
mov
mov
lahf
sub
lea
arpl
inc
sbb
xchg
pop
mov
push
sub
mov
push
divl
inc
mov
jbe
ffree
pop
dec
test
mov
movsb
sub
xor
sbb
pushf
in
sub
aam
mov
or
in
es
sub
jp
fwait
ja
inc
mov
out
push
rcl
xor
inc
fildl
mov
and
lods
out
cli
fcomi
pop
jg
mov
inc
js
lahf
mov
and
ss
ljmp
scas
incb
sbb
xor
jb
push
outsl
ficomps
mov
pop
push
aad
jp
fucomi
inc
fldcw
outsw
dec
fidivrs
mov
jb
fistl
lods
push
sbbb
scas
in
std
stos
sti
adc
inc
jl
repz
shlb
inc
and
jg
sbb
inc
or
imul
push
cmp
adc
add
push
sti
fistpll
jl
dec
fbstp
mov
mov
iret
mov
inc
mov
divl
subb
pop
daa
enter
dec
lods
insl
cld
xchg
std
mov
or
mov
fisttpl
mov
fdivrs
sub
mov
iret
lret
out
fmulp
xchg
fs
jmp
inc
sub
xchg
dec
sahf
inc
cmp
push
jns
ret
push
loope
mov
mov
xlat
mov
ja
out
mov
pop
outsl
aas
ficomps
jg
lahf
adc
sbb
ja
out
pop
jl
pushf
mov
outsl
cld
mov
pop
jge
lea
mov
out
in
std
mov
outsl
fidivrs
mov
sahf
add
mov
pop
rorl
fstpl
mov
lods
or
ficomps
out
outsb
fldcw
fisubrs
scas
ja
jg
out
insb
lods
fldlg2
mov
outsl
cmp
mov
fcomi
ja
out
out
ljmp
mov
into
lret
mov
outsl
mov
ja
out
scas
stos
fldenv
ficomps
cmp
push
lcall
and
dec
sbb
adc
fstpt
fidivs
mov
sub
fldenv
mov
outsl
sbb
push
xor
push
shrl
sbb
inc
mov
iret
adc
push
shrl
sbb
inc
mov
fiadds
call
fiaddl
pop
or
in
mov
pop
push
dec
out
cmp
cmpsb
mov
push
sbb
jae
insb
and
daa
sarl
xor
aaa
sbb
scas
or
hlt
test
js
xor
popa
inc
sbb
popa
inc
scas
jno
xlat
adcl
test
popa
shll
shr
add
sbb
fistps
jae
mov
xor
aaa
adc
inc
out
cmpb
les
and
subl
lcall
cmpsb
fsubrl
sbb
mov
fmul
insb
into
rcrb
fcmovb
loop
jae
mov
out
and
jno
les
pop
lods
mov
scas
mov
imul
add
out
jns
adc
pop
push
inc
subl
sbb
mov
mov
sbb
jecxz
mov
pop
ljmp
movsb
sbb
in
dec
cwtl
pop
dec
imul
pop
inc
arpl
imul
and
aas
inc
dec
imul
jge
jge
jecxz
popf
fnstsw
fisttpl
fimuls
pop
inc
stos
sub
ja
or
ljmp
jns
sub
xor
push
scas
add
repz
mov
or
decb
adc
mov
ja
out
pop
and
popf
mov
outsl
in
fisubrs
mov
scas
xor
out
mov
outsl
das
fidivrs
mov
mov
inc
mov
xchg
out
dec
push
outsl
push
fidivrs
out
pop
out
fstps
xchg
mull
mov
ja
out
outsb
insb
fstps
fidivs
ja
out
iret
jl
pop
lcall
fisubrs
out
mov
fsts
fisubrs
mov
pushf
iret
fldenv
movsb
outsl
test
dec
ja
out
lea
outsl
push
fidivrs
out
scas
rcr
mov
outsl
outsl
fmulp
add
mov
outsl
aam
insl
mov
fsubr
fchs
mov
outsl
in
sahf
mov
in
dec
f2xm1
mov
les
jnp
clc
scas
fdivrl
add
cmpsb
out
add
fsubrl
fisubrs
out
adc
push
outsl
sbb
ja
out
and
fstps
outsl
pushf
fidivs
mov
push
cmp
sahf
mov
outsl
fidivs
in
lock
xchg
push
mov
clc
mov
mov
cmp
or
adc
daa
add
adc
les
fimuls
adc
push
cs
ret
mov
mov
cmp
jl
push
cmc
dec
xor
mov
es
dec
sbb
cmp
cmpsl
repz
sub
cmp
or
call
add
fisubrl
jg
aas
xchg
xor
and
popa
das
jns
jns
jae
adc
sub
in
sti
mov
xor
jecxz
aaa
add
cmp
jno
fbld
sarb
das
rolb
jg
adc
imul
aaa
jg
dec
das
std
dec
fcomps
lock
jg
aad
or
in
push
leave
outsl
push
sti
jne
in
xchg
cmc
pop
scas
scas
pop
fdivrl
inc
mov
lods
cltd
aad
test
dec
movsl
popf
or
iret
mov
imul
pop
movsb
adc
int3
jns
aam
fdivrl
rolb
test
mov
idivl
lods
mulb
mov
cld
loopne
mov
lods
scas
ret
mulb
scas
notb
dec
mov
mov
hlt
dec
pop
out
mov
dec
idiv
out
mov
or
scas
push
or
mov
scas
jmp
outsb
xor
mov
mov
mov
sub
add
pop
ds
sub
ss
insb
jg
add
dec
pop
push
mov
mov
inc
push
test
fidivrs
sub
adcl
jne
lods
popf
in
jno
cmp
data16
jg
sbbl
in
daa
scas
mov
jg
leave
das
sbb
pop
insl
fldcw
jne
aad
push
cs
pushf
enter
xchg
mov
mov
mov
scas
mov
mov
aam
mov
mov
sbb
iret
into
movsl
mov
int
lea
popa
scas
pop
fsts
test
cmp
scas
adc
out
aas
mov
and
xchg
pop
mov
push
cmp
cmp
repz
adc
dec
in
rclb
mov
iret
lret
dec
push
mov
push
lret
sbb
and
in
pop
scas
loopne
fmuls
or
xchg
dec
out
orl
ss
sbb
or
out
mov
cli
jg
insb
mov
jmp
dec
inc
repnz
jg
daa
mov
xchg
aam
or
dec
loopne,pn
aas
pop
xchg
lods
jb
xor
mov
jbe
arpl
repz
lods
aad
fcmovu
imul
xor
jbe
xor
adc
iret
xchg
pop
scas
sub
adc
insl
scas
in
fisubrs
mov
mov
jmp
adc
jle
cli
ss
hlt
and
or
mov
push
mov
pop
inc
in
sub
mov
pop
cli
test
test
push
es
add
push
rep
dec
in
dec
das
mov
and
jge
mov
cmp
in
sub
pop
in
jno
push
ffree
jnp
mov
pushw
fistpll
rcrl
loope
inc
scas
loopne
mov
sbb
xchg
mov
cmpsl
adc
adc
fmulp
das
pop
cmp
fsubrl
add
pop
inc
iret
fadd
cmp
out
mov
jecxz
mov
push
hlt
stos
add
xchg
data16
mov
jl
or
rorb
repz
sbb
scas
lods
pop
gs
jne
mov
or
lahf
clc
imul
in
out
fucomip
xchg
mov
mov
jle
jp
jbe
idivl
aaa
fisttpl
sbb
cmp
pop
mov
ja
shl
pop
in
sahf
fdivl
jmp
int
call
insb
sbb
or
leave
sarl
xchg
mov
dec
mov
dec
test
cmp
insl
popf
inc
ljmp
cld
add
outsl
fdivp
fiadds
or
outsb
sbb
rcll
jg
aas
imul
idivl
pop
lea
jp
outsb
test
pop
sbb
cmp
mov
fildll
jae
mov
fnstsw
add
push
cmp
ds
out
pop
mov
fildll
jae
lcall
out
sahf
sahf
aas
inc
pop
pop
mov
decb
fdivrl
int
pop
mov
or
dec
sbb
mov
fnstsw
jge
cmp
mov
mov
jns
mov
outsb
aas
mov
sub
mov
pop
adc
int
xor
adc
loopne
cld
and
int3
jg
mov
fdivrl
fildll
and
movsb
mov
mov
idiv
fildll
iret
mov
testb
pop
jle
push
and
lret
mov
mov
ds
out
scas
loopne
ficoms
popf
fdivr
fdivrl
xlat
in
push
std
mov
mov
fcomi
inc
bound
in
pop
dec
adc
inc
push
push
jb
outsb
xlat
xchg
sahf
cld
insb
cs
int3
sbb
mov
pop
aas
dec
movsl
out
xchg
xchg
xchg
mov
sbb
lret
cli
sti
jbe,pn
fidivs
dec
mov
not
xchg
mov
iret
xor
cmp
test
dec
xor
jecxz
sub
push
outsl
cmpsl
pop
sti
push
dec
mov
out
rcr
ljmp
pop
inc
inc
insb
aaa
sbb
outsl
xchg
or
frstor
addr16
mov
lods
das
mov
rcrl
cmpsb
push
pop
scas
sub
ds
dec
je
jg
inc
xchg
or
jg
add
adc
push
add
cwtl
add
sub
xor
sbb
lahf
or
adc
lahf
out
xchg
mov
into
sub
setg
fs
lahf
cmc
mov
das
lahf
and
or
jns
mov
push
lahf
ret
paddusb
bound
out
test
sub
push
xor
sub
inc
std
neg
sbb
add
pop
fisubs
adc
daa
mov
aas
es
xor
push
mov
mov
jb
loop
dec
cli
andb
lock
into
xor
mov
and
xlat
ljmp
stos
pop
arpl
insb
dec
jmp
popf
jnp
push
and
jnp
ljmp
sbb
sub
ds
mov
sarb
push
mov
std
xacquire
mov
insb
cmp
jg
or
fucomi
stos
into
ljmp
xchg
stos
pop
test
xlat
mov
adc
testl
in
jp
pop
adc
aas
cmpb
mov
rcr
in
stos
repnz
pop
gs
pop
xor
mov
jbe
insl
outsl
repnz
sbb
adc
dec
rcrb
mov
sbb
jge
push
mov
outsl
data16
mov
popa
iret
mov
mov
pop
out
insl
mov
sti
xchg
bound
xor
sahf
cld
mov
ficoms
ret
mov
xor
mov
es
and
pop
mov
popa
sub
sub
bnd
mov
sahf
pop
mov
andl
sub
xchg
jg
fwait
repz
xor
popf
mov
mov
enter
add
fsubs
mov
fstpt
mov
jb
sahf
outsl
mov
add
in
out
ja
stc
out
pusha
lret
pop
jg
add
sub
sti
xchg
cld
imull
sbb
push
cmc
add
jl
stos
addr16
mov
sbb
push
into
scas
add
outsl
imul
dec
jmp
fstl
addb
popf
jg
cmp
mov
in
std
fstps
mov
outsl
pop
fimuls
out
nop
das
mov
outsl
dec
ficomps
outsl
add
mov
outsl
scas
xorb
out
fstpl
stc
cmp
pop
pop
aas
fwait
jl
pushf
mov
out
or
jge
fisubrs
or
mov
and
out
fistpl
adc
aaa
jecxz
iret
scas
inc
scas
scas
mov
mov
por
ret
aaa
sahf
mov
mov
out
out
lahf
jnp
sub
lds
lahf
lods
mov
aam
jle
lcall
mov
mov
xchg
stc
aas
std
mov
cmc
jg
icebp
lods
in
mov
mov
insl
outsb
popa
and
jge
into
jg
lds
jecxz
cld
sti
imul
fistpll
insl
repz
jle
sbb
aad
sbb
jns
aas
stc
cmpl
std
xor
jp
jno
fidivrl
std
aad
add
out
sub
and
fcoms
js
xchg
mov
cmp
rclb
cld
orb
jnp
ds
mov
cmp
pop
mov
xlat
into
or
mov
fistl
mov
insb
ja
iret
outsl
sbb
mov
outsl
outsb
fidivs
js
fwait
ja
jnp
xchg
fidivrs
xchg
ja
out
fstps
mov
outsl
sbb
jg
push
or
or
cmp
jnp
repz
adc
std
add
xlat
inc
jle
popa
mov
cmp
lret
dec
popa
pushf
outsl
scas
and
push
iret
popf
fwait
and
or
lea
and
scas
jg
jg
dec
leave
clc
cmpsl
mov
jnp
cwtl
cld
popa
into
mov
cmp
popf
mov
loop
ret
enter
shrl
fildl
mov
lcall
int
scas
mov
mov
out
out
jnp
outsl
fldcw
lret
outsl
dec
faddp
mov
mov
outsl
lods
fiadds
out
int3
jg
fdivl
sarl
cmp
fwait
outsl
jge
mov
out
mov
mov
mov
push
inc
outsl
cs
sbb
inc
dec
pop
pop
push
pop
inc
jl
out
lea
pop
aas
lret
out
aaa
push
xlat
int3
sbb
mov
mov
sti
inc
ljmp
push
aam
lods
fildl
scas
das
out
xchg
fucomi
subl
mov
outsl
daa
fimuls
mov
jb
flds
mov
outsl
push
fiadds
out
xor
sub
outsl
xchg
ss
cmp
ja
daa
out
cmpsl
mov
stos
fsts
fisubs
adc
sbb
add
xchg
xor
xchg
push
mov
jne
fldenv
out
ja
arpl
pushw
fnstenv
jg
or
jns
jnp
jg
jg
data16
movsl
mov
mov
std
lds
stos
xlat
out
scas
push
push
negl
add
or
outsb
in
inc
out
aad
negl
cmc
imul
cmovnp
cmp
dec
scas
ljmp
in
lahf
fucomip
sbb
cmp
cmp
test
mov
outsb
packuswb
xor
imul
fisttpl
mov
adc
scas
sti
imul
mov
adc
in
or
stc
or
pop
dec
fwait
sti
xchg
ror
iret
mov
out
movsl
loope
leave
jae
mov
repnz
ret
jnp
pop
test
sbb
push
fcmovnbe
mov
ds
das
in
pop
ficomps
mov
xor
mov
lret
sbb
fdivrl
sub
mov
std
aaa
mov
jg
add
inc
sbb
sahf
mov
iret
out
xor
popf
sti
pushf
xchg
subl
fsubr
js
sbb
iret
jp
lock
rcr
outsl
sub
mov
cmpsl
jg
add
add
xchg
lds
mov
std
jg
test
ds
pop
dec
call
mov
ljmp
xchg
push
icebp
sbb
jmp
jmp
pop
pop
inc
test
sbb
jge
dec
stc
mov
roll
sbb
decl
test
rolb
sbbl
push
incl
jl
pop
std
fsub
adc
jmp
sbb
and
jl
push
idiv
mov
test
mov
push
incl
push
mov
jo
int3
xor
inc
in
stc
addr16
repz
mov
pop
jo
in
push
adc
push
popa
lods
xor
mov
inc
ljmp
sti
inc
jge
jo
out
sub
iret
cld
es
lret
ljmp
sbb
sub
adc
push
cli
roll
gs
jns
cld
scas
imul
or
xchg
pushf
imul
push
test
pop
jne
std
mov
inc
into
fcoms
divl
insl
adc
enter
sti
adc
cmp
or
mov
sbb
xchg
outsb
adc
inc
mov
sub
dec
ljmp
je
mov
mov
loop
jg
call
jmp
pop
dec
inc
jmp
and
in
pushl
or
ret
lods
add
les
mov
insb
std
inc
into
xchg
js
repz
add
jo
cld
mov
sub
xchg
inc
std
test
lods
sbb
ljmp
outsl
jae
je
add
ret
cmp
push
mov
stos
lcall
mov
cmp
inc
inc
leave
out
add
out
push
fimuls
arpl
push
cmp
dec
jns
or
mov
stos
pop
jb
out
jae
repz
add
pop
fwait
call
jb
repnz
dec
ud0
mov
sbb
adc
jecxz
jo
gs
in
ljmp
and
cmp
inc
fidivrl
loope
cld
mov
pushl
aaa
je
xor
sub
ljmp
insb
dec
daa
das
ret
inc
les
rcrl
hlt
or
pop
in
test
fstl
mov
shrb
or
iret
out
or
les
subl
mov
inc
incb
test
xor
out
mov
jmp
lret
popf
fisubrl
xchg
cltd
shrb
and
jl,pn
inc
ret
jmp
xor
movsb
jmp
push
jge
scas
pusha
mov
es
sub
jmp
xchg
jne
scas
test
cmp
sti
stos
xchg
idivl
adc
jl
jge
push
aaa
cmp
xor
jae
push
das
xlat
outsl
fildll
fistps
push
daa
pop
xchg
pop
or
sahf
clc
loopne
pop
out
push
jnp
sbb
pop
jb
pop
aas
pop
pop
fistps
stc
dec
inc
adcb
cmc
or
mov
cmp
fcmovnu
ret
cmp
sarl
push
icebp
lea
ljmp
push
mov
mov
test
add
cmc
fwait
mov
cmp
mov
lock
fldenv
stc
lahf
ds
mov
xchg
out
jno
fcoml
sbb
cmpsb
pop
pop
jp
cli
insl
fiadds
adc
out
insb
xor
jg
dec
out
out
pop
jnp
imul
pop
ja
and
stc
or
cli
outsl
push
clc
shlb
mov
into
sbb
cmpsl
clc
arpl
cmc
ja
sub
pop
cmp
jnp
mov
push
mov
dec
push
cmc
sahf
mov
dec
jb
repnz
fiadds
dec
cmpsb
push
mov
notb
inc
mov
cmc
lret
jecxz
dec
out
xor
pop
neg
das
scas
imull
mov
loopne
jns
jno
mov
scas
sbb
pop
shrl
jo
imul
push
and
pusha
mov
stos
cli
pop
test
push
shl
jmp
lock
bound
loop
xor
clc
repnz
adc
jg
shrb
xlat
xor
push
lret
filds
xchg
push
mov
sub
mov
jecxz
fbld
in
mov
mov
mov
in
lds
loope
fnop
rol
xlat
ret
aad
int
dec
add
out
hlt
and
or
xlat
fwait
std
shl
jle
cmpsl
or
jnp
mov
repz
sti
fistps
ds
out
cmp
iret
mov
adc
jle
idivl
rcrl
cmp
repz
jg
lahf
pop
cmp
aas
dec
jecxz
inc
pop
cmp
ss
cmp
out
sub
mov
outsl
and
mov
pop
sbb
mov
ja
sbb
fidivs
push
jge
std
ljmp
mov
popw
dec
aas
push
lahf
inc
pop
cmpsl
divl
xor
cmp
push
jae
jg
xlat
dec
pop
int
cmp
push
int3
lock
pop
mov
outsb
outsl
pushf
fiadds
cmp
push
jg
out
sti
push
out
jg
fstps
scas
pop
jle
dec
sti
ret
idivl
fpatan
mov
popf
out
mov
fnstenv
fidivrs
ja
out
xchg
mov
pop
mov
outsl
scas
sbb
mov
cmp
fdivrl
stos
fstpl
sti
fidivrl
int3
cmp
jae
cmpb
sti
fwait
ds
lahf
mov
addr16
jmp
jnp
sbb
ret
fdivr
push
repnz
ds
loope
mov
cmp
repnz
cmp
clc
fcmovnb
fnstsw
aas
cmpl
jle
sti
ds
lahf
outsb
std
add
jle
jge
lahf
fdivrl
mov
cmp
inc
push
repnz
aas
or
loope
mov
ds
fdivr
push
repnz
cmp
mov
cmp
mov
insb
jg
jnp
push
jmp
adc
pop
mov
fdivrl
jmp
inc
insb
mov
int
jnp
loope
pushf
mov
lret
xchg
hlt
lods
ret
fdivrl
push
mov
in
mov
out
sarb
mov
jle
cmpsb
pop
mov
mov
xchg
in
cld
xchg
push
lahf
loop
in
xchg
fdivr
cmpb
mov
repnz
outsb
out
dec
sti
pop
mov
scas
pop
xlat
pop
jl
or
stc
pop
ret
stos
outsl
dec
mov
aas
mov
out
lea
jecxz
mov
in
aas
jbe
push
jmp
dec
jg
mov
jle
decb
jmp
dec
jg
decb
push
imul
in
xor
loope
int3
call
sbb
divl
cmp
int
std
push
sarl
dec
ret
ja
repnz
in
ds
in
sahf
das
vxorpd
mov
cmp
idiv
movsl
outsb
pop
jnp
bswap
mov
mov
scas
push
pop
lods
stc
outsl
sarb
aaa
mov
xchg
ds
mov
aas
setl
test
test
rorl
loope
ljmp
adc
stos
fwait
out
imul
out
icebp
cli
xor
or
fcmovu
divl
sub
xchg
mov
pop
inc
inc
sub
jg
ja
pushw
xor
inc
cli
jae
addr16
popa
inc
mov
mov
mov
into
pop
fisubrl
and
stos
mov
sub
fmul
ljmp
repnz
push
out
scas
lcall
jg
jnp
negb
xchg
pop
out
into
lds
push
addps
loop
data16
push
sbb
or
aaa
mov
stos
lock
ds
xor
cwtl
push
mov
jno
cmp
lea
push
pop
pop
outsl
rolb
xor
ja
inc
sti
orb
and
dec
xor
and
int
xor
aam
push
leave
aas
mov
lods
in
push
fs
imul
mov
stos
mov
fildll
lods
sti
or
cmpsb
fistpll
lahf
stc
jg
cltd
mov
es
ja
cld
ljmp
ds
jle
pop
in
dec
testl
cmp
fistpll
cmp
dec
add
or
lahf
in
jg
lret
mov
cmpsl
or
fisttps
enter
add
out
ret
flds
outsb
sti
xchg
leave
push
jecxz
fcmovnb
out
addl
out
sti
jae
and
cmp
xlat
sti
cmp
add
out
jns
out
mov
ret
mov
adc
decb
repz
dec
fcmovnu
jle
mov
das
sar
or
out
mov
cmp
stc
and
into
out
cld
fscale
fst
mov
aaa
jp
fildl
xchg
mov
scas
mov
cmp
mov
bound
jl
cld
jbe
fistpl
or
cld
push
std
shll
mov
lahf
mov
pop
add
out
mov
cltd
fwait
out
add
imul
jnp
xchg
sti
cmp
in
fisttpl
cmc
bnd
fistpll
push
shr
fstpt
inc
sbb
mov
cltd
mov
mov
mov
adc
sbb
in
fdivr
fcomp
sti
pop
push
repz
mov
mov
pop
jnp
repz
fnstsw
adc
iret
sub
mov
dec
xor
dec
cmp
mov
mov
adc
push
jl
ret
leave
mov
pop
jl
xchg
clc
aad
enter
jecxz
test
mov
repz
xor
aam
call
int
mov
sti
std
fucomip
mov
mov
sti
or
inc
and
sbb
repz
mov
aam
add
loop
mov
jo
mov
inc
fbstp
inc
cmp
cltd
jae
jno
fsubl
call
std
repnz
fbld
inc
jne
sarl
leave
adc
das
stc
sbb
mov
loope
dec
fstps
xchg
fistps
fists
inc
lcall
pop
sbb
xor
les
cwtl
mov
sarl
daa
fwait
out
xor
loope
jo
shrl
fisttps
fcomps
pop
add
int
int
jge
stc
scas
mov
sti
pop
jno
and
stc
inc
adc
scas
mov
push
subl
sbb
scas
fsubrp
scas
gs
imul
imul
mov
pop
stos
sub
push
out
push
sbb
std
push
mov
mov
and
sbb
lahf
repnz
mov
push
dec
dec
iret
jns
iret
inc
xlat
and
inc
or
dec
or
dec
or
lahf
adc
push
insl
cltd
lret
iret
inc
in
dec
inc
in
dec
jns
lahf
push
xchg
loope
push
sahf
or
xlat
or
xchg
iret
and
fidivs
mov
mov
or
imul
hlt
inc
stos
iret
add
test
cmp
lods
inc
leave
iret
mov
sahf
mov
scas
imul
arpl
and
out
aaa
scas
shll
dec
jnp
in
rcr
jecxz,pt
push
push
leave
shrb
aam
pop
lahf
jecxz
loope
into
fwait
jecxz
adc
shrl
dec
outsl
mov
add
cmp
nop
repz
fbstp
and
je
xor
neg
js
lea
ficomps
idiv
jns
std
sarl
dec
ficomps
rolb
cmp
ficoms
loop
fiadds
add
cwtl
and
rcrb
push
fisubs
idivb
fisubrs
pushf
cs
mov
inc
push
jg
lock
aad
sti
add
es
outsl
aaa
jecxz
jne
and
and
in
push
jge
rcrb
mov
jg
sbb
and
or
jecxz
mov
jecxz
iret
xchg
sahf
and
pop
mov
and
jecxz
pop
adc
add
aad
lret
and
push
xchg
mov
cmp
das
ret
mov
and
mov
add
xchg
jecxz
mov
and
mov
jecxz
mov
pop
stos
xor
aaa
mov
sub
push
lods
and
adc
sbbl
lret
outsl
ret
add
mov
shl
popa
out
mov
pop
aad
loope
mov
addr16
mov
out
ror
jecxz
mov
xor
inc
ret
sbb
out
out
rolb
ret
adc
mov
roll
loopne
iret
ret
loope
xchg
outsb
and
xchg
dec
lock
pop
lock
sub
loop
stos
pop
rorl
xor
dec
cmpsb
pop
mov
mov
sar
push
lods
fidivs
mov
pop
mov
mov
pushf
jg
fldcw
shl
pop
fwait
int
add
jecxz
jl
mov
jecxz
push
imulb
iret
inc
insb
pusha
mov
inc
xchg
ss
filds
jecxz
add
scas
out
push
aas
pop
repz
in
pop
and
inc
mov
pop
inc
idiv
js
add
adc
scas
sarb
scas
cmpb
mov
mov
jmp
jnp
xchg
mov
fcompl
mov
xchg
sti
arpl
call
mov
xchg
lods
dec
clc
ret
mov
in
pop
cmpsl
lods
pop
mov
xor
int3
pop
cmpsb
scas
pop
mov
push
adc
ja
sub
sarl
fsubrl
and
std
notl
pop
insb
push
sti
dec
test
ret
mov
add
and
push
push
jno
add
mov
arpl
cmp
cli
mov
pop
and
push
adc
fisubl
jecxz
jmp
rcl
jg
mov
gs
ret
fisubs
popa
jns
std
jnp
call
cld
sar
push
jnp
cmpsb
addr16
clc
inc
jle
jl
inc
adc
hlt
mov
shll
mov
mov
lods
out
into
sti
mov
std
fistps
imul
pop
push
sbb
xchg
aas
cwtl
out
lret
inc
sbb
dec
cmc
fucomip
int3
fisttps
cmpl
aam
mov
faddl
fstpl
ret
negb
out
mov
adc
out
ss
test
jecxz
ret
fiadds
test
mov
jle
out
and
jl
mov
iret
jmp
fwait
mov
not
ret
gs
fidivrl
out
nop
shrl
pusha
jns
sahf
das
mov
gs
push
jne
ret
mov
pop
adc
bndldx
divl
add
pop
out
mov
mov
scas
fwait
xchg
mov
scas
mul
adcl
jmp
icebp
dec
pop
out
repz
cmpsl
lret
mov
jnp
mov
sub
aad
lret
mov
jnp
mov
ja
lods
mov
mov
sub
sub
jecxz
adc
add
mov
jecxz
and
js
cld
ret
mov
sub
lds
mov
jae
pop
cli
pop
add
idiv
mov
or
adc
mov
mov
mov
sarb
mov
push
in
stos
lds
scas
mov
cmp
sub
mov
adc
rcr
jle
pop
jl
lods
pop
sub
adc
mov
cmp
jmp
pop
out
mov
lahf
xchg
adc
loop
lahf
pop
ja
add
lahf
in
mov
lahf
outsl
fbld
lret
lahf
add
jno
lret
cltd
mulb
mov
sti
aad
xchg
lahf
movsl
es
push
adc
mov
cmp
pop
adcl
dec
sub
sbb
cmp
clc
cmp
lahf
pop
mov
test
cmp
push
gs
mov
insl
das
cld
outsb
cmp
lahf
lret
inc
rcrl
jae
jns
pop
mov
pop
idivl
pop
test
cmpsl
xchg
lahf
dec
fiadds
insl
das
xchg
mov
lahf
inc
roll
shll
sbb
scas
mov
and
in
lahf
int
ss
in
lahf
subl
sbb
imul
add
sbb
aaa
pop
fsubrs
daa
pop
lret
mov
rorl
cltd
lret
jae
add
mov
pop
lahf
gs
bound
mov
xlat
xchg
aas
fisubs
lahf
scas
mov
das
mov
lahf
ja
xchg
iret
das
jle
nop
adc
sub
inc
repnz
lret
cltd
adcl
add
adc
loop
sti
xor
push
inc
pop
std
sbb
sbb
pop
addr16
mov
inc
jecxz
shrl
jnp
mov
cltd
scas
fildl
ss
dec
clc
push
adc
lahf
jp
fldt
pop
inc
fwait
jae
mov
mov
out
pop
inc
pop
and
cmp
cmp
jle
lock
push
scas
mov
out
shr
insb
mov
fildll
aas
out
sub
fcmovnbe
out
testb
fst
std
sub
loop
sbb
xchg
pop
sbb
sub
push
mov
scas
aas
jo
das
sub
out
push
jecxz
lds
or
fildll
fbld
jl
jl
jl
cwtl
lcall
int3
std
jae
mov
inc
into
xor
outsw
xlat
std
scas
ds
mov
jecxz
rcrl
xlat
stc
cmpsl
mov
mov
sahf
jg
pop
fwait
ret
jnp
mov
mov
pop
cltd
das
push
push
jle
push
outsb
movsl
and
dec
in
out
xor
ja
sarb
jmp
out
jbe
scas
bound
dec
fimull
xchg
daa
pushf
pop
ds
jb
xchg
ret
cltd
hlt
adc
xor
into
aam
rcll
mov
aaa
jl
jl
xor
stc
ds
shll
pop
jle
std
pop
hlt
inc
stc
xchg
vpmacsdql
xlat
jmp
sbb
std
cli
adc
pop
int3
jmp
cmp
pop
popl
neg
jns
out
fstpt
outsl
sti
fs
lahf
jns
xor
adc
mov
lds
xor
clc
jmp
std
push
scas
inc
dec
outsb
sahf
pop
xchg
pop
pop
mov
repnz
mov
scas
das
mov
ds
int3
aaa
pop
lcall
ljmp
or
push
jmp
sbb
ret
sti
fdivrl
fisttpl
pop
dec
ljmp
repnz
movsb
mov
dec
pop
repnz
cli
push
mov
cmp
sti
push
mov
dec
outsl
xchg
mov
faddl
push
lahf
and
jne
into
jle
add
test
mov
add
lcall
add
into
loopne
out
mov
outsb
jg
and
out
insl
hlt
cld
pop
pop
lea
push
insl
roll
imul
or
mov
int
cmc
in
or
mov
jae
repnz
in
xlat
xchg
lea
xor
pop
dec
scas
push
int3
jge
lods
push
pop
or
idivb
mov
pop
jns
jnp
cmp
lret
dec
jne
les
mov
ds
sbb
fistpll
mov
dec
cmp
aas
pop
aam
sub
jnp
aaa
dec
cmp
or
inc
popf
mov
fcomps
stos
mov
arpl
repz
in
cmpl
cli
pop
jge
sti
aas
mov
push
pop
arpl
mov
pop
mov
push
lods
cltd
idivb
sub
inc
insl
pop
shr
out
or
outsb
bound
jecxz
jmp
daa
int3
sub
xlat
sbb
mov
mov
ret
push
push
xor
pop
ret
xlat
scas
stos
or
xlat
int
das
mov
xor
xchg
dec
in
pop
sub
sbb
out
cmp
jb
or
std
ds
outsb
sbb
push
aaa
xor
cmpsb
cmp
fadd
sbb
rcr
lret
inc
push
rcr
push
fisubrs
mov
inc
jnp
fstp
out
mov
push
lcall
xor
rorb
repnz
or
ffree
mov
pop
shrb
fnsave
cltd
mov
mov
insl
sbb
outsb
or
sbb
aas
cmc
lcall
shll
lcall
xchg
xchg
fcmovu
pop
pop
in
scas
imul
push
es
lods
push
ljmp
push
arpl
andb
fdivrl
mov
dec
popf
sub
icebp
sub
xchg
push
pop
lods
outsl
aas
sbb
es
adc
mov
repnz
sbb
jle
mov
gs
sbb
pop
rcrb
xor
cmpsl
mov
outsl
mov
pop
cmpb
fisttpll
inc
xchg
hlt
mov
out
stc
and
rcrb
and
cld
out
inc
mov
int3
aaa
scas
mov
pop
adc
std
mov
push
jnp
bound
outsb
int3
aaa
scas
adcl
into
clc
js
pop
mov
xchg
in
mov
outsl
jge
mov
arpl
stos
push
je
push
mov
aaa
aad
imul
ljmp
pop
push
std
push
jg
lret
add
pop
mov
xor
fdivrp
loopne
out
and
add
aas
aam
scas
aam
sbb
outsb
mov
sbb
xchg
iret
mov
fdivr
insb
pop
mov
mov
outsl
mov
push
sahf
ljmp
or
es
das
lea
out
imul
add
jl
fcmovnu
jbe
sarb
push
xchg
sub
mov
aas
mov
outsl
mov
xor
sbb
sub
movsb
lcall
shll
sti
xor
and
cmp
pop
cwtl
pop
popa
add
xlat
mov
jge
sti
jbe
xor
dec
rcll
sub
xor
cmc
iret
mov
stos
jae
xor
dec
sbb
mov
mov
dec
sub
cmc
xchg
pop
stos
sub
cmc
dec
lahf
jb
outsl
pop
mov
and
fcmovne
push
fwait
mov
sbb
and
stos
aas
jle
jbe
push
pop
outsb
repnz
dec
rcrl
fdivl
lea
mov
into
gs
lret
push
jnp
dec
push
sub
cs
push
std
cmp
std
jl
jmp
lea
sub
xor
jl
shll
call
and
out
cmc
cmp
fmul
lret
jg
add
push
dec
jmp
out
aam
bound
jle
out
adc
mov
test
pop
pop
ret
outsl
or
cltd
outsb
stos
icebp
cmpb
into
sub
in
mov
lods
out
fcoml
out
mov
mov
scas
fisubrs
cld
iret
xlat
lods
mov
outsb
sahf
nop
sarl
scas
inc
imull
xor
sahf
mov
decb
lret
scas
add
cmpsl
shl
cmp
cmc
mov
nop
jae
cmpsl
js
es
shl
lods
outsl
fisttpll
push
xor
movsl
mov
jl
into
jae
cli
or
pop
sub
mov
repz
std
jmp
push
mov
inc
mov
sahf
push
cmp
loope
scas
out
getsec
xor
mov
imull
mov
notb
divb
mov
push
dec
fistps
iret
jecxz
push
pop
popf
fwait
xchg
pop
sti
push
bound
scas
jnp
out
addr16
or
out
mov
xor
sti
xor
aad
or
aas
mov
mov
xchg
testl
add
bound
out
push
aas
addb
inc
push
fidivs
mov
outsb
xchg
lods
pop
repz
call
out
leave
mov
dec
nop
push
cs
mov
leave
lahf
cmp
in
jge
and
push
ljmp
mov
iret
fdivrl
jecxz
out
cmp
scas
lcall
mov
sbb
leave
cmpsl
pop
notb
add
mov
pop
mov
pop
sarl
push
sbb
jbe
mov
iret
sahf
aas
fstpt
iret
inc
scas
insl
in
jge
fildll
addr16
fimuls
ljmp
cld
inc
sub
adc
rcr
mov
insb
jg
out
push
jns
in
xchg
ret
subl
lahf
cli
mov
dec
int
sbb
pop
sbb
xchg
bound
fcomi
mov
loop
cmc
lcall
andb
in
fwait
mov
push
data16
idivb
popf
sahf
cmpsl
jbe
pop
cmp
mov
hlt
das
fnsave
mov
jbe
lods
push
insl
adc
mov
mov
in
mov
xor
insl
decb
imul
sahf
mov
inc
out
dec
jle
pop
shll
cmpsb
inc
out
std
dec
mov
lds
jne
mov
fidivs
dec
pop
into
mov
cld
ja
test
and
cmp
mov
mov
mov
inc
mov
fwait
int
iret
aaa
cmp
sbb
test
mov
pop
jbe
mov
dec
dec
xchg
lcall
decb
adc
mov
pop
jbe
xlat
jb
lods
cmc
mov
cmp
mov
daa
sbb
lahf
out
les
andl
inc
insl
xchg
cmp
movsbl
pop
stc
arpl
sti
xchg
lahf
addr16
in
mov
clc
pop
popf
push
push
popf
testl
xchg
enter
addr16
int
push
clc
outsl
cwtl
push
mov
mov
fsub
addr16
movsl
xlat
inc
push
outsl
inc
mov
clc
mov
pop
outsl
ds
js
dec
mov
xor
adc
aaa
test
out
icebp
xchg
faddp
push
popf
daa
jecxz
mov
cmp
cltd
mov
in
pop
insb
push
mov
gs
cmc
inc
stos
mov
mov
lahf
mov
pushl
outsl
out
aaa
mov
daa
push
idivb
mov
fdivl
mov
cmp
cmpsl
outsl
call
mov
idivl
in
mov
mov
jmp
enter
push
scas
ret
xchg
iret
xor
scas
dec
out
sub
mov
sbb
push
int3
stos
data16
sub
aas
mov
push
jmp
push
scas
pop
das
mov
lahf
fsts
sbb
lahf
sub
push
in
jmp
push
movsb
mov
das
mov
mov
jecxz
xlat
push
inc
fstpl
dec
push
cmp
scas
std
fisubrl
data16
aad
imul
fildll
xlat
outsl
aad
popf
cs
mov
adc
hlt
faddl
push
pop
hlt
pop
mov
scas
in
mov
test
lahf
fidivrs
scas
jmp
or
fsubrp
cmp
mov
sarl
cmp
test
pop
mov
dec
pop
sarb
loopne
shll
into
inc
push
cltd
xchg
mov
out
ficomps
aaa
aam
lret
iret
scas
dec
sub
divb
cltd
mov
aad
pop
push
mov
fistl
mov
pop
jp
int
repnz
fisubs
mov
push
mov
inc
and
divl
jg
add
add
into
sti
cltd
xchg
lret
out
sbb
not
scas
cmpb
fdiv
sub
jmp
sub
sbbl
pop
outsl
cmp
pop
pop
imull
aas
insl
mov
das
mov
ja
jnp
add
pop
pop
mov
cmp
lret
ljmp
pop
out
xorb
xchg
aas
xor
out
inc
xchg
add
xlat
pop
fcomip
xchg
cmp
mov
mov
mov
push
fidivl
mov
sub
push
push
outsl
ds
outsb
pop
fldt
xor
out
iret
mov
jl
inc
aas
andb
inc
scas
jge
cmp
adc
cmp
aas
lcall
ds
pop
sahf
mov
pop
dec
shll
mov
cmc
dec
push
das
mov
outsb
sub
out
xor
stos
scas
ja
dec
aaa
cld
filds
lods
scas
shr
fstp
into
enter
repz
repnz
mov
enter
insl
testl
test
mov
mov
ret
jb
sub
push
sti
pop
mov
popf
xor
xor
ljmp
pushl
clc
inc
mov
dec
cltd
pop
sub
jp
or
and
xchg
or
aas
ss
xchg
imull
movsb
scas
jne
pop
inc
xor
mov
into
out
sbb
cmp
loope
loop
xchg
fistpl
mov
cwtl
pop
add
aas
test
jp
cmp
fsubrs
xchg
cwtl
sbb
aaa
shrb
lods
or
add
jg
mov
cli
pop
sub
fsubs
and
stc
and
test
xor
in
or
sbb
dec
loop
fadd
arpl
jbe
mov
loope
jns
adc
fmuls
dec
cwtl
es
jg
mov
xchg
xor
orl
andl
pop
jae
dec
loop
bound
clc
out
add
fmul
mov
push
pop
movsl
xor
jg
cmpl
fnstsw
mov
ss
out
out
mov
jecxz
xor
adc
icebp
jp
sub
nop
mov
daa
sbb
cld
fsubrl
and
mov
sbb
mov
mov
loope
pop
ret
loop
bound
adc
fdivrs
mov
jmp
ss
xchg
add
rolb
push
or
mov
jno
xor
jl
xchg
pop
arpl
mov
cmpl
mov
xadd
cld
pop
adc
ds
add
pop
popa
xor
add
loope
popa
and
pop
cmp
inc
mov
lea
ret
sbb
arpl
loop
inc
xchg
lahf
mov
xchg
insb
cmpl
sub
arpl
loop
bound
daa
mov
cwtl
adc
lds
fnstcw
jnp
das
pop
add
fnstcw
pop
pop
dec
sbb
dec
cs
mov
ret
repz
mov
jne
popf
fsubrl
ss
or
xchg
out
sbb
pop
lcall
repnz
loop
inc
cmpsl
or
icebp
xchg
aas
mov
or
insb
xchg
pop
gs
cmp
adc
sbb
mov
push
cmp
sbb
and
pop
adc
inc
or
das
arpl
sahf
lds
repnz
mov
sarl
adc
daa
ss
xor
add
cmp
mov
or
push
fcoms
lods
popl
mov
arpl
loop
bound
dec
popa
add
js
fists
mov
outsl
mov
sub
sbb
or
or
or
or
or
sbb
mov
cmpps
cmpsl
movd
xor
mov
jno
cmp
js
sbb
lret
sbb
pop
pop
push
adc
int
push
lock
ja
fdivl
aad
jno
out
sbb
jp
dec
ds
add
pop
fs
inc
das
pusha
sub
out
daa
xchg
mov
jge
and
mov
int
popf
arpl
fsubrs
mov
testl
es
push
aad
push
push
sub
out
test
adc
sbb
xchg
adc
add
test
rorb
mov
cmp
aas
push
fcom
outsb
aas
insb
cmp
sub
sbb
ss
or
int3
setl
adc
xchg
aaa
push
sub
fcomi
vshufpd
push
das
sub
xor
nop
add
das
cli
mov
movsl
mov
dec
sub
ss
lcall
scas
adc
sbb
mov
loope
pop
clc
fistl
scas
fadds
mov
pop
pop
xor
or
adc
mov
mov
pusha
xor
dec
pop
in
mov
or
jecxz
or
push
cmp
mov
ds
aam
mov
repnz
cmp
aaa
jne
fidivl
cmp
mov
inc
test
jmp
xor
push
ss
push
cmp
sbb
das
ss
cs
xchg
pop
shlb
mov
xor
adc
and
cs
popf
int
orb
mov
test
xchg
ficoml
stos
arpl
adc
sarl
dec
adc
scas
or
mov
and
mov
jne
fmuls
sbb
add
fwait
and
sub
in
aas
jno
sbb
shlb
inc
and
pop
les
jb
fbstp
stc
fidivrl
clc
xor
mov
push
daa
imul
push
jnp
or
fcom
mov
neg
or
fistps
ficoml
lods
jo
jae
jnp
ss
xchg
es
and
sbb
repnz
lods
adc
push
adc
nop
sbb
hlt
arpl
push
push
jno
xor
mov
mov
jge
jge
loope
pop
xor
fucomi
cmp
aas
arpl
std
loope
jns
aaa
adc
push
daa
mov
cmc
arpl
loop
jp
sbb
bound
ss
mov
mov
pop
pop
arpl
xlat
cld
in
xorl
inc
inc
sbb
hlt
pop
enter
sti
das
add
adc
sub
mov
out
xchg
daa
or
dec
and
dec
pop
insb
dec
inc
cmp
dec
sbb
dec
fnstcw
lea
sub
jno
push
cmpb
sahf
sar
xor
rol
popf
mov
lds
mov
push
jl
pop
stos
dec
push
jge
xor
xor
push
dec
jnp
loope
sbb
pop
sti
stc
pop
fcomps
pop
psubusb
js
pop
xor
sbb
repnz
pop
pusha
add
iret
mov
negl
sub
push
outsb
lds
jae
ds
stos
aas
cmpsb
mov
arpl
hlt
bound
add
aaa
pop
fdivs
js
pop
scas
xor
push
or
lcall
or
sub
sbb
push
pop
in
adc
addps
repz
movb
and
addr16
cmp
pop
aas
fcomps
js
das
iret
jae
jle
sub
sub
stos
pop
je
fsubs
mov
shlb
push
cmp
pop
loop
jp
test
lods
push
mov
ja
cmp
mov
jno
xor
mov
enter
subl
mov
sub
xchg
sub
or
das
psrad
bound
in
insl
cmp
and
movsl
ficoml
mov
lock
and
loopne
pop
mov
gs
add
push
cmp
sub
sbb
xor
out
adc
xlat
or
stos
cmp
jnp
or
pop
xchg
pop
out
ffree
sbb
mov
and
inc
mov
cmp
add
inc
das
xchg
dec
aaa
adc
ss
cs
fidivrs
fistpl
icebp
sbb
insb
xchg
ljmp
adc
or
int
popf
test
aam
insb
lcall
shrb
xchg
shl
aaa
push
loopne
pusha
aad
popf
pusha
popa
push
outsl
gs
loopne
bound
jmp
fidivl
outsb
sbb
mov
mov
das
lock
adc
popf
xor
and
xor
push
out
cs
inc
shlb
xchg
mov
fisubl
jl
and
jg
outsl
push
loope
dec
bound
std
cmpsl
pop
ss
es
or
clc
inc
pop
dec
fdivrs
sub
dec
arpl
cmp
mov
call
mov
insb
xor
mov
icebp
adc
sti
or
adc
add
pop
imul
das
mov
loope
and
loop
bound
jp
mov
insl
aas
sti
and
loop
jmp
cld
out
lret
insb
sarl
int3
insb
movsb
pop
pop
sbb
pop
sub
or
pop
xor
xadd
pop
mov
push
jbe
repz
xchg
mov
in
push
sar
jg
out
mov
adc
icebp
shlb
xor
popf
lds
ret
pop
pop
mov
cmpsl
ss
cs
es
out
mov
sbb
mov
mov
stos
pop
jge
insl
imul
cmp
mov
cld
xor
xor
xor
fisubrl
pushf
sbb
xchg
movsl
cmp
repz
xor
fistpll
push
mul
clc
punpckldq
jmp
ss
mov
mov
outsb
add
dec
add
add
add
add
add
add
sbb
jecxz
stos
jp
rcrb
lahf
shlb
lods
clc
fcmovb
jp
or
lahf
and
pop
cs
jp
sbb
dec
mul
add
out
popf
jno
in
enter
pop
cmpsl
sub
pop
mov
xchg
idiv
sti
and
pop
mov
insb
call
mov
out
pop
or
jge
dec
mov
lods
popf
mov
fistl
mov
addr16
and
pop
push
pop
rorb
sub
sbb
or
fildl
and
fldcw
or
pop
jg
outsl
shll
fcmovb
lock
jns
and
mov
jno
sub
or
testl
and
popf
insb
sbb
cmp
xor
lds
sbb
in
sarb
ret
jmp
in
jl
sub
sub
sbb
inc
pop
mov
inc
cmpxchg
xor
test
mull
ja
lret
cli
in
cld
cs
fmull
or
or
or
or
mov
push
insb
push
pop
push
dec
push
cmp
sub
mov
insb
fistps
dec
cmp
into
sbb
icebp
mov
je
ficoml
out
dec
or
scas
mov
mov
jle
outsb
xor
dec
mov
popf
push
inc
jbe
lahf
pop
mov
lahf
arpl
xchg
ret
dec
stc
ret
jno
in
rol
dec
rcrb
dec
jnp
arpl
mov
stc
jge
add
xor
lahf
mov
popa
lea
lret
cmpsl
fnstsw
push
lret
imul
jecxz
ds
mov
or
lock
pop
pop
dec
sbbl
push
pop
dec
psllw
daa
mov
sahf
mov
mov
stc
ficompl
xor
mov
push
mov
xchg
mov
lret
pop
das
mov
jne
fsubl
ss
cs
into
mov
fnstsw
aas
inc
rolb
mov
jl
insb
push
pop
rorb
sub
sbb
out
fsub
mov
mov
sub
repnz
jne
loop
loope
and
arpl
out
int
test
sbb
ljmp
movsl
test
out
sbb
cli
loope
insl
xchg
mov
inc
xor
xor
xor
cmp
pop
dec
insb
cmp
push
mov
je
push
mov
xor
dec
or
stos
insb
loope
mov
mov
fisubs
fcmovb
mov
push
push
cmpsb
sbb
pop
dec
dec
movq
cmpsl
xor
addl
mov
xchg
cmp
xor
sarb
ljmp
sbb
or
or
pop
ret
pop
leave
xor
mov
mov
push
cld
push
in
push
faddl
sbb
outsl
or
fadd
jg
fadds
mov
push
jle
jl
lods
aaa
mov
mov
cmp
aas
lds
icebp
test
subl
xor
xor
mov
sub
push
jnp
daa
jb
jne
cmp
jnp
adc
pop
lret
inc
lea
xorl
cmc
js
jns
sbb
cmp
or
xchg
jle
and
lock
decb
es
dec
jmp
fbstp
xchg
stc
adc
scas
mov
mov
cmc
push
mov
cmp
add
dec
jb
mov
int
push
adc
mov
mov
icebp
push
js
mov
test
imulb
mov
pop
push
or
in
mov
push
mov
outsb
or
stc
fs
mov
sub
cld
push
or
or
or
mov
lods
pop
arpl
mov
jne
and
xchg
les
loope
push
lods
cmc
inc
cmp
pop
xchg
cs
push
or
or
mov
cmp
sub
mov
test
aad
jecxz
loop
push
mov
dec
jo
xor
push
cli
repnz
lahf
lods
pop
jo
adc
adc
das
mov
aas
jb
and
aad
fidivs
dec
ret
mov
test
mov
mov
lock
insl
lock
jp
xor
ds
jmp
xchg
sbb
movsl
add
and
add
add
mov
lock
xor
cmpsb
dec
xlat
mov
dec
and
xorl
pop
orl
lock
mov
ficoml
push
rcl
adc
or
sbb
sbb
pop
or
movsl
daa
orl
lock
sbbl
sbb
add
sub
pop
fisubrs
inc
dec
test
push
fiadds
test
pop
out
cmp
int
repz
aas
push
cmp
xor
loopne
aaa
push
mov
mov
mov
jno
xor
ret
fcoms
mov
fs
cli
daa
mov
mov
mov
ret
fstl
shl
int
insl
rcrb
cli
gs
sbb
pushf
mov
jo
popl
adc
mov
fisubl
addr16
pop
pop
push
sbb
pop
push
repnz
ficoml
shrb
rolb
mov
aad
rcr
xchg
add
push
add
sub
mov
fdivs
pusha
push
pusha
cmp
sub
pop
lret
pop
scas
adc
pop
aas
add
sbb
mov
sahf
movsl
subl
addl
stc
jl
rorl
xorl
movsl
dec
hlt
out
adc
aam
rcrb
sbb
push
sbb
sbb
adc
lds
roll
sub
or
lods
orl
lock
xor
mov
cltd
rolb
sbb
in
mov
subb
mov
dec
adc
repnz
and
clc
mov
fsubs
aad
sbb
mov
pop
inc
cmc
adc
pop
ficomps
pop
ja
xor
xchg
mov
push
xchg
fsubs
jbe
lds
cli
test
adc
push
pop
xchg
aas
daa
push
arpl
loopne
sbb
into
sbb
shll
adc
movsb
imul
jge
in
shll
movsl
and
in
pop
ja
popl
popf
out
les
inc
insb
mov
mov
mov
aas
dec
jns
adc
faddl
into
fldenv
lcall
movl
test
lea
jecxz
cmp
imul
in
xor
test
mov
vucomisd
popa
hlt
cmpsb
enter
sbb
xor
xchg
rorb
aaa
mov
cs
scas
add
out
xor
dec
mov
jecxz
daa
pop
arpl
loop
outsb
hlt
int3
pop
dec
and
clc
mov
pop
fwait
xchg
ljmp
enter
mov
ret
sbb
cmc
into
cmp
movsl
out
add
cld
enter
mov
mov
aas
in
lea
cmp
insb
xor
add
push
and
bound
mov
fidivrl
das
mov
or
xchg
scas
push
in
push
faddl
int3
sarb
jl
pop
add
mov
or
pop
out
mov
mov
mov
ret
rorl
pop
fmuls
pop
das
dec
testl
or
mov
scas
addr16
popw
loopne
mov
lcall
pop
fisubrl
addl
insl
out
fucomip
in
in
enter
es
mov
cs
mov
xor
das
inc
sahf
xchg
jl,pn
inc
mov
inc
into
scas
push
cs
mov
cmp
out
addl
push
fsubrs
ds
push
mov
lock
xor
pop
imul
dec
in
shrl
mov
adc
sub
je
loope
clc
jnp
add
imul
mov
aas
insb
ficomps
icebp
cmp
sub
sbb
sbb
push
outsl
cmc
mov
mov
fwait
xor
mov
jge
das
loope
pushf
decb
xchg
lods
mov
jo
cmp
daa
or
fs
jns
aas
adc
sbbl
mov
icebp
jle
mov
jno
xor
adcb
or
rorl
cmp
jmp
jae
std
inc
jne
mov
mov
and
lods
outsb
idivl
in
mov
pop
mov
ret
repz
test
sbb
in
outsl
dec
sbb
dec
xchg
femms
jb
stc
pop
imul
pop
lods
push
shrb
dec
daa
mull
cmp
pop
int
cmp
movsl
pushf
fisubrl
mov
mov
xlat
pop
xchg
adc
pshufw
lea
pop
mov
aas
xchg
movsl
pop
cmc
iret
sahf
inc
ret
pop
dec
xor
xor
push
pop
sbb
and
test
inc
arpl
ret
or
lds
dec
ret
ds
push
fmuls
ds
ret
movsb
int
mov
orl
mov
push
aaa
xor
inc
hlt
pop
mov
insl
xorl
subb
adc
fsubs
in
das
lds
sbb
adc
setg
lret
shlb
int
pop
std
jg
add
mov
out
les
into
or
cmpsb
lea
lahf
arpl
in
fisubrs
in
sbb
lods
jecxz
pop
xchg
outsl
push
dec
jne
adc
stc
adcb
push
fadds
sbb
out
or
or
mov
jmp
movd
pop
pop
dec
add
add
fldt
rcrl
mov
in
dec
mov
cmp
mov
mov
push
sbb
int3
jg
sub
pmaxsw
clc
dec
into
pop
mov
das
jle
jmp
ds
or
add
add
add
addr16
lea
pop
orl
sbb
xor
out
idivl
jge
push
pop
push
dec
std
cmp
sub
mov
ret
popf
xor
xor
dec
ljmp
jbe
xchg
es
mov
cmp
mov
mov
test
imul
in
jl
cmp
cli
pop
add
jmp
lock
rclb
je
fidivl
mov
mov
lcall
js
jnp
push
es
mov
js
sub
or
inc
mov
sub
mov
lret
arpl
imul
sbb
mov
sub
inc
jo
test
imul
pop
fisttpll
dec
loopne
jo
pop
cmp
in
pop
lahf
xchg
pop
movsl
inc
mov
or
pop
in
dec
stos
or
fcompl
loope
aas
leave
arpl
mov
mov
pop
aaa
aam
add
popf
out
push
adc
adc
scas
jmp
jnp
cmp
int
divl
sbb
arpl
xchg
mov
jne
scas
daa
xchg
int
pop
negl
sti
add
lods
adc
mov
out
jns
add
scas
xor
stc
subb
daa
aas
push
xor
testb
movsb
jns
pushl
insl
jne
cmpsb
adc
mov
aad
jle
adc
add
push
add
add
outsl
jbe
sbb
xor
shrb
call
dec
imul
dec
out
mov
mov
mov
sbb
or
or
or
or
fucomp
cmp
xor
xor
imul
cmc
ljmp
xchg
rol
or
movl
push
inc
mov
pop
xlat
cmp
sarb
inc
dec
cli
lahf
aaa
inc
fistl
lods
ss
lret
sahf
in
imul
xchg
mov
push
outsb
ret
push
or
mov
arpl
and
lea
jecxz
cmp
outsb
stc
cmp
or
divl
test
mov
shl
sahf
enter
push
xchg
mov
xor
inc
mov
or
pop
jb
cs
dec
dec
dec
xchg
rol
adc
pop
out
dec
loop
ja
fidivl
push
ret
lods
rcrb
or
jmp
and
pop
jbe
mov
in
movswl
jp
xor
xchg
shl
sbb
push
push
repz
cmp
mov
xor
cld
das
sub
pushf
dec
sbb
imul
sbb
mov
pop
push
insl
add
into
cmp
jecxz
mov
mov
sbb
dec
mov
sub
adc
fwait
mull
jge
repz
negl
les
bound
cltd
fadds
ret
pop
sbb
mov
pop
pop
test
lods
arpl
xchg
dec
test
cli
cvtps2pd
fisttpl
fcmovb
ss
out
sarl
scas
lcall
pop
andb
insb
sbb
push
mov
xchg
mov
mov
addr16
pop
cld
pop
lea
movsb
lods
das
mov
cmp
mov
inc
jnp
xchg
push
sahf
cmpsl
mov
pop
mov
cs
adc
jmp
mov
pop
dec
fcomi
popf
jp
add
arpl
cmova
stos
sbb
cmpsl
dec
fcmovu
sbb
xor
in
pop
push
jnp
add
das
dec
mov
insb
pop
sbb
jg
ffree
aas
movb
mov
push
pop
cmp
cltd
es
push
add
ffreep
mov
shrl
jbe
insb
push
and
jmp
pop
ljmp
ret
ljmp
rolb
div
sub
test
lds
inc
mov
cmc
out
lahf
pushf
jl
xor
mov
jg
mov
scas
mov
cmc
test
cmpsb
lods
ficoml
add
mov
adc
pop
cs
lea
jge
les
inc
sub
sub
in
lods
xchg
cwtl
icebp
xchg
mov
cmp
push
movsb
cmp
sbb
jle
mov
jns
orb
fsubrs
fdivl
ficompl
inc
outsl
fnstenv
sahf
outsl
sahf
les
cltd
aaa
dec
push
fistl
or
in
out
mov
jne
fmuls
pop
int3
push
ret
insb
lods
rcrb
outsb
jne
mov
jp
push
mov
jae
test
mov
inc
sub
fimuls
adc
enter
mov
or
jecxz
push
xchg
popa
rcrb
mov
adc
repz
jg
and
movsb
arpl
cli
daa
leave
push
jle
movsl
das
subl
js
mov
mov
sbb
testl
popa
mov
jl
insb
js
dec
pop
movl
shlb
mov
fcoml
xchg
cmp
loopne
push
fcomip
mov
repz
mov
in
lods
rcrl
stc
and
lea
pusha
mov
iret
mov
lcall
int3
cmc
lods
aas
jl
xor
xorb
push
dec
pop
jecxz
std
bound
jbe
jecxz
clc
jp
das
cmpsb
fcomps
mov
xchg
rcll
sahf
xchg
lock
addr16
jne
pop
xlat
jg
andb
xor
mov
std
outsl
loopne
rcrl
inc
xchg
jge
push
or
or
or
nop
mov
xor
les
fdivrs
sub
inc
pop
lcall
mov
cs
pop
push
not
rcr
mov
push
cwtl
mov
or
mov
sub
mov
out
rclb
outsb
dec
lods
adc
and
sbb
mov
add
ljmp
out
outsb
jge
lock
pop
movsb
sub
popa
rorb
or
pop
mov
scas
dec
outsb
arpl
dec
pushf
out
pop
mov
sub
adc
outsl
fdivrl
ss
ret
push
loopne
int
xchg
lea
out
jle
cmp
push
fidivl
add
int
insb
mov
lcall
popf
and
pop
addr16
outsb
mov
cmp
inc
dec
ret
shl
xlat
sbb
pop
push
movsb
or
in
xchg
shlb
push
mov
adc
hlt
outsb
push
in
mov
das
push
out
push
psllq
daa
adc
in
fdiv
das
je
jp
test
cmpsb
push
popa
ret
pop
inc
movb
adc
fs
test
mov
icebp
outsb
fnstenv
cmp
in
jnp
jmp
aas
daa
or
dec
add
out
in
adc
mov
lods
fsts
out
scas
daa
repz
test
clc
test
adc
orl
repnz
add
mov
push
sbb
sbb
scas
mov
mov
js
xor
test
mov
jge
pop
daa
mov
adc
fisubrs
sarl
mov
push
push
mov
push
or
fdivl
sbb
iret
adc
je
mov
sbb
outsl
pop
push
dec
add
std
inc
cmp
test
pop
insb
or
scas
imull
jae
in
and
push
or
icebp
fdivrs
fcomi
sbb
mov
jle
orb
dec
es
mov
js
pop
idivl
add
mov
aas
pop
mov
mov
xor
and
pop
cld
mov
jecxz
sub
jl
ljmp
push
out
daa
pop
js
jle
sbb
mov
rorb
cmpsl
push
fnstcw
insl
mov
test
jno
ds
fsubrs
mov
lret
or
cmp
sahf
xchg
shlb
outsl
sbb
aam
sbb
repz
movsb
jno
xor
js
xlat
and
inc
out
aad
add
out
xor
addr16
ljmp
or
out
sbb
push
mov
jne
fiaddl
adc
insl
addr16
adc
shlb
je
or
fcompl
pop
mov
cmp
cwtl
mov
js
cmc
pop
cltd
fstpt
push
aaa
mov
jae
bnd
xor
push
into
int
mov
xor
and
lods
fdivl
cmpsl
loop
pop
je
outsb
pop
rclb
fnsave
cmp
sub
pop
movsb
dec
das
inc
xchg
cld
cmpsl
js
in
inc
pop
pop
jmp
fwait
and
xor
test
lock
cmp
out
jne
imul
scas
or
pop
inc
es
int
cmpl
cmp
cmp
mov
into
or
mov
jp
pop
dec
xchg
arpl
notl
je
fldenv
aam
xchg
pusha
test
mov
rcl
or
fs
xlat
dec
out
imul
rorb
imul
rclb
mul
inc
stos
jp
cs
ret
jl
rorb
pop
cmp
enter
and
pop
cmp
mov
aaa
mov
jge
pop
outsb
idivb
ljmp
repnz
sub
mov
cmp
lret
sbb
jp
xchg
pop
adc
xchg
add
test
imul
loope
insl
sub
out
out
sbb
sbb
pushf
add
lods
ret
pop
inc
fsubrs
sbb
push
push
add
xchg
dec
insb
movsl
add
jg
jmp
cli
iret
scas
movq
push
mov
pop
pushf
add
out
push
std
out
sub
std
fnstcw
lahf
sahf
hlt
cmpb
insl
sbb
pop
add
add
or
mov
jns
aam
lea
pop
into
jle
or
push
pop
pop
mov
jecxz
pushf
inc
lds
sar
aad
outsl
sbb
inc
fwait
clc
mov
push
ret
je
rcr
jne
pushw
pop
enter
das
xchg
cmpsl
movl
pop
push
lcall
dec
mov
ss
xchg
jg
test
in
lock
stos
je
mov
hlt
in
imul
jecxz
stos
out
arpl
mov
xor
xlat
sub
push
pop
adc
cmc
pushf
xor
xchg
adcl
sub
in
test
sub
adc
or
imul
popf
rcrb
pop
xor
push
or
cmp
loope
sbb
fidivrl
aas
iret
and
jecxz
imul
inc
mov
or
stc
jge
dec
jnp
aas
ret
mov
sbb
shl
cmp
scas
cmp
cmp
add
gs
iret
cmp
insb
lahf
mov
cmc
adc
adc
push
adc
sysexit
inc
lock
fwait
arpl
ljmp
out
push
clc
push
cwtl
push
cmp
movsb
mov
mov
cmp
fadds
mov
adc
xchg
in
mov
xchg
subl
fwait
insb
test
scas
cltd
pop
mov
ds
jmp
or
cmc
aaa
jecxz
fldl
outsl
imul
mov
cmpsl
push
fnsetpm(287
rcrl
movsl
cs
cmp
jl
sub
sub
loope
popa
xor
jmp
lds
js
cmp
ror
aam
test
jae
pop
ljmp
inc
push
insb
lods
push
imul
sbb
inc
subb
fidivl
xchg
testl
int
sbb
sbb
push
into
inc
lods
in
lea
sbb
dec
cmpl
mov
hlt
xchg
cmp
es
daa
jge
jae
fisubs
adc
add
test
mov
cmc
fs
sub
dec
aas
lds
orb
pop
incb
out
arpl
cli
mov
sub
xchg
jecxz
out
imul
addr16
enter
push
adc
mov
push
sbb
jbe
or
call
fst
clc
dec
mov
filds
lahf
mov
xor
jns
mov
js
mov
and
shll
adc
daa
mov
test
negb
cmpsl
insl
aam
add
ret
adc
mov
mov
push
mov
js
popa
adc
sbb
rolb
jmp
cmpsb
addr16
jge
mov
dec
inc
aaa
jecxz
leave
imul
cmp
mov
int
ja
aaa
cmp
gs
std
enter
adc
lods
ds
stos
inc
jae
rcrb
xchg
cmc
xor
cmp
es
adc
es
lret
daa
jo
pop
sbb
push
fcmovnbe
mov
lea
inc
scas
and
int
add
fsub
mov
jmp
jle
mov
cmp
lcall
xchg
push
xchg
pop
imul
sbb
adc
lahf
add
dec
push
dec
out
push
sub
xchg
and
daa
sbb
test
leave
ret
neg
sbb
div
fcomp
outsl
je
mov
mov
aaa
insl
pop
mov
aas
cli
mov
imul
xor
imull
aaa
jnp
in
pop
inc
sti
das
and
clc
test
and
mov
stos
push
into
push
jg
jmp
shlb
cmc
movsl
push
das
mov
cmp
xor
loopne
xor
add
rcr
fistpl
push
clc
pop
or
cmpsl
push
jmp
jle
dec
aaa
sbb
add
ss
sti
pop
enter
adc
mov
fadds
mov
dec
mov
xchg
or
jns,pt
dec
pop
adc
mov
js
jnp
call
lea
jp
push
inc
rcrl
inc
cld
dec
cli
aaa
lret
pop
push
dec
test
xor
orb
ss
mov
and
cmp
loop
push
or
sahf
or
lret
pop
sbb
mov
test
outsb
insb
pop
test
cs
std
in
mov
fisubl
movsb
cs
mov
dec
test
adc
test
mov
in
mov
mov
cmp
lahf
ret
push
adc
inc
in
sahf
cmp
lods
jae
fdivrp
and
lahf
daa
ja
insb
mov
hlt
std
push
lods
outsb
cmpsl
int
mov
mov
lret
icebp
fsts
jbe
pop
outsb
inc
cmp
lds
cmp
test
dec
aam
repz
arpl
adc
into
jecxz
sbb
outsl
mov
mov
lods
xor
in
outsl
push
xchg
mov
inc
cmp
mov
jecxz
cmpsb
push
cmp
mov
subl
and
inc
fsubr
insb
rcrl
mov
jp
cmp
outsl
test
scas
or
shrb
cli
je
pop
lods
sahf
fldl
pop
gs
jmp
add
mov
hlt
and
fmul
or
fwait
cli
lods
dec
js
dec
adc
testb
dec
pop
mov
mov
push
je
sub
out
push
push
fldenv
pop
outsl
shr
sar
sub
subb
or
sub
cltd
sbb
inc
mov
ss
and
fimuls
sbb
cmpsl
daa
inc
cli
push
dec
mov
sub
rcrl
push
or
scas
adc
lahf
mov
dec
ss
inc
inc
popa
inc
clc
fisttpl
daa
inc
hlt
je
push
data16
incb
add
sbb
pop
pop
inc
and
push
add
cmp
sbb
mov
outsl
outsl
out
dec
sbb
orl
cmp
js
xor
cmp
mov
jbe
push
ret
popf
popa
rorb
shrb
dec
xchg
pop
shll
cmp
addr16
or
pop
pop
aas
imul
daa
xchg
mov
mov
dec
push
aad
popf
pop
test
fcom
arpl
push
ja
push
xor
hlt
push
pop
push
or
cltd
sbb
js
and
fcmovnbe
mov
test
jae
movsb
sbb
es
into
add
arpl
jge
sbb
add
arpl
adc
ret
fiadds
add
jg
out
sbb
fsubr
les
mov
js
jle
pop
sub
xchg
loop
jp
daa
push
fadds
mov
lgs
pushf
add
movsl
shll
pop
pop
and
dec
insb
sub
test
dec
push
add
cmp
lahf
aas
dec
loop
into
and
xchg
aam
les
or
or
movsl
mov
out
add
mov
notb
jns,pt
fldt
jp
add
rclb
mov
sbb
dec
sbb
pop
sub
jecxz
fldcw
jge
push
or
hlt
cwtl
mov
sahf
stos
cmp
dec
cmp
sbb
hlt
or
mov
icebp
cs
mov
push
push
mov
insl
add
imul
or
insb
inc
js
pop
pop
pop
imul
lahf
xor
aad
shrl
in
scas
popf
xchg
xchg
loope
je
jge
sbb
add
sub
sub
scas
aaa
rol
dec
adcb
gs
ret
outsl
loopne
pop
jns
ret
or
fdivrs
pushf
out
mov
jb
int3
xor
push
pushf
pop
sbb
loope
js
pusha
push
pop
mov
repnz
in
jbe
mov
shl
add
push
into
xchg
js
bound
imul
mov
jmp
sub
or
mov
mul
adc
btr
cmp
add
xchg
xor
xor
push
mov
dec
daa
dec
jno
gs
jmp
aaa
mov
mull
jmp
in
mov
or
pusha
xor
xor
pop
add
push
lock
lds
sub
das
inc
lods
insl
icebp
lea
fiaddl
push
out
lock
mov
xchg
push
push
mov
jl
ret
arpl
cmp
cmp
je
cli
xor
mov
xorb
pop
add
mov
sub
icebp
push
adc
push
sub
das
cmp
rolb
in
ss
adc
xchg
test
pop
sahf
in
xchg
scas
das
arpl
outsb
lds
pop
sbb
adcl
jmp
cmc
xchg
and
fildl
xchg
pushf
or
or
mov
sub
jl
mov
icebp
jl
xor
jnp
pop
jge
sbb
movsl
dec
hlt
je
pushf
jl
dec
shl
ret
sub
icebp
fld
cmpsb
jmp
sbb
ret
idiv
jne
movsb
sbb
pop
stc
add
fs
mov
lds
shl
sahf
addr16
jb
push
cmp
xchg
fsubs
sti
movsl
into
pop
mov
adc
pop
aas
mov
fbstp
mov
nop
cmpsb
prefetcht0
jp
lahf
adc
lea
sub
dec
outsb
arpl
jp
pushw
imul
or
ljmp
pop
push
mov
outsb
int
lea
clc
sbb
orl
inc
add
notl
dec
or
push
cld
subl
pop
sbb
jp
or
rcr
clc
sub
mov
xchg
cld
out
sbb
insb
add
fistpll
jnp
jg
ficoms
sub
ficoml
rcl
mov
cs
pushf
iret
push
or
xchg
mov
cmp
jae
aaa
push
adc
sbb
cmpsl
out
das
rcrl
dec
cmp
dec
push
mov
ret
popa
out
movsl
daa
insl
sbb
mov
decl
out
int
pop
out
arpl
push
mov
pop
ret
ss
sbb
shrb
or
icebp
mov
xchg
je
mov
lds
add
push
mov
dec
test
in
aas
mov
imul
or
mov
lods
mov
test
mov
test
pop
mov
out
mov
inc
out
sub
sbb
mov
loopne
test
fldcw
xchg
arpl
js
sti
pop
push
dec
cmp
mov
inc
ds
sti
or
inc
mov
leave
movsb
int3
xchg
jns
add
int3
test
mov
scas
cmpsl
jle
into
cs
push
in
push
dec
ficoml
mov
jbe
aaa
out
nop
pop
pop
cmp
adc
push
jp
mov
sahf
push
mov
and
fcoml
sbb
dec
sbb
pop
pushf
adc
pop
mov
or
jg
mov
xor
fbld
sahf
mov
add
hlt
jle
mov
sti
mov
cmc
xlat
push
testl
xor
pop
cmp
mov
test
mov
sbb
dec
xchg
ret
std
jae
jp
cs
inc
cmp
fadd
cmp
mov
inc
mov
mov
repnz
out
sbb
mov
jne
mov
rcr
inc
push
repz
cmp
push
stos
xchg
xchg
lock
xor
sub
ja
es
inc
ficompl
sbb
mov
mov
or
sbb
outsl
rcrb
sahf
dec
cmp
incl
mov
xchg
fisubrl
out
push
or
or
lods
sub
or
loope
shll
xor
xchg
pop
cmpsl
lds
pop
or
sbb
add
sbb
pushf
push
pop
push
inc
mov
pop
shrl
add
imul
hlt
rcrb
push
sbb
push
ret
fdivrl
dec
dec
dec
imul
test
imul
inc
push
imul
xchg
sub
outsl
and
mov
sbb
adc
push
icebp
out
je
push
sbb
cmp
push
sbb
scas
sub
imulb
fistpl
scas
cmp
cs
lea
xor
sti
cmp
sarb
add
cmpl
push
outsb
inc
or
cmp
call
jl
or
push
jge
lea
dec
sub
les
rorb
add
loope
shll
fcmovnbe
xor
mov
cs
add
adc
hlt
js
mov
adc
sbb
pop
fldt
push
jmp
jecxz
ror
icebp
ds
jle
mov
jns
xchg
imul
xchg
cmp
inc
add
movsl
ja
xchg
popf
adc
ret
repz
mov
idivl
shll
es
mov
mov
pop
push
ret
xchg
push
sbb
imull
xchg
jge
into
and
lods
js
add
xlat
daa
push
fcomps
push
psubsb
jle
sub
push
js
dec
dec
fwait
sbb
mov
or
dec
pushf
popa
aaa
sub
dec
int3
aas
or
sub
loope
pop
insb
dec
inc
rorl
ret
outsl
or
ja
in
mov
iret
cltd
rol
jp
add
ror
and
jl
and
in
add
pop
out
aad
test
mov
cmc
inc
cld
out
scas
ljmp
iret
mov
in
pop
daa
fldenv
lods
push
lea
pop
jg
je
xchg
inc
and
pop
mov
mov
pop
or
mov
in
xchg
ja
lods
ret
add
sbb
loopne
mov
pop
sbb
out
xchg
pop
dec
adc
dec
scas
cmp
shlb
add
pop
sti
aaa
mov
pushf
push
push
and
lahf
cs
pop
mov
cmp
xchg
push
hlt
outsb
lahf
push
mov
out
push
bts
in
imul
out
mov
ret
fcomp
xchg
addr16
and
and
lock
mov
xor
daa
xchg
jbe
test
cmc
lahf
xor
fidivs
inc
rcrb
fists
jl
sti
arpl
lret
jp
out
in
push
cmc
fisubrs
je
ljmp
cmc
jl
dec
lods
stc
mov
pop
pushf
or
daa
cs
mov
or
cs
es
scas
arpl
daa
insb
cmpsb
sub
lea
xor
or
dec
icebp
scas
add
in
lods
iret
mov
lock
mov
jne
ds
add
gs
clc
fmull
pop
fldt
ds
addb
pop
xlat
mov
dec
dec
sbb
testb
movsb
lret
gs
in
jno
xor
hlt
lock
cmc
scas
fnsave
jge
dec
and
dec
outsl
insb
push
pop
imulb
js
pop
push
hlt
xchg
and
mov
mov
jl
insl
cli
jne
inc
icebp
cmpsb
or
cmp
cmp
ljmp
jne
pushf
cli
pop
adc
out
jecxz
push
outsb
adc
sub
testb
sti
or
aaa
sub
lret
push
fsubl
dec
add
sub
test
test
fsubrl
cmpsl
and
jl
popf
addr16
imul
cmp
xor
lods
mov
ret
cmp
lock
shrl
push
mov
xor
gs
incb
add
jge
adc
sti
in
movups
mov
xchg
xchg
pop
push
xor
push
fidivl
imul
idivl
out
in
xor
je
push
in
movsl
push
icebp
aad
xor
xor
jbe,pt
imulb
push
mov
fstpt
inc
data16
inc
outsl
sbb
or
cmc
mov
ret
mov
fdivs
xchg
ss
lret
imul
jne
cmp
sub
jno
das
push
add
or
mov
aas
pop
xchg
push
inc
and
loopnew
and
jg
test
les
fcomip
sbb
pop
cmpsb
sbb
dec
pop
pushf
aas
push
aam
pop
adc
mov
jl
mov
dec
pop
vsqrtpd
cld
add
or
bound
pop
imul
lods
xchg
dec
xchg
das
ljmp
in
xchg
xor
test
lods
push
imull
sbb
in
test
shll
ljmp
leave
push
xor
cmpb
jg
mov
lods
push
dec
cmpsl
in
fisubrl
cmp
cmp
aas
or
mov
inc
pop
lahf
sahf
popf
dec
hlt
push
lds
adc
sbb
cmc
pop
cs
dec
stc
lods
or
lods
je
jnp
data16
add
movsl
js
pop
jb
or
in
mov
xor
jge
sbb
xchg
mov
dec
cmpsl
cli
sbb
mov
jecxz
inc
das
and
dec
les
push
jge
push
dec
inc
arpl
aaa
jb
imul
jmp
lock
xor
test
mov
jge
data16
or
xchg
push
ret
ja
mov
pop
dec
mov
out
xchg
dec
adc
jp
inc
outsl
sub
loope
adc
pop
test
push
int
jle
adc
andl
or
jle
sub
int3
xor
jg
and
repnz
outsb
xor
push
fisttpl
jl
repz
xor
push
cmpsl
mov
or
lret
sub
inc
adcl
ret
daa
or
insl
cltd
and
fiadds
push
cmpsb
mulb
pushf
push
fidivl
xchg
mov
mov
xor
cs
mov
sub
enter
sbb
addb
stc
xor
lock
push
xor
mov
loop
xor
out
adc
leave
sbb
sub
jle
sub
cld
push
outsl
mov
mov
pop
jge
pop
sub
cmpsl
test
scas
add
jmp
insb
inc
xchg
nop
jl
add
js
jg
das
dec
push
clc
cmp
cmp
mov
fistl
dec
cmp
adc
outsl
push
push
or
pop
sbb
pop
arpl
ds
inc
cmc
scas
lea
imul
push
fbld
mov
aaa
or
loop
daa
xchg
mov
sarb
pop
icebp
ds
sub
jl
cmp
push
jns
movsb
jge
daa
mov
ret
fisubs
pop
push
and
jl
mov
and
jg
pop
mov
cwtl
int
mov
gs
or
out
je
pop
inc
dec
inc
sahf
jle
push
cmc
aam
jne
jle
mov
sbb
and
jle
pop
popf
dec
ss
adc
mov
fstpt
mov
mov
cmc
sub
rcr
sbb
pop
jl
fs
lock
xor
scas
mov
sbb
or
or
or
xchg
jge
lock
arpl
jp
jnp
arpl
add
jbe
cmp
xchg
pop
imul
or
loope
pop
lret
lahf
xchg
xchg
push
xchg
popf
lock
adc
xor
scas
lods
cmpsl
push
cmp
shl
cmp
and
pushf
xor
mov
imul
mov
adc
popf
imul
lcall
dec
cmp
xchg
cmp
out
and
pop
scas
ljmp
je
pop
out
sbb
pop
std
push
adc
mov
out
jns
je
cmp
push
fwait
pushf
shrb
xchg
test
cmpsb
add
cs
into
into
fdivrs
cli
mov
mov
xchg
ss
inc
sahf
sbb
ds
cmpsb
sub
dec
arpl
pop
fiaddl
cli
jl
je
ja
push
test
in
push
imul
jl
fwait
cmp
or
subb
mov
inc
sub
add
bound
jmp
pop
loope
sub
out
xlat
add
pop
outsl
iret
mov
or
movsb
imul
xlat
fidivrs
lret
lret
repnz
scas
je
clc
gs
push
aas
arpl
fisubrl
test
fldcw
clc
xchg
lea
ret
mov
fsubs
push
or
inc
jg
fistpl
ret
or
aas
jl
sbb
sub
pop
push
sub
jl
adc
or
and
iret
pop
lahf
mov
pop
fadd
mov
inc
xor
fldcw
das
xchg
or
or
lods
jecxz
inc
mov
jl
int
cli
dec
clc
pop
fldt
js
xchg
xchg
inc
stc
out
pop
hlt
add
out
push
xchg
cwtl
fcmovnbe
fwait
push
cmpsl
xchg
mov
and
add
sbb
jb
and
jmp
jecxz
fcomip
mov
sbb
sahf
push
popf
dec
rcrb
push
into
test
outsl
sub
mov
cmpb
cmp
addr16
or
cwtl
sbb
pop
fldt
ss
les
sarb
test
sbb
inc
lcall
fstpt
aaa
sbb
mov
xchg
sbb
lcall
shrl
out
pop
das
or
lcall
jecxz
imul
lock
insl
sbb
xchg
roll
lods
fucomp
xchg
xor
pop
dec
adc
int
mov
icebp
daa
lods
pop
outsb
dec
lcall
fistl
clc
hlt
xchg
int
push
hlt
xchg
fidivrl
roll
push
pop
jp
pop
dec
in
adc
clc
jle
mov
push
mov
fdivs
add
cmp
pop
push
imul
sbb
jp
or
aas
addr16
fstps
jecxz
dec
jle
lcall
negb
das
ds
fadd
cmp
jnp
cli
pop
js
xchg
popa
jp
stc
push
loope
pop
jnp
fwait
pop
xchg
adc
xchg
hlt
mov
jecxz
pop
cmp
gs
out
cmp
xchg
incl
aam
pop
push
mov
cmp
mov
outsb
mov
movsb
pop
cltd
pop
lcall
icebp
mov
mov
insl
sub
idiv
std
sbb
std
jne
in
mov
cmp
jns
insb
mov
popa
or
lea
aad
mov
jg
daa
mov
or
enter
sub
mov
inc
or
stc
dec
mov
popl
pop
out
sub
out
pop
je
pop
mov
jecxz
mov
mov
imul
fmuls
lods
ds
sub
mov
fsub
or
mov
ret
cmc
or
scas
adc
lcall
or
ret
shlb
jmp
das
dec
push
ret
cld
mov
jmp
aas
js
sahf
ret
xchg
sbb
test
js
sti
out
add
fcompl
lods
cld
stos
mov
jge
out
or
or
lea
mov
cmp
push
ds
negb
adc
and
sahf
jp
sbb
into
pop
or
or
shrb
aaa
push
mov
stos
imul
sbb
dec
cld
cmp
xchg
or
mov
or
mov
mov
sbb
jne
and
mov
mov
jne
jl
outsl
or
mov
ret
xchg
rorb
lods
into
call
scas
cli
mov
jle
jb
sbb
or
nop
jecxz
pop
mov
mov
dec
fdiv
int3
xorb
jae
pop
hlt
bsf
push
outsb
mov
daa
lea
idivb
inc
jl
in
scas
dec
push
clc
int
mov
push
fisttpl
jp
pop
add
int3
cmp
loopne
pop
filds
jl
insb
cmc
out
push
or
sub
sbb
cmpsl
push
mov
jge
iret
dec
clc
cmp
pop
je
test
movsl
dec
push
icebp
idiv
xor
xor
xor
or
orl
or
cld
mov
test
mov
mov
jl
int
insl
test
in
out
cmp
push
out
popf
push
fisttpl
jmp
ss
scas
fimull
mov
in
insl
mov
ja
iret
and
mov
cmc
hlt
mov
or
mov
mov
dec
imul
out
dec
insb
sbb
popl
add
outsb
lods
add
cmpsl
in
hlt
inc
sbb
sub
outsl
out
cmp
dec
lods
pop
movsl
arpl
sbb
xor
xchg
mov
int3
or
cltd
lea
pop
ss
das
xchg
popf
sbb
inc
cmp
xchg
lea
out
dec
lods
jne
sbb
dec
cmc
in
lea
dec
mov
scas
lock
mov
je
or
mov
mov
jbe
imull
dec
fsubr
imul
add
outsb
fnstsw
inc
lods
or
adc
pop
jno
iret
fldcw
mov
gs
fwait
lea
push
arpl
add
rcrl
ja
sub
mov
cli
add
push
ret
or
fucomi
xchg
lahf
aaa
mov
in
je
push
std
movsb
aam
cmc
fimuls
leave
in
mov
sarb
fimull
ds
push
dec
out
in
sbb
jl
scas
das
xchg
outsb
cmp
and
in
mov
aas
aad
sub
in
je
add
jae
inc
sub
push
ficomps
rorb
or
cmpsb
fst
dec
adc
mov
fs
pop
and
je
sbb
or
fucomip
iret
or
or
jl
or
push
push
mov
std
movsl
xchg
mov
push
add
insl
ljmp
push
or
or
xchg
test
cmp
data16
idivb
mov
cwtl
mov
test
pop
xchg
sahf
fistl
test
ds
mov
xchg
mov
fistpll
fs
jge
std
pop
inc
fldt
movsb
sbb
cli
adc
adc
jo
ror
cmp
push
scas
lcall
pop
inc
cmc
and
fsubrs
sbb
adc
aaa
aas
inc
sahf
sahf
adc
jle
outsb
lcall
push
sbb
sbb
outsb
out
lods
movsl
popf
ret
fsubrs
mov
dec
pop
jo
xor
negl
nop
imul
sbb
xchg
pxor
ffreep
jbe
mov
xchg
in
pmuludq
pop
scas
int3
mov
lock
and
cmpsb
pushf
stos
mov
jl
fisttpll
pop
push
sarb
xchg
jg
in
add
sahf
or
and
cmpsl
push
jge
in
sub
imul
jge
inc
pop
jp
cmp
push
lahf
imul
dec
int3
sbb
dec
dec
and
pop
fisttps
imul
sbb
scas
pop
or
mov
das
push
xor
test
mov
sbb
push
and
push
xchg
int
dec
popf
xor
stos
les
sub
in
loopne
fcomip
push
repz
mov
decb
pop
mov
dec
xchg
and
fimull
sub
bound
loope
insl
insl
fisubrl
jbe
or
pop
dec
dec
insb
mov
in
pop
test
outsb
pop
clc
pop
push
add
add
add
pop
fstpl
cmc
ds
push
jg
mov
cmp
push
popf
jg
lea
loop
outsl
outsl
inc
jae
mov
das
dec
xchg
movsl
push
sub
in
xchg
out
push
fstl
dec
push
sar
lea
cmpsb
sbb
aam
add
dec
pop
mov
insl
fmuls
ds
or
pop
packsswb
das
cmp
insb
je
or
sahf
hlt
sub
and
xor
dec
push
lea
dec
mov
lea
pop
mov
popf
adc
fmuls
outsb
popf
lods
xor
jp
out
mov
mov
outsb
hlt
push
and
aad
vshufps
iret
fdivrs
hlt
into
jg
int3
lcall
pop
cmp
xor
jle
js
sahf
outsb
std
jle
push
sbbl
aaa
mov
mov
sub
push
aaa
ds
das
arpl
lods
xchg
sub
insb
or
mov
mov
outsb
out
fsubl
daa
pushf
or
cmp
mov
cmp
js
out
fcomp
mov
scas
push
in
pushw
jg
outsl
push
pop
xchg
dec
imul
call
lcall
xchg
pushf
ret
out
shrb
cmp
sub
jl
adc
imul
xchg
push
pushw
aas
subb
int3
hlt
in
mov
cltd
int3
je
mov
cs
ret
jne
push
in
mov
pop
hlt
push
xchg
pop
mov
xchg
inc
imul
fiaddl
pop
adc
ja
pop
sahf
dec
rcr
fstpt
jp
mov
or
mov
outsb
lahf
mov
pop
in
pop
push
add
scas
jge
clc
inc
cld
push
jne
fucomi
aaa
fisttps
mov
xor
aas
xor
cmpsb
psrad
insb
out
inc
xchg
xor
pop
sub
push
ret
xchg
push
rorb
in
mov
outsb
mov
jne
jne
scas
push
ljmp
rcrb
pop
add
aaa
pop
dec
inc
rcrb
mov
jl
insb
dec
in
sarl
insb
ss
ss
fbld
iret
push
mov
lcall
pop
test
in
rcr
int
movsb
cmpl
scas
cwtl
dec
sbb
sahf
xor
cmpsb
fucomp
pop
mov
ds
divl
xor
iret
mov
and
sbb
outsl
mov
imul
mov
dec
cmpsb
gs
scas
outsb
cmpsb
out
xor
imull
das
hlt
mov
sahf
add
xor
dec
inc
push
rcrb
call
dec
jg
pop
mov
mov
mov
dec
and
ds
cmp
lods
sbb
or
mov
dec
adc
lahf
test
loop
pusha
push
insb
fisttpll
lds
pop
sbb
fcompl
filds
lahf
push
mov
cs
mov
rcrl
jb
sbb
sub
ds
sbb
xor
adc
shrl
or
pop
mov
cmp
ja
lahf
cs
ficompl
addr16
xchg
pop
adc
pushf
or
lods
xchg
jg
mov
fbstp
imul
shrb
pop
pop
dec
dec
mov
enter
rcr
aas
imul
cmpsb
in
out
outsb
insl
sti
rcrl
sbb
push
cmp
pop
ja
push
mov
pushf
fbld
or
faddl
pop
sbb
and
and
dec
mov
pop
aaa
mov
loope
lahf
xor
mov
ds
out
cltd
ja
push
or
push
fcmovb
lahf
sbb
push
ja
pop
inc
xchg
into
iret
fcomps
and
outsl
fimuls
cmp
sahf
xor
push
pop
mov
and
sbb
mov
in
push
jle
xor
pop
jg
jae
outsl
pop
pushf
insb
int
pop
mov
mov
fdivrl
in
push
pop
adc
pop
fiaddl
insl
push
test
mov
popf
mov
aam
imul
dec
data16
outsb
cmpsb
sarb
scas
lcall
dec
mov
popa
idivl
ja
jg
sub
mov
push
mov
sub
mov
jne
imul
mov
fistps
hlt
outsb
out
mov
jge
in
lods
adc
pop
jne
imul
fstpl
cwtl
cmc
cs
and
mov
dec
dec
das
rcr
outsb
pop
or
jne
mov
in
or
lods
ds
pushf
scas
jge
scas
push
ja
aas
mov
add
imul
pop
into
mov
push
mov
imul
fs
es
xchg
test
fisubrs
out
jle
sbb
movsb
adc
mov
adc
lret
or
push
aaa
movsb
ds
insl
adc
ljmp
dec
into
int3
test
xchg
fstpl
and
adc
movsl
outsl
xchg
dec
out
into
jle
pop
lret
addr16
push
inc
out
dec
mov
insl
jle
mov
fnstsw
in
addr16
movsl
popa
mov
mov
fiadds
aas
mov
sbb
cmpsl
cmpsb
push
mov
mov
testl
jge
out
sub
scas
push
mov
arpl
in
cmp
cmp
dec
or
adc
lods
out
js
scas
pop
mov
in
test
int
in
mov
push
cmc
sbb
mov
push
lret
jle
sbbl
insb
sbbl
insl
mov
push
pop
je
or
insb
sub
pop
out
test
push
pop
push
xchg
lret
addr16
mov
hlt
decb
aas
ret
ja
js
sub
xchg
arpl
in
cmpsl
scas
mov
outsl
push
mov
js
in
das
pop
dec
or
fldlg2
push
popf
inc
lods
jmp
sbb
mov
or
jle
pop
cs
pop
or
in
mov
pushf
push
jle
sbb
dec
or
out
xchg
xchg
sahf
jbe
ja
lret
arpl
add
jl
xchg
mov
outsb
scas
arpl
out
mov
jl
cmp
or
out
lea
out
outsb
ja
lods
ds
push
insl
orb
cld
rcr
adc
movsl
jg
scas
clts
xchg
mov
mov
or
js
sbb
pop
loope
outsl
out
dec
sar
insl
dec
outsb
jl
cs
add
sub
dec
inc
sub
insl
pop
mov
rclb
insl
cmp
mov
sahf
pop
push
std
das
daa
pop
adc
das
sbb
jge
syscall
iret
mov
hlt
in
cs
das
in
inc
rcr
dec
insl
pushf
cld
fisubrl
sub
or
pop
iret
movsl
inc
mov
into
sahf
int
push
shl
mov
jl
pop
out
dec
fstpl
test
push
xchg
in
ljmp
outsl
pop
loop
in
sahf
aaa
in
cmp
mov
mov
dec
out
or
iret
insl
mov
or
mov
and
sbb
pushf
pop
xchg
sub
xchg
mov
mov
and
lods
out
jp
scas
das
xchg
in
add
fldcw
popf
xchg
sub
in
int3
mov
ds
roll
das
popa
fisubrs
xor
mov
xor
lods
xor
outsl
fistps
les
cmp
cmpsl
int
push
lea
cmp
in
mov
pop
cmpb
or
and
push
push
int3
mov
hlt
je
pushf
pop
xchg
outsl
fwait
outsb
testl
mov
in
jp
lods
das
inc
insl
or
cltd
ds
out
out
dec
push
pop
scas
addr16
push
mov
mov
sahf
orl
fisubrl
testb
pop
sub
mov
push
ucomiss
mov
imul
mov
dec
and
shr
cli
les
fsubr
insl
lds
insb
mov
iret
ds
mov
aam
mov
push
in
mov
popf
cs
ret
shrb
in
pop
fstl
scas
inc
jg
mov
mov
ss
rcrl
out
mov
sbb
fldln2
clc
inc
lods
das
cld
push
sbb
dec
adc
dec
pop
clc
dec
mov
fcompl
mov
fnstsw
jle
fst
mov
in
lahf
sbb
mov
push
dec
xor
lds
sub
xlat
mov
std
test
fdivl
cltd
push
pop
cwtl
aas
das
push
pop
sbb
imul
pop
pop
int
jle
cs
push
out
sbb
push
xchg
jle
jge
pop
mov
scas
inc
mov
outsl
sub
outsb
or
fstps
in
adc
add
mov
rol
pop
js
mov
pop
fmull
pop
movsl
cs
ja
mov
mov
lret
out
dec
mov
movsbl
out
out
or
loope
insb
insb
dec
rclb
ret
lods
sbbl
je
iret
scas
dec
push
cmp
mov
aaa
dec
or
mov
inc
rolb
das
data16
add
data16
adc
out
ror
dec
cli
insb
scas
add
daa
push
cli
jl
cs
int3
and
dec
pop
cvttps2pi
sub
inc
push
sub
lods
dec
sub
or
lods
unpcklps
adc
out
dec
out
jmp
dec
jge
lods
adc
int3
xor
pop
xor
cmp
lahf
icebp
mov
hlt
out
cmp
mov
aad
add
jnp
orl
clc
test
push
test
or
xchg
push
imul
mov
push
jl
lea
push
cmp
clc
dec
lahf
fsubrs
pop
out
mov
adc
adc
mov
pop
mov
orl
dec
insb
fistl
fistps
pop
dec
push
in
lret
pmaxsw
mov
mov
push
fdivrs
shrl
sbb
xor
decb
outsb
aad
lcall
jge
outsb
cmc
test
mov
lea
out
push
mov
addr16
push
pusha
sbb
mov
rorl
lods
or
xchg
into
lret
addr16
insb
pop
mov
sbb
repnz
aas
cltd
gs
lods
hlt
jbe
mov
xchg
insl
aas
pop
push
addr16
mov
fldl
mov
insl
push
dec
out
sub
lods
xor
sahf
cltd
mov
pop
je
pop
sbb
fidivs
movsl
pop
bound
cmp
dec
subb
das
call
lahf
lea
jne
add
lea
call
je
bound
mov
sub
dec
fsubr
mov
outsl
hlt
mov
cs
pop
mov
dec
xor
cmp
push
ds
jge
pop
mov
out
aas
aaa
jle
cs
rcrb
sub
aaa
or
idivl
jmp
adc
test
in
xor
mov
mov
movsl
push
cmc
jge,pn
mov
int3
cmp
imul
cli
jbe
pop
mov
aas
ja
sub
mov
cltd
dec
aas
pop
rcrl
pop
shll
cld
cltd
lods
jl
jmp
dec
cmc
jle
mov
mov
outsl
ret
pop
cmp
mov
xor
adc
into
push
stos
sahf
cmpsl
das
aad
xor
cmp
std
lahf
insb
das
movsl
sbb
xor
add
shlb
jge
xlat
fmull
sub
jge
mov
pop
mov
imul
jge
in
or
outsl
popf
inc
mov
ljmp
mov
mov
fists
cmpsl
ret
push
cmp
xlat
rcrl
loop
xchg
sub
fstpt
mov
jae
mov
faddl
out
int
xor
ja
xchg
pop
mov
sub
cmp
std
popf
sbb
xor
notl
lods
mov
fistpll
adc
in
fmull
cmp
sbb
cmpsl
pop
je
xchg
jmp
js
inc
imul
out
xor
enter
in
dec
hlt
mov
add
mov
jne
movsl
pusha
addr16
sbb
mov
and
dec
or
xchg
test
int
mov
sbb
int3
cltd
xchg
xor
xchg
dec
es
pop
pushf
insl
test
arpl
mov
int
in
push
std
mov
mov
dec
mov
ds
xor
or
rcrb
sahf
pop
cwtl
scas
popa
pop
mov
pop
addr16
testl
aas
inc
inc
or
outsb
outsb
or
cmpsb
into
mov
outsb
cmp
push
fsubrs
adc
enter
mov
mov
leave
xchg
inc
lods
cmc
add
shrb
test
cs
xor
cmpsb
insl
fmuls
ficoms
cmp
xchg
pop
mov
push
and
in
int
pop
pop
push
scas
imul
imul
xor
dec
into
mov
arpl
es
out
sahf
dec
lods
sarl
sbb
hlt
xchg
xchg
fisubl
or
data16
arpl
mov
outsb
sbb
arpl
es
ficompl
in
mov
mov
dec
in
and
cmp
dec
in
and
push
cmp
hlt
xchg
mov
mov
dec
in
jl
mov
lcall
je
test
push
sub
mov
int3
dec
jbe
movsb
cld
rclb
popf
loop
lret
lds
sub
and
lret
les
insb
cs
insb
je
into
cs
mov
xor
xor
imul
ds
in
lods
insb
mov
jl
dec
sub
outsb
mov
cmp
imul
push
cmp
sub
outsb
adc
inc
dec
jbe
movsb
jne
lcall
xchg
lds
aad
shr
cmp
dec
jbe
or
fcmovbe
jg
push
movsl
jge
les
mov
call
movsb
shl
lcall
movsb
inc
rcrb
stos
fstps
jne
push
or
jbe
stos
mov
stos
mov
pop
sub
stos
xchg
std
lcall
push
movsb
cs
outsb
inc
sub
pop
xchg
jbe
jbe
movsb
sahf
rclb
xchg
fisubs
pushf
fnstcw
dec
jbe
movsb
outsl
rcrb
stos
xchg
ss
xchg
movsb
xchg
pop
sbb
insb
in
fistps
dec
push
aas
out
das
fimuls
mov
lods
outsb
and
mov
xor
es
loopne
out
outsl
aaa
fiadds
inc
call
xor
xchg
enter
negl
movsb
jno
jmp
out
test
sbb
mov
addr16
ds
in
iret
sub
mov
inc
in
add
jle
xchg
dec
mulb
sarb
movsl
cmpsl
add
dec
movsl
mov
ja
out
mov
lods
xor
mov
lods
je
mov
mov
sub
xor
push
imul
mov
das
push
fcomps
mov
xor
xchg
in
dec
add
imul
xchg
mov
xchg
xchg
adc
movsl
dec
mov
xor
xchg
aad
sub
dec
cmc
xchg
push
add
xor
lods
cli
testl
out
shrb
cmp
dec
pop
insl
lods
adc
in
xchg
lods
add
cmpsl
in
dec
adc
adc
pop
adc
shrb
imul
adc
sbb
cmc
push
leave
into
push
jmp
cmp
adc
dec
push
xchg
outsb
add
enter
shrb
dec
mulb
pop
push
sub
pop
mov
inc
ret
mov
sarl
gs
pop
jg
outsl
pop
ja
sahf
daa
repnz
mov
ds
aad
xchg
jbe
flds
mov
nop
into
cmpsl
pop
aam
xchg
in
incb
xchg
add
fdivr
adc
daa
lahf
aad
ja
insb
int3
or
dec
iret
adc
testb
sarb
fbld
mov
cmovbe
pop
sub
imul
inc
fsubrl
pop
jbe
mov
cs
cs
mov
imul
cmpsl
dec
adc
insl
popa
add
enter
xchg
mov
pop
leave
in
enter
cmpsb
inc
cmpsl
jne
outsl
dec
pushf
dec
addr16
outsb
sahf
push
outsb
in
push
das
cld
add
insl
es
mov
push
jne
jge
push
lea
movsl
dec
push
pop
mov
insl
dec
jge
je
movsb
dec
ljmp
push
push
sbb
mov
push
dec
xor
fucomp
mov
pop
xchg
mov
les
sbb
pop
ja
outsl
pop
xor
outsb
fadds
outsb
and
shlb
shlb
shlb
shlb
shlb
shlb
or
unpcklps
outsl
sbb
sub
std
fiaddl
fimuls
mov
push
xchg
pop
mov
jl
test
mov
imul
in
test
inc
mov
sahf
mov
jl
cmovno
jne,pn
sub
xor
jne
xchg
rcrl
sbb
imul
mov
push
in
insb
arpl
mov
fs
mov
xchg
mov
shll
movb
sbb
push
insb
test
je
jge
push
push
push
dec
shlb
mov
clc
xor
sti
push
enter
aaa
dec
test
inc
rcl
in
out
mov
out
mov
decb
pop
mov
daa
mov
das
mov
aas
mov
lea
adc
jne
jnp
dec
or
outsb
int3
xor
jnp
inc
or
fs
test
sbb
in
test
gs
mov
outsb
je
lods
mov
pushf
lcall
mov
dec
sbb
out
arpl
insl
rcl
hlt
inc
dec
mov
faddl
insl
aad
mov
mov
imul
lcall
sbb
out
insb
mov
push
pop
cmpsl
push
xor
movsb
xor
push
mov
mov
je
dec
cmpsl
jl
decl
sbb
testl
mov
ficoms
jle
fcmove
std
cli
pop
mov
mov
xor
mov
pop
mov
mov
adcl
jmp
jle
cmp
mov
push
pushf
stc
das
lahf
cs
mov
dec
jl
pop
out
lahf
jl
jle
mov
pop
rcll
jp
lahf
cs
mov
rclb
insl
jle
cmp
es
push
incb
daa
popf
sbb
pop
fiadds
ret
jge
cld
push
iret
stos
inc
cmpsb
and
xor
arpl
jl
ja
aas
mov
pop
push
fucom
std
xor
ds
jle
scas
movsl
or
into
pop
xchg
mov
pop
pop
movl
add
or
movsb
sub
hlt
mov
loop
pusha
inc
pusha
xor
and
and
loop
bound
loopne
pusha
aam
les
pusha
movsb
pusha
xchg
pusha
test
pusha
fs
push
pusha
inc
pusha
xor
and
adc
add
lock
xlat
jno
xor
jo
xor
xor
inc
xor
or
scas
pop
pusha
pop
pusha
mulb
pusha
pusha
pusha
mov
cmpsb
pusha
xchg
pusha
xchg
pusha
pushaw
push
pusha
inc
pusha
ss
es
push
pusha
push
push
aad
shlb
jne
rclb
outsl
loop
pop
inc
xchg
addl
out
pop
out
push
and
mov
scas
sti
adc
mov
cmp
fsubr
in
pop
inc
movsb
or
mov
sti
fiadds
push
sbb
and
mov
mov
sub
add
inc
pop
jg
sti
sahf
dec
out
xchg
ds
fstpt
add
sbb
dec
lcall
pop
ljmp
aas
sti
into
xlat
scas
pop
pop
repz
ss
bound
mov
sbb
push
xor
mov
out
ret
dec
inc
outsb
push
lret
je
mov
out
add
loope
hlt
imul
push
jae
sbb
lock
cmpsl
popa
mov
out
fstpt
and
jecxz
subl
aas
vandnps
xor
pop
pop
jb
das
jmp
jecxz
sti
out
jmp
or
dec
scas
mov
rcrl
fcomps
scas
sarl
add
out
das
or
test
iret
ja
pusha
fcomip
jecxz
cmp
xchg
into
bnd
mov
cmc
cld
neg
jecxz
sbb
out
cmp
pop
out
cmpsb
sti
cmpl
push
push
fstl
jmp
jg
leave
inc
outsb
jp
aam
aas
adc
sti
push
jecxz
arpl
out
cmp
aad
cs
jno
jl
dec
sbb
fisubrs
pop
push
mov
mov
les
jb
ss
cld
cltd
pop
cmp
push
inc
fnstenv
outsl
pop
cld
push
pop
mulb
jns
xchg
std
mov
ret
cmp
lahf
jle
filds
insb
aaa
jno
imul
pop
aas
data16
mov
int
mov
stos
xor
xchg
fnstenv
lock
outsl
fcomip
pop
jl
dec
fidivs
sub
fwait
out
mov
xchg
in
ds
repz
iret
js
adc
enter
lock
xchg
ror
idivb
mov
mov
fsubrs
jecxz
mov
mov
sbb
dec
fxch
fcmovbe
shll
adc
mov
mov
aaa
pusha
mov
xor
add
cmpsb
xor
fldcw
sbb
or
inc
scas
push
xchg
pop
jecxz
cmpsb
testl
hlt
lahf
cmpsl
mov
mov
sbb
test
mov
in
xor
flds
cmpb
sti
xlat
icebp
dec
aas
in
das
cmpsb
xor
clc
add
iret
shlb
mov
mov
stc
mov
sbb
jg
mov
mov
mov
add
aas
push
ds
cltd
pop
fldt
mov
and
jp
aas
std
imul
cmpsb
cmp
stos
jg
iret
fisubrs
jmp
fs
mov
inc
ds
into
shll
in
fimuls
pop
lds
shll
inc
lods
outsb
cvtdq2ps
xor
mov
sbb
fiaddl
fmulp
fs
scas
iret
lahf
add
icebp
icebp
fadds
call
xor
and
clc
inc
mov
pop
testl
loope
icebp
js
mov
iret
hlt
sub
or
jns
icebp
adc
fwait
shrl
or
loope
ret
push
and
into
mov
loop
jnp
pop
mov
cltd
jnp
xorl
scas
push
mov
mov
xor
pop
loop
sbb
jmp
in
xchg
lock
rolb
mov
lret
push
lahf
fcomps
mov
sbb
pop
mov
mov
notb
loopne
daa
mov
cmp
out
mov
dec
sbb
ret
daa
jmp
pop
sti
dec
jno
outsb
pop
daa
cmp
outsl
xor
jns
pop
stc
lahf
aad
pop
mov
clc
dec
mov
lret
popf
cmp
clc
lret
clc
jl
repz
ds
cvtpi2ps
pushf
in
into
and
push
ss
out
outsl
jno
sahf
jns
sub
jecxz
lods
out
arpl
out
nop
out
jmp
pop
popa
add
int
push
pop
pushf
adc
clc
sub
lret
test
fisttps
and
stos
scas
lret
xor
gs
iret
div
repz
push
clc
jecxz
lods
imul
stos
rorl
mov
and
sub
mov
fistpl
or
rorb
rcl
imull
ja
mov
pop
aaa
mov
jnp
pusha
add
dec
mov
ljmp
adc
iret
xchg
cmp
aaa
mov
outsl
and
loop
imulb
mov
xor
into
icebp
or
sahf
in
out
jnp
xor
shrl
mov
sbb
and
cs
push
in
popf
jge
push
mov
mov
add
xor
push
insl
mov
std
jecxz,pt
mov
test
push
fists
adc
fsts
xchg
out
mov
mov
js
out
into
ret
mov
push
sbbb
or
mov
das
jle
dec
out
aas
mov
out
popa
ficomps
mov
sahf
or
mov
iret
mov
xchg
into
stos
cmpsb
leave
cmp
or
cmp
mov
aad
xchg
icebp
inc
out
add
jge
xor
xchg
popf
push
mov
repnz
repz
je
lods
in
cmc
mov
dec
shl
outsl
push
lret
pop
lods
iret
inc
fisttpl
test
lret
cmp
in
push
jbe
das
pop
lods
out
adc
adc
shrb
sbb
push
mov
and
xor
mov
popa
bswap
sub
ds
addr16
out
pop
icebp
shufps
jbe
out
pop
jge
in
pop
push
popa
pop
jns
mov
cs
outsl
fwait
out
ja
imul
icebp
mov
scas
jbe
jmp
jns
xchg
rcll
into
into
mov
add
outsb
adc
addr16
frstor
push
fists
push
mov
shl
popf
cli
mov
mov
ret
cmpsl
sub
scas
aad
lret
mov
dec
out
outsl
pop
jecxz
xor
lret
repz
outsb
aas
jbe
cmp
lahf
nop
int
jae
mov
push
or
mov
pop
popa
jecxz
push
dec
sarb
xchg
push
ss
outsl
fidivs
jns
pop
dec
lret
mov
sub
xchg
sbb
mov
jge
and
mov
pop
jg
aad
in
outsl
faddp
xor
sahf
dec
and
jmp
jns
pop
or
outsl
mov
leave
ljmp
jb
adc
ljmp
jnp
in
pop
leave
sahf
out
in
cmc
clc
dec
or
clc
fucomip
imul
insb
sti
pop
or
lods
rcrl
in
cli
push
leave
icebp
clc
rdmsr
ja
cli
filds
cmp
stc
lret
test
push
and
out
xlat
std
xor
add
into
jns
or
fcomip
into
sbb
pop
aad
pop
icebp
mov
sarl
cmc
jae
adc
or
iret
leave
lods
mov
stc
push
lret
fcmovnu
rcr
ficoms
mov
jmp
repnz
push
sub
jnp
psraw
psubw
and
imulb
lret
leave
ret
jle
ja
scas
and
push
mov
lock
outsl
sahf
mov
and
mov
gs
pop
cmpsl
addr16
insb
out
cld
into
push
ret
lods
ja
xlat
mov
xor
out
icebp
adc
push
mov
fildll
lock
mov
sub
cmp
xor
cmpb
adc
or
outsb
mov
outsb
xchg
notb
into
mov
divb
je
daa
pop
cltd
outsb
xlat
mov
mov
xor
out
mov
andl
shrl
sub
aad
pop
lock
or
loop
fbld
lret
or
pop
adc
or
mov
bound
ror
into
xor
das
in
push
neg
pop
cld
ljmp
subl
stos
sbb
sarl
ljmp
sub
out
loope
lock
push
insl
inc
mov
addr16
jmp
or
ds
mov
aas
jmp
inc
inc
fisubrs
xchg
cltd
fmuls
outsl
movb
cli
ret
pushf
stos
aaa
fcmove
jns
nop
out
jno
roll
lahf
cs
sub
fisttps
lret
jg
stc
cwtl
test
xlat
fcomip
pop
in
lahf
mov
inc
sbb
aaa
aas
rcr
or
in
xchg
pop
mov
scas
and
jno
ret
mov
lahf
mov
scas
out
icebp
jnp
imul
icebp
je
loopne
sti
push
aaa
fcmovne
shr
fldenv
icebp
sub
pop
ja
out
aad
sti
sbb
sbb
imul
jns
cmc
jnp
imul
jle
add
adc
movsl
frstor
test
push
lret
insl
imul
out
pop
push
push
repnz
jmp
cltd
xlat
aad
sbb
xchg
jle
lahf
fldl
pop
fistl
int3
mov
repz
in
shlb
push
in
xchg
and
dec
mov
add
out
icebp
shrl
mov
jbe
mov
jle
repnz
mov
mov
dec
and
sti
insb
imul
sbb
jg
lret
pop
std
push
scas
ja
insb
jle
shl
push
repz
fbstp
xor
lods
hlt
jle
mov
shr
lods
pop
repnz
in
mov
stc
xor
stc
out
icebp
std
js
xlat
add
push
pop
into
jg
adc
mov
pshufw
jg
mov
psubd
nop
dec
out
pop
pop
sahf
pop
sbb
mov
repz
arpl
testl
dec
outsb
xchg
push
mov
or
jg
cmp
pop
sub
scas
iret
fimuls
mov
pop
hlt
lcall
lahf
mov
imull
pop
rcl
xor
mov
mov
outsb
mov
xchg
dec
decb
sbb
jmp
push
in
aas
cs
mov
out
xchg
stc
xor
add
push
dec
into
xor
mov
stos
mov
mov
movsl
jge
popf
pop
jnp
out
mov
cmpl
fdivl
jne
xor
jp
loopne
xlat
and
sbbb
add
push
cwtl
movsb
les
enter
shll
rcr
adc
and
cmpsl
mov
adc
adc
push
divl
cld
sti
aaa
mov
push
mov
ja
std
jmp
pop
lret
scas
roll
ud0
xor
pop
ffree
mov
xchg
sti
outsb
sub
pop
sarl
leave
jmp
pop
loopne
fildll
lahf
xchg
xchg
icebp
das
or
pop
iret
sub
jmp
clc
in
sahf
pop
divl
pop
mov
jg
lods
lahf
test
mov
pop
jnp
pop
mov
ljmp
mov
sti
push
fistps
add
dec
jg
cld
cli
pop
fwait
sub
cmpsl
push
fistpll
mov
or
push
fisubl
int
mov
dec
sbb
xchg
pop
mov
inc
mov
adc
inc
cs
push
dec
fmull
outsl
aas
jbe
fdiv
adc
std
sbb
pop
sysenter
push
cmp
mov
clc
ret
lret
push
mov
mov
mov
inc
cmp
std
or
movsl
ret
scas
xchg
push
mov
mov
pop
dec
xorb
adc
jge
daa
pop
mov
push
and
addl
in
repnz
lcall
rol
xchg
in
add
outsb
push
int
dec
mov
jns
cmpsb
hlt
or
pop
jg
xchg
mov
jns
mov
out
xchg
leave
ds
pop
push
xchg
xchg
xlat
ja
add
jb
aaa
mov
cmpsl
push
xchg
sbb
out
jns
mov
test
in
repnz
push
les
jmp
push
arpl
ja
mov
outsl
out
sti
gs
cwtl
call
daa
adc
push
sub
fidivl
sub
pop
or
pop
jbe
sarl
fmul
lcall
mov
outsb
in
stc
fisubrl
push
sub
shll
fcomps
jg
sarl
or
cmp
fs
xlat
repz
shrl
call
pop
outsb
jo
es
mov
mov
mov
xchg
fcomi
xor
pop
jb
lahf
add
mov
jmp
jg
mov
add
cli
fistps
add
pop
ficoml
jbe
mov
push
cmp
adc
iret
jmp
sbb
cmp
jle
fisttpll
jb
aam
mov
or
push
lret
stos
pop
dec
xchg
or
mov
mov
jg
sti
pop
jnp
aad
adcl
jbe
jbe
push
cmp
cmpsb
sbb
mov
sub
mov
test
ljmp
cmp
movsb
jae
cs
clc
repz
add
cmc
push
stc
add
sub
mov
xor
xchg
imull
mov
out
mov
sbb
fs
gs
mov
push
push
adc
lret
xorb
shlb
aad
insb
das
pop
fildll
pop
dec
mov
negl
mov
mov
mov
pop
fidivrs
jge
adc
scas
out
bound
outsb
or
faddl
adcb
scas
mov
pop
sahf
aaa
dec
pop
pop
stos
mov
out
pop
outsb
mov
mov
pop
dec
pop
add
mov
dec
lahf
out
rcll
inc
scas
iret
fpatan
sti
insb
icebp
add
and
repz
ret
fs
cmp
loope
nop
xor
loope
sub
movsl
xchg
incb
adc
fucomip
shll
push
pop
mov
or
cmpsl
out
jl
ljmp
ret
bound
push
pop
xchg
insb
push
fisubs
sarb
cli
adc
sub
ja
add
loopne
jg
in
pop
xor
into
loop
dec
mov
sub
pop
jae
or
imul
cmpsb
push
fistps
dec
sar
push
arpl
imul
cli
cmp
cmp
and
fnstcw
xchg
cmp
xchg
lret
fistpl
mov
jmp
dec
scas
jno
jnp
movl
push
pop
push
xor
mov
leave
aaa
shl
inc
aaa
dec
push
mov
jbe
mov
or
out
sbb
jl
pop
pushf
movsl
pop
hlt
lahf
dec
xor
mov
pushf
pop
repz
jno
mov
in
mov
mov
int
xlat
test
cmp
imul
lea
xchg
fsubs
fisttpll
je
jp
ja
ja
outsb
mov
sub
mov
test
xor
iret
aad
cmp
fidivl
fnstsw
or
push
jbe
mov
mov
out
scas
dec
pop
in
in
fwait
or
outsl
dec
xchg
insl
sub
out
leave
fdivl
popf
dec
popf
idivl
ja
jnp
or
jg
imul
popl
daa
fistps
mov
push
imul
daa
das
stos
inc
pop
lods
int3
sti
fsubs
push
leave
es
jno
push
add
mov
fld
pop
aad
cli
mov
ret
subl
shl
adc
mov
xor
push
clc
pop
out
pop
pop
sti
stc
stc
cs
sar
or
ret
insb
nop
xchg
outsl
push
ss
push
enter
push
lret
or
add
fistpll
or
iret
into
jle
jg
mov
frstor
push
jmp
adc
mov
push
or
js
das
mov
scas
hlt
push
mov
mov
adc
jl
lock
loop
testl
pop
jl
add
jbe
scas
fsubrp
idivl
outsl
lahf
mov
mov
aas
daa
push
clc
lock
jae
insl
inc
gs
cld
push
fwait
pop
popa
lcall
sbb
negl
xchg
fdivr
fildll
out
xor
ds
dec
jmp
mov
lods
push
jecxz
lahf
cs
jmp
xor
fisubrl
adc
jmp
icebp
imul
roll
hlt
aas
jg
dec
sub
push
push
flds
xor
jl
or
std
pop
ret
inc
adc
call
hlt
in
test
sub
push
inc
mov
out
mov
repz
fs
push
fadds
adc
or
cs
mov
mov
cld
out
adc
and
aad
mov
fdivrp
lock
es
fscale
sbb
lods
add
lock
pushf
out
ss
jmp
jmp
test
jecxz
mov
xchg
in
lea
or
les
imul
mov
icebp
lret
jmp
fwait
out
fcmovnu
decb
push
mov
mov
in
dec
pop
fldcw
scas
outsl
push
jecxz
nop
fists
cltd
push
notl
out
sahf
lea
xchg
and
cmpsb
or
arpl
popa
scas
fidivl
xor
out
and
xor
cmc
inc
aas
and
sub
clc
lahf
int
mov
imul
out
sub
das
jns
pop
dec
xchg
mov
jb
dec
ja
les
xor
jae
repz
sbb
mov
push
neg
pop
mov
aam
jno
pop
jg
mov
repnz
mov
scas
jmp
ret
mov
inc
loop
inc
mov
jmp
cld
add
jmp
push
pop
std
shl
ss
adc
xor
jmp
sti
and
jg
xlat
and
adc
and
pop
push
cli
sbb
cwtl
test
insb
ret
divb
aad
add
mov
pop
fstl
notb
adc
aad
out
call
or
mov
sub
fmull
ret
and
pop
sbb
in
mov
divb
data16
and
mov
cmpsl
out
mov
push
mov
mov
imull
jo
jg
sbb
pop
std
jge
jl
popf
ljmp
cmpsl
lods
addr16
aaa
fwait
xlat
xchg
jbe
cmp
fsubrl
and
jp
mov
push
and
pop
mov
jl
lret
add
fidivrs
sub
lahf
mov
or
ss
inc
lret
mov
mov
add
cs
sbb
cmc
push
loop
mov
or
scas
jae
icebp
je
aas
sbb
ss
sti
xor
outsl
test
shl
adc
icebp
dec
iret
push
jl
in
aas
mov
leave
popf
aaa
add
xchg
pop
mov
in
repz
aad
fucom
jns
sti
test
shlb
testl
loopne
jnp
jb
fucompp
cs
mov
dec
jecxz
out
gs
mov
ljmp
add
mov
outsl
scas
fmulp
mov
adc
lds
shll
pop
inc
mov
cmp
mov
sbb
mov
stos
mov
shl
cmp
sbb
xlat
test
fwait
jge
dec
mov
push
ja
xchg
test
iret
out
repnz
insl
xchg
stos
rcrl
cmp
repnz
jmp
or
jg
inc
mov
cwtl
ljmp
mov
mov
inc
into
pop
fwait
sahf
std
xor
sub
xor
fbld
jg
insl
int
out
mov
xor
rorb
inc
jmp
cmc
out
aam
das
mov
fldt
ja
out
or
les
mov
inc
mov
scas
inc
mov
iret
mov
mov
jg
aas
lret
pop
fucomi
fimuls
sbb
push
mov
dec
sbb
mov
aam
jo
xchg
mov
push
scas
addr16
std
aad
leave
and
or
fucomip
mov
inc
jmp
fistpll
call
daa
pop
test
out
cli
mov
mov
jmp
xchg
push
lret
mov
fsub
icebp
or
negl
cmpsl
cmp
add
test
sub
std
pop
fldt
shll
push
mov
lcall
fneni(8087
mov
adc
push
and
ljmp
fprem
push
sbb
out
mov
jg
ret
sub
movl
and
mov
fldl2e
sub
or
xor
iret
push
xchg
cmpsb
pop
push
or
sarl
ficomps
mov
pop
add
jns
dec
out
rorl
insb
fwait
push
cmp
int
jae
mov
out
leave
out
lahf
shll
pop
and
cmc
leave
xor
js
sbb
inc
loope
xor
sub
leave
pop
in
or
es
fistpl
push
pop
repz
cmp
pop
outsb
mov
and
iret
hlt
jo
add
cs
jge
scas
ds
std
push
rcrb
add
xchg
sar
jne
in
gs
repz
or
and
popf
shll
arpl
xchg
jb
int
loopne
ja
and
mov
adc
jmp
sbb
repz
sbb
and
xor
fbld
mov
iret
push
push
sbb
xor
leave
testb
xchg
lock
into
aad
pop
mov
fwait
pushf
clc
jl
scas
shrl
repz
xlat
negb
cwtl
sbb
mov
dec
rcrl
mov
xlat
add
xor
sarb
icebp
cmp
sub
sub
cmpsl
out
stc
js
out
sub
mov
jecxz
or
pop
fs
packuswb
cmp
div
or
pushf
cs
ds
xchg
arpl
pop
pusha
clc
pop
mov
mov
out
das
push
movsl
mov
cmpsb
add
stc
jecxz
lahf
or
in
mov
mov
test
push
pop
dec
cmp
jmp
sub
pop
mov
rcl
std
sub
mov
repz
push
push
add
jp
nop
pop
mov
scas
pop
jl
sbb
cli
repz
adc
jae
andb
cmp
fcmovnbe
hlt
pop
mov
shrl
mov
out
cmp
jo
rcrb
and
shrb
cmp
pop
mov
data16
jp
and
or
or
push
in
pop
stc
pop
jns
dec
cli
jmp
sti
mov
xchg
in
xchg
jno
and
mov
xchg
enter
add
test
sub
or
or
nop
sub
cmc
test
inc
lahf
sbb
fxch
test
cmp
fwait
dec
fstpt
std
or
push
std
scas
out
or
mov
mov
ljmp
ss
cld
scas
push
pop
test
mov
popf
ljmp
jecxz
push
sbb
clc
inc
jl
rcrb
out
idiv
ror
sti
out
mov
rol
fisubl
mov
xor
cmp
xor
das
cmpsb
or
in
mov
roll
pushf
ja
sub
clc
adc
icebp
pop
add
xchg
rcl
loopne
adc
das
into
jg
jg
xchg
mov
mov
jecxz
imul
and
jnp
sbb
sub
or
jl
jnp
lock
out
lcall
repz
mov
xchg
fsts
test
lods
aaa
cmp
inc
push
jo
mov
sahf
js
lock
out
shlb
cld
scas
rolb
not
xchg
mov
out
adc
push
jb
scas
scas
cmp
adc
mov
and
repz
out
sub
sarl
stc
push
leave
sarb
mov
adc
xchg
fidivl
mov
iret
sbb
or
outsl
sub
rorb
jle
xchg
ret
xchg
in
movsl
test
jge
mov
lods
xchg
ds
icebp
aas
iret
adc
jg
mov
add
ds
xor
adc
fdiv
cmpsl
jle
dec
fistpl
inc
add
inc
pop
pop
imul
cmpsb
mov
in
sbb
mov
imul
in
adc
cmc
pop
and
test
sbb
ror
sub
dec
sub
jg
clc
js
repz
fmulp
gs
ret
mov
mov
xor
mov
fstpt
test
out
insl
fstl
fdivp
mov
loopne
std
sbb
jle
add
mov
push
filds
add
lcall
dec
mov
les
xchg
out
adc
cltd
sub
inc
std
xor
lock
fcompl
in
jecxz
mov
scas
jge
pop
pop
push
push
outsl
push
or
aas
scas
adc
jae
es
dec
fildll
jbe
mov
sub
pop
pop
scas
outsb
pop
int
enter
mov
or
mov
jae
clc
sbb
or
mov
or
jns
jnp
sub
data16
push
hlt
out
mov
mov
xor
jns
pop
pushf
adc
fwait
mov
sahf
int3
add
sbb
sub
icebp
lock
mov
aas
ss
mov
xchg
mov
mov
das
rcrb
fsts
fisttps
pop
aad
push
dec
pop
mov
aas
mov
pop
mov
fsubr
nop
loope
cs
mov
xchg
adcl
rcl
jmp
repnz
pop
pop
add
ret
push
fnstenv
sbb
cli
fsubrl
int
arpl
pop
fldenv
adc
mov
fsubrl
jg
test
gs
and
in
rclb
xchg
loop
mov
dec
orb
sbb
mov
mov
jp
clc
fcmove
jmp
cmp
jg
rolb
mov
and
repnz
outsb
cmpl
xchg
in
popa
icebp
testb
aam
jp
and
cltd
lret
out
sti
cmp
icebp
add
rol
mov
mov
sub
jae
fucomp
sbb
add
dec
sub
push
cmp
mov
dec
ret
pop
dec
movsl
outsl
adcl
inc
cltd
repnz
mov
mov
push
popf
pop
movsl
pop
fstps
adc
xchg
fbstp
jb
push
push
lcall
inc
mov
mov
test
cmc
cld
out
add
rorl
pop
hlt
hlt
jb
add
adc
in
cmp
les
shll
inc
push
inc
dec
pop
lret
stos
leave
jl
outsb
stos
adc
leave
mov
inc
push
inc
scas
in
dec
sbb
cmp
rcr
xlat
push
out
sti
or
das
add
lods
out
mov
aaa
or
jge
out
leave
sbb
jg
jbe
adc
test
jecxz
ds
imul
leave
imul
cmp
gs
lret
sub
fcmovnbe
add
fnstcw
frstor
fstl
loopne
cs
das
xchg
jns
aaa
imul
cli
imul
out
cmp
inc
lods
sub
pop
flds
out
cs
push
out
pop
jmp
dec
xlat
popf
pop
stos
or
sub
adc
sbb
popf
or
faddl
out
dec
jmp
jb
in
icebp
ja
in
xor
mov
bound
aas
cli
mov
nop
je
fidivrs
aas
pop
pop
adc
cmc
inc
xchg
sbb
and
fbld
mov
mov
pusha
mov
jp
mov
int
lods
mov
leave
mov
adc
cmpxchg
dec
cmp
xor
fcmovnu
dec
ret
inc
sub
decb
dec
xacquire
add
cmpsl
out
loopne
push
sbb
fimuls
or
inc
cli
test
jmp
inc
add
dec
lret
leave
iret
mov
fistpll
in
or
out
das
fdivr
iret
in
cld
cs
push
imull
repz
out
adc
and
mov
xor
add
enter
jecxz
mov
fwait
inc
push
xor
mov
mov
nop
mov
aad
push
fldt
incb
jae
popf
lret
mov
lods
das
jmp
int3
aaa
sbb
das
sub
dec
jno
aaa
lods
fwait
adc
fists
mov
xlat
nop
sub
mov
loope
dec
lds
mov
lahf
cwtl
repnz
mov
sbb
or
mov
hlt
jae
ljmpw
test
stc
or
orb
cmp
xchg
out
or
cld
sub
popa
aad
adc
jecxz
gs
cmp
push
stc
insl
sub
mov
xlat
mov
dec
shrl
ret
xor
scas
leave
push
xor
insl
sbb
negl
sub
clc
xchg
jno
sbb
jg
jnp
xor
pop
cmp
test
mov
arpl
xor
jbe
icebp
jmp
adc
mov
jge
cmp
jno
mov
sub
jnp
dec
mov
push
inc
int3
hlt
or
ret
shlb
out
rorb
mov
mov
xor
stc
push
aas
or
inc
in
jmp
pop
mov
xchg
cs
clc
sbb
leavew
mov
jg
mov
mov
adc
inc
fbstp
imul
mov
mov
je
aad
and
in
aam
cli
jb
jmp
xlat
scas
and
and
pop
ret
sub
popf
mov
stc
add
ss
cwtl
xchg
lret
testl
cmp
clc
xchg
xchg
fisttps
xchg
and
push
fidivrs
inc
fcompl
mov
jnp
pop
mov
out
cmp
sahf
mov
data16
out
add
mov
adc
scas
cltd
gs
and
add
sahf
push
mov
lds
push
in
pop
lcall
hlt
dec
adc
adc
xor
rol
mov
push
xchg
sbb
test
fistpl
sti
mov
inc
daa
movsl
mov
adc
negb
fcompl
jl
push
lahf
fsubs
shr
dec
xor
psrlw
aad
push
fwait
lret
mov
pop
stos
or
push
ret
cltd
stc
lods
push
jge
adc
scas
sbb
mov
shll
and
cs
pop
repnz
dec
fstps
pop
cmpl
sti
pop
push
sub
add
iret
jmp
mov
loopne
pop
loopne
sbb
xor
sub
jns
add
fs
and
notl
addr16
testl
cmc
inc
stos
mov
js
dec
test
cmpsb
sbb
pop
dec
jp
sbb
sbb
mov
in
repz
cwtl
pop
or
mov
dec
sbb
sub
mov
sub
ret
mov
mov
xchg
clc
pop
lods
jecxz
sub
pop
and
adc
xor
jno
cmp
adc
in
xchg
cld
jae
out
iret
sarb
pop
rep
or
adc
in
jnp
das
pop
fcoms
add
fwait
lahf
fstpl
jb
pop
xchg
fsts
hlt
xchg
ja
pop
mov
das
mov
inc
adc
test
fnstcw
sti
xlat
sbb
cltd
ss
ret
mov
mov
sbb
xor
sti
mov
fcomi
jp
cmpsl
mov
or
and
ds
inc
negl
fcmovne
das
lcall
jmp
in
nop
sub
mov
sahf
xchg
xchg
out
and
lret
dec
rcrl
pop
lds
stos
hlt
sub
mov
push
shr
hlt
mov
imulb
pop
push
or
cmp
xor
push
and
add
es
jp
decb
loope
repnz
pop
sub
fstpt
push
cltd
popa
popf
out
cmp
mov
arpl
xor
mov
das
out
push
inc
in
mov
repz
popa
cmpsl
lahf
hlt
fsqrt
xchg
mov
sbb
jmp
outsl
mov
shr
lea
pusha
negb
xchg
outsb
popa
fcom
xor
lahf
jg
pop
lods
hlt
inc
mov
jg
xlat
cs
xlat
filds
inc
adc
jns
pop
dec
cmpsl
add
jns
jnp
jmp
out
mov
lock
lahf
out
aaa
ja
ffree
in
adc
push
sbb
cmp
iret
mov
shrl
cwtl
jge
scas
and
repz
leave
dec
dec
sub
xchg
fstpl
fcmovnu
cs
mov
mov
jo
in
sub
jnp
movb
push
lods
xor
mov
lock
pop
cs
popf
dec
ljmp
adc
xor
fwait
adc
faddl
jmp
faddl
iret
in
in
ret
push
lahf
stc
je
addr16
ljmp
mov
out
dec
inc
xlat
xlat
aad
jle
xchg
ja
push
jmp
dec
cmp
push
test
lcall
pusha
mov
xchg
cltd
jmp
mov
mov
jl
out
cmpsl
dec
and
push
mov
js
xchg
fdivl
jecxz
push
mov
xchg
xor
and
and
pop
addr16
fidivl
sub
push
pop
cmp
int3
and
fildll
mov
loop
shrl
sbb
into
mov
test
jno
or
sbb
in
loopne
mov
icebp
xchg
outsb
add
dec
in
push
popw
sub
jg
sahf
jle
cmc
sbb
inc
push
fcoml
dec
pop
iret
sti
es
xor
insl
sub
push
pop
out
inc
jecxz
pop
sti
xchg
inc
pop
data16
inc
aas
add
pop
shr
xor
outsb
ror
idivl
pop
sub
mov
out
fucomip
push
das
lea
jne
push
xlat
xchg
fcmovnu
sti
shl
repnz
gs
iret
lcall
cmpsb
loop
aas
sahf
or
test
xchg
inc
jmp
mov
icebp
and
ja
mov
movsl
dec
mov
out
xor
adc
insl
hlt
or
pop
es
cmpsb
push
stos
ficoms
cmp
jmp
push
psrlq
mov
pop
xor
xor
out
or
filds
mov
jp
mov
iret
sbb
adc
push
jns
sub
push
aam
aam
mov
push
add
test
push
mov
cmp
pop
fwait
cli
mov
sbb
aad
stos
cltd
int3
sbb
mov
pop
pop
ljmp
out
sub
out
mov
cmp
test
mov
sbb
icebp
ja
dec
stc
int3
lret
aas
fidivs
lcall
sbb
scas
rcr
jb
adcl
xchg
dec
mov
out
lahf
jg
out
xlat
negb
and
mov
fadds
addr16
push
sub
inc
pop
loope
outsl
xor
fisubrs
ds
test
xor
inc
mov
lock
cld
pop
in
lea
jg
aaa
shr
in
mov
in
out
fidivrl
jne
mov
and
mov
adc
sahf
pop
sub
cmp
mov
cmp
pushf
adc
jecxz,pn
and
lret
out
data16
outsb
xor
adc
xor
addr16
loop
cmc
push
push
mov
stos
push
out
daa
sub
mov
shll
mov
xor
subb
cmpsb
aam
insb
pop
sbb
lea
repz
push
out
popf
mov
jg
test
cld
mov
cmp
jns
scas
das
pop
out
sbb
out
cmpsb
leave
cld
lods
lret
std
pop
js
incb
jl
xor
xchg
xchg
mov
hlt
inc
pushf
xchg
mov
or
sub
mov
inc
insb
jl
xchg
stc
pushf
dec
gs
and
mov
cmpsb
pushf
mov
lods
mov
notl
sahf
jno
inc
inc
fisubrs
aas
push
mov
pop
das
mov
subl
negb
dec
fsubr
jg
sub
lahf
inc
sbb
jb,pn
mov
out
or
stos
push
jbe
cli
jo
push
xchg
test
push
in
insl
adc
push
cmp
jl
fidivrl
pop
cmpsb
sub
pushf
jns
inc
shrb
js
mov
fldcw
cld
sub
push
sub
jp
lcall
cmpb
add
mov
mov
mov
cs
cld
push
mov
cwtl
sub
mov
ja
nop
add
sbb
push
rep
mov
fadds
or
ds
mov
or
int
repnz
mov
gs
xor
test
sbb
rorl
pop
mov
jge
mov
icebp
pop
jmp
sahf
cli
testl
push
pop
stos
jno
ljmp
and
sti
std
pop
sbb
mov
mov
mov
push
and
mov
mov
repz
popa
cwtl
mov
adc
jg
pop
ficompl
xchg
sub
xchg
jle
push
lret
enter
imul
lods
cld
cs
fdivrp
stc
sbb
inc
and
dec
xchg
jecxz
out
cli
push
mov
fdivrl
sti
ret
clc
sbb
pop
xchg
mov
stos
or
mov
inc
mov
aad
or
out
out
negl
xchg
iret
mov
je
into
sbb
shlb
into
cmp
mov
cld
adc
mov
incb
int3
ret
dec
fldt
mov
outsl
iret
fsubrp
cmpsb
cld
mov
mov
dec
ja
test
jl
bound
into
add
data16
lahf
mov
test
lret
jl
sub
mov
ret
outsb
fldt
dec
mov
in
mov
xchg
xor
lret
or
fcmovnu
mov
adc
shrl
sub
sbb
sahf
pop
pop
cmpsl
inc
xlat
ret
cmp
jp
imul
cmp
negl
fcoml
xchg
dec
clc
sbb
add
sarl
xlat
mov
jl
fmul
mov
sti
dec
sbb
xor
jb
or
daa
pop
xor
mov
clc
into
movsl
or
rcrl
cmpsb
lods
pop
mov
fisttps
ret
push
out
mov
push
xor
mov
stos
out
ret
jno
xor
mov
gs
push
decb
xor
leave
cmpsb
add
sahf
mov
cmp
lea
pop
pop
add
dec
inc
push
xor
ret
arpl
pop
in
xor
cli
seta
std
js
cmpsl
jp
pusha
in
or
push
ret
call
add
add
cmp
jmp
or
or
cld
aaa
push
stos
fcompl
xchg
or
ja
sbb
nop
mov
stc
pushf
jmp
sarl
mov
or
mov
fidivrs
roll
hlt
sbbb
lret
inc
shl
insb
sbb
lods
aas
push
rcll
pop
call
and
xchg
and
jnp
mov
std
mov
sbb
ss
mov
cmp
push
outsb
sbb
pushf
in
jecxz
lret
fidivrl
mov
lea
rep
das
mov
fnstcw
inc
sbb
sbbl
notb
inc
sbbb
repz
jae,pn
les
cmp
sti
scas
push
cmp
ret
push
fldt
icebp
movzwl
lods
es
imull
mov
pop
add
rclb
sbb
dec
out
sti
sbb
lahf
inc
pop
into
call
js
cmp
pushf
stos
iret
ret
mov
fmul
mov
scas
cmc
repz
mov
push
xor
sub
and
pop
cmp
outsb
push
ljmp
mov
and
lcall
in
xchg
push
in
xor
ds
ljmp
aad
push
mov
iret
loop
int
mov
ljmp
push
or
add
lods
loope
scas
or
jp
cmp
push
aaa
xchg
out
jns
cld
out
cltd
jb
jmp
addb
jne
push
shrl
arpl
jp
pop
jae
in
jle
mov
hlt
mov
test
mov
mov
arpl
andb
pop
inc
arpl
in
xchg
arpl
lods
and
add
lret
iret
in
jnp
out
and
sub
out
jae
repz
vmread
add
add
jns
hlt
sub
or
ss
sti
iret
hlt
fistpll
fisubrs
mov
out
int3
jl
and
out
pop
idivl
mov
xchg
push
fstps
mov
outsl
jne
sbb
daa
notl
fucomi
das
fcompp
jbe
outsl
std
faddp
mov
sub
out
push
mov
inc
pop
fxch
mov
outsl
inc
fiadds
mov
xor
pop
into
dec
dec
fistpl
popa
pushf
fmuls
loop
ret
ret
ljmp
shl
out
lahf
or
cmpsb
xorb
mov
cs
or
inc
es
lret
xlat
fbld
in
mov
mov
ret
pop
or
out
ret
mov
daa
aas
cmp
pop
mov
jg
popf
jp
dec
jecxz
inc
popa
pop
inc
xchg
inc
inc
les
pop
pusha
js
ficompl
negl
mov
pop
ret
xlat
sub
cmp
int3
fisubs
dec
pop
and
movl
sub
out
xor
mov
sahf
es
push
cs
mov
outsl
xor
pop
aam
jle
inc
andb
xor
jo
jle
mov
ds
outsb
adc
sarb
pop
push
xchg
cmc
fsubrs
xchg
sub
addl
pop
dec
dec
xor
jns
jp
lahf
ja
jb
aas
aam
mov
sub
ss
xchg
and
jno
ss
pushf
xchg
add
aas
cmp
push
divb
cmpsb
dec
mov
pop
leave
inc
popl
pop
sub
xor
mov
hlt
call
icebp
and
xchg
adc
imul
xchg
inc
hlt
in
dec
push
cmpsb
inc
ja
repnz
or
jns
into
stos
jbe
sub
mov
ljmp
jp
pop
jg
cli
inc
div
shrd
lretw
xchg
adc
pop
pop
pop
xchg
aaa
std
out
iret
outsl
jl
dec
iret
repnz
and
cmp
push
addr16
jp
mov
ret
pop
mov
aas
jns
mov
outsb
test
jp
shl
push
cli
jecxz
sbb
inc
xor
inc
outsb
popf
xor
sbb
out
or
iret
idivb
out
fildl
dec
cwtl
sbb
dec
jg
rorl
fistpl
repz
inc
sbb
ret
mov
out
jb
mov
mov
aam
cltd
add
xor
icebp
mov
outsb
daa
sahf
mov
cli
jg
pop
insl
popa
fmulp
ds
push
adc
sbb
js
cmpsb
sarl
scas
jg
cmc
fmulp
out
cmp
jne
movq
lods
ficomps
into
jmp
out
add
addr16
scas
mov
lret
call
lret
ja
mov
xchg
fisttpll
out
pop
mov
jne
out
nop
mov
ret
cmp
pop
mov
gs
dec
sub
mov
repz
outsb
pop
jge
iret
jle
cmp
scas
xchg
cmpsb
pop
cmp
mov
jl
movsl
mov
sti
mov
cltd
fnstenv
lds
stos
iret
xlat
cmpsl
sti
into
mov
ss
sti
fcomip
dec
cmp
xor
push
fisubrl
pusha
aad
xchg
shll
push
jmp
aas
ret
mov
sahf
into
jns
sti
sbb
bound
pop
jecxz
repnz
hlt
aaa
ljmp
mov
shl
or
ljmp
push
lret
add
lret
mov
or
sti
ficoml
adc
stc
stos
mov
test
shlb
push
jmp
jg
aad
enter
pop
aam
fists
push
inc
push
xchg
popa
sub
fbld
push
bound
fsubl
imull
mov
stos
and
cli
clc
loopne
inc
sbb
shrb
fcmovbe
sub
mov
add
mov
jne
cli
push
sub
arpl
cwtl
dec
ss
outsb
das
insl
ja
cmp
xchg
out
lea
xchg
inc
fisubrs
mov
outsl
mov
ja
push
outsb
stos
into
jg
in
aas
out
cmpsl
scas
sbb
aam
mov
mov
inc
pop
inc
inc
mov
fcomi
ss
mov
outsb
mov
fadds
outsl
out
push
clc
insl
outsb
sub
pop
mov
jp
ja
xor
dec
mov
popf
ds
bound
mov
dec
testl
lret
testb
xlat
out
jnp
mov
outsb
mov
sbb
mov
in
jg
mov
fimuls
xchg
into
inc
cmp
repnz
ljmp
sub
cmc
sbbl
or
jbe
notb
arpl
inc
scas
cmp
xor
mov
aam
es
adc
cltd
push
outsb
or
add
dec
mov
sbb
cmp
ret
jns
adc
jge
inc
aam
pop
gs
jnp
ret
inc
test
and
out
insb
sti
shll
dec
and
in
sub
jbe
rcl
daa
cld
mov
cwtl
mov
addr16
cmpsb
pop
mov
fimull
divb
push
sub
jns
push
insb
fnstcw
mov
lds
add
or
stos
xor
lahf
into
jnp
int
fstpt
mov
mov
xchg
aas
mov
fbld
fucomi
ds
jg
fstpt
out
mov
and
testl
out
fisubrs
outsl
in
mov
out
clc
mov
ja
inc
out
scas
fisubs
aas
jnp
jns
hlt
divl
divb
icebp
shl
iret
icebp
lret
faddl
or
push
scas
mov
sbb
shll
push
cmp
mov
lahf
cmp
sahf
lds
dec
pop
mov
sub
jbe
jg,pn
xchg
cwtl
jmp
or
ficoml
nop
or
pop
in
xor
lret
es
sub
into
mov
mov
lods
stc
push
inc
scas
xor
mov
loope
cmp
stos
lahf
imull
les
rorb
not
ret
cmpsb
shr
outsb
scas
imul
rcrl
imull
popa
cli
icebp
pop
or
or
sahf
data16
pop
jae
dec
aam
sub
cmp
into
out
push
xor
pop
jb
mov
fidivl
add
xor
push
mov
sti
push
and
pop
test
pushf
add
repz
cmp
inc
push
negl
pushf
mov
lods
mov
jg
stos
idivl
or
sti
jns
mov
cmpsl
fistpll
ljmp
stc
mov
fidivrs
mov
cs
lahf
psubusw
out
mov
xchg
mov
push
push
sbb
ficoms
mov
fiadds
fstps
mov
add
xlat
pop
lea
xchg
mov
and
gs
out
mov
fmul
mov
rol
mov
loope
mov
repz
jecxz
push
xchg
and
sti
imul
jae
insl
bnd
sbb
sbb
jns
jle
cmpl
pop
jp
clc
jno
lods
jg
or
fiaddl
mov
mov
shlb
loope
push
push
jle
push
jns
lahf
mov
push
push
mov
pushf
test
cmp
cs
lahf
xchg
push
pop
push
fwait
cmp
cmp
test
mov
mov
fwait
jg
xchg
mov
lods
repz
out
mov
lret
out
fildll
xlat
cltd
rol
pop
cmpsl
fbstp
scas
mov
jge
loop
pop
sub
push
cltd
lahf
mov
fbld
push
pop
dec
lahf
mov
ds
fnstenv
mov
gs
mov
fildll
push
outsl
pop
test
insl
cltd
ds
and
mov
jg
mov
iret
imulb
movsl
jno
insb
pop
dec
adc
push
mov
negl
in
sarl
div
sti
or
pop
cmc
imull
inc
mov
lods
mov
aaa
fcomip
xchg
out
add
cmp
hlt
stos
push
arpl
lcall
sub
cmp
dec
out
pop
insb
cld
mov
jge
fstps
fmulp
mov
std
push
fstps
mov
outsl
ficomps
mov
mov
aas
ja
out
comiss
pop
mov
outsl
scas
mov
outsb
stc
insb
mov
mov
cltd
lcall
sti
jg
adc
jp
cmp
push
jl
mov
scas
into
adc
push
dec
lea
lods
out
loop
mov
adc
xchg
mov
sub
lods
fidivs
test
fcmovnb
outsl
dec
mov
fsubr
and
outsl
xor
mov
lret
repnz
add
aas
out
out
std
mov
sahf
jno
ljmp
cmpsb
out
push
popa
aas
outsb
jge
mov
ja
lahf
je
cmpl
pop
notl
fildll
aad
scas
repz
fcompl
mov
lret
ljmp
jl
test
lret
out
lahf
pop
or
pop
sti
or
xor
out
mov
dec
pop
rorl
addr16
add
test
inc
out
mov
mov
mov
data16
inc
fidivrl
jnp
das
xchg
jbe
push
negl
dec
jmp
push
int
les
xlat
jmp
push
ds
jp
sbb
sti
ds
outsb
xor
jmp
out
push
in
jb
int
es
flds
lods
mov
and
ljmp
shrl
dec
pop
jbe
mov
scas
bound
outsl
pop
daa
xchg
jmp
mov
jl
add
or
dec
out
pop
lahf
pop
push
cmc
pop
sti
cltd
cmp
cmpsb
das
mov
xor
outsb
pop
out
pop
enter
test
pop
cltd
into
cli
bound
adc
mov
fcmovu
mov
fisttpl
pop
cltd
or
aaa
jno
insl
sbb
sub
xchg
cwtl
push
in
push
push
mov
ret
mov
insl
scas
dec
or
dec
xor
das
std
aam
cs
xor
cmc
sub
outsb
sbb
mov
jg
cwtl
jnp
jb
jae,pn
xor
pop
jmp
or
mov
mov
jl
cwtl
jp
pop
lret
jge
jg
mov
fdiv
outsl
xchg
in
js
addr16
xchg
jp
cmp
jg
das
jge
das
pop
dec
mull
pop
jne
dec
xlat
inc
je
jecxz
divl
imull
xchg
repz
outsl
jecxz
divl
call
pop
loope
sti
int3
jg
stos
push
testl
jecxz
sbb
out
add
aad
mov
jnp
mov
ja
negl
xor
hlt
mull
sahf
enter
fwait
sti
jns
aas
sbb
ss
ds
mov
sub
sbb
jnp
sti
jg
js
xor
push
mov
mov
addr16
jae
push
int
aam
shr
int3
jb
xor
or
lret
sti
pop
ffreep
jg
mov
add
in
js
cmp
int3
aas
xlat
push
xor
mov
jo
xor
xor
xor
xor
xor
xor
xor
sti
cmp
insb
xchg
pop
jnp
test
and
jb
pop
orl
aam
jo
cmp
cmpsl
aaa
outsl
add
or
xor
hlt
nop
ret
je
cmp
sbb
out
das
xlat
mov
jno
xor
lock
pop
xor
xor
xor
sub
insb
mov
inc
dec
es
sub
sbb
or
or
or
andl
jg
pop
mov
pop
pop
xchg
cmp
xchg
sbb
or
lock
add
and
ja,pn
push
push
ficoms
push
addb
push
std
push
cltd
push
adc
repnz
test
add
enter
fistpl
push
arpl
loop
leave
loope
popa
int3
loopne
pusha
addb
arpl
loop
bound
loope
popa
fsub
lods
pusha
test
inc
jecxz
lret
arpl
loope
popa
hlt
clc
jecxz
push
fdiv
or
pop
cs
es
push
pushw
es
sub
cmpsb
mov
or
push
insb
push
push
jae
mov
and
sti
sub
jmp
pop
fadds
pop
cwtl
js
pop
sahf
cmp
sbb
sbb
sbb
cmp
cmp
pop
cs
es
push
ret
push
flds
popf
push
xchg
push
inc
mov
aaa
lahf
mov
xchg
andl
push
mov
stos
neg
add
add
add
add
cmp
dec
cli
mov
ss
push
cmp
sbb
ss
cs
insb
cmp
sub
shrl
jge
je
pusha
jl
ss
cs
add
iret
pop
in
mov
jne
fcmovb
adc
sbb
sbb
fwait
cs
es
push
jp
push
push
es
adc
icebp
push
xchg
push
inc
push
sub
or
call
xlat
pop
scas
mov
mov
jo
xor
xor
xor
insb
loop
sahf
dec
push
cmp
sub
sbb
or
or
or
or
or
sbb
cmpsl
pop
imul
nopl
mov
test
pop
push
test
adc
stos
add
fldl
int
mov
mov
jg
arpl
das
cmpl
xchg
adcb
arpl
sub
das
add
push
sub
xchg
insl
pop
xor
sub
mov
sbbl
scas
mov
sbb
notb
jle
xor
xor
xor
xor
cmp
pop
incb
xor
negl
and
pop
into
push
dec
aas
mov
jmp
shrl
pop
dec
inc
cmp
sub
xchg
popl
fiaddl
lcall
mov
gs
fists
xor
shlb
outsl
mov
jno
xor
lock
jo
xor
jmp
shrl
cmp
xor
lock
aad
mov
pop
mov
popf
pop
cmp
add
pop
in
adc
mov
cmp
in
jecxz
sarl
cmp
mov
repz
xlat
lret
jae
addr16
repnz
mov
jno
cmp
mov
orb
stc
test
fsubs
js
pop
fnstcw
js
and
pushl
pushf
negl
xchg
cmp
not
ret
mov
jbe
xor
in
xor
cmp
mov
and
cmp
pop
scas
lahf
pushf
popf
dec
popa
jge
adc
dec
outsb
subl
adc
sbb
xor
or
call
adc
jl
mov
test
xchg
cmp
xchg
xor
or
dec
lds
inc
repnz
fstpt
sbb
pop
hlt
out
into
aaa
mov
push
push
dec
sub
mov
jg
add
ficoms
scas
add
sub
xchg
int3
ret
mov
pushf
sub
cmp
fnstsw
sbb
std
arpl
outsb
mov
xchg
push
sub
or
out
divb
cs
es
push
outsl
push
dec
push
das
lcall
insb
mov
mov
insb
ds
jns
dec
push
xor
push
dec
std
xchg
mov
push
insl
add
or
or
or
add
cmp
or
add
mov
sbb
adc
lahf
or
out
sbb
pop
mov
fstps
cwtl
xchg
sub
mov
js
sti
push
push
xchg
dec
int
push
mov
bound
jo
aad
mov
pop
xor
xorl
sbb
push
push
data16
enter
pop
and
cli
lret
mov
mov
pop
pop
sub
xor
inc
mov
ds
mov
arpl
jbe
pop
inc
js
pop
inc
inc
fcmovbe
call
dec
lret
lods
sahf
mov
jge
inc
sti
loopne
cld
dec
fmull
sti
sbb
push
cmp
jns
sbb
lods
xchg
mov
or
fs
aaa
negl
int3
outsl
cld
pop
jecxz
lock
pop
test
cmp
fisttpl
sti
push
inc
sti
hlt
cmp
or
sti
push
stc
sti
mov
sti
enter
mov
push
insl
sti
adc
jns
std
wbinvd
std
ljmp
mov
and
xchg
lcall
mov
pop
jl
sarb
je
add
jg
push
fistpl
mov
push
sti
pop
dec
sti
imul
fmull
mov
cld
jl
fisubrs
ds
out
ljmp
push
pop
sbb
cmp
sub
dec
mov
jno
xor
mov
repz
cmp
in
or
pop
mov
and
lock
sbb
dec
rdpmc
aaa
in
ss
es
xorb
jb
shlb
inc
in
mov
fs
fadds
cmpsl
bound
jb
xchg
test
mov
cmp
sbb
xorps
xor
xchg
sub
adc
adc
cmp
push
or
xor
mov
pop
mov
pop
fucomp
pusha
sub
mov
mov
jmp
cs
push
jp
bound
mov
mov
movsb
and
mov
fmul
mov
mov
sbb
popa
aad
and
or
xlat
out
push
xchg
push
lock
mov
mov
and
xchg
mov
mov
mov
xlat
adc
mov
jno
jge
mul
mov
jns
movsb
idivb
xor
les
nop
int3
and
dec
and
add
add
pop
sbb
std
sub
and
scas
lods
jno
xlat
ret
cmp
adc
pop
stos
fcmovu
sub
fbld
xor
std
aam
jno
popf
or
int3
sbb
les
pop
xor
jg
or
mov
pop
xchg
das
adc
cmpsl
mov
decl
sub
add
or
sarb
popa
and
dec
stc
jmp
mov
mov
mov
fistpll
jo
jle
mov
jle
sbb
adc
mov
inc
jle
add
aas
rcr
ret
fisttpl
adc
int3
mov
and
das
pop
mov
enter
iret
in
add
fdivl
xchg
mov
lods
nop
jmp
fsubs
fwait
sub
cmp
lds
idiv
sbb
mov
mov
fisubs
jge
jno
cmp
and
ficomps
push
push
and
daa
in
addb
lahf
clc
sub
add
push
adc
adc
lods
dec
shlb
dec
fistpl
and
dec
lret
pop
incl
jns
jno
and
aas
hlt
or
cltd
pop
jg
sub
outsl
sbb
test
jg
lds
in
iret
std
imul
adc
out
mov
ret
mov
fadd
dec
enter
push
or
push
mov
jne
jecxz
mov
jge
insl
sbb
cmc
mov
jg
mov
jecxz
jp
push
jg
mov
icebp
scas
outsb
xorb
xor
test
mov
lret
xlat
dec
xor
push
fildl
repnz
aas
adc
xchg
and
push
sbb
rorl
out
inc
sub
dec
mov
mov
mov
cmp
add
es
inc
jp
mov
pop
xor
or
mov
pop
fbld
mov
shl
dec
add
rorb
dec
cwtl
mov
or
repz
xchg
scas
xor
stc
inc
ret
inc
xlat
es
ja
jne
dec
bound
push
push
xor
and
dec
adc
movsl
pop
scas
or
pop
inc
sbb
sbb
je
pushf
ret
mov
add
pop
in
pop
inc
out
js
jp
pop
loop
or
fisttpl
int3
or
inc
inc
rcpps
outsb
jg
push
or
adc
mov
xchg
cmp
lods
pop
popa
jns
cmp
fildll
cmp
jmp
xor
sub
cmp
repnz
push
or
cli
xchg
testb
jecxz
aaa
cmp
ljmp
scas
sbb
pushl
xor
sub
and
sbb
cli
div
out
ljmp
mul
fdivrl
test
int3
mov
cmp
push
push
and
pop
nop
mov
fists
add
inc
jae
mov
inc
mov
pop
pop
imul
adc
or
sarb
push
and
xchg
xchg
sub
add
and
insb
shrl
sbb
mov
and
sbb
cmp
arpl
mov
rol
or
adc
pop
int
sub
lds
jecxz
pop
jp
jbe
jb
add
inc
repnz
jbe
dec
xor
push
ljmp
cmp
cmpsl
mov
or
jno
or
aad
cmp
jmp
push
hlt
jle
jb
imulb
mov
sbb
clc
inc
cmpsl
cltd
addr16
jg
cmpsb
ljmp
mov
dec
loopne
ret
sub
fdivrs
stos
mov
out
cld
daa
mov
pop
repnz
xchg
dec
push
das
and
mov
mov
imul
out
out
fcomi
into
ret
sarl
push
sbb
push
lcall
leave
pusha
push
add
mov
sbb
stos
mov
fisubrs
mov
lahf
dec
xchg
push
add
mov
or
outsl
lock
aam
and
push
cltd
adc
jg
in
dec
imul
in
jae
in
xchg
xor
xor
imul
out
std
mov
sbb
imul
sbb
sbb
pop
mov
scas
lods
sub
push
fsubrl
sub
xor
in
loope
jge
jmp
xlat
out
push
sub
jbe
rorb
jbe
push
aad
ss
push
sub
out
fnstcw
out
cli
js
xchg
hlt
ljmp
int3
mov
pop
cmp
lods
mov
insl
add
adc
test
ds
dec
pop
into
jae
int3
sti
pop
sbb
popa
cwtl
shll
in
js
hlt
test
out
lret
fiadds
xchg
xlat
xor
push
pop
mov
xchg
das
and
lcall
lods
notl
pop
xorb
sub
jmp
ljmp
fnstenv
stos
jb
dec
icebp
pop
push
fidivl
xor
call
scas
iret
jmp
sub
ja
repz
addb
inc
push
push
lock
cmp
movsb
jl
movsb
mov
imul
jbe
mov
xchg
clc
jnp
inc
pop
or
add
mov
aam
sarb
lahf
xchg
rcr
sti
adc
sub
call
xlat
mov
lods
mov
fwait
stos
notl
ja
xchg
negl
pop
into
cmp
fisttps
je
ffreep
xor
das
jne
mov
mov
fistpll
fisubs
ror
lret
addr16
stos
cmpsb
mov
jp
jb
in
clc
cld
ficompl
push
cmpsl
dec
dec
inc
sub
and
jns
inc
clc
or
pop
mov
test
push
mov
jb
out
enter
lds
ds
adc
add
js
rcll
mov
xor
mov
and
pop
dec
lret
jne
xor
push
sub
jo
add
fxtract
dec
scas
xchg
outsb
scas
sar
bound
mov
jne
xor
fimull
imul
inc
lret
push
xorb
and
fldenvs
mov
dec
cmp
sbb
out
xchg
jbe
inc
sub
insl
push
mulb
shll
push
lock
sub
cmpsl
test
test
mov
loope
cmp
out
mov
cmp
loop
xor
xor
jns
shrl
xlat
push
cmpsb
in
jae
xsaveopt
inc
test
inc
mov
sbb
adc
insl
pop
lds
arpl
shll
bound
xchg
sub
js
xchg
add
notb
adc
loope
call
adc
push
insl
stos
int
mov
mov
push
cs
mov
push
rorb
cmc
icebp
arpl
ret
dec
inc
push
pop
mov
xchg
dec
notb
adc
rcrb
mov
cltd
out
ss
mov
stc
addr16
outsl
mov
pop
in
mov
xor
push
popf
mov
scas
xchg
mov
addr16
sbb
sub
pop
xchg
stos
cli
rcrl
outsl
repnz
fsubrp
fidivl
fldcw
mov
out
push
mov
mov
test
gs
fwait
xor
adc
in
pop
or
mov
stos
outsb
and
jmp
ljmp
or
push
andb
pusha
movsb
jae
out
mov
pusha
sbb
pushf
inc
mov
push
jmp
push
xor
mov
jmpw
lret
or
add
mov
sub
dec
addr16
and
iret
or
cmp
jno
push
inc
jae
inc
sub
push
mov
cmpsl
fisttps
jg
jns
pop
mov
imul
out
mov
mov
cmp
jp
out
jnp
dec
lret
xchg
clc
xchg
sti
call
gs
mull
stos
sti
icebp
pop
sti
cmp
mov
mov
out
ja
mov
jae
jg
cmp
mov
jg
mov
push
push
lcall
mov
aaa
cltd
out
pop
mov
push
jae
out
sbb
lahf
test
pop
pop
pop
lcall
mov
out
test
iret
adc
pushf
mov
sahf
out
daa
sbb
pop
ds
idivl
sbb
add
jl
inc
jbe
push
cld
jecxz
add
out
sti
lret
push
ffreep
xlat
add
sub
mov
cmpl
scas
mov
xchg
pop
fbstp
mov
mov
sbb
xlat
adc
pusha
out
cmpsb
lret
fbld
mov
cli
es
lahf
repz
popa
push
add
fistpll
jg
out
movsl
dec
xchg
mov
mov
ja
pop
adc
loopne
add
jmp
ret
sbbl
out
jmp
leave
insl
push
xor
xchg
enter
pop
shlb
neg
addb
xor
mov
cli
mov
out
stc
aaa
idiv
mov
clc
mov
dec
stos
mov
cmc
xor
js
mov
cmpsl
hlt
jb
mov
out
scas
mov
and
xchg
adc
icebp
dec
into
cmp
stc
iret
mov
negb
js
movsl
cmp
mov
jne
xor
add
jl
ljmp
nop
fisubrl
out
jg
mull
repz
cmp
inc
mov
test
loopne
imull
push
cwtl
fisubrl
repnz
mov
xchg
test
aas
data16
xchg
xor
stc
fst
adc
pop
mov
incl
fbstp
mov
out
mov
push
rcll
jle
cmp
mov
push
xchg
incl
xchg
aad
jo
mov
imul
enter
cli
repz
repz
fdivl
pop
js
dec
push
push
inc
scas
gs
flds
mov
sbb
insb
cwtl
cmp
out
cmc
or
cs
je
and
xchg
sti
mov
and
insb
aam
pushl
notl
mov
jae
lea
inc
shll
push
ljmp
lcall
dec
lret
xchg
ficompl
mov
mov
insl
movsl
push
pushf
jmp
fldln2
push
mov
iret
enter
clc
int
mov
push
ror
ja
lcall
sub
mov
out
push
adc
or
movsl
aaa
clc
mov
leave
push
sti
xor
xor
jge
std
push
imul
loop
push
or
mov
lods
add
xchg
push
jecxz
xorl
aam
cs
mov
push
fcoms
sbb
outsb
push
lods
cmp
lret
push
xchg
lods
push
pop
rolb
movsb
push
cli
sub
jge
mov
loopne
jg
dec
loope
or
ljmp
or
mov
imul
rorl
and
ret
stos
mov
mov
imul
repz
das
negb
lock
pushf
mul
loop
xchg
push
jbe
rcrl
cmpsl
inc
adc
popa
push
sahf
push
je
ljmp
lret
lahf
stos
and
shrb
dec
leave
cmc
in
push
loope
xor
adc
push
cwtl
stos
ja
push
adc
je
cmp
jb
in
pop
std
lcall
sbb
pop
roll
inc
cmp
enter
mov
mov
in
push
pop
ljmp
xchg
adc
pop
sub
fwait
call
cmpsl
xchg
sbb
mov
push
or
leave
aas
jmp
stos
popf
xor
push
jle
out
push
aad
daa
push
out
loop
xor
outsl
sbb
dec
ljmp
cmp
and
xchg
pop
lds
sti
push
std
sub
orl
fdivrl
push
and
dec
in
enter
ljmp
inc
mov
repnz
pushf
xchg
call
mov
cld
cld
pop
pop
ds
mov
das
into
sbb
pop
stc
aas
scas
repz
out
push
xchg
testl
ss
out
jnp
das
sbb
insl
sub
inc
or
outsl
pop
mov
mov
incl
leave
adcb
xchg
std
out
xchg
xcrypt-ecb
cmpsl
push
mov
testl
push
test
ja
xchg
mov
rcrl
imul
xchg
xchg
push
ret
sub
arpl
push
push
push
fistps
imulb
and
jl
hlt
aam
fs
jl
push
in
and
mov
pusha
jns
mov
mov
mov
scas
nop
mov
sub
push
fwait
mov
mov
pop
test
gs
mov
stc
cmpl
sti
out
mov
ret
jge
pop
test
mull
xor
incb
mov
rcll
mov
andl
pop
mov
lock
repz
dec
in
push
loop
call
std
mov
insl
lods
jle
dec
inc
call
sti
push
in
cmc
sub
in
jmp
mov
insb
push
faddp
jmp
cwtl
sti
loop
cld
sahf
shr
cmpsl
call
test
sti
out
ret
and
in
shll
das
ljmp
cmp
and
scas
mov
jns
xchg
out
dec
sarl
add
arpl
testl
fidivrs
repz
sbb
pop
mov
std
movsb
cmpsb
inc
xor
rcrl
pushf
outsb
xchg
pop
shrl
ret
clc
xchg
xor
jb
cs
sti
lcall
popa
dec
iret
imul
cmp
xor
mov
aam
mov
adc
imul
cli
ja
xlat
sbb
sahf
xchg
jmp
jmp
or
inc
leave
daa
repnz
push
xlat
mov
scas
test
jmp
pop
int
mov
pop
xchg
inc
inc
inc
lods
ret
or
repz
mov
outsb
jcxz
or
pop
lods
sahf
ret
pop
push
ljmp
in
addb
jnp
mov
dec
push
pop
leave
mov
mov
adc
push
loope
lret
shrb
decl
push
std
jmp
mov
repz
mov
popf
and
repz
pop
fists
cwtl
mov
jp
xor
insb
insl
sahf
in
mov
lahf
ljmp
ret
xchg
pop
loopne
clc
pop
sbb
jmp
and
xor
cmp
dec
sub
addr16
inc
jnp
mov
or
daa
cmc
push
mov
jle
mov
dec
pushf
cmp
ds
outsl
imul
jne
lret
out
aaa
sub
jbe
imul
xchg
push
xor
mov
out
scas
in
lcall
in
in
xchg
xlat
repz
add
mov
std
xor
dec
pop
sti
ret
push
jne
fstps
divl
pushf
jg
cmp
fldl
sub
cld
out
add
scas
mov
add
jge
mov
fcoms
mov
pop
in
sbb
add
xor
mov
leave
jns
sbb
not
rcll
movl
jle
das
je
jmp
data16
cmp
aad
fildl
xor
paddw
mov
scas
adc
cltd
push
lea
int3
call
out
insb
or
dec
cmpsl
mov
loopne
push
dec
mov
xlat
push
outsl
inc
sub
dec
jl
jecxz
leave
sub
lret
jle
icebp
fnstcw
mov
xor
xchg
repz
into
sbb
add
dec
bt
out
aam
xor
std
insl
pop
scas
jnp
and
je
xchg
std
sti
rorb
cmpsl
test
movsl
jg
out
imul
mov
les
pop
jg
jmp
dec
repz
xor
frstpm(287
in
stos
adc
xchg
lcall
imul
sti
lock
nop
fidivrl
pop
jle
outsl
pop
push
cltd
xchg
and
std
test
jb
lret
test
std
cs
push
jge
pop
push
xchg
int3
jg
cmp
fldt
cltd
dec
repz
jle
mov
pop
mov
lcall
dec
pop
imul
std
mov
xlat
and
push
push
stos
inc
mov
pop
std
mov
jp
or
ljmp
mov
decl
and
aam
sub
fptan
pop
jns
sti
std
pop
add
jne
sarb
fdivrs
ss
dec
cmp
call
and
mov
lret
or
repnz
jo,pt
repz
push
lods
sbb
leave
jge
stos
and
cmpsb
fsub
imul
jbe
jmp
xchg
pop
fs
in
daa
aaa
jmp
jge
pop
pop
in
decl
xchg
lods
sti
adc
out
std
jecxz
es
leave
sub
std
aas
fildl
shll
pop
pop
gs
loop
stos
jp
adc
dec
in
das
push
jg
std
sti
aam
fdiv
hlt
fwait
leave
aas
cmpsl
jbe
cmc
or
int3
push
loop
insl
adc
inc
arpl
pop
sub
scas
out
jmp
movsl
aaa
adc
cmp
adc
or
addr16
imul
and
dec
in
sub
sbb
cli
cmp
leave
mov
and
decl
imul
pop
xchg
mov
in
mov
scas
rol
dec
ljmp
push
scas
lds
mov
ss
jl
sub
pop
stc
iret
jnp
adc
mov
mov
jle
sbb
jne
xor
aam
push
push
add
das
sahf
jge
lcall
mov
xchg
or
jge
addr16
movsl
incl
inc
mov
daa
out
std
stos
repnz
call
lcall
dec
dec
cmp
fcmovnu
jecxz
jmp
xlat
mov
jbe
iret
fsubrl
sbb
popa
inc
jae
jle
push
cwtl
lret
xchg
lcall
dec
outsb
sub
stos
testl
mov
dec
lret
push
add
pusha
aas
or
repz
scas
icebp
div
and
fimull
sti
push
pop
mov
lea
jno
jle
ja
call
jae
jne
push
enter
mov
jmp
sub
sti
sbb
sbb
stos
mov
cmp
fldt
arpl
cmp
xor
xor
jbe
add
jecxz
out
cmp
decl
nop
add
xor
mov
adc
add
gs
cmp
jle
sarb
add
inc
subl
decl
hlt
into
dec
xchg
shr
jo
ret
cmp
sub
mov
imul
cmc
repz
imul
xchg
sbb
push
add
cmp
jg
shll
mov
mov
add
pop
mov
mov
insl
in
mov
repz
lret
or
jl
cmpsl
cmp
dec
sub
cmpsb
inc
mov
xchg
test
movsb
fsubs
lods
dec
repz
loope
jge
pop
sbb
push
leave
xchg
icebp
out
repz
dec
dec
imul
lds
mov
loope
and
dec
adc
in
xchg
daa
sti
dec
xchg
mov
repz
mov
cmp
jg
mov
pop
call
cltd
les
xor
cmpsl
xchg
sub
std
dec
fcomps
inc
daa
jmp
in
in
lret
or
decl
sbb
movsb
lcall
push
shrb
jae
mov
jns
jne
adc
sti
add
daa
or
push
insl
shlb
mov
pushl
pop
fcmovu
push
leave
xchg
gs
sbb
enter
mov
cmp
cmpsb
push
sti
test
pop
push
imul
out
sbb
cmp
xor
sbb
test
addr16
outsl
mov
ja
mov
in
sub
xor
into
adc
pop
aad
repz
jmp
arpl
mov
xchg
cmp
das
jmp
roll
lods
jmp
aad
pop
jmp
mov
popa
cmp
xor
dec
mov
call
popa
imul
arpl
mov
and
bound
push
std
jl
xor
mov
jmp
int3
sub
stc
repnz
cmp
lods
jl
repz
pop
jge
mov
cmp
push
lret
insb
pop
scas
shlb
pop
out
sti
pop
adc
pop
dec
mov
and
mov
mov
sar
sub
cmc
aas
or
out
jle
jne
xchg
jmp
ja
adc
enter
test
cmpsb
loopne
movsl
jl
dec
mov
xlat
scas
out
cld
loope
or
cmpsl
test
mull
repnz
nop
std
mov
idivl
iret
cld
adc
and
sti
addr16
ss
das
jl
sub
pop
pop
jle
shlb
aas
in
jp
jecxz
mov
push
lcall
mov
ficoml
adc
data16
cmpsl
out
cld
xor
les
mov
stc
je
sub
cmp
adc
incb
xchg
xlat
insl
or
out
xchg
add
and
xchg
or
push
lea
mov
outsb
lcall
xor
push
loopne
insb
scas
gs
jg
daa
fstp
lock
mov
lret
sub
pop
out
dec
popa
push
fs
or
in
dec
addr16
scas
nop
incl
push
fdivp
adc
inc
or
pop
cmp
jecxz
adc
sti
jg
xchg
stos
mov
xchg
lods
cmpsl
lock
push
push
jbe
sti
sahf
out
xorl
lods
pushf
jmp
arpl
xlat
insb
stos
aas
popf
lret
testb
lahf
ficoml
dec
scas
xchg
mov
push
pop
pop
fsts
stc
lcall
outsb
mov
imull
xchg
jecxz
out
cmp
pusha
jge
jg
jp
jmp
push
in
test
cld
push
iret
sti
neg
dec
dec
sub
cmp
loop
sti
xchg
arpl
insl
fcoml
push
pushl
stos
bound
add
dec
stc
outsl
out
xchg
sarl
dec
mov
daa
or
jg
int
xor
pop
mov
mov
repz
cli
cmp
jl
popf
sub
ljmp
xor
push
push
sbb
cmp
int3
jns
fdivl
inc
mov
mov
mov
lcall
push
int
mov
lock
loope
cmpl
jmp
and
mov
cmp
lods
lcall
xor
sub
sar
or
out
call
lea
mov
call
xor
lods
movsb
or
and
std
loopne
adc
cmp
fcompl
dec
call
hlt
imul
and
loopne
mov
xchg
or
cmp
push
decl
sbb
js
cmp
sbb
icebp
cmpsl
test
imul
decl
jecxz
lcall
mov
pushl
push
push
cmp
insl
sub
cmpsb
jmp
lods
xor
lret
jp
mov
icebp
jg
pusha
decl
pop
aas
sbb
sbb
subb
mov
pop
call
add
dec
add
xchg
inc
sar
jo
mov
out
push
adc
sub
mov
outsb
mov
xchg
and
test
lcall
push
loopne
pop
icebp
jno
fnsave
cltd
aad
fldt
push
xor
push
iret
lcall
aas
push
add
sbb
xor
in
or
jmp
cmp
jmp
daa
push
cmpsl
cli
cs
jecxz
enter
cmp
testl
aaa
sar
or
pusha
push
push
mov
rorb
lcallw
or
xchg
mov
mov
xor
ds
mov
dec
lcall
push
jmp
dec
dec
test
pop
cmp
stos
mov
fdivrs
xchg
ljmp
mov
mov
mov
jmp
pop
jl
xlat
popa
adc
scas
repz
cltd
aad
sbb
or
test
pop
mov
mov
pop
sub
pop
jne
pop
rcl
fucomp
push
outsb
out
insl
mov
ret
mov
pop
sbb
call
pop
test
lcall
shrl
call
jb
imull
push
xchg
mov
or
repz
insb
xchg
in
jmp
call
into
add
mov
lret
shll
push
xlat
and
xchg
xor
jnp
lcall
sti
mov
dec
jmp
daa
stos
ret
xchg
add
mov
shlb
aad
out
fld
mov
pop
push
jp
xrelease
mov
sbb
in
ja
xor
loope
adc
imulb
xor
mov
mov
adc
setle
negl
sti
jl
jno
repz
add
mov
push
xchg
xchg
lock
wbinvd
in
xchg
jmp
lcall
div
enter
push
lods
inc
mov
std
dec
add
lods
pushl
notb
lcall
js
xchg
dec
out
add
mov
pop
cwtl
fcmovnbe
cmpsl
pusha
xchg
loope
adc
cld
cmp
cs
incl
add
dec
xchg
jmp
or
pop
ljmp
xlat
test
sar
aad
cmpsl
xor
push
ds
jmp
lret
les
or
ud0
iret
push
lret
add
fistpll
xor
sub
in
bound
mov
cmp
pop
fbld
test
outsl
out
pop
cld
mov
out
sub
lret
negl
clc
jle
mov
xor
or
jae
aam
imull
xchg
pop
cmc
jl
arpl
pop
xor
push
cs
repz
icebp
adc
inc
adc
pop
std
sub
mov
mov
cmp
cmc
add
aaa
imul
in
xchg
mov
jmp
mov
ror
idivb
jecxz
add
sarl
jb
mov
lds
fiaddl
xor
pop
cmp
adc
cmp
mov
rep
cmc
scas
push
mov
jge
out
rcrl
pop
int
std
add
shl
sub
clc
sti
dec
pop
loop
mov
xlat
bound
mov
lcall
xchg
sub
or
std
pop
inc
push
dec
ds
repz
fwait
test
pop
aaa
incl
adc
icebp
pop
gs
aad
xor
pop
insb
lcall
div
mov
pusha
sbb
push
stos
lcall
idivl
aad
cld
lods
test
lcall
cs
xchg
cs
std
leave
mov
pop
jnp
repz
data16
jge
fstpl
dec
in
xchg
xchg
aam
cmp
fadd
psubq
stc
pop
leave
gs
cmp
pop
sub
push
lock
push
lea
inc
jmp
int3
insb
sbb
divl
mov
and
add
decl
aam
test
fisubrl
adc
in
iret
lret
cltd
mov
cmp
fs
cld
or
and
jno
test
cmp
jl
pop
ret
arpl
mov
lcall
cmp
cmp
jns
mov
shll
sub
in
mov
jecxz
xchg
jecxz
xor
mov
sbb
fmul
movsl
or
adc
pop
shlb
dec
int3
shrl
pop
cmp
or
imull
adc
jb
orl
clc
rcr
fdivl
adc
sti
cmp
mov
pop
pushf
xchg
sbb
lods
mov
call
test
xor
out
xor
dec
lcall
or
inc
or
addr16
test
imul
push
shll
mov
sbb
movb
mov
lcall
sahf
adc
pop
inc
insb
xor
cmp
aaa
or
call
dec
int
lahf
mov
pop
incl
cmp
outsb
decl
cmp
shll
repnz
sub
dec
enter
mov
fstps
pmulhw
xor
pop
jmp
pusha
or
jo
pushl
sbb
mov
jae
decl
orb
test
lcall
out
ret
pushf
sub
ret
or
clc
movsb
jge
test
test
stos
aad
push
into
mov
mov
mov
out
loopne
adc
icebp
push
mov
insb
ret
jecxz
mov
outsl
lods
andb
mov
popa
jmp
pop
pop
xchg
inc
mov
clc
jge
jo
mov
iret
pushf
aaa
cs
iret
pushl
fsubrl
jp
lcall
rcrb
xor
call
out
das
pop
outsl
jl
rcr
sub
mov
mov
lahf
jg
sub
incl
inc
sahf
cmc
rcl
push
push
push
imull
ss
fdivrl
rcl
popf
mov
arpl
jg
pop
jnp
jne
insb
adc
mov
ja
in
das
mov
adc
ljmp
or
call
pushf
test
incb
aam
incl
mov
pop
sub
sbb
xchg
cmc
bound
sti
jl
mov
sti
cmp
jnp
inc
inc
ss
cmp
ss
stos
jp
xchg
cmc
clc
nop
leave
std
cwtl
sahf
mov
sti
cltd
xchg
jmp
push
outsl
add
ja
push
das
mov
or
mov
pop
adc
mov
xor
xor
adc
add
in
out
mov
mov
insb
sub
dec
mov
loop
inc
popf
ljmp
or
jl
cld
fdivp
inc
js
xchg
inc
pop
sahf
std
xor
sti
into
insl
dec
mov
mov
jae
mov
mov
mov
or
cmp
mov
and
xchg
call
mov
testl
dec
loope
or
mov
inc
repz
mov
popf
xlat
jecxz
sbb
jp
jle
hlt
mov
ljmp
push
or
stos
mov
cmp
stos
push
std
lea
mov
sbb
dec
lcall
mov
jo
xchg
in
lret
cmp
jnp
push
push
ljmp
rol
mov
fcomip
or
jmp
adc
dec
jmp
pop
cmp
and
mov
repz
jl
or
mov
call
cld
incl
cmpxchg
dec
add
adc
and
into
fs
jl
jns
ret
std
dec
cmp
sbb
push
test
jae
sbb
test
inc
arpl
cmpsb
sbb
ljmp
xchg
jg
dec
sub
mov
adc
pusha
sbb
std
xchg
or
cltd
loopne
iret
lcall
sub
scas
sbb
lcall
rol
cmpl
mov
and
pop
adc
add
mov
adc
pop
loope
pop
xor
pushl
jne
pop
or
push
jmp
mov
jb
ljmp
adcl
cmc
ret
scas
test
mov
pop
mov
std
rorl
and
lods
pushf
xchg
jo
dec
fimull
mov
or
xchg
std
jbe
xchg
push
push
mov
loop
mov
mov
scas
decl
sahf
jp
jmp
cmp
xchg
decl
and
ds
xchg
pop
xor
dec
std
arpl
sti
stc
mov
sub
xchg
mov
leave
push
je
push
test
mov
or
lcall
cs
out
inc
imul
aas
jo
andl
dec
aad
pop
pop
and
inc
sbb
xor
lahf
cmp
mov
shll
xor
shlb
in
add
lods
pushl
les
mov
lret
cmpsl
cwtl
jae
jecxz
imul
insb
sbb
jl
mov
outsl
jns
sub
lds
fsubs
pop
jge
jmp
movsl
mov
loopne
add
inc
cs
or
psrad
rcrb
pop
xor
xchg
aad
and
jnp
inc
lret
or
add
jecxz
add
sub
sbb
test
sbb
push
std
or
and
and
in
inc
xchg
insl
adc
dec
mov
fiaddl
scas
nop
fists
mov
cwtl
loop
dec
imul
add
add
mov
xchg
cmp
xchg
mov
call
popa
mov
shlb
push
repnz
mov
dec
cmp
jo
in
iret
stc
lcall
sub
or
mov
mov
fmuls
push
jmp
inc
cmpsb
xor
sti
xor
lds
call
add
adc
out
sarl
insb
lret
mov
cld
sub
adc
cwtl
ret
add
repnz
jae
sub
or
cld
adc
cmpsl
rolb
inc
pop
ljmp
mov
ret
mov
iret
add
mov
in
or
xchg
jecxz
shrb
push
mov
adc
mov
cwtl
incl
inc
mov
lods
dec
jb
sbb
fnstenv
stos
mov
push
adc
stc
rol
scas
int3
pop
repnz
and
inc
lahf
adc
insl
sub
inc
dec
add
cli
in
imulb
fdivr
int3
in
jp
into
dec
fcos
jne
sbb
push
rep
sahf
sbb
js
pop
ss
sahf
in
sti
xchg
sbb
sub
push
cmpsl
mov
pop
jmp
mov
insl
shlb
pop
popa
push
std
fsts
in
jge
scas
sub
test
pop
mov
ret
sti
jg
jge
jge
mov
push
fdivrp
jecxz
xchg
jnp
and
adc
fsubr
popf
pop
addr16
xlat
lcall
mov
sub
fidivrs
pop
aaa
push
jne
pop
mov
test
mov
adc
stos
sbb
mov
jmp
stos
shll
cmp
mov
enter
sti
subl
cmp
inc
mov
xorb
loope
imul
decl
mov
jne
mov
mov
pop
cld
pop
addl
sub
aaa
and
test
xor
dec
sub
fdivs
inc
pop
outsb
jl
mov
cmp
pop
sbb
sti
sub
icebp
scas
popa
push
out
pop
mov
xlat
or
scas
pop
pop
sarb
jecxz
add
std
add
test
pop
xchg
xchg
sub
mov
fimuls
push
mov
insb
imul
std
sub
iret
aas
cld
insl
decb
fildl
pushl
and
idivl
jmp
cs
cltd
scas
repz
sti
out
cmp
sbb
dec
add
adc
fwait
bnd
pushf
repz
imul
mov
jmp
call
lahf
imul
xor
sbb
push
daa
lcall
cs
stos
stos
ljmp
out
jecxz
dec
ss
test
xchg
fists
shrl
push
inc
outsb
fnstsw
arpl
loope
jmp
sub
jne
adc
pop
outsl
jg
jns
sti
sbb
stos
and
jnp
sahf
jb
jmp
sti
inc
mov
pop
imul
repz
xor
mov
mov
popl
faddp
push
fcos
inc
ljmp
in
mov
jns
popf
fimuls
inc
daa
out
das
cmc
imul
sub
pop
cmp
and
fiaddl
out
and
mov
pop
scas
push
or
pop
out
pop
jne
sti
test
repz
movsl
lcall
xor
xchg
inc
subl
hlt
fiadds
jp
mov
inc
mov
mov
xorb
sti
fprem
stc
mov
sti
cmp
push
dec
jne
pop
enter
test
movups
xchg
xchg
mov
mov
lcall
lds
sub
push
aaa
out
jo
ficoml
xor
sbb
xchg
cmp
jne
xor
bound
popl
mov
mov
call
mov
add
jl
pop
cvtpi2ps
pop
andl
scas
sarl
call
mov
fsubrl
out
jno
outsb
movsl
mov
or
shlb
cld
scas
aas
sbb
js,pt
push
movsl
iret
leave
mov
xlat
xchg
int3
push
xor
inc
imul
data16
jo
push
add
sbb
in
inc
scas
enter
outsb
pop
push
cmp
movsl
and
mov
ljmp
insl
adcb
leave
or
mull
je
insb
xchg
jl
ds
or
mov
xor
addr16
inc
leave
jmp
cs
test
cmp
and
jge
sub
call
pop
scas
mov
mull
inc
cs
push
scas
pop
xchg
mov
frstor
push
inc
lods
xor
mov
jl
and
jmp
ja
out
lret
lcall
mov
movsb
in
dec
jge
cmp
pusha
dec
xlat
out
jmp
lods
sahf
mov
ljmp
aam
mov
outsb
adc
aad
ljmp
inc
push
test
xchg
stc
sti
mov
sbb
into
test
insl
pop
pop
pop
xchg
aas
xor
xor
leave
inc
xor
pushl
and
mov
sub
sbb
dec
sub
imul
ljmp
data16
in
xchg
xor
xchg
stc
jle
cmpsl
dec
sbb
sti
cmp
nop
aas
jp
jmp
jne
sbb
pop
lock
lahf
fwait
in
xchg
jmp
test
lcall
jb
add
ds
mov
xor
cmp
aam
popa
dec
fsubr
push
pop
jp
sub
adc
mov
cld
jae
jb
int3
pavgw
std
sub
cltd
jp
inc
outsl
inc
jae
call
pushf
xchg
js
xchg
push
call
xor
pop
dec
int
jp
scas
loope
mov
inc
sub
jmp
ds
repnz
xchg
into
call
imul
and
mov
mov
cmp
pop
fs
mov
rclb
sti
gs
jne
mov
inc
aaa
jecxz
xchg
fsubr
pop
jl
jns
cmp
inc
sbb
lcall
sbb
xchg
xchg
sbb
inc
jecxz
fucomp
int3
enter
scas
popf
je
incl
and
outsb
ds
sub
adc
dec
test
dec
mov
pop
out
add
shl
call
testl
jb
repz
mov
sub
popf
xchg
push
ljmp
inc
jl
adc
pusha
sbb
popl
push
xchg
cld
dec
lahf
push
int
xor
dec
adc
sub
loop
lock
call
pop
in
add
xchg
stos
sub
daa
mov
insb
dec
ljmp
mov
push
loop
jns
sbb
sbb
rsm
pop
push
std
neg
ss
lcall
sub
jmp
mov
and
insl
mov
lcall
fxch
sub
out
pushl
push
cltd
inc
or
cmp
cli
xchg
js
aad
pop
mov
es
ljmp
adc
pop
jp
lcall
scas
fcompl
jb
mov
mov
ret
mov
repnz
into
dec
and
mov
jno
xchg
repz
inc
subl
sarb
out
or
bound
pop
pop
inc
fimuls
add
ds
mov
cmp
imul
movsl
xchg
sbb
jns
stos
or
int
pop
test
std
shr
cld
sbb
cmc
ds
sti
mov
xchg
push
and
cmp
mov
sbb
ja
jae
mov
in
inc
rep
je
or
es
mov
jl
pop
test
pop
repz
push
add
or
push
mov
sub
and
push
leave
lret
dec
ljmp
jg
push
xor
pushl
in
push
pop
cmp
mov
jmp
inc
mov
loop
inc
imul
pop
stos
sbb
fcomip
and
pop
cltd
add
ja
insb
add
faddl
shr
pushf
pop
push
std
jp
loop
pushl
sbb
out
dec
xchg
shll
ror
adc
pop
std
daa
cmp
jge
ss
mov
mov
push
std
in
push
dec
dec
idiv
ljmp
sub
adc
enter
xor
orl
gs
outsb
mov
jecxz
dec
popf
lods
sti
jl
mov
mov
pop
arpl
xchg
cmpl
ljmp
cltd
xchg
pop
pop
std
decl
ficoms
push
jmp
js
ljmp
inc
pushl
sub
std
ljmp
cmp
push
push
aad
mov
and
sti
adc
xchg
push
jnp
pop
mov
adc
jecxz
push
stc
dec
negl
test
dec
popf
jl
aam
ljmp
pop
or
subl
mov
push
push
or
lret
fdivr
ficoml
pop
daa
cmpsl
shll
out
jne
stos
call
mov
out
repz
mov
dec
cmc
or
adc
pop
ret
push
fsts
stos
cld
lods
rcl
leave
idivl
pushl
pop
xor
and
int
and
loopne
xlat
jb
mov
bound
dec
repz
pop
mov
xchg
pop
loopne
inc
mov
xor
rcrl
jle
sbb
and
or
jmp
sbb
pop
push
nop
ret
mov
adc
movsl
fmuls
pop
andb
mov
inc
decl
xchg
sub
push
push
push
mov
pop
std
mov
cmp
outsb
dec
sub
mov
mov
mov
dec
incl
xor
add
in
into
insl
pop
icebp
cld
out
inc
cmp
or
pop
adc
sub
xor
xor
outsb
mov
test
jmp
mov
or
lcall
outsb
sbb
arpl
incl
push
jmp
mov
fistl
test
push
call
loope
adc
mov
push
and
pop
call
mov
call
xchg
jnp
jl
cmp
fsubl
or
xchg
ret
aad
sub
ds
lcall
pop
xor
mov
xchg
xor
fists
mov
mov
popa
fisubrs
rep
dec
sub
call
fstpt
inc
mov
jmp
das
rcll
popa
call
ss
add
leave
add
jbe
imul
xor
insb
insl
xchg
out
mov
in
sbb
mov
sbb
add
out
mov
mov
mov
add
xchg
jecxz
inc
adc
fwait
cmp
xor
adc
incl
adc
cs
rcr
xchg
nop
or
imul
or
inc
jecxz
xchg
cwtl
cmp
sti
call
dec
cld
cmp
mov
jae
rorb
jge
push
push
xor
cmp
das
jno
cld
sub
decl
mov
inc
sub
mul
pop
pushf
jne
popf
lds
xor
mov
out
inc
jp
mov
sbb
std
mov
cmc
pop
push
sbb
ret
inc
sbb
dec
stc
ss
adc
mov
lahf
pop
adcl
pop
subl
std
inc
jecxz
mov
gs
pop
test
pop
test
lret
adc
inc
pushl
into
hlt
cmp
xchg
adc
std
lcall
icebp
loopne
and
pushf
outsb
and
aaa
xchg
mov
call
pop
loopne
cltd
in
jmp
ljmp
ljmp
dec
mov
sbb
adc
roll
dec
pop
cmp
je
repz
push
sbb
clc
mov
cs
or
add
subl
mov
outsb
leave
shrb
je
pop
nop
dec
or
cmpsl
adc
xchg
mov
jecxz
scas
cwtl
inc
aam
fldt
pop
jmp
decl
clc
inc
jno
gs
aaa
inc
xchg
outsl
leave
fmull
jo
decl
daa
jb
inc
pop
mov
jmp
push
pop
inc
xorl
jecxz
enter
or
repnz
jnp,pn
add
cltd
inc
mov
jne
sahf
sbb
decl
sbbl
jle
push
xor
pop
test
mov
ljmp
adc
inc
incl
sbb
pop
jb
fistl
idiv
inc
cmc
imul
or
out
adc
mov
sbb
sub
inc
adc
lods
mov
in
mov
push
jo
mov
pop
call
cmpsl
and
daa
cli
sbb
insb
add
jo
movsb
fcomps
js
dec
mov
outsb
and
jecxz
xchg
jle
pushl
and
bound
decl
rclb
es
insb
ss
or
adc
pop
mov
sub
sub
push
push
jge
jecxz
pop
insb
sti
pop
mov
jmp
idiv
pop
pop
push
out
xlat
ds
pop
repz
inc
incl
push
stc
push
int3
or
jecxz
lods
je
mov
cld
fiaddl
mov
scas
mull
sbb
sub
push
jl
jae
sbb
pop
imull
cld
jp
sbb
adc
push
xchg
sbb
pop
mov
testb
bound
cs
sbb
je
jecxz
dec
divl
cld
out
dec
cmp
scas
test
jecxz
pushw
jmp
mov
jae
add
cmp
incl
into
lretw
pop
jp
jb
mov
mov
popa
xchg
cmc
push
in
mov
outsl
insb
hlt
fld
pop
daa
ds
pusha
push
call
scas
or
sbb
lock
outsb
push
jno
test
cwtl
sub
pushf
out
out
jecxz
xchg
dec
push
test
xlat
lods
add
sti
fcomip
cmp
xchg
aad
mov
std
add
xchg
pop
gs
std
sub
mov
lret
xor
sahf
push
loope
jmp
rcr
jo
sar
imull
scas
push
pop
std
mov
mov
popa
out
dec
cld
les
out
loop
subl
jge
out
ja
jecxz
lds
roll
xchg
fstpl
out
std
lods
dec
sahf
xchg
stos
cmpsb
cmp
sti
push
mov
insl
fdivl
inc
cli
ds
fcmovbe
fstps
mov
pop
ret
into
arpl
jnp
cli
jecxz
sub
fidivs
pop
testb
mull
sbb
mov
pop
test
pop
pop
cmp
and
lret
jmp
popa
ljmp
mov
xchg
test
pushf
jmp
jmp
xchg
mov
sub
jmp
fidivl
adc
xor
movsb
rcl
and
fwait
push
sub
sbb
add
and
sarl
fwait
mov
push
test
cs
in
jmp
or
shl
je
xchg
int
cld
mov
mov
jge
mov
lods
dec
dec
push
addb
mov
push
cmpsb
mov
pop
lcall
pop
dec
inc
mov
iret
adc
push
call
cmpsb
sub
push
stos
xlat
aas
push
or
push
dec
and
dec
cmp
pushl
jnp
inc
call
mov
decl
movsb
mov
push
out
mov
lods
inc
into
pop
dec
xor
jecxz
push
out
les
mov
call
addr16
loopne
cmp
mov
fldt
les
out
mov
adcl
arpl
pusha
mov
dec
insl
mov
int
pop
mov
push
subb
mov
imul
pop
cmp
cmp
sbb
imul
je
and
jecxz
inc
mov
les
incl
dec
xchg
jecxz
ljmp
pushf
addr16
fadds
aam
ljmp
jmp
add
push
incl
daa
iret
jmp
fisubrs
test
adc
into
sbb
cltd
shlb
sbb
add
mov
mov
cld
add
lcall
cmp
xor
cld
fadd
jge
dec
shll
incl
mov
adc
mov
les
out
fidivrs
xorl
sbb
cmp
jle
sub
and
inc
sbb
jmp
orb
jb,pt
push
ljmp
adc
repnz
ds
mov
sti
ret
or
daa
jecxz
das
sbb
inc
ja
and
sbb
mov
mov
loopne
scas
jecxz
xor
mov
jmp
push
adc
lret
mov
stos
sti
jge
cmc
pop
nop
add
je
mov
jb
sbb
lahf
ret
push
or
mov
enter
xor
pop
mov
ljmp
jb
cmp
das
mov
sub
or
mov
lock
enter
cmp
mov
fdivs
jge
xchg
inc
repz
cmp
stos
mov
cwtl
xor
pop
jnp
jns
loopne
in
imul
cmp
jne
add
push
push
enter
in
call
shlb
inc
xchg
push
mov
ret
cmp
sub
pushf
imul
cmpsl
ds
out
mov
mov
dec
ss
decl
jle
and
mov
pushf
outsl
popf
fwait
shl
rcll
popf
or
cmpsl
incl
pop
test
pop
sbb
cld
and
les
call
mov
inc
scas
jl
into
fsts
loop
mov
sbb
lahf
push
and
dec
arpl
mov
cmp
mov
gs
or
loop
pop
js
jle
mov
call
mov
add
sti
in
mov
and
std
out
cltd
mov
jmp
icebp
inc
push
adcl
or
lahf
aas
sbb
mov
test
sub
cmp
ss
xor
lods
push
roll
mov
aaa
decl
int3
dec
and
sub
xchg
clc
adc
cld
push
lock
jns
adc
sbb
fdivr
daa
mov
pop
notl
fstpt
sbb
shll
jb
xchg
pop
push
cmc
ljmp
xlat
insl
dec
pop
fwait
sub
stc
inc
addr16
repz
fsubl
or
inc
cmp
imul
cltd
fcoms
mov
pop
out
mov
or
mov
mov
rclb
lods
shrl
pop
sub
mov
jecxz
aaa
mov
jge
fimuls
call
shll
inc
lods
jge
dec
out
btcl
sti
stos
jg
mov
std
lods
cmpsb
jae
adc
dec
ret
fldl
mov
sbb
sbb
mov
adc
mov
xchg
pop
pop
sbb
std
fmul
ds
ljmp
sbb
cs
mov
ljmp
ja
movsb
decl
std
out
sbb
mov
leave
popf
and
cmp
dec
mov
loop
push
mov
call
fistpll
repz
fmul
xchg
aad
fsubl
div
and
mov
jnp
jne
sti
pop
in
cld
sub
je
jge
movsl
xchg
cli
mov
lock
decl
push
std
xchg
stos
push
mov
jmp
out
cld
out
pop
mov
ret
pop
je
imulb
mov
call
stos
rcll
mov
adc
pushl
out
push
mov
sub
sar
int
out
xlat
xchg
cmpb
sti
fcmovne
fists
stc
fmulp
push
inc
ljmp
scas
push
mov
in
inc
imul
dec
xlat
outsl
cmp
test
out
pop
repz
sbb
les
rcrl
inc
mov
adc
decl
sub
jl
lods
mov
es
rcll
std
push
insb
addr16
xor
mov
push
xor
es
ret
mov
in
jbe
pusha
pop
mov
mov
lcall
cwtl
xchg
sar
int
std
fdivrs
call
gs
scas
push
jecxz
fstpl
pushf
mov
pop
std
push
pushl
dec
cmp
mov
repz
pushf
rol
cs
sti
es
xlat
mov
jmp
jl
ljmp
pextrw
push
sbb
pop
cmp
ret
pop
sbb
push
bound
push
jo
xor
jecxz
test
fcomps
push
xchg
into
sub
movsb
add
sbb
sahf
mov
push
faddl
sti
push
add
cltd
ficoml
inc
dec
and
xchg
cmc
out
sub
mov
xchg
ljmp
jo
outsb
loope
push
xor
add
call
jbe
xor
incl
mov
xor
mov
inc
adc
outsb
mov
cmp
add
inc
jbe
rcr
jl
rorl
fidivs
mov
dec
ljmp
jne
inc
pop
mov
nop
xchg
or
shrb
cmp
repz
popf
adc
popa
xchg
cmc
decb
insb
mov
lock
mov
jecxz
sbb
cld
mov
scas
mov
sahf
cmp
xor
pop
mov
cmp
cld
pushf
pushf
xor
loop
push
and
dec
cmpsl
shl
std
jo
stos
sar
cld
pop
xorl
test
lcall
fcoms
mov
lds
outsl
jecxz
xor
fcompl
or
and
mov
daa
or
mov
lds
ljmp
fdivs
icebp
xchg
jmp
xlat
leave
push
sbb
dec
repz
sahf
fistpl
cmp
incl
je
arpl
or
call
push
sbb
pusha
repz
test
aam
jne
fisubrl
mov
imul
int
lcall
sbb
xor
and
stos
jo
xor
adc
jnp
fdivrs
mov
pop
mov
xchg
and
add
incl
mov
adc
jmp
cltd
sub
mov
dec
lods
cmp
popa
xchg
nopl
inc
mov
out
in
cmp
fwait
mov
cmp
rorl
lahf
push
std
lods
jmp
stos
or
frstor
sub
mov
shl
out
mov
jp
xor
pushl
inc
dec
loopne
leave
adc
or
sub
not
ljmp
mov
inc
push
mov
cmp
inc
xchg
subl
jle
mov
xchg
push
imul
push
sub
insb
jecxz
sti
inc
cmp
ds
test
mov
out
jae
sub
std
imul
ret
iret
fistl
sahf
jg
std
jmp
or
punpckldq
sub
adc
decl
sub
and
sub
scas
test
add
int3
sbb
or
push
call
mov
mov
xchg
mov
cmp
outsb
adc
iret
pop
rorl
scas
andl
push
je
mov
decl
inc
leave
in
and
aam
test
pop
mov
test
je
cmc
adcb
repz
loope
scas
ret
imul
or
in
push
decb
add
cmc
out
pusha
mov
cltd
stos
insb
xchg
jecxz
addr16
inc
jae
sub
aaa
add
pop
nop
repz
mov
ljmp
std
fs
in
rcll
inc
arpl
ljmp
dec
stos
sti
mull
repz
es
cmc
test
addr16
nop
adc
sahf
jns
cmp
subl
inc
push
loope
movsb
std
mov
xchg
dec
mov
push
push
inc
jp
in
pop
ret
call
mov
scas
mov
xor
cmp
call
push
inc
adc
or
sbb
ret
dec
lds
dec
xor
sub
push
push
sti
flds
adc
mov
out
cmp
into
mov
add
dec
test
jecxz
lcall
xor
ficompl
mov
dec
icebp
lods
movd
inc
inc
pop
popa
mov
cmpl
pushl
scas
shrb
mov
xchg
sti
lods
pop
inc
jb
adc
rorl
stos
pop
leave
mov
das
mov
sbb
adc
addl
sub
jle
xor
push
xchg
sar
loope
insl
mov
aaa
jne
loop
lret
mov
sbb
ljmp
dec
inc
ljmp
add
push
cmpsb
sbb
push
mov
pop
sti
incb
cmpsl
in
imul
adc
out
rorl
xchg
lahf
mov
dec
pop
push
dec
fst
sbb
pop
mov
lahf
insl
mov
cmpl
scas
out
clc
cmpsb
jne
adc
mov
or
mov
imul
icebp
sti
arpl
fistl
sub
hlt
jle
push
out
lods
dec
ficoms
imul
insb
jmp
rclb
xchg
push
sti
shll
dec
nop
jbe
lods
roll
pop
sahf
inc
xchg
shrb
enter
fisubs
mov
int3
push
mov
jle
cmp
pop
stos
pop
fldt
xor
fidivl
mov
adc
subl
das
cmp
push
push
shlb
call
clc
cmp
jmp
push
cwtl
sti
repz
nop
lods
ja
pop
cmpsb
mov
ljmp
xchg
movsl
lods
std
cld
lret
sbb
ljmp
out
mov
fwait
in
decl
popa
mov
jb
pop
sti
adc
daa
movsb
jecxz
aas
icebp
cmp
hlt
test
rcrl
pop
xor
imull
mov
mov
repz
sub
push
dec
dec
ss
jno
mov
test
jns
ljmp
jecxz
test
mov
adc
dec
cltd
sbb
jmp
mov
xor
hlt
sti
pop
lods
inc
fnstcw
push
jne
push
jmp
adc
sbb
lea
jmp
sub
aad
xchg
push
xor
jg
das
stos
int
jmp
inc
and
dec
cmpsl
test
ret
into
aam
jecxz
xorl
mov
iret
sbb
cli
popf
or
std
xchg
dec
pop
cmp
mov
xlat
dec
jecxz
das
pop
outsb
mov
pushf
push
aaa
sbb
xchg
stos
lret
cmp
mov
mov
std
out
int3
test
ljmp
and
sbb
jg
jb
inc
mov
push
mov
mov
cltd
add
xchg
cs
mov
push
pop
in
jle
pop
scas
fwait
insb
cmp
js
add
jg
and
and
cmp
scas
and
mov
cmp
call
push
sub
test
lds
jmp
out
sbb
clc
mov
ret
fstpl
cmp
lea
insb
decl
out
mov
adc
inc
xor
jge
mov
cmp
lcall
jb
pop
rcrb
push
xchg
je
xor
sbb
inc
and
jno
pop
and
xchg
push
aam
mov
outsl
dec
sbb
jg
jecxz
imul
ss
sti
icebp
mov
adc
je
fisttpl
or
sbb
ds
les
mov
sub
ljmp
push
bound
mov
data16
lret
sbb
loopne
ret
pop
push
enter
jne
fadds
or
push
pop
sub
add
cwtl
sbb
insl
xchg
adc
pop
repz
dec
mov
test
jae
test
fwait
pop
cld
loop
sar
inc
daa
inc
mov
mov
leave
sbbb
shrl
int
ljmp
cmc
xchg
sar
dec
fwait
cli
sub
push
or
call
int3
mov
xchg
fisubrs
inc
test
out
ficoml
and
incl
das
xor
adc
mov
cs
cmp
adcb
leave
push
add
sti
or
jg
jae
fsub
adc
sub
cmc
jmp
cmp
dec
mov
call
fdivrs
lods
xchg
lods
shll
clc
ss
sub
test
in
imul
test
insb
cmp
test
les
or
mov
jmp
sub
sbbb
inc
jmp
add
cld
sti
jmp
dec
mov
stos
lahf
jecxz
cltd
lret
in
popa
loopne
aas
jmp
lock
inc
sub
adc
inc
idivl
clc
cld
push
lds
mov
dec
jae
or
shr
rclb
lret
mul
sub
cmp
mov
add
outsl
out
pushl
call
outsb
mul
push
fwait
or
and
jb,pt
shll
test
jge
fmuls
outsb
mov
ficoms
jnp
movsb
push
lods
xchg
and
mov
decl
inc
aad
int3
push
out
mov
cmp
lahf
mov
mov
cld
push
arpl
cs
pop
xchg
sti
jge
or
lock
addr16
js
pop
mov
pop
mov
dec
ret
dec
sti
push
incb
ss
mov
popa
dec
sbb
dec
int3
mov
push
xchg
adcl
fcmovbe
fnstenv
cmp
insl
movsl
lods
sti
je
pop
sbb
pop
adc
pop
repnz
ds
fimull
mov
push
mov
inc
add
sbb
push
jl
ret
roll
jbe
flds
rcll
rorb
imul
mov
jne
pop
or
sar
mov
addr16
pop
adcb
js
jge
jle
pusha
jb
in
mov
fisttpll
test
cmp
jns
stos
xchg
cmp
dec
xor
mov
push
mov
in
cmp
adc
jg
mull
rcl
jle
sub
jg
jo
addr16
xchg
stos
mov
popf
aas
cmp
xor
dec
mov
mov
inc
cli
cmp
cmpsl
out
and
stc
sub
sti
dec
into
mov
fcoml
dec
mov
repz
jl
scas
xor
pop
xchg
pop
cltd
or
test
das
call
repnz
orl
std
or
arpl
jg
add
jbe
inc
and
idivb
pop
or
ljmp
repnz
nop
mov
lods
jl
adc
fdivr
xor
inc
hlt
leave
mov
cmp
jecxz
cmpsl
inc
mov
pop
test
sub
decl
hlt
ss
leave
mov
mov
cld
mov
lds
daa
outsb
leave
or
sahf
lea
decl
gs
inc
mov
cs
sbb
and
cmp
je
mov
pop
jns
dec
ficoml
lcall
adc
popa
stc
xor
aam
decl
cmp
ja
inc
dec
push
js
push
rcr
pop
mov
repz
and
and
ror
inc
fstp
cmp
or
add
or
out
fsubrl
or
inc
jg
mov
notrack
data16
arpl
ja
aaa
cs
int
fdivl
dec
incl
mov
shl
xchg
dec
cmp
fimull
shll
sub
lret
imul
inc
xchg
js
cmp
mov
in
sti
mov
add
pop
xor
imul
mov
mov
lcall
daa
ficoml
jmp
mov
test
inc
mov
add
mov
xchg
push
lret
cwtl
push
sahf
cmp
jmp
mov
mov
cmc
dec
jne
push
in
and
mov
push
mov
mov
mov
add
stos
loopne
imul
ljmp
xchg
cld
push
jg
jae
lds
jl
std
stos
addr16
std
fldenv
pushf
gs
mov
mov
shll
fists
popf
jl
stos
lods
mov
pop
cmc
xchg
popf
pop
mull
adc
jo
pop
addr16
or
mov
mov
shlb
sub
cmp
add
test
ja
inc
outsb
repz
scas
mov
mov
lahf
lahf
addr16
add
mov
cmp
shrb
and
hlt
notl
mov
inc
jne
fmull
std
xchg
pop
out
decl
daa
cmp
push
mov
lcall
mov
inc
cltd
dec
or
stc
nop
scas
enter
int3
pop
rcll
jg
add
test
and
and
dec
lahf
pop
mov
je
lea
std
std
and
inc
push
add
dec
loope
sub
stc
pop
jno
mov
inc
and
outsb
push
mov
mov
adc
fwait
jmp
sti
dec
fdivrp
sub
cmc
fsubrl
push
mov
sbb
or
in
pop
pop
push
jno
dec
jmp
mov
adc
ljmp
cmpsb
pushf
xchg
scas
incl
stc
mov
xchg
sub
scas
jecxz
les
movsb
push
push
daa
ss
pop
incl
cwtl
inc
add
jmp
test
lcall
loop
pushf
cs
ret
sub
stos
in
adc
addl
jmp
pop
jbe
rcrb
pop
mov
mov
call
xchg
jge
add
fisubs
mov
pop
xchg
xchg
pushl
mov
fcmovne
in
and
call
in
ja
lcall
sub
mov
idiv
inc
and
pushf
loopne
lcall
scas
rclb
dec
enter
xchg
cmpsb
test
fiadds
call
data16
push
sbb
adc
std
pushl
jg
xchg
fldcw
cmp
cmc
xor
cmp
inc
and
fwait
int
arpl
pop
std
inc
fdiv
sbb
mov
aas
addr16
cmpsl
fsubp
push
lods
xor
call
mov
cmpsb
mov
and
dec
lods
mov
jae
push
xlat
in
lods
ja
imul
push
cmp
call
leave
outsl
dec
mov
call
mov
sar
jge
push
insl
jmp
xchg
dec
inc
xor
mov
fisubrl
jg
jmp
push
add
in
or
push
push
call
call
popl
daa
popa
repz
cmpl
sbb
dec
call
inc
mov
pop
mov
xlat
pop
or
out
out
sub
test
pop
mov
cmp
adc
cmpl
loopne
sub
sbb
push
mov
xchg
in
jecxz
daa
movsb
or
mov
incl
push
movsl
jecxz
or
call
ja
std
and
sub
jmp
jp
cmp
ljmp
mov
add
push
jb
adc
xchg
jge
cmp
rcl
xchg
decl
in
mov
fnstenv
mov
addr16
shrl
push
xchg
and
gs
sbb
cs
mov
mov
or
loopne
jae
das
add
adc
loope
popf
std
cmpsl
jg
adc
xchg
fwait
std
cmp
and
pop
lcall
jo
int
push
movsl
sbb
sbb
push
lods
stos
add
es
mov
aam
xchg
xchg
cmp
and
insb
jle
mov
sub
div
inc
push
leave
cmc
popa
repnz
pop
mov
push
pushl
jg
fwait
add
rcr
cmp
mov
jmp
inc
stos
dec
incl
lods
pop
jle
pop
outsl
jns
cwtl
adc
aaa
enter
mov
mov
dec
sbb
insb
push
sbb
das
sub
sub
out
pushf
dec
dec
popa
jmp
jle
jae
jbe
ljmp
iret
and
cmp
arpl
cwtl
jbe
orl
dec
fadds
fidivs
incl
dec
out
mov
and
test
pop
jge
sub
xchg
in
mov
lcall
insb
loope
fcoml
addr16
lcall
andl
xor
test
fsub
mov
dec
dec
jp
push
repz
sub
xor
sbb
imul
sub
and
mov
cmp
pop
mov
aad
xchg
fsubrs
xor
repz
std
out
xchg
scas
sbb
add
jecxz
int3
fistpll
iret
jg
cmp
inc
call
cmp
and
leave
popf
dec
daa
aaa
jmp
mov
mov
ljmp
cs
push
rol
push
std
ss
movsb
mov
jecxz
cmp
mov
ds
sub
popf
lcall
adc
jo
inc
mov
sbb
adc
adcl
lds
xor
imul
jns
aam
arpl
or
sti
cmpsl
ret
mov
jno
in
leave
je
lods
dec
ss
rcr
adc
cmp
lahf
cmp
int
ljmp
sti
ret
xor
push
js
cmp
or
loopne
pop
mov
adcl
sub
orb
cmp
sbb
int
fs
call
insb
jae
pop
mov
inc
inc
out
or
mov
inc
mov
cmp
sbb
arpl
je
push
cmp
repnz
adcl
sahf
loop
dec
aaa
in
add
enter
lock
pop
cli
outsl
call
jmp
xchg
jecxz
mov
xchg
bnd
cmp
sbb
dec
fdivl
sahf
ret
popa
or
add
test
add
jmp
bound
jmp
scas
push
cli
repz
sbb
jecxz
sbb
ljmp
pusha
into
decl
scas
leave
add
push
push
dec
loope
add
in
lds
scas
sbb
rclb
rorb
arpl
xlat
je
and
sub
repz
and
sbb
mov
mov
je
adc
push
daa
sub
cld
add
sbb
dec
mov
adc
jmp
xchg
sbb
and
or
enter
adc
push
lahf
and
jl
or
cmp
inc
int
out
mov
pop
decl
jb
inc
cltd
std
sbb
roll
pop
scas
add
adc
jno
mov
pop
dec
add
inc
das
jo
cmpl
jb
push
pop
incl
and
hlt
and
mov
jecxz
ljmp
std
pop
sub
push
jmp
xor
fadds
scas
or
std
inc
cmp
int3
clc
pop
ljmpw
nop
rcl
inc
mov
ss
js
and
pushl
scas
or
es
ret
movsb
std
push
leave
pop
cld
bound
or
xchg
lret
ret
clc
inc
jg
xor
add
popf
stos
pushl
das
jb
and
sbb
mov
pop
xchg
int
jmp
popf
insb
scas
cmp
mov
clc
lea
decb
popa
adc
sub
or
decl
pusha
xchg
pop
or
pushl
cmp
scas
adc
lcall
bound
inc
add
ds
movsl
je
xchg
lcall
jb
sub
gs
mov
pop
outsb
cmc
and
fwait
mov
sbb
hlt
or
jnp
lds
pop
pop
mov
adc
dec
dec
ret
mov
in
cld
jns
shrl
adc
push
inc
jbe
lret
fldt
sahf
ja
pop
jae
sub
shl
rcrb
mov
pop
or
add
sarl
xor
fisttpll
pop
sti
jae
jno
jge
clc
stos
scas
rorb
xor
aad
decl
mov
xchg
pop
insl
lock
cmp
lods
insb
sti
sub
push
notb
repz
dec
pop
adc
ds
jge
filds
js
addl
pop
and
imul
into
je
pop
mov
mov
aad
std
imul
lds
inc
pop
std
jno
xchg
jnp
push
add
cltd
xorl
xchg
jnp
lock
cs
and
std
fdivrl
dec
outsl
pushl
pop
xor
adc
push
push
lods
leave
cmc
call
xor
mov
neg
loopne
pop
jl
cmpsl
pushf
hlt
jecxz
call
dec
jns
mov
jbe
xchg
gs
lcall
adc
mov
push
call
mov
insl
imul
jmp
lock
int
sbb
inc
sub
pop
cmp
es
in
negb
mov
ret
and
outsb
inc
fildll
scas
push
jecxz
es
sbb
ljmp
mov
movsb
fucomp
js
push
aam
dec
xor
sub
add
repnz
mov
jmp
lea
aad
jnp
dec
push
je
decl
lods
push
xor
movsl
test
add
fwait
call
and
mov
iret
cmc
mov
repz
shrl
scas
out
imul
lret
icebp
xchg
add
rorl
mov
icebp
ljmp
sahf
push
pop
jp
mov
loope
sbb
adc
jle
dec
negl
pop
enter
push
cmp
mov
inc
mov
ror
mov
pop
jmp
jnp
xchg
push
je
mov
in
cmp
rcl
repz
decl
sti
mov
pushl
mov
jb
fsubs
pop
or
or
ret
pop
cmp
int
mov
push
stos
push
sar
mov
cmp
fidivl
mov
sbb
repz
jmp
call
mov
ret
and
shll
je
cmp
and
mov
pop
decl
in
push
outsb
jecxz
imul
sbb
enter
fcmovbe
jmp
imul
sti
cltd
shll
mov
shlb
jecxz
lret
sarb
in
in
repz
push
mov
pusha
xchg
mov
xor
push
rolb
lret
insb
fidivrs
push
in
and
jb
sbb
leave
repz
incb
cmpsl
xor
scas
in
ret
ds
push
cmp
mov
enter
xor
jle
inc
call
out
call
jge
mov
std
jbe
sbb
ss
adc
nop
jae
xchg
push
std
sbb
lret
pushl
jmp
int3
cmp
lcall
repz
and
fidivrs
daa
push
pushl
lds
mov
ret
outsl
bound
es
mov
ficomps
cmp
dec
mov
insb
lock
adc
bound
subl
jne
inc
xchg
outsb
nop
cmp
add
mov
xor
mov
xlat
sub
xor
xor
mov
or
add
inc
imul
xchg
jae
movsl
sbb
add
xor
fistl
pop
pop
xchg
mov
or
mov
xchg
lods
jne
pop
push
mov
inc
xor
dec
sub
add
mov
cltd
adc
in
sbb
mov
int3
popa
xor
pop
outsb
es
jle
pop
and
push
lcall
push
decb
insb
cld
inc
adc
call
jae
mov
test
sbb
sbb
jmp
adcl
cltd
xor
loop
in
pop
sub
and
push
cld
add
mov
sti
push
push
mov
cmpb
call
sti
leave
and
iret
scas
movsl
mov
cmpb
sar
lock
daa
pop
lcall
jno
push
testl
loop
pop
dec
xor
test
out
mov
insl
push
cmp
cltd
sti
jge
fidivl
lods
adc
mov
sbb
icebp
sti
insb
jle
adc
push
xor
shrb
decl
mov
push
ret
call
ret
adc
push
inc
mov
and
loopne
xchg
push
jl
adc
and
out
icebp
or
stos
fst
jg
std
fcomps
jl
sti
daa
fistps
psllq
das
mov
mov
in
pushl
rcrl
test
adc
pop
and
sub
jmp
inc
data16
cmp
decl
fisubrl
dec
adc
mov
add
outsl
fadds
sbb
jb
xchg
cmp
mov
lods
in
sub
pop
cmpsb
pop
ret
sub
int
test
rcll
sahf
jbe
cmp
sub
cmpsb
pop
adc
mov
xor
mov
sub
ret
push
adc
popa
arpl
lcall
push
adc
call
mov
or
push
incl
jo
jbe
push
inc
stos
or
ret
pushl
pop
mov
pop
das
ficompl
lret
push
xlat
arpl
sbb
lcall
ds
jae
push
insb
bnd
dec
adc
push
imul
pop
call
xor
aas
adc
ds
dec
and
cmp
rol
repz
jmp
xor
int
jb
cmpb
test
idiv
adc
out
dec
es
mov
lahf
into
je
or
popf
aad
add
mov
insl
pop
inc
xchg
dec
ss
sub
mov
mov
xor
in
insl
daa
ljmp
add
enter
inc
xchg
sub
call
jg
sub
pop
pushl
push
repz
mov
jnp
call
sahf
mov
lcall
add
mov
mov
imul
lahf
mov
bound
xor
pop
arpl
cld
sbbl
or
jnp
adcb
lods
xor
pop
xchg
repz
lret
mov
mov
sbb
mov
inc
cmp
dec
fcmovu
lret
inc
push
js
push
arpl
cmpsl
pusha
jo
loop
std
dec
out
push
push
je
ljmp
jge
aas
iret
xor
jne
sub
rcrb
and
push
jge
sarl
insl
lods
movsb
aas
fwait
in
imul
xor
jbe
call
shrl
inc
out
push
popa
sti
pop
lcall
xor
and
lcall
test
ret
jecxz
decl
jns
adc
inc
cs
stos
inc
push
in
lcall
fmuls
cmp
fldl
rcrb
or
loope
roll
mov
lcall
call
pusha
inc
jmp
negb
pushf
pop
cwtl
jno
ljmp
loop
iret
sti
cmpsl
lahf
stos
pop
sbb
lds
sub
xchg
push
test
adc
xor
dec
int
jnp
insl
adc
repz
testl
ljmp
cli
addb
add
out
dec
ficoms
jecxz
adc
ss
cld
inc
cltd
push
movsl
sti
subb
mov
sahf
aam
jg
inc
add
test
in
das
adc
or
dec
shl
movsb
je
mov
stos
ret
aas
mov
ret
xchg
out
out
mov
and
lret
popf
pop
jp
jl
push
incl
test
inc
sub
xor
push
aad
aad
movb
adc
shll
fldcw
dec
pop
add
cmpsl
jb
testl
sbb
cmpsl
inc
sub
inc
ja
call
ds
scas
cmc
in
fdivl
lcall
loop
xor
pop
push
cld
mov
lods
cmp
lret
out
push
repz
jne
ja
jge
cld
push
xchg
in
fdiv
je
xchg
and
cmp
inc
rorl
repz
jae
popf
and
mov
ret
mov
decl
sub
decb
cmp
jb
sar
pop
pop
sbb
popa
push
out
jl
gs
jg
pop
das
push
pop
push
loopne
movsb
and
cmpsl
lahf
and
jae
pop
and
mov
hlt
xchg
dec
std
sti
pop
outsb
push
shrl
stos
popa
fstpt
ret
fnstenv
push
js
sbb
aaa
sti
pop
jle
and
xchg
mov
lock
push
dec
lods
and
call
jb
mov
mull
test
out
stos
cmp
ds
cmp
outsl
test
xchg
aam
test
cmp
mov
repnz
imul
jb
and
dec
lcall
aas
dec
jg
ljmp
sarl
and
insl
in
cld
adc
sbb
xor
mov
scas
pushl
dec
out
incl
jae
imul
ds
pushf
cld
pop
sti
movl
pop
std
add
dec
xor
xchg
jle
mov
sub
xchg
call
in
loop
movsb
shll
ljmp
mov
jnp
mov
sarl
sti
push
and
insb
ds
pop
xchg
mov
push
cmp
fnsave
scas
xor
ljmp
jo
pushf
jmp
lds
pop
push
cld
pop
sti
mov
stos
mov
push
push
fwait
adc
xchg
adc
insb
push
decl
mov
imull
mov
scas
inc
mov
test
inc
fsubrp
push
and
in
xor
adc
pushf
test
int3
je
sti
decb
ss
inc
pushf
in
aaa
ret
stc
cmp
std
js
mov
sbb
pop
std
add
mov
sub
inc
jnp
mov
es
mov
or
lret
incl
leave
jle
repz
std
push
cwtl
sbb
jmp
mov
pop
call
xor
xchg
jecxz
sub
sbb
decl
icebp
call
push
fs
in
adc
fwait
sar
mov
clc
shrl
lret
jl
xor
sti
and
jb
fdivr
push
sbb
negl
leave
mov
clc
adc
test
push
mov
mov
sbb
pop
ss
cwtl
ja
pushl
js
loop
sbb
mov
je
incl
dec
dec
ret
push
push
mov
popa
or
mov
inc
add
jmp
pushl
pusha
cmp
loope
mov
lcall
cld
jne
cmp
inc
cmp
mov
imul
in
and
shl
jae
mov
push
pop
mov
xor
xorb
xchg
pop
push
or
inc
add
je
cmp
jecxz
out
lret
jle
fsts
jmp
mov
jno
jmp
mov
dec
cld
movsl
inc
mov
cwtl
test
into
and
sbbl
mov
notb
repnz
pop
push
mov
insb
pop
pop
mov
test
repz
push
jae
pop
enter
inc
fidivrs
push
jecxz
ss
xor
aas
aas
jnp
lock
lcall
xchg
cmp
int3
clc
cmp
ljmp
cmp
insl
and
and
adc
repz
filds
sub
fmul
mov
sarl
fwait
les
xchg
xchg
jmp
push
repnz
jno
cld
mov
push
xchg
jbe
push
push
inc
lock
sbb
lret
call
inc
leave
lods
and
call
jnp
icebp
andb
sti
cmp
add
jmp
out
mov
push
lcall
push
incl
shl
fucom
lods
out
jle
pop
mov
adc
mov
xchg
fdivrp
and
out
aaa
repz
imul
dec
cld
fistps
dec
outsl
sbb
andl
sti
add
pushf
pop
mov
ljmp
pushl
jno
cmp
jmp
sub
dec
pop
fisubl
jno
push
sbb
outsl
xchg
mov
jmp
sbb
outsb
mov
fmuls
mov
jns
xchg
fidivrs
loop
push
jae
sbb
inc
sbb
inc
cmc
push
sbb
cld
cwtl
fwait
imul
jb
fiaddl
pop
stos
pusha
fisttps
mov
jo
push
cs
aad
pop
jle
lcall
shl
inc
pop
pop
and
mov
lods
ret
incl
pop
test
das
and
pushf
or
aas
mov
push
outsb
hlt
repz
push
pop
insl
fcmovnu
inc
out
std
push
dec
cmpsl
incl
mov
ljmp
sahf
js
sbb
add
scas
mov
dec
or
xchg
sbb
jae
imul
inc
jo
jmp
int3
push
mov
call
cli
push
in
jecxz
xchg
repnz
int
pop
xor
ljmp
and
mov
lcall
sbb
mov
mov
jecxz
insb
fs
jl
dec
jle
ljmp
mov
neg
sub
pop
mov
cmc
and
mov
pop
xchg
pop
loope
push
add
call
and
push
mov
pushf
xchg
sbb
int3
push
fcompl
mov
repnz
movb
mov
pop
dec
mov
xor
xor
fmull
std
mov
stc
ljmp
sbb
lcall
nop
lahf
pop
jmp
ficoms
stc
push
mov
mov
push
jge
mov
int3
stos
xor
jecxz
dec
inc
inc
das
mov
imul
jmp
in
cmc
fcmovb
pushf
sti
pop
adc
push
mov
jo
imull
jbe
test
inc
fisubrl
fidivrs
lods
into
push
push
and
mov
inc
xchg
jmp
outsb
adc
pop
cmpsb
jne
int
xlat
push
jge
push
mov
aad
sbb
cmp
testl
dec
add
mov
aaa
mov
std
aas
dec
jmp
fnsave
sub
test
popf
orl
sub
add
dec
fsubl
jo
pushf
mov
mov
mov
jecxz
and
out
mov
cs
pop
mov
in
pop
insl
scas
mov
mov
ljmp
stos
push
loop
stos
lcall
sti
cmp
dec
in
pop
jne
mov
xor
sub
std
jnp
mov
push
sub
mov
int
sar
fdivl
adc
outsl
or
iret
jl
je
pushl
lds
lcall
xchg
and
lea
push
in
test
cmp
mov
testl
fadds
int3
push
sbb
jne
scas
xor
mov
repz
imul
enter
daa
cmp
ficoms
fdivr
shll
rcl
mov
jmp
popl
sbb
divl
test
pop
cmp
xchg
je
jl
sub
xchg
outsl
adcl
xor
push
dec
incl
aad
inc
jg
cmpsb
inc
ret
or
repz
inc
or
in
cmp
subl
daa
shll
lea
inc
pop
shll
mov
pushf
push
leave
jecxz
push
and
into
lods
inc
jmp
sub
jecxz
mov
mov
ja
dec
mov
push
dec
cs
mov
jl
sub
jmp
or
xchg
scas
repz
pop
mov
ljmp
cmpsl
outsb
data16
jb
mov
xor
mov
sti
jo
call
into
leave
dec
dec
hlt
inc
and
mov
jo
pop
pop
repz
inc
inc
scas
icebp
outsl
fdivrl
call
xchg
mov
pop
mov
in
xchg
sub
adc
mov
sbb
lea
sbb
jmp
pop
jbe
mov
cmp
jne
fisubrs
pusha
insb
jno
cld
scas
out
xchg
outsl
xor
lahf
xchg
lret
mov
xchg
jmp
sti
cli
adc
jg
je
loop
bound
dec
mov
fstp
js
sbb
cmp
stos
insl
gs
push
pop
inc
shrl
pop
rclb
jecxz
xchg
js
or
sar
std
loopne
lahf
sti
jbe
dec
sub
cli
test
mov
dec
dec
cmc
lcall
jmp
sub
mov
push
mov
pop
ljmp
sbb
mov
and
adc
rorb
dec
das
lcall
fstpl
sub
pop
pop
leave
mov
jecxz
into
dec
pop
mov
lods
push
pop
fs
jp
pop
lds
repz
xor
iret
pop
jecxz
cltd
pop
and
and
jge
sti
daa
idivl
pop
cmp
cld
sbb
mov
sub
dec
jle
mov
pop
lods
loopne
inc
lcall
cmpsb
push
push
popf
push
div
fidivrl
jmp
push
stos
mov
cmp
cmp
add
std
sahf
jle
std
inc
push
dec
mov
cltd
or
dec
dec
or
repnz
cmp
cmp
ret
arpl
mov
jmp
sub
push
dec
adc
adc
push
andb
popl
dec
sub
mov
ljmp
rcrb
adc
add
incl
xchg
dec
jmp
call
cmp
jmp
aam
mov
inc
sub
hlt
ljmp
in
jns
pushf
pop
js
pop
icebp
lcall
sub
jmp
test
mov
pop
jo
cmp
jmp
testl
test
es
jo
out
fdivrl
cmp
or
loop
call
add
shll
lods
sbb
push
jl
leave
xlat
mov
pop
and
adc
movsl
add
stos
fisttpll
push
cmp
cmp
jae
mov
pop
imul
leave
test
sar
bound
lock
adc
push
pushl
pop
sbb
mov
jle
int
and
xor
pop
test
adc
stos
pop
push
inc
dec
cwtl
xchg
adc
repz
stc
push
es
mov
mov
ret
fcmovnb
lcall
jnp
sahf
lea
ljmp
mov
fxtract
adc
xor
outsb
ljmp
scas
sbb
aam
or
add
repnz
stos
push
mov
push
cmp
ss
mov
decl
sub
xchg
adc
jmp
cld
xchg
movsl
mov
jp
sbb
ret
cmpsl
xchg
lods
pop
jl
outsb
lds
int
shr
mov
outsl
xchg
dec
inc
push
push
and
mov
enter
lds
jo,pn
jmp
and
xor
lcall
test
cmp
inc
lds
je
fnstcw
sbb
add
inc
cld
xor
pushf
hlt
js
adc
adc
and
lods
pop
mov
push
jne
icebp
in
inc
ljmp
out
insb
mov
dec
inc
sar
mov
fs
iret
lds
call
adc
mov
leave
test
jecxz
inc
into
out
dec
loop
jl
or
pop
pop
jae
rclb
push
decl
fldt
jnp
adc
mov
xchg
repz
mov
dec
test
das
mov
sbb
cmp
push
add
or
icebp
adc
add
repnz
cmc
std
ret
xlat
jg
in
jmp
mov
aam
es
pop
jge
lcall
sub
decb
mov
rep
fs
mov
jns
push
test
adcl
lods
jmp
sbb
mov
dec
mov
clc
mov
inc
cmp
jae
ret
pop
into
adc
cwtl
addr16
outsl
aad
ss
icebp
leave
mov
push
lock
sbb
mov
stos
xchg
std
and
decl
stos
mov
mov
insl
fwait
sub
push
rol
ds
jge
dec
mov
cmovns
push
pop
inc
stos
cmp
sbb
ret
out
outsl
cmp
rcrb
pop
iret
dec
dec
xchg
std
lret
sbb
mov
mov
and
or
orb
or
stos
arpl
adc
xor
daa
xorl
dec
clc
in
sti
jge
cmpsl
mov
insb
fmulp
push
sbb
repz
sub
or
sbbb
jmp
jmp
xchg
mov
jecxz
cmpsl
mov
fsub
enter
mov
in
insb
xor
jge
and
popf
loopne
pushf
movsb
sub
inc
arpl
pop
jmp
hlt
cmpsb
insl
std
or
std
jo
lret
into
ss
call
mov
mov
dec
mov
push
stos
lret
mov
outsl
sbb
mov
jg
je
jno
popf
inc
ljmp
stc
mov
call
dec
out
outsb
je
push
ljmp
and
rcrb
xlat
mov
push
cmp
sub
ljmp
test
sti
mov
ja
mov
orl
xchg
mov
jmp
jmp
movsl
dec
ss
adc
mov
int3
das
shrb
std
inc
cmp
popa
stos
push
or
cmp
fwait
mov
gs
call
push
push
decl
sti
test
stos
ljmp
clc
xchg
fidivs
std
pop
push
insl
mov
sti
push
movsb
xchg
inc
pop
out
and
mov
pusha
push
mov
in
sbb
xchg
cld
xor
sub
mov
mov
inc
push
mov
ljmp
rcrl
jecxz
push
mov
sbb
idiv
loope
fdivs
call
clc
inc
dec
shrb
lds
lret
test
pop
push
jle
nop
jno
roll
fcos
aad
loope
pop
mov
pop
cmp
pop
call
int
std
sub
mov
mov
test
cmp
popf
xchg
push
out
loope
imull
and
push
shlb
inc
fbstp
movsb
cwtl
cli
out
fdivr
or
subb
das
jmp
inc
push
out
aas
inc
sub
cmp
ljmp
push
icebp
testb
dec
jecxz
popl
jge
cmc
mov
data16
and
inc
imul
pop
sbb
push
inc
dec
shlb
decl
sbb
sar
push
repnz
jge
ljmp
idiv
push
and
incl
out
push
pop
pop
jge
sub
mov
outsl
inc
dec
mov
adc
xchg
mov
popa
adc
sar
aam
sbb
ret
incl
jns
push
jmp
adc
sbb
mov
xchg
push
mov
mov
stc
dec
xor
lock
je
mov
add
mov
xchg
sti
jo
shlb
dec
adc
xchg
ret
leave
xchg
cmp
cmp
aad
into
sbb
mov
mov
ds
push
test
jmp
pop
xchg
mov
ljmp
push
jl
pop
idivl
fnstsw
and
cs
mov
fidivs
sub
xchg
xchg
mov
rorl
or
xor
fdivrs
mov
daa
or
xor
scas
xchg
pop
sahf
and
je
enter
sbb
sbb
adc
sbb
test
sbb
sub
lock
je
xchg
stos
cld
mov
ss
mov
adc
lcall
jb
pop
push
sub
jns
cmp
adc
pop
fldl
sar
fistpll
push
scas
pushl
push
pop
sbb
sbb
add
adc
jmp
pop
or
fdivr
pop
stos
popf
rorb
sti
pop
add
push
fwait
aas
xchg
pusha
sub
sub
push
push
dec
inc
xchg
inc
cld
imul
enter
cld
arpl
fnsave
es
add
inc
sub
mov
cmpsl
cmp
push
fistpl
adc
sbb
push
arpl
test
fiadds
jmp
aam
popf
std
jno
shl
pushf
fistl
jge
adcb
adc
adc
bound
pop
or
cmp
in
mov
push
jle
jle
xor
mov
push
sbb
cmp
xchg
jae
roll
incl
jecxz
lret
mov
jbe
pusha
xlat
jno
repnz
inc
decl
push
enter
push
repz
dec
fcompl
push
cltd
pop
mov
jmp
add
xor
mov
xchg
vphaddwq
decl
jl
sub
sbb
std
fucom
das
or
arpl
jg
xchg
push
enter
mov
cltd
jge
loopne
test
xchg
sub
jbe
popf
insl
dec
push
ud0
decl
adc
fisubrs
das
mov
idiv
fstl
ljmp
sub
dec
mov
in
cli
lods
stos
clc
jnp,pn
subb
das
xchg
mov
test
jb
inc
mov
pop
pop
dec
cmpsb
lds
pop
pop
dec
pushf
outsb
mov
fcomip
idivl
xor
pusha
adc
in
xchg
lahf
addb
negl
jp
pop
js
ja
cmc
mov
insl
mov
jl
pop
out
or
ret
in
lahf
std
push
ss
xchg
clc
mov
out
shl
shll
cmp
sbb
dec
mov
xchg
iret
mov
mov
in
lret
mov
mov
pop
ffreep
xchg
push
lret
std
xorb
jmp
iret
decl
idiv
add
mov
xchg
imul
test
repnz
jg
pusha
jnp
add
cltd
xchg
arpl
mov
notl
jmp
addr16
jge
pop
cli
mov
lods
clc
dec
jmp
jl
jae
rcrl
push
add
lahf
sahf
fwait
decl
ret
je
call
add
mov
ror
repz
scas
outsb
shrb
repz
fs
xchg
das
pop
add
and
outsb
out
mov
mov
cmp
inc
and
cmpsb
add
call
cli
mov
jle
mov
or
mov
es
xchg
in
dec
mov
je
negl
sub
lcall
sub
sbb
mov
pop
lock
mov
sbb
lods
push
out
cvtpi2ps
mov
ret
inc
mov
push
cmc
es
sub
daa
lcall
imul
pop
dec
jbe
xchg
pusha
jmp
inc
push
std
and
pop
jl
xlat
fadd
js
fmull
sbb
and
xor
ljmp
test
sti
les
sub
jecxz
sub
lahf
sbb
dec
jno
mov
mov
call
jl
loopne
clc
sti
test
sti
fsubs
or
mov
pop
mov
mov
cmp
adc
int
loope
in
les
aad
stos
sbb
ljmp
adc
out
loop
stc
ret
ret
xorl
cld
les
push
adc
ljmp
sti
mov
inc
mov
xchg
mov
incl
push
in
out
cwtl
test
pop
xor
push
clc
cmpsl
out
in
jecxz
mov
xchg
dec
stc
aas
ds
aaa
jl
outsl
mov
dec
pop
mov
fadd
cltd
lcall
stos
outsb
sub
mov
jge
jno
out
jg
das
jnp
sti
pushl
imul
xchg
mov
ja
out
cmp
sbb
test
mov
movsb
mov
dec
xchg
push
int3
mov
xor
in
in
and
sub
int
sahf
push
pop
xor
pushl
cmpsl
or
les
cwtl
jmp
rolb
lods
arpl
fcoml
or
add
repz
mov
dec
sti
inc
cmpsl
pop
mov
sub
sti
xor
add
pop
nop
test
and
stc
fcmovnb
outsb
mulb
stos
lock
mov
inc
mov
push
cmp
jge
aad
int
jmp
mov
and
cwtl
lcall
xor
xchg
lret
sahf
lock
lods
sbb
push
std
adc
sti
subl
dec
inc
xchg
lret
dec
push
dec
mov
lock
frstor
movsl
into
lods
xor
out
rclb
in
pop
insb
mov
into
and
xchg
xchg
lcall
push
jae
insb
xchg
inc
incb
sbb
cmp
adc
incl
inc
sub
mov
decl
imul
cmpsl
cmpsl
and
call
aaa
or
inc
mov
push
mov
scas
jno
test
adc
rcrb
mov
adcl
scas
ljmp
dec
icebp
and
add
add
xor
jmp
pop
shr
ljmp
adc
pop
push
jne
pop
es
test
xor
mov
push
inc
arpl
cmp
lcall
into
ret
jg
pushf
lods
std
or
add
mov
add
imul
sbb
ljmp
push
pushl
add
in
or
pop
dec
sar
or
sbb
sub
cs
sti
push
in
jge
and
incl
and
push
sbbl
fwait
mov
ljmp
int
outsl
inc
jb
in
lods
pop
ljmp
mov
stos
xchg
xor
cli
pop
adc
mov
mov
pop
ret
cmp
test
push
push
shll
push
or
jecxz
xor
push
jnp
ret
dec
push
pop
pushl
xor
mov
jl
cli
or
dec
bound
ficomps
insb
sub
les
cltd
sbb
subl
je
pop
nop
dec
mov
std
scas
dec
push
cwtl
or
ficoms
jbe
lods
lods
aaa
mov
inc
xchg
cmp
adc
or
popf
mov
hlt
imul
push
mov
sarl
pop
cmp
rorl
sbb
pop
pop
daa
decl
dec
or
jo
rorl
std
stos
jno
pop
mov
sub
incl
xor
pop
cmp
ss
jns
sub
mov
add
std
push
push
aam
cmp
push
mov
decl
loop
outsb
adc
repz
fs
dec
pop
insl
mov
and
push
cld
es
mov
jb
mov
cmpsl
lret
xor
jl
cmpsb
pop
jnp
jecxz
xor
leave
stos
xchg
in
pusha
fwait
ljmp
mov
jo
out
sbb
mov
pushl
scas
mov
and
jnp
mov
ret
jmp
movsl
and
push
dec
lods
and
sbb
pop
pop
cmp
rol
cltd
mov
pusha
ret
cmp
xchg
xchg
lea
sub
pop
mov
aam
sbb
mov
ret
pop
inc
dec
ds
loope
ja
mov
adc
std
scas
das
sbb
xchg
sbb
scas
call
cs
sub
dec
std
jl
push
push
dec
mov
loopne
fcoml
repz
cmpsb
cld
sbb
sbb
cli
loop
decl
jp
stos
push
jmp
and
shl
inc
cmc
or
sbb
push
int
sarb
mov
pop
clc
inc
and
sbb
insb
std
sti
add
orl
lfs
sub
sub
lcall
call
lods
push
sbb
movaps
std
shll
incl
pop
and
and
dec
movsl
mov
xor
vandps
movb
jns
pop
push
push
xchg
and
pop
lret
jmp
adc
mov
rorb
pop
sbb
adc
xchg
shrl
inc
mov
pop
pop
cmp
sub
lcall
ja
sbb
mov
cmpsb
sub
mull
push
push
xchg
std
xor
sub
out
loope
sarl
ljmp
in
mov
jmp
popf
repnz
jg
jb
or
dec
add
test
dec
pop
jb
mov
jl
jg
fwait
stc
push
mov
fcoml
xchg
mov
jecxz
ljmp
std
fnstcw
mov
fdivr
das
imull
push
mov
jb
lods
dec
pop
mov
ret
push
jg
jbe
cltd
mov
push
pusha
popf
sub
decl
push
addb
int
xor
sbb
mov
dec
mov
les
pop
hlt
incl
cmp
out
cmp
mov
push
mov
aad
decb
cmp
push
mov
push
daa
iret
jp
cmp
or
or
mov
testb
pushl
sub
pushl
leave
mov
outsb
pop
xchg
cli
sarb
sbb
mov
push
std
mov
stos
mov
sti
mov
xor
pushf
inc
out
call
cs
scas
inc
sub
stc
or
pushf
lock
in
mov
ficoml
pushl
push
or
pop
lahf
imul
xchg
shrb
and
mov
cmp
dec
pop
std
pop
out
cmp
xlat
mov
inc
push
lahf
fisubs
pop
sti
xor
fsubrl
enter
push
into
jle
je
adc
or
push
jnp
pushl
das
inc
adc
inc
out
rol
sbb
in
repz
cmp
xchg
mov
mov
pusha
out
loop
xchg
xor
jmp
call
stos
jne
decl
arpl
mov
decl
sub
incl
nop
cmp
inc
aad
xchg
out
xchg
js
clc
fwait
or
notl
rorb
stc
imul
daa
add
test
out
or
movsl
loopne
pop
sahf
imul
cmc
dec
mov
out
push
inc
pop
push
sbbl
idiv
gs
push
jle
or
add
xchg
adc
jge
xchg
pop
jno
imul
int3
out
les
lds
out
sti
dec
push
mov
pop
ret
aas
sti
push
testl
mov
scas
pop
pop
inc
repnz
notb
xchg
and
call
jmp
jge
fnstenv
mov
fistpl
mov
mov
cmpsb
arpl
adcl
jg
xchg
xchg
xchg
mov
or
mov
insl
dec
call
mov
and
pop
adc
adc
out
xchg
sub
lret
fidivs
mov
pusha
pop
idivl
jle
dec
repz
stos
push
lahf
inc
and
jae
inc
pop
sti
mov
or
je
adc
push
fistpl
aam
dec
dec
dec
sub
fucomp
mov
inc
out
jmp
xchg
lcall
fistpll
pushl
push
lret
movsb
inc
push
xchg
lahf
call
pop
roll
xor
mov
jge
cwtl
out
lcall
jge
std
seta
jmp
push
pop
sbb
pop
and
leave
push
loope
pop
or
jb
adc
mov
adc
lock
out
jg
push
mov
xchg
xchg
leave
pop
mull
jle
syscall
mov
mov
cmp
fcos
imul
xchg
icebp
mov
pop
in
cwtl
lahf
pop
push
cmp
imul
dec
into
call
leave
mov
jge
in
mov
or
popf
or
stc
jns
adc
dec
inc
pushl
mov
mov
daa
jae
ds
jmp
shrb
ljmp
xchg
jl
or
dec
add
repz
into
insl
outsb
push
ljmp
mov
addr16
jl
pusha
sub
push
push
dec
or
push
repnz
ljmp
xchg
xor
mov
jg
dec
pop
or
cmpsl
orb
push
xchg
pop
rcll
jno
jecxz
adc
jp
iret
pop
in
hlt
xor
ret
cmpsb
jnp
sub
pop
pushl
addl
inc
pushf
outsl
push
xchg
decl
xchg
adc
xor
std
adc
out
pop
push
cwtl
aaa
call
fidivs
jle
sahf
lock
adc
xchg
jmp
push
addr16
scas
inc
outsl
cmp
or
adc
dec
sbb
inc
clc
rorl
jecxz
push
sub
cmp
call
xchg
xchg
push
fdivr
mov
push
add
dec
adc
push
gs
out
mov
jmp
inc
mov
add
jns
sbb
jo
push
test
ljmp
jbe
and
mov
and
dec
sub
add
clc
push
test
std
cmp
pop
sub
xchg
jge
loope
xchg
and
bound
lcall
inc
dec
mov
rolb
sbb
add
daa
out
push
adc
test
mov
pop
sbb
je
mov
or
insb
cmpsb
sar
inc
add
iret
cmp
fiaddl
outsb
sarb
roll
rep
inc
mov
mov
jmp
sbb
mov
insb
bswap
cwtl
std
lret
andb
push
jmp
mov
jnp
std
mov
xchg
push
xor
adc
jb
pop
push
mov
adc
sbb
call
jno
stc
addl
mov
lea
jb
xchg
sub
clc
sbb
cli
xor
push
xchg
dec
orb
and
dec
icebp
rorb
je
clc
lock
scas
sbb
adc
mov
mov
aam
lds
mov
xor
sbb
pushl
sbb
mov
out
push
jge
in
lahf
nop
add
add
mov
setle
cmp
fsts
aam
sub
stos
js
gs
mov
iret
push
pop
sbb
popl
push
in
sbb
cmpsl
sti
loopne
lock
ja
mov
push
loop
pop
or
daa
cld
std
stos
xchg
mov
jp
mov
push
adc
mov
gs
ss
xchg
sbb
jp
mov
ss
jl
cmp
les
jns
test
xchg
pop
xchg
xor
std
jo
enter
adc
add
ljmp
pop
dec
fnstcw
mov
seta
test
mov
push
decl
shrl
je
outsl
aaa
xchg
jbe
xor
adc
mov
sub
and
rol
jb
pop
push
add
mov
push
decb
ret
mov
cmpsl
mov
inc
sub
lar
sub
mov
add
rolb
mov
inc
and
xchg
inc
cli
ret
fidivrl
mov
mov
lcall
and
inc
scas
xor
lods
xchg
pop
inc
shrb
mov
addr16
jb
loope
nop
sbb
sbb
xchg
ret
mov
daa
fcoms
inc
pusha
push
jl
xor
jecxz
push
adc
rorl
jle
repnz
inc
test
sub
jbe
loope
jne
sbb
inc
adc
pop
push
aas
mov
ljmp
divb
leave
jle
or
decl
adc
call
in
pop
mov
imul
jp
lock
stc
xchg
inc
nop
cmpsb
cmp
das
jns
jne
mov
stos
xchg
mov
aas
jg
out
mov
and
or
out
jp
jle
imul
jle
div
sub
ds
inc
aad
scas
pop
push
sti
mov
cs
jmp
fmuls
jg
xchg
pop
out
ret
icebp
mov
cltd
mov
dec
lret
fdivrs
adc
mov
ljmp
adcl
mov
sti
std
cmp
pop
jecxz
in
int
aas
mov
inc
loopne
pop
jb
mov
xor
leave
jecxz
or
gs
leave
cmp
cmpsl
mov
mov
xlat
xor
call
jge
std
ret
cmpsl
cld
inc
cmc
cld
movsb
or
popa
lods
mov
aam
std
mov
test
pop
outsl
add
add
xlat
std
test
pop
ja
scas
out
stos
jmp
push
jbe
insl
jecxz
push
sbb
fmull
sub
fldenv
mov
push
sahf
enter
popa
mov
outsb
lret
sarb
push
xor
fadds
adc
decl
mov
mov
pop
dec
pop
xchg
mov
std
mov
lock
and
cmp
shl
xor
mov
out
pushf
cwtl
addr16
std
xor
fbstp
das
adc
decl
mov
loopne
incl
push
xchg
popf
arpl
fdivr
jg
xlat
jns
mov
out
aas
sbb
nop
mov
lea
mov
sti
sbb
ror
aas
dec
sub
pop
pop
scas
sahf
mov
out
jo
ret
pop
mov
cmpsb
or
dec
subl
fnstsw
jbe
das
cmp
and
or
scas
les
xor
js
sub
decl
cmp
pop
jecxz
aas
stos
cmp
push
pop
icebp
adc
out
pop
fs
popa
mov
jmp
stc
clc
jns
enter
lcall
dec
test
incl
fninit
mov
and
dec
decl
sti
test
movsl
es
call
loope
mov
insl
psubb
mov
rcrb
jge
push
std
xlat
in
pushf
cmp
xchg
xor
push
jne
cmpsl
mov
scas
jl
jge
out
sar
xor
stos
cmpsb
pushl
or
jne
idiv
cmp
mov
pop
lcall
leave
and
std
loop
push
adc
mov
lock
cmp
pop
xor
and
bound
cli
or
lods
and
stc
stos
xchg
push
mov
scas
jge
cmp
lds
fidivs
leave
aas
jle
inc
outsb
js
pop
out
movsb
xlat
mov
aaa
bnd
push
inc
imul
fildl
dec
push
popf
mov
and
inc
pushf
dec
loope
sti
scas
and
pop
pop
repz
pop
stc
lods
out
sbb
cld
sbb
dec
dec
xor
out
push
push
addr16
icebp
aad
or
out
or
shrb
sub
dec
cwtl
sti
mov
mov
xlat
shrl
jne
sub
sti
jge
iret
loop
das
xchg
xchg
inc
loopne
in
mov
sti
leave
pop
jp
jmp
loopne
dec
ljmp
sbb
jno
mov
repz
sahf
push
xchg
jp
addr16
or
iret
pop
int3
xchg
cltd
popf
adc
stos
nop
or
pop
into
pop
std
sahf
dec
mov
psrlw
std
xor
inc
icebp
test
jmp
mov
std
cmp
loopne
xchg
ds
xchg
mov
push
add
jl
jo
sbb
jecxz
aaa
jbe
aas
cmp
sub
mov
or
sbb
or
adcl
and
xchg
add
int3
loopnew
daa
inc
xchg
loope
pop
inc
jmp
and
pop
pop
pop
cmp
sub
popa
dec
sbb
jnp
sbb
in
loope
insb
mov
int
cld
push
movsl
mov
jp
cwtl
loop
lds
push
stos
add
int3
mov
fdiv
repnz
mov
enter
addr16
xchg
push
cs
mov
fs
jne
and
xor
push
xchg
inc
pop
aad
faddp
daa
jle
rolb
lods
cmp
adc
and
or
adc
call
repnz
sub
jle
push
inc
fcmovnu
outsb
testb
lds
mov
mov
dec
sti
fidivs
pushf
or
mov
stc
jmp
mov
stos
push
loopne
push
jmp
xor
jmp
sub
adc
stos
outsl
pop
adc
mov
inc
test
jnp
mov
shl
cmpsb
dec
xor
fdivr
aas
and
xchg
jecxz
addl
sbb
mov
jo
movsb
ljmp
inc
fs
rclb
jg
je
out
outsl
sti
push
jno
adc
jno
xchg
ss
imul
inc
subb
call
cmp
jge
inc
pushl
rcrb
jmp
clc
mov
je
or
mov
loopne
cmpsl
pusha
mov
nopl
call
mov
decl
lret
call
and
xchg
test
incl
lea
mov
ret
jae
ds
push
add
lcall
bound
pop
ret
mov
mov
and
push
std
shrl
cltd
cmp
ds
jns
jmp
fadds
rcrl
jmp
clc
test
clc
pushl
fistpl
hlt
lcall
pop
adc
xchg
pop
sub
test
cmpsl
push
jnp
mov
add
dec
pop
lds
pushf
dec
dec
jecxz
ja
loope
dec
mov
xchg
xchg
mov
xor
lret
mov
loope
in
push
mov
call
xchg
pop
fsubrp
les
cmp
test
in
fs
sub
pop
push
sub
call
lods
mov
cli
add
inc
syscall
jecxz
dec
mov
in
xorb
mov
pop
aaa
pop
scas
and
movsb
mov
shlb
dec
int3
incl
inc
pop
pop
cmp
adc
mov
int
and
call
ret
fdivs
xor
push
jbe
js
test
iret
ret
inc
int
addl
xchg
or
sti
push
xchg
xchg
imul
in
inc
lds
cmpsb
mov
in
xlat
lahf
lea
sti
xchg
pop
dec
outsl
push
aas
shll
int3
je
xor
push
pop
mov
jle
mov
adc
cmpsl
outsl
je
cld
inc
dec
mov
sahf
jp
jmp
ficompl
decl
pop
hlt
mov
in
lret
push
ret
dec
jmp
stos
loopne
or
push
inc
test
scas
sarb
aad
xor
adc
or
roll
inc
repnz
cltd
xchg
int3
js
mov
mov
dec
cs
icebp
sarl
leave
mov
jecxz
or
sbb
pop
out
mov
popf
ficomps
xor
imul
aad
aas
int3
dec
add
mov
stos
ljmp
mov
xchg
lds
out
cmp
mov
pop
lods
push
mov
inc
push
insl
xor
mov
test
subb
xchg
jbe
cli
jecxz
arpl
ds
push
call
cmp
pop
cmp
mov
cmp
leave
and
arpl
lret
dec
push
std
and
call
sysexit
paddw
lods
xrelease
in
dec
sar
ljmp
push
cli
pop
int3
sub
ret
popf
stos
pushl
dec
mov
out
mov
adc
jle
shr
stos
pop
cld
sti
pushl
in
neg
jmp
fisubrs
lods
jg
testl
mov
mov
sar
mov
fsubp
fcmovne
push
fsubrl
pop
ss
pop
push
cmp
movb
std
inc
and
outsl
jo
add
int3
data16
mov
xchg
sbbb
aaa
mov
outsb
inc
mov
mov
pop
mov
call
loopne
imul
mov
mov
jmp
repz
jb
sti
scas
mov
push
mov
cld
inc
xor
pop
inc
xor
ljmp
in
cld
cmp
fdivr
mov
push
sti
jns
repz
jmp
dec
icebp
push
push
inc
mov
negl
pop
mov
stos
push
jmp
lcall
jg
insb
repz
popf
rcrl
jns
push
ljmp
xor
mov
into
adc
jns
scas
cmp
cmp
mov
jl
push
fsubp
sahf
xor
add
stos
popa
incl
dec
gs
ret
aam
mov
int3
loope
loop
addr16
ss
pushl
dec
sbb
dec
jmp
jns
inc
stos
outsl
js
insb
dec
es
xchg
mov
cmp
daa
cld
adc
sub
sbb
xor
je
jae
pop
push
mov
xchg
sbb
incl
lea
shl
je
or
jb
dec
dec
push
cli
sti
int3
push
cltd
mov
add
std
mov
movsb
add
push
in
pop
pushf
dec
add
aas
repz
jecxz
and
xchg
insb
or
call
or
out
jmp
cmp
stos
ss
je
cmp
and
mov
mov
dec
jbe
decl
mov
sti
xchg
dec
cwtl
ljmp
push
cs
and
pop
cli
jnp
mov
jo
pop
mov
divl
daa
das
out
js
ret
mov
jge
push
dec
dec
mov
sub
mov
jne
mov
cwtl
icebp
or
mov
jecxz
jae
adc
lcall
ret
pop
scas
jecxz
push
adc
test
ljmp
test
jg
std
flds
mov
sub
rcrl
push
decl
jge
jmp
sti
adc
scas
adc
out
or
stc
and
mov
mov
inc
incl
pushf
lods
xor
stos
push
pop
sbb
incl
lret
and
jecxz
lret
mov
loopne
cmc
decl
lods
jno
pop
aaa
inc
cmp
movsb
iret
out
jecxz
mov
or
std
lcall
cwtl
lret
xchg
sub
pusha
imul
cmp
and
jne
movsb
inc
push
sub
arpl
pop
fcmovnbe
xchg
cld
and
sub
inc
xor
xlat
lds
scas
push
mov
inc
jbe
mov
mov
mov
out
push
xchg
inc
jmp
lret
push
adc
outsb
dec
sahf
mov
out
jecxz
jecxz
add
and
gs
pop
test
add
shlb
stos
cmp
adc
xchg
loope
mov
incl
xchg
mov
sub
pop
stc
sbb
std
lods
mov
nop
sti
mov
and
dec
fistl
insl
or
movsb
sub
push
ss
pushl
out
and
push
push
cmpsl
inc
imul
sbb
inc
add
std
sbb
cmp
notw
std
movsb
sub
loope
mov
add
cmp
xor
mov
mov
pop
pop
adc
jmp
std
sub
stc
insl
mov
es
dec
pop
addb
mov
movsl
loope
in
jo
scas
mov
lcall
fimuls
mov
push
decl
loope
fmull
sub
fdivrp
loop
dec
sbb
jb
jmp
sub
and
pop
or
xchg
push
pop
add
cwtl
pop
xchg
into
mov
inc
pop
sbb
test
cmp
fcoml
jp,pn
ficoml
lods
cld
aaa
fdivr
ljmp
inc
mov
sti
inc
add
out
sbb
aas
and
daa
rclb
repz
inc
push
xor
call
mov
sub
das
inc
loope
inc
pop
push
pushl
add
loopne
pusha
jg
leave
mov
incl
sbbb
jo
pop
push
jle
mov
call
notl
xstore-rng
cmpsl
inc
or
fdivs
pop
jl
aad
and
cmp
lods
mov
insb
dec
dec
in
adc
leave
xor
pop
imul
inc
push
mov
add
xchg
cld
xchg
cmp
dec
pop
sti
inc
xchg
ret
jg
lahf
into
sbb
mov
mov
cld
xor
lcall
dec
xor
cs
dec
decl
loope
sbb
sbb
out
adc
frstor
mov
jmp
xchg
enter
outsb
pushl
xchg
test
mov
stos
push
add
insb
js
mov
shrl
jo
lret
stc
je
xchg
cmc
jl
inc
ret
mov
cld
shl
dec
cmpsl
fs
jp
outsb
jae
fcompl
jne
test
sbb
add
cmp
mov
cld
jae
pop
add
clc
sbb
das
ljmp
xchg
add
out
or
lea
std
cwtl
rcll
popf
ret
and
pop
sub
pop
dec
mov
mov
dec
jg
push
adc
into
lds
data16
addr16
ficoml
insl
fxch
jno
mov
jnp
addr16
adc
cltd
loope
in
orl
push
pop
sbb
dec
insb
jl
cmpsb
clc
ljmp
dec
adc
add
sahf
int3
ret
xor
sbb
push
xchg
cs
lahf
inc
mov
ljmp
or
popf
divl
mov
pop
call
push
out
imul
sbb
ret
push
ret
sar
mov
out
daa
sahf
inc
lcall
fmulp
outsl
shll
nop
xor
leave
mov
xchg
mov
sti
mov
adc
je
xchg
add
dec
fprem
inc
sbb
stos
movlps
outsl
lock
sti
jae
shl
push
js
dec
cmp
jns
jl
inc
lock
jne
insb
pop
mov
dec
inc
adc
lcall
xchg
push
xor
popf
ljmp
push
in
lcallw
dec
dec
mov
out
dec
lea
mov
mov
fwait
push
into
inc
push
dec
cmp
and
ljmp
mov
movb
cli
ljmp
loop
mov
or
xchg
sti
cs
jb
je
insb
pop
jge
add
cmp
sub
cmp
push
lea
sbb
pop
pop
adc
divl
fwait
mov
lods
jl
sbb
and
xchg
fxch
pushl
popf
movsb
movsl
aam
xchg
xor
cmp
or
dec
rcrb
xor
fsubrs
sbb
cmp
xor
inc
jp
jle
nop
jmp
dec
outsb
in
jmpw
adcb
sbb
add
jae
in
sbb
je
in
pop
jle
pop
inc
ss
ljmp
out
xlat
sub
or
sbb
cmp
xchg
sahf
mov
jecxz
int
enter
mov
pop
pop
popa
jle
cs
pusha
repz
fstps
fsubrl
inc
pop
pop
int
sbb
cmpsb
sbb
testb
mov
call
mov
pushl
xchg
mov
popa
xchg
xor
shrb
cmpsl
push
repz
das
outsb
push
mov
xor
data16
inc
cmp
ret
pop
fimull
lcall
lods
dec
lahf
pushf
aam
notl
jmp
das
dec
sarl
push
mov
test
sub
jecxz
out
xchg
jge
push
jnp
lcall
dec
push
sub
stos
push
nop
mov
sub
test
rcrl
jbe
xchg
or
jmp
adc
add
and
rclb
mov
dec
push
dec
mov
movsb
lret
or
ficoml
mov
mov
or
xor
ds
iret
sbb
fdivrl
shlb
out
out
push
outsb
fs
and
xlat
xchg
jg
out
call
test
sub
inc
je
lcall
jmp
lcall
xchg
push
or
std
jg
loopne
out
lcall
xor
ss
dec
jge
mov
fwait
fs
jmp
mov
vmulsd
mov
xor
ljmp
inc
arpl
jl
incl
xchg
out
mulb
dec
les
outsl
mov
sti
cmp
push
fdivl
add
or
ss
adc
aad
cmp
xor
pushf
xchg
cmp
jmp
call
mov
pusha
or
fdivrp
test
pop
dec
movsb
jb
mov
iret
inc
and
ret
orl
out
stos
ds
mov
mov
adc
cld
pop
push
sub
mov
scas
std
sti
mov
mov
xor
adc
std
bound
xchg
xchg
cmp
jle
mov
xorl
inc
cmp
lea
jo
adc
in
or
push
mov
jb
mov
clc
sub
mov
sub
or
xchg
xor
pop
imul
lods
pop
xchg
addr16
ljmp
decb
data16
mov
jl
xchg
mov
mov
outsl
mov
jle
test
arpl
mov
pop
adc
adc
int3
repnz
jns
sarl
push
stc
jl
push
decl
stos
xchg
dec
mov
jmp
mov
imul
jg
push
mov
xchg
push
addr16
xchg
push
incb
call
int
out
repz
sbb
mov
mov
clc
in
int3
mov
ss
mov
mov
out
jmp
pop
mov
popa
test
dec
std
jae
fidivl
fimuls
jns,pt
test
mov
dec
scas
mov
incl
pop
mov
les
test
mov
jecxz
mov
mov
decb
sub
dec
mov
fwait
incl
daa
insb
sti
add
pop
sub
dec
mov
dec
scas
enter
and
cmp
jae
xchg
in
cld
das
xor
push
pop
ljmp
lods
sti
imul
gs
enter
pushl
dec
sub
mov
insl
inc
push
mov
jmp
xchg
xor
xchg
jge
xchg
sub
stos
or
sarl
mov
test
scas
lcall
and
pop
in
pushl
test
call
inc
sub
and
mov
call
fwait
mov
mov
jnp
add
test
iret
and
loope
lock
push
ud0
cmc
loop
jno
dec
incl
stos
int
pop
mov
dec
mov
cmc
mov
adc
movsb
sbb
decl
sub
jp
les
ret
jne
sbb
out
loop
sub
push
negb
movsl
stos
adc
mov
and
lcall
mov
mov
inc
stos
cmp
xchg
dec
test
mov
sbb
rolb
cmp
sub
fsubl
cmp
cmp
push
xchg
sti
pop
jo
inc
inc
lea
mov
test
adc
loopne
xchg
adc
scas
dec
nop
sub
outsl
xchg
add
adc
mov
or
js
cmp
pop
arpl
sar
mov
inc
addr16
mov
lods
and
call
cmpl
loope
xchg
jp
jl
jae
lds
xchg
cli
loope
fwait
imul
jo
adc
repz
xchg
push
popf
pop
inc
mov
cld
bound
dec
sbb
mov
mov
test
sti
pop
lods
jge
mov
sbb
arpl
jge
lods
or
mov
jb
loope
std
mov
pop
decl
in
pop
sub
and
int3
jb
mov
stc
lods
dec
cli
pop
push
out
outsb
push
sub
pop
pop
jne
xchg
pop
test
cmp
jmp
into
mov
push
and
popf
jo
add
out
das
shl
jb
jbe
insb
mov
push
and
cmpsb
sbb
or
dec
sub
call
insl
fwait
sbb
aad
add
shl
outsb
out
mov
pusha
jl
xchg
pop
cmpsb
sbbl
xlat
jne
add
call
cmp
arpl
insl
adc
repz
xor
lahf
addr16
jle
in
fidivl
rorb
mov
pause
xor
call
lret
adc
mov
xorl
cmp
dec
das
cmpsb
decl
lock
ljmp
jo
sub
add
int
pop
lret
jge
jl
or
dec
ds
lods
scas
mov
mov
cmp
mov
loope
sar
mov
cmpsl
xor
dec
sbb
sbb
pushl
imul
sti
adc
outsl
mov
mov
mov
jmp
mov
in
dec
cmp
dec
sbb
cli
adc
insl
nop
and
sub
repz
cmp
xor
pop
shlb
cmp
push
ret
call
xchg
icebp
lock
jb
or
cmp
push
in
add
xchg
inc
push
mov
xor
cli
pop
mov
mov
inc
dec
mov
addr16
jo
lods
es
fdivl
repz
daa
das
jp
mov
fdivrs
mov
sarb
dec
mov
jns
and
xchg
in
cld
sub
cmp
pop
addr16
mov
dec
mov
sub
fnstenv
adc
sub
sbb
rorl
pusha
out
mov
out
mov
inc
data16
cmp
mov
int3
jl
xchg
mov
ljmp
mov
cwtl
sbb
sub
cld
pusha
repz
push
leave
adc
inc
call
addl
pushf
loopne
jb
inc
ljmp
out
adc
nop
je
xor
aad
addl
cmp
dec
lcall
push
int3
xchg
add
cmovbe
nop
mov
movsl
adc
lret
loopne
je
std
fwait
mov
call
loop
out
inc
not
pop
pop
or
add
ret
xchg
aas
adc
call
ss
aad
dec
pop
push
aas
sbb
xchg
push
push
xchg
pop
aaa
inc
xchg
mov
pushl
mov
pushl
rclb
popf
incl
gs
incl
add
cmpsb
insb
fucomip
sbb
lcall
sti
inc
inc
loope
inc
or
es
fwait
pushf
cmp
mov
fdivrp
decl
mov
xlat
aas
cmpsl
pusha
cmp
lds
pop
mov
pop
lcall
or
out
jbe
push
aas
xchg
call
les
and
jmp
loop
dec
ljmp
push
cmp
fwait
aas
or
roll
insb
pushl
xor
into
lcall
xor
stc
leave
cmp
push
add
sub
loope
in
jge
jmp
fmull
jmp
lahf
adc
mov
lret
jo
jne
loope
nop
testl
push
sbb
scas
sub
dec
mov
call
sar
cmp
push
xchg
lahf
addl
jp
fidivrl
cmp
decl
cmp
sub
lsl
jnp
dec
inc
adc
xchg
adc
add
mov
xchg
lret
out
jmp
lcall
or
cmp
repz
mov
push
dec
sub
scas
push
cs
inc
push
mov
push
sub
jb
sti
cmp
test
mov
pop
rcl
jmp
arpl
sub
or
and
mov
loope
jp
aad
addr16
inc
jecxz
push
mov
jge
test
adc
add
add
inc
call
push
adc
or
sbb
addr16
mov
into
cli
lods
fsub
inc
mov
push
rorb
scas
imull
aam
or
sub
aam
inc
push
fdivr
dec
and
xchg
rol
hlt
sar
out
outsl
jge
movsl
mov
mov
and
out
call
jmp
gs
in
jecxz
cld
or
std
ljmp
cltd
dec
xor
jne
in
mov
pop
leave
xchg
std
jmp
arpl
call
inc
inc
mov
aam
cmp
pop
sub
jne
sbb
das
cmp
inc
decl
lods
test
mov
sbb
adc
repz
decb
mov
pop
imul
incl
sti
or
push
xchg
sar
cmp
sub
ljmp
push
sarb
push
repz
les
cmpsl
xlat
pushl
shl
mov
adc
addr16
push
out
xchg
pop
mov
shl
sarb
pop
lcall
lds
rcrl
idiv
gs
push
js
cld
dec
fnsave
cmp
lods
into
lea
jmp
cmp
das
dec
pop
xor
imul
pop
jne
bound
jecxz
in
xor
int3
mov
arpl
jmp
jbe
out
jge
or
cltd
insb
sbb
xlat
xchg
aad
fidivl
std
push
sub
mov
aas
mov
dec
fistps
sbb
sarl
decl
mov
push
aad
push
imul
xchg
inc
vandnps
or
adc
jmp
stos
and
gs
mov
mov
vmwrite
xchg
pop
push
in
add
jmp
daa
xor
jecxz
aad
xchg
sub
mov
std
jne
mov
jecxz
push
jle
cld
arpl
xchg
jge
les
xchg
jns
push
or
and
dec
in
leave
inc
mov
imul
cmp
pop
adc
xor
fwait
ja
stos
dec
call
inc
jp
outsl
pop
decl
inc
jge
sub
add
cld
pop
and
dec
enter
call
pop
jmp
push
fldenv
repz
mov
pushf
mov
mov
mov
xchg
stos
faddl
call
xor
add
jl
or
inc
pushl
in
leave
sti
mov
jo
push
test
insb
xchg
movsb
call
pop
data16
lahf
jp
and
in
ljmp
loopne
pop
mov
rcrl
dec
gs
mov
fucomi
sub
cmpsl
cmpsb
lcall
jns
mov
fisubs
dec
int
adc
call
and
adc
fadds
lcall
xchg
mov
lock
xchg
add
call
adc
cmp
push
sub
lcall
int
mov
inc
xchg
test
iret
lcall
add
repz
lods
jl
frndint
push
lea
ja
loopne
mov
rep
and
mov
out
inc
push
pop
std
inc
xchg
xchg
and
fs
push
mov
fidivs
shlb
push
mov
mov
xchg
xchg
add
movsb
add
jle
cmpsl
fsubl
lret
enter
movsb
mov
cmp
ret
pop
insb
sti
popa
jl
mov
ljmp
test
cs
jp
pop
dec
xchg
sbbl
mov
or
sar
jns
mov
push
mov
mov
cltd
xor
jecxz
xchg
ljmp
ds
dec
xor
dec
lcall
pushf
repz
out
jecxz
adc
loopne
inc
add
mov
rcll
imul
int3
sbb
lret
les
mov
lock
int
test
rclb
jo
sarl
call
mov
and
add
sub
loope
pop
sbb
icebp
xor
icebp
adcl
stc
jo
xchg
mov
mov
fdivrl
mov
fldt
test
iret
sub
xchg
call
mov
push
sub
mov
pusha
outsb
inc
sbb
addr16
js
mov
popa
call
dec
fimuls
fdivrs
repz
cmpsl
inc
scas
xor
lock
sbb
cmc
nop
mov
add
scas
pusha
std
cld
jmp
das
lock
lret
psrad
sti
test
mov
sub
xchg
hlt
call
bound
ret
popf
sub
mov
cmpsb
adc
leave
movlps
mov
push
popf
idivb
cmp
mov
dec
xchg
xchg
adc
add
fbstp
arpl
sti
mov
fidivl
sbb
sti
cmp
jecxz,pt
cmp
and
frstor
in
in
incl
jp
push
popa
sbb
and
mov
icebp
mov
mov
pop
jp
sbb
xchg
jbe
enter
jns
jmp
dec
mov
jb
pop
outsl
stc
xor
rolb
cmp
jmp
scas
mov
mov
fmull
push
or
jne
rol
sti
push
out
test
adc
in
push
push
xchg
lods
adc
les
pushl
push
pop
push
dec
xor
pop
jmp
mov
and
jl
cld
xor
insb
sub
inc
xor
xchg
fwait
cmp
cmp
mov
mov
pusha
imul
ds
sbb
mov
mov
call
push
movsl
xchg
mov
xchg
add
imull
jmp
mov
aas
mov
adc
cld
cmp
aam
imul
xchg
inc
push
mov
shlb
jbe
and
xchg
cmp
mov
mov
mov
repnz
mov
in
int
lods
mov
dec
inc
cmp
pushf
xor
mov
inc
inc
push
outsl
mov
cmpsl
ja
test
ds
testl
popa
bnd
popf
mov
sbb
shll
jb
cmp
jns
icebp
int3
cmp
idivl
and
sub
call
inc
cmp
adc
dec
lret
and
mov
jp
repnz
shlb
pop
in
into
sar
xchg
mov
loop
jae
push
lcall
stc
ljmp
mov
push
mov
je
sti
mov
aaa
mov
cwtl
aas
mov
call
lock
repz
lds
xor
mov
test
in
push
inc
imul
push
xor
sahf
mov
mov
add
sti
dec
int3
lea
ficompl
xchg
shll
loop
sbb
and
jecxz
sbb
mov
xchg
sub
inc
out
jp
pushl
xor
repz
insb
inc
dec
aas
lock
test
pop
jne
test
gs
lods
call
mov
jl
push
fisubrl
adc
fcompl
aas
cltd
jo
cmp
jnp
shll
orl
mov
pusha
iret
aad
fistpll
and
loope
pop
add
call
cmp
fdivrp
mov
pop
mov
push
int
int
sbb
fld
int3
and
ja
or
inc
std
loopne
sbb
sbb
xlat
incl
lods
xchg
mov
add
ljmp
pop
xor
icebp
fimull
sbb
es
testb
mov
aas
mov
int
pop
sbb
adc
mov
cld
addr16
fdivrl
and
decl
ljmp
rep
mov
add
mov
push
dec
mov
jecxz
dec
pop
inc
cmc
ljmp
push
in
rolb
inc
call
repnz
xor
mov
jmp
push
or
call
mov
dec
add
dec
dec
arpl
jl
sarl
adc
je
sbbl
inc
cli
pop
pop
test
lods
jecxz
mov
sub
cs
fwait
mov
adc
push
addr16
aam
xor
push
and
mov
jae
lcall
pop
data16
adc
testl
aam
mov
xor
adc
out
aad
loop
gs
lret
sbb
js
adc
iret
jmp
clc
popw
test
jne
loope
mov
out
aad
mov
outsb
addr16
push
arpl
out
ds
jmp
daa
in
jl,pn
std
mov
mov
mov
stos
gs
xor
pushl
dec
mov
jmp
pop
fbstp
mov
add
loop
out
xor
mov
call
lds
ss
je
scas
pop
aam
call
jae
cmpsl
xor
out
inc
out
insb
cmp
loopne
cmp
fs
sub
jmpw
cmpsl
loopne
and
or
dec
test
lret
xchg
pop
pop
jmp
mov
lcall
icebp
jns
dec
jge
jmp
rorl
cld
push
std
mov
pop
mov
aad
lock
stos
jecxz
lods
jecxz
mov
cmp
xor
jge
sub
fsubr
jnp
pop
xor
test
aad
push
pop
xlat
in
sub
mov
jo
or
mov
jmp
mov
scas
in
push
jae
push
loopne
jl
jecxz,pn
pop
xor
mov
test
mov
pop
adc
sub
ljmp
cmpsb
pop
les
mov
sti
mov
push
popf
jg
jecxz
add
jge
call
jp
inc
push
sti
fisttpll
jns
mov
sarb
xor
idivb
aad
fucom
push
cmpsl
sti
notb
nop
stos
and
out
int
sub
jmp
stos
daa
sub
je
fdiv
out
ss
pop
adc
cld
mov
faddp
dec
decl
scas
push
lahf
sbb
sbb
incl
icebp
leave
sti
adc
adc
mov
je
ljmp
aad
icebp
decl
cmp
jmp
ss
xchg
mov
sbb
std
xchg
xchg
adc
call
stos
xor
lcall
stos
out
ficoml
push
pop
call
xor
mov
les
mov
fcoms
test
xor
loopne
jb
mov
ss
fs
jne
inc
cmp
xor
ljmp
inc
js
adc
push
push
rorb
ljmp
dec
sahf
lahf
and
sub
test
pushf
mov
xor
push
mov
mov
loop
andb
or
mov
inc
jmp
outsl
into
add
xchg
sub
dec
inc
mov
iret
lahf
mov
ret
call
pop
pop
mov
sbb
rcl
lret
outsb
incl
and
enter
xchg
fidivl
push
pop
mov
xor
mov
push
cld
sbb
clc
subl
std
push
fwait
loop
push
xchg
montmul
cmpsb
inc
outsl
push
js
cmp
or
dec
je
push
push
jmp
xchg
cs
out
enter
lds
dec
popa
test
daa
ljmp
bound
push
stos
lods
push
adcl
cld
movsl
mov
jp
ud0
dec
insb
adc
xor
int
std
test
jg
add
call
pop
mov
clc
push
orl
decl
xchg
ret
popl
std
or
mov
jmp
leave
cmp
pop
loop
pop
int
cmp
adc
sbbb
push
add
les
or
pushl
push
jmp
dec
push
clc
pushl
sbb
out
sub
cltd
mov
sbb
adc
jno
push
mov
int3
inc
sti
dec
cwtl
add
shl
dec
movsb
into
mov
test
jmp
repnz
repz
inc
push
mov
and
ldmxcsr
pop
pop
push
fldenv
nop
push
ds
push
jae
pop
cmp
std
cmp
cld
mov
xchg
sbb
imul
decl
jmp
arpl
cmpsb
dec
mov
repnz
test
cmpsl
pop
jb
mov
pop
popa
sbbb
jo
fidivrs
mov
sbb
setge
mov
insl
add
iret
gs
pushf
fidivs
inc
lret
repnz
jle
test
or
decl
imul
call
inc
adc
es
xchg
lcall
xchg
cmp
js
pop
testb
sti
xor
insb
push
ret
lea
mov
ss
lcall
iret
addl
xchg
repz
jle
js
ss
xchg
mov
call
ret
ds
nop
adc
adc
clc
addr16
and
sub
rcr
popf
cmpsb
jmp
test
add
jmp
push
inc
sti
psllw
jne
cmp
fcomip
fisubs
and
popf
inc
cld
sarb
cmp
std
dec
dec
pusha
popl
dec
push
les
mov
xchg
call
rorl
xchg
insl
mov
pop
sub
outsl
cmp
outsb
cmpsl
cmp
in
das
pushl
and
decl
cmp
mov
jns
inc
jmp
jb
mov
test
addr16
sysret
addr16
lcall
stos
clc
sub
decl
ret
dec
and
xlat
aam
xchg
sti
or
les
sbb
loopne
mov
decl
jecxz
push
xchg
fsubr
sti
lds
dec
scas
inc
mov
ds
mov
add
rorl
add
mov
shufps
adc
pop
pushl
inc
inc
mov
jae
cmp
push
jno
fs
dec
mov
xchg
leave
and
sarb
mov
popa
jl
pop
jmp
movsb
jecxz
and
jmp
or
pop
cmp
or
xchg
jl
jle
cmp
and
ljmp
xchg
cltd
cwtl
mov
or
pop
rorl
test
cltd
xchg
jmp
sub
cmp
push
sub
popa
fs
mov
xchg
mov
test
imul
jl
push
loope
push
lock
push
cmpsb
dec
inc
mov
or
stos
mov
mov
push
stos
mov
mov
mov
sbb
sub
ljmp
push
sbb
cmp
cmp
out
sbb
dec
leave
inc
pop
push
pop
or
data16
xor
movsl
inc
pop
decl
aas
imul
sbb
inc
sub
pop
push
or
mov
pushf
inc
xchg
outsl
je
or
outsb
xchg
lcall
scas
scas
jge
and
lcall
sbb
shlb
aad
cmp
inc
rcr
add
js
fistpll
es
xchg
xchg
jg
jp
mov
sbb
xor
cs
fcompl
xlat
mov
nop
and
lods
adc
subb
lea
sti
xchg
lret
jg
insb
adc
xlat
xor
fldenv
mov
out
add
sub
sub
pusha
xor
insb
loop
mov
nop
fdivl
cmp
sbb
and
js
mov
jl
xor
imul
push
push
adc
mov
aaa
sar
outsb
pop
sbb
hlt
pop
int
push
lahf
iret
data16
jo
popa
cmc
sbb
sarb
mov
jns
pop
jge
cmc
test
scas
push
dec
pop
fs
std
cmp
js
mov
outsl
push
insb
xchg
mov
lea
dec
inc
ljmp
jge
cmp
insb
xchg
mov
pop
mov
and
mov
and
xor
dec
aam
dec
xchg
fistl
mov
adc
rep
daa
jne
cmp
xlat
sub
pop
leave
inc
fmull
mov
lods
xchg
xchg
cld
cli
out
pop
mov
jge
mov
into
mov
jb
out
repz
cld
mov
imul
scas
insb
sarb
sbb
lds
dec
push
mov
pushl
fs
pusha
lds
repnz
decl
stos
cs
clc
cmc
or
xchg
mov
mov
sbb
cmp
lds
in
mov
loope
xorl
mov
jne
add
push
cmp
jno
je
sub
xlat
jge
lret
mov
dec
loope
cmc
fldl
test
jecxz
mov
push
xor
loope
dec
mov
jecxz
jg
imul
notl
ja
cmp
sub
mov
jp
sub
xchg
sbb
aas
dec
jne
decb
and
mov
call
leave
scas
jmp
call
idiv
xchg
pop
mov
rorl
jle
daa
sub
xor
sahf
push
jl
cltd
mov
mov
xor
std
dec
jg
mov
test
outsb
sbb
add
push
inc
push
add
test
pop
add
ja
jnp
sub
sbb
test
sub
repnz
std
nop
jl
or
push
add
rcll
adcl
loopne
and
cmc
lock
sbb
ljmp
mov
jne
ret
push
add
or
dec
jo
xor
mov
call
mov
pop
mov
push
scas
xchg
cmc
popa
cwtl
push
adc
test
jns
push
std
adcl
mov
or
dec
das
arpl
adc
or
fldenv
inc
out
jmp
mov
jp
jmp
jg
mov
mov
notl
jnp
and
pop
in
jno
pop
add
pop
sti
or
cli
ret
xlat
xchg
jg
out
sti
shl
stc
jb
insl
sbbb
repz
lods
aad
cmp
cmp
out
das
xorb
stos
sub
jge
pop
pop
jecxz
vpunpckhdq
jmp
fistps
add
push
adc
jne
cld
jge
jecxz
aad
xor
jmp
leave
loop
sub
pop
fsub
push
xchg
push
ret
jmp
pop
inc
cld
movsl
sub
pop
test
ljmp
test
ljmp
jl
les
sahf
in
mov
shl
decl
clc
push
sbb
sub
scas
inc
sub
inc
stos
cmp
out
mov
mov
jmp
pushl
mov
out
dec
sti
test
inc
mov
mov
jmp
xchg
ds
pop
mov
pushl
lock
cmp
stos
jecxz
in
int3
pop
jge
movsb
push
shr
push
lea
cmpsb
std
jbe
out
dec
add
popf
std
lret
enter
sbb
shlb
push
cmp
in
pop
inc
cld
push
pop
mov
js
addr16
sbb
outsb
decl
cs
faddl
pop
push
loope
icebp
mov
iret
and
and
or
lcall
and
dec
incl
or
or
out
jnp
mov
mov
sub
sbb
mov
dec
outsb
lods
jge
lcall
push
jns
movsb
lcall
dec
ja
dec
stos
decl
in
push
pop
call
mov
sbb
mov
inc
mov
and
cmpsl
mov
xor
test
sahf
lds
lods
jb
call
rorl
mov
jnp
std
lahf
cmp
rcr
inc
add
out
adc
inc
mov
jecxz
adc
lcall
rol
xchg
add
jno
sub
lahf
mov
inc
dec
les
pop
xchg
daa
lcall
fwait
sbb
lock
adc
add
std
cwtl
cmpsl
jae
repz
lcall
cld
xor
sbb
in
cli
xchg
outsb
jb
and
cmpsl
scas
inc
imul
sbb
shlb
xchg
mov
mov
mov
cmp
loope
insb
shrb
pop
aam
inc
scas
adc
js
test
jecxz
jg
ret
xor
stc
sbb
shrl
inc
push
cld
jge
jmp
das
dec
ret
clc
incl
jae
inc
pop
sbb
ljmp
push
aam
iret
push
jb
cld
push
dec
xchg
les
or
ret
movsb
popa
pop
ljmp
cmp
pop
inc
ret
mov
dec
loopne
popl
enter
shl
ja
ljmp
lds
div
test
pop
push
pop
call
dec
push
mov
cmp
arpl
push
lcall
sbb
push
xor
js
and
fidivs
fidivrl
andb
aad
dec
mov
aam
loope
ret
dec
xchg
pop
movsl
jmp
mov
add
jecxz
fmuls
test
add
adc
cld
rorb
and
mov
subb
test
notl
mov
jle
sbb
test
cld
dec
and
imul
repz
add
fnstenv
jecxz
dec
push
popa
cmp
lret
nop
push
sti
test
dec
in
hlt
jl
sarl
fnstenv
mov
xchg
out
jnp
repz
dec
popa
pop
out
or
jo
iret
xor
mov
push
lods
mov
mov
jno
sar
sub
cmp
cmp
in
gs
ss
lcall
insb
cmp
int
pop
lret
xlat
lock
inc
sbb
aam
paddw
inc
daa
repz
out
sbb
jecxz
dec
scas
rorl
xchg
stos
cmp
data16
cmp
movsb
push
pop
js
sub
jl
test
push
jle
mov
sti
add
enter
insl
or
lret
inc
jbe
and
cmp
push
into
test
incl
mov
jmp
mov
ljmp
insb
push
std
in
sbb
mov
pop
pop
pop
mov
loopne
movsl
sbb
call
int
out
push
into
jl
iret
lret
dec
adc
cld
cmp
decl
fcmovne
jp
mov
out
incl
adc
dec
mov
cli
loopne
dec
cmp
inc
cwtl
sub
mov
pushl
out
push
shrb
mov
loop
pop
cmp
popf
in
lcall
in
add
out
mov
mov
pusha
sbb
pop
xor
repz
ret
mov
mov
jle
stos
dec
movsb
mov
jae
jb
cmc
mov
iret
push
mov
sub
sbb
sbb
mov
std
lea
mov
push
fnsave
pushf
shr
and
std
jne
lea
mov
lcall
lahf
dec
iret
lods
movsb
insl
out
push
inc
add
or
adc
in
jecxz
inc
inc
cmpsl
cs
in
shll
inc
shrw
loopne
mov
cmp
stos
call
insb
cs
rolb
add
std
add
cmp
inc
es
pop
pop
adc
cmp
xor
test
mov
mov
and
repnz
cmp
ljmp
fisttpll
pop
and
fadds
sbb
pcmpgtb
clc
add
leave
adc
stos
xor
fimull
nop
cli
pop
jno
stos
fmul
out
call
test
inc
enter
pop
movsl
adc
sbb
ljmp
jne
je
push
adc
inc
jl
mov
jecxz
dec
into
ja
repz
hlt
std
dec
xchg
popf
arpl
add
cmp
add
jge
mov
fidivrl
out
pushl
mov
pop
test
notrack
mov
gs
sarl
jmp
xchg
jns
rolb
xor
fs
and
and
imull
insl
js
mov
out
negl
pushl
movsb
or
or
mov
ds
sti
mov
push
js,pn
mov
outsb
cld
stos
cmp
ret
decl
mov
std
xor
dec
jecxz
lea
xchg
cli
mov
or
sub
sub
data16
push
ds
jle
adc
std
mov
push
out
icebp
xchg
popf
xchg
stos
ret
subl
sti
xchg
pop
jl
cmp
adc
mov
pop
call
in
pop
scas
aas
cmp
stos
sti
mov
xchg
out
in
test
sub
xor
sbb
std
ja
mov
notl
cmp
push
and
push
mov
jmp
adc
push
lcall
ss
pop
test
pop
sti
jnp,pn
jecxz
aad
test
sbb
jne,pt
ljmp
mov
push
push
dec
cmc
loope
fbstp
xor
sub
dec
jo
mov
rol
jb
or
xchg
adc
xor
aad
jae
pop
mov
xrelease
std
ja
jmp
ds
sarl
adc
xor
ret
lods
loop
adc
out
xor
jne
repz
mov
in
pushf
push
scas
sbb
add
hlt
test
cld
push
mov
cmp
cli
mov
xchg
pop
push
repnz
js
mov
out
lods
lahf
jg
pop
jmp
jmp
lret
mov
sub
mov
pushl
mov
in
xchg
movsb
push
and
xchg
jmp
inc
pop
mov
leave
cmpsl
jg
insb
or
popf
push
repz
cmpl
dec
ss
jcxz
xchg
inc
push
out
xchg
push
std
inc
mov
mov
inc
sar
gs
or
sbb
inc
push
jle
push
inc
xchg
gs
sub
adc
call
decl
xor
test
jl
push
xchg
inc
jmpw
je
andl
or
loope
inc
imul
push
sbb
jmp
call
sbb
sar
nop
xchg
call
inc
cmp
cmp
xchg
sub
out
sti
hlt
jbe
sar
dec
pushl
lret
inc
inc
pushl
mov
jnp
adc
mov
mov
out
push
sar
add
shll
das
lcall
les
fildll
out
push
push
repz
enter
ljmp
cmp
scas
adc
sbb
jbe
jle
xchg
fcompl
xchg
push
mov
sar
push
and
xchg
sbb
xor
loopne
outsl
icebp
mov
repz
decl
leave
jp
jmp
aaa
lods
cmp
adc
mov
es
xchg
jg
cld
jb
cmp
mov
xlat
and
xchg
push
sub
aas
mov
adc
inc
sub
xor
clc
dec
jb
ret
incl
rcr
insb
sbb
addr16
cmp
inc
pop
mov
add
push
xor
sub
ret
cld
mov
sbb
cmp
leave
mov
dec
push
pop
in
lcall
pop
icebp
movsb
popf
and
dec
imull
cmp
insb
fidivl
mov
cmpsb
mov
test
push
jne
cmp
mov
popa
out
jge
dec
jecxz
pop
imul
jnp
aas
call
loope
stc
cmp
ja
aaa
jmp
and
push
jnp
jle
push
ljmp
add
xchg
aad
repz
sbb
es
cmp
xor
sbb
jnp
outsb
out
sbb
mov
jl
fcoms
push
jecxz
cmc
outsl
sahf
mov
adc
mov
out
outsb
pop
sub
jecxz
add
mov
jge
aas
repnz
fists
xor
mov
icebp
shrl
into
clc
sub
xchg
gs
push
rorb
out
incl
inc
xor
pop
or
pusha
inc
fmuls
jno
out
push
rclb
fcmovne
jae
and
dec
mov
repz
cmp
dec
pop
inc
cmp
add
or
lcall
mov
sbb
bound
stos
imul
sbb
pop
pop
pop
lock
xchg
mov
seto
imull
jle
inc
inc
lahf
dec
push
les
add
shl
lret
test
mov
outsl
pop
xchg
cltd
pop
cmpsl
rcrb
pop
ret
cmp
cmpb
or
push
inc
daa
idiv
fs
push
mov
out
sti
mov
mov
dec
sub
jno
loopne
push
or
mov
call
in
pop
call
arpl
es
sub
xor
popa
dec
dec
inc
lods
mov
sbb
jbe
cmp
mov
jne
pop
add
out
decl
push
push
and
lahf
adc
es
scas
subl
movsb
jp
mov
call
pusha
outsb
xchg
dec
loopne,pn
incl
imul
mov
repnz
pop
fstpt
cmpsb
xchg
subb
das
dec
mov
sub
xchg
mov
aam
jle
cmc
pusha
xor
pop
lret
adc
xchg
sbb
jecxz
mov
mov
out
testl
std
mov
stc
adc
movsb
test
std
push
xchg
jg
mov
fldt
cmc
repnz
cmp
es
out
mov
std
jbe
jbe
incl
xlat
add
push
das
sub
popa
scas
mov
sahf
pop
jmp
pusha
ds
out
fcom
call
setno
popf
fiadds
stos
bound
adc
das
icebp
cs
cmp
lret
gs
fidivs
xchg
pop
std
js
sti
cmp
repz
xor
std
push
cwtl
jge
inc
mov
mov
mov
jns
jp
xor
mov
push
jl
out
pushl
pop
js
int
xor
push
jno
inc
fs
sahf
fucom
out
mov
push
jmp
repz
xchg
push
fmuls
decl
jg
cmp
decl
xor
sub
mov
or
push
mov
jge
dec
inc
decl
and
pushl
not
orps
cmp
arpl
mov
jb
xchg
es
mov
add
and
cmp
cmpb
pop
sar
xchg
pop
push
push
pushf
xor
xchg
jae
xchg
push
inc
ss
pushl
ja
cmp
sbbl
repz
push
jge
mov
sti
mov
cld
idivl
adc
mov
cs
adc
mov
clc
ljmp
push
rol
test
adc
mov
stos
imul
hlt
add
jmp
js
push
stc
cmp
mov
pop
push
call
movsl
loopne
jno
cmpsb
rcl
lods
movsb
int3
std
call
pushl
mov
cs
jo
pushf
ret
pop
leave
inc
mov
push
loope
cld
jo
stc
dec
xchg
insb
add
xlat
aad
mov
mov
out
dec
lods
cmpsl
sarl
roll
inc
jmp
cmc
clc
repz
mov
les
ljmp
inc
add
or
out
jmp
shlb
loope
xchg
mov
ljmp
cmp
mov
cmp
sub
cltd
in
pusha
aas
test
js
push
sti
mov
sbb
mov
mov
out
adc
popa
xchg
xor
stos
in
adc
jl
add
addl
adc
lods
cmp
mov
stc
or
jno
jae
jle
repnz
in
xchg
fsubrs
inc
dec
sti
in
pushl
xorl
es
xchg
dec
call
ret
mov
xchg
ret
and
cmp
ljmp
push
std
iret
ds
mov
call
cld
push
mov
sub
je
sub
outsl
aam
push
ud0
lods
out
rclb
pushl
push
outsl
leave
scas
and
jge
sub
inc
popa
xchg
jg
xlat
ljmp
inc
int3
stc
adcl
mov
cmpsl
aaa
pop
pushf
pop
inc
ljmp
sahf
mov
je
pop
out
repz
xor
fsubs
or
mov
mov
push
ss
fsts
cmp
imul
outsl
jge
iret
loope
xchg
push
adc
cmpsb
pop
das
out
mov
cs
jg
dec
ss
popf
jecxz
mov
push
fstpt
and
dec
pop
mov
and
aad
loopne
subb
pop
jmp
fbstp
dec
push
pushl
ret
cmpl
aad
or
ljmp
sub
nop
out
cli
cs
das
and
add
in
pop
loope
shll
js
ret
rcrb
call
xlat
jg
insl
pop
shl
push
and
insb
push
push
rcrl
js
sbb
aas
filds
mov
xor
xchg
pop
cmp
adc
jmp
mov
mov
xchg
and
dec
ja
repz
ljmp
cmp
adc
aas
xor
mov
push
cs
or
add
incl
sub
mov
in
pusha
std
aaa
jns
test
mov
lds
jle
pop
mov
ret
xor
pop
mov
imul
popf
xor
out
dec
mov
fdivr
sub
sbb
dec
cltd
clc
xor
and
pop
ljmp
xchg
push
xor
xor
movsb
sbb
pop
loopne
pushl
cmp
imul
lcall
idivb
mov
cmp
test
xchg
das
inc
push
sub
jmp
mov
dec
and
cld
push
ljmp
xor
decl
xchg
loop
cmc
gs
push
sbb
lea
fnstsw
cli
mov
out
push
and
repnz
fdivrs
out
mov
ret
out
jmp
test
loop
roll
xchg
sti
adcl
mov
push
mov
and
push
xacquire
decl
and
push
cli
inc
adcb
ret
mov
dec
scas
adc
and
xchg
pop
popf
and
insl
mov
jno
dec
jmp
popf
daa
aad
cld
popa
mov
lods
in
mov
pop
xor
xor
inc
jmp
xor
and
pop
mov
subb
into
inc
into
jmp
sbb
lods
sbb
aad
mov
std
vpunpckhqdq
nop
dec
out
mov
or
pushf
int3
fsts
repnz
aas
jp
les
fisubrs
sbb
lcall
iret
fcom
int3
inc
aam
xor
sub
jmp
inc
pop
adc
add
outsb
movsb
pop
or
std
movsl
cs
inc
jno
pushl
sahf
xchg
fldl2t
dec
lea
rorl
ret
add
mov
jb
negl
or
pop
std
les
imul
out
mov
and
push
aad
scas
push
cmp
mov
xchg
jmp
in
add
cld
xor
decl
pop
ss
in
sub
pushl
test
sar
in
adc
ljmp
es
loopne
jl
jno
stc
and
push
jbe
sarb
mov
fdivr
and
in
push
push
xabort
and
sub
inc
pop
cld
and
loopne
jb
incl
je
inc
and
sbb
das
push
inc
mov
jbe
sahf
aaa
dec
jmp
sbb
popa
jecxz
pop
push
add
lods
add
jmp
lds
xchg
in
sbb
inc
ljmp
scas
xchg
lret
stos
cltd
jmp
mov
xchg
jnp
push
decl
push
pop
cmp
jb
nop
push
cmpsb
inc
decb
pop
mov
shl
aad
mov
push
mov
call
pop
cmp
arpl
sbbl
or
push
daa
jle
call
adc
and
mov
je
mov
pusha
push
lock
icebp
inc
pushf
divl
call
cmpsb
jecxz
imul
stc
mov
rep
jg
pop
mov
pop
fstpt
pushf
jb
inc
jae
int3
cs
xchg
adc
push
sahf
cld
jmp
repz
repnz
pop
cmp
in
es
fisubs
sbb
and
xchg
sub
inc
dec
jbe
mov
cmp
jmp
enter
fisubs
or
sbb
aad
movsl
xor
into
cmp
pop
addr16
jecxz
dec
in
sub
push
test
out
xlat
and
repnz
sub
sbb
popf
pop
out
fwait
js
inc
repnz
xchg
jne
shlb
push
push
add
inc
push
lds
cmp
cmp
mov
mov
scas
std
out
pop
fs
xor
decl
cld
pusha
sbb
push
jge
add
fistpl
sub
dec
test
jae
sub
jle
jmp
mov
ficomps
rorl
pop
lock
cli
pushf
jecxz
pop
push
stos
fldlg2
push
cmc
xlat
push
jmp
or
xlat
dec
mov
jl
ljmp
inc
idiv
or
ljmp
int
shr
adc
subl
out
incl
jmp
jp
xor
dec
iret
idivb
push
arpl
sti
incl
stos
pop
mov
adc
fisttps
fdivrp
xchg
cmp
test
mov
adc
shrb
nop
lahf
ret
xchg
sub
dec
sbb
mov
pushl
adc
mov
test
jp
dec
je
sub
aaa
std
mov
inc
test
xor
sarb
and
pop
xchg
mov
xchg
in
cld
jl
pushl
clc
mov
scas
adc
enter
pop
incl
push
mov
push
ficompl
mov
xchg
cmp
jle
jecxz
test
or
dec
cld
lods
mov
int
mov
dec
int3
mov
sub
push
adc
jnp
insl
mov
and
jo
adc
jmp
mov
ja
incl
stc
push
data16
xchg
fcmovnbe
mov
xlat
push
dec
mov
fisubl
dec
stos
lods
mov
clc
repz
xor
movl
popa
je
dec
sub
jg
dec
jmp
or
pop
cmp
sti
sbb
scas
std
jmp
mov
sti
mov
fsub
test
cld
stos
add
idiv
xor
pusha
dec
cmc
mov
mov
pop
out
incl
push
push
testb
repnz
sahf
aaa
push
lcall
xchg
pop
jmp
mov
push
mov
or
fwait
lock
test
and
and
sti
movsl
push
push
adcl
jp
sbb
ret
xor
inc
inc
cmp
aam
pop
repz
pop
sar
cmp
call
mov
cmpsb
stos
xchg
pushl
and
mov
scas
fistpl
pop
test
dec
fnstsw
dec
mov
pushl
mov
ret
pop
negb
fidivrs
jmp
aad
int
orl
loope
xlat
dec
std
pop
scas
lock
pop
push
std
lahf
cmp
fcmovnu
push
fisttpll
incb
mov
sub
sub
jg
sti
xor
push
pop
push
pop
adcb
shl
pushf
std
lds
jl
dec
mov
xor
loop
or
or
in
push
adc
incl
xor
mov
loop
out
outsl
xchg
push
mov
sub
and
outsl
push
lods
out
xor
das
std
cmc
push
pop
popa
sbb
mov
idiv
mov
aad
ret
idivb
repz
sbb
cmp
adc
ret
dec
cs
push
leave
lret
ds
pushl
insb
adc
out
jmp
mov
jecxz
dec
inc
gs
sub
dec
ss
push
test
lcall
push
sbb
into
pop
ds
mov
out
cli
stos
cmpsl
jl
cld
push
mov
jecxz
ficoml
cld
sub
call
scas
push
fcmove
fcomps
add
in
sahf
and
int
repz
pop
sahf
mov
push
loope
and
mov
and
mov
in
mov
stos
push
push
test
adc
cmpsb
jl
insl
sar
ds
out
aad
daa
push
adc
cmovp
ret
jmp
lcall
xchg
fmuls
leave
pop
xor
jbe
xchg
insb
imul
scas
pop
daa
mov
ja
in
jmp
pop
jb
dec
xor
or
mov
adc
pop
or
cmpsb
lahf
fwait
sbb
scas
sbbl
dec
jo
ja
rcrl
mov
movsl
incl
stos
mov
call
jo
lret
jb
mov
pop
sbb
rolb
pushl
adc
sahf
xchg
outsl
inc
cltd
shll
lcall
add
jae
push
adc
adc
decl
lds
inc
decl
mov
jmp
pop
imul
mov
xchg
inc
in
pop
das
shll
cld
xchg
xchg
add
jno
mov
sub
mov
test
fwait
jb
dec
repz
lods
pop
popf
sarl
lcall
rorb
incl
mov
add
ss
sti
jb
pop
push
es
orb
sub
xor
and
inc
in
loop
shrl
push
enter
mov
dec
add
scas
sbb
iret
mov
enter
decl
jb
jecxz
lods
add
xchg
loopne
insb
loop
aam
out
jns
push
mov
fsubs
stc
in
xor
int3
fcoml
mov
pop
insb
xor
or
jg
fsubs
mov
test
mov
syscall
dec
dec
fists
call
jo
pop
cmpsl
mov
or
int3
iret
das
notl
fdivr
lods
xor
jb
xchg
mov
jmp
xor
cmp
in
notl
lods
jmp
xchg
lods
aad
out
cli
mov
adc
push
pushl
outsb
test
enter
pop
sub
rorl
add
cld
scas
xchg
xor
mov
lret
cmp
sbb
std
jne
pop
jmp
fldt
jns
arpl
jae
push
sbb
dec
cmp
xchg
mov
test
pushf
mov
push
mov
push
and
pop
fisttpl
enter
insl
lcall
mov
mov
mov
repz
mov
mov
jb
adc
jno
ljmp
bound
cmpl
ljmp
fiaddl
sahf
mov
jns
cmpsb
mov
lcall
inc
cmp
ljmp
int3
inc
scas
dec
inc
cmp
jl
and
scas
mov
jmp
iret
pushf
repz
subb
lods
sbb
rcrl
sub
or
jmp
xchg
sahf
rcll
sub
sti
test
cmp
outsl
push
movsb
pop
int
psllw
mov
jle
dec
hlt
add
loope
pushf
mov
std
das
xlat
mov
lcall
cs
decl
pusha
mov
push
xchg
test
jp
dec
sub
out
mov
or
xchg
ljmp
jge
lret
aad
push
mov
xchg
and
jp
fs
hlt
jle
adc
ljmp
pop
pop
adc
int3
pop
xchg
ljmp
jne
test
sti
sbb
repnz
mov
jmp
and
push
xchg
xor
fiadds
mov
incl
add
mov
pushl
jnp
popa
fs
dec
push
sti
lahf
or
cs
idiv
stos
popf
and
fsts
lret
adc
cmp
jae
out
mov
es
repz
loop
ret
insb
sti
xchg
jns
movsl
jb
add
mov
inc
fnstsw
fdivl
fdiv
or
nop
mov
pushl
lcall
sub
inc
sub
or
into
test
push
test
push
in
leave
ljmp
xor
sub
mov
cmp
out
ds
call
xchg
insl
stos
stos
xlat
call
decl
iret
aad
mov
mov
pop
inc
enter
movl
push
lcall
xchg
popa
jns
scas
dec
adc
sub
out
inc
push
cli
or
in
mov
aam
rclb
push
outsb
mov
ljmp
sub
insl
into
ja
out
outsb
fsubrp
cmpsb
in
push
repz
pop
ss
pop
sub
jns
into
jg
lods
jg
mov
xchg
sahf
orb
lock
pushf
and
xchg
push
push
fidivl
push
scas
dec
pop
ljmp
xlat
icebp
lea
xchg
sub
out
outsl
std
mov
pusha
test
mov
fsts
pop
cltd
jmp
aad
scas
std
ljmp
xor
dec
mov
cmp
mov
adc
jge
push
cmc
sub
sti
sbb
mov
lahf
xchg
fldl
std
into
imul
dec
leave
pop
incb
cs
aad
jae
into
out
jg
call
xchg
pop
fstpl
stos
ret
pop
dec
lods
call
lret
idiv
popf
mov
pop
cmc
pop
das
jne
mov
xchg
jae
mov
sub
pop
std
mov
push
fmuls
pop
adc
outsl
push
out
out
rorb
push
gs
and
jmp
jno
ds
ljmp
outsb
loope
call
movl
and
ljmp
gs
fst
ret
int3
mov
ljmp
sbb
addr16
xchg
das
xchg
dec
popf
nop
cli
sti
and
xchg
rcrl
dec
xor
pop
jns
and
out
out
mov
repnz
call
lcall
pop
xchg
mov
cmp
mov
add
cmpsb
hlt
jnp
jge
divb
jne
je
adc
decl
jge
push
adc
sbb
and
push
mov
jg
mov
push
sbb
mov
sub
dec
dec
das
xor
mov
xchg
into
mov
stos
decl
and
mov
aas
sub
imul
fs
outsl
pop
pushl
pop
outsb
test
sbb
inc
xor
inc
lahf
mov
and
cs
push
mov
iret
xchg
pop
mov
xchg
loopne
dec
inc
lcall
mov
jecxz
or
pusha
lods
popa
mov
ud0
xchg
cmc
xchg
cmp
and
and
add
mov
jmp
dec
out
popf
clc
xchg
scas
cmp
testl
mov
es
std
adc
cmc
in
fcoms
xchg
and
idiv
fld
ljmp
push
mov
es
decl
sbb
mov
dec
sti
sbb
imul
or
jecxz
testl
mov
into
inc
loopne
cmpsl
adc
or
into
inc
iret
jb
loop
cmp
mov
cmp
arpl
cmpsl
ror
pop
mov
psllq
inc
push
xchg
xchg
ljmp
adc
pop
out
call
std
arpl
sbb
mov
mov
jecxz
push
cmp
cld
xor
shll
lcall
xor
mov
lock
push
or
pcmpgtd
cmp
add
fiaddl
xchg
xchg
lea
loopne
out
xor
imul
insl
sub
inc
jecxz
shll
jns
aas
out
decl
in
clc
jecxz
movsl
mov
mov
lds
lcall
insl
dec
lea
jo
decl
mov
mov
arpl
lahf
xlat
mov
mov
sub
inc
push
add
mov
mov
fists
lods
or
pop
push
incl
outsb
insb
xor
add
and
cmp
jge
ret
icebp
decl
mov
dec
lret
jecxz
jne
jmp
ljmp
out
mov
pop
fmuls
xor
popl
incl
loop
sbb
mov
jmp
and
pop
mov
pop
fcmovne
add
dec
cmp
push
adc
push
andl
leave
mov
lods
mov
ss
adc
ficomps
or
jge
imul
xor
jne
incl
dec
ds
int3
sbb
dec
jnp
mov
incl
arpl
and
lods
adc
iret
ret
cmp
cld
cli
shl
pop
lahf
and
call
lds
jns
addl
int
push
jecxz
xchg
pushl
jb
loopne
call
cmp
add
dec
adc
rcll
and
std
or
decl
sbb
cltd
pushl
xchg
push
push
stc
jge
mov
jge
pushl
test
push
int3
pop
incl
loop
fdivr
insb
mov
movsb
dec
or
add
mov
lods
es
lcall
mov
aas
pop
mov
test
pop
push
std
nop
inc
scas
jno
ss
sti
inc
movsb
mov
mov
cli
inc
dec
sar
add
out
mov
push
popa
sbb
enter
adc
jns
pop
mov
mov
sbb
clts
sti
mov
jo
dec
jnp
call
sbb
or
add
xchg
nop
test
mov
jmp
push
js
les
pop
ljmp
sbb
xchg
dec
subl
xchg
cmp
adc
mov
lcall
push
mov
repz
mov
adc
cmp
call
xor
repz
jnp
xor
xchg
jge
int
lret
mov
and
pop
inc
jecxz
cmp
fs
jbe
cmpsl
mov
jmp
inc
push
xor
push
mov
xchg
insb
lret
mov
popf
jecxz
or
ljmp
test
cld
push
cmove
sbb
fwait
xchg
pusha
push
pop
popa
test
mov
cld
scas
iret
loopne
mov
jecxz
mov
add
mov
xchg
adc
sbb
jmp
cli
push
ss
repz
lcall
xor
stos
iret
fidivs
fisubrl
push
sbb
cmp
dec
loope
ret
aas
mov
ljmp
xchg
ret
adc
nop
cmp
dec
cmpsb
and
popa
lods
add
popf
push
movsb
cmp
dec
inc
scas
out
add
or
mov
test
sub
aas
outsl
leave
cmc
cmc
sti
pop
mov
pushf
mov
fistl
ds
add
jmp
xor
scas
dec
int3
data16
or
roll
xlat
dec
sbb
pop
aas
cmp
mov
inc
push
lret
aas
push
cmp
nop
or
insl
jmp
out
ret
mov
negl
mov
cmp
mov
mov
outsl
pushf
test
fisubrs
int
repnz
xor
cmp
add
push
stos
jns
jg
sub
and
mov
jecxz
out
pusha
hlt
stc
or
insb
pop
push
cld
sub
mulb
jo
inc
add
popa
dec
out
sahf
push
mov
js
xor
shlb
adc
fldt
std
push
idivl
pop
out
outsl
mov
xchg
jne
mov
outsb
jmp
loope
cwtl
addl
stos
mov
fnstsw
fmull
imul
shl
mov
imull
stos
xor
das
cld
jle
mov
jge
inc
cmp
aaa
stos
cld
inc
mov
adc
or
addr16
shrl
cmpl
nop
cmp
inc
or
xor
aaa
add
loope
jecxz
shlb
sbb
daa
pop
incl
outsl
dec
jg
repz
decl
push
cltd
rcl
push
sub
mov
std
testb
movsl
mov
dec
lret
sbb
jne,pt
pop
jecxz
xor
leave
pushl
pop
inc
clc
call
aam
mulb
call
in
test
popa
je
jle
mov
pop
call
dec
inc
jl
imul
iret
add
mov
scas
xchg
nop
push
std
bound
cs
sub
dec
fldcw
jmp
mov
call
jp
xor
ret
outsb
ljmp
fistps
jge
adc
mov
push
fs
dec
sub
xor
fisttpll
dec
int
addr16
jne
ljmp
ret
push
lret
push
ds
sti
cmp
mov
fstl
mov
sbb
bound
ret
lods
rolb
or
cmpsb
push
test
aam
pop
test
dec
out
stos
cli
adc
incl
int
out
sbb
test
jb
loop
sbb
leave
inc
inc
fs
ret
xor
mov
or
cmp
lods
dec
pop
xchg
jl
jge
dec
outsb
jmp
and
push
lods
lcall
mov
jae
pop
sti
pop
xor
jo
lds
mov
std
pop
mov
push
xchg
stos
call
xchg
lods
daa
dec
ud0
cmp
xchg
dec
mov
push
dec
mov
adc
inc
jns
std
xchg
ljmp
jb
or
movsb
ljmp
push
xchg
mov
adc
dec
jns
mov
jmp
loope
fwait
dec
adc
subl
repz
movsb
rcll
out
std
fistl
or
arpl
mov
inc
push
or
mov
mov
add
scas
add
mov
adc
bnd
sti
sbb
in
sarl
or
orl
out
movsb
rcll
push
xlat
pop
mov
jb
cmpsb
iret
mov
scas
cltd
mov
and
mov
mov
mov
jecxz
mul
or
sub
popa
clc
dec
sbb
jnp
dec
mov
push
loopne
iret
cmpb
imul
mov
sub
xchg
shll
gs
pop
dec
in
sbb
jmp
clc
cmp
mov
je
sti
enter
sar
or
pop
sbbb
ljmp
add
incl
or
pop
hlt
dec
call
mov
push
out
gs
imul
jo
stos
bound
lods
sbb
nop
sti
leave
and
incb
ds
je
cmpsb
rcrl
mov
inc
xor
xor
pop
shll
pushl
push
xor
mov
faddl
lret
dec
stos
or
jmp
aas
jnp
ljmp
dec
decl
fabs
lcall
movsb
or
movsl
lret
adc
cmp
push
negb
add
test
mov
movsl
pop
and
pop
push
out
xchg
rorb
test
movsl
pop
xor
test
punpcklwd
sahf
daa
sbb
movsb
pop
clc
push
insb
xor
xor
lcall
test
pushf
jmp
xchg
ljmp
into
in
sbb
pop
jge
mov
sahf
and
mov
ljmp
stos
mov
sar
mov
ret
fsubrp
cmp
adc
dec
decw
pusha
cmp
xchg
mov
mov
out
xor
cld
xor
add
xchg
cmp
loop
jecxz
bound
shld
sub
pusha
repz
dec
cmpsl
out
in
sbb
mov
xor
shlb
sub
sbb
cmc
sti
sbb
push
inc
cmp
leave
cmpsb
mov
mov
adc
aad
insb
sub
dec
ljmp
js
jb
and
xor
pop
cmp
mov
gs
stos
sbb
in
xchg
mov
mov
pop
test
jbe
adc
insb
fcompl
xor
lods
mov
inc
push
mov
out
sar
enter
push
inc
adc
or
addr16
pushf
je
xchg
dec
decl
stos
fs
imul
data16
xchg
mov
cmp
sarl
dec
jns
mov
xchg
popa
cmp
or
jo
call
repz
sub
lods
dec
test
call
dec
lret
mov
ret
fs
add
jmp
mov
xchg
ja
or
sbb
gs
push
mov
adc
cmp
aam
test
mov
sbb
sti
sub
xchg
mov
dec
or
push
push
sub
mov
or
mov
pushl
push
xor
pop
xchg
repz
insb
int3
xchg
inc
fdivrl
push
popa
into
jg
decl
sub
incl
shrb
inc
ljmp
call
dec
jmp
pop
dec
pop
sbb
les
xor
dec
les
aam
ja
pop
add
fwait
dec
and
sbb
std
das
movsl
je
loop
test
stos
pushw
gs
xchg
pop
push
xchg
dec
idiv
and
mov
negl
addr16
sbb
test
sti
adc
pop
cwtl
push
call
adc
dec
stos
xor
cmp
std
std
pushf
mov
incl
divb
popf
insl
adc
jmp
xchg
push
insb
jg
in
jmp
mov
mov
xchg
cld
cltd
dec
jb
xchg
pop
lret
cli
or
lcall
and
cmp
shll
sti
insl
ja
call
cmp
pop
push
push
std
mov
mov
and
es
rcr
xchg
fistl
jmp
les
call
jl
jb
dec
push
xor
jno
xchg
arpl
ja
push
mov
push
decb
inc
pop
pop
xchg
sti
xlat
jle
sti
into
jmp
loop
std
lcall
aas
mov
rep
pop
pop
jae
out
push
sti
mov
fstpl
cmc
lret
pusha
sti
stc
dec
out
cwtl
mov
outsl
cmpsl
add
jnp
xchg
push
cld
out
inc
xchg
lcall
jnp
pop
mov
sahf
push
jb
rcll
xchg
mov
std
push
popa
scas
out
pop
jno
push
stos
pop
xor
icebp
jmp
out
dec
lcall
repz
adc
ret
mov
aas
cmp
les
movsl
dec
xor
dec
xchg
test
inc
das
lcall
popf
pop
jns,pt
fstpl
sub
cmp
fisubl
lret
mov
add
push
cltd
jl
repz
je
pusha
jae
pop
lock
out
jecxz
int3
iret
cmpsl
adc
dec
dec
stos
fcomi
inc
sbb
loopne
cmp
pop
push
enter
repnz
jecxz
pop
outsl
js
xchg
pop
insb
sti
pushl
shrl
out
insb
pop
jecxz
dec
add
insb
cwtl
mov
jnp
jne
arpl
test
sbbb
sbb
jge
cli
cmp
leave
inc
adc
mov
jmp
fmuls
jmp
aaa
sub
jne
hlt
call
xlat
divl
xchg
dec
rcrl
mov
fstpt
adc
stc
loop
dec
icebp
out
repz
adc
jle
ds
std
rol
sub
aaa
ljmp
jmp
fidivrs
scas
cmp
mov
fucomi
and
arpl
sbb
shll
adcl
mov
aad
inc
add
imul
mov
pop
inc
scas
sub
fidivrl
lret
mov
sub
sbb
jmp
js
push
call
sbb
pop
xor
fistpl
icebp
in
jno
cld
cmp
icebp
jne
jle
sti
jecxz
int3
in
addr16
aas
ja
pop
jnp
mov
mov
lret
std
adc
jae
decl
pop
sub
mov
stos
js
cli
test
sbb
jmp
adc
push
jge
mov
mul
cs
incl
adc
pusha
in
pop
sbb
mov
jns
out
and
pop
arpl
gs
push
ds
mov
mov
rcrl
out
jg
push
jp
jge
jecxz
push
lds
std
js,pn
xor
ljmp
lret
push
cmp
mov
test
leave
sub
push
sti
scas
xor
mov
call
pusha
mov
in
dec
sub
andb
cltd
pop
outsb
sub
loopne
mov
jb
dec
fcoml
in
pushf
call
movsl
xchg
loop
dec
ljmp
rorb
pop
insb
and
nop
stc
push
loope
lock
pop
shrl
outsb
repz
adc
arpl
jecxz
lcall
jb
sub
ljmp
sbb
dec
inc
into
sarb
aas
lret
adc
mov
mov
fwait
xchg
rolb
add
out
lcall
out
xchg
repz
das
dec
jmp
in
xor
dec
dec
cmp
loop
aad
dec
stos
jmp
lcall
xor
pop
cmp
das
sub
xor
xchg
repnz
cmpsb
jge
sbb
sbb
jmp
inc
jmp
sub
shl
arpl
aaa
inc
adc
insb
cmp
fsubrs
mov
call
outsb
fcoml
or
or
add
mov
sub
add
inc
mov
push
push
push
outsl
lcall
dec
sub
stos
mov
arpl
mov
outsb
test
testl
sub
jp
fsub
sar
mov
test
cmp
mov
jp
sbb
push
cmp
jno
push
sti
xchg
andb
jge
and
cmpl
in
hlt
adc
cltd
push
pop
ret
and
loope
sbb
jb
lret
mov
adc
ljmp
push
inc
mov
push
jmp
adc
jecxz
outsl
jge
pop
fildl
incb
push
rclb
adcl
sar
outsb
dec
aad
mov
fisttpll
andb
iret
lahf
inc
pop
ficoml
fsubp
mov
rcr
lea
mov
push
aas
pushf
pop
outsl
icebp
jno
push
movsb
call
mov
cwtl
xchg
out
sub
out
es
cmp
je
nop
mov
bound
sub
adc
int3
pop
nop
iret
std
mov
mov
decl
dec
sbb
mov
xchg
mov
jmp
adc
lret
insb
das
lret
dec
aam
outsl
pop
mov
pop
pop
loopne
leave
jmp
or
push
dec
repnz
mulb
add
jmp
sbb
push
in
xchg
repnz
sub
das
sbb
lds
mov
jecxz
jne
test
xor
jb
lea
cmp
lods
decb
xchg
lret
xchg
mov
fldt
mov
pop
cmpsl
stc
push
sar
jmp
jo
lcall
jne
cmpsl
es
out
add
std
clc
dec
fisttps
cmp
dec
sbb
je
sbb
lods
scas
sti
jbe
decl
inc
int
ljmp
insb
lahf
jo
xorl
mov
xchg
aad
xorl
mulb
jle
or
xchg
adcl
cmp
call
cmp
repnz
insb
jnp
lret
cltd
mov
rcl
fs
das
or
cmp
mov
push
inc
ficoms
in
movsb
shrb
xchg
test
sbb
xchg
xchg
or
push
cld
or
jecxz
xlat
ret
dec
ljmp
pop
pop
std
cli
adc
out
mov
sti
push
xchg
es
jnp
lret
decl
pop
dec
fwait
inc
aad
repz
adc
jmp
repz
dec
cmpsb
pop
out
not
pop
mov
adc
decl
lea
incl
cld
fidivrl
pop
mov
mov
push
jnp
data16
lret
mov
xor
jl
inc
inc
jmp
pop
xchg
jo
loopne
out
adc
lcall
lds
mov
push
out
inc
cmp
and
xlat
in
in
repz
cli
mov
mov
jecxz
pop
into
mov
lahf
jmp
aas
lods
jl
out
fistpll
jg
add
cld
std
inc
es
mov
gs
jne
cmp
daa
pop
mov
not
jp
inc
ja
movsl
cmpsl
filds
bound
jno
push
jle
inc
pop
cltd
dec
push
mov
push
adc
fidivrs
jmp
adc
or
pop
cld
hlt
ss
dec
mov
cli
xchg
pusha
std
test
dec
sti
pop
gs
mov
out
cs
xlat
xchg
sbb
push
fdivs
pop
or
sub
push
ljmp
cmc
ds
imul
fcos
mov
lea
xchg
out
cmp
lods
jg
inc
xor
and
fsubs
dec
imul
ja
arpl
std
mov
jg
push
mov
stos
jmp
lds
ret
adc
pop
std
fstl
stos
sbb
daa
and
mov
sbb
pop
out
loope
pusha
xlat
pushf
mov
decl
lret
jl
notl
cld
add
jge
push
add
out
pop
shrb
mov
inc
xchg
mov
push
pop
dec
std
repnz
cli
adc
filds
fsts
mov
mov
sub
mov
popa
out
into
enter
cmp
jns
pop
mov
jmp
or
loope
jg
mov
ja
les
cmc
sbb
jl
push
pop
sbb
and
dec
leave
stos
sbb
jecxz
dec
adc
test
and
push
cmp
cmp
popa
push
inc
ud0
xor
ljmp
jae
cs
jmp
lods
ds
orb
jg
pushl
mov
loopne
decl
dec
negb
jl
test
mov
xor
mov
mov
in
xchg
xor
mov
jns
mov
mov
ficoml
jle
mov
pop
pop
test
fdivrl
stc
pop
xchg
ss
ja
in
insl
pop
xchg
enter
xor
inc
pushf
std
sti
mov
inc
and
sbb
push
daa
fimull
stc
in
notb
ret
inc
out
mov
jl
ret
jp
xorb
call
jno
fidivs
adc
std
jmp
add
jg
incl
inc
lock
jle
and
repnz
test
movsl
xchg
sahf
push
ja
decl
push
das
imul
lock
lods
lahf
cmp
rcl
inc
outsb
dec
out
loop
mov
fimull
mov
syscall
andl
or
pop
mov
mov
adc
cmp
icebp
repz
repnz
jmp
lods
decl
jae
out
mov
mov
push
call
call
test
fcmovb
repz
push
jl
lods
insb
decl
add
arpl
sbb
push
push
inc
pop
ret
push
sbbb
mov
es
mov
jne
sti
in
loopne
lret
fucomp
inc
in
cmp
mov
sub
incl
push
jae
test
pop
ljmp
fmul
jecxz
mov
in
jmp
insl
cld
pusha
lcall
mov
aaa
fmul
movsl
sti
ljmp
insb
pop
jae
aad
or
cmp
cmp
cld
enter
cmp
fisttps
sub
repz
clc
sbb
fs
std
xchg
test
inc
jmp
mov
pop
std
add
fs
adc
lahf
das
repz
imul
cmove
mov
xchg
dec
in
cmp
sti
mov
sub
dec
mov
cmpsb
inc
or
bound
ret
sub
ljmp
movsb
pusha
mov
popa
mov
jmp
pop
mov
cmpsl
mov
shlb
sbb
fprem1
jmp
ljmp
cmpsl
fbstp
hlt
frstor
and
push
lds
sbb
in
sarb
ds
out
out
pop
mov
pop
call
insl
dec
mov
inc
or
les
cmp
adc
incl
push
fcos
insb
fcompl
outsl
jmp
inc
arpl
jmp
stc
xchg
call
mov
sti
inc
fmull
in
loop
push
ret
pushf
push
and
jl
outsl
insl
dec
jno
jecxz
xor
leave
clc
cmp
mov
sti
inc
jg
push
cmpsb
pop
decl
out
lahf
jge
xchg
fldenv
imul
pushf
push
cs
call
pop
test
xor
enter
into
rcrb
adc
xchg
jg
fldt
pushl
mov
dec
push
push
adc
loop
iret
popf
cmpsb
dec
adc
jmp
fists
shl
das
mov
stos
inc
mov
pop
cmp
push
adc
push
or
mov
sti
ss
movsb
adc
mov
add
fsubrp
test
stos
mov
pop
cmp
pop
repz
jno
out
mov
jmp
bound
repz
pop
ficoms
fdivl
int3
mov
mov
pusha
lods
jecxz
pop
push
sbb
push
clc
std
add
lds
lret
mov
pop
mov
cmp
test
cld
sbb
or
inc
cmpsl
fldt
pop
mov
sub
cmc
jmp
and
or
push
daa
push
or
call
xlat
mov
mov
cmp
shrl
loopne
stos
dec
dec
push
dec
xchg
mov
inc
jno
and
mov
pop
out
fs
enter
decl
fimull
xor
cwtl
inc
lret
rcrb
loop
mov
and
and
cmp
cmp
push
xchg
call
sub
ret
xor
mov
sub
ret
cs
jns
stos
xor
jo
scas
outsb
loop
not
rcrb
xchg
cmp
sub
jne
mov
lock
dec
dec
pop
std
js
jmp
mov
ret
movsl
sti
pop
test
cli
inc
push
out
or
push
fistl
test
adc
mov
lahf
cmp
pop
jb
loopne
lods
sbb
icebp
call
push
dec
ljmp
mov
dec
jb
adc
daa
and
adc
jecxz
sub
ret
jns
loop
jmp
gs
inc
dec
enter
shrb
mov
in
mov
mov
pop
fimull
lahf
jo
pop
cs
dec
sahf
sub
mov
aaa
jge
lahf
mov
das
ret
sub
sbb
adc
call
in
std
mov
ljmp
jmp
mov
add
push
out
pop
ret
cmc
shlb
mov
insl
sub
jmp
daa
in
dec
cld
push
add
or
movsl
xor
scas
out
stos
stc
ret
mov
fstl
stc
jmp
mov
mov
outsl
repz
cmc
fidivl
xchg
gs
xor
fldcw
into
mov
in
inc
clc
and
jge
sti
push
jmp
lods
mov
inc
pop
incl
mov
xchg
movsb
jge
sub
je
call
pop
jg
mov
ljmp
add
clc
sub
pop
scas
lods
ficoms
insb
insl
cs
ror
lods
das
idiv
imul
std
popf
fs
jecxz
push
pop
lret
mov
ljmp
test
push
stos
sti
sbb
mov
cmp
jmp
sti
ja
sbb
adc
mov
scas
testl
jmp
xlat
mov
imul
xchg
cmp
lea
pop
mov
enter
jle
int3
ljmp
pop
stos
sbb
sub
cmpsb
mov
xchg
aaa
repz
stos
or
mov
jl
scas
decl
stc
enter
out
mov
jmp
push
aas
xchg
mov
movsb
push
adcl
dec
dec
xchg
loope
xor
imul
jb
hlt
cli
and
outsb
enter
int3
xchg
movl
lahf
mov
and
sbb
jns
or
jg
jne
out
push
ljmp
divb
les
sbb
int3
adc
outsl
sub
dec
mov
andl
sub
jecxz
nop
mov
dec
lret
daa
mov
push
and
cmp
mov
ja
sbb
imul
jae
ret
lret
jo
ja
fists
popf
addr16
nop
jmp
or
and
sbb
out
cmp
pop
adc
lds
push
les
aad
hlt
jo
lcall
je
lods
and
call
adc
xchg
adc
xchg
jge
jmp
pop
push
mov
subl
or
mov
scas
mov
mov
ret
jno
imul
dec
cmp
lahf
adc
xchg
inc
sbb
aam
or
pop
sbb
cmp
std
addr16
clc
sub
inc
jmp
aas
repnz
outsl
sub
jmp
fwait
aam
dec
ss
fs
push
push
and
sti
inc
outsl
das
or
test
std
pushf
sbb
sbb
mov
pop
mov
fisubs
sahf
lcall
xchg
int
inc
movsb
jmp
dec
jl
cmp
pop
cwtl
pop
call
inc
mov
pushl
push
dec
imul
ficoms
or
call
fs
subb
add
xchg
test
jno
ss
mov
mov
stos
inc
ret
xlat
incl
stc
pop
sti
or
cmp
out
push
cmovs
int
sbb
mov
lock
cmp
or
jmp
and
dec
xor
call
or
int
popl
aaa
jecxz
addr16
xchg
call
mov
outsb
jg
roll
adc
xor
fstpt
js
loope
pop
xchg
test
sub
or
and
fildll
push
stos
mov
adc
mov
lcall
sub
rcrb
lock
xor
mov
cmp
icebp
cmp
jnp
push
incl
loope
bound
and
adc
pop
mov
cmp
pop
or
stc
xor
lfs
jb
jno
incl
ret
fwait
cwtl
cltd
dec
roll
jns
std
cmp
fyl2x
loope
daa
push
pop
movsb
stc
and
inc
aaa
movb
inc
pop
xchg
xchg
pop
jmp
push
jno
decl
cli
xchg
push
pop
pop
cmpsl
ljmp
roll
ljmp
sti
dec
xlat
repz
nop
lds
adc
xor
sti
andl
push
dec
inc
jg
jge
out
fdivr
jp
fwait
jae
sbb
clc
bound
rcll
lcall
inc
xchg
mov
push
movsb
call
sub
sbb
push
repz
pop
sub
addl
bound
incb
icebp
inc
inc
ss
pop
cmp
mov
pushl
push
sbb
decl
dec
jb
and
mov
jecxz
testl
jg
adc
xchg
loope
jl
push
pushl
xchg
or
bound
and
iret
movsb
dec
ret
popa
je
jecxz
shlb
mov
insb
dec
hlt
sub
fcompl
outsl
in
sti
xchg
inc
xor
aam
fmull
fdivrs
jnp
add
fwait
dec
cmp
pushf
inc
sbb
ss
decl
pop
sbb
ljmp
outsl
pop
mov
xchg
and
cld
out
jl
adc
push
mov
or
js
call
in
cmp
iret
mov
pusha
jmp
addr16
mov
dec
bound
popa
inc
push
push
lods
std
cmp
rorb
data16
push
mov
enter
imul
push
sub
jmp
xchg
push
fndisi(8087
pop
mov
mov
ljmp
sub
xor
stc
pushf
imul
push
loop
andl
mov
scas
std
push
push
mov
jg
iret
or
lret
push
outsb
rcll
inc
je
jmp
aas
dec
adc
pop
pop
jl
mov
jmp
lret
rcrl
hlt
cmp
mov
inc
mov
jo
jmp
out
ljmp
cmpsl
out
add
jmp
out
jle
stc
jmp
jecxz
pop
idivl
cmp
scas
sbb
pop
out
adc
lea
stos
aas
call
cmp
jge
addl
pop
or
repz
out
sbb
mov
popf
jge
stos
into
push
pushf
outsl
xlat
mov
push
stc
or
repz
into
mov
test
psubusw
mov
jge
mov
and
mov
push
jl
xchg
jne
sub
popf
mov
push
es
lahf
mov
jns
mov
push
pop
cld
dec
mov
cmp
jge
mov
aas
scas
jne
jecxz
and
daa
and
jmp
jae
adc
popf
push
std
out
and
call
jg
jae
daa
ljmp
ror
ljmp
inc
mov
mov
sub
push
push
std
or
scas
jne
ljmp
into
movsb
mov
je
repz
divl
std
roll
outsb
pop
cmp
pop
mov
loope
scas
out
pushf
incl
sti
scas
xchg
xor
incl
lcall
mull
stos
adc
cmp
mov
test
jmp
imul
out
aad
dec
mov
dec
push
mov
cltd
add
or
jmp
loope
cmp
lahf
or
lcall
pop
sti
fwait
bound
and
xchg
pop
inc
xor
out
loop
push
mov
pop
out
mov
sub
dec
push
notb
jg
cmp
jbe
in
lret
push
daa
push
inc
clc
mov
jmp
std
mov
icebp
mul
shll
add
adc
or
test
jge
jp
add
pushl
stos
jno
lock
fmuls
add
ljmp
in
jecxz
fistps
push
dec
mov
test
cwtl
lock
jne
and
sti
icebp
adc
insb
daa
jp
pop
xchg
sub
push
jmp
xchg
das
lret
mov
jbe
adc
xor
sti
mov
scas
jge
xlat
sbbl
jns
mov
imull
jle
mov
and
rcll
jle
ffreep
aaa
inc
dec
popf
test
cmpsl
repz
sbb
lahf
idiv
push
imul
addr16
aam
sbb
mov
or
jo
jmp
dec
rol
test
mov
int3
int3
sbb
xchg
decl
or
dec
sbb
jg
aaa
lds
inc
sbb
sbb
sub
mov
jp
cli
mov
mov
insb
ljmp
cmp
aas
fwait
push
add
repz
mov
sub
sbb
add
in
mov
call
sub
xchg
sub
mov
sar
push
and
repz
inc
pop
pusha
fs
mov
call
dec
or
rcr
dec
dec
jno
xchg
pop
ss
xor
xor
sti
inc
jmp
test
cmpl
mov
mov
lds
push
cs
push
repz
inc
scas
xchg
jl
push
xchg
je
outsl
jge
pop
jmp
fdivrl
test
das
incl
int
repz
and
out
push
add
lcall
cmp
xchg
rolb
add
mov
jb
cld
clc
rorl
sti
pusha
adc
push
ret
cld
dec
xor
pop
mov
loope
je
lcall
es
cld
ja
push
or
adc
jp
insl
mov
dec
and
xor
mov
or
aad
sti
pmaxsw
pushf
addb
jecxz
xchg
mov
rcl
sbb
push
jb
fsubs
ret
std
dec
mov
cmp
adcl
lret
dec
incl
sahf
dec
stos
into
lea
or
ss
repz
dec
jne
xor
mov
pop
mov
mov
cmp
imul
in
clc
dec
out
das
sub
ja
mov
stos
sti
lock
sub
mov
jb
stos
aas
push
pop
xchg
cmpsb
mov
in
subb
sbb
and
js
test
mov
xor
cmp
xchg
mov
arpl
insb
fdivr
pushl
js
incl
call
packuswb
les
testb
mov
add
rorl
and
popf
cwtl
call
sti
sub
popa
jle
sub
iret
subl
sti
pop
out
jnp
cld
mov
pushl
pop
lds
or
cmp
mov
inc
jp
aad
cld
push
xchg
addr16
scas
idivl
sti
ficoml
rorb
cld
inc
and
movsl
sar
jae
sti
push
cmp
or
std
push
ret
fs
in
stc
add
insl
jle
out
pop
xchg
scas
call
fcomps
sbb
mov
lods
sub
push
das
mov
sti
in
jecxz
add
dec
insb
sub
jo
mov
sub
mov
insb
fisubrs
call
jno
pusha
pop
dec
cmp
and
xor
std
adc
lods
aad
push
sbb
sbb
insl
add
loopne
sub
ds
inc
cmp
mov
adc
dec
ds
jg
adc
mov
inc
dec
xchg
xor
and
insl
mov
popf
sbb
aam
sti
les
es
jno
pop
fidivs
xchg
jnp
jge
into
lcall
dec
jmp
cmp
xor
jmp
outsl
mov
incl
int3
in
fs
push
pushl
jmp
sbb
pop
or
repnz
cld
mov
mov
xlat
idivl
jle
std
icebp
xchg
ret
mov
push
in
push
cmp
out
ss
pop
jg
mov
incl
cmp
add
bound
cld
xlat
ret
stos
std
inc
adc
pusha
rcll
or
pop
lret
mov
adc
pop
mov
xor
dec
out
or
cs
push
push
fnsave
xchg
jae
xor
or
and
sti
mov
hlt
pop
rorl
push
std
sub
in
sti
pop
mov
idivb
out
lods
mov
jp
xlat
jl
push
outsb
sbb
mov
jmp
std
add
push
loopne
sar
insl
in
out
jge
jbe
push
xchg
pop
adc
push
std
mov
pop
push
fildl
mov
push
ss
cmpsb
and
jl
jecxz
jle
sub
std
cwtl
or
pushl
popa
sti
sbb
mov
cmp
or
pop
pop
mov
jns
jmp
sti
pop
fcomi
les
inc
stos
fcoml
std
push
repnz
loop
xchg
loope
lahf
jnp
cld
pop
stc
mov
push
std
mov
cld
ret
and
dec
jno
ffree
dec
jmp
pop
imul
insl
mov
add
mov
test
pop
stos
bnd
ss
xchg
scas
arpl
repz
in
lcall
push
decl
fdivrs
lret
std
push
test
sti
out
sub
fistpll
imul
ja
mov
mov
jns
stos
cmp
notb
jnp
mov
mull
push
int3
mov
jnp
push
sbb
sub
sbb
incl
xchg
push
lcall
scas
mov
jecxz
inc
add
loop
cltd
jmp
jns
push
inc
cmp
jg
xchg
push
jne
int
mov
pop
pusha
sbb
cmp
cld
jo
jb
inc
sub
push
fcomi
pushf
pop
scas
es
lods
lahf
stos
imul
daa
out
mov
pop
fldt
in
pop
fistpll
std
mov
jge
stos
jg
push
mov
mov
mov
aad
std
pop
lret
cwtl
xchg
and
jge
inc
test
sahf
call
jb
lret
dec
es
mov
incl
xor
imul
dec
scas
rcr
sbb
sub
outsb
or
mov
push
sbb
mov
ljmp
ja
shll
in
lcall
dec
inc
cmp
push
movb
push
mov
sub
dec
addr16
pshufw
jns
sbb
fcomi
ret
mov
loope
jb
mov
decl
mov
jae
ja
sti
push
mov
andw
xorl
ljmp
inc
sub
ljmp
pop
sti
test
lret
inc
sbb
adc
mov
cltd
cmpsb
out
mov
pop
aas
cmp
jle
push
int3
jle
ret
cmp
scas
cltd
ret
mov
pusha
fsubrl
mov
push
insb
shll
cmp
jmp
loop
movsb
sti
insl
xor
jbe
decl
jb
pushl
xor
jmp
pushf
ret
sbb
mov
es
aam
cmp
lds
inc
outsb
ret
pop
dec
adc
popa
fs
sti
and
lcall
cmp
push
decl
clc
jge
incl
scas
cmp
sti
fwait
sbb
incb
mov
mov
sub
scas
incl
outsl
or
lcall
ret
pop
enter
pop
mov
fnstenv
imul
addl
repz
movsb
sbb
mov
shrb
in
cld
dec
mov
push
mov
stc
loop
xchg
cltd
inc
inc
jg
cli
mov
test
push
mov
imul
movsb
or
cmp
cli
aad
iret
dec
pop
es
mov
add
pop
repz
jmp
lcall
call
push
insl
fs
mov
ja
jno
jne
jge
cmpsl
cmp
push
adc
pusha
cmpsb
clc
and
scas
inc
mov
aaa
xchg
fidivrs
aad
pop
adc
fnstcw
jmp
mov
fs
ja
dec
nop
push
push
sbb
inc
cmp
rorb
jmp
adc
sub
dec
shld
dec
std
fadds
cmp
mov
rcll
cmpsb
lahf
jno
inc
add
sbb
or
mov
mov
sub
outsb
mov
xchg
repz
jle
mov
mov
cmp
adc
lods
ret
stos
and
adcl
push
cmp
jmp
mov
ljmp
pushf
xchg
xchg
nop
sub
push
fdivrl
add
sub
test
jge
dec
mov
push
mov
call
xchg
pop
sbb
cmp
sbb
jne
clc
jnp,pt
rcr
idiv
inc
push
in
aas
scas
nop
push
jnp
mov
lods
jecxz
cmpsb
fsubrl
repz
incl
jle
xor
dec
and
ljmp
sar
dec
lret
fcmovb
repnz
fistps
pop
sbb
mov
mov
sub
aas
stos
push
inc
fistpll
jno
xlat
mov
insl
push
fstpt
cmpsl
mov
xchg
std
cld
clc
adc
pushl
out
imul
mov
fistpll
xor
or
mov
sti
pop
fdiv
hlt
lea
jmp
pop
mov
adc
jne
mov
pop
cs
mov
ja
sbb
addr16
popf
lods
jmp
fistl
mov
rcll
sti
or
fdivl
stos
mov
addl
stos
call
popa
mov
scas
aad
negb
mov
push
fstl
sub
loop
outsb
pop
negb
mov
lret
push
mov
mov
sbb
repz
out
arpl
fistps
xlat
call
inc
pushl
jl
xchg
scas
mov
jg
xchg
and
adc
mov
dec
fisttps
jmp
rcrb
or
arpl
dec
mov
pop
sarl
adc
mov
in
jb
add
fstp
shrl
adc
inc
cltd
je
jnp
clc
outsl
cmc
sti
sbb
aaa
repz
in
cmp
ret
stos
sahf
cmpsb
decb
scas
push
std
ljmp
sub
shl
ljmp
jbe
mov
dec
test
pop
jns
jl
jae
out
insl
push
mov
ljmp
into
out
aas
scas
and
fwait
inc
popf
pop
std
inc
repz
inc
mov
sti
mov
mov
repz
xchg
mov
xor
out
insl
sbb
js
push
icebp
jmp
or
repz
jl
adc
mov
sbbb
mov
mov
pop
xor
dec
mov
jbe
adc
adc
sti
icebp
test
jns
sbb
insb
xchg
loop
test
or
dec
out
cli
or
pop
mov
lcall
out
jns
mov
call
xchg
or
lock
test
xor
mov
add
cld
mov
test
roll
call
insl
xor
push
jno
mov
push
jo
mov
push
leave
inc
sahf
mov
fisttpl
cmp
add
and
jmp
mov
xor
jno
jl
sbb
jo
subb
jp
jecxz
int
pop
sbb
nop
inc
leave
and
sti
sub
sti
loope
dec
xchg
pushl
sbb
pop
divl
xor
popf
xchg
add
mov
sbb
xor
mov
and
cmp
in
pop
pusha
jae
imul
test
enter
cmpsb
lcall
mov
pushl
es
push
inc
ds
movsl
mov
cmpsl
pusha
or
push
iret
xor
lcall
mov
lret
jecxz
popa
or
dec
cmp
mov
jns
inc
shrl
scas
sub
rclb
mov
clc
lods
mov
sbb
mov
dec
flds
xchg
push
std
inc
imul
xchg
cs
push
stos
lods
mov
pusha
adc
ljmp
cli
xchg
decl
pop
std
ja
mov
test
in
jno
mov
mov
pushf
cld
sbb
scas
testb
outsb
dec
lods
push
mov
movsb
aaa
push
incl
aas
icebp
mov
mov
mov
mov
xor
xor
mov
inc
ret
in
ss
stos
mov
sub
fdivr
outsl
pop
fs
xor
pop
cmpb
je
push
pcmpgtw
pop
mov
incl
ret
mov
inc
xor
sub
or
jae
dec
sbbl
sti
add
std
mov
jle
pop
push
jo
xchg
sub
mov
mov
and
pop
pop
sti
mov
adc
shl
stc
pop
mov
repz
mov
add
repnz
das
xor
jge
in
add
or
ss
push
pop
dec
pusha
enter
inc
pop
xchg
push
dec
mov
adc
adc
movd
sahf
push
in
fsub
int3
test
std
out
pop
loop
sbb
mov
jne
out
lds
mov
sub
jb
test
test
cld
shl
mov
inc
sbb
movsb
lcall
xor
popa
fcmovne
sub
push
xor
xor
inc
mov
xor
xchg
ret
enter
insl
aas
aad
sti
dec
cmp
in
aam
push
cwtl
jmp
addr16
push
jmp
xchg
jge
add
pop
lea
imul
data16
sub
and
jecxz
jmp
call
pop
mov
jae
ds
sub
inc
pop
fidivrs
mov
push
mov
or
nop
pop
cmp
scas
sahf
lret
cmpsl
xchg
in
les
std
and
lcall
pushl
rcr
test
fcomps
or
adc
in
cld
in
movsb
and
fbld
jne
outsl
std
dec
notl
mov
and
decl
stc
clc
scas
adc
xchg
push
sbb
inc
xchg
out
jcxz
lds
jge
std
mov
mov
mov
iret
iret
sbb
ljmp
sti
jg
addr16
out
mov
pop
das
xchg
sbb
repz
cmpsl
mov
sti
movsb
jb
cwtl
loop
test
sahf
sti
xor
popa
jg
cli
dec
cmc
out
test
pop
outsl
fldt
fsubr
fistpl
incl
pop
repz
xlat
mov
ficomps
mov
pop
pop
inc
jecxz
repz
xchg
push
imul
and
repz
scas
lods
ret
mov
pop
mov
mov
sub
mov
push
mov
aad
inc
pop
fbstp
xor
ja
aas
jg
pop
loope
sti
outsl
cmp
cmc
jo
mov
aas
outsb
mov
inc
push
cmpsl
cmc
sub
in
fistps
mov
or
sub
sahf
scas
push
cwtl
xor
hlt
ror
mov
jne
inc
insl
jp
and
mov
repz
das
popa
sub
jge
xor
lcall
stos
jne
std
stc
jno
add
aam
andl
jg
ljmp
repz
outsb
mov
test
pop
stos
aas
sbb
sti
icebp
jo
cmp
fistpll
rcll
pushl
test
dec
cmp
sub
leave
mov
lds
xchg
loope
ud2
sti
fisttpl
dec
call
aaa
fisubrs
jmp
out
xchg
lret
fs
add
push
jge
out
aaa
jecxz
mov
pop
sub
cmp
insl
jg
mov
inc
jmp
popf
sbb
inc
arpl
out
incl
out
dec
outsl
push
cmpsb
sar
dec
adc
and
ljmp
and
scas
clc
xor
lock
pusha
mov
cmpsl
dec
jmp
loopne
mov
dec
xor
shl
into
sub
sbb
mov
pop
sar
jo
xchg
pop
rorl
push
lds
ds
or
insl
repz
mov
orb
dec
icebp
xor
jb
shlb
push
pop
mov
sub
ljmp
sbb
ljmp
enter
das
movb
jg
jb
sbb
movsb
push
in
pop
jnp
sub
imul
jg
sub
push
scas
in
mov
insl
cmpsb
cmp
and
lahf
call
jge
mov
jle
jo
cltd
xchg
lcall
mov
scas
dec
lahf
mov
mov
push
jns
xchg
sub
cld
ja
and
data16
in
cmc
das
repz
sub
lock
clc
pop
cmp
pop
push
jnp
push
dec
push
push
call
or
jmp
jae
popa
jmp
mov
dec
dec
pop
sbb
mov
lods
jle
pop
lds
cld
inc
xor
decl
pop
nop
call
into
and
lcall
xchg
roll
dec
mov
ss
jo
inc
test
test
aas
jns
mov
hlt
jecxz
mov
add
push
incl
cmp
call
into
add
ljmp
fmuls
cs
sbb
xchg
pushl
es
jmp
mov
jg
xchg
lahf
inc
fldz
push
repz
mov
nop
dec
sbb
clc
xchg
shll
icebp
jne
std
cmp
sti
enter
stc
push
xlat
mov
stos
mov
push
xor
sbb
addr16
cwtl
ss
rcr
aam
sub
fs
and
adc
decl
dec
clc
insb
sub
fildl
inc
jns
addl
cmp
mov
sti
jae
cmpsl
repnz
mov
xchg
mov
call
push
cmpsl
decl
inc
popf
add
or
jno
call
jbe
out
inc
mov
les
xchg
out
inc
sub
jmp
jecxz
jl
pop
or
stos
fdivrl
adc
add
test
call
pusha
lcall
pop
js
mov
std
push
xchg
fcmove
xchg
stos
repz
push
sbb
popf
cmp
cmp
mov
jne
or
out
in
mov
aas
std
mov
ljmp
pop
jne
in
movsl
stc
dec
scas
divl
push
popf
sub
sub
mov
std
sub
int
mov
inc
ds
int3
push
dec
mov
jge
mov
fdivrl
sbbl
cmp
cmpsb
dec
ds
sbb
xchg
and
cld
jo
ret
out
push
std
mov
div
rcrl
adc
pop
pop
mov
into
idivb
cmp
ss
cmp
fs
test
rorl
xchg
pop
fstpt
sbb
cmc
cmp
cmpsb
outsb
loope
xchg
jnp
decl
cmp
aaa
push
idiv
push
xchg
idiv
repz
mov
sti
mov
pop
outsl
js
mov
push
jg
repz
dec
push
out
adc
jbe
std
addl
jmp
ljmp
ljmp
lahf
sbb
addr16
rcrl
addr16
and
ljmp
cmp
or
cli
clc
lret
jg
jo
push
repz
divl
mov
sub
ficomps
sti
lods
dec
dec
std
push
addr16
imul
daa
sti
fldcw
xchg
adc
ljmp
icebp
mov
out
jo
mov
gs
mov
pushl
push
mov
sub
stc
ret
xchg
pop
or
icebp
out
mov
scas
and
inc
pop
out
test
add
inc
push
std
jae
xchg
insl
mov
add
xchg
sub
lcall
pop
scas
das
sti
loop
aad
push
jp
or
mov
mov
lret
inc
push
fcos
pop
sub
adc
or
cmpsl
push
sti
dec
in
nop
jl
jg
outsb
jmp
inc
jne
cwtl
repz
push
fistl
fisubrl
adc
daa
idivl
jmp
and
sti
das
scas
ljmp
cmp
sbb
adc
mov
mov
jns
fwait
xchg
and
sub
mov
je
jmp
mov
mov
pusha
adc
mov
jge
mull
cmc
mov
mov
jg
mov
adc
aad
loopne
ret
lret
mov
cmpsl
pop
push
jne
ud0
loop
leave
add
xor
ljmp
sbb
adc
repz
imul
bnd
data16
mov
hlt
shr
addr16
addr16
outsl
mov
scas
mov
lret
push
imul
xor
cmpsb
dec
inc
mov
testl
mov
std
sbb
sub
xchg
cld
mov
push
jmp
pop
sbb
pop
jecxz
and
cltd
inc
xor
call
cmp
fadds
jp
mov
aad
lret
ljmp
fisttpll
fcomip
push
jne
jns
iret
pop
cwtl
and
aas
jmp
sub
sbb
pop
gs
mov
mov
adc
add
jmp
pop
xor
inc
std
push
out
mov
push
adc
or
jge
dec
fcomps
fwait
xchg
mov
shr
repz
cwtl
insl
or
pop
js
test
fimull
fistpl
sti
mov
cmc
mov
lret
clc
and
mov
adc
or
xor
cmpsb
jl
mov
or
outsl
mov
ret
mov
cmp
fistps
adc
lock
divl
mov
cli
push
jl
jnp
xor
sahf
sbb
out
mov
aaa
push
imul
xorb
ret
xorl
dec
cs
in
in
ss
fidivrl
or
push
jno
sbb
in
push
mov
in
pop
cs
out
subb
push
cmpsb
adc
and
jae
or
mov
xchg
adc
mov
cmp
mov
dec
dec
scas
fcmovnbe
cs
xchg
push
inc
or
nop
push
jne
sti
les
adcl
ret
push
jns
xor
or
es
mov
cmp
ja
xchg
std
rcl
mov
push
leave
push
clc
scas
sar
dec
cli
dec
or
and
mov
pop
sahf
call
stos
add
les
sti
xchg
sub
pop
sbb
sahf
je
jo
cwtl
in
lret
inc
pop
dec
mov
jne
xor
push
insl
jge
jnp
fldenv
loop
inc
mov
jne
decb
inc
mov
scas
inc
and
repnz
jnp
push
mov
cmp
adc
cmc
and
imul
aam
push
inc
push
jbe
mov
push
inc
sarl
movsl
sub
popa
aad
mov
pop
jmp
push
xlat
xor
pop
pop
dec
call
mov
cmpl
pop
inc
cmpsb
popa
shrl
adc
jmp
cmc
xor
aam
fsubrs
sub
cltd
test
mov
xchg
sbb
mov
and
cmp
shlb
inc
xor
jl
sar
cli
ja
cmp
jb
std
jl
aas
clc
inc
aad
ds
pop
pop
jg
in
aam
or
popa
sti
mov
sub
fcoms
xor
sub
and
push
test
mov
insl
pop
mov
test
repnz
mov
pop
lcall
inc
mov
mov
xchg
push
ficompl
hlt
xlat
jle
cmc
call
negl
jg
mov
out
repz
sub
data16
std
sub
adcb
cltd
fsubp
push
pushl
pop
mov
stc
mov
lret
adc
sti
rclb
sub
pop
ds
jle
icebp
dec
cmp
outsl
push
fnstcw
pop
pop
xchg
fmul
pop
std
arpl
mov
ds
call
outsl
testl
cli
jne
xlat
push
scas
pop
sub
fcos
movsl
pop
mov
sbb
incl
dec
dec
push
insb
in
movsb
xchg
jge
dec
mov
and
rorl
aas
mov
mov
fistpl
xchg
mov
inc
fimuls
insb
ds
ret
fsubr
fcomi
test
addr16
ljmp
jns
mov
mov
jl
mov
jg
cwtl
xchg
mov
push
js
adc
mov
out
mov
iret
es
std
popf
xchg
fmul
ljmp
fcmovb
jno
out
sbb
push
and
cld
out
call
test
mov
cmp
fistpll
sbb
fidivrl
sub
fsubp
fldt
cmp
mov
loope
int
mov
sub
mov
mov
shrl
stos
movsl
test
repnz
inc
frstor
mov
or
adc
mov
aad
sti
shrl
push
daa
xlat
std
push
jecxz
xor
add
aas
popa
sub
jns
cmpsb
mov
cs
mov
loop
sub
adc
jle
dec
je
call
dec
mov
ljmp
mov
mov
rol
sub
add
outsb
cmpsl
ds
inc
jge
decl
ja
jo
xchg
and
lods
sbb
cmp
dec
and
stos
mov
mov
ja
mov
cltd
aam
rcll
repz
in
jb
cld
repz
decl
int3
hlt
dec
rcrl
xchg
imul
sbb
cmp
aas
decl
pop
push
mov
cmp
imull
add
xor
cld
jl
repz
or
call
push
and
mov
xchg
sbb
sub
repz
cld
mov
jne
fcompl
inc
mov
pop
jmp
xchg
fidivl
popf
jge
mov
mov
fcmovu
stos
or
fisttpl
inc
std
in
push
ret
stc
imul
pop
jge
fimuls
shll
inc
jb
clc
incl
scas
adc
ljmp
sub
inc
jmp
lcall
xchg
sub
rorl
jne
stc
xor
adc
push
push
jge
lcall
inc
ljmp
cmp
sti
mov
add
jbe
inc
in
jns
mov
lret
test
data16
add
sbbl
jns
dec
mov
in
cld
sbb
mov
jne
pop
fadds
out
outsl
xor
xlat
scas
scas
daa
pushf
aad
pop
sti
xor
sub
mov
push
loop
outsb
xchg
clc
sbb
cltd
cmp
cmpsl
in
mov
pushf
mov
cld
cs
lods
fidivl
lods
inc
dec
call
sti
jecxz
ljmp
stos
sti
jnp
mov
mov
das
fsubrl
and
rclb
jl
mov
xchg
push
fildll
push
pusha
sti
adc
jecxz
std
shll
lahf
call
push
rolb
jge
push
ret
jnp
cs
xor
mov
arpl
call
cltd
pop
ljmp
cmc
mov
repz
jecxz
insl
xlat
jbe
jnp
adc
fcomi
mov
icebp
push
cld
jmp
mov
in
jg
imull
popf
cmp
xor
popa
std
dec
xchg
imulb
mov
out
repz
jmp
stc
rorl
push
xor
jno
inc
lods
pushl
loopne
jb
xlat
enter
push
inc
jg
lock
jge
mov
test
lret
imul
cmp
pop
jl
mov
jne
cld
pop
add
icebp
mov
stc
testl
lods
jne
js
inc
fsincos
xchg
in
inc
mov
ds
out
sub
jmp
xchg
imul
cmp
pop
jnp
cmpsb
sub
stos
popf
daa
jne
imul
pop
test
repz
enter
mov
cs
test
adc
bound
sub
sarl
mov
daa
pop
pop
xchg
mov
cmp
mov
lcall
lods
sub
push
jle
xchg
mov
push
call
and
xchg
jecxz
inc
xchg
push
iret
jbe,pt
lods
push
mov
mov
fs
inc
xor
lea
scas
sahf
jmp
daa
lret
jns
sbb
pop
sbb
lahf
paddusb
cmp
stc
and
loope
mov
jp
fldcw
inc
pop
dec
sti
sub
mov
fbstp
stc
mov
and
inc
idivl
out
cmp
sub
xchg
sub
or
std
jecxz
nop
sub
mov
cmpsb
jecxz
xor
xchg
fstpt
cmp
fs
jne
fistl
ret
sti
push
xor
cli
in
push
pop
mov
paddd
ror
lret
ljmp
jno
xchg
stc
arpl
sbb
std
mov
inc
jmp
addb
mov
or
mov
mov
in
pop
lcall
and
dec
mov
xor
push
test
popa
sti
fstl
xchg
mov
call
sti
or
ret
pop
mov
pop
lea
pop
adc
jmp
lcall
jno
loope
cmpsb
lahf
fsubrl
dec
in
or
pop
add
sarl
incl
mov
aaa
mov
cmp
clc
cmp
lcall
sub
call
pop
mov
scas
pop
rcrb
stos
int
pop
cmp
mov
cmpl
or
call
push
rorl
cmp
clc
jne,pt
mov
decb
daa
inc
xlat
xor
das
popa
push
jnp
leave
repz
std
and
cmp
sahf
and
fisttpll
pop
and
fisubl
leave
pop
in
jecxz
xorb
mov
sti
jg
js
lds
ret
inc
xor
enter
ljmp
fdivs
jbe
dec
fldcw
filds
mov
scas
jge
iret
mov
inc
dec
push
cltd
cmp
cmovne
jno
comiss
push
sar
enter
subb
ret
or
or
jmp
in
cmp
or
cmp
jns
jle
push
xchg
dec
decl
mul
loopne
rcrl
mov
into
inc
mov
aam
ds
sbb
jmp
fisttps
pushf
pusha
or
dec
ja
rcrl
sti
xchg
scas
das
movsl
xlat
pop
cld
xchg
xchg
adc
repnz
lcall
lret
sub
loope
test
lds
jl
cmp
cmpsl
push
jmp
notb
iret
ljmp
and
sbb
adc
sti
aad
cltd
mov
jmp
xchg
adc
jmp
pop
ret
and
push
addr16
ljmp
lret
fiaddl
arpl
sub
idiv
lret
aad
outsb
sti
jb
stos
jp
stos
stc
imul
xor
mov
cmpsl
mov
shll
xor
and
aam
cmp
cld
ljmp
inc
cmpsb
jle
xchg
je
sub
mov
hlt
in
ljmp
loopw
aam
mull
cmp
sti
mov
pop
sub
sub
adc
mov
xor
sub
mov
repz
lret
xor
xchg
dec
jle
js
mov
sti
lcall
je
std
ss
push
stos
xchg
mov
adc
pop
loopne
and
pop
out
daa
rcll
sub
pop
xchg
inc
stc
fcmovne
mov
fdivrs
ficoms
test
lret
cli
shlb
out
lods
cld
pop
sti
add
inc
pop
xor
ds
stc
cs
in
ds
jbe
scas
pop
out
notb
xchg
push
fimuls
xlat
jo
call
cs
cmp
arpl
repz
mov
push
mov
je
sbb
out
push
pop
sbb
mov
fidivrs
xchg
mov
pop
dec
or
mov
test
pop
jl
jecxz
cli
out
loopne
jns
jmp
pop
sbb
add
testl
dec
cmp
push
lcall
sbb
incl
adc
mov
stos
insb
inc
cld
jns
mov
push
cmp
incl
insl
dec
inc
into
stos
imul
insb
loop
jge
aaa
xor
dec
xchg
stos
xchg
fcompl
cpuid
testb
push
orl
call
fidivs
into
in
push
sub
push
push
call
stos
fbld
pop
enter
jbe
arpl
jle
icebp
sbb
cwtl
pop
std
es
mov
xor
je
add
adc
push
js
enter
ret
dec
scas
movsb
xor
popf
fcomps
rcrb
push
xor
in
fisubrl
jle
mov
mov
and
adc
insl
jns
ret
popf
xchg
fsubrl
scas
repz
inc
push
adc
test
inc
pop
dec
or
ds
ss
inc
mov
xchg
repz
mov
cld
das
scas
jecxz
stos
cmpsl
dec
mov
sub
cld
lods
shll
ret
call
jle
adc
out
mov
jle
xchg
popf
cmp
add
jg
repnz
ljmp
lahf
xchg
and
mov
hlt
cli
jne
xor
mov
xlat
es
pop
dec
mov
cs
lods
mov
mov
outsb
fsubrp
jg
pop
ds
jecxz
das
mov
dec
bnd
push
call
sti
into
jg
fidivl
popf
or
aam
pushl
push
or
jge
stos
pop
popf
shl
and
dec
jge
orb
cld
sbb
and
addr16
push
pop
mov
jmp
dec
aas
fdivrp
test
popf
lcall
jmp
adc
das
add
mov
bound
xchg
xchg
jne
jecxz
push
sbb
adc
ret
daa
fisubs
sbb
dec
sub
std
or
in
ficompl
mov
cmc
and
xor
rcrl
pop
add
push
shlb
ret
movsl
cvtps2pd
xchg
lahf
lcall
mov
cmp
int
pop
dec
adc
cmpsl
pusha
mov
sub
dec
jmp
xchg
data16
xchg
push
fidivrs
icebp
loopne
sbb
dec
test
outsl
mov
push
inc
in
sahf
mov
loope
pop
jg
inc
mov
mov
lods
mov
fisttpll
outsl
mov
xlat
lock
mov
in
imul
movsl
mov
pop
xchg
lods
std
repnz
fnstcw
pop
sbb
loope
clc
pop
dec
mov
mov
subl
pop
out
fstpt
cld
into
loope
aas
inc
jge
out
rclb
ljmp
mov
stos
sbb
mov
inc
pop
push
jae
call
pop
and
je
pop
sub
cmc
jp
jnp
lds
mov
call
cmpsl
inc
out
dec
leave
nop
and
mov
ljmp
test
data16
sti
icebp
cmp
inc
push
jle
push
pop
xchg
mov
daa
lcall
ljmp
das
cs
mov
std
jecxz
pop
icebp
push
mov
pop
popa
jle
inc
cltd
fidivrs
xchg
scas
pop
inc
fbstp
pop
sub
dec
jge
icebp
jg
mov
pop
lret
nop
sub
pop
imul
add
in
mov
bound
pop
pop
sti
sub
je
mov
scas
idivb
jo
nop
mov
dec
icebp
cli
lods
insl
xchg
cld
xor
out
aaa
push
mov
ret
sbb
addr16
cmp
jmp
mov
pop
fstpt
fistps
and
mov
not
ficoml
sbb
das
lods
xchg
outsl
ljmp
pop
test
sahf
pop
lcall
lret
call
mov
jg
sahf
jge
lret
mov
xchg
cli
std
data16
jne
cmc
sub
call
daa
add
gs
dec
push
cs
sbb
pop
shr
out
dec
int3
shrl
hlt
popf
in
jb
push
push
popa
leave
gs
xor
movsb
ds
jo
mov
js
dec
aad
dec
sbb
adc
out
sbb
mov
insb
test
and
sahf
orl
cld
or
cmpsb
in
sub
pushf
and
pop
lcall
scas
cmc
ljmp
xchg
jmp
xchg
mov
jl
std
cmp
sbb
mov
pop
pop
std
insb
dec
decl
into
cmp
xor
in
hlt
idiv
bnd
pusha
pop
les
std
xchg
lods
jge
adc
mov
sub
jecxz
out
xchg
rorl
dec
clc
outsl
inc
mov
shll
cli
adc
mov
pop
jmp
aaa
into
jo
xchg
sub
std
std
pop
popf
mov
or
or
cmp
jle
jp
aad
xor
sbb
jo
loope
push
cltd
decl
xchg
insb
sbb
jecxz
pop
mov
pop
jmp
pop
fidivrl
xor
jge
jne
jecxz
scas
push
add
mov
stos
cmp
clc
cs
fists
cmc
fdivrl
cmp
mov
push
add
adc
push
in
scas
aad
cmp
dec
fists
adc
popl
pushl
cmp
jp
fdivrs
cmp
addr16
mov
sarb
cmp
lahf
sub
xchg
std
mov
mov
pusha
adc
lcall
cs
lcall
add
repnz
inc
inc
loop
shl
or
mov
outsl
into
ja
jne
or
jmp
sbb
xor
jns
dec
lds
ja
mov
and
lock
sub
aas
pushl
gs
iret
cmpl
std
sub
xchg
mov
test
jno
push
mov
fmul
aaa
loopne
ljmp
lret
mov
cmp
jno
adc
cmpsb
ss
pop
cmpsl
mov
subb
bnd
rorl
cmp
adc
pop
pop
test
jns
add
inc
jae
stos
out
sbb
arpl
outsl
push
jge
xor
mov
jecxz
mov
lods
sti
test
scas
pop
out
insl
scas
test
clc
stc
jle
cmpsl
sbb
out
xchg
xchg
je
pop
sti
movsl
addr16
inc
xor
notl
leave
adc
xlat
jmp
jmp
lea
jge
je
xlat
jg
sti
stos
popa
pop
call
push
out
fwait
ja
sub
dec
icebp
das
movsb
daa
out
push
jge
fsubs
mov
jl
fwait
jecxz
jno
xor
dec
pop
xchg
std
test
pushf
gs
push
sti
addb
std
or
push
inc
inc
cs
jmp
orl
stos
rclb
sub
int
lock
jne
addr16
pusha
ds
xlat
jge
sti
xor
outsb
cmpsb
sub
ja
mov
add
jecxz
jne
sub
sar
jmp
pop
sub
push
dec
es
mov
stc
scas
jbe
pushl
addr16
sbb
repz
push
xchg
rcll
push
inc
divl
out
pop
sbb
incb
mov
sbb
jle
scas
fdivrl
push
sti
cwtl
sti
dec
and
sti
lods
jecxz
fwait
in
aad
sub
push
push
mov
inc
stos
jg
pop
scas
jecxz
sub
xlat
out
mov
call
pop
stos
lret
std
mov
subb
addr16
fbstp
ja
mov
jg
mov
sub
and
addr16
ljmp
push
sti
pop
lods
mov
insb
sbb
cld
stc
mov
pop
lds
mov
pop
jmp
cmc
mov
cmpsb
clc
jle
imul
addr16
adc
jmp
idiv
cmp
adc
pusha
scas
push
mov
inc
or
mull
or
jbe
xchg
jecxz
ss
stos
jecxz
pop
cmp
inc
mov
bound
jo
out
popa
mov
cmpsb
add
icebp
mov
push
cmp
and
jmp
dec
cmpsl
subl
cmp
mov
outsb
mov
mov
fdivrl
jle
aad
pop
out
mov
pushl
stos
sar
mov
pushf
xor
pop
addb
xchg
push
pop
gs
pop
sub
cmpl
mov
cmc
xlat
dec
xchg
jl
mov
xchg
xor
in
jmp
jg
mov
mov
jo
repz
cli
pop
ja
mov
xor
daa
dec
vmwrite
outsl
dec
into
test
out
mov
mull
inc
jae
pop
lret
and
decl
outsl
sbb
jbe
inc
std
mov
mov
mov
push
or
cmp
sti
mov
mov
cmp
mov
aam
arpl
jge
mov
jbe
std
stc
mulb
pop
call
jb
jl
cld
pop
inc
add
mov
push
push
out
aam
repz
jmp
xchg
inc
cmp
mov
arpl
out
insb
sbb
xor
jmp
daa
std
rcrl
xchg
pop
push
sbbl
inc
cmpsb
add
mov
push
ret
lock
push
int3
int
mov
cmp
loopne
mov
call
adc
and
mov
incl
cmpsb
ret
sti
and
ja
adc
sbb
xchg
mov
inc
cltd
sub
repz
cmp
jecxz
xor
leave
test
ljmp
add
popf
popa
addr16
cwtl
call
xchg
xor
insb
fdivrl
push
push
adc
jno
add
std
mulb
sub
ficoml
mov
rcrl
stc
pop
in
sbb
lcall
xor
std
das
popf
iret
push
mov
jno
jne
decl
outsl
scas
lahf
push
jge
loopne
mov
jl
cld
push
mov
xchg
sbb
ja
outsb
insb
ss
or
mov
cwtl
mov
test
mov
mov
and
lret
pop
scas
inc
stos
cld
mov
sbb
jmp
cs
adc
mov
stc
iret
ja
sti
xchg
fnstsw
addr16
repz
mov
aad
jo
jle
rcr
rep
or
jecxz
sti
loop
lcall
pop
incl
pop
sbb
cmp
incl
inc
clc
cmpl
int
jo
mov
ret
push
std
pushl
pop
push
outsl
cmpsb
icebp
xor
mov
stos
mov
dec
sti
lret
aam
jmp
mov
pop
imul
xor
cs
xor
ds
mov
lods
xchg
mov
std
sbb
mov
std
test
stos
lds
call
lcall
mov
pop
sub
popf
scas
insl
les
je
ds
out
xchg
leave
mov
push
repz
pushf
push
je
pushf
xchg
stos
lret
inc
sub
pusha
sahf
out
jmp
inc
cs
add
jecxz
je
pop
cwtl
cmc
adc
mov
ret
scas
pop
and
mov
sar
mov
inc
mov
lcall
adc
push
out
push
pop
add
aad
xchg
dec
stos
jg
mov
mov
pop
and
sub
cmp
ljmp
out
push
push
test
out
mov
outsl
sub
xchg
arpl
add
js
sbb
xchg
lods
in
neg
negl
dec
test
test
ret
mov
cmp
lret
mov
sti
imul
fstpl
jno
xlat
pop
ljmp
test
pop
xor
fistpll
lods
mov
mov
fcomp
xchg
and
pop
lahf
enter
fsubrl
jmp
sub
xchg
xchg
jl
sub
cli
push
push
mov
jge
jnp
mov
sbb
rorl
gs
pop
ret
jge
shlb
jle
xor
insl
ljmp
push
push
fld
adc
dec
cmp
sub
xrelease
cmc
js
jg
push
lret
sti
scas
sti
dec
test
jp
daa
dec
mov
mov
lret
mov
jb
ljmp
jne
mov
leave
scas
pop
mov
cld
ds
outsl
xchg
jo
mov
loop
jno
in
pushf
cmp
sar
sbb
pop
iret
inc
ret
cmpsl
cmc
sbb
sbb
outsl
dec
pop
out
mov
mov
aad
clc
pop
ja
or
cld
cmp
xchg
sbb
push
push
sbb
dec
mov
fists
nop
cmp
out
clc
sub
lods
out
into
std
push
pop
jg
pop
mov
dec
scas
xchg
fiadds
push
call
sub
xlat
cmpsl
pushl
dec
fld
movsl
repnz
int
les
ffreep
ret
incl
popf
inc
lock
icebp
dec
decl
pop
fldcw
sarl
cmp
jp
xchg
aam
adc
mov
push
ljmp
cwtl
rcll
aas
pop
dec
jl
call
mull
cmp
in
sub
incl
out
sub
mov
push
mov
fisttpl
xchg
mov
sbb
xor
cmpl
mov
mov
pushl
adc
lcall
lea
clc
push
jb
mov
or
xchg
xor
sti
sub
pop
or
in
fcoms
ret
or
xchg
int3
push
mov
or
and
push
loop
shrb
pop
in
std
sub
xor
and
orl
enter
out
cs
sub
imul
inc
decl
xor
lcall
mov
jle
gs
ljmp
cmpsb
jnp
push
cmp
mov
stos
test
inc
cmpsl
dec
cmp
stos
jmp
test
xor
mov
and
jo
hlt
dec
insb
jecxz
mov
jne
jno
xchg
popf
add
out
ss
jge
push
arpl
sar
ficompl
cmpsl
testl
lahf
jge
adc
loopne
dec
adc
mov
jmp
fimull
jmp
inc
es
int3
or
es
mov
cltd
xchg
sti
lds
cmp
mov
mov
shll
cmp
adc
or
jp
popf
cmc
sahf
fs
mov
clc
dec
pop
iret
mov
jmp
in
gs
lcall
clc
dec
dec
js
mov
sub
jecxz
and
call
nop
sub
adc
outsb
jp
inc
andl
fnstenv
pop
adc
mov
call
repnz
pushl
push
mov
sti
scas
pop
adc
pushf
sti
ja
lds
push
sahf
ret
push
std
push
and
movsb
push
lcall
xor
dec
loope
iret
fsts
push
mov
std
inc
repz
dec
jl
jg
xlat
jle
adc
cmp
adc
popa
dec
mov
aas
cmpsb
hlt
outsb
fisttpll
inc
movsb
add
mov
mov
mov
call
adc
ja
lret
xchg
xlat
out
pop
aaa
jbe
xor
cmp
icebp
add
dec
test
dec
nop
mov
ds
popw
and
test
dec
inc
jne
insb
out
pop
fnstsw
aad
xchg
dec
add
fwait
lret
mov
loop
scas
test
sbb
pop
jmp
orl
aad
cmp
cmp
sub
mov
aaa
cmpsb
data16
or
pushl
mov
mov
je
xor
dec
mov
js
jecxz
ds
sub
int
call
pop
ja
out
xchg
icebp
pop
sbb
jne
adc
jae
fdivrp
popf
mov
jg
add
insb
test
sub
inc
jne
jb
sti
rcrl
sti
loopne,pt
pop
insl
cld
sti
mov
ds
test
aas
push
inc
push
jg
sub
mov
ss
pop
ljmp
jne
add
push
imul
and
fstp
jecxz
ret
aas
xor
add
cs
push
insb
idivl
jns
inc
in
adc
aad
lret
imul
sub
dec
inc
or
add
ljmp
mov
in
adc
inc
jge
rcll
sti
sti
inc
stos
idivl
stos
popa
call
mov
xlat
loopne
cld
mov
sbb
xchg
inc
push
decl
and
mull
fwait
lret
rclb
arpl
xor
sti
cwtl
enter
cmp
stos
mov
dec
jb
xchg
fcoms
adc
mov
push
jno
repz
pushf
iret
and
or
jle
adc
ret
rcr
test
dec
clc
xor
pop
jp
ss
push
cld
sti
jge
add
ror
mov
or
jecxz
rcll
pop
gs
lcall
xor
por
jl
outsb
mov
out
lods
arpl
push
adc
pop
push
mov
add
dec
lods
mov
sti
sub
nop
jle
fisubl
adc
ljmp
xor
jns
stos
popa
incl
mov
cmp
fwait
icebp
dec
pop
xlat
jp
xchg
pop
xorb
sbb
push
js
cli
jge
out
push
bnd
pop
add
mov
cwtl
stc
nop
cmp
xlat
dec
fs
add
lret
repz
jno
mov
clc
decl
in
adc
xor
sub
jmp
pop
xor
jp
sarl
negl
mov
insl
jl
std
fisubl
cltd
sti
jmp
sbb
ljmp
inc
lret
pop
popf
bnd
xchg
pop
mov
dec
xchg
jbe
or
xlat
add
mov
cli
cmpsb
repnz
pop
dec
imul
sti
call
shl
xchg
xchg
mov
mov
stc
outsb
daa
pop
jno
in
outsl
dec
pushl
popl
sub
sbb
mov
lahf
pop
or
repz
sbbb
lea
add
add
ret
negb
outsb
sti
int
sar
outsl
lret
mov
sbb
sar
adc
xchg
comiss
push
in
decl
cmp
dec
int
clc
sbb
das
mov
call
xor
and
aas
ror
cmp
in
sti
arpl
mov
xor
jns
mov
cli
pop
adc
sbb
loope
xlat
cmpsl
orl
xchg
adc
imul
jecxz
lds
les
sub
lcall
mov
pop
sbb
ljmp
sub
sbb
call
and
and
fcmovnu
sub
or
dec
add
pusha
and
cmc
push
jmp
sub
push
fdivr
inc
sub
pop
dec
jne
negb
test
adc
int3
mov
jl
cltd
sbb
mov
push
inc
das
dec
mov
adc
ljmp
std
push
lcall
mov
popa
leave
arpl
fisttps
xor
cmp
mov
pop
push
cltd
xchg
ljmp
xchg
ljmp
mov
mov
inc
sbb
adc
clc
jae
jne
pop
daa
pop
pop
out
cld
lret
test
xchg
sub
mov
fstpl
imul
or
test
adc
in
mov
mov
cmpsl
inc
mov
sbb
outsl
sbb
movsl
xor
cmp
incl
mov
mov
in
fsincos
sbb
jmp
mov
adc
mov
pusha
pop
push
jl
fadds
sti
pop
dec
in
jae
jle
cmp
jmp
rcll
scas
cmp
lahf
mov
les
push
xchg
lret
divl
in
jb
lret
test
jnp
cld
xchg
pop
fidivrs
insb
jne
push
pushf
fwait
pmulhw
xor
sbb
fists
jmp
outsl
adc
push
ret
gs
mov
mov
mov
mov
lcall
jg
push
cmp
xchg
mov
sahf
jmp
fidivs
push
push
nop
pop
pushl
pop
mov
aas
out
jae
movl
mov
dec
fldt
push
ljmp
push
add
mov
xchg
movl
std
push
jge
fwait
lock
mov
movsl
ret
jno
dec
hlt
jg
in
aaa
inc
sti
dec
inc
cmp
stc
sbb
lcall
jo
dec
mov
rcr
lods
decl
lea
xor
fisttpl
stos
scas
dec
push
adc
sbb
xor
sti
pop
loop
add
fdivs
jecxz
push
adc
andb
out
mov
lcall
mov
aam
shrb
cs
call
mov
jae
cmp
stc
call
add
dec
cmp
mov
insl
lcall
in
xor
ds
mov
int
inc
ljmp
cmp
lcall
push
sbb
cs
pushl
jge
std
or
cmp
int
sub
rcrl
mov
mov
mov
adc
fs
int
into
lods
popf
mov
jnp
xchg
shr
out
push
in
imull
imul
jg
mov
dec
xlat
pop
pop
rcr
dec
push
push
pop
and
fcoms
mov
dec
mov
cs
inc
stc
mov
xchg
popf
jg
ljmp
lahf
dec
es
int
adc
jp
das
insl
lods
jl
enter
cmp
outsl
sub
cmp
push
push
pop
inc
xor
nop
mov
out
mov
cmp
jmp
push
mov
add
fs
mov
cld
xchg
arpl
idivl
dec
repz
fimull
add
and
push
add
mov
push
fs
prefetch
or
push
pop
cmp
rolb
pop
sbb
xchg
mov
sbb
pushf
mov
cmp
jbe
rclb
pop
cwtl
sar
insb
hlt
fwait
js
call
dec
test
fstpt
or
dec
test
jb
incl
ja
popa
lcall
xchg
mov
push
inc
decl
or
cmp
call
gs
push
jmp
pop
push
mov
std
and
lcall
std
xchg
mov
xlat
lret
sub
sub
repz
leave
sbb
sbb
and
xchg
jge
cmpsb
test
mov
jge
addr16
sub
call
cwtl
mov
mov
in
inc
jnp
mov
push
cs
pop
lcall
or
cmp
iret
ret
and
leave
jmp
mov
push
jne
push
repz
mov
sub
mov
mov
movl
leave
int3
sbb
test
mov
mov
sub
push
mov
shl
or
jmp
insb
ret
ds
das
push
dec
dec
add
pop
mov
sarl
pushl
repz
fwait
mov
jo
pop
inc
cwtl
movsb
sti
or
cmp
mov
jl
lret
incl
cmp
cli
jl
call
clts
cld
imul
jl
lret
call
push
mov
clc
test
pop
sbb
cmp
or
fistpl
mov
cmp
mov
pop
or
orb
pushl
or
mov
cmp
jmp
andl
ljmp
cmp
lahf
decl
shl
cmp
add
enter
dec
inc
lcall
scas
mov
addr16
call
inc
ja
decl
dec
in
std
divl
push
and
lahf
stc
pop
or
data16
mov
ficoms
jne
lcall
mov
mov
or
jmp
and
aas
in
pushf
xchg
sahf
xor
push
fsubs
test
mov
jecxz
out
sub
mov
decl
inc
push
pop
call
mov
sbb
aaa
lock
rol
inc
sub
call
jns
shl
inc
mov
test
inc
add
std
inc
stos
jmp
and
ljmp
and
je
mov
std
popa
push
mov
scas
int3
cmp
out
cmpsl
xchg
std
je
and
dec
std
add
dec
pushf
cmp
jle
dec
inc
loopne
jl
addr16
mov
mov
adc
fbld
add
mov
mov
push
add
mov
xor
sbb
sti
xor
lcall
cmpsb
mov
addr16
pop
lahf
incl
enter
loop
lret
xchg
movsl
pop
mov
imul
stos
ud0
push
jns
stos
aaa
push
cmp
xor
cli
dec
push
pushl
mov
mov
and
out
out
popf
call
push
shll
pop
sbb
ljmp
lods
testl
leave
pop
jns
mov
xor
jecxz
out
jmp
aas
test
mov
jb
xrelease
mov
repz
xchg
dec
dec
jecxz
sub
ljmp
sbb
jnp
pushl
sti
jb
mov
lahf
push
pushf
inc
xchg
in
xor
inc
push
push
mov
ret
dec
js
mov
mov
pop
jmp
xchg
test
inc
negl
sub
sti
sbb
stos
test
lahf
ds
fnstsw
jne
fs
pop
rcrl
daa
loop
xchg
jecxz
xor
stos
mov
add
push
mov
sbb
in
lcall
mov
sti
es
mov
pop
lcall
inc
inc
sti
ss
push
sbbb
inc
outsb
test
push
std
mov
rolb
lods
pop
fs
pop
cmpsl
or
in
mov
add
add
call
and
icebp
sbb
in
icebp
call
pop
test
repz
ljmp
das
sbb
insl
and
aam
idiv
call
mov
jge
inc
push
aaa
mov
decl
enter
xlat
cld
sarl
faddl
std
fidivl
repnz
push
pop
dec
lret
pop
sti
adc
repz
xchg
cs
push
frstor
mov
into
pushf
mov
pop
out
lret
jae
incl
das
xchg
sti
pop
jnp
repnz
sbb
insl
in
sub
nop
pushl
out
jg
sbb
dec
jge
dec
ret
mov
jecxz
fs
inc
jge
jle
mov
and
mov
push
rorb
pushf
addl
xchg
add
push
adc
popl
mov
loopne
dec
xor
sub
pushl
and
and
clc
out
push
outsb
jl
mov
or
mov
gs
and
arpl
cwtl
cld
mov
push
imul
popf
lcall
fiaddl
sub
ljmp
das
out
std
jmp
cs
std
cli
insb
sarb
pushl
fldcw
cmp
pop
popa
std
call
cmp
mov
jb
std
fiaddl
repz
cwtl
sti
sbb
shr
cltd
ljmp
scas
sub
push
mov
jle
ret
je
push
jecxz
ljmp
sbb
jp
aas
sbb
jae
push
test
and
cld
dec
movsb
ret
nop
push
jg
pusha
outsb
dec
pop
aas
mov
mov
pop
leave
inc
pop
fstl
ds
dec
mov
aad
stos
std
pop
insl
int3
fdivrp
popa
cltd
add
scas
lea
mov
mov
push
cmp
int3
repz
dec
add
pop
push
ljmp
jecxz
jae
out
arpl
mov
inc
out
out
adc
je
std
and
jae
or
cmp
test
les
jge
outsl
aaa
addr16
push
inc
and
xchg
mov
pushf
loop
mov
out
inc
jp
imul
popf
pushl
in
jmp
lret
ret
fstpl
mov
pop
ja
std
insl
cmp
das
or
sti
pushl
popf
pop
sub
inc
dec
aaa
mov
pop
ljmp
bswap
xchg
jo
ds
sub
push
mov
decl
xor
sbb
mov
ljmp
pop
nop
jecxz
push
mov
mov
ljmp
mov
subb
dec
jecxz
push
lods
sub
lods
push
mov
daa
rdtsc
sarb
aad
pop
out
popf
cmp
mov
xchg
clc
add
testl
pushf
leave
rorb
inc
cmp
cmpb
mov
mov
jmp
std
fmull
dec
std
aad
fnstsw
mov
jp
paddq
or
ret
out
aas
gs
mov
cmpsb
lds
xchg
aaa
lahf
pushf
je
div
jo
shlb
arpl
lret
out
call
xor
decl
not
enter
push
ljmp
sbbl
out
adc
push
push
ret
mov
mov
cld
hlt
fnstsw
sar
xchg
roll
cli
push
gs
popa
pop
aad
sub
lock
push
lcall
in
addr16
mov
sbb
pop
scas
repz
imul
es
lret
fs
push
pushl
jno
cwtl
fistps
sbb
adc
test
das
pop
cmc
std
adc
add
push
call
out
into
fmul
cld
xchg
mov
sar
mov
lret
or
inc
imul
push
fs
and
push
and
jns
repz
sbb
cmp
setnp
push
and
mov
enter
jg
movsb
cltd
push
pop
ljmp
test
jae
in
decl
jbe
mov
adc
arpl
orl
and
xor
sar
jns
jg
scas
add
cmc
iret
fdivrp
jno
mov
icebp
sbb
or
sub
inc
adc
stos
mov
xor
loope
inc
adc
and
xchg
insl
sub
addr16
mov
pop
sbb
dec
pop
adc
shlb
mov
inc
mov
xchg
stos
jmp
inc
adc
lock
jp
clc
push
sbb
stc
inc
mov
xchg
mov
js
mov
or
mov
adc
mov
ljmp
shl
into
daa
aas
fs
inc
push
cmc
fistpl
lcall
cmp
pusha
incl
push
mov
shll
ret
xor
pop
adc
cmp
mov
xor
sti
push
mov
dec
aam
jne
test
leave
sbbl
aas
ss
lcall
inc
push
in
xchg
xor
repz
pop
lods
mov
fstl
or
pushl
repnz
mov
cmp
movl
add
lods
sbb
push
mov
push
xchg
repnz
mov
sbb
inc
xor
out
and
cmpps
mov
cli
lret
adc
in
pop
lock
sbb
mov
sti
adc
jp
insb
xchg
mov
ja
ljmp
lret
pop
mov
mov
scas
pop
xchg
test
dec
add
ljmp
iret
push
adc
call
xor
and
adc
pop
rorb
pop
or
add
dec
inc
ds
repnz
mov
insb
cs
outsb
dec
gs
daa
push
cltd
sbb
insb
addl
cmpsl
loop
jns
sbb
icebp
es
xorb
mov
int
sbb
out
inc
mov
pop
out
mov
jecxz
lea
divl
jle
aam
int
mov
sub
loop
fmull
jb
fcmovne
jmp
repz
fs
popf
mov
rol
xor
cmp
lods
mov
mov
push
adc
decl
out
cmp
push
pop
fsub
jns
mov
xchg
xchg
dec
insl
cmp
pop
push
jmp
inc
repnz
out
fxch
pop
int
repz
mov
cmp
cmp
aam
jns
imul
jp
fisubl
repz
dec
and
pushf
iret
rep
xor
enter
test
call
sub
push
xchg
jo
mov
pop
dec
sbb
into
fs
decl
jg
xchg
mov
xor
pop
inc
cwtl
xchg
hlt
and
repz
mov
or
adc
and
shll
movsb
lcall
adc
push
call
mov
add
xor
push
out
scas
adc
stos
scas
mov
adc
jl
xor
mov
dec
jae
or
or
pop
mov
lcall
sub
daa
pushl
repz
icebp
in
add
inc
fstp
or
jecxz
into
les
loope
inc
jmp
xchg
jecxz
inc
jne
mov
xchg
xor
dec
jb
faddl
stos
xchg
lea
cmp
cmp
adc
call
pop
inc
add
jmp
stc
movsb
add
movsl
sub
scas
and
fadds
shll
movsl
pop
addr16
ja
xor
rorl
adc
mov
inc
das
mov
cwtl
iret
jl
inc
mov
mov
es
es
cmp
pop
pop
call
je
mov
xchg
stos
add
movl
pushf
or
incl
xor
idivb
xchg
mov
pop
cld
cmc
xchg
dec
push
rorl
out
rol
stc
sbb
sub
in
mov
int3
sti
push
mov
mov
int3
cmc
pop
xor
jmp
add
ljmp
xor
in
int3
pop
and
fnstsw
cmp
and
jmp
push
clc
push
cmpsl
test
sti
ret
mov
mov
xchg
rorl
cmp
pop
pushl
notl
add
sbb
adc
into
imul
ret
cmp
or
bound
mov
sbb
mov
sbb
aam
rorb
inc
pop
adc
pop
pop
push
jmp
mov
xchg
dec
iret
jmp
jbe
test
adc
fwait
ljmp
sti
out
loope
mov
jbe
and
pop
out
mov
aad
arpl
lret
js
rorb
mov
stc
adc
or
scas
cs
pop
sbbb
aam
insl
dec
enter
sbb
lds
andl
popf
pop
sub
iret
int
cmp
ret
test
jb
jg
test
dec
jno
push
ljmp
sbb
nop
repnz
sti
xchg
adc
dec
cmp
jecxz
pop
sub
aas
stos
out
cmpsl
iret
xor
or
loop
xchg
xchg
daa
adc
jecxz
mov
and
lods
repz
mov
cmp
dec
mov
pop
jl
addr16
and
pop
scas
push
mov
jle
ja
and
call
addr16
sti
lret
inc
js
into
outsb
outsl
sbb
scas
or
call
xchg
aas
and
jmp
mov
cmp
loopne
lahf
icebp
mov
or
pop
mov
call
outsl
inc
jp
scas
decl
jne
insb
cmp
cmp
out
in
iret
sbb
adc
ret
call
add
out
scas
xor
push
sti
fisttpl
adc
adc
addr16
sub
sti
jg
jae
repz
and
cmp
imull
sub
xchg
jle
adc
xchg
fisttpl
mov
fadds
pop
imul
pushl
call
aam
aad
sub
into
std
ds
clc
mov
xlat
jnp
pop
pushf
dec
push
mov
fisttpl
mov
jle
movsl
mov
fwait
jno
jl
movsb
sar
popf
cs
lret
push
jmp
push
das
popf
jbe
mov
jmp
aaa
mov
out
xlat
ficoms
pusha
sbb
dec
lret
les
mov
sbb
inc
arpl
mov
jp
fs
xchg
mov
loope
xchg
pushl
lret
insb
xchg
mov
sbb
mov
ffree
ja,pt
stos
ljmp
xchg
imul
mov
frstor
std
xor
mov
out
jl
pop
inc
xlat
add
repz
push
mov
mov
mov
sbb
xchg
insb
xor
out
int
jb
jmp
sti
cs
cmp
inc
pop
fildll
sub
mov
jmp
rorl
fdivrl
incl
cmpsb
mov
lcall
testb
fsts
cltd
jle
gs
push
lea
sti
mov
xchg
test
mov
aas
cli
cld
xor
xchg
jecxz
jmp
ret
in
int
cmc
lds
mov
jecxz
xor
cmp
jo
or
stos
jno
ljmp
xor
xchg
loopne
jns
out
jl
dec
sub
out
pop
jns
lret
out
inc
mov
and
incl
cwtl
mov
call
mov
call
push
aad
sti
ret
cmp
xchg
repz
testb
sub
adc
dec
mov
inc
jge
push
cmp
xchg
mov
mov
dec
xlat
cltd
bound
xor
sbb
cwtl
in
decl
dec
sti
cmpsb
adc
cs
jbe
incl
int3
movsl
scas
ret
or
gs
mov
popf
cmovle
dec
mov
lea
rcrl
les
inc
mov
aam
jmp
cmp
or
jae
popa
lahf
mov
inc
add
sub
sahf
inc
lock
mov
push
int3
mov
enter
cs
pop
dec
lahf
jle
fs
scas
in
jmp
cmpsb
mov
les
orl
dec
pop
ljmp
je
fnstsw
fsubrp
fs
push
cs
js
jg
cmc
not
mov
or
jo
jmp
in
cmc
jb
or
add
pop
cwtl
outsb
sahf
inc
fninit
sbb
iret
dec
loope
icebp
pushl
out
mov
jl
push
jge
adc
or
sub
push
jge
decb
imull
cs
inc
mov
sbb
subb
mov
pushl
shr
ljmp
push
push
mov
stc
inc
cmp
jge
call
setbe
std
stos
jne
xchg
ds
pop
lcall
push
es
repnz
ss
pushl
fwait
add
mov
lcall
mov
lea
xor
lock
iret
jo
or
cmp
cmovns
sub
shrl
xor
jle
mov
xchg
divl
xchg
mov
add
sub
mov
stos
out
mov
aad
push
das
mov
int
fmuls
jle
mov
cli
adc
inc
jecxz
test
push
add
mov
iret
iret
pushf
call
push
insb
push
xchg
repnz
cmp
xchg
je
mov
inc
add
leave
decl
mov
mov
sub
std
inc
inc
sbb
xchg
call
adc
in
std
sarl
cmp
cmpsl
add
jge
lahf
lcall
pop
sahf
cmp
loopne
repnz
dec
inc
call
popa
cmc
lods
lcall
sbb
mov
iret
mov
lds
and
mov
addr16
mov
push
addr16
dec
and
pop
icebp
lock
fisubrs
call
push
shrl
adc
mov
test
fmuls
cmpsb
mov
adc
clc
jae
xchg
rcrl
bound
jbe
in
cmp
and
aas
lcall
xor
mov
fcmovne
movsl
jmp
scas
stc
mov
sub
out
insb
add
int
incl
fs
xrelease
stos
pop
es
sub
int3
pusha
jbe
dec
pop
pushl
push
out
xchg
pop
inc
pop
lret
andl
jbe
js
lcall
inc
fisttpl
cmp
arpl
fsubr
cwtl
lahf
sbb
insl
and
and
pop
push
scas
sbb
loopne
enter
sti
repnz
push
dec
int
sub
jb
inc
aam
jge
insb
cmp
pop
ds
cmp
test
scas
mov
jmp
jg
xchg
fisubrs
ds
ljmp
adc
jmp
cmp
shrl
cltd
jbe
movsl
mov
std
in
push
jmp
mov
lea
adc
mov
mov
fwait
jo
and
adc
repz
or
nop
fs
sub
subb
popa
xchg
inc
mov
dec
repz
aaa
in
out
push
adc
sbb
dec
inc
xchg
pop
xor
call
pop
fwait
arpl
cmpsl
mov
xchg
aad
out
movsb
and
pop
xchg
xchg
dec
jl
sub
stos
jg
call
push
sbb
cmp
xchg
in
insl
pop
dec
dec
sarb
sbb
ret
sbb
jp
xchg
xor
mov
orl
sub
pop
sbb
push
dec
arpl
rcrl
sbb
sti
loop
cwtl
sub
push
jbe
xchg
lcall
and
push
es
repnz
mov
cmpsl
pop
mov
xor
cmp
int
cld
out
out
dec
push
dec
push
cwtl
jae
and
adc
jns
cmpsb
inc
aad
out
nop
leave
cmc
adc
std
xchg
cmp
out
outsl
pop
mov
sub
jnp
xor
jbe
lds
mov
test
mov
pushw
addr16
cmp
cmpb
inc
decl
mov
cmp
xchg
dec
call
sti
push
test
inc
or
push
dec
and
xor
in
scas
xor
cmp
leave
dec
push
inc
nop
sub
lods
call
je
xchg
mov
jb
rclb
sar
std
and
pop
popf
cmp
push
xchg
notb
arpl
je
repnz
add
pushl
mov
aaa
adc
jp
rorl
and
addr16
inc
sub
ret
pop
sub
xchg
pop
push
imul
mov
mov
in
push
mov
loopne
repnz
fnsave
mov
sti
xor
ss
addr16
decl
xchg
fstl
mov
lcall
lds
adc
fs
mov
dec
out
cmp
cmp
cmpsl
mov
clc
jp
jge
negb
pop
cmpsb
in
jecxz
mov
dec
sets
popa
lret
xlat
xor
xchg
inc
cmp
lcall
jns
add
jl
mov
inc
adc
and
xor
test
decl
push
dec
jnp
ret
push
inc
mov
mov
mov
test
sub
sub
aas
sub
int
mov
ds
xor
cwtl
dec
sbb
push
jne
push
pop
cli
push
pop
cmpb
mov
loopne
pop
stos
or
rcll
inc
cld
ljmp
xchg
push
push
ds
xchg
push
rcr
stos
sbb
js
les
std
fld
jp
movsl
dec
cmpsl
jmp
and
add
stc
sti
jecxz
adc
xchg
inc
popa
jne
out
cs
dec
jo
xor
gs
rcl
xchg
cmc
in
adc
lret
xchg
jmp
or
mov
scas
push
ud0
ds
sahf
ljmp
pusha
jb
pop
pushl
cwtl
adc
out
outsb
into
nop
jg
xchg
popa
out
cmpsb
je
ljmp
pop
into
fs
push
pop
std
call
cmc
jno
push
pop
inc
or
enter
sub
nop
stc
pop
dec
or
mov
incl
xchg
jb
and
add
cmp
and
int
pop
xor
ja
aaa
mov
cmp
movsb
shl
jmp
lds
stos
sub
push
rep
gs
cs
fucomp
mov
lods
adc
orl
or
cs
cmp
enter
mov
std
xchg
jbe
scas
cmc
inc
leave
mov
outsl
or
repnz
mov
in
mov
adc
cld
mov
lret
ljmp
out
nop
dec
lods
std
decw
lock
jae
xchg
repz
dec
out
loopne
jge
push
std
stc
sahf
jecxz
mov
pushf
jno
lcall
pop
out
cmpl
sti
jle
mov
sub
pop
lret
xorl
xchg
decl
data16
adc
jno
pushl
push
xchg
rorl
std
repz
mov
and
int3
jecxz
mov
adc
mov
push
ljmp
sbb
adc
adc
pop
inc
loope
or
out
outsb
push
lods
adc
sub
testb
lret
lea
sub
push
gs
insb
dec
inc
adc
xor
adc
jo
lock
sub
daa
ds
push
test
jb
cld
test
sbb
or
call
mov
pop
outsb
mov
cmp
dec
arpl
sub
repz
fcmovu
xor
fcomi
inc
out
mov
pushl
pop
lcall
sahf
flds
jecxz
cld
push
pusha
jg
lods
pop
jo
repz
lds
dec
ret
ret
cmp
mov
cmp
mov
call
mov
sti
push
jg
fwait
mov
lahf
pop
rcll
cmp
stos
and
pop
mov
push
cmpsl
daa
stos
stc
sbb
std
and
pop
test
push
mov
lds
cmp
cs
iret
push
mov
clc
int
ljmp
popa
push
jne
xlat
sti
and
not
outsl
push
fsubrp
scas
popw
mov
pop
out
aas
je
xchg
push
jge
dec
mov
scas
jno
idivb
popf
lahf
cmp
lods
and
jp
xchg
mov
or
mov
repz
ficomps
jle
pop
mov
scas
jmp
ficompl
adc
jecxz
cmp
aaa
cli
jne
push
xchg
inc
push
testl
lahf
mov
lea
das
incl
out
fisttpl
outsb
jmp
adc
cli
xlat
mov
inc
test
pop
js
ljmp
mov
fs
adc
cld
pop
aad
test
push
incb
cs
fisttpl
ds
addr16
push
dec
lret
xchg
and
jge
mov
mov
in
cld
movsb
push
sub
mov
pop
fimull
adc
in
mov
and
jns
test
sbb
lods
mov
sti
mov
js
inc
cld
hlt
pop
out
mov
or
jne
outsl
xchg
out
std
dec
inc
movsb
push
lea
out
mov
jg
mov
fldt
ljmp
daa
mov
ficomps
divl
std
addr16
mov
jg
pusha
sub
inc
ljmp
leave
mov
sbb
cmp
lods
jge
in
sub
mov
mov
sub
cld
mov
cli
repz
out
sbb
test
into
addr16
mov
sti
adc
in
fstpt
shrl
pop
sti
dec
inc
ds
adc
cmp
mov
call
std
testl
loopne
aad
xor
in
scas
call
pop
mulb
mov
inc
mov
lods
sub
sub
cld
pop
mov
fistl
sti
aam
xor
dec
les
pushl
pop
xor
aad
mov
and
scas
mov
sti
std
into
test
lret
addr16
sti
jns
mov
sub
roll
inc
out
sbb
shll
mov
scas
scas
jae
xchg
mov
enter
outsl
jbe
nop
pop
xchg
cmp
rep
bound
ljmp
sti
ret
and
xor
push
jns
idivb
fdiv
insb
cmp
stc
or
push
xchg
es
dec
in
dec
push
roll
lock
enter
xor
cmp
das
mov
out
outsb
popf
divl
imul
jl
out
dec
lcall
clc
adc
popa
sarl
jle
cwtl
inc
outsb
stc
lds
xlat
mov
ds
pop
addr16
ljmp
cmpsl
int3
hlt
sbb
adc
cmp
lcall
adc
inc
enter
mov
ljmp
rcl
out
cmpsb
test
cmc
ret
dec
js
add
lods
test
cmpsl
pop
out
cld
push
dec
pushl
pop
cmp
repnz
jmp
sti
sub
cmp
fisttpl
gs
sbb
xlat
pop
mov
sub
fwait
pop
out
mov
fstpt
mov
cmpsl
nop
jecxz
or
aam
sbb
mov
pop
insb
es
fstpt
iret
std
inc
rcl
mov
sahf
push
pop
or
jge
sti
jae
pop
ds
jmp
inc
inc
cltd
and
incl
jns
pushf
fldt
xchg
cmp
repz
mov
mov
push
mov
aad
call
mov
outsl
or
xchg
stc
pushl
xor
gs
pop
repz
std
push
jecxz
pop
sti
pop
jmp
jle
cmpsb
in
movl
pop
sbb
decl
xchg
push
mov
iret
inc
dec
sub
decl
imul
call
lods
test
in
jg
insb
aad
mov
cmp
pop
mov
int
jne
mov
push
pop
imul
lods
mov
fwait
adc
pushf
call
ficoms
and
sti
mov
mov
sub
sub
decl
jne
aam
rol
mov
insl
mov
jg
repz
loope
je
cs
int
xchg
or
or
mov
add
jne
xor
cli
iret
ljmp
jl
decl
repz
insb
pusha
sti
fldl
push
sbb
cmp
inc
iret
mov
pop
xlat
push
xor
or
jle
loopne
shll
cmpsb
repz
add
les
fistps
lahf
mov
pop
jg
aaa
mov
cmc
int3
mov
in
mov
bound
jle
lahf
sar
std
mov
ja
xchg
arpl
repz
scas
xchg
imul
mov
cmp
fwait
ja
xchg
aaa
mov
sub
xchg
dec
mov
jge
fwait
outsl
popf
xchg
mov
loope
mov
rep
iret
mov
lret
mov
add
cmpl
ljmp
jns
lret
and
fbld
jnp
stc
lahf
adcl
mov
jnp
pop
popf
sbb
xorl
lods
cwtl
shlb
adc
call
das
sbb
cmp
jmp
lods
arpl
sti
jae
rorl
jns
lahf
pop
fstpt
mov
cmpsl
ja
adc
xchg
jg
jmp
add
leave
ljmp
sti
push
sbb
push
int3
cmp
cmp
popa
push
cmpsb
mov
shll
jle
cmc
jnp
stc
xor
add
sub
push
lret
push
ret
xlat
aaa
mov
dec
std
mull
out
fwait
outsl
jg
add
leave
clc
jge
sbb
shll
and
cs
bound
aaa
outsb
mov
push
lcall
popf
fidivrs
push
in
cmp
es
es
in
decl
inc
cmp
outsl
rol
ret
mov
pop
ret
in
pop
mov
ja
pop
iret
mov
ret
scas
sti
xchg
stos
arpl
popf
or
or
sbb
out
mov
push
inc
xchg
insl
push
stos
jmp
lds
jmp
leave
and
xor
inc
mov
inc
pop
mov
mov
lret
mov
xchg
mov
lahf
std
stc
jg
lret
repnz
dec
lahf
out
xchg
xchg
dec
mov
and
or
jnp
int3
jp
inc
or
and
jmp
out
pop
imul
scas
push
xchg
icebp
pop
into
mov
ljmp
jg,pn
mov
xor
subl
dec
lods
inc
mov
inc
xor
pop
xor
inc
roll
jmp
push
cmp
leave
jl
jae
mov
mov
cs
rclb
jle
fdivrs
stc
popf
aaa
lcall
push
inc
stos
mov
mov
mov
stc
sbb
std
sbb
ss
decb
daa
mov
sarl
int3
mov
xor
push
push
int3
sti
pop
outsl
out
or
out
aaa
pop
jle
mov
notb
ss
cmp
imul
in
jecxz
mov
jmp
enter
fcoms
adc
rorb
xor
fdivrp
stc
cmp
cmpl
or
lret
pop
int3
pop
lcall
cmpsb
xchg
inc
es
dec
xchg
scas
arpl
cmpsl
jle
xchg
aas
sti
bound
push
pop
out
int3
fld
push
ret
fadds
xchg
and
in
fidivrs
sbb
fsub
nop
jmp
jl
cmc
jmp
mov
mov
pop
jno
mov
add
repnz
jge
aas
sub
xchg
insl
pushf
arpl
xor
ja
ss
cmpsl
sti
mov
mov
pop
xor
adc
std
mov
fidivl
sbb
sti
bound
lea
mov
jbe
jns
sub
or
repnz
and
and
mov
cld
cmpsl
subl
mov
and
mov
in
fimuls
es
cmp
call
orb
fcmovb
int3
ja
imul
std
frstor
xchg
pop
lahf
xchg
inc
xchg
or
xchg
aas
orb
cmp
mov
jle
jle
pop
pop
inc
fs
pop
xor
mov
int3
push
mov
mov
test
mov
mov
loop
adc
in
xchg
cld
cwtl
sti
sbb
adcb
es
int
popw
ret
cmpsb
jns
pushl
dec
fcmovu
pop
jecxz
cmc
push
loop
xchg
xlat
or
sub
test
loope
pop
mov
rcr
jnp
xlat
lcall
rol
lahf
xorl
sub
cmp
popl
movsb
xor
pop
fsubrs
bound
inc
mov
push
mov
icebp
daa
jg
dec
add
or
test
cmp
pushf
clc
repz
push
push
enter
push
xchg
aas
sbb
arpl
pop
jge
and
sub
scas
xorl
sbb
dec
mov
cltd
mov
adc
mov
pop
or
lret
pop
xlat
cld
jo
dec
dec
int
stos
orl
subb
pop
mov
test
jb
cltd
fwait
pop
divb
pushl
sbb
jmp
inc
aas
pushl
ljmp
jmp
sbb
pop
ja
mov
aas
out
push
out
cmp
mov
popa
ljmp
lret
mov
pop
cmpl
push
pop
sbb
push
jg
test
mull
pop
xlat
jbe
test
mov
notrack
mov
sbb
jp
or
gs
or
pop
xchg
jnp
ljmp
mov
in
lahf
addr16
popf
ss
mov
and
pushl
pusha
cmp
xor
xlat
stos
cmpsl
lahf
fstpt
repz
lret
mov
inc
jno
pop
and
out
push
xchg
popl
sub
fimuls
daa
jl
aaa
adc
out
rcll
in
mov
and
out
icebp
int3
fcompp
lcall
push
addr16
aaa
mov
add
cmp
jecxz
ds
dec
test
fwait
dec
cmpsl
xchg
gs
push
jnp
bswap
fisttpll
outsl
pop
adc
mov
addr16
cmc
imul
stc
push
mov
nop
mov
imul
xor
call
lret
xchg
pop
into
adc
out
fistpl
pop
stos
mov
jnp
je
mov
fwait
sbb
push
stc
lahf
mov
cwtl
jbe
ds
mov
mov
rorl
or
sti
mov
arpl
insb
push
and
jecxz
xor
stc
or
cs
iret
xchg
lret
pop
inc
aaa
scas
cmpl
adc
ficoms
pop
jecxz
addr16
outsl
ljmp
xlat
test
mov
dec
pop
dec
and
push
adc
lock
hlt
popf
xchg
jl
jmp
lock
adc
push
cmp
push
jae
add
sub
ja
mov
xlat
sbb
cmpsb
fwait
arpl
out
pop
into
pop
pop
ss
mov
push
clc
mov
mov
add
xor
push
repnz
push
out
test
dec
push
movsl
dec
rorb
repz
cmp
adc
push
xlat
out
rcll
ret
pushf
outsl
repnz
jg
mov
cmpsl
xchg
mov
add
addr16
or
clc
or
xor
jmp
pushf
dec
in
pusha
sbb
dec
sbb
fsub
mov
mov
and
jg
adc
push
into
pop
push
sbbl
sti
ss
and
pop
insl
int3
push
mov
adc
mov
aaa
cmpsb
jl
fnsave
xor
outsl
mov
xlat
dec
mov
ret
ds
pop
push
lcall
std
push
mov
aad
inc
adc
push
notb
xor
sbb
xor
das
pextrw
and
lret
std
out
mov
andl
negl
pop
mov
shl
fdivr
cmp
ljmp
jg
xor
xchg
xor
cmpsb
xchg
push
rolb
cld
aas
dec
pop
mov
push
out
xchg
jbe
arpl
sbb
xor
jb
inc
mov
addr16
xor
push
mov
out
stos
ja
in
sti
and
fldenv
clc
jge
mov
and
sbb
orl
data16
adc
daa
fimull
fnstsw
adc
call
or
mov
xchg
out
push
mov
pop
repnz
das
add
loope
xchg
pop
aas
and
xchg
pusha
sti
icebp
je
dec
cs
xlat
das
lods
pop
sbb
addr16
and
adc
jp
scas
sub
jmp
cmp
jnp
outsb
cmpsb
xchg
jae
cli
cld
mov
daa
sti
nop
jl
cmp
xor
push
addr16
xchg
ljmp
mov
xor
mov
notb
mov
jge
and
fisttpl
jne
std
pop
cmpsl
sub
push
pop
pop
pop
jecxz
and
orl
addr16
jbe
mov
frstor
push
push
pop
dec
out
cmp
jg
mov
scas
jle
dec
lcall
or
lods
rcll
push
aas
and
sbb
mov
outsl
pushf
pop
lahf
sbb
adc
sbb
fistpll
adc
dec
pop
sti
addr16
lret
inc
add
cli
sbb
std
mov
adcb
repnz
fidivrl
dec
xchg
std
push
jne
add
push
testl
mov
stc
cmp
dec
mov
sbb
jle
cmp
rdmsr
jmp
add
pop
cmp
iret
iret
mov
repz
mov
pushf
mov
fisubl
bound
jl
xchg
cmpsb
cmc
mov
dec
ja
jg
nop
inc
or
sub
je
call
push
inc
cmp
jnp
in
scas
jae
cmc
shrl
into
mov
jg
shll
insb
add
in
add
push
fwait
push
repz
xchg
leave
lret
mov
add
aaa
pop
mov
mov
add
xchg
jle
mov
xchg
test
pop
dec
add
sbb
xorl
xchg
jmp
inc
mov
insl
xchg
push
mov
stos
mov
clc
lret
cltd
jno
cmp
jl
mov
and
out
loop
pop
add
sbb
out
and
aaa
test
pop
jo
push
mov
add
mov
fisttpll
cmpsl
movsl
lret
xlat
jno
rorb
pop
adc
jmp
or
inc
std
cwtl
and
jge
add
rcrl
imul
out
ret
cs
cld
test
into
jns
mov
lret
jp
cmp
cmp
jg
push
mov
lcall
pushl
mov
cmp
cmpsl
jae
ss
scas
dec
mov
aas
inc
jnp
sub
clc
and
stos
jne
addr16
ret
inc
sbb
pop
mov
cmp
cmovbe
pop
dec
jg
pop
mov
nop
subl
push
inc
bound
das
mov
push
pop
repnz
loope
outsb
jns
lock
and
pop
mov
mov
fdivr
out
pop
xor
imul
out
jno
cmp
dec
jo
cmpsl
xchg
retw
mov
xchg
clc
xchg
pop
dec
aaa
and
jnp
sti
loopne
pushf
add
test
insb
pop
xchg
add
lock
cmp
pop
lds
add
xor
mov
je
cmp
fisttpll
pop
push
sbb
jae
mov
iret
repnz
xchg
dec
pushf
jg
jnp
inc
pop
rorb
cmp
xor
das
repnz
inc
xor
repnz
rcll
or
out
adc
and
dec
loop
rcrb
shrl
idiv
imul
jcxz
cmp
sarl
daa
mov
popa
xor
je
lock
test
fadd
mov
jmp
xor
adc
mov
pop
jge
pop
std
sub
out
lret
mov
js
pop
fdivrl
pop
movl
pushf
popf
mov
push
cmpb
mov
xor
sub
and
fdivl
adc
inc
addr16
test
xlat
arpl
xlat
fwait
mov
xorl
jl
mov
cmp
daa
bound
or
pop
in
push
rorl
movsb
ficompl
add
rcll
mov
jle
rcrl
je
lods
fwait
jge
dec
sub
sbb
adc
jle
fisubrs
jg
lret
dec
ljmp
aad
jle
daa
or
stc
sbb
leave
mov
cld
loopne
nop
lret
mov
push
push
jecxz
pop
mov
popf
push
add
jmp
mov
cld
pop
xchg
pop
cmp
lds
test
ljmp
inc
rcrl
jle
incl
aas
sub
inc
aad
das
sbb
stc
daa
pop
ret
fwait
std
or
xchg
test
sbb
sti
sahf
jle
mov
mov
jmp
xlat
xchg
mov
xchg
mov
mov
testl
jge
testl
repz
out
out
pop
inc
cmp
cwtl
mov
rcrb
movhlps
cmpsl
stos
imul
add
dec
mov
xchg
pop
fidivrl
mov
cmp
jge
jns
add
mov
lret
iret
mov
into
lcall
cmc
mov
cld
adc
pop
and
movsb
pop
cmp
les
popf
fstpt
xchg
jnp
int3
mov
stos
shl
jae
xlat
mov
into
jp
jmp
stos
mov
mov
mov
xor
dec
fsubrs
std
mov
divl
fmulp
mov
adc
inc
xor
add
jp
sub
jmp
mov
xor
jb
call
leave
and
rolb
repz
pop
call
pop
xor
add
enter
dec
fwait
mov
adc
pop
shrl
dec
sub
push
add
aas
push
ljmp
ds
jmp
daa
paddsb
js
pop
mov
sarl
sti
fisttps
jl
sbb
xlat
jle
jae
mov
jle
mov
cmp
fdivs
jp
clc
loopne
adc
mov
insb
and
add
mov
js
dec
lods
jl
jp
cmc
inc
movsb
cwtl
les
or
out
stc
loope
and
or
mov
adc
nop
pusha
mov
cmp
popf
pop
and
sbb
dec
aam
shrb
mov
pop
mov
outsl
fbld
out
or
test
mov
cmp
inc
int3
nop
je
lcall
mov
movsb
lcall
dec
mov
mov
jb
in
sbb
mov
ret
fucomp
test
dec
mov
mov
push
xchg
push
test
js
mulb
cld
pusha
pop
add
mov
and
dec
aas
call
mov
arpl
bound
push
lds
dec
sbb
mov
jmp
fildll
imul
xchg
add
scas
call
das
cmp
hlt
sbb
subl
pop
std
clc
scas
pop
push
ljmp
and
adc
stos
cs
pop
mov
or
mov
les
push
outsb
or
inc
mov
or
fucomip
jo
jg
mov
lock
lcall
out
jle
repz
gs
pop
push
sbb
nop
jmp
inc
add
cmp
adc
push
das
cmp
addr16
pop
mov
dec
cwtl
mov
pop
incl
xor
js
decl
mov
data16
ljmp
jns
push
jno
fdivrs
pop
pop
pushl
push
adc
mov
les
dec
pop
push
xor
jle
mov
clc
jl
clc
cwtl
mov
pushf
mov
idiv
mov
lds
xchg
sub
pushl
sub
into
or
cld
iret
jb
dec
pop
imulb
add
addr16
scas
addr16
dec
roll
enter
inc
cld
dec
cmp
rorb
push
gs
cs
cmp
lods
mov
bound
push
xchg
cmp
mov
in
xor
insl
aam
ficomps
sub
xchg
push
lods
dec
sbb
data16
leave
push
mov
sbb
fsubrl
lcall
pusha
inc
cltd
hlt
imul
mov
loopne
sti
or
int3
test
and
addr16
movsb
jecxz
cld
jl
out
popw
mov
push
jge
loop
shll
mov
sahf
cmp
jle
push
dec
rorb
ficomps
dec
or
incl
pop
cli
ljmp
insb
shl
in
push
mov
dec
jnp
and
mov
cli
push
mov
jae
jne
pop
outsl
jbe
dec
fs
jb
es
xorb
push
dec
jp
cmp
mov
fldt
lcall
cs
jb
mov
inc
pop
outsb
mov
or
test
lock
push
aad
ret
jns
mov
and
push
lods
push
cmp
dec
enter
scas
mov
aas
jle
sbb
xor
pop
incl
fs
mov
pushf
jl
out
out
cmp
cmp
mov
pushf
or
add
daa
add
and
aas
pop
ljmp
out
fidivrs
gs
adc
dec
sbb
mov
je
jl
xor
xor
push
inc
pop
jne
std
jb
sbb
into
pop
bound
and
sti
xchg
rorb
mov
mov
sbb
sub
sub
inc
pushf
and
push
mov
je
mov
lds
mov
jecxz
cmp
jg
or
je
loopne
dec
and
pusha
jns
insb
xor
aam
repz
loopne
push
jno
testl
std
mov
push
stos
fwait
arpl
jecxz
or
je
push
les
mov
lds
pusha
xor
inc
xchg
sub
push
dec
addr16
xchg
adc
pop
push
push
imul
sbb
inc
add
push
and
call
pop
scas
dec
xrelease
dec
mov
ret
cwtl
cmp
inc
psubq
bound
insb
dec
nop
fadds
inc
into
mov
js
imul
cmpsl
sbb
les
jne
jnp
adc
pop
or
bnd
inc
add
call
int
das
xchg
inc
shll
sbb
in
push
mov
mov
mov
pusha
jge
je
iret
mov
jp
test
mov
jno
lods
stc
scas
or
loop
lds
and
mov
xchg
pop
mov
mov
dec
inc
std
dec
gs
nop
into
inc
pop
jmp
add
loop
mov
in
shlb
dec
mov
jle
mov
into
call
sub
rclb
inc
add
scas
arpl
push
divl
ret
outsl
das
mov
icebp
leave
daa
movlps
dec
mov
pop
sub
enter
inc
mov
push
add
das
adc
std
dec
pop
fwait
inc
adc
sbbb
imul
cmpsl
jnp
jb
popf
aas
lahf
dec
adc
adc
sti
std
fistps
int
pop
iret
cltd
or
add
fistps
xorl
ret
ja
out
sti
outsl
lcall
out
or
add
mov
jecxz
cld
mov
jno
mov
push
and
pop
cld
popa
fiadds
push
mov
jge
fbld
cltd
filds
arpl
mov
ds
mov
filds
outsl
iret
add
push
out
fsubr
jg
add
je
pop
outsl
rep
mov
mov
sbb
pop
aas
xchg
inc
mov
xchg
scas
cmpsl
les
das
jnp
jg
aas
xchg
mov
loop
rcrb
jecxz
lcall
inc
stos
loope
scas
mov
pop
jle
xchg
out
std
sbb
mov
mov
lahf
arpl
in
aaa
inc
add
sahf
push
pushf
lcall
sar
popf
into
cmc
jcxz
or
adc
ret
mov
inc
ljmp
mov
push
addr16
jmp
jg
ds
aaa
jecxz
pop
push
hlt
aas
lock
incl
adc
data16
push
sahf
icebp
cmp
cld
dec
add
popa
jae
mov
ljmp
push
gs
leave
hlt
dec
imul
mov
aaa
xchg
aad
mov
dec
or
mov
or
aam
add
mov
insb
cli
into
cmp
repnz
out
jnp
fstpl
std
aaa
cmpsb
test
in
inc
jne
imul
arpl
add
adc
mov
pushl
push
xor
incl
loop
push
adcl
xor
pop
xchg
das
pop
mov
adc
aas
jle
sti
sbb
in
pop
ret
test
jge
push
pop
decb
fcomi
xchg
aas
movb
dec
push
and
adcb
xor
pop
xchg
xchg
jecxz
ja
mov
dec
push
orl
xchg
cmp
jp
adc
stos
pop
sub
xchg
in
lods
lret
mov
test
jbe
lahf
cli
fucomi
iret
xchg
mov
push
dec
sub
es
inc
sti
insl
lods
test
js
int3
cmp
aaa
xchg
outsl
decb
push
mov
scas
shrb
stos
sbb
jae
out
add
push
fwait
in
insl
std
adc
or
aad
out
push
cmpsl
notl
adc
jmp
sbb
jns
aaa
test
jae
inc
out
bound
insl
mov
jge
xor
das
daa
inc
cmp
jae
loop
sbb
mov
or
push
mov
jns
fs
pop
mov
subl
scas
push
xlat
jl
and
fcmovnb
inc
jmp
xor
sti
cli
cmp
fiadds
mov
add
and
dec
mov
pop
jnp
scas
fwait
xchg
jecxz
dec
test
and
mov
cmp
ss
cmp
sub
nop
xchg
repnz
and
jle
loop
mov
cmpsl
xchg
iret
mov
xlat
decl
add
pop
dec
mov
mov
aaa
lret
jmp
adc
sbb
scas
rorb
notb
aas
inc
incl
adc
lock
push
icebp
cmp
sbb
test
mov
lcall
outsl
pop
lahf
jg
pusha
mov
jne
shr
sbb
addl
ret
add
sbbl
push
or
jae
or
icebp
rol
xchg
jnp
movsl
sub
outsl
stc
daa
roll
xchg
sbb
xchg
lds
cld
pop
mov
and
sarb
testb
stos
cwtl
xlat
mov
xchg
int3
add
push
ds
adc
and
fildl
sahf
pop
sti
into
icebp
dec
scas
mov
xor
mov
iret
je
dec
adc
pop
adc
jmp
mov
cli
add
out
sub
in
pop
jp
mov
repnz
pop
pop
subl
stc
insb
xchg
push
int3
jae
push
incl
pop
inc
mov
xchg
pop
outsb
pop
or
daa
loop
aas
add
sbbb
ret
mov
iret
lods
pop
pand
xchg
movsl
test
das
in
jecxz
mov
jg
jnp
addb
call
hlt
daa
mov
pop
popa
or
and
pop
jae
psllw
adc
jp
popl
test
push
mov
add
push
out
sbb
pop
mov
imull
push
lock
dec
imul
inc
ljmp
cmpsb
mov
ljmp
inc
mov
cmpb
fcoml
sbb
xor
sbb
call
dec
sti
das
mov
dec
roll
fwait
cmpsl
lahf
push
aad
mov
push
add
fdivr
add
cmc
add
data16
std
adc
outsl
outsl
test
aam
sbb
inc
adc
shrb
pop
aad
jge
ljmp
adc
push
cwtl
sbb
imul
out
dec
cs
loop
and
jmp
and
or
pop
divl
pop
sub
ljmp
mov
clc
mov
decb
pushf
xchg
mov
jb
shl
cli
incb
stos
or
scas
insb
arpl
adc
push
cmpsb
test
insb
pop
in
xchg
jg
movsl
cld
enter
insb
addr16
mov
sbb
movlps
dec
fcompl
sbb
add
cmp
arpl
pop
push
sub
ss
sub
add
pop
mov
add
loop
call
pop
call
adc
mov
fwait
mov
cs
sbb
xor
sahf
dec
xor
cmp
dec
repnz
mov
cld
pop
inc
sbb
popf
into
lcall
cmp
mov
ret
stos
ja
dec
shll
stc
xor
pop
lods
jg
cmc
mov
cmpb
in
aam
jo
jecxz
pop
push
decb
jmp
out
pop
fs
add
lock
out
inc
push
stc
mov
sbb
test
or
cli
pushl
addr16
das
or
sbb
je
cmp
cli
xchg
shll
iret
cmc
cltd
sarl
scas
stos
out
xor
jnp
sub
sarb
and
std
in
xchg
mov
es
mov
push
push
cmp
sbb
popf
pushl
sub
inc
xor
idiv
shrb
adc
test
fwait
pop
out
jg
lcall
das
sub
sub
sbb
jg
cli
popa
ljmp
out
add
pop
orl
aam
or
cmp
aad
mov
push
mov
scas
inc
push
clc
int3
mov
lahf
jl
jnp
dec
call
mov
fs
sti
daa
sbb
mov
inc
push
addr16
xchg
test
dec
jmp
mov
jnp
sbbl
mulb
addr16
pop
sub
bswap
xchg
fnstenv
enter
aam
stc
jns
orl
cmpsb
sub
sbb
adc
cld
cwtl
fisubrl
hlt
orb
es
sti
inc
sub
dec
insb
aas
or
cmp
fisubrl
pop
adc
outsb
ret
xchg
pop
or
loop
mov
sti
mov
fcoml
add
xchg
or
adc
xchg
mov
std
cmp
aad
adc
out
pop
inc
fidivrs
cld
mov
jb
in
push
std
cmp
fisubs
mov
jp
les
mov
or
adc
jb
decb
pop
xchg
and
or
dec
test
out
jbe
call
stos
leave
dec
scas
icebp
jns
jle
sbb
lods
in
cwtl
clc
stos
aas
sub
loopne
jp
jmp
cmp
jge
mov
stc
negl
inc
out
cmp
sbb
cmpsl
inc
jmp
jo
dec
ss
inc
mov
mov
stos
xchg
mov
test
es
mov
jle
inc
loop
data16
fdivl
je
roll
sbb
imul
xor
std
pop
pop
test
dec
repz
inc
sub
popf
pusha
cmp
sub
adc
or
data16
mov
cld
out
clc
jl
dec
popf
cs
and
inc
inc
push
cmp
incl
movsb
inc
fcoms
pop
fldt
andl
push
daa
xchg
sbb
sarl
jb
mov
test
or
gs
xor
data16
adc
xchg
insb
inc
pop
notl
data16
mov
pop
and
pop
xorb
pop
js
inc
mov
dec
repz
cmp
mov
push
xor
cmp
mov
or
fbld
inc
imul
ljmp
jg
cmp
or
lods
insb
pop
and
test
add
ljmp
adc
movsl
push
sbb
into
adc
xchg
mov
jo
jae
dec
imul
iret
outsl
pushl
and
jne
ja
fmuls
aas
movaps
xor
inc
shrl
cmp
pusha
pop
pushf
or
std
std
sti
test
mov
out
in
jecxz
out
repz
adc
sti
cmp
pop
cs
aaa
iret
repz
into
jg
cmc
sahf
adc
jne
jg
xor
add
aam
clc
mov
subb
incl
jp
jg
cmpsl
arpl
adc
jp
jae
push
xchg
incl
fldl
push
std
shlb
push
shl
out
scas
push
jmp
lcall
xchg
sbbb
sarl
mov
jecxz
scas
ja
movl
fldt
out
sbbb
into
ret
and
mov
in
or
loop
dec
aaa
sbb
dec
jae
xchg
repnz
sub
cmp
push
mov
fwait
jg
sahf
sti
xlat
or
ret
xchg
test
jecxz
push
jl
push
je
iret
cmp
xor
sti
pop
setg
out
push
scas
xor
add
std
xchg
adc
xor
jecxz
stos
mov
test
fcmovnbe
iret
mov
popf
fsub
fidivl
in
push
or
lahf
xchg
outsb
pop
jle
xchg
mov
xchg
xor
jmp
push
xchg
rolb
shlb
cmp
ljmp
add
int3
sbb
lods
jl
xchg
xchg
mov
fcoml
or
cmpsl
addr16
pop
cli
ret
les
push
pop
cmp
ja
jp
cmp
pop
setbe
cmp
arpl
lret
cmp
push
addr16
pop
mov
xchg
faddp
ret
decb
je
cmc
pushf
push
cmp
mov
jmp
int3
cwtl
xor
sub
lea
jnp
sarl
push
xchg
jne
cld
jecxz
xorb
orl
lcall
and
jo
lock
mov
fadd
jnp
push
cwtl
mov
xor
pop
push
mov
push
xchg
test
dec
mov
xchg
std
mov
xchg
jnp
pop
push
push
lret
pop
jo
cmp
adc
push
sti
sbb
mov
mov
fstp
cld
jecxz
std
cmp
add
xchg
aas
mov
pop
mov
xor
scas
fldt
inc
jo
and
out
cld
cwtl
les
and
sub
or
cmp
fistpl
sbb
pop
es
scas
mov
cs
dec
jnp
push
inc
dec
cs
push
cs
cmp
ljmp
pop
imul
mov
fstp
mov
xor
dec
in
cmp
add
aaa
cmpsl
mov
pop
push
mov
imul
testl
aas
cmp
inc
dec
dec
arpl
xor
xchg
iret
xor
fistl
lods
xor
aaa
mov
lahf
mov
and
mov
push
xor
outsl
xlat
add
cmp
xor
sbb
fcmovnu
js
push
mov
jne
push
icebp
pop
mov
sti
lcall
outsb
inc
xchg
sbb
out
out
arpl
xchg
out
mov
cmp
mov
mov
mov
push
stos
mov
pop
xchg
inc
ja
mov
jnp
test
cli
rol
int3
push
jle
mov
cwtl
scas
sarl
add
mov
mov
in
sub
pop
aaa
mov
xchg
push
in
ret
push
inc
jl
pushf
cmp
test
pop
mov
add
cwtl
idiv
aas
idiv
mov
frstor
cmp
sti
fstl
repnz
fidivl
ljmp
pop
cvtdq2ps
outsl
push
or
testl
sti
pop
inc
div
ja
inc
jecxz
cwtl
cmpb
push
ret
lock
roll
in
fldl
ss
repnz
xor
and
repz
dec
mov
hlt
and
shll
xor
xor
jl
imul
sub
ss
sbbl
ds
inc
push
lret
subl
pop
mov
inc
mov
sbb
inc
popa
popa
mov
mov
jg
add
psubusw
push
std
jnp
insb
cmp
lahf
fnstsw
xor
dec
mov
lahf
cmp
dec
pop
xor
cmp
jno
pop
jg
sub
sbb
insl
sti
mov
cmp
rep
adc
xchg
pushf
cmpsb
loop
or
ja
add
xor
jo
sbb
mov
or
fsub
push
add
adc
push
movsb
mov
or
mov
lods
loop
or
insb
dec
stos
adc
sti
insl
add
mov
int
pop
loope
cmpsb
lea
mov
xlat
outsl
ds
into
icebp
push
sbb
sti
mov
imul
cmp
sub
cwtl
fisttpl
out
xor
pop
in
add
cmp
mov
mov
push
cmp
das
mov
std
mov
cli
xchg
xchg
scas
cmp
jl
outsl
icebp
add
pop
out
lds
jecxz
lahf
sub
pop
mov
pushf
lahf
pop
jle
pop
jg
ds
mov
lahf
jge
fistpll
pop
mov
ja
jg
test
ds
test
imul
sbb
iret
xchg
fstpt
fisttpl
or
sbb
out
jg
outsl
dec
sahf
xlat
lahf
xchg
or
pop
push
addr16
fstpt
ret
fistpll
movsb
stc
mov
ds
sbb
loop
fnstsw
es
mov
add
cmp
and
xchg
cmp
loop
outsl
out
push
out
mov
jne
imul
testl
sti
pusha
iret
clc
xlat
sarl
negl
es
sub
in
pop
out
ja
fdivrl
jmp
cs
scas
leave
cs
aas
mov
lahf
sahf
mov
mov
xchg
fistpll
out
out
lahf
add
push
mov
aas
jbe
std
out
ret
sarl
es
xchg
cmp
fistpll
jnp
mov
out
jg
fsts
mov
fwait
aam
cld
fidivl
jae
in
mov
cld
cmp
jl
popf
jp
jl
jg
cltd
fistpll
mov
pop
cmp
mov
hlt
mov
lahf
ja
dec
cld
outsb
icebp
out
aas
jbe
std
pop
mov
jns
in
aas
jne
mov
sbb
mov
faddl
fnstsw
pop
decl
pop
cmp
jl
hlt
mov
ljmp
push
mov
jecxz
cld
aad
pop
fistps
push
scas
xor
ja
and
push
outsb
jle
divl
cmp
sbb
dec
mov
stos
mov
mov
aam
jg
jg
sbb
adc
arpl
pushf
data16
je
or
fnstcw
fucomi
ds
mov
cmp
inc
pop
mov
repnz
jnp
cltd
push
jl
mov
adc
fdivl
add
dec
pop
sbbl
inc
mov
out
sbb
repz
push
jg
mov
cmp
in
mov
popf
jo
ret
cmp
aas
call
add
outsl
pop
lahf
push
jae
in
sti
xor
cltd
lahf
jmp
mov
call
lahf
mov
sti
push
pop
pushf
loope
mov
cmp
fadd
int
cmp
mov
js
push
idiv
inc
mov
jns
lahf
mov
rcrb
ljmp
les
jne
ja
sti
cmp
xchg
cmc
mov
sti
push
fcmovnu
mov
mov
mov
std
jmp
aad
pop
and
std
jae
jns
movsb
fwait
hlt
pop
imul
mov
jg
push
pop
std
movsb
mov
fnstsw
lods
loope
jl
ret
dec
pop
fdivrl
repnz
in
cld
mov
or
ret
pushf
stos
jg
popf
fstp
sbb
nop
insl
lahf
loop
fdivr
insb
jmp
jg
mov
lahf
mov
repnz
js
xchg
xor
js
nop
jae
xor
cmpl
popa
mov
sahf
mov
mov
cmpb
ret
in
jl
mov
cmp
mov
jmp
mov
sbbl
insb
xlat
repz
cmpsb
outsl
cmp
mov
popa
mov
ljmp
sar
jle
or
inc
jnp
lahf
mov
cmp
out
rcrl
sbb
ds
and
sbb
mov
pop
jns
or
pop
in
fucomip
fistpll
outsl
faddl
fistpll
sahf
jmp
aas
inc
xchg
adc
ja
popa
enter
sbb
cmp
shr
cld
jmp
ss
mov
xor
repnz
cmp
ret
ds
mov
jg
sbb
mov
pop
js
jecxz
cmc
cld
out
mov
mov
jle
std
or
sbb
jle
mov
pop
cs
push
mov
loope
scas
push
pop
pop
jle
cwtl
cmp
popf
push
out
mov
rcl
cs
cmpsb
sub
fidivs
cmc
sub
pushf
inc
jns
sbb
fnsave
inc
cli
pusha
mov
and
dec
jle
jl
mov
cmp
fdivp
mov
mov
testl
std
iret
insl
xor
mov
pop
dec
out
mov
inc
xor
mov
cld
scas
mov
in
sub
stc
in
fildl
or
lcall
cld
mov
fwait
mov
jg
repz
jnp
jge
mov
loop
mov
sub
jl
jmp
repnz
fistpll
cld
pop
push
cmp
fildl
je
cli
add
fs
inc
jg
std
mov
mov
into
mov
sbb
pop
sti
div
dec
mov
mov
cmc
fwait
mov
sbb
jl
mov
push
js
jl
jmp
pop
lods
dec
cmp
fsts
ja
mov
jmp
sahf
int3
mov
cmp
and
fwait
aas
fucomi
sub
js
xchg
ret
lods
outsl
mov
sbb
in
mov
cmp
decb
cmp
sarb
cmp
aaa
pop
mov
fldt
stc
popa
fnstsw
out
dec
add
inc
fistpll
mulb
xorl
stc
aas
mov
lcall
add
sahf
dec
jge
fisttpll
dec
sbb
pop
sub
cmp
cmpsl
out
cmp
adc
mov
repz
jle
fstpt
mov
ja
inc
fldt
divb
jns
mov
cli
or
fwait
jno
in
ja
jg
jne
out
inc
sbb
cmp
sbb
movsl
mov
jno
cmp
fnstcw
insl
scas
in
out
cmp
jp
mov
mov
popa
notb
cmp
outsl
dec
jle
imul
inc
insb
popa
notb
mov
sbb
pop
dec
mov
sbb
jecxz
std
in
inc
jle
cmp
pop
add
pushf
push
mov
mov
jg,pt
mov
sbb
in
std
pop
pop
dec
jge
cmp
xor
cmp
push
aas
adc
hlt
jge
sbb
cmpb
imul
mov
repnz
pop
cs
cmp
xor
mov
or
pop
les
ret
repnz
cmp
mov
pushf
stos
fwait
repnz
aam
out
pop
lahf
mov
out
out
lahf
cmp
in
mov
lahf
aad
out
outsb
iret
ljmp
stc
mov
repnz
mov
lea
or
mov
xchg
sbb
mov
mov
mov
or
mov
xlat
jg
fistpll
add
icebp
push
mov
mov
int3
fistpll
jl
cmpl
outsb
jle
jg
je
dec
icebp
pushf
mov
sbb
call
mov
loop
je
outsl
sbb
cmp
idivb
mov
or
stc
bnd
lods
mov
aad
lcall
ja
js
aad
cmp
popf
jmp
xchg
mov
loopne
out
or
rcrb
hlt
mov
cmp
mov
cmp
fsubr
jno
jge
repz
movsl
fildll
cmpsl
out
out
lds
cmc
mov
mov
out
push
fs
aas
loop
faddl
or
pop
mov
fistps
mov
or
jge
insl
jne
cs
loope
fsubrp
aas
loope
sbb
jle
jae
js
mov
dec
popf
pop
cmpb
and
sbb
pop
pop
xchg
sahf
jg
sarl
fnstsw
mov
fldt
mov
xchg
mov
fwait
cmp
in
outsb
fistps
ljmp
mov
jge
imul
sahf
jb
jmp
jb
adc
orl
lods
push
insb
out
inc
sbb
cmp
aas
ds
shll
lcall
and
ds
insl
out
lea
or
pop
lods
lahf
dec
jp
insl
inc
ja
pop
cmp
adc
aas
and
loop
cmp
pop
aas
lcall
mov
loope,pn
push
fimull
out
out
jnp
mov
mov
xor
inc
mov
mov
into
shrl
mov
pop
lahf
mov
aas
shrl
jle
ljmp
jle
mov
mov
jl
adc
sbb
inc
hlt
cmp
out
lahf
std
loopne
shrl
sbb
loopne
pavgw
sbb
push
cmpsl
shr
movsb
inc
cmpsb
mov
stos
xor
and
mov
popa
std
sbb
sbb
sbb
mov
inc
std
mov
jbe
popa
in
and
jecxz
in
cmp
aas
add
decl
add
cmpb
packsswb
jb
ds
mov
push
in
ret
leave
fstpt
pop
push
mov
jl
cltd
popf
aam
mov
lahf
mov
mov
jge
loope
jge
cld
mov
call
shrl
sarl
jg
jmp
mov
lahf
lcall
mull
out
iret
cmp
mov
mov
cld
mov
popa
pushl
je
test
hlt
mov
js
cwtl
out
enter
jge
std
test
sti
pusha
cmp
ffree
fidivs
je
lahf
pushf
jl
xchg
out
pop
cmp
jle
sti
mov
cmp
jge
fildl
cmp
std
ljmp
cmpsl
push
cmp
cld
jnp
out
cmpsb
mov
hlt
mov
mov
fidivrs
pop
lea
pop
or
pop
mov
pop
and
jle
sbb
pop
fdivs
scas
pop
adc
pushl
adc
hlt
aas
adc
fistpll
sbb
mov
aas
jecxz
cmp
sbb
aas
aaa
mov
jge
adc
push
aas
cmp
jle,pt
leave
or
insl
jl
and
mov
mov
mov
pop
and
jg
ljmp
jp
mov
mov
mov
jns
std
pop
xlat
fnsave
dec
sarl
jbe
xlat
mov
inc
xor
dec
fimull
and
repz
ja
jnp
pop
aas
fstps
ja
xchg
fisubrl
and
stos
cltd
ja
addr16
jl
pop
fucomi
sbb
fsts
outsl
xchg
aas
dec
fmuls
xchg
imul
xor
das
dec
test
lods
aaa
sub
movq
fisubs
mov
pop
add
xchg
mov
sub
mov
add
incb
int3
repz
sbb
cmp
stc
mov
or
sbb
cmp
frndint
mov
stos
sahf
call
not
mov
ja
mov
or
jbe
std
mov
push
lahf
pushf
pop
cli
dec
xor
stc
dec
mov
and
push
sahf
mov
pop
lock
fs
nop
ds
jle
mov
daa
jl
pop
int
ds
jle
popl
mov
fistl
ds
es
cmp
inc
jp
fidivrs
mov
inc
lret
inc
pusha
sub
push
mov
push
xor
jg
adc
popa
cld
pop
outsl
pop
jl
jg
loopne
push
mov
test
cld
aas
cmp
int3
repz
ret
rcrb
cmp
or
xor
rol
add
mov
mov
mov
incl
addl
dec
dec
lea
incl
addl
sub
rclb
adc
jecxz
and
fstp
sbb
sub
adc
loope
and
pop
pop
lahf
pushf
ljmp
scas
lods
push
push
xchg
nop
jmp
mov
sahf
ljmp
lods
scas
push
push
xchg
xchg
jmp
mov
xor
mov
cmp
dec
enter
divb
add
cmp
leave
lret
ja
mov
incl
xchg
dec
dec
mov
incl
test
decl
mov
jmp
in
and
fcomps
sbb
jmp
sub
aad
adc
and
sbb
jmp
push
xchg
xchg
jmp
cmpsl
movsb
pop
pop
fwait
cwtl
ljmp
stos
test
push
xchg
xchg
jmp
movsl
cmpsb
pop
pop
cltd
lcall
shrl
std
lods
rcl
add
or
arpl
xchg
dec
stc
xor
sub
sti
scas
movsl
fldcw
jbe
xorb
popf
add
lahf
cltd
dec
push
js
in
pop
sbb
cmp
pop
pushf
in
loope
lret
pop
or
jge
mov
insl
jl
cmc
data16
setbe
sbb
xor
pop
dec
mov
sbb
xchg
fcompl
sub
push
mov
pop
jg
insb
pop
movd
push
leave
insb
or
cmp
adc
pop
jae
sbb
rcrb
jae
sbb
mov
repz
jge
jge
fimuls
lahf
xor
and
aas
or
scas
outsl
push
jg
in
ljmp
xchg
mov
jbe
ljmp
mov
mov
aaa
cmp
fwait
hlt
addr16
sub
leave
aam
fstp
jg
jg
jb
lcall
out
sti
fdivrl
out
push
mov
pop
cmpsl
cld
nop
ljmp
lahf
mov
test
sub
push
std
gs
push
in
jg
jp
add
or
mov
movsl
xor
ljmp
ljmp
sbb
aas
ficomps
test
test
je
lods
jg
adc
push
out
sub
cld
push
jo
ljmp
aam
lret
push
mov
cmp
vmaxpd
push
insb
ljmp
cmp
jg
or
mov
push
jge
push
dec
fs
pusha
jbe
and
mov
ja
xchg
pop
mov
fidivs
push
pop
addr16
pop
cmp
push
insl
lahf
loop
fdivrl
out
jae
inc
fisttpl
mov
push
js
jge
rcrl
ljmp
mov
jbe
fsubrs
cmpsb
out
sbb
fwait
jle
lahf
aas
in
cld
dec
fldcw
inc
lods
popf
idivb
fisubrs
add
sbb
ljmp
pop
fisubs
mov
cmp
and
mov
dec
jg
stc
fistpl
aaa
add
rcll
fnstsw
iret
push
push
std
mov
add
adc
out
std
push
int
cmpsb
sarl
cld
rorb
xchg
mov
loop
jp
iret
mov
inc
enter
pop
jmp
ret
inc
jp
cmpsb
lahf
fst
das
jg
push
frstor
push
inc
cmpsb
mov
xor
push
jg
pop
pop
mov
jno
gs
mov
jle
movb
mov
adc
ss
push
ljmp
flds
lods
aas
push
fwait
lret
sahf
sbb
push
idiv
aaa
jge
fbld
jns
jb
jl
pop
sbb
out
mov
mov
cmp
push
mov
jnp
mov
dec
push
fistpll
jg
or
pop
lods
loop
in
movsl
fucomip
and
or
sahf
mov
jg
out
jbe
jo
lods
aas
pop
mov
mov
sbb
lods
popf
out
jb
jecxz
adc
fbld
lods
fwait
mov
fucomi
pop
fidivs
data16
or
les
rorl
sbb
outsb
ret
pop
ret
imul
imul
cmp
jge
imul
bound
pop
std
jg
mov
loopne
aam
pop
pop
pop
cmp
pop
cs
jp
xlat
fdivrl
into
out
ljmp
sub
cmp
push
fbld
mov
imul
lods
iret
sub
sti
mov
mov
repnz
or
push
aam
scas
pop
mov
outsb
inc
and
les
pop
push
mov
ds
andl
ja
pop
sbbl
stos
xor
loopne
aad
popa
pop
divl
fisttps
sbb
stc
cmp
cwtl
test
outsl
sub
stc
add
out
mov
fstps
hlt
ja
xor
pushf
out
out
fbstp
jg
sub
xchg
aaa
and
sahf
cmp
outsl
mov
ja
out
sbb
outsb
je
and
inc
cmp
fstpl
adc
fstpl
jg
mov
fistps
aas
pop
cli
and
jnp
shl
xor
pushf
scas
xor
mov
add
jnp
lds
jnp
orl
mov
mov
mov
out
mov
mov
push
cmc
or
in
mov
adc
out
pop
cld
cmp
cmp
pop
pop
dec
inc
aam
data16
cmpsb
jg
jno
mov
stc
aas
hlt
mov
ficomps
push
and
loopne
hlt
outsb
cmp
cmc
cmpsl
loop
jb
xchg
push
les
lahf
pop
jne
shr
fisubrs
es
lret
insb
jp
inc
xor
stc
xor
data16
mov
pop
out
inc
bound
and
jnp
ss
stos
mov
pop
sbb
mov
outsl
lahf
mov
cmp
sbb
xor
lahf
fsubrl
push
repnz
xor
cmpl
scas
sbb
aas
dec
mov
fildll
jg
call
fdivrs
xchg
jg
call
cmpsb
cmp
stos
sub
push
aaa
xor
inc
and
pop
pop
inc
lahf
shl
push
fcomps
xchg
jg
lock
aas
in
outsb
lock
xchg
lahf
cwtl
cmpl
out
push
add
xchg
xorl
js
andl
push
jp
rcrl
jo
mov
movsb
dec
lcall
push
ret
mov
xlat
jb
aaa
xor
xor
shl
repnz
dec
idivb
arpl
aad
dec
push
sub
popa
cmpsb
pop
stos
and
pop
cmp
pop
loop
push
lret
pop
loope
fisubl
xchg
jecxz
ljmp
ds
dec
jp
lahf
xchg
xchg
fisttpl
jge
dec
mov
imulb
mov
cli
mov
xor
test
mov
mov
and
add
pop
inc
ss
pop
sub
das
into
je
in
cmp
pop
in
dec
sbb
in
insl
loop
loopne
and
mov
outsb
pop
mov
repz
rcr
int
repz
xor
ficoml
repnz
mov
xor
push
fistpl
lret
fmulp
inc
mov
adc
push
cmp
out
fisttps
testb
cmp
sbb
repnz
lods
lock
jp
ja
push
mov
insb
cld
cmp
or
aad
jg
pop
mov
imulb
jle
cmp
sub
cs
sbb
sbb
jp
fdivrl
scas
sbb
xlat
fdivp
fstl
pop
out
test
mov
cmpsb
add
push
fnstsw
cmp
push
fildll
jnp
xor
mov
call
sub
cmp
stos
out
pushf
adc
fisubrs
ficoms
cmp
mov
std
mov
rcl
xor
fwait
cltd
jmp
xchg
xchg
idiv
xor
outsl
int
ja
notb
jge
mov
jle
sahf
fdivrl
jg
jl
aas
in
jnp
scas
mov
cmp
cld
cltd
and
sbb
cld
arpl
loopne
inc
cmp
divb
pop
mov
mov
loop
sbb
inc
cmp
ljmp
dec
outsb
cltd
mov
push
push
cmp
sbb
mov
push
out
cmp
pop
fst
addr16
mov
ss
inc
bound
cmp
arpl
data16
std
cmp
push
dec
fnstcw
push
cmp
cld
mov
jle
mov
cmpb
sbb
cli
js
movsl
mov
pop
lahf
add
out
pop
mov
aas
scas
sbbl
lea
mov
mov
fisttpll
in
jne
scas
sahf
cmp
in
mov
inc
fsubrs
movsb
insb
inc
hlt
outsb
inc
ficomps
dec
sbb
les
fimuls
sbb
dec
inc
jbe
jl
ficoml
mov
call
pop
daa
aad
pop
fisubrs
in
adc
mov
andl
sbb
lds
sub
sub
mov
sbb
mov
push
pop
ds
pop
cmp
ss
pop
in
jg
fstpt
mov
jle
mov
ja
es
test
sbb
jne
fstps
jl
mov
in
pop
pop
es
or
insb
fstps
in
mov
idivl
loope
ds
js
pop
jp
inc
outsb
and
push
dec
mov
pop
and
xchg
movsb
cmp
and
cmc
or
je
and
mov
push
mov
neg
dec
gs
leave
sti
in
cli
xchg
pmaxsw
mov
scas
pushw
jp
sahf
jmp
iret
in
cmp
clc
mov
movswl
jle
nop
jns
fstp
mov
filds
mov
mov
pop
stc
xchg
jp
and
das
movsb
cmp
jl
sbbl
out
mov
jl
jg
int
mov
js
inc
idiv
push
pop
out
das
mov
pop
faddl
inc
mov
pop
outsb
mov
outsl
ja,pt
cmp
mov
fdivs
xor
mov
pop
xchg
inc
jb
cmpb
outsb
dec
loopne
mov
daa
add
aaa
cmp
repnz
xchg
jl
fcompl
gs
sarl
pusha
cmc
xor
fistpl
add
mov
lret
add
mov
jp
jge
scas
pop
inc
sarl
mov
and
outsb
call
lods
mov
lcall
push
jnp
out
ds
sbb
out
lahf
in
loope
mov
sbb
mov
sbb
in
sahf
es
add
ret
xor
xorb
and
xor
pushf
negb
push
les
jle
xchg
mov
aaa
repz
and
and
mov
sbb
push
inc
xor
inc
aam
adc
xchg
inc
adc
jno
mov
jl
call
pop
cmp
cmp
mov
jle
lahf
inc
fidivrs
into
cmp
mov
cli
outsb
mov
lods
sub
push
loopne
xor
aas
push
mov
in
insb
sub
cmp
outsl
cmp
or
adc
jbe
std
fidivs
icebp
lods
dec
xchg
lahf
mov
lock
jo
push
mov
xor
mov
out
dec
fnclex
xchg
hlt
pop
sbb
scas
lcall
mov
neg
sub
jnp
xchg
out
int3
lds
inc
data16
fucomi
rcrl
pop
aaa
jg
fistps
outsl
inc
ficomps
xor
jae
cmpsb
jg
std
aaa
mov
lahf
sbb
push
inc
xor
jp
jb
pop
jne
insl
push
sti
pop
out
lahf
movsb
cmpsb
out
out
dec
rorl
aad
out
xchg
and
mov
out
mov
cmp
cmpsb
jno
div
negb
cs
das
fistpll
mov
in
fbstp
pop
call
push
mov
pop
mov
push
jp
rorb
fimuls
push
mov
fiadds
adc
out
mov
iret
mov
lahf
subb
out
mov
or
inc
fcmovb
aam
mov
cmpb
and
outsb
cmpsb
in
jno
add
in
inc
lahf
mov
xchg
mov
cmp
mov
imulb
mov
mov
mov
mov
insl
bound
outsb
cmp
into
notb
in
xor
pop
inc
addb
movb
data16
pop
loopne
std
sbb
xorb
std
jne
cmpsb
sbb
dec
mov
leave
fistpll
data16
cs
out
jle
fs
sub
lock
out
cli
fnstcw
adc
imul
sbb
xor
mov
std
ja
xchg
ds
les
jl
jbe
fwait
mov
mov
ja
mov
pop
mov
outsl
and
fistpll
pop
fldenv
mov
mov
stos
sbb
fwait
jg
fistps
or
insl
pop
in
fnstcw
fidivs
outsb
jl
lods
fidivrs
pushf
lds
test
xchg
mov
in
jbe
out
sub
jg
pop
jg
adc
xchg
adc
ja
pxor
xchg
filds
jle
jl
fstl
add
fcomps
fstp
jecxz
mov
out
xor
stc
js
xchg
sti
pop
and
in
dec
sub
mov
fldenv
fstpl
jle
mov
movl
pop
or
in
mov
xor
jl
lcall
out
mov
ljmp
xchg
pop
push
pop
mov
cmpsl
cmp
dec
cmp
adc
es
pop
xor
jnp
or
ljmp
or
ret
out
out
daa
out
xlat
pop
jl
mov
dec
mov
lods
outsl
fisubrs
data16
cwtd
outsb
dec
fcomi
mov
pop
push
fistpl
pushf
jbe
cli
and
jecxz
aad
fmulp
out
mov
stos
pop
lods
mov
stos
int
out
mov
adc
fstl
pop
hlt
lods
cli
sbb
sub
pop
neg
and
inc
int3
mov
out
stc
lds
mov
jb
inc
cli
sarb
push
xlat
adc
sbb
enter
pop
lahf
ljmp
pop
sahf
mov
js
std
filds
jg
mov
xchg
xor
xor
popa
sbb
mov
dec
jbe
outsb
lcall
imul
les
rorl
es
push
jl
sar
pop
adcb
ffree
or
sti
outsb
out
ja
jecxz
jns
insl
fucomi
popa
push
into
out
out
fcmovnu
jno
jnp
fistpl
pushf
lea
jle
dec
xor
out
and
fcomi
ljmp
lcall
mov
jg
loop
and
jl
stc
mov
int3
dec
sbb
imulb
xor
inc
cmp
movsl
ret
movsl
lahf
pushf
cwtl
arpl
std
test
pop
push
adc
jns
or
loope
leave
aaa
out
in
mov
mov
out
pop
mov
iret
xor
mov
jp,pn
jbe
fisttps
fdivs
add
outsl
and
repnz
adc
pop
into
jbe
aas
movsl
jg
leave
pop
enter
out
xor
scas
stc
pop
mov
sub
add
mov
jg
in
jns
fisubrs
or
cmp
xchg
sub
jo
testb
hlt
jle
push
cmpsb
test
dec
jo
aaa
add
ds
sub
sub
stos
sub
cwtl
das
orl
jp
dec
or
mov
dec
and
ror
pop
roll
xor
mov
mov
jge
dec
jge
mov
scas
push
push
jae
jns
mov
sbb
push
lock
imul
jg
pop
pop
enter
fcmovne
jg
out
push
popf
fldcw
out
jg
mov
insb
inc
scas
aaa
scas
fisttpl
push
aaa
pop
cmp
cli
paddusb
jle
out
dec
pop
aam
out
dec
xchg
neg
outsl
mov
mov
mov
jl
fildll
ja
std
out
popf
insl
mov
pop
pop
mov
sbb
daa
je
insb
in
fwait
stc
fstpt
mov
popf
rcr
fnstsw
iret
insb
jl
dec
repnz
filds
in
leave
dec
sti
jb
dec
jl
repz
shlb
pop
dec
jl
repz
jg
sub
jns
sbb
push
mov
sbb
mov
jne
xlat
movb
insb
ret
push
shll
stos
lock
sub
and
imulb
cli
push
dec
inc
cmp
mov
jbe
sub
shrl
cli
scas
out
into
mov
sbb
out
ficoms
mov
out
add
xor
scas
mov
lret
scas
scas
sub
mov
out
mov
pop
fisttpll
jg
cmc
aas
fistps
jg
dec
mov
jge
iret
mov
arpl
imulb
cli
cmp
sub
or
repnz
sub
js
cmp
xchg
das
fwait
ss
jg
xchg
rol
push
pop
les
mov
fxch
xor
popf
movsb
pop
loop
push
outsl
out
lret
jmp
aas
aaa
pop
leave
mov
jg
jbe
and
cmp
xor
ds
pop
stc
pop
and
inc
daa
inc
cs
xlat
jns
pop
inc
mov
out
data16
dec
pop
and
push
in
or
pop
sbb
sub
push
outsb
pop
movsb
imulb
outsl
ds
movsb
repnz
pop
out
pop
gs
jb
sbb
pop
push
add
andb
xor
mov
sbb
andb
xor
pop
mov
fcompl
enter
cmc
dec
outsb
mov
outsl
mov
fisubs
jb
push
aas
test
shrb
xor
inc
and
mov
add
pop
pop
sbb
cltd
cmpsb
dec
mov
out
sub
fidivs
jle
mov
hlt
call
icebp
pop
and
adc
ffreep
std
in
lret
hlt
test
mov
push
jo
mov
mov
into
pushf
dec
lret
xlat
mov
fwait
jnp
mov
imul
mov
int3
mov
mov
and
push
repz
push
sti
mov
pop
loopw
xchg
xor
xor
cltd
fmull
dec
jg
cmpsl
and
rcl
ljmp
aad
push
cld
imul
jle
add
idiv
sub
pop
jnp
xchg
ret
fmuls
fs
imul
mov
sti
xlat
popf
cld
fildll
jp
add
inc
fstpt
dec
insl
data16
mov
pop
testl
sbb
dec
adc
jbe
jl
dec
outsb
jg
add
mov
sub
and
jmp
lods
fucom
cs
push
cmp
mov
aaa
fistpll
add
das
outsb
pop
or
sub
bound
mov
fistpll
jns
and
or
cmc
fs
inc
lea
mov
cmp
pop
xor
fldt
mov
jp
mov
fs
pop
int3
jg
push
pop
out
int
lods
mov
loop
ja
pop
inc
lahf
cmp
lcall
fwait
jecxz
fdivp
repz
imul
in
dec
sub
out
xchg
pop
jecxz
jecxz
out
and
and
insb
xor
and
inc
push
repz
in
inc
jo
ret
mov
jg
subb
pop
arpl
pop
lods
add
inc
inc
es
shrl
lahf
mov
iret
fists
mov
cmp
and
lahf
adc
mov
fwait
mov
in
arpl
pop
cmp
aad
mov
xorl
mov
movsl
fdiv
arpl
into
jp
cli
jb
mov
mov
scas
fstpt
xor
sub
stos
jmp
dec
out
mov
jecxz
test
nop
cld
fstpt
jae
cli
push
pop
out
jnp
test
shrl
fildl
call
xchg
and
das
mov
push
mov
sarl
iret
sar
mov
mov
data16
ret
js
push
pop
sbb
sarb
popa
into
enter
je
call
ja
fdivl
mov
stc
push
loop
clc
icebp
pop
xor
jnp
xlat
mov
push
int
std
cld
dec
mov
fnstsw
jge
adc
mov
rcr
test
lahf
mov
mov
jg
sarl
add
jbe
add
in
mov
xlat
aas
cld
jl
xchg
or
gs
and
mov
jg
in
mov
ret
cld
pop
or
mov
jnp
sbb
idivb
add
scas
push
cmpl
outsb
xlat
lahf
mov
fiadds
repnz
cmpl
out
jnp
sbb
ret
push
repnz
xor
cmpl
movl
ret
cmpb
ret
fdivl
stos
cmpl
lahf
add
sbb
cmp
jge
lahf
mov
fdiv
push
repnz
cmpl
jecxz
dec
pop
in
idivl
aas
inc
sbb
cmpsl
in
push
adc
repz
mov
pop
jo
jnp
sti
sbb
mull
sbb
lock
pushf
or
lahf
mov
into
mov
sahf
mov
pop
into
scas
pop
scas
aam
jl
pop
mov
mov
pop
stc
out
sbb
scas
jge
lahf
sbb
js
insl
in
repz
ficomps
fdivrl
fnstsw
out
pop
popf
scas
lods
pushf
cmp
cld
out
je
and
into
scas
cmp
jge
mov
sbb
je
jmp
pop
cmp
fnstsw
loop
mov
lods
jg
dec
cmp
imul
pushf
cltd
scas
pop
xor
call
lahf
jo
imul
insb
xlat
out
scas
push
adc
cmp
mov
jl
sbb
fadd
mov
fnsave
push
lods
jae
insb
fsubr
scas
lahf
scas
aam
mov
pushf
cmp
pop
gs
inc
lahf
push
jnp
insb
mov
pop
cld
scas
lods
aas
sahf
dec
pop
jmp
stc
into
lahf
into
scas
mov
ds
aad
fldl
inc
jns,pt
scas
push
fnsave
pop
into
scas
jge
mov
fcoml
pushf
pop
jge
adc
sbb
mov
addr16
push
cmpsb
aas
lahf
mov
mov
sbb
pop
xlat
je
and
into
scas
cmp
cld
je
cli
cmpl
cmp
clc
pusha
and
repnz
fnstsw
pusha
xchg
out
mov
decl
fisubs
inc
push
mov
pop
scas
aam
sahf
idivb
mov
sahf
es
pop
mov
pop
fmul
scas
sahf
scas
aam
sahf
es
or
mov
scas
addr16
ljmp
jecxz
jmp
jae
mov
pop
pop
nop
pop
in
pop
sbb
out
mov
mov
mov
scas
fwait
negb
mov
enter
jbe
dec
out
sbb
push
scas
lahf
mov
scas
pop
ficomps
out
js
push
xchg
out
pop
gs
mov
mov
pop
sub
out
sbb
mov
cmp
push
sahf
subb
jg
push
loope
out
repz
ficoms
sahf
push
sahf
aaa
scas
pop
cmpl
stos
popf
mov
scas
jbe
repnz
cmp
cmp
pop
mov
aaa
scas
pop
mov
jae
dec
fsubr
scas
fisubrs
filds
fisttps
fnstsw
rolb
fildll
into
sbb
sahf
ja
cmp
cmpsb
sbb
mov
sahf
outsb
jge
lahf
in
pop
dec
xchg
sbb
imul
jle
scas
cld
jae
xor
push
cli
pop
cmpl
out
cmp
mov
push
cmpsb
cmp
mov
sahf
cmpl
xchg
or
emms
jg
ret
fidivs
cmpsb
push
aas
mov
insl
fstl
pop
lcall
cld
scas
inc
fldz
cmpl
pop
jae
fsubr
scas
mov
es
inc
incl
jle
outsl
std
cmp
cs
loope
jge
mov
scas
call
sbb
cli
out
dec
push
pop
pop
mov
ds
cmp
jg
mov
scas
scas
aas
ljmp
or
out
jge
scas
mov
fdivrl
pop
cmp
dec
sbb
scas
mov
pop
cmp
pop
lcall
ljmp
mov
stos
fnstsw
xlat
scas
pop
scas
push
add
jle
out
jl
out
mov
mov
mov
xor
mov
xchg
scas
dec
fisubs
push
mov
xor
pushf
push
fnstsw
scas
rcrb
in
mov
std
sbb
cltd
mov
mov
jg
sarl
pop
scas
mov
loop
pushl
pop
lcall
gs
mov
mov
jmp
cs
ds
into
sbb
scas
jle
jb
xor
and
scas
aaa
scas
std
mov
fst
sub
cmp
out
scas
cmp
imul
out
pop
pop
sub
pop
out
js
sub
scas
imul
pop
pop
mov
pop
int3
jns
fistpl
aad
jge
cld
or
test
xor
pop
push
arpl
stos
popf
stos
lahf
scas
sub
push
add
push
jle
pop
out
scas
ds
aam
mov
cmp
into
scas
fsubl
outsb
pop
sarl
mov
mov
lahf
and
scas
lahf
fcmovb
mov
lcall
mov
mov
cld
ljmp
cltd
scas
pop
xor
pushf
scas
fstp
or
les
cld
lods
pushf
sbb
sarl
sub
pop
int3
cmp
pop
in
sahf
sbb
imul
pop
popf
scas
test
mov
pop
jne
outsl
mov
out
scas
mov
cwtl
sbb
ds
in
mov
jg
scas
ffree
mov
pushf
xor
out
ds
scas
pop
mov
int3
cmp
sbb
out
pushf
cmp
xor
lret
lahf
adc
stc
out
pop
into
scas
pop
sbb
mov
arpl
mov
sbb
adc
sbb
jmp
pushf
aaa
scas
jl
cmp
inc
adc
lods
cmp
mov
fnstcw
pop
pop
sub
scas
sbb
popa
fucomp
jge
mov
gs
push
popa
cmp
jle
pop
mov
cmp
jg
sarl
aas
scas
pop
mov
cmp
cmp
jecxz
frstor
into
scas
mov
or
decl
sbb
fxch
sbbl
pop
scas
mov
popa
xchg
sub
repnz
mov
neg
cmp
jle
aas
ja
ljmp
aas
fstpt
jno
pop
scas
in
pop
jns
inc
in
mov
inc
jg
int
cli
imul
pop
mov
aad
aas
movsb
loop
pop
sahf
fistpll
lods
std
aas
xor
std
pop
xor
xor
or
jnp
insb
aas
inc
pop
jl
pusha
sahf
sbb
push
push
je
pop
jae
hlt
fists
cmp
pop
outsb
cli
ss
cld
sbb
jg
pop
xchg
fcompl
dec
mov
lds
lcall
into
pop
je
sub
mov
sti
test
test
jge
pushf
test
cld
mov
jl
out
and
xchg
pop
mov
imull
inc
ja
lea
aas
outsb
repz
in
cld
cmp
jle
push
push
mov
lods
mov
fidivs
in
sti
mov
testl
aas
xchg
pop
fdivrl
fucomip
push
repz
xor
popf
sbb
in
lock
xor
into
fisubs
call
jg
aad
aas
outsb
out
pop
test
es
mov
outsb
xchg
jb
pop
ja
out
push
cs
and
mov
xchg
pop
fdivr
jge
loop
jae
lods
sbb
mov
fmull
clc
mov
loop
ja
out
repz
jae
lods
loop
fdivl
fbstp
lods
mov
aaa
aas
popf
sbb
mov
and
mov
sahf
ljmp
sbb
sbb
scas
out
xchg
rcll
lcall
xchg
jg
xchg
sarl
rcr
or
jmp
lahf
fistpll
loopne
fldl
dec
jge
jmp
pop
xor
cmp
lcall
cmp
mov
aas
mov
pop
mov
andb
fnstcw
push
cmpsl
je
jle
pop
fimuls
imul
pusha
mov
and
jge
mov
fists
popf
mov
xchg
fnstsw
mov
or
sbb
repz
popf
cltd
fistps
mov
pop
jge
jecxz
rcrl
sbb
and
pop
ja
pop
les
or
xchg
pop
fdivr
sbb
push
xchg
fdivr
sbb
fdivrl
xchg
mov
mov
xchg
adc
jle
in
pop
leave
insb
std
mov
sbb
popf
xor
xor
mov
mov
aas
ja
out
xor
sbb
fnstcw
fstpl
int3
pop
jl
insl
mov
mov
sbb
cmp
pop
fldl
not
js
add
mov
mov
pop
push
std
rcll
nop
insb
cld
fcompl
sti
mov
and
and
leave
pop
outsb
jg
popf
mov
jmp
pop
xor
aas
push
out
je
pop
filds
sub
lods
mov
pop
test
jge
mov
pop
ja
out
xor
sbb
aad
in
out
outsb
xchg
mov
fdivrl
mov
out
mov
outsl
sahf
mov
xlat
cs
mov
outsl
iret
fidivrs
out
dec
fld
mov
outsl
mov
ja
out
mov
fnstenv
mov
cmpsl
ficomps
out
out
fldcw
fimuls
out
push
xchg
int
subl
dec
dec
leave
hlt
cld
push
push
setbe
inc
leave
call
outsl
aas
inc
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fldenv
jae
ret
ss
imul
xlat
je
mov
pop
mov
jns
ficomps
pop
stos
sbb
fistps
mov
mov
out
mov
jmp
ss
aam
jae
ds
pop
loope
pop
lcall
ds
push
cmp
ljmp
pop
mov
jae
mov
fbstp
mov
outsb
aas
inc
ds
fstpl
std
test
ja
ljmp
cmp
js
mov
jnp
idivb
mov
mov
aas
mov
pop
fisttpll
fidivrl
and
popf
fists
push
adc
xchg
jae
mov
xchg
sbb
fistpl
bound
je
sub
je
jmp
stc
fstpt
decl
lahf
out
jae
rcpps
rdpmc
mov
ja
mov
pop
insb
idivl
push
lcall
call
cmp
aam
pushf
pusha
dec
fstps
and
mov
lahf
mov
fildll
fiadds
loopne
fucom
mov
mov
inc
push
pop
fildll
pop
bound
aad
call
outsl
out
lods
mov
test
cmp
fdivrl
fildll
jl
fisttps
rcr
pop
push
cmpsl
int
jnp
pop
lcall
jbe
cltd
fistps
pop
ficomps
fistpl
pop
mov
mov
mov
sub
aam
mov
loop
jae
test
pop
cmp
dec
jb
mov
call
pushl
sub
mov
cltd
inc
fbld
test
std
ret
jae
sbb
jae
sbb
ret
dec
pop
push
ss
cmp
mov
xchg
jae
repnz
lahf
outsb
lcall
pusha
push
fnstcw
fdivrl
mov
pop
fdivrl
repnz
mov
sub
pop
cwtl
cld
je
pop
packssdw
aad
aas
outsb
pop
mov
mov
test
cltd
cmp
cmp
je
mov
pop
pop
jecxz
lods
dec
call
lods
std
lahf
ds
pop
mov
dec
sbb
hlt
ds
int3
mov
in
mov
test
cmp
cmp
fsubrl
test
movsb
arpl
pop
outsb
aas
and
mov
in
cmp
inc
cmp
aad
fisubs
cltd
fisubs
xchg
sbb
mov
ss
adc
out
insl
mov
dec
push
dec
pop
sbb
jl
insb
ds
xchg
je
sbb
mov
outsl
sti
ret
jnp
cmp
in
xchg
xor
cmp
push
push
inc
fstpl
jle
pushf
outsl
in
jl
sahf
subps
pop
aad
lahf
push
pop
fnsave
xor
jle
jg
lahf
sbb
stos
das
ds
sahf
call
jae
lods
adc
lods
mov
mov
pushf
xor
sbb
pushf
into
fbstp
loop
fidivrs
in
mov
in
inc
mov
mov
cmp
std
ss
mov
cmp
mov
idivb
scas
in
out
out
incb
jnp
insb
sti
out
push
xor
std
mov
hlt
mov
repnz
jae
xchg
mov
mov
pop
pushf
sbb
sbb
mov
fiadds
mov
sahf
andl
xor
in
ss
jg
lahf
push
cmp
fsubl
lods
mov
mov
lahf
jb
mov
aas
or
xor
sbb
aas
lcall
push
leave
inc
fildll
loopne
fldenv
jae
lcall
sbb
or
or
xor
sbb
mov
outsl
sti
ret
jnp
cld
sub
sahf
hlt
fsubrl
enter
jnp
rcll
mov
aas
jnp
jl
sahf
push
pop
pop
sahf
fidivs
imul
cltd
insl
pop
out
xor
fidivl
or
shll
cmpsl
imul
je
sbb
sahf
divb
je
jg
sahf
fucom
jb
loopne
fnstcw
pop
test
arpl
in
int
ror
xchg
int
imul
adc
push
in
push
mov
push
pusha
int
xor
push
or
jae
and
xchg
arpl
addr16
cmp
push
bswap
push
loop
push
mov
push
mov
outsb
pop
mov
ja
push
out
jae
fldcw
lods
outsl
imul
mov
arpl
fstps
cld
outsl
pop
mov
push
js
dec
mov
outsl
dec
fisubs
mov
ja
out
lret
aas
fstps
scas
sbb
outsl
ds
push
test
mov
jb
in
jb
in
jb
in
jb
in
jb
in
jb
in
jb
in
jb
in
jb
in
jb
in
jb
in
jb
in
jp
sbb
cmp
cmp
cmp
in
jb
int3
pop
mov
in
jge
jb
in
jb
in
jb
call
jb
call
mov
mov
xor
mov
jecxz
adc
jge
out
lcall
rsqrtps
pushl
ds
push
loope
pop
lcall
ret
jae
sbb
cld
adc
adc
xchg
arpl
inc
jae
sbb
push
leave
insb
std
mov
inc
ja
std
sti
lods
push
xchg
push
mov
jb
and
jb
call
lahf
je
lahf
dec
cmp
out
out
fwait
out
outsl
out
inc
out
pop
out
ljmp
pop
aam
fisubrs
mov
pop
loope
push
loop
aad
loopne
aad
loopne
aad
loopne
aad
loopne
aad
loopne
shr
sbb
jae
push
xchg
pushf
rcr
fcmovu
out
fistpll
xor
mov
or
pop
mov
out
test
lret
cmp
jae,pt
sbb
pop
jge
insb
cld
ss
fbstp
mov
cmp
lahf
aad
push
fucomip
mov
sti
jnp
push
inc
pop
aas
aas
lods
pop
jge
or
dec
jbe
push
or
std
aaa
jle
movsl
aas
out
xor
sbb
jae
sbb
fsub
fstp
push
mov
jl
pop
sbb
pop
leave
inc
filds
loopne
shll
jg
fdivrl
or
mov
into
cmp
pop
xor
mov
leave
call
sbb
cmp
aaa
mov
xchg
jl
fbstp
aas
movsb
jne
loop
stos
jge
dec
jg
out
fists
scas
cmpsb
jge
cli
dec
pop
jl
outsb
jle
sti
pop
pop
incb
lahf
dec
and
and
lods
mov
push
std
rcrb
cmp
std
test
dec
gs
fcompl
addr16
cltd
sbb
xchg
jg
popf
jl
jnp
dec
lcall
jnp
mov
mov
pop
scas
in
mov
je
ja
inc
lods
push
out
int
out
out
fisttpll
mov
jge
mov
pop
imul
jl
popf
out
insb
hlt
fidivrl
mov
jecxz
in
inc
jb
in
inc
jnp
xchg
inc
fcomps
addr16
out
xchg
pop
mov
xor
std
mov
xor
sbb
imul
mov
pop
aas
loopne
fisttpll
idivb
js
pop
xchg
xchg
push
jle
pop
pop
push
jnp,pt
push
out
lahf
pushf
mov
pushf
or
out
mov
xchg
ja
aas
aaa
push
fistpl
sbb
cmp
mov
xlat
ret
pop
jg
mov
in
aas
cmp
cmp
pop
out
cmp
sbb
ret
jae
sbb
ds
neg
sbb
fdivrl
sahf
in
pop
aaa
inc
jnp
push
mov
std
and
fnstsw
pusha
pushl
lcall
xor
sahf
stos
or
inc
mov
mov
jno
pop
std
dec
pop
outsb
cld
xor
in
xor
mov
pop
mov
sbb
out
js
in
lahf
pop
gs
aas
nop
sbb
xchg
aam
pop
lcall
xchg
fdivrl
test
cmp
cld
sarb
cmp
jl
pop
mov
jmp
sub
sarb
sub
xchg
pop
fistpll
jmp
lahf
idivl
mov
fistpll
rcl
negl
lods
jecxz
cmp
pop
sub
jge
pop
aad
cld
test
ja,pt
jl
int
lahf
jmp
sbb
ja
aas
daa
call
mov
cmp
xchg
jmp
mulb
js
daa
ja
imul
fsubr
cld
loope
sub
fstpl
leave
call
jge
jo
aam
popf
add
cmp
pop
rcrb
sbb
and
int
ljmp
sbb
jo
cmovb
int
or
lahf
sarl
lahf
cltd
cmp
cmp
xor
lock
jb
in
jb
in
jb
in
jb
in
jp
loope
mov
les
jl
sbb
pop
into
mov
mov
jge
push
mov
std
dec
pop
ds
push
leave
insb
cld
fcompl
push
leave
push
push
sbb
mov
xor
fstpl
mov
fldl
jae
lcall
jle
les
or
scas
xlat
scas
mov
push
aaa
lahf
pop
test
out
xor
sbb
sarb
ds
je
sbb
aas
adc
fnstcw
fbstp
jno
sahf
jg
imul
fstps
outsb
push
mov
outsb
stc
fdivp
mov
mov
inc
jae
mov
divl
mov
sahf
test
aad
lahf
jae
jae
xchg
xchg
jae
mov
jle
or
pop
std
pop
outsb
jl
jnp
je
mov
cld
xor
and
dec
cmp
call
jg
fistps
aas
aad
dec
jnp
lods
lahf
orb
ja
stc
sti
pop
je
pop
jl
leave
call
dec
pop
push
aaa
sahf
push
movsl
aas
out
xor
sbb
mov
outsl
fldl
jl
pop
imulb
add
jnp
fcmovne
jae
in
mov
faddl
faddp
xor
fisubrl
loop
aad
xor
pop
and
aas
lcall
and
mov
mov
mov
sbb
scas
mov
and
aas
leave
call
pop
add
int
mov
mov
ds
das
jle
add
jle
in
inc
jnp
mov
setbe
sahf
out
test
ljmp
cmp
sbb
mov
je
pop
jecxz
loope
cmpsb
aas
xor
ds
sbb
mov
and
imul
or
cli
mov
cld
ja
out
sti
fstps
jl
jl
rcrb
outsl
jl
dec
mov
ljmp
ror
mov
fbstp
or
lods
aas
pop
and
testb
insb
pop
inc
jae
mov
mov
aas
lcall
paddusw
rep
pushf
inc
jae
lods
sbb
mov
push
js
repnz
in
jg
jbe
movsl
aas
out
xor
adc
outsb
mov
sbb
ret
jae
sbb
jae
cmp
loope
aas
or
jae
pop
push
mov
push
fistpll
mov
xchg
pop
and
fdivrl
jmp
cld
into
int3
jge
std
fnstcw
incb
into
or
frstor
fucomip
or
pop
ljmp
repnz
mov
test
aas
push
dec
pop
cmp
insb
std
setg
out
lods
xchg
xor
xchg
pop
xor
xchg
mov
sbb
jl
sbb
jae
loop
iret
mov
mov
mov
mov
mov
mov
imull
add
lahf
hlt
pushf
loop
fistpl
lea
mov
movsl
pop
adc
into
xchg
arpl
popf
jge
jge
ret
lahf
jno
in
jge
push
lods
hlt
mov
lcall
outsb
jl
adc
mov
aam
sahf
cwtl
mov
pop
fcmovb
pop
mov
sbb
popa
loop
cmp
xchg
insb
imull
std
sbb
inc
ljmp
xchg
fisttpll
int
pop
loope
mov
mov
and
iret
mov
pushl
sub
jg
pop
test
pop
cmp
mov
mov
decl
into
fistpll
jl
imull
dec
aas
pop
xor
loopnew
sarb
insb
jnp
loopne
shlb
scas
outsb
sbb
mov
mov
mov
xchg
fcompl
jle
fmull
test
cmpsb
cmp
daa
fistps
fistpll
pop
dec
pop
imul
emms
mul
pop
xor
sbb
sahf
ret
push
pop
aas
lcall
in
ret
sbb
loope
pop
or
mov
int3
call
cmpl
dec
sahf
ljmp
lods
dec
fnsave
sub
fnstsw
loopne
shl
pushl
lcall
sbb
or
pop
leave
push
movsl
aas
out
xor
sbb
fnsave
sbb
dec
loope
lahf
mov
mov
mov
out
idivl
sti
bswap
pushf
mov
std
iret
jge
test
movsb
stc
sti
cld
imul
or
sbb
push
pop
ljmp
pop
outsl
mov
pop
mov
mov
mov
mov
xchg
fisttpll
xchg
mov
mov
mov
mov
mov
ljmp
sbb
or
jmp
out
xor
pop
jge
mov
lcall
mov
pushf
push
jl
lcall
fidivrs
lahf
scas
xchg
aad
pop
lcall
leave
pop
push
fisttpll
out
cmp
popf
ja
out
sti
mov
mov
scas
sbb
mov
jbe
stos
and
sub
pop
sti
imul
push
std
popa
cmp
call
out
sahf
fmull
insb
outsb
mov
mov
sbb
aas
fdivr
push
xchg
mov
out
pmaxub
sbb
ret
pushl
mov
sbb
mov
add
sti
int3
popf
nop
faddp
rcrb
pop
cmpsb
xor
xor
fsubl
sti
jae
lcall
sahf
fistps
fucomip
xchg
pop
pop
jmp
mov
mov
mov
mov
ss
pop
into
xchg
dec
cmp
in
sahf
inc
pop
outsb
pop
mov
in
xchg
dec
pusha
pushl
lcall
minps
sbb
sahf
sahf
pushf
sbb
pop
out
push
mov
test
mov
sahf
jo
mov
sbb
cmp
je
hlt
fstpl
push
xchg
fsub
sbb
push
adc
mov
repnz
xchg
sbb
sahf
mov
mov
scas
dec
pop
sahf
cld
ficoml
mov
pushl
adc
cmc
xchg
xor
xchg
ljmp
ficoms
fstp
xor
push
aas
movsb
mov
pop
fdivrl
repnz
faddl
repnz
in
lahf
mov
popf
mov
dec
mov
xchg
jmp
pop
xor
pop
lcall
xchg
out
xor
sbb
mov
maxps
sbb
testb
mov
mov
or
sbb
xchg
out
loop
push
ja
ljmp
sarb
push
sbb
fstp
xchg
fstpt
push
lea
int
ds
sub
cld
outsl
cmp
lahf
scas
pop
lds
mov
out
mov
jmp
xchg
xchg
ret
jae
cmp
mov
pop
in
add
mov
adc
out
mov
sahf
jnp
add
pop
xor
sbb
mov
and
leave
call
leave
insb
cld
movsbl
insb
pushf
sarl
scas
xlat
sti
sub
lcall
pop
mov
fstpl
das
in
push
dec
cmp
ja
faddp
aas
mov
ret
sti
insb
aad
in
fnstsw
push
sbb
cmp
jl
jp
mov
xor
pop
addr16
cmpsb
sahf
ds
jp
push
pop
loope
cmc
jbe
push
xlat
mov
sahf
ret
aas
jbe
sahf
jae
lods
lock
cwtl
mov
shrl
scas
mov
dec
aaa
fbstp
xchg
pop
jae
mov
push
aaa
fbld
cltd
lahf
dec
xor
aam
cmp
cmpps
jb
in
ljmp
pop
push
dec
adc
flds
cmpsl
sbb
dec
mov
fcompl
repnz
fdivrl
mov
mov
pop
in
add
outsb
adc
jl
stos
repnz
in
add
pushf
add
out
test
add
fisubrs
push
cmp
jb
aad
sahf
outsb
fldl
fdivrl
mov
aas
hlt
mov
xor
sub
mov
movsw
sbb
mov
pop
incl
ds
out
pop
jle
testb
cmp
sti
ja
and
call
inc
inc
mov
es
packsswb
in
sub
decl
xchg
xor
repnz
mov
cmc
imul
lock
sub
xchg
add
inc
imul
and
lcall
add
sub
fbstp
lcall
ds
decl
mov
add
lcall
push
cmpsb
mov
decl
xchg
sub
lcall
and
pusha
js
xlat
daa
xor
int
pop
xorl
pushl
arpl
movsl
adc
jnp
sti
lahf
cmp
outsl
adc
call
and
xchg
pop
sbb
hlt
sbb
insb
rolb
pushl
int3
out
dec
sbb
pushl
cmp
inc
mov
cli
cmp
cmp
adc
jg
pop
xchg
adc
pushl
nop
xchg
push
xor
mov
fadd
jle
push
cmp
and
xor
ljmp
cltd
dec
repz
and
cld
rcrl
adc
jbe
stc
mov
outsl
aas
fiadds
rorl
lahf
stc
cld
lahf
in
sbb
data16
das
fnstenv
cmpsl
outsl
iret
out
or
fistps
ja
out
and
aad
push
fiadds
out
aaa
outsl
fstps
out
sub
fbld
xor
pop
push
aaa
mov
aad
push
mov
mov
mov
outsl
pop
fisubrs
push
ja
jg
fldz
mov
adc
out
aad
mov
mov
es
xchg
mov
outsl
or
push
outsb
movsl
cld
mov
xor
dec
push
jns
pop
fsin
mov
jne
mov
out
fucomi
aaa
fldenv
lahf
outsl
iret
into
sbb
insb
cld
fstpt
dec
stc
mov
mov
outsl
mov
cmp
insl
out
int
fnstenv
mov
pop
out
xchg
in
xlat
fstl
mov
sbb
in
outsl
fisubrs
scas
ja
out
dec
xchg
mov
cmp
pushf
outsl
in
dec
mov
jle
fsts
mov
addr16
fistl
out
inc
fidivs
ja
out
push
test
lds
sahf
mov
addr16
shr
out
cmp
fcmovnb
mov
jne
mov
outsl
push
fisubs
out
dec
fldl
cwtl
sbb
test
dec
mov
push
dec
fnstcw
imul
icebp
jl
les
insl
mov
fnstenvs
ficomps
lahf
ja
js
cmp
imull
cmp
fcmovne
out
sbb
fbld
xor
out
lods
rorl
inc
mov
aaa
fldenv
mov
mov
ja
pop
out
mov
fnsave
cmpsl
jecxz
lahf
into
push
mov
mov
outsl
jno
jns
insl
sti
fwait
out
scas
mov
out
fcmovnbe
fnstenv
fsubp
mov
int3
xchg
push
cmc
mov
gs
mov
idivb
push
fildl
add
ficoms
mov
outsb
cmc
fwait
inc
fiadds
cltd
mov
ja
ds
push
int
jne
mov
fucomi
pop
outsl
fnstenv
xor
ja
das
fnstsw
in
fnstcw
pop
ja
daa
mull
pop
fucomi
outsl
aaa
fldz
mov
outsl
data16
fnstenv
cmp
mov
adc
and
push
mull
mov
in
ss
out
cmpsb
out
fldenv
mov
outsl
mov
and
fists
jge
fldln2
mov
outsl
mov
into
mov
xchg
neg
sub
stc
fs
outsl
or
ja
add
outsl
scas
fidivs
ja,pt
out
aad
fstps
and
mov
mov
out
pop
neg
sahf
mov
outsl
push
mov
sbb
inc
inc
mov
daa
out
mov
aaa
mov
or
ja
jl
stc
xchg
mov
in
fnstcw
xchg
fucomi
pop
flds
outsl
outsl
scas
fisttpll
mov
in
sub
outsl
push
fimuls
xchg
out
out
dec
lret
xchg
clc
sahf
push
sbb
fucomi
vhsubpd
test
ja
out
dec
psubusw
mov
outsl
dec
fsubrp
add
ret
dec
jg
mov
cli
cmpsl
rolb
in
cmpsl
std
push
imull
lea
mov
sti
fldcw
mov
les
xor
rorl
push
mov
push
sahf
into
xchg
fisttpl
ja
jg
std
popw
mov
lcall
fldt
pop
and
add
popa
call
or
daa
pushf
outsl
inc
jge
icebp
dec
sbb
jmp
push
pop
add
cli
out
sub
mov
ljmp
call
in
mov
add
ret
cmp
cmpsl
es
addb
inc
arpl
cld
jg
cmp
es
repz
lcall
mov
fldt
and
push
adc
jno
std
pop
test
ret
decl
cli
aas
bound
or
popf
or
fs
xor
mov
xor
jl
jno
sti
lcall
sub
aam
push
jo
call
mov
lcall
jmp
add
sub
lock
stos
dec
mov
adc
xchg
cmp
and
pop
int3
std
arpl
repz
jnp
jg
fimuls
sub
idivb
in
pushf
cmp
lcall
pop
aas
loop
cmp
loopne
sub
inc
repz
mov
push
gs
jg
pop
jp
movsb
ja
into
nop
cmpsb
xor
jg
and
das
fimuls
inc
xlat
loop
sar
paddw
neg
dec
popf
pop
add
inc
movsb
mov
in
jnp
clc
push
mov
pop
adc
mov
dec
std
mov
and
jge
adc
cmpsb
xorl
xchg
stc
jle
in
ror
cmp
lret
pop
mov
imulb
ret
stos
cmp
push
cmpsb
and
cmc
mov
sahf
decl
mov
mov
push
jle
pavgb
jp
adc
fisubs
sbb
sbb
sub
and
add
push
pop
aad
or
sti
sub
push
cld
ljmp
mov
mov
movsl
bound
out
pop
cmp
and
inc
dec
push
gs
clc
inc
lea
sub
lods
jns
insl
mov
js
sub
pop
push
xor
into
or
test
popa
mov
das
jg
jne
mov
leave
add
pop
movsl
sbb
lods
fistpl
addb
mov
sub
scas
inc
xor
xchg
test
std
jge
jl
fimuls
inc
ret
loopne
mov
jmp
das
adc
fcmovnu
lret
mov
mov
aad
or
loop
lahf
cmpsb
inc
xlat
mov
pushl
insl
push
push
cmp
nop
and
inc
into
mov
pop
arpl
outsb
mov
iret
dec
insl
pop
aas
in
addr16
leave
lcall
push
clc
pop
adc
add
test
out
scas
addl
cld
fnstsw
pop
incl
cltd
xlat
mov
push
mov
imulb
cld
fimuls
pop
mov
cmp
jge
outsb
mov
ss
push
inc
dec
jle
rorb
xchg
hlt
push
repnz
xchg
sub
jg
inc
jb
dec
inc
cmp
int3
repz
sbb
fdivrp
adc
cwtl
out
lret
adc
fimuls
pop
adc
leave
lahf
test
out
js
xchg
or
xor
iret
dec
imul
pop
mov
fst
xchg
sbb
cmc
jl
add
cmp
xor
adc
lahf
jnp
sarb
xchg
push
leave
mov
fs
lahf
adc
sub
into
xchg
jb
jl
std
adc
test
pop
xlat
testl
and
cld
in
mov
iret
in
mov
rcrl
mov
test
pop
mov
xor
xor
push
dec
cmp
iret
lods
aaa
testl
mov
jecxz
push
jl
push
outsl
ret
mov
sbb
push
hlt
test
flds
cmpsb
cmc
jg
cs
addb
or
jle
mov
pop
cltd
sbb
inc
stc
sbb
sbb
push
xor
lock
jle
dec
pop
jle
xchg
lods
or
in
add
shl
or
decl
ss
ret
loop
sub
dec
jo
addr16
std
lcall
xchg
popa
mov
fsubrp
arpl
js
shll
cmp
icebp
mov
mov
aaa
pushl
push
psubsw
push
sub
shrb
xor
cmp
jecxz
mov
push
add
popf
fcos
dec
push
push
in
mov
sub
call
shrl
test
and
fdivr
xor
cmp
jae
lods
call
jmp
sub
aas
test
inc
jae
adc
js
xchg
ret
pop
push
movsb
sub
add
fcoml
pop
ret
jge
scas
sbb
and
mov
gs
aas
call
push
xchg
jae
ljmp
jbe
gs
in
fcomps
pushf
jb
push
std
int
imul
ret
dec
and
or
or
es
mov
mov
and
xchg
inc
jl
push
xchg
cmpsb
dec
pop
call
fsubr
negb
std
push
loopne
xchg
call
dec
mov
aaa
jle
sahf
push
fistl
xor
cltd
fs
in
fldcw
mov
add
mov
xchg
dec
shlb
pop
cmp
jo
sti
sbb
movsl
leave
jmp
pop
push
cwtl
mov
repz
xchg
or
lods
in
xor
sub
scas
cmpsl
mov
xchg
gs
sbb
jg
cmpsb
jg
test
ret
or
pop
add
in
cmp
mov
stc
std
aas
sbb
sbb
ljmp
shr
les
mov
xchg
sti
add
mov
xchg
push
dec
lods
lret
out
mov
xlat
es
pop
ljmp
shll
push
jg
push
jge
popf
repz
add
ss
lahf
lret
shlb
int3
xor
mov
sub
adc
scas
mov
pusha
xchg
cmp
loopne
pop
and
xchg
clc
pop
mov
bound
pop
jge
icebp
sti
aas
add
mov
mov
lods
sub
hlt
int
cmp
mov
dec
idiv
pop
sub
mov
ds
movsl
push
mov
or
push
int3
cmp
std
xchg
jle
pushl
sub
cld
mov
cltd
cmp
sahf
and
and
repz
pushf
mov
pop
outsb
push
out
push
cs
pushl
out
andb
add
pop
mov
mov
std
xor
adc
sbb
mov
lods
inc
lahf
mov
inc
outsb
xchg
push
insb
ljmp
les
sahf
jbe
cmpsl
pop
fs
pushf
adc
push
jmp
ss
subl
leave
jecxz
jle
clc
inc
insl
ds
pop
mov
push
jg
adc
ja
movsl
mov
mov
xor
daa
dec
cmc
mov
pushl
jbe
call
sbb
mov
test
fistl
imul
iret
sub
andb
std
push
mov
mov
jecxz
or
jnp
mov
mov
fldl
lahf
pop
insb
and
into
pushl
arpl
rcrl
sbb
mov
push
pop
pop
fildl
pop
mov
repnz
out
outsl
call
push
push
aaa
push
orb
pusha
mov
loop
lods
neg
leave
xchg
inc
test
push
repz
or
sarl
inc
or
aaa
or
and
jp
adc
fst
lahf
aas
pop
adc
inc
xchg
mov
jp
icebp
add
sbb
adc
dec
jl
xchg
std
push
clc
out
adc
cmp
aas
mov
adc
retw
dec
addr16
jl
out
call
and
imul
jge
mov
mov
cmp
js
and
inc
aas
fdivrs
adc
jmp
xchg
out
sub
outsl
insl
outsl
jnp
dec
enter
outsb
imull
add
ret
ljmp
dec
sub
stos
jae
iret
adc
dec
ret
adc
xchg
push
ds
add
stos
imul
pop
mov
jmp
sbb
add
and
xchg
dec
mov
or
std
enter
dec
out
mov
pop
stos
fstpl
and
std
jne
in
cmpsb
xchg
lahf
pop
jl
jno
mov
sti
es
fldcw
in
add
clc
in
cmp
stos
xor
mov
rclb
and
jmp
insl
xchg
imul
add
or
hlt
pushl
sub
add
jmp
lahf
sub
jg
leave
repz
cmp
aam
stc
bswap
and
dec
sbb
sbb
clc
aam
sub
fcomi
scas
push
mov
push
js
sti
pushf
fs
inc
push
movsb
and
pop
lahf
jmp
lret
cmp
or
repnz
jl
pop
inc
cmp
adc
and
sbb
dec
scas
ja,pt
std
int
stos
jns
inc
sarl
pushl
movsl
mov
mov
pop
xchg
or
mov
mov
pusha
clc
lret
dec
mov
loopne
mov
xor
push
adc
jl
jmp
movsb
sub
sub
popf
mov
xlat
dec
pushf
mov
decl
and
gs
out
fnstcw
aas
push
lcall
sarb
mov
in
ret
jae
jl
cmpsb
jmp
dec
push
pop
outsl
xchg
jb
mov
jbe
sub
mov
mov
or
sbb
shrb
cltd
stc
lret
cmp
std
int
aad
scas
sub
jecxz
mov
pop
movsl
jle
xor
ja
movsl
push
add
repz
jno
pusha
jno
std
out
cmc
call
push
pop
mov
xor
sub
add
pop
push
daa
xor
mov
pop
imul
idiv
dec
mov
mov
ja
cmpsb
xchg
lds
inc
mov
mov
outsb
hlt
mov
test
mov
jo
or
mov
push
das
jle
mov
mov
lock
stc
sub
ja
cmp
push
shlb
std
mov
xor
or
call
rorl
ja
push
iret
cmp
lock
test
lock
cmp
or
sbb
test
jg
cmp
jecxz
xchg
and
fwait
push
iret
fisttpll
cltd
adc
rcrl
test
jno
decl
fadds
xlat
lret
sub
fsubrl
jnp
les
rolb
mov
addb
xor
xchg
repnz
addr16
fs
stos
jle
popf
mov
clc
mov
dec
outsb
pop
or
rorb
xor
aas
jmp
movsb
and
push
jge
adc
aas
mov
sub
add
xor
sti
jae
dec
adc
scas
xor
sbb
inc
ljmp
sub
lret
dec
sbb
repz
cmp
scas
and
icebp
inc
frstor
fninit
gs
mov
decl
pop
cmp
cld
lods
or
mov
mov
out
pushl
push
sbbl
sub
jo
add
jl
mov
sarl
mov
cmp
push
mov
je
cmc
jb
clc
cmc
sti
rcll
mov
sub
std
inc
mov
dec
mov
notl
lahf
push
sbb
jl
mov
out
jmp
imul
mull
xchg
adc
adc
fsubrs
jno
dec
ljmp
sahf
je
mov
insl
jbe
cli
lahf
shr
sbb
xor
adc
xchg
jl
decl
or
cmp
fsubrp
mov
cmpsl
lret
decb
outsb
and
stos
sub
std
movb
xor
loop
cmpb
mov
stos
das
mov
mov
sbbl
jle
xlat
into
xchg
jmp
and
cmp
sarb
lods
aad
cmpsb
loop
cmpsl
pop
add
lret
mov
adc
xlat
mov
jae
jle
fisubrl
out
mov
imul
pusha
pushl
orl
mov
pushl
test
cmp
bound
and
iret
mov
ljmp
mov
pop
add
decl
mov
pop
dec
ret
and
ja
bnd
xchg
aam
cmc
fcmovnb
shlb
mov
loope
mov
fdivrp
dec
ffree
xchg
jb
ds
pushl
sub
sbb
jecxz
inc
sub
es
rorb
lahf
push
lcall
cmp
stos
mov
mov
cld
aam
sub
insb
jne
xchg
out
cld
std
and
scas
sbb
out
pop
xlat
push
std
jecxz
inc
lret
je
pop
int3
mov
popf
push
xchg
out
jae
jge
pop
mov
dec
push
pushl
subb
incl
movsb
bound
fidivrs
sub
js
std
ret
mov
fistl
loopne
jl
cmp
sti
fcmovnu
xchg
subl
test
cld
into
lds
adc
neg
out
sbb
aam
sbb
daa
push
ret
jecxz
dec
testl
fisubrs
mov
movsl
sbb
fucomi
sub
mov
jl
imul
aas
inc
dec
int3
pop
pop
lds
pop
jp
lods
call
decl
orb
sti
loop
pop
test
movsl
call
shrl
inc
pusha
push
stos
push
jmp
and
cmc
push
sti
inc
adc
std
pmaxsw
push
and
push
and
jns
xor
push
out
push
int3
push
aaa
sbb
pop
hlt
in
cmpsl
ds
mov
jb
mov
fidivrl
cmp
mov
clc
push
fwait
mov
mov
push
mov
cld
jge
mov
ret
lea
mov
jecxz
dec
push
xchg
mov
inc
mov
mov
ljmp
aas
pop
push
clc
sub
mov
decl
pop
push
and
xchg
add
or
sbb
cmpsl
in
adc
mov
std
mov
cs
xchg
mov
inc
or
aaa
fnclex
rep
ds
xchg
jge
push
dec
push
fdiv
xor
dec
jmp
neg
clc
gs
mov
mov
mov
push
mov
out
add
cs
insl
std
dec
movsb
jnp
xchg
aas
push
pop
lret
std
fnstcw
insb
cld
sub
sub
mov
fadds
inc
shrl
pop
xor
in
jp
jecxz
jecxz
mov
cwtl
jns
mov
sub
das
xlat
jb
in
jecxz
dec
pop
mov
in
stos
paddw
push
lcall
pushf
ljmp
jb
fnstsw
shr
ljmp
mov
jae
addl
test
mov
xchg
mov
call
pop
jmp
cld
sub
gs
cmpsb
not
lea
adc
arpl
xchg
pop
loope
jmp
pop
mov
inc
repz
xor
int
std
imul
or
bound
dec
jbe
sbb
ret
push
jne
pop
idivb
cmp
cmp
pushl
fldl
and
cmp
jg
sub
mov
mov
ror
je
mov
add
push
jns
sti
xor
out
scas
popf
aas
jge
push
addb
test
cmp
rolb
mov
lcall
jmp
jo
push
inc
icebp
mov
popf
sbb
lret
addr16
hlt
adc
in
imul
mulb
rolb
les
je
sahf
cmc
aam
nop
ljmp
cld
jge
cwtl
out
pop
into
mov
jb
cmc
je
incl
mov
adc
xor
in
push
popa
or
ss
test
mov
jle
mov
sbb
js
sbbl
sbb
mov
in
sub
sti
pop
inc
inc
aaa
popf
mov
mov
cmp
test
xlat
jecxz
xchg
pop
xchg
jl
mov
imul
decl
lock
inc
jl
jnp
cmp
repz
std
jo
mov
cmp
hlt
dec
xchg
jno
clc
adc
popf
sbb
and
shll
lcall
clc
or
out
or
and
and
sti
pop
shl
pop
mov
mov
repz
mov
mov
jecxz
mov
or
add
jmp
in
pop
das
cmp
dec
pop
sub
pusha
call
in
std
sbb
jle
ret
mov
mov
jne
jecxz
mov
stos
loope
ret
cld
adc
mov
jbe
mov
pushf
testl
inc
add
adc
jmp
scas
jl
rsqrtps
inc
out
in
std
add
push
daa
iret
xchg
ljmp
push
or
xor
jmp
out
js
xchg
daa
rorl
lret
dec
or
xor
mov
push
jp
mov
sti
sub
sub
test
pop
decl
fildll
sbb
imul
in
ja
lret
xchg
adc
ret
ds
cmp
jmp
jo
mov
dec
aaa
adc
mov
push
aam
push
xorb
fcmovu
jecxz
jne
stc
outsb
test
lcall
cmp
sbb
enter
addr16
rolb
cmpsl
bound
aaa
sar
jl
lahf
xchg
fucomip
int3
je
xchg
out
rclb
sarl
scas
sub
jle
cld
pop
mov
mov
ret
movsl
dec
cmp
jbe
jmp
cmp
ljmp
leave
out
mov
pop
sub
inc
cld
mov
inc
pop
imul
dec
imul
in
decl
aam
and
xchg
ss
daa
inc
pop
incl
ret
stc
aas
and
ds
popl
pop
xchg
and
lods
loopne
pop
pop
pushf
fucomip
xor
scas
addr16
ljmp
xchg
repz
imul
push
std
scas
inc
jp
pop
or
rcl
jo
sub
push
repz
mov
fdivr
icebp
lods
rorl
xlat
cmc
scas
jecxz
jle
lcall
sbb
or
sub
push
xchg
fdivr
push
xor
pop
lcall
sti
mov
dec
scas
mov
dec
cltd
mov
rep
dec
rcrb
test
add
mov
jle
and
cmp
xlat
inc
push
mov
dec
fidivrl
sti
outsl
sti
and
addr16
std
lahf
gs
test
mov
repz
push
xor
cmp
jns
not
leave
adc
add
jge
cli
mov
jo
sub
test
test
dec
dec
out
mov
das
and
jnp
call
sarb
into
rolb
jge
add
movsl
and
or
add
pop
pop
int3
jmp
inc
clc
push
add
andl
mov
mov
fbld
sub
ret
enter
loop
mov
mov
imul
movsl
mov
cmp
outsl
shrl
jmp
scas
jmp
mov
xor
xchg
cmp
pop
repz
adc
lret
imul
xor
call
ret
roll
fiadds
push
js
shufps
jle
xor
fildl
sarb
xlat
jae
mov
loopne
mov
repnz
sbb
lock
push
mov
cmp
outsb
les
loopne
out
jecxz
std
pop
adc
aad
xor
xor
andl
call
sbb
repnz
pushl
lret
das
mov
lahf
mov
fcmovnu
xor
call
inc
pop
dec
pop
popf
imul
int3
testl
xlat
xor
lea
and
insb
call
xchg
jge
jae
sbb
ja
es
imul
std
fistl
jecxz
sub
addr16
sti
lcall
mov
lds
cmp
cwtl
mov
subl
fs
or
fucomp
or
jge
std
notb
sti
jno
aam
pop
ret
pop
insb
testb
dec
es
loopne
push
dec
jmp
int3
arpl
fdivrp
outsb
push
mov
fldenv
enter
and
cmp
das
push
push
aas
cmp
jg
outsl
xor
inc
loop
jecxz
call
pop
add
negl
jl
cmpb
aas
inc
pop
jne
adc
and
popa
pop
std
lahf
sbb
decl
inc
xor
sahf
js
addr16
xor
ret
jmp
pushf
and
mov
inc
pop
dec
xchg
mov
xchg
fadd
cmc
aam
imul
sub
subl
lret
aas
and
iret
xchg
fdivr
xlat
xchg
fs
xchg
out
out
cld
loope,pt
sbb
int3
ss
pushf
push
mov
sahf
je
push
std
sar
mov
insb
cmc
inc
callw
jno
cmp
cmp
mov
xchg
call
xor
cmpsb
in
decl
mov
addl
bswap
imul
xchg
adc
jge
outsb
decl
test
lahf
push
outsl
test
push
pop
fistpll
rcr
out
call
lods
fdivrs
and
jl
jmp
xchg
jne
pop
xchg
data16
je
fstpt
mov
cmp
jo
test
lcall
pusha
add
into
sbb
rcll
jp
loop
push
sub
decl
mov
iret
mov
dec
call
sbb
aad
inc
xor
std
filds
jmp
insl
jg
lock
mov
mov
cmp
sbb
scas
inc
cmp
jecxz
pop
mov
ja
test
mov
aas
or
sbb
stos
in
adc
mov
push
adc
popfw
rol
mov
lahf
pop
jbe
mov
sti
lods
cmp
pushl
sub
mov
arpl
lock
mov
jg
js
negb
repz
ret
push
xor
and
jmp
push
leave
cwtl
jl
sti
cmp
pop
hlt
loop
cmp
xor
mov
je
ja
insl
and
mov
push
pop
aam
pushf
pushl
jmp
in
int3
fisubrl
mov
mov
pop
add
ret
pop
loope
je
pop
push
incl
xchg
lcall
je
decb
sti
sti
jmp
test
sbb
cmc
mov
dec
push
cmp
dec
jp
int
xchg
xor
xchg
stos
push
aad
push
pushl
mov
cmp
jge
out
rcrl
sub
or
aam
add
cmp
sub
xrelease
outsl
call
jns
mov
data16
icebp
idiv
imul
inc
sti
cmp
cld
les
gs
out
fs
cs
lcall
pop
mov
stc
ret
and
icebp
subl
fwait
fsubr
jmp
lcall
out
xor
sub
mov
ljmp
xchg
or
cmp
pusha
pop
addr16
hlt
or
adc
out
sahf
ffreep
inc
inc
xor
xor
dec
je
adc
std
xchg
push
leave
push
adc
add
sub
xchg
xchg
or
push
jge
iret
dec
std
mov
xor
pusha
or
jl
ljmp
imulb
insl
in
je
decl
stos
movl
push
jmp
shlb
sub
fs
pop
add
sbb
lahf
inc
or
jg
iret
insb
mov
leave
sbb
aad
sti
movl
popf
les
push
idivl
jl
and
cmp
adc
fisubl
int
lret
add
adc
mov
pop
xchg
fmuls
cmp
push
adc
ret
adcb
arpl
outsb
mov
ljmp
xchg
imull
ret
shrl
mov
ret
pop
mov
jge
sti
push
repz
and
push
movsb
loope
xlat
inc
xchg
dec
decl
mov
movsl
not
dec
push
test
pop
push
cli
sub
in
mov
xchg
iret
mulb
mov
sti
subl
lds
jle
idiv
jo
into
fninit
lods
ljmp
cmpsb
xchg
lret
sbb
dec
sahf
loop
and
cmp
add
data16
imul
call
ja
sti
movsl
call
push
roll
pop
cwtl
mov
inc
mov
sub
push
ds
outsb
push
incl
mov
jnp
xchg
adc
xchg
movsl
sar
insb
xchg
subb
jmp
mov
dec
mov
add
movsb
pop
clc
outsb
rorl
sti
inc
push
jg
scas
mov
aas
inc
mov
adc
xor
mov
mov
jbe
lods
pop
int3
std
shrb
loop
xchg
sub
scas
addr16
xor
push
add
mov
movsl
pop
fidivrs
stos
lea
xor
ljmp
push
ljmp
inc
xchg
pop
xchg
mov
clc
rcll
icebp
pop
mov
adc
loop
xchg
adc
hlt
testl
cmp
pushl
mov
lret
call
mov
dec
shl
movsb
mov
iret
pushl
insb
dec
int3
pop
pop
pushl
in
test
cmp
mov
ljmp
add
pop
jns
adcb
aad
and
jl
int
popa
mov
sub
mov
and
iret
xchg
pop
js
into
ljmp
ret
popf
std
mov
adc
fcompl
lcall
fst
in
negl
rsm
cmc
insl
ret
in
cli
shlb
and
pusha
mov
and
xchg
rcrb
sti
sarl
int3
arpl
out
jl
or
mov
js
sti
adc
fdivr
dec
jo
pop
insb
push
push
dec
pop
mov
std
aad
push
sbb
or
jle
repnz
and
out
jne
out
pop
inc
leave
push
or
add
inc
das
jecxz
mov
push
or
scas
shlb
sub
in
test
enter
imul
fwait
jecxz
hlt
loope
or
pop
arpl
loopne
jg
dec
and
and
and
repz
adc
jp,pt
sub
push
jle
test
inc
pop
test
daa
movl
je
inc
in
inc
mov
leave
out
xchg
dec
cld
in
scas
clc
push
jne
std
iret
mulb
xor
call
in
add
ljmp
shlb
subl
mov
mov
iret
movlps
mov
mov
in
add
dec
jmp
aas
dec
jae
cmpsb
std
cmc
sti
jnp
loope
xor
insb
icebp
pop
nop
cld
push
lret
stos
in
mov
mov
add
inc
adc
addb
pop
and
ds
push
loopne
xchg
idiv
stos
cmpsb
shlb
mov
push
fimuls
dec
imul
xchg
outsb
or
mov
jns
mov
add
jo
insb
jne
lea
sbb
push
fs
xor
aaa
cmpb
jmp
in
loopne
or
stos
inc
sti
sub
pop
imul
jo
nopl
out
fsubrs
ljmp
cwtl
mov
sti
pop
xlat
fisubl
aad
leave
pop
jne
fsubrl
push
mov
mov
mov
lahf
push
jle
cmp
clc
outsl
icebp
cld
stc
cmpsb
call
shll
outsb
out
xchg
jae
orb
jnp
outsl
cmp
ret
adc
inc
ja
movsl
xchg
push
and
ljmp
jnp
push
je,pt
test
idivl
push
push
and
scas
xchg
jle
pop
adc
lret
jmp
std
sbb
pop
jecxz
adc
frstor
popa
ret
outsl
scas
shll
xchg
lret
imul
cmp
into
jecxz
sub
outsb
push
mov
ror
cmp
rcl
dec
aad
enter
stos
sti
push
inc
jle
push
and
push
jae
ljmp
sub
and
pop
sub
inc
ret
push
test
mov
icebp
xor
push
pop
out
outsl
lea
out
test
aam
scas
mov
hlt
push
ficompl
or
out
mov
pop
jnp
xor
xor
ret
jnp
sbbb
pop
ds
fiadds
lahf
sub
mov
and
leave
out
xchg
icebp
leave
aad
fs
sbb
mov
gs
sub
inc
popa
pop
pop
jge
jns
jge
sub
dec
mov
jo
add
xchg
sti
inc
inc
es
jbe
inc
jp
inc
cmp
bound
add
jp
negl
popa
lock
es
imul
inc
and
add
in
fadd
pop
cmpsb
add
push
push
mov
mov
xor
jmp
pop
jb
lcall
dec
mov
xor
pusha
xor
xor
add
pop
pop
mov
jnp
into
or
sti
fs
push
jecxz
data16
adc
push
push
es
push
and
sub
dec
outsl
mov
not
setnp
movb
setb
pushf
inc
add
neg
rcr
jmp
mov
iret
mov
cld
cwtl
cld
mov
hlt
cld
movsb
call
scas
imul
adc
clc
dec
mov
sub
rorl
scas
outsl
sub
ja
and
out
ja
fiadds
pop
insb
popf
test
ljmp
mov
insl
xor
clc
sarl
jl
mov
adc
std
push
stos
lret
ds
arpl
ds
mov
movsl
movsb
dec
or
cli
scas
lods
xchg
mov
js
jne
in
mulb
and
inc
insl
inc
pop
jne
jge
popa
popa
jns
push
dec
and
clc
incl
dec
xor
cs
insb
add
test
xchg
lcall
movsl
or
add
mov
aas
cmp
dec
push
dec
or
cmp
and
test
daa
add
jmp
das
int
and
shr
rcrl
fsubrs
in
cmp
cmp
popa
orb
xchg
cmp
clc
jbe
iret
push
in
sub
insl
leave
ljmp
inc
in
cltd
aad
shl
leave
shl
leave
cmc
in
cmc
sub
dec
pop
sahf
mov
shl
stc
push
int
fisttps
jnp
sbb
cmp
ja
jae
imul
or
repz
pop
xlat
fwait
lods
ja
daa
out
fstpt
or
mov
cli
jl
jbe
fistpll
negb
and
pop
sub
ffreep
xor
xchg
xorl
jno
cmpsb
ja
lods
out
mov
insl
xor
xchg
aas
fbld
filds
clc
dec
fistpl
and
inc
das
mov
pop
repz
out
sti
lahf
cli
sbbl
xchg
call
sbb
mov
neg
jl
jl
jl
jl
jl
jno
icebp
xchg
sti
icebp
jmp
jecxz
out
repz
mov
out
icebp
mov
iret
fisttpl
outsl
pop
into
repz
cwtl
lcall
mov
aam
cmp
xor
fists
xchg
mov
jo
adc
shr
les
sbb
cmpb
aam
mov
pop
fists
das
or
add
jg
pop
hlt
or
sbb
add
in
mov
mov
out
aas
mov
mov
mov
dec
pop
jns
cmp
fcoml
and
sti
mov
in
cld
jl
enter
les
int
imul
sahf
imulb
push
imull
into
mov
and
mov
mov
mov
fdivr
cmpsb
repnz
ljmp
inc
pop
inc
fsub
insl
movq
jecxz
cs
ds
ss
ret
pop
jmp
pop
dec
push
jg
xor
adc
scas
jp
push
pop
mov
fadd
lds
adc
inc
ljmp
mov
in
or
inc
aad
pop
push
jecxz
jmp
sbb
stos
adc
clc
adc
fxch
xlat
fbld
or
lods
xchg
popf
jg
cmp
mov
lods
int3
out
sub
ja
out
jl
rcrb
push
fisttpll
mov
ret
scas
cmpb
xor
mov
inc
pop
jnp
scas
pop
and
lcall
jmp
push
push
scas
pop
pop
pop
es
fisubrs
mov
xlat
and
jge
sti
sub
xchg
mov
fildll
mov
scas
pop
repz
and
lods
out
push
cmpb
fsubr
mov
mov
inc
jg
push
mov
sti
dec
sar
adc
fisttpl
mov
scas
lcall
movsl
pop
mov
cmpsb
sti
sub
jno
sub
jns
sub
mov
cmpsb
pop
pop
and
imul
xchg
sbb
scas
fsubs
cmpl
mov
sarl
ret
inc
cmp
jle
mov
pop
mov
scas
fs
scas
sbb
lahf
inc
sub
test
stos
insl
push
mov
popa
scas
mov
mov
push
jl
imul
xor
popf
test
mov
dec
pop
xchg
mov
outsb
movsb
xchg
fldl
into
test
sbb
cmpsb
dec
scas
dec
jb
pop
fisttpl
xlat
scas
insl
pop
outsb
add
mov
pop
fsub
mov
push
add
dec
fldl
pop
lcall
mov
pop
out
lcall
mov
outsb
mov
ficoms
and
faddl
movsb
lods
xchg
scas
insb
or
sub
shlb
and
not
insb
insl
adc
push
pop
or
cs
scas
push
cmpsb
lahf
je
stos
dec
repz
mov
mov
xchg
push
xor
inc
push
repz
add
pop
mov
inc
pop
dec
fsincos
ljmp
pop
test
adc
scas
mov
outsb
mov
insb
mov
or
imul
add
sbb
into
and
testl
jns
adc
inc
adc
lea
and
fildll
fisubrs
push
xor
imul
scas
cwtl
idiv
lods
fucomi
fbld
fistpll
sub
filds
stos
sub
ffreep
int3
cltd
xor
data16
bound
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
out
lret
sub
xor
imull
jae
stos
push
mull
cltd
imull
pop
fildll
in
pop
iret
fsubr
mov
iret
cmp
scas
ret
pop
fildl
idivl
adc
fiadds
or
add
ss
dec
ror
pop
insb
daa
adc
scas
mov
ds
mulb
add
ja
and
leave
mov
add
in
fldcw
mov
pop
js
pop
mov
adc
aam
add
insl
jne
stc
out
stos
into
fbld
xchg
xchg
dec
jl
push
insl
daa
mov
sbb
js
scas
push
data16
mov
jmp
cwtl
jl
fsubr
adc
notl
push
fbld
out
jmp
mov
loope
mul
push
push
add
and
lret
insl
jo
add
fisttpl
unpcklps
mov
or
repnz
add
lods
adc
adc
incl
sahf
adc
adc
dec
into
inc
dec
dec
cmp
and
mov
mov
inc
ss
sub
out
cs
es
pop
lods
sbb
rclb
out
je
cmpsb
frstor
inc
pusha
into
add
aas
mov
xor
push
std
mov
add
test
and
fimuls
dec
or
pushf
test
test
fscale
mov
cmp
fstpt
cltd
jl
jg
fstpt
cmp
js
jle
fldt
aas
fnsave
in
aaa
inc
outsb
iret
jl
push
ds
cli
or
jp
pop
stos
cmp
cmpsb
ss
adc
mov
int
inc
inc
mov
sbb
mov
jne
sub
pop
sub
adc
sti
adc
xor
jns
movsb
pushf
and
mov
lock
inc
pop
cmp
inc
aas
xchg
cmp
dec
out
adcl
sahf
imul
mov
or
pop
repz
sbb
and
jnp
xor
and
rol
dec
and
adc
pop
or
xchg
mov
scas
sbb
insl
jg
cmc
iret
jg
mov
mov
and
jbe
test
leave
iret
cmp
enter
sbb
add
hlt
cli
mov
jb
dec
out
into
leave
dec
adc
jmp
dec
les
jmp
xchg
stc
in
call
outsl
xor
jb
shl
push
ljmp
fistps
scas
add
cmp
mov
sbb
pop
loopne
xor
add
mov
das
cmp
or
pop
idiv
mov
frstor
ucomiss
insl
in
push
clc
imul
out
fisubrl
daa
fistpll
mov
mov
faddp
idivl
inc
loopne
fstpt
enter
scas
jg
pop
sbb
pusha
xor
xor
loopne
bound
jb
dec
mov
divps
mov
fists
dec
or
ds
es
ds
and
mov
cld
clc
dec
pop
or
outsl
jp
lcall
jbe
sti
mov
mov
xorb
inc
shll
and
jmp
dec
adc
cld
mov
xor
rep
xchg
movsb
popa
xor
fdivrl
and
and
adc
jp
push
pop
cmp
out
outsl
or
jg
fdivrs
out
scas
sub
inc
ja
aam
scas
mov
out
fidivs
inc
hlt
xchg
aam
dec
imul
mov
mov
scas
mov
xlat
push
in
and
xchg
mov
push
jnp
mov
mov
jno
lahf
lret
xlat
shlb
adc
push
mov
popf
dec
in
je
jnp
out
mov
ss
mov
out
cmc
jmp
mov
mov
imul
ljmp
sbb
push
fs
not
stc
mov
and
jp
addr16
cli
or
mov
js
sbb
hlt
pop
out
xorb
pop
std
adc
xchg
out
mov
cmpsb
xor
clc
scas
dec
inc
adc
sbb
add
fneni(8087
fxsave
push
in
fcoml
mov
std
xor
cwtl
int
scas
sbb
xorb
push
test
dec
faddl
or
add
fistpl
out
out
ljmp
outsl
fdivrl
notl
pop
push
push
push
jns
out
inc
push
push
jmp
stos
andb
and
lret
andl
div
push
jbe
notb
out
push
cmp
std
out
arpl
xchg
ret
jg
movsb
jb
xchg
mov
iret
aas
mov
neg
push
xchg
aaa
xor
iret
pop
iret
int3
mov
mov
outsl
imul
or
stos
cmp
sub
in
pop
scas
ljmp
std
and
and
in
scas
or
clc
mov
testl
mov
out
fildl
mov
es
jp
imul
or
sbb
dec
pop
insb
and
outsl
sub
or
cmp
jg
push
fcoml
dec
xchg
jl
out
xchg
das
in
decl
or
nop
call
neg
mov
data16
xlat
mov
out
xchg
scas
xchg
movd
jecxz
orps
fbstp
xor
testl
and
icebp
popf
clc
stos
xchg
inc
xchg
cmp
jp
jle
dec
mov
and
and
shll
cmc
shrl
in
outsl
nop
daa
inc
enter
pop
sbb
sub
push
and
adc
mov
sbb
jmp
xchg
je
rorl
aad
pop
sahf
aaa
push
mov
test
mov
aaa
add
fimull
dec
jle
jg
aaa
jae
jns
xchg
xlat
outsb
pop
jg
in
out
fildll
mov
enter
out
data16
mull
xchg
mov
pop
mov
daa
fildll
lods
in
ja
inc
mov
in
mov
mov
pop
out
jno
xchg
dec
dec
xchg
cli
push
lea
and
mov
dec
pop
mov
mov
fsubrl
fbld
retw
popf
dec
xchg
aam
mov
hlt
push
mov
ss
es
cmp
jno
adc
and
mov
fistpll
fstp
cmp
pop
lock
fildll
xchg
shrl
repz
sti
mov
aad
fxam
mov
outsl
jmp
ja
out
fld
clc
and
daa
hlt
jno
cmp
int3
outsl
inc
loopne
xlat
fisttps
and
fisttps
aad
xor
xchg
in
xchg
xchg
jl
mov
mov
outsl
jmp
cs
jecxz
mov
outsl
fcmovnu
outsb
mov
rorl
outsl
lret
fisubrs
out
ret
into
fnstcw
fsubrp
mov
mov
fldcw
fisubrs
mov
mov
pop
outsl
fisubrs
in
jg
xchg
mov
inc
mov
scas
flds
fmulp
mov
jnp
fnstenv
fistpll
ja
out
sub
outsl
insb
fisubs
jl
pop
out
mov
pushf
mov
outsl
lods
ficoms
mov
dec
mov
outsl
in
fiadds
cld
ja
out
or
aaa
outsl
sub
ja
out
dec
sub
pop
mov
outsl
insl
fisubs
mov
jbe
outsb
bound
pop
push
push
dec
dec
inc
ds
xor
sub
and
sbb
iret
test
xlat
jmp
mov
fcomi
mov
jp
je
inc
xor
inc
xchg
push
dec
lret
and
xor
cs
cmp
imul
fwait
lahf
daa
xchg
xchg
dec
cmp
ja
aaa
inc
push
xchg
aas
and
xor
inc
pop
adc
call
push
jbe
pushw
jp
inc
push
fwait
xchg
xchg
mov
xchg
lea
notb
adc
out
jnp
sti
std
es
xchg
inc
repz
lods
divl
aam
out
jmp
out
mov
jecxz
fildll
mov
xlat
xlat
call
cmpl
sar
or
pop
mov
dec
mov
add
push
insb
inc
cmp
mov
ret
std
iret
mov
mov
scas
jnp
xchg
lock
mov
loop
divl
fwait
mov
lahf
jae
fstpt
jnp
cmpsl
std
jbe
mov
xchg
jmp
push
aaa
fwait
aas
lahf
xor
or
iret
xchg
mov
loop
mov
mov
outsl
insl
imull
scas
jae
testl
jg
xlat
jnp
dec
jmp
in
inc
ja
scas
divl
mov
mov
outsl
std
mov
or
sbbl
arpl
outsl
out
inc
arpl
outsb
aaa
dec
sub
pop
cvtdq2ps
negl
jae
mov
aaa
iret
sub
sub
neg
jnp
push
sbb
dec
push
repnz
xor
comiss
pop
testl
loope
jae
aas
scas
fwait
popa
idivl
repnz
xor
call
not
das
std
mov
aaa
sub
inc
imull
jg
dec
testl
std
pop
push
xlat
lods
mov
jo
pop
pop
and
xchg
pop
stos
scas
divl
mul
movq
or
pop
sbb
mov
imull
rcl
std
out
testb
dec
mov
neg
jecxz
sbb
sub
neg
lahf
es
orl
fwait
sbb
mov
negl
fwait
imull
div
iret
jnp
xchg
jp
std
lods
lret
xchg
testl
fbstp
negl
std
out
lret
jns
fwait
ret
mov
or
hlt
mov
das
neg
pop
outsb
push
adc
push
push
loope
mov
aaa
insl
imull
pop
ss
xchg
fcoml
fcompl
aam
jae
fwait
cmpsb
mov
ja
loope
fwait
xchg
jg
sbb
mov
into
mov
insb
and
mov
iret
in
das
mov
xlat
in
cmpb
push
repnz
mov
mov
std
iret
fnsave
aaa
test
neg
ret
daa
mov
mov
imul
bound
xor
out
pop
es
cs
jno
pop
out
push
fbstp
dec
ret
dec
std
dec
vmaskmovdqu
shl
imul
pop
push
idivl
std
add
std
cmp
int3
stos
xor
fldcw
adc
addr16
jmp
and
es
mov
cmpsl
subb
pop
arpl
mull
jnp
sbb
jmp
push
jae
in
lods
or
not
push
xchg
call
loope
or
fucomip
push
xlat
aaa
mul
add
jnp
out
stc
xor
icebp
out
xchg
shl
jnp
xlat
in
std
ffreep
aam
imull
pop
jmp
mov
xor
fwait
loope
aas
pop
idivl
das
shll
mov
dec
pop
fnstsw
aaa
fdivp
aad
scas
sub
jnp
shll
push
xlat
lods
xchg
divl
leave
lahf
xchg
sub
mov
inc
lds
rcr
cmp
aam
jg
mov
aaa
iret
fwait
jmp
stos
sbb
sbb
fsubrl
out
icebp
lods
std
test
sbb
cmp
fsubl
testb
push
sbb
mov
clc
mov
mov
test
push
fdivrl
mov
test
xchg
std
repnz
cmp
jnp
idivl
out
movzbl
mov
jge
out
idivl
jne
imul
div
cmpl
insl
call
imul
lret
mov
std
mov
push
and
loope
arpl
inc
xor
mov
push
mov
out
mul
mov
pop
sbb
xchg
idiv
xlat
jnp
std
inc
push
cmp
cmpsb
xchg
divl
xor
lahf
jnp
out
outsl
bound
andl
daa
inc
aaa
sub
jp
fildll
std
and
xor
xor
xchg
inc
jnp
lahf
and
jmp
sbb
cmpsl
aam
sub
loop
out
mov
bnd
xchg
mov
sarl
out
adc
or
stos
mov
daa
ret
jmp
dec
cltd
notl
inc
fnstcw
sarl
inc
add
add
cld
mov
and
jecxz
std
lock
iret
loopne
loopne
pusha
in
mov
mul
fdivrl
fsubrs
not
push
std
int3
cmpsl
call
out
pop
cmp
xor
mov
idivl
push
divl
mov
lods
jg
mov
scas
push
negl
mov
adc
push
stos
iret
mov
pushf
mov
negl
mov
fmull
xchg
fwait
daa
or
jmp
mov
mov
in
sub
nop
dec
lret
xchg
gs
lahf
jae
leave
jae
pop
mov
cmpl
mov
enter
notl
es
popa
imull
jl
std
js
mov
idivl
divb
test
insb
std
push
or
out
pusha
scas
pop
fistps
lret
testl
jns
mov
jae
mov
jmp
std
inc
dec
mov
insl
mov
cmp
lahf
fsubr
push
mov
aaa
jb
pop
sub
jnp
daa
xorl
sub
scas
pop
and
and
push
mov
dec
mov
and
cmp
neg
out
stos
and
xlat
subl
mov
not
sbb
stos
adc
filds
jae
fwait
idivl
push
test
push
cmpsl
repnz
jnp
sbb
fmull
push
out
lahf
or
lret
aaa
or
popa
push
sub
add
jnp
imul
xchg
xchg
rol
stc
lret
lahf
enter
xchg
test
bnd
mull
call
fwait
lahf
out
ja
mov
das
inc
out
lods
testl
fistpl
xorl
jge
negl
fisttps
leave
fwait
shl
xor
stc
iret
push
stc
lret
mov
lods
mov
mov
sbb
cmp
fsubl
pop
stos
stc
push
maskmovq
testl
mov
out
mov
lahf
mov
push
push
idivl
out
scas
cmpsb
aaa
imull
xchg
fwait
pop
mull
xchg
stc
jno
push
negb
jae
mov
xchg
scas
inc
sbbl
testl
fdivrl
out
pop
cmp
neg
arpl
sbb
pop
mov
mulb
jno
push
cmp
pop
push
imul
push
push
imull
aas
cli
arpl
divl
sbb
jnp
xchg
pop
pop
sbb
push
push
out
xchg
lahf
in
push
mov
negl
jae
mov
xor
jg
xorl
dec
dec
inc
pop
inc
dec
sti
mov
test
xchg
imul
das
je
idivl
out
popf
das
jae
fisttpl
add
fwait
adc
xchg
sub
push
testl
and
ljmp
mov
push
iret
cmpsb
mov
and
jg
negl
stc
inc
lahf
outsl
das
scas
mov
or
pop
xlat
mov
test
imul
aaa
sub
pop
stc
fistpll
lods
daa
pop
div
dec
mov
out
stc
fisttps
ljmp
dec
sbb
mov
mov
idivl
inc
sti
jecxz
and
daa
mov
dec
xchg
clc
sub
stc
cmp
jae
repz
out
daa
fldt
insb
push
xchg
cmc
jbe
fcompl
jo
cmp
fmulp
xchg
fidivl
daa
cmp
jae
rcrb
mov
adc
jmp
iret
pop
add
out
dec
das
hlt
das
lock
jg,pn
lods
add
lret
and
dec
xchg
sarl
push
into
ret
inc
lock
jmp
pop
outsb
mov
lahf
out
mov
popf
dec
pop
shll
test
orl
sbb
push
add
hlt
fmul
shl
xlat
in
adc
and
dec
mov
push
sub
jmp
sbb
xchg
psllq
fistl
xchg
ret
jge
pop
out
fildll
scas
shll
inc
cmp
stc
jecxz
js
mov
xor
iret
imul
ja
mov
ret
aas
jecxz
xchg
mov
dec
mov
das
sti
fistpl
negl
popf
ret
dec
es
fiadds
push
fwait
push
fists
fnsave
mov
cli
cli
aaa
pop
iret
jge
fsubrl
lahf
push
int3
mov
out
repz
out
jecxz
rcll
mov
dec
xor
pop
jg
aas
sub
mov
scas
repz
out
add
ret
jp
repz
mov
xchg
jno
cs
mov
xlat
out
fmul
lret
outsl
mov
pop
mov
repz
xchg
jmp
mov
mov
sbb
cs
dec
mulb
js
jae
rorb
adc
mov
incl
int
repz
movsl
sub
in
push
dec
ficomps
dec
fidivrl
inc
pop
lea
pop
lahf
mov
aad
out
pop
xlat
jbe
sub
lret
sbb
jo
xchg
mov
lahf
sahf
fsubp
scas
and
lret
jne
cli
jbe
outsb
cmpsb
and
stos
dec
jbe
jecxz
outsb
jecxz
inc
fistpl
fucomip
inc
mov
mov
shll
push
pop
push
pop
out
pushf
pop
repz
je
iret
sub
lea
inc
stos
mov
mov
inc
cli
pop
loop
pop
cmpsb
and
out
jecxz
repz
fwait
xor
push
jle
daa
in
outsl
fistps
jbe
mov
inc
repz
fisttps
clc
mov
sahf
adc
idivl
outsl
sbb
lcall
jg
outsb
or
pop
xchg
mov
inc
outsl
ud2
addr16
push
mov
sti
sub
jg
fists
jle
scas
daa
mov
mulb
fidivrl
ljmp
xchg
fcomip
cmpsl
addr16
mov
pop
mov
dec
out
in
ret
jge
roll
neg
lcall
mov
cmc
hlt
test
fstl
insl
addr16
jg
pop
out
jnp
jns
mov
out
arpl
push
ficomps
mov
cmp
arpl
mov
in
jbe
into
and
iret
das
push
insl
mov
push
jge
or
pop
fstpt
outsb
movsb
fcompl
xchg
stos
push
cs
lret
mov
jg
das
out
iret
mov
push
int
dec
lahf
fildll
or
loopne
aaa
ret
cld
inc
leave
outsl
cs
scas
xchg
sub
mov
pop
out
scas
outsb
jno
addr16
push
in
out
cmp
pushf
xchg
and
dec
loope
aam
cmc
out
jmp
fnstenv
xchg
fldt
incl
push
inc
fnstcw
jg
out
fimuls
fpatan
adc
cld
stos
lock
fisttps
scas
adc
cmp
lret
lahf
cmc
push
stc
mov
jmp
jle
jecxz
jg
pop
lcall
fwait
popf
mov
lods
fisubrs
out
int3
in
insl
cmp
mov
cmpsl
aas
cmpsl
dec
fistpll
mov
pop
push
call
sbb
push
pushf
mov
xchg
cld
mov
mov
xchg
inc
push
sub
cmp
inc
jecxz
out
test
inc
fisubs
adc
sti
int
fists
les
xchg
jg
pop
negl
xchg
sti
jl
stos
lahf
jge
fsubrl
outsb
idivl
and
mov
lret
xor
adc
push
sbb
push
xchg
push
mov
xlat
pop
cmp
stc
popf
into
jns
out
jnp
push
in
je
jns
jae
cmp
aad
inc
xor
cltd
inc
mov
lret
sub
dec
mov
cld
mov
arpl
pop
xlat
mov
mov
jmp
mov
cmp
dec
fmuls
stc
iret
outsl
mov
push
inc
dec
outsb
sub
sub
cmp
cmp
fwait
int
outsl
stos
jne
push
push
gs
out
decb
push
sahf
and
pushf
scas
rep
sahf
out
lcall
fadd
das
push
stc
sbb
push
shl
frstor
pop
mov
inc
mov
ljmp
cmp
mov
cmc
pop
jbe
fstps
clc
ja
stc
sub
popf
fbstp
jg
push
sub
jg
popf
inc
shrb
ds
scas
mov
push
mov
adc
mov
mov
and
lods
insl
in
out
fldt
pop
sbb
mov
aaa
sbb
or
adc
lahf
sti
cmp
lahf
shr
rol
iret
pop
jl
test
cmp
push
cltd
outsb
xchg
jmp
jne
scas
adc
or
gs
test
push
in
iret
mov
in
loope
xchg
cmpsl
sti
fwait
cmp
xchg
mov
popf
insb
fisubs
data16
pop
imul
mov
fwait
inc
xchg
xchg
daa
pop
xchg
out
or
sahf
sti
xchg
scas
sub
cmp
push
idivw
mov
aad
dec
sahf
jne
aaa
mov
testb
jecxz
jg
insl
mov
sbb
sbb
dec
jge
mov
push
inc
popf
dec
mov
in
xlat
jmp
xchg
lods
pop
shlb
inc
and
cli
outsb
mov
fcmovnu
pop
daa
pop
and
jmp
es
lret
cs
xchg
pop
lret
insb
ret
dec
out
mov
jmp
xor
shr
fldt
inc
xchg
xchg
sub
movl
and
push
pushf
push
shrb
pop
ja
mov
pop
gs
outsl
sar
jne,pn
push
int
fistps
mov
jecxz
fsubrs
jae
lods
pop
es
divb
int
andl
stc
dec
arpl
push
int
fcoms
xchg
out
rcrl
cmp
sbb
mov
into
push
mov
in
out
ficomps
movsl
mov
fimuls
adc
mov
daa
into
aas
outsb
dec
sahf
iret
fwait
jg
imul
cs
jnp
mov
sar
mov
jp
into
xchg
cmc
into
gs
mov
aas
into
lahf
fimuls
mov
push
push
fistpll
icebp
cmc
and
lret
test
adc
es
outsb
imul
mov
xchg
mov
in
cmp
ds
sahf
pop
pop
lret
adc
cli
jbe
stc
jge
cmp
scas
lea
xchg
push
mov
aam
scas
test
mov
insl
jmp
ds
imul
mov
sub
sub
mov
mov
xlat
pop
lea
out
push
pop
insl
in
cmc
in
inc
in
dec
stc
inc
popf
stc
dec
mov
pop
jns
int3
mov
loopne
push
mov
dec
std
xor
int
push
xlat
push
pop
mov
std
jnp
jecxz
insl
cmp
ds
cmp
dec
mov
iret
addr16
iret
mov
maxps
sahf
addr16
xchg
fcmovnb
fldenv
test
out
push
fcoml
pop
mov
insl
es
outsl
pop
xor
lea
ret
cmpsl
lods
mov
btr
cmc
daa
lret
mov
arpl
xchg
insl
lret
push
jecxz
lcall
ljmp
lea
out
lea
sti
mov
cmpsl
mov
in
pop
cmpsl
lea
jle
arpl
ret
xchg
popf
out
mov
push
cmp
push
call
push
lock
es
fidivl
cmp
ficoms
sti
mov
mov
ret
push
fldt
and
in
dec
pop
into
in
xchg
addr16
and
lock
imul
inc
das
push
jmp
sub
cld
jae
jge
cmp
cld
insb
push
jmp
scas
mov
mov
aaa
insb
pop
mov
lret
pop
sub
ds
popf
test
inc
lods
push
repz
lahf
mov
into
mov
sbb
pushf
dec
sbb
popf
inc
pop
mov
or
mov
or
jge
daa
shl
js
fwait
pop
insl
dec
lret
push
cmp
idivl
push
arpl
or
mov
movsl
xchg
or
jmp
mov
cli
in
iret
adc
and
jnp
stc
mov
xchg
dec
xchg
inc
sbb
pop
jmp
mov
in
out
pop
dec
mov
pop
in
cs
outsl
ss
bsr
cmc
addr16
addr16
ret
jmp
xorl
insl
stc
mov
lods
ja
call
inc
idiv
dec
mov
pop
jg
xchg
data16
push
lds
pop
and
aas
lret
outsl
cmp
ffreep
outsl
imul
popa
sub
mov
fs
lret
pop
stc
outsb
push
clc
cmc
fwait
pop
dec
mov
int
mov
xorb
xor
mov
sahf
add
jne
lds
sbb
jge
scas
imul
or
fidivl
sub
jg
fistps
out
je
inc
mov
orb
idivl
frstor
das
in
dec
stc
mov
pop
sti
adc
aad
push
outsl
pop
les
add
cmp
fnsave
lods
lods
xor
jge
mov
sahf
scas
mov
in
aaa
dec
jns
fildll
imul
cmp
jmp
mov
xchg
test
mov
fucomip
pop
jae
dec
jge
sub
scas
push
mov
cmp
scas
lret
cld
sub
inc
sbb
repz
fistps
mov
jl
or
mov
addl
gs
popa
pop
ds
add
shl
add
adc
imul
fimuls
mov
into
jne
jbe
in
out
mov
lahf
lahf
inc
stc
jne
dec
pop
in
push
xchg
fcoms
aaa
out
pop
cmc
and
mov
mov
stos
fstp
mov
push
push
adc
push
dec
cmp
popf
lods
push
cmp
xor
and
pop
repnz
mov
rcll
cs
das
inc
fildll
es
mov
lods
out
jg
push
lahf
dec
pop
dec
rorl
scas
jmp
jle
or
repz
aaa
xlat
outsb
scas
dec
dec
mov
je
out
cmpl
scas
sub
das
test
outsl
packsswb
cmpsl
mov
ss
cmc
dec
dec
pop
jg
jns
scas
shrb
lock
mov
out
test
out
dec
fstpt
mov
push
sub
stos
cmc
repnz
pop
sbb
into
out
hlt
fiaddl
outsl
sub
dec
into
or
and
test
pop
xchg
mov
int
xchg
and
mulb
sub
pop
jle
fbstp
mov
fidivrl
ljmp
out
outsl
sbb
xor
jb
popf
fisttpl
pop
out
into
sbb
lahf
inc
stos
out
dec
ret
pop
sub
jl
adcl
mov
ljmp
pop
lods
mov
adc
xchg
scas
pop
daa
fistpl
daa
or
dec
mov
hlt
aam
in
ds
jl
into
xor
xchg
dec
dec
cmpsl
or
jmp
add
mov
inc
mov
lahf
add
out
xor
mov
jb
mov
fcomi
inc
mov
mov
mov
divl
pushf
mov
in
out
mov
stos
data16
cmc
pop
mov
notl
xchg
and
lock
in
testl
mov
mov
dec
jnp
imul
sbb
fistpl
je
outsb
xchg
popf
sub
pop
clc
mov
stos
mov
dec
ficoms
sub
outsl
hlt
in
addr16
gs
lahf
jecxz
xor
jae
push
sbb
int3
push
jmp
pop
mov
shll
idiv
pushf
or
pop
mov
fcomi
in
repz
xor
sub
pushf
movsb
iret
fwait
push
int
cmovg
mov
sub
sbb
cmpsl
sti
fwait
addr16
enter
out
fidivs
pushf
lea
lods
call
sbb
add
vmaxsd
lret
fists
dec
add
gs
aad
fisubs
stos
inc
pop
pop
dec
mov
xchg
mov
fisttpl
iret
mov
xlat
inc
lret
inc
or
pop
jnp
outsl
xlat
cs
imul
fidivs
cmp
mov
stos
in
mov
push
mov
xchg
je
jae
jbe
out
pop
cmc
fldl
test
pop
pop
mov
push
out
out
fdivr
in
vmread
mov
mov
cmp
lods
sahf
cmp
data16
in
adc
mov
lods
fdivrs
lahf
or
sbb
push
stos
movsb
ss
out
cmp
iret
mov
inc
cmp
out
jne
add
xchg
mov
sbb
mov
shrl
ja
test
stc
and
mov
inc
neg
ds
int3
dec
outsl
pop
cmc
imul
int
sahf
push
mov
lods
sub
test
in
or
in
mov
add
das
ret
mov
sahf
out
icebp
xor
dec
jg
and
jp
or
mov
push
into
imul
sub
out
or
jg
add
add
pop
or
inc
ljmp
addr16
mov
mov
and
in
imul
jg
fdivs
sbb
fistpll
push
rcrb
mov
scas
aaa
fisubrs
iret
dec
aas
imul
mov
in
out
lods
std
cmc
test
add
fdivl
stos
cmpsb
mov
mov
scas
xchg
dec
dec
or
arpl
outsl
dec
orb
fistpl
iret
icebp
aad
js
outsl
inc
les
pop
push
movsb
pop
in
pop
jmp
sbb
das
jecxz
sbb
daa
iret
jmp
dec
push
aam
sahf
mov
daa
jnp
cld
xor
aaa
insl
outsl
sti
gs
data16
hlt
xlat
jbe
jl
jae
mov
sbb
cmpsl
mov
push
aas
lods
arpl
rcrl
mov
inc
xor
dec
icebp
lea
stos
push
add
ror
movsb
lock
cmpb
into
jnp
push
hlt
mov
push
repz
adc
nop
lahf
outsl
mov
push
sub
outsl
pop
out
jg
mov
xchg
imul
mov
insl
outsl
in
lods
fistpl
inc
inc
mov
jge
mov
popf
into
arpl
mov
add
lret
movsb
loopne
cmc
cmpsl
xchg
es
dec
enter
mov
arpl
mov
sub
imul
push
lret
pop
popf
push
cmc
int3
dec
fldcw
jl
stos
out
pop
inc
fists
xchg
test
pop
out
fimull
xchg
notl
in
or
hlt
pop
je
outsl
mov
nop
sub
js
fwait
cwtl
mov
insb
scas
lods
mov
jne
repnz
ss
imul
lret
je
pop
inc
cli
sub
inc
sbb
add
pushf
xor
ja
je
mov
lods
in
push
pop
out
mov
out
and
icebp
mov
arpl
inc
and
pushf
stc
cwtl
js
imul
inc
push
in
jbe
cs
outsl
incb
gs
lret
movsb
sub
mov
push
shll
sar
out
aas
mov
cmp
pop
icebp
sbb
pop
aad
adc
dec
xchg
cmp
aas
sti
cs
inc
xchg
stc
fstpt
dec
fsubrs
popf
cltd
push
sub
xchg
lret
pop
outsb
mov
hlt
imul
lret
push
daa
nop
stc
dec
mov
and
pop
movsl
pop
fildll
sbb
test
stc
dec
es
scas
pop
mov
imul
push
xchg
pop
push
ljmp
push
stos
test
das
jp
mov
cli
or
iret
mov
dec
movsl
out
xchg
jne
stos
outsl
xchg
add
jns
scas
push
icebp
daa
ret
call
pop
shlb
mov
sbb
into
movsl
movb
divb
es
push
mov
js
repnz
sbb
mov
iret
sbb
lods
outsl
rep
add
mov
int
addr16
pop
out
scas
imull
pop
daa
std
adc
out
incb
sbb
xchg
dec
in
pop
movsb
and
sti
scas
shll
movsl
lea
lcall
push
aaa
sub
push
aad
or
push
lods
fisubl
mov
xchg
dec
sbb
xor
cmp
popf
xor
push
cmc
dec
mov
pop
fs
lahf
fisttpl
out
pop
mov
mov
shl
sub
into
jp
jle
dec
pop
daa
pop
aam
sti
mov
mov
jge
lods
mov
mov
mov
dec
inc
xor
push
cmovnp
mov
push
adc
and
xchg
fildll
das
lret
lods
or
mov
xor
xchg
lret
push
jg
out
and
pop
mov
and
out
sbb
icebp
push
lahf
mov
pop
cmp
pusha
jmp
xchg
cmp
iret
sub
outsl
xchg
fwait
test
out
mov
out
sbb
cmp
xchg
jg
jne
fildll
lret
out
in
and
mov
inc
in
pop
push
sub
jmp
out
pop
mov
cmp
and
and
fstpt
pop
mov
mov
push
in
fisubrl
je
mov
lret
mov
mov
das
mov
in
lret
lods
iret
jg
mov
fcmovne
cmc
mov
lret
cmp
cmp
sbb
scas
out
fstps
je
ja
out
pop
dec
cmpsb
ficoml
inc
mov
dec
testl
push
lahf
repnz
cmp
in
xchg
mov
mov
lret
inc
inc
lret
mov
out
cmp
push
mov
and
iret
iret
pop
sub
xchg
into
mov
xchg
movsb
lret
sbb
in
das
cmpsl
jae
leave
add
mov
dec
mov
movsl
push
mov
lret
sub
in
lret
enter
adc
out
xor
idivb
imul
iret
and
cmpsl
lret
xchg
xchg
lods
sahf
jg
sbb
inc
mov
test
out
sti
sub
mov
inc
aad
out
and
xchg
mov
in
imul
push
xchg
lret
aas
outsb
or
filds
inc
ror
fistpll
gs
mov
push
push
lfs
jbe
jl
lret
fwait
xor
jg
sbb
mov
daa
add
lret
in
lret
or
popf
lret
jae
jg
cmpsl
mov
ljmp
mov
add
and
mov
sahf
movsl
ljmp
aas
outsl
out
cmp
xchg
mov
icebp
out
fwait
imul
aad
iret
sbbl
sub
dec
pop
divb
pop
fsubp
jnp
lock
or
jae
jg
out
iret
stos
out
sub
mov
daa
jmp
adc
dec
jge
sarl
pop
mov
lahf
outsb
in
sbb
in
ss
dec
into
lret
arpl
out
call
and
fnstsw
mov
ja
mov
jne
testb
lods
shlb
out
ljmp
or
or
push
aad
jg
jb
push
repz
and
ds
mov
jnp
dec
pop
sbb
mov
fidivs
sahf
dec
icebp
out
repz
mov
cmp
out
fldl
pop
lret
cmp
stos
push
lahf
adc
arpl
cmp
lock
jnp
insl
jae
andl
push
out
push
xchg
pop
scas
dec
xchg
es
testb
mov
movsl
inc
lret
push
sub
jp
mov
sbb
xchg
movsl
mov
daa
insb
or
lret
idiv
xchg
cmp
dec
jp
fbstp
mov
pop
out
jnp
das
sub
in
imul
nop
mov
push
dec
jne
arpl
in
lahf
mov
mov
rol
ret
out
out
jae
arpl
aam
int
mov
cli
div
iret
inc
pop
daa
in
lea
mov
out
xchg
pop
mov
and
ret
xchg
inc
ds
xchg
lret
mov
fists
adc
je
out
mov
outsl
aad
xlat
dec
jnp
fildll
sub
test
scas
pop
lods
pop
fwait
xchg
mov
fcomip
out
iret
and
mov
out
mov
cmp
jecxz
fsubs
ss
mov
pusha
ret
sub
out
je
test
das
lret
jne
dec
lea
stos
xchg
and
in
xchg
pop
aad
je
mov
shrl
cs
pop
push
iret
sub
fwait
jg
and
xchg
popl
pop
lods
mov
popa
mov
xchg
out
popf
jle
dec
fstpl
mov
jbe
negl
enter
jne
inc
push
jecxz
ss
daa
push
dec
push
push
lods
daa
cmpsl
push
aaa
movsl
dec
jecxz
inc
mov
jne
xchg
and
pop
jmp
fisubl
mov
adc
outsl
ja
mov
sbb
jnp
mov
lods
cmpsl
js
dec
lret
xchg
cli
xlat
inc
hlt
ljmp
test
in
dec
pop
in
push
cmc
test
xor
je
aaa
pop
fiaddl
hlt
dec
mov
mov
sub
pop
push
sub
pop
mov
dec
xlat
lcall
testl
mov
push
jecxz
mov
cmp
pop
subl
subb
int3
arpl
pop
pop
fisttpll
cli
pop
rep
dec
lret
je
lods
jg
je
out
inc
lahf
into
popf
sti
mov
push
in
jmp
cmp
push
out
movsl
test
jmp
dec
imul
pop
xor
jecxz
out
mov
leave
lds
scas
and
sub
pop
aaa
sub
daa
in
std
insb
arpl
mov
dec
jnp
stos
jnp
adc
das
mov
sub
fdivrs
jae
or
mov
testl
inc
insl
out
fwait
out
xlat
or
pop
scas
xchg
scas
rcl
scas
push
outsl
das
fildll
push
and
arpl
pushf
cmpsl
sub
test
es
lret
test
dec
sbb
rclb
hlt
push
in
or
fdivl
imul
in
aam
inc
mov
pop
test
mov
pop
mov
inc
dec
xchg
jl
sub
adc
dec
push
fwait
mov
js
inc
or
in
aad
fldt
mov
inc
filds
jp
insl
lret
mov
push
out
inc
sarb
inc
inc
mov
add
js
fucomp
fistpl
stos
jg
fildll
adc
and
gs
cmp
fcompl
and
scas
pop
xorb
and
ja
out
push
fstps
mov
outsl
push
ficomps
push
jp
inc
mov
dec
fnstcw
mov
xor
fistl
aaa
push
test
fildll
add
out
inc
cmp
shlb
push
dec
mov
inc
add
aas
mov
or
iret
call
adc
add
pop
xchg
jge
cmp
dec
divl
mov
or
mov
mov
fstpt
or
xor
mov
enter
lods
insl
cld
jo
std
mov
sub
mov
push
or
lahf
fcoms
sub
repz
iret
lret
lret
push
mov
xor
xchg
sahf
aad
cmp
lods
addr16
dec
loope
add
out
mov
ds
jnp,pt
mov
mov
fdivrp
fstps
mov
outsl
pop
fidivrs
lahf
ja
ljmp
cmp
pop
mov
mov
sbb
mov
popf
lods
fnstcw
fsubrp
mov
push
fnstcw
mov
outsl
jle
sahf
mov
pop
fnstcw
mov
outsl
fidivrs
xorl
jl
mov
outsl
cmp
ja
out
std
fldcw
scas
outsl
out
fisubrs
mov
out
sub
xchg
mov
outsl
sub
out
pop
fbstp
cli
fcomi
outsl
repnz
mov
loop
mov
outsl
rcr
into
mov
ret
mov
fisubrs
out
mov
xchg
les
cmp
xor
lds
and
sbb
fstpt
fnstenv
mov
outsl
fisubrs
mov
push
sbb
push
cmpsl
jle
out
mov
mov
ja
mov
inc
mov
fimuls
push
shrl
sbb
dec
testl
out
push
mov
fiaddl
repnz
ret
mov
pop
mov
out
aaa
xlat
mov
rorl
and
mov
loop
fdivl
sbb
xorl
adc
xor
and
push
adc
or
test
ret
popa
xchg
sbb
mov
scas
shrl
mov
sbb
pop
sbb
mov
daa
sub
das
xor
loop
pop
inc
bound
cmc
mov
mov
mov
mov
mov
mov
mov
insb
aad
pop
xchg
fistpll
mov
scas
jae
mov
ret
sbb
into
jae
mov
loop
out
ljmp
jno
pop
les
aaa
lods
mov
adc
mov
and
test
fstp
out
cmpsb
and
mov
dec
andl
xchg
out
inc
and
mov
sbb
cmpsl
pop
mov
cmp
pop
pop
jcxz
lahf
aam
movsb
sbb
dec
in
imul
insb
inc
inc
insb
push
mov
jb
cmc
dec
and
mov
stc
jge
pop
push
outsl
mov
sbbb
mov
out
popf
pmullw
inc
sub
loop
pop
outsb
sahf
repnz
adc
jg
cltd
mov
pop
jl
push
mov
add
add
mov
out
or
decb
fldcw
outsl
mov
ja
out
pop
and
popf
mov
outsl
in
fisubrs
mov
scas
xor
out
mov
outsl
das
fidivrs
mov
mov
inc
fstp
push
mov
dec
outsb
fsts
mov
mov
pop
pop
push
pusha
fnstcw
fisubrs
outsb
ja
out
sahf
jo
into
mov
outsl
das
fidivrs
iret
ja
jg
pop
out
subb
fimuls
out
nop
into
fsts
mov
mov
mov
outsl
dec
fisubrs
fnsave
pop
fidivrs
pinsrw
mov
outsl
mov
arpl
aam
mov
outsl
in
mov
in
fld1
mov
outsl
in
fimuls
lock
mov
das
hlt
mov
cltd
scas
mov
add
cmp
filds
out
fmull
outsl
insl
ficoms
out
push
sbb
outsl
jg
and
sub
out
sub
insl
outsl
xor
ja
out
cmp
push
sub
shl
mov
push
mov
mov
test
mov
cmp
mov
add
cmp
sub
lahf
lahf
dec
adc
rorb
idivb
in
mov
cmp
cmp
dec
xor
mov
ljmp
dec
sbb
cmp
repz
sub
jge
dec
sub
pop
or
xchg
add
insl
scas
xorl
push
sarb
or
cmp
movsb
sbb
cmp
push
pushl
mov
icebp
jp
add
cmp
mov
and
push
sub
das
imul
ret
sub
jne
imul
decb
stos
pop
movsb
lock
jg
aad
pop
jo
testb
outsl
test
xchg
cli
pop
xlat
scas
scas
fdivrl
mov
aad
test
xchg
out
fistpl
sbb
mov
cltd
scas
fisubrl
pop
movsb
adc
int3
mov
out
rolb
rorb
adc
and
scas
notb
aam
lds
jb
mov
scas
arpl
jnp
daa
mov
sahf
insl
push
hlt
dec
scas
cmc
mov
dec
jnp
jae
pop
mov
sbb
push
or
divb
fsubrl
cmc
push
xor
scas
fidivrs
mov
sub
add
pop
imul
inc
repnz
mov
sbb
pop
jne
jle
test
outsl
pop
sbb
ret
jbe
cmpsb
mov
mov
mov
into
adc
lahf
mov
test
insl
xchg
in
scas
mov
sarb
mov
out
xchg
sbb
lods
insl
in
scas
fmuls
jge
outsl
ljmp
pop
dec
out
xchg
fimuls
jnp
fcmovu
pop
jge
iret
fidivrs
faddl
loope
fisubs
fdivr
xor
cmpsb
push
pop
int3
testl
fsubrp
iret
movsl
fidivl
xlat
lods
or
pop
out
push
jmp
rcrb
lock
out
aas
ret
mov
movsl
push
scas
adc
fcoml
in
loopne
popf
jmp
sti
mov
rclb
sarb
jns
addr16
or
mov
jg
push
sbb
and
in
mov
or
enter
dec
mov
ss
idivl
sbb
or
cmc
mov
jg
cmc
insb
insb
mov
mov
insl
and
jns
jg
daa
fisttpll
push
ss
xchg
aam
or
cmpsb
scas
jo
aas
lods
leave
lods
cmp
cmp
int3
in
pop
stc
or
aam
dec
outsl
fbstp
xor
cli
jbe
push
xchg
mov
iret
inc
bound
xchg
stos
pop
mov
adc
mov
in
outsl
lods
mov
mov
in
sbb
and
testb
divb
insl
jle
jg
dec
lods
xchg
jg
das
cli
hlt
and
or
mov
scas
sbb
sti
sub
mov
jne
scas
cmc
or
mov
jle
outsb
sbb
push
dec
mov
ljmp
movsl
push
mov
add
in
jno
push
fcmovu
jnp
mov
aas
mov
imul
xor
inc
cli
xchg
out
popf
jmp
mov
out
scas
mov
iret
pop
cmp
fsubrl
cmpb
iret
std
fadd
cmp
mov
mov
push
hlt
inc
stos
or
push
in
or
mov
push
cmc
scas
or
scas
in
shl
mov
or
sbb
scas
lods
pop
pop
iret
pop
and
cmp
or
lahf
imul
jnp
xchg
out
mov
out
mov
outsl
jp
jbe
idivl
fisttpl
inc
mov
cmp
pop
jl
enter
cmp
movsl
fdivrl
dec
jnp
sub
jae
addr16
sbb
or
jno
idivb
outsb
iret
sbb
insb
xchg
mov
test
pop
pop
pop
inc
insl
inc
ljmp
cld
shlb
outsl
mov
cmpsl
inc
inc
or
fwait
lahf
lcall
hlt
pop
jg
aas
pop
aaa
xor
loopne
cmp
dec
fbstp
outsb
push
mov
xlat
xchg
cmp
mov
fildll
popf
fbstp
xchg
mov
dec
mov
cmc
push
mov
fistpll
sar
jo
jge
ret
jne
dec
fucomip
sahf
jno
push
jae
mov
xor
aas
clc
inc
pop
out
mov
add
out
jle
mov
lahf
mov
rol
mov
fdivrl
aas
fnstsw
jge
ds
push
stc
jge
test
jl
push
mov
lcall
imull
testl
fcoml
in
fnstsw
jl
and
int3
jg
insl
mov
imul
fucomip
nop
fidivrs
and
or
jnp
das
jnp
xor
iret
push
das
push
fidivrs
filds
mov
test
icebp
mov
ds
outsb
mov
loopne
fcmovu
jns
jle
popf
int
int
cmc
jl
in
push
imul
xchg
testb
popf
pop
pop
dec
push
sbb
js
sbb
xlat
sahf
push
sti
insb
fdivl
cmc
outsb
cmc
pop
aas
dec
out
pop
or
push
dec
sbb
mov
lret
in
add
dec
into
dec
fpatan
sbb
scas
idiv
lods
aaa
dec
pop
push
int
out
std
mov
aam
iret
es
cmp
das
push
stos
dec
xor
mov
sub
lods
lods
cmpsl
mov
push
decb
dec
pop
fimuls
outsb
aam
lahf
iret
outsb
iret
loop
adc
jge
jl
fwait
into
fstpt
jnp
pop
adc
int3
mov
mov
mov
jnp
sbb
cmp
sub
std
dec
scas
lea
mov
int
jnp
mov
scas
cmp
iret
sub
dec
push
mov
daa
repz
push
pop
ror
push
pushf
fldcw
in
ja
loop
fcompl
popf
fdivl
insb
int
std
cltd
jle
inc
das
cmp
int3
mov
out
cmpsl
push
int
jg
sub
fistpl
mov
sbb
int3
mov
or
cmc
jmp
out
into
pop
sub
dec
aam
in
scas
lcall
lods
xchg
inc
jno
mov
fsub
cmpsl
and
in
mov
je
fsubrp
bnd
sub
hlt
lds
sub
pop
icebp
mov
jp
std
stos
scas
push
and
adc
enter
xchg
sub
mov
xlat
and
pop
push
sbb
hlt
pop
jmp
sub
repz
pusha
adc
or
lahf
movsw
lock
sub
ss
iret
std
das
aam
mov
sbb
les
fs
and
insl
add
int3
movsb
mov
cmpsb
dec
cmpsb
mov
sub
add
dec
push
int3
jmp
xor
filds
sti
loopne
cmp
sbb
cmp
or
sbb
inc
cmp
data16
dec
pop
cmp
xorb
insl
movb
rcl
sbb
fsubrl
xlat
loope
ja
cmp
cmpsl
int3
push
mov
stos
push
sub
mov
inc
jecxz
push
mov
int
sbb
pop
xlat
mov
das
mov
pop
mov
add
aam
mov
inc
bound
jecxz
push
test
and
outsb
sub
insl
scas
add
add
imul
data16
aam
mov
cld
or
sahf
sarl
clc
dec
mov
jns
sub
jne
ret
out
gs
dec
mov
or
or
idiv
mov
cmp
xlat
movsb
test
mov
dec
or
pop
vmwrite
or
adc
sarl
xchg
in
pop
mov
int
pop
and
imul
push
ret
gs
and
cmp
mov
dec
das
in
inc
imul
jno
std
cmc
xchg
scas
scas
in
std
cltd
mov
lods
out
inc
add
int
cvttps2pi
pop
pop
pushf
push
mov
pushf
mov
movsb
push
in
je
fmull
pop
xor
daa
mov
pop
scas
xlat
xchg
dec
lret
fisubs
xchg
enter
mov
das
rcrb
and
das
jge
pop
imulb
pop
push
dec
mov
es
or
sub
repnz
mov
sbb
js
or
cmc
mov
pop
fisubrs
imul
lcall
movsl
scas
lret
cmpsb
insl
lods
inc
dec
push
divl
sub
jbe
pop
popf
cmp
scas
aaa
in
mov
gs
cmp
out
lds
mov
mov
pop
and
lcall
mov
outsl
push
push
out
fwait
adc
int
dec
jg
jge
ds
stos
or
insl
xchg
lahf
mov
scas
sub
sub
and
into
pop
je
push
testb
sub
fisubrs
lret
cmpsb
xchg
sub
cmpsb
dec
sub
fwait
pop
pop
dec
mov
sbb
leave
out
mov
mov
dec
bound
in
cli
pop
inc
lcall
mov
hlt
xor
jle
stos
inc
jno
fcoml
jae
ret
sub
mov
loop
mov
leave
jne
sub
aam
xor
fisubrs
mov
fiaddl
neg
fcmovne
sar
mov
xor
or
pop
pop
inc
out
mov
cs
sub
adc
shl
mov
fbstp
mov
fistl
xchg
fs
ja
out
sub
sarl
mov
mov
xor
and
enter
jbe
inc
xchg
mov
pop
dec
rclb
push
pop
add
outsb
add
and
add
adc
inc
jae
sub
pop
insb
mov
xor
movsl
loopew
imul
fldt
jo
negb
xchg
inc
das
lahf
or
mov
int3
mov
xlat
sub
pop
faddl
bound
sbb
mov
xor
jge
sub
fildll
test
ficomps
dec
outsb
scas
fstpt
bound
lahf
mov
scas
bound
jp
inc
bound
jmp
loop
jbe
movsl
popa
mov
cmp
ss
jb
mov
inc
out
aas
push
into
xor
sub
dec
add
ljmp
push
pop
xchg
cmp
inc
cld
imulb
cs
mov
sbb
adc
in
ljmp
fsubrp
call
cltd
lea
popf
push
dec
jp
ds
bound
mov
insl
inc
push
push
push
pop
xchg
mov
mov
mov
cmp
jg
cmp
ret
into
ljmp
out
pop
xor
clc
mov
add
testl
fdivrp
mov
sub
inc
adc
jg
stos
pushl
pop
ss
subb
pop
pop
into
mov
sahf
pop
fcomi
addr16
decb
popf
adc
xchg
pop
inc
xor
sub
std
in
fimull
test
or
outsl
lret
sti
xor
pop
pop
data16
jg
mov
out
les
jne
aad
sti
xchg
bound
push
fidivrs
push
inc
sub
cld
repnz
mov
add
fdivl
xor
mov
loopne
loope
pop
lcall
pop
pop
jg
xor
ds
mov
lret
fdivrl
mov
scas
pop
inc
rorl
dec
negb
loop
faddl
mov
push
and
lds
mov
mov
cmp
xor
lahf
jne
pop
inc
add
lahf
pop
mov
mov
dec
push
ficoms
jns
mov
testl
add
test
loope
ficomps
adc
lods
sarb
aas
cwtl
in
inc
xor
aad
mov
lret
cmp
cmp
pop
jbe
gs
popa
cmp
ljmp
jg
int3
push
pop
jg
ret
xor
jge
ss
std
fisubrs
gs
pop
sub
ds
sbb
push
sbb
popf
mov
cmp
sub
pop
pop
fimuls
pop
mov
adcl
das
outsb
and
out
pop
and
cmp
fisubrl
lea
leave
mov
rcrl
jle,pn
pop
data16
sbb
lahf
cmp
xchg
lahf
mov
ja
lahf
fcoml
mov
imul
imul
mov
sub
imulb
mov
fcomip
jg
insl
dec
ret
mov
fistpl
inc
jg
mov
ret
aas
repnz
aad
jg
lods
cmpsb
cmp
rcl
pop
ds
cs
pop
aad
cmp
out
insl
or
int3
dec
jbe
inc
jg
into
xor
out
and
leave
jg
jl
fcos
fcoms
mov
cmc
mov
jmp
xor
iret
push
les
cmp
outsb
int
xchg
pop
sahf
jge
cmpsb
ret
mov
je
and
xchg
popa
fucomi
sbb
cmp
mov
mov
fidivrs
mov
sub
xlat
imulb
xor
outsl
ss
xchg
sbb
sub
test
jg
gs
and
jae
sub
dec
pop
outsb
sahf
mov
in
fnstcw
adcl
scas
loopne
xchg
pop
das
jg
add
ds
popa
sti
pop
cld
mov
sbb
add
mov
add
ffreep
sti
das
sbb
pop
das
out
sti
pop
imul
jns
mov
jg
mov
mov
jp
mov
out
mov
cld
outsl
sbb
ja
out
mov
push
outsl
push
fisubrs
mov
pop
outsb
fnstcw
mov
ja
out
into
fstps
mov
cltd
aas
pop
mov
outsl
lahf
fmulp
mov
aaa
dec
fistpl
fimuls
pop
mov
aam
fildll
ficomps
out
out
mov
outsl
fbstp
fistpl
xlat
into
shl
lods
cmpsl
bsf
pop
ret
sahf
lods
mov
mov
mov
sub
ss
lahf
mov
fbstp
push
lods
dec
lahf
fmull
jg
ds
ss
dec
mov
aas
push
std
sub
cmc
jg
icebp
ss
cltd
fidivrs
aaa
mov
into
ds
lds
jg
mov
iret
sti
imul
fbstp
insl
repz
jle
sbb
sbb
jns
imul
jg
push
std
in
pop
jp
jno
fdivrs
std
cmp
add
outsb
pop
aaa
fildll
mov
and
fcoms
js
xchg
mov
cmp
rclb
cld
orb
jnp
ds
mov
cmp
pop
popf
cmp
gs
outsb
mov
out
leave
ffreep
repnz
sbb
mov
mov
mov
ss
mov
enter
outsl
imul
sahf
pop
mov
mov
dec
mov
mov
mov
dec
out
mov
fstps
fidivrs
xchg
mov
out
cmp
push
inc
mov
push
shrl
or
lods
sbb
hlt
jnp
into
loop
out
jns
jmp
xlat
cmp
imul
data16
lret
lods
pushf
cld
scas
and
repnz
popf
out
fwait
and
or
pusha
mov
repz
ds
adc
ds
cmpsl
jp
out
daa
lock
ss
pushf
outsl
xchg
cmp
ljmp
hlt
pop
jecxz
jne
ret
fcoms
bound
out
pop
push
out
push
repz
push
outsb
mov
xchg
xchg
xorl
mov
das
fxch
mov
outsl
ret
fisubrs
mov
scas
flds
fmulp
mov
mov
sbb
ja
out
cmp
fstps
outsl
jl
mov
out
mov
mov
mov
sbb
sub
data16
push
hlt
inc
add
dec
in
std
and
mov
pop
aas
mov
cltd
xchg
mov
jne
out
fistpl
sti
mov
pop
ds
adc
add
sub
push
sbb
fucomp
push
mov
cmpsl
fnstenv
pop
outsl
repnz
out
aad
flds
les
fimuls
xor
mov
ja
out
pop
mov
ss
outsl
mov
ja
out
je
frstor
sub
ficoms
out
xchg
adc
outsl
test
add
mov
mov
xchg
or
and
jg
inc
out
jecxz
fldenv
pop
mov
sti
pop
lock
pop
xchg
jg
std
mov
mov
into
out
jg
sahf
stos
xchg
out
push
xor
pop
inc
mov
inc
idivl
push
das
ja
stc
neg
sti
cmpb
cmc
dec
div
jmp
dec
ds
sbb
inc
inc
fcompl
cmp
lds
sbb
pop
sti
stos
stos
scas
test
lock
lods
rcr
push
xchg
bnd
cmp
fisttpl
lret
mov
inc
iret
scas
sti
mov
stos
mov
stos
mov
iret
push
lret
or
push
cmp
mov
test
das
out
pop
lcall
fidivs
out
inc
lret
xor
dec
out
outsl
jg
fcompl
sub
repz
std
mov
ja
lahf
out
fistpll
add
pop
inc
jle
push
jmp
call
add
xchg
pop
jp
sti
stos
jge
dec
in
fsubr
pop
adc
filds
lock
outsl
sub
scas
movsl
popf
cmpsl
mov
fwait
out
add
xchg
lds
in
ret
jns
int3
les
mov
jl
cmp
ljmp
ds
pop
dec
call
decl
pop
push
icebp
cmp
jmp
leave
pop
inc
test
sbb
jge
dec
stc
mov
shl
test
push
rolb
and
in
int
pop
std
fsub
adc
or
sbb
and
jl,pt
idiv
mov
test
mov
adc
push
mov
es
xor
inc
in
stc
jmp
pop
mov
push
jo
call
popa
lods
xor
lods
js
call
test
loopne
inc
gs
jge
jo
out
lret
jecxz
iret
sub
in
es
lret
imulb
sbb
sub
sbb
icebp
push
mov
push
add
gs
jg
scas
imul
or
xchg
mov
fstps
nop
bound
sbb
ret
arpl
jne
jge
std
inc
into
fdivr
xchg
mov
jle
pop
imul
lret
enter
sti
adc
add
or
mov
sbb
xchg
outsb
adc
add
mov
sbb
pushl
sahf
mov
sti
mov
xchg
fmull
pop
popa
inc
gs
ret
or
in
std
xor
or
test
add
les
in
mov
jl
into
xchg
js
in
add
sbb
cmp
jecxz
sub
enter
inc
jl
bound
dec
xchg
rolb
je
icebp
adc
jp
push
pusha
stos
lcall
mov
cmpb
dec
out
mov
stos
adc
sbb
imul
pop
push
push
decl
dec
jns
or
mov
adc
int3
pushl
and
add
call
fwait
push
jb
repnz
decl
jnp
mov
mov
adc
cmp
gs
in
ljmp
nop
sti
inc
pop
xor
mov
jl
inc
fidivrl
add
imul
je
pushl
out
lcall
insb
dec
daa
das
jecxz
mov
les
rcrl
hlt
or
pop
in
incl
mov
icebp
ja
shrb
push
or
roll
or
les
pushf
sbb
xchg
lret
jmp
mov
mov
insl
loop
jl
jmp
icebp
mov
jmp
repz
fidivl
scas
jmp
out
shrb
lret
xchg
lret
pop
jmp
xchg
mov
scas
test
jge
cmpl
sbb
sub
jmp
out
mov
pusha
jmp
mov
pop
or
push
idivl
cmp
jnp
ret
push
aaa
jbe
into
cld
mov
xor
fists
das
inc
out
adc
push
int3
movsl
push
ds
ret
or
and
fadd
push
pop
fists
add
cmc
pop
mov
xchg
subb
or
fildll
lcall
cmp
fistpll
mov
sbb
pop
mov
dec
dec
push
ljmp
mov
mov
mov
test
add
lds
stos
add
fldenv
stc
lahf
ds
mov
xchg
out
jno
fcoml
xchg
cmpsb
push
jl
lods
fdivl
add
lds
adc
jl
sub
bound
fcompl
pop
sub
mov
ds
mov
push
mov
pushf
loope
dec
out
into
add
scas
adc
cmp
ja
out
sub
int
pop
dec
pop
cmp
push
js
dec
out
dec
push
arpl
mov
dec
jb
je
testl
outsb
inc
jbe
notb
scas
aas
inc
clc
movb
dec
cmp
lret
mov
loop
ds
mov
scas
xor
sub
sub
ss
adc
shrl
jge
imul
push
cli
cmpl
test
lret
inc
push
rcl
jmp
lock
shlb
cmp
dec
mov
ficomps
fstp
sbb
jg
das
xor
leave
lret
inc
je
pop
push
mov
sub
jg
xor
es
aas
mov
mov
stc
mov
out
dec
jl
jmp
sahf
rcl
push
push
fldl
aad
int
sbb
sti
push
adc
fs
jae
mov
setb
push
call
jg
add
adc
mov
sarl
sbb
adc
cmp
xor
and
insb
pop
jg,pn
adc
aas
push
xchg
sub
int3
jle
push
aad
aad
pop
xchg
pop
cs
nop
test
add
xor
cmp
xor
jbe
add
dec
mov
rcl
imul
mov
lret
ret
out
sar
sub
pushf
call
jmp
push
push
pop
and
pop
ret
call
lcall
scas
mov
jp
ret
ja
and
or
or
dec
mov
out
pusha
sub
frstor
clc
hlt
cmp
out
xchg
push
call
jo
aad
xchg
stc
loope
in
xchg
adc
les
jo
cmp
cmp
test
imul
push
jno
imul
out
subl
cmpsl
in
or
push
inc
jne
popa
and
pop
sbb
adc
test
add
pusha
xor
xor
jp
gs
insb
inc
sbb
fsubr
inc
xchg
mov
pop
pop
insb
xor
sbb
stos
test
je
jae
lret
inc
fcmovnu
stos
mov
ret
mov
xorl
cmp
stc
jmp
stc
int
movsl
stc
lds
or
test
dec
outsl
sub
shrl
inc
add
push
jno
pop
dec
jns
cmpsl
cwtl
jle
inc
je
jge
js
sbb
ss
push
clc
mov
popa
clc
sahf
push
fdivrl
insl
fwait
stos
dec
mov
sub
lcall
out
sbb
rcr
pop
add
shll
stc
push
jo
lds
sub
lret
xchg
xchg
movsl
movsb
jnp
imul
addr16
inc
inc
dec
inc
push
jae
xor
dec
sub
stc
add
dec
add
movzbw
mov
neg
mov
pusha
jmp
call
xor
cld
lock
icebp
mov
loopne
imull
repz
aad
cli
in
cld
adc
cmp
rorl
push
loop
icebp
cmp
xor
pop
clc
out
pop
jl
je
out
pop
sar
or
adc
outsl
lret
add
and
mov
leave
add
pop
push
lock
iret
add
or
dec
insb
clc
incb
jl
xor
leave
movq
test
sub
roll
mov
cmp
or
or
sub
pop
pusha
dec
pop
lock
ja
shr
rcrl
leave
pop
outsl
mov
adc
pop
xchg
adc
fiadds
sahf
call
stc
lret
sbb
in
dec
push
add
sub
insl
insb
pop
cmp
shr
outsl
adc
xchg
sbb
imull
daa
pop
iret
out
push
add
dec
mov
notl
ds
xlat
pop
ljmp
fwait
mov
fisubrs
enter
lods
aaa
sub
cmpsb
or
iret
enter
in
in
pop
mov
cmp
cmp
fwait
rorb
stc
pop
push
das
addr16
jbe
jb
test
ret
out
test
adc
shll
mov
ja
insl
aas
sahf
jno
mov
mov
xlat
mov
and
sub
in
imul
cwtl
out
enter
pop
xlat
gs
mull
popa
fwait
lahf
xchg
pop
pop
lods
into
divl
sbb
add
rcrl
jp
in
jg
ljmp
mov
scas
nop
jp
and
xlat
in
push
ffree
jg
or
pop
dec
xchg
iret
cmpsb
push
jns
inc
pop
test
jge
cli
xlat
push
mov
pop
push
call
mov
jb
adc
jmp
cmp
test
iret
pop
fisubl
sbb
cmpsb
cs
pop
out
ret
das
xor
or
ret
jmp
vmulsd
scas
cmpsl
add
scas
js
sbb
push
push
ljmp
lret
xor
cli
mov
ror
push
outsb
xor
fcomip
cltd
xchg
mov
aad
xchg
je
ret
add
popf
or
jbe
or
dec
idivl
jbe
mov
sahf
mov
negl
sub
mov
pushf
fwait
pop
hlt
adc
pusha
adc
ret
mov
mov
jne
pop
xchg
repnz
test
into
repz
dec
test
xchg
cli
mov
iret
mov
rcr
lahf
pop
sbb
jmp
cli
jl
js
mov
out
repz
mov
out
out
shll
lods
lds
xlat
inc
xchg
sub
fst
xchg
mov
js
sahf
jb
faddl
insl
pop
mov
pusha
in
jbe
ret
in
push
push
push
inc
xchg
add
pop
sti
mov
adc
in
popa
sub
sub
mov
out
mov
sub
sub
cld
dec
jns
add
scas
cwtl
outsb
into
mov
sub
xor
jle
cs
sbb
fdivp
cmpsl
sub
add
pop
and
dec
stc
and
notl
adc
push
xlat
jg
outsl
cmp
shlb
clc
pop
mov
cmpsl
fcoml
xchg
repz
outsl
sbb
mov
lock
fs
out
scas
aad
idiv
xor
lcall
pop
xchg
mov
shrb
push
mov
lock
pop
rcl
pop
inc
pop
xor
test
push
xor
lock
lahf
mov
fbstp
lahf
xchg
fpatan
pop
add
dec
push
out
mov
into
inc
dec
cmp
call
mov
cmp
inc
cltd
nop
ljmp
xlat
jbe
in
dec
out
jne
outsl
push
leave
fsubp
xchg
add
pop
dec
pop
outsl
insl
stc
out
jb
xchg
mov
mov
in
and
add
mov
xchg
stc
test
test
into
xor
das
xchg
and
aad
xchg
mov
in
xchg
fcmovb
dec
xorl
mov
mov
xchg
out
adcb
ret
sbb
insb
js
push
adc
pop
stc
sbb
dec
xchg
cwtl
std
ret
pop
call
lods
outsb
mov
add
fistps
push
sti
inc
stos
or
cmp
fdivrp
mov
xor
das
roll
xor
push
dec
stos
mov
jmp
sbb
scas
xchg
pop
pop
insb
mov
cltd
xchg
ds
sbb
pop
fwait
ret
lods
cld
xchg
jl
in
pusha
fwait
ss
cmp
jl
dec
cwtl
pop
faddp
repz
jae
fwait
push
outsl
dec
jno
pop
mov
fwait
xlat
inc
sub
mov
outsl
in
imulb
lahf
stos
mov
pop
sub
mov
jg
shlb
mov
jge
arpl
js
mov
int3
xor
movsb
fdiv
mov
pusha
dec
bound
pop
pop
iret
fucomip
jnp
mov
ja,pn
cmp
xor
dec
jecxz
pop
fisttpl
jg
into
sbb
cmc
cmp
lods
xchg
out
mov
je
outsl
and
jecxz
ret
negl
xlat
fstpl
movsb
repz
sbb
xor
xchg
movb
jmp
lahf
std
lods
pushf
sahf
cli
sarl
cmpsl
push
icebp
repz
pop
or
fisubrs
pop
dec
test
icebp
test
mov
sbb
cmpsl
jae
sti
lcall
addb
mov
xchg
cmp
pushf
jmp
sbb
mov
inc
jl
stos
fnsave
stos
push
push
cmc
jl
inc
sbb
mov
or
stos
pushf
fnstcw
or
in
mov
push
mov
lahf
lods
push
sub
loop
jnp
outsb
stos
inc
jnp
cmp
lods
sbb
inc
sti
addr16
cmp
sti
ficompl
xchg
sahf
xchg
and
iret
or
jmp
pop
insl
sti
and
jbe
xchg
or
fbld
scas
in
iret
lret
insb
popa
out
andl
push
fstpl
int3
jle
outsb
or
push
insb
mov
pop
cmp
mov
cmp
or
jae
notl
enter
mov
pop
icebp
sarb
fnstsw
push
mov
pop
fisubl
je
add
jle
out
int3
mov
divb
mov
xor
pop
stos
mov
fldl
pop
xor
adc
mov
fimull
ret
lahf
imul
fcompl
lcall
mov
inc
rcrl
iret
cmpsl
sbb
faddl
xorw
mov
dec
mov
mov
fnsave
mov
into
adc
cmp
pop
cmp
fstp
in
iret
xor
in
dec
jno
adc
fst
mov
or
mov
sbb
cmpl
jl
shll
sbb
insb
jl
jnp,pn
mov
inc
insb
ffreep
repz
mov
lahf
cmp
mov
lahf
jbe
xchg
cli
test
stos
cmp
lahf
fucomip
in
fistps
aad
and
mov
jl
dec
pop
mov
jns
ret
mov
lcall
inc
imul
jns
mov
push
xor
cli
scas
movsb
fists
dec
inc
mov
in
and
mov
jns
push
mov
aas
push
adc
lods
lahf
imulb
imul
cld
fcomip
add
sub
into
cltd
mov
inc
sarl
mov
lcall
jg
cmpsb
mov
push
iret
mov
mov
test
das
xchg
pop
sahf
mov
cmpsl
push
or
rol
and
jmp
bound
or
cmp
bound
cwtl
add
fbstp
jecxz
mov
clc
js
add
jl
push
fmulp
and
lcall
movsl
pop
mov
mov
cmp
cwtl
mov
pop
adc
sahf
movsb
shr
fcmovb
jmp
mov
adcl
rcrl
cmp
aad
into
call
cmp
cli
rcll
jbe
inc
aaa
push
hlt
xchg
mulb
pop
das
push
dec
rorb
xlat
lds
js
fstpt
mov
pop
dec
jnp
xlat
sbb
in
xlat
mov
sub
add
shlb
xlat
xchg
sub
push
les
add
test
pop
out
testl
xor
add
je
mov
or
cmp
hlt
rcr
add
std
xlat
pop
pop
dec
fbld
cmp
pop
pushf
pop
ffreep
xchg
dec
int
sub
jnp
fucomip
sub
inc
cmp
fists
lahf
sahf
mov
bound
xchg
jecxz
xchg
mov
mov
lahf
loopne
jecxz
into
jg
lds
xor
cmpsl
loope
jecxz
cmp
ds
scas
insl
cmc
out
into
je
xchg
mov
sbb
ss
aaa
or
pop
int3
sbb
dec
dec
and
mull
sbb
pop
lret
adc
cmp
test
scas
push
not
ja
sahf
inc
add
dec
add
mov
out
dec
xlat
jae
imul
sbbl
in
ret
push
mov
call
fcom
ja
push
out
mov
add
cmp
xchg
out
iret
sbb
push
ja
fnstsw
xchg
out
fstpt
jmp
add
and
cmp
fbld
sarl
mov
fisttpl
gs
shll
push
dec
and
les
xchg
push
roll
lds
hlt
inc
pop
testb
inc
jecxz
test
pop
popf
outsb
shr
sub
pop
sbb
scas
mov
outsb
sub
js
popa
out
jo
xor
xchg
ret
fisttpl
lahf
push
lret
xor
ds
push
mov
fstpt
mov
or
js
out
rcr
pop
ss
cld
roll
pusha
repz
aad
sub
pop
sbb
iret
cmp
repz
pop
repz
repz
sub
xor
or
sub
insb
mov
and
fbld
mull
popf
cmp
mul
dec
daa
pop
ret
xchg
loop
jg
lock
fmull
div
xchg
mov
mov
outsb
cld
push
imull
out
aam
push
add
push
idivb
cmova
sub
loopne
fldenv
outsl
sbb
or
and
inc
dec
fldenv
pop
mov
mov
insb
mov
mov
es
imul
sub
push
mov
pop
aas
cmp
insb
insl
sbb
out
sbb
enter
aaa
out
test
loopne
cmp
jbe
sti
xchg
andl
lcall
faddp
sbb
cmpsl
xlat
shlb
push
std
jge
push
sbb
iret
xlat
sub
pop
adc
aad
sbb
mov
das
jno
jmp
ja
repnz
sbb
inc
fldenv
jecxz
mov
insl
popf
ret
int3
inc
pop
es
js
int3
in
bnd
popa
xor
fisttpl
mov
jno
add
je
fnsave
pop
or
negb
scas
adc
out
adc
addr16
scas
or
jecxz
jae
mov
dec
scas
ljmp
sub
jmp
mov
adc
fwait
dec
add
or
sti
mov
dec
sbb
pop
xchg
dec
call
shr
stc
sar
sbb
nop
and
out
sbb
mov
sbb
mov
cltd
pop
mov
jne
scas
leave
aaa
cltd
shrb
testb
in
add
adc
in
pop
push
subb
ss
movsl
dec
dec
aam
stos
and
jns
or
mov
ljmp
test
or
lret
and
mov
jp
or
dec
cmc
out
fimuls
mov
xchg
mov
push
jnp,pn
xor
mov
push
jae
sub
sbb
or
xchg
add
cmp
cmp
scas
jl
sbb
cmp
movsb
jne
popf
jb
out
sbb
pop
jge
push
aad
sbb
lods
mov
sub
jnp
stos
stos
imul
cltd
jl
cwtl
cmp
and
mov
add
dec
shll
jnp
iret
pop
hlt
popl
fimuls
adc
pop
jns
dec
adc
pop
and
sbb
mov
sbbl
add
std
imul
das
pop
jmp
pushf
mov
dec
outsb
or
jl
mov
add
mov
add
cmp
out
insb
sti
ja
mov
rcrb
add
insb
mov
jmp
push
jecxz
mov
rcrb
cli
movsb
outsl
repz
mov
pop
mov
je
adc
mov
gs
mov
iret
call
xor
xor
mov
dec
inc
es
neg
test
pop
in
sahf
fcompl
in
callw
mov
push
shr
sbb
sbb
hlt
fdiv
idivb
push
fisubl
pop
cmpw
xchg
hlt
orb
add
subb
or
in
sub
movsl
test
sub
aad
fisttps
jae
push
sbb
pop
je
mov
fwait
addr16
adc
out
mov
xchg
cmp
sbb
lcall
stos
push
xor
rclb
out
push
fs
fmul
jae
mov
aam
cmp
add
push
sub
mov
pop
js
dec
in
scas
cmc
sbb
insb
ljmp
lahf
fwait
sahf
inc
and
outsl
push
mov
inc
cmpsl
xor
out
adc
inc
arpl
xor
mov
sbb
ficompl
call
sub
bound
imul
mov
rcr
or
fstps
insb
dec
push
dec
loop
gs
push
jae
jecxz
xor
in
jecxz
pop
hlt
loop
and
jecxz
in
aas
push
loop
mov
loop
fsubl
call
sub
lret
pop
jg
fisttpll
push
sub
out
jg
xchg
sarl
pop
fdivr
sbb
xchg
pop
push
inc
jmp
mov
xlat
jnp
insb
cmpsl
push
test
xchg
daa
sbb
orl
neg
xchg
lcall
push
or
repnz
lea
loop
cmpb
inc
out
cmp
xor
mov
jae
movsb
in
lods
adc
insb
repnz
xchg
loope
xchg
xor
fcompl
repnz
in
pushf
repz
inc
divb
inc
xlat
cs
out
xchg
mov
jg
pop
mov
mov
push
mov
pop
jge
or
add
pop
jns
xor
xlat
xor
dec
adc
je
cmp
rcr
cmp
lret
adc
sub
pop
sub
cwtl
or
ljmp
sbb
orb
pop
xchg
add
and
stos
sbb
xchg
out
outsl
inc
pop
test
cmp
cmp
and
fbstp
jmp
pop
test
pushf
and
cmpsl
hlt
pusha
mov
aaa
nop
ljmp
mov
imul
jne
mov
repz
xchg
cmp
stc
sbb
in
mov
popf
push
or
sbb
in
cmpsb
orb
dec
xor
in
test
push
das
mov
lea
jbe
stos
jmp
mov
cmc
or
push
adc
cmc
out
push
pop
cmp
imul
push
rclb
push
jb
jmp
pop
mov
cmpsl
imul
fstpl
or
outsl
arpl
cmpsl
mov
mov
ret
mov
or
mov
mov
out
fimuls
test
jnp
or
add
adc
in
mov
shll
and
shll
rcl
mov
mov
loopne
rol
jecxz
scas
arpl
pop
pushf
jecxz
js
loope
inc
fisttps
jno
add
mov
popa
test
inc
inc
hlt
stos
push
push
or
inc
add
nop
lahf
and
mov
add
sbb
mov
clc
mov
add
inc
dec
divb
sbbl
push
test
loop
fldcw
push
test
push
dec
jae
movsl
sahf
and
pop
xchg
push
lret
test
push
push
cmp
cld
andl
push
jmp
push
add
mov
push
insl
dec
push
popa
push
cmp
mov
in
xchg
push
sbb
adc
push
push
adc
jmp
sub
inc
pop
imul
cmp
push
hlt
loop
loopne
push
fistpll
mulb
pop
mov
bound
add
stos
mov
stc
pusha
inc
jl
ss
push
pop
inc
sbb
ds
add
sbb
loope
pop
fistpl
pop
or
sti
movsl
cmp
xchg
mov
xorps
sti
xchg
idivb
out
jno
test
test
xor
jmp
sbb
aad
loopne
addl
loop
imul
mov
into
pusha
pop
cwtl
mov
push
outsl
nop
sub
mov
enter
in
scas
xor
in
jge
imul
std
fucomp
mov
xchg
push
out
inc
ss
fst
iret
lcall
jne
mov
js
jbe
popa
daa
push
xlat
mov
mov
ja
mov
cmpsl
icebp
or
or
xor
pushf
loop
sahf
sub
jmp
sbb
loopne
cmpsl
ficoml
adcl
jmp
jnp
fisttps
faddl
cmp
out
dec
sbb
push
jmp
push
push
in
and
pop
roll
and
add
ds
mov
and
fistpl
in
adc
sub
hlt
loopne
test
mov
cmp
cmp
repz
dec
or
pmullw
push
in
rorl
shl
insb
in
outsb
mov
add
mov
sub
insb
pop
cwtl
addl
adc
les
popf
sbb
jp
dec
pop
inc
notl
repz
pusha
in
mov
pop
repnz
out
push
adc
jae
mov
in
inc
aad
mov
jno
mov
je
in
fidivrs
das
adc
movsl
xor
std
or
xchg
pop
fidivl
lea
jne
jo
xor
or
or
leave
incb
repnz
jo
pop
jb
push
cli
dec
lods
mov
mov
ja
insb
mov
mov
sbb
jnp
out
xlat
jp
sti
jne
and
xchg
out
xor
movzwl
leave
push
dec
lcall
loope
je
cmp
adc
rcrl
repz
pop
outsl
adc
data16
loope
mov
jnp
loop
cwtl
aaa
fisubrs
pop
ficompl
aam
cmp
mov
subl
push
out
mov
push
movsl
or
jl
mov
out
imul
test
dec
mov
sbb
js
mov
push
xor
pop
jmp
dec
out
sarl
mov
cli
cs
dec
cmp
std
data16
outsl
scas
sub
inc
cmp
mov
sbb
int3
enter
imul
sbb
push
imulb
cmpsl
mov
cs
mov
add
aam
push
pop
pop
push
mov
pop
scas
jns
jl
sub
sbb
mov
jl
dec
scas
dec
mov
pop
shll
mov
inc
jge
out
mov
aaa
mov
pop
pop
mov
aas
shrb
inc
mov
movsl
mov
idivb
andb
sbb
pop
dec
in
stos
adc
adc
and
add
jp
and
aad
xchg
aaa
and
loop
push
test
mov
or
dec
out
repz
in
lods
xchg
hlt
sbb
daa
push
flds
test
outsl
jl
mov
sbb
jbe
cmpsl
imul
xchg
imul
jg
in
pusha
push
cmpsl
sbb
pushf
sarl
mov
std
adc
mov
shrl
in
in
push
pushf
ss
ljmp
mov
enter
pushf
fldenv
mov
popf
and
mov
add
cmp
sub
lcall
cli
or
mov
mov
push
sahf
mov
in
add
adcl
jmp
jl
jecxz
and
insl
in
pop
or
testb
pusha
out
xlat
ja
cwtl
mov
and
cmp
cwtl
in
fdivrl
and
out
push
mov
mov
cmpsl
lcall
mov
jo
les
cmpsb
sub
les
loop
dec
mov
test
repz
pop
lcall
addr16
out
sbb
pop
xor
nop
and
ja
decb
nop
daa
inc
lods
push
sti
pop
int3
insl
pop
push
sub
cs
aam
mov
scas
out
jae
arpl
shrb
pop
aad
iret
mov
mov
mov
pop
jmp
mov
fistpll
sub
and
ret
je
xor
arpl
mov
dec
lock
lret
pop
sti
leave
outsl
mov
or
sbb
outsl
add
mov
sbb
in
jecxz
xor
lahf
sahf
jno
roll
jmp
cmp
dec
mov
repz
stos
mov
mov
jecxz
aaa
mov
or
cld
sbb
jae
pushf
mov
mov
sarl
out
cmp
cld
int
lock
sti
shrb
adc
fs
and
mov
jae
sbb
popf
pushf
enter
fisubrl
sbb
sti
ja
or
jne
mov
test
or
pop
pushf
divb
mov
sub
add
push
das
test
mov
xlat
mov
inc
cmp
stc
int
in
test
ja
xor
dec
loopne
pushf
ret
outsb
adc
mov
jl
lods
sbb
jl
out
in
jae
sub
jmp
push
lcall
test
cmpsl
inc
mov
ficompl
mov
in
lods
dec
mov
out
jae
pop
mov
lods
mov
sti
test
xchg
sbb
mulb
rcrl
fcmovnu
pop
cmp
sbb
fcoml
movntq
out
inc
out
xor
into
and
push
xor
add
div
dec
cmp
hlt
aaa
push
jmp
sub
rcrb
sti
movsb
or
fcomps
pop
test
out
pop
stc
sbb
dec
sbb
jne
outsl
jae
pop
in
out
mov
jne
jnp
push
stos
mov
mov
push
aas
shll
mov
add
fisubrs
add
xor
xchg
imulb
pop
add
push
mov
xchg
and
dec
pushf
sbb
and
jns
push
push
dec
cmp
lahf
and
sub
mov
orl
stos
testb
jae
add
jne
daa
add
shl
mov
or
mov
mov
mov
ds
stos
pop
add
push
cmp
jb
mov
add
xchg
loop
imul
add
inc
out
loope
sti
dec
and
ss
negb
mov
fisubrs
pop
mov
dec
fdiv
negb
xchg
dec
mov
pop
adc
add
movsl
xor
dec
bound
mov
dec
loop
divb
mov
or
inc
sub
jae
mov
flds
lahf
and
xor
popa
xor
inc
or
pop
mov
sub
fwait
pop
add
inc
jnp
pushf
add
lds
fistpll
repnz
sub
call
mov
les
inc
les
les
jmp
loopne
fnstsw
std
cltd
lea
sahf
mov
pop
out
divb
scas
mov
or
push
xor
in
ja
adc
les
inc
in
pop
cmp
aad
mov
inc
pop
dec
int
ds
pop
cmp
sbb
stos
int
sbb
xor
jnp
cmp
and
pop
cmpl
int
jecxz
mov
push
imul
xchg
xchg
sub
ljmp
xor
std
int3
pushf
xchg
mov
sub
pop
pushf
pop
mov
lods
mov
pushf
jbe
int3
cmpsl
mov
or
cltd
out
fwait
outsl
sbb
in
shll
ss
stc
pusha
pop
pop
int3
xor
mov
sub
sub
inc
sti
xchg
add
lret
pop
enter
inc
ss
cmpl
jl
adc
negl
dec
jbe
pop
push
jmp
jg
aam
cld
dec
xor
cmp
cwtl
mov
rcrb
sub
sub
xor
sarb
aam
pop
cmp
mov
cmp
fwait
adc
add
pop
dec
cmpsl
loopne
aaa
jg
cmp
mov
dec
fst
repz
lea
mov
add
inc
outsb
mov
clc
aam
cmp
es
or
add
push
aam
mov
cmp
mov
cmp
cmp
jnp
cmpsl
mov
jo
daa
xchg
rorb
mov
int
fiaddl
inc
lods
dec
push
mov
cmc
mov
out
cld
push
jbe
das
add
inc
ljmp
adc
mov
pop
lcall
push
loop
push
pushf
pop
or
in
insb
lods
dec
jle
dec
fsubl
imul
outsl
adc
out
ret
iret
mov
ret
incb
and
pop
push
imul
les
xchg
xor
jae
or
jno
or
std
mov
daa
call
enter
pop
pop
imul
ja
sti
fstpt
loopne
mov
loopne
sti
inc
outsl
push
xchg
stos
pop
and
inc
testb
add
shl
arpl
xor
xor
or
mov
loope
cwtl
test
sti
mov
cmovbe
std
mov
sti
pop
pop
aaa
fists
dec
das
mov
sarb
divb
jae
in
std
dec
adc
push
push
xor
xchg
mov
sahf
inc
sti
mov
xor
push
fmuls
cmpsl
leave
test
daa
mov
pop
xchg
mov
or
aam
das
mov
dec
loope
push
addr16
pop
xchg
movsl
xchg
cmpsb
sahf
ja
repnz
sbb
or
lds
pop
aaa
iret
fildll
in
dec
mov
insb
jecxz
mov
fiaddl
fbstp
fidivrl
inc
out
sti
dec
popa
test
in
push
in
dec
bound
divb
mov
xchg
scas
sbb
cmpsb
out
mov
jg
mov
inc
lock
xchg
add
test
loopne
jae
negl
cmpsb
mov
add
mov
lods
sbb
pop
divb
push
sbb
xor
pop
mov
outsb
or
fs
mov
dec
xchg
and
jnp
lock
cmp
in
add
lret
ret
adc
or
ja
xchg
scas
cmpsl
sbb
outsl
cwtl
hlt
lret
ficompl
or
pop
int3
notb
je
orl
hlt
xchg
ret
das
inc
movsl
add
pop
ss
xchg
mov
mov
out
cmp
pop
dec
clc
mov
fistps
sbb
mov
movsl
scas
fdivrl
mov
test
daa
push
jo
in
clc
aam
mov
cmpsl
loopne
jns
test
aam
in
push
clc
or
sbb
jns
mov
mov
clc
mov
adc
mov
fistps
movsl
sub
cmpb
mov
adc
and
loope
icebp
hlt
roll
xchg
loop
push
pop
fists
and
mov
andl
sub
shlb
pop
fisubs
sbb
mov
arpl
dec
jne
dec
dec
or
pop
fldl
sahf
jmp
pop
pop
unpcklps
mov
mov
mov
mov
out
int3
mov
push
in
push
jne
and
sbb
gs
sbb
repnz
xchg
add
cmc
cwtl
lret
sbb
dec
loop
pop
jo
mov
mov
iret
sbb
jne
pop
sbb
test
stos
lahf
lock
pop
loope
insl
inc
mov
int3
adc
out
add
jecxz
xchg
mov
push
lea
xchg
jns
add
incl
and
and
mov
sbb
rolb
sahf
adc
out
pop
sub
fmuls
and
idiv
movsl
xor
aam
in
insb
pop
scas
loope
repz
out
sub
mov
cmp
jae
pop
jmp
cmp
test
cmc
add
or
add
mov
les
or
pop
and
ds
jg
cmpsb
clc
mov
je
mov
lcall
and
sbb
aad
jl
cmp
lret
iret
fstpl
int3
dec
pop
mov
cmp
mov
cs
lods
push
add
jns
cwtl
pop
mov
jl
gs
in
test
xchg
sub
add
adc
xorl
sub
div
ja
js
popf
xlat
sbb
jmp
insb
lret
dec
xor
or
or
or
push
jnp
sbb
jne
jmp
mov
pop
sub
das
testb
dec
popa
or
cmp
inc
mov
cld
scas
add
add
cmpl
nop
xchg
out
leave
hlt
in
mov
lahf
mov
loopne
popf
jae
push
repnz
push
lea
push
stos
inc
sti
xchg
in
jo
adc
sbb
and
testb
lea
jnp
sbb
sbb
ss
cmp
lret
out
xor
xchg
inc
mov
mov
mov
sub
mov
add
jmp
out
mov
xor
sbb
ret
or
jbe
sbb
sbb
ss
aaa
cmpsb
dec
out
pop
jbe
or
mov
sbb
insb
adc
jge
and
push
clc
je
and
insb
xor
aad
xlat
scas
and
inc
and
scas
add
add
imul
cmp
xchg
aad
pop
pop
mov
sub
and
repz
fiaddl
sbb
and
sbb
mov
dec
xor
sub
cmp
leave
mov
mov
or
mov
dec
jne
jnp
stos
jle
jnp
out
shrb
lea
stos
push
test
lcall
int
cmp
adc
jbe
cmp
and
pop
fbstp
mov
fsubs
cwtl
dec
fsubrs
je
sub
scas
jl
cmp
mov
mov
xchg
jbe
xchg
sub
add
sti
fidivrl
push
lahf
dec
inc
inc
outsl
and
sub
mov
in
sub
xorb
lcall
jle
fldenv
jnp
dec
outsb
jl
aas
pop
mov
scas
scas
sub
cmpsb
in
jnp
mov
repz
lcall
aas
lcall
lea
js
xchg
cli
mov
pop
js
fdivl
xlat
call
cmp
or
xchg
call
sbb
repz
dec
xchg
or
dec
or
dec
xchg
imul
add
inc
pop
add
inc
mov
add
pop
in
push
dec
inc
mov
xor
out
xchg
ret
aaa
pop
jecxz
icebp
popf
pop
in
cmc
push
pop
push
jno
lods
pop
lds
jge
rorl
jl
in
dec
push
xchg
push
and
xor
xor
mov
xor
into
xor
sbb
mov
push
in
jl
mov
imul
popf
or
add
popf
test
imul
test
sub
mov
jl
jp
xchg
add
aam
pop
call
scas
xchg
sub
scas
ret
push
loope
add
sbb
jno
mov
sahf
iret
mov
inc
xor
and
cwtl
sbb
pop
pop
or
jl
inc
in
es
push
mov
cmp
das
mov
test
cmp
scas
jecxz
push
push
sub
movsb
shll
inc
pop
setle
idivb
cmpsl
push
repz
sub
int
repnz
mov
inc
xorl
mov
dec
inc
xor
dec
sahf
adc
adc
cmp
fidivrs
mov
cmpsl
stc
inc
mov
fnstsw
inc
jb
shrl
popf
or
inc
test
jp
cld
jbe
mov
leave
jnp
stos
ret
neg
sub
jne
adc
sbb
sbb
ficoms
lahf
pushf
aad
xchg
dec
pop
dec
in
dec
dec
push
and
mov
jge
hlt
sbb
jmp
vmovhps
mov
flds
repz
sahf
popl
dec
jo
aad
mov
dec
lahf
aad
loop
pop
add
sub
and
mov
inc
sub
loopne
or
les
mov
dec
dec
les
cli
pop
push
loopne
lcall
dec
sahf
sub
dec
mov
adc
sub
sbb
lds
sahf
pop
mov
dec
xor
scas
arpl
loopne
push
ret
in
mov
fistpll
xchg
out
sub
mov
in
push
insl
lahf
sahf
inc
push
in
pop
inc
loopne
cmp
jle
push
pop
fmull
sarl
iret
mov
mov
cmp
loopne
faddp
and
enter
push
xor
call
test
loope
sbb
push
mov
aam
xor
mov
inc
es
pop
cmp
pop
sarl
jns
cmpsl
imul
fdivrl
das
aam
jae,pn
in
shrl
pop
mov
hlt
dec
pop
pop
loope
fnstcw
lahf
add
loope
daa
outsb
add
arpl
push
fldcw
jae
pop
imul
fstpt
stos
test
cmp
test
addl
sahf
pop
popa
and
jl
fldenv
shll
mov
cmp
mov
cmp
test
cmpb
mulb
adc
sahf
fyl2x
shll
push
ljmp
int
mov
jp
sbb
andb
mov
out
in
or
imul
pusha
pop
in
jae
imul
add
jmp
je
insl
dec
adc
xchg
mov
loop
mov
imulb
inc
insl
xlat
js
stc
and
in
mov
sub
sbb
insl
imul
outsb
sbb
idiv
pop
xchg
and
push
mov
jno
inc
or
in
dec
jno
mov
jno
adc
sbb
fisttps
imul
outsb
imul
cld
lcall
jns
sbb
pusha
cwtl
movsl
adc
jnp
sarl
jne
mov
shrb
pop
sub
add
jns
loop
je
add
rorl
jns
popf
mov
in
fnstcw
xchg
adc
mov
mov
sbb
mov
in
jb
cs
mov
in
mov
inc
or
adc
xor
ret
sahf
pop
cmp
mov
fildll
mov
jge
mov
jb
outsl
xchg
inc
mov
lods
mov
arpl
imul
push
dec
ss
cmc
xchg
dec
inc
and
add
sahf
xor
fs
test
int3
in
aas
mov
sub
pop
or
mov
movsb
repnz
rcrl
dec
jmp
pop
cmc
dec
or
cmp
shr
imul
popa
stc
rcr
pop
sahf
sub
push
or
or
xchg
xor
mov
test
add
lahf
adc
and
test
dec
sbb
es
adc
test
cmp
xchg
xor
in
testl
hlt
sub
imul
adc
push
insb
shrl
lcall
pop
mov
loopne
roll
xchg
cwtl
lea
jne
sti
sbb
shl
lea
push
xchg
cmp
xlat
push
mov
loopne
pop
and
adc
testb
jbe
les
mov
sub
sub
out
lea
dec
dec
xchg
pop
jno
pop
in
loop
outsl
cld
loope
jecxz
lcall
or
jns
xchg
bound
cld
scas
ljmp
cmp
lea
xchg
outsb
lea
gs
loope
icebp
pop
mov
xchg
fnstsw
cmpsb
imul
xchg
imul
testl
cltd
jmp
cltd
xchg
and
sub
cmp
cltd
sub
dec
push
rol
movsb
pop
mov
cltd
cwtl
scas
push
ret
mov
mov
and
rorl
daa
adc
fists
and
jae
popf
jns
push
test
inc
pop
mov
jbe
mov
and
xor
movsl
fisttpll
mov
fs
test
mov
ja
sbb
mov
sbb
call
xchg
inc
pop
mov
sub
add
xor
mov
fstpl
sub
jo
jns
mov
dec
stos
inc
stc
sub
in
stos
mov
movsl
dec
push
mulb
in
scas
divb
push
jnp
cwtl
not
xor
test
scas
repnz
cmp
aam
fcoml
push
testb
push
jnp
mov
lods
pushf
xchg
lods
jmp
and
cmp
ret
frstor
aaa
stos
outsb
xchg
push
in
inc
mov
mov
aaa
fcmovnu
or
mov
mov
sbb
mov
lds
mov
pop
jmp
inc
insl
adc
mov
insb
dec
sub
mov
ret
decb
out
rclb
and
xchg
scas
adc
and
sub
sti
fimull
sub
lods
mov
bnd
mov
xchg
hlt
pop
add
sbb
dec
xchg
imul
mov
add
add
leave
dec
cmp
aad
mov
xchg
nop
sahf
mov
mov
iret
faddl
sbbl
div
mov
pop
xchg
out
or
adc
jae
mov
fstl
test
in
mov
stos
mov
addr16
mov
les
aad
in
push
shrl
jl
loope
push
sub
pushf
lds
sarl
push
lock
mov
cmp
xlat
jae
mov
adc
int
ret
ja
scas
movsb
mov
pop
das
in
ja
pop
sub
xchg
or
mov
fsubrl
loop
dec
and
push
ds
pushf
pop
dec
push
mov
dec
sti
cltd
or
adc
fisttps
out
inc
add
sbbl
icebp
lahf
mov
aad
push
push
push
mov
mov
dec
not
out
aad
or
leave
lods
dec
sahf
arpl
cmpl
int
sbb
push
jnp
pushf
xchg
leave
lds
push
adc
aad
mov
sbb
xchg
iret
mov
stc
fdivrl
das
out
cld
popl
enter
fnstcw
jge
insb
int
sub
fdivrp
sbb
and
add
sbb
fcmovbe
int3
sub
dec
outsb
outsb
sub
xchg
push
mov
int
and
fcompl
sub
lods
add
int
pop
mov
mov
cs
sbb
fildl
mov
mov
movsb
or
add
rcrl
sti
mov
adc
test
loope
jne,pt
and
inc
cmp
fsubl
mov
cmpsb
adc
outsl
fdivrl
push
outsl
inc
aaa
or
pop
mov
mov
or
jns
ss
daa
jnp
aad
jnp
aad
fs
ds
loope
pop
mov
imul
and
cmp
cmp
xor
fstl
loopne
add
fstl
mov
sahf
fucom
cmp
fisttps
loope
jnp
loope
jnp
loope
jae
loope
scas
cmp
inc
xlat
in
loope
in
lahf
loope
jnp
inc
cmp
in
js
in
cmp
in
mov
sbb
loope
cmp
add
mov
jg
addb
jmp
xor
inc
fsubr
sbb
dec
js
push
mov
inc
cmp
lea
jb
outsb
or
dec
test
ds
loop
add
adc
lds
sti
je
bound
mov
in
push
mov
loop
adc
loop
in
cmp
push
js
xchg
xchg
cmp
in
sahf
inc
sbb
mov
add
add
dec
dec
sbb
push
icebp
popa
notl
sub
add
idivb
fistps
pop
nop
adc
arpl
mov
xchg
dec
mov
das
mov
outsb
xchg
ljmp
imul
sub
jno
out
cli
jne
xchg
repnz
xchg
lods
pop
bound
pushf
dec
nop
jnp
mov
mov
fwait
das
add
xor
aas
fcomip
jmp
stos
das
icebp
imul
add
inc
stc
cmp
stc
test
mov
xchg
dec
push
loop
aad
mov
pop
xchg
cmp
ficompl
xchg
mov
hlt
out
jle
dec
cmp
lds
fmuls
ds
leave
imul
stos
jne
inc
outsb
and
clc
cmp
and
pusha
aam
jno
and
in
dec
push
jo
loopne
std
fbstp
cmpsb
test
sub
jae
add
push
pusha
push
popf
insb
imul
xor
mov
or
or
fucomp
jnp
inc
or
aas
test
fnstsw
rcll
lods
mov
lahf
mov
xor
add
pusha
xchg
iret
jge
xchg
pop
je
push
xor
into
sub
fcompl
or
sub
jnp
jmp
out
or
cmp
lds
dec
cmpsb
hlt
cmp
push
loope
frstor
xor
push
js
shr
mov
xor
xor
out
push
jmp
in
mov
mov
lcall
xor
xchg
xor
inc
ljmp
xor
in
push
shll
fucomp
inc
or
sbb
test
mov
dec
push
rcr
mov
out
out
pop
in
inc
mov
mov
sbb
push
or
fsubrs
pop
out
pushf
loopne
sbb
fsubr
ror
mulb
dec
fildll
push
lods
jae
push
mov
xchg
dec
xor
mov
in
fisttpll
ss
inc
push
push
setle
mov
rcrl
xchg
sti
fst
xchg
mov
push
in
aad
in
adc
pop
mov
adc
mov
call
stos
mov
test
adc
lds
push
clc
mov
imul
mov
inc
xchg
cmp
enter
cwtl
mov
movlps
mov
movsl
jnp,pt
mov
cmpsl
push
rolb
inc
jno
sub
and
adcb
mov
pop
jg
iret
push
cltd
push
pop
dec
push
out
or
fistpl
stos
dec
cmpsl
lock
in
sbb
mov
sti
pop
pop
insb
repz
test
roll
or
xor
mov
in
mulb
mov
ds
aam
jae
xchg
mov
mov
cwtl
lock
negb
insb
dec
adc
in
notb
xchg
mov
dec
imul
dec
aaa
sub
mov
clc
std
test
rcrb
jae
popf
imulb
arpl
sahf
cmp
xchg
hlt
and
test
notb
jnp
insb
negb
xchg
loope
push
jae
sub
xor
mov
mov
in
pop
fcmovb
fcomip
es
mov
lcall
pop
xlat
in
neg
dec
pop
and
insb
mov
jo
mov
push
sub
fimull
mov
bound
or
lds
xchg
mov
ret
sbb
movsl
fdivl
repz
cs
push
outsb
fmull
ljmp
inc
pop
test
clc
lods
pop
in
rcll
xchg
lds
and
pop
cmpsl
mov
mov
insb
sub
cmp
js
stc
cmp
xlat
shlb
push
out
in
in
das
mul
sub
mov
cmp
xor
jnp
xor
adc
pushf
data16
cmpb
fdivs
nop
xchg
pop
cwtl
loop
and
adc
cwtl
insb
cmpb
sti
notl
aad
mov
jge
cli
ret
jmp
std
cmp
cmp
ss
mov
jmp
push
std
dec
fdivrl
mov
pop
insl
pop
lahf
fnstcw
mov
cld
test
ss
in
pop
ss
pop
scas
pop
lock
nop
out
mov
or
inc
add
iret
inc
les
cmp
js
cmp
jae
fcomip
cmp
dec
dec
loopne
test
pop
adcb
imul
xor
cvtdq2ps
ds
adc
in
mov
sbb
test
stos
sub
and
mov
push
pop
pop
xor
imul
mov
mov
outsb
movsb
sub
ja
daa
out
fmul
mov
int3
pop
fwait
sub
loope
cmp
inc
xchg
in
mov
or
pushf
jge
loop
arpl
inc
in
lods
cs
mov
jp
aad
or
js
inc
inc
aam
ljmp
int3
jnp
ljmp
cmp
insb
sahf
pop
pop
push
aam
add
lods
lahf
imul
ds
stc
cltd
pusha
jbe
dec
pop
enter
jb
arpl
testb
mov
xchg
jae
inc
mov
or
push
mov
insb
cmp
insl
test
push
lea
dec
cmp
or
dec
sbb
push
out
or
mov
lock
or
rcll
pop
push
push
mov
repnz
movsl
sbbl
out
movsb
rcrl
push
mov
adc
inc
repnz
or
jg
push
xchg
push
xor
scas
fst
rclb
add
lcall
pop
daa
mov
ret
std
frstor
mov
in
mov
adc
or
fsubrl
popa
stos
ffree
pop
sbb
rcrb
mov
sub
inc
aad
jmp
cmpsl
int3
sbb
sbb
clc
xor
mov
sub
movsl
pop
add
movsb
bound
or
jno
pop
bound
gs
adc
mov
daa
leave
testb
sub
stos
frstor
loope
rorl
data16
push
push
jno
or
pop
adc
xor
popa
mov
mov
or
outsl
aam
mov
cmpsl
rclb
dec
loopne
push
addb
add
sub
xchg
sarb
ja
pop
xor
sub
ret
jo
fcmovnbe
pop
ss
mov
mov
shll
hlt
sub
lcall
jbe
push
and
repz
sbb
movsb
jbe
outsb
and
adc
lret
mov
pop
mov
mov
imul
dec
mov
ss
outsb
fistpll
insb
sbb
pop
sbb
les
outsb
inc
aam
lods
mov
jb
cwtl
xchg
jb
or
cmpsb
xor
je
js
cmp
das
js
jb
fdiv
out
dec
or
jae
push
jbe
pop
xlat
ret
rcl
jns
iret
mov
aas
inc
jbe
inc
idiv
mov
mov
mov
aam
fnstsw
pop
fmull
in
stos
jbe
pushf
xlat
mov
movb
std
sbb
leave
mov
jl
lea
mov
cmp
lods
sub
mov
outsl
in
ss
xor
xchg
inc
xchg
scas
xchg
shll
jp
jnp
mov
gs
scas
push
orb
jle
dec
jnp
jp
add
xor
pop
xchg
jle
jecxz
sbb
mov
pop
pop
or
jle
sahf
fidivl
push
jle
adc
in
mov
cli
jnp
lcall
jecxz
mov
inc
aam
fcom
out
pop
and
mov
dec
xchg
in
into
add
add
xor
cmp
sti
ret
int
sbb
mul
subb
mov
mov
xor
pop
fbld
jmp
aaa
repz
jl
jo
test
mov
pop
pop
aam
shrl
or
xchg
int3
sbb
and
xchg
in
scas
xchg
adc
jmp
sahf
lock
imul
movb
nop
inc
push
dec
into
shrb
dec
inc
gs
fmulp
sbb
movsb
add
dec
jl
in
rclb
insl
inc
fdiv
cmp
mov
dec
jne
mov
in
mov
cmp
rcrb
outsl
fisttpll
insl
fcmovnu
ja
dec
fisttpll
xchg
mov
data16
orl
repz
stos
in
testb
mov
mov
out
mov
xchg
cmpsb
jnp
mov
dec
out
or
mov
out
pop
insl
jmp
leave
or
call
or
sub
out
out
movb
roll
int
mov
in
cltd
xchg
scas
mov
out
pop
mov
jne
aas
mov
jge
je
and
or
cs
adc
xchg
lret
jecxz
iret
mov
push
cltd
jae
mov
mov
aad
adc
push
mov
pop
jg
mov
pop
xchg
imulb
mov
lret
or
aam
stos
jno
notb
int3
sbb
vcvttss2si
mov
and
andb
jmp
jno
jne
stos
mov
xchg
ds
push
or
fists
neg
mov
xchg
push
pop
mov
add
jno
iret
jb
push
stos
stos
push
inc
cmpsb
xor
dec
xchg
mov
jb
rorl
iret
mov
inc
inc
popa
cltd
xor
mov
dec
pop
loop
fnstsw
cmp
pop
popf
jnp
lcall
adc
repz
fcomps
cmp
or
rcll
adc
sbb
and
ljmp
stos
sbb
ret
out
jnp
inc
add
xchg
ss
dec
mov
jo
mov
mov
ja
push
cli
aad
in
jecxz
push
mov
cmp
jecxz
sbb
cmc
repnz
mov
push
sbb
sahf
xor
lcall
sub
add
add
jae
iret
mov
pusha
sbbb
mov
and
mov
pop
add
mul
mov
cmpsb
cli
sub
sub
divb
add
hlt
in
out
add
loopne
jecxz
sbb
cmc
mov
insb
sbbl
lahf
js
push
add
or
mov
insb
fcomps
pop
pop
in
mov
sub
addb
roll
insb
cmpsb
insl
jae
fld
repz
into
xchg
jp
pop
sub
arpl
sahf
enter
cltd
andb
sbb
cmpsb
lret
cltd
dec
sub
imul
outsb
cmpsb
inc
adc
dec
sbb
adc
pop
pop
cmpsb
or
mov
ljmp
or
aam
stos
mov
pop
adc
ret
mov
int
stos
or
out
sbb
jmp
mov
push
inc
push
push
rorb
enter
loop
int
jno
sub
lea
cmpsb
rorb
sbbb
cmpsl
aas
rolb
pop
out
hlt
push
shr
and
outsb
sarb
stos
pop
push
jno
or
and
sub
adc
nop
or
loop
loope
je
sbb
test
add
pop
sbb
jae
sarb
xlat
mov
nop
pop
inc
jne
call
lcall
xor
test
push
leave
test
in
out
call
mov
outsb
hlt
add
insl
fisttps
push
movsl
mov
fimull
es
pop
lret
in
ret
inc
mov
insb
xor
inc
imul
mov
and
inc
fistpl
shlb
lret
sbb
lods
pushl
inc
cmp
add
aam
jns
test
in
sbb
jmp
inc
push
push
pusha
pop
mov
jle
dec
push
mov
and
or
loop
push
jae
mov
mov
mov
pop
rcrl
in
and
loopne
mov
mov
test
mov
xchg
mov
cwtl
mov
rol
mov
or
test
sbb
push
mov
cmp
add
loopne
ljmp
iret
mov
neg
sbbb
push
sbb
subl
insl
scas
repnz
cmc
icebp
or
sub
mov
fdiv
pop
test
dec
jle
in
pop
pop
shl
iret
sbb
mov
insb
dec
mov
in
ret
inc
je
lret
ret
shrl
es
iret
popl
mov
arpl
mov
xchg
and
in
es
adcl
sti
in
mov
rorb
outsl
sbb
jno
das
cltd
je
in
xchg
inc
or
fs
sbbb
xor
sub
add
sub
pop
in
xor
mov
gs
out
shr
lds
xlat
push
lcall
lret
fwait
dec
push
push
fistpll
inc
lods
out
movsb
or
mov
mov
das
mov
shr
push
sbb
lods
data16
andl
cmc
add
mov
nop
push
ds
mov
rcr
lret
ljmp
fists
jp
test
pop
xchg
cmpsl
imul
lret
dec
xchg
jp
jns
xchg
dec
mov
cmp
push
xor
pop
je
das
push
push
xor
testb
sub
inc
ds
sbb
add
imul
adc
add
pop
mov
push
inc
into
cmp
mov
pop
or
inc
pop
out
mov
inc
ret
fbstp
dec
cli
mov
xchg
aad
daa
inc
shl
addr16
movntps
movsb
dec
cs
rol
insl
cmp
pop
add
xor
push
js
cs
iret
les
notb
cmp
add
inc
or
xor
add
enter
scas
sub
lods
sbb
pop
or
sub
and
icebp
movsl
dec
push
adc
scas
lock
pop
xor
pop
sbbb
cmpsl
cmpsb
fsub
xchg
ja
int
leave
outsb
rorl
in
cmpsb
cs
fldl
and
inc
rcl
sbb
js
sbb
jae
aaa
and
dec
fisubl
mov
mov
push
cmp
and
movsl
add
popa
mov
negb
incl
dec
jg
sbb
xchg
out
mov
repnz
push
pop
ja
int
inc
mov
push
fsub
dec
xchg
mov
jp
aam
daa
in
sub
flds
test
jmp
imul
mov
mov
push
cwtl
loop
das
adc
lcall
inc
mov
adc
ja
pop
sub
mov
add
test
mov
add
ret
cltd
loop
in
add
out
in
inc
loop
xchg
add
sbb
xchg
loopne
and
stos
fst
loop
fstl
test
nop
inc
jbe
inc
scas
mov
ljmp
xchg
inc
push
mov
or
mov
out
ret
insl
inc
xchg
imul
adc
inc
adc
scas
mov
mov
vhaddps
test
push
pop
out
cli
ja
jge
ljmp
int3
icebp
xchg
dec
ljmp
lret
lcall
ret
mov
ja,pn
mov
mov
sbb
loope
out
ljmp
cld
shrb
test
out
rcl
out
call
daa
dec
mov
xchg
mov
xor
inc
repnz
lds
in
mov
pop
and
xor
lods
sbb
leave
or
adc
jmp
leave
add
jmp
in
pop
push
pop
xacquire
pop
cli
mov
mov
or
rcll
hlt
mov
lods
xchg
mov
and
mov
inc
sbb
mov
mov
test
insb
pushf
sbb
sbb
jae
adc
xchg
inc
xchg
test
shlb
in
add
popf
inc
je
aam
stos
cli
pop
pop
add
mov
mov
testb
ret
ds
packssdw
xor
ja
loop
je
cli
daa
add
pop
mov
and
cli
add
mov
xchg
mov
incb
push
shll
add
jb
outsb
cmc
mov
add
in
outsb
mov
mov
mov
jae
add
sbb
xchg
cmpsb
shll
fsubs
pop
arpl
in
mov
negb
aas
push
pop
jae
in
cs
push
mov
pop
in
mov
out
bound
lds
ret
jl
and
cmpl
xchg
loop
mov
pop
and
loop
xor
mov
mov
das
les
notb
imul
dec
dec
and
movsl
or
sbb
or
xchg
mov
sub
hlt
test
adc
add
rdmsr
jl
cmp
es
mov
pop
outsl
mov
lods
ret
cmp
xor
cmp
lods
mov
fst
fwait
jbe
out
mov
out
ja
aad
out
mov
icebp
adc
ja
dec
outsl
adc
test
mov
xchg
out
movb
mov
adc
stos
xchg
mov
cmp
sub
mov
aam
adc
shrb
fistpl
and
jl
adc
mov
sahf
jnp
lcall
pop
push
sub
jae
insb
pop
or
fcoml
leave
jns
mov
inc
jo
in
add
adc
aad
push
outsb
or
inc
jmp
out
subb
sub
mov
add
je
stos
shr
cmp
cmpsb
adc
jnp
int3
call
repnz
les
mov
out
or
mov
adc
stos
inc
insb
and
sbb
in
ja
int
out
arpl
sub
sbb
push
bound
or
out
or
inc
sbb
inc
in
mov
out
inc
pop
xchg
push
sbb
scas
sbbl
jmp
insb
scas
outsb
test
stc
insl
movzbl
jno
mov
push
seto
repz
out
popf
or
and
repnz
mov
inc
lea
scas
fstl
and
jnp
and
mov
push
mov
mov
pop
orb
mov
aam
int
rcrb
sbb
inc
cmp
daa
hlt
aaa
mov
imul
test
pusha
pop
mov
jle
mov
popl
jnp
pop
add
in
jae
sub
daa
inc
jnp
mov
adc
lcall
out
mov
es
mov
xlat
jmp
pushf
ret
xchg
fnstcw
inc
jo
das
in
push
jl
lock
in
outsb
add
fstp
sbb
pop
mov
mov
adc
adc
push
mov
jae
ret
int3
push
and
dec
xor
mov
xor
les
fmull
cmp
xor
or
jl
sub
mov
xor
imul
inc
and
mov
sub
rcll
scas
popa
jnp
ret
call
pop
loopne
movsl
int
sub
xchg
xchg
pop
sub
cmp
xor
aaa
out
xlat
jnp
xor
lcall
aaa
mov
fisttps
mov
sbb
dec
pop
xor
imul
sub
fnstsw
cmp
xchg
sub
cmp
test
sahf
popf
mov
sahf
in
rorl
fwait
nop
jge
xchg
cmp
mov
adc
dec
test
pop
roll
push
mov
push
rol
sub
push
pop
aas
mov
lods
xchg
mov
in
jl
and
sahf
stc
aas
loope
mov
insb
cmpsl
testb
enter
pusha
add
call
fldt
les
gs
flds
insb
popa
xor
pop
cmp
out
xor
js
push
mov
pop
shlb
cltd
lcall
popa
test
cmp
sbb
cwtl
mov
pop
mov
pop
adc
mov
cmp
insb
pop
or
mov
out
and
inc
pop
insb
mov
cmp
adc
mov
test
push
sub
stos
fistpll
cwtl
push
add
stos
push
psubsw
out
ss
cld
icebp
lea
lods
jae
pop
sub
cmpsb
outsb
inc
inc
jnp
aam
xchg
ret
stos
pop
sbb
xchg
lahf
mov
dec
fcompl
jnp
xchg
lret
mov
fisttpll
mov
push
in
imul
leave
jnp
lcall
mov
dec
lods
rcr
or
aas
fsubrl
lret
dec
inc
addl
es
aas
mov
int
pavgb
dec
cmp
ja
call
jae
out
xor
jle
popf
jp
lds
int
cli
sub
sbb
arpl
sbb
xchg
mov
push
push
mov
push
inc
xchg
insb
bound
out
jnp
push
push
or
call
std
and
jnp
call
mov
jnp
cli
push
dec
int
jmp
mov
jecxz
fildll
lcall
cmpsl
fsubrl
mov
mov
loope
cld
or
pusha
push
lock
dec
pop
jmp
xor
test
pop
dec
loop
and
push
pop
daa
out
lds
mov
jbe
push
jmp
and
pop
mov
les
jp
out
sbb
mov
cld
dec
sbb
pop
sahf
pop
mov
dec
loopne
lret
push
andb
in
or
pop
mov
mov
cmp
mov
fwait
inc
or
sbb
out
pop
fs
shl
mov
sarl
cmp
adc
inc
mov
jmp
xor
fisttps
lret
add
pop
inc
pop
jle
cmpsb
rorl
in
and
das
ja
inc
mov
add
inc
loopne
arpl
cmpsb
pop
inc
arpl
xor
arpl
mov
cmpsb
fmuls
push
push
aas
mov
aad
inc
mov
test
ja
xlat
test
pop
and
addr16
dec
pop
ds
mov
ret
out
and
fs
sub
fs
sub
mov
test
arpl
sub
test
pop
clc
ds
push
mov
adc
repz
pop
outsb
xor
lock
roll
pop
test
sar
stos
xor
lret
mov
aaa
je
imul
push
clc
mov
xor
inc
outsl
stos
fstl
pop
arpl
jo
outsl
in
adc
test
add
clc
in
xchg
iret
inc
aad
jbe
test
jmp
cwtl
arpl
shll
test
add
test
add
clc
sub
jae
add
js
ja
add
loopne
ja
or
jmp
inc
test
jecxz
mov
scas
out
jae
mov
dec
out
mov
js
and
adc
jnp
mov
in
inc
and
ret
lods
push
cmpsb
push
add
jmp
loopne
jnp
fmull
mov
lahf
pop
movsb
xor
mov
pop
jnp
fldt
cmp
mov
add
scas
jg
mov
pop
ljmp
mov
repz
out
jg
jae
jg
jnp
sbbl
jbe
addl
sti
inc
mov
idiv
add
out
sbb
mov
adc
loop
xor
cmp
mov
je
mov
loope
sub
jbe
mov
sbb
scas
and
add
in
lret
das
mov
fwait
lcall
test
shl
sahf
sub
add
mov
divb
ret
push
mov
jmp
push
ss
nop
imull
outsl
mov
out
stc
sbb
adc
pop
dec
cmp
sahf
hlt
stos
xchg
ljmp
out
mov
pop
inc
outsl
aaa
bound
aad
sub
mov
cwtl
sub
add
mov
mov
jno
mov
cmp
ljmp
cmp
xchg
subb
pop
xchg
fsubp
cmp
push
sub
mov
jnp
idivl
cld
xchg
cpuid
clc
sub
test
xchg
testl
and
scas
mov
mov
mov
push
dec
ljmp
add
or
pop
jno
mov
dec
dec
jp
or
cld
sub
lea
aaa
out
ror
test
pop
cmp
mov
mov
out
movsl
xlat
fcomps
jmp
fwait
shlb
xor
addr16
stc
jnp
lahf
sahf
aam
sub
mov
add
in
lahf
push
add
jbe
mov
lahf
sbb
mov
mov
repnz
or
mulb
in
or
push
cmc
movb
pop
jnp
mov
stos
fwait
sub
and
xlat
in
jo
jne
dec
sbb
cmpsl
push
mov
cmpsl
xchg
in
out
outsl
push
in
mov
mov
stos
mov
or
gs
stos
fnsave
sub
cmp
push
repnz
mov
hlt
pop
or
mov
cmpsb
jne
popl
dec
jne
sbb
mov
xchg
mov
es
ret
jnp
out
insl
fistps
fistpl
xchg
dec
cmp
jmp
mov
in
adc
push
mov
adc
test
notb
je
sbb
xchg
jnp
dec
push
ret
inc
cmp
cmp
mov
pop
repz
stc
ds
sarl
or
dec
addb
push
lods
pop
stos
fcmovnbe
mov
test
andb
int
mov
xchg
loop
mov
sub
jg
inc
addl
sarl
mov
shlb
mov
mov
mov
and
ds
rorl
in
jbe
das
pop
push
mov
mov
fnsave
subb
jns
xchg
xor
out
out
jo
jae
stos
shll
pop
xchg
int3
xchg
xchg
pop
jno
mov
mov
push
push
sbb
out
ja
insb
pop
movsl
sbb
push
push
loopne
sarb
ret
das
cmp
adc
test
idivb
mov
adc
outsb
aaa
out
sti
dec
jmp
fldt
mov
sahf
cld
ret
jmp
adc
and
mov
xlat
in
mov
push
mov
mov
mov
pop
mov
negl
add
dec
pop
jecxz
ficoms
cltd
fstpl
xor
inc
xchg
xchg
lea
pop
nop
dec
lss
push
mov
dec
mov
jne
add
fbld
jnp
cmpsb
ffree
ss
test
lods
sbb
jmp
js
dec
int3
sbbl
mulb
sbb
push
pop
jo
or
push
imul
xor
cld
movsl
cmp
sbb
imul
enter
decb
mov
sub
xlat
in
je
push
outsl
mov
sbb
in
addl
leave
sub
push
icebp
mov
mov
jns
iret
xlat
lods
jae
shl
imull
sub
shr
cmc
in
out
in
jno
inc
in
pop
fwait
rdmsr
not
cmp
xchg
in
mov
int3
in
je
jnp
sbb
cmc
or
xlat
or
fdivrp
dec
mov
xlat
cmc
sbb
xlat
lds
pop
sbb
icebp
cltd
pop
xchg
jne
adc
dec
xchg
lods
sub
mov
sbb
icebp
inc
cmpsl
out
cmp
clc
or
dec
xchg
or
pop
dec
sbb
ret
sbb
jge
mov
inc
imul
xchg
mov
cmpsb
jnp
fcmovnu
or
int3
lea
or
lods
fldt
dec
or
cmpsb
cmp
xchg
push
jl
fsubl
mov
mov
sbb
push
pop
ss
pusha
lahf
imul
hlt
in
mov
inc
rcll
dec
pop
mov
dec
pop
push
ret
shl
leave
int3
stos
adc
and
out
push
and
rclb
out
int3
jecxz
dec
mov
add
xchg
push
push
mov
inc
mov
xchg
dec
mov
aad
jb
jae
pop
in
out
dec
inc
popa
sbb
lods
cmp
pop
or
cwtl
adc
pusha
push
sub
scas
je
div
pop
dec
mov
insl
in
xor
pusha
mov
js
out
pop
xchg
inc
iret
icebp
sbb
push
or
inc
add
daa
out
in
jae
dec
inc
cwtl
and
sub
mov
ss
or
pushf
movb
mov
jmp
jg
sub
xor
in
jmp
stos
imul
mov
mov
pop
cwtl
dec
pop
out
loopne
jmp
shlb
out
mov
inc
pop
mov
xchg
add
loopne
das
add
lods
dec
xlat
test
fidivl
sbb
arpl
ljmp
add
fisttps
cmpsl
cltd
dec
aad
jmp
mov
mov
sub
jp
mov
fdiv
mov
mov
pop
imul
cmc
sub
cmpsl
dec
cltd
mov
rcr
mov
mov
das
add
test
push
inc
sbb
mov
jae
cs
push
lea
pop
aaa
repz
or
hlt
push
mov
hlt
mov
add
inc
test
loope
test
push
jae
jbe
testl
sub
enter
sub
pushf
xor
je
pop
sub
rclb
out
jl
cmp
hlt
sbb
push
pop
jns
insl
and
pop
adc
cmp
ret
leave
dec
filds
ret
orb
dec
scas
or
push
shl
mov
fmull
rclb
fnstcw
fldcw
push
and
adc
jnp
loopne
fists
pop
or
jle
aaa
lcall
data16
sbbl
in
pop
jp
dec
fildll
daa
insl
call
addr16
in
sub
or
jo
pushf
add
xlat
xor
push
sbb
ret
sahf
aam
imul
mov
outsl
xor
cld
lock
xor
out
aaa
fistps
sbb
insb
mov
sub
or
dec
iret
pop
in
jl
adc
in
neg
or
and
cmpsb
loop,pn
jge
add
sbb
xchg
ret
loope
xor
pop
mov
into
sbb
sti
cmp
mov
fadds
mov
xor
std
out
outsl
iret
andb
ftst
pop
div
out
test
fimuls
xlat
adc
les
cltd
adc
pop
fdivl
fsubrl
fnstsw
fsubr
hlt
inc
cmp
div
xchg
xor
int3
mov
push
mov
out
ret
in
push
cmp
jmp
fisubl
fucomi
sbb
mov
mov
sti
lock
mov
popf
xor
dec
je
movsb
inc
cmpsl
int
mov
push
insb
out
out
and
cmp
iret
mov
sbb
push
jp
repz
xchg
ja
mov
ds
arpl
faddl
lret
lahf
addb
inc
sbb
sti
popf
fcmovnbe
push
fwait
outsl
scas
jmp
repnz
shrl
pop
cmpsb
lock
fcompl
add
call
jno
mov
sub
jae
xchg
mov
sti
loop
loopne
into
xchg
scas
mov
addr16
jnp
xor
and
dec
lahf
fisttpll
shll
pop
dec
ljmp
push
mov
mov
mov
mov
xor
test
shl
jp
mov
adc
mov
jbe
out
dec
ficoms
std
into
mov
dec
stc
mov
arpl
in
addr16
adc
out
lret
ja
loop
jnp
adc
sub
mov
mov
out
hlt
ret
xchg
lahf
lock
movsb
cld
ds
insb
sbb
lods
fbld
sbb
out
xor
lret
sub
fs
mov
mov
in
mov
in
out
pop
pop
mov
mov
in
in
bound
push
mov
cmp
ret
sub
push
mov
xchg
lock
lret
xor
jne
pop
jmp
xor
mov
out
fwait
mov
and
mov
sub
push
xchg
paddsw
in
loop
lods
lods
das
xchg
mov
cs
add
hlt
push
pop
js
fisubs
sub
out
fcomip
jae
outsl
adc
icebp
pushf
lock
inc
xlat
dec
mov
into
cmp
movsl
fists
outsb
or
fstl
push
jnp
xlat
mov
jg
sti
pop
loopne
negl
pop
pop
mov
sub
mov
pop
mov
add
loopne
ss
in
arpl
cld
add
sub
into
jecxz
in
xchg
daa
mov
adc
or
imul
push
jmp
stc
iret
loopne
shll
sub
xor
fidivs
das
div
push
in
cmp
lahf
repz
fdiv
mov
mov
sti
jmp
pushf
xchg
cld
test
jle
leave
out
sub
cmpsl
jns
lahf
out
adc
jg
or
mov
cmp
ret
ret
insb
mov
adc
in
pop
mov
js
xchg
mov
mov
mov
jnp
subl
mov
leave
jg
cmp
mov
movsb
dec
daa
mov
fstps
scas
outsl
scas
fld
cltd
scas
loopne
jo
mov
push
add
into
mov
divl
lock
or
idivl
mov
mov
mov
mov
lds
dec
iret
pop
movsb
arpl
pop
sti
push
and
cmpsb
lahf
dec
mov
test
or
outsl
scas
ljmp
sub
inc
leave
rcr
push
iret
dec
inc
jns
mov
in
aas
cmp
dec
daa
ficomps
mov
xorb
sbb
mulb
mov
mov
push
mov
pop
fbld
in
xor
ja
pop
movsb
fwait
xchg
dec
mov
mov
push
out
cwtl
inc
push
sbb
fldenv
fcomip
ret
sub
xchg
and
sbb
lahf
mov
cld
mov
scas
pop
cmp
mov
pop
jns
icebp
mov
mov
xchg
cmp
out
mov
sbb
movsl
daa
js
cmpsb
mov
mov
pop
xchg
rcrb
jmp
dec
push
sbb
jnp
popa
movsb
mov
les
sbb
fbld
idivb
cli
sbb
out
xor
mov
mov
ret
hlt
pop
jae
aaa
xor
scas
pop
fsts
lret
pop
or
fmuls
adcl
test
iret
rorl
aaa
xchg
lock
in
or
jno
and
in
push
cltd
xor
ss
es
and
mov
sbbl
divl
add
jae
loopne
xlat
sti
lock
aas
fildl
cmp
shlb
mov
insb
sbb
jge
xchg
cltd
mov
shl
add
subb
adc
cli
andb
cmp
cli
push
movsb
repz
pop
sahf
ljmp
ss
cmp
es
and
in
cmp
ficomps
pop
xlat
adc
or
sti
push
jg
maskmovq
testl
fsubrl
mov
inc
ret
mov
in
mov
out
inc
fstpt
sub
jge
push
scas
mov
jmp
icebp
xor
jne
mov
cmc
les
fwait
xchg
inc
aas
dec
xchg
xlat
mov
inc
mov
jmp
out
scas
stos
push
push
mov
and
ficompl
out
jbe
movsb
adc
fsubs
out
testb
fstps
xchg
insl
fistl
jg
testb
fidivrs
fstps
mov
sub
aas
insb
xchg
addr16
add
negb
out
out
shlb
dec
mov
pop
popf
lahf
jno
adc
mov
push
cld
in
out
dec
decl
push
cmp
mov
lods
aas
add
or
or
sarl
ljmp
pushf
enter
push
ret
lds
jae
add
subb
fcomps
jg
adc
push
dec
cmp
mov
push
push
mov
pop
push
imul
inc
out
iret
sub
arpl
mov
test
push
in
xor
mov
jae
call
arpl
icebp
out
fcmovnbe
cmp
in
adcl
mov
scas
or
lret
jns
mov
lahf
aaa
mov
mov
add
mov
adc
addb
imull
sbb
dec
fidivl
insl
and
cmpsb
testl
das
xchg
push
sub
repz
loope
jo
mov
inc
daa
mov
mov
pop
inc
iret
addr16
popf
imul
cld
mov
jp
iret
ret
xlat
push
and
cli
pop
jg
fistpll
jmp
fdivrp
xlat
and
fisubs
fsubs
adc
mov
xchg
push
ds
pop
popa
scas
mov
lods
movsl
cli
mov
jne
mov
dec
inc
dec
sti
push
mov
ljmp
mov
push
pop
dec
cmc
in
and
testb
mov
push
shlb
jecxz
cli
jno
sub
push
lahf
stc
lahf
mov
pop
imul
sbb
adc
jg
div
jae
push
adc
or
out
outsb
mov
cs
and
ss
fidivs
ja
adc
loopne
cs
sbb
je
xchg
mov
xchg
sub
bound
ja
ja
out
mov
mov
ja
mov
addr16
repnz
imul
stos
iret
sub
movl
xlat
sti
jnp
jmp
add
xchg
add
rep
or
out
cmpsl
mov
pop
adc
loope
pop
daa
push
pop
push
iret
cli
mov
cmpsl
mov
cmc
test
imul
mov
mov
xchg
xchg
ja
faddl
clc
pop
push
out
in
or
mov
fcompp
jmp
pop
cmpl
xor
inc
push
out
adc
cli
cs
cmp
into
jne
mov
out
scas
xchg
and
push
mov
mov
and
lds
jns
mov
leave
jg
ds
imul
mov
js
lret
cmpl
jecxz
add
add
xor
ret
add
lret
push
fisttps
cs
in
scas
jbe
mov
pop
pop
xor
add
addr16
sub
ret
in
sbb
mov
sub
jg
lcall
cmpsb
mov
sbb
out
add
lret
imul
jmp
dec
pop
inc
xchg
sbb
in
mov
sbb
and
ljmp
ucomiss
fcomi
jns
fwait
pop
out
pop
scas
pop
ss
aas
fildll
andb
loop
mov
pop
jmp
pmullw
imul
scas
cmp
data16
iret
sahf
sub
and
fsubr
clc
sub
mov
cs
int3
adc
sub
cmpl
sbb
sub
rcrl
in
int3
pop
cmp
add
jle
dec
cli
jns
fucomp
fadd
jmp
xorb
and
pop
faddl
xchg
mov
sbb
adc
das
mov
push
push
mov
stos
and
out
xchg
sahf
scas
fcompl
int3
jo
push
jmp
inc
fidivrl
fisubs
incl
pop
pop
mov
testb
and
dec
jecxz,pn
call
cmp
mov
cwtl
xchg
int
iret
jae
dec
cli
popf
pop
dec
fsubp
hlt
xor
inc
int
sub
xchg
out
lret
aam
je
loop
cmp
fcoms
jnp
or
push
mov
in
sahf
lahf
mov
mov
xlat
pop
mov
lret
push
jecxz
add
lods
enter
mov
mov
ja
xor
imul
gs
fcmovbe
notl
aas
inc
or
push
lfence
xlat
add
lods
hlt
push
add
outsl
jnp
and
xor
mov
jmp
pop
popa
cmp
cli
insb
pusha
pop
push
into
fdivrs
adc
add
leave
mov
movsb
mov
mov
pop
sub
adcb
sub
int
adc
adc
stos
xchg
adc
loope
enter
popa
andb
sub
fucomip
and
sub
mov
into
test
testl
and
or
adc
inc
aad
dec
lahf
shl
push
aas
cli
mov
int
dec
lds
push
xlat
mov
cld
cli
sbb
test
jg
bnd
fdivrs
fwait
inc
sub
push
cmpsl
cmpsb
jb
inc
ficoms
cmpsl
add
xchg
inc
cmp
shlb
test
call
jmp
cmc
xchg
pop
lock
shrl
sahf
fisubrs
cmp
scas
movl
xlat
mov
jmp
sar
lahf
xor
lods
pop
lods
sbb
dec
cmp
ja
ficomps
adc
mov
pop
cmc
mov
leave
push
insb
xchg
mov
lds
dec
mov
repz
mov
std
mov
lock
dec
into
mov
mov
daa
rclb
mov
je,pt
mov
outsb
stos
dec
ret
test
push
jne
inc
lock
fimull
repz
fnstcw
cmp
xchg
push
xlat
mov
lods
push
std
jl
mov
cltd
pop
push
mov
in
std
int
clc
sbb
sbb
leave
mov
mov
imul
neg
fsubrp
and
into
cmp
fimuls
jp
fists
leave
mov
jge
aam
icebp
js
cwtl
insl
mov
ja
mov
lods
cmpsl
ja
dec
xchg
out
mov
add
add
fdivr
pop
mov
stc
pusha
cli
ds
sti
subl
adc
mov
sbb
mov
fisttpl
out
ret
inc
out
ftst
and
adc
cs
mov
mov
jge
sub
pop
in
add
add
test
leave
lret
mov
mov
cmp
pusha
stos
jp
jnp
movsb
xchg
test
xchg
lock
mov
xor
sti
mov
inc
cmpsb
xor
jg
lds
rol
pop
mov
repz
adc
mov
enter
adc
in
aaa
js
out
outsb
xchg
pop
mov
jmp
iret
mov
add
aad
nop
mov
out
push
jmp
out
xlat
push
lret
pop
int3
sbb
jne
xchg
or
push
outsb
jnp
notl
in
sahf
stc
repz
cmp
imul
sub
das
mul
mov
ficomps
enter
ja
div
inc
loopne
jnp
aaa
jp
outsl
add
push
pop
fnstenv
dec
lods
mov
mov
cmc
ss
push
aas
push
mov
pop
imul
sti
cltd
push
mov
js
int3
push
push
and
and
lret
xor
cmp
push
mov
stos
icebp
push
jns
add
cs
adc
xor
lahf
push
fistl
shlb
mov
leave
imul
icebp
jns
mov
int
mov
jmp
and
push
filds
pop
cmpsb
shrl
repz
lret
scas
adc
dec
xor
add
bound
imul
dec
lock
leave
ljmp
push
and
fisubrl
arpl
adc
in
sub
or
jg
mov
mov
mov
lods
mov
idiv
jnp
mov
cmp
xchg
fcoml
into
mov
cld
imul
mov
mov
out
mov
decl
shrl
cmp
xor
xchg
fidivrs
push
xor
sahf
push
aam
lahf
jns
sub
insl
push
cmp
pushf
push
cmpsl
cmp
mov
xlat
adc
or
inc
outsl
jae
cwtl
sbb
enter
pushf
mov
std
cmp
loope
mov
cmp
fnstcw
push
jbe
insl
mov
imul
mov
cmpsb
mov
cwtl
sub
xchg
mov
adc
lret
cld
imul
je
cmpsb
xlat
mov
push
push
ljmp
repnz
add
or
or
mov
repz
xchg
xor
fcmovnu
pop
mov
out
rol
mov
mov
mov
mov
and
xchg
fildl
inc
mov
or
test
cmpsb
fmul
adc
aad
aad
sbb
leave
add
mov
mov
mov
lahf
push
adc
xchg
rorb
sbb
arpl
repz
lahf
pop
outsl
cmp
clc
fbld
pop
pop
in
push
ret
cmc
pop
push
rorl
aam
ficomps
xor
mov
inc
mov
data16
shlb
mov
imul
push
pop
leave
movb
idivb
xchg
shlb
fbld
jmp
into
les
or
fnstsw
inc
aas
mov
cs
int
sub
jge
shl
sub
rcll
xor
jns
sbb
mov
mov
mov
jae
pop
aad
mov
pop
dec
stc
std
mov
xor
cmp
daa
aam
iret
fistl
mov
pop
ja
jmp
mov
push
sub
jge
scas
call
or
mov
hlt
test
das
cmp
repz
add
cmp
sbb
cld
or
mov
add
xchg
push
insl
ja
cs
pop
inc
push
icebp
adc
aaa
fsubs
fnstenv
mov
js
mov
sub
fisttpll
add
pop
inc
jp
pop
addr16
rclb
int
push
test
mov
loope
and
lahf
div
fisubs
ret
cwtl
das
into
ja
mov
div
fisubrs
dec
repnz
add
xchg
arpl
mov
fstp
stc
outsb
mov
pop
sub
ficompl
mov
mov
lock
mov
xorl
inc
mov
mov
sarl
jbe
sbb
mov
imul
js
xchg
roll
ret
ret
xlat
fucomip
jb
je
movq
mov
insb
hlt
xlat
xor
hlt
cmpsl
shlb
sbb
sub
cmp
icebp
inc
jbe
out
roll
mov
jno
mov
pop
cmp
lret
mov
mul
dec
pusha
pushf
xchg
adc
mov
negl
repnz
jmp
and
loope
cmp
xor
mov
js
cmp
roll
aam
jle
push
xlat
cmp
pop
out
xlat
mov
fistpll
inc
testb
mov
mov
cli
mov
sbb
cmp
inc
mov
jne
in
shrb
mov
outsl
ds
fdivp
cltd
mov
push
cmpsb
xor
loop
paddw
dec
push
push
xchg
aaa
add
pop
scas
ficoms
iret
mov
mov
mov
and
fisttps
sbb
and
shlb
in
ja
and
ret
iret
mov
mov
push
in
lods
cmpsl
fistl
shrl
cmp
vcvtdq2pd
test
shrl
ret
pop
dec
std
push
fnstcw
xor
nopl
neg
mov
mov
movsl
mov
test
dec
cmp
pop
push
xchg
stos
jp
pop
dec
sub
cmc
mov
pop
pop
push
push
mov
aam
mov
inc
mov
scas
jns
or
lea
rorl
in
mov
inc
push
xor
into
pop
pop
addr16
adc
mov
mov
lea
lock
mov
jmp
mov
cmpl
sbb
xchg
iret
pop
pop
fisttpll
sbb
sub
cmpsb
jecxz
lea
fldl
mov
aas
fcmovu
inc
add
and
inc
pop
push
cmp
jns
outsl
jmp
neg
sbb
insl
out
jmp
int3
sti
jecxz
ficoms
and
sub
lods
mov
push
sbb
pop
sbbb
mov
popf
roll
and
stos
mov
cmpsb
dec
mov
mov
jmp
dec
mov
jmp
lret
cmp
clc
ret
in
rcrb
insl
int3
pusha
pop
fdivs
iret
jmp
iret
pop
insl
loope
jge
mov
out
push
sbb
xchg
aad
pop
fucom
in
outsb
out
rorl
mov
mov
leave
outsb
mov
xor
xchg
jg
mov
jo
aaa
cltd
fisttpl
mov
jno
mov
jl
in
and
push
fstp
mov
das
mov
lods
xchg
adc
cld
pop
iret
movsb
jnp
mov
mov
pop
hlt
movzbl
cmpsl
cmp
cs
xchg
aam
pop
push
add
mov
leave
dec
popf
jne
fistps
xlat
cmp
fcomps
gs
inc
inc
sbb
cmc
pop
sub
loop
mov
scas
sub
cli
sub
je
xchg
lret
push
and
call
fsubrp
stc
add
leave
pop
push
mov
xchg
ret
lret
push
inc
sbb
insb
jno
push
jno
insb
xor
push
push
cli
mov
daa
jg
xor
mov
inc
rcl
jo
stc
popf
lock
xchg
stos
mov
adc
fldcw
fcomps
movsb
sub
insl
cmp
repnz
outsb
push
jle
lock
fcmovu
xchg
stos
icebp
or
cmpsb
imul
push
cmp
cltd
mov
out
das
aas
jge
dec
mov
mov
push
sbb
int3
dec
in
adc
call
shrb
jge
icebp
aaa
in
lcall
out
out
pop
das
shrl
nop
inc
int3
and
sbb
push
mov
scas
mov
sahf
test
negb
imul
pop
fdivrs
cwtl
push
add
lahf
out
lret
dec
cmpsb
pop
cmp
pop
stc
mov
out
mov
pop
cmpsl
mov
gs
jae
cmpsl
jle
sahf
jne
sbb
pop
les
mov
cmpsb
or
xor
cmp
or
mov
lahf
and
add
lret
mov
mulb
push
mov
add
jnp,pn
fstpl
outsb
scas
fists
mov
popf
adc
scas
mov
push
xchg
mov
mov
inc
andb
adc
scas
jnp
loopne
dec
data16
fisubrs
sub
jg
pop
into
aad
pop
out
mov
push
jnp
jl
fldcw
jge
popf
mov
xchg
ljmp
push
clc
out
icebp
pop
sti
cs
js
aad
scas
frstor
in
sub
je
and
mov
cli
scas
iret
push
out
in
fisttps
mov
dec
daa
mov
insl
mov
inc
mov
mov
dec
push
ljmp
in
test
xor
or
mov
fucomip
xor
sarl
pop
pop
mov
jmp
dec
dec
test
dec
fbld
and
mov
xchg
dec
in
movsl
push
daa
pop
ljmp
inc
mov
data16
fucomi
bound
xor
ds
jns
xor
out
sub
fistl
into
out
xchg
mov
mov
out
or
jle
mov
imul
outsl
cmpsl
push
movl
mov
jmp
in
iret
pop
sbb
les
ja
mov
loop
mov
sbb
cmp
out
mov
jmp
inc
xor
iret
pop
pop
repz
aad
pop
xchg
add
mov
jp
xor
jae
cmp
out
mov
test
ja
in
loop
push
fisttps
xlat
lahf
leave
fisubrs
pop
dec
mov
loop
loopne
mov
sarb
jno
cs
xor
mov
xchg
fbstp
scas
out
inc
outsb
or
sub
ljmp
or
pop
cmpsb
mov
in
inc
mulb
out
stos
movsl
mov
lahf
loopne
stos
sub
mov
push
mov
rcl
jecxz
pop
dec
aam
push
push
aas
test
std
cld
repnz
or
mov
aas
lahf
hlt
xchg
inc
push
in
mov
test
pop
loopne
pop
pop
sahf
movsl
jge
iret
fisttpll
push
mov
mov
fdivr
inc
jae
lcall
imul
addr16
in
leave
push
pusha
jno
enter
cmpsb
or
xor
mov
outsb
psraw
test
pushl
xor
fdivrs
mov
sbb
pop
mov
mov
repz
imul
cld
aas
cmp
iret
pushf
mov
mov
jg
ljmp
dec
lock
mov
out
mov
fnstenv
xor
adc
push
add
mov
jl
pop
mov
mov
ret
sbb
mov
dec
sub
add
clc
jle
jle
test
neg
jg
pop
out
mov
call
pop
sub
aad
clc
sbb
lahf
out
popf
cwtl
outsb
mov
ret
add
xor
pop
rclb
mov
insb
popf
and
sub
dec
in
add
mov
adc
cli
adc
sub
imul
fsubrp
add
sub
or
push
jo
mov
jno
and
push
in
ret
iret
fisttpll
mov
cmpsb
inc
clc
mov
sahf
loopne
cli
sbb
pop
outsb
addb
xor
add
and
sbb
dec
jno
ret
leave
addl
mov
mov
iret
xlat
test
mov
addl
in
mov
scas
pop
jl
jmp
lret
pop
add
jmp
cmp
enter
cmp
inc
stos
cs
leave
mov
mov
mov
add
call
iret
adc
push
lahf
icebp
add
pop
push
xchg
pop
jmp
push
mov
pop
xchg
addr16
jnp
cmp
jo
adc
pop
jne
mov
out
ss
test
adc
dec
sbb
ret
and
fmul
imul
pop
int3
dec
scas
insl
fidivrs
or
lods
leave
sub
sti
sti
mov
pop
push
int
or
pop
xor
inc
mov
sub
repnz
xor
popa
push
hlt
cmp
inc
scas
pop
out
xor
out
rcrl
dec
inc
movsl
in
adc
ja
in
push
in
pop
sub
inc
mov
hlt
clc
sbb
in
scas
aas
jmp
add
jmp
mov
nop
jbe
jmp
dec
popf
xchg
pop
jnp
arpl
ss
bound
icebp
adc
ss
in
scas
fbld
ret
adc
repnz
sub
xor
dec
cmpsl
ja
loop
stc
adc
aad
push
pop
fisttpll
sbb
fildll
pop
ds
ss
fucomi
inc
jbe
out
das
adc
add
or
xchg
inc
ds
scas
dec
xchg
push
mov
mov
adc
clc
xchg
lret
mov
test
mov
sbb
mov
icebp
mov
pop
cmp
clc
out
adc
es
out
test
cmpsb
outsl
fsts
leave
iret
sbb
adc
gs
pop
mov
bnd
out
lods
dec
shlb
stos
out
out
pop
leave
dec
adc
clc
out
jge
mov
lahf
mov
nop
jp
scas
push
arpl
sub
xor
push
pop
jg
mov
sar
cwtl
mov
mov
adc
outsl
aas
jnp
xchg
dec
arpl
out
dec
jg
arpl
push
in
mov
cmp
int
xchg
in
xchg
sub
and
xlat
sar
pop
push
sub
cli
imul
adc
cli
mov
add
fbld
push
mov
push
fldl
sbb
xchg
add
pop
xchg
push
xor
cld
sub
dec
pslld
ret
insb
sbb
outsb
jae
int
ljmp
mov
mov
leave
mov
mov
outsl
mov
mov
inc
xchg
push
and
sti
cwtl
lret
rcr
fisubrl
shrl
movsb
pop
jmp
xchg
mov
loop
and
fsubr
outsb
cmp
cmpl
mov
push
shrl
mov
out
add
pop
fists
dec
cmp
xor
inc
pop
outsl
in
rcr
outsl
dec
iret
dec
dec
jnp
inc
in
xchg
imul
stos
xlat
gs
dec
stos
fisttpl
inc
not
pop
push
inc
test
scas
jle
xchg
fsts
and
mov
sub
mov
outsl
lock
insl
in
call
jnp
sub
ficomps
setg
mov
mov
pop
cli
out
movsb
push
hlt
lahf
stos
pop
fisubl
mov
pop
mov
and
aad
stos
ss
cltd
test
or
push
sbb
sar
push
repz
fdivs
in
shlb
addr16
mov
sbb
mov
and
sub
fimull
js
inc
cmpb
mov
pop
push
insl
js
hlt
mov
adc
pushf
js
mov
lock
push
sahf
mov
cmp
pop
adc
xchg
mov
jmp
or
xor
loop
out
mov
xchg
imul
cmpsb
mov
clc
xchg
outsl
xchg
lods
or
dec
scas
xchg
clc
adc
out
in
cltd
mov
div
cs
jg
bound
cmc
icebp
loopne
ret
outsl
rorb
sbb
popf
mov
mov
cmp
jg
cmp
inc
sub
cltd
imul
mov
xor
idivb
push
cmpsl
sbb
clc
leave
rol
mov
lret
cs
into
and
mov
scas
jmp
or
pop
les
mov
outsl
xchg
repnz
lret
lret
push
mov
mov
iret
ret
xorb
sbb
in
mov
sbbl
lea
jl
pop
and
pop
scas
cmp
fisttps
fincstp
or
xchg
fisttps
inc
mov
or
sbb
in
add
sub
sbb
fstpt
fcmovnb
pop
mov
lea
subb
rorb
jnp
mov
adc
into
iret
mov
push
inc
sub
lods
ffree
fsubl
sub
inc
outsb
sub
push
mov
lret
testl
inc
sahf
test
fldcw
sub
dec
shlb
insl
xchg
fmuls
mov
fcomps
js
pop
hlt
push
inc
pop
idivl
int3
push
pop
dec
rdtsc
insb
shl
stos
test
nop
fcompl
sub
mov
push
cmpsl
adc
movsl
in
in
fnstsw
insb
ss
pop
mov
imul
dec
fisttpl
test
xor
cld
cmpsb
sbbl
jne
push
mull
mov
neg
pop
mov
or
mov
xor
pop
mov
cmp
add
push
es
ja
push
pop
push
popl
push
stc
in
jne
mov
movsl
jg
dec
stos
mov
mov
insb
push
mov
mov
add
add
out
gs
fstpt
add
push
insl
sub
fadds
push
sti
push
jecxz
out
pop
or
aam
outsl
adc
dec
mov
xor
cltd
mov
outsl
addr16
rcrl
out
mov
jne
fstps
out
inc
insl
aas
jo
mov
fwait
arpl
mov
arpl
pop
ds
sbb
mov
nop
mov
push
adcl
rcl
std
push
int
mov
mov
mov
movsb
and
cmp
int3
mov
push
mov
pop
inc
mov
incl
ret
pop
inc
aaa
popf
push
dec
dec
lock
cmp
fsubp
movsb
aad
in
dec
adc
mov
cmp
or
loop
int
clc
lods
in
or
js
jbe
ret
jo
push
add
mov
jmp
adc
or
mov
cmpsl
dec
mov
aas
xor
orb
jge
pop
es
out
xor
pop
fwait
ret
mov
and
out
scas
inc
fimuls
mov
out
xchg
fistps
ja
ljmp
sarl
addr16
mov
cltd
and
add
pop
mov
mov
loope
xchg
dec
xor
in
mov
xchg
imul
enter
fsubrp
xchg
sbbl
mov
mov
sub
clc
dec
and
scas
neg
mov
fcoms
fsub
push
fildll
mov
mov
outsl
testl
out
rorl
std
mov
je
jae
xor
jp
adc
sub
scas
dec
sbb
mov
in
jbe
adc
loop
adc
mov
outsl
mov
testl
jp
push
lahf
pushf
mov
divb
fstl
and
inc
je
scas
shlb
fxch
fbstp
jns
pop
push
mov
repnz
mov
aad
and
int
cmp
mov
jmp
ja
jnp
xor
jg
bound
jb
lret
mov
or
sbb
mov
icebp
cld
jmp
es
mov
fadds
mov
nop
inc
push
push
call
aad
test
cmp
cmp
sti
loope
std
mov
mov
invd
dec
mov
cwtl
jp
sbb
div
mov
push
cld
repnz
lahf
sbb
lahf
cmp
gs
out
dec
rcll
mov
add
fs
mov
out
je
jb
mov
out
cli
jae
and
into
iret
mov
into
mov
mov
xchg
xchg
fidivrs
stos
mov
ret
mov
incb
add
adc
lahf
mov
mov
enter
daa
cmp
inc
iret
mov
out
xor
call
cmp
dec
push
pop
cmp
enter
popa
mov
xorl
jp
and
into
in
or
adcb
cmp
pmullw
in
lret
movsl
cmp
jg
test
push
adc
sub
pushf
pop
insb
ret
mov
scas
fiadds
scas
insb
add
mov
pop
pushf
jecxz
mov
jns
lcall
jle
push
xor
cltd
cmp
dec
push
lods
test
mov
fcmovu
sub
xor
ret
fldt
shlb
ljmp
or
js
lahf
xchg
aam
rcr
jne
jne
mov
jge
mov
pop
pop
inc
scas
jmp
out
outsb
aad
movsl
mov
aad
fildll
xchg
mov
dec
hlt
dec
cmpsl
cmp
add
pusha
mov
and
sbb
mov
push
jmp
repz
or
xor
test
mov
in
std
int3
jno
in
out
sub
insb
fisttps
mov
push
arpl
cmp
lods
imul
pop
inc
leave
cmc
jg
enter
cltd
scas
scas
aam
and
mov
std
ss
mov
sub
shrb
cmpsl
push
ja
sub
out
mov
xlat
xchg
mov
mov
sbb
out
hlt
lret
into
pop
imul
aad
xor
or
push
xchg
cwtl
cmc
cli
or
pop
fstpl
les
mov
jo
movsl
insb
mov
in
pop
pop
scas
aas
sbb
mov
daa
pop
jmp
jno
cmp
jb
cmpsl
add
mov
xchg
das
mov
jbe
in
aaa
out
add
xchg
xchg
cmpsb
ds
dec
in
out
negl
cli
mov
es
push
jbe
push
filds
call
leave
pusha
pop
iret
outsl
sbb
pop
mov
pop
daa
lret
ficomps
inc
je
sbb
mov
mov
push
mov
cmp
xchg
ja
cmp
jo
push
and
mov
adc
mov
mov
lahf
xchg
stc
jne
int
pop
jns
cmp
pop
sub
add
pop
std
or
loopne
int
push
in
or
cltd
xor
cmp
mov
mov
in
pop
out
cmp
cmc
adc
cmp
cmpsb
movsb
xor
js
pop
sbb
ror
lds
mull
stos
mov
jecxz
sub
fdivs
mov
outsl
cli
adc
pop
mov
je
das
inc
jle
mov
jg
push
in
jp
xchg
xor
out
push
lret
lds
stc
mov
and
fdiv
adc
ret
lods
clc
jnp
cmp
cmc
cmp
imul
repnz
jmp
sti
mulb
insl
xchg
sub
lea
fists
mov
test
or
rcrb
daa
imull
lea
jg
jg
cmp
outsl
sub
leave
popa
pop
lods
stos
pop
outsb
jmp
xchg
mov
in
inc
pop
fistpl
out
jbe
mov
imul
sub
and
mov
shll
dec
mov
inc
mov
push
dec
adc
adc
aaa
inc
outsb
les
dec
lods
mov
das
ds
push
jge
dec
lock
arpl
leave
add
cs
push
mov
pusha
mov
cmc
mov
mov
push
sbb
mov
xchg
aas
or
fiadds
aas
insl
add
dec
xorl
jns
add
mov
mov
lcall
fisttpl
shlb
ss
outsb
cli
push
cmc
ss
jmp
aas
pop
out
fistpll
addr16
xlat
fistl
cmpl
adc
xor
inc
adc
idivl
ss
es
mov
mov
mov
out
in
pop
loopne
pop
arpl
out
dec
jecxz
fistps
out
loop
cld
adc
lock
loope
testl
roll
jg
ficoml
or
jne
add
or
pop
push
pop
ds
pop
pop
jnp
xlat
push
xlat
sbb
scas
fucomp
hlt
pop
pushf
popf
mov
outsb
add
ja
xchg
mov
std
xacquire
sbb
fwait
mov
push
enter
jecxz
shl
fwait
cmp
xorb
sti
jmp
lds
mov
push
idivl
jns
in
out
ja
lahf
xor
sbb
outsb
mov
cmp
add
es
mov
mov
push
add
mulb
xchg
hlt
dec
aaa
adc
out
ret
pop
mov
pop
jbe
and
push
xlat
stos
cwtl
mov
outsl
into
mov
mov
sbb
cli
xchg
iret
push
xchg
pop
mov
fcom
mov
push
xchg
repnz
int3
cmc
pop
mov
jbe
test
js
cmpb
pop
out
xor
mov
or
xlat
push
shrl
xchg
mov
popa
pop
sub
out
scas
test
mov
cs
lret
sub
ljmp
fisttpll
pop
sahf
mov
sbb
push
jbe
adc
outsl
fsubrp
mov
pop
stos
insl
test
movsl
cs
or
nop
jo
imul
push
test
movsl
xorb
mov
call
inc
lods
imul
repnz
mov
sahf
xor
adcb
call
aas
mov
mov
ffree
pop
ljmp
cli
ficomps
hlt
xor
sub
mov
cmp
loopne
mov
dec
sar
pusha
lods
mov
movsl
fsub
inc
push
mov
fs
jge
fstl
leave
lds
xchg
jge
scas
push
aad
fidivs
mov
lds
stc
mov
jp
cli
pop
out
sbb
cli
sub
fdivrl
ja
scas
cmp
out
mov
mov
mov
xchg
ljmp
cmp
dec
insl
ds
mov
std
ljmp
dec
daa
cmp
aas
psubd
fcompl
movsl
scas
mov
shll
mov
xor
neg
sti
sbb
test
push
addb
push
xor
dec
orps
mov
cmpsb
mov
lods
sbb
inc
xchg
dec
xchg
xor
jae
inc
imull
pop
out
psubd
imul
movsl
test
jg
in
dec
dec
vorps
mov
push
cmc
jns
scas
xor
mov
jo
out
test
sub
jae
push
xchg
lcall
cmc
fimuls
sub
mov
pop
add
sbb
test
push
adc
sti
pop
es
pop
mov
add
into
loopne
sub
lock
cmpsl
imul
jmp
stc
test
sub
icebp
sbb
cmp
jbe,pt
pop
test
shll
inc
les
add
adc
cmpsl
xor
imul
and
das
pop
sbb
pop
pusha
push
aas
pop
xchg
lods
mov
sub
ror
scas
cmpb
arpl
rorb
dec
jnp
das
jmp
fdivl
roll
lock
fcoms
mov
mov
out
jns
dec
pop
loope
cmp
insb
mov
push
inc
ja
mov
ret
sarb
pop
or
lcall
mov
out
fnstcw
mov
jp
shrb
movsl
mov
mov
dec
aas
icebp
push
mov
into
cmpsl
and
ds
outsl
jp
mov
lods
out
test
es
das
call
xor
ret
in
pop
push
mov
lahf
fisttpll
pop
sbb
iret
mov
cmp
cs
imul
hlt
ljmp
pop
mov
jg
pop
sahf
cld
sbb
out
mov
cmp
adc
pushf
testl
out
mov
scas
scas
lahf
push
mov
stos
sbbb
push
movsl
ficoms
enter
ds
mov
sahf
pop
pop
mov
fwait
jle
outsb
mov
pop
fcmovbe
out
fisubrl
subb
pop
mov
sar
mov
shrl
dec
fbld
mov
cli
cmp
aaa
cmp
mov
fistpl
incl
pop
in
push
outsl
icebp
inc
mov
fdivl
repz
mov
push
push
jmp
mov
inc
repz
test
mov
leave
loop
pop
lret
insb
xchg
dec
ret
scas
cwtl
rcll
adc
or
mov
sbb
fbstp
jnp
dec
push
leave
addr16
mov
fbld
lcall
and
jns
pop
add
das
xlat
mov
scas
jnp
mov
mov
addr16
leave
mov
fnsave
mov
dec
ja
dec
out
out
cmp
fldenv
adc
dec
push
xchg
sub
xor
mov
push
fcomps
push
stos
lahf
or
into
rcll
stos
cli
sarl
stos
dec
jno
aaa
lret
movsb
aaa
push
fnstcw
jne
lods
xchg
sbb
adc
negl
dec
das
jmp
pop
cmp
rcrl
push
lcall
cmp
fcoms
roll
sahf
mov
out
fbstp
adc
jno
dec
fbstp
lock
addr16
mov
jne
mov
dec
mov
mov
cltd
icebp
dec
jg
js
mov
lahf
bound
jne
mov
and
xor
testl
lock
and
fldenv
scas
jecxz
loopne
mov
lret
inc
cmp
lret
jmp
sahf
push
aad
popf
cmp
pop
cmpl
or
out
ja
test
pop
cmp
aad
jmp
mov
and
ljmp
shll
mov
pop
sub
je
subl
mov
pop
js
xchg
decb
push
add
lea
int
dec
mov
pop
fcmove
out
jb
cmp
cltd
je
adc
or
inc
and
js
jae
sub
fnstcw
stc
fdivs
aaa
mov
jmp
out
imul
lds
pop
xchg
and
rcrl
test
repnz
enter
push
inc
mov
fucomi
fiadds
scas
push
cwtl
mov
ljmp
mov
adc
sub
mov
mov
cmpsl
neg
dec
ja
cmpsb
and
xchg
lcall
leave
and
or
ljmp
cmpsl
dec
neg
mov
imul
adc
mov
pop
je
xchg
imul
scas
inc
or
loop
pop
fstpl
cmpsb
jmp
ljmp
out
jnp
es
add
out
dec
int3
mov
push
mov
pop
sbb
dec
arpl
mov
scas
adc
ror
notb
mov
cmc
movsb
sbb
jmp
jbe,pn
in
lods
into
imul
xchg
aas
in
enter
frstor
scas
out
pop
pop
daa
mov
adc
fs
mov
sub
sahf
iret
clc
and
mov
in
push
mov
jge
fldpi
lcall
jns
fnsave
stc
idivb
jecxz
pop
sahf
cltd
inc
mov
push
xchg
push
dec
outsb
out
push
jno
jge
adc
ret
in
jg
testl
outsb
out
out
imull
push
adc
pop
popf
lahf
outsb
iret
pop
mov
js
data16
xchg
sub
cmp
xchg
hlt
ljmp
loope
mov
jns
jne
inc
adc
outsl
inc
xlat
insb
out
stc
pop
popa
mov
mov
fiadds
lods
ret
outsl
pop
movsb
cmp
xchg
ja
cmp
lods
ficomps
hlt
test
in
loope
mov
repnz
xchg
pop
mov
dec
mov
outsb
jge
daa
sub
sahf
movsb
inc
add
jge
mov
insl
scas
pop
push
or
push
inc
inc
sbb
adc
mov
outsl
ljmp
dec
outsl
mov
ret
jae
arpl
frstor
out
aad
adc
hlt
push
add
inc
out
insl
ss
jno
dec
shll
out
ds
mov
cmp
aad
fnstcw
cmp
add
out
sbb
mov
int
mov
mov
fstps
mov
inc
mov
ja
lds
fsincos
movsl
outsb
fisubrl
jg
mov
aam
xchg
ret
leave
ja
xor
mov
dec
dec
push
xor
imul
sub
jne
or
fstl
mov
xor
ljmp
sbb
scas
dec
push
cmp
das
movl
dec
sarl
pop
push
dec
loope
cmp
fwait
add
mov
neg
mov
outsb
ja
out
in
fnop
mov
outsl
dec
out
dec
lds
mov
outsl
imul
js
mov
push
mov
mov
cmpl
jg
pop
push
mov
fimuls
mov
filds
push
fisubrl
mov
fldcw
ret
ds
mov
nop
push
mov
scas
test
out
adc
cmpsb
push
aam
cmpsb
decb
loope
mov
arpl
outsb
push
or
mov
jo
inc
mov
mov
ret
xchg
push
push
or
std
es
mov
call
scas
repz
fcmovnbe
jae
sub
call
pop
mov
mov
stos
ja
sbb
sbb
stos
mov
mul
or
lds
mov
mov
arpl
fdiv
pop
and
imull
push
mov
btc
inc
pushf
inc
xor
mov
loop
jge
out
cld
pop
push
das
dec
cs
test
js
cli
pop
xchg
xchg
insl
out
fnsave
jmp
jge
sbb
cmpsl
cmp
lret
sub
add
fcmovnb
test
inc
mov
outsb
fidivrs
fbstp
cltd
mov
movq
testl
pop
inc
enter
xchg
fs
jb
push
stos
iret
ja
cmp
leave
add
adc
jge
test
jp
jecxz
adc
scas
out
out
in
cmpsb
fldenv
push
scas
mov
pop
adc
adc
mov
add
insb
lret
insl
jne
pop
pop
data16
cmc
bound
xchg
mov
rorb
pop
jne
cmc
pop
das
ficoms
insl
iret
outsl
leave
rcl
call
mov
mov
jmp
notb
sub
dec
pop
sub
popl
test
idivl
push
iret
fldl
addr16
repz
mov
out
pop
repnz
insb
pop
sti
sbb
lock
mov
in
cmp
inc
jns
sti
xorl
fsubr
notb
daa
mov
add
ds
sub
adc
inc
pushf
jecxz
cmc
popa
inc
cmp
push
xor
pop
jg
push
decl
jbe
pop
es
pop
xchg
arpl
cmp
cld
dec
jae
fbld
jl
fisttps
xchg
mov
popa
cmp
pop
fxtract
fwait
scas
loope
data16
inc
sti
lock
push
repz
mov
out
pop
xlat
inc
subl
mov
and
push
sti
cmp
movnti
and
data16
ja
xor
cmp
inc
iret
cmp
mov
iret
repz
sbb
mov
sahf
mov
out
test
insl
cmp
test
movsb
push
pop
addr16
mov
jg
in
not
lahf
loop
mov
jnp
sti
rorl
xchg
sub
push
mov
jg
adc
xchg
xchg
sahf
out
jle
jno
sub
mov
cmp
pop
das
stos
adc
clc
aaa
pand
outsl
into
mov
in
addr16
mov
outsb
mov
and
jle
ja
cs
ljmp
lret
ss
pop
icebp
push
rcr
mov
fistpll
lret
imul
punpckldq
out
xchg
fistpll
loope
in
js
hlt
fisttpl
add
push
call
and
push
adc
pop
jg
ret
cmp
sbb
out
icebp
int3
push
push
push
aas
push
fstpt
push
mov
data16
mov
test
xchg
pop
xchg
enter
mov
cwtl
fcomps
fistpl
iret
dec
xchg
lahf
shlb
repnz
add
jne
pop
cltd
movb
leave
pop
clc
sahf
int
fcoms
int3
cmc
loop
test
arpl
mov
fcmovnbe
in
out
mov
add
gs
mov
push
push
repz
xchg
movsb
jnp
insb
mov
pop
hlt
inc
adc
gs
fisttpl
insb
dec
mov
push
adc
rorb
fld1
iret
es
push
mov
sbb
aas
inc
mov
repnz
cmp
xor
xchg
lock
lahf
adc
ja
popf
aad
repz
pop
ret
popf
inc
sub
std
dec
mov
xchg
hlt
add
pop
sbb
mov
push
stos
aaa
xchg
pop
jnp
mov
faddp
aas
mov
pop
iret
pop
and
sub
lods
out
out
fiadds
ljmp
int
push
mov
inc
mov
xor
stos
out
push
mov
jnp
lahf
sub
fsubs
cltd
stos
pop
out
lret
dec
scas
out
shll
xchg
outsl
popa
pushf
dec
cs
aam
movsl
scas
dec
into
xor
leave
out
cmp
fstl
sbb
cmpsb
cmpl
cmpsb
out
sti
cmp
push
mov
mov
es
mov
lock
jle
pop
cmp
jmp
inc
shll
jg
push
mov
cli
stc
dec
stos
imul
pop
daa
mov
push
xor
pop
mov
ljmp
popa
push
lcall
or
pop
push
out
dec
negl
in
addl
mov
cmovbe
mov
push
xor
or
xchg
out
mov
jmp
or
leave
arpl
pop
jae
sbb
shrl
into
cltd
mov
jne
lcall
mov
insl
and
loopne
push
mov
mov
mov
push
sub
cltd
cwtl
add
int3
mov
or
in
pop
add
xor
inc
pop
mov
ret
rcrl
int
and
loope
ljmp
pop
fldcw
dec
fnsave
mov
subb
cmpsl
fwait
into
sahf
dec
insl
imul
scas
pop
add
lahf
outsb
cmp
int
scas
fidivrs
fcmovnbe
test
test
enter
sbb
imulb
xlat
or
mov
leave
push
in
loopne
adc
fcomi
shl
xchg
insb
popa
cmp
in
imul
scas
sub
out
mov
movsl
or
fs
insb
dec
dec
sub
bound
ja
mov
imul
push
rorb
add
hlt
jnp
pusha
and
popf
shll
ficomps
clc
cmpsl
xchg
fcmove
and
pop
mov
cmp
jb
mov
xor
in
mov
xchg
shrb
cmc
mov
sub
mov
and
shlb
out
push
pop
test
imul
test
mov
jbe
imul
inc
mov
pop
loope
mov
movsl
pop
inc
push
fnstsw
xchg
repz
into
cmc
jecxz
test
sbb
sbb
ja
int3
cs
clc
push
cmp
dec
jo
scas
mov
imul
mov
iret
mov
sbb
outsb
push
out
ja
jle
fistpl
xchg
jmp
out
push
mov
push
out
std
pop
cvtpi2ps
jmp
outsb
arpl
push
dec
addb
test
xorb
data16
or
add
sti
push
int
jecxz
pusha
xchg
stos
or
pop
testl
add
and
faddl
mov
pop
scas
pop
cwtl
xor
jg
jge
inc
mov
in
xchg
andps
mov
sbb
dec
lcall
outsl
sbb
out
sbb
pop
pop
adc
push
fisubrl
pop
pop
pushw
pop
cli
sbb
xor
repnz
xor
mov
iret
mov
das
loop
cmp
jg
push
shl
jge
sub
push
ja
push
mov
xorb
xor
mov
or
jnp
cmp
addr16
sub
insb
cwtl
stos
mov
rolb
push
push
xlat
pop
rorb
es
daa
sahf
shl
aam
addr16
fsub
fsubrs
dec
xchg
pusha
cmc
sub
fwait
stc
in
into
jae
dec
jle
or
repnz
ret
rol
outsb
jne
mov
aas
lock
mov
dec
aas
jnp
xchg
adc
imul
test
xchg
mov
inc
xor
jbe
and
addl
xor
sub
and
imul
push
int
push
negl
lahf
sarl
sbb
int3
imul
xchg
insl
cmp
pop
frstor
enter
jl
fiadds
cmpsb
lcall
push
jmp
nop
jge
sub
inc
inc
int3
imull
aaa
adc
je
gs
mov
adc
testl
jnp
inc
out
fdivrp
jae
fsubr
pop
fnstsw
idiv
add
mov
cmp
lahf
out
sti
rol
fsubl
in
dec
sti
dec
das
and
and
int3
pop
dec
repnz
adc
hlt
mov
ret
rcrl
dec
jl
sbb
mov
adc
xor
pop
xor
mov
push
leave
rcrl
sar
mov
adc
decb
aas
push
cmpsb
popf
ror
out
push
lcall
push
aas
push
or
xchg
mov
pop
sahf
mov
push
lret
popa
mov
xorb
clc
leave
addl
lock
sub
faddl
outsb
xor
inc
out
inc
out
out
fbstp
divl
ret
cmp
call
inc
ret
inc
out
rcl
hlt
cmp
jg
adc
pop
es
sub
push
and
xchg
jno
mov
pop
xlat
add
sbb
lock
xor
adc
mov
ror
aam
mov
hlt
and
mov
mov
dec
add
int
fbstp
mov
or
mov
into
aas
in
rep
int
add
stos
dec
aam
pop
xor
pop
lahf
cmpsb
dec
xchg
fdivl
out
add
mov
insl
dec
push
sarb
popa
mov
fbld
sub
xchg
xchg
or
mov
cmpsb
jne
imul
notl
movsb
cs
das
mov
out
inc
outsb
mov
stc
mov
lahf
btr
repnz
stc
movsl
jecxz
push
out
lea
xor
iret
imul
divl
je
outsl
divl
push
xor
mov
inc
sbb
sub
sub
push
sub
int3
inc
sbb
out
clc
push
mov
mov
js
mov
imul
xor
aaa
add
scas
out
mov
fdivs
mov
add
scas
xor
mov
xor
mov
repnz
mov
insb
jnp
test
lahf
loop
fdivrl
push
mov
loopne
xor
ret
outsl
xlat
jecxz
mov
das
test
ret
sub
jns
in
je
sbb
repz
sub
out
xor
outsb
sbb
mov
mov
loope
mov
stc
stos
or
imul
push
cmp
or
popa
xor
div
xor
sub
adc
into
mov
push
loopne
hlt
arpl
mov
push
sbb
xlat
loopne
in
ljmp
inc
push
fcmovu
sub
pop
fs
jno
out
pop
inc
jle
inc
jg
dec
xor
lret
rorb
pop
lods
aad
pop
inc
dec
mov
les
cmp
sbb
cmc
arpl
xchg
cmp
aad
and
out
mov
push
scas
jmp
pop
aad
sahf
jecxz
arpl
xchg
es
jbe
pop
xlat
jg
sub
pop
outsb
sub
mov
add
adc
iret
push
mov
lods
inc
lods
or
dec
mov
sbb
and
shl
jmp
pop
xor
cmpb
mov
in
fcmovu
mov
pop
jmp
test
sbb
jge
cli
mov
in
mov
jmp
or
pop
pop
sbb
mov
sbb
ret
add
push
jno
xor
mov
mull
jo
ja
std
das
add
in
pop
outsl
jg
add
jge
ret
lds
mov
outsl
adc
mov
and
fmuls
dec
arpl
pop
push
out
mov
cltd
movsl
adc
pop
jb
dec
or
pop
mov
sub
mov
jb
fsubr
cs
fisttpll
sbbl
out
out
pop
popa
cli
mov
jne
xor
addr16
sub
ds
adc
mov
aam
jle
mov
hlt
mov
dec
push
push
cmp
std
sbb
adc
push
mov
dec
sti
mov
jle
xchg
fsts
loope
mov
xchg
adc
cmpsl
adcb
pop
ret
inc
out
push
sbb
pop
mov
cmp
iret
je
pop
push
pop
iret
jg
outsl
cmp
xchg
adc
mov
iret
sub
je
pop
jmp
call
dec
adc
push
pop
sarb
cmp
stos
stos
push
jne
cmp
xor
lods
addr16
je
push
cmpsl
arpl
lcall
arpl
in
notb
in
mov
jl
sti
pop
outsl
fstps
in
push
outsl
adc
loope
scas
ds
roll
mov
lcall
icebp
loopne
cli
or
jno
mov
and
lret
jb
inc
insb
inc
dec
cmpsb
lock
ja
mov
std
xchg
ljmp
jle
mov
mov
in
cmpsl
iret
xor
add
jecxz
mov
rcll
sub
pop
fisubrs
hlt
addb
xor
lahf
shl
adc
pop
out
push
push
jle
xlat
outsb
shll
push
lea
xor
std
rcr
lret
insb
mov
xor
divl
jle
out
xor
mov
loop
insl
enter
mov
out
inc
inc
movsl
pop
es
and
pushf
mov
jne
mov
pop
movsl
mov
mov
cmpsl
jp
mov
sarl
fdiv
ss
out
std
rcrb
ret
sahf
sbbb
imul
cli
mov
lock
out
out
jmp
jae
dec
mov
push
sub
mov
mov
iret
inc
div
addb
ljmp
stos
mov
sahf
inc
jle
lret
repnz
arpl
sahf
sub
jg
pop
mov
stos
lcall
fsubs
xor
out
loope
mov
cwtl
arpl
push
sti
std
and
cs
mov
mov
and
mov
rcll
shlb
xchg
mov
and
out
xchg
mov
cmp
aaa
xor
xchg
cmpsl
pop
fcmovne
in
ja
cmp
incb
and
pop
and
adc
sahf
fnstenv
mov
xchg
add
lds
roll
jmp
mov
or
push
and
mov
scas
pop
mov
push
and
sub
or
cmpsl
decb
sahf
fisubs
mov
pop
xor
out
cwtl
ljmp
imul
stc
cmpb
in
negl
mov
xor
je
in
cmovnp
cwtl
inc
sbb
mov
popf
lods
mov
ffree
fidivrl
adc
testl
pushf
outsb
adc
and
outsl
out
stc
lcall
into
fldt
mov
or
jnp
cli
push
repnz
in
cmp
sarl
xor
in
pop
jmp
mov
ja
cmp
add
and
add
mov
mov
inc
shl
pop
dec
cmp
cs
shlb
pop
mov
fucomi
dec
cltd
cmpsl
pop
pop
orb
mov
cld
pop
in
xchg
add
jl
add
and
jle
imul
fwait
dec
mov
fsubrp
fists
sbb
aas
mov
jbe
orb
push
mov
in
dec
dec
xchg
leave
cwtl
sbb
pop
pop
xor
and
rclb
in
ss
mov
push
mov
outsb
sub
mov
dec
inc
int
test
and
popa
mov
das
sahf
ljmp
sbb
xorl
lock
shrb
inc
dec
push
fisubs
add
pop
out
cmp
jmp
pop
mov
push
jb
inc
dec
cwtl
mov
call
out
add
and
loop
push
and
dec
cmp
sub
out
popa
test
aaa
lret
cmp
mov
cmp
in
add
out
fidivs
dec
dec
pop
imul
out
pop
mov
aad
pop
cltd
inc
out
out
das
jnp
imul
cmp
insb
mov
into
mov
idivb
in
lea
mov
fstpl
arpl
mov
mov
ret
mov
mov
fldt
leave
sub
shr
sti
cmpl
leave
xor
test
fstl
cmp
push
insb
out
negl
mov
add
mov
cwtl
dec
pop
sub
repz
adc
mov
adc
in
xchg
xchg
sbb
jge
pop
jg
push
fiaddl
add
cld
mov
aas
jl
push
and
mov
add
lahf
sbb
cltd
ss
mov
jg
pop
clc
dec
add
loopne
dec
pop
aaa
iret
mov
xlat
fnstsw
push
sarb
dec
xor
lock
cwtl
adc
jg
ret
inc
in
xor
and
mov
and
xor
scas
jecxz
aas
add
imul
test
xor
mov
into
xor
scas
fidivrs
cld
xlat
fistpl
inc
scas
sbb
fldcw
adc
sub
mov
mov
jb
jg
push
cmp
movsb
adc
lock
mov
loopne
pop
stos
dec
pushf
mov
pop
popa
mov
push
mov
imul
fisttpl
out
cmc
ficomps
sub
mov
aas
xchg
mov
fimuls
es
out
mov
jmp
outsb
jae
and
push
xchg
push
pminsw
mov
mov
ja
mov
fucomp
inc
out
sahf
fisttpl
push
and
sbb
mov
ret
int
cs
mov
pop
pop
xchg
dec
mov
mov
push
cmpsb
bound
mov
fwait
subps
adcb
sub
fildll
and
imul
sbb
and
rcr
cmc
cmpsl
add
adc
sub
dec
add
jg
std
jnp
out
into
sub
xor
push
pop
std
test
mov
fnstsw
lea
fidivrl
rcrb
aad
pop
xor
push
xor
in
pushf
cmp
and
dec
add
out
pop
ss
jl
pop
sbb
in
rorl
inc
xor
mov
movsl
jp
insl
dec
sti
pop
xchg
mov
pop
xor
mov
add
pop
fsubs
popf
negb
arpl
mov
mov
xor
in
cltd
push
xlat
mov
lret
jge
jp
cmp
int
loope
pop
sbb
xor
imul
jnp
inc
xor
aad
leave
cmpl
push
xchg
ljmp
sub
stos
dec
icebp
fneni(8087
sub
mov
jno
sub
in
fsts
pop
gs
mov
mov
mulb
out
pop
addr16
adc
xorb
mov
stos
lret
cld
dec
out
pop
ficompl
addb
mov
or
and
int
aas
outsb
or
enter
gs
mov
mov
inc
jle
sbb
pop
pop
sbb
push
mov
xor
cmc
leave
mov
shll
out
enter
movsb
sbb
pop
mov
inc
aad
mov
cmp
mov
jns
inc
fdivrl
push
test
sub
pop
stos
mov
jns
divl
nop
mov
dec
mov
idiv
loop
rcl
imul
xchg
push
jo
iret
sbb
inc
mov
leave
pop
xor
push
outsb
mov
xor
jle
mov
out
inc
jbe
dec
pextrw
ds
push
es
jno
mov
jnp
cmpsb
mov
and
dec
fwait
daa
sub
pop
imul
stc
dec
std
push
imul
ljmp
outsb
cwtl
inc
hlt
movsl
sti
mov
mov
idiv
mov
mov
lret
in
sub
lahf
mov
lock
sub
cs
cmpsb
jg
lret
iret
pop
push
mov
gs
ljmp
mov
in
mov
test
iret
pop
push
mov
sahf
rol
movsl
or
inc
popf
mov
xorb
mov
mov
and
sbb
adc
and
push
or
add
push
jmp
pop
mov
mov
adc
and
pop
insl
shrb
in
sbb
inc
je
fbstp
mov
in
jnp
scas
clc
repz
icebp
adc
mov
add
sub
sti
lds
int3
jne
mov
xchg
in
cmp
add
push
jl
popf
xor
sub
cld
imul
mov
xchg
pop
sarb
pop
cmp
dec
adc
dec
mov
mov
scas
xlat
mov
test
test
not
dec
stos
jbe
cmpsb
xchg
gs
loop
xchg
shrl
dec
enter
or
fidivrl
into
pop
je
gs
mov
cmc
dec
jle
pop
dec
pop
ljmp
int3
xor
jns
stos
mov
lods
and
popf
mov
fdivr
mov
adc
std
mov
shlb
pop
scas
mov
or
and
sbb
push
popa
leave
outsb
fstpt
mov
vmovaps
jg
cmp
cmp
out
cmp
push
out
pop
push
cs
mov
aam
mov
bnd
mov
outsl
test
imul
fisubrl
jl
aaa
cli
mov
test
xor
or
xchg
ss
daa
mov
fdivrl
mov
pop
aaa
mov
sub
out
mov
cmp
ljmp
js
mov
lcall
cs
cmp
hlt
fdivl
popf
lods
iret
mov
ret
pop
mov
fninit
icebp
jnp
sti
sub
stos
stc
and
sub
cmpsb
sub
cmp
repz
lret
mov
int
ja
std
fisttps
adc
gs
lret
ret
stos
aas
mov
lret
mov
fisttpl
into
cmc
lods
push
je
cmpsb
xor
fwait
cld
pop
lret
push
lods
lods
xor
js
jle
xlat
mov
mov
sahf
sub
andl
push
roll
mov
bnd
fidivrl
dec
cmp
das
and
mov
lret
add
cli
test
loopne
idiv
ret
das
push
into
jp
ds
rol
push
push
repnz
clc
push
ficoml
fs
mov
outsl
cmp
sbb
cmp
int3
popa
iret
inc
pop
mov
lea
rolb
cltd
in
shrl
and
scas
mov
aad
xchg
ffree
mov
in
jne
call
and
lahf
push
add
mov
outsl
fdivrp
into
pop
mov
xor
out
outsb
adc
mov
fwait
mov
stc
fbld
call
lock
imul
jns
mov
cmp
xor
scas
in
push
loopne
dec
adc
pop
imul
push
mov
xchg
and
sbb
xchg
push
mov
incb
arpl
mov
xor
std
sub
outsb
in
sub
movsl
mov
mov
jb
subl
mov
xchg
jl
fldenv
mov
aad
mov
or
shl
es
pop
popa
adc
in
les
mov
jns
sub
jp
pop
insb
lock
lods
fcmovne
jae
cmpsb
pushf
test
mov
mov
dec
iret
sbb
icebp
cmpsb
mov
mov
sub
jno
ret
into
iret
cmp
leave
out
jp
jge
and
cld
clc
adc
pop
xchg
scas
xchg
lods
std
inc
shl
xchg
stc
in
xchg
adc
dec
nop
mov
imul
pop
loop
jmp
divl
lods
adc
inc
fmulp
and
mov
sub
testl
mov
cmpb
loopne
test
push
mov
addr16
and
mov
inc
icebp
add
ret
loope
insb
dec
xchg
movsl
mov
lret
xor
mov
mov
in
xchg
cmp
cmpl
repnz
lods
inc
repnz
das
mov
pop
pop
jns
mov
pushf
mov
xchg
int
sbb
mov
fildll
mov
jmp
ljmp
jne
icebp
cs
mov
and
mov
scas
pop
in
jmp
cmpsl
add
adc
mov
push
repnz
mov
loopne
mov
stos
mov
adc
mov
repnz
xor
push
mov
adc
pop
xchg
orb
gs
in
inc
jle
mov
or
jg
inc
sbbl
sti
push
xor
cmc
jnp
orb
aad
jne
test
test
aad
test
out
mov
clc
cmpsb
mov
jge
sbb
push
adc
cmpl
sar
pop
push
imul
imul
push
jmp
int
xchg
xchg
ficomps
sbb
scas
add
std
sbb
sahf
mov
rcrl
jmp
fs
rcll
in
lods
out
leave
jno
repz
sar
hlt
add
int3
adc
sbbl
jmp
sahf
push
mov
scas
inc
jae
sub
scas
addr16
loopne
push
sub
xchg
cmpsb
inc
shlb
lods
and
mov
aad
mov
push
jo
dec
repz
dec
inc
popf
add
jae
out
mov
dec
mov
mov
pop
dec
dec
inc
movsb
pop
fdivrs
mov
inc
pop
imul
sub
sub
jg
xor
cmpsl
aad
pop
shr
outsl
mov
sub
jmp
addr16
mov
jmp
push
dec
lahf
aas
loopne
gs
arpl
lods
in
mov
cld
jg
or
pop
xorb
fdivr
insl
mov
mov
hlt
push
out
icebp
je
idivl
sti
lds
pop
and
mulb
das
loopne
cmpsb
mov
out
pop
add
jle
fidivrs
mulb
stos
add
imul
pusha
jno
push
scas
push
idivb
fld
pop
push
xor
fiaddl
pop
mov
or
rcrb
xor
mov
fldenv
jecxz
sbb
sbb
enter
out
idivl
stos
push
mov
lea
mov
loop
shr
pop
mov
idiv
js
scas
inc
xor
cmp
inc
push
lods
adc
test
mov
sahf
fiadds
mov
fcoml
mov
mov
sub
mov
xor
ficomps
fistpl
iret
inc
mov
lds
jo
mov
fiadds
outsb
xchg
aad
adc
adc
pop
jge
jge
sbb
xchg
cmp
int
jb
mov
aam
incb
lods
out
repnz
icebp
push
mov
imul
push
sti
outsb
lods
orl
xchg
das
scas
mov
rolb
loopne
mov
add
mov
xchg
std
iret
cmpsl
inc
outsb
push
inc
adcb
push
pop
cmpsb
test
mov
ss
outsl
fs
cmp
xlat
ret
fs
jg
and
mov
push
xor
mov
push
aas
mov
sti
sbb
mov
cmp
push
jns
xchg
cmpsl
lret
or
adc
push
in
shll
lods
fucomp
mov
movsl
rorl
mov
std
das
fstl
sar
sub
inc
fcomps
push
cmpsb
sub
push
ret
mov
xchg
mov
push
lahf
andb
clc
int3
ljmp
ds
dec
arpl
stos
in
icebp
sbb
popa
repz
mov
mov
lret
dec
fsubl
xchg
mov
mov
sub
mov
adc
adc
mov
repnz
mov
notb
je
aas
loopne
jmp
in
popf
cltd
mov
push
mov
dec
mov
cmc
push
or
stos
fistpl
mov
in
rcr
push
xchg
cmpsl
mov
jae
or
int3
or
fwait
xor
add
xor
fcoms
loop
into
cmp
scas
out
stos
dec
xchg
fists
lods
xchg
decb
dec
fldcw
mov
and
xchg
scas
ljmp
in
mov
sbb
out
mov
mov
mov
daa
repnz
dec
cmp
sbb
int
cmp
cmpsl
loopne
cld
inc
ds
push
mov
cmpsb
movsl
mov
movsb
mov
lret
and
mov
imul
fists
imul
dec
cmp
jle
rcll
fstpl
out
xchg
sbb
dec
adc
dec
in
insl
add
insb
iret
mov
out
insl
pop
cld
pop
insl
int
cld
jae
mov
mov
sbb
fcompl
cmpsb
out
je
lahf
lds
lods
dec
jl
pop
pusha
cmpsl
out
sti
push
outsb
out
mov
fistpll
cmp
testl
pop
xchg
and
ja
pop
xor
xor
ret
fsts
sbb
mov
mov
repnz
xchg
movsb
stos
cmp
scas
imul
stos
dec
mov
cmpsl
in
jno
pop
jno
fcompl
scas
loop
sbb
sub
mov
jmp
outsb
out
push
jnp
xor
add
mov
mov
fistl
lcall
mov
cmp
xchg
jae
adc
std
testb
mov
jle
jae
shrl
xchg
and
xor
leave
and
mov
idiv
mov
jbe
aam
mov
adc
push
fstpl
in
sbb
mov
mov
mov
outsb
pop
push
fsubr
cwtl
rol
jge
aam
jae
movsl
xor
call
pop
aaa
mov
int
and
mov
lods
inc
jne
jmp
pop
in
adc
mov
xor
std
mov
cli
leave
leave
mov
sarb
mov
icebp
test
push
mov
repnz
and
cmpsb
negb
jns
cmc
subl
callw
inc
xchg
mov
fcoms
push
jl
xchg
cmp
sub
jns
stc
shlb
arpl
in
int3
test
movq
dec
or
pushf
icebp
into
adc
stos
nop
push
xchg
cmp
pop
xchg
push
push
inc
das
shl
sub
and
push
nop
ljmp
sub
loopne
loopne
inc
bound
adc
push
sbb
mov
lahf
mov
nop
cmp
xchg
xor
repnz
sahf
inc
push
cli
fiaddl
test
leave
ret
mov
xlat
mov
xchg
fdivrl
mov
and
xchg
pop
adc
mov
scas
fs
mov
mov
jnp
jp
jmp
mov
push
sbb
add
ds
int
test
lcall
clc
ljmp
add
loop
adc
dec
pop
push
cmp
or
sub
mov
adc
lcall
fidivl
push
out
adc
dec
stos
mov
jg
cmp
and
cmp
pop
ret
stos
das
sub
out
aad
insb
hlt
sub
ljmp
cld
mov
dec
and
lcall
pop
adc
lds
cld
push
and
add
mov
sahf
outsl
mov
push
aaa
jle
push
inc
mov
out
dec
mov
pop
pop
inc
aam
scas
aaa
pop
push
add
mov
add
fstp
inc
mov
hlt
or
jnp
cmp
mov
or
push
and
and
adc
sub
sbb
in
sbb
aas
out
shll
dec
cmp
inc
mov
sti
dec
or
loop
dec
test
push
sbb
add
pop
rcrl
xchg
pmaddwd
int3
adc
hlt
adc
data16
jecxz
arpl
movsb
mov
mov
stos
mov
mov
jbe
cmp
lahf
aad
sbb
insl
adc
mov
jmp
mov
data16
jmp
ret
pop
repz
in
scas
dec
mov
das
cmpl
jnp
mov
jmp
in
scas
sahf
inc
mov
loop
jnp
mov
mov
push
ja
mov
out
frstor
fxch
fistpll
popf
mov
mov
mov
jge
jno
jmp
pop
scas
dec
arpl
cmp
xor
jno
jmp
or
in
jne
fdivrl
jge
testb
push
daa
and
das
inc
pop
mov
fs
xchg
fld
sahf
mov
shl
cmp
jl
leave
addb
scas
hlt
fnsave
aaa
outsl
fsts
cld
iret
rcrb
and
int
shl
pop
mov
mov
sbb
imul
push
mov
adc
test
cmpsl
mov
mov
push
dec
leave
jnp
sbb
push
outsb
loopne
xchg
mov
mov
das
pop
cmpsb
xchg
out
mov
push
adc
scas
lahf
hlt
sbb
cs
stos
adc
in
cmc
cmpsb
xlat
insb
lret
cmp
sbb
repnz
adc
mov
shl
add
pop
scas
pushf
inc
imul
rorb
push
inc
jnp
add
loop
stc
dec
cmp
mov
fadd
out
push
fstps
repz
mov
test
fists
fdivs
enter
out
inc
fdivrs
data16
inc
mov
cmp
cmp
or
pop
pxor
dec
sbb
sarb
out
subb
pop
push
movsb
jp
call
inc
dec
ds
mov
pop
cmp
mov
inc
pop
xor
dec
rcll
add
lock
subl
gs
leave
sbbl
mov
scas
mov
loopne
add
mov
add
adc
out
fdivl
dec
adc
into
movq
sarb
out
insb
mov
mov
stos
out
pop
cmp
sti
jae
and
sbb
add
pop
fldl
gs
mov
das
adc
push
xchg
jnp
cmpsl
pop
lret
xchg
inc
sub
punpcklwd
jnp
stc
stos
pop
cmpsb
cmp
stos
insl
aaa
cs
jg
fisubl
movsl
cmpsb
jae
outsl
dec
je
sbb
mov
xchg
adc
lods
dec
fimull
xchg
aad
jmp
xchg
jmp
pop
je
js
movsb
daa
cwtl
xor
les
add
outsb
test
in
dec
mov
leave
mov
mov
in
xor
imull
xchg
ret
cmp
scas
jne
subb
add
cmpsl
outsl
lock
pop
mov
pop
xor
fstpt
ret
mov
outsb
ret
pop
cltd
sub
xchg
cmpsl
add
push
hlt
test
or
dec
jp
cmp
pop
outsl
pusha
iret
mov
mov
or
mov
hlt
pop
sbb
imul
jnp
push
xor
insb
push
mov
dec
inc
pushf
cmpsl
push
js
stos
lcall
mov
push
dec
or
sbb
into
sahf
add
in
out
mull
mov
fiaddl
rclb
ja
mov
cmp
rclb
mov
out
mov
aaa
das
sub
into
aas
inc
dec
call
xchg
pop
or
lds
jae
mov
mov
lret
stc
je
sub
jns
aaa
imul
push
jbe
stos
push
jmp
pop
cmp
adc
cmp
jae
js
cld
inc
mov
aaa
ret
sub
jns
add
in
jo
cs
addb
and
adc
add
sbb
sub
jbe
ds
addr16
add
sub
mov
push
jle
out
push
mov
lret
xor
mov
cltd
jmp
lock
push
imull
dec
add
push
pop
icebp
or
or
or
and
out
sahf
pop
aas
or
out
test
inc
jns
mov
in
int
sti
jge
xchg
or
data16
data16
mov
add
pop
sar
sub
mov
dec
rolb
mov
fimull
xchg
popa
and
jp
out
outsl
pop
sub
push
lahf
mov
cmp
out
ret
mov
mov
call
iret
cmp
inc
push
and
mov
outsl
aaa
mov
ja
in
popf
popa
repz
outsl
negl
cmp
js
jno
cli
jmp
dec
mov
mov
jmp
cmp
fisubrl
sbb
cmpsb
pop
in
mov
imul
into
mov
push
das
loop
loopne
movsl
jle
stc
adc
and
lcall
jne
sub
cmc
test
jo
gs
pop
xlat
push
jns
lods
jmp
in
push
jbe
lahf
movsl
or
cmp
mov
sbb
cmc
sbb
fdiv
sbb
jb
jle
mov
pop
ja
scas
dec
outsb
jecxz
mov
repz
movsb
adc
sbb
imul
sbb
cmp
add
mov
jns
mov
mov
dec
xor
outsl
pop
jbe
lahf
or
xchg
imul
lds
ror
dec
xchg
cmp
jbe
xchg
inc
dec
lahf
pop
sub
in
ret
adc
inc
cs
outsb
xchg
mov
out
xchg
inc
pop
stos
mov
enter
mov
iret
inc
jae
pop
dec
ljmp
cs
mov
jg
pop
xor
jge
pop
test
mov
int
mov
shll
xchg
adc
cmc
aas
cli
xchg
imul
outsl
xchg
outsb
dec
inc
jo
lret
sti
pop
mov
shlb
mov
cmc
mov
lods
push
jno
in
or
mov
mov
jo
xchg
or
mov
sbb
jl
repnz
and
mov
pop
insb
ja
sub
jecxz
add
cmp
mov
fsubrp
fwait
adc
jae
or
stos
gs
mov
pop
jmp
dec
mov
aad
sbb
jge
mov
push
in
imul
in
ljmp
shll
jmp
addr16
ljmp
or
jg
stc
mov
xlat
fmulp
iret
aad
mov
ja
and
and
loopne
xchg
outsl
jmp
pop
mov
fldcw
mov
in
negb
ja
sub
insl
imul
dec
jnp
mov
sti
stos
sahf
lods
fstl
mov
ljmp
fildll
in
negb
jnp
std
call
cmp
add
adc
cld
outsb
ja
int3
mov
fst
push
int
jmp
ja
lods
insl
sub
fildll
scas
pop
dec
in
idivb
fisttpll
mov
scas
mov
jae
in
negb
insb
mov
cmp
sub
sbb
or
jl
imul
fistps
pop
pop
mov
lahf
imul
mov
in
negb
dec
mov
ret
daa
mov
pop
mov
out
jae
mov
mov
lahf
mov
xacquire
mov
dec
jbe
cmp
iret
cs
negb
jnp
mov
jbe
imul
dec
test
ja
nop
cmpsb
cmpsb
mov
in
movsl
imul
loopne
ret
pushf
add
stos
ret
jmp
dec
push
mov
rclb
push
cmp
gs
mul
inc
or
lret
pop
clc
imul
push
es
xchg
jl
scas
or
cmp
jne
icebp
test
jo
inc
stc
pusha
mov
mov
mull
outsb
push
add
aas
xchg
bound
sub
xor
mov
jnp
mov
rcl
cmc
lock
mov
repz
enter
fwait
test
xor
xchg
fs
cld
ret
and
fldcw
ja
cwtl
xchg
dec
arpl
mov
repz
outsb
sarl
mov
fsubr
dec
test
aas
inc
xor
arpl
pop
mov
js
into
jmp
es
shlb
pop
dec
mov
sbb
pusha
cld
loopne
iret
ds
cmp
mov
and
pop
xchg
mov
mov
push
jbe
rcrl
xor
inc
not
cli
stc
clc
sbb
popl
pop
out
mov
xorb
fsubl
mov
rol
xor
fcomps
cmpsl
sub
pop
adcb
cld
pop
lock
psllw
xchg
mov
lods
mov
push
jecxz
mov
jle
shl
insl
and
daa
push
jne
sub
mov
mov
jbe,pt
cmp
jnp
test
test
pop
shl
push
mov
push
mov
push
sahf
in
sarl
cmc
xchg
xchg
cmpsb
mov
push
jle
daa
fwait
imulb
je
imul
mov
mov
out
xor
mov
cld
xchg
cmpsb
jle
hlt
cs
or
mov
out
dec
hlt
push
mov
cmp
mov
or
pop
in
popl
xchg
imul
pop
negb
mov
hlt
dec
jp
sbb
mov
inc
or
clc
cs
sub
fsubrl
or
lret
adc
cmc
orb
fcmovu
mov
int
or
shll
addr16
dec
lock
scas
jnp
outsl
leave
cmp
les
mov
imulb
out
pop
mov
mov
rcl
cmpsl
fisubrl
cltd
push
stos
iret
popf
adc
sahf
mov
jns
adc
inc
xor
test
adc
lock
sub
ss
scas
jbe
cmpsb
test
rcrb
ret
mov
cmpsl
and
ss
push
and
or
scas
dec
sbb
rorb
pop
push
cmpsb
jg
sbb
inc
jmp
out
mov
jbe
jnp
mov
xchg
xchg
xchg
dec
dec
sub
cmp
repz
in
cmc
movsl
push
mov
movsl
jne
mov
subps
xchg
leave
and
xor
pop
inc
jne
outsl
jg
pop
cmp
push
push
pop
sti
ss
push
test
inc
mov
mov
add
out
out
dec
pop
int
fisubrs
imul
mov
mov
pop
shll
dec
cmpsb
out
test
jp
lea
dec
nop
or
and
out
jns
out
or
or
push
gs
mov
cmp
pop
push
push
push
dec
ret
pop
cmpsl
inc
std
xchg
or
mov
cs
mov
int
fprem
cmpsl
jmp
aas
xchg
pop
icebp
das
cli
dec
mov
sarb
push
push
les
insl
add
repnz
add
cmp
xlat
in
cld
add
mov
pop
mov
cmpsb
sub
mov
fwait
push
orb
dec
jecxz
js
cli
xor
pop
and
sub
mov
in
or
out
sub
ds
movb
add
test
ljmp
mov
sub
in
sti
or
mov
xlat
in
and
jne
cltd
imul
jmp
sbb
pop
jle
sbb
jmp
sti
shll
cmpsb
jnp
popa
mov
and
dec
std
cmp
popf
cmp
pop
jmp
inc
unpckhps
lods
mov
mov
fidivrs
mov
lret
jg
enter
jno
jbe
inc
or
jecxz
xchg
aad
add
xchg
ret
lds
nop
popa
mov
iret
xorl
mov
adc
push
or
scas
ret
je
mov
aad
sbb
gs
jnp
fisttpll
xchg
jae
or
adc
btrl
mov
fadd
hlt
add
mov
mov
dec
sub
cmpsl
mov
cmp
and
mov
gs
xchg
or
mov
mov
in
mov
xor
add
das
out
adc
ss
mov
sbb
jbe
fisubs
insb
aas
rcl
sti
xchg
and
iret
scas
fnstcw
cmc
ljmp
cmovg
arpl
cmp
fcmovne
clc
js
or
das
push
std
dec
and
adc
mov
loop
add
cmp
mov
push
inc
mov
shrl
into
xchg
pushf
xchg
aam
mov
mov
and
pop
jl
ja
push
filds
push
data16
out
cmpsb
mov
out
cmp
mov
push
mov
call
sahf
and
lods
cmp
jno,pn
out
scas
cmp
fistps
cwtl
ss
mov
mov
add
out
rcr
inc
dec
adc
or
cs
inc
cs
adc
loopne
in
into
ja
jnp
pop
mov
sub
xchg
outsb
cmp
xor
cmpsl
mov
in
mov
pop
inc
push
lea
in
pop
data16
pop
fcoms
fidivrl
outsb
pop
mov
lea
xor
mov
push
push
jne
sub
pop
add
add
insl
popf
mov
xchg
jmp
dec
in
add
es
add
pop
sbb
lods
adc
dec
stos
sar
dec
sahf
pop
outsb
cmp
mov
or
sbb
ffree
jo
addr16
fmull
pushl
or
adc
std
jno
or
mov
mov
jae
fdivrs
adc
cltd
adc
cwtl
insl
inc
imul
adc
imul
subl
fiaddl
mov
js
fsubl
cs
aad
sub
mov
jg
cmp
push
cmp
jno
sub
js
jle
jg
aaa
sbb
cmpsb
mov
roll
in
aas
mov
mov
push
imull
sbb
jmp
mov
jnp
xor
mov
mov
inc
mov
inc
sbb
add
push
xor
fistpll
fs
mov
in
scas
daa
push
xlat
out
adc
mov
in
ret
inc
pop
jb
jnp
jmp
mov
repnz
jne
mov
clc
cmc
lock
mov
or
mov
xlat
mov
jmp
sub
xchg
pop
jae
xor
nop
cmc
jg
mov
ss
cmpb
jb
lcall
mov
mov
or
push
rol
aad
aam
mov
fsubrs
scas
in
sti
xchg
sub
or
jnp
pop
mov
and
mov
div
pop
inc
repnz
adc
mov
cmp
push
stos
jb
in
push
xchg
fldt
cmp
test
pop
and
daa
mov
mov
jg
loope
scas
aad
mov
xlat
rclb
imul
enter
adc
in
fidivl
mov
add
fsubrl
sti
in
mov
pop
sti
mov
mov
sub
jge
out
rolb
gs
sub
push
int3
loopne
lret
mov
push
rorb
jnp
or
pop
xchg
mov
popa
divps
enter
and
cmpsb
pop
hlt
ret
iret
shlb
push
mov
sbb
lahf
repz
cmp
dec
mov
jb
mov
sbb
rorb
ret
shlb
test
sub
pop
or
or
pop
rcll
jno
imul
pusha
mov
shl
movsl
div
pop
sub
stos
inc
cltd
rorl
aam
xor
pop
adc
arpl
or
fidivrs
cs
pop
mov
cmp
dec
mov
jl
add
jle
in
push
outsb
scas
xchg
fmull
xorl
cmp
ljmp
out
pushf
out
notl
mov
mov
mov
fildll
fld
push
add
xchg
cli
mov
mov
add
pop
jle
mov
sub
fdivs
push
ds
cld
iret
fnstcw
or
scas
dec
mov
inc
mov
xchg
stos
stc
xchg
aas
jns
lock
adc
aaa
js
lahf
inc
aad
jp
leave
iret
test
sti
cmp
or
lret
jp
mov
les
pop
jl
push
jl
lahf
mov
xor
pop
std
stc
push
xlat
fidivrl
push
daa
cld
xchg
fildll
add
and
mov
out
mov
daa
fadds
dec
or
pop
repnz
mov
cmp
lcall
xchg
fdivs
in
fimuls
or
ljmp
neg
pop
stos
aaa
mov
cmp
bswap
cli
imul
jp,pn
mov
jo
fildll
roll
and
sub
push
out
dec
aad
jle
fdivrs
xlat
rorb
cmc
jp
rorb
dec
and
mov
mov
out
sub
pushf
xor
jl
adcb
bound
pop
mov
mov
repnz
mov
out
aad
outsb
add
shrl
mov
xor
mov
cmc
xchg
lahf
pop
cli
mov
pop
pop
filds
mov
mov
stos
rcll
jl
into
mov
jl
mov
hlt
ds
sub
cs
lds
lock
pop
xchg
jmp
xchg
inc
arpl
mov
pop
pop
fstpt
popa
xor
mov
add
sub
lock
jg
icebp
loopne
jge
pop
add
sahf
xor
sbbl
dec
outsb
dec
pop
ja
mov
iret
cmpsl
clc
jl
pop
stos
in
inc
outsb
pop
jb
sbb
xchg
ljmp
xchg
cmpsb
lcall
jae
cltd
pop
pop
aaa
pop
mov
iret
lahf
lahf
inc
shl
pop
orb
leave
out
sub
fistps
xchg
mov
shlb
fcomps
imul
sahf
test
icebp
lock
lcall
mov
gs
dec
ret
adc
fdivrs
adc
mov
jo
leave
scas
mov
cmpsb
or
rcrl
mov
jno
mov
iret
js
scas
adc
out
xor
test
ss
jge
cwtl
jmp
sbb
mov
bnd
inc
mov
pop
imul
mov
fnstcw
dec
ret
test
icebp
mov
rcll
hlt
idivl
mull
pop
and
pop
test
outsb
mov
aad
dec
mov
sbb
mov
cltd
dec
aam
outsb
stos
sarl
sbb
mov
out
mov
push
frstor
cmp
enter
push
adc
mov
mov
scas
sub
add
push
scas
bswap
mov
icebp
scas
shll
jnp
inc
mov
push
das
add
or
mov
jne
pop
shll
sub
dec
cmpsb
loop
xchg
es
mov
pop
sub
cmp
bound
cmc
imulb
stc
push
lahf
cltd
mov
sub
mov
lret
lahf
cmpsb
cmpsl
iret
cmp
mov
or
push
ljmp
in
mov
pop
mov
pop
jne
insl
stos
mov
jmp
or
adc
xchg
enter
stc
cmpsb
rcr
sti
nop
push
shlb
push
out
add
stc
notb
shrl
imul
jmp
sbb
mov
andb
push
test
stos
ljmp
ret
xchg
sti
xchg
scas
jecxz
in
loope
xor
subb
cmpsl
jae
rcll
mov
sbb
or
out
fxch
push
fucomp
dec
or
push
pop
mov
popf
or
leave
adc
push
dec
sbb
fistl
xchg
mov
in
dec
fnstcw
mov
dec
popl
out
or
sbb
jle
sbb
jno
adc
out
push
cmpsb
add
aaa
sbb
mov
test
into
fidivs
mov
mov
pop
or
or
mov
jae
insb
fld
mov
jge
push
repz
push
lcall
ljmp
inc
jge
into
cmpsl
das
jge
test
out
pop
cld
lret
mov
cld
stos
repnz
sub
mov
sub
in
push
ja
cmpsl
rclb
dec
jno
jg
iret
cmpsl
push
or
mov
pop
fsts
mov
push
add
test
xorb
nopl
mov
ljmp
fmulp
je
fldl
ja
mov
xchg
ja
pop
pop
or
mov
cmp
popa
pop
mov
fisubl
push
mov
pushf
jae
test
out
imul
test
not
imul
outsl
dec
mov
jmp
cltd
pushf
or
add
fldt
mov
adc
sbb
sub
xlat
rorl
stos
jg
jmp
pop
ret
cmp
shl
imulb
cltd
mov
addr16
imul
adc
out
mov
aad
lcall
mov
sbb
aaa
add
mov
mov
jge
dec
mov
jmp
das
das
jmp
push
sti
js
ljmp
xchg
fnsave
repnz
xchg
inc
xchg
stc
iret
lret
shrl
leave
jecxz
ljmp
mov
sti
push
jno
out
shrb
arpl
mov
mov
in
lds
pop
ljmp
add
cmpsb
pop
push
or
gs
les
cwtl
sar
out
and
std
mulb
stos
jbe
cwtl
mov
pop
ja
loope
dec
outsb
das
arpl
in
sti
cs
sub
mov
pop
testb
push
push
outsb
arpl
icebp
push
adc
pop
stos
and
mov
add
mov
mov
shrl
push
icebp
mov
xchg
pop
push
addr16
xchg
clc
or
dec
stos
sbb
fiadds
arpl
add
pop
mov
and
cs
pop
mov
sub
push
lods
or
sub
jne
cmpsl
aas
or
xor
call
test
dec
jge
dec
push
jl,pt
mov
pop
xchg
pop
pop
and
ss
xchg
rcll
stos
jle
pop
push
fdecstp
mov
mov
cld
dec
xor
mov
icebp
sarb
inc
ds
int3
xor
call
adc
int3
xchg
push
cmp
out
push
nop
xlat
push
mov
imull
out
push
and
in
sbb
out
mov
mov
iret
or
jl
inc
jge
dec
fisubrl
mov
jmp
mov
into
ffreep
movsl
add
mov
ljmp
dec
divl
repnz
leave
xchg
int
out
inc
ret
in
loop
aas
sub
stc
pop
lcall
roll
scas
cs
lret
sbb
fldt
inc
mov
leave
pop
mov
scas
sbb
out
stos
fldt
mov
sbb
test
aas
xlat
jecxz
add
pop
push
out
loop
xchg
call
fistpl
ja
push
mov
clc
loopne
sbb
jne
sub
les
mov
fsubp
dec
rorb
lock
outsb
xchg
push
mov
push
mov
daa
cmp
cli
adc
shl
pop
inc
fistpll
mov
icebp
rcrb
mov
outsb
sti
lret
imul
push
mov
push
pop
pushl
daa
test
mov
adc
mov
pop
jnp
pushf
xchg
mov
mov
mov
ret
or
cld
pop
lahf
sbb
ds
push
jno
jecxz
xchg
mov
aaa
packuswb
gs
xlat
adc
or
cld
mov
lods
test
ss
xchg
cmpsl
jo
movsb
cmc
cs
jb
adc
mov
mov
cld
mov
idivl
iret
shl
sti
mov
push
xchg
xchg
shll
loope
push
and
enter
sub
or
sarb
icebp
push
faddl
pop
lahf
inc
ja
lock
mov
push
sarl
xchg
push
shl
stos
maxps
testb
shlb
jo
fstps
and
pop
fwait
into
scas
xchg
outsb
jl
das
mov
insb
xchg
stos
shll
mov
and
movsb
xor
ljmp
fxch
popl
jp
dec
add
incl
jle
inc
adc
fadd
push
imulb
cmpb
mov
mov
jne
repnz
out
je
add
cmc
int3
dec
mov
iret
pop
mov
movsb
add
shrb
sbb
push
cwtl
xor
push
loopne
sub
loop
imul
mov
pop
push
xchg
cld
adc
jno
cmp
push
mov
rcr
pop
hlt
divb
fistl
sarl
mov
sbb
scas
in
jnp
and
lret
int3
addr16
lret
outsb
xchg
iret
push
pop
mov
jnp
jmp
sbb
call
sub
shlb
jl
leave
das
stc
dec
lret
sarl
std
sbb
or
dec
lods
fadds
sub
cwtl
push
rcl
cmp
sub
rolb
push
cmp
add
and
das
mov
add
pop
lods
cltd
scas
pop
enter
xor
cltd
xor
mov
das
pop
xor
mov
adc
or
sub
testb
push
mov
push
cli
sbb
in
jg
or
icebp
in
ret
xor
scas
addr16
out
shlb
jg
lcall
dec
push
out
xor
dec
int
aas
and
cmp
je
cmp
jbe
out
xchg
add
jle
pop
std
ds
xchg
mov
out
or
icebp
divb
xchg
mov
adcb
mov
scas
daa
gs
stc
popa
jnp
mov
xchg
leave
mov
and
call
std
and
push
mov
add
ds
out
in
mov
push
fistps
mov
ds
repnz
jnp
cli
jno
jnp
sbb
aas
add
rcrb
pushf
clc
loope,pt
pusha
les
ja
pop
divl
xlat
jmp
in
call
ljmp
imul
cmp
pop
push
das
call
lods
mov
data16
pop
rolb
in
int3
call
inc
sbb
mov
mov
pop
mov
cmp
out
pop
clc
iret
iret
cli
sti
dec
mov
fcomip
mov
lret
mov
jg
stos
mull
maskmovq
repz
mov
pusha
in
lods
jle
ds
inc
paddsw
repnz
fcompl
int
sub
lock
pop
add
stos
xlat
lods
push
outsl
sti
out
ss
fsubrl
sbb
adc
test
divl
in
stos
nop
dec
mov
cmp
inc
test
sarl
nop
aaa
lea
mov
mov
rep
mov
or
adc
pop
mov
push
and
test
test
mov
mov
mov
push
cmp
xchg
mov
jnp
mov
test
add
mov
out
sbb
fldenv
cmp
out
in
jl
insb
pop
out
iret
pop
in
sub
cmp
int
negl
ret
sub
popf
mov
push
out
lcall
pop
in
mov
aaa
das
imul
mov
xchg
sub
push
mov
popf
add
cmp
mov
aam
dec
aas
xchg
sbb
testl
push
rcrl
repz
dec
xchg
std
notl
jp
adc
call
mull
inc
sarl
sbb
push
mov
jg
lcall
ret
fldt
iret
sub
add
lock
pop
pop
jae
cmp
mov
ljmp
out
jp
pop
mov
mov
outsb
jmp
adcl
jbe
push
mov
out
and
push
mov
xor
adc
pop
jne
sti
shl
jbe
push
add
ds
jae
sub
das
ljmp
in
jmp
mov
pusha
in
testb
xchg
in
loop
pop
fnsave
lea
negb
insl
xchg
xchg
mov
jmp
cmpsl
mov
jle
cmpsl
fdivrl
into
ss
sbb
iret
pop
jnp
mov
xchg
iret
sbb
sbb
loop
mov
insb
mov
pushf
into
mov
jg
jns
mov
mov
out
in
popf
pop
iret
cmpsl
mov
shll
std
fwait
ds
xlat
vorps
mov
fidivs
fistps
pop
iret
das
jnp
mov
mov
add
bound
ja
pop
and
sub
loopne
pop
mov
repnz
lret
das
pop
js
push
fistpll
mov
and
js
mov
dec
icebp
xor
negl
outsb
jae
in
sti
pop
xor
mov
outsb
push
bound
fdivrl
out
out
push
mov
adc
xorb
fs
mov
jmp
dec
jge
and
sub
gs
mov
in
ds
stc
nop
add
xor
jecxz
mov
outsb
and
xor
pop
loopne
ds
scas
loop
mov
iret
cs
loop
jne
scas
in
inc
mov
lods
jne
mov
cmpsl
shrb
sbb
sub
subb
dec
rcl
fsubrs
xor
gs
pop
cmpsb
stc
or
xor
mov
mov
sbb
or
jp
iret
or
cmc
dec
and
mov
adc
gs
sarb
jnp
leave
fsubrp
pop
jne
fwait
stos
xor
adc
leave
mov
xchg
push
in
jg
mov
add
mov
push
pop
cmpb
and
pop
out
pop
mov
push
or
fdivp
fwait
jmp
cs
sbb
and
aad
in
xlat
pop
mov
dec
add
fs
in
pop
adc
call
fnstcw
push
dec
outsb
dec
ja
pop
shl
pop
dec
jp
pop
pop
and
xlat
pop
ljmp
ja
fmuls
das
test
scas
add
cmp
push
mov
adc
pop
pop
push
fistl
sub
and
lahf
mov
dec
js
out
push
das
sbb
sti
push
xabort
pop
loopne
lahf
ja
cmp
pop
xor
subl
pop
xor
and
mov
mov
out
pop
fbld
aad
hlt
jo
mov
insl
mov
xchg
push
lods
adcb
loop
sub
sub
sbb
pop
sub
xchg
mov
mov
mov
imul
push
adc
leave
pop
push
jmp
and
incb
push
ret
cmpsl
jnp
adc
cmpsl
leave
push
xor
sar
jo
mov
dec
lret
xor
mov
and
lret
aas
jge
pop
adc
fcmovnb
les
imul
rclb
mov
mov
xchg
test
loopne
sbb
and
in
cmc
jmp
arpl
das
add
pop
repnz
in
mov
outsl
xchg
cmp
mov
sbb
outsl
push
jnp
pop
inc
lods
dec
bound
or
jg
in
aad
sbb
je
jmp
stc
pmaxub
dec
add
jle
stos
int3
xor
cmp
jmp
mov
test
fistps
fwait
add
lds
jecxz
out
pop
or
mov
mov
pushf
pop
inc
lcall
mov
mov
mov
lods
mov
mov
jne
ror
xchg
popa
jbe
sbb
in
repnz
adc
pop
in
and
mov
mov
or
push
rcrb
pushf
lods
mov
in
jae
sbb
sahf
outsb
out
push
into
ljmp
sub
dec
into
pop
int3
loopne
xchg
push
jecxz
mov
push
xchg
xchg
out
lahf
jg
mov
insl
aad
fnsave
imul
fcompp
jnp
bound
in
imul
loop
in
add
rcl
jge
cli
sbb
clc
pop
xor
sbb
inc
push
fdiv
mov
jo
mov
or
out
repnz
xor
out
dec
int3
push
or
cltd
pop
aad
pop
out
xchg
and
outsb
mov
pop
pop
cli
sbb
aad
push
faddl
test
push
pop
cltd
ret
test
rcr
pop
scas
xchg
rolb
and
and
out
test
jg
in
mov
fiadds
movsb
inc
fucomi
mov
popa
mov
out
scas
fwait
pop
fistpl
pop
mov
pop
out
inc
mov
push
mov
pop
mov
ljmp
jmp
cmp
jb
lods
orb
idivb
lret
or
insl
js
xchg
adc
lret
jnp
divb
nop
notl
mov
add
dec
scas
ds
outsb
dec
push
outsl
mov
out
in
divl
in
scas
shl
frstor
push
xchg
push
add
xchg
jmp
nop
adc
xlat
mov
adc
mov
xchg
dec
shlb
xor
jmp
leave
and
mov
outsl
stc
imulb
iret
and
cmp
sub
out
test
jmp
iret
imul
sahf
int
cmpb
pop
int
in
mov
xor
cli
and
lds
stos
stos
jb
lret
mov
ja
fwait
sbb
pop
fldt
jbe
pop
dec
andl
aaa
orb
std
je
cmpb
xor
xchg
out
push
fcmovnb
inc
out
rcr
fisubrl
and
ljmp
gs
ret
ds
insl
iret
mov
cwtl
repz
dec
sub
imul
cmp
pop
mov
dec
outsb
das
lods
sarl
rep
pop
pop
pop
fwait
mov
jnp
in
scas
adc
ss
mov
movq
ja
mov
out
jbe
idivl
aaa
ljmp
in
jns
aas
iret
mov
cmp
ja
andl
mov
stos
test
outsl
jb
in
outsb
out
push
not
fisttps
aam
mov
mov
mov
psubd
stos
fildll
out
out
fldcw
fcomp
mov
pop
lds
cmp
push
mov
fimuls
les
repz
sti
jg
aas
fsts
jo
insl
jle
mov
pop
leave
scas
lahf
jnp
pop
mov
out
cltd
ja
adc
scas
test
pop
mov
push
fcomip
add
loopne
jbe
test
dec
adc
and
mov
jge
aad
mov
mov
mov
xor
mov
outsl
pop
aad
and
fdivs
lods
int
pop
inc
pop
call
pop
adc
lret
jae
mov
or
mov
js
pop
xlat
aad
inc
push
mov
int
ljmp
adc
repz
movsb
pop
jmp
jecxz
lds
movntq
push
int3
mov
fldcw
mov
inc
cmpsb
fldl2t
mov
or
dec
pushf
add
xchg
out
lahf
pop
movups
adc
pop
notb
xlat
xor
mov
pop
adc
mov
sahf
inc
test
inc
add
mov
leave
stos
fisttps
lret
mov
test
add
add
scas
outsl
jns
rcr
inc
and
mov
hlt
push
xor
sbb
mov
jno
dec
ljmp
push
dec
movsb
fwait
ret
dec
jg
in
fisubrl
mov
arpl
sbb
and
adc
fmull
psubd
jmp
add
mov
add
rcll
clc
jge
fistl
add
mov
mov
jg
dec
out
sub
decb
fldenv
mov
outsl
xchg
into
push
cli
popa
incb
in
jp
inc
iret
icebp
fcmovnb
fstpl
aas
out
pop
into
fld
mov
jae
cmp
fisttpl
pushf
mov
ja
out
and
fdivrl
arpl
stc
sbb
out
jbe
int3
fildl
cltd
gs
mov
adc
iret
sub
cmp
daa
jmp
lods
dec
mov
add
xchg
push
bound
push
xchg
push
stos
cmp
mov
mov
inc
cmp
sub
jb
in
pop
push
jmp
cmc
xor
mov
jno
sub
divb
lea
push
dec
dec
jae
push
jmp
loop
cltd
mov
in
iret
lcall
push
loopne
into
add
sub
push
jmp
fcoml
sub
cmpsl
mov
mov
and
dec
shl
mov
pop
orl
sbb
inc
pop
sub
js
out
vmwrite
vshufps
ds
cmp
jne
xchg
inc
and
jne
mov
pushf
mov
sub
mov
jno
mov
lcall
rorb
mov
xlat
icebp
add
sub
arpl
pop
fnstcw
add
xchg
pop
ds
sub
add
lods
push
jecxz
mov
enter
out
fwait
mov
or
imul
icebp
jmp
push
clc
inc
js
rcrl
loope
insb
xor
dec
cmpb
test
and
ljmp
stc
leave
lret
sub
lcall
iret
in
sti
mov
stos
or
mov
sbb
pop
lock
aad
mov
mov
mov
in
pop
dec
repz
jbe
xchg
pop
int3
cmp
mov
sbb
mov
mov
jae
dec
arpl
jmp
into
out
sub
iret
adc
xor
aas
mov
flds
pop
push
pop
sbb
xchg
cmpsl
fisttps
ja
mov
leave
or
sbb
or
int3
mov
fxch
jge
xchg
add
stos
popf
mov
leave
and
lock
add
jle
loope
or
je
loopne
mov
scas
js
sti
cmpsb
roll
cmp
dec
testl
xor
jnp
das
aad
sub
aaa
dec
in
or
jb
cmpsl
mov
fsubr
hlt
add
pop
faddp
sbbl
aam
stos
out
mov
inc
test
imul
insb
repz
mov
pop
pop
xor
sbb
adc
dec
and
rorb
xchg
xchg
mov
testb
xor
mov
test
mov
mov
leave
scas
xchg
fmull
sub
hlt
cmpb
dec
scas
mov
sbb
stos
insl
aad
dec
lods
mov
and
pop
outsb
mov
lret
adc
mov
test
cmp
cmpsl
sahf
leave
adc
icebp
rclb
test
fists
in
mov
ja
sub
scas
lcall
das
xchg
jae
aas
push
jmp
in
enter
push
add
fcomi
or
in
fstps
sbb
push
mov
mov
jb
lcall
scas
stc
in
in
hlt
scas
aad
cmpsb
das
jecxz
mov
jmp
clc
rcl
shlb
in
scas
jge
dec
cs
adc
out
fldl
cwtl
jecxz
pop
fsubs
das
inc
xchg
add
insl
mov
aad
lods
push
xchg
leave
ja
sub
imul
stos
xchg
addr16
cmpsl
pop
push
arpl
lods
scas
ja
leave
jge
or
sub
jns
xchg
movsb
mov
insb
bound
dec
add
dec
push
add
shll
pop
or
out
ja
or
push
rcrl
xor
imulb
lds
xchg
dec
fiadds
ret
add
stos
das
ret
nop
adc
test
push
movsb
lods
call
pop
or
mov
jecxz
int3
jae
mov
xorl
fs
cmc
and
cld
ds
jnp
sub
in
add
xchg
int
mov
in
jb
jns
cld
enter
cmp
test
mov
ja
add
sub
jl
out
fcomip
je
xor
cmp
mov
out
out
cmpsb
fists
lods
inc
mov
adcb
jb
aam
out
mov
push
cmpsl
scas
fisttpl
cs
rcl
subb
cmp
bound
leave
repnz
out
push
and
int
inc
push
pop
inc
cmpb
cmp
mov
cmpb
stos
mov
cmc
imull
jmp
lods
ffreep
int3
out
add
mov
fcmovu
stos
xchg
xor
xchg
iret
shlb
xlat
jno
ficoml
mov
bound
mov
mov
mov
fisubrl
jmp
sti
pop
adc
loop
stos
lahf
out
xchg
jb
or
and
fidivs
mov
xchg
test
xchg
cltd
ficoml
xchg
adc
mov
jno
arpl
mov
pextrw
fdivrl
mov
jmp
mov
jg
icebp
lock
jne
fcmovb
dec
push
mov
cmc
add
and
lret
arpl
inc
dec
xchg
jns
outsl
adc
mov
xlat
shl
mov
dec
adc
mov
in
xchg
add
sbb
adc
nop
hlt
ret
sbb
mov
rclb
push
xor
jg
out
fnsave
aam
sbb
push
mov
or
sti
out
out
mov
mov
pop
int
jmp
lods
fadds
jecxz
out
sbb
icebp
ficoms
mov
in
jb
or
scas
push
arpl
jmp
mov
add
xchg
pop
mov
pop
add
sbb
pop
dec
xchg
mov
iret
push
cmp
lret
shrl
xchg
in
cmp
mov
cld
inc
dec
xchg
insb
rcl
sbb
xlat
pop
jle
adc
outsb
fsubl
cmp
xchg
cmpsb
jns
pop
addr16
cltd
jmp
js
lahf
imull
stos
mov
add
out
cmc
push
sbb
insb
fstpt
ja
pop
and
xchg
xchg
movsl
mov
dec
inc
mov
lahf
xrelease
pop
sub
call
lret
add
push
pop
mov
imul
mov
mov
hlt
lcall
out
inc
cmp
and
pop
shrl
fcomps
mov
das
ss
mov
mov
test
int
jg
enter
pop
sbb
loopne
hlt
mov
outsl
dec
leave
xlat
xchg
add
sbb
sub
or
add
jne
push
xchg
loop
js
xchg
sbb
ret
das
sarb
sti
or
mov
dec
cwtl
sbb
sub
mov
jmp
call
cli
add
orb
pop
out
ds
push
or
vmovsldup
stos
xchg
push
out
mov
into
xchg
mov
xor
shll
in
mov
xchg
fcompl
mov
mov
outsl
out
mov
leave
xorb
shll
sub
dec
fucomp
pop
mov
ds
push
outsb
pop
dec
ljmp
mov
pop
pop
js
jecxz
push
roll
pop
iret
pop
fists
pop
leave
xor
cmp
xor
add
stos
cmc
mov
mov
or
pop
cwtl
or
fistpl
iret
xchg
out
cmpxchg
out
insb
jo
mov
icebp
aas
stos
int
fadds
inc
dec
dec
mov
icebp
or
add
sub
or
inc
xor
xchg
push
dec
sub
loope
mov
add
aam
xchg
xchg
mov
icebp
je
hlt
sub
push
inc
jge
loop
lahf
adc
push
js
out
fscale
add
fsubr
shlb
sbb
pop
rclb
pop
xor
inc
lahf
pop
xlat
test
lcall
xor
cs
push
push
dec
mov
jecxz
mov
or
bound
mov
xor
int
mov
fucom
in
push
add
mov
mov
jae
sahf
cld
xchg
leave
mov
xor
lods
loope
sub
adcw
sbb
inc
sbb
xlat
xchg
jl
sub
or
in
jae
sub
lea
jmp
dec
fprem1
dec
or
cmp
out
mov
rcrb
aam
jp
add
pop
mov
mov
call
jnp
pop
in
xchg
stos
inc
inc
lret
jns
jb
push
testl
leave
cwtl
mov
and
lahf
inc
iret
xchg
les
je
aad
in
lcall
jnp
das
pop
lcall
pop
outsl
cmp
and
push
insb
jo
xor
gs
test
mov
jg
mov
mov
fnstenv
add
rorl
mov
dec
sarb
int3
fs
xor
loopne
sbb
add
dec
imul
ret
pop
jecxz
xchg
sbb
push
int3
jge
cs
xchg
idivl
inc
cmp
ja
lahf
mov
aam
fnstsw
int3
hlt
es
cmp
cs
cmp
dec
cmp
mov
xchg
mov
dec
sub
rcrb
fists
das
ja
inc
jmp
icebp
or
xchg
sub
pop
leave
xorb
popf
jecxz
xor
cld
mov
testl
popf
mov
roll
stos
into
pop
dec
pushf
mov
clc
inc
repz
xchg
jnp
pop
sub
lahf
push
imul
jge
movsl
mov
subb
loop
sub
mov
pop
adcb
inc
xchg
pop
subl
pop
lahf
loope
outsb
aad
out
inc
pop
repz
out
push
filds
outsl
ljmp
fimull
mov
dec
mov
mov
out
adc
dec
cmpsl
cs
push
mov
ss
in
out
jecxz
mov
fcompl
and
sbb
xor
jb
in
pop
bound
sub
mov
mov
pop
push
pop
je
insl
and
cmpsl
fucomip
test
addr16
lahf
inc
pop
outsb
addb
xor
mov
fisttpl
mov
in
and
push
mov
call
inc
test
adc
or
icebp
dec
ror
and
cmp
aad
jmp
std
adc
xor
es
lcall
fidivrl
push
mov
inc
xor
cs
cmpsb
leave
das
pop
mov
xchg
das
stos
jp
mov
push
cmp
jg
fldl
mov
pop
mov
adcb
nop
loopne
add
dec
and
dec
cmp
cmpsb
xor
cmc
inc
lret
fists
icebp
adc
aas
mov
rep
mov
or
pop
mov
ficoms
pop
dec
adc
mov
xchg
fldl
push
ljmp
sbb
in
jb
mov
jnp
pop
xlat
mov
aaa
push
out
xor
sub
sahf
rol
call
cmc
add
adc
cmp
fistps
sbbl
add
and
add
sub
addl
mov
loop
jecxz
mov
testb
inc
inc
leave
scas
and
cmpsb
mov
outsb
sbb
lret
or
fistl
iret
mov
inc
mov
je
push
inc
fmulp
out
pop
popl
loop
xchg
pop
adc
fs
addr16
dec
sbbl
aad
out
faddl
bound
inc
fildl
cmpsl
mov
sar
ja
dec
pop
sub
mov
or
cltd
in
push
jmp
ds
add
pop
add
lret
inc
imul
in
lret
shll
fstpt
pushf
adc
pop
outsl
dec
or
fbld
mov
imul
push
in
cs
das
lahf
xorb
inc
cmp
inc
fimuls
lcall
push
stc
stos
mov
test
in
cmp
movsb
adc
insl
in
adc
add
cs
cmp
mov
and
pushl
or
in
sahf
out
scas
xchg
into
push
mov
popa
pop
sbb
push
lods
fistpll
bound
or
je
stos
xchg
sub
ds
daa
add
and
mov
mov
xor
stc
jmp
xchg
imul
fwait
push
mov
mov
loopne
xor
decb
out
fstpl
insl
push
pop
rolb
sti
or
ljmp
sub
addr16
pop
mov
icebp
xchg
xor
or
fwait
pushf
mov
testl
shl
into
lods
jle
into
dec
ds
push
push
arpl
iret
popf
clc
dec
sub
jg
enter
push
inc
cli
addb
push
in
pushf
mov
cs
dec
aaa
xor
sub
gs
es
push
pop
mov
mov
mov
push
mov
dec
out
mov
mov
cmp
adcl
jmp
push
fistpll
mov
xchg
call
add
jno
cmpl
aas
push
test
and
jmp
push
insb
imul
iret
repnz
lret
loopne
nop
cwtl
inc
lods
push
fistpl
push
cmp
arpl
loope
xchg
xchg
xchg
movsl
adc
add
lods
call
enter
pop
imul
inc
sbb
aaa
out
mov
jne
addb
or
js
imul
lods
sub
xchg
mov
pushf
inc
mov
daa
pop
inc
pop
inc
rcrb
ja
fxch
mov
mov
outsl
sub
sub
add
mov
mov
ret
mov
adc
add
pop
sub
mov
push
push
cmpsl
cmp
mov
cmp
ret
push
sbb
test
xchg
les
mov
gs
jge
in
fsubr
outsl
stc
lods
xor
stos
pop
push
pop
jmp
add
ds
out
mov
lods
mov
dec
in
and
lret
daa
outsb
inc
int
dec
sub
pop
jae
mov
cmpsb
sub
dec
ljmp
ret
test
mov
cmpsb
int3
jmp
movsb
popf
mov
xchg
cmp
aas
fimuls
lods
mov
into
mov
pop
rorb
xchg
call
pop
inc
stos
cmp
jl
sub
hlt
jl
roll
mov
xchg
ja
popa
divl
lods
ja
std
pop
jge
ret
cmc
pop
popa
jge
mov
jmp
cltd
cmpsb
je
mov
scas
inc
xor
mov
push
pop
adc
iret
ret
pop
cmp
inc
das
cmp
mov
in
add
pop
cmp
add
stos
stos
cmovne
inc
idivl
ds
jmp
or
leave
mov
in
mov
fucomp
jo
adc
pop
push
jne
cmc
pop
rclb
out
push
inc
and
or
fwait
pop
mov
pushf
jge
aad
cli
cmpb
push
aas
mov
loope
fidivrs
and
aad
cmpsb
inc
popf
repnz
test
cmp
cmp
pop
xor
push
xor
lods
mov
adc
fincstp
out
cltd
push
xchg
or
stos
jne
pop
jne
outsb
or
adc
jg
pop
out
cmp
cmpsl
jle
or
cwtl
or
push
mov
sti
fcomi
shrb
sbb
lods
cmp
stc
or
pop
push
mov
data16
mov
cltd
add
mov
aas
stos
stc
ret
inc
xchg
ja
and
out
mov
subl
std
dec
mov
pop
push
xchg
test
sbb
in
sarb
cmp
and
vsubpd
push
jl
and
aas
ja
sub
jo
addr16
mov
cs
ss
mov
mov
loope
std
jg
out
pushf
shl
fiadds
inc
sub
aaa
mov
cmp
dec
outsb
mov
dec
mov
and
js
imul
outsb
lock
add
lods
mov
push
xchg
or
rorb
mov
in
out
xor
mov
push
mov
mov
ja
movsl
fldenv
js
scas
cmc
sti
or
or
adc
pop
ffreep
xchg
aam
lret
sub
rclb
movsl
leave
aam
aam
hlt
test
pop
or
cmpsl
pop
pop
lahf
int3
xchg
cld
mov
fwait
pop
sub
jae
imul
mov
cmpl
gs
not
fcomi
fstpl
mov
inc
jg
mov
mov
pusha
or
mov
int3
clc
jmp
loopne
in
out
int
pop
arpl
and
lret
dec
cmp
aam
aam
out
cmp
dec
test
icebp
inc
lea
pushf
pop
movsl
scas
test
pusha
icebp
or
pop
mov
cmpsl
inc
imul
cmpsb
push
jmp
stc
fsubrl
add
scas
or
leave
iret
sub
push
les
out
ljmp
sbb
out
int3
aas
sbb
push
jnp
push
xor
ds
icebp
enter
rorl
pop
decb
dec
push
mov
add
sub
jmp
adc
in
mov
arpl
je
jbe
pop
lret
cmp
pop
sbb
pop
sub
inc
jp
test
or
mov
cmpsl
out
pop
cmpsb
fistpl
and
mov
enter
call
dec
push
sub
call
fmul
lahf
jmp
or
mulb
cmpb
dec
int3
sbb
leave
lret
test
add
pushf
imul
mov
jg
mov
add
stc
cs
mov
sbbb
push
into
xor
enter
fstpl
adc
popa
mov
fldenv
js
icebp
clc
sbb
inc
lret
loopne
sub
iret
mov
mov
mov
cmp
or
inc
push
loope
mov
imul
push
fldcw
je
jnp
pop
jne
lock
dec
hlt
icebp
jg
sub
pop
mov
ret
cmpsb
in
push
jo
add
sub
pop
and
ds
mov
push
mov
loope
stc
mov
sub
loop
mov
ret
lock
push
mov
loop,pt
xchg
iret
in
lahf
adc
sub
filds
push
xor
outsl
outsl
or
mov
sbb
xchg
lods
jo
mov
push
cmp
push
or
imul
sti
push
stos
mov
mov
mov
push
sub
test
outsl
fstpt
inc
dec
loope
fisttps
adc
mov
lcall
aas
mov
cmpsl
jnp
adc
cli
sbb
dec
jns
mov
imul
mov
push
pop
lea
stos
pop
lea
add
xchg
jl
mov
pop
pop
or
scas
test
in
push
mov
sbb
mov
mov
cmpsb
popf
adc
sub
scas
jno
ds
lahf
insb
pop
mov
add
ds
arpl
dec
scas
or
icebp
insb
in
fimuls
jnp
push
dec
repnz
cmp
jle
jo
push
ret
inc
aaa
sub
push
test
jle
cmp
mov
dec
fimuls
ljmp
mov
je
inc
jnp
jecxz
das
mov
lea
cmpsl
sub
mov
add
fs
cmc
or
mov
push
aaa
mov
pop
push
add
and
xlat
xchg
mov
outsb
pushf
stc
clc
mov
imul
and
frstor
mov
dec
push
lods
fnsave
and
sbb
ja
ja
or
subb
icebp
inc
pop
jbe
lds
stc
in
adc
repz
in
ret
int
fmuls
pop
in
out
rolb
test
add
adc
mov
in
mov
jo
paddusw
stos
dec
test
daa
lahf
dec
sub
fcomps
or
cltd
lcall
mov
and
jb
mov
pop
pop
jo
lahf
outsb
xor
cmp
adc
mov
cmp
cltd
aaa
lret
jnp
inc
rcr
nop
add
cmpb
push
ljmp
nop
das
sbb
fnstcw
insl
cmp
jge
mov
push
jmp
repnz
sbb
ds
xchg
mov
mov
sbb
xchg
mov
add
mov
mov
xchg
push
hlt
sti
cmpsl
mov
cmp
test
das
mov
sti
jbe
add
sbb
mov
repz
cmp
mov
pop
inc
pop
or
lahf
or
in
icebp
test
pop
gs
popf
mov
pop
jp
shrb
push
loopne
in
js
aam
outsl
das
stos
mov
push
clc
cs
jge
add
dec
pop
sti
sub
sarl
mov
jp
imul
cmp
stc
sbb
mov
mov
mov
outsb
jae
pop
mov
out
adc
setae
pop
scas
sbb
lods
inc
hlt
dec
push
add
sub
xchg
test
enter
mov
out
xor
push
into
sbb
negl
jmp
mov
and
or
mov
xchg
bound
pushf
adc
sahf
or
imulb
pushf
add
test
scas
popf
scas
inc
push
cmp
mov
sbb
xchg
sarb
mov
dec
mov
mov
inc
sub
jae
inc
out
add
lret
pop
mov
flds
in
mov
fwait
mov
iret
cmp
rep
push
mov
cmpl
imul
pop
lods
inc
mov
sahf
pop
xchg
out
idiv
cwtl
loope
sbb
jae
push
push
xchg
in
iret
sbb
rcrb
sarb
imul
sar
mov
jae
pop
hlt
mov
dec
jg
sbb
fisttpll
out
push
pop
movsl
dec
leave
movsb
mov
sbb
push
fbstp
cs
push
inc
jo
xor
jae
mulb
mov
iret
and
fstpl
imul
fidivrs
sub
dec
add
sahf
icebp
stos
mov
testb
loop
rorl
cltd
push
lret
shrl
bnd
fs
addr16
sbb
roll
test
pop
mov
lret
ffreep
cmp
ljmp
add
lods
xchg
xchg
sbb
insl
je
mov
dec
mov
or
mov
jne
loop
out
xchg
iret
aad
pop
xchg
jmp
sbb
stos
rcrl
lods
or
es
pushf
enter
xchg
imul
or
mov
fsts
fwait
inc
mov
mov
cmpsb
add
stos
mov
in
sub
mov
sbb
adcb
cmp
jge
mov
scas
and
mov
add
std
add
and
and
dec
fdivp
icebp
sbb
ret
loope
out
xor
fcom
fstpl
jg
ret
lahf
add
and
cwtl
xchg
pop
push
aaa
mov
ja
pop
mov
int3
inc
in
or
int3
ret
dec
jmp
adc
cmp
sbb
mov
popf
push
pop
mov
pop
arpl
xor
add
rorb
mul
mov
loop
mov
jl
in
cmp
scas
jmp
cmp
mov
ds
sti
out
div
out
jmp
xchg
mov
cmpsl
aas
inc
sbb
out
add
xchg
xchg
roll
xchg
scas
adc
arpl
inc
out
inc
negl
pop
outsb
rcrb
jg
jle
mov
aas
lcall
inc
fidivrs
mov
dec
xlat
cmpsl
inc
pop
inc
fmuls
inc
scas
mov
test
xchg
cmp
pop
jae
push
mov
in
aaa
jle
push
repz
movsl
out
ret
clc
mov
cli
pop
inc
je
stos
xchg
pmaxub
sahf
shrl
mov
cmp
mov
stos
push
sbb
add
lahf
stos
pop
loopne
xchg
and
cmp
aad
cmc
mov
pop
popf
repz
sbb
sbb
xor
leave
fdivrs
lods
mov
xor
mov
test
mov
ret
ret
mov
scas
xchg
xor
scas
xchg
push
in
and
cmpsl
sbb
jne
push
sub
xchg
out
mov
idiv
icebp
loope
sub
mov
sti
jecxz
out
sub
mov
xchg
aad
stc
pop
pop
jno
cs
mov
mov
int
clc
mov
inc
mov
arpl
nop
xor
loope
or
iret
sub
aad
pop
mov
jmp
adc
inc
mov
inc
mov
imulb
sti
xchg
movsl
inc
jg
pop
xchg
jae
hlt
xor
clc
sarl
lds
xlat
jge
cmp
mov
lods
insb
mov
mov
mov
jmp
test
xchg
mov
or
sub
fists
int3
hlt
in
or
ss
xchg
and
dec
inc
movsl
adc
push
mov
fldl
sub
mov
fsubs
fldcw
pop
decb
test
dec
jg
scas
jbe
pop
scas
hlt
mov
in
ret
ret
stos
repnz
cmc
cld
inc
push
stos
dec
cltd
dec
pop
or
mov
lret
dec
jns
mov
aam
fistl
imul
scas
dec
repz
add
fmull
and
push
xor
mov
je
add
mov
jae
mov
xor
je
lock
cli
pop
add
in
imul
pop
fistpll
imul
push
inc
sub
pop
aam
std
xor
inc
aad
and
fnstenv
andb
pop
dec
pop
mov
test
jno
mov
repnz
xor
int
cmpsb
inc
adc
rcrb
cmp
fadds
add
cwtl
dec
sbb
ljmp
and
das
aad
int3
jmp
sub
into
inc
int
scas
out
ret
add
iret
jmp
enter
inc
repz
push
adc
fsts
mov
cmp
adc
push
sbb
das
sub
bsr
test
lods
in
push
ret
dec
mov
lock
int
fsts
divb
sub
add
popa
scas
or
pop
xchg
cmp
dec
push
adc
testb
push
fsqrt
out
daa
jmp
push
iret
xor
sub
jne
cli
dec
aaa
push
cmp
push
pop
gs
jg
fs
jne
rorl
testb
ds
or
dec
push
rcrl
mov
add
les
pop
mov
fldenv
adc
scas
xchg
paddusw
xor
ret
or
jg
xor
cmpsl
test
fstpl
push
cmovg
sti
out
int3
xchg
inc
push
fcoms
xchg
sbb
lds
sbb
sti
sbb
mov
div
mov
fistpl
pop
sar
ja
fsubs
lods
out
idiv
je
mul
add
addps
sti
cmpsl
push
cmp
push
pop
mov
jmp
pop
loop
stos
hlt
xor
push
cli
pop
aaa
sbb
xchg
aam
hlt
shr
in
scas
fistps
or
mov
shll
push
jmp
mov
jg
das
in
rcrb
ficoms
jl
sar
je
pop
or
fidivrs
push
pop
insl
adc
arpl
xchg
aaa
and
inc
stos
cmp
js
inc
pop
sub
xchg
enter
inc
xor
arpl
mov
mov
add
cli
jae
mov
lock
cmpsl
idiv
or
stos
out
stos
jg
fildll
sbb
aam
fcmovnu
stos
add
or
jns
sub
mov
fcompl
pop
xchg
into
mov
ds
push
sbb
cmp
sub
pop
enter
hlt
lahf
fcmovne
push
in
cs
mov
ja
push
out
mov
jae
out
mov
jecxz
push
out
iret
sti
lahf
leave
fisubl
fidivrl
fldcw
fisttpl
dec
push
mov
negb
pop
xchg
cli
test
mov
adc
push
outsl
or
push
not
push
cmp
sbb
insl
xor
addr16
aaa
adc
sub
lods
cmc
xor
test
into
lret
cmp
pop
sub
xor
imul
pop
xchg
mov
lahf
push
mov
mov
mov
jg
fistps
cmp
aas
cmpsb
es
mov
out
cmc
cmp
cs
cmc
mov
sub
out
jo
dec
int
in
iret
sub
jle
fcomp
sub
xor
mov
xor
fnstcw
mov
sahf
xrstors
out
xchg
out
sti
cltd
dec
loope
inc
sub
out
nop
xchg
fcmovnbe
gs
stos
dec
dec
and
or
cmp
push
mov
repz
sarb
adc
or
ret
push
stc
sbb
scas
ret
mov
add
jae
adc
cmp
lret
loop
enter
mov
xchg
ret
push
sub
test
stos
pop
aas
and
and
cmp
mov
ret
imul
das
aaa
xor
fldenv
xchg
shr
adc
out
stos
lods
ret
outsl
test
dec
xlat
jae
cmc
cmp
jge
jmp
jle
sbb
imul
call
aam
sahf
xor
inc
divb
aaa
fbld
out
aas
inc
lahf
inc
gs
ljmp
or
mov
jg
xor
outsl
popa
mov
dec
cwtl
stos
cmc
add
jl
add
add
andl
scas
jne
dec
mov
rcrb
test
jb
frstor
dec
sub
ja
dec
mov
inc
sub
lahf
subb
push
iret
inc
insb
loope
in
hlt
xchg
push
pop
loopne
fldcw
add
popl
mov
mov
or
inc
rcrl
lea
repz
pop
sub
xlat
cmc
push
mov
cmp
icebp
fs
int
lods
frstor
aaa
scas
out
scas
aam
stc
add
push
insl
ret
outsl
add
add
pop
movsb
mov
sbb
push
shll
push
mov
into
out
aad
cwtl
sarl
aas
iret
icebp
inc
fistps
pop
cld
ficoms
push
lcall
dec
mov
fucomip
notb
mov
ds
pop
test
arpl
sbb
aas
pop
icebp
xchg
jecxz
adc
int
or
cmp
das
pop
int
addr16
das
cmpl
mov
xorl
icebp
dec
sub
cmpl
pop
pop
arpl
adc
icebp
pusha
sti
pop
adc
mov
mov
daa
mov
inc
jbe
or
xchg
mov
mov
outsl
sbb
fidivl
mov
dec
mov
out
out
test
pop
scas
rcrl
mov
xor
lret
cmp
or
xchg
dec
enter
imul
hlt
mov
or
xchg
ficomps
mov
pop
mov
mov
add
lahf
addr16
cmpl
std
pop
cmp
jne
add
jg
cmpsb
out
insl
scas
icebp
and
adc
jge
sbb
in
push
imul
mov
fistl
sub
dec
filds
inc
push
fnstsw
fcmovnb
loope
shr
jg
std
push
rorl
jmp
push
movsl
xor
bound
in
push
pop
lcall
mov
push
or
xor
aad
lods
jns
mov
jmp
xor
out
cld
cmp
lea
or
mov
cmpsb
mov
adc
sub
mov
pop
je
aaa
scas
sbb
pop
stos
insl
in
mov
ret
push
into
repz
mov
xlat
inc
aas
je
mov
lret
and
sub
jb
push
xchg
loope
xchg
out
add
fucomi
mul
arpl
lcall
in
ja
jge
leave
fsts
or
pop
imul
mov
out
sarb
clc
sbb
cmpsl
pop
sarb
mov
push
cmp
sbb
dec
xor
movl
jmp
popf
fisttpll
test
out
or
add
fs
call
orl
push
jmp
scas
cmpsl
lods
mov
xor
aas
sar
mov
out
es
rcr
hlt
inc
in
cmc
aad
inc
test
dec
push
fistpl
out
das
push
pop
mov
jno
ror
cmp
jmp
pop
loope
bound
inc
xor
aas
sbb
sarb
hlt
cmp
jle
icebp
or
ret
shl
mov
iret
inc
fldenv
pop
rol
lret
sub
sub
sub
loopne
sti
mov
add
mov
int
xchg
jne
js
aaa
imul
adc
xor
call
outsb
sahf
int
je
int
jl
popa
ljmp
inc
mov
jg
js
mov
ret
add
mov
or
bound
imull
xchg
fisubs
and
fnstcw
pop
add
lds
xor
das
das
aaa
push
add
pop
jae
jnp
or
jmp
ss
mov
idiv
mov
outsl
repz
pop
sub
mov
lret
daa
in
fcmovb
cmpsb
mov
pop
inc
insl
cli
ror
lods
sbb
mov
cld
icebp
cmpsb
icebp
sahf
or
and
jae
mov
sbb
outsb
outsb
das
lock
aas
imul
push
sub
and
mov
ja
aam
mov
xchg
mov
pop
inc
out
pop
xor
test
frstor
sti
imul
lods
std
adc
dec
jp
repz
popf
xchg
pop
rcrb
out
adcl
or
pushf
dec
or
lahf
jnp
les
ljmp
movsb
leave
sahf
inc
jnp
mov
lcall
aad
sub
xchg
into
push
jl
push
loopne
xchg
lret
inc
cmp
push
add
iret
jns
dec
jno
aas
pushf
jnp
xchg
gs
out
xchg
in
bound
lods
fdiv
sub
rcrb
jmp
push
pop
mov
push
es
icebp
mov
dec
movsl
sbb
push
push
imul
mov
sarl
movb
jmp
fidivrs
pop
pop
jnp
test
fistpll
lds
iret
push
jecxz
adc
stos
in
push
add
pop
jae
fmull
sar
add
xchg
jmp
inc
test
mov
in
mov
mov
mov
negl
bnd
mov
cmpsl
jb
dec
lock
adc
inc
jb
in
xchg
fucomi
icebp
inc
push
fmul
idiv
pop
inc
and
dec
push
js
or
xor
adc
push
lods
hlt
scas
mov
dec
or
cmp
sarl
pop
inc
and
cli
icebp
lock
ret
daa
rcll
or
or
fsin
sub
loopne
and
xchg
pop
and
nop
xchg
mov
mov
dec
add
lods
inc
clc
jge
dec
mov
in
je
ljmp
add
xlat
cs
pusha
mov
mul
cmpsb
fdecstp
sbb
cmpsb
dec
jo
icebp
ljmp
scas
mov
aas
fildll
mov
jne
into
xor
hlt
mov
icebp
pop
lahf
pop
pop
xchg
test
rorb
mov
ret
mov
xchg
xor
repz
adc
mov
push
call
sub
notl
jmp
add
fisttpl
add
stc
xabort
test
mov
aad
out
arpl
test
in
cmp
in
in
pop
stos
pop
int
mov
pop
adc
xchg
xchg
sahf
mov
mov
outsb
or
test
pop
fdivs
xor
sbb
fiadds
pop
ja
jns
repnz
test
movsb
hlt
lds
sbbb
call
out
or
rep
aam
sub
ficompl
daa
push
call
mov
in
mov
scas
fdivr
cwtl
mov
fsubrl
sub
xor
insl
seto
cmp
stos
mov
sbb
mov
sbb
cmc
pop
test
out
into
fisubrs
push
mov
dec
adc
mov
mov
int
stc
mov
mov
negb
xlat
cmc
mov
cmp
xlat
jle
mov
jbe
ficomps
pop
mov
mov
push
les
mov
inc
ss
pop
mov
pop
cwtl
or
sub
aam
mov
into
icebp
in
out
xchg
test
mov
bnd
jp
insl
out
cmpl
xor
fmuls
in
sub
jb
arpl
mov
out
add
jb
loop
push
in
aam
xchg
mov
outsb
test
out
lcall
outsb
xor
dec
jg
lcall
leave
jo
jnp
ljmp
shrb
addr16
xchg
enter
in
push
jecxz
mov
dec
inc
pop
aaa
or
pop
mov
cmp
mov
shll
enter
adc
fstps
mov
ja
es
movsl
and
jg
push
out
jge
push
loope
adc
decb
or
mov
into
outsb
adc
into
cmp
repz
out
push
mov
push
push
jl
popa
sbb
cwtl
jg
pop
cs
jbe
cmp
lret
adc
and
xchg
dec
lock
jns
aad
jecxz
or
pop
mov
pop
add
add
xor
mov
in
int
jg
push
pop
jp
dec
leave
lds
jmp
mov
pop
xchg
incb
and
movsb
outsl
xor
fnstsw
cli
fidivs
ds
negl
xchg
enter
mov
add
push
fdivl
gs
cmpsl
cmpsb
jmp
push
stos
inc
fdivrl
inc
fdivs
adc
inc
push
inc
cmpsb
test
fidivrs
and
data16
xor
jne
cmpsb
movsl
jbe
fisttpl
std
pop
hlt
sub
repz
iret
cs
aaa
std
outsb
inc
sub
fldenv
bound
arpl
dec
out
mov
cmp
pop
dec
into
ja
mov
xor
repz
call
add
enter
push
outsl
out
cltd
addr16
je
jecxz
clc
sbb
inc
cmp
pop
sbb
rcrb
push
mov
jmp
clc
adc
das
push
xchg
add
mov
mov
pop
cwtl
and
in
fcmovbe
lahf
inc
subb
fisubs
or
fdivrs
mov
push
adc
jno
sahf
pop
aaa
xlat
jmp
daa
fists
fcomip
stos
mov
iret
mov
pop
push
inc
int3
dec
pop
int3
out
das
aas
fsub
das
out
pop
int3
xor
inc
mov
scas
dec
pop
adc
fwait
push
ds
imul
in
mov
pop
outsl
jmp
dec
and
add
cmc
in
jmp
arpl
or
or
cmp
push
adc
fistpll
outsl
in
pop
lcall
push
imul
out
mov
fld
iret
push
xor
aam
cli
mov
out
sub
lret
fisubs
pop
mov
outsb
or
pop
mov
movsb
aaa
ds
ljmp
mov
push
mov
dec
sbb
dec
jnp
pop
popl
loope
imul
shr
mov
out
jmp
inc
jmp
mov
push
pop
loope
sub
xchg
div
ja
mov
and
inc
cmp
push
sbb
adc
xor
nop
push
sbb
adc
fsubr
aas
fcmovbe
iret
stos
sbb
ret
adc
jmp
push
xor
fcompl
adc
dec
mov
loop
cwtl
push
jmp
mov
mov
xor
pop
loope
push
jmp
mov
pop
xor
mov
jmp
dec
jo,pt
loope
ds
jnp
cwtl
push
rcr
mov
pop
mov
dec
psraw
adc
cwtl
ffree
in
insb
push
pop
jnp
cwtl
sbb
adcb
mov
mov
testl
or
adcb
int
or
mov
ja
int3
scas
xor
add
jmp
aad
in
dec
fdecstp
adc
ja
test
adc
shl
lods
fs
pop
dec
adc
mov
out
xor
scas
cmpl
in
inc
jecxz
sbb
in
adc
mov
andl
ud1
je
addr16
mov
movsl
nop
inc
and
cs
into
push
add
fdivs
fbstp
int
mov
inc
fnsave
test
cltd
mov
ljmp
andl
push
leave
inc
out
cmp
mov
cmp
dec
rclb
jge
and
lods
clc
mov
mov
add
pop
in
mov
std
mov
lds
test
leave
push
adc
or
movsb
rcrb
cmp
cmpsl
jmp
add
push
decb
push
push
arpl
jmp
movsl
inc
mov
dec
dec
pop
leave
cli
adc
mov
ficoms
push
movsb
cwtl
jno
fidivs
and
xchg
flds
xor
sub
mov
pop
repnz
sub
jne
test
jns
dec
push
sbb
xor
mov
movsl
pop
mov
aad
iret
sti
scas
insl
lds
fimull
jo
ds
inc
pop
pop
sahf
fsubs
or
sub
add
inc
fstps
inc
clc
popa
daa
test
mov
aas
stos
jns
adc
popf
inc
pop
iret
mov
jmp
out
ficoms
das
pop
push
ficoml
lcall
popl
or
xchg
leave
aas
fwait
inc
pop
xchg
cmc
sub
jmp
mov
push
jl,pt
in
nop
jmp
aad
cmc
sub
fldcw
imull
jge
mov
ds
pop
sub
inc
stos
sub
add
mov
shl
les
xor
xchg
ds
mov
fldl
stc
mov
divl
mov
movups
fidivrl
fistl
addr16
sbb
sbb
loope
stc
fsubrs
cld
cmpsl
ret
dec
adc
mov
negl
enter
mov
les
ja
mov
and
shr
addr16
jmp
outsb
xlat
jnp
iret
std
jns
mov
addl
mov
pop
jmp
push
and
xor
xor
ss
iret
fisubrs
addr16
dec
xor
pop
push
mov
add
sti
test
pop
pop
or
pop
xchg
out
inc
adc
push
call
hlt
popf
out
mov
sahf
sub
pushf
mov
sahf
inc
scas
ror
out
mov
xchg
dec
jb
arpl
clc
in
pop
mov
outsl
add
pop
add
adc
fdivr
mov
testl
sti
loope
pop
ficomps
stos
mov
mov
enter
out
push
out
in
push
repnz
arpl
je
in
mov
ds
lock
push
lret
xor
into
stos
shll
pop
stc
jae
or
lea
out
add
fldt
cmpsl
inc
enter
mov
out
xorl
mov
sti
mov
scas
dec
daa
mov
addr16
scas
adcl
cs
mov
div
test
dec
dec
xchg
xor
jecxz,pn
insl
stos
pop
sarl
jp
jbe
mov
dec
adc
add
aas
add
xlat
sti
pop
insl
cmpsb
popl
push
adc
data16
mov
in
lds
stos
mov
rcr
mov
dec
scas
mov
xchg
rcr
lret
adc
rep
in
pop
mov
jg
pop
js
sub
fisttpl
mov
cmp
imul
fcomps
and
outsl
out
mov
sub
cmp
addr16
rolb
outsl
sub
pop
outsb
mov
pop
mov
mov
inc
mov
rorb
loopne
fistl
dec
inc
pop
cmp
adcb
jne
or
sub
imul
mov
adc
cwtl
lods
cmp
nop
cmpsl
stos
jg
mov
out
movsb
fistps
imul
mov
ret
jae
adc
cmp
int
ror
ret
mull
test
ljmp
cwtl
adc
test
jmp
cwtl
dec
dec
out
arpl
out
mov
lahf
fbstp
shrl
lret
scas
sbbb
mov
lretw
addb
out
ret
lret
dec
shll
add
out
shrl
in
cmp
lods
xchg
adc
pop
repz
dec
inc
adc
ss
sub
inc
jl,pt
mov
pop
inc
fistpll
out
jb
sbb
imulb
xchg
insb
repz
push
inc
push
shrl
and
std
add
outsl
cmp
dec
and
jp
enter
scas
wbinvd
jge
lods
mov
int3
jno
and
sub
sub
mov
cmpsb
sub
sub
cmp
shll
jge
dec
pop
cmp
mov
outsb
mov
xor
not
pushl
pop
pop
sbb
jge
fdivrp
outsl
or
and
pop
ds
pop
into
cmp
insb
cmp
in
outsb
dec
in
ljmp
jg
sub
mov
jmp
push
cmp
mov
mov
inc
test
pop
and
pop
sub
push
add
sub
repnz
add
jl
test
arpl
test
or
rolb
pop
cwtl
out
rclb
data16
sarb
fldlg2
mov
dec
mov
pop
inc
test
xor
pop
hlt
pcmpgtw
sub
mov
cmpsl
pop
out
cmp
xchg
push
mov
xor
stos
daa
jno
pop
imul
scas
rcll
sbb
jge
enter
aaa
lret
xor
xchg
cmc
js
sub
je
lret
scas
add
jno
aas
xchg
cmc
mov
xchg
das
fld
dec
lahf
push
mov
popf
stc
mov
into
mov
adc
movsl
or
mov
je
xchg
jno
inc
lods
pop
cli
pop
inc
ret
arpl
fcmovbe
bound
jbe
into
pop
mov
pop
cmp
push
mov
fstl
mov
sub
dec
adc
sbb
stos
sub
test
push
jmp
xor
fadd
fs
push
lret
ljmp
cmpsb
leave
out
dec
add
out
inc
and
hlt
in
jnp
add
push
imul
hlt
cs
mov
xor
loope
push
jle
cltd
scas
sbb
imul
inc
fnstenv
add
popa
das
jnp
cmp
sub
sbb
mov
pushf
cltd
mov
mov
addb
mov
outsl
pusha
out
repz
xchg
lods
fists
mov
test
fst
test
outsl
mov
jge
inc
movsl
mov
subl
lret
cltd
scas
fistl
mov
xor
jecxz
add
xchg
divl
fcmovnb
dec
aas
jl
mulb
in
mov
ror
xor
imul
ljmp
outsb
ret
mov
dec
popf
adc
sti
mov
or
and
pop
mov
jle
add
sarb
je
testb
cmp
mov
test
outsb
xlat
fcompl
orb
daa
mov
test
xchg
fisttpll
xchg
lods
divl
mov
rcr
xchg
in
insl
div
shr
addl
jae
mul
out
mov
xchg
repnz
xlat
aad
cmp
popa
pop
cs
in
pop
fsub
out
int3
sbb
cs
jge
jb
fldt
mov
sarb
mov
outsl
mov
mov
out
out
xchg
aas
fldl2e
mov
outsl
inc
fsubrp
add
inc
f2xm1
stos
pop
mov
add
movb
push
cmp
jmp
imul
leave
orb
dec
cmp
cs
fcmovne
popf
stos
mov
dec
arpl
in
lret
mov
cmp
out
mov
pop
repnz
filds
mov
sti
ja
pop
in
roll
pop
imulb
mov
shlb
push
imul
mov
pop
aaa
sub
sub
pop
xchg
divb
push
jmp
dec
in
mov
pop
or
shrl
lcall
mov
das
sti
hlt
dec
push
mull
test
loope
repz
jge
lods
scas
dec
pop
mov
ret
bound
or
mov
ja
leave
lret
xchg
aas
xlat
imul
or
jmp
xor
scas
stos
shlb
test
inc
pop
cmp
push
jmp
xchg
mov
imul
cmpsl
fildl
divb
scas
mov
imul
fstp
out
sti
dec
jecxz
sub
cmp
out
or
in
out
push
out
mov
mov
cmp
push
ds
fistpll
decl
cmp
adc
ja
cmp
jmp
mov
out
jge
add
inc
jo
subb
add
in
add
add
inc
jnp
shll
mov
inc
pop
ret
insb
adc
push
cmp
pop
push
nop
push
add
mov
jmp
or
fidivrs
push
clc
scas
mov
das
jg
jne
ret
mov
addr16
popf
mov
outsb
dec
aaa
xchg
repz
addb
enter
stos
in
add
xor
rolb
dec
pop
aam
lret
fimull
jp
mov
fs
fbld
or
int
lea
fbstp
ret
mov
mov
fsubl
jb
jl
xor
inc
xchg
jmp
js
xlat
lahf
pop
ljmp
mov
jmp
sub
pop
cli
jge
hlt
cmpsl
mov
loope
jle
and
lds
jecxz
xchg
dec
inc
pop
enter
mul
push
cmp
dec
mov
dec
scas
lods
hlt
dec
stos
aas
lcall
fisttps
das
mov
ret
testb
jbe
pop
or
sub
jle
jne
inc
dec
stos
mov
out
iret
pop
pop
out
or
outsl
sbb
sub
adc
adc
clc
outsl
shlb
test
xchg
fbstp
add
cmpsb
scas
test
push
pop
fstl
shrb
stos
out
sahf
mov
fdiv
push
cmp
lods
call
hlt
add
sub
jmp
lret
fisubs
add
in
fxch
and
add
lods
iret
jl
repnz
mov
ja
insl
iret
or
insl
aaa
pop
insl
lahf
cmp
iret
jl
out
iret
sub
scas
gs
sub
je
jns
out
xorl
push
jbe
mov
dec
outsb
adc
je
jb
nop
out
mov
mov
xchg
add
adc
dec
popl
jnp
out
push
jae
mov
pop
loope
daa
cmpl
aad
lret
leave
shr
inc
pop
roll
cs
xchg
mov
fcmovb
in
sarb
mov
add
rcll
repz
repz
jmp
scas
fbld
jle
pop
decb
inc
push
lods
fistpll
push
add
mov
add
loop
mov
sahf
mov
lcall
imul
iret
sbb
fstps
pop
out
jl
sbb
cmp
push
ljmp
shlb
sub
test
add
lret
inc
mov
pop
in
mov
ja
jge
cmpsb
cmp
inc
pop
daa
xchg
repnz
xchg
xchg
dec
sbb
xchg
inc
scas
cmp
jmp
cmpsl
icebp
hlt
roll
lea
lahf
mov
pop
cld
pop
ret
cmpsb
arpl
add
cmpsl
push
loopne
scas
jp
sub
test
mov
add
mov
push
or
loopne
subl
pop
loop
insb
jmp
sub
adc
loop
insl
mov
sbb
cli
movsl
hlt
or
inc
pop
stos
aam
mov
aas
fistl
fucom
push
add
xchg
and
mov
cmpsl
push
sbb
fbstp
push
adc
sbb
jnp
fs
jnp
outsb
adc
repz
in
fstl
push
outsb
fisubrl
test
fistl
ds
notl
xchg
or
mov
xchg
lods
jo
out
pop
mov
femms
inc
jmp
cwtl
xchg
ljmp
dec
jne
push
jmp
adc
mov
jg
dec
inc
jnp
inc
sub
shrb
out
cld
arpl
pop
cmpb
dec
jp
aaa
xchg
fsubrp
jg
mov
xor
and
lock
iret
ljmp
xor
sbb
adc
sbb
out
inc
lahf
mov
scas
movsb
or
sahf
sub
mov
ret
in
daa
and
sbb
or
add
stc
push
mov
or
testl
lret
xchg
cmpsl
fwait
adc
sub
fisubs
movq
punpcklwd
mov
jmp
pop
nop
jae
jmp
into
jno
shll
dec
out
negl
add
fidivrs
ret
mov
out
ficomps
in
or
aaa
inc
aad
fisttps
and
pop
jg
sub
mov
adc
mov
add
stos
push
stos
jmp
int3
and
subb
jg
cmpsl
popl
cs
mov
pop
sti
add
call
pop
inc
sub
insl
xlat
clc
sbb
mov
push
pop
mov
jbe
in
dec
cmp
sahf
rcrb
scas
xor
fistl
jae
mov
mov
inc
sub
addr16
push
rcr
outsl
mov
pop
fwait
stos
outsb
test
push
inc
ja
dec
and
ja
jo
xor
inc
xchg
jmp
push
xlat
or
jl
push
in
add
dec
mov
cmp
popa
jbe
stos
add
cld
pop
clc
fcoms
cltd
sahf
dec
inc
sbb
cmpsl
ja
das
pop
sbb
insb
add
mov
lahf
pop
mov
cld
into
jmp
lcall
js
sbb
stc
popa
jnp
adc
rcr
adc
mov
add
shll
mov
fdivr
in
hlt
push
push
jo
dec
subb
loopne
fnstenv
sub
adc
mov
push
popf
dec
or
insb
in
push
ret
cmp
lcall
mov
and
jle
push
xchg
and
pop
shl
push
adc
stc
jne
into
mov
loop
push
jno
ficomps
lock
int3
inc
ljmp
ds
or
roll
fsts
dec
incl
dec
stos
jle
mov
leave
test
lret
scas
test
mov
mov
mov
mov
arpl
mov
hlt
inc
and
nop
dec
out
jbe
pop
hlt
mov
mov
imul
dec
push
inc
dec
mov
imul
mov
in
pop
pushf
clc
sub
mov
scas
nop
repnz
mov
xor
dec
jo
fcmovnu
adc
orb
scas
pop
stos
ficoms
stos
shl
inc
movsb
or
in
fucomi
out
fstps
mov
ja
stos
les
aas
shrl
mov
xchg
or
repnz
sarb
sub
fwait
ret
fcmovnbe
push
jne
cwtl
mov
fsubl
sub
shl
icebp
adc
mov
jno
mov
push
inc
dec
xchg
mov
cmp
ss
or
pop
in
cmpsb
dec
in
mov
mov
sub
ljmp
sub
sub
lret
aaa
mov
jbe
in
stos
sti
pop
xchg
cltd
scas
add
dec
xlat
mov
mov
movsb
xor
mov
mov
iret
pop
adc
mov
cmp
push
mov
cld
mov
imul
inc
cmpsb
xor
fimuls
out
mov
imul
and
mov
push
push
hlt
mov
cli
xor
sub
push
stos
inc
popa
xchg
jge
int
scas
add
aas
jle
pop
lcall
inc
fwait
out
mov
cmp
arpl
scas
pop
movsl
mov
inc
ficoms
mov
cwtl
push
popf
mov
jb
dec
add
gs
mov
jb
sahf
inc
fisttpl
into
mov
fidivl
in
xchg
or
mov
into
popaw
xchg
addl
lock
xchg
xor
sahf
bnd
mov
das
mov
aad
outsl
ljmp
movsl
mov
mov
loope,pn
in
in
inc
dec
in
xchg
or
jmp
data16
push
cli
mov
mov
mov
inc
leave
xchg
inc
xlat
stc
shlb
lcall
mov
mov
insb
mov
lcall
and
cmpsb
je
add
cwtl
std
out
cmpb
fisttpl
add
out
int
daa
arpl
outsb
mov
xorl
jle
pop
enter
inc
mov
push
dec
mov
xor
jmp
fimuls
shl
mov
cmp
imul
dec
push
mov
ds
js
sbb
lret
adc
mov
lock
jg
ret
cmc
and
mov
nop
shrb
mov
fisttpll
mov
mov
cmp
dec
out
pusha
incb
bound
nop
fisttpll
push
fcomi
and
test
cmc
div
movsb
mov
pop
adc
sbb
test
andl
cmc
or
mov
rclb
shl
popa
push
jmp
cmp
cli
outsl
dec
cmp
ss
cmpsl
scas
sbb
inc
imul
aam
adc
add
adc
and
call
cmc
lret
pandn
cli
pop
mov
pushf
and
xor
cmc
inc
push
lods
and
das
inc
push
fdivrs
push
mov
adc
fldl
lock
pop
ret
stos
rcrl
or
xchg
scas
fwait
cmpsl
jmp
cld
cmpsb
mov
and
fdivrl
leave
andl
xor
jnp
int3
xchg
shll
out
cmp
ss
hlt
mov
mov
push
jecxz
aas
adc
mov
push
testl
adc
sub
loopne
fwait
inc
pushf
xlat
ljmp
lcall
sub
inc
and
mov
fisubs
rcrb
add
push
loope
imul
sub
stos
or
aam
xchg
stos
frstor
movsb
add
mov
adc
scas
add
mov
dec
leave
adc
jbe
jnp
popa
sbb
mov
adc
fiaddl
scas
repnz
dec
inc
mov
jae
scas
stos
or
xchg
mov
inc
imul
push
add
cmpsl
scas
inc
rclb
push
lock
pop
pop
push
dec
jge
flds
xchg
sbb
out
stc
push
xchg
and
loop
fimuls
mov
xlat
lods
add
rol
jmp
xor
lea
mov
mov
push
mov
ss
sbb
int
inc
insl
scas
mov
xor
pop
add
sub
jns
cmp
scas
adc
mov
fsubr
int3
jp
cmp
push
in
inc
aad
push
mov
xchg
cs
orb
sbb
mov
xor
jge
inc
outsl
lcall
inc
jnp
shll
jp
pop
push
orl
jne
jg
popf
sub
out
mov
sub
pop
mov
pop
in
cwtl
adcb
jne
ljmp
push
pop
mov
mov
cmp
cmp
add
pop
icebp
mov
jl
das
sti
js
pop
pop
mov
pop
xchg
sbb
cmp
cmp
je
jg
pop
adc
sub
divb
and
add
cmp
sub
fildll
fdiv
mov
sub
cmp
mov
add
sbb
repz
push
sbb
jne
ja
mov
lods
sub
and
scas
mov
xchg
cmpsb
arpl
sub
out
mov
mov
fsubs
imul
mov
mov
xor
hlt
in
lock
lds
out
cmp
stc
push
push
out
out
xorl
lock
addl
sub
orl
mov
rcr
xlat
out
ret
cmp
nop
push
sub
loope
jl
mov
xchg
lea
lock
pop
or
mov
sub
out
dec
lahf
scas
fbld
inc
inc
xor
outsb
mov
mov
sub
sbb
or
imul
push
jbe
xchg
andl
test
subl
negb
outsl
fisttps
jae
cltd
sub
loop
insl
jg
js
imull
ljmp
xchg
jge
xchg
fnsave
dec
or
or
lret
mov
mov
xchg
cltd
pop
fnsave
imul
sti
std
icebp
cbtw
mov
or
out
add
stos
insl
push
dec
stos
mov
fwait
out
mov
sub
jl
mov
add
xchg
rcr
mov
adc
aaa
mov
xor
lods
cmpsl
in
scas
inc
ja
or
out
mov
loop
push
sbb
imulb
mov
orb
daa
xor
xor
mov
es
pop
add
jo
xchg
mov
cwtl
xor
push
adc
xchg
imull
stos
out
out
xorb
idivl
and
and
ret
jmp
imul
mul
xchg
xlat
movb
aad
ds
ja
bound
pop
dec
loope
pushf
push
dec
int
cwtl
in
mov
xchg
imul
insl
pop
or
je
push
outsb
jg
pop
cltd
mov
cli
adc
adc
pop
mov
hlt
stos
nop
fldcw
mov
mov
imull
ja
js
xchg
add
xchg
scas
and
lret
std
xchg
movsl
xchg
out
push
hlt
push
sub
and
loopne
sub
push
xor
mov
pop
gs
mov
arpl
imul
adc
fcomp
xchg
cmp
mov
rorb
inc
lods
mov
mov
pop
sti
leave
iret
cmc
sbb
pop
jge
cld
or
mov
psubsw
and
into
out
dec
lock
dec
aad
mov
mov
pop
js
stos
dec
ja
mov
mov
mov
fcompp
fstpt
inc
cmp
dec
and
clc
dec
inc
idivl
fiaddl
movsl
jb
jbe
pop
or
mov
cmp
add
mov
outsl
fimuls
mov
adc
ljmp
push
push
pop
dec
and
cmp
add
int
cli
shr
cmp
mov
icebp
lahf
cmpsb
aaa
or
adc
dec
imul
pusha
sbb
pop
sub
and
inc
adc
in
mov
lret
pop
xor
into
fwait
mov
mov
lret
jns
sbb
xor
ret
out
in
jp
fsubrl
pop
repz
arpl
or
clc
cwtl
dec
xor
adc
cmp
xchg
mov
fldcw
iret
ljmp
insb
inc
cltd
cmp
shr
xor
scas
add
ljmp
dec
and
inc
call
mov
xor
jmp
ss
inc
les
rcrl
jmp
lods
jge
push
pop
mov
popa
rcl
sahf
stos
inc
mov
fistpll
loopne
rcrb
cmp
xchg
daa
pop
out
xor
shrl
mov
xor
jo
repnz
out
inc
inc
imul
fidivrs
aad
sbb
orl
add
cld
pop
iret
aad
insl
mov
cltd
add
or
mov
stos
adc
mov
jns
mov
into
adcb
movsl
jecxz
pop
data16
ja
pop
flds
hlt
mov
cmpsl
pop
cmp
sarl
mov
sahf
pop
aad
into
and
or
xchg
loope
rcrl
cmp
adc
outsl
popf
iret
popf
xor
dec
stos
test
jmp
mov
cmp
mov
ret
mov
out
mov
popa
inc
shll
dec
adc
test
xchg
rorl
cmc
clc
popa
fsubr
iret
add
adc
mov
popa
jnp
add
or
cs
cmp
push
xorl
sbb
mov
iret
ret
mov
and
out
and
add
push
cs
in
pop
mov
xchg
scas
fldcw
xor
mov
sbb
lahf
jnp
fidivs
fcmovu
test
or
ja
jo
mov
mov
insb
cs
pop
inc
inc
sbb
pop
or
shrb
stos
and
mov
adc
pop
or
xor
adc
fbstp
add
lods
mulb
xchg
roll
ja
sbbl
sub
or
inc
lock
add
fnsave
jae
and
jnp
pop
loop
clc
jb
jmp
xchg
pushf
mov
pop
int3
inc
fwait
pop
push
subb
ret
adc
adc
xor
and
leave
mov
mov
sahf
loopne
sbb
mov
lds
paddsb
imul
xchg
jecxz
mov
add
mov
fildll
into
icebp
xlat
movsl
out
xor
jae
cmc
imul
or
scas
add
mov
les
aaa
aad
imul
jno
jae
pop
negb
adc
add
dec
stc
mov
pop
lret
rcl
mov
adc
addl
pop
pop
dec
scas
and
push
das
outsl
into
mov
mov
fidivl
rcr
je
jb
stos
icebp
adc
sahf
mov
aaa
jmp
push
loopne
aas
and
outsl
aam
scas
pop
std
xchg
cs
mov
xlat
sub
sbb
fmuls
pop
push
daa
mov
cmpsb
dec
idivb
test
in
ret
mov
xlat
jl
add
out
and
outsb
cmp
sub
stos
add
push
cli
mov
inc
leave
push
fbstp
lret
aad
fdivrs
push
cmp
cmp
adc
test
ljmp
add
fstpl
xor
out
rcrb
push
mov
push
xlat
adc
jne
sti
scas
addl
popf
add
cmp
fld
lahf
cmpsb
lods
inc
cltd
xor
lcall
roll
sub
inc
cmp
iret
dec
mov
jmp
jnp
mov
out
jae
or
push
and
mov
std
out
jbe
ljmp
mov
mov
cmp
push
enter
out
and
mov
outsl
shr
mov
inc
insb
xchg
inc
jnp
xlat
into
sbb
push
leave
lods
jae
jmp
jmp
pop
pushf
stos
inc
pop
mov
xchg
sub
dec
cs
hlt
rcrl
out
jne
insb
cmp
inc
xchg
pushf
or
rcrl
xor
lock
std
repnz
xorl
test
jnp
sarb
pop
add
fbstp
shll
sub
movsb
scas
mov
fmuls
bound
cmp
leave
mov
jecxz
mov
lcall
jb
push
xor
insb
pop
push
inc
mov
dec
cs
fstps
dec
xchg
jns
imul
adc
dec
add
and
dec
popa
aad
fbstp
push
mov
stc
jp
pop
xlat
jae
mov
cmpsb
lds
int
neg
sbbb
loope
and
in
sbb
mov
push
or
or
cmpsb
sub
aas
jnp
testb
sbbb
repz
ret
jno
in
and
scas
mov
or
xchg
cmpl
mov
lods
mov
fcomi
pop
mov
xchg
pop
jl
mov
inc
out
fucomi
mov
subb
lea
sbb
lahf
pop
pop
lcall
fisubs
cs
mov
inc
sahf
mov
gs
fcoms
clc
out
adc
lret
jnp
inc
xchg
data16
push
push
lahf
mov
je
inc
cmp
rcrl
fistpl
imul
out
pop
fcmovne
jnp
lods
xlat
xchg
test
or
fdivrp
mov
dec
outsb
jg
div
or
pop
lods
or
mov
push
ljmp
pop
shlb
adc
imul
and
ret
dec
pop
and
leave
pop
xchg
sahf
fwait
mov
mov
outsl
into
lea
insl
sarb
jbe
loop
cmp
nop
cmp
xor
out
subl
into
inc
aaa
mov
fcoml
push
ja
pop
cmpsb
in
jge
aas
xlat
in
jmp
dec
jmp
push
adc
sub
adc
out
loope
arpl
cmc
jns
inc
fcomps
es
ror
xlat
inc
call
andb
call
dec
out
mov
jmp
sarb
das
xchg
stos
adc
xchg
shl
dec
xchg
jne
and
mov
lahf
add
or
iret
pop
dec
mov
stos
jmp
divb
out
xchg
inc
andb
pop
mov
jo
push
repz
xlat
insl
add
or
jl
les
leave
jmp
inc
enter
pop
cwtl
icebp
adc
push
jmp
xlat
sbb
xchg
cli
ret
int
add
inc
mov
iret
xchg
jl
aad
sar
clc
jg
vcomisd
in
xchg
push
out
test
in
jnp
xchg
lret
movsb
cmpsl
sti
inc
enter
rolb
fcoms
or
cmp
cmp
mov
xchg
aaa
jl
scas
aad
test
repnz
cmp
xchg
lahf
mov
add
js
lock
jbe
repnz
fldcw
idivl
data16
inc
push
in
in
rolb
cmp
adc
jne
xor
xorl
in
or
dec
cmp
mov
stc
das
ss
psubq
loop
in
lret
dec
push
mov
jns
mov
pop
jg
pop
in
push
pop
movb
icebp
rolb
jae
fs
cmp
adc
fsubrl
aaa
inc
xchg
mov
xchg
loopne
out
sarb
mov
inc
cs
and
cmp
das
cmpb
cmp
lahf
rcll
adc
subl
out
ficoml
ljmp
rcrl
mov
mov
and
in
shr
clc
push
imul
mov
aaa
push
or
rcl
push
jnp
movsl
ljmp
outsb
push
je,pt
mov
int
pop
fists
jg
mov
jns
inc
sbb
nop
add
mov
pop
scas
scas
in
shr
negl
sarl
sti
pop
insl
int
adc
daa
sub
xor
sub
outsl
ret
cmp
ja
mov
add
mov
stos
shll
dec
scas
inc
dec
mov
aaa
arpl
add
push
mov
arpl
call
jbe
hlt
ljmp
notb
fildll
dec
jne
ja
out
in
mov
stos
jne
sbb
cmp
imul
aaa
mov
das
fwait
out
int
sub
add
fstp
sub
insb
aaa
push
movl
jnp
mov
movsl
data16
cmpsb
cld
push
jp
outsl
push
xchg
aad
in
xchg
mov
push
outsl
into
pop
mov
into
adc
mov
mov
cmp
sbb
repz
and
dec
push
or
shrl
aad
mov
je
adc
and
cltd
negl
push
mov
sub
mov
adc
mov
dec
jne
out
cmp
dec
ss
sbb
test
ret
loope
jmp
xlat
add
adc
arpl
sti
sbb
stos
pop
repz
adc
sub
sbb
inc
in
inc
je,pn
iret
jbe
mov
into
mov
pop
mov
sub
add
leave
dec
sbb
cmc
pop
pop
popf
mov
sbb
xlat
negb
mov
ret
dec
pop
aam
mov
sub
push
clc
sub
pop
sub
fsubp
ds
dec
scas
xchg
fldenv
fistpll
insl
fs
or
jnp
out
repz
and
push
iret
xor
push
mov
arpl
push
mov
mov
jno
fcmovnu
add
or
sti
sar
push
mov
mov
xchg
push
pop
sbb
movsl
sub
jbe
mov
hlt
ljmp
lea
fisubrl
div
aas
pop
roll
stc
in
sbb
or
and
cmpl
push
push
pop
sub
stc
push
addl
fisttpll
ljmp
shrb
into
xchg
gs
popa
loope
fnsave
test
sub
test
insl
pop
cltd
xchg
push
xor
xchg
xchg
xchg
cmp
mov
fldt
jg
sarb
int3
int
out
adc
mov
jns
in
xorb
xchg
and
or
js
cmpsl
sub
sbb
rol
out
int
mov
fnstcw
mov
jb
je
adc
in
and
enter
shr
sar
adc
leave
call
aaa
xchg
mov
mov
or
in
in
lods
push
sbb
push
imul
repz
jl
test
cmp
pop
mov
dec
aad
rorl
movb
out
negl
add
mov
xor
andb
stos
lock
popf
lock
lea
sub
xchg
xchg
sub
jae
shrl
mov
push
lods
lahf
cmp
dec
pop
mov
add
mov
cmp
push
fistps
mov
jge
mov
jg
pop
bound
scas
dec
imul
pop
mov
outsb
daa
cmp
outsb
and
cld
and
scas
or
in
fsubrp
gs
xchg
cmpsl
cmp
jne
jnp
fistl
aad
sbb
aad
ds
cmp
jae
mov
mov
ljmp
or
pop
mov
xchg
out
sti
out
dec
jl
fdivrl
pop
pop
mov
cmc
repnz
xor
cmc
repz
stc
stos
dec
pop
or
xchg
push
cmp
adcb
ja
lahf
enter
in
das
add
out
fstpl
push
and
pushf
decl
add
and
shl
inc
jae
jg
enter
insl
fidivl
jge
repz
sbb
imul
mov
xor
rolb
mov
jle
test
xchg
mov
xor
mov
lret
addr16
pushf
rorb
cmc
cmc
push
xor
adc
push
in
xor
rcrb
aas
add
sbb
mov
sub
jne
push
add
jge
mov
lret
pop
push
xchg
mov
loopne
mov
outsl
out
mov
in
fimuls
cld
mov
mov
fldcw
cmp
xchg
pushf
push
leave
jb
add
lahf
out
and
mov
pop
fistps
mov
aas
rcll
xchg
push
imul
push
dec
bound
cmp
out
rcrl
inc
mov
push
xor
mov
inc
int
ret
push
push
repz
ds
adc
mov
push
and
pop
stos
call
mov
pop
hlt
mov
in
pop
adc
mov
inc
iret
test
scas
stos
mov
hlt
iret
push
popf
mov
jmp
cli
mov
fistl
add
or
push
orb
movsl
outsb
xchg
add
cmp
cmp
in
xlat
outsb
push
mov
sub
cmpsl
xchg
jle
lret
ja
add
out
and
dec
push
dec
push
xlat
mov
xchg
shll
ss
sbbl
shl
fucom
test
jge
dec
neg
outsb
or
sub
mov
aad
ret
jb
pop
jmp
lods
mov
xchg
lods
push
mov
jecxz
jae
imul
mov
sarl
jne
mov
or
idivw
xlat
mov
out
fstpt
dec
push
divl
push
enter
sbb
jg
jno
or
xchg
lahf
mov
mov
pop
int3
jnp
push
jbe
fistpll
idiv
test
arpl
mov
mov
xchg
xchg
dec
pop
sbb
loopne
leave
iret
jecxz
fwait
push
aaa
adc
push
xor
arpl
add
mov
imul
stc
xor
out
sbb
std
jge
cld
pop
xor
or
clc
or
clc
cmp
sarl
xor
cld
push
add
dec
mov
hlt
lret
mul
jg
movsb
fistpll
jno
cli
pop
jmp
xchg
push
je
es
jl
inc
lods
shl
out
iret
test
xchg
add
ljmp
outsl
push
call
ja
push
lahf
imul
dec
mov
pop
mov
push
lahf
add
jb
pop
mov
adc
push
sub
jg
mov
out
mov
pop
movq
adc
xor
js
adc
push
iret
icebp
cmp
dec
jge
lret
pop
cmpsl
or
mov
or
or
mov
add
bound
lcall
sub
jle
pop
pop
loopne
cmp
dec
les
out
mov
arpl
incb
mov
sti
and
sbb
jns
outsb
out
and
pop
cmp
cmp
xor
arpl
shll
int
loop
adc
das
je
shl
mov
mov
data16
push
stos
jns
jl
sub
lret
pushf
inc
xchg
mov
pop
das
cmp
ljmp
ficomps
fisttps
leave
push
sub
pushaw
lret
or
mov
outsl
in
lods
lahf
out
fcomip
pop
fdivr
or
pop
into
fldt
ljmp
fbstp
arpl
lahf
in
pop
popa
icebp
stc
out
mov
in
testb
push
in
gs
call
lods
or
mov
mov
fists
sub
or
push
pop
in
stc
push
pop
repnz
lret
dec
jg
sbb
xor
push
test
xor
xor
in
sbb
sub
cli
out
scas
je
in
in
pop
mov
sub
scas
inc
stos
mov
repz
stos
dec
out
xchg
and
xlat
outsl
xchg
insb
cmp
pop
mov
sbb
lret
mov
call
mov
lret
add
cmp
mov
jge
mov
scas
leave
pop
mov
adc
xor
jg
scas
mov
cltd
int3
loopne
adc
lahf
outsl
scas
into
mov
into
ficoml
lcall
jmp
loop
mov
cmp
iret
push
mov
xor
jbe
ss
jns
and
loope
cmpsb
and
test
idivb
mov
pop
aam
dec
push
fistpll
adc
icebp
xor
jle
jno
and
mov
pop
pop
test
add
aaa
jg
add
pop
aas
fcomip
mov
sbb
aam
mov
lds
gs
push
bound
test
iret
jg
pop
clc
push
gs
push
pop
lcall
or
fsubrs
pop
mov
sbb
xchg
sahf
insl
insl
mov
add
push
outsb
sbb
iret
les
fs
pop
push
stos
mov
aad
outsl
jns
imul
fidivl
push
mov
mov
sbb
clc
jbe
sbb
fmuls
sbb
adc
mov
and
pop
outsl
enter
f2xm1
mov
mov
mov
mov
stc
or
arpl
mov
jmp
sbb
sahf
sbb
pop
roll
in
fdiv
mov
mov
icebp
adc
call
lods
jo
jb
mov
mov
sbb
xor
lahf
add
mov
loopne
push
outsl
leave
push
xor
sahf
mov
dec
xor
mov
ficompl
ja
mov
in
xchg
fwait
and
lret
lahf
ffreep
addb
cli
push
push
dec
aas
pop
sub
lock
comiss
rcr
test
xchg
bnd
incb
ss
cwtl
dec
and
cli
les
xorb
pop
mov
movd
outsl
and
dec
mov
sarl
data16
add
jle
mov
sar
in
push
movsl
fwait
mov
mov
stc
les
pop
jnp
mov
std
inc
sahf
and
dec
sub
push
sub
divb
or
xchg
testb
xchg
mov
ljmp
outsb
push
mov
ret
jp
pop
push
jecxz
cli
jecxz
xlat
shll
mov
roll
out
fwait
repnz
mov
mov
pop
lods
inc
inc
cmc
js
cltd
jae
mov
mov
add
adc
jbe
stos
add
mov
jns
adc
jg
fiadds
jmp
hlt
cmp
cli
mov
sbb
fdivp
fmull
aas
sub
insl
les
ss
add
jp
mov
sbb
adc
dec
outsl
fld
jge
mov
adc
mov
aaa
loop
sti
fidivrl
aad
test
js
pop
fdivp
sbb
lahf
loopne
in
mov
xlat
cmpsb
in
iret
addr16
loop
cld
les
xor
sahf
cwtl
dec
jecxz
jmp
add
mov
inc
addl
jl
xlat
jge
jl
or
sti
ret
add
nop
add
pop
xor
pushf
decb
xor
push
push
frstor
pop
mov
cmp
sahf
jmp
arpl
lret
stos
ljmp
ljmp
out
jno
push
outsb
pop
out
fcompl
loope
fdivrl
frstor
stos
cmp
ljmp
pop
insb
mov
sub
outsb
into
xchg
jmp
ret
pushf
mov
jge
lds
xchg
xor
negl
test
imul
aas
cmp
dec
inc
dec
jg
into
cmc
call
or
nop
push
pop
mov
xchg
gs
sbb
lahf
sub
push
leave
stc
inc
or
mov
pop
add
pop
jnp
fistps
out
inc
rcrl
mov
aam
clc
lds
shll
jne
pop
sbb
dec
adc
mov
out
xlat
sbb
dec
push
outsb
sub
or
fmulp
xor
call
xor
and
sbb
call
mov
repnz
fdivr
je
pop
cmp
out
mov
das
push
frstor
das
pop
mov
jo
aaa
ror
add
mov
mov
push
pop
mov
pop
jnp
or
ror
mov
mov
into
insb
repnz
jle
imul
mov
or
rcrl
bound
pop
sbb
sahf
mov
pop
sub
jnp
push
xchg
xor
scas
or
mov
sub
pop
xchg
out
mov
push
pop
xchg
mov
mov
adc
sbbb
ret
xchg
cmc
xor
sub
dec
or
notb
fidivl
subb
in
mov
loop
mov
cs
pop
xor
xchg
or
bswap
sub
incb
cmpsl
daa
cs
int
das
shll
sar
push
cltd
out
movsl
push
out
fnstsw
ucomiss
push
into
mov
xchg
cmp
pop
adc
std
sbb
mov
add
sub
jne
xchg
xchg
addb
jle
andl
jbe
mov
xor
stos
inc
mulb
out
jle
imul
push
popa
mov
lods
dec
ja
test
mov
add
xor
nop
fucomip
fcomps
mov
decb
ss
xlat
sbb
hlt
fcmovne
add
mov
pusha
sbb
cmp
add
ret
cmp
push
xor
aas
cs
mov
inc
lcall
pop
repnz
add
inc
xor
sti
push
cmp
in
icebp
cld
notl
incb
jle
xchg
rorl
rcrb
lods
jnp
mov
sbb
out
stos
pop
hlt
mov
ja
fcmovnbe
call
pop
mov
fs
into
in
pop
push
push
int3
pop
imulb
ss
notb
imul
dec
jnp
cld
test
sub
mov
movsl
jmp
xchg
sbb
repnz
scas
lds
je
aam
push
dec
cwtl
cmpsb
mov
mov
ja
mov
sbb
fwait
aad
push
shlb
movsb
and
enter
mov
inc
mov
mov
push
lock
jmp
data16
imul
push
lods
call
test
dec
push
fisubs
push
add
lcall
pop
sub
pushf
sarl
mov
fsts
rorb
fnstcw
xchg
inc
vandps
cmpsb
jnp
lock
je
repz
mov
lods
sbb
fdivl
int3
jns
jae
mov
das
testl
fadd
pminsw
mov
sub
dec
pop
inc
xchg
js
scas
imul
mov
xchg
mov
push
mov
add
faddp
sti
imul
jnp
mov
stc
or
mov
xchg
in
stos
ret
out
mov
xchg
lahf
iret
ret
imul
add
mov
mov
stos
cmpsl
sbb
cld
lock
ficoml
sahf
mov
loopne
data16
sbb
jecxz
sub
jecxz
lock
ret
jg
inc
pop
inc
inc
dec
scas
dec
push
inc
paddd
iret
jge
add
out
icebp
jl
add
aaa
cld
cs
je
mov
add
push
outsb
xor
mov
stos
jmp
mov
xchg
push
dec
arpl
stos
add
and
lret
sbb
push
out
fsqrt
push
xor
rcrl
sub
imul
iret
dec
adc
xor
mov
add
cmp
mov
jle
iret
std
mov
and
insb
dec
pop
subb
sbb
repnz
mov
dec
cmp
out
into
sti
mov
fucomip
lock
add
pop
xchg
inc
arpl
xchg
ss
int3
mov
jno
stos
dec
pusha
lret
iret
or
repz
in
cli
jne
and
or
arpl
insl
xchg
jbe
adc
aas
push
ret
cmpsl
adc
sub
or
ror
sbb
mov
mov
mov
cvtpi2ps
and
stc
in
fidivrs
and
lds
or
out
or
mov
repz
mov
fwait
lahf
or
test
data16
add
sbb
pop
xor
inc
jb,pn
xchg
flds
pusha
pop
adc
and
stos
pop
jl
daa
mov
shll
push
mov
cmovge
leave
fs
inc
pop
xchg
fstpl
das
lock
imul
daa
cmp
cmpsb
or
dec
pop
xor
lea
mov
std
fnsave
adc
lret
cmpsl
pop
push
shll
dec
sti
repnz
xchg
push
adc
push
push
push
imul
xchg
lock
fmuls
or
in
add
sti
pop
mov
in
das
cmpb
imul
dec
push
int3
mov
pop
push
into
or
pmulhuw
cwtl
aaa
mov
dec
push
dec
cld
sti
out
add
jmp
neg
jle
pop
sub
mov
adc
dec
cmp
push
xchg
pop
sub
sbb
cmpsb
out
mov
push
xorl
repz
decb
stos
scas
gs
or
call
cmp
pop
bound
jg
sub
outsb
js
scas
mov
mov
push
ret
jmp
pop
push
mov
sub
lods
sub
adc
jae
out
outsl
dec
jmp
push
out
mov
push
jmp
push
mov
lcall
mov
popf
pop
jle
jae
mov
or
xchg
push
call
xchg
jnp
dec
xor
mov
mov
inc
push
sti
adc
fstp
jg
push
jmp
aad
mov
jge
pop
cmpsb
out
mov
stos
ret
add
loop
ffreep
mov
push
ds
pop
clc
loopne
push
pushf
out
jne
adcb
dec
push
dec
add
loop
xchg
test
cmp
and
cmc
inc
add
out
out
inc
repz
sbb
fsubl
push
xor
divl
sti
sub
idivl
jmp
sub
das
cmpsl
pop
sbb
roll
stc
leave
xchg
scas
aaa
std
stos
insb
fidivs
mov
mov
sbb
cmc
aam
lods
or
sub
or
mov
adc
sub
xor
or
sti
cmc
cmp
out
iret
shll
pop
xlat
es
cmp
fwait
and
or
mov
pop
adc
push
rcll
xor
hlt
das
sub
std
xchg
psubw
add
sahf
sub
dec
clc
and
repz
fistps
inc
sub
insb
outsl
mov
das
push
lods
dec
popa
adc
xlat
pop
inc
ja
jne
push
mov
mov
cmp
std
jnp
xor
mov
sbb
pop
jnp
and
outsl
push
ret
and
mov
pop
add
out
xchg
or
xchg
adc
ja
out
ja
adc
fists
hlt
das
inc
pop
inc
inc
cmpsl
jbe
scas
push
out
mov
pop
fstp
or
xchg
jmp
std
decl
jbe
fisttps
popa
icebp
ret
pop
mov
or
test
jmp
pop
or
clc
add
inc
repnz
pushf
ja
test
pop
inc
fsts
adc
sub
idivl
aad
clts
sbb
test
push
mov
add
jg
mov
mov
mov
mov
std
push
subb
pop
jno
mov
pop
aas
adc
push
inc
out
lahf
cmp
out
xchg
sbb
adc
dec
repnz
out
sub
sarb
sub
jne
push
jmp
mov
jmp
sti
push
mov
pusha
sbb
mov
scas
add
std
xor
sbb
outsl
jl
push
ror
in
mov
les
pop
and
stc
jge
mov
mov
repz
aam
hlt
stc
dec
push
xchg
gs
movsl
fbld
pop
pop
mov
lods
lods
clc
add
pop
out
mov
mov
xor
jle
cs
in
sti
das
loop
insb
hlt
inc
test
adcl
insl
popa
in
nop
jecxz
enter
mov
xor
out
cli
push
fidivs
mov
pop
cli
xor
push
jns
pop
jg
adc
out
sub
add
push
in
jns
inc
fldcw
mov
pop
sar
mov
xor
xchg
mov
fmul
mov
ret
jmp
dec
xchg
aad
cmp
subl
xlat
mov
mov
cmpsl
stos
getsec
hlt
packsswb
and
daa
dec
fsts
pop
bound
outsb
imull
stos
aaa
shrl
aaa
inc
outsl
aas
aaa
cmp
aaa
subl
cld
adc
push
daa
ret
frstor
fildll
add
dec
cmp
popf
xchg
and
pop
or
imul
xor
out
filds
out
pop
inc
in
test
cmp
gs
mov
push
jle
jae
cmpsb
mov
push
sub
dec
mov
sub
jge
push
data16
ss
scas
sbb
mov
fcoms
push
movsb
sub
xchg
stc
hlt
and
mov
sahf
push
adc
rcrb
push
cs
std
adc
psrlw
cwtl
adc
inc
sbb
adc
xor
adc
aaa
imul
sub
mov
fcoms
aas
mov
inc
push
push
jg
mov
out
js
dec
les
mov
mov
push
in
test
jne
dec
push
popa
es
or
mul
cwtl
loopne
fsub
xchg
stos
div
aad
mov
mov
fldcw
jnp
mov
imul
push
fnstcw
fbstp
outsl
aas
jecxz
es
cmc
scas
pop
outsb
push
jmp
or
push
imul
xor
nop
push
push
or
fs
xor
aam
popa
xchg
dec
add
int3
movsl
jp
mov
sub
in
sti
dec
out
fs
sub
mov
xchg
call
adc
sub
xchg
popf
sbb
dec
cli
jo
inc
jg
push
xor
mov
shrb
mov
cmc
cltd
lods
add
test
fnsave
jg
pop
xor
stos
add
push
lods
push
inc
pop
fucomi
xchg
scas
inc
rcll
ror
sbb
fcmovbe
fcoms
cs
adc
iret
xchg
fwait
xor
xor
loop
cltd
and
add
and
je
mov
cmp
addr16
aad
aad
imul
rol
fucomp
ret
das
lret
push
push
mov
adc
ficomps
mov
idivl
fisubrl
cmp
out
decb
push
scas
mov
xchg
enter
ds
movsl
jae
push
aad
dec
idivb
aam
add
psadbw
in
dec
or
out
lret
fwait
leave
or
fwait
aas
jecxz
or
out
fwait
pop
popa
aad
cmc
inc
push
or
scas
fscale
stc
fmuls
xor
shl
jnp
cmp
mov
into
cmp
xchg
fidivrl
push
lock
push
xchg
mov
xchg
repz
xlat
mov
mov
sbb
sub
ss
or
js
lods
pop
cltd
das
cltd
jg
fcomip
ret
arpl
jmp
iret
mov
icebp
popf
mov
mov
cmc
scas
cltd
cmp
loope
jmp
imul
and
repz
or
push
adcb
mov
mov
aaa
iret
pop
cmp
aaa
xchg
cmpps
sti
pushf
shll
flds
mov
xor
lock
pop
mov
jp
repnz
out
daa
or
in
into
or
sbb
out
loopne
and
push
mov
popf
leave
test
stos
mov
orl
jnp
or
cmpsl
ret
in
push
arpl
mov
cmpsl
or
iret
xor
and
add
test
push
outsl
xchg
cmp
js
mov
and
imul
clc
sar
push
pop
stc
and
mov
inc
xchg
out
sbb
scas
shrl
fidivrs
pop
adc
fidivs
ljmp
mov
xorb
xlat
pop
subb
xchg
repz
aas
and
mov
xor
into
shrl
dec
pop
das
jecxz
movb
lock
fcmovbe
dec
mov
or
loope
xor
imull
mov
cmp
xlat
aas
ss
fistpll
repz
test
loop
sahf
std
and
pop
rolb
add
mov
out
scas
jmp
clc
cs
jmp
cltd
out
mov
test
lcall
add
mov
arpl
pop
not
xchg
xchg
cwtl
jle
mov
mov
cmpsb
pop
mov
mov
scas
movsl
mov
mov
fldenv
mov
mov
andl
jg
or
cmp
and
aam
jns
cmp
pop
cs
iret
and
enter
testb
test
idivb
mov
sub
mov
cld
inc
jg
fwait
add
and
leave
jge
or
push
or
aam
or
mov
lods
leave
mov
sahf
inc
or
pop
xchg
repnz
or
sbb
jecxz
add
ljmp
sub
adcb
test
rclw
pushf
push
cmp
mov
pop
lahf
pop
bound
dec
cmpsl
xchg
das
gs
insb
mov
add
add
push
mov
pop
lahf
outsl
fcompl
sti
jge
mov
lea
ret
iret
adcb
mov
or
mov
jb
mov
jp
jg
push
xchg
ja
cmpsl
mov
dec
jnp,pt
push
jl
xor
jne
fildl
fadd
pop
mov
add
pop
arpl
cmpsl
mov
add
push
add
ret
dec
xchg
pushf
or
std
and
xchg
sti
adc
inc
jnp
ds
divl
jp
xor
ds
pop
and
repnz
outsl
xchg
dec
xor
jb
sbb
incb
mov
pop
inc
xchg
adcb
imul
sub
mov
in
mov
ret
and
loop
dec
arpl
xor
arpl
xchg
aas
sub
jg
adc
fsubrl
std
sti
jle
out
hlt
cmp
scas
inc
fstps
outsb
fcoml
adc
dec
lock
aas
popa
das
sub
ds
pop
add
xor
movb
imul
fs
fstps
xchg
or
pop
imull
mov
mov
xchg
fcomps
test
add
jbe
out
jle
aas
fldl
fcompl
out
flds
cmp
mov
das
adc
iret
jg
test
inc
addr16
ret
jle
ret
mov
rcrl
mov
inc
inc
aad
mov
mov
dec
fcompp
shrl
sti
test
inc
fidivrs
mov
movsb
inc
xor
push
pop
inc
jne
cmpsb
jg
cli
aaa
sti
ficomps
add
inc
fsub
pop
mov
sbb
adc
out
cmp
mov
xor
sar
fistpl
mov
push
cmp
adc
fcmovu
jg
jge
out
popf
pop
das
push
mov
xchg
add
lahf
mov
mov
in
push
int
jnp
sbb
icebp
pop
std
or
pop
mov
xor
xor
stc
or
cmc
xchg
outsb
pop
fs
arpl
iret
sahf
push
dec
ss
jne
ret
pop
in
mov
cltd
lret
add
icebp
pop
rcll
fmuls
cs
jno
aaa
testb
imul
or
or
ljmp
sub
add
mov
loop
add
pop
mov
cli
jb
sbb
lds
dec
add
nop
lds
test
add
stos
dec
push
mov
fsubl
push
cmp
or
and
cmpsb
hlt
sbb
or
adc
ljmp
mov
jmp
sar
fldcw
or
fcom
or
out
loop
outsl
test
sbb
jnp
jmp
imulb
mov
pusha
push
fisubrl
pop
stc
cmpsl
jae
or
outsb
insl
jg
mov
pop
pop
pop
mov
ret
lds
aad
adc
xchg
mov
arpl
outsb
ret
testb
popf
add
insb
stos
pop
lods
cmp
shl
scas
fiadds
aam
negl
pop
ljmp
ja
or
aaa
add
push
fidivl
jecxz
hlt
pop
inc
leave
jle
testb
iret
sbb
outsl
dec
arpl
in
stc
rorb
aaa
add
or
mov
cmc
lret
icebp
jecxz
fsts
out
adc
xor
stc
jg
sahf
mov
insl
jg
scas
cmpsl
cltd
pop
mov
add
push
jecxz
and
aad
dec
lret
lea
sub
xlat
std
xor
ljmp
gs
push
sahf
out
jae
add
sahf
jecxz
iret
lcall
mov
jnp
lds
ljmp
push
push
adc
cwtl
xchg
arpl
mov
sbb
mov
pop
mov
fisubl
or
push
mov
mov
xor
add
dec
dec
xchg
push
aas
mov
push
imull
clc
test
mov
sub
rcl
sbb
adc
fst
and
mov
fsubrs
int
mov
aas
incl
cs
out
or
lods
inc
push
cmp
adc
mov
call
dec
out
dec
sub
fwait
stos
insb
lds
mov
sti
gs
mov
cmp
fldcw
jl
xor
jnp
int
sub
or
leave
loope
and
jge
pop
mov
int
sub
and
movsl
stc
mov
pop
pop
icebp
stos
aas
cmc
repz
push
sub
clc
cli
outsl
and
lret
push
dec
add
out
cmpsb
shrb
xor
mov
xchg
add
sbb
lock
shll
fistpl
imul
or
adc
add
adcl
jle
push
mov
mov
jge
aas
xchg
mov
dec
divl
cmp
ret
inc
jle,pt
imul
aas
int
or
xor
mov
mov
sub
mov
lea
sbb
mov
ljmp
inc
int3
fwait
pop
mov
cwtl
loope
or
xchg
out
outsb
sub
negb
or
insb
shlb
ret
leave
xchg
mov
in
sbb
cs
adc
inc
ss
repnz
dec
jl
dec
sub
sub
fidivrs
and
or
in
fistps
insl
aaa
mov
inc
and
test
jno
mov
incb
cmc
aam
sub
test
in
cltd
mull
inc
jb
negb
pop
jo
mov
mov
push
sbb
shll
ja
pop
test
shr
xor
xchg
cmpsl
ss
jne
mov
rcll
pop
xchg
pop
or
pop
stc
push
and
jnp
les
push
jns
daa
std
imul
pop
clc
mov
jns
push
pop
clc
lahf
es
mov
jmp
push
fwait
jnp
lods
mov
jns
fnsave
mov
scas
je
push
mov
rcrl
pop
aam
lods
arpl
aas
jmp
fnstsw
in
das
xor
pop
cltd
out
dec
cld
int
or
adc
leave
xor
out
dec
add
sbb
sbb
adc
sti
push
mov
push
cli
jle
mov
mov
std
cmpsb
mov
pop
mov
jg
push
loopne
cmp
add
fisubrs
pop
aam
fsubrs
lods
jmp
std
push
push
pop
dec
mov
jecxz
lret
lock
movsl
aas
push
mov
lods
push
inc
addr16
shlb
pop
dec
sub
cmpsl
jecxz
aad
scas
fwait
pusha
xchg
sbb
stos
inc
in
ja
jecxz
sbb
leave
cmp
pop
loope
rorb
add
jbe
cld
jns
stos
mov
cmpsb
push
pop
xchg
fildl
scas
mov
imul
sub
push
mov
out
loopne
mov
lods
cmp
stos
mov
push
jmp
adc
stos
popf
gs
sub
aaa
add
jp
shrb
and
ss
repz
ret
mov
and
mov
mov
mov
sar
out
insl
pop
les
enter
out
jbe
test
xor
cmpsl
xlat
fstpt
sti
out
mov
out
div
out
pop
lahf
fwait
mov
std
mov
mov
std
mov
sti
out
add
mov
add
filds
mov
dec
sub
or
rol
repnz
ret
int
mov
ret
enter
icebp
arpl
sub
cmp
hlt
call
mov
xor
scas
pop
xchg
mulb
push
pushf
dec
xchg
fsubl
imul
lea
mov
inc
sbb
in
and
flds
jnp
sbb
in
push
movnti
mov
pop
scas
mov
add
sbb
sahf
loop
cmc
jbe
and
iret
push
jg
and
mov
xor
push
xchg
mov
dec
andl
push
jge
shll
js
jl
fldcw
cmpsl
adc
or
dec
lret
mov
mov
movsl
out
jge
sub
mov
andb
add
or
push
cmp
addb
inc
fbstp
fwait
test
dec
pop
mov
lcall
hlt
or
in
aas
dec
mov
scas
jbe
int3
outsl
jmp
pop
pop
mov
add
out
jmp
jecxz
fildll
mov
mov
xor
mov
fwait
int3
pop
xor
push
imul
push
mov
pop
outsb
cld
push
or
adc
inc
pop
mov
stos
std
lcall
insl
mov
ja
std
popf
mov
mov
mov
mov
add
or
jle
pop
pop
out
jmp
or
cmp
and
adc
popf
dec
pop
cmp
cmpsb
jae
ja
lahf
sbb
out
inc
xor
es
nopl
mov
pop
push
sub
out
ljmp
xor
cmpsl
ret
loope
int3
cmp
fidivs
xor
lahf
rcrl
cmp
xor
pop
and
cmp
mov
dec
push
xlat
mov
hlt
cltd
ret
mov
jmp
mov
xlat
in
pop
test
cmp
pop
dec
inc
jmp
adc
iret
adc
movsb
push
insl
mov
js
lods
mov
fsubs
andb
out
push
jae
add
shrl
pop
dec
scas
push
mov
pop
jae
mov
pop
fcomps
cwtl
test
jp
xchg
push
arpl
jp
ficoml
stos
movq
dec
pop
or
rolb
xchg
cwtl
test
jp,pn
jmp
stc
fmulp
push
jp
pop
lcall
cmp
sub
push
pop
mov
movsb
sbb
cmp
test
mov
sub
fwait
adc
jae
mov
lcall
cmp
jg
fildll
xchg
jns
pop
mov
add
in
test
repz
dec
jg
fwait
stc
test
add
test
popl
sbb
sub
mov
out
add
arpl
cmpsb
or
out
scas
lods
mov
push
test
mov
adc
xchg
clc
in
mov
pop
cmp
mov
xor
orb
cmp
stos
ds
imul
int
fildl
les
cmp
mov
pop
push
outsl
ds
jbe
lods
sub
outsb
cmp
xchg
or
orl
sbb
out
sub
or
enter
out
jg
mov
je
and
mov
mov
adc
icebp
pusha
pop
ret
xor
popl
push
mov
adc
out
sbb
hlt
cli
xchg
mov
lahf
or
pop
daa
dec
push
sub
fwait
lahf
mov
mov
dec
jle
in
pop
je
cmc
fdivs
sbb
ficompl
stos
stc
js
dec
add
cli
loope
mov
xchg
insb
mov
jmp
and
pop
ja
je
lods
mov
push
fcompl
cmpsb
into
mov
shlw
mov
mov
mov
push
mov
imul
xchg
push
xor
js
ret
imul
lahf
iret
mov
jecxz
sub
into
lahf
repz
mov
lds
test
jb
repz
loopne
ds
es
pop
in
mov
push
out
in
addr16
dec
and
or
mov
cld
popa
or
fisubrl
cmp
mov
pop
stc
in
mov
mov
mov
stos
scas
cmpsb
mov
push
mov
cmp
mov
jle
inc
cs
fldenv
push
sub
shr
lcall
jns
stos
adc
pop
adcb
pop
out
cmpsl
aaa
pop
cli
mov
pop
mov
daa
mov
call
cs
ret
jmp
scas
add
lock
and
rep
mov
addl
sub
jne
sahf
idiv
push
adc
roll
lock
push
jbe
dec
sub
outsl
or
faddl
movsb
pop
loop
adcb
shrl
pop
dec
mov
mov
call
fs
scas
roll
shll
push
dec
jae
sbb
mov
mov
and
orb
pop
jg
ds
inc
add
xor
aaa
mov
fucom
mov
ret
pop
insb
fnstenv
or
jg
inc
lret
add
arpl
shll
pusha
mov
xchg
add
inc
es
mov
aad
stos
ret
in
mov
scas
fimuls
xchg
mov
jle
cmpsb
mov
test
or
lea
jg
sbb
out
mov
out
pop
xlat
imul
iret
test
lcall
ljmp
popa
in
leave
pop
mov
add
xchg
jnp,pt
ds
jle
or
imul
inc
loope
cs
flds
mov
add
inc
mov
xchg
jmp
aas
dec
fcoml
dec
shlb
push
push
imul
mov
sbbb
movsl
subl
ret
jmp
negl
std
sbb
test
or
lcall
and
sbb
aaa
imul
lret
testl
mov
rcrb
push
fistps
test
dec
push
das
mov
mov
dec
popa
icebp
pop
repz
sbb
repz
jmp
cs
lcall
loopne
loope
lahf
mov
test
imul
mov
xor
push
testl
leave
outsb
mov
aad
shl
popl
int
fs
mov
loopne
fimull
lea
leave
or
les
je
xor
enter
mov
cmpsl
std
adc
xor
pop
mov
jecxz
mov
mov
xor
scas
fsub
xchg
push
bound
cli
mov
mov
ficomps
sti
insb
mov
icebp
and
push
idivl
mov
popa
mov
and
push
addr16
rolb
jae
mov
repnz
mov
push
ss
mov
std
and
xchg
add
scas
sti
add
mov
iret
adcb
sub
dec
adc
and
mov
or
por
enter
out
int3
mov
fistpll
sti
jp
imull
jp
dec
cmpl
pop
adc
shrb
and
inc
jl
xor
xchg
aas
mov
stos
sub
outsl
inc
push
fstpt
scas
test
dec
add
sbb
xor
cmp
rcl
adc
jne
loopne
movsb
xor
jcxz
idivb
test
dec
jno
adc
addr16
lea
jns
push
adc
ja
lods
adc
mov
mov
add
decl
dec
hlt
and
stos
lods
fdiv
jle
inc
sbb
call
jbe
sub
jmp
in
ret
push
pop
fstps
lods
mov
orl
dec
testl
mov
mov
int
mull
cmp
mov
or
ds
out
lahf
pop
pushf
sbbb
test
sti
ret
test
popa
stc
es
xlat
mov
sub
sahf
cltd
sti
fistpl
out
test
pop
stos
xor
movswl
xor
push
gs
pusha
pop
xor
sub
jns
outsl
aas
or
cmp
push
outsb
stos
mov
fisttpl
rolb
fwait
inc
sbb
pop
jp
ds
call
cli
std
push
loop
test
inc
scas
add
mov
push
and
sub
ficompl
fstl
and
sub
fidivs
inc
jle
sub
jg
mov
cs
adc
imul
jns
iret
mov
mov
pop
pop
mov
into
sbb
shll
xor
imul
mov
scas
repz
neg
mov
mov
movsb
cmc
out
mov
sbb
cmpsl
iret
testl
loop
icebp
sbb
or
jecxz
mov
jno
imul
jg
test
jo
mov
cmp
inc
addr16
scas
imul
and
mov
xchg
outsl
nop
pop
mov
mov
clc
andl
sub
in
jae
push
adc
and
dec
push
pushf
js
ds
jmp
hlt
scas
pop
iret
into
repnz
roll
sti
push
sbb
in
dec
and
cmp
adc
sub
iret
push
add
not
popl
pop
in
xor
mov
mov
dec
jno
icebp
sbb
pop
jnp
push
xchg
aad
sbb
int
ror
not
xlat
pop
cmpsl
mov
mov
or
pop
mov
fnsave
cmp
ljmp
loope
and
jle
mov
mov
jmp
lods
pusha
fsubrs
mov
fistpl
adc
jl
hlt
js
sub
mov
push
aam
lcall
mov
fwait
pop
cmp
mov
mov
adc
lret
inc
ror
xor
xchg
mov
iret
pop
jbe
mov
pop
in
out
cmp
xchg
aad
inc
outsb
and
sbbl
pop
das
mov
adc
inc
mov
mov
inc
pop
movb
mov
jne
pop
jmp
or
aam
in
add
pop
push
js
cmp
dec
inc
fistps
dec
and
sbb
out
cs
daa
inc
fdivrs
pop
fidivs
and
mov
sbb
add
push
sub
imul
lea
jo
repz
add
fstps
inc
jne
mov
shl
mov
mov
aad
jmp
sbb
std
aam
repz
fnstcw
xlat
sub
ret
cmp
inc
stos
lods
or
xchg
mov
mov
aam
sbb
in
ss
mov
and
push
out
pop
inc
fnsave
sub
shrl
lret
or
xor
mov
mov
adc
ds
shll
fldcw
lahf
mov
jns
lock
or
or
or
sar
ds
jns
jns
cmpsb
inc
jb
jg
mov
test
pop
jp
cld
out
lcall
pop
lahf
sub
mov
cli
sbb
sbbl
scas
popa
lods
mov
mov
rolb
lret
mov
push
xchg
out
fldl
adc
pop
cltd
cli
daa
in
and
add
adc
push
scas
shll
pop
xor
aad
mov
dec
lock
cmpsb
xor
xor
iret
jg
mov
les
scas
jecxz
or
pop
mov
into
xchg
inc
sbb
mov
jmp
lock
mov
mov
imull
fistpll
dec
fidivrs
mov
sub
mov
mov
lds
lods
bnd
xchg
lahf
mov
mov
and
sub
out
push
insb
push
cmpsl
and
cmp
aad
jb
int
lods
pop
dec
add
jno
imul
xor
stc
ficomps
jne
xlat
ljmp
idivb
dec
jge
sub
cld
lret
push
jmp
icebp
call
push
push
ret
add
divb
mov
cmpb
adc
jns
sahf
stos
inc
ret
dec
cmp
sbb
adc
sub
inc
jg
lahf
pop
test
roll
mov
or
imul
mov
xor
and
cmp
mov
jne
jae
xchg
mov
js
inc
mov
xor
in
lahf
int3
pop
ficompl
mov
lret
push
or
imul
cs
fistps
mov
out
pop
in
sti
cmpl
push
mov
mov
dec
sbb
jle
cmpsl
pop
push
stc
les
shll
dec
add
sub
scas
fnsave
jbe
and
dec
inc
sub
mov
rcr
xor
xor
mov
mov
xchg
ja
cmpb
data16
xchg
scas
add
mov
push
add
fsubl
nop
mov
mov
cmpsb
repz
gs
cs
mov
dec
leave
cwtl
rorb
xlat
ficoms
ljmp
xlat
cwtl
mov
jb
dec
sahf
int3
jae
mov
mov
sbb
jmp
fisubrs
mov
lea
jmp
pop
roll
out
fisttps
mov
aas
push
xor
divb
sarb
popf
cmp
aaa
sahf
mov
dec
sub
sub
out
mov
and
jg
push
icebp
or
xchg
push
imul
xor
cmp
aas
movsl
push
and
jmp
sub
push
ret
inc
out
jb
das
es
shr
add
push
lahf
jle
xor
lods
push
adc
call
sbb
mov
bsf
xchg
mov
dec
inc
aam
cmp
mov
outsl
outsb
pop
pop
scas
movsb
out
sub
jno
movsl
inc
mov
add
pop
or
push
sti
push
push
pop
push
jmp
loop
loopne
cld
dec
adc
mov
mov
inc
xchg
stos
adc
roll
push
jns
scas
sbb
imul
sbb
sbb
push
leave
movsl
mov
mov
cwtl
js
cmpl
xchg
and
scas
aaa
rol
cmp
ret
inc
mov
mov
push
fadd
push
fadd
push
or
add
aaa
adc
shll
inc
mov
std
jmp
push
outsl
adc
dec
add
dec
xor
out
mov
test
aad
jnp
xchg
icebp
mov
jbe
lods
pop
jne
jns
pop
call
fcoms
mov
xor
push
rolb
jbe
ds
pop
sub
mov
dec
cmpsb
fistpl
push
xchg
scas
fcompl
jg
pop
sbb
test
add
xor
negb
mov
jbe
lods
mov
mov
inc
pop
movsl
adc
jmp
and
xor
mov
mov
popf
adc
mov
scas
pushf
test
pop
pop
mov
mov
std
daa
fldl2e
xchg
jns
popfw
iret
test
jl
stos
jecxz
pop
pop
cmp
lret
jl
scas
loopne
ss
mov
xchg
inc
xor
xor
xor
sub
dec
sbb
mov
inc
ljmp
cmp
push
mov
cltd
cmp
or
cld
adc
dec
loop
test
push
scas
mov
push
push
int3
mov
lea
push
add
notb
mov
and
out
scas
sti
or
xlat
mov
adc
push
clc
mov
mov
mov
pushf
inc
mov
jge
pop
imul
or
jnp
sbb
jle
mov
pop
test
outsl
out
pop
pop
cmpsl
out
jae
cs
fs
mov
je
push
addr16
pop
jmp
sti
pop
pop
inc
fldt
mov
jg
pop
lcall
insb
xchg
xor
shl
mov
sub
cmp
sub
int3
jge
imul
sbb
add
punpckhdq
stc
adc
sub
adc
out
std
mov
sub
fidivs
fistpl
sti
sub
imull
mov
popf
dec
idivl
jle
sub
lods
aas
shlb
out
cmp
add
ret
mov
call
lcall
es
lret
add
xor
or
popa
gs
scas
xchg
je
sbb
testb
lahf
jg
push
clc
mov
pop
aad
test
in
test
fwait
das
push
dec
dec
fdivrs
add
pop
jle
enter
push
outsl
cmp
fldl
fwait
xchg
xor
mov
mov
into
dec
test
imul
stos
test
sub
adc
mov
stc
cld
cmp
inc
pop
outsl
cmpsl
fmul
fadd
xor
fbstp
add
jle
jmp
xlat
lods
cmc
jmp
sti
mov
pop
ja
mov
pop
inc
mov
imul
call
into
testb
in
pop
xor
add
mov
xchg
mov
out
jecxz
mov
fidivrs
mov
mov
inc
pusha
mov
rcr
ss
xchg
mov
pop
into
cld
xor
mov
clc
outsb
in
sbbl
push
repz
lods
jle
pop
pop
dec
mov
mov
shll
fsubrl
popl
xchg
inc
inc
sbb
fnclex
mov
mov
adc
test
insl
outsb
pop
pop
and
stc
jg
push
divl
xchg
jge
adc
ss
les
adc
cld
cmp
push
sbb
add
test
cmc
push
add
lods
ds
and
leave
add
xorl
push
mov
int
lock
scas
div
xor
mov
rorb
lret
inc
fnstsw
cld
in
mov
mov
test
xor
sti
push
out
push
pop
mov
loopne
lahf
xchg
insl
pop
icebp
shll
out
imul
loopne
push
arpl
sti
out
jg,pt
xlat
adc
ret
pushf
lahf
test
scas
push
into
out
add
cs
add
mov
pop
xchg
aaa
and
mov
daa
das
in
mov
xchg
ljmp
cwtl
sbb
and
or
outsl
jg
mov
mov
and
pop
div
shrl
repnz
dec
js
push
xchg
xchg
mov
movsb
and
ja
icebp
mov
sub
js
adc
inc
pop
adc
adc
or
xor
test
fwait
cmp
pop
inc
push
and
sbb
adc
sbb
sub
and
ja
jge
outsb
fsubl
divb
jns
jle
loop
daa
ret
pop
pop
rcrb
ret
psubusw
add
fcomip
sub
pop
test
mov
cltd
cli
out
mov
jnp
cmp
lods
loope
lea
jae
outsb
ret
or
outsl
mov
pop
pop
dec
or
cmp
mov
or
rolb
lret
imul
call
jnp
out
andl
cmpl
sbb
mov
sub
pop
aaa
push
movsb
jmp
add
add
sub
loopne
mov
aas
dec
ds
addr16
dec
xor
negb
xchg
lods
outsl
sahf
cs
lret
aad
jns
pop
test
outsb
mov
idivb
loop
fldl2e
mov
mov
shll
cwtl
jae
cwtl
imul
in
stos
pop
jb
fdivl
sar
je
cld
adc
pop
pop
and
pop
pop
mov
into
jle
test
xchg
mov
sbb
cmp
push
hlt
outsl
jae
in
push
lods
mov
lret
lcall
cmc
xchg
jae
mov
andl
adc
aaa
add
out
jg
mov
mov
xor
sbb
in
cmp
push
cmpl
fnstcw
push
fcomi
add
stc
imul
mov
icebp
add
loop
xor
pop
mov
push
repz
xchg
xlat
shll
mov
aam
and
push
pop
jbe
jns
scas
sub
aaa
mov
arpl
xchg
adc
call
xchg
and
stos
ss
fidivrs
into
shrl
mov
mov
pop
imul
mov
cmc
jns
int
add
clc
jl
insl
adc
adc
mov
mov
dec
fld
ds
xchg
dec
jp
cs
inc
pop
or
sbb
mov
jg
leave
in
sbbl
js
xchg
sbb
push
cmc
test
xchg
pop
test
scas
cltd
jo
jecxz
fidivrs
cmp
test
loopne
or
dec
arpl
adcb
inc
jge
ret
mov
mov
or
push
sub
sbb
xchg
lret
das
ret
lds
xor
aaa
pop
shrl
fists
repnz
sahf
fisubl
imul
imull
add
rolb
mov
loopne
add
sbb
mov
push
push
push
je
cli
jmp
repz
adc
jb
cld
inc
sbb
scas
rorl
adc
pushf
int
ret
ds
test
pop
outsb
xchg
adc
mul
inc
pop
pop
bound
inc
daa
in
aam
repz
add
fs
into
divl
orb
cs
pop
sbb
push
jl
gs
sti
push
pushf
sub
jg
loopne
sahf
adc
add
mov
or
repnz
xchg
addr16
xchg
mov
ja
andb
push
cmp
aas
mov
inc
push
mov
lret
clc
fimull
stc
stos
mov
pop
jnp
insl
inc
imul
jle
cli
stos
aas
std
push
cld
mov
pusha
cs
into
hlt
sti
mov
xabort
xorl
pop
es
cli
jnp
mov
mov
push
and
lock
dec
xchg
lret
rolb
stos
fsubp
pop
jns
mov
fwait
iret
call
mov
sahf
sahf
cmp
sbb
mov
pop
aaa
jnp
repz
cli
fidivrs
popa
mov
aas
xlat
rcrb
sub
mov
pop
lds
repz
sahf
leave
scas
dec
mov
add
inc
mov
scas
push
shll
sti
mov
pop
enter
bnd
push
arpl
sub
scas
sub
out
cmc
scas
pop
sub
sbb
gs
mov
out
sahf
jns
std
rol
mov
cli
push
sbb
or
adc
outsl
sbb
cmpsl
adc
pushf
pop
aam
jns
and
mov
pop
js
cmpsb
push
pop
fxch
sub
icebp
cmp
enter
sbb
das
cli
stos
scas
fcomp
pop
mov
negb
sbb
in
cmp
fxch
mov
stos
push
add
roll
and
fcmovbe
cmp
ret
mov
scas
mov
mov
sub
sbb
mov
add
fistpll
aaa
jg
xor
fwait
out
fsubp
leave
lock
fists
mov
shlb
leave
xor
add
mov
loop
jo
cltd
inc
arpl
sbb
sub
fstps
repnz
aad
sbb
add
mull
data16
fistps
push
stos
addr16
hlt
rol
jno
out
test
stos
into
icebp
adc
out
cli
add
mov
ret
das
movsb
and
cmpl
out
sbb
in
mov
or
mov
mov
addr16
loopne
pushf
fcmovnu
pop
arpl
repnz
imull
mov
orl
jne
ja
push
mov
cmp
mov
div
test
shrl
and
bnd
mov
sarb
push
pop
subb
mov
inc
out
mov
mov
mov
or
scas
cs
pop
jnp
fistpll
mov
or
lods
ljmp
fidivrl
aaa
cli
aas
out
sub
out
es
xchg
dec
cmp
mov
and
inc
test
mov
hlt
mov
mov
sub
aaa
push
je
mov
push
sub
addb
pop
mov
nop
imul
mov
bound
cli
mull
inc
cmc
icebp
rorb
aam
fadds
mov
jno
xlat
mov
jge
dec
and
movsl
arpl
ljmp
jg
ja
or
add
stos
xor
mov
arpl
pop
push
mov
add
sub
mov
ds
xchg
xchg
jbe
pop
mov
out
rorb
cltd
andb
call
shll
imul
mov
sbb
ja
sti
xor
or
pop
xor
cs
xchg
aas
in
fcoms
rorl
push
les
cmp
outsl
ds
ret
push
orb
lods
cltd
jg
cld
inc
dec
sti
outsl
addr16
and
add
lcall
into
xor
inc
std
push
mov
mov
scas
pop
cmp
xlat
lds
mov
dec
push
es
sub
rcrl
dec
cld
pop
inc
in
sbbb
push
sbb
push
jmp
jge
leave
cmp
pop
xor
cli
das
in
out
cmc
dec
cmpsb
dec
inc
ret
mov
stos
and
cmp
pop
mov
sub
cmpsb
pop
push
or
dec
jbe
dec
xor
jne
movzbl
jne
xchg
lods
lds
stos
fisttpl
fldcw
in
ror
jle
pop
add
mov
and
add
cli
push
mov
push
jp
push
sarb
out
sbb
pop
mov
sbb
lret
loop
stos
out
mov
jns
pop
stos
or
pusha
mov
and
jl
pop
gs
rep
mov
adc
inc
fsubr
push
or
je
or
mov
outsb
nop
outsl
rcrl
cld
in
out
xor
add
addr16
into
out
aas
jecxz
sti
fldt
sub
mov
out
mov
jne
cmp
sbb
pop
and
mov
dec
inc
shlb
sarb
lods
xchg
push
fadd
btc
mov
ljmp
mov
imul
xchg
bound
pop
lods
stos
fsubl
into
fwait
ds
dec
iret
cltd
mov
sbbb
push
fcmove
call
shlb
addl
inc
jecxz
das
sub
push
iret
or
mov
dec
mov
fwait
aaa
dec
inc
fstp
jmp
add
fst
lea
mov
jbe
js
push
je
xchg
cmc
std
je
add
mov
xor
add
add
test
push
mov
ljmp
mov
insl
sbb
mov
fcomi
pusha
sti
sub
push
into
dec
add
jnp
sahf
pop
je
push
lods
aaa
outsl
lret
push
jno
xchg
outsl
cli
adc
fimull
ja
scas
pop
sarb
mov
subb
dec
mov
dec
adc
fwait
and
mov
sub
leave
out
mov
ficomps
fwait
call
lret
pop
dec
movsl
cmp
mov
call
mov
sahf
out
loop
push
mov
negl
stos
popa
xor
stos
pop
mov
pop
fcoml
mov
push
fldl
or
sub
inc
imul
cmpsl
mov
data16
and
fwait
hlt
xor
xor
dec
into
mov
pop
mov
and
sahf
stos
push
mov
xlat
mov
das
outsb
add
stos
ds
fcmovnb
out
fprem1
mov
xor
jg
in
movsb
aad
call
fisttpl
and
movb
sub
mov
test
xchg
and
int
out
into
icebp
sub
imull
cmpb
jmp
mov
out
sti
std
lret
xchg
aas
add
or
xchg
add
mov
sbb
mov
add
mov
push
mov
cmp
mov
sbb
ss
push
mov
leave
hlt
mov
xchg
ljmp
arpl
xchg
out
jo
pop
insl
or
lret
mov
jl
icebp
add
sti
add
pop
and
push
repz
push
sub
movsb
cmp
inc
mov
jnp
in
and
mov
movl
js
das
jnp
sbb
loop
push
jno
push
lods
and
fnstcw
scas
cmp
mov
sbb
xor
repz
xchg
adc
lods
insl
ja
imul
movl
jl
mov
fidivrs
dec
mov
jnp
into
jle
pop
data16
sarb
lahf
xor
xor
sub
jl
lret
lock
loopne
xor
bound
or
jp
xchg
pop
dec
dec
mov
lods
das
push
orb
inc
imul
add
add
or
fildll
ljmp
es
dec
sbb
rcrb
ret
addr16
test
and
cmp
sub
sbb
pop
jl
inc
dec
add
insb
adc
cli
imul
and
sub
es
je
lock
mov
mov
jne
mov
repnz
imul
jnp
dec
or
sub
arpl
mov
xchg
addr16
mov
mov
mov
add
pop
push
xchg
push
or
das
cmpsl
enter
ret
pop
inc
lock
clc
ljmp
fbstp
aas
cmpsl
pop
push
mov
xchg
dec
shlb
jle
lahf
faddl
lahf
test
call
sub
sub
aad
and
popa
inc
popa
jmp
and
add
push
out
shrl
lahf
icebp
repnz
clc
push
jmp
jo
jge
xor
sarb
and
leave
iret
and
adc
xor
mov
xor
and
push
lea
cld
mov
inc
mov
cmp
add
mov
jge
add
add
add
mov
adcl
fisttpl
ss
and
cltd
in
xchg
jg
dec
inc
mov
scas
outsb
mov
pop
push
loopne
adc
iret
sbb
pop
or
mov
mov
jo
push
aaa
cmpsb
add
adc
mov
nop
popf
fcmove
xor
and
scas
xchg
lret
call
add
scas
fcomp
push
aas
sub
je
inc
addl
xor
mov
xlat
or
adc
mov
sbb
xchg
insl
clc
and
mov
ficoml
in
fsubp
xlat
fwait
roll
imul
mov
mov
jg
sbb
mov
inc
mov
pop
fsubrs
mov
mov
or
jno
out
flds
out
stc
scas
neg
jecxz
cmp
out
lods
popw
pop
movsl
jb
cmpsb
iret
xchg
sbb
jbe
sti
adc
outsb
out
mov
aaa
jmp
cmp
pop
sti
dec
loope
out
push
mov
mov
cmp
mov
popl
test
inc
sbb
lods
mov
inc
cmp
std
cli
jge
cmpsb
or
arpl
movsb
scas
mov
stc
lahf
xor
pop
das
andb
fs
cmp
into
icebp
sbb
mov
cmpsb
filds
xchg
je
mov
dec
movsl
ja
mov
pop
sub
mov
stos
ja
mov
dec
pop
dec
outsl
push
mov
out
add
adc
cmp
xchg
in
iret
inc
sub
mov
out
mov
inc
popf
mov
aaa
xchg
xchg
bound
aaa
out
aaa
sbb
mov
add
xchg
aaa
sub
mov
subb
push
cmpl
or
mov
sub
pop
inc
cmpsl
add
inc
aas
data16
das
or
fsubl
popw
fucomi
paddd
into
jge
and
mov
fldenv
xchg
imul
cmpsl
jns
pop
adc
cs
fiadds
leave
jge
adc
cld
fnstcw
inc
pop
pop
push
in
test
cmp
out
pop
test
lea
and
cmp
jg
push
cmp
stos
or
sti
pop
pop
je
testb
mov
rorl
out
test
and
dec
push
sbb
mov
imulb
je
adc
lahf
pop
shlb
mov
aam
push
jecxz
pop
push
in
cmpsb
or
bswap
scas
aas
adc
sbb
push
ficompl
pop
insl
stos
fiadds
jo
fucomp
imul
sbb
test
or
mov
jl
jle
push
lcall
pop
ret
pop
cmpb
out
dec
cmp
or
test
push
mov
pop
outsb
cmpsb
jb
enter
cmp
push
mov
inc
mov
pop
ds
or
jecxz
mov
pop
jmp
imul
cmc
aas
rcrb
popf
mov
dec
ds
xor
inc
das
add
cs
mov
mov
loope
pop
pop
in
fstl
and
daa
outsb
pop
fcmovne
mov
pop
xchg
xchg
pop
outsl
aam
pop
dec
je
popa
pop
sbb
push
in
lods
ss
fwait
test
cs
or
push
and
push
mov
pop
das
lret
push
sbb
rorb
or
stc
or
aad
iret
jg
push
pop
fistpl
add
je
cmp
push
cmp
in
mov
and
into
mov
sbb
ret
xor
adc
sbb
mov
test
jae
cli
popf
mov
xchg
scas
sbb
mov
and
inc
cs
jle
mov
dec
cs
push
loop
mov
cltd
jmp
dec
aas
mov
cmpsb
mov
cmpl
mov
rcr
sbb
into
adc
test
mov
ror
outsl
inc
in
mov
add
or
add
xchg
jge
sbbb
cltd
cli
dec
add
je
fdivrp
lods
mov
sbb
sbb
adc
push
daa
in
sbb
add
push
mov
out
sarb
into
out
in
adc
jmp
shl
inc
sub
push
dec
and
sbb
imul
pop
fwait
mov
jb
fucomi
mov
jg
xor
ret
ret
mov
and
pop
or
mov
pop
pop
je
or
mov
sbb
push
xchg
add
insl
fldt
imul
push
adc
fs
mov
scas
jnp
inc
mov
pop
xabort
out
subl
cmp
cli
jg
mov
pushf
orb
xor
mov
lret
scas
pop
hlt
clc
cmp
addb
mov
mov
inc
cltd
jle
inc
insl
fldl
mov
insw
aaa
mov
jno
pop
mov
pop
imul
imul
xor
popf
outsl
jnp
dec
arpl
daa
cmp
push
xlat
clc
mov
iret
pop
rcr
ja
mov
xor
or
mov
mov
dec
push
cmp
popa
loop
mov
test
cmc
mov
ja
fisttps
inc
dec
xlat
fcmovnu
icebp
sahf
mov
out
mov
lret
cs
stos
fstps
pop
or
fistpll
xchg
leave
jno
cltd
xchg
sbb
lret
out
lahf
mov
in
push
test
adc
pop
je
cs
out
jg
inc
jnp
bound
inc
int
ficomps
lahf
aaa
xchg
mov
inc
fsubrl
mov
push
mov
mov
inc
repz
add
lods
or
ret
inc
and
pop
frstor
mov
scas
xchg
loope
lcall
sub
lcall
stos
xchg
test
imul
fstps
mov
pop
fcomip
mov
mov
push
shl
sub
mov
jle
loope
inc
pop
imul
sarl
adc
or
inc
loopne
sub
imul
sbb
mov
mov
in
xchg
sbb
mov
sarl
mov
ja
or
cmp
adc
das
iret
addr16
fstp
mov
fwait
sub
div
pop
mov
mov
add
aas
mov
repnz
sti
call
call
ret
imul
push
repz
aad
std
adc
imulb
ret
adc
fcmove
call
xchg
push
bnd
add
jp
adc
iret
fldcw
arpl
imul
mov
iret
jo
out
repz
pop
insb
xchg
mov
ds
ficompl
out
ja
repz
in
aad
add
xchg
and
into
pop
sbb
cmp
rorl
xor
xor
jnp
and
add
sbb
mov
or
sub
rcl
int
pop
jmp
test
sub
insb
push
out
mov
test
test
sti
imul
add
iret
leave
ljmp
cmp
jbe
testb
test
inc
inc
pop
rcr
mov
stos
mov
imul
in
inc
repnz
div
rcr
cmp
inc
mov
mov
rolb
xchg
jmp
fstpl
ficoms
sbb
mov
pop
scas
cli
sbb
lret
mov
or
jnp
mov
jne
sub
fucomp
xlat
ret
pop
test
negl
pop
aad
fs
stos
cmc
jge
pop
ja
mov
xchg
int
push
scas
pop
incl
fildll
add
or
xchg
ret
sar
xchg
cmp
fisubs
push
cmpsb
xor
jg
std
or
sub
add
rcl
aad
in
add
jg
xlat
mov
lods
cmp
pop
push
dec
rcrl
lock
adc
or
push
add
cmpsl
mov
cmpsb
push
in
int3
lahf
push
mov
cs
pop
sub
addr16
subl
mov
xchg
xlat
ret
ret
inc
movsl
jmp
mov
js
jno
insl
movsb
repz
in
inc
pop
add
mov
in
iret
popf
sbb
add
pop
mov
mov
or
mov
ret
iret
aam
cs
lret
ss
pop
dec
and
adc
jle
inc
pop
jae
ret
and
repnz
cmp
fisubrl
and
test
cmpsl
dec
add
repz
xchg
and
sbb
pop
dec
cmp
fs
lret
adc
pop
incl
loope
pop
add
bound
mov
cld
icebp
stos
in
stc
dec
fists
dec
sub
sub
mov
fisubs
addr16
mov
scas
mov
rclb
jo
mov
test
mov
lret
shll
mov
or
mov
dec
mov
jne
in
das
cmp
cmp
arpl
lret
mov
fscale
jo
outsl
cwtl
mov
add
xchg
add
pop
add
push
sbb
fisubrs
jb
cmp
fnstcw
insb
ds
lea
pop
std
mov
clc
shrb
mov
dec
mov
loopne
jmp
xor
lahf
mov
xor
dec
push
sti
pop
pop
iret
aas
outsb
jge
push
pop
xchg
sbb
mov
lods
out
sbb
pop
lods
sbb
jg
popf
xor
fs
and
int3
scas
pop
cmp
jo
insb
inc
dec
hlt
mov
outsl
imul
add
lods
ret
cltd
sbb
mov
pop
jmp
or
mov
cmpb
adc
js
int3
push
pop
scas
ffreep
sysenter
sbb
repz
into
jle
pop
adc
test
pop
cld
pop
jo
inc
jae
out
mov
adc
sbb
je
mov
push
fimuls
mov
sub
rolb
fisubrl
mov
repnz
adc
jne
xchg
cltd
fists
stos
mov
cmpsl
stos
mov
lahf
pop
call
jge
and
inc
add
fadd
ret
jmp
test
shlb
add
pop
loopne
add
in
popa
push
iret
in
scas
repz
mov
sar
ficoml
mov
add
pop
push
xor
nop
lahf
dec
arpl
lahf
test
repz
arpl
cmp
outsb
dec
mov
sbb
sub
sti
data16
je
cwtl
xchg
inc
fldcw
push
mov
xor
sbb
jp
push
sub
ret
sbb
push
sub
mov
pop
add
or
stc
or
or
std
jns
insl
add
adc
adc
add
mov
mov
iret
mov
mov
fldt
out
insl
mov
lds
adcb
imul
xor
fldl
das
stc
xorb
imul
xor
push
dec
in
fucomip
pop
add
sub
subb
ret
push
mov
mov
insl
push
loope
lcall
fs
test
sbb
push
pop
in
cmp
cmp
push
rclb
mov
and
mov
or
scas
mov
push
and
xor
in
xor
add
pop
xor
push
adc
sub
dec
xchg
or
insl
and
and
mov
fmuls
mov
in
or
xor
into
xor
fwait
pop
repnz
push
xor
cmp
jbe
imul
push
leave
mov
adc
fiaddl
fisubs
outsl
ljmp
rorl
in
pop
sarb
push
add
int3
xor
pop
pop
sbb
sti
movsl
sbb
out
popa
mov
dec
and
mov
jbe
ficomps
ret
repnz
add
jg
push
mov
mov
out
clc
cs
jle
xor
jg
iret
mov
loopne
shl
out
xor
test
dec
daa
sbb
pop
xchg
mov
xchg
addr16
scas
adc
into
sub
repz
add
cmp
dec
mov
cmp
pushf
sar
in
mov
iret
and
lods
imul
add
fcmovnbe
xchg
out
xchg
fnclex
sbb
mov
sbbb
in
cmp
js
js
sbb
cmc
inc
adc
mov
mov
mov
xchg
mov
jecxz
push
js
or
sub
mov
sarl
daa
cmc
arpl
push
shr
dec
pop
xchg
dec
mov
push
jg
xor
jne
dec
mov
mov
mov
aaa
sti
std
dec
pop
adc
sub
cmp
push
dec
or
aaa
lods
pop
out
lret
lret
xlat
ret
jmp
pop
sti
mov
xor
add
xchg
xlat
mov
idiv
pusha
xor
mov
fcompl
pop
jg
push
ja
ret
aas
loop
dec
jns
sub
sbb
mov
imull
int3
gs
clc
rcrb
adc
cmpsb
push
and
cmp
inc
mov
jnp
pop
leave
out
jge
adc
hlt
clc
inc
test
xor
cmp
out
andl
pop
mov
xor
cmpsb
xchg
call
pop
scas
lock
inc
sarb
adc
inc
leave
in
mov
fiaddl
add
loop
mov
inc
dec
in
cmp
lahf
loope
or
mov
fldenv
sarl
out
jp
cmpsb
mov
adc
add
cmp
sbb
out
call
jmp
add
inc
int
aas
or
xor
or
out
pop
push
imul
mov
ror
sub
loop
sub
sti
es
iret
ret
or
inc
fstl
sahf
loop
xchg
add
pop
adc
adc
pop
aam
pushf
pop
pop
pop
adc
lret
clc
jl
iretw
xor
enter
jno
add
add
repz
push
ret
adc
add
xlat
mov
int
mov
mov
test
or
fdivrl
mov
sub
lret
scas
pop
add
ficomps
mov
pop
call
clc
sub
pop
jge
addr16
loopne
in
sbb
aad
frstor
fisttpl
out
cmp
add
fisubrl
outsb
insb
leave
pop
rorb
sub
addr16
ja
mov
jbe
lret
ds
jp
add
daa
int
pop
xlat
fistpll
rcll
ljmp
lds
jno
lock
into
mov
inc
in
cmpsl
psubb
or
cmp
imul
cs
loop
loopnew
stc
js
std
cld
dec
fadds
lds
sbb
mov
lods
fldl
loopne
mov
call
jecxz
xor
push
repnz
rclb
inc
out
sbb
in
fsts
fdivrs
mov
mov
mov
dec
into
pop
inc
cmp
push
mov
into
loop
incl
sub
testl
adc
add
outsb
push
pop
cs
xchg
in
mov
test
mov
out
mov
inc
fsubrp
cmpsl
iret
cmp
pop
xchg
push
dec
repz
ljmp
xlat
fcomip
adc
xor
push
sarl
jg
aam
mov
xor
jb
or
les
mov
bound
fcmovbe
lret
mov
fidivrl
icebp
adc
sbb
insw
pop
push
or
mov
data16
cmpsl
and
in
fcmovnbe
fsubp
out
mov
nop
push
iret
fcom
mov
addb
aam
push
arpl
loope
sbb
and
sub
sub
jns
pop
imul
insb
mov
ret
imul
popa
roll
dec
push
idivl
and
sbb
mov
xchg
xchg
stos
mov
ds
in
imul
mov
imul
mov
cmpl
outsb
push
lock
xor
mov
mov
fadd
xor
xor
mov
jle
je
aaa
aad
rcll
push
mov
cs
out
aad
pop
adc
push
mov
xor
inc
popf
cmc
loope
ret
lock
loop
cmp
jmp
out
mov
add
std
sub
arpl
cmpl
jge
outsl
push
push
mov
shr
dec
mov
jmp
sbb
shl
dec
jmp
pop
inc
das
xchg
cmpsl
mov
in
cwtl
push
movsl
xchg
pop
repnz
dec
mov
jle
cmpl
gs
idivb
xchg
mov
pop
sub
orb
ret
imul
mov
rcrl
les
cmp
push
aad
xchg
dec
and
clc
lret
or
lahf
jg
jg
stc
pop
testl
mov
and
jae
movsb
int3
scas
fsubp
into
stc
mov
cmp
jmp
cmpsb
adc
fwait
sbb
sahf
idiv
sub
cmp
hlt
enter
popf
cmp
pop
leave
sahf
ds
mov
std
cmpsl
les
push
xchg
fs
cmp
out
pop
out
xchg
stos
sbb
jnp
ret
cmp
popf
int
mov
outsb
lea
xor
lahf
push
out
xchg
and
jle
jl
out
dec
es
stc
pop
lret
sub
and
mov
push
shl
adc
sub
das
mov
out
or
and
xchg
adcb
popa
or
sbb
sti
into
jmp
rcl
and
mov
sbb
out
popa
pop
cmp
aaa
rol
mov
movsb
add
lret
cs
mov
cld
mov
cmp
aad
mov
mov
xchg
jle
cmp
pop
iret
stos
out
mov
js
cmpsl
push
mov
in
imulb
and
das
push
cmc
sti
call
push
mov
mov
pushf
clc
enter
aaa
movsb
jae
jae
call
jb
cmpsl
sti
fists
sbb
and
pop
xor
xor
sub
scas
or
pop
mov
out
mov
pop
shr
iret
subl
jg
mov
mov
stos
dec
mov
mov
xor
sahf
stos
push
fnstcw
imul
in
out
outsl
stc
add
jmp
mov
je
mov
scas
mov
and
xchg
fistpll
pop
mov
xchg
and
pop
shlb
push
adc
jbe
repz
jge
push
lahf
leave
aam
mov
fimull
cmp
lods
and
loope
cltd
faddl
fs
fdivs
mov
add
mov
push
sbb
int3
hlt
adc
fsubrs
addr16
cli
mov
inc
dec
pusha
mov
push
push
loopne
sbb
sub
cmp
pop
mov
jp
andl
or
inc
popf
leave
lret
push
jae
jnp
lods
and
in
add
lock
pushf
into
out
cld
mov
mov
popa
sub
outsb
into
lahf
cs
cmp
sti
and
out
rclb
or
mov
outsl
loopne
mov
jecxz
pop
sti
push
stos
add
sbb
and
pop
cli
inc
cmp
lahf
mov
movsl
mov
dec
add
gs
jecxz
sub
stos
push
loope
dec
mov
push
sub
push
xchg
cmp
mov
fdivrs
stos
pop
push
fisubl
movsl
mov
and
out
xchg
scas
push
pop
push
jl
inc
cli
mov
sub
fldcw
daa
inc
cmpsb
test
add
test
lods
inc
adc
aas
into
inc
sub
lods
inc
testl
jle
push
clc
outsl
aaa
sub
push
jbe
das
pop
sbb
test
push
dec
std
mov
jae
ss
pop
fbstp
cli
out
leave
mov
loopne
dec
sbb
sbb
pop
mov
sbb
pop
lock
iret
sub
loopne
cmp
in
lods
and
and
xchg
mov
out
and
xchg
sbb
out
mov
sub
aaa
mov
mov
inc
mov
jmp
cmovns
cltd
ljmp
shrl
lock
es
ljmp
fisubrs
rcrl
movsl
jge
imul
repz
jnp
mov
pop
in
in
push
addr16
stos
out
add
lds
imul
jge
cltd
mov
idivl
sbb
mov
cmp
adc
imul
stos
inc
cs
or
or
sub
iret
pop
popa
test
cld
pop
mov
ljmp
out
mov
xchg
into
subl
sahf
mov
fcompp
xlat
push
xor
nop
and
popf
and
mov
outsb
mov
daa
mul
leave
out
pop
add
ficoml
jmp
adc
xor
mov
mov
pop
push
push
pop
and
sub
and
shll
jae
stos
adc
aad
repz
cs
pop
cmp
push
jmp
fpatan
pop
fcoml
push
fldt
data16
and
daa
pop
inc
jmp
shll
idivl
xchg
arpl
mov
fsubl
xchg
fsubs
insb
mov
into
pop
es
lods
push
popa
stos
out
out
in
cli
out
out
addr16
andl
flds
push
inc
out
mov
mov
sti
mov
pop
std
clc
xchg
sub
fadds
aas
fucom
jmp
clc
outsl
cmp
ret
paddb
in
fcomip
int
pusha
roll
dec
cmpb
mov
ja
fs
mov
daa
dec
pushf
fistps
jge
fdivr
sbb
sbb
cltd
cs
cmp
mov
js
aad
mov
adc
xorb
mov
cmp
mov
sub
jmp
loop
call
cmp
or
cmp
mov
push
fcmove
js
add
pop
jmp
inc
leave
mov
iret
xor
mov
test
add
push
popa
or
mov
pmullw
iret
xchg
test
neg
fildl
icebp
shr
fsubs
aas
xor
test
aam
dec
scas
adc
lret
push
or
fwait
xor
ss
lods
mov
repz
add
inc
sub
mov
push
lret
cmpsb
mov
cmc
lds
pop
mov
jp
out
fnsave
and
cmp
mov
push
pop
arpl
clc
fldenv
fiaddl
cmpsb
int
and
sub
xchg
fldenv
mov
adc
mov
and
push
add
mov
movlhps
rcll
xchg
lods
inc
in
sti
rclb
cs
push
jecxz
jl
fs
cmp
and
std
sub
cmpb
cmp
or
mov
ljmp
stc
repz
fdiv
mov
pop
fldl2e
into
lret
pushf
push
iret
push
dec
call
adc
es
sbb
sbb
gs
popf
icebp
jo
ljmp
lock
push
jp
push
sbb
jb
cmp
js
iret
xor
jecxz
cs
fnstcw
dec
or
sub
cld
jmp
jecxz
lock
icebp
sbb
shrl
pop
cmp
cmp
xor
push
in
mov
sbb
xor
out
mov
jg
subb
mov
jg
and
adc
cmp
jecxz
in
fcmovu
loopne
sbb
xlat
icebp
cld
iret
xchg
mov
fistpl
cmpsl
xchg
idivl
lea
jecxz
repnz
adc
xchg
xor
mov
jmp
std
adc
mov
insl
dec
or
mov
loope
pop
arpl
mov
mov
mov
leave
jne
push
es
jae
inc
imul
or
es
jmp
fcomps
mov
fiadds
mov
insb
dec
and
jns
icebp
dec
jle
mov
pop
leave
out
adc
mov
sub
jo
cmpsb
sub
and
pop
sub
mov
ja
pushf
mov
or
sbb
push
fsts
out
outsb
pop
cmpsl
dec
adc
lcall
push
jge
cwtl
pop
cmp
jge
repz
shrb
lock
xchg
fcompl
aas
imul
inc
push
inc
clc
inc
xor
inc
or
mov
insb
shl
sahf
mov
push
outsb
jg
out
scas
mov
mov
hlt
sub
push
pop
popa
mov
outsl
fidivrs
scas
fldcw
or
mov
pop
sub
cmp
jg
nop
pop
cmp
fiadds
cmp
sub
or
xchg
enter
clc
lcall
sbb
in
andl
push
cmp
mov
sbb
and
mov
es
movsl
fidivl
and
lret
fisubs
xlat
cs
mov
into
mov
mov
aad
scas
push
test
push
divb
inc
cltd
ret
jmp
sub
jmp
leave
js
mov
jbe
inc
sub
mov
or
xchg
scas
iret
cmc
add
pushf
subl
mov
and
jo
xor
inc
es
adc
lods
iret
pop
inc
sub
fistl
or
push
popf
pop
push
ficoms
test
lcall
mov
pop
jecxz
sub
not
repz
inc
mov
fnstsw
icebp
loopne
xor
mov
jns
xor
pop
stos
lock
ja
test
pop
mov
push
lds
pusha
mov
dec
jne
mov
mov
fdivp
sbb
fnstenv
insl
mov
cwtl
xor
imul
push
loop
in
xlat
sbb
sub
mov
sbb
cmc
ja
insl
jg
mov
sti
fcomip
sbb
lahf
cli
fnstenv
addl
jle
test
adc
push
aad
push
mov
aad
xor
or
xchg
in
inc
xor
test
js
push
lds
into
mov
sahf
jnp
xchg
into
fnstsw
sti
push
xor
repz
stos
out
xchg
imul
push
fildl
shlb
push
imul
in
ljmp
or
cs
js
inc
lcall
pop
int
in
lods
inc
in
push
cmp
out
iret
rcrl
jecxz
and
stc
aas
mov
or
fxch
mov
movsl
xchg
or
decb
push
repnz
push
pop
aad
out
pop
ret
leave
add
das
dec
mov
ret
fdivs
cmc
sub
xchg
ljmp
xchg
push
push
cmp
xchg
pop
mov
sbb
mov
push
xchg
sbb
test
add
hlt
scas
iret
arpl
push
push
xchg
push
pop
add
icebp
jb
inc
repz
fnstenv
mov
fisttpl
outsl
mov
mov
hlt
fisubl
sbb
inc
sbb
mov
jg
mov
iret
push
shrb
ret
icebp
outsb
mov
and
xlat
leave
shlb
aad
les
out
xor
push
mov
dec
xchg
enter
mov
mov
test
in
xlat
add
or
js
jnp
incb
mov
pop
popa
cs
movsb
mov
mov
sub
sbbl
sahf
icebp
cld
lahf
adc
jmp
mov
mov
jnp
stos
sbb
hlt
shrb
push
insb
mov
sahf
mov
adc
adc
mov
in
imul
jl
mov
push
adc
ret
lock
in
xorb
mov
mov
add
repnz
cmp
test
sub
aad
repz
leave
scas
ljmp
push
jge
ret
dec
mov
aaa
movl
in
mov
inc
fsubrp
push
js
outsl
mov
les
sub
cmp
test
jmp
fisttps
push
sub
mov
mov
mov
sbb
inc
or
scas
ss
je
xchg
aaa
repnz
or
inc
cmp
in
xor
dec
cmpsl
or
hlt
sub
dec
mov
popa
ret
pop
in
xor
push
mov
mov
mov
cmpsb
mov
or
jle
cs
les
cs
je
rorl
push
cmp
aad
aaa
cltd
xchg
sub
loope
mov
ret
pop
std
leave
aam
mov
mov
cs
push
testb
fucomp
out
fidivrl
push
push
xchg
mov
and
movl
push
scas
xor
mov
mov
mov
out
push
filds
pop
xor
push
shl
gs
sahf
mov
jge
into
cmp
rorb
stos
pop
insb
nop
pop
dec
jo
push
cwtl
out
outsl
stos
xchg
mov
mov
imulb
push
push
cmp
scas
dec
dec
call
js
into
pop
adc
loope
nop
adc
lock
fistps
lret
inc
xor
push
std
fsub
cld
aaa
lahf
mov
dec
pop
jns
fistps
jg
cmp
in
out
dec
xchg
fistps
adc
fisttps
rclb
rcr
je
scas
or
dec
adc
cmc
jbe
sbb
dec
int3
mov
mov
outsb
subb
push
fiaddl
repnz
iret
into
cmc
frstor
jle
sbb
out
lods
pop
mov
into
push
out
or
dec
addr16
or
sbb
scas
out
cltd
aad
cs
jmp
das
jns
aad
mov
inc
loope
std
test
sub
mov
arpl
mov
hlt
inc
iret
dec
mov
jbe
fdivr
mov
mov
cmp
sar
insl
ss
incb
adc
push
push
mov
sbbb
mov
mov
nop
mov
xchg
out
loopne
jbe
or
iret
mov
fwait
mov
xchg
dec
out
repnz
aaa
fwait
shll
xor
jnp
and
pop
mov
or
dec
mov
jp
pop
cmp
movsb
sub
in
repz
pop
pop
outsb
xchg
out
sub
dec
iret
out
out
mov
ja
mov
pop
mov
in
sarb
mov
pop
mov
fstpl
rorl
and
xor
clc
xchg
and
roll
gs
adc
test
and
xchg
mov
kxnorw
push
popf
and
stc
add
mov
leave
dec
pop
inc
mov
xor
and
or
mov
fldt
ja
jecxz
pop
dec
jns
out
insl
sbb
push
fmuls
jne
mov
mov
add
dec
push
mov
cmp
sbbb
das
rcr
xlat
cmp
mov
hlt
cmp
mov
lahf
xor
shrl
in
add
sub
clc
push
sub
push
xor
adc
or
adc
stos
fistps
or
or
mov
sbb
out
jp
fldenv
sahf
xor
pop
sarb
cld
push
fwait
push
aaa
or
cmpsl
cli
sbb
subl
add
pop
xchg
mov
stos
pop
mov
push
fdivrl
xchg
dec
pop
sub
or
shrl
scas
mov
mov
fildll
push
mul
jg
and
scas
ljmp
push
in
aaa
shll
rol
mov
out
jne
ss
cmpsb
shlb
subl
push
xchg
popa
inc
mov
sahf
in
sti
push
jno
lahf
pop
add
movsb
aaa
popa
outsl
pop
shll
inc
sbb
lret
addr16
into
sbb
push
hlt
and
stos
xor
push
mov
or
fstpt
ds
jg
xor
jne
int3
push
xchg
mov
pushf
repz
mov
or
add
sbb
fisubl
mov
jge
mov
mov
test
sbb
je
inc
dec
or
pop
lds
repz
mov
or
pop
out
cwtl
and
sbb
xchg
shrl
je
cmpsl
sub
jbe
lock
sbb
out
into
adc
push
inc
sub
stos
xor
adc
testl
jmp
data16
dec
shll
push
loopne
or
out
sbb
sub
stos
jecxz
sbb
jge
jns
inc
aad
pop
dec
mov
push
divl
mov
in
xchg
out
push
fistps
std
dec
adc
pop
imul
sub
cmp
adc
das
imul
icebp
sbb
fstl
int
ss
stc
dec
sahf
divl
xchg
or
fiaddl
lret
adc
stc
in
fldcw
outsl
outsb
stos
sbb
xor
sbb
mov
sbb
insb
sub
or
fdivrp
sbb
cmpsl
mov
jnp
or
mov
mov
xchg
jmp
in
or
add
outsb
mov
enter
scas
cs
lods
sbb
sbb
pop
sbb
jp
add
daa
out
mov
fidivs
and
mov
aad
imul
sbb
adc
in
fsts
jp
adc
pop
cmpsl
push
inc
jno
jne
sarb
sbb
sub
dec
out
mov
jp
loop
inc
insb
pop
clc
dec
pop
testl
imul
mov
push
sub
imul
out
mov
ret
rolb
repz
imul
or
jnp
negl
repz
call
fdivl
aam
add
or
jmp
jp
sbb
xchg
ljmp
icebp
inc
rcll
mov
mov
sub
cs
adc
std
movsb
fwait
xchg
mov
fldl
sbb
test
mov
lock
jbe
fstps
and
lahf
outsb
xor
jae
push
arpl
xlat
cli
add
jnp
mov
cmp
mov
mov
out
mov
out
pop
push
mov
test
iret
testl
imul
ret
pop
clc
icebp
mov
dec
dec
or
flds
clc
jp
out
notb
incl
out
xchg
ss
adc
popa
sub
pop
or
aas
popf
sbb
ds
mov
dec
ja
andl
std
dec
lret
daa
dec
fistpll
cmp
fildl
mov
jge
fimuls
cmp
pop
daa
dec
movsl
lods
jbe
xchg
sti
shrl
scas
mov
addr16
into
dec
jmp
or
mov
cmc
scas
outsb
stos
cmc
in
mov
hlt
lods
xor
test
outsb
adc
nop
iret
int
adc
fwait
in
lret
test
lahf
popf
stc
pop
negl
or
ret
push
loope
mov
add
outsl
test
push
cwtl
mov
fstpl
call
stos
inc
in
loop
fcompl
in
loop
jmp
dec
mov
jae
jmp
push
out
fisttps
push
xlat
sbb
push
loop
int3
lahf
jg
cld
pushf
aad
fnsave
aaa
popf
cmp
nop
mov
jmp
mov
test
xchg
fst
lods
inc
jmp
repz
sub
leave
and
or
sbbw
test
ja
jg
int
mov
fldenv
mov
xor
fldt
xlat
int3
sti
fsubrs
xchg
cwtl
sbb
ja
mov
pop
leave
jmp
push
pop
sub
lahf
leave
inc
sti
push
jge
push
and
mov
adc
xchg
shl
sub
mov
inc
out
sarb
mov
iret
repz
sub
and
fs
mov
mov
push
jle
sbb
lods
lahf
adc
mov
fwait
repnz
jno
jp
push
adc
in
fnstsw
or
repz
pop
in
jle
mov
dec
or
shll
pop
test
repnz
and
or
mov
inc
or
mov
push
in
mov
cmc
add
mov
jecxz
in
add
or
pushf
ja
cmc
inc
fidivl
and
rcll
out
mov
add
xchg
cmp
jno
xchg
in
lock
popf
sbb
or
test
call
dec
iret
in
or
int
push
xchg
mov
push
mov
mov
cmc
das
add
outsb
sarl
fnstsw
jge
lret
sbb
dec
mov
push
xor
daa
iret
cwtl
clc
add
lret
mov
or
sub
sahf
lock
scas
test
lahf
or
data16
inc
shll
movsbl
mov
mov
call
test
loope
mov
mov
ficoml
mov
ret
shl
arpl
out
xchg
dec
aam
pop
cld
mov
cmp
call
push
add
or
mov
and
jns
cmp
scas
adc
aas
in
mov
push
lods
test
sub
sbb
idivl
mov
std
jnp
jnp
outsb
imul
cwtl
aam
mov
mov
xchg
in
fsubrs
aaa
insb
pushf
jg
xchg
add
in
loop
sbb
imul
sub
pop
iret
int
scas
pop
jno
psubsw
sub
imul
stos
aas
dec
ja
add
mov
or
mov
in
add
pop
jge
mov
packssdw
xor
push
mov
mov
xchg
mov
fstpl
cmp
inc
mov
pop
stos
mov
mov
jle
push
mov
in
into
inc
jnp
hlt
or
jae
xchg
adc
fnstcw
jl
add
in
lock
into
mov
test
inc
pop
mov
jg
das
mov
cli
lret
cmpsb
aam
mov
mov
adc
inc
mov
pop
pop
insl
or
adc
sub
outsb
sub
lahf
jnp
enter
shrl
mov
xlat
int
mov
shrb
mov
in
push
fstpl
into
insl
adc
sahf
jge
pop
or
test
fldl
adc
jg
leave
rcrb
or
or
icebp
cmp
push
dec
js
adc
sub
xor
mov
adc
xorl
gs
jnp
out
shll
push
addb
popf
imul
push
mov
shl
push
cmp
rcrb
cwtl
jmp
cmc
inc
jecxz
and
inc
push
mov
add
pop
cli
mov
sub
cmp
inc
xlat
xor
mov
scas
mov
or
jo
mov
sub
push
mov
repnz
mov
sub
imul
imul
mov
imul
out
push
push
test
jno
rcrb
test
fidivrl
mov
fadds
xor
or
fisttpl
rcrl
jmp
push
push
stos
add
inc
imul
and
stc
or
dec
cli
mov
sarb
pop
push
bound
push
movsl
xor
aaa
or
ljmp
jecxz
stc
sbb
cs
sahf
pop
cmpsl
sbbb
enter
rcl
sarb
call
scas
mov
enter
sbb
addb
outsl
movsl
xor
scas
adc
sub
hlt
iret
push
outsb
ret
out
ljmp
ret
push
fstps
sbb
pop
iret
stos
dec
sbb
dec
mov
imul
or
mov
push
xchg
mov
mov
pushf
fnstenv
push
fdivrs
push
add
cmpsl
push
jae
push
jnp
pop
imul
jns
testb
repz
cmp
out
adc
jle
adc
sbb
sub
cmp
cmp
push
and
cmp
shlb
and
push
pop
cmpsl
scas
mov
and
xor
inc
cmp
out
pop
adc
stos
cwtl
xchg
in
ss
insl
cmp
int3
imul
imul
fists
pop
and
loopne
ja
dec
mov
push
icebp
ret
sahf
xchg
ret
mov
stc
pop
fisubrl
push
out
scas
inc
data16
adc
inc
dec
adc
scas
cmc
stc
sbb
jmp
dec
lock
or
mov
xchg
out
test
frstor
popf
stos
xlat
mov
out
cmp
mov
cli
mov
aaa
mov
repz
aas
xchg
loop
push
mov
inc
add
add
or
subb
or
xor
fnsetpm(287
rcrb
mov
addr16
out
lcall
add
ret
imul
mov
test
jmp
push
loope
stc
dec
das
out
imul
push
dec
out
mov
push
jb
sti
xor
adc
inc
loopne
push
je
jbe
cs
cli
inc
int
int3
jmp
pop
inc
pop
mov
shrb
sbb
lret
dec
mull
loopne
xchg
pop
rcrb
jns
in
lods
dec
in
mov
xlat
movsb
mov
jge
pop
mov
into
jl
pop
push
int
mov
cs
lods
dec
rcr
scas
pop
jo
popf
pop
mov
pop
sarb
repnz
clc
mov
insb
div
fdivrs
pop
pop
scas
ret
sahf
pop
out
scas
dec
loope
pop
mov
mov
sub
dec
jg
sub
cmc
rcrl
push
xlat
xlat
pop
in
int
sub
cmp
sub
jecxz
sbb
sti
scas
pop
mov
mov
pop
imul
mov
and
fsubrl
push
pop
pushf
div
repz
mov
negl
testb
fidivrl
adc
pop
stos
xchg
cmpsl
in
mov
mov
inc
jae
cmp
push
pop
pop
comiss
aaa
mov
mov
aas
mov
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
pop
mov
pop
mov
arpl
addr16
imul
pop
dec
divb
jne
clc
pop
ss
iret
fdivs
adc
jnp
xor
scas
clc
jg
xor
das
jge
pop
fcomip
xor
pop
icebp
idivb
jge
pop
and
cmp
pop
jae
cmp
pop
loop
cmp
xchg
pop
daa
cmp
in
rorl
gs
or
ljmp
lock
je
stos
in
ja
out
cld
xchg
out
imul
jg
mov
addr16
push
fld
cld
mov
sahf
arpl
ds
aaa
jnp
pop
cld
cmc
adc
ffree
fisubs
cmp
iret
lds
pop
lds
lcall
fidivrl
push
je
loop
sahf
push
push
pop
mov
stos
aad
pop
insl
mov
mov
stos
push
mov
stos
xchg
mov
xlat
cmpsb
mov
mov
mov
jbe
lods
movswl
stos
jecxz
push
out
pop
scas
idivb
out
sahf
notb
mov
push
push
mov
mov
mov
sahf
daa
push
jnp
lods
int
aaa
scas
mov
cmp
inc
mov
pushf
pushf
in
repz
insl
dec
std
fldcw
sub
icebp
mov
stos
jl
in
pop
je
fs
shrb
test
negl
mov
pop
sub
dec
add
inc
push
pop
mov
out
bound
mov
xchg
cli
ljmp
mov
jne
outsb
call
sub
cwtl
mov
adc
imul
jle
add
imul
xor
shl
xchg
mov
pop
inc
mov
in
sarb
inc
sahf
pop
das
mov
add
sub
repnz
pop
in
movsl
out
ja
xchg
dec
mov
repnz
int
fisttpll
push
outsb
xchg
adc
lret
out
push
xor
nop
mov
dec
push
dec
lods
popf
pop
jns
shll
loope
jne
xchg
notb
mov
sbb
xor
add
sub
xor
mov
push
adc
mov
test
pushf
pop
fcoml
mov
sbb
stos
mov
dec
or
dec
xchg
mov
xchg
push
ljmp
dec
enter
imul
lods
adc
out
pop
and
test
push
mov
je
mov
repnz
push
out
ficoml
cwtl
push
adcb
cmp
cwtl
lret
movb
mov
stos
jae
mov
cmp
rcrl
sti
and
out
xchg
stc
add
dec
lret
xor
iret
dec
jle
hlt
lcall
cs
sub
sbb
out
je
out
out
jp
jge
mov
or
pop
or
das
aas
cmpb
shll
frstor
and
jns
rclb
lds
or
cmpsl
cmp
pop
call
push
and
xchg
stos
in
jno
jns
mov
ljmp
xchg
int3
fldcw
mov
lahf
lret
or
rcrl
cltd
dec
mov
mov
or
inc
push
adcb
dec
xchg
push
sbb
inc
xchg
mov
mov
pushf
cmpl
shr
xor
jmp
in
imul
outsl
scas
movsb
sarl
pop
or
outsb
int
jmp
shlb
mov
sarl
sbb
mov
xor
adc
adc
cwtl
sub
sbb
jl
push
jle
test
fsubs
fmull
aas
cs
add
xchg
or
push
outsb
or
add
fsubrl
sbb
mov
jge
and
nop
popa
mov
int3
call
jns
inc
xlat
loop
pop
in
push
pop
fbld
jg
std
dec
icebp
sbb
negl
ljmp
add
test
dec
add
stos
inc
mov
mov
es
lods
pop
clc
mov
aaa
adc
test
sbb
push
fsts
or
pop
in
clc
scas
pop
pop
fcomps
adc
dec
shl
sahf
mov
add
test
push
pop
xchg
rcrb
lahf
jne
xchg
add
mov
ffreep
lahf
jge
cmp
xor
es
dec
fcomps
add
leave
and
mov
adc
int3
dec
fidivs
push
scas
call
sbb
cmc
push
cmp
fldcw
adc
or
insb
sub
mov
dec
jg
aas
xchg
mov
scas
les
inc
sbb
push
inc
jne
inc
pop
mov
dec
scas
xor
mov
out
mov
inc
out
sub
fldt
xor
fisubs
cwtl
cmpsl
sbb
loop
inc
push
lret
xchg
mov
mov
mov
xor
repz
push
sbb
je
mov
ret
adc
sbb
and
cmp
shrd
cmp
adc
mov
dec
jno
push
dec
pop
out
lret
aas
outsl
push
xlat
stos
dec
fists
fnstenv
cli
dec
sti
jg,pn
sbb
repz
sbb
pushf
adc
jmp
mov
pop
or
mov
mov
add
jmp
testl
sub
cmp
pop
into
fstps
push
aad
loopne
stos
dec
subb
pop
hlt
cmp
xchg
pop
adc
cli
push
jo
inc
mov
ja,pt
or
int
cwtl
add
testb
pushf
ljmp
out
dec
fistpl
mov
je
dec
mov
hlt
jmp
std
movsl
aaa
leave
iret
fimull
sar
mov
call
into
dec
orl
pop
cmp
sbb
cltd
sbb
jg
es
out
loopne
adc
inc
imul
das
sub
fildll
scas
cwtl
lods
clc
lds
add
ss
addr16
mov
cmpl
mov
out
hlt
mov
mov
in
adcl
fs
sub
fwait
inc
lahf
cmpl
jg
cmp
ljmp
push
cmpsl
negl
add
imul
mov
loop
imul
adc
dec
frstor
sub
and
fdivrl
movsl
or
pop
sti
cmpsl
sub
cmp
sti
les
add
pop
imul
pushf
push
into
aaa
aaa
bound
push
cmp
jbe
sbb
insb
xchg
sbb
push
xchg
bound
mov
shlb
mov
bound
sub
pop
imul
and
shrl
mov
mov
fcmovnbe
lret
xor
pusha
add
cmp
push
cmp
add
outsl
das
cmp
lcall
dec
rolb
pop
or
rcrl
adc
mov
sbb
xchg
sub
fs
pop
rcll
or
push
popl
addr16
sub
cmpsl
mov
mov
dec
jg
jmp
lea
adc
daa
pop
mov
or
add
ss
shll
push
push
and
push
and
or
jns
jg
sbb
mov
js
por
xor
or
add
loope
or
fiaddl
es
mov
jp
mov
out
inc
pop
lock
xchg
cs
addb
outsb
je
decb
pop
fs
iret
mov
mov
mov
xlat
fistl
subb
push
mov
xchg
iret
lahf
scas
pop
jns
xchg
xcrypt-ofb
cmpsl
outsl
mov
iret
pop
pop
aad
mov
data16
out
sahf
movl
push
aaa
fcmovnbe
cli
mov
jecxz
push
mov
jg
repz
push
out
jecxz
lock
cmpsl
mov
and
mov
fwait
push
xlat
inc
scas
pop
loope
fiaddl
sub
jp
jmp
in
in
mov
mov
sub
cli
sbb
les
add
or
out
loop
push
mov
ret
mov
test
aaa
sti
lods
adc
cli
outsl
fildll
jg,pt
pusha
negl
out
jg
shrl
movb
cmp
rep
fiadds
mov
icebp
sbb
scas
orl
fistps
jo
mov
mov
addb
inc
inc
mov
ds
push
out
dec
xlat
xchg
xor
call
pop
es
arpl
jb
aam
lods
push
roll
out
cmpsw
pop
dec
pop
jb
inc
xor
pop
lock
insb
sbb
jo
mov
fwait
xor
iret
das
jecxz,pt
pusha
adc
add
xchg
jl
leave
out
cmp
ljmp
gs
inc
cs
mov
in
std
jnp
imul
clc
pop
mov
mov
ljmp
iret
mov
subb
sbb
mov
pop
test
dec
lock
add
xor
nop
sub
and
cmp
xchg
adc
notl
pop
repz
xchg
pop
sahf
and
stos
std
call
push
pop
jbe
xchg
or
aas
cmp
jmp
cmp
push
lahf
jl
xrelease
nop
mov
out
lahf
sub
adc
cmp
fcomps
mov
cmc
xchg
push
rcrl
aas
popa
enter
rol
inc
mov
in
mov
shrl
sub
test
xor
lea
mov
ja
mov
aam
cltd
mov
in
pop
jmp
mov
push
cmp
and
pop
fcomps
xorl
xor
loop
sbb
shl
cmp
fld
jbe
mov
je
int3
add
in
mov
mov
fsincos
arpl
and
scas
mov
scas
pop
jae
pop
mov
dec
outsb
add
mul
and
pop
sti
push
jmp
inc
add
outsb
fimull
jp
jno
fstps
rorb
out
or
mov
mov
mov
shlb
sub
push
hlt
test
cmc
rcll
test
mov
or
push
pop
insl
xlat
adc
inc
lcall
fcmovu
pop
clc
jns
inc
mov
repnz
out
ret
lds
popa
cwtl
cltd
add
cwtl
mov
inc
aaa
hlt
xor
cmp
or
imul
popf
negb
ret
sub
push
out
aad
jae
cmpsb
jae
insb
fistps
xor
push
inc
push
aaa
data16
divl
shlb
xlat
dec
sbb
inc
shlb
lret
xor
pushaw
mov
enter
xchg
sub
dec
ret
out
scas
mov
mov
add
icebp
clc
ja
jle
push
lret
pop
das
in
sbb
sub
xchg
in
mov
cmp
lods
jno
repnz
imul
std
mov
out
inc
or
mov
dec
dec
xchg
mov
mov
xchg
xchg
mov
filds
or
or
inc
je
jb
adc
fldl
test
push
ljmp
xor
js
lret
mov
jno
addr16
lods
ss
leave
jae
idivl
shrb
push
nop
scas
in
out
inc
enter
mov
fabs
aas
mov
pop
push
or
stc
cs
das
xlat
flds
ret
nop
stos
adc
jp
push
pushf
push
lret
push
dec
and
cs
push
push
xchg
push
push
pushf
cmpsb
stos
int3
test
fistpll
jle
add
add
imul
clc
aaa
mov
cs
imul
shll
pop
enter
rcrb
mov
insb
or
and
popf
popf
xchg
sbb
les
xlat
lock
int3
por
clc
scas
lahf
mov
or
fbld
in
sbb
sub
dec
mov
and
cs
pop
faddl
jns
scas
push
mov
mov
hlt
pop
std
xchg
int
mov
outsl
push
fcomi
jbe
lret
or
sbb
jb
pushl
add
add
mov
and
push
push
jbe
in
mov
mov
sbb
mov
mov
adc
xchg
mov
test
push
mull
pop
pop
mov
add
jnp
push
cmp
xor
fcom
loop
ret
dec
fisttps
sub
out
mov
test
inc
pop
xlat
sub
mov
inc
cs
xor
scas
js
adc
loop
dec
jl
push
fdivl
fsubrs
nop
adc
inc
dec
mov
subb
mov
or
dec
out
cmp
mov
jg
pop
insl
sbb
pop
jge
xchg
ljmp
data16
ret
or
les
and
lea
mov
pushf
jno
inc
xor
cmp
adc
pop
jmp
call
lret
cltd
imul
xor
out
sub
jne
or
push
out
fildll
cmp
sub
js
jg
fnstcw
stos
push
and
ss
cli
adc
mov
mov
mov
lahf
sti
adc
mov
mov
dec
adcb
pop
iret
mov
cli
rclb
lahf
filds
push
jmp
out
inc
dec
rorl
fildll
loope
lods
jae
mov
push
pop
rcr
xchg
int3
push
jnp
sahf
and
arpl
idivl
fdivs
outsl
mov
pop
out
add
repnz
imul
pop
montmul
cmpsb
xchg
loop
in
or
pop
pushf
or
dec
repz
fnstsw
test
aam
mov
xor
stos
imul
xchg
pop
sbb
out
push
leave
out
lahf
mov
sbb
scas
add
ljmp
xchg
pop
pop
mov
xorb
cmpsl
xchg
sbb
mov
sbb
das
xlat
cli
dec
pop
push
dec
cmpsl
jns
sti
xor
push
scas
mov
pop
mov
xor
lahf
pop
push
pop
lds
mov
sub
sub
jg
mov
xchg
jg
clc
dec
test
mov
sub
outsb
pop
out
das
add
push
aas
fucom
mov
fmuls
mov
push
out
fisttpll
in
mov
stos
aaa
cs
iret
addr16
and
pop
mov
jmp
scas
out
push
out
fnstcw
int
outsl
scas
test
mov
push
cmp
jbe
or
jmp
and
enter
adc
jl
out
fucom
pop
dec
cmpsb
imul
scas
lcall
sub
loopne
std
in
add
or
jmp
mov
jge
clc
xor
dec
pop
call
cld
test
stc
lahf
pop
dec
dec
hlt
mov
imulb
dec
es
mov
gs
push
or
mov
stos
push
inc
or
xor
scas
rcl
in
test
in
sbbl
dec
mov
in
mov
xchg
sti
mov
xchg
ja
inc
fsubrp
push
pop
inc
int
ud1
pop
add
cmp
out
xchg
sub
push
int3
or
imul
fstpt
adc
popa
push
sub
push
imul
mov
test
in
xchg
mov
and
mov
aaa
inc
dec
andl
push
scas
jg
pushf
rcll
dec
mov
in
cmpsl
mov
out
out
dec
xor
jae
fwait
cmc
mov
and
jne
hlt
cmpsb
pop
xchg
mov
dec
lcall
mov
mov
jl
cmpsl
in
sbb
iret
ficomps
ret
cwtl
std
xchg
xlat
fcompl
imul
pushf
push
aaa
insl
imulb
or
adc
nop
pop
mov
adc
jle
into
hlt
xchg
mov
jle
fstpl
js
xchg
adc
xor
lods
ja
ja
test
ljmp
movsl
pop
negl
xor
fwait
fwait
lcall
hlt
mov
mov
jae
dec
sbb
sbb
inc
mov
sbb
in
mov
mov
cmp
inc
or
mov
mov
leave
icebp
pop
daa
lahf
cmp
out
std
push
xchg
adc
rcll
jmp
mov
jg
mov
xor
dec
add
outsl
in
mov
std
jae
mov
imul
enter
push
clc
jns
mov
stos
jmp
out
dec
pop
or
xchg
jge
pusha
cmp
idivb
in
sub
xchg
outsl
mov
orb
cmc
stc
dec
dec
push
ret
mov
sbb
dec
jnp
sbb
add
mov
mov
adc
mov
jbe
shll
mov
out
fs
stos
repnz
aaa
dec
cmpl
lahf
inc
mov
aaa
mov
mov
dec
insb
lods
mov
adc
inc
fld
pop
stc
ficompl
pop
add
dec
jge
cmp
rcr
push
jecxz
fsubrl
cmp
push
out
push
sbb
in
cmc
js
add
outsb
fdivrp
out
push
div
dec
in
push
icebp
mov
mov
push
add
or
mov
aad
cmpsl
sub
jbe
stos
in
lret
test
xchg
fsubs
ljmp
cmp
jecxz
dec
ficompl
jo
mov
mov
in
pop
repnz
push
scas
push
mov
repz
sahf
out
mov
fsts
mov
scas
mov
fs
pop
cli
lea
dec
nop
xchg
push
cmp
lahf
scas
mov
xorb
mov
mov
ja
push
subl
hlt
mov
enter
repz
and
cmpsl
addr16
stc
addr16
ret
jno
aas
mov
mov
mov
ja
repnz
push
sbb
push
mov
jbe
lahf
pop
mov
scas
mov
mov
orl
push
cli
movsl
jo
test
in
mov
fstpt
mov
ja
fstpl
faddl
and
dec
cmpsl
cmp
jge
pop
aaa
push
out
dec
xchg
mov
pop
xchg
or
aas
pop
inc
jnp
cmpsl
into
or
mov
scas
mov
sahf
or
int3
orl
mov
daa
xchg
ja
jle
adc
loopne
call
add
cmpsb
mov
dec
mov
loop
ja
into
pop
ficomps
xchg
loopne
inc
jecxz
in
lock
sti
repnz
mov
or
dec
lods
mov
cli
push
mov
lret
pop
adc
mov
negl
dec
test
fnstcw
lahf
pop
mov
mov
out
movsl
mov
push
imul
outsl
test
jl
push
dec
rcll
xor
sbbb
sbb
mov
jg
test
xchg
jne
cwtl
push
stos
or
lods
mov
iret
mov
stos
pop
scas
in
pop
xor
jmp
dec
inc
lods
xchg
popf
mov
inc
jno
mov
lock
mov
xchg
mov
pop
clc
bound
stos
imul
stos
pop
arpl
fistpl
daa
std
mull
mov
jns
in
xlat
pop
adc
mov
pop
sbb
outsb
sti
jecxz
dec
rcrl
xchg
ds
push
insl
jecxz
in
pop
std
mov
jbe
dec
loop
sti
pop
fisubl
inc
push
retw
cmp
or
inc
xchg
in
mov
in
pop
pop
fnstsw
sbb
pop
add
in
jg
call
fisubrs
dec
test
push
insb
xchg
mov
dec
pop
cmp
mov
jno
jmp
cwtl
adc
push
pop
icebp
es
mov
mov
mov
xchg
or
lods
cld
jecxz
ja
push
mov
shl
int3
testb
ljmp
negl
call
jg
cmp
cs
imul
repnz
rclb
test
or
in
add
sbb
xsaveopt
mov
mov
cmpsb
mov
test
pop
add
rclb
call
sbb
mov
stos
pop
addb
pop
dec
jb
shrl
mov
ret
and
and
fimuls
out
add
lods
jbe
add
iret
and
xor
mov
or
mov
adc
fidivrs
inc
pop
call
decb
push
ss
xchg
push
mov
add
mov
mov
pop
sbb
push
outsb
lds
push
insb
lahf
dec
jmp
push
add
sbb
ret
sub
in
push
out
shrb
adc
mov
lret
stc
out
inc
std
pop
int
sti
insl
adc
xlat
dec
test
pop
push
sbb
sbb
lcall
inc
data16
imul
repnz
lcall
scas
mov
and
adc
jl
hlt
push
ja
pushf
pop
fnsave
movzbl
and
xchg
mov
push
inc
mov
xor
stc
sub
loopne
sar
int
mov
jb
ficomps
adc
mov
push
fsubrl
stos
mov
stc
inc
sub
sub
xchg
ljmp
neg
mov
pop
stos
popf
inc
testb
inc
jae
imull
push
mov
adc
movl
or
cmp
mov
cmovae
repz
add
mov
imul
jne
aas
mov
daa
div
pop
pop
popf
push
pop
gs
stc
mov
pop
sbb
pop
mov
ljmp
jns
mov
out
rsm
jmp
sahf
pop
lds
push
rsm
mov
mov
ljmp
movsb
negl
and
loope
aas
xchg
or
fsubs
dec
xor
leave
shrl
jbe
call
push
sti
fnstenv
pop
icebp
clc
xchg
push
leave
xchg
sahf
out
cli
mov
leave
fistpl
xchg
aad
hlt
movsl
addr16
stos
nop
mov
out
neg
xlat
pusha
stos
pop
push
xchg
jno
imul
imul
fldcw
scas
leave
lods
lret
jb
inc
insl
out
mov
roll
shlb
into
cmpsb
fcmovne
dec
or
xor
cs
cmpsl
movlps
push
mov
js
add
into
mov
push
cwtl
adc
mov
or
sub
jnp
mov
filds
nop
repnz
rep
fucomp
fisttpl
inc
inc
pop
test
insb
stos
insl
inc
ret
cs
pushf
mov
inc
xchg
lahf
test
ret
jmp
and
loopne
loope
pop
jne
fcomip
fcomip
in
fisubrl
jns
imul
insl
addl
xchg
cmc
insb
sbb
fcomp
add
dec
and
incb
lods
push
inc
pop
inc
mov
in
dec
aad
push
aaa
sub
sarl
dec
sbb
inc
pusha
cld
ljmp
sub
mov
decb
fdivrl
leave
mov
lahf
pop
jbe
push
pop
sub
push
jae
mov
push
in
gs
cmpsl
inc
pop
pop
jp
push
sbb
hlt
or
cmp
int
out
aas
mov
repnz
mov
mov
movsl
enter
sahf
int3
and
adc
dec
lods
mov
arpl
sahf
jnp
aaa
cld
push
xchg
jle
lcall
fnstenv
punpcklbw
into
idivl
cmp
outsb
rcrl
test
cmp
pop
sub
fistpl
addr16
out
adc
dec
mov
push
mov
out
lds
jno
ss
or
push
outsb
popa
pop
adc
push
pop
adc
xor
mov
flds
pop
cli
ret
mov
hlt
fildll
dec
in
int3
mov
inc
fldt
and
loope
lea
or
loopne
xchg
jae
mov
out
push
xor
stos
loope
sub
negb
fdivrl
sub
pop
loope
sahf
jns
pusha
iret
mov
fimuls
clc
and
in
fistpll
and
adc
insl
aaa
push
ljmp
outsb
iret
xor
xchg
aaa
adc
jg
add
fisubs
pop
xorl
ror
es
imul
push
int
inc
movsb
out
dec
pop
inc
fsubrl
imul
stos
loope
outsb
fstps
adc
sahf
mov
xor
insb
lock
pop
repz
imul
ja
fabs
in
cmp
xchg
mov
hlt
aas
mov
push
sub
mov
pop
loopne
cs
xchg
mov
and
inc
mov
ss
xchg
jecxz
int3
jg
es
mov
mov
mov
dec
jae
aad
jmp
sahf
xchg
sub
inc
mov
sub
imul
jle
sub
sbb
roll
je
jle
arpl
mov
je
call
jmp
movb
out
ret
repnz
lret
fcmovu
fisubrs
sbb
jne
stos
inc
pusha
xchg
dec
push
sub
fildll
mov
pop
dec
add
out
push
rcr
cmpsb
movsb
sbb
mov
add
loopne
incb
rcl
sbb
outsl
or
movsl
push
int
outsb
aad
mov
imul
dec
sti
in
lods
stos
jg
daa
push
sarl
mov
push
cwtl
or
sbb
rclb
out
notb
mov
add
pop
add
mov
scas
ret
das
fnstsw
adc
cltd
mov
add
pop
lods
add
aaa
cmpsl
cmc
cli
push
scas
imull
mov
sbb
fmuls
pop
mov
jle
xor
aam
lea
jae
push
xor
enter
dec
sub
mov
fs
mov
ja
push
neg
js
jb
jmp
cmp
int3
or
daa
cmp
sub
add
xchg
addr16
pop
notl
mov
xor
sahf
mov
iret
mov
fbld
mov
pop
test
mov
xor
lds
jge
mov
dec
mov
or
out
xchg
out
cmc
hlt
jle
xchg
aaa
dec
jbe
jl
out
pop
outsb
loopne
lahf
mov
and
push
lret
fnstcw
scas
add
or
mov
jo
or
hlt
das
push
push
daa
in
ret
mov
or
sbb
dec
mov
sbb
loop
mov
fdivrl
ss
or
jnp
mov
scas
sbb
inc
leave
sti
ret
lds
cmc
xchg
adc
push
in
idivb
out
stos
or
in
push
dec
aad
sbb
scas
mov
mov
cltd
inc
stc
fdivr
pop
std
mov
jl
sbb
sti
sbb
cmpl
shrb
jo
outsb
pop
jle
fmul
or
int
mov
loope
pop
mull
in
xchg
iret
bound
cmp
xchg
das
bound
ds
pop
out
jae
adc
cmc
cmpsl
pop
inc
cmp
hlt
xchg
add
sahf
mov
cs
imul
xor
stos
lahf
jp
fildll
std
stos
fwait
pop
mov
ljmp
xchg
xchg
jae
ret
mov
xchg
in
fbstp
out
xor
fcompl
add
jle
pop
sbb
push
hlt
add
cld
fdivrp
pop
shll
push
movsl
imul
mov
sbb
sti
pop
adc
ljmp
push
jae
inc
push
push
dec
jmp
mov
inc
xor
outsl
pop
out
fdivr
sbb
lods
adc
lahf
stos
popa
stos
addb
pop
and
mov
lds
arpl
test
sbb
jnp
xor
lods
xchg
fucom
orb
mov
push
ret
xchg
je
test
pop
inc
out
lahf
jnp
jl
mov
cmp
xchg
adc
or
pop
mov
in
adcb
or
loopne
pop
push
aaa
cmpsb
or
shlb
std
inc
inc
into
push
call
js
sbb
xor
xchg
push
scas
inc
add
hlt
cli
push
inc
testb
sti
or
cmp
lods
out
pop
scas
divb
jle
sbb
imul
ja
sub
cmpb
mov
mov
or
sahf
mov
scas
fdivs
inc
push
and
pushf
sub
inc
pop
fsubrs
push
xchg
loop
stos
pop
mov
jns
xchg
out
mov
push
add
aas
adc
leave
cmp
cmp
mov
xor
fiadds
mov
dec
or
fcmovne
rcrl
subl
xchg
in
xchg
push
int
fcmovb
ja
daa
xor
pop
lahf
inc
stos
sbb
fisubl
xchg
dec
idiv
add
sbb
xchg
xorl
push
cmc
roll
lahf
mov
mov
xor
pop
push
jmp
add
xchg
jecxz
and
enter
mov
mov
mov
rclb
fidivl
pop
stos
xlat
jmp
repz
lods
jnp
push
addl
rcll
out
ret
cwtl
xchg
ja
aas
out
ret
or
mov
popl
mov
mov
cld
scas
push
add
inc
adc
sbb
cli
sbb
cmp
pop
divb
mov
imul
mov
sbb
mov
movsl
jbe
mov
and
mov
scas
pop
popf
icebp
dec
dec
test
push
dec
and
jge
loope
nop
xchg
mov
fbstp
jne
add
lcall
fdivs
sti
xchg
in
aad
aam
or
dec
mov
pushf
mov
jne
mov
out
adc
xchg
push
fstl
lock
jmp
bsf
lret
jg
insb
mov
mov
ds
dec
and
jl
inc
int3
das
lahf
cltd
lcall
push
xor
jg
or
mov
mull
add
sbb
arpl
push
cs
dec
pusha
leave
push
xchg
movsb
inc
jp
fincstp
movsl
pop
aas
sbb
shrb
push
jmp
mov
and
das
or
cld
mov
mov
jl
je
mov
pop
testl
jle
adc
aaa
push
roll
xor
fidivrs
xlat
push
sbb
mov
out
loop
mov
mov
push
in
and
lahf
push
out
mov
mulb
sub
xorb
add
out
aaa
fnstenv
imul
add
push
fidivs
movsb
fwait
mov
mov
test
fnsave
hlt
stos
out
mov
fidivrl
das
out
fdivrp
mov
shll
insb
mov
inc
int
setnp
hlt
push
mov
add
sub
insb
or
push
xor
mov
push
in
ret
inc
pop
cmc
adc
out
test
xor
sbb
or
push
add
in
pop
adc
inc
xchg
or
sub
and
lret
inc
sahf
sub
xchg
inc
mov
scas
ret
in
mov
aaa
xchg
jle
jmp
repz
test
jb
sbb
pop
dec
in
rorb
mov
aam
les
aad
jmp
rcrl
in
mov
mov
jae
pop
sahf
andl
cmpsb
dec
or
xchg
mov
jns
push
lds
add
sbbb
xor
push
and
es
xlat
or
xor
mov
test
fnstcw
jge
mov
fbstp
pop
pop
das
cmp
in
es
mov
lret
add
sbb
lods
or
mov
and
stos
or
aad
scas
mov
fstpt
cltd
push
lret
mov
mov
pop
das
adc
dec
push
jae
cmp
fiadds
pushf
cmp
test
jo
aad
push
call
dec
outsb
test
in
dec
lret
gs
mov
ficompl
fistpll
xchg
hlt
mov
jnp
sbb
mov
adc
add
xchg
andb
aam
xchg
sahf
sbb
sub
nop
shll
scas
lahf
sbb
jg
pop
stos
es
push
mov
cmp
xchg
sbb
adc
jecxz
clc
mov
filds
in
es
je
pop
mov
mov
sbb
ds
nop
jl
jle
jl
into
mov
insb
test
fxch
inc
dec
addr16
pop
mov
mov
lds
sbb
fcomps
rcrb
sbb
ds
repz
mov
fiadds
fdivs
std
and
dec
pop
subb
mov
imul
ficoml
mov
imul
unpckhps
loopne
popf
pop
sbb
popf
inc
fsubrp
ficomps
jbe
mov
stos
sti
pop
gs
hlt
push
push
jne
xchg
inc
pop
into
loopne
cmpsl
or
les
jnp
pushf
inc
hlt
incb
sarl
lock
xlat
mov
jle
stos
pop
add
stos
out
lret
aas
push
shll
adc
sbb
pop
dec
pop
dec
or
lock
dec
lret
or
test
inc
cmp
jp
add
ret
inc
aam
dec
mov
mov
rcr
cmpl
aam
leave
ret
bound
movsb
fsts
push
in
mov
xchg
sub
imul
cmpsl
xor
mov
inc
cmp
lods
cmp
pop
xor
mov
xor
jmp
loopne
xchg
popf
fdivrl
mov
orl
xchg
cmp
sub
jp
jb
sbb
or
lret
fiaddl
dec
sub
adc
lret
adc
mov
mov
mov
jmp
mov
and
mov
mov
add
leave
add
pop
jns
sub
dec
stos
lods
std
or
mov
pop
fsubr
imul
arpl
movsl
sub
lea
jecxz
aam
mov
enter
fidivrs
ja
lock
and
fs
cmp
cmp
xlat
lret
push
outsl
xchg
mov
inc
pop
fdivrl
rep
pop
sbb
mov
scas
out
pop
jl
aam
jg
test
into
mov
fcompl
sar
sti
dec
das
std
push
imul
jno
cmp
pop
xor
pushf
sahf
sub
ret
lods
inc
movsb
int3
addl
adc
mov
push
mov
mov
test
push
push
rcll
repnz
arpl
outsl
jmp
mov
cmp
push
xchg
fadds
xor
pop
pop
dec
mov
xor
mov
scas
xchg
movsl
bound
pop
fstps
mov
xchg
stos
aaa
jmp
pop
push
in
mov
pop
in
pushl
outsb
idivl
push
xlat
jnp
mov
aaa
dec
outsl
decb
repz
cmpsl
mov
pop
pop
jg
out
cmp
mov
push
ss
sbb
mov
mov
lods
jp
push
rcr
sbb
cmpsl
pop
sbb
mov
outsb
push
mov
jmp
cwtl
cmpsl
xor
or
xchg
cwtl
add
data16
cmpsl
outsb
outsb
pop
dec
sahf
mov
rcrb
enter
xorl
nop
mov
stc
clc
cwtl
pop
mov
push
sub
push
movsb
xchg
fdivrs
xchg
cwtl
xchg
fnstenv
addr16
cmpsl
leave
testb
leave
mov
je
pop
scas
in
xchg
out
scas
push
cmp
cwtl
xor
daa
dec
fcoms
pop
cmpsl
out
scas
nop
aaa
inc
or
loopne
mov
leave
aad
out
out
out
push
popa
dec
adc
mov
xchg
push
ja
sub
outsl
jg
testb
mov
jb
loop
pop
push
insb
push
int
pop
pop
fsubrl
sbb
in
aam
rcl
mov
outsb
sbb
dec
pop
sub
jb
jnp
jge
push
fcmovbe
pop
hlt
pop
ljmp
pop
xchg
pmaxsw
faddl
loop
adc
mov
stos
xor
arpl
test
adc
repnz
jmp
pop
cmc
in
out
or
fists
or
int
sarb
xchg
sar
pop
cmp
ljmp
and
jge
lcall
mov
out
cwtl
leave
fsincos
loopne
leave
jae
imul
repz
int3
add
pop
in
and
lcall
mov
add
rcl
out
neg
jecxz
rorb
adc
lea
int
in
fildll
sub
sar
or
adc
orb
scas
jg
ljmp
sbb
in
lret
adc
inc
dec
dec
roll
ja
ret
shlb
lret
sti
pop
xor
outsb
push
sbb
ljmp
pusha
sub
arpl
push
pop
xchg
sbb
xchg
stc
pop
or
mov
out
adc
cs
repz
ret
imul
arpl
dec
push
mov
ja
pop
mov
mov
and
aas
dec
push
ljmp
sub
fdiv
push
push
out
cmpsl
xchg
lock
mov
xchg
outsl
push
pop
dec
cmc
pop
aad
inc
clc
pop
das
lret
pop
pop
mov
dec
cli
lock
adcb
test
mov
leave
outsl
into
jl
gs
jb
pop
sub
mov
sbb
fmulp
test
jmp
shll
dec
ljmp
in
mov
movl
pop
jmp
in
push
lea
fdivp
pop
mov
test
pop
hlt
inc
xor
cmpsb
xor
aas
xor
das
adc
mov
inc
aad
iret
push
fistps
push
imul
sbb
rcll
popf
dec
or
inc
add
aam
iret
arpl
sbb
in
cli
call
dec
fisttpll
xlat
mov
int3
out
sarl
mov
test
js
aad
icebp
fmull
repz
sti
jle,pn
adc
dec
add
dec
xchg
insl
sbb
and
pop
cmp
mov
dec
cs
in
adc
fwait
divl
dec
movsb
or
pop
dec
adc
lods
mov
fnstsw
and
push
add
cs
add
xchg
push
loopne
sub
jae
adc
sarl
xor
and
sbb
cld
cltd
mov
and
shl
or
addr16
in
into
push
xor
pushf
shlb
mov
inc
cmp
push
les
xlat
outsb
xlat
out
mov
cmpsl
lret
add
repz
push
lods
cmpsl
shr
xor
adc
repz
test
mov
push
das
jmp
mov
call
pop
scas
daa
add
xchg
stos
push
adc
arpl
stos
insb
mov
lock
jns
ficomps
sbb
fisttpl
hlt
movsl
cmp
dec
mov
mov
or
clc
das
add
mov
inc
mov
test
aam
push
jecxz
sub
lods
fs
lock
jae
xchg
in
inc
pop
out
scas
es
push
scas
push
mov
hlt
cmp
push
jbe
lret
push
popa
in
mov
adc
jnp
push
sbb
insl
mov
sub
inc
jmp
xor
add
mov
stos
fstpt
int3
or
faddl
jg,pn
jmp
xchg
xlat
xor
shl
int
xlat
fcmovne
sub
or
cli
inc
inc
xchg
xor
xchg
fwait
idivb
jmp
fists
les
test
int
repz
out
inc
push
lret
mov
out
xchg
aaa
ss
cmpb
out
xchg
movsl
adc
dec
push
imul
in
jg
mov
incb
sahf
lret
imul
or
pop
pop
jns
cld
out
jnp
mov
or
add
imul
mov
pop
fdiv
lods
out
fwait
outsl
mov
inc
mov
lret
aaa
data16
outsb
dec
int3
cli
pop
pop
lret
pop
pop
jge
sub
cmp
test
adc
pop
fistl
iret
fnstenv
repz
scas
lahf
mov
pop
mov
mov
mov
fildll
pop
clc
and
popa
sahf
add
sahf
inc
je
mov
adc
cmp
fbstp
xchg
xchg
pushf
cwtl
mov
jae
call
sub
lret
dec
or
and
dec
loop
fninit
and
jnp
fcmovnbe
hlt
es
jae
into
fs
push
cmc
cmp
jbe
dec
shll
xorb
mov
outsb
push
int3
leave
push
dec
test
fadd
sub
push
push
xor
lock
xchg
pop
push
mov
fsubr
sbb
inc
imul
mov
push
xor
mov
cs
mov
xchg
notb
mov
mov
push
mov
imul
jg
fstl
hlt
dec
repz
rcr
mov
jmp
hlt
cmc
mov
ret
addr16
jnp
pop
aam
ds
negl
fsubrl
mov
imul
aas
sub
fadd
and
fiadds
loopne
fidivs
fistpl
cmpsb
fwait
aam
sbb
cs
nop
fidivrl
mov
mov
inc
ds
lahf
fistps
test
ret
adc
mov
pushf
cwtl
jne
fistps
xor
mov
not
cli
lahf
pop
std
pop
push
lret
sub
imul
inc
cs
add
dec
inc
xorb
adc
mov
daa
jne
repz
or
mov
mov
mov
pop
pop
nop
rcll
sbb
pop
cs
std
lahf
push
xor
xor
aas
or
ljmp
jp
push
call
adc
out
sbb
cmp
or
into
out
int
mov
repz
xchg
jo
mov
insb
pop
xchg
out
mov
imul
repz
out
outsl
outsl
in
xchg
mov
sbb
fcmovnbe
outsb
xchg
aam
mov
and
int
leave
ret
mov
leave
scas
mov
ret
pop
loopne
pop
or
aam
xchg
xchg
dec
pop
ret
pop
and
subb
and
stos
movsb
push
pop
test
jle
fmul
hlt
jg
xor
jbe
push
outsl
aad
das
jne
jmp
fwait
sbb
lods
repz
into
cmc
pop
stc
fcoms
mov
xor
sti
or
jge
popf
or
mov
loop
dec
sub
mov
scas
and
out
aam
arpl
shll
mov
in
sub
repz
stos
pop
push
cmp
inc
mov
mov
scas
enter
fdiv
adc
sbb
ds
sbbl
pop
pop
mulb
mov
lahf
movsl
mov
or
sbb
imul
inc
mov
lret
add
cmp
into
cld
ljmp
imul
aas
cmpsb
fbstp
push
sti
subl
inc
fstps
js
dec
pop
hlt
jg
mov
add
daa
xchg
orb
push
push
hlt
xchg
clc
and
outsb
clc
or
and
push
hlt
mov
push
pop
icebp
jl
sub
sti
fldcw
movsb
cmp
or
iret
fists
lret
dec
ss
lcall
lds
testl
insb
pop
mov
push
out
adc
ss
or
int3
sahf
mov
xlat
mov
mov
fldl
lea
or
cmc
cmp
popf
mov
ret
daa
repnz
push
pop
cwtl
outsb
mov
cmp
add
push
test
ja
out
mov
stos
jle
cmpsb
adc
cmpsl
cli
ds
xor
mov
sub
repz
inc
cli
negl
iret
dec
shll
cmp
adc
push
add
scas
rcrb
pop
pop
stos
cmp
outsl
arpl
subb
xor
js
aaa
mov
cs
jmp
in
ja
mov
sub
bound
mov
fstps
xchg
ret
mov
int
adcl
sbb
sbbl
je
lcall
sub
or
fldenv
aas
jae
fisubl
pop
aas
pop
inc
cmp
cmp
pop
icebp
inc
fcoms
cmc
or
movsb
inc
add
xor
pop
mov
ds
push
jne
push
cmc
jbe
push
pop
mov
subl
faddl
fpatan
inc
fs
rcrb
cli
into
mov
pop
inc
mov
loopne
or
aad
popf
adc
jns
into
mov
jecxz
dec
mov
jnp
scas
push
sub
fbstp
mov
addr16
dec
dec
jnp
jbe
add
dec
inc
stos
out
or
cmpsb
mov
xchg
in
pop
jg
inc
popf
pop
pop
jg
sub
out
sbb
jb
xchg
in
pop
aaa
or
cmp
lcall
mov
dec
jnp
divl
mov
jmp
arpl
pushf
adc
test
ret
inc
adc
arpl
mov
loopne
movsb
daa
sbb
decb
dec
roll
ja
enter
and
sbb
ret
loop
icebp
inc
push
jmp
fldt
xlat
out
fdivs
movsl
aad
xchg
cmp
inc
test
xor
subl
sub
loopne
push
mov
dec
gs
xchg
clc
mov
sbb
icebp
dec
aaa
mov
pop
fimuls
pop
jge
sti
pop
test
das
adc
jnp
pop
lock
gs
aaa
ret
ja
repnz
rcl
sbb
mov
mov
or
fisttpll
das
push
adc
sbb
jl
push
pop
aas
lds
hlt
jb
ret
in
ja
push
cwtl
orb
scas
and
fincstp
sti
sbb
mov
call
arpl
lds
pop
or
jg
push
inc
les
movsl
cmp
test
aaa
push
fs
mov
pop
pop
outsb
das
cli
into
adc
mov
add
cmp
mov
dec
and
jl
inc
out
push
mov
out
mov
mov
adc
js
mov
jnp
pop
rcll
sbb
rorl
adc
push
mov
bswap
xor
lret
mov
fsubrs
cltd
and
push
xor
addr16
pop
cmp
pop
andb
cmp
arpl
pop
jl
pop
or
or
add
shlb
inc
inc
ljmp
fstps
call
push
cmc
add
cld
inc
cmp
mov
xchg
cld
inc
push
add
fnstcw
stos
dec
adc
xor
or
int
cs
mov
test
test
addr16
rolb
outsl
out
add
stc
jnp
psllq
and
repnz
adc
push
stos
dec
pop
mov
mov
and
jbe
inc
sub
jbe
lods
and
cltd
decb
or
lcall
into
fdivp
out
lret
fld
out
push
sbb
jnp
ja
outsb
inc
fisubs
aaa
out
fstps
fldcw
cmc
or
sbb
pop
dec
ljmp
loope
add
aad
dec
int3
add
ret
dec
leave
imul
mov
add
aaa
dec
xchg
mov
mov
add
inc
sub
in
nop
or
sub
mov
add
ja
mov
aad
mov
ds
neg
repz
aaa
repnz
aaa
xorb
jg
in
inc
mov
and
xlat
inc
fmull
aaa
ja
fidivrl
les
out
bnd
lods
aaa
negb
cli
movsl
lea
lods
sub
out
inc
popf
sbb
jmp
mov
jnp
out
out
fwait
mov
fldt
stos
cmpsb
pop
pop
bnd
popf
pushf
fcoms
movsb
sbb
icebp
cld
and
fchs
sub
lea
ja
lods
mov
ror
xlat
dec
dec
mov
cltd
pop
fbstp
enter
mov
sub
into
add
and
mov
jnp
scas
sub
mov
out
add
dec
nop
sbbb
sbb
sbb
cwtl
test
aas
pop
repz
pop
dec
mov
or
mov
data16
imul
repz
jmp
jecxz
adc
add
add
hlt
xor
call
jle
jo
repz
jnp
scas
fimull
popl
das
push
outsb
add
aaa
inc
popf
icebp
scas
or
xchg
iret
shl
sub
fdivl
or
sbb
out
pop
mull
mov
mov
jg
mov
mov
loope
in
or
aad
add
out
add
xchg
mov
and
imul
pop
sbb
cmp
cmc
scas
pop
das
and
cs
sbb
in
test
cmp
ret
push
ror
jno
or
and
shlb
cmpsb
ss
ja
das
add
ret
leave
or
mov
add
ljmp
sbb
cs
lds
jne
mov
rclb
shll
sub
unpckhps
mov
inc
leave
mov
ret
int
xchg
pop
fnstcw
gs
dec
mov
push
xchg
sub
and
scas
xorb
mov
sbb
jl
mov
jmp
scas
rcll
xor
sub
fimuls
aas
add
and
adc
into
iret
mov
in
xchg
movsl
mov
mov
aaa
jmp
mov
int
sahf
xchg
push
mov
addb
cmpb
or
adc
xchg
add
into
aad
and
mov
das
mov
in
jl
add
dec
pop
lret
cmpl
in
pop
mulb
mov
sub
push
push
jp
pop
into
jb
fnsave
shll
dec
sub
into
cltd
lock
enter
in
cwtl
fs
sbb
aad
cmpsl
pop
mov
fwait
js
push
imul
push
xchg
into
push
inc
shll
fistps
in
fmull
sarl
fidivs
outsb
jno
jecxz
adc
icebp
jmp
iret
push
call
push
sub
mov
insb
fwait
out
test
mov
and
enter
out
mov
mov
fisubl
push
into
push
clc
dec
imul
repnz
scas
inc
mov
xor
aam
ja
lds
pop
dec
fdivs
arpl
jl
pop
imul
hlt
pop
adc
sub
xchg
mov
adc
mov
fisubrs
pop
shlb
cwtl
nop
lret
scas
sbb
mov
test
sub
fidivrs
dec
clc
daa
dec
notrack
sub
pop
dec
das
xor
sti
mov
push
adc
in
inc
inc
ja
dec
movsb
pop
int3
mov
jnp
xor
sub
lock
mov
dec
inc
ja
out
lock
or
aaa
cs
ds
jns
jb
pop
int3
insb
mov
iret
push
cmp
pop
into
out
cmp
cmpsb
sub
xchg
sbb
icebp
cwtl
outsb
popl
xor
xor
pop
sub
arpl
sbb
cs
test
out
mov
or
mov
cltd
jbe
sbb
in
jae
mov
mov
in
mov
xlat
iret
les
dec
aam
aam
xor
leave
mov
sti
mov
out
call
dec
mov
jbe
sbb
imul
addr16
mov
mov
mov
add
pushf
sub
fmull
cmpsl
mov
pop
pop
mov
ja
sub
xchg
mov
xchg
mov
mov
mov
mov
in
aam
or
xchg
cwtl
ss
mov
mov
popf
mov
mov
xor
push
pop
call
jo
add
rol
enter
dec
xor
pop
mov
notl
or
in
inc
adc
fdivrl
test
sub
call
je
dec
pop
clc
sahf
mov
mov
pop
xchg
lds
fldcw
mov
add
imul
xchg
out
cmc
adc
in
cmp
mov
ror
cltd
data16
gs
in
roll
push
mov
mov
push
sub
int
sarl
lret
leave
sbb
mov
mov
movb
cmp
ds
xchg
cmp
out
cmp
push
loopne
mov
jle
pop
sti
in
stc
pop
sub
cltd
lcall
aad
jo
in
sub
loope
repnz
clc
mov
add
movb
arpl
or
pop
mov
adc
push
test
out
mov
pop
clc
pop
lea
mov
mov
ss
fs
xor
testl
shll
lcall
daa
inc
int
pop
push
aam
ja
xor
xchg
jge
cmpb
loope
fcmovu
mov
aam
mov
shr
jg
sbb
ja
xor
cmc
push
pop
mov
push
idivb
xor
jnp
cli
cmp
pop
mov
push
pop
push
inc
xlat
and
repz
mov
pop
fstl
mov
sti
into
cmp
pop
push
popl
scas
ss
incb
sub
data16
push
push
ret
mov
stos
jo
inc
imul
movsl
inc
test
cmpb
sbb
jne
xlat
sbb
adc
arpl
outsb
xchg
dec
xchg
inc
cmc
push
es
mov
add
sbb
pop
push
ja
sbb
ror
add
mov
dec
out
mull
push
jp
mov
mov
sbb
xchg
dec
cwtl
mov
imul
aad
jl
out
mov
mov
and
mov
shll
cld
pusha
inc
cmpsl
adc
push
out
divl
cmp
mov
cmp
or
stos
leave
mov
jmp
add
sti
cld
clc
icebp
mov
lret
int
fs
push
insl
cmp
out
cmp
in
daa
enter
sbb
sub
ljmp
push
rorl
out
popa
test
dec
mov
sbb
mov
adc
push
ds
clc
lret
icebp
pop
adcb
add
sbb
push
bound
loope
mov
cs
push
cmpsb
cmp
fdiv
fstps
or
test
pop
fldenv
scas
sbb
jmp
out
divl
loope
add
inc
jg
xor
adc
stos
mov
stos
mov
add
pop
mov
mov
outsl
cmp
lret
push
push
jo
jbe
adc
lret
rcrb
mov
add
pop
cmp
mov
pop
jns
or
cmp
fnstsw
dec
loop
hlt
pop
dec
dec
fldcw
sti
sbb
imul
sub
lahf
mov
pop
jg
fwait
xlat
and
and
aam
mov
add
out
pop
mov
xlat
sti
add
addr16
mov
imul
sbb
sbb
bound
jecxz
push
fwait
or
in
push
fwait
notb
dec
sub
repz
push
jmp
jno
xchg
mov
xchg
movsl
push
mov
dec
mov
inc
mov
ljmp
cld
popa
cs
notl
ret
cmp
repnz
shrb
lahf
xchg
fisttpll
std
cmp
cs
xlat
mov
xor
mov
nop
lds
pop
xchg
inc
jmp
arpl
and
imul
cmpsb
adc
mov
in
push
jae
movb
aam
sub
rcrb
xor
cmpsb
out
dec
pop
fbstp
dec
fldcw
push
pop
imul
xchg
sub
lock
add
test
or
sbb
cmpsl
pop
inc
cltd
pop
add
addr16
add
lock
mov
leave
scas
jecxz
outsb
dec
pop
rorb
push
mov
fsubrp
add
sub
jge
lahf
in
fidivs
rcrl
jle
sub
or
mov
out
xsaveopt
aad
push
hlt
roll
cmp
xchg
movsl
jmp
xchg
add
gs
imul
or
repz
xchg
sbb
out
jo
int3
pop
mov
stc
cmpb
push
je
xchg
out
orb
fdivl
ret
ror
gs
repnz
adcb
push
gs
cmpl
lahf
or
clc
mov
in
push
sub
xor
bound
lods
xchg
test
adc
pop
decl
push
insl
sbb
pop
mov
clc
push
add
cmpl
in
jns
loopne
mov
inc
int3
jo
mov
loop
sub
cmp
hlt
and
push
lea
add
scas
dec
lds
movsb
xchg
mov
and
jno
imul
movsb
test
dec
cmp
sti
mov
and
outsb
mov
mov
fcompl
add
ret
rorb
jge
stos
test
fmull
pop
out
mov
pushf
mov
gs
cmp
or
pop
out
adcb
xor
add
repnz
std
adc
ss
ret
mov
lock
jl
outsb
adcl
adc
das
iret
jl
dec
jo
lahf
imul
dec
mov
jmp
cmpsb
inc
arpl
dec
and
xchg
mov
sbb
test
push
shll
test
push
xchg
pop
xorl
sbb
mov
sbb
inc
jno
inc
mov
mov
cmp
push
outsb
mov
ja
lret
test
cld
aaa
mov
mov
sbb
lahf
fistps
adc
push
mov
mov
xchg
or
mov
sub
cmp
adc
inc
arpl
ja
xor
pop
add
imul
sbb
into
out
lea
stc
pop
cmpsb
std
mov
mov
ret
xor
push
jmp
addr16
sti
rorb
lock
mov
jne
xchg
inc
inc
pop
mov
imul
cs
mov
or
lahf
fidivs
testb
add
xchg
fildl
lea
mov
xor
and
outsb
enter
xchg
sub
idiv
mov
add
inc
add
aad
clc
push
subb
mov
insl
jae
mov
cmp
ror
mov
mov
mov
cmp
cmc
jp
add
and
jnp
or
outsl
mov
mov
push
faddl
cs
sub
fildl
and
mov
jne
or
cwtl
jb
mov
cmp
push
lahf
lock
das
xor
xor
sub
je
dec
mov
ja
sub
xor
xchg
pushf
cmpsl
fiadds
add
adc
lock
ret
xor
lret
cmc
push
lods
stos
mov
and
lret
stc
mov
adc
cmc
in
nop
pushf
clc
sarl
pop
notb
insl
push
pop
push
pop
repz
pushf
fsts
mov
jne
mov
int3
push
dec
push
test
cld
mov
insl
sbb
daa
xchg
dec
pushf
jg
gs
mov
bound
fnstcw
mov
cli
outsb
out
sbb
out
pop
xchg
cmp
add
mov
sub
aas
mov
xor
sti
clc
pop
mull
jmp
fisubs
ret
pop
xchg
and
daa
outsl
outsl
add
in
sub
sti
mov
clc
mov
lea
and
mov
cmpsl
sbb
and
imul
fstps
imul
adc
cwtl
jmp
xchg
cmpsb
jp
push
cli
pop
sub
adc
in
adc
addr16
adcb
dec
mov
sub
xor
inc
or
cmp
mov
adc
les
repz
decb
lock
lret
loope
out
push
or
pop
movsl
fidivrl
xor
stos
xor
out
cs
stos
cmp
out
pop
jge
sbb
mov
popf
mov
adc
xchg
mov
rclb
testb
ljmp
pop
test
imul
sti
out
pop
sbb
pop
jne
lods
mov
mov
loop
scas
test
mov
pop
cmp
mov
mov
dec
jge
sbb
ror
imull
rcrb
rcr
mov
sarl
add
not
insl
mov
cs
jmp
adc
add
mov
or
roll
out
mov
mov
dec
stos
jne
scas
adcb
sbb
cmp
xorb
test
jnp
hlt
and
mov
jbe
cmp
push
mov
lcall
test
arpl
sti
int
xchg
jmp
sbbl
aad
in
mov
jnp
xor
stos
pop
sbb
dec
dec
fcmovnu
sub
enter
xchg
fcoms
rol
add
cmpsl
or
rcrb
scas
mov
xor
pushf
sbb
mov
push
mov
jl
mov
jo
inc
xlat
out
pop
adc
jmp
mov
ret
jmp
pop
cmp
mov
scas
ret
mov
or
mov
cmpsb
fildl
mov
lret
cmc
dec
pop
pop
iret
mov
pop
cmp
js
aaa
leave
adcl
dec
popa
insb
lret
ja
pushf
and
push
jge
ret
jl
dec
mov
cmp
pushf
stc
stc
outsl
mov
aas
pop
int3
test
pop
sub
cmp
jle
js
cwtl
xor
mov
xor
pop
movsl
scas
mov
das
test
insb
mov
cmp
or
fcmovnu
adc
mov
int
faddl
pop
jp
add
adc
push
sbb
mov
push
or
mov
push
mov
lret
sub
jae
les
cwtl
stos
cmp
popf
test
jne
xchg
xchg
push
add
leave
scas
pop
enter
pop
mov
mov
fbld
push
hlt
inc
sbb
jmp
test
iret
leave
sub
popf
and
push
out
mov
repz
push
sub
aaa
stos
gs
test
repnz
push
faddl
sub
sub
xor
or
aaa
pop
mov
mov
xor
adc
add
movsb
xchg
ltr
clc
sbb
icebp
je
adc
rcl
lahf
pop
xor
cmc
pop
or
dec
jno
in
cs
pop
pushf
add
addr16
call
dec
sub
push
push
mov
popa
aas
pop
add
mov
lahf
sub
lods
sbbl
push
shlb
aas
mov
adc
jne
jp
call
inc
lahf
test
imul
int3
imul
xor
sbb
dec
lods
xor
pop
scas
popa
or
pop
test
in
pop
pop
lahf
jb
xchg
mov
xchg
bound
arpl
mov
adc
loope
into
adc
rcl
lahf
cmpsb
mov
jbe
ss
out
mov
cmp
push
sar
dec
insb
xchg
sbb
test
push
imull
shll
mov
lea
in
or
flds
cmpsl
sbbb
xchg
aas
pop
pop
mov
xchg
repz
sbb
arpl
jnp
pop
push
sarb
or
loopne
jae
repz
in
push
cli
jbe
dec
xchg
mov
cmp
int
lods
inc
testb
push
out
aaa
xchg
or
adc
jle
std
inc
push
jg
jl
jnp
fildll
int3
je
ljmp
cmp
mov
pop
rorl
mov
cs
pop
cmp
push
je
ljmp
shll
or
subb
rolb
in
int3
cmp
sti
mov
xchg
dec
outsb
mov
out
iret
inc
lahf
lock
push
add
mov
mov
cld
jle
sbb
cli
or
imul
push
cmp
lock
enter
jbe
dec
cmp
adc
shlb
jno
shr
repz
out
out
adc
out
jmp
int
mov
cmp
mov
and
fcmovnu
and
xlat
fisubrs
in
rcr
sub
iret
fidivs
in
lret
fidivs
pop
and
inc
jl
in
add
movb
leave
arpl
fcomip
jecxz
aam
gs
lret
jne
mov
test
fbld
push
repz
xchg
push
repnz
sarl
imul
fstl
dec
ja
pop
out
sbb
add
lahf
push
mov
stos
fsub
mov
rorb
mov
cmp
push
leave
ret
loop
mov
cwtl
mov
inc
sbb
stc
les
stos
jg
push
jns
mov
fimuls
adc
cmc
lods
adc
pop
lret
jns
push
push
hlt
cmpsl
and
cmp
decl
mov
mov
clc
cltd
mov
insb
push
rep
jmp
ljmp
xor
jo
mov
xchg
cld
push
insb
shll
jle
jmp
mov
xchg
jbe
pop
das
sbb
std
das
xchg
pop
imul
filds
push
adc
test
lret
sbb
inc
jne
pop
scas
stc
inc
xor
mov
sbb
fdivr
inc
repz
fisttpll
out
mov
jmp
fiadds
out
push
scas
icebp
sbb
add
stc
sbb
adc
xor
push
jmp
sti
out
in
hlt
faddp
lds
outsb
adc
cmp
loopne
jae
pop
or
jo
pop
in
mov
fxch
in
inc
stc
mov
sub
test
push
xchg
lahf
movb
mov
shlb
scas
in
iret
sub
inc
std
scas
push
add
sbb
negl
pusha
jmp
negl
dec
xchg
mov
jge
negb
out
and
cmp
cld
and
mov
jae
pop
pop
mov
mov
mov
scas
cmpsl
lods
inc
xchg
hlt
add
idivb
sub
push
adc
mov
mov
mov
jb
jle
jo
xchg
mov
pop
fldcw
imul
lahf
push
mov
mov
xor
ds
push
xlat
call
jge
add
shlb
aam
xlat
shll
div
mov
pop
pop
cmpb
xchg
aam
imul
fdivp
fdivrl
push
inc
in
xchg
orl
outsl
dec
scas
test
lods
fisttpll
in
mov
or
add
add
outsb
lcall
std
rcr
popl
pop
xchg
js
ljmp
pushf
sbb
inc
xor
ret
xchg
jecxz
pop
push
mov
fists
xchg
sti
pop
pop
jmp
mov
out
movl
out
sbb
aam
mov
out
sub
add
ret
push
jp
pop
stc
inc
inc
dec
lods
sbb
pop
mov
cs
cmpsl
xchg
dec
mov
inc
or
rcll
sbb
ret
ljmp
mov
push
adc
sbb
ss
repz
sbb
mov
push
mov
cld
das
sarl
stos
jl
repz
push
sbb
call
mov
ja
cmpsb
add
rorb
loopne
scas
dec
fsub
inc
adc
sbb
leave
movsl
mov
jbe
add
cmp
insl
in
jnp
jns
adc
test
xchg
jp
in
lock
mov
cmp
jb
xchg
imul
int
aas
pop
mov
push
mov
dec
pop
dec
andb
imulb
lods
mov
mov
mov
cmp
adc
sub
push
aas
rorl
insb
stos
mov
pop
or
dec
pop
jne
jb
cs
cwtl
mov
out
test
sub
idivb
imul
pusha
lock
mov
push
leave
dec
adc
mov
xchg
pop
cmp
filds
sbb
add
mov
int
mov
dec
idivb
lret
clc
sbb
in
inc
and
fistps
jecxz
xchg
loope
jecxz
inc
xchg
xchg
scas
mov
jbe
xorl
loope
sub
pop
scas
push
adc
xor
repz
sti
in
pop
lock
stc
push
dec
pop
out
add
scas
sarb
cmp
loopne
push
bnd
popf
and
adc
or
adcb
jne
jp
jge
sbb
scas
frstor
test
dec
gs
leave
or
sub
lods
popf
mov
fs
outsb
scas
sbb
repz
pop
aad
push
jg
mov
imul
adc
push
mov
insb
lret
js
in
dec
test
iret
movsl
add
imul
loopne
insl
insb
sti
dec
imul
stos
sub
push
arpl
pop
dec
call
aas
int
es
data16
int3
mov
lock
push
in
xlat
clc
jl
mov
iret
xlat
sbb
mov
cmp
in
faddp
mov
in
cmc
nop
or
add
push
aas
test
call
testl
fisubl
scas
sti
clc
fstpt
or
or
jne
and
enter
neg
cmpsb
cmc
outsb
ljmp
and
iret
aas
add
unpcklps
test
cld
push
shlb
pop
pop
dec
sub
fcmovnbe
scas
fnsave
mov
xor
arpl
adc
xor
es
mov
rcll
rorl
cmp
jbe
or
aam
dec
out
dec
mov
or
dec
cmp
xchg
les
fists
sbb
mov
ja
int3
and
fmul
ficompl
mov
jne
aad
inc
adc
or
jmp
stos
hlt
ficoms
repz
pushf
fcomi
clc
pusha
fildl
hlt
inc
sbb
sbb
stos
xchg
or
lahf
and
ljmp
sbb
mov
repz
add
sbb
js
ljmp
adc
dec
fistps
scas
sbb
adc
cli
js
inc
fdivrs
stos
in
jbe
mov
and
mov
adc
filds
cmc
mov
cmpsb
movsl
cltd
mov
cmp
neg
mov
or
adc
sub
out
andl
cmp
scas
fstps
push
imul
ljmp
adc
cmc
out
adc
repnz
ljmp
aas
jo
and
in
or
lods
hlt
mov
push
into
and
push
dec
mov
imul
xchg
jae
lret
popf
std
repz
mov
cmp
pop
xlat
adc
mov
popf
jle
inc
add
test
push
jns
and
inc
cwtl
or
xchg
push
sbb
push
rcr
popa
or
jle
sub
rcr
jo
mov
out
outsl
sti
int
jl
mov
xchg
sub
arpl
xchg
shll
out
fs
cmpsb
out
xchg
and
pop
insl
jge
leave
fcmovu
sbb
shll
mov
inc
inc
outsl
lret
pop
cmpsb
punpcklbw
add
cs
adcb
xchg
mov
and
mov
popf
cmp
push
pop
push
bound
mov
pop
dec
cmp
dec
push
mov
aaa
inc
aam
int
dec
or
mov
xchg
lea
pop
sbb
hlt
insl
mov
and
repnz
mov
scas
cmp
sbb
jns
cmp
or
hlt
mov
lea
cmp
imul
mov
inc
or
push
insb
cmc
dec
test
xchg
and
mov
cli
add
iret
jnp
clc
inc
push
arpl
inc
jne
dec
out
add
jl
in
cmpsb
inc
scas
add
lcall
mov
jmp
ret
fisubrl
out
mov
mov
cmpsl
adc
or
repz
outsb
gs
sarl
cmp
sahf
xchg
cwtl
mov
cli
jo
into
mov
fstpt
sbb
and
repnz
leave
in
xor
or
inc
movsl
insl
mov
out
test
sbb
add
or
aad
and
subl
popa
cmpsb
repz
cmpl
mov
pop
loope
or
mov
jae
imul
repz
loop
leave
push
sbb
push
psubsw
lods
outsb
insl
adc
add
push
ret
cli
pop
sbbb
add
stc
pusha
lahf
addr16
push
psadbw
add
out
mov
daa
jmp
in
loopne
repz
jbe
nop
repz
pop
insb
xchg
adc
mov
cmp
jne
jnp
jl
sub
arpl
imul
mov
sbb
pop
lods
mov
rcrb
clc
xor
push
shlb
divb
ljmp
pop
movsl
mov
testb
sub
fistpll
repz
mov
inc
insl
stos
stos
inc
pop
lods
fildll
jp
imul
and
scas
inc
in
mov
pop
sahf
pusha
cmp
out
mov
stc
pop
xchg
popa
aam
sbb
sub
jle
inc
pop
mov
outsl
or
fisttpll
ljmp
sbb
jae
sub
pop
je
testb
fistpll
ret
xor
outsb
pop
popf
mov
iret
imul
pop
inc
sbb
lods
sbb
mov
in
mov
pop
outsl
sti
adc
sbb
sbb
adc
imul
icebp
cmc
rorl
or
sbb
in
mov
jnp
jnp
sahf
ret
pop
outsl
sub
lret
mov
sahf
push
into
mov
lahf
leave
lret
pop
dec
ljmp
jne
lcall
inc
repnz
dec
aas
maskmovq
adc
das
lret
and
out
adc
insl
mov
sbbb
add
dec
mov
jle
iret
mov
scas
xchg
adc
mov
xlat
mov
and
mov
iret
insb
or
push
sub
aaa
sub
dec
les
add
and
fs
adc
dec
pop
into
sbb
mov
sub
sbb
stos
mov
xchg
cwtl
jle
mov
hlt
dec
jge
pushf
mov
pop
mov
ljmp
push
sub
cmp
sahf
ja
stc
jne
repnz
test
mov
outsl
cs
jnp
jae
sub
stos
add
jmp
out
dec
pop
cltd
mov
imul
addr16
push
out
ficomps
pop
mov
repnz
imul
aas
push
push
leave
mov
or
lods
and
xchg
jg
push
adc
fiadds
add
inc
fiadds
cmp
and
rorb
push
cs
mov
bound
loopne
js
inc
mov
vfmsubadd213pd
mov
dec
lahf
mov
imul
ret
in
mov
hlt
nop
dec
mov
popa
lcall
lock
addr16
jle
pop
lret
fnsave
dec
xchg
mov
popa
leave
pop
ret
push
sbb
in
mov
lods
jle
test
dec
or
add
sbb
xchg
dec
and
sbb
mov
mov
pop
fs
repz
adc
sahf
cmp
push
adc
xchg
stos
and
jno
imul
aam
insb
scas
mov
ror
xor
jmp
shll
mov
xor
jbe
xchg
dec
mov
cmp
pusha
push
filds
push
sub
add
ffree
inc
mov
dec
lcall
outsl
into
jle
sarb
inc
sub
or
sub
rolb
iret
popa
cs
or
ja
sti
adc
cltd
sub
and
mov
fs
cmp
jb
fwait
jl
int3
fwait
mov
mov
fstpl
add
xchg
push
pop
pop
fnsave
int
js
push
stos
fcmovu
add
push
push
decb
inc
mov
fdivp
and
out
push
mov
push
arpl
adc
and
adc
pop
ret
aad
xchg
sbb
xor
cmp
roll
mov
int
sbb
mov
mov
lods
mov
cmp
in
jnp
mov
leave
mov
arpl
xchg
cmp
rcll
lods
push
aad
cmp
mov
lcall
outsb
repz
fnstcw
sbb
stos
imul
pop
repz
mov
not
mov
and
pusha
and
mov
pop
in
es
addr16
movsl
arpl
inc
add
jnp
in
popl
pop
cmp
shlb
push
mov
aas
sub
xchg
push
scas
pop
mov
push
mov
movsb
mov
dec
mov
hlt
mov
dec
mov
lods
lds
div
ficomps
scas
mov
xor
clc
or
ja
inc
push
out
push
test
out
repz
ret
loope
push
add
or
jp
jecxz
pop
outsb
clc
ror
lahf
out
mov
shlw
out
adc
jnp
dec
xor
icebp
loopne
jle
pop
xor
jecxz
jnp
mov
cmpsl
xchg
pusha
popa
inc
mov
dec
rorl
into
mov
jae
mov
add
cmc
mov
or
sbb
mov
cwtl
jecxz
xchg
and
imul
jbe
jmp
jbe
les
add
mov
pop
js
push
jmp
imul
insl
scas
out
push
push
mov
out
and
inc
jae
aas
push
fcmovnu
pop
loop
sti
push
jmp
mov
add
mov
pop
mov
fcomip
and
cmpsb
cmp
and
daa
xchg
or
add
adc
inc
shlb
or
repnz
divb
notl
jno
js
daa
dec
pop
fidivl
xor
mov
cmp
pop
maskmovq
divl
mov
sub
lahf
fistpl
repnz
jmp
imul
and
sub
push
scas
cmc
stc
sub
pushf
mov
jmp
lds
decb
sbb
push
clc
mov
addr16
int3
pop
inc
fldcw
and
in
out
mov
in
pop
adc
out
lahf
rcl
rorb
enter
repz
pop
jne
stos
add
in
mov
jno
adc
lahf
pop
fldl
push
ja
and
mov
pop
in
shll
mov
mov
cmp
pop
leave
popl
repnz
insl
es
jb
jp
ljmp
test
das
adc
adc
and
imull
fwait
movq
mov
lret
lret
pop
xor
pop
sahf
adc
xchg
minps
jnp
push
and
out
jl
pop
rcll
icebp
push
push
fistl
fbld
push
je
outsb
fcoms
cmpsl
jp
mov
cmp
cmc
pop
hlt
imul
pop
insl
sub
es
ja
fistpl
int3
adc
and
fidivs
jo
push
cwtl
fsubrl
je
lcall
cmpsb
cmp
push
in
push
or
fucom
out
cmpsl
aas
jo
jmp
loopne
cs
ret
xchg
stos
jle
xchg
push
mov
fbstp
scas
out
cmp
inc
jbe
shlb
ret
nop
sbb
xchg
mov
add
flds
push
popl
pop
pinsrw
mov
ljmp
push
rolb
sub
sbb
imul
shr
test
aaa
in
aad
imul
cmp
xchg
cmpsb
lods
inc
fbstp
lret
pop
sub
insl
or
insb
fmulp
loope
jne
inc
orb
cmpl
add
sub
adc
mov
add
inc
sbb
adc
jo,pt
dec
jnp
cmp
mov
std
fstps
and
jno
xor
mov
mov
aam
mov
icebp
sbb
call
jl
sbb
add
pop
aas
mov
xchg
imul
add
popf
data16
rclb
cmpb
shl
pop
sbb
mov
mov
sbb
adc
cmc
jmp
ror
hlt
sub
xorl
push
das
cmpsb
sub
add
ficomps
dec
mov
xorl
dec
test
pop
insb
mov
inc
das
xchg
or
push
int
jno
and
xchg
arpl
dec
xchg
iret
dec
sbbl
adc
mov
popa
push
fwait
add
ljmp
les
jne
vphaddubw
outsl
lea
inc
xchg
sub
lock
or
mov
iret
repnz
mov
ret
xlat
sbb
sti
loope
daa
jae
mov
sti
jmp
out
sub
jmp
mov
fwait
push
mov
mov
rcl
sub
pop
cli
and
dec
pop
mov
and
hlt
mov
mov
inc
jne
scas
xor
loope
in
xchg
sbb
adc
cmc
pushf
inc
and
xor
pop
adcl
mov
jg
pop
push
and
mov
or
aad
std
je
loopne
aaa
sub
adc
imul
cltd
test
outsl
movsl
mov
xlat
shll
inc
mov
pop
enter
xor
push
xor
sbb
hlt
mov
not
in
ficoml
pop
scas
inc
push
jge
xor
jle
iret
pop
adc
cmp
cmpsb
scas
shr
mov
jg
sahf
cmpsl
pushf
mov
xor
cs
inc
pop
mov
push
mov
dec
mov
fldcw
pop
xor
out
or
lret
outsl
pop
pop
rcll
mulb
dec
mov
push
sub
sub
jecxz
mov
int3
in
push
fisubl
imul
or
push
fcomps
pop
add
pop
out
fstps
mov
mov
add
mull
xchg
xchg
xlat
adc
push
sahf
mov
fists
xchg
outsb
push
mov
dec
adc
pop
jnp
adc
mov
arpl
sub
cmc
iret
out
shlb
push
iret
push
xchg
mov
into
inc
inc
mov
dec
movsb
jnp
xchg
adc
jne
call
push
inc
add
fistpl
out
sub
pop
xchg
sub
das
fiadds
das
xchg
fimuls
out
push
dec
mov
fs
scas
fisubrl
ja
ljmp
loopne
xor
xor
in
mov
aad
mov
in
xchg
pop
pop
rorl
mov
mov
std
lcall
mov
int
sub
stos
ljmp
inc
leave
push
adc
pop
and
ret
or
fcoms
push
in
loope
lods
pop
dec
roll
shll
push
mov
data16
mov
mov
fldcw
dec
xor
pop
inc
out
out
and
clc
push
iret
fidivrs
mov
mov
dec
push
fbld
sub
pop
push
mov
fs
dec
mov
ja
push
adc
cmp
imul
imul
add
pop
jno
inc
pop
jno
add
stos
mov
popa
pop
sbb
in
xchg
mov
dec
pop
in
push
loopne
push
pop
pop
jg
jae
lret
adc
enter
outsb
shrb
in
in
pop
xor
dec
decl
push
iret
ljmp
pusha
and
sub
icebp
maxps
cmp
clc
pop
jns
cmp
ja
fcmove
and
lods
sbb
stc
cmp
xor
pop
fwait
jg
cmpsl
pop
add
adc
sti
mov
fnsave
cmc
movsl
int
dec
fidivrs
fists
cmpsl
mov
rol
out
jae
ja
lea
out
lcall
std
sbb
aas
push
sub
leave
mov
cmpsl
dec
jo
scas
mov
xchg
inc
dec
pushf
jg
out
jne
jne
fldz
xlat
hlt
shll
out
out
inc
add
mov
test
cmp
mov
pop
sti
leave
or
mov
rol
inc
cmp
and
mov
cmp
nop
push
fisubrs
flds
jg
pop
out
push
sub
mov
leave
or
cs
insl
insl
ljmp
leave
push
ret
and
add
push
hlt
mov
mov
xor
jbe
pop
cmpsl
or
call
aaa
push
out
xchg
mov
aad
mov
add
iret
sub
add
lods
push
cmpsl
gs
icebp
enter
in
daa
add
in
test
jnp
sahf
stc
dec
pop
pop
lret
mov
dec
cmp
lods
roll
popa
hlt
or
push
xchg
mov
xchg
inc
and
or
adc
jnp
ds
mov
jae
in
lds
add
jae
push
arpl
add
jp
icebp
sbb
dec
scas
mov
jno
rcrb
adc
sub
dec
testl
icebp
in
cs
push
push
sub
xor
cmp
ja
sub
mov
fld
inc
xchg
imul
in
jne
xchg
mov
lret
cli
aad
lods
pop
out
xchg
shr
stos
cltd
ficoml
dec
adc
fimuls
gs
lods
imul
in
pusha
in
fnstcw
xchg
out
or
push
scas
jg
pop
xor
cmp
mov
es
xor
mov
sbb
call
imul
cmp
imul
popa
sub
cs
fiaddl
xor
push
mov
dec
fdivrp
sub
push
sub
mov
xchg
pop
leave
ja
fisubrs
or
jge
ret
pop
pop
mov
cli
and
cmpsb
dec
aaa
xor
scas
leave
loop
fld
jae
ja
int
shl
scas
in
adc
dec
mov
loop
adc
idivb
addr16
subl
jp
add
fildll
sub
jnp
arpl
jbe
jbe
push
mov
xchg
dec
mov
jbe
leave
adc
mov
ret
xor
sar
lret
push
insl
mov
sbb
daa
roll
or
xchg
ljmp
fisubrl
movsb
stc
outsl
outsl
in
adc
or
stos
das
cld
adc
xor
fs
sbb
rclb
jg
sbb
movsl
insl
cmc
movsl
stos
jle
jmp
pop
xor
rcl
mov
rcrl
loope
sub
ficompl
push
daa
stos
mov
cs
mov
pop
lahf
xchg
cmc
cmp
or
je
pop
jg
jns
dec
mov
out
mov
or
cmpsb
pop
adc
lret
pusha
mov
iret
cs
xor
and
mov
mov
jb
cltd
dec
jo
rorw
cmc
in
xchg
mov
mov
fistpll
xor
jl
xchg
jnp
jge
arpl
adc
cmpsl
cmp
cmpb
jns
loop
sub
push
hlt
inc
pushf
inc
inc
into
mov
push
enter
lea
clc
mov
dec
ret
dec
ret
sub
push
shl
sti
std
mov
aam
adc
imul
add
imull
or
jmp
test
std
ja
inc
loop
in
xor
xchg
cmpsb
adc
repnz
push
cmc
mov
pop
daa
ret
sbbb
das
push
in
push
ret
fistpl
adc
mov
dec
cmp
push
cmpsb
sarl
sub
dec
pop
addr16
mov
mov
add
jl
jno
jne
or
js
xchg
add
fistl
push
mov
mov
outsl
outsl
adc
xchg
cwtl
jmp
lods
adc
push
out
pushf
sbbl
aas
es
roll
ss
outsl
lds
jns
sahf
fcompl
addl
jno
push
bound
aas
jns
repnz
fdivp
ret
xchg
hlt
fnstenv
inc
pop
movsl
mov
repnz
jg
arpl
dec
outsb
xlat
in
test
cmpsb
mov
push
or
dec
pop
test
jno
test
les
fidivrs
sub
adc
idivb
ret
jbe
je
mov
inc
scas
mov
or
cmp
sti
inc
std
mov
sub
dec
scas
sub
cltd
lahf
mov
out
jecxz
fdivs
lret
fptan
movq
xlat
pop
movsb
pop
jno
call
lahf
mov
mov
push
je
rclb
adc
test
ljmp
vpsubq
fsubp
flds
inc
sahf
mov
stos
pop
inc
fisubrs
jnp
lods
xor
sarb
cmp
mov
dec
mov
je
dec
mov
enter
sub
sbb
out
fimull
push
movaps
pop
lcall
fcmovbe
stos
aam
mov
into
mov
cltd
out
imulb
orb
cmpsl
jle
pop
push
fistpll
ljmp
fcmovnbe
fstpt
mov
mov
jbe
dec
jp
pop
out
scas
sbb
fcmovnb
mov
stos
adc
rorb
inc
push
shll
ds
pop
scas
pop
adc
add
scas
aad
sub
xchg
out
cmp
add
fimull
sbb
jne
pop
cli
cltd
dec
adcl
outsb
mov
jbe
push
xchg
jnp
out
out
lret
fwait
sahf
jo
sbb
mov
push
aaa
mov
dec
test
inc
xor
mov
insb
popl
push
jns
call
or
mov
jecxz
mov
cmpsl
cmp
popf
pop
adc
jg
mov
into
fldl2e
fsubrp
dec
mov
jmp
mov
jne
iret
cmp
repz
imul
xchg
shll
adc
jp
push
movsl
sub
sbb
outsl
mov
jg
push
nop
in
jno
jne
lahf
mov
push
in
and
out
insl
incb
pop
sbb
nop
pop
adc
out
mov
out
ret
ss
leave
sbb
push
in
add
enter
pop
sbb
movsb
push
mov
mov
scas
je
xchg
int3
imul
pusha
jle
das
mov
fs
cwtl
div
add
jecxz
xor
scas
es
idivl
mov
cmp
add
repz
jbe
pop
adc
aas
scas
fildll
mov
pop
clc
sarb
mov
test
fistpl
sbb
xor
in
jbe
ljmp
sti
les
cltd
fistpll
push
aaa
adc
lret
iret
outsl
loop
imul
push
push
cmpsw
pop
and
or
lcall
int3
mull
sahf
insl
sbb
adc
iret
aas
gs
mov
mov
sbb
call
mov
popa
sub
or
rcl
mov
push
inc
hlt
mov
lret
loopne
pop
and
ljmp
cltd
imul
mov
fstpt
xchg
iret
jl
popl
outsl
out
fldt
shlb
cli
push
mov
jne
mov
data16
pusha
jns
mov
push
xchg
int
jns
repnz
das
mov
cs
push
dec
leave
iret
icebp
pop
push
scas
shl
out
xor
cvtps2pd
mov
inc
pusha
xchg
popf
mov
test
sub
fnstsw
sub
addl
lahf
das
fnstcw
push
or
jae
in
shrl
pop
ret
sbb
fisubrl
insb
sbb
popl
lods
fucomip
inc
in
mov
jmp
pop
or
mov
js
stos
outsb
test
fldt
pop
cmpb
sub
mov
adc
cmp
gs
pop
ffreep
ja
jl
pop
mov
mov
sahf
aaa
sub
add
or
sub
ds
iret
push
jg
icebp
insl
out
cld
inc
mov
sti
sti
mov
dec
jmp
aas
pop
adc
aaa
lock
mov
clc
cmpl
lods
je
mov
jns
cmpsb
movsb
icebp
iret
fisttpll
mov
adc
fmul
or
add
inc
scas
cltd
insb
aad
mov
ss
sbb
cmp
or
push
addr16
xchg
jae
pusha
fldt
adc
stc
fidivs
push
mov
sub
xchg
jg
scas
or
outsb
sub
sbb
jbe
dec
jecxz,pn
rol
shrl
sub
sbb
sub
mov
movl
in
mov
jmp
mov
cmp
pop
mov
jmp
leave
pop
fstps
test
orl
leave
jmp
xor
cmpsb
aaa
into
mov
pop
gs
sub
push
pop
jl
mov
push
shlb
push
xchg
rcl
enter
mov
jl
push
into
shll
ror
cld
pushf
pop
fs
mov
fldenv
cs
ljmp
xor
adc
and
and
fs
push
call
jne
pop
insl
sub
shl
mov
jg
or
adc
jne
icebp
das
lret
sub
mov
jmp
dec
mov
push
add
mov
jb
sbb
xchg
push
sub
lea
enter
adc
pusha
sub
dec
mov
jae
outsb
negl
insb
dec
es
xor
jmp
lret
cmp
dec
xchg
mov
mov
fdivr
push
repnz
cmp
push
es
ljmp
call
lret
ss
cmp
xchg
inc
hlt
insl
cmp
mov
dec
inc
push
js
add
sbb
sbb
mov
fs
adc
jl
mov
dec
pop
out
pop
mov
cld
leave
pop
pop
rorl
mov
push
ret
adc
cs
frstor
aaa
mov
mov
in
push
loope
jbe
pop
addr16
jne
xchg
sti
out
out
stos
push
dec
fwait
call
orb
outsl
sbb
push
loopne
mov
cmpsl
push
cmp
jne
ja
cs
aaa
mov
ja
mov
mov
movl
ds
faddl
mov
xor
stos
mov
mov
imul
cmp
addb
mov
adc
or
dec
sub
mov
arpl
shll
pop
lock
mov
sbbb
jns
xchg
loop
add
mov
xor
jg
fisubs
push
testb
sub
sti
pop
into
xchg
xchg
jbe
das
sbb
add
mov
cld
sub
das
mov
and
cmpsl
in
ss
inc
jo
mov
mov
cs
pop
jl
stos
ret
aas
mov
ret
data16
pop
xchg
leave
fcoms
xchg
fwait
add
cmpb
out
clc
mov
dec
sbb
fcom
and
pop
idivb
mov
out
mov
pop
sbb
jae
add
xchg
negl
mov
jg
dec
xor
loopne
lahf
add
pop
aam
cltd
rep
xor
pop
mov
mov
sbb
bound
cs
les
leave
push
push
mov
imul
bound
fsubl
mov
es
mov
and
repz
lock
and
fstl
cmp
mov
arpl
and
out
movsb
loope
fsubrs
inc
push
xchg
push
jo
jl
divb
xor
leave
push
jle
lea
lret
mov
inc
inc
lret
pop
jle
mov
ret
out
jg
jbe
pop
adc
scas
cmpsb
push
mov
in
xchg
pushl
cld
pop
push
enter
sarb
loopne
into
mov
pop
xor
mov
fdiv
scas
sbb
xchg
inc
outsb
sarl
pop
or
xor
mov
outsb
add
addr16
jp
repz
xchg
scas
mov
pop
jno
testb
notb
pop
pop
pop
sahf
pop
push
mov
mov
cltd
in
cmp
pusha
cli
ret
ljmp
cld
dec
add
loop
jmp
aas
mov
push
add
jmp
and
hlt
sbb
jno
dec
scas
ret
sbb
fnsave
lahf
inc
arpl
jmp
mov
push
icebp
out
add
mov
xchg
mov
mov
dec
mov
out
push
cmc
add
cld
jmp
cmp
outsb
stos
popa
lds
mov
dec
int
mov
add
mov
jmp
xchg
push
std
mov
repnz
fcmovnu
pop
pop
mov
inc
xchg
imulb
sbb
pop
xor
push
les
sub
mov
mov
cld
into
lahf
pop
iret
fwait
pop
arpl
push
fsubrl
jmp
cmpb
mov
xor
push
cmpsb
jo
repz
mov
jge
sub
shlb
mov
jnp
pop
dec
mov
mov
mov
xor
ja
loop
sarb
mov
sub
lahf
js
mov
aad
leave
rcrb
push
std
ret
cmp
pop
imul
or
mov
adc
pop
jns
mov
mov
cmp
xchg
movsl
imul
out
stc
dec
mov
test
dec
das
gs
out
sti
pop
dec
loopne
push
inc
xchg
imulb
minps
mov
mov
jmp
xlat
lods
mov
cltd
sbb
adc
mov
stos
inc
sahf
fndisi(8087
mov
and
dec
jnp
push
loopne
aas
push
clc
repz
cwtl
rol
out
test
or
inc
sbb
inc
shll
push
dec
and
outsb
xlat
inc
jl
hlt
inc
or
repnz
aad
mull
add
xchg
jg
xchg
jb
in
mov
lods
data16
imull
repz
pusha
sub
movsl
cmp
add
out
or
sbb
sbb
lods
sub
repz
fiaddl
push
rcrb
jg
and
add
out
loopne
sarb
out
pop
push
push
jg
and
push
add
stos
out
jle
sub
sahf
jge
push
arpl
dec
push
iret
fwait
iret
push
rcrb
lea
sbb
mov
push
add
adc
ret
hlt
or
shl
sub
push
scas
mov
aas
lods
lods
fstpt
and
rcll
or
std
stos
and
movsl
mov
adc
int
mov
add
xchg
subl
dec
mov
mov
mov
loope
mov
ret
push
add
fisttpll
shrb
pop
repz
imul
imul
out
fsubr
adcb
push
jnp
divps
repz
mov
sbbb
sbb
js
xor
out
mov
cmpsb
incb
jns
scas
xchg
mov
repz
xchg
mov
mov
lock
jmp
jecxz
push
mov
cld
fcmovnbe
xchg
loope
mov
push
iret
fwait
jo
lcall
jmp
xchg
gs
roll
movsb
inc
outsl
sbb
xlat
push
cmp
iret
ret
xchg
adc
push
adc
shlb
xor
lock
sub
iret
xchg
push
sbb
hlt
mov
add
in
sbb
and
stc
fldenv
imul
in
gs
pop
pop
repz
lea
sbb
and
sub
dec
in
rcll
mov
xchg
rcl
in
shl
push
and
mov
jge
nopl
shrb
cs
jg
rorb
out
sahf
imul
in
roll
mov
sti
pop
pop
test
xor
dec
mov
add
aas
or
repnz
fwait
sahf
in
frstor
or
sahf
ret
push
out
xor
fdivrl
mov
jl
jg
cmpsl
mov
fistpll
fisttps
jbe
pop
mov
pop
idiv
mov
movsb
add
shr
addr16
addl
cld
imul
add
push
mov
push
stc
fisubs
fists
inc
filds
fidivrl
std
mov
repnz
pop
rclb
das
pop
fistps
incb
inc
popa
test
sbb
pop
imul
out
out
lcall
hlt
fwait
stc
les
pop
cmpsl
dec
mov
je,pn
outsl
mov
mov
push
pop
lods
adc
icebp
or
div
xor
faddl
and
xor
fstpt
fisttps
xchg
fsubrl
push
cmpsb
add
into
add
int3
inc
in
out
mov
outsb
nop
mov
add
test
stos
xchg
data16
mov
pop
mov
imul
cmpsl
addl
sub
add
dec
ja
adc
sbb
jge
inc
cmp
pop
jg
in
lock
jnp
mov
xlat
mov
stos
lahf
out
daa
mov
iret
pop
mov
addr16
notl
lret
sbb
push
aas
stos
sub
xchg
xchg
adc
loope
add
enter
mov
mov
pusha
xor
sub
lfs
pop
mov
cs
xor
xlat
mov
out
jmp
je
inc
aam
ficomps
inc
xor
push
mulb
pop
sub
iret
icebp
mov
cs
cmp
sbb
daa
pop
pop
or
pop
or
mov
or
jecxz
fwait
lea
dec
cwtl
ds
dec
push
add
je
xchg
cmp
das
fs
inc
loop
sub
in
or
or
inc
sbb
int3
mov
mov
dec
aaa
iret
sbb
pushf
lds
jecxz
in
push
imul
inc
jg
pop
mov
outsb
insb
out
mov
sub
andl
mov
mov
mov
call
mov
out
aas
ja
pop
jg
mov
mov
aad
call
repz
and
sub
ret
mov
mov
ja
popa
xlat
mov
loopne
jge
adc
cli
sahf
jg
scas
jle
sbb
dec
int
iret
lods
in
insl
jnp
mov
cmp
mov
ret
push
shll
lea
out
iret
fsub
out
int3
lock
mov
mov
pop
insb
imul
mov
jb
sti
in
adc
clc
jge
aad
loope
mov
mov
push
pop
fdivrs
in
scas
mov
push
add
pop
ficomps
push
adc
cwtl
xchg
pop
cmp
xchg
mov
sbb
das
out
push
sub
jae
pop
mov
clc
fstpl
mov
dec
or
add
negb
mov
out
xchg
arpl
push
jp
add
fucomip
outsb
ret
lds
daa
nop
mov
lahf
aas
pushf
cmp
mov
mov
lahf
mov
and
test
fsub
das
and
pop
nop
in
test
arpl
enter
xlat
pop
idiv
popa
mov
dec
mov
pop
xor
insl
sbbb
jecxz
add
subb
fdivrl
jbe
add
cmpsl
and
cmp
mov
xlat
xchg
in
andl
ja
mov
aas
movsl
ljmp
adc
in
jle
mov
xacquire
mov
jl
fmull
movsl
add
enter
push
neg
imul
sbbb
sbb
iret
sub
sbb
shll
xchg
mov
fldcw
lea
mov
test
mov
out
int
popf
jnp
jp
cs
mov
lods
mov
pop
dec
push
sahf
stos
lcall
mov
cmp
dec
stos
leave
jbe
mov
aam
ret
push
jg
fisttpll
sbb
cld
mov
push
sub
aad
xlat
xlat
hlt
sub
aaa
jnp
sbb
pop
jecxz
fldl
jbe
je
cmp
mov
lahf
divl
pop
divb
cmp
adc
lret
jnp
arpl
sbb
arpl
adc
or
fldl
mov
add
or
mov
imul
mov
stos
sbb
and
adc
inc
lods
cmpsb
lods
mov
cmpb
pop
cmp
std
mov
outsb
fdivs
stos
arpl
mov
mov
pop
insl
nop
push
dec
xchg
xlat
sbb
imul
jne
sahf
pop
push
popl
mov
cltd
mov
sti
cmpsb
inc
fcoms
pop
stos
stc
ljmp
insb
push
rcll
xor
imull
mov
push
fnstcw
adc
sub
into
test
mov
mov
sbb
mov
sbb
movsb
jmp
mov
push
xchg
dec
push
test
inc
jecxz
ja
cmp
dec
out
inc
or
pop
xchg
scas
adcl
ja
enter
mov
aad
cmpsb
or
arpl
loope
test
cmp
fidivrl
push
mov
xlat
dec
xlat
cmc
icebp
pop
scas
gs
mov
cs
push
movsb
push
int
in
mov
rorl
cmp
cmpsb
mov
jge
mov
inc
push
cvtps2pi
xor
loop
das
shr
mov
pop
outsb
sub
sub
ljmp
mov
ss
add
mov
scas
pop
dec
adc
push
sbb
fs
mov
pop
inc
cmpsl
stos
push
popf
sub
out
fidivs
scas
out
in
out
gs
dec
mov
idivl
lret
add
lods
mov
fidivs
and
ljmp
adc
or
mov
inc
enter
fstpl
sahf
and
into
jle
fstpl
xor
inc
xchg
and
das
mov
push
subl
sbb
jmp
push
cltd
mov
iret
fcomi
adc
pop
sbb
scas
mov
dec
mov
jbe
jle
cmp
xchg
scas
and
mov
jge
icebp
lret
lods
aad
pop
enter
mov
mov
div
in
cmp
movsb
inc
fildl
xchg
cmpsb
inc
jl
jns
xor
cwtl
dec
lods
mov
imul
xchg
jmp
das
scas
fstps
inc
inc
cltd
lods
sub
add
xorl
inc
ja
in
adc
or
dec
loop
outsb
adc
mov
iret
imul
aad
outsb
mov
es
cmp
stc
out
outsb
mov
stc
test
jns
cmp
int
mov
dec
xlat
dec
subb
in
inc
shrl
pop
xor
movsb
and
sub
pop
addr16
xchg
je
push
inc
je
les
push
xor
movsb
mov
out
push
push
imul
push
mov
jle
and
mov
and
out
scas
lahf
mov
and
jo
shl
mov
jo
dec
and
shl
and
fisubrl
ss
jmp
lret
push
gs
jo
out
inc
outsb
jge
push
push
or
pushf
movsl
das
insl
inc
cld
cmpsb
mov
xchg
or
sarb
ror
std
mov
push
out
push
lds
cmp
out
push
aaa
inc
dec
mov
or
push
fsubl
mov
push
xlat
jmp
cmp
jmp
je
jmp
sub
pop
or
mov
lahf
je
fsubrp
rcrl
add
inc
adc
mov
mov
mov
out
aam
aad
loopne
sbb
into
out
or
mov
mov
adc
icebp
or
dec
cmc
mov
cmp
push
mov
mov
fsts
cld
scas
push
or
push
jge
icebp
add
lret
mov
lcall
adc
ret
lds
aas
pop
scas
std
or
movsb
cmpl
imull
ror
repz
pop
stc
fst
ljmp
sbb
sub
push
jmp
pushf
ds
cld
add
imul
jl
icebp
dec
popf
lahf
lret
mov
shrl
dec
or
and
clc
std
cs
js
sarb
mov
mov
pop
fidivrs
add
out
fsts
aas
mov
add
jg
jmp
es
lret
fs
xchg
xor
pop
std
dec
cli
lret
push
repz
call
scas
pop
push
xor
out
mov
loop
and
loopne
xchg
shlb
sub
mov
imul
mov
std
jne
push
xor
insl
subb
cld
in
dec
repnz
pop
jbe
mov
lods
fisubrl
sti
imul
inc
jnp
icebp
mov
ss
sbb
repnz
mov
cmpb
inc
dec
add
jmp
and
pop
jmp
mov
mov
sti
lahf
cmpsb
adc
mov
mov
pop
jle,pn
shl
jae
ds
sub
jmp
mov
into
icebp
jle
ret
loope
sub
cmpsl
aad
in
jge
add
out
dec
jbe
inc
mov
pop
add
push
ficoms
ret
ja
mov
je
and
mov
shll
sti
inc
call
or
mov
fmul
add
sarb
fwait
pop
xlat
enter
lock
jecxz
xchg
or
dec
pop
sbb
imul
leave
mov
int3
cmp
insl
fwait
ss
mov
add
std
repnz
mov
scas
sub
lret
mov
popf
xchg
jno
in
pop
push
outsb
mov
mov
mov
xchg
xchg
add
movsb
lcall
push
mov
clc
fstps
outsb
xlat
mov
mov
negl
dec
lret
mov
add
adc
mov
xchg
mov
mul
mov
mov
std
push
int3
cltd
cli
mov
out
inc
sti
mov
push
cmp
cmp
imul
fucomi
fisttpl
jle
in
adc
xorl
and
inc
arpl
out
push
jnp
leave
sti
out
dec
aaa
mov
push
push
fstpt
enter
clc
adc
mov
pop
jge
mov
push
sub
pop
push
or
popa
mov
mov
repz
test
pop
jge
adc
data16
ja
sub
xor
fsts
rcpps
shll
sbb
data16
cmp
lret
cmp
scas
jg
data16
mov
aad
or
and
lods
fidivrl
test
scas
add
xor
imul
dec
jecxz
dec
imull
stos
out
movsb
lret
dec
ds
test
lods
in
add
mov
lret
ret
in
mov
adc
rcl
xlat
fstpl
add
imulb
dec
fcmovnbe
mov
aam
stos
cli
fwait
aad
into
or
shr
je
ja
in
cld
pop
sub
fldl
add
push
fwait
jae
int
sarl
push
push
movsl
push
std
jae
adc
loop
imull
iret
out
mov
or
mov
cli
push
fcomi
mov
jecxz
jle
jge
aad
aad
es
ror
jg
xlat
in
cmp
out
sub
in
fwait
add
iret
push
cltd
cmp
inc
push
mov
cli
push
fcom
shrb
jg
outsb
pop
adc
clc
ss
cmpsb
out
rdtsc
sti
mov
in
xlat
inc
int
add
rolb
fmul
jae
cwtl
aad
mov
sbb
imul
fstl
dec
push
mov
adc
add
push
pop
fimuls
rolb
mov
sti
inc
ret
repz
je
jae
rclb
ljmp
push
mov
rcr
aam
add
mov
sbbb
sub
mov
dec
out
leave
xchg
pusha
out
fucomip
dec
sbb
cmpsl
dec
push
aad
ja
push
fcompl
push
and
sub
ret
push
mov
mov
frstor
mov
dec
daa
cwtl
ret
rcr
mov
aad
testl
hlt
sti
pop
fistps
push
int3
mov
ficoms
push
xor
adc
push
xlat
mov
sbb
lods
pop
fldl
pop
insb
cmp
push
imul
cmpsb
cmpsb
fcmovbe
cmpsl
push
xor
push
sub
scas
fidivrs
jl
dec
fwait
out
data16
std
push
fistps
pop
push
cmp
jmp
fbstp
jmp
mov
cmpsb
cmp
inc
js
and
jp
out
mov
jmp
xchg
addr16
fiadds
into
pop
fwait
jge
stc
pusha
in
mov
xchg
lret
xlat
popa
pop
pop
sti
or
jecxz
clc
or
jle
add
fisubrs
jne
dec
dec
cmc
popf
into
fcmovnu
aam
clc
std
fadds
fstpl
les
arpl
out
xchg
xchg
mov
jp
cli
imulb
aad
aaa
addr16
inc
sub
aas
xlat
mov
cmpsb
mov
mov
je
mov
xchg
outsl
sbb
test
add
xchg
rcl
aas
les
mov
jp
movq
ficoms
mov
loopne
lds
imul
or
popf
jl
repz
pop
std
lcall
cmpsl
loopne
inc
fnstcw
jmp
mov
popa
stos
stos
add
in
test
and
or
cs
jg
push
lods
ljmp
outsb
loopne
add
mov
mov
cmp
notl
mov
mov
pop
sbb
xor
ret
inc
or
aas
loopne
fisttpll
push
outsl
and
mov
insl
jmp
cmpsl
mov
clc
inc
mov
pop
or
imul
mov
fstps
mov
adc
ror
jecxz
fwait
add
mov
leave
arpl
aaa
insl
rcrb
into
stos
mov
inc
iret
lock
das
adc
aaa
int
in
outsb
or
int
push
jnp
cmpsb
sarl
negb
test
aas
popa
popf
mov
push
push
std
mull
jmp
mov
iret
sar
dec
cmpsb
fldt
lods
scas
ljmp
cmp
push
mov
aam
dec
imul
stc
inc
fidivrs
fsubrl
icebp
fwait
scas
ljmp
out
mov
sub
in
repnz
test
mov
std
fisubrl
shr
sub
in
lods
int
loop
fmull
add
and
jg
int3
mov
sub
or
inc
frstor
fisubrs
jnp
outsl
push
out
adcb
lret
sahf
repz
add
into
push
mov
orb
fldcw
into
mov
lods
iret
mov
mov
lret
inc
mov
and
inc
mov
fidivl
fsubrl
int
fistpll
push
pop
or
neg
mov
adc
mov
bswap
lea
shlb
push
dec
bound
leave
mov
jne
ja
fsubrs
mov
sub
add
sub
xchg
xor
call
jne
fwait
xchg
testb
ret
fmull
xor
mov
cmp
das
aad
flds
popa
scas
outsb
mov
stos
sub
xchg
mov
cmpsb
mov
inc
adc
ret
in
or
inc
fimuls
call
pop
mov
cmp
testl
push
mov
idivb
xchg
in
enter
inc
add
hlt
movsl
stos
pop
test
shlb
jae
out
imul
cmc
pushf
lds
add
jno
scas
pop
scas
or
das
jg
sbb
adc
jge
mov
sub
xchg
shl
jl
int3
mov
jo
mov
sbb
add
cmp
sbb
sub
xlat
push
leave
push
jg
xchg
mov
or
xor
aad
sbb
ja
fs
mov
add
xchg
cli
mov
clc
popa
add
pop
shrb
or
mov
cmp
jmp
push
lock
and
jg
popa
mov
mov
xchg
loopne
insb
aam
lock
jne
outsl
xlat
or
shlb
cmpsl
pop
pop
add
or
mov
mov
push
fcoml
dec
mov
pop
adc
mov
pop
dec
ret
rolb
cmc
sbbb
idivl
cmpsb
mov
cmc
push
aaa
mov
jno
shl
movsl
pop
enter
cmp
cli
sub
jg
mov
ficoms
mov
push
lret
pop
jbe
fidivrs
push
jmp
xchg
push
aam
push
push
mov
mov
popf
or
cmpsl
aad
mov
mov
arpl
jl
fsubrl
inc
insb
ret
push
pop
jmp
dec
xchg
adc
cld
rcrl
je
jns
imul
sbb
adc
daa
pop
inc
add
xor
jge
leave
arpl
jg
loope
push
lds
pusha
lods
dec
dec
mov
mov
pop
push
ret
scas
fldenv
dec
cmp
in
jl
ret
cmpb
test
mov
aad
cli
mov
ds
or
xchg
xchg
fwait
movsl
inc
sub
ja
pop
shrb
push
sub
inc
int
xor
out
inc
pop
in
ret
xchg
adcb
out
jmp
cmp
stos
sahf
pop
mov
fs
fdiv
inc
bound
lret
fisttpll
push
movsb
pop
fucomi
scas
lahf
outsl
pop
fdivl
arpl
pop
insb
add
daa
xchg
fldt
pop
ror
mov
mov
sbb
testl
cmp
xchg
jg
cmpsb
xor
cmpl
dec
sub
out
repnz
jecxz
mov
sbbb
fcoml
imul
pop
and
sarl
mov
inc
adc
cwtl
sarl
pop
and
cmp
sub
ret
push
divb
mov
gs
push
iret
jmp
dec
mov
pop
push
mov
popl
lea
out
test
int
and
jle
mov
dec
mov
pop
jno
pop
dec
or
lods
pop
int
add
xor
je
fwait
aas
sahf
iret
lret
inc
movsl
call
cmpsl
dec
leave
sbb
mov
adc
lcall
aas
sub
stc
and
sbb
sbb
xor
jae
jmp
fdiv
leave
and
inc
or
mov
mov
and
fdivl
imul
mov
std
dec
and
into
pop
pop
sbb
arpl
rcrl
out
out
jae
jg
adc
out
adc
test
pop
insl
xchg
test
outsl
pop
repz
push
addr16
jo
enter
cmp
loopne
push
imul
mov
mov
es
into
fbld
iret
pop
pop
jge
sarw
push
decb
sbb
xchg
jg
mov
scas
sbb
sbb
fisubrs
pop
xor
fwait
pop
sub
gs
clc
sub
pop
mov
out
xorl
test
cmp
cmp
mov
jns
pop
rcl
stos
mov
cmp
clc
push
sbb
mov
ret
imul
mov
or
shrb
popa
cmc
aam
fistpl
imul
adc
clc
mov
mov
ret
lods
add
mov
cmc
pxor
pop
adc
mov
scas
sbb
arpl
out
inc
push
xchg
adc
lock
sub
jnp
pop
jno
cmp
pop
xchg
cltd
and
in
jg
mov
jae
dec
sbb
popa
push
imul
fistps
loopne
scas
inc
stos
jg
fldenv
pop
stc
repz
rorb
jne
jmp
xlat
xchg
les
leave
cmpsb
scas
out
xor
jmp
aas
shlb
cmp
pop
pop
mov
fimull
outsl
cs
fnstcw
imull
or
push
scas
ljmp
cmp
iret
add
mov
inc
rcrb
outsl
fistpll
repz
lret
xor
outsl
loope
pop
jmp
jp
or
mov
fdivp
mov
stos
mov
lret
mov
push
iret
jne
sbb
pop
or
negl
test
inc
testb
mov
ja
repz
lods
leave
or
stc
dec
popf
jne
addb
imul
push
lahf
sbb
iret
jecxz
jo
repz
je
mov
ljmp
jecxz
sub
jg
push
in
jbe
xlat
push
jecxz
jecxz
push
push
idiv
pop
rorl
pop
sbb
notb
mov
mov
out
in
repnz
insl
sbb
enter
aam
jbe
outsl
out
lahf
pop
es
fcmovnb
leave
sub
repz
xor
ret
xlat
cmpsb
popa
scas
mov
jbe
scas
sbb
jnp
cltd
and
or
fcomps
add
loopne
lret
mov
adc
ds
mov
jg
fxch
jge
rcl
loopne
aas
xchg
xlat
cmpsb
mov
mov
or
dec
xor
in
pop
mov
sub
out
ds
stos
sbb
sub
mov
xchg
iret
fstps
sbb
aad
into
adc
stos
inc
mov
mov
test
insb
iret
push
cwtl
push
jae
iret
fcomi
in
fwait
xchg
scas
push
div
fsubr
fwait
movsl
imul
mov
and
fxch
insb
and
rol
and
jge
adc
xor
lcall
dec
stc
cs
push
pop
add
imul
sahf
add
das
das
cld
mov
arpl
cmc
decb
in
into
jno
js
mov
test
sbb
movsl
lret
cmpsl
inc
jmp
mov
jmp
stc
pop
fldt
int
negb
mov
out
icebp
arpl
fwait
dec
js
pop
sbb
sbb
inc
pop
and
aam
shrl
push
cmp
xchg
cmpsb
sbb
push
xorb
mov
lods
add
outsl
mov
stc
fistpl
mov
out
cmp
fistps
pop
imul
fistps
or
outsl
adc
fiaddl
mov
sbb
sbb
shlb
enter
sti
fldenv
hlt
fsts
pop
xorb
mov
fmuls
push
adc
mov
inc
std
dec
clc
imul
inc
jmp
lahf
out
mov
push
pop
sub
dec
dec
shr
orb
add
leave
das
dec
cli
scas
adc
xchg
shl
push
stc
mov
pop
mov
scas
xlat
fidivrl
loopne
enter
pop
pop
pop
jg
mov
leave
iret
cmc
fld
push
mov
mov
call
cmc
add
lret
push
outsl
cwtl
aas
sbb
inc
mov
aas
lods
repz
enter
sub
mov
fcmovnb
push
rcrb
adc
sbb
pop
das
mov
push
mov
in
in
pop
push
pop
sbb
push
jo
sbb
sbb
lahf
dec
hlt
adc
mov
outsl
lods
in
pop
cmc
orb
mov
push
push
enter
and
fldenv
ficoml
mov
in
mov
outsb
aas
pop
push
fnstcw
sub
jns
push
mov
ret
out
scas
aaa
fnstcw
bound
fs
sarl
xchg
pop
mov
pop
pop
inc
aam
rolb
sub
mov
jmp
test
jl
mov
or
fcoml
jge
jb
jmp
sti
mov
push
sbb
in
push
hlt
icebp
lahf
sub
sub
lods
es
sbb
aam
fnstcw
mov
mul
jne
int3
orl
xchg
cli
aaa
popf
insb
push
loopne
imul
dec
test
sub
pop
mov
movsl
mov
lea
fcomps
scas
leave
xor
out
jecxz
lcall
scas
addr16
pop
xlat
pop
loopne
divl
insl
lods
pop
inc
xor
shlb
es
cmp
xlat
mov
repz
insb
jle
xchg
idivb
filds
in
js
or
in
jmp
xchg
testl
jp
and
mov
lahf
push
push
out
and
push
scas
mov
ljmp
aaa
stos
movsb
dec
and
cwtl
popf
sti
xlat
mov
or
sbb
fwait
repz
pop
cmp
mov
sbb
cmp
sbb
sarl
repz
out
into
in
in
out
imul
ja
icebp
xor
or
stc
clc
mov
shlb
sbb
ja
or
clc
push
dec
cmp
imul
repz
or
into
scas
dec
push
clc
decb
test
sub
hlt
stc
push
fwait
mov
sub
hlt
rcl
ss
stc
in
mov
outsb
test
cmp
push
jle
and
lret
pop
jns
jae
shr
cmp
popf
push
ret
mov
jb
decb
add
cmp
pushf
adc
cli
stos
ljmp
leave
lds
in
pushf
jns
addr16
dec
or
mov
mov
dec
sub
mov
leave
lret
adc
scas
push
incl
push
sub
les
scas
negl
imull
mov
xlat
or
mov
out
pop
mov
mov
sahf
and
cmc
orl
mov
xchg
jns
pop
sbb
sarl
pop
enter
mov
push
ljmp
push
push
mov
ljmp
mov
idiv
pop
repz
push
imul
leave
out
jl
stos
inc
in
pop
dec
insb
rcll
data16
pop
aas
out
sbb
xchg
fldt
inc
pop
inc
mov
scas
mov
pop
js
lahf
psubsw
or
repz
data16
cs
aam
mov
inc
mov
in
stos
into
jl
pop
fldenv
push
jmp
insb
inc
cmpsb
fistl
out
add
mov
int
scas
in
aas
iret
xchg
fisttps
bound
fidivrs
sub
sub
inc
sahf
adc
pop
repnz
imul
mov
push
insb
insb
cmp
nop
scas
ret
jmp
outsl
leave
popa
insl
lods
mov
sub
pop
clc
mov
bound
scas
xchg
mov
mov
ja
fistpl
fmulp
pop
pop
loope
in
dec
pop
push
push
or
sbb
or
pop
aas
sub
scas
xor
mov
stc
es
cmpsl
mov
mov
popa
jg
inc
fidivrs
mov
icebp
adc
fstpl
lods
leave
jmp
mov
push
jno
arpl
mov
cs
mov
out
rcr
loop
sub
aad
or
push
insb
jbe
hlt
cmp
cs
mov
ret
iret
cli
or
add
xor
sbb
fs
test
adcb
lret
cmc
fld
or
outsb
jecxz
imul
scas
imul
push
jo
mov
in
into
mov
pop
and
test
pop
inc
sbb
stc
pop
pop
push
add
push
cmpsl
loopne
rep
shlb
lods
cld
cmp
clc
call
out
leave
int
push
xchg
mov
fwait
add
cmpsl
daa
repz
mov
loop
call
cld
pop
lods
xlat
cmpsb
outsl
and
pusha
cmpsl
aam
arpl
jne
fnstsw
jae
xorb
cld
iret
pop
leave
lea
add
shll
iret
repz
xchg
push
jae
and
mov
dec
repz
icebp
out
inc
les
sbb
mov
loope
xlat
sar
repz
fisubrs
in
xchg
and
aas
test
or
in
pop
inc
ret
push
or
scas
sbb
inc
test
cmp
mov
out
rolb
das
pmuludq
clc
push
mov
scas
mov
mov
lock
lret
jg
call
pop
jg
out
jnp
jns
mov
mov
je
or
out
jle
jge
mov
test
cwtl
mov
mov
sub
pusha
getsec
repz
xor
ret
lods
out
loopne
clc
mov
in
scas
iret
fsts
sbb
lock
lock
fidivs
call
jp
ret
outsl
mov
into
mov
in
das
and
push
or
rolb
mov
mov
fwait
ja
out
enter
scas
nop
xlat
clc
scas
inc
ja
fbstp
scas
push
xor
pop
adc
pop
push
mov
mov
sbb
ret
stc
mov
xchg
push
fisubrs
ss
fdivs
xorb
or
pop
jnp
pop
sub
push
jg
aam
push
sarb
jmp
clc
filds
jbe
xchg
sbb
xchg
cmp
sarl
das
fldcw
repz
jae
outsl
push
cmp
mov
mov
idivb
fnstenv
sbb
into
out
cli
add
mov
out
mov
scas
adc
insb
push
gs
jg
cltd
incl
push
loopne
inc
mov
in
fs
xchg
sbb
out
repnz
adc
ljmp
movsb
push
lock
cmp
cmp
mov
xchg
loopne
data16
shlb
lahf
and
mov
shrb
in
push
cltd
outsb
mov
jmp
test
mov
insb
test
push
xchg
xor
fcoml
mov
adc
imul
jg
jns
mov
xor
sub
push
sub
lea
fs
add
cwtl
leave
cli
fwait
pop
daa
or
sahf
inc
adc
sub
jecxz
lock
insl
lods
push
in
outsl
push
insb
dec
mov
loope
test
in
add
mov
enter
cwtl
gs
lods
xchg
dec
scas
xchg
ljmp
gs
xchg
into
aas
dec
fcompl
out
divl
insb
rclb
xchg
loop
gs
mov
loopne
jno
testb
addr16
insb
btc
mov
in
mov
pushf
int
into
call
insl
xchg
jecxz
into
push
push
call
das
mov
shll
pop
cmpsl
and
shlb
jae
sti
shl
sbb
outsb
lret
insl
out
xor
ss
jne
mov
stc
and
fsubp
sbb
jns
stos
mov
shll
xor
sahf
cld
pop
mov
cmp
sbb
pop
shl
cmp
mov
or
iret
pop
push
fildll
jo
mov
aas
fiadds
push
outsl
add
fucomi
popf
add
xor
pop
pop
mov
fwait
adc
jecxz
cmp
scas
enter
dec
rol
jle
adc
jo
aad
loope
xor
nop
out
mov
fiadds
fldt
popf
fnop
xor
mov
daa
jmp
in
xchg
pop
inc
ja
hlt
in
push
je
push
adc
nop
xchg
into
and
jns
cli
xchg
test
cmp
push
cltd
xchg
stos
mov
mov
aas
outsl
inc
lods
mov
sub
mov
or
jno
call
pop
jmp
fucomp
mov
cmp
add
ret
insb
mov
cwtl
mov
jg
jl
push
lock
inc
mov
popf
mov
jecxz
mov
nop
fs
stos
out
shrl
andl
in
push
jne
sub
push
jl
out
mov
into
pop
addb
out
sbb
or
push
push
stos
ljmp
dec
in
jl
cmpsl
pop
dec
mov
faddl
fisubl
xor
mov
ja
out
sub
mov
jg
mov
test
pop
les
push
repnz
aaa
jle
pop
dec
push
jl
xor
cmpsl
jg
popa
jae
push
insl
inc
mov
cwtl
cmc
xor
mov
cmpsl
pop
rcr
mov
lahf
pop
lock
cmpsl
jg
sbb
mov
dec
pop
mov
iret
mov
push
xlat
inc
sub
mov
daa
adc
neg
outsb
aas
fiadds
lea
pop
testl
ret
mov
sbb
leave
jns
inc
ss
mov
ja
sub
pop
iret
push
int
incb
popf
mov
ret
inc
lea
bnd
in
mov
mov
lahf
scas
jmp
jl
dec
add
insl
mov
lcall
jae
lea
fcomip
sti
jno
adc
pop
ret
cmpsl
scas
adc
dec
decl
push
int
mov
movb
fmull
and
sub
and
les
jle
pop
sub
pop
or
aas
in
mov
jle
pop
adc
dec
and
push
dec
outsb
pop
bound
sbb
fistpll
sub
iret
pop
in
divb
xchg
popf
dec
push
mov
xchg
mov
push
rcl
jecxz
out
or
out
cmp
mov
push
jo
add
jg
dec
pop
push
mov
sbb
dec
xchg
jmp
shl
sbb
push
shlb
xchg
push
mov
xlat
pop
jo
sub
pop
sbb
rcrl
lds
test
push
aas
movsl
sarl
int
out
dec
loopne
jge
xor
testb
add
repz
sti
jae
bound
mov
sti
scas
add
adc
push
andb
push
stos
jle
es
rcrb
outsb
sub
dec
push
xor
mov
mov
cmp
mov
sti
mov
pop
jecxz
adc
lods
xchg
orb
test
gs
nop
pop
cmp
sarb
cld
or
icebp
sbb
sbb
ss
push
jnp
push
fdivrl
sarl
or
int
dec
inc
ja
or
add
or
sbb
sbb
inc
jmp
mov
dec
aad
iret
movsb
sub
add
xchg
push
push
movnti
lret
mov
in
xlat
mov
cmpsb
push
fsubrl
push
inc
sub
mov
sbb
movsb
pushf
mov
aam
push
daa
jmp
cli
xor
insl
push
mov
out
push
inc
jnp
iret
stos
adc
std
xor
leave
das
enter
negb
movsb
mov
call
adc
out
or
xchg
push
mov
iret
adc
enter
xorb
arpl
leave
shrb
push
sub
or
add
stc
lahf
adc
xor
in
aaa
clc
jg
sub
icebp
in
xchg
loopne
das
ss
aas
add
pop
mov
mov
les
iret
xor
iret
cmp
pop
mov
lods
adc
cld
adc
xor
mov
sbb
xlat
mov
pop
leave
xor
add
out
or
pop
cmp
sbb
popf
cs
leave
das
imul
pop
stos
xchg
rcll
pop
mov
mov
mov
pop
cmpsb
lcall
xchg
mov
push
inc
std
push
iret
mov
ret
inc
inc
jge
stc
addr16
pop
fldt
outsl
sub
jno
ss
cs
stos
mov
cli
xchg
adc
dec
lret
comiss
mov
je
cld
jg
or
aas
mov
pop
andb
ljmp
pop
insl
iret
add
mov
mov
out
jbe
insl
xchg
or
push
fwait
adc
mov
sub
mov
scas
jns
jns
xchg
sub
roll
dec
mov
sbb
push
repz
stc
clc
in
mov
imulb
sbb
jmp
push
aaa
popf
lods
fists
cs
jns
sub
into
add
lcall
pop
repz
mov
sub
mov
mov
stc
jnp
add
pop
fisttps
fstp
xor
sbbb
clc
mov
dec
push
in
cli
or
and
add
imul
jo
cltd
mov
mov
bound
test
sub
lock
jbe
mov
neg
adc
mov
in
mov
pop
cmpsl
mov
dec
xchg
and
repnz
mov
push
daa
mov
data16
push
dec
mov
fstpt
ret
jmp
std
or
pop
imulb
lret
mov
dec
dec
ffree
loopne
in
es
mov
xor
push
popf
push
lcall
daa
mov
ret
cmp
pop
xor
pop
insb
push
cltd
jmp
rcr
add
das
mov
sub
bound
leave
repnz
sbb
add
cmp
add
xchg
mov
sbb
ret
lods
insb
sbbl
cwtl
cmpsl
shrl
dec
mov
mov
hlt
iret
push
sahf
xchg
mov
sbb
aad
or
adc
rorl
push
mov
mov
sti
pop
aad
lods
cvtps2pi
mull
insb
test
add
dec
dec
pop
mov
push
fwait
xchg
pop
add
add
icebp
dec
mov
mov
pop
rcr
or
stc
outsb
jp
aam
add
and
pop
fwait
mov
adc
dec
mov
mov
rclb
aas
mov
cwtl
adc
psubb
fnstenv
mov
outsl
addb
fwait
outsb
movsl
das
out
jp
aas
mov
into
pushf
enter
mov
push
in
into
dec
cmp
xchg
xor
jno
sti
icebp
subb
lret
stos
hlt
or
push
mov
mov
push
pop
sub
imul
cs
sti
in
mov
mov
pop
xlat
push
push
adc
fildll
arpl
inc
xor
jbe
lods
movzbl
lea
ret
rcl
int
jne
dec
rcr
inc
fstpl
fdivl
icebp
in
or
or
xor
fcmovnbe
aam
cmp
fs
lock
out
ffree
add
xor
xor
fsubrl
divl
or
cmpsb
mov
push
push
sub
lcall
test
mov
sub
jl
test
outsl
jg
stc
adc
pop
insl
in
loope
push
push
movsb
xlat
sub
pushl
and
repz
loop
mov
addr16
cmp
sub
dec
pop
jno
nop
stos
pop
jl
dec
and
sbb
push
hlt
pop
repz
push
scas
or
fcompp
ret
sarl
out
pop
pop
mov
cmp
call
xchg
fidivrs
jmp
mov
imul
fldcw
cmpsb
inc
loope
lock
pop
inc
insb
mov
test
push
insl
push
pop
mov
sub
dec
movsb
jne
sti
stc
mov
hlt
imull
add
jno
push
fst
rorl
fwait
xlat
add
push
in
jmp
rcl
sub
push
dec
aas
shrb
mov
add
sbb
int3
inc
pop
push
pop
je
repnz
adc
mov
std
mov
imul
lret
out
mov
out
jae
push
cmp
dec
test
imul
cmp
test
mov
add
jo,pn
cmp
xor
out
mov
sti
push
sti
fildll
enter
cmpsl
fsubrp
test
lcall
add
mov
movsl
mov
filds
sahf
mov
aas
sub
rcrb
adc
cmp
scas
sti
mov
sbb
mov
lahf
int
in
jae
sti
mov
into
ss
imul
frstor
out
jmp
in
lods
sub
fldl
dec
xor
sbb
mov
mov
push
mov
xlat
fiadds
fabs
rcrb
iret
mov
lret
mov
xchg
insl
ja
repnz
jl
ret
fisubs
out
int
mov
pop
into
lahf
mov
cld
scas
lods
lahf
fdivl
fnstsw
sahf
iret
jmp
jo
inc
xchg
stos
fldenv
gs
out
cmpsl
add
ffreep
cld
jl
pop
shlb
pushf
mov
mov
loopne
mov
popa
sbb
xchg
pushf
push
cltd
mov
sub
mov
out
mov
sbb
pop
adc
mov
fbld
pop
pop
outsl
imulb
dec
or
repnz
mov
cmp
dec
sbb
in
aaa
mov
jl
in
repnz
fisttpll
test
push
idivl
repnz
fdivrl
fidivl
xor
inc
mov
ja
imul
or
jl
divb
fsubr
cli
mov
daa
sbbl
out
cmp
mov
mov
jo
in
iret
jmp
mov
fsubrp
in
repnz
cli
cmpsb
pop
xorb
btc
loopne
idiv
loope
ret
int
xor
iret
jmp
loop
push
aad
xchg
in
xchg
sti
out
leave
outsl
lods
out
mov
add
fidivl
cmpsb
mov
pop
pop
fdivrp
mov
testl
cmpsb
shr
pop
dec
ret
gs
imul
jl
std
xchg
shl
stc
sbb
sub
sti
and
insl
adc
xchg
mov
sti
add
subl
mov
jl
cmp
filds
clc
inc
adc
insl
call
fistl
cmpsb
jb
ja
insl
imul
or
or
test
or
mov
xchg
jmp
repnz
dec
in
sbb
mov
dec
inc
sub
insb
mov
call
inc
lahf
into
xchg
int
xchg
hlt
imul
test
test
xchg
and
inc
hlt
pop
imul
ret
les
cmp
cmp
hlt
mov
mov
sub
jecxz
jge
lcall
sar
adc
xchg
aaa
dec
imull
xchg
rcll
js
sti
inc
jno
aas
jl
pop
bound
mull
je
out
adc
inc
inc
imul
jae
movb
ret
cli
jmp
aad
rcl
pop
xlat
loopne
or
lds
mov
in
xchg
jne
lods
icebp
pop
rcrl
push
mov
mov
jnp
stos
scas
fdivs
xchg
cli
mov
fldenv
decb
scas
leave
sub
scas
push
pop
fisubrs
sub
sbb
mov
mull
jns
fsubr
mov
ret
test
ljmp
or
hlt
ja
int
scas
insb
repnz
addr16
imul
stos
fs
mov
push
jnp
adc
mov
mov
inc
scas
mov
add
inc
imul
repz
inc
fnstenv
cmp
push
pusha
out
rcrl
xchg
and
xorl
mov
sti
jp
popf
add
aaa
lahf
scas
mov
jp
aas
mov
testb
mov
divl
stos
outsb
sub
pop
psraw
mov
sti
xchg
jnp
cmpsb
out
stos
fucomp
jmp
sub
push
mov
lahf
add
mov
scas
or
fistpl
out
aas
adc
xor
leave
in
pop
aas
inc
xchg
hlt
int
aad
push
cmp
test
mov
out
dec
pop
jne
in
mov
sub
insl
imul
fadds
aas
shrd
mov
dec
mov
or
mov
sub
mov
lea
subb
inc
paddb
arpl
fistpll
jno
leave
in
xchg
mov
inc
fmuls
sub
xchg
test
mov
out
std
cs
roll
xchg
adc
cmp
sbb
out
mov
out
sbb
jmp
adc
lcall
mov
pop
mov
outsl
mov
cs
mov
repnz
pop
cmp
shlb
fcomi
sti
pop
sbb
mov
lret
mov
movsb
jno
push
push
movsb
notb
cli
mov
jge
into
arpl
out
mov
outsb
mov
pop
add
pop
sub
in
popa
jae
mov
lea
repz
int3
xchg
jnp
loopne
sbb
mov
jge
repnz
mov
mov
mov
and
mov
in
in
cmp
aad
mov
pop
scas
lahf
out
aad
addr16
inc
stc
lret
repnz
insb
push
into
test
pop
loopne
addr16
mov
aas
cmp
sub
adc
jnp
jl
lds
push
add
ds
aaa
pop
rolb
dec
cltd
cmp
cmpl
pop
xchg
fidivrs
sub
jmp
push
jg
xor
cmp
push
ret
call
cmp
jb
sbbl
mov
ja
adc
pop
adc
pop
xchg
cmp
pop
cmp
popf
add
test
jecxz
mov
jg
mov
push
out
repz
pop
arpl
out
sbb
pop
lods
sti
add
popf
push
jg
mov
pop
pop
bnd
imul
out
lahf
scas
insl
cmpsl
xor
ljmp
cltd
pop
mov
dec
lods
mov
sarl
out
in
pop
lods
xchg
jecxz
out
out
xlat
iret
push
xlat
push
faddl
out
out
pop
jns
imul
xchg
scas
mov
mov
push
negb
jns
mov
arpl
mov
mov
repnz
mov
pop
insl
sbb
inc
mov
popf
repnz
scas
lahf
mov
insl
sbb
jne
sbb
cs
ds
mov
pop
lahf
xchg
dec
out
sahf
jb
in
push
dec
aad
jp
out
inc
ja
mulb
jmp
fst
out
jle
add
mov
pop
add
test
mov
loop
pop
sbb
dec
rol
add
mov
xor
xlat
movsb
clc
sbb
fwait
or
in
dec
decb
inc
mov
repz
dec
fldl
xchg
mov
sbb
sbb
cmp
push
add
mov
jecxz
jbe
scas
push
xchg
pop
fsts
sar
loope
push
cld
pop
mov
pushf
xor
mov
dec
mov
cmp
dec
push
mov
mov
xlat
in
ficompl
cmp
hlt
push
sbb
jnp
sti
push
mov
mulb
jb
das
testb
jmp
mov
vpsadbw
loop
fstl
clc
dec
fwait
neg
pop
mov
idivl
loop
fbld
mov
xlat
and
out
xchg
mov
popf
xor
push
xor
mov
jle
xor
aad
lret
popa
call
repnz
rcr
jnp
outsb
loope
das
sbb
pop
ss
jnp
out
maskmovq
imull
dec
ret
in
daa
pop
pushf
aad
xchg
fadds
lods
xor
adc
mov
data16
add
aaa
aaa
sahf
insb
pop
stos
fstpt
gs
movsl
popl
in
adc
inc
jns
in
cmp
mov
sbb
out
push
dec
test
iret
loopne
jno
mov
iret
ds
pop
mov
addr16
adc
bound
pop
xlat
cs
leave
repnz
pop
je
pusha
push
xlat
mov
mov
lret
aaa
fstps
cmp
lcall
xor
insl
ds
mov
dec
lds
xchg
and
cmpsl
lock
cmp
dec
jbe
xchg
pop
mov
fisttpll
mov
popl
jle
xchg
divb
dec
add
fisubrl
aaa
mov
cmp
fs
jns
in
lret
dec
jae
flds
pop
fidivrs
rcl
and
mov
sub
pop
add
cmpsb
btr
pop
mov
pop
pop
lcall
sub
aas
test
sbb
mov
lcall
jg
leave
insl
adc
mov
call
out
fisubrl
loope
inc
fldl
test
scas
fucomp
dec
aad
pushf
inc
dec
jg
mov
fucomp
std
pop
push
in
stos
icebp
cld
add
pop
enter
inc
pop
mov
ds
jnp
and
sbb
into
sbb
jle
jns,pt
jp
pop
jle
mov
lret
aad
das
insb
dec
fisubrs
sbb
xchg
jae
out
pop
jg
or
int3
sahf
and
inc
fnstenv
sbb
repz
mov
aas
mov
push
mov
fsubrs
fstp
fsubrs
iret
data16
out
cmp
mov
lahf
push
fnstcw
out
mov
mov
sbb
cmp
test
movsb
mov
mov
adc
jne
mov
mov
cmpsb
mov
xor
decb
mov
lods
jnp
mov
mov
stos
jnp
fidivs
scas
fisubrs
pop
xlat
leave
mov
arpl
push
jmp
repz
xchg
push
xor
jne
mull
cmpsb
sbb
inc
in
fwait
mov
scas
das
inc
stc
pop
inc
sub
fildll
icebp
mov
or
jnp
fdivrp
mov
pop
imul
pusha
adc
add
outsl
outsb
fsubrl
lret
mov
inc
fincstp
mov
or
aad
mov
lret
dec
mov
mov
cmp
jnp
mov
push
jb
cmpsl
test
aad
outsb
push
outsl
xchg
movl
add
jl
lret
movsb
hlt
pop
xchg
mov
push
fisubrl
out
enter
outsb
cmpsl
shlb
dec
out
mov
xchg
in
decb
mov
mov
ficomps
mov
adc
ss
and
mov
or
mov
test
aas
into
addb
add
adc
sub
cmpsb
mov
mov
repnz
aaa
sub
sti
pop
sub
js
mov
bound
push
push
cmpsl
int3
xchg
mov
pop
shll
jg
and
lahf
add
cmpl
mov
fdiv
push
adc
sti
mov
mov
xchg
cld
add
mov
pop
dec
or
inc
jl
pop
dec
push
pop
mov
aad
bound
sbb
scas
rcll
jg
lock
dec
pop
xchg
pop
or
stos
add
test
data16
dec
add
ja
imul
js
dec
fwait
clc
cmp
or
mov
in
fcmovnbe
jmp
out
fdivrp
fcoms
xchg
dec
out
mov
dec
xchg
das
repnz
add
push
add
rcr
pop
cld
push
loopne
inc
fucomp
gs
pop
and
fisubrl
pop
in
shlb
js
in
std
push
mov
jae
mov
iret
shl
dec
add
std
leave
cmp
lahf
loopne
scas
xchg
jo
mov
fdivs
cmp
pop
mov
aas
je
test
mov
inc
jae
pop
aas
cmpsb
push
aam
pop
sub
cmp
test
jecxz
sub
aaa
xor
jl
fucomp
cli
stc
dec
jl
lret
xchg
xchg
ficompl
push
pop
in
popf
in
adc
inc
je
popf
xchg
pushf
hlt
xor
xlat
dec
iret
out
fstps
fstpl
ror
inc
jg
in
push
outsl
jl
into
scas
add
icebp
in
add
mov
mov
ja
repz
sti
pop
adc
adc
jns
test
sarb
xchg
outsl
mov
pop
jge
js
xchg
lahf
sub
mov
test
mov
adc
mov
rcrb
sarb
sahf
mov
inc
jno
movsb
int
lret
subps
and
xchg
lock
mov
or
mov
out
jg
mov
rcrl
mov
inc
mov
jo
imul
dec
jae
iret
ret
in
add
push
aam
pop
test
mov
movsb
xchg
mov
nop
das
sub
incl
scas
loopne
fisubrs
fbstp
xchg
rol
repz
fwait
cmp
jle
mov
sahf
cmp
cmpsb
adc
outsl
dec
mov
sahf
test
and
mov
jg
and
mov
push
jne
arpl
ds
lods
mov
leave
mov
push
mov
mov
push
loopne
ret
xor
xchg
aam
adc
aam
shlb
rcr
or
loop
call
pop
pop
les
es
hlt
stos
scas
std
mul
out
fwait
shl
aaa
and
sar
xchg
subb
xlat
lods
imul
leave
add
insl
jp
cli
cmp
cmp
ja
hlt
test
sub
mov
cmpl
data16
outsb
or
clc
test
lods
imul
jne
mov
dec
mov
fnstenv
je
mov
aam
imul
imul
push
xlat
push
cmpsl
insb
add
insb
ror
mov
pop
add
xor
loope
fisttps
je
fdivrs
add
test
mov
lret
inc
icebp
adc
stos
fwait
enter
mov
mov
push
or
xor
mov
pop
lock
xchg
into
sub
div
clc
fimuls
xor
push
stos
cs
cmp
stos
add
jmp
aaa
push
fnstenv
pop
mov
cmpsb
scas
push
sub
mov
test
mov
out
xor
dec
test
and
dec
fidivl
ficompl
push
jmp
pop
addb
iret
jl
xor
push
daa
inc
mov
sub
push
repnz
mov
cmp
iret
fistps
jne
test
fucomip
sti
push
or
cmp
jnp
pushf
jno
fld
iret
mov
fwait
ret
ret
mov
add
fnstcw
in
adc
add
pop
in
pop
inc
inc
jmp
jecxz
arpl
cwtl
rcl
xor
cmp
xchg
movb
out
icebp
inc
test
pop
in
jp
mov
adc
insb
jno
and
jb
xor
in
cmp
test
xchg
pop
xorb
jmp
fisubl
filds
ja
movsl
enter
lea
aad
xchg
mov
cld
insb
sti
aaa
inc
mov
cmp
bound
and
xor
mov
jp
aad
sub
hlt
stc
dec
out
nop
stos
and
scas
js
imul
cmc
cmp
xchg
pop
roll
lods
mov
or
leave
push
sbb
movsl
mov
add
push
push
stc
pushf
or
mov
mov
jo
mov
push
pop
in
xor
mov
lret
cs
dec
sub
add
pop
push
sbb
pop
xchg
data16
in
mov
dec
sub
int3
outsl
ja
pop
sbb
lds
jge
pop
sbb
mov
add
sub
or
insl
scas
pop
cmp
sbb
or
cmp
and
shrl
clc
js
dec
shll
mov
adc
enter
xchg
push
jbe
ja,pn
call
xor
cmp
push
testl
stc
push
stos
add
xchg
dec
aaa
notb
inc
jae
inc
aaa
cwtl
hlt
xor
mov
jg
xchg
push
push
push
je
mov
jecxz
add
stos
jecxz
stos
fstl
inc
cs
cmp
test
ja
jbe
jp
fnstenv
inc
pop
xor
add
cmovo
out
icebp
cld
xchg
movsl
clc
add
hlt
movsb
push
sarl
jae
pop
dec
inc
xor
aas
std
add
lahf
sub
ja
dec
leave
mov
mov
pop
ret
out
leave
jae
hlt
stos
lods
mov
in
mov
in
mov
not
fiaddl
insl
test
mov
push
sub
pushf
mov
add
add
mov
dec
cmp
out
movsl
loopne
dec
push
fwait
repz
filds
xchg
cmp
inc
sub
fs
push
dec
pop
je
push
test
pop
dec
mov
pop
jnp
repz
sbb
mov
lret
push
das
push
mov
xor
inc
sbb
andl
push
add
sbb
mov
dec
jo
ss
sahf
or
jno
mov
pop
xlat
nop
test
xor
xor
andb
push
mov
iret
ss
sbb
out
daa
xchg
add
sbb
mov
repz
fs
xor
out
je
test
add
nop
dec
xchg
cli
lcall
insl
aaa
jo
jge
cmp
fwait
cmpb
gs
jno
out
pop
inc
shl
pop
in
loopne
cmp
pushf
aad
iret
shll
subl
add
adc
outsb
inc
sub
fidivrs
loop
cmp
mov
mov
and
aas
cmp
lds
movsb
dec
pop
neg
mov
pop
cmc
jnp
js
add
mov
lahf
push
mov
xor
pop
mov
das
mov
out
pop
ljmp
jl
notb
jne
test
lods
dec
jg
or
lret
out
mov
and
mov
repz
cmp
xor
lar
adc
popf
push
push
pop
sub
cmpsl
cs
cmc
mov
jns
pop
fsubrl
lea
in
orb
mov
mov
sub
popfw
cmp
cmc
push
test
mov
mov
mov
iret
pop
arpl
mov
xchg
outsb
pop
xor
adc
xor
orb
dec
ffree
push
cld
sti
call
mov
add
out
movsl
neg
lock
in
and
mov
pusha
mov
in
pop
stc
add
test
pop
lret
js
jle
mov
sar
sbb
dec
pop
xchg
sbb
mov
stos
pop
popf
std
add
push
inc
fldt
xchg
outsl
movb
fsubrl
stos
int
mov
xor
das
push
out
fbld
divl
cltd
sub
mov
xor
inc
ja
cmp
push
cmpl
cmpb
add
jl
pop
test
inc
jge
fisttps
mov
fidivrs
jp
sti
inc
pop
cmpl
test
inc
sbb
fsubrs
cli
fdivl
inc
or
iret
imulb
jbe
test
xchg
test
lret
fs
cltd
sti
mov
pop
lret
sub
mov
sbb
push
xor
test
movsl
inc
adc
sti
test
or
sar
push
and
filds
jecxz
test
pop
pop
mov
jg
in
out
lret
rolb
in
mov
mov
subb
add
mov
or
mov
mull
mov
cmpsb
ret
mov
imul
xchg
enter
aaa
leave
scas
cmp
clc
sti
mov
mov
dec
nop
mov
mov
xor
mov
push
xchg
imul
pop
int
std
fidivs
sub
arpl
in
or
dec
cmc
lahf
leave
out
outsb
movl
mov
in
mov
mov
cs
sbb
sbb
lods
fmuls
mov
bound
mov
mov
repz
bound
xlat
notb
clc
push
pop
pop
add
pop
in
xor
push
mov
mov
pop
sti
jg
jmp
loop
sbb
and
hlt
add
xor
movsl
add
lock
and
std
push
iret
les
lahf
push
pop
push
mov
jbe
adc
xchg
bound
pushf
rcll
sbb
or
sarl
or
outsb
iret
aad
int3
cmc
sti
loop
push
mov
fildl
loop
pop
mov
adc
icebp
cld
jecxz
push
je
sub
add
mov
daa
jmp
sub
adc
or
xor
jae
push
out
push
mov
ffreep
aas
cs
inc
mov
in
ljmp
out
adc
decb
cli
in
incb
mov
adc
popf
cld
imul
xchg
icebp
movsb
mov
mov
mov
pop
arpl
clc
outsl
dec
and
xorb
pop
push
in
scas
adc
das
xorb
arpl
xor
inc
jne
dec
push
mov
push
add
add
repz
std
mov
mov
cmc
iret
pop
push
add
mov
jmp
out
lahf
push
lods
jecxz
mov
xchg
shlb
repnz
xchg
adc
mov
loope
rclb
or
cli
pop
jo
sub
dec
jle
xor
push
fs
mov
lahf
insl
or
sub
ja
mov
mov
dec
push
imul
sub
inc
mov
mov
xchg
arpl
sbbl
das
addl
mov
or
sub
dec
dec
popf
subb
test
clc
out
ja
inc
cwtl
push
mov
testl
aam
and
scas
aas
lret
pop
popa
testl
mov
call
jecxz
stc
inc
mov
push
xor
leave
push
adc
xchg
and
out
or
adc
adc
mov
fldenv
je
scas
jnp
and
push
push
adc
sub
idivb
fsubl
add
leave
les
in
fldt
stc
in
cmpsb
pop
inc
pop
mov
outsl
sub
and
pop
cmp
jmp
and
mov
dec
mov
arpl
popf
fistl
jmp
mov
pop
dec
call
jl
dec
sti
xchg
out
jne
movsl
sbb
pushf
pop
shrb
mov
add
mov
dec
aas
or
into
dec
pop
inc
mov
mov
cmp
fdiv
pop
in
stc
lock
and
push
cmpsl
push
pop
lret
cmp
fisubrs
mov
inc
xchg
in
movsl
ret
cs
or
pop
sub
and
push
jbe
ja
mov
lods
jge
sbb
loopne
out
adc
push
push
jle
fisubl
jge
out
pop
test
and
mov
cmp
or
icebp
mov
nop
out
mov
popf
jle
lahf
scas
sbb
pop
pusha
rorb
ror
jg
xchg
sub
repnz
and
xchg
jne
pop
adc
fwait
push
push
loope
dec
mov
pop
and
pushf
inc
xor
jbe
scas
and
call
xchg
je
test
addb
lods
jnp
or
int3
push
pop
cltd
inc
xor
cld
add
inc
decb
xor
imul
in
cs
fsubrp
lea
lock
fs
pop
fists
js
lcall
inc
jle
lahf
push
arpl
aam
mov
fwait
scas
repz
xchg
mov
jg
add
out
ficompl
clc
mov
insb
sarl
sbb
fbstp
dec
jno
stos
ds
rdmsr
add
out
mov
outsb
dec
stos
mov
fisubrl
fldt
lcall
push
cmc
out
pop
out
push
stos
dec
inc
dec
mov
leave
fld
mov
mov
pop
mov
sahf
mov
sub
ds
mov
jne
mov
inc
rcll
inc
fs
imul
sub
push
cmp
or
ja
push
sahf
jne
pop
sub
loopne
dec
shlb
add
loopne
and
and
ffreep
cmc
push
pop
lea
fidivrs
jecxz
pop
int
push
mov
ljmp
mov
enter
and
shrb
xchg
sbb
aam
notl
inc
push
outsb
insb
pop
ss
cmpsl
out
sbb
jmp
cmp
std
mov
inc
aam
jmp
cmp
pushf
shl
fsubrs
cmp
imul
shufps
std
jnp
mov
inc
sti
lcall
cli
add
into
out
icebp
mov
jbe
cmpsb
inc
bound
jbe
sbb
push
jae
testb
push
lock
or
in
lahf
pop
xorl
divl
mov
jns
jmp
adc
ret
in
cld
divl
scas
jne
fwait
inc
ja
insb
push
sbb
xor
cmp
lods
int3
xchg
fwait
pop
pop
sahf
roll
or
xchg
ret
add
dec
pop
push
ljmp
cli
push
mov
xor
in
or
jne
mov
mov
sub
in
xor
psrad
jnp
ret
das
xchg
xchg
push
fs
arpl
jp
xchg
xor
andl
adc
adc
xchg
aaa
dec
clc
mov
outsl
fisttpl
sbb
andl
mov
mov
mov
or
lods
loop
lock
movsb
dec
jl
test
dec
mov
in
std
dec
movsb
or
pop
xchg
or
insl
push
sbb
cltd
xor
clc
adcl
stos
or
daa
mov
xchg
adc
jle
dec
stos
scas
inc
mov
enter
pop
or
push
outsb
scas
adc
sbb
and
jae
mov
cmp
sarb
and
loop
pcmpeqb
or
icebp
clc
iret
adc
psrlq
mov
pop
pop
decb
imull
popf
adc
xor
sub
sbb
mov
jne
addr16
mov
insb
int
xor
bound
repz
add
pop
pop
mov
call
lret
jmp
lea
out
pusha
xchg
inc
mov
adc
cmp
sub
or
jg
mov
leave
outsb
gs
cmc
sbb
jno
in
dec
outsw
push
xchg
mov
daa
jecxz
lods
ficoml
in
sbb
arpl
fisttpll
adc
mov
stos
outsl
js
inc
mov
adc
mov
mov
loopne
jmp
mov
add
cmp
mov
aad
mov
imul
loopne
fistps
xchg
scas
mov
mov
popf
xchg
sahf
inc
xor
je
xorl
in
xor
jg
fwait
popf
mov
stos
pop
out
fimull
in
mov
adc
inc
mov
pop
mov
cmp
dec
flds
push
lods
iret
insl
mov
or
ficomps
aaa
xor
jmp
jmp
push
in
mov
mov
divl
in
enter
inc
sbb
pop
mov
add
sub
rclb
stc
orb
mov
mov
loopne
movq
cltd
test
icebp
adc
frstor
mov
xor
pop
mov
sarl
inc
jl
mov
lods
push
xor
or
pop
out
push
mov
adc
repnz
add
mov
jecxz
aas
cltd
into
ficoms
sub
stc
dec
pop
scas
fld
push
pop
insl
jmp
mov
scas
sub
or
xchg
ret
idivb
rcl
push
pcmpgtd
adc
sbb
dec
repz
movl
lock
cmpsl
mov
aad
xor
pop
sbb
and
mov
sub
dec
int3
negl
cmpsb
icebp
inc
dec
cmp
sbb
xchg
and
mov
jg
aad
mov
xor
fmul
add
ljmp
leave
test
mov
mov
dec
fisttps
pop
push
sbb
testb
rclb
imul
xchg
sahf
mov
sub
sub
je
adc
jno
andb
aad
pop
aaa
mov
cmp
mul
cmp
mov
clc
imul
push
daa
sub
or
xchg
add
dec
loope
pop
shl
cmpsb
outsb
out
mov
mov
xor
fldt
mov
xchg
push
cltd
xor
ja
iret
mov
lods
into
shll
test
mov
pop
fsub
js
jecxz
xlat
repz
mov
stc
js
test
clc
pop
leave
repnz
ret
inc
ja
mov
cmp
mov
mov
mov
test
negb
leave
mov
fcmovnu
mov
int3
mov
roll
lahf
dec
outsl
popl
dec
pop
inc
out
dec
fldt
jg
mov
pop
mov
nop
outsw
fidivrl
shlb
mov
rorl
cmp
popl
dec
out
adc
mov
lock
xor
pop
sbb
or
lret
fwait
sub
xchg
pushf
inc
int
pop
pop
sub
add
ret
in
mov
mov
mov
or
or
fcomps
pop
pushf
test
dec
and
iret
adc
pop
jns
mov
nop
adc
lods
imul
loope
test
es
out
pop
aam
jmp
movsb
into
mov
mulb
and
js
mov
adc
out
sub
frstor
mov
iret
mov
in
xchg
out
jno
push
bound
dec
imulb
push
xchg
ljmp
or
sbb
les
ret
jmp
mov
mov
aaa
enter
shl
pop
imul
insl
aad
stc
mov
daa
fcoml
lds
pop
dec
ds
cmc
lahf
cmp
mov
add
sti
inc
cmp
test
sbb
icebp
dec
ja
notl
xchg
cmp
popf
movsb
mull
sbb
fnstcw
inc
mov
iret
dec
xchg
sub
pop
or
mov
and
mov
inc
fbld
mov
jg
cmpb
jbe
dec
jne
pop
jmp
cmp
pop
inc
jg
test
pop
int3
sti
cmc
lods
cmp
cmp
push
or
lahf
push
fistl
packsswb
imul
iret
ret
mov
divb
fistpll
add
fiaddl
cmpsl
adc
mov
pushf
sbb
scas
push
xor
sti
mov
cmpb
cs
clc
adc
into
push
pushf
jns
test
mov
mov
out
jle
mov
ficoms
ss
add
push
cli
and
out
mov
rol
sbb
push
push
mov
test
loopne,pn
lret
insl
loope
sbb
out
or
xlat
arpl
xchg
out
insb
dec
xor
insb
mov
push
cmpl
add
pop
hlt
push
test
mov
loop
fdivr
in
mov
sbb
mov
mov
jl
dec
inc
out
lcall
xorb
add
mov
aaa
and
scas
dec
jns
push
testl
xchg
cli
pop
mov
sahf
roll
lds
dec
push
mov
mov
idiv
mov
iret
ret
inc
hlt
mov
xor
push
dec
adc
dec
dec
loope
inc
mov
sbb
aam
pop
lds
enter
fcmovb
push
pop
lahf
adc
iret
adc
fninit
mull
dec
arpl
mov
xchg
xor
mov
hlt
mov
add
cld
icebp
or
mov
cmp
ss
scas
loop
mov
push
out
mov
sbb
pop
cs
or
leave
dec
xchg
sub
int3
xor
cs
aas
vpaddusb
pop
add
or
mov
cmp
jnp
outsb
cmpb
push
scas
jge
lock
inc
mov
push
dec
ds
sub
scas
mov
lock
jle
push
add
adc
xchg
insb
inc
shl
add
push
std
mov
push
fs
xor
adc
cmpsb
into
sbb
imul
test
mov
mov
idivl
jb
cli
mov
mov
fistpll
add
sbb
loop
clc
inc
lcall
xor
ret
mov
mov
sar
sub
scas
mov
ret
in
and
in
push
fldt
pop
sbb
cld
push
movsl
mov
aas
mov
scas
pminsw
jmp
jne
imul
fwait
sahf
ret
cs
incl
imul
adc
clc
dec
ja
xlat
imul
adc
arpl
idivl
mov
sbb
lods
or
fisttpll
js
pop
in
ror
jp
sbb
cwtl
fisubrl
cs
cld
out
push
out
cwtl
std
rol
adc
dec
mov
loopne
jecxz
cmp
je
aas
flds
lret
xchg
out
loop
sub
add
lds
mov
ficoml
add
js
lods
add
jbe
nop
mov
sub
jecxz
push
lahf
jmp
dec
jl
mov
mov
xchg
push
xlat
movsb
jl
fcmovnu
in
xor
adc
clc
aas
mov
cld
push
xchg
and
and
shll
jecxz
sahf
xor
xchg
or
push
ljmp
je
ljmp
fldcw
pop
das
ret
mov
lea
xchg
jmp
movsl
jle
inc
out
leave
xchg
or
repnz
out
jae
int
push
test
scas
sub
out
loop
mov
inc
in
insb
je
mov
mov
mov
mov
je
fsts
cmc
xor
mov
divb
inc
es
dec
add
out
dec
sbb
or
mov
jmp
sub
mov
pushf
mov
addr16
jns
inc
cmpsl
pop
mov
popa
mov
lds
or
push
scas
cltd
push
sub
pop
decb
enter
push
jne
imul
mov
mov
mov
inc
insl
lret
test
negb
xchg
mov
in
xchg
repz
inc
jg
jb
or
jle
loop,pn
lock
sbb
loope
mov
pop
cmp
cmp
lret
iret
pop
jo
stc
jnp
outsl
lods
dec
inc
adc
and
add
out
sub
inc
dec
fisubrs
imul
cs
xor
scas
adc
pop
pop
outsb
daa
popf
and
ja
push
cli
jb
or
enter
leave
cmpsl
mov
movsl
ret
pop
jle
pop
cwtl
jg
mov
scas
loopne
insl
push
jbe
pop
in
jmp
clc
push
iret
enter
das
dec
jg
mov
roll
ss
out
xchg
pop
fsubl
mov
sub
xor
xchg
lret
fldl
xorps
insb
test
add
cs
mov
shl
loop
cmp
dec
subb
sub
pop
cwtl
dec
push
das
aaa
inc
adc
xor
imul
pop
in
xor
cmc
mov
cmpsb
inc
mov
inc
mov
push
cmpl
out
adc
call
sahf
adc
jbe
in
outsb
jns
testl
cmpsl
adc
mov
ret
in
adc
mov
mov
out
mov
and
hlt
ljmp
xchg
dec
jle
xlat
jne
or
fsubr
rcrb
repz
fbld
xchg
iret
push
mov
push
outsb
or
inc
push
mov
dec
inc
jp
push
pop
jle
stos
or
jbe
test
pop
lret
lahf
push
scas
add
stos
and
pop
and
inc
sbb
insl
mov
call
scas
xor
stos
sbb
mov
loope
bound
xlat
gs
push
int
and
xorl
and
outsb
das
pop
xchg
xor
jmp
xacquire
fstpt
mov
mov
add
pusha
xchg
imul
aad
mov
std
mov
push
imul
sbb
cmpsb
jns
pop
test
pop
cmc
in
stc
and
mov
div
jnp
movsl
sbb
mov
mov
cltd
movb
fcomi
repnz
hlt
insl
addr16
jecxz
cmpsl
fwait
jmp
mov
test
pushf
arpl
scas
mov
sub
jae
sbb
lea
aas
lock
xlat
push
adc
repz
mov
adc
push
mov
mov
push
iret
xor
stos
sahf
inc
and
or
in
out
jno
jbe
lcall
xlat
or
jne
sbb
outsl
xchg
dec
fucomip
mov
sti
int
rcrb
mov
mov
ret
mov
call
cmp
ret
scas
cmp
mov
cmpsb
sbb
fsubrp
dec
jg
dec
or
mov
jp
pushf
pop
sbb
into
into
fwait
jmp
cmpsb
repnz
mov
sub
mov
pushl
push
insb
js
outsb
hlt
btrl
pop
in
scas
mov
push
addr16
ds
pusha
cmp
pop
pop
frndint
add
int
aas
lret
popf
and
imul
push
sub
loope
lret
cld
mov
jle
pop
sub
mov
scas
mov
cmpsb
xchg
pop
sub
out
xlat
xchg
imul
mov
xlat
xor
push
cmc
fucom
loop
jecxz
ret
pop
notl
xor
dec
in
sahf
stc
xchg
out
mov
cmp
mov
add
stos
mov
imull
out
je
sarl
mov
fdivp
jmp
popf
mov
jns
in
aam
mov
jmp
push
rorl
mull
outsb
pusha
inc
sub
mov
sub
es
inc
mov
pcmpeqw
cli
rcr
xor
cli
je
insl
lods
orl
pop
loopne
add
dec
mov
cmc
jae
jbe
sahf
sub
scas
push
ds
and
in
mov
jae
xlat
sub
inc
sbb
out
pop
stos
sub
ja
mov
or
jnp
pop
ljmp
mov
pop
xor
mov
hlt
fsubl
lahf
adc
dec
popf
jge
xor
pop
push
fnstsw
xchg
sahf
sub
es
enter
cs
xor
jmp
rolb
test
adc
outsl
inc
inc
xchg
sub
cmpsl
push
iret
adc
je
movsb
push
mov
iret
pushl
nop
icebp
sbb
flds
out
cmpsb
add
dec
jl
scas
mov
ja
cmp
addr16
ficompl
sahf
add
loopne
iret
outsb
dec
pop
test
cli
int
xor
es
in
mov
out
shll
outsb
add
add
cmp
lahf
test
das
sub
call
add
push
mov
xchg
cmp
imul
sbb
testb
xor
push
sbb
sub
mov
pop
push
aas
push
aad
divl
lock
popa
inc
mov
movsl
loopne
sbb
and
cld
test
fcomi
ljmp
inc
mov
scas
stos
mov
aad
lds
ds
sub
sahf
mov
out
aam
subl
xlat
fmull
xchg
mov
fnclex
mov
outsl
xchg
mov
inc
adc
cld
or
repz
ret
or
ljmp
xor
sarl
pop
sbb
fcmovnb
cmp
ficoms
lret
aad
pop
jae
pop
lahf
addl
stc
push
scas
add
aaa
flds
cs
ja
lahf
sbb
fsubr
repz
pop
idivl
outsl
mov
sahf
cmc
jne
out
mov
push
shlb
mov
add
sub
pop
idivl
push
xlat
arpl
jecxz
pop
push
cmp
sbb
loop
stos
ret
movsl
test
test
mov
scas
iret
lods
cli
outsb
jno
cmpsl
and
inc
push
sbb
outsb
dec
out
inc
sub
enter
fisubs
or
dec
aaa
sahf
jno
aaa
xchg
mov
out
enter
dec
inc
enter
fmul
loop
les
pop
jmp
dec
xchg
cmpsl
adc
xor
das
movsl
lret
xchg
xchg
mov
push
orl
rcrb
dec
mov
jbe
cmp
pop
inc
mov
outsl
mov
mov
mov
dec
and
in
stc
push
enter
int
dec
aas
stc
out
mov
stos
xchg
jmp
lock
xor
cli
test
fildll
push
sahf
inc
mov
fbld
jge
pop
loop
ss
add
fbstp
push
sub
fildll
stos
fisttpll
sbb
mov
fists
insl
dec
mov
inc
xor
dec
inc
pop
or
mov
insl
xlat
adc
aas
push
or
mov
cmp
jnp
and
int
sahf
fnstcw
mov
in
leave
add
bound
adc
cmpsb
jecxz
push
lds
cld
insl
inc
rolb
xchg
jecxz
add
fidivl
ds
bound
or
xor
loopne
lcall
sub
cmp
test
out
bound
pop
das
es
outsb
enter
lds
std
dec
fdivl
sahf
ret
lret
das
popf
fisttps
ds
call
in
arpl
push
mov
int3
sarb
mov
ja
sub
out
cli
repz
ja
bound
sbb
mov
lock
orl
loop
addb
loopne
fistpll
leave
inc
dec
ds
mov
aas
mov
out
icebp
testl
push
pop
cmp
jl
cli
adc
mov
and
push
je
fisubl
fwait
and
outsl
pop
test
jecxz
popf
arpl
mov
pop
mov
imull
sti
cwtl
push
orb
sub
subb
ss
mov
adc
and
push
arpl
mov
cmp
mov
push
mov
testl
inc
push
pop
stos
repz
adc
inc
and
idiv
scas
xor
mov
test
roll
xchg
and
sbb
pop
mov
dec
ds
stc
push
repz
aam
cmpsb
into
inc
test
aas
movsl
mov
adc
mov
push
scas
lock
cmp
rcll
xchg
cmp
outsb
mov
inc
lods
or
pop
popa
lcall
idivl
mov
jl
sbb
mov
fsts
leave
hlt
pop
repz
mov
mov
out
movsb
xor
out
inc
cwtl
mov
fucom
mov
rcrl
pop
add
mov
neg
cmp
mull
lock
aas
neg
insb
adc
pminsw
test
scas
add
idiv
sti
mov
or
sbb
adc
lret
fwait
adcl
fstpl
add
daa
jno
mov
daa
mov
mov
mov
rcll
pop
ss
xor
mov
call
jae
cmpsl
mov
das
enter
ja
lahf
enter
or
movb
sbb
mov
insl
lahf
cmp
push
fistps
jmp
mov
out
mov
ljmp
sahf
mov
movsl
mov
lds
int3
mov
xor
out
testl
sub
shll
test
mov
outsb
mov
notl
jbe
subb
cmp
push
je
push
fucomi
lahf
clc
je
jl
mov
das
jmp
push
inc
in
dec
jg
pop
sbb
test
jns
call
out
push
mov
and
stos
adc
lods
bound
mov
addl
iret
cmp
add
push
adcb
lcall
mov
test
lock
xchg
or
shl
or
leave
sahf
repnz
lds
lods
insl
pusha
cmc
shr
mov
mov
nop
mov
mov
fxch
inc
add
test
push
outsl
mov
mov
aad
inc
arpl
repz
mov
out
inc
es
and
loopne
sub
test
adc
add
or
rorl
mov
ljmp
mov
mov
xor
cmp
pop
push
sti
xor
jg
jnp
mov
xor
xor
imul
inc
sub
push
mov
or
push
insb
cmp
fnsave
jnp
mov
fldcw
in
fldcw
scas
imul
ret
movsl
push
mov
inc
loope
pushf
fisubrs
inc
data16
sbb
lret
cmp
vcvtss2si
adc
cmpsb
cmpsb
lock
arpl
gs
cli
enter
and
pop
or
adc
imul
or
inc
cs
pushf
in
pop
mov
mov
iret
out
add
xlat
lahf
mov
lcall
push
jg
ret
jmp
mov
xor
nop
out
insl
iret
or
push
cmpsb
leave
push
mov
movsb
lea
push
cmpsb
push
dec
scas
fdivp
aas
mov
or
cmc
add
in
ret
scas
ja
jmp
jg
icebp
loopne
adc
aad
jp
pop
mov
dec
test
addr16
and
scas
fildll
fldl
mov
ret
jg
cli
ret
jecxz
aaa
data16
imul
movsl
imul
dec
das
fincstp
xor
idivb
mov
test
pop
aad
ss
inc
mov
in
and
push
aad
loopne
lods
outsb
ja
mov
jbe
fucomip
test
jle
adc
lret
rol
cmp
and
lock
cli
pusha
xchg
inc
les
pop
das
imul
xchg
rorb
sub
mov
repz
in
movsl
xor
lea
stos
pop
dec
fldcw
jp
push
jecxz
push
dec
int
xchg
mov
sar
icebp
add
pop
clc
cmpsl
call
cmp
daa
leave
mov
icebp
outsb
je
hlt
aas
xor
and
jl
jmp
add
cmpsl
push
add
xor
pop
repz
mov
or
cs
out
lret
inc
pop
sub
stos
pop
pop
daa
push
jne
pop
outsb
add
sub
sbb
dec
mov
mov
xor
sub
iret
mov
cmpsl
lahf
movsl
test
add
sbb
jmp
mov
sub
enter
push
neg
and
or
test
es
arpl
pop
mov
js
mov
add
pop
sbbb
scas
stc
pop
hlt
icebp
clc
testl
mov
outsl
rcl
mov
xchg
push
mov
divb
repnz
in
jg
fstps
iret
ja
popa
lret
pop
push
mov
mov
jecxz
dec
ljmp
inc
out
jle
jnp
movsl
negb
aas
mov
pop
lret
dec
mov
ret
out
imul
addl
xlat
push
push
sub
cmpsb
dec
mov
fidivrs
scas
aad
movsb
add
sbb
xlat
sub
stos
mov
sbb
jne
mov
dec
pop
shlb
loop
shrl
nop
shlb
cld
ret
ret
repz
je
jmp
mov
mov
dec
rclb
and
jmp
and
mov
xlat
scas
loop
sub
mov
mov
pop
cmpsl
sub
push
push
jae
aad
scas
stos
cmp
push
fwait
cmpsl
fisubl
sahf
mov
lahf
mov
fidivrs
outsl
sti
fdivl
jp
push
and
xor
iret
lahf
lock
imul
mov
jno
iret
retw
and
fmull
movsb
aaa
sti
pop
mov
sbb
push
cwtl
inc
addr16
mov
fyl2x
xchg
dec
jae
cmp
mov
or
cltd
mov
orl
dec
repz
sarb
jnp
aas
popa
insb
dec
cmp
mov
add
cmpl
cmpsb
mov
push
mov
insl
mov
pop
ret
push
decb
mov
mov
push
or
xor
cld
shlb
sbb
popf
mov
mov
insl
test
xor
mov
mov
outsl
repz
nop
mov
jbe
scas
xor
inc
nop
sub
aaa
not
dec
cli
movsb
ljmp
mov
pop
mov
sub
dec
fcmovb
cmpsl
push
inc
out
mulb
lahf
push
push
das
adc
mov
inc
cmp
pop
fisubl
fnsave
lahf
sbb
mov
mov
sub
jbe
mov
cltd
imul
xchg
cli
inc
cmp
cmp
add
cmpsb
xor
ret
jae
push
sub
mov
mov
mov
shll
mov
ret
popl
xchg
aam
mov
add
cmpsb
enter
call
sbb
inc
cmp
push
mov
add
pop
repnz
mov
in
mov
cmpsl
mov
daa
leave
fmulp
add
sbb
enter
adc
jnp
ljmp
sbb
cmp
jecxz
and
pop
daa
out
daa
jnp
repz
iret
mov
in
pop
outsb
sbb
mov
mov
mov
mov
jne
outsl
in
in
dec
jl
mov
dec
xchg
jg
add
jl,pt
stc
mov
jge
jne
mov
nop
ljmp
hlt
outsb
push
js
cmpsl
outsb
mov
dec
sub
gs
cs
mov
aaa
mov
inc
push
add
inc
arpl
lahf
add
cmpsl
jns
mov
mov
or
xchg
push
enter
sbb
cwtl
addr16
fwait
out
hlt
incb
jnp
jle
push
ja
ljmp
dec
sti
jp
out
fucomip
push
out
jecxz
scas
sti
cld
xlat
ror
push
inc
dec
sti
xchg
pop
dec
ret
push
push
pop
test
mov
cli
xor
lcall
sub
sahf
leave
in
sub
push
les
cmp
mov
leave
dec
or
pop
ss
inc
int3
sahf
scas
flds
jg
dec
faddp
lahf
sbb
loopne
xchg
shll
movq
adc
mov
popf
and
cmpsb
scas
sub
icebp
inc
jmp
dec
xchg
in
mov
add
sbb
cmp
dec
stc
jns
not
push
scas
sbb
repz
dec
jp
mov
lods
cmp
mov
ja
xor
sbb
inc
add
xchg
out
inc
inc
jnp
lahf
or
sub
aad
mov
and
jae
mov
mov
mov
jg
loop
inc
mov
nop
mov
mov
je
mov
popl
lahf
outsl
jecxz
jg
add
shl
mov
sbb
sub
hlt
xor
pushf
fs
outsl
popf
jg
mov
xchg
mov
iret
dec
clc
mov
or
test
pop
dec
pop
fld
imul
ret
lds
adc
imul
js
xchg
lcall
in
pop
mov
clc
adc
into
je
fsqrt
iret
jmp
aam
aas
ss
into
mov
cmpb
push
cmp
xor
mov
fwait
adc
jnp
pop
push
mov
shll
xor
mov
push
scas
cli
stos
lahf
sub
scas
sub
sbb
test
add
push
ds
mov
mov
cs
repnz
lods
pop
ja
pop
sti
mov
sub
data16
pop
adc
pusha
shll
mov
test
out
mov
sti
push
push
outsb
and
mov
je
outsb
fstp
pop
cwtl
mov
cwtl
aam
sbb
ret
fcompl
sbb
mov
cmp
lahf
movsl
cmpsb
repz
mov
stc
adc
mov
dec
sub
in
testb
stos
jo
test
mov
jmp
loop
or
jb
push
insb
mov
inc
dec
loop
mov
sbb
leave
mov
mov
mov
dec
jg
mov
jecxz
lods
jmp
cmpsb
fldcw
lods
insb
icebp
ljmp
loope
sahf
xlat
push
imul
push
lret
dec
cmpl
lds
adc
ret
adc
subb
xor
repnz
lahf
mov
sti
cli
lahf
or
aad
out
cmp
sub
ja
pop
hlt
addr16
repz
out
aam
pop
out
fmuls
add
or
mov
arpl
aad
jecxz
push
jmp
not
xchg
out
sbb
loop
or
fcmovnb
mov
ss
lea
sar
arpl
mov
jg
clc
repz
lahf
adc
lods
and
ds
stos
pop
rcr
cmp
mov
sub
or
in
pop
sti
mov
xor
mov
jne
jmp
pusha
sti
sbb
orb
pop
out
xorb
jae
xlat
test
xchg
ljmp
lds
fcoml
loope
jnp
das
sub
xor
dec
pop
xchg
sub
jle
js
cs
shr
imul
jmp
cmp
into
push
das
iret
ljmp
icebp
add
push
in
sub
imul
call
aas
push
in
or
stc
sbb
pop
xchg
iret
aaa
push
sub
push
push
aaa
fcomps
add
xchg
scas
aad
fcmovnbe
sahf
int3
imul
cmpsb
mov
add
jmp
push
mov
test
pop
fcmove
or
aaa
mov
mov
push
add
add
pop
loope
imul
in
inc
pop
leave
cmpsb
or
mov
jns
aas
dec
sti
icebp
cmp
add
cld
sahf
mov
xor
add
add
inc
fadds
in
fdivrs
inc
mov
incb
push
or
sub
add
stos
mov
sti
fisubrs
das
pop
std
inc
ret
outsb
out
fwait
dec
xlat
mov
fsubr
hlt
and
fildll
nop
lods
mov
jne
rclb
mov
adc
fs
repz
mov
fisttps
dec
push
iret
mov
int3
adc
sub
cld
aad
ret
js
sbb
cltd
jne
add
adc
cld
nop
sahf
jmp
jbe
cs
mov
lcall
jmp
repz
push
xchg
int
das
ret
rclb
cmp
mulb
in
jp
cmp
ret
arpl
ds
fstps
sbb
pop
testl
fsubrp
mov
mov
inc
and
add
pop
imul
mov
cs
cwtl
jmp
push
xor
add
xor
jge
sub
dec
pop
sbb
sbb
aaa
pop
cmp
int3
dec
imul
pop
mov
sub
pop
lahf
ljmp
inc
mov
mov
cltd
ds
push
out
jae
cwtl
pop
xchg
fldl2t
scas
adc
pop
xchg
sbb
add
and
mov
repz
out
out
push
sti
ffree
repnz
jge
fbld
or
cs
lahf
loope
ret
push
popf
push
lcall
cmpsl
arpl
aas
dec
rcl
push
cwtl
pop
sub
inc
and
push
addl
lods
adc
mov
shl
je
in
stc
je
and
inc
cmpsl
idivb
rol
scas
mov
out
rcll
sbbl
jns
aad
mov
sbb
fcmovnu
outsl
mov
mov
push
and
mov
mov
jo
fwait
inc
mov
add
mov
fstpl
jg
and
pop
out
jle
jge
fistpll
cmc
mov
jge
ficomps
jnp
das
out
jg
daa
jg
pop
in
mov
mov
push
leave
scas
nop
sbb
sahf
sbb
fbld
pop
rorb
mov
aaa
push
pop
and
jno
mov
sahf
lock
int
iret
mov
pop
outsb
out
or
pop
and
push
repnz
cs
imul
ja
iret
orb
jns
mov
pop
inc
dec
aam
fildll
xchg
and
fisubl
ljmp
mov
fsubrs
call
es
sbb
fisubrl
cmc
test
fldl2t
inc
cs
pop
jnp
add
addr16
ss
iret
cmp
sbb
fbstp
xchg
xlat
jns
ja
xorl
dec
mov
icebp
loopne
in
push
mov
pop
movsb
shll
sbb
adc
es
sub
iret
pop
cmp
outsl
jle
jae
inc
call
movsl
testl
adc
movsl
push
and
sbb
repz
int3
adc
lods
xor
and
neg
fildll
xlat
and
ret
mov
repz
fsubrp
decb
sti
mov
movsl
js
push
je
and
mov
stos
inc
imul
inc
pop
mov
mov
pop
mov
pop
pop
psrlw
sub
imul
out
ret
notl
sti
iret
leave
loop
mov
jne
enter
ret
arpl
cmc
repnz
mov
mov
lcall
das
jg,pn
inc
mov
pop
lea
cld
xor
fbld
das
cmp
pop
outsb
out
sti
mov
in
jg
sub
sbb
mov
shlb
into
adc
mov
xor
repnz
mov
mov
inc
shlb
std
dec
adc
in
add
aas
movsb
movsl
sbb
add
fsincos
icebp
clc
out
ds
sub
adc
ss
mov
jo
jno
mov
fsubrp
fmuls
outsb
add
scas
clc
js
cmp
movsb
pop
fdivrl
out
or
xor
cmp
adc
adc
inc
rolb
inc
fistl
sbb
mov
shlb
mov
xor
xor
jg
js
pop
pop
scas
rol
insb
fidivs
dec
sbb
mov
outsb
lcall
fisttps
jg
out
mov
mov
andl
insb
xor
mov
out
addr16
decb
push
js
out
out
imul
fwait
movsb
xlat
add
pop
enter
nop
test
sti
inc
xor
mov
aas
rol
inc
jle
push
jecxz
jl
push
xchg
out
push
cltd
and
mov
add
out
and
jge
and
mov
jp
out
xor
and
popa
adc
pusha
fnstcw
mov
add
mov
aad
ds
lcall
mov
sbb
pop
cltd
shll
lret
lods
xlat
scas
or
lahf
out
ljmp
es
outsl
ja,pt
pop
cli
cmpsb
out
sbb
cmpsl
out
test
mov
popf
das
faddl
ror
nop
or
and
cmpsb
xlat
mov
call
mov
lods
testl
adc
mov
lods
add
repz
jno
cmpsl
push
lahf
adc
andl
aaa
es
mov
lods
xor
stos
rcrb
jno
loop
pop
enter
outsl
out
adc
inc
lahf
es
xlat
jno
xchg
sbb
jmp
sbb
lcall
jne
roll
adc
xor
mov
jmp
daa
xchg
jns
pop
cwtl
mov
pushf
in
pop
repz
aas
mov
push
sbb
pushf
mov
enter
xchg
imul
pop
ss
lods
xor
mulb
push
sub
jg
cli
cmpsl
and
pop
jnp
leave
outsl
push
outsl
jge
aad
xor
adc
add
xchg
bnd
sub
and
scas
adc
or
nop
cmpsl
sti
cmpsb
repz
inc
and
rcrw
push
loop
lock
push
out
pop
add
jae
add
scas
into
sti
mov
out
cli
test
sbb
in
xchg
inc
mov
push
push
movsb
scas
pop
fcompl
out
fcmovne
dec
repz
mov
mov
cmp
xchg
clc
or
mov
adc
iret
nop
jmp
insb
xor
mov
and
xlat
or
dec
nop
leave
mov
xchg
fisttps
into
and
out
xchg
pop
push
mov
loope
inc
fisubrl
sbb
jo
cmpsb
out
shl
test
fnstenv
sbb
inc
push
nop
fistpl
xor
xchg
mov
and
mov
sbbb
sub
aas
push
cmp
out
mov
add
sub
or
imulb
mov
rcl
out
cmc
push
add
fildll
add
fsts
add
and
pop
cmp
loopne
mov
lahf
sub
add
imulb
imul
test
add
das
ffreep
sbb
and
mov
mov
bound
inc
popa
add
sbb
inc
sbb
out
add
imul
js
push
sub
jg
xchg
mov
cmp
loopne
jecxz
push
fsubrl
stos
and
icebp
mov
mov
in
aas
std
and
gs
fstpl
jmp
push
outsb
mov
mov
or
dec
scas
call
arpl
push
push
cmp
in
popa
mov
inc
ret
xor
enter
pusha
dec
sbb
jne
push
leave
scas
jmp
jg
loop
adc
negb
test
aaa
idiv
das
mov
cmpl
cmpsl
outsl
push
jns
cwtl
mov
sub
jbe
shll
xchg
outsl
addr16
fstps
or
xor
or
lcall
adc
sub
pop
out
mov
add
repz
jmp
push
cwtl
fsqrt
jne
jb
jg
dec
movsl
scas
movb
push
dec
mov
popa
lods
sub
nop
mov
mov
in
in
jle
mov
ret
jmp
mov
sbb
pop
mov
mov
bnd
hlt
loop
sub
scas
sbb
xchg
or
ja
dec
jno
inc
push
lahf
sbb
jne
xor
fdivl
mov
push
xchg
call
adc
stos
push
pop
rolb
xor
aad
dec
loop
pop
mov
cli
pushf
lock
iret
fcmovne
fidivl
cmp
out
add
mov
pop
xor
pop
pop
outsl
mov
cmc
xchg
idivb
sahf
icebp
push
pop
testl
lret
pushf
icebp
es
pop
ja
es
mov
cmpb
sub
addl
iret
testl
jle
ja
sub
mov
in
sbb
cld
push
lret
sbb
mov
add
fistpll
xor
stc
incb
add
adc
das
int3
push
mov
sbb
iret
test
pop
or
dec
repz
fsts
iret
push
shll
dec
scas
out
subb
jmp
jl
sub
cmp
pop
lret
dec
outsl
into
sbb
push
inc
out
lds
xor
jnp
sbb
insb
add
fnstsw
pop
jge
push
mov
dec
pop
repz
or
cli
cmpb
ror
rcr
shrb
jo
ret
int
jnp
repnz
mov
jge
mov
ljmp
add
ja
pop
cmpsb
shll
scas
inc
xlat
cmp
lret
cmp
sbb
sahf
leave
out
jnp
push
mov
jecxz
lods
outsl
push
and
pop
mov
mov
sub
sbb
test
xlat
cli
out
bound
sub
mov
ss
lds
lahf
nop
loop
mov
rcrb
cli
adc
scas
aad
cs
pusha
pop
inc
divl
nop
dec
lds
dec
fsubrl
out
push
mov
or
jae
popa
fldt
mov
adc
pusha
cltd
inc
jg
pop
std
in
xchg
cmc
in
test
mov
js
imul
xchg
leave
adc
push
sbb
mov
push
sub
std
in
fidivrs
sub
notb
dec
lods
jp
ret
scas
shll
aad
jg
mov
in
mov
push
mov
aas
or
lret
mov
fldenv
fbstp
push
mov
or
pop
insl
shll
rcrb
and
fs
fwait
sub
ja
mov
shl
cmp
mov
lahf
fldenv
mov
rcr
rcr
jno
daa
push
push
dec
pop
in
or
cmpsb
inc
outsb
inc
sahf
adc
pop
loopne
adc
jge
xor
scas
mov
mov
add
sub
fmull
or
cmp
mov
dec
icebp
cmp
imul
jmp
hlt
testb
xchg
loop
mov
dec
adcl
scas
xor
fisubs
inc
mov
add
aam
movsl
dec
imul
mov
jbe
dec
inc
jl
stos
mov
xchg
mov
outsb
mov
pop
mov
push
jo
into
pop
aas
add
rorb
xchg
andl
das
pop
pop
mov
lret
or
jnp
xchg
imulb
push
inc
outsb
nop
es
mov
ja
enter
push
roll
rclb
insl
sub
sbb
sbb
push
push
rclb
sbb
in
push
stc
jmp
push
push
push
aam
push
cmp
jge
pop
lds
in
out
cmpsb
lock
jne
ror
gs
fs
cmp
sbb
pop
idivb
scas
test
insl
jg
loopne
ds
repnz
cmp
cs
icebp
add
mov
dec
pop
adc
sbb
push
xlat
notb
mov
je
call
add
iret
mov
push
lock
es
imul
mov
sub
sbb
dec
test
mov
mov
out
mov
sub
jae
xlat
lahf
mov
sahf
fildl
in
test
jle
loop
and
gs
out
mov
xchg
jnp
mov
call
cld
ljmp
scas
mov
imul
icebp
scas
or
jp
testb
repnz
es
jne
les
into
or
ja
mov
add
xchg
and
sahf
cmp
push
shrb
xchg
icebp
pop
pop
dec
mov
outsl
add
push
cmp
mov
fildll
ja
mov
pop
lods
aam
fxam
lret
out
into
stc
aas
repz
notb
ficoml
jg
jg
outsb
dec
in
push
fidivrl
pop
stos
imul
sbb
push
jge
ret
cmp
iret
dec
leave
mov
mov
repz
mov
xor
push
not
xchg
cli
xor
inc
jb
push
sub
iret
sbbb
dec
push
cmp
pop
test
aaa
addr16
mov
push
pop
into
cwtl
sbb
cltd
aad
mov
mov
cmpsl
push
mov
lret
lahf
dec
jl
pop
dec
mov
mov
loop
cmp
int
out
aas
and
leave
das
cmp
xor
xchg
in
jmp
jecxz
push
mov
or
rol
sub
jl
xchg
xor
xchg
push
iret
sahf
adc
mov
in
fcom
jmp
setg
cmp
sub
jo
ljmp
stos
pop
fldcw
scas
ficomps
int
add
mov
mov
adc
aas
lods
aam
mov
fcmovnu
mov
sbb
loop
in
outsb
and
or
imul
pop
and
or
xor
enter
inc
iret
repz
out
call
js
adc
inc
fmul
sbb
sub
mov
sub
jg
popf
and
xor
mov
out
xchg
icebp
pop
repz
ficoms
adc
mov
mov
imul
jne
scas
into
movsl
pop
jne
mov
fisubrs
stos
ret
cmc
xor
pop
sbb
pop
icebp
xorl
pop
lret
fcmovu
mov
pop
movd
movsl
add
call
fcomps
out
arpl
lret
xchg
push
aaa
xor
jecxz
add
repz
fdiv
pop
cs
push
shrl
fcoms
mov
aas
in
aas
imul
xchg
inc
in
or
loop
push
stos
imul
mov
es
jg
xor
push
not
cmp
dec
add
cmpsb
dec
int3
aad
iret
cmpxchg
das
lods
test
or
mov
leave
lcall
nop
syscall
inc
movsb
out
shll
mov
das
scas
icebp
sbb
pusha
imul
lahf
push
mov
imull
aas
cmp
mov
divl
adc
sbb
xor
jb
sub
outsl
mov
enter
add
jg
sbb
xchg
sub
mov
sahf
lahf
mov
jae
mov
jne
lret
push
xor
jmp
rol
sbb
mov
lock
aam
sbb
sahf
adc
xor
or
or
leave
out
in
test
mov
imul
mov
add
push
out
pop
sahf
push
cmp
cmp
pop
sub
sub
mov
je
lcall
jg
lods
and
imul
mov
outsl
sbb
push
lods
dec
add
xor
cmp
out
pop
mov
pop
push
cmp
std
pslld
ds
loopne
fsts
jecxz
leave
fcomip
jg
scas
mov
inc
out
cltd
push
jp
aad
mov
fiadds
dec
push
jecxz
scas
fsubrl
repz
fcmovbe
inc
out
mov
xchg
or
in
enter
xchg
jl
fcmovnb
and
ret
scas
add
sub
push
lahf
decb
movsl
push
aaa
in
out
js
leave
rcrb
cmc
iret
mov
out
rep
imul
movsl
fs
cmpsb
mov
adc
imul
xor
jg
cld
les
inc
jge
mov
push
mov
and
jb
dec
cmp
fdivr
lahf
jae
add
push
pop
mov
adc
shlb
fwait
inc
xor
sbb
mov
das
mov
mov
lock
sar
pop
outsb
mov
sub
std
out
inc
imull
mov
clc
in
adc
pop
mov
push
push
outsb
decb
icebp
gs
hlt
adc
or
add
sbb
into
imull
hlt
and
mov
fildl
out
and
or
mov
movd
and
int3
ja
and
mov
dec
cmpsb
mov
xor
outsl
cmpsb
adc
cmpsl
push
inc
ja
lahf
imul
pusha
enter
mov
mov
sahf
movsl
dec
push
mov
fistpll
lods
cmp
daa
pop
shrb
or
lret
jp
dec
xor
cltd
sahf
das
loope
push
sub
test
jg
imul
stc
push
dec
add
sbb
push
dec
cmc
imul
bndstx
rorl
fimuls
fcmove
mov
cli
rcrb
jno
dec
leave
mov
fnstsw
stos
mov
mov
lds
mov
adc
xchg
in
cli
ret
add
orl
das
or
sbb
dec
test
mov
add
adc
mov
das
adc
js
mov
fcomps
scas
outsl
xchg
test
in
cmpsb
out
push
insb
add
jp
arpl
mov
in
xor
pop
das
dec
cld
inc
push
loope
shll
aam
mov
arpl
push
insb
inc
subl
fisubrl
popf
xor
mov
inc
dec
out
sbb
lahf
pop
pop
lock
test
inc
push
cltd
xchg
iret
inc
ss
add
aas
jbe
incb
jbe
or
addb
push
mov
mov
lahf
or
inc
fisubrl
cmp
jmp
pop
movsl
pusha
and
push
insl
xchg
mov
dec
adc
dec
scas
repnz
fldt
sbb
sub
insl
subl
lds
loope
or
add
add
add
xchg
pop
mov
or
or
pusha
rolb
fdivrs
scas
clc
mov
lcall
mov
push
xor
js
stos
jmp
hlt
xor
out
leave
cs
lock
icebp
in
cmc
notb
stos
dec
add
and
in
sbb
add
pop
mov
adc
data16
sbb
mov
sub
popa
icebp
ja
cmpb
movsl
icebp
dec
loop
mov
insb
rolb
outsb
dec
mov
jg
dec
cmc
fbld
push
jg
mov
fbld
mov
subb
mull
fistl
push
out
aas
in
ret
mov
subb
and
jmp
dec
push
aaa
pop
jo
mov
mov
sbb
mov
fsubrl
outsb
lea
and
push
xchg
in
mov
scas
out
xor
icebp
pop
aam
jbe
lds
in
jge
ficoms
loopne
pusha
mov
fstps
in
add
outsl
jb
orb
push
pop
fmull
lods
xor
pop
loope
xchg
sbb
jmp
xchg
arpl
pop
mov
cmp
insb
js
mov
repz
clc
outsl
int3
iret
push
jecxz
rolb
xchg
test
add
pop
es
roll
aam
push
jbe
mov
adc
stc
call
rcrl
ss
and
push
adc
iret
pop
jno
das
sub
subl
fisubrl
aaa
stos
lahf
or
loop
sbb
popa
adc
jns
sub
out
inc
sti
add
subb
in
fdivr
loope
xchg
cld
mov
dec
push
cmp
outsl
test
mov
and
inc
lock
lret
mov
cmpl
xchg
push
mov
mov
rcrl
out
cmpsb
mov
mov
lods
sbb
push
aas
outsb
es
loope
cli
mov
ret
inc
outsl
imul
gs
push
data16
pop
jns
mov
inc
in
mov
add
mov
cmp
notl
shll
icebp
sbb
leave
cli
mov
mov
not
push
mov
inc
ja
sti
pop
es
pusha
and
lret
out
sub
sti
scas
xchg
out
addr16
sbb
inc
bound
mov
dec
call
xchg
outsb
mov
ficomps
add
xor
pop
testl
add
xchg
pause
sub
xchg
clc
outsl
inc
int
mov
shrl
sub
ret
push
repz
adc
and
sub
push
push
xor
imul
jb
mov
int
jg
stc
hlt
scas
sbb
xchg
and
and
dec
movsb
in
fldpi
cltd
ja
testb
stc
pop
and
cmp
xchg
outsl
clc
pop
mov
mov
push
dec
pop
xor
push
and
out
pusha
into
arpl
das
out
sti
jmp
push
dec
ss
cmp
mov
daa
cmp
cmc
mov
sub
arpl
fcmovne
push
jg
imul
cwtl
loop
into
mulb
pop
xchg
dec
movsb
push
push
mov
sbb
mov
data16
xchg
cmpl
fdivp
stos
dec
iret
mov
fldcw
iret
mov
adc
stos
out
lret
out
pusha
xlat
outsb
pop
std
pop
sub
ja
xchg
aam
fs
mov
je
jmp
mov
ret
inc
adc
ret
scas
in
xor
adc
in
xor
add
mov
aaa
push
hlt
xor
push
in
ret
add
mov
mov
pop
cmp
dec
xor
stc
clc
cmpsl
out
daa
fs
outsl
sahf
pop
cltd
fstpt
adc
outsb
push
cwtl
push
inc
jne
outsb
sub
xor
aad
out
lahf
arpl
dec
and
hlt
or
icebp
dec
xor
mov
out
sub
cmpsl
xor
incb
and
inc
jp
jg
xchg
jne
add
lcall
inc
movsl
lahf
cmpsl
mov
mull
cmp
repz
cltd
dec
push
pushw
inc
push
arpl
mov
lods
std
and
push
xor
ffree
cmp
mov
dec
data16
aaa
xor
mov
adc
xchg
jg
pop
lcall
push
adc
fcmove
testb
sbb
cmc
lret
out
mov
outsb
pop
bnd
pop
sbb
jg
push
imul
xor
push
outsb
pop
out
push
inc
into
sbbl
repz
loopne
or
std
pop
loopne
pusha
testl
icebp
xchg
out
add
out
fstps
fisttps
cmp
aaa
jecxz
xchg
in
push
fimull
adc
call
push
out
mov
gs
fisubrl
scas
push
jne
mov
or
add
pop
insb
std
sbb
dec
xor
cmp
cmpsl
pop
and
inc
fnstcw
frstor
and
outsb
lahf
xor
paddd
in
inc
es
mov
in
mov
stos
and
fwait
icebp
aas
inc
add
popa
mov
xlat
int
jae
cli
inc
sbb
mov
xor
mov
lock
call
or
jno
in
adc
int3
inc
mov
fldl
cmp
lds
jmp
inc
das
mov
mov
jb
xchg
pop
lods
dec
leave
or
cwtl
pop
aad
pop
push
lea
sbb
mov
popa
cmp
mov
add
icebp
add
push
sub
cltd
out
outsl
sbb
aam
mov
cwtl
adc
pop
iretw
rsqrtps
fadds
test
div
adc
push
sbb
and
jmp
movsb
sahf
jge
in
mov
add
xlat
scas
out
push
adc
xor
hlt
jg
out
imul
xlat
add
popf
cli
adc
jp
add
sub
leave
leave
jecxz
fdivrp
setnp
stos
cmc
pop
lods
sub
incb
or
fwait
aaa
repz
outsl
mov
push
sub
add
cli
or
xor
adc
adc
xchg
gs
ret
jo
sub
stc
loopne
adc
and
fildl
jl
push
pop
adc
std
adc
ret
cmc
jo
jo
divb
adc
mov
cmp
sub
hlt
fcomip
mov
mov
fsubr
xor
fildll
push
fstps
ret
fst
mov
mov
xchg
insb
call
out
lahf
out
jb
pop
xchg
pop
loop
xor
sarl
mov
sub
xchg
mov
cmp
jmp
inc
rorb
mov
jg
xchg
ret
leave
xchg
xor
pop
in
dec
fisttpll
popf
or
cmpsb
out
push
scas
call
das
sub
out
add
push
outsb
jbe
push
cs
dec
jns
mov
call
push
push
fnstcw
sarl
cmp
lahf
insb
push
mov
push
pushf
pop
cmpsb
mov
or
imul
in
and
inc
call
stos
fsubrl
lret
cmp
cmp
jg
inc
xchg
mov
sub
adc
in
pop
sub
repnz
and
or
addb
mov
push
mov
dec
or
das
inc
add
mov
pop
in
dec
fmul
xor
fisubrs
lods
mov
jae
sbb
mov
mov
arpl
cs
push
dec
push
icebp
fidivl
push
cli
fldcw
cmp
in
lret
repnz
sbb
mov
xchg
pop
out
mov
push
cmp
mov
cmpsb
stc
out
scas
and
sub
inc
push
mov
out
aaa
pop
mov
fidivrs
cmp
mov
xchg
jg
xchg
lds
push
popa
push
cmpsb
push
fs
xor
shl
outsb
add
out
icebp
add
movswl
and
ljmp
xchg
scas
outsb
iret
lock
ret
lds
ror
lret
movsl
ss
shlb
pop
mov
cmp
lahf
jmp
fimull
mov
inc
adc
nop
sbb
iret
test
xlat
orb
arpl
pop
movsb
in
mov
cmp
addr16
mov
mov
inc
stc
ja
pop
cwtl
and
push
int
push
lahf
mov
cmp
mov
adc
shl
cmp
ja
stc
adc
sub
iret
fsub
fistps
sbbb
push
loop
fcomip
testb
push
cmc
jl
mov
test
ret
xchg
scas
mov
sub
push
push
je
mov
dec
ret
in
in
int3
pop
psubusw
sbb
mulb
push
dec
addr16
stc
pop
mov
es
iret
mov
fbstp
imul
sbb
ja
xchg
sbb
mov
outsb
into
lret
sbb
xchg
data16
mov
xchg
jae
scas
out
rorb
mov
shlb
adc
hlt
pushf
or
outsl
stos
leave
jmp
mov
lcall
push
sub
in
orl
push
dec
leave
fidivrs
sbb
mov
movsl
lods
movsl
cmp
ret
push
clc
or
or
ss
fcmovnbe
cmp
dec
fldt
pop
cmp
pop
movsl
pop
xchg
cmp
mov
sub
aam
cmpb
cs
adc
in
jg
icebp
mov
pop
pop
sbb
popa
mov
pop
roll
rcll
iret
icebp
push
movsl
sahf
stc
jae
adc
jle
mov
xor
divl
jne
jnp
in
sub
scas
jg
scas
int
push
leave
xchg
fcomip
in
sbb
popaw
aaa
ja
sbb
cli
out
gs
pop
fs
iret
imul
adc
jnp
add
loop
fstl
mov
cmp
mov
mov
repz
dec
scas
pop
popa
rcr
jne
and
pop
je
arpl
jge
das
jg
iret
cmp
pop
jmp
mov
rcrl
pop
int3
in
shll
testb
mov
or
fcoml
pop
rcrl
aas
push
rcl
push
fildll
xchg
out
orb
shlb
push
dec
xchg
insl
cmc
cli
or
dec
xor
adc
dec
repnz
xor
cs
mov
into
dec
into
mov
pop
outsb
lds
lock
adc
dec
pop
mov
push
lahf
mov
fdivrp
not
popl
inc
lcall
xor
add
sub
iret
cltd
add
mov
lock
pop
pop
inc
fs
ret
lcall
loopne
sub
mov
jp
shll
mov
in
in
mov
addb
push
sub
in
mov
jb
imul
hlt
out
cld
inc
fsubrp
xchg
out
cs
clc
mov
mov
inc
push
sub
sti
add
inc
int
rcl
adc
ja
xor
and
hlt
icebp
dec
iret
mov
dec
lods
jbe
mov
popa
lods
lock
adc
sbb
ss
push
mov
jmp
icebp
adc
push
xor
jbe
add
addr16
popf
stos
lods
ljmp
fimuls
mov
lret
fiadds
lret
arpl
test
sbb
stos
dec
jno
cmp
cltd
mov
leave
inc
leave
scas
imul
or
jo
pop
jle
lcall
jg
popa
test
pushf
jecxz
pop
leave
jno
lods
mov
comiss
out
popf
repnz
and
push
pushf
push
fmuls
in
lock
lds
fwait
mov
lods
ja
cmpsl
xchg
fildl
mov
mov
pop
pop
scas
cmpsl
push
mov
loop
fnstsw
ljmp
sub
pop
mov
fsubs
sub
adc
inc
fdivl
pop
dec
dec
pop
out
push
adc
jg
sbb
aad
jecxz
mov
fnstcw
enter
dec
gs
aaa
lods
scas
div
in
inc
inc
filds
mov
cwtl
pop
cmp
shr
outsb
xor
mov
js
sbb
jmp
xchg
shrl
shl
mov
stc
xchg
stos
pop
xlat
negl
adc
add
mov
leave
sbb
insb
shlb
leave
and
sbb
aad
add
test
cmp
rcrl
jmp
es
xor
lahf
mov
sahf
leave
je
adc
inc
imul
jg
mov
cli
repz
xor
cs
int
scas
std
mov
mov
mov
mov
shll
ljmp
arpl
fnsave
rcrb
dec
lds
in
add
in
mov
insb
or
sbb
aaa
mov
lret
scas
xor
push
sbb
jmp
test
sahf
adc
jb
push
adc
in
aas
lret
pop
leave
push
inc
fnstenv
imul
popa
lret
cmp
movsb
jns
and
push
out
lea
scas
mov
xchg
repz
jge
repnz
imul
cmp
and
imul
cltd
push
popf
push
outsb
in
out
push
imul
fisttpl
fcoml
add
shlb
sarb
out
pop
push
push
mov
jno
mov
lahf
mov
mov
xchg
aad
xchg
inc
push
mov
xchg
jg
int
and
inc
aas
scas
sbb
sti
pop
daa
dec
shll
arpl
into
jge
fsts
enter
push
push
sarl
xor
test
push
inc
fldl
ja
sub
add
jmp
lcall
jae
pop
daa
hlt
mov
jg
cmp
pop
clc
jl
mov
adc
icebp
stos
sti
mov
push
xchg
fstps
push
jmp
rorb
push
jl
inc
imull
and
lock
xlat
mov
dec
aad
aas
out
jge,pn
in
push
mov
jae
repz
lret
pop
and
jnp
cmpsb
scas
add
inc
fsts
fcomi
insb
push
mov
jne
xchg
mov
insl
mov
sub
sti
lahf
jae
fnstcw
stos
cmp
push
aas
jae
mov
mov
push
ja
in
loop
testl
or
add
mov
nop
insb
and
xchg
ja
xchg
adc
adc
outsb
frstor
push
rcrb
pop
xchg
pop
imul
adc
push
or
or
jg
mov
mov
fisubrl
jg
and
hlt
sbb
xor
mov
mov
das
mov
lahf
xchg
fnstcw
inc
mov
mov
in
xchg
mov
leave
cli
les
int
inc
fisubrs
push
or
adc
dec
mov
mov
pop
jge
roll
call
or
pop
loope
or
xor
negl
scas
ror
add
ljmp
sbb
adc
pop
outsb
cs
lods
mov
lret
push
or
ljmp
ror
xor
dec
loopne
ret
sub
cmp
das
rcrl
cli
sahf
icebp
sahf
add
movsb
add
test
lock
dec
arpl
das
repz
xchg
dec
mov
inc
notb
add
xor
mov
push
shrl
jle
sbb
sub
mov
clc
fisttpll
mov
sub
fsubl
push
popa
adc
pop
enter
push
fsts
mov
xor
jnp
movsl
lods
movsl
call
imul
mov
jbe
fwait
sub
addl
arpl
and
testb
scas
jnp
cmp
aam
xchg
xor
add
loop
jbe
mov
jnp
dec
jbe
sti
mov
jecxz
inc
incl
xchg
cmc
cmpsb
push
jecxz
clc
jo
pop
push
mov
inc
dec
roll
push
push
insl
ds
shl
out
sarb
push
imul
rolb
fnstsw
xor
push
dec
cli
in
fwait
sahf
loop
arpl
cli
fildl
fldcw
jmp
mov
outsl
shl
out
roll
in
outsb
pusha
in
push
lahf
or
cmp
jg
ret
in
push
push
rcrl
test
cmp
cmp
lock
aas
sbb
lahf
ret
loopne
pop
movsl
mov
push
jbe
ret
in
inc
sub
xor
popf
in
hlt
ja
jmp
jl
clc
xchg
ja
pop
cs
jmp
hlt
lret
std
mov
fistps
or
ja
mov
jbe
std
rcrb
scas
jae
push
sub
push
add
jp
aas
mov
mov
and
into
into
arpl
mov
sbbb
iret
in
push
loopne
in
std
mov
push
dec
stos
daa
in
outsb
mov
xor
shr
int
jmp
or
jne
cs
lds
int
cvtpi2ps
dec
popa
sti
imul
cs
adc
scas
je
lahf
cld
ds
hlt
sbb
sub
fidivrs
mov
cli
leave
pop
dec
push
xor
les
sbb
inc
fs
jb
xor
ljmp
call
mov
orb
arpl
ret
rcrb
shrb
fs
and
fisubrs
sbb
mov
lods
lods
negl
ret
loope
xchg
dec
sbb
jg
movsb
mov
call
insl
or
mov
jb
sbb
in
ffreep
xor
xor
add
xor
sub
aaa
pop
push
jbe
lahf
mov
inc
lds
pop
pop
jo
insl
inc
stos
mov
add
mov
or
fcmovu
cmpsl
call
dec
and
out
sub
ret
xchg
sysret
add
cmpsl
add
mov
jg
jno
hlt
lock
adc
into
fistpll
dec
pop
xor
mov
sub
mov
sbb
jmp
xchg
or
nop
adc
or
add
mov
clc
push
imul
jecxz
sbb
mov
sahf
popa
lods
divl
mov
lock
fprem
adc
es
das
xchg
jecxz
hlt
adc
cmp
jp
pop
or
sub
inc
popa
mov
or
cmc
cli
push
addb
outsl
or
mov
cmp
dec
ja
leave
fnstenv
lret
out
not
cwtl
mov
lret
mov
dec
fucom
jecxz
jle
notb
push
and
cmpsb
mov
sub
dec
cs
popf
mov
cli
mov
push
clc
sahf
adc
lods
and
ds
stos
imul
popf
xchg
enter
sbb
and
push
int
pop
xchg
cmp
dec
ss
psubd
dec
lahf
xor
imul
jns
cmp
fists
je
aaa
mov
mov
insb
and
and
push
cmpsb
jg
scas
xor
and
rcrl
popl
lret
rorb
sub
out
iret
pop
sarb
pop
pusha
xlat
mov
mov
push
xor
arpl
into
push
sub
es
lods
vcmpss
push
sbb
mov
and
mov
push
cmc
mov
and
xchg
js
and
out
ss
sub
sub
std
fsts
mov
repnz
lahf
leave
xchg
push
and
push
insb
pop
sub
lods
insb
pop
push
in
lods
mov
pop
pop
rcll
sub
lds
dec
arpl
cmpsb
shr
push
adc
sahf
or
mov
ja
pop
orb
fildll
mov
dec
sbb
lret
ret
addb
push
mov
xor
stc
adc
xchg
inc
jg
js
mov
mov
cwtl
dec
push
ret
ret
lret
adc
cs
xor
xchg
movl
mov
xor
mov
hlt
imul
jnp
mov
mov
scas
inc
je
ljmp
cmp
aas
dec
out
pop
push
mov
std
clc
flds
out
repz
out
aas
ret
and
dec
adc
loopne
pop
inc
pop
sbb
push
into
adc
pop
cli
jbe
sbb
jae
inc
pushf
jmp
cmc
data16
sub
das
dec
cmp
ljmp
daa
dec
mov
ljmp
das
adc
or
mov
rolb
arpl
shl
mov
sub
sbb
ret
ljmp
xchg
add
pop
push
lcall
out
divl
loop
adc
sahf
cmpsl
ds
fxam
push
enter
xchg
jge
and
gs
fwait
xor
push
cwtl
in
mov
xchg
aad
sub
mov
cmpsl
sbb
aas
popf
jg
mov
push
inc
pop
aad
fucomp
mov
adc
mov
ret
movsl
or
mov
fsubrp
imul
lret
sub
ror
mov
lods
jle
jns
push
hlt
xchg
call
int
jns
push
add
std
sahf
cmp
or
xchg
add
jp
pushf
cli
jle
lock
aam
push
push
fisubrs
aad
sub
out
rcrl
mov
out
js
xor
scas
repz
icebp
or
jl
mov
cwtl
insb
mov
inc
in
sub
push
jo
test
dec
cmpsb
and
xor
push
xor
out
and
pop
push
fcoml
inc
cmp
fwait
shr
cmpsb
jle
cmc
mov
rcll
repnz
xor
scas
repz
mov
jl
mov
adc
adc
scas
clc
sub
mov
cwtl
fimuls
push
out
jmp
addb
lock
aas
add
mov
jle
cmp
mov
subl
xorb
mov
aad
int
test
cwtl
xchg
pop
sub
rclb
int3
add
sbb
mov
in
jl
mov
bound
mov
imull
xor
aad
cli
push
inc
push
aas
xchg
mov
sahf
add
outsb
mov
in
inc
adc
lods
pop
sbb
dec
xchg
and
mov
push
negl
adc
push
jnp
fstpt
mov
or
mov
mov
adc
push
leave
scas
jno
cmc
imul
pop
fisttpll
arpl
pop
dec
fidivs
mov
xor
test
cmp
ds
pop
inc
fcomip
lea
cli
cld
push
adc
xlat
xor
fwait
leave
pop
inc
cmp
aad
out
popf
scas
pushf
jecxz
xor
xchg
cmp
push
rclb
fbld
pop
cmpsb
lcall
repnz
scas
imul
push
call
pop
frstor
leave
cmpsb
sti
test
mov
adc
movsb
xchg
call
fldt
mov
cmc
in
lret
fucomip
in
adc
sub
or
aas
cmpsl
out
mov
aad
inc
lods
jl
test
aas
inc
push
and
lret
ljmp
xchg
xlat
mov
fwait
jnp
leave
jecxz
xchg
idiv
adc
and
mov
dec
push
adc
or
xor
ror
das
mov
mov
repnz
cmpsl
incb
sub
lcall
into
rorl
negb
lcall
sub
insb
jmp
add
xchg
movb
insl
int
cmpsb
lcall
outsl
cmove
out
and
mov
xorb
imul
fsts
int
dec
jb
xchg
sub
and
dec
or
iret
mov
fbstp
lcall
in
xchg
mov
sti
push
es
je
mov
jns
sub
cli
pusha
inc
fcoml
mov
mov
arpl
sub
movsb
icebp
push
out
mov
loop
in
push
aad
mov
addl
lock
mov
scas
cmpsb
cmp
outsb
es
bound
push
mov
loopne
mov
jg
int3
cmpsb
imulb
jmp
sbb
fdivr
sti
cltd
outsb
adc
lcall
scas
in
mov
mov
dec
jmp
pop
add
sub
add
or
jg
push
lahf
and
mov
cmp
aaa
aaa
outsl
or
mov
cs
jecxz
sti
cs
push
mov
jnp
dec
lahf
xchg
out
adc
or
ja
pop
pop
xor
fisubs
xchg
addr16
xchg
adc
outsl
adc
mov
imul
imul
mov
jmp
imul
fs
sbb
stos
jno
jl
iret
dec
sub
mov
dec
or
adc
add
jne
push
outsb
xlat
inc
imull
fildl
inc
fsubs
in
xor
sti
add
test
cs
ret
or
xor
jge
imul
xchg
scas
dec
mov
mov
cwtl
dec
rorl
pusha
in
mov
out
mov
inc
push
data16
icebp
hlt
or
fsubr
mov
sub
out
lahf
addb
lds
arpl
jo
sub
mov
mov
mov
xlat
add
and
addr16
cmp
lds
movl
adc
sbb
dec
aas
inc
test
pop
cmpsl
cld
lods
cmp
pop
mov
mov
scas
stc
stc
loopne
call
lahf
push
mov
in
ret
iret
test
pop
xchg
sahf
push
arpl
mov
sub
cmp
mov
pop
push
pushf
lods
mov
add
cwtl
mov
insb
adc
int3
mov
inc
das
jp
fldl
pushf
orl
mov
push
cld
lss
loope
insl
lds
outsb
ret
cmp
sbb
imul
movsb
push
test
or
adc
nop
ret
in
test
push
cmp
push
cmp
pop
outsl
ret
cmovno
xchg
lret
and
pop
xchg
stos
fwait
repz
sbb
test
push
sub
test
shll
cmpsb
das
xchg
arpl
sbb
adc
lcall
add
inc
mov
sub
imul
push
xor
call
add
mov
sub
movsb
mov
fisubs
js
idivl
pop
inc
fdivrs
mov
aas
test
and
test
mov
in
add
aad
fwait
cli
fstpl
and
cmp
pop
xchg
xor
lods
mov
lahf
daa
mov
clc
push
jno
xchg
fistpl
pop
sub
outsb
out
jne
pop
faddp
mov
mov
sub
cmp
add
pop
adc
pop
sub
ljmp
cmp
push
iret
mov
mov
cmp
pop
outsl
cmp
repnz
ja
into
adc
inc
outsl
das
cmp
ficomps
mov
or
sbb
mov
push
cmp
in
pop
pop
adc
or
cmp
push
adc
inc
jo
outsl
incb
outsb
pop
arpl
sbb
add
test
pop
jmp
scas
mov
inc
push
sbb
mov
hlt
cli
fisttps
jg
in
data16
lret
push
push
jmp
outsl
mov
adc
aas
xchg
push
mov
pop
xor
scas
pop
loope
mov
out
imul
xchg
xchg
fnstcw
int
shld
fisubrs
push
idiv
cmpsl
or
mov
aas
adc
cld
fldenv
test
cli
in
jb
push
ret
inc
sarl
pop
jo
jmp
sub
icebp
pop
mov
iret
jg
cmpsl
lret
mov
dec
jg
pop
inc
out
xor
std
jmp
jmp
pop
mov
adc
fsubrl
popl
loop
mov
test
adc
incb
push
fisubrl
neg
dec
lock
dec
cwtl
insl
addr16
divl
inc
mov
aas
imul
sub
fs
or
mov
pop
mov
jb
int3
in
pop
xchg
push
jp
mov
push
out
adc
xor
sub
sbb
jo
shrb
xlat
xchg
test
jp
cmp
lock
out
inc
out
mov
xor
sbbl
mov
mov
mov
lahf
cwtl
scas
sub
pop
add
dec
mov
xor
or
int3
cmpsl
adc
test
push
sbb
addr16
cmpsl
mov
cli
movsl
mov
jns
fldcw
jecxz
xor
fadds
jg
mov
dec
mov
scas
jg
jns
nop
and
push
in
xlat
push
cmp
pmulhw
out
inc
mov
jge
cmpsl
mov
cmc
xor
inc
stos
sbb
idivl
test
sahf
dec
xor
mov
inc
repz
out
cmp
imul
xor
cli
xor
les
out
cmp
scas
push
xor
clc
dec
add
cld
call
loop
sahf
adc
inc
inc
add
cwtl
fwait
cmpsl
adc
push
cmpsb
loop
ss
mov
cli
aas
jge
pop
pop
rcll
inc
mov
insl
test
jno
lcall
ljmp
cmpsl
lret
imul
leave
int3
adc
movsl
mov
lods
cmp
in
and
cli
xlat
mov
adc
shl
shll
ss
lods
jle
dec
icebp
mov
sbb
jl
fiaddl
fs
sub
jg
movsb
and
pusha
sub
lahf
pop
adc
add
movsl
fldt
xlat
jnp
mov
ja
mov
cli
out
push
xlat
out
les
pop
ljmp
fwait
mov
dec
aaa
arpl
movl
xchg
push
mov
imul
adc
int
xchg
stos
das
push
or
ret
add
mov
push
pop
fstpt
ljmp
pop
push
testb
add
pop
iret
add
add
jnp
ret
cmpsb
pop
repz
cltd
xchg
jecxz
pop
bound
imul
mov
push
std
sub
outsl
and
push
mov
insb
mov
das
lret
add
and
mov
mov
add
pop
push
xchg
lcall
xor
ret
stc
inc
push
push
mov
sti
iret
pop
imull
xorl
hlt
mov
mov
mov
jge
pop
repnz
lcall
bound
outsl
add
xchg
dec
icebp
and
pop
mov
rorl
cmp
lods
mov
outsl
loop
sub
in
mov
dec
ret
cmp
stc
adc
push
cld
sub
mov
fwait
fwait
and
fisttps
cwtl
stos
lret
xchg
sbb
je
cmc
jno
mov
mov
adc
cltd
aad
add
adc
sbb
sub
mov
sub
or
stos
test
into
and
fiadds
pop
or
in
dec
cli
test
push
or
pop
mov
jmp
test
call
inc
fs
sti
ror
sub
leave
ds
push
cld
aas
rcrl
test
xchg
xchg
sbb
shl
shlb
aas
push
nop
stc
dec
insb
cmp
sahf
outsl
ret
or
out
pop
in
xor
inc
xor
xor
pop
sub
icebp
mov
das
jne
in
jecxz
push
cli
adc
ja
ror
inc
adcl
jg
jge
in
out
sti
pop
fmulp
add
arpl
mov
int
inc
mov
jae
push
sbb
fldenv
mov
and
and
push
sbb
fwait
mov
frstor
test
inc
stc
xor
and
pop
inc
jo
orb
add
call
fistps
mov
cmpsl
sub
mov
xor
arpl
sub
sub
inc
mov
pop
ds
sbb
je
push
xchg
insb
pusha
imul
orl
movsb
or
push
cld
aad
cld
sti
cli
idivl
clc
push
out
jmp
pop
inc
in
arpl
mov
out
in
add
mov
ret
jmp
inc
fldenv
repnz
ret
imul
pop
rolb
push
mov
cmpsb
cwtl
scas
jnp
fldl2t
and
add
cli
mov
ret
lds
mov
fsubrl
and
push
fs
or
jl
outsb
xor
out
mov
out
pop
cs
adc
adc
pop
aad
and
jmp
add
jge
adc
insl
in
xor
adc
aad
sti
ret
add
clc
ljmp
mov
jo
push
mov
and
stc
in
test
stc
dec
in
sti
push
enter
repnz
lea
cmp
lods
and
inc
ja
jge
negl
cli
fimull
movsl
out
fwait
ss
insl
mov
leave
or
jmp
cwtl
fs
in
or
shlb
xchg
mov
pop
add
std
mov
out
mov
ljmp
das
mov
jo
iret
subb
jl
fldln2
xor
and
push
and
gs
pop
shll
sub
and
add
test
mov
imul
xchg
pop
push
shl
push
sti
mov
fisttps
mov
call
xor
push
jg
dec
adc
jno
adc
aaa
xor
fmulp
loop
in
xlat
stc
push
or
add
inc
inc
mov
jmp
out
rorl
inc
mov
mov
incb
sbb
fistpl
mov
nop
xchg
dec
mov
sbb
fnstsw
jae
sbbl
sahf
sub
push
xor
jg
out
xchg
adc
pop
or
lds
inc
mov
xchg
lahf
mov
orl
sub
cld
adc
or
inc
sarl
push
and
inc
test
repz
enter
lcall
sbb
push
in
jle
adc
add
add
iret
enter
sub
mov
push
mov
jg
repz
enter
lea
iret
adc
or
xor
aam
dec
scas
dec
jnp
mov
cld
jmp
add
push
adc
xor
les
dec
push
xchg
adc
out
iret
das
push
add
stos
not
rolb
cmpb
fnstcw
xchg
xchg
arpl
dec
and
xor
dec
or
ffreep
add
jb
lods
mov
stos
imul
inc
negl
cli
stc
sub
push
push
adc
dec
xchg
dec
mov
idiv
mov
sbb
movsb
lds
dec
pop
testl
cld
push
adc
mov
push
scas
fbld
fwait
ds
jg
xlat
or
inc
in
mov
jge
outsb
mov
push
push
cmp
scas
in
adcl
repz
pushf
aas
leave
dec
es
movsb
stos
xchg
fbstp
or
leave
and
cld
out
std
jmp
mov
fmuls
pop
out
push
jae
loopne
pop
jg
popf
popf
fisttps
imul
sub
mov
add
enter
lret
pop
and
or
xchg
xlat
and
loop
repz
mov
adc
mov
jbe
leave
mov
sub
sub
insb
mov
jg
iret
icebp
cmp
mov
mov
scas
mov
outsl
dec
jae
fidivrs
mov
xchg
popa
sahf
sahf
mov
mov
stc
leave
stc
neg
mov
adcl
inc
sub
mov
and
lds
sbb
js,pn
pop
icebp
adc
pop
sub
cmpsl
fwait
cmp
or
fisubrs
xor
push
out
jbe
cmpsl
js
loop
push
inc
jg
movsl
cltd
loope
mulb
repz
push
fsubrs
movsl
and
mov
adc
and
sbb
das
jns
lea
dec
das
outsb
cmpsb
fisubrl
xchg
negl
ret
add
aaa
movsb
mov
cs
xor
lds
xchg
scas
cmp
jg
xchg
mov
iret
pmaxub
inc
aam
pop
add
or
out
cmc
in
fistps
mov
repz
push
addr16
sbb
push
icebp
int
inc
in
daa
sub
das
mov
out
mov
scas
cmc
hlt
push
jecxz
into
add
sub
dec
cmp
mov
inc
jne
imul
jno
mov
push
jecxz
sahf
sahf
or
mov
xor
shl
jle
adc
leave
out
daa
mov
repz
movsb
fbld
stos
mov
jmp
fwait
test
adc
add
mov
jp
mov
mov
xchg
test
shl
pushf
out
loop
orl
cs
in
popa
or
mov
outsl
insl
pop
cmp
jle
das
repz
popf
mov
add
inc
popa
jne
out
fbld
pop
pop
enter
outsb
lret
outsb
lahf
mov
ja
imul
mov
cmp
cmp
fimull
fstl
imul
filds
push
add
loope
sbb
mov
jne
stos
roll
mov
sbb
imul
bound
jmp
out
jecxz
mov
scas
xor
mov
out
loope
ja
notl
mov
fnstenv
aaa
std
sub
jg
adc
imul
lcall
ds
shll
std
sarl
ds
push
xlat
lods
pop
aad
sahf
scas
lcall
fbstp
inc
cwtl
and
add
ret
leave
mov
fdivrs
rcll
cli
jne
and
incb
ja
les
enter
pop
inc
jle
call
sbb
sub
mov
hlt
test
out
hlt
lahf
and
mov
pushf
imulb
cmp
push
js
mov
bound
jge
aaa
jno
pop
mov
mov
outsl
mov
push
leave
sahf
aam
sbb
dec
xchg
repz
leave
mov
mov
rcll
dec
fiadds
in
dec
mov
cmpsl
jnp
xchg
pop
aaa
cli
mov
and
xchg
add
jg
dec
add
sti
pop
repz
add
and
adc
loope
cmc
mov
mov
insl
imul
in
add
mov
dec
out
sub
adc
xchg
sub
loop
add
fldcw
mov
loope
pop
push
mov
jmp
jmp
cli
fistps
adc
and
xchg
rcl
imul
mov
stos
inc
jmp
lahf
iret
jne
in
out
scas
imul
ds
into
fstps
cmp
scas
or
mov
mov
lods
out
lahf
repz
xor
mov
arpl
leave
push
loope
xor
icebp
in
rclb
gs
imul
jmp
mov
in
jmp
jnp
xor
add
jmp
push
push
test
pushf
rcr
mov
fs
jg
neg
imul
das
push
mov
mov
and
add
es
cmp
cmp
ret
xor
repz
nopl
loopne
pop
xor
mov
dec
pop
aam
cmc
andb
cmp
sbb
das
pop
imul
or
push
mov
imul
jbe
movsb
outsb
push
shlb
sar
mov
push
fisubrl
mov
sbb
push
pushf
add
js
jg
pop
pop
lret
sub
sbb
pop
cmpsl
pop
xor
cli
push
orb
or
sbbl
pop
add
int3
cmpl
adc
cli
jmp
jecxz
pop
divl
je
fsubrl
test
xchg
and
cmpsl
scas
movsb
jge
mov
scas
or
cwtl
cmpsb
out
fimull
sub
push
jecxz
sbb
cmpsb
test
push
fbld
or
cltd
fstpt
leave
lar
repz
push
mov
sbb
into
mov
lret
aaa
lret
enter
incl
call
decb
dec
iret
mov
or
mov
add
out
stos
or
xor
mov
mov
dec
fwait
mov
gs
inc
pushf
idivl
push
jp
mov
pop
shrl
enter
adc
dec
mov
pop
push
mov
inc
subb
nop
mov
rorl
or
mov
ret
cli
insb
fidivl
xchg
mov
sbb
sar
jnp
aaa
add
mov
popa
xchg
rclb
int3
rcrl
movsl
decl
hlt
ret
lahf
sbb
loopne
mov
pop
mov
addr16
xor
sub
add
push
das
aaa
or
pop
jmp
call
fmull
pop
jmp
mov
movsl
jle
fwait
aas
adc
gs
mov
xchg
fistl
inc
sub
cmc
add
out
test
push
lret
jmp
dec
ljmp
mov
mov
sbb
mov
repz
movsb
xchg
ret
cmc
shll
dec
sbbl
mov
pusha
outsb
and
xlat
out
sub
sbb
fnstenv
shll
shrl
std
cwtl
emms
and
dec
jnp
dec
sar
imul
pop
in
cltd
pop
dec
pop
fwait
sbb
mov
xchg
adcb
pop
scas
mov
out
stos
jg
sbb
filds
mov
fwait
jl
mov
mov
sarb
sahf
fdivrp
hlt
xor
test
push
jl
sarb
pop
adc
aas
fnstenv
fsubrp
out
ret
xchg
iret
test
dec
jle
dec
sti
pushf
pop
imul
push
xchg
mov
in
ja
repz
pusha
je
push
pop
das
xor
jne
add
cmc
leave
inc
jg
xor
mov
repnz
stos
decb
sahf
shrb
mov
mov
test
dec
mov
das
lea
mov
push
sbb
lret
rcrl
shl
xchg
pop
sub
test
cli
out
push
je
cmp
push
push
jbe
nop
push
or
lock
leave
ljmp
push
add
int3
or
sbb
shr
and
jl
inc
repz
adc
sti
std
push
push
sub
pop
jns
lret
fstpt
push
mov
js
pop
push
mov
movsb
insb
arpl
xlat
divb
mov
aas
jl
ljmp
sbb
inc
fnstenv
or
testb
imul
xacquire
add
fisttpl
pop
lock
fcmovne
movb
bswap
fisubrl
adc
sub
rcl
icebp
adc
or
lods
data16
mov
lahf
loope
pop
les
push
xchg
push
shr
jl
incb
xor
mov
adc
popf
push
int3
icebp
xchg
sbb
arpl
mov
jmp
gs
sti
xor
mov
add
cmp
pop
cli
pop
cmp
iret
outsb
xor
sub
adc
dec
push
test
leave
add
scas
iret
das
ficomps
filds
mov
mov
xchg
cmpsb
shrl
jmp
jp
sahf
sub
lods
sub
and
add
pusha
repnz
fildl
rcrb
add
pop
scas
pop
rolb
inc
push
mov
lahf
inc
adc
sub
fadds
jno
mov
rclb
arpl
dec
xchg
scas
out
mov
push
sub
sbb
clc
add
sarl
sahf
adc
lret
arpl
jne
es
pop
shrl
jl
cmp
jb
sub
adc
fdivrs
aad
push
sbb
push
out
mov
shlb
aam
inc
mov
cmp
pop
lret
mov
cmpsl
scas
mov
sti
jne
or
fs
call
in
dec
icebp
jne
xorl
leave
in
mov
fadds
shlb
add
arpl
ja
mov
sahf
dec
push
push
ret
cmp
mov
adc
cli
fs
sub
xchg
dec
mov
sub
cmp
arpl
scas
sbb
add
bound
adc
fisubrs
lcall
fs
loopw
mov
pushf
into
xchg
stc
test
inc
scas
sbb
cwtl
fnstsw
out
cltd
mov
cld
push
cmp
stos
pop
cmp
sbb
fstps
ficompl
jno
loop
mov
gs
aas
add
jp
inc
das
sbb
xor
mov
shrl
nop
popf
lock
jno
andl
fsubl
pop
mov
mov
pop
popa
dec
ret
data16
arpl
push
in
cli
outsb
xchg
out
inc
jmp
mov
jg
jecxz
icebp
out
jae
push
push
ret
sarl
cmpsl
mov
movsl
add
add
mov
ds
testl
sub
aad
ret
ss
outsb
outsl
push
mov
adc
push
rcrl
aas
out
cmp
popa
adc
outsb
sub
mov
data16
fsubl
cmpsl
fists
lds
inc
pop
mov
in
mov
mov
adc
mov
mov
dec
or
lods
into
out
add
xchg
add
mov
out
sub
cmp
decb
lods
sub
test
adc
addr16
jo
ficomps
jae
sub
jp
mov
scas
add
stc
mov
xor
sub
and
mov
mov
outsb
inc
mov
dec
js
mov
mov
popf
mov
roll
sub
negb
push
fmulp
pop
scas
mov
aad
in
push
rolb
pushf
jnp
ffree
pop
mov
imul
test
jno
and
add
pop
jg
repnz
out
syscall
jae
filds
hlt
shlb
pop
or
sub
sbb
mov
mov
jbe
add
mov
cmpsl
add
clc
pop
jbe
mov
out
loop
pop
or
xchg
dec
xchg
jne
adcb
icebp
jecxz
push
lea
add
sbbb
aas
push
es
mov
cmp
mov
mov
xchg
mov
les
fnstsw
ja
fcomi
lock
stc
mov
sub
rolb
sbb
cmp
out
das
testb
loope
sub
pop
inc
aad
and
div
sub
into
xchg
sub
bound
cwtl
sarb
mov
jns,pt
push
ja
imulb
mov
aas
sbb
adc
std
cmp
push
mov
push
lock
fwait
sbb
push
movsb
outsl
ljmp
push
pop
push
lret
imul
cmp
sbb
and
les
es
ret
ret
xchg
mov
pop
enter
movsb
sub
and
jg
mov
adc
pushf
js
cmp
rcrb
popf
fidivl
fsubr
imul
mov
fcmovu
cmp
add
mov
sub
shl
ret
and
dec
imul
sub
fdivl
ja
mov
outsl
das
out
mov
cmp
ds
or
mov
bound
test
lods
jg
imul
out
cmovg
xor
fwait
incb
fadds
push
shrb
lods
push
mov
mov
out
out
xchg
mov
jns
iret
dec
leave
repnz
sarb
scas
adc
pushf
daa
add
cs
sbb
repz
add
rorb
loop
out
icebp
fldenv
mov
xlat
notl
mov
fs
mov
fldl
pop
mov
mov
lret
sbb
cld
inc
xchg
in
cmc
xor
push
add
push
pop
ret
aam
imul
fmull
addr16
xlat
lret
cmp
jle
stos
jl
daa
mov
scas
loopne
ficoms
sub
mov
inc
push
pushf
test
popa
cmpsl
les
mov
test
jg
jg
leave
das
push
jge
sub
mov
cmpsb
es
scas
fsubs
fcomip
pop
cltd
add
call
int
scas
push
fnstenv
lods
jg
repnz
shl
xlat
jmp
push
in
loop
mov
ud0
push
aaa
fmull
dec
aam
and
in
fiadds
sub
mov
and
dec
push
mov
dec
fsubr
sarw
xor
in
dec
aam
fisttpl
out
aas
in
out
pop
jg
fcomip
ficomps
sub
mov
repnz
push
xor
mov
add
jg
testl
repnz
out
imul
sbb
ljmp
inc
pop
push
test
pop
cmp
jg
push
jno
es
xchg
aaa
clc
out
leave
out
inc
pop
fwait
dec
mov
in
repz
cmp
es
loop
or
push
pop
dec
dec
xor
push
push
mov
repz
daa
loopne
rdpmc
jbe
into
sbb
xlat
out
cs
cmpsl
adc
mov
sbb
jecxz
loopne
and
add
xchg
pop
xor
pop
les
stc
data16
jbe
jl
xor
xchg
in
scas
xlat
test
sbb
lock
pop
ds
scas
mov
xchg
adcb
mov
ret
mov
jg
mov
repnz
xchg
add
int3
mov
iret
xchg
cmp
mov
pop
cld
xor
jo
mov
movsl
lock
xor
repz
jecxz
or
jmp
mov
imull
xor
pop
add
xor
mov
ljmp
into
xchg
ja
and
xchg
sub
cli
call
jae
pop
movsl
sbb
jge
mov
pop
nop
scas
jbe
sub
dec
inc
cmp
xchg
lahf
aaa
cmp
imul
repz
jns
aaa
scas
popf
inc
xor
pop
mov
dec
lahf
or
or
jmp
fcmovnu
shll
and
add
xor
outsl
scas
jg
cld
ja
adc
lea
jg
adc
insl
out
pop
fsts
push
out
or
or
xlat
clc
add
pop
mov
pop
add
pop
ds
push
sbb
or
setle
and
arpl
das
fistps
in
rol
iret
mov
mov
testl
dec
sarl
pop
iret
aas
mov
dec
ret
shlb
cmpsl
insl
xchg
hlt
in
jmp
clc
stc
repz
leave
push
insb
cli
fsub
idivl
mul
sti
jecxz
scas
inc
jg
fcomip
loopne
and
scas
jg
xchg
mov
pop
cmpsl
mov
jmp
xlat
push
dec
mov
fs
enter
push
nop
aas
pop
xor
dec
and
shll
xchg
ss
fidivrl
sub
test
adc
into
scas
std
mov
lods
pusha
addr16
jne
scas
or
mov
mov
dec
insl
lods
pop
aad
mov
jge
xchg
data16
outsb
xchg
insb
nop
fdivr
jnp
addr16
fidivrl
scas
out
xor
dec
pushf
fsubrl
insb
iret
mov
lahf
mov
add
es
int3
ret
mov
bound
ret
lea
or
fnstsw
mov
bound
fdivs
aam
mov
aad
push
mov
ret
fstpl
mov
mov
sbb
adc
loopne
jnp
adc
pusha
dec
mov
add
sbb
push
pop
xor
mul
out
inc
jmp
mov
stos
mov
jbe
pop
push
push
jg
pslld
jnp
scas
in
xor
movsb
jmp
push
mov
mov
or
mov
mov
or
cmp
aas
movsl
jle
das
jbe
inc
fsubrs
inc
fidivrl
jp
xor
jle
popf
pop
aam
mov
imul
lods
xchg
mov
ja
idivb
push
rorl
sub
inc
pop
mov
jle
xlat
jg
out
xchg
jp
push
dec
mov
dec
pop
fs
sahf
sbb
fwait
neg
pop
push
sbb
sub
sbb
out
aaa
jl
dec
inc
aad
cmp
mov
es
movsl
add
mov
cmp
mov
jg
and
mov
or
out
mov
ds
lcall
mov
xor
jp
and
jp
iret
inc
mov
enter
scas
out
aas
jg
out
cmpsl
pop
movsb
pop
stos
pop
aaa
adc
sarl
cmc
inc
fwait
push
xchg
sbb
adc
cmp
aaa
xor
jl
pop
pop
out
xorb
test
push
aaa
out
push
shl
lret
sbb
out
sub
xchg
test
pop
xlat
movsl
in
and
adc
adc
out
stos
stos
jg
inc
xor
mov
add
inc
in
and
sub
ss
subb
fstps
or
mov
fbstp
pop
sbb
add
pop
xlat
addr16
popf
jl
popf
insl
data16
scas
cmp
cld
cwtl
pop
divb
inc
sarb
insl
sahf
js
mov
outsl
cmpl
pop
mov
add
mov
bound
outsl
stos
mov
ss
jg
lods
jge
mov
sbb
sbb
iret
test
sub
scas
adc
mov
cli
dec
jnp
jns
push
mov
sub
sbb
aaa
push
mov
push
push
mov
aaa
frstor
out
stc
out
imul
out
out
jecxz
xor
mov
cmp
fadd
add
add
fadd
mov
js
sbb
pop
shlb
loop
or
push
sbb
stos
xchg
pop
xchg
mov
aaa
cwtl
stos
lahf
mov
pop
lret
adc
or
jmp
xchg
xlat
cwtl
mov
dec
arpl
out
test
sbb
clc
js
mov
fisubrl
mov
add
movsl
fisubl
cli
pop
mov
cmp
fldcw
iret
mov
rcll
dec
into
xchg
adc
jmp
adc
sbb
into
adc
outsb
pop
pusha
jbe
or
add
dec
repnz
adcb
sahf
xlat
iret
arpl
sbb
test
popa
aaa
pop
neg
inc
adc
sub
push
js
iret
cmp
scas
jns
push
aad
push
push
scas
ret
adc
push
test
jne
xchg
sbbb
shl
cltd
push
das
jl
xor
shl
cmp
fisttpll
aas
aaa
popf
sbb
dec
and
aaa
mov
jg
xor
out
aad
ss
test
or
sbb
mov
xchg
adc
cwtl
int
jg
stc
jle
mov
jge
cld
addr16
adc
push
cmp
push
jg
xor
mov
int
scas
add
cwtl
shrb
test
xchg
imul
outsb
daa
jg
es
out
cwtl
fidivrl
xchg
stc
cld
pushf
hlt
mov
lock
fisttps
repz
cs
lret
mov
add
sbb
jp
stos
sub
or
pop
aaa
scas
cmp
jne
aas
call
sbb
jbe
adc
jle
aad
jge
lahf
jl
fisubs
arpl
mov
jnp
mov
repnz
jns
mov
push
pop
pop
mov
rorl
lahf
mov
xchg
call
xchg
mov
or
insl
popl
push
mov
fmuls
jg
mov
mov
sbb
jge
daa
lahf
lcall
cmp
jge
jle
jp
push
adc
fldcw
icebp
mov
out
popf
daa
pavgb
adc
daa
mov
lea
data16
adc
fdivp
add
fsub
rorb
ret
hlt
sub
dec
xchg
push
jno
cs
dec
out
jns
cmpsw
pop
add
push
pop
inc
jg
xchg
pop
pop
out
daa
outsl
clc
mov
mov
mov
scas
js
mov
es
cmpsb
test
mov
lods
cmpsb
jge
shlb
push
out
mov
std
scas
lahf
frstor
stos
pusha
pop
fnclex
jecxz
sbb
pop
pop
mov
data16
in
iret
repz
sub
jg
jle
out
xchg
fidivs
scas
negl
sbbl
jmp
jge
push
dec
inc
scas
add
hlt
adc
fwait
test
mov
pusha
rcrl
outsb
fsubl
mov
xor
jge
lea
cltd
pop
ret
mov
data16
ljmp
in
xor
loopne
jle
scas
adc
pop
mov
iret
mov
and
out
ret
in
push
inc
and
mov
rcrb
pop
fwait
cld
fisttpl
mov
mov
and
add
scas
xlat
pushf
iret
lahf
mov
jl
nop
sub
xchg
sub
inc
mov
fnstcw
jg
out
pop
mov
les
add
jge
aaa
fiaddl
repz
rol
mov
xchg
pop
cmp
outsb
push
shl
sti
mov
stos
jmp
enter
das
jl
push
shlb
sti
movsb
and
roll
in
and
add
andl
iret
inc
out
faddl
jg
mov
mov
jb
loope
sub
adc
cli
pop
dec
loope
adc
mov
adc
shr
mov
out
xchg
popf
sub
lahf
rcll
dec
dec
pop
mov
inc
jnp
mov
cld
jg
pop
inc
pop
dec
mov
cld
mov
test
xor
fnstenv
std
sub
xchg
iret
cli
add
hlt
popf
push
sahf
out
iret
fsqrt
jl
sarb
lods
aas
jne
in
mov
adc
mov
jg
pop
dec
sub
inc
mov
or
imul
add
pop
mov
push
ret
shll
mov
enter
sbb
pop
add
xor
in
mov
and
scas
imul
ds
fistpl
inc
add
dec
and
cmp
pop
cmpsl
sub
mov
stc
mov
adc
inc
imul
fidivs
cmc
mov
mov
inc
fsubl
icebp
push
je
jmp
stos
notb
adc
cli
mov
inc
loop
scas
aas
fstps
add
cld
add
jo
jne
push
or
das
lcall
lret
pop
out
in
mov
popa
pop
popa
cli
push
rorl
ficompl
dec
pop
fiaddl
sbb
mov
sub
fistps
ret
xor
scas
mov
pop
popf
cmp
aad
mov
rcrb
iret
push
cmc
sbb
sahf
in
mov
jno
push
mov
mov
arpl
add
outsb
fcmove
push
pop
int
jg
fcomip
mov
jge
insl
adc
cmp
xor
mov
scas
shlb
mov
fbld
xor
sahf
lods
push
std
mov
push
fmul
mov
mov
lock
pop
mov
jmp
cmp
scas
jecxz
loop
adc
mov
jmp
cmc
sti
test
or
stos
pop
lods
xchg
out
mov
jecxz
xlat
jl
jne
aaa
mov
cmpsb
and
inc
mov
divb
dec
mov
notl
jle
jmp
scas
pop
arpl
xchg
les
std
xchg
adc
cmc
scas
mov
push
and
int3
mov
mov
scas
inc
cwtl
sub
pop
hlt
jmp
lret
jmp
xlat
fldcw
pop
xchg
adc
sub
xchg
sahf
cmp
fiadds
add
mov
leave
mov
or
testl
mov
or
push
jecxz
shl
jnp
repz
mov
out
popf
subb
mov
data16
das
mov
sbb
xor
jg
ficoml
push
push
je
inc
xchg
mov
sub
pop
cmpsb
iret
sub
lcall
lret
test
sub
cmp
frstor
test
loop
xchg
movsl
mov
andl
mov
andb
stos
mov
fldt
cmc
sar
push
outsb
lret
pop
push
addr16
mov
sti
orb
scas
fucomp
xlat
add
pop
std
inc
xchg
sbb
pop
out
jno
pop
cwtl
leave
repnz
xchg
pop
push
mov
imul
xor
in
lahf
testl
dec
xchg
les
xchg
push
push
outsl
xor
fwait
loopne
hlt
fsts
jnp
sti
push
cs
filds
inc
stos
sub
imul
fiaddl
out
or
rep
mov
fisubrs
mov
out
testl
inc
add
mov
pop
aad
adc
arpl
inc
data16
jno
mov
pop
xchg
setnp
dec
inc
xlat
xchg
mov
push
stos
out
shrl
mov
pop
lods
scas
xchg
jl
sbbl
stc
push
cs
mov
dec
in
adcb
mov
scas
mov
xlat
cmp
and
mov
pop
xchg
mov
out
stc
inc
xor
push
fimull
out
in
call
dec
fxch
pop
xchg
dec
sub
adc
inc
pushf
test
pushf
add
inc
aad
aad
ja
mov
cli
add
jg
dec
daa
idiv
xlat
mov
jmp
mov
cld
sub
jge
jge
fwait
dec
jno
lea
loopne
fstpt
in
jge
dec
xlat
cmp
push
or
xor
ja
and
not
jg
xor
xchg
sbb
push
scas
stos
leave
mov
mov
push
jo
orb
pop
bswap
out
shll
mov
sti
or
ficompl
pop
mov
push
or
and
lds
xor
mov
cmp
and
das
pop
push
sbb
mov
and
pop
jmp
push
fstpl
mov
sbb
inc
daa
notl
pop
pop
test
in
adcb
pushw
mov
stos
pop
in
int3
xor
mov
adc
adc
rorl
stos
push
loop
mov
rcl
scas
pusha
scas
dec
jmp
leave
mov
add
scas
cmc
clc
mov
add
mov
int
sub
mov
aam
pop
outsl
mov
into
insb
das
bound
adc
mov
aas
fwait
pop
mov
gs
mov
jae
adc
mov
hlt
fbld
adc
fwait
mov
incl
xor
push
imul
push
int3
aam
lock
pop
jae
push
addr16
mov
std
adc
inc
scas
int
mov
cmc
and
jl
loopne
shrd
inc
leave
inc
inc
cmp
out
push
int3
stos
add
cmpsl
outsb
adc
xor
dec
leave
mov
aaa
dec
or
push
jle
out
mov
out
xchg
adc
stos
f2xm1
and
push
mov
xor
popa
cmp
pop
fsubs
sbb
add
adc
jmp
pop
mov
jne
mov
xchg
dec
fcomip
adc
neg
jnp
xor
mov
outsb
ret
ljmp
addb
mov
pop
loope
mov
mov
pop
lret
cltd
mov
popa
push
cmp
ds
movsl
add
out
movsl
xchg
push
stc
das
mov
push
sbb
pop
inc
ficomps
add
mov
inc
push
jg
pop
imul
call
shlb
and
in
adc
or
sarl
popf
ja
jno
push
imul
adc
mov
js
sub
mov
dec
jne
in
imulb
cmp
dec
mov
push
not
sub
out
pcmpgtd
sub
ret
pop
lds
pop
insl
jge
push
shr
pop
jecxz
imull
loopne
pop
andl
rcll
mov
sub
inc
sub
add
arpl
inc
iret
es
ror
lock
push
pop
stos
aas
mov
outsb
movsl
pop
jne
dec
scas
fmulp
push
ds
hlt
sbb
mov
sarb
mov
inc
out
pushf
mov
add
lret
cmpsb
rcll
xchg
fistpl
xorb
add
push
mov
shll
dec
pop
push
or
mov
lret
jae
fadd
cmpsb
add
stc
out
jle
ret
mov
rcrb
xchg
leave
jb
adc
loopne
fmuls
mov
jbe
mov
test
outsl
xor
sti
xor
cltd
imul
pusha
mov
mov
ret
in
stc
lock
mov
mov
mov
cmp
ja
push
stc
nop
lcall
or
mov
push
in
jmp
mov
or
jg
sbb
rcr
aam
sub
pop
mov
inc
out
test
outsb
nop
mov
jle
in
jg
rcrl
mov
data16
dec
mov
cli
iret
jle
adc
pop
mov
sub
cmpsb
cld
repnz
jne
jbe
cli
mov
dec
mulb
xchg
aaa
jnp
clc
adc
cltd
jnp
cmpb
outsl
dec
push
loope
hlt
push
das
in
mov
imul
sub
xchg
mov
pop
les
dec
mov
out
sarl
mov
shrl
lods
jno
mov
push
fstpl
dec
mov
mov
mov
mov
xorb
das
inc
sbb
lods
add
imul
push
jne
mov
push
ret
inc
cmpsl
arpl
les
jp
add
aam
iret
and
pop
cmp
jae
test
aad
jge
pop
fldcw
cltd
dec
shrl
jp
lods
and
ja
and
jg
dec
mov
adc
pop
decb
mov
sti
mov
shr
mov
aas
pop
lret
lods
decb
cmp
mov
les
mov
negb
xor
shrb
ja
jno
and
ror
cmc
popf
push
lock
jbe
ljmp
pop
test
jl
jle
repz
cltd
out
jle
stos
js
stos
inc
iret
rcr
sbbl
mov
das
mov
lahf
dec
mov
rolb
pop
std
hlt
cmp
bound
pop
scas
ss
movb
adc
rorb
subb
out
scas
or
je
hlt
mov
clc
dec
out
shl
sub
mov
fisubrl
das
cmpb
push
enter
fistpll
sub
mulb
outsb
ja
mov
xchg
test
push
xchg
das
mov
pop
pushf
rorb
dec
lret
dec
aas
mov
popa
sub
mov
sub
push
lods
mov
mov
andb
jp
das
xor
lods
pop
pop
adc
iret
fucomip
cld
mov
mull
pop
dec
xor
jl
and
mov
gs
scas
adc
into
das
push
div
push
lock
sub
adc
nop
outsb
loopne
mov
subb
mov
mov
vprotd
and
stos
mov
push
arpl
jmp
lret
fucomp
pop
outsb
fcomip
mov
xchg
mov
inc
mov
sti
mov
sbb
jnp
lods
imul
jns
xor
fcompl
jle
mov
add
jns
xor
hlt
jle
testl
push
adc
jmp
sub
das
in
cmpsl
pop
test
push
mov
sbbl
lahf
mov
cmpsl
mov
dec
cmpsb
push
xchg
scas
mov
js
sub
jnp
mov
mov
outsb
jnp
or
mov
fisubrs
iret
mov
pop
pop
and
mov
mov
xorl
loope
lahf
insb
pop
jge
test
pop
push
cmpsb
mov
cmpsb
or
dec
cmp
lret
into
push
cmc
mov
sub
ja
fistps
pop
sub
out
mov
cmp
dec
call
xchg
imul
sti
mov
pop
ja
jmp
xchg
or
mov
repz
jb
hlt
pop
iret
or
pushf
or
mov
iret
push
adc
cmp
sbb
scas
icebp
jl
fimuls
cmp
out
sti
mov
pop
call
dec
sub
jp
bnd
jmp
cwtl
pop
mov
xor
mov
clc
adc
jae
sbb
jmp
mov
int
jmp
in
sbb
movsl
lahf
inc
cmpsl
ret
loope
mov
iret
xchg
xchg
jbe
mov
out
mov
addr16
inc
cmpsl
pusha
xchg
frstor
sub
add
cmpsb
outsl
nop
cmpsb
xor
adc
das
addr16
jl
fadd
ret
fldenv
adc
ficomps
out
hlt
test
lea
xchg
jne
imul
jg
dec
lahf
rorl
clc
or
xor
imul
clc
sti
adc
dec
or
cmp
fistps
bts
sub
dec
sbb
or
scas
cmpsb
pop
out
cmp
mov
mov
mov
out
fcompl
fldl
in
push
testl
cmc
sub
pop
sub
sub
add
mov
insl
sbb
push
scas
adc
arpl
mull
sbb
inc
xor
add
imul
push
sahf
lods
push
out
mov
test
mov
jne
andl
sbb
mov
jno
out
mov
or
pushf
aad
xchg
cld
icebp
out
add
inc
mov
stos
jp
lret
push
adc
imul
inc
mov
inc
jnp
jb
hlt
stos
push
in
inc
negl
in
push
ja
sti
inc
pop
mov
mov
lcall
call
fwait
scas
shl
xor
pop
ds
pushf
in
imul
aaa
jmp
ret
in
adc
notl
cltd
mov
insb
loope
js
mov
mov
sub
pop
roll
mov
mov
inc
ficomps
enter
pop
push
lds
pop
and
cmpsb
add
fsubrl
mov
leave
push
into
mov
in
pop
cmp
retw
aam
lea
mov
inc
cmpl
cli
fisttpl
outsl
lret
dec
test
je
lds
sub
fnstcw
stos
fistpll
and
jne
mov
mov
and
pop
fstps
loop
shrb
jnp
out
outsb
out
mov
notl
imul
sub
fisubs
into
loop
jns
fiadds
mov
jmp
js
push
mov
pop
jg
je
or
scas
xchg
mov
cltd
and
mov
mov
shrl
fldt
insb
and
xchg
test
repnz
dec
mov
jle
inc
fldcw
out
xchg
sbb
pop
inc
int3
stos
push
xor
scas
aaa
imul
xchg
mov
cwtl
push
sbb
aaa
ret
outsl
pop
out
lcall
aam
repz
fcmovnb
cmc
cmpsl
fidivrs
pop
mov
mov
movsl
adc
iret
out
out
int3
lea
icebp
adc
inc
mov
and
jmp
push
popf
lcall
or
outsb
or
pop
sarl
xchg
mov
aaa
lahf
xchg
sbb
cs
fisttps
sbb
or
lods
ss
fistps
cmp
fdivr
xchg
ret
test
js
add
enter
sti
add
sahf
int3
sti
pop
mov
pop
loop
fsubr
sbb
fsubrl
cmp
mov
loop
fcompl
mov
icebp
je
std
adc
inc
insl
xchg
faddl
dec
enter
pop
jns
push
push
mov
pop
inc
push
cmp
sarl
scas
mov
outsb
xchg
xchg
inc
jg
rcll
jecxz
pop
out
outsb
mov
das
out
pop
sarl
cwtl
mov
sub
in
arpl
in
dec
in
and
scas
nop
insl
inc
or
push
inc
mov
pop
stos
add
adc
out
dec
ja
xor
test
repz
adcl
adc
outsl
in
insl
xlat
mov
in
in
lock
xchg
fisubrs
fists
mov
xchg
addl
mov
imul
xchg
pop
dec
in
push
add
rolb
sti
mov
and
jmp
xchg
cmpsb
mov
or
movsb
fisubl
outsb
mov
enter
aad
mov
mov
lods
mov
or
ljmp
pusha
inc
mov
pushf
outsb
fistpll
fisubrl
jae
sub
mov
jno
cmp
add
iret
mov
fs
pop
add
clc
push
mov
sbb
push
pop
lock
addr16
mov
inc
cmp
cmp
inc
jle
adc
xor
cmp
inc
iret
cs
fcoml
mov
scas
push
int
lahf
out
loopne
cltd
ret
int3
push
in
mov
daa
or
das
jge
and
mov
mov
ja
add
mov
jg
aas
lcall
dec
popf
ret
out
xlat
mov
rol
dec
inc
sti
cli
out
push
jl
dec
inc
jns
add
mov
mov
in
pop
jne
cmpsb
mov
jl
mov
or
or
shll
aad
mov
imul
sbb
das
imul
clc
in
movsl
lret
push
out
test
cmpsl
movsl
mov
in
xor
hlt
stos
loop
arpl
into
fidivl
insb
sti
sbb
fmulp
adc
out
cmp
mov
in
addps
mov
sub
xchg
and
or
sti
ret
ja
repnz
xor
sbb
sub
inc
jno
pop
fisubs
push
sarl
leave
test
jle
rcrb
mov
ret
cld
out
cli
mov
jg
push
ss
hlt
in
je
mov
mov
cmpsb
dec
jno
aaa
mov
cmpl
mov
imul
xchg
lds
fisttpl
aas
mov
mov
rolb
mov
sbb
rorb
imul
mov
or
shrb
cmpsb
pop
push
mov
push
ftst
scas
push
lods
mov
movsb
mov
fildl
fs
xchg
arpl
add
add
or
pop
sub
faddp
fldln2
mov
lds
push
scas
cmpsb
push
out
aam
push
add
out
cmp
pop
sbb
mov
sti
outsb
mov
cmp
sub
push
push
push
sti
into
mov
sarl
loop
call
movl
insl
and
out
clc
pop
imul
fcomps
icebp
out
and
push
in
push
or
pop
sti
mov
pop
mov
imul
hlt
fs
sar
jl
mov
shrb
in
shrb
aam
dec
insb
jmp
addr16
mov
sbb
and
gs
flds
mov
sbb
dec
in
mov
jnp
jns
ss
jge
fyl2xp1
out
mov
or
imul
mov
enter
fldcw
cmp
dec
push
ret
jnp
rorl
out
mov
repz
cmp
and
cmp
push
cmp
jg
cs
loopne
loopne
mov
inc
test
int
imull
xchg
add
cmp
push
sbb
dec
mov
push
dec
fistps
sub
cltd
in
and
xchg
jle
je
ja
shll
test
sub
insb
mov
xorb
pop
nop
mov
mov
lock
imul
sub
iret
mov
aaa
dec
push
sarl
in
addr16
call
mov
fstpt
push
repnz
rcrb
or
pop
imul
fiaddl
sub
push
insb
cmp
daa
loopne
ss
sub
ret
jns
inc
cwtl
xor
mov
push
add
mov
fsubrs
pop
mov
dec
sti
xor
jle
xchg
clc
cltd
shll
or
mov
jmp
xchg
arpl
les
mov
xchg
inc
pushf
pop
mov
iret
fcompl
add
outsb
movsb
mov
aad
mov
std
xchg
adc
ret
in
fildl
fisubs
adc
ja
sub
pusha
cmc
mov
stos
push
inc
lcall
sti
sbb
ja
or
jne
cli
ret
in
maxps
cld
data16
out
dec
mov
push
fld
inc
sbb
jmp
in
das
sti
ja
mov
fmul
xor
fdiv
jle
xor
rcr
call
inc
imul
dec
mov
popl
mov
push
int
scas
jns
repz
inc
and
sarb
dec
dec
mov
ja
cltd
add
pop
outsl
out
push
imul
sti
xorl
adc
mov
jnp
lcall
outsb
adc
mov
imull
cld
aam
mov
mov
xor
sbb
sbb
std
pushl
scas
in
xchg
cs
stc
mov
xor
sbb
sub
fsubrs
mov
scas
subps
aas
adc
inc
or
imul
jl
adc
mov
movsb
cmc
icebp
out
cmp
mov
or
adc
sbb
or
sbb
ds
pop
or
cmp
push
push
das
cs
sub
sbb
fidivrl
aad
pop
mov
mov
xchg
mov
and
ljmp
xchg
dec
leave
pop
and
jg
jmp
ret
xchg
arpl
inc
outsb
jl
adc
fstl
dec
in
arpl
fistps
cmpsb
sbb
stos
pop
fs
cmc
sub
lock
inc
or
idivb
add
repnz
jnp
ljmp
repz
sti
pop
fxch
mov
dec
pop
push
mov
imul
mov
fcomps
dec
out
mov
movsl
ja
cmpsl
fbstp
fmuls
sbb
imul
rcrb
fisttpl
scas
dec
push
and
in
pop
in
jns
pop
add
cmp
jae
mov
xchg
outsb
insl
mov
dec
aad
scas
imul
xchg
pop
xor
sub
pop
ds
sbb
out
out
mov
subb
into
xor
xchg
add
dec
pop
outsl
cmp
idivb
pop
ja
jns
dec
add
inc
inc
cs
iret
or
jns
mov
enter
jns
dec
iret
lahf
xor
cmc
cmp
inc
jge
fmuls
paddd
scas
cmp
xchg
mov
std
dec
cltd
jge
repz
adc
xor
cmpsl
jle
in
mov
cmpsb
jmp
mov
dec
mov
cmp
lock
pop
dec
fwait
jnp,pn
pop
or
rolb
and
mov
in
cmp
mov
divl
in
mov
hlt
cmpsl
mov
pop
jnp
fimull
arpl
xchg
ds
out
pop
iret
jne
push
push
fists
ret
lds
push
pop
cli
loopne
dec
push
and
sbb
in
pop
lds
mov
and
sbb
xchg
out
add
ja
mov
loop
pop
shll
arpl
pushf
repnz
outsb
dec
addr16
sbb
mov
jg
out
dec
mov
iret
test
push
cmp
ret
sbb
mov
add
mov
pop
and
cmp
dec
sub
mov
aaa
push
popa
ret
hlt
xchg
lret
mov
inc
jbe
mov
sbb
test
inc
mov
mov
jmp
pop
cmp
xchg
jg
test
das
iret
pop
fidivrl
pop
dec
mov
pop
xchg
insl
xchg
dec
sbb
jmp
mov
xchg
shll
je
andb
push
mov
cmovle
aas
jbe
in
das
fistpll
push
insb
push
scas
adc
jnp
movsl
shll
scas
mov
jecxz
jge
jns
push
jne
inc
iret
dec
ret
stos
mov
sbb
sub
jg
popf
inc
lods
inc
fwait
mov
and
aad
cmp
ss
and
lock
pop
push
ret
in
add
jbe
mov
in
and
hlt
mov
rcll
mov
cmpsl
cmp
mov
leave
mov
push
add
adc
jg
cmp
cmp
push
mov
and
jge
jmp
fnstcw
cs
loope
test
xor
loop
jnp
mov
push
push
pop
and
outsb
cmp
inc
out
movsb
dec
xchg
push
int3
dec
xchg
fld
xorl
dec
stos
mov
dec
pop
xlat
pop
sub
or
imul
or
arpl
jno
lahf
fcomip
mov
mov
repz
fistpll
mov
jae
shlb
mov
test
jle
mov
imul
jnp
sti
fucomp
sub
mov
cmp
mov
out
shlb
xchg
mov
sub
inc
xor
add
out
pop
fwait
jae
adc
add
and
aad
or
cli
mov
lcall
fdivrs
pop
or
ret
jle
cltd
mov
cltd
pop
or
mov
stos
cli
pop
pop
test
and
inc
addr16
mov
dec
fisttpl
test
dec
fisttpll
mov
mov
jmp
outsl
xor
pop
loope
cmp
push
add
sub
xor
pop
test
push
pushf
mov
xchg
orb
shl
lods
cmp
js
outsb
in
inc
adc
jnp
mov
mov
nop
jb
dec
dec
push
cld
sbb
xchg
js
icebp
or
fs
mov
fdivs
xor
iret
mov
pop
xchg
addr16
insb
test
mov
in
push
pop
sbb
outsl
mov
push
fistpl
in
mov
jmp
out
addl
ret
mov
imul
daa
leave
jmp
stc
sub
adc
and
push
fmull
popf
pop
pop
arpl
in
imul
in
mov
dec
js
jmp
test
aaa
jmp
ret
test
cwtl
lahf
push
and
mov
int
cmpb
jbe
lock
jge
stos
mov
std
arpl
mov
popa
mov
jne
outsb
into
outsl
lahf
cmpsb
ja
into
fistl
insb
rolb
leave
inc
fs
cmp
xor
cmp
mov
pop
cmp
inc
and
sbb
stc
jns
cmc
leave
jle
push
mov
in
xor
and
mov
sub
arpl
jae
cmc
xchg
xlat
sbbl
mov
mov
sub
and
out
fstpl
add
inc
xor
cmp
mov
dec
std
jo
mov
nop
cmp
jno
add
and
scas
dec
test
loopne
push
lock
aaa
mov
pop
aas
in
sti
pop
mov
mov
out
xchg
orb
ljmp
and
pop
mov
jmp
out
ffreep
sub
shrb
cs
pop
sti
sbb
jl
dec
jg
cli
inc
lcall
adc
jo
xchg
jg
cmp
test
decb
in
fcmovnu
push
out
and
outsb
push
shlb
mov
div
test
std
mov
sub
dec
and
cld
jae
jl
arpl
dec
cmp
xchg
lret
mov
test
adc
es
adc
comiss
sbb
sbb
add
xchg
call
lods
int
orb
out
add
pop
push
lcall
gs
dec
jge
push
out
test
cmp
in
push
loop
push
cmpsb
pusha
incb
into
shr
sahf
icebp
inc
sbb
mov
sub
aaa
lahf
out
enter
imul
inc
jnp
pop
push
ficoms
sub
aam
mov
mov
ret
shr
aas
fwait
sbb
shrb
out
ret
iret
outsl
aad
jg
scas
int
repz
std
inc
les
pop
je
out
jns
daa
add
mov
mov
inc
jmp
inc
cld
aaa
ficomps
scas
mov
jg
iret
rclb
ret
jge
push
fidivl
pop
mov
inc
enter
loopne
cmpsl
pop
mov
push
arpl
in
bound
mov
shlb
mov
jmp
xchg
or
inc
fisttps
sub
add
push
test
pop
sub
jne
test
xchg
push
inc
jg
mov
ja
mov
cmp
icebp
cmp
pop
xchg
cmc
mov
fnstenv
sbb
pop
stos
jmp
ljmp
jle
push
jnp
in
fcomi
push
in
repz
sarl
mov
mov
push
or
movsb
jnp
divl
xor
mov
fistps
mov
rcr
cmp
fndisi(8087
bound
fisttps
jae
fildl
aaa
out
imul
ljmp
rcrl
lods
dec
cli
mov
leave
lods
in
mov
xchg
std
xor
rcrl
ficomps
push
imull
cmp
fwait
loope
push
scas
add
mov
inc
pop
imul
and
xchg
bound
in
aam
sub
adcb
xlat
mov
fwait
scas
adc
lock
xor
rcl
shlb
repz
and
pop
iret
xchg
mov
je
lea
outsb
imul
xor
cmc
pop
jg
ds
or
rolb
sarb
or
mov
cli
in
mov
insl
inc
imul
jg
jne
xchg
mov
into
stc
add
aas
mov
orps
cmc
fdiv
jg
cld
push
in
iret
fisttpll
lds
mov
fcomi
push
cld
lods
out
jne
sarl
outsb
adc
fists
jns
fimull
pop
lea
xchg
imull
subl
adc
daa
ja
add
jecxz
mov
bound
ror
sub
mov
lret
sub
pop
add
out
push
jp
shl
mov
incb
mov
jecxz
outsb
adc
mov
icebp
mov
popa
fidivl
adc
push
lahf
sub
dec
and
mov
mov
lcall
ja
pop
sarb
shll
in
ss
pop
xor
dec
pop
or
fnstenv
fucomip
push
sbb
fs
popf
pop
fistpll
gs
cmp
or
lds
xchg
xlat
cmpsb
mov
cmp
push
pop
mov
scas
xlat
or
xor
inc
outsb
mov
dec
push
fimull
xor
loopne
inc
add
fisubrl
cmp
shl
jecxz
ss
movsl
aas
adc
ja
jle
push
in
icebp
pop
imul
sbb
clc
aas
mov
cli
jge
add
mov
jbe
pop
out
pop
das
push
sahf
and
mov
or
mov
std
pop
adc
ss
lahf
scas
and
adc
lods
das
neg
cmp
cli
adc
cmp
add
xchg
cli
sbbb
sbb
pop
xor
subb
mov
jp
dec
cmpsb
loope
push
cmc
and
stc
roll
pop
mov
pop
cmp
add
sub
fimull
sti
aaa
lahf
mov
mov
fcoml
push
xchg
xchg
or
push
adc
add
adc
cmpsb
adc
jnp
mov
out
jbe
push
xchg
or
pop
sub
lcall
sbb
mov
cmpsl
inc
mov
shrl
test
or
std
pop
int
shlb
adc
aad
fst
lock
xchg
sahf
mov
xor
scas
addr16
push
arpl
pop
mov
add
cmpl
fcompl
fcomip
push
fsubrl
jecxz
je
out
lock
lret
or
fisttps
inc
sahf
sub
cli
mov
lcall
aam
rcrl
jecxz
push
jbe
mov
xor
ds
subb
ds
aas
jecxz
insl
pop
push
and
es
adc
sbb
out
or
push
mov
push
cwtl
xor
pop
loopne
orl
icebp
bound
movsb
xlat
loope
add
std
or
cmpsb
sub
mov
xchg
scas
push
xor
jg
daa
mov
or
jmp
jo
pop
lds
mov
sti
mov
loope
dec
test
cmp
push
insb
cs
sub
mov
cwtl
pop
sub
jle
sub
sbb
jno,pt
cmp
mov
fimuls
jbe
sub
enter
dec
pop
cmp
jecxz
fwait
cmpsb
imul
shll
adc
out
out
mov
rorl
repz
shl
mov
push
or
add
sbb
pop
pushfw
jle
mov
std
movsl
aam
fwait
pushf
gs
les
xor
inc
rcll
push
mov
mov
pop
mov
xlat
mov
ret
arpl
or
mov
xchg
add
cmc
mov
add
das
jecxz
and
out
sub
sbb
sub
sar
push
jl
xchg
and
lahf
sbb
ljmp
lock
aas
cmp
ja
in
clc
gs
add
sbb
insl
outsb
jl
in
rcl
leave
outsl
aaa
or
iret
dec
pop
in
push
loopne
lahf
sti
repz
adc
es
mov
mov
xchg
negl
jp
jmp
clc
mov
fsub
addr16
cld
dec
pop
std
xlat
cltd
xchg
xor
gs
iret
mull
jecxz
std
in
sti
jb
push
ljmp
paddb
xlat
in
pop
das
flds
gs
sti
mov
lahf
jno
cld
or
aaa
cwtl
jl
mov
jecxz
clc
mov
addr16
pop
lret
fdiv
fimuls
mov
xchg
cmpb
pop
out
mov
lds
push
out
cld
mov
mov
cmp
fisttps
fwait
sbb
jg
mov
cwtl
cld
pop
sub
mov
scas
outsl
stc
in
icebp
pop
mov
fbstp
mov
mov
dec
cmp
adc
idiv
out
push
jecxz
cmp
popf
fistpl
aad
sbb
mov
pop
sub
ret
jmp
add
test
leave
push
loop
pop
mov
cmp
pop
and
lret
xlat
add
sub
adcl
leave
push
sti
scas
loopne
lods
fsubrl
ljmp
xorb
add
stos
cmp
add
fnstenv
push
mov
mov
push
adc
scas
jmp
mov
push
add
push
dec
sbb
ja
in
iret
mov
push
xchg
shll
pop
pop
test
or
mov
daa
lock
sbb
aas
movsl
push
push
scas
sti
out
out
sbb
sbb
jmp
inc
lahf
lods
ror
push
inc
rcll
pop
outsl
in
cmp
cmp
sub
xlat
dec
cmp
mov
mov
mov
cmp
xchg
repnz
int3
test
fistpll
sahf
mov
ds
mov
pop
adc
mov
fsubrl
fisttpll
lahf
outsl
js
in
adc
pop
popa
aam
mull
mov
xchg
scas
xlat
xchg
loopne
cs
iret
xor
outsl
pushf
js
roll
mov
push
dec
jnp
or
outsb
sbb
mov
fisttpl
je
int3
push
mov
outsb
xchg
rcrl
cmp
cltd
gs
pop
mov
xchg
cli
cmp
fdivrs
or
inc
sub
fidivrl
out
pop
pop
addr16
ljmp
mov
xchg
out
push
push
push
mov
outsb
into
mov
pop
out
lea
fbstp
jmp
arpl
lock
adc
mov
or
xor
cmpsl
loop
xor
cmpsl
loop
xor
cmpsl
loop
mov
push
adc
push
jp
or
ret
pop
xor
loope
mov
jmp
mov
scas
mov
jecxz
out
sub
out
dec
jecxz
inc
xlat
out
scas
imul
dec
pusha
lahf
mov
sbb
mov
mov
cmp
outsb
cld
dec
daa
sbb
outsb
bound
shrl
add
mov
mov
lods
sbb
hlt
lahf
in
loop
ret
in
inc
je
add
int
xchg
mov
mov
mov
iret
mov
popa
fdivrs
scas
cmpsb
js
mov
bound
flds
pop
jb
fistpl
ds
iret
stos
arpl
scas
ficompl
and
add
loopne
lcall
arpl
xor
mov
leave
cmpsb
mov
ljmp
cmpsl
inc
fwait
or
push
ja
jnp
push
or
adc
lahf
push
int3
int3
scas
sti
mov
mov
or
mov
mov
stc
sarb
or
xchg
xacquire
xchg
inc
cmp
iret
repnz
out
imul
pop
adc
rcrl
push
push
imul
test
sbb
push
lret
lods
aas
mov
mov
ret
js
aaa
pop
insb
xchg
fistl
int3
pop
jnp
insl
shlb
out
pop
scas
andb
pop
data16
sub
loopne
out
jno
xchg
pop
out
arpl
and
jecxz
jno
outsl
lcall
lret
sbb
xchg
lea
fcompl
loope
cld
pop
sub
ret
mov
leave
hlt
or
mov
stc
out
pop
jge
aas
test
inc
or
mov
out
dec
lcall
mov
jmp
jg
stos
xchg
fisubl
iret
hlt
mov
pop
nop
mov
jl
mov
pop
mov
ret
add
jb
cli
out
lock
jg
cmp
sbb
repz
jnp
sbb
bound
sarb
mov
fcmovb
inc
lea
xchg
push
pop
push
push
mov
sbb
mov
mov
decb
aas
pop
and
pop
in
inc
lret
cmpsl
mov
in
fistl
adc
es
jno
xchg
inc
out
cmp
adc
test
mov
out
pop
int
sbb
push
xor
imulb
in
cli
xchg
pop
scas
sarl
mov
cltd
notl
in
sbb
mov
dec
ret
fmuls
mov
rcrb
sbb
pop
xchg
push
out
adc
mov
push
push
mov
xchg
push
xchg
xlat
mov
adc
mov
push
and
out
push
sub
notb
xor
push
xchg
sbb
inc
and
mov
mov
or
insl
mov
iret
pop
jle
ret
sbb
jae
iret
xchg
xchg
aaa
mov
xchg
mov
pop
scas
xlat
pop
loop
inc
popf
pop
push
pop
cs
pop
xchg
dec
nop
mov
cmp
std
pop
sub
rorl
test
xchg
icebp
pop
pop
ss
rol
cmpsb
sub
aas
clc
jnp
fs
out
mov
jp
dec
pop
ja
ljmp
repnz
leave
adc
cwtl
testl
into
mov
ss
icebp
pop
stc
and
lcall
outsl
sbb
insl
mov
mov
sub
and
fwait
adc
lret
xchg
scas
negl
or
pop
sbb
or
lahf
pop
fnstenv
and
jle
xchg
cld
jns
mov
mulb
xor
scas
xor
push
cs
sahf
sbb
pop
push
test
mov
push
jb
jecxz
iret
pop
scas
push
sbb
jl
xchg
fdivl
lret
xchg
mov
and
into
or
sbb
cmc
add
and
loope
pop
xlat
mov
ja
mov
add
mov
aam
xor
cli
inc
cmp
pop
ret
call
nop
xchg
pop
inc
sbb
ds
jg
das
add
sub
int
aam
or
fstpt
jmp
xor
mov
outsl
cmp
sub
divl
mov
xchg
das
int3
pop
pop
and
nop
int3
cmpsb
dec
movsb
mov
adc
mov
scas
sbb
sarl
dec
or
popf
mov
iret
insl
fcomp
mov
mov
push
xor
dec
sub
add
pop
imul
scas
mov
push
xchg
mov
std
xor
sbb
sbb
add
cmp
add
cmp
and
loope
outsl
sub
es
fldt
aas
mov
shll
mov
popa
test
push
fucomp
cmp
out
inc
sub
imul
lods
inc
fsubrl
dec
shrl
div
sbb
dec
popf
pop
out
fisubrs
adc
call
dec
ljmp
leave
xchg
sbb
icebp
xchg
xadd
ds
stc
fidivs
repz
into
lock
mov
mov
sar
and
rcrb
shlb
insb
out
mov
dec
jns
jbe
ret
int3
push
or
dec
rol
outsl
fcompl
pushf
or
insl
push
jge
sbb
mov
pop
imul
push
xchg
jl
or
push
jmp
inc
popa
pop
out
stos
in
dec
jl
xchg
out
mov
lock
mov
fcompl
pop
dec
outsl
das
add
outsl
sub
ljmp
pushf
faddp
fisubrs
xor
repnz
fdivrl
scas
cltd
sbb
fildll
xchg
jg
sub
inc
xor
leave
ret
cs
mov
dec
jae
iret
xor
outsb
dec
mov
or
sbb
cmp
cld
xchg
aaa
push
pop
cmp
nop
mov
adc
mov
mov
mov
int3
pop
xorb
jae
cs
imul
insl
loopne
mov
adc
lds
mov
or
mov
sbb
lret
fisttpl
or
stos
sbb
daa
xorl
mov
aad
xchg
push
dec
xchg
dec
pushf
sbb
push
and
cs
or
cmp
cmp
idivl
ret
push
sbb
mov
test
cmpb
repnz
sub
aaa
mov
mov
ficoms
repnz
push
sbb
popl
mov
pushf
mov
cmc
addl
data16
lret
pop
pop
shlb
or
xor
sub
lods
out
pop
lods
je
mov
decb
outsl
cmp
pop
add
outsl
popf
lea
mov
ret
and
bound
call
jecxz
add
or
out
push
jecxz
shll
movmskps
xlat
xor
ds
int3
in
mov
js
fld
jmp
cs
pushf
or
in
pop
cmp
and
fcomps
out
add
pop
mov
and
cmp
mov
es
sub
cli
pop
mov
out
mov
xchg
das
and
lret
sbb
subl
rcrb
daa
gs
iret
pop
cld
cmp
pop
adc
les
mov
sbb
adc
dec
xchg
cmp
outsl
sbb
jne
lods
out
in
shlb
out
scas
jle
jg
iret
int
cli
pop
shrl
pushf
mulb
xor
mov
sahf
sbb
cs
sbb
out
sub
sbbb
repz
mov
fmuls
jnp
lret
rorl
push
pop
cli
pop
pushf
pop
sbb
pop
pusha
mov
mov
out
mov
rcrl
jg
fs
sbb
mov
stc
mov
push
mov
icebp
xchg
or
rcrl
or
cs
in
movnti
aaa
mov
leave
mov
jmp
fistpl
out
lret
fmul
jae
out
lods
pop
xchg
jl
push
xchg
add
push
mul
jle
pusha
push
mov
fdivrl
pop
std
or
adc
addr16
in
orl
xor
mov
sub
hlt
lods
pop
sub
sub
or
mov
repz
cli
repnz
or
repz
inc
push
dec
imul
xchg
in
rcr
test
sahf
cmpsb
rcrb
mov
faddp
aad
fdivs
xchg
divb
cmpsl
sbb
in
mov
test
jne
cli
cmp
clc
rorb
fwait
mov
or
in
fisubrs
mov
fwait
dec
xchg
jecxz
in
sahf
fisubrs
push
adc
adc
jp
lds
mov
mov
pop
or
xchg
stos
mov
hlt
xlat
xor
aas
mov
inc
sti
push
repz
dec
mov
dec
or
push
in
adc
add
ret
lahf
cmpsb
stos
scas
ret
arpl
into
shrl
push
push
mov
leave
rcr
mov
push
jb
lret
pop
fisttpl
fistpl
aam
cmp
mov
ljmp
mov
sub
mov
pop
xor
sbb
stc
mov
imul
test
lret
mov
cld
cmp
sti
daa
icebp
jg
mov
add
rcrl
sub
cmpsl
pop
and
ljmp
lcall
lret
or
mov
icebp
outsl
lcall
cs
into
dec
push
rcrl
xchg
and
pop
std
hlt
daa
push
jle
mov
push
adcl
cs
dec
and
pop
fsub
imul
jae
outsb
stos
pop
leave
imul
aas
mov
ds
mov
xor
mov
add
mov
mov
jbe
ror
rcr
pop
sub
dec
insb
fimuls
mov
cli
sti
out
push
int
ds
xabort
arpl
sbb
mov
mov
lahf
cwtl
xchg
dec
and
mov
ljmp
sub
sub
out
subl
icebp
push
dec
out
js
into
shr
mov
fisubrs
idivl
cld
sbb
cli
jns
jne
mov
aad
ret
push
mov
sbb
loope
jae
mov
or
push
rcrl
scas
add
shrb
sbb
add
fnstcw
scas
xchg
mov
add
sbb
fildll
test
scas
inc
push
outsb
cmp
filds
mov
sub
lock
cld
int3
or
fwait
cld
mov
sub
add
mov
dec
ss
aas
dec
leave
jae
testl
pop
jne
das
jne
in
and
push
add
test
dec
cmp
hlt
pop
push
xchg
out
cmp
sti
ret
loope
ja
lods
ljmp
mov
scas
mov
mov
ljmp
jmp
lahf
push
mov
out
fisttps
sahf
test
push
mov
mov
arpl
pop
xchg
mov
dec
sti
flds
outsl
or
insb
dec
jb
aaa
lock
popf
mov
fildll
scas
pop
fadd
sti
popa
dec
sbb
fwait
lret
sbb
sbb
aam
pop
pop
xchg
popf
xchg
ficomps
xor
pop
shrl
fwait
out
cli
add
xchg
std
sub
imul
dec
pop
dec
push
cmpsl
sahf
nop
mov
gs
cmpl
xchg
cmc
inc
push
xlat
inc
loopne
in
jge
push
int3
into
xchg
out
mov
mov
shr
out
ret
movsl
cmc
mov
pop
test
xchg
sub
lock
mov
mov
sbb
mov
imull
jge
mov
fidivs
pop
sti
cli
cmp
fnstcw
mov
mov
idivl
lods
hlt
stos
shl
test
sbb
cli
xchg
push
push
xlat
mov
xchg
xchg
push
testl
cmpsl
mov
jnp
jnp
pushf
sub
repz
xchg
and
sub
iret
jmp
out
rol
sub
and
lock
cs
lcall
mov
movsb
imulb
gs
xor
cmc
or
jbe
sub
push
push
lahf
inc
mov
sub
ret
and
push
fidivl
mov
sub
iret
js
in
lds
pop
cld
cmpsb
sbb
lret
std
mov
rcrb
cwtl
lock
or
cmp
lds
mov
pop
jne
mov
pop
sbb
mov
cld
add
aaa
repz
ffreep
in
mov
jmp
and
lret
lcall
mov
mov
out
divl
cs
in
jnp
lcall
insl
sub
movsl
in
jnp
iret
adc
sarl
imul
inc
mov
outsl
pushf
mov
mov
adc
adc
jecxz
outsl
sbb
iret
leave
out
rcll
fs
push
sub
pop
movups
outsb
or
jp
lods
xlat
lock
lahf
add
push
push
stc
sbb
adc
aas
cwtl
sub
outsb
into
fsubp
sti
xchg
in
lret
clc
mov
std
push
mov
scas
lret
pop
push
repnz
clc
pop
and
cmp
fldenv
aad
bound
xor
scas
aaa
adc
dec
outsb
xor
pop
or
pop
mov
xchg
sub
leave
repnz
in
pop
stc
jecxz
das
fidivs
repz
push
xor
addr16
sub
mov
iret
push
out
test
sub
jo
inc
push
fstp
add
test
outsl
inc
clc
cmp
mov
out
cmp
sti
or
inc
xchg
sub
iret
popa
scas
fwait
jg
and
or
aaa
mov
sahf
fldl
lahf
adc
mov
sub
and
pop
adc
mov
add
sar
adc
xchg
mov
jns
mov
inc
sbb
int
mov
pop
mov
sub
iret
outsl
das
sub
in
jp
mov
xchg
mov
jne
or
push
pushf
test
das
fadd
loop
add
jecxz
mov
loopne
ud2
aas
es
cmp
pop
mov
or
mov
sbbl
ret
jmp
sti
lret
das
mov
xor
xchg
leave
mov
out
adc
dec
push
jmp
mov
mov
push
shlb
cmpsb
ja
shrl
stc
cmp
lods
mov
out
dec
jnp
dec
in
mov
mov
out
mov
cmpb
adc
fildl
daa
sti
mov
test
jae
adc
sbb
mov
shr
or
lods
dec
sahf
push
in
mov
fwait
lods
xchg
or
popf
out
aaa
sub
popf
mov
rorl
xlat
sbb
and
in
mov
loop
adc
mov
inc
xchg
sub
jp
outsb
ret
testb
dec
dec
push
cmp
sti
rcrb
out
enter
mov
pop
outsb
insl
fcmovnb
pop
lods
rolb
ficoms
mov
loopne
lock
add
pop
ja
add
sub
fistpl
jmp
hlt
add
arpl
jae
mov
and
cmc
add
push
out
jmp
mov
lcall
or
leave
call
xchg
jbe
cli
adc
fistl
mov
sbb
aad
ja
std
fidivl
ljmp
pop
sbb
stos
mov
lea
adc
insl
cld
aaa
stos
gs
xor
scas
pop
lahf
aas
arpl
dec
leave
or
lea
out
add
sahf
ret
hlt
cmpsb
and
aam
int3
xorl
cmp
data16
in
cmpsb
fdivr
lret
add
jg
js
mov
xchg
dec
imul
lock
icebp
mov
insb
test
std
mov
jg
popa
scas
call
inc
lahf
int
lahf
or
out
in
dec
scas
mov
iret
scas
addr16
mov
iret
clc
mov
cmp
mov
cmpsl
and
add
or
pop
pushf
out
or
cmp
sub
testb
jl
je
push
pop
js
mov
pop
mov
inc
lcall
fdivr
mov
cmp
pushf
push
dec
push
push
xchg
pop
subl
aaa
ljmp
xchg
out
dec
pop
add
sbb
shrb
into
mulb
or
lods
jns
pop
sbb
stc
cmp
addr16
cmp
pop
pushf
mov
and
pop
and
pop
sub
xor
shlb
jl
ljmp
icebp
and
jmp
inc
in
push
test
jae
in
add
pushf
lret
pop
push
fiadds
jge
push
scas
mov
cmp
std
jp
xor
mov
loop
sub
cmp
popf
std
adc
mov
jb
sub
add
scas
mov
mov
insl
sarb
popf
mov
outsb
lea
push
mov
mov
and
add
and
out
xor
pop
fnstsw
jl
lahf
lods
mov
imul
adc
or
ljmp
xor
int
mov
lcall
test
cltd
lock
inc
mov
xchg
dec
mov
dec
mov
out
mov
pop
scas
mov
xor
stc
out
jae
mov
jmp
mov
mov
mov
xchg
jb
aas
movsl
xchg
mov
and
jg
push
push
mov
loop
ret
xor
sbb
out
loope
pop
push
sub
xchg
sbb
inc
xchg
icebp
push
mov
and
dec
xchg
fbld
and
mov
and
fisttpl
jmp
cmpsb
mov
sbb
mov
out
in
inc
jns
jecxz
mov
movsl
loopne
fisttps
fisubrl
shrl
lcall
insb
adc
sub
in
sbb
mov
int
sbb
cltd
inc
rol
enter
gs
pop
cmp
arpl
je
jp
push
loopne
or
js
jp
mov
in
test
in
pop
rcrl
cmp
test
mov
scas
outsl
nop
pop
sbb
sbb
test
jge
mov
push
dec
xchg
push
xor
sahf
add
add
mov
mov
mov
addb
pop
add
aaa
mov
aad
mov
scas
jge
insl
fucom
in
sbb
inc
je
scas
jl
xlat
ja
repnz
ja
repnz
ja
repnz
out
fmulp
ja
pop
aaa
push
mov
into
mov
fsubs
fdivr
pop
lods
jmp
jne
adc
add
mov
test
xor
xchg
ja
in
scas
test
ret
mov
xor
inc
call
mov
std
sbb
or
lods
mov
les
dec
push
mov
jle
stc
rcpps
outsb
hlt
cmpsl
pop
aas
nop
inc
mov
ret
and
out
xchg
sbb
cli
sub
cmp
xchg
test
xchg
fistl
mov
out
jae
iret
mov
ret
das
cmpsl
bound
cltd
add
push
dec
xchg
mov
cmpsb
jb
xchg
cmpsl
jne
test
dec
and
rolb
pop
cmp
inc
mov
lods
add
inc
xchg
divl
pushf
fnstsw
stos
outsl
jl
testb
mov
in
out
rol
dec
push
les
movsl
aas
jmp
sahf
stos
xchg
pop
rcl
xchg
popf
ret
arpl
jge
and
add
jne
fwait
je
pop
ljmp
out
push
xchg
out
filds
jo
repz
cmp
cmp
dec
adc
ret
push
mov
fsubl
dec
mov
cmc
mov
dec
cwtl
add
mov
fnstenv
jg
int3
push
repnz
push
out
pop
pop
sti
and
imul
xchg
lret
icebp
sbb
xlat
sbb
fcmovbe
inc
xchg
shll
mov
icebp
popf
ret
int
xor
push
jg
mov
pop
sub
pop
mov
imul
in
loopne
mov
adc
adc
pusha
adc
sub
jl
hlt
and
clc
adc
adc
mov
pop
inc
test
imul
push
jne
sub
repz
flds
xor
dec
insb
cmp
and
loopne
sahf
fcmovne
repz
push
sbb
jl
mov
jae
scas
icebp
into
or
and
cs
leave
dec
fidivs
mov
jns
push
push
push
push
faddl
cltd
or
daa
pop
outsb
mov
push
mov
lock
jecxz
mov
icebp
outsb
mov
jnp
sti
adc
daa
mov
mov
mov
shl
cmpsb
push
adc
inc
push
add
push
or
mov
jbe
movsb
out
push
xlat
jae
pop
mov
push
scas
add
jbe
fstl
cmp
sbb
mov
mov
insb
sbb
test
cmp
push
inc
mov
jecxz
subl
shlb
mov
jle
pop
lock
mov
outsb
cmpsl
xchg
jne
pop
ret
dec
xor
sarb
out
lret
mov
outsb
insl
out
jnp
ja
pushf
call
inc
rclb
lret
xchg
nop
lret
ja
mov
mov
mov
shll
nop
cmc
push
push
push
push
push
addr16
leave
pop
in
and
sarb
mov
xchg
insb
mov
das
arpl
mov
ret
mov
mov
pop
xchg
js,pt
lcall
cmpsb
sub
fwait
jae
pop
ds
pop
sbb
push
jl
lock
cmc
out
pop
jnp
or
jnp
mov
or
add
xchg
or
xchg
xor
cmpsl
xor
cmp
fcoml
rclb
jnp
pop
filds
repz
lods
push
int3
iret
lods
mov
loopne
in
icebp
mov
jg
pop
sub
mov
sub
cmpsl
or
fcmovne
popf
adc
cmp
notl
mov
ret
repz
popf
jle
adc
ret
outsl
pop
in
mov
notb
xchg
ficoml
lea
das
repnz
mov
add
inc
sub
stos
cli
xchg
js
insl
jg
popf
lcall
or
insl
fsubrl
cmp
in
mov
in
jno
adc
ja
lcall
push
dec
sti
xchg
outsl
lcall
outsb
push
sbb
mov
sub
fadds
imul
xchg
out
rorb
ja
jae,pn
cmp
nop
mov
fildll
in
push
repz
and
and
cld
divl
dec
inc
hlt
pop
dec
out
xor
mov
pop
jl
sub
stc
ds
ds
and
iret
imull
xchg
pop
stc
fsubp
jo
cmpsb
pop
push
aaa
mov
jae
sub
xor
jb
gs
jmp
push
sahf
add
xchg
push
push
shl
jbe
shll
jg
inc
fwait
mov
add
xor
int
scas
mov
mov
cwtl
sti
lcall
jge
or
in
cmpb
cwtl
pop
cmpsb
jge
sub
mov
mov
lss
mov
je
mov
or
or
or
popa
or
sbb
scas
rorb
fdivr
dec
loope,pt
cmp
cmp
movsl
adc
in
jle
adc
mov
mov
ljmp
xlat
adc
mov
jl
mov
inc
mov
sbb
mov
rcrl
in
test
xchg
mov
mov
inc
dec
dec
popf
cli
fidivrs
jnp
fwait
jg
jne
xchg
cmpsl
loopne
push
fs
das
and
mov
push
xlat
loopne
adc
xchg
ror
insb
cs
mov
mov
repnz
dec
xadd
aas
jb
push
inc
out
dec
fstpl
cmpb
pop
je
sahf
xchg
scas
xlat
icebp
std
mov
or
mov
mov
shl
xchg
jl
and
popf
and
fprem
fistpll
iret
leavew
rorb
sub
mov
pop
insb
andl
or
scas
outsb
jecxz
sti
pop
stos
mov
push
or
sar
pop
lock
bound
into
add
pushf
adc
mov
clc
push
mov
dec
add
cmp
jb
sahf
in
fmuls
push
xlat
sub
mov
outsl
sti
inc
xchg
inc
cmp
lods
inc
push
xchg
fnstsw
ret
fisubl
movsb
pop
dec
daa
push
int3
jo
jo
arpl
shr
pushf
arpl
fdivrs
cld
movsb
and
clc
inc
mov
cmpsl
into
lcall
shr
nop
mov
int3
ljmp
test
add
mov
pop
sub
xchg
iret
retw
fldcw
movsb
fistpll
mov
jmp
ret
fisubrs
je
pop
push
lahf
inc
jne
fnstsw
fiadds
sbb
int3
mov
insl
sbb
or
cld
sbb
repz
lock
das
mov
push
pop
pop
daa
and
dec
pop
inc
adc
mov
xlat
xchg
lret
pop
cmp
jbe
int
mov
stos
jo
insl
pop
cmp
int
jnp
cmp
les
xor
and
sbb
aas
inc
in
hlt
jle
insb
mov
pop
pop
outsl
jmp
ljmp
rep
psllq
ret
and
aas
adc
lcall
cmpsb
xchg
jg
out
dec
stos
outsl
idivl
jl
cli
pop
fidivrs
fwait
sbb
pop
mov
push
cmp
lahf
pop
ret
cs
pop
mov
gs
cmp
stos
insb
pop
dec
mov
ficoms
mov
inc
popa
adc
mov
xchg
and
dec
and
into
sub
sbb
and
add
enter
xor
ss
fdiv
movsw
xchg
pop
pushf
push
cs
cmp
icebp
sbb
adc
rcrl
mov
insl
sbb
nop
outsl
fiadds
es
inc
mov
jg
add
rorl
out
arpl
sarb
out
jb
nop
fcomip
mov
ret
and
or
mov
idiv
xchg
inc
hlt
je
std
loope
clc
out
clc
iret
push
rclb
inc
pushf
push
mov
in
xchg
lcall
sti
jns
out
das
cli
out
add
into
adc
pop
xchg
or
sub
inc
and
daa
fcompl
cmc
dec
mov
out
mov
mov
out
cmpsl
mov
and
mov
pop
inc
mov
pop
xchg
arpl
icebp
data16
movlps
sbb
cmpsl
mov
mov
pushf
icebp
lret
icebp
add
fbstp
or
in
stos
iret
fildll
icebp
jle
cmc
xchg
fldl
and
outsb
add
rcrl
push
sub
push
outsl
xchg
jmp
out
arpl
add
sub
pop
fcompl
sahf
leave
sub
inc
sub
xor
negb
push
mov
pop
lock
movsb
fisubl
lods
xchg
mov
or
xor
jecxz
imul
adc
outsl
fists
fistpl
filds
std
push
mov
ljmp
add
cmpsl
cmpsb
mov
ljmp
insl
cmpsb
fwait
mov
ret
sbb
dec
cmpsb
cmp
xchg
mov
jg
iret
mov
icebp
jae
jle
sahf
mov
or
movsl
push
push
lret
scas
jmp
mov
inc
int
out
mov
pop
iret
mov
stc
mov
pop
inc
add
xor
scas
dec
dec
mov
push
mov
mov
xchg
mov
pop
nop
inc
fisubrl
out
mov
lods
das
mov
or
mov
js
js
push
cmc
ret
clc
and
mov
lahf
out
pusha
sarl
pushf
pop
push
mov
add
mov
and
test
outsb
or
sub
sub
rorb
jl
outsl
mov
insb
cmpsl
mov
dec
cmp
sahf
out
mov
das
mov
mov
push
repz
lret
xor
adc
fldenv
lods
ds
mov
pop
cltd
xchg
imul
cmc
insb
xchg
int3
mov
inc
negl
sbb
imul
pop
insb
jnp
xor
pop
or
out
rorb
cmp
imul
out
shl
xchg
xlat
pop
fnstcw
jmp
incb
out
and
cmpsb
cmp
jnp
fistpl
jae
lret
cmp
iret
cmp
cmc
inc
xlat
popf
repz
loopne
pop
shlb
cmpsl
cmpl
pop
or
notl
jmp
imulb
jae
sub
xchg
jg
enter
insl
orl
fisubrl
and
orb
mov
lahf
fcoml
ss
test
ja
ss
push
pop
xlat
std
or
imul
imul
loop
inc
pop
ret
stos
sti
sub
pop
cmc
jb
push
addr16
pop
imul
in
cmp
cwtl
jle
inc
push
cmp
mov
ljmp
xor
adc
std
mov
and
sbbl
imul
lds
hlt
notb
mov
pop
jo
loop
lock
repnz
pop
adc
leave
outsl
lcall
popa
pop
test
cmc
adc
cmp
fwait
jl
xchg
frstor
shlb
pop
mov
aas
push
push
out
jg
or
fsubrl
nop
or
push
fcmovnb
leave
cmp
inc
out
adc
scas
outsb
decb
lock
xchg
jne
cmp
jl
jg
jl
out
dec
sub
xchg
or
xlat
iret
rorl
xor
sti
arpl
and
orl
iret
stc
int3
and
mov
pusha
sti
jp
push
jo
ret
divb
sbbb
aaa
iret
cwtl
jmp
mov
jo
icebp
shl
mov
mov
repnz
mov
cmpb
stos
jecxz
mov
sbb
popf
push
scas
aad
clc
xlat
repz
mov
dec
sbb
push
xlat
push
or
dec
mov
hlt
repz
idiv
mov
addr16
shll
push
imul
mov
cltd
push
mov
pop
fnsave
test
insl
jne
in
sub
or
movsb
pop
jns
mov
mov
pop
out
insl
mov
in
ljmp
je
mov
in
mov
popf
shrl
scas
mov
push
lea
and
repz
mov
in
cmpsb
add
mov
jne
addl
push
aas
sarb
push
mov
jmp
fwait
pop
lcall
ja
fsubrl
sbb
shll
and
mov
mov
xorl
add
gs
cltd
sbb
ret
test
push
aaa
push
cmpsl
inc
sbb
mov
sub
xchg
mov
lret
scas
mov
loopne
or
in
mov
jne
ds
fs
pop
dec
lcall
shrl
cmp
mov
fcmovne
adc
push
and
and
dec
mov
arpl
sub
aad
or
adc
popa
dec
aam
ds
out
jge
out
push
or
and
sbb
ds
es
popa
mov
and
leave
adc
int3
pop
adc
push
adc
push
por
loope
stos
test
pop
loop
mov
pop
popa
jne
fldt
lret
jb
mov
jecxz
pop
inc
loop
fdivs
ret
xchg
dec
sub
fnstcw
mov
addr16
into
mov
cmpsl
pop
cmpsl
std
fildl
sbb
pop
pop
or
xchg
mov
sub
ja
in
stc
mov
pop
cmp
int
pop
shlb
ffreep
in
sub
jne
fwait
jb
out
mov
or
in
jnp
sbb
imul
mov
std
jle
pop
incb
mov
inc
jne
inc
sti
jge
imul
add
jmp
mov
pop
fisttpl
cmp
stc
popa
mov
sub
imul
jge
leave
and
pop
hlt
lods
cmpsl
xchg
fnstsw
decb
jecxz
xorl
ds
mov
decb
xor
lcall
std
add
jle
sub
push
add
mov
aas
push
out
testb
jle
mov
test
loop
jge
xchg
or
inc
lret
das
adc
inc
cmc
in
mov
adc
sbb
xor
fists
stos
jl
hlt
shll
sub
jp
cmp
imulb
ljmp
inc
out
xchg
pop
ficomps
shrl
pop
cmp
inc
cmp
and
inc
scas
pop
roll
pushf
decb
mov
lock
add
mov
scas
loop
push
negl
cmpsl
dec
mov
mov
mov
es
adc
mov
push
sbb
inc
leave
mov
xchg
cwtl
lahf
mov
or
bound
sub
ds
xchg
cs
mov
sub
pop
pop
mov
rcrb
dec
call
je
cld
xor
mov
or
cld
dec
pop
push
mov
push
and
stos
sub
inc
cmp
or
mov
jl
sbb
mov
lahf
dec
ljmp
clc
ljmp
fbstp
and
out
xchg
scas
sbb
stos
jbe
jmp
stos
int3
fdivrs
fidivl
inc
cmpsl
mov
sbb
imul
mov
push
repz
mov
scas
pop
jne
mov
mov
inc
push
and
or
inc
aas
nop
sbb
imul
mov
into
cmp
out
mov
gs
je
fisubrs
sbb
aas
leave
sbb
and
jns
jmp
fnsave
xchg
fsubl
test
mov
mov
pop
out
push
outsb
in
xor
fisubrl
leave
loope
mov
and
push
imul
out
push
jg
imul
loope
pop
xlat
inc
push
or
fisttpl
aad
push
cli
fwait
int3
ffreep
loop
fs
cmp
cld
into
mov
mov
mov
lock
mov
loop
sahf
out
pushf
arpl
addr16
push
xlat
loopne
call
inc
pop
sub
mov
inc
out
lcall
sub
xchg
cmp
lret
cmp
xchg
push
jge
mov
in
cmc
dec
lods
sub
xor
fstp
sbb
cmp
cmpl
stos
cmpsb
ljmp
movsb
fidivl
jae
pop
mov
or
mov
pop
pop
mov
mov
lret
mov
mov
ret
lods
inc
mov
insl
popa
jl
sub
mov
pop
jg
mov
sub
fists
sbb
cmp
lahf
jg
fscale
xchg
movb
sub
stos
xchg
push
xor
lahf
jecxz
pushw
dec
mov
sbb
sti
xor
unpckhps
aas
out
loopne
add
mov
sarb
push
outsb
mov
jnp
push
inc
mov
push
xor
pop
adc
xchg
jge
jle
and
jge
xchg
mov
jl
fwait
add
mov
and
add
lock
ret
add
dec
insb
mov
fstps
fimull
mov
xchg
jno
pop
push
xchg
roll
clc
pop
or
mov
push
dec
fs
lret
subps
sbb
mov
lea
jbe
sub
dec
push
rcrb
mov
outsl
in
loop
ret
jns
not
cmpsb
cltd
into
rorl
mov
sti
pop
mov
rclb
aam
xor
and
mov
scas
jns
jle
push
int3
mov
mov
lods
cmp
inc
aaa
scas
bound
pop
pop
bound
ja
push
aaa
adc
negb
stos
lock
in
aas
out
andb
ficoms
cmpsb
sub
xchg
out
pop
sub
pop
xchg
mov
ja
outsb
fistl
and
es
xchg
mov
mov
push
inc
mov
push
mov
mov
add
adc
in
loop
inc
out
ss
add
jle
pop
pop
inc
pop
sti
test
push
xchg
xor
testb
mov
dec
and
push
mov
out
std
push
mov
mov
pop
xorb
repz
mov
scas
imul
out
fcomi
addr16
je
out
jnp
adc
data16
std
call
iret
xor
inc
sbb
sahf
xchg
sti
cwtl
imull
cmpsb
inc
aas
add
pop
andb
fmull
jecxz
das
mov
jmp
test
lcall
cmp
out
sub
aas
jg
out
ds
sar
and
addr16
out
jle
mov
mov
xchg
lret
int3
cmp
sti
pop
mov
mov
xor
mov
adc
in
add
adc
xchg
outsb
jae
aam
int3
iret
cli
pop
cwtl
icebp
push
lods
pop
mov
cwtl
inc
leave
hlt
mov
mov
into
movsl
rorl
in
inc
cmp
in
sbb
repz
leave
pop
inc
pop
mov
cmpsl
addr16
push
insb
dec
out
dec
xor
dec
dec
cwtl
dec
mov
sub
dec
sbb
mov
call
jne
ret
jne
mov
mov
outsl
dec
imulb
cmp
pusha
idivl
pop
movsl
dec
xchg
fs
add
iret
gs
nop
ret
scas
pop
push
push
mov
push
cmp
push
cld
cmc
shrb
jns
bound
and
mov
hlt
inc
sub
in
leave
sub
mov
sbb
pop
pop
inc
inc
ja
or
in
fwait
dec
call
cmp
lods
outsb
jmp
movsb
lea
aas
sub
sub
dec
mov
mov
int3
cmpb
mov
lods
ret
in
arpl
mov
pop
pop
cld
xor
cmp
adc
mov
jl
neg
testl
test
or
jae
cmpsb
add
pop
out
lock
stc
hlt
pushf
push
xor
xchg
popa
inc
rcll
lahf
adc
jecxz
jmp
or
iret
adc
adc
push
dec
sub
js
inc
pop
mov
mov
dec
ds
mov
mov
or
fsub
mov
mov
scas
xor
cmp
mov
lret
mov
mov
roll
aad
add
jns
leave
in
aas
clc
js
pop
lret
add
imul
xchg
push
fnstenv
scas
arpl
filds
mov
fimull
mov
std
jnp
pop
rdpmc
jp
and
jmp
cld
mov
dec
jge
std
icebp
leave
inc
push
arpl
sti
mov
mov
cwtl
jae
push
scas
clc
jmp
lahf
or
lahf
or
scas
fstl
mov
push
test
xlat
inc
test
pop
insl
scas
addr16
std
cmp
sti
sbb
push
xchg
neg
inc
pushf
mov
orb
sub
daa
lock
out
mov
leave
mov
xor
mov
push
cld
sti
add
int3
mov
mov
add
call
call
mov
sbb
sbb
sbb
das
pop
pop
mov
jo
dec
lods
pop
xor
nop
cltd
add
fidivrs
outsl
insb
fistl
jae
push
aaa
cmpsb
xchg
xchg
jne
sti
test
out
shrl
mov
jne
lock
shrb
iret
lods
es
mov
icebp
clc
test
add
std
sahf
out
mov
cmc
popa
cmpsl
lods
out
mov
clc
test
fists
mov
xlat
or
xchg
pop
xchg
sbb
cmc
add
shlb
pop
ds
add
notl
shlb
cwtl
in
add
ss
cmp
pop
inc
out
popl
out
or
cld
sti
cmpsb
pop
icebp
outsl
add
stos
and
aaa
jecxz
out
pop
dec
shl
es
imul
fsubs
sub
cs
outsb
mov
mov
repz
push
mov
and
leave
add
mov
sub
sub
adc
icebp
je
not
lds
movsb
es
ljmp
lods
xchg
and
pop
test
sar
imul
jmp
mov
xlat
push
sbb
ljmp
add
out
out
mov
int3
fsubrs
popa
das
jl
cmpsb
add
cmp
cmp
mov
ja
insb
mov
xchg
insl
leave
mov
sbb
or
out
cwtl
mov
push
mov
mov
aad
lret
mov
fwait
out
push
fsts
lods
mov
dec
pop
ret
rcll
xchg
sarl
add
push
daa
insb
cmp
dec
idiv
outsl
cmpsb
fldl2t
imul
xchg
pop
and
cmp
adc
pop
adc
subb
scas
mov
fisttps
rclb
xor
jbe
push
les
aam
iret
cld
push
out
in
inc
lahf
sti
test
cld
popf
fadd
fdiv
out
int
pushf
adc
fistpl
cmc
rcl
sub
scas
or
pop
xchg
js
jecxz
jl
xor
ret
repz
mov
repnz
scas
das
es
jl
in
stc
loope
dec
add
and
data16
clc
push
stc
mov
lcall
enter
mov
iret
sbb
lods
cmp
scas
mov
and
in
ja
inc
push
out
add
fwait
imul
icebp
data16
aas
cli
gs
adc
mov
adc
scas
push
mov
jecxz
cmc
and
std
add
mov
sub
xchg
adc
fistpl
out
mov
fisubs
or
mov
roll
orb
cmovs
andb
ret
mov
mov
jecxz
into
aas
push
loope
jns
pop
shl
int
adc
jg
inc
jecxz
pop
imul
inc
jo
xchg
sub
push
ds
dec
out
sahf
shl
pusha
hlt
insl
xor
in
repnz
add
cmpsb
movsl
xor
cmp
sub
pop
adc
outsb
sbb
xor
dec
mov
leave
cmp
inc
inc
dec
jmp
push
or
pop
mov
test
pop
aaa
cmp
ja
xorl
imul
ficoms
push
push
jbe
sub
ficompl
mov
pop
adc
imul
add
jmp
jnp
fmuls
lahf
fmulp
out
stos
push
jns
in
push
int3
scas
ds
jecxz
mull
in
sbb
pushf
push
mov
icebp
in
sub
pop
out
mov
sub
sbb
mov
mov
fdivrs
and
mov
jl
mov
repz
cmp
mov
outsl
lahf
dec
push
jo
jg
dec
outsl
pop
lahf
xor
out
mov
sbb
adcb
shlb
dec
or
cmpsl
cmpl
xlat
loopne
sbb
repz
fdivp
xor
icebp
fimuls
mov
add
dec
pop
outsb
repnz
fdiv
adc
jg
jmp
dec
push
testb
mov
or
int3
push
aaa
dec
mov
inc
sahf
lock
lcall
aaa
pushf
fwait
icebp
xor
ret
inc
add
dec
cli
in
fs
xor
rcrl
mov
out
xor
sti
xchg
sbb
push
mov
cmpsl
scas
leave
loop
xchg
inc
xchg
cs
into
mov
test
aaa
adc
int3
cli
jecxz
outsb
fildll
addb
push
or
imul
daa
ljmp
sahf
adc
sbb
stc
push
lcall
ljmp
in
sbb
jg
sbb
adc
mov
icebp
jge
cltd
xchg
pop
push
mov
mov
jne
sarb
rorl
inc
mov
sbb
sarl
pop
jge
movsb
push
rolb
lds
jge
clc
outsl
lahf
pop
stc
dec
cld
push
and
in
out
mov
iret
sub
andb
leave
push
ret
mov
iret
jns
sti
test
ret
fisttpl
inc
cli
mov
iret
push
xchg
push
lret
test
fnstenv
mov
stc
sbb
rcll
popf
or
sub
jno
mov
sbb
je
ret
test
ss
aaa
cld
push
jnp
pop
jne
or
loop,pn
sbb
pop
out
inc
into
mov
js
hlt
aas
pop
cmp
das
pop
cmpsb
lcall
pop
pop
negb
sar
lahf
pop
and
xchg
ficomps
xor
sbb
jae
dec
sbb
mov
cmpb
js
mov
outsb
jno
pop
lods
sti
push
and
dec
mov
cs
mov
xlat
js
mov
out
dec
outsl
cmp
mov
pop
out
rol
mov
lods
mov
outsl
dec
cltd
sub
sti
cmpsb
pop
fidivs
daa
loopne
inc
mov
and
aas
mov
xlat
xchg
bswap
out
mov
ret
arpl
popf
mov
aad
mov
dec
cmpsl
cmp
les
jp
dec
call
fisubrs
incb
rcrb
or
sub
sbb
xchg
out
sbb
icebp
outsb
pop
in
cmp
push
add
out
jg
int3
cmpsb
loopne
out
mov
mov
and
mov
or
lea
in
pop
adc
int
lods
fmul
pop
xchg
divb
push
aas
scas
mov
push
test
dec
dec
lret
mov
incb
adc
push
mov
das
jmp
or
outsl
outsl
repz
mov
iret
js
fstp
xchg
es
push
lcall
fiadds
adc
mov
jmp
fsin
rcrl
ljmp
mov
xor
leave
mov
mov
mov
adc
sbb
xchg
sbb
insl
inc
sub
sbb
cmp
je
cmpb
sbb
rcll
scas
push
sbb
in
fnstcw
outsl
fwait
jge
cmp
push
jl
scas
sub
dec
in
or
lret
repz
adc
call
fld
inc
pop
lret
clc
xor
pop
cmp
mov
xor
into
mov
test
lock
sbb
adc
cld
test
enter
cmpsl
mov
imul
sbb
or
mov
jnp
sti
mov
fdivr
jb
lods
into
mov
les
jns
xlat
cs
push
mov
push
fistpll
mov
rclb
push
jp
add
jmp
xchg
mov
mov
movsl
xor
out
cwtl
frstor
push
fdivrl
in
lret
dec
lahf
in
ljmp
cmp
test
pop
mov
lret
pop
arpl
pop
pop
mov
adc
fstp
mov
sbb
and
pop
jnp
gs
dec
ja
or
cwtl
ja
rorl
insl
pop
cmp
cmpsb
fstpt
sub
pop
pop
fidivrs
test
iret
sbbl
sub
fcmovnu
mov
mov
jle,pn
xlat
mov
and
adc
cwtl
push
js
in
insb
call
imul
in
mov
testl
sbb
and
hlt
lods
lcall
jnp
inc
mov
mov
icebp
scas
xchg
sub
out
pop
and
mov
or
idivb
pop
jo
xlat
jnp
stos
push
scas
je
add
mov
sub
lcall
cmp
mov
lret
daa
fildl
lock
fistpll
cwtl
in
scas
scas
push
repz
imul
hlt
movsl
mov
inc
dec
pop
fidivrl
and
in
es
jnp
aaa
mov
xorl
negl
xchg
xchg
and
fucomp
mov
jg
mov
sub
cmp
mov
mov
in
push
out
dec
jg
scas
leave
jg
pop
mov
rcrl
dec
and
das
add
stc
mov
ja
fucom
pop
and
push
mov
jnp
sti
call
jnp
cwtl
inc
test
mov
ja
jl
test
mov
jnp
pop
push
popa
add
or
inc
insl
mov
mov
out
mov
sti
mov
mov
push
adc
scas
les
aad
mov
loope
in
jg
xchg
xor
negl
std
inc
xor
pop
icebp
cs
int
mov
cmp
pop
scas
scas
rcrb
fucomip
and
jmp
mov
call
dec
rcl
ljmp
pushf
es
sti
cwtl
cld
mov
jg
sahf
or
std
or
stc
sub
or
jl
pop
incl
or
lss
jmp
push
in
jae
add
jbe
push
mov
pop
imul
pop
xchg
jmp
inc
idivb
cld
into
dec
inc
ljmp
ss
mov
filds
lods
leave
or
sub
fmuls
xchg
faddp
mov
inc
std
movsl
mov
hlt
cltd
sub
mov
scas
imul
mov
aad
clc
xchg
int3
out
cli
fistps
push
out
mov
into
inc
cmp
pop
cld
push
xor
sbb
ret
loop
dec
lret
pop
push
fsubrl
mov
jns
in
mov
std
hlt
push
clc
test
dec
mov
inc
js
rorb
mov
pusha
push
ficoml
jl
adc
jbe
pop
adc
in
mov
push
cmp
mov
cs
push
pop
cmp
das
pop
out
lods
and
pop
fcompl
dec
frstor
jge
sub
xchg
sub
push
repz
dec
ja
mov
add
or
out
mov
into
test
fadds
mov
inc
xchg
jg,pt
or
addr16
data16
sbb
daa
out
xlat
and
adc
insb
hlt
icebp
fnstenv
or
adc
mov
lret
xchg
aaa
mov
ret
pop
and
dec
imull
sub
jl
ret
sbb
cli
adc
sahf
lret
int
jnp
pop
inc
ljmp
shr
mov
mov
dec
inc
in
sahf
or
cmc
sbb
fidivs
dec
push
es
or
ja
jo
jecxz
cmp
dec
mov
cli
jl,pt
hlt
cmc
jecxz
pop
push
jo
push
in
test
or
loopne
outsb
lods
or
xor
out
fistps
sbb
pop
leave
mov
jge
push
pop
jne
iret
pop
sbb
repnz
leave
stc
pop
cmpsl
ja
or
mov
sub
add
scas
insl
out
aaa
mov
out
jle
lcall
sti
test
adc
and
mov
lods
scas
test
lret
stos
jl
add
add
mov
add
lock
fildll
call
iret
dec
dec
xchg
loope
mov
mov
sbb
fildl
sar
mov
lahf
imul
scas
scas
fistps
add
mov
xlat
aas
pop
or
jp
rcrb
inc
jae
sub
dec
test
mov
sub
pop
loop
pop
ss
test
push
mov
mov
cs
scas
jmp
push
jecxz
push
pop
fisubrl
nop
cmp
das
fst
push
sub
ret
add
mov
ljmp
movsl
xchg
or
fxch
pushf
cs
mov
jmp
in
dec
and
mov
pop
movsb
sub
sbb
jmp
stos
fcompl
div
jnp
lcall
mov
mov
push
jae
mov
icebp
pop
and
mov
pushf
inc
mov
movsl
mov
mov
jp
fsubrp
sub
aad
test
lods
hlt
pop
test
in
ljmp
fdivrl
cltd
rol
mov
mov
pop
lods
test
ror
xchg
std
insb
ja
outsl
aad
daa
in
fnsave
insb
jae
scas
rcr
rcrl
in
es
sti
dec
sub
mov
and
sbb
mov
sub
mov
mulb
rcl
and
dec
out
fistpll
cltd
lcall
jo
leave
mov
outsb
int
sub
jns
sahf
decl
lods
cmpsb
or
jle
cmp
jo,pt
fisubrs
xchg
fistpl
out
test
push
out
push
ds
jle
adc
sbb
mulb
mov
mov
xchg
push
mov
lea
fiadds
out
sub
stos
and
jns
enter
mov
jecxz
loop
sub
mov
push
xchg
sbb
dec
int3
add
pop
adc
cmc
dec
mov
neg
setp
popa
lock
insb
mov
mov
push
das
and
lock
out
ljmp
add
js
icebp
dec
cmp
out
movsl
int3
jb
div
push
sbb
pop
push
repz
out
ljmp
jg
shlb
mov
fists
hlt
push
dec
dec
out
loopne
test
in
push
or
mov
int3
pop
decl
mov
leave
scas
mov
je
jp
insb
pop
iret
fsubr
popa
sti
cmp
clc
insl
lea
sbb
movb
flds
jbe
insb
stos
or
mov
int
inc
jge
sub
das
dec
inc
mov
fnstenv
into
out
xchg
in
pop
xchg
lds
push
ror
fstpl
lcall
ret
mov
incb
sub
xchg
stos
push
cmpsl
mov
fisubl
pop
sbb
xchg
iret
roll
push
cli
repnz
scas
repz
cwtl
cmp
insl
in
sti
mov
sub
iret
lods
in
std
andl
pop
int
mov
pop
shll
mov
mov
or
push
mov
faddl
xorb
fcmovne
pop
lods
mov
repnz
push
and
push
dec
xchg
repnz
sub
out
in
inc
cs
pop
test
popf
andb
mov
lds
outsl
pop
repnz
cmp
ret
mov
scas
add
in
ljmp
cmc
test
jmp
and
ja
iret
mov
xchg
jp
sbb
mov
and
repz
es
pop
mov
nop
mov
mov
repnz
mov
jg
daa
inc
cwtl
xchg
stos
jo
fs
or
pop
in
cmp
mov
das
movsl
push
mov
or
or
cmc
lods
iret
pop
xchg
add
mov
xchg
and
adc
aad
rcll
mov
mov
pop
inc
adc
scas
pop
out
push
add
mov
cmp
push
pop
inc
out
gs
or
iret
popf
sub
cmpsb
adc
je
jmp
mov
test
xchg
fmull
ds
sarl
data16
repz
jns
xchg
pusha
inc
repnz
mov
fbstp
sbb
add
push
push
mov
dec
inc
sub
adc
sub
pop
dec
fs
scas
or
inc
push
or
or
push
or
data16
xlat
fidivrs
push
jno
das
in
xchg
pushf
shll
mov
clc
mov
movsb
scas
and
jbe
mov
push
sti
or
xchg
sbb
daa
iret
cs
xlat
inc
pop
jecxz
push
push
xor
stc
push
filds
pusha
cs
ds
push
mov
or
or
hlt
outsl
leave
cmpsb
and
mov
mov
lods
js
mov
mov
mov
xor
iret
push
lret
xchg
icebp
xchg
sbb
add
scas
mov
sbb
ficomps
bound
dec
adc
iret
inc
ret
add
adc
dec
mov
ljmp
mov
test
fxch
cmpsb
outsb
mov
fistpl
sahf
aam
push
push
scas
test
ret
pop
or
fistps
int3
sub
mov
lcall
jne
add
out
xlat
pop
bound
mov
mov
jl
je
mov
scas
out
call
push
rolb
inc
and
add
xchg
inc
xlat
imull
xor
xchg
sub
xchg
sub
push
scas
adc
mov
pop
dec
scas
mov
fs
out
hlt
pop
mov
pop
loop
push
sbb
jae
mov
fcmovnb
push
pop
and
es
stos
jmp
push
out
jmp
push
jmp
jg
cld
insl
pop
aad
loope
lea
inc
lock
and
and
cs
push
push
sbb
imul
data16
cmpsl
popa
or
test
pop
push
push
leave
inc
icebp
data16
outsl
addr16
pop
fistpl
aam
and
xlat
pop
sub
dec
shll
imulb
cltd
jl
out
pushf
jmp
jg
cmp
cld
jmp
jle
sti
pop
mov
lods
cs
mov
xchg
stc
stos
sti
fisubrs
and
ret
and
push
insl
fadds
mulb
out
xor
push
xor
jne
xlat
fwait
xchg
outsl
testb
xlat
adc
aam
fld
cld
lea
scas
pop
jmp
clc
fucompp
pop
rorb
xor
repz
shr
add
push
cwtl
mov
jo
xor
sbb
pop
mov
outsl
mov
cmpsl
repz
sti
adc
out
jmp
sti
addr16
mov
jge
dec
pop
imul
std
pop
push
lock
xor
scas
mov
fstps
sbb
push
xchg
dec
stos
ss
scas
mov
out
adc
and
xchg
push
jae
scas
sbb
mov
in
xchg
dec
lret
mov
stos
scas
mov
sbb
outsb
out
pop
inc
in
jae
sbb
jg
mov
leave
cmp
add
stos
lret
fists
jg
xchg
subl
lea
mov
aaa
fldcw
lcall
hlt
lcall
fcmovnu
or
jmp
push
rcr
aam
fwait
hlt
sbb
orb
fisubl
or
sub
sbb
sub
insl
ret
adc
mov
add
adc
cmp
out
pop
fldt
cmpsl
push
icebp
sub
or
addr16
pushf
pop
xchg
gs
add
sub
lahf
ficomps
mov
mov
xchg
dec
in
fisubl
cmp
mov
scas
cmp
xor
jp
jl
movsb
mov
mov
fldt
das
or
lahf
fnstcw
loope
rorl
lret
jae
scas
popf
es
and
lahf
dec
hlt
sbb
sahf
mov
lcall
hlt
scas
mov
lods
jnp
flds
push
fdivs
or
mov
incb
xor
test
out
jg
sarb
test
and
lret
push
jecxz
mov
xchg
mov
adc
and
fdivrl
mov
dec
fstps
push
stos
icebp
add
aas
push
xlat
xlat
imull
shll
in
repz
int3
enter
jge
ret
test
dec
fwait
xor
fdivrs
imul
or
cmp
arpl
mov
add
divb
pop
jne
ljmp
jg
and
insl
sbb
dec
xor
cmp
loop
scas
mov
call
ret
aaa
sarb
push
mov
or
int
xor
push
fistpll
pop
scas
das
add
pushf
xchg
mov
mov
cmpsb
xor
dec
stc
clc
fcoms
mov
mov
rol
jo
cmp
xor
jg
mov
out
fistpll
mov
fidivl
loop
and
mov
cmp
mov
adc
jno
jg
into
mov
push
push
add
aam
jl
ret
xchg
fs
jnp
mov
ret
sbb
stos
fdivrs
xlat
pop
leave
sbb
fcomi
fldenv
mov
call
xchg
outsl
idivl
mov
fidivrl
mov
jmp
cs
mov
mul
stos
push
lahf
mov
sbb
sbb
arpl
sbbl
loopne
mov
push
mov
sbb
shlb
cmc
jo
std
adc
rcl
mov
jge
and
push
je
and
jnp
fistl
push
sub
dec
push
xchg
adc
mov
sti
ljmp
and
push
pop
mov
lods
mov
in
pop
pop
cmp
es
negb
jne
pushf
ret
pop
dec
push
rcl
push
sbb
jmp
cmp
pop
mov
or
sub
adc
dec
imul
test
push
in
outsb
dec
jnp
dec
mov
pop
lret
out
aad
hlt
mov
cld
imul
mov
sub
adc
imul
dec
in
sub
loope
cmpsb
ljmp
xchg
dec
loopne
pop
adc
jno
repnz
mov
in
imul
ja
aam
mov
inc
imul
outsb
cs
sbb
insb
xchg
lret
pushf
xor
int3
or
pop
in
dec
mov
fisubrl
ja
add
add
mov
out
in
aad
mov
int3
pop
jle
push
mov
shrb
in
call
push
mov
cs
adc
mov
push
push
int
fbld
inc
popf
add
repz
pop
aaa
aam
jo
jae
xchg
jae,pn
adc
xchg
out
mov
adc
add
popf
mov
jne
cli
and
jp
xor
outsb
xchg
mov
jle
cs
fists
std
inc
je
int3
cltd
jecxz
push
sbb
pop
stc
ret
shll
cmp
xor
or
in
add
or
xor
out
xor
push
xor
ljmp
out
or
xor
mov
jo
pushf
cmp
notl
stc
or
inc
out
loop
push
and
imul
inc
data16
dec
imul
push
das
sbb
ds
mov
push
mov
aaa
lret
call
sbbb
xor
ja
mov
mov
mov
stos
cmp
inc
fsubs
cmc
out
mov
xchg
shrl
jne
lock
inc
pop
aam
out
push
out
pusha
inc
push
pop
jmp
fidivs
cmp
subl
jne
fdivrl
mov
stc
ret
xchg
fldt
xchg
pop
fdivl
mov
mov
mov
and
mov
and
aam
sub
xchg
push
cwtl
and
xchg
out
sub
pushf
mov
iret
adc
mov
dec
push
test
adc
mov
ja
sarl
pop
xchg
and
fimuls
in
aas
push
pop
dec
mov
pushf
sahf
clc
xor
sbb
or
dec
sub
mov
cmp
sbb
pop
sub
gs
mov
jl
aaa
pop
iret
mov
mov
pop
push
xchg
lcall
cmp
push
xchg
nop
pop
jp
ja
nop
jae
lret
pop
cld
pop
scas
xchg
or
nop
insb
out
imull
jl
or
pop
or
xor
xor
rcr
clc
pop
mov
mov
flds
and
data16
loop
in
ds
into
xor
mov
pop
test
and
rcll
lock
jmp
ja
xchg
lcall
jb
imul
sub
mov
pop
call
pop
das
les
jnp
mov
push
xchg
fdivs
add
jecxz
add
dec
test
rorb
aaa
ds
scas
add
fidivrl
mov
stos
out
jae
mov
sub
lods
cmp
stos
in
sbb
idivb
ja
lea
ss
scas
or
xchg
dec
jmp
jl
cmp
lea
lret
dec
jmp
outsl
fimuls
push
mov
in
fbstp
cmpsl
frstor
lahf
fsubl
fcmovnb
cmc
push
sti
jnp
fcmovnbe
loope
add
sbb
dec
mov
mov
fsubrl
sub
lods
mov
ret
out
cwtl
mov
orl
aaa
scas
ret
mov
fldcw
dec
in
inc
in
negl
or
fadd
dec
frstor
fistpll
or
aas
xor
ret
xchg
cs
fidivrs
movsl
iret
clc
inc
sbb
je
ret
push
pop
testl
add
inc
icebp
pop
fsubrp
dec
ja
outsl
sbb
arpl
mov
cmp
les
je
mov
jmp
fistpll
shll
push
mov
mov
and
mov
pop
in
scas
push
xchg
jg
xchg
icebp
sbb
push
lock
stos
jg
sub
fbld
cmp
cwtl
adc
mov
ja
loop
and
pop
lcall
mov
jns
ljmp
fisttps
jmp
and
xchg
xchg
imul
outsb
mov
xlat
fists
fiaddl
push
bound
cmpsl
xchg
push
stc
inc
popa
jbe
cmp
imul
cs
push
iret
and
pop
lcall
movsb
fxch
daa
sbb
pop
mov
in
bound
dec
test
mov
push
jnp,pn
test
lds
cmc
mov
lock
fadd
testb
jle
add
incb
adc
out
fldenv
ja
mov
dec
fdivrp
dec
in
pop
xchg
dec
mov
inc
jne
bound
gs
mov
mov
push
je
lcall
adc
aam
jle
in
std
push
fildll
dec
adc
in
adc
jns
cs
add
ret
iret
test
fstpt
popa
insl
inc
nop
into
testb
cli
int3
pop
cwtl
push
push
insb
inc
pop
pop
jle
add
arpl
out
inc
sbbb
int
pop
aas
mov
inc
sbb
inc
jo
mov
and
shlb
sti
popa
mov
inc
movsl
cmc
aad
adc
mov
outsl
insl
in
pop
pop
aad
push
push
mov
stc
addr16
movsl
sub
int3
jns
push
mov
sub
movswl
scas
pusha
lret
add
mov
inc
add
insb
in
pop
sub
adc
pop
mov
mov
rcrb
mov
into
movsl
daa
jecxz
mov
lods
mov
mov
bnd
in
sbb
aam
cld
fistps
jno
mov
cmp
dec
mov
adc
mov
test
dec
loope
ja
out
jno
pushf
cs
or
push
andb
jno
repnz
sub
not
inc
xor
subb
gs
mov
mov
and
mov
in
int
jge
xlat
lret
lahf
lea
and
jmp
jge
popl
test
add
popf
test
incb
mov
jbe
xor
lret
add
or
pusha
jle
jmp
cmc
shlb
push
pop
arpl
cmp
xchg
jne
scas
imul
test
cmpsl
cmp
adc
pop
mov
push
fwait
lret
lods
mov
je
imul
lea
scas
jno
popf
mov
jge
js
scas
out
insl
jnp
out
pop
fcomp
jno
call
sti
pop
clc
push
sbb
mov
lret
inc
int3
and
pop
stos
pop
popf
ret
mov
data16
fisttps
add
dec
loop
sub
jne
mov
scas
and
xlat
pop
mov
into
outsl
xor
ss
mov
cwtl
cmp
mov
repnz
je
in
or
sahf
jmpw
xor
lret
lahf
lret
adc
inc
jnp
mov
icebp
aam
xchg
jo
mov
sub
repz
push
xor
outsb
call
jnp
in
mov
mov
imul
jbe
daa
mov
scas
arpl
idivb
jns
or
shrl
out
mov
mov
hlt
or
shrl
mov
mov
xchg
cmp
es
lcall
cs
cmp
pop
testb
push
iret
cmp
xchg
int
pushf
push
scas
mov
pop
push
mov
aad
sti
xchg
cld
dec
jecxz
mov
mov
nop
dec
jge
pusha
or
enter
sbb
xor
mov
lret
int3
mul
cwtl
pop
pop
sub
xchg
inc
cs
orb
xchg
aaa
in
fmuls
jbe
inc
mov
imul
pushf
mov
jl
out
sub
mov
repnz
test
scas
testl
mov
add
cmpsb
sub
arpl
out
imul
or
xor
mov
mov
das
jg
pop
cmp
imul
mov
mov
xlat
repz
and
das
lods
sti
fisubs
xchg
ljmp
out
jbe
xor
inc
jge
lahf
push
jp
repnz
fcoml
dec
mov
andb
pusha
loop
fnstsw
jg
push
adc
loop
shll
and
call
inc
pop
push
stos
in
fidivl
orl
pop
pop
add
cmpl
adc
pop
jp
xlat
das
mov
in
mov
jecxz
out
adc
sti
jg
out
push
hlt
out
push
fs
push
pusha
mov
jb
mov
cmp
xchg
cwtl
or
and
inc
cmp
add
sti
xor
gs
add
adc
loop
and
lea
sar
xchg
xchg
orb
sarl
mov
dec
loope
outsl
mov
test
pop
in
mov
mov
jae
aas
jae
pop
jmp
push
ds
fs
inc
add
scas
jg
into
push
in
pop
scas
pop
dec
out
subb
stc
mov
sbb
ja
lock
sub
push
add
adc
ret
sub
pop
or
mov
int3
iret
or
int3
orb
sub
add
dec
int3
stos
sbb
and
xchg
fisttpll
outsb
sbb
add
jnp
or
mov
push
jns
fwait
sub
xchg
std
lcall
iret
sbb
jmp
push
sbb
arpl
scas
fmulp
xchg
das
aad
inc
jmp
xchg
add
dec
fistpll
notb
and
icebp
outsl
mov
push
dec
fisubs
rorl
mov
fdivrp
cmc
pop
pop
dec
sahf
mov
scas
fcoml
fmuls
repnz
repz
cmp
xchg
lock
fcom
xchg
mov
test
jg
icebp
xlat
dec
inc
cmp
in
dec
cmp
fdivr
inc
out
mov
mov
ret
xchg
sbb
xchg
cmp
pop
pop
das
stos
jp
mov
xchg
inc
xor
push
fiadds
mov
lcall
mov
out
mov
pop
or
ret
mov
subb
lahf
aas
mov
leave
out
pop
sti
cltd
inc
push
jbe
mov
insb
test
pop
mov
xchg
mov
into
in
repz
jb
int3
stc
sbb
jl
pushf
fs
lret
lcall
jbe
mov
cmpsl
stos
fcompl
xlat
fmul
out
arpl
arpl
movsb
jo
aaa
jbe
push
push
psubusw
mov
bound
mov
xor
out
jns
or
movlps
xlat
aam
mov
scas
bound
mov
push
mov
arpl
outsl
ret
aad
cmp
leave
cmp
movsb
movsl
lods
or
jge
leave
jmp
js
jne
mov
es
das
pop
ss
pushw
add
inc
ds
fistpll
out
in
orl
jl
stos
lds
add
mov
push
fnstenv
sub
sbb
in
cmpb
fldenv
dec
sbb
test
out
int3
sti
addr16
aaa
mov
lods
leave
mov
sbb
aas
pop
push
pop
fwait
lods
popf
int3
hlt
cmpsb
lahf
out
mov
lcall
out
int3
push
mov
push
mov
adc
std
repz
inc
jno
push
lret
jae
stos
scas
out
mov
cmp
cli
dec
lret
adc
push
outsl
lret
cmpsb
rcrl
shl
push
jbe
out
es
or
and
lahf
xor
sub
and
adcb
or
sbb
add
push
jmp
pop
jge
psubq
leave
out
and
jle
xchg
adc
filds
push
addr16
push
jecxz
sub
add
out
cmp
movsl
arpl
mov
xor
arpl
xor
fistpll
out
clc
jg
mov
mov
and
jb
jp
out
xor
mov
add
xorb
lock
stc
addb
icebp
outsb
add
xchg
pause
out
sub
fistpl
push
cs
or
cmp
mov
fxch
test
push
outsl
out
imul
pop
sti
xchg
inc
pop
data16
inc
aas
add
xchg
in
jno
gs
mov
sub
stc
sbb
pop
stos
xor
dec
mov
sbb
fists
outsb
adc
cmp
fcmovnu
xor
shl
repnz
lcall
cmpsb
xchg
xchg
testb
out
sbb
mov
cli
ret
int
lods
sahf
daa
aad
out
cli
idivl
push
mov
adcl
mov
fiaddl
sub
inc
mov
mov
mov
sub
add
jecxz
cwtl
cs
push
jg
les
mov
cmpsl
dec
roll
adc
out
cli
mov
aas
jp
aam
popf
cli
not
jns
or
jecxz
inc
sahf
outsb
xor
cmp
push
shl
in
lock
and
mov
or
lahf
pop
imul
mov
pushf
cwtl
leave
cltd
sbb
xchg
jbe
xor
mov
fsts
mov
xor
jp
dec
lahf
stc
lahf
repz
inc
and
jp
mov
xor
xchg
push
testl
pop
out
inc
or
aad
dec
popa
outsb
das
leave
cmp
jb
mov
jp
lret
iret
sub
cli
dec
and
icebp
adc
xchg
outsb
jg
rep
xlat
push
js
mov
mov
out
or
mov
jne
dec
pop
xor
or
shrb
cmp
xchg
lcall
loop
jl
and
std
jle
inc
out
cmpsl
aad
jecxz
cld
stc
pop
push
das
sub
add
cmpsb
cli
aaa
stos
xchg
lock
arpl
imul
or
std
imul
int
push
jno
frstor
rorb
or
out
jne
pop
adc
fistpl
mov
jno
xor
dec
sti
lahf
data16
in
lcall
pop
data16
cli
test
sti
dec
mov
cmc
dec
ffreep
mov
roll
push
push
fldcw
clc
insl
xchg
call
or
in
fsubl
movsb
adc
icebp
rorl
push
lahf
rcrb
shl
mov
sub
xchg
sbb
or
push
add
aad
data16
js
and
xor
xlat
xchg
loop
cld
sbb
shr
out
fsub
imull
stc
aaa
movsb
cmp
mov
pop
jg
and
jp
in
sub
in
out
mov
scas
cmp
scas
iret
jbe
fs
cmp
iret
adc
mov
in
mov
int
ret
push
add
xorl
pushf
dec
mov
pop
adc
fucom
jb
lcall
push
shrl
and
mov
dec
icebp
pop
mov
sar
or
loop
jg
pushf
cli
mov
mov
adc
xlat
jnp
in
popl
add
test
cmpl
lahf
xchg
mov
ss
cs
es
mov
rcll
das
test
dec
sti
gs
mov
lahf
lcall
in
jnp
xor
mov
mov
gs
add
jnp
in
mov
mov
sbb
je
cmc
jg
xor
or
iret
hlt
lahf
ret
push
mov
pushf
mov
stos
iret
cmp
ja
mov
ljmp
push
insl
add
movsl
mov
lea
roll
ss
sbb
fnstcw
aad
sbb
dec
cmc
push
sub
pushf
pop
fs
int3
pop
xor
outsl
mov
fisubs
decb
ss
inc
jo
fistpll
jmp
leave
sahf
cltd
add
shrl
ljmp
mov
sti
push
loop
iret
dec
testl
loopne
test
leave
ficompl
mov
fs
outsl
punpckhbw
loop
xchg
int
cmp
cltd
ret
dec
fldt
outsl
scas
fmulp
mov
jge
lds
cs
pop
adc
fidivrs
ficomps
leave
out
push
mov
xchg
sbb
xlat
mov
jae
jle
fisttpl
std
pop
into
adc
mov
aaa
adc
mov
insl
xchg
pop
rorl
leave
cs
mov
std
outsl
pop
lret
or
cmp
and
gs
mov
negb
xor
addr16
data16
mov
fcmovnu
mov
lret
adc
lods
xor
mov
mov
insl
aaa
inc
out
out
mov
push
aam
pop
xchg
mov
dec
aad
dec
scas
inc
inc
mov
out
pop
repz
fldt
dec
outsl
sub
ja
pop
pop
mov
insl
fisubrs
insl
fmulp
adc
fsubrp
adc
jg
lret
adc
sbb
aad
or
sbb
inc
mov
lret
add
rcrl
sti
in
dec
cli
and
sbb
add
xchg
fcomi
pop
adc
xchg
repz
std
lock
fstpl
and
mov
negl
out
loop
sbb
xor
test
xlat
enter
je
and
cmpsl
rcl
cmc
je
adc
test
pop
inc
xor
jg
inc
iret
and
aaa
push
jmp
xor
stos
xor
test
mov
lahf
sub
pop
mov
mov
leave
inc
jmp
in
dec
out
nop
icebp
mov
and
dec
dec
flds
xor
mov
lahf
sbb
mov
es
das
inc
pop
idivl
add
aam
add
jp
std
addr16
mov
aad
mov
frstor
add
push
hlt
scas
ss
repz
sbb
xor
out
dec
mov
ret
add
in
scas
mov
xchg
cmpsl
loopne
mov
call
lcall
pop
call
loop
sub
add
data16
mov
jmp
or
scas
stc
mov
jmp
sti
pop
lahf
xor
and
in
xchg
loop
push
pop
sarb
imul
sbb
lea
cmpsl
jae
in
xchg
inc
add
mov
adc
sbb
ret
or
dec
mov
mov
push
out
stos
scas
xorl
dec
and
xor
mov
jecxz
fnclex
pop
fsubs
outsb
lahf
jbe
rcrb
xchg
fcmove
mov
cmp
jo
ljmp
int3
and
lcall
sbb
in
adc
in
sbb
lret
fwait
inc
push
jnp
out
lock
stc
pop
pop
pop
jg
sub
incl
cs
jnp
or
stos
push
jnp
mov
xchg
pop
cs
jns
aad
lea
adc
xor
fbld
icebp
faddl
pop
add
push
shl
repz
hlt
push
pop
sti
jg
cs
mov
dec
pop
aas
iret
xchg
hlt
ss
mov
jbe
cs
lahf
lods
dec
insl
inc
xor
lods
push
push
mov
icebp
push
and
xlat
call
sbb
cmp
xchg
fcompl
xor
stc
push
jo
mov
std
mov
sub
fistpl
jno
ljmp
adc
pop
daa
mov
loop
out
push
mov
adc
mov
scas
add
cmp
movsl
stos
lods
mov
ret
pop
xor
pushf
pop
movsl
cmpsl
fidivs
out
loop
test
lcall
pop
iret
stos
sub
jns
sub
jns
push
dec
test
lock
daa
jge
push
imul
mov
jl
ja
arpl
mov
push
cs
movl
fdiv
jnp
adc
push
in
ret
loope
add
jns
sahf
mov
aaa
fwait
ror
xor
pop
in
divb
lcall
inc
mov
inc
fs
push
mov
lods
ficoms
loop
and
gs
mov
clc
pop
sub
sub
sbb
sub
stos
ss
pop
mov
lock
push
mov
icebp
sbb
mov
sbb
aaa
xchg
loop
jns
dec
cmp
dec
mov
push
out
xchg
xor
jno
xchg
push
inc
ja
jmp
out
jp
cmpsb
fldcw
cli
pop
push
ret
stc
xchg
arpl
and
cmp
xchg
mov
add
ds
lahf
or
mov
pop
adc
out
dec
add
and
sub
mov
out
cld
mov
lret
ret
add
hlt
jg
stc
adc
in
dec
mov
loope
std
or
mov
or
imul
adc
clc
mov
and
inc
sbb
cld
push
mov
push
xchg
dec
adc
lahf
xor
xlat
hlt
scas
or
cmpl
jae
push
fwait
in
clc
adc
jmp
mov
stos
cwtl
mov
aad
pop
lahf
push
jecxz
pop
pop
pop
stc
jg
fsubl
ficoml
and
jmp
push
xor
mul
cmp
or
mov
dec
fsts
mov
push
dec
testb
notl
mov
mov
iret
out
push
lret
incb
pop
pop
dec
ror
jecxz
aad
jno
lcall
sbb
xchg
nop
scas
lcall
pop
insb
pop
ja
cltd
dec
sahf
adc
into
lock
inc
adc
aas
cwtl
sbb
push
mov
loop
add
imull
mov
mov
sahf
mov
pusha
jge
jle
mov
jecxz
or
mov
dec
pop
push
jmp
add
adc
adc
stos
sbb
mov
cmp
sub
cmp
int
xchg
cmp
lods
addr16
xor
test
mov
test
pop
push
pop
dec
jb
sub
imul
cmpsl
repnz
jg
lods
scas
mov
and
scas
sti
std
pop
xor
push
and
mov
mov
pop
push
push
inc
cmp
sub
inc
iret
inc
fstpt
repz
fbld
xchg
xchg
movsl
fildll
or
add
mov
out
push
lret
lret
dec
or
dec
clc
mov
imul
sub
idiv
aad
xchg
ss
cmp
jecxz
ret
sub
scas
ret
jecxz
pop
mov
rorl
not
xlat
imull
sub
filds
cmp
push
leave
push
push
add
jp
in
insb
cs
sar
negb
jl
sub
cltd
cli
repz
mov
jae
test
adcb
in
push
aad
adc
loop
xchg
jg
loopne
lret
mov
dec
fs
push
ret
xor
fwait
push
mov
sarl
add
cmpsb
push
sbb
int
jb
loopne
pop
xchg
xor
adc
and
cmovno
jne
movsb
push
jmp
aad
pop
rol
pop
pop
mov
data16
iret
adc
lahf
xchg
scas
ja
fidivs
mov
enter
mov
mov
add
iret
xchg
outsb
addr16
loop
testb
and
in
out
mov
xlat
negb
cwtl
sbb
mov
dec
rcrl
cmpsb
test
and
adc
inc
sar
jg
icebp
arpl
add
shrb
addr16
stc
js
cli
in
sub
mov
add
mov
std
testl
shl
out
or
pushf
cs
lods
pop
ret
and
or
data16
out
das
push
movsl
mov
cmpsb
add
stc
jecxz
lahf
or
test
cld
insl
icebp
fadds
xor
out
cli
and
or
scas
loop
jecxz
adc
jmp
ret
dec
sub
cld
arpl
imul
xor
jmp
jno
testl
pop
adc
cmp
out
sub
mov
out
in
cmp
dec
call
movsb
cmovae
pusha
fcoml
out
mov
iret
out
cli
push
stos
inc
clc
mov
adc
fcompl
pop
push
push
push
xchg
or
xor
push
repnz
xor
jae
std
xor
jo
leave
out
jmp
lahf
lahf
out
push
adc
pop
mov
push
mov
pushl
repz
mov
jl
mov
loopne
ret
push
xor
xchg
push
mov
xlat
sahf
mov
addr16
ja
std
ja
sub
cli
pusha
push
hlt
ss
jae
and
fcomps
aaa
dec
xchg
aad
xchg
xor
mov
popf
mov
inc
aaa
insb
inc
add
cmp
mov
adcl
mov
push
mov
xlat
sahf
xlat
inc
incb
fisubrs
and
fdivr
pop
pop
cmp
faddp
mov
rorb
jge,pn
or
lcall
jmp
mov
ficoml
fwait
mov
insb
xchg
fcom
push
repz
iret
pushf
jbe
shll
add
sbb
aaa
repnz
into
mull
outsl
mov
nop
mov
imul
adc
fimull
pop
imul
jmp
push
jnp
jp
mov
mov
test
inc
push
dec
sti
sbb
es
pop
push
dec
xor
push
cmpsl
cmp
lahf
outsb
adc
pop
dec
aam
in
out
jp
aas
leave
repnz
cmp
pop
sub
lods
xchg
or
outsl
jae
cli
inc
mov
cmc
test
push
sub
fsubl
ret
mov
mov
icebp
in
mov
mov
sub
mov
cs
add
cld
fidivl
mov
jl
loop
xlat
mov
insb
and
cli
mov
iret
add
dec
dec
mov
stc
dec
rolb
and
iret
and
jno
and
sbb
push
sbb
and
add
sub
mov
push
repz
cmp
imul
leave
sub
test
pop
sub
jmp
adc
inc
cmp
pushw
pop
lcall
cmpsb
push
ljmp
pop
arpl
push
pop
cs
or
insb
nop
lret
push
fildll
cmp
or
sarl
fcom
jg
cli
out
xchg
fdivrp
mov
out
pop
mov
idivb
xchg
in
out
ret
mov
jbe
cli
out
push
aaa
xchg
out
jns
cld
out
cltd
jbe
addb
mov
shr
addr16
rcll
cmp
xlat
lea
in
jae
mov
hlt
mov
test
mov
pushl
sahf
movsl
ja
mov
div
inc
adc
cmp
jp
fstl
pop
xor
or
pop
fwait
sub
lcall
and
sti
loopne
xor
mov
push
inc
xorl
sbb
cmp
dec
pop
or
jbe
jle
cli
imul
fcomp
and
xlat
mov
pop
push
sub
std
cs
cmp
cmp
pop
negl
mov
clc
cmp
pop
cwtl
imul
sbb
adc
rcr
jge
stos
pop
stos
gs
in
jl
mov
sbb
in
int3
test
add
fcoml
pop
cmpsl
sbb
xchg
hlt
xor
repz
mov
fwait
lock
inc
rcll
sbb
push
mov
fwait
out
rcl
mov
add
xchg
addr16
gs
outsl
cltd
into
add
test
add
fbstp
add
lcall
insb
sbb
cmp
mov
inc
lahf
pushf
xor
push
out
ret
sbb
fcompl
ds
push
and
faddl
les
push
jbe
sub
sub
add
fsubrp
call
fsubrl
daa
mov
pop
stc
pop
cmp
xlat
lods
push
mov
outsb
mov
push
in
in
mov
out
insb
scas
cli
cmc
fsubl
xchg
fldcw
data16
mov
and
mov
fstl
mov
push
fwait
sub
imul
sub
push
outsl
xchg
aaa
jno
sbb
mull
sub
mov
adc
sahf
add
clc
sahf
adc
in
test
dec
push
push
in
fldl
mov
inc
jbe
in
cmp
orl
cmp
inc
jmp
fdivrp
data16
outsb
dec
fldt
mov
out
pmullw
mov
cmp
fisttpl
cld
sub
sahf
jg
jmp
jnp
inc
fnstsw
cltd
pop
fwait
sahf
mov
in
jg
pop
in
jg
push
mov
cltd
mov
insb
mov
outsl
sub
or
out
add
push
jg
aas
lret
outsb
pop
fcmovnu
fimuls
mov
aad
sbb
mov
push
xchg
add
call
sbb
ficomps
dec
les
xor
cmpsl
leave
fstpt
xchg
insb
repnz
imull
mov
dec
lahf
xchg
mov
xchg
fstpl
xchg
test
or
xor
lret
cs
push
sbb
push
xchg
or
fcoms
pushf
jo
jnp
or
lahf
xchg
cmp
fdiv
push
lods
js
stos
sbb
pop
cmpb
add
sbb
mov
jbe
add
cs
mov
adc
faddl
lods
pop
jge
out
mov
adc
out
xor
dec
fcmovbe
aad
adc
lret
out
push
jmp
cmp
aad
push
and
in
pop
push
pop
sti
test
jp
sbb
sahf
cmp
fs
clc
fnstsw
scas
stos
aad
cli
adc
ret
out
cmp
lret
stc
sar
push
outsl
mov
clc
gs
fwait
cli
or
aaa
push
jmp
outsl
pop
pop
ret
ret
dec
mov
mov
lock
jae
popa
push
dec
jl
stc
sbb
jnp
xchg
fidivl
push
adc
push
sar
sarl
fbld
or
das
sub
inc
in
fsubr
push
das
sub
sbb
pop
rol
inc
cmpsb
cmp
aad
lret
shlb
mov
das
daa
sahf
ds
pop
scas
mov
xchg
push
adc
or
cmpsb
jnp
fstps
mov
xchg
les
loope
imul
pop
pusha
shll
pop
push
jno
call
pop
ret
sub
sub
cmpsl
mov
ljmp
mov
adc
and
jo
cmpl
push
xor
arpl
jg
mov
cmpsl
sub
push
dec
mov
stc
sbb
out
icebp
pushf
add
or
mov
jle
pop
aam
bound
lahf
and
xchg
mov
push
iret
out
push
enter
add
jge
lcall
sbb
xchg
adc
mov
lret
inc
or
int
out
sub
inc
out
xchg
inc
add
out
and
jg
xorb
sarl
adc
and
adc
push
cmp
inc
sbb
mov
pop
sub
cwtl
stos
repnz
add
pop
arpl
cltd
lods
adc
arpl
cmp
or
aaa
jnp
adc
mov
ret
push
mov
push
pop
aam
cmp
mov
dec
xor
out
mov
mov
xchg
iret
pop
mov
mov
iret
fst
pop
es
cmp
pop
mov
mov
int3
mov
xor
lahf
inc
arpl
mov
cmp
cs
pop
adc
xchg
in
xchg
stos
xchg
out
pop
cmp
flds
jnp
je
push
mov
pop
jg
jns
cld
ret
push
ljmp
adc
movsb
dec
insl
leave
xchg
and
mov
jnp
push
shlb
jecxz
and
or
in
movsl
cmc
push
add
repnz
fildl
mov
mov
and
xor
sti
or
dec
xor
or
inc
mov
leave
pop
pop
aam
sub
mov
clc
lret
std
sub
inc
push
and
call
sub
sub
pop
push
fildl
daa
out
imul
stc
push
xor
ret
cmpsb
pop
iret
es
adcb
jns
lods
or
cmp
inc
jg
jmp
push
inc
xor
jae
pop
insb
sub
fbld
dec
push
vmread
lcall
and
jge
repz
push
push
sbb
out
xor
mov
pop
add
hlt
psadbw
xchg
sbb
ja
add
jnp
mov
scas
sbb
aaa
fnstcw
sub
loopne
push
xchg
hlt
clc
lcall
out
imul
stos
lock
jnp
pop
shrl
jae
out
adc
movsb
icebp
jge
add
mov
jno
dec
int
push
arpl
mov
fstl
xor
jl
mov
xor
div
xorb
pop
jns
lret
mov
int3
mov
shl
subl
ja
mov
push
hlt
and
fmull
repnz
jae
movsl
mov
fildl
add
push
push
cmp
rcll
push
xchg
or
loop
mov
pop
nopl
fs
sti
cmpsb
leave
cmp
cmp
push
cmp
mov
add
sub
xor
pop
mov
mov
rorb
mov
aaa
repz
jo
scas
fwait
xor
aad
lds
or
hlt
fwait
shrl
addr16
pop
ret
jmp
pop
fdivs
lret
inc
cmp
mov
repnz
push
hlt
xchg
sbb
into
es
jae
push
mov
jns
dec
or
push
js
out
and
flds
xchg
sub
sahf
sbb
and
outsb
mov
add
stos
pop
adc
push
xor
int
push
shlb
aas
outsb
ljmp
arpl
add
in
pushf
sub
rcrb
movsb
dec
popa
movsb
pusha
fistl
leave
pop
sti
cmp
mov
fldl
add
lock
pushf
aas
push
push
fwait
test
xor
push
cmp
fstp
add
ret
sbb
fbstp
out
pcmpgtw
test
or
pop
fcomi
repz
inc
fs
add
lods
inc
in
test
shrb
sbbb
push
mov
rol
and
cpuid
dec
mov
add
fwait
push
cmp
je
adc
imul
mov
sbb
dec
pop
push
aad
fwait
leave
and
fs
les
fcmovu
sub
dec
push
pop
aad
or
incl
adc
dec
lods
out
subl
and
push
stos
xor
sub
les
xor
mov
mov
sbb
aas
cs
mov
xlat
mov
aaa
aad
nopl
pop
sahf
pop
mov
filds
in
sub
jg
jmp
sti
mov
mov
dec
in
repz
mov
or
xor
fisubrl
ret
add
mov
mov
ror
sahf
jae
mov
hlt
pusha
insb
push
aad
fisubrl
mov
daa
xlat
xchg
gs
adc
iret
in
ret
es
aas
in
das
ret
inc
adc
mov
lahf
pop
outsb
cmpb
test
gs
filds
insb
jle
or
std
push
rcrb
add
xchg
sar
jne
or
pop
repz
stc
or
testl
adc
es
mov
sti
loopne
ja
jle
mov
push
mov
and
sub
in
sbb
inc
jmp
andb
mov
aaa
sbb
mov
jno
add
popa
pop
mov
addr16
outsl
xchg
add
mov
jmp
xchg
xchg
sarl
adc
ja,pn
cld
jl
or
cmp
jg
outsl
and
into
push
mov
mov
iret
sub
and
iret
lock
sbb
mov
add
lods
lret
cmpsl
int
aad
cwtl
lock
lret
ds
sti
test
insl
popa
pop
in
scas
inc
into
ljmp
mov
and
and
push
jge
shll
mov
xchg
fdivs
scas
add
imul
mov
iret
fidivrl
insb
adc
dec
and
ds
out
test
mov
repz
mov
add
clc
shl
hlt
shr
jnp
insl
outsb
ret
cld
das
fisttps
movl
adc
jge
mov
dec
sub
mov
push
xchg
ja
adc
cmpsb
fildl
xor
pop
mov
xor
aam
fcomp
out
cld
jb
in
and
mov
rol
push
fmuls
or
adc
push
hlt
mov
outsb
lea
sub
gs
mov
int
dec
lods
mov
pop
add
jmp
add
pop
pop
ret
mov
sub
sti
test
hlt
mov
fimuls
scas
cmp
add
push
lock
push
sar
ja
push
movsl
imul
aas
xchg
pop
iret
lahf
inc
int3
and
lods
hlt
dec
sbb
imul
jl
xor
mov
or
add
dec
jle
push
outsl
pop
push
orl
cmc
hlt
push
je
repz
std
fs
orl
ret
cmp
pop
mov
jl
sbb
repz
xor
out
sbb
jecxz
cmp
xchg
push
out
ret
scas
sbb
iret
jmp
xchg
xchg
adc
pop
push
lret
fnstcw
or
mov
pop
cld
std
inc
add
repz
cmp
fldt
jmp
mov
sub
sbb
lock
fisubs
push
scas
loope
add
testb
inc
push
pmuludq
lods
repz
lahf
cmpsl
popf
jle
and
add
cmc
jg
push
cld
psubw
icebp
jp
mov
cmp
jo
sar
mov
out
imul
lcall
mov
pop
pop
ds
jne
mov
mov
mov
jo
xor
testb
mov
push
movb
sbb
mov
clc
pop
adc
jmp
clc
imul
add
arpl
jb
xor
rol
in
mov
scas
in
or
aad
sub
fcoml
cli
add
inc
inc
jmp
loope
cmpsl
addr16
in
out
push
inc
sbb
inc
mov
jge
in
push
test
test
out
shrb
dec
push
xchg
aad
adc
adc
jmp
and
mov
scas
xlat
fistpll
sub
cli
sub
sub
sbb
shr
ss
xor
shr
lods
imul
add
jno
mov
mov
add
loop
and
decb
and
jne
in
test
fldcw
scas
mov
pop
imul
jbe
addr16
push
idivl
outsl
hlt
arpl
xchg
ret
inc
mov
sahf
or
pop
int
add
icebp
les
ja
add
xchg
fsubs
inc
aas
stos
add
sub
pop
mov
fcoml
pushf
gs
or
ret
jns
lods
in
jno
xchg
mov
fmuls
scas
ret
mov
push
jecxz
lock
mov
out
mov
ss
add
clc
and
mov
fs
mov
mov
mov
jo
outsl
mov
in
test
cmpsl
aam
add
jmp
push
pop
and
fnsave
sub
ljmp
mov
adc
mov
leave
outsl
stos
xor
xchg
xlat
out
jle
and
or
jg
sub
arpl
aad
add
push
sub
fstl
adc
pop
mov
aad
push
mov
or
adcl
pop
push
mov
pop
push
mov
mov
xor
mov
cmpsl
pushf
out
mov
push
ja
cld
aas
push
daa
imull
mov
sbb
std
jge
mov
aad
ljmp
cmpsl
and
fs
xlat
into
xchg
xor
into
paddusb
jg
mov
or
jp
mov
push
push
and
ret
pop
pop
push
jl
lret
add
int3
cs
sub
lahf
mov
xlat
imul
pop
imul
cmpsb
jns
leave
negl
repz
mov
ja
inc
xchg
imul
xor
pop
fcomp
and
pop
adcb
aaa
xchg
inc
jnp
fisubrl
inc
adc
adc
adc
rcll
pop
mov
test
imul
ljmp
addr16
xor
stos
pop
ret
lcall
scas
pop
iret
sub
mov
fnstcw
xor
dec
fwait
inc
mov
fsubrp
dec
lods
scas
jmp
fmull
lret
repz
mov
leave
iret
shll
loope
icebp
push
popf
outsb
xchg
xlat
ljmp
repz
arpl
je
xchg
mov
cmp
repz
fneni(8087
out
icebp
jmp
push
xchg
mov
or
mov
or
inc
or
pop
cmc
in
mov
in
or
mov
jecxz
aad
notl
lods
out
out
lcall
insl
pop
pop
mov
scas
movsl
mov
push
fldt
jmp
or
pusha
push
insb
test
stos
lods
and
aaa
icebp
loope
in
stc
push
pminub
std
sbb
out
sbb
inc
ja
aad
add
cs
lods
and
jmp
or
lods
pop
mov
adc
sub
dec
adc
xor
inc
or
jg
fs
cltd
pop
out
lret
stc
mov
out
es
daa
and
mov
out
jnp
sbb
cli
xchg
jnp
mov
in
clc
jecxz
lea
pop
ud2
mov
loop
cmp
push
lods
pop
push
push
or
dec
mov
jmp
lcall
inc
jnp
mov
std
negb
cmp
sbb
adc
out
ljmp
popf
push
test
adc
mov
jbe
mov
test
pop
repz
ds
mov
popf
jmp
cli
out
push
mov
out
add
add
pop
out
ficompl
rorl
xorl
jbe
roll
lahf
mov
jno
mov
mov
sbb
or
add
jl
test
test
fbstp
mov
or
mov
xchg
pop
mov
scas
fisubs
jno
imul
cmp
scas
add
jnp
sub
rorl
rorb
mov
inc
cmp
fsts
pop
decl
sbb
ficoms
imul
dec
push
push
adc
adc
test
mov
test
push
les
xor
repnz
mov
lahf
fldl
fcmovnbe
gs
sub
int3
mov
fst
data16
clc
cwtl
lahf
lock
aad
dec
jmp
fwait
repz
pop
or
and
shll
out
sub
repnz
and
dec
dec
mov
inc
ret
lret
std
push
jmp
bsf
in
cltd
filds
jg
lahf
add
hlt
cmp
inc
mov
jns
repnz
in
mov
jne
add
int3
stc
ja
xchg
sub
cmp
add
push
pop
stos
outsb
add
mov
pshufw
jg
mov
psubd
nop
dec
out
push
pop
mov
cmpb
ret
fdiv
outsl
icebp
arpl
inc
adc
std
or
lock
arpl
out
loop
cld
jge
into
fwait
jl
mov
and
mov
sub
test
outsl
iret
pop
mov
addr16
pop
out
xchg
nop
xchg
mov
mov
adc
not
add
push
movsl
lret
data16
mov
out
mov
outsb
mov
xchg
rorl
xor
pop
sub
jecxz
xor
in
repz
lea
jp
insl
out
sub
add
add
push
cs
jmp
sbb
mov
jae
pop
stos
mov
dec
out
in
cs
pop
sub
dec
mov
rol
inc
mov
lock
mov
xor
mov
adc
fdivs
jp
loopne
xlat
incb
and
or
outsb
movsb
les
jnp
shrl
js
addr16
stos
arpl
or
ja
xchg
pop
or
pop
scas
or
xchg
or
scas
in
lahf
add
add
in
push
adc
xor
sbb
xor
shl
jmp
jns
pop
inc
popa
outsl
push
jg
push
test
pop
sbb
push
sbb
lret
dec
mov
mov
in
rcrl
leave
sahf
add
mov
sahf
sbb
sbb
push
fdivl
or
bound
stos
psllw
movsl
jmp
leave
fnstsw
icebp
clc
xor
jecxz
mov
adc
aaa
stc
jl
loope
push
and
jbe
push
xlat
mov
imul
loopne
jg
pop
aad
pop
fdivrp
xchg
clc
jmp
loope
and
push
hlt
ret
sbb
stc
pop
xchg
sub
xchg
rcr
movsl
push
repnz
addr16
sub
outsl
ret
psubw
mov
mov
mov
fcoms
sahf
push
cli
mov
fiadds
mov
jl,pn
fcmovnb
cmpsl
mov
mov
ret
iret
imul
out
std
out
add
dec
inc
xor
mov
insb
repnz
notl
repz
mov
pop
xchg
into
outsb
push
fnsave
pop
fidivrs
sbb
outsb
add
dec
mov
pop
loop
mov
adc
mov
jecxz
jae
ds
lahf
cmpsb
pop
popf
lcall
cld
add
mov
es
fidivrs
scas
insb
leave
mov
out
jne
mov
iret
add
xor
push
add
mov
outsb
addr16
adc
stos
stc
pop
pop
lods
mov
cmpsl
push
dec
imul
dec
cli
sub
mov
pop
push
out
in
push
addb
lcall
lret
scas
rcr
jne
clc
aad
xchg
ffree
push
sub
add
mov
vpsubsw
loopne
stos
loopne
xchg
rorl
icebp
push
test
mov
fucomp
mov
jg
dec
lods
dec
negl
mov
mov
dec
push
mov
out
mov
mov
out
cld
cli
sti
pop
push
push
add
dec
jg
cmp
pop
cli
fcomip
push
outsb
cmpsl
push
lahf
jnp
adc
pop
fists
outsb
jbe
fsubr
sti
push
cmp
out
test
mov
mov
xchg
mov
xchg
mov
adc
pop
repz
push
dec
mov
ljmp
sti
jmp
std
sbb
pop
fstpl
lahf
push
xlat
mov
mov
ret
mov
pop
cmp
fdivl
mov
sbb
addr16
mov
scas
xor
xchg
sub
inc
sbb
mov
lods
clc
sub
add
out
jns
jno
loop
cs
and
push
rorl
out
sub
push
pop
scas
cs
pop
push
pop
and
lahf
daa
pop
ljmp
out
mov
lock
data16
repnz
aas
inc
lea
outsb
or
or
decb
cmc
mov
andl
out
xor
mov
jns
jl
sarl
stos
out
mov
mov
xor
movsbl
mov
mov
dec
das
out
or
pop
lret
fildll
rcr
mov
adc
dec
iret
sbb
cli
jbe
cwtl
das
pop
push
jns
mov
adc
mov
add
xchg
push
jns
push
xor
shrb
fwait
cli
mov
sub
mov
cmp
lods
imul
sti
sbb
or
cmp
pop
pop
or
cmp
ret
bound
paddsb
popa
enter
jo
jne
notl
mov
in
or
sahf
sub
movsl
scas
xchg
arpl
fiadds
lret
push
lods
pop
jbe
adc
es
cmp
cli
adc
pop
sbb
cmp
popf
lahf
lahf
movsb
sahf
pop
or
sbbl
xlat
or
out
inc
adc
lcall
enter
cmp
icebp
or
pop
push
repz
jle
sti
aam
mov
daa
add
fwait
or
mov
cs
in
pop
fiadds
iret
lods
repnz
pop
mov
mov
clc
sub
adc
push
inc
incb
and
and
icebp
in
arpl
movsb
push
shl
lods
pop
push
xor
fildl
xlat
lahf
mov
pop
inc
inc
push
jg
aas
popa
fstpt
ljmp
out
dec
lahf
dec
pop
xchg
adc
stos
push
mov
lock
pop
clc
pusha
sub
xor
cmpl
mov
pop
cltd
push
nop
or
and
dec
jmp
mov
cld
lea
and
je
pop
aaa
adc
xchg
xchg
lods
leave
lret
insl
mov
out
rolb
clc
iret
insb
in
fsubrs
xor
xchg
outsl
cs
pop
aam
or
fdivrp
decb
sub
outsl
ret
adc
jge
lret
std
sbb
das
xlat
ljmp
mov
and
mov
mov
fst
cmpsl
and
lea
ss
jo
lds
sub
icebp
xchg
or
adc
lock
mov
jg
testb
and
xchg
sub
dec
daa
int
daa
pushf
arpl
stos
inc
mov
push
mov
iret
out
and
or
fdivr
flds
lret
aam
pop
pusha
nop
pop
sarb
scas
mov
daa
mov
jmp
aas
xchg
mov
insl
mov
std
lods
mov
push
jmp
sub
jg
pop
sub
in
jecxz
sbb
call
mov
not
clc
into
pop
sub
lea
es
in
fsubr
lret
jmp
mov
ljmp
cli
out
out
push
xchg
rcrb
jmp
nop
add
inc
push
mov
inc
scas
ret
mov
xchg
adc
mov
inc
rol
mov
cmp
cs
sub
ja
push
sub
dec
cmpsb
mov
cmp
out
jnp
add
inc
cs
adc
pop
sub
nop
pop
shlb
in
aas
std
jle
stos
arpl
fwait
repz
add
fildl
add
xor
aas
mov
cwtl
ret
push
out
negb
aas
lcall
loop
mov
push
subb
loopne
jecxz
sbb
mov
repz
inc
mov
mov
jbe
cmpsl
nop
insb
stos
ret
repnz
inc
ljmp
push
cli
and
hlt
jmp
add
jp
jmp
cmp
int3
imulb
aas
sub
ficoms
cmp
in
clc
pop
push
addr16
lock
ja
mov
sub
jg
add
pop
push
adc
mov
push
stos
scas
mov
mov
stos
and
test
or
lret
aaa
aaa
dec
lret
data16
mov
dec
pop
aad
testb
adc
push
lahf
lods
cmpsl
test
popa
mov
imull
gs
inc
xchg
xlat
ret
jae
xchg
push
andb
and
xchg
xorb
in
lcall
rcrb
push
lret
mov
push
test
sub
clc
xchg
and
jp
pop
cs
imul
std
and
decb
cs
jl
xor
cmp
das
scas
lds
and
and
cld
adc
sbbl
repz
fistpll
div
cwtl
dec
hlt
fisubrl
and
jle
fidivrs
cli
pop
sub
cmp
cmp
xchg
fwait
xor
and
push
cwtl
inc
or
dec
int
int
in
xor
fwait
dec
mov
repz
push
mull
in
mov
icebp
gs
mov
push
mov
mov
repz
imull
int
cmpsl
flds
adc
inc
mov
imul
or
xchg
mov
je
sub
aam
cs
or
sbb
imul
cmp
lret
sbb
es
outsl
nop
sub
movl
out
imul
jno
pop
lock
mov
sti
jmp
mov
mov
popf
pusha
add
jecxz
push
out
adc
xchg
movsl
dec
jge
adc
stos
fldcw
repz
mov
fs
ret
mov
adc
imul
repz
icebp
lock
push
mov
cmovae
ja
pop
sbb
or
scas
jl
and
in
int
pop
clc
mov
lods
push
sub
cmp
and
test
pop
adc
jecxz
cmp
pop
dec
out
or
fisttps
lret
cld
sti
mov
outsl
stos
mov
sbb
in
popf
ret
push
adc
or
aam
mov
fildl
pop
cmc
xchg
popa
add
push
lahf
stc
cmp
sub
push
rcll
mov
or
arpl
fnstcw
or
inc
cmp
sbb
push
and
repz
dec
adc
mov
mov
cmpsl
dec
imul
mov
imul
rcr
inc
aam
add
leave
fcomip
pop
jg
sbbl
sub
xor
xor
add
cmp
or
jbe
mov
fnstenv
pop
mov
add
sti
ret
insl
clc
js
or
iret
pop
nop
into
dec
xchg
xchg
in
xlat
popa
insl
aam
adc
fbld
movsb
or
test
sbb
add
xchg
es
stos
out
fcmovne
cmp
pop
push
pop
push
gs
scas
sarl
rcll
pop
cs
dec
push
sbbb
pop
lahf
in
adc
mov
push
xchg
mov
lea
aaa
fstpl
daa
mov
jnp
lahf
test
cmp
push
add
lods
insb
in
pop
repz
test
insl
ja
mov
push
cmpsb
xor
mov
and
xor
mov
inc
sbb
roll
sbb
scas
sub
push
stos
sub
pop
inc
and
dec
inc
cwtl
pusha
jnp
adc
in
lret
jae
xchg
pop
sti
adc
sbb
adc
pop
mov
sahf
xchg
jbe
inc
push
and
cmp
push
push
adc
popa
sbb
lcall
div
stos
cmp
pop
jo
xchg
mov
movsbl
pop
aaa
inc
adc
pop
mov
mov
aas
in
push
inc
jne
repz
pop
mov
mov
js
aam
leave
dec
adc
ds
xchg
pop
push
cmpb
mov
out
push
idivl
jbe
mov
lcall
popf
fldt
pop
lock
das
pop
iret
mov
repz
shrb
in
arpl
cwtl
sub
and
pop
sbb
jo
jecxz
xchg
mov
popf
cwtl
sahf
mov
lahf
mov
stos
sbb
ja
arpl
push
add
inc
aaa
cmpl
mov
mov
jmp
mov
ds
mov
lds
xchg
pop
mov
sbb
adc
adcb
popf
fcompl
jle
mov
test
adc
xchg
adc
aad
cmp
mov
fldt
sahf
out
outsl
hlt
faddp
mov
std
lahf
imul
rorb
out
inc
sarb
addr16
jae
imul
lret
mov
jae
icebp
je
jl
out
roll
orb
jge
cwtl
push
sub
adc
andb
aas
or
inc
adc
out
clc
pop
repz
fisttps
cmpsb
mov
mov
ret
lods
mov
iret
mov
add
xchg
scas
adc
jns
out
mov
jg
ljmp
jge
push
jae
cs
das
or
jp
outsb
add
dec
adc
sub
loop
jno
push
jg
mov
rcrb
jge
flds
ljmp
sbb
negl
mov
pusha
popa
fsubr
test
and
popf
divps
lret
addr16
or
mov
push
or
lea
cmp
aad
filds
xchg
sub
gs
pop
inc
arpl
mov
mov
out
sti
mov
pop
mov
outsl
mov
sub
mov
pop
and
add
stc
aaa
addr16
mov
ja
imul
ja
div
xlat
inc
in
sahf
xchg
lods
andb
add
jp
js
xchg
pop
mov
imul
cmpsl
out
xchg
jl
std
cmpsl
sti
iret
push
ret
mov
sub
xlat
mov
dec
jmp
inc
mov
das
mov
fwait
jbe
int
push
mov
jae
aam
jmp
repz
xchg
mov
sbb
mov
ja
mov
lods
xchg
aad
sub
in
jo
push
ret
and
mov
sahf
dec
and
aam
adc
xchg
ds
xchg
push
mov
adc
cmp
mov
fnsave
fsubrl
mov
scas
inc
iret
jae
aas
fstp
stc
sbb
popf
pop
pop
adc
aas
jmp
mov
sti
jp
jmp
cmp
ss
sahf
inc
fsubrl
lods
push
inc
jg
shlb
mul
je
sbb
insb
lahf
push
es
pop
movsb
popf
pop
pop
negl
stc
in
scas
push
in
sbb
test
aas
fidivrs
dec
out
rol
imul
negl
fucomi
cmpsb
sarl
cmp
adc
or
cmp
int
push
scas
repnz
xor
cmpsl
mov
ja
ret
aad
adc
rol
repz
fldenvs
lods
push
or
jle
pop
or
out
stc
mov
sbb
mov
lret
lahf
ja
sub
cmp
mov
jne
push
xor
lock
insb
int
or
fcmovbe
mov
rcll
hlt
test
cmp
add
xchg
jbe
sub
js
adc
outsb
cmpsb
adc
mov
and
in
data16
pop
xor
pop
sub
sub
inc
arpl
mov
dec
adc
insl
mov
aad
jg
xchg
inc
leave
adc
repnz
jg
xchg
pop
repz
xchg
cltd
lock
es
stos
fsubl
leave
movl
sti
push
dec
push
insl
xchg
and
out
adc
aad
xor
popa
cmpsl
adc
ret
movl
repz
in
fsubs
lea
lea
imul
mov
ds
ret
sar
mov
rcr
popf
imul
iret
or
sub
mov
cmpsl
pop
xor
mov
add
sbb
outsl
fsubl
sub
mov
mov
outsb
xchg
jecxz
mov
jge
out
arpl
sub
inc
mov
mov
mov
movsl
insb
imul
data16
icebp
ret
mov
sbb
add
pop
xchg
and
xchg
iret
mov
std
idivb
icebp
clc
out
cmc
xchg
ffreep
push
pusha
vpunpcklqdq
inc
hlt
jb
outsb
cmc
insb
cmp
dec
cmp
cmpsl
ja
pop
shll
je
imul
ret
add
fiadds
das
scas
lahf
adc
push
add
dec
jnp
cmp
ret
ret
push
imul
inc
lcall
pop
cwtl
dec
pusha
add
aad
aad
test
xlat
nop
dec
sarb
xchg
or
mov
movsb
mov
mov
mov
mov
cmpsb
jp
imul
subl
push
fwait
xchg
pop
mov
lock
in
aas
adc
or
dec
stos
out
scas
pop
loop
xchg
repz
clc
and
icebp
stos
cmc
loop
pop
mov
jno
xlat
adc
pop
imul
out
div
repnz
sti
pop
cli
je
testw
iret
mul
jmp
fmull
mov
aas
jle
into
mov
out
jg
xlat
icebp
icebp
cmovo
loop
lds
fwait
aas
push
repz
fldl2t
ss
xor
adc
sbb
mov
iret
loopne
jnp
cli
fistl
cwtl
dec
fwait
scas
lock
mov
inc
movsl
scas
lea
add
mov
frstor
mov
lret
popf
call
inc
repz
std
xorl
es
mov
mov
adc
out
shrl
xchg
or
mov
arpl
std
adc
add
mov
ret
mov
sub
mov
insl
cli
stos
aad
and
push
mov
xchg
aad
outsl
lods
xor
dec
xchg
ss
loopne
inc
andb
in
mov
mov
imul
xchg
or
add
cmpsl
stc
xor
rcrl
jp
and
dec
push
cmp
sbb
nop
test
sub
out
test
ret
icebp
in
sub
pop
pop
jmp
repz
lock
ret
sbb
aas
ret
dec
cs
push
jnp
bound
mov
add
add
pop
outsl
xchg
jg
dec
insl
lahf
dec
inc
aaa
icebp
mov
leave
push
fists
xchg
mov
hlt
test
movsl
sub
jbe
mov
imul
fbstp
sarb
movsb
push
mov
outsl
lods
out
dec
pop
xchg
jns
pop
inc
push
addr16
dec
push
mov
add
pop
dec
lock
adc
mov
sarl
in
mov
inc
iret
in
les
pushf
mov
pop
dec
lea
jno
sbb
out
iret
pop
stc
bound
fldl
mov
pop
pop
pop
xchg
loop
scas
mov
outsl
xchg
pop
scas
mov
mov
push
pop
inc
or
and
pop
cmpsl
out
fmull
jmp
mov
ja
lea
in
dec
aad
xchg
dec
rorb
mov
sarb
cmpsl
shl
idivb
pop
push
mov
int
or
mov
lahf
mov
rolb
rcrb
shrb
dec
cmpsl
xchg
jnp
pop
insl
mov
add
xlat
push
test
scas
mov
lahf
sub
int3
lods
xchg
ja
int3
adc
insl
outsb
int3
aaa
repz
out
mov
scas
jmp
jns
jnp
fmulp
ljmp
cmpsb
popf
dec
aad
xchg
dec
les
adc
push
addb
out
pop
mov
sbb
push
mov
int
cs
lahf
sub
adc
aam
xchg
cltd
insl
rclb
test
cmpsl
xchg
jnp
pop
insl
mov
add
pop
push
pop
inc
mov
lahf
stos
mov
pop
ret
adc
adc
arpl
arpl
sub
xor
cmpsl
xor
jb
xor
into
or
jb
loope
dec
pop
in
push
scas
pop
jne
cmp
mov
into
iret
cmp
into
mov
cmp
jnp
mov
mov
je
cmovo
aad
fstpl
sbb
sarl
nop
jnp
add
xor
jae
add
decl
aam
push
sub
mov
add
pop
loop
fmull
es
add
dec
add
outsb
pop
mov
arpl
fldcw
and
lds
pop
jge
ret
jmp
pop
sar
xor
sbb
mov
ds
xor
mov
pop
mov
scas
aaa
xchg
idivb
dec
scas
jmp
out
push
outsb
fs
mov
add
mov
push
scas
pushf
and
dec
ret
fstl
inc
enter
sbb
test
icebp
jecxz
or
ds
cli
std
inc
lret
int
fiadds
adc
pop
mov
ja
sub
sbb
pop
push
into
ljmp
movl
std
mov
xchg
lock
je
stc
scas
imul
jae
mov
cwtl
js
into
iret
pushf
fidivrs
sub
cmp
into
in
mov
icebp
pop
sti
sub
mov
lcall
sbb
pop
imul
movl
jge
aas
sbb
aas
loope
mov
cs
in
mov
cld
mov
pushf
in
sub
bound
shll
das
vmovd
add
roll
cld
fmuls
das
mov
ja
lahf
pop
xchg
xor
aam
mov
mov
aas
xchg
lock
xchg
shll
sbb
stos
aam
lds
rorl
ja
pop
mov
lahf
or
mov
sub
pushf
jl
jg
or
cli
adc
out
mov
sbb
jecxz
sbb
fsubrl
add
sub
dec
adc
adc
xchg
adc
lds
dec
out
xor
push
xor
cmpsb
stos
xlat
inc
xchg
lahf
and
sub
sahf
inc
dec
movsb
in
mov
sbb
iret
xchg
icebp
psubsw
dec
imul
fildll
pop
adc
cmp
shll
add
int3
mov
xchg
mov
ret
pop
mov
out
imul
subb
and
cmpsl
js
xor
mov
dec
add
mov
fisttpl
call
cmpb
shrl
cmpsb
cltd
sbb
adc
xlat
sub
roll
fsubr
push
sub
leave
jbe
sub
adc
mov
add
xchg
inc
jg
pop
ja
imul
stos
mov
ja
inc
xchg
jnp
pop
fwait
adc
sbb
add
lock
mov
dec
mov
add
cs
push
and
xor
test
xlat
and
xor
sbb
cmp
lods
jo
mov
lock
push
mov
std
lcall
scas
fisttpll
mov
in
cmc
inc
aaa
and
inc
xchg
pop
mov
mov
mov
iret
push
jmp
push
sbb
sbb
fisubrs
sub
and
cs
ljmp
or
cmpsb
test
mov
push
repnz
add
fiadds
or
aas
movsb
das
and
xor
mov
insl
jno
push
stos
inc
sarl
rcll
ja
or
push
es
pop
jnp
adc
sub
pop
pop
out
and
in
sub
popf
test
leave
popa
sub
or
cmc
sbb
pop
hlt
push
gs
iret
cmp
scas
cmp
shr
and
out
insl
push
cltd
add
sub
mov
insl
add
and
loop
out
sbb
cld
pop
and
xchg
jae
mov
hlt
in
arpl
rclb
in
cltd
dec
mov
pop
out
mov
ja
dec
mov
xchg
mov
or
popf
lret
pop
aad
mov
ud2
iret
mov
mov
les
rdmsr
xchg
sbb
jb
lock
mov
retw
outsl
xor
mov
mov
repz
sarl
inc
jns
jnp
out
out
sub
in
cmpsb
inc
dec
mov
call
test
mov
sahf
or
sarl
repz
insb
call
gs
push
push
or
mov
inc
xor
imul
adc
jae
xchg
cmp
movl
xlat
add
ffreep
or
or
iret
into
jle
jg
mov
frstor
push
jmp
xor
test
push
mov
das
mov
and
mov
adc
in
div
adc
pop
mov
fildll
xchg
jle
mov
mov
mov
and
mov
data16
icebp
push
dec
push
inc
dec
or
lods
shlb
imul
pop
data16
pop
adc
mov
xor
stos
cmc
xchg
push
scas
fisttpl
cli
adc
add
rolb
outsl
xchg
add
insl
mov
jg
adcl
lds
sahf
inc
jg
xor
lahf
mov
stos
incb
orb
das
lahf
adc
push
out
jns
lret
mov
inc
add
lock
pop
xchg
repz
bound
add
icebp
cwtl
push
dec
hlt
out
cli
add
or
xchg
sbb
movsb
pop
jl
mov
mov
jecxz
sub
push
cli
jecxz
mov
in
and
out
shll
psrad
jae
xor
push
xor
rcl
or
insb
mov
or
mov
push
mov
out
or
pop
push
ret
sub
cmp
push
pop
adc
test
sub
add
arpl
sub
jno
push
out
dec
mov
inc
push
addl
and
or
inc
xor
xchg
sbb
sbb
ja
in
add
adc
cmc
mov
hlt
push
push
call
push
mov
addl
imul
testb
dec
mov
scas
pop
adc
add
push
pop
add
testb
pop
lock
stos
fstl
sbb
aad
loop
sbb
pop
xchg
loope
mov
dec
pop
inc
popf
jnp
mov
sar
das
push
or
xchg
cmp
mov
xor
lods
pop
push
sbb
popf
aad
add
mov
sub
mov
in
shll
jmp
cmp
push
push
or
loop
jmp
jg
in
push
rcrb
or
push
aaa
pop
loop
push
cs
cmp
push
aad
mov
xchg
rol
out
push
in
push
das
imul
ja
test
loopne
cmpsb
jecxz
and
pop
sti
ret
rcl
adc
insl
mov
mov
adc
ljmp
cmp
sub
inc
ss
xor
xor
xlat
or
stos
cmpsb
sub
push
jmp
and
mov
cmp
fsubrp
cmp
imul
sub
push
adc
cwtl
add
push
xchg
push
jl
aam
add
imul
cli
mov
jge
and
das
cmp
push
mov
sub
mov
add
outsb
inc
dec
jg
cmc
pop
idivl
fnstsw
arpl
repz
cmpsl
pop
cmc
int
pop
outsl
daa
inc
aam
mov
mov
or
jp
pop
in
xor
imul
dec
jecxz
cmpl
mov
push
inc
out
jne
scas
es
lods
add
pop
jne
inc
out
jge
pushf
pop
jp
fwait
push
dec
cmpsb
iret
ds
jl
rcr
or
jne
add
push
fidivrs
movb
mov
sub
enter
lods
jnp
ljmp
jg
push
dec
out
inc
dec
enter
dec
xchg
adc
in
pop
or
inc
jno
jbe
pushf
fyl2xp1
mov
negb
insb
fucomip
stos
or
ds
add
pop
pop
inc
icebp
add
xorl
fxtract
xorb
cs
pop
fs
adc
cmp
mov
dec
sub
and
xlat
xchg
push
ljmp
enter
ss
mov
jae
cli
test
stos
jle
adc
pop
push
mov
xor
inc
out
shll
dec
mov
fisubs
aas
ret
scas
inc
mov
xchg
lods
iret
jns
hlt
scas
cmp
inc
mov
ja
sub
aas
dec
mov
mov
xor
add
xlat
pop
insb
out
fbld
imul
scas
ret
or
cmp
ret
jmp
jecxz
jae
gs
fbld
lahf
cmpsb
cmpsb
jmp
pop
pop
gs
int
cmp
push
pop
das
jg
ds
pop
bound
data16
dec
pop
pop
cmpsb
daa
notb
aad
adc
fstl
out
adc
call
leave
scas
out
mov
loop
cmp
lods
push
sbbl
mov
mov
sti
cltd
sbb
mov
mov
or
cmp
pushf
ret
lds
fstpl
fidivrl
jb
push
jo
divb
ljmp
push
inc
gs
push
pushf
mov
sbb
inc
lret
inc
xchg
aaa
test
aam
clc
mov
push
sarb
rolb
stos
pop
mov
pusha
xor
out
mov
mov
stos
push
pop
sub
sbb
insl
sub
pop
mov
dec
ljmp
lcall
sarl
jle
sbbl
pop
and
sbb
shll
mov
cmp
add
shr
pop
jae
xchg
sti
and
sahf
inc
xor
inc
cmpsl
mov
mov
xor
dec
dec
stc
mov
rep
pop
loop
and
leave
push
mov
pushf
clc
int3
and
aas
xchg
lret
add
add
mov
push
popf
fwait
lcall
xlat
lods
add
mov
ret
push
clc
xor
shl
adc
pushf
cmpsl
hlt
inc
fstps
addb
and
stos
dec
adc
in
xchg
imul
sub
cld
and
cli
push
cmp
cs
imul
push
repz
sti
std
xchg
xor
cli
add
test
sub
jg
sub
jnp
or
lahf
pop
fwait
and
pushf
pop
ljmp
jne
shrl
xor
orl
notl
sbb
packuswb
jp
imul
aam
mov
in
fwait
push
cli
mov
test
jmp
xchg
mov
mov
fs
out
aad
not
aaa
pop
cli
jb
push
jne
out
xor
mov
not
ja
pop
clc
movsl
add
subl
add
stos
insl
pop
out
jle
sti
xchg
mov
jb
inc
popf
pop
pop
arpl
cmpsl
xchg
push
cmp
mov
lahf
sahf
sbb
das
ds
mov
int
lcall
sti
sbb
scas
push
mov
mov
enter
jns
pop
and
scas
lods
pop
cmpsl
mov
push
shll
add
push
aaa
push
xor
pop
mov
mov
popf
mov
js
jg
pop
add
pushf
add
pop
outsl
ror
out
xchg
sub
mov
jno
and
in
add
push
push
mov
push
jge
mov
ss
push
out
sahf
jne
pop
lret
out
iret
xlat
fistpll
nop
xchg
and
jo
adc
imull
aaa
and
lret
out
mov
xor
add
cwtl
test
scas
fwait
mov
mov
pop
mov
leave
push
or
loop
push
cmp
sahf
sub
into
sub
nop
xor
push
shrb
stos
pop
scas
ja
xchg
push
lea
call
leave
mov
inc
mull
cmpsl
sbb
pop
pop
dec
ret
stos
dec
ljmp
ror
jmp
or
xor
cmp
inc
and
loop
in
cmc
xor
cli
paddd
fdivr
pop
js
ret
inc
push
jl
ret
push
cmp
mov
cld
mov
dec
sbb
push
push
cmp
jmp
call
lret
cmc
add
cld
mov
lret
shlb
adc
int
add
outsb
mov
out
pushf
mov
sbbl
daa
stos
mov
xchg
gs
pushf
dec
xchg
ret
xlat
jno
shll
test
or
sbb
andb
mov
rorb
pop
repnz
ja
mov
ljmp
sarl
inc
push
sbb
inc
shll
lods
mov
jne
or
push
mov
fiadds
mov
fsub
scas
mov
inc
iret
push
and
mov
push
fxch
push
popa
dec
outsb
adc
pop
and
pop
fsub
mov
lods
lods
fsub
jno
cs
sub
or
dec
xchg
fwait
fstpt
jno
pop
mov
popf
cmp
lret
jp
jns
ret
leave
iret
std
xlat
fbstp
fwait
icebp
out
push
mov
cli
rcrb
jge
dec
push
pop
xchg
inc
subb
sub
dec
or
add
in
push
sbb
inc
add
fcmovnb
pop
fsubr
movsb
daa
jmp
xchg
adc
dec
fiaddl
repz
or
and
scas
cmp
pusha
or
sub
cmpsb
bound
sbb
mov
push
hlt
push
std
lret
adc
pop
icebp
jecxz
es
cli
xchg
rcl
cmp
int3
fildll
jle
jg
xor
rcr
aam
repz
into
imul
and
out
add
sub
cmc
rcrb
pop
jnp
js
sbb
out
lcall
push
repz
out
xchg
sub
xchg
inc
push
stos
iret
test
fwait
nop
cmp
and
mov
adcl
adc
movsb
daa
or
call
xchg
test
not
pop
xor
sbb
inc
movsb
imul
jns
cmp
add
adc
popl
xlat
and
repz
sub
xchg
cmp
xorl
sub
in
cmp
fnstenv
or
outsl
sub
rorb
mov
push
fsubs
lcall
lods
xchg
ds
icebp
aas
iret
adc
jg
mov
add
ds
xor
adc
fdiv
cmpsl
jle
dec
fistpl
inc
add
inc
pop
pop
imul
cmpsb
mov
in
sbb
jns
repnz
mov
into
movsl
add
push
ja
jne
lret
outsb
fisttpl
imul
repz
gs
mov
xlat
mov
add
mov
mov
xchg
xchg
add
fnstsw
add
mov
rcrl
and
adc
jge
fcomi
stos
jle
add
lcall
loopne
ds
and
jbe
stc
pop
inc
xor
mov
stos
cmp
std
add
adc
into
mov
scas
jl
das
and
push
aas
adc
sti
rorb
scas
jb
into
mov
ljmp
or
outsb
into
cmp
mov
dec
pop
fisubs
cli
jae
sbb
ficoml
jg
mov
mov
mov
hlt
lret
jl
fisubs
cmpl
stos
jns
cmp
popf
fisttps
fwait
jae
adc
sahf
es
mov
clc
sahf
lock
sub
or
xor
pusha
mov
xchg
push
pushf
arpl
push
sbb
jbe
shlb
mov
cmp
push
dec
negb
scas
stos
lret
mov
inc
jnp
pop
pop
jbe
sbb
scas
stos
int
sbbl
push
repnz
fistpl
add
pop
fadd
aad
pop
inc
adc
and
mov
inc
out
imul
fwait
outsl
stos
out
cmpsl
test
rcll
pop
mov
cs
mov
cmp
shll
xchg
popf
mov
jle
into
hlt
cmp
sub
popf
bound
fcom
andb
loop
push
and
repnz
sbb
fst
push
mov
cmp
xchg
pop
add
icebp
roll
push
outsl
pusha
xchg
call
ja
out
jp
add
jmp
rol
jno
push
pop
mov
jae
fucomp
add
sub
push
pop
jmp
dec
jnp
push
hlt
aam
loopne
ja
cmc
movsl
out
xor
inc
out
cltd
sub
in
xor
cmc
pop
or
sbb
or
xchg
fbstp
mov
cmp
cli
gs
inc
mov
mov
test
cmc
cld
out
add
rorl
pop
hlt
hlt
jb
add
adc
in
cmp
les
shll
inc
push
inc
dec
pop
lret
stos
leave
jl
outsb
stos
adc
leave
mov
inc
push
inc
scas
in
dec
add
rcr
xlat
cmpsb
or
das
add
sub
mov
outsl
aaa
or
sbb
out
leave
sbb
adc
or
jecxz
ds
imul
leave
imul
jb
lret
lret
jle
push
aas
jl
fnstcw
jbe
arpl
dec
mov
fstps
mov
fmul
pop
not
pop
sbbb
gs
push
das
out
sahf
mov
es
mov
cli
idivb
lcall
in
call
xchg
es
jp
xchg
pop
rorl
or
xchg
push
xlat
movsl
jmp
xor
icebp
shlb
jo
adc
in
cmp
and
jbe
hlt
lock
aas
pop
pop
adc
cmc
inc
xchg
sbb
and
fistps
lea
cld
fcmovbe
sbbl
inc
clc
pusha
mov
sbb
pop
out
mov
dec
aad
inc
aas
mov
fidivs
repz
cmpxchg
dec
cmp
xor
fcmovnu
dec
ret
inc
sub
decb
dec
xacquire
mov
std
pop
jge
stos
mov
inc
or
push
loopne
mov
imul
iret
jmp
xchg
cli
in
iret
mov
out
repz
in
fsubrl
out
xchg
fdivrl
in
cld
adc
sti
sub
fistpl
out
adc
and
lock
or
imul
cld
jl
leave
ds
push
mov
ds
push
sahf
ret
jmp
cmpsl
or
adc
sbb
outsl
in
adc
in
adcb
dec
setge
ret
cwtl
mov
ljmp
fadd
es
ret
mov
iret
fimuls
dec
xor
arpl
sti
mov
int
outsl
mov
mov
and
movsl
out
addr16
lret
mov
adc
cld
cmpsl
lds
data16
push
iret
clc
add
ret
cmp
je
adc
adc
int3
xchg
push
decb
iret
std
cmp
and
xchg
mov
fnstenv
jnp
sbb
fs
jle
rclb
jnp
cmp
dec
fidivs
adc
cmp
mov
out
aaa
lods
repnz
cs
in
loope
cmp
add
divb
xchg
loop
inc
rorb
ret
das
leave
pop
lret
jl
pop
mov
into
insl
rolb
lcall
pop
into
jae
inc
into
pushf
xchg
mov
jae
sub
ja
incb
loop
jg
dec
ja
outsl
cs
mov
fsubp
and
inc
push
mov
clc
fs
xchg
repz
iret
loope
dec
inc
cmp
not
lret
adc
inc
mov
inc
sub
jb
lods
outsl
sbb
ffreep
in
cmp
mov
dec
jbe
loope
mov
fpatan
test
je
mov
out
add
lock
mov
leave
je
clc
pop
js
fwait
clc
lcall
pop
dec
jbe
sahf
je,pt
fsts
cmp
arpl
pop
mov
shrl
mov
cmp
xchg
jp
jno
fisttps
mov
jns
dec
or
xor
shr
aas
leave
loope
pop
popa
add
add
sub
adcb
cld
jns
sbb
mov
push
ret
mov
hlt
jae
mov
fisubrs
stc
or
dec
push
jo
shll
lcall
adc
xchg
pop
std
rcll
es
stc
jecxz
lods
out
cmp
xchg
stc
scas
sub
push
mov
add
or
add
imulb
ret
subb
mov
inc
jno
rcrb
push
fimull
mov
sbb
mov
and
das
jno
jb
jg
jnp
mov
mov
pop
inc
lahf
fistl
dec
lret
leave
mov
out
mov
das
dec
je
add
cmp
add
adc
call
andb
mov
mov
inc
sub
push
stc
sbb
lock
pusha
das
iret
jnp
outsb
loopne
loope
rdmsr
loopne
adc
and
lret
stc
push
out
aas
icebp
inc
inc
stc
sbb
xor
or
rcrl
lahf
add
xchg
fstpl
fcmovne
idivb
insl
fistpll
adc
imul
xchg
sarl
fisubl
in
adc
lahf
mov
ss
cmp
and
inc
pop
ret
sub
hlt
mov
stc
movsb
shl
xor
jg
jmp
rcr
sbb
and
xchg
hlt
xchg
jo
xor
push
sahf
ficomps
fcoml
push
inc
and
outsb
jnp
pop
fnstsw
mov
jmp
adc
inc
sbb
insl
add
xchg
insl
xor
inc
xchg
sub
mov
push
lahf
jg
loopne
loope
dec
and
fs
iret
mov
adc
cld
cmp
pop
rol
ret
add
rorb
xchg
sbb
mov
arpl
or
mov
sub
add
imul
out
pop
iret
push
lahf
addr16
jmp
xor
jge
scas
mov
in
pop
mov
cltd
stc
mov
jge
adc
sbb
mov
out
daa
mov
out
cs
pop
repnz
fnstenv
pop
sub
sbb
sti
les
mov
in
iret
iret
cmp
add
movsb
sub
push
pop
je
mov
pop
xor
xor
mov
in
jl
fbld
iret
notl
add
xchg
divl
add
fisttps
sbb
cmc
stos
inc
mov
mov
push
cmpsb
sbb
fistpl
sbb
pop
sahf
mov
xlat
stos
or
loop
cmc
rolb
hlt
xor
roll
push
sbb
mov
lea
adc
loope
or
movsb
cmp
and
pop
fdivl
jno
sbb
adc
push
xor
inc
in
jmp
sbb
mov
pop
rep
or
in
pop
xchg
ss
xchg
adc
das
inc
stc
stos
fstpl
movsl
daa
es
frstor
push
mov
scas
outsl
ja
negl
lahf
leave
stc
fldcw
mov
ljmp
sub
bound
jmp
leave
cltd
fcomps
fdivp
xchg
sahf
jnp
out
mov
xor
jecxz
mov
fcomi
push
loop
mov
or
cmc
xchg
repz
pop
test
in
leave
das
mov
aad
in
cmpsl
nop
sub
setle
std
adc
repz
and
lret
imul
mov
and
sbb
sar
push
jmp
jge
repz
sub
pop
or
cmp
and
push
and
add
es
into
imul
in
pop
imul
sub
fistl
dec
fwait
push
jmp
outsl
fnstsw
arpl
xor
ss
mov
in
cld
repz
popa
fdivrl
cmpsl
in
hlt
cli
mov
stc
leave
push
fadd
push
in
inc
call
jnp
insb
cmpsb
fsub
xlat
and
xchg
idiv
loop
cmc
sbb
iret
adc
scas
leave
push
loopne
inc
es
jbe
push
idiv
ret
push
loop
js
push
jle
push
repz
xchg
icebp
out
imul
xor
mov
std
pop
xlat
in
repz
sub
sbb
aad
out
shll
cmp
arpl
xor
pop
out
data16
std
cvtps2pi
xor
repnz
lret
repz
dec
inc
mov
ror
dec
inc
les
push
int
out
pop
mov
cmp
stc
ja
mull
imul
jbe
test
pop
int
mov
xchg
pop
jle
jecxz
add
mov
adc
lret
lahf
xchg
in
stos
lahf
scas
icebp
or
push
loop
adc
push
add
cld
insl
lock
lahf
jg
sahf
adc
aas
jg
clc
pop
movsb
cmpl
jmp
loope
insl
subl
mov
loop
inc
mov
out
out
pushf
rorl
call
dec
jg
bound
xlat
repz
dec
ret
sbb
enter
gs
add
or
push
mov
sbb
out
psubq
cli
std
rcl
mov
fists
mov
sub
jnp
mul
push
popf
jecxz
scas
ret
leave
addb
and
or
mov
add
clc
out
cli
mov
test
into
incb
sbb
cmpl
loope
add
mov
fcmove
or
or
dec
jg
mov
jmp
popf
jl
js
mov
mov
jg
shrb
push
push
adc
das
pop
out
fcoms
or
ja
push
xchg
enter
and
xchg
dec
mov
add
or
adc
cmpsb
sub
mov
out
fwait
ja
loopne
pop
dec
fnstcw
sahf
sbb
dec
shll
loopne
hlt
inc
dec
sahf
outsl
dec
mov
in
mov
lahf
pop
repnz
push
jnp
cltd
fisttpl
ja
out
jmp
and
jne
stos
fldl
add
outsb
xchg
pop
cmp
insb
jmp
test
aas
aad
mov
fsubrs
mov
push
insl
arpl
lods
clc
ljmp
lock
pop
aaa
xor
clc
mull
pop
adc
std
lock
cmpsl
insl
enter
sub
test
enter
sbb
push
sti
mov
sub
aad
scas
jmp
xchg
daa
or
fnstsw
or
push
fsubr
sti
push
mov
cs
xlat
fimuls
negl
cmp
repz
pop
sbb
lcall
fdivp
push
sub
xchg
repnz
mov
out
daa
inc
rcr
pop
add
sar
mov
pop
cmpsb
insb
mov
pusha
sub
inc
daa
cmp
or
jns
mov
add
pop
fisubs
sub
xchg
xor
xchg
repz
stc
in
jno
sbb
xchg
lcall
or
jmp
jecxz,pn
mov
sub
xchg
mov
jno
movsb
cmp
cld
adc
sbb
lods
mov
lret
fcmove
sbb
xor
arpl
cmp
std
dec
outsl
cs
mov
ds
lods
lcall
mov
insl
xchg
jmp
mov
push
stos
pop
sub
pop
pop
jl
add
fldenv
adc
sarl
mov
jl
add
outsl
out
xor
dec
mov
cmovno
icebp
pop
enter
mov
fisubrs
or
cmp
pop
pop
mov
insl
pop
jecxz
cmc
or
mov
pop
in
push
aas
out
mov
sbb
ja
pop
fldt
xor
jg
sub
rcr
push
dec
jmp
arpl
test
or
xchg
scas
lcall
lret
xor
iret
pop
sub
mov
push
imul
iret
andl
in
fistps
push
jl
int3
cli
fbstp
mov
xchg
cs
jo
fwait
push
test
and
adc
xchg
mov
stc
sub
sub
sub
adc
fcmovnbe
xchg
insl
and
ljmp
rcll
cltd
xor
mov
jb,pn
mov
and
das
xchg
or
lock
out
mov
fs
adc
push
lret
mov
stc
sub
vpaddusw
push
xchg
out
movsl
notl
hlt
cs
ret
xchg
ljmp
jnp
sti
pop
aas
and
fmull
or
and
loope
addr16
sti
push
out
insl
dec
push
pop
scas
jg
loop
sub
shll
push
fcoms
xor
cmp
aaa
iret
inc
mov
insb
cmpsb
push
hlt
mov
adcb
add
lcall
xchg
pushf
cs
out
dec
aaa
aas
pop
pop
sbb
shlb
aaa
cli
iret
cmp
notb
jecxz
ss
push
dec
or
or
aaa
or
xchg
lret
lahf
pop
push
mov
ret
or
gs
enter
outsl
mov
cs
mov
and
sbb
ja
lcall
push
hlt
push
sbb
ss
cltd
repnz
mov
fildll
out
std
and
cld
mov
addr16
test
add
out
push
sub
xchg
aad
pop
neg
sti
jl
push
shrl
mov
sub
sbb
cmpl
mov
pop
or
jnp
xor
lahf
insb
dec
rcr
scas
or
xor
aaa
pop
jecxz
jnp
jo
lcall
ss
adc
mov
out
and
mov
in
cwtl
mov
stos
in
js
add
pop
outsb
lret
pop
iret
inc
out
cli
popf
rcrl
mov
dec
cmovae
mov
ret
inc
jnp
fpatan
inc
insb
test
stc
scas
xor
mov
jmp
jl
ret
loope
test
shl
or
push
mov
and
push
fucomi
insl
mov
mov
cmp
insb
xchg
ret
sbb
xchg
leave
push
fisubs
dec
and
jb
sbb
push
pop
mov
mov
into
fmul
insb
mov
mov
add
imul
lret
rcr
dec
sar
push
arpl
mov
dec
and
cmp
iret
cli
cmp
xlat
fnstcw
xchg
mov
push
mov
cli
subl
mov
fildl
mov
shll
mov
divl
xchg
outsl
insl
outsl
adc
jg
stc
mov
cmp
adc
scas
push
pop
pop
xchg
ficomps
jg
std
pop
xchg
add
out
in
cmpsb
lret
insl
fiadds
adc
insb
pop
mov
jmp
fdivr
and
xchg
outsb
mov
cmp
jg
and
out
mov
insb
pushf
jge
inc
aas
call
test
inc
inc
insl
lret
out
inc
push
out
lret
std
xchg
and
sahf
fistps
imul
pop
pop
push
mov
stos
negl
mov
in
test
loope
pop
std
cs
or
mov
rolb
jb
or
adc
je
data16
gs
push
mov
sbb
out
mov
mov
mov
pop
adc
and
fmulp
and
aaa
aas
pusha
push
pop
cmp
aas
popl
mov
xchg
jns
inc
xor
xor
xor
sub
jge
call
cs
int
dec
jmp
in
scas
aaa
xchg
xor
addb
movsb
xlat
icebp
ret
in
loopne
or
add
push
xlat
mov
cmp
jb
mov
fstpt
xor
jmp
jge
mov
mov
dec
ficoms
mov
inc
inc
shll
cmpsb
cmc
in
hlt
cmc
sub
out
mov
mov
repz
js
clc
wbinvd
add
iret
fmuls
cmp
lods
add
ret
std
js
repnz
jbe
daa
les
mov
push
lahf
mov
pop
iret
fildll
call
movsl
clc
dec
mov
mov
subb
sbb
fucomi
insl
imul
add
xor
rcr
fistpll
gs
testb
and
xor
sub
jecxz
jnp
clc
decl
ss
mov
and
or
stos
pushf
arpl
jge
sub
fisubl
xor
mov
out
xchg
sbb
repz
mov
sub
mov
mov
fwait
mov
cwtl
sbb
or
add
xchg
or
mov
dec
mov
mov
add
lods
das
add
out
fwait
adc
out
sbb
pop
es
insl
jle
xchg
jb
sbb
mov
pushf
xorl
cmpsb
mov
mov
or
xchg
dec
dec
out
jl
and
lods
clc
test
mov
imul
in
mov
test
shll
outsl
xlat
int3
dec
fistpll
pop
and
or
je
sub
pop
mov
daa
jl
mov
imul
je
push
dec
out
out
cmp
shll
fcomp
out
outsb
xchg
sahf
mov
std
addr16
imul
cwtl
fistpll
pop
pop
fnstenv
cmp
iret
pushf
add
adc
add
ljmp
aad
or
dec
adc
test
jmp
out
mov
push
sbb
test
mov
out
add
cs
xchg
cmp
xlat
fimull
xlat
test
fcoml
cli
aas
daa
dec
dec
icebp
iret
imull
leave
out
movsl
jae
mov
push
pop
out
xor
push
pop
xlat
dec
and
and
fistpll
mov
and
out
lret
sar
or
js
ret
cld
out
mov
xor
push
aad
shlb
iret
and
lods
gs
dec
or
add
and
mov
ljmp
push
mov
inc
mov
icebp
pop
int3
add
cmc
in
xor
pop
mov
xlat
adc
inc
xor
je
xchg
imul
int
inc
dec
cmpl
cmc
adc
aaa
mov
fwait
inc
insb
roll
jmp
dec
cmp
outsb
iret
sbb
cmp
scas
push
ret
bound
push
pop
xlat
pop
cs
lods
jo
mov
inc
xchg
pop
into
in
aas
pop
jnp
push
outsb
xchg
dec
repnz
ja
push
std
pop
pop
sti
insb
push
pushf
mov
leave
sub
add
sbb
sub
fnstsw
or
mov
mov
out
popa
mov
in
pop
cmp
repz
inc
test
sub
popf
addb
jmp
insb
clc
dec
int
imul
cmpsb
stos
push
cmp
fiadds
cmp
mov
push
jae
aaa
jge
fucom
jmp
xchg
sbb
ret
xchg
push
das
xchg
xlat
xor
mov
xlat
ljmp
sbb
es
push
and
fs
dec
dec
sub
mov
arpl
jnp
dec
ret
pop
dec
test
and
fbstp
fistpl
ss
addr16
std
insl
and
mov
jg
dec
lret
int3
adc
jl
sbb
fstpt
idivl
mov
pop
pop
jnp
sub
add
loopne
mov
push
xchg
or
sbb
into
pop
rcl
push
sarl
jno
scas
imul
cmpsb
movsl
mov
mov
outsl
andl
add
aad
out
mov
mov
loop
pop
sbb
sarl
loop
add
fneni(8087
leave
push
in
sub
ja
dec
flds
sarl
sti
push
mov
mov
mov
xchg
jae
arpl
jb
adc
inc
mov
xor
cmp
pop
jmp
inc
xchg
sub
adc
sub
jp
daa
push
aas
xchg
pop
or
add
push
shlb
cmp
call
clc
pop
lea
and
or
sub
loop
popa
jg
add
sbb
loope
and
shll
push
pop
orl
jg
daa
loop
mov
push
mov
hlt
or
mov
and
xor
out
aam
hlt
push
stc
enter
dec
dec
fisttpll
mov
imul
mov
das
push
xchg
dec
mov
ja
repz
test
cmpsl
outsl
xchg
fidivrs
mov
or
fmulp
repnz
inc
das
sbb
in
xchg
jns
sbb
and
fcoml
rclb
pop
mov
clc
aas
sbb
cmpsl
into
lret
divl
shr
mov
xor
mov
push
imul
rcr
mov
jno
dec
lret
fcoms
pop
sub
in
cmp
out
sub
mov
in
jae
scas
cmc
or
test
mov
lret
jno
mov
imul
imul
outsb
jo
aad
in
jge
cld
imul
jle
mov
xor
es
sub
outsl
in
std
test
in
xchg
repz
andb
insb
jmp
out
pop
sub
xor
inc
stc
and
lret
ljmp
outsb
sbb
lcall
cmp
not
dec
mov
pushf
shll
scas
inc
sub
mov
outsb
repz
sbb
sub
mov
mov
cltd
sti
xchg
mov
mov
insb
daa
sbb
pop
mov
mov
dec
pop
jmp
mov
adc
int3
or
js
mov
outsl
ret
mov
add
ds
pop
dec
call
es
clc
pusha
repz
add
lidtl
mov
neg
mov
inc
scas
sub
dec
js
out
sti
adc
insb
fists
test
sti
sarl
je
sti
scas
xlat
mull
or
out
push
mov
pop
lret
sub
cmpsb
push
mov
sub
sahf
push
mov
jbe
insb
pop
lock
popw
xlat
add
fcomps
divb
push
js
mov
mov
out
adc
adc
pop
lret
lahf
bound
fbstp
pop
pop
mov
cmpl
add
or
cs
and
out
push
pop
arpl
outsb
loopne
in
sub
shl
jo
mov
mov
xor
fcoms
pop
dec
inc
fstps
out
sbb
mov
mov
jno
mov
push
and
mov
out
aas
inc
jecxz
mov
inc
jnp
add
int3
push
fistl
or
mov
out
mov
sub
ret
and
mov
jp
mov
xchg
pop
mov
clc
sti
mov
or
ljmp
xor
inc
xor
sub
or
jns
mov
xor
pop
in
xchg
mov
fstpt
test
repnz
clc
fisttpl
and
cli
mov
out
bound
push
xor
mov
sub
inc
fwait
insb
cltd
popl
xor
sbb
fcompl
inc
mov
call
mov
fwait
mov
lahf
add
xor
repz
fs
jmp
xchg
scas
pop
jle
std
outsb
fstpl
inc
push
ljmp
les
call
add
repnz
and
fsubp
push
imul
pop
mov
arpl
mov
imul
xchg
mov
mov
divb
scas
fistpll
fstpl
outsb
jbe
sbb
and
inc
out
lds
in
and
push
cld
fldl
jl
repz
aad
push
mov
lret
movsl
fsts
aad
jmp
xlat
pop
cmpsl
cmc
or
leave
arpl
in
aas
jmp
adc
inc
mov
cs
das
aas
pop
dec
mov
sbb
fidivrs
jmp
push
jmp
dec
sbb
scas
sbb
jmp
cmp
sbb
dec
mov
aad
frstor
mov
stos
sub
push
out
aad
jns
std
push
pop
jge
jmp
xlat
clc
test
jle
neg
outsl
adc
sti
or
mov
push
scas
ret
dec
icebp
shlb
ds
seta
pop
shrl
cmp
add
mov
in
iret
xor
pop
mov
and
sti
notl
in
lret
repnz
daa
lcall
out
mov
out
loopne
jae
pop
pop
xchg
aaa
push
stos
loop
push
repz
cli
pop
and
mov
xorl
std
rcl
repnz
cmp
sbb
mov
ret
fmull
mov
jne
adc
out
push
mov
cmc
inc
push
cs
pop
push
movsb
lds
sbb
adc
in
inc
jnp
mov
jmp
mov
sahf
xchg
mov
dec
jno
push
push
xchg
fstpl
sub
js
lret
test
jl
add
push
jnp
mov
add
filds
ss
jecxz
or
test
push
jg,pn
sarl
xchg
mov
push
bound
fdivrl
test
rol
fildll
fld
loope
pop
adc
xchg
mov
inc
mov
and
sti
ja
add
lret
ljmp
cmp
int
mov
jae
add
jecxz
jg
mov
jle
mov
bound
aam
lahf
fidivl
push
mov
and
daa
pop
adc
fwait
cmc
pusha
lock
push
jmp
pop
mov
jg
lret
lds
mov
insb
sub
add
jp
popf
cmpsb
sbb
jns
pop
rcl
or
out
mov
add
pop
inc
xor
xchg
mov
cmp
add
cmp
in
sarl
and
inc
mov
imul
dec
ljmp
push
clc
fcmovne
pop
fists
pop
repz
repz
sub
cmc
or
sub
das
and
aad
gs
mov
or
ffreep
in
or
testb
shrl
mov
and
out
test
iret
jecxz
cmp
in
lret
das
jg
scas
fmul
test
inc
cmp
jae
push
call
out
insb
xchg
push
arpl
fs
sub
fs
adc
roll
aam
into
mov
ss
or
or
shrl
push
jno
mov
cmc
lahf
and
and
mov
fsubs
jne
std
adc
dec
mov
aas
roll
sti
push
jg
rcl
pop
mov
out
hlt
mov
imul
out
jecxz
pop
cmc
sbb
scas
popf
jnp
fcmovnb
pop
xor
lods
push
xchg
mov
testb
mov
imul
cld
mov
mov
pop
mov
jl
jecxz
test
out
outsl
push
xor
cmpsl
mov
out
jno
xor
push
leave
mov
sarb
dec
mov
imul
sbb
pop
mov
sarb
iret
sbb
addr16
jecxz
sbb
inc
jmp
xchg
mov
iret
ss
xor
clc
cs
push
test
es
out
jns
lock
lods
scas
dec
mov
pop
mov
xchg
mov
adc
mov
jl,pn
in
mov
data16
and
arpl
jno
mov
lret
test
push
xchg
xorb
push
negl
sub
jle
fisttps
cmp
shr
jg
jle
lahf
fwait
add
je
jb,pn
icebp
fcmovne
setle
xchg
or
cmp
xor
leave
ret
adc
adc
nop
iret
xor
pop
lods
jl
cmpsb
jle
pop
cmpsb
dec
popa
leave
imul
pop
cmpsl
lahf
imul
or
int3
inc
sbb
pop
std
shl
add
in
scas
aaa
scas
pop
pop
cmp
jns
inc
leave
cmp
xchg
pop
lahf
mov
sub
fildl
jne
fldt
loop
pop
popf
mov
test
out
add
mov
pop
sub
outsb
cltd
scas
outsl
bswap
inc
fistpll
dec
sub
int
incl
dec
aad
cmp
mov
das
or
icebp
or
jle
add
testl
ret
shl
leave
shlb
xchg
cmp
adc
fdiv
mov
hlt
popf
adc
scas
mov
push
fmuls
scas
repz
cli
push
rorl
sti
roll
ja
leave
int
std
stc
stos
push
adc
sub
push
mov
adc
repnz
test
out
push
out
push
je
dec
test
mov
mov
pop
mov
lret
lcall
jmp
ret
sbb
into
lcall
sub
xchg
pop
mov
and
pop
outsb
pop
ret
popf
jg
mov
sub
jle
add
adc
fimuls
ja
xchg
mov
adc
xchg
or
xchg
mov
xlat
mov
jno
jns
iret
ror
out
jo
idiv
pcmpgtd
mov
stc
adc
xchg
jno
inc
fnstcw
cmp
and
stos
in
outsb
loop
cli
cs
jns
insl
ret
lahf
in
push
clc
mov
jno
notb
ffree
mov
cld
scas
xchg
cmp
out
add
jns
int
cmp
lods
sub
xchg
out
movsb
addl
repz
jle
pop
mov
out
cli
pop
lods
cmpsb
mov
dec
push
pop
push
xchg
adc
inc
cli
mov
jns
cli
mov
imul
out
das
jns
lea
call
xchg
sub
lods
xchg
pop
mov
ds
jb
push
xor
ja
jle
bound
movsl
call
sub
repz
orl
enter
nop
push
js
pop
mov
out
dec
jle
xorb
rcr
imul
pop
stos
xchg
rorb
pop
lock
stc
sbb
repz
add
mov
xlat
into
insl
or
push
repz
push
out
xor
outsl
mov
pop
sbb
fcompl
cwtl
xchg
rol
add
xchg
mov
mov
stos
pop
ja
mov
xchg
mov
mov
scas
jecxz
das
fsubrs
call
xchg
mov
adc
jp
rcrl
imul
jp
sub
jmp
xor
or
imul
iret
fdivrl
stos
mov
addr16
inc
int3
mov
and
movsl
ficoms
data16
outsb
xchg
jnp
iret
sub
divb
fstpt
push
cmpsb
scas
scas
pop
mov
cmpsb
pop
xlat
sti
jle
jmp
jge
outsb
dec
call
gs
pop
jnp
iret
sub
pop
fldenv
xchg
daa
fistl
xchg
inc
jl
add
testb
jnp
test
das
idivl
dec
xor
loop
or
pusha
jns
adc
out
mov
stos
lea
jns
dec
sarl
adc
enter
mov
fsubr
fsubs
out
aam
pop
sbb
xchg
xchg
xor
cs
push
and
jg
xor
push
fists
test
mov
out
test
and
pop
inc
sub
jbe
lock
xor
clc
adc
outsb
lea
imul
imul
mov
mov
xchg
icebp
push
repz
mov
jge
push
fistpl
insb
mov
pop
mov
das
cmpsb
repnz
clc
sbb
sbb
repz
in
pop
imul
sets
lahf
cmc
adc
shl
push
hlt
repz
cmp
push
xlat
lcall
jmp
pop
subb
shll
mov
push
ret
jg
pop
jecxz
xchg
flds
test
xlat
iret
jmp
out
insb
repz
decb
sub
imulb
mov
push
pop
jmp
dec
xor
scas
mov
jno
jmp
dec
xchg
adcb
std
data16
ds
mov
fcmove
popf
idivl
hlt
cmpl
out
ljmp
xlat
add
test
into
in
outsl
in
test
popl
mull
out
ljmp
or
mov
jns
dec
orb
mov
pop
sahf
mov
jne
or
nop
sbb
inc
inc
mov
push
cs
js
cli
fbstp
and
es
ret
mov
jp
mov
shll
pop
ja
movb
xchg
adcb
fcoms
scas
dec
cmp
imul
jae
ret
fbstp
scas
rorl
lret
leave
sub
andl
cwtl
dec
ja
fadds
in
xor
pop
cmc
mov
mov
pop
rcrl
mov
mov
stc
test
ret
inc
out
mov
sti
icebp
push
xchg
shlb
add
mov
mov
xor
cmc
xor
jb
aad
jb
push
call
jecxz
jae
xchg
xor
enter
leave
jl
jno
sti
inc
orb
xchg
push
jmp
rorb
not
mov
mov
or
leave
fbstp
pop
rclb
outsb
mov
mov
cmp
outsb
xchg
lret
lock
push
fbstp
xlat
insl
in
out
xchg
scas
sub
subb
cmp
roll
cmp
pop
hlt
mov
fwait
rcl
mov
fstps
mov
lcall
jge
push
aam
icebp
addl
je
mov
scas
cmp
add
ret
or
pop
movsl
movl
adc
sbb
xchg
lods
scas
ret
push
jnp
rdtsc
leave
inc
sbbl
lcall
cltd
mov
push
sbb
sti
inc
loop
arpl
cmpsb
mov
push
cltd
mov
mov
inc
push
hlt
shl
cltd
cltd
sub
fisubrs
insb
jne
xchg
mov
rol
fisttpl
repnz
sub
scas
fldl2e
movb
cs
push
fstpt
sbb
adc
cli
jne
testb
jmp
xor
cs
jno
xchg
out
cmpsb
scas
jle
add
mov
scas
sub
or
pop
jg
lcall
je
mov
out
stos
imul
lea
jmp
xchg
adc
dec
cltd
fistpl
mov
out
jmp
mov
fs
xchg
fldenv
les
push
pop
stos
jecxz
imul
fistpll
int
mov
xchg
mov
fcmovu
lcall
ret
hlt
add
inc
out
sbb
bound
shlb
sbb
lcall
push
sub
mov
std
sub
ss
adc
js
sub
bound
add
outsl
adc
xchg
cld
test
jge
xor
and
out
sbb
mov
daa
icebp
pop
mov
add
lcall
mov
sbb
andl
xor
mull
hlt
sarb
iret
mov
pop
jg
push
fistpl
add
aam
cmp
mov
cmc
sub
movsl
sarb
or
in
ja
lods
imul
adcl
scas
cmpsb
cmp
and
mov
xor
and
pop
mov
cmpl
push
add
repz
pop
fmull
fstps
add
mov
pop
aas
sbb
cmp
pop
lret
inc
imul
inc
inc
lahf
xlat
outsl
jg
ljmp
pop
mov
xchg
fstps
fs
dec
pop
mov
leave
das
push
xor
push
dec
test
xor
iret
sub
dec
insb
jmp
xchg
adc
es
cmp
in
aas
jmp
adcl
xor
aad
push
repz
out
add
push
aas
rcll
cwtl
lret
sub
nopl
push
mov
sbb
test
push
js
test
sbb
jmp
push
sub
add
out
jl
mov
pop
imul
nop
push
sub
test
out
scas
pushfw
fildll
and
or
sub
ret
pop
or
cmc
sub
adc
xchg
mov
xchg
out
or
jbe
mov
xchg
sub
push
jbe
cmpsl
jb
ret
mov
add
add
add
or
into
clc
pop
cmpsl
jae
xchg
popl
das
mov
fcompl
inc
lods
bound
cs
imul
jg
out
inc
mov
pop
add
jnp,pn
out
lds
mov
sahf
aam
lahf
iretw
fcoms
mov
adc
cmc
inc
sahf
stos
lcall
shll
fdiv
push
sub
xchg
inc
mov
mov
loopne
fdivr
xchg
clc
push
xor
cwtl
leave
iret
mov
cmc
stc
loopne
adc
mov
push
and
rol
xchg
addr16
ret
push
sahf
sub
pop
into
repnz
or
inc
push
aaa
dec
iret
fldenv
jno
mov
mov
mov
out
out
cmpsl
cmpsl
dec
add
inc
push
mov
pop
fadd
jbe
mov
outsb
jno
loopne
cmpsl
jns
aas
sub
and
mov
test
in
cmp
sbb
lcall
push
out
scas
scas
pop
insl
icebp
fnstcw
mov
lds
jo
mov
outsl
leave
popf
imul
mov
push
mov
popf
test
cltd
jnp
loopne
mov
scas
sub
js
mov
fwait
xor
add
cwtl
mov
pop
fucomip
cwtl
ret
fdivrl
fcomp
push
stos
adc
ds
mov
mov
aad
adc
xlat
add
jg
push
jae
lahf
jmp
fwait
in
sahf
clc
idiv
loopne
out
mov
cmp
scas
adc
push
mov
adc
adc
mov
push
sbbb
bnd
push
jns
sub
pop
mov
xchg
imul
nop
pop
cmp
pop
popa
stos
dec
jmp
mov
mov
cs
popf
mov
fisttpll
popa
mov
xchg
sbb
jne
cld
pop
cli
leave
dec
ljmp
dec
cmpsl
clc
jl
inc
mov
sub
dec
in
divl
ja
pop
aam
mov
xchg
pop
and
pop
fldt
or
fcmovnbe
es
mov
jge
imul
sbb
lret
aam
ret
in
push
mov
lods
mov
push
fildl
inc
inc
mov
into
cld
in
repz
pop
push
in
rclb
test
aad
push
scas
lea
adc
dec
xorb
mov
fmull
mov
push
jl
push
jp
je
mov
scas
and
xor
shll
stos
icebp
inc
in
pop
adc
dec
in
xchg
das
into
adc
adc
outsb
in
ja
pop
pusha
fsubrl
and
or
sahf
inc
sahf
cmc
cmpsl
cs
sbb
ficoml
lea
inc
xchg
xchg
push
add
hlt
jp
sti
adc
push
loope
pop
inc
sbb
pop
aaa
push
and
loop
gs
pop
fcomip
aas
pop
push
fwait
xchg
push
xlat
pop
imul
popf
imul
jne
mov
in
jo
adc
pop
add
mov
mov
dec
add
test
rcr
pop
xlat
sbb
jmp
jmp
repz
pusha
cmc
sub
mov
testl
std
adc
push
iret
lock
sbb
jecxz
and
mov
pop
inc
enter
jmp
out
je
rcll
xchg
movl
dec
pop
mov
fsub
roll
sahf
push
popa
push
xchg
add
mov
xor
scas
imul
fdivr
xor
cmp
xlat
dec
jge
push
aas
mov
xlat
ret
vmaskmovdqu
fincstp
lahf
out
ljmp
in
push
shll
push
out
pop
xchg
cmpps
xchg
cmp
xchg
into
or
sahf
daa
lcall
loop
icebp
add
or
stos
jge
add
mov
cmp
xor
mov
out
push
sub
and
sti
inc
fwait
xor
std
push
push
aas
iret
cmpsb
stc
cltd
repz
sbb
push
or
arpl
outsl
bound
pop
hlt
or
push
and
sub
inc
stos
pop
mov
jne
and
pop
rcrl
sbb
cltd
dec
mov
mov
xchg
dec
jp
jns
xchg
mov
fsubs
leave
ret
int
cmpsb
int
out
faddl
outsb
imul
push
push
jl
enter
das
and
adc
lahf
pop
mov
xlat
in
push
jnp
add
dec
sti
sahf
ret
or
out
sub
push
clc
inc
mov
sub
scas
cld
cltd
and
mov
jecxz
push
fnstenv
fcomip
stc
xchg
ret
pop
mov
inc
mov
xchg
xor
pop
and
cmp
and
add
push
out
pop
add
lea
fistps
pop
mov
xchg
pushf
aaa
or
pop
sub
sahf
sbb
pop
es
sti
std
or
jmp
repz
sub
lret
add
mov
mov
in
imul
xor
fdivrl
cmp
sbbl
mov
sub
inc
repz
mov
push
cmc
or
dec
arpl
out
inc
int
jle
xor
sbb
cmp
push
xchg
cmp
jg
mov
test
or
bswap
stos
insb
mov
lahf
aam
push
sub
movsl
mov
xor
jnp
out
mov
pop
adc
lahf
loope
fistps
fnstcw
out
lcall
mov
xchg
push
mov
fstpt
int3
mov
into
mov
outsl
cmp
mov
repz
cmp
out
push
sbb
push
decb
jl
hlt
pop
loopne
adc
out
adc
ja
and
lret
inc
je
mov
mov
es
subl
pop
mov
divl
dec
mov
sub
pop
mov
fistps
dec
enter
mov
stos
ret
es
pop
leave
push
dec
test
pop
rolb
cmpsl
inc
push
dec
lret
sub
mov
scas
adc
xor
sbb
push
fisubrs
shlb
push
mov
mov
mov
or
lcall
mov
and
adc
xor
adc
cs
pop
xchg
sti
fnstcw
mov
test
pop
mov
repz
adc
add
popf
imul
cs
pop
push
add
int3
cld
inc
loopne
lahf
out
push
mov
sub
fsubrs
scas
xchg
xchg
outsl
fsincos
cltd
pushf
pop
arpl
lods
sbb
pop
ljmp
imul
nop
int
repnz
mov
ds
stos
sbb
into
out
mov
sarb
popf
daa
cmc
pop
or
shrb
sub
jl
cld
pop
sti
jmp
push
pop
and
aaa
fidivrs
movsl
cmpsl
inc
out
push
sbb
dec
push
inc
stc
aas
inc
ffreep
test
inc
cmpsb
rorb
cmp
sub
sbb
pop
dec
xchg
es
adc
mov
fadds
pop
dec
add
imull
mov
out
std
addl
jae
fistl
or
or
fistps
sub
lock
inc
icebp
push
and
mov
ljmp
fstpt
fnstenv
add
call
cmp
out
mov
lock
or
inc
outsl
inc
in
dec
push
aaa
sbb
push
notb
lret
outsb
mov
repnz
cmpb
mov
out
stc
and
cs
mov
cmp
leave
fiaddl
ss
sub
outsl
xlat
sub
aaa
xlat
and
jge
mov
iret
aas
add
push
inc
sbb
push
aad
or
pusha
out
cmp
adc
frstor
sti
xchg
mov
sbb
out
divb
stos
das
pop
sub
cld
clc
pusha
fisttpl
and
pop
in
pop
mov
lret
imul
fmulp
out
stc
std
popf
jno
iret
mov
std
mov
leave
out
pop
sarb
lock
sahf
xchg
jmp
cltd
push
icebp
fcmovnbe
pop
add
jmp
dec
mov
fidivs
lea
jl
jecxz
lods
cli
add
cmp
add
xor
sub
aaa
mov
add
jmp
idivb
jg
hlt
jg
negb
in
sub
cmpb
ja
sub
push
adcl
scas
outsl
mov
mov
push
cmp
sahf
add
dec
cmpsl
movsl
jmp
out
pop
xor
lcall
add
cs
lahf
jge
push
mov
rcrb
sbb
xlat
sub
jmp
out
xchg
shll
jecxz
movb
loopne
and
sub
sub
cld
xchg
fdivl
shl
clc
sbb
mov
push
out
cmp
and
or
gs
jnp
cli
repz
rorb
je
scas
fld
xchg
mov
popl
xchg
roll
mov
inc
mov
dec
shll
pop
sti
sbb
addr16
add
fstpt
mov
adc
ss
jge
hlt
xor
mov
sbb
in
sub
and
cli
ret
inc
sbb
nop
adc
pop
aaa
and
aam
ljmp
lods
cmp
mov
imul
xchg
rclb
repnz
inc
mov
and
scas
repz
jecxz
and
into
cmp
outsl
loope
mov
outsl
and
dec
repz
pushf
ss
add
pop
adc
sbb
repnz
mov
push
sarb
sbb
add
bound
xchg
pop
iret
pop
rol
fwait
adcl
xchg
adc
inc
cmpsb
adc
lcall
std
fnstenv
out
es
xor
add
or
lret
mov
inc
mov
insl
mov
push
pushf
dec
add
js
mov
pop
sub
faddl
test
mov
pop
or
or
adc
mov
push
mov
jmp
repz
mov
sub
jmp
movsl
sub
or
je
cmp
bnd
stos
cmc
cs
fadd
add
sahf
jae
scas
ret
mov
fucomip
push
pop
outsl
pop
ficoms
ja
out
dec
inc
adc
add
arpl
dec
push
out
lret
and
mov
xchg
add
scas
fwait
jbe
repz
out
aas
pop
add
push
mov
std
mov
ds
or
and
sbb
and
decb
imul
gs
out
mov
shlb
fstpl
adc
inc
pop
mov
jae
pushf
mov
fnsave
sub
sti
cltd
mov
pop
inc
aad
pop
std
mov
pop
ss
mov
hlt
rol
jg
pop
lahf
pop
cld
sub
fbld
push
pop
or
adc
std
inc
stos
adc
adc
lret
and
sub
sub
clc
rolb
jmp
test
mov
jbe
mov
or
add
dec
add
pop
sti
mov
and
lahf
lahf
mov
in
dec
xchg
cmp
add
test
icebp
je
sub
mov
cmc
in
adc
js
add
adc
push
xorl
or
sub
ds
out
mov
fucomp
push
scas
lret
mov
fld
insl
daa
inc
xlat
ret
pop
ja
icebp
adc
mov
sub
mov
addr16
or
rclb
test
cmpsl
in
int3
ret
adc
aam
aam
not
scas
out
scas
pop
pop
cli
js
ds
and
fiadds
mov
leave
popf
in
dec
push
aas
push
ret
adc
out
out
dec
push
cmp
std
out
data16
add
push
adc
dec
outsl
mov
lahf
out
push
jns
jg
iret
fwait
aas
sub
xchg
sub
cwtl
dec
out
sbb
aas
std
jb
fistpl
mov
aad
ret
jg
rorb
imul
insb
addr16
clc
test
sbb
hlt
jnp
stc
pusha
aaa
cmp
leave
scas
test
add
sbb
add
or
cwtl
loope
fwait
pop
add
add
gs
pop
vmovss
shl
add
lahf
inc
outsb
shll
sbb
push
cmp
pop
dec
inc
xchg
jg
insl
sbb
jns
mov
cmpsl
sbb
les
mov
sub
inc
call
rcrl
decb
jmp
sar
repz
push
sbb
push
mov
add
lret
or
xchg
lahf
xchg
mov
gs
fstpt
inc
clc
lahf
or
mov
cmp
adc
mov
add
sbb
repnz
sub
jge
pop
sub
enter
xor
lcall
cld
cwtd
dec
fildl
imul
pusha
std
fld1
cs
not
adc
push
repnz
xchg
mov
jecxz
sbb
sub
imul
rcll
push
mov
notb
cli
test
ficomps
add
xchg
ficompl
shrb
insb
and
pop
roll
sbb
stc
cmp
cmp
testb
push
pop
je
scas
mov
js
mov
mov
mov
or
leave
aam
nop
or
je
loopne
shll
pop
popa
xor
shl
lret
mov
idivl
xchg
cwtl
push
daa
and
add
imul
std
enter
outsb
icebp
negl
fildll
loopne
out
mov
jge
nop
sub
push
jle
shrl
xor
pop
pop
push
push
mov
xor
cli
cmpsb
out
mov
jp
repz
icebp
mov
arpl
loop
stc
js
jbe
jp
sub
pop
jmp
and
pusha
shlb
or
and
add
cmpsb
push
sbb
add
loope
fcomps
adc
cmpsl
xchg
int3
dec
lock
jo
rol
js
adc
cmp
test
sbb
insb
ror
fcomp
fisubrs
pop
ljmp
test
sub
in
out
push
imul
pop
adc
out
xlat
and
jb
scas
dec
jbe
push
jne
push
jno
push
inc
or
ljmp
rorb
fists
popa
outsb
fldenv
mov
ret
insb
jne
or
clc
out
scas
push
and
in
sub
insb
inc
cwtl
push
nop
jge
std
mov
ret
jns
mov
xchg
pop
cmpl
add
addr16
movsb
jns
xor
mov
xchg
cmp
jecxz
out
mov
fistpl
inc
adcb
pop
loope
es
pop
stos
adc
arpl
in
nop
pop
add
add
call
fsubrp
add
cmpsl
push
jmp
popa
mov
aaa
push
push
lret
adc
repnz
cli
pushf
sub
push
fldcw
lahf
insl
sbb
xchg
hlt
test
or
cmp
jnp
xor
bound
pop
and
cs
xchg
fwait
sbb
iret
ljmp
adc
jmp
push
stos
adc
cmpsb
fldcw
xor
fstpl
mov
js
pop
rcll
call
pop
add
ficomps
mov
xchg
repz
in
mov
or
and
mov
test
into
dec
sbb
movsb
pop
rorb
hlt
sub
mov
push
inc
cmp
pop
xchg
mov
fidivl
pushf
call
addr16
loopne
xor
cld
or
cli
push
mov
sbb
xchg
iret
out
mov
clc
push
mov
sub
fstpt
test
insb
outsb
pop
mov
pop
add
xchg
in
sbb
push
pop
mov
es
dec
loop
stos
mov
fwait
push
test
push
xchg
dec
pcmpeqb
dec
push
into
js
mov
outsl
movsb
dec
fnstenv
mov
syscall
ficoml
and
push
repz
mov
cmp
push
and
test
repz
aam
sti
sub
ja
repnz
add
jmp
sbb
or
rol
mov
xchg
es
sbb
push
sub
pop
lods
cwtl
pop
daa
cltd
pop
ror
sbb
push
inc
jecxz
ja
xor
pop
out
mov
loope
out
fbld
mov
xchg
mov
or
int
pop
mov
idiv
adc
testb
adc
jae
mov
movsb
inc
pop
stos
mov
jecxz
imul
dec
xor
xlat
cs
jp
xor
mov
out
sub
mov
pop
hlt
fiadds
ret
push
testl
fsubs
mov
stos
dec
pushf
jecxz
scas
clc
mov
adc
nop
jle,pn
xor
pop
not
es
xor
pop
mov
or
push
out
repz
and
iret
add
shrl
mov
sahf
mov
mov
pop
fcmovu
call
add
or
adc
aaa
inc
add
xchg
out
inc
cs
icebp
mov
cmpsl
jmp
xchg
cmpsb
or
cmpsl
push
outsl
cmp
cs
out
in
scas
dec
dec
or
ss
fs
call
sub
xlat
cmc
sub
push
add
xor
add
pop
or
sub
add
les
dec
imul
jae
bnd
les
lahf
push
xor
push
add
fcom
daa
aam
hlt
pop
in
push
jmp
jg
leave
out
xor
iret
lcall
pop
cmp
xlat
add
scas
sub
add
les
mov
mov
jecxz
or
mov
mov
xchg
mov
dec
lahf
sahf
sub
std
mov
lods
mov
loop
pop
sbb
lcall
cmp
lret
out
pop
out
fdivrl
xchg
mov
inc
push
out
dec
xchg
inc
nop
jbe
mov
pop
inc
das
mov
xor
dec
call
clc
mov
mov
add
xor
sahf
sbb
aad
in
fsubr
pop
repnz
jno
cmp
xlat
fldl
push
in
lcall
fstpl
flds
lods
and
push
scas
push
out
out
sti
lds
sbb
mov
fcomps
or
or
mov
add
jle
sbb
sub
int3
loopne
pushf
out
outsb
in
push
out
jge
cmp
test
ljmp
fnstenv
inc
setg
ja
inc
rol
sub
mov
push
testl
lahf
jg
movsb
rcrl
xor
mov
inc
cmp
inc
icebp
mov
add
stos
and
pop
jecxz
push
fdiv
out
and
adc
add
or
inc
fstps
and
dec
push
xchg
jl
lea
mov
lcall
cli
repz
xor
dec
jle
test
dec
mov
out
and
leave
idivl
cs
fnstenv
lahf
push
out
jmp
ds
mov
scas
mov
jle
jmp
sbb
ret
icebp
jb
cmp
sub
xor
dec
xlat
data16
movsl
push
sub
lods
aaa
js
test
mov
inc
negl
push
aaa
or
jnp
and
lret
push
cmpsb
dec
and
dec
cli
movsb
leave
arpl
add
lret
int3
lret
add
inc
jns
push
or
fwait
jl
pop
add
daa
fistl
jmp
imul
sti
add
aas
lds
jae
or
shl
pop
lahf
jnp
or
je
sahf
sbb
cmp
pop
cmp
in
mov
cmp
jns
into
mov
fsubp
daa
repnz
in
push
or
loopne
jnp
cmp
cmp
sbb
inc
or
jns
ss
imul
and
push
xchg
out
aas
and
fdivl
pop
cld
mov
loope
cwtl
adc
adc
sti
adc
mov
and
jnp
pop
xor
enter
cmpsl
fisttps
jns
cwtl
add
enter
shl
mov
mov
jecxz
fsubrl
push
insb
gs
adc
mov
daa
sbbb
jae
mov
jb
pop
iret
jnp
mov
mov
ret
ljmp
mov
mov
out
adc
out
es
mov
pop
push
mov
out
lods
ja
mov
or
mov
je
and
cmpb
jmp
loopne
insl
clc
in
outsl
add
xor
subb
ljmp
sbb
pop
out
pop
ret
iret
popf
mov
add
in
ret
pop
fs
inc
push
or
push
dec
out
clc
cmc
sahf
negb
movsb
testl
mov
jns
dec
inc
dec
dec
mov
or
pop
loope
int3
sub
fcomi
fisttps
dec
push
sbb
fisubrl
in
iret
cmp
outsb
jb
in
push
dec
cmpsb
clc
pop
dec
fldl
pop
mov
js
xor
les
push
jmp
push
cmp
insl
inc
loop
pop
sub
add
or
lock
sbb
push
xor
sbbb
inc
push
sti
pop
cmp
push
or
cmp
mov
inc
inc
xchg
gs
cmp
in
paddq
out
mov
mov
mov
lret
pop
and
in
nop
ret
repnz
clc
mov
iret
or
in
out
jnp
mov
das
daa
in
scas
mov
imul
pop
js
enter
sbb
call
sahf
mov
xchg
ficompl
add
sbb
fstpl
xlat
imul
negb
sahf
xor
leave
push
mov
sub
jge
xchg
ljmp
in
fisubrl
xchg
jbe
outsl
or
sub
loope
icebp
gs
mov
mov
in
out
pop
mov
mov
inc
out
mov
outsb
pop
pop
imul
out
push
mov
push
fcmovb
mov
sbb
cmp
adc
mov
movsl
push
ret
pop
mov
inc
nop
popl
dec
jnp
mov
mov
mov
lods
sbb
fs
cmp
outsl
cld
or
mov
into
out
mov
cltd
xchg
popa
jle
in
sbb
jmp
xchg
pop
push
dec
rcl
mov
mov
loopne
testl
and
adcl
cmc
es
mov
jp
mov
aaa
or
repz
pop
xchg
ja
push
sub
scas
and
mov
rcrl
sub
sub
sar
mov
pop
xchg
push
xchg
mov
in
and
jnp
mov
jne
sbb
mov
scas
adc
fdivl
sub
push
rcrl
sub
iret
push
aas
fs
or
fwait
push
pop
cs
shll
rcrl
push
popa
mov
lds
in
push
ret
mov
sbb
and
pop
push
xor
pop
fwait
jg
sbb
pop
dec
push
xor
cmp
mov
in
faddl
push
mov
jle
imul
add
jge
js
pop
mov
push
cmp
notl
cmpsl
popf
in
repz
ja
mov
push
xchg
arpl
fimull
mov
inc
mov
sub
push
cmp
iret
getsec
mov
sbb
xor
ja
dec
cmpsb
and
out
sti
pop
xor
or
iret
lods
iret
or
mov
xlat
xorl
iret
pop
mov
xor
test
arpl
sbb
xchg
lahf
sub
test
xchg
movb
loopne
ja
fbstp
mov
imulb
inc
ja
cmp
xchg
push
fs
pop
add
pushf
jl
fwait
pop
iret
imull
faddl
insl
jae
jbe
mov
fs
mov
jbe
call
es
add
jnp
imul
ss
insl
cmp
sub
inc
fsubrl
mov
mov
sti
dec
fcomi
mov
ret
mov
insl
bound
out
and
scas
xor
xor
fcomp
xlat
push
movsl
xor
mov
pop
pop
scas
push
dec
jbe
das
adc
add
lock
pop
mov
fs
aam
and
lods
fcmovnu
jg
mov
test
in
repz
fldcw
scas
sbb
mov
inc
cmp
push
outsl
dec
sub
insb
xchg
divb
pop
stos
shlb
cmpsl
icebp
mov
ret
lods
or
or
sbb
xor
sbb
lods
hlt
ss
adc
clc
mov
out
testb
out
xchg
fdivrs
roll
iret
loopne
cmp
inc
xor
jo
and
sahf
fbld
lret
addl
cmp
dec
sar
incl
out
pop
adc
push
ljmp
fiadds
sbb
je
sbb
mov
adc
lret
fbstp
sub
sarl
imull
out
icebp
clc
mov
ds
add
fld
sbb
dec
cmp
push
mov
lods
mov
inc
rorl
jae
imulb
cmpsl
mov
cmp
pop
scas
inc
stc
jle
xor
adc
lods
pop
mov
inc
mov
hlt
shll
cmpsl
adc
pop
in
push
pop
in
sub
adc
xlat
jle,pn
sahf
and
fwait
xor
mov
push
imulb
out
jge
mov
lods
gs
push
pop
loop
sub
pop
daa
mov
push
out
mov
sahf
push
sbb
inc
dec
lcall
leave
or
sub
pop
adc
shrb
cmpsl
dec
test
sub
xor
bound
stos
mov
adc
iret
cmp
pop
subl
jmp
lods
mov
pop
cmp
icebp
clc
mov
cli
test
add
ljmp
fwait
mov
into
mov
filds
dec
mov
mov
pop
xchg
sbb
jb
fisubl
fs
pop
dec
aad
retw
dec
aam
stc
push
mov
adc
xor
mov
pushf
pop
dec
lahf
lret
cmpsb
cmpsl
or
scas
and
dec
dec
push
lods
jns
dec
sub
adcb
mov
pop
std
push
xor
push
sbb
mov
and
ret
int3
sbb
pop
cmpb
or
in
testl
xor
push
pop
scas
mov
push
cmpsl
mov
loopne
sti
mov
cli
iret
push
xlat
aaa
sub
push
lret
lds
into
and
and
mov
or
je
push
insb
stos
push
dec
mov
mov
and
adc
popf
sbb
fisttpll
nop
jno
stos
push
inc
add
aas
mov
and
fsubrl
sub
xlat
fisubl
mov
mov
pop
cmp
lock
sbb
loop
outsb
pop
add
aaa
mov
lods
sbb
mov
dec
jmp
idivb
fstpl
mov
mov
inc
in
adc
dec
mov
iret
cmp
nop
js
cmp
and
and
sti
lret
pop
pop
rclb
xchg
mov
in
adc
adc
fistps
sbb
mov
outsb
lahf
dec
fcmovnu
cs
xor
fcomp
arpl
xchg
cmp
iret
imul
xor
jno
ds
mov
pop
das
jmp
das
dec
in
sbb
jle
negb
lods
lods
mov
out
in
or
outsb
out
inc
js
mov
mov
xchg
outsl
add
sti
sub
mull
fucomi
sub
out
fmulp
lds
mov
xchg
mov
outsl
rcrb
fisttps
mov
std
adc
inc
pop
jns
sbb
fistpl
jp
mov
cmp
dec
push
jecxz
dec
in
pushf
push
push
add
add
mov
mov
pop
or
pushf
push
loopne
aaa
ja
jg
sbbb
mov
adc
js
sub
test
jecxz
push
mov
fldt
pop
adc
push
clc
daa
push
fbld
jo
xchg
sahf
mov
jecxz
push
push
pop
inc
xchg
mov
enter
out
cli
add
push
fsubrs
fdivrl
sbb
je
pop
nop
lods
cld
adcb
mov
movsb
pop
aad
out
stos
push
adc
dec
push
fwait
ror
out
add
loop
cmp
iret
cmp
or
popa
fadds
ss
lret
inc
outsb
push
lock
fcoml
push
out
pop
adc
leave
das
jg
std
sbb
js
or
iret
iret
repz
xchg
lods
popf
mov
jge
mov
loop
cs
mov
stc
scas
and
loopne
or
fdiv
addr16
insb
mov
sbb
stc
mov
push
dec
push
push
ja
lods
shll
push
pushf
fs
jnp
dec
mov
push
jns
das
test
dec
mov
es
js
mov
mov
iret
sbb
or
xchg
fmulp
je
cmpsl
and
clc
pop
jo
cmp
rorl
xor
sub
pop
add
xor
push
push
mov
leave
pop
mov
adc
repz
stos
cmp
fcmovne
push
int3
add
hlt
into
shrl
stos
fists
mov
scas
mov
cwtl
aas
jp
add
and
push
daa
lret
sbb
sbbl
ss
out
jno
mov
popf
mov
xchg
outsb
cmp
enter
push
hlt
test
fbld
pop
mov
xchg
lods
pop
rcr
mov
and
int3
push
mov
ffreep
pop
xchg
addr16
pop
test
gs
sub
ss
xchg
loope
mov
xchg
adcb
mov
xlat
je
mov
mov
cmp
fistl
leave
popl
mov
cmpsb
ds
inc
leave
mov
repnz
jg
addr16
inc
cmp
xchg
adc
addr16
scas
je
jl
mov
mov
out
add
mov
loope
hlt
dec
fildll
push
fsubrl
movsl
add
sbb
xor
jbe
inc
scas
in
outsl
in
in
in
call
ja
cltd
jnp
dec
imul
call
add
xor
testb
andl
mov
cmp
push
dec
xchg
jnp
outsb
xchg
pop
pop
popa
mov
clc
cmp
decb
movsb
leave
xor
sub
xor
adc
pop
mov
mov
repnz
out
fwait
jp
or
lcall
je
dec
pop
push
scas
popa
push
push
jae
mov
add
popa
push
xor
lahf
in
outsl
pop
das
cmp
imul
scas
add
mov
sti
fadd
scas
push
out
pop
push
xchg
out
lret
mov
jne
test
cmp
inc
push
push
mov
sbb
sti
leave
sub
leave
scas
fcmove
inc
sbb
out
mov
mov
rolb
inc
movb
gs
out
ret
icebp
fstp
add
push
sbb
push
rolb
outsb
add
dec
aaa
cli
cmp
or
adc
fiadds
sbb
cs
lret
into
and
add
int3
cld
ds
mov
cmp
cmp
push
adc
jp
mov
in
jb
adc
adc
jb
or
aaa
fildll
rolb
pop
ret
push
scas
ljmp
aad
xchg
mov
ror
xchg
loopne
aaa
inc
jno
in
mov
das
sub
ja
sbb
movsl
inc
xchg
jp
ret
mov
out
push
mov
mov
imul
sti
hlt
iret
xchg
or
mov
push
fisubs
pop
es
pop
cwtl
mov
pop
scas
xchg
out
fiaddl
sbb
add
les
out
pop
inc
or
lds
ret
aad
mov
push
sbb
call
push
pop
mov
pop
mov
or
in
mov
repz
cmp
insb
push
mov
movsl
mov
mov
xor
and
in
or
cs
jae
xchg
ds
popf
pop
scas
movsl
sub
cmp
in
neg
push
leave
fs
shlb
xor
pop
out
and
shlb
add
jae
xchg
push
pop
scas
push
test
push
in
int3
out
push
iret
push
mov
jmp
loop
mov
push
icebp
lcall
in
xor
mov
ds
mov
mov
les
xchg
cli
fistpll
sti
or
mov
xor
jb
adc
sbb
push
pop
fdivr
pop
arpl
into
outsl
repz
adc
leave
adc
div
dec
mov
xchg
push
test
pop
push
sub
gs
scas
mov
push
xor
jmp
div
fdivs
lds
sbb
dec
push
adc
mov
lret
pop
rcrl
xor
xor
adc
test
push
jle
cmp
dec
outsl
sbb
adc
or
push
lret
fbld
xchg
dec
adc
test
mov
ret
fxch
cmp
add
repnz
data16
xor
or
xchg
arpl
push
or
mov
pop
add
xchg
out
movsl
addr16
cs
mov
mov
sub
or
cmp
xor
sbb
inc
sbb
test
or
ja
icebp
bound
sub
sbb
aad
in
popa
lds
jnp
stc
mov
hlt
sbb
sti
mov
push
inc
mov
jbe
mov
adcl
mov
mov
and
arpl
shll
push
or
and
xchg
shlb
mov
ja
sbb
cmpsb
or
in
mov
add
dec
sbb
jmp
rolb
negl
mov
ret
pop
test
cmp
fiadds
movsl
xchg
cmpsb
adc
or
test
push
sbb
lret
pop
jle
pop
inc
lods
jo
lcall
out
das
and
data16
popf
inc
mov
sbb
cmpsb
dec
imulb
je
imul
andl
cmc
sti
icebp
push
sub
push
push
je
cmpps
cmp
xchg
cmp
imul
add
cmp
pop
push
sub
ret
loopne
push
jnp
sbb
mov
aam
pop
jnp
int
cmpsl
jmp
mov
xor
jnp
int
mov
aaa
mov
lea
ffreep
scas
outsb
jnp,pt
lea
fidivrs
mov
push
ja
idivb
push
mov
jg
fsts
xchg
xchg
jne
fisubrl
sahf
pusha
repz
push
pop
mov
push
ret
dec
lods
push
test
mov
dec
cltd
cmp
gs
push
add
out
movsb
fcomip
insb
jg
in
push
mov
sbb
cli
fnstcw
fnstsw
loop
std
outsb
aas
iret
and
movsb
xor
pop
mov
arpl
cmpsb
lods
jnp
mov
push
fidivrs
sub
in
ret
fstps
add
push
sub
sub
mov
push
lret
scas
mov
scas
dec
clc
stc
pop
dec
push
stos
hlt
add
sbb
push
cmp
pop
add
lret
mov
insl
ret
and
sbb
sub
pop
in
insb
sti
adc
stos
ret
ljmp
pop
mov
and
sub
int3
sbbl
jmp
xchg
enter
jbe
mov
lock
pop
xchg
addl
or
test
mov
add
adc
out
into
mov
pusha
adc
jbe
stos
jmp
loopne
xchg
and
dec
scas
xchg
sysret
mov
add
mov
xchg
mov
test
mov
ljmp
cmp
lret
das
scas
out
jns
nop
stc
xchg
cs
sbb
inc
icebp
ss
adc
cmpsl
sahf
or
inc
mov
cmp
or
fdivl
fcom
cmpsl
mov
mov
jnp
insl
pop
mov
outsb
divb
scas
loop
xlat
xor
jg
repz
adcb
rorb
push
or
mov
in
mov
out
jp
aas
sbb
std
outsl
pop
js
dec
inc
jge
adc
fldt
sbb
sbb
and
sub
xchg
add
jns,pt
fcomp
stos
mov
lock
jbe
xor
cmpsl
lods
add
mov
shl
testl
or
mov
push
xchg
cmpsl
push
scas
jp
imul
xchg
or
mov
mov
in
and
leave
outsl
out
xorl
aad
cmpsb
or
ja
jnp
lahf
mov
dec
repz
in
aam
lahf
pop
arpl
mov
int
cmp
push
adc
mov
xchg
xchg
jp
and
mov
movsl
addb
test
adc
add
or
int
pusha
add
fistpll
cmpsb
sub
mov
push
or
imul
bound
pop
dec
sbb
fwait
and
cmp
stos
ret
sub
adc
fisttpl
divb
cmpl
jo
cmp
jns
jae,pn
loopne
push
cs
mov
cwtl
inc
mov
into
int3
push
pop
leave
sahf
addl
pushf
ficomps
sbb
jg
dec
fdivrl
add
ljmp
fcoms
scas
outsl
sbb
std
cmpsb
push
mov
arpl
pusha
jmp
in
in
insl
mov
mov
shl
nop
popl
mov
fidivrs
mov
rorb
adc
mov
leave
loop
mov
sub
icebp
xchg
or
cltd
cmp
cmpb
test
adc
cltd
test
mov
cli
sbb
xlat
xchg
xchg
mov
rorl
int
repnz
in
ret
cmp
clc
ret
and
dec
inc
mov
xchg
mov
xchg
fdivrp
fistl
xor
decl
ret
leave
xchg
in
push
add
inc
cld
xchg
push
out
fnsave
ja
sbb
xchg
hlt
in
lods
jnp
lahf
mov
movsl
in
xchg
loopne
test
push
xor
fildl
shr
fsubrs
sahf
inc
and
pop
inc
sbb
aaa
mov
and
fldcw
push
clc
insb
or
je
cmpsl
mov
fistl
mov
sub
xchg
adc
mov
stos
push
push
mov
sbb
and
xchg
mov
adc
xchg
pop
mov
and
mov
lds
or
mov
push
push
adc
out
mov
xor
add
pop
out
mov
xchg
jecxz
rol
cmp
icebp
lods
push
dec
and
loopne
insl
gs
xor
popa
and
lahf
pop
daa
xchg
mov
scas
daa
dec
lahf
dec
sbb
popa
xchg
pusha
jp
mov
icebp
push
hlt
push
pop
push
mov
pop
xor
fdivr
cmp
sbb
jo
pop
add
pop
test
xor
lret
fs
faddl
adc
sbb
xchg
adc
mov
jp
lret
pop
cmp
out
clc
hlt
pop
xchg
xchg
sahf
add
cli
push
mov
mov
lret
loopne
sub
ljmp
iret
and
jg
and
das
imul
mov
gs
xchg
dec
add
sub
pop
cmpsl
sbb
clc
rclb
subb
dec
pop
and
xchg
loopne
push
jl
repz
clc
push
jl
xlat
std
mov
push
mov
mov
repnz
adc
fidivs
jnp,pn
sub
stc
jg
mov
aas
or
sub
pop
repz
push
push
lds
mov
mov
push
jecxz
mov
lock
iret
push
jmp
sub
lret
xchg
xchg
jg
addb
mul
mov
repz
xchg
add
sub
mov
pop
or
and
dec
mov
push
cmpsb
mov
mov
lret
jp
sbb
call
push
push
or
in
xchg
das
jmp
outsb
out
dec
int
pop
leave
add
in
stos
std
pop
pop
das
lahf
js
mov
out
out
loope
iret
push
mov
pop
js
fcomps
and
scas
mov
rcrb
xchg
and
lahf
and
push
sbb
xchg
xchg
pop
lds
lret
pop
xchg
cli
jae
jmp
inc
mov
iret
cmpb
cmp
popf
decl
pop
mov
mov
ror
sub
mov
sub
xor
arpl
int
lock
xor
dec
lahf
jl
fisubrl
xchg
aam
cmpsl
inc
aaa
cmpsl
mov
xchg
arpl
lock
test
push
adc
jno
insb
frstor
loop
ja
push
insl
fdivs
sub
jmp
shl
inc
cmp
stos
xchg
sarl
xchg
mov
call
nop
scas
sbb
lods
fisttpll
cltd
adc
int
xchg
mov
pop
lods
pop
xchg
stc
loopne
loope
lcall
aaa
imul
mov
jne
cs
js
into
fmul
lcall
cmp
stc
xchg
testl
sahf
adc
shlb
pushf
sbb
sbb
imul
mov
rcrb
fmul
and
sub
cmpsl
aam
pop
test
inc
dec
lahf
mov
pop
stc
js
mov
xor
es
push
inc
scas
jmp
cmp
mov
fistpll
fs
xor
mulb
imull
sub
cmp
adcl
into
xchg
add
popf
out
mulb
dec
add
push
into
daa
and
sbb
add
dec
stc
jl
sub
aaa
mov
adc
mov
xor
fisttps
aaa
mov
movsl
or
pop
mov
mov
ret
cmp
ja,pn
sbb
mov
sti
lret
ja
mov
out
lcall
ret
in
xchg
lds
fistpl
add
pop
xchg
int
aaa
fcmovbe
sbb
fstpl
imull
push
fdivrl
xchg
lods
rolb
pusha
jmpw
ret
popf
and
jl
pop
xchg
mov
add
adc
mov
xchg
out
push
cmp
or
cmpsb
clc
outsb
adc
mov
sub
movsb
stos
inc
mov
out
cmp
pop
cmp
xor
fs
or
popf
dec
or
or
into
outsl
addr16
pop
push
jbe
lcall
shrb
rorl
lds
mov
sar
in
in
mov
loop
into
xchg
or
pop
repz
ret
add
mov
movzwl
xchg
mov
pop
fistpl
pop
cmp
mov
out
jo
pop
adc
mov
push
mov
test
lret
ss
rolb
ret
outsl
adc
mov
sbb
mov
lret
aaa
gs
push
inc
shr
std
dec
scas
and
std
sub
pop
stc
adc
out
insl
xor
adc
iret
aaa
in
aad
pushl
sbb
pop
iret
sbb
mov
push
arpl
loope
inc
add
sahf
scas
ret
push
mov
sbb
mov
scas
or
jns
mov
scas
sbb
test
mov
shrl
lods
mov
jb
add
and
jge
sbb
cmpsl
sub
add
aas
movsl
mov
cld
repz
mov
leave
lret
fmull
lock
fnsave
xchg
dec
pop
int
xchg
mov
jo,pn
push
mov
adc
xor
ret
inc
es
inc
es
cltd
mov
push
push
stos
pop
adc
jle
pop
insb
push
sahf
mov
cmc
pop
repz
stc
jp
pop
lods
into
mov
loop
fbstp
and
into
add
enter
rep
push
mull
add
frstor
pop
mov
jne
dec
addl
pop
push
test
jne
fadd
icebp
dec
adc
mov
ret
fsubs
insb
decb
xchg
loop
clc
pop
push
jg
jb
cmpsl
cmp
pop
xchg
cmp
and
add
fimuls
lret
test
adc
sub
pushf
mov
mov
pop
adc
out
jae
mov
outsb
into
and
movsl
xlat
pop
pop
fsubrl
jae
mov
out
rolb
sbb
jno
xor
jecxz
mov
jmp
repz
xchg
cmc
or
arpl
or
sbb
push
movsb
sahf
daa
sbb
leave
push
orps
sub
dec
clc
pop
test
lret
mov
fsubrl
sbb
cwtl
cmp
inc
shlb
addr16
loope
fidivl
xchg
es
push
jnp
push
adc
jo
scas
or
sbbb
add
push
lret
fiadds
push
scas
subb
ret
cmp
cmc
loope
in
jp
fidivs
mov
mov
daa
mov
inc
fs
xor
js
out
imul
jns
cmp
push
sahf
iret
dec
xchg
push
jmp
sahf
push
mov
imul
xor
push
jb
fisubrs
xlat
mov
dec
sub
adc
mov
lods
push
loope
je
lret
mov
dec
in
gs
outsw
lds
stos
jecxz
inc
mov
rcrb
or
cmpsb
fidivrs
sarb
mov
mov
adc
cs
call
out
addr16
hlt
int
mull
js
repz
movsb
mov
outsl
mov
push
gs
imull
dec
pop
mov
add
xchg
ret
int3
mov
es
stos
insb
in
jbe
add
mov
negb
mov
dec
cs
jle
xor
cmp
lds
mulb
data16
mov
aad
dec
test
push
fdiv
outsl
ficomps
ffreep
stos
jecxz
es
out
arpl
call
imulb
ss
pop
pop
in
push
inc
out
aaa
mov
ds
aaa
inc
xchg
mov
cmp
fstp
dec
push
lods
aaa
xor
pop
cmpl
mov
addl
sbb
push
shrb
adc
push
test
and
mov
shlb
imul
jg
pop
imul
and
std
cmc
aas
push
xlat
xchg
jecxz
fisubl
lea
ret
loopne
inc
popa
mov
int
out
dec
push
out
fsubrl
stc
dec
add
lds
js
mov
mov
lods
xor
in
cltd
cmc
jne
mov
fs
xchg
out
mov
pushf
ja
arpl
ret
ror
rcl
imul
imul
ss
mov
inc
ret
pop
lcall
jl
call
outsl
jo
dec
add
imull
adc
sub
pop
jnp
icebp
add
pop
and
cltd
outsl
mov
mov
fwait
jl
icebp
mov
arpl
outsl
xchg
ljmp
xor
lea
cs
data16
push
imull
or
add
pop
mov
mov
es
push
stos
xlat
cmp
mov
sub
push
pop
push
mov
adc
jbe
out
pop
or
xorb
sub
js
aam
pop
insb
cmc
in
icebp
push
mov
ret
imul
sub
cltd
hlt
push
xor
int3
inc
ljmp
jno
cmpsb
adc
lret
dec
jp
or
cmpsl
sbb
hlt
pop
ja
add
and
dec
cmp
cli
aad
lret
scas
fcmovnb
arpl
sarl
dec
inc
aas
fstpl
mov
push
xchg
testl
sbb
in
repnz
fsubr
mov
mulb
sbb
sub
cmp
insl
ja
or
neg
test
mov
mov
cmp
sbb
jp
push
mov
loopne
insb
xchg
mulb
mov
arpl
sbb
mov
leave
mov
add
sub
adcl
sahf
jns
arpl
cld
pop
and
call
add
mov
in
push
sbb
arpl
mov
mov
xor
imul
and
push
cmp
mov
adc
std
mov
popa
outsb
les
inc
sbb
jecxz
hlt
push
rcl
sbb
push
mov
icebp
jle
jne
and
mov
bnd
or
orb
jg
adc
cmp
lret
push
adc
cmp
and
mov
sub
push
mov
sub
mov
imul
mov
xchg
xchg
cmc
push
inc
dec
gs
jbe
mov
pushf
inc
iret
push
ljmp
inc
jmp
sti
jnp
or
xorl
inc
repz
mov
adc
movsl
sti
mov
cs
jecxz
out
fucomi
sbbl
rolb
adc
or
inc
negl
jmpw
inc
sti
sti
adc
fwait
mov
aas
mov
outsl
xchg
nop
jns
les
mov
dec
sbb
fisttpl
fldenv
mov
in
cmp
or
cld
movsl
repnz
movsb
mov
sub
xor
xorl
shl
ucomiss
leave
xor
mov
stos
cwtl
ret
bound
fists
stc
add
mov
cmpl
or
ror
rclb
fdivrs
test
fldt
repnz
pop
pop
ret
push
das
aam
sub
cmpsw
and
dec
inc
stc
out
das
mov
mov
mov
out
fsubl
fimuls
fldenv
arpl
icebp
adc
adc
cld
scas
sub
sub
cmpsb
and
inc
pop
pop
subb
sbb
ret
dec
add
je
mov
dec
push
into
icebp
cmpsl
das
das
ds
and
aad
fsin
shll
out
sbb
sbb
fcomip
cmpsb
ja
push
pop
xor
scas
scas
inc
jo
pop
or
push
aam
stc
pop
sbb
mov
inc
sub
fdivl
stos
mov
and
test
pusha
push
mov
or
xchg
add
sub
xchg
les
sub
aas
sbb
xchg
aaa
mov
repz
shll
out
pop
or
push
jno
cs
pop
call
jnp
lahf
pop
icebp
data16
dec
pop
xchg
mov
in
jmp
jle
fbld
push
mov
pop
mov
mov
sbb
jne
or
push
push
imul
fistps
add
mov
mov
sbb
rolb
int3
or
shrl
stos
rorb
out
ret
imul
cs
xchg
addl
cs
dec
inc
dec
cs
sarb
cmp
mov
jne
and
rcrb
std
mov
push
aas
push
stc
mov
mov
lods
cmpsb
je
dec
dec
xchg
enter
dec
or
insl
fcomip
les
lock
mov
icebp
sbb
lock
push
add
xor
inc
lret
jbe
add
jl
imul
incb
lock
push
xchg
or
lods
loop
fcmovnu
cltd
xchg
cmpsb
push
mov
mov
cli
sub
fnstenv
mov
xlat
mov
rclb
test
sbb
add
std
cld
pop
xchg
jecxz
dec
mov
sub
adc
dec
out
lret
mov
sbb
cmp
sbb
add
hlt
lret
fwait
add
dec
in
mov
negb
jg
mulb
jg
out
das
sub
cmpl
cli
les
das
and
pop
mov
jmp
push
ret
mov
pusha
dec
inc
push
push
or
shrl
paddw
fisubrs
dec
popf
or
dec
cmc
xchg
sub
pop
or
mov
pop
in
push
repz
and
ficoml
sbb
dec
mov
loop
add
pop
test
stos
push
jp
mov
into
push
fs
fcomps
jge
adc
aam
lret
pop
and
push
addr16
imull
mov
popf
push
jmp
or
add
xchg
cmp
pop
cmpsl
pop
or
inc
mov
add
jne
rorl
xor
std
add
sub
jns
pushf
or
mov
rcl
in
scas
daa
inc
repz
into
xchg
cmp
cs
adc
insl
into
cmpsl
mov
and
dec
cmc
mov
scas
sti
shll
ret
lret
xchg
addr16
mov
cmpsl
sub
pavgw
outsl
icebp
in
arpl
fwait
or
sti
sbb
push
xchg
leave
push
xchg
jg
stc
mov
hlt
dec
sub
adc
pop
mov
pop
and
pop
pop
icebp
cmpsl
pop
data16
loope
mov
adc
sub
xchg
je
jge
jnp
adc
dec
push
pop
mov
movsb
adc
popf
test
rcl
fsubrs
into
repz
pop
jns
or
jnp
sahf
sahf
xchg
cs
jae
mov
in
fs
adcl
insb
jne
mov
sbb
cld
mov
ja
or
inc
mov
lods
mov
mov
adc
clc
aaa
or
xor
not
in
add
arpl
ds
pop
std
arpl
cmpsb
jbe
sub
dec
imul
push
jmp
add
aas
mov
pop
sub
sub
les
dec
test
cmovno
adc
push
out
pop
jne
inc
dec
adc
sahf
pushf
mov
popf
push
mov
dec
inc
aas
iret
xor
fimull
adc
cmp
jg,pn
lea
mov
pushf
cmpsb
mov
push
cwtl
je
mov
sbb
pushl
or
and
lods
out
into
ret
test
out
stc
test
fisttpll
pop
loopne
adc
mov
out
cmpsb
movsl
in
mov
stos
jg
or
sub
adc
lods
push
adc
in
jns
sti
mov
mov
cmpsb
adc
sbb
jp
sub
mov
movsb
cmpl
aaa
mov
cmp
mov
out
cmp
sub
ljmp
pop
and
icebp
jle
push
scas
je
pop
and
int3
add
jp
push
dec
jno
iret
dec
arpl
sbb
out
sub
sti
sbb
mov
sahf
scas
mov
mov
imul
faddl
insl
mov
jmp
stos
popa
mov
cmpsb
jg
es
int3
mov
adc
mov
fadds
data16
aam
mov
jp
xchg
stos
repnz
xor
sbb
or
mull
push
sub
hlt
lods
add
in
fwait
sti
mov
pop
xor
out
test
fmull
mov
mov
sahf
adc
outsl
jl
pop
cli
and
mov
xorb
jnp
iret
mov
xchg
ja
ds
jmp
jg
or
push
mov
out
jle
lods
jge
xor
inc
outsb
fbstp
hlt
inc
test
sub
or
fcmovnb
push
je
push
iret
dec
in
and
push
fcmovnb
pushf
and
or
sahf
ds
lcall
sub
and
das
shll
scas
push
mov
insb
out
ljmp
leave
cli
pop
sbb
and
das
mov
dec
mov
clc
aaa
dec
xor
in
int
mov
mov
mov
scas
mov
and
jl
fwait
xor
or
test
mov
testb
xor
dec
popf
into
lret
add
inc
cmpsl
test
mov
lods
aam
sbb
ss
shl
sti
fists
add
outsb
loope
mov
iret
sahf
in
and
in
out
shl
stc
fcomps
add
aam
xchg
outsl
push
int
pop
std
sub
sbb
mov
sbb
mov
inc
movsl
out
pop
and
lahf
gs
cmp
fisttps
push
fisttpl
mov
sbb
mov
cmp
pop
js
cmc
scas
pop
cmpsb
aas
movsb
cmp
pushf
jbe
stos
fstl
lahf
pop
sbb
mov
dec
sub
cmp
or
arpl
xor
mov
xor
ja
out
je
xor
xchg
xchg
sub
cmpsb
mov
addr16
pop
push
xor
jnp
mov
mov
iret
std
cs
pop
in
stos
pushf
lret
shlb
aaa
mov
xor
lock
mov
fcmovne
xor
sbb
jmp
popf
sbb
or
push
inc
xchg
scas
cli
cltd
scas
aam
xor
fwait
push
mov
pop
cmpsl
or
dec
lret
loop
fisttpl
loopne
mov
jg
jbe
xor
lret
inc
fwait
mov
nop
neg
mov
scas
push
mov
add
xchg
sarl
sbb
and
add
in
xchg
mov
mov
sbb
mov
ds
inc
mov
in
pop
lods
iret
fcmovnu
fldcw
xor
out
mov
in
inc
fwait
daa
test
int
loopne
push
push
data16
pop
jmp
movsb
test
sub
pop
sub
mov
dec
and
cmc
rcrl
cli
jmp
mov
rcll
subl
and
ljmp
add
mov
mov
addr16
mov
fidivl
push
fistps
xchg
and
cmpsb
xchg
xlat
push
scas
lcall
je
pushf
aad
dec
mov
xchg
jno
push
mov
out
cmp
pop
movsb
movsl
incb
fmuls
dec
jns
rcrb
pusha
dec
push
jl
sbb
jns
enter
test
or
sub
pop
add
pop
jmp
jb
mov
pop
xchg
fdivs
iret
mov
pop
pop
mov
jg
lahf
pop
mov
jbe
fisttpll
fmuls
sbb
jbe
scas
cmp
lahf
negb
movsb
adc
push
jo
jb
ds
out
xchg
cmp
fidivs
fsubrl
xchg
outsl
sarb
les
roll
mov
pop
mov
lods
into
mov
sbb
push
clc
ss
mov
out
mov
pop
cmp
cmp
fisttpl
sti
fmull
repz
mov
mov
int
std
pop
dec
loopne
mov
jge
mov
jecxz
call
mov
mov
mov
inc
jmp
mov
aaa
xchg
mov
dec
pop
jmp
mov
sbbl
fbstp
sub
mov
inc
jb
xchg
int3
aad
enter
mov
ljmp
jp
mov
mov
mov
sub
mov
mov
jecxz
scas
add
mov
loopne
movsl
sub
sarl
scas
inc
dec
scas
shl
adc
or
mov
add
jge
cmp
test
imul
xchg
fcompl
out
lods
jae
dec
aad
out
xlat
out
shrb
push
das
add
push
sbb
push
jg
in
pop
hlt
movsb
mov
push
ljmp
push
aam
add
cmpb
mov
sbb
fcoml
xor
sbb
hlt
out
xchg
adc
insl
sub
push
repnz
mov
pop
inc
stc
fcmovu
nop
mov
outsb
or
pop
dec
jae
shll
mov
shll
push
out
popa
mov
aam
cmpsl
test
add
pop
gs
out
dec
push
cli
lods
fldenv
or
inc
out
or
fsubp
stos
fbstp
sbb
imul
cld
lahf
pop
push
mov
scas
iret
pop
lds
jb
cmc
jecxz
int
pop
mov
jne
push
or
ja
mov
adc
into
xchg
jae
sbb
xchg
dec
cli
int
imul
lods
std
push
pxor
lods
inc
ficoms
test
in
jg
adc
loopne
pop
adc
scas
push
test
ss
cmpsb
or
xchg
pop
and
ffreep
fsubp
repz
int
test
cmp
jge
lret
pop
add
sbb
adc
and
outsl
or
out
cmpsl
shl
das
mov
jl
or
pop
push
les
ja
jge
insl
mov
movsl
jl
cmp
popf
mov
jo
xlat
mov
es
fcoml
mov
mov
and
jg
mov
inc
inc
outsl
inc
outsl
lods
stc
mov
inc
sti
push
arpl
ret
ret
outsb
and
cmpsb
loop
mov
push
xlat
or
loopne
jnp
push
fucomi
fstp
pop
fstpt
mov
scas
dec
dec
in
pop
xchg
lds
add
add
xlat
pop
push
dec
mov
or
out
pop
lods
jle
pop
cmp
xchg
or
push
cmp
push
add
mov
arpl
aam
adc
inc
jnp
xlat
xorb
inc
icebp
stos
les
fidivrs
enter
inc
lcall
adc
addr16
cmp
mov
add
jnp
push
mov
int3
xor
add
xor
push
and
jecxz
cmp
cmpsl
mov
xor
imul
dec
and
jge
imul
outsb
neg
scas
mov
in
outsl
popf
jo
out
fidivrs
mov
lods
dec
stos
pop
test
fisubrl
ds
adc
mov
mov
outsl
insb
xor
inc
adc
lret
mov
into
ja
pop
fxch
lret
mov
in
mov
outsl
or
ja
loop
xor
pop
inc
imul
ljmp
cmc
in
mov
pop
lods
pop
add
fidivl
lods
mov
addb
sahf
push
scas
xor
mov
mov
sbbl
dec
adc
adcb
pop
pop
sahf
jo
pop
cli
arpl
xlat
lods
add
stos
mov
push
cmpl
or
pop
jb
pop
das
mov
xchg
xchg
mov
test
or
std
sbb
cs
push
sarb
sub
clc
nop
in
xchg
enter
ds
call
xor
sbb
out
dec
pop
jo
cmpsl
adc
test
out
mov
cwtl
in
mov
aad
mov
mov
sbb
das
cmp
shl
int
shlb
sbb
inc
shrb
cli
das
push
fmul
pop
xor
mov
push
push
jno
xchg
popf
dec
cmp
es
in
xor
mov
sbb
and
add
shll
rcll
push
cmp
fcmovne
xchg
jl
and
dec
push
out
nop
enter
flds
rorl
push
insl
and
popf
dec
data16
sar
stc
dec
cmp
xchg
daa
xchg
jb
lahf
pop
inc
sub
sub
mov
lret
fcomp
sub
xchg
bound
mov
sahf
outsb
arpl
lods
fcmovnu
jmp
mov
out
popa
adc
repz
jnp
mov
dec
inc
sub
dec
jne
outsb
mov
mov
stos
in
xchg
stos
mov
jecxz
rcrl
inc
cmp
es
mov
jle
xchg
dec
aaa
out
fcmovne
push
notl
fsts
sbb
arpl
arpl
add
sbb
push
ss
scas
push
adc
cmc
cli
xchg
pusha
movsb
pop
adc
int3
cs
dec
dec
ret
dec
xchg
push
add
add
adc
das
or
add
sub
xchg
xchg
imul
mov
pop
call
pop
int3
pop
les
xchg
lods
imull
aaa
mov
mov
mov
push
and
pop
fcmovbe
sarl
sbb
aam
mov
inc
push
push
outsl
sar
std
insb
or
test
out
sarb
imul
imul
add
ret
sarl
mov
adc
mov
push
mov
lcall
mov
aaa
ja
sub
insb
pop
dec
jne
sbb
testb
sbb
sbb
scas
xor
pop
push
ds
add
pop
in
mov
mov
loop,pn
dec
push
jmp
data16
pusha
cmp
jg
push
stos
cmp
add
call
xchg
lods
or
das
sahf
dec
hlt
and
lcall
inc
or
jbe
scas
sbb
pushf
cmpsl
adc
in
mov
mov
stc
add
xchg
iret
fdivrl
xchg
mov
sub
ja
mov
rcrl
test
inc
cld
out
and
div
icebp
sbb
ret
cmc
xor
lock
cmp
sbb
aas
xlat
sub
sub
pop
fldl
xor
cmp
mov
out
mov
sbb
and
cwtl
and
jge
xchg
les
push
outsb
or
stos
ret
es
jecxz
push
adcl
insb
inc
outsb
cmpsl
shrb
cli
sbb
xor
or
jl
test
xor
les
mov
mov
je
pop
fwait
xchg
cmp
lahf
pop
mov
subb
bound
out
cmpsb
xor
cs
pop
fincstp
sub
and
jbe
adc
jne
ja
std
fldcw
lea
imul
pop
jne
jb
inc
jbe
mov
xlat
sbb
or
push
dec
jbe
mov
sub
mov
sbb
ja
jae
negl
pop
jne
call
mov
pop
mov
test
inc
and
mov
sti
insb
out
cmp
jb
dec
mov
cmpsb
je
imul
sbb
fcomps
fisttps
in
insl
xchg
pop
sub
cmpb
mov
insl
mov
adc
or
cmp
add
adc
out
ja
js
imul
out
std
lcall
test
pop
and
mov
mov
mov
adc
adc
mov
adc
inc
aam
push
jbe
dec
adc
ljmp
cmpsl
cmp
xor
jb
adc
rcrl
es
fsubs
outsl
cltd
adc
sub
dec
je
inc
jbe
insl
add
cmc
push
xor
add
fdivr
insb
ja
cwtl
mov
mov
jmp
stos
push
sbb
lds
addr16
fcomps
stos
inc
mov
or
scas
cmp
xor
cwtl
pop
pop
shl
push
inc
or
dec
data16
icebp
movb
push
mov
ljmp
xor
mov
jns
dec
sub
sub
add
mov
scas
imul
stos
int3
sarb
xlat
rcl
lret
in
dec
addr16
es
mov
add
mov
sbb
sbbl
push
cmpl
mov
scas
shrl
cmp
in
scas
xchg
ret
rclb
inc
outsl
dec
add
jae
fisttpl
lods
sub
pop
cli
mov
imul
sub
out
mov
pop
loopne
push
xor
ja
add
jle
arpl
aam
outsl
fistpll
pop
xchg
aas
divb
mov
push
imul
mov
pop
push
mov
push
es
fisubrl
dec
sub
inc
das
imul
pop
adc
mov
das
xchg
cld
lds
and
add
inc
shll
push
ss
lahf
insb
or
mov
fldenv
mov
imull
mov
cltd
jmp
mov
loop
jmp
fwait
push
cmp
push
out
dec
jnp
jp
jecxz,pn
jecxz
ret
add
pop
cmc
sub
pop
sub
hlt
sahf
and
mov
das
fisubs
iret
cltd
in
je
add
sub
movsb
ja
pop
ja
cmpsb
fnsave
jge
sub
out
loop
inc
outsb
push
int
adc
fisubs
dec
movsb
sahf
pop
cwtl
fimuls
xor
sbb
mov
mov
lret
jecxz
cmp
popa
sahf
leave
punpcklbw
sbb
jl
pop
clc
push
add
hlt
or
and
sbb
sbb
repz
cmp
lock
ret
mov
jg
or
mov
sbb
xchg
push
and
sub
and
push
add
sub
fistpl
or
push
stos
insb
add
out
cmpsb
mov
mov
fistl
add
nop
sbb
lods
jae
mov
imul
lea
pop
leave
fldt
mov
lcall
cmc
sbb
sub
mov
push
mov
fldcw
test
or
pop
js
xchg
jle
rcl
jns
mov
fs
out
mov
or
mov
cld
iret
xchg
sbb
mov
jne
fstpl
mov
add
pushf
adc
jl
mov
negb
out
iret
xchg
sub
lcall
cmp
je
fbld
addb
add
pop
mov
in
cmpsl
imul
xchg
pop
movl
adc
testb
dec
loop
movl
xor
arpl
and
push
dec
jp
sbb
mov
add
dec
out
xchg
cld
test
jl
mov
cltd
pop
insl
pop
dec
xchg
out
dec
lods
rclb
xchg
icebp
mov
data16
cmp
xor
and
loop
aas
fiadds
mov
jecxz
push
sbb
std
mov
insb
pop
imul
pop
push
repnz
xor
scas
jo
out
sbb
mov
or
repz
lret
or
mov
xor
cltd
lock
xchg
lahf
push
in
in
dec
imul
ljmp
insl
and
mov
mov
imul
fstpl
test
pop
subps
out
stos
in
ljmp
xchg
or
andl
pop
ret
movsl
jle
arpl
or
icebp
mov
shlb
testl
xchg
call
outsl
push
loop
and
mov
lahf
outsb
call
subl
push
mov
scas
pop
xorb
lcall
out
into
iret
fnstcw
mov
mov
pop
xchg
add
sub
pusha
inc
imul
scas
jmp
cmp
sahf
adc
xor
lea
adc
orl
jle
pop
mov
imul
cmp
lods
jae
push
ljmp
popf
call
and
mov
mov
scas
add
iret
lahf
idivl
xor
les
rcrl
in
sarb
loop
lahf
cli
lahf
mov
mov
jnp
mov
hlt
int3
sub
int3
jbe
add
sarb
loopne
mov
push
mov
adc
xchg
ret
insb
mov
dec
loopne
out
sub
mov
pop
mov
sbb
int3
cld
xchg
xor
lret
std
lret
mov
mov
pop
icebp
out
jg
xor
call
jg
mov
add
ss
arpl
test
lret
lcall
pop
push
pop
test
out
in
inc
div
arpl
cltd
imul
lea
scas
inc
push
sbb
not
xor
pop
jbe
mov
xlat
pop
int
mov
sarl
out
filds
cld
hlt
loop
cs
arpl
jg
mov
sub
mov
xlat
sbb
mov
xchg
jmp
mov
pop
repz
outsb
divl
xchg
jnp
jg
fs
adc
out
mov
mov
mov
ja
fwait
add
fbstp
in
repnz
outsb
inc
mov
rorl
ss
xchg
push
jg
mov
fwait
pop
std
lock
mov
fildll
sarl
je
adc
lahf
cmp
jae
adc
jle
iret
mov
mov
lret
push
jae
jg
push
mov
or
imul
pop
stc
push
sub
movsl
or
jl
push
aad
sti
ret
rorl
icebp
pop
mov
add
mov
sbb
pop
dec
clc
das
push
sbb
sub
jge
pop
nop
stos
shll
pop
cmc
mov
hlt
jle
push
scas
pusha
mov
inc
out
jmp
inc
cmp
mov
icebp
arpl
cmp
std
sbb
in
sbb
add
xor
pop
jg
test
jecxz
inc
aaa
cmp
pop
and
inc
repnz
push
fildll
fwait
stos
cmpsl
sbb
leave
fstpt
mov
adc
push
ds
rcll
in
dec
test
pop
inc
dec
and
hlt
shlb
mov
out
sub
mov
cmc
in
int
int
jecxz
call
mov
sti
inc
rorl
or
clc
loopne
leave
nop
push
fldl
clc
pop
fwait
pop
push
stos
pop
out
cs
mov
inc
cmpsb
test
lret
adc
add
fwait
out
rep
jle
iret
push
cmp
inc
mov
outsl
lock
jbe
xchg
mov
dec
xchg
out
aam
cs
and
xor
mov
mov
fdivrl
mov
shll
mov
inc
ret
ja
lock
lahf
stc
push
ja
fdivs
mov
outsb
arpl
scas
cmpsb
lods
pop
fistpl
pop
mov
inc
cmp
pop
aam
std
mov
pop
jne
sub
xchg
testl
fwait
sub
pop
jmp
arpl
jmp
mov
pop
xchg
mov
add
pop
sbb
into
out
jmp
lahf
pop
sti
fwait
pop
mov
addr16
mov
mov
pop
das
cwtl
fidivs
mov
pop
divb
out
fnstsw
ja
jno
lret
push
fisubrs
mov
loope,pn
leave
insb
jg
cs
pushf
mov
arpl
push
mov
divl
lret
scas
pop
or
dec
test
dec
push
inc
dec
cmp
push
push
mov
mov
dec
sub
pop
fcom
mov
jbe
int
rcr
lret
sub
mov
lock
clc
jg
inc
pop
and
fidivrl
xchg
fisubrs
xor
sbb
js
cwtl
jp
push
test
outsl
repz
test
mov
or
dec
xorb
xor
dec
test
push
inc
or
xchg
inc
mov
add
fs
inc
jp
adc
push
cmp
adc
xchg
sbb
cmc
and
jnp
nop
cwtl
mov
or
shr
mov
or
mov
and
out
dec
scas
adc
insb
mov
cmpsl
in
push
sub
mov
pop
movsb
inc
inc
pop
jle
mov
into
mov
sbb
cld
mov
dec
jb
and
push
in
mov
rorb
mul
pop
mov
cmp
ja
sub
out
sbb
or
es
scas
dec
roll
add
pusha
pop
stc
ss
push
mov
xlat
xor
out
fcomi
cs
fldl
sti
xchg
ljmp
lahf
lea
sbb
mov
mov
sub
mov
sub
addr16
or
fcom
mov
or
mov
sahf
jl
pop
jmp
add
mov
cs
enter
dec
push
outsb
mov
sbb
jmp
mov
lods
mov
push
lds
jecxz
mov
inc
scas
mov
or
imul
jbe
aas
jns
jno
xor
mov
lock
pop
sahf
jno
ret
sbb
cmp
fwait
push
stos
mov
sub
adc
cwtl
mov
push
xlat
mov
dec
iret
pop
xchg
scas
adc
fs
add
in
or
fsubs
lahf
pop
enter
int
inc
insl
xchg
popf
mov
jne
or
dec
or
sub
push
lret
add
and
jle
mov
orl
xchg
in
mov
inc
je
mov
loopne
jne
push
orb
mov
mov
fdivrl
fst
mov
testl
lods
in
out
aaa
inc
inc
addr16
add
push
out
push
negb
push
mov
sahf
inc
sbb
add
dec
neg
add
mov
inc
dec
outsl
sar
pop
out
lcall
fistpll
lahf
scas
sti
lahf
lock
dec
pushf
repnz
cmp
inc
pop
shrb
popl
inc
fnstsw
movsl
pop
xchg
xchg
sbb
pop
lods
es
push
pop
jl
ret
jge
pop
and
cmp
fisubrs
mov
pop
xlat
xor
cmpsl
jmp
sub
pop
int3
out
dec
add
aas
mov
lods
shll
push
cltd
aad
rcl
popf
loopne
push
mov
mov
dec
popa
aas
das
jg
lahf
bound
jb
pop
inc
mov
mov
mov
js
lahf
into
pop
repnz
lret
cmpl
xchg
rcll
imul
xor
and
aas
inc
mov
dec
sub
pop
and
pop
and
sbb
mov
fwait
ljmp
rorl
shlb
hlt
data16
mov
mov
jl
fidivrl
push
int
fidivrs
inc
adc
cmpsl
inc
nop
jl
add
enter
push
imul
mov
cwtl
add
sbb
iret
mov
repnz
push
mov
inc
fstpt
jge
adc
pop
outsb
int3
pushf
sbb
mov
adc
imul
mov
test
mov
arpl
insb
int3
mov
dec
ds
inc
daa
inc
pushf
or
or
ss
mov
imull
xchg
rclb
pop
adc
pop
xlat
lock
int
outsb
add
sbb
lret
pop
iret
pop
in
jge
insb
sbb
cmpsl
pop
out
xchg
adc
jg
mov
lret
pop
fnstcw
push
add
lods
rcr
sub
jg
and
pop
addr16
jno
ja
addr16
push
push
sub
or
out
or
repz
enter
xchg
repnz
ds
pop
lret
mov
mov
aaa
ret
push
scas
pop
push
adc
add
push
scas
mov
add
lea
lds
popa
push
repz
pop
jbe
ds
pusha
fstpl
pop
int3
jge
imul
or
into
fwait
and
inc
imul
enter
jae
into
adc
inc
jne
inc
fcompl
push
shrb
and
mov
mov
mov
mov
sub
and
lcall
sub
push
sbb
cmc
out
scas
jecxz
addb
mov
or
cli
scas
fcmovne
add
sub
ja
ret
sahf
stos
cmpsl
pop
xchg
arpl
and
iret
bnd
cli
dec
add
push
mov
and
std
iret
imul
addr16
pop
xchg
mov
pop
pop
frstor
addb
in
pop
pop
cltd
ret
insb
push
fisubl
xor
fcmove
jg
repnz
inc
call
xchg
mov
xor
fwait
xor
xchg
pop
jl
or
stc
or
stos
clc
scas
push
dec
iret
fldpi
out
pop
push
ret
and
shll
in
and
cmpsb
js
bound
mov
xor
dec
shrd
out
adc
test
mov
sbb
inc
aas
mov
repz
pop
std
fwait
push
xor
arpl
cmpsl
add
add
mov
ret
ds
dec
mov
daa
arpl
outsb
aad
out
jns
cmpb
lock
push
test
pop
and
aam
add
pop
and
btc
pop
ret
sub
sub
movsl
in
push
loopne
mov
sbb
push
adc
scas
outsb
cs
stos
fistpll
lahf
fstps
add
jle
out
ret
jecxz
out
lock
dec
cmpsb
pop
sbb
iret
mov
rcr
sbb
adc
lea
mov
pop
call
enter
or
mov
inc
mov
mov
stos
add
xor
xchg
test
outsl
shr
and
sti
fistpl
fisubs
and
jae
jns
push
sub
xor
cs
loope
loop
lods
inc
push
fistps
test
fdivr
mov
testb
imul
mov
mov
sbb
loopne
adc
mov
mov
pop
xor
and
xor
mov
es
push
rcrl
repnz
into
or
xchg
mov
out
inc
ret
aaa
out
sbb
mov
mov
jp
sti
ja
inc
fdecstp
cwtl
insb
xchg
jne
fists
arpl
repnz
adc
xor
arpl
pop
mov
lret
xor
pushf
insb
push
das
xchg
add
push
and
cmp
mov
fcmovnu
shr
jnp
popa
inc
sahf
push
insb
add
or
scas
test
jne
mov
add
push
icebp
fiadds
stos
sbbb
cs
pop
stos
inc
fs
xchg
lock
adc
movb
imul
clc
test
fwait
mov
out
sbb
push
dec
lods
imul
ret
mov
mov
inc
fs
and
lcall
jae
add
std
loop
pop
sub
sbb
out
push
fsubr
fdivrl
cmpsb
mov
push
jnp
mov
push
out
cltd
pop
jle,pt
adc
stc
xchg
stc
push
adc
sbb
es
cmp
shrb
dec
jp
sbbb
andb
scas
ret
pop
mov
jmp
aad
pop
in
add
xchg
pop
lret
lcall
lock
sbb
in
mov
push
scas
repnz
loopne
in
testb
adc
mov
pop
inc
jle
sbb
cmpsb
fimull
inc
movsl
pop
lcall
sbbb
dec
imul
negl
pop
pop
adc
in
pop
cmp
lods
xchg
sbb
xchg
xchg
mov
push
pop
into
push
out
push
in
sbb
fimuls
jecxz
jg
inc
jmp
outsb
jbe
mov
scas
mov
icebp
adc
enter
jecxz
or
jl
loopne
ret
and
cmp
cmp
pop
xchg
dec
nop
jnp
lret
mov
jno
sbb
ljmp
jg
notb
das
mov
inc
in
in
adc
push
xor
leave
push
aas
mov
sbb
jg
xchg
push
das
push
jp
jb
adc
jb
outsb
lahf
in
adc
xorb
lock
xchg
inc
scas
clc
repnz
lahf
add
fstl
xor
jge
frstor
pushf
lahf
pop
jnp
pop
ret
mov
jmp
sbb
fwait
mov
push
sub
or
lock
imul
cmp
mov
in
scas
sti
out
jno
cs
scas
enter
sti
dec
xor
add
or
rcr
dec
push
mov
flds
out
loope
cli
pop
fwait
pop
cmpsl
xchg
movsb
sub
inc
pop
out
cs
xchg
sub
xchg
out
mov
push
mov
inc
fsubrl
xchg
jg
jae
fistpll
sbb
pushf
xchg
mov
inc
scas
push
cmp
mov
or
push
negb
int3
rcr
cmpsb
push
scas
sub
jbe
ret
mov
pop
fisttpll
mov
mov
int
adc
scas
sti
shr
add
xchg
out
inc
mov
mov
cmc
pop
out
mov
and
std
lea
inc
mov
fnstsw
cltd
out
dec
sar
xchg
in
sbb
adc
ret
loope
inc
mov
in
pop
xchg
test
repnz
repz
and
mov
lahf
dec
sbb
sarb
cli
sbb
insl
or
push
imull
and
add
ja
adc
imul
sbb
fstp
dec
testl
fld
aas
jmp
push
cs
shrl
out
out
out
ja
int
ret
mov
xchg
cld
int3
mov
fbstp
jbe
pop
jecxz
push
xchg
repnz
push
lret
and
cs
adc
or
xor
push
cmp
sbbb
es
dec
push
sbb
xchg
sarb
cmpsl
pop
aad
test
mov
jmp
sbb
lods
test
mov
pop
and
je
jmp
mov
sbb
push
loopne
lret
pop
lock
movlps
inc
in
pop
insl
jecxz
jp
inc
out
jnp
pop
das
sbb
fmull
and
adcl
inc
insl
aaa
aas
xlat
cwtl
sub
iret
inc
outsb
aad
stos
xor
aaa
fldenv
cmc
ja
push
push
lret
jb
mov
add
inc
subl
pop
ds
jo
jno
dec
jbe
cmpl
cmpsl
ficoms
pop
rol
add
fidivrs
int3
mov
outsl
in
int3
lahf
pop
out
and
int
stc
aas
xchg
gs
cmpsb
std
out
mov
and
fistpll
mov
sahf
add
mov
sbb
arpl
inc
xchg
sub
xor
sbb
in
loopne
adc
or
jnp
jle
xor
sub
roll
sub
int3
push
loop
dec
xchg
cmp
cli
aam
jmp
push
lock
push
mov
push
xchg
sbb
fbld
in
adc
jo
ja
lods
or
pop
ficompl
mov
out
push
sti
ret
popa
pop
ret
jl
dec
mov
mov
xchg
jecxz
xchg
adc
cmp
mov
sub
inc
mov
popf
loope
mov
insl
rol
push
or
sahf
movsb
mov
pop
je
pop
popa
sbb
pushf
out
xorl
fstpt
lods
or
test
mov
nop
pop
stos
adc
mov
or
mov
cmp
inc
aaa
pushf
mov
add
cmpb
xorl
jle
add
fidivs
out
call
push
adc
mull
xchg
sub
ret
out
cmp
mov
pop
mov
jmp
dec
xchg
pop
fildll
cmp
push
out
jo
in
sub
adc
jp
aad
sti
mov
mov
inc
sti
lcall
jns
popa
add
ret
fsub
mov
or
ret
xor
cmpsl
lcall
shrb
jge
mov
fstpl
mov
ficompl
mov
test
mov
fdivrl
loopnew
add
xchg
xchg
mov
jnp
das
mov
in
data16
push
outsl
jnp
push
in
push
push
xor
sbb
push
dec
das
mov
sub
test
cli
push
in
fwait
mov
dec
xor
pop
push
lret
mov
js
jle
lahf
fidivrs
push
movsb
lret
test
sti
repz
fdiv
push
out
imull
loopne
cmp
cmp
prefetch
or
jo
popf
add
push
sub
in
jns
outsl
repnz
adc
xchg
dec
arpl
sbb
lret
jns
inc
mov
ror
cmp
cmp
jnp
mov
jne
es
pop
cmpsl
or
stos
inc
mov
jg
imul
out
imul
jmp
pusha
stos
mov
mov
sub
add
aaa
out
arpl
aam
xchg
test
lret
mov
mov
ret
in
mov
shrl
mov
cmp
jne
jmp
stc
add
mov
ret
es
cmp
daa
xchg
and
out
icebp
jl
mov
sbb
cmp
and
lahf
repz
icebp
jnp
out
enter
dec
dec
xchg
das
push
repz
adc
xor
push
test
or
fdivrl
jne
mov
jecxz
hlt
push
and
push
dec
je
mov
rol
arpl
and
adc
and
sub
in
les
inc
jns
stos
lcall
clc
mov
fs
idiv
leave
pmaxub
cwtl
lret
lcall
lcall
in
data16
imul
mov
aad
fs
in
ret
and
and
jns
inc
fsubrl
divl
pop
cmp
jne
fwait
ret
jecxz
adc
sub
cmp
push
lock
inc
imul
mov
pop
test
sbb
in
dec
add
jge
scas
pop
lcall
xor
fimull
cmpsb
jg
out
jl
fisubl
imul
roll
stos
inc
pop
leave
cmpsb
or
lcall
testb
cmp
dec
and
shll
mov
insb
mov
fcomi
mov
xor
adc
out
jecxz
mov
insl
bnd
stos
pop
xchg
jl
mov
nop
fs
mov
test
inc
xchg
xor
add
mov
xor
mov
out
out
mov
mov
sbb
cld
or
iret
cs
aaa
and
push
repnz
out
adc
sbb
popa
push
mov
add
imul
xchg
xor
xor
lahf
mov
call
pushf
repz
pop
xor
stos
sub
outsl
in
dec
stos
mov
repnz
pop
and
xchg
sub
jg
sti
ret
lods
mov
pop
mov
push
cmpsl
pop
test
shr
addb
daa
push
jle
jl
adc
add
mov
popf
js
neg
cs
add
movsbl
cmpsl
subl
push
xlat
leave
or
inc
sub
movsb
or
and
pushf
fnstenv
add
lret
mov
into
jno
and
cltd
pushf
int3
push
jg
in
xchg
data16
dec
mov
push
xchg
adc
mov
dec
sub
mov
ffreep
or
mov
ja
mov
imull
sti
pop
sbbb
mov
pop
scas
mov
mov
and
out
xchg
shr
ror
stc
fucomip
cmc
ret
and
jmp
xchg
fimuls
fabs
roll
bound
fcompl
push
sahf
sahf
jl
clc
inc
mov
lahf
mov
out
gs
sahf
push
pusha
add
sbb
and
daa
mov
cli
jecxz
out
pop
dec
in
insb
enter
data16
mov
fnstenv
push
lods
aaa
inc
mov
imul
pop
push
jecxz
mov
pop
push
sub
cmpsl
hlt
mov
popa
stos
out
stc
imul
xchg
jmp
ja
mov
and
in
push
mov
aas
dec
neg
pop
imul
aad
out
nop
push
xchg
pop
aad
jae
rorb
mov
outsb
ja
jbe
mov
into
ss
mov
lods
pop
fisubrl
iret
nop
lea
jno
aas
mov
scas
scas
push
mov
clc
mov
out
sbb
add
pop
popa
outsb
sti
inc
cs
pop
movsl
repnz
mov
cli
mov
int3
sub
dec
and
and
sahf
pop
test
in
push
sub
mov
add
pushf
lahf
out
adc
test
lcall
push
mov
scas
adc
sahf
in
dec
push
sub
cltd
dec
es
and
insb
push
cltd
cli
pop
xchg
arpl
xor
shrw
imul
sub
lret
sub
or
jnp
hlt
cld
inc
call
and
mov
aam
mov
shr
nop
dec
dec
xlat
repnz
mov
cltd
push
scas
cmpsl
fsubp
mov
loop
xchg
loope
dec
rorl
aaa
pop
mov
mov
xor
push
add
jbe
fldt
out
xchg
inc
pop
add
pop
mov
sbb
or
jnp
push
hlt
test
mov
sub
sbb
adc
in
and
mov
xchg
jl
loope
std
ds
mov
mov
cmpsb
xchg
imul
lret
push
sub
lcall
out
hlt
iret
lods
into
xor
mov
mov
in
scas
mov
pop
mov
mov
mov
mov
xchg
mov
out
pop
sbb
test
cmp
pop
outsl
xor
adc
dec
lfs
mov
pop
rcl
test
or
loope
fadd
push
notl
scas
mul
cmpsl
ja
add
push
cmp
es
int
sbb
ss
or
je
sahf
daa
in
sar
add
in
test
mov
rcrl
mov
sbb
sub
lahf
mov
push
ss
test
cmpsb
sarl
adc
ljmp
inc
inc
mov
push
fbstp
icebp
sbb
in
cs
ss
rcr
ret
adc
add
and
xchg
bt
test
add
jno
or
inc
dec
add
push
call
mov
cmp
jge
out
inc
leave
je
clc
push
jg
cmp
push
dec
test
lcall
stos
insl
cmp
sub
push
movsl
inc
out
jmp
pop
mov
in
xlat
fsts
cmp
scas
pop
loop
mov
outsl
xchg
movsl
sahf
xchg
arpl
lock
pop
mov
mov
fstps
and
add
cmp
or
cld
cld
loopne
ret
push
pop
mov
add
add
and
scas
dec
cmpsl
xchg
lods
mov
adc
add
call
and
ds
lret
dec
and
lea
or
fiaddl
imul
jns
or
push
push
pusha
sub
stc
xor
aas
dec
insl
sub
and
mov
sarb
pop
lcall
sub
aad
idivb
sbb
leave
scas
xor
push
pusha
test
sub
sub
in
pop
jnp
sub
jae
imul
aaa
shlb
sbb
mov
push
fwait
jg
in
jg
xor
or
mov
ret
out
jg
push
rcrl
rcl
inc
call
aaa
cli
int
addr16
aas
mov
mov
fbstp
pop
sub
mov
outsl
xor
dec
hlt
fistps
cmp
outsb
fwait
popa
bound
cmpsb
mov
sub
fbstp
push
out
xchg
cmp
ja
mov
mov
es
je
fidivrs
popf
jno
shlb
testb
mov
enter
jge
sbb
mov
hlt
cli
lods
repnz
push
cli
xchg
stc
sbb
cli
mov
in
arpl
out
fnstenvs
mov
addl
ret
mov
mov
stc
daa
repnz
es
shll
mov
and
mov
adc
lds
cmc
movsl
cmp
cmp
cld
std
or
push
xor
ret
and
lahf
jg
mov
inc
adc
or
inc
insl
fs
mov
mov
lea
and
jle
mov
enter
popf
and
xchg
jae
xchg
mov
roll
ret
inc
xor
jae
or
xchg
fadds
test
jmp
out
xchg
sti
or
xchg
shrb
push
jb
fcmovne
ret
and
sbb
push
repz
fimuls
dec
leave
ds
sub
int3
mov
shll
popf
das
sbb
cli
ljmp
out
mov
mov
scas
lahf
jmp
leave
popf
rorb
xor
and
pop
mov
jg
popa
pop
out
sbb
lods
adc
sub
dec
movswl
cmp
mov
mov
lahf
popf
dec
mov
sbb
decb
mov
cmpsl
push
push
fistps
mov
fstps
sub
arpl
mov
in
adc
mov
adc
dec
sbb
in
fidivrs
push
lahf
push
mov
fsubl
and
mov
clc
out
stc
adc
inc
and
jnp
push
xor
inc
ja
jg
rcrl
lret
jnp
mov
mov
ret
sbb
and
cmpb
xor
and
mov
xorb
pop
adc
pop
xor
subb
push
mov
jb
imul
push
enter
inc
pop
xor
jg
pop
pop
xor
jg
xchg
insb
addr16
push
pop
xlat
xorb
mov
or
lret
sti
int3
divb
xchg
orb
pusha
rcl
lock
jp
cmp
push
adc
imul
lds
inc
ljmp
popf
and
out
and
sbb
add
jmp
jbe
ljmp
pushf
and
test
mov
loop
js
out
adc
fmul
xlat
sar
inc
adc
mov
sti
push
leave
iret
pop
outsl
push
push
inc
xchg
push
or
sarl
mov
jecxz
jmp
xchg
xchg
fsubl
mov
call
mov
bound
push
adc
ret
out
mov
jmp
mov
mov
jmp
mov
dec
mov
push
frstor
adc
cmp
xchg
and
push
lods
lahf
lds
pushf
push
sbb
inc
mov
and
push
cmpsb
dec
or
call
hlt
sub
mov
mov
push
arpl
imul
pop
xchg
sub
dec
mov
aaa
sub
fnstcw
imul
mov
mov
xchg
lret
sbb
loopne
shlb
mov
std
jle
or
mov
mov
pop
addr16
hlt
movsl
pusha
shll
push
mov
sti
repz
mov
int
xchg
shlb
push
pushf
fcmovbe
iret
jnp
add
cmpb
or
repz
mov
push
push
lods
and
mov
mov
test
idivl
call
or
subl
mov
imul
jmp
int
dec
shrl
inc
stos
dec
dec
ret
orl
leave
ljmp
push
out
scas
mov
ret
daa
out
push
movl
lods
into
sarb
fisttpl
scas
mov
das
std
out
je
lahf
cltd
out
sub
dec
push
dec
std
xchg
iret
shlb
pop
mov
aad
mov
movsl
sub
dec
jbe
push
loope
paddw
push
cwtl
rcl
iret
imul
icebp
cmpsb
push
pushf
pushf
mov
cmpsl
cli
lcall
imul
lock
sahf
cmp
fadds
add
jb
jl
jg
iret
sub
push
xlat
cmp
dec
in
dec
pop
lahf
sbbl
add
insb
xorb
xor
push
push
jb
pop
stc
push
mov
outsl
jl
pop
cmp
cmpsb
test
mov
iret
int3
js
hlt
push
fidivl
push
jmp
jne
shr
mov
in
cs
inc
dec
movsl
imul
dec
add
clc
cmpl
xchg
in
jp
mov
test
clc
pop
or
into
aaa
mull
subb
push
stc
lods
push
dec
or
xor
push
in
lds
cmp
dec
and
or
jo
mov
sub
cmp
stos
add
mov
loope
xlat
stc
push
sub
inc
fisubl
inc
jle
stos
pop
in
shlb
dec
push
fnstenv
test
shll
jp
add
rorl
mov
out
add
int
xor
sti
imulb
fwait
push
xor
mov
pop
jno
jmp
inc
popf
sub
gs
xchg
pop
sub
fisubl
pop
push
in
cmp
push
imul
ret
insl
cltd
shll
cmp
cmpsl
js
leave
popf
fadds
mov
inc
outsb
daa
out
cmp
jmp
mov
pop
nop
mov
sahf
lcall
out
mov
mov
pop
mov
rorl
jb
xchg
stos
mov
inc
xchg
push
test
insl
mov
xor
sarl
outsl
push
sbb
sbb
clc
push
mov
push
mov
into
push
adc
pop
loopne
mov
mov
stos
mov
and
imul
ds
jl
pop
scas
aam
cli
das
ret
hlt
push
mov
fs
jg
leave
iret
xor
xchg
xor
sbb
imul
jns
imul
inc
sti
pop
jmp
cld
sti
inc
and
adc
cs
mov
popf
adc
movsl
cli
add
pop
in
pop
and
jae
test
or
adc
ret
pop
mov
imul
xor
outsl
push
out
out
sahf
test
orb
mov
es
mov
or
adc
fildl
cs
adc
jg
cltd
inc
inc
jae
push
or
cmpsl
and
mov
mov
ret
xchg
lahf
addb
loopne
adc
dec
out
push
outsb
hlt
cmpsl
scas
xor
cltd
je
push
xor
fdivrl
xor
dec
outsb
mov
mov
pop
mov
ror
cmpsb
jg
repz
mov
pop
sarl
sub
cmp
scas
repz
push
testb
scas
mov
lea
mov
les
nop
into
scas
fimuls
sub
out
test
xchg
fiaddl
cmp
popf
xchg
das
push
mov
icebp
cli
fildl
fs
sbb
popa
add
nop
push
pop
sahf
cmpsb
xchg
adc
lcall
shr
mov
rol
outsl
sub
mov
loopne
imul
dec
cmp
mov
and
mov
stc
push
sub
cmp
or
xchg
sbb
cmp
mov
and
shrl
mov
mov
fscale
mov
mov
fdiv
movsb
clc
xchg
cmp
jg
push
pop
icebp
fldcw
out
sub
stos
mov
sbb
imul
push
cmpb
stos
jmp
jbe
xchg
mov
outsl
sub
push
ss
scas
push
in
push
jno
or
mov
or
stos
sub
xor
lock
add
lahf
cmp
adc
out
loopne
push
xlat
in
adc
pop
leave
and
inc
sbb
xchg
repnz
add
out
hlt
and
cmp
lds
cmpsl
mov
xor
inc
out
and
cmp
sub
push
or
ljmp
pop
adc
mov
xor
cmp
lcall
dec
fldenv
stc
in
push
mov
dec
mov
mov
mov
push
ss
stos
or
in
outsb
sahf
or
xor
cmp
push
sbb
repnz
pop
movsl
nop
aad
push
iret
aaa
pop
repz
sarb
mov
xlat
cmp
call
ja
mov
fwait
popf
dec
xchg
outsl
ret
jl
sub
icebp
mov
cmp
int
mov
mov
jne,pn
repnz
aam
arpl
cmpsb
xchg
lret
imul
jg
inc
mov
sbb
mov
push
gs
adc
push
mov
sub
cld
jnp
ds
fdivrs
inc
lock
cld
cmp
stos
cmp
adc
in
out
push
xchg
dec
mov
bnd
xchg
or
imul
sti
add
in
push
cld
push
jnp
sub
fdiv
mov
jle
outsl
icebp
push
jg
xor
mov
hlt
loop
cmc
fcomip
gs
mov
xor
rcr
test
fstpt
add
flds
ja
pop
jg
pusha
mov
mov
imul
or
push
stos
cmp
mov
rcrl
or
cmp
and
sarb
imul
jge
sub
pop
mov
stos
mov
add
pop
mov
outsl
aam
cmc
ret
xchg
pop
jbe
push
xorl
pop
jbe
sub
dec
xchg
mov
mov
sub
adc
fwait
add
ja
call
sbb
cs
in
cmp
adc
stos
and
jp
daa
aaa
jge
lret
dec
cltd
loopne
cmpsl
out
movsl
jmp
out
mov
insl
sub
mov
sbb
jb
add
lods
roll
cmpsl
pop
mov
mov
ja
lret
in
arpl
cmp
les
pop
rcrl
sahf
sub
xchg
sub
mov
ret
sar
out
add
xchg
mov
cli
mov
sti
push
out
movsl
adc
push
aaa
lahf
xchg
add
ffreep
sti
add
push
out
fistpll
loop
adc
mov
or
out
out
stc
rol
push
cmp
repz
jle
ret
arpl
and
repnz
movsl
sbb
mov
cmc
sub
and
repz
aad
movl
incb
jmp
push
in
add
push
hlt
inc
sub
scas
adc
sbb
imul
out
mov
xchg
leave
push
adc
and
add
xchg
arpl
fldt
push
pop
jo
push
mov
ret
test
scas
jns
sarl
fistps
clc
mov
mov
scas
push
sarb
fists
mov
xor
cmp
inc
popf
pushf
std
mov
sbb
sub
mov
nop
cmc
sbb
sti
outsl
and
movsb
pop
mov
mov
pop
fstps
data16
add
pop
in
fildll
push
test
mov
out
scas
pop
xor
out
test
sbb
adc
je
imul
aaa
lret
or
movsl
das
pop
js
out
jbe
pop
lahf
push
aaa
call
fsubrl
fists
sahf
jno
shl
lods
cmp
lahf
aas
dec
outsl
mov
in
jg
and
jae
movl
ret
lahf
push
sub
jle
pop
mov
pop
xor
ret
cmp
je
arpl
or
jmp
adc
adc
xor
mov
mov
pushf
scas
fstp
add
mov
pop
dec
and
negl
rclb
pop
dec
xchg
pop
data16
jne
jne
mov
mov
rcrl
filds
or
rolb
pop
addr16
pop
out
les
outsl
add
mov
mov
repnz
lods
xchg
mov
rolb
mov
loopne
in
xchg
push
jno
mov
xlat
mov
cmpsl
adc
mov
xchg
dec
mov
sti
jbe
movsb
jle
fbld
xor
fstp
mov
stc
pop
push
repz
gs
add
pop
mov
int3
adc
or
fwait
mov
mov
je
mov
insb
sub
mov
mov
xchg
or
inc
pop
cmp
add
and
lahf
mov
xchg
fld
call
mov
psllq
push
and
add
loop
mov
mov
fstps
outsl
jb
sub
popf
pop
jo
cwtl
or
outsb
push
scas
neg
ljmp
clc
mov
popl
rcrl
and
add
push
sub
inc
mov
mov
fidivs
xchg
jns
shlb
fistpl
shlb
ror
test
in
inc
out
and
or
mov
sub
cmp
ficoms
hlt
sub
xchg
mov
mov
ret
sbb
or
mov
xlat
test
or
jne
popf
js
out
mov
scas
push
call
insb
dec
sahf
leave
sub
adc
test
add
mov
mov
shlb
cwtl
mov
xchg
aaa
out
push
sar
jl
inc
xor
add
imull
ja
cli
push
sarl
movsl
mov
mov
inc
pop
lods
jp
outsl
pop
dec
or
fwait
out
add
fneni(8087
out
sub
shrl
and
pop
ficompl
or
insl
les
ret
add
mov
pop
mov
sbb
gs
xor
fldz
add
jge
mov
xchg
mov
adc
fcmovbe
push
and
jb
loopne
jne
mov
cmc
sti
fisubrs
std
pop
pushl
pop
loop
push
jns
cwtl
ret
xlat
adc
jp
pop
fucomip
mov
xlat
ror
push
sbb
cmp
xchg
stos
or
ficoml
mov
mov
jns
xorb
pop
xor
dec
dec
or
lea
pop
lea
mov
mov
cmp
mov
dec
stos
fstps
aaa
stos
xchg
xlat
aad
mov
pop
mov
inc
imul
sbb
push
ja
add
adc
mov
stos
maskmovq
notl
jp
mov
mov
pop
pop
mov
or
pop
inc
inc
mov
inc
out
xchg
jnp
adc
jg
xchg
mov
into
mov
pop
jmp
pop
jmp
pop
into
lcall
mov
outsl
adc
hlt
cwtl
adc
in
mov
outsl
mov
adc
push
mov
cmp
adc
inc
pop
xor
das
in
jnp
and
ret
push
sbb
mov
mov
pop
sub
in
xor
out
xor
add
bound
pop
cmc
subl
jnp
pop
imul
lea
arpl
push
jp
pop
std
ljmp
push
inc
jg
pop
mov
mov
dec
cwtl
sbb
cmpsl
push
and
hlt
fistps
sbb
inc
push
mov
mov
push
rcll
mov
push
cmpl
dec
xchg
ljmp
sub
lods
or
mov
xchg
push
pushf
test
mov
out
fdivl
ficoml
rcl
inc
mov
jecxz
push
mov
sub
aaa
sahf
cmp
xchg
fstps
nop
mov
jmp
mulb
fdivr
push
jnp
cmp
xor
stos
mov
out
sub
jnp
in
add
mov
loopne
fimuls
loop
lods
xorb
inc
ds
dec
pushf
fst
scas
mov
dec
stos
out
mov
and
out
sub
icebp
jl
add
lcall
add
outsl
cli
pop
ret
lods
cmpsl
push
fcmovne
cmpsb
out
mov
push
sub
ljmp
push
aaa
mov
xor
fildl
outsb
lods
and
inc
aam
cmc
dec
andb
and
jecxz
ja
xlat
sti
rorb
ficompl
das
push
pop
mov
popf
das
add
fstps
dec
sahf
sub
hlt
ficoml
loope
mov
sbb
jns
rcll
pop
in
mov
adc
jbe
aas
mov
push
shrb
push
dec
xor
push
out
in
cmc
mov
negb
xchg
out
fisubs
daa
mov
movsl
ret
push
inc
lds
mov
popf
cmp
sub
mov
dec
pop
pop
insb
push
lods
xchg
xchg
shlb
sub
das
add
push
cmpsb
imul
in
cmp
repz
sbb
sub
mov
xchg
or
mov
shlb
ljmp
es
and
mov
dec
push
daa
jmp
loopne
std
or
adc
dec
jne
cmp
mov
mov
std
or
jmp
pop
push
aam
mov
in
sbb
xchg
pusha
mov
es
sub
lock
aas
imul
sbb
lods
lret
and
xchg
xlat
mov
sub
sub
jae
inc
xchg
inc
and
sbb
lahf
lock
es
jecxz
divl
fimuls
sbb
jle
aas
xor
mov
dec
aas
jns
jae
mov
fstpt
testl
xchg
cmc
sbb
sbb
jnp
fdivrl
mov
mull
inc
cmp
out
cli
fmuls
movsb
pop
and
push
cmpsb
ficompl
decb
or
repz
dec
dec
ds
gs
fnsave
popf
jno
dec
dec
mov
stc
dec
inc
cmp
fsubrl
mov
shlb
pop
in
ja
push
cmp
inc
sub
fmuls
jne
test
aam
and
cmp
out
jle
pop
mov
xlat
push
inc
jb
loopne
dec
jnp
sub
cmp
in
scas
mov
mov
loope
sbb
insl
imulb
ljmp
pop
insl
jns
mov
lahf
inc
lcall
xor
frstors
xlat
sbb
xchg
filds
mov
mov
push
mul
fstps
cmp
mov
ja
sub
in
xchg
cmpb
idivl
jnp
testb
and
sbb
push
jno
ljmp
ret
push
xlat
hlt
jecxz
mov
not
sbb
pop
lock
jns
pop
fisttps
jne
or
jae
psubb
pop
push
arpl
xchg
cmc
push
add
cmc
negb
in
mov
sub
adc
jecxz
push
out
ret
push
xchg
leave
adc
leave
out
cmp
xor
out
sub
lods
mov
mov
jne
mov
pop
ja
ja
rolb
insl
pop
pop
pop
pop
xchg
cli
sbb
xchg
jo
jno
out
cmp
sahf
outsb
xlat
shl
aas
pop
fcompl
sub
cmp
xchg
mov
jno
lock
xlat
fistpl
xor
xchg
in
outsl
jbe
sti
pop
cmp
jecxz
mov
pop
pop
jbe
sbb
sbb
jge
movb
inc
push
cmc
pop
ljmp
lods
jnp
mov
push
decb
shrb
in
pop
mov
subl
push
jb
add
mov
ljmp
inc
xchg
mov
aas
sbbb
mov
test
dec
lcall
out
add
add
xchg
sub
jecxz
vmptrld
outsl
jnp
or
mov
leave
fstl
fnstcw
outsl
pop
sbb
or
mov
mov
mov
jg
inc
sbb
ficomps
jg
shll
dec
lahf
mov
xchg
pop
and
lahf
mov
sbb
cmpsl
testb
in
fisubs
std
mov
aam
mov
dec
aad
daa
test
fwait
push
mov
mov
inc
stos
dec
or
fldenv
pop
cmpsl
push
jecxz
xor
aam
aad
imul
aas
pop
adc
fsubp
mov
fisubl
mov
mov
dec
cli
testb
mov
jmp
and
xchg
lahf
xchg
sbb
pop
jnp
insb
outsl
nop
mov
pushf
mov
push
jmp
cmp
push
pop
mov
aas
jbe
mov
xchg
jg
push
or
or
mov
fcompl
xor
sbb
or
lcall
test
mov
push
pop
lret
mov
jg
negl
aam
fwait
push
repz
ja
mov
cmp
pop
test
loop
push
cmpsl
sub
sub
sbb
imul
pop
add
or
js
jbe
mov
in
pop
inc
jbe
int3
negb
xchg
cwtl
inc
hlt
scas
das
pop
xor
jno
pop
mov
mov
notb
out
sar
xor
sarl
add
das
and
mov
fstps
cs
adc
xchg
cli
mov
push
jg
subl
fwait
mov
scas
pop
xor
mov
filds
xor
ret
shll
clc
mov
inc
lahf
mov
fadds
add
mov
pop
xchg
loopne
test
popa
push
in
scas
xlat
inc
notb
inc
cmp
and
out
fldt
inc
out
mov
mov
out
imul
jmp
scas
stos
mov
push
je
addr16
sub
sbb
push
jp
ss
jmp
mov
sbb
xchg
cmc
iret
jns
in
add
jmp
outsl
mov
add
pop
dec
arpl
sti
pop
pop
cmp
in
roll
mov
or
lret
pop
test
mov
adcb
push
jle
pop
icebp
cld
fbld
jnp
test
cmp
ffreep
int
dec
pop
popf
daa
call
sub
icebp
rcrb
sub
and
pushf
pop
push
ja
xor
mov
rcll
cs
int
inc
cmpsb
xor
mov
fiaddl
push
mov
scas
insl
pop
lods
hlt
xchg
fucomp
icebp
into
incb
push
outsb
test
push
aas
lret
enter
and
push
insl
fstps
fisttpll
stc
int3
xchg
adc
pop
push
out
leave
loop
pop
pop
jne
mov
cmp
mov
loop
xorl
mov
xor
ljmp
jae
xchg
inc
popf
and
iret
jg
outsl
popf
into
es
inc
mov
jp
or
ja
add
mov
xchg
add
dec
es
stos
adc
cld
adc
pop
fmuls
mov
mov
sbb
repz
out
mov
mov
mulb
lea
sarb
imul
lret
dec
into
adc
fisttpl
es
scas
inc
in
mov
or
mov
mov
mov
loop
pop
add
pop
sbb
scas
push
cs
testl
das
fldcw
sti
shl
adc
xchg
into
ret
outsl
dec
ret
xchg
out
stc
notl
mov
push
mov
sahf
inc
dec
repnz
fnstenv
mov
push
scas
pop
push
add
dec
jecxz
cwtl
cmpb
ljmp
mov
out
pop
ret
bound
sbb
push
cltd
cs
sbb
push
stc
sbb
adc
roll
ss
mov
adc
test
xorl
push
outsl
xor
mov
inc
outsb
mov
cmp
xor
xchg
insl
xchg
adc
and
loope
outsl
fcoms
xlat
adc
movsb
popa
in
gs
dec
int3
or
dec
push
xchg
in
mov
loope
ja
cltd
jmp
ds
push
je
add
xor
mov
imul
fbld
call
dec
mov
clc
in
icebp
fistpl
sbb
cwtl
aad
fnstcw
push
push
and
mov
and
cmp
stc
lret
dec
adc
mov
jmp
mov
and
ret
scas
outsl
sub
movsl
cmpsl
rcrl
mov
or
lock
or
push
mov
jmp
mov
dec
mov
inc
mov
mov
adc
or
dec
iret
scas
xchg
stos
jbe
jmp
repnz
mov
or
xchg
faddl
sub
aam
cwtl
das
push
cmpsl
cmc
add
cltd
loope
in
xor
sbb
inc
sti
lods
into
jno
andb
add
fdiv
movsl
test
mov
add
loope
icebp
or
mov
jge
sub
xor
add
ret
sub
sbb
add
das
and
and
mov
icebp
cltd
mov
cmc
push
pop
or
lods
sbb
into
or
jmp
mov
aad
ja
push
test
xchg
push
mov
fcomp
pushf
in
mov
je
push
stos
sub
in
shld
movsb
sbb
mov
test
mov
out
orps
add
mov
mov
imul
cltd
data16
xor
testl
pop
popa
js
iret
popf
aaa
sub
fucom
in
sbb
xchg
jo
aaa
in
xchg
push
jns
jmp
add
xor
divl
pop
mov
or
xchg
orb
xchg
pop
aad
out
fistpl
cmc
sub
fld
out
pop
add
cmp
ljmp
aaa
mov
cmc
stos
mov
mov
mov
mov
imulb
dec
cli
fdiv
cli
cmp
mov
ja
xchg
cmp
dec
xor
lds
add
out
pop
aas
jl
cltd
fidivrs
xchg
sahf
scas
cs
cli
fbld
dec
rcrb
push
hlt
cld
in
fbld
mov
int
push
iret
mov
xchg
cs
in
scas
cld
pop
xchg
pop
aad
adc
xlat
ja
stos
roll
adc
sbb
inc
bound
loopne
cwtl
inc
decb
rorl
adc
dec
mov
jle
push
mov
push
push
popa
es
out
jecxz
and
scas
in
ja
add
loop
pop
mov
aas
mov
add
jb
mov
es
xchg
dec
rorb
loop
jge,pt
cmpsb
sbb
bound
or
out
jae
push
outsl
sub
outsl
xor
aas
mov
test
pop
mov
fsubr
jnp
ds
and
flds
frstor
in
daa
sbb
fildl
inc
fiaddl
outsb
sub
pop
stc
movl
mov
dec
adc
mov
repz
sbb
clc
cli
ret
inc
cmp
clc
imul
fnstcw
xor
movups
and
repnz
ficomps
fsts
mov
adc
or
jg
sbb
sub
int3
cld
adc
imul
sbb
lret
inc
in
and
dec
das
bound
fcoml
popw
ret
and
cmpsl
xor
and
mov
sti
cltd
xlat
repz
insl
cmpsb
xchg
mov
sub
pop
mov
ret
stc
jno
fimull
push
pop
jo
clc
jo
pop
and
or
or
imul
mov
jl
out
mov
push
dec
cmp
imul
add
jge
fsubrs
test
xchg
out
leave
out
mov
pop
out
out
pop
xor
outsb
jmp
leave
mov
fsub
scas
or
fsubrs
outsb
cmp
cmp
call
mov
add
outsl
jp
sahf
aam
mov
cmc
pop
sbb
jmp
call
pop
add
pop
dec
fstps
lods
xchg
arpl
arpl
inc
xchg
jae
add
jge
cltd
push
ss
lret
mov
xchg
dec
int
jle
jp
pop
lea
or
ds
rol
jnp
out
inc
push
je
lods
sub
js
lret
loope
hlt
jnp
xlat
sbb
add
clc
adc
daa
dec
fcompl
push
out
pop
sub
inc
je
pop
hlt
sahf
pop
aas
sbb
cmc
mov
mov
loop
push
and
ljmp
ret
cmp
mov
mov
clc
test
iret
lods
cmp
inc
es
pop
add
lds
pop
data16
inc
mov
cs
mov
cmp
xchg
aaa
pop
cmc
mov
popf
and
repz
cmpb
stos
pop
adc
pusha
lret
fbld
jg
or
sti
mov
lahf
hlt
mov
int3
fwait
push
inc
add
jg
dec
insl
xor
sbb
mov
or
test
sub
pop
icebp
fdivrs
push
aaa
sub
mov
adc
jl
pop
repnz
xchg
mov
inc
cwtl
cmc
mov
mov
mov
rorl
jmp
mov
aas
gs
std
mov
add
scas
imul
pop
aas
xchg
decb
lock
scas
dec
xchg
jns
cmc
lret
inc
mov
jbe
sub
ja
out
add
out
js
push
push
fildl
dec
jnp
adc
xor
popf
scas
mov
add
mov
jns
inc
insb
mov
pop
mov
jmp
xchg
hlt
insl
cmp
mov
inc
dec
push
push
in
cli
inc
outsl
int3
pop
popf
fnstcw
imul
rcrb
xchg
popf
push
aaa
lret
sbb
outsb
sub
ret
jnp
mov
aad
jnp
xlat
ljmp
mov
fsubl
inc
push
xchg
cmp
sbb
jno
jnp
stos
loopne
pop
add
push
jno
dec
imul
jbe
lahf
in
addr16
icebp
imul
ja
sub
fs
xor
popf
mov
and
sti
je
repz
scas
push
sbb
iret
orl
scas
sahf
sahf
xchg
sub
push
fmull
push
jle
mov
mov
dec
into
jge
cmpsl
test
out
add
pop
mov
insb
pop
outsl
sub
scas
and
or
mov
jno,pt
inc
mov
gs
clc
and
out
add
xchg
mov
pop
xchg
and
movsb
dec
dec
inc
dec
hlt
jb
out
shl
movsl
pop
fsubrs
adc
fdivs
sub
pop
mov
fdivl
pop
test
jnp
mov
mov
into
xchg
sub
lret
pop
mov
sbb
mov
pop
lcall
sub
imul
iret
pop
push
xor
into
arpl
aas
xchg
add
fstpt
sub
js
xor
add
adc
jmp
nop
arpl
jne
lahf
sub
stc
adc
push
pop
stos
and
dec
scas
cli
fisubrs
add
dec
scas
sbb
out
imull
leave
das
lret
ret
sub
scas
jbe
das
add
add
mov
pop
add
stos
mov
movsb
adc
cs
pop
inc
mov
pop
decb
in
jo
sbb
mov
add
jmp
js
std
add
lods
or
mov
pop
hlt
and
push
je
ficomps
dec
xchg
testl
pop
and
push
ffree
mov
add
push
dec
ja
cmp
dec
mov
insl
lods
adc
out
push
iret
inc
movsb
jg
jno
dec
fwait
xchg
sub
push
jg,pn
mov
andb
jmp
imul
popa
pop
cmpsb
pop
dec
arpl
mov
jns
cmpb
jbe
iret
out
rorl
pop
in
pop
inc
popf
and
pop
stos
adc
cltd
sbbl
test
fwait
pop
ror
fildll
roll
lods
dec
add
imul
jg
mov
test
add
jg
std
out
into
loop
xorl
mov
inc
je
mov
lods
lahf
add
ja
ss
jle
sbb
lret
std
mov
pop
ror
pop
lahf
cmp
mov
in
out
stos
bnd
repnz
ja
cmp
mov
lahf
fnstcw
fldcw
aaa
outsl
ja
aam
pop
jbe
arpl
jnp
sbb
arpl
sbb
mov
adc
icebp
lds
mov
jmp
mov
cmp
or
xlat
sub
mov
in
xchg
scas
in
jns
into
int3
sti
sahf
loopne
scas
xchg
psubusw
cmp
inc
mov
repnz
push
mov
dec
fwait
in
sahf
pop
mov
mov
aaa
lcall
int
xchg
xchg
rcrl
sbb
mov
inc
jne
jge
add
add
xchg
incb
test
cmp
stos
call
outsb
cmp
or
cmpl
lods
push
sahf
pop
sbb
outsl
insl
pop
ss
sub
jb
mov
std
mov
lods
daa
adcl
lahf
or
out
es
mov
ret
jg
ljmp
ret
mov
int3
loope
shr
xor
ss
mov
and
aaa
das
notl
jae
mov
cli
sbbl
or
in
add
xchg
pop
imul
xchg
inc
inc
test
adc
inc
sbb
xor
mov
push
add
out
push
in
inc
out
or
clc
push
xor
xor
in
dec
mov
stc
addr16
push
cltd
je
sbb
dec
xchg
js
cli
call
dec
lcall
inc
lcall
es
sbb
pop
and
neg
lahf
dec
leave
xchg
pop
push
jg
pop
add
add
mov
outsl
mov
adc
cld
test
frstor
mov
inc
popa
cmp
pop
fmull
into
stos
lock
push
add
cwtl
mov
mov
imul
cmp
cmp
and
jmp
enter
mov
mov
dec
loop
xchg
out
cmpsb
aas
or
in
mov
repnz
cmp
jle
cwtl
jns
iret
mov
cmp
ret
enter
dec
mov
push
sbb
insb
jne
mov
and
jns
sub
fucomip
ja
out
iret
fucomip
loop
and
sbb
repz
scas
mov
fists
rolb
mov
psllw
mov
popa
sti
sub
scas
adc
mov
jecxz
ds
push
notb
or
cmp
jg
enter
out
mov
mov
xor
cs
add
rclb
dec
and
lods
dec
fstl
stos
ret
add
ljmp
shlb
mov
jne
xorb
fdivr
dec
rcrb
hlt
mov
pop
sub
inc
repnz
add
push
pop
mov
jb
adc
add
lahf
ljmp
xchg
in
fcompl
jge
add
add
inc
shll
sbb
mov
cmpsl
mov
shlb
rcr
out
or
or
jmp
cli
mov
int
dec
jne
rep
mov
fcomps
push
jle
push
dec
add
pushf
int3
jnp
ds
jg
mov
dec
or
iret
filds
sbb
fdivrp
in
pop
popa
hlt
movb
sub
pop
dec
js
push
pop
pop
fsubs
push
cmpsb
stos
iret
add
pop
cmpsb
rolb
cmpsl
cmp
push
jnp
aaa
and
jnp
andl
xor
ror
ja
xchg
loopne
in
mov
lock
outsl
iret
ja
cs
xlat
and
div
lahf
mov
fldcw
int3
or
xor
lods
rcr
aam
shrb
movsl
adc
outsb
pop
orl
mov
scas
fstpt
out
outsb
lret
mov
jge
mov
mov
out
sbb
sarb
popf
icebp
jmp
add
mov
dec
lods
jg
push
outsl
mov
jg
imulb
adc
mov
sti
mov
out
movsl
push
jg
pop
adcb
js
pop
adc
loope
inc
jb
dec
adc
enter
pop
push
mov
mov
sbb
add
push
pop
and
sbb
lcall
ret
fnstcw
std
popl
fsubrs
adc
pop
jmp
fmulp
pop
jle
mov
lods
outsb
enter
pop
mov
sbb
aam
adc
into
leave
imul
and
mov
add
leave
pusha
adc
push
ljmp
arpl
sub
arpl
cmpsl
repz
arpl
cmc
hlt
fs
xlat
pop
inc
push
pop
iret
sbb
push
sahf
push
or
in
sub
scas
push
movsb
adc
stos
or
fnstsw
ds
iret
mov
outsl
xchg
sti
lods
dec
mov
jnp
filds
mov
rcrb
js
push
jne
mov
addb
scas
sbb
ficoms
or
mov
loopne
into
aad
pop
mov
int3
test
mov
das
or
cmc
push
loopne
or
fsts
push
stc
add
add
sbb
in
ja
out
and
xorl
lahf
cmc
push
inc
movsl
mov
pop
jne
or
xchg
push
jg
fwait
pop
sbb
push
sbb
or
inc
adc
test
inc
sub
xlat
sbb
fcoms
loope
in
push
test
sbb
cmp
jg
cs
ret
out
fcompp
xchg
lahf
stos
xchg
shl
xchg
addr16
push
xchg
mov
testl
and
mov
xchg
push
sbbl
mov
sub
jmp
xlat
dec
out
lods
mov
fdivl
stc
or
arpl
movsl
cmp
cmp
push
jbe
mov
mov
add
sbb
hlt
ljmp
pop
sbb
jg
stc
dec
popf
xor
mov
and
test
mov
push
mov
lods
divb
adc
sbb
push
stos
pop
arpl
xchg
pop
xchg
aas
or
imul
lods
mov
inc
imul
or
xchg
pop
push
ljmp
jmp
mov
pop
xlat
sbb
in
jle
and
int3
dec
xchg
int
int3
int3
inc
scas
xchg
addr16
pop
sub
push
pop
insb
sub
dec
sti
cmpsb
push
xor
out
pop
arpl
test
test
testb
insb
adc
jp
mov
mov
icebp
push
mov
sbb
xlat
mov
popa
or
lret
scas
movsl
fcompl
loope
dec
pop
lret
in
cs
orl
aas
es
icebp
push
xchg
xchg
mov
pop
jmp
jle
data16
pop
imull
pop
add
in
jno
imul
loop
ret
in
or
and
push
repz
leave
lret
mov
cmp
pop
lods
dec
mov
cld
adc
out
pop
fcmovnbe
adc
int3
xor
mov
lods
cmp
cs
mov
cmc
jp
sbb
and
ds
mov
fwait
xchg
fwait
xor
jg
mov
dec
sbb
xchg
push
or
fsts
adc
jg
and
sahf
fcmovnbe
out
jmp
testb
cmp
shl
jg
lock
out
in
ds
out
dec
push
js
push
pop
sahf
ret
and
stos
mov
rorb
fldl
icebp
sbb
out
mov
pushf
ret
in
sbb
icebp
sub
pop
fdecstp
rorl
mov
shll
loopne
push
or
loope
xchg
cmc
cmp
imul
jno
xor
sahf
mov
sbb
imull
int
fstl
jle
push
cmpsb
popf
add
sahf
dec
outsl
cmp
add
or
aas
inc
lcall
mov
ja
leave
sahf
mov
cmp
popl
cmp
call
xchg
inc
and
xlat
add
std
int3
iret
ret
ret
and
imul
sub
push
push
pop
js
xchg
outsb
lret
ds
mov
jmp
lret
into
or
aad
adc
sbb
inc
push
mov
sarl
fyl2x
pop
mov
std
mov
cwtl
xchg
xorl
ja
addl
pop
inc
outsl
pop
sub
lret
sub
rol
pop
cmc
rcll
loope
mov
mov
rcrb
dec
scas
pop
call
imul
pop
int3
ja
add
hlt
loopne
ficoml
mov
jl
cmc
ljmp
dec
fistpll
jmp
cmc
lret
push
sub
push
xchg
push
cmp
ja
data16
mov
push
mov
ja
pop
mov
inc
jnp
out
shll
aad
or
mov
xrelease
dec
adcb
jmp
add
sbb
outsl
and
jmp
jno
stos
xchg
cpuid
js
xlat
jp
mov
insb
icebp
dec
cmp
loop
das
add
mov
pop
out
push
jmp
imul
jg
and
fwait
adc
sti
or
repz
lods
in
push
outsb
jg
lods
faddl
add
repz
scas
lods
fldt
sub
je
cwtl
adc
mov
xor
push
sub
sti
pop
fistpll
xchg
push
mov
dec
cli
jmp
out
mov
push
mov
sub
dec
imul
pop
lcall
ret
leave
cmp
xlat
ljmp
jge
test
out
pop
movsb
cmp
cmpsb
mov
sbb
xchg
push
imulb
inc
inc
stc
adc
fcomi
cvttps2pi
mov
inc
es
pop
or
xchg
leave
lods
mov
aaa
mov
cmp
inc
fnstsw
cmp
repnz
pop
mov
cmpsw
cmp
scas
test
sahf
cmc
stc
mov
out
ror
sbb
xlat
addr16
mov
fdivr
pop
mov
jge
adc
mov
push
fistps
jmp
and
sarb
dec
aad
int3
fnstsw
cmpsb
mov
xchg
adc
rcl
jo
dec
fwait
mov
push
mov
sbb
cmc
dec
rclb
stos
mov
push
outsl
movzwl
mov
insl
scas
sti
bound
or
pop
int3
mov
je
lods
neg
sub
push
sub
mov
fwait
push
int3
fildll
mov
fistpll
lahf
stc
out
sbb
mov
cltd
out
in
shrb
out
je
movsl
iret
mov
out
mov
pop
nop
out
mov
lahf
out
add
gs
mov
out
fdiv
sarl
test
fsubrl
cmp
mov
xlat
imul
not
pushf
adc
mov
mov
fcomps
mov
inc
mov
sub
rcl
xlat
dec
in
fsub
arpl
lahf
dec
iret
xchg
add
sarb
add
sti
icebp
js
repz
lds
sti
jbe
into
sub
iret
or
mov
dec
xchg
fld
repz
xor
in
jecxz
dec
cwtl
cmpl
lahf
add
xor
testl
add
iret
inc
jbe
mov
loope
jb
jmp
fistps
popf
outsb
stos
fsubrl
mov
stc
adc
or
enter
xchg
or
sbb
in
ljmp
push
sub
pop
cmp
sbb
adc
les
cmpsl
hlt
not
cs
sbb
int3
pushf
fildll
push
or
in
lds
mov
stos
cmovge
sti
adc
lcall
std
arpl
pop
fdiv
out
cs
cmp
push
mov
repnz
mov
mov
sub
cmc
pushf
repz
fdivl
or
lods
xor
clc
lock
mov
or
pusha
loope
mov
cli
mov
icebp
push
pop
in
mov
scas
sub
xorb
push
push
call
pop
in
dec
jmp
js
xlat
or
out
push
addr16
mov
in
addl
xlat
mov
clc
icebp
loopne
push
dec
addr16
addr16
xchg
and
add
and
mov
add
ret
and
mov
daa
jno
add
ds
or
ds
push
ret
sbb
pop
call
fwait
push
out
pop
cs
mov
hlt
sti
sbb
int3
lahf
add
movsl
repz
fwait
enter
scas
stc
out
mov
inc
out
fst
adc
scas
sbb
int3
subb
dec
std
push
cmpb
repnz
sub
cmp
push
inc
mov
lea
cmc
or
mov
and
add
leave
out
data16
fiaddl
arpl
mov
sub
or
repz
add
std
stc
and
out
out
mov
popa
pop
cmpl
cmc
stc
ds
fs
in
shl
test
mov
dec
cmpsb
subl
mov
sub
movsb
jo
out
jnp
mov
cmc
jecxz
pop
dec
mov
jns
jl
ja
xor
pop
test
fwait
in
xor
movsl
inc
ljmp
cld
out
jnp
or
jmp
orl
mov
pushf
push
mov
rol
mov
stos
mov
int3
movsb
ja
call
mov
dec
ja
inc
outsl
cwtl
in
adc
int3
test
insb
jl
es
jno
add
lahf
mov
dec
shr
push
inc
or
test
ret
shll
push
fistps
mov
ja
neg
sahf
mov
mov
inc
dec
xchg
loop
lock
insb
mov
mov
push
dec
mov
outsb
fidivrs
add
scas
cmpsb
mov
fmuls
movb
out
out
leave
sub
rcrl
rolb
imul
popf
inc
jmp
sub
sbb
mov
mov
cmp
repz
xor
ss
fwait
jecxz
outsb
shr
jne
jae
fcmovb
fisttpl
das
xchg
jge
and
xchg
out
xor
iret
mov
mov
sbb
mov
pop
es
call
cmp
pop
fcoml
jmp
push
sti
push
or
push
cmp
pop
dec
pop
push
sbb
jns
and
or
push
jne
mov
xchg
outsb
outsb
inc
sub
push
pop
scas
fstps
pusha
imul
adc
add
enter
xor
inc
xor
gs
lahf
lock
mov
sarb
scas
aas
cmp
cmp
les
jnp
out
orl
out
push
rcrb
outsb
mov
cmp
shlb
outsl
pop
push
call
cli
iret
jns
pop
out
sbb
fstl
jae
in
cmpsb
push
jnp
pop
stc
movl
out
push
push
repnz
test
mov
sbb
and
xlat
cmp
shrl
mov
sub
mov
xor
scas
and
sub
in
or
les
xor
push
mov
fst
dec
push
xchg
sub
pop
adc
lret
mov
rolb
or
pop
stos
inc
pushf
xchg
gs
mov
push
push
adc
fstl
sti
add
leave
out
add
mov
mov
and
or
jae
pop
sti
mov
or
rcrb
inc
rorl
arpl
icebp
pushf
leave
fldcw
ret
lahf
and
mov
out
and
jae
es
insl
jo
fldenv
dec
pop
repz
push
jne
and
fdivr
pusha
ret
test
in
sar
cmp
adc
push
xor
arpl
pop
add
ret
cld
pop
add
subl
pop
lcall
loopne
sarl
add
jbe
and
inc
aas
xchg
and
xchg
mov
jmp
pop
hlt
jmp
jnp
adc
loop
lods
outsb
ljmp
fwait
in
fwait
sbb
sub
sbb
fs
xchg
sub
lods
sbb
mov
sbb
mov
push
mov
loope
test
sti
pop
lahf
test
int3
dec
dec
mov
std
xlat
mov
enter
push
jmp
adc
fiadds
pushf
fwait
std
push
divb
cmpsl
pop
aaa
test
sub
mov
mov
std
mov
aas
jno
xor
dec
outsl
or
jp
ret
iret
push
cmp
arpl
js
notb
jb
idiv
inc
sti
shll
jno
icebp
call
sub
push
xlat
lods
push
sahf
mov
adc
ds
mov
jnp
sti
push
xchg
int
fisttpll
fimull
enter
lock
test
jbe
jmp
out
outsb
mov
push
shlb
je
xchg
jo
cmp
cmc
mov
and
mov
sub
jg
iret
aas
cld
shlb
mov
xchg
aam
dec
lret
pop
adc
push
int3
lods
sti
test
pop
pusha
sbb
sbb
mov
das
jmp
icebp
decb
pop
std
in
idivb
aas
push
pop
jg
sbb
mov
mov
repnz
out
aam
incb
sbb
gs
or
imulb
nopl
jg
pop
lahf
filds
sbb
pusha
dec
inc
mov
jnp
pop
sti
fdivrs
mov
pop
pop
cmpsl
sbb
jge
repnz
xor
xchg
push
sahf
pop
test
cmp
aas
pop
popf
sbb
xchg
pop
imul
aas
insb
or
pop
jg
js
fistpll
repnz
jmp
lock
cmp
loop
or
out
mov
push
fnsave
sub
pop
in
mov
jle
mov
jnp
pop
fildl
stos
pop
mov
mov
sbbl
rorl
cltd
cld
into
fdivrp
fucomip
sti
test
jp
pop
dec
fistpll
in
testb
cmpl
sahf
pop
movsl
jmp
and
fstpl
rorl
pop
dec
arpl
push
adc
mov
sbb
push
mov
out
mov
sbb
jb
push
repnz
fnstsw
xor
mov
roll
sbb
sete
scas
adc
mov
jae
aas
into
add
jl
add
jmp
popf
arpl
cld
push
jg
ja
pop
xor
cmp
ds
fbld
pop
mov
lahf
repz
aas
inc
ds
jle
pop
or
cmp
gs
pop
cmpsl
jmp
lahf
jnp
xlat
add
mov
jle
mov
call
scas
cmovge
jbe
sbb
sbb
pandn
jnp
mov
sub
jae
stos
xor
stos
shll
mov
jnp
xchg
push
mov
or
sbb
out
fsubp
xchg
mov
adc
lahf
inc
imul
dec
ljmp
cs
add
fstps
or
jnp
es
fmulp
lods
jle
mulb
ficomps
sub
cmp
jmp
push
inc
cmp
cmp
in
loop
mov
outsl
cs
fnstsw
inc
pop
popf
inc
cmp
cmp
decb
imul
inc
inc
idivb
cmp
mov
clc
jmp
push
adc
mov
aad
mov
mov
mov
sbb
ds
loop
mov
add
lods
push
fucomip
pushf
int3
ret
jns
cld
mov
scas
jle
mov
ret
jg
or
sbb
jae
jecxz
shrl
adc
or
dec
mov
into
arpl
sarl
cmp
sbb
dec
jb
lods
jl
sahf
xor
std
fwait
repnz
xor
jl
loop
lods
or
push
xor
cmp
fldl
ja
dec
mov
outsb
int
sahf
mov
out
std
jnp
push
dec
jle
fucomp
ret
pop
jns
test
mov
jl
jg
add
filds
jg
mov
mov
fdivrs
clc
ret
out
jg
sbb
outsl
pop
fstpt
cmp
insl
jnp
jg
testb
jp
pop
cltd
ja
jnp
xlat
pop
roll
ja
sar
out
mov
add
pop
jl
shll
mov
mov
pop
adc
ds
jg
mov
fucomp
cld
jnp
push
pop
aas
cmp
xlat
flds
idivb
mov
ficomps
hlt
jae
jg
jnp
ja
stc
clc
cs
add
jae
pop
ja
movsl
std
fstl
hlt
cld
lret
ja
shll
push
sbb
js
adcl
sti
lahf
add
ud0
ds
jmp
out
ja
stc
fisttps
inc
fcoml
push
jnp
mov
cmp
fbstp
jbe
ljmp
push
pop
push
mov
push
xor
scas
dec
inc
and
imulb
aam
in
mov
lods
in
idivb
pop
mov
jae
lahf
sbb
jnp
imul
sti
arpl
mov
jnp
mov
xchg
xlat
jnp
mov
add
push
jmp
mov
mov
pop
and
mov
testb
sbb
lea
iret
divl
jmp
mov
mov
cs
jmp
mov
add
fistpll
in
test
adc
mov
aad
pop
mov
mov
aaa
push
cmp
lahf
in
in
ljmp
arpl
cld
mov
jbe
xchg
inc
pop
lret
fnsave
lahf
pop
mov
insb
dec
hlt
pushf
fdivrl
mov
pop
cltd
lods
fistpll
jmp
mov
cmpsl
jnp
mov
sub
add
xchg
add
push
ffreep
mov
mov
testb
in
div
fisttpll
sub
pop
stos
and
arpl
xchg
pop
outsl
jg
inc
jbe
jg
jle
jnp
mov
out
xlat
jnp
mov
pop
xlat
jnp
mov
int
out
fidivrs
add
jl
das
fidivrs
mov
in
jge
lods
ja
int
cmp
mov
in
lods
ja
dec
popf
dec
or
mov
and
mov
sub
fwait
pop
popa
push
lock
out
mov
addr16
ret
mov
lods
mov
push
add
fidivrs
mov
and
sti
sbbb
outsb
aas
jnp
imul
insb
fistpll
mov
mov
mov
outsl
dec
mov
repnz
outsl
mov
out
in
sbb
dec
jge
popf
mov
jae
mov
mov
jnp
mov
negb
jnp
mov
lods
out
push
push
dec
shrl
mov
idivb
pop
outsl
dec
pop
pop
aam
sbb
movsl
hlt
sarb
and
adc
jge
pop
cmpsl
idivb
sti
sub
add
test
push
adc
jge
loop
inc
inc
repnz
mov
sbb
loope
inc
fsubl
cmpl
jae
fistpll
fisttpll
ja
nop
sub
fdivs
mov
jb
xchg
cmpb
mov
cs
pop
mov
inc
stos
pop
aas
mov
xor
push
ret
mov
cmp
cmp
ret
xlat
jp
test
filds
jnp
lea
pusha
mov
pop
adc
add
fdiv
and
mov
pop
sbb
fistps
mov
jae
aas
out
inc
mov
lods
int
fbstp
mov
in
xchg
out
cs
scas
sub
lcall
ja
scas
jae
jg
fdivrl
pop
adc
push
cld
aam
mov
fistl
cmp
or
in
push
lds
push
adc
pop
das
shl
imul
pusha
repz
dec
imul
adc
mov
popf
mov
fsubrs
jl
fnstsw
inc
cmpl
out
scas
das
fucomip
mov
aad
mov
enter
adc
jg
idivb
jg
jl
fldl
andl
pop
mov
out
mov
std
aaa
sbb
jg
inc
fidivrs
mov
shl
jl
mov
neg
out
movsl
cmpsb
aad
fbstp
fbld
xchg
mov
scas
fistps
hlt
adc
out
cmp
inc
sbb
fsubrp
xor
and
outsl
ret
ss
loope
cmc
adc
in
cmpsl
pop
rcl
fnstsw
ja
rclb
pop
movb
std
idivb
stos
jge
repnz
lods
pop
jmp
pop
roll
mov
into
cmpl
xchg
out
mov
movsb
sub
loopne
idivb
pop
pop
jo
cmp
std
sbb
sbb
adc
jg
icebp
hlt
cld
adc
cmc
lahf
imul
and
test
shl
roll
jge
lock
pop
imulb
jecxz
mov
sbb
add
das
pop
aas
rcll
sbb
mov
rcll
outsb
dec
jne
cmp
jns
jbe
in
inc
sbb
popa
movsb
lret
sbb
sarl
dec
ffree
cmp
cli
jle
inc
push
idivb
cmp
add
divb
ja
rcrb
xchg
test
popa
fs
jne
out
and
jg
sub
js
mov
cmpb
ljmp
sbb
sbb
repnz
imulb
sbb
xchg
inc
cmp
jl
and
jns
inc
xchg
fidivrs
pop
shlb
out
pop
mov
inc
push
cmc
jle
loope
pop
fistpll
xchg
pop
pop
cmp
xchg
mov
mov
stc
movsl
loope
cmp
adc
jge
inc
lods
fnsave
add
hlt
mov
fstp
fdivr
jge
std
sahf
movsb
xchg
test
lahf
mov
jne,pt
js
inc
dec
push
aas
les
jg
mov
fbstp
popf
nop
stc
pop
in
mov
les
rcrl
adc
sbb
xchg
ficomps
pop
ffreep
imul
push
lods
fnstsw
testb
pop
pop
mov
pop
ja
ret
lods
pop
jne
cmpsl
pop
mov
sbb
fwait
mov
cmp
fwait
mov
jg
jle
inc
or
mov
mov
mov
add
adc
idivl
outsl
jb
int
xchg
in
jnp
xchg
xchg
cld
push
sub
inc
inc
cld
fsubr
test
ds
test
dec
cmpsb
aad
or
jne
jns
cmpl
in
push
xchg
loope
ret
out
imul
pop
pop
mov
filds
aaa
mov
jbe
sarb
pop
mov
sahf
lret
dec
aas
jne
cmc
jae
jg
jae
fdivrl
sbbb
negb
add
ljmp
jl
mov
jne
notb
fcompl
pop
imul
and
pop
mov
ja
jnp
push
sub
jge
mov
jg
es
jnp
mov
pushf
mov
in
fnstcw
push
mov
insl
hlt
sub
cmpsl
mov
mov
jne
lahf
rorl
adc
pop
cltd
ja
mov
repnz
jnp
mov
fimuls
outsb
fidivrs
xchg
fucomip
in
repnz
fmull
clc
xor
insb
inc
and
cmpsl
idivb
dec
jnp
fstpl
mov
add
jge
cs
mov
jnp
popf
fistps
pop
scas
shrl
scas
mov
iret
filds
mov
imul
rcrb
sahf
iret
imul
popf
jp
add
sbb
adc
fnsave
jnp
popf
jbe
cltd
cmpsl
jnp
popf
jbe
cltd
cmpsl
adc
bound
sbb
adc
fstpl
in
jmp
loopne
cmpsl
adc
lcall
jp
ja
adc
arpl
cmp
mov
pop
or
rsqrtps
ja
sti
imulb
pop
fucomp
jae
popf
mov
cmc
imull
jbe
psubsw
and
push
mov
mov
sub
in
dec
repz
mov
mov
jl
stos
jmp
movsl
jb
sahf
aad
ds
in
mov
iret
jmp
xchg
jnp
adc
divb
not
aaa
insb
dec
out
outsl
mov
dec
ja
cmp
ja
push
jnp
scas
scas
sub
mov
jnp
and
push
fdivrl
testb
out
pop
frstor
inc
mov
cmp
sbb
sub
mov
fwait
scas
add
pop
inc
lcall
inc
pop
mov
test
mov
subb
mov
addr16
mov
in
fidivs
pop
jg
pop
dec
pop
in
idivb
fistps
in
imul
mov
mov
jge
jg
adc
mov
div
jnp
mov
ja
arpl
fdiv
out
ja
mov
neg
add
adc
mov
xchg
mov
imulb
add
mov
lret
std
xlat
or
mov
pop
fst
repnz
call
fistpll
adc
sub
jnp
imul
pop
cmpsl
add
mov
dec
jge
sub
sbb
in
add
lret
dec
jb
scas
mov
sbb
mov
or
fcmovne
imul
mulb
xlat
pusha
das
mov
pop
or
lods
sahf
mov
or
cmp
in
jecxz
dec
fidivrs
mov
push
and
sbb
inc
std
xor
pop
mov
jns
push
mov
dec
xor
dec
jo
pop
push
push
or
pop
in
xchg
mov
pop
jl
sbb
xchg
jmp
mov
adc
cmpsb
aas
sub
ret
jg
out
adc
mov
gs
aas
adc
sarl
push
shrl
push
push
fists
out
pop
jae
mov
and
out
sub
and
xchg
outsb
xor
jbe
mov
clc
push
fidivrs
push
add
ficoms
pop
aas
push
idivb
movsl
arpl
notb
jmp
adc
dec
mov
pop
cmpsb
xchg
mov
sbb
fbld
leave
mov
fnsetpm(287
mov
mov
pop
sti
jg
lret
push
icebp
aas
jg
push
sbb
push
cmp
sbb
xchg
jg
outsl
mov
push
roll
inc
adc
mov
jge
mov
jle
out
jl
mov
mov
lret
sbb
clc
in
xchg
int
insl
dec
sbb
rcrl
cmpsl
pop
inc
mov
sbb
jnp
jl
sub
outsl
cld
leave
pushf
lods
mov
dec
mov
iret
pop
jg
sahf
and
lahf
test
dec
std
ds
ljmp
pop
cmp
fcmovb
cltd
cmc
cltd
sub
std
mov
xchg
sahf
xchg
leave
scas
jp
jnp
mov
faddl
sbb
mov
pushf
inc
adc
mov
jne
jmp
movl
shrl
jnp
mov
in
mul
mov
data16
fstpl
ss
jle
ja
jmp
mov
cmc
inc
outsl
inc
inc
cmp
dec
jo
ja
in
pop
out
sti
pop
mov
inc
std
fcoml
jge
sahf
aas
fucom
shll
mov
pop
out
cmp
pop
pop
jns
pop
ffreep
loope
fidivs
mov
out
fnsave
mov
inc
inc
cmp
lahf
ds
or
aas
out
mov
ljmp
fbstp
imul
mov
or
pop
jge
idivb
jnp
push
lcall
mov
fdivrl
fnstsw
fistl
decb
inc
and
aad
dec
cmpsl
jo
dec
jnp
pop
rorl
mov
pusha
jle
cmp
push
mov
mov
pop
aas
sti
loope
stc
cli
nop
imull
aaa
mov
loopne
mov
mov
stos
std
stos
popa
jg
in
loop
movsb
jae
dec
cmpsb
push
mov
pop
fnsave
jnp
fbld
gs
mov
out
push
out
jg
ja
push
jg
mov
testb
frstor
fnstsw
das
ljmp
addr16
mov
aas
xchg
fmuls
jg
mov
mov
jmp
fistpll
xchg
cld
mov
pop
ds
outsl
sub
aam
into
jnp
sbb
xor
popa
jae
cmc
dec
adc
mov
ficoml
js
stos
scas
inc
mov
sahf
jg
jmp
adc
mov
outsb
daa
mov
xchg
cmpsl
pop
ds
rcrl
jno
sub
inc
or
repz
add
sarl
or
xchg
add
sarl
mov
pop
jmp
fnstenv
sub
push
out
rorl
out
shll
adc
pushf
daa
mov
or
clc
jle
jecxz
push
neg
sbb
sbb
movsl
sub
pop
add
sub
dec
stos
jns
out
mov
cmp
sub
jp
pop
mov
jnp
mov
aas
rcll
cwtl
cmp
pop
cmp
aas
mov
add
ljmp
pop
negl
imul
sbb
js
scas
aaa
mov
fbstp
shrb
cmp
xchg
out
jg
ja
mov
adc
dec
imulb
mov
aad
cmp
aad
sbb
mov
xor
dec
lods
mov
dec
cli
jle
mov
jg
jge
fbld
tzcnt
xchg
cmp
jmp
mov
jg
cmp
negb
rclb
in
mov
pushf
sub
adc
repz
cmpsl
adc
pop
cmpsl
fistps
shrb
xor
mov
mov
mov
mov
rcrl
sbb
pop
repnz
inc
mov
test
aas
cmp
outsl
and
and
inc
cmp
xorb
dec
jnp
xlat
aas
fs
inc
iret
pop
mov
js
stos
inc
inc
sbb
repz
xchg
jg
shrb
cli
cld
ja
mov
cli
negb
cwtl
jno
mov
sti
sub
sub
outsb
xchg
pop
jns
nop
xchg
jge
pop
xchg
lahf
mov
jecxz
mov
test
mov
xor
jle
jnp
push
outsb
push
mov
mov
imul
jl
psadbw
push
mov
bnd
xor
or
scas
push
mov
stos
out
pop
ja
and
test
call
push
scas
cmpsb
mull
shr
dec
mov
out
mov
jle
jl
inc
repnz
cmpsl
cmp
ds
rcll
ds
pop
inc
dec
jg
repnz
aad
mov
sti
dec
mov
clc
pop
mov
sub
movsl
fwait
aas
fbld
aaa
das
push
pop
fcompl
ja
pop
push
stos
jl
mov
pop
sbb
or
mov
sti
mov
insb
fdivr
leave
and
mov
mov
push
add
jle
ret
or
stc
mov
push
add
inc
xchg
cmp
call
test
xor
mov
push
aam
jge
push
outsl
pop
cmpsl
fistps
mov
cmpsb
dec
fidivrs
fbld
mov
mov
mov
cltd
in
iret
mov
test
mov
jg
lods
popf
fistps
xchg
out
jle
fistps
mulb
call
idivb
add
add
in
testb
stc
ja
cli
lods
pop
mov
inc
in
cmp
sub
aas
xlat
mov
adc
fwait
jae
hlt
jae
shrb
jnp
lock
jl
jae
aam
in
dec
out
fcomip
inc
jle
jge
andl
mov
fwait
idivl
idivb
mov
mov
dec
mov
add
jl
cmpsb
xor
fnstsw
idivl
test
dec
std
loopne
xor
imul
xor
mov
mov
repnz
in
mov
sbb
gs
xchg
dec
jns
mov
fidivrs
in
cwtl
inc
iret
std
in
repnz
popf
es
jnp
mov
outsb
fiadds
stos
mov
imul
jmp
out
ficoms
fsubs
cmc
outsl
in
imul
mov
push
xchg
adc
stos
pop
ja
xchg
out
das
xchg
insb
mov
push
mov
mov
insb
test
fucom
test
adc
scas
mov
ds
jmp
loop
lahf
mov
xchg
ja
cmpsl
notb
pop
mov
mov
fistpll
repnz
cmpsl
ljmp
leave
jg
mov
scas
neg
jnp
jbe
test
ja
cmpsl
cmp
fdivrs
mov
xchg
outsb
sbb
fnstsw
mov
insb
decb
iret
jae
fisubrl
sbb
jle
cmpsl
mov
out
pop
push
out
ljmp
out
fs
cs
out
push
jle
scas
mov
mov
aas
mov
xchg
int3
sahf
loopne
jnp
out
outsl
inc
and
or
scas
xchg
push
out
jg
repnz
cmc
out
add
sarb
scas
aad
aad
ljmp
adc
mov
mov
insb
out
mov
not
pop
sbb
ljmp
push
fcompl
negb
outsl
in
idiv
jnp
outsb
mov
sbb
fsubrl
dec
push
into
sbb
mov
outsl
aam
jbe
fwait
xchg
push
and
rcrb
jns
jns
sti
into
pop
add
xchg
dec
js
inc
push
push
ret
movsl
cmp
decb
dec
std
js
out
in
sub
mov
fwait
scas
jne
popf
divb
pop
jg
fdivr
mov
das
or
scas
mov
mov
push
sbb
sbb
push
inc
nop
and
das
rorb
xchg
ja
aaa
jmp
or
mov
jecxz
adc
fucom
lcall
in
leave
cwtl
sbb
pop
lods
outsb
pop
fidivrs
loop
lods
sahf
stos
sub
rcrl
aad
mov
ds
fcompl
fdivrl
repnz
cmpsl
outsl
cmp
fsubrp
fldl
mov
test
sarl
mov
lahf
mov
inc
outsb
ja
fists
int3
jmp
mov
pop
fisttpl
or
adcl
and
mov
cs
in
fnsave
mov
fnstenv
testb
cwtl
mov
leave
mov
jmp
xchg
pop
jo
cli
jnp
cld
mov
scas
pop
jnp
sub
in
and
mov
jns
pop
ljmp
scas
pop
hlt
jnp
outsb
into
ja
mov
mov
push
hlt
call
mov
sub
sub
orl
xchg
mov
pop
push
pushf
insl
out
cld
ja
adc
pushf
inc
cs
jnp
jb
mov
faddp
sahf
mov
cmp
testl
pop
push
stos
repnz
fidivrs
iret
in
jg
add
pop
sbb
adc
inc
add
scas
fldl
adc
out
sahf
push
dec
sbb
pop
sub
xchg
pop
lds
jbe
pushf
push
pushf
jb
jp
out
mov
pushf
fisttps
pop
in
int3
cmpsb
pop
lods
sahf
aas
pop
fnstcw
imulb
jns
mov
mov
mov
fsubrl
vcvtss2si
insl
mov
pop
mov
mov
inc
aam
ficomps
clc
test
in
mov
push
inc
mov
adc
sub
pushf
jns
int
fcomp
xlat
pop
mov
cmp
lahf
jp
sti
xor
mov
fstp
mov
out
mov
xchg
mov
mov
mov
fisttpl
not
xchg
mov
cmp
test
and
pop
lcall
jns
mov
ja
dec
addr16
mov
dec
in
inc
dec
dec
insb
and
pop
cmp
pop
sahf
mov
movsl
das
cli
cltd
imull
pop
lahf
pushf
scas
pop
scas
jnp
outsb
out
ja
mov
or
sbb
out
push
mov
or
mov
xor
cmc
ja
pop
fwait
xchg
cwtl
pop
mov
mov
sahf
cmc
mov
xor
dec
push
fdivrl
arpl
adc
imul
mov
mov
iret
add
out
jnp
mov
ret
pop
lods
sub
xor
in
scas
in
jl
push
fbstp
in
fildll
fwait
data16
mov
xchg
popf
cmp
out
cmpsl
pop
mov
jl
aas
scas
sti
adc
ja
jle
xchg
cmp
pushf
mov
insl
push
jno
les
mov
dec
pusha
cmp
lods
mov
inc
jle
scas
or
fucomp
jg
outsb
jb
sahf
fnsetpm(287
mov
das
repnz
sub
adc
pop
in
mov
mov
sahf
imul
fwait
mov
lcall
in
mov
xor
xchg
cmpsl
mov
mov
enter
mov
rolb
cmp
sbb
pop
inc
addr16
jnp
mov
mov
int
insb
xchg
push
add
cld
in
push
test
arpl
xchg
jbe
add
popf
arpl
pop
mov
loop
or
inc
xor
mov
cmp
adc
into
pop
jb
inc
adc
lahf
in
xchg
repnz
out
roll
sub
lret
ja
mov
sub
stos
cmp
sub
or
popf
xchg
iret
fstpl
out
push
imul
sahf
jnp
inc
sahf
mov
stos
js
stc
push
out
pushf
jns
les
mov
jl
fldenv
out
mov
jle
or
sub
ds
sti
and
inc
rcrl
mov
movzbw
ror
setle
mov
setae
stc
rcr
call
rcrl
dec
nop
mov
ljmp
lret
sahf
int
js
pop
sbbb
popf
out
xor
and
mov
xor
cmp
fists
ds
lahf
jo
loop
out
dec
loopne
pop
orb
cmpsl
adc
pop
cltd
bswap
test
pop
or
cmp
mov
subb
aam
enter
shr
in
enter
rol
sub
or
out
mov
pop
jne
pop
cmp
sub
jbe
jb
push
add
insl
mov
inc
mov
orb
cmp
ja
mov
sbb
fisttps
inc
rcrl
cld
inc
xchg
sar
mov
lret
jp
xor
sub
into
inc
jg
fwait
out
xchg
ds
pop
mov
inc
data16
lds
ljmp
imul
stos
shlb
cmp
sub
ja
or
push
ds
and
jb
jle
sub
or
cmpsb
jmp
flds
outsl
push
cmpsl
inc
into
ljmp
rorb
out
jno
mov
dec
adc
in
fbld
push
sub
mov
cmpsb
push
sbb
idiv
xor
push
and
jnp
adc
fnstsw
and
in
xchg
push
xchg
xor
xlat
jmp
repz
mov
rcll
sub
adc
push
mov
outsl
cld
xchg
adc
subb
inc
sbb
call
jo
jmp
out
stos
test
repz
sub
or
push
cmp
mov
xor
pop
sbb
inc
pop
inc
and
stc
repnz
cmp
mov
sbb
stc
idivw
js
cltd
fistl
iretw
jne
jnp
lret
pop
leave
popf
insb
mov
and
in
sbb
shrl
mov
add
outsl
cmp
sub
fs
inc
js
pop
xchg
sub
push
pop
bound
jle
sub
jbe
or
aaa
aam
add
push
pushl
pushf
lea
jmp
add
dec
push
je
xchg
aaa
xor
pop
pop
inc
daa
add
je
out
push
mov
lods
fcomps
das
mov
pop
or
je
flds
sub
cld
fdivrl
mov
push
ss
dec
int
mov
sahf
and
sub
and
and
xchg
imul
outsb
adc
test
xor
inc
pop
je
pop
dec
adc
je
push
repnz
jno
push
dec
adc
int
cmpsl
add
jnp
pop
add
daa
push
sub
add
jg
mov
popf
mov
movlhps
add
inc
mov
cmpsl
rorl
test
roll
hlt
sub
popf
mov
sub
sbb
imul
pop
sbb
and
and
in
cltd
cmc
fnop
scas
movsl
das
mov
ljmp
daa
sbb
mov
xlat
sbb
push
fs
insb
inc
push
inc
sub
or
out
jle
dec
adc
dec
jnp
fnsave
jo
or
jo
adc
sub
xor
xchg
push
js
inc
insb
fnstsw
pusha
inc
sub
icebp
mov
or
imul
cwtl
dec
mov
mov
and
xchg
add
add
jae
movsb
test
push
sbb
movsl
gs
inc
or
cmp
out
scas
lea
mov
sarl
sti
outsl
lods
dec
mov
sub
adc
sub
adc
push
arpl
push
ja
and
push
push
dec
sub
aaa
adc
xlat
pushf
mov
jmp
aam
mov
out
dec
sub
inc
cmp
jno
inc
add
adc
push
fmuls
and
rcll
pop
cs
clc
push
out
jbe
mov
or
sbb
lods
bound
mov
mov
insl
addb
xor
dec
adc
cmc
adc
outsb
popf
cli
fs
scas
xor
repz
or
popa
fiaddl
sub
xor
sub
aaa
movl
movsb
ficoml
and
btc
mov
setle
or
inc
push
sar
push
lea
pusha
and
shrd
mov
mov
shl
mov
bsf
mov
shl
rcr
mov
pop
inc
call
aaa
push
cs
int3
call
add
cmp
adc
insb
jo
adc
push
lret
add
insb
cmp
or
lahf
inc
mov
jl
mov
test
mov
jmp
mov
mov
pop
lcall
int
pop
push
mov
dec
xor
sub
insb
push
xchg
scas
dec
lock
dec
adc
or
lods
loopne
push
dec
pop
cmc
push
dec
vmovntps
in
sti
jg
sar
int3
cld
mov
clc
cwtl
aam
sub
lods
outsb
dec
push
cmp
dec
push
adcl
add
sub
adc
mov
jne
aam
incl
and
mov
das
push
pop
inc
mov
int
dec
mov
cmp
sub
mov
addl
push
push
rclb
mov
xor
insb
xor
jl
sbbb
iret
mov
cs
js
mov
mov
cmp
dec
cmp
out
fists
pop
jo
xor
fs
js
dec
dec
sub
xor
dec
sbb
cmc
pusha
sbb
outsb
push
dec
es
xor
inc
cs
inc
outsl
testb
or
jb
pop
add
mov
xor
inc
fidivs
push
mov
aas
in
adc
push
mov
and
ss
dec
out
or
aam
add
sbb
pop
stos
xchg
dec
call
fmulp
out
es
cmp
push
pop
dec
xchg
aam
pushf
xchg
lods
dec
and
adc
xor
rolb
test
push
aaa
in
inc
mov
add
push
push
data16
xor
cs
adc
sub
xor
cwtl
xchg
pushfw
popw
jmp
test
lea
mov
cmc
pushf
add
push
jmp
pop
into
notb
enter
imul
pop
daa
imul
or
dec
dec
dec
lret
add
lret
ficoms
push
mov
sbb
and
mov
mov
adc
fs
adc
or
test
popf
xchg
xchg
mov
cltd
or
xor
test
mov
out
jecxz
sub
xor
pop
pop
add
dec
outsl
popa
fs
imul
add
shlb
jp
dec
push
inc
cmp
cmp
push
jp
sub
pop
cmp
xchg
add
or
jb
js
cmp
out
cltd
aad
mov
mov
hlt
or
xchg
ficompl
nop
mov
xor
ja
mov
pop
pop
push
and
scas
adc
and
mov
mov
dec
inc
pop
jno
push
dec
adc
xor
or
sub
aad
movsl
icebp
xchg
test
aad
stos
lret
mov
shll
clc
push
popa
lret
pop
shlb
push
in
xchg
in
out
cmpsb
inc
add
push
and
popf
jb
in
cmc
adc
adc
pushf
xchg
pop
pop
leave
imul
pop
in
inc
push
mov
dec
cmpl
ja
mull
sub
sub
pop
and
fcomi
push
in
mov
sar
aad
fldln2
mov
icebp
lods
loope
shrl
or
nop
push
insl
add
dec
gs
jo
jb
add
cli
ret
cld
stos
into
lret
mov
test
movsb
hlt
mov
cwtl
in
mov
pusha
push
push
aas
inc
add
addl
int3
cmp
lds
ss
mov
jg
ss
sbb
push
push
adc
fidivl
push
push
enter
daa
and
push
mov
mov
push
aas
push
cwtl
mov
or
sub
inc
inc
sbb
add
test
jns
adc
xor
add
cmpsl
cltd
in
outsl
adc
shl
jg
call
out
mov
mov
scas
push
jg
inc
xor
sbb
mov
mov
sub
cli
fists
ss
cmp
lahf
out
daa
je
icebp
sub
testl
push
into
xchg
add
inc
lock
mov
in
in
test
lea
lea
pop
xor
push
inc
sub
loopne
pop
repz
inc
rorb
outsb
jl
ja
daa
pushw
xor
lret
xlat
cwtl
cmp
cmp
out
sahf
adc
ret
mov
ljmp
stos
nop
repnz
loop
outsl
aad
ljmp
repnz
pop
mov
out
scas
lcall
jg
arpl
pop
outsl
bound
pop
jg
jo
lea
loop
repnz
repz
aaa
mov
stos
lock
ds
xor
jb
inc
or
lods
pop
sbb
daa
daa
or
bound
inc
xchg
pop
aam
xor
inc
fcompl
mov
ja
sti
and
sbb
sbb
jo
dec
mov
lret
jns
cltd
pop
fstpt
addr16
out
fldcw
mov
neg
jmp
fildll
mov
sti
or
stos
fistpll
lahf
jg
data16
es
ja
cld
outsl
std
mov
push
fnstcw
mov
adc
testl
add
jl
idivl
adc
sub
sub
add
mov
cmpsl
or
xor
push
sbbb
inc
arpl
ret
out
addl
fwait
lahf
sti
cmpsl
leave
adc
ret
mov
out
das
es
add
cmpsb
pop
sti
add
das
cmp
out
jecxz
std
clc
ret
mov
outsl
xchg
ficoms
fnsave
or
repz
into
mov
aaa
scas
pxor
das
mov
out
pop
sbb
add
jl
mov
pop
data16
fucomi
addl
or
fisubrl
pop
into
aas
jnp
jl
cld
iret
mov
sub
or
sarl
mov
lahf
mov
sub
jecxz
scas
add
int
negl
inc
in
xchg
repz
jnp
add
jg
mov
les
push
inc
iret
sbb
clc
or
lock
mov
fidivrl
int
adc
sbb
ficomps
push
mov
mov
outsb
sbb
rolb
push
out
jge
adc
repnz
push
aas
dec
loope
rcr
xor
dec
out
mul
in
fld
icebp
scas
adc
add
cmp
arpl
nop
int3
xchg
clc
aad
enter
jecxz
test
mov
repz
jns
jg
mov
pop
xor
ffree
sub
pop
ror
pop
adc
pop
and
ret
fwait
push
xchg
sbb
loope
je
pop
push
loope
or
in
pop
loope
scas
mov
into
mov
lods
into
xlat
mov
inc
cmp
push
xchg
jge
fcompl
lcall
bnd
push
mov
xor
outsb
fistpll
cmpsb
std
fbstp
pop
div
pushf
adc
leave
sti
je
sti
inc
and
sbb
repz
gs
mov
ja
sbb
or
mov
call
mov
adc
leave
jbe
pop
fisttps
dec
and
insb
or
push
jp
xchg
aas
jne
mov
xchg
fisttps
mov
fbld
mov
jg
mov
push
fildll
sbbb
movsl
pop
mov
mov
pop
stos
enter
add
inc
fwait
out
jnp
cs
add
scas
sub
mov
addr16
fwait
xor
loope
test
int
in
das
scas
movsb
sti
pop
cltd
test
scas
xor
dec
scas
test
mov
add
jge
pop
scas
fcoml
scas
out
ljmp
fucomp
insl
out
imul
push
out
sub
ds
jnp
filds
jnp
cmpsl
iret
and
repnz
mov
xlat
lea
xchg
sahf
inc
ds
iret
pop
xchg
iret
xchg
cmc
and
sahf
add
adc
ds
pop
xchg
lahf
xchg
rcr
lods
sahf
push
pop
addr16
rcll
js
pop
mov
jns
push
sahf
add
dec
mov
or
jns
mov
mov
add
push
pop
sahf
es
sub
sahf
lods
or
iret
mov
call
stos
pop
and
and
iret
stos
pop
sahf
push
loope
sub
sahf
shl
cltd
or
jmp
fildll
aaa
push
shll
sbb
mov
ds
xor
fisubrs
test
into
loope
int
dec
adc
repz
and
ret
dec
cmp
pop
cli
mov
pushf
repz
je
cltd
popf
cltd
fistpll
fisttps
frstor
neg
dec
push
test
sarl
lock
pop
fidivrs
mov
xchg
cmp
sbb
add
out
and
xor
lcall
jl
aam
pushf
jno
jns
insb
stc
aad
mov
jg
lock
xchg
mov
es
jnp
mov
ss
inc
sti
sub
insl
xor
jge
ja
out
je
in
add
jecxz
cs
push
jecxz
out
movsl
jecxz
xchg
sahf
sub
mov
and
pop
jge
jecxz
adc
add
jg
fisubrs
and
mov
lds
adc
jecxz
cwtl
and
sbb
jecxz
ret
outsl
sbbl
mov
negb
test
mov
xorl
adc
and
adc
jecxz
in
popa
out
mov
aad
pop
jecxz
mov
jecxz
cld
out
rolb
dec
mov
mov
sbb
shl
fdivrs
aaa
jecxz
outsl
movb
jl
sub
mov
lcall
loope
fwait
and
xchg
sarl
push
out
aad
sub
testb
xor
pop
test
lds
mov
aam
lods
fimuls
mov
inc
pushf
fadd
ja
fidivrl
jg
mov
pop
in
add
jecxz
jl
mov
jecxz
push
mov
out
iret
xlat
loope
mov
add
push
add
cltd
push
jecxz
filds
int
mov
fists
or
push
scas
sub
sti
mov
add
adc
scas
adc
bound
xchg
pop
dec
jmp
pop
dec
into
scas
xchg
ret
jns
ss
push
jns
mov
fsubr
sti
fdivs
iret
subb
insb
xchg
and
lret
scas
jnp
sbb
mov
mov
les
pop
push
in
scas
pop
pop
xchg
sbb
push
sbb
out
cmp
pop
xor
jge
xchg
loopne
sub
xor
mov
cmc
inc
jl
shrl
xor
mov
cltd
jns
fistl
xlat
cs
ss
dec
cmc
push
fdivrs
push
stos
clc
ds
fcompl
sub
and
out
mov
xlat
in
mov
ljmp
ja
mov
out
xlat
sub
fucomi
idivb
sub
loop
jmp
jb
xchg
push
pop
loop
cmpsl
mov
sub
out
cli
scas
aas
xor
sub
in
push
jp
mov
pop
int
or
in
outsb
std
addr16
mov
pop
pop
pop
daa
lcallw
jbe
int3
fdivrp
insb
outsl
pop
ja
inc
gs
cs
scas
ss
xlat
aad
scas
jg
stc
fs
loop
jg
out
mov
mov
cmc
test
fdivrl
stc
adc
mov
in
xlat
ljmp
icebp
sbb
mov
push
outsb
movsl
and
dec
jnp
cltd
iret
lret
jmp
std
out
jbe
bound
jne
into
mov
mov
or
lods
jb
lcall
mov
xor
mov
rcll
pop
mov
aaa
xchg
ss
push
fyl2xp1
dec
lret
std
pop
outsb
repz
stc
and
frstor
jge
add
jmp
sbb
std
cli
adc
pop
int3
jmp
cmp
pop
popl
neg
jns
out
fstpt
outsl
sti
fs
lahf
jns
xor
adc
mov
lds
xor
imul
pop
outsb
pop
pop
addr16
pop
mov
jecxz
mov
jae
ljmp
jnp
out
data16
imul
xor
or
xchg
push
fstp
cmpsb
loop
jae
mov
sti
mov
jle
ret
popf
pop
in
dec
mov
dec
outsb
idivl
movsb
mov
testb
xchg
lods
push
repnz
test
sti
push
mov
dec
outsl
xchg
mov
faddl
das
lahf
and
jne
into
jle
add
test
cli
repz
rolb
enter
lret
aas
aad
add
into
cmp
mov
outsb
fnstsw
ds
ds
lret
sub
aas
cld
pop
xchg
fidivrl
insl
shll
lea
imul
outsl
or
ja
int
cmc
in
or
mov
jae
mov
outsb
ss
inc
aas
jnp
mov
jge
cwtl
push
rcrb
test
xlat
mov
push
mov
orl
mov
mov
repz
jle,pt
roll
sbb
xchg
mov
pushf
fistps
ja
cmp
aas
pop
bound
lcall
cmp
or
popf
sbb
movsl
lret
stos
sbb
stc
mov
push
dec
repz
or
mov
pop
aas
mov
push
and
pop
or
aas
pop
mov
lods
imulb
sub
inc
pop
out
out
adc
cmc
pop
mov
pop
cmp
sub
int3
and
jge
sbb
mov
mov
ret
push
mov
push
pop
or
or
xlat
int
mov
arpl
xchg
pop
sub
sbb
out
clc
sub
clc
jb
or
popa
std
ds
outsb
fs
push
aaa
enter
pop
mov
xchg
push
jnp
insb
roll
lret
or
fisubs
sbb
out
cmp
lcall
mov
in
shlb
data16
bound
jg
shl
clc
pop
add
push
fnstsw
mov
stos
mov
jg
sti
insl
sbb
or
cmpb
jmp
mov
mov
mov
lcall
stc
xchg
outsl
xchg
ficompl
sbb
lods
inc
fidivrs
cs
es
mov
push
cmpsl
lahf
out
outsl
mov
sbbb
jae
push
mov
xchg
popf
sub
repz
sub
sbb
push
lods
jl
mov
es
ret
adcb
ljmp
dec
push
lods
jle
mov
gs
out
xchg
ss
test
das
fidivrs
xor
sub
outsl
mov
pop
mov
popa
xor
cmpsl
hlt
in
out
cmp
leave
sar
lcall
out
cld
scas
notb
outsl
mov
int3
mov
addr16
cmpb
mov
push
andb
fdivl
scas
add
ds
into
js
pop
jnp
pop
in
pop
mov
cli
jge
clc
arpl
jns
mov
mov
mov
aad
insl
xchg
adc
shrl
xorb
std
insl
jg
lret
add
nop
mov
imul
push
int
ds
and
movsl
adc
into
aas
imul
mulb
fwait
sahf
addr16
or
jl
sarb
mov
mov
mov
mov
sahf
das
ljmp
or
xlat
das
cwtl
cmp
mov
repnz
pop
fisttpll
cltd
add
xchg
jl
dec
jl
rclb
sub
stos
aas
pop
sbb
dec
pop
pop
mov
sbb
lods
movsb
scas
lcall
sarl
xchg
add
sti
pop
jno
and
movsl
mov
xchg
pop
xor
jl
push
je
mov
rcll
sub
pop
jge
pushf
test
call
rcrb
arpl
int3
dec
pop
pop
mov
shrb
cmc
gs
jmp
jl
dec
in
jb
pop
mov
mull
ror
push
fwait
mov
dec
mov
sbb
stos
into
jle
scas
jbe
pop
out
mov
pop
fdivl
lea
mov
into
gs
lret
push
jnp
dec
push
sub
cs
push
std
cmp
std
jl
jmp
lea
sub
xor
jl
shll
call
and
out
cmc
cmp
fmul
lret
jg
add
push
dec
jmp
out
lret
bound
sub
cmp
test
insl
pop
jns
ret
mov
into
out
outsb
stos
icebp
inc
mov
dec
into
push
paddsb
mov
jg
push
cmp
js
inc
scas
xchg
in
fstp
sahf
in
fbstp
mov
movsl
outsb
dec
nop
rcll
mov
jl
dec
testl
lods
jl
mov
xchg
lret
scas
adcl
and
popf
push
and
sbb
es
mov
xchg
mov
mov
jl
fst
mov
mov
mov
mov
cmp
sbb
clc
les
and
adcl
cmp
pop
scas
mov
insb
aaa
xor
xor
mov
mov
outsl
sub
shrb
inc
fistps
stc
jl
jecxz
popf
in
pop
cld
push
bound
fisubrs
inc
fidivrs
mov
xor
sti
cs
aad
cmp
aas
mov
mov
ret
testl
add
bound
out
adc
addb
inc
mov
sti
jb
cmc
enter
pop
std
call
out
leave
pop
mov
dec
push
lods
dec
iret
scas
jmp
xor
dec
lahf
jge
cmp
daa
push
inc
rcrl
mov
movsl
out
in
hlt
icebp
fsubrl
jecxz
dec
jb
pop
cmp
mov
mov
sbb
mov
cmpsl
mov
pop
aas
addl
xchg
push
mov
pop
pop
shrl
popf
hlt
in
insl
icebp
sahf
pop
aas
fstpt
in
scas
jge
outsb
fstpt
fstpt
cmp
push
shll
insb
imul
jns
jnp
repz
sbb
lahf
mov
pop
dec
int
sbb
pop
inc
outsb
rep
xchg
cwtl
sahf
pminub
sub
filds
loop
mov
push
fistpl
adc
inc
dec
in
fwait
js
push
mov
jle
into
aad
cmpsl
jbe
mov
pop
or
hlt
cli
fisttpll
fistpl
lods
push
adc
fnstcw
xchg
imul
mov
test
imul
xor
ja,pn
cmp
scas
jle
mov
bound
inc
cmp
pop
push
inc
pop
jne
push
mov
fidivs
dec
into
mov
inc
test
cs
std
mov
mov
mov
jg
push
sahf
fwait
jmp
jnp
int
mov
leave
sub
lods
fbld
mov
pop
mov
mov
lds
aad
adc
mov
fstpt
jb
lods
imul
dec
sub
xor
shll
xchg
lahf
in
mov
push
std
inc
clc
insl
jbe
push
scas
push
movsbl
pop
arpl
mov
cmp
mov
push
popf
cld
divps
cmp
xor
mov
lods
or
clc
fstps
inc
cs
pop
orb
cmc
movsl
inc
push
shrl
mov
popa
pushf
jbe
xchg
jbe
fstps
js,pt
push
dec
mov
xchg
enter
adc
roll
xchg
fisubs
push
daa
sti
es
int3
mov
cltd
mov
in
pop
insb
push
pop
mov
popf
jge
jmp
push
inc
inc
mov
subl
dec
mov
shll
in
cltd
mov
lcall
sub
arpl
divb
mov
in
std
cmpsl
call
inc
mov
jl
sub
mov
aaa
mov
jmp
sub
mov
ret
mov
mov
iret
lods
pop
push
test
out
outsl
hlt
addr16
mov
sbb
mov
int3
data16
xor
sub
scas
popf
das
pop
cld
push
jmp
push
scas
das
das
fstps
insl
push
imul
sub
jns
push
lret
push
movsb
jle
das
mov
mov
stc
mov
fldl
push
dec
adc
std
ljmp
mov
xchg
mov
call
xlat
mov
fs
xchg
mov
xchg
ss
stos
push
xlat
hlt
mov
scas
jnp
xlat
dec
push
aad
pop
or
mov
cmp
stc
ret
cmpb
out
cmp
shrl
or
jnp
xchg
outsb
out
xchg
pop
mov
fsubrl
es
xchg
scas
mov
adc
lahf
jle
aaa
xor
push
iret
scas
dec
dec
das
sub
scas
mov
jns
mov
jbe
xchg
pop
in
std
cmc
xchg
loop
outsl
xchg
outsl
es
mov
pop
jp
mov
es
aas
das
jnp
pop
shll
or
test
cwtl
lret
out
das
sub
push
in
xchg
dec
repz
sub
mov
loop
leave
das
fildl
add
xor
jne
add
jle
dec
ss
and
pop
dec
jp
cmp
ret
and
fiadds
loope
push
sub
xorl
lock
scas
push
loopne
sbb
xchg
dec
lea
inc
inc
sbb
jmp
jle
ficomps
jae
and
pop
inc
cmp
bound
inc
leave
pushf
inc
imul
xchg
lahf
stos
cmc
adc
shlb
dec
inc
js
or
pop
or
js
push
pusha
pop
je
or
xor
push
pop
sub
mov
mov
mov
fcmovu
cmpsb
repnz
cmpsb
mov
push
or
mov
iret
mov
inc
ret
mov
sub
mov
cmp
mov
mov
test
add
pop
fidivrs
dec
cmp
mov
cmp
push
add
inc
js
jl
pop
jmp
and
nop
lea
mov
fs
aaa
add
aas
add
and
push
das
jae
aaa
sub
or
mov
int3
or
lret
stos
mov
out
ljmp
or
mov
icebp
iret
mov
int
sbb
dec
adc
or
sbb
vpmacsww
int
ja
fucomp
mov
adc
adc
adc
mov
cld
mov
sbbl
xor
pop
je
inc
push
fs
int
xchg
or
adc
pop
sub
stos
xor
sbb
sub
sub
inc
and
in
call
mov
mov
pop
jbe
jae
or
inc
imul
lock
sti
push
adc
lods
jmp
and
fidivrl
call
adc
fmuls
sub
jmp
negb
mov
pusha
stc
mov
adc
aaa
push
pop
or
jo
addr16
call
inc
movsl
jl
js
add
mov
dec
mov
cmp
adc
cmp
das
or
pop
add
push
fs
int
shr
cmc
mov
add
add
movsl
in
mov
xchg
xchg
cltd
mov
sub
lods
mov
je
je
jb
ficoml
xor
jb
pop
push
data16
sbb
outsb
sbb
sbb
dec
mov
push
jae
xor
mov
sbb
ret
out
push
mov
xor
incb
sbb
ret
push
jecxz
testl
cmp
shl
adc
add
xor
loop
fisubl
adc
idiv
pop
idivb
cmc
sarl
addl
sti
mov
loope
testl
pop
dec
adc
push
pop
sub
sub
sbb
mov
lods
int
aas
push
jge
pop
pop
cmp
insl
sbb
dec
gs
pushf
aas
nop
inc
movsb
or
int3
jge
dec
xor
cmpsl
cmpsb
sub
pop
rcl
pop
scas
jp
psrlq
pop
xlat
sbb
sub
aam
popf
mov
call
fstpl
dec
inc
rcrb
xor
push
or
sub
aam
and
inc
dec
push
imul
punpckhbw
pop
sub
aas
dec
jecxz
mov
adc
mov
push
adcl
lret
out
lret
shrb
or
xchg
push
jle
xchg
mov
iret
lret
xchg
jmp
mov
stc
mov
notl
mov
jp
mov
jnp
stc
lods
mov
imul
xbegin
imul
add
jo
lea
jecxz
dec
scas
int3
sub
mov
mov
mov
cmp
xchg
mov
out
fisubrl
or
insl
hlt
insl
hlt
icebp
fucom
stos
in
stos
xor
cmp
addr16
and
adc
cmp
pop
sbb
sub
sub
jmp
jbe
push
push
aas
jb
sbb
dec
push
sbb
dec
pop
cmp
add
inc
arpl
loop
cmpsl
xchg
ficoml
fs
xor
lods
jae
arpl
xchg
rol
sbb
sub
add
hlt
or
jecxz
out
movsl
adc
mov
movsl
pop
push
test
adc
jo
add
stc
mov
jmp
sbb
xor
add
lahf
out
adc
xor
jmp
cltd
loope
cltd
mov
xchg
sub
sub
sub
dec
lock
mov
cmc
cmp
mov
lea
jbe
bt
mov
neg
add
add
mov
btr
add
inc
movl
cmc
pusha
shr
mov
add
stc
cmp
pushf
pusha
pushf
lea
jno
jbe
shl
cmc
sub
movsbw
shr
mov
setae
adc
mov
bsr
add
ror
push
xchg
shr
xadd
bts
btc
neg
mov
or
not
add
not
call
jmp
rcl
mov
stc
test
pusha
mov
lea
je
stc
sub
push
stc
test
cmp
cmp
push
lea
ja
ja
imul
push
stc
cmc
add
pushl
pusha
pushf
lea
jmp
mov
movw
lea
jne
call
lret
aas
sbb
xor
or
adc
sbb
jne
jl
mov
pop
outsb
sub
lcall
cld
addb
shl
sbb
sbb
jns
pop
push
sub
repnz
cld
ja
jno
push
scas
pop
popa
lods
add
out
movsb
or
jmp
mov
jne
rcll
fwait
ljmp
add
mov
adcl
push
addb
sub
ljmp
inc
inc
inc
dec
popa
jno
gs
push
insl
dec
sub
sub
xchg
call
ja
data16
dec
faddl
sbb
adc
and
and
shl
lods
lcall
xchg
or
xchg
sti
xchg
insb
push
inc
outsl
out
push
pop
ds
lock
imul
add
or
stos
sub
xchg
mov
lret
test
sbb
pop
sbb
in
mov
clc
shl
aam
call
mov
sub
sub
dec
inc
pop
iret
mov
jmp
jmp
rorl
mov
pop
out
cmp
lea
add
inc
or
out
rcr
push
mov
mov
lods
pop
sub
mov
pop
lret
pop
jo
fbld
dec
fnstcw
icebp
aam
lods
dec
adc
je
rcr
lods
dec
add
jmp
xor
xor
add
sub
and
sub
push
imul
fsubp
fucomp
out
in
xchg
mov
mov
mov
mov
cmpsb
xor
int
sub
mov
pusha
adc
jns
mov
mov
mov
xor
mov
sub
sbb
iret
jecxz
ret
push
cltd
pop
cmpb
mov
into
dec
ret
sbb
repz
fcmove
mov
addl
mov
push
call
sub
dec
pop
test
dec
cmp
push
push
dec
sbb
jbe
push
sub
pop
add
jmp
mov
inc
inc
jbe
leave
add
push
mov
adc
movsl
lea
xor
loop
inc
mov
popf
pushf
pusha
gs
inc
cmp
out
sub
out
aaa
pop
jge
push
jle
mov
add
fs
gs
sub
pop
or
or
stos
xchg
sub
fimuls
leave
mov
test
lock
call
mov
lods
test
add
push
lahf
stc
mov
clc
xchg
incb
inc
ds
inc
jb
mov
lods
cld
adc
mov
pop
mov
xchg
mov
gs
inc
test
jl
ds
pop
pop
movsl
into
out
cwtl
fdiv
fsubp
sti
ss
cmpsl
out
xchg
adc
cltd
jmp
sarl
xchg
sub
push
andb
pop
push
push
fidivrl
adc
adc
je
jl
or
and
xchg
inc
loopne
subps
je
mov
mov
push
stos
sbb
inc
mov
shrb
aas
lock
pop
ss
dec
mov
into
jne
push
and
sub
es
lea
insb
insb
inc
sub
push
jl
fs
sub
push
mov
mov
inc
push
xor
cs
insb
add
dec
push
and
imul
mov
mov
ljmp
xor
push
dec
insl
add
jmp
adc
test
lock
xchg
int3
int3
mov
xorl
add
hlt
fmul
in
int3
test
cli
mov
or
clc
es
hlt
xchg
push
arpl
sahf
mov
push
jmp
xchg
xchg
mov
mov
stc
mov
ret
jne
cli
cltd
fprem
push
test
ljmp
or
xchg
xor
lods
dec
mov
mov
sub
sub
mov
and
nop
jmp
push
stos
push
das
xor
nop
stc
out
and
jecxz
push
xadd
push
sbb
movsb
pmaxsw
mov
xor
stc
and
pop
mov
pop
je
sbb
cmc
enter
dec
outsb
lods
adc
lahf
jp
jp
sti
pop
cld
std
sub
into
xchg
out
movsl
inc
popa
push
sub
pop
jns
popa
insl
dec
push
popa
push
jbe
adc
mov
pushl
ret
add
add
add
cmp
add
push
fsubrs
add
add
add
popa
xor
add
add
aam
xor
add
add
ljmp
add
out
add
add
add
sti
add
add
add
add
addb
add
adc
add
or
add
add
addb
add
sbb
and
add
add
sti
add
mov
add
xor
call
xor
add
add
add
add
std
mov
js
add
sub
or
push
inc
cs
and
or
pop
xchg
clc
push
outsl
push
mov
pop
dec
mov
out
and
out
sub
std
cld
lret
dec
jnp
testb
imul
dec
push
mov
mov
out
or
fstpl
aas
leave
stc
mov
es
rclb
mov
or
mov
mov
xor
ret
ficoms
ret
or
inc
pushaw
pusha
mov
inc
call
push
loop
imul
add
ret
scas
mov
enter
test
enter
clc
mov
xchg
pusha
in
sbb
push
ret
mov
and
gs
das
pop
add
xchg
lahf
lahf
movb
loop
add
jnp
xchg
xchg
jae
cmp
jg
push
mov
dec
or
add
push
pop
test
mov
or
mov
in
sti
adc
xor
pop
aas
jg
and
cmc
shr
stc
std
int
jmp
mov
ficompl
jmp
mov
shl
xchg
shll
fnstsw
jae
data16
loopne
lock
ret
sub
pop
daa
addr16
xchg
mov
loopne
clc
jle
jo
pop
inc
and
sbb
ret
lcall
mov
lods
vpmaddwd
adc
aam
mov
xor
fnstcw
std
mov
neg
fidivrs
rep
xchg
mov
mov
pusha
or
xor
das
popa
sbb
push
and
sbb
je
mov
enter
push
ror
stc
cmc
cmc
movw
not
bt
movb
clc
cmp
lahf
lea
movsbw
mov
pushf
jmp
filds
xlat
and
mov
test
faddl
jb
cmp
sti
fsubl
mov
dec
xchg
adc
xchg
or
mov
push
push
sbb
pop
dec
jge
sbb
push
cmpsl
movsl
data16
ret
into
in
sahf
mov
mov
fucomip
push
sub
in
aad
in
in
stc
loope
sub
push
movsb
addr16
dec
scas
mov
fdivrp
test
cld
in
int3
rcr
mov
popa
jl
popa
sahf
mov
mov
sub
mov
push
or
and
adc
mov
pop
imul
xchg
ret
dec
jne
lret
xchg
rol
clc
sbb
and
add
adc
ds
push
jp
sub
push
addr16
clc
xchg
std
popf
mov
add
push
jbe
dec
inc
push
ds
inc
jbe
push
push
lret
clc
inc
out
shl
fdivs
pop
cmp
adc
ret
push
sbbw
andl
adc
pop
sub
fbld
cmpsl
pop
pop
rcrl
jmp
mov
sub
push
mov
lods
stc
bt
pushf
rol
push
call
clc
pushf
jmp
les
dec
and
fwait
lahf
mov
lahf
fistps
fs
cmpsb
fsubs
pop
leave
std
je
mov
xchg
js
mov
test
mov
xchg
int
mov
lods
aad
fcompl
push
les
sub
shll
sarb
dec
imul
test
movsb
or
cltd
jmp
int
xchg
xchg
jns
cmp
sbb
adc
pop
mov
popl
not
call
sub
ret
or
or
cli
fdivl
fdivrl
decl
and
pop
inc
in
roll
pushf
loop
sbbl
mov
cmpsl
pop
pop
neg
cmp
fwait
out
or
jae
scas
idivb
xchg
jmp
push
or
xchg
cmp
cld
cld
filds
xchg
dec
scas
ss
push
adc
leave
add
inc
add
lcall
lcall
sub
pop
insb
adc
push
adc
cmc
repz
mov
mov
stos
fcmovnu
int3
dec
or
int3
stc
jb
xchg
call
xorb
xorb
repz
mov
mov
jp
cmpsl
or
addr16
ret
and
ret
popa
add
adc
mov
mov
cmc
cmp
aas
pop
das
adc
cmovae
xor
aas
sub
pop
jle
out
mov
and
daa
cltd
popf
adcl
xchg
lahf
ret
scas
out
in
pop
or
mov
loopne
in
sbb
fwait
jecxz
iret
pushf
addr16
add
mov
push
xor
shl
ror
mov
scas
sbb
das
xor
jae
test
sbb
xor
cmp
jge
cmp
or
push
js
test
pushf
stc
add
pushf
lea
jne
setns
call
mov
jnp
cmp
cmpb
xchg
lcall
pusha
xor
add
imul
popf
icebp
mov
cli
ret
js
imul
xchg
dec
adc
push
fistpl
ret
pusha
jne
int
xchg
xor
push
sbb
pop
pop
loop
rcrb
cwtl
addl
testb
xor
test
lret
mov
ljmp
sbb
mov
mov
aas
sbb
daa
bndstx
sub
pop
outsb
lods
and
add
add
push
xor
inc
adc
jae
sbb
ja
jl
jmp
popa
and
add
and
mov
stos
lret
mov
lods
int3
enter
mov
xchg
sbb
jmp
cmpw
pop
mov
add
jae
inc
add
inc
jnp
jl
leave
or
jb
addr16
lea
lds
adcl
pop
or
xor
push
jle
es
aas
add
adc
inc
pop
add
sbb
mov
test
push
popa
sbb
mov
sti
add
mov
add
mov
mov
imul
mov
loope
xchg
hlt
loope
jnp
out
out
mov
mov
jb
jb
out
lcall
ss
hlt
sahf
push
cwtl
mov
cli
lret
cmc
stc
ret
popa
mov
push
dec
jp
out
mov
faddp
pushf
test
das
pop
mov
sbb
shl
dec
mov
iret
mov
xchg
pop
sbb
out
enter
insb
sbb
and
negl
lcall
add
and
ret
mov
sbb
push
pusha
hlt
enter
and
pop
mov
cltd
cmpsl
mov
mov
pop
test
xchg
cmpsb
hlt
fsubl
or
push
popf
addr16
lods
pusha
lds
aad
inc
cmc
or
dec
mov
pop
pushf
jno
mov
std
xor
js
dec
test
and
shlb
sbb
mov
cmpsb
dec
fidivrs
mov
movsb
in
int
out
sbb
xorl
pop
sub
ret
xor
ja
jp
dec
push
cmp
addl
lods
movsl
xchg
movsl
popf
mov
std
cmpsl
add
dec
dec
ja
cltd
in
inc
xchg
and
cmc
sub
test
lret
pop
pop
hlt
xchg
mov
lret
mov
jmp
mov
add
aaa
adc
sub
dec
gs
push
sub
jmp
mov
sarl
sbb
push
call
jl
clc
rcrl
or
out
sub
in
add
cmp
mov
mov
js
test
xchg
mov
ret
or
jmp
mov
xchg
nop
aam
sub
fdiv
shl
mov
int3
aam
in
loopne
sub
pop
xor
sub
incl
add
mov
add
jg
sbb
mov
stos
adcl
cmpsl
fwait
mov
cmpsl
adc
inc
into
popf
js
and
stc
movsb
dec
es
cs
or
mov
aas
add
pop
aam
mov
out
ret
and
rcrb
in
lea
mov
sub
jno
fs
dec
push
wbinvd
pop
outsb
jecxz
rolb
or
test
leave
inc
lods
mov
aad
in
stc
mov
int
std
in
in
leave
sub
pop
nop
push
sbb
bt
cmp
jmp
add
fisubrl
cmp
mov
std
mov
cmc
xor
pop
push
adc
in
mov
out
pushf
sub
into
lahf
push
xor
jge
sbbb
setbe
cli
sarl
lret
and
cmp
mov
pop
adc
inc
inc
jge
int
imul
xchg
cmpsl
fimuls
outsb
ror
shl
cmp
jno
mov
cmpsb
mov
mov
sub
pop
fistpll
clc
push
add
test
movzwl
sub
xor
call
xchg
int3
mov
lods
ljmp
fisubl
mov
imul
mov
mov
shr
loop
aas
xchg
fnstenv
xlat
push
or
adc
push
scas
arpl
or
jmp
add
mov
not
pop
mov
sbb
dec
adc
sub
inc
pop
or
imul
xchg
jp
fwait
jecxz
mov
and
jne,pn
adc
in
xchg
shrl
in
add
mov
xchg
sahf
idivb
sub
pop
sti
cmp
push
push
push
or
jae
decl
js,pt
sub
add
cmp
jo
mov
sbb
pop
push
dec
and
js
mov
scas
repz
mov
pusha
xchg
popf
cli
mov
lahf
add
mov
scas
ss
es
pop
jecxz
lea
cmp
xchg
lret
dec
enter
push
pop
adc
ds
insl
mov
test
dec
xor
xor
sub
mov
mov
mov
bnd
mov
jecxz
mov
int
orl
sti
sub
rcrl
imul
mov
call
xor
fstp
sub
sarb
add
pop
mov
mov
test
scas
pop
pop
mov
cli
pop
fcoml
into
sti
sbb
in
fsubs
out
jle
and
xchg
mov
lahf
lahf
mov
out
mov
sub
pop
rclb
das
rclb
mov
xor
bound
inc
push
pushw
dec
push
sbb
fidivl
aas
cmp
dec
rolb
pop
arpl
test
test
add
cld
mov
rcrl
out
fnstenv
pop
pop
scas
inc
mov
imul
sbb
fdiv
ret
xor
into
sahf
and
into
into
lret
bound
inc
pop
mov
jo
and
push
add
sub
pop
fwait
mov
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
lock
jbe
sbb
mov
mov
ret
cmpsb
cmpsb
scas
mov
dec
dec
shlb
icebp
hlt
stc
adc
mov
cld
stc
pop
stc
and
mov
arpl
xchg
pop
mov
pop
sbb
inc
aam
xor
into
aas
xor
into
inc
pop
in
xchg
sarb
in
fyl2xp1
mov
inc
pop
cld
out
das
jae
daa
dec
pop
inc
arpl
dec
or
inc
xor
inc
sub
sbb
add
sub
push
mov
sub
sub
es
roll
xor
arpl
or
sti
sub
and
adc
ljmp
xlat
mov
into
sahf
repz
or
push
inc
sub
std
es
pushf
test
clc
enter
nop
mov
or
push
sub
pusha
mov
mov
pushl
ret
xor
out
mov
flds
in
shrl
jle
daa
in
fs
ljmp
jg
xorl
leave
xchg
arpl
sub
std
adc
shrb
test
xchg
mov
push
mov
mov
aam
cmpsb
fcmovbe
xchg
popf
mov
movsl
int
mov
test
or
sub
lcall
xchg
aam
call
in
mov
nop
cmpsl
and
ret
adc
adc
fsubr
mov
stos
dec
adc
fimuls
xchg
mov
dec
mov
xor
test
mov
xchg
xchg
pop
inc
into
aas
sahf
aaa
mov
movsb
test
pop
out
inc
lret
mov
addr16
mov
push
bound
es
pop
mov
xor
pushf
mov
ret
fadd
lea
popf
test
sbb
sub
jge
clc
mull
jl
mov
xchg
roll
or
ss
jle
add
sub
inc
ja
lret
jl
add
mov
inc
fs
pop
ds
push
bound
push
adc
push
insl
jmp
push
sub
cmc
jl
add
mov
sub
loop
mov
fs
aam
add
xor
fidivs
call
dec
add
cmpsb
dec
xor
mov
mov
push
mov
in
lahf
mov
and
shll
jecxz
mov
mov
xor
pop
push
jle
xchg
fists
sti
mov
xlat
sub
inc
mov
fs
sahf
sar
int3
imul
lcall
mov
loopne
call
and
into
ret
aaa
pop
dec
test
ss
jp
pop
movsb
pushf
movsl
mov
mov
xor
mov
lret
sar
punpckhdq
pop
jno
mov
mov
fyl2xp1
imul
sub
push
mov
pop
mov
aas
es
jb
vpsubw
gs
xchg
pop
and
push
push
xchg
enter
and
xchg
fucomi
adc
pop
or
aas
aaa
sub
adc
daa
cmp
sub
inc
inc
test
xor
loope
jmp
mov
push
sbb
or
adc
and
das
push
pop
mov
dec
inc
outsb
fwait
lahf
gs
jae
ja
mov
mov
inc
jp
push
push
jl
mov
push
lock
or
test
mov
pop
sysret
xor
ja
pop
sub
inc
dec
out
pop
lds
pushf
mov
xchg
push
or
repnz
popf
add
dec
stos
or
sbb
repnz
ret
add
les
dec
vmovaps
add
in
add
lds
or
jle
bound
inc
data16
push
jb
add
xchg
mov
add
mov
jle
lret
jp
cmp
pop
push
loop
cmpsb
jg
dec
test
aad
xchg
push
jmp
dec
sbb
mov
inc
jmp
xchg
outsl
cmpsb
dec
pop
inc
sbb
pop
xor
cmp
xchg
mov
mov
test
sbb
inc
mov
pop
pop
ja
pop
outsl
push
dec
arpl
arpl
inc
jae
or
leave
xchg
push
pop
add
dec
adc
stos
inc
jg
gs
gs
and
lret
adc
movsl
sub
push
jnp
das
add
loopne
xchg
jmp
sbb
push
aam
sbb
out
lret
sub
pop
jnp
sub
cmc
dec
xchg
or
xchg
mov
cmp
aad
mov
je
dec
or
cmpsb
xchg
xor
arpl
add
lods
cmc
in
int
insl
sub
inc
inc
pop
imul
sbb
add
std
xorl
dec
jge
addr16
pop
pop
inc
sbb
jae
push
daa
dec
inc
js
mov
and
pop
ficoml
push
dec
stos
and
popa
sub
dec
cmc
mov
jno
cmp
sbb
out
addr16
and
xor
jbe
adc
in
out
loopne
jg
pop
out
ds
adc
call
sbb
dec
cltd
xor
daa
push
clc
dec
xchg
rep
out
fwait
fwait
fwait
mov
lahf
mov
add
bound
push
jbe
ret
inc
inc
and
xor
sub
push
sbb
mov
call
add
sub
fcoml
cmp
add
inc
xchg
sub
lds
fiaddl
pop
in
mov
pusha
out
push
je
mov
push
imul
aaa
lret
jmp
in
idivb
jb
sbb
gs
scas
lahf
dec
jmp
mov
or
add
pop
jl
pop
and
inc
pop
pusha
pop
adc
or
lret
push
or
add
andb
add
add
add
ret
add
add
add
add
add
add
xor
in
fldcw
add
xor
les
xor
mov
cmpsb
xor
mov
ret
add
add
add
add
add
xor
int3
ret
add
add
add
add
add
ret
add
add
add
add
add
das
add
ret
cs
cmpsb
xor
out
mov
cs
cmpsb
xor
fcoml
das
add
ret
cs
cmpsb
xor
lret
or
cs
cmpsb
xor
orb
add
ret
cs
cmpsb
xor
jp
xor
add
cs
cmpsb
xor
mov
les
add
add
movsb
repz
add
gs
je
push
arpl
outsb
dec
outsb
imul
mov
cmpsb
mov
gs
lret
clc
lock
aam
sarb
sub
ret
lea
loopne
cwtl
xchg
jo
cmp
outsb
out
pop
mov
mov
test
imul
sub
or
cmp
in
into
fdivs
aam
leave
popa
mov
and
push
xchg
xor
jge
gs
insl
pop
inc
inc
dec
inc
sub
dec
lds
add
jmp
shrd
sub
not
movsbl
pop
pusha
xchg
xchg
mov
pop
mov
pushf
bswap
mov
jmp
add
test
jo
addl
fstpt
mov
push
and
sbb
mov
adc
stos
lret
xchg
cmp
shr
movlps
jbe
pushf
jne
cmp
leave
aam
fs
pusha
lret
pop
cmpsl
inc
inc
test
pop
cmp
push
daa
fwait
dec
out
divb
inc
scas
fdivrl
insb
iret
repnz
outsw
subb
out
mov
cmc
leave
and
fstpl
std
fld
movsl
ror
in
or
jg
cmp
sub
aaa
and
sbb
pop
pop
inc
aaa
das
and
pop
pop
ss
in
dec
shll
jge
and
push
mov
cli
stos
call
mov
inc
inc
scas
mov
pop
mov
cmp
sub
test
mov
je
std
por
fdivrl
scas
dec
mov
jnp
int
pop
cmp
aaa
mov
out
mov
stos
repnz
shl
mov
neg
jecxz
or
repz
mov
mov
jmp
and
xchg
pusha
cmp
cmp
cmovg
dec
jg
arpl
jecxz
rorb
pop
add
dec
fsubrs
addr16
into
lahf
adc
xor
xchg
loop
xchg
outsl
cmpsl
push
and
xor
add
cmp
push
cs
mov
out
mov
jno
or
pop
inc
enter
aad
sar
std
int
in
ror
in
sub
dec
lods
outsl
and
popf
inc
in
popa
pop
pop
and
dec
and
ja
inc
or
mov
mov
mov
jp
sti
int3
fcomip
out
adc
jo
sub
mov
sub
fsubl
sbb
cli
insb
fstpl
imul
add
add
lods
loopne
gs
fxch
lods
iret
xchg
add
inc
fwait
rep
stos
mov
xchg
sbb
jno
cmp
bound
jns
ljmp
push
sbb
fildl
pop
das
das
sbb
push
inc
jnp
outsl
inc
arpl
dec
sub
dec
xchg
aaa
int
lcall
add
mov
loopne
cwtl
rolb
mov
scas
call
sub
fisubrl
jg
rorb
xchg
inc
rclb
aad
mov
pop
loope
xchg
jge
jb
inc
inc
sbb
cltd
fst
cwtl
cmpb
adc
mov
pop
aaa
pop
pop
daa
pop
aaa
adc
das
pop
sub
push
sub
dec
lds
cmp
jo
add
pusha
cmc
stc
not
lea
jl
pusha
ror
std
call
pusha
vpsubsw
mov
mov
ret
mov
sub
cli
fs
packsswb
mov
icebp
fcoms
xor
and
addr16
aas
pop
imul
ss
outsb
aam
cmovb
mov
lock
lock
enter
int3
lock
sub
dec
fs
sub
into
mov
shl
mov
lods
enter
mov
loopne
sbb
icebp
inc
out
pop
sbb
mov
mov
jle
xor
inc
or
adc
push
ds
adc
and
push
xor
ljmp
lods
adcl
jg
cmp
push
call
sub
dec
jb
push
pop
add
adc
fnsave
push
cmp
data16
push
push
cmp
sbb
test
lahf
lds
xlat
mov
inc
aam
testb
jb
ret
sbb
daa
lret
loop
pop
add
inc
in
in
push
xchg
lcall
xor
aas
pop
aaa
cmovnp
cmp
pop
sub
dec
pop
mov
or
lea
jae
cmp
call
pushf
call
clc
inc
ds
inc
mov
loopne
int3
mov
xchg
cld
test
fmul
mov
ss
cmpsl
push
cld
popf
call
and
sarl
xchg
es
rcll
addr16
and
std
cmp
add
jecxz
outsb
into
je
mov
jbe
sub
or
jno
inc
jne
popa
inc
imul
sub
dec
xchg
push
push
shr
bswap
mov
movzbw
and
add
rcl
seta
neg
pushf
add
rcl
shl
ror
movsbw
mov
stc
call
cmp
sbb
je
pop
cmp
mov
clc
test
fmul
enter
dec
pusha
mov
xchg
shrl
cmp
sub
xchg
aas
add
out
jae
repz
pop
add
lret
pop
cltd
push
fsubr
cld
in
fdivl
in
cld
sub
dec
mov
bt
call
cmpl
adc
mov
repnz
fstl
xchg
arpl
outsb
cmp
push
out
iret
inc
xor
inc
test
dec
adc
jnp
in
sub
cmp
cltd
in
pop
shll
call
out
adc
popa
mov
popf
aaa
addb
fstpl
adc
rcr
sbb
mov
fdiv
fmul
mov
int3
sub
dec
xchg
push
push
inc
pop
xor
test
ret
fcmove
xchg
lcall
das
adc
je
or
mov
xorb
cwtl
adc
dec
jae
in
pusha
loop
jo
jge
inc
stos
negl
sbb
xchg
dec
inc
dec
sub
sahf
sahf
arpl
bound
xchg
sub
imul
mov
pop
subl
in
aam
lock
fmul
cld
lock
sub
dec
sub
aad
inc
jl
inc
ljmp
std
ror
int
test
add
clc
sahf
scas
mov
dec
call
push
arpl
dec
inc
fstps
jo
rcl
and
js
lock
dec
mov
cmp
adc
lock
adc
adc
jnp
fwait
or
and
mov
test
cltd
rcl
fisttpl
hlt
aam
mov
cld
int3
lock
aam
sub
dec
mov
xor
pop
add
data16
stos
mov
xor
push
and
cwtl
xchg
jge
sub
push
add
inc
das
jnp
movsb
cmp
cld
or
mov
xchg
pop
arpl
cs
lcall
int
lcall
shrb
dec
aaa
adc
push
in
mov
xchg
lods
lock
ja
sti
fstl
rclb
je
dec
ret
jmp
mov
mov
addl
ljmp
hlt
js
xchg
cmp
dec
out
test
mov
test
lahf
ss
shrl
test
jno
cmp
pop
shlb
push
nop
jno
fcmovb
lock
lods
push
lods
dec
xor
pop
out
insl
adc
cmp
and
pop
jg
imul
addr16
outsl
pop
sub
ja
call
mov
call
pop
push
pop
cmp
adc
sub
and
and
push
mov
lock
jmp
mov
ss
or
dec
popa
dec
out
or
or
movb
mov
js
dec
add
and
adc
adc
std
loopne
lds
sbb
js
cmp
cmp
jl
push
sub
jbe
xchg
enter
push
push
bound
out
lret
stos
ljmp
subl
jl
jmp
and
in
in
add
rcr
adc
bound
sbb
in
in
xor
or
push
mov
test
das
mov
test
aad
mov
sub
rorb
sub
ret
add
sbb
cli
into
shl
stos
out
cmpsb
loop
ret
ljmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
fwait
call
popa
mov
push
bound
sbb
jb
data16
pop
sbb
add
daa
cld
pop
dec
pop
dec
ja
idivb
cwtl
cmc
pop
and
sahf
out
inc
call
add
lcall
mov
sbb
subb
xchg
outsb
dec
repnz
cmpsl
xchg
dec
aad
fdivr
shl
inc
scas
into
lret
xlat
not
int
hlt
push
in
or
js
push
pushf
movsb
aam
loopne
sarb
clc
fdivl
pusha
sbb
lock
clc
leave
fs
adc
hlt
lret
loop
lcall
mov
add
mov
test
pop
js
lret
lods
lods
pop
adc
mov
sub
xchg
lock
push
stos
scas
mov
cmc
shlb
push
aaa
mov
adc
inc
repz
mov
bswap
enter
jle
pop
scas
sbb
mov
out
lret
mov
jecxz
xchg
fisttps
or
pop
pop
lea
jae
lea
rol
pusha
movzbw
mov
bt
and
mov
adc
bts
mov
call
pusha
sub
call
ja
pop
push
es
mov
repnz
ret
fidivl
jo
aas
pop
dec
loope
repz
arpl
out
xchg
jne
flds
shr
clc
aaa
mov
xor
movsb
jns
xchg
movsl
movsb
xor
scas
pop
cli
mov
lods
dec
xor
mov
in
call
sahf
bnd
mov
mov
xchg
mov
xchg
xchg
mov
or
sbb
stos
scas
rorl
cmc
mov
xchg
xor
push
mov
sbb
mov
inc
mov
jp
xchg
aas
xchg
jg
ljmp
push
adc
in
and
imul
out
imul
pop
std
and
loope
mov
stc
cmc
fldl
sub
je
arpl
lea
js
mov
pusha
pushl
pushl
lea
jmp
add
add
push
sti
lahf
imul
mov
ret
shll
shll
std
aam
push
andb
sub
stos
lods
or
pushf
ret
push
xchg
shl
cmpsb
cli
xchg
or
into
sbb
pop
xchg
xchg
imul
mov
push
xorl
imul
xor
mov
xor
repnz
or
adc
push
sub
or
push
jb
and
or
mov
xchg
repz
shrl
mov
lock
mov
xlat
mov
xchg
enter
xor
leave
or
enter
mov
jne
in
cmc
adc
inc
mov
ljmp
or
xor
and
mov
push
sahf
out
xchg
xchg
andl
mov
jae
adc
jmp
jmp
call
sbb
iret
fnclex
gs
push
rcl
shlb
fcomp
dec
jl
mov
lds
cld
fcmovbe
xor
push
in
push
cld
dec
aaa
rorb
sar
jo
repnz
xchg
mov
sub
fsubrl
jle
or
sahf
pushf
mov
jmp
jle
ja
dec
int
repnz
lock
fdivrs
xor
push
imul
leave
adc
inc
adc
push
mov
in
jmp
vmovntpd
jb
outsl
inc
jae
lods
mov
mov
rcll
lahf
cmp
lahf
repz
push
inc
inc
add
scas
mov
stos
std
push
in
mov
push
out
push
in
xchg
cs
filds
xor
ja
es
dec
lock
mov
dec
mov
stos
scas
or
mov
and
and
dec
xor
and
jno
mov
inc
mov
aad
lahf
xadd
mov
adc
sub
shr
adc
sub
add
shl
push
sar
push
dec
bsr
bswap
sar
push
and
push
shld
dec
bts
mov
jmp
aam
sub
das
pop
in
cmc
dec
dec
xor
pop
or
sbb
or
dec
inc
fdecstp
jae
movsb
lods
add
pop
sahf
sbb
jbe
sub
inc
sbb
mov
mov
je
push
add
orl
cmc
mov
inc
xchg
mov
push
inc
clc
and
push
adc
mov
xchg
ficoml
out
fiaddl
jno
jo
rclb
sub
jmp
xlat
out
decl
jecxz
dec
addr16
fsubrs
jge
aad
insb
ret
xchg
cwtl
jns
loope
sbb
negl
scas
push
push
jecxz
cmpl
test
jecxz
push
pushf
jno
jg
loopne
stc
daa
pop
pop
xchg
adc
add
pop
lcall
fadd
xchg
mov
out
adc
push
loope,pn
fisttpl
dec
enter
cmp
and
daa
pop
sub
push
adc
jg
add
daa
cmp
sub
jo
test
xor
sub
dec
bound
adc
bound
cs
sub
dec
adc
jne
in
aam
xor
mov
jl
std
mov
test
fdecstp
pop
sbb
les
sbb
inc
call
icebp
gs
enter
jecxz
iret
out
or
stc
mov
jns
push
ret
pusha
push
xor
add
adc
push
jge
hlt
lock
cmc
sarl
mov
ret
jmp
out
out
cli
out
mov
ljmp
mov
or
movzbl
mov
test
test
pushl
or
jmp
test
xchg
sar
cmp
cmp
cmp
and
dec
sbb
push
js
cmp
fists
pusha
out
pusha
push
pop
or
lea
aaa
and
frstor
stc
or
xchg
xchg
rorb
cld
sbb
sbbl
shr
and
mov
test
dec
push
or
push
xchg
mov
fdiv
pushf
loopne
call
lock
jg
push
ret
mov
mov
adc
inc
pop
push
daa
push
daa
das
aas
xor
xor
mov
lahf
lods
inc
negl
dec
hlt
icebp
jns
and
repnz
adc
and
sbb
cmpb
dec
mov
pop
cltd
push
xor
mov
imul
or
insb
jge
mov
jp
jle
pop
dec
outsb
outsb
pop
jle
sub
jle
clc
gs
out
adc
je
pop
sub
dec
pop
add
sbb
js
xchg
xchg
arpl
pushl
push
arpl
aas
call
pop
pop
shrb
das
push
mov
shlb
movsl
pop
enter
aaa
cmp
bound
je
and
jg
stos
xchg
add
xchg
out
add
sti
lea
incb
and
mov
sbb
nop
ror
test
rorl
add
mov
scas
fwait
mov
cmpsl
add
push
jo
pop
insb
add
push
inc
js
sub
jle
popa
dec
loopne
push
inc
jg
int3
sub
xchg
mov
shll
mov
mov
leave
call
and
adc
enter
mov
hlt
fistpll
icebp
stc
stc
mov
ret
ljmp
xchg
cmp
fdivs
jl
outsb
mov
lret
int3
in
rcl
sub
into
lret
repz
int3
mov
add
adc
jbe
loope
pop
ret
mov
jns
dec
insl
mov
mov
xor
push
push
cli
lea
insl
jl
cld
movsb
movsb
clc
movsb
xorb
or
test
ds
ja
mov
xchg
add
or
push
aas
push
pop
jae
dec
pop
pop
inc
fcompl
xor
add
xor
pusha
imul
cli
or
add
les
stos
inc
pusha
push
stos
dec
out
pushf
jp
aam
mov
and
bswap
ror
pop
bound
dec
jmp
pushf
nop
fdivr
clc
enter
int3
enter
int3
sub
jge
outsb
sbb
xchg
call
arpl
cli
cmpsb
mov
out
xchg
xchg
mov
xor
sub
pop
scas
loopne
mov
xchg
out
mov
jle
fsubs
xchg
pop
pop
cmpsl
mov
push
pop
das
mov
cmc
adc
enter
nop
jno
ficomps
xor
shr
mov
pop
fs
mov
adc
mov
lret
mov
push
push
dec
add
or
fmulp
mov
jmp
push
sbb
pop
push
xor
add
or
cmpsb
fdivrl
dec
shl
roll
jecxz
fildll
aam
and
ret
insl
mov
jbe
test
push
lahf
pop
push
mov
push
jbe
mov
sbb
inc
scas
cmp
jle
hlt
or
add
sub
inc
or
or
in
sbb
cmpsl
out
not
xchg
aad
in
leave
shl
test
or
insl
jmp
adc
mov
pushl
ret
add
adcb
insb
jo
and
inc
cmp
insb
sbb
pop
sti
ljmp
pop
jge
xor
dec
xor
xchg
in
fcomps
jecxz
push
cwtl
rolb
outsb
add
in
out
or
mov
xchg
mov
into
ficompl
iret
test
mov
in
ja
inc
add
inc
push
adc
push
and
inc
adc
xor
or
test
lods
call
stc
xchg
test
int3
enter
mov
mov
cmp
cmpsb
mov
fucomi
sbb
rcrb
pop
sbb
add
inc
mov
lds
and
pop
mov
mov
scas
addr16
je
pop
out
jnp
mov
mov
jl
xor
loop
out
dec
cmpsb
addr16
fstpt
imul
dec
or
mov
movsb
lock
fcoms
enter
or
bound
in
stc
cmc
cmc
in
fwait
dec
in
leave
out
out
jecxz
call
mov
push
sub
lock
iret
mov
and
shl
mov
in
fdivp
xor
cmpl
mov
and
adc
addl
sub
inc
pop
sarb
mov
in
nop
fincstp
cmpb
lods
leave
in
rorl
pop
xchg
push
ss
shll
stos
stos
mov
cwtl
ret
iret
mov
stos
fwait
lahf
scas
stos
sub
jp
or
movl
pushf
pusha
mov
lea
jmp
push
bt
bswap
bswap
mov
pushf
call
out
xchg
addb
sbb
dec
or
popa
and
loope
hlt
inc
movsb
movsl
mov
inc
mov
cs
jnp
ljmp
push
mov
dec
mov
or
sahf
scas
mov
sbbl
lret
cmc
in
cmp
cmp
pop
jle
pop
aas
movsl
call
imul
adc
adc
adc
fadd
in
fsub
mov
call
or
ffree
lea
jae
pusha
call
movl
call
pushf
pushf
adc
mov
movb
push
pushl
ret
pushf
inc
bt
neg
clc
stc
call
cvtpi2ps
jbe
imul
pop
jle
sbb
pusha
cmp
or
inc
adc
fisttpll
push
test
xchg
int3
mov
pop
sbb
daa
out
mov
aad
adc
mov
dec
fcmovnb
xchg
or
sub
fistl
adc
movsl
pushf
or
cmpb
cmpsb
mov
fistps
lret
inc
add
leave
and
into
xchg
scas
push
dec
or
stos
out
inc
mov
add
jbe
out
sub
bound
outsb
add
dec
push
push
pop
dec
sub
js
sar
add
push
push
js
arpl
gs
add
xor
sub
std
adc
or
pop
jae
and
pop
pop
dec
cmp
xor
std
test
fbstp
and
out
dec
or
jge
push
nop
int3
jmp
inc
in
mov
lcall
xchg
jb
pusha
inc
dec
movsb
ret
cmp
adc
mov
icebp
jmp
inc
lods
ss
push
cs
pop
jp
xchg
mov
push
cmp
cmc
aam
pop
test
aad
stc
xchg
in
icebp
fnstsw
js
dec
jno
cmp
add
popa
inc
jnp
push
inc
aaa
aas
add
xor
inc
pop
mov
and
pop
arpl
ss
ss
pop
ja
xlat
xchg
pop
mov
std
scas
lods
or
mov
daa
xor
cltd
aas
test
repnz
out
mov
daa
dec
das
sub
push
inc
roll
xor
jmp
cmp
cs
lret
shl
lret
mul
cmpsl
fcmovnb
sahf
and
repz
aad
sub
lcall
push
push
push
sub
addr16
pushf
fiaddl
add
shrl
push
mov
mov
stos
cmp
push
dec
mov
pop
pop
xor
cmp
and
fwait
mov
not
xlat
jecxz
jmp
repnz
dec
cmp
mov
add
or
imul
sub
lock
and
push
es
shll
push
jl
pop
sub
popa
lock
xor
dec
push
setno
data16
xchg
push
arpl
lahf
lods
add
movsb
xlat
lds
jae
xchg
scas
push
popf
out
push
jl
xchg
fs
icebp
and
jp
jno
cmp
lret
jnp
cltd
push
dec
and
shrb
mov
pop
lahf
pop
and
sub
sbb
push
inc
sbb
or
lcall
and
cmp
loope
sarl
loope
icebp
test
jg
push
rolb
and
rclb
push
jne
in
sub
sub
xor
das
mov
hlt
cmc
add
cwtl
inc
cmp
add
push
fdivl
iret
mov
xchg
in
addr16
bswap
stc
insl
jp
or
fiaddl
rcll
sbb
ffree
std
std
in
fld
test
std
stc
shrl
data16
adc
add
unpcklps
xor
outsb
sub
dec
cmp
inc
and
push
lret
es
mov
push
ret
movsl
mov
lahf
cmpsb
sub
jns
push
inc
scas
dec
fidivl
bts
lcall
jo
clc
imul
push
mov
add
and
xor
int3
arpl
push
es
rolb
and
and
shll
outsl
push
popa
popa
nop
xchg
inc
push
dec
inc
jg
xchg
into
cli
stos
fcmove
repnz
out
or
sub
gs
lea
inc
or
sbb
sbb
imul
or
inc
sbb
insb
adc
aad
in
inc
add
xor
jnp
adc
ret
mov
mov
dec
popa
and
xchg
inc
cmpsl
fsubrs
xor
mov
lds
jnp
fnstsw
cmp
or
inc
dec
jb
pop
cmc
add
jecxz
jecxz
sti
sti
iret
jecxz
lret
ret
out
scas
fninit
sub
mov
pop
inc
pop
js
outsb
jne
dec
adc
sbb
xor
dec
and
push
push
push
incl
leave
enter
sar
clc
push
push
pop
lods
data16
into
scas
daa
into
or
push
mov
push
jae
data16
or
mov
mov
iret
pop
inc
fs
sbb
add
push
dec
pop
mov
jns
divl
ds
loope
loope
fdivl
mov
popa
cmpsb
test
mov
mov
orb
and
push
cmp
jnp
sub
inc
xor
inc
xor
int3
repz
lret
bound
imul
mov
in
js
and
std
jno
add
mov
dec
or
cs
cmp
or
icebp
dec
cmp
push
push
fstpl
jnp
push
and
std
mov
aad
icebp
icebp
std
mov
in
sub
mov
and
jne
jmp
lcall
dec
jo
push
data16
cmp
pop
adc
jno
mov
xor
sub
imul
pop
push
hlt
jecxz
rcrb
pushl
xor
stc
adc
jb
lret
div
loope
test
movsb
push
insb
lea
loopne
das
test
mov
dec
rorl
pop
js
dec
ret
ds
or
arpl
inc
or
sbb
or
aam
movsb
pushf
mov
sub
mov
leave
sub
clc
addb
pop
push
jbe
data16
dec
push
data16
out
jnp
out
in
int3
mov
mov
xchg
call
in
mov
sahf
arpl
cmp
gs
popa
push
pop
pop
cld
loope
inc
sbb
ljmp
pop
mov
adc
dec
xor
or
or
cmp
fs
iret
cmp
sbb
sub
data16
inc
cs
and
push
int3
pop
pusha
and
adc
or
sub
pusha
orl
gs
stc
sahf
xchg
jae
lret
xlat
call
pushf
faddl
inc
mov
cli
or
add
sbb
in
loope
sbbb
mov
mov
sti
push
mov
and
fnstsw
cmpsl
out
repnz
ljmp
out
xchg
fisubrs
or
inc
jp
jnp
jnp
add
lcall
sub
sub
pop
or
sub
ss
dec
inc
inc
icebp
jge
add
xchg
push
mov
and
xchg
pop
pop
test
and
inc
movsb
xchg
fisubl
jecxz
mov
pop
sub
push
sbb
inc
aam
sbb
jmp
loop
loopne
popf
add
xchg
faddp
push
test
pop
cmp
insb
sub
inc
cmp
dec
rcll
pop
pop
sbb
arpl
sbb
das
add
pop
sub
popa
inc
movsl
or
adc
lds
pop
add
and
pop
and
in
lcall
xchg
sbb
push
or
jne
enter
xor
nop
pop
pop
stos
cmpsl
imul
shll
out
clc
mov
mov
mov
or
sub
int3
andb
aas
cmp
cmp
mov
mov
roll
movsl
sub
popa
cld
pop
jl
call
sahf
ret
jmp
ret
movsl
sahf
andl
in
mov
cltd
xchg
mov
adc
ret
out
mov
pop
dec
mov
xor
mov
sbb
pushf
and
out
pop
mov
rcrl
sbb
sbb
js
les
push
adc
fldt
sub
or
test
cs
add
xchg
xor
outsl
aaa
aaa
cmp
add
and
sub
pusha
inc
mov
bound
xor
xor
sbb
adc
insl
and
pop
jge
ja
mov
lcall
push
ds
cmp
push
xor
pop
and
pop
jmp
xlat
jmp
mov
sub
movsb
xor
out
sub
pusha
mov
push
dec
fdivrl
sub
ret
mov
mov
sbb
icebp
out
inc
fs
mov
sub
mov
and
xchg
inc
jb
inc
jmp
mov
outsl
mov
fdivrl
shl
mul
push
icebp
mov
dec
xor
int3
jbe
pop
mov
daa
push
jae
xor
pop
popf
inc
enter
dec
push
repz
gs
andb
dec
dec
insb
jb
cltd
adc
push
push
push
es
jbe
ss
sub
outsl
dec
lods
iret
scas
mov
loop
xlat
arpl
cli
mov
call
test
mov
jmp
outsb
dec
fldt
cli
and
mov
scas
out
fisttpl
addr16
cmp
loope
imul
push
jne
add
leave
lods
push
cmpsl
inc
mov
sbb
test
xor
cmpl
mov
outsb
lds
out
mov
out
scas
fmul
mov
fisttps
sub
outsl
cmpsb
and
rcll
enter
in
clc
mov
pop
fdivrs
mov
cltd
or
negl
js
mov
sbbb
cwtl
adc
fidivrs
je
jns
jo
cmp
sbb
fmul
mov
add
gs
mov
xchg
scas
mov
mov
xchg
sub
outsb
adc
out
push
lea
jne
push
movb
movw
lea
call
pusha
pushf
lea
jmp
mov
popf
icebp
in
sahf
push
movsl
add
fwait
jmp
mov
scas
pop
push
dec
jae
outsb
mov
cmp
es
ror
in
outsl
dec
ret
mov
push
or
xchg
daa
pusha
add
std
ret
bound
add
call
mov
fwait
shll
xor
adc
or
sub
and
and
adc
test
clc
mov
call
xchg
pop
sub
sbb
mov
test
mov
jecxz
lret
xchg
xchg
cmpsl
mov
xchg
lahf
cmpsl
mov
and
mov
add
ja
jb
push
ja
pop
dec
jae
sub
insl
push
aad
movb
not
pusha
push
call
pop
jl
sbb
mov
fs
push
ss
or
pop
inc
jp
cmp
add
inc
stos
movsl
mov
or
enter
or
push
sub
aad
pop
dec
scas
in
or
or
sbb
les
clc
mov
lahf
push
dec
aaa
xchg
mov
bswap
shl
mov
xchg
stos
testl
and
sbb
sub
sub
jl
adc
sub
test
test
pushf
push
shl
movb
call
pop
pop
pop
pop
aas
jle
icebp
std
sbb
ret
xlat
mov
repz
adc
jb
sahf
jmp
test
jne
loope
inc
sub
mov
push
daa
enter
sbb
shrl
fisubs
fcom
int3
test
pop
and
imul
xchg
adc
or
add
ds
push
sub
sub
insb
ja
iret
jmp
add
inc
outsl
inc
jb
gs
outsb
jne
gs
imul
jae
bswap
mov
pusha
pushl
ret
xchg
shll
sbb
je
outsb
jb
outsb
push
pop
and
jb
jbe
ja
test
adc
push
loop
push
popa
adc
cmc
adc
xchg
push
inc
xchg
add
dec
ss
fiaddl
int
addr16
fisubl
mov
and
das
cltd
ret
xchg
jb
pop
dec
push
sbb
in
jmp
xchg
xor
gs
rorb
sar
neg
jp
pop
cmpb
je
adc
icebp
pop
sahf
and
ljmp
comiss
arpl
pop
aas
pop
push
daa
sub
insb
in
adc
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
shr
fstpt
shrb
hlt
xchg
in
sub
inc
es
std
add
push
cld
cmp
inc
lret
ret
lea
out
sahf
jl
dec
adc
cmp
cmpsb
les
cmp
inc
lock
out
push
jge
stc
fst
and
pop
adc
sahf
pusha
mov
fildll
out
ret
xchg
shl
ret
ret
ret
xlat
sub
imul
addb
pop
ss
add
inc
sub
push
sub
insl
jecxz
cmp
pop
jmp
push
insb
popf
icebp
popf
popf
mov
test
jno
mov
subb
cltd
push
mov
out
mov
rcl
ds
lahf
jp
sbb
xchg
xchg
in
into
imul
lahf
jbe
cmp
mov
pushf
in
xchg
mov
mov
inc
mov
test
mov
jmp
mov
xchg
shrl
pop
sub
es
or
js
inc
mov
mov
push
sbb
cmp
fs
sbb
sbb
shll
mov
pop
and
xor
out
in
mov
push
lock
popl
mov
lods
icebp
clc
iret
xchg
push
xorl
loope
shll
sub
adc
hlt
lods
sti
movsb
lods
mov
mov
fiaddl
enter
jecxz
dec
ss
test
pop
mov
or
push
scas
add
test
cmp
mov
pop
inc
jae
xchg
nop
in
mov
repnz
push
inc
fildll
fcoms
jmp
out
adc
mov
sbb
and
xor
mov
xchg
js
mov
add
jl
push
faddl
sub
add
xchg
dec
sub
push
add
sub
arpl
mov
and
sub
lods
dec
or
sbbl
popa
scas
sub
out
mov
in
mov
loope
pusha
daa
xlat
jmp
xchg
jb
pop
das
jns
pop
fstl
xor
pop
js
push
jl
jl
push
ret
mov
jne
jno
and
lock
rcll
nop
sub
imul
inc
add
ret
add
enter
xorb
cwtl
xchg
jl
mov
shl
inc
xor
xchg
call
imul
mov
lret
cmp
in
in
mov
push
push
xor
adc
arpl
cmpsb
xchg
call
add
repz
into
lret
stc
dec
push
add
leave
adc
stos
mov
or
xchg
rcr
ret
ret
loop
or
push
in
pop
jg
sbb
adc
pushf
mov
xor
pop
dec
or
sbb
mov
fs
cmp
int3
and
int
dec
jecxz
mov
mov
cmpsb
inc
movsb
cmp
fadds
mov
xor
dec
scas
in
mov
mov
fadds
fstl
fdivl
xor
imul
xchg
daa
leave
and
jge
add
out
or
das
mov
xchg
mov
in
fdivr
sub
push
inc
push
dec
inc
dec
xor
cs
insb
add
int3
inc
inc
fs
jp
es
jbe,pt
add
pop
ss
inc
stos
mov
xchg
mov
mov
cmp
mov
int3
fdivrl
push
or
pop
lods
fwait
ja
mov
mov
xchg
mov
shl
cmp
jecxz
mov
mov
mov
roll
fsts
mov
pop
or
enter
mov
add
cmp
dec
addr16
arpl
or
iret
out
into
xor
xorb
mov
mov
rcl
shrl
cmp
pop
or
in
lcall
in
or
jmp
jle
inc
inc
push
push
imul
popa
mov
mov
adc
enter
rorb
or
scas
adc
lods
icebp
mov
mov
push
rcrl
sar
stc
shr
je
int
pop
xchg
aas
mov
fidivl
ljmp
rorb
in
jle
mov
fwait
jge
push
in
lods
push
and
ud1
cmpb
shrb
jae
leave
push
mov
sbb
xchg
dec
es
xor
es
fiadds
mov
pop
xchg
mov
xchg
test
dec
xchg
int3
in
mov
adc
fucom
jge
lds
outsb
dec
push
jbe
bound
or
imul
xchg
mov
mov
mov
imul
pusha
inc
push
inc
pop
push
jb,pt
sub
or
dec
inc
jne
in
jb
sbb
pop
inc
xorl
in
lods
lods
cmpsl
push
popa
enter
dec
mov
add
out
mov
xchg
insl
cmp
loope
jno
mov
test
sub
loope
rcr
mov
cwtl
int3
cld
rclb
subb
xchg
roll
or
jge
cmp
cmpsb
vpsubusw
mov
fucomp
push
mov
fnstcw
lret
pusha
mov
push
mov
and
add
fistl
sub
popf
dec
xor
cli
jns
jnp
xor
dec
mov
jnp
inc
daa
jle
mov
mov
aas
cmp
int
or
add
int3
in
add
not
imul
jae
xor
inc
pop
pop
jnp
pop
outsl
adc
pop
movntps
xchg
push
xchg
mov
mov
leave
popf
push
adc
vpandn
stos
mov
iret
scas
fldt
cmpsl
movsb
inc
inc
das
movsl
jnp
lods
fdivrs
test
xor
dec
jg
fwait
insb
bound
shll
es
lret
xor
push
sbb
in
int3
stos
lock
jno
out
push
jle
or
iret
lock
das
ud2
sub
cltd
mov
clc
aaa
cmp
or
in
add
pop
or
mov
sub
mov
inc
arpl
arpl
inc
inc
jnp
pop
cmp
sub
xchg
es
pushf
ror
test
pushf
pushl
std
pushw
popfw
movb
inc
jmp
pop
test
fwait
push
jmp
out
shll
iret
mov
lret
add
cmp
dec
pop
sbbb
and
loop
sub
hlt
fstl
cltd
push
out
add
ficoms
int
mov
rorl
cs
mull
das
iret
adc
jp
push
jns
mov
pop
pop
insb
sub
or
scas
repz
stos
fistl
lret
and
push
xor
inc
or
jp
pop
and
dec
ss
dec
ds
sbb
adc
hlt
sub
jge
int
cmpsb
loop
adc
xor
cwtl
cltd
insl
push
sbb
pop
mov
ret
sbb
mov
in
or
into
inc
lods
push
xor
or
push
jnp
out
cmpsl
mov
mov
sbbb
push
bound
cmp
and
adc
and
push
sub
xchg
push
mov
sbbb
and
cld
or
jb
jbe
data16
bound
push
push
cmp
out
push
pusha
adc
jns
push
or
adc
dec
mov
rorb
ret
add
push
fists
jle
mov
cwtl
dec
lods
ja
dec
dec
mov
pushl
loop
out
test
inc
adc
jge
and
cmpsb
out
cmpsb
scas
lcall
mov
sbb
push
inc
push
add
mov
or
sub
js
sbb
sub
cmp
pop
pusha
or
movsb
or
pop
addr16
push
cmp
hlt
clc
enter
xchg
mov
shr
xor
popa
jmp
mov
fs
cld
repz
cld
and
add
and
jno
mov
xor
test
cmpsb
test
inc
imul
mov
dec
orl
cmpsb
std
ret
ret
lcall
xchg
lret
jmp
sbb
in
lock
shr
hlt
fsub
sub
xchg
cmp
mov
adc
add
nop
rclb
rclb
aam
loope
jbe
test
nop
out
int
mov
ffree
insl
test
xchg
add
jmp
fstl
scas
push
jnp
push
push
push
lds
iret
xor
jns
inc
je
pop
stc
mov
sbb
lcall
or
repnz
xchg
mov
push
dec
mov
lods
mov
gs
push
cltd
nop
add
dec
xor
add
mov
rcrb
push
pop
daa
das
cmp
sbb
aad
ljmp
adc
out
mulb
fs
inc
or
and
cmp
adc
sbb
push
daa
fwait
sub
xlat
lahf
js
lret
je
jo
add
insb
fs
insb
je
push
xchg
or
fs
call
push
pushf
mov
mov
push
pusha
pushf
lea
jmp
push
je
inc
or
bound
push
or
and
push
cs
bound
pushf
or
jb
push
add
inc
lods
and
mov
push
in
jmp
idivl
push
imulb
mov
mov
sub
jno
add
cmc
mov
repz
mov
notb
ret
ret
dec
pop
push
inc
push
pop
push
xor
pop
jle
pop
jb
sub
xchg
mov
add
ja
inc
add
mov
repz
mov
mov
mov
sarb
sbb
dec
push
cld
ret
add
out
or
repz
cmpsl
mov
jg
in
sub
sahf
cmp
movsb
add
es
das
cmpl
mov
or
jb
das
push
push
fcoms
aaa
bswap
sub
lcall
sub
and
push
inc
pop
inc
inc
and
aaa
inc
jg
inc
inc
sub
nop
push
std
xchg
les
jge
and
repnz
ljmp
xchg
not
in
or
stc
repnz
xor
mov
pop
cmp
sbb
adcb
leave
jno
hlt
adc
inc
lcall
aad
adc
pop
jge
jecxz
push
je
iret
das
cmpsl
out
leave
loope
dec
mov
push
dec
cmpsl
xchg
mov
sahf
stos
mov
sahf
mov
nop
divl
xor
ss
jecxz
stc
mov
icebp
leave
mov
std
ror
jmp
cmp
pop
not
mov
mov
mov
jo
jo
andb
push
push
add
push
call
mov
dec
pop
insl
adc
sub
cmp
and
dec
jo
lea
rdpmc
shrl
lret
fadd
add
dec
push
cltd
lods
aad
mov
mov
push
scas
pop
add
dec
data16
ss
shrl
ljmp
scas
ljmp
lahf
addl
cwtl
int3
movsb
cwtl
scas
mov
fdivr
shlb
out
out
fiadds
dec
int3
xchg
out
pushf
xchg
in
add
rorb
jns
pop
in
push
shlb
add
or
pop
andb
dec
add
dec
jmp
leave
out
inc
mov
pop
into
pusha
inc
inc
js
or
cmp
pop
add
jmp
out
jle
lahf
xchg
cltd
mov
adc
mov
sub
sbb
aad
inc
sbb
cmp
clc
popa
sbb
pop
or
add
js
and
or
pushw
push
dec
pop
or
adc
sbb
dec
sub
cmp
inc
jo
pop
or
daa
rcll
sub
xchg
js
sub
or
inc
mov
cmp
mov
adc
mov
shl
iret
push
mov
mov
jg
dec
push
movsl
es
jns
jl
add
push
cmp
shll
aad
jmp
std
sub
sahf
mov
pushl
pushf
mov
call
add
insb
insb
push
mov
mov
in
cld
mov
rol
mov
addr16
cmp
cmp
sbbb
push
fcmovu
add
dec
pop
pop
int
add
fmulp
sub
sbb
fdivl
and
ds
cmp
mov
mov
cwtl
push
push
jnp
add
lret
iret
xor
lcall
int3
lea
add
outsb
dec
push
jbe
pop
pushw
dec
inc
sub
popf
pop
decl
mov
lods
shll
jmp
out
lods
adc
xchg
loop
lcall
jle
inc
aad
cwtl
push
xor
int3
xor
adc
stc
push
outsl
cltd
mov
shll
loopne
cmp
push
mov
outsl
mov
cmpsl
or
jno
scas
xchg
ss
sbb
push
dec
push
imul
adc
pop
arpl
or
pop
xor
sub
push
daa
pop
add
xor
pop
pop
push
pop
outsl
push
pop
fcmovbe
add
sets
dec
sub
outsl
das
xor
hlt
xor
iret
in
lods
dec
jmp
mov
mov
out
xorb
sbb
or
shrb
push
lahf
push
mov
bswap
ss
es
jne
lods
cmc
and
iret
sbb
xor
sbb
cmp
or
mov
mov
rcl
stos
xchg
out
xchg
fwait
lret
mov
mov
out
es
fwait
pop
push
adc
sub
xchg
add
cld
loope
push
fxch
xchg
xlat
jecxz
lret
inc
add
jns
out
mov
push
fwait
cmp
push
bound
test
or
arpl
and
lcall
sbb
mov
adc
testb
lahf
adc
mov
cmpsl
mov
and
xchg
mov
mov
or
cmp
dec
xor
je
arpl
rolb
pop
icebp
mov
shr
hlt
fdivrl
add
stos
jmp
and
jle
mov
push
insb
lahf
addr16
xorl
inc
stos
xor
outsb
and
test
inc
imul
scas
or
fidivrl
jno
push
or
inc
je
in
lret
mov
outsb
and
push
xchg
mov
testb
and
push
adc
sub
fwait
insl
scas
mov
inc
and
dec
dec
adc
aaa
clc
cli
xchg
addb
pop
xor
sarb
incb
mov
or
mov
pushf
popa
test
aad
inc
cmp
pop
inc
pop
inc
sub
fwait
push
lock
inc
add
pop
jge
dec
pop
and
mov
mov
pushf
popa
insb
pop
js
mov
mov
test
cmp
stc
loope
movsl
xchg
int
push
dec
scas
add
test
das
cld
adc
js
push
add
dec
push
dec
add
clc
xchg
or
mov
xchg
aas
jge
setae
clc
fcomps
nop
roll
addr16
arpl
cs
pop
xor
jae
fsubp
mov
jg
jns
aas
arpl
push
xor
testb
mov
push
aaa
adc
leave
cmp
dec
jb
push
mov
or
mov
fstpl
arpl
movsb
dec
push
add
js
lds
adc
shl
icebp
cmp
out
pop
sti
loop
orl
in
mov
adc
decb
mov
inc
jle
xlat
xor
stc
lods
insl
push
pop
arpl
outsl
vmwrite
dec
adc
movsb
rolb
push
bound
jp
xchg
pop
cld
data16
fsubrl
rcrl
fldl
inc
bound
ss
pop
sub
lcall
fs
cs
insb
add
lea
jb
cmp
test
cmpb
push
pushl
lea
jne
call
mov
scas
fcmovne
dec
call
mov
leave
mov
xorl
xchg
xchg
jmp
repz
add
jg
aas
xchg
inc
repz
mov
es
mov
xor
cld
outsl
movl
lcall
cmp
mov
ret
cli
cmp
call
mov
mov
repnz
sub
cltd
lahf
pop
jp
push
xor
xor
fs
insb
add
sbb
mov
mov
mov
pop
mov
mov
mov
xor
push
push
out
lods
sar
adc
pop
inc
scas
flds
movsl
jmp
int3
sub
mov
incb
scas
in
mov
push
lret
sub
rcl
sub
ljmp
add
cmp
mov
adc
mov
and
or
fs
adc
and
or
inc
xor
sub
jne
pop
pop
pop
sub
push
and
dec
add
adc
mov
cmp
cmp
cli
outsb
iret
jge
sbb
push
push
fs
call
inc
addr16
sbb
pop
imul
stos
or
loop
cmp
mov
jb
sbb
fdivrl
pop
ds
mov
aaa
cwtl
loopne
shr
rolb
clc
loopne
or
jnp
pop
dec
sti
insb
pop
or
adc
pop
sub
inc
xor
aad
rolb
adc
dec
xor
out
mov
dec
cmp
add
ja
mov
icebp
pop
mov
jno
pop
hlt
imul
mov
subw
jge
xor
and
jns
sub
xchg
cmp
xor
pop
add
push
adc
push
xor
push
pop
mov
push
jmp
cmpsb
imul
jg
mov
pop
inc
mov
repz
int3
adcb
jne
mov
push
movsb
cmp
sub
in
dec
orl
xor
les
push
aad
out
mov
negl
xchg
mov
mov
jmp
xor
mov
shll
sub
inc
cmpsb
xor
dec
xor
aaa
or
daa
adc
sbb
or
sub
xchg
sub
and
push
fs
push
jle
add
data16
pop
ds
dec
adc
adcb
or
imul
inc
cmpsb
sti
inc
adc
or
aam
int
ds
data16
arpl
xchg
push
sub
fistpl
mov
and
ljmp
jle
push
xchg
into
adc
mov
data16
push
outsb
jnp
popf
lret
xchg
fldenv
in
mov
mov
pop
fstpl
lret
inc
ret
lahf
loop
or
test
test
xchg
lret
cmpsl
call
mov
cs
mov
pop
push
sbb
and
repnz
cmp
push
adc
jecxz
in
inc
mov
fidivrl
or
aas
lods
out
jle
jge
mov
fstl
movsb
call
aad
sti
jo
push
add
int3
ja
push
jno
js
stos
inc
cmp
pop
das
push
jmp
adc
jg
outsb
xchg
pop
inc
push
and
push
lea
xchg
cli
cmpsb
xchg
loop
into
mov
sub
xchg
dec
inc
push
dec
xor
cs
insb
add
adc
pusha
pushf
lea
jmp
sub
dec
sub
add
or
mov
shl
sar
mov
pushf
cmp
push
repnz
pusha
pushf
lea
jmp
movb
not
pushl
stc
rol
pusha
call
sub
xor
cmp
dec
adc
aaa
daa
imul
aas
pop
jae
push
adc
movsl
or
sbb
adc
movsb
jp
mov
mov
lds
adc
loope
sbb
test
mov
ret
sbb
imul
testl
js
test
add
fdivl
pop
movsl
cld
adc
imul
stos
dec
push
jno
mov
jns
lcall
inc
xchg
fidivrl
test
cli
mov
or
or
adc
add
insl
adc
sahf
leave
and
pop
xchg
cmp
jg
push
addr16
adc
xchg
filds
test
pop
jge
ret
or
ljmp
or
popf
scas
inc
jp
inc
inc
mov
mov
shlb
mov
inc
xchg
fs
and
add
scas
pop
outsb
aaa
rcrl
and
cmp
mov
cmp
jo
push
sub
aad
ss
mov
dec
ret
ljmp
adc
ljmp
fldl
jmp
mov
mov
shll
cmp
data16
into
loopne
or
sahf
leave
push
mov
decl
clc
dec
test
rcrl
leave
pop
and
lcall
into
and
pusha
sahf
cld
sti
cmp
cmp
out
add
stos
cmp
add
aaa
mov
or
or
mov
mov
sub
test
gs
jne
jb
push
popa
insb
jne
inc
add
sti
inc
sub
call
iret
ljmp
hlt
jg
pop
add
and
adc
and
mov
ficoml
jns
popf
push
sub
jle
mov
subl
cmp
sbb
repnz
in
fisttpl
lods
push
roll
mov
dec
ret
mov
out
inc
movsb
xchg
int
dec
push
xor
stc
movsl
xchg
mov
roll
push
addr16
sbb
xor
adc
mov
mov
mov
or
in
mov
outsl
das
sub
sbb
xor
add
lds
mov
inc
sbb
cmp
sbb
dec
sbb
pop
push
lea
xchg
push
lahf
arpl
aas
or
rdtsc
inc
and
sub
loopne
popf
je
dec
dec
sbb
push
xchg
pop
cltd
push
and
and
jbe
ss
adc
sub
sub
xorb
clc
pushf
repnz
lea
jmp
xor
movsl
leave
icebp
fsubrs
ret
in
ficoms
fidivrs
std
arpl
das
mov
insb
jae
nop
into
cmp
xor
push
push
fidivs
dec
lret
mov
mov
fnstenv
add
ud1
mov
adc
iret
and
les
inc
lahf
sub
xchg
cmpsl
cmpsl
fucomi
inc
jecxz
mov
sti
sub
andb
push
dec
pop
fsubl
xor
dec
and
push
xor
insl
shlb
arpl
cld
jb
xchg
int
add
insb
lock
fisubl
test
stc
mov
inc
inc
incl
shr
and
ficoms
and
dec
in
mov
add
sbb
out
fistps
aas
cmp
push
stos
xchg
je
and
outsl
push
pop
jne
ja
ret
mov
sbb
xor
xor
or
repz
xchg
loop
inc
neg
inc
inc
mov
les
fcom
push
push
mov
mov
mov
xchg
mull
jo
xchg
jl
aam
and
inc
push
inc
inc
and
out
adc
adc
xchg
mov
lea
and
icebp
inc
xor
cli
pop
idivw
rcrb
xor
xchg
xchg
adc
jo
inc
roll
shll
xor
and
sarl
adc
xchg
adc
dec
jle
cmp
jbe
sti
pop
push
push
push
das
jo
mov
fimull
ljmp
sub
subl
push
testl
sub
adc
jns
cmpsl
js
pop
lahf
sbb
adc
and
stc
mov
cmpsb
mov
int3
mov
in
btr
jl
xor
mov
mov
jl
sub
mov
call
adc
push
movsb
test
int
cmpsl
mov
movsl
sub
fisttpl
push
ss
cmc
or
or
mov
repnz
mov
jecxz
or
into
lret
stc
ds
add
jns
popa
add
dec
or
sti
xlat
adc
ret
push
cmp
mov
pushf
mov
test
fsts
aaa
sbb
pop
dec
cmpsl
xchg
bound
out
sub
shrb
push
push
faddl
div
mov
rclb
cmpsl
stos
data16
mov
or
loop
pop
mov
pusha
adc
jb
and
and
scas
inc
sub
xchg
lds
mov
fs
mov
mov
pop
mov
lahf
repnz
adc
xchg
loopne
call
lock
lock
in
sub
vpmacsww
cmpb
lock
pushf
nop
clc
pushf
fcomps
or
cmpsb
dec
and
scas
mov
mov
adc
hlt
enter
movsl
xchg
cmp
mov
push
or
pop
mov
mov
sbb
pop
das
ja
sub
shrl
mov
insl
push
fadds
bound
add
and
pop
or
or
adc
push
adc
jo
xchg
mov
push
data16
data16
and
add
ljmp
and
inc
cmp
push
mov
push
fdivl
add
pavgb
imul
mul
cmp
push
test
in
mov
cmpsl
mov
out
mov
dec
or
inc
cmp
stos
loope
rcr
movsb
addl
pop
dec
adc
xor
sahf
cli
scas
push
push
mov
inc
cmp
ss
cmp
inc
push
adc
xor
movntps
mov
movsl
clc
clc
ror
test
call
add
ljmp
fisubs
adcl
inc
inc
lret
les
adc
sub
iret
xchg
xchg
lods
and
pop
int3
or
pop
lcall
pop
repnz
int3
add
jno
cltd
rolb
test
inc
cmp
sarl
xchg
jp
adc
iret
daa
cmp
mov
add
jno
push
dec
repz
repz
fildl
or
cmp
jl
jge
push
data16
jp
pop
or
bound
cmp
and
insb
sub
pop
ds
adc
mov
iret
pop
rclb
sub
loopne
insl
mov
inc
arpl
adc
add
pop
clc
xorl
cli
rcr
fprem
push
out
cli
add
add
cmp
push
cmpl
push
and
dec
jbe
bound
sub
lea
int3
ljmp
pushf
pusha
call
or
gs
jo
and
sbb
inc
inc
jnp
dec
daa
inc
imul
cli
cmc
xor
and
fs
es
arpl
sub
add
sbb
iret
push
fwait
jb
loopne
loopne
xor
dec
repz
xlat
in
and
addb
int3
or
in
mov
mov
in
rcr
rcr
sub
lea
and
ja
jmp
lea
call
cmpsl
inc
jle,pn
or
je
xchg
mov
xchg
rcrl
shll
xor
inc
lahf
dec
inc
pop
mov
in
fidivrs
js
mov
cmp
xchg
jle
mov
cmp
stc
inc
add
jmp
and
in
inc
cwtl
aas
shl
out
and
out
or
repnz
ja
test
mov
pop
pop
push
in
bnd
xor
loop
scas
out
aaa
add
leave
adc
jg
inc
xor
or
adc
adc
sub
mov
mov
add
lea
jne
pushf
dec
call
pushf
adc
pushf
push
push
pushl
ret
cmp
cwtl
fs
clc
test
mov
orb
hlt
hlt
sti
sbb
das
cmpsb
cmc
test
mov
lcall
pop
out
cli
sbb
scas
pop
outsl
pop
ljmp
inc
cmpsl
inc
mov
sbb
jbe
inc
mov
popa
mov
addr16
popa
pusha
add
cmp
ret
sbb
rolb
shl
mov
out
mov
dec
shll
clc
aam
mov
cmp
cmp
es
xor
sub
cmp
or
ss
add
stos
mov
mov
push
mov
in
adc
xchg
popf
lcall
cmp
jecxz
jae
mov
jl
jl
cmp
loop
stos
fisttpl
mov
mov
push
jne
inc
cmp
push
jno
sahf
xchg
push
dec
out
cltd
loopne
je
sub
jne
inc
cmpsb
fcomip
push
dec
test
loop
jge
mov
clc
mov
inc
gs
loop
mov
lret
lret
jmp
add
push
and
popf
and
dec
outsl
mov
mov
pop
jno
imul
dec
mov
aaa
cmp
dec
add
and
mov
mul
jecxz
jmp
mov
ja
pushf
jg
mov
stc
cmpsb
and
mov
lock
or
inc
lods
lret
xor
fildl
jle
mov
faddl
out
push
lcall
inc
xchg
orb
in
and
cvtdq2ps
pop
adc
sub
pop
pop
adc
sub
mov
into
lea
jg
pusha
pushf
mov
call
jmp
ror
cmp
pushw
popfw
lea
js
pushf
push
inc
push
jmp
pushl
cmc
add
stc
cmp
pushf
pusha
pushf
pushf
lea
jb
pushf
cmp
mov
lea
jae
inc
lea
mov
bt
btc
dec
shr
mov
or
sbb
rol
mov
push
xor
call
mov
loopne
push
inc
aad
fbld
out
fbstp
pop
js
mov
mov
xabort
or
fiadds
cld
mov
inc
mov
cli
das
test
sbb
jl
pop
cmc
dec
iret
mov
mov
into
or
or
fldln2
shll
daa
mulb
mov
push
adc
cmp
sbb
mov
les
or
pusha
pop
or
add
or
add
adc
jo
inc
jo
mov
push
push
bound
dec
ja
pushl
inc
out
and
aam
clc
sbb
scas
add
dec
out
ret
test
decb
stc
repz
pop
mov
dec
es
xor
cmp
pushf
mov
inc
ret
inc
outsb
outsb
jb
xor
cmpsb
rcr
out
pushf
lahf
sti
jecxz
scas
repz
iret
out
lahf
scas
repz
stos
dec
xor
add
je
outsl
fs
gs
imul
add
test
pusha
pushf
call
into
je
js
and
mov
test
sub
movsl
lods
mov
or
cwtl
iret
popa
dec
aad
ret
std
sarb
int3
xchg
test
scas
xor
add
stos
pop
std
mov
push
mul
xor
es
lret
loop
lret
push
mov
enter
cmp
fldcw
mov
mov
cld
or
sub
jns
sbb
iret
and
mov
aaa
into
dec
and
ja
push
lcall
lret
lret
mov
fcomi
iret
lret
iret
xlat
sub
mov
xor
push
mov
adc
push
pop
ss
jbe
push
sbb
jp
push
cmp
ficoms
xor
out
out
mov
shlb
cmp
aas
iret
pop
adc
xchg
mov
mov
or
aam
js
scas
fnstcw
mov
dec
sub
adc
jge
or
in
gs
idivl
ja
push
push
sbb
sub
add
pop
cmp
sub
sub
mov
test
jmp
pushf
pushl
pusha
lea
jne
not
rol
sub
dec
jmp
cmp
fstpl
xor
outsb
bound
jbe
sbb
inc
jp,pt
lfs
repz
fildl
in
push
or
in
orl
ja
sbb
push
push
decl
insl
popa
dec
add
pop
add
clc
shll
mov
ret
mov
mov
inc
ficoms
mov
adc
scas
pusha
data16
ss
jbe
lret
stc
in
mov
aaa
dec
js
and
mov
mov
orl
ret
xchg
scas
sub
mov
xor
adc
test
add
pushf
lea
jmp
mov
lea
jbe
movsbl
xadd
sub
mov
test
mov
bt
dec
mov
rcl
pusha
add
xchg
call
xor
dec
jge
cmp
ficoms
xor
jnp
jg
push
pop
arpl
dec
pop
je
lds
movsl
and
inc
jle
sub
dec
int3
xchg
push
or
emms
addr16
gs
inc
dec
outsl
fs
cltd
xchg
in
dec
push
mov
or
aaa
es
jno
jp
int
mov
and
mov
cmp
sti
sarb
icebp
sbb
dec
adc
adc
cmp
and
repnz
push
aas
popa
test
sbb
fistpl
push
cmpsb
push
fildll
icebp
cltd
test
sbb
jmp
dec
mov
cli
aad
inc
jp
arpl
dec
cmp
push
pop
mov
ss
xchg
mov
cmp
mov
ss
dec
cld
adc
sub
lock
sarb
in
mov
fisubrs
sahf
div
fcompp
pop
jb
mov
xchg
cmc
popf
sahf
push
imul
sub
mov
xchg
mov
mov
test
std
mov
mov
out
fucomi
iret
rolb
and
loopne
jge
shrb
aaa
mov
xor
add
repz
fildl
adc
pop
stos
scas
xchg
xchg
pop
sbb
dec
insl
mov
into
popf
xchg
sub
pop
into
cli
shrl
mov
nop
jno
pop
lock
mov
insl
xor
int3
sbb
inc
cld
andb
xchg
mov
add
xchg
xor
in
mov
mov
lods
sub
mov
cs
xchg
testl
xchg
mov
cltd
icebp
xchg
rcrl
shrl
in
cld
roll
mov
lods
xchg
aas
and
inc
scas
enter
mov
dec
adc
xchg
in
movsl
lods
imul
cmp
repz
cmpsl
rcll
insl
xor
sbb
cmp
or
cli
subb
scas
sbb
call
nop
hlt
pushf
ror
sbb
lret
mov
ret
outsb
arpl
data16
orl
adc
and
fprem
pusha
mov
aas
xchg
addr16
mov
cld
sub
fistl
sub
mov
les
in
cmp
push
jne
pusha
lea
push
push
orl
add
pop
insb
xor
cmp
or
sub
sub
mov
adc
inc
js
inc
and
sub
out
mov
add
mov
jl
popa
out
out
xchg
or
jns
pusha
sub
outsb
scas
push
imul
xor
pop
leave
dec
push
fchs
stos
or
ss
dec
adc
mov
mov
clc
cmp
aad
fldenv
lods
lods
inc
push
xchg
bound
dec
jno
mov
hlt
lret
jl
inc
jl
pop
pusha
inc
and
sub
mov
mov
out
sub
fbld
pusha
insb
or
adc
sbb
inc
arpl
icebp
pop
sub
lcall
in
cmpsl
sarl
movsb
or
push
imul
mov
das
dec
insl
ljmp
mov
int3
in
xor
mov
movsb
ret
cli
mov
mov
fucomp
stc
mov
jmp
lret
jecxz
ret
stos
push
out
fcomip
iret
rcl
sub
mov
jno
sbb
imul
jno
arpl
jg
jnp
sbb
arpl
and
int3
imul
pushl
pop
push
add
push
xchg
int
repnz
xchg
fistl
add
sbb
movl
xchg
mov
fs
add
cmp
mov
iret
adc
mov
xor
popa
cmp
leave
cltd
fdivs
dec
jg
jae
jg
jae
cmova
dec
outsl
sub
mov
aad
and
gs
sub
sub
adc
adc
push
push
push
aas
cmpsb
icebp
jg
les
ds
push
pop
std
jge
inc
cmp
outsl
arpl
daa
fwait
jns
loopne
mov
xchg
movb
cmp
shll
add
jnp
gs
mov
jecxz
subl
xchg
cmpsl
xchg
or
inc
outsb
push
xchg
jle
add
push
sub
push
adc
dec
xor
out
mov
push
pop
jnp
iret
pop
cmp
fs
mov
das
mov
jbe
out
cmc
lret
out
daa
lods
sub
ja
lahf
jp
push
xlat
hlt
dec
fnstcw
movsl
les
mov
leave
out
jae
cli
out
cmpsb
xchg
out
repz
rcrb
pop
fwait
and
dec
sbb
add
pop
push
sub
xor
or
add
dec
add
add
sub
mov
mov
adc
push
add
add
add
push
gs
test
adc
jg
outsl
imul
daa
and
push
xor
push
neg
orl
jle
ljmp
sub
sub
push
sub
hlt
lds
fistpl
inc
push
sub
das
sub
sti
sbb
in
jmp
pop
push
fbstp
jmp
imul
shl
mov
movsb
aaa
int
push
sub
xor
push
dec
or
pusha
xchg
xor
daa
or
pop
sub
aaa
addr16
arpl
aas
daa
sbb
or
ds
rcr
rol
cmp
add
cmp
ror
pushf
shl
add
add
mov
bts
jmp
mov
push
dec
and
gs
outsl
daa
daa
cmp
arpl
push
xor
sub
fsubs
in
loopne
mov
loop
xchg
xlat
movsl
addr16
push
roll
loop
or
mov
pusha
cmp
rorb
cli
shll
sub
push
sti
fsubs
dec
jle
pop
loopne
cmp
push
jl
leave
call
neg
pop
out
add
sbb
cs
es
push
es
sub
mov
pop
inc
stc
and
or
add
pop
stc
or
lcall
out
ljmp
jl
aad
test
mov
mov
cmp
push
inc
scas
push
mov
fisubl
test
pop
or
cmp
out
idivl
cld
pop
xor
mov
ss
push
xorl
jns,pt
xor
mov
and
push
xor
call
push
pop
adc
imul
sub
mov
insb
xor
cs
insb
add
pop
adc
lret
sub
cwtl
sub
jno
pop
pop
dec
sbb
cmp
cwtl
mov
jmp
cmp
mov
ss
outsl
pop
loop
js
loope
clc
cmp
sbb
pop
scas
add
fldl
out
xchg
popa
inc
pusha
fdivl
test
mov
push
movsb
pushf
movsl
sbb
jge
and
xchg
ljmp
popa
bound
mov
stos
cmp
leave
inc
cmpsb
aaa
or
xchg
ret
fs
mov
rorb
nop
xorb
mov
or
rorl
sti
mov
mov
cmp
cmc
push
je
sub
outsl
add
xor
xor
inc
pop
es
push
imul
popf
xchg
mov
pop
pop
pop
mov
lods
jmp
addr16
cli
iret
push
insl
or
hlt
loop
push
cmp
fsubrl
cs
cmp
outsb
pop
sub
sub
or
mov
lea
leave
xchg
sti
scas
fwait
out
lock
imul
test
sub
mov
inc
or
xlat
cmp
jno
mov
imul
clc
ud0
mov
pop
push
jmp
sarb
add
pop
add
iret
push
roll
rorl
dec
nop
jmp
lea
in
orl
mov
loop
in
in
or
xor
js
add
and
jns
mov
mov
cltd
xchg
jo
jae
sti
push
mov
push
movsb
mul
mov
aas
pushl
jl
fsubl
jmp
lret
adc
pushf
jo
xor
and
in
das
jbe
and
pop
and
dec
adc
adc
dec
add
or
lock
std
std
out
data16
mov
ret
jno
inc
mov
sub
pushf
mov
pop
in
xor
imul
jge
stc
in
mov
jl
nop
aam
pop
movl
mov
test
xchg
mov
jg
push
inc
idivb
add
xchg
push
data16
and
mov
mov
enter
aam
dec
imulb
xor
inc
cld
nop
loopne
in
xchg
in
mov
mov
hlt
stc
add
or
call
pop
stos
fsubs
mov
mov
pushf
inc
mov
rolb
out
stos
ret
push
into
xor
in
std
mov
xor
dec
pusha
and
bound
pop
clc
out
mov
xchg
popa
mov
cmc
out
and
inc
sub
ds
mov
jmp
jp
or
and
adc
cmp
or
and
call
call
jmp
mov
adc
xor
mov
and
aas
cmp
xor
outsl
dec
inc
faddp
dec
enter
jle
pop
ds
out
pop
popa
insb
xchg
fstl
or
addr16
and
je
push
cltd
dec
loop
jb
push
cmp
es
mov
hlt
rorb
mov
cmp
adc
mov
out
ljmp
lret
ljmp
ret
aad
test
out
loop
adc
sub
or
aas
int3
gs
adc
scas
sahf
sbb
fmull
mov
in
ret
adc
dec
jp
data16
shll
push
xchg
xchg
pop
pop
jp
outsl
xchg
ret
mov
lods
xchg
adc
fildl
pop
call
jl
cmp
jmp
cmp
adc
cld
in
pop
sub
and
pop
add
jno
add
or
lea
jne
rol
mov
mov
pushf
pushf
pushf
clc
cmp
lea
jg
ja
pushf
movzbw
bswap
pushf
mov
call
lea
je
shl
clc
bt
xor
add
shr
sub
ror
call
sbb
sub
testb
into
mov
xchg
out
lds
add
stos
and
xor
xor
adc
rolb
add
nop
or
gs
stos
or
add
or
es
adc
xchg
dec
fstpl
jge
iret
sbb
pushf
inc
xor
mov
lods
imul
push
and
pop
outsl
sbb
aas
pop
pop
sub
sub
mov
movb
pushf
lea
call
pusha
adc
call
pusha
lea
je
push
push
lea
jmp
sub
add
pushf
push
mov
add
imul
cmp
mov
sbb
fsubp
fs
outsl
pop
cmpsl
iret
mov
sub
mov
jne
or
mov
aaa
xchg
cmp
icebp
sbb
cwtl
mov
stos
in
test
int
iret
aaa
rcrb
iret
pop
aad
mov
xchg
stos
add
lock
pop
jg
ja
inc
outsl
jnp
pop
jg
push
sub
mov
in
test
xchg
mov
out
mov
mov
sub
aad
sbb
mov
fdivrl
mov
insl
xor
inc
lret
outsl
pop
sub
movl
sub
hlt
sbb
dec
jecxz
cmp
cmp
mov
dec
icebp
rorl
roll
lahf
fadds
shlb
mov
fimull
mov
mull
mov
bt
push
cmpb
call
pushw
popfw
pushl
push
call
mov
push
push
mov
pushf
not
pusha
lea
mov
pushf
jmp
sub
jle
stos
sbb
or
inc
xor
push
inc
push
xor
loop
push
aam
aad
inc
pop
cmp
rorb
outsl
jo
jp
inc
into
push
dec
cmp
mov
cmp
test
cmp
push
scas
cmp
imul
movhps
leave
or
out
xchg
xchg
pushf
jge
loope
mov
adc
loopne
sbb
inc
bswap
pop
sub
in
add
push
jg
xchg
iret
ret
mul
divl
jmp
jmp
or
lods
lock
mov
test
cmpsb
scas
mov
sahf
popf
sbb
je
ja
nop
test
inc
sub
xlat
mov
adc
out
sbb
es
xor
ret
ljmp
cmpsb
push
test
leave
popa
xchg
jmp
pop
fidivrl
mov
iret
ds
cmp
cmp
cltd
inc
mov
pop
and
push
push
sbb
adc
push
ss
add
or
orl
daa
scas
mov
xchg
movsl
mov
aad
add
jne
jbe
in
xchg
mov
popa
dec
cmc
enter
or
sbbl
lret
sarb
push
cmp
and
push
pop
push
cmp
hlt
jbe
inc
or
popa
sub
clc
andb
in
cwtl
test
je
icebp
fidivrs
bound
sub
mov
in
popf
mov
fmuls
jns
mov
out
mov
incb
xchg
jle
rclb
ljmp
or
stc
mov
push
cltd
mov
shrl
sub
mov
jle
adc
pop
rorl
rol
push
adc
cmp
adc
popa
mov
vpaddw
mov
icebp
movsl
std
sub
cmpsl
mov
mov
mov
addr16
lea
lds
loopne
cmp
cmp
pop
pop
jg
mov
imul
sarl
stos
out
pop
subl
sub
leave
in
dec
mov
fcmovu
mov
add
xor
pop
or
cmp
push
mov
inc
dec
inc
jbe
jb
bound
sub
sub
cmpsb
sbb
out
fs
call
pushf
cmp
clc
push
cmp
pushf
push
movl
lea
jae
cmp
pusha
cmp
pushf
jmp
jnp
into
mov
mov
mov
loopne
aam
fdiv
in
in
xlat
push
jb
push
mov
sarb
loopne
xchg
lret
int
imul
add
sub
aas
mov
dec
in
and
fwait
push
sub
xlat
inc
das
iret
movsl
inc
in
test
test
sbb
in
push
fwait
ret
fimuls
mov
sub
movsl
out
or
sub
loop
rcl
xchg
push
dec
jp
push
cmp
inc
add
sbb
pop
insb
aas
jg
push
loop
pop
and
imul
or
repz
or
fadd
or
out
cli
outsb
lds
xchg
les
xor
shrl
sbb
adc
popf
sar
out
mov
sub
xchg
jg
scas
fists
fldenv
and
pop
jb
jle
dec
inc
pop
cs
inc
sub
movsl
pop
jmp
iret
testl
loope
in
icebp
popf
lds
and
jecxz
aad
and
sbb
into
push
imul
adc
imull
lock
addr16
mov
je
pushf
jg
and
lret
lcall
xchg
xchg
or
leave
cltd
test
or
sbb
sbb
adc
sbb
push
and
sub
adc
or
add
add
inc
adc
filds
push
push
lods
shrb
nop
cld
movsb
fdivrl
nop
imulb
ficompl
repnz
adc
jmp
mov
xor
fsubs
call
fidivl
ss
mov
add
nop
int3
cmp
pushf
jne
jg
xchg
lcall
cmp
popa
pop
in
jle
js
outsb
andl
mov
inc
repz
lahf
fistl
mov
add
sub
movsl
rcll
outsb
sbb
or
test
pushf
mov
test
xchg
mov
icebp
xor
sub
sub
addl
test
cmc
popf
test
jae
inc
jmp
mov
scas
nop
adc
or
cmp
rcrb
loope
cmpsl
add
or
ljmp
jae
jbe
fldl
sub
mov
jecxz
cmp
push
bndstx
sub
dec
or
das
inc
adc
sbb
and
or
jl
or
mov
insl
lea
je
xor
pusha
add
cmp
mov
cmc
add
pushf
jmp
aam
sub
lret
not
in
lods
movsl
test
icebp
mov
xchg
test
push
cmpsb
adc
mov
sti
icebp
sub
int3
cs
dec
add
adc
pushf
ficompl
xchg
ljmp
mov
jecxz
repz
pop
pop
jge
insb
xchg
into
cltd
jg
pop
cmp
pusha
sub
push
scas
jo
div
jbe
outsb
jle
sar
jae
iret
xlat
lahf
scas
lret
mov
push
cmp
mov
icebp
ret
in
pop
jae
adc
sub
sub
and
sub
mov
std
leave
mov
js
test
jmp
stos
ljmp
popa
pop
add
pop
lock
xchg
ret
test
inc
adc
mov
xlat
mov
mov
push
out
mov
lahf
or
nop
inc
ficompl
adc
mov
dec
and
aaa
outsl
sbb
pop
test
and
sbb
jno
gs
cmp
mov
lods
xchg
ljmp
call
movb
pushl
lea
jne
lea
mov
jmp
dec
fwait
xchg
ret
sbb
add
cld
mov
clc
cld
mov
adc
xchg
leave
jle
jno
cmpsl
mov
sub
mov
adc
ficoms
cs
push
pushl
insl
test
xchg
xchg
outsb
or
dec
movsl
movsl
push
jmp
test
pop
sbb
mov
sbb
adc
mov
cmc
icebp
in
or
cltd
les
jmp
inc
add
inc
or
fs
jl
or
bt
jmp
imulb
and
cmp
stos
lret
stos
fsubp
xchg
mov
mov
adc
sub
sub
idiv
adc
mov
fdivl
lahf
xchg
mov
hlt
cmc
and
xchg
mov
or
in
hlt
mov
or
adc
pop
xchg
xchg
cmp
add
icebp
test
mov
ret
lcall
lcall
and
movsb
cmpsb
loopne
mov
sub
insb
lock
sbb
xor
bound
sub
jle
or
daa
sub
mov
push
jmp
jmp
jmp
movw
inc
pushf
neg
bt
stc
not
call
ret
out
scas
cmpsl
iret
test
dec
addr16
ja
dec
or
inc
adc
das
jnp
rclb
bnd
lea
xor
jg
ljmp
movsb
movsl
dec
push
out
shr
add
mov
sub
xor
in
or
xchg
iret
cmp
pushf
mov
shll
enter
movsb
pushf
fcoml
addb
jo,pn
rorl
cwtl
inc
inc
pop
inc
out
sahf
and
outsl
aas
inc
rcpps
daa
cmp
aas
adc
lahf
and
jae
jmp
das
dec
jge
gs
test
jecxz
pop
iret
fwait
push
and
sbbb
sarl
cmp
hlt
loopne
popa
mov
sarl
ds
aas
cli
cmp
movb
dec
orb
fcmovnbe
push
jae
sahf
into
mov
mov
mov
xchg
scas
push
lahf
push
repz
out
mov
cltd
stc
xchg
leave
xchg
mov
lcall
push
cli
mov
mov
push
cmp
inc
push
sub
push
mov
ud0
xchg
cmp
dec
adc
ficomps
mov
mov
dec
test
sub
insb
insb
inc
xor
xchg
push
jp
cli
pop
jns
pop
daa
push
cmc
in
lods
movsb
mov
mov
mov
leave
sub
mov
pop
mov
test
xchg
and
and
add
imulb
leave
cwtl
mov
sahf
ret
cltd
or
mov
repz
xchg
pop
addr16
mov
loopne
in
sbb
cld
cld
aas
ds
hlt
xor
call
inc
sbb
inc
std
mov
fwait
push
divl
mov
mov
ljmp
xchg
mov
lahf
xchg
mov
jl
xor
and
inc
cmp
or
sub
add
add
or
ja
aaa
pop
ja
xchg
push
push
or
xor
sbb
jl
push
jo
xor
jne
xor
push
fwait
fwait
push
jae,pn
pop
push
sub
mov
lahf
shrl
inc
and
in
les
nop
scas
push
sub
outsb
pop
scas
in
adc
lea
lock
enter
cmpsb
lea
test
lods
adc
mov
xor
push
jb
cmp
xchg
sub
in
lea
cmp
cmp
arpl
arpl
dec
outsb
sub
scas
jmp
push
repnz
fwait
mov
sub
cmp
xchg
popf
in
sarl
fiadds
add
imul
mov
ret
push
repnz
loope
daa
inc
fwait
pop
andl
cs
or
test
popf
pusha
shrb
cmp
xor
cmp
lods
sbb
in
insl
subb
iret
fisubrs
jo
cld
sahf
jg
and
push
mov
sub
daa
fiadds
push
push
push
push
push
push
cmp
push
and
and
or
movzwl
pop
shl
inc
mov
cmp
test
add
call
pop
pop
addr16
mov
pop
cmp
insl
inc
push
sbb
dec
pop
push
mov
popa
xchg
aaa
pop
mov
imul
movl
movsl
jnp
mov
scas
je
xchg
mov
out
jge
nop
dec
mov
lods
push
js
loope
sub
std
andl
lret
sub
ds
dec
in
je
mov
pop
cmpsl
inc
mov
call
sbbb
pop
add
pop
popf
sub
stc
sub
clc
cld
enter
cld
shr
int3
clc
or
in
lea
mov
lret
repz
fstpt
out
xchg
outsl
or
mov
fistl
adc
je
inc
addr16
mov
movsl
jecxz
adc
cli
pop
repnz
icebp
xor
and
rolb
lea
push
repnz
jl
aaa
cmpsb
sahf
movsl
jmp
lret
sub
sti
pop
cmp
push
pop
stos
sbb
ds
push
sub
fs
ljmp
add
xchg
icebp
jge
sub
inc
movsb
rcll
je
pop
sub
cmp
xor
and
sub
lods
mov
into
mov
stos
mov
mov
mov
nop
loopne
aam
jge
movsl
mov
cmp
call
xchg
clc
cmp
sub
mov
mov
pop
xchg
mov
jg
jmp
imul
sbb
insl
inc
push
lock
mov
test
cmpsl
pop
lret
inc
push
push
jnp
das
jg
imul
sub
stos
sub
xlat
mov
popa
cmp
xor
adc
and
adc
test
pop
inc
pop
insl
jns
nop
repnz
jle
lret
mov
int
pushf
cld
dec
pop
push
in
shll
fcoms
or
pushf
out
xor
sub
dec
dec
sti
xchg
push
push
adc
gs
vpmullw
cmc
stc
sar
fnsave
stos
xchg
push
jno
rol
pushf
lods
sub
icebp
in
call
loop
ljmp
movsl
pop
jbe
add
push
in
ret
imul
cmp
push
fwait
nop
dec
test
push
cwtl
cltd
add
hlt
hlt
pop
xchg
xchg
outsb
jbe
sbb
test
xor
cmc
mov
cld
pop
xchg
sbb
cltd
insl
sub
arpl
stos
jmp
sub
push
in
xor
jae
lods
and
fdivrp
fdiv
or
int3
mov
dec
push
push
adc
pop
or
inc
push
sub
stos
or
xchg
insb
xor
pop
pop
mov
dec
and
dec
push
jbe
inc
ss
subb
jg
lret
and
adc
cmp
xor
mov
psllq
push
repz
pop
mov
mov
add
fdivl
mov
stc
or
or
add
push
lock
movaps
stos
pop
arpl
clc
mov
clc
shl
jp
std
mov
mov
jb
aas
mov
loope,pn
fstps
test
popf
sub
stos
les
cmp
add
sbb
mov
add
aaa
pop
sub
inc
pop
and
fs
bound
cmp
jecxz
or
and
ss
fcomps
cmp
das
in
test
adc
fldl
nop
sbb
xchg
jae
xchg
sub
je
popf
je
cld
cli
lcall
fstp
sahf
sar
lds
iret
rcrl
pop
sbb
adc
je
push
or
mov
xchg
mov
lock
lock
loopne
mov
mov
jo
pop
in
xlat
test
xchg
lds
mov
mov
sbb
test
cli
pop
xchg
xchg
jp
add
push
cmpsl
lret
xchg
lahf
inc
mov
shlb
pop
adc
lods
mov
fdivrl
imul
daa
aas
adc
daa
inc
pop
pop
das
sub
or
je
add
adc
lea
pushf
call
mov
sbb
ret
sahf
xchg
loop
rol
out
int
sbb
test
xchg
fmull
or
les
xor
jnp
or
sub
push
add
outsb
mov
mov
orb
jmp
dec
cmpsb
shrl
fadds
or
add
sbb
or
sub
insb
sub
or
movb
inc
test
cmp
clc
neg
cmc
pushf
not
call
inc
or
push
movsb
adc
sbb
pop
inc
sbb
pop
and
nop
ret
jg
jo
cli
mov
addl
ret
xor
inc
lcall
inc
sbb
jge
xor
sub
test
and
mov
mov
inc
jmp
hlt
mov
ret
mov
loop
mov
stos
mov
mov
pop
push
mov
es
dec
push
push
mov
pop
cmovb
icebp
xchg
or
push
mov
jnp
iret
dec
movsb
sub
pop
pop
mov
pusha
xlat
add
jbe
cmc
ss
loope
or
adc
cli
xor
andb
jnp
leave
in
mov
pop
lds
sub
push
cmp
pusha
inc
je
sub
xlat
cmp
fucomip
xlat
add
jmp
mov
mov
shl
shl
out
dec
jnp
sub
pushf
scas
inc
icebp
sbbb
push
pop
mov
push
mov
out
add
mov
sti
jecxz
mov
nop
or
int3
pusha
test
xchg
movsb
mov
fadd
enter
cld
loopne
xchg
les
sub
xlat
mov
cld
in
in
jnp
and
sahf
loop
lret
xchg
mov
xchg
jmp
mov
cmp
fsubr
push
adc
xchg
xchg
cmp
push
scas
lret
pop
scas
mov
mov
enter
sahf
mov
sbb
push
and
outsb
iret
lock
mov
xchg
aad
int3
adc
cmp
and
cmp
and
cmp
sbb
or
inc
cmpsb
mov
mov
sar
bts
mov
pusha
pushl
pushl
cmp
sub
push
pushf
pushf
pushf
rep
movzbw
movzbw
mov
pushl
movw
push
pushf
lea
jmp
test
dec
pop
insl
loop
lods
push
jo
sub
bound
pop
push
push
adc
ds
scas
stc
jg
xor
test
pop
mov
cmp
sbb
pop
lahf
ss
inc
fsts
pop
sbb
test
ds
jo
add
mov
insl
mov
dec
scas
in
cmp
stos
xchg
lds
sbb
sbb
cltd
leave
cltd
mov
lods
mov
or
fcompl
sbb
push
push
outsl
aas
pop
lds
push
push
xor
cmp
sbb
push
and
sar
aaa
ret
repnz
inc
pcmpeqd
imul
das
cs
or
aas
mov
lock
rclb
out
out
pop
mov
sub
cmp
stc
in
xor
adc
push
sbb
or
aaa
loop
cmpsl
sub
ret
cmpsl
fwait
mov
dec
pop
or
jno
dec
je
pusha
sbb
sub
outsl
in
jbe
cmp
xor
sbb
das
movlps
sub
aad
push
push
lea
je
clc
test
bt
cmp
pusha
lea
je
bt
test
cmp
push
jmp
jge
pop
xor
divb
aam
insb
and
jle
dec
bound
jp
jbe
data16
rcl
jle
fldl
mov
mov
into
xchg
ret
popa
outsl
ja
fwait
out
les
dec
cwtl
mov
sbb
inc
test
push
mov
xor
push
or
sarl
mov
pop
dec
push
mov
les
movb
js
test
mov
jmp
xchg
sub
aam
and
movsl
call
insl
sub
push
and
xor
and
rorl
xchg
adc
mov
cmpsl
loope
add
pop
mov
and
inc
inc
xlat
cmpb
gs
lock
pop
push
cmpsb
push
popf
loope
insb
dec
mov
xchg
mov
jns
les
repz
lea
xor
mov
lret
add
out
mov
and
jno
aad
adc
je
fs
js
jmp
sti
je
int3
and
xchg
std
sar
sbb
adc
mov
and
xchg
sahf
sahf
scas
mov
loope
out
fcmovnu
mov
shl
icebp
int
cmc
lea
test
xchg
out
xchg
push
sti
mov
mov
test
or
mov
jns
pop
push
ljmp
cmp
mov
lds
or
sbb
xchg
xor
dec
aad
pusha
or
dec
ss
stos
fwait
stos
repnz
push
pushf
lds
xchg
loope
fstpl
aad
or
mov
lods
cmp
xor
adc
mov
or
jo
cmp
pop
sub
xor
xor
add
xchg
xor
sahf
loopne
cs
mov
ljmp
pop
cmp
je
sub
and
lret
fsub
inc
sti
mov
xor
sbbl
lahf
push
cmp
mov
fisttpll
ret
neg
cmp
imul
aad
add
and
outsb
jnp
ficompl
sub
popf
xchg
xchg
mov
lcall
mov
pop
jne
aam
into
mov
int
push
mov
jne
lahf
push
mov
cmp
xor
rol
adc
imul
lods
lock
push
data16
xor
and
or
jnp
mov
mov
cmpsb
cwtl
rorb
mov
xchg
mov
aas
neg
rolb
orb
repz
sbb
push
not
js
push
insb
sbb
fs
dec
dec
loopne
mov
ss
bound
push
push
pop
adc
inc
gs
aaa
push
jge
cwtl
mov
lods
pop
and
dec
imul
sarb
mov
pop
fcom
pusha
sub
sub
jo
push
je
cmp
sbb
ret
push
cli
push
insl
sub
xor
out
out
int
sub
sbb
mov
and
pop
pop
cli
rcrl
push
push
imul
lea
shlb
sbb
xchg
nop
mov
mov
xchg
dec
xchg
push
jp
test
leave
inc
jg
iret
sbb
dec
sbb
adc
sbb
sarl
sbb
jp
inc
enter
notb
cli
ljmp
clc
push
fcoml
cmp
mov
adc
jl
lret
lcall
push
mov
jmp
data16
and
enter
pop
aad
mov
and
popa
mov
push
sub
cmp
sub
or
sbb
adc
or
xchg
jb
mov
test
call
repnz
mov
cli
adcb
xor
inc
outsl
addl
dec
lds
push
aad
jb
jbe
imull
push
dec
ljmp
jmp
ja
push
sub
rcrl
sti
sbb
sbb
lea
mov
movsb
xor
jbe
push
or
adc
or
sub
push
push
cmp
or
arpl
adc
aaa
in
jmp
sub
dec
sbb
jne
or
push
add
pop
jne
addb
aas
fmull
mov
sarb
orl
xchg
mov
inc
jg
inc
in
cmp
adc
insb
xchg
jmp
aad
mov
mov
or
jmp
outsl
cmp
pop
aas
sub
sub
add
dec
push
sub
rcrb
cmpsl
stos
mov
mov
leave
mov
stc
test
cwtl
in
enter
mov
lcall
xchg
add
imul
push
sub
xchg
jge
mov
xor
das
out
aaa
aaa
stos
mov
sbb
push
cltd
js
mov
nop
repz
xchg
mov
hlt
and
lret
ret
stos
mov
mov
das
aas
andps
cmp
popf
test
lea
xchg
test
or
jne
lock
sbb
aam
es
adc
pop
or
jge
pop
int
xor
test
pop
mov
sub
pop
fcoms
cmpsb
outsb
mov
int
jp
pop
call
sbb
sahf
popf
jmp
xlat
cmp
mov
xchg
mov
pop
lods
pop
rcr
fstpt
iret
jo
cmpsb
loopne
mov
outsl
jg
xchg
fiadds
lahf
jmp
shr
sti
repz
or
mov
xor
pushw
push
inc
addr16
adc
xor
insb
jo
inc
sub
inc
inc
mov
adcb
jmp
cmp
jl
int3
and
push
sub
sub
xchg
sbb
es
push
xchg
out
or
fdivr
pop
and
adc
int
dec
adc
sub
hlt
ds
jp
xor
shrb
mov
rolb
mov
icebp
cmc
std
std
shl
roll
or
nop
jb
pusha
add
stc
daa
xchg
mov
into
mov
stos
sarb
xor
out
jbe
cmc
stos
nop
lea
mov
inc
mov
jg
pushf
ds
adc
fsubs
insl
push
aam
lret
fisubs
dec
or
outsb
pop
and
int3
clc
roll
xor
arpl
hlt
or
iret
jno
fcomi
cltd
es
or
test
xor
test
in
call
stc
cmp
insl
add
not
jmp
pushf
pusha
pusha
lea
ja
push
xchg
bswap
bswap
mov
push
mov
jmp
lea
je
call
mov
lea
jne
btr
lea
mov
bsf
mov
cmp
jmp
push
loope
icebp
shl
push
or
int
repz
movl
mov
xchg
cmp
popa
lds
je
add
cmp
adc
inc
into
jmp
fidivs
adc
ds
mov
push
into
xchg
inc
outsl
jp
jmp
xchg
mov
loope
mov
in
xor
scas
mov
repz
mov
arpl
gs
and
jge
andb
daa
pop
imul
dec
inc
pop
imul
or
push
aad
adc
xchg
repz
push
divl
xchg
aad
std
cltd
shll
data16
cmp
test
roll
cwtl
enter
pop
pushl
shll
xchg
pop
pop
test
pop
scas
fidivs
push
mov
add
sti
push
sub
mov
orb
push
jne
mov
xor
dec
push
das
mov
stos
and
in
mov
aam
call
cld
hlt
fmul
hlt
shrb
fcompl
lods
jmp
inc
aad
fbstp
mov
mov
stos
aaa
push
mov
hlt
icebp
fbstp
cwtl
cwtl
fimuls
imul
subl
mov
scas
fwait
xlat
cmp
pop
les
dec
je
aaa
xchg
enter
jae
sbb
xchg
sub
aam
stos
loopne
push
mov
adc
ss
add
push
cmp
lret
lret
es
ss
cmp
in
fnstenv
push
mov
dec
add
push
or
sub
into
enter
test
mov
repnz
ljmp
dec
xlat
jge
ljmp
fwait
mov
or
cmp
cmpsl
insb
and
sbb
jne
rcll
dec
test
cld
and
pusha
in
mov
jnp
data16
inc
mov
cmpsb
dec
xchg
cmc
lods
subl
test
fcmovnb
and
decl
pop
mov
ret
out
outsl
filds
scas
pop
pop
cmp
ds
flds
iret
pop
movsb
jg
into
jle
xlat
lea
out
outsl
popa
fxch
aaa
or
sbb
cld
jg
adc
ret
aas
les
fists
sub
sbb
jle
push
jle
xchg
pushf
std
in
jle
push
cmp
ljmp
inc
sti
out
pop
fwait
repz
push
jg
add
pusha
out
mov
data16
iret
pop
les
out
in
icebp
iret
pop
call
ja
leave
out
insl
dec
push
test
add
adc
jbe
add
icebp
stos
add
cmp
out
pop
cmp
jno
xor
clc
jecxz
rorl
outsl
mov
and
mov
pop
push
cmp
std
shr
pop
popa
push
jmp
pop
mov
decb
lea
jge
test
pop
enter
fldcw
pop
lods
cmp
pop
add
scas
ja
xor
lahf
ja
shll
xor
int3
setns
stos
out
cmpsb
inc
dec
push
pop
inc
and
xor
in
jbe
ret
stos
neg
xchg
push
jno
sub
pop
push
clc
jmp
pop
pop
lahf
jae
mov
outsl
dec
repz
data16
mov
push
aad
fiaddl
repnz
clc
mov
stc
jge
ret
aas
lahf
pushf
fnstsw
pusha
out
cld
fsub
cli
jg
add
call
jb
mov
and
or
xlat
fcomps
jae
aad
cwtl
ficompl
popf
aas
lock
and
mov
in
scas
add
outsl
mov
xor
xlat
cmp
add
jge
iret
mov
cwtl
sbb
aad
cmp
and
jecxz
sbb
lea
mov
push
data16
pop
jb
das
push
ja
mov
and
insb
dec
or
cwtl
out
je
fstl
stc
ret
and
add
in
in
jbe
push
jmp
xchg
add
enter
xchg
cld
push
shrl
dec
jg
jge
scas
jne
jg
dec
pop
jae
fdivrs
shl
jle
imul
test
pop
mov
or
scas
sbb
cld
mov
jle
sub
out
add
pop
popf
outsl
outsl
dec
out
rcr
scas
mov
xchg
mov
cmpsb
lahf
pop
pop
adc
imull
cwtl
fldcw
loope
mov
outsl
mov
add
sti
into
movsl
fisttpll
jmp
scas
xchg
ss
in
fisttpl
es
int
dec
cmp
leave
mov
push
stc
je
or
xor
sbb
xor
lahf
insb
xor
data16
push
imul
inc
out
fnstsw
mov
in
pop
sub
pop
xlat
fstpt
sub
repnz
fyl2x
cmpsl
lahf
jae
dec
out
rcl
mov
xor
ja
bsr
das
ret
outsl
shl
cmp
mov
fisttpll
es
jne
insb
or
fisubs
lahf
scas
jle
pop
aad
pop
sbb
and
xchg
loop
pop
fmul
test
das
iret
es
dec
xor
mov
ret
mov
jbe
pop
add
sub
push
or
or
adc
cld
popa
test
movsb
in
push
sbb
cltd
lea
aas
sbb
mov
sarl
stos
mov
jecxz
fmuls
mov
cmp
mov
pop
pop
mov
cmpsl
aad
add
jno
xor
ret
jle
mov
sti
fisubrs
jmp
adc
ret
rcrl
adc
mov
sbb
das
xchg
mov
mov
or
aas
fucomip
jp
inc
dec
mov
mov
sti
mov
mov
fisttpl
aas
add
bound
ds
jne
icebp
mov
in
sbb
ja
mov
mov
imulb
hlt
mov
shlb
push
xchg
jp
je
ror
and
fstpl
pop
in
dec
cmp
inc
fistl
ss
out
bound
jg
cmp
into
sti
mov
dec
out
xchg
fnstsw
mov
iret
mov
sti
shlb
lret
xchg
mov
pop
mov
out
and
sbb
add
mov
mov
jno
scas
stc
lcall
iret
mov
xchg
or
jmp
insw
outsl
cs
cmp
mov
pop
cs
ds
cmc
sbb
subl
outsl
sub
shlb
inc
mov
in
mov
sbb
lea
xor
outsb
dec
cltd
into
jns
mov
enter
out
lahf
imul
fnstsw
insl
jnp
mulb
mov
jle
jle
xchg
or
jle
xchg
fimuls
xchg
lds
int3
jae
jnp
xlat
rorb
push
divb
mov
cmc
int
fildll
jbe
into
outsb
test
aas
mov
into
cmpsb
sub
out
fisubs
fsubr
lahf
cmc
mov
jle
cld
push
out
test
into
das
mov
xor
jl
dec
push
jge
jg
in
out
cmc
int3
aas
in
pop
add
fildll
mov
out
mov
in
pop
outsb
dec
in
outsl
addr16
mov
bsr
out
pop
std
out
lret
insb
aaa
fists
push
popa
insl
pop
cmp
mov
out
sub
jnp
fwait
popf
jns
jg
inc
fstp
ret
fbstp
into
jle
popf
out
pop
mov
fucomp
cld
lea
insl
pop
cmc
pushf
mov
xlat
lods
jnp
jg
in
push
icebp
iret
fistpl
stc
clc
pop
fcompl
mov
jecxz
into
test
sbb
lret
mov
pop
pop
adc
sub
shll
inc
idivl
fisttpll
stc
xchg
int
cmpsb
lods
jbe
pushl
negb
data16
lock
pop
mov
popf
sbb
imul
hlt
cwtl
fadds
mov
pop
jmp
pop
jg
into
repnz
mov
fimuls
out
ret
imul
std
inc
mov
arpl
stos
arpl
jle
jb
repz
imul
xchg
out
inc
push
pop
mov
dec
mov
jns
enter
lods
mov
fisubrs
xchg
jle
cmp
rcll
shlb
iret
enter
push
aas
pushf
jle
movsl
ds
imul
lds
cmp
daa
mov
mov
jne
leave
mov
ret
jmp
pop
pop
fistpll
out
jge
faddl
cmp
mov
jg
dec
sti
out
nop
adc
pop
mov
sbb
popa
pop
jmp
cli
mov
xor
lahf
adc
imul
adc
lcall
std
ja
paddusw
invd
repz
or
outsl
mov
pushf
sahf
pop
add
lds
sets
jne
mov
cmp
mov
xor
out
push
int
push
js
cmp
or
and
in
into
pop
pop
sub
inc
repz
xor
or
push
or
pop
dec
sti
fdivr
mov
daa
xor
pop
or
push
mov
mov
sbb
bnd
aam
test
xlat
dec
push
fbld
pop
out
ret
lock
rcll
lods
pop
div
cmp
imul
or
cld
mov
jle
imull
inc
pop
cli
mov
pop
iret
out
pop
jbe
sbb
and
and
test
lods
mov
std
je
mov
hlt
outsb
add
sub
sbb
jne
jle
cmp
fimuls
enter
fs
repz
ret
mov
repz
std
adc
sahf
jno
rcll
pusha
sti
loopne
and
add
pop
outsl
lret
fcmove
mov
and
pusha
subps
cwtl
jbe
fst
mov
rep
mov
sbb
ss
jne
jle
out
xlat
jg
insl
add
sbb
movsl
imul
int3
int
dec
mov
leave
dec
sbb
fidivrs
test
inc
sub
push
lods
jno
int3
mov
movsb
jne
arpl
xchg
inc
and
outsb
fistpll
and
pop
fistpl
fists
pop
shll
jns
cmp
and
mov
push
popf
pop
push
into
shll
scas
cltd
sbb
std
mov
ret
loope
lahf
into
xor
imul
jns
jl
mov
xor
xor
fnstcw
aas
je
pop
sbb
shll
lcall
and
arpl
rorl
fsub
rorb
nop
addr16
or
call
push
sub
sahf
cwtl
lahf
cmpsl
xchg
push
pop
test
outsl
jg
fwait
sahf
jle
inc
rcl
loopne
ljmp
imul
and
mov
inc
ret
or
out
scas
mov
jg
push
push
pop
push
dec
ficomps
cmc
add
cld
movsb
cli
mov
mov
push
and
std
push
test
fwait
jo
out
or
addr16
mov
out
push
pop
jecxz
mov
lock
test
inc
out
cmpsb
movsb
int
add
imul
push
cmpsb
push
addr16
lahf
push
daa
mov
notl
jg
mov
pop
and
cmp
and
xchg
pop
jns
push
cmp
enter
jmp
in
and
jne
xchg
rcll
or
das
mov
std
leave
movaps
cs
adc
dec
stos
call
aas
jge
push
clc
inc
les
test
in
in
jne
inc
dec
loopnew
arpl
mov
jg
inc
daa
mov
adc
fldenv
iret
sbb
jg
loope
fsubrs
test
sub
jge
icebp
fsubrp
cmp
fs
mov
out
mov
jne
sub
jnp
out
fisttpll
lea
dec
int
cmpsb
inc
out
lcall
iret
int3
xor
xor
ja
sub
xchg
inc
sub
addr16
std
cli
aas
hlt
das
cld
pop
fsubrl
pop
pop
shl
cmp
ss
sbb
mov
push
inc
jg
pop
dec
filds
and
stos
mov
inc
in
testl
push
ret
sarb
mov
nop
fldlg2
sti
lahf
add
mov
sahf
jg
and
ret
sarb
pop
test
int
loope
xlat
clc
shrb
int
mov
scas
and
sub
out
pop
stc
sub
into
jbe
cs
fistps
xorb
mov
adc
push
push
loope
movsb
jp
mov
xor
ffreep
jl
or
mov
lods
popa
scas
xor
shrl
insl
repnz
lea
jg
test
cmp
pop
xor
aaa
xchg
arpl
mov
jle
mov
xor
xor
xor
cmp
xor
fisttpl
stos
mov
mov
sbb
dec
sub
std
pop
mov
inc
jle
mov
hlt
mov
mov
xchg
fistpl
pop
xor
inc
sub
jbe
pop
pop
jmp
clc
jle
pop
and
sahf
stos
cmp
or
inc
iret
dec
fnstsw
rol
jmp
dec
sti
in
push
mov
pop
mov
adc
pop
mov
lcall
sub
mov
jge
cmpsl
arpl
mov
mov
lahf
jno
repnz
pop
xchg
mov
fdivl
cmp
iret
xchg
cmpb
sbb
fwait
loopne
call
xchg
jmp
adc
gs
scas
daa
imul
cmpsb
ret
fnstcw
dec
ret
adc
rorl
scas
and
mov
notl
fimuls
fisttpl
in
mov
insb
mov
jecxz
jp
sbb
dec
mov
add
and
repz
lret
movsl
hlt
pop
sarl
out
fimuls
sub
loop
stc
cld
pushf
repz
jnp
ficomps
adc
leave
sarl
lahf
sbb
pop
and
dec
add
pop
mov
cmp
shrl
pop
idivb
cmc
sti
xchg
push
inc
pop
imul
fcmovnu
pop
scas
inc
cltd
jl
push
divl
fcomi
sbb
lret
pop
pop
je
sti
mov
mov
out
pop
orb
pop
imul
add
push
into
fisubrs
in
and
or
outsb
xor
jmp
mov
negb
push
jnp
inc
mov
lods
and
dec
fisttpl
jne
mov
cmc
movsl
hlt
sub
addr16
ret
stc
ss
inc
lea
jns
and
jle
jne
dec
mov
outsb
int3
lods
sub
fadd
in
mov
inc
std
js
sbb
adc
jl
dec
rolb
lret
or
lcall
shrb
mov
outsl
addr16
lret
and
cmp
rorb
mov
movb
sub
jbe
dec
xchg
outsb
ljmp
sar
lock
dec
mov
in
rcrb
xor
xor
sub
dec
jnp
pop
sub
mov
and
rcrb
jmp
loop
into
adc
testl
sub
or
cmp
and
ret
in
shrb
outsl
jo
dec
imul
jmp
out
leave
fdivr
cmp
or
imul
fnstcw
mov
push
aam
inc
sti
unpckhps
cli
es
and
or
lods
xchg
notb
pop
cmp
push
sbb
adc
push
scas
aam
sub
jp
pop
sbb
mov
pop
cmc
xchg
iret
es
jle
jmp
lock
push
sub
rclb
xchg
imul
add
pop
jmp
sbb
les
adc
mov
scas
js
xchg
icebp
icebp
pop
sti
jne
outsb
test
mov
addr16
fnstcw
sub
xlat
mov
push
cmpl
in
shr
jl
imul
rcll
jns
jl
aaa
cmp
aas
mov
jg
mov
cmpsl
mov
dec
scas
mov
iret
orb
lahf
movsl
jnp
aam
cmpsb
mov
sbb
aas
pop
adc
or
mov
pop
sti
cltd
and
orb
inc
add
push
xor
stc
fs
mov
dec
leave
in
imul
and
mov
loop
sti
add
fldcw
aad
mov
lahf
pcmpeqb
pop
mov
fbld
xor
lods
and
inc
mov
mov
inc
pop
fmuls
out
es
pop
sub
mov
imul
hlt
in
inc
sub
aam
into
or
add
pushf
pusha
ret
jge
gs
daa
enter
dec
dec
mov
mov
xorb
dec
rcrb
pop
inc
mov
imul
add
mov
mov
sarl
sub
or
addr16
je
aad
or
aas
testl
jle
pop
test
inc
xor
cmp
pop
add
pop
or
jno
mov
push
movsl
fidivrs
arpl
loopne
push
cmp
push
mov
adc
aam
sbb
insb
push
mov
pop
sub
jg
ret
jae
pop
xor
fbld
mov
arpl
sarb
fwait
in
fisubrs
in
int
mul
sub
push
pop
cwtl
pop
xor
sbb
movaps
dec
cmpsl
push
or
call
test
loope
jle
iret
mov
fnstenv
int3
imul
leave
ret
popa
clc
sti
loopne
mov
insb
mov
std
jg
pusha
test
jge
orb
pop
push
stos
pop
popa
xchg
shll
lret
out
dec
aad
imul
push
lahf
negl
mov
pop
fsubrp
mov
inc
shll
flds
shll
in
pusha
std
aam
sbb
or
test
xchg
mov
imul
mov
jp
fisttpl
or
xorb
jp
and
shll
out
jo
mov
jle
nop
and
add
shll
das
jmp
imul
enter
jmp
subl
jne
adc
iret
add
sub
mov
into
out
mov
cmc
sti
shr
push
sarl
in
sahf
pushaw
aam
bound
push
lods
adc
stc
add
xor
mov
sbb
push
shl
das
fwait
pop
mov
add
fldt
scas
mov
pushf
shll
jle
in
test
outsl
dec
sbb
mov
out
or
jb
mov
fistpll
and
push
sub
mov
aaa
negl
dec
scas
gs
add
les
fs
popa
jecxz
xchg
fstps
fucomi
jnp
sar
sbbb
arpl
pop
mov
mov
push
xchg
into
adc
rcrb
dec
pop
in
sub
pop
arpl
sbb
sbb
sbb
leave
loop
pushf
or
inc
fnstenv
xor
jns
mov
ds
mov
lcall
lahf
ljmp
inc
cmp
mov
nop
lods
or
jmp
pop
decl
test
mov
xor
rcll
pushf
mov
pop
out
or
mov
push
int
xlat
mov
dec
out
scas
pop
sti
stos
jle
test
sub
gs
fistpl
insb
or
iret
pop
mov
mov
fbstp
xor
int
sbb
sub
cmp
js
scas
pop
jb
pop
cltd
jmp
or
sti
jg
or
cmp
insl
imul
sti
std
sbb
enter
pop
cld
insl
pushf
loopne
add
std
iret
sub
out
dec
cwtl
shl
fprem
jle
sub
jl
pop
dec
adc
pop
pop
fiadds
packssdw
es
xchg
add
ljmp
adc
sbb
imul
pushf
rorl
leave
sbb
test
ret
cmc
loop
pushf
mov
mov
shrl
mov
adc
sti
jg
iret
sti
outsb
cli
lea
jmp
xlat
rcrb
insb
jle
and
in
test
fildll
enter
imul
fwait
cmpsl
add
dec
xchg
push
pop
cmp
add
fs
mov
mov
sbb
mov
orl
out
scas
xor
outsl
mov
or
pop
pop
stc
ja
outsl
mov
movsl
clc
inc
jg
out
int3
mov
jb
xor
and
mov
mov
sbb
inc
cmp
shrl
js
push
out
dec
cld
pop
dec
popf
ja
mov
mov
mov
or
arpl
fisubrs
and
fcom
xlat
insl
shl
lea
pop
xorb
test
xor
mov
pop
push
dec
mov
sub
test
int
mov
jno
stos
dec
or
fldl
in
push
jle
scas
add
push
adc
mov
dec
test
cmp
cld
je
out
sub
xor
jmp
xchg
leave
data16
mov
sub
out
cmp
sub
sub
add
nop
cld
cmp
fdiv
fbstp
aas
lea
jp
stos
xchg
and
push
mov
les
cld
add
pop
aas
out
and
and
or
inc
orl
jg
mov
or
fadd
loope
and
int3
pop
pusha
cs
movsl
dec
mov
mulps
mov
sbb
jle
repz
or
mov
xor
lods
imul
sub
ljmp
jecxz
xor
mov
jmp
pop
cli
in
cmp
pop
jmp
cmp
iret
mov
dec
loop
mov
jo
cmp
jge
ss
sbb
cmp
jne
ss
aas
adc
fnstsw
pop
push
mov
sbb
xlat
stos
std
push
sub
mov
cltd
stos
xor
mov
repnz
test
pop
jge
int3
mov
xchg
loope
or
xlat
div
fstps
add
data16
and
and
loope
pop
cmp
jmp
xor
stc
pop
sbb
std
lds
ja
xlat
pop
repz
iret
mov
jnp
daa
push
arpl
je
leave
inc
test
or
xchg
adc
adc
pusha
xor
leave
in
jno
add
xor
std
mov
loope
inc
push
lahf
mov
addr16
pop
imul
dec
aam
out
cmp
mov
adc
arpl
mov
push
mov
int
lahf
addr16
sub
adc
jge
in
sbb
push
mov
aam
int3
in
les
jecxz
add
sbbb
shrl
jmp
mov
xor
stos
sbb
mov
xor
ljmp
aas
loop
imul
sbb
pop
mov
pmaxub
mov
add
mov
pop
sbb
add
jmp
pop
cmp
dec
fcom
lret
pop
mov
inc
data16
pop
xor
scas
jmp
sub
add
dec
mov
mov
cwtl
mov
ss
cltd
push
rcl
ficoms
dec
sbb
cld
out
cmp
popf
xor
cmp
pop
push
in
inc
xor
lods
insl
mov
jns
pop
mov
loope
push
into
jne
dec
lods
add
and
imul
cld
sbb
and
decl
test
adc
sub
mov
sbbb
adc
sbb
clc
pop
out
bound
push
pop
pop
xor
pop
cmpsb
decb
and
mov
mull
scas
jb
test
mov
test
les
gs
insl
cmp
fnstenv
pop
clc
sub
and
jg
mov
mov
sub
loopne
pop
jb
sbb
jmp
ret
ret
sub
mov
adc
scas
mov
loope
cmpsb
int
mov
jmp
add
testb
add
cmc
sbb
mov
ret
push
inc
push
adc
shrb
out
icebp
in
loope
dec
aad
push
loopne
stc
push
xor
xchg
push
jno
pushf
jns
pop
movsb
addr16
fisttpl
leave
cmpsb
pop
mov
insl
out
sar
dec
or
pop
out
arpl
push
mov
imul
aam
cmpsb
fwait
addr16
ret
mov
dec
jg
add
jmp
cmp
fisttpl
push
or
neg
dec
jle
push
in
adc
and
pop
in
gs
jl
std
adc
and
movsl
mov
dec
mov
pop
lcall
imul
mov
imul
imul
pop
setl
pushf
stos
push
sbb
sbb
mov
jecxz
jl
ret
mov
mov
jnp
pop
pushf
outsl
push
pop
and
or
frstor
sbb
pop
inc
not
push
push
cli
daa
or
out
andb
in
sbb
lea
pop
sbb
pop
rcrl
add
fprem
into
pop
jo
xor
lcall
mov
sbb
lds
pop
mov
xchg
xchg
or
mov
cmp
rorl
nopl
dec
xchg
mov
add
mov
cmp
sbb
mov
jge
test
pushf
sbb
gs
mov
aas
in
insb
sbb
mov
pop
les
movsl
jge
shll
outsl
pop
iret
inc
push
xor
mov
inc
jno
mov
test
lods
mov
mov
int
inc
rcrl
sbb
stos
dec
adcb
jle
scas
shrl
mov
inc
and
lret
or
xchg
sbbb
inc
in
sbb
sbb
nop
mov
icebp
sarb
paddusw
pop
mov
push
jnp
fnsave
mov
pop
sbb
fucomp
out
dec
ret
jne
push
or
loopne
adc
and
dec
out
stos
imul
rorl
jecxz
inc
pop
rclb
mov
xor
jle
lret
popf
decl
stos
mov
popf
add
jmp
sub
nop
out
f2xm1
jp
pop
dec
out
or
lea
jg
xor
xchg
mov
dec
dec
inc
jle
jecxz
jg
and
pop
pop
in
mov
ja
jb
mov
movsl
and
rcl
addr16
sbb
add
xchg
jl
pop
pop
sub
xchg
cmpsl
and
add
push
cmp
in
mov
adc
adc
scas
lcall
push
push
mov
push
xchg
ja
scas
out
and
scas
divb
pop
jg
jg
adc
pop
or
xchg
aaa
enter
lret
sti
js
lea
lock
mov
lret
cld
and
pop
fsub
cmp
mov
mov
fnstsw
ret
std
ja
inc
xchg
mov
sbb
insb
out
or
rcl
aam
sahf
out
mov
pop
stos
arpl
pop
shr
cmc
lcall
dec
test
in
pop
inc
mov
lea
xchg
movsl
icebp
cmp
mov
stos
in
out
js
mov
sub
sub
hlt
dec
xor
dec
mov
fsts
push
fldcw
xlat
mov
fs
cli
sbb
mov
dec
sbb
movsb
adc
sbb
fcomps
push
jg
pop
stos
arpl
and
xchg
stos
popa
adc
in
jmp
pop
mov
mov
rsqrtps
xchg
add
cmpsb
sub
pop
cltd
cmp
adc
sbb
cmp
sbb
mov
shlb
out
and
jg
int3
jmp
lcall
rcrb
push
shlb
out
pop
cltd
xlat
add
pop
jle
xor
dec
or
cmp
sub
lea
popf
xchg
pop
cmc
jae
mov
in
scas
repz
popf
je
jp
fwait
pop
in
cwtl
testl
repnz
arpl
imul
push
push
mov
icebp
pop
xorl
cli
xor
fiaddl
in
repnz
pop
dec
fldcw
pop
push
sar
mov
inc
iret
mov
xor
jne
fldenv
ret
test
jmp
test
cmp
pushf
pop
addr16
in
aas
dec
leave
fdivrp
scas
cli
pop
pop
xor
jmp
or
xor
xchg
and
addr16
fsubrl
test
movsl
mov
ja
std
add
sub
xor
push
stc
or
adc
stc
pop
xchg
adc
add
int3
or
push
mov
add
mov
cmp
stos
shl
fisttps
shrl
lock
push
ja
cmp
jae
cmp
xorb
mov
fsubl
fsts
add
out
or
mov
mov
je
fistps
xchg
inc
popf
mov
in
pop
pushf
movsb
loop
jp
leave
or
and
mov
pop
xor
dec
clc
mov
mov
cmc
cwtl
out
inc
add
xchg
pop
mov
in
ja
push
rcrb
sbb
ljmp
fidivl
dec
pop
add
test
int3
std
ss
fcmovnu
jo
ds
fidivrs
ja
in
sub
xchg
iret
loope
cvtps2pi
add
hlt
sub
pop
add
sbb
call
std
mov
rcrb
lods
pop
mov
faddp
inc
adc
movsl
into
xchg
fildl
repnz
ret
jo
mov
pop
negb
or
repz
loopne
xchg
mov
push
jb
and
mov
call
lret
fcompl
jmp
pop
sar
pop
orl
adc
loope
cmp
popa
lret
mov
hlt
scas
xor
mov
lahf
mov
mov
lret
mov
rorl
hlt
lock
test
pop
dec
cmpsl
add
mov
pushf
out
mov
sbb
sub
mov
mov
negb
aad
mov
xchg
xchg
adc
ret
rcrb
dec
pop
cmpsb
jg
cmp
imul
aaa
shlb
pop
pop
push
inc
sti
iret
dec
je
inc
push
sbb
repnz
mov
jp
pop
dec
inc
pop
enter
lock
sub
mov
and
subb
mov
mov
adc
xor
repnz
iret
push
or
inc
jg
add
pop
incb
cmp
dec
xchg
addl
dec
out
fnstsw
in
and
in
jl
mov
pop
loopne
gs
sbb
mov
jmp
add
xchg
divb
jb
pop
mov
testl
jp
push
cmpsb
aad
and
fiaddl
mov
mov
out
mov
mov
cmp
fldl
sti
data16
cmpl
dec
mov
sbb
out
dec
lds
add
jl
in
pop
sti
or
or
lret
push
pop
xchg
movsb
xchg
cli
sti
popf
push
cmp
push
das
sarl
mov
out
push
iret
sub
in
and
into
fdivrl
out
mov
cli
rclb
aas
pushf
stos
xor
inc
mov
mov
outsl
xor
outsl
pop
fsubs
pop
hlt
aas
pushf
bound
xchg
ljmp
sti
xor
xlat
jg
in
or
movsb
inc
out
lock
xchg
lock
notb
and
fs
test
ds
sti
ljmp
jmp
mov
xchg
add
loop
mov
jne
stos
insl
or
mov
sahf
jbe
cmp
movsl
mov
je
xchg
outsb
scas
mull
cmpsl
pusha
arpl
jnp
xchg
pop
aas
insb
repz
mov
or
mov
jge
fnstsw
inc
es
mov
xchg
pop
sbb
push
and
and
and
push
aas
xor
add
push
data16
jb
imul
sbb
lret
sti
incb
mov
xor
das
icebp
dec
pop
sarl
xor
fldenv
fwait
or
fnstenv
adc
in
loope
inc
imul
xchg
sbb
iret
adc
adc
push
xchg
mov
je
dec
cmpsb
lret
and
jne
xor
lret
pop
ret
jg
dec
and
outsb
lea
out
dec
nop
out
leave
scas
or
es
or
adc
pop
movsl
mov
in
jb
sbbl
outsl
adc
pop
sar
inc
hlt
sahf
popa
jb
les
in
cmp
fisubl
cmp
mov
cld
loop
pop
out
xor
leave
stc
negl
push
popf
subl
clc
adc
pop
ror
mov
cmp
jmp
adc
jns
roll
adc
pop
fdivrs
jbe
jle
test
push
lds
imul
mov
iret
adc
mov
inc
jns
sbb
faddl
add
sbbl
fsubrl
or
adc
das
xor
aam
dec
sbb
pop
imul
mov
adc
test
mov
out
push
call
inc
into
inc
clc
dec
cmpsl
pop
pop
lahf
pop
jmp
std
outsl
dec
scas
and
cmp
pop
add
jnp
cmpsb
fistpl
aad
mov
shll
pop
or
add
xsavec
jo
adc
shl
add
outsl
mov
addr16
out
pop
pop
pop
xchg
sti
insl
loop
push
jle
push
pushf
test
shlb
jg
or
pop
adc
jg
stc
xor
pop
pop
aaa
jmp
mov
jb
mov
mov
pop
shr
lds
mov
aad
adc
fsubrl
scas
jne
shl
ljmp
icebp
sti
pop
daa
out
sahf
pop
dec
inc
outsl
std
les
cmp
mov
cmp
jno
xor
int3
ret
jmp
hlt
adc
fisttps
idivl
aam
dec
aad
jmp
lahf
sub
mov
fwait
xchg
sti
xlat
loope
jp
fdiv
scas
hlt
lahf
fdivl
or
lret
push
stos
dec
and
unpckhps
cmc
mov
movsb
mov
packsswb
mov
sub
fldenv
cmp
icebp
lods
sbb
fidivs
cmpsl
mov
pop
rol
inc
fistpl
dec
xchg
es
shrl
inc
xor
jg
int
lea
and
shrl
cli
inc
pop
inc
mov
add
mov
add
adc
int
jo
shl
repz
cld
arpl
fdivrs
es
das
out
push
sti
push
inc
pop
out
movsb
mov
dec
scas
mov
dec
mov
aad
je
pop
adc
leave
xor
negb
ret
xchg
mov
add
and
es
fnstsw
sbb
cmpl
cli
push
mov
dec
jecxz
ret
or
cmp
out
xchg
push
jns
rcrb
andl
mov
xchg
jb
test
sub
push
hlt
dec
rorb
mov
test
pop
fcomip
mov
loope
scas
cs
inc
mov
xchg
mov
push
xchg
and
shrb
sub
jle
iret
popf
push
dec
jle,pt
in
inc
gs
cmc
add
ficompl
and
mov
fisubrl
ds
cs
jle
jbe
pop
std
repnz
xchg
sub
mov
lea
xlat
dec
jnp
jle
shrl
cmp
movsl
shr
xchg
mov
loope
into
imul
repz
pop
ret
pop
or
jno
leave
mov
sti
popa
dec
lods
les
in
mov
mov
or
outsl
lret
cmp
mov
enter
xor
ss
nop
inc
fbstp
xchg
fistpll
mov
sub
xchg
outsb
data16
sahf
ret
fadds
fidivs
jne,pt
xchg
pop
sti
ret
mov
call
shl
fsts
cmp
in
stos
sbbl
xchg
out
out
imul
pop
dec
push
adc
cmc
shll
sahf
mov
fdivr
jle
decl
hlt
adc
std
or
pop
push
addb
mov
ret
out
lea
rclb
sub
icebp
push
ds
xchg
add
mov
mov
dec
xor
jle
cli
and
ss
scas
jnp
xor
mov
mov
jge
leave
das
adc
mov
xorl
pop
lcall
pop
mov
or
adc
mov
mov
sbb
mov
fisubrl
or
in
cmp
das
sub
sub
lods
push
jmp
test
mov
stc
mov
pop
cmp
into
pop
inc
mov
xorl
jbe
fadd
test
loope
cltd
jle
out
pop
mov
push
sti
enter
popf
out
fdivp
ror
mov
sub
stos
mov
mov
or
pop
jmp
int
and
rcll
dec
lock
dec
cltd
cld
cmp
push
insb
aaa
testb
stos
scas
in
arpl
mov
mov
xchg
outsl
mov
sahf
popf
negb
pop
dec
jb
dec
lea
dec
decl
nop
add
pop
ss
jns
repnz
jmp
cmpb
ret
shll
jle
out
pop
inc
dec
lret
mov
sub
pop
in
daa
sbb
xor
rorl
xlat
lahf
xchg
bound
outsb
out
andl
aad
aad
jns
sti
jp
int
adc
rcrb
subl
test
aaa
lods
inc
cmpsl
scas
fdivrp
out
pop
sub
std
dec
sbb
jecxz
pop
and
std
lret
fildl
cmp
ret
pop
mov
mov
hlt
dec
std
xorb
jb
fucomp
mov
mov
ficoms
mov
sti
faddl
and
lods
sbb
sub
jg
xor
sti
pop
pop
in
mov
ds
sbb
addr16
mov
ds
xchg
cmp
add
clc
ret
movsl
loopne
push
in
not
mov
scas
fadd
shr
lds
or
pop
sarb
mov
lock
scas
imul
out
ret
aad
sahf
mov
fimull
pop
fists
push
jmp
das
jle
cld
jno
push
lahf
std
loope
lahf
fldcw
sbb
idivb
stos
xchg
loope
sbb
ljmp
mov
xorb
in
lcall
jge
mov
popa
mov
lahf
stc
and
mov
xchg
or
jnp
xchg
sbb
es
add
xchg
jge
cmp
cmpsl
mov
sbb
xchg
aas
shl
or
jmp
sbb
sbb
sub
sti
push
fsts
iret
fcmovbe
dec
push
roll
dec
nop
psubw
int3
or
outsb
mov
mov
cmp
jb
mov
mov
cli
pop
ud2
in
ret
sarb
mov
loope
imul
push
imul
jne
in
sub
lds
inc
inc
jns
adc
aad
sti
fistpl
rcll
rclb
pop
xor
sbb
xchg
ds
jno
lods
les
rolb
sub
jle
add
inc
pop
cmp
add
push
call
mov
cmpsl
fcomip
iret
jl
loope
mov
ja
rcrl
mov
dec
into
cmpsb
adcl
mov
lahf
hlt
ds
mov
les
pop
sub
sub
and
in
outsl
xchg
cmpsb
repz
ficoml
outsb
daa
xchg
and
mov
pop
lret
in
mov
out
std
jg
enter
pop
lds
mov
xchg
dec
pop
lea
sub
push
into
out
adc
aas
mov
jmp
mov
mov
hlt
bound
fstps
les
dec
js
gs
clc
clc
lock
fsubr
ja
pop
mov
and
sbb
fistl
aaa
mov
jmp
cmp
jmp
pop
fisubrl
repz
xchg
insb
fwait
cli
sarl
imul
jg
cmc
mov
pop
pop
add
sti
jb
daa
mov
in
imul
sbb
xchg
jge
xchg
in
sbbl
mov
inc
xchg
sahf
sub
stc
outsl
pop
jl
pusha
cmc
mov
add
popa
repz
sarb
pop
mov
fdivs
lds
outsb
in
int
fldcw
mov
in
adc
movb
lea
mov
in
cmp
mov
nop
shlb
cmp
mov
add
in
pop
outsb
mov
test
rcrl
cmp
call
mov
repz
pop
xlat
fstps
push
popa
fnstcw
fistpl
jle
out
shlb
xlat
cmpb
addr16
adc
stc
enter
loop
ja
fstp
test
push
sub
xor
jo
cmp
jge
in
jecxz
mov
sbb
push
xor
gs
dec
pop
int
fadd
mov
mov
leave
cmc
cmp
jp
inc
aas
mov
mov
pop
mov
pop
jg
pop
loop
pushf
aas
in
arpl
pop
sbb
mov
pop
sub
out
and
insl
mov
mov
pop
aaa
data16
mov
popf
insb
repnz
jle
pushf
mov
ds
pusha
pop
gs
into
push
jmp
cwtl
add
test
inc
sar
inc
sbb
cmp
push
fistpl
aad
aas
out
mov
adc
and
xchg
adc
xchg
xchg
mov
xchg
sbb
loope
mov
add
mov
ljmp
xchg
ss
push
inc
jg
mov
pop
test
imul
xor
mov
add
mov
mov
incb
popf
ss
jns
lea
pop
sbb
loop
jb
pop
insb
pop
aam
sahf
or
push
dec
jmp
push
rolb
mov
add
adc
sti
imul
dec
mov
push
loop
adc
mov
jge
imul
mov
ficomps
sub
dec
lret
stc
pop
or
repz
ret
stc
clc
sbb
add
fstps
cltd
aaa
push
mov
mov
dec
aas
lea
daa
out
das
hlt
pop
in
sti
testl
dec
in
cltd
cld
ror
xlat
sbb
mov
movsl
fistl
mov
or
inc
sarl
lret
aad
es
das
ljmp
icebp
sahf
outsl
into
xlat
mov
shll
jp
fildl
outsb
pop
xchg
cli
scas
aas
addb
add
and
xchg
aad
scas
sarl
lods
aaa
jnp
test
sti
mov
push
stos
fs
cmp
jle
out
xchg
mov
mov
dec
int
mov
mov
sbb
jmp
ja
mov
mov
bound
ret
mov
mov
dec
fcompp
pop
imul
dec
and
lea
lcall
test
pop
cmp
xchg
jns
pushf
fnstenv
dec
inc
xchg
xor
sub
das
sbb
push
scas
fisttpl
xor
sub
xor
cmpb
jmp
scas
mov
fdivrl
imul
and
push
pop
pushf
cltd
gs
sub
leave
out
lods
jbe
sbbl
jmp
test
repz
fwait
ljmp
push
scas
lods
jnp
cmpsl
inc
jge
out
test
nop
mov
fsubrs
cmc
push
popf
mov
cmp
or
push
fwait
sbb
cmp
cmp
fcmove
xchg
dec
jmp
sbb
jnp
test
lds
test
mov
mov
int3
sbb
lods
sbb
popf
push
ret
mov
or
dec
xor
mov
xchg
xchg
mov
pop
inc
ss
or
mov
stc
push
aas
xchg
adc
sbbl
notl
xchg
mov
decl
mov
pop
stos
mov
fnstenv
ds
mov
ret
sbbb
mov
mov
lods
jle
ret
std
add
repz
xchg
leave
scas
lret
aas
outsb
sub
adc
imull
es
movb
dec
mov
adc
cmc
push
add
push
in
shlb
xor
lret
jmp
xchg
xchg
mov
mov
fsts
cwtl
fbld
out
jge
pop
test
rcrb
pop
mov
movsl
daa
ss
pop
mov
ret
pop
lea
rcrl
mov
mov
mov
push
das
xchg
lret
push
pop
addr16
dec
mov
add
sbb
mov
fldenv
data16
popw
cld
jg
shlb
jns
sahf
sub
je
out
jle
inc
push
cmp
pop
mov
jl
jg
xchg
pop
cwtl
inc
aaa
push
xchg
clc
movsl
arpl
mov
pop
pop
mov
mov
mov
insl
fmuls
push
out
dec
fs
sbb
jne
push
les
in
adc
pop
js
sahf
lock
mov
fnstenv
mov
into
mov
sarl
add
mov
insb
outsl
mov
sahf
gs
stos
lods
mov
xchg
fstl
and
hlt
ret
out
mov
std
mov
cmpb
xchg
out
jle
xchg
fsubrl
sub
pop
cmp
dec
pop
pop
xor
mov
and
lahf
jmp
fldcw
rorb
inc
js
mov
fistpl
cmpsl
jge
xorl
fnstsw
das
loopne
mov
and
adc
adc
mov
es
aas
pop
lock
jae
mov
jae
jmp
leave
xchg
aad
pop
lea
clc
pop
popf
test
out
lock
fst
xor
std
jo
xlat
jmp
imul
popa
das
orb
imul
sub
mov
fcoms
push
xchg
or
jl
icebp
sub
mov
push
inc
into
jae
mov
xchg
dec
jp
aaa
paddsb
mov
jo
rorl
inc
jmp
xor
fistl
call
mov
cmp
ficomps
mov
ds
xchg
and
pop
mov
jo
mov
loopne
insl
adc
imul
dec
mov
andl
shll
pop
imul
push
inc
push
mov
nop
mov
sti
dec
fisubs
jg
pop
lret
rcr
push
cmpsl
xchg
repnz
fstpl
test
xor
or
cli
pop
mov
popa
mov
aad
stc
mov
test
mov
shrb
daa
insl
inc
cmp
mov
mov
xchg
and
mov
es
in
rcrl
ja
pop
xor
mov
flds
jg
lahf
lea
pop
sbb
sbb
imul
in
inc
mov
fnstsw
xor
pop
movsl
push
sar
mov
jbe
divl
or
icebp
mov
out
pop
sub
xchg
push
aas
mov
jno
cltd
shr
sarl
jne
cs
xchg
pop
dec
jmp
jnp
xchg
movsb
push
out
or
ret
loop
outsb
mov
or
leave
add
or
push
pop
xchg
xchg
push
pop
std
shll
cmp
out
adcl
in
lods
xchg
inc
xchg
xlat
mov
dec
xchg
or
stos
int3
inc
sub
mov
inc
daa
xor
sub
ljmp
cmp
add
mov
cmp
incl
faddl
imul
stos
xor
jp
dec
aaa
inc
lret
bound
icebp
scas
test
xor
push
adc
jo
fdivr
ret
and
into
lds
inc
lcall
xchg
jecxz
js
aaa
and
outsl
lods
mov
jecxz
push
enter
jl
lock
insb
cld
xlat
sub
and
jo
mov
sub
mov
pop
ja
sbb
and
xlat
push
call
push
scas
or
clc
mov
adc
push
cmc
test
lea
lock
jmp
add
mov
mov
in
mov
dec
mov
mov
lahf
dec
fistl
lahf
iret
lea
adc
repnz
aas
inc
push
push
pop
mov
cltd
idivl
pop
stc
daa
dec
ja
in
sbb
rcll
loope
aas
adc
dec
fmuls
jbe
add
sbb
ljmp
fsubp
arpl
ja
and
fnstenv
push
sti
mov
push
pop
mov
testb
mov
test
mov
stc
mov
sti
xor
ficompl
jne
xchg
aas
lea
jns
cmpsb
lds
fistpll
iret
inc
add
mov
or
xchg
xor
fstpl
pushw
addr16
jnp
test
lock
sbb
adc
adc
in
xchg
lahf
pop
pop
jmp
push
out
xorb
mov
or
pop
mov
mov
cltd
jecxz
push
repz
adc
popf
jne
pushf
int3
dec
out
lret
movsl
sub
cli
jge
push
dec
stos
xchg
xor
iret
imul
sahf
es
shr
adc
dec
cmpsb
mov
sbb
mov
inc
mov
pop
pop
fnstsw
xlat
xchg
pop
mov
enter
jg
stos
mov
adc
mov
test
arpl
mov
pop
insb
ds
cmp
lahf
in
xchg
xchg
pop
lods
js
add
jne
movsb
pop
dec
jp
ljmp
add
xor
push
repz
lea
cli
lds
inc
rcrb
jne
push
arpl
mov
push
fdivrl
pop
jae
das
mov
outsb
bnd
push
hlt
cwtl
out
mov
xchg
cmp
jp
mov
lock
aaa
dec
cmp
icebp
lahf
cmpsl
mov
inc
mov
pop
mov
adc
ficomps
adc
adc
cmpsl
push
dec
mov
std
xor
xchg
popa
or
and
add
dec
or
insb
push
pop
xor
xor
ss
leave
sti
dec
dec
push
out
and
mov
cmc
and
xchg
pop
decb
or
cld
dec
shll
mov
xchg
jl
pop
imul
insb
pusha
cwtl
xlat
pop
call
es
fldcw
sub
cmp
xor
imul
movsl
shlb
xchg
decl
repnz
es
mov
xchg
push
pop
xchg
pop
scas
mov
sti
leave
das
or
dec
pop
mov
mov
popf
dec
das
cmp
cli
test
fcmovnbe
jg
sbb
mov
dec
mov
ljmp
push
iret
and
xchg
pop
xchg
mov
gs
xchg
cltd
pop
into
mov
ret
push
stos
xor
dec
fucomi
cmp
hlt
shrl
out
ret
add
mov
inc
clc
int
push
jmp
mov
xchg
mov
jle
aas
and
mov
les
xor
jmp
pop
adc
sub
arpl
adc
cli
pop
ja
xchg
and
hlt
sub
jg
fcoms
cmp
cmpsl
lahf
mov
cmp
mov
pop
ret
flds
lds
fwait
sbbb
pusha
mov
xorb
and
sahf
fldenv
hlt
outsb
mov
andl
or
mov
out
mov
dec
sahf
ret
ret
ficomps
xor
movsl
push
lea
dec
subb
enter
fs
testl
xchg
pop
add
std
mov
repz
lea
imul
js
cmp
out
sub
push
mov
mov
sub
outsb
in
lret
mov
pand
daa
adc
testl
xor
dec
idiv
xlat
xchg
shl
dec
add
push
lods
ljmp
sti
push
sbb
mov
dec
lods
stc
mov
stc
dec
dec
mov
mov
sub
js
lret
sti
and
xchg
pop
lret
aad
divl
dec
repnz
fwait
xchg
lods
fildl
sbb
aaa
and
pushf
getsec
les
xchg
mov
aaa
sbbb
inc
stc
jle
movsb
popl
scas
add
insl
xor
inc
mov
mov
sub
pushf
fs
jne
std
adcl
fstl
xchg
pushf
cmp
sbb
mov
xlat
inc
into
xchg
shll
repnz
fxch
pop
mov
cmp
fadds
dec
xor
sbb
xchg
add
lahf
xchg
mov
imulb
loope
mov
jmp
cwtl
jnp
pop
push
sbbb
mov
out
xchg
push
and
ret
sbb
push
pop
inc
lods
pop
insl
movsl
lock
test
cmpb
mov
fcoml
mov
dec
inc
cltd
or
js
push
sub
pop
test
jno
add
mov
leave
and
sub
stos
adc
idivl
push
shl
pop
mov
mov
push
repz
and
shlb
mov
mov
cmp
pop
push
sbb
mov
lahf
dec
fwait
jno
pop
cmc
out
addr16
pop
loop
pop
adc
jmp
jne
lea
mov
adc
fildll
jb
mov
xchg
out
inc
jae
adc
inc
lahf
repz
pop
negl
sti
pop
movsl
scas
pop
daa
sti
pusha
sub
dec
shlb
out
xchg
xor
jle
sahf
cmpsb
adc
pop
mov
jp
pop
cld
les
int3
scas
add
inc
cmp
push
test
inc
sti
pop
xor
shl
movsb
mov
mov
pop
int
cld
jg
pusha
data16
sbb
xchg
or
popa
jne
fisubrl
shlb
xor
cltd
repz
xlat
imul
dec
pusha
sti
pop
and
sub
daa
mov
in
cmp
mov
hlt
pop
clc
lret
jle
mov
int
dec
fstps
sti
inc
xchg
pop
mov
test
or
or
fs
aas
push
xchg
fsubrs
out
fisubrl
sub
xchg
xchg
je
mov
jnp
fstpt
mov
adc
imul
or
das
out
ss
xchg
in
push
outsb
or
mov
xchg
sub
sbb
insb
add
stos
sbb
fwait
imul
filds
xor
inc
icebp
es
add
andl
push
mov
cmpsl
ret
and
cli
ret
jmp
rorl
iret
pop
xchg
xchg
ds
aaa
inc
into
fistpll
imul
and
out
lods
in
fsubrl
in
mov
xchg
sti
loope
rcrl
mov
xchg
pop
push
cwtl
xorb
add
sub
imul
and
aam
inc
in
pop
repz
cmp
fiadds
adc
stos
pop
ss
xor
scas
adc
mov
loope
mov
dec
jnp
or
stc
fstpl
jecxz
cmpsb
fimuls
mov
jecxz
test
stos
sti
push
pop
call
je
dec
or
xchg
mov
ss
mov
mov
jle
cmpb
rep
pop
data16
adc
ffreep
jno
xchg
loope
data16
idiv
ret
aad
int
shll
sbb
fsubs
rcrl
mov
sbb
into
in
add
jb
ret
and
sub
loope
sub
nop
imul
loop
sub
push
cmp
pop
mov
push
push
and
icebp
jp
and
push
into
repz
dec
jecxz
lahf
mov
and
xchg
inc
dec
or
mov
mov
lahf
pop
add
inc
fnstcw
clc
clc
push
test
and
push
mov
jb
fisttps
in
or
mov
xlat
fisttps
cmp
mov
push
out
push
pop
sbb
or
mov
push
jnp
decb
adc
lods
repnz
insl
cmpsl
inc
add
inc
jmp
adc
xlat
scas
mov
popa
pop
loop
inc
mov
inc
mov
mov
and
mov
rcrl
pop
es
movsl
out
jmp
xchg
mov
adc
ja
mov
xor
mov
pop
insb
pop
loope
sbb
pop
mov
loopne
add
sub
hlt
pop
mov
pop
jg
aaa
inc
push
pop
inc
push
mov
inc
ljmp
pop
loop
xchg
mov
and
jl
mov
push
arpl
jg
mov
lahf
in
push
insb
fscale
addb
imul
mov
in
into
mov
add
stc
xchg
lods
cmp
loope
jno
mov
jge
pop
test
mov
rcll
and
popf
movsb
xchg
sar
fmuls
loopne
arpl
adc
ficoml
mov
mov
dec
push
lcall
movsl
mov
out
insl
jb
cmp
int3
mov
mov
xchg
push
fdivrl
insb
push
arpl
stc
fnstenv
mull
fwait
jecxz
in
and
cmp
pop
pop
xlat
out
cmpsl
inc
lahf
xchg
push
outsl
cmp
or
pop
mov
mov
mov
and
push
pushf
js
xor
fwait
pop
mov
or
test
push
push
inc
mov
std
fdivr
in
negl
popf
aam
cmpb
mov
mov
push
leave
out
aaa
push
jno
out
and
mov
xchg
pop
push
mov
lahf
mov
fldcw
aam
mov
arpl
cmpsl
push
mov
ja
ficomps
popf
sti
dec
sbb
adc
or
pop
jg
dec
jge
pop
test
fmul
mov
in
pop
imull
out
pop
jp
pop
ret
pop
fs
inc
dec
sbb
pop
xor
out
pop
stc
cld
pop
xchg
in
inc
mov
jl
push
push
jne
out
add
dec
xor
cmp
outsb
fmuls
adc
push
pop
sti
enter
pop
mov
fbstp
add
movsb
xor
sbb
int
in
sbb
mov
inc
pop
fiaddl
dec
cmp
pop
cmc
in
mul
stc
push
pop
es
outsl
in
sub
in
fsubrs
in
inc
mov
mull
aaa
mov
cld
popf
shl
test
popf
std
iret
xor
push
mov
std
mov
cli
pop
and
jno
movsb
es
lret
dec
test
divl
sub
dec
ljmp
or
fmull
movsl
push
mov
lahf
ficompl
sbb
lods
outsl
inc
cmpsb
jecxz
adc
imul
repz
int3
scas
mov
ja
pop
inc
mov
out
xor
cltd
adc
add
push
cmc
das
mov
jmp
sahf
jg
fldt
xor
inc
adc
imul
adc
scas
mov
lea
dec
stos
mov
jne
sahf
mov
xor
jg
cmp
jle
sbb
xchg
jl
jo
sub
mov
jge
ret
and
mov
aam
mov
imul
shr
mov
sub
in
ret
ss
jb
dec
push
mov
or
xlat
inc
push
mov
xor
shll
fucomp
iret
add
jbe
add
jo
sbb
cltd
leave
and
roll
cmpsb
cld
mov
scas
sbb
cmc
icebp
lret
lahf
xchg
inc
mov
stos
sti
sbb
aad
int3
std
fcompl
rclb
push
outsb
notb
mov
in
dec
jns
into
das
stc
scas
mov
inc
in
mov
lcall
inc
mov
addr16
fcompl
rcrb
sbb
mov
je
mov
outsl
sarb
push
mov
pop
out
mov
mov
push
or
gs
push
push
adc
sbb
mov
lret
clc
dec
pop
mov
dec
sbb
push
xor
insl
mov
bound
das
mov
jg
loopne
fistpll
push
int3
mov
call
into
shl
stos
mov
mov
in
ljmp
bound
insb
pop
icebp
sub
inc
aas
movsl
jg
out
mov
xchg
pop
fwait
jmp
mov
cld
scas
pop
cmp
pop
mov
and
pop
pop
jge
pop
mov
in
lret
scas
pop
bound
rclb
fnsave
loopne
cld
jae
ret
xchg
call
dec
imul
fstps
aas
jmp
lcallw
pop
cmp
mov
inc
jbe
sahf
dec
test
imul
xor
in
jnp
push
imul
test
mov
movsb
jns
adc
jo
lret
lret
xchg
rol
sbb
jg
push
pushf
fwait
stc
sbb
mov
mov
mov
jns
aam
mov
jl
rcr
ret
jno
ljmp
mov
xor
cmp
add
shlb
pop
xor
fs
and
pop
pop
or
xchg
iret
xor
sahf
mov
xchg
mov
adc
leave
mov
xchg
insl
mov
xor
inc
xchg
fnstcw
rcl
dec
mov
movsl
in
inc
mov
dec
fidivrl
pushf
mov
cmp
iret
pop
sbb
inc
mov
pop
ret
es
std
push
mov
cwtl
dec
rorb
cmc
flds
pop
sbb
cmp
dec
jg
mov
mov
cmp
ss
out
dec
fildl
dec
push
inc
inc
sub
or
out
cmpsl
sub
fwait
stc
inc
gs
mov
pop
adc
hlt
mov
jbe
popf
sbb
push
and
cmp
js
fsubs
jmp
std
popa
insl
cli
arpl
xchg
loopne
pop
scas
jmp
or
aaa
pop
xchg
pop
jl
jp
out
and
mov
hlt
xchg
pop
rorb
les
test
and
cmc
mov
ljmp
push
dec
sbb
jge
sub
das
icebp
sbb
add
iret
divb
and
inc
outsl
fidivrl
xchg
jecxz
pop
sub
add
adc
loop
sub
lret
lcall
mov
cmp
inc
fisttps
ljmp
enter
imul
sbb
xor
ret
add
lods
mov
mov
push
pop
add
je
loope
stos
out
imul
clc
dec
pop
jne
push
lock
mov
fcmovnbe
into
jmp
insl
cmc
and
movsb
imulb
mov
into
stc
insl
jg
aas
fadds
cli
xchg
pop
scas
fiaddl
int3
jge
mov
movsl
xchg
add
mov
in
cmp
ds
push
push
icebp
pmaddwd
btr
aas
mov
jo
imull
insb
pop
jle
pop
iret
and
cmpsl
cmp
dec
xchg
test
lahf
and
mov
and
ds
jb
enter
fs
movsb
aam
fnstenv
in
int
jg
leave
sysenter
mov
loop
pop
jno
cmp
pop
mov
pusha
sti
insl
add
xor
mov
sub
test
or
cmpsb
in
imul
test
in
jl
lods
in
or
out
add
push
mov
cwtl
lods
scas
adc
fistpl
cmp
sub
mov
out
iret
mov
jmp
adc
mov
push
pop
mov
hlt
adc
mov
fucomp
sbb
cld
jle
push
dec
pop
fwait
mov
icebp
mov
mov
pop
mov
inc
mov
stos
sbbl
mov
fbld
insl
mov
add
lods
or
outsb
jmp
xchg
xor
lcall
cmp
negl
std
xor
xchg
and
mov
cmpsl
daa
dec
add
imul
shld
add
pop
pop
xor
pop
std
dec
cwtl
movsb
mov
jo
inc
ja
int
stos
iret
adc
cs
addr16
pushf
dec
add
sahf
mov
xlat
loopne
xchg
repz
rcr
sbb
aam
pop
adc
aaa
mov
mov
inc
and
mov
rorl
inc
idiv
sbb
aad
pop
mov
jg
or
or
xchg
inc
xchg
mov
jmp
pop
jno
mov
adc
add
dec
sbb
loopne
lret
mov
aaa
in
cmp
xchg
adc
mov
fs
sub
flds
or
pop
sbb
lahf
movsl
pop
jl
xchg
fiadds
shl
jo
subl
popf
sbb
inc
gs
jo
and
or
ljmp
fdivr
mov
pop
jbe
mov
mov
out
insl
sbb
sti
pop
das
add
cwtl
or
mov
sbb
mov
lods
mov
push
and
fistl
insl
frndint
loope
xchg
mov
or
mov
lea
xchg
mov
mov
xor
push
cld
push
sub
mov
cmpsb
pop
jg
out
fcmovne
pop
mov
mov
fucomp
loop
pop
dec
inc
rclb
inc
mov
notl
and
pop
push
addl
int
fldl
pop
adc
or
clc
mov
hlt
cmp
xor
fstpt
sbb
pop
hlt
ret
jge
mov
imul
xchg
scas
add
ja
test
pop
or
push
mov
pop
dec
push
mov
js
sahf
stos
xchg
frstor
arpl
xor
cmc
mov
mov
lret
jecxz
mov
out
outsl
ljmp
es
cld
sbb
leave
daa
loop
sti
xor
std
push
outsl
cmc
sti
push
mov
jg
rcll
jns
cmpl
les
loope
sbb
cmp
pop
or
lds
js
sbb
xor
insb
push
scas
sbb
in
pop
add
ffree
inc
int
pop
cmp
pop
stos
mov
icebp
inc
pop
lods
dec
mov
call
int
mov
pop
cmpsb
fs
sarb
pop
dec
add
sbb
repz
pop
and
js
dec
xor
jge
jo
mov
out
inc
fcmovbe
sbb
mov
imul
cmp
pop
es
stos
rorl
lret
cltd
mov
mov
cwtl
insl
inc
push
mov
or
xchg
loop
out
pop
out
sbb
inc
fdivl
xchg
sub
push
dec
push
pop
stos
jle
jb
shrb
and
fs
jns
psllq
push
imul
mov
mov
ja
out
scas
xchg
insl
mov
sbb
mov
mov
fcomps
ss
lea
divl
fcomp
rcll
outsb
xchg
int
sub
int
addr16
push
pop
xor
sbb
sbb
mov
mov
or
subb
js
pop
xchg
xchg
fs
mov
pusha
test
jns
jmp
cmc
ds
sti
mull
xchg
mov
inc
jle
pop
shlb
imul
arpl
fwait
pop
lret
mov
inc
aam
mov
pusha
jecxz
pop
xchg
add
cld
mov
push
pop
movsb
cltd
jo
xchg
repz
sbb
pop
mov
in
ficoms
lods
lea
sar
clc
dec
loope
data16
mov
aaa
out
jmp
call
mov
sub
out
mov
ffree
mov
push
sahf
dec
das
aad
cmc
sahf
adc
mov
sub
ficoml
aas
in
mov
lds
mov
pop
jecxz
sub
hlt
xor
mov
jge
fstpt
mov
add
add
cltd
nop
popl
popf
or
fwait
pop
ret
scas
pop
lods
mov
bound
in
mov
sub
jae
sub
mov
cmp
cmpsl
ficomps
call
push
fisubl
stc
and
xchg
stos
push
mov
mov
repz
jecxz
dec
xchg
test
in
mov
inc
movsl
xor
xchg
mov
push
pushf
call
subb
rolb
aas
bsr
stc
adc
std
jne
inc
push
pop
sbb
dec
mov
lods
inc
cld
mov
fildll
test
sub
popf
mov
lahf
notb
add
icebp
and
xchg
fisubs
ljmp
push
mov
xor
dec
adcl
jecxz
inc
fistps
dec
add
jle
xor
mull
add
add
sbb
pop
leave
insl
and
xchg
xorl
cmc
jno
pop
clc
dec
push
mov
pop
adc
jge
jbe
stos
sbb
loopne
incl
xor
pushf
push
and
inc
es
aaa
or
push
mov
sahf
mov
jle
push
mov
mov
push
scas
fstps
mov
inc
pop
out
pop
sbb
loop
xor
cmc
sbb
jle
mov
xchg
imul
mov
pop
imul
scas
fwait
mov
fldenv
cltd
adc
std
int
repnz
sub
or
int
xor
add
aaa
push
incb
in
dec
or
sub
dec
dec
stc
cmc
out
jle
fidivrl
bound
dec
pop
js,pn
fstl
hlt
pop
out
pop
sub
mov
hlt
fistps
pop
cmp
pop
out
lods
pop
push
mov
pop
add
arpl
push
push
jp
pop
pop
mov
jge
mov
enter
outsb
ds
lods
test
xor
sbb
push
and
sub
in
imull
dec
ss
cs
push
push
mov
add
add
out
dec
scas
pushf
fcmovnbe
mov
fisubl
test
out
jbe
jl
mov
mov
sub
add
mov
xchg
or
orl
sub
ja
rcr
out
push
pop
stc
cmp
mov
mov
add
cltd
enter
sbb
mov
out
leave
rcll
lret
mov
sti
rcrl
fwait
mov
cli
sbb
cld
xor
jg
lcall
sub
sbb
mov
popf
mov
aas
inc
ficomps
gs
jmp
or
sub
sbb
ljmp
cli
ficomps
dec
je
or
iret
inc
imul
mov
insl
mov
mov
ret
or
inc
es
pop
call
pop
mov
int3
pop
in
fnsave
and
or
mov
ljmp
pop
fs
leave
ljmp
xor
das
sbb
or
jae
mov
and
xchg
cld
scas
xchg
pop
cmc
push
les
jb
inc
je
aas
sti
pop
jl
imul
divl
mov
loopne
pop
insb
jp
sub
mov
cmpsb
fcomp
push
jb
popf
clc
rorl
sarb
sbb
jmp
cli
rcll
shl
cmp
fnstsw
add
mov
jmp
add
pop
push
das
push
pop
and
mov
data16
shll
cltd
mov
push
xchg
xor
repz
jge
lret
int
in
or
mov
aad
pop
outsb
imul
inc
jge
pop
lahf
fmuls
sahf
inc
gs
ss
cmp
add
pop
pushf
ljmp
out
add
ret
aas
popf
fwait
cmpsl
sbb
aaa
pop
or
mov
fisttpll
scas
inc
pop
ror
and
inc
sbb
sti
aas
pop
xchg
cli
cltd
inc
cli
push
lahf
popf
add
or
jno
xor
rcrl
lret
adc
fisttpll
repz
xor
repz
jmp
stc
std
int3
popf
mov
test
mov
mov
pop
cmp
sbb
je
mov
js
gs
mov
imul
pop
push
cmp
push
jo
xlat
inc
ret
xchg
lock
adc
icebp
das
out
or
jle
sbb
cltd
xor
mov
push
mov
sti
jae
mov
xor
cld
sbb
mov
fcmovu
imull
push
jp
lea
mov
xchg
pop
mov
std
cmp
pusha
or
arpl
mov
and
sbb
mov
add
adcb
cmp
pop
orb
cmp
call
into
lock
shlb
fdivl
sbb
mov
lods
inc
rorb
fisubrs
xchg
jg
adc
jnp
mov
movsl
jg
push
or
jg
imul
dec
pop
cmpsl
pop
jns
mov
mov
sbb
sti
cs
pop
insl
mov
iret
cmpl
mov
or
scas
xchg
lock
shrl
pop
push
out
adc
jg
pop
mov
cmp
and
repnz
xor
mov
and
pop
lcall
mov
xlat
jle
jnp
and
std
lock
pop
mov
cmc
add
xchg
lock
and
mov
push
data16
sbb
aam
movsb
jg
pop
idivl
adc
rcl
mov
cmpsl
pop
call
inc
lock
test
mov
cmp
cmpsb
or
jl
mov
mov
pop
test
sahf
sar
mov
and
push
dec
cmpsl
aam
insl
jmp
fildl
adc
mov
fsubs
int3
stc
jnp
repz
jge
inc
push
aas
dec
mov
pop
pushf
sahf
add
popa
dec
sbb
fidivs
push
jnp
out
scas
push
aaa
xor
push
cwtl
cltd
xchg
pushl
dec
aas
sub
sti
mov
jb
jmp
jb
out
or
in
and
in
inc
stc
into
pop
xchg
cltd
imul
jb
roll
faddl
les
xchg
out
pop
sub
out
sti
mov
rclb
int3
hlt
jo
mov
dec
push
orl
in
mov
mov
sub
add
out
or
incl
cmp
cmp
aam
loop
bound
ud0
or
pop
push
rclb
outsl
jne
mov
pop
test
stos
ficomps
stc
pop
mov
fdiv
push
jle
out
sub
xchg
insl
mov
jb
sar
gs
cmp
cld
fcoml
mov
ret
lret
jge
aaa
inc
movsb
fwait
popf
je
pusha
xchg
in
rclb
fstps
sbb
mov
fldlg2
cs
mov
lods
cmpsl
ds
fstps
filds
insb
dec
neg
mov
push
push
fiadds
ja
mov
sub
mov
adc
or
xchg
inc
jo
push
nop
sbb
push
stos
sbb
arpl
fbstp
popa
rclb
rcr
ret
dec
enter
ficoml
xchg
adc
lea
mov
pop
lock
scas
arpl
sbb
mov
cmpsl
mov
leave
call
aad
mov
test
or
mov
and
mov
insl
iret
mov
mov
pop
mov
loop
push
jmp
movsl
dec
adc
cmc
aas
mov
ret
in
lret
stos
jno
out
loop
sti
inc
or
pop
push
shll
push
fisubrs
push
mov
lea
mov
leave
and
lods
mov
jle
dec
inc
ja
xlat
adc
fisubrs
xor
mov
push
into
dec
mov
xor
iret
jle
scas
xlat
push
mov
mov
cmp
sti
sub
stos
cmc
adc
dec
pop
push
fstpt
es
add
mov
mov
scas
outsb
out
pop
push
popf
imul
jle
pop
or
popa
sub
mov
shr
roll
repz
hlt
mov
mov
ret
pop
add
pop
xor
cmc
mov
mov
mov
mov
out
xchg
mov
xchg
aaa
inc
mov
xchg
sub
add
lea
push
pop
pop
mov
es
mov
inc
mov
xor
xor
jmp
fiaddl
in
jle
addr16
sub
cs
push
pop
sub
fildl
rcrl
xor
ljmp
sbb
pop
dec
lret
dec
adc
jl
cmc
pop
mov
fimull
xchg
or
stc
andl
push
jg
dec
pop
dec
dec
insl
or
push
pop
cmc
loope
shrb
iret
out
inc
shrb
rorl
aaa
loope
stos
scas
outsl
xchg
out
pop
mov
int
cs
jno
into
pop
stc
xor
jns
int3
sahf
cwtl
mov
stc
mov
sub
dec
xlat
sub
jo
dec
pop
xchg
jns
push
fdecstp
mov
inc
cmc
stc
cmpsb
test
jl
jp
mov
mov
pop
adc
mov
repz
jb
cmpsb
push
in
sahf
lret
sbb
mov
or
push
mov
in
rcrb
adc
fbld
jae
rcrl
and
shrl
popl
sti
hlt
inc
pop
repnz
jmp
push
add
mov
jnp
iret
scas
add
test
adc
sub
psrlq
repnz
sub
std
lret
mov
popa
jg
mov
or
clc
orb
jle
insl
and
sti
pop
xchg
cmp
mov
out
movsl
in
mov
cmp
jp
testl
ds
cmp
popf
pop
adc
dec
and
mov
dec
or
aam
mov
mov
enter
mov
or
or
in
out
jle
int
xchg
cs
aaa
pop
fwait
stos
pop
sbb
cwtl
addr16
nop
pop
ljmp
mov
pop
dec
mov
rolb
pop
fiaddl
clc
fcoms
into
iret
xchg
adc
sbb
dec
push
repz
inc
sub
fstp
mov
outsl
call
xor
dec
dec
ret
dec
mov
mov
sti
pop
cwtl
push
jno
push
shl
rcrl
in
cmpsl
lods
pop
icebp
sahf
leave
in
fsubl
pusha
iret
sub
sub
daa
jp
shl
jnp
mov
fidivrl
clc
push
add
pop
jp
lea
jl
andb
sti
into
orb
or
fstps
push
adc
mov
cli
int3
sbb
pop
rep
pushf
test
mov
push
repz
xor
in
sub
dec
pop
fdivl
stc
out
popf
fbstp
cmp
fimuls
dec
out
in
add
popf
std
shrb
imul
mov
imul
fld
js
js
hlt
sbb
xor
dec
or
stos
xor
cmp
jns
lcall
movsb
jnp
pop
lret
mov
lea
inc
push
sbb
dec
mov
cmp
adc
in
mov
adc
stc
pop
pop
sbb
mov
cwtl
idiv
jbe
repz
imul
stos
loope
nop
jo
jle
pop
int3
mov
pop
sbb
loop
fisttpll
clc
popa
lock
pop
mov
cld
into
pop
call
xchg
enter
es
hlt
jnp
imul
jmp
pop
dec
sub
mov
cmpsb
call
rorl
out
xchg
mov
aas
outsb
pushf
sub
out
insb
outsb
out
add
push
sub
out
add
or
push
ret
mull
dec
stos
arpl
in
imul
pop
ret
ret
push
jb
jns
ljmp
jo
addr16
std
ficomps
mov
jecxz
imull
xor
mov
outsl
fiadds
cmpsb
jle
bound
cmpb
pop
lret
cmp
lods
adc
or
inc
push
pushf
scas
pop
pop
xor
lods
pop
push
stos
lahf
test
sbb
out
stos
jae
popa
out
mov
sbb
in
hlt
leave
cmc
pop
cmp
popf
je
and
pop
jne
mov
dec
insl
push
dec
add
jge
stc
adc
ds
shll
mov
arpl
iret
inc
ja
mov
subl
dec
sbb
dec
dec
cmp
shrl
push
push
mov
jbe
testl
adc
nop
pop
cmc
mov
lcall
mov
aam
xor
pop
push
sub
pop
insl
out
sbb
pop
cld
push
add
pop
fs
popf
jb
pop
pushf
je
out
shrl
cmp
inc
out
std
mov
ljmp
lret
xchg
cmpsb
imul
mov
jae
popf
cmp
dec
xlat
xchg
mov
xor
pop
icebp
xchg
jne
addb
sub
mov
push
imul
inc
pop
jle
jl
ret
xchg
faddp
jmp
push
sti
pop
push
pop
sbb
fbld
jg
and
stc
push
fisttps
aas
pop
mov
hlt
add
or
test
mov
mov
fsubrp
stc
cld
lods
mov
mov
adc
out
stc
mov
xchg
mov
enter
call
in
cli
inc
neg
pop
jg
repz
or
out
add
roll
subb
sti
sbb
mov
sub
push
pop
sbb
add
cmp
aas
sbb
sbb
add
scas
sub
sbb
inc
imul
or
clc
push
mov
leave
xor
mov
cmp
sub
movb
cmpsb
pop
imul
inc
and
sbb
jno
subl
or
pop
adc
mov
scas
lret
imul
sub
std
mov
or
xor
imul
hlt
mov
pop
out
and
or
mov
jnp
sbb
scas
movsb
nop
imul
out
int
scas
lret
popf
dec
ds
jae
mov
in
imul
adc
pop
adc
mov
data16
ja
mov
sub
mov
inc
arpl
fdivrl
imul
inc
rcll
insl
test
mov
or
scas
add
sbb
mov
xchg
fs
cli
loope
pop
loopne
mov
shr
mov
mov
jb
test
mov
scas
repz
scas
cmp
or
shlb
fmull
jecxz
clc
sbb
push
push
jne
ljmp
mov
das
mov
adc
jns
mov
pop
xchg
cmp
cltd
imull
sarl
imul
pop
test
shrb
push
adc
add
and
push
out
out
sbb
lods
push
push
lret
outsl
or
cmc
leave
sub
cli
dec
fsts
fdivrp
and
das
pop
sub
aam
mov
xchg
fldt
lock
fistps
icebp
aas
xchg
and
dec
cmpsl
xchg
cmpsl
add
pushf
xchg
repz
sti
mov
unpcklps
and
in
sbb
mov
adc
xchg
pop
fstps
mov
shrl
jnp
into
mov
xor
mov
cli
rolb
lret
popf
xchg
add
and
jl
sub
mov
cltd
pushf
pop
or
pop
hlt
adc
push
push
js
mov
sub
mov
sub
js
mov
jne
in
sbb
cmp
cltd
cmp
shll
pop
out
inc
mov
adc
push
stc
and
xor
iret
lods
xchg
gs
clc
add
or
add
adc
pop
or
xchg
aam
leave
faddl
iret
int3
push
xor
mov
push
test
ss
jle
repnz
add
pop
movsl
rorl
inc
stc
mov
movsb
jo
pop
xor
xchg
fidivrs
out
pusha
loopne
enter
sbb
fstpl
scas
mov
adcb
jmp
lods
push
fcompl
imul
pop
inc
pop
mov
notl
pop
lds
and
out
or
adc
push
fcoml
test
add
rcrb
rcrb
daa
xor
sub
pushf
jne
inc
jle
aad
outsl
fisttpll
jmp
adc
dec
std
lods
and
xorb
cmc
shrb
das
cmp
jge
sbb
xchg
clc
mov
cmpsb
xor
sahf
sbb
mov
pop
pop
sub
clc
add
mov
jnp
loope
ja
mov
jecxz
fldenv
dec
imul
mov
xor
int3
dec
pop
push
jle
jbe
je
push
fcompl
jge
mov
add
xchg
pop
mov
pop
mov
arpl
pop
or
lahf
xor
scas
loop
dec
dec
bound
imul
inc
inc
out
xor
jno
ss
cmp
int3
jnp
push
pop
pop
stos
inc
xor
mov
mov
jle
cmpsl
iret
pop
xchg
pop
test
dec
pop
xor
sub
inc
sub
pop
push
pop
imul
inc
std
xchg
in
pop
out
cmp
es
fs
rolb
lods
xchg
imul
xchg
pop
fidivrs
or
ljmp
and
cmp
out
rep
adc
xor
fwait
push
jnp
lea
push
rolb
cld
ja
test
sub
rclb
shll
dec
xor
fdivr
xchg
push
xchg
jl
test
js
arpl
dec
outsl
inc
incb
out
sahf
cs
jge
adc
jl
sbb
cld
push
in
jp
stos
mov
ljmp
mov
pop
std
enter
mov
sahf
mov
fidivrs
sti
or
pop
mov
ja
out
stos
jnp
pop
inc
inc
repnz
xchg
jb
sbb
mov
pop
pop
cmp
pop
fildl
iret
or
repz
add
rcrb
mov
shl
dec
cltd
sub
testb
out
pop
out
cmpb
and
push
xchg
add
sahf
loope
fdivs
scas
test
loopne
mov
gs
mov
add
leave
xchg
clc
js
scas
push
inc
cmp
add
pop
pushf
insl
mov
mov
xchg
pop
jbe
mov
sbb
pop
pop
sbbb
movsl
shrl
arpl
imull
fs
pop
icebp
out
or
dec
cmpsl
pop
mov
addr16
cmp
lret
mov
sti
xor
lret
dec
scas
xchg
mov
sbb
inc
inc
ret
inc
test
mov
fistl
adc
mov
pop
sti
adc
test
or
cli
pushf
stc
in
ss
sub
scas
rcr
mov
mov
mov
loop
movsl
outsl
jge
inc
push
sbb
pop
sbb
xchg
mov
mov
scas
cli
into
mov
mov
pop
or
mov
fldt
imul
jge
ror
jnp
lods
aam
inc
shrb
adc
scas
push
or
sbb
aad
jle
loopne
iret
mov
notl
lds
sbb
mov
into
mov
fwait
mov
inc
sub
in
test
push
xor
pop
icebp
mov
inc
lcall
pop
mov
mov
scas
pop
jno
pop
push
or
inc
mov
pop
cmp
divl
dec
sub
imul
add
addl
cmp
mov
and
pop
or
cltd
or
aas
xchg
cmp
loope
mov
mov
pusha
std
fisubs
inc
mov
test
and
sahf
fnstsw
fsubl
aas
js
shll
push
dec
mov
clc
adc
aas
lcall
popl
lahf
popf
push
mov
add
xchg
sarb
aam
rorb
outsl
repz
mov
push
pop
je
push
insl
mov
testl
inc
or
mov
aam
stos
mov
pop
sar
addr16
push
mov
ret
lods
loop
cmp
insb
add
mov
and
sahf
stc
lcall
sti
sub
jne
cmpsb
pop
lea
mov
xchg
pop
je
lods
xor
lods
scas
sbb
cld
mov
push
rcr
imull
jo
pushf
fcmovnu
pop
xorl
dec
sti
fcmovb
insb
jp
clc
scas
sbb
rcrl
pop
xor
pop
lea
push
sub
out
and
aam
dec
mov
xchg
testb
rcll
cmpsl
insl
pop
push
jg
std
mov
cmp
gs
insb
enter
stos
inc
xchg
cmp
or
arpl
jge
nop
sbb
data16
xchg
mov
mov
xchg
jmp
nop
mov
movsl
cmpl
sbb
cmp
xchg
sti
jns
enter
xchg
push
movsb
dec
add
fisubl
leave
out
push
mov
jp
aaa
pop
inc
lahf
aad
sub
mov
push
dec
iret
icebp
xchg
jle
lea
mov
jae
sbb
jge
jbe
mov
sti
iret
pop
loop
xor
out
inc
mov
cli
outsb
stc
mov
loopne
mov
add
test
icebp
fnstenv
jmp
sbbb
jne
inc
and
movsl
scas
fnstenv
in
mov
or
sbb
jne
mov
lea
inc
fs
lods
push
sahf
decl
and
add
mov
std
and
inc
pop
call
mov
mov
fwait
xchg
mov
rorl
and
cmc
fdivl
pop
outsl
out
xor
dec
mov
xchg
cmpsl
cmpsb
sarb
sub
pop
mov
mov
xchg
cld
pop
pop
into
out
or
jmp
addl
popa
sahf
aam
push
sbb
test
push
xchg
lahf
int
or
xlat
mov
or
mov
clc
rcll
ret
jae
std
xchg
lock
sbb
pop
in
std
sbb
jecxz
fbstp
or
scas
outsb
pop
sbb
test
das
loop
negb
mov
arpl
cwtl
jae
push
stos
in
cmp
lock
insb
mov
pop
xchg
outsl
call
jo
xlat
pop
test
xor
out
inc
addb
lret
mov
sbb
fsubrs
aaa
mov
rorb
push
mov
negb
scas
repz
cld
or
pop
or
xlat
imul
mov
cltd
ss
fs
and
into
adc
mov
ret
test
pop
cmp
mov
pop
fs
fcoml
imul
dec
mov
int3
xchg
out
push
push
insl
rcrl
cld
mov
fsubs
cmpsb
outsb
pop
pop
jge
adc
or
test
or
lods
jl
loope
popl
sbb
jae
pop
call
outsl
pushf
jb
sbb
or
fdivs
add
mov
sub
shlb
cmc
sub
push
push
aas
sahf
movl
stos
jle
lahf
pop
pop
ret
negl
clc
rcrb
xchg
mov
pop
daa
in
pop
xchg
and
int
push
mov
mov
std
add
scas
cmc
xchg
sub
fildl
out
in
clc
sub
pop
subb
fstpt
jle
sbb
push
outsl
adc
rolb
paddusb
fxch
adc
mov
sub
jo
loope
mov
mov
cmpsb
aam
mov
cmp
mov
or
fimull
outsl
imul
popf
movsb
push
mov
jecxz
jo
pop
lods
scas
sbb
mov
dec
adc
sbb
loope
cmp
mov
and
mulb
mov
loope
cmp
jnp
ss
negb
dec
xchg
ret
inc
and
jge
mov
and
pop
mov
icebp
mov
into
inc
cwtl
xchg
push
lds
negl
popf
sarb
fistps
in
cmc
dec
mov
loope
leave
jns
xor
fs
xchg
out
out
mov
jae
xor
and
mov
cmp
out
xchg
ret
xor
test
adc
push
sarb
sti
into
dec
cltd
cmpxchg
xlat
sti
pop
inc
jl
loope
pushf
leave
push
or
or
mov
fsub
ss
jns
cmp
xchg
cli
dec
lahf
fcom
into
xchg
stc
aam
loope
push
jo
mov
mov
aam
bound
mov
cld
jnp
lret
arpl
cld
add
outsb
or
mov
pop
repnz
popa
faddl
shrl
fcoms
xor
adc
jmp
push
jle
into
mov
movsb
sbb
not
or
jbe
rorl
push
mov
mov
and
outsb
scas
test
sbb
sarb
adc
stos
fcmovnu
test
mov
xor
jg
lahf
pop
ret
popa
loop
sub
adc
pop
imul
inc
jle
shl
inc
pop
std
mov
or
xlat
and
fisubrl
mov
mov
sub
pop
mov
push
lahf
add
add
cltd
jge
imul
jae
sub
in
mov
mov
pop
sbb
testl
inc
xor
ret
fsubrp
mov
add
outsl
das
mov
sbb
arpl
or
mov
xor
jmp
add
lea
add
fmulp
ljmp
leave
xchg
subb
cmp
aas
je
mov
sub
mov
rclb
adc
mov
inc
das
rcl
add
jl
and
daa
and
add
pop
addr16
movsb
es
sbb
je
orb
out
sti
sbb
and
popa
jbe
repz
xchg
sbb
mov
rorl
insl
movsl
sbb
mov
xor
jmp
int
jne
cld
dec
aaa
xor
out
les
dec
imul
dec
in
cmp
mov
push
jle
inc
jg
jae
sar
lret
in
and
lea
xor
add
jg
pop
fistpl
pop
insl
cmpsb
imul
sbb
ret
lret
lock
adc
in
push
das
inc
fxam
add
mov
rcll
dec
adc
jbe
iret
pop
lret
or
pop
rcrl
int
or
ds
ds
imul
jnp
mov
jle
cmp
outsb
in
xchg
dec
mov
jle
cwtl
test
aam
adc
add
imul
stos
inc
pop
and
mov
daa
js
jg
pop
rolb
loope
mov
ret
icebp
int
pop
aas
inc
lea
and
fadds
xor
jl
push
push
pop
dec
pop
push
adc
jae
clc
addr16
push
insb
mov
adc
pop
push
or
shll
xchg
stos
mov
mov
in
out
pop
dec
xchg
test
iret
popa
fwait
mov
mov
xchg
push
jl
pop
shl
subb
clc
cli
mov
dec
lods
cmpsb
daa
addr16
xor
cs
sbb
mov
pop
inc
mov
div
inc
and
jl
imul
test
cmp
into
cmp
outsb
addr16
xor
ds
pop
js
gs
iret
in
jbe
stc
mov
pop
xchg
andl
repnz
push
or
setbe
inc
in
push
cmp
aad
jg
arpl
xchg
xor
fsubrl
out
arpl
int3
mov
loop
pop
xchg
pop
clc
movsl
inc
jnp
mov
loope
in
mov
mov
aaa
popf
cltd
subb
dec
lahf
lret
xlat
testb
adc
test
jne
jmp
pop
leave
jb
jp
fstps
fsts
lcall
mov
cs
ljmp
jmp
xor
and
into
test
cltd
imul
test
icebp
out
cmp
idiv
icebp
cmp
inc
mov
cmp
es
movsl
push
mov
insl
aaa
mov
cwtl
jge
pop
push
jmp
pop
jle
frndint
sbb
pop
daa
xchg
xchg
cmpsl
pop
sbbb
add
xchg
xchg
xchg
test
jo
enter
push
adc
repz
push
pop
cmpl
jge
fst
mov
pop
mov
or
push
xchg
cmc
dec
aaa
ss
add
cmp
lret
jbe
jp
and
jmp
ljmp
jle
inc
ficomps
xchg
mov
push
imul
lahf
in
push
adc
push
sarb
xchg
inc
cmp
stc
pop
mov
call
push
xor
mov
inc
cmp
pop
inc
pop
push
or
hlt
push
mov
add
inc
pop
mov
in
fwait
adc
gs
fwait
cltd
mov
or
imul
pop
push
shrl
xor
nop
pop
mov
cmp
shlb
jg
cli
mov
loop
int3
mov
jmp
aam
gs
jnp
cli
ret
inc
adc
pop
sbb
add
test
pop
push
pop
sub
aas
cmp
adc
and
mov
addb
lods
pop
cmp
mov
stc
jecxz
dec
pop
rcr
rorb
inc
inc
leave
iret
sub
and
js
jns
xchg
cli
dec
pushf
sub
insl
mov
sahf
sub
pop
mov
iret
stos
push
jno
xchg
popf
mov
pushf
pop
mov
ljmp
js
mov
dec
scas
push
out
jg
lods
mov
in
or
das
adcl
ficompl
mov
cltd
mov
jg
shlb
iret
cmpsl
int
shrl
fidivrs
and
orl
repz
cmp
adc
scas
jle
mov
into
test
cmpsl
adc
mov
jp
adc
sti
jne
mov
mov
cltd
xlat
sub
clc
sub
mov
cmp
lds
pop
insb
in
sub
add
data16
inc
sbb
add
jbe
lods
ficomps
jp
test
push
adc
out
mov
inc
lods
clc
pop
leave
inc
xchg
repz
stos
push
lea
stos
sbbb
or
pushf
mov
jmp
dec
lret
xchg
push
mov
pop
addr16
ds
lea
in
sbb
incb
add
dec
sahf
je
push
xor
inc
sbb
cmp
mov
stos
mov
mov
jge
pop
int3
ror
out
xchg
jmp
push
push
fidivrs
xchg
dec
inc
mov
cmp
in
stc
adc
and
imul
jmp
negl
cmc
movsl
pop
fstl
decb
iret
sub
pushf
leave
iret
or
mov
push
mul
lods
test
lea
enter
rorl
popf
mov
push
fldt
fbstp
mov
into
xchg
subb
mov
stc
vpshlq
pop
ss
mov
cmp
inc
out
jns
xor
movswl
out
adc
into
push
aam
mov
inc
adc
fldcw
xor
shll
aaa
cmp
scas
sub
jl
cli
sbb
add
fcomps
gs
mov
jle
orl
lods
cmpsl
fxch
scas
mov
add
into
das
sahf
fnstcw
repnz
pop
loopne
pop
add
sbb
cmp
iret
add
xor
lret
and
xor
outsl
decb
and
lcall
ds
addr16
mov
pop
aaa
call
aas
push
stos
pop
xor
cmp
fsubl
mov
add
cmpsb
pop
test
mov
xchg
mov
jle
or
sbb
or
out
sub
push
cmp
push
push
jecxz
pop
hlt
rorl
idivl
pop
daa
sbb
iret
mov
mov
test
fdivrl
cli
dec
pop
mov
dec
pop
pop
lods
les
daa
int
repnz
add
push
xchg
pop
jp
lods
push
dec
pop
mov
push
ds
std
mov
je
mov
or
cs
in
cs
xor
cli
xor
popf
cmp
outsl
arpl
push
add
xchg
jo
dec
invd
jl
xor
rcrb
rclb
xchg
mov
sub
sbb
adc
pop
inc
insb
xchg
mov
pop
repz
pop
or
xchg
fwait
lcall
fisubrs
out
xchg
arpl
sbb
mov
xor
fcomi
add
stos
fdivrl
sub
xor
cli
ss
cwtl
add
pushf
push
adc
icebp
mov
jb
insl
push
mov
mov
sti
in
scas
xor
lcall
mov
jne
flds
add
pop
ret
rcrl
das
repnz
sti
ss
pop
pop
cmp
pop
inc
sbb
lods
test
mov
dec
add
sub
sbb
dec
ss
cmpsl
fcompl
lret
mov
push
outsb
add
fisubl
loope
push
fistl
jle
call
inc
enter
mov
test
fsub
mov
mov
lret
mov
sbb
fcoms
pushf
add
jo
ja
push
xchg
push
fnsave
jl
pop
js
push
int3
mov
fs
mov
ret
sub
cmpsl
cltd
inc
xchg
xchg
test
adc
pop
insb
mov
aaa
add
stos
or
mov
cmpsb
cltd
sbb
stc
dec
sbb
pop
test
je
adc
xchg
lea
mov
ljmp
pop
jns
mov
cmp
inc
pop
xchg
out
orl
mov
mov
shlb
dec
dec
jmp
mov
shlb
repz
popf
and
int3
add
test
mov
or
xlat
cmp
js
lea
push
cmpsb
addr16
jp
xor
cmp
pusha
jbe
inc
repnz
push
imul
sbb
fistpl
xchg
cmpsb
mov
adc
mov
aad
addr16
mov
cli
js
pushf
and
iret
cmp
pop
ja
cmp
add
lds
dec
hlt
pop
mov
ficoms
add
insl
mov
ret
push
jo
mov
ja
mov
insb
movsb
cmpsb
ljmp
sbb
jmp
mov
adc
pop
jle
mov
cmc
jno
push
repz
jle
out
sbb
rep
sbb
orl
jg
jbe
pushl
cmc
inc
mov
hlt
aas
pop
push
fcomps
mov
cmpb
ljmp
imul
mov
sbb
inc
into
stos
adc
rcrl
outsb
setae
inc
lahf
sarl
xchg
mov
leave
cmp
leave
push
mov
dec
inc
aas
imul
xchg
stos
dec
and
mov
test
subb
aas
rcrb
xchg
adc
mov
sbb
pop
jo
fs
sbb
test
push
insb
int
mov
cli
addb
pmaddwd
shlb
data16
ret
addr16
xor
outsl
mov
aam
testb
es
std
push
ja
xor
mov
mov
sub
and
pop
push
sub
stos
cmpb
mov
decb
jbe
mov
into
pop
mov
mov
dec
leave
test
or
sub
loope
pop
jecxz
or
jle
mov
js
popa
cli
rol
int
fndisi(8087
pop
incl
push
ja
xchg
setns
jno
sub
outsb
mov
mov
pushf
es
mov
fucomi
fidivl
aas
flds
mov
push
lods
or
sbb
movsb
outsb
div
inc
ja,pt
jo
mov
xchg
sub
out
dec
outsb
dec
hlt
mov
jne
mov
xchg
sbb
jle
jg
mov
pop
pop
jns
pop
nop
ljmp
and
andl
sahf
stc
not
cmpsb
stos
fldcw
repz
xor
divl
js
das
and
lods
xorl
jle
mov
roll
faddl
dec
inc
enter
enter
cmc
sbb
mov
dec
or
out
jp
cmp
add
xor
call
js
fsubrl
mul
jg
imul
xlat
lret
push
mov
call
mov
and
stos
insb
popa
mov
repz
shl
fsubrs
cmp
push
and
pop
sub
pop
xchg
sarl
cmpsb
rcr
mov
mov
ret
xor
dec
cltd
push
xor
inc
mov
je
out
inc
and
fcoms
inc
mov
ss
and
xchg
test
mov
mov
jns
pop
rcll
jle
pand
and
das
or
fisttpl
out
mov
jp
sbb
fwait
push
xor
add
cmp
xor
mov
push
movsl
aaa
mov
cmp
loop
or
push
out
vaddss
mov
in
xlat
mov
sti
push
mov
cli
jmp
add
scas
sti
cmp
aad
inc
fiadds
mov
sub
mov
and
ds
jg
sbb
popf
push
cs
jb
jg
xchg
movsb
lcall
dec
pop
fucom
inc
mov
mov
and
insl
jmp
pop
ds
ja
das
loope
push
fisubrl
sub
scas
mov
mov
sbb
rcr
into
out
stc
push
sbb
xchg
mov
xchg
out
insl
inc
mov
cmp
mov
jne
arpl
adc
je
addr16
xchg
push
pusha
es
jecxz
ret
mov
imul
mov
sub
stos
ficoms
dec
in
ret
ret
sbb
pop
lcall
mov
adc
xor
jmp
or
xlat
out
pop
sti
fists
sbb
xor
aam
push
sub
out
xor
mov
sbb
lock
dec
movsl
inc
insl
roll
scas
push
punpckhdq
and
cmpsl
dec
in
int
push
xlat
fstpt
mov
dec
rcrl
lods
fs
adc
pop
mov
xchg
ficompl
push
sub
add
push
push
push
int
add
mov
pop
lcall
adc
insb
test
scas
mov
imul
es
ss
mov
jmp
rcrl
jg
dec
dec
mov
or
test
test
cmp
push
cld
mov
mov
adc
jmp
xor
js
jne
in
xchg
mov
mov
fadds
adc
xlat
sti
add
out
jb
test
cli
aaa
test
dec
xchg
mov
push
cld
mov
insb
push
nopl
sub
aas
or
mov
push
ficoms
fldln2
incb
insl
test
push
sub
inc
pop
movsb
out
add
xor
out
add
clc
jg
fnstsw
dec
xchg
mov
test
jg
loopne
mov
sub
fs
cmc
sbb
fimuls
std
mov
out
cmp
scas
jl
mov
mov
out
mov
add
jae
std
or
cmp
bound
inc
int
mov
pop
rcrl
fwait
aam
test
icebp
inc
push
lock
movsl
xchg
push
addl
sub
mov
aas
mul
pop
orb
ljmp
cli
add
iret
add
jmp
cmpsl
cli
notb
mov
jmp
fsubl
pop
loop
lods
cmp
movl
mov
test
out
gs
rcrl
cmp
xchg
int
loop
mov
xchg
jae
pop
xchg
sahf
inc
popa
jl
mov
sahf
cmp
cli
push
cltd
pop
stos
adc
and
cmpl
jbe
scas
pop
popf
roll
pop
mov
arpl
fstl
js
aaa
xchg
popf
testl
in
lock
imul
xchg
adc
pop
jge
out
mov
jle
inc
std
mov
cmp
xchg
out
push
movsb
pop
inc
scas
dec
cmpsl
mov
out
subb
ja
iret
mov
fcmove
mov
rcrl
push
ss
mov
aam
xchg
ret
test
or
mov
and
ss
mov
xlat
dec
stos
lods
cmpsl
mov
dec
frstor
mov
sahf
mov
push
pop
das
loop
fdivrp
data16
mov
dec
arpl
sti
sbbb
imulb
inc
stos
idivl
pop
les
mov
add
jbe
imul
mov
fistpl
cld
add
dec
mov
test
into
fistps
push
xchg
xchg
pop
fdivp
pop
mov
inc
loope
js
popf
push
dec
cmc
sbb
mov
sbb
jne
andl
rcrl
xchg
push
mov
std
hlt
sbb
mov
xor
adc
mov
aaa
in
push
cs
mov
sbb
imul
stos
xchg
mov
push
loope
fcoms
clc
sbb
adc
adc
push
jmp
pop
lret
in
sub
mov
dec
ljmp
ficomps
lret
popa
push
and
jle
mov
cmp
mov
cmp
sbb
imul
and
adc
pop
imul
ljmp
cmp
roll
gs
jp
jmp
sub
mov
in
stos
or
negb
mov
cmpsb
mov
mov
xchg
lea
pop
int
pop
adc
jne
xchg
stc
dec
mov
inc
imul
adc
mov
jle
das
loop
lods
not
movsl
or
mov
push
sub
faddl
sbb
mov
lods
mov
in
mov
mov
mov
sub
ret
cld
pop
jmp
dec
dec
sbb
sbbb
outsl
data16
jmp
pop
mov
ficomps
push
test
fdivrs
imul
mov
int3
sub
scas
mov
in
std
pop
imul
iret
inc
pop
xchg
push
popa
fmul
mov
call
push
or
les
sbb
orb
sbb
hlt
sbb
and
arpl
aad
imul
jbe
mov
mov
add
fistl
pop
xchg
test
movsb
sti
xchg
call
fldenv
jno
inc
sub
inc
push
popa
jge
mov
ds
add
add
jge
jg
pop
out
arpl
adc
int
mov
ret
adc
jno
out
out
dec
rcrb
ljmp
push
divb
pop
in
out
in
rol
test
sbb
shl
fdivrs
in
mov
pop
in
hlt
in
mov
cs
nop
sub
adc
stc
pop
pop
pop
jmp
or
dec
insl
hlt
test
push
jae
stc
adc
mov
sbb
jns
pop
loop
push
fucomp
scas
cmp
cmp
xchg
mov
dec
outsl
lea
shll
sub
insb
cltd
inc
mov
inc
cs
fcoml
aas
mov
sub
leave
add
in
inc
jae
enter
aas
jle
mov
pop
push
adc
or
sbb
ds
dec
shll
movb
out
xchg
adc
adc
insb
lock
adcl
mov
mov
cwtl
imul
iret
pop
inc
pusha
inc
std
mov
jg
pop
dec
movsl
push
pop
cmp
pop
mov
aaa
jae
pop
out
je
mov
sbb
sahf
in
sbb
aam
test
pop
idivb
aas
loope
leave
shrl
mov
in
mov
xchg
mov
lods
push
ret
imul
insb
sbb
sub
stc
adc
cmc
mov
lods
int
xchg
cmp
inc
scas
decl
cltd
das
test
push
ljmp
scas
repnz
std
incb
adc
stos
pop
fdivl
out
sarb
pop
imul
jge
jle
out
movsl
js
dec
mov
lods
cwtl
inc
int3
ficomps
jbe
std
rcl
xchg
ret
fldenv
das
roll
inc
rcl
add
rcl
outsl
xor
and
out
pop
cmp
mov
push
cli
pop
pop
cmp
mov
pusha
lahf
jp
add
mov
arpl
dec
push
mov
pop
jns
addr16
inc
insb
sbb
add
jle
mov
call
shlb
add
lahf
pop
cmp
insl
push
jg
pop
jle
imul
adc
pusha
pop
mov
lret
push
xchg
push
adc
lahf
mov
xchg
bound
mov
imul
movsl
add
scas
jne
stos
cmp
popl
xor
testl
jne
jp
sahf
pop
movb
pop
mov
pop
jge
adc
xor
stos
cmc
mov
and
pop
lahf
int
push
test
test
mov
pop
xchg
mov
scas
ljmp
push
xchg
fmulp
cvtpi2ps
cmp
rorl
out
and
cltd
jns
mov
stos
fstps
lea
mov
pop
cmpsb
mov
adc
jnp
icebp
cmp
ret
mov
mov
mov
cmpsl
sub
lret
jle
and
push
in
dec
push
mov
inc
scas
add
mov
hlt
movsb
mov
cmp
dec
xor
jp
jae
push
fidivrl
jne
movsl
sub
push
notb
repz
mov
or
cltd
mov
add
or
pop
mov
xlat
hlt
add
pusha
mov
sar
mov
pop
inc
pop
negb
xor
and
loop
cmp
mov
arpl
mov
or
sbb
subb
notl
mov
xor
inc
das
dec
scas
cltd
jge
shll
cmp
mov
mov
int3
adc
mov
mov
daa
test
jl
lea
cmc
pop
test
sbbb
pusha
ds
andl
ss
mov
ja
sbbl
mov
push
test
push
mov
orl
pusha
repnz
pop
es
dec
xor
mov
push
shrl
xorb
popa
pop
shr
das
add
ret
or
sbb
in
xor
dec
push
lret
jg
pop
push
fcoms
mov
mov
push
bnd
pop
xchg
addb
fnstcw
ret
cmpsl
pop
or
aam
pop
out
addb
aam
inc
mov
out
inc
stos
out
inc
jl
mov
xchg
pop
in
idiv
outsl
inc
sub
outsl
push
push
ja
sbb
xor
or
mov
jo
push
xorb
cmp
cltd
mov
jle
out
mov
xor
jnp
pop
add
sbb
cltd
imul
mov
mov
subl
jb
xchg
out
imul
mov
fsubs
mov
dec
cmp
repz
aam
jmp
or
stc
mov
in
movb
mov
bound
or
push
addr16
pop
lahf
mov
jnp
sbb
sub
push
xor
pop
pop
test
sti
adc
and
add
cmc
in
cwtl
mov
ss
push
popf
mov
fcomi
jb
adc
mov
arpl
and
jb
mov
and
out
pop
in
adc
adc
jnp
pop
add
inc
fldenv
mov
arpl
jle
inc
jg
in
add
mov
push
cli
pop
sbb
push
adc
sbb
jle
scas
ljmp
aad
ljmp
ja
ljmp
pop
add
aam
xor
push
fwait
testb
pop
sub
fisubrl
lahf
scas
pop
push
or
mov
push
ljmp
jge
cmc
jle
dec
mov
outsb
mov
xchg
and
sarl
add
aaa
and
xchg
fcmovnu
cli
stos
lcall
push
clc
rcr
push
jae
adc
lea
xchg
and
xchg
lods
pand
cwtl
outsb
js
loopne
in
mov
fs
cmp
mov
inc
sahf
jle
loop
popf
sbb
sub
xor
ljmp
lock
cld
xor
add
xor
sbb
mov
jne
cmpsl
icebp
in
lret
cmp
xchg
imull
xchg
add
lods
call
rol
nop
add
popa
sub
dec
mov
add
pop
js
pop
dec
arpl
movb
add
mov
loopne
pop
nop
xchg
into
rcrb
and
xchg
int3
enter
mov
ja
push
call
in
into
push
mov
push
imul
jnp
and
arpl
jne
int
push
xor
inc
faddl
cmp
pushf
int
dec
push
int
sub
sbb
in
lahf
add
popa
aam
cmpb
xchg
sbb
add
mov
cmpl
ss
mov
inc
mov
push
cmp
iret
cmp
push
jg
mov
lcall
add
dec
sub
sub
es
dec
nop
bound
mov
push
lods
clc
jmp
daa
std
out
leave
cltd
sub
pop
imul
fldenv
sub
xor
out
mov
es
rcrl
add
fcmovne
sub
pop
and
out
xchg
dec
or
sbb
xchg
push
mov
cltd
idivl
ret
cmc
cmp
subb
pop
ljmp
pop
mov
cmp
jge
pop
enter
pop
fwait
dec
clc
sti
loop
push
incl
call
loope
cmp
pop
xchg
sub
adcb
mov
rorb
sbb
mov
daa
pop
imul
out
and
inc
sub
pop
push
pop
in
sbb
sti
flds
test
add
aas
push
mov
xchg
xor
sbb
jne
mov
sar
leave
js
add
mov
adc
rorl
pop
mov
fstpl
jmp
js
dec
out
test
fmuls
cltd
mov
stos
lods
inc
and
gs
pop
sbb
dec
sbb
inc
loop
push
xor
jecxz
mov
pop
mov
mov
sti
sub
inc
or
xchg
lcall
xor
ss
fldenv
in
nop
in
into
pop
das
test
xlat
mov
dec
pop
xchg
pushf
jb
fwait
mov
aam
fisttpll
repz
leave
xor
outsb
mov
adc
mov
mov
pop
jp
or
lods
fs
aad
push
flds
xchg
dec
lds
and
inc
in
dec
ret
fsts
pop
cmp
push
popf
imul
cmp
mov
xor
mov
ss
insl
cld
ja
in
loop
mov
popf
in
xor
mov
jnp
aas
pop
clc
ret
sbb
adc
das
call
mov
shld
sbb
shll
adc
pop
dec
push
cli
lods
push
cli
aas
leave
test
ret
jo
rclb
xchg
inc
mov
outsl
cld
psrlw
imul
pusha
flds
enter
and
andb
dec
std
cmpl
push
jmp
mov
sub
jnp
mov
gs
jmp
mov
cmc
pop
cmc
or
jo
lret
das
mov
lock
pop
ljmp
shrb
stc
icebp
adc
pop
jl
mov
mov
push
insb
mov
testl
pop
leave
scas
sub
arpl
cld
popf
lret
ret
rcr
stos
pop
push
lods
imulb
shlb
and
out
pop
cltd
dec
fdivs
add
pop
and
and
repz
pop
xlat
pop
add
popa
mov
leave
and
mov
mov
push
push
arpl
inc
push
shrl
jb
int3
leave
sahf
cmp
in
sbb
repnz
push
std
fsubl
push
cld
fistl
jge
int3
in
pop
mov
jg
and
mov
mov
sbb
test
lahf
jnp
iret
jg
sub
and
sbbb
mov
lock
cs
movsl
sbb
rolb
push
pop
movsl
cmpsb
add
mov
jp
fistpll
or
fwait
mov
and
iret
mov
into
daa
pop
mov
negl
xchg
mov
in
mov
sub
sahf
mov
insb
jle
aam
adc
mov
jmp
pop
adc
movsl
inc
into
repz
xor
add
lret
out
decl
adc
pop
xchg
sub
clc
xor
rcr
add
add
test
mov
or
cmpsb
xlat
inc
dec
sti
aam
jnp
in
mov
nop
clc
iret
fldenv
aas
shrl
pop
inc
repnz
cld
push
movsb
fwait
pop
xor
lret
cli
dec
push
imul
mov
cmp
pushf
sub
sbb
jge
pop
xor
pop
in
in
pop
sbb
negl
fiadds
sub
mov
push
cwtl
and
cmpl
pop
mov
outsl
push
ja
ss
ss
sub
and
lea
mov
mov
inc
loop
addr16
pop
loop
stos
adcb
jp
jg
insb
test
fildll
ret
imul
mov
sbb
mov
int3
test
mov
mov
fmuls
push
cld
jnp
jns
loope
sub
stc
inc
add
xchg
lret
pop
xor
lret
scas
push
jnp
inc
sub
mov
pop
into
inc
mov
addr16
add
sti
mov
xchg
lahf
pop
cwtl
cli
stos
push
out
jbe
add
daa
push
push
iret
test
or
adc
mov
inc
push
mov
aas
fisttpl
xor
divl
rorl
into
lcall
add
pop
sahf
mov
cld
leave
stc
mov
xacquire
xor
rcrl
cmp
fstl
cmp
pushf
lods
lock
mov
jne
mov
jo
inc
leave
imul
in
popf
mov
mov
fnstsw
inc
mov
cmp
xlat
inc
leave
inc
pop
jnp
aad
push
shrl
cwtl
mov
inc
pop
sub
into
sbb
add
dec
add
lahf
or
movsb
and
not
xor
adc
js
scas
add
les
insb
pusha
mov
mov
jbe
pop
stos
pop
rorl
mov
mov
jo
jbe,pn
jmp
aaa
lahf
jle
pop
aaa
in
test
cli
push
sahf
pop
inc
andl
test
xchg
jl
mov
movsl
enter
jecxz
push
mov
pop
inc
outsb
int
mov
sub
pop
cmp
mov
aas
xor
daa
pop
xchg
mov
push
and
inc
andl
icebp
push
push
sbb
mov
sub
push
xor
mov
out
or
mov
fiadds
cs
in
cmpsl
in
popf
mov
aad
pop
cld
pop
data16
movsl
sbb
imul
xchg
cmp
dec
loop,pn
mov
or
add
test
pusha
jle
out
mov
lcall
jmp
push
test
xor
std
mov
fdivs
cmc
jns
mov
jge
roll
pop
addr16
mov
out
inc
mov
nop
pop
pop
cli
int
inc
sub
sbb
ds
add
mov
jp
and
adc
mov
test
int3
daa
fstpl
cli
or
mov
cs
and
adc
shrl
outsw
mov
sub
clc
mov
loopne
mov
add
xchg
aas
ret
mov
pop
std
mov
mov
pop
movsb
lahf
push
testl
mov
mov
jle
test
inc
in
xchg
sti
mov
inc
out
lret
iret
insb
negl
andl
jg
or
pop
int
inc
sarb
lea
aas
add
xlat
sbb
jmp
bound
xchg
repz
jmp
and
popl
lods
mov
jge
fldcw
and
mov
sbb
push
cld
mov
or
cli
cld
pop
lea
in
icebp
in
pop
fwait
xchg
or
jo
icebp
xchg
inc
inc
scas
sbb
cmp
scas
cwtl
ds
fsubl
test
or
mov
xor
out
aas
shll
in
faddl
scas
jge
shrl
sbb
mov
test
jno
jmp
mov
add
fisttpll
pop
push
mov
xchg
pop
sbb
arpl
pop
push
dec
xchg
les
jns
pop
sub
or
lea
sub
lcall
leave
popf
loop
mov
out
add
and
jecxz
fucomp
lcall
sbb
scas
push
sahf
dec
jns
mov
sbb
out
pop
fdiv
enter
cwtl
jae
aas
data16
outsb
mov
jle
loope
iret
lds
test
rcrl
fucomp
into
addr16
ret
cmp
mov
les
das
shll
mov
fbstp
aam
cmp
and
jp
xor
rcr
xchg
sub
and
add
adc
dec
ljmp
lea
push
xor
sbb
sub
fisttpl
aad
push
std
mov
mov
sar
pop
stc
movsb
popa
mov
loopnew
xchg
push
int3
jle
jle
inc
xchg
mov
xchg
mov
hlt
push
fisubrs
pop
xchg
sbbl
cmc
imul
or
sarl
out
lea
repnz
and
mov
enter
lea
add
xchg
sahf
and
xor
loop
stos
sarb
lret
or
push
test
dec
and
in
in
pop
push
xor
jmp
ret
lods
call
rcl
sbb
cli
push
xlat
lret
mov
fisttpl
insl
bound
aam
and
andb
mov
mov
mov
dec
imulb
sbb
iret
push
stos
and
call
mov
aas
outsb
pop
fdivrs
adc
mov
aam
xchg
ja
xchg
lea
jo
pop
out
mov
dec
dec
addb
jp
mov
in
add
inc
fistps
xchg
mov
imul
aad
fdivl
scas
ret
shlb
jg
fstps
icebp
push
icebp
push
leave
pop
popa
dec
xlat
mov
cmpb
add
push
loopew
push
mov
mov
scas
sti
gs
mov
jg
in
dec
mov
lods
xchg
imul
pop
data16
negl
lcall
add
sbb
mov
cmp
jge
mov
jns
loop
fisttps
sub
mov
and
add
dec
in
fnsave
cmc
xor
faddl
pop
jbe
inc
sub
adc
lahf
dec
pop
jge
fimuls
mov
push
push
test
adc
lods
das
sub
nop
mov
fincstp
cli
sbb
pop
cli
iret
sbb
add
adc
out
mov
and
pop
pop
mov
cld
in
mov
in
rcrl
adc
and
sbb
inc
andl
jp
jecxz
test
push
mov
add
or
or
add
mov
popf
pop
rcr
add
jne
sbbl
xor
cmp
fucomp
sbb
das
add
xchg
sub
mov
ds
sbb
into
mov
xor
xor
cmpsb
clc
out
or
push
es
xchg
cmp
push
das
pop
or
nop
jo
aam
adc
rclb
or
jp
sbbl
or
lahf
push
stc
cmpl
test
imul
pop
es
iret
outsb
das
inc
outsl
or
pop
aas
out
jno
xchg
inc
pop
out
mov
or
icebp
fcompl
into
push
mov
je
push
push
std
or
sar
inc
lea
inc
mov
out
jno
jne
rorl
jns
mov
ja
or
out
mov
les
sbb
ss
js
xor
fisttps
jg
dec
stc
pop
jmp
outsb
stos
mov
daa
ds
fsubrs
movsb
mov
fcoms
shlb
ret
cli
les
pop
lcall
je
shll
dec
pop
cmp
or
repnz
les
aaa
xchg
dec
mov
cmpl
cmp
dec
mov
fdivr
pop
push
fs
fisttpll
flds
xor
sub
hlt
mov
ret
push
ljmp
clc
sbb
mov
out
clc
mov
js
fimuls
std
cmp
xchg
sbb
lods
xchg
sti
lods
lods
fsubp
jnp
add
pusha
adc
mov
lea
insb
pop
cmp
test
jl
sahf
test
dec
cmp
lret
clc
decl
add
fstp
add
pop
scas
aam
jnp
xchg
faddl
inc
push
adc
adc
jmp
jg
enter
cmp
add
aam
popa
test
dec
outsl
mov
jmp
pop
adc
out
cmp
push
scas
xor
pop
jb
adc
test
add
scas
out
cmpb
xchg
inc
jno
imul
movsl
inc
stos
pop
ja
mov
pop
test
xchg
fdivr
jmp
mov
adc
scas
in
push
gs
xchg
lea
pop
mov
cmp
mov
ljmp
cmpsl
sbb
dec
arpl
mov
ficoml
jl
into
ds
pop
xchg
popf
stos
jb
jae
ljmp
adc
mov
push
pop
jge
mov
ds
push
mov
test
xchg
sub
adc
jl
mov
cmpsl
push
jns
fs
in
jmp
push
jecxz
lock
add
pop
fidivrs
dec
dec
mov
imul
imul
pop
adc
mov
scas
lea
cmpsb
imul
aas
idivl
pop
or
ljmp
or
add
lret
mov
jnp
push
mov
mov
sub
sbb
imul
lods
pop
mov
xchg
jg
cld
inc
pop
pop
add
test
outsl
movb
out
mov
xchg
pop
sbb
jecxz
test
xchg
jl
insb
daa
adc
shl
lods
shr
mov
lds
jb
pop
aam
and
scas
pop
gs
sub
cmp
test
sub
fsubrp
mov
and
pop
jmp
mov
movsl
push
lds
icebp
fildl
mov
jp
dec
add
xor
pop
into
dec
fstpl
movsl
mov
xchg
icebp
icebp
or
aad
jnp
jle
pop
hlt
dec
stc
pop
dec
lcall
rcl
fnstcw
pop
enter
std
pop
rcrl
xor
xor
movb
sbbb
xor
lods
test
pusha
push
outsb
mov
mov
leave
loope
je
xor
add
inc
sahf
in
mov
movsb
dec
pop
addr16
pop
ljmp
lcall
push
loopne
shll
dec
mov
movsb
out
and
mov
ja
and
sahf
cmpb
icebp
lret
mov
adc
jo
lods
arpl
xchg
cmp
jnp
loope
testl
add
and
dec
idivb
das
mov
cmpsl
sbbb
roll
add
adc
jns
mov
sub
enter
push
sub
repz
in
out
fst
ret
hlt
mov
ja
lea
xor
divps
and
push
ds
jno
mov
jmp
xor
std
or
adc
cld
hlt
ret
mov
rcrl
data16
bswap
ja
and
xor
iret
je
dec
inc
imul
dec
xor
shrl
imul
sbb
sub
imul
popa
imul
xlat
and
push
je
sti
ficomps
mov
jnp
add
pop
push
imul
imul
outsb
data16
jnp
pop
ljmp
cld
push
nop
mov
push
cmc
mov
adcb
out
lcall
mov
mov
jbe
push
ret
pop
arpl
xchg
lock
rorb
loopne
sbb
sub
mov
mov
ja
dec
or
sbb
addb
int3
cli
mov
dec
xorl
push
fisttpl
adc
jmp
mov
outsb
inc
lock
mov
mov
xchg
ds
mov
xor
arpl
sub
sbb
lret
dec
push
push
ja
fisttps
outsb
xchg
pop
push
hlt
shrl
cmp
fldenv
int
pop
xchg
mov
lret
mov
mov
mov
xchg
ds
xchg
flds
mov
mov
sub
loope
xor
inc
pop
pushf
push
popf
jl
mov
inc
mov
pusha
test
repnz
jl
and
inc
ss
bound
cmp
pop
pop
lds
mov
add
adc
add
jmp
cli
or
loop
mov
or
sub
mov
cmp
arpl
fcompl
shrb
iret
jp
imul
sti
and
mov
loope
pop
out
fisubrl
cmpsb
push
mov
out
popa
dec
repz
std
out
movsl
mov
fcom
mov
mov
sbb
sub
imul
adc
xorb
jbe
pop
adc
ret
mov
jns
arpl
push
adc
insl
pop
imul
xor
into
mov
scas
pop
mov
stc
dec
int3
jecxz
or
mov
outsb
mov
dec
or
pop
fsubrl
jnp
inc
sbb
xchg
cmp
loope
pop
std
xor
jb
pop
mov
push
xor
sahf
cltd
mov
add
sbb
xchg
xchg
scas
test
jle
push
fstpt
pop
mov
in
imul
stos
mov
rcrl
mov
dec
jnp
jge
lcall
icebp
shll
pop
adc
adc
xorb
ficoms
fcmove
push
mov
adc
mov
jg
push
imul
jo
dec
call
jp
ret
and
std
pop
pop
push
fwait
addr16
sbb
xchg
repz
and
ds
cld
inc
pop
aad
and
cmp
xchg
sub
push
lret
imul
dec
out
ror
and
out
scas
sahf
mov
outsb
test
sarb
cmc
hlt
sub
insl
sbbl
int
stc
sub
push
sub
fcmovnb
fstl
jbe
iret
add
lret
testb
popf
mov
idiv
add
inc
insb
xor
movsl
nop
rcrl
sahf
xchg
ljmp
push
and
mov
sub
pushf
push
pop
xor
add
cltd
mov
adc
decl
les
sahf
pop
sarl
and
loopne
xchg
inc
aam
cmc
push
shl
aam
imul
adc
xor
in
add
jo
dec
in
imul
xchg
cmpl
add
in
pop
or
insb
xor
inc
or
int3
jmp
mov
popa
pusha
xchg
mov
shrb
add
in
incb
rorb
pop
xchg
lods
mov
sbb
sahf
mov
jmp
or
inc
add
cmp
fs
xor
inc
dec
pushf
add
add
jge
ret
xchg
xchg
fcoms
xchg
mov
nop
out
adc
lahf
mov
mov
outsb
push
mov
rol
jmp
sub
xor
xchg
fchs
out
sub
mov
aam
pop
pop
mov
mov
nop
adc
inc
mov
cmpsl
or
lea
xchg
xor
pop
shrb
mov
das
ret
mov
cltd
cld
imul
push
nop
icebp
gs
sbb
push
imul
arpl
jmp
jl
add
rcrl
and
mov
xor
mov
or
insb
sbb
sbb
push
aam
out
pop
ds
je
dec
into
xor
mov
out
add
xchg
pop
jae
in
and
jg
jge
or
xchg
in
aam
int3
jns
pop
jg
inc
jo
in
push
inc
mov
xor
das
pop
mov
mov
xor
adc
mov
push
hlt
adcb
out
outsb
rcl
mov
sti
or
dec
cmp
cmc
mov
movsl
fildl
aam
aad
aas
pop
daa
mov
jg
rcrb
pop
xchg
jnp
pop
inc
cltd
mov
cli
lods
clc
sbb
movsl
adc
insl
je
mov
mov
mov
mov
and
fidivrl
ret
xchg
call
shrl
mov
iret
mov
dec
mov
adc
ret
shrl
mov
xchg
xchg
and
mov
imul
mov
dec
push
lock
pushf
jns
stc
outsb
sbb
mov
pop
jle
jg
adc
cmpsb
xor
stos
insb
lds
pop
or
cli
loope
out
out
fisubs
pop
xor
inc
ljmp
mov
lods
stos
jno
int
jmp
sbb
test
popf
sarl
mov
ficoms
xchg
and
shrb
out
dec
pop
mov
repz
mov
dec
jge
xchg
ret
dec
in
inc
mov
stos
hlt
movsl
push
add
jns
dec
xor
call
enter
dec
jmp
hlt
dec
sub
mov
mov
fnstsw
sbb
repz
int
push
pop
xor
out
mov
cld
cmpsl
ss
test
xchg
cwtl
push
push
or
negl
push
adc
mov
das
push
cld
add
cmp
and
fldt
jecxz
xchg
dec
data16
sti
jno
jmp
mov
bound
add
sub
dec
lcall
cs
push
xchg
xlat
insb
rcrl
mov
hlt
and
xchg
sub
cmp
sbb
lods
testl
hlt
lret
stos
ss
pop
push
lahf
repz
ret
sbb
in
or
outsl
or
lcall
js
xchg
push
insb
in
sbb
pop
mov
mov
cmp
adc
mov
sub
into
cmp
lret
sbb
aad
jne
or
sti
fnstenv
scas
sti
loope
add
cs
xor
cld
cmp
cmpsb
pushf
cmc
push
mov
cmp
dec
xor
push
xchg
pop
mov
push
outsl
mov
sbb
or
mov
ret
sub
sub
push
dec
inc
neg
sub
add
pop
enter
sbbl
push
add
rcr
test
xchg
mov
jno
iret
pop
sbb
daa
mov
mov
pop
les
shll
jg
enter
add
mov
int
mov
cmpsl
pop
nop
js
idivl
fldcw
push
xchg
mov
stos
pop
cmp
fisttpl
std
leave
mov
hlt
daa
pop
notl
push
popf
pop
cmpsl
pop
arpl
pop
sti
mov
lcall
push
imul
nop
inc
or
fnstenv
cs
push
test
mov
fdivrs
orb
dec
outsb
add
adc
fcoml
mov
sbb
adc
or
and
stos
cli
xor
or
lea
sbb
push
enter
lock
lahf
xor
iret
pop
dec
pop
cwtl
shrl
in
push
dec
add
or
pop
inc
mov
ja
push
out
add
ljmp
inc
leave
xor
iret
push
mov
fcmovnbe
mov
push
mov
fidivl
dec
insb
out
push
in
cmpsl
xchg
jns
fucomp
lea
stos
sub
and
add
leave
shrl
lock
xchg
sbb
cmpsb
mov
cltd
mov
mov
mov
add
fldenv
mov
cmp
xor
cmp
out
rcll
enter
cmp
xchg
test
jecxz
jge
inc
fsts
pop
movsl
into
ljmp
pop
orb
in
mov
ljmp
xor
mov
dec
xchg
shll
xor
stos
jmp
fcompl
pop
movl
sbb
loope
aam
sub
repz
fcoms
ret
jae
fstpt
xor
xlat
shlb
sti
movsl
fldcw
jno
sarb
ja
push
jg
pop
int3
pop
sbb
xor
imul
cmp
xor
cmp
es
mov
imul
xchg
stc
xchg
subl
lods
jb
stos
fsts
add
outsl
and
sbb
int
test
cmp
mov
jle
xchg
loope
pop
cmpsl
jo
adc
mov
mov
aaa
icebp
jg
mov
and
cmc
shrl
in
fwait
push
cld
xor
scas
punpcklbw
jecxz
dec
dec
scas
jno
mov
push
jno
test
popf
dec
inc
loope
adc
mov
imul
fisubrl
pop
jp
inc
addr16
cmp
pop
insb
sbb
mov
mov
orb
fucomp
mov
jmp
xor
aad
addr16
cmpsl
jbe
setbe
lret
ljmp
fs
ret
dec
lcall
sbb
aaa
movsb
mov
negl
jmp
add
sub
and
test
sub
mov
push
cmc
sbb
mov
test
jmp
clc
sti
jge
ss
dec
mov
pop
jno
lret
fstpt
mov
push
aam
stc
dec
mov
push
out
add
pop
pop
cmp
imull
out
xchg
mov
cmp
mov
dec
jg
sub
in
lahf
push
xor
mull
scas
or
mov
mov
inc
mov
pop
push
and
movsl
jmp
jb
outsl
pop
fld
fldt
jl
jo
iret
pushf
xchg
shll
loopne
cmp
push
sub
mov
out
sub
push
test
cmc
pop
arpl
bound
mov
fwait
mov
lahf
cld
sar
sahf
ss
rorb
std
fldcw
les
popf
jl
in
mov
out
pop
mov
and
cmc
das
mov
adc
mov
cmc
imull
push
ficoml
sbb
out
sbb
mov
sub
sbb
stos
fsub
or
out
pop
ss
mov
test
push
inc
jbe
adc
stc
sbb
mov
add
sbb
or
inc
lea
jbe
enter
lds
out
xor
xchg
mov
aad
or
pop
cmp
pop
cs
repz
out
cmc
push
mov
jle
and
idivl
sbb
cmpsb
pop
imul
test
mov
and
add
addl
imull
mov
dec
pop
dec
test
cmpsl
jmp
cmpsb
clc
es
sbb
jl
and
std
testl
dec
push
test
sbb
sbb
mov
xor
sar
stc
movsb
cmp
das
sub
rcrb
std
mov
cli
lods
or
test
mov
movsb
outsb
dec
add
cmpsl
fs
mov
loope
pop
pop
test
dec
fldz
pop
jl
popa
stos
lods
sub
xchg
add
mov
and
xbeginw
sbb
pushf
testl
pop
outsl
cld
pop
fidivrs
iret
sahf
dec
fwait
mov
add
add
jmp
adc
add
xor
sbb
stc
mov
add
inc
or
pop
add
xor
xor
imull
add
sbb
cmc
pop
dec
clc
mov
in
xor
mov
iret
xchg
pop
jp
es
out
jno
mov
out
or
fldl
out
push
mov
mov
mov
fwait
loopne
stc
mov
clc
lcallw
outsl
push
xor
push
shrb
cwtl
jnp
pop
jl
mov
icebp
call
or
fs
xor
cmpsb
repnz
xchg
pop
fldl
into
outsb
xchg
fisttpl
cmc
fprem
jb
pop
in
fists
lea
xor
mov
fsubrp
cli
or
int3
sbbb
pop
push
out
shld
inc
aas
jl
daa
jl
imul
push
lods
and
pop
jg
and
in
dec
mov
lea
out
push
inc
cmp
pop
mov
shr
dec
cs
jp
aas
xor
sub
ja
ljmp
sub
rorb
pop
insb
ds
test
scas
out
aad
loop
push
xor
addr16
dec
outsb
jae
push
rcll
scas
movsb
mov
stos
addr16
pop
xchg
adc
negl
stos
mov
add
xchg
fldt
mov
ds
pop
lods
mov
add
mov
cs
mov
daa
dec
iret
or
dec
rcrl
adc
jno
mov
pop
mov
scas
or
in
bound
mov
cmpsl
stc
mov
mov
mov
pop
ljmp
mov
lret
fsubr
inc
cmpsl
push
adc
or
scas
or
movsl
or
rcll
lea
fdivrs
dec
dec
repz
orb
iret
mov
mov
in
jbe
mov
iret
iret
dec
pop
lock
mov
aas
sbb
xchg
adc
mov
lret
jno
mov
decl
leave
movsl
fdivs
mov
scas
dec
jecxz
dec
jns
ljmp
xchg
lock
nop
imul
cld
mov
mov
lods
js
push
fcmovbe
scas
ss
testl
pop
mov
rclb
jb,pn
fdivrp
xor
mov
ret
xlat
inc
xchg
xchg
fdivrs
push
or
inc
inc
mov
fisubl
jbe
nop
iret
addps
clc
and
adc
movsl
dec
out
sbb
mull
add
pop
mov
jne
pop
mov
pop
adc
decl
jb
pop
pop
cld
testl
xor
or
cmp
sub
stos
mov
lcall
and
ret
ret
out
jg
aaa
lds
and
sub
xchg
arpl
fdivs
lea
hlt
ljmp
cmp
inc
or
adc
mov
mov
cs
pop
sub
fcomps
and
sar
pop
mov
les
mov
and
inc
mov
out
pusha
xchg
in
iret
sub
lret
cltd
mov
out
push
loope
out
fst
inc
fsubl
rcrl
cli
divl
xchg
std
into
mov
lret
imul
and
jmp
lds
xchg
dec
fwait
push
adc
gs
sub
cmp
leave
jl
pop
cmp
pop
test
xchg
xchg
pop
repnz
mov
xor
jne
inc
aas
testl
jo
mov
jno
mov
sbb
mov
inc
cmpsb
push
fs
pop
add
cli
mov
xchg
fimull
mov
fnstsw
pop
out
jp
scas
dec
out
push
sub
sbb
pop
sub
xchg
cmc
jns
jg
mov
push
add
or
les
inc
pop
cmp
sbb
jmp
fcmovnu
daa
sti
mov
push
js
inc
xor
and
aam
mov
loop
jg
adc
stos
sbb
dec
sub
cmpsl
push
movsb
push
jp
xchg
mov
scas
divl
mov
and
mov
rolb
adc
loope
cmpsb
sbb
fldl
mov
rolb
test
ret
mov
pop
scas
das
mov
hlt
inc
sarb
adc
xchg
lock
sahf
stos
dec
test
mov
fnstenv
push
leave
out
cmp
mov
out
push
cmp
push
rcrl
fsubr
xchg
cmp
mov
mov
int3
js
inc
mov
lea
imul
int3
fisubrl
loope
jg
xchg
aas
pop
mov
sbbl
insb
mov
arpl
loop
leave
push
imul
inc
mov
enter
insb
jmp
cwtl
and
pop
lahf
and
mov
outsl
inc
pop
mov
push
sbb
cmpsb
and
push
bound
mov
scas
aaa
mov
je
pop
scas
inc
data16
pop
nop
jle
mov
sbb
sahf
lahf
push
pop
push
stc
push
jne
aas
push
stc
mov
ds
test
adc
or
popf
push
sti
or
jns
popa
mov
sahf
int
dec
inc
and
shll
out
ror
inc
aas
and
mov
lock
stos
cmp
arpl
mull
cmpsb
and
fucom
and
sti
pop
and
mov
rcll
inc
lods
dec
inc
and
scas
mov
fmuls
repz
out
jle
add
xor
cmpsb
dec
sar
sub
push
adc
cmpsl
fcomi
inc
int3
pop
pop
out
sbb
rcrl
add
out
pop
lea
dec
inc
mov
ss
lea
aas
clc
stos
mov
out
divl
int
sbb
pop
stos
popf
mov
outsb
insl
or
subb
sti
hlt
ss
cwtl
push
fsubrl
pusha
add
mov
adc
push
addr16
ja
mov
pop
cmp
outsl
pop
xor
mov
icebp
fbstp
mulb
ret
jns
sub
outsl
and
mov
cmpsl
outsl
and
stc
adcw
in
push
mov
inc
cmp
sub
jg
mov
dec
ficompl
lods
shlb
jno
inc
out
fnsave
repnz
add
cmpsl
jmp
add
sbb
cld
sbb
add
test
pop
pop
ret
scas
loopne
mov
sub
out
out
rcrb
cmp
mov
lds
scas
out
pop
stos
sub
fdivl
cmpl
mov
pop
mov
stc
testl
adc
sub
jnp
sub
add
mov
inc
xor
loop
lock
or
xchg
mov
test
iret
shll
jne
xor
mov
pop
or
faddp
pop
insb
mov
dec
xlat
aas
mov
test
mov
cmpsl
lods
xchg
adc
int
in
xchg
push
mov
adc
mov
mov
dec
push
enter
mov
push
ret
aas
or
out
sub
mov
mov
fisubl
sti
sbb
int3
cmpsl
or
jge
lods
pop
and
ret
mov
subl
loop
push
std
in
aaa
xor
dec
test
inc
ret
loop
mov
mov
out
fwait
div
mov
ficomps
xchg
mov
jne
imul
push
pop
arpl
divb
adc
fiaddl
lret
mov
outsl
fwait
into
fadds
lcall
push
rorl
out
and
pop
pop
mov
cltd
subb
inc
and
test
mov
mov
inc
rcll
fwait
add
imul
movsl
icebp
mov
repz
rcrb
rcrl
push
mov
lds
lods
dec
std
pop
and
inc
mov
jle
daa
out
fcomip
jne
fsubl
xor
adc
mov
push
mov
adc
fbstp
arpl
sti
sub
lcall
add
cmp
aam
fdivrs
fsubs
push
sub
jmp
mov
mov
je
dec
xor
dec
xchg
xor
cltd
or
mov
xchg
cmp
pop
adc
pop
out
cmp
inc
xor
fsubrs
jbe
pop
inc
enter
dec
mov
aas
js
int
pop
iret
sub
cmc
push
iret
outsb
mov
pop
xor
imul
insl
lods
xchg
mov
mov
roll
pop
dec
and
in
int
sub
mov
inc
cmp
in
mov
mov
dec
fists
fwait
shll
lahf
pop
dec
and
pop
sbb
lods
fidivrs
cld
lds
jge
test
cmpsb
or
or
inc
xchg
stc
pop
mull
inc
cmp
jl
sub
test
adc
sbb
pop
jg
aaa
mov
xor
jns
outsb
push
pop
into
scas
sub
cmp
lahf
xchg
push
pop
insb
mov
fbld
dec
ret
stos
jmp
sub
inc
lods
push
push
jle
dec
pop
mov
test
xchg
popl
rclb
pop
into
jge
ret
mov
sbb
cmpsl
mov
push
ja
cmpb
xchg
inc
xchg
cmp
mov
push
sub
mov
sbb
mov
xor
inc
jno
testl
outsb
xchg
mov
pop
call
pop
lods
adc
jb
xchg
jle
pop
xchg
add
add
jg
lahf
pop
imul
ficoms
pop
outsl
dec
xchg
add
test
sbb
scas
push
cmpsb
and
jno
andb
prefetcht2
jmp
mov
dec
xchg
outsl
pop
jb
cwtl
push
inc
cld
pop
test
mov
fwait
mov
jg
loopne
xor
mov
inc
add
add
sbb
add
inc
dec
xor
pop
fldt
pop
popf
aas
fxch
add
cmpsl
lock
sbb
sbb
cs
pop
pop
or
add
or
ss
lcall
fstp
add
xchg
mov
xchg
movsl
ds
loop
call
jmp
test
test
test
push
pop
sbb
std
cmp
jae
xchg
sub
pop
mov
jns
jp
divl
shll
aam
mov
sarb
xor
jnp
sbb
stos
popf
sub
sub
das
dec
icebp
sub
enter
rclb
cmc
repnz
cmpsb
pop
popa
mov
out
aam
xor
scas
and
cmc
ja
lock
mov
outsb
out
out
in
popa
mov
stos
add
xchg
test
hlt
out
outsb
out
hlt
imul
arpl
je
xchg
sub
fstp
out
xchg
jno
divl
rcrl
popf
mov
repz
push
movsb
scas
sbb
in
adc
jmp
cmpsl
ljmp
inc
cltd
cmp
repz
sub
sbb
addl
mov
pop
ffree
fsubl
push
push
or
cmc
loop
inc
bound
pop
xchg
repnz
jge
pop
mov
lcall
mov
jne
pop
pop
mov
nop
ror
popf
mov
arpl
and
xchg
xor
pushf
sbb
jecxz
mov
aas
mov
mov
pop
mov
int
cld
sub
sub
push
jne
dec
fwait
or
out
add
push
jb
xchg
cmp
sub
dec
in
stos
lcall
sbb
outsb
mov
push
push
sti
rorb
or
les
mov
push
mov
pop
sub
jl
cmp
xchg
decl
sub
out
les
pusha
xchg
sbbl
out
shll
mov
popa
inc
inc
and
mov
mov
lret
xor
das
cld
cmp
and
xor
fdivrs
fisttpll
dec
mov
loop
pop
cli
cmpsb
test
inc
cwtl
fdivrl
cmp
adc
aas
push
fwait
push
sbb
fs
fst
sbb
pop
xchg
outsl
out
jne
and
ja
cmp
mov
mov
mov
mov
xchg
fdivrp
pop
lods
push
sub
pop
pop
mov
inc
cmp
pshufw
jle
inc
das
mov
sbb
int
cmp
mov
pop
fistl
adc
aas
dec
stos
das
pop
cmpsl
push
ds
insb
cmp
add
push
mov
push
jmp
mov
sbb
jle
adc
mov
test
xchg
in
pop
xchg
pop
dec
stos
rolb
or
std
pop
stos
into
jge
fxch
dec
das
pop
or
xor
inc
stos
int3
pop
loope
stos
push
fdivr
sahf
leave
cmc
jne
jo
mov
sub
mov
mov
mov
loopne
idivl
scas
fucomp
add
imul
cmpsl
in
add
int3
adc
cmp
push
imul
mov
dec
push
imul
addl
subb
mov
lret
sub
incl
loopne
fld
mov
fsubrl
cmp
adc
stos
push
push
fcompl
pop
inc
ss
imul
xchg
sbb
sbb
pop
cmp
hlt
inc
std
in
xchg
lea
jp
clts
pop
daa
mov
cwtl
cmc
pop
xchg
cld
fimuls
xchg
adc
jns
inc
sbb
mov
or
add
lret
cmc
lods
adc
push
stos
adc
mov
iret
rol
jnp
mov
mov
adc
push
and
ret
inc
add
imul
fldl
and
subb
or
outsb
std
fs
pop
roll
pop
das
add
mov
lcall
and
pop
add
into
and
xchg
sub
jnp
out
scas
or
sub
mov
adc
rcrl
sub
xchg
sbb
or
add
xchg
inc
mov
pop
add
mov
imul
pushf
cmp
mov
test
aad
pop
vpcomb
sti
daa
jecxz
test
stc
shrb
pop
xchg
adc
pusha
pop
mov
xchg
mov
mov
xor
in
sub
pop
je
mov
fwait
cmp
insl
mov
popa
cwtl
sbb
lock
sub
sub
out
inc
jno
and
add
hlt
pop
adcl
test
dec
or
xchg
fldcw
push
rcl
std
cmp
int3
fisttps
repnz
pop
mov
std
outsb
jp
or
pushf
jp
adcl
mull
mov
dec
shrb
cmp
in
ds
inc
lds
inc
stos
test
inc
dec
repz
mov
insb
sbb
fldenv
mov
ja
stos
and
insl
mov
mov
jle
negl
shll
add
mov
xchg
ds
mov
fisttpll
into
mov
mov
jb
lahf
push
mov
in
add
xchg
mov
add
xlat
jne
fwait
sub
call
jp
dec
icebp
inc
push
sbb
stc
dec
inc
adc
or
stos
dec
in
xor
pop
jb
mov
loope
les
out
pop
xchg
pop
mov
mov
pop
push
lock
pop
xchg
scas
and
mov
pop
ljmp
rcr
cmc
jae
lret
sub
iret
xorl
data16
xor
pop
sbb
scas
out
push
xor
inc
mov
scas
jb
ds
data16
push
arpl
jle
xchg
out
jg
rclb
out
sahf
pop
mov
pop
and
dec
int
adc
add
lcall
scas
pop
int
and
aam
mov
nop
fimull
lahf
jp
mov
icebp
inc
add
xor
or
adc
mov
cli
aad
sbb
pop
lds
mov
inc
lods
cmp
cltd
cmpb
rclb
sub
mov
jl
pop
rorl
arpl
mov
hlt
pop
inc
pop
mov
add
xor
movsl
xor
cmp
inc
ja
iret
add
mov
add
mov
popf
or
cmc
std
or
mov
in
jmp
sbb
jnp
scas
popa
icebp
iret
xchg
dec
pop
pop
data16
sub
dec
pop
lds
or
cld
and
xchg
in
mov
shlb
push
sub
js
gs
xlat
cmpsb
sbb
sahf
mov
pop
cwtl
dec
arpl
call
sti
and
add
cmp
scas
rcrl
test
jne
imul
dec
push
rsm
xchg
movsl
push
aas
dec
movsb
or
out
xchg
mov
xor
pusha
std
and
mov
pop
mov
push
jnp
jmp
pop
xor
cmp
gs
mov
arpl
mov
mov
mov
or
popa
pop
add
aaa
arpl
push
icebp
insb
sbb
push
les
inc
pop
repz
orl
movsl
or
adc
push
and
fldcw
addr16
sbb
pop
xchg
popf
dec
addb
ss
xor
sbb
xor
stos
inc
jnp
clc
testb
sub
mov
jns
inc
xchg
pop
insl
inc
andb
rcrb
mov
and
add
or
test
or
pop
lcall
mov
fwait
popf
push
aas
rcrb
test
fistpl
adcl
mov
adc
adc
rorl
out
pop
push
imul
or
in
and
ja
jo
add
shr
mov
inc
mov
add
aas
popf
pop
push
daa
outsl
xchg
cld
mov
dec
scas
xchg
pop
dec
stc
push
js
cwtl
and
cmp
imul
pushf
mov
fnsave
dec
shrb
cmpsb
mov
lods
adc
std
in
pop
jne
pop
insl
and
or
pop
imul
fisubrs
xchg
fwait
push
iret
call
lods
cmp
adc
int3
addr16
aad
jg
pop
sbb
lea
push
pusha
jbe
mov
icebp
mov
imul
adc
int3
outsl
out
shr
mov
dec
cmc
fsts
stos
cmp
mov
mov
imul
jbe
cmpsb
push
imul
xor
cmp
pop
pop
or
sub
sbb
scas
cs
enter
xchg
cmp
mov
add
and
sbb
push
aam
sbb
xor
jg
in
xchg
adc
mov
pop
adc
xchg
xorb
add
or
test
mov
add
pop
out
cmc
popa
dec
sub
mov
sbb
test
out
dec
sti
sub
lret
movb
or
fstl
jbe
sub
int3
cli
sbb
les
movsb
sub
cmpsl
loopne
lea
into
pop
add
xor
push
pop
fsubl
xchg
sub
leave
test
cmp
ret
out
imul
les
cld
pop
and
imul
pop
das
inc
pop
into
std
jmp
jno
xchg
ficoml
jp
push
or
mov
fldl
adc
xchg
int3
ret
stos
adcl
test
push
dec
out
cmp
popa
rcrb
es
stos
xchg
lahf
stos
mov
add
leave
in
sbb
lock
mov
push
jae
lahf
pop
jbe
daa
xor
mov
lock
imul
dec
enter
lds
movsl
jno
hlt
cmp
lods
push
frstor
mov
mull
mov
mov
out
fwait
mov
cmp
rolb
mov
jg
or
xor
pushf
lea
fists
clc
jns
test
jo
dec
cli
cmp
inc
mov
fldcw
push
and
pop
ds
mov
stos
fwait
xchg
adc
pop
hlt
sub
rcl
inc
xchg
cmc
inc
loopne,pt
jb
dec
sbb
sub
pop
sbb
test
loop
out
repz
ss
jg
jo
cld
push
lret
jge
aaa
cmp
fisttps
stos
mov
cmp
pop
mov
test
adc
clc
sub
and
dec
mov
inc
lods
test
call
add
shr
or
sub
add
xor
lahf
xor
mov
mov
loopne
sbb
and
sbb
das
push
sub
cmp
push
push
add
fstpl
cmp
mov
adc
ds
push
in
pop
cs
imul
pop
mov
lret
stos
in
mov
adc
jae
gs
xchg
push
shrb
jbe
jne
setg
lret
dec
push
aas
jge
out
cs
xorb
xchg
insl
aad
fisubs
hlt
test
in
in
mov
mov
cli
insb
jp
pop
cmp
jle
push
push
push
ret
xchg
or
add
jg
clc
pop
je
mov
xor
sarl
push
aad
filds
mov
loop
outsl
pop
psubq
inc
inc
ja
jp
in
adcb
sub
in
enter
mov
adc
out
cmpsb
add
cmp
cmp
xor
std
jo
repz
testl
aad
out
mov
add
mov
inc
sub
pop
mov
pop
dec
insl
pusha
pop
sahf
mov
pop
in
cmp
data16
clc
add
aam
sub
jnp
xor
sub
mov
imul
xchg
jg
push
and
mov
jge
cmp
adc
out
mov
jle
push
xor
imul
push
add
mov
int
push
xchg
loope
sbb
lea
outsl
lea
push
pop
jb
inc
jbe
push
and
inc
lea
movsb
out
divw
lret
xchg
add
jmp
mov
loope
popa
mov
jnp
cmp
roll
es
arpl
pop
addr16
jecxz
mov
andl
inc
sbb
test
pop
mov
mov
mov
ljmp
dec
pop
cmp
cmpl
cwtl
lods
divl
push
mov
daa
jne
pop
jae
leave
aad
mov
push
mov
pop
jo
sbb
out
dec
or
scas
lahf
and
mov
sahf
cltd
dec
pop
loope
jns
push
fmulp
mov
test
push
xor
shr
adc
dec
fisubs
mov
and
outsl
sbb
fbstp
negl
xchg
scas
cli
cmp
aad
and
push
aas
jecxz
out
loope
dec
mov
les
jbe
or
push
pop
into
mov
idivl
and
add
xchg
pop
ret
je
pop
cmp
in
iret
lea
cmp
mov
xchg
sub
into
pop
sti
call
int3
pop
xor
add
xchg
pop
sbb
cmpsl
and
scas
or
lods
lret
insb
adc
jne
addl
ja
mov
shrl
cmpb
sti
sub
mov
or
mov
cld
xor
xchg
es
mov
pop
imul
mov
sti
mov
mov
pop
sbb
mov
or
mov
sbb
sub
cmovae
push
xor
scas
dec
rcr
push
out
lods
add
mov
and
stc
pop
je
popa
es
and
or
add
inc
popf
movsb
loope
int3
mov
jp
imul
ljmp
and
mov
sbb
fwait
imul
xchg
pop
out
pop
pop
xor
lods
pop
mov
push
shl
adc
sub
jnp
scas
popf
push
in
cmp
or
mov
mov
pop
adc
fisubrs
movsb
mov
andb
lret
xchg
fisubrs
idiv
mov
jg
lahf
jo
int
pop
aaa
or
popa
into
mov
adc
push
cmpsb
jb
pop
jbe
movsl
jno
cmpsb
nop
fists
andl
xchg
inc
jb
adc
xchg
add
jge
pop
or
hlt
pop
sub
imul
pop
addr16
sbb
or
call
push
pop
mov
int
mov
cmp
stos
enter
test
imul
xchg
lock
mov
mov
mov
out
inc
mov
push
repz
in
or
adc
inc
cmp
movsl
mov
dec
mov
leave
out
dec
loope
cmp
pop
jecxz
xorb
sti
fucom
inc
lea
mov
sub
or
lcall
clc
pop
enter
lods
and
test
sub
jns
popf
fildll
dec
push
xchg
loop
addr16
xor
jge
xor
push
inc
mov
add
imul
cmp
xlat
cmp
xor
mov
imul
mov
xchg
mov
and
hlt
fimull
out
xchg
test
xchg
push
insb
xor
outsl
and
jp
popa
rcll
into
fdivrs
lahf
add
cs
inc
ret
mov
repnz
cld
fcomps
add
push
jmp
out
cmp
pop
xchg
inc
lcall
sbb
mov
adcb
mov
in
jle
dec
ljmp
jmp
lea
add
fucomi
and
jae
aas
jle
lds
push
inc
fdivrl
idivl
xor
and
pop
sub
pop
lock
das
push
cli
dec
pop
int
pusha
pop
imul
hlt
fcompl
mov
xor
pop
movsl
flds
push
leave
inc
ljmp
jae
fsubs
jle
sbb
adc
scas
pop
add
cmp
loope
push
mov
inc
jnp
and
push
xor
fcmovne
xchg
jg
cmp
mov
cmp
insl
dec
fistpl
out
mov
push
sub
mov
stos
cmp
xchg
out
and
add
aam
push
inc
push
xor
or
xchg
pop
ret
push
scas
fs
push
cmpsb
cmp
push
cmc
pop
vmread
cld
cld
mov
iret
mov
xchg
or
dec
sub
fs
pop
in
push
pop
cltd
out
push
imul
jo
shrl
dec
mov
movsl
ret
nop
pop
sub
ss
sub
std
lret
cli
ficoms
xchg
push
daa
gs
rorl
fdivl
cmp
ss
cs
and
push
aas
notl
add
scas
cmc
in
sbb
outsb
jbe
inc
jmp
jle
nop
pop
leave
dec
pop
pushf
mov
xchg
dec
xchg
jmp
ljmp
or
mov
mov
mov
lahf
fimull
in
inc
jmp
sbb
mov
and
test
test
dec
mov
add
icebp
test
call
gs
stos
add
mov
xor
out
or
fldcw
sub
cmp
inc
cmp
and
nop
jns
int3
cltd
fcmove
pop
shlb
inc
pop
in
pop
insl
in
adc
mov
sbb
jle
daa
icebp
add
fildl
inc
lcall
in
stos
js
popa
mov
ljmp
std
add
negl
cmp
xor
repnz
ja
cli
fistl
js
nop
mov
push
mov
outsl
dec
mov
out
jmp
dec
vaddpd
std
arpl
mov
call
mov
xor
gs
mov
imul
pop
jb
xlat
sti
adc
out
ljmp
cwtl
pop
xchg
inc
testl
scas
and
sbb
imul
movsl
fwait
xor
cmpsl
push
mov
sbb
fistpl
mov
sub
leave
or
pop
sbb
dec
inc
clc
cmp
imul
and
arpl
xchg
add
mov
fldl
adc
jp
add
adc
jg
pop
out
popf
arpl
hlt
mov
sbb
cmc
in
inc
add
movsl
popa
jns
push
leave
xor
fdivrs
mov
push
xchg
jle
mov
dec
fisttps
dec
fdivp
pop
push
lret
xchg
shl
adcl
sti
lea
arpl
mov
testl
mov
and
push
shll
lds
stc
movsb
test
cs
jmp
mov
push
cmpsb
inc
aad
fisubrs
mov
push
sub
mov
sbb
fs
adc
imul
mov
lea
in
cmc
mov
jno
pop
cs
mov
sub
out
jae
xchg
pop
mov
into
sub
xchg
iret
je
mov
pop
std
or
rcrl
mov
mov
lock
xchg
mov
push
lret
dec
fildl
mov
dec
rcr
outsl
into
fsts
or
test
add
push
lahf
jbe
aad
fwait
pop
scas
bound
fimuls
ret
dec
enter
popa
sub
fcomps
cwtl
pushf
dec
cmp
or
insl
std
ret
arpl
fiadds
sbb
imul
lea
fisttpll
lahf
stos
sub
push
dec
out
jmp
cmpsl
dec
je
dec
mov
or
sbb
popa
xchg
mov
fldl
cmp
loope
notb
xchg
leave
sbbb
and
addr16
pusha
fcmovnbe
into
sbb
cmpsb
daa
cli
clc
aaa
js
lahf
into
testb
cmp
stc
jg
outsb
mov
movsb
enter
pop
xor
pop
scas
jmp
xchg
aas
shll
adc
jnp
out
push
lock
std
popf
sahf
imul
insb
orl
sub
rcr
adc
pop
inc
sub
arpl
push
or
mov
test
shrb
lahf
into
lock
jo
lods
mov
movsb
xchg
int3
sahf
pop
addr16
fstp
mov
cmp
aas
sbb
in
lahf
adc
sarb
pushf
pop
adc
sbb
fprem
mov
stos
fdivrl
leave
cli
sub
push
aas
adc
sbb
dec
int
fcomi
mov
jecxz
push
pop
push
mov
inc
pop
stos
push
jnp
test
cmp
pop
rcll
cmpb
cmpsb
out
out
inc
scas
adc
loope
movsl
pop
aad
dec
out
jne
xor
ds
lret
xchg
outsb
and
mov
rcrl
inc
das
leave
sub
sbb
out
xlat
pop
pop
cmp
movsl
inc
dec
popf
or
enter
jno
arpl
mov
cwtl
lods
in
imul
jmp
das
lods
repz
cmp
and
mov
js
mov
loop
add
les
mov
xchg
jl
orb
inc
das
mov
ss
dec
loope
sahf
cmp
mov
insb
lods
pop
dec
into
add
add
adc
inc
pop
sbb
xchg
xchg
pop
call
repz
pushf
inc
fistpl
add
xchg
insl
sbbl
xorb
test
push
arpl
int
test
pop
outsb
xchg
mov
iret
and
sub
or
jecxz
fldenv
pop
idivl
jl
lea
mull
push
data16
pop
jg
cmp
stos
pop
pusha
cmpsb
aaa
fmul
push
cmp
cmpsl
cli
mov
jo
pop
cmp
xchg
testb
pop
dec
call
xchg
out
xor
xor
clc
sti
mov
jae
enter
iret
imul
adc
call
mov
pop
add
popf
dec
aam
shll
scas
popa
inc
in
xchg
movsl
arpl
cs
out
cmc
lret
add
cmovne
xchg
xchg
sub
insb
pop
push
push
outsl
push
mov
pop
imul
in
jp
lods
pop
dec
jne
out
dec
dec
dec
jae
mov
pop
mov
out
jecxz
push
and
pop
lret
out
adc
sbb
xchg
leave
and
outsl
push
adc
mov
insb
sarb
cltd
xchg
add
lcall
and
shll
mov
sbb
mov
push
mov
fwait
or
jp
jmp
leave
scas
or
loopne
cmp
adcl
enter
int
pop
pop
mov
inc
adc
jae
mov
mov
push
jl
sub
test
mov
stc
test
hlt
pop
jns
repz
mov
fdivp
das
in
add
shll
pop
and
movsl
mov
insb
cmc
pop
xchg
push
jno
pop
rorb
push
das
test
pop
or
mov
ds
divb
pop
ret
in
xchg
int
dec
mov
std
clc
adcl
fistpl
cltd
out
jg
adc
jne
xor
mov
sbb
push
int3
bound
add
cmp
into
lahf
aad
push
in
cli
mov
sbb
dec
repz
mov
xor
mov
jg
es
aas
sub
stos
xor
leave
rcrl
lret
adc
push
rcl
icebp
es
jle
mov
mov
addl
jnp
adc
adc
fdivrp
imul
jmp
inc
fdivl
cmpsb
mov
jo
pop
cmp
gs
arpl
or
jb
rorb
add
pop
mov
mov
ss
sti
leave
iret
mov
sbb
aas
xor
imul
test
jmp
adc
mov
test
jbe
fistl
negl
mov
loopne
push
aaa
ret
jmp
scas
xchg
mov
gs
and
sbb
mov
sub
lods
mov
divl
mov
fs
mov
mov
clc
inc
iret
inc
out
jmp
sbb
mov
sti
add
dec
loope
sbb
test
js
ja
icebp
in
mov
cmp
rcrl
jle
lret
push
ss
stos
cmp
mov
gs
sub
jb
push
in
xchg
testl
mov
je
cmp
mov
repnz
cmp
jge
dec
out
mov
js
hlt
fstps
aas
popf
sub
stc
fisttps
out
pop
cmp
imul
mov
push
inc
int3
leave
psllq
adc
dec
loop
and
sub
add
ret
mov
adc
sti
xorl
push
cli
jb
imul
mov
add
inc
outsl
jp
mov
int
scas
test
jecxz
stos
or
ja
pop
xchg
imul
lods
test
lea
test
sub
sbb
pop
ja
mov
add
mov
xchg
pop
xlat
cmp
inc
mov
rcrl
stos
pop
inc
mov
fildl
mov
inc
dec
addr16
inc
inc
aad
mov
sbb
test
aas
out
add
insb
insb
nop
pop
cmp
pusha
out
daa
test
fwait
adc
or
mov
es
fwait
pop
dec
ret
rolb
mov
and
jnp
nop
f2xm1
inc
jmp
jne
and
popa
dec
ds
sub
sub
sub
stos
pop
out
ficoms
shrb
adc
adc
fiaddl
stc
sbb
and
movsb
rcr
fld
mov
pop
fildl
inc
fwait
xor
jg
icebp
sbb
imul
scas
lcall
pushf
sub
adc
push
stc
pop
inc
jns
inc
mov
out
mov
mov
mov
inc
jnp
loope
fidivrs
fimuls
jbe
sub
adc
push
jle
js
jne
pop
imul
and
out
out
pop
loop
cwtl
xlat
fnsave
imull
mov
and
mov
mov
imull
lret
xor
mov
mov
rcr
notb
outsb
cltd
andb
cmp
push
shrb
inc
or
sahf
jae
mov
mov
mov
jge
push
pop
icebp
and
cmp
cmc
mov
inc
aad
sub
sub
sbb
hlt
push
sbb
gs
fcompl
incl
popf
ret
fldl
leave
push
jae
adc
pop
pop
arpl
xchg
es
push
pop
out
jmp
adc
subb
mov
xchg
movsl
xchg
test
push
inc
ret
mov
enter
mov
mov
imul
pop
add
jmp
jmp
insl
pop
dec
or
orb
xchg
add
pop
rcrl
adcb
pop
mov
sti
push
fcompl
pop
fstps
into
add
ret
dec
jle
and
out
loope
mov
in
sub
dec
push
ficompl
leave
jmp
adc
mov
cmp
scas
insl
inc
imul
ret
mov
pop
mov
push
sub
movsb
jbe
jo
fisttpl
jne
mov
rcll
cmp
fs
repnz
mov
push
adc
movsl
shll
add
enter
pop
dec
cs
jmp
fdivrs
rcr
adc
add
or
jle
xor
mov
fmuls
cli
adc
dec
push
jne
cmp
mov
sbb
inc
out
lahf
insl
jl
add
and
loope
adc
fsubr
pop
daa
and
in
and
and
inc
adc
mov
push
pop
js
scas
lods
adc
fdivl
or
pop
add
sti
pop
sub
mov
sub
mov
arpl
push
ds
adc
lcall
jb
xchg
aam
outsb
sti
cli
ffree
or
pop
mov
inc
add
or
fistps
lock
cli
push
mov
or
dec
and
ljmp
inc
inc
mov
add
xor
cmp
pop
cli
xchg
repz
sbb
jns
pop
sub
mov
and
jp
out
imul
or
adc
out
mov
mov
js
adc
push
and
popa
sbb
sbb
adc
shl
jne
scas
pop
shrb
push
cmpsb
insb
and
add
push
fisubrl
sbb
out
mov
iret
insl
push
loopne
pop
cli
cwtl
gs
mov
filds
mov
rcrl
testb
jns
mov
fincstp
mov
out
std
pop
mov
push
ja
pop
cmp
jle
adc
mov
fcmovnb
mov
pop
push
call
cmpsl
jmp
cli
sub
dec
vmaxss
neg
mov
dec
pusha
add
mov
push
sub
fwait
adc
sbb
dec
xchg
mov
push
jne
fwait
dec
xor
pop
pop
stc
lock
push
daa
ss
mov
hlt
lods
mov
dec
push
repz
push
inc
loopne
shlb
jno
dec
rolb
add
loop
enter
dec
xor
std
js
mov
pop
in
cmpsb
mov
push
pop
mov
repnz
das
leave
int
cmp
and
push
jg
push
test
xchg
jne
jo
fs
cmp
pop
std
iret
pop
lea
push
add
sub
cmpsl
int
push
aaa
dec
mov
jmp
adc
out
ljmp
arpl
or
xor
or
mov
fcomps
adc
push
add
test
subb
inc
out
lahf
pop
adc
jmp
or
addl
and
sbb
in
dec
std
adc
pop
cmp
jns,pt
jmp
call
jge
sub
daa
jg
jge
push
xchg
xor
arpl
lock
cmpsb
and
pop
push
pop
mull
movsb
mov
call
test
add
dec
pop
in
jb
insb
or
pop
popa
mov
inc
push
add
addr16
or
adc
lds
mov
pop
popa
sti
movsb
ljmp
dec
sbb
pushf
leave
dec
cmp
or
mov
fcmovne
fwait
mull
pop
sub
sbb
jns
es
cs
xchg
sahf
ja
pop
add
movsl
pop
hlt
pop
pop
test
inc
xor
sbb
out
int
push
fchs
adc
lret
mov
push
shrb
and
fstp
sahf
jle
clc
sbb
aas
xor
mov
aas
jno
scas
pop
lea
pop
bound
outsb
mov
pushl
mov
mov
pop
dec
or
ret
add
pop
mov
addr16
jle
hlt
pop
insb
inc
mov
push
xor
pop
inc
mov
in
sbb
jecxz
mov
cmpsb
shll
dec
inc
mov
fcomps
pop
pop
dec
push
sbb
mov
sbb
fbstp
stos
lock
sbb
loopne
enter
hlt
mov
loop
add
jmp
lret
fwait
popf
xchg
and
out
add
push
arpl
loopne
rorb
adc
test
pop
rolb
xchg
push
xchg
lahf
inc
mov
flds
jg
push
in
cmpsb
pushf
sub
mov
insb
lahf
mov
adc
xchg
imul
mov
test
jmp
je
add
fstpt
sbb
pop
stc
imul
aas
and
or
repz
mov
ds
dec
jp
mov
punpckldq
cld
sahf
sbb
pop
std
clc
xchg
out
push
int
je
lretw
pushf
mov
aaa
and
pop
stc
inc
aas
push
lea
adc
jo
call
negb
rclb
mov
jmp
inc
push
mov
loope
mov
jae
imul
stc
gs
mov
cmp
mov
fdivrl
dec
imul
fwait
or
mov
mov
mov
movsb
xor
mov
dec
and
ja
or
imul
sub
movsl
incl
movsl
xor
xchg
dec
mov
cli
into
xlat
jbe
movb
fs
mov
insl
dec
in
add
int
scas
pop
jp
xchg
insb
call
arpl
out
into
nop
sbb
test
ret
xchg
iret
mov
mov
xor
or
in
test
mov
cmp
and
pop
jno
cmp
in
mov
cmp
pusha
inc
test
mov
out
lret
dec
ror
or
push
mov
pop
in
fldt
shlb
fcoms
cs
in
or
mov
push
cld
or
mov
xchg
icebp
mov
sub
iret
mov
xor
sbbl
pop
repz
daa
inc
mov
in
or
insl
jno
inc
adc
sub
xchg
jo
xor
flds
ret
rorl
ljmp
inc
dec
iret
stos
mov
sub
test
insb
fsubrl
push
xor
int
or
adc
pop
mov
stos
mov
fxch
mov
jecxz
sub
cmp
sbb
adc
mov
and
fnstenv
mov
mov
cmc
sar
pop
push
or
pop
les
adc
scas
jg
and
pop
data16
sbb
inc
lcall
jl
pop
cmp
pop
xor
aas
jge
pop
imul
test
cmp
fldenv
inc
sbb
pop
xor
ret
leave
out
xchg
add
aam
fistpl
jge
dec
out
mov
push
int3
pop
fnsetpm(287
std
mov
decb
xchg
aaa
dec
mov
andb
leave
lret
jg
push
add
shl
out
jl
jno
jp
fsts
lret
inc
mov
rcr
mov
push
popa
mov
add
pop
jo
mov
cli
jo
ss
jg
or
std
add
lea
out
cmp
sbb
popf
add
ljmp
test
cmp
test
clc
inc
in
pop
push
sub
pop
sub
stos
adc
je
mov
into
jbe
fisubrs
mov
jg
gs
movsb
cwtl
jle
rcr
negl
stc
test
jns
pop
mov
sbb
ficompl
jmp
xor
out
and
iret
aad
pop
mov
pop
enter
push
mov
push
out
fsubl
push
aas
pop
xchg
cmp
cmc
cld
or
sbb
dec
mov
dec
add
in
out
and
cs
sar
inc
pop
xor
scas
in
mov
mov
xchg
cld
loope
rcll
xchg
fidivs
pop
pop
lea
aas
fcmovne
mov
lods
mov
fstp
mov
cmp
in
mov
inc
in
sahf
mov
jle
js
pop
out
faddl
icebp
pop
lods
xor
adc
dec
sbb
xchg
out
sub
pop
sahf
jno
xor
je
outsl
lock
pop
pop
cmc
pop
repnz
ja
scas
fxch
mov
pop
lds
in
pop
fs
repz
jo
insb
stos
mov
stc
push
fdiv
cli
dec
sub
mov
xchg
xchg
daa
call
mov
mov
movsb
int3
xor
addl
movsb
aaa
mov
out
mov
xchg
xchg
in
dec
push
out
stc
add
scas
stos
je
mov
mov
mov
outsl
scas
insl
cli
pop
aam
or
imul
pop
or
mov
xchg
ror
pop
sahf
add
and
popf
jp
es
jmp
mov
movq
out
in
xchg
pop
movsl
repz
daa
leave
or
insl
push
xchg
cld
ja
cmpsl
push
sub
lock
and
xchg
fistpll
into
pop
leave
popa
movsb
cmpb
mov
pop
lock
adc
loop
les
cmc
sub
xlat
pop
incl
out
sub
sbb
loope
lea
jge
pop
xchg
cmp
push
add
mov
xchg
pop
jmp
mov
call
lods
lcall
sub
rcrb
inc
dec
pop
lcall
xchg
push
dec
movsl
test
mov
mov
add
xchg
orl
mov
lea
negb
enter
push
aad
test
sub
out
inc
roll
into
ret
xor
cmc
pop
mov
jge
mov
and
imul
in
cli
mov
daa
jge
jecxz
mov
inc
fdivr
push
frstor
inc
sbb
nop
test
fmull
pop
ret
adc
rcr
call
fcomps
sti
mov
and
out
outsl
test
sub
pop
push
scas
movsl
adc
adc
dec
xchg
sarb
mov
mov
adc
stos
inc
cwtl
pop
sub
ret
mov
sbb
cmpsl
loop
idivl
scas
sbb
dec
fadds
cs
data16
stos
xor
or
pop
arpl
out
cli
cmp
cmp
adc
aam
mov
fimuls
test
inc
sub
fwait
and
in
jmp
mov
mov
cltd
cs
push
aas
xor
sub
pop
push
mov
in
stos
jg
cld
mov
or
into
js
sbb
movsl
lods
pop
std
lods
xchg
fisubrl
adc
je
rcll
stc
test
mov
xchg
or
shrl
pop
xchg
xor
stc
stc
scas
push
xor
test
jns
pop
out
mov
xor
jmp
pop
xor
mov
and
sub
arpl
jge
and
jp
fs
aam
inc
pusha
imul
out
cmp
mov
push
dec
dec
cmp
bound
movsb
and
andl
aad
fistps
fisubrl
popf
fstpt
popa
incb
pop
imul
ror
test
push
ss
jle
fstp
xchg
scas
out
cmp
cld
sbbl
mov
cltd
std
fnstsw
cmpsb
pop
xchg
xchg
jg
pop
xor
push
sahf
mov
dec
push
jg
fistps
shrb
dec
iret
leave
out
jecxz
or
es
stc
and
adc
push
imull
jnp
movsl
cmp
and
dec
cmp
pop
movsb
addb
mov
inc
sub
aaa
popa
add
mov
push
or
inc
jne
pop
mov
repz
fisttpl
xor
lds
int3
js
ds
xchg
lret
pusha
mov
mov
mov
mov
ret
sub
sbb
outsl
inc
aaa
aam
sub
jle
fneni(8087
adc
xor
cmp
in
mov
push
sti
xorl
out
dec
adc
mov
add
pop
mov
ds
add
ret
cltd
jmp
sbb
push
sbb
push
movsb
out
xchg
mov
aad
incb
push
jnp
push
adc
xor
mov
ficoml
mov
ficoml
mov
push
adc
cld
repnz
enter
adc
push
enter
sbb
sti
jle
idivl
std
fistps
leave
lds
mov
mov
pop
mov
jne
ret
jmp
scas
and
adc
inc
hlt
ror
repz
add
jbe
clc
mov
adc
fistpll
fwait
xor
mov
cmp
into
or
xchg
nop
shlb
or
in
pop
push
jecxz
fsubr
call
mov
stc
push
mov
lods
mov
arpl
mov
jecxz
lahf
repz
adc
fstl
push
mov
mov
mov
inc
jae
stos
dec
xchg
mov
lahf
and
fnstsw
sbbb
dec
popw
mov
sbb
xchg
push
scas
or
stos
adc
xor
adc
pop
or
jmp
mov
imul
jg
mov
call
sarb
inc
inc
andb
lods
leave
adc
add
jg
mov
sbb
sbb
in
loop
aas
and
ret
je
cmp
lcall
mov
pop
cmp
xor
in
cmpsl
pop
push
lret
test
cli
pop
dec
xchg
movsb
stos
xchg
sti
jge
cld
mov
pop
push
mov
outsl
push
test
cmc
pop
lods
popf
lds
insl
movsl
jno
sub
push
cmp
popf
push
pop
lods
mov
hlt
movsb
mov
adc
jp
shrl
mov
pop
pop
fs
sub
cmpsb
cltd
cs
mov
and
ds
inc
sbb
pop
testl
xchg
cs
addr16
in
mov
pop
test
outsb
ds
jecxz
pushf
cmp
ret
stos
cli
lret
push
mov
int
out
pop
lahf
call
inc
jno
cltd
es
popf
out
xchg
cmp
jo
out
lahf
push
jl
push
push
sahf
std
into
jne
dec
cmp
popf
fisubs
fwait
mov
fidivrs
movnti
in
addr16
jle
sbb
mov
fisubl
dec
outsb
lahf
push
cld
cmp
adc
pushl
ret
out
pop
sbb
sahf
or
lock
push
aas
cld
jp
jno
push
data16
stc
cmp
lret
xchg
push
jmp
mov
and
loope
push
and
cli
sbb
mov
fwait
mov
jmp
outsb
pop
pop
ds
iret
imul
fisttpll
xor
pop
dec
sti
fwait
push
inc
xchg
jge
xchg
popf
fisubrs
mov
inc
int
cld
in
inc
in
aaa
outsb
leave
lahf
lcall
push
pop
test
cld
jp
dec
cmc
lods
inc
outsb
mov
mov
out
push
cmp
jb
sarb
jb
cwtl
cli
scas
mov
add
push
pop
push
lahf
es
cmp
mov
insl
mov
sub
outsb
repz
aas
aas
mov
push
fwait
add
aas
dec
mov
mov
repz
mov
push
sbb
movsl
xchg
clc
fidivrs
incl
sahf
ds
negl
fwait
mov
data16
aas
jb
repz
in
out
shrb
out
push
pushf
jb
cld
jle
cwtl
cmp
das
outsl
mov
ss
inc
cmp
out
in
mov
sbb
and
jl
stc
in
mov
jns
lahf
stc
adc
cmc
mov
je
inc
rorb
outsb
movsl
outsl
lret
fimuls
jmp
out
test
xlat
jg
push
mov
ret
mov
inc
fidivrs
lret
inc
loopne
jns
push
inc
mov
push
jg
subb
mov
repnz
sub
pop
jbe
scas
out
jno
mov
or
jp
aas
sbb
mov
stc
in
std
cmp
and
cld
repz
test
data16
lret
int3
in
or
ljmp
mov
in
xor
imul
aad
pop
mov
testl
cltd
mov
fwait
mov
xor
dec
sbb
scas
push
fnstsw
jle
loop
test
repz
aad
popf
cmp
out
lock
movsl
hlt
push
push
pushf
mov
lahf
popf
iret
mov
mov
push
push
inc
aam
std
xlat
xchg
push
jo
inc
dec
mov
xchg
cltd
push
add
push
decb
imul
fmul
fidivrs
dec
xor
aas
lahf
jbe
or
sub
ficomps
cmp
jle
jg
fsubrs
cmpsb
hlt
jp
add
addr16
jle
scas
add
outsl
dec
lcall
repnz
lcall
sub
xchg
or
sbb
scas
jp
lcall
fidivrs
add
pop
stc
and
aam
or
out
je
cmp
lahf
ljmp
pop
sbb
out
jbe
data16
sbb
outsb
sbb
fidivrs
repnz
rcll
cmp
dec
movl
mov
notl
fbld
mov
push
mov
mov
lahf
cmc
repz
fisubs
aas
loope
jp
movb
cld
cmp
pop
or
stc
cwtl
mov
adc
mov
icebp
sti
fidivrl
hlt
popf
sub
rolb
jp
mov
les
add
jle
cwtl
xchg
xchg
hlt
shrb
clc
inc
dec
sub
push
jl
cmp
xchg
mov
cmp
dec
dec
fucomp
mov
loopne
jp
out
cmc
xor
out
xor
out
pushf
rcl
fwait
xchg
ljmp
test
cmc
out
pop
lcall
mov
push
xor
outsl
loop
fmulp
scas
out
fsts
cmpsl
cmp
jle
mov
xor
aas
add
fwait
stos
addr16
jno
push
es
sti
cmp
cli
je
shll
fidivrs
mov
sbb
and
jp
imul
lahf
ret
mulb
mov
dec
inc
ss
iret
dec
lea
mov
mov
aas
popa
ret
jle
jmp
insl
mov
inc
stc
aas
and
push
outsb
cmp
fisttpll
sub
add
in
lods
dec
mov
lret
into
ret
mov
jbe
fwait
adcb
clc
mov
sti
mov
jle
cli
push
mov
pop
in
jle
imul
or
ficompl
cld
fsqrt
or
jl
aas
outsb
fwait
lcall
std
fs
repz
sbb
pop
sti
test
test
xchg
fisubrl
cld
pop
add
sti
out
mov
ss
scas
push
sbb
aad
popf
lahf
or
adc
pop
cmp
mov
pop
xor
lret
std
xchg
cs
pop
jp
into
jb
in
adc
lcall
aas
mov
int3
xchg
in
loopne
ds
xchg
enter
out
aaa
sahf
add
jno
mov
sbb
mov
cmp
mov
pop
mov
mov
lret
jle
mov
mov
jle
fwait
rclb
xchg
mov
jle
mov
stc
ss
jp
gs
push
xchg
daa
xor
outsb
inc
movhps
mov
cld
dec
dec
dec
fcmove
out
xchg
push
test
stos
mov
out
lcall
cvtps2pi
pushf
lcall
push
es
pushf
fwait
sahf
outsb
mov
andl
push
repz
stos
sbb
out
into
imull
fistl
fdivrl
pop
dec
fimull
fadd
mov
adc
icebp
aas
jle
fwait
add
outsb
std
cmp
mov
pop
push
lahf
mov
add
sahf
push
push
add
rcrb
dec
mov
push
ljmp
scas
or
shl
in
mov
pop
in
decl
push
js
push
iret
scas
or
sbb
xor
jb
jp
ret
clc
fwait
lcall
cmpsl
aas
scas
ret
lahf
lret
aas
sub
push
mov
xchg
push
negb
and
cmc
push
sbb
dec
mov
jb
jmp
mov
in
mov
lcall
mov
push
pushf
mov
inc
in
jecxz
aad
jge
lea
jle
lods
clc
jp
jae
sti
out
push
cmpsb
adc
jae
push
jge
sbb
cmp
or
lahf
into
out
shll
aad
dec
cs
ret
scas
scas
dec
iret
push
jle
pop
xor
fstpl
push
push
rol
sbb
cmp
jecxz
cmp
mov
je
xor
into
in
cli
out
jbe
pop
xlat
das
mov
int3
mov
stos
je
std
fwait
ss
jo
setle
cld
shrb
mov
add
cmpsb
mov
insb
ds
sbb
push
ret
push
inc
into
stos
in
in
mov
mov
mov
std
mov
and
or
aas
int3
mov
int
xchg
xchg
sbb
imul
jmp
adc
adc
xor
out
scas
xchg
shll
jecxz
adc
insl
cmp
loop
out
cmc
mov
mov
cmp
sbb
push
inc
arpl
out
ds
cli
or
les
ret
push
inc
lcall
sub
jge
int3
aas
xchg
fisubrl
in
dec
or
sahf
push
ss
stc
hlt
mov
scas
mov
insb
jmp
ds
movsl
scas
sahf
dec
arpl
xor
inc
out
pop
mov
push
add
dec
jae
cmpb
decb
data16
pop
mov
xor
enter
fiaddl
dec
gs
repz
lcall
inc
sbb
std
outsb
fucomp
in
stc
jp
out
jl
into
neg
jle
mov
negl
xchg
fwait
rcrl
fiadds
out
inc
pop
inc
daa
cld
mov
mov
adc
cld
xchg
jp
xor
into
mov
arpl
decl
rcl
pushf
jmp
cmpsb
mov
dec
push
cld
mov
mov
or
std
jbe
cmp
cld
or
mov
call
leave
or
int3
outsl
cltd
pop
std
mov
mov
jp
ds
cwtl
xchg
inc
int3
repz
sbb
inc
pop
aas
in
or
pop
in
cltd
hlt
fidivrs
inc
sub
xchg
js
sahf
std
incb
pop
mov
fdivr
std
mov
push
dec
jl
test
sbb
push
sbb
imul
cmp
aas
mov
adc
xchg
cld
pop
das
std
xchg
cmpsb
in
testl
xor
dec
fdivrp
or
fdivp
enter
out
sti
sahf
movsb
aas
jl
cld
into
fiaddl
in
mov
mov
fwait
rcr
push
cmpsb
aas
push
negb
shll
jl
xchg
lods
mov
jle
loop
in
sarl
push
push
insl
cmp
cs
jp
dec
lret
in
fs
pop
ljmp
cld
lea
add
pop
inc
icebp
xchg
dec
cld
mov
pop
int
lcall
jle
aas
dec
ret
loop
mov
dec
inc
ds
int
cmpsl
int3
pop
pop
imull
repnz
mov
in
aam
aas
lret
mov
push
mov
dec
idivl
jb
sarl
push
mov
push
and
jnp
push
cwtl
fcomip
mov
hlt
in
int
xchg
stos
mov
mov
rolb
out
mov
scas
aam
jg
sahf
notl
and
mov
insl
lods
testl
cmpsb
mov
shrb
inc
mov
in
fidivrs
call
adc
dec
lcall
push
sbb
scas
std
lcall
lea
pop
aaa
inc
mov
inc
jg
dec
mov
arpl
cltd
popf
pop
sahf
in
or
cld
jp
add
pop
lods
pushf
incb
mov
into
aas
std
lcall
lahf
jbe
orb
in
rep
xchg
inc
scas
jp
mov
in
jb
lods
int
mov
inc
xchg
mov
out
mov
hlt
in
not
les
jno
cmp
std
xor
lods
push
cld
loope
sti
inc
out
xor
outsb
repz
je
out
data16
sbb
sbb
push
adc
cmp
les
imul
jno
out
or
lcall
jb
push
out
pop
fsubrs
pop
iret
xchg
into
inc
out
cmp
push
mov
scas
and
jge
cmp
sbb
jg
iret
lods
jle
sub
cmpsl
cmp
movsl
sub
mov
add
int3
imull
mov
insl
hlt
sbb
std
sbb
std
jb
mov
into
sub
sub
pop
aam
popa
popf
push
in
xchg
sbb
push
inc
cmp
out
jecxz
es
out
aam
sbb
sub
notl
jg
mov
pop
std
aas
cmp
sub
dec
jle
scas
pop
dec
sbb
xor
mov
xor
scas
lock
es
fwait
jp
cmpsl
jno
pop
es
mov
in
outsl
into
cld
les
int3
sub
mov
push
cld
sub
in
xor
fidivrl
sub
cli
lods
or
aas
jle
add
cmp
pop
adc
pop
add
add
scas
sbb
imul
sbbb
inc
push
call
pop
jle
mov
xor
sbb
xchg
push
pop
dec
pop
xchg
mov
repz
popa
add
mov
cld
popf
insb
push
push
mov
add
cmp
fwait
cld
jp
inc
sbb
jle
adc
mov
mov
pop
xlat
addr16
fisubrs
iret
jne
popa
pop
addr16
cld
xor
inc
cwtl
imul
outsl
xor
int3
js
rcr
push
clc
out
insl
push
cmp
fdivrs
fstpt
stc
pop
stc
jp
push
jbe
cmpsb
cmp
repz
push
mov
jp
add
jle
movsb
mov
inc
outsl
pusha
or
fsubrl
insl
maskmovq
negl
rcr
out
mov
cld
insb
out
divl
lds
pop
std
scas
out
xorl
or
lock
or
adc
into
lcall
or
or
mov
add
pop
jnp
sahf
in
cld
scas
mov
mov
outsl
sarb
rclb
pop
push
rolb
fucomi
insl
idiv
arpl
out
neg
aas
push
insb
inc
mov
mov
and
pop
sahf
mov
sbb
pop
mov
xor
xor
decl
jns
sub
test
mov
fisubl
fisttpll
dec
fs
jl
jo
fisttpll
fucomi
fisttpll
cli
in
pop
pop
outsl
aas
cwtl
scas
add
jne
lahf
dec
stos
pop
fs
mull
rorl
jecxz
cmp
aas
mov
mov
xorb
sti
repnz
ja
xchg
pop
aas
sahf
cmpsb
xor
cmpsl
mov
iret
fwait
idivb
outsl
mov
lock
mov
mov
mov
mov
cmpsb
mov
ds
sarl
notl
nop
xchg
mov
cmpsl
ljmp
fmull
shrl
jle
std
fwait
push
test
stc
bound
stos
xchg
or
fisubs
mov
ljmp
pop
cld
xchg
insl
add
shl
xchg
sbb
shrb
sub
lds
inc
cmp
jmp
mov
push
inc
jge
std
hlt
dec
and
mov
cmp
push
iretw
sti
loop
shr
fs
mov
cmpsl
scas
sub
int3
pushf
sti
aam
mulb
jp
ss
aad
and
icebp
stos
repnz
mov
pop
shl
cld
jle
jg
fadds
adc
pop
in
push
fwait
cld
xchg
adc
jge,pn
sbb
lea
push
dec
movd
and
mov
mov
sbb
fnsave
sti
mov
in
fcompl
sbb
jecxz
je
xor
ds
jle
lcall
mov
push
out
sahf
add
insb
out
lea
adc
outsl
inc
fwait
je
in
push
push
mov
mov
jge
enter
iret
shll
xorl
stos
push
fildll
pop
sti
cmp
pop
cld
adc
test
lret
xchg
or
shrl
in
test
add
mov
dec
fbstp
arpl
sbb
add
andb
jge
cmp
xlat
scas
std
stos
xchg
pop
repnz
mulb
cmp
imul
fs
sti
push
pop
sbb
daa
daa
mov
into
lea
jecxz
es
mov
dec
testl
sub
push
mov
sahf
std
cmp
lods
jle
repnz
mov
arpl
jp
test
jmp
movsl
in
in
pop
je
repz
jmp
dec
xor
lock
push
out
ds
jne
lock
aad
cmp
cmp
into
sti
xor
pushf
sbb
mov
mov
gs
ljmp
pop
mov
pop
int
xchg
fimuls
mov
fsubrl
testb
sahf
push
cmc
sub
inc
adc
aam
subb
push
loopne
sub
jbe
adc
addr16
mov
jnp
call
inc
stc
jbe
outsb
lret
std
cmp
lds
pop
cli
add
repnz
out
xchg
fists
icebp
stos
js
movsl
aam
negl
mov
int
jle
cmp
jns
adc
sub
ficoms
push
pop
dec
xchg
jnp
and
pop
and
inc
sub
dec
lahf
cmpsb
jmp
adc
scas
ljmp
orl
dec
xchg
cmp
cmpsb
pop
xchg
jne
jmp
mov
fdivrp
fwait
xor
cmc
mov
xchg
movsl
popf
cmp
pmovmskb
adc
cmp
jge
cmc
adc
repz
push
call
dec
lcall
int
sahf
jmp
fimuls
mov
jle
jb
mov
nop
sahf
loope
push
jp
jnp
inc
out
call
lods
aam
push
mov
sbb
mov
inc
scas
add
sbb
mov
mulb
mov
pop
data16
push
push
inc
movsb
push
lods
adc
js
adc
cwtl
shlb
icebp
pop
leave
bsr
shrb
adc
lret
aaa
cli
decb
imul
and
fstpt
mov
lcall
xchg
imul
test
xchg
ljmp
push
cmc
mov
cs
ret
xor
xchg
pop
fisttpll
cmpb
jmp
fisttps
std
das
add
mov
pop
pusha
pop
sub
rol
sub
mov
pop
in
test
pop
xchg
lods
repz
iret
push
shll
xchg
imul
lds
stos
mov
xchg
loop
xchg
pop
push
mov
test
loop
mov
ja
or
mov
xchg
testl
lret
adc
loope
dec
shrb
addl
or
loopne
cmp
pop
int3
inc
mov
shrl
jg
push
dec
mov
add
pop
add
dec
ds
sub
es
mov
xor
and
dec
inc
jp
fisttpll
pop
xor
imul
inc
shll
mov
inc
jb
int
pop
xlat
pop
push
insb
mov
fwait
sub
jns
imul
sub
jle
lahf
mov
push
dec
cmp
and
sub
lcall
mov
mov
jg
jle
add
pop
cmp
pop
idivb
push
xor
cmp
mov
aas
lea
lods
fsub
cmpsb
push
rcrl
and
jle
lds
pop
arpl
push
xchg
pop
or
mov
ja
xor
aas
mov
popf
iret
sbb
lds
pop
insl
pop
mov
das
sbb
iret
push
xor
add
sub
inc
pop
insl
add
pop
int
fsubs
fwait
gs
jg
fisubrl
inc
mulb
and
sbb
int
int
cmp
inc
mov
stc
repz
int
dec
mov
mov
iret
fcmovnb
pop
cld
sbb
mov
dec
mov
popf
inc
shll
jle
ljmp
xchg
mov
xchg
movsl
push
cld
int
aaa
ljmp
into
in
movsb
add
das
or
addr16
sub
ljmp
pop
out
mov
add
stos
lret
and
pop
pop
pop
imul
insl
int
in
jle
mov
movsl
or
pop
call
out
iret
andl
mov
mov
shrl
rorl
ret
pop
repnz
sti
fwait
xchg
je
loopne
sbb
test
rcr
stos
pop
adc
sbb
cmc
cmc
ret
enter
jmp
clc
fidivs
test
pusha
test
faddp
loope
adc
pop
push
jnp
andb
and
xchg
jne
jne
sub
dec
jne
and
xchg
cltd
mov
pop
or
push
mov
subl
pop
lcall
lea
push
fucomp
jmp
fs
pop
scas
pushf
add
data16
frstor
cmc
mov
jbe
and
pop
outsb
out
add
shll
inc
sub
stos
or
or
mov
dec
and
ret
mov
sbb
stos
lahf
fs
mov
fpatan
rcrl
hlt
test
inc
jge
and
mov
push
and
jge
mov
and
outsb
dec
int3
loopne
cmp
rorb
mov
ja
arpl
inc
ds
mov
sbb
mov
movsl
in
orl
test
pop
fistps
sti
dec
cmpb
pop
pop
fsts
mov
pop
jle
pop
jmp
jge
cwtl
xor
lret
push
xor
addl
adc
jg
ljmp
fistps
mov
add
test
sub
push
or
mov
loope
lea
shl
fistpl
xor
xchg
mov
jo
dec
ss
pop
inc
sti
sub
cmp
insb
add
mov
xchg
in
clc
fsts
inc
mov
push
xor
jle
xchg
scas
dec
adc
sub
mov
or
push
cmc
fisttpl
decb
pop
stc
xchg
sub
daa
popa
mov
push
leave
dec
movsb
jl
ret
sub
mov
ja
mov
jge
mov
sbb
and
cwtl
jmp
xchg
test
ret
das
lcall
mov
add
push
push
xchg
shlb
and
cli
pop
adc
mov
jns
sbb
adc
rcrb
pop
out
mov
pop
fidivrl
mov
inc
mov
and
subb
ja
rcr
dec
push
xchg
lea
loopne
mov
pop
cmc
ss
sub
repz
jmp
data16
out
or
ret
inc
mov
ljmp
mov
fcmovnbe
xchg
sbb
mov
je
pop
xchg
push
outsl
aas
jbe
lret
cmp
test
push
push
mov
dec
pop
fistpl
sub
int
ss
sbb
xchg
rcrl
mov
sub
jg
outsl
pusha
fisttps
loopne
pop
rorb
add
les
mov
xor
mov
mov
cmp
out
in
mov
pop
popa
and
adcb
int3
nop
stos
pop
dec
loopne
adc
xchg
fdivs
cli
mov
popf
mov
iret
pop
mov
xor
xlat
pop
and
inc
shll
arpl
cmpl
push
sbb
in
sti
jns,pt
inc
inc
fldl
jbe
scas
jl
mov
sbb
pop
rcrl
push
mov
shll
cld
xor
sbb
sub
out
rcl
cmp
push
ja
xchg
mov
push
aad
add
enter
cmpsb
loopne
outsb
pop
push
jg
xor
add
push
mov
pop
cs
mov
mov
cld
pop
xor
mov
xchg
mov
mov
mov
mul
add
test
fidivrl
and
fistpl
pop
not
ret
popf
mov
std
or
cmpsl
mov
into
and
xlat
imul
push
pop
aaa
mov
in
ds
mov
push
repz
mov
or
dec
jne
repz
dec
imul
sbb
repnz
mov
test
push
pop
test
pusha
ljmp
popl
fisttpll
push
pushf
out
mov
movsl
fdivr
repz
neg
cmpb
leave
mov
aaa
adc
aam
xchg
inc
outsl
mov
mov
fldl
push
fadd
clc
test
pop
sti
sub
pop
jge
loopne
aas
dec
xchg
fstpt
pop
or
mov
sbb
lcall
sub
jo
pop
lock
in
bound
push
jne
shrb
jg
pop
push
xor
sbb
xchg
sub
daa
push
testl
mov
test
lock
mov
sbb
aad
sbb
mov
mov
mov
cmc
aas
pop
stc
push
test
inc
jg
pop
cmpsl
out
out
mov
pop
pcmpgtd
subb
and
mov
iret
pop
adcl
jns
mov
push
or
cld
dec
test
cmp
pop
sarl
inc
stos
cmpsl
aad
shll
adc
popa
sti
inc
push
pop
xchg
jmp
mov
scas
idivb
mov
insl
sub
pop
into
mov
stos
ja
sbb
stos
data16
pop
into
cmp
into
lock
shlb
ljmp
jns
fwait
pop
in
call
ret
test
mov
fst
xchg
mov
cs
pop
pop
push
push
movsb
or
or
pop
pop
dec
les
pop
sbb
cmp
jbe
mov
push
scas
mov
mov
mov
jmp
sbb
pushf
fst
shlb
pop
clc
fcmovnbe
jg
es
mov
pop
imul
add
iret
das
ljmp
pop
daa
fbld
imull
inc
jno
pop
jnp
scas
and
mov
push
add
add
jmp
add
aas
les
loop
and
popl
pop
push
rorb
lods
sbb
in
inc
dec
and
fbld
stos
mov
clc
inc
mov
mov
mov
rolb
dec
addb
cmpsl
stos
testb
add
ficomps
push
mov
sub
into
inc
iret
insb
mov
add
or
test
dec
or
int
aas
dec
loope
cmp
xorb
fbld
mov
inc
pop
out
roll
nop
jle
cmc
and
pop
lret
arpl
mov
scas
lea
xchg
push
out
add
mov
mov
jns
push
je
mov
sub
roll
leave
test
std
flds
ja
sub
sbb
push
jno
push
in
fs
addb
jb
mov
cmp
loope
faddl
pop
xchg
adc
push
jmp
push
push
pop
jae
outsb
and
mov
dec
jg
fsubrl
inc
add
lret
add
rorl
dec
sub
je
xchg
mov
jg
push
stos
pop
xchg
pushf
lds
mov
inc
std
cs
xor
mov
dec
mov
xor
jge
sub
scas
pop
dec
or
rolb
fcmovb
dec
or
scas
pop
add
fildll
cmpsl
sbb
jno
jle
outsb
hlt
std
ret
jb
cmc
cmpb
xor
test
rcrb
mov
jo
negl
out
daa
and
xor
je
fcmovnbe
nop
xchg
jge
pop
mov
inc
cltd
mov
adcb
inc
adc
xchg
imul
inc
enter
sbb
in
xor
lock
imull
mov
leave
mov
or
jo
pop
lret
cld
outsb
mov
arpl
out
inc
dec
inc
mov
cld
cmp
lods
insl
icebp
hlt
rol
clc
mov
or
mov
sti
sub
fsub
outsl
jl
or
addr16
rcr
or
jmp
aas
inc
jge
pop
cmpsl
cmp
add
jle
mov
fmull
cmpb
push
and
pop
mov
jnp
dec
pop
dec
push
adc
adc
jno
stc
loope
add
in
pop
arpl
addr16
mov
mov
test
mov
sbb
pop
test
sub
das
movsl
int3
mov
dec
xchg
add
hlt
in
shrl
jmp
aam
flds
inc
imul
jg
xor
add
and
push
dec
lcall
jecxz
imul
cmpsb
dec
jns
jle
aas
out
push
mov
movsl
hlt
or
xchg
mov
mov
scas
sti
mov
adc
scas
pop
mov
sti
shr
jb
mov
cmpsb
push
loop
cli
jecxz
mov
pop
in
popf
incl
jb
lods
push
fsubs
das
inc
jle
mov
sarb
mov
bound
scas
mov
pop
mov
lds
test
push
aas
pop
push
jmp
push
popf
imul
sbb
in
pop
clc
mov
les
mov
pop
sti
push
fdiv
push
xor
mov
xchg
aas
sbb
jbe
stos
lahf
xchg
xchg
out
mov
inc
sub
mov
stos
repz
rcll
aas
enter
lcall
add
xchg
add
jns
aas
xchg
fbld
pop
daa
aas
movsb
jp
iret
push
sbb
or
rcrl
fildll
inc
outsl
or
cmp
imul
xchg
jbe
dec
jno
mov
xchg
lds
adc
divl
cmp
sub
lods
lcall
pop
std
jb
iret
cmpsb
pop
pop
inc
dec
fnsave
lods
sub
icebp
push
sub
xchg
add
iret
xchg
fmul
xorb
push
cmp
lds
inc
mov
dec
fdivs
dec
fcmovnu
sahf
cmp
and
sbbl
pop
add
std
andl
or
faddl
out
imul
repz
xor
pop
arpl
shrl
popw
push
mov
sub
inc
xor
scas
mov
adc
sub
fistpl
divl
sbb
xchg
out
xor
popf
fsubs
mov
fnstsw
dec
mov
mov
test
adc
mov
repnz
sahf
cmpsb
adc
mov
in
xchg
ret
pop
xchg
mov
or
inc
push
jle
cmpsl
sbb
jecxz
in
enter
stos
insb
push
flds
ja
mov
or
cmpsb
add
xchg
mov
adc
out
pop
xor
pop
or
sub
push
movsb
add
arpl
jle
test
xchg
or
vunpckhps
test
pop
mov
cli
and
pop
cs
scas
mov
jle
xchg
pop
cmp
mul
aam
dec
add
sarb
sti
movsb
adc
cmp
add
movb
xchg
ret
fldt
pop
sub
or
arpl
add
push
test
inc
mov
push
mov
mov
pop
jle
insb
outsb
lods
ljmp
aaa
ret
cs
gs
mov
popa
inc
jb
push
dec
mov
adc
pop
call
ja
frstor
jl
jno
ret
add
mov
mov
sub
aad
pop
shll
add
das
mov
pop
xchg
jno
repz
and
mov
stc
jle
mov
dec
test
pop
adc
test
jbe
jle
add
test
pushf
mov
scas
jo
jae
pop
xor
mov
xlat
cmp
add
imulb
or
jp
pop
add
imul
pushf
sub
mov
sarl
aad
or
push
inc
push
cwtl
insl
cmpsl
lock
mov
and
fcoml
aad
xor
mov
mov
add
pop
mov
cmp
adc
fsqrt
mov
cmpb
add
xchg
xlat
jp
mov
fistpl
hlt
dec
in
test
and
out
adc
inc
lods
insl
outsl
and
inc
scas
imul
pop
dec
pop
fucomp
mov
add
adc
scas
xchg
mov
ja
adc
mov
push
jnp
pop
adc
mov
mov
pop
icebp
es
add
gs
xor
notl
rcrb
push
popa
mov
popa
rcll
cmp
filds
jge
shll
mov
jp
jge
rcrb
mov
dec
lods
stos
cwtl
movsl
mov
sbb
stc
movl
sbb
fbld
fdivrl
dec
ja
inc
push
push
std
aas
pop
jno
divb
fcoml
stc
inc
cmp
repz
imull
mov
sbb
sarl
xor
arpl
imul
jge
mov
sub
fstl
mov
std
push
mov
in
aam
xor
add
add
xchg
inc
pop
jmp
dec
out
add
lods
cmpsb
jb
add
dec
sbb
fcomp
mov
lods
add
sub
jno
call
and
mov
outsb
adc
adc
xor
xchg
ret
xchg
adc
push
mov
in
adc
jmp
loope
insl
popf
inc
insl
stos
jg
pop
sub
outsb
dec
aad
into
add
jg
mov
stos
or
inc
xchg
in
adc
fndisi(8087
daa
mov
sahf
ret
insl
into
push
sti
pop
jbe
dec
push
jne
arpl
loop
fmull
mov
push
out
out
ss
mov
test
test
fistpl
add
lcall
mov
lea
loop
fcompl
into
mov
leave
mov
imul
icebp
ds
pop
outsb
ficomps
adc
xchg
pop
mov
ss
imul
scas
lret
out
neg
push
call
out
inc
xlat
cwtl
out
insl
push
stc
das
sahf
sbb
cltd
rcll
xorb
int3
push
mov
dec
mov
leave
push
dec
jg
jmp
xchg
sti
add
stos
rcrl
xchg
addr16
imul
out
gs
in
pop
lds
mov
int
mov
mov
xchg
mov
mov
dec
pop
outsl
repz
insb
aam
push
jae
and
imul
insl
and
insb
mov
sbb
mov
je
lods
orb
arpl
adc
imul
pop
std
adc
inc
mov
jbe
nop
mov
in
mov
mov
adc
pop
inc
jg
repz
fisttpll
sbb
add
arpl
push
sti
pop
lea
mov
imul
xor
out
inc
sbb
sub
dec
pushf
movsb
and
push
fbstp
aam
ja
imul
push
xchg
test
jae
cmp
mov
lods
and
out
adc
dec
cmc
pop
divl
gs
outsl
mov
test
test
sbbl
out
xor
pop
das
sub
notb
pushw
cmp
into
sub
push
iret
insb
dec
das
and
and
cli
sbb
dec
fs
cs
sub
lahf
jae
sbb
rclb
jecxz
or
shlb
adc
adc
xor
adc
rolb
mov
cltd
add
shll
pop
mov
repz
jne
push
sub
lea
je
mov
icebp
lret
push
jmp
rcrl
movsb
sbb
test
movl
adc
jg
leave
dec
sub
and
popf
rcll
cmpsb
dec
jae
ficoms
add
add
dec
push
inc
jl
imul
push
push
das
adc
fmulp
std
mov
mov
pop
mov
sti
mov
insl
movsb
add
in
scas
inc
xchg
and
test
push
dec
dec
in
insl
div
mov
xchg
and
ficompl
imul
and
insb
sub
inc
cmpsl
stc
sbb
insb
dec
pop
xlat
push
pushf
into
mov
int3
call
push
jno
test
movsb
push
adc
je
pop
add
rorb
jg
mov
jg
sub
inc
insb
or
stos
xor
cwtl
aaa
mov
inc
ror
jne
inc
or
cmpb
jae
xor
mov
sbb
mov
fisubl
fistpl
jns
mov
inc
push
incb
mov
pop
mov
ljmp
jge
lcall
pop
sbb
add
movsb
pop
arpl
in
xchg
xchg
or
flds
les
out
fdivrs
pop
mov
call
pop
adc
je
sti
and
push
hlt
adcb
sub
pop
scas
shll
fisttpll
out
frstor
shll
mov
in
adc
xchg
or
das
out
jecxz
push
xor
jae
movsl
push
repz
xchg
adc
icebp
cmpsl
mov
iret
and
lods
aam
jge
or
mov
mov
ret
rcrl
adc
dec
cmpsl
inc
or
sbb
push
add
sbbl
jle
or
jle
fists
sub
iret
scas
jno
fidivl
adc
imul
faddl
jmp
mov
out
mov
inc
adc
jns
xor
arpl
clc
add
sbb
mov
popf
and
jge
movsl
ficoml
sub
pop
mov
ss
aas
xorl
or
xchg
jo
cmp
bound
mov
ja
shrb
mov
dec
test
sub
mov
imul
fdivp
sub
aam
pop
ds
testl
pop
mov
scas
adc
scas
dec
sub
jbe
pop
rcrl
arpl
adc
into
js
dec
mov
lahf
xor
out
fimull
int3
into
fstps
sub
aad
pop
or
gs
mov
cwtl
mov
sbb
add
insl
jge
adc
cmp
cmp
aas
push
enter
mov
inc
xchg
pop
imul
negl
and
or
cld
imul
out
in
inc
sar
sbb
js
pop
sbb
and
cmc
sti
add
pop
jmp
arpl
jl
pop
jne
push
add
sbb
xchg
fistl
filds
mov
test
sub
xchg
pop
xor
fs
pop
add
sti
and
iret
aad
aam
mov
aas
jle
pop
test
fisubl
insl
jge
jmp
adcb
add
loop
mov
pop
fsubs
mov
or
mov
mov
fwait
out
push
mulb
add
cmpsb
lods
shlb
mov
dec
int
jge
cmpsl
dec
jg
je
mov
xor
fistps
and
mov
insl
mov
shll
mov
xchg
rcrl
inc
dec
dec
negb
add
std
repnz
fisubl
iret
fiaddl
repz
pushf
popf
mov
insl
mov
lock
xlat
adc
ljmp
mov
aas
inc
xor
sti
pop
mov
mov
mov
cmpb
data16
fwait
cmp
insl
sub
or
hlt
or
daa
aas
lods
out
pop
mov
add
mov
cmp
adc
and
cmc
mov
je
mov
fidivrs
mov
into
pop
jg
lock
mov
sub
int
fisubs
dec
cmpsl
push
fadds
das
xchg
es
arpl
lahf
cmpb
or
jbe
in
add
addr16
adc
rorl
push
frstor
mov
jecxz
lcall
out
pop
dec
mov
rclb
sarl
and
fldenv
dec
pusha
bound
inc
fildll
sub
mov
pop
rcrl
adc
xor
sahf
jb
sbb
mov
scas
dec
pop
sub
xchg
arpl
sub
mov
pop
mov
mov
pop
add
int
or
and
je
test
jge
pop
inc
mov
mov
cmc
int
pop
outsl
call
or
lcall
loopne
inc
sbb
mov
rorl
push
add
sbb
mov
das
lahf
aas
and
sarl
loopne
jle
push
sar
jecxz
lret
les
inc
jne
jle
rorw
jno
sub
cmp
shll
sahf
pop
test
cltd
sub
and
mov
imul
outsb
pop
inc
vmwrite
sti
enter
popa
adc
or
mov
aam
rclb
mov
jmp
gs
fs
pop
sub
sub
xlat
fld
leave
sbb
pop
mov
rcrl
pop
hlt
shll
mov
push
sub
jne
add
push
jnp
ret
enter
mov
sbb
outsl
inc
int3
fistps
xor
roll
jnp
stc
lahf
push
mov
pop
pop
jae
dec
push
aaa
mov
add
inc
mov
lods
cltd
or
daa
cs
clc
pop
sbb
adc
rcll
inc
dec
cmp
faddl
jmp
mov
ret
lea
jle
aam
inc
cmp
aam
divps
xor
insb
stc
jle
lahf
cs
pop
add
pop
mov
pop
out
testb
lret
jmp
jg
int3
bound
je
sbb
test
cmp
cwtl
xchg
or
jge
cmp
out
popf
pop
mov
popa
hlt
es
dec
test
fiaddl
and
push
mov
mov
sub
sub
pop
lcall
adc
sbb
pop
icebp
mov
inc
mov
dec
stos
imul
in
fidivl
push
fildll
push
scas
mov
jle
mov
cmp
movsb
mov
mov
pop
shrl
xchg
fidivrl
std
xchg
mov
xchg
push
and
mov
push
out
stc
repz
repz
jo
mov
stos
ss
pop
adc
imul
xchg
int3
int
and
cmp
xor
mov
imul
and
inc
lea
push
mov
mov
push
nop
mov
cmpsb
rcrl
rolb
clc
xlat
in
xor
daa
mov
jle
sahf
lods
fisubl
dec
stc
cmp
leave
test
jecxz
pop
call
xchg
adc
fwait
xor
xchg
mov
ljmp
and
pop
aas
mov
mov
xor
dec
mov
mov
in
mov
mov
pop
je
lods
adc
outsb
lea
dec
fcmovbe
dec
int
rcr
jbe
arpl
int
pop
xor
pop
xchg
or
mov
call
pop
pop
pushf
mull
popf
push
jmp
stos
mov
mov
test
idiv
fstpt
pop
rcrb
pop
das
aam
push
arpl
dec
adc
test
push
pop
adc
mov
pop
ss
pop
cmp
repnz
mov
xor
data16
sbb
iret
sbb
pop
testl
hlt
dec
mov
xchg
and
aas
mov
fcoms
arpl
test
xchg
hlt
fxch
jmp
push
das
fiaddl
jnp
into
iret
scas
cmp
xchg
push
pop
xor
add
xchg
mov
xor
in
xor
shl
rclb
cld
outsl
pop
inc
or
clc
scas
pop
and
popa
mov
pop
push
dec
or
mov
pushf
dec
pop
nop
push
sbb
pop
fldl
imul
das
sub
pop
sti
ja
sbbb
lods
sub
cmp
imul
popa
jmp
jae
into
mov
cwtl
arpl
ja
popl
ficomps
lahf
push
testl
sbb
icebp
mov
jle
int
jge
cmpsb
jns
lds
jnp
nop
xchg
adc
dec
inc
popf
mov
mov
adc
lcall
in
flds
das
ficoml
clc
mov
lcall
insb
jno
sbb
popa
add
and
inc
cmpb
popf
sbb
daa
rcll
loope
iret
mov
pop
in
mov
flds
repz
in
mov
and
lret
pop
rcrb
mov
scas
mov
push
mov
mov
data16
gs
sbb
xchg
in
shr
mov
lahf
lret
mov
test
pop
aas
aad
cmp
stos
or
test
fisubs
lea
pop
cltd
nop
jb
jnp
int
inc
dec
push
pop
out
sbb
dec
xchg
cmpsl
stc
cld
stos
orb
ds
mov
mov
xchg
cmc
ja
xchg
mov
pop
inc
adc
ret
shrb
fldl
push
test
fs
in
adc
sbbb
lret
mov
mov
mov
xchg
mov
cmpsl
icebp
call
dec
ret
xchg
loope
dec
mov
movsl
repnz
pop
push
mov
fstps
sbb
mov
add
mov
mov
push
loop
pop
rcll
mov
test
jae
in
inc
cwtl
mov
imul
lahf
mov
fcomi
add
add
lret
pop
pusha
mov
adc
jbe
ljmp
sbb
repz
int3
sub
inc
adc
fistpl
repz
inc
and
rcl
add
pusha
in
sti
mov
inc
outsl
dec
adc
das
mov
and
jg
addl
add
arpl
pop
cli
or
testl
cmpsb
inc
mov
pop
fstps
or
xchg
icebp
jbe
and
fadds
pop
and
jg
addl
push
popf
add
mov
imul
mov
xor
sahf
add
xor
xlat
fistps
in
into
mov
or
pop
xor
test
sub
stc
ret
repz
gs
mov
int3
js
sub
add
mov
imull
xlat
jo
add
push
sub
push
inc
aas
lret
pop
jg
sub
scas
js
ds
cld
lcall
sbb
pop
je
mov
imul
pop
or
mov
push
jbe
addl
popf
push
in
gs
jge
into
call
stos
xchg
idiv
xor
lds
mov
or
cltd
call
mov
pop
or
js
sbb
in
jl
pop
jnp
and
ja
mov
repz
or
inc
mov
mov
jnp
pop
shll
mov
inc
pop
int3
sub
jl
pop
aaa
mov
les
shlb
es
lret
jp
or
imull
fstp
idiv
push
clc
mov
hlt
es
rcl
lahf
xchg
popa
add
cs
xchg
int
stos
cmp
xor
cmc
mov
leave
add
call
mov
dec
es
pop
cmp
pushf
adc
insl
ret
inc
or
mov
dec
mov
in
push
shlb
adc
in
ja
sbb
and
dec
xchg
fistpl
mov
in
lea
xchg
leave
xor
mov
stc
clc
add
rcll
ffreep
in
cmpsb
add
idivl
mov
mov
mov
mov
mov
out
rorl
and
imull
adc
ret
sahf
jle
pop
pop
stc
subb
pushf
jbe
fildll
ficomps
cmp
adc
loop
pop
mov
cmp
fsubs
enter
inc
pop
fwait
int
cmp
lea
iret
repz
pop
push
inc
loope
test
iret
pop
and
push
das
adc
cmpsb
movd
inc
jg
pop
adc
lock
mov
lea
add
mov
not
pop
dec
lds
mov
outsb
cmpb
lcall
adc
insl
or
aam
mov
popa
scas
mov
imul
mov
pop
dec
mov
shll
adc
pop
pop
pop
fists
push
xor
aam
and
pop
aad
dec
mov
pop
pushf
nop
dec
mov
jbe
ret
push
pushf
sub
fxam
mov
pop
loope
add
cmp
out
adcb
jno
imul
sbb
sar
ds
add
in
cmp
mov
loop
sahf
pop
inc
jnp
nop
into
loop
test
pop
xchg
pop
clc
fisubs
add
andb
outsb
pop
mov
sub
xor
push
hlt
adc
scas
push
pop
sbb
mov
fdivs
ficoms
inc
mov
xchg
adc
cmpsb
xorb
xchg
or
lock
pop
pop
jecxz
ret
iret
gs
lds
fstpt
pop
xchg
daa
in
ficoms
cwtl
out
lods
fscale
jae
mov
sub
fcmovnu
add
test
jbe
add
xor
icebp
rorl
dec
fildl
mov
hlt
dec
and
mov
aam
pop
test
xchg
cltd
mov
sbb
mov
aaa
sub
pop
xor
sti
jbe
pop
pop
mov
and
jle
arpl
or
inc
test
shl
pop
jb
lds
sbb
roll
and
outsl
shlb
mov
fldcw
xchg
push
dec
xchg
xchg
mov
cld
js
cmpxchg
lahf
loop
cwtl
rorl
cs
rclb
popa
fnstsw
and
mov
test
jg
mov
fs
mov
jle
ss
fstp
into
cmc
stc
fisttpll
pop
and
mov
sahf
test
cmp
cmp
out
and
pop
loopne
and
jnp
mov
adc
fwait
pop
sti
push
das
adc
pop
pop
push
jp
fwait
adc
cmp
stc
call
enter
stos
xchg
insb
jo
xchg
mov
fs
pop
push
rclb
jg
jg
push
imull
xchg
push
or
mov
ss
push
cwtl
cmp
fadds
dec
cmpsb
jg
iret
push
bnd
push
dec
xor
push
outsl
ja
sahf
xor
imul
repz
dec
mov
mov
icebp
loope
cmp
in
in
push
je
add
xor
add
push
call
out
mov
sub
cmp
add
sahf
jae
test
inc
jne
mov
dec
dec
outsb
jmp
pop
in
push
int
mov
mov
mov
fidivl
orb
push
sub
leave
lods
fisubs
jge
aad
mov
in
cmpl
neg
mov
inc
jg
and
sbb
fsubrp
daa
pop
stc
out
push
pop
sub
sbb
dec
jg
adc
int3
test
pop
jp
xor
imul
sahf
jle
popl
fmuls
cmp
fldl
push
dec
lea
add
in
test
aas
out
dec
pop
and
add
lock
xchg
push
cmp
test
pop
push
pop
leave
mov
lods
testb
mov
out
mov
add
mov
mov
arpl
test
cwtl
adc
add
pop
add
negb
loopne
push
out
cmp
adc
out
sub
mov
sbb
dec
mov
ja
cmc
inc
jns
mov
mov
push
inc
jne
jecxz
adc
aaa
dec
xor
lret
testl
mov
jge
loop
out
sbb
pop
mov
jg
adc
add
xor
mov
pop
xor
and
sbb
sub
inc
xor
cmc
sbb
dec
xchg
xor
push
mov
inc
ljmp
mov
mov
outsb
hlt
icebp
fsts
adc
test
cmc
pop
push
clc
sbb
adc
add
and
and
mov
adc
sbb
inc
jns
dec
jl
cmp
negb
push
cmpb
outsl
pop
mov
or
and
fwait
mov
and
jecxz
out
or
negb
add
shl
negb
fwait
cmp
jl
cmc
lods
cmp
pop
pop
test
cmp
mov
push
or
lret
pop
fwait
imul
mov
xor
push
stos
cmp
in
stos
test
push
pop
pop
dec
outsl
xor
dec
stos
arpl
cli
lea
icebp
sbb
les
addr16
sbb
sbb
fnstcw
xor
stos
or
xchg
lahf
inc
inc
xchg
and
sbb
mov
mov
and
out
pop
and
in
into
mov
movsb
dec
push
fsubs
pop
stos
adc
dec
aaa
pop
xor
iret
leave
mov
adc
pop
jle
dec
add
sub
mov
xchg
push
dec
loope
lea
outsl
outsl
or
hlt
mov
rorl
push
xchg
and
mov
and
fisttpll
ss
push
xchg
inc
negl
pushf
push
cmp
pop
mov
inc
or
dec
pop
ret
mov
cmpb
idiv
sbb
adc
je
mov
std
cmpsb
jle
roll
mov
jge
sub
es
ljmp
outsb
lods
test
imulb
je
in
out
or
xchg
cld
sbb
adc
add
add
dec
dec
or
and
ret
gs
fdivrp
mov
repz
pop
xlat
xchg
pop
add
jmp
je
push
inc
pminsw
mov
mov
outsb
xor
int
sbb
lcall
fcomps
rorb
bound
pop
mov
cmpsl
ret
xor
mov
xor
mov
es
repnz
mov
test
or
push
aas
flds
stc
xor
sahf
cmp
nop
loope
lods
sbb
icebp
push
out
add
xor
xchg
inc
ja
jg
adc
imul
or
lret
shrl
mov
fdivs
add
int
dec
and
xchg
and
rolb
lcall
loop
lret
fnstcw
dec
repz
arpl
dec
or
iret
aad
rcpps
add
cli
sbbl
pop
addr16
js
cmc
pop
mov
sahf
sbb
jae
fisubl
fxch
cmp
flds
or
jne
sete
sbb
pop
clc
out
push
mov
cmp
or
pop
mov
sbb
out
sub
mov
mov
shlb
loope
pop
inc
ror
insb
and
push
outsb
addb
xchg
jae
pop
mov
xor
lock
insb
adc
inc
adc
push
dec
in
pop
mov
cmp
jbe
xor
out
sbb
mov
std
mov
push
lret
inc
jo
pop
add
jnp
clc
loop
mov
into
cmpsl
inc
adc
mov
mov
pop
xchg
sbb
cmc
sahf
js
fwait
mov
inc
lods
iret
insb
arpl
cld
xor
pop
rclb
dec
mov
std
mov
adc
mov
lea
add
clc
imul
cmp
add
mov
pop
leave
inc
mov
sbb
or
repnz
testb
sub
xchg
into
or
pop
pushf
sbb
test
in
jge
sbb
dec
mov
clc
pushf
mov
loop
repnz
inc
imul
dec
sub
pop
out
xchg
hlt
jg
xchg
sub
mulb
cmp
jb
leave
loope
cmp
out
jne
adc
pop
rcrl
hlt
imull
lret
popf
fstps
mov
adc
aas
sahf
pop
aad
jge
sub
inc
push
adc
sbb
pop
mov
pop
and
ficomps
test
inc
jo
aas
push
mov
inc
push
mov
dec
and
test
leave
out
test
roll
mov
inc
cld
jmp
fdiv
jg
pop
leave
shll
out
lcall
and
aas
pop
nop
adc
cs
jl
das
and
pop
rclb
jge
jne
mov
popf
sbb
cmp
fistpll
mov
mov
ds
popf
push
mov
out
lcall
sti
rol
push
push
inc
sub
rclb
and
popf
pop
sub
jmp
fadd
cmpsb
or
add
in
xor
dec
pop
add
rcrb
jo
dec
data16
outsb
mov
imulb
mov
sti
rcr
sub
iret
imul
add
xor
add
and
or
cli
pusha
dec
mov
orb
add
stc
repnz
xchg
cmp
inc
mov
push
push
cli
rcrb
dec
mov
ret
cmp
mov
cmp
orl
fisubl
popf
push
test
adc
mov
jo
aas
sub
rclb
std
int
ret
mov
lea
pop
aas
mov
inc
jp
lret
push
mov
mov
shl
mov
push
pop
push
xchg
fwait
xor
dec
imul
stc
cli
aaa
add
imul
inc
add
push
out
and
cmp
fcmovnb
call
lret
pop
add
jge
mov
iret
hlt
push
shl
and
jge
mov
sbb
stos
mov
add
pop
imul
xchg
or
pushf
inc
int
in
cmpsl
data16
fldenv
aam
jg
in
pop
xchg
sbb
jno
hlt
cmc
mov
add
test
push
cmpsb
pop
rorb
and
or
rcrb
lods
mov
imul
add
pop
jmp
aas
mov
fiadds
int3
in
mov
test
fbld
out
std
ja
into
lret
fsubrs
popf
fisubrl
xchg
std
fs
pop
stos
pop
mov
fs
mov
repz
lods
out
jno
push
sub
test
stc
lock
fcomip
xor
fwait
mov
adc
xor
pop
dec
orb
pop
push
pop
cmpsl
push
add
jg
sti
cmp
out
test
stos
test
jmp
rcl
fnstcw
add
jmp
mov
cwtl
dec
inc
mov
push
repnz
pop
subl
pop
sbb
inc
adc
and
arpl
jle
push
popa
loope
dec
cld
imul
adc
inc
jmp
add
out
out
fnsave
dec
lcall
pop
dec
out
jbe
pop
dec
xchg
ds
fisttps
pop
aaa
jl
test
pop
xchg
stos
insb
xchg
xchg
cmp
xchg
pop
out
ror
mov
fistps
cld
data16
add
sub
dec
mov
nop
add
shr
mov
and
mov
pop
push
aam
xor
cltd
arpl
cmc
mov
xchg
or
scas
xor
imul
adc
popa
cmp
push
lahf
or
pop
addr16
std
leave
add
pop
cmc
sbb
adc
xchg
cli
sub
push
inc
inc
dec
les
mov
pop
imul
inc
je
mov
mov
fwait
inc
push
int3
pop
mov
dec
inc
scas
jge
cwtl
fsubrs
push
mov
sbb
ret
xchg
push
xchg
mov
mov
push
lods
shl
pop
repz
popf
mov
jge
mov
sti
cmpsb
mov
outsb
sbb
xchg
leave
cwtl
push
xchg
mov
ret
xor
test
jmp
xchg
js
rcll
popa
movsb
mov
stc
pop
push
xor
add
or
in
mov
push
fcmovu
mov
lcall
jmp
flds
dec
push
mov
pop
dec
mov
scas
cltd
pop
test
cmpsb
pop
inc
jae
fld
roll
sbb
inc
fisubl
test
lret
add
jb
mov
jae
lock
gs
dec
jg
pop
les
and
push
or
shll
jmp
mov
dec
nop
adc
pop
inc
std
inc
in
xor
lock
mov
inc
jmp
jmp
mov
fldt
xchg
mov
pop
adc
mov
or
loopne
adc
mov
pushf
das
test
aam
mov
ret
xor
push
inc
push
cmc
int
jne
dec
les
sub
pop
cmp
mov
sub
cs
aam
jp
mov
faddl
jle
pop
cmp
sbb
mov
inc
jb
pop
aaa
push
int
xor
int
xchg
orl
cmp
xor
jmp
inc
dec
add
out
push
jge
dec
xchg
pop
cmc
in
lods
pusha
mov
add
fists
xchg
setno
shll
sub
dec
pop
pop
mov
pop
lds
xchg
icebp
dec
aas
push
cmpsb
jle
mov
lret
std
das
leave
push
adc
mov
pop
cmovge
sti
inc
test
mov
fs
aas
popf
pop
sahf
mov
rcll
cld
dec
cld
je
cmc
jp
mov
jb
sahf
xlat
in
scas
out
xchg
cs
rcrb
ja
les
push
arpl
mov
and
pop
cmp
lea
xchg
mov
fildl
xchg
aam
cmp
fst
out
jne
movsl
cli
dec
add
js
ss
inc
add
rorb
pop
test
mov
mov
mov
shl
popa
lret
jp
pop
mov
data16
add
push
das
mov
lock
fnsave
mov
divl
lahf
mov
mov
mov
ficoms
jne
fdivrl
fistpl
lcall
pop
loope
addb
mov
pop
cmp
xchg
out
addr16
push
xchg
je
inc
leave
stc
flds
mov
xor
mov
cmpsb
pop
pushf
lock
ffreep
pop
pop
ss
movsl
or
jge
jle
popa
das
jb
stos
movsl
imul
xchg
pop
cmp
push
repz
pop
cmp
dec
enter
jle
adc
es
cmp
add
pop
call
fisttpll
push
loop
je
rorb
push
mov
sahf
ret
push
pop
stos
xchg
dec
pop
mov
sbb
cmpsl
mov
pop
jo
xchg
repz
adc
neg
or
lods
popf
fadd
aas
mov
sbb
shr
mov
fcompl
jno
add
mov
repz
test
push
pop
cmpsl
adc
and
sub
int3
mov
aaa
jno
xor
sti
stos
dec
push
adc
in
lea
xor
rorl
pop
mov
sbb
fmull
and
mov
repz
dec
pop
xlat
clc
mov
mov
ja
cmp
inc
or
sarb
rcll
lea
xchg
sub
jg
in
xchg
shrl
sub
fdivrp
test
inc
pushf
mov
lods
ja
pop
add
cld
shrb
cmp
inc
cmpsb
sbb
imul
mov
mov
ficomps
std
iret
xchg
pop
xlat
push
xchg
sti
int3
mov
pop
in
adc
push
adcl
cmc
mov
stos
inc
or
pop
addr16
out
cmc
inc
jno
insb
mov
mov
flds
icebp
sti
push
mov
xchg
adcb
aas
jp
jl
orb
jg
pop
or
test
dec
xchg
hlt
cmpsl
out
adcl
out
addr16
fists
dec
mov
fsubrs
mov
icebp
push
shl
std
ret
add
addr16
dec
shl
das
in
scas
pop
push
push
xchg
xor
lcall
dec
jmp
push
push
cmpsl
lods
js
pop
mov
push
int
iret
ss
in
lahf
add
xchg
adc
inc
dec
icebp
xchg
dec
xchg
add
mov
sub
out
imul
dec
mov
lahf
lea
dec
pop
sarb
push
jns
mov
cmp
and
sbb
jp
mov
aad
jae
pop
adcb
pop
push
dec
lods
mov
or
in
cmp
pop
ficomps
jl
out
stos
push
jge
adc
mov
jp
cmpsb
push
xchg
pop
dec
out
add
outsb
imul
jl
xor
fistpl
sti
xchg
mov
sbb
int
scas
inc
cmp
cmp
out
das
aad
mov
pop
mov
mov
jmp
jl
dec
subl
dec
mov
ret
sub
adc
nop
mov
in
sbb
sub
pop
jmp
jne
rol
sub
sar
sub
fisttpll
clc
and
mov
add
cmp
fistl
shrd
jnp
mov
inc
xor
xor
jne
mov
jbe
pop
adc
pop
dec
or
lahf
int
xor
sub
aad
and
push
mov
adc
xchg
xchg
pop
lods
sub
sub
cmpsb
insl
or
pop
or
adc
sub
jmp
xchg
mov
xor
cmp
fimull
fisttpl
fdivrs
xor
cmp
xchg
jns
mov
xlat
jns
pop
repnz
fstps
jge
mov
and
or
mov
loop
fdivs
out
mov
mov
add
mov
leave
out
jmp
inc
dec
movsl
mov
mov
and
bound
mov
or
inc
jle
dec
jp,pn
stos
sbb
test
xchg
movl
and
fwait
cmp
pop
cmpsl
mov
testl
mov
jmp
xor
fcoms
dec
cmp
fs
das
popf
ret
repz
pop
stos
xor
jne
fists
aad
xchg
pop
aam
lods
jle
pushf
loopne
xor
mov
add
jns
imul
scas
xchg
mov
dec
xor
adc
fiaddl
popf
enter
mov
or
jl
cmp
mov
xchg
xchg
scas
fstpl
dec
fsincos
mov
jb
rcll
adc
push
inc
ret
dec
cwtl
dec
adcb
inc
sub
cld
and
andb
negl
xchg
push
adc
fbstp
dec
lret
jg
pop
int3
push
inc
cmp
dec
pop
mov
inc
and
cmc
cmp
rcrb
int
mov
pop
dec
dec
out
pop
sbbb
lret
outsl
stos
add
sub
jne
mov
push
mov
and
pop
dec
mov
xchg
mov
cld
mov
ss
das
mov
fstpt
or
mov
xchg
push
sbb
rcr
mov
xor
fiadds
test
xchg
push
stos
repnz
cmc
addps
test
daa
stos
pop
jg
or
cmp
push
xchg
imul
add
sti
imul
cmpb
test
arpl
inc
jo
cld
pop
pop
rcrb
movsl
sar
cmc
stc
out
jne
mov
jno
pop
repz
add
aad
lds
movsl
cmp
cwtl
sahf
ljmp
int
jge
jle
mov
push
dec
cmp
xchg
push
push
gs
cltd
mov
cwtl
cmpsl
les
outsl
mov
mov
jbe
inc
cwtl
out
stc
and
cs
pop
pop
lods
or
das
daa
adc
adc
ret
repnz
insl
push
out
adc
stos
jge
xchg
xchg
xor
movsl
or
sub
lods
inc
sub
int3
imul
mov
or
lret
cli
cmpsl
or
adc
push
test
xor
jecxz
test
lahf
pop
out
fsubrl
push
lcall
mov
stos
jb
mov
cmpsl
sub
or
dec
push
lea
iret
mov
cmpsl
subps
lods
mov
push
mov
or
sbb
mov
push
sub
mov
negl
insl
sarl
aad
lret
mov
aas
stc
push
inc
rcl
loope
xor
pop
push
inc
js
gs
dec
mov
hlt
repnz
jmp
shrl
inc
dec
fsts
adc
movl
jg
pop
loopne
jle
push
mov
push
pop
pop
flds
cli
addl
fistpl
lock
cmp
push
sub
fildl
jmp
mov
xchg
xchg
sti
push
jno
ficomps
inc
sti
sub
adc
xor
mov
mov
mov
inc
dec
aas
push
sbb
push
test
push
out
push
rcll
cld
repz
adc
cmpb
inc
outsl
adc
popf
stos
or
xor
lcall
enter
mov
inc
xorb
fcompl
movsb
xchg
sbb
sarb
xchg
addl
scas
lock
ds
pop
push
pop
je
popf
stos
mov
dec
sahf
pop
push
and
addl
cmp
and
das
pop
fisubrs
int3
xchg
sub
das
mov
adc
jmp
pop
fs
sbb
fldenv
add
sbb
stos
pop
dec
dec
jae
movsl
fwait
sub
lods
xchg
mov
or
pop
popf
sbb
pop
in
and
aaa
adc
imul
stos
add
into
imul
pop
orl
add
mov
pop
push
dec
mov
dec
repz
ja
xchg
in
sub
lea
xchg
cmp
pop
inc
aad
cmp
push
imul
xchg
pop
mov
fs
pop
xor
pop
ja
add
adc
inc
lods
outsb
mov
jle
mov
and
add
xchg
repz
lahf
iret
add
dec
mov
and
pop
or
mov
cmp
jno
inc
mov
js
sub
ja
cs
dec
mov
fisttpll
dec
imul
aaa
push
add
xchg
inc
aaa
xchg
or
loop
pop
jbe
cmpsb
jge
leave
cmp
inc
add
pop
adc
jg
fbld
fs
sub
cmpsl
int3
adc
inc
lret
loop
cmpsb
inc
sub
pop
shrl
out
fisttpll
mov
daa
gs
imul
push
test
jnp
pop
cmpsl
and
adc
fnsave
test
lea
addl
outsb
adc
bnd
cltd
shrl
inc
lahf
scas
sbb
jecxz
push
pop
lcall
mov
imul
sbb
clc
dec
pop
rcll
mov
out
inc
sbb
jno
push
xor
arpl
loop
or
add
fcoml
enter
jg
scas
sub
fcoms
pop
outsl
mov
stos
orl
xor
add
inc
pop
daa
jmp
insb
mov
xchg
adc
int
fwait
jae
repnz
sbb
xchg
inc
into
add
rcl
lret
jne
mov
ljmp
call
mov
inc
mov
lret
add
testb
push
popf
std
pop
pop
aam
cmpsl
inc
lea
cmp
iret
jns
imul
call
lods
repnz
pop
jmp
push
dec
or
popa
inc
test
pop
aad
or
imul
inc
mov
les
sbb
cmp
cld
pop
sub
cmp
iret
fld1
inc
mov
imul
cpuid
lea
mov
jg
mov
je
mov
jns
dec
pop
cs
push
mov
push
std
sar
jbe
hlt
sbb
pop
jl
mov
hlt
cmp
mov
sbb
or
mov
cmp
inc
mov
test
push
sbb
mov
and
loope
in
rcll
mov
ret
test
cld
inc
xor
js
lahf
pop
shr
sub
pop
inc
or
push
clc
insl
iret
mov
mov
pop
sub
ss
ds
pop
add
stos
sub
imulb
out
pop
iret
push
test
std
ret
sbb
xchg
flds
cmc
pop
mov
fmuls
pop
adc
add
pushf
jne
in
jno
mov
mov
push
pop
push
shll
jmp
mov
rorl
cmpsl
shrb
rsm
pop
dec
iret
loope
testl
mov
jg
addr16
adc
arpl
loop
cmpsb
mov
movb
in
out
mov
inc
orl
arpl
cmpb
pop
add
in
pop
cmp
cmp
add
pop
sahf
pop
adc
js
scas
movsl
fwait
cmpsb
shl
mov
or
xchg
mov
sbb
xor
shll
aaa
xor
cmp
dec
adc
in
ret
pop
leave
xor
and
jg
xor
fmuls
out
mov
std
sbb
add
outsl
jg
inc
fldl
xor
int3
sbb
leave
sub
cwtl
or
scas
pop
and
std
fldenv
mov
and
adc
or
aas
add
and
add
xlat
dec
and
in
cmp
mov
fldl
sahf
mov
arpl
mov
shl
mov
popa
pop
xchg
decl
sbb
inc
pop
in
inc
mov
enter
loopne
frstor
stc
cmp
mov
out
cld
inc
and
cmc
mov
lcall
dec
test
das
lea
xor
sarb
int
std
and
mov
jmp
push
popa
pop
xchg
and
call
out
mov
ljmp
in
pop
or
mov
jp
int
fisubrs
pop
fnstcw
jl
test
and
mov
sub
dec
mov
sahf
lahf
xchg
out
sbb
inc
out
sub
fistpl
push
test
pop
clc
add
mov
lock
dec
mov
into
or
adc
xchg
inc
outsl
sbb
fnstenv
outsl
jbe
lock
out
loope
push
and
lods
fnstcw
jbe
gs
pop
sub
pop
and
push
adc
pop
imul
mov
inc
jg
push
stos
stos
fsubrl
pop
jo
ljmp
dec
lahf
and
fwait
fwait
ljmp
sub
aam
nop
addr16
testb
movsl
fwait
and
outsb
mov
sbb
sub
cwtl
lret
push
mov
mov
mov
in
not
xchg
daa
fstps
pop
sbb
mov
mov
push
mov
lods
adc
push
pop
xor
push
or
adc
pop
xchg
inc
repnz
repnz
mov
push
outsl
and
dec
pop
mov
pop
es
dec
mov
adc
mov
in
mov
jg
out
pop
jle
sbbl
stos
add
nop
adc
mov
pop
movsl
xorb
ret
mov
mov
sub
mov
and
sti
mov
shr
roll
add
icebp
lds
shrb
mov
into
fnstcw
sub
mov
push
bound
das
movsl
xor
xchg
cmp
push
mov
cmp
pop
shlb
push
shll
cltd
sbb
ljmp
in
int3
sub
xchg
xchg
int3
dec
scas
or
add
push
xchg
lock
pusha
cmc
aam
aad
mov
out
mov
jmp
pop
mov
sahf
pop
and
xchg
xchg
mov
cld
pop
rcl
in
add
mov
imul
in
cltd
fimuls
ret
mov
scas
inc
loope
push
cltd
inc
add
pop
imul
xchg
cmc
incl
mov
cmp
cmp
xor
xlat
lsl
iret
and
mov
cli
frstor
test
cli
stos
dec
push
mov
dec
sbb
jne
test
std
and
fnstenv
hlt
subb
jno
xchg
fldcw
cmp
mov
out
je
push
push
xchg
cmp
pop
lcall
mov
test
rcrl
lock
mov
pop
hlt
out
xor
sub
mov
cmpsl
pop
xchg
inc
in
mov
mov
xchg
in
imul
mov
push
stos
data16
cmp
negb
aaa
nop
mov
outsb
incl
arpl
xchg
push
sub
roll
sti
sahf
push
imul
out
pop
cmp
lea
lock
sub
leave
cmp
add
icebp
and
jns
scas
xchg
mov
lea
jmp
lret
leave
cmp
insl
dec
jno
imul
sti
cli
es
adc
push
cmp
in
xlat
out
and
sti
insb
mov
outsl
inc
sub
lahf
push
int
push
jg
cmc
fsubrs
mov
mov
out
mov
sbb
call
es
out
add
bnd
lods
inc
idivl
pop
icebp
fsubp
xchg
imul
sbb
push
sub
arpl
push
int
adc
cmpsl
xor
dec
sub
insb
mov
or
pop
xchg
pop
pop
push
jp
and
outsb
sbb
pop
imulb
repz
stos
sbb
jp
dec
lret
cmpsb
push
fisttpl
repnz
cmc
imul
inc
insb
out
cs
inc
cmpsl
lea
add
sti
cltd
loopne
adc
call
enter
pop
ds
cmp
sbbb
sti
mulb
sarb
int3
adc
leave
in
pop
push
vmovsldup
in
fistpl
add
pushf
mov
mov
mov
imul
mov
cmp
dec
mov
pop
scas
mov
add
lds
cmp
icebp
int3
fbld
das
test
cmpsl
or
aad
adc
push
popf
sti
push
push
lcall
adc
pop
xchg
mull
dec
repz
cmp
add
xor
add
stos
cltd
movb
aad
pop
shll
cmpl
mov
sbb
test
push
lods
int3
and
push
sub
mov
sti
imul
roll
or
pop
in
test
fnsave
cmp
scas
pop
inc
aas
pop
pop
cmp
mov
add
iret
pop
mov
pop
and
pop
mov
ljmp
jle
fadds
mov
es
sub
movsl
out
fnstcw
int
out
pop
inc
aas
mov
dec
cmpsb
cli
mov
shlb
movsb
add
jbe
pop
jno
repnz
movb
negb
sar
rorb
sbb
repz
jne
mov
shrl
aam
das
jle
or
cs
ret
std
add
adc
shl
xchg
pop
jb
add
and
roll
sbb
cli
xor
push
jno
arpl
mov
aaa
mov
in
shl
adc
out
add
ret
pop
lods
lock
pop
fldenv
mov
stos
aas
fwait
jge
xchg
fsts
pop
sbb
mov
mov
mov
fsubr
loop
and
xor
lds
call
pop
out
stos
test
cmp
ljmp
mov
jbe
jg
pop
icebp
arpl
arpl
mov
jge
adc
mov
out
adc
jbe
sub
jge
addb
repz
and
cli
popa
dec
aaa
sbb
popa
mov
pop
fcoms
mov
neg
mov
pop
int3
stc
pushf
mov
and
pop
jle
pop
lsl
scas
mov
fistpl
test
ds
inc
inc
dec
adc
or
mov
dec
sbb
imul
or
addr16
mov
push
or
xchg
mov
xchg
xchg
or
xor
push
fistl
add
mov
clc
jle
mov
imul
pop
loope
mov
mov
movsl
xor
mov
and
or
mov
cld
adc
rcl
sub
es
cli
sbb
jge
mov
out
in
jmp
add
dec
movsl
sahf
or
or
jp
cmp
pushf
imul
mov
jle
pop
es
cmc
out
pop
xchg
mov
sub
push
imul
clc
jg
out
into
daa
sub
cmp
insb
mov
adc
adc
arpl
inc
xlat
ds
adcb
orl
mov
fdivr
inc
mov
inc
rorl
lock
loop
stc
aam
add
ss
lea
add
xor
imul
sbb
int3
xchg
mov
and
stos
dec
fnstenv
sbb
push
popf
in
dec
fldenv
adc
jnp
lods
cmc
repnz
std
xor
pop
in
mov
lret
negl
inc
xchg
bound
sbb
mov
push
out
pop
xchg
lret
mov
clc
es
or
scas
ljmp
pop
xor
pop
test
jno
pop
das
xchg
idivb
dec
pop
inc
pop
lea
aam
mov
jecxz
pop
ret
pop
roll
inc
out
test
mov
fldenv
out
call
add
ret
mov
lea
lods
fadd
fstps
lea
dec
add
mov
adc
sbb
push
sub
cltd
pop
das
adc
pop
cmp
vaddsubpd
add
sub
adc
inc
enter
and
fs
hlt
pop
test
adc
addr16
adc
testl
xchg
mov
adc
stos
adcb
sub
js
sbb
xlat
jle
lcall
into
xchg
cmp
mov
test
scas
adc
push
enter
push
mov
call
xor
out
jns
mov
nop
adc
jno
ret
push
aam
imul
nop
popa
rcr
add
mov
push
fcmovbe
incb
xchg
adc
inc
mov
mov
out
ss
sub
mov
xlat
adc
mov
push
mov
clc
cmp
cmp
mov
into
push
aam
cwtl
fcomp
pop
cwtl
testl
repz
dec
lahf
arpl
clc
mov
mov
mov
pop
fmull
adc
add
hlt
mov
adc
loope
push
stos
mov
adcl
cli
ficoms
in
and
push
loop
scas
fstl
movsl
mov
pop
xor
fcmovne
rcr
fildl
fnstenv
sub
insl
inc
out
cmc
pop
pushf
stos
pop
cmp
mov
dec
jbe
pop
pop
int3
out
jmp
out
arpl
push
mov
or
arpl
pop
push
mov
test
pop
fidivrs
mov
mov
add
je
jp
test
pop
and
mov
lea
xor
push
popf
sub
inc
lret
xlat
push
xchg
jge
scas
fistpll
stos
fprem1
hlt
cmp
push
sub
mov
dec
sti
inc
mov
inc
fwait
pop
sbb
mov
xorl
nop
inc
xorb
adc
jnp
mov
outsl
push
mov
adc
dec
add
arpl
out
scas
lret
and
cmpsb
mov
add
jge
fneni(8087
sub
mov
in
xchg
hlt
test
and
test
fsubp
cmpsb
rclb
pop
pop
aad
movsb
mov
into
insl
inc
mov
loope
loope
jg
push
jnp
mov
sbb
cs
xlat
out
push
add
cld
std
mov
mov
push
jle
adc
lods
add
clc
lods
pop
jg
xchg
jecxz
insb
fldt
and
jg
dec
inc
sbb
out
pop
dec
fisubl
cmp
lahf
ds
and
sbb
imul
sti
mov
jp
or
mov
rcrl
mov
pop
jb
mov
out
cli
push
scas
jmp
push
mov
leave
jl
xchg
dec
inc
xchg
arpl
mov
shl
mov
aam
xchg
int3
out
pop
pop
sbb
insl
lcall
pop
nop
adc
outsl
dec
mov
pop
fsubrs
fwait
sub
ljmp
rcrl
roll
cwtl
cmp
push
popa
fwait
pop
cmpsl
jmp
inc
fcoml
ljmp
aaa
jg
out
jl
iret
jno
scas
insl
loope
nop
jg
add
and
xchg
iret
pop
shrb
rcrb
inc
xchg
xlat
mov
cltd
dec
outsl
fs
mov
test
fidivrs
lods
clc
mov
stos
stos
and
push
adc
es
mov
fistps
mov
mov
sub
aas
mov
inc
xlat
mov
arpl
es
pop
pop
mov
or
fidivrl
lea
xor
and
add
mov
jge
mov
dec
decl
sbb
ret
fsts
adc
and
inc
pushf
push
pop
or
enter
xchg
adc
ja
adc
lahf
mov
xchg
mov
fldt
aas
test
add
aaa
sbb
loope
jge
shr
add
cmp
ja
fs
sub
addr16
in
cwtl
inc
add
outsl
out
lea
stos
into
lret
and
aas
mov
repnz
icebp
xor
jge
mov
inc
pop
lock
push
ret
imul
mov
push
mov
jmp
std
dec
clc
lock
mov
insb
hlt
xchg
add
inc
cs
mov
jmp
lcall
and
pop
xchg
add
xchg
clc
aaa
lcall
f2xm1
inc
hlt
mov
pop
xor
jne
addb
dec
lea
aas
clc
pop
pop
negl
cmp
xchg
and
ljmp
mov
ret
pop
sbb
dec
loopne
mov
sub
sub
lods
negl
sbb
out
sub
scas
inc
or
mov
cs
stos
sbbb
xchg
and
aas
sub
adc
jp
testb
ficompl
movsb
imul
test
dec
repz
cmp
push
scas
lahf
sub
arpl
sub
jnp
and
cli
mov
lea
jp
pop
or
hlt
pop
adc
and
mov
stos
adc
mov
idivb
fs
mov
idivl
mov
fstl
clc
or
sahf
out
xlat
cmpsl
jne
aas
adc
lods
xchg
jecxz
pop
inc
mov
and
and
mov
imul
mov
mov
dec
add
cmpsb
mov
aaa
jmp
loopne
mov
ds
insl
xor
rcr
and
inc
sub
adc
inc
xor
in
rolb
ficoms
cmc
cmpsb
adc
test
aad
mov
push
pusha
push
rcrl
push
scas
add
popa
jmp
mov
mov
dec
ss
repnz
std
aas
scas
or
js
aam
loope
adc
sub
loope
std
fadd
roll
outsb
mov
hlt
fs
rcrl
aad
mov
xchg
sbbl
and
sahf
xor
icebp
jb
or
add
pusha
in
and
pop
sub
sbb
ret
xor
mov
and
jo
mov
scas
cmpb
lgs
mov
push
push
mov
cmp
pop
jmp
hlt
lds
add
in
mov
clc
cmpsl
sub
dec
in
arpl
lock
inc
jae
cld
or
sahf
ret
cmc
sub
test
pop
in
hlt
stc
or
mov
addr16
stos
ret
xor
mov
push
shl
pop
outsl
test
push
cmpsl
scas
inc
jnp
jg
sub
dec
iret
and
addr16
scas
in
fdivl
ss
mov
leave
dec
xchg
fwait
inc
push
lock
sar
mov
fdivrl
leave
sbb
cmpsl
stos
jle
pop
das
and
in
xorl
insb
or
mov
scas
mov
leave
sub
imul
dec
cmc
out
mov
add
push
cmp
lahf
mov
fisttpl
filds
cmp
lods
jnp
push
ss
dec
mov
sarb
repnz
or
dec
jnp
pop
sahf
pop
push
ja
and
push
in
jns
adc
sbb
rep
int
xlat
in
sub
jo
add
testb
aas
mov
scas
popa
js
or
dec
rcrb
mov
lea
sbb
xchg
push
sbb
fsub
popf
pop
insl
in
mov
mov
xor
xchg
sti
fsub
jg
pop
dec
push
arpl
inc
mov
movsl
in
or
fdivrl
dec
and
adc
lods
dec
scas
jp
cmc
push
aam
ss
ret
mov
xchg
daa
or
stos
aaa
lret
cld
xchg
and
inc
jbe
push
int
pop
stos
dec
add
pop
shl
insl
cmp
test
call
in
in
fimull
mov
lods
mov
or
cmp
inc
pop
cld
push
decb
mov
aas
cmpsl
jo
in
fdivs
pop
stos
insl
into
mov
in
test
mov
pop
ror
adcb
xchg
pop
push
std
orb
fwait
lret
fists
into
neg
push
insl
mov
sub
mov
push
out
jb
subb
push
pop
sub
dec
movsb
incb
popf
lcall
test
inc
and
jg
cld
int
ja
test
stos
fs
and
out
sbb
pop
pop
pop
xor
dec
adc
cmpsb
fildll
dec
lods
aas
jo
pop
sub
mov
sbb
xor
xlat
movb
fsubr
push
xchg
or
and
mov
adc
data16
sub
loopne
xchg
sbb
out
add
jle
xchg
fstpl
adc
jp
movsl
cli
or
sbb
out
xchg
fwait
xor
movsl
pop
arpl
int3
icebp
add
xor
out
mov
aad
push
or
pop
inc
outsb
pop
push
imul
sbb
out
push
aas
lods
push
pop
pop
jle
cmp
imull
dec
popf
adc
xchg
dec
call
or
insl
sub
sbb
clc
mull
js
cs
pusha
add
mov
jmp
lahf
shll
out
rclb
inc
mov
dec
and
or
mov
inc
sbbl
out
add
sbb
clc
fcmovnu
sbb
sbb
xchg
sub
jle
or
stc
or
mov
jl
hlt
lahf
stos
lods
std
mulb
test
sbb
lods
xchg
inc
sbb
lahf
scas
pushf
fdiv
shll
xchg
cmpsb
jo
jp
into
pop
gs
sub
dec
mov
popf
mov
mov
fldt
mov
rcl
scas
pop
lods
std
adcl
jnp
js
pop
xchg
mov
or
mov
ss
and
hlt
addr16
adc
mov
sahf
cmc
sbb
sbb
nop
and
test
cmpsl
pop
inc
xor
xchg
mov
test
xchg
pop
daa
cmp
lret
pop
or
sub
jle
leave
arpl
pop
repnz
add
or
fwait
out
xchg
inc
sbb
mov
sub
push
xchg
mov
jnp
add
and
imul
stos
out
pop
mov
or
out
clc
lea
mov
sub
cmpb
mov
lea
add
jne
mov
pop
mov
xor
mov
mov
fnsave
hlt
gs
clc
mov
sub
jae
pop
and
mov
or
sahf
std
lock
frstor
aaa
shrb
scas
sti
rcrl
pop
rolb
insb
ljmp
xchg
imul
mov
inc
insb
mov
pushf
xor
cmp
pop
add
pop
xor
lock
add
cmp
test
lods
lock
or
fistl
pop
jb
adcb
or
outsb
lods
add
cld
push
sub
xchg
jo
lea
fcompl
notl
fidivrs
inc
shrl
frstor
fs
mov
fs
fnstenv
inc
cmpsl
inc
out
lret
fisttpll
jb
push
and
pop
fisubrl
jmp
faddp
lea
mov
lock
pop
mov
sub
mov
jmp
inc
inc
mov
sbb
cmp
pop
dec
mov
rcrl
stos
sbb
cmpsl
cmp
iret
push
dec
fs
mov
add
clc
pop
cmp
mulb
xchg
push
fstpt
mov
cmpsb
pop
mov
sbb
sahf
sahf
dec
shlb
mov
fs
bound
xchg
push
lahf
jp
adcl
xchg
in
add
add
add
test
dec
sbb
mov
dec
cmp
aam
cmp
das
mov
leave
in
mov
lock
popf
xchg
jge
mov
pop
testb
mov
stos
mov
in
mov
out
ret
push
ja
dec
pop
mov
mov
xchg
hlt
pop
test
cmpsl
jle
fnstenv
xor
xor
cmc
or
test
pop
dec
jg
sbb
mov
imul
jp
filds
or
jo
sti
leave
cmp
adc
sbb
cmp
push
fcomi
fnstsw
and
jns
mov
in
xlat
add
push
mov
aas
pop
dec
fldcw
stc
xchg
orb
add
dec
in
xchg
jmp
push
xor
sar
scas
xchg
sub
sub
ficomps
ja
pop
mov
mov
in
es
mov
xor
mov
divl
jg
inc
aaa
out
xchg
shr
pop
popa
inc
dec
into
add
xor
pop
cltd
out
mov
dec
push
je
out
daa
popa
sub
mov
rorl
hlt
mov
iret
or
mov
rcll
sti
push
rorb
fmul
inc
or
sbb
xchg
push
ret
jno
inc
cwtl
dec
sub
roll
leave
out
xor
movsb
fcoms
or
popf
daa
fs
mov
sbb
xchg
sbb
cmp
mov
push
test
mov
pop
jno
orb
adc
jge
mov
test
cmpsb
fdivl
mov
mov
or
pop
dec
outsb
push
stc
adc
testl
mov
fcoml
imull
push
mov
xorl
xorb
movsb
das
push
or
fdivr
rol
mov
jb
pop
out
out
inc
xor
pop
scas
mov
pop
sbb
clc
or
mov
lahf
out
xchg
pop
rorl
enter
scas
dec
adc
sbbb
insb
dec
xchg
adcl
mov
mov
iret
cmpsb
leave
mov
in
xchg
imulb
cmc
dec
jns
imul
or
pushf
scas
inc
xor
push
cmp
sbb
cmc
repnz
nop
mov
out
jns
out
int
mov
cmp
roll
inc
aas
or
pop
xor
xor
cmpsl
pop
push
sbb
sahf
ret
js
and
enter
inc
enter
xchg
fsts
cmp
push
and
sbb
add
cmpsb
sbb
out
mov
mov
sbb
pop
das
test
or
sub
loope
sub
fildl
mov
xor
andb
cmp
adc
lret
je
mov
inc
mov
push
loope
clc
pushw
les
repz
es
mov
cmp
cmp
mov
or
add
stos
ret
sarl
adc
xchg
push
cmp
mov
and
lcall
mov
roll
jmp
pop
das
push
adc
sahf
mov
cmp
mov
iret
dec
fldcw
jle
inc
xchg
and
out
ss
sub
push
sub
jle
stos
fdivrp
popa
mov
or
aas
imul
inc
shl
jmp
sbb
iret
mov
adc
mov
in
rcl
rcrb
lcall
xchg
iret
loope
mov
add
imul
shlb
jo
push
mov
int
movsb
or
pop
aas
stos
lea
aaa
sahf
dec
xor
cmp
rclb
add
fisubrs
mov
scas
pop
mov
in
pusha
jmp
jno
jge
sbb
xchg
in
jecxz
dec
outsl
outsl
sti
out
jecxz
jl
mov
int
or
fisubrl
rcr
mov
call
out
sbb
inc
stos
popf
mov
in
in
push
adc
js
push
repz
xorb
xor
ljmp
andl
fcomps
ja
mov
ficomps
jns
repnz
mov
scas
push
mov
jno
fcoml
lds
test
xchg
outsl
pop
sbb
orl
add
leave
aad
mull
xchg
sbb
cli
pop
scas
lret
or
rclb
push
insb
pop
dec
insl
dec
shrb
mov
xchg
dec
or
xchg
sbb
sti
in
push
addr16
inc
int3
decl
leave
mov
mov
insb
dec
rcrl
sti
adc
clc
daa
push
mov
xor
mov
scas
inc
jmp
xchg
pushf
add
mov
inc
ja
cmpsb
mov
jmp
add
pop
push
ror
add
pop
xchg
std
test
push
cmp
outsb
mov
sub
lods
pop
adc
lret
cmpsl
xchg
jmpw
fistl
repnz
jmp
adc
sub
pop
pop
lcall
jnp
jb
sbb
pop
pop
fwait
aad
mov
int3
dec
pop
sub
or
push
fldl
das
out
pop
test
icebp
push
stos
mov
pop
pop
cmp
dec
dec
call
cwtl
in
and
add
pop
mov
cmc
in
and
mov
jmp
leave
std
dec
inc
repz
cli
adc
repz
and
mov
out
push
add
cli
test
lret
scas
cmp
mov
roll
sbb
adc
ljmp
push
fnstcw
dec
into
test
sbb
mov
inc
xor
push
bound
rorb
lea
and
movsl
mov
dec
cmp
mov
mov
gs
jnp
pop
sbb
mov
test
loop
cmpsl
cmpsb
int
and
jg
nop
pop
test
pop
repz
repz
mov
fdivl
sub
push
leave
pop
sub
cltd
xor
jb
popa
and
pop
arpl
fdiv
add
in
push
pop
cmc
in
inc
inc
repnz
imul
lods
imul
adc
fisttpl
add
btr
fdivs
push
or
mov
in
inc
sbb
rorb
lods
inc
and
mov
inc
fldcw
pop
sub
test
mov
mov
insb
or
push
sbb
jmp
lahf
adc
cmp
mov
mov
std
into
leave
push
lahf
stos
movl
andl
pusha
mov
cmpsb
mov
pop
jno
push
loop
xlat
inc
xchg
sbb
sarb
std
fbstp
xlat
hlt
pop
inc
or
pop
pop
mov
mov
inc
fcoms
sbb
enter
add
shl
in
and
cmpb
pop
cli
test
divb
rcrl
sub
imull
push
pop
adc
idivl
mov
dec
adc
lret
mov
inc
xor
pop
xor
sub
sub
cmpsl
mov
addr16
out
pop
add
cmp
pop
adc
cmp
cmp
or
dec
setg
loope
imul
int
fsubl
sbb
adc
testb
cmp
iret
leave
or
mov
lcall
xchg
popf
xor
jmp
insb
imul
mov
fnstsw
hlt
data16
cld
dec
aam
mov
jmp
pop
out
sti
imul
push
cli
or
fcoms
push
or
cmc
pop
test
lods
mov
jle
jp
das
xor
dec
xchg
xlat
mov
sti
aam
adc
repnz
mov
mov
daa
cmp
push
into
imul
pop
cmpsb
xchg
cmp
xor
mov
ljmp
insb
sahf
clc
mov
mov
sub
out
mov
cmpsl
out
pop
mov
xlat
and
inc
add
cmp
and
lods
and
ret
rcrl
xor
mov
or
stos
push
sub
pop
fdivl
outsl
pop
dec
fcmovne
mov
add
nop
dec
and
sub
notb
in
fiadds
imul
lcall
or
mov
popa
sti
add
jp
or
xor
sbb
scas
or
icebp
into
out
xchg
cmpsl
cmc
fcomps
jle
sub
sbb
aad
sub
pop
scas
addr16
jne
aam
push
mov
fnstsw
lret
dec
repnz
jp
pusha
xlat
or
jg
jg
sub
mov
mov
stc
imul
mov
xor
mov
mov
inc
dec
mov
mov
xchg
clc
and
scas
push
and
es
and
cld
lahf
pop
xchg
loop
and
das
pop
jecxz
pop
mov
pop
mov
add
aas
inc
rcr
pop
pop
movsl
out
push
pop
call
outsb
inc
ljmp
repz
test
xchg
cmc
cmpsb
and
lea
hlt
loopne
arpl
push
jbe
cs
jle
xchg
in
and
dec
int
mov
jmp
xor
scas
xchg
mov
mov
mov
xchg
pop
push
jmp
adc
jno
pop
mov
or
push
mov
ror
pop
lea
sbb
lahf
push
test
jg
enter
pop
sbb
lods
xchg
jae
mov
mov
xchg
xchg
xlat
mov
inc
shl
adc
ja
mov
adc
out
imul
js
enter
outsb
gs
notl
rcr
dec
or
cmp
inc
mov
adc
or
xor
pop
arpl
fistps
jno
out
pop
mov
cwtl
xchg
ds
xchg
leave
mov
push
xor
cld
mov
out
faddl
jge
les
and
and
in
out
sti
mov
xchg
push
mov
dec
adc
adcl
shlb
cmp
mov
xchg
stos
jns
pop
push
dec
jmp
leave
inc
mulb
test
lea
cld
jbe
test
xchg
or
pop
test
mov
rclb
dec
cs
jnp
pop
dec
xchg
outsb
popa
pop
adc
int
xchg
roll
sub
leave
jecxz
stos
cmp
cmp
xchg
or
out
add
inc
pushf
in
ja
loope
ss
sub
loop
divb
inc
test
mov
mov
sub
xchg
sahf
dec
lea
mov
outsb
filds
fcomps
pop
enter
fistps
jb
pop
mov
or
and
gs
lds
popf
lret
lahf
rcrb
cli
enter
mov
xchg
jl
scas
pop
arpl
in
stc
loopne
push
cmc
call
pop
repnz
pop
mov
mov
fnstsw
pop
rcll
inc
and
and
pop
pop
in
or
iret
push
jo
inc
pop
imul
ds
push
push
test
mov
iret
sub
cmp
cltd
loope
and
jp
loop
lret
fdivp
in
cmpsl
fildll
sarl
cltd
add
fidivl
cmp
repz
mov
test
sub
xor
faddp
loope
cli
cmp
pop
out
popf
pop
push
add
pop
push
rol
test
fcompl
enter
out
shrl
cmp
pop
call
dec
mov
pop
pop
negl
push
loopne
cmp
imul
jge
mull
test
leave
mov
push
add
div
mov
repz
inc
dec
mov
out
lret
pop
pop
cmp
inc
cmpsl
lods
dec
mov
gs
insb
push
pop
pop
xchg
outsl
out
sarb
rcr
sbb
mov
adc
test
out
and
and
outsb
loope
fcoms
aaa
pop
fbld
xor
cmp
aad
add
movsl
or
and
ja
dec
inc
pushf
fwait
mov
std
loop
or
xor
inc
cmp
into
mov
lret
rcr
xor
fwait
pop
mov
cltd
fisubl
mov
fstl
andl
mov
xchg
jnp
and
cmp
mov
fs
inc
stos
or
lock
mov
jmp
mov
cmp
fs
mov
xchg
push
jp
jne
pop
dec
in
and
clc
add
pop
pop
push
pushf
repnz
lret
lahf
cmp
jecxz
addr16
jnp
fists
mov
and
inc
aam
rcrl
add
mov
jbe
adc
or
nop
cmovge
ja
pop
movsl
cmc
andb
cltd
lret
add
orb
mov
js
pop
or
test
xlat
cmc
cmp
adc
xlat
sbb
lds
cwtl
mov
push
test
cld
pop
leave
stc
test
pusha
or
imul
out
pop
in
scas
adc
cmpsl
cld
inc
arpl
jle
lea
insb
sarb
or
icebp
call
xchg
xor
lods
lret
lahf
add
pop
sbb
jle
out
sbb
mov
sbb
sub
push
jbe
ljmp
fadd
push
mov
jle
pop
arpl
aad
mov
sbb
adc
cwtl
or
movsl
rorl
fnstsw
movsl
js
pop
cs
cmp
adc
jne
xchg
je
lret
pop
inc
add
pushf
imul
mov
lahf
in
mov
mov
out
pop
jae
repz
scas
sbb
outsb
das
pop
sbbb
stc
pop
push
out
sbb
imul
outsb
call
mov
adc
ljmp
pop
jmp
popa
jmp
or
clc
pop
cmp
outsl
imul
xchg
orl
test
inc
cmp
sub
jge
pop
out
out
or
in
in
fcomp
pop
add
mov
xor
dec
ds
pop
pop
sub
int
dec
cmp
gs
jno
jecxz
iret
mov
push
hlt
cmpsb
mov
dec
inc
mov
fadd
and
ret
or
xchg
add
mov
xchg
adc
xchg
sbb
sbb
push
adc
lcall
fyl2x
jmp
mov
arpl
mov
inc
test
mov
lock
das
pop
shlb
jmp
int
out
lret
cld
pop
bound
xor
jle
outsl
adcl
mov
xor
insb
pop
mov
je
testl
pop
adc
fxch
push
fdivrl
addr16
pop
repnz
in
pop
rcl
fldl
in
add
ljmp
in
mov
scas
arpl
jno
xchg
loop
push
jne
imul
mov
mov
rorl
push
add
xchg
sbb
dec
cld
popa
mov
adc
clc
jo
fwait
mov
mov
stc
cwtl
pop
inc
pop
xor
pop
sub
iret
inc
jno
mov
jmp
pop
pop
pop
mov
xchg
jo
cmpsl
pop
and
or
xlat
pop
pop
rclb
push
mov
pop
pop
push
mov
cmpsb
cld
mov
mov
enter
push
shl
les
xor
out
mov
inc
ret
jns
repnz
sub
inc
xchg
stc
insb
fidivs
push
mov
mov
aad
je
mov
cmp
mov
jl
pop
fmulp
lret
jbe
sub
xor
jnp
in
mov
mov
mov
or
mov
nop
js
push
cltd
mov
test
pop
outsl
sti
out
mov
nop
iret
mov
mov
psllw
lahf
movsl
pop
mov
out
jg
stc
adc
xchg
cmc
mov
lret
jmp
mov
inc
pop
mov
jl
dec
pop
outsb
insb
sbb
pop
hlt
xor
neg
hlt
lds
xchg
pop
pop
mov
in
les
sti
pop
inc
add
push
or
jge
or
sar
sub
sbb
sbbl
sub
xchg
sub
xchg
xor
ret
imul
arpl
mov
rclb
push
into
sub
mov
push
jb
rcll
decb
pop
outsl
pop
or
lds
scas
dec
sahf
mov
adc
insl
xorl
imul
in
inc
push
sbb
mov
fisubs
pushf
and
shrl
enter
daa
in
pop
jno
sub
div
daa
or
mov
mov
mov
call
into
dec
pop
or
jmp
ret
movsl
cld
dec
inc
add
mov
jecxz
lret
add
dec
mov
pop
lock
xchg
or
or
mov
xchg
sti
dec
or
and
stc
lahf
or
in
push
jmp
aas
shll
rcrl
xlat
lds
add
fimull
mov
mov
ljmp
xor
mov
call
mov
push
jae
iret
mov
pop
xchg
fcmovu
testl
xchg
and
stc
pop
push
data16
jnp
cmpsl
cld
sbb
stc
mov
jg
std
stos
xchg
mov
inc
aas
jg
add
lea
mov
roll
cs
fsubr
outsl
pusha
xchg
inc
pop
adc
pop
pop
data16
adc
or
sar
insl
pop
and
leave
bswap
or
imul
sub
enter
rcl
rorb
test
and
mov
cmc
mov
adc
jg
mov
bound
inc
aaa
sarl
imul
mov
pop
lock
xchg
test
aaa
xchg
shl
std
mov
cmp
or
cmp
mov
rcll
insb
push
loopne
or
dec
js
xor
out
aad
jb
ret
dec
mov
pop
mov
xor
imul
mov
add
and
imul
xchg
test
icebp
mov
add
cmp
insb
xchg
sub
cmp
xor
inc
mov
mov
iret
xchg
dec
or
jns
cwtl
mov
lcall
pop
mov
inc
sti
cmp
add
fcoml
sub
push
pop
lahf
cmpsl
movsb
fsubr
xchg
inc
xor
ret
jmp
inc
je
std
pop
test
adc
mov
xor
or
fisttpll
in
cli
icebp
or
cmp
xchg
dec
sub
mov
jg
aaa
sbb
xchg
ficompl
out
in
mov
sbb
arpl
fcomps
mov
movsl
mov
sub
call
sub
bound
add
lods
scas
out
adc
jg
pop
mov
loop
sub
outsl
and
lds
xchg
add
inc
mov
addl
add
inc
dec
orl
rcr
pop
dec
adc
adc
mov
arpl
idivl
bound
stc
mov
jbe
and
xor
jle
lret
and
test
bound
cs
test
pop
mov
push
pop
sbb
sarl
stos
and
sub
inc
jle
mov
xchg
add
push
push
stos
cmpl
and
dec
cwtl
aas
je
mov
sti
loope
xchg
in
rorl
cmc
sbb
iret
bnd
mov
cmp
fcmovnb
push
cmp
dec
lea
out
pop
imulb
in
ror
bound
lahf
lret
adcl
in
xchg
xchg
inc
lahf
sub
mov
mov
dec
mov
pop
aad
jne
xchg
outsb
mulb
add
cmp
in
cli
jbe
daa
push
in
xchg
pop
adc
fnsave
pop
jl
dec
mov
insb
aaa
jl
sbb
arpl
jmp
aas
add
orl
jp
sub
lock
add
pop
sub
or
imul
sub
cmpsb
pop
mov
hlt
pop
pop
xor
add
ficoml
pop
add
jnp
adc
push
sti
cmp
mov
aas
sbbb
cmpsb
mov
daa
rcr
pop
mov
add
mov
data16
rep
ret
in
insl
test
push
xchg
test
and
push
and
shrb
fisttps
jl
jp
push
xchg
mov
out
in
fsubl
push
push
dec
ds
jnp
int
scas
pop
mov
pop
rcr
cmp
xchg
sahf
adc
pop
lcall
pop
decl
push
das
stos
lea
pop
test
loopne
mov
adc
in
andl
setae
loopne
add
inc
sbb
cwtl
aam
dec
inc
pop
addr16
ljmp
roll
jg
icebp
imulb
imul
cmpsl
sbb
lret
loope
clc
xchg
sbb
repz
arpl
add
outsl
jns
mov
push
mov
inc
cmp
pop
pop
lahf
test
mov
dec
and
lods
jae
inc
arpl
js
jmp
jae
outsb
scas
js
mov
jp
in
call
sti
imul
ljmp
sbb
push
adc
lods
out
push
sub
add
jge
aas
jmp
arpl
pop
mov
dec
lea
movsb
cmp
loope
push
jmp
mov
xor
pop
popf
mov
pop
das
adc
loopne
sub
fbstp
add
mov
push
je
mov
les
sub
popa
add
cltd
mov
inc
cmp
aad
andl
repnz
cmpl
rorb
inc
int
pop
aas
jl
lahf
pop
mov
outsb
push
mov
sbb
test
cwtl
pushf
fwait
adc
jle
sbb
push
mov
scas
ret
dec
movsl
add
stc
scas
or
mov
sbbl
jge
es
push
cltd
inc
imul
lret
mov
lahf
add
mov
in
iret
push
sbb
outsl
aas
mov
ss
pop
xchg
cmpb
dec
arpl
jle
xchg
pop
add
les
sbb
in
movsl
lahf
enter
adc
nop
lret
adc
adc
xchg
jp
add
dec
ljmp
mov
mull
insb
xor
sbb
outsb
mov
bound
xchg
xchg
and
jae
xor
mov
sbbb
add
mov
mov
xchg
mov
fbld
negl
push
xor
sbb
jmp
or
adc
mov
push
sub
xor
adc
das
cmp
xchg
ljmp
je
ficomps
xchg
push
insl
loop
popl
mov
adc
nop
mov
jg
cmpsl
xor
test
mov
adc
pop
sbb
out
add
jo
test
dec
loope
addb
jle
or
cs
fdivs
clc
negw
inc
inc
daa
movsb
cmp
lods
cld
sbb
rcrl
stc
dec
leave
mov
ja
enter
loop
mov
ret
mov
xor
xchg
ja
push
mov
daa
pop
inc
push
mov
jecxz
je
out
scas
movsl
mov
add
push
mov
pop
adcb
insl
mov
ljmp
sbb
mov
mov
jmp
repz
xchg
scas
cmp
dec
adc
push
sarl
cmp
bnd
push
dec
repz
test
repz
rcrl
jne
int
push
shrl
push
xlat
cmp
mov
int
std
xchg
mov
or
adc
lds
add
pop
add
nop
call
push
jp
test
cwtl
or
rcr
or
add
pop
xor
clc
xchg
sahf
das
pop
dec
mov
sbb
icebp
addl
and
push
fnsave
push
das
pop
ds
fisttpl
test
data16
pop
cwtl
push
adc
pop
push
negl
lods
xorb
dec
push
mov
pop
loop
imul
std
sti
lahf
or
pop
lods
addl
xchg
and
addr16
or
sub
pop
pop
cmpsl
xchg
push
sti
sbb
andb
pop
pop
xchg
xor
rsm
mov
push
scas
and
ja
imul
dec
or
mov
sub
xor
jle
popf
mov
mov
lahf
xchg
push
pusha
cmp
and
mov
outsl
inc
mov
add
push
ljmp
or
xchg
adc
cltd
or
in
leave
popf
pop
push
sahf
hlt
jb
into
stc
xchg
pop
dec
dec
mov
dec
in
pop
push
aaa
jp
mov
or
mov
pop
pop
or
lcall
dec
sbb
add
mov
and
call
sub
pop
jnp
dec
cmp
lods
sub
push
inc
cs
mov
out
cmc
inc
out
mov
ret
pop
mov
jne
imul
movsb
lcall
mov
movsl
mov
xor
push
lcall
xorb
mov
pop
lahf
lcall
cmpb
cli
in
mov
xchg
pop
add
rclb
movsb
pop
movsb
jge,pn
add
stos
or
cmp
gs
aam
into
or
mov
incl
xchg
and
mov
sbb
icebp
sub
add
cmp
mov
lods
or
int3
push
fnstenv
js
mov
dec
sbb
inc
lea
pop
and
cmp
xor
vphaddubd
or
out
ljmp
test
push
cld
scas
mov
xlat
push
fwait
mov
push
outsl
or
jg
or
call
and
mov
push
lea
jp
out
pop
xor
jle
mov
popa
inc
outsl
cmp
xchg
out
lea
int3
rcrl
cmp
pop
pop
xor
push
cmp
dec
mov
lret
mov
pop
inc
insb
jb
pop
std
xchg
cmp
dec
je
fldenv
pop
mov
mov
mov
divl
mov
inc
inc
outsb
into
pop
test
and
out
pop
or
test
add
or
aad
popf
pop
fwait
adc
lret
arpl
jmp
int
mov
mov
xor
push
sarl
mov
add
mov
lcall
loop
sub
lret
cmc
sbb
cmpsl
pop
enter
and
mov
pusha
lods
orl
pop
cmpsl
call
scas
test
mov
pop
aas
mov
xor
dec
jmp
mov
mov
mov
mov
sbb
lods
mov
jge
xchg
or
cli
jecxz
bound
test
pop
jo
loope
or
pop
mov
dec
test
cmp
mov
sub
nop
frstpm(287
test
rol
std
hlt
jns
pop
xchg
fcmovbe
jle
aas
ret
push
push
and
xchg
pop
cld
jg
pop
insl
or
ss
cmp
aam
je
cmp
cmpsl
adc
cmp
cmp
lods
adc
stc
cmp
cmp
enter
jp
ret
xlat
jo
testb
push
push
adc
cmpsb
cli
cli
pop
cltd
dec
adc
mov
add
cli
and
xchg
push
in
ss
dec
insb
insl
inc
jg
add
cmpsb
push
outsl
mov
push
filds
ss
andb
out
hlt
idivl
lea
mov
jnp
imul
gs
std
lret
dec
and
ret
mov
mov
mov
add
cmp
mov
mov
test
icebp
in
insb
subl
inc
mov
mov
mov
inc
jle
outsl
add
movsl
inc
popa
cs
decb
adc
rcr
sbb
pop
aaa
xchg
inc
sarb
fildll
test
pop
add
mov
mov
cli
loop
sub
xor
sti
pop
sbb
test
push
push
ja
lahf
or
mov
pop
mov
imul
add
mov
or
lods
cmp
cmc
pop
xchg
stos
xchg
addb
push
pop
outsl
jo
and
dec
pop
aaa
pop
adc
scas
mov
mov
pop
jno
test
mov
dec
call
jns
sbbb
loopne
push
aaa
fstpt
mov
jl
test
xor
cmpsl
sub
divb
pop
push
xor
jnp
in
ja
cli
fadds
jp
xor
lods
pop
inc
outsl
rcll
pop
stos
push
insb
insb
scas
test
jmp
out
aas
jbe
pushf
fs
pop
sub
xchg
xchg
arpl
cmp
xor
sub
mov
cli
mov
das
cld
in
fnstenv
repz
pop
adc
out
ret
shrl
jbe
in
cmp
cmpsl
jne
inc
das
adc
lods
shr
std
pop
push
pop
lea
test
push
out
pop
add
cld
cwtl
pop
popa
jp
pop
xchg
cwtl
dec
nop
sub
and
and
add
test
or
fisubrs
mov
or
test
sbb
mov
int
aas
test
sbb
xor
outsb
int3
add
pop
in
clc
out
fwait
cmovb
rcl
pop
jno
mov
pusha
mov
imul
jle
out
test
jle
scas
mov
repnz
lods
xchg
cmp
mov
pop
cmpsl
in
jb
mov
lret
push
cmpsb
mov
sbb
or
push
push
in
lods
or
mov
push
popf
jo
mov
call
add
fisubl
sbb
dec
repnz
cmpsl
ret
jmp
shll
in
pop
xor
decb
adc
push
fptan
pop
out
push
cwtl
push
sub
inc
jae
scas
aam
stos
shll
and
xchg
iret
pop
shl
fsubs
lds
and
out
dec
std
xorb
fisttpl
dec
pop
pop
push
clc
jl
fadds
push
pop
fmull
sbb
int3
sti
fidivrs
std
imul
add
cli
inc
pop
call
hlt
mov
stc
mov
shrl
jmp
push
mov
fildl
sub
imul
mov
and
rorb
test
notl
outsb
sub
fwait
bt
add
mov
pop
mov
addr16
iret
cmpb
out
pushf
jge
cmp
fs
mov
dec
cld
jg
or
mov
mov
adc
mov
pop
mov
gs
out
xlat
push
out
and
mov
stos
cmp
test
xchg
es
push
and
cmc
jp,pt
jnp
adc
jb
outsb
aad
mov
out
cltd
push
mov
sbb
xor
lret
cmc
dec
mov
sbb
stos
push
pop
pop
js
repz
out
or
mov
in
lds
fucomi
cmpsb
cmp
dec
and
sub
ja
mov
in
mov
jmp
in
and
loop
sahf
cs
cli
pop
mov
and
scas
out
mov
adc
cwtl
ficomps
fwait
ret
cmpsl
mov
mov
fcomip
in
fsubl
inc
sub
daa
sbb
or
xor
sarb
fwait
enter
and
movb
je
push
fwait
movsb
or
xor
pop
addl
jae
push
stos
shll
test
arpl
dec
add
sahf
xchg
scas
xchg
sar
in
clc
push
or
in
xor
adc
pop
pop
imul
pop
call
push
hlt
cwtl
daa
push
outsb
fstps
or
add
dec
lea
cmp
sbb
and
fwait
leave
scas
lds
fidivs
jecxz
test
jno
loopne
icebp
mov
outsl
sahf
xchg
xchg
ficompl
or
adc
push
fcoml
lret
pop
xor
mov
mov
cli
lret
fldenv
pop
in
pop
shrl
pop
int
js
sti
inc
scas
mov
lahf
mov
adc
cwtl
mov
test
sarl
cli
test
pusha
js
popa
imul
inc
mov
outsl
jecxz
sahf
mov
iret
iret
add
outsb
or
imul
lcall
mov
imul
cmpsb
ret
imul
cs
jmp
lea
fwait
push
insb
and
lcall
pop
lods
push
jle
cltd
out
call
add
inc
cmpsl
sub
push
in
cmp
push
arpl
fiaddl
stos
adc
rcrb
inc
fstps
int
dec
subl
sahf
inc
adc
aas
mov
xlat
in
jnp
fnsave
inc
popl
or
pushf
push
xchg
pop
movsb
lods
cmp
fdivrp
dec
pop
imul
pop
aam
jl
mov
add
mov
pop
repnz
pop
cli
adc
xorl
in
add
mov
lret
mov
stos
inc
fst
pop
addr16
popf
imul
sahf
push
rcl
jle
pop
int
mov
pop
and
lahf
mov
add
aas
xlat
jmp
lea
pop
in
js
aaa
ret
in
mov
mov
aaa
lret
xchg
sbb
pop
cmpsl
rolb
adc
bswap
loop
pushl
sub
ss
cli
mov
leave
jae
push
mov
mov
in
std
mov
lcall
cli
pop
fimuls
jmp
lods
mov
mov
xchg
pusha
in
decb
lods
cmp
xchg
jnp
mov
inc
mov
sbb
movl
mov
cmp
ret
cs
lahf
dec
lret
arpl
pop
xor
xsha256
cmpsb
push
jns
arpl
mov
cmp
cmpsl
jae
xor
jmp
lret
push
in
dec
xchg
cmp
pushf
in
outsl
movsb
push
sub
out
inc
mov
pop
std
adc
mov
mov
cmp
push
add
bound
or
sbb
cld
pop
jmp
xor
inc
rcl
std
xchg
insb
clc
pop
dec
sbb
pop
jno
rorb
out
cmpsb
adc
xchg
sub
fs
dec
movsl
into
dec
xor
xchg
insl
pop
pop
dec
mov
dec
test
lret
xorb
jo
loopne
dec
repnz
cmc
mov
sub
inc
lock
sbb
stos
jbe
stos
or
sti
pop
les
pushf
pop
push
or
mov
daa
cmp
clc
aaa
mov
pop
jo
dec
jg
aaa
into
mov
rolb
fs
sub
and
sahf
sub
out
je
cltd
mov
mov
mov
mov
sti
inc
or
mov
in
ljmp
rcl
in
lods
shlb
inc
sub
call
jo
add
gs
js
and
xchg
data16
xor
out
sbb
mov
sub
jl
outsl
xchg
push
cmc
xchg
lea
fstl
xchg
sar
mov
aad
sahf
sahf
sub
imul
jle
dec
sub
in
iret
push
mov
insl
cs
fcomp
scas
lcall
adc
add
movsb
mov
mov
jbe
test
push
mov
repz
adc
movsb
mov
sub
nop
in
cmp
das
aas
pop
outsl
push
cmp
lret
jle
jg
mov
sbb
testl
pop
adc
adc
jo
loope
int
iret
dec
popf
call
lcall
xorb
cmp
push
dec
mov
mov
mov
dec
shlb
arpl
push
pop
aaa
aas
leave
test
jnp
inc
adc
xchg
je
test
add
pop
pop
jle
inc
adc
iret
fld
add
fistps
adc
cmp
aaa
cmpsb
jp
ds
push
sub
add
imul
shrb
add
and
push
clc
sahf
sbb
mov
leave
inc
test
mov
in
cmpsl
dec
pop
push
cmc
mov
arpl
lods
and
cli
pop
int
push
mov
xchg
add
jmp
xor
add
inc
inc
int
insl
jmp
out
jg
xchg
inc
add
sub
add
in
push
test
fdivrl
ds
adc
mov
vsubsd
loopne
stos
in
ret
or
movsl
mov
adc
xchg
mov
add
fnsave
neg
call
xchg
ds
aam
mov
nop
mov
mov
xchg
insb
or
arpl
ss
test
cmpsw
idivb
dec
xor
mov
or
push
sti
arpl
fs
dec
inc
mov
cltd
inc
jl
pop
add
or
negl
lahf
rcll
inc
pop
push
ret
sahf
fimuls
xchg
dec
sub
add
lods
cwtl
pop
cmp
sbb
lods
out
out
sub
dec
mov
lods
mov
sti
js
shlb
pop
jo
pop
jae
repz
mov
add
sti
movsb
inc
push
int
out
jb
mov
mov
mov
aas
neg
pop
pushf
mov
xchg
add
in
pop
dec
xchg
jo
clc
mov
je
cld
out
xchg
pop
mov
mov
sti
and
cli
pop
mov
and
push
sbb
into
jne
mov
iret
arpl
inc
aam
xchg
dec
mov
jge
movsb
sti
push
pop
pop
ret
lahf
xchg
jb
xchg
pop
pusha
or
and
enter
rcl
in
jmp
ret
fistl
jecxz
xor
mov
push
int3
xor
inc
aam
fisubs
mov
push
mov
or
cmp
mov
insl
xor
je
pop
pop
sahf
dec
das
and
inc
ret
jl
out
mov
iret
testl
push
aaa
sbbl
icebp
adc
jbe
aaa
rcr
pop
xchg
mov
dec
leave
iret
outsl
out
loop
sbb
mov
fbstp
sbb
movsl
lret
xchg
xorb
movsb
adc
aam
test
xor
test
mov
dec
sbb
fisttpll
sbb
addr16
aaa
aas
lahf
mov
repz
and
jmp
push
aad
not
and
push
pop
jle
inc
sub
fistl
pop
push
sub
lahf
es
mov
pop
test
lahf
cwtl
pop
int3
sbb
cmpsl
xlat
mov
xor
ljmp
jp
ret
fdivs
dec
pusha
ret
int
enter
adc
test
jmp
sbb
imul
xor
dec
adc
arpl
sbb
not
loopne
mov
mov
mov
mov
and
push
mov
push
ret
push
cli
dec
pop
notl
aaa
xor
jbe
add
sub
lret
fwait
imul
sub
ret
ljmp
sub
ficomps
aad
nop
and
mov
mov
fldcw
pop
and
xchg
fstpl
adc
outsb
outsl
mov
imul
aas
sbb
add
dec
add
xchg
neg
sahf
sbbb
mov
daa
mov
jge
pop
sbb
pop
jae
jmp
arpl
test
push
inc
shl
cmpsl
or
inc
out
bsf
adc
movsb
xchg
fmul
aad
sbb
pop
sbbb
arpl
data16
int3
mov
idivl
cmp
ret
xchg
call
popf
or
sahf
fcomps
and
or
cwtl
cmpb
jnp
sbb
xor
or
inc
insl
std
xchg
test
inc
mov
outsl
gs
xor
cmp
in
stos
addl
test
aas
out
ja
mov
mov
push
faddl
mov
leave
popa
cmp
xchg
sub
push
add
sbb
loop
mov
fcmovnb
pop
jge
nop
je
pop
enter
scas
es
jp
jecxz
aad
push
out
arpl
loopne
mov
xor
mov
mov
cmpsb
or
push
jge
push
div
or
mov
fidivrs
int
adc
in
sahf
inc
iret
std
mov
add
push
lods
or
push
mov
sub
dec
mov
jb
dec
les
in
adc
stos
es
ror
push
cs
cwtl
mov
lea
dec
testl
add
sbb
nop
pop
repnz
cwtl
mov
pop
pop
es
ror
jno
test
jnp
sti
in
out
cmp
xchg
not
or
push
xchg
test
arpl
pop
lea
jp
int
js
push
pop
mov
jle
mov
inc
ja
sbb
popf
pop
bound
pop
cmpsb
xchg
inc
xor
inc
sti
jbe
and
pop
jno
xchg
push
sub
mov
xor
pop
add
cmp
adc
outsl
cltd
fdivl
fmulp
pop
icebp
push
mov
or
mov
mov
sqrtps
setno
lret
idivb
or
inc
inc
pop
or
bound
cwtl
xchg
sbb
mov
add
leave
fprem1
fmull
dec
shrl
mov
push
or
les
in
cmpsl
dec
sub
dec
mov
mov
inc
mov
test
test
in
fwait
pop
or
cmp
or
inc
popf
in
in
push
test
sbb
in
pop
dec
sub
test
outsb
or
or
cwtl
xchg
xlat
mov
cltd
sti
mov
pop
pop
cmc
mov
jnp
or
jle
imul
and
ret
scas
dec
jg
adc
dec
mov
out
pop
and
dec
hlt
enter
push
push
pop
loope
adcl
jg
addb
iret
in
jne
add
add
lret
roll
cmpb
xchg
xchg
fsubl
sub
vsubss
mov
xchg
add
leave
pusha
mov
or
into
pop
mov
mov
lds
cmp
mov
shll
pop
cltd
scas
sahf
and
aas
mov
inc
pop
adc
dec
dec
dec
xchg
mov
int
negb
jge
jg
mov
fcmovnu
mov
or
je
cmpsb
fstpl
cmp
pop
fisttpll
and
cmpb
popf
add
call
add
lea
scas
inc
sarb
mov
fstps
fmull
xchg
mov
inc
and
lret
sbb
jge
or
mov
mov
jmp
loopne
jg
shrl
insb
jae
mov
jmp
dec
cmp
jae
roll
jmp
rcrw
aas
fistpl
scas
testb
mov
fidivrs
dec
out
adc
rorl
icebp
ficompl
or
ja
test
mov
or
mov
pop
xor
pop
sbb
iret
mov
lods
jg
scas
sbb
push
jno
xor
mov
jle
cld
pop
xor
mov
sbb
sub
test
inc
insl
add
inc
lea
ret
xchg
test
shll
or
mov
sbb
adc
push
mov
sarb
cmc
xchg
pop
aad
sbb
push
pop
pop
add
mov
cld
push
xor
jae
jg
addr16
add
jb
fcmovbe
sub
dec
inc
mov
pop
mov
std
leave
inc
test
pushf
rorb
mov
cmp
pop
xchg
data16
jle
cmp
scas
mov
or
jns
cmpsl
push
jno
sub
push
xchg
or
inc
xchg
repnz
push
xchg
iret
pop
and
js
and
cmp
sarb
dec
cs
out
inc
lahf
pop
cmpsl
pop
mov
xchg
sbb
pop
aas
push
xor
ret
jmp
jmp
add
sub
mov
xor
cmp
in
cmp
add
insb
shlb
pop
sbb
movsl
arpl
imulb
sub
xor
mov
push
fistl
rorl
jns
into
pop
outsb
add
jl
stos
stos
lret
pushf
scas
pop
outsb
adc
jle
dec
pop
mov
loop
and
push
test
pop
jae
lcall
mov
imul
movb
lea
stc
or
inc
in
jmp
shll
negl
push
loopne
orl
adc
aam
xchg
xor
jb
insb
fnstcw
add
pop
pusha
loope
idiv
lret
sub
leave
pop
push
add
push
cmp
jl
mov
out
mov
xor
adc
lods
cltd
or
xchg
out
cld
add
inc
aaa
lret
cmp
and
inc
sub
enter
xchg
and
movzbl
sub
mov
int
fs
jae
aas
lods
push
mov
push
mov
jl,pt
add
xchg
sti
jnp
pop
jge
rclb
or
mov
push
inc
shlb
pop
mov
pop
ret
mov
pusha
and
and
andb
dec
adc
mov
sub
call
mov
mov
je
int3
cmp
and
mov
outsl
mov
imul
inc
or
ret
insb
sbb
sbb
testb
sbb
lahf
mov
mov
xor
xchg
adc
out
and
fstpt
data16
repnz
ret
dec
dec
pop
jne
inc
es
dec
popa
xchg
jno
dec
outsl
gs
jo
out
add
pop
mov
mov
loop
inc
jmp
popa
outsb
pushw
pop
mov
mov
mov
mov
pop
hlt
mov
sahf
dec
into
pop
jecxz
std
fs
mov
loopne
rclb
std
shll
mov
adc
outsl
imull
pop
gs
dec
lahf
jnp
ffreep
sub
out
jne
sete
and
dec
pop
mov
std
add
fcmovu
sti
fildll
repnz
mov
sbb
fcoml
ret
fisttpll
lock
jl
inc
adc
mov
cmc
pusha
gs
xchg
imul
pop
cmp
pop
in
bound
insb
or
sbb
pop
adc
ljmp
arpl
bound
mov
and
pop
pop
cs
fcmovnb
xor
mov
ja
lcall
pop
popf
jmp
adc
pop
aaa
cmp
pop
aas
lds
lods
jns
sbb
xchg
fmul
sahf
nop
icebp
in
jge
movb
push
add
sub
fnstsw
ret
imul
cli
cmp
push
idivb
push
and
inc
rorl
cmp
call
loop
cltd
dec
mov
out
jle
mov
or
xor
cmpsl
pop
mov
mov
cmp
mov
mov
mov
or
test
or
inc
shll
adc
test
hlt
aam
cmp
xor
mov
push
mov
mov
test
jmp
fnstenv
fstl
cmp
stc
pop
sub
mov
or
test
mov
out
cvtdq2ps
mov
mov
cmp
repz
xchg
jle
dec
mov
ja
ret
mov
cmp
sub
adc
sti
mov
mov
xabort
dec
pop
dec
leave
add
shll
add
rcll
lods
lds
popa
rorb
or
add
pop
cmp
add
dec
sub
pop
imul
imul
cmp
popa
incb
arpl
add
cli
out
xchg
outsl
add
mov
pop
not
push
lods
loope
sub
pop
jae
xor
pop
xchg
imul
sti
aaa
cld
pop
or
mov
cs
hlt
cmpsl
adc
ficomps
pop
adc
mov
xchg
xor
into
insb
stos
fbld
mov
les
jmp
incb
pop
ret
loope
mov
jno
ret
pop
xchg
add
insl
pop
fs
xor
fsubl
sbb
lods
dec
stos
sub
nop
jmp
and
cwtl
popa
inc
cmp
out
roll
fmull
adc
pop
inc
call
inc
mov
inc
lock
repz
in
pop
fdivrs
out
sti
sbb
fstpt
mov
test
mov
xchg
clc
or
jne
or
pop
jp
dec
ret
ror
or
dec
sti
mov
inc
stos
jne
iret
fprem1
sbb
outsb
stos
mov
pop
insb
push
push
fimull
pop
test
jp
cmpsl
adc
mov
xchg
call
mov
jno
frstor
xor
push
lods
mov
mov
orb
dec
pop
xor
xor
add
sub
test
fisttpll
sbb
or
jg
arpl
sbb
aas
pop
or
daa
arpl
mov
stos
push
xchg
cmp
cmp
out
shll
pop
out
push
xor
leave
lahf
adc
lea
fistpl
jecxz
adc
andb
lret
sti
iret
fisttpl
jbe
sub
sbb
insl
idivl
mov
jle
inc
pop
enter
and
pop
fsubrl
mov
push
out
sahf
xchg
mov
add
fdivrs
jne
mov
cli
mov
pop
jbe
adc
mov
stos
or
cmpsb
pop
mov
adc
arpl
mov
ret
clc
iret
xchg
adc
fldt
scas
dec
dec
mov
add
mov
jg
sahf
pop
jl
hlt
push
pop
mov
notl
dec
stc
mov
push
push
adc
jae
aad
stc
pop
clc
repnz
cwtl
xlat
fimull
fs
mov
fdivrs
mov
lea
mov
mov
insl
repz
lds
pusha
in
and
fstps
cmp
cmp
repnz
sub
jmp
add
and
pop
stos
mov
cmpsb
mov
iret
mov
push
push
sbb
inc
rcrl
mov
leave
sbb
cli
movsb
add
popf
adcl
in
jns
mov
hlt
fcomi
popf
mov
lods
stos
mov
inc
scas
adc
pop
sub
xor
rcr
lods
andl
lock
movsl
cld
fistps
in
or
out
cmpb
sbb
fldt
dec
pop
sub
clc
mov
loopne
sahf
out
mov
inc
in
xchg
fwait
pop
cmp
sahf
push
pop
mov
fcompl
cmpsb
inc
dec
xchg
in
in
inc
sbb
popa
mov
and
xor
leave
in
jb
lret
and
push
loope
sub
pop
fsubs
cld
dec
pop
or
mov
mov
aaa
sarl
xchg
and
inc
shr
bound
mov
call
enter
mov
pop
xor
add
js
jnp
je
rcrb
into
out
cmc
pop
fdivrl
sbb
pop
xchg
ja
inc
pop
outsl
fisttpl
push
add
ret
das
lahf
and
ret
cltd
in
scas
imul
jne
cli
jne
lds
inc
cmpsb
inc
sub
jae
pushf
cltd
mov
ljmp
dec
into
mov
cltd
int
mov
mov
cmp
scas
sti
orb
adc
call
cmpsb
cmp
mov
lcall
mov
in
pop
add
aas
push
pop
mov
cmp
test
je
adc
add
mov
pop
adcl
pop
cwtl
in
inc
popa
pushf
and
cmp
dec
out
mov
fisttps
loop
pop
pop
jns
gs
jbe
jbe
xchg
xor
jl
outsl
pop
inc
pop
fld1
mov
mov
pop
push
jg
std
push
fildll
sub
sbb
xchg
out
push
jle
int
fildll
test
in
lea
inc
mov
jecxz
mov
imul
jg
out
sbb
pop
movsb
mov
mov
pusha
test
mov
pop
jnp
outsl
pushf
data16
sbb
roll
sarb
lahf
int
movsl
dec
dec
lods
cli
gs
std
mov
pop
xor
mov
loope
inc
testb
into
cmp
sbb
decb
pop
pusha
add
and
pop
stos
cmp
push
jp
cltd
push
pushf
std
mov
mov
sbb
aaa
pop
orl
push
add
lret
loop
sbb
jne
ret
mov
xchg
cltd
mov
lds
cmp
pop
or
sbb
aaa
mov
aas
and
xor
clc
dec
scas
push
imul
sti
adc
push
inc
aaa
aaa
jae
idiv
shll
lret
into
mov
pop
mov
sbb
cs
je
lret
hlt
dec
jns
pop
loop
dec
hlt
mov
mov
loope
jae
mov
enter
std
mov
sar
lret
mov
repz
iret
insb
lea
clc
fwait
push
jne
inc
das
or
cwtl
or
sbb
rcrb
jge
pop
mov
stos
repnz
jnp
sbb
rolb
mov
jecxz
mov
add
mov
shl
int
ljmp
imul
lods
aaa
pop
int
add
daa
out
lods
incl
mov
add
pop
lcall
push
aas
or
iret
call
iret
xchg
lds
add
mov
adc
pop
and
ret
data16
cmc
xor
jl
jp
rclb
je
mov
sbb
sbb
je
pmullw
jne
popf
mov
lahf
sub
out
mov
xchg
mov
pop
aas
push
fmuls
loop
imul
inc
add
movsb
pop
add
hlt
jb
pushf
pop
push
mov
std
jnp
mov
sub
repz
xor
insb
fisubrl
pop
dec
jb
nop
outsb
sahf
inc
and
push
movsl
sub
cmp
inc
out
cmp
add
mov
jne
ret
cmpsb
loopne
adc
add
mov
jge
mov
pop
lock
mov
lea
stc
pop
mov
or
in
push
fistpl
icebp
lods
jnp
mov
push
adc
mov
inc
or
insl
xchg
or
jae
xchg
shll
xor
cmp
into
cmpsl
pop
jecxz
movsl
inc
ret
mov
test
push
test
xor
jmp
jae
pop
test
sbb
adc
jmp
pop
nop
hlt
xchg
push
jl
and
mov
pushf
cmp
adc
inc
cli
lock
or
fiaddl
fcompl
icebp
inc
jbe
xorb
pusha
xor
fwait
jle,pn
mov
outsl
popf
dec
mov
movsl
clc
add
clc
pop
test
sti
loope
mov
push
fidivrl
add
adc
and
test
mov
mov
fwait
or
maxps
jp
out
push
xor
out
nop
fmull
or
mov
cmp
hlt
push
ja
push
dec
xlat
inc
add
outsl
cmpl
in
pop
loope
pop
push
or
popa
stos
adc
pop
ss
pop
je
outsb
fcmovnbe
inc
inc
mov
cmpb
xor
adc
cmp
add
call
out
outsb
dec
lret
mov
mov
xchg
push
in
in
pop
pop
int
icebp
test
jge
orl
int
jecxz
push
cld
xor
inc
cmpl
pop
fidivs
aad
push
outsl
and
and
ret
sub
mov
rcrb
inc
adc
pop
cmc
stc
push
outsb
js
push
popa
cmp
mov
pop
push
mov
cmp
pop
sbb
mov
adc
add
fisttps
dec
xchg
out
lock
fs
leave
push
out
call
lods
rolb
and
sbb
shl
xor
dec
cltd
add
fistpll
or
test
and
or
inc
cmp
fidivs
cmp
jb
sub
cs
xor
and
add
inc
imul
xor
sbb
stc
pop
mov
pop
out
sub
mov
pop
add
outsl
ret
lret
mov
pop
arpl
lea
je
sub
mov
pop
cmp
leave
dec
insb
xlat
mov
jg
mov
add
cltd
iret
pop
sahf
mov
shl
test
cmp
ficompl
fsub
ffreep
pop
rorl
adcl
mov
add
js
lret
aad
push
push
mov
enter
mov
loope
mov
and
inc
pop
dec
aad
xor
scas
mov
cmpsl
dec
hlt
arpl
mov
scas
adc
sbb
popa
lahf
out
mov
sbb
mov
fmul
fstpl
imul
icebp
jle
stos
fcomp
cmp
and
enter
fstps
and
cld
mov
call
scas
cwtl
lea
jmp
xchg
xlat
stos
je
or
aam
pop
xchg
mov
push
jmp
inc
and
fldcw
gs
mov
dec
adc
mov
cmpl
addr16
iret
test
ss
add
popa
cmpsb
testb
cmp
or
cmp
ficomps
pop
jno
pop
gs
pop
mov
negl
cli
dec
pop
repnz
repz
sub
and
lods
out
mov
xor
sahf
dec
or
push
mov
adc
pop
mov
pop
adc
adc
int
push
xchg
enter
and
jbe
cmc
subb
mov
js
mov
xchg
aad
inc
sti
sub
insb
lds
mov
clc
enter
outsl
or
aas
xlat
xor
inc
lcall
test
shl
andl
iret
mov
sbb
call
dec
pop
ret
jns
lret
dec
xor
scas
sbbb
stos
mov
mov
adc
inc
addb
es
add
stos
roll
in
and
and
insl
test
adc
sbb
pop
and
arpl
sti
sbb
pop
sbb
sub
adc
fwait
pop
cmp
andl
add
dec
sbb
out
mov
sbb
mov
add
inc
out
or
cmpsl
mov
add
lea
mov
dec
into
clc
scas
pop
popa
inc
push
outsl
push
adc
pop
and
push
mov
mov
mov
nop
jne
and
or
mov
roll
inc
std
dec
adc
add
mov
mov
test
lret
lds
rep
sub
arpl
and
mov
shll
mov
mov
xchg
ss
xor
mov
pushf
or
mov
pushf
push
aaa
sub
rcl
f2xm1
sahf
sub
into
dec
xor
pop
sarl
dec
add
pop
pop
xor
mov
mov
and
pop
pop
mov
fnsave
xor
out
pop
pop
mov
das
sbb
xchg
movsb
clc
ficompl
and
mov
mov
dec
pop
sub
fdivrl
aam
loopne
add
pusha
loope
loop
pop
push
sbb
scas
add
popa
push
fisttps
mov
frstpm(287
xchg
ss
hlt
mov
lock
and
mov
pop
add
mov
lods
std
pop
lcall
cmc
or
mov
jne
xchg
fdivl
mov
fisubs
jge
jecxz
popf
mov
lret
stos
mov
out
out
fcomps
mov
sub
sti
jmp
mov
xlat
pop
pop
test
dec
pop
cmpsb
mov
out
xchg
mov
jns
pop
pop
inc
fidivrs
inc
flds
aam
push
and
push
sub
jg
jno
adc
test
ret
push
pop
xor
xor
rcl
ret
or
enter
outsl
lea
lods
iret
stc
bound
notl
sub
fsubrl
cwtl
mov
iret
pop
ds
stos
pop
pusha
in
imull
enter
add
pop
ss
in
jg
inc
push
pusha
push
arpl
aam
aam
dec
in
mov
dec
dec
out
mov
xchg
out
aad
shlb
mov
stos
cmp
sti
jg
fdivrl
jl
pop
inc
into
jns
clc
out
ret
in
adc
shrl
push
fwait
repz
lret
inc
stos
lock
pop
mov
dec
dec
test
ret
jns
jp
and
arpl
pop
pop
loopne
inc
fildl
popa
das
stos
cli
lods
mov
sub
fstpl
xchg
popa
jg
sbb
bound
pop
and
leave
inc
xor
xchg
mov
or
lods
adc
out
icebp
sub
and
test
sbb
cmp
mov
and
push
leave
sbb
mov
push
pop
jnp
arpl
ret
mov
data16
mov
das
cmp
sbb
stc
aad
aaa
ljmp
mov
dec
pusha
negl
xchg
repz
es
les
popa
int
fs
stos
and
jp
or
push
out
pop
aad
mov
add
mov
add
pop
in
clc
mov
pop
jge
movsl
gs
shlb
jbe
ret
fsubrs
sub
aaa
sbb
sub
lret
jle
les
test
ret
mov
out
mov
mov
clc
shll
add
fadds
adc
pop
mov
out
or
xor
jl
orl
mov
test
cmpsl
frstor
push
dec
inc
shrb
mov
out
inc
popf
add
jnp
stc
daa
test
push
int
or
in
scas
push
sbb
or
pop
test
mov
cmpsb
rorl
pop
lahf
mov
jle
cmp
insl
push
jmp
or
mov
scas
or
pop
scas
cmpsb
outsb
cmp
aam
xor
mov
subl
pop
clc
inc
stos
insl
and
test
lock
pop
adc
jnp
sub
fiadds
stc
push
or
in
rorw
jecxz
jo
push
pop
jnp
testb
push
inc
cld
xor
imul
pop
jg
out
pop
dec
testl
jge
lods
jmp
fwait
icebp
test
adc
mov
xchg
out
inc
test
or
fisubrs
cli
loope
popa
adcb
adc
test
bound
ljmp
testb
fldcw
into
and
jle
pop
in
cltd
add
xor
roll
js
mov
out
enter
mov
imul
cltd
pop
push
jnp
add
shr
mov
icebp
dec
gs
mov
and
inc
mov
leave
out
or
repnz
loope
or
in
in
jge
push
sahf
popf
lea
sub
push
sub
std
push
mov
and
adc
xor
jmp
pop
pop
aad
sub
adc
sti
add
clc
mov
fwait
test
punpckldq
and
enter
into
rolb
pop
rcll
fucomp
imul
cmpsl
rclb
add
jb
jne
insl
and
xchg
fsts
lahf
mov
mov
insb
out
aaa
arpl
insb
rcl
pop
push
pop
out
add
call
push
mov
pop
ret
call
add
xchg
jne
pop
add
testl
or
mov
jecxz
popf
mov
add
adc
loopne
outsl
sti
mov
and
sub
fnstsw
into
cmp
mov
cli
add
mov
out
mov
adc
inc
jle
mov
cmpb
mov
mov
and
cmpsb
sahf
push
movb
das
call
repnz
sbb
mov
or
repnz
cmp
mov
push
inc
sub
inc
mov
fistl
outsb
imul
sub
mov
pop
cmp
pop
jmp
lds
lea
ret
sbb
push
jmp
mov
pop
movsb
jecxz
mov
and
sbb
jne
js
outsl
testl
push
and
push
pop
and
movsl
in
ret
push
jmp
sbb
roll
popa
shll
inc
lret
cmp
pop
sub
adc
mov
cmc
pop
mov
jns
inc
popf
sbb
data16
insl
push
mov
int
jecxz
cmp
or
arpl
sub
dec
sti
push
imul
das
aaa
pop
push
mov
je
mov
rcr
mov
mov
inc
divl
pop
stos
push
arpl
add
jge
push
test
jbe
mov
dec
test
lret
xchg
mov
rorl
jg
xlat
cli
subb
aaa
hlt
stos
sbb
pop
xor
jno
and
add
cmp
cli
pop
pop
jl
pop
dec
sti
jle
pop
adc
out
fcomp
out
add
jbe
pop
fwait
lock
and
test
sub
pop
cmp
pop
sbb
rorl
mov
lea
and
ljmp
adc
push
mov
add
mov
stc
les
clc
and
lds
aam
std
mov
and
xor
adc
add
das
mov
std
fwait
int
flds
lret
dec
inc
and
inc
bound
test
lcall
loope
rcrl
in
pop
lcall
clc
rclb
cmpsb
add
mov
iret
or
ljmp
jno
xchg
lret
xor
dec
aad
push
inc
out
pop
pop
clc
push
out
sub
inc
outsl
mov
mov
dec
jmp
stos
fldcw
inc
enter
sbb
push
cli
ficomps
das
mov
outsl
out
jge
mov
cs
cld
mov
inc
push
sub
lret
mov
mov
jno
stos
ds
mull
sub
push
sbbb
notl
jg
push
sbb
mov
pop
es
cltd
es
lahf
sub
sti
adcb
lea
outsl
es
adc
push
add
xchg
fisttpll
adc
aad
je
sbb
dec
pop
pop
jle
dec
push
call
inc
mov
imul
out
xchg
add
inc
sbb
frstor
jmp
jp
xor
fucomi
ret
xor
jle
mov
inc
hlt
mul
add
inc
pop
test
inc
jo
lcall
icebp
sub
push
fstl
mov
add
fstps
inc
pop
add
aas
and
pop
aam
lret
inc
sbb
popa
fdiv
stos
jg
pop
or
add
loope
or
fiadds
inc
in
cli
fstp
pop
sbb
cmp
sti
sbb
add
pop
sbbb
push
adc
rclb
dec
dec
sub
es
pop
decb
aam
xchg
outsb
in
in
cli
mov
daa
aam
add
xchg
or
call
sub
dec
sub
mov
push
popl
mov
push
out
xchg
fst
mov
mov
inc
incb
popa
out
pop
cmp
add
lret
enter
stc
mov
cli
add
jl
aas
rolb
add
iretw
mov
int3
jecxz
ret
mov
mov
push
fldl
negl
jp
jle
cmc
mov
test
cmp
cltd
mov
notl
xor
dec
sahf
mov
or
decb
xchg
je
sbb
jmp
mov
subb
sarb
mov
jno
into
sbb
push
lcall
push
mov
push
pop
adc
add
aas
sti
push
gs
pop
mov
push
jg
aam
add
add
clc
pop
and
and
sbb
ja
mov
std
in
inc
das
lea
push
fistps
in
int3
cmc
push
ds
and
xor
rcrl
stos
cmc
push
ret
xchg
in
mov
xchg
gs
jmp
pop
adc
iret
ret
int
fiaddl
in
scas
mov
stos
pop
icebp
lahf
and
pop
lea
xor
and
ret
jg
popf
imull
cmpsl
mov
in
loopne
pop
mov
cld
outsb
ret
or
sub
mov
and
or
inc
or
cltd
mov
sbb
pop
adc
cmp
and
test
scas
sahf
dec
sbb
fdivrp
std
push
fidivl
out
pop
or
mov
insl
inc
or
inc
sub
addr16
clc
mov
mov
mov
mov
gs
ss
push
jnp
mov
mov
or
pop
aad
mov
push
mov
xchg
dec
fildl
outsl
insb
divl
jbe
xchg
push
rcrl
mov
pop
lods
pop
or
pop
xchg
arpl
jg
pop
or
mov
je
pop
or
lock
loopne
jb
ja
xchg
lds
push
sbb
jae
mov
adc
loope
push
movsb
pop
inc
xlat
or
lods
icebp
cmpsl
mov
mov
cmpsl
pop
or
lds
jns
dec
push
xor
ret
push
data16
loop
rcrb
fisttpl
cmp
mov
sub
hlt
dec
icebp
shll
adc
insb
popw
jl
addr16
repnz
mov
mov
pop
xchg
mov
cltd
ljmp
repnz
fcmovne
aad
lcall
rcll
inc
pop
lods
in
adc
ja
mov
cs
mov
jmp
add
pop
cmp
xor
jmp
movb
pop
int
addl
add
lcall
sub
stc
pop
sub
pop
rcl
int3
jle
mov
dec
mov
jb
cwtl
dec
stc
pop
mov
aam
outsb
jbe
icebp
pop
mov
and
jne,pn
lahf
sti
in
andl
lret
hlt
xor
mov
call
mov
jne
and
mov
xor
push
fsqrt
jg
fldt
pop
sub
add
sahf
sarb
lcall
mov
js
aas
pop
sub
mov
jle
adc
inc
std
rcl
and
fadd
test
mov
loop
fisubl
outsb
xlat
je
pusha
adc
pop
fstps
cmc
sub
push
fs
aad
adc
dec
xlat
push
push
fs
cmpsl
repnz
ficomps
movsl
iret
mov
aam
aaa
mov
imul
jp
jg
push
daa
dec
testl
dec
pop
test
adc
stc
roll
loop
pop
mov
or
popf
cmc
imul
cwtl
mov
pop
outsl
lds
sbb
mov
and
sti
sub
pop
mov
daa
push
clc
jbe
shrl
cmp
sub
adc
scas
orb
sub
loop
pop
xorb
cs
leave
push
xchg
jmp
out
sub
adc
fisttpl
jle
cmp
clc
pop
lea
aas
push
daa
out
xchg
inc
sbb
dec
into
aam
adc
pusha
jg
sub
pop
adc
xchg
push
jp
iret
lret
inc
dec
cmc
pop
movsb
and
pop
arpl
rcr
add
mov
mov
lods
jne
in
pop
xor
or
mov
addr16
add
into
pop
aad
adc
data16
pop
rol
aas
inc
iret
pop
inc
jle
dec
jb
xchg
cld
jns
int
sarl
xor
jge
mov
xchg
out
jg
push
imul
sbbl
mov
ret
pop
or
xor
pop
out
pop
or
push
pop
mov
adc
ljmp
es
lcall
pusha
add
mov
add
sbb
gs
sub
shll
mov
jle
xor
xchg
xor
lahf
test
in
shll
or
pop
std
jbe
int3
shll
mov
fsubp
push
leave
test
mov
leave
aas
pop
lcall
mov
mov
mov
jbe
jne
sbb
ret
mov
mov
je
push
imul
call
lds
sbb
lcall
inc
sbb
out
test
cmp
mov
cld
cmp
add
and
aaa
xor
pop
dec
cmpsb
ja
out
test
cmp
pop
mov
mov
jmp
or
decb
test
inc
pop
lret
data16
push
cmpsb
in
or
out
jle
dec
mov
leave
cmp
push
inc
in
inc
and
add
lods
mov
int3
div
sub
add
cld
pop
pop
push
in
loope
addr16
mov
inc
pop
faddl
lcall
sbb
sub
xchg
pop
mov
sahf
out
shrl
or
call
xchg
push
cmpsb
cmp
mov
insb
dec
mov
in
lret
pop
push
and
cmp
scas
pop
shlb
mov
aam
sub
ljmp
pop
xchg
jmp
cmp
pop
dec
inc
test
add
ds
dec
pop
repnz
imul
dec
push
adcb
aaa
pop
sub
pop
sti
lret
fwait
pop
test
inc
sbb
popf
cmpsb
icebp
xor
sub
into
pop
idivl
dec
pop
add
inc
mov
mov
sub
push
mov
cmc
jle
leave
sti
adc
scas
dec
in
pop
mov
push
rcrb
mov
in
pop
test
xorb
push
frstor
sahf
xchg
pop
jns
divb
ljmp
push
and
mov
cmpb
pop
imul
insb
insl
sub
lods
dec
sahf
pop
repnz
mov
push
out
xor
shrb
and
xchg
lock
cmp
adc
test
out
repz
sbbl
or
jg
aam
pop
adc
xor
cmp
leave
int3
xchg
fsubs
jl,pt
sub
xchg
shrb
xchg
adc
fisttpll
jne
cmp
loope
es
jae
xor
jae
lahf
enter
xor
pop
pop
scas
add
int3
mov
add
push
xchg
cmp
mov
mov
mov
sbb
xchg
mov
popa
sbb
imul
orb
stos
gs
xchg
push
jg
xchg
mov
push
mov
in
loopne
pusha
mov
aas
or
sub
push
inc
sub
std
cli
pop
aad
loop
pop
or
mov
fbstp
es
adc
or
push
movzbl
push
add
pop
lahf
orb
sbb
out
mov
add
mov
dec
or
out
jnp
sbb
pop
jle
sbb
and
and
test
cmpsl
cld
popf
sub
fs
jge
mov
and
sub
mov
jg
iret
mov
idivb
leave
iret
mov
and
cs
sub
mov
cmp
mov
jb
jmp
mov
pop
sub
dec
js
mov
rcrb
sahf
or
or
imul
mov
iret
pop
mov
das
ljmp
movsb
or
es
mov
cmp
mov
pop
cmp
imul
jle
sub
pop
inc
bound
dec
arpl
sbb
add
jb
pop
sub
cwtl
int
dec
ficomps
mov
push
jle
xchg
insb
sbb
jp
imul
and
lds
std
int
sub
xchg
loopne
xchg
cld
lods
incb
mov
push
mov
scas
ret
imul
push
xchg
ret
sub
pushf
pop
sbb
rclb
mov
and
sub
ret
fs
scas
xor
stos
or
mov
js
pop
repnz
jge
fistpll
pop
andl
xor
aad
les
push
cld
mov
fcoml
scas
ficomps
dec
xchg
mov
in
push
lods
jno
add
inc
mov
add
pop
in
xchg
dec
push
jmp
jecxz
pop
fisttpll
jns
fsubr
inc
mov
add
test
push
mov
pop
lret
pusha
adc
push
hlt
pop
stos
and
cmp
add
daa
loopne
in
incb
cli
xor
cltd
dec
mov
lods
and
sbb
dec
mov
shll
push
aad
sar
andb
sbb
pop
jge
lret
jae
dec
and
jl
push
mov
jae
test
push
xor
rcrl
insb
in
gs
rcr
or
lock
js
jae
popf
out
test
popa
push
ret
mov
sti
inc
jge
add
orl
jle
pop
mov
cli
fxch
push
ficoms
insb
or
mov
notl
loopne
lahf
mov
loopne
sahf
mov
aad
or
cmpsl
xor
jge
cwtl
scas
shr
push
pop
lret
ret
les
mov
ret
fld
cltd
insl
cmp
add
adc
jbe
stos
or
and
add
add
inc
subl
notl
pop
adc
insl
dec
jecxz
add
dec
or
mov
ss
sub
xchg
jb
inc
lds
scas
push
int3
iret
pop
arpl
movsb
ss
pop
mull
es
push
adc
cmp
adc
and
pushl
testl
push
sub
mov
push
xchg
loope
cltd
addr16
mov
cmp
hlt
mov
mov
xchg
icebp
in
fwait
pop
popf
mov
pop
cmp
cltd
fnstsw
imul
arpl
jne
dec
loopne
push
lcall
xlat
jle
mov
xor
stos
pop
in
jno
iret
repnz
jo
mov
mov
inc
fnstsw
rcr
out
xchg
sub
xor
sub
lahf
stc
push
push
out
cmc
add
adc
dec
or
arpl
mov
std
sbb
es
shl
push
ja
lea
jne
fcoml
sub
pop
sub
idivb
pop
sbb
pop
inc
jns
popa
std
or
ret
cld
pop
ret
int
adc
mov
pop
add
cmp
cmpsl
aas
add
pusha
and
push
sti
pop
add
ffree
inc
jg
sbb
xchg
inc
aas
movsl
pop
pop
in
rcr
jle
sub
andb
adc
and
cmpsb
dec
ret
js
out
fcoml
push
leave
fld
pop
mov
xchg
mov
rcl
inc
arpl
dec
fisttpll
fiaddl
stos
sti
sub
mov
imul
mov
rorl
les
pop
mov
adc
ficompl
mov
mov
rorb
mov
mov
fnstenv
push
and
in
or
scas
aam
cmc
sti
and
scas
mov
sub
jns
andb
rorb
loopne
imul
fdivr
aam
add
add
fcompl
fs
mov
mov
sbb
push
dec
push
cmpsb
fistl
inc
fs
insb
scas
cltd
pop
outsl
xchg
mov
adc
mov
xor
test
mov
or
rcll
jb
sub
add
cmpsb
rorb
mov
movsb
fcoml
mov
adc
pop
cmp
sti
sti
or
pop
adc
cmp
stc
je
sbb
or
aaa
xchg
sub
insl
das
add
push
aaa
adc
insb
outsl
xorb
mov
jg
mov
inc
mov
jle
pop
mov
mov
test
pop
pop
and
jle
cs
push
cmpb
dec
mov
mov
fcomps
popf
mov
insl
test
xchg
pop
sub
or
jle
dec
cmpsb
movsl
or
cmp
mov
xchg
xchg
mov
inc
adc
rcl
je
xor
adc
add
xchg
aaa
inc
cmp
in
mov
cli
mov
rcl
pop
sub
sub
sbb
sahf
inc
xor
pop
sbb
cmpsb
jns
xchg
in
mov
ljmp
mov
or
fcomi
sbbb
adc
sbb
in
or
rcrb
pop
mov
test
sub
push
and
popf
clc
mov
imul
aad
pop
cmpsb
movsl
lea
pop
xor
adc
mov
xchg
jno,pn
mov
ja
popa
js
adc
popf
pop
mov
gs
sbb
icebp
imul
dec
jno
mov
jg
not
adc
aaa
std
dec
andb
sub
inc
test
pop
cmp
dec
in
pop
mov
mov
add
dec
lea
inc
mov
jg
pop
shlb
out
pop
mov
sbb
add
insl
cmpsb
mov
dec
imulb
loope
fsts
xchg
inc
aas
icebp
lds
insl
rcr
mov
into
xchg
sbb
popa
mov
push
cmp
sub
ret
cli
pop
mov
push
jo
into
pop
adc
sbb
xchg
mov
xchg
push
out
xor
lret
cwtl
adc
jae
cmp
xchg
jb
pop
sbb
sub
rcrl
mov
xchg
neg
inc
jle
pop
xchg
in
in
sahf
add
xchg
outsb
add
pop
icebp
mov
mov
pop
sbb
in
sar
loope
push
pop
lret
arpl
std
hlt
adc
pushl
sbb
mov
fs
ret
aad
push
mov
sti
repz
mov
stc
in
adcl
adc
inc
daa
add
cmp
sbb
mov
jg
xlat
pop
mov
add
lcall
js
lds
pop
cmp
sbb
mov
insl
scas
mov
lea
out
sbbb
stc
xorb
pop
nop
test
imul
fdivrl
push
fs
fnstsw
jg
mov
cmp
rcrl
jo
mov
test
and
jge
sub
xor
jmp
data16
and
flds
mov
xchg
xchg
jo
sahf
mov
lods
in
cmc
inc
or
rcrl
fwait
mov
mov
jge
leave
sub
scas
stos
call
or
xchg
test
add
inc
adc
mov
jne
clc
pop
scas
cmpsl
xor
pop
scas
std
mov
inc
xor
mov
lods
adc
int3
mov
decb
pop
mov
insl
data16
shlb
in
and
cmp
mov
xor
aaa
insb
fisttpl
fistps
add
or
cmp
mov
scas
data16
arpl
push
inc
fnstenv
add
mov
jmp
vsqrtps
dec
icebp
jg
xchg
mov
enter
jmp
pop
push
add
adc
iret
pop
jo
xor
aam
iret
clc
rcrb
out
pop
rcrb
mov
sub
das
sub
push
ja
fisubl
scas
add
cmp
pop
sub
pop
stos
adc
add
shll
mov
rolb
dec
lcall
and
push
adcb
dec
scas
jmp
popa
sti
or
and
fnstsw
test
xchg
inc
ss
jmp
mov
scas
push
jnp
mov
cld
inc
pop
enter
es
int
ficomps
mov
outsl
in
jp
jmp
xchg
fldenv
decl
cmpsl
lock
ret
ja
inc
sub
repz
mov
cmpsl
cmp
cmp
out
jecxz
imulb
fmull
sahf
lea
jg,pt
sbb
push
pop
push
jb
mov
xlat
out
mov
dec
adc
sbb
rcrl
or
in
mov
pop
xchg
test
push
pop
mov
cmpsb
sub
lcall
push
fucomi
loope
jbe
idiv
stos
mov
mov
adc
pop
mov
cmp
mov
mov
xchg
in
add
xchg
jl
aam
je
xchg
scas
mov
xchg
mov
mov
dec
lret
pop
add
pop
mov
pop
xor
and
mov
xor
xchg
jnp
mov
pop
push
push
loope
pop
xchg
jae
mov
dec
je
mov
sbbl
and
or
cmp
mov
imul
ja
into
lret
sarb
jbe
fists
cmp
or
dec
lods
pop
dec
aad
inc
fdivr
mov
mov
jns
fsubrs
sub
dec
push
fwait
mov
sbb
fisttpl
xor
jle
imull
shll
jo
aad
pop
jecxz
je
cmpsl
aas
imul
add
mov
pop
adc
dec
push
popa
imul
stos
in
movsb
or
mov
fbstp
xchg
lods
mov
adc
push
dec
bound
mov
dec
mov
inc
xchg
rorl
add
pop
xor
sbb
sarb
adc
xchg
subl
jl
pop
addr16
mov
clc
xchg
or
and
dec
negb
maxps
mov
xchg
xchg
xchg
add
jp
sbb
mov
roll
pop
insl
push
inc
sbb
cmpl
or
sbbl
fidivl
out
pop
cwtl
cmp
bound
cld
repz
cmp
dec
xor
xchg
inc
push
jns
add
scas
cmpsl
pop
xor
ljmp
sub
mov
stos
adc
ret
in
pop
dec
mov
je
lcall
or
push
jg
pop
cmp
sub
push
xchg
xchg
xacquire
inc
sub
jno
mov
out
ljmp
sbb
adc
aas
fildl
xlat
arpl
add
sub
push
mov
fimull
jge
pop
xor
ds
add
stos
sti
das
and
in
lds
pop
mov
ds
jmp
mov
rcrb
push
dec
push
mov
ret
mov
mov
sbb
pop
mov
enter
xchg
push
pushf
sbbl
fcomps
adc
add
mov
sbb
pop
adc
mov
xchg
mov
out
xor
test
sti
or
mov
cmp
cmp
ret
mov
adc
push
cli
mov
fstps
mov
cwtl
inc
sbb
rolb
add
mov
mov
addl
lea
xorb
or
shr
xor
ds
jecxz
mov
jnp
push
aad
out
shrb
mov
inc
imul
push
dec
pusha
cmp
mov
leave
fildl
fisttps
cmpsl
rolb
lods
cmc
jg
fistl
mov
sbb
push
ljmp
mov
test
cli
sub
ljmp
sub
sahf
fmulp
adc
lret
lret
inc
scas
stos
xchg
stos
adc
popf
dec
scas
pop
pop
clc
out
cli
fistpl
cmpsb
cs
sbbl
push
push
imul
xchg
add
rcrl
leave
insb
scas
inc
xchg
dec
std
adc
out
and
or
xor
aam
adc
sub
pop
dec
jns
pop
add
xchg
xchg
subl
push
jp
push
pop
jb
push
int3
mov
data16
and
ficomps
adc
mov
mov
sbb
xlat
pop
pop
xchg
mov
pop
cltd
int
je
jmp
movl
mov
bnd
mov
inc
cmpsl
imul
dec
inc
cld
cmpsl
jne
inc
fists
aaa
and
cmpsl
adc
in
lods
pop
lret
inc
mov
pop
lock
cmp
leave
repz
push
xchg
pushf
ror
lcall
int
mov
adc
iret
ret
cmc
shr
xchg
or
add
shrb
fwait
pop
sub
ret
or
cmc
pop
add
pop
repz
mov
mov
pop
add
sub
or
and
out
incb
cmpl
fidivs
xchg
out
iret
jae
iret
mov
leave
stos
shrl
or
imull
rcl
mov
hlt
mov
mov
xor
sbb
xchg
icebp
jns
mov
push
enter
mov
gs
scas
mov
jge
pop
rol
lret
jmp
pop
cmp
mov
cmpb
push
and
mov
and
jbe
add
lods
idivl
push
ficompl
insb
ret
push
test
outsl
je
add
push
sbb
pop
outsl
stc
xchg
icebp
push
sbb
scas
push
adc
mov
cmc
test
push
pop
sbb
cmp
pop
dec
lahf
repz
cmp
adc
repz
fldenv
sahf
push
cmp
mov
adc
mov
sbb
movsl
mov
fisttpll
cmp
sbb
call
fcmovnbe
in
pop
in
lret
pop
hlt
xor
pop
or
add
imul
test
ret
add
dec
imulb
int3
inc
cmp
mov
xchg
mov
pop
sbb
and
scas
in
push
mov
mov
cmp
dec
cmp
jo
jle
push
scas
in
mov
ljmp
sub
mov
push
xor
lods
adc
iret
mov
push
outsb
mov
jmp
scas
xbegin
jno
mov
pusha
out
add
lret
stos
cmp
and
ret
mov
mov
add
out
lahf
out
add
adc
sub
aad
fmuls
cmpsb
mov
es
xor
push
mov
out
mov
gs
arpl
mov
fwait
stos
fld
push
xor
iret
pop
ja
hlt
in
add
mov
int3
icebp
push
sub
iret
pop
adc
sub
sub
stc
inc
pop
loope
scas
xchg
and
pop
add
and
xchg
outsl
fistpl
mov
dec
ss
mov
sub
cmpl
xchg
flds
pop
inc
push
adc
sti
iret
mov
out
pop
xlat
int3
jne
imul
xor
popa
add
pop
and
mov
jmp
and
daa
pop
imul
jle
or
jbe
fisttpll
lock
das
test
sti
outsb
popa
cmp
mov
je
push
or
decb
sub
mov
mov
loope
mov
cmp
or
add
aaa
mov
mov
popa
js
fdivl
inc
int
mov
xchg
mov
adc
psubd
pop
inc
pop
mov
andl
and
push
das
cmpsl
mov
popf
jne
negb
in
aaa
sub
cmp
cmp
bnd
sub
add
adc
mov
movsl
jg
push
adc
cmp
jle
rclb
add
sbb
xor
shll
das
insb
fcmovnb
xchg
inc
leave
cmp
adc
xor
test
pop
jl
push
stc
xchg
mov
loop
push
into
and
xchg
ret
dec
pop
jle
jp
jmp
lcall
ljmp
lock
insb
cltd
cld
adc
hlt
hlt
sahf
stos
rcrl
rol
jns
lret
int
popf
out
sub
mov
inc
int
pop
jg
push
cmc
sbb
inc
arpl
inc
mov
je
mov
jmp
outsb
imul
leave
pop
out
rcrl
sbb
hlt
adc
pop
mov
aam
add
outsb
fildll
or
pop
jns
stos
mov
push
fstpl
jecxz
cmp
cld
sub
xchg
stos
cmp
xor
xor
push
push
sbb
sahf
mov
adc
add
inc
push
mov
sbb
jno
sub
sti
shlb
jb
shll
pop
addr16
fld
lcall
andb
mov
add
outsb
xchg
xchg
xor
lock
jae
ficomps
push
sbb
fwait
pop
xor
icebp
pop
inc
inc
das
pop
dec
jb
stos
out
gs
iret
aas
ljmp
add
fiaddl
shll
push
in
inc
in
imul
loop
je
mov
inc
mov
jae
dec
int
cwtl
mov
cltd
cld
flds
aam
addr16
xchg
fcmovu
decl
push
mov
sbb
jns
cmpsl
jmp
test
push
jbe
stos
insl
cmp
push
jbe
imul
and
jmp
jmp
lahf
icebp
adc
fwait
xor
mulb
pop
call
aad
mov
leave
daa
aas
dec
mov
inc
inc
pop
sub
sub
out
dec
out
sbb
inc
lea
jge
jae
mov
mov
icebp
std
pop
loope
push
stc
js
sub
pop
adc
fsin
in
enter
repnz
and
in
mov
mov
test
push
int
mov
jl
imul
imull
mov
pop
sbb
negl
add
scas
cmp
jle
mov
repnz
test
sahf
mov
dec
pop
loopne
add
xchg
lret
sbb
cltd
imull
xchg
push
sbb
inc
lcall
mov
neg
scas
mov
cmp
movsl
stos
adc
add
dec
xor
jmp
cld
sbb
xor
leave
lea
enter
pop
add
xchg
loopne
push
lods
mov
testb
and
mov
add
xchg
out
sarb
popf
lcall
or
mov
add
repz
loope
push
cmpsl
mov
cli
pop
jge
mov
shll
mov
pop
or
negl
push
ds
cli
push
push
cmp
push
xor
ret
mov
inc
jmp
ficoml
jbe
rol
inc
imul
mov
pop
into
mov
cmp
mov
pop
xor
iret
jmp
fidivrs
mov
fmul
pop
cli
adc
mov
movb
aaa
cmp
and
push
add
inc
hlt
xor
or
es
push
inc
jg
scas
and
mov
or
outsb
push
or
push
jge
fcmovnb
sub
and
sti
pop
aas
fldcw
gs
shrl
nop
add
jge
or
jo
cli
mov
out
test
enter
sbb
ljmp
xor
ficoml
mov
push
lods
sarl
dec
lcall
movsl
or
jbe
mov
pop
adc
add
testl
inc
outsl
mov
in
sbbb
cwtl
sbb
push
mov
mov
ds
push
fadds
jae
cmpsl
mov
stc
shll
cmpsb
leave
in
outsl
repz
xor
outsl
sub
cmpsb
sub
movsl
adc
jmp
fisubrs
lea
insb
mov
sbb
cmp
xchg
dec
dec
jmp
fsubrs
adc
or
cmp
sub
adc
mov
xchg
push
inc
dec
pop
pop
ret
push
lcall
notb
into
jmp
pop
inc
mov
int
mov
and
mov
test
std
add
sub
mov
pop
aaa
cmc
cld
cmpsb
mov
movsl
xchg
add
popf
inc
pop
mov
sti
arpl
test
pop
push
sbb
rorl
push
jl
rol
mov
pop
call
add
add
or
clc
arpl
xor
arpl
push
xchg
sbb
xor
and
repnz
and
xor
and
and
iret
add
jmp
in
xor
push
pop
pop
mov
jne
inc
push
das
ret
shl
jge
test
mov
push
int
scas
out
pop
push
inc
xor
sub
inc
lret
scas
inc
or
out
stos
popf
sub
mov
ret
or
dec
xchg
sti
add
sbb
scas
jno
mov
dec
leave
gs
hlt
jb
mov
mov
sub
push
sbb
loope
sar
inc
mov
dec
or
fs
push
and
imul
icebp
sahf
in
sbb
push
xchg
aas
popf
sub
pop
pop
jae
or
or
sar
cmpb
lods
jmp
movsl
rcrl
cwtl
xchg
mov
iret
negl
sbb
leave
movsl
pop
mov
insb
mov
mov
arpl
cmpsb
movsl
decb
scas
data16
mov
out
inc
outsl
clc
push
stc
lods
adc
cmp
sub
icebp
inc
xchg
fldenv
jo
mulb
mov
sub
shl
imul
rolb
or
jg
mov
sarb
and
sub
shll
std
aas
pop
ljmp
jge
and
jecxz
jle
out
decl
sbb
cmp
sub
adc
xchg
pop
add
sbb
jle
popl
fs
frstor
mov
sti
pop
sub
fldz
pop
inc
push
rorb
mull
push
rorl
aas
adc
push
jmp
cmpsl
ja
jg
scas
pop
popf
mov
add
pop
lds
mov
mov
incl
fisttpl
inc
lahf
pop
add
aad
idiv
pusha
gs
mov
xchg
dec
adc
or
repnz
testl
mov
ljmp
xchg
jno
jge,pn
mov
dec
adc
sbb
das
sbb
pop
sub
bswap
mov
pop
mov
mov
push
xor
jmp
or
mov
rorl
scas
mov
mov
push
fsubs
pop
test
fisubrl
sbb
pop
push
jle
ds
js
sbb
xor
gs
adc
das
jbe
sbb
or
sbb
xor
testl
inc
std
xor
mov
sbb
xchg
or
cmp
add
repnz
shl
fldenv
insb
cmp
or
out
clc
sbb
clc
rcl
jae
fimull
mov
into
loope
enter
push
push
cmc
lds
dec
and
popf
push
jne
xchg
xchg
sub
xlat
icebp
push
cwtl
xchg
rcrb
lods
mov
lret
xor
sarb
adc
fistpll
loopne
push
pop
inc
xchg
sbb
inc
fsubrs
mov
imul
lcall
mov
pop
or
dec
add
push
cmp
and
adc
push
or
movsl
test
sub
jg
cltd
jge
pop
repz
addps
insb
xchg
mov
cmp
scas
fucomp
fmuls
push
and
rcll
mov
inc
xor
jne
mov
mov
cs
fldt
sbb
cmp
lock
stc
sbb
sbb
inc
cmpsl
rcll
gs
xchg
int
mov
out
pop
jmp
dec
movsl
ficomps
adcb
add
popf
add
ljmp
mov
das
push
push
mov
or
sbb
lods
aad
xchg
add
in
jo
xchg
add
lods
add
add
das
scas
pop
xor
adc
movsl
in
or
test
mov
pop
jge
push
fdivs
xor
jmp
and
push
dec
insb
push
xchg
mov
fs
sub
sbb
ficomps
or
imul
mov
and
xchg
jmp
add
inc
and
pop
test
std
and
push
pop
push
psadbw
das
or
pop
mov
xor
test
adc
out
mov
lahf
enter
mov
jp
iret
xorl
int
imul
cmpsb
lcall
cltd
aam
fdivr
js
clc
sub
inc
imul
clc
sub
ds
lds
add
ret
pop
pop
cltd
sbb
pop
insb
sahf
aad
mov
sbb
decb
gs
iret
ja
push
push
inc
shl
push
xchg
push
notl
lahf
pop
pop
xor
hlt
aaa
sbb
push
add
mov
and
testl
mov
cmc
in
mov
nop
push
xor
insb
in
inc
clc
pusha
pop
and
jle
push
cmc
out
out
pop
aas
xor
fnsave
and
jg
popf
sbb
ss
ljmp
xor
push
icebp
jne
movnti
loop
mov
lds
jl
xchg
out
mov
pushf
inc
add
lods
sub
cmpsl
ret
mov
shl
xor
cmpsl
sbb
push
sub
fdivrs
je
stos
mov
dec
das
adc
push
sbb
arpl
adc
sbb
pushf
gs
orb
jae
in
mov
inc
mov
ja
push
scas
shrl
jg
in
cwtl
lret
add
jl
push
jecxz
cmp
pop
lret
hlt
imul
lahf
popa
mov
adc
add
add
or
add
cmp
mov
mov
outsl
movsb
negb
jge
dec
push
mov
fidivrs
mov
dec
jg
mov
int
push
sub
movsl
push
xor
push
mov
mov
add
popf
addr16
add
imul
fadds
adc
test
or
stc
jmp
pop
aad
mov
sbb
cmp
add
imul
xor
jmp
nop
or
cltd
mov
mov
ljmp
pop
inc
jb
jle
mov
sbb
pop
push
sarl
xchg
jg
xchg
pop
fldt
dec
xor
adc
fstpt
add
inc
bnd
addr16
inc
jbe
jbe
or
inc
jns
data16
mov
fwait
clc
lret
inc
inc
lods
ds
mov
int3
adc
sbb
push
sub
repz
lahf
test
leave
sti
add
pop
mov
inc
mov
pop
aas
call
test
mov
adcl
mov
sbb
or
mov
hlt
pop
jmp
daa
jne
stos
mov
sub
push
sti
frstor
dec
pop
pop
aaa
jge
jb
mov
cwtl
adc
xchg
in
pop
mov
and
jcxz
pop
mov
jmp
mov
jb
pop
dec
mov
fdivl
sub
pushf
lea
dec
dec
outsb
sub
add
dec
adc
inc
pop
fistpl
sti
in
xchg
addl
push
enter
xchg
hlt
aam
imul
arpl
mov
test
pop
push
xchg
adc
jmp
and
scas
fiadds
insl
mov
test
push
sub
push
xor
out
pop
cmp
add
pop
dec
pop
xchg
scas
test
enter
push
rolb
or
jno
pop
jg
int3
sub
pop
das
mov
mov
adc
mov
push
pop
pushf
mov
loope
mov
push
ficoml
jmp
adc
loope
stc
sarl
push
jge
pop
negb
test
adc
xchg
mov
cs
xor
sub
shr
fistpll
fstpt
jno
test
popa
cmpsl
cmpsl
mov
jmp
cmovne
rcr
jbe
test
xchg
pop
sub
sbb
push
stc
shlb
insl
jle
and
inc
pop
in
mov
cs
stc
movb
pop
faddl
mov
fwait
dec
dec
icebp
mov
add
inc
mov
sub
sub
aas
add
ds
mov
and
mov
and
sub
imul
xchg
push
mov
and
jbe
sub
pop
rol
fisubl
sub
xor
mov
clflush
jbe
fidivrs
mov
aas
sub
jmp
cmpsb
cld
jl
jae
jmp
dec
xor
push
and
mov
dec
xchg
mov
cmpsl
into
jmp
sbb
inc
cs
int3
xlat
iret
xchg
jnp
jb
addr16
cmpsb
inc
cli
dec
and
dec
cwtl
out
rcr
pushf
jg
repz
adc
iret
icebp
divl
stos
mov
lods
pop
fistpl
pop
lcall
fnstenv
and
or
std
dec
test
outsl
imul
test
movsl
add
jge
xchg
rcrl
inc
pop
loopne
shr
pop
inc
jae
cmc
imul
dec
aas
or
adc
push
in
aad
dec
stos
jmp
rorb
sub
mov
clc
out
sub
mov
testb
js
cli
mov
mov
mov
addb
add
mull
mov
test
mov
push
std
adc
fstpl
lods
xchg
gs
sbb
dec
add
jle
aam
ljmp
mov
adc
xchg
addr16
ja
or
jbe
shll
mov
stc
inc
cmp
dec
aaa
sub
aaa
fimull
std
sbb
outsb
mov
ret
nop
test
test
jae
pop
push
mov
stos
negb
rcrb
stos
icebp
pop
and
test
cmp
adc
mov
push
gs
xchg
mov
sbb
push
std
xchg
test
movsl
or
out
push
xchg
push
sti
leave
sbb
and
lea
mov
ficomps
or
rorl
sub
insl
lock
fisubrl
int
scas
mov
jg
orl
icebp
test
xchg
mov
mov
push
or
sahf
inc
adc
mov
scas
xlat
loopne
out
adc
lods
lea
enter
ds
pop
popa
dec
adc
jecxz
mov
lock
adc
or
pop
lahf
outsb
pop
imul
jg
ds
outsb
dec
hlt
pop
mov
scas
in
aam
sub
pop
xchg
out
lds
ljmp
and
and
xor
pop
ljmp
push
push
test
adc
pop
cmp
mov
jge
sub
xchg
shrb
int
push
xchg
pop
rorb
inc
sbb
push
cmpsl
in
imul
cmp
xchg
and
xchg
shr
inc
push
je
push
push
cmpsb
dec
ljmp
adcb
ffreep
ja
test
pop
adc
cmc
repnz
or
sub
mov
sbb
jle
sub
pusha
data16
jl
inc
mov
sub
imul
pop
add
ret
lea
mov
adc
jg
mov
mov
hlt
sub
or
or
jl
jle
mov
ja
add
adc
hlt
dec
push
mov
pop
cmpsl
rep
clc
in
mov
scas
adc
sub
sub
int
add
mov
jl
popf
and
lods
sub
lea
pop
fbstp
mov
imul
pop
jg
pop
cmpsl
xchg
mov
push
mov
pop
push
fchs
add
cwtl
aas
mov
notl
dec
dec
imul
push
sub
imul
scas
mov
ds
pop
push
cld
dec
std
call
sbb
xchg
inc
lods
insb
add
xchg
cmpsl
pop
mov
sbb
or
mov
lahf
mov
mov
sahf
pop
js
mov
mov
enter
inc
sbb
adc
out
pop
cmp
dec
push
movsb
ja
mov
and
fstps
xlat
or
and
adc
mov
jbe
popa
mov
pop
push
dec
add
nop
inc
cli
jecxz
pop
pop
in
addr16
adc
jmp
clc
scas
insb
jle
jae
cld
or
cmp
and
add
sbb
jg
jg
pop
int
addl
mov
xor
lock
imul
pop
mov
hlt
push
adc
pop
mov
push
in
in
jb
fstpt
data16
int3
aas
fiaddl
or
std
movsb
pop
jmp
je
cmp
jge
ret
in
xchg
dec
jg
loope
pop
fidivl
inc
mov
add
fs
and
push
lock
fcmovbe
insb
add
in
cmpsl
add
xchg
push
iret
daa
pop
rorl
xchg
jle
xchg
cmc
mov
pop
inc
jmp
fisubl
mov
daa
mov
push
mov
cmp
aaa
ficoms
into
repnz
adc
jno
call
inc
push
fdivrp
sub
adc
inc
dec
mov
out
adc
mov
mov
sub
xchg
rcrb
fnsave
cli
data16
push
jae
sub
sub
cmc
gs
outsl
jb
out
fstl
popa
pop
pop
leave
cmpsl
in
sbb
mov
push
movsb
je
jb
ret
mov
int3
jle
decb
lcall
aas
addr16
lahf
pop
pop
repz
sub
pop
inc
dec
add
fwait
and
loopne
pop
addr16
jg
dec
subl
mov
and
and
mov
mov
pop
and
inc
iret
jmp
mov
mov
mov
xchg
push
mov
loopne
sbb
test
out
insb
ss
jle
jnp
pop
rolb
loope
inc
or
popa
int
lahf
add
mov
sbb
cmc
pop
mov
dec
in
sub
fstl
mov
jnp
fbld
insl
imul
cmp
dec
stos
sub
mov
mov
packssdw
les
push
or
imul
sbb
pop
pushf
sub
adc
cld
cmc
dec
sub
push
out
or
xchg
stos
adc
arpl
pusha
sub
dec
mov
psubsw
hlt
fs
inc
pop
sub
std
ret
mov
loopne
and
in
push
jle
mov
mov
pop
jae
call
inc
sti
leave
sbb
cmp
sub
add
or
mov
add
jo
lods
xchg
rcll
push
push
icebp
mov
dec
js
ds
gs
jle
lock
icebp
shrl
push
sti
pop
movsl
cmpsb
mov
xor
sub
pop
clc
addb
push
fdivr
mov
xor
aas
pushl
stc
cwtl
pop
call
mov
js
dec
sbb
fmulp
jge
pusha
mov
jg
ret
flds
xchg
nop
mov
mov
sub
divl
lahf
cmc
push
or
repnz
mov
push
dec
cmpsl
mov
lea
pop
push
mov
addr16
cmpsl
andl
sub
out
mov
cmp
or
in
fcmovne
sahf
xor
fidivrl
mov
nop
cli
adc
fwait
sahf
std
push
out
pop
repnz
rcll
or
pop
lcall
aas
mov
push
push
mov
sbb
cmpsl
pop
dec
dec
inc
aaa
ss
and
sbb
stc
popf
sub
xor
pop
xchg
mov
iret
out
xlat
add
add
cli
into
jecxz
and
rcrb
stc
pop
cmp
jle
xchg
pushf
fdivrp
stos
les
or
gs
and
scas
hlt
out
add
inc
pop
out
lahf
loope
jbe
adc
dec
xor
sub
stos
cmp
and
int
sbbl
pushf
xor
cmpsl
pop
es
aas
mov
pop
sbb
cmp
fnstcw
or
mov
sbb
and
push
pop
in
mov
lods
or
addl
hlt
fistpll
stos
and
jl
inc
sub
push
data16
add
js
ret
mov
jecxz
inc
outsb
or
int
movsl
jbe
pop
mov
pop
aas
xchg
xorl
mull
cmp
mov
xor
flds
data16
cmp
adc
pop
aaa
test
enter
cmpsb
sbb
or
out
cmp
xchg
enter
inc
xor
add
cmc
xchg
xor
arpl
dec
add
sub
pop
call
mov
cmc
adc
into
sub
pop
ljmp
popa
or
outsl
or
fimuls
and
mov
or
mov
addb
push
fnstenv
adc
mov
adc
jecxz
sti
insl
pop
out
push
gs
dec
add
xor
mov
pop
mov
push
fsubs
cmc
stc
mov
dec
sub
bound
sbb
add
out
ftst
sti
outsl
lret
popf
inc
popa
inc
push
jg
ror
pushf
iret
mov
fcoms
adc
xchg
xchg
pop
mov
mov
adc
cwtl
leave
adcl
pop
pop
jge
pop
push
inc
lods
adc
jle
pop
mov
int3
cmc
pop
pop
cmpsb
adc
pop
imul
or
hlt
mov
fs
ror
cltd
xlat
iret
mov
mov
imul
or
outsb
push
push
and
dec
xor
add
fidivs
xchg
pop
in
int3
hlt
sti
andb
dec
or
sub
dec
or
mov
scas
negl
ljmp
pop
divl
ficoms
ljmp
cmp
into
sarl
cltd
std
mov
movsb
sub
jmp
mov
dec
push
ljmp
and
cmc
cmc
pop
call
and
addr16
mov
push
insl
and
imull
fisubrs
mov
adc
pop
jle
jnp
fs
mov
call
jge
pop
xorl
lahf
jl
or
je
scas
loope
rcl
nop
stos
sbb
fdivrs
pop
xor
fbld
jl
sub
in
mov
mov
adc
scas
in
mov
fwait
cli
ds
mulb
es
cmpb
inc
jb
jg
data16
xor
or
loop
inc
stos
pop
addr16
inc
out
cmp
jbe,pt
pop
iret
arpl
push
testl
imul
jmp
push
sti
push
je
dec
int
lret
pop
mov
stc
enter
pop
push
cld
mov
xor
mov
fst
adc
cwtl
jle
jnp
pop
ficompl
sub
shrl
pop
pop
daa
lods
insl
rcrb
cltd
mov
or
adc
push
aas
lds
mov
mov
pop
dec
testb
mov
add
jnp
or
xor
movsl
jmp
jnp
out
mov
iret
stos
pop
add
and
xchg
adc
cmp
xchg
jbe
loopne
mov
icebp
jnp
mov
mov
pop
cltd
outsb
xchg
push
jg
add
js
stos
dec
add
push
lahf
subb
arpl
mov
mov
aaa
mov
ret
jle
push
shll
push
lahf
cmp
arpl
repz
int
pop
stos
fisubrl
pop
in
push
aas
adc
pop
lds
or
out
or
std
sbb
fwait
outsl
xor
mov
mov
mov
add
xchg
and
and
movsl
pop
repnz
adc
cmp
and
adcb
mov
pop
cmp
mov
paddd
jle
int3
add
xchg
push
xor
pop
dec
stos
ret
dec
hlt
mov
aad
decb
call
gs
hlt
push
je
sbbb
negb
movsl
push
scas
mov
inc
jmp
pop
sub
into
fldenv
rorl
hlt
pop
cmp
rol
sarl
clc
xor
int3
fnstsw
sbb
mov
push
icebp
mov
push
je
mov
fdivrl
jg
xchg
cmp
mov
jbe
mov
test
pop
mov
scas
imul
lea
xchg
aas
mov
add
fimuls
push
or
mov
pop
addr16
sbb
mov
sti
mov
mov
pop
cmp
xor
cli
and
jno
jb
aam
ret
cmp
lcall
les
cmp
imul
std
cs
push
xchg
cmpsb
inc
sub
xchg
lea
call
mov
loope
xchg
stc
push
jle
adc
lret
icebp
adc
pop
icebp
test
sbb
je
sbb
mov
dec
fs
out
lret
ret
fistpl
pop
xchg
mov
mov
dec
pop
insl
lret
fnstenv
dec
mov
jo
in
ds
mov
mov
mov
call
fmul
rcll
adc
pop
in
mov
xchg
cmp
movsb
push
dec
dec
sbb
pop
sarb
push
lea
push
add
out
jecxz
push
adc
sbb
outsb
rcr
test
fs
pop
cmpsl
pop
fistpl
roll
xchg
xor
mov
mul
pop
push
test
dec
repz
mov
inc
scas
es
fsubrs
lea
test
add
inc
adc
pop
das
mov
xor
jl
add
fadds
push
push
out
cli
inc
pop
mov
movsb
lahf
adc
sbb
push
lea
hlt
add
fs
imul
jecxz
xchg
mov
lret
call
xchg
leave
cld
xchg
cltd
jecxz
lcall
les
mov
rcrb
outsb
cmc
mov
ret
add
cmc
adc
pop
xchg
jnp
lahf
loopne
dec
sbb
je
sub
mov
fidivrs
sub
jae
sub
mov
push
jo
pop
aaa
or
mov
mov
mov
and
pop
xor
cld
cmpl
mov
pop
push
popf
fisttpl
pop
pop
call
test
outsb
int3
inc
jbe
ret
pop
ss
push
je
in
pop
push
mov
push
mov
arpl
cld
adc
dec
cld
addr16
stos
pop
lods
cmpsl
pop
mov
leave
pop
in
scas
inc
fucomi
mov
scas
fisubs
shrl
pop
mov
jp
subl
and
or
cli
in
fdivl
fxch
sub
inc
or
dec
add
push
mov
mov
repz
push
sahf
sub
cmc
cld
mov
std
dec
mov
pop
lock
std
jle
scas
mov
out
or
lods
into
in
mov
xchg
sbb
pop
fcoml
or
push
dec
push
push
and
pop
cmp
dec
aas
lret
flds
pop
int3
dec
sbb
sub
repz
pop
add
loop
lea
xchg
das
in
arpl
adc
fistpl
jl
pop
and
pop
cwtl
fimuls
xchg
inc
mov
inc
insb
ljmp
pop
inc
enter
stos
dec
pop
sahf
and
fistpll
sarl
dec
daa
pop
dec
mov
imul
add
and
cmc
pop
xchg
mov
inc
mov
push
mov
les
dec
clc
dec
and
inc
int3
inc
outsb
mov
fisttpll
adc
xor
pop
or
popf
test
pop
fistpl
popa
sti
xor
roll
andl
fisubrs
cmpb
addl
mov
stos
xor
adc
in
cmp
mov
lcall
pop
fldcw
add
mov
imul
inc
mov
jecxz
test
jmp
sbb
fwait
int3
push
dec
sbb
enter
ja
stc
lods
mov
mov
gs
fwait
push
xchg
or
jnp
xor
loop
addr16
rcll
pop
jo
test
mov
mov
movsb
jae
lods
push
js
pop
and
cmpsl
adc
pop
pop
xor
push
std
fadds
adc
fistps
testl
das
std
jno
push
inc
push
mov
xor
cld
jg
mov
pop
aaa
dec
adc
adc
cmp
adc
jbe
sbb
adc
mov
fs
mov
mov
xchg
or
sbb
ret
je
aaa
cmp
sbb
cmpsb
lock
push
cwtl
sub
subb
mov
sbb
iret
inc
mov
mov
ret
mov
ret
fisttpll
pop
aaa
cmpsb
cld
or
repnz
out
pop
lret
mov
sbb
outsb
loopne
push
lea
pop
stos
out
mov
cli
lea
mov
push
mov
sbb
test
push
jbe
sbbb
ja
jb
les
imul
sub
jns
pop
mov
sbb
push
pop
cmpsl
in
sahf
lahf
popa
jmp
insl
or
sbb
aas
in
and
pop
movsl
in
cmp
loope
pop
and
mov
sbb
pusha
hlt
in
in
aas
sar
bound
mov
mov
pop
ficompl
sub
gs
les
mov
mov
ss
pop
ds
xchg
cmpb
loope
push
shrl
lret
out
fwait
aam
push
sti
mov
dec
push
pop
pop
mov
popf
dec
imul
and
mov
pop
sbbb
outsb
loope
or
sub
xchg
and
popa
pop
mov
imulb
push
pop
int
jle
je
push
rolb
mov
mov
jmp
mov
sub
jns
in
adc
hlt
pop
jmp
push
lahf
mov
jns
add
movl
xor
std
pop
xchg
ljmp
outsl
push
cmpb
sahf
and
push
mov
fcmovb
scas
stos
cwtl
movsl
sarl
inc
leave
mov
dec
push
sbbb
or
repnz
mov
or
rcrb
mov
int3
dec
lcall
sub
sbb
or
repz
mov
xchg
pop
jg
mov
loope
xor
mov
mov
adc
sbb
cld
mov
pop
rcrb
sbb
sbb
pop
add
mov
in
lea
jg
adc
and
out
xor
hlt
mov
out
cld
outsl
sub
int
hlt
inc
cltd
lret
jg
add
stc
mov
in
xor
cmp
cld
sbb
addb
mov
sbb
mov
in
mov
xor
push
out
pop
inc
pop
sub
pop
sub
sub
mov
cmc
mov
lea
cwtl
pop
fisttps
lods
jae
cli
sub
pop
outsl
cmp
aas
mov
rcr
ret
or
jle
jge
jl
shlb
fcoml
bound
pop
in
mov
pop
aam
divl
sub
aas
es
outsl
pop
lea
lods
push
pop
loop
or
into
xor
xchg
jle
add
pop
sub
inc
and
push
xchg
inc
dec
nop
mov
sbb
add
and
arpl
xor
movsl
jle
clc
mov
stos
cmp
arpl
lret
lahf
xchg
inc
xchg
mov
mov
mov
mov
jg
xchg
psllq
and
cmpsb
inc
mov
fwait
es
arpl
shrb
insb
sbb
cmp
cltd
call
movsl
and
ss
fwait
jnp
pop
xor
xchg
adc
movsl
or
adc
subb
mov
push
ret
test
pop
lret
mov
pop
out
pop
inc
xor
sub
mov
cmp
aad
jl
jle
test
pop
dec
fildl
roll
and
xchg
cmpsb
and
add
cmp
iret
dec
stos
ja
add
mov
and
out
mov
pop
arpl
push
fcomps
adc
mov
pop
movsl
imul
aad
mov
enter
or
sti
iret
or
inc
xor
outsl
aas
fdivp
fcmovnu
loopne
cmc
cltd
scas
mov
adc
nop
aad
xor
mov
test
ja
adc
xchg
xchg
pop
lds
inc
or
or
negl
ss
pop
adc
imul
sti
sub
je
lea
cs
ret
pop
and
jbe
cwtl
inc
negl
pop
ds
mov
lcall
xlat
and
fisttpll
cmp
adc
cld
les
mov
lods
fsubp
jnp
inc
enter
data16
jle
daa
sahf
into
movsb
mov
push
pop
dec
jmp
cltd
and
add
pop
adc
lcall
addr16
pop
pop
adc
fnstenv
and
inc
lds
pop
scas
mov
icebp
ret
or
xchg
pop
cmpb
and
fbld
movsb
or
fistl
jb
xchg
mov
xor
adc
xchg
rcr
mov
or
sbb
push
mov
dec
mov
and
inc
mull
sbb
push
push
test
push
mov
and
jb
cld
mov
or
mov
aaa
pop
pop
inc
test
out
xchg
fprem
icebp
or
popa
popf
push
test
adc
les
xor
cmpsl
mov
pop
push
call
dec
cld
lods
aam
fnsave
sahf
leave
cmc
insb
mov
dec
pusha
pop
mov
pop
inc
pop
out
pop
push
mov
mov
shll
or
lock
mov
fildl
or
std
pop
push
xchg
in
cmpsl
jno
xchg
cmpsb
lcall
outsl
cmp
divb
adc
cmc
cmpsl
push
cwtl
lea
lahf
pop
jg
jne
add
adc
mov
sbb
icebp
jge
sub
cmpsl
pop
cwtl
xchg
inc
das
test
cmc
into
arpl
push
xchg
test
mov
sbb
cmpsb
in
mov
add
dec
das
rclb
inc
orl
loope
call
cmp
in
scas
imul
mov
iret
xor
cmp
fdivl
dec
adc
push
aas
cmc
sarl
cli
pop
stos
mov
xor
add
pushf
lock
call
ljmp
pop
test
pop
inc
pop
cmpsb
and
jb
inc
fiadds
cmp
inc
cmp
adc
jg
sub
and
pop
xor
or
push
add
jmp
add
inc
fwait
into
inc
fists
enter
pop
aam
cmp
cwtl
xchg
ret
add
scas
jecxz
xor
fsubrs
jno
add
lcall
hlt
loope
mov
inc
insb
fcmovbe
lods
sub
inc
rorb
and
and
call
stc
sbb
bound
call
fsubrl
cmpsb
mov
mov
sahf
and
stc
insb
insl
or
xchg
lret
mov
inc
fisttpll
mov
es
push
lock
push
popa
cmp
jg
rcl
hlt
xchg
push
pop
insb
leave
call
push
xor
mov
push
sub
into
aas
scas
jae
add
mov
xrelease
pop
push
mov
or
lcall
dec
cmpsl
pop
sub
xchg
lea
cmp
or
pop
jns
inc
jmp
xchg
and
jl
pop
stos
pop
push
scas
push
fdivl
das
lea
or
testb
inc
lahf
rcr
jae
pop
lahf
mov
fisubrs
push
and
ficomps
test
mov
mov
adc
push
shlb
pop
lods
inc
sbb
xchg
pop
aaa
mov
fisttps
pop
pushf
xchg
cmpsb
cli
das
ljmp
pop
sbbb
in
dec
lea
icebp
fs
mov
lods
out
lcall
jmp
sbb
sbb
sbb
lcall
jg
int
mov
dec
add
pop
mull
pop
test
push
enter
imul
shlb
cmp
cmc
fldcw
int
sub
mov
or
inc
jecxz
scas
outsl
mov
int
cmp
aas
js
sub
jns
cwtl
movsb
and
into
stos
jnp
test
jp
ds
repz
lods
jmp
in
into
sti
js
mov
ja
das
cwtl
jmp
movsl
adc
sbb
cli
call
and
pop
adc
insb
test
std
and
mov
adc
ret
inc
jb
jns
pop
xchg
jne
ficoml
cmpsl
adc
cmpsl
mov
icebp
sbb
adcb
outsl
les
push
push
and
pop
inc
pop
and
and
loop
cmp
push
jnp
mov
mov
aam
mov
inc
cmpsb
pop
test
mov
cmp
je
cmp
adc
adc
into
mov
shll
cmpsb
jle
adc
and
arpl
rcll
ror
popa
and
outsb
incb
divl
adc
push
ja
outsb
data16
mov
pop
call
je
leave
fildl
add
xchg
cli
push
push
cli
loop
mov
or
mov
mov
icebp
cmp
lock
popw
add
das
dec
adc
jne
aam
fs
pop
mov
lea
xchg
cmp
je
add
mov
js
fldenv
inc
jecxz
mov
jg
mov
xchg
cmp
jg
pop
imul
adcl
pop
lds
mov
imul
mov
cmp
cmpsb
in
hlt
out
cltd
subb
lret
pop
push
ret
imul
inc
jg
push
shll
cwtl
xor
and
cmp
pop
and
xor
jg
adc
mov
dec
popa
fisttps
push
xor
xor
cld
cmp
rcrl
dec
sahf
push
dec
adc
sarl
repz
pusha
movsb
or
push
sbb
pop
arpl
cmp
mov
adcb
testl
fcmovbe
test
adc
mov
decl
outsl
pop
shl
jmp
fcmovnbe
dec
jmp
hlt
outsb
mov
std
jle
xchg
mov
add
das
sbb
jle
aam
add
mov
ret
test
mov
cmpsb
imul
pop
sbb
pop
pop
gs
cwtl
loop
inc
mov
lahf
data16
or
lret
mov
outsl
lea
pop
push
pop
test
push
je
out
fbstp
pusha
testl
adc
stos
lcall
sbb
data16
mov
clc
inc
sbbb
cmp
add
lret
xor
push
vcmpgess
sbb
pop
rcr
cld
push
fimull
jle
lret
nop
pop
sbb
inc
mov
gs
mov
jl
std
mov
fldenv
loope
stos
je
jg
outsl
and
dec
fisubrl
ss
inc
aas
nop
pop
loope
sub
or
cmp
sbb
stc
sahf
pusha
mov
or
lahf
push
leave
imul
jle
lds
ja
out
test
imul
mov
sbb
cmpsb
leave
je
pusha
cmc
cmp
cmc
das
mov
cmp
mov
test
data16
xchg
adc
add
mov
jns
call
jne
outsb
hlt
fxch
mov
rcl
mov
sbbl
jnp
mov
jg
clc
jg
mov
pop
xchg
xor
cmp
movsl
inc
pop
push
push
adc
mov
repnz
imul
ror
dec
rcll
jle
dec
cmp
pop
je
and
sub
jg
cli
hlt
push
dec
ljmp
push
cmpb
test
add
cs
in
mov
ljmp
popf
rcrl
andl
out
cs
sbb
fdivrl
cli
push
push
xor
xchg
shll
push
jp
aaa
shl
mov
lds
subb
push
mov
popa
push
repz
cmpl
aaa
xchg
popf
pop
fnstcw
std
mov
les
popf
jno
pop
mov
rorb
inc
jmp
adc
clc
or
adc
sub
add
sub
dec
or
rcrl
add
cmp
adc
cmp
imul
loopne
fwait
push
sbb
icebp
ja
mov
fsubl
jge
call
fdivrl
sbb
test
mov
movsl
mov
fidivl
cmpsb
mov
les
mov
add
push
dec
arpl
pop
jbe
push
pop
mov
jb
cmp
cmp
push
in
aad
xor
rolb
fcoml
and
push
xor
cmp
jg
pop
push
rcrl
sbb
jle
shl
iret
sub
and
push
jg
test
fldenv
xor
mov
pop
inc
lahf
sbb
mov
xchg
icebp
adc
fiadds
mov
popa
mov
nop
pop
adc
or
and
xchg
cli
mov
imul
add
vpmulhuw
jg
add
mov
mov
aad
add
gs
mov
imul
mov
in
negl
hlt
or
sahf
pop
out
es
cmpsb
pop
sub
mov
cmp
pop
lea
push
scas
pop
mov
add
sub
mov
daa
ljmp
adcl
dec
adc
out
sbb
pusha
ds
xlat
push
in
jl
mov
stc
pop
pop
mov
mov
and
cmpsl
push
add
sbb
push
adc
mov
xchg
outsb
and
pop
inc
popf
or
adc
jp
iret
add
int
je
xchg
and
insb
add
push
arpl
mov
aas
lods
mov
jbe
mov
scas
outsl
xor
xchg
nop
pop
cmp
enter
test
sub
sarl
pop
push
test
sbb
mov
imul
mov
not
out
repnz
pop
ret
sub
sub
xorl
adcb
mov
inc
shl
dec
or
pop
test
in
pop
mov
sarb
ret
lret
inc
dec
pusha
inc
push
notb
outsl
dec
push
cmpsl
fucom
or
mov
movsb
pop
fnclex
pop
aas
xchg
cmp
cld
dec
mov
jle
ret
fstl
sbb
xchg
pop
imul
lods
sbb
pop
dec
packuswb
mov
or
call
scas
mov
push
insb
jmp
xchg
inc
push
jae
mov
icebp
pop
stos
roll
lcall
jne
ret
daa
lea
es
imul
cmp
or
jmp
fnstcw
xchg
pop
das
call
push
imul
and
xchg
xor
int
dec
loop
add
push
xchg
std
and
sub
or
dec
mov
jmp
cmp
dec
cs
sbb
outsl
sbb
pop
scas
mov
arpl
sub
das
popf
movups
sbb
dec
mov
xor
xor
js
sub
addl
inc
cltd
mov
aas
repnz
mov
arpl
sbb
cli
out
jge
frstor
arpl
mov
inc
jnp
in
test
mov
out
rcrb
push
or
sti
sahf
pop
cmp
inc
ds
sub
adc
adc
mov
ror
imul
popl
xchg
fucomp
ficompl
neg
cmp
cld
outsb
ret
xchg
js
push
jns
add
or
cld
lahf
xchg
push
jmp
negl
mov
fmull
push
aas
inc
mov
mov
pop
test
mov
sbb
lcall
sub
aas
and
clc
or
jl
add
or
pusha
adc
xchg
sbb
mov
int
pop
dec
divl
sahf
xchg
pop
mov
fists
lds
lahf
fstpt
loopne
pop
and
mov
add
or
outsl
imul
lret
sbb
jg
and
push
jg
ret
mov
insl
sarb
sub
push
jp
in
ret
jle
mov
push
subl
clc
pop
add
xchg
and
leave
lods
sbb
stc
out
sbb
adc
rorl
mov
cmp
inc
push
fisttpll
in
cmpsb
into
sbb
orl
daa
lret
insb
ret
cmp
sub
stc
jae
mov
lea
das
cld
pop
dec
enter
mov
pop
mov
bound
jae
mov
out
jmp
jb
adc
mov
mov
outsb
mov
lcall
sub
or
dec
lret
mov
loop
out
mov
and
adc
cmc
pop
pop
inc
in
dec
orb
out
les
xor
mov
loope
pop
out
sub
pop
fwait
out
rcll
das
cmc
cmp
insl
add
lret
dec
inc
lcall
loop
test
andb
arpl
jb
pushf
in
sbb
mov
stos
testl
add
jg
js
js
adc
test
es
cs
add
sbb
stc
fldl2t
sub
dec
pop
sbb
fdivrs
mov
xorl
lea
insb
lock
rcll
scas
pop
sti
mov
das
lcall
sub
outsb
mov
sbb
out
push
sar
fwait
jg
mov
xlat
out
dec
cs
push
pop
js
xor
int
mov
sahf
inc
shll
jg
scas
jle
adc
add
push
push
lea
invlpg
mov
xchg
fstpl
ret
mov
cli
inc
fmuls
mov
dec
sbb
int3
mov
dec
jne
arpl
mov
push
inc
pop
xchg
repnz
add
testl
fsubp
idiv
fmulp
test
sub
rorl
mov
ffreep
bound
and
in
fsubrl
pop
rorl
cld
lret
push
stc
fs
sti
pop
dec
jb
xor
orl
cmp
idivb
scas
add
mov
pop
testl
sahf
stos
fldenv
and
lret
adcl
mov
xchg
pushf
mov
int
ja
fcomps
mov
jmp
cmp
pop
fldt
xor
dec
push
fstp
xor
fucomp
cmc
mov
outsb
popf
fcmove
call
add
movsb
xchg
hlt
sbb
in
leave
imul
push
pusha
into
sbb
mov
ja
fwait
imul
ja
sbb
or
add
adc
xor
push
loop
inc
xor
mov
leave
insl
dec
pop
imul
idiv
cltd
adc
outsb
mov
adcb
or
pop
addr16
push
ret
push
pop
xchg
gs
popa
or
scas
mov
std
orl
push
mov
pop
add
flds
jo
cld
shl
call
ja
xor
push
adc
adc
or
in
mov
stos
mov
push
inc
fisubrl
cmc
sbb
push
cmp
sarb
xor
add
fisttpll
mov
lcall
cmpsl
add
sahf
mov
fcomi
dec
add
pop
enter
cmc
shr
jne
adc
cwtl
ja
testb
ret
push
jle
add
push
stos
dec
mov
dec
aas
pop
cmp
lods
adc
mov
out
add
arpl
dec
ds
sbb
lcall
jae
jo
daa
mov
push
fs
iret
cmc
cli
xchg
push
stos
xchg
repz
roll
dec
test
xor
addl
idivl
mul
pop
lea
sbb
popf
sub
testb
jle
fdivs
aaa
movsl
add
fisubrl
sarl
pop
adc
movq
es
lret
cwtl
inc
mov
int3
inc
ja
mov
or
or
sti
rclb
fisttpl
cmpsb
es
shrl
imul
jne
xor
imul
adc
xchg
cli
dec
sbb
cmp
or
iret
adc
popa
int
mov
pop
imul
sti
fstpl
and
sar
push
mov
or
pop
loop
adc
imul
mov
ds
or
enter
cmp
ret
lods
pop
add
sbb
ss
daa
xchg
outsb
and
ret
inc
add
push
inc
and
cmp
fwait
stos
mov
or
lods
pop
inc
cmp
and
insl
lods
dec
mov
xor
lahf
scas
ja
js
jo
xchg
adc
sti
mov
arpl
mov
jmp
je
sub
cmp
imul
aas
cmp
pop
movsl
out
rcrb
jnp
lods
test
mov
les
jmp
and
or
and
pop
adc
lods
lock
divl
sub
pop
and
mov
mov
xchg
sub
pop
das
dec
xlat
outsb
push
xor
aaa
movsl
stos
ds
pop
add
mov
icebp
cwtl
jo
ucomiss
hlt
addr16
pop
pop
mov
xor
fbld
xchg
jmp
ja
shl
mov
test
lret
inc
mov
jbe
loope
mov
inc
mov
sbb
jg
or
movsl
scas
inc
lahf
mov
bound
in
add
pop
add
loope
fwait
aam
sbb
scas
pop
xor
xchg
stos
adc
fwait
cmp
out
cltd
paddusw
stos
scas
lea
cmc
dec
popa
rolb
hlt
repnz
mov
or
sbb
rorl
dec
pop
ljmp
mov
pop
dec
sub
inc
ljmp
jne
dec
ds
pop
clc
hlt
or
adc
subb
ljmp
test
mov
popf
insl
pop
pop
mov
mov
into
sbb
in
mov
and
or
mov
sbb
dec
stos
pop
movsl
mov
fistpl
sti
popf
call
dec
lea
push
add
mov
mov
or
sub
mov
cmp
cltd
rcrl
mov
test
mov
push
push
mov
mov
push
ljmp
cld
inc
sub
hlt
mov
adcb
fbld
mov
aam
addr16
in
push
adc
push
lahf
sbb
pop
fadds
pop
jnp
dec
and
loope
add
mov
and
sbb
push
fsubrs
cmp
shrb
dec
aam
pop
addl
mov
or
out
dec
add
or
mov
jbe
imul
dec
adc
dec
daa
push
pop
pop
test
push
inc
fisubs
push
into
cmp
mov
mov
xchg
inc
dec
imul
shl
sbb
pop
inc
pop
cmc
lcall
imul
xor
rcrl
dec
jmp
loopne
imul
mov
call
or
push
pop
enter
pop
loope
push
movsb
fidivl
add
or
lods
lds
popa
rorb
sti
dec
pop
xor
inc
xor
aad
xchg
aad
dec
movsl
sub
scas
sbb
lea
cmp
jae
lods
sarl
sub
jle
mov
mov
outsb
jb
xchg
arpl
mov
xchg
fwait
dec
je
cmpb
jmp
out
out
inc
cmp
mov
pop
dec
push
lahf
pop
and
mov
mov
xchg
mov
pop
inc
fmuls
pop
cmp
sbb
jns
idivb
add
das
mov
jp
cmp
mov
mov
xchg
sbb
cmp
jl
xchg
xchg
call
and
out
inc
cmpsl
cmp
mov
int
je
dec
fidivrl
push
cmpsl
scas
outsl
sbb
ds
cmp
adc
xlat
lahf
rorl
rcll
push
and
sahf
dec
lahf
lret
scas
lea
lahf
imul
push
inc
out
imul
cwtl
inc
scas
ds
loope
out
iretw
pop
jnp
or
or
bound
dec
pop
mov
fcomps
add
sarl
and
je
rcr
rorl
hlt
fnstenv
mov
or
cld
mov
sub
pop
inc
or
rcl
sub
mov
scas
mov
xchg
push
push
sub
and
aas
pop
xor
ret
aam
cmp
add
mov
fisubrl
sti
lret
mov
mov
imul
orl
pop
adc
mov
stc
push
and
in
test
mov
loopne
jp
cld
xchg
rol
subb
pop
push
lcall
shrl
or
loop
jmp
xchg
icebp
clc
pop
popa
push
inc
int3
and
sub
xchg
cld
mov
mov
outsb
loope
mov
dec
inc
xor
lds
add
imul
outsl
aas
xchg
mov
or
xlat
scas
imul
iret
imul
mov
sub
les
cmp
xor
push
jg
pop
loopne
fdivs
arpl
fnsave
pop
pop
imul
fdivrs
mov
enter
xchg
inc
idivb
push
xchg
cmpsb
jl
cmp
xchg
insb
mov
push
aas
sbb
ret
imul
cmp
mov
jge
int
dec
andb
push
push
mov
add
adc
outsl
pop
push
rcll
add
in
pop
out
push
stos
sbb
xchg
push
ror
xlat
pop
mov
xor
fcoms
jno
sbb
gs
dec
pop
scas
xor
into
push
mov
mov
mov
lock
jbe
mov
outsb
popf
sub
lock
add
fwait
sbb
ret
dec
dec
or
cwtl
and
std
aam
roll
sti
scas
jle
pop
repnz
dec
mov
call
fildl
lock
insb
jle
mov
and
pop
push
cmc
xor
pop
sub
cmp
pop
jle
repnz
xchg
in
jle
ja
mov
xor
fstps
adc
jl
clc
test
pusha
add
fldt
add
adc
inc
scas
or
xlat
jmp
xor
out
or
xchg
out
test
insl
mov
sbb
xchg
outsl
pop
push
mov
mov
pop
repz
xor
xlat
mov
mov
ja
imul
sbb
test
ret
fisttpll
mov
adc
fisttps
push
das
fcmovnu
cwtl
filds
ret
jns
sbb
xchg
dec
sub
pop
xor
scas
aam
or
pop
lahf
pop
hlt
enter
push
cmp
sub
or
push
jae
aad
adc
jge
pop
xorb
and
stos
lods
push
fstpt
fwait
ljmp
fwait
jecxz
cmp
sti
or
ljmp
je
stos
add
pop
decb
cli
inc
or
into
das
xchg
mov
and
in
jno
imul
cmp
and
popa
popa
test
hlt
iret
pop
jb
cmp
jg
xor
pop
mov
mov
ret
icebp
sub
sbb
int3
movsb
add
pop
push
inc
ljmp
dec
sub
popa
jl
mov
lcall
stos
test
or
pop
imul
inc
dec
push
pop
xor
lcall
in
ret
and
clc
pop
mov
cmpsb
iret
shll
inc
in
mov
dec
movsl
lea
lods
jb
loop
adc
jp
addps
jp
and
or
ret
mov
xchg
pop
xchg
scas
adc
cltd
push
aad
int3
fcmovb
addr16
push
cmpsb
popa
stc
adc
mov
ljmp
pushf
nop
xor
xchg
xor
jbe
ljmp
mov
mov
out
pop
push
mov
or
cmp
fs
mov
stos
mov
jg
sub
pop
imul
mov
insb
enter
inc
add
dec
mov
into
jg
mov
mov
mov
mov
mov
mov
inc
jmp
repz
rclb
push
pop
das
in
pop
incb
dec
adc
ja
and
cli
xchg
cli
roll
pusha
mov
ret
sub
push
outsl
in
jmp
push
ret
mov
adc
pop
dec
inc
pop
pop
call
leave
sub
pop
ret
push
push
jp
pushf
and
outsl
ret
sbb
lock
xorb
add
adc
xor
sahf
arpl
mov
or
fcmovne
mov
dec
adc
loope
adc
out
in
sub
arpl
das
pop
cld
xor
arpl
in
lea
inc
lea
mov
xchg
push
or
dec
pushf
mov
cmp
cmpl
test
adc
mov
cld
push
iret
pop
imul
int
or
jg
ret
movsb
andw
jno
lret
pop
insl
pop
inc
pop
cmpsl
jo
push
sub
mov
ss
or
jo
sbb
bound
pop
dec
cli
shll
das
lret
popf
push
les
cmp
cli
cmp
sub
out
fwait
push
lods
out
loop
fidivrs
and
jbe
stos
scas
jg
pop
orl
jns
adc
lock
or
and
push
xchg
xorb
sahf
and
adc
xlat
lret
test
shlb
clc
je
cltd
jno
ss
lret
inc
push
dec
sbb
inc
sarl
jne
test
pushf
cmp
xor
sbb
inc
jo
fimuls
loope
cwtl
daa
test
inc
jbe,pt
add
xor
std
fadd
addl
push
cmp
stc
mov
pop
jmp
xor
aam
mov
pop
cmp
popa
nop
sub
test
cmp
sub
outsb
ror
mov
adc
xchg
mov
je
out
out
lea
aaa
cmp
inc
and
mov
out
mov
and
pop
rcll
jg
adc
pusha
cmc
xchg
rol
xor
adc
int
xchg
rcrl
or
std
lea
mov
shrl
jp
out
dec
xor
jge
cmp
ret
cs
test
adc
pop
or
adc
sub
repz
push
shrb
xor
mov
hlt
adc
sub
pop
adc
push
ffreep
pop
push
es
mov
out
gs
mov
lods
push
mov
dec
gs
imul
lods
int3
leave
inc
test
mov
mov
and
xchg
ja
xor
sti
clc
rclb
pop
dec
pop
mov
lock
or
pop
imul
aam
in
xor
rolb
or
lret
and
and
test
cltd
aaa
adc
mov
inc
xchg
push
pop
mov
sub
adc
xor
out
mov
arpl
push
adc
inc
adc
in
test
dec
sti
int
shlb
aad
mov
cld
test
rcrl
dec
xchg
mov
inc
mov
push
popf
cli
mov
insb
mov
mov
outsb
mov
jns
loop
out
pop
fdivrl
mov
add
andl
negl
ds
cmp
adc
sbb
mov
cmpsb
movsl
jbe
dec
stos
insb
lcall
adc
cltd
and
jnp
imul
pop
movsb
ljmp
repnz
mov
pop
lea
fisubs
pop
int
mov
jle
push
jl
mov
adc
jmp
pop
iret
fwait
cmpsb
xor
push
cmp
cmp
mov
push
xlat
xchg
adc
lds
push
or
xchg
js
add
jle
jp
rorl
mov
js
pop
incb
inc
clc
dec
jge
pop
dec
dec
mov
popf
dec
jp
dec
lock
mov
push
aam
icebp
fldt
mov
adc
dec
es
fists
mov
jb
clc
adc
pop
push
stos
out
repz
lock
add
sti
mov
and
push
out
dec
leave
pop
and
inc
lods
clc
jne
outsl
sbb
out
dec
and
mov
xor
mov
xor
add
into
mov
add
js
sub
shll
testl
out
sahf
out
jbe
adc
dec
outsb
je
fistpl
fisubrs
sub
call
movsb
sub
and
mov
test
daa
mov
sbb
mul
inc
adc
outsl
adc
sub
movsl
in
outsb
imul
les
pop
and
jbe
or
push
test
pop
xchg
arpl
push
jae
pop
xchg
jecxz
xor
mov
pop
ljmp
sub
sub
dec
inc
int3
jne
or
xchg
adc
cmc
jmp
movsl
sti
push
and
pop
nop
mov
pop
xorb
leave
test
lea
push
orb
pop
inc
subl
add
clc
jecxz
jle
cmpl
mov
inc
mov
stos
leave
test
mov
cmp
mov
and
aaa
sbb
add
je
add
xchg
icebp
jp
cwtl
xchg
mov
sbb
mov
fcomps
adc
mov
inc
pop
iret
dec
pop
push
and
insl
popl
lea
xor
iret
mov
add
push
mov
push
pop
sub
jp
pop
mov
and
jle
add
pop
fiadds
and
sub
inc
add
aam
pop
mov
pop
mov
cmpl
xor
negl
mov
std
arpl
push
in
xchg
or
lret
fmul
ljmp
pop
mov
pop
lcall
push
inc
fisttpl
adc
mov
and
inc
sti
in
ja
mov
outsb
lods
dec
jnp
pop
ret
repnz
shll
imul
sub
mov
inc
lods
adc
mov
ret
xchg
clc
pop
push
adc
xchg
pop
mov
iret
sbb
in
jmp
jle
pop
imul
add
jg
fstl
xchg
sbb
and
xorb
xor
or
lcall
in
dec
leave
aam
jne
popf
scas
jmp
jge
pop
fsts
mov
sub
std
sbb
shll
pop
mov
lock
lock
and
dec
jnp
std
mov
test
arpl
add
aad
add
or
sahf
pop
dec
rcll
push
push
xor
mov
inc
jne
movb
add
insl
outsb
dec
mov
and
and
je
es
mov
fidivs
jg
fwait
fwait
add
mov
dec
pop
and
add
sahf
cmpsl
hlt
add
movsl
fisttpll
xor
xor
pop
fisubl
xchg
sti
shll
xchg
std
fildll
xlat
dec
imul
or
stos
andb
fidivs
fcoml
int
pop
pop
add
in
mov
jbe
clc
jecxz
cs
mov
xor
scas
pop
and
shr
jl
inc
or
mov
sbb
imull
pusha
lds
add
jg
inc
dec
out
sbb
stc
lret
xchg
aaa
cmp
ds
push
daa
test
xchg
not
daa
mov
outsb
sub
xchg
adc
sub
testl
mov
out
and
inc
mov
mov
in
xchg
call
sbb
fldt
pop
cmp
mov
sbb
inc
adc
jns
and
fidivrl
cs
xchg
das
jb
jb
data16
into
ja
and
rcl
sub
aad
gs
test
imul
mov
pop
lods
sbb
cli
sbb
xchg
stos
lea
cmc
push
mov
test
or
scas
cld
pop
std
shll
je
or
pop
add
rcr
movsl
pop
dec
sub
call
jnp
push
cmp
repnz
jb
rcr
cmpsb
mov
in
and
pop
mov
mov
add
fcmovnu
outsb
inc
aad
xchg
cli
jo
pop
stc
xchg
mov
int
xchg
cmpsl
adc
pop
jae
mov
push
sarb
shl
adc
mov
mov
cmp
ret
inc
lock
mov
shr
pop
jge
pop
cmp
mov
shlb
repz
inc
mov
shlb
insl
and
or
out
pusha
ret
adc
sub
mulb
dec
and
mov
ss
test
cmc
mov
pop
inc
das
fcompp
mov
inc
cmpsb
arpl
mov
pop
add
into
inc
or
xchg
mov
lcall
sub
jnp
pop
mov
adc
js
pop
subl
xchg
fcoml
or
mov
sub
dec
arpl
push
or
add
xor
subl
cmc
es
pop
out
mov
mov
aam
in
xchg
hlt
add
mov
in
testl
jle
popf
xchg
adc
add
stos
lea
pop
xor
clc
shll
mov
mov
jmp
int
push
fstl
das
mov
push
je
jmp
mov
repz
or
jns
adcb
aam
mov
pop
stc
in
and
in
insb
mov
cmpsb
aad
mov
pop
test
pop
fcmovb
lea
sbb
mov
jp
fwait
push
ds
fcmove
in
or
ret
in
push
data16
rol
fstpl
adc
sbb
nop
or
sbbl
dec
mov
std
jl
pop
outsl
push
mov
xchg
out
inc
outsl
add
gs
flds
mov
and
mov
testl
roll
cld
push
repnz
push
outsl
add
out
or
mov
push
out
insb
cs
mov
imul
adc
mov
add
lahf
sub
or
dec
sub
xchg
sbb
jge
sbb
xor
mov
stc
sub
dec
enter
cmp
test
jecxz
fisubl
out
dec
icebp
pop
inc
push
mov
test
shll
inc
movsl
imul
push
sahf
or
pop
cmp
fimuls
mov
dec
cli
sbb
icebp
fidivl
sbb
insl
or
ficomps
cmpsb
xchg
cmpsl
les
mov
or
leave
shll
add
sub
in
in
sbb
lahf
add
aad
add
pop
fnstsw
sti
test
rorl
cld
imul
in
fsubl
aas
pop
sbb
aam
ljmp
dec
mov
xchg
inc
xor
mov
mov
sbb
je
mov
adc
into
mov
jge
pop
in
push
sub
mov
sarb
testl
out
xor
or
leave
popf
or
test
test
mov
in
pop
push
pop
xor
std
adc
lock
mov
push
cmp
fs
test
push
xchg
test
fimuls
cld
clc
test
push
mov
repnz
pop
shrb
lret
add
jg
sbb
in
into
jns
dec
fisubs
mov
pop
dec
repnz
fstpt
rorl
inc
mov
mov
jl
mov
outsl
mov
scas
out
movsb
mov
fcomps
sbb
ret
stos
test
mov
push
pop
cli
shrl
pop
sub
mov
popf
lret
cmc
mov
push
jnp
push
pop
pop
decl
stc
inc
add
out
pop
cmp
push
fstps
mov
pop
sbb
pop
data16
mov
ret
add
push
sub
fistpll
jg
pop
out
or
fiaddl
adc
sbb
jbe
stc
nop
js
gs
aam
cmp
adc
mov
jmp
push
jns
rcrl
sbb
jmp
xchg
push
out
lahf
push
sbb
mov
roll
xchg
xor
pop
and
pop
fcmovnbe
add
mov
pop
mov
adc
out
mov
cld
out
xor
cmpsl
stos
and
ret
xchg
std
repz
addb
into
jp
sbb
cmpsl
mov
fstpl
push
pop
stc
movsb
cmp
push
orb
or
lea
out
or
std
pop
sbb
testb
xchg
xor
aas
inc
pop
aam
jmp
adc
sub
xchg
cmp
push
ss
pop
pop
pusha
sbb
add
cwtl
leave
dec
pushf
lea
test
je
lahf
scas
jle
or
xchg
add
push
int
cld
xchg
loope
sti
aas
cmp
pop
cmp
xchg
mov
jp
jno
sbb
dec
sbbl
pop
gs
loopne
lods
imul
mov
repnz
loop
stos
lcall
jle
add
divb
adc
add
je
lahf
loopne
jg
or
pop
mov
cmp
inc
xor
dec
dec
mov
ss
leave
rcrl
movsb
outsb
hlt
and
sbb
and
insb
sbb
sahf
fdiv
iret
pop
popf
cld
add
and
into
sub
push
sbb
sbb
popa
or
mov
testb
sbb
push
pop
sub
cmp
popa
xorb
je
xchg
mov
jg
movsl
sbb
roll
pop
add
jb
leave
xchg
xor
inc
mov
sarl
sbb
push
and
jmp
dec
negl
repz
jg
ja
mov
rolb
add
lahf
cli
mov
cwtl
jno
jne
imul
push
push
push
jle
insl
aas
ds
mov
mov
cltd
push
jle
jg
pushf
cmpsl
in
cmp
xchg
shrb
scas
pop
dec
inc
mov
insb
fdivr
jbe
popf
leave
stc
outsb
xlat
shlb
pop
xchg
stos
movsl
inc
test
push
pop
jl
pop
lahf
push
push
pop
cwtl
jns
pop
inc
and
cs
mov
jle
int
decb
bound
shr
push
or
enter
js
scas
popf
sbb
dec
pushf
fcoms
aad
cli
jl
sbb
stc
sbb
cli
mov
fucomi
push
mov
sub
loope
xor
jnp
dec
fisttpll
lea
pop
addr16
sbb
fsub
pop
arpl
insb
in
arpl
adc
std
mov
add
fiaddl
push
arpl
gs
push
adc
xor
dec
sub
jo
mov
inc
adc
int3
adc
or
lcall
push
or
mov
aas
push
adc
mov
rcl
and
iret
jae
pop
popf
sub
andl
in
push
or
jg
scas
jmp
xchg
dec
xchg
jmp
sti
loop
xor
std
je
and
int3
lock
outsb
mov
cmpsl
test
sub
test
lahf
into
pop
pop
push
add
mov
pop
arpl
shll
xor
stc
movsb
pop
lods
mov
insl
ds
and
xor
add
lods
lds
rcl
sti
xchg
popf
ljmp
ljmp
into
sti
inc
aad
mov
xchg
push
fwait
push
scas
stc
dec
xchg
adc
mov
jo
sbb
add
inc
lret
xor
movsb
or
shll
jecxz
xchg
pop
in
mov
fcoml
and
inc
mov
cld
in
pop
in
mov
push
ret
inc
dec
mov
mov
test
inc
jne
sbb
pop
push
xchg
bound
out
pop
xchg
pop
push
dec
mov
jmp
test
fs
out
outsb
out
push
xor
ret
shlb
cmpl
mov
pop
cmpsl
pop
dec
out
inc
flds
sbb
movsl
mov
inc
int
out
mov
sub
int3
sub
jbe
mov
addb
dec
cld
push
repz
pop
pop
js
sbb
xlat
pop
cmp
mov
sbb
leave
push
cs
popf
movsl
mov
dec
push
imul
cmp
mov
in
pop
lods
pop
cmpsl
pop
mov
fsubs
test
add
and
rcrb
jmp
mov
enter
cmc
sbb
pop
mov
xchg
push
sbb
fwait
mov
mov
fistps
cli
into
dec
jg
gs
and
popf
add
or
jb
addr16
add
in
insl
jae
fstl
nop
mov
out
xchg
cmp
xchg
popf
gs
pop
shrb
or
pushl
push
sub
iret
add
cmpsl
pop
and
jnp
push
jecxz
adc
push
lea
push
imul
cmpsb
nop
int
insw
mov
jbe
icebp
pop
push
mov
mov
jne
inc
in
imul
dec
mov
mov
mov
mov
pop
test
add
imul
add
popa
inc
cli
gs
add
dec
das
test
xor
test
andl
adc
pop
xchg
aaa
mov
or
faddl
xchg
mov
xchg
or
fidivrs
jb
iret
lods
movsl
in
cmpsl
cmp
add
mov
sub
test
and
cmp
adc
dec
inc
or
push
outsb
mov
stos
xchg
stos
rclb
negl
or
xchg
sar
mov
xor
std
mov
cmp
imul
inc
in
adc
inc
pop
inc
mov
stos
add
aad
gs
jbe
aas
push
lods
cmp
mov
add
sbb
xchg
pop
loop
add
xchg
add
std
test
xor
std
arpl
mov
out
icebp
ficoms
stos
sbb
and
mov
ljmp
mov
or
sub
push
outsl
cmp
mov
mov
and
stc
and
jns
pop
sbb
dec
aas
pop
cmp
push
and
mov
xor
jnp
test
das
push
ja
cld
out
or
cs
sbb
dec
int
cmc
dec
cmp
lahf
push
adc
jl
sub
cmp
in
pop
cmp
decl
nop
pop
divl
repz
mov
dec
aam
adc
out
js
frstor
mov
mov
fcmovne
stos
mov
mov
lcall
je
mov
roll
pop
and
stos
outsb
in
xlat
xchg
adc
or
jecxz
mov
cld
fisttpl
xchg
rcrb
mov
sub
aas
inc
call
mov
xchg
int3
ja
shll
xor
out
pop
sbb
pop
aam
jle
mov
outsb
lds
sub
jg,pn
cmp
mov
mov
testl
stos
mov
pop
decl
and
fs
outsl
push
clc
xchg
stc
dec
popf
loope
xor
mov
popa
hlt
sbb
rorl
jg
mov
xor
mov
ds
mov
adc
outsl
je
add
jl
mov
pop
insl
jne
lods
push
pop
mov
jae
das
jp
jge
and
pop
pop
call
lcall
cld
push
pop
pop
xchg
movsl
sub
or
js
adc
cmpsl
dec
add
sarl
jnp
out
pop
lcall
fcmovnbe
or
xchg
enter
fistps
ret
stc
inc
stos
sbb
xor
pop
loop,pn
inc
imul
pop
adc
jo
cmc
repz
sbb
bound
xchg
mov
rcrl
clc
inc
mov
fldcw
loopne
adc
insb
incb
pop
test
pop
mov
cmc
in
scas
sbbl
fstpt
cmp
dec
dec
in
adc
xchg
sub
fsubp
mov
xchg
sub
lods
xchg
das
or
lock
ljmp
add
mov
pop
mov
and
ret
fcom
cmp
jno
adc
enter
lret
xlat
mov
shl
dec
ss
jg
pop
loopne
cld
inc
pop
jecxz
sti
xor
or
mov
jmp
xor
jo
cmpsl
into
mov
jo
out
or
mov
mov
aaa
mov
push
jl
jmp
enter
dec
lret
fistpl
inc
mov
xorl
pushf
ja
aas
mov
cmp
js
mov
adc
arpl
adc
imulb
xchg
pop
shll
adc
test
fisubs
adc
out
repnz
push
pop
test
mov
pop
xchg
iret
sbb
mov
into
mov
sub
aam
mov
push
add
sub
addb
inc
shl
push
jmp
int3
push
pop
pop
xchg
mov
das
fwait
pop
out
inc
add
pop
rcl
lods
in
cmpsb
fdivrs
push
sub
pop
dec
push
xor
arpl
xchg
pop
push
insb
mov
nop
mov
jnp
mov
mov
or
cmp
or
fisttpll
sbb
shrb
push
mov
push
pop
jbe
int
int3
inc
xchg
mov
xchg
lcall
mov
jae
xor
lea
cs
mov
pop
and
test
stc
xchg
xlat
lret
add
pop
nop
mov
jge
inc
orb
ljmp
scas
pop
xor
testl
pop
sbb
mov
jge
mov
add
pop
mov
stos
insl
lods
unpckhps
xchg
push
dec
mov
cli
mov
sarl
push
jo
ret
add
popf
fistps
ds
rorl
movsb
xor
push
aaa
fwait
stc
fldcw
mov
cmpsl
testb
imul
cmpsb
out
arpl
sub
xlat
inc
dec
in
mov
jle
adc
pop
cltd
inc
imul
dec
mov
mov
push
jmp
push
adc
in
fsubr
push
mov
pop
push
jbe
xchg
xorb
aaa
mov
mov
xor
jnp
pop
stc
dec
push
pop
ds
popa
xor
or
mov
in
popf
mov
mov
xchg
jmp
mov
and
fsubl
sbb
sbb
or
inc
sub
push
adc
add
inc
fadds
test
push
shll
stos
dec
mov
cmp
cmc
out
add
in
jmp
adc
lock
imul
bound
dec
sti
cmp
sbb
mov
add
imul
pop
cwtl
push
or
in
pop
jle
cmpsl
add
mov
test
jle
mov
arpl
in
mov
adc
mov
pop
xchg
xor
xchg
rcr
and
xchg
inc
dec
data16
das
repz
sbb
repz
aaa
adc
fsubs
dec
and
popa
mov
dec
adc
sarb
sbb
sbb
jbe
mov
sbb
icebp
xchg
cmpsl
loop
stos
jle
pop
fsubl
int3
xor
iret
or
cld
pop
mulb
jg
mov
mov
cmp
scas
jle
push
jbe
data16
and
ja
mov
push
rcr
loopne
mov
std
pop
dec
push
icebp
fwait
add
popa
mov
mov
mov
push
push
fstpl
dec
xchg
sub
ljmp
mov
dec
push
push
dec
sub
call
add
mov
sub
mov
pop
mov
pop
add
pop
pushf
lcall
mov
inc
inc
mov
jg
xchg
pop
insl
sub
adc
dec
jp
fcomi
hlt
xor
pop
and
fwait
out
imul
dec
cmc
stos
ficomps
inc
add
and
adc
push
or
insl
xor
push
mov
hlt
pop
icebp
pop
dec
xchg
ljmp
add
push
cmp
add
pop
arpl
gs
xchg
mov
enter
jo
negl
ret
xlat
or
lahf
frstor
je
outsl
sub
int
out
pop
xorl
popa
mov
sbb
clc
sarl
fs
push
jle
inc
sbb
push
cwtl
insl
aas
jmp
and
testb
lcall
data16
movsl
pop
outsb
sub
sub
inc
in
call
insl
jb
iret
shll
addr16
insl
fistps
jnp
shlb
idivl
jno
popf
adc
mov
scas
loop
mov
xlat
pop
mov
addl
or
je
call
or
push
xchg
sub
mov
mov
mov
mov
or
mov
cmp
adc
icebp
xchg
cmc
orl
lods
pusha
outsl
imul
nop
pop
loopne
adc
sub
inc
imul
mov
jbe
test
jo
les
adc
xor
sub
enter
clc
mov
icebp
bound
cmc
and
cwtl
or
lods
and
inc
pop
push
lahf
jg
in
push
jle
mov
mov
stos
adc
adc
sbb
iret
xor
mov
enter
cmc
imul
sub
mov
test
push
out
dec
push
je
xchg
je
lahf
inc
das
sub
data16
mov
mov
aam
idivb
rcrl
xlat
jge
adcl
cmpsb
sub
jp
and
movsl
or
sarb
ret
ss
jns
lea
in
test
iret
rcrl
call
mov
mov
mov
sbb
inc
ffree
pop
sub
pop
or
mov
pop
cltd
test
xor
sub
sbb
pop
mov
out
mov
bnd
mov
mov
cmp
mov
scas
cli
mov
fisubrs
mov
add
inc
xor
inc
leave
out
or
and
inc
fcoml
mov
inc
cld
lret
idivb
xchg
push
xor
inc
int3
inc
dec
xchg
shlb
sti
cmpsb
cltd
fsubrs
inc
or
mov
leave
insb
inc
dec
pop
insl
adc
xor
cltd
aaa
idiv
pop
mov
add
enter
bound
mov
in
mov
pop
cmp
jmp
jo
out
mov
mov
push
data16
lea
mov
pushf
mov
sbb
pop
inc
aad
in
mov
adc
stos
shrl
xchg
pop
imul
cmp
out
repnz
jecxz
push
xchg
jae
mov
nop
arpl
into
clc
pop
mov
mov
fldl
dec
sub
jle
ret
xchg
ja
das
in
mov
cmpsl
add
xchg
xor
fadds
js
fistl
pop
mov
lret
sub
daa
in
mov
lret
lods
push
arpl
xor
shr
sti
movsb
cmpsb
ret
test
mov
sbb
in
dec
les
adc
into
adc
push
mov
xchg
pushf
js
scas
inc
ja
mov
xchg
lock
or
fisttpl
push
insb
push
bound
fdivr
mov
in
imul
mov
scas
xor
pop
int
inc
aas
lea
subb
pop
ret
jle
jns
pop
adc
xor
mov
cmc
or
sahf
out
popf
adc
or
sub
leave
mov
pop
push
mov
mov
push
mov
fisttpll
imul
movsl
out
add
adc
les
jl
dec
push
mov
jbe
mov
xchg
dec
fcmovne
in
fadds
jp
push
cwtl
sbb
fs
scas
push
jl
movsl
testl
adc
aaa
fisttpl
mov
das
shr
ss
int
in
pop
add
cmp
cmpsl
das
leave
cmp
jecxz
xor
outsl
test
mov
ret
fsubrl
cs
lock
test
in
mov
lret
mov
and
inc
insb
mov
ror
shrl
fstps
lods
lret
loopne
cltd
in
das
mov
pop
pop
shlb
cmpsb
xor
jnp
rcrb
cli
dec
addr16
adc
push
negb
push
jl
sbb
add
fs
int
add
pop
xchg
scas
icebp
in
mov
enter
std
pusha
fisubrs
out
inc
inc
cmpsl
jb
scas
xlat
rcrl
mov
pop
push
rolb
mov
push
sub
jle
mov
movsb
lds
icebp
push
sbb
jne
cmp
out
xor
push
negl
sbb
sbb
pusha
lret
lahf
dec
sbb
ds
and
je
rep
xchg
mov
pop
jne
mov
lret
imul
push
scas
sub
inc
and
into
jo
mov
scas
outsl
add
divb
sub
jno
push
in
pop
or
mov
lods
int3
push
cmp
out
pop
cmp
ja
popf
pop
jmp
nop
xchg
mov
fstps
xchg
jnp,pn
ss
jg
pop
pop
rclb
pop
out
adc
mov
in
jne
arpl
cs
test
mov
popf
cmpsl
push
mov
push
cmp
cld
mov
pop
movsb
lahf
or
int
pop
push
lock
pop
push
or
sub
decl
mov
fsin
add
adc
daa
sub
pop
lods
adc
sti
mov
fisttpl
popa
sbb
clc
pop
insb
add
ja
icebp
pop
inc
rclb
xorl
in
es
test
arpl
pop
jne
mov
daa
mov
dec
jmp
mov
scas
push
dec
and
push
jle
sub
cmp
xchg
jge
or
cld
mov
in
and
repz
mov
rorl
mov
xor
std
and
jmp
add
pushf
imul
out
scas
push
pop
pop
or
or
push
and
mov
repnz
inc
ss
mov
loope
pop
pop
int
stos
pop
mov
mov
sub
lds
jle
int3
mov
jne
mov
xor
aas
mov
iret
jo
jbe
daa
sub
mov
mov
jmp
call
add
fbld
mov
pop
test
lods
je
mov
xor
mov
pop
cwtl
fwait
push
int3
jno
mov
xchg
in
sub
cmc
shlb
push
sbb
imul
or
jbe
test
stc
fldt
lea
cmpsb
ds
jae
push
popa
mov
stos
xchg
push
push
out
cmp
cmp
pop
push
loope
pop
cmp
insb
inc
lods
jo
dec
test
add
mov
add
clc
jg
stc
xchg
lea
add
xchg
pop
in
pop
jnp
mov
fwait
xchg
mov
dec
cmp
out
jmp
aas
sbb
addl
std
pop
dec
jnp
mov
push
add
add
lea
cmp
out
sub
xor
adc
rcr
lret
addr16
or
out
dec
subb
mov
inc
dec
out
pop
pop
jl
negl
iret
rcrl
sub
ljmp
mov
mov
push
pop
pop
aas
fldt
inc
add
hlt
xorl
fdivs
test
js
stc
jecxz
faddl
xchg
push
fldenv
out
mov
fwait
cmpb
shl
pop
scas
or
or
mov
mov
cwtl
into
mov
jnp
js
imul
push
sbb
push
in
mov
mov
xor
pop
leave
dec
imul
mov
and
je
jmp
fnstcw
rcrl
shrb
fst
popf
dec
push
and
mov
pop
das
shrb
ret
mov
mov
xor
lcall
ss
pop
dec
sub
and
fcmovne
scas
aas
xor
pop
je
dec
xchg
ss
fistl
mov
inc
sub
cld
push
pop
shufps
pop
aas
inc
outsl
cmp
jno
outsb
rcll
in
mov
in
popf
and
sbb
and
sub
or
sahf
test
push
fnstsw
pop
push
sti
adc
iret
xchg
mov
add
pop
jnp
inc
lret
gs
lods
stos
push
lret
scas
sarl
xor
pop
inc
sub
movsb
jmp
mov
cmp
mov
or
stos
pop
cmp
mov
test
add
and
ret
icebp
jns
out
and
or
pop
shrl
push
adc
loopne
out
out
testb
les
rorl
pop
and
bound
fisubrs
xor
mov
cli
mov
das
cmp
mov
cltd
inc
mov
jl
inc
andl
pop
add
push
imul
adc
jbe
jo
stos
mov
fldl
mov
in
and
cli
inc
mov
orl
jg
stos
out
out
scas
sahf
sbb
add
mov
aas
jecxz
pop
push
jecxz
sbb
cmp
int3
bswap
mov
shlb
std
out
fs
fldcw
pop
xchg
clc
sub
enter
xchg
scas
adc
mov
or
jo
rclb
rep
sub
loopne
es
ljmp
jb
in
ss
cltd
xchg
cs
ret
sub
sbb
jne
sahf
rcr
je
cmp
js
inc
xor
sarl
push
iret
mov
cmpl
iret
xchg
dec
pop
jl
lcall
ds
or
stc
adc
neg
inc
je
mov
ds
push
fwait
cmc
mov
daa
xchg
mov
out
fnstenv
leave
fcoms
push
jae
mov
push
push
cmp
jne
daa
inc
jle
sbbl
fwait
xor
insb
clc
mov
shrb
lds
cmp
fs
sub
enter
pushf
mov
sbb
jecxz
fidivs
pop
cli
and
cmp
pop
mov
imul
dec
leave
pop
out
mov
mov
sarl
es
imul
ds
in
mov
in
hlt
inc
dec
pusha
dec
enter
ss
pop
inc
inc
js
push
sbb
test
or
ss
cmp
dec
inc
hlt
jmp
push
pop
inc
shrl
cwtl
mov
add
mov
fisttps
push
add
outsl
test
mov
jns
stc
mov
fisubrs
sbb
sbb
mov
push
mov
outsb
mov
outsb
mov
inc
pop
jns
cmp
arpl
or
or
sbb
int
fdivrs
xchg
pop
sbbl
into
cmp
pop
cwtl
sub
jns
and
pop
jno
lahf
push
pop
mov
jno
test
cmp
xor
sti
push
mov
dec
xchg
jle
in
cmp
or
cmpl
adc
lods
lods
in
iret
testl
clc
xchg
jecxz
icebp
cmc
pop
xchg
pop
sub
mov
in
pop
xchg
or
out
adc
add
pushf
mov
jecxz
lahf
je
push
mov
push
fcompl
shll
aas
sbb
fbstp
xchg
sbb
add
xor
mov
leave
and
ret
cld
adc
mov
mov
call
pop
jnp
daa
das
rcl
or
sti
cmp
xor
jg
pop
mov
mov
mov
inc
in
mov
dec
push
aas
repz
add
sbb
mov
push
xor
push
pushf
xchg
mov
sti
sub
jge
cli
mov
sti
pop
xchg
loopne
pop
je
clc
icebp
dec
dec
outsb
push
xchg
rcl
mov
cmp
subl
imul
movsl
call
sub
jge
push
inc
cmpsb
push
shl
mov
out
stos
pop
cmpsl
pop
inc
jmp
and
mov
notl
mov
mov
mov
jb
mov
and
mov
aas
jb
mov
add
enter
arpl
jp
pop
xchg
add
lods
fnstcw
mov
mov
aam
dec
dec
xchg
dec
shlb
xchg
push
enter
ljmp
dec
nop
lea
dec
fstps
nop
jmp
repnz
adc
pop
subl
xchg
dec
xor
pop
sbb
fdivl
addr16
call
stc
scas
sbb
mov
scas
jnp
sbb
or
adc
pop
stos
cmp
lret
cld
add
add
lcall
mov
add
push
out
pop
add
jne
jmp
pop
lods
sti
enter
lods
lock
stc
add
lods
jbe
dec
clc
mov
andb
and
or
sti
pop
rclb
mov
movsl
jb
mov
pop
cs
pop
iret
push
cli
sub
and
adcb
jno
int
mov
dec
test
inc
mov
sbb
fiadds
imul
sbb
mov
add
pop
mov
aaa
adc
fistpl
in
push
cmp
imul
in
arpl
js
pop
sub
aaa
push
mov
addr16
jge
imul
and
pop
cs
inc
pusha
mov
gs
shrb
mov
outsl
lea
shrl
js
js
out
add
cwtl
add
mov
loopne
inc
lods
and
out
pop
loop
arpl
xor
mov
in
outsl
iret
insb
call
mov
dec
inc
movsb
stos
push
adc
sbb
fwait
pop
mov
fmul
and
mov
cmpsb
jo
sub
pop
cmp
hlt
or
dec
dec
or
jbe
cmp
flds
jno
push
jle
out
adc
add
test
jo
mov
fs
hlt
jg
pop
jle
in
std
mov
mov
inc
and
xchg
shl
loopne
sub
jg
repnz
cmpl
out
mov
jge
pop
rcrb
and
out
pop
js
and
cmpsl
sub
xorl
jmp
popf
add
push
fwait
dec
subb
jle
dec
dec
stos
jbe
cli
fbld
sbb
fs
test
daa
frndint
cmp
push
mov
mov
pop
andb
divps
js
and
inc
pop
inc
daa
jb
dec
in
or
push
rcl
bnd
iret
dec
pop
leave
sub
add
mov
adcl
push
sub
add
jle
shrl
mov
out
and
pusha
rcll
pushf
aad
popf
mov
dec
cmp
inc
pop
pop
cmp
xor
dec
sbb
mov
sub
jge
jg
movb
or
sti
sub
sub
mov
test
loope
popa
outsl
scas
loope
or
lahf
mov
cmp
mov
clc
das
aaa
sbb
lcall
xchg
lea
sar
pop
jne
cmp
pop
xor
xor
or
test
mov
in
pop
repnz
incb
adc
rcrb
pop
and
mov
testb
out
subl
add
mov
jg
pop
mov
dec
sbb
jnp
pop
in
add
sub
push
out
adc
sarl
lds
mov
pop
sub
imul
loop
adc
es
out
pop
cmp
mov
inc
xchg
out
pop
jge
test
dec
inc
frstor
add
jp
adc
rorl
and
in
orw
mov
push
stos
xor
pop
sar
pop
test
std
popf
pop
inc
mov
call
cmp
sbb
lcall
cli
test
push
push
outsl
xchg
dec
or
mov
xor
cmpsl
mov
sub
jmp
jg
mov
pop
and
clc
xchg
pop
and
push
and
cli
test
adc
xchg
mov
pop
sub
rcr
dec
sub
js
sub
xor
mov
inc
std
leave
inc
lods
shlb
dec
jmp
fisubrs
lahf
pop
add
pop
fiaddl
lea
jge
cmpsb
sbb
push
insb
jmp
dec
mov
les
fdivrl
pop
sbb
mov
inc
xor
jmp
addl
je
jo
sti
fucomp
sbb
jbe
out
outsl
pushf
mov
fstpt
pop
mov
scas
mov
pop
sbb
inc
xor
fucomip
fnstcw
stc
inc
scas
fst
add
sbb
pop
adc
jecxz
sub
je
xor
mov
sti
push
dec
aad
movsl
call
sub
das
jmp
lret
sbb
pop
add
xlat
jle
adc
in
sti
push
xor
jmp
push
dec
mov
shrl
sub
mov
adc
ljmp
xchg
scas
adc
adcb
popl
sbb
fdivrs
inc
ret
rcll
ja
xchg
push
xor
pop
adc
inc
sbb
ffree
outsl
inc
or
lds
divb
flds
loopne
push
insb
ret
pop
mov
mov
cltd
mov
push
sub
and
mov
jbe
lahf
xor
ret
hlt
add
pop
call
push
push
xor
sub
pop
xor
in
call
sti
jg
adc
sti
cli
cmp
inc
clc
mov
sub
mov
ss
inc
imul
test
cli
fucomi
pop
cmp
sub
mov
fsts
out
xor
cwtl
fst
lea
xor
push
std
fwait
dec
ret
stc
inc
test
adc
push
test
stos
les
sub
push
je
mov
test
std
fcompl
js
dec
shr
xchg
enter
ds
mov
cmpsb
inc
jg
add
mov
mov
push
int3
test
adc
ja
mov
mov
xchg
insb
movsl
push
push
lret
or
sti
add
or
rcl
pop
pop
lret
jbe
rcll
push
jmp
sub
ficoms
lret
iret
jp
adc
cmpl
nop
or
and
mov
adc
fiaddl
push
mov
cmp
fisubrs
push
int3
mov
pop
jno
sahf
adc
sub
mul
adc
in
mov
jmp
mov
mov
push
inc
sarl
addb
scas
jmp
std
inc
inc
pop
pop
sbb
push
ja
repnz
xor
gs
inc
sub
add
adc
gs
popf
inc
ljmp
mov
mov
pop
out
or
loopne
xor
mov
xchg
xchg
dec
cmpsl
xchg
cmpb
cmpsl
push
mov
pop
xchg
sub
sub
in
push
add
rcr
xor
mov
push
sbb
lock
or
ljmp
push
ret
xorb
cltd
negl
push
push
inc
mov
arpl
cmp
mov
inc
or
dec
mov
mov
push
test
rcrb
aaa
push
jne
inc
scas
iret
outsb
xor
mov
xor
jbe
pop
test
xchg
fdivl
lret
or
loop
sbb
push
lds
sbb
sub
inc
popa
sti
pop
push
fchs
and
stos
lea
mov
mov
insl
add
mov
sub
mov
loope
push
jno
ffreep
int
pop
jno
sarb
mov
test
scas
mov
sub
jnp
pop
hlt
xchg
jl
cs
sahf
pop
pop
mov
pop
add
fcmovb
jle
out
sbb
iret
adcl
jo
lods
and
aad
je
in
adc
mov
push
dec
mov
aam
stc
cmc
in
imul
xchg
xchg
movb
pop
or
ja
jmp
xchg
std
cmpsl
pop
daa
mov
cmp
jns
mov
add
std
outsl
fs
pop
fcoms
je
jmp
sahf
lods
or
ficoms
ljmp
orb
mov
adcl
sbb
dec
mov
in
dec
movsl
mov
call
and
jo
loop
xlat
test
or
fdivrs
mov
cmpsl
jle
push
jle
rcrl
stos
lods
push
inc
mov
insl
mov
pop
movzwl
das
cltd
jnp
mov
mov
pop
xchg
sbb
loop
sub
fcmove
enter
mov
leave
shl
adc
mov
mov
xor
cmp
enter
mov
mov
mov
fwait
bound
or
or
and
in
arpl
lret
dec
ja
ret
cld
popa
or
mov
fildll
sbb
mov
sbb
adc
mov
push
enter
cmp
arpl
cmp
out
rcl
pusha
jle
insb
aam
jo
fucomi
dec
xchg
pop
pop
sub
fwait
add
lret
test
mov
mov
push
pushf
cmc
sub
stos
mov
inc
inc
sar
mov
shl
xchg
out
ljmp
scas
jne
imul
push
sub
scas
repnz
xchg
rorl
sub
jb
in
push
dec
jle
inc
ja
pop
pop
sar
mov
and
lea
xchg
sbb
push
add
or
rcr
in
jmp
xchg
sti
je
cmpsl
pop
ljmp
movsb
fsubrs
adc
or
and
push
and
aas
cli
std
push
inc
pop
notb
and
mov
pop
adc
or
jge
jg
jge
fdivrl
pushf
scas
mov
aad
dec
adc
je
idiv
leave
adc
rcrl
sbb
jg
imul
popf
inc
sbb
repnz
dec
add
mov
xchg
adc
push
mov
test
jle
in
popf
sbb
xor
dec
pop
cli
push
inc
imul
xor
cmc
fbstp
repnz
mov
lahf
pop
or
push
push
scas
xchg
push
mov
sti
sub
push
xor
in
pop
insl
push
mov
inc
xchg
xor
mov
inc
test
pop
dec
jbe
dec
cli
fmull
push
imul
add
out
imul
out
sbb
pop
in
lods
test
xor
and
pop
insb
mov
sbb
mov
test
and
and
pop
lds
xchg
lods
cmp
jle
mov
cmp
push
imul
mov
mov
dec
sbb
dec
sub
fisubrl
adc
lret
xchg
shrl
int3
adc
lahf
repnz
pop
xchg
out
cmp
shrb
scas
pop
imul
xorb
pop
lods
sti
push
add
lret
cmpsb
push
std
ret
mov
pop
xchg
adc
dec
lret
cmpsl
add
fcmovbe
fwait
imul
aad
es
sub
pop
movsl
in
adc
rcrb
dec
cli
jmp
xchg
and
push
insl
sbb
cld
cmp
inc
sub
dec
ficompl
ss
cmp
ljmp
and
fcmovbe
pop
xlat
pop
jns
push
pop
outsb
cmc
pop
mov
mov
shrb
mov
fcomip
pop
aaa
and
cmp
enter
sbb
add
imul
or
push
fstpl
jnp
pop
push
sub
xchg
sub
aad
cmc
in
mov
mov
cmp
and
test
in
loop
push
imul
notl
lcall
enter
mov
dec
iret
mov
pop
arpl
push
sbb
mov
cwtl
sbb
test
mov
mov
add
rcll
mov
xchg
outsb
fmuls
daa
arpl
or
pop
push
inc
mov
fadds
leave
jns
pop
pop
fucompp
shlb
and
fdivrl
jmp
sbb
in
push
pop
inc
aam
push
dec
movsb
mov
divps
xchg
popf
or
mov
jmp
adc
sub
mov
ss
push
test
insl
add
enter
push
inc
gs
cmp
mov
pop
sbb
mov
add
sti
or
push
nop
dec
dec
test
inc
sub
aas
sti
cmpl
xchg
mov
push
xor
dec
dec
fninit
xchg
add
adc
jg
pop
insl
arpl
pushf
mov
add
idivl
std
lods
mov
pop
inc
int
jge
imul
rclb
pop
inc
addr16
daa
xchg
in
cmp
xor
jb
mov
xchg
aaa
cmpsb
pop
bound
pop
idivb
sbb
aaa
inc
or
mov
inc
jg
pop
out
sbb
or
xor
push
inc
jg
pop
xor
imull
jg
adc
mov
aaa
xor
mov
jnp
in
sbb
mov
fdivs
cmp
jmp
ret
aam
adcl
les
inc
pop
bound
inc
adc
ja
ret
or
js
popa
jp
outsb
fdivrs
outsl
cmp
test
push
jp
dec
xchg
dec
imull
out
push
mov
clc
dec
sub
add
pusha
stos
cvttps2pi
arpl
scas
out
imul
ret
mov
in
pop
dec
js
sub
je
cmpsb
mov
mov
mov
adc
jae
mov
aas
add
pusha
jle
aas
jmp
cmpsl
ret
movsl
hlt
mov
push
push
pop
fcoms
js
inc
pop
fnstcw
dec
popf
cwtl
cmpsl
push
xchg
gs
gs
cmp
fbstp
int
das
or
xchg
rolb
aas
dec
xchg
fistpl
ficomps
mov
xchg
sub
mulb
mov
or
movsb
ficoms
xor
jbe
mov
sub
mov
adc
addb
inc
fcompl
and
mov
f2xm1
sub
mov
mov
and
add
fmulp
aam
and
add
inc
mov
jmp
outsb
loop
fnstenv
add
mov
pop
fnstcw
arpl
xorb
add
cmpsl
xchg
aam
xchg
jg
xor
mov
xorb
dec
test
jnp
push
cmp
orl
bound
negl
pop
cmp
js
in
mov
jge
call
jns
outsb
pop
mov
sub
pop
rcrl
lret
sbb
sti
xor
call
call
sub
cmc
sub
mov
xlat
lea
jmp
cltd
loopne
movsb
mov
mov
mulb
push
test
adc
ret
lds
sbbb
in
dec
lret
pop
sbb
cld
xchg
adc
out
icebp
fildl
jmp
add
cli
jno
aad
mov
shll
and
pop
cmp
ds
jl
add
mov
fld1
leave
icebp
sti
int3
mov
cmpsb
shr
push
pop
sub
arpl
xchg
in
ficomps
lahf
or
into
dec
jl
add
repz
adcl
and
mov
mov
cmp
call
sbb
pop
js
std
test
add
mov
mov
adc
in
adc
shll
sub
xor
rcr
sbb
fsubs
lods
xchg
xlat
repz
test
lods
es
aas
lret
sbb
jle
scas
sub
outsl
xchg
mov
xchg
jmp
loopne
mov
sbb
fimull
or
fbstp
dec
push
or
or
or
jo
push
popa
push
rcr
pop
pop
faddl
cmpsl
subl
sub
add
jge
or
sti
cwtl
mov
cmpsl
xchg
hlt
jnp
pop
or
rclb
int3
aas
mov
pop
jmp
data16
mov
mov
or
jecxz
push
scas
rclb
jne
dec
xchg
ljmp
dec
dec
sub
sub
movsl
out
mov
jno
rcr
cli
push
cmp
dec
push
mov
and
pop
pop
mov
and
add
cmp
jle
lea
roll
and
lret
mov
sub
lods
hlt
adc
repz
test
xchg
pop
cwtl
add
ds
fcomi
clc
sbb
fld
xor
daa
or
push
les
pop
dec
or
jg
pop
adc
in
lea
outsl
int
xchg
and
cmpl
pop
in
movsb
or
mov
adc
push
movsl
mov
mov
inc
outsl
mov
loope
jp
and
aas
cmp
popf
sbb
daa
or
popf
pop
xor
insb
out
idivl
stos
lret
ret
mov
repz
or
pop
std
stos
int3
cld
scas
pop
out
pop
xlat
adc
sub
inc
rol
xchg
call
jne
stc
outsl
adc
fmull
mov
ds
and
out
xchg
add
add
out
dec
mov
pop
sbb
ret
lahf
stos
mov
test
lret
dec
pop
push
rcrl
ss
adc
mov
out
fcoml
xor
pop
fs
sub
adc
roll
push
xor
icebp
mov
test
push
pop
dec
and
inc
lcall
cld
sub
incb
sbb
mov
testl
cmpb
adc
popf
es
rcrb
movsb
aaa
and
js
popf
jle
adcl
stos
scas
jmp
jae
sbb
loope
pop
cltd
into
or
addps
inc
sub
mov
iret
inc
cmp
mov
sub
cmp
ret
loope
sub
sti
adc
cwtl
jp
mov
dec
cli
jp
xor
outsl
outsb
mov
xor
mov
lods
ljmp
mov
add
outsl
lods
cmc
or
int
jns
gs
loopne
addr16
push
inc
leave
clc
fldl
jne
ds
xchg
jae
dec
push
in
js
hlt
mov
mulb
dec
in
bound
je
addr16
outsb
imulb
push
ja
cld
stos
lods
int
out
test
mov
ds
push
es
in
mov
pop
inc
js
jne
sub
int3
sbbb
test
sbb
dec
movsb
mov
or
insl
mov
js
add
mov
cmp
or
xchg
sub
mov
cmpsl
fldcw
mov
lret
pop
xchg
mov
das
ja
inc
in
cld
sbb
mov
roll
stc
cmp
pop
xadd
sbb
xlat
push
stos
mov
outsb
cmp
mov
sbb
mov
adc
fistpl
in
ss
sti
add
orb
pop
call
fldl
out
call
in
mov
sbb
adc
fdivrs
cmp
or
mov
int3
mov
es
push
scas
or
cmp
add
mov
cmp
cmc
out
pusha
cmpsl
jle
xchg
push
xlat
lea
jne
pop
imul
fistps
adc
das
jecxz
push
sub
sbb
mov
fildl
aas
popa
fdivrl
in
push
jne
ret
test
pop
imul
rol
test
rcrb
add
mov
shll
movsl
imul
in
lock
adc
sbb
mov
sbb
std
scas
pop
mov
cwtl
arpl
out
scas
lds
cld
sub
mov
imul
in
call
inc
mov
je
or
lea
and
adc
subl
pop
ljmp
dec
aam
outsl
adc
nop
adc
mov
imul
jge
adc
sub
das
insl
cmpsl
in
mov
and
pop
rcrl
or
lret
mov
cmpsb
loop
pop
hlt
add
sti
cmpb
mov
dec
cs
cmpsl
xchg
pop
xor
mov
jb
add
cmp
aas
adc
jecxz
imul
jecxz
xor
mov
rolb
pmulhuw
push
pop
mov
sub
pushf
leave
iret
test
push
push
sub
imul
imul
and
pop
dec
cmp
iret
xchg
sbb
mov
push
div
adc
sarl
mov
sbb
data16
sbb
dec
inc
mov
sti
dec
shll
push
fcompl
mov
filds
insb
xlat
adc
xor
sub
pusha
idivl
dec
add
aas
out
cmpsl
push
xor
pop
imul
idiv
pop
push
notl
adc
cmc
movl
aam
pop
mov
pop
enter
sub
mov
push
popf
icebp
adcb
stos
ljmp
inc
pop
dec
mov
mov
inc
or
and
mov
cltd
xchg
outsb
jg
pop
sub
mov
adc
mov
cld
pop
cmp
add
mov
jp
push
inc
jae
imul
jle
imul
jl
sub
fnstsw
mov
push
fistpl
aad
xchg
sbb
lods
loopne
jg
out
pop
pop
fcomps
xchg
loope
iret
rol
enter
mov
mov
leave
cmc
pop
mov
fimuls
shrb
mov
mov
enter
xor
pop
inc
fcomps
loope
mov
mov
cltd
in
adc
or
mov
cmp
and
outsl
jmp
mov
pop
mov
xchg
jnp
mov
xchg
insb
mov
arpl
xchg
subb
sub
mov
inc
pop
testl
scas
inc
fwait
cld
sbb
pop
ret
sub
add
rorb
icebp
lahf
mov
or
mov
push
pop
pop
imul
xchg
cmp
aad
das
lods
popa
fisubrl
sarl
mov
pop
sti
pop
dec
jb
mov
sbb
dec
mov
mov
xchg
out
pop
xor
sub
add
pop
add
fmull
mov
fnsave
stos
outsb
and
jle
pop
das
mov
fmull
pop
xchg
mov
outsl
xchg
fldenv
xor
or
psrld
lea
ret
add
adc
test
aas
mov
add
xor
fidivl
adc
mov
lock
fldcw
xchg
xchg
and
xchg
leave
and
and
inc
mov
xchg
iret
dec
pushf
shl
push
pop
mov
sub
add
inc
std
shll
inc
or
adc
xor
mov
adc
inc
out
fcomps
ret
pop
mov
xchg
fstps
iret
repz
or
sub
mov
bound
insb
lret
addb
rcrl
or
cmp
adc
ds
fstl
xor
and
jle
outsl
rcrb
and
inc
push
inc
insl
fwait
rcll
fnstenv
cli
push
ficompl
cmp
push
xor
pop
movsb
mov
int
leave
push
mov
lea
fs
pop
test
pop
or
pop
aas
leave
sub
cwtl
out
lret
addr16
sbb
cli
inc
mov
mov
pop
bound
fldenv
gs
jae
sub
cmpsl
imul
cld
cmp
stos
arpl
fisubrs
sub
mov
stc
in
icebp
cmp
dec
inc
int
pop
test
pusha
repz
jae
cmp
push
adc
cmp
push
insl
fimuls
mov
aad
stc
shll
sbb
cmp
inc
pop
or
dec
test
insl
inc
fidivs
mov
pop
inc
arpl
jecxz
mov
mov
cmp
adc
addr16
fst
or
jle
call
and
in
jmp
negl
fadds
jl
lcall
nop
cmpl
lds
ret
sahf
xchg
cmp
movsb
jl
cwtl
loop
iret
pop
negl
mov
loope
in
aas
and
and
test
pop
xor
daa
sbb
aam
lcall
mov
pop
fistpl
imul
mov
mov
jno
movsl
add
fidivrl
mov
pop
out
adcb
pop
in
cwtl
sub
jg
pop
idivl
stc
jl
sub
jge
iret
movsb
cs
sbb
push
and
sbb
pop
ss
and
stos
sbbb
outsb
aam
cmc
inc
iret
or
call
enter
mov
jg
out
int
sahf
movsb
mov
and
mov
jo
dec
adc
scas
mov
notb
xchg
xor
jnp
lds
outsl
insl
jne
jbe
fbstp
mov
icebp
and
lahf
pop
and
or
fwait
xor
cwtl
jb
push
fcom
dec
pop
mov
clc
adc
fsubs
push
mov
xor
pop
scas
cli
jl
add
push
out
sbb
push
in
roll
adc
jmpw
jl
xchg
lret
stos
pop
ret
push
sub
mov
mov
jae
mov
or
jl
stc
jl
add
jno
mov
xchg
ljmp
ficoml
inc
inc
mov
inc
lcall
arpl
sbb
idiv
or
mov
clc
mov
arpl
subb
jne
int
push
inc
inc
test
pop
call
cld
pop
inc
mulb
lock
adc
inc
fistl
add
xlat
testl
scas
mov
inc
jno
xchg
jbe
dec
test
add
xor
xchg
cltd
pop
dec
pop
push
dec
rolb
cmpsb
mov
jbe
xor
roll
adc
lea
dec
pop
jl
sbb
jg
inc
lock
lcall
in
xchg
adc
imul
pop
rcl
insl
inc
mov
dec
sbb
in
ds
push
and
jge
pop
jg
cltd
cmp
sti
adc
sub
or
and
jp
shl
push
jmp
inc
addr16
mov
xchg
or
std
sarb
adcb
imul
sahf
and
fistps
in
mov
pop
cmc
icebp
mov
jg
sahf
ret
std
jg
insl
mov
mov
neg
cmpsb
and
es
mov
or
fisttpl
mov
stc
mov
adc
inc
pop
inc
enter
cmc
loop
loopne
xchg
cmc
lods
clc
mov
push
and
pop
push
movsb
and
dec
sbb
cmp
push
xchg
push
aas
xchg
dec
sbb
jg
ret
sbb
xchg
arpl
int3
outsl
cwtl
ljmp
jmp
cmpsl
daa
pop
out
add
and
cltd
stos
mov
inc
mov
adc
arpl
mov
into
mov
mov
dec
jmp
mov
aam
scas
jbe
mov
shll
insb
sub
scas
xor
dec
pop
add
sub
jnp
dec
mov
mov
cmc
fiadds
addl
iret
jge
mov
xchg
push
mov
push
cmpsl
ja
mov
pop
and
sub
adc
and
and
ret
mov
and
jno
stos
fsts
popf
mov
lret
pop
jmp
jmp
repnz
jnp
ss
jo
add
loop
out
jg
push
test
notl
adc
fdivl
mov
adc
xchg
fdiv
int3
dec
ret
cmp
cmp
mov
ret
sbb
xchg
or
ret
int
mov
push
fisttpl
pop
mov
inc
cld
lret
push
leave
push
sub
mov
sbb
cmp
scas
jmp
cmp
inc
jo
pop
scas
or
push
scas
mov
push
cmpsl
mov
push
or
dec
jb
or
ret
std
or
mov
xor
cwtl
xchg
pop
lods
stc
jmp
call
fucomip
pop
and
mov
mov
add
aas
add
mov
sub
mov
jne
jle
shr
or
mov
or
jne
stc
adc
pop
ja
arpl
shlb
outsb
icebp
pop
lcall
mov
adc
inc
testb
insb
arpl
push
je
roll
add
sahf
xchg
sub
mov
mov
sbb
dec
pop
mov
iret
stos
pop
jno
mov
imul
rorl
xor
mov
mov
sarl
xchg
xchg
lea
jo
movsb
enter
mov
jp
hlt
add
leave
fstp
mov
sti
pop
fwait
inc
inc
insl
jl
stc
jmp
lock
out
mov
mov
sarb
pop
dec
mov
cmpsl
test
mov
mov
faddl
dec
push
or
int3
mull
mov
jnp
fstpt
lahf
ds
daa
push
mov
leave
pop
cmp
add
jl
pop
pop
addr16
xchg
test
fiaddl
sub
sbb
add
notl
add
loopne
shr
sti
sub
popa
into
jne
fwait
sbb
je
test
adc
iret
dec
mov
roll
xchg
mov
jae
pop
cmp
dec
dec
fnstenv
aad
or
fcmovnu
inc
insb
push
inc
or
imul
repnz
pop
stos
mov
sub
jbe
movsb
mov
call
jnp
cld
out
addb
mov
imul
stos
mov
add
push
jnp
lods
lcall
cmp
adc
or
xchg
cmc
xchg
mov
ljmp
pop
add
loop
pop
rolb
je
hlt
pusha
sbb
stos
pop
push
sti
or
in
data16
mov
imul
mov
cmp
xchg
sbb
mov
cmp
xchg
cltd
mov
mov
ds
dec
pop
scas
jb
or
push
sbb
div
xchg
sti
pop
or
mov
add
mov
fistpl
std
cmpsb
add
lods
arpl
jl
push
les
xchg
sbb
push
xchg
aaa
rcr
fdivs
sbb
add
faddl
pop
push
fldl
es
aas
add
push
pop
and
iret
sbbb
push
divb
cmp
jae
cmpsl
ljmp
sbb
push
icebp
in
pop
inc
lods
jmp
js
cmp
push
jg
lock
jne
jg
xchg
xchg
add
ds
rorl
push
ss
je
popf
mov
pop
movsl
sti
stos
call
loop
out
lea
dec
popf
pop
daa
push
sbb
or
inc
sbb
fstpl
repz
cwtl
mov
adc
insb
loopne
cmc
in
lahf
mov
popf
hlt
loope
push
adc
push
icebp
flds
outsb
mov
jge
fwait
mov
imulb
mov
inc
dec
ret
mov
or
dec
test
mov
fldpi
xor
mov
gs
pop
cmp
pop
stos
ret
adc
in
fnstenv
adc
sbb
lahf
addb
fcmovnb
repnz
sti
in
test
ficoml
inc
nop
rorl
push
cmp
scas
imul
test
mov
movsb
or
jp
cmp
jne
and
shrb
cltd
inc
sub
sti
mov
aam
rcrl
loope
jecxz
lahf
xor
add
out
fists
enter
push
xchg
repnz
or
fisubrs
pmuludq
inc
notb
and
and
xchg
and
and
pop
mov
insl
mov
pop
inc
sub
add
add
inc
push
cmc
mov
jne
je
xchg
mov
jmp
pop
or
pop
jg
xor
mov
jge
sti
inc
dec
mov
fildll
out
out
stos
inc
mov
push
xor
or
out
in
ds
inc
dec
iret
bound
adcb
xor
cmp
xor
dec
add
leave
mov
ds
iret
arpl
pusha
pop
pushf
jno
mov
and
outsl
pop
enter
push
mov
and
dec
imul
les
mov
call
repnz
popa
enter
packuswb
xor
lea
dec
pop
mov
sub
es
out
fsubrs
mov
or
adcb
cmc
stos
pop
push
aas
dec
add
addl
xchg
cmp
xor
les
cmp
addr16
ds
pop
pop
popf
shlb
xor
inc
scas
mov
sub
add
bound
push
popa
sub
xchg
fnstenv
in
mov
cmpsb
pop
nop
jle
sbbl
dec
or
scas
xchg
inc
push
mov
push
sti
and
cmp
flds
stc
pop
pop
insb
inc
mov
stos
test
idivl
scas
pushf
das
pop
add
pop
repnz
add
addr16
out
xor
dec
pop
sar
mov
test
scas
cmp
test
add
test
sbb
xchg
roll
scas
cli
sub
mov
jmp
es
data16
adc
pop
shll
jb
dec
pop
into
fsubs
popa
jbe
shrb
scas
mov
repz
in
or
mov
in
cli
push
cmp
lods
cld
inc
cmc
xchg
sub
stos
mov
add
aam
je
mov
js
ljmp
pop
xor
aas
fisttpll
roll
xchg
add
add
mov
lret
xchg
mulb
pop
subb
enter
adc
iret
sbb
ficoml
dec
mov
clc
ljmp
lods
out
popf
jmp
adc
mov
cli
mov
pop
adc
adc
cltd
rcl
sbb
mov
fsqrt
stos
pushf
sub
mov
loop
lock
jmp
mov
outsb
stc
add
addr16
or
sbb
call
aaa
pop
add
imul
push
push
add
jle
pop
sub
mov
sbb
cmc
subb
std
leave
cs
mov
push
sub
fsubp
lea
lcall
jns
adc
mov
pop
mov
jl
loop
scas
stos
pop
or
inc
fcomps
sbb
mov
jne
pop
imul
dec
jb,pn
arpl
insb
xchg
sub
or
lods
mov
mov
fsubs
sbb
or
xchg
adc
push
push
add
ljmp
pop
int
mov
add
into
scas
mov
ficomps
jne
fdiv
xor
insl
mov
test
pop
mov
aad
add
aaa
out
pushf
loop
pop
xchg
mov
out
add
scas
mov
jae
adc
push
ret
sbb
ja
popf
inc
stc
in
sub
cwtl
xchg
pop
daa
and
cmp
aaa
inc
jns
push
fstl
jle
pop
push
out
cwtl
fiaddl
fdivr
sahf
mov
add
mov
adc
fwait
add
jle
jle
aam
xchg
fidivrs
pop
fs
fs
push
mov
jbe
cwtl
push
aas
xchg
std
andb
mov
push
adc
cli
pop
cli
sub
adc
jmp
faddl
icebp
mov
push
ret
jle
fimull
cli
gs
jmp
es
xlat
fldt
in
pop
lods
or
arpl
sbb
aad
aas
adc
not
sub
sbb
cld
rclb
mov
jle
loopne
mov
jmp
dec
sbb
inc
inc
jg
dec
and
into
lcall
pop
mov
std
leave
in
out
jno
inc
pop
xchg
dec
sbb
roll
pop
pop
inc
push
js
pop
dec
jno
mov
lds
mov
add
lahf
cmp
lcall
mov
gs
pop
sub
push
sub
hlt
pop
outsb
mov
cmc
sub
ljmp
out
cld
in
arpl
mov
add
mov
mov
shrl
mov
dec
in
pop
leave
mov
push
mov
mov
out
ss
lret
xchg
shll
aaa
out
fdivrl
test
imul
mov
mov
leave
mov
rcrl
imul
out
dec
fidivrs
mov
cmpsl
mov
and
push
in
aad
xchg
sbb
or
xchg
pop
sbb
repz
sbb
fldenv
add
std
pop
lea
mov
pop
cmc
aaa
mov
out
lds
mov
aas
stos
gs
cmpsl
mov
mov
fs
sub
mov
iret
out
paddw
clc
mov
ret
pop
out
adc
adc
xchg
xchg
mov
subl
gs
cmpsl
xchg
inc
flds
sbb
pop
mov
inc
das
mov
xchg
gs
mov
adc
pop
pop
les
lods
or
adc
and
ljmp
pop
loop
das
loope
cmp
mov
mov
add
mov
inc
dec
add
xor
jg
adc
sti
pop
popa
cld
jo
outsl
sahf
aas
fistpl
pop
sti
mov
in
push
xchg
mov
std
sub
jg
mov
or
idivb
mov
scas
out
push
ret
fcomi
cmc
lods
lods
dec
xor
lcall
mov
pop
push
aam
adc
sbb
cmpb
mov
sbb
ljmp
xlat
push
fnstcw
pop
ds
mov
jge
pop
sti
jbe
movsb
adc
cmp
sub
pop
push
roll
jle
pop
mov
dec
adc
jbe
add
xchg
xor
je
pop
jecxz
xor
aaa
packssdw
sti
pop
cld
cmp
hlt
movsb
fsubr
fstpt
popf
inc
pop
xor
xor
imul
cld
mov
mov
and
sarb
cli
pop
insb
or
dec
out
jl
hlt
jne
shll
dec
ret
mov
pop
lds
pop
inc
xchg
cmpsl
leave
dec
adc
or
scas
mov
mov
out
sbb
int
lea
pop
jo
sbb
outsb
mov
outsl
jae
ret
pop
adc
aaa
stc
xor
ret
xchg
cmp
sbb
and
lock
pop
pop
sahf
stc
ret
dec
sbbl
test
adc
sub
lock
xchg
mov
aam
imul
pusha
mov
int
addr16
xchg
add
dec
sbb
mov
imul
pop
jne
jge
mov
imul
aaa
fs
lea
xchg
add
mov
je
jns
repnz
idiv
pop
add
mov
mov
incb
dec
cs
cmp
sarl
hlt
mov
dec
mov
jecxz
mov
mov
arpl
or
push
iret
je
mov
xchg
cmp
es
fisubrs
push
addr16
pop
mov
xor
in
sub
fistps
and
jnp
lea
mov
add
int
mov
sub
cmp
mov
hlt
inc
lret
sti
xchg
mov
inc
push
mov
pop
lcall
adc
mov
fistl
jmp
mov
inc
and
je
add
dec
int3
mov
adc
in
inc
outsl
mov
and
and
sbb
rorb
lahf
js
pop
xorl
dec
imul
xor
aad
ds
lcall
inc
hlt
mov
xchg
mov
out
outsb
repz
mov
hlt
sub
xchg
aaa
jnp
xchg
imulb
and
jmp
and
ds
jg
stos
pop
mov
add
or
test
add
mov
pop
pop
cld
shl
gs
inc
inc
shrl
adc
aaa
xor
adcb
pop
out
enter
push
leave
adc
cmp
or
subb
push
pushf
pop
add
xor
and
iret
dec
mov
lea
sbb
sub
filds
dec
pop
idivb
call
push
rcrl
pop
mov
cmp
inc
xchg
rolb
push
and
lea
mov
pop
sub
fmul
jle
and
popf
xor
gs
inc
scas
lea
dec
pop
sti
cmp
mov
pop
add
push
arpl
imul
xchg
inc
or
idivl
inc
test
scas
pushf
jle
inc
fdivrs
push
inc
jg
ja
inc
imul
sub
xor
xchg
ss
jp
add
mov
cwtl
push
fcoms
stos
int3
jecxz
inc
xor
out
push
ret
lret
aad
and
cmp
and
inc
sbb
movsb
outsl
cwtl
dec
cmp
int
jmp
dec
jno
mov
lock
in
outsb
lret
fmulp
push
bound
jns
mov
sub
push
mov
cmp
adc
inc
mov
mov
outsb
jecxz
cltd
sub
inc
and
pop
add
pushf
stc
addr16
sbb
push
push
sti
movsb
add
cs
fidivrl
repz
addr16
loop
aam
pop
frstor
cmpsb
jmp
lcall
mulb
cmc
aas
mov
fwait
sbb
push
mov
imul
rcrl
jbe
fcom
sbb
lret
push
icebp
dec
and
in
outsb
xorb
adc
pop
pop
cli
pop
jmp
and
push
repnz
xchg
into
add
lret
loop
sahf
jb
sub
inc
pop
dec
xchg
out
pop
jle
sbb
scas
inc
test
mov
nop
sbbb
negl
cld
outsb
add
push
mov
popf
xchg
lock
mov
fdivr
push
popa
push
jb
repz
push
cmp
pop
xchg
pushf
inc
mov
cmpsb
std
jge
pop
movsw
pop
std
jle
cmp
int
je
mov
jg
mov
pop
cmp
inc
out
sbb
or
cmpsb
pop
jns
test
push
mov
adc
sub
pop
fndisi(8087
int3
dec
or
pushf
pop
lcall
fadds
testl
lcall
mov
mov
push
fwait
mov
cs
lcall
or
mov
mov
pop
shll
sub
ss
cwtl
pop
pop
aas
test
mov
leave
mov
lea
dec
jbe
aas
mov
sbb
repnz
push
xchg
cmp
call
in
scas
stos
adc
jno
shl
dec
lea
imul
out
and
mov
enter
xchg
mov
mov
std
add
push
sbb
pop
pop
xchg
or
std
into
leave
jnp
and
int
testb
insl
cmc
in
inc
loope,pt
xchg
jb
mov
jle
cwtl
insl
imul
push
fwait
movl
adc
popf
xchg
aas
adc
frstpm(287
mov
mov
imull
fs
mov
inc
arpl
hlt
mov
adc
and
leave
out
or
jb
jp
js
jb
xlat
aad
cld
hlt
mov
mov
add
adc
mov
movsl
xchg
idivb
mov
fildl
inc
push
rolb
int3
dec
adc
mov
fbstp
lods
mov
mov
ds
lcall
add
xchg
mov
out
in
sub
pop
xchg
outsb
mov
aas
dec
cmp
pop
clc
mov
cld
out
shlb
jecxz
dec
mov
stos
scas
in
or
roll
in
stc
pop
or
sbb
mov
fbld
push
add
adc
movsl
test
push
negb
cs
mov
jmp
xchg
jbe
or
xor
add
mov
sti
push
cmp
idivl
sub
lods
inc
jmp
push
or
in
mov
pop
xor
mov
push
mov
cs
mov
push
jo
faddl
ret
cmc
pop
out
in
dec
sub
xor
fucomip
cmpsl
inc
or
movsb
mov
push
outsl
lahf
popf
fisttpl
outsl
sub
xchg
ss
mov
cld
movl
cmp
aas
jle
sbb
test
mov
out
sbb
sbb
rcrl
mov
xchg
lods
stos
sbb
ret
aam
jle
mov
and
add
pop
in
add
mov
pop
add
mov
push
fucomip
test
jne
rcrb
sub
orb
sub
hlt
outsb
ljmp
mov
mov
adc
imulb
int3
std
arpl
mov
pop
mov
mov
add
pop
cmp
fnstsw
aad
or
lahf
lret
popf
fwait
aas
push
jnp
inc
test
add
pop
ja
outsb
clc
sti
sub
xorb
inc
scas
jmp
sahf
imul
fdivrl
inc
push
ret
mov
mov
inc
pusha
shl
inc
in
ss
das
or
mov
mov
dec
mov
cmpsl
je
arpl
sbb
mov
mov
imul
fsubs
xor
push
add
or
inc
test
out
sbb
sbb
loope
cmpsb
pop
or
cmp
pop
or
adc
mov
sub
or
cmp
pop
jo
test
or
gs
or
pop
xor
mov
inc
xor
arpl
pop
clc
adc
das
subl
subl
inc
xor
xchg
fistps
shll
xchg
notl
or
xchg
sbb
jbe
pop
push
mov
cwtl
xchg
jmp
es
out
sbb
leave
inc
jp
lcall
pop
cmp
mov
aas
rorl
mov
testl
fnsave
fwait
cltd
inc
jbe
dec
inc
adc
pop
mov
jl
xor
push
mov
fcompl
sub
xlat
sahf
ficoms
sbb
insl
mov
sarl
pushf
pop
and
div
mov
enter
out
mov
xchg
pushf
mov
movsl
iret
pop
icebp
sarb
add
or
sbb
mov
xor
add
push
inc
mulb
cmp
jecxz
inc
scas
jle
fnstenv
lods
mov
sub
xchg
lea
sub
mov
add
mov
sub
test
in
jle
outsb
pop
sub
addb
mov
jo
dec
xor
jo
xor
lret
and
cli
adc
sub
mov
pop
pop
testl
xor
cltd
scas
mov
push
pop
and
xchg
psrlw
mov
adc
lret
mov
test
mov
out
pop
push
adc
into
pop
or
aam
aas
sub
int
and
das
xor
pop
arpl
xor
lahf
xlat
adc
test
pop
movsb
and
cli
ja
xchg
xor
push
cmp
inc
lret
sbbl
jbe
out
jnp
cmp
les
pop
fsubrs
push
jg
lret
xor
adc
fistpl
mov
stos
ljmp
aad
fistps
adc
das
add
cmpsb
mov
mov
mov
pushf
or
ficoml
push
rcr
add
in
mov
mov
addr16
jg
das
pop
aaa
and
mov
popf
sub
inc
out
jnp
push
int3
dec
sahf
inc
pop
popa
ds
cmpsb
add
fbld
mov
adc
adc
push
fstpt
loop
mov
loop
in
outsb
je
scas
iret
mov
adc
test
clc
cmc
mov
cmp
cmp
sub
mov
pop
mov
hlt
sub
addr16
inc
movsw
cmpsb
sbb
mov
fisttpll
mov
pop
js
mov
or
pop
roll
fwait
leave
iret
dec
fsubp
imul
mov
cmpsb
fdivl
mov
cltd
lods
fisttpl
jbe
and
pop
mov
clc
cmpsb
out
ret
xor
cmc
push
jle
jle
mov
addr16
mov
sub
dec
sbb
std
shl
inc
mov
clc
mov
push
lcall
xor
sahf
test
xchg
imul
cmp
adcb
sbb
fstpt
sub
xchg
hlt
push
pop
mov
test
sub
inc
pop
in
hlt
fld
clc
or
test
mov
enter
mov
outsl
rcrb
out
pop
jnp
jl
add
or
mov
sbb
movsb
mov
push
aam
adc
iret
pop
pop
arpl
xor
dec
adc
and
sbb
test
or
scas
shr
mov
pop
movsl
mov
sub
sbb
out
lea
fs
mov
leave
dec
push
cmpsb
pushl
sbb
sub
jae
ja,pt
xlat
ret
rorl
pusha
and
push
cmpsb
leave
jecxz
adc
iret
mov
mov
shlb
pusha
movsl
mov
adc
loopne
rorb
fs
pop
lret
sub
je
shr
mov
int3
add
popf
js
push
fdivrl
inc
into
leave
mov
mov
or
mov
lds
inc
dec
shrb
and
test
ja
outsl
inc
dec
push
fcmovbe
inc
test
orl
fmuls
pop
cs
in
sahf
imul
stc
xchg
cli
aas
lea
push
sbb
or
das
or
sarl
xchg
insb
cmpsl
shll
mov
ja
call
nop
xchg
add
cmc
popa
inc
xor
jmp
mov
cmp
push
inc
fsts
jmp
add
add
cs
into
and
into
add
mov
movsb
imul
int3
in
sub
mov
sti
sub
push
inc
movsl
arpl
push
ja
jne
into
cmc
scas
sbb
cmp
loope
or
std
and
fdivrp
mov
fsubr
mov
push
jbe
movsb
loop
or
lods
fucomp
stos
hlt
mov
or
rcrb
insb
in
push
or
fstpl
mov
adc
scas
pop
iret
dec
test
popa
aas
leave
pop
cmpl
dec
push
frstor
pop
sub
cmp
fcmovu
scas
shlb
loopne
lret
inc
jg
xchg
rol
and
add
xchg
pop
add
mov
pop
fdivl
inc
jp
insl
jne
movl
mov
popf
rorb
and
push
movaps
imul
es
fiaddl
fcomp
insb
pop
sub
adc
ja
jo
in
add
neg
imul
nop
mov
sub
adc
jmp
test
or
pop
imul
adc
test
out
xchg
pop
xlat
jge
jns
push
mov
insl
aas
in
das
sbb
mov
mov
add
xor
sar
rcrl
int
sbb
ds
pop
das
adc
std
pop
add
add
pop
repnz
es
std
or
dec
shrl
dec
lock
sti
pop
and
sti
cltd
ficoms
inc
shl
inc
clc
sbb
mov
xor
xor
arpl
mov
sbb
push
shlb
icebp
cld
cmpsb
das
mov
rol
cld
sbbl
push
aam
xchg
adcb
push
inc
cmp
jnp
cmp
test
pop
sub
pop
mov
cmp
pop
addb
ficoms
fldt
and
mov
fisubs
hlt
pop
in
ds
xchg
std
mov
xor
pushf
rcrl
das
mov
fstpl
cmpl
popa
and
stos
or
mov
pop
mov
pop
xchg
out
into
mov
mov
pop
fcmovnu
or
mov
adc
xchg
sbb
cmpsl
dec
pusha
out
mov
das
test
xlat
jecxz
xchg
das
pop
leave
jecxz
cmp
inc
or
pop
sbb
shlb
push
notl
pop
jecxz
es
fbld
or
shl
in
js
sarl
jg
mov
jnp
imull
lcall
addl
mov
lods
mov
or
out
xchg
cmp
sub
fidivrs
sti
sub
jne
shl
aas
pop
nop
rcr
aam
dec
pop
test
fldl
aam
dec
fldenv
or
mov
aad
jmp
jne
push
loop
test
call
xchg
sbb
xchg
jmp
mov
cmpsl
fildl
cmp
fidivrl
fistpl
sbb
and
aam
popf
jle
icebp
inc
push
mov
sti
mov
xchg
inc
mov
cvtps2pd
adc
and
pop
js
add
rolb
push
pop
adc
movsb
test
inc
test
cmc
fldenv
cmc
xchg
and
and
sbbl
icebp
xchg
mov
ljmp
jb
adcb
inc
mov
push
push
adc
pop
adc
movsl
mov
adc
add
inc
mov
dec
or
aaa
arpl
fisubrs
cmp
ret
or
repz
cs
push
imul
mov
pop
je
rorl
orb
in
add
push
inc
aaa
sbb
icebp
jnp
mov
fsubrs
std
pop
loope
lahf
jecxz
jne
mov
insl
inc
jecxz
sbb
mov
rcl
jne
fndisi(8087
xor
mov
inc
jnp
push
pop
fnstenv
and
outsb
bound
mov
mov
dec
or
fucomi
outsl
std
pop
adc
ja
pop
jle
push
cli
mov
dec
dec
mov
cmp
icebp
cmp
nop
scas
cmc
addb
icebp
and
aaa
sub
push
loop
cmp
sti
rorb
mov
cld
push
or
sbb
jmp
outsl
subb
stos
pushf
mov
jecxz
xor
mov
cmp
xor
ljmp
dec
lods
xchg
daa
push
in
sub
icebp
or
jmp
pusha
cmp
fwait
xchg
loope
and
jg
out
lock
adc
aaa
ret
push
mov
insb
subb
sbb
or
cld
loope
in
mov
inc
dec
cmc
stos
cmp
dec
out
hlt
insl
call
mov
idivl
pop
sub
repz
push
or
mov
sbb
popf
leave
out
in
cld
bound
jecxz
clc
mov
mov
pop
and
sti
leave
shrl
stc
inc
adc
inc
out
push
arpl
outsb
jmp
mov
mov
xchg
and
aam
subl
sbb
insb
stos
sub
cmc
add
test
cltd
push
enter
and
ss
sbb
sahf
iret
cmpsl
xchg
sahf
cmp
and
jmp
es
test
mov
xchg
jno
sbb
daa
jecxz
or
push
xlat
push
cmc
sub
mov
jne
test
sub
aaa
cwtl
push
pop
or
cpuid
outsb
cmpl
rorl
neg
jnp
pop
add
dec
xor
mov
inc
sti
pop
sbb
fwait
xchg
ljmp
sbb
xor
or
arpl
mov
or
out
out
inc
fisubrl
mov
pop
mov
mov
sahf
cmpsb
roll
mov
mov
cmpsb
or
add
mov
mov
or
daa
inc
pushf
push
jg
jle
enter
pop
iret
fs
pop
aas
jp
pop
movsl
jge
xchg
jo
pmulhuw
icebp
popf
fsubrl
mov
cmp
or
shll
mov
push
outsl
mov
mov
addl
sub
mov
fildl
stos
inc
repz
or
imul
lods
iret
fadd
inc
jb
test
add
lcall
mov
icebp
pop
les
std
jbe
rclb
imul
ss
in
jmp
push
outsl
out
xchg
mov
sahf
cmc
mov
inc
aam
test
jae
rorb
mov
xor
ss
dec
imul
or
test
rcr
rorl
and
mov
pop
faddl
push
out
movmskps
ret
pop
in
jno
add
mov
adc
pop
inc
mov
add
mov
das
fnstsw
jne
outsl
fnstcw
mov
out
mov
pop
into
xor
roll
fistl
outsb
and
sahf
rcll
jbe
stos
push
das
xchg
out
aas
inc
out
sbb
mov
pop
xor
sub
jb
sti
lahf
pop
sub
int
call
xor
or
lea
mov
sbb
cld
mov
xchg
jg
jle
das
xchg
pop
mov
mov
jne
add
cmpsb
dec
int3
dec
cmp
jle
mov
add
outsb
in
lcall
cmp
cwtl
shr
add
shll
fcomi
jns
into
ficoml
push
mov
fwait
or
lea
fbstp
sub
adc
cld
mov
and
imul
inc
cmp
pop
inc
adc
imul
dec
pop
cmpsl
mov
add
stos
cmove
sbb
or
xchg
pop
mov
fdivrl
push
insb
sti
iret
mov
mov
inc
sete
or
movsb
xchg
adc
add
stc
pop
inc
sbb
inc
icebp
pop
and
arpl
xchg
cmp
jns
pushf
add
pop
movsb
inc
fisubl
dec
std
dec
cmc
das
insl
movsl
lea
inc
dec
lods
shll
data16
mov
cmp
pop
mov
rorl
testl
xchg
fldl
movsl
push
faddl
aad
push
xor
pop
jle
dec
push
in
xchg
pop
pop
lcall
add
pop
nop
sti
sar
leave
xchg
mov
mov
xchg
rcll
aas
lahf
arpl
cld
stc
scas
ret
int
dec
add
lret
jbe
mov
cmp
sbb
stos
mov
dec
pop
shlb
and
adc
jl
lret
pop
xor
xchg
aaa
in
inc
sarl
cs
and
sbb
mov
adc
xor
inc
jne
stc
insb
xchg
jge
sbb
aas
push
cmp
fiadds
imul
xchg
pop
push
lahf
adc
xchg
push
jg
imull
fdivl
std
aad
sti
scas
mov
mov
ljmp
mov
inc
popa
lods
inc
and
lods
data16
cld
or
std
shll
out
add
push
ja
out
xchg
push
cmpsl
pop
mov
out
and
mov
dec
stos
lret
mov
cmp
add
test
js
sbb
hlt
in
ds
xchg
aad
add
jle
lds
iret
dec
mov
lds
mov
mov
lahf
sub
mov
jecxz
xchg
inc
outsb
leave
mov
pop
movsb
divl
fistpl
and
xchg
push
das
mov
mov
lret
sahf
mov
or
mov
addr16
stc
push
filds
jle
subl
pop
jge
rcll
cmp
jno
pop
ret
test
xchg
jle
add
cmpsl
mov
dec
or
pop
cmc
jle
pop
pop
push
jecxz
sbb
inc
cld
pop
dec
mov
or
test
scas
hlt
adc
xor
sbb
ret
push
mov
leave
leave
inc
push
mov
adc
jg
xchg
dec
scas
sub
mov
incb
push
mov
in
int
ud1
pop
pop
xor
rcrl
push
imul
ret
and
ss
jnp
dec
push
dec
push
out
mov
jl
les
ret
in
ja
xchg
and
mov
sbb
pop
lret
mov
test
cmpsl
movsl
adc
ret
and
insl
pop
push
lea
jo
jle
push
or
out
lea
xchg
int3
sbb
inc
cld
jecxz
sbb
jne
or
pop
mov
out
and
sub
sbb
push
test
push
fcmovbe
rorl
add
movsl
push
lods
aam
push
stos
pop
or
lods
test
pop
lret
mov
aad
mov
lret
cmp
mov
mov
popa
mov
cmpsl
cmp
push
std
xchg
in
jg
adc
je
bsf
sti
pop
pop
das
sbb
inc
xlat
dec
xor
mov
add
mov
int
pop
mov
dec
stos
lahf
inc
dec
cmpsb
push
scas
mov
in
sub
loope
mov
mov
call
xor
cli
in
addl
shrl
adc
aas
test
imul
fucomi
enter
jb
fsts
mov
insb
inc
je
rclb
jp
push
mov
and
adc
xlat
mov
pushf
out
push
jp
das
js
aaa
stc
sbb
dec
push
sbb
fsts
shr
pop
xchg
pop
lcall
adc
jg
sbb
orb
lock
rclb
dec
xor
and
andb
aas
pop
or
testb
into
lods
xchg
fidivrs
or
mov
add
push
mov
mov
push
and
cmp
das
inc
sbb
push
sbb
rorl
fisubrl
test
popf
aam
fcmovnbe
xor
int
imul
adc
cmp
dec
mov
ds
out
pop
mov
cmp
adc
pop
mov
mov
jb
mov
lods
call
jg
add
cmp
bts
lods
insl
xchg
jle
rcr
ficompl
jle
inc
or
aas
sbb
pop
mov
aas
inc
lods
mov
push
int
mov
xor
psubusw
mov
scas
pop
fldl
mov
and
ficoml
push
sbb
jg
es
pop
cmp
lds
add
pushf
div
mov
lock
int3
inc
pop
iret
xor
ss
push
or
clc
js
mov
aas
stc
rcll
addb
mov
jns
movsb
sbb
sub
mov
test
lcall
arpl
adc
imul
mull
cld
out
push
mov
in
jo
fsubs
arpl
testl
pop
fistpl
pop
sahf
lea
push
push
das
fcmovnb
mov
pop
cmpsl
insl
ror
arpl
imul
stc
lahf
fildl
jno
lods
xchg
gs
mov
sbb
clc
fsubrs
pop
fistpl
jnp
inc
or
pushf
hlt
cmp
gs
movsb
push
subb
sarb
imul
add
in
mov
inc
fs
rcr
sub
mov
ds
addb
push
scas
sarl
dec
inc
and
add
aam
imul
data16
ror
xor
mov
or
insl
adc
fcmovnbe
pop
fcoml
mov
pop
push
jne
in
dec
mov
jle
mov
cwtl
imull
lea
insb
into
pop
adc
pop
push
add
mov
jb
arpl
and
jp
pop
pop
sbb
negl
xchg
push
push
pop
xchg
rolb
pushf
lret
jbe
add
jmp
pop
or
jnp
repz
sub
add
xor
and
sbb
fistl
fwait
mov
outsl
fadds
jbe
push
movsb
js
pop
xor
imul
inc
xchg
add
cmpsb
aad
iret
cmc
xor
cmc
popa
jge
out
ret
stos
lds
mov
testb
sbbl
addr16
out
lcall
in
xchg
inc
dec
int
push
fsubl
sub
mov
push
arpl
jmp
mov
xchg
fsubs
sub
sbb
jmp
cmp
mov
mov
hlt
notl
pop
mov
xor
scas
jle
into
popa
mov
shll
pop
popa
ljmp
popf
sub
shrb
pop
lret
adc
icebp
xchg
inc
test
jecxz
ficomps
ret
jge
sbbl
xor
cmp
xchg
xchg
je
sti
jbe
in
mov
push
sbb
pop
pop
out
popa
pop
inc
fldenv
movsb
mov
call
and
pop
dec
and
imull
add
pop
push
sbb
mov
add
pop
nop
cli
sbb
dec
cli
cmpsl
into
jno
fsubr
stc
or
cmp
imul
push
xor
js
mov
add
loop
fimuls
sbb
outsb
mov
fnstcw
pop
jl
fsubp
fdivrp
and
ret
mov
xchg
sbb
hlt
into
pop
xor
sub
stos
jo
adc
int3
sbb
mov
cmp
mov
outsl
jne
cwtl
push
imul
xchg
cltd
ret
pop
add
cmp
aam
add
inc
jns
int3
jno
mov
pushf
stos
cmp
pop
sti
mov
aam
outsl
and
xchg
cmc
pop
popf
xchg
icebp
fwait
iret
pop
mov
test
aas
test
das
inc
lcall
sbb
lods
jne
add
outsl
push
ja
sbbb
fsubrl
lret
pop
icebp
push
push
leave
push
aaa
mov
inc
cltd
aaa
inc
in
subb
push
inc
or
fstp
mov
mov
or
jbe
sub
cwtl
dec
cmp
sar
pop
adcb
inc
and
subb
subb
push
aam
adcb
fadd
fldcw
sub
cmp
arpl
out
cmp
enter
sbb
insb
imul
pop
insb
dec
mov
mov
hlt
push
jno
mov
cpuid
test
or
leave
mov
ret
jno
out
pop
stos
inc
mov
sub
cld
rcrb
cltd
jg
pop
mov
inc
leave
pusha
dec
jno
das
pop
jmp
mov
inc
insl
jmp
cmp
outsl
lds
sbb
cmp
jno
mov
cmp
std
push
enter
fidivrs
data16
cmp
jg
fildll
jbe
outsb
push
imul
insl
fdivr
ret
notl
jle
fldcw
movsl
sarl
imul
cmp
rclb
fsubr
add
add
push
imul
cmpsb
fstpl
fistpl
ds
push
jmp
outsl
shrl
dec
es
leave
cltd
push
repz
les
fdivp
mov
imul
adc
mov
pop
cmp
jp
cmpsl
jnp
jne
pop
mov
out
fidivl
ret
and
addr16
cltd
ret
jmp
jge
lods
ret
sub
aaa
add
lea
aad
fidivrs
sarl
cmc
jge
testl
ljmp
adc
pop
daa
mov
out
into
cmp
mov
adc
out
push
pop
fwait
in
pop
int
adc
roll
es
dec
loop
inc
mov
cmp
fs
outsb
xchg
std
out
or
mov
dec
push
and
cmp
and
scas
repnz
mov
mov
int3
pop
jle
shll
daa
mov
jmp
pop
test
or
test
lret
and
mov
inc
ss
pop
popa
mov
in
scas
popf
test
inc
jg
iret
pop
and
pop
inc
fidivl
mov
test
mov
add
pop
and
cmp
lahf
shrb
or
mov
push
outsl
enter
jmp
into
xor
sar
cmp
loope
pop
shll
ret
cmc
xchg
and
aas
stc
pop
push
lret
xchg
aam
das
mov
push
dec
add
es
push
stc
fcmovb
mov
lods
jbe
cmp
call
jae
in
mov
sub
cmpsl
scas
and
or
in
ret
fcoml
enter
ljmp
outsb
xor
notl
inc
fwait
div
sbb
lret
push
pop
scas
jge
mov
xchg
loop
lods
fcom
add
sbb
mov
add
sub
in
movsl
int3
ror
das
mov
pop
iret
cmpsl
ret
popf
sub
adc
scas
push
xlat
repz
ficomps
fldcw
ja
jecxz
push
scas
xor
popa
sub
leave
loope
and
outsl
add
into
add
push
adc
jecxz
cmp
out
es
pusha
mov
push
xor
sti
pop
adc
push
aas
sbbb
jmp
jns
ret
andl
and
movsb
mov
mov
out
adc
mov
loope
mov
mov
iret
sbb
mov
sbb
add
outsl
popf
xchg
clc
lods
scas
lds
and
mov
in
mov
inc
in
jmp
add
stos
jb
dec
fisttpll
and
sbb
push
or
mov
mov
mov
shrb
jp
dec
pop
push
movzbl
push
mov
pop
cmp
out
lahf
aaa
pop
mov
fisubrs
mov
dec
mov
pusha
and
xor
lods
mov
cmp
lahf
or
stos
push
sbb
adc
pop
imul
fs
xor
jnp
jg
aas
dec
mov
lea
jmp
xor
outsl
pop
xor
insb
mov
add
fadds
rcrb
or
or
mov
mov
fsubl
test
jg
mov
pop
je
scas
in
add
cli
popf
rolb
scas
jne
inc
fldenv
stc
cmp
jle
pusha
cli
pop
dec
lds
fs
adc
inc
fistpl
psubq
lahf
and
stos
add
pop
xchg
ja
mov
jo
push
insl
xchg
xchg
lret
mov
pop
pop
pop
add
sub
jbe
fisubrs
lahf
popa
mov
jle
cmovs
pop
out
mov
dec
lcall
push
push
arpl
inc
xchg
pop
mov
push
xchg
sub
mov
and
xlat
dec
in
rorl
mov
std
pop
dec
sbb
mov
mov
lret
nop
or
adc
and
mov
mov
mov
addr16
scas
inc
pop
pop
and
push
neg
push
pop
in
inc
dec
dec
rcr
mov
mov
lret
pop
les
insb
test
mov
cld
pop
iret
pop
shlb
adc
mov
jle
push
sub
mov
push
and
inc
pop
fisttps
cli
dec
orb
pop
dec
pop
daa
rcl
inc
fiaddl
sahf
ret
mov
mov
js
call
xchg
mov
icebp
dec
xchg
add
jl
pop
inc
fstpl
lret
xor
mov
mov
stos
mov
jg
mov
xchg
add
inc
jae
pop
repz
inc
sbb
cmp
fwait
add
push
push
negl
cs
pop
jno
shr
inc
xchg
pop
lds
cli
loope
push
adc
adcb
fs
mov
gs
add
popf
push
testb
mov
xchg
add
jns
pop
scas
in
loop
lahf
imul
mov
push
ljmp
lock
pop
xor
jmp
loop
inc
mov
pop
inc
ds
and
pop
mov
test
pop
mov
push
fisttpll
adc
mov
xor
mov
mov
dec
and
imul
push
int
xchg
test
loope
push
sub
mov
jmp
dec
xor
sti
out
mov
push
mov
mov
ja
add
xchg
add
cld
jle
mov
stos
mov
iret
testl
mov
cmp
test
jae
rclb
test
mov
movsb
sub
xchg
std
out
pop
push
or
mov
leave
bound
push
mov
xor
shll
fcomps
sub
pop
pop
pop
test
jecxz
push
cwtl
push
xor
and
test
inc
cmpsb
jne
cmp
mov
fstl
pop
jne
sahf
out
js
mov
movsl
filds
pop
inc
mov
sub
fldcw
cmpsb
sub
divps
add
pop
inc
data16
gs
je
lds
dec
pop
scas
mov
pop
or
inc
push
jge
sbb
pop
mov
arpl
js
sahf
mov
xchg
cmpb
pop
mov
repz
jo
mov
ret
shlb
movl
push
adc
sub
xchg
jmp
mov
fldenv
aas
jae
xor
andb
mov
cli
push
add
pop
add
test
call
pop
pop
mov
mov
inc
jle
xor
pop
test
inc
xor
fidivs
mov
in
sti
pop
inc
xchg
xchg
and
jae
lods
leave
mov
into
das
push
mov
push
pushf
mov
xchg
mov
repnz
and
jecxz
add
test
adc
xlat
add
testb
pop
add
lahf
clc
or
xor
movsl
rcl
mov
je
and
ret
mov
cld
test
leave
aad
int
push
test
inc
inc
dec
je
jbe
test
pop
fsubs
jle
pop
hlt
push
or
loope
mov
popf
add
pop
xor
mov
inc
insl
or
insb
jnp
sbb
daa
pop
icebp
cmpsl
call
iret
lea
lods
roll
sub
xchg
cmp
xor
mov
mov
rorl
add
push
fisttpl
or
mov
adc
mov
sahf
imul
jmp
xchg
inc
iret
pop
mov
cli
inc
outsb
xchg
sub
mov
fsubrs
shll
pop
push
push
ret
sti
jl
loopne
scas
or
out
rorb
setne
cwtl
aas
shl
push
clc
dec
fdivrl
fwait
and
push
mov
sbb
lods
or
hlt
test
fs
push
pusha
inc
cmp
push
loope
pop
ds
push
mov
mov
test
icebp
jnp
pop
sbb
fcom
sbb
fistl
add
ss
xchg
mov
fcomps
dec
pop
stc
ljmp
xchg
and
jnp
add
cmp
or
in
lea
fisubrl
xor
insb
test
mov
xchg
or
xlat
fldenv
scas
fimuls
mov
mov
scas
addr16
mov
sbb
cltd
push
imull
xchg
popf
testb
mov
xchg
or
add
xchg
int3
xchg
jle
inc
pop
ret
mov
imul
ljmp
add
mov
arpl
sub
cli
mov
jle
or
inc
aaa
sub
push
inc
jg
aam
xchg
adc
xor
mov
mov
dec
and
repz
es
aas
mov
cmp
lcall
mov
insb
int3
push
adcl
adc
scas
or
inc
int
mov
mov
pop
in
mov
mov
std
inc
adc
jl
cmp
imul
mov
xchg
adc
push
xor
xchg
adc
pop
je
xor
fsubs
jp
flds
ds
out
adc
jg
adc
jp
pop
shll
pop
jnp
jo
add
or
rorl
popf
outsl
jmp
outsb
mov
and
out
pop
scas
rclb
fucomi
and
lock
sbb
fadd
ret
adc
adc
mov
ret
or
repz
xchg
inc
out
xchg
xchg
pop
jg
sti
imull
pop
push
movsb
mov
jo
imul
test
fmul
sbb
jbe
pop
stos
xor
pop
cmp
jecxz
hlt
or
fmulp
inc
push
pop
xchg
dec
cwtl
xchg
outsl
rolb
mov
inc
fldl
scas
mov
mov
or
iret
mov
aam
jle
mov
push
or
jmp
cli
inc
scas
or
mov
cmp
mov
mov
add
adc
in
ja
fnstenv
pusha
xor
add
xlat
dec
shll
add
xor
inc
adc
mov
adcb
ret
mov
lods
fwait
inc
mov
xor
sti
cmp
inc
cwtl
scas
or
xchg
mov
arpl
cli
test
or
inc
push
mov
adc
cwtl
cmp
mov
sbb
jno
test
sahf
and
rolb
or
ss
push
pop
adc
jbe
or
stos
outsb
orb
mov
into
push
out
lea
inc
aad
or
mov
and
dec
in
adc
pop
out
pushf
xor
add
push
xchg
mul
outsb
mov
mov
and
push
and
mov
fdiv
adcb
enter
lcall
and
lahf
jp
push
roll
mov
je
je
jmp
add
es
fisubrs
shll
daa
mov
testb
inc
mov
dec
inc
inc
je
mov
cmpsb
je
sbb
leave
mov
jno
and
adc
lahf
mov
icebp
into
mov
xchg
ret
jg
xchg
mov
aad
loop
push
sarb
pop
inc
adc
jge
iret
sub
sub
add
cmp
pop
ficoml
and
push
fistpl
scas
imul
jne
or
nop
add
inc
fbstp
dec
lods
lods
jg
ret
jge
movsb
add
pop
dec
push
pushf
xchg
or
mov
push
scas
mov
xchg
int3
popf
loope
pop
xorl
jecxz
data16
fwait
xor
mov
dec
imul
cmpsb
pushf
jno
add
jmp
or
xlat
dec
push
xchg
inc
out
sahf
inc
mov
sub
adc
inc
pop
jae
fstpl
pop
jbe
push
ja
jb
pop
loop
xchg
mov
idivb
out
or
je
push
pusha
pop
xchg
in
jle
pop
mov
test
xchg
add
inc
jb
lds
imul
cwtl
out
fsts
add
int
mov
pop
and
dec
mov
outsb
pop
mov
ja
mov
lahf
lods
adc
pop
icebp
mov
jle
xor
int3
mull
pop
fisubl
cli
hlt
cwtl
in
sar
lods
aam
mov
adc
mov
add
lret
pop
mov
in
jb
push
in
scas
dec
sub
pop
pop
mov
leave
push
cmpsb
mov
call
jne
push
cs
out
lds
pop
fsubrl
xchg
xor
jne
arpl
cmp
lcall
ss
insl
popa
push
or
gs
scas
sbb
std
pop
lret
push
icebp
mov
adc
mov
or
shrl
add
inc
insl
mov
cld
fcomps
xorb
xor
stc
jle
or
cs
mov
pop
jge
pop
mov
xorb
pop
mov
and
jns
fimull
mov
inc
lds
jno
test
mov
fbld
xchg
scas
stos
pop
mov
mov
and
test
mov
repz
cmpsl
sub
scas
pop
xchg
mov
fisttpll
xchg
mov
fs
fsubs
add
sub
push
adc
fimull
and
clc
sbb
xor
out
imul
sahf
int
push
sarl
arpl
mov
add
dec
ja
lock
xlat
stos
mov
push
mov
mov
orb
scas
push
mov
add
ret
push
scas
mov
into
imul
mov
int3
loop
sbbb
orb
popa
pop
je
stos
sbb
mov
push
iret
sbb
xor
iret
out
mov
mov
adc
inc
sbb
cmc
or
sub
pop
cltd
jp
pop
adc
cmp
add
adc
xchg
or
mov
pop
sub
sahf
jg
lcall
das
dec
aad
inc
test
fiadds
out
loopne
fstps
jae
lock
jp
inc
popa
outsb
push
or
jno
xchg
jmp
push
mov
out
scas
add
pop
push
xor
out
pop
or
fildl
clc
mov
dec
lret
pop
push
int3
shll
data16
xor
push
adc
mov
add
ret
clc
lock
adc
lods
sub
xor
or
ret
arpl
mov
pop
dec
mov
cmp
cmc
push
xorl
cs
pop
out
mov
jg
inc
jb
jns
mov
push
push
sti
inc
pop
insl
mov
pop
mov
add
into
jno
imul
sbb
mov
lods
in
mov
inc
fiadds
call
or
sahf
mov
icebp
mov
rcr
lahf
pop
lods
pop
clc
std
jl
outsl
xchg
clc
sbb
sbb
pop
mov
lods
fdivr
das
jl
xchg
xchg
lods
jbe
cmp
add
xchg
es
hlt
and
testb
scas
add
jp
push
dec
mov
outsl
cmc
mov
fdivrl
add
pushf
pop
xor
xchg
dec
or
repz
js
cmp
hlt
sub
fsin
loope
sbb
fldcw
push
pop
sti
imul
pop
xchg
push
jmp
loopne
popa
fsts
xor
in
addr16
popf
sub
hlt
imul
es
or
mov
jl
stc
lea
jnp
pop
and
sub
inc
adc
out
addr16
clc
cmpsl
fistpl
pusha
xchg
cmpsl
mov
jmp
pop
xor
int3
jg
stos
pop
xchg
jmp
jmp
mov
sub
adc
and
or
shlb
test
shrl
xchg
adc
cwtl
lods
leave
xor
outsb
daa
es
adc
in
or
inc
or
mov
inc
cmc
sarl
jle
cmp
adc
mov
pusha
mov
pop
fdivrs
xchg
mov
jne
mov
jle
sbb
dec
inc
std
sbbl
scas
cmp
mov
mov
inc
or
adc
dec
cmp
loope
mov
movsl
push
je
out
ss
fwait
push
addl
pop
mov
fstl
add
mov
std
mov
icebp
pushf
imul
lahf
mov
jns
pop
and
mov
stos
pop
add
cmp
test
sub
push
xor
ret
pop
xchg
and
in
lcall
xchg
lret
push
sbb
mov
inc
push
clc
inc
cmc
fsts
mov
popa
mov
pop
shll
mov
ljmp
pushf
and
sarl
movsl
mov
fnstcw
mov
cwtl
push
repz
push
mov
fists
adc
inc
push
jmp
ljmp
ret
jae
jns
mov
sbb
pop
jle
mov
repnz
add
ffree
adc
adc
mov
pop
bound
aad
aad
sti
pop
aas
in
jecxz
pushl
loope
lods
das
negb
mov
clc
inc
outsb
jg
fsts
rorb
xchg
pushf
and
pushf
sbb
movsl
push
pop
mov
mov
imul
leave
xchg
jno
imul
or
out
jb
mov
adc
cmc
pop
pushf
addr16
scas
mov
outsl
sti
sub
pop
xor
adc
decl
cli
add
inc
dec
fadds
cmp
test
add
cmp
mov
sub
scas
xchg
lods
nop
push
mov
xchg
pushf
cld
lcall
push
sbb
outsb
xchg
adc
pop
sahf
lods
rorb
scas
cmpsl
mov
pop
andl
gs
push
xorb
icebp
js
das
mov
push
std
sbb
mov
jge
dec
imul
dec
iret
dec
mov
pop
add
fbstp
rol
arpl
sub
dec
mov
out
fistpll
fimull
jns
ds
xchg
mov
insb
adc
xor
fsubs
mov
pop
scas
std
mov
std
rcrl
jmp
cmp
cmp
fisttps
out
mov
inc
fistpl
test
mov
fstl
or
sub
cmp
insl
daa
into
sub
movb
sbb
outsb
in
iret
mov
or
dec
cltd
mov
mov
out
sbb
add
mov
and
lret
mov
sub
mov
xchg
cmp
cmc
dec
arpl
xchg
out
rolb
scas
testb
jnp
dec
ficomps
rol
in
lret
xchg
je
jecxz
fmul
int
cmp
xchg
scas
mov
out
sbb
popf
shlb
mov
jle
out
pop
fisttps
push
repnz
lahf
in
xor
daa
push
pop
cmp
fxch
or
addr16
pop
jnp
push
push
outsb
push
fcompl
je
sahf
rcl
int
iret
outsl
push
lahf
mov
loopne
dec
adc
adc
lods
mov
pop
aam
mov
adc
leave
and
sbb
adc
in
xchg
pop
push
xchg
sti
sbb
cld
pop
pop
in
outsl
push
leave
lods
jmp
std
mov
jp
pop
aas
ds
ss
pop
in
outsl
pop
lock
ficompl
mov
mov
imul
adc
cltd
mov
imul
sbb
and
push
sbb
fadds
pop
aad
movsl
iret
fucomip
and
xchg
fisubl
pop
andb
sbb
pop
jecxz
repnz
lret
in
pop
fsubrs
adc
xchg
push
sbb
outsb
xchg
filds
and
and
dec
arpl
mov
cld
call
loope
adc
iret
jle
fldt
and
cltd
xor
cmpsb
mov
push
divb
jmp
stc
test
clc
pop
cmp
testb
sbb
movsl
adc
fldl
mov
push
jnp
inc
push
lcall
mov
popa
adc
lock
lea
or
idivl
out
out
jmp
insb
pop
or
out
xor
inc
sub
out
pop
sbb
jns
cld
pop
popa
mov
mov
imul
add
sub
pop
sti
aaa
or
pop
cmc
mov
pop
sbb
ja
movsl
xchg
aam
scas
inc
fldenv
jne
hlt
lock
out
inc
or
mov
pop
int
sbb
jne
pop
mov
cs
das
cmp
lea
dec
mov
sbb
aas
rolb
inc
lea
add
sbb
fsub
pusha
push
fcomps
mov
test
std
enter
addb
vcvttps2dq
xor
add
les
push
dec
out
ret
popf
pop
dec
push
fucomip
testl
pop
dec
dec
jne
shrb
jp
cmpsb
cmp
sahf
subl
and
pop
dec
pop
ret
in
mov
mov
mov
push
popa
gs
lahf
pop
orb
int
in
addr16
jle
daa
fmuls
insl
sbb
fists
pop
or
pop
push
push
sub
pop
cmc
push
ficoms
mov
cwtl
cmp
and
cld
pop
fisubl
push
mov
cli
aam
push
jae
push
stos
sar
jmp
mov
repnz
mov
xor
cmc
mov
mov
or
imul
add
push
call
cwtl
fdivl
mov
and
ret
cltd
lock
mov
mov
jne
je
xchg
pop
push
jge
js
push
loop
sub
mov
add
test
push
aad
outsb
xchg
int
mov
jno
xor
arpl
mov
mov
push
adc
in
xor
mov
push
push
or
mov
repnz
lods
pop
addr16
lea
int3
mov
aam
dec
fisttps
clc
pop
or
inc
jno
jle
pop
jecxz
lret
mov
popf
arpl
dec
pop
sub
mov
and
leave
lret
aad
push
push
fstpt
fdivrp
gs
pop
adc
inc
pop
sbb
mov
lfence
out
cmp
leave
out
or
lods
mov
fisubrl
xchg
and
mov
lcall
lods
aas
push
stos
filds
or
enter
cwtl
stc
rcr
push
stos
fmull
pop
arpl
sub
xor
pushf
clc
pop
fs
popf
mov
and
imul
lds
mov
test
jne
dec
ds
lret
nop
arpl
xor
xchg
inc
dec
pop
adcl
pop
pushf
push
adc
out
add
sarb
inc
lea
jle
pop
dec
test
dec
mov
mov
lock
sbb
into
stos
mov
mov
dec
push
adc
adc
mov
jno
popf
mov
jnp
pop
adc
je
jnp
cmp
mov
or
sbbl
sbb
lcall
cltd
mov
fdivp
icebp
js
ret
lcall
cmp
jmpw
mov
dec
sbbb
xchg
jecxz
xchg
movsb
icebp
imul
mov
lcall
mov
fsubl
jle
es
gs
inc
dec
loope
xchg
xchg
test
out
subb
jmp
lods
push
pop
sbb
rclb
aaa
sub
test
lret
call
scas
ja
mov
subb
sbb
adc
pop
imul
filds
push
push
sub
and
push
loopne
dec
mov
pop
fsub
xchg
or
xchg
cld
pop
das
xchg
mov
insb
cld
negl
jae
out
xor
gs
orb
sub
mov
push
je
cld
dec
adc
pop
xchg
outsb
lods
push
sbb
shll
pop
icebp
mov
orb
mov
and
and
and
cli
pop
pop
xor
inc
push
lea
lret
popf
or
sahf
and
decl
jbe
fdiv
and
scas
mov
incb
sahf
dec
jo
pop
fadds
mov
je
popa
lahf
xchg
dec
mov
xchg
push
in
and
mov
pop
mov
cli
repnz
pop
sub
lods
inc
sahf
pop
mov
lock
sub
cmpsl
cmp
sbb
in
addr16
xor
sbb
outsb
and
pop
mov
xor
lret
inc
ds
pusha
nop
push
or
loopne
lret
andl
aam
mov
in
pop
pop
shll
roll
data16
in
mov
push
push
sub
jne
jae
fsubr
or
mov
cltd
sahf
mov
mov
jl
fucomip
loop
iret
xchg
pop
imul
dec
or
mov
lods
std
stc
clc
lea
lods
stos
out
pop
or
push
sbb
xor
out
lea
sbb
xor
out
lods
cmp
hlt
cli
push
flds
popf
jno
stos
in
pop
or
jmp
scas
push
fsubrl
pop
sbb
addb
pop
sub
rcll
sub
roll
and
dec
adc
hlt
int
cmpsl
jge
insb
xchg
mov
mov
in
loope
mov
xchg
cmpsl
stc
sub
std
cmp
adc
mov
fstl
lock
xchg
jno
andb
xchg
mov
mov
mov
stos
sub
sbb
add
dec
movsl
outsl
nop
fisttpl
ret
jmp
xchg
iret
push
add
jmp
andb
cs
push
mov
in
sbb
pop
pop
fistl
rcll
or
ljmp
push
rcr
push
cmc
push
fsubrl
pop
xlat
xchg
push
dec
or
and
or
jge
jbe
jns
pop
push
divb
aas
pushf
fsubl
push
inc
xor
fistpll
xchg
iret
test
imul
mov
xchg
push
out
xor
sahf
or
movsb
aas
cmp
cli
lcall
in
xchg
test
mov
and
fisubs
mov
lcall
or
mov
sahf
sub
pop
mov
rcr
addr16
je
pop
lds
inc
std
mov
sbb
xor
insl
add
add
sbb
inc
mov
in
add
loopne
add
mov
movzbl
adc
cmc
fistps
test
or
outsl
xchg
les
in
rcl
ret
mov
push
pop
dec
popf
mov
jp
jmp
xor
push
xchg
jge
pop
mov
arpl
mov
sti
lock
mov
inc
stos
push
int3
jg
test
cld
rcr
in
jge
push
jno
inc
cmp
cwtl
out
jae
lods
scas
iret
cmp
adc
xchg
xlat
mov
gs
xchg
inc
iret
add
cs
mov
cmp
cmpsb
pushf
or
pop
adc
sub
jmp
jne
clc
jge
adc
fstp
add
sar
daa
pop
mov
in
andl
jle
cmpsb
sti
cld
divps
fisttpl
dec
aas
negl
cmc
daa
mov
into
or
and
fnstcw
cmpsb
mov
mov
lock
xlat
pop
es
mov
sbbl
or
push
pop
jg
mov
dec
mov
pop
mov
cmp
imul
xchg
add
scas
cmp
dec
push
mov
aad
cmpsl
pop
inc
int3
push
shr
cltd
cmpsl
rcr
mov
pop
imul
cwtl
ljmp
mov
mov
add
add
inc
xor
xchg
inc
cmpb
xor
loope
dec
imul
imul
cmp
xchg
mov
leave
mov
cmc
adc
and
or
in
adc
sub
lcall
iret
sub
sub
xchg
add
push
fwait
sub
dec
push
and
or
xchg
push
jne
dec
xchg
mov
lret
cmp
scas
push
push
daa
sub
sub
pop
in
std
sahf
inc
outsl
sbb
mov
out
mov
mov
sub
pop
inc
jl
mov
lods
scas
pop
mov
pop
lret
mov
sar
jmp
icebp
scas
push
xchg
pop
sbb
int
dec
loope
jmp
insl
sbb
sar
imul
push
and
mov
fisubs
cmp
fsubrl
gs
fdivrs
lock
call
out
icebp
call
cmpl
ljmp
lcall
imul
scas
jp
jg
aam
shl
cmpsl
push
pop
mov
or
jnp
addr16
mov
adc
shl
inc
or
pop
adc
and
addr16
fisubrl
mov
mov
call
sbb
roll
shlb
inc
lock
push
jne
into
mov
and
mov
lds
andb
mov
pop
xor
test
sti
xchg
add
xchg
into
dec
cmc
pop
or
sub
cmc
int
pusha
pushf
add
notb
inc
lcall
out
xchg
pop
pop
pushf
insb
add
and
cmc
cwtl
mov
call
popf
lea
cmpsl
movl
jge
xchg
lea
jae
cwtl
sarb
push
sbb
inc
shrl
out
push
out
roll
clc
mov
cld
sti
iret
addr16
pop
cmpsl
jo
push
shll
loopne
and
pop
pop
inc
cmp
loop
add
mov
in
mov
int3
mov
jmp
or
into
xor
fwait
inc
popf
cmpsl
mov
mov
lock
repz
scas
stos
cmc
mov
dec
cmp
movsb
xlat
pop
cli
cmpsl
mov
test
xchg
outsl
movsb
inc
jle
xchg
add
push
or
dec
jp
sbb
cmpsb
lds
pop
add
jg
adc
pop
push
inc
sti
lret
stos
mov
add
gs
push
or
xlat
cmp
mov
leave
arpl
pop
mov
xchg
or
ret
jp
pop
stc
iret
inc
jne
jne
dec
jmp
xor
cs
imul
mov
mov
or
fisubrs
ret
imul
mov
fiadds
iret
mov
imul
xor
inc
inc
sahf
mov
cmp
pop
inc
xlat
fdivrl
ss
xchg
hlt
jne
imul
mov
ret
test
sbb
mov
std
lods
add
test
pop
inc
cmp
add
or
jnp
ss
cmp
cmp
cld
test
int3
mov
jle
mov
cmpsl
sbb
add
pop
call
jnp
je
ficomps
cmp
jecxz
sbbl
jp
cli
insb
jmp
pop
xor
sub
pop
xchg
test
xor
sbb
or
lods
sahf
in
inc
imul
pop
cmp
mov
test
mov
inc
and
sub
aaa
andb
das
aad
dec
movsb
call
sbb
dec
outsb
pop
inc
pop
sub
jns
push
mov
mov
pop
dec
movsl
adc
movsl
add
fimuls
and
xor
je
fstpt
enter
rcrl
shll
jmp
sarb
stos
pop
inc
sub
cmp
pop
aaa
inc
pop
mov
and
mov
imul
popa
hlt
sti
add
ret
xchg
mov
sub
add
pop
add
mov
jne
mov
call
mov
mov
and
mov
push
out
iret
xor
jo
jp
mov
mov
aad
data16
shrb
outsl
cli
es
pushaw
push
adc
inc
in
add
outsl
sarl
or
arpl
inc
dec
gs
jae
sub
sti
pop
out
lcall
rorb
stos
xor
out
xor
add
add
add
mov
aam
pop
mov
push
mov
je
lret
jbe
popf
daa
pop
pop
orb
inc
int3
or
dec
out
not
push
mov
fdivrs
std
mov
mov
xchg
nop
or
call
cltd
add
mov
or
lahf
ret
push
inc
sub
pop
inc
std
ss
mov
jle
pop
cmp
cli
mov
imul
mov
js
jle
arpl
add
add
outsb
lahf
dec
pop
dec
xchg
sub
add
es
mov
pushf
sahf
sti
add
or
out
pop
rol
roll
cld
sbb
push
jp
pop
outsl
inc
cmp
outsb
pop
add
test
sub
js
sub
pop
jg
adc
orb
inc
lods
mov
mov
decb
cmp
mov
insl
jg
xor
sti
push
mov
sub
or
insb
cmp
sahf
stos
icebp
xchg
fsubs
inc
mov
jge
mov
in
std
arpl
push
imul
mov
sub
mov
fwait
popa
or
insb
push
mov
push
sub
add
pushf
imul
ja
jns
ss
push
jne
mov
cmp
pop
mov
ret
fldt
or
mov
fidivrl
inc
pop
jle
cmp
fisubrs
mov
or
cmp
imul
in
int
movsb
push
dec
cwtl
stc
fisttpll
sbb
xor
dec
pop
cmpsb
push
call
add
or
dec
aas
das
jmp
jb
cmc
ret
js
mov
orb
fisubs
filds
aas
cmp
fucomp
popf
ljmp
lret
mov
repnz
push
jmp
mov
xor
add
xchg
stos
cmp
sub
jb
aam
scas
and
mov
mov
addb
fiaddl
adc
ficomps
jecxz
aam
cmp
ss
push
jmp
cld
insl
mov
insb
xor
ret
mov
imul
push
or
inc
popf
in
mov
out
sub
sahf
adc
rolb
or
test
add
sub
push
mov
aas
out
fldl
xor
lds
mov
mov
cli
xchg
lock
xor
negl
or
mov
inc
jnp
mov
or
in
add
inc
sub
mov
jmp
pusha
outsb
ret
negl
add
adc
fnstenv
fidivs
add
ds
arpl
jne
scas
jbe
lods
pop
jl
imul
sub
and
bnd
imul
mov
xor
xchg
test
clc
xor
cmpsl
rcrb
mov
adc
fistpl
add
dec
push
xchg
inc
outsl
and
inc
add
pop
sub
movsl
aaa
pop
dec
ret
mov
pop
sbb
shll
add
xchg
aas
adc
inc
aam
sahf
out
adc
dec
jle
dec
mov
das
pop
add
xchg
jns
pop
inc
jp
jo
fwait
pop
or
dec
subb
insb
daa
add
enter
dec
pop
xchg
or
nop
add
pop
out
and
jg
mov
inc
add
shr
bound
sub
stos
dec
je
mov
in
adc
les
xchg
test
jnp
ss
sub
addr16
xchg
shll
mov
sub
jo
mov
sub
xchg
and
jg
xchg
mov
pop
inc
test
mov
sbb
enter
paddb
pop
mov
lea
aas
add
pop
pop
dec
rcr
mov
and
andb
cld
ds
inc
pop
push
adc
jg
cmpsb
sub
pop
and
pop
jo
shrl
or
xchg
sub
mov
stos
add
pop
popf
subl
jns
jnp
add
mov
or
mov
adc
stos
push
das
mov
lock
xchg
sub
dec
stos
popf
pop
jg
adc
pop
mov
mul
pusha
sub
scas
subb
sbb
aam
movsb
cmp
fcompl
clc
leave
dec
in
xchg
stos
fsts
jns
jmp
pop
jno
pop
adc
add
cmpsl
rcll
orl
lea
shlb
test
sbb
pop
mov
imull
add
andl
xchg
stos
pop
xlat
inc
cmp
xor
push
or
pop
rcr
cmp
add
inc
adc
dec
or
adc
jg
jg
notl
inc
sbbb
inc
aas
pop
push
icebp
pop
test
push
add
add
mov
ficompl
rolb
das
mov
sbb
fst
inc
lcall
iret
push
and
inc
popa
push
out
pop
jg
sti
jecxz
sub
sbbb
aad
push
jg
mov
push
jnp
dec
inc
push
int
jecxz
pushf
mov
dec
and
int3
push
repnz
push
or
or
cli
iret
clc
fnstenv
add
lahf
loope
lea
test
rorb
mov
mov
lret
lahf
jmp
mov
sbb
pop
inc
dec
jmp
stc
mov
pop
xor
shll
int
push
fcmovnu
pop
dec
and
imul
sub
sub
and
cmpsl
cmp
jge
cs
mov
jne
imul
and
negl
jecxz
xor
pop
pop
jg
sbb
lcall
jmp
inc
adc
pop
push
loope
add
mov
inc
and
fimull
outsl
fsubl
decb
pop
aaa
mov
sbb
or
jge
ret
adc
sti
add
cs
movsl
pop
push
ds
cmp
aam
cli
in
mov
pushf
std
leave
add
mov
inc
sub
sub
pop
das
mov
pop
ljmp
xchg
cwtl
dec
lret
roll
stos
imulb
mov
mov
outsb
jmp
sbb
sbb
mov
xchg
out
iret
movsb
fmul
cmpsb
xchg
push
lahf
fisubs
aas
out
lea
adc
cli
mov
iret
mov
cmp
jnp
dec
mov
push
in
mov
pop
xchg
add
out
cmpsl
mulb
push
outsl
or
insb
mov
add
frstor
inc
out
pop
fwait
mov
inc
inc
clc
xchg
jle
add
mov
push
push
mov
adc
test
jmp
pop
test
call
pop
cmpsl
in
add
ror
mov
fucomp
dec
adc
fbstp
push
mov
aas
je
mov
insb
js
pushf
inc
int
pop
push
rol
je
out
cltd
mov
rcr
cmp
outsl
repz
rorb
adc
imul
mov
jge
pop
jb
or
fsubp
lock
ret
sbb
or
movsl
dec
cmc
stc
pop
mov
and
xchg
fdivrl
sub
imul
int3
sbb
sub
flds
loope
add
bnd
insb
pusha
dec
out
pop
packsswb
je
mov
int
leave
fidivrs
xor
stos
insl
xchg
call
outsb
jmp
or
stos
lea
js
mov
fs
popa
repnz
mov
gs
push
jp
xor
insl
mov
pop
lods
jb
push
jmp
fsubl
pop
push
mov
push
dec
push
pop
and
push
hlt
jbe
xor
add
xor
loopne
decb
sbb
in
jae
mov
sbb
sub
rcrb
popa
int
xchg
or
xchg
jmp
test
in
fsubrl
lret
mov
idivl
add
out
add
dec
jp
aam
inc
movl
add
pop
sbb
enter
test
in
sbb
lods
ret
add
ficompl
das
imul
hlt
ret
rcrl
add
pop
ja
movsl
mov
test
imul
std
pop
movsl
ret
jg
leave
xor
mov
cmp
dec
dec
mov
sbbl
in
cmp
data16
dec
or
adc
in
outsl
aad
inc
arpl
jnp
mov
test
add
dec
pop
fdivr
push
jg
jg
pop
outsb
dec
sti
sbbb
imul
hlt
adc
push
rol
jg
pop
xor
imul
in
jne
pop
add
add
leave
mov
fldl
idivl
pusha
jp
cmpb
aad
jle
sbb
mov
popf
gs
stos
xchg
push
jae
orb
outsl
cmpsb
pop
push
jl
dec
push
es
jle
pop
lahf
xchg
inc
mov
dec
stos
pop
push
pop
push
jp
lock
mov
leave
adc
xchg
dec
dec
out
mov
cwtl
mov
in
mov
mov
jne
cs
stos
pop
push
inc
test
xchg
or
test
jmp
and
imul
mov
mov
push
mov
imul
ja,pn
mov
shr
sti
and
movb
mov
sarb
fcmovnbe
adc
mull
pop
jno
add
mov
iret
mov
mov
call
sbb
es
int
add
dec
lea
divb
sar
stc
pushf
push
cli
fsubrl
mov
int
adc
cmp
mov
arpl
stc
pop
hlt
shl
push
or
mov
pop
dec
lods
dec
ja
notb
fcom
adc
decl
sti
push
sahf
aas
xlat
adc
aam
xchg
push
or
mov
and
jno
mov
out
add
pop
daa
mov
notb
cltd
ret
imul
push
or
fbstp
aad
loopne
fbstp
je
cwtl
bound
je
inc
xchg
and
or
aaa
ret
stos
cs
mov
lea
mov
push
imul
xchg
push
pop
stc
sahf
pop
xor
shlb
rclb
aad
or
and
and
scas
add
out
cmp
mov
pop
addr16
pop
mov
shlb
dec
and
sbb
push
in
jmp
add
fucomi
pop
cmpsl
pop
iret
pop
out
fcmovbe
pusha
jecxz
lret
cmp
jne
inc
sti
adc
punpckhwd
pop
mov
push
lahf
xor
loope
push
daa
cmc
jl
mov
mov
imul
push
cmpsb
xor
mov
dec
imull
outsl
sti
ror
or
loopne
in
fs
pop
cmp
add
out
xchg
jb
jle
mov
jle
daa
xchg
dec
push
lahf
iret
loopne
and
or
and
cli
ret
sub
inc
testl
add
mov
mov
iret
mov
mov
mov
loop
lea
lds
xchg
mov
outsb
sbb
ds
lock
imul
imul
ja
jg
outsb
aaa
stos
mov
shlb
dec
jnp
out
mov
pop
mov
xchg
dec
popf
sahf
pop
subl
mov
out
mov
cmp
adc
xchg
mov
mov
push
cli
pop
idivl
test
enter
es
mov
out
sub
dec
or
rorl
adc
or
pop
rcrl
dec
push
mov
mov
incb
cmp
mov
test
int
or
and
divb
sahf
imul
insb
inc
push
mov
cld
pop
mov
fildl
and
insl
aas
cmp
push
test
add
out
xchg
icebp
sub
mov
mov
pop
cli
sti
or
out
fcompl
test
jge
sahf
pop
or
xor
rorl
hlt
mov
outsb
mov
and
insb
sbbl
je
mov
inc
pop
dec
and
imul
sub
aad
aad
popl
pop
push
les
lret
and
call
jle
mov
gs
sub
xor
and
sub
xlat
mov
nop
aaa
insb
mov
inc
cmp
or
pop
push
testl
inc
pop
stmxcsr
jb,pn
shr
add
fdivrs
pop
jmp
mov
ljmp
cmp
sub
inc
out
outsb
loopne
mov
test
dec
or
dec
push
bnd
jmp
in
flds
mov
jb
mov
sub
mov
xor
jl
mov
pop
pop
rclb
add
and
or
fstl
pop
dec
sub
or
mov
aas
es
scas
pop
ss
mov
pop
and
inc
push
mov
mov
dec
cmovns
push
jae
scas
and
test
inc
ljmp
mov
dec
and
mov
mov
iret
push
jg
pop
inc
pop
xchg
jo
scas
rcl
lods
push
or
mov
stos
inc
mov
cmp
add
jg
insb
mov
arpl
into
or
aad
clc
call
and
mov
sub
test
arpl
orb
je
sbb
sub
test
rol
cltd
outsl
fcompl
out
ret
cmc
pop
insl
mov
jp
xor
push
adc
or
sbb
mov
pop
adc
jb
pop
inc
jbe
pusha
and
pop
sti
cmpb
fincstp
pop
call
pop
in
imul
push
jge
adc
push
inc
sub
inc
xor
and
xor
mov
or
leave
and
mov
xchg
sti
fadd
out
scas
mov
fwait
jmp
enter
std
inc
cmc
xor
mov
lcall
mov
outsl
mov
sub
mov
xchg
aam
sbb
loopne
std
cld
jo
negl
mov
lret
pop
mov
ret
loope
mov
xchg
adc
or
stos
lcall
or
stos
test
insl
divps
mov
xchg
xorb
repnz
clc
pop
adc
inc
push
stos
mov
in
insb
push
lock
or
lcall
aas
jo
es
iret
idivb
gs
mov
lahf
shrb
cmc
aam
jle
pop
daa
cmp
fsubrs
mov
pop
jmp
push
adc
lea
adc
sarb
jecxz
and
add
xchg
sbb
pop
rol
test
inc
or
mov
je
test
pop
pop
sahf
xchg
lahf
pop
rcrl
mov
addr16
mov
mov
mov
mov
push
jp
imul
test
cwtl
mov
outsb
push
push
xor
mov
sbb
xchg
pop
add
adc
cwtl
sar
jns
adc
ficomps
jp
push
clc
cmp
je
pop
out
insl
sbbl
sub
hlt
sub
pop
repz
das
ja
out
add
and
out
mov
push
jp
mov
inc
repnz
push
cli
repnz
cmp
notb
jmp
fsts
std
adc
push
dec
aaa
jg
icebp
fwait
es
add
pop
scas
fs
idivl
arpl
or
cli
jmp
mov
jb
pop
mov
js
cmpsb
stc
iret
ret
mov
repz
mov
fsubrp
or
sarb
hlt
push
lcall
cmpsl
out
pop
sbb
sbb
cs
ret
mov
cltd
js
outsb
mov
or
pop
pop
in
pop
mul
mov
pop
imul
pop
cmp
push
dec
cwtl
shr
pop
cli
mov
sbb
invd
imul
sbb
outsb
rorl
pop
add
rclb
xchg
fdiv
pop
sub
pop
stos
sub
jl
adc
pop
neg
xchg
shl
pop
inc
cmp
lahf
arpl
insb
mov
cli
push
jne
jmp
sub
adc
rcr
pop
std
cli
cmc
dec
arpl
pushf
scas
data16
stc
inc
ret
push
jo
cwtl
lcall
sahf
jae
fiadds
nop
and
ret
test
xor
add
sbb
subb
out
push
pop
pop
in
mov
dec
jae
lods
rorl
cld
mov
xor
or
dec
add
jg
mov
push
aas
and
pop
subb
jecxz
mov
pop
fstps
inc
mov
mov
inc
ljmp
stos
pop
or
bound
dec
add
pop
push
outsb
adc
leave
in
cmc
adc
inc
pop
add
popf
bswap
stos
xchg
mov
pop
cltd
xchg
shl
cmpsb
mov
cld
fwait
scas
negb
inc
xor
mov
mov
fldcw
push
add
add
cmp
aad
lods
cmpsb
fsubrl
out
sahf
mov
stc
adc
fucomi
adc
fstps
sahf
xor
aad
movsb
mov
rcrl
cmp
iret
mov
mov
pop
mov
adc
mov
pop
or
in
jge
xchg
fsubl
mov
rolb
jmp
or
movsl
cli
ds
push
in
ror
dec
jo
fbstp
aaa
mov
mov
ret
ret
push
jmp
ja
jo
pop
and
push
xchg
lea
push
cs
aam
sbb
jle
insb
push
sbb
mov
pop
outsl
xchg
xor
daa
mov
pop
jg
mov
dec
mov
das
lret
xchg
sbb
pop
xchg
pop
fistl
pop
xor
jmp
and
or
ficoms
imul
or
ds
xchg
inc
pop
pop
rcrb
mov
scas
push
rorl
or
rcrl
flds
mov
add
fidivrl
sbb
loopne
cmc
fimull
repnz
test
cmovns
cwtl
aaa
inc
push
aaa
and
insb
add
imul
fistpl
data16
cmpb
add
sahf
and
out
test
out
cmc
lds
and
dec
mov
sbb
in
pop
mov
mov
stos
pop
cmc
leave
cld
es
pusha
lds
loopne
xchg
pop
jns
pop
mov
mov
cmpb
xor
cmpsl
fisttps
or
rolb
popf
cltd
cmc
ror
out
push
sbb
mov
mov
insl
jbe
out
pop
lods
cltd
xchg
or
inc
aad
pop
jle
mov
adcl
pop
mov
imul
xor
leave
adc
insb
push
pop
or
add
fs
ja
dec
scas
adc
ss
jg
mov
pop
addr16
call
push
inc
fdivl
cmpsb
mov
ss
scas
xor
arpl
push
and
push
fisubl
out
sub
inc
mov
loope
and
push
add
ljmp
jecxz
lahf
inc
pushf
cmp
lret
inc
pop
xchg
sti
cmpsl
cmpsl
sbb
push
or
aas
stos
scas
pop
cwtl
push
dec
push
paddd
test
repnz
ss
jb
jge
andl
es
add
repnz
popf
in
sahf
int
mov
jne
fistl
pusha
jp
and
inc
xchg
andb
cli
pop
inc
and
or
adc
add
sub
mov
xchg
hlt
mov
and
and
ficoms
cltd
stc
inc
xor
push
sbb
std
add
sbb
arpl
mov
or
xchg
out
nop
jae
pusha
fwait
push
fnstenv
adc
push
addr16
imul
xor
jg
loope
aaa
mov
aas
dec
inc
lods
jns
mov
mov
aas
repz
inc
sahf
pop
in
imul
and
cmpl
pop
scas
add
popa
lds
cmp
adc
loopne
xor
mov
sub
pop
daa
int
mov
sbb
repz
add
push
cmp
mov
pop
push
idiv
pop
add
add
test
test
vmovlps
addr16
jle
pop
fcmovnbe
and
fcmovnb
jmp
jg
mov
stos
add
test
sub
jmp
inc
icebp
es
movsb
daa
lods
lea
fcmovb
push
mov
imul
cmp
push
scas
addr16
cmc
fchs
fs
mov
imul
add
pop
mov
out
jo
sar
xor
and
sbb
lahf
pop
clc
pop
adc
pop
repnz
xchg
imul
jp
and
daa
cmp
mov
sahf
test
lods
jl
pop
mov
pop
xor
push
les
es
mov
mov
add
mov
rcl
imul
in
pusha
pop
ret
mov
jle
aas
add
xchg
mov
insb
or
jecxz
stc
jge
add
stos
shrl
add
call
jbe
fcomi
roll
fs
cwtl
popf
jg
cwtl
inc
xlat
xorb
xchg
inc
mov
cmp
rorb
int3
mov
pop
adc
mov
dec
lds
fs
push
sti
cmp
dec
fistpl
add
test
sub
sub
inc
pop
sbb
icebp
push
clc
jnp
cmp
imul
fs
cmp
push
insb
and
aaa
idivb
outsb
dec
pop
out
ret
enter
sti
leave
cvtpi2ps
jns
inc
sub
outsb
cli
dec
lods
bound
je
adc
cmc
in
orl
inc
std
jl
mov
jns
rclb
mov
dec
adc
pop
jo
fistpl
cltd
mov
dec
push
nop
pushf
mov
subl
daa
shr
or
lahf
push
lea
into
gs
out
fdivl
push
leave
divl
cwtl
and
ficoms
adc
inc
ds
mov
xor
lret
stc
dec
push
in
inc
das
call
cmp
in
stos
push
lea
jl
pop
add
into
mov
in
or
fstpt
pop
lock
fwait
adc
dec
jle
xlat
fidivs
add
or
rclb
pusha
movsl
mov
cmp
sbb
imul
mov
pop
dec
pusha
ret
scas
sbb
ljmp
or
mov
enter
addb
sbb
je
ds
and
adc
inc
out
movsb
lock
inc
ficompl
popf
push
loop
pop
cltd
jns
mov
stc
mov
xor
cmpsb
in
mov
mov
or
sbb
scas
clc
in
push
and
dec
add
movsl
loopne
ds
push
and
xchg
popl
pop
and
sbbb
pop
fsubr
adc
adc
xor
mov
sarb
fidivrs
inc
xor
pop
xor
cltd
push
mov
add
mov
mov
inc
jnp
sarl
push
mov
ja
mov
mov
into
push
fcomps
add
inc
fsubr
or
aad
xor
mov
mov
fcompl
int3
lea
in
adc
arpl
jle
pop
lret
test
out
dec
mov
mov
sbb
and
cmp
enter
sbb
cmp
pop
push
mov
lea
sbb
cmc
and
pop
push
outsb
call
jne
adc
jecxz
xor
add
popa
inc
sbb
xchg
fimull
and
das
mov
mov
lcall
stos
pop
mov
mov
in
sub
aaa
clc
test
xor
das
aam
shr
sub
sub
sti
fisubl
and
test
rclb
sbb
lock
xor
dec
dec
push
pop
mov
adc
insl
dec
test
dec
mov
mov
ljmp
cmp
jg
ret
scas
mov
mov
fildl
pusha
lods
fwait
test
pop
fidivrl
xor
sarb
outsl
and
cmp
sbb
popa
cli
mov
xor
stc
call
xor
xchg
movsl
or
rol
xor
sti
test
dec
stos
add
scas
pop
dec
jge
pop
jge
in
sahf
mov
andb
shll
push
test
shrb
in
es
fcompl
xor
insb
ds
divl
and
jb
ds
rcrl
leave
add
cmp
mov
sbb
cmc
in
daa
lds
call
ret
sub
cli
pop
out
pop
paddsw
and
dec
mov
cwtl
std
imul
xor
je
mov
out
testb
cmp
dec
lods
xchg
test
lahf
jp
movzbl
sbbb
testb
cmpsb
cmpsb
add
push
loopne
xor
in
test
fildl
or
cmp
pop
std
ret
icebp
jmp
cltd
addr16
in
add
insl
mov
pop
mov
add
add
xor
pop
inc
jge
jle
jmp
imul
adc
mov
fcoms
test
in
mov
sarl
mov
test
std
test
sbb
mov
inc
mov
inc
pop
xor
cmpsb
pop
testb
adc
jae
cmpsl
dec
mov
mov
dec
jne
mov
sub
or
insb
jle
push
jg
inc
notb
mov
mov
push
dec
cmpsb
xchg
fmull
sbbl
loope
push
cwtl
outsb
dec
pop
xchg
aas
pop
js
movsb
loop
push
data16
sti
or
mov
ds
sub
test
fcmovnb
mov
sub
xchg
jg
ret
loopne
xor
mov
jns
jne
ftst
cld
repz
xorl
scas
inc
cmpl
xor
sub
add
cmp
negl
int
cld
pop
and
sub
ja
xchg
out
jle
leave
clc
cmc
imul
mov
lock
and
or
out
insb
adc
jbe
dec
aam
mov
mov
inc
jecxz
icebp
jnp
mov
stos
cmp
dec
inc
jbe
es
mov
jae
xor
mov
pop
pop
mov
sti
add
sbb
pop
and
push
testb
push
lock
sub
pop
dec
shlb
lea
movsl
ds
pop
adc
js
push
pop
jle
loopne
out
mov
addl
mov
bnd
frstor
mov
xor
pop
out
test
inc
cltd
shrb
mov
xchg
lcall
movsl
sti
insl
pop
push
popa
in
les
mov
leave
in
inc
jne
mov
xchg
scas
sub
pop
fistps
cmp
sbb
add
in
pop
push
cmp
in
outsb
push
jmp
addr16
sbb
jo
in
sahf
sbb
test
in
imul
aas
imul
push
fistpl
or
mov
pop
or
mov
jge
leave
push
sub
mov
icebp
loop
fidivs
mov
and
adc
mov
mov
ja
sahf
mov
outsb
insl
adc
cmpsb
mov
fistps
dec
ffree
push
aas
imul
adc
push
data16
pop
test
pop
roll
sub
push
inc
xor
inc
je
add
dec
adcb
enter
in
mov
scas
sub
jbe
hlt
sub
adc
scas
xchg
sarl
xor
stos
lcall
adc
das
mov
stos
and
das
pop
loop
add
data16
imul
mov
fidivl
iret
add
adc
inc
cmp
pop
dec
pop
pop
dec
mov
popa
jo
iret
out
shll
add
push
xor
xchg
notb
clc
mov
cmp
and
xor
into
das
fwait
insl
add
pop
xchg
imull
sti
add
jmp
add
out
fcomps
fcmovb
dec
popa
dec
es
stos
push
xchg
into
or
mov
mov
or
scas
adc
clc
jg
pop
mov
pop
lret
push
subb
push
add
outsl
sahf
jbe
jo
int
push
ret
mov
dec
mov
pusha
add
pop
imul
aas
mov
push
sahf
and
sbb
aas
ds
in
ss
aaa
sub
ret
testl
cmp
sahf
add
cmpsl
jl
adc
pop
jno
adc
push
xor
fstps
dec
push
insl
fimull
idivl
or
jns
subl
rclb
test
xor
add
inc
xchg
lock
sub
mov
out
sbb
add
scas
pop
xchg
sub
pop
rolb
push
leave
add
lret
add
ljmpw
fistps
add
pop
or
push
xchg
inc
mov
and
or
stos
push
lcall
cld
shll
push
addr16
pop
sti
fcomip
push
cmp
pop
push
mov
mov
popf
enter
outsl
xchg
lea
out
jmp
push
cmp
inc
es
roll
sbb
movsb
jp
fsts
inc
jg
lahf
pop
movsl
movb
aas
stc
jmp
xlat
subb
adc
jmp
repnz
cmpsl
stos
lods
inc
push
mov
adc
shlb
outsl
mov
loope
and
pushf
fldt
xchg
outsl
aas
lret
pop
aad
or
sub
sub
mov
xchg
lods
daa
mov
ljmp
and
mov
adc
loop
jmp
pop
or
inc
xor
dec
mov
adc
test
enter
cmp
cmpl
jne
stc
shll
xor
fisttps
bound
roll
jge
pop
rcr
push
sbb
or
sbb
cmp
or
push
dec
js
mov
jo
inc
inc
das
push
repz
sub
aaa
repnz
cmpb
lea
leave
clc
mov
xor
adc
mov
std
bound
pop
negl
or
out
movsl
mov
mov
adc
mov
stos
imul
aas
neg
sbb
out
or
jge
pop
mov
mov
xchg
pop
pop
sub
pop
test
adc
push
and
xor
mov
test
xor
gs
adc
xor
adc
sub
inc
push
ja
lock
mov
xor
movsl
hlt
ss
or
ret
leave
push
aam
out
loope
sub
movl
sub
xor
pop
icebp
mov
aas
cmp
jge
pop
pusha
pop
cld
test
cwtl
outsb
mov
out
sub
sbb
mov
pop
aad
scas
sbb
shll
jnp
flds
mov
push
das
cmp
cmp
mov
mov
add
sub
adcl
int3
cmp
pop
or
lock
lahf
adc
xor
mov
xchg
dec
in
sbb
and
pop
pop
popa
addr16
xchg
pop
loope
mov
pop
sub
push
imul
adc
mov
mov
adc
repnz
pop
jp
mov
adc
pop
mulb
pop
cmpsl
pop
hlt
sahf
aas
shrb
fwait
add
jl
mov
sub
arpl
sub
icebp
add
sahf
jne
popf
pop
sub
shlb
mov
push
into
adc
mov
movsb
add
jl
xor
ja
inc
outsl
or
and
out
push
out
adc
movsb
icebp
je
pop
sub
les
imul
subb
dec
mov
adc
add
sbb
sbb
jle
gs
xchg
inc
stos
mov
dec
add
call
pop
inc
mov
pop
inc
fldcw
jle
imul
mov
sub
lds
fcomps
into
insb
pop
jbe
jnp
js
pop
ror
test
mov
repz
mov
jle
xor
fldt
sahf
jo
xchg
decb
mov
and
shrw
xchg
cltd
jle
mov
jge
outsl
pop
cmovbe
das
movl
int
scas
mov
or
out
mov
cs
push
xchg
inc
mov
in
cwtl
jg
cmpsl
push
mov
addr16
arpl
mov
jge
int3
xchg
adc
out
and
imul
add
icebp
inc
es
cmp
inc
cmpsl
loope
jbe
std
or
arpl
sahf
lods
int3
push
imul
and
add
scas
sahf
adc
cmp
ss
aaa
stc
addr16
push
repnz
es
iret
mov
in
inc
xor
iret
fcompl
xchg
dec
sti
into
ret
loope
mov
push
hlt
pop
lods
int
pop
lcall
xchg
aaa
pop
ret
lods
call
nop
idivb
adc
addb
mov
inc
mov
mov
ja
fst
xor
into
adc
mov
mov
cli
adc
pop
scas
fistl
shrl
imul
adc
popf
sbbb
js
testb
mov
je
cld
xchg
add
pxor
xor
loop
leave
mov
mov
sbb
cmc
sbb
add
test
sarl
jg
mov
scas
push
dec
out
clc
sub
xor
arpl
mov
into
mov
gs
inc
jmp
sbb
pop
fisttps
mov
add
inc
clc
clc
mov
sub
inc
fcmovb
mov
test
mov
jo
mov
dec
pop
add
aaa
mov
subb
pop
mov
loop
adc
stc
push
cmpsl
jno
das
mov
mov
and
xor
sahf
les
imul
insb
std
fistps
mov
cltd
fmuls
xchg
test
jecxz
jle
sbb
std
jnp
je
pop
repnz
imul
or
xor
enter
cmpsl
sti
das
pop
loopne
imul
stos
movsl
stc
pop
mov
andl
popf
mov
xor
adc
js
in
and
mov
aaa
movb
fcomp
movsl
addr16
adc
insl
add
das
cli
add
lods
cwtl
mov
cmp
sti
pop
inc
pop
jl
cmpsb
xorl
pop
fsubrs
movsb
push
fldenv
sbb
cmp
repz
inc
stos
lret
arpl
lods
decb
sub
push
xchg
adc
sub
rcl
stc
push
stos
lock
imul
leave
inc
adc
and
cwtl
mov
xor
pop
cli
cmc
or
cmp
test
push
sub
add
xor
inc
pop
in
sbb
and
jmp
std
fwait
andb
movsb
mov
bnd
sbb
lods
je
test
cmp
jp
imulb
add
and
cmpsl
jl
cmp
dec
scas
insb
pop
pop
clc
out
jbe
into
mov
icebp
insb
popf
pop
in
pop
movb
jmp
in
cltd
add
int
loope
data16
movb
addr16
mov
cmp
pop
lods
sahf
inc
leave
jecxz
pop
mov
pop
lahf
cmpsl
xchg
push
lods
in
inc
pop
jbe
rorl
das
sbb
fs
into
adc
pop
repz
int3
jecxz
lds
lock
enter
inc
mov
push
lcall
pop
jge
leave
loope
jbe
sbb
scas
jg
mov
pop
int3
mov
jle
dec
lcall
cmp
xor
fdivs
sbb
cwtl
lods
daa
shrl
sti
les
cwtl
outsl
mov
cmpl
inc
mov
cmp
fiaddl
pop
notl
mov
adc
sahf
mov
or
ja
js,pt
loop
fyl2x
cmp
addr16
xor
xor
push
outsl
push
out
push
inc
sub
adcl
rcrb
cltd
arpl
jne
insl
or
stos
movsb
mov
mov
lahf
movsl
dec
scas
pop
cmpsb
inc
push
or
or
ljmp
inc
adc
pop
sbb
mov
fisubs
pop
cltd
std
pop
sbb
cmpb
lock
pop
loop
mov
push
jb
shrb
xor
push
cli
dec
mov
pop
fisubrl
mov
arpl
xor
imul
ss
inc
insl
bnd
cmc
push
mov
mov
dec
add
lods
ret
les
cmp
cmp
ss
test
das
mov
inc
or
insl
push
xor
rorb
cmp
add
sub
dec
push
and
pop
imul
adc
sub
mov
aad
loopne
xchg
pop
and
dec
jle
sub
adc
mov
es
in
in
dec
ret
rclb
jne
adc
lods
push
add
fisttpl
test
sub
lcall
fcmovbe
jno
fdivs
pop
mov
movsl
scas
mov
mov
imul
xor
dec
or
stos
popa
sbb
sbb
add
movb
xchg
in
loopne
sbbb
pop
ljmp
arpl
lods
add
lahf
cmp
mov
jg
xorl
clc
mov
push
fsubl
lret
mov
call
mov
in
pop
rcl
fst
shlb
nop
fstpt
mov
std
xchg
pop
inc
dec
push
inc
or
addb
pop
sub
cmp
push
rcrb
dec
pop
aas
mov
fisubrs
out
test
pop
cli
ss
cwtl
outsl
outsb
and
pop
loop
mov
sub
mov
mov
std
mov
sub
daa
pop
in
es
and
leave
mov
push
xchg
cld
add
ljmp
pop
mov
cwtl
push
push
pop
les
xchg
adc
cmp
add
fistps
aad
and
movsl
dec
jg
cmpsl
out
popf
jle
cmpsl
mov
lahf
cmpsl
push
fdivrp
popa
loope
mov
aaa
sahf
fstpt
rorl
and
push
jnp
ljmp
dec
pushf
arpl
dec
cmp
hlt
xchg
xchg
dec
out
jge
ficomps
pushf
hlt
dec
sbb
rolb
add
lds
lcall
out
and
add
mov
mov
rcll
mov
inc
imul
das
jmp
in
pop
pop
adc
mov
push
lods
outsb
hlt
inc
xor
and
mov
mov
inc
jg
mov
push
pop
rolb
push
out
cmpb
leave
imul
fnsave
mov
test
xchg
pop
or
xchg
popa
mov
and
and
loope
mov
and
dec
mov
pushf
inc
jg
test
mov
jmp
add
mov
out
cmpsb
cmc
hlt
iret
or
popa
push
test
adc
mov
shrl
push
push
add
fimuls
cltd
mov
inc
out
into
scas
repnz
imul
inc
push
cli
push
mov
push
jle
cmp
mov
mov
pop
add
movsb
js
sub
fldcw
jp
pop
or
aad
pop
scas
inc
add
adc
inc
pushf
test
bound
mov
stc
mov
cld
std
add
pop
push
or
subl
pop
je
push
int
or
shll
push
add
pop
or
push
push
and
fcoms
jmp
fistpl
add
imulb
xorl
mov
je
cmp
and
fucomi
pop
jmp
sahf
jg
jns
pop
xorb
mov
or
mov
mov
xor
ja
adc
jns
popa
jo
xlat
adc
push
push
mov
cmpsb
loope
in
mov
mov
jle
cmpsl
push
pop
repnz
sub
dec
out
fidivl
dec
scas
inc
insl
sar
mov
aas
dec
pop
mov
mov
add
pop
dec
iret
inc
mov
push
movups
xchg
cmpsb
or
dec
pop
call
inc
out
xorl
sub
pop
mov
flds
loope
jo
pop
imul
mov
push
inc
inc
push
jne
call
scas
sbb
dec
pop
push
cli
inc
mov
mov
pushf
fcmovnu
cmp
insb
mov
es
fisubs
out
mov
fldcw
js
hlt
fadds
xchg
mov
sbb
rorl
push
cmc
lret
bswap
icebp
rcl
add
aaa
pusha
jecxz
aad
push
in
shlw
mov
incb
stos
jle
xchg
pop
pusha
clc
fsub
mov
movsb
mov
dec
fisubrs
mov
push
mov
pop
test
pop
repz
mov
xchg
ss
or
xor
gs
arpl
out
adc
cmpsb
mov
mov
pop
xchg
lea
cmpsb
fs
lret
ds
subl
repnz
jns
or
aad
pop
mov
stc
fdivs
dec
pop
mov
ficomps
int3
hlt
pop
mov
pop
cmpsb
cmpl
dec
push
hlt
jmp
xchg
sti
dec
test
rcrl
mov
pop
pop
push
pop
movsb
mov
int3
ficoms
aad
fucomip
dec
sti
inc
icebp
aad
pop
lods
mov
mov
cli
stos
lods
scas
js
adc
xchg
inc
cmpl
pop
sbb
mov
jle
and
insl
xchg
xor
insl
or
or
pop
clc
jns
xchg
fs
aas
hlt
lock
mov
dec
mov
test
xchg
mov
sahf
sti
aaa
mov
cld
mov
sbb
fwait
insl
inc
ja
hlt
cld
std
lea
cmp
test
jle
pop
mov
outsl
push
jp
push
cmp
stc
push
lahf
imul
push
pop
bound
js
dec
xchg
cmc
pop
mov
scas
cmpsb
cmpsl
pushf
movsb
imul
in
xchg
scas
xchg
pop
dec
cmp
clc
sub
sbb
jnp
mov
aas
mov
fildll
mov
pop
mov
adc
ds
jmp
pop
nop
mov
inc
cmp
cmpsb
sti
mov
mov
jnp
pop
not
mov
xchg
subl
mov
add
dec
jo
sahf
pop
andb
xchg
push
insl
adc
cmp
inc
ljmp
leave
cld
scas
in
jg
or
inc
push
in
ds
jbe
mov
sbb
pop
mov
cmp
push
pop
stc
addr16
std
inc
in
sbb
adc
test
add
add
mov
cmp
into
pusha
in
fwait
inc
negl
mov
cmp
stos
mov
inc
int
pop
seto
mov
mov
jbe
or
ds
int3
pop
icebp
sbb
fistps
cmpsl
lds
dec
mov
arpl
mov
mov
imul
repnz
je
mov
pop
fnstcw
icebp
xchg
into
mov
mov
orb
out
xlat
pop
or
and
add
mov
xor
push
push
jno
sti
leave
pop
adc
push
jg
shlb
lahf
pushf
movsb
outsl
lret
mov
mov
push
xchg
and
mov
faddl
mov
pop
mov
add
inc
lahf
sbb
ret
cmp
mov
jge
dec
lea
insb
jl
scas
or
mov
andl
cmp
and
xor
rorl
pop
imul
dec
pop
fildl
mov
test
ss
fs
movl
pop
or
rcll
frstor
cld
xor
or
jle
sbb
clc
stc
push
mov
pop
dec
sahf
in
pusha
outsb
push
in
cmpsl
adc
in
je
add
loop
jle
int3
adc
arpl
test
fimull
push
in
negl
shrb
mov
lea
pop
notl
scas
xchg
jg
and
dec
in
out
mov
or
cltd
ja
aas
or
stos
in
sti
jno
xchg
pop
inc
repz
mov
or
pop
inc
loope
fistpl
add
dec
lods
movsb
shlb
jns
notl
xchg
pop
aam
sahf
bound
add
push
call
pop
add
js
pop
out
and
stos
mov
in
xchg
jne
ret
jg
cli
pop
dec
nop
shll
stos
jp
push
xor
in
aad
mov
cld
arpl
je
nop
pushf
ret
repnz
aas
icebp
mov
xor
dec
xchg
cwtl
mov
call
cmp
jl
scas
test
cmp
sbb
movsl
stc
scas
imul
mov
inc
inc
pop
pop
pushf
jmp
jle
push
cmpsb
sub
sub
xchg
sub
sbb
lock
push
xor
mov
rcrl
rclb
jne
sahf
lret
dec
mov
dec
addb
push
fldenv
pop
inc
xchg
mov
gs
mov
scas
mov
and
enter
push
mov
cmp
or
pop
fsubrl
fisttpl
or
fidivrs
pop
shll
fs
inc
cli
dec
jecxz
jle
sub
ja
std
cmpsb
loope
sbb
mov
xor
mov
jl
out
mov
add
ljmp
and
mov
fadd
push
scas
mov
lret
cmp
inc
pop
fwait
test
mull
outsl
sub
xchg
add
cmp
cmc
out
popf
pop
lds
lret
jg
lahf
mov
add
push
or
push
pop
inc
xchg
sbb
cmp
pop
sbb
pop
fistps
insl
sahf
dec
mov
fwait
out
or
mov
mov
xor
add
loopne
test
or
mov
or
out
leave
cmp
in
mov
cmc
mov
mov
mov
filds
inc
fistpl
in
mov
mov
jo
sarb
jle,pt
xor
add
out
mov
mov
mov
aam
mov
clc
aad
and
dec
push
ret
xor
or
loopne
outsl
and
das
in
in
adc
add
sbb
xchg
inc
stos
stos
xchg
pop
outsb
imul
jl
in
inc
jb
fsincos
hlt
mov
xor
push
or
aaa
lahf
jg
inc
mov
ja
push
pop
mov
ds
imul
or
mov
mov
add
scas
pop
sbb
scas
mov
lea
icebp
push
fldcw
xchg
adc
mov
lcall
push
outsl
int
fldcw
inc
sub
inc
or
push
fists
sbb
ljmp
pushf
cs
dec
and
arpl
adc
push
dec
or
sub
pop
lock
and
pop
rclb
add
pop
xchg
cmp
mov
in
inc
scas
fisubl
xor
mov
stc
cmc
adc
push
fnsave
fsubl
lea
xor
mov
push
aas
jecxz
loope
push
or
lock
loopne
push
stc
test
ja
cmpsl
and
xor
or
fbstp
fwait
shrl
or
stc
faddl
imul
mov
mov
fnstenv
sar
pop
pop
shll
aaa
out
rcll
sbb
mov
add
movsl
fs
jge
dec
cmp
jge
pop
pop
inc
add
sbb
mov
dec
es
rcrb
icebp
test
pop
add
mov
pop
cmpsb
mov
jle
mov
pusha
and
mov
leave
paddb
dec
sti
push
sar
mov
pushf
xchg
push
std
es
mov
repz
pop
pop
jl
cli
adc
push
adc
in
sbb
push
fucomp
subl
stc
dec
cwtl
cltd
xchg
ss
pop
xor
jb
add
test
aad
dec
incl
mov
outsl
mov
inc
mov
xor
push
out
test
jp
call
dec
test
pop
loop
int
dec
aam
or
pop
push
das
push
aam
xlat
pop
or
mov
in
xor
and
cmc
mov
cld
pop
pop
js
arpl
cmp
push
mov
sarb
sub
cli
fwait
adc
cmp
rcr
loopne
mov
nop
pusha
cli
push
cmc
fdivrp
cltd
addr16
push
pop
inc
mov
sub
or
or
pop
cmp
fcomi
pop
lcall
popa
clc
andb
lock
aas
xlat
sbb
fcompl
sti
jae
imul
mov
imul
out
dec
cmpsl
lds
mov
icebp
div
data16
int3
push
scas
or
jl
js,pn
sub
in
enter
subl
rclb
and
ret
pop
test
stc
pop
stc
out
repz
push
sbb
movsb
dec
sub
mov
into
and
sbb
test
enter
inc
pusha
iret
xchg
dec
mov
adc
push
arpl
add
xchg
inc
jle
shrl
sub
fcos
cmpb
fmuls
fists
imul
leave
lds
cltd
jge
add
imulb
mov
mov
jle
lcall
push
es
and
pushf
repnz
cmp
in
pop
sti
test
cli
sarl
push
xchg
and
pop
pop
lcall
test
push
pop
jle
fstl
add
mov
dec
lock
and
negl
pop
fwait
sub
xchg
xor
idiv
mov
arpl
divl
leave
dec
fisubs
dec
sub
jae
mov
push
fs
dec
int
test
inc
mov
mov
jno
sub
or
mov
dec
fnstsw
xor
mov
out
jbe
or
mov
addr16
cli
pop
pop
pop
add
ljmp
jp
jecxz
unpcklps
or
pop
push
nop
sbb
int
inc
idivl
jp
cmp
pop
adc
jg
push
scas
xor
and
les
mov
imul
clc
aam
sub
sti
jo
mov
push
fxch
pop
jmp
or
jle
add
loop
mov
add
or
jne
pop
mov
mov
add
push
xor
test
jbe
and
mov
into
sbb
std
or
ja
adc
pop
cmpl
dec
xchg
js
insb
add
addr16
xchg
subb
std
mov
inc
je
mov
enter
jge
gs
arpl
pushw
mov
test
push
xor
inc
push
fldenv
pop
shl
jg
jmp
xadd
add
push
out
pop
imul
lods
adc
test
jle
add
pop
fstpt
fsubs
pop
fisttpll
jbe
sub
cmp
dec
shrl
lea
jmp
stc
jl
mov
or
fwait
dec
lret
lock
xchg
in
inc
cmpsl
les
xor
pop
inc
fistl
cmpl
jnp
orb
call
fsubr
adc
rclb
roll
pop
xchg
xchg
ljmp
out
add
cmpl
fisttpl
mov
jns
cmpsl
pop
outsl
sbb
mov
xor
sbb
cmp
cmpsb
fld
roll
icebp
fists
mov
pop
mov
ljmp
push
mov
sub
inc
lahf
sub
mov
lret
iret
pop
ljmp
mov
push
push
sub
hlt
xchg
or
stos
out
mov
cmp
or
lahf
hlt
cmpb
dec
pop
je
xor
sub
pop
testl
jg
inc
or
aam
cmpsb
push
out
mov
xchg
or
lea
mov
in
cs
icebp
rcll
jl
out
sub
pop
xchg
nop
mov
xchg
xchg
stc
jae
cmc
subb
ja
mov
pop
and
cltd
pop
in
iret
pusha
loope
fucom
pop
push
in
cmc
mov
cli
idivl
or
push
mov
fisttpll
cs
iret
inc
mov
xchg
inc
lahf
rclb
pop
lahf
push
cmp
mov
jecxz
inc
ja
xchg
xor
nop
fiaddl
mov
and
inc
mov
insb
push
fldenv
mov
jns
aad
sahf
jp
es
fnsave
inc
cmp
mov
scas
push
loopne
in
lcall
and
out
addr16
lret
fcmovnbe
cltd
movzbl
mov
or
sahf
lahf
movsb
in
fcomp
lea
jge
fimuls
fldl
mov
jbe
pushf
roll
mov
pop
repz
mov
inc
and
fwait
xchg
rcrl
test
cmpsl
mov
repz
mov
mov
es
pop
mov
out
inc
daa
push
push
jg
add
cmp
rorb
sub
cmp
out
jle
jb
mov
pop
inc
cmc
loop
pop
cld
decb
leave
jecxz
or
add
or
pop
mov
fdiv
adc
push
scas
jp
fcompl
add
cmpsl
xor
cmpb
sbb
call
pusha
xor
out
pop
imulb
mov
jecxz
inc
and
add
shll
mov
push
out
sti
stc
inc
cmp
loop
xchg
push
inc
outsb
fidivrl
pop
outsl
cmp
xchg
mov
sub
add
lret
pop
fstpl
mov
dec
and
mov
fwait
repnz
inc
lea
rolb
mov
and
push
jmp
push
jle
mov
or
sbb
inc
cmp
sbb
cmp
out
mov
aas
in
std
lahf
pop
aad
mov
loope
cmp
add
pand
adcb
bndldx
test
or
adcb
and
scas
ss
inc
stos
cmp
pop
push
xchg
test
lret
jle
xchg
sbbb
mov
cli
mov
adcb
xchg
and
fmul
movsb
pop
pop
xchg
xchg
and
in
popf
lcall
shll
xchg
dec
int3
outsb
pop
das
rcll
dec
mov
mov
pop
stos
xchg
loop
imul
fucomp
insb
jmp
rolb
mov
and
mov
fldenv
fstps
icebp
lret
push
inc
xor
aas
mov
sbb
loope
jb
inc
fldl
pop
pop
insl
out
mov
mov
cmpsb
subb
pop
mov
fs
mov
mov
dec
aad
jo
cmp
aaa
pop
or
enter
inc
fld
cmc
mov
mov
out
rclb
sub
cmc
test
push
sbb
insb
loope
lret
jo
dec
out
adc
nop
jne
jbe
mov
subb
pop
mov
and
jg
jle
int3
jbe
cli
add
sub
out
jg
jg
pop
xchg
out
jge
dec
out
leave
dec
inc
scas
movsl
ds
aaa
cmp
iret
int
xor
out
or
imull
mov
pusha
ljmp
and
dec
adc
flds
rclb
aad
jg
and
dec
add
sub
push
cmp
mov
xor
stos
out
jns
loope
add
rorl
mov
rcrl
cmp
dec
addb
test
ds
inc
negl
or
mov
add
dec
inc
or
cmp
gs
insb
ficompl
jb
adc
mov
jne
idiv
out
mov
movsb
cmc
outsb
pusha
scas
sub
mov
das
jl
pop
xor
mov
clc
mov
popf
repz
dec
negb
mov
pop
jnp
sbb
xor
and
xchg
sti
sub
sub
stos
inc
and
lahf
repz
das
or
jbe
sub
cmpsb
jo
push
or
movsl
sbb
arpl
shlb
sti
and
add
adc
in
or
cmp
sbb
testb
dec
jl
and
outsl
jb
mov
push
mov
pop
roll
test
mov
aam
test
out
test
mov
mov
dec
jp
sbb
sti
mov
mov
mov
sarb
push
pop
stos
jp
pop
cmpsb
mov
arpl
mov
fcoms
mov
mov
mov
js
xor
pop
fwait
scas
fsubrp
add
test
fwait
mov
test
add
sahf
leave
aad
imul
in
adc
rcll
push
lods
in
inc
imul
mov
mov
call
clc
int
mov
xchg
dec
mov
out
pop
mov
stos
jb
aad
aas
movsb
adc
jle
jecxz
in
adc
loopne
dec
xlat
arpl
jle
fyl2x
fidivl
sbb
fistpl
decb
call
stos
roll
push
sti
inc
insl
mov
test
fs
lahf
flds
insl
mov
sahf
jmp
mov
les
pop
rcrb
sbbb
int
fbstp
iret
add
inc
xchg
arpl
add
nop
mov
jne
jmp
pop
cltd
fwait
or
fdivrs
or
out
scas
in
and
loop
pop
push
repnz
sbb
outsb
movsl
out
pop
insb
loop
aas
stc
cmp
inc
add
xchg
loope
hlt
push
mov
imul
lahf
push
lret
xor
sti
mov
add
add
jno
mov
insl
ficompl
rcrl
fsubrl
imulb
shl
adc
mov
and
popa
cmp
and
adcl
int3
scas
jg
cmp
gs
push
sbb
xor
push
mov
nop
loop
adc
jle
arpl
mov
mov
andl
dec
or
lock
mov
pop
or
jp
insb
nop
fidivrs
mov
test
dec
mov
xchg
cmp
sbb
nop
call
push
cs
shl
lret
sub
dec
or
fistl
pop
mov
stc
mov
test
shll
orl
mov
pop
lea
mov
scas
in
cltd
mov
xor
rorb
xchg
add
rclb
stc
sub
out
movl
out
xor
dec
mov
cmc
mov
aas
int3
and
dec
sbb
lea
movsl
out
add
lods
push
in
xchg
adc
testb
lea
dec
stos
mov
rorb
jbe
inc
jnp
push
adc
push
pop
push
xchg
fidivl
add
pop
test
mov
dec
call
inc
pop
aad
sar
invd
stos
dec
mov
cmp
fstl
pop
stc
out
pop
mov
mov
xchg
lcall
insl
das
dec
orl
sbb
xchg
mov
mov
dec
nop
hlt
pop
outsb
inc
scas
stos
outsb
jns
xor
jg,pn
xor
rcl
inc
cwtl
mov
mov
xchg
adc
push
in
mov
in
andb
addr16
in
adc
nop
mov
ds
insb
fistpl
lcall
inc
mov
xorl
ret
loopne
test
push
sar
pop
std
fcmovu
in
out
das
imul
ja
cmp
mov
push
jno
out
in
sub
cmp
hlt
mov
jp
pop
lea
adc
movsb
fdivp
mov
or
xchg
inc
mov
dec
jecxz
sub
insl
insb
mov
clc
sbb
out
pop
aaa
cld
inc
dec
or
and
mov
addl
nop
add
mov
mov
sub
dec
sbb
cmpsl
jle
adc
outsl
sbb
mov
movb
xchg
loopne
imul
adc
cs
mov
cmpsl
cmp
lods
push
js
mov
gs
pop
jg
add
divb
and
fdivs
into
jg
cmpsb
insb
out
push
mov
cmp
push
pop
push
les
imul
or
xchg
inc
outsb
sti
fstpl
mov
imul
push
jge
jno
xchg
adc
rcrb
rolb
sti
fistps
loop
jbe
pop
lret
pop
jl
xchg
pop
roll
ret
ds
mov
cld
cmpsl
add
sbb
cmp
lods
jmp
pop
sar
mov
xor
mov
test
sub
cli
jne
lret
sbb
aam
pop
jmp
mov
jnp
arpl
jmp
insl
pop
mov
dec
jl
lods
xchg
clc
fisttpll
test
idivl
cmp
imul
or
inc
push
sbb
mov
fsubrl
jb
adc
cmp
mov
mov
and
lds
mov
xor
sbb
in
add
or
cli
pop
xchg
or
iret
adc
xor
daa
xchg
inc
pop
xchg
insl
push
jp
stos
inc
add
and
not
pop
scas
add
lock
jle
pop
mov
pop
fcomps
cmc
mov
sub
in
int
pop
pop
mov
ss
xchg
outsl
mov
sub
pop
pop
pop
pop
ret
xor
adc
sub
adc
xchg
out
mov
xchg
mov
jmp
push
inc
je
ror
imul
les
dec
outsl
fldl
rcrl
jno
test
lahf
hlt
in
xchg
fldt
sub
ja
fcomip
add
dec
mov
jo
loop
sub
in
push
jne
das
test
sahf
or
push
loope
jae
xor
dec
cli
iret
jle
jbe
pop
cltd
imul
pop
push
inc
mov
xchg
adc
mov
rcrl
sub
filds
push
mov
popa
dec
xchg
and
rsm
inc
jbe
jg
jle
pusha
sub
or
mov
out
dec
jbe
and
scas
fldl
inc
lahf
cmp
mov
movsl
inc
cmp
dec
mov
int3
pop
mov
icebp
clc
inc
je
mov
cmpsb
cwtl
cmp
mov
pop
roll
push
in
inc
mov
push
fisubs
scas
test
xlat
imul
or
test
pop
popa
mov
jle
mov
aaa
xor
invd
mov
xchg
cltd
pop
adc
stos
in
scas
jmp
repz
ljmp
sub
xor
cmpsb
add
arpl
cmc
out
gs
add
cmp
mov
add
es
pop
das
sbb
out
outsl
sbb
fcmove
adc
imul
jmp
pop
pop
mov
dec
js
mov
pop
sub
aam
mov
scas
adc
insl
push
jnp
andb
lock
adc
xchg
loope
pushf
cmpsl
out
repz
mov
xor
imul
imul
lcall
cmp
mov
icebp
or
jno
lea
adc
jno
dec
mov
dec
mov
pop
add
cmp
mov
fldt
push
mov
sbb
dec
and
fsubp
lea
jne
int
shlb
repnz
outsl
cmp
mov
push
pop
cmp
adc
add
cli
jecxz
push
popf
lea
dec
scas
mov
xchg
jae
test
fstpl
fadds
out
inc
pop
cmc
ljmp
mov
cmpsl
clc
fsub
jae
popf
jg
imull
pop
dec
mov
push
cld
jmp
mov
das
fistps
jge
out
cmc
aad
push
int3
popf
je
jae
add
add
mov
pop
nop
lea
lea
loope
push
mov
mov
adcl
mov
andl
test
mov
outsb
sarl
pop
imull
ret
std
adc
adc
xchg
cmpsl
jno
aas
inc
lfs
test
in
push
mov
jle
fistps
lds
addb
or
fisttpl
fsubrs
or
sub
inc
roll
xlat
cmc
cmp
and
pop
or
in
inc
push
adc
dec
fisttpll
lods
cwtl
mov
pop
pop
jno
mov
cli
mov
cmpsb
push
fdivrl
pop
out
xor
adc
lock
pop
cmpsl
sarl
int
pop
push
cmc
pop
popa
pop
xchg
mov
fwait
mov
jns
dec
ret
enter
mov
in
mov
shrl
cmp
das
pop
loopne
cmp
or
mov
lea
cli
pop
jecxz
pop
xor
xchg
cmpsl
adc
enter
sub
mov
inc
in
push
into
sti
enter
pop
or
add
cmp
or
mov
pop
iret
mov
pop
push
sub
cmp
stc
into
out
fldenv
call
repnz
pop
testl
addr16
push
dec
mov
cld
rclb
inc
cmp
xchg
pop
orb
push
cmpsb
cmp
cli
jae
pop
fisubrs
shld
ds
add
fldl
pop
lock
aaa
test
movsl
or
dec
jg
xchg
cmp
test
and
les
in
rcrl
mov
imul
in
sub
pop
outsl
out
shr
mov
adc
out
je
and
xor
push
aas
dec
push
lods
sbb
sub
sub
shll
sub
jnp
mov
add
aad
sbb
sub
out
mov
xor
ss
cltd
mov
pop
adc
mov
cmpb
pop
xlat
pop
test
cmpsb
add
mov
xchg
jle
pop
stos
jo
xchg
repz
push
sahf
lods
or
andb
pop
fcomi
mov
push
sarl
jbe
mov
bound
xor
mov
daa
xchg
notb
loop
inc
ja
imul
cmpsl
mov
test
mov
xor
lahf
in
and
adc
mov
mov
and
cmp
mov
ljmp
inc
ja
enter
cmc
pop
imul
mov
lea
cld
cmpsl
push
adc
movsl
lret
and
lcall
cmp
pop
mov
add
ret
dec
es
mov
adc
or
mov
fwait
mov
or
jp
mov
and
push
lret
popf
pop
pop
mov
fwait
jbe
xor
lahf
loop
jp
or
pop
and
andl
lea
jnp
add
mov
iret
pop
cmp
adc
aas
fmuls
mov
out
ljmp
xchg
test
mov
mov
inc
out
test
inc
xchg
mov
sub
ja
std
pop
stc
fistl
and
fstpt
jg
sahf
push
test
lods
arpl
loopne
jne
dec
stos
or
mov
or
mov
icebp
fistpl
jmp
or
pop
rcrl
movsl
xor
jns
sbb
inc
jg
fisubl
adc
outsb
ljmp
jno
es
stc
movsl
shll
out
mov
mov
cli
jg
pop
daa
inc
sbb
insl
or
xor
dec
xchg
adc
jl
jg
je
xlat
mov
push
stos
dec
mov
add
insb
fldcw
mov
xor
pusha
xchg
out
and
mov
jns
fcompl
mov
cmpsl
mov
lods
ret
lds
sbb
fst
mov
mov
jae
fwait
je
sub
cli
pop
std
inc
xchg
mov
xor
add
test
mov
mov
out
and
jne
cmpsb
cld
outsl
lret
rorb
sbb
fdivl
idivl
mov
pop
jg
std
jmp
outsl
test
xchg
xor
pop
in
and
jno
sub
adc
jns
jmp
adc
arpl
mov
out
in
jge
lret
lock
and
dec
mov
and
ja
pop
orl
mov
loop
jg
xchg
inc
jbe
movsb
jno
fimull
std
stc
les
popa
push
push
or
cmp
pop
ficoml
sub
inc
mov
sub
fisttpll
and
xor
in
adc
push
pop
dec
gs
sahf
sbb
imul
xchg
ficompl
add
ret
in
scas
add
ret
adc
cmp
pop
rolb
jb
pop
add
inc
mov
fildl
popf
xor
insb
push
lahf
inc
sub
jl
jne
add
mov
loop
jae
or
stc
inc
mov
outsb
and
mul
fidivrl
inc
test
mov
addl
bound
xchg
sbb
mov
pop
loopne
ja
pop
stos
lahf
pop
push
push
add
ret
and
jg
fnsave
mov
inc
ret
mov
lret
mov
and
imul
cmpsl
psraw
and
mov
out
mov
aas
sbb
xor
sbb
imul
add
mov
mov
ss
sarb
push
stc
xchg
xchg
andl
cmp
mov
adc
rorl
mov
and
inc
fisubrl
jle
mov
lret
mov
lods
push
fmuls
push
pusha
adc
aaa
in
sub
imul
jo
sub
xchg
cmp
ds
js
inc
stos
xchg
adc
ret
incb
in
lahf
pop
pusha
and
cmp
ror
movsb
add
mov
push
push
hlt
lock
and
fistps
test
xor
dec
jb
adc
out
inc
shll
or
mov
sub
inc
xchg
jbe
mov
call
cmpl
rcl
fistpl
push
and
add
jg
es
stos
and
insb
jle
sub
call
mov
push
sub
mov
cmp
mov
pop
cmp
and
push
jge
gs
xchg
cmc
out
movsb
fidivrl
dec
iret
mov
clc
mov
pushf
stos
xchg
add
jmp
jmp
je
mov
sub
push
cmc
addr16
sbb
jg
jno
stc
push
adc
int
adcb
pusha
inc
jne
rorb
cltd
adc
push
dec
in
insl
in
cmc
stc
test
sti
pop
test
movhps
in
sub
shlb
add
fucomip
pop
aaa
imul
or
push
test
xchg
adc
data16
sbb
out
cmc
and
div
int
jecxz
repnz
pop
data16
fsts
adc
mov
popf
dec
stc
mov
jne
push
mov
pop
aam
adc
repnz
outsb
sub
lret
dec
push
cli
fidivl
and
loop
xor
ret
lret
scas
mov
negb
push
jge
adc
sti
push
add
cwtl
sub
subb
popf
loope
sbb
cmc
std
cltd
sbb
cmp
outsl
push
adc
push
leave
add
sub
sbb
xchg
pushf
cmp
test
lods
cmp
add
addr16
daa
pop
push
pop
sbb
test
outsl
addr16
dec
pop
pop
jge
mov
cli
orb
mov
push
inc
int3
cmp
les
inc
or
xor
jp
or
pop
rolb
push
pop
cmc
pop
addb
data16
mov
fldcw
add
pop
inc
fwait
sbb
loop
add
mov
pop
imul
sub
pushf
in
sarl
lcall
fmul
insl
mov
jo
xchg
hlt
shl
mov
cli
xchg
mov
push
das
mov
xor
scas
push
mov
icebp
popf
repz
test
or
aaa
mov
jne
mov
cwtl
jge
fsubrp
in
xchg
push
hlt
inc
sti
and
cltd
sub
sbb
push
ss
lods
rcl
cmp
repnz
pop
pop
push
scas
sub
js
and
daa
jl
cmpsl
cmp
dec
xor
pop
stos
pop
and
mov
inc
rcll
rol
in
arpl
movsb
cmc
push
xchg
sbbl
pop
dec
div
test
sbb
aas
mov
icebp
rolb
jge
jle
mov
addr16
pop
fisttps
fisubrs
push
stc
mov
subl
jg
out
pusha
pop
outsl
stc
jmp
xor
add
add
xor
aam
or
mov
pop
and
xchg
mov
sbb
aad
dec
pop
pop
test
mov
mov
test
stos
dec
mov
stos
loop
push
sub
inc
rolb
fiaddl
std
lcall
insb
or
pop
rcrl
mov
shl
push
testl
pop
sub
xchg
or
popa
movsb
jecxz
mov
mov
inc
fcomps
cmp
pop
fidivrs
in
in
repz
add
cmpsb
in
subb
shlb
xchg
data16
jle
push
sub
frstor
xchg
rorl
pop
notb
ss
push
je
scas
pop
or
in
dec
cmp
fcmovnb
xchg
lahf
scas
je
pop
lret
push
mov
adc
test
or
mov
jne
mov
test
cs
pop
adc
xchg
xor
xor
pop
cmp
add
jle
pop
sub
icebp
andl
jne
out
or
outsl
lods
lock
or
and
mov
idivl
xchg
push
and
xchg
xchg
icebp
outsl
adc
cmpb
mov
sbbb
cmpsb
imul
adc
repnz
imul
pop
mov
mov
mov
fucom
cmp
pop
clc
sbb
push
lret
loop
pop
jle
inc
xor
cmp
nop
jmp
test
or
pop
dec
subb
pop
jbe
insb
es
cmp
push
int3
pop
mov
cmc
ljmp
ret
adc
test
and
int3
cmp
cli
fwait
jnp
popa
add
outsb
pop
iret
or
pop
test
cmp
mov
jne
stos
adc
ret
fisttpll
test
dec
or
stos
ljmp
fldpi
pop
cmpsb
loop
arpl
rol
xor
ljmp
or
mov
and
pushl
test
xlat
mov
hlt
fwait
mov
mov
add
stos
mov
fstpl
cmp
adc
insl
les
xchg
pop
leave
pop
xchg
pop
and
jl
mov
subb
sbb
dec
or
mov
adc
and
cli
test
push
cmp
add
outsl
push
mov
push
mov
cmpsl
out
cmp
scas
iret
sub
mov
add
xchg
lahf
and
add
jb
fists
or
cmp
sub
movsb
inc
inc
arpl
xor
jg
sub
pop
clc
pop
push
rcl
imul
jb
jne
sahf
dec
inc
sub
sbb
mov
or
inc
mov
imul
pusha
iret
pop
inc
gs
cmpb
into
xchg
push
mov
movb
add
cmpsb
aaa
dec
inc
ss
inc
or
inc
mov
adc
cmp
push
ja
negl
cltd
mov
or
xchg
xor
cmp
pop
inc
mov
xchg
sub
int
add
jp,pn
pusha
jp
cmpsb
aaa
xor
dec
dec
dec
dec
sarb
jg
repnz
pushf
push
aas
pop
imul
cmpsl
nop
fdivrl
or
mov
out
mov
and
pop
dec
cmpl
mov
dec
inc
imul
or
cmpsl
outsl
adc
insb
pop
je
push
ljmp
lods
pop
outsl
les
mov
andb
arpl
movsb
pop
sub
leave
mov
dec
cld
repnz
iret
stc
dec
cmpb
pop
lahf
inc
outsl
jnp
insb
outsl
iret
lea
pop
test
fisttpll
fdivr
push
outsb
sahf
or
mov
popf
jle
into
roll
hlt
out
test
mov
mov
clc
xorb
sti
push
add
leave
test
pop
cmp
test
mov
imul
push
imul
leave
pop
rol
cmpsl
mov
mov
fwait
jecxz
sbb
fmul
loop
mov
cmpsl
pusha
notl
stos
xchg
jmp
and
inc
sub
outsb
loope
mov
cmc
jae
in
scas
stc
movsb
test
cmp
popf
sub
dec
fstpt
imul
scas
jne
add
cwtl
es
xor
ret
mov
mov
mov
in
inc
or
scas
dec
es
std
orb
mov
aaa
or
jno
sub
arpl
mov
sbb
sbb
xor
dec
insl
pop
scas
in
push
sub
jno
xor
mov
movsl
loopne
dec
mov
std
pop
pop
sub
dec
adc
dec
fcomps
nop
test
cmp
xor
mov
scas
cwtl
xor
and
stos
lcall
lock
shrl
inc
imulb
add
xchg
sbb
jl
pop
mov
es
pop
jae
mov
aam
mov
xchg
mov
popa
cmp
std
out
insl
pop
xchg
pop
call
add
mov
int
pop
adc
and
in
rcr
mov
jmp
xchg
cwtl
jecxz
add
mov
sbb
sub
push
mov
into
fcomi
sbb
repz
and
cmc
push
push
add
call
lea
pop
les
lods
es
test
dec
push
or
or
dec
push
sub
push
and
xchg
sub
adc
pop
lods
insl
jne
sahf
int3
mov
xchg
push
pop
idivl
ja
or
scas
xchg
jbe
je
jecxz
sahf
xchg
in
mov
into
xor
fwait
imul
cmpsb
xchg
pop
lods
fsubrp
sbb
das
inc
inc
jg
pop
addr16
std
pop
push
lret
inc
mov
fs
addb
mov
cltd
mov
add
je
call
xor
enter
add
das
lods
stos
mov
movsb
push
mov
fisttpll
fistps
jbe
fcoml
pop
loope
jne
loope
std
lods
fsubp
jnp
ret
aad
pop
jp
mov
inc
nop
pop
out
inc
outsl
mov
fsubrs
inc
pop
test
addl
aaa
popa
jle
filds
cwtl
sbb
pop
xlat
mov
loope
aaa
push
lea
lcall
pop
out
pop
imul
int3
cmp
adc
push
or
push
pop
lea
jg
mov
mul
cmc
sub
sub
stos
jmp
pop
inc
cmpsb
shrb
fwait
pop
outsb
sahf
adc
into
rorb
fsts
std
scas
jo
fistl
pusha
pop
aam
fsubr
sbb
rcl
je
sub
xor
aaa
or
scas
jge
xchg
aam
rclb
inc
xor
pop
pop
dec
scas
insl
jp
jge
pop
mov
sahf
push
sub
bnd
or
dec
std
mov
sbb
fisttpll
or
out
xlat
pop
dec
inc
dec
xchg
mov
pop
mov
sbb
jl
or
fcmovu
cmp
into
mov
out
xor
fidivl
call
repnz
loope
mov
icebp
iret
pop
ret
pop
inc
push
pop
mov
in
inc
shrl
jp
lcall
bound
and
imul
dec
push
or
add
mov
inc
adcb
mov
cltd
or
jg
adc
lods
std
ljmp
pushf
stos
pop
mov
test
fsubs
mov
pop
mov
or
or
push
xchg
xchg
xlat
lea
mov
inc
fsubs
xor
icebp
ret
ret
dec
pushf
xchg
decb
mov
adc
inc
sahf
inc
push
fldcw
adc
inc
mov
out
stc
je
lahf
lea
mov
fcompl
jecxz
push
fxch
pop
xor
dec
mov
cmc
lcall
lods
dec
push
movl
fcmovb
push
fnstcw
mov
lock
jnp
in
sbb
or
mov
jnp
dec
pop
cmpsl
add
lret
test
and
xchg
movsb
mov
jl
arpl
and
lret
iret
or
adc
imul
inc
add
andb
lret
pop
insb
dec
movsl
jle
stos
dec
mov
rolb
test
add
aam
mov
stc
loope
dec
push
das
sbb
test
push
sub
fstps
data16
faddl
out
xor
scas
pop
push
xchg
and
mov
fldt
ret
rorb
loope
add
pop
jp
jno
jecxz
lret
adc
mov
pop
pop
jl
mov
cwtl
cmp
mov
cmp
mov
dec
mov
jae
mov
movsl
sub
fisubrs
fistpl
mov
inc
mov
dec
push
ljmp
std
jmp
icebp
stos
mov
cld
pop
je
adc
pushf
pop
sbbl
cmp
xor
icebp
pop
out
sub
add
mov
ljmp
mov
dec
stos
lods
mov
lods
arpl
pop
mov
mov
pusha
push
mov
inc
lea
inc
mov
adc
jmp
call
leave
xchg
aas
mov
in
stos
adc
lea
mov
inc
insb
sub
flds
dec
icebp
out
dec
and
xchg
or
mov
mov
dec
or
into
mov
dec
icebp
add
test
pop
cli
xor
mov
int
dec
jg
loop
aad
mov
flds
test
adc
fistpl
jbe
aas
and
flds
mov
arpl
xlat
push
pop
lds
imul
in
mov
mov
cltd
adc
imul
ds
fisttpl
mov
mov
mov
adc
mov
stos
pop
or
lea
repnz
pop
jmp
push
and
sti
int
mov
adc
in
shrb
pop
pop
mov
fnstenv
les
lea
lahf
add
pop
fnstsw
pop
hlt
sbb
inc
and
leave
je
lahf
cmp
stc
push
int3
sbb
adc
pop
xchg
leave
cltd
sbb
push
cmp
adc
iret
adcl
movsl
arpl
pop
mov
cmp
push
imul
sub
mov
lods
add
cmpsb
xor
add
lcall
scas
cmp
lods
jns
pushf
enter
mov
stc
std
out
xchg
movsl
push
sti
inc
push
xchg
pop
pop
jecxz
outsl
pop
fildl
or
mov
loop
out
jb
xchg
cmpsl
imul
jp
aas
adc
and
lahf
adc
sbb
or
mov
rcrl
das
adc
push
jmp
xchg
add
pop
clc
stc
lahf
stc
loope
sub
mov
cltd
sub
sbb
fchs
scas
bound
mov
or
inc
cld
bound
add
out
out
or
jmp
sub
test
insb
lea
lea
sbb
imul
sbb
enter
fldl
mov
cmp
call
dec
xchg
mov
or
sub
jle
pop
xor
mov
pop
mov
loope
sbb
mov
or
jne
shll
xchg
mov
pop
mov
enter
mov
cltd
mov
test
jp
push
outsl
ss
cli
dec
lods
xchg
ret
outsb
fstcw
je
movsb
aas
inc
mov
push
push
ret
pop
and
out
fcoml
rcrl
mov
jae
es
rcrb
push
jle
mov
rol
daa
xor
pop
movsl
rcrb
mov
push
negl
mov
push
cmp
test
xchg
mov
cmp
cmp
mov
popa
mov
sahf
inc
mov
test
popa
das
xchg
ficoms
enter
ljmp
mov
mov
lcall
out
cltd
jno
jmp
mov
arpl
jne
addb
ja
mov
adc
xor
xchg
or
fs
xor
mov
pop
test
hlt
mov
cwtl
pop
pop
mov
cltd
movsb
xchg
mov
mov
imul
or
rorb
into
mov
in
vxorps
xor
in
fldt
mov
mov
fcom
out
cld
push
add
aaa
xchg
aas
mov
stos
ret
fistps
jecxz
pop
pusha
sub
out
xchg
pop
aad
or
scas
cld
adc
data16
sahf
in
inc
xor
pop
lcall
push
fldt
lea
push
pop
cmc
push
push
mov
sbbb
pop
inc
add
std
bound
push
arpl
pop
add
test
call
lcall
mov
imul
cmpsb
dec
rclb
pop
ret
cmp
fistl
je
push
or
xchg
fstpl
pop
cs
jmp
out
fucomip
push
pop
pushf
sbb
cmp
push
dec
mov
clc
push
push
in
sub
adc
pop
pop
movsl
mov
mov
jmp
loope
pusha
test
add
pop
push
sbb
inc
xor
repz
mov
les
mov
ljmp
push
inc
inc
and
sub
in
mov
das
imul
mov
in
addr16
pop
push
sbb
sbb
sub
sahf
add
stc
js
push
shl
or
bound
lds
and
push
xchg
mov
loopne
xor
dec
cmp
pop
faddl
cmp
xchg
pop
sbb
jge
ja
inc
xor
or
imul
jnp
and
pop
fnstsw
das
push
cmp
sub
loopne
test
inc
mov
adc
inc
ja
mov
pop
sub
ss
out
or
sbb
sub
push
xor
aas
cli
insl
inc
arpl
fdivrs
xchg
js
call
mov
jbe
jne
push
sub
loope
mov
xor
or
push
push
das
outsb
mov
out
test
add
lahf
add
jns
add
pop
mov
es
mov
jae
push
insl
jnp
mov
scas
add
das
popa
and
jle
std
mov
adc
stos
pop
adc
pop
out
pop
dec
leave
insb
dec
adc
fnsetpm(287
mov
cli
lahf
pop
cwtl
dec
outsb
test
out
out
sub
push
xor
xchg
jge
rcr
mov
adc
stc
aad
sub
add
shll
mov
std
or
jmp
lods
mov
xchg
mov
arpl
outsb
push
add
mov
enter
sub
lahf
cmpsb
inc
adc
mov
out
int3
addl
sahf
pop
push
stos
orb
adc
scas
shll
fidivl
sub
outsb
mov
pop
fmuls
pop
ret
push
push
sub
je
xchg
rorl
mov
out
push
sbb
sahf
mov
mov
pop
test
and
imul
sub
mov
or
fisttpl
lahf
fdivs
pop
in
lds
jecxz
push
and
scas
mov
jbe
arpl
movsb
or
fldenv
mov
fwait
lods
fisubrs
and
and
jns
lea
push
pop
stc
les
adc
rcrb
dec
sub
inc
push
pop
lret
mov
fs
fbstp
jp
mov
adc
inc
divl
adc
arpl
add
not
aas
mov
lds
scas
sbb
cld
mov
pop
sub
fistps
mov
loop
cmp
push
mov
push
pop
lds
mov
inc
and
mov
pop
adc
cmp
int
xchg
dec
sub
dec
sbb
mov
test
out
cmp
fcompl
mov
dec
fldcw
cwtl
mov
imul
aas
mov
xchg
sub
and
pop
scas
cmpsl
mov
xor
adc
ffreep
aad
movsl
hlt
sti
pop
mov
leave
rcrl
cmp
mov
paddb
fcom
jle
push
cs
fstps
fisttps
jno
and
hlt
stos
adc
cmpsl
jg
dec
mov
aaa
add
sbbb
and
or
or
int3
mov
in
and
add
insb
out
pop
adc
in
jo
xchg
adc
mov
shlb
pop
mov
or
push
mov
adc
push
int
scas
shl
incb
jns
stos
cmpsb
mov
js
jbe
decl
inc
std
inc
int
mov
rorl
push
inc
mov
push
dec
jg
xchg
or
and
xor
xchg
in
int3
roll
mov
stos
inc
or
test
xor
out
jns
adc
lret
movsl
cli
pop
lahf
lret
cmp
or
dec
dec
aas
imul
dec
adc
lahf
lahf
insb
pop
mov
sub
into
xor
mov
pop
sbb
fisttpll
xchg
lds
mov
xchg
push
std
xor
dec
mov
adc
insb
dec
in
and
dec
inc
movsb
stos
dec
add
adc
add
int3
push
adc
sbb
adc
mov
loop
pop
pop
cltd
jne
and
xchg
call
sub
cs
shl
xor
pop
dec
sbb
cmpsl
or
int
fisttpl
repz
adc
sbb
sub
out
pop
pop
cmp
and
sbb
xor
jle
dec
daa
mov
leave
push
repz
jae
jp
iret
es
je
mov
xchg
xlat
out
mov
xchg
cmc
clc
pop
out
sbb
add
pop
xchg
mov
adc
mov
int
filds
dec
adc
xor
dec
sub
cmpsb
mov
mov
mov
scas
stos
jmp
int3
fdivl
add
lcall
cmp
fcmovnu
mov
stc
xchg
fcomi
insb
sub
push
insl
test
rcrb
popa
mov
movl
mov
adc
push
and
xor
out
pop
outsb
pop
lret
shll
xchg
xor
mov
adc
call
jmp
repnz
sbb
mov
and
cmpsl
dec
push
jmp
inc
inc
dec
ljmp
out
js
add
mov
mov
mov
jne
cmp
neg
or
out
mov
jmp
adcb
pop
xchg
mov
cmc
jno
insl
movb
add
aas
ljmp
repnz
out
jb
mov
lock
divl
sbb
lret
pop
sbb
ja
es
sbb
setae
icebp
aaa
pop
push
dec
lret
aas
dec
rcll
sahf
mov
pop
and
inc
lea
pop
shlb
adc
cmp
jp
pop
xor
aaa
push
push
cmpsl
mov
in
dec
sbb
fmulp
xor
pop
push
mov
std
jge
test
popf
jb
cmp
inc
roll
divl
xchg
inc
aas
clc
sub
dec
and
and
pop
xchg
xor
int
jo
push
ja
mov
mov
fnsave
call
pop
jle
call
call
push
imul
mov
loopne
xchg
xor
fsubl
jl
cmp
inc
out
in
fcoms
cmp
push
and
cli
push
in
pop
jmp
fnstsw
fwait
mov
fildl
add
and
out
sarb
add
adc
pop
imul
adc
lret
pop
daa
dec
ljmp
mov
xor
mov
mov
add
fdivp
pop
test
sbb
pop
aaa
stos
xchg
repz
stos
pop
pop
mov
fcmovne
popa
inc
imul
mov
inc
mov
lock
mov
sar
sub
sahf
inc
leave
test
mov
or
mov
fists
mov
adc
push
aas
stos
out
arpl
dec
test
pop
mov
sbb
jno
dec
mov
loop
arpl
loop
pop
inc
aam
jge
pop
xchg
adc
in
test
cmp
shrb
pop
jnp
push
xor
out
loopne
or
aad
mov
jmp
push
mov
mov
incl
pop
mov
mov
inc
lea
mov
push
jns
pop
mov
mov
negb
fmuls
nop
in
push
fldt
sub
in
push
outsl
outsb
xor
jb
lea
int3
rolb
dec
inc
cmpsl
je
xchg
inc
lahf
jno
or
push
push
sbb
mov
dec
push
popa
orb
pop
mov
popf
sbb
mov
mov
pop
pop
fmuls
jge
or
mov
mov
test
ret
add
pop
xlat
jne
mov
mov
dec
in
sbb
xor
lods
ret
xchg
int3
sbb
cmpsb
sbb
push
fnstenv
xchg
loop
push
mov
data16
bound
push
out
pop
rol
add
sbb
mov
push
mov
mov
and
xchg
xor
fldt
pop
push
jg
xchg
data16
pop
in
loopne
inc
jecxz
dec
inc
stos
xchg
ret
mov
das
sbb
repnz
sbb
popa
adc
outsb
mov
out
rorl
fisttpl
fsubrs
inc
leave
cli
or
into
adc
mov
xchg
adc
ljmp
xchg
sub
decb
notl
mov
pushf
push
mov
out
fadd
xchg
fisttpl
xor
sti
mov
pop
popf
ret
xchg
into
xlat
mov
fwait
testb
rcrb
or
cmp
ljmp
cld
pusha
mov
pop
cmpsb
xor
push
jl
arpl
sbb
test
cwtl
cwtl
mov
sbb
shll
iret
stos
rcll
pop
lods
add
movsb
or
mov
arpl
mov
insb
mov
mov
push
ljmp
std
loopne
frstor
sub
push
out
cltd
sub
out
stos
inc
int
aas
test
icebp
pop
fbstp
nopl
dec
dec
xchg
std
pop
fld1
sub
pop
mov
add
pop
xchg
jno
sahf
outsl
mov
add
aad
rorb
jne
cltd
sarl
mov
neg
pop
fisttpl
push
inc
rorl
push
lret
mov
fld
pop
xchg
push
cmpsl
divl
mov
rcrl
repz
rcrl
jb
pop
ja
test
mov
pop
and
das
xchg
pop
xorb
aaa
jl
outsb
add
inc
dec
cltd
fstenv
aad
sub
and
pop
or
mov
mov
ja
jl
lea
jp
fnstenv
add
mov
push
and
ret
mov
lock
mov
fdivl
movsb
fldt
cs
mov
sar
pop
popa
jnp
push
sub
push
push
rcrl
test
mov
clc
pop
push
or
mov
mov
jnp
daa
lret
cmpsl
cmp
fldcw
mov
adc
or
clc
mov
pop
mov
out
xchg
mov
mov
cmpsl
arpl
cmp
icebp
gs
cltd
cmpsb
out
rolb
cli
pop
cmp
xchg
scas
sub
jg
mov
std
fisttpl
nop
dec
or
shrl
push
add
imul
sahf
popf
pop
and
xor
dec
push
push
mov
fistl
adc
or
loop
sahf
cli
inc
xchg
cmpsl
shll
outsb
and
addb
bswap
dec
repnz
subl
sahf
scas
mov
shl
mov
or
add
hlt
js
scas
ret
add
cs
and
xor
mov
xchg
ljmp
sar
dec
jmp
lea
int
out
dec
mov
xchg
sbb
dec
inc
or
sub
pop
pop
jp
push
and
inc
pop
pop
shlb
push
cltd
paddsw
cmp
sbbb
ret
pop
clc
push
data16
mov
stos
mov
or
add
stc
test
repz
xor
mov
xor
fistpl
aad
lahf
stos
or
ftst
pop
xor
adc
aas
sub
imul
xchg
pop
or
enter
out
pop
push
jecxz
orl
push
sbb
clc
dec
pop
fiaddl
cmc
rcrl
test
inc
mov
fdivp
lea
andb
or
mov
shl
mov
adc
fdivl
out
dec
dec
jge
sub
xchg
arpl
jle
not
sub
or
mov
push
daa
pop
mov
push
fcoml
pop
push
pop
mov
outsb
jge
fisttpll
movsb
and
fcmovnu
loope
cmpb
mov
mov
mov
push
or
stc
sub
adc
xor
sbb
lcall
dec
mov
cs
les
mov
out
cmpsl
push
and
or
subb
mov
cld
lds
pusha
clc
or
fcompl
xor
sub
cmp
dec
sahf
mov
int
push
movl
idivb
xor
cli
or
adc
inc
ret
loop
mov
bound
ret
in
xor
iret
cmpsb
mov
pop
sub
out
jo
sbb
jne
mov
fidivl
lea
dec
cmpsb
lret
ss
pop
push
pop
mov
rorl
sub
je
lcall
mov
int
push
jno
pop
aaa
push
and
push
jmp
push
xchg
adc
xchg
xchg
es
mul
pop
or
jl
inc
aam
pop
cmp
jbe
or
insl
test
and
jbe
and
mov
xchg
mov
into
or
out
test
inc
test
mov
inc
and
mov
mov
push
xor
pop
sbb
adc
cmpsb
xor
push
xor
mov
out
pop
mov
mov
lock
or
push
lret
std
lods
cmpsb
pop
das
xor
ss
jmp
lds
out
sub
cmp
addb
sub
adc
ds
ror
jle
pop
mov
test
mov
shrb
push
mov
mov
mov
xchg
sbb
mov
cltd
in
xchg
bsr
push
jbe
pusha
and
and
ljmp
jmp
sub
or
jle
cmp
faddl
imul
sbb
aam
clc
loop
and
lds
xchg
push
or
repnz
push
jo
adc
push
testl
lahf
repnz
jno
fcomps
inc
pop
in
fnstcw
sahf
cmp
pop
dec
and
dec
cmp
or
mov
sub
test
mov
sbb
sbb
or
xchg
mov
sub
pop
inc
popf
sbb
mov
xlat
xchg
xor
js
pop
and
push
pop
arpl
mov
pushl
movsb
hlt
lret
outsb
cmp
cmpsb
pop
and
lcall
sarl
and
out
negl
jnp
add
sbb
add
jg
popa
mov
inc
fdivrs
push
sbb
cmc
flds
pusha
and
loop
and
pop
out
sbb
inc
fs
sub
pop
jns
ja
push
push
icebp
shll
or
out
adc
sahf
lods
in
sbb
aas
jg
aaa
popf
rorb
jge
and
mov
pop
mov
jb
jl
mov
or
cmp
mov
movsl
aad
pop
pop
addr16
iret
add
or
pop
sub
push
inc
dec
mov
push
xchg
in
imul
push
jnp
sbb
inc
fmull
xchg
xchg
pop
mov
adc
out
mov
inc
adc
js
push
adc
xchg
mov
push
cs
jo
cmc
std
xor
neg
dec
mov
push
pop
sbb
or
mov
push
pop
cmc
incb
or
movsl
push
add
nop
outsl
int
mov
andl
lods
fwait
add
pop
xor
xor
std
out
incb
mov
idivb
in
mov
test
push
imul
mov
stos
ret
movsl
cmp
xchg
insb
cmpsw
jmp
cmc
pop
or
sub
fs
popf
test
outsb
call
dec
pop
outsl
mov
clc
mov
mov
mov
xchg
mov
add
adc
mov
and
inc
mov
push
cld
push
mov
lods
ret
sti
lret
icebp
enter
or
test
sbb
lds
out
out
pop
cmp
cmp
pop
and
cwtl
ja
push
jo
inc
push
adc
mov
inc
add
pop
xchg
mov
fdivrs
imul
lret
inc
sub
int
icebp
fsubrl
cs
sbb
jns
subl
jg
mov
cmpsl
xlat
mov
jno
imulb
xchg
pop
lock
das
leave
jecxz
test
sbb
push
rolb
fisubl
loopne
xchg
shrb
fldl
es
mov
lahf
inc
adc
pop
and
pop
push
pop
sbb
fcmovu
dec
out
rol
fs
xor
fwait
sahf
es
das
pop
dec
loop
es
push
sub
orb
add
jns
sbb
fnsave
jge
jnp
mov
xchg
test
cmp
mov
out
lods
sbb
mov
and
in
and
test
cmp
mov
mov
scas
scas
outsb
outsl
or
mov
push
lret
push
repnz
pop
jge
jmp
cmp
lret
fildll
stos
dec
xchg
cmp
jecxz
dec
push
stc
fisttpll
sbb
ds
mov
mov
scas
ljmp
sub
decl
pop
pop
xchg
andb
inc
adc
pop
sbb
cmpsb
out
push
idivl
ret
cmp
jmp
iret
mov
out
sub
insb
mov
addr16
cltd
int
mov
pop
sub
imul
test
add
mov
inc
sub
mov
arpl
stos
sbb
rorb
mov
arpl
test
mov
cmp
arpl
or
jg
sbb
out
jg
mov
or
cmp
out
mull
into
pop
jbe
stos
fwait
or
rorb
sub
es
std
lods
xor
sbb
rorb
xchg
mov
xchg
adc
mov
pop
or
and
scas
xchg
vaddps
sbb
mov
xchg
add
cmc
xor
imull
aam
jg
push
cmpsl
cmp
lds
addl
xor
cwtl
dec
jmp
pop
mov
cmp
ret
add
mov
mov
scas
push
cld
mov
mov
clc
mov
pop
jp
jg
outsl
sub
aad
mov
pop
je
jge
ret
mov
loopne
pushf
flds
sub
popf
fisttpll
cmpb
pop
mov
inc
dec
mov
imul
out
sub
mov
std
mov
adc
outsl
les
cmp
cld
xchg
aas
test
out
xchg
adc
movb
lcall
dec
and
jnp
pop
inc
std
fldl
push
dec
jo
pop
mov
jecxz
pop
mov
mov
hlt
test
outsb
mov
add
cmp
xchg
inc
xor
cli
cltd
push
leave
add
cltd
mov
roll
add
arpl
pop
cmp
sbb
mov
inc
fmull
arpl
aaa
daa
ljmp
mov
or
xchg
sbb
shr
mov
push
jne
mov
jmp
mov
mov
jae
test
loopne
negl
mov
dec
inc
mov
fcmovnbe
jecxz
das
inc
fcoml
pop
inc
ds
outsb
test
push
sub
sbb
rcrl
movsl
pop
sbb
incb
dec
fcomip
cmc
and
ljmp
push
or
loope
push
jne
inc
stos
xchg
push
fisttpl
je
jecxz
lahf
shlb
pushf
or
cmp
loope
fistps
adc
gs
and
dec
sub
push
popa
sbb
xor
cwtl
jb
int3
dec
or
jae
mov
mov
sub
cld
inc
push
jp
cmp
cmc
shrb
arpl
aaa
cmp
xchg
jmp
movsb
cmpsl
pop
cmpsb
push
rorb
rcrl
dec
cmpsb
pop
rcrb
add
mov
inc
sbb
daa
movsl
pop
loope
push
push
dec
sub
ret
loope
jnp
cmp
mulb
inc
jae
or
ficomps
or
loope
mov
cmp
or
in
out
hlt
mov
and
or
fcmovnu
into
lds
ss
test
mov
aaa
loope
and
inc
rorl
and
mov
mov
neg
sbb
sbb
mov
jle
leave
inc
iret
add
push
ss
or
insl
std
mov
mov
mov
sbb
loop
ds
xchg
push
jnp
fldt
fildl
xchg
mov
popa
test
pushf
into
test
mov
mov
sub
mov
mov
sub
call
in
pop
popa
sbb
mov
bound
lret
lods
aad
mov
mov
enter
mov
out
jmp
test
cmp
jnp
add
dec
and
mov
test
mov
mov
out
inc
fldt
fstpt
xchg
lods
mov
sub
jne
dec
aaa
jl
pop
leave
xchg
jg
mov
inc
ja
mov
or
push
repnz
cmc
and
test
rcll
pop
mov
out
cmpsl
ja
std
mov
or
inc
movsb
and
jne
fistpl
or
nop
leave
insl
jmp
xor
fucomp
adc
pop
push
adc
movsb
jg
pop
mov
inc
pop
in
sahf
add
fcmovb
fdivrs
xchg
stos
cli
push
into
pop
mov
push
jg
hlt
sbbl
and
sub
jne
dec
pop
xor
add
arpl
mov
cmp
ret
pop
imul
jnp
mov
cmc
jne
pop
das
pop
push
add
and
adc
push
xchg
int3
cmp
aas
in
lds
xchg
jmp
inc
xor
ret
in
in
mov
je
or
and
sub
jecxz
call
inc
les
shlb
push
and
cmp
repnz
pop
cmp
and
inc
mov
xor
mov
xchg
adc
jne
add
dec
stos
sub
adc
in
jmp
mov
push
mov
sbb
fisubl
add
push
sbb
sbb
push
push
push
jae
movsb
ljmp
or
xchg
jmp
inc
pop
jp
nop
xchg
rcrb
test
dec
xor
mov
pop
push
mov
int
xchg
test
jmp
or
es
push
int3
pop
sar
xor
lret
mov
jbe
mov
sahf
jle
or
test
lahf
inc
sub
add
sbb
lahf
rolb
add
ljmp
jge
imul
xor
jno
cmp
mov
dec
jmp
lahf
pop
mov
out
mov
ret
fcomps
mov
or
shrb
jg
push
jns
es
or
mov
push
int3
push
fsubrl
and
leave
loope
jb
or
push
repnz
or
cmc
xchg
test
or
mov
pop
sub
mov
sbb
pusha
adc
addr16
pop
and
or
sub
mov
pop
adc
addr16
jmp
mov
add
sub
lcall
xchg
jg
or
cld
mov
mov
or
pop
imul
or
mov
outsb
fidivrs
mov
dec
stos
sbb
jne
aas
das
or
rep
movsl
push
pop
cmp
arpl
xchg
mov
mov
push
jno
call
cltd
test
out
dec
repnz
mov
mov
pop
pop
jmp
cwtl
sarb
sub
pop
add
fimuls
popl
addr16
xchg
int3
movsb
dec
std
leave
dec
iret
in
jl
xchg
mov
pop
jg
fstpl
lods
mov
add
inc
stos
or
shr
test
cwtl
fcomps
fstps
imul
pop
jae
fnstsw
ffreep
scas
mov
out
mov
test
addl
pop
aam
fstl
push
je
dec
sbb
neg
mov
jmp
jbe
xchg
fs
arpl
xchg
sub
stos
mov
push
dec
std
add
lcall
insb
movsl
lahf
loopne
add
pop
sbb
xor
sti
jb
jecxz
push
xor
fcomp
fisttpll
pmaxub
mov
mov
sbb
push
pop
mov
adc
mov
out
fildl
add
out
daa
push
mov
jl
imul
xchg
pop
dec
cmp
leave
add
cmp
or
fildll
into
mov
mov
cs
std
loope
sar
cltd
std
jbe
adc
ficomps
jb
arpl
in
notl
call
leave
subb
cmp
cmp
into
lds
push
or
fcom
add
into
int
movsl
mov
xchg
sbb
stos
cmp
call
pop
jbe
imul
mov
xchg
push
jno
fisubrs
mov
mov
mov
mov
mov
es
fisttpll
arpl
pusha
sahf
mov
hlt
pop
mov
and
ret
dec
int
xchg
imul
cmpsb
mov
push
jo
inc
mov
stc
int3
gs
dec
jb
fistpl
cmpsb
cmpsb
mov
xchg
mov
fadds
ds
fmulp
into
lods
aam
loop
sbb
and
pop
popa
xor
and
mov
lods
push
dec
lcall
pop
sti
or
lock
sbb
mov
stos
popa
fdivrl
mov
mov
lds
daa
xor
sbb
fcmovbe
ss
xor
cltd
les
call
xchg
mov
mov
jg
or
mov
je
mov
pushf
leave
push
add
iret
pop
fsubl
and
pop
test
pop
dec
repnz
into
out
add
mov
fwait
push
insb
in
mov
inc
jmp
add
pop
push
jg
xlat
mov
xor
shrl
xlat
ja
shlb
out
mov
fisubrl
pop
popa
xchg
hlt
inc
xchg
mov
or
andl
cmp
mov
pushf
jl
pop
jecxz
lock
pop
or
pop
in
mov
cld
fsubs
fisttpll
and
mov
jae
test
scas
leave
aad
cmc
push
lahf
jecxz
pop
sub
out
pop
inc
insl
psubq
rcr
sub
rol
aaa
add
fldcw
lods
push
dec
mov
std
ljmp
fdivs
adc
frstor
cmp
fidivl
ds
mov
pop
pop
out
mov
jb
nop
cli
jecxz
ret
fnstsw
sub
and
xlat
cld
xor
mov
imul
mov
dec
xchg
in
jecxz
fldenv
pop
hlt
sbb
pop
aam
pop
xchg
cmpsb
lar
xchg
mov
mov
adc
pop
mov
pop
mov
std
ret
cmp
mov
mov
stos
inc
icebp
xchg
mov
ds
adc
movsl
ljmp
xor
mov
fucom
xchg
lcall
fidivrl
popf
dec
cmp
aas
xchg
adc
jmp
mov
leave
adc
lahf
out
mov
repnz
repnz
xor
xchg
xor
xchg
mov
in
pop
push
sub
or
mov
sub
cmp
xor
xor
sahf
pop
lds
test
scas
mov
out
leave
imul
pop
addr16
ja
into
and
push
sar
jecxz
mov
fwait
mov
mov
mov
cmp
sbb
in
xor
xchg
jg
and
inc
push
in
shr
repnz
xor
and
xchg
push
fmull
pop
inc
jmp
aaa
inc
mov
out
incb
adc
and
aas
mov
imul
pop
rcl
jb
add
jnp
adc
xchg
fistpl
out
sbb
idivb
sbb
std
fcomps
mov
or
movsl
out
cmpsb
and
mov
adc
scas
mov
iret
int
or
in
cmc
pop
je
add
sbb
dec
jle
mov
adc
rcrb
js
add
fbstp
enter
dec
and
cli
leave
adc
fidivl
sbbb
adc
das
pop
clc
mov
or
add
es
addl
xchg
jg
hlt
popf
stc
das
insb
bound
jo
xchg
rcll
push
enter
jecxz
dec
les
shl
sub
cmp
push
rcl
xor
imul
add
mov
scas
pop
inc
subb
setbe
shll
lds
jne
cmpsb
or
idivl
aaa
neg
shl
or
jle
sahf
pop
loopne
dec
add
adc
insb
call
dec
and
inc
movsb
xor
out
stos
mov
not
fdivrs
and
inc
in
jno
shl
cmc
dec
fiadds
cmpsl
cli
cld
jnp
push
fwait
and
add
out
fbstp
xchg
and
cmc
lods
xchg
pop
jno
jb
or
add
cmp
add
out
inc
push
adc
in
inc
inc
mov
cltd
lock
pop
sub
fstl
fildl
in
and
ja
sbb
xchg
dec
cmpsb
or
insb
mov
int3
fsts
jnp
mov
scas
dec
js
mov
sub
out
push
push
pushf
outsb
test
lods
mov
int
mov
fdivs
mov
leave
movsl
aad
cmpsl
pavgb
outsl
pusha
sbb
xor
add
jns
mov
xchg
rcrb
jo
fs
arpl
sbb
ret
test
mov
mov
movsb
add
dec
fisttpl
lea
addr16
mov
sarl
push
test
and
filds
push
mov
inc
inc
movsl
mov
cld
sarb
js
xor
out
mov
addr16
ffreep
andb
push
xchg
mov
sbb
dec
mov
rolb
pop
mov
dec
stos
call
jmp
inc
les
xchg
rclb
mov
pop
inc
in
xor
xchg
shll
push
fcoms
in
insb
add
jl
xchg
push
jg
cmpsl
inc
cmp
sbb
fadd
pop
inc
and
loop
add
adc
add
test
mov
sbb
sub
sub
cmp
mov
out
pop
nop
mov
add
mov
fistpl
add
sub
jbe
out
pop
push
sub
and
xchg
push
test
or
pop
repz
mov
dec
adc
push
stc
popf
test
testl
je
popf
lods
and
add
mov
lods
loope
movsb
mov
cmp
jle
jnp
sbb
xor
scas
xor
rcr
fdivrs
stc
add
mov
adc
adc
jle
push
call
mov
mov
insl
jns
push
stc
push
popf
js
or
in
idivl
sbb
mov
je
mulb
sti
push
into
jg
and
stos
pop
adc
movsb
movsl
mov
sbb
inc
aaa
or
and
pop
xchg
cli
inc
mov
sti
cld
mov
jg
out
in
inc
imul
ret
mov
lock
bnd
into
jg
dec
jmp
and
into
mov
fstl
inc
fiadds
mov
mov
or
aas
adc
jno
int
pop
cmp
adc
xchg
mov
mov
shlb
fldt
jecxz
fnstsw
bound
mov
fwait
cmp
sbb
out
ja
mov
and
lcall
enter
push
mov
or
mov
lods
sahf
xchg
xchg
or
inc
ret
dec
pop
mov
outsl
call
mov
fdivs
in
ds
lret
sbb
fwait
out
or
pusha
std
xchg
mov
popa
clc
std
mov
nop
xor
repz
mov
inc
in
sbb
daa
jnp
cmp
and
out
xchg
or
sub
das
jle
push
loop
pop
stos
adc
push
add
cmp
push
cmp
push
or
push
or
hlt
pop
sbb
pop
xchg
dec
xchg
pop
std
xchg
or
fstps
movsb
addr16
mov
sub
jl
cmpb
arpl
jo
insb
mov
loop
add
fisubs
fwait
pop
movsl
pop
mov
mov
out
arpl
push
ljmp
dec
std
test
fisubrl
je
rclb
ret
in
stos
adc
pop
in
inc
adc
and
sahf
inc
ja
mov
pop
fmull
mov
sbbb
shl
and
cmc
mov
mov
jle
addl
std
test
adc
psubd
shlb
into
mov
jp
addr16
pop
cmp
or
lods
shlb
insl
ret
into
mov
test
pop
lods
inc
cmc
jbe
test
or
outsl
adc
imul
lods
pop
sbb
iret
faddl
xchg
jno
or
imul
xchg
and
mov
xchg
inc
cmp
mov
popf
sahf
ds
jge
mov
sub
test
scas
push
js
mov
mov
mov
mov
or
insb
mov
cli
jp
xchg
jl
dec
mov
shll
mov
jb
lea
daa
or
push
fistpl
or
jp
ds
cltd
mov
sbbl
lds
insl
movsb
inc
icebp
movsl
jge
xor
call
hlt
cmpsl
pop
inc
in
lret
or
fstps
mov
leave
cmp
stc
mov
jno
mov
push
or
rcrl
test
xchg
and
mov
fldenv
xor
imul
pop
orb
fcmovnb
repz
inc
fbld
jg
daa
gs
jl
dec
mov
out
cli
jle
pop
daa
scas
push
add
xchg
sbb
mov
fistpl
sub
mov
sub
inc
cmp
je
mov
jnp
add
arpl
popf
test
mov
adc
sbb
inc
pop
sub
je
sub
outsb
pop
out
lea
push
jge
adc
out
cmp
xchg
mov
pop
add
repz
pop
mov
push
mov
mov
ja
pop
push
pop
popa
pop
insb
xchg
dec
xor
and
out
pop
and
pop
sbbl
out
and
cmp
fucomp
pop
outsl
xor
mov
sbb
into
out
call
std
pop
adc
inc
sbb
push
iret
xor
iretw
imul
mov
ret
lret
mov
ja
mov
mov
negl
mov
outsb
xor
fstpt
or
in
sbb
rclb
fsubs
add
adc
sub
xchg
mov
or
icebp
cwtl
sub
mov
xor
push
jg
shll
xchg
daa
or
imul
out
jp
ljmp
add
jge
pop
dec
sub
call
das
pop
add
imul
xchg
into
nop
test
jne
dec
aad
or
jb
xchg
mov
out
dec
pop
dec
dec
add
fwait
arpl
outsb
mov
mov
inc
cs
int
mov
cmpsb
jle
inc
test
push
scas
arpl
stos
xchg
loop
dec
lods
sbb
sbb
iret
arpl
push
mov
adc
rorb
decb
lret
neg
pop
notl
and
pop
stc
pop
std
test
push
stos
ja
fwait
pop
jmp
xchg
push
mov
fcoml
rcl
cmpsl
mov
mov
sub
add
outsb
jo
mov
cltd
pop
dec
incb
sbb
push
push
rcr
and
mov
sub
out
mov
or
je
add
adc
out
pop
push
orl
das
mov
push
dec
std
call
das
xchg
add
out
fwait
std
push
imul
sbb
pop
cmp
test
or
fsubr
inc
je
lret
push
hlt
je
into
cmpsl
pop
popa
pop
sub
mov
xor
test
dec
add
inc
pop
adc
mov
adc
mov
lods
les
lods
jl
pop
fnstsw
aaa
aas
fdivl
sub
enter
mov
sti
mov
sar
pop
mov
add
scas
adc
push
rorb
notl
fistpl
push
inc
call
and
sbb
loope
loop
jo
xchg
scas
or
sahf
cmp
jp
in
sub
jg
mov
fwait
outsb
imul
push
das
cmp
add
cld
mov
fwait
sub
fistpl
fwait
add
cld
mov
xor
cwtl
mov
pop
adc
xchg
inc
lods
lock
lahf
pop
sbb
fcoms
adc
lods
mov
adc
mov
fists
mov
mov
and
xchg
xchg
cmpb
adc
mov
push
add
adc
add
cld
sbbl
das
iret
roll
adc
insl
out
sub
loop
fldt
jecxz
cmpsl
std
aad
xor
and
adc
jnp
pop
sub
or
cltd
cwtl
repnz
adc
cmp
mov
pop
dec
fmull
cli
ffreep
or
lahf
or
addr16
or
mov
push
out
jne
sub
in
add
push
jmp
sahf
rcrl
repnz
sbb
ret
test
ja
into
jl
adc
mov
loope
push
push
dec
ss
pop
cmpsl
pop
das
and
sub
dec
xchg
dec
pop
scas
pop
arpl
dec
in
mov
adc
sbbl
pop
xor
sub
pop
xchg
pop
mov
lds
push
in
andb
xchg
clc
add
pop
stos
pop
sbb
rcrb
shr
rcr
dec
sbb
incb
std
inc
outsl
mov
cltd
pop
adc
push
push
in
shll
insb
pop
ja
call
lea
outsl
jbe
lret
or
fwait
add
push
into
mov
aas
inc
mov
outsl
push
push
jne
mov
mov
adc
lea
loope
les
add
xlat
mov
add
add
or
scas
lock
mov
outsb
cmp
mov
mov
mov
pop
into
dec
adc
xor
mov
mov
sbb
dec
sub
sub
pop
adc
lea
loope
pop
cmc
cmpsl
rcrl
mov
push
pop
call
xchg
jne
push
cltd
sub
es
stc
pop
or
sub
js
mov
lds
add
mov
xchg
mov
push
jmp
jle
scas
adc
mov
insl
xor
jle
inc
cmpsb
xchg
dec
jo
jge
out
inc
rorb
sub
mov
lea
jp
cmc
mov
xchg
aam
insl
mov
rolb
out
inc
cmc
add
push
xchg
pop
jbe
xor
iret
pusha
leave
inc
or
scas
lahf
mov
pop
mov
addr16
jge
mov
jp
push
sti
xor
fnstenv
fsubrl
sbb
imul
fidivrl
jbe
jmp
rcr
add
testl
or
jne
pop
add
rcrl
xchg
movsb
mov
pop
fsubs
std
push
mov
cli
rolb
lock
les
push
ffree
outsb
push
mov
mov
out
hlt
pop
aam
mov
xchg
xchg
dec
cmc
out
lock
inc
mov
mov
pop
mov
jae
aas
scas
imul
fwait
lea
test
mov
lock
jne
push
ret
or
enter
out
sub
pop
add
es
mov
mov
adc
mov
ja
sbb
imul
in
jnp
xchg
mov
xor
inc
or
insb
push
fstpl
mov
add
add
ret
mov
adc
fldl
add
out
lods
xor
decb
dec
bound
mov
jns
pop
sbb
jge
insl
xchg
aad
sbb
shlb
les
jle
cld
sbb
xor
jecxz
lods
xchg
mov
xor
fstpt
int
cmp
fcomps
hlt
xor
pop
repnz
push
mov
je
jp
pusha
pop
rcrl
dec
cld
xlat
ret
mov
outsl
jl
xlat
std
clc
lds
pop
sbb
add
hlt
pop
test
jo
in
xchg
xchg
ja
aad
ret
fisttps
out
jge
popf
sub
jmp
loop
sub
push
insb
test
or
xorl
mov
pop
fs
mov
ret
test
add
lahf
out
pushf
and
or
cmp
aas
or
or
adc
sub
or
mov
mov
jae
jp
lcall
jl
pop
dec
cmp
push
jno
sbb
popf
ret
mov
push
cld
push
das
pop
lret
cmpsb
shlb
jmp
in
sub
pop
push
int3
inc
lcall
add
fstps
shlb
xor
fnstsw
push
mov
mov
fildl
not
dec
imul
sub
pop
pop
xor
xor
pop
cld
and
stos
gs
mov
xchg
inc
sub
stos
cmpsl
std
aad
mov
mov
movsb
leave
divl
rcl
cltd
mov
ljmp
shlb
ret
rolb
movsb
sbbb
popa
out
add
inc
sub
pop
lahf
movsl
cli
test
add
data16
fsubrl
xchg
cltd
icebp
pop
movsb
pop
out
xchg
adc
ficoms
or
movb
nop
mov
add
idivl
int
mov
clc
out
pop
inc
aad
int
scas
push
jbe
cmpsl
pop
cmc
sbb
mov
inc
pop
mov
popf
dec
inc
jns
sub
xor
aad
arpl
imul
out
fistps
push
jnp
fimuls
ret
and
shll
cmp
call
mov
iret
add
sti
mov
imul
std
testb
and
fdivrl
jne
inc
cmp
sub
dec
sbb
loop
insb
xor
dec
mov
in
arpl
add
pop
imul
fldt
lods
sub
arpl
mov
pop
scas
cmp
adc
out
cmpsb
pop
orb
push
mov
mov
cld
and
leave
jmp
xor
xchg
sahf
pop
xchg
xor
add
insl
xchg
push
jp
xchg
pop
pop
jno
aas
aas
or
mov
pop
imul
fcomps
dec
mov
push
popa
push
roll
push
inc
sbb
cmpsb
add
xchg
iret
mov
int3
sarb
cmp
adc
outsb
out
arpl
cs
mov
cwtl
sti
jbe
ret
mov
or
mov
dec
inc
out
or
mov
pop
push
scas
addr16
jne
xchg
test
jge
dec
sbb
mov
or
pop
pop
call
ja
into
mov
mov
scas
mov
pop
cmp
ret
push
inc
adc
jge
inc
push
push
jp
cmp
dec
sbb
sbb
cmp
jge
and
fistl
xchg
inc
push
push
and
call
pop
pusha
shrb
cmp
sahf
in
mov
leave
pminsw
jns
mov
out
sbb
add
test
mov
xor
ficoml
xchg
sahf
jle
scas
jnp
fsub
je
sub
pop
std
add
fsubrl
mov
es
mov
mov
dec
or
and
insb
aaa
shl
add
lods
dec
dec
mov
jle
mov
out
mov
xchg
adc
mov
cmpsb
pop
movsl
pop
dec
dec
mov
push
cmp
add
cmp
push
fmulp
jbe
jge
xor
lock
mov
stos
pop
dec
mov
or
push
sbb
xchg
xor
push
orb
arpl
cmpl
inc
mov
leave
mov
scas
pop
lods
xchg
adcb
lcall
push
stos
jge
dec
int3
cmpb
cmpsl
xchg
aaa
cmc
roll
test
out
add
jo
sbb
jle
mov
repz
add
push
int3
push
loopne
std
cmp
cmc
ja
inc
dec
aaa
out
push
test
dec
and
out
mov
arpl
xor
sbb
shrb
clc
ds
sahf
jo
add
add
or
mov
cmpb
and
ljmp
repnz
mov
adc
mov
push
push
add
dec
mov
test
push
nop
pop
sub
adc
mov
mov
fcoml
xor
fstps
fistpl
imul
or
jp
jmp
mov
pop
inc
je
arpl
cmp
repnz
adc
or
rcll
jns
pop
and
adc
xchg
mov
iret
dec
popa
mov
pop
mov
imul
adc
pop
jmp
cmpsb
adc
push
mov
adc
add
sarb
lds
daa
std
dec
pop
and
jno
adc
adc
fists
or
pop
pop
out
pop
ret
cmpsl
and
clc
pop
jecxz
push
mov
aam
in
add
pop
jb
leave
pop
divl
mov
inc
push
cmpsl
inc
aas
jmp
cmp
jp
pop
inc
add
xchg
repz
push
dec
xchg
iret
mov
sbb
sbb
loope
test
out
cmpsb
inc
jg
sbbl
or
lods
clc
pop
cmp
inc
or
adc
repnz
jo
js
cmc
imul
fs
sti
mov
jbe
shrb
ret
call
pop
adc
mov
xchg
add
jl
loop
cmc
stos
xchg
jle
push
pop
xchg
std
pop
ja
orb
aad
or
fiaddl
adc
leave
push
popa
shlb
adc
push
adc
outsl
dec
mov
pop
fldt
jp
ss
clc
jbe
repz
xchg
das
mov
sbb
dec
lret
mov
lods
mov
idivb
sub
repz
jns
sbb
mov
xor
jg
movb
mov
jle
pop
jge
cmp
ljmp
decb
pusha
mov
push
imulb
cltd
fiaddl
xor
into
inc
int
jo
mov
xchg
sub
lods
and
pop
cmpsb
cltd
flds
icebp
mov
mov
iret
mov
fisubs
mov
sbb
cmpsl
lods
ljmp
jg
add
xchg
lret
lret
pop
push
dec
or
jns
lahf
inc
js
and
and
ficoml
inc
xchg
cld
out
ds
mov
cmp
mov
jg
andb
enter
insl
or
out
ret
testl
mov
or
jecxz
pop
stos
mov
sub
and
in
in
or
cs
lods
outsb
xchg
outsl
cmpb
pop
iret
mov
fnsave
mov
std
leave
orl
xchg
pop
adc
dec
add
mov
mov
inc
das
mov
notb
add
mov
pop
insb
cmpsl
fldcw
jle
mov
jmp
imul
pop
subb
fxch
cltd
pop
jns
xor
loope
jne
pop
jmp
lods
cmc
inc
pusha
adc
dec
repz
jle
data16
inc
std
faddp
inc
adc
pop
mov
jns
pop
pop
or
iret
btr
push
fnstsw
sbb
mov
insl
hlt
pop
shrb
sbb
inc
outsb
lret
aas
sub
lret
fildll
outsl
imul
fisubs
sbb
sub
cmpb
and
push
ficoml
mov
lret
bound
pop
jecxz
in
aam
mov
cmp
arpl
sahf
out
fucomip
pop
sti
aam
ret
outsb
push
adc
rcrl
sti
fistps
pop
mov
or
mov
sbb
in
fnsave
cmp
ja
mov
das
mov
xor
dec
mov
ljmp
xchg
testb
push
call
outsb
or
dec
mov
mov
adc
push
outsb
jb
ret
movsb
adc
outsb
dec
and
std
pusha
rcrb
pop
xlat
mov
in
outsb
shr
pop
add
push
lret
xor
push
xchg
aas
fists
xor
mov
scas
stos
mov
js
dec
sub
loope
fisttpll
or
int
loopne
pop
imul
mov
ss
fisubl
iret
add
inc
inc
xchg
pop
mov
enter
in
mov
adc
pop
movsb
mov
outsb
in
fucomi
push
xor
pop
adc
popa
pop
mov
in
adc
sbb
shrl
xor
fnstenv
movsl
or
pop
fistl
arpl
xor
add
xor
push
jmp
inc
xor
iret
pop
int3
pop
adcl
pop
xchg
cmpsl
cmpsl
ficoms
pop
inc
test
cmp
push
lret
push
in
add
fcmovnb
jne
sbbl
push
fldenv
push
mov
push
movsl
jp
mov
sub
push
arpl
cmp
mov
pop
cmp
inc
insl
fcmovb
fisttpl
stc
pop
jge
mov
mov
fistps
mov
pop
push
sub
pop
ret
mov
push
pop
sbb
and
mov
repnz
pushf
cmp
and
cmc
fldcw
fstps
mov
scas
psraw
ret
pop
push
fsubrp
pop
inc
lahf
fisubl
hlt
or
dec
mov
in
pop
addl
movsl
push
push
jle
movsb
shl
add
fildll
inc
mov
stc
leave
add
or
mov
add
adc
scas
push
cld
test
bnd
mov
inc
push
jg
lahf
or
mov
fistpl
or
nop
imul
xchg
scas
jle
ljmp
pop
stc
sub
jae
pop
int
dec
stc
or
sub
test
test
roll
mov
out
and
cmp
insb
mov
fstps
push
je
adc
pop
pop
shlb
in
dec
add
in
and
sbb
xor
cmp
cmpsl
adc
cmp
arpl
int3
std
stos
pop
mov
xchg
inc
sub
mov
push
pop
and
inc
add
push
sbbb
imul
dec
rcll
js
pop
pop
xor
xlat
xchg
rcrb
pop
out
and
mov
mov
mov
cli
imul
fsubrp
pop
adc
leave
adc
data16
pop
push
push
sub
int3
sbb
or
mov
jle
mov
sub
mov
or
and
xchg
test
xor
bound
repz
cmpsb
in
push
repnz
jle
jmp
pop
jo
sbb
mov
xchg
lret
in
jnp
add
negl
pop
jae
add
mov
xchg
dec
mov
movsl
imul
mov
push
push
add
loopne
insl
lcall
loope
lods
mov
lret
mov
sub
std
and
jge
mov
push
fisubl
fadd
jmp
dec
dec
pop
cmp
iret
iret
cltd
mov
and
and
or
add
mov
outsw
outsb
lods
mov
push
movsb
push
subl
xchg
lods
or
dec
repz
lahf
scas
cmp
sti
int3
repnz
lods
xchg
mov
mov
lock
fcoml
or
mov
movsb
fidivrs
insl
jnp
std
mov
push
inc
gs
lods
ret
sbb
mov
scas
inc
int
fwait
mov
dec
jg
pop
xor
mov
xchg
mov
out
aam
stos
lret
sar
pushf
push
adc
sub
daa
fstps
jne
inc
hlt
pop
mov
loope
cmp
add
shrl
adc
xor
mov
cmovs
shrb
insl
xor
push
mov
cmpsb
imul
pusha
cmp
or
inc
test
mov
test
add
pop
rolb
push
pop
jbe
int3
or
sbb
push
movb
fmuls
lods
popf
insb
fidivrs
lods
push
push
cmp
mov
add
hlt
add
mov
push
stos
add
aam
push
cmc
xor
iret
jge
mov
cmp
jo
sbb
loopne
fistpll
jl
test
scas
cmpsb
sahf
stos
in
mov
push
xchg
adc
or
sub
pop
pop
dec
cs
mov
cltd
sub
jge
lret
lret
jne
xchg
lcall
push
pop
dec
out
in
insl
enter
jb
or
iret
test
ljmp
push
jl
sbb
aad
iret
cld
roll
dec
ss
mov
adc
add
movsb
and
movsl
xchg
mov
and
sub
in
leave
loope
push
inc
mov
mov
sub
mov
mov
daa
popf
ljmp
sbb
pop
cmpsl
and
cmpsl
add
outsb
jmp
int
inc
aad
xchg
mov
sub
arpl
and
jne
xlat
bound
je
fidivrl
push
dec
mov
inc
test
out
xchg
push
adc
imul
lock
std
out
pop
mov
xchg
ret
iret
mov
push
jle
aas
and
clc
mov
push
and
ret
inc
pop
ret
cmp
sub
inc
mov
divl
inc
jp
jne
push
mov
mov
fcompl
jg
cmc
bound
lcall
and
cmc
pop
mov
pop
mov
or
repz
std
pop
stos
xor
jo
dec
jno
adc
mov
fisttpll
sbb
addl
mov
dec
inc
cmp
leave
inc
aaa
xchg
sub
sarb
cmpsb
and
pusha
in
adcl
dec
pop
sub
jmp
pop
mov
xor
pop
mov
cmp
sub
arpl
out
mov
into
mov
or
mov
pop
push
jl
cmp
pop
or
test
jp
mov
or
mov
scas
inc
test
sub
stos
and
fsubl
ljmp
sbbb
mov
push
loopne
andb
stos
icebp
imul
mov
push
int
pop
outsl
ret
push
mov
push
pop
dec
cmp
sub
movsl
mov
in
pop
push
inc
arpl
sub
das
inc
sub
nop
aam
mov
adc
adc
data16
les
clc
cmpsl
pop
mov
gs
add
add
mov
mov
add
push
pop
jp
stos
push
mov
cmc
sbb
mull
nop
ja
arpl
add
cmp
pop
dec
mov
adc
and
les
and
js
cmpsl
mov
shl
pop
call
mov
std
arpl
mov
lea
pusha
test
shrb
je
adc
push
sub
pop
xchg
push
cmp
or
xchg
mov
fldt
mov
dec
pop
idivl
xor
fcoml
mov
outsb
es
loopne
inc
shlb
sahf
add
ror
sub
cmp
pop
adc
ret
xor
inc
scas
lahf
lahf
cmpsl
test
test
scas
pop
mul
mov
mov
mov
aaa
push
ret
cmpsl
mov
mov
jg
cmp
scas
pop
xchg
cld
dec
mov
xchg
adc
pop
push
or
ja
jmp
pop
stc
out
out
ret
push
ljmp
add
inc
fsubrl
insl
adc
les
roll
mov
sbb
fiadds
ja
shlb
ja
inc
pop
and
inc
mov
imul
add
add
xor
xor
cli
inc
push
ficompl
popf
xchg
adc
dec
or
hlt
mov
sub
test
add
adc
and
inc
shlb
mov
mov
out
jp
push
add
inc
aad
stc
inc
mov
mov
sti
into
pop
jmp
sub
inc
pop
call
jbe
jle
cmp
dec
jle
mov
push
pop
sti
dec
push
loope
jnp
outsb
inc
jbe
xor
xchg
mov
das
call
mov
ljmp
jae
je
sub
in
outsl
push
and
pop
inc
inc
arpl
fimuls
push
out
dec
sub
je
add
jns
orb
pop
inc
loopne
daa
lea
push
out
and
lds
hlt
outsb
test
cs
test
and
pop
inc
mov
mov
cmc
cmp
mov
ja
je
cmp
sbb
xchg
mov
xor
jl
gs
add
mov
pop
mov
cmp
aas
rcr
mov
in
imul
dec
inc
push
sbb
outsl
lret
testl
insb
jo
sub
mov
adc
add
fadds
mov
sub
mov
std
popa
jae
mov
xchg
add
xchg
fcoms
push
ss
and
sbb
fcmovne
out
mov
mov
and
insl
xchg
iret
mov
mov
imul
cld
push
and
pop
mov
jmp
mov
leave
or
cli
mov
mov
sbb
sub
mov
pop
push
dec
das
shl
or
dec
in
cmp
cltd
stos
mov
pop
rcl
fcompl
xor
fisubs
stc
in
xlat
jmp
idivb
js
inc
aad
out
call
imul
mov
cltd
push
dec
mov
shl
test
stos
rcrb
jb
pop
sbb
cmpsl
movsl
pminsw
push
jo
scas
test
aaa
sbb
add
mov
addr16
sbb
dec
pop
popa
pop
movsl
icebp
pop
push
push
inc
xlat
test
xchg
adc
jnp
adc
dec
push
jmp
inc
outsb
inc
out
test
retw
jnp
testl
mov
std
cmc
sbb
mov
mov
mov
push
mov
sbb
add
adc
mov
jno
inc
out
pop
push
arpl
adc
pop
shlb
mov
gs
mov
sbb
stos
mov
jnp
pop
xor
movq
aad
das
jns
adc
mov
repz
andb
dec
and
jl
dec
or
push
and
iret
jecxz
lcall
cmovge
in
mov
add
pusha
hlt
mov
in
xor
or
lahf
push
pop
adc
int
mov
imul
pop
sub
mov
or
in
jo
repz
jle
mov
das
mov
pop
int3
outsl
mov
cmp
inc
ja
and
and
mov
data16
popa
push
aaa
mov
xor
and
cs
aas
lea
mov
cmp
adc
fndisi(8087
jle
insb
cmp
xchg
movsb
sbb
dec
mov
mov
imul
sti
inc
xchg
push
movsb
add
scas
sub
gs
nop
packssdw
jmp
test
jne
ja
enter
out
mov
jb
dec
push
mov
inc
fucomi
ljmp
out
or
mov
nop
out
outsl
push
push
repz
sti
mov
push
jne
adc
leave
cltd
test
jnp
mov
aas
xchg
jecxz
mov
fs
inc
adc
clc
loopne
outsb
aam
pop
sbb
pop
out
xchg
mov
ss
imul
imul
mov
sti
adc
adc
loop
repnz
xchg
icebp
notb
dec
andl
lret
mov
outsb
push
int3
adc
push
test
dec
xor
es
fisubrl
push
inc
jl
enter
rcrb
or
cltd
pop
ljmp
inc
cs
outsl
inc
aaa
xchg
out
and
mov
in
scas
mov
xlat
mov
dec
dec
xchg
xchg
and
or
xor
pop
test
cmp
stos
mov
mov
dec
push
mov
fwait
xor
enter
sbb
scas
inc
jns
push
fistpl
jne
les
inc
lods
mulb
adc
insl
dec
mov
or
push
loope
fisttpll
add
add
shll
mov
out
pop
jno
jg
stos
pop
and
repnz
daa
pop
push
fcomps
jl
int3
sub
test
in
ds
jbe
out
stos
lds
mov
mov
aas
xchg
or
cmp
jl
mov
push
cwtl
push
aaa
add
cmp
add
jnp
push
dec
je
shrl
jg
xlat
mov
pop
mov
test
lret
sub
jg
enter
inc
mov
movsl
jle
outsb
cltd
movsb
pushf
add
js
imulb
or
cmp
dec
cwtl
adc
pop
stc
sub
es
iret
scas
lock
xchg
into
pop
jno
or
xor
call
enter
mov
inc
cmp
addl
sarl
mov
mov
mov
push
sub
pop
cmpsl
addr16
pop
xor
sahf
push
ja
cmp
sub
push
mov
cmpsl
je
out
ffreep
test
mov
jecxz
jb
test
aaa
pop
das
addr16
loope
repnz
js
ds
mov
push
sbb
inc
dec
add
das
lods
enter
fistpl
jge
adc
jp
xchg
mov
imul
adc
out
jnp
mov
inc
push
mov
mov
lcall
dec
xchg
adc
sub
mov
ds
inc
pop
arpl
ljmp
inc
nop
adc
cmp
clc
out
cmp
adc
mov
adc
cwtl
mov
sahf
inc
cmp
mov
jg
pop
push
jg
cmp
loopne
xchg
mov
dec
sbb
int
jg
sahf
scas
cvtpi2ps
mov
mov
pushf
test
fbld
jp
adc
js
or
loope
cltd
jno
mov
leave
mov
pop
add
mov
clc
jbe
and
mov
jecxz
adc
fnstenv
loopne
sti
in
or
dec
pop
jecxz
mov
add
jne
rol
mov
pop
dec
or
fs
xchg
inc
outsl
adc
inc
xorb
fnop
add
and
mov
sarb
int
xchg
and
pop
mov
enter
adc
jne
cwtl
fdivl
sub
pop
fbld
sti
sbb
into
dec
jmp
scas
fldcw
sub
shl
or
push
adc
sbb
lret
out
in
mov
mov
popf
aad
inc
stc
pop
inc
jmp
dec
cmp
dec
pop
cmp
mov
addr16
rcl
scas
add
mov
jecxz
sub
add
flds
xchg
mov
sbb
clc
add
std
sub
and
push
add
add
hlt
out
jne
call
aam
xchg
cltd
jl
mov
adc
mov
sub
mov
jne
out
pop
lock
imul
sti
imul
ljmp
cmpsl
pop
aaa
rol
mov
xor
pop
ret
popf
in
push
lcall
or
std
ret
imul
cs
fmuls
insb
lahf
cmpsl
pop
in
inc
dec
push
pop
and
cmp
in
mov
jmp
mov
shr
sbb
adc
popa
mov
jecxz
adc
xchg
imul
shrl
pop
push
fistpl
outsl
repnz
mov
jg
call
repz
shl
push
jl
repnz
inc
in
cmp
and
xchg
add
xchg
fistpll
pop
xchg
pop
mov
je
xchg
bound
ljmp
testb
imul
mov
mov
outsl
stos
std
in
les
jg
pop
push
mov
jnp
in
mov
pop
outsb
mov
pop
psubusb
mov
push
mov
scas
jbe
lret
push
stc
pop
and
enter
repnz
shr
lahf
das
pop
into
xor
xchg
jge
lcall
and
imul
pop
pop
xchg
mov
jnp
les
push
call
adc
test
jb
es
pop
dec
into
jae
aad
push
scas
lea
mov
inc
dec
and
pop
dec
xchg
add
imul
inc
xorb
dec
adc
popa
fisttpll
ror
jmp
cmp
test
push
fstl
arpl
sub
push
xor
jecxz
ret
in
js
push
insb
pop
clc
pop
mov
out
mov
loope
ja
pop
pop
or
test
adc
cmpsb
or
push
lock
push
adc
cmp
push
push
loope
xchg
stos
fcoml
push
cld
dec
push
repz
and
jno
and
jmp
dec
popf
dec
pop
sbbl
or
cwtl
push
cmp
add
cwtl
xchg
mov
xor
movsb
push
fstp
pop
scas
loop
add
sti
das
pop
imul
pop
pop
es
sahf
mov
add
push
gs
fstpl
fistpl
ret
push
cli
xchg
repnz
daa
xor
aam
rcll
aas
adc
fisubl
mov
int
pop
arpl
xor
test
lcall
inc
xor
fisttpll
mov
sbbb
dec
push
into
add
movsb
inc
leave
mov
mov
clc
pop
out
mov
inc
je
movsl
mov
mov
mov
fisubrl
and
movl
shlb
push
push
pushf
cs
pop
ret
sarl
or
popf
push
pop
arpl
out
or
mov
cmp
mov
mov
inc
or
idivb
mov
sub
lea
nop
in
mov
les
adc
mov
and
jbe
dec
fmul
and
add
sbb
lahf
pop
or
mov
cmp
mov
mov
dec
movsb
arpl
or
inc
add
pop
or
sub
mov
icebp
inc
lods
xor
stos
sbb
jg
inc
push
ss
mov
std
insl
jmp
add
out
inc
bswap
lahf
and
repnz
pushf
push
ljmp
push
sbb
add
sub
shr
mov
mov
ja
fistpl
mov
push
mov
fisttpl
jg
jno
test
or
incl
rcll
cmc
sbb
or
mov
mov
add
into
jl
lcall
dec
dec
fwait
stc
jne
popf
xchg
inc
pop
inc
sub
pushf
cmpsl
cmpsb
lret
je
shrl
outsb
clc
add
push
rorb
les
ret
mov
roll
daa
xor
ja
add
adc
mov
pop
rcrb
mov
mov
mov
cmpsl
mov
mov
pop
cmc
movsl
out
cmp
dec
push
or
jns
faddl
mov
lahf
pop
and
test
sbb
or
inc
or
rorl
add
scas
fbld
pop
sbb
movsb
loopne
into
xchg
or
add
add
or
lds
loop
xchg
lret
pop
pop
inc
dec
cld
mov
aad
mov
enter
shlb
insb
daa
push
ficomps
fistpll
lret
mov
dec
out
js
add
rcrl
fimuls
movsl
ret
push
imul
pop
subb
pop
add
mov
add
es
mov
movsl
xchg
mov
out
stc
mov
dec
outsb
clc
out
pop
sbb
arpl
cmc
mov
or
ljmp
pinsrw
sub
add
fsubrp
push
mov
mov
jl
pop
push
ds
pop
ret
xchg
jnp
xchg
sahf
inc
pop
mov
adc
sbb
push
popa
std
push
mov
lret
inc
fldcw
xchg
loop
scas
push
in
xorb
add
outsb
shll
aaa
or
int3
add
sti
pop
out
filds
rcrl
xor
loopew
loop
mov
ja
push
cmp
mov
sbb
lock
out
fidivl
mov
add
mov
sbb
test
jmp
mov
in
and
in
in
xor
mov
in
jp
pop
test
cmpsl
inc
inc
mov
mov
mov
cmp
cli
pop
sub
outsl
lods
cli
ds
movsl
jg
aas
cmp
aad
xchg
sbb
fldl
jmp
iret
dec
jle
jle
pop
mov
out
mov
pop
loopne
xlat
negl
es
cmp
dec
fstp
cmpsb
mov
decl
sub
dec
rclb
dec
test
mov
and
cmpsl
push
jg
lods
test
pop
imul
out
inc
dec
mov
hlt
sub
addr16
addb
pop
pop
fidivs
adc
xor
mov
jl
hlt
push
and
dec
and
loopne
or
ja
out
iret
pop
dec
int
std
fwait
or
stos
xchg
or
pop
cmpsl
rorb
int
pop
mov
mov
lcall
mov
stos
add
fstpl
clc
add
push
ljmp
pop
and
push
xor
mov
mov
adc
jg
fistpll
lea
mov
cmpsl
push
push
pop
and
or
pop
jnp
fnstenv
add
int
jmp
addr16
jge
test
psubusb
ret
inc
cmp
out
jnp
jmp
or
or
cwtl
push
sti
outsl
jnp
lcall
stos
pop
jmp
jge
lods
cmp
test
pop
out
jne
jmp
jns
test
sbb
sti
cmc
fcompl
ja
cmp
mov
sub
jg
xchg
cmc
inc
popa
dec
mov
fcoml
mov
pop
jle
loop
je
decb
pop
jo
cmc
push
xor
shll
push
daa
in
stos
cld
divps
dec
loopne
fst
popa
fistpl
inc
insb
sbb
repz
dec
out
iret
sti
mov
aas
add
movsb
mov
sbb
dec
bound
pop
push
sbb
mov
pop
aad
sub
cmp
imul
sbb
sbb
pop
pop
jne
xor
adcb
sbb
outsl
mov
mov
sub
push
mul
fimuls
dec
mov
fwait
jp
scas
push
lret
popf
sbb
pop
sahf
ljmp
mov
mov
out
jge
inc
pop
adc
lea
ljmp
xor
pop
cmp
icebp
mov
scas
jle
add
aad
and
and
add
xchg
popf
sbb
leave
cmp
roll
and
andb
es
rol
xlat
fwait
icebp
mov
and
xchg
mov
push
lret
cmpsl
sub
adc
sbbl
inc
xor
pop
call
aam
cli
pop
push
jno
mov
sahf
pusha
mov
jg
int
pop
rcl
cld
inc
or
adc
rorl
aad
idivl
test
aas
sub
mov
aam
push
mov
frstor
fistps
push
in
sbb
cmpsl
xchg
pop
push
jge
cltd
sti
daa
mull
and
scas
fstps
or
shl
pop
adc
fistl
sbb
push
rep
imul
sub
mov
dec
adcb
dec
mov
cmovg
loop
mov
sub
push
or
divb
sbb
out
inc
lods
sbb
mov
sarb
sub
push
aas
jp
jne
shll
xchg
xor
adc
xor
inc
push
jge
lods
fisubs
popf
leave
jmp
mov
xchg
fldt
or
mov
mov
mov
insb
fcompl
cli
in
mov
outsl
lods
aam
sbbb
test
dec
dec
sahf
sar
daa
fidivrl
push
sbbl
mov
cmp
leave
movsl
dec
test
jo
sbb
xchg
add
int3
mov
mov
call
sub
pop
stos
inc
inc
dec
mov
add
add
aas
jg
pop
mov
push
shlb
adc
add
jp
mov
dec
mov
sti
roll
mov
and
stc
sti
pop
cmp
into
jle
leave
and
push
inc
pop
pop
gs
mov
mov
cmpsl
inc
das
std
pop
add
xor
inc
mov
call
pop
insb
leave
xchg
jle
cmp
pop
push
flds
icebp
lea
ss
dec
adc
sub
add
pushf
mov
inc
sarl
fidivs
and
ret
aad
int3
out
into
add
pop
sub
cli
xchg
xchg
outsl
cmp
fisttpl
or
shll
ffreep
in
jbe
andl
adc
or
mov
mov
std
call
stos
hlt
in
adc
or
sti
pop
pop
jnp
and
sbb
or
out
rcrl
mov
inc
cltd
sub
test
adc
pop
push
jno
in
and
pop
repz
mov
pusha
jnp
push
xor
push
inc
and
and
adc
mov
pop
test
leave
mov
hlt
push
sbb
out
pushf
inc
or
scas
add
mov
imul
pushl
dec
mov
pop
out
dec
cli
and
xchg
rol
mov
notl
push
icebp
add
int3
mov
add
or
pop
jns
mov
inc
jo
cs
jmp
repz
pop
mov
stos
or
stos
cmp
sub
push
sub
fwait
les
nop
mov
and
inc
repnz
mov
ljmp
mov
fmuls
scas
mov
fmuls
cmc
mov
pop
add
adc
jne
mov
fisttpll
test
or
insl
aas
fldenv
push
test
andl
ds
pop
aam
dec
mov
jns
mov
movsbl
sahf
divl
jae
and
mov
pop
cltd
jle
inc
inc
dec
lods
cli
mov
fistps
xor
add
mov
inc
test
and
iret
lret
rorb
mov
lods
mov
jp
sar
pop
pop
jecxz
mov
in
xchg
imul
jbe
in
dec
out
call
adc
pop
xchg
and
shlb
stc
scas
mov
pop
pop
aam
dec
mov
xor
mov
pop
and
testl
and
call
push
imulb
jecxz
or
inc
pop
sub
xchg
in
or
adcb
or
or
sub
fdivl
adc
enter
or
push
inc
add
dec
adc
mov
sub
fstl
cmpsl
mov
push
dec
scas
call
xchg
aaa
subb
pmullw
das
addr16
sub
scas
jne
sbbb
jg
or
adc
push
scas
mov
xor
dec
sub
push
out
pop
ret
push
adc
or
and
pop
clc
iret
add
lss
shlb
xchg
mov
mov
mov
scas
clc
or
std
and
jnp
imul
gs
int
adc
sub
stos
in
jecxz
aas
ret
movsl
inc
std
sahf
adc
insl
xor
ljmp
adc
add
inc
and
push
dec
sbb
out
jns
dec
fs
in
or
push
or
push
xchg
dec
add
pop
jg
stos
pop
push
dec
sbb
hlt
and
add
mov
pop
daa
lahf
add
test
insl
add
cmp
orl
xor
lods
xchg
lods
subb
jecxz
push
mov
fistpll
and
xor
push
cmpl
mov
mov
cmp
ret
push
sbb
hlt
cmpsl
shlb
cli
push
and
cmc
in
or
outsb
sbb
pop
sar
fstps
adc
out
insl
into
dec
mov
cmc
and
lcall
repz
es
outsl
mov
pop
mov
inc
loop
test
sbb
neg
mov
inc
or
stc
mov
mov
or
xchg
cmpsl
pop
cmp
into
pop
fldcw
out
negl
or
jle
adc
mov
push
inc
lea
repnz
aad
push
add
cmpsl
fstl
xchg
xchg
fdivr
mov
jg
and
mov
call
adcb
pop
fbld
or
psubusw
mov
outsb
sub
inc
mov
cmp
fstpt
pop
cmpb
dec
out
push
sahf
push
clc
out
sahf
sbb
pop
hlt
out
pop
loopne
dec
cld
jg
cwtl
xchg
std
inc
dec
jge
ret
lds
mov
xor
adc
stos
pop
leave
sahf
hlt
rcrl
or
xchg
or
mov
movsb
xchg
inc
ffree
dec
push
fs
mulb
lret
lret
fwait
jbe
xor
addr16
or
out
sti
jge
and
cmpsb
mov
popf
fistps
shlb
test
xchg
inc
incl
pop
aas
inc
ss
leave
mov
aam
dec
push
aaa
mov
popf
gs
xchg
pushf
and
mov
xchg
pop
cmp
iret
pop
insb
cmpsl
mov
push
xor
xchg
dec
pop
clc
mov
fcmove
clc
jno
fsts
mov
cwtl
or
leave
add
stos
mov
xor
popf
jle
inc
es
movsl
mov
pop
mov
iret
push
dec
jecxz
mov
ds
push
cmp
sbb
aaa
pop
bsr
mov
mov
fildll
sbb
sbb
dec
loop
scas
or
ret
cmp
dec
jg
pop
arpl
ljmp
xchg
cld
and
pop
movsl
mov
iret
add
dec
nop
lea
imul
push
mov
shll
or
scas
dec
mov
push
pushf
rorb
pop
mov
sub
cs
imul
pop
daa
xor
jl
incb
pop
pop
mov
cmp
and
loopne
mov
mov
xchg
jae
orb
inc
xchg
popa
xorb
pop
fnclex
mov
movsb
push
pop
dec
imul
sbb
daa
in
sbb
insb
cmpsb
fisttps
ds
loop
pop
mov
sbb
aas
mov
xchg
sub
sbb
call
sbb
cmp
sbb
nop
sbb
daa
mov
mov
lods
sub
stos
mov
testl
or
mov
mov
ficoml
push
jg
pop
lret
shl
cmpsl
add
jne
sbbb
add
or
mov
js
ffree
loope
das
js
inc
jp
cwtl
movb
insl
inc
scas
or
outsb
aaa
pop
call
cmp
sbb
aas
in
jb
int
aas
jne
test
and
adc
inc
pop
pop
lea
push
add
and
notb
aas
inc
ljmp
outsb
test
xor
scas
les
movsb
or
or
es
idivl
jmp
adcl
decb
ja
or
pop
addr16
mov
push
or
notl
aaa
xorl
out
fistps
push
jno
in
adc
loopne,pt
cmp
and
pop
inc
or
sub
pop
inc
push
mov
jg
iret
pop
mov
test
mov
mov
or
fnsave
jle
xchg
mov
inc
popa
or
testb
lock
inc
movsb
pop
or
leave
iret
test
cmp
les
mov
xor
fnstenv
mov
jp
mov
callw
fcomps
incb
mov
ret
mov
cmp
outsl
dec
xor
sbbb
and
mov
aaa
and
fsub
mov
mov
inc
dec
jbe
mov
adc
jnp
push
mov
movsl
and
icebp
add
mov
push
mov
lods
daa
scas
xor
mov
cmp
icebp
mov
sub
pop
or
xlat
add
fcomp
sbb
pop
fdivr
inc
mov
rcl
pop
sbb
in
mov
or
cwtl
arpl
ss
in
push
pop
lods
jno
mov
and
sahf
mov
inc
mov
push
and
pop
and
cld
gs
pop
std
pop
mov
jbe
das
out
dec
cmp
mov
pop
mov
mov
mov
mov
bndldx
fistpl
ja
rorl
pop
int
mov
xchg
jo
jmp
icebp
cltd
aam
rclb
jne
imul
or
mov
mov
sbb
lret
adc
jg
in
pop
mov
dec
fiaddl
and
mov
imul
pop
icebp
push
lods
mov
pushf
jmp
or
jecxz
inc
jnp
and
inc
or
pop
mov
xor
mov
mov
push
jp
adc
adc
cmp
in
gs
dec
repnz
test
lahf
scas
pop
pop
dec
gs
out
xor
mov
or
adc
pop
fidivs
outsb
call
push
mov
pop
push
loopne
ja
rclb
sub
jg
sub
leave
cmp
cmpsl
mov
dec
and
outsb
mov
or
mov
pop
sahf
repnz
stos
shr
hlt
pushf
jne
shll
decl
pop
addr16
dec
pusha
lds
mov
ja
leave
pop
fisttpl
movsl
das
dec
jmp
lret
sub
add
cli
pop
ret
je
out
icebp
jmp
or
shlb
out
lods
scas
push
xor
pop
sub
push
push
fsts
testb
stos
xchg
and
dec
test
adc
aaa
fistpl
xchg
test
ret
jb
pop
add
orb
inc
iret
inc
faddl
rol
xchg
loopne
ror
bswap
cmc
fstps
push
adcb
in
orl
loop
rcl
cmp
out
pop
pop
subb
mov
jne
jp
mov
pop
sub
bnd
mov
test
test
stc
fs
rep
lahf
lea
sub
std
imul
cmp
decb
shl
mov
sub
and
adc
out
mov
and
fisubrl
fcmove
std
mov
push
insl
pop
fstpt
mov
lods
addr16
movaps
pop
data16
mov
jmp
or
cmp
aam
lods
js
inc
mov
stos
pop
ljmp
dec
subb
cltd
dec
xchg
mov
repz
cmpb
mov
dec
mov
ss
push
popa
and
mov
lods
das
sbb
fsts
pop
sub
xchg
aad
in
out
popf
jg
mov
lea
adc
movsl
call
in
lea
dec
stos
ret
fistpl
sbb
lahf
icebp
movnti
push
das
sub
push
add
out
enter
pop
adc
pop
xchg
mov
push
int3
pop
pop
pop
mov
popf
out
pop
xor
shl
xchg
mov
leave
push
push
imul
cmp
add
push
jg
dec
ret
icebp
xchg
cmp
push
mov
popf
pop
fcoms
jmp
les
aas
rcrl
mov
sub
dec
bound
out
sub
out
mov
repz
mov
das
sub
cmp
pop
mov
mov
adc
mov
mov
fbstp
iret
mov
jbe
sub
pusha
push
dec
mov
add
lahf
pop
ret
inc
mov
scas
jle
sub
dec
sbb
icebp
pop
push
out
jnp
roll
ret
arpl
movsl
stc
jp
jbe
mov
fisttps
outsb
dec
or
cmp
lahf
adc
and
jg
sbbb
std
pop
fwait
ret
mov
and
daa
je
sbb
jmp
or
sbb
push
pushf
dec
and
cmc
pop
cmpsb
lds
fs
add
stos
jae
call
xchg
dec
adc
jp
adc
sub
rclb
insb
sbb
adc
stos
lcall
xchg
arpl
inc
shlb
jne
push
cli
pop
into
gs
xchg
pop
jno
fidivrs
fwait
mov
cltd
cmp
push
pop
fiadds
insl
adc
addl
add
inc
pushf
pop
xchg
ret
pop
xchg
lahf
outsl
and
sbb
inc
mov
rcll
in
mov
fdivs
or
sahf
bound
lds
add
scas
push
movsl
cli
dec
arpl
insb
mov
and
lcall
push
mov
lret
xchg
or
mov
mov
mov
add
je
sbb
jns
jg
imul
xor
cmpsl
gs
sub
dec
and
dec
clc
call
fdivl
inc
outsl
movsb
push
je
notb
mov
dec
pop
cmpb
imul
dec
dec
xchg
jno
mov
mov
mov
mov
pop
int
inc
iret
pop
arpl
aam
mull
sub
sub
jl
cmpsb
mov
pop
xor
add
lret
arpl
test
fdiv
pop
xchg
or
rcr
out
xchg
dec
jmp
nop
mov
pop
adc
push
jbe
pop
fidivl
jge
insb
aas
and
dec
sti
cmc
bound
pop
jg
imul
inc
les
mov
rcrl
jle
fwait
aas
lods
jg
ljmp
fdivl
xorl
adc
jbe
lods
repz
fstp
cmp
mov
mov
sbb
filds
mov
xchg
repnz
inc
push
push
gs
mov
inc
scas
lcall
and
mov
inc
cld
and
and
stos
stos
mov
sbb
sbb
sub
lods
repz
stos
sbb
scas
dec
insb
movsl
sub
add
mov
xchg
cmpsl
jle
dec
cmp
xchg
xchg
mov
out
push
das
or
iret
pop
pusha
jp
scas
add
sbb
adc
fidivs
push
add
dec
jle
pop
out
adc
movsb
xchg
jmp
mov
push
fstp
xlat
sub
insb
push
jne
mov
jo
inc
pop
jae
xor
push
insb
je
pop
enter
ss
mov
notb
test
repnz
mov
into
sbb
out
pop
arpl
mov
out
sti
pop
mov
sub
shrl
pop
js
mov
sub
or
lret
adc
xchg
fwait
out
cmp
pop
or
jge
jne
jnp
lahf
sbb
inc
mov
xchg
xchg
pop
jp
cmp
fwait
mov
rcrl
fmull
lods
fnstenv
xchg
sbb
pop
push
test
lret
sti
jb
sbb
ret
xorb
out
fsts
test
jmp
mov
out
inc
xor
xchg
pop
sarb
cmp
cs
push
jle
push
pop
sbb
sub
inc
lods
dec
or
or
mov
xor
out
lods
inc
mov
out
inc
iret
loop
repnz
push
inc
es
jne
mov
fcompl
mov
add
out
add
js
leave
pop
out
xchg
loop
or
push
lods
subb
jge
cmp
lea
mov
pop
movl
xchg
adc
cmp
pop
aaa
inc
arpl
fldenv
xchg
insl
cmp
pop
push
lahf
mov
push
adc
and
inc
pop
test
dec
ret
inc
mov
push
ffreep
rcrb
fstps
lret
jle
inc
addr16
jnp
mov
imul
pop
or
cmpsb
jne
jo
stos
fcos
xchg
pop
pop
jmp
xchg
or
sbb
call
lods
mov
pop
aam
adc
stc
out
test
lods
pusha
jbe
lahf
aam
mov
jle
xor
pop
fdiv
dec
arpl
pushf
stos
pop
mov
xchg
mov
add
xchg
mov
gs
xlat
mov
roll
xor
inc
mov
push
pop
loop
imul
push
or
cwtl
fsts
es
lahf
outsb
sbb
mov
in
fisttpl
sub
pop
ficomps
mov
cmc
ja
stos
insb
pop
mov
adc
jne
shlb
xchg
pop
arpl
and
pop
add
daa
roll
notl
imul
mov
pop
xchg
sbb
repz
roll
jg
jg
or
mov
pop
rcr
ljmp
js
mov
repz
movsl
mov
adc
inc
lea
icebp
push
sub
jg
enter
push
mov
jne
iret
aad
aaa
lods
mov
les
test
or
test
adc
push
cld
adc
or
or
out
arpl
mov
pop
jbe
mov
dec
xchg
mov
mov
and
lea
ficoml
lahf
inc
sub
scas
adc
imul
stos
imul
jo
inc
sub
pop
inc
jl
out
push
xchg
mov
outsb
insl
pusha
out
inc
or
add
push
jb
or
pop
mov
les
push
bnd
pop
push
inc
pop
mov
xor
and
icebp
cmp
rcrl
aaa
mov
pop
cmpb
or
shrb
out
sbb
mov
rorl
aaa
sbb
cmpsb
loopne
push
mov
push
lea
rcrb
xchg
dec
push
bound
mov
pop
fs
xor
loop
jae
ficoms
data16
pop
dec
jg
out
cmp
rcll
xchg
cltd
arpl
pop
lcall
mov
mov
push
sub
mov
xor
pop
xchg
push
jno
cmpsb
cmp
mov
divl
jns
jno
mov
push
and
mov
andb
pop
mov
lret
nop
sbb
xchg
pop
pop
arpl
outsb
mov
add
sar
pop
push
xchg
clc
mov
fstl
cli
repz
arpl
dec
push
pop
jp
xchg
jg
pop
out
mov
test
cld
push
andl
out
xor
push
inc
and
lods
in
or
cs
inc
xor
sbb
insb
push
adc
out
dec
inc
lret
into
pop
aam
cmp
out
mov
mov
cmp
mov
xor
repz
ss
push
sbb
scas
pop
out
in
das
fwait
test
testl
jmp
push
mov
or
xor
scas
pop
fdivr
test
or
or
jns
test
pop
mov
cmp
ljmp
sbb
pop
xchg
and
jle
mov
inc
gs
hlt
add
pop
shll
or
jl
lret
negl
ja
sbb
cmp
movsb
ljmp
mov
pop
negb
fwait
push
sub
repz
jmp
mov
mov
cmp
mov
sub
nop
imul
je
movsl
movsb
arpl
cltd
jg
call
adc
fldz
jmp
lret
add
push
or
dec
pop
mov
sbb
push
mov
cwtl
outsb
dec
add
cmc
arpl
cmpsb
push
inc
cwtl
lock
aas
pusha
mov
jns
add
lea
pop
xchg
inc
cmp
jmp
in
adc
fdiv
scas
in
and
out
cmpsb
cmp
std
mov
and
and
test
aas
int
lock
bswap
sarb
cmpsb
std
hlt
sub
add
jo
divl
fstps
insb
dec
outsl
rolb
mov
mov
pop
movsl
imul
sbb
xor
outsb
mov
mov
mov
jle
out
out
clc
mov
pop
mov
int3
cmc
and
cli
out
push
or
arpl
xlat
das
scas
lcall
lods
or
cld
mov
std
and
incb
ds
adc
pop
shlb
jmp
lods
cmpl
xchg
inc
ja
xchg
or
pop
adc
inc
loop
jg
inc
cmpsl
push
fisttpll
xchg
or
test
xchg
js
int3
leave
pop
fldt
sarb
outsb
xor
rcrl
xchg
int3
movsl
cmpsl
movsb
outsb
imul
mov
dec
je
xchg
mov
xor
cmp
mov
enter
sub
mov
data16
inc
je
and
add
bound
sbb
stc
mov
xor
pop
cmp
and
push
xor
lret
pop
insl
ss
sbb
repz
aad
stc
lds
les
cmpsb
pop
insl
stos
outsb
xchg
push
jp
mov
rcr
imul
jle
xor
mov
jo
cwtl
cmp
xchg
add
movsl
sbb
test
in
pop
lea
dec
or
pop
cli
sbb
test
sbb
cld
imul
pop
mov
fs
mov
test
addr16
pop
ror
mov
rcr
fsts
add
jae
stos
movsl
dec
in
xor
popa
pop
loop
pusha
rcl
in
insb
in
scas
push
and
mov
and
jecxz
xor
xchg
dec
mov
lea
popf
sub
out
sub
add
fdivl
cs
mov
insl
cmp
idiv
psubsw
lods
aad
jle
cld
mov
sub
and
sub
push
imul
mov
mov
rcr
sbb
mov
pop
cld
fnstsw
and
adc
aam
arpl
xchg
mov
fcomps
lods
fdivrp
fsubl
lods
xlat
mov
or
add
and
pop
pusha
mov
ret
jno
pop
ljmp
or
mov
lock
sub
adc
insl
je
imul
sbb
or
ja
xchg
add
jle
fnstenv
lcall
repz
pushf
and
or
xor
loopne
bound
sub
or
in
xchg
cmp
rolb
test
jb
stc
dec
mov
lods
jnp
repnz
mov
mov
add
xchg
out
stc
xlat
lods
pop
adc
push
loope
insl
pop
mov
movsl
mov
fs
aaa
jl
imul
or
mov
mov
fsubs
in
insb
popf
mov
rcll
mov
and
mov
add
xchg
stos
pop
int3
push
inc
out
les
sub
stos
mov
adc
int3
sbb
aam
xchg
cmpl
mov
dec
cld
fidivrs
jge
dec
adc
jl
jns
inc
ret
pop
mov
mov
or
imul
jne
jg
insl
dec
aas
add
movsb
aad
cmpsb
mov
js
push
mov
xor
mov
ret
mov
ja
mov
jl
mov
xor
jge
sbb
xchg
fwait
out
leave
stos
je
cmpsb
and
xchg
rclb
and
add
jg
pop
test
sarl
cmpsb
stos
push
adc
in
outsb
pop
mov
outsl
imul
sbb
lahf
jl
and
sti
pop
and
clc
sbb
loop
ret
jp
xlat
mov
mov
popa
mov
dec
ja
cmpsl
sbb
add
jno
imul
xor
mov
int3
mov
out
movsb
sbb
pop
mov
inc
ja
sar
cld
movsl
sub
test
out
iret
int3
or
js
cltd
imulb
mov
out
out
popa
inc
push
push
test
mov
out
fstps
test
jne
aaa
xor
cltd
mov
stos
adc
push
mov
and
push
aas
pop
orb
out
faddp
fucomp
sahf
lcall
cmp
arpl
mov
loop
std
pop
les
not
ds
fbstp
pop
mov
dec
inc
iret
xchg
frstor
mov
mov
ret
mov
rcrl
xor
sbb
push
dec
mov
loope
adcl
push
iret
cmp
cld
mov
loope
fadd
lea
popf
mov
sbb
mov
inc
push
out
cmp
mov
mov
mov
shrb
cmp
push
icebp
sbb
mov
mulb
xchg
inc
mov
aas
shl
and
adc
outsl
push
scas
std
enter
jno
inc
lea
rcr
or
rcll
rcll
test
add
ds
and
test
test
out
aam
sbb
sbb
cmp
mov
scas
pop
in
pop
mov
out
dec
push
cmpsl
cmp
pop
pop
stos
faddl
test
jns
mov
push
mov
std
loop
imull
jmp
add
xor
jmp
mov
aas
leave
pop
lods
lret
adc
xor
out
dec
mov
push
leave
lcall
mov
xchg
mov
mov
rorb
sub
or
push
fcmovne
aad
bound
adc
test
xchg
aam
in
out
add
std
pop
pop
loop
arpl
cmp
jnp
out
sub
stos
add
cmpsl
pop
enter
push
or
cwtl
daa
jg
mov
add
jae
ret
cmp
mov
les
sub
in
xor
sbbb
push
sti
adc
sbb
test
or
fcomp
fimuls
xchg
push
mov
inc
jp
ret
lods
lahf
ret
imul
in
cmpsb
inc
fld
pop
pop
pop
mov
pushf
ljmp
xor
imul
add
cmpsb
shrb
jne
xor
push
inc
cmp
pop
sub
push
bound
enter
lret
inc
pop
xchg
mov
mov
mov
pop
cmpsl
aas
mov
je
stos
push
jmp
mov
arpl
stc
out
lcall
clc
and
in
pop
push
jg
ljmp
lahf
ret
jmp
into
lds
sbb
xor
out
nop
sbb
flds
push
cli
outsb
push
sub
fisubl
cmpsb
mov
pop
das
and
mov
popa
push
std
sub
sbb
icebp
flds
sbb
rorb
ficompl
stos
test
xchg
cmc
push
lahf
bound
mov
push
in
test
pop
fcmovne
dec
mov
out
dec
dec
and
imul
icebp
inc
adc
add
rolb
stos
popf
lret
mov
ret
cmp
clc
pop
cmpsl
loopne
addr16
inc
out
mov
dec
shrl
pop
adc
mov
adc
test
pushf
in
xchg
push
or
cltd
push
adc
imul
pop
shrl
imul
mov
nop
xlat
add
inc
jg
jns
dec
dec
ds
stc
jg
inc
add
xor
out
lret
mov
xor
imul
dec
mov
or
fidivl
or
cmpsl
mov
mov
fdivr
mov
mov
pop
sbb
push
loop
shrl
nop
sbb
imul
aas
imull
pop
add
pop
adc
testl
mov
dec
dec
fwait
mov
rcr
push
test
cmp
iret
sbb
addr16
nop
inc
push
xor
pushf
push
dec
imul
std
fisubl
shlb
testb
nop
mov
inc
ret
int3
fwait
or
test
imulb
rorb
outsb
ss
cmpsb
test
xchg
jle
call
push
outsb
vphsubwd
adc
pop
jmp
test
fildl
fimuls
mov
cmc
inc
loopne
or
sub
or
jg
sub
movb
dec
daa
jmp
mov
popf
mov
in
mov
and
inc
add
test
aas
mov
add
aam
jo
out
pop
cltd
ljmp
xor
movsl
pushf
add
jno
fcomip
pop
sub
imul
jno
push
cwtl
push
pop
popa
mov
pop
mov
fnstsw
outsb
and
mov
test
or
std
adc
adcl
jle
jg
pop
dec
in
jmp
jle
or
add
pop
loope
cmpsl
das
mov
xchg
jno
stc
sub
cmpsl
mov
shlb
out
mov
pop
add
push
pop
popf
xchg
sub
cmp
mov
add
addb
in
pushf
test
pop
arpl
add
aas
cmp
inc
sub
mov
mov
mov
clc
sub
pop
xchg
std
in
leave
cmp
dec
push
scas
cltd
test
loope
aas
lret
scas
lahf
add
cmp
ret
sub
xchg
jg
pop
mov
sub
sbb
cmp
or
mov
fmul
and
pop
mov
or
fldcw
imul
or
adc
sbb
out
push
repz
mov
sbb
js
xor
push
and
xchg
int3
out
adc
les
dec
shlb
jg
and
xchg
popf
sbb
mov
push
push
inc
arpl
shl
push
push
mov
add
fsub
mov
xor
push
pushf
mov
filds
or
sbb
scas
pop
inc
mov
xchg
adc
mov
stos
not
in
es
iret
rcrb
je
mov
push
fstp
ja
lds
mov
xchg
test
and
mov
into
adc
out
addb
mov
fsubrs
das
jns
ret
fwait
cwtl
pop
idivl
in
add
imull
or
sti
scas
cmpsb
mov
push
ljmp
push
add
dec
xchg
adc
arpl
inc
outsl
xor
pushl
sub
pop
stc
cmp
repz
out
ljmp
mov
mov
je
cmpsb
push
sahf
pop
arpl
jmp
adc
or
mov
lods
xor
in
add
enter
or
pop
adc
xchg
scas
add
adcl
std
pop
or
pop
or
ret
mov
sub
cli
pop
loopne
push
or
hlt
xor
add
out
dec
aaa
xor
jp
inc
jg
leave
repz
xor
sbb
push
or
das
aas
cltd
xchg
add
dec
lsl
out
mov
xlat
pop
int
inc
fstps
sub
cs
xchg
push
ffree
gs
ss
fistl
stc
pop
cltd
jl
push
shlb
testl
cmc
mov
fsub
push
or
mov
insb
xchg
repz
mov
orb
xor
mov
mov
add
jecxz
js
dec
out
imul
cbtw
jle
push
push
add
in
mov
jg
sub
jl
xchg
mov
test
icebp
popf
int
popa
dec
out
test
jo
push
mov
movsl
sar
mov
iret
clc
pop
cmp
add
mov
into
sahf
mul
add
pop
jg
mov
clc
adc
rorl
mov
and
pop
mov
lret
pop
cmpsb
pop
sar
pop
sbb
fstps
sub
scas
mov
adc
loop
insb
dec
mov
imulb
in
das
pop
push
leave
lret
leave
scas
pop
jl
lods
cmp
push
push
jnp
gs
cmc
sarl
shl
jnp
xchg
iret
push
out
cmc
xor
rorl
adc
andl
mov
cmpsl
and
das
jle
lock
pop
xchg
das
popf
scas
mov
adc
cmp
pop
pop
push
subb
pop
inc
jp
dec
stos
aas
data16
adc
pop
push
or
in
cli
jg
push
scas
shl
or
mov
lea
dec
mov
pushl
pop
lds
jge
xchg
pop
cld
sub
push
push
out
inc
sbb
icebp
iret
pop
repz
adc
lods
jno
sub
or
lret
jle
adc
sahf
push
shll
mov
fstpt
sub
into
xchg
pop
mov
inc
jl
lea
jg
xchg
pop
and
add
outsl
stc
std
jno
or
inc
push
rclb
push
fldl
pop
mov
mov
xchg
in
add
cwtl
aas
jl
ret
in
mov
mov
pop
jae
scas
sbb
xacquire
cmpb
into
adc
out
adc
lock
mov
imul
popa
js
lret
pop
mov
call
loop
mov
shlb
iret
pop
fistpl
in
es
fstp
mov
sbb
pop
adc
fsts
pop
adc
xor
decl
stos
rolb
cmp
inc
imul
ret
push
push
ror
out
pop
inc
pop
or
jp
cmpsl
pop
fistpll
je
outsb
cmc
cmp
inc
jp
fildl
pop
std
inc
movsb
xchg
js
inc
ss
inc
out
sub
scas
or
test
fisttps
ficomps
dec
adc
mov
mov
pop
inc
loopne
aaa
pop
mov
lahf
popa
cmpsl
pop
fists
cli
movsb
data16
outsb
pop
orl
jle
lock
sub
cmpsb
xor
fbstp
aaa
sub
inc
out
push
mov
and
std
lods
leave
pop
scas
cmpsl
dec
jle
xchg
xor
pop
cmpb
xchg
jg
mov
movb
fistps
add
or
fsubrl
xchg
repnz
pop
and
and
pop
pop
sub
cmp
mov
sbb
cltd
add
std
pop
pusha
cs
arpl
cltd
jb
jecxz
dec
mov
cmpsb
aam
or
add
ljmp
fldcw
or
out
cmp
adc
bound
xchg
xor
stos
add
and
in
dec
mov
inc
fstpl
lcall
pop
jbe
test
inc
das
sar
add
cld
gs
push
add
pop
mov
cld
jl
or
add
xchg
pop
add
outsb
xchg
and
sbb
lahf
push
fisttpll
loop
cs
lds
cmp
fs
loop
shll
in
cmc
pop
leave
arpl
je
jno
cmp
subl
mov
and
pusha
scas
les
or
add
inc
pop
sub
cs
leave
and
cltd
push
pop
push
mov
jecxz
popa
jno
mov
pop
xchg
pop
pop
sbb
add
popf
rcll
dec
or
mov
jbe
inc
xor
jecxz
cmpl
cli
js
jb
sub
xor
into
fildl
icebp
cmpsl
lahf
aaa
push
cmp
int
das
imul
mov
mov
and
mov
out
push
xchg
int3
test
std
lods
insb
jl
pushf
pop
jg
jbe
push
pop
jp
pop
mov
in
test
aas
aaa
decb
out
sbb
jmp
insl
cmp
icebp
imulb
sub
add
xchg
enter
xor
push
or
imul
lods
mov
fstps
sti
jb
dec
inc
push
sbb
inc
pop
jle
pop
sub
inc
add
cmp
jno
clc
fisubrs
hlt
push
ljmp
scas
cmpsb
inc
je
imul
pop
shll
daa
ljmp
xchg
test
cltd
xchg
push
popl
mov
lcall
frstor
mov
push
divb
pop
mov
and
lahf
test
lret
jmp
nop
fdivl
pop
pop
fidivs
adc
sahf
dec
ds
pop
push
jp
clc
out
mov
cld
jmp
fidivl
sbb
jb
in
ret
adc
jmp
fld
stc
sub
in
fcomi
incb
iret
rcll
pop
mov
repz
mov
sbb
mov
pop
xchg
into
add
adc
roll
dec
cld
fldcw
aaa
out
pop
mov
dec
jne
mov
fistps
lock
cli
pop
nop
dec
xor
mov
add
pop
stos
scas
mov
mulb
mov
faddl
cmp
dec
daa
ficompl
call
mov
test
mov
sbb
mov
cmpsb
add
mov
hlt
mov
mov
ja
mov
rcl
pop
insb
sub
gs
pop
fisubrs
cmp
adc
scas
fs
outsl
out
std
testb
ja
mov
sbb
cld
fucomp
sub
xchg
push
or
mov
xchg
pushf
push
aas
std
mov
dec
repz
mov
sbb
data16
add
adc
sbb
xchg
call
sub
fnstenv
or
or
cmp
add
je
lods
scas
cmpsb
js
fdivs
inc
mov
idiv
jmp
jge
xchg
mov
dec
adc
pop
ljmp
decl
sub
mov
arpl
push
lock
int3
jecxz
mov
lret
or
pop
mov
push
and
inc
out
test
dec
sub
stos
and
push
jmp
sub
xlat
fsubrp
sti
xchg
dec
movsb
inc
fimull
push
pop
std
mov
push
popf
stc
mov
add
and
sahf
leave
out
enter
pop
and
pop
or
scas
aas
lds
scas
aad
or
negl
lods
scas
shr
inc
add
es
adc
cmp
test
add
insl
mov
add
les
add
push
xor
sbb
adc
fnstcw
test
rcll
and
popf
mov
dec
dec
push
xor
cli
cmc
push
frstor
sbb
out
fmull
inc
sub
mov
addr16
icebp
nop
roll
lods
and
mov
ja
cmpsl
or
push
stos
jae
fisttpll
fbld
mov
mov
or
cmp
pop
sbb
mov
pop
dec
fdivrp
cmc
notb
test
leave
movsb
sti
mov
mov
les
jecxz
cmc
daa
enter
or
int3
mov
xchg
xchg
mov
adc
in
jmp
into
fistps
xchg
mov
push
loope
and
inc
fldenv
pop
xchg
cli
lcall
arpl
push
mov
add
pop
dec
mov
pop
jle
sub
mov
dec
jne
inc
adcb
mov
inc
and
loope
or
pushf
sub
sbb
test
xorl
and
pop
sub
arpl
imul
xor
mov
aam
and
mov
repz
addl
test
mov
lea
cmc
call
stos
imul
mov
nop
cmc
not
test
test
xchg
in
mov
add
test
adc
adc
lods
loope
dec
imul
or
roll
mov
cmpsb
out
data16
test
dec
sbb
mov
pop
inc
data16
and
mov
cmc
dec
xorb
pop
add
pop
xchg
pop
sti
int
fmull
push
fldenv
arpl
add
popl
push
jg
pop
aam
xchg
or
imul
inc
out
fistps
movl
mov
in
jno
insb
std
add
aam
stc
cmpsl
enter
inc
inc
mov
sub
bnd
and
sbb
mov
ss
stc
mov
movb
aad
xlat
pop
aaa
xchg
test
fwait
mov
add
fldl
adc
mov
xchg
jecxz
int3
out
lds
adc
movsl
fnstsw
sbb
stos
iret
fisttpl
lret
ret
jmp
sbb
xchg
cld
cmp
mov
jbe
pop
bound
in
call
or
push
cmpsb
cli
movsb
mov
int
push
sti
push
andl
sahf
pop
sub
rol
loope
sti
push
or
addl
push
lahf
ret
lahf
mov
mov
shll
mov
xchg
sbb
inc
out
adc
push
pop
mov
loopne
cli
adc
inc
stos
lret
lret
shrb
aad
ret
pop
testb
ljmp
in
mov
lahf
cmpsb
inc
sahf
mov
test
out
sar
mov
in
xlat
clc
stc
jne
out
mov
mov
mov
repz
dec
inc
out
jns
fidivs
das
lea
mov
sbbl
jb
xchg
xor
adc
out
pop
test
xchg
testl
out
pop
mov
aaa
push
out
cld
in
mov
in
pop
or
xor
outsl
sahf
inc
ljmp
dec
aaa
psubd
repz
ljmp
ficompl
call
mov
imul
mov
and
rclb
cmp
dec
in
fistps
cmpsl
adc
rorb
mov
es
adc
adc
cld
mov
daa
fisttpl
aam
mov
push
dec
xchg
jle
ja
mov
std
or
das
test
aad
add
push
push
ljmp
mov
or
pushf
jns
sbb
idivb
push
rcrl
stc
ss
cmpb
in
mov
out
stos
inc
iret
mov
jnp
sub
and
pop
roll
adcb
or
cmc
test
xchg
popf
ficompl
rorl
jl
pop
ljmp
inc
mov
mov
mov
mov
sbb
ret
jmp
mov
jbe
mov
push
lahf
test
pop
add
mov
aam
mov
lds
int3
sub
jg
add
popf
cld
filds
loop
adc
and
add
lea
mov
or
into
cmc
xchg
push
stos
mov
dec
test
cltd
stos
jbe
fnstcw
arpl
adc
stos
in
push
call
lea
and
jmp
xor
cmpsl
pop
dec
adc
push
pop
pop
sbb
cmp
aas
add
inc
aas
fwait
add
pop
mov
mov
test
xor
imul
fistpll
shll
sbb
ja
fs
mov
loope
push
adc
sahf
in
test
xor
xorl
notb
adc
popa
mov
iret
pop
lret
mov
push
fistl
push
outsl
cmpsl
push
sbb
sbb
rorl
pop
mov
push
test
or
pop
mov
int3
pop
mov
fstpl
lods
cmc
mov
push
insb
mov
out
aam
xor
mov
popf
incl
movb
shr
sub
aad
xor
push
rolb
dec
into
mov
jge
mov
cmpsl
sbbb
rcrb
int
cmp
mov
std
lcall
test
adc
xorl
adc
mov
into
fisubs
xor
xchg
rcl
scas
mov
arpl
mov
and
stc
popf
pop
int3
or
sahf
mov
adc
cld
into
or
sbb
enter
daa
pop
mov
dec
jle
dec
dec
jmp
pop
addl
lods
xchg
mov
aas
xor
jp
push
adc
int
ljmp
push
cmp
pusha
adc
pop
dec
xchg
inc
xor
into
sahf
pushf
stos
pop
sahf
sbb
sbb
adc
out
mov
aaa
push
cmp
mov
std
fistps
mov
push
cmp
dec
scas
insl
fdivrl
jmp
rcrb
jp
into
push
aad
mov
ud1
cmp
out
cmp
mov
and
pop
fistps
sbb
push
in
aam
addr16
adc
sti
stc
pop
inc
orl
lods
fsts
pop
push
and
sbb
push
cmpsl
data16
sub
cmpsl
mov
xchg
scas
fstpl
mov
int3
xor
fwait
mov
mov
rcrl
fildll
shll
mov
inc
stos
fsubrs
pop
mov
xor
push
xchg
dec
or
add
test
sbb
arpl
xor
xchg
mov
mov
or
cmc
xchg
inc
test
sbb
punpckhwd
fimull
push
negb
mov
fstps
insl
sbb
push
rol
shl
mov
pop
add
pop
popa
jg
push
fcmovu
addr16
ja
movsb
int3
pop
icebp
popa
mov
fidivrs
dec
and
outsl
cwtl
xor
pop
add
repz
push
lods
push
std
outsl
sahf
pop
jnp
aad
mov
jnp
xor
cmc
mov
and
loop
pop
push
rolb
cmpsl
pop
ffree
add
ret
scas
sub
mov
dec
mov
sub
add
fdivrs
pop
fucomip
pop
cmp
std
rcl
jne
jge
mov
dec
outsl
and
ret
mov
push
pop
and
jl
add
push
xor
xor
lahf
subl
xor
lret
lret
test
lods
push
leave
jns
scas
push
dec
pop
insl
or
leave
negl
mov
ds
push
stos
xor
fucomip
or
lret
jmp
mov
mov
cmpsb
lahf
leave
js
sub
add
xchg
lcall
sub
lock
aam
ficomps
lret
sahf
add
mov
pop
loopne
cltd
ja
and
cmp
fisubrs
cmp
pop
push
add
js
sub
insl
push
mov
mov
jmp
out
arpl
fs
int3
push
cltd
cmc
add
xchg
dec
adc
jbe
inc
std
adc
jbe
pop
push
jno
cmp
push
aaa
xchg
sub
xchg
mov
mov
lods
lea
rcrl
movsb
jp
dec
mov
fmuls
xchg
xchg
xor
pop
mov
xor
arpl
sbb
stos
pop
mov
pop
call
pop
pop
xchg
push
jmp
xchg
xor
mov
dec
lods
rorb
icebp
repz
push
notl
repnz
pop
dec
jg
leave
cmp
aas
stc
fisubrs
mov
xor
add
iret
jl
sbb
fstpt
lcall
xchg
addb
push
jo
cmp
lahf
shlb
ss
pop
popa
cltd
sbb
aas
and
enter
pusha
cmp
mov
jmp
hlt
jo
es
scas
test
stc
mov
jno
xchg
jae
add
push
cwtl
fs
jnp
mov
jmp
jmp
das
jns
iret
add
push
push
mov
xor
hlt
cmp
pop
imul
cmpsl
xor
in
sub
jnp
scas
je
jne
dec
sahf
sbbb
loopne
ss
shlb
pop
jge
sub
mov
pop
mov
cld
inc
pop
sbbl
inc
subb
jne
mov
or
inc
addr16
out
fstpt
sub
mov
pop
mov
mov
mov
in
mov
ja
dec
jle
pop
pop
push
mov
cmp
int3
sbb
inc
in
out
lods
stos
jmp
inc
lods
cmp
ficoms
jbe
jle
cs
mov
add
sub
inc
xchg
push
sub
adc
and
gs
das
not
jg
ficoml
push
push
dec
stos
xchg
bswap
dec
cld
bound
pop
aas
xchg
adc
ljmp
leave
fnstenv
out
rorl
and
xchg
sub
lcall
fistpll
mov
xchg
lds
in
pop
loopne
mov
sbb
xchg
xor
out
xchg
xchg
roll
cs
mov
cmp
shlb
mov
clc
imul
out
dec
xor
lret
dec
dec
cld
dec
pop
push
aam
in
sub
adc
pop
jecxz
lret
mov
pop
and
mov
xorl
mov
iret
xchg
mov
aas
insl
loope
pop
aam
scas
or
pop
mov
daa
pop
sbb
inc
jnp
mov
jg
scas
pop
in
ljmp
adc
pop
pop
push
xchg
repz
loope
arpl
or
pop
and
push
sub
adc
mov
in
sub
data16
arpl
fstl
notb
jmp
js
aaa
cmpsb
test
inc
mov
lcall
dec
adc
leave
incl
pop
sub
xchg
mov
out
inc
stc
shl
data16
lea
adc
or
sub
jnp
inc
sbb
in
sub
orl
mov
mov
mov
iret
adc
or
in
or
daa
adc
mov
pop
adc
popf
mov
and
cltd
and
mov
mov
inc
jle
and
pop
xchg
mov
lea
pop
shl
or
jne
std
pop
xchg
adc
jnp
loopne
pop
arpl
ss
mov
mov
mov
repnz
out
sbb
sbbb
jmp
sahf
les
lods
aaa
iret
test
cwtl
imull
movsl
cmc
add
push
stos
xchg
inc
test
rcll
mov
or
adc
mov
jg,pn
pop
jne
mov
xor
popf
sub
pop
adc
jp
das
inc
mov
sbb
and
mov
add
inc
xchg
nop
cmp
testl
jns
ss
fidivs
jle
std
lock
push
sub
test
into
movsl
jns
les
pop
test
pop
mov
test
outsl
pop
lock
mov
push
sarl
das
and
dec
lock
loope
imull
mov
mov
out
sti
les
aaa
jne
inc
jp
jle
cltd
pop
push
add
pop
push
mov
je
call
fsubrs
or
jnp
je
or
stos
mov
jge
subl
lret
ret
fadds
cmpb
mov
xor
cltd
adc
push
and
mov
ret
pop
mov
inc
outsl
mov
sub
pop
test
idiv
cld
popf
mov
std
mov
out
mov
pop
fnstcw
in
sub
add
incl
arpl
adc
div
pop
cmp
shl
out
pop
lcall
push
subb
mov
inc
sub
outsb
dec
sub
aas
lds
jp
sti
cmp
ja
inc
jg
jmp
lods
ret
imul
les
sbb
inc
or
xchg
jle
test
pop
sbb
add
mov
inc
ret
sahf
jle
mov
std
add
mov
cld
or
lea
subb
push
int3
bound
cmp
xor
out
loop
mov
cs
pop
lret
das
cmpb
adc
and
cmpsb
test
cmp
and
sbb
out
insb
xor
arpl
nop
arpl
fnstcw
mov
cmpb
jle
mov
ffree
mov
push
arpl
mov
mov
cmp
mov
aas
cmpsl
out
rclb
fcomip
arpl
stos
les
mov
push
ds
outsl
js
pop
cmp
xchg
dec
add
sbb
clc
negl
mov
xchg
cld
or
movsl
in
leave
jmp
jge
lock
lea
ret
mov
sbb
inc
cmpsl
aad
mov
push
out
jbe
dec
inc
ljmp
int
or
ja
jl
adc
leave
add
repnz
into
dec
shr
jle
fldcw
into
pop
mov
movsl
fcmovbe
imul
into
add
dec
jns
sbb
xabort
aam
in
add
and
sbb
and
stos
cmc
test
adc
arpl
movsl
sbb
dec
jmp
adc
mov
je
rcrl
fdivrl
ljmp
arpl
iret
ljmp
xor
jo
mov
out
loope
ret
sub
lret
inc
fcoms
jg
imul
stos
adc
mov
sub
push
add
inc
jecxz
jne
js
mov
sbb
jg
push
dec
iret
cmp
jecxz
stos
sbb
outsl
aas
add
jmp
push
and
repnz
enter
jns
imul
mov
pop
inc
and
jg,pt
mov
mov
jle
sbb
jg
out
mov
sbb
push
stc
std
adcb
and
ss
mov
mov
mov
fldt
jb
xchg
sti
or
and
out
mov
jns
jnp
push
loop
pop
xchg
lret
nop
jne
mov
cli
les
lcall
daa
cmpsl
outsl
push
fdiv
scas
scas
stos
outsl
clc
push
pop
fdivl
jae
mov
mov
arpl
xor
and
xor
push
xor
rolb
inc
lock
xchg
push
mov
mov
mov
dec
mov
sbb
je
mov
test
lea
int
repz
mov
cmpsl
out
roll
jbe
test
pop
lahf
pop
pop
cmp
sbb
xor
jecxz
iret
push
scas
and
movsb
or
dec
and
pop
stc
jg
es
ds
int
adc
push
fnsave
fiaddl
push
mov
insb
cmpsl
loope
inc
cmpsb
mov
leave
mov
fdivrs
dec
pop
and
or
aas
push
push
jmp
mov
push
xchg
mov
push
mov
aad
jmp
dec
sti
xor
push
inc
xlat
add
push
out
daa
ja
scas
pop
test
jle
js
jmp
test
cltd
rcll
arpl
sbb
cmp
insb
test
xlat
push
pop
or
sub
loop
push
fdivs
out
icebp
icebp
test
mov
mov
xchg
fstpl
movsb
out
les
xor
mov
sbb
or
pop
xchg
mov
push
push
jo
pop
xor
or
aam
mov
in
imul
aaa
lods
in
cmpsb
adcb
icebp
les
test
xor
sbb
divb
lea
pop
dec
fisttps
imul
xor
push
mov
cli
xchg
pop
imul
movd
or
pop
pop
mov
iret
or
lock
cli
sub
mov
xchg
shlb
xchg
cmpsb
inc
and
iret
and
hlt
adc
jns
pop
addr16
push
das
or
pop
adc
or
popf
movsb
pop
std
xor
int3
loop
sbb
adc
mov
out
je
data16
fstps
stc
xchg
mov
push
cmp
sbb
push
loop
in
outsb
adc
xor
lret
dec
pop
rclb
ret
dec
pop
sahf
sub
adc
cmc
das
push
sahf
adc
test
xchg
mov
cmp
xchg
mov
and
and
mov
or
cwtl
cmp
aam
adc
js
jmp
push
lods
inc
stos
addr16
xor
daa
divl
mov
xor
dec
pop
jae
arpl
pop
jle
lea
or
or
divb
fstp
fstps
xchg
cmp
mov
out
loope
imul
jp
je
push
pop
xchg
add
gs
out
das
pop
call
mov
pushl
push
movsb
je
fstpl
sub
jb
lea
or
fiadds
fnstenv
arpl
mov
imul
movsl
xchg
subl
aas
fbld
adc
push
test
adc
test
cmp
shll
cwtl
mov
sub
cli
pop
push
sub
jecxz
mov
rorl
rcl
mov
or
cmc
jecxz
xchg
mov
scas
movsb
jle
xchg
imul
sub
and
pop
mov
iret
mov
das
cmp
add
jmp
fstps
faddl
jg
lahf
and
mov
jb
or
repnz
jmp
xchg
pop
sbbl
adc
popa
test
fsubrl
mov
xchg
and
loope
jp
mov
xchg
or
xlat
mov
arpl
push
lods
pop
jbe
lods
pop
xchg
aaa
sub
pslld
inc
sbb
push
test
flds
mov
ret
mov
fnstenv
fstpl
sub
daa
ljmp
adc
pop
inc
ds
mov
pushf
fistps
push
stc
shrl
xor
mov
aad
loopne
in
xchg
test
aaa
cli
adc
mov
lcall
mov
adc
popf
rol
jmp
add
pop
mov
imul
rcr
adc
int3
xchg
fcmovnu
sbb
test
cmc
stc
cmc
inc
add
push
movsb
dec
dec
movsb
pop
adc
scas
sbb
in
stos
inc
add
ljmp
and
lea
es
lahf
and
ljmp
and
ds
fistl
mov
push
jl
push
xor
inc
dec
xchg
rclb
mov
add
inc
int
mov
add
loop
push
movl
add
addr16
hlt
mov
inc
ja
pop
icebp
adcl
cmp
mov
fisttpl
jno
lea
or
aaa
sbb
js
mov
mov
dec
fisubs
mov
pop
add
cmpsl
test
jle
dec
lahf
decb
mov
ss
sbb
incb
insb
inc
jg
or
add
ficompl
adc
into
aaa
outsl
dec
xchg
add
jl
leave
mov
pop
imul
fsubrs
and
ja
sub
xchg
arpl
sbb
test
fistl
sarb
pop
das
int3
push
int3
popa
aas
mov
nop
lods
std
idivl
inc
or
out
imul
jne
negl
out
cmpsb
or
rolb
adc
cmp
mov
push
mov
adc
in
es
sbb
cmpsl
mov
repz
sbb
jge
ljmp
mov
lret
lock
enter
push
aad
sub
scas
push
les
xor
add
push
call
inc
mov
jp
mov
mov
or
sahf
iret
ja
imul
add
iret
sub
sbb
ror
in
xchg
mov
push
cld
pop
arpl
jge
or
cli
add
xchg
das
or
sahf
jp
loope
or
xor
add
cmpsl
test
xchg
cld
fs
rolb
inc
mov
out
rcrl
stos
cltd
add
movsb
call
mov
cwtl
fnstenv
jp
xchg
pop
shll
sbb
sbb
jns
shrb
ds
shrb
pop
mov
aam
or
in
cs
inc
xlat
ficoms
cmp
push
adc
fstps
or
leave
and
jb
cmp
add
fistl
fldt
and
sub
lds
fdivrp
mov
inc
arpl
pop
mov
ja
xlat
iret
pop
lahf
mov
adc
pop
mov
es
xor
pop
xor
adc
mov
mov
paddusw
add
stc
lahf
stos
pop
popa
cmpsl
mov
fsubl
into
xor
sbbb
push
cld
push
shll
iret
nop
aaa
pop
cmp
rcr
or
jnp
out
xchg
inc
int
arpl
loop
rcll
mov
mov
mov
and
lds
filds
sar
or
scas
jne
mov
inc
sbb
jnp
out
mov
dec
insl
pop
aam
out
jne
jp
push
and
push
mov
mov
adc
mov
cwtl
ljmp
and
sbb
jo
mov
ret
push
cmp
in
and
out
push
int
pop
aas
int3
xchg
jg
inc
push
sub
sbb
inc
outsb
outsl
push
int3
out
loop
fldcw
push
xor
in
push
test
xor
aam
xchg
out
and
push
lret
in
pop
pop
pop
add
push
mov
mov
mov
lods
add
add
lods
mov
pop
pop
mov
jge
outsb
call
xor
negl
push
xor
inc
mov
add
mov
push
test
lods
lea
daa
stos
add
pop
pop
mov
lret
aas
mov
inc
sbb
arpl
jmp
sub
mov
popf
insl
movsb
cmpsl
cld
jl
test
and
xor
add
xor
adc
js
inc
pushf
push
aad
sbb
cmp
js
aam
mov
out
iret
inc
rcrb
mov
or
cmp
icebp
add
push
wbinvd
in
cmpsl
pop
clc
sbb
xchg
fsubrs
mov
push
fs
push
cmpsl
sarb
popa
cs
adc
cmp
cmp
cmp
adc
imul
mov
rcll
or
leave
mov
pop
in
sub
nop
pop
inc
bound
mov
test
loopne
lock
inc
and
jl
dec
pop
adc
mov
cmp
cmc
mov
mov
sub
or
cmp
imul
push
mov
xchg
cld
lea
addl
mov
jecxz
test
jmp
add
movsl
inc
lea
mov
and
mov
mov
add
insl
je
pop
daa
dec
pop
pop
pusha
rcrb
lds
imul
adc
stos
in
arpl
mov
lret
mov
mov
popf
sub
mov
dec
xor
fbstp
pop
filds
jl
les
pop
shll
mov
or
sbb
pushf
and
pop
xorl
hlt
xchg
or
mov
add
jo
pop
das
mov
ss
mov
inc
and
mov
fildl
inc
xchg
rorb
push
jmp
or
loop
outsb
xchg
arpl
lock
insl
add
aas
daa
sbb
rorl
clc
sahf
out
add
std
out
test
daa
mov
mov
in
adc
scas
hlt
push
pop
inc
rcr
sbb
es
iret
sbb
pop
cmpsb
das
push
xchg
insb
mov
or
loop
outsb
dec
pop
pusha
push
mov
sbb
mov
div
pop
lods
fdiv
push
or
jg
pop
cmpl
in
xchg
pop
add
mov
mov
cmp
sub
and
sub
pop
mov
punpckhbw
mov
inc
sarb
mov
in
mov
rclb
gs
hlt
xor
sti
repnz
sub
shlb
push
push
insl
xchg
daa
xchg
lahf
sbbb
cld
sub
popa
jns
mov
add
inc
mov
mov
jg
mov
add
movsl
cmp
loopne
xchg
mov
jmp
aad
sub
push
popf
rorl
in
movsb
sbb
push
add
mov
push
ja
lret
into
pop
xchg
push
push
shlb
insl
loope
pop
adc
push
aad
sahf
pop
sbb
insl
xchg
jge
test
jge
data16
insl
stos
or
into
add
or
mov
icebp
pop
lahf
and
fs
fstps
imul
sbb
cwtl
mov
dec
jno
jle
ljmp
jmp
xchg
js
into
popa
sbbl
pop
pop
test
dec
gs
jns
xchg
xchg
in
xor
fstl
pop
inc
and
arpl
cmp
xchg
in
imul
or
aas
mov
push
cmc
cmp
pop
out
mov
push
cmp
cmpsb
sub
push
pop
jbe
test
jle
xlat
mov
es
pop
outsl
repz
clc
xor
pmulhw
mov
fwait
xor
adc
cmp
push
cld
scas
push
pop
push
pushf
and
cmpsb
jns
shlb
inc
inc
popa
test
lahf
jb
mov
std
lods
push
xor
cmc
add
add
mov
add
popa
mov
inc
mov
mov
xlat
scas
lock
add
js
inc
inc
mov
cmc
clc
add
ss
clc
push
xchg
lods
and
outsb
ds
xor
fsubl
sub
push
scas
loope
mov
std
popa
and
dec
push
or
rorl
icebp
mov
aaa
and
adc
and
pop
std
xchg
jb
mov
lds
push
cli
mov
push
sbb
push
dec
push
fcmovnb
js
mov
jg
add
jle
fldenv
add
fcompl
movsl
test
pushf
cmp
imul
rclb
jns
test
pop
imul
adc
mov
jno
stc
clc
das
mov
insl
xchg
negb
cwtl
push
fistps
in
adc
xor
imul
aaa
pushf
out
adc
adc
stc
lea
hlt
sbb
push
clc
cmc
jge
push
scas
mov
test
and
mov
sti
scas
inc
cli
jae
dec
stc
xchg
pop
cmpsl
mov
dec
stc
clc
into
ret
rclb
xchg
data16
out
arpl
pop
loopne
xorl
mov
pop
mov
rcrl
out
mov
dec
fstl
add
leave
adc
fisubrs
in
repnz
sbbl
xchg
jg
in
notb
push
add
dec
js
jb
out
rorl
add
dec
push
flds
jl
cmpsb
ret
xchg
or
mov
psrlw
test
aas
mov
jge
stos
mov
fldcw
rcrb
in
xchg
loopne
pushf
jle
and
mov
mov
pop
aaa
add
ds
test
call
sbbl
ret
jne
jae
sti
rolb
mov
insl
stc
sub
push
jo
pop
jmp
pop
sub
cmp
sarl
cmc
xchg
aas
sarb
add
repz
cmp
fcmovnb
pop
cs
mov
dec
pop
scas
jo
push
lea
clc
pop
mov
mov
ljmp
int
movsb
mov
xor
push
jne
fmuls
hlt
inc
int3
mov
dec
repnz
aaa
xor
push
adc
adc
loop
mov
inc
fsubrs
fdivrp
pop
xor
add
mov
xor
cmpsl
or
aas
movsl
das
ret
std
setl
cld
out
std
pop
mov
mov
fs
lds
push
jle
inc
dec
enter
xchg
fwait
clc
mov
pop
rcrb
shlb
inc
mov
sbb
pop
ja
mov
mov
pop
insl
test
clc
pop
fstps
stos
xor
jecxz
mov
jne
push
or
dec
xchg
adc
sbb
es
ja
fisttpll
repz
out
mov
pop
mov
ss
int3
pop
mov
push
out
sub
je
push
cmp
mov
pop
aaa
sbb
pop
cltd
int3
mov
fidivl
add
ss
dec
and
pop
xchg
inc
sbbl
repz
aas
adc
pop
int
push
and
dec
mov
cmp
outsb
mov
pop
orb
mov
mov
mov
xlat
sub
push
push
add
jns
mov
in
add
dec
mov
add
daa
jbe
mov
in
out
movsl
filds
icebp
pop
test
scas
sahf
fnstenv
clc
dec
iret
test
mov
mov
push
xchg
pushf
out
pop
hlt
dec
jl
mov
push
icebp
addr16
mov
inc
call
lds
ss
rolb
imul
cli
mov
into
aas
out
cmpsb
mov
in
sub
inc
dec
mov
lods
cmp
int3
sarl
and
adcb
mov
ljmp
fwait
xor
fs
scas
sbb
adc
jb
js
outsl
push
mov
cltd
scas
dec
xor
inc
leave
adc
cmovs
pop
push
adc
xor
mov
std
jmp
sub
stc
xor
inc
pop
jno
stos
jl
jnp
outsl
cmp
iret
pop
sub
mov
ret
add
test
cld
insl
popf
out
rcr
enter
inc
jge
pop
jmp
leave
cli
jns
mov
in
mov
ss
pop
and
dec
in
aam
mov
cmp
sahf
movsb
add
pop
enter
fcoml
fninit
addr16
mov
add
mov
imul
pop
pop
imul
std
bound
sub
pop
sbb
add
sub
mov
subb
dec
mov
stos
jnp
aaa
rolb
cwtl
or
inc
test
fcmovb
ja
push
jbe
cmpb
sti
es
ss
mov
mov
dec
lods
out
push
repz
clc
cmc
outsl
sbb
ret
xchg
inc
sarl
pop
pop
lea
sahf
sbb
xor
sub
jmp
push
cmp
add
pop
push
mov
ror
mov
out
pop
add
adc
add
into
pop
mov
fs
outsb
or
jl
pop
push
test
aam
add
pop
shll
mov
stc
xchg
mov
xchg
cltd
mov
rcrl
mov
jnp
sub
cs
sarl
add
iret
sub
xor
mov
push
enter
arpl
addr16
int
mov
lea
iret
add
scas
sub
mov
push
sbb
add
and
xor
mov
dec
out
mov
mov
sbb
loope
push
xor
and
decl
iret
sbb
std
cmpsl
jns
mov
add
sub
or
pop
orb
das
std
out
pop
fldenv
add
xchg
sub
pop
mov
dec
push
pop
fbld
pop
xchg
outsl
xchg
arpl
rcrb
cwtl
lds
inc
mov
rcll
mov
pop
xchg
fisubl
iret
and
mov
aas
pop
mov
jne
jg
mov
pop
test
cmpsl
mov
outsb
fiadds
les
dec
cmp
pop
nop
mov
inc
lods
and
dec
dec
xchg
daa
movsl
insl
mov
ja
jg
xchg
cmp
int3
sub
jne
stos
bound
add
pop
fcomps
mul
fwait
lcall
push
test
test
shl
cmpsl
dec
pusha
pop
adc
fisubrl
xchg
lea
cmp
mov
fistpl
xlat
adc
jle
pop
jg
stc
push
xor
jge
sahf
scas
xchg
cmp
mov
mov
cmp
cmp
inc
arpl
jge
xchg
ss
cmpsl
push
and
or
mov
mov
and
or
andb
xchg
ret
negl
scas
pop
jbe
arpl
mov
pop
mov
cmpsl
ret
in
adc
adc
int
movsb
dec
data16
outsb
lea
lahf
aad
lcall
add
sarb
sbb
mov
iret
cmpsb
pop
dec
mov
sbb
dec
push
in
jge
cmp
lahf
faddl
xor
iret
pop
mov
mov
mov
sbb
lods
add
fcmovbe
xchg
adc
inc
xor
out
mov
cli
icebp
rcrb
addr16
and
mov
inc
rcr
and
inc
pop
aaa
not
clc
cld
add
nop
lds
xchg
iret
inc
xchg
pop
or
inc
pop
orb
mov
inc
lock
inc
xchg
xchg
stc
inc
push
inc
xchg
push
mov
mov
das
push
inc
leave
cmp
test
lods
aaa
add
dec
add
add
inc
xchg
push
loop
push
negl
xchg
inc
aam
add
add
pop
movsl
out
mov
xchg
mov
inc
xor
outsl
sbb
divl
popf
ljmp
ficompl
inc
mov
sub
fcomps
mov
sti
out
adc
pop
out
pop
shrb
pop
cmp
sbb
push
cmpsl
dec
jae
jns
xchg
ja
out
adc
sub
aas
sub
pop
cmp
or
pop
adc
add
jle
outsl
xchg
push
dec
xchg
fstps
cmpsl
dec
dec
sub
cwtl
rclb
cmpsb
decb
in
xor
cmp
out
inc
inc
pop
jnp
or
andl
divps
imul
adc
pop
jl
mov
pop
ror
pop
add
sbb
jne
xchg
pop
push
add
shrl
lea
fisubrs
lds
and
stc
mov
subl
push
icebp
xor
add
push
add
cwtl
fcmovnb
nop
sub
pop
pop
lret
dec
xor
mov
les
or
xor
insb
add
js
push
out
or
dec
jg
and
stos
jle
lea
mov
pop
pop
and
push
push
or
aas
mov
inc
repz
popf
dec
shl
xchg
test
cmc
out
cld
and
inc
iret
sahf
pop
adc
sub
mov
pop
pop
pop
sub
ret
hlt
repz
cli
or
dec
pop
xchg
and
mov
push
and
cltd
sub
dec
jno
mov
into
mov
test
xchg
or
das
inc
call
ja
mov
lahf
leave
add
mov
mov
ret
sarl
aad
sub
jecxz
rol
xor
insb
lods
mov
iret
push
bnd
addr16
or
pop
pop
out
dec
test
repnz
insl
push
negb
inc
rcr
add
sbb
jle
in
push
arpl
or
rorb
cmc
js
or
pushf
mov
cld
pop
loopne
jae
cmpsl
in
add
or
or
adc
loop
pop
rclb
hlt
stc
hlt
xchg
sbb
lods
cmc
out
jg
fnstsw
mov
dec
pop
jp
adc
cmpb
mov
xor
jnp
cmp
lea
xor
mov
jmp
and
xchg
push
xor
popf
or
mov
int3
mov
mov
pop
fsubs
push
xor
popf
vpaddd
or
call
std
movsl
in
fsubl
cs
dec
cmp
arpl
push
mov
nop
inc
push
mov
mov
sub
stos
jecxz
in
dec
push
adc
pop
fcmovu
cmc
test
loope
xor
jl
cmp
pop
mov
imul
test
rcr
cltd
xchg
mov
mov
jge
pop
cmpl
pop
icebp
jno
fs
and
ret
lea
and
cmc
movsb
fidivl
icebp
pusha
xor
out
addb
sbb
lcall
sar
adc
lret
iret
repz
outsl
push
xor
mov
scas
xor
jle
movsb
ret
xor
push
push
repnz
lea
leave
stc
iret
mov
jp
add
mov
push
xor
mov
aaa
push
test
mov
mov
movsl
adc
pop
je
loope
dec
push
sub
mov
sbb
jb
ja
cmpsl
fbstp
cmp
into
imul
mov
or
mov
fsubs
ret
pop
cmp
pop
mov
aam
sti
push
pop
call
flds
pusha
mov
lods
sti
pop
and
adc
push
jo
leave
je
data16
cwtl
dec
adc
and
in
pop
aad
xchg
adc
sbb
pop
pop
test
push
or
jg
dec
stc
gs
sub
pop
addl
into
pop
subb
jg
popl
mov
jne
pop
lret
arpl
je
je
adc
jmp
or
int3
insl
inc
ficomps
cmc
jle
jle
insl
inc
sbb
scas
add
cld
inc
pop
and
loope
sbb
mov
sub
xchg
mov
mulb
adc
add
add
test
ss
fistps
pop
aaa
into
cld
xor
clc
pop
or
add
add
insl
mov
clc
sbb
xor
andl
imul
sbbl
inc
add
dec
fwait
mov
push
mov
ret
pop
jne
lret
std
cwtl
sbb
jmp
pop
fidivs
shlb
loope
fdivrl
mov
shrl
pop
xor
stc
sti
sub
and
mov
push
jne
push
inc
fdivrs
lea
icebp
leave
fisubrl
mull
jmp
pop
mov
mov
adc
adc
jns
sarb
jge
push
loopne
xchg
stos
mov
xor
sbbb
pop
arpl
in
fcmovbe
xchg
stos
bound
es
jae
pop
jbe
sbb
mov
sarb
mov
sbb
dec
mov
jecxz
push
shlb
fistpl
or
aam
dec
or
xlat
idivl
mov
rcr
test
dec
data16
mov
cltd
test
leave
and
mov
ljmp
jmp
mov
fucom
jg
int
decl
and
mov
or
dec
lret
rorb
push
inc
push
jno
sar
sub
xchg
pop
jge
lods
loopne
daa
stos
pop
inc
mov
and
jmp
movb
pushf
xchg
mulb
addl
mov
inc
rorl
in
or
dec
and
lock
pop
rcr
xor
mov
jge
mov
fucomi
sbb
pop
imul
xor
cmp
ja
fstl
mov
loop
sbb
pop
jbe
add
pop
xchg
leave
pop
hlt
fldt
ret
int3
pop
or
mov
repz
cmp
pushf
or
stc
scas
sbb
int
dec
sbbl
les
negl
loopne
test
outsl
pop
fs
dec
stc
mov
mov
aaa
pop
mov
lods
sub
lret
adc
cmpsb
jle
daa
stos
rcr
inc
pop
cld
push
xor
or
repz
in
nop
jmp
shll
fcmovne
cmc
adc
mov
inc
jle
sahf
xchg
mov
test
or
mov
rcll
aaa
iret
ret
les
mov
fwait
mov
mov
inc
lahf
test
push
jne
bound
pop
inc
rorb
jle
sbbb
or
cmp
add
pop
shlb
or
add
out
mov
pop
cs
add
call
fbld
sbb
stos
movsl
fldl
pusha
push
add
adc
inc
addr16
enter
mov
in
out
sub
xor
andl
das
les
xchg
pop
aaa
cli
es
mov
jns
mov
and
shrb
pop
jbe
jl
sbb
sub
repz
test
rcll
add
clc
scas
cmp
stos
arpl
call
mov
sub
inc
pop
imul
jp
ficompl
push
or
dec
push
mov
xor
iret
pop
fisttpl
movsl
pop
fnclex
idiv
mov
in
pop
int3
and
or
or
jle
arpl
pop
insl
inc
add
pushf
add
sbb
xchg
fisubl
rclb
pop
ficoml
mov
sti
pop
push
test
je
add
loope
out
fisubl
out
out
pop
sub
push
int
and
int
add
fs
stos
js
mov
push
aas
fistps
sub
movb
xchg
adcb
pop
sbb
sti
or
inc
outsl
popl
mov
push
ja
or
xlat
add
push
ds
out
jl
out
js
sbb
sahf
fidivl
dec
out
aam
ds
out
gs
adc
xchg
inc
out
adc
test
jg
int3
mov
mov
mov
daa
push
pop
sub
inc
jnp
jl
push
enter
ret
dec
ljmp
jle
pop
lret
into
arpl
fucomp
pop
xor
rcr
icebp
add
into
xor
push
test
in
pop
jg
pop
idivl
xchg
pop
fwait
or
push
imul
lret
mov
add
jp
scas
rcrl
cmp
inc
adc
xchg
add
mov
add
iret
sti
ffreep
pop
fisubs
jecxz
popf
pop
jg
jbe
mov
arpl
jg
xchg
mov
insl
xlat
lcall
jno
pop
imul
xor
sub
fisubrl
leave
pop
xor
xor
mov
or
sub
jb
imul
adc
xchg
sti
lea
loope
repnz
adc
mov
pop
xchg
in
int3
inc
jns
push
popf
add
sbb
mov
sub
stos
das
mov
jmp
sarb
sbb
pop
inc
push
mov
adc
in
roll
mov
add
stos
and
cmp
lods
sbb
inc
das
cmp
fisttpl
lea
into
mov
dec
icebp
and
sub
add
dec
jmp
pop
pop
fldl
shll
xchg
pop
movsl
fcoml
in
xchg
scas
adcb
sbb
fnstcw
int3
fwait
xchg
fistpl
mov
fwait
or
xchg
sub
mov
lcall
sbb
push
sbb
fistpll
mov
mov
stos
inc
push
insl
sub
sbb
sbb
clc
out
jb
xchg
push
dec
and
mov
mov
mov
outsl
mov
hlt
adc
mov
mov
dec
mov
lds
lcall
or
lods
pop
pop
addr16
popa
lds
faddl
pop
inc
sbb
jecxz
sub
aas
outsl
pop
xor
mov
mov
es
ret
sbb
xchg
and
outsb
push
jmp
stc
adc
ja
fcmovnu
int3
clc
mov
fdivrp
scas
pop
mov
std
inc
push
add
ror
mov
sahf
xor
xor
ret
fs
call
pop
xchg
test
negl
out
pop
sbb
mov
imul
call
inc
icebp
mov
fiaddl
call
sub
shrl
jo
and
pushw
push
xor
ret
xchg
outsl
int
inc
clc
push
pop
mov
cmp
dec
or
je
sbb
sub
dec
stc
iret
mov
inc
jno
xchg
add
lret
jle
leave
pop
shrl
sub
shrl
arpl
add
xchg
pop
testl
sbbb
out
frstpm(287
mov
aad
pop
aas
sahf
inc
mov
inc
pop
sbb
adc
aam
sahf
xchg
insl
ljmp
xchg
loope
stos
sub
sarl
xor
mov
and
scas
lea
loope
data16
inc
lret
imul
pop
aaa
push
xor
mov
idivl
out
jle
call
mov
push
fdivl
addl
cmp
mov
aad
adc
ja
dec
xchg
movsb
sbb
sbb
add
cltd
ficoml
xchg
push
js
ret
out
out
mov
movsl
pushf
mov
in
pop
insl
adc
test
xchg
aad
dec
xlat
pop
inc
insb
adc
pop
popf
mov
arpl
mov
iret
mov
or
mov
rcrl
add
movsl
and
dec
pop
jmp
push
pop
sbb
sbb
and
adc
jl
popf
and
mov
aad
xor
fidivrs
insb
bound
mov
inc
aam
pop
push
pop
in
in
shlb
pop
pop
pop
movsb
push
hlt
mov
test
sbb
or
cwtl
push
imul
xor
lock
mov
pop
rcr
pop
sarb
test
in
rcll
adc
xor
aas
int
pop
inc
pop
rorb
ret
and
sbb
mov
adc
cmpsl
jne
and
adc
mov
jg
push
fiaddl
cld
pop
mov
push
jge
mov
movsb
leave
jmp
test
sarl
jp
adc
lret
out
push
nop
mov
subl
push
mul
mov
mov
jne
decb
inc
xor
cmpsl
subl
mov
cmc
mov
and
pop
xchg
sub
push
das
sub
push
xchg
jae
aad
push
pop
fbstp
out
sub
jb
bound
add
pop
mov
ds
jg
les
dec
cltd
pop
sbb
fcoms
subb
xor
jns
ret
xor
inc
jmp
mov
jnp
roll
mov
xchg
cld
xor
clc
dec
fidivs
stos
sub
or
imul
pop
stc
cltd
mov
mov
inc
das
icebp
sub
ficoms
lea
or
mov
in
fisubs
clc
iret
fmull
add
mov
ds
sub
jnp
pop
imulb
shr
cmpsb
dec
xchg
jecxz
dec
push
cmc
jmp
insb
aas
fnsave
repz
adc
dec
cmp
movsl
mov
gs
mov
fstpt
mov
mov
test
pop
in
arpl
cli
iret
lea
adc
cld
adc
sub
cmc
pop
loopne
sti
pop
lahf
es
clc
mov
jmp
in
filds
xchg
rcrl
mov
xor
pop
test
insb
cmpsl
inc
mov
pop
dec
pop
subb
mov
and
dec
in
add
fldcw
mov
inc
cmp
or
pop
pusha
dec
adc
pop
cmc
dec
aam
mov
out
pop
add
bnd
xor
sarb
cmp
xchg
ss
dec
dec
dec
int
jge
inc
pusha
cwtl
dec
jg
imul
pop
in
cmpsb
adc
adc
sbb
stos
into
loop
add
mov
push
imul
pop
mov
test
fsubp
sbbb
jae
mov
xchg
sub
mov
out
fdivrp
pop
xchg
cmp
pop
cmp
stos
aas
xchg
pop
iret
add
and
push
cmpsl
jg
out
cwtl
xchg
and
adc
leave
in
inc
mov
popf
test
shlb
push
leave
pop
cmp
mov
jns
pop
in
inc
je
push
xor
lret
imul
subb
aas
ret
mov
mov
in
je
xchg
fwait
mov
arpl
add
sub
insb
and
cwtl
mov
jbe
stos
pop
sbb
outsl
test
push
lock
and
mov
in
popa
cmp
pop
mov
add
push
add
adc
inc
jecxz
ja
dec
xchg
pop
and
add
and
arpl
xor
hlt
pop
or
clc
push
cld
push
out
dec
das
adcb
sarb
aas
inc
fldl
cld
stos
fsub
adcl
test
pop
scas
cmc
inc
xor
imul
scas
pop
xlat
pop
imul
lret
stos
js
xchg
aas
jbe
push
jne
rolb
add
mov
arpl
add
inc
adc
cmpsl
es
add
sbb
pop
lea
roll
inc
aaa
sbb
mov
cwtl
cmp
fistpl
ja
xchg
inc
mov
mov
pop
dec
push
xor
fdivrs
xor
daa
mov
jl
addr16
or
sbb
adc
pop
cwtl
test
and
cmc
adc
mov
out
mov
mov
cltd
jge
cmp
pop
or
out
and
outsb
frstor
lahf
pushf
push
addr16
and
adc
pop
enter
sbb
pop
cwtl
ret
inc
xor
mov
mov
add
out
pop
lods
and
je
xchg
cmp
in
sub
sub
fisubrl
and
sub
mov
mov
mov
jb
shlb
in
scas
pop
stos
mov
jl
xor
js
inc
sti
or
ret
loop
add
dec
mov
push
cmp
mov
cmpb
sbb
pop
xlat
and
push
mov
and
mov
cwtl
fs
scas
dec
cmp
or
xchg
je
ret
pop
repz
jmp
into
insb
dec
iret
test
xchg
jbe
or
cwtl
push
imul
sbb
popa
sub
pop
xor
andb
jg
divps
testb
xchg
scas
push
mov
popf
fstps
or
in
rcrb
repnz
xor
inc
outsb
hlt
xor
dec
mov
icebp
mov
or
xor
repz
xchg
pop
cmp
dec
lret
mov
sub
jp
or
pop
aas
aas
in
cmp
cld
idivb
flds
test
enter
out
clc
push
mov
leave
movlps
loopne
pop
out
inc
dec
mov
js
add
fsts
pop
or
sahf
push
fistpll
sub
out
inc
xor
loop
xor
pop
sub
sbb
mov
out
and
fcoml
test
dec
push
or
inc
mov
pop
cmp
pop
ds
pop
xchg
popf
sub
jbe
lret
xchg
test
jmp
dec
adc
shlb
pop
and
sahf
mov
adc
and
mov
inc
outsl
or
add
pop
mov
or
das
cmp
mov
loopne
scas
lea
adc
lahf
dec
xchg
sub
fistps
pop
mov
popf
adc
lock
pop
xchg
jle
mov
mov
add
rcrl
test
mov
adc
xchg
xchg
push
cmpsb
xchg
fistpl
push
ja
movsb
sbb
fists
pop
andb
mov
iret
cwtl
in
push
repz
mov
nop
mov
xorb
sub
xchg
ret
adc
popf
loop
ret
sahf
in
sub
daa
or
jle
cmp
imul
test
and
scas
sub
dec
lahf
dec
cmp
add
lds
mov
sub
pop
out
xchg
insb
mov
jg
push
mov
jae
mov
inc
ss
cmp
or
pop
dec
pop
inc
sti
xor
out
xor
aas
aas
loop
xor
fcomip
push
dec
arpl
shrl
and
ss
jo
subb
shll
cld
or
and
mov
stos
mov
jae
pop
rep
jle
scas
jnp
push
rclb
in
mov
xor
in
push
lahf
pop
dec
test
sbb
ret
dec
or
lret
or
les
mov
sbbl
pop
icebp
std
sar
and
mov
popf
and
mov
mov
inc
pop
incb
in
aaa
push
xor
mov
adc
pop
movsb
std
jae
shl
mov
mov
xchg
stc
and
dec
jae
clc
aad
pop
sti
mov
ss
push
mov
out
sub
outsb
das
sub
xor
push
mov
lcall
lock
xchg
jae
imul
icebp
pop
enter
sub
cmp
pop
pop
push
xor
stc
pop
sbb
imul
cmp
stos
std
mov
jg
lcall
ljmp
faddl
cltd
cli
sbb
mov
ja
dec
stos
pop
cmp
mov
push
push
dec
mov
std
mov
xlat
xor
add
jae
pop
pavgw
stos
loop
cmc
mov
out
or
adc
add
ret
fadds
gs
pop
cmc
out
pop
mov
add
stos
in
and
pop
mov
stc
loop
shrb
jns
repz
cmpsb
mov
and
sub
sti
jge
rolb
mov
lock
loop
sahf
xorl
dec
xchg
inc
or
mov
xchg
xorb
out
and
xorb
pop
sbb
mov
enter
or
sbb
decb
add
mov
pop
and
cli
icebp
or
jl
pop
jecxz
shr
push
das
push
add
xchg
adc
movsl
jo
adc
ficoms
addr16
cmpsb
push
mov
sbb
add
push
mov
aad
sahf
in
out
mov
fidivl
mulb
push
add
cmpsl
push
int
jae
iret
iret
mov
scas
xchg
in
loop
add
mov
in
into
sahf
insl
movsb
cmp
fsubs
ficomps
dec
enter
pop
mov
cmp
adc
jbe
cmc
add
inc
cmp
fnstenv
iret
ja
xchg
xor
sbb
in
rcrl
pop
dec
jp
movsl
mov
jle
xor
fldlg2
scas
jmp
scas
inc
mov
movb
data16
xor
std
ret
add
arpl
adc
dec
mov
loope
pop
out
xchg
jbe
cmpsl
dec
aad
enter
xor
test
fmull
mov
rolb
popa
mov
decb
in
xchg
sahf
xchg
ja,pt
pop
ja
insb
inc
mov
sub
xchg
fistl
sub
iret
push
mov
icebp
jb
lods
or
cmp
stc
inc
popf
mov
push
dec
jl
cli
fcoml
xlat
scas
pop
jge
mov
push
inc
push
add
pop
imul
out
xchg
mov
icebp
inc
scas
adc
lock
dec
xor
pop
es
adc
in
out
pop
int3
mov
mov
shll
xchg
cmc
xchg
or
loope
mov
imul
inc
mov
data16
popf
mov
push
adc
fidivl
lcall
dec
lret
push
sti
sub
xchg
push
mov
mov
fistps
pop
mov
insb
and
in
push
lods
test
xor
insl
ret
jp
dec
iret
je
sarb
fisttps
adc
aas
pop
imul
fwait
mov
out
pop
xchg
inc
das
and
ret
xor
push
in
sub
xchg
pop
out
lcall
add
fndisi(8087
xchg
add
popf
pop
loope
push
aaa
cmpsl
test
or
fmull
jnp
cmp
dec
sbb
out
and
xchg
rorb
inc
fmull
das
stc
or
daa
inc
insl
scas
pop
sub
decl
punpckhdq
enter
sar
pop
sub
fsub
inc
pop
stc
jle
stc
outsl
jae
mov
mov
dec
sbb
movb
out
test
jnp
mov
addl
test
cmpsl
cs
inc
xchg
jno
sub
ret
push
mov
cmpsb
sbb
cmp
mov
push
cltd
mov
ljmp
mov
adc
mull
pop
push
stos
inc
and
add
pop
lahf
push
sbb
mov
cmp
leave
xorl
shrb
jb,pn
gs
mov
cmp
jle
or
dec
lret
aam
dec
pop
pop
fcomp
xor
insb
mov
xchg
fdivl
divl
mov
inc
notb
imul
iret
pop
addr16
jo
add
aaa
xor
pusha
or
rclb
pop
xchg
jle
arpl
loopne
or
imul
mov
mov
fs
repz
sbb
loope
movsbl
std
xor
mov
popf
sbb
sbb
pop
mov
and
loop
push
mov
out
push
addr16
je
cs
lahf
and
xchg
mov
std
adc
stos
mov
fsts
mov
sbbb
or
sar
movnti
popa
arpl
shrl
in
sbb
aaa
aas
iret
mov
jle
mov
sbb
insl
cmpsl
sti
xchg
mov
cli
pop
ret
loope
cmp
stos
sbb
pop
cmp
pop
aas
xchg
imul
mov
movsb
cs
fimuls
jmp
mov
movl
mov
rsm
inc
aam
insb
mov
push
fmull
arpl
lret
mov
sub
scas
mov
mov
lahf
mov
sarl
pop
repnz
xor
pop
cld
pop
notl
jns
rorb
inc
mov
xchg
mov
adc
cmpsb
cmp
lahf
das
pop
mov
mov
inc
xchg
fisubl
ret
mov
add
mov
pop
pop
or
orb
push
fsts
adc
push
je
fstl
inc
std
jb
iret
imul
inc
xchg
and
lret
xchg
xchg
or
pop
pop
adc
cs
out
iret
repnz
lock
push
jno
test
push
sbb
mov
pusha
xchg
daa
movsb
and
mov
xor
mov
lods
xchg
je
out
icebp
and
cmpb
pop
imul
mov
xchg
es
jbe
into
add
pop
inc
jne
outsb
inc
xchg
daa
jo
jo
sahf
mov
popf
or
jg
loope
pop
rcll
fisttpl
shll
add
arpl
lret
or
mov
ret
leave
ficoms
out
movsl
pop
pusha
out
out
pop
dec
jne
call
aas
inc
icebp
stos
pop
decb
data16
xorl
jge
in
or
cmc
test
lods
ss
es
hlt
insb
pop
mov
in
xlat
icebp
negl
test
push
icebp
pop
andl
ja
iret
add
lods
jns
adc
ficoms
push
xor
iret
or
repz
imul
mov
cld
pop
xor
aaa
and
lcall
aad
pop
inc
mov
ja
add
ljmp
push
cmp
jecxz
repz
mov
jge
rorl
in
cmpl
mov
cmp
add
jbe
sbb
or
imulb
fdiv
sub
fs
sti
lea
jns
jnp
sbb
xchg
fldt
insb
loop
ret
les
iret
dec
shll
mov
ret
decb
cli
call
mov
pop
mov
ret
int3
hlt
fnstsw
pop
jmp
or
push
pushl
fldcw
gs
pop
test
or
and
or
imul
cltd
out
push
jge
flds
hlt
dec
pop
push
fs
fwait
sbb
add
daa
or
repnz
pop
andb
add
adc
imul
popf
push
in
mov
jns
mov
pop
adc
out
into
pusha
pop
pshufw
mov
sbb
into
ljmp
pop
test
repnz
imul
outsb
inc
pop
idiv
in
call
push
jnp
cmp
adc
mov
fldt
pushf
jae
ljmp
shrb
or
or
sub
sti
dec
xchg
inc
cld
stos
xchg
mov
push
mov
mov
test
vmovups
cmp
mov
test
mov
mov
mov
inc
int3
inc
inc
fnstsw
insb
xor
mov
cld
xchg
push
out
mov
js
sub
xor
pop
lods
sarl
xor
pop
inc
add
addr16
or
testb
sub
cmp
or
lahf
lods
in
cmpsl
inc
push
jnp
sahf
and
in
inc
pop
dec
xchg
sbb
test
ret
ja
sbb
xchg
mov
lcall
or
sub
fs
dec
cmpsl
fldt
packsswb
push
cmp
add
push
mov
inc
xchg
enter
adc
stos
jge
fldcw
sub
xchg
jb
push
in
sbb
mov
xchg
or
mov
jmp
pop
fcmovnu
insl
mov
std
push
or
loop
push
mov
and
outsl
add
aad
inc
add
add
int
pop
enter
add
xchg
jecxz
out
inc
adc
jg
je
sti
mov
mov
test
popa
ret
loop
xor
ret
cld
xchg
push
ret
mov
repz
pop
push
test
sub
sbb
inc
jle
pop
jle
test
orl
incb
or
imul
negb
fbld
mov
clc
sbb
fimull
push
icebp
std
div
inc
pop
dec
fldl
clc
leave
jnp
pop
pop
push
in
sub
dec
adc
fcompl
dec
pop
mov
fistpl
imul
mov
push
std
mov
fldt
bound
jle
fldenv
add
das
pop
and
cmp
insb
repnz
mov
mov
dec
movsb
repnz
shrl
je
iret
adc
dec
call
xchg
xor
adc
stos
inc
jb
add
jecxz
sti
out
in
ljmp
cmp
rcl
jo
aaa
mov
cmp
mov
and
or
inc
ds
mov
sub
pop
sbb
pusha
jl
push
int
fnstenv
dec
or
incl
adc
sti
cs
jmp
and
in
mov
shrl
mov
mov
ret
and
fistpll
jg
insl
and
ja
or
or
outsb
xor
push
out
mov
pop
mov
and
mov
push
in
push
mov
lods
xchg
test
outsl
mov
cmpsl
mov
ss
sub
cli
or
pop
fdivs
popa
jg
dec
pop
cmp
fimuls
ljmp
addb
lret
mov
mov
and
or
adc
sahf
aas
pop
xor
repz
pop
jge
xchg
xchg
sbbb
jno
out
pop
in
iret
or
fimuls
mov
rcrb
sbb
ljmp
icebp
jne
insb
push
dec
arpl
xor
xchg
or
jle
dec
cmp
out
xor
ss
cmp
and
xchg
mov
mov
scas
cmp
adc
mov
xchg
fstpl
es
pop
lret
pop
sarl
pushf
and
dec
cli
or
test
rcr
pop
add
mov
mov
test
call
lea
vpshlq
in
jmp
dec
sbb
inc
je
in
mov
or
das
add
xor
int
imul
sbb
popa
imul
je
subb
adc
mov
xchg
cmp
fildl
and
loop
lcall
adc
ret
dec
fimuls
std
jns
cltd
push
or
ja
jecxz
pop
subl
sub
pop
push
jp
sub
push
repz
shrl
sbb
jbe
inc
add
outsb
cmp
outsb
push
call
push
aas
stos
add
pop
cmpsl
aam
and
xchg
xchg
fucomi
push
in
xor
loop
cld
test
cmpl
sahf
push
dec
mov
sub
pop
pop
xorb
pop
sbbl
sub
push
jmp
or
std
xchg
repnz
sub
out
sub
xor
lods
je
sbbb
repz
pop
cmpsb
cld
mov
sahf
push
hlt
int
pop
add
cmp
iret
jle
pop
pop
sub
cmp
fs
cmp
cs
imul
adc
dec
lret
imul
imull
call
inc
lret
leave
out
out
pushf
push
das
enter
scas
stos
mov
jnp
xor
pusha
jge
pop
pop
or
lods
ss
test
sbb
inc
scas
fldcw
rclb
popa
jecxz
hlt
call
aaa
outsl
lahf
cld
insl
pop
adc
sarl
dec
fisubl
pop
jl
mov
mov
fwait
add
addr16
inc
sub
lahf
mov
sbb
aaa
fwait
mov
and
lods
imul
dec
add
sub
push
add
mov
je
dec
mov
cmp
insb
sbb
mov
mov
sahf
push
nop
mov
fistps
int
mov
mov
fstpl
in
xor
mov
xor
sub
jp
test
jge
in
mov
cmp
pop
xchg
sbb
push
dec
repnz
clc
mov
icebp
idiv
dec
ja
es
dec
sbb
lahf
shlb
add
loop
sbb
test
adc
sub
dec
push
jns
movsl
dec
fwait
test
call
lods
jbe
mov
shrb
fnstcw
push
adc
mov
push
loope
sub
pop
cmp
push
lea
out
mov
push
xor
adc
push
sbb
xchg
cmpsb
fidivl
mov
movsl
xor
sub
jne
scas
pop
push
cmp
mov
out
mov
xlat
fucomi
or
push
ss
cmp
or
inc
mov
insl
out
pop
or
pop
movsb
mov
sbb
cmp
mov
xchg
xchg
pop
ret
add
loop
fidivrs
sbb
mul
jbe
pop
xchg
data16
rorb
inc
outsb
dec
fisttpll
addr16
insb
push
fld
jns
lahf
movsl
into
push
fdivs
decb
les
arpl
and
or
mov
pop
pop
ficoms
fldenv
adc
test
adc
adc
gs
cmp
sahf
sbb
adc
imul
ret
rcrl
insb
out
cmpsb
push
mov
outsl
fstps
push
sbb
mov
orb
mov
lods
imul
or
daa
sbb
pop
int
inc
icebp
xor
mov
test
pushf
in
js
imul
notb
xlat
lret
jmp
jnp
mov
enter
xchg
scas
aaa
outsl
xchg
cmc
rcl
stos
mov
inc
xor
or
pop
dec
addr16
mov
and
jbe
rorl
xor
fdivl
aad
xlat
jmp
into
mov
cmp
xor
mov
dec
mov
jne
fnstcw
lahf
cmc
push
mov
int
fistpll
loope
std
iret
sbb
xor
in
sbb
sbb
mov
popf
mov
jnp
inc
fisubrs
sub
movsl
fs
in
push
fistl
sahf
mov
lds
pop
and
push
xchg
pop
cmp
pop
push
mov
cltd
lahf
add
and
sahf
jl
fdivrl
rcr
and
out
cmp
ret
sbb
aam
cmp
dec
cmp
push
out
mov
inc
loopne
pushf
jle
cwtl
mov
and
pop
gs
jecxz
out
pop
xchg
lods
leave
in
mov
cmp
test
stos
sbb
lahf
loop
mov
push
sarb
popf
js
cmpl
mov
repnz
mov
dec
mov
cli
cmp
lea
js
or
or
jmp
hlt
mov
mov
pop
push
push
mov
xor
frstor
push
inc
lock
iret
jb
sti
sbb
stos
add
scas
pop
in
mov
push
cmp
pop
mov
xor
in
add
pushf
cmp
xchg
leave
and
ss
subl
fsubl
mov
adc
insb
nop
inc
je
out
push
jle
mov
out
mov
mov
mov
out
and
dec
and
in
lea
clc
sti
push
pop
sub
lahf
imul
pop
or
das
mov
push
cmp
test
mov
pop
push
int3
and
outsb
stc
jb
pop
push
mov
mov
cmp
mov
pop
ja
mov
add
in
imul
rcr
mov
jmp
loopne
mov
fldenv
adc
xchg
sbb
push
cmpsl
shr
and
xor
testl
or
or
mov
test
shrb
mov
mov
pushf
subb
dec
jbe
test
xchg
sahf
xor
cmc
xchg
xchg
adc
pusha
stc
mov
add
cli
pop
adc
add
std
pop
icebp
mov
mov
fistps
add
xchg
fidivrs
pop
push
jne
xorb
or
lods
adc
divb
sbb
out
pop
xchg
aad
sahf
or
fldl
test
dec
imul
xorb
pop
mov
mov
sahf
call
sub
push
mov
dec
roll
jg
outsl
push
add
inc
pushf
lret
adc
mov
pop
fists
pop
jbe
or
add
cmpsb
push
sti
mov
lret
cld
lods
xchg
jge
adcl
mov
sbb
xchg
or
and
adc
pop
mov
xchg
ss
or
or
jmp
and
clc
ds
mov
jmp
xchg
or
and
pop
mov
lret
cli
push
repz
adc
dec
aam
test
cmpsb
sbb
inc
aas
dec
std
pushf
and
stos
mov
mulb
or
adc
push
pop
shr
enter
sbb
in
js
lcall
in
int3
jbe
in
inc
iret
dec
lods
jg
xchg
stos
cmpsb
ret
imul
push
ret
nop
pop
notl
sahf
wrmsr
test
inc
imul
int
movsb
jle
dec
and
mov
xchg
or
fisubrs
cld
mov
mov
std
mov
mov
fdivrs
dec
repnz
scas
out
rcrl
jge
pop
jbe
jmp
adcb
fisubrs
pop
jle
imul
test
mov
outsl
ja
cld
mov
xor
adc
xchg
add
mov
aas
aad
mov
sbb
push
icebp
jp
jle
pop
aad
popf
lea
subb
or
pop
pop
dec
or
cmp
inc
sub
dec
iret
int3
cmp
mov
dec
push
pop
pop
ret
or
pop
add
ja
btcl
inc
inc
loope
mov
nopl
mov
cmp
push
js
push
jle
pop
dec
loope
cmp
push
sub
daa
jecxz
sbb
fisubl
pop
adc
xor
fucom
inc
pop
js
mov
outsb
fcomps
ja,pt
jg
std
jecxz
cmp
mov
sti
xor
das
ss
daa
mov
pop
rcrb
pop
ss
jg
mov
mov
outsb
std
push
aas
decb
or
scas
sbb
cmp
daa
icebp
and
pop
subb
cmpsb
pop
dec
adc
punpcklbw
or
cmp
jb
adc
stc
fidivrs
xlat
sub
pushf
xor
xor
jg
das
repnz
dec
cs
add
daa
popf
and
mov
bound
xchg
dec
cmp
sbb
pop
add
outsl
adc
repz
mov
sub
fmuls
aaa
xchg
xor
mov
adc
daa
fldcw
mull
cmc
dec
and
nop
stos
pop
or
arpl
fsubs
sub
push
mov
movsb
test
pop
mov
cmp
iret
cmp
aaa
dec
insb
jg
xor
repz
das
mov
imul
daa
cld
insb
inc
sbb
xor
xchg
push
pop
movsb
and
insb
pxor
sbb
jno
or
cld
out
into
dec
aas
mov
sbb
bound
pop
das
inc
insb
jnp
sub
lock
out
frstor
std
outsl
cmpsl
jecxz
adc
loopne
sbb
je
or
or
push
lcall
lcall
es
das
dec
arpl
mov
arpl
std
inc
daa
push
and
fsubrs
dec
jae
jp
inc
jecxz
pop
dec
arpl
adc
or
dec
fwait
xlat
add
std
jl
mov
cmp
mov
call
pushl
xor
in
sub
imul
mov
sbb
loop
adc
insb
cmc
jb
frstor
lds
pop
sbb
add
mov
pusha
aas
scas
cmp
aaa
cs
xor
sahf
cs
int
jmp
pop
arpl
and
jb
fs
repz
and
mov
lods
add
adc
jnp
psubusb
or
or
test
loop
and
pusha
es
out
lock
aas
lods
icebp
xor
aaa
or
sbb
stos
cmp
daa
pop
outsl
pop
inc
jne
adc
gs
mov
mov
arpl
adc
rcr
pop
shrl
fnstsw
xor
aaa
cli
jne
fdivs
ss
mov
outsl
push
out
cmp
cld
clc
sbbl
xchg
mov
pop
pop
ss
aas
adc
or
lods
mov
ss
stos
jl
cld
jg
mov
or
mov
in
fsubrl
ss
in
es
mov
xor
cs
outsl
inc
test
aas
inc
pop
sti
sbb
pop
push
adc
fcom
mov
das
stmxcsr
and
addr16
in
lods
aas
xchg
cmp
outsl
aaa
out
pop
mov
loope
xor
jl
subb
sub
in
popl
aad
pop
and
pop
and
cli
loop
cs
mov
sub
pop
ja
push
std
sahf
mov
cmp
cmc
out
jne
add
icebp
inc
xchg
jno
xor
cld
push
das
iret
sbb
adcb
addr16
movsl
rorl
arpl
cli
bndstx
repz
push
fdivrs
mov
cs
mov
or
mov
jne
movsb
mov
jl
cmp
jl
loope
ss
jecxz
pop
push
lock
repnz
lea
adc
dec
mov
cmp
pop
ss
inc
mov
addr16
and
fsts
jbe
pop
ds
hlt
es
inc
jb
mov
jge
pop
jne
aas
push
loop
nop
into
pop
sbb
icebp
lds
mov
cmp
dec
fistpll
mov
idivb
mov
mov
das
inc
rorl
sbb
lea
push
subl
adc
in
or
add
outsb
mov
aas
data16
insl
lock
insb
mov
fcoms
sub
fistpll
sbb
sub
xchg
stos
arpl
arpl
repnz
mov
dec
mov
out
insb
lret
cmc
lock
repz
cmp
lahf
aaa
mov
pop
mov
ljmp
pop
fistpl
imul
jecxz
pop
ja
aaa
arpl
mov
std
or
imul
into
cmp
aas
dec
cmp
mov
jge
xor
and
xlat
mov
ret
pop
clc
arpl
je
mov
lock
cld
jg
movsl
aas
mov
and
shlb
xor
lcall
mov
cmp
sbb
pop
xor
repnz
xchg
mov
jge
or
insb
imul
mov
push
jp
inc
cmp
out
xor
jge
fisubrl
push
sub
cmpsb
in
stos
and
pop
sub
mov
jno
cli
sub
jnp
mov
std
jecxz
aas
push
jg
cmp
cmp
rorl
das
loop
jmp
repz
and
fcomp
mov
popf
pop
ss
negb
mov
pop
or
pop
adc
mov
arpl
cmp
shll
aaa
mov
ss
jns,pn
data16
icebp
loope
sub
stos
daa
cli
jle
pop
sahf
sbb
mov
pop
add
add
cmc
mov
mov
jb
pop
aas
add
in
fisubl
mov
ja
xor
sbb
shrb
jb
cmc
loop
jp
daa
gs
and
cwtl
xchg
pop
repnz
sbb
jp
pop
jo
stc
aad
addps
pop
or
push
imul
xor
cwtl
jle
aaa
lret
sbb
push
lcall
mov
jno
xor
mov
popf
bound
pop
test
cmpsb
mov
push
mov
cmp
pushf
aaa
incl
pop
cmp
xchg
sbb
mov
pusha
mov
and
pop
push
repnz
sbb
pop
fbld
adc
and
push
pshufw
pop
jle
insl
add
movsb
mov
nop
sub
mov
loope
aaa
in
arpl
shrb
dec
insb
sbbl
ds
rcrb
aas
mov
call
pop
and
rcrl
sbb
pop
push
push
adc
testb
movb
and
dec
jmp
aas
sbb
clc
aaa
xorl
dec
pop
clc
mov
sub
adc
adc
pop
stos
sbb
push
sub
or
sub
scas
pop
divl
xlat
jecxz
pcmpgtb
ljmp
sub
movsb
sub
iret
subl
das
out
movsl
pop
sub
aaa
push
xor
jne
jo
push
add
add
aas
daa
or
jecxz
and
iret
pop
fwait
cltd
das
sbb
mov
lret
rclb
fbstp
movzwl
aas
test
xchg
shl
std
mov
clc
int
pushf
daa
sbb
out
jge
pop
fcompl
mov
imul
movsl
push
jmp
pop
or
mov
outsl
cmc
push
arpl
mov
pushf
out
xor
xchg
sti
and
daa
add
dec
push
movsb
cmp
jno
or
mov
jmp
jmp
jae
lods
in
std
andl
sub
repnz
fnstcw
ss
icebp
jne
jne
sahf
int
mov
lcall
test
pop
inc
mov
cs
rolb
jecxz
pop
or
sub
daa
mov
out
xlat
mov
push
aam
aaa
cmc
or
sub
xchg
xor
vpunpcklqdq
sbb
pop
or
adc
shlb
in
loopne
test
mov
xor
xchg
sbb
std
push
rorl
testb
inc
movsl
mov
pushf
insb
sbb
cmp
dec
mov
in
mov
repnz
lcall
cmpsl
mov
lea
sub
insb
xchg
pop
insl
dec
loopne
cmp
sbb
outsb
pop
popa
fistps
fucom
cmpsb
loopne
mov
and
or
cmpsb
aaa
ss
cs
mov
insl
sbb
pop
pop
addr16
in
leave
mov
jecxz
adc
mov
into
cmovns
or
insl
test
cld
mov
pop
sbb
loopne
nop
cmc
xchg
aaa
popa
sahf
mov
je
out
inc
mov
mov
pop
jl
fsubs
das
psrlw
sarb
mov
mov
xchg
imul
icebp
pop
mov
pushf
sbb
pop
push
imul
lahf
sbb
dec
pop
shlb
sti
add
xor
and
rorb
ljmp
mov
imull
int
fidivs
or
aaa
and
sti
and
mov
xchg
push
mov
daa
repnz
cs
mov
mov
pop
adc
outsb
adc
xchg
sub
inc
dec
shll
xlat
int
clc
jg
dec
faddl
xor
pop
sub
decb
insb
mov
pop
pop
jecxz
int3
jnp
pop
jbe
js
fcoms
fcmovu
insl
cs
into
addr16
lds
pop
push
adc
or
in
bound
sahf
cli
scas
cmp
fmull
aaa
ss
xchg
xchg
loope
sub
dec
xchg
dec
mov
ja
mov
or
mov
hlt
mov
pushf
repz
movsl
cmp
mov
mov
cmp
mov
js
sub
xor
xchg
iret
popl
push
mov
sti
pop
stos
mov
push
jge
divps
fnstenv
or
mov
jne
fs
in
out
popl
cmp
in
mov
sub
pop
jb
das
sub
mov
fdivr
dec
daa
out
and
mov
dec
jge
pop
std
call
push
outsb
or
in
jp
cld
repz
ja
jle
dec
push
mov
push
push
sbb
pop
add
repz
add
fwait
das
ss
pop
push
push
dec
push
repz
xlat
and
mov
jne
ds
pop
icebp
lock
mov
adc
or
pushf
movb
daa
or
out
fimuls
pop
test
or
xor
out
ficoms
imul
jecxz
push
xor
aaa
cli
adc
aam
and
pop
sbb
pop
mov
jnp
loop
shl
data16
jge
or
insb
enter
pop
xchg
in
jg
jnp
mov
sbb
jecxz
xor
das
fisubrs
in
cltd
loopne
mov
scas
repz
scas
movsl
lds
mov
dec
fimull
clc
adc
addl
arpl
ret
pop
lcall
in
xchg
pop
test
aaa
popf
into
pop
sbb
pop
call
out
jmp
imul
cmp
and
int3
or
adc
icebp
dec
jns
adc
add
std
movsl
jg
xor
ret
insb
aaa
ss
cmp
push
or
fisubrl
lea
inc
jmp
sub
mov
xchg
in
insb
repz
xchg
pop
sbb
rorl
testl
mov
cmp
jle
ficompl
cmpsl
aas
and
aaa
mov
sahf
pushf
mov
xchg
mov
mov
in
dec
and
loopw
jp
pop
inc
pop
insl
dec
xchg
loope
or
adc
out
outsl
mov
mov
stos
pop
pop
addr16
pop
push
clc
sub
in
cmp
xor
mov
jno
inc
adc
call
sub
adc
jbe
mov
fcomps
aaa
int3
outsl
jge
in
cwtl
mov
jb
jno
jmp
ja
popf
pop
mov
xor
aam
and
sbb
lods
pop
jecxz,pn
repnz
ss
arpl
adc
fisttps
mov
push
lds
inc
add
lods
cmp
sbb
pop
std
das
mov
dec
sub
clc
and
pop
andnps
jo
std
loope
pop
fiadds
rolb
dec
arpl
sub
mov
jnp
fnstcw
das
xchg
inc
pushf
xor
mov
jecxz
push
sbb
jb
push
mov
jne
clc
jl
cmp
push
xchg
es
cmp
out
mov
lret
mov
cmpsl
mov
push
mov
xlat
das
mov
aas
sub
and
inc
cmp
sbb
or
sbb
cli
in
int
sub
xlat
sar
cmp
aam
sub
mov
dec
std
cmpsl
dec
aas
leave
cld
fstpl
test
daa
sub
pop
cmp
insb
leave
lods
dec
xchg
add
cld
xchg
pop
pop
incl
loope
arpl
ljmp
cmpsl
fnstsw
sub
aaa
sbb
cli
push
xor
sub
daa
xchg
jae
negl
push
ss
mulb
ljmp
int
bound
fistpll
das
fucomp
aas
cmp
mov
addl
pop
cmc
pushf
mov
mov
pop
adc
loope
mov
xor
sub
iret
mov
xchg
inc
js
fnstsw
mov
aam
mov
and
insl
icebp
into
adc
imul
fistl
icebp
pcmpeqw
mov
cmpsb
or
add
jbe
div
jnp,pn
cmp
outsl
mov
jmp
shlb
jge
cld
dec
fisubl
flds
fistl
bound
ss
cli
adc
or
int
adc
loope
cmp
outsl
mov
test
notb
cmp
loop
adc
popa
lods
daa
cmc
into
adc
pop
push
and
stc
cs
mov
jg
int3
jecxz
pop
test
sub
sti
out
cmovbe
mov
or
pushf
sahf
pop
clc
popa
in
jge
fdivrp
sbb
test
cmp
push
scas
cs
loope
mov
nop
imul
mov
jecxz
pop
inc
arpl
sbb
je
sbb
jge
xor
out
movsl
cmp
scas
mov
sbb
adc
aaa
fcoms
adc
lock
cs
shld
sub
imul
cmp
into
push
stc
jns
xchg
pop
pop
fdivrs
push
ja,pt
pop
ss
pop
jle
mov
jne
ds
rcrb
stc
jne
adc
mov
scas
aas
mov
aam
xchg
pop
stc
cld
popf
lahf
movzbl
arpl
repnz
lock
repz
fsub
mov
jle,pt
mov
shrl
cmp
cld
jge
sub
sbb
imul
pop
aad
ficomps
or
pop
and
inc
cmp
mov
xor
mov
shlb
test
jb
pop
and
ja
push
pop
ss
pop
cmpsl
pop
mov
repz
cltd
or
mulb
idivl
or
mov
pop
mov
jne
fcoml
xor
fisubrs
es
xchg
in
xrelease
cld
mov
in
pop
cmc
cmp
cmp
pop
pop
bound
stos
pop
test
jmp
jl
ds
cmpsb
std
jge
in
imul
cs
adc
testl
cmc
cmpsl
mov
cmpsl
jp
mov
aam
testb
adc
les
sahf
movb
dec
ds
or
pop
push
sbb
jnp
iret
sti
mov
ficoms
pop
mov
mov
aad
jl
fcomp
pop
out
roll
mov
loop
sub
aas
sahf
out
sbbl
loop
in
pusha
lahf
aas
aaa
mov
das
ss
mov
sub
inc
mov
insl
xchg
repz
ja
ljmp
push
sbb
pop
push
adc
jbe
lock
ja
out
cmpsl
lds
scas
fiaddl
test
xor
jnp
and
mov
repz
lret
sbb
mov
stc
xor
adc
lods
insb
sbb
mov
outsl
clc
lods
pop
fistpll
sahf
loope
aas
icebp
arpl
mov
pusha
jge
xor
insb
jno
xor
sbb
ss
cs
mov
mov
shlb
fstps
outsl
mov
sahf
aad
fdivrs
rolb
hlt
enterw
ret
pop
xor
std
jnp
bnd
xchg
lock
cmovle
pop
aas
jp
clc
pop
and
push
aaa
pushf
gs
incb
or
jp
ret
into
aam
jmp
pop
shrl
cld
fsubs
mov
sbb
pop
jns
out
fwait
add
ja
jnp
aas
and
fisttpll
jecxz
mov
inc
notl
daa
jns
out
xchg
mov
cld
ret
bswap
insb
fildll
sub
hlt
pop
lds
out
mov
std
bsr
js
pop
das
sub
cli
jne
int3
cs
mov
pop
or
add
add
xor
or
and
ret
sbb
sbb
add
clc
mov
sahf
das
dec
mov
and
cmp
jl
mov
jmp
sbb
cmp
adc
data16
arpl
inc
cs
ja
sahf
in
icebp
pop
daa
imul
mov
shlb
insb
xor
sub
test
pop
mov
lea
adc
outsl
dec
pop
std
fcmovnbe
setle
repnz
pushf
int3
arpl
scas
sti
inc
add
call
mov
push
lea
jmp
sti
push
add
adc
call
mov
pushf
xchg
outsl
pusha
out
movsl
push
aaa
inc
mov
pop
orl
call
cmpb
repnz
dec
cmp
inc
mov
xchg
mov
cld
cld
or
xchg
ljmp
cmc
fstps
pop
mov
scas
mov
mov
in
mov
jo
fldt
lods
aad
movsl
mov
lds
cwtl
sub
in
in
shr
enter
fstp
xchg
cmpsl
fbld
lcall
scas
xor
test
js
sbb
mov
push
fstl
dec
mov
jge
outsb
fbstp
js
mov
fildl
lret
inc
inc
inc
cltd
mov
rcll
or
shlb
mov
jnp
sti
decb
sub
jg
daa
aaa
stc
jae
test
push
add
sti
loop
mov
cmp
in
fdivl
mov
cld
lock
lock
fsub
test
sub
inc
dec
dec
outsb
lods
jmp
adc
and
add
pusha
cmp
pop
jns
popa
stos
add
out
pop
pop
sqrtps
mov
mov
xchg
test
sub
lcall
iret
pop
sbb
arpl
mov
cwtl
pusha
mov
in
mov
mov
pop
popf
mov
push
mov
ret
idivb
mov
xchg
xor
in
add
pop
pusha
inc
pop
dec
xor
push
pop
mov
fwait
fwait
xchg
mov
sub
pop
lcall
pop
cli
ljmp
ja
jae
cmp
jae
push
sub
push
jmp
pop
push
int
int
mov
dec
inc
sbb
push
in
inc
out
mov
rcl
inc
jb
popf
pushf
jo
idiv
fs
push
mov
lock
test
mov
into
mov
mov
or
xor
insb
ds
fldenvs
fucomp
mov
icebp
cmc
sub
andb
shr
pusha
pushf
cmc
jmp
inc
call
or
ret
cmpsl
out
mov
call
scas
test
sub
repz
fidivrs
sbb
lcall
inc
sbb
add
inc
scas
or
mov
jg
xchg
jl
aas
and
dec
popf
data16
scas
sahf
loop
js
insb
and
or
adc
sub
adc
adc
dec
mov
pop
add
loope
loope
mov
lret
jmp
cmpsl
xchg
iret
adc
out
lahf
mov
ss
out
loope
lret
shlb
mov
mov
adc
push
mov
cmp
sbb
adc
pop
mov
inc
into
pop
jnp
in
cmp
xchg
cmpsb
cmp
sub
and
lret
mov
out
loop
inc
cli
dec
sub
xchg
jo
jmp
mov
pushf
pushf
mov
pushl
ret
call
ret
mov
mov
mov
hlt
add
pushf
loopne
lods
in
lret
sub
imul
mov
fdiv
ljmp
mov
cmpl
shrl
aaa
movsb
leave
or
pop
aas
push
mov
mov
pop
jg
ret
dec
push
pop
add
xor
out
iret
cmp
inc
xchg
nop
and
mov
cmp
push
popf
mov
xchg
lahf
movsl
xchg
bound
dec
imul
rolb
pusha
xor
pusha
pop
push
js
inc
jl
push
sub
or
dec
cmp
dec
ret
jbe
stos
lret
mov
xchg
jecxz
mov
aam
imul
mov
lea
mov
dec
jle
pusha
jb
pop
popf
xor
mov
gs
mov
pushf
sbb
loope
inc
lret
sbb
push
jbe
lods
lea
enter
les
in
mov
call
mov
sub
mov
repz
mov
test
mov
xchg
mov
jl
arpl
rclb
fsubrs
sub
fsts
out
jmp
sub
std
fdivrs
fdivl
push
mov
test
leave
in
and
fidivrs
out
jge
dec
jne
jb
in
mov
fsubr
xchg
scas
push
dec
sahf
pop
mov
nop
int3
and
test
int
mov
loopne
pop
inc
jbe
xchg
push
lret
stos
sub
dec
xor
cmp
es
or
jno
mov
stos
mov
mov
dec
idivb
and
sbb
call
mov
pop
pop
or
pusha
fs
jo
pop
pop
inc
scas
test
cs
pop
add
jge
ret
xchg
or
or
jle
daa
jo
rcrl
out
ret
mov
ljmp
adc
and
scas
cmp
test
fwait
mov
lahf
filds
mov
adc
sarb
sbb
loopne
adc
add
mov
or
inc
out
or
inc
and
inc
mov
rolb
jne
xlat
mov
clc
add
cltd
mov
fxch
icebp
cmc
sar
jmp
fld
sub
pushf
pop
sbb
sbb
int3
cmp
es
ds
bound
adc
dec
cs
or
pop
cltd
div
movsl
push
cwtl
aam
adc
mov
and
inc
rcl
adc
sbb
mov
lahf
daa
fstps
xlat
mov
xlat
shl
fdivr
sbb
hlt
adc
jb
addr16
loope
cmp
int
mov
outsb
fwait
jb
mov
test
push
hlt
je
fiaddl
arpl
rorl
add
adc
roll
jmp
fcmovnbe
jmp
mov
adc
push
mov
lea
call
jno
pushf
lea
jae
pushf
cmp
pushl
pushf
sub
push
jmp
test
mov
pushf
sub
stc
movb
cmp
movb
pushl
popl
movw
push
cmp
mov
call
sahf
and
adc
xchg
cltd
std
movsl
in
rol
icebp
clc
add
adc
pop
fs
ds
adc
push
mov
out
sti
push
cld
scas
js
jae
xchg
and
call
out
mov
subl
loopne
xor
jg
dec
xchg
sbb
sti
ljmp
cmp
or
cmp
and
insl
and
or
sub
push
mov
lods
pushw
and
xor
adc
adc
repnz
push
cld
sti
pop
cmp
mov
lock
mov
rolb
pop
cmp
sub
lods
sahf
fmuls
and
cmp
sub
inc
subb
ss
shl
and
scas
mov
lret
stos
icebp
sbb
hlt
hlt
mov
outsl
xchg
and
sub
mov
xor
test
bound
in
and
or
pop
jg
jg
loop
addr16
mov
push
xchg
ret
out
sbbl
shll
fyl2x
sub
mov
xor
and
test
sar
jmp
std
cmp
and
je
pusha
movw
pushf
lea
jmp
cwtl
xor
sahf
lret
dec
or
outsl
sbb
dec
sbb
jg
pop
add
xchg
inc
mov
arpl
pop
adc
jns
int3
xchg
pop
add
cs
mov
jle
xlat
movb
sub
inc
iret
push
popa
mov
cmp
dec
imul
push
stos
psrlq
pop
push
loopne
loopne
cli
sbb
in
mov
in
and
es
add
ss
pop
or
push
sub
mov
cmpsb
mov
mov
mov
mov
int3
loopne
das
add
add
or
push
lcall
cwtl
loop
mov
ljmp
stos
cld
push
push
lea
xlat
into
cmpsl
sbb
dec
push
mov
push
push
cli
shll
addr16
int3
das
test
adc
fcmovnu
fcmove
out
inc
xchg
add
fsubrl
cmpsl
xchg
adc
outsb
dec
notb
mov
and
pushf
in
push
dec
outsb
outsl
and
and
pop
sub
aas
sub
aas
pop
sub
adc
jb
mov
imul
and
pop
sub
sub
sbb
popa
or
sbb
shl
pop
or
xchg
sbb
popaw
js
and
pop
ficompl
cwtl
out
pop
repz
mov
inc
cwtl
xor
jo
test
addr16
sub
add
cmp
out
divl
inc
ret
fisttpl
sbb
lea
movsb
push
dec
sub
mov
loop
xlat
or
adcl
pop
dec
adc
jge
cwtl
loope
sbb
jne
cmp
clc
in
les
int3
lock
test
pop
sbb
sbb
pop
pop
aas
xor
arpl
cli
sarl
jle
xor
pop
gs
xor
and
mov
adc
xchg
mov
push
inc
cld
sbb
cmc
out
cmp
cmpb
push
or
xchg
dec
std
sub
or
pop
test
out
push
xchg
shll
enter
arpl
mov
mov
enter
inc
mov
push
xchg
add
ja
push
inc
addr16
inc
arpl
inc
push
sub
push
in
xchg
mov
or
add
call
mov
movzbl
movsbl
pop
pushf
movb
pushl
ret
mov
pushf
pushl
pusha
not
movb
jmp
dec
call
sub
out
xchg
fcmovu
stos
mov
scas
rolb
cld
dec
out
mov
jecxz
and
mov
mov
jp
push
cli
daa
or
in
mov
lahf
jbe
push
jg
add
shlb
dec
in
rorb
jae
mov
cmp
das
cwtl
cmp
xchg
add
jle
or
xlat
pop
xchg
fistpl
push
jb
cmpsb
repnz
jns
gs
dec
gs
jge
gs
inc
sub
sbb
stc
out
pop
sbb
dec
inc
add
or
push
jbe
push
inc
inc
push
or
cs
add
vsubss
js
xor
add
cmp
push
xchg
push
stc
in
and
add
shl
imul
xor
imul
mov
push
and
mov
jge
notl
cltd
das
test
pop
roll
sarl
shrl
stos
dec
test
mov
add
dec
out
gs
loop
repnz
xchg
out
lcall
sub
mov
jle
aam
in
pop
bound
sarl
sti
fwait
ret
mov
aas
ds
loopne
scas
nop
nop
push
rcr
testl
cltd
adc
pop
addr16
jl
out
adc
pop
popa
adc
imul
lret
test
push
scas
adc
add
outsb
mov
jmp
pop
adc
gs
adc
inc
jns
dec
popa
sub
cmp
or
xor
xchg
stc
std
mov
repz
xchg
xchg
stos
cmpsl
iret
cmpsl
jecxz
xor
std
cmp
pop
scas
nop
fists
mov
pop
sbb
mov
jns
or
mov
loop
clc
push
or
ds
adc
add
xchg
lods
and
cmp
jne
call
push
dec
xor
shll
test
xor
cmp
and
adc
inc
dec
pop
imul
adc
sbb
inc
mov
or
int3
shlb
mov
nop
in
test
movl
push
push
daa
add
ja
xor
bound
cmpsl
add
lahf
xchg
cmpsl
test
and
cmpsl
jmp
lret
incl
inc
andps
and
pop
inc
je
mov
pop
push
or
sub
add
shr
sti
lea
cltd
int
andl
pop
xchg
cmp
subl
mov
nop
rclb
sub
pop
mov
xor
out
int
sarb
cltd
xchg
push
jne
std
sti
sbb
sti
mov
push
test
movsl
loope
std
adc
push
int
aam
repnz
push
aas
sbb
pusha
in
dec
fistps
xlat
pop
inc
jne
test
push
arpl
repnz
iret
sub
xchg
dec
out
jnp
jmp
nop
adcl
out
mov
mov
push
adc
jnp
mov
in
fcmovnbe
orb
mov
cwtl
sub
roll
or
xor
ds
sbb
in
and
ds
inc
pusha
add
mov
cmpsb
ljmp
arpl
repnz
ficoms
push
sbb
dec
mov
stc
cmp
gs
ret
nop
lret
insb
addr16
jecxz
mov
and
sbb
jnp
cmp
out
test
mov
xlat
xrelease
push
imul
imul
jl
jbe
cwtl
in
mov
jg
and
cltd
in
mov
mov
test
xchg
mov
sbb
push
sbb
int
dec
cwtl
cmpsb
fldt
push
sub
push
inc
pop
or
and
ljmp
add
adc
insl
dec
aad
xchg
test
dec
icebp
ds
mull
dec
pop
and
mov
pop
sbb
sub
add
mov
imul
add
push
xchg
cltd
ret
xlat
cmp
push
xor
js
gs
scas
rcr
jne
fs
adc
lahf
insl
in
add
sbb
hlt
vpmaddwd
std
mov
lods
dec
cmp
xchg
mov
cli
ret
lret
mov
lock
pushf
clc
test
mov
pushf
mov
mov
psrad
inc
jmp
push
lods
lds
adc
out
jl
xor
dec
fiaddl
int3
repz
pop
fidivl
popf
xor
mov
jae
cmp
mov
std
aam
shll
enter
or
pop
int3
ror
sahf
dec
fcoml
imul
loopne
enter
mov
hlt
shl
sub
lods
or
push
add
jp
xchg
fdivr
ficompl
rcrb
mov
call
xchg
cmp
loope
loope
push
sub
xor
ret
dec
loopne
mov
push
insl
xchg
dec
fidivrs
daa
movsl
inc
fwait
ja
cmp
ret
popa
imul
pop
sbb
call
add
mov
fucomi
int
cli
xor
test
dec
mov
cmc
or
adc
xchg
ja
pushf
cmp
pushf
push
call
xlat
adc
add
jmp
push
push
stos
mov
lret
mov
jecxz
scas
lods
xor
jns
cmpsb
xchg
test
mov
adc
cmp
sbb
pushf
jge
mov
bound
mov
rcll
cmc
mov
mov
fwait
mov
cmc
nop
pop
mov
sub
push
lock
aad
clc
jl
mov
mov
mov
mov
filds
mov
adc
lret
movb
insl
jl
mov
loope
frstor
test
pushf
cmp
xlat
fld
xor
push
xchg
xlat
into
pop
inc
sbb
and
movsb
sub
fwait
lcall
sti
push
mov
fsub
fcmovbe
jecxz
insb
rorl
sbb
pop
into
sbb
divl
mov
jle
jle
inc
push
push
inc
add
adc
sbb
data16
mov
nop
test
test
fs
xchg
mov
imul
pop
roll
push
fwait
leave
out
mov
movsl
in
movsl
mov
xlat
pop
sbb
or
mov
mov
adcb
dec
cmp
dec
xor
inc
fmull
mov
xorb
sub
cmp
aas
xor
xor
dec
aad
dec
cmp
mov
push
push
cmp
and
or
cmp
xchg
or
jmp
call
imull
jae
out
mov
push
sub
je
dec
leave
ret
fdivrl
pop
sub
adc
cmp
lret
jecxz
add
pop
sub
repz
insl
ret
mov
not
decl
xchg
xchg
stc
test
jmp
mov
out
arpl
sbb
jge,pt
aad
ja
lret
dec
adc
sub
and
mov
cmpsl
pop
push
adc
popl
das
int3
lahf
fs
dec
xchg
int
repnz
push
adc
movsb
pusha
out
push
cli
ljmp
add
push
pop
sub
mov
lods
cltd
iret
mov
outsl
cmovae
imul
addr16
dec
sub
cltd
pop
jl
cwtl
idiv
pushl
jg
sub
mov
cmp
xor
or
or
insb
gs
mov
push
enter
push
ja
or
inc
cmp
push
mov
mov
call
mov
loop
xchg
pop
mov
add
and
pop
stos
subl
decl
pop
inc
add
lods
jg
adc
xor
add
pop
mov
mov
fabs
enter
add
incl
jne
repnz
scas
lahf
jmp
shl
shl
out
sub
push
mov
or
or
mov
jne
pop
add
outsl
jae
pop
inc
sbb
adc
adc
in
fsts
pusha
jne
xlat
dec
adc
jns
fdivrl
xchg
pop
out
push
xchg
bound
fldenv
cltd
je
push
pop
test
xchg
stos
fsubrl
mov
sub
add
fwait
int
sbb
and
hlt
cmc
and
inc
pop
jle
imull
imull
les
in
fcoms
clc
nop
les
adc
test
call
dec
mov
aam
popa
inc
imul
pop
jg
jg
pop
packuswb
add
pop
sbb
mov
mov
push
inc
push
push
test
jae
or
mov
fwait
iret
into
pop
leave
push
xchg
jmp
pusha
popa
xchg
mov
sub
or
jb
xchg
lahf
xchg
lahf
or
pop
andl
or
popa
lahf
xlat
push
gs
mov
add
aaa
outsb
in
ljmp
fld
imul
data16
addr16
aas
or
xor
loopne
fimull
imul
mov
ja
inc
outsb
dec
jb
outsb
push
jb
jbe
push
jb
adc
sub
stos
pop
js
xor
fnstenv
xlat
iret
mov
xlat
mov
ret
mov
bound
loopne
fstps
or
out
cli
rorb
lcall
mov
sbb
add
int
xor
in
jmp
jecxz
pop
mov
dec
pop
and
jbe
push
push
pop
inc
jp
pop
push
pop
pop
sub
andb
push
pop
add
dec
adc
fs
pop
xor
cmp
imul
dec
scas
mov
addr16
decb
dec
adc
xchg
ss
fsubp
dec
stos
addb
adcb
mov
dec
ret
or
xor
inc
out
insb
cwtl
lods
stc
imul
adc
jbe
mov
clc
xor
ja
push
ljmp
outsb
das
xchg
out
arpl
mov
sbb
in
cmc
roll
adc
and
add
outsb
push
push
jne
aaa
inc
and
sub
dec
or
wrmsr
mov
je
repnz
mov
sbb
sub
in
jo
push
mov
cmp
push
aas
mov
sbb
sub
sahf
movl
aam
add
rcr
stos
lcall
mov
pop
scas
jmp
add
das
adc
cmp
mov
sar
dec
lcall
andl
mov
lret
jne
xchg
lahf
shl
int3
push
sti
fistps
icebp
xor
pop
mov
sbb
mov
cli
int3
loope
push
dec
sbb
sbb
mov
push
jae
or
shlb
pop
pop
add
outsb
pop
dec
jg
adc
inc
inc
xor
cwtl
ficoml
lcall
out
fldcw
scas
stos
cmpsb
or
xchg
jp
push
sub
sub
sbb
sbbl
mov
repnz
stos
repz
movsb
mov
mov
cmp
and
add
jmp
dec
insl
ret
fistpl
aam
inc
data16
cmp
dec
xor
dec
cmp
xchg
lea
inc
push
out
ret
or
into
lret
push
sti
push
sarl
xlat
lret
repz
mov
pushf
add
movl
pop
aad
sub
in
js
sbb
and
adc
jge
mov
mov
mov
cmpsl
mov
int
icebp
shrl
xchg
jb
test
lret
out
lahf
mov
cmp
jle
pop
mov
cmp
cmp
stc
in
add
insl
dec
cmp
fcomps
xchg
inc
mov
out
xchg
dec
pop
sbb
and
xchg
ds
push
out
ret
jmp
jmp
mov
lret
stos
ljmp
adc
mov
and
jb
jmp
aaa
push
or
pop
rcrb
shl
mov
add
iret
scas
iret
clc
outsl
jb
or
fisubs
fisubl
jmp
out
inc
js
mov
hlt
inc
les
ds
jae
aad
cld
out
stc
test
data16
fsub
cmc
dec
xchg
jno
clc
xlat
ficomps
movsl
test
mov
xchg
mov
adc
push
mov
xchg
sarb
jnp
ljmp
mov
test
lods
lock
movsb
fwait
sbb
pop
push
fstpt
mov
ljmp
mov
ds
fidivs
out
lret
ss
add
add
xchg
xchg
mov
outsl
xchg
dec
lods
nop
outsb
jecxz
in
in
jo
rcll
ljmp
rcll
outsb
jecxz
push
test
std
mov
cmc
vpsllw
movsl
in
sub
mov
rcrl
shlb
sub
decl
mov
popf
xchg
mov
in
lods
mov
jmp
les
pop
or
movsl
mov
jl
enter
pop
fwait
shlb
movb
and
mov
test
xchg
push
int3
xchg
add
lock
xorb
add
rcl
sub
push
fldt
push
mov
mov
cmp
cmp
cmp
arpl
pop
xchg
int
mov
bnd
lret
fdivrp
into
mov
sub
fwait
jne
jne
jmp
cld
mov
mov
scas
lret
mov
ljmp
aas
add
dec
mov
and
orb
push
or
push
jae
mov
jae
push
xor
pusha
scas
xchg
mov
lret
cmp
mov
outsl
std
repz
xchg
scas
lahf
fimuls
sub
fisubl
lcall
lcall
dec
push
mov
mov
mov
in
test
mov
int
push
cmp
gs
and
fdivr
sbb
aam
int3
cmp
pop
roll
gs
mov
push
lock
lahf
outsb
mov
es
push
loope
dec
rcrb
ss
jecxz
jb
pop
aaa
cltd
stos
dec
dec
mov
lret
rorb
dec
dec
xchg
cltd
ret
ja
dec
gs
add
rclb
sarl
sbb
jo
xchg
das
mov
mov
out
mov
pop
push
ret
and
ss
push
sub
pop
push
push
ss
push
sub
dec
mov
pusha
cmp
sahf
push
jo
or
dec
ds
push
inc
push
dec
or
cmp
in
push
movsb
iret
cltd
adc
cmp
cmc
sbb
rclb
iret
sub
out
sub
rcrl
in
in
aam
andb
xor
rcll
aam
test
mov
add
jno
test
jp
arpl
into
lods
lods
xchg
lods
or
xchg
jmp
pop
xchg
out
jns
je
fs
cmp
pop
insb
dec
push
adc
adc
scas
dec
push
aas
pop
es
ja
aas
inc
jle
sbb
or
adc
inc
xor
insb
xor
pusha
outsl
mov
cmp
jmp
shlb
movb
add
mov
shll
jmp
daa
daa
push
mov
pop
lds
lcall
rorl
stc
int
hlt
push
popf
push
jg
cmpsl
movsl
xchg
ret
sub
cmp
sbb
or
adc
dec
mov
add
subb
inc
and
out
lea
jmp
adc
imul
testb
mov
pushf
test
and
int3
cwtl
cwtl
xchg
push
mov
dec
out
testb
std
movsb
cli
and
repnz
sub
ja
in
mov
jbe
daa
or
leave
aaa
mov
mov
nop
imul
jno
xchg
mov
push
movntps
gs
xchg
cmpsb
mov
mov
lcall
fisubl
mov
pushw
jbe
or
and
pop
adc
xor
jge
add
hlt
jge
jg
dec
lret
js
dec
stos
xlat
out
mov
sub
shrb
jecxz
in
in
cmp
mov
nop
push
popf
mov
rcrl
sbb
push
fists
jle
in
push
outsb
idivl
das
into
xchg
cmc
or
push
and
dec
imul
mov
mov
jbe
shlb
inc
popf
in
jb
pop
adc
scas
in
push
inc
jge
adc
loop
out
lret
lret
out
adc
cmpsl
fs
addr16
mov
push
or
push
push
push
cs
jbe
add
ss
popa
out
jnp
fsub
sub
pushf
popf
and
aas
fldenv
loopne
icebp
inc
data16
add
aas
and
test
stos
pop
xor
shlb
pop
nopl
xor
dec
cmp
pop
adc
cmp
inc
dec
cmpsb
adc
mov
dec
and
into
cwtl
sbb
push
sub
ja
add
jb
and
ss
push
and
ret
xchg
mov
pop
or
imul
xchg
sub
inc
andl
xchg
fsub
shr
sahf
outsl
push
cmp
xchg
dec
fdiv
inc
pop
or
stos
lea
adc
mov
fs
testb
sbb
or
mov
xor
dec
popf
aas
popa
adc
push
adc
popf
and
xchg
cmc
lods
xchg
in
icebp
test
mov
xor
inc
in
sbb
aad
dec
cmp
or
or
cwtl
mov
and
leave
adc
or
mov
fabs
fistpl
fbld
and
jbe
shll
xor
jmp
fucomi
in
cltd
out
popw
xor
nop
fdivr
mov
adc
inc
adc
cmp
fs
dec
je
xchg
call
mov
in
lods
in
mov
xchg
bound
popa
sub
or
mov
lods
out
cli
into
iret
sub
sbb
test
test
sti
inc
fsts
add
bsr
mov
btc
lahf
movsbw
mov
stc
call
pop
pop
pop
sub
or
lcall
mov
mov
xchg
and
fs
fwait
pushf
dec
adc
lods
repnz
pop
stos
jl
sahf
mov
in
nop
pop
jp
xchg
sbb
lret
push
mov
cmpsb
clc
add
repnz
fyl2x
leave
sub
pop
add
xchg
addb
adc
xor
cmp
xor
sti
cmp
add
imul
jae
inc
lods
test
inc
imul
dec
push
pop
sbb
dec
xchg
mov
mull
cld
cmp
mov
xchg
divl
add
sub
andb
enter
std
add
pop
icebp
loop
mov
and
fwait
mov
push
iret
icebp
icebp
jmp
lahf
popl
cmpsb
fidivrl
cmpsl
hlt
inc
ret
test
mov
addr16
adc
jge
xchg
fdivrs
in
rcl
int
stc
cmc
std
aad
adc
mov
pop
test
clc
cltd
pusha
fs
or
data16
push
dec
sbb
cmp
lahf
xchg
imul
enter
rorb
fcomps
cmp
test
dec
sub
lds
das
mov
movb
rcr
test
ds
xchg
mov
push
pop
fsubs
xor
sbb
sarl
mov
add
sub
pop
lods
hlt
in
in
jne
inc
pusha
je
inc
jl
inc
sub
inc
adc
adc
and
int3
mov
lea
pusha
push
call
loopne
es
inc
adc
push
cmp
pusha
add
inc
xor
inc
xor
pop
jecxz
push
jmp
mov
dec
dec
hlt
mov
jge
jne
hlt
nop
lods
jae
push
icebp
add
rcl
sub
mov
inc
mov
imul
push
cwtl
mov
add
inc
imul
aad
test
leave
xchg
xor
xor
cwtl
loopne
mov
sub
mov
adc
icebp
adc
and
je
jmp
inc
pushl
jmp
ja
outsb
adc
inc
adc
mov
fistpl
iret
scas
idivl
cmp
repnz
stc
testl
arpl
cld
movsb
mov
adc
mov
inc
cltd
lods
xchg
sbb
xlat
movsb
pop
jns
or
fldl
shr
std
cld
adc
add
inc
leave
aad
das
push
pavgw
lret
mov
mov
in
push
sahf
jle
add
adc
cmc
shrl
push
jbe
pop
data16
or
sub
aas
fsubl
and
dec
in
jl
nop
push
out
jmp
mov
stos
icebp
movsl
in
leave
test
mov
das
mov
loopne
idiv
sbb
int
hlt
jp
jp
or
movsl
in
push
jmp
mov
push
jecxz
sub
push
pop
inc
jp
hlt
sub
and
add
or
in
mov
inc
bound
pop
push
outsb
push
dec
adc
jb
adc
sub
push
rcrl
xor
push
cwtl
je
push
inc
and
inc
push
push
sub
and
jg
icebp
cmpb
insb
jmp
repz
or
and
fdivrl
xchg
ja
inc
sahf
ja
adc
rolb
sarl
inc
lret
jecxz
cmp
add
adc
into
hlt
les
jle
pop
dec
or
fldenv
sbb
fwait
out
rcll
mov
pop
hlt
sbbb
push
inc
sub
ss
cmp
ss
jp
jbe
adc
leave
daa
scas
jp
pop
jbe
adc
push
sub
mov
adc
jle
lock
push
adc
and
dec
popf
ret
push
cs
inc
xchg
stos
xchg
test
pop
fldenv
out
repz
jo
lods
push
les
sti
iret
fwait
pop
lods
push
sbb
insb
dec
mov
and
xorl
shr
iret
repz
sub
sahf
jge
pop
jb
dec
jb
aaa
sub
or
dec
add
dec
xor
adc
jo
lds
mov
xchg
pop
push
dec
fcompl
lea
mov
adc
aaa
outsb
cli
cmpsb
out
hlt
cli
lods
mov
and
shrb
dec
dec
dec
fstpt
push
sbb
sub
xchg
push
dec
scas
bound
movsb
clc
sub
out
es
fisubs
add
and
rcrb
mov
imul
lods
lea
jns
pop
rorl
dec
and
cmp
pop
sub
imul
in
mov
sub
and
icebp
lds
std
rcr
adc
test
pop
add
push
pop
pop
push
jp
jp
push
or
add
push
sbb
js
fdiv
pop
mov
cli
and
dec
lret
sahf
mov
test
nop
mov
cmc
xor
xchg
in
cwtl
mov
ret
pop
mov
sub
adc
ffree
in
lret
std
adc
lds
jp
test
xchg
adc
stc
insl
lret
ret
sahf
lret
neg
bnd
out
cli
lret
jp
dec
cmc
add
jp
pand
fsubrs
ss
dec
cmp
sbb
adc
inc
mov
xor
mov
add
adc
adc
and
das
mov
xchg
adc
std
in
stc
mov
popa
inc
adc
jno
sub
push
addr16
shlb
aad
adc
cwtl
fsub
int3
movsb
cwtl
shrb
adc
mov
movsb
push
push
sbb
es
test
mov
lock
pop
cmovne
iret
leave
movsl
lret
push
loopne
clc
mov
cs
stc
sarl
mov
dec
mov
sbb
lds
sub
lock
es
adc
push
and
sbb
loope
inc
ja
mov
sarl
lods
mov
mov
out
ja
outsl
pop
dec
dec
ja
ja
inc
jg
arpl
sub
sub
iret
mov
pushf
bt
clc
mov
call
dec
out
stos
mov
mov
lock
lock
mov
mov
dec
dec
xor
ret
xchg
popa
or
push
jle
inc
push
popa
mov
stos
fwait
adc
leave
and
pop
push
push
sbb
pop
or
dec
add
sub
push
sub
pop
pushf
xchg
ja
movsl
leave
in
jecxz
lds
fistpll
jmp
out
mov
cmpsl
xchg
js
dec
push
ja
sti
scas
inc
cmp
ret
jg
mov
sbb
xchg
mov
repnz
cmp
pop
sahf
jbe
jmp
addr16
rcll
andps
xlat
pop
sbb
xchg
add
outsl
outsb
mov
bound
mul
inc
cmp
cmc
sarb
adc
in
lahf
mov
mov
dec
push
jl
add
je
inc
jo
outsb
out
push
add
xor
xchg
adc
jmp
int
cli
js
dec
insl
add
and
push
insl
cmp
adc
pusha
cmp
pushf
fdivrs
das
sub
jns
dec
cmp
add
imul
dec
mov
mov
cmc
mov
sub
out
dec
mov
sbb
mov
loopne
fwait
movsb
dec
scas
xlat
pop
sbb
push
decb
mov
dec
ja
dec
fdivrl
into
inc
jo
mov
xchg
xchg
popf
mov
dec
push
in
or
je
pop
and
mov
outsb
push
xchg
sbb
sbb
or
sub
sub
sbb
sub
push
mov
dec
dec
cs
insb
add
aas
bndldx
mov
sar
in
mov
aam
int3
aam
dec
pop
lods
call
dec
push
sub
dec
add
vsubss
js
jae
ja
lds
xchg
xchg
add
fisubrl
sub
js
pop
imul
sub
neg
ds
sar
and
dec
lea
jg
ret
shll
or
push
push
arpl
test
xor
mov
jb
out
mov
andl
sub
movsb
ljmp
lret
loopne
mov
mov
sahf
loope
xchg
xchg
mov
popf
into
cltd
pusha
hlt
jb
pusha
imul
jo
outsb
jns
xor
pop
and
mov
cmp
ja
push
mov
adc
push
inc
jo
sub
cld
aas
sbb
stos
pushf
lea
jmp
inc
jmp
int3
jmp
sub
dec
and
add
cmp
xor
xchg
cmp
jp
jge
dec
adc
sub
xor
mov
mov
shrb
nop
dec
fwait
mov
popl
pusha
xor
pop
and
roll
dec
sahf
in
leave
and
inc
push
daa
jae
mov
das
aas
cmp
jae
xor
outsl
arpl
inc
outsl
sub
stos
out
incl
fldt
lods
ja
sti
popf
vpsubusw
std
xchg
shr
sub
fildl
or
sbb
icebp
iret
loopne
mov
int3
add
pop
add
aam
jge
out
sub
in
lret
mov
aaa
stos
mov
push
mov
int
cwtl
mov
inc
stc
cld
add
aad
pop
or
dec
je
mov
push
js
adc
sbb
ficoml
jne
add
imul
cmp
rclb
je
shl
mov
mov
jmp
mov
push
xchg
cltd
lods
inc
int
sahf
lds
cmp
popa
cmp
inc
push
mov
pop
cmc
or
inc
cltd
adc
cmp
mov
in
jecxz
dec
std
icebp
sub
test
xchg
idivl
cmc
add
incl
sub
movsl
cmp
ret
out
push
movsb
shll
sbb
dec
cmp
dec
pop
dec
jle
jb
ss
bound
adc
cmp
stos
fildl
movsl
iret
cmpsb
andb
fadds
pop
cmp
sahf
jne
fidivrl
xchg
out
cltd
cld
inc
sbb
aam
je
je
repnz
std
adc
mov
xor
add
out
daa
pushf
test
xchg
outsb
dec
sub
or
adc
push
dec
sbb
inc
mov
das
push
dec
jnp
stos
rcl
fidivl
loop
cli
scas
out
sub
lahf
jl
pop
mov
sub
loope
int
lods
rol
cltd
rcl
cmp
addl
cmpl
jl
adc
pop
add
hlt
lds
inc
enter
dec
scas
cmpl
dec
push
lret
jne
mov
mov
and
lock
jae
or
clc
mov
stos
loop
addl
repz
or
mov
inc
sbb
pop
push
jno
jmp
mov
out
iret
stc
out
jnp
inc
sahf
mov
idivb
cmpsl
neg
mov
mov
fdivp
sub
xchg
push
push
push
sbb
loope
cmp
and
inc
das
arpl
outsl
and
loope
or
aaa
arpl
mov
stos
mov
push
pop
sub
enter
mov
aam
dec
fstl
subb
popf
ljmp
mov
cmp
or
and
mov
movsl
std
aad
cld
stos
lds
add
popa
adc
mov
mov
cltd
lds
in
int
shrb
adc
or
inc
gs
arpl
insb
insb
push
popa
outsb
addr16
xchg
sahf
subb
test
int3
clc
xchg
pushf
call
mov
xchg
inc
lret
out
ficompl
sbb
clc
push
push
push
sbb
leave
mov
add
jecxz
jo
xchg
xchg
sub
mov
push
and
adc
js
xor
out
into
and
sub
pop
push
mov
sarl
cmp
push
add
mov
adc
cmp
repz
scas
pop
lret
inc
add
push
inc
push
and
mov
add
sbb
iret
mov
jmp
mov
mov
and
dec
push
jbe
ds
mov
push
sbb
or
xor
sub
pop
je
mov
pop
push
insl
jo
leave
dec
jle
and
push
loopne
mov
xchg
cltd
into
cli
lods
bnd
cld
fabs
rcl
andb
daa
divl
xor
addl
ds
fsts
es
and
or
push
sub
pop
pushf
mov
cmp
jl
sub
jo
push
push
push
cs
outsb
jbe
pop
ds
mov
jmp
push
rcll
dec
jo
loopne
loopne
or
push
or
sti
bound
pop
mov
fsubs
adc
add
out
pushl
xor
pop
xchg
insl
cmp
frstor
and
inc
and
outsb
divb
mov
popa
dec
inc
js
sbb
outsl
mov
insb
inc
fldcw
mulb
sbb
mov
or
sbb
pop
jns
inc
imul
inc
sub
add
std
inc
cmp
test
movb
neg
pushf
lea
jg
not
stc
pushf
ror
mov
pushw
popfw
mov
pusha
inc
jmp
imul
ss
pop
inc
add
dec
sub
inc
push
ja
addl
pop
bound
aam
pop
add
div
xor
das
xchg
mov
fs
adc
loopne
add
lods
pop
add
xchg
push
ja
lea
add
enter
jno
push
pop
rcll
mov
call
jg
adc
movsb
fwait
je
outsb
push
es
cmp
push
mov
outsb
push
pop
cmp
loop
mov
xor
mov
mov
call
sub
mov
mov
xor
into
stc
std
fwait
repz
neg
out
repz
mov
jnp
xor
loopne
xchg
pop
sub
push
add
int
lret
jne
ss
imul
sbb
andb
xor
aad
scas
jnp
fidivrl
adc
sbb
mov
daa
stc
xchg
orl
mov
push
pop
sub
push
and
mov
adc
push
pop
adc
inc
insl
sub
xor
mov
xchg
push
inc
adc
bound
pop
and
push
push
xlat
aam
repnz
push
scas
sbb
jb
push
adc
lret
test
or
mov
les
mov
cmp
jge
jmp
repz
or
out
sbb
das
adc
pop
xor
push
pusha
mov
mov
mov
ret
or
nop
idivb
jg
pop
cmp
jp
bound
and
imul
xor
mov
aam
lods
mov
test
mov
adc
les
push
daa
jae
inc
xchg
bound
pop
popa
and
xor
pop
cmp
fistpll
push
xor
and
mov
shl
popa
sbb
jmp
ficoms
cs
fbstp
mov
xchg
ret
push
sub
outsb
insb
lret
clc
sub
ret
pop
jo
cmp
sbb
xor
xchg
ds
xor
mov
test
dec
add
mov
sub
inc
hlt
hlt
int
and
sub
dec
imul
test
mov
popf
cmc
mov
pop
jns
mov
aad
cwtl
fstl
rcl
mov
fldt
sti
stos
jecxz
mov
aas
pop
mov
orb
sbb
in
lods
push
jp
push
dec
stc
ja
mov
mov
adc
sbb
lock
rclb
ja
or
cmp
mov
pop
push
mov
jnp
adc
push
inc
addr16
outsl
aas
ja
adc
cs
ret
shr
stc
cmp
jmp
lea
jge
pushf
lea
je
cmp
test
jb
or
pushf
pushf
lea
je
clc
movsbw
sub
xor
cwtl
add
mov
xchg
shrd
aam
dec
mov
shld
shl
and
shr
ror
mov
cmp
bt
push
or
movb
pusha
pushf
pushf
lea
je
pushf
clc
shl
add
bsf
test
sub
jmp
lea
call
call
fs
cs
lret
lods
push
je
inc
mov
int
cltd
add
xor
pop
xchg
pop
testb
idivl
push
or
sbb
mov
push
mov
aam
xor
sub
std
into
addr16
cmp
xchg
and
inc
and
cmp
and
push
test
add
jmp
test
pop
push
mov
xor
rolb
or
iret
rclb
or
notb
mov
cmc
mov
xor
scas
jae
jne
pop
or
sub
pop
addr16
sahf
dec
pushf
popa
push
popa
jno
into
mov
jmp
movsl
std
popf
movsl
mov
fidivrl
mov
out
idiv
out
out
mov
fcompl
and
aaa
sub
sub
and
incl
push
mov
in
inc
push
out
imul
jmp
cltd
lds
mov
dec
jp
xchg
add
pop
mov
in
cltd
xchg
aas
mov
imul
sahf
sbb
loope
lock
pop
insb
les
mov
mov
pop
inc
popf
jmp
out
xchg
mov
xchg
rolb
xchg
adc
add
dec
das
pop
jg
xchg
add
inc
inc
or
xor
xor
sbb
rcr
imul
pop
lret
jl
loope
fistps
mov
xor
lcall
pop
mov
lea
nop
dec
fidivl
arpl
sub
in
push
ds
repz
sbb
addr16
sbb
in
xchg
rolb
ja
and
fimuls
test
pop
dec
inc
inc
jle
dec
push
push
pop
push
outsb
outsb
dec
dec
sub
cwtl
pop
jge
es
ds
cs
push
xor
add
sbb
or
cmp
dec
dec
xor
dec
pop
add
adc
jg
int
pop
adc
in
fwait
push
add
loope
pop
mov
fdivl
inc
in
add
pop
adc
xlat
or
inc
add
add
mov
std
popw
dec
arpl
add
addr16
imul
pop
sub
push
or
jp
pop
sbb
sti
scas
sti
jecxz
scas
fbstp
rcrb
hlt
movb
ljmp
mov
xchg
jno
add
in
dec
sub
js
lods
mov
adc
sub
mov
ret
push
std
jge
push
fidivrs
push
in
jecxz
lcall
loope
xor
insb
push
xchg
cs
xor
inc
lret
sbb
adc
aas
sysret
xor
daa
pop
inc
adc
pop
sub
sub
jp
arpl
ret
lcall
loopne
in
mov
hlt
mov
dec
adc
pusha
leave
aam
pop
sbb
xchg
es
mov
loopne
test
ret
aaa
cmpl
sub
lret
sub
add
mov
cmpsb
adc
pop
push
jmp
mov
andl
push
push
and
xor
and
sub
ja
ret
fwait
xlat
push
pop
cmp
in
movsl
shrl
stc
xor
mov
add
jmp
test
loope
adc
loopne
or
push
test
fists
push
xchg
dec
ret
xchg
loopne
imul
sbb
inc
or
loop
cmc
call
mov
lret
ret
mov
sub
scas
insl
dec
xor
and
adc
jl
add
fs
push
xor
adc
jns
loope
mov
inc
sub
inc
or
jge
icebp
lods
pop
adc
dec
or
mov
adc
xchg
loopne
or
bound
adcl
add
loop
mov
enter
and
and
outsb
cmp
pop
add
sbb
sub
pop
mov
cld
cld
in
pop
shl
loop
out
sahf
xchg
xchg
xchg
jne
ljmp
insl
mov
out
mov
movsb
and
lahf
push
jnp
jae
das
jns
in
jo
in
xlat
sti
xchg
cmpsl
sbb
mov
sub
cmpb
fistl
xor
push
lock
push
dec
call
inc
sbb
or
sub
or
bnd
lods
jmp
jmp
mov
pop
movsl
shrb
push
and
fisubs
sbb
add
and
inc
or
hlt
jbe
push
repnz
call
cmp
or
pushl
pusha
lea
je
bsr
add
movzbw
ror
bsr
sub
rol
bts
shrd
cmp
shr
inc
test
mov
not
mov
stc
cmp
inc
dec
add
shrd
sar
add
cmp
ror
mov
jmp
sbb
arpl
int
xor
jg
pop
movq
add
and
hlt
sarl
sbb
shll
inc
inc
jne
pusha
loop
pop
shll
mov
or
or
in
cmp
or
jge
shrb
xchg
mov
fisttpl
mov
and
xchg
dec
aam
mov
or
ret
mov
or
lcall
ja
xor
add
andl
adc
cmp
pop
cld
jle
cmp
pushf
push
jmp
push
xor
cmp
or
mov
sti
mov
stos
cmpsl
xchg
mov
cmp
push
push
insl
call
std
notb
push
packuswb
mov
sbb
xchg
mov
cmpsb
mov
sub
push
xchg
out
push
mov
push
push
xchg
adc
js
in
enter
xchg
test
jb
pop
and
push
jl
sbb
adc
cltd
incb
dec
pop
pop
ljmp
sarb
lahf
pop
pop
imul
nop
sub
add
push
add
lods
out
mov
icebp
test
pop
movsl
pop
cmpsb
xchg
mov
imul
popa
jne
pop
pop
fcmovb
lret
cli
lret
sahf
loop
into
out
repnz
adc
mov
pushf
movl
push
or
pushf
mov
lea
je
xor
btr
sub
dec
mov
not
xadd
mov
shl
pusha
shr
test
mov
test
jmp
cmc
bt
ror
pushf
call
cmp
push
pusha
pusha
xor
lea
jmp
inc
xor
pusha
inc
ja
ss
fs
dec
inc
sub
jbe
es
push
push
bound
xchg
pop
jl
xor
aas
cmp
xchg
rorb
jb
jns
jmp
fists
mov
inc
inc
xchg
mov
add
xchg
loopne
das
into
rcl
imul
adc
int
jns
xor
and
es
jp
jle
push
ds
pop
imul
out
or
push
jno
dec
insl
jno
insl
or
jno
insl
inc
pop
fcomps
int
cmp
mov
dec
mov
out
jne
pop
loop
scas
mov
push
iret
andl
pop
fcomps
xchg
pop
out
loop
push
cmp
test
push
test
inc
mov
mov
popf
sbb
popa
cmc
mov
dec
fs
or
popa
aaa
or
sub
xchg
xchg
xlat
dec
mov
and
cmp
push
inc
jl
jo
sub
or
mov
pusha
mov
pushl
pushf
pushl
pushl
ret
loop
mov
xor
push
and
sbb
insb
pop
cmp
sub
sbb
incl
or
jmp
pop
gs
sarb
outsb
dec
dec
and
pop
jge
js
and
or
xchg
outsl
mov
cltd
and
shll
lret
popa
cmp
fbstp
test
aas
fwait
jns
stc
stc
hlt
aas
test
nop
pop
adc
sbb
and
xchg
pop
pop
push
mov
jnp
arpl
sarb
inc
std
dec
out
lds
and
push
xchg
out
imul
push
das
pop
jno,pt
sub
sti
mov
fs
pop
cmpsb
in
sbb
daa
into
lcall
addr16
fcmovu
xchg
dec
sbb
xor
and
sub
imul
ja
outsl
pop
pop
jae
arpl
sub
push
int
jae
cltd
cmc
jno
addl
loop
fiaddl
adc
pushf
push
sub
shrb
xchg
xchg
ja
add
imul
mov
xor
xor
cltd
inc
xchg
loope
xchg
dec
out
inc
jmp
mov
jge
sbb
sub
jbe
pop
push
inc
stos
repnz
divb
mov
stos
xchg
adc
fbstp
sbbb
clc
mov
pop
movsb
mov
lret
lret
fisubl
jmp
jb
sbb
xor
mov
loop
push
dec
imul
add
jecxz
inc
int3
push
add
add
pop
ret
push
clc
int3
cmc
popa
fidivrl
push
icebp
mov
jl
mov
data16
into
iret
out
sbb
mov
lahf
xchg
mov
xchg
ret
cmpsl
lret
mov
sub
ficompl
daa
ja
test
andl
stos
iret
mov
fwait
mov
pop
add
orb
out
repnz
lcall
pop
cltd
jmp
mov
enter
pop
cmp
fdivs
stos
ficomps
shl
pop
dec
nop
icebp
xchg
lods
push
into
push
jnp
xchg
mov
lahf
xchg
mov
mov
sub
paddsb
popa
push
xchg
clc
pop
imul
cmp
jnp
push
inc
inc
addr16
jmp
mov
addr16
dec
xor
inc
jmp
sub
daa
test
push
sbb
dec
repz
or
stc
and
fldl
adc
lds
mov
call
rorb
add
loopne
int3
sub
shr
aad
jno
pop
jnp
aas
push
mov
gs
xor
jge
cmp
sub
clc
call
or
or
adc
pop
or
sub
adc
gs
mov
pushf
pushf
push
movw
lea
jmp
cmp
jns
cmp
inc
into
pop
sbb
xor
jae
push
aaa
jg
pop
and
in
ljmp
mov
xlat
fld
sub
orb
movsl
inc
mov
mov
fimuls
aaa
mov
clc
dec
lret
lods
dec
dec
sbb
sub
rcrl
mov
adcb
aad
int
loope
adc
fprem1
sub
lods
outsl
dec
popa
and
add
or
inc
push
dec
push
outsb
sub
sub
add
mov
jmp
xchg
je
pop
mov
dec
xchg
push
inc
outsl
and
or
mov
xor
adc
aad
adcl
cmp
clc
rcrl
push
mov
mov
pop
cmp
dec
addr16
rolb
jns
js
cmp
jb
sti
xchg
out
mov
mov
in
fdivl
test
xchg
xchg
fildll
rcrb
inc
pop
pop
pop
das
adc
add
adc
aas
pop
cmp
adc
bound
das
sbb
cltd
jle
out
sbb
adc
and
adc
jl
push
inc
mov
add
xchg
mov
fcmovne
test
push
scas
movsb
and
mov
dec
loop
mov
or
lahf
push
insl
dec
loopne
xor
xor
xchg
push
cmp
xchg
mov
incl
popf
jle
out
sub
insb
cmp
cmp
ja
loope
mov
stc
mov
outsl
pop
xor
mov
in
fxam
test
int
fyl2xp1
sub
mov
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
shrl
jae
lea
xchg
jecxz
cmpsl
iret
mov
not
and
aad
and
cltd
ret
mov
xchg
adcb
jmp
ror
push
mov
test
fimuls
test
clc
sub
jmp
push
repz
repnz
xchg
sub
movsl
test
pop
das
mov
test
mov
jmp
pushf
pushl
adc
mov
push
push
pushl
ret
scas
mov
insb
aad
lret
in
cltd
fstps
leave
mov
cmc
mov
sub
test
fnstsw
adc
push
adc
mov
pop
movsl
cltd
js
mov
test
dec
scas
out
shll
mov
rcrb
andb
mov
sbb
sub
add
add
cltd
sbb
test
sub
call
jecxz
insl
dec
push
dec
inc
jge
cmp
pop
sub
add
int
testl
mov
ret
std
popf
lds
std
add
add
shll
xor
ds
fmull
sub
and
insb
cs
cmp
scas
dec
imul
das
roll
mov
stos
jb
cmp
aam
lods
lods
shl
mov
fsubrl
test
adc
icebp
adc
pop
push
inc
movhps
add
insl
inc
push
sbb
jno
outsb
ljmp
cmp
xchg
jge
mov
stos
iret
lea
push
jnp
popa
orl
cli
sahf
sahf
mov
stos
xchg
mov
adc
rcll
push
push
lret
mov
in
out
cmp
shlb
sub
lret
push
jp
jge
add
int3
push
push
cmp
mov
loop
data16
jmp
adc
mov
or
out
cmp
sub
repnz
xor
or
xor
lahf
jle
add
ret
adc
mov
xchg
jb
xchg
pop
stos
and
ljmp
add
adc
hlt
imul
add
stos
xlat
xor
insb
imulb
add
insl
insl
dec
gs
pop
inc
jge
cmp
lds
jg
xchg
mov
fs
ljmp
fdiv
lock
clc
hlt
int3
mov
push
mov
mov
add
rorb
pop
xchg
and
fadd
test
xchg
cltd
push
js
xor
inc
sbb
add
and
and
cmp
and
cld
in
leave
fidivrl
dec
fwait
mov
testl
jle
pop
jp
sub
aas
cld
cli
push
test
test
dec
cmpsl
pop
mov
mov
addb
test
or
std
cmpsb
xchg
or
xor
dec
or
sti
mul
sbb
imul
leave
push
daa
jmp
lret
into
mov
mov
into
dec
das
mov
sub
sahf
and
or
popl
cld
stos
cli
cmpsb
mov
scas
rolb
cvtdq2ps
inc
push
loopne
in
or
adc
sub
xor
add
sub
or
adc
mov
xchg
pushf
call
cmp
jne
lahf
push
jmp
xor
insl
jno
adc
sub
scas
inc
lods
jb
xchg
sbb
cs
and
pushf
mov
jmp
into
out
cltd
xor
mov
jle
pop
aad
fs
sub
rcrl
into
loopne
in
cmc
pop
pushf
xor
data16
jb
push
cs
adc
cmp
inc
cmp
sub
inc
movsb
ret
loop
cmpsb
das
in
mov
mov
lock
mov
loopne
loopne
insl
push
scas
enter
push
ffreep
mov
int
int3
lahf
mov
mov
add
xchg
arpl
lret
or
cld
ret
cmp
mov
ret
inc
stos
scas
out
das
loop
out
dec
sahf
mov
sub
icebp
lock
imul
mov
xlat
imul
sbbb
mov
fwait
mov
mov
scas
sub
notb
not
dec
or
xchg
mov
mov
rorb
or
push
push
fdivrs
outsl
cmp
mov
inc
sub
lcall
add
enter
mov
in
lea
dec
add
and
dec
cmp
adc
loopne
rolb
bnd
mov
stos
jne
xchg
loop
lret
mov
push
mov
stos
stos
mov
mov
xor
and
inc
xor
xor
loopne
nop
mov
cwtl
xchg
mov
clc
mov
pop
fwait
mov
add
lea
je
bswap
shld
mov
bsf
lea
add
sar
movsbw
movsbl
sub
mov
bt
push
pusha
jmp
pop
xchg
decl
push
xor
or
sbb
js
sbb
cmp
out
orb
sub
fdivl
or
addr16
cmp
repz
push
enter
call
push
nop
popa
fs
aam
or
jge
mov
xor
mov
xor
pusha
cmp
fs
and
add
push
pop
out
mull
push
sub
inc
mov
pop
inc
add
adc
sub
inc
push
dec
jb
pop
pushw
dec
dec
pop
sub
add
into
dec
divb
inc
fimuls
aam
loopne
cld
mov
shr
ja
xor
jmp
cmc
mov
sti
popa
std
inc
mov
stos
adc
pushf
mull
xor
aam
and
sbb
jbe
cmpb
pop
out
cld
jg
mov
and
cmp
jae
mov
fistpll
mov
jbe
cmp
inc
stos
or
cmp
sub
pusha
jecxz
push
pop
jge
and
push
das
dec
cmp
leave
leave
push
mov
cmp
xchg
ljmp
div
rorb
roll
fcmovbe
dec
cmpsb
inc
inc
daa
pop
pop
add
arpl
inc
dec
xor
loop
idivl
neg
jno
pop
pushf
data16
inc
outsb
lock
sub
inc
pop
shlb
stc
insl
adc
pop
test
aam
xor
push
mov
sbb
out
les
sbb
rcll
pop
rorl
popa
fmull
shll
dec
fadd
js
in
mov
xor
jge
dec
push
xor
push
sub
or
cwtl
mov
pop
push
fs
mov
push
adc
dec
jp,pt
jp
inc
xor
and
pushf
lds
loop
cli
out
mov
mov
or
jbe
shl
jb
sub
sahf
jb
sbb
inc
in
leave
mov
jne
jne
sahf
in
sti
xchg
add
mov
xchg
jb
dec
out
pop
rorl
outsb
or
psrlq
aaa
xor
jns
pusha
ret
mov
fistpl
call
jmp
adc
stos
dec
pop
call
les
negb
out
ret
mov
imull
xor
je
or
orl
xchg
lock
enter
mov
arpl
into
gs
mov
add
shr
rcll
std
add
mov
movsb
mov
aaa
pop
daa
pop
pop
or
xor
sub
aas
inc
sbb
adc
pop
cltd
fildll
ja
and
mov
sub
add
push
or
nop
je
fs
xchg
je
mov
inc
inc
ret
dec
fdivrs
sahf
stos
xchg
jno
mov
jecxz
int
inc
incl
daa
inc
sti
and
popf
pushf
push
into
sbbl
test
enter
fidivl
pop
jle
xor
jnp
addr16
leave
mov
add
jp
add
push
adc
push
pop
sub
int3
rdtsc
jo
mov
lret
sub
ljmp
loopne
mov
ret
insl
pop
inc
sarl
in
mov
faddl
out
mov
jge
jp
subb
sbb
cmpsl
jle
mov
and
lahf
cwtl
fadds
cli
imul
into
mov
scas
cld
add
jge
jecxz
lcall
das
mov
int
push
lcall
mulb
mov
cmp
jp
mov
inc
scas
fists
xchg
xchg
mov
lret
subl
into
fidivrl
inc
lea
ret
pushf
mov
movl
movl
movl
push
lea
jmp
mov
jle
out
push
jne
xor
dec
das
push
xor
pop
and
je
xchg
mov
gs
test
jl
popa
loope
xchg
ror
ja
push
mov
push
jle
push
push
loop
pop
hlt
or
jno
xor
sbb
in
push
jo
ds
dec
jo
bswap
sub
lods
lock
xchg
cmc
test
cwtl
mov
mov
mov
pop
gs
xor
mov
mov
xchg
clc
enter
int
test
mov
lea
jmp
push
xchg
fnstcw
vpandn
notl
fcomi
hlt
push
mov
pop
sarl
xchg
add
fldl
xor
sub
pop
out
cmp
xor
sarl
bswap
bound
mov
xor
filds
mov
lcall
int
roll
shll
enter
jg
pusha
mov
stos
mov
cmpsl
repz
xchg
fucomi
jmp
iret
jmp
sub
push
stos
pushf
pushf
lea
jmp
inc
call
mov
test
inc
fstpl
lret
mov
xchg
jmp
scas
fistpl
subl
mov
aaa
xor
cli
xchg
aam
adc
lods
mov
mov
xchg
add
dec
in
adc
rorb
xor
and
add
jg
fstpl
pop
cmp
out
push
shrb
mov
jp
sub
xchg
xchg
and
jg
xor
and
es
and
ds
xchg
ret
add
mul
xlat
add
jp
in
shll
mov
stc
xchg
leave
sub
mov
adc
sub
inc
mov
lret
stos
cli
sub
mov
pop
add
push
faddl
test
pushf
cmpsl
xor
inc
ds
sbb
jae
out
mov
cli
cltd
push
iret
dec
cmp
fcomps
push
jl
mov
dec
outsb
jb
mov
mov
cmp
repz
and
movsl
arpl
and
lods
push
pop
cmp
xchg
mov
sbb
mov
inc
adc
jbe
push
inc
dec
pop
jbe
pushw
dec
pop
sub
pop
ljmp
jno
ret
std
mov
std
mov
scas
bound
xor
loopne
lds
xchg
mov
sti
jb
aaa
js
imul
enter
scas
inc
es
out
cmp
fidivrl
les
enter
or
mov
shrb
insl
insb
lock
sbb
mull
mov
add
into
out
jge
imul
mov
or
jno
imul
sbb
cmp
jbe
add
and
or
adc
fcomps
and
movsl
pushf
test
mov
roll
sti
and
cmpsl
xchg
inc
les
xor
fimull
pop
loop
pop
insl
sub
adc
outsb
and
xor
addr16
fidivrl
bound
shlb
xchg
ret
xchg
dec
test
inc
dec
je
or
outsl
or
ss
insl
xor
stc
jb
arpl
ret
xchg
hlt
add
ret
sub
xor
rcr
sbb
aam
mov
in
pushf
shll
jo
jo
push
pop
in
jl
cmpsb
loopne
inc
leave
xorb
not
ret
jecxz
adc
mov
jmp
fnsave
aas
data16
dec
dec
sub
pop
and
and
stc
clc
sub
shlb
xchg
inc
dec
stos
cmp
loop
loop
aaa
and
insl
push
mov
xchg
into
cs
pop
xchg
js
pop
add
and
inc
bound
or
movsb
cmc
jle
daa
pop
pusha
mov
pop
pop
dec
jae
jg
dec
arpl
ja
sub
add
xchg
mov
std
add
rol
fisubrl
ret
mov
insb
sub
inc
les
adc
push
mov
dec
out
push
add
push
lods
xchg
call
mov
jecxz
loopne
pop
pop
stos
lahf
jb
and
je
shll
lds
lahf
jno
sub
mov
cmc
sarb
pusha
rcl
sbb
adcl
loope
call
mov
or
das
lds
repz
ret
sti
fildl
mov
cmpsb
gs
lret
xchg
mov
jecxz
enter
jmp
xchg
loope
int
fnsave
outsl
dec
movsb
ret
mov
loopne
rcrb
aas
inc
test
add
ret
hlt
aas
jnp
mov
add
repnz
cwtl
and
arpl
xor
adc
mov
pop
aaa
daa
sbb
stc
pusha
xor
popa
inc
sub
push
push
insl
or
enter
pushl
lea
ja
call
pushf
call
lea
jae
pushf
xor
push
jmp
xchg
sarb
xchg
lods
div
test
mov
mov
rcr
fsubs
aam
rcl
fadd
dec
dec
lods
in
leave
hlt
repz
js
sti
xor
mov
xor
popa
xor
adc
mov
je
sti
arpl
call
je
or
or
dec
jle,pt
jp
jb
pop
sbb
xor
es
aas
into
lds
adc
xor
mov
sahf
jl
out
mov
adc
cmp
jmp
cli
test
push
scas
jbe
popf
popa
jns
shlb
ror
dec
call
adc
xor
mov
jg
dec
iret
rcr
sub
dec
add
enter
jp,pt
push
mov
cmp
mov
stc
push
mov
sub
push
cmp
dec
jle
cs
sub
pop
pushf
mov
ja
jmp
pushl
not
pushf
ror
rcr
ror
pushf
stos
mov
not
call
stos
ficompl
add
mov
test
mov
fsub
leave
adc
leave
pop
scas
push
addr16
mov
jmp
push
rcll
sarl
jne
mov
pop
scas
jl
xor
jg
or
in
adc
lock
xchg
sub
mov
mov
mov
add
dec
xor
rorl
mov
aad
push
adc
in
imul
cld
in
in
enter
enter
clc
sub
mov
ds
lret
and
add
pusha
sbb
adc
and
xor
push
icebp
ret
xor
jb
loope
mov
test
inc
pop
jnp
fdivr
jae
dec
jmp
hlt
cmp
aaa
mov
sub
ss
or
outsb
sbb
lret
cmp
jns
mov
inc
pop
nopl
inc
sbb
sysret
sub
adc
pop
pop
lsl
sub
jle
repz
adc
les
clc
rol
aad
add
hlt
sbb
pop
lahf
inc
jns
adc
dec
lret
cmpsl
lret
insl
mov
in
xor
std
adc
clc
sub
adcl
xchg
or
push
out
pusha
add
in
xor
bnd
xor
xchg
sti
mov
lahf
xorl
adc
ljmp
jbe
dec
jne
push
jb
je
add
fwait
ret
mov
pop
jle
je
cmp
push
xor
loope
imul
adc
jl
ljmp
sbbl
cmp
stos
and
aas
push
loope
dec
dec
mov
mov
std
jmp
xchg
das
std
jb
push
push
cmova
imul
mov
push
outsb
pop
push
cmp
ss
or
push
push
push
sub
cld
in
mov
or
push
jbe,pn
cmp
pop
push
cmp
lahf
out
pop
les
mov
shl
inc
dec
lret
push
inc
push
shl
mov
out
adc
popa
mov
mov
push
lcall
rcrb
jmp
iret
pushw
dec
movswl
rcll
mov
sbb
pop
pop
leave
adc
pop
xor
push
inc
sbb
inc
jns
or
cmovnp
les
mov
cmc
in
add
fsubrp
mov
int
or
pop
add
jbe
bound
bound
and
mov
les
add
call
add
mov
sahf
sub
inc
mov
or
mov
push
push
xchg
aas
rcr
jne
and
fstl
ja
pop
cwtl
and
nop
adc
or
lea
sbb
sbb
mov
push
inc
pop
jb
sahf
popf
sti
mov
sub
dec
push
mov
xchg
xchg
xchg
xchg
sub
lret
sub
lods
mov
push
je
push
dec
ss
push
push
ss
jp
jb
das
mov
sbb
inc
rcrl
sub
jl
sbb
aad
rolb
lods
ss
mov
pop
pop
mov
cmp
cli
roll
add
lods
push
scas
dec
pop
sarl
out
push
sub
and
outsl
out
sub
jns
dec
jne
inc
push
or
pop
pop
sub
add
lea
push
adc
jmp
mov
aad
fnstcw
out
dec
inc
cmovb
scas
loope
fsubrs
push
js
loope
mov
lahf
fsubrp
test
mov
push
faddl
lahf
xchg
or
movsb
call
jne
mov
cmpsl
out
add
push
mov
jmp
sub
pop
xchg
imul
xor
insb
orb
xchg
loopne
int
xchg
pop
adc
test
lret
iret
sti
jmp
shr
out
xlat
lahf
ret
into
sub
adc
insb
push
sub
push
daa
mov
jecxz
adc
pusha
push
sub
cmp
sbb
cmp
pop
rcr
fwait
shll
jg
lods
xchg
je
jecxz
outsl
pop
sbb
mov
das
pop
repnz
lods
bound
jo
rorb
dec
sub
es
pop
jecxz
dec
sahf
mov
or
daa
adc
jns
and
rol
int
lcall
cmp
cs
jg
add
inc
addr16
inc
inc
add
adc
sbb
lahf
inc
xchg
mov
addb
movsb
cld
xchg
fadds
sub
mov
cmp
pop
stos
add
mov
add
enter
hlt
into
sbb
mov
cmp
lea
std
lds
imul
in
lahf
sbb
lret
mov
push
mov
xchg
inc
or
adc
setl
outsl
mov
dec
push
pop
repz
jl
adc
dec
push
push
xor
sbb
jecxz
fsubrp
in
sbb
dec
adc
aaa
mov
cmc
cmc
in
xchg
jno
outsl
lea
jmp
cwtl
dec
es
mov
enter
xor
cs
inc
test
mov
imul
and
xor
hlt
jne
pop
lds
test
ds
bnd
inc
stc
mov
mov
and
pop
aaa
aaa
push
jecxz
sahf
jge
dec
push
mull
mov
pop
dec
jg
enter
mov
xchg
and
xchg
sarb
mov
xchg
push
or
flds
es
mov
mov
dec
call
jo
push
pusha
popa
mov
inc
test
mov
call
mov
mov
sub
xor
insb
insb
inc
push
push
xchg
sub
cmc
les
les
out
fcmovb
fstpl
mov
std
jle
outsl
or
cli
nop
in
pop
mov
cmp
xlat
lret
xlat
sub
cmpsb
inc
xor
sbb
out
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
pop
pop
sbb
call
ss
push
push
dec
add
push
pop
push
dec
gs
mov
mov
ficomps
cmp
sti
or
insb
sub
push
xchg
sbb
aad
jecxz
imul
cmpsl
repz
popa
push
loope
adc
xchg
jg
cmc
stos
xchg
enter
xor
push
mov
lock
push
in
cmp
pop
push
mov
cmpl
sahf
lret
lret
lret
sub
stos
push
call
dec
add
adc
in
lods
daa
je
outsb
bound
push
jbe
inc
push
inc
adc
imul
pop
scas
sbb
or
std
pushf
adc
leave
push
cmp
lock
sbb
loop
lea
dec
outsl
in
in
jo
aam
test
in
lods
adc
jns
sahf
repnz
sar
push
adc
inc
arpl
icebp
icebp
mov
lods
fbstp
mov
ljmp
add
aas
pop
add
daa
adc
push
pop
sub
inc
test
add
dec
outsl
arpl
inc
jb
gs
test
nop
lods
pushf
mov
arpl
adc
add
push
xor
adc
jmp
mov
pop
xor
add
insb
popf
icebp
popf
sub
sub
inc
pop
xchg
scas
dec
data16
scas
sub
lcall
xchg
cld
out
push
movsl
movsb
cmp
rorl
push
inc
pop
and
xor
jbe
adc
push
pop
arpl
adc
mov
xor
aam
mov
shll
adc
and
jne
inc
sub
adc
mov
adc
enter
pop
sbb
ljmp
push
adc
xor
sahf
pop
dec
scas
arpl
jge
jecxz
pushf
mov
insl
mov
insl
cmpsl
movl
inc
mov
int
aad
add
and
ret
adc
sbb
and
jo
sbb
sbb
js
cmp
and
xor
adc
imul
xchg
jae
xchg
in
shlb
aam
int3
test
sarb
inc
jmp
fidivrs
lret
lcall
enter
mov
jns
cmpsl
cmpsl
xchg
cmpl
les
xchg
mov
enter
loope
xor
mov
jl
and
pop
and
je
jl
pop
sub
test
sbb
pop
cmpl
test
mov
mov
mov
addb
jmp
pop
xor
or
push
idivl
and
inc
inc
mov
lcall
inc
sbb
call
add
in
dec
sub
dec
jge
ret
inc
imul
in
pushf
daa
xor
arpl
inc
pushw
jbe
pop
jle
push
cmp
push
sub
pop
add
ret
cmp
pop
imul
aas
inc
das
pop
cmp
insb
ljmp
in
xchg
mov
jle
xor
xchg
mov
out
lods
mov
loopne
push
out
sti
mov
sbb
aas
insb
in
cwtl
dec
outsb
pop
imul
and
sub
cmc
cmpsb
lahf
sbb
xchg
rcr
pop
push
mov
mov
fsubr
push
movl
clc
shl
xorl
sub
cmpsb
addr16
xchg
js
shlb
repnz
ror
out
ds
mov
dec
xchg
mov
jg
and
dec
das
arpl
adc
cmp
out
decl
test
insl
sti
jmp
call
pushf
lea
jae
jmp
leave
jg
arpl
aad
loope
outsl
dec
cmp
dec
sbb
pop
push
call
mov
jbe
imul
repz
mov
and
pusha
lea
inc
mov
pop
jl
cwtl
inc
xchg
cwtl
daa
jl
fisttps
das
lret
ret
test
inc
mov
push
fisttps
jno
jbe
in
xor
int
mov
es
sub
out
mov
ljmp
or
gs
jae
mov
test
lods
test
cs
into
aam
lods
in
rol
fsubr
call
int3
in
loopne
adc
mov
or
push
int3
or
dec
sub
or
cmp
pop
xor
push
and
xchg
fisubl
or
dec
popl
icebp
lods
leave
aad
loopne
xor
or
xor
mov
cltd
sbb
pop
cmpb
pushf
sub
imul
and
out
cmc
mov
scas
pop
push
jg
mov
mov
xor
les
hlt
cltd
push
ljmp
jge
add
mov
pop
push
fists
cli
mov
add
test
xchg
aad
popf
test
push
bound
stos
scas
out
out
lahf
mov
outsl
sub
xor
ds
gs
mov
aaa
imul
mov
fldenv
imul
mov
hlt
cmp
aam
es
fwait
jb
mov
push
push
das
stos
inc
push
add
shrl
in
in
cld
in
or
into
push
mov
add
add
sti
mov
icebp
test
jl
push
jg
not
je
or
or
js
sub
or
and
sub
jns
stc
lods
rcl
rolb
lods
nop
mov
scas
mov
ficoms
mov
sub
aam
inc
scas
movl
dec
pop
cmpsl
cs
dec
out
add
mov
inc
mov
rorl
cltd
loop
adcl
rolb
xor
aam
icebp
pusha
xchg
mov
push
mov
stc
fucom
dec
mull
push
add
nop
pushf
mov
nop
loopne
mov
mov
sbb
jle
aad
arpl
adc
inc
cmp
and
mov
loope
mov
and
arpl
add
pop
mov
lea
in
cltd
aas
cmp
sbb
xchg
jno
sub
in
add
adc
leave
dec
jle
outsl
or
cmp
xchg
in
and
push
inc
push
jo
inc
dec
add
inc
je
js
pusha
pop
sub
add
out
mov
ret
das
pop
cmp
adc
push
sbb
pop
jecxz
pop
das
add
inc
insl
insl
xor
push
push
jbe
sahf
adc
xchg
call
shl
cs
out
pop
mov
mov
sbb
sti
adc
aam
fdivrs
fidivrs
jno
movsl
inc
adc
sbb
mov
andb
ret
aad
fdiv
adc
js
sti
xorl
dec
gs
inc
sbb
xor
pop
dec
sub
adc
cld
mov
movsl
add
orl
xlat
mov
sti
fcompl
and
push
sub
sub
mov
ss
mov
push
call
sarl
adc
jecxz
or
push
sub
cmp
dec
out
jge
fwait
call
rcll
int
jo
incb
outsb
das
adc
add
daa
aas
aas
pop
pop
aas
xor
jg
bndstx
add
adc
pop
mov
and
popfw
pushf
inc
pushl
jmp
mov
mov
xlat
cs
mov
lret
mov
stc
add
adc
inc
icebp
xchg
insl
xchg
insl
push
mov
mov
xchg
inc
push
lods
aas
push
add
xchg
or
mov
enter
das
aas
cmp
insl
cmp
imul
clc
mov
inc
jb
mov
stc
mov
scas
out
lahf
sti
xchg
out
shrl
jo
pop
pop
jl
inc
ljmp
adc
in
cmp
mov
dec
ja
subl
jg
dec
sub
stos
add
icebp
and
mov
test
sub
add
movsl
xlat
inc
push
jae
xchg
xchg
pop
push
es
inc
cmp
push
adc
jle
or
not
fistps
push
daa
push
insb
ljmp
jge
inc
gs
sub
sbb
xchg
setno
pusha
lods
movb
push
not
jmp
sbb
cmp
fcomi
mov
out
les
push
scas
fcmovbe
push
mov
push
aam
int3
xchg
sbb
mov
xorb
adc
cmp
fcmovnu
fistl
mov
loope
fcmovnbe
pop
xor
pop
shl
jb
pop
inc
es
xlat
adc
loope
lods
movsl
call
int3
pop
push
mov
and
mov
jmp
in
sar
adc
mov
pop
push
pop
mov
cmp
in
pushf
mov
fdivrl
test
sub
lret
adc
adcl
xor
out
mov
or
aad
add
int3
push
or
fdivl
sub
mov
push
push
into
jb
aad
jns
push
repz
inc
stos
pop
dec
aam
and
mov
repz
push
dec
push
es
ret
jbe
mov
cmp
pop
aaa
add
adc
bndstx
and
aaa
pop
sub
inc
test
shlb
je
shll
ds
and
push
inc
pop
push
push
pop
sbb
cmp
jmp
xchg
cmp
pop
xchg
adc
pop
daa
inc
sbb
sub
aas
ds
xor
pop
or
or
xchg
or
aaa
jmp
and
dec
je
fisubrl
or
inc
fbstp
shrl
rorl
ljmp
push
jno
mov
cmp
mov
movsl
mov
lds
fadds
je
sti
andl
jmp
cmc
popf
leave
shl
sub
test
sub
cmp
outsb
jno
ucomiss
sub
xor
sub
je
pop
je
pop
xchg
les
pop
cld
push
imul
pusha
add
xor
pop
push
roll
test
push
sub
shrl
cwtl
test
cwtl
jae
imul
das
roll
out
mov
arpl
adc
jge
inc
jge
push
jns
jno
pop
jns
imul
mov
mov
xchg
mov
in
iret
mov
mov
mov
fnstsw
xor
adc
in
lcall
aad
mov
inc
pop
fwait
pop
dec
movsb
mov
push
and
fdivr
inc
lods
imul
cmp
mov
aam
imul
int3
repz
mov
xor
sarl
jp
cmp
loopne
mov
xchg
xchg
sub
cmpsl
lahf
mov
scas
lahf
roll
in
and
cwtl
cwtl
mov
lods
mov
stos
fidivs
icebp
push
add
insl
adc
pop
icebp
ret
sub
dec
jns
sar
dec
or
push
sbb
mov
jecxz
sub
push
push
js
notb
lcall
dec
das
cmp
mov
sub
paddw
lock
adc
movsl
les
xor
mov
repnz
ljmp
stos
loop
xor
pop
dec
mov
inc
dec
push
ss
ss
xor
push
or
dec
clc
jno
popa
or
les
imul
idiv
icebp
adc
mov
jb
xchg
mov
xor
inc
cwtl
mov
or
out
fwait
dec
pop
in
mov
jns
in
jbe
lea
inc
aam
lret
out
mov
inc
adc
sbb
xchg
or
pop
cld
fcmovu
lret
xchg
icebp
jge
jl
and
push
jl
xor
dec
push
adc
sbb
daa
pop
push
dec
ljmp
and
add
inc
gs
scas
cmpsl
ss
jl
xchg
sbb
xor
jl
xor
pop
shl
dec
cs
mov
xor
insb
std
pop
mov
loop
repz
addb
jecxz
loop
in
mov
push
inc
in
int
das
jecxz
repnz
shlb
jo
cmpsl
jecxz
test
jo
jns
loop
xor
lcall
cmpb
adc
shll
push
xor
pop
int3
imul
pop
sub
dec
pop
add
xor
or
sbb
fs
fstps
and
mov
fidivrl
sbb
fs
or
xchg
fldt
std
or
fstl
shll
mov
sahf
scas
mov
aam
push
outsl
mov
loope
popa
ret
ss
or
lods
and
mov
insl
ds
add
pop
dec
fistpl
xchg
cmp
ja
inc
sbb
dec
pop
dec
jl
roll
pand
lods
mov
sbb
imul
sbb
cmp
sub
js
in
out
scas
mov
gs
movsl
roll
frstor
into
push
pop
fneni(8087
pop
xor
sar
cltd
mov
sub
jns
cmc
ret
ret
jmp
pushl
enter
or
add
push
popa
sbb
decl
adc
or
bswap
inc
cmpb
aam
inc
push
in
pop
std
fsub
in
cmp
xchg
fs
mov
fcomip
scas
push
outsl
jg
roll
mov
rcl
jl
inc
adc
pop
sbb
sub
or
adc
sbb
adc
lret
mov
push
inc
pusha
mov
mov
call
pushf
jmp
call
call
int
nop
pushf
mov
fwait
repz
out
mov
lahf
sbbb
scas
xchg
mov
jecxz
add
sbb
call
pop
pusha
jmp
push
loop
add
jl
push
mov
daa
aaa
rorb
mov
jge
sbb
jo
dec
data16
pop
jecxz
pushf
jge
rol
mov
neg
rcr
dec
enter
jmp
int3
or
or
jo
mov
fisttpl
iret
sti
jmp
shrl
adc
xchg
push
pop
mov
in
out
cmpsb
out
mov
ret
mov
mov
lret
dec
lret
adc
pop
leave
mov
sbbb
sbb
inc
ljmp
out
cmp
mov
jge
cmpsb
addr16
int
sbb
sbb
mov
stc
femms
sub
push
sub
aaa
push
pop
addr16
or
out
pop
lcall
pop
fwait
and
or
or
sub
sbb
or
or
adc
dec
stos
icebp
dec
std
xor
mov
out
jmp
testl
add
lcall
xor
xchg
adc
sub
fwait
gs
xchg
or
adc
or
adcb
cmc
adc
jle,pn
aaa
rorb
xor
insb
and
fwait
inc
aad
int3
int3
xchg
das
xchg
sarl
mov
loopne
aam
call
loopne
pop
pusha
pusha
movl
pushf
mov
pushf
lea
jmp
dec
int3
mov
sarl
test
inc
and
imul
pop
mov
fwait
cmp
xor
mov
jns
cmpsl
inc
rcll
dec
iret
or
lds
test
jle
std
add
jmp
outsb
mov
or
and
test
sbb
inc
inc
xor
mov
int3
pushf
mov
pushf
fsubrl
adc
jp
out
pop
and
not
mov
mov
mov
movb
mov
pushf
call
out
ret
xchg
or
out
xchg
lahf
out
fwait
mov
xchg
push
push
pusha
leave
out
in
decb
faddl
insb
mov
stos
mov
ja
sbb
aad
stos
or
lcallw
clc
loopne
ficomps
rorb
inc
mov
push
mov
cld
out
cld
pop
pop
repz
repz
call
cs
stos
sub
popf
in
scas
mov
mov
loop
stos
xchg
stos
sahf
xchg
sub
xlat
adc
call
call
jmp
dec
pop
jl
pushf
sub
test
int3
subb
xchg
or
lret
ret
rcr
cwtl
clc
loope
cltd
xchg
add
es
js
or
ds
rol
ss
mov
outsb
dec
xlat
sub
pop
mov
and
or
mov
adcb
lahf
out
jo
push
lcall
dec
jp
inc
and
push
popf
mov
cmp
cmp
cmp
inc
push
and
push
cmp
cmp
sub
jg
cli
inc
inc
push
inc
push
dec
xor
cs
insb
add
or
cs
lret
repz
mov
mov
jmp
sti
fbld
js
mov
fwait
add
addl
mov
das
xchg
jno
das
or
sti
int
jle
scas
pop
mov
sub
test
out
das
ljmp
das
ffreep
notl
push
pop
push
sub
jnp
mov
mov
mov
pushf
lods
sub
cmc
ss
push
lret
inc
pop
idivb
jecxz
mov
jg
stos
or
testb
popf
adc
pusha
pop
divb
rcll
arpl
mov
xchg
in
add
inc
inc
notb
cltd
lds
xchg
lods
ja
adc
mov
jbe
std
xchg
sbb
insb
lds
or
push
lds
daa
dec
xchg
jecxz
push
lret
inc
dec
testb
loope
push
lds
std
ds
push
lds
mov
sub
sub
loope
notb
gs
push
lds
pop
sbb
arpl
stos
push
inc
test
fisttpll
sub
notb
inc
lret
rorl
pop
sbb
loopne
lret
inc
inc
mulb
push
arpl
or
inc
not
or
popf
aad
lret
mov
sub
pop
mov
stos
push
push
jbe
and
lds
fidivrs
stos
sub
dec
idivb
pop
xor
stos
push
dec
notb
push
mov
stos
sub
dec
idivb
mov
lds
shrl
push
iret
pop
lret
rorl
loopne
imul
lds
push
addr16
inc
push
lds
xlat
stos
or
xchg
jg
stos
sub
mul
adcb
inc
lret
add
call
dec
lret
mov
int3
shll
stos
stos
add
adc
xchg
gs
stos
or
dec
div
or
stos
sub
dec
testb
pop
push
mov
loope
divb
cmp
inc
lret
orl
leave
stos
lret
imulb
daa
mov
sub
dec
negb
push
lds
bswap
fdivl
dec
popa
dec
idivb
ljmp
loope
imulb
jle
stos
lods
jns
mov
add
push
jno
lret
adc
dec
loopne
push
cmp
rolb
fs
imulb
mov
test
pop
dec
cmp
xor
sub
xchg
dec
jns
repz
mov
sub
pop
nop
insl
bound
cs
xor
pushf
cmpsl
shrb
cmp
dec
pop
push
pop
call
pop
lea
xchg
jecxz
pop
sub
insl
fs
xor
cs
insb
add
fs
call
jmp
jp
push
sbb
xchg
dec
es
test
shlb
mov
rcll
sti
popa
lret
mov
or
mov
push
orl
mov
jb
aaa
pop
fwait
jp
mov
mov
imul
rclb
mov
adc
mov
repz
pop
sbb
jg
push
rcrb
jg
and
cmp
cmp
aaa
aaa
aaa
das
pop
pop
sub
pop
mov
cmp
outsl
push
pop
pop
lret
ret
stos
out
mov
test
add
pop
inc
inc
in
fidivrs
sub
movsl
pop
lods
and
gs
js
adc
add
lds
jb
aam
add
scas
push
cmp
popf
jb
mov
push
jno
push
insl
dec
push
jecxz
mov
leave
push
les
mov
test
mov
adc
in
push
insl
cmp
bt
clc
shr
clc
cmp
pusha
pusha
pushf
lea
je
pusha
cmp
jmp
dec
sub
sbb
mov
fwait
mov
in
stc
test
loopne
push
add
mov
inc
mov
fdiv
cltd
les
mov
aaa
test
and
xor
icebp
ds
lret
fbstp
divl
jg
push
xchg
nop
inc
pop
mov
xchg
inc
sbb
push
or
xor
jmp
sahf
mov
sub
xor
dec
insb
cmp
je
fs
push
jmp
mov
push
popa
addl
out
ficoml
and
xchg
jbe
or
mov
inc
fisttpll
fiaddl
aad
mov
out
push
in
pop
xchg
arpl
loopne
andb
adc
push
or
jbe
out
outsl
pop
pop
dec
outsb
aam
sti
test
cmpl
pop
sbb
fwait
mov
fwait
mov
mov
scas
sti
scas
stos
subl
jmp
add
mov
and
pushf
bsr
clc
mov
add
push
neg
mov
movsbw
bts
bsr
mov
add
bt
neg
mov
neg
clc
xor
setns
pusha
lods
pusha
jmp
cmp
inc
dec
pushf
inc
cmpsl
mov
mov
fnstcw
in
movb
scas
idivb
pushf
mov
mov
fstl
add
inc
ret
mov
mov
call
cld
out
mov
adc
repz
ret
out
sti
lods
jmp
jo
bound
push
dec
push
inc
push
push
add
sub
or
adc
push
repz
jo
push
jmp
or
mov
les
xchg
popf
vpsubsw
bnd
mov
xchg
addr16
call
scas
xchg
int
in
push
push
outsl
jg
sbb
pop
lcall
fidivl
add
jl
jecxz
add
loop
pop
int
add
inc
xor
in
rorl
sbb
push
sub
dec
sbb
xchg
mov
scas
xchg
ret
incl
mov
adc
push
mov
mov
jle
sbb
daa
pop
pop
cmp
inc
das
pop
push
or
add
xlat
jno
repnz
cmpsl
inc
lods
addl
repz
repz
jnp
enter
mov
mov
loop
push
fisubs
mov
sbb
loop
das
cli
push
and
flds
inc
mov
add
iret
stos
xchg
lcall
aaa
pop
push
popf
mov
mov
lds
lods
test
xchg
mov
pop
call
and
jp
push
not
jmp
cmc
mov
clc
lods
push
rcl
mov
dec
xor
adc
addr16
jg
dec
add
add
xchg
adc
cmp
loope
mov
xchg
fs
fsub
fnstsw
stos
or
pusha
test
ds
mov
pushf
jno
xor
mov
inc
nop
outsb
pop
inc
cmp
shrl
int3
aad
ret
xchg
ret
inc
stos
aaa
dec
dec
adc
sbb
add
adc
ss
sub
dec
lods
shrb
iret
mov
add
or
sub
push
sbb
insb
imul
ret
in
ret
add
push
dec
test
fstps
xchg
cltd
cwtl
int
adc
fwait
in
pusha
or
jb
jmp
test
push
stos
add
mov
mov
loope
lea
fisttpl
add
shll
jne
and
in
jl
push
call
or
in
lods
les
xchg
add
xchg
dec
cmp
imul
cs
orl
scas
xchg
mov
cwtl
call
sub
jl
cmp
and
lcall
or
push
and
aam
outsb
addr16
pop
imul
jae
rcpps
adc
adc
xchg
sar
cmpsl
xor
movsl
lods
aad
aad
std
stc
rcrb
std
lcall
nop
or
stos
lock
mov
push
pop
daa
ds
pop
sbb
rcl
add
xor
cmp
fwait
pushl
mov
dec
ds
or
iret
xchg
lods
pop
lds
mov
jp
out
or
jg
test
cli
jg
in
or
mov
mov
fldenv
sub
adc
gs
test
xchg
dec
add
int3
outsl
and
stos
outsl
cld
mov
jg
imul
pop
dec
loopne
popa
out
inc
xor
jp
pop
fwait
xchg
xsha1
cmpsb
into
push
or
aaa
out
and
and
pop
movsl
aaa
cwtl
push
mov
fidivrs
xchg
out
ret
inc
and
movsl
aas
mov
das
adc
iret
outsb
mov
in
es
iret
cmpsb
fildll
js
fiadds
mov
add
fdivs
pop
mov
cltd
mov
push
stos
jmp
pop
fwait
shlb
sub
bound
cld
sbb
scas
xchg
imul
mov
ret
ja
aaa
inc
fildll
mov
add
ljmp
mov
data16
rcrb
cld
adc
jo
cmp
lcall
push
outsl
dec
or
shlb
lea
outsl
pop
pop
push
push
notb
push
cs
pop
sti
addr16
les
int3
test
jg
sub
pop
jbe
into
xchg
int3
pop
adc
inc
adc
aam
pop
cmp
loope
mov
mov
out
jl
mov
xchg
push
fstl
aaa
push
test
cmp
enter
push
cmp
pop
mov
pop
adc
cmpsb
cwtl
clc
movsb
out
fbld
inc
ret
sbb
add
cld
fldenv
xor
sub
jg
mov
jns
lock
jno
in
hlt
or
out
scas
inc
and
push
outsb
mov
loope
cmp
out
out
sub
data16
pop
and
add
adc
ficompl
icebp
jge
in
pop
es
xchg
test
xor
inc
js
sub
mov
mov
add
xchg
ja
dec
push
jg
enter
mov
ljmp
shl
push
daa
loop
test
fsts
dec
cltd
add
push
insb
xor
jo
pop
lea
or
cwtl
add
pop
xor
in
push
addl
stos
mov
sbb
roll
icebp
lret
xchg
or
aaa
insb
mov
scas
fwait
mov
insl
push
add
addr16
pusha
sahf
jge,pn
jo
pusha
pop
jo
jl
xor
push
jp
incb
leave
adc
push
jno
jmp
fstps
test
mov
mov
xchg
divl
jnp
and
cmp
push
mov
aas
push
ja
jp
sbb
fdivrs
mov
xor
ficoml
mov
stc
lods
out
iret
aam
mov
ficoml
dec
cmp
pop
mov
sbb
jecxz
dec
push
sbb
out
scas
pusha
pop
push
jbe
jp
fsubrs
adc
test
pop
fldl
insb
fcoms
sub
sub
mov
inc
and
push
dec
sbb
adc
sbb
std
sbb
jl
and
inc
pop
fmull
xor
push
jl
in
fwait
repz
fisubrs
mov
mov
repz
jo
mov
pop
outsl
inc
outsl
dec
cmc
inc
mov
cmp
sbb
fdivrp
xor
pop
test
dec
add
pop
mov
les
sbb
xor
insb
push
in
push
sbb
mov
push
out
xchg
test
je
xchg
xor
idivb
push
xchg
in
mov
lds
rolb
xchg
or
add
lock
or
outsb
or
call
hlt
cld
shlb
popf
pavgb
das
mov
popa
and
jmp
xor
imul
adc
adc
pop
push
adc
ja
inc
jo
arpl
lret
xchg
rorb
push
and
ret
xchg
repnz
lret
js
or
adc
aas
sub
push
ss
ss
notl
cmp
pop
sub
xor
xor
fs
xchg
mov
ret
int3
jne
and
lcall
aam
mov
pop
pop
push
xchg
les
out
push
mov
xor
mov
cwtl
imul
adc
dec
adc
enter
jbe
cwtl
rol
aaa
inc
pop
sub
sbb
repz
ljmp
nop
lods
mov
pop
sub
fstpl
loop
add
lret
call
xor
int
xchg
fsubs
jecxz
xchg
loop
pop
js
adc
mov
mov
sarb
pop
cmp
jl
gs
das
out
leave
mov
jmp
hlt
arpl
lahf
adc
es
jne
cld
mov
push
xchg
rorb
dec
notl
pop
add
lret
pushf
sub
cmpsb
mov
cmpsb
xchg
adc
and
push
pop
enter
test
xchg
imul
or
or
mov
add
pop
arpl
sbb
xor
mov
pop
nop
scas
out
cmpsb
mov
ja,pn
ljmp
add
add
scas
sub
mov
sub
adc
in
mov
sbb
jo
sti
shll
cltd
fucomip
mov
pop
aas
cmpsb
cli
ret
loop
mov
sub
jbe
pop
pop
xlat
scas
xor
fsts
dec
xchg
mov
mov
sub
pop
mov
enter
scas
imul
xor
fidivrl
rorl
and
js
xchg
jmp
adc
sarb
ret
inc
inc
add
mov
mov
pop
jbe
inc
push
in
xor
daa
xchg
mov
je
outsb
inc
inc
and
inc
popa
lods
fldl
xchg
out
mov
cmp
cmpsb
sti
jo
dec
sub
insb
in
adc
in
mov
fidivrs
lret
mov
mov
inc
and
pop
dec
mov
or
sub
sbb
xchg
sti
and
and
pop
pop
into
sbb
sahf
cmpsl
ret
adc
in
nop
in
mov
outsb
xlat
xchg
test
cmpsb
ret
xor
pop
push
insl
dec
mov
lock
mov
mov
ja
and
push
dec
xchg
adc
fwait
sti
ret
out
stos
jae
ret
jecxz
pop
in
mov
insl
stc
mov
sbb
cmp
mov
test
push
iret
mov
fs
inc
and
jmp
push
insb
sub
fs
imul
addr16
mov
push
test
lds
bound
adc
add
pusha
fwait
mov
push
faddl
pop
movsb
lods
push
js
call
jae
das
jnp
jg
xchg
jbe
je
and
int
iret
xor
shr
jne
movsb
out
fwait
fists
jle
je
sub
fcmovu
scas
out
sub
xchg
mov
jae
cmp
int
cmc
aad
lret
jle
and
adc
inc
sub
loopne
shll
push
xor
pop
add
or
cmp
int
std
movsl
aam
psllw
in
das
pop
push
loop
jp
enter
aaa
jns
and
sub
cmpb
pop
bound
imul
adc
test
insl
mov
cltd
dec
mov
shl
nop
mov
xchg
sbb
iret
jb
fwait
mov
cmp
xor
clc
arpl
popa
xchg
mov
pop
clc
iret
les
and
sub
adc
adc
adc
addb
stos
test
cmp
jl
out
xchg
repnz
dec
sub
mov
lcall
inc
sahf
cltd
out
stos
and
fnstsw
push
psubq
int3
push
fldl
in
mov
mov
enter
arpl
adc
test
xor
iret
push
adc
and
and
out
adc
es
adc
inc
mov
push
xchg
les
rolb
sbb
bnd
test
jno
adc
sub
rcll
es
ss
push
mov
xor
lds
or
dec
test
mov
jmp
imul
inc
push
jnp
sub
loopne
xchg
notl
ss
jmp
jle
push
jl
push
add
dec
inc
in
outsb
inc
jns
mov
insl
mov
pop
cmp
gs
sbb
push
sub
cmp
ficoms
push
lods
lods
or
popa
imull
in
sbbb
ss
minps
lret
or
or
add
sahf
xor
fidivrl
sub
rorb
add
pop
or
add
mov
mov
das
mov
push
test
clc
cmpsl
jl
sbb
addb
inc
jg
aam
cmp
ds
insl
sbb
insl
pop
inc
sbb
cltd
ret
cmpsl
push
jb
adc
rcrb
adc
push
sub
fdiv
test
lret
xchg
mov
jnp
xchg
testl
cmpsl
sti
cli
pop
scas
adc
mov
pusha
sub
loopne
leave
not
add
mov
push
shr
mov
out
call
and
cmp
dec
jbe
test
and
lret
sarb
xchg
repnz
sbbb
sbbl
ret
movsl
in
test
mov
mov
jmp
inc
in
imul
and
inc
movl
adc
adc
xor
daa
gs
sub
sbb
jb
je
pusha
dec
xor
adc
sub
in
in
sti
jns
test
sbb
pop
cmp
inc
add
push
aaa
out
cmovns
sbb
sbb
add
mov
mov
mov
sbb
jb
inc
test
sti
sarb
add
jb
xor
ds
mov
ret
xchg
mov
dec
add
cs
mov
jl
adc
out
scas
inc
and
imul
daa
lret
push
mov
dec
adc
mov
pop
jbe
sahf
add
add
stos
xchg
adc
mov
sbb
xlat
sbb
inc
push
and
fldl
ss
orl
sbb
nop
notb
or
inc
fs
sahf
in
lea
cmp
or
in
and
and
jle
stc
xor
and
out
mov
int
xor
xchg
hlt
call
out
sbb
in
stos
xor
ss
daa
push
cmp
adc
xchg
mov
xchg
filds
leave
cmp
lret
and
out
popf
sbb
das
jns
mov
push
test
pop
adc
inc
dec
pop
cmp
int3
loop
into
pushf
test
jle
inc
mov
mov
pop
bound
inc
daa
push
mov
cmp
adc
inc
jmp
xchg
mov
jle
rolb
add
repz
add
cmp
mov
cwtl
fmull
gs
jp
ret
sub
sbb
inc
hlt
dec
pop
and
push
adc
adc
dec
adc
xchg
mov
fmull
cmpsl
out
leave
push
push
xor
daa
loop
dec
int3
test
idivb
icebp
iret
out
cmpsl
insl
or
pusha
mov
xchg
hlt
addr16
inc
sbb
lret
lret
and
sub
mov
jbe
dec
sahf
cmpsb
rorb
or
cltd
rcl
in
cld
pop
sub
popf
insb
jns
xor
xchg
ljmp
lcall
adc
sbb
mov
pushf
cmp
push
push
lahf
or
push
push
mov
stc
add
pop
xor
loope
dec
mov
or
xor
lret
mov
jb
xchg
mov
and
and
clc
lods
push
ds
jnp
inc
mov
cmc
sbb
mov
leave
orl
add
insb
push
dec
mov
popf
ror
or
pushf
xchg
fdivrl
into
adc
testl
outsb
dec
sub
and
and
inc
pushf
push
inc
sbb
mov
pextrw
dec
cmpsl
rorl
gs
leave
xchg
mov
and
in
ror
xchg
das
shll
sub
gs
push
pop
xor
inc
imul
pop
add
mov
aam
xchg
push
dec
jbe
jg
and
repz
imul
insl
sbb
or
dec
fs
aas
scas
push
sar
or
add
lea
dec
sub
pop
push
sahf
sub
jae
sub
pop
test
mov
das
add
mov
cmpsb
sahf
mov
mov
jns
or
scas
ss
in
mov
dec
subb
jl
or
ja
add
inc
iret
mov
mov
adc
imul
inc
add
push
xchg
ljmp
jp
jno
repz
inc
jle
sbb
in
loope
insb
and
call
xor
call
sahf
fstpt
lods
mov
or
push
in
movsl
lods
movsl
pushf
fwait
and
adc
int
in
push
push
repnz
jl
cltd
mov
fs
sbb
and
testl
inc
mov
outsb
lods
imul
call
lcall
icebp
and
add
add
stos
arpl
orl
and
lcall
lret
push
das
mov
repnz
pop
mov
lods
call
orb
mov
adc
es
jp
fwait
repz
sti
mov
xor
cs
sub
mov
add
mov
sbb
push
leave
call
sub
mov
pushf
clc
hlt
fcoml
lds
lret
xchg
xchg
add
mov
lcall
inc
push
adc
std
das
mov
xchg
ja
xlat
mov
pop
adc
add
jmp
add
stos
lods
jl
cmp
sbb
mov
push
cmp
cmp
mov
lods
pop
mov
or
stc
arpl
pop
mov
pop
xchg
stos
ljmp
mov
test
fbstp
sbb
sub
std
imul
xlat
in
pushf
movsl
popa
xchg
adc
mov
dec
andl
fmulp
inc
in
out
lods
mov
aaa
mov
pop
jb
dec
ja
pop
ja
add
jb
mov
fs
sub
mov
jae
dec
push
dec
aas
jne
call
jnp
jge
mov
ret
loop
adc
xor
cmp
or
and
inc
jl
sub
mov
add
jl
mov
fs
sbb
jl
push
dec
dec
fiadds
inc
sub
xor
leave
scas
iret
jmp
cli
movsb
dec
inc
push
lret
push
pop
fsubl
dec
mov
cmpsl
or
push
out
shrl
in
flds
sub
or
cmp
mov
add
out
lcall
test
adc
cltd
in
mov
push
add
mov
sub
mov
andl
cli
push
ret
sar
hlt
mov
xchg
add
add
int3
insb
hlt
xchg
gs
pushl
scas
notb
nop
xchg
mov
push
pushf
sbb
clc
xor
movsl
rorb
jno
pop
adc
push
scas
mov
or
in
sub
dec
mov
into
mov
pop
sub
mov
mov
jae
xor
ret
xchg
repz
fstpt
outsl
jl
xor
nop
test
cmp
push
xor
fsubr
or
cmp
mov
andl
pop
das
addr16
mov
loop
xchg
adc
sbb
mov
jmp
mov
ljmp
xor
ss
and
inc
sbb
push
push
shr
mov
out
mov
cmp
mov
adc
fs
in
ret
stos
mov
mov
testl
jae
pop
jb
sti
stos
lret
fninit
dec
pop
xchg
and
shll
inc
pop
cmp
sarl
das
les
cmp
aaa
mov
into
ficompl
aam
loopne
push
pop
adc
aaa
push
iret
repz
jecxz
testb
fcmovb
mov
int
popa
jae
repz
test
push
pop
add
jmp
std
adc
dec
cmp
jo
xchg
cmc
cmp
rorl
test
xor
mov
dec
arpl
sbb
cli
movsb
js
add
mov
lahf
cld
aam
cld
cmc
mov
andb
and
div
loopnew
jge
addl
jb
sti
shll
mov
popf
add
or
adc
test
iret
lods
test
movsb
mov
and
outsl
jb
xlat
sbb
rclb
aam
adc
pop
incl
ficompl
pop
adc
jmp
aas
ds
push
lcall
je
test
lea
jns
je
push
and
lods
std
jp
cmpsb
xor
sbb
aad
in
int
dec
cmp
and
pop
mov
mov
scas
jae
sbb
or
ja
loop
cmp
adc
pop
push
hlt
adc
pop
jnp
enter
jns
je
popf
sbb
jnp
std
out
jg
xchg
push
pusha
popf
lods
in
push
mov
ret
daa
push
mov
out
in
lea
outsl
sahf
mov
sarb
pop
cmp
cmp
jbe
nop
hlt
xchg
insl
mov
ret
jmp
ret
sti
xorl
outsl
sbb
fsubl
and
cmp
cmp
push
pusha
mov
divl
insb
hlt
stos
jbe
jg
aaa
push
and
fsubr
fwait
shl
je
mov
dec
loopne
push
mov
mov
or
loopne
mov
gs
js
cli
shl
ja
jmp
ror
sbb
into
lods
int
shl
ljmp
pop
push
lea
fcoms
sbb
push
sbb
cmp
push
out
pop
pop
es
movsb
xor
lods
popf
lret
inc
fildll
sbb
fidivrs
scas
cld
push
mov
in
fs
cld
lcall
aaa
mov
int3
sbbb
pop
adc
cmp
jmp
mov
add
daa
mov
inc
daa
into
out
scas
pop
dec
or
or
test
mov
xor
loope
pand
in
cmc
mov
pop
pushf
cwtl
mov
lcall
std
sub
mov
xchg
icebp
aad
pop
sub
mov
push
dec
outsb
mov
and
fstpt
cmp
cmp
lock
jno
sbb
and
lock
fs
scas
mov
push
dec
insb
jne
mov
jno
fimull
add
ret
xor
loopne
addw
xlat
fidivrl
mov
mov
dec
cmp
dec
cmp
rcrl
into
mull
outsb
adc
iret
loope
mov
xchg
fwait
cmpb
push
push
loop
jecxz
inc
mov
push
and
push
in
xor
in
lret
sar
dec
xchg
enter
push
mov
cmpsl
and
shll
in
movsb
rcrb
addr16
mov
mov
or
jne
push
scas
out
inc
es
call
stos
dec
gs
into
and
int
mov
jno
mov
dec
jbe
loop
push
sub
xlat
ror
hlt
cmpsb
dec
stos
jecxz
mov
or
or
loopne
test
or
mov
into
mov
mov
mov
fs
roll
xchg
sbb
add
adc
add
add
icebp
dec
adc
shlb
fsqrt
xor
outsl
aaa
pop
sub
clc
pop
mov
push
cvttps2pi
das
dec
lcall
ret
mov
stc
fisubrs
cmp
add
data16
sbb
das
pop
jge
xor
push
push
dec
mov
push
jbe
pop
and
daa
mov
mov
push
bound
rcr
in
push
loop
mov
pop
jne
jnp
cmp
mov
imulb
fbstp
adc
mov
scas
inc
daa
addr16
pop
mov
xor
fld
aam
lods
sub
test
add
movsb
dec
sub
or
mov
pop
jg
out
push
movsb
movsb
imul
push
je
jmp
mov
dec
js
mov
push
test
cmp
xlat
lods
jb
lods
in
shr
repnz
repz
jmp
fisubrl
movsb
shr
dec
push
loop
mov
cmp
mov
cmp
scas
aam
push
jbe
xchg
xchg
lea
add
rclb
in
xlat
sub
loope,pn
out
mov
lret
xchg
pop
sub
mov
and
int
dec
add
xabort
sar
lock
or
pop
sbb
sub
mov
mov
push
push
bound
cmp
jne
inc
jge
mov
lods
testb
xor
arpl
or
pop
cmp
orps
push
sahf
outsl
push
adc
sub
inc
pop
jg,pt
dec
pop
ds
jge
mov
aam
xchg
and
mov
xor
testb
or
je
int
mov
mov
jno
xor
mov
shlb
fdivrs
mov
cmpsl
fwait
mov
xor
and
dec
cli
arpl
pop
scas
mov
cs
lods
xchg
mov
push
pusha
pop
mov
or
jge
mov
xor
inc
insl
enter
data16
jle
sbb
stos
icebp
or
push
lods
mov
dec
pop
sub
das
add
inc
shrb
adc
aas
outsl
comiss
aad
stos
adc
or
push
es
cwtl
jle
jp
mov
inc
push
nop
std
adc
cmp
jbe
lret
jecxz
cmc
int
in
imul
lret
xchg
cs
lret
sbbl
fimuls
or
push
cmp
mov
sbb
xchg
aad
mov
mov
mov
mov
popf
les
jbe
inc
lods
sti
mov
bnd
push
pop
cmp
test
dec
mov
push
cmpsl
iret
out
into
or
dec
sbb
push
in
push
push
repnz
ret
std
cld
push
repz
jp
pop
imul
addr16
sub
mov
or
fiadds
jae
nop
neg
stos
inc
in
cmp
inc
outsl
daa
ds
xlat
add
das
push
dec
lds
popa
pop
add
pop
stos
inc
data16
aaa
dec
mov
push
test
jns
dec
mov
lock
and
mov
pop
test
bound
loopne
push
insb
and
dec
fs
or
inc
outsl
cmpsl
aam
ret
add
fs
pop
xchg
test
test
adc
push
mov
fdivr
push
repnz
int
jge
dec
pop
ret
pop
insl
inc
stos
cmp
push
roll
rcrb
jp
push
add
xor
push
xchg
out
iret
movsb
inc
out
xlat
out
aas
cmpsl
arpl
mov
int
xor
push
mov
jo
sbb
push
mov
repz
icebp
mov
adc
iret
mov
jp
popa
cmp
and
pushf
dec
push
sbb
cmp
jge
inc
cmpsb
xchg
pop
and
sub
mull
jmp
mov
cs
xor
clc
clc
mov
imul
jae
inc
pop
inc
outsb
push
cmpsb
sahf
int
mov
test
mov
scas
mov
stos
ret
dec
adc
push
lea
cmpb
push
mov
or
cmp
dec
pusha
inc
jle
or
stos
mov
in
xchg
push
enter
xchg
js
mov
stos
adc
cmp
divb
imul
pop
mov
inc
mov
jno
cmp
sub
xor
lahf
mov
lret
mov
inc
mov
dec
scas
mov
and
out
jne
addr16
rolb
lret
ljmp
push
sub
pop
inc
xchg
cmp
adc
adc
notb
daa
dec
out
sbb
in
inc
add
sub
sbb
dec
sbb
roll
cmpsl
sub
add
gs
pushf
mov
fs
dec
fs
rcrb
inc
fwait
mov
fs
sbb
pop
int3
mov
sbb
lea
push
or
stos
jmp
cs
jb
push
es
or
push
jbe
jp
sub
sbb
sahf
mov
push
call
psubusw
addl
mov
xchg
popf
sbb
pop
scas
push
and
repnz
lods
repz
and
adc
inc
mov
aas
fmulp
adc
popa
lds
pusha
mov
push
jmp
int
shlb
or
and
push
inc
jmp
mov
out
dec
mov
inc
xchg
loope
shr
push
xchg
cmpsb
sti
shr
push
outsl
sub
xor
aaa
adc
ja
pop
aaa
cmp
sub
std
cmp
or
add
cmc
add
push
pushf
pushf
lea
jmp
push
sbb
sbb
cmp
inc
std
orl
lds
jb
shrl
dec
mov
lret
pop
lahf
pop
cwtl
popa
enter
add
in
push
xlat
or
cmp
ret
ljmp
cmp
sub
sub
dec
sbb
cmp
push
sbb
pop
outsl
jnp
outsl
jae
push
jae
jnp
dec
dec
pop
sub
push
in
jno
sub
cmp
jg
mov
in
test
lods
lds
notb
insl
fwait
cmp
mov
and
push
ljmp
add
negl
lahf
ljmp
imul
sahf
rcl
inc
out
das
jno
gs
dec
je
pop
sub
mov
subb
clc
jl
out
mov
test
jns
stc
movsl
test
cltd
xchg
movsl
in
test
rolb
mov
js
mov
rol
ret
movsl
int
in
fldcw
std
mov
xor
adc
push
lret
ss
stos
add
imul
out
jle
xor
paddd
xor
imul
cli
shld
insl
and
mov
sti
lea
iret
into
sbb
add
icebp
bound
into
jnp
add
cmp
pop
cltd
es
gs
cmp
mov
loope
mov
lret
rcrb
xchg
mov
mov
aaa
out
or
pusha
push
cmp
pushf
mov
mov
lea
jae
push
pusha
push
add
push
jmp
cmc
sub
jmp
inc
movq
pop
adc
push
jae
sbb
or
jno
jo
scas
cmp
popa
inc
push
mov
int
loope
mov
aaa
loope
lret
and
xchg
scas
pop
mov
je
std
or
mov
and
push
stc
add
repnz
or
cmp
ljmp
xor
pop
cmp
dec
push
or
sbb
ss
daa
or
xor
loope
push
lea
lea
addr16
sbb
mov
subl
jo
mov
roll
hlt
xorb
pop
imul
movsl
movsl
pushf
xor
mov
aas
ror
and
inc
out
lds
es
cli
dec
in
and
cmp
jmp
outsb
into
push
js
push
xlat
inc
sbb
lret
jg
jl
mov
mov
inc
push
xchg
mov
jp
pop
outsb
rdpmc
imul
out
cli
scas
out
scas
shl
sub
lahf
jl
cmp
jmp
mov
jmp
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
test
in
aam
int
aad
call
mov
out
andb
and
mov
jl
cltd
jmp
mov
loope
push
sbb
push
xor
lods
les
mov
fcoms
jp
fcoms
call
jge
out
sti
pop
pop
lds
cmpb
rorl
mov
lahf
push
sbb
test
clc
int3
cwtl
shl
ror
rol
hlt
sub
xchg
in
xchg
test
int
lret
repz
out
roll
in
arpl
cmc
repz
clc
xchg
fiadds
jl
mov
iret
ret
dec
xlat
aaa
fucomp
add
rcrl
scas
mov
cmpsl
dec
imul
cmp
out
bound
lahf
sbb
and
dec
mov
lods
jnp
or
adc
mov
mov
mov
leave
xchg
lea
sub
pushf
mov
addb
out
cmpsb
fisubl
out
cli
stc
ja
stos
jo
dec
loope
mov
shrl
repnz
popa
adc
xor
sti
loop
pop
xchg
mov
mov
aas
xchg
aaa
loope
pop
xchg
mov
bound
xor
mov
jnp
or
mov
jge
test
rorl
jno
lock
mov
loopne
jle
jns
inc
push
push
insb
sub
xor
jl
je
sub
sub
mov
test
jmp
aam
decb
lcall
pop
icebp
aad
mov
mov
mov
stos
mov
push
mov
shll
hlt
and
xor
fcmovnb
ja
pop
add
jae
mov
leave
add
cli
push
jae
xchg
and
add
icebp
or
cmpsb
iret
and
inc
jle
adc
adc
xchg
mov
hlt
jle
jp
scas
shlb
dec
or
jg
ja
push
push
ja
adc
ss
sti
push
lock
std
std
mov
xchg
fs
mov
ret
je
out
sbb
lcall
mov
pop
mov
xor
or
cld
popf
jge
leave
in
js
dec
mov
inc
aam
push
ret
add
jmp
das
adc
test
inc
scas
lsl
stos
les
adcb
push
data16
movsb
jne
clc
push
push
mov
mov
enter
xlat
dec
loopne
stc
mov
into
inc
sbb
adc
add
sbb
sub
inc
xor
inc
pop
icebp
mov
scas
dec
mov
or
mov
jbe
pop
insb
lock
add
fstpt
cmpsb
es
icebp
fs
push
out
repz
sbbb
jno
dec
cmc
fistl
cmc
hlt
and
mov
xchg
add
int3
test
or
mov
scas
sti
repnz
in
out
roll
rcll
rorb
push
addr16
push
xchg
lret
aam
movq
addr16
inc
inc
dec
addr16
push
das
push
outsl
arpl
adc
and
fbld
call
push
movw
push
pushf
lea
jne
bswap
rcl
test
mov
cmp
cmp
jmp
call
std
fsubs
in
out
scas
fiaddl
mov
cli
fisubl
inc
addr16
loop
cld
fildll
cmp
xchg
repnz
test
fistpl
loope
lahf
imul
pop
incb
pop
shr
push
sub
pusha
inc
mov
add
sub
xor
add
pushf
or
xchg
mov
incb
arpl
fcoms
add
ljmp
insl
imul
pop
jns
adc
cmp
ja
test
and
inc
xor
adc
insb
fs
sub
inc
in
mov
inc
inc
sbb
ja
adc
ljmp
movsb
lret
mov
xchg
test
cmp
aaa
out
push
cs
xchg
inc
gs
daa
stc
adc
cld
xor
daa
lahf
jbe
adc
aas
jnp
repnz
repz
inc
call
rorl
push
repz
mov
pushf
rclb
fsub
cwtl
mov
loope
je
movsb
add
add
add
cmp
add
push
fsubrs
add
add
add
popa
xor
add
add
aam
xor
add
add
ljmp
add
out
add
add
add
sti
add
add
add
add
addb
add
adc
add
or
add
add
addb
add
sbb
and
add
add
sti
add
mov
add
xor
call
xor
add
add
add
mov
call
call
add
jmp
jmp
dec
in
cwtl
loopne
inc
and
mov
scas
out
loop
cli
loop
into
sar
aad
adc
push
xchg
push
add
stos
cmp
hlt
repz
or
clc
stc
adc
xchg
ret
inc
shll
mov
xchg
inc
stos
inc
mov
out
inc
roll
out
or
xlat
out
out
push
test
push
cmp
adc
ss
imul
stc
fnsave
shrb
pop
in
orl
movsl
int
sub
aam
push
mov
pminub
push
or
je
cmp
or
xor
xchg
in
repz
pop
xor
cmp
aam
mov
push
add
out
in
mov
imul
inc
and
aad
jo
mov
test
sbb
jg
popa
xlat
cmpsl
mov
sbb
push
addr16
addr16
dec
pop
ja
inc
inc
pop
pop
pop
cmp
sub
and
fdiv
shrl
adc
mov
movsb
mov
inc
sub
sahf
out
push
cmp
xchg
lock
mov
cmp
or
dec
sbb
and
pop
pop
mov
out
imul
cmp
xchg
xchg
sti
push
xor
mov
sbb
std
mov
cmp
ficoms
addl
dec
sbb
adc
in
enter
mov
fmulp
jb
mov
and
pop
gs
ljmp
cmp
sar
sub
inc
fimuls
mov
pop
jg
mov
mov
xchg
push
mov
aad
int
sub
popf
push
aaa
jg
jne
cmc
pop
jge
fucomp
ret
js
pop
cmc
icebp
xchg
mov
imul
test
push
mov
dec
popa
inc
addb
push
aad
dec
jbe
ss
bound
or
mov
arpl
mov
int
pop
push
addr16
jbe
mov
pop
push
insl
pop
sub
add
mov
xchg
pop
mov
mov
popf
xchg
fscale
mov
sub
int
pop
scas
test
dec
or
pop
sbb
xchg
xchg
lea
push
add
pusha
push
dec
dec
pop
jo
jo
leave
lods
pop
shll
sbb
pop
adc
lock
lret
out
gs
dec
mov
popf
addl
ret
rcrl
mov
pop
movq
pop
cmp
sbb
jl
leave
dec
cmp
mov
adc
dec
push
or
fbstp
lahf
jecxz
ret
xor
enter
xchg
inc
shlb
mov
cmpb
stos
aas
ficomps
xchg
pop
jb
jl
pop
jg
inc
iret
xor
fdivrp
nop
lods
enter
adc
jne
cs
aad
movsl
or
jns
jb
and
jno
insb
and
arpl
sub
pop
movntps
aaa
pop
adc
sub
adc
jb
mov
inc
popa
mov
cmp
pop
and
pop
sbb
xor
push
xchg
popa
mov
lock
sub
inc
push
int
movl
dec
pop
shl
test
lea
lods
test
adc
fdivrl
and
jge
inc
mov
into
xchg
mov
and
pextrw
pop
add
jg
sub
xor
mov
lahf
cli
and
test
cltd
test
jmp
pop
cmp
xchg
inc
repz
inc
repnz
and
or
mov
paddusb
fcomi
cli
data16
xor
sbb
pop
xchg
pop
push
pop
inc
outsb
bound
add
inc
jbe
pop
pop
inc
sub
pop
test
neg
push
call
mov
xchg
fucomip
fcmovu
jbe
ret
test
inc
pop
dec
jle,pn
pop
jle
xor
jb
fisttpll
ret
or
clc
rorl
dec
insb
daa
sbb
rcrl
jg
mov
in
cmp
cmp
xchg
mov
int
in
mov
mov
insb
or
jg
pop
mov
or
popa
lret
push
mov
stos
jp
nop
mov
pop
push
dec
lea
cmp
pop
in
and
sbb
push
movsl
retw
aas
inc
push
orps
cmp
loope
fwait
xorl
mov
rcrl
cmpsl
mov
sub
adc
lods
cwtl
addl
out
into
mov
lret
loop
jnp
push
pop
dec
loope
andl
lock
adc
or
push
mov
and
lahf
push
fwait
movsb
pop
imul
xor
movsl
call
pusha
mov
movb
loope
icebp
leave
std
add
cmp
mov
fiaddl
push
jle
sbb
ss
jp
pop
sub
add
cmp
and
call
fwait
rorl
iret
jmp
mov
mov
test
icebp
sub
inc
in
shrb
icebp
inc
dec
mov
mov
lock
pusha
in
fisttps
or
rcrb
loope
add
pop
sbb
fs
popw
xchg
iret
mov
sbb
lods
jne
stos
mov
lcall
mov
mov
ret
sbb
adc
test
pop
in
fdivs
hlt
mov
lods
call
mov
pop
stc
dec
out
loope
inc
ret
cmpsb
fadd
popf
jns
jns
mov
clc
jae
xchg
leave
xor
mov
add
jo
cmp
out
gs
jp
loope
xchg
aaa
and
cmp
cmp
mov
inc
das
movlps
test
dec
dec
push
pop
sbb
pusha
inc
scas
mov
jo
inc
pop
das
pop
daa
aas
sbb
das
jnp
aas
xor
adc
adc
xchg
push
push
pop
pop
push
imul
into
lods
leave
in
lret
xchg
jmp
divl
lahf
xchg
mov
and
inc
into
test
mov
inc
lahf
push
hlt
jge
pop
in
in
or
icebp
xchg
dec
loopne
pop
mov
aas
fdivrp
ja
je
das
jle
pop
icebp
mov
div
cli
push
loope
hlt
leave
scas
add
aad
add
sbb
xor
sub
adc
jo
test
ror
mov
lock
hlt
in
pushf
clc
xchg
aam
sar
loope
add
dec
enter
mov
lea
repnz
test
jg
and
nop
int3
push
xchg
jp
in
stc
mov
aad
add
nop
leave
add
push
or
and
dec
addr16
fisubrs
push
outsb
dec
rcrl
lcall
imul
push
nop
fldt
push
jge
incl
mov
repz
sub
into
sub
je
push
xor
sbb
jle
sbb
push
pop
ss
bound
inc
and
xor
mov
xor
jle
push
orl
popa
pop
iret
dec
popa
jbe
sub
test
mov
inc
aam
add
cmp
bound
pop
stos
pop
fiaddl
xor
lea
push
jge
inc
outsl
outsl
mov
sbb
test
sbb
cmp
jae
dec
jecxz
out
mov
lret
lcall
or
cli
mov
fs
xor
fs
add
inc
sub
add
in
bt
mov
cmc
pusha
and
cmc
add
lea
call
shr
sub
shl
mov
jmp
sahf
ret
fwait
sti
repnz
in
sti
incl
in
movsl
int
in
icebp
leave
cli
pop
inc
test
or
pop
div
ret
shl
lods
xchg
out
insb
cmp
jmp
pop
into
add
fbld
mov
mov
mov
mov
xor
mov
mov
decl
cmp
in
xor
mov
add
inc
popa
orb
pop
cs
xchg
shrb
in
mov
xchg
shlb
fstp
shr
aad
leave
icebp
leave
sub
nop
jae
int3
mov
xchg
pop
pop
ds
jp
ss
push
jle
pop
adc
sbb
xchg
mov
bound
add
stos
xor
add
mov
dec
orl
mov
je
push
mov
ret
aas
clc
aad
inc
pop
jnp
mov
adcb
cmp
insb
decl
pop
cmp
ss
cmp
bound
push
sbb
push
sub
jg
repnz
mov
push
call
out
scas
repnz
idiv
icebp
adc
inc
jno
andps
lcall
xchg
sbb
xchg
imul
or
cs
or
pop
or
cs
sub
movb
clts
ljmp
or
push
pop
push
and
push
jne
int3
ret
pop
ret
adc
mov
dec
jmp
push
sub
movb
mov
fwait
lcall
pusha
jmp
psrlq
shlb
pop
bound
shlb
cmc
loope
mov
lea
sub
inc
mov
add
sub
jb
inc
outsb
sbb
dec
outsb
push
bound
data16
movups
pusha
pop
dec
outsl
push
sub
push
push
ficomps
push
xchg
nop
jg
stc
leave
call
mov
sub
add
jo
mov
mov
pushl
jl
push
loope
sahf
loopne
jns
cli
push
or
adcl
mov
loopne
nop
nop
mov
mov
nop
rcrb
adc
icebp
xor
pushf
push
mov
xchg
pusha
jmp
je
popa
adc
into
movsl
cmpsl
jno
push
dec
dec
sbb
push
sub
pop
daa
arpl
cmpsl
mov
dec
test
push
jbe
mov
jns
and
mov
hlt
sbb
cmpsb
mov
xor
enter
loop
in
push
mov
dec
push
cmp
jle
xor
cmc
sub
pop
push
out
sub
mov
fstpt
push
loope
mov
or
sbb
pop
dec
push
and
sub
call
popf
sub
adc
aad
addb
and
jge
sub
add
jne
dec
jle
lds
stc
test
jb
fucomp
and
insb
push
stc
stc
mov
stc
and
stc
lahf
xchg
fdivl
jp
or
aaa
push
andl
das
dec
pop
aas
aas
add
sbb
mov
decl
add
mov
cmpsb
cli
sahf
sub
loopne
sti
decl
inc
and
movl
pushf
pushl
movl
mov
pushf
movl
lea
jmp
call
push
loopne
mov
mov
mov
mov
lock
inc
jecxz
xor
insl
mov
xchg
call
popa
lea
jo
into
push
mov
xchg
cmp
shl
mov
xchg
js
sub
push
sub
jae
dec
push
ja
push
fmuls
cltd
lcall
mov
call
or
cltd
rol
decl
mov
dec
lcall
fisubrs
adc
xchg
adcl
mov
mov
jecxz
xchg
jmp
scas
cld
sbb
cmp
xchg
push
push
dec
pushw
jge
and
xchg
mov
add
xor
rcrl
rclb
leave
sub
rcrl
dec
ss
xchg
shl
pushf
xchg
hlt
lds
lds
out
pushf
popf
popa
xlat
rorl
test
jno
insl
adc
and
ret
stos
jecxz
repnz
aam
pop
xchg
pushf
mov
xor
inc
mov
shl
mov
mov
sub
loope
mov
arpl
inc
insb
insb
outsl
arpl
push
adc
push
pusha
jmp
jecxz
xor
jmp
gs
jg
push
adc
push
aaa
pop
daa
sub
xlat
cmp
sbb
insl
dec
test
ja
pop
fisttps
test
fxam
mov
jo
adc
push
loope
xchg
pop
mov
inc
fcmovne
lea
xorl
cmp
leave
xchg
mov
mov
inc
pusha
cmpb
and
les
push
or
cld
shl
insl
xchg
stc
adc
cltd
test
cltd
lea
mov
adc
rclb
xor
xchg
sub
cmp
or
or
dec
loopne
mov
and
dec
xchg
cmp
sbb
cld
lcall
imul
pop
std
loop
xchg
lcall
or
call
or
fildl
push
mull
adc
push
in
ja
inc
outsl
mov
or
jg
leave
sbb
add
sbbl
out
fimuls
hlt
shrl
mov
xor
adc
negb
or
mov
das
insl
inc
pop
popa
out
loope
and
add
push
or
jae
or
movsl
in
fcmovne
sbb
push
sbb
dec
xchg
cmc
ljmp
push
mov
push
mov
cmp
andb
jp
mov
imul
dec
sub
pop
les
push
insl
insl
data16
test
or
or
roll
and
jae
and
jg
or
les
jl
aad
inc
pop
daa
add
xchg
out
mov
cltd
cmpsb
pop
stc
mov
fisubrs
loop
jo
pop
xor
popf
xchg
rclb
xor
jbe
xchg
call
or
mov
in
jmp
cwtl
mov
xor
cwtl
jmp
sbb
xchg
fistl
or
adc
jecxz
test
fidivl
sub
les
js
jl
push
sub
cmp
mov
movb
not
pushf
jmp
cmpsl
adcb
pop
lret
nop
hlt
mov
fcomps
push
push
fnstcw
xor
xchg
mov
and
mov
mov
dec
mov
xor
test
inc
mov
hlt
mov
mov
push
or
stc
sbb
pop
les
insb
jno
scas
mov
mov
or
out
ds
mov
test
adc
cmp
call
scas
lcall
ljmp
jecxz
mov
xchg
shl
into
ljmp
out
sub
scas
dec
mov
jmp
out
outsl
fbstp
pop
cmp
bound
push
push
jbe
jle
sahf
xchg
orb
fidivs
test
mov
les
or
mul
dec
mov
adc
mov
nop
in
int
sub
xchg
jae
mov
mov
test
jbe
jbe
pop
icebp
addb
mov
int3
aam
lock
cld
test
lock
sub
test
and
call
jno
pushf
pusha
push
adc
call
jl
fs
jae
jg
and
outsb
or
push
push
dec
xor
jbe
sub
xchg
in
push
adc
test
shll
and
aaa
fcoml
loopne
pop
mov
cmp
adc
or
jb
push
xchg
push
jae
insl
outsl
fisttpll
pusha
js
icebp
cmp
negl
jnp
dec
dec
pop
aad
adc
outsb
xor
add
xchg
into
sbb
jmp
push
bound
adc
jb
dec
push
push
jb
sub
test
mov
mov
mov
fcoms
jle
sbb
pop
push
dec
outsb
push
outsb
jle
incl
jo,pn
sbb
and
das
rorb
arpl
pop
int
mov
sbb
xchg
insl
adcl
les
ret
push
dec
lahf
sub
mov
push
cltd
push
popa
xor
fstl
outsb
dec
arpl
or
in
outsb
testl
in
std
mov
std
lds
sub
push
mov
movb
push
inc
mov
mov
cmp
movb
sub
test
push
mov
cmp
pushf
jmp
pushl
popl
movb
pushl
push
lea
jmp
push
mov
lea
btr
mov
shr
jmp
pusha
cmc
test
shr
call
jmp
shl
jmp
jmp
jmp
rcr
sar
jmp
push
mov
jmp
mov
pushf
jmp
pushf
popl
push
pushl
popl
mov
movb
push
mov
lea
jmp
jmp
call
push
movw
pushl
lea
cpuid
cmp
stc
jmp
stc
jmp
daa
shl
sub
mov
shl
mov
bt
mov
not
inc
mov
test
bt
pushf
test
add
pushf
jmp
mov
call
jmp
push
pushf
popl
push
jmp
pushf
mov
pushf
pushf
popl
push
call
sub
jmp
sub
clc
cmp
pushf
shr
pushl
pushf
pusha
movb
mov
pushf
push
pushf
popl
jmp
call
movzbw
pushf
pushf
popl
lea
pushf
movzbw
pushl
xchg
bswap
pusha
xchg
mov
pop
jmp
shl
mov
xor
sbb
mov
mov
test
push
add
pushf
mov
movb
mov
lea
jmp
clc
add
pusha
dec
push
bt
xor
bt
push
add
cmc
jmp
call
mov
pusha
call
pushf
mov
movb
movb
pushf
mov
pushl
ret
dec
clc
mov
movb
call
mov
lea
std
mov
jmp
mov
mov
push
mov
movl
lea
jmp
mov
push
pushf
pushf
pusha
mov
mov
push
mov
pushl
pushf
pushf
mov
lea
jmp
mov
mov
movl
lea
jmp
mov
test
add
call
sub
jl
not
bswap
sub
mov
inc
inc
movsbw
mov
sub
dec
sbb
bsf
neg
mov
call
jmp
lea
jne
btc
add
xorb
not
bswap
pop
pusha
pusha
push
pushl
lea
jmp
mov
mov
push
movb
lea
jmp
jmp
neg
stc
pusha
mov
cmc
bswap
bt
mov
push
pushl
add
jmp
call
bt
and
seto
and
mov
pushf
shld
sbb
add
clc
ror
bt
sub
lea
ror
inc
lea
shrd
mov
pusha
stc
cmc
shl
call
pusha
call
movb
push
call
pushf
popl
jmp
add
jmp
add
inc
add
xchg
add
jmp
add
mov
jae
cmp
add
cmc
add
cmp
add
jmp
add
rolb
jae
rolb
jae
jmp
add
lcall
ret
jmp
add
xchg
add
rolb
jae
jmp
add
sbb
jae
in
jae
jmp
add
cmp
jae
cmc
add
jmp
add
ret
add
movb
ret
jmp
add
movb
rol
add
jmp
add
lods
add
lods
add
jmp
add
clc
add
xchg
add
jmp
add
dec
add
roll
jae
jmp
add
sbb
jae
sub
add
addb
loopne
add
mov
jae
jmp
add
xor
jae
cmp
jae
jmp
jae
out
jae
addb
fcoml
jae
jmp
jae
ret
add
xchg
add
dec
add
jmp
jae
out
add
xchg
add
cmp
add
movl
jae
jbe
jae
jmp
jae
push
add
lods
add
mov
add
out
add
xchg
add
inc
add
jmp
jae
xchg
jae
ret
add
outsl
add
jmp
jae
mov
jae
mov
jae
ret
add
jmp
jae
mov
add
clc
add
jmp
jae
cmc
add
inc
add
ja
jae
jmp
jae
mov
jae
roll
jae
std
add
jmp
jae
cmp
jae
roll
jae
rolb
jae
jmp
jae
xchg
jae
lods
add
outsl
add
jmp
jae
movb
lret
movsb
add
roll
jae
jmp
jae
push
add
jbe
jae
jp
jae
jmp
jae
out
add
cmp
add
out
jae
dec
add
out
add
dec
add
addl
leave
inc
add
addb
ret
jae
cmc
add
ja
jae
ja
jae
movsb
add
movsb
add
mov
jae
mov
jae
sbb
jae
cmp
add
xchg
jae
ja
jae
movsb
add
addb
rcrb
add
ret
add
dec
add
jbe
jae
out
add
lahf
add
mov
jae
dec
add
movl
jae
mov
add
in
jae
mov
add
and
jae
movl
jae
dec
add
addl
int3
addl
mov
movb
shl
add
out
add
rolb
jae
jp
jae
mov
add
ja
jae
mov
add
dec
add
cmp
jae
mov
jae
outsl
add
mov
jae
jbe
jae
mov
add
jne
jae
xor
jae
ret
aam
add
pop
add
ret
add
pop
add
addl
shlb
add
push
add
movl
jae
mov
jae
mov
jae
cmp
jae
addb
aad
add
rolb
jae
addb
lods
add
push
add
addl
mov
roll
jae
addb
lds
jae
mov
add
in
jae
movb
int
add
ret
add
mov
jae
push
add
rolb
jae
ret
lds
jae
lahf
add
cmp
add
mov
jae
movb
loopne
add
lcall
rcll
rcll
loopne
add
mov
add
xchg
add
lods
add
in
jae
xor
jae
cmp
add
dec
add
inc
add
dec
add
and
jae
ret
add
dec
add
lcall
and
jmp
stc
call
pusha
mov
pushf
jmp
push
lea
jp
divl
pusha
movb
mov
pushl
pusha
jmp
sar
notl
bswap
cmc
mov
push
sub
test
stc
cmp
and
pushf
pusha
pushf
popl
jmp
jmp
pusha
pushf
mov
mov
pushl
pushf
call
push
push
mov
push
movl
mov
mov
lea
jmp
shld
call
cmp
jmp
lea
aad
aam
and
mov
rol
inc
inc
cmc
mov
clc
bt
pusha
add
pushf
mov
pushf
lea
jmp
rcr
shr
or
mov
sbb
shl
mov
bt
jmp
lea
bts
call
jmp
mov
jmp
mov
pushf
pushf
lea
jmp
shrd
pushf
xor
stc
shrd
sar
rcl
movzbl
sbb
lea
jg
mov
pusha
jmp
shrd
pushf
pusha
movl
movb
mov
call
test
cmp
bt
mov
clc
bt
push
call
pusha
cmc
add
pusha
pushf
popl
call
pusha
mov
push
lea
jmp
jmp
cmp
jmp
pushl
popf
movw
push
push
lea
jmp
mov
jmp
mov
pushf
movb
pushf
movw
lea
jmp
mov
pusha
pushf
push
pushl
ret
push
pushf
popl
push
call
call
pusha
rep
pushf
sar
mov
shl
sbb
shl
pop
mov
cmp
push
pushl
popf
pushl
push
lea
jmp
lea
ja
and
shld
mov
shl
pushf
rol
lea
cmc
btr
sub
bsr
sbb
ror
lea
pusha
jmp
test
add
ja
shr
call
add
js
pushf
movb
mov
pusha
lea
jmp
pusha
pushl
popl
pusha
pushf
push
lea
jmp
pushf
popl
mov
lea
jb
popl
push
pushf
pusha
push
lea
jmp
mov
pushf
pusha
mov
jmp
mov
jmp
call
push
jmp
push
lea
je
push
pushl
mov
pusha
movb
push
lea
jmp
mov
pushf
mov
push
pusha
mov
call
jmp
cmp
clc
rdtsc
cmc
call
call
call
mov
not
jmp
push
mov
push
mov
push
pushl
mov
pushf
pushf
mov
push
call
mov
call
mov
mov
jmp
call
shl
neg
movzww
bt
stc
clc
pusha
xchg
movb
bt
add
test
cmp
test
neg
stc
add
pushf
pushf
call
push
mov
jmp
jmp
mov
push
mov
pushf
pushl
pushf
call
pushf
cmp
lea
add
rol
cmc
mov
call
jmp
movb
pushf
popl
jmp
push
movb
pushf
popl
pusha
pushf
jmp
rcr
jmp
call
mov
cltd
rcr
setb
mov
inc
cmp
ror
bt
mov
test
pusha
cmp
not
jmp
xor
call
mov
lea
jnp
popl
push
mov
pushl
lea
jmp
push
jmp
mov
mov
pushf
mov
pushf
pushl
ret
movw
movb
mov
push
mov
mov
movb
lea
jmp
mov
push
lea
jmp
inc
mov
inc
mov
clc
add
jmp
jmp
mov
call
jmp
jmp
cmc
add
call
push
divl
pusha
pushl
pushl
mov
call
std
xchg
pop
mov
jmp
call
jmp
call
pushl
popl
mov
mov
mov
lea
jmp
mov
push
pushf
popl
lea
jg
pushf
pushf
pushl
popl
pusha
push
lea
jmp
jmp
push
lea
jnp
pusha
pushf
pushf
popl
jmp
sbb
sub
sar
jmp
call
call
or
call
mov
pushf
popl
push
lea
jb
pushf
pushl
popl
push
push
lea
jmp
push
pushf
popl
push
pusha
mov
pusha
jmp
mov
jmp
lea
jge
pushf
push
pushf
popl
call
jmp
pushl
test
sub
jmp
bt
jmp
pushf
jmp
mov
push
mov
push
push
mov
movb
movb
lea
jmp
push
add
jmp
push
dec
bt
test
bt
bt
not
mov
xor
push
pusha
cmp
sub
bt
sub
pushf
jmp
mov
stc
add
pushf
mov
movw
mov
lea
jmp
mov
push
jmp
mov
pushl
mov
call
call
mov
pushf
push
mov
call
jmp
add
pushl
pushf
movw
lea
jmp
sub
bt
test
mov
cmc
cmc
call
and
test
sar
sar
sub
bswap
movzbw
lea
mov
movsbw
pushf
call
sub
call
mov
movb
mov
pushl
lea
jmp
mov
pusha
pushf
mov
jmp
mov
pusha
mov
pushl
mov
jmp
mov
push
pushf
mov
stc
sub
mov
push
pushf
lea
jmp
or
jmp
call
pusha
pusha
not
not
mov
call
pushf
mov
pushl
push
pushl
lea
jmp
sub
mov
bt
add
stc
neg
call
test
sub
push
jmp
push
mov
mov
bt
test
push
stc
bswap
cmp
pushf
add
jmp
test
pushl
bt
stc
clc
add
cmp
popf
pusha
pusha
lea
jmp
push
mov
pushl
popl
mov
movb
pusha
mov
lea
jmp
jmp
pushl
mov
mov
pushl
movb
pushf
popl
movb
mov
pushf
pushl
popl
movb
mov
lea
jmp
push
movb
mov
movw
pushf
lea
jmp
bt
clc
cmp
movb
jmp
bt
test
xor
cmc
add
jp
bt
pusha
sub
cmc
call
call
pushf
mov
call
jmp
mov
mov
call
mov
pushl
lea
jmp
dec
neg
add
shl
shl
and
bsr
shr
and
mov
pushf
call
sub
pushf
cmc
bt
sub
push
mov
push
push
mov
lea
jmp
mov
pushf
pushl
mov
pushl
pusha
lea
jmp
pushl
jmp
sub
call
call
mov
pushf
mov
lea
jmp
clc
mov
bswap
and
shrd
neg
mov
pusha
lea
jns
clc
cmp
add
jmp
mov
movb
lea
jmp
pushl
popl
mov
push
lea
jmp
pusha
pusha
pushf
popl
pushf
pushf
jmp
cld
pushl
popf
push
pushf
pushl
movb
lea
jmp
not
push
xor
call
pushl
mov
pushf
push
mov
pushf
pushl
lea
jne
cmc
rcr
mov
pusha
jmp
bt
stc
pusha
add
mov
pushl
pushf
push
lea
jmp
jmp
bts
ror
movzww
cmc
xchg
stc
add
clc
clc
pusha
neg
push
add
pusha
cmp
xchg
stc
sub
jae
clc
pusha
add
cmc
cmc
cmc
sub
cmp
mov
movb
add
push
lea
jmp
cbtw
clc
add
cmc
cwtl
cmp
sub
mov
mov
movb
pushl
movb
push
lea
jmp
push
jmp
pushf
mov
mov
call
cld
movw
call
sub
jmp
xchg
movb
pushf
movb
movl
jmp
jmp
xor
xor
and
dec
sar
btc
sub
jmp
bts
rcr
cmc
bsf
mov
rcr
rcl
btr
sub
lea
mov
mov
dec
dec
inc
pushf
not
and
lea
jmp
bts
mov
pushf
pushf
bswap
mov
xor
mov
cmp
cmc
sub
call
and
jmp
pushf
push
dec
jmp
pusha
pushf
decl
call
push
mov
pushl
movb
pushl
ret
pushf
call
pushf
mov
jmp
push
bswap
pop
mov
call
movzbl
call
mov
jmp
call
pushl
mov
pusha
pushf
jmp
movl
mov
pushf
movb
lea
jle
push
mov
call
pusha
pusha
lea
jns
pushf
pushf
mov
jmp
dec
inc
rcr
btc
xor
shrd
movzbl
sar
mov
pushl
bswap
call
cmp
bswap
stc
btc
mov
clc
call
stc
sub
jmp
call
call
pushf
popl
pusha
call
bsr
rol
jmp
clc
movzbl
push
sub
call
lea
call
pusha
mov
pushf
lea
jmp
cld
lea
jge
push
pushf
rep
bsf
pushf
mov
add
jbe
and
shld
bts
pop
test
cmp
call
pushl
pushf
jmp
bswap
mov
jmp
cmc
pushf
jmp
pushf
pusha
jmp
movl
pushf
popl
call
call
mov
movw
mov
mov
pushl
lea
jmp
pushf
mov
call
jmp
cmc
pushf
pushf
pushf
sub
jmp
mov
mov
cmp
push
bt
sub
jmp
pusha
lea
push
dec
bswap
ror
test
not
movsbl
call
pushf
pushf
pushl
popl
pushf
mov
movl
pusha
lea
jmp
mov
pushf
push
movb
pushf
lea
jmp
mov
pusha
mov
mov
pushl
mov
movw
pushf
lea
jmp
jmp
mov
pushf
call
call
mov
movb
lea
jmp
mov
xor
mov
btc
shl
mov
mov
cld
lea
mov
xchg
mov
rcr
adc
not
mov
pushf
mov
bt
pushl
popf
push
pushl
ret
movb
rep
not
mov
cmp
bswap
bsr
shld
mov
clc
call
pushf
mov
movb
pushf
mov
pushf
lea
jmp
jmp
pushf
call
pushf
pusha
call
mov
pushl
jmp
pushf
popl
bt
push
jmp
call
sub
pushf
lea
jne
stc
test
call
shld
mov
or
mov
test
clc
pushf
pusha
sub
pusha
jmp
pushl
popl
pushf
mov
lea
jmp
pushf
mov
push
movb
pushf
pushl
ret
das
btr
add
bts
mov
cmp
cmp
add
jmp
mov
pushf
push
mov
pushf
pushl
call
pushf
jmp
cwtl
aas
bt
sar
lea
jmp
je
add
call
push
inc
pusha
sub
bt
mov
push
movl
test
add
jmp
sub
cmp
and
push
movb
jmp
pushf
popl
jmp
call
pushf
pushf
pushf
popl
mov
pusha
pushf
mov
call
mov
pushf
movb
pushl
mov
jmp
push
jmp
jmp
call
pushf
push
mov
call
jmp
push
pushf
popl
call
sar
call
mov
ja
pusha
movw
pushf
mov
mov
call
mov
pushf
lea
jmp
jmp
bt
clc
add
push
movb
pushf
movw
mov
push
mov
pusha
push
push
lea
jmp
push
call
call
pusha
pushf
popl
jmp
mov
jmp
shl
dec
mov
dec
rcr
cmp
mov
stc
test
pushf
sub
push
bt
shr
pushl
pushl
call
pushl
popl
pushf
lea
jmp
mov
movb
pushl
lea
jmp
pushf
pushf
popl
push
mov
jmp
mov
mov
call
xor
stc
pusha
sub
bt
cbtw
bt
add
movb
pushf
pushl
cwtl
cmp
call
cmc
pusha
mov
cmp
bt
sub
clc
add
jnp
test
add
jmp
mov
mov
push
pushf
lea
jmp
mov
jmp
add
call
pushf
popl
jmp
mov
call
jmp
pop
movw
lea
std
pushf
pushf
call
jmp
pusha
push
push
jmp
push
push
movb
mov
movb
pushf
push
pusha
lea
jmp
pushf
pushf
movb
mov
pusha
jmp
pusha
mov
call
add
add
lea
jne
pusha
call
cmp
sub
jge
add
pusha
push
movb
call
adc
shl
bsr
rcr
mov
call
not
push
clc
pushf
bt
and
pushf
pushf
call
mov
call
sub
movzbl
dec
rcl
add
bt
rcr
neg
sub
bswap
cmc
bt
add
btc
not
inc
adc
xor
and
lea
neg
add
bswap
test
mov
clc
jmp
bswap
mov
mov
mov
bt
not
bt
cmc
not
jmp
push
pushf
popl
movb
pushl
call
push
movb
mov
pushl
mov
jmp
push
call
lea
jge
push
call
pushf
call
call
add
mov
pushl
call
mov
movb
push
mov
lea
jmp
test
jmp
pushl
call
pushf
jmp
btr
push
lea
lea
stc
mov
movzbl
ror
btr
neg
pusha
rol
test
lea
rol
btr
sub
shr
adc
sar
btc
mov
movzbw
shr
shr
mov
and
or
add
pushf
rcl
cmc
cmc
mov
add
jae
xor
movzbw
call
sub
push
movb
push
lea
push
call
jmp
not
call
mov
jmp
mov
lea
jle
push
call
sub
pusha
pushf
cmp
add
push
mov
pushf
popl
pushf
jmp
inc
call
cwtl
cwtl
adc
mov
jmp
call
call
push
mov
pushf
mov
pusha
push
lea
jmp
jmp
movw
movb
lea
je
pusha
pusha
stc
bt
sub
push
mov
xchg
jmp
pusha
dec
pushl
clc
pushf
not
pushf
jmp
call
clc
add
pusha
mov
pusha
movb
pushf
pushf
lea
jmp
mov
mov
push
pushl
push
pushf
lea
jmp
ror
mov
call
jmp
cmp
clc
cmpl
mov
pushf
push
mov
call
mov
movb
mov
pushf
jmp
das
bt
dec
shrd
mov
adc
neg
ror
mov
clc
jmp
rcr
btc
xor
movzbw
rcl
call
push
pushf
popl
jmp
push
mov
pushl
popl
pushf
push
lea
jmp
pusha
movw
pushf
popl
pushf
mov
jmp
push
pushl
popl
pushf
mov
pushf
lea
jmp
pushl
popl
mov
lea
jmp
mov
push
mov
jmp
pusha
mov
push
lea
jmp
push
movl
call
movsbw
jb
aaa
mov
rcl
stc
test
sbb
mov
test
bt
bt
sub
cmc
test
shr
pushf
pushf
call
mov
pushf
pushf
movb
pushf
lea
jmp
pusha
call
movzbw
dec
movsbw
and
shrd
pop
not
btr
neg
sub
and
shrd
cmc
bsr
mov
clc
clc
add
jns
push
mov
push
push
lea
jmp
stc
sub
test
mov
pusha
test
cmp
add
pushf
movw
pushl
pushf
lea
jmp
btr
add
pushf
rcr
pushf
ror
not
pushf
jmp
pushf
push
pushf
inc
movb
mov
decl
jmp
shld
pushl
push
pushf
pushf
mov
jmp
aas
aad
xchg
mov
pusha
mov
pushl
bt
sub
cmc
shr
mov
movw
mov
pusha
call
jmp
sbb
sub
xor
pusha
btr
movsbw
ror
or
jmp
jmp
movl
jmp
pushf
mov
pushf
mov
push
lea
jmp
mov
pusha
pushl
pushf
lea
jmp
clc
clc
cmc
add
jmp
dec
pusha
cmp
cmc
stc
not
call
mov
call
pusha
pushf
lea
jp
pushf
pusha
pushl
movb
push
mov
pushf
jmp
push
jmp
mov
mov
jmp
pusha
mov
push
pushf
mov
pushf
movb
pushf
mov
jmp
pushf
jmp
ror
push
mov
rcl
and
shl
mov
push
pushl
mov
test
sub
cmp
pusha
shl
pushf
call
test
pushl
or
mov
stc
mov
xor
call
add
lea
btc
btr
adc
mov
bts
sar
add
xor
mov
bt
ror
inc
cmp
rcr
add
pusha
ror
lea
dec
ror
jmp
clc
movb
shl
push
call
push
movl
pushl
popl
movb
lea
jmp
push
pusha
mov
pusha
lea
jmp
stc
cmp
pusha
lea
jle
ja
shr
mov
xchg
and
lea
xadd
sub
rol
shl
seta
lea
shld
sar
and
sbb
call
shld
shrd
pop
std
call
pusha
jmp
push
movb
lea
movb
pushl
pusha
mov
pushf
movb
lea
jmp
pushf
popl
push
jmp
push
mov
movw
mov
push
push
lea
jmp
mov
push
lea
jne
pushf
movb
mov
push
lea
jmp
pushf
pushf
mov
jmp
jmp
mov
pushl
push
mov
mov
pushf
lea
jmp
btc
mov
and
add
jmp
push
jmp
mov
movsbw
not
mov
jmp
mov
pushf
popl
jmp
movb
lea
jne
mov
pushf
lea
jmp
mov
movb
call
pushl
popf
pushf
pusha
lea
jmp
pusha
jmp
mov
mov
pushf
call
jmp
xchg
ror
btc
push
rcl
jmp
clc
add
pusha
mov
pusha
pushl
lea
jmp
pusha
pusha
mov
pushl
popl
mov
mov
push
lea
jmp
mov
mov
mov
push
mov
lea
jne
pushf
push
mov
push
pusha
pushl
mov
lea
jmp
xor
mov
mov
not
shl
sar
add
pusha
mov
pushf
mov
push
mov
lea
jmp
mov
jmp
shl
setne
movzbl
jbe
bt
push
stc
sub
pushl
dec
pusha
dec
cmc
call
pushl
call
jmp
movw
sub
pusha
movb
pushf
lea
jmp
pusha
pushf
pushf
popl
call
pushl
popl
pushf
pushf
pushl
lea
jmp
xor
clc
call
pusha
mov
mov
pusha
mov
pushf
popl
pushf
pushf
pushl
popl
push
movb
lea
jmp
dec
jmp
pusha
call
call
pushf
pushl
pushf
popl
pushl
jmp
mov
call
mov
push
pusha
push
mov
pushf
movw
push
mov
pushf
mov
pushf
mov
movb
pushf
mov
movb
mov
pushl
mov
movw
pushf
lea
jmp
rcl
add
test
movzbl
adc
bt
sub
pushf
jmp
mov
pushf
jmp
pusha
pop
mov
push
pop
lahf
seto
mov
pusha
call
mov
clc
sub
pushl
jmp
pusha
shl
push
pushl
mov
jmp
mov
pushf
pushf
lea
jmp
mov
jmp
cmc
bswap
test
jmp
call
ror
pushf
pop
add
rcl
ror
jmp
pushf
popl
jmp
push
push
push
call
pushf
jmp
pushf
mov
pusha
mov
pushf
pushf
mov
movb
lea
jmp
mov
pusha
pushl
push
pushf
lea
jmp
mov
jmp
mov
pushl
popl
pushl
lea
jmp
jmp
mov
pushf
movl
lea
jmp
shrd
bsr
mov
push
bsf
mov
das
cltd
shr
mov
jmp
jmp
call
xor
mov
stc
add
call
jmp
pushf
bswap
clc
push
xor
jmp
pusha
movsbl
movzbl
mov
movb
call
mov
push
call
push
mov
mov
pushf
mov
pushf
push
mov
mov
call
mov
jmp
jmp
call
mov
pushf
pushf
lea
jmp
jmp
push
pushl
sub
call
mov
jmp
pushf
mov
push
pushf
pusha
lea
jmp
mov
call
push
mov
jmp
bt
setbe
inc
movzbl
cmc
sub
test
sub
pusha
pushf
not
jmp
pushf
mov
pushf
mov
lea
jmp
adc
mov
pushf
not
mov
push
pushl
cmp
sub
clc
call
pusha
pusha
movb
pushf
popl
pushf
mov
jmp
aam
dec
adc
mov
not
clc
mov
test
call
call
mov
push
pushf
pushf
pushf
lea
jmp
mov
pushf
lea
jmp
movsbl
bswap
shrd
call
mov
mov
pusha
jmp
pushf
mov
pushf
mov
call
mov
pushf
movb
lea
jmp
mov
pushl
push
movw
lea
jmp
pusha
call
shl
seta
jno
movzbl
jmp
cmp
xchg
push
stc
mov
sub
push
push
test
add
mov
movb
stc
cwtl
cmp
clc
sub
pushf
mov
push
movb
lea
jmp
cmc
movzbw
not
pushf
test
or
clc
sub
call
push
pushf
pushl
popl
mov
movb
mov
lea
jmp
stc
movzbw
push
mov
rcl
rol
push
movzbw
xchg
push
push
mov
rcl
push
xchg
pushl
movsbw
clc
jb
stc
push
rcl
clc
bts
clc
mov
mov
rol
ror
xchg
ror
rol
and
xor
movzbw
neg
bts
rcr
bt
rol
push
shrd
lea
lea
bts
sub
or
jmp
jmp
jmp
pusha
sub
jmp
