push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
incb
inc
xchg
sbb
add
add
mov
add
or
add
sub
or
adcl
add
adc
add
lret
sub
add
fsubl
lret
cmc
and
and
outsl
outsl
outsl
outsl
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
add
add
add
test
add
cwtl
pop
add
mov
add
add
add
adc
add
inc
add
push
add
dec
add
dec
add
inc
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
jmp
add
add
add
add
add
add
add
add
add
add
loopne
add
pusha
jmp
add
add
add
add
add
add
add
add
add
add
or
add
js
sbb
push
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
in
sbb
xor
add
in
add
add
add
add
add
add
add
mov
add
add
sbb
xor
add
in
add
add
add
add
add
add
add
mov
add
xor
sbb
xor
add
in
add
add
add
add
add
add
add
fadds
add
push
add
add
add
add
add
add
push
add
add
add
add
nop
add
xorb
add
add
add
add
xorb
or
add
xor
add
pop
add
xorb
add
add
add
add
add
add
add
add
clc
add
adcb
add
and
adcb
add
dec
add
adcb
add
add
add
add
add
add
add
add
add
add
addb
add
sbb
dec
add
add
add
add
add
add
add
add
add
test
add
repz
inc
add
add
add
add
add
add
add
add
add
rolb
add
test
sbb
pop
add
add
add
add
add
add
add
add
add
clc
add
add
negb
add
add
in
add
add
add
add
add
add
add
and
add
pop
negl
add
add
in
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
jo
add
or
sbb
pop
add
add
add
add
add
add
add
add
add
cwtl
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
sbb
pop
add
add
add
add
add
add
add
add
add
adc
add
sbb
in
add
in
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
pusha
add
add
sbb
insb
add
add
add
add
add
add
add
add
add
mov
add
sbb
inc
add
add
add
add
add
add
add
add
add
rolb
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
fadds
add
add
in
add
add
add
add
add
add
add
add
sbb
sub
add
in
add
add
add
add
add
add
add
sub
sbb
test
add
in
add
add
add
add
add
jg
add
pop
add
add
addb
add
add
add
add
add
add
add
add
jo
add
insb
xor
add
add
in
add
add
add
add
add
add
add
cwtl
add
sbb
test
add
in
add
add
add
add
or
xchg
add
add
push
add
xor
add
pop
push
add
addb
cmpb
add
add
add
push
add
clc
push
add
and
add
dec
pop
add
jo
add
add
add
add
add
add
add
add
add
and
add
cld
xor
add
add
add
add
add
add
add
add
dec
push
add
xchg
xor
add
in
add
add
add
add
add
add
add
jo
add
adc
sbb
cli
add
add
add
add
add
add
add
add
add
cwtl
push
add
or
sbb
ljmp
add
add
add
add
add
add
rolb
add
cmp
add
add
add
add
add
add
add
add
call
inc
sbb
mov
add
in
add
add
add
add
add
add
add
adc
add
pop
inc
sbb
int3
add
add
add
add
add
add
add
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
pusha
pop
add
faddl
add
add
add
add
add
add
add
add
add
add
mov
add
rolb
add
add
add
add
add
add
or
add
add
add
add
sub
add
push
or
adcb
add
js
add
mov
sldt
enter
sbb
add
lock
sbbb
add
sbb
add
inc
or
sbbb
add
add
nop
or
addb
add
add
add
add
add
add
add
add
add
sbb
add
dec
inc
sbb
push
add
add
add
add
add
add
add
add
add
inc
or
add
add
in
add
add
add
add
add
add
add
push
inc
sbb
js
add
in
add
add
add
add
add
add
add
nop
or
add
sbb
les
add
in
add
add
add
add
add
add
add
mov
dec
sbb
sub
add
in
add
add
add
add
add
add
add
loopne
add
xor
add
add
in
add
add
add
add
add
add
add
or
add
js
sbb
inc
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
add
add
add
add
pop
or
add
sbb
fadds
add
in
add
add
add
add
add
add
add
orb
add
dec
sbb
adc
add
in
add
add
add
add
add
add
add
test
add
or
add
add
in
add
add
add
add
add
or
add
or
orb
add
or
add
xor
add
add
add
add
add
add
add
add
add
clc
or
add
sbb
adc
add
in
add
add
add
add
add
add
add
and
add
inc
dec
sbb
adc
add
in
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
orb
sbbb
add
ret
addb
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
add
add
add
add
add
mov
add
cli
nop
sbb
adc
add
in
add
add
add
add
add
add
add
fimull
add
mov
add
add
in
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
inc
or
add
xchg
sbb
enter
in
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
sahf
ds
sahf
ds
out
sahf
ds
out
popf
aas
push
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
push
popf
aas
out
popf
aas
push
popf
aas
out
popf
aas
push
popf
aas
push
sahf
ds
out
popf
ds
out
sahf
aas
out
sahf
ds
popf
ds
popf
aas
push
popf
aas
out
popf
aas
out
sahf
aas
out
sahf
aas
out
sahf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
push
popf
ds
sahf
ds
sahf
ds
popf
ds
lahf
cmp
push
sahf
aas
push
popf
aas
out
pushf
inc
out
pushf
inc
out
pushf
inc
in
pushf
inc
in
popf
inc
in
popf
inc
out
popf
inc
out
pushf
inc
out
pushf
inc
push
pushf
inc
push
popf
inc
push
popf
inc
out
pushf
inc
out
popf
aas
out
popf
ds
out
sahf
aas
out
sahf
aas
out
sahf
aas
push
popf
ds
popf
aas
push
sahf
aas
out
pushf
inc
in
popf
inc
ljmp
jmp
inc
jmp
inc
jmp
inc
ljmp
out
popf
inc
push
popf
inc
in
popf
inc
ljmp
jmp
inc
jmp
inc
ljmp
jmp
pushf
inc
push
popf
ds
lahf
cmp
repnz
cmp
push
mov
aaa
push
lahf
inc
out
popf
inc
ljmp
jmp
dec
jmp
xchg
inc
call
lcall
ljmp
out
pushf
inc
push
pushf
dec
out
pushf
dec
jmp
dec
jmp
popf
aas
ljmp
out
sahf
inc
push
cltd
inc
push
pushf
inc
clc
mov
inc
jmp
cltd
inc
jmp
mov
dec
call
movsb
push
jmp
mov
pop
jmp
sahf
push
push
mov
dec
ljmp
fcompl
inc
jmp
fwait
inc
fistps
dec
call
lcall
cld
mov
cmp
lock
ds
lahf
ds
ljmp
ficoml
insb
jmp
scas
outsb
fildll
imul
cmpsl
imul
cmpsl
imul
cmpsb
imul
fisubl
outsl
jo
fisubl
insl
fisubrs
push
fisubrl
outsb
jmp
lods
jno
out
imul
frstor
imul
mov
fildll
pop
fistpl
push
call
xchg
push
call
xchg
push
jmp
cltd
push
jmp
movsl
pop
jmp
scas
insl
fldt
imul
shlb
jbe
fidivl
dec
push
pushf
cmp
repz
ds
popf
notrack
xchg
inc
jmp
fwait
dec
fstps
outsl
dec
fdivr
fdivr
loop
jmp
out
out
jmp
in
out
icebp
push
jmp
jmp
in
icebp
out
sti
call
in
ljmp
aad
fsubrl
pop
dec
mov
lret
inc
mov
nop
push
jmp
mov
cltd
push
iret
jmp
loop
jmp
jmp
fdivrp
jmp
je
in
fwait
inc
out
pushf
inc
out
popf
aas
in
xchg
inc
jmp
cltd
dec
fstpl
push
lock
push
ljmp
cmc
call
lret
out
push
out
push
call
sar
cmc
call
loop
sti
hlt
in
stc
icebp
std
cmc
sti
cli
std
stc
cld
cld
sti
stc
cmc
clc
std
cld
cld
cld
std
sti
stc
cli
out
push
fadd
fldcw
popa
dec
push
dec
xchg
push
dec
push
call
xchg
push
fistpl
std
lock
icebp
std
cld
out
std
std
repz
std
cmc
std
clc
out
fisubl
inc
in
pushf
inc
out
popf
aas
push
sahf
dec
jmp
inc
ljmp
cli
mov
jns
fbld
insb
call
sahf
outsl
fstps
push
fcompl
imul
fsubl
xchg
jmp
fcmovnb
sti
out
stc
icebp
cli
sti
cld
push
cli
push
cli
push
sti
push
cld
push
sti
cli
std
std
stc
icebp
push
fld
dec
nop
push
call
xchg
push
call
xchg
push
call
xchg
push
call
cwtl
fs
mov
cld
cld
clc
push
std
push
push
push
cld
std
std
bnd
movsb
jno
call
pushf
inc
out
popf
aas
push
popf
inc
jmp
xchg
inc
push
mov
pop
push
movsb
jmpw
lcall
aam
pop
call
xchg
pop
call
xchg
pop
fcoms
push
ficoms
push
jmp
cltd
pop
ficompl
ja
fisubrl
movsb
sti
out
clc
out
cld
sti
stc
cli
std
clc
cld
push
cld
out
sti
std
push
cld
cld
cli
lock
stc
faddp
jmp
mov
call
cltd
pop
call
xchg
push
call
cltd
push
call
cwtl
push
fistpl
addr16
call
in
loopne
stc
sti
cli
push
sti
push
cld
push
std
push
cld
cld
std
lock
fsubs
push
pushf
inc
push
popf
aas
jmp
xchg
inc
jmp
push
jmp
cltd
push
fistl
push
call
push
dec
mov
int
push
dec
dec
dec
dec
dec
nop
dec
dec
xchg
dec
call
xchg
dec
call
xchg
dec
ficoml
push
call
cltd
pop
fisubl
push
fdivrs
std
idiv
std
cld
sti
std
push
stc
cld
push
cli
stc
stc
in
stc
fdivrl
fistpl
push
call
cwtl
push
call
cltd
push
fistps
jmp
mov
sti
idiv
stc
push
cli
push
std
push
cli
stc
std
std
in
jmp
test
inc
push
popf
inc
push
popf
aas
out
cwtl
dec
in
xchg
dec
ljmp
call
mov
into
mov
int
push
dec
mov
lret
lea
int3
lea
int3
lea
lret
mov
nop
dec
dec
xchg
push
dec
xchg
push
call
xchg
dec
call
xchg
dec
call
xchg
dec
dec
xchg
push
dec
xchg
pusha
call
cmpsb
jge
in
lret
mov
std
icebp
loop
idiv
cld
push
std
cli
std
sti
icebp
cld
loop
in
mov
fcompl
pop
call
fwait
push
call
lcall
fcompl
xchg
clc
out
cld
idiv
sti
std
push
sti
stc
cld
in
jmp
stos
insb
in
lcall
lock
ds
xchg
dec
push
xchg
dec
jmp
xchg
dec
ficoml
push
inc
mov
mov
leave
mov
int
push
call
nop
push
call
nop
push
call
lea
iret
mov
int3
nop
push
dec
mov
lret
dec
xchg
dec
dec
xchg
dec
dec
cwtl
push
dec
cltd
pop
inc
xchg
arpl
shlb
cmc
out
stc
cli
sti
std
cli
cld
std
cld
hlt
std
out
out
mov
call
pushf
pop
call
pushf
pop
call
sahf
push
call
fwait
push
fstps
push
out
cld
clc
stc
sti
cli
sti
sti
sti
out
aas
out
popf
ds
sahf
aas
in
lcall
fstl
dec
dec
xchg
dec
inc
xchg
push
inc
xchg
push
dec
xchg
push
call
xchg
push
ficomps
push
fistl
call
xchg
push
call
xchg
push
dec
xchg
push
dec
xchg
push
dec
xchg
dec
call
cwtl
push
call
lcall
lret
call
cmpsl
test
cli
fcmovnb
cld
lock
std
cld
sti
cld
cld
cld
cmc
cld
out
in
mov
call
sahf
pop
call
lahf
push
call
mov
push
fstps
push
in
cld
idiv
cli
sti
cld
sti
std
sti
out
fldt
inc
out
popf
ds
out
popf
aas
jmp
sahf
inc
fistps
dec
call
cltd
dec
dec
xchg
dec
dec
cwtl
push
call
sahf
pop
call
mov
arpl
in
push
jmp
mov
jmp
sahf
pusha
fstpl
pop
call
xchg
push
dec
xchg
dec
call
xchg
dec
call
cltd
push
call
xchg
push
call
xchg
pop
call
cltd
imul
mov
cli
std
cld
sti
std
idiv
sti
jmp
call
mov
pop
fisubl
push
frstor
pop
fbstp
int3
cld
hlt
sti
sti
std
std
sti
sti
out
fisubrl
inc
in
popf
aas
out
popf
aas
fcompl
inc
jmp
mov
push
call
lcall
fsubs
out
mov
cltd
push
ret
cltd
push
ret
cltd
push
mov
mov
ficompl
push
call
cltd
push
call
cltd
push
call
cwtl
dec
call
xchg
dec
fcoms
pusha
call
movsb
jnp
jmp
lret
clc
cld
std
idiv
sti
in
aad
out
xchg
call
mov
push
fbld
push
jmp
cmpsb
push
jmp
movsb
pop
jmp
mov
push
loopne
sti
icebp
std
cld
cli
cld
std
cld
std
in
fldt
inc
out
popf
aas
out
sahf
aas
ljmp
jmp
pushf
push
fcompl
js
ljmp
push
std
ljmp
in
out
in
clc
fcmove
in
shrl
ficompl
pop
fistpl
dec
call
xchg
dec
fistl
pop
dec
cwtl
imul
cmc
std
std
clc
sti
out
xlat
call
movsl
push
jmp
test
jmp
movsl
pop
jmp
mov
push
ffree
sti
out
cld
clc
std
cld
std
cld
sti
in
fldt
inc
out
popf
inc
push
popf
aas
in
cltd
inc
out
mov
push
jmp
lods
ja
not
scas
sti
jmp
out
cld
idiv
cld
cli
std
cli
std
stc
idiv
idiv
stc
out
std
out
lock
cmpsl
jmp
cmpsl
je
xlat
fwait
pop
ficompl
push
fstps
fistpl
arpl
repnz
stos
cld
lock
sti
std
idiv
std
lock
lock
fisubrl
push
jmp
test
pop
jmp
cmpsb
popa
fildll
mov
cld
idiv
std
sti
std
cld
sti
in
fisubrl
inc
out
popf
inc
out
popf
aas
in
xchg
cmp
in
fwait
dec
fstpl
xchg
push
aam
out
std
idiv
std
std
cli
cld
sti
sti
std
std
cli
cld
sti
std
stc
clc
lock
cld
ljmp
fisubl
pop
fldenv
dec
jmp
mov
pop
call
pushf
fs
out
lds
sti
std
clc
lock
test
pop
fisubrl
pop
jmp
lods
pop
jmp
cmpsl
arpl
fsubrl
stc
in
std
idiv
sti
std
std
cld
out
fsubrs
inc
in
popf
inc
out
popf
aas
push
lcall
loopne
dec
fsubrl
jmp
std
clc
std
std
cld
sti
sti
std
cli
std
cli
std
cld
std
sti
push
cld
call
pop
fcompl
dec
jmp
mov
pop
call
cltd
pop
ljmp
stc
stc
cli
cld
in
jecxz
test
jmpw
scas
pop
fidivs
pop
jmp
scas
popa
jmp
stos
fs
test
in
shll
std
idiv
std
cld
std
std
cli
in
call
test
jmp
fwait
inc
in
popf
inc
out
popf
aas
stc
lahf
inc
push
fwait
inc
jmp
cwtl
inc
fldenv
icebp
cli
stc
cld
clc
std
cld
cld
cli
clc
stc
push
stc
push
stc
clc
sti
std
cld
cld
cli
cld
repz
out
push
shlb
fcompl
push
jmp
mov
pop
fcompl
pop
jmp
mov
lock
cli
sti
std
cli
std
in
ljmp
movsb
push
jmp
mov
fnstenv
jmp
stos
fs
cmpsl
jno
jmp
scas
stc
call
cld
std
std
sti
cli
in
call
test
jmp
pushf
inc
jmp
inc
out
sahf
aas
push
fwait
cmp
jmp
xchg
inc
call
mov
repz
std
std
std
cld
std
std
cld
stc
cld
push
cli
push
stc
push
sti
stc
std
cli
hlt
cli
jmp
fisubl
pop
fbld
jmp
cmpsb
pop
fcomps
popa
fnstenv
out
cld
cld
stc
std
repnz
push
les
jmp
mov
fidivs
gs
lods
gs
fsubs
lods
clc
jmp
cld
cld
sti
sti
in
fldenv
inc
in
popf
inc
out
sahf
aas
push
lahf
inc
out
sahf
inc
jmp
cltd
inc
call
mov
repz
cld
cli
cld
cli
cli
clc
cld
push
cli
push
cli
stc
std
std
cld
push
out
call
lcall
mov
pop
jmp
stos
pop
jmp
test
fsubl
popa
dec
test
jmp
cli
sti
push
imul
push
test
ljmp
jmp
mov
jmp
lods
gs
fisubl
stos
push
call
cld
cld
std
cld
cli
cld
out
fisubl
inc
in
popf
inc
out
sahf
aas
out
mov
inc
jmp
pushf
dec
call
cmpsl
jo
repnz
cld
stc
cli
std
std
std
cld
cli
push
jmp
push
fdivr
hlt
lret
stos
jmp
cmpsl
jnp
frstor
pop
fsubrl
push
jmp
stos
pop
jmp
cmpsb
pop
fistpl
jae
jmp
push
cmc
push
sti
imul
push
int
jmp
cmpsb
jae
in
lods
imul
call
mov
in
scas
arpl
fsubl
cmpsb
mul
std
std
sti
cli
cld
cli
cld
sti
cld
in
fsubl
inc
in
popf
inc
out
sahf
aas
jmp
inc
jmp
popf
inc
fisubrl
cli
out
clc
call
hlt
repnz
stc
ljmp
in
lret
lods
jmp
mov
ja
ficomps
pop
jmp
lods
pop
push
jmp
stos
pop
jmp
popa
fstps
in
clc
std
repnz
clc
clc
clc
in
clc
shll
in
lods
push
out
mov
in
mov
push
mov
pusha
fisubs
mov
cld
std
cli
push
cld
clc
std
std
sti
sti
in
fsubrl
inc
in
popf
aas
out
sahf
aas
clc
mov
inc
push
pushf
inc
jmp
test
sar
icebp
int
out
ret
lock
out
lcall
mov
jmp
mov
jmp
lods
xchg
loop
jns
fistps
jmp
movsl
pop
jmp
lods
pop
jmp
scas
push
jmp
scas
push
jmp
stos
push
jmp
cmpsl
pop
jmp
movsl
arpl
fcomps
sahf
in
cld
sti
repnz
stc
stc
in
clc
xlat
mov
in
js
jmp
imul
out
mov
fs
mov
fbld
popf
cmc
loopne
sti
stc
push
std
push
std
std
stc
jmp
call
popf
ds
out
popf
ds
clc
pushf
inc
push
xchg
ds
cwtl
aas
jmp
xlat
scas
call
movsl
jg
rclb
fcompl
fstpl
jmp
sahf
gs
jmp
cmpsl
fs
jmp
call
mov
jmp
scas
push
jmp
lods
push
jmp
stos
pop
jmp
movsb
popa
fcomps
jne
stc
fdivrs
cli
idiv
cld
stc
out
push
fdivrs
jmp
mov
arpl
cmc
shlb
mov
fwait
push
loopne
cld
std
stc
push
std
push
std
std
clc
jmp
jmp
popf
inc
in
sahf
aas
out
sahf
aas
push
cwtl
inc
stc
lahf
inc
push
fwait
inc
push
mov
call
xchg
arpl
out
stos
gs
stos
pop
push
lods
pop
push
lods
pop
push
lods
pop
out
scas
pusha
in
scas
in
scas
pusha
in
scas
pop
jmp
lods
pop
jmp
mov
in
mov
call
stos
pop
jmp
test
fcomps
jb
not
mov
push
jecxz
std
cld
stc
sti
push
repz
clc
sar
mov
jmp
mov
addr16
ret
cmc
mov
fs
in
pushf
repnz
std
stc
sti
clc
std
cld
std
stc
ljmp
lahf
inc
in
sahf
inc
out
popf
aas
jmp
ds
pushf
inc
push
pushf
ds
cmpsl
push
push
mov
rcrb
pop
push
lods
push
push
mov
push
mov
push
mov
out
mov
jmp
pop
jmp
pop
ljmp
jmp
mov
ljmp
jmp
lahf
data16
fsubrl
stos
cmc
jecxz
clc
std
cld
stc
sti
clc
idiv
stc
fmulp
jmp
mov
popa
in
mov
push
push
mov
addr16
in
rcrb
cld
idiv
cld
cli
clc
std
cli
idiv
idiv
ljmp
lahf
dec
jmp
inc
out
popf
aas
jmp
fwait
aas
out
pushf
cmp
push
iret
xchg
call
mov
pop
push
mov
clc
mov
pop
push
mov
push
mov
pusha
in
mov
pop
jmp
mov
jmp
mov
jmp
scas
pop
jmp
cmpsb
pop
in
stos
outsb
push
mov
mov
cli
loopne
std
lock
sti
cld
cld
push
repnz
cld
idiv
div
push
fxch
jmp
mov
arpl
out
mov
push
cmc
les
clc
mov
outsl
push
mov
fdivr
std
repnz
sti
repz
cld
hlt
cmc
jmp
ficoms
inc
out
popf
aas
push
mov
aas
out
popf
ds
jmp
pop
push
aam
call
movsl
insl
jmp
stos
out
mov
out
mov
out
mov
in
mov
in
mov
in
mov
out
mov
in
mov
jmp
mov
jmp
mov
jmp
lods
pop
jmp
cmpsl
popa
in
lods
jo
idivb
mov
neg
jmp
push
cld
cli
idiv
push
cli
in
cli
faddp
in
mov
push
test
push
les
test
cli
mov
jb
repz
leave
mul
clc
in
clc
in
std
mul
std
lock
fisubrs
dec
jmp
inc
out
popf
aas
push
lahf
inc
push
pushf
cmp
in
stos
push
fdivl
call
lahf
imul
loopne
insb
jmp
scas
jo
ljmp
jmp
scas
fs
mov
out
mov
pop
jmp
mov
in
mov
jmp
sahf
fs
lods
jnp
not
scas
hlt
std
cmc
loope
sti
hlt
loop
cli
repz
cld
repz
std
lock
sti
fidivl
push
mov
sti
shrb
outsl
clc
outsl
cld
shrl
mov
push
mov
clc
lds
clc
shrl
out
lret
out
lds
jmp
fwait
dec
jmp
inc
out
popf
aas
push
fwait
cmp
repnz
ljmp
jmp
shlb
shll
cmp
lods
cmp
stos
jge
fldenv
jmp
mov
fs
in
mov
ljmp
jmp
gs
in
mov
jmp
cmpsl
popa
fbld
jno
clc
leave
lcall
leave
mov
jmp
xchg
push
ret
in
mov
in
lods
insb
push
mov
cld
mov
outsl
cli
leave
outsl
inc
insl
push
mov
in
stos
insb
in
mov
ljmp
jmp
mov
fsubrs
jp
out
gs
scas
pop
in
popf
inc
out
popf
aas
stc
popf
cmp
in
fwait
inc
jmp
test
in
mul
out
fld
ljmp
jmp
sarb
jmp
leave
movsl
jmp
rclb
loope
push
fildll
pop
call
mov
gs
mov
ljmp
jmp
push
ljmp
fsubrl
push
out
push
in
scas
push
mov
imul
sti
leave
imul
leave
imul
mov
insb
stc
mov
outsl
push
mov
outsb
jmp
mov
jno
std
mov
inc
out
popf
aas
mov
aas
jmp
cltd
dec
call
movsb
outsb
in
idiv
std
sti
cmc
cld
cld
idiv
clc
push
out
call
cli
in
out
into
sahf
jmp
mov
fbstp
pop
push
shlb
shlb
mov
jmp
popf
inc
jmp
mov
push
mov
je
out
ret
jo
icebp
ret
stc
lds
inc
jo
inc
outsb
dec
imul
int3
insl
cli
lret
imul
lret
std
int3
push
dec
insb
inc
jo
dec
jae
cli
lds
cli
lds
cld
enter
jb
clc
je
cld
lds
sti
mov
inc
out
sahf
aas
std
mov
aas
jmp
lcall
jmp
idiv
stc
std
push
cld
std
sti
std
cld
sti
cmc
std
lock
push
std
in
clc
fdivr
icebp
iret
cltd
jmp
lods
pusha
out
mov
push
mov
fs
sti
mov
inc
push
scas
push
inc
imul
stc
shlb
repnz
outsb
push
into
outsb
shll
call
outsl
dec
imul
int
cli
int
stc
int
cli
into
imul
into
imul
int
std
int3
outsl
std
iret
jae
test
insb
dec
insl
dec
insb
dec
imul
into
jno
sti
shll
mov
aas
cli
pushf
xor
jmp
xchg
push
call
movsl
jne
jmp
push
push
std
push
cld
stc
std
std
cli
cld
stc
clc
std
idiv
stc
clc
sti
cli
std
push
sti
fdivl
in
lods
stc
mov
gs
std
mov
inc
push
mov
dec
imul
shrb
iret
insb
push
iret
imul
shrb
shrl
call
imul
std
int3
imul
lret
imul
lret
imul
lret
std
lret
cld
leave
imul
leave
insb
cli
leave
insl
push
push
sti
int3
outsl
dec
outsb
std
enter
arpl
dec
fs
inc
arpl
in
mov
ds
cld
mov
aas
fists
jmp
push
stc
std
cld
push
cli
std
push
sti
push
cld
push
std
std
push
std
push
push
cld
push
jmp
ret
cmpsl
insl
jmp
cmpsb
pop
clc
mov
addr16
inc
popa
call
mov
inc
data16
sti
ret
push
ret
repz
imul
enter
enter
enter
insb
clc
shrl
mov
imul
mov
push
in
mov
out
mov
push
out
mov
push
mov
push
std
mov
aas
out
sahf
ds
std
mov
inc
jmp
xchg
dec
jmp
test
out
int
push
in
std
std
hlt
stc
cld
cli
sti
std
std
cld
cli
std
std
push
sti
sti
push
cld
std
stc
std
idiv
jmp
ret
jmp
stos
insl
jmp
stos
pop
push
shrl
data16
sti
ret
in
inc
ljmp
in
stos
pop
jmp
mov
jmp
mov
jmp
scas
outsl
jmp
scas
outsl
call
scas
jl
out
jl
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ljmp
call
mov
test
test
ljmp
push
sahf
inc
out
popf
aas
clc
lcall
lock
push
jmp
pushf
pop
jmp
xchg
jmp
lods
push
out
push
jmp
clc
std
std
clc
sti
cld
idiv
sti
std
stc
std
cli
stc
in
clc
fldcw
jmp
mov
push
lds
stc
enter
lds
jmp
cmpsb
push
fists
outsl
push
mov
push
mov
lcall
mov
movsl
in
shrl
repz
mov
hlt
lret
mov
hlt
into
mov
push
aam
clc
fcmovne
push
fadd
push
fmul
push
clc
loop
std
out
jmp
test
jmp
inc
out
pushf
inc
out
popf
aas
clc
lcall
negl
dec
fistpl
jb
loope
xchg
push
mov
in
sar
neg
cld
out
jmp
std
ljmp
jecxz
out
mov
pop
push
mov
cli
lds
lret
dec
gs
clc
mov
gs
fcoms
xchg
jmp
call
in
in
fdivrp
out
loop
cld
out
out
std
out
in
push
in
push
out
push
in
push
icebp
push
icebp
push
in
push
jmp
div
std
clc
idiv
cld
hlt
std
loope
ds
in
pushf
inc
out
popf
aas
std
mov
ds
fwait
inc
push
mov
jmp
imul
stos
outsb
mov
ljmp
push
lods
push
aam
jmp
pushf
jmp
mov
jmp
cmpsb
push
mov
cld
ret
gs
dec
arpl
dec
dec
fs
inc
insb
push
mov
dec
xchg
arpl
cli
int3
lods
cli
call
sti
repnz
std
push
push
std
idiv
std
std
cli
std
clc
hlt
std
idiv
std
cld
cli
sti
sti
std
sti
cld
cld
std
std
clc
cld
idiv
cli
cld
cld
push
cli
cld
std
sti
call
jmp
popf
inc
in
popf
aas
out
popf
aas
stc
mov
ds
fwait
cmp
mov
insb
push
mov
ljmp
jmp
lods
push
loop
insl
jmp
mov
jmp
mov
jmp
mov
call
mov
cli
lds
call
insb
sti
int3
fs
sti
lret
dec
push
stc
shrb
stos
push
aam
ja
std
loope
idiv
std
cli
std
cld
sti
cld
cli
clc
sti
stc
std
std
std
sti
idiv
std
cli
std
std
std
cld
std
cld
cld
cld
std
cld
sti
cld
stc
cli
std
cld
in
fldenv
out
popf
inc
out
popf
aas
out
popf
ds
lahf
aas
push
lcall
mov
push
cli
ret
cmc
mov
arpl
in
mov
jmp
mov
push
mov
gs
clc
les
cli
int
cld
shrl
cli
iret
data16
cld
int3
addr16
cld
lret
in
mov
call
pushf
jmp
mov
push
std
clc
cli
sti
std
cli
std
stc
std
clc
sti
cli
std
std
cld
clc
cli
std
std
std
cld
std
std
std
cli
cli
clc
idiv
std
cli
cld
in
fsubs
dec
out
popf
inc
out
popf
aas
jmp
lcall
jmp
movsl
dec
mov
imul
dec
outsl
std
lret
cld
lret
sti
leave
imul
lret
clc
lret
imul
std
lret
std
lret
imul
std
iret
push
dec
imul
in
mov
fldenv
mov
sti
jmp
cli
idiv
sti
std
clc
std
hlt
std
clc
sti
sti
std
cli
push
stc
cld
cld
sti
cld
std
cld
cli
std
cli
cli
cld
cli
sti
std
cli
jmp
shlb
inc
ljmp
jmp
lcall
out
aas
in
movsb
dec
sti
mov
addr16
std
leave
push
dec
insl
dec
push
dec
push
dec
push
cld
shrb
stc
shrb
cld
iret
addr16
dec
addr16
dec
outsb
dec
outsb
dec
imul
enter
shlb
mov
push
mov
push
mov
test
jmp
ljmp
jmp
jmp
jmp
jmp
out
out
out
in
in
lock
icebp
ljmp
mov
jmp
sahf
dec
ljmp
call
lahf
inc
call
mov
pop
push
mov
pop
cld
lds
dec
addr16
dec
push
shrl
shrb
shrb
int
dec
je
std
lret
cli
les
idivb
pop
jmp
movsb
dec
jmp
mov
arpl
jecxz
outsb
fldenv
insb
dec
cmpsl
outsl
dec
lods
jb
into
stos
insb
call
stos
push
call
test
fldenv
push
fldenv
insl
call
cmpsl
outsb
call
cmpsb
outsl
call
movsl
insl
call
movsl
outsb
call
movsl
outsl
call
movsl
outsb
imul
xchg
aas
out
fwait
ds
popf
aas
push
sahf
aas
in
sahf
inc
push
mov
inc
in
sahf
inc
push
lods
push
out
scas
push
jmp
push
push
mov
std
mov
pop
inc
pusha
inc
arpl
cld
lds
std
les
inc
addr16
mov
popa
jmp
pop
jmp
pop
jmp
lahf
inc
jmp
xchg
inc
call
popf
dec
jmp
cwtl
dec
call
xchg
dec
fcomps
fstpl
inc
call
pushf
inc
jmp
inc
in
pushf
inc
jmp
inc
jmp
fwait
inc
call
fwait
dec
jmp
popf
dec
jmp
cltd
inc
jmp
xchg
cmp
push
cltd
ss
cld
cmpsb
inc
push
sahf
ds
sahf
ds
popf
cmp
mull
ds
popf
inc
push
movsb
dec
ljmp
call
sahf
inc
out
lahf
inc
out
mov
inc
call
mov
dec
jmp
lcall
call
movsb
dec
out
mov
inc
push
cltd
ds
pushf
inc
push
cltd
inc
out
lcall
out
lahf
inc
push
sahf
inc
push
sahf
inc
stc
lahf
inc
push
sahf
cmp
push
lahf
cmp
push
lahf
cmp
out
lahf
inc
in
sahf
inc
in
lahf
inc
push
mov
inc
push
mov
cmp
out
pushf
cmp
out
sahf
cmp
push
popf
ds
fwait
ss
stc
sahf
cmp
clc
lcall
repnz
inc
jmp
xchg
cmp
call
pushf
inc
push
popf
inc
push
pushf
inc
in
fwait
inc
ljmp
out
xchg
dec
in
xchg
dec
in
lcall
in
sahf
inc
jmp
inc
push
popf
aas
stc
sahf
aas
sahf
inc
std
lcall
cli
pushf
inc
push
pushf
inc
push
cltd
ds
stc
lcall
std
popf
cmp
clc
pushf
aaa
push
popf
aaa
push
popf
cmp
repz
cmp
hlt
popf
aaa
push
popf
aaa
out
popf
cmp
in
lahf
cmp
ljmp
push
lahf
xor
lock
cmp
in
sahf
ds
out
sahf
aas
incl
add
add
add
xor
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
xor
add
add
jns
push
adc
dec
mov
mov
and
ja
ja
ja
add
add
add
arpl
add
outsl
add
add
add
cmp
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
add
add
jns
push
adc
dec
mov
mov
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
xor
add
add
jns
push
and
inc
add
push
add
add
je
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
sub
or
pop
dec
jb
addr16
pop
and
xor
add
add
jns
push
and
inc
bound
and
and
insb
jge
testl
ja
ja
add
add
add
arpl
add
outsl
add
add
add
inc
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
jns
push
and
ja
ja
ja
add
add
add
arpl
add
outsl
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
xchg
sbb
inc
xchg
sbb
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
xchg
sbb
sbb
add
xchg
sbb
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
sti
sahf
mov
mov
loopne
push
adc
and
cmp
rcr
arpl
loopne,pn
shr
sar
or
dec
stc
fyl2xp1
push
cmp
xor
jns
pop
js
cmpsl
leave
push
xor
fwait
push
and
push
mov
inc
sbb
xor
lahf
add
daa
cltd
lahf
adc
or
cmpsb
ret
cltd
mov
cmp
push
push
cli
orb
sub
pop
xchg
test
movsb
mov
cs
xchg
and
push
xor
fcomip
jno
pop
cld
push
mov
mov
out
pop
mov
or
xchg
clc
aad
cmpsb
ds
loopne
fsubr
je
jge
rep
cmp
push
jb
and
adc
aad
mov
test
cwtl
inc
pop
inc
jge
aad
shrb
mov
jmp
dec
leave
out
inc
mov
and
pop
xor
cli
dec
or
aas
pop
or
inc
jns
cmpsl
xchg
cmp
adc
mov
jl
enter
pop
mov
xchg
js
mov
mov
gs
lods
jnp
jg
ret
xchg
sbb
and
aas
or
push
dec
pop
push
pusha
jmp
gs
shll
test
mov
pushf
ret
lahf
mov
sbbb
adc
out
notl
adc
ret
scas
jns
loop
sbb
fidivs
xchg
insb
dec
iret
stos
jle
pop
mov
pusha
cmpsb
sbb
mov
addr16
lds
push
or
cmc
hlt
xchg
out
movsl
cmp
xchg
pop
cltd
repz
or
sahf
js
adc
cmp
ret
mov
add
mov
loope
gs
mov
cmpsl
sbb
js
loopne
stc
in
stos
movsl
pop
je
xorb
mov
mov
cmp
popa
push
ret
sub
dec
mov
pop
adc
mov
or
push
mov
fildll
cltd
out
cmp
idivb
lahf
xlat
stos
mov
add
dec
xor
outsb
mov
lods
mov
cmp
lret
loope
ret
loope
and
mov
jecxz
jnp
push
out
fldcw
xchg
pop
daa
jg
cmovns
cmpsb
dec
mov
repnz
push
shr
and
dec
mov
dec
rclb
inc
sub
shlb
pop
xor
jle
cmpl
push
sbb
jae
xchg
jl
mov
icebp
dec
xor
imull
fcmovb
dec
jmp
rcr
cltd
adc
add
ss
mov
mov
icebp
repnz
je
pop
nop
add
add
jnp
push
popa
cmp
inc
lods
push
adcl
or
fstpt
pusha
jle
stc
inc
daa
inc
pop
cli
dec
repz
daa
sub
push
je
das
cmp
push
adc
and
das
pop
scas
pop
dec
push
inc
sub
inc
int
sub
sub
rolb
push
fisubrl
in
movsl
sbb
sbb
mov
iret
cld
loop
call
mov
jle
mov
inc
xchg
mov
shlb
fimull
add
sub
sub
pop
addr16
sbb
mov
lret
sbb
mov
and
mov
mov
pop
jg
ja
mov
mov
cmp
or
push
mov
adc
lss
stc
cli
add
fldcw
mov
jge
or
inc
into
aas
xor
js
cmp
addr16
xchg
jmp
stos
addr16
lret
or
fcoms
adcl
sbb
pusha
lcall
imul
test
cs
and
rolb
jecxz
pop
in
lods
orl
xor
add
lcall
sbb
cmp
adc
jecxz
mov
repnz
lcall
je
cld
push
push
sub
mov
push
into
xchg
and
ffree
in
or
movsb
and
mov
lret
sbb
xchg
cmp
push
mov
sub
faddp
push
orl
cmp
je
sub
jns
sbb
ja
mov
fistps
sbb
xchg
inc
cld
push
cmp
push
adc
inc
inc
dec
scas
mov
pop
cmp
repz
sub
or
pushf
cs
cs
xor
cltd
adc
pop
cmp
inc
or
sti
sbb
int
jp
sbb
arpl
test
mov
cmp
popa
mov
adc
push
xchg
gs
outsb
xor
inc
icebp
ret
insb
popa
icebp
icebp
jns
repz
push
pop
int3
jo
mov
aad
fisttps
jno
sbb
test
mov
test
add
dec
pushw
pop
xor
inc
pop
pop
xchg
xor
fcompl
loope
mov
jne
cmp
mov
testb
xor
xor
bound
fldcw
ficomps
and
cmp
mov
xchg
clc
mov
cltd
mov
mov
mov
xor
push
adc
scas
xchg
sub
addr16
push
pop
mov
jp
mov
mov
jge
cmpl
cmp
scas
push
inc
jno
sti
sbb
test
dec
cltd
insl
sbb
stos
sbb
pop
push
mov
pop
mov
inc
push
mov
in
mov
cmpb
fistpl
test
cwtl
add
stos
xor
pop
mov
insb
xchg
cmp
dec
pop
pop
aaa
xor
popa
sbb
outsb
cmp
xlat
out
sub
cmp
sbb
lahf
lods
int3
mov
ret
sbb
in
ds
jecxz
mov
xlat
adc
out
cltd
ret
in
pop
out
outsb
sub
fistpll
bound
xchg
mov
xchg
cmp
ja
push
outsb
jl
nop
sti
lret
pop
and
cmpb
imul
jb
jo
lcall
rcrb
add
inc
mov
out
mov
dec
xchg
jmp
sbb
sbb
movsl
lock
mov
aaa
nop
sub
ljmp
pop
push
data16
jbe
xor
jp
fcomi
insb
cmpsl
pop
push
jl
jae
push
subl
adcl
pop
adc
in
fidivs
inc
pop
adc
and
shlb
test
pop
mov
pop
dec
inc
movsb
dec
cmp
stos
xchg
shrl
int3
xor
xchg
inc
aad
aad
std
sbb
pop
fiaddl
or
xor
push
jnp
or
xlat
inc
out
pop
icebp
jb
push
orps
push
loopne
dec
lret
fmuls
outsl
pushf
test
std
lods
pop
pusha
cmpsb
lret
std
sub
or
outsl
lds
incb
pop
sbb
lahf
lods
cmpl
fbld
push
cltd
inc
xchg
test
push
mov
jge
aaa
xlat
mov
jnp
cmp
mov
mov
iret
push
jns
repz
out
xor
js
mov
pop
xchg
stos
mov
nop
adc
aaa
sub
pusha
ds
add
jp
and
outsl
push
mov
mov
pusha
movsl
bound
fcmovnu
jge
int
js
mov
cmpsl
in
dec
cld
jge
test
mov
push
sahf
inc
xchg
je
das
jecxz
xor
inc
and
push
xchg
popf
bound
fdivl
cmpsl
jne
xor
stos
and
ja
jo
les
sbb
stos
or
aas
mov
sub
add
imul
push
lret
test
aam
add
pusha
fstpt
mov
sarl
jno
cmc
in
push
dec
jno
or
test
mov
mov
sub
gs
mov
test
pop
xchg
jmp
out
aam
test
je
push
jmp
and
movsl
outsb
out
gs
cmp
mov
rcrl
and
xor
add
leave
int3
out
scas
inc
push
xor
adc
leave
dec
or
push
ds
bound
push
jns
mov
ss
dec
sbb
movb
cmpb
mov
pop
cwtl
xchg
jne
repnz
bound
das
scas
cld
out
out
push
aaa
mov
stos
mov
lock
push
ja
fcmovnbe
and
pop
loopne
mov
dec
dec
add
hlt
add
mov
mov
aam
dec
pop
pop
lcall
push
notl
fisubrs
push
inc
sub
arpl
popf
or
arpl
inc
mov
or
mov
dec
sti
fildl
iret
push
inc
add
and
mov
mov
dec
movsb
loopne
pop
loop
inc
int3
pop
sub
push
xchg
add
cmp
out
imul
scas
xchg
sub
mov
sub
jbe
fcompl
ljmp
inc
jl
xchg
loopne
jbe
into
add
lods
dec
lcall
outsb
push
xchg
imul
jne
xchg
movsl
std
gs
push
icebp
and
sub
xchg
outsb
dec
cmpsl
ds
fcoml
jo
jae
push
mov
push
arpl
or
xor
push
push
xchg
xor
xor
int3
mov
pusha
inc
nop
cmp
and
xlat
jecxz
ljmp
mov
ljmp
pusha
aaa
xchg
stc
adc
and
cmpsl
nop
lock
pop
sub
rcrl
xor
aad
xor
addr16
cmc
fmuls
mov
repz
int
test
inc
js
pop
jbe
mov
pop
pop
jl
subl
shlb
or
aas
or
push
movsl
arpl
add
arpl
les
xchg
je
jne
xorl
stos
adcl
adc
iret
loop
iret
sbb
xorb
mov
adc
lret
push
popf
xor
mov
jae
je
jecxz
das
lahf
and
inc
push
into
add
cltd
les
icebp
test
add
adc
imul
mov
jne
mov
mov
mov
xchg
jno
das
imul
pop
xchg
lret
stos
aam
mull
xorb
and
bound
shrb
stc
push
add
xor
lcall
inc
movl
imul
dec
cwtl
test
dec
xor
xor
cltd
shlb
add
push
leave
dec
fisttps
push
testl
xchg
jecxz
mov
pushf
jg
pusha
dec
ds
mov
in
imul
pop
dec
push
lea
pop
nop
adc
loopne
loop,pn
push
sbb
gs
mov
push
or
loop
adc
add
aas
add
cmp
push
push
and
cmpb
push
lock
jg
lods
nop
fwait
shll
sbb
push
cmp
add
push
mov
mov
adc
jp
mov
mov
jle
lret
mov
mov
lds
push
cmp
mov
cmp
inc
inc
adc
in
rol
push
and
scas
leave
jnp
xchg
out
in
xor
add
inc
loope
jbe
mov
xchg
loope
ret
and
stos
and
in
aad
into
outsb
push
addr16
ljmp
jmp
push
inc
mov
xchg
out
insb
mov
leave
mov
out
push
fsub
dec
mov
mov
pop
gs
and
mov
cmpsl
cs
outsb
mov
xor
dec
pop
pop
push
and
jbe
mov
ficompl
mov
out
stos
lds
sbb
loopne
int
fs
mov
testb
lock
xchg
and
pop
and
movsb
je
push
addr16
test
pop
push
xor
dec
pop
sbb
mov
enter
popf
pop
popf
inc
pushf
popf
xchg
out
mov
pop
es
push
out
leave
stc
add
jno
test
andb
sbb
mov
mov
popf
out
ret
inc
ljmp
dec
sbbb
subb
sub
test
and
dec
xchg
and
cmpsb
xchg
negb
mov
ret
jae
shll
lret
jns
lahf
xor
loope
movsb
inc
add
xor
imul
or
sbb
push
js,pt
cmpsb
inc
xor
sub
mov
push
push
dec
rcr
lods
xorb
sub
inc
enter
ja
inc
je
arpl
lcall
jp
bound
xlat
lods
test
cmpsb
fwait
aad
jg
xor
insb
inc
bndldx
cmp
adc
dec
cli
sbb
push
addr16
push
mov
fcoml
test
in
repnz
xorb
mov
add
push
mov
xchg
rorb
jnp
sbb
mov
push
pushf
mov
ja
mov
pop
iret
push
inc
pop
and
test
fisttpll
stos
imul
jns
pop
mov
pop
mov
test
mov
push
test
call
add
sub
xor
mov
inc
pusha
or
pop
dec
jns
pop
inc
jmp
mov
inc
jp
sbb
pop
testl
daa
push
xor
stc
push
ja
mov
pop
insl
stos
stos
sbb
cwtl
insl
pop
push
in
push
out
and
xchg
inc
loop
push
mov
fcoms
pop
or
jp
sarl
pop
shlb
ret
xchg
test
xchg
adc
push
fnop
cmpsl
fdivr
mov
into
mov
mov
outsl
loopne
jo
rol
jecxz
scas
push
or
out
test
xor
add
xchg
mov
mov
enter
inc
ficoml
adc
frstor
insl
idiv
inc
adc
push
mov
cli
jecxz
adc
inc
dec
sbb
int3
adc
in
xor
mov
jns
rorb
mov
js
addl
ja
mov
stc
xchg
jno
lahf
in
mov
and
fwait
enter
enter
push
sbb
imul
popa
and
daa
adc
inc
imul
inc
add
push
clc
and
sbb
push
add
jb
xor
adc
pop
mov
fsubl
insl
sbb
push
mov
push
pop
outsl
mov
stc
pop
pop
sti
jmp
mull
adc
ficomps
rclb
push
test
fstpl
xchg
inc
in
ss
inc
or
loopne
fsts
cmc
roll
sub
jecxz
push
aam
ret
pop
mov
fcoml
js
mov
ret
sbb
mov
xchg
pop
sub
aam
int3
lea
cs
in
ss
push
mov
call
push
daa
packssdw
movsb
loope
pop
sub
push
cld
add
pushf
and
in
add
push
mov
loop
xchg
cld
loope
cwtl
cld
les
pusha
test
scas
inc
push
adc
add
push
hlt
xchg
inc
cld
xor
adc
jl
insb
shll
fnsave
sarb
sbb
push
dec
int3
aaa
ljmp
mov
daa
inc
jl
mov
add
popf
fstpl
dec
add
fsubl
sbb
ds
out
or
adc
xchg
xor
mov
mov
out
inc
cmp
into
lock
mov
jmp
loop
xor
jne
adc
jg
stos
scas
sbb
hlt
call
sub
sti
and
lock
dec
loope
loopne
dec
pop
lods
aam
cmp
adcl
negl
jns
test
pop
add
push
adc
gs
ret
scas
xchg
or
cmp
daa
push
mov
out
sti
pop
scas
mov
lret
add
sbbl
aas
sbbb
add
rcr
iret
sub
rclb
mov
push
daa
add
mov
add
xchg
jnp
inc
aaa
sti
jae
int3
sbbl
lcall
insl
push
repz
stos
mov
mov
and
sub
aad
mov
pop
mov
xchg
cmp
pop
push
push
outsl
add
mov
cs
adc
push
ss
jne
xlat
push
jle
sub
push
add
sub
inc
outsb
roll
mov
mov
in
push
loope
leave
les
push
and
cld
pop
mov
jmp
fwait
popa
pushf
or
je
push
scas
popf
xlat
fimull
or
sbb
ds
mov
out
outsl
imul
xor
loop
push
scas
stc
rclb
test
dec
fsts
enter
shrb
mov
icebp
ss
in
add
adc
hlt
xchg
add
inc
and
jmp
mov
leave
inc
jg
mov
cmp
repnz
faddl
xchg
data16
add
stc
lcall
adc
fisubs
or
jmp
imul
rcl
xor
mov
sti
mov
mov
test
mov
xor
lcall
add
add
or
or
dec
adc
stos
scas
orl
cmp
gs
aam
add
mov
cmp
repz
nop
pop
shrl
jno
mov
in
test
pop
jns
bound
sub
loope
push
iret
call
push
xchg
push
inc
rcrb
out
ret
cmpsb
fisttps
mov
inc
dec
gs
outsl
or
mov
push
jp
add
dec
xchg
aam
mov
xchg
jo
cmp
das
pop
data16
fdivs
mov
inc
insl
jo
cltd
dec
js
pop
popf
jne
push
push
mov
jp
jg
xor
fdiv
add
add
mov
inc
ficompl
lods
mov
into
push
popf
rolb
jbe
aam
dec
clc
push
dec
lahf
stos
nop
jl
push
mov
ljmp
les
test
and
repnz
xor
rclb
cmpl
pusha
rcrb
jnp
adc
int
mov
inc
inc
mov
rcl
andb
or
jl
popa
cmpsb
jge
insb
mov
dec
push
push
cld
push
pop
out
xchg
subl
inc
xor
aam
inc
mov
and
lock
out
sub
insb
inc
out
dec
mov
scas
fildl
lods
dec
incb
and
adc
jmp
leave
adc
fisubl
push
pop
sbb
cmp
out
movsl
jne
xchg
bound
out
jl
push
jl
mov
mov
lea
imul
lcall
test
cmp
ret
movsl
fisubrs
cmp
xor
mov
repz
daa
dec
sub
pop
cmp
addr16
stos
fs
inc
jns
mov
aam
sbb
xor
mov
dec
enter
adc
inc
and
mov
shll
mov
aas
sti
pop
mov
and
and
add
sub
xchg
push
testl
jnp
pop
cmpl
mov
enter
outsb
sbb
mov
daa
mov
mov
xchg
inc
mov
and
inc
sub
repnz
sbb
ljmp
es
inc
pop
lds
push
stos
mov
fnstenv
push
mov
mov
outsb
pop
ror
xchg
pop
fadds
daa
sub
jb
fisubrl
in
imul
movsl
daa
jo
lock
xchg
dec
pop
dec
fnstsw
daa
mov
popa
in
adc
je
jnp
xchg
xor
xchg
ss
push
bt
ficomps
and
xchg
cmp
popf
gs
mov
pop
jnp
cltd
xlat
cmp
add
call
or
shlb
add
mov
sbb
xchg
scas
rcrl
sbb
mov
adc
fiadds
mov
outsl
push
cmpsl
repz
mov
inc
mov
pop
sub
dec
mov
ficoml
jbe
dec
inc
push
jg
or
dec
leave
add
inc
sbb
jne
mov
push
jae
loopne
fsub
push
ret
aas
sbb
mov
lret
outsb
movsl
inc
lret
dec
pop
sub
cwtl
fdivs
incb
hlt
sbb
in
insl
push
mov
jae
into
dec
and
mov
loopne
int3
jb
icebp
push
cmc
jne
in
and
jnp
cli
out
jb
call
lcall
pop
fistpll
lods
jo
mov
hlt
jo
out
je
das
pop
push
and
pop
loopne
jmp
lret
rorb
push
fcomip
imul
in
aad
lea
gs
cli
sub
push
push
push
jl
nop
mov
mov
andb
jmp
mov
pop
frstor
pop
or
sbb
xor
andl
and
lret
lcall
test
and
lods
ds
jne
mov
cmp
test
inc
int3
xchg
adc
sti
and
in
jbe
cmp
mov
add
fs
pop
push
cmpsb
adc
insl
sub
jno
adc
xor
sahf
test
insl
cwtl
repnz
movsl
sarl
es
sub
add
cli
push
pusha
dec
xor
int3
ficompl
pushf
inc
je
aam
mov
fsubr
cwtl
mov
mov
test
mov
cmc
iret
sub
cltd
imul
mov
pop
jmp
loopne
mov
pop
cwtl
fcmovne
and
adc
mov
iret
cltd
insl
jbe
fsubs
test
xor
les
insb
push
mov
nop
sbb
pop
pop
cmp
shll
xchg
jg
dec
loop
das
lea
shlb
mov
sbb
insb
into
inc
mov
out
popa
or
popa
jb
mov
int3
inc
dec
push
repz
mov
sub
stos
imul
test
cmpsl
mov
cs
ss
stc
mov
cmpsl
in
shrl
loope
adc
xor
popf
aam
shlb
xor
mov
mov
mov
adc
mov
addr16
movsl
sub
test
mov
hlt
ret
nop
mov
and
mov
daa
push
cs
mov
loop
and
rol
lahf
fists
rorb
dec
out
push
and
cmp
fwait
pop
sbb
hlt
and
test
cld
loopne
adc
cs
xor
jg
cmp
fadds
push
mov
mov
daa
into
dec
std
dec
jge
xchg
mov
pushf
pop
mov
dec
add
insl
out
imul
ss
aad
sbbb
loopne
jno
out
cmp
xchg
test
cmp
add
jmp
rorb
pop
sub
add
addr16
fldcw
jecxz
int3
clc
dec
mov
lahf
mov
roll
cmpsl
cltd
stos
add
sbb
lods
push
sub
mov
dec
push
cltd
push
jge
mov
mov
pop
cli
imul
mov
inc
mov
mov
pop
lret
test
jb
mov
inc
xor
cs
or
in
mov
movsb
push
mov
mov
scas
xor
sbb
leave
fsubr
mov
pusha
mov
je
mov
les
mov
pop
or
sub
xor
mov
subb
add
or
outsb
push
daa
divl
jp
jecxz
or
push
pop
popa
addb
push
pop
push
test
sub
or
aaa
mov
xchg
nop
inc
xchg
inc
cmp
gs
cli
xchg
jl
mov
mov
adc
mov
add
adc
jge
les
mov
pop
and
fwait
nop
iret
aam
negb
shll
inc
push
les
ja
xor
out
faddl
xchg
jge
repz
testb
or
mov
ret
aam
inc
push
adc
and
dec
or
mov
push
xchg
mov
loopne
and
or
pop
add
lahf
lods
mull
xchg
inc
divb
cmp
inc
mov
in
clc
add
cmp
inc
cmp
push
or
mov
add
in
mul
sub
inc
mov
dec
fs
sbb
jne
popa
mov
lock
inc
or
dec
inc
test
pop
mov
imul
add
outsl
mov
fdivs
aas
mov
in
pop
sbb
popl
aas
lahf
add
int
jecxz
ret
pop
fiadds
outsb
inc
jns
xchg
mov
cmp
movsl
jns
aad
adc
sub
cmc
mov
add
mov
outsb
in
push
movl
daa
inc
mov
cwtl
loopne
je
mov
xchg
out
jne
inc
adc
mov
outsb
push
mov
stos
dec
cmpl
xchg
xchg
mov
lods
pop
mov
or
lret
push
sbb
in
fistpl
xchg
mov
out
loopne
mov
push
mov
int3
lret
ret
iret
daa
cmp
ss
mov
ret
or
cld
mov
pop
cli
mov
jbe
arpl
fcomps
loope
out
mov
in
and
xor
push
sbb
cltd
rorl
push
or
push
jecxz
adc
mov
fistpll
bound
je
enter
sahf
cwtl
sbb
add
inc
and
inc
adc
and
mov
add
xchg
je
jns
sbb
cltd
rcr
insl
pop
and
aaa
mov
or
mov
sbb
mov
xor
mov
je
xor
push
xor
and
mov
mov
movsl
push
and
or
mov
movsl
ret
add
lcall
push
push
movsb
lret
mov
add
pop
cmp
inc
or
xchg
add
push
fsubr
jo
loopne
flds
out
cli
test
ficomps
call
or
in
jle
push
jp
aaa
imul
loop
aas
cmp
ja
cli
xor
faddp
sbb
in
dec
subl
inc
incl
sub
shl
pop
fwait
or
mov
adc
in
mov
mov
hlt
jmp
lea
into
clc
jb
push
jnp
out
xchg
iret
in
fmuls
lahf
mov
inc
sbb
js
xchg
decl
inc
lods
xchg
xchg
stc
mov
popa
popf
mov
cmpsl
jne
pop
cld
pop
call
cld
pop
int
lcall
popa
adcl
jae
ficoms
mov
movsb
jnp
xor
lret
inc
adcb
add
lods
sysret
notl
jnp
sti
inc
push
ss
rcl
jno
mov
mov
aas
add
sub
outsl
out
xor
push
mov
test
in
push
jne
or
js
cli
outsb
fs
pushf
or
icebp
xor
or
push
je
shr
insb
jl
jle
imull
call
cmpsl
inc
cmp
sbb
loope
mov
mov
aam
call
scas
loope
lods
push
add
cmpsl
add
xlat
out
mov
int
jno
pop
testb
addr16
mov
pop
xor
xlat
jp
xlat
and
sahf
notl
or
notl
xchg
sub
insl
push
lods
adc
movsl
stos
xor
stc
mov
pop
add
or
out
cmc
scas
sbb
scas
push
clc
fcmovnb
mov
fiadds
js
sbb
xchg
dec
mov
stos
and
inc
jns
push
fdivrs
sub
shrb
mov
addr16
out
and
sbbb
mov
push
sub
jge
loopne
testb
xor
mov
popa
sbb
mov
lret
jbe
popa
push
jle
in
les
push
add
xchg
rclb
mov
sbb
lret
shlb
pop
push
iret
xchg
insb
jo
push
insb
lods
test
xchg
or
mov
insb
add
fiadds
rorb
xor
dec
test
mov
xchg
jg
cmp
push
cli
xchg
out
ret
test
cs
and
push
insb
dec
mov
and
loop
mov
data16
pop
mov
lahf
push
xor
aas
fwait
push
and
add
sahf
dec
ss
sub
imulb
xor
dec
dec
push
mov
jp
fistpll
dec
adc
mov
popf
test
mov
or
fwait
in
aad
mov
inc
pop
sub
pop
movl
rorb
aad
mov
out
sbb
shr
xchg
xchg
cmp
and
jp
push
jmp
dec
and
push
pop
xor
sarl
negb
sub
mov
ret
sbb
shr
jmp
sub
dec
pop
xchg
imul
or
or
insl
ss
fmuls
fistpl
push
sbb
mov
movsl
xor
cwtl
shll
pop
xor
or
scas
rolb
push
hlt
into
aam
mov
imulb
cli
jb
xlat
add
or
adc
mov
call
fs
mulb
out
cmpsb
addr16
pop
les
jb
int
stc
jb
push
mov
and
insl
mov
and
mov
nop
pop
adc
mov
popf
mov
cli
pop
in
adcb
cwtl
push
fadds
shrb
dec
jge
pop
in
dec
xchg
test
outsb
dec
xchg
sbb
mov
sbb
push
push
xor
jle
xchg
sbb
mov
or
pop
sub
lret
dec
pusha
popa
and
sub
andb
call
lret
aam
les
iret
add
mov
fisubl
fwait
fs
adc
xor
out
jl
incl
mov
or
insl
pop
xor
cli
arpl
inc
pop
stos
sahf
jg
add
inc
cmp
int
cld
movsl
ret
sbb
int3
inc
mov
jmp
xchg
xor
call
ret
imul
out
hlt
mov
inc
in
lock
mov
sbb
sbb
inc
fstps
aad
pusha
pop
popf
idivl
popa
int
std
add
ret
ja
rclb
mov
stc
cmp
outsl
inc
push
lods
or
xrelease
das
mov
jge
cmp
and
loop
jo
es
and
lods
and
push
hlt
mov
out
loopne
jl
pushw
shrl
insl
add
mov
daa
pop
lock
inc
jns
les
or
mov
repz
mov
cmp
sub
xor
xchg
pusha
xor
scas
push
and
loope
cmp
xchg
adc
mov
push
out
test
fstps
out
es
adc
mov
or
scas
js
jno
jp
push
add
iret
out
mov
cmpsl
mov
jno
sub
cmp
jae
mov
or
cmp
adc
adc
pshufw
pop
xchg
rcll
pop
in
sub
xchg
call
fnstenv
mov
in
sub
outsb
pop
or
icebp
push
sub
dec
mov
aam
stos
sub
in
test
movsl
in
ret
sub
cli
jecxz
cwtl
cmc
jns
pop
pop
cmpsl
shl
sub
icebp
and
pop
mov
or
xor
cwtl
sub
imul
fmuls
in
sub
nop
mov
xchg
jb
or
sbb
fmuls
ret
xor
outsb
or
add
ror
sub
adc
jno
add
add
stos
jmp
jns
cmp
cltd
dec
and
hlt
test
xchg
sar
dec
lahf
mov
stc
push
lods
ret
xor
sbb
stos
sbb
icebp
fcoml
cli
lcall
mov
lds
dec
sbb
test
push
lcall
mov
and
andb
pop
int
xchg
mov
dec
into
push
or
lock
lods
inc
dec
insb
scas
idivb
mov
mov
or
push
ss
sub
lods
push
xchg
adc
les
or
xchg
inc
nop
xchg
cmp
cs
sti
jp
pop
and
shll
les
pop
xor
push
loope
sub
pop
or
ret
insb
xchg
fs
inc
int
add
push
es
cmp
mov
adc
adc
lcall
mov
subl
adc
ret
inc
gs
outsl
push
inc
mov
pop
ret
imul
ret
repz
fldenv
push
sti
rcl
cmpsl
outsb
jns
xchg
sub
cmp
fildll
rclb
iret
mov
js
sub
in
mov
ror
test
pop
push
push
xchg
imul
loop
add
rcll
dec
int3
orb
fldenv
dec
and
pop
sahf
and
out
cwtl
pop
imul
jno
jnp
popf
and
and
cmp
ja
bswap
js
xchg
outsb
mov
jl
add
add
mov
cli
ret
or
in
jmp
fucomip
push
jle
push
outsl
sbb
push
push
and
add
outsb
xchg
shlb
add
add
pop
cmpsl
xchg
mov
xchg
fs
mov
push
loopne
je
jge
sub
mov
scas
subb
push
enter
sub
adc
and
ja
call
push
scas
out
adc
and
sub
dec
inc
inc
xchg
inc
lret
je
mov
dec
addr16
call
sbb
fisubrl
add
shr
jecxz
stc
and
adc
and
clc
add
out
imul
divl
pop
aaa
rcl
aam
imul
mov
cmp
adc
jno
popf
mov
push
lea
dec
lahf
out
loop
xor
lcall
sbb
lret
sbb
call
int3
incl
bnd
mov
test
jbe
clc
sbb
ss
mov
lea
test
mov
dec
sub
mov
xacquire
jbe
pop
or
test
test
adc
pop
out
fstps
int
inc
popa
fs
mov
call
stos
pop
mov
jg
push
or
sarl
ret
xchg
sbb
shll
iret
jle
cmp
addl
js
and
dec
pop
in
outsb
jb
and
mov
scas
enter
or
movsb
mov
stc
fistpll
add
cmp
jb
enter
invd
ror
loope
iret
jecxz
adc
std
das
push
fildll
mov
push
mov
sbb
jp
std
and
add
mov
jne
popa
mov
mov
cmp
js
dec
mov
ror
jbe
in
mov
pop
arpl
cli
fldenv
in
repz
dec
sbb
or
or
cwtl
popa
or
loop
xor
fstpt
cmpsb
fs
ret
test
xor
les
push
dec
aas
sub
jl
out
inc
stos
xchg
dec
pop
jecxz
outsl
pop
xlat
lods
aam
into
inc
test
mov
and
mov
push
cmp
mov
loope
faddl
mov
xor
cmc
ja
aam
call
xlat
daa
xchg
cli
xor
mov
sub
clc
sub
jno
bound
mov
stc
adc
xchg
push
xchg
data16
sbb
or
nop
jl
aad
rorb
adc
cmpl
lods
jg
iret
pop
ja
cmpsl
sbb
aaa
movsl
repnz
push
cmp
inc
insl
cld
and
shlb
in
stos
fwait
push
inc
push
shll
ja
je
pushl
push
bnd
mov
out
and
xchg
jmp
sub
pusha
sbbb
sbb
test
jae
mov
leave
repnz
jo
mov
ret
jno
jo
test
push
scas
mov
cmp
roll
mov
xor
inc
sti
mov
adc
cmp
ja
pmaxub
inc
bound
shll
sub
cmc
pop
pop
mov
shll
fcmovb
mov
jnp
ret
popf
sub
lea
fsubl
inc
inc
pop
in
mov
cmp
das
or
push
add
dec
repnz
or
loope
fistps
push
xor
or
out
xlat
mov
jge
call
out
les
scas
das
sbb
adc
jns
arpl
aas
xchg
roll
je
cmp
shl
jb
jno
aaa
sbb
dec
jecxz
inc
out
push
sbb
push
pop
push
fildl
js
jne
pusha
sbb
push
shl
les
in
and
jp
lods
adc
push
fistpl
mov
push
test
mov
jge
mov
out
pop
push
add
xchg
push
pop
addr16
jo
int3
in
int3
incb
add
movsl
pop
mov
dec
cs
loopne
xor
insl
or
stos
mov
pop
sbb
jmp
in
lcall
mov
or
icebp
rol
pop
loopne
aaa
iret
fsts
dec
jae
ret
mov
xchg
jbe
mov
jmp
insl
mov
insb
push
mov
add
jno
and
xor
sbb
gs
imul
push
xchg
lods
loope
pop
movsl
adc
repnz
cmp
sbb
in
ljmp
or
cld
lret
push
hlt
nop
cmovbe
cwtl
loopne
pop
cmp
pop
fstpl
xchg
sbb
stos
mov
xchg
repz
lret
fwait
aaa
mov
enter
or
xorl
fidivs
arpl
out
jecxz
cmp
aad
push
ret
stc
imul
or
xor
ret
xorl
pusha
out
xorl
pop
dec
mov
sub
pop
je
sbb
cmpsb
out
or
iret
push
or
or
and
jae
xor
outsb
outsb
mov
push
rorb
out
push
mov
fstps
push
pop
mov
cmpsl
cmp
or
andb
ret
dec
sbb
xor
sarb
insb
lahf
xchg
dec
leave
movsl
push
je
int3
or
push
push
dec
push
xchg
push
xchg
pop
movq
push
adc
test
gs
push
mov
inc
pop
repz
ds
mov
mov
adc
mov
ja
cmp
fisubrl
js
daa
bsr
mov
std
mov
sub
test
mov
dec
pop
dec
mov
fdiv
xchg
aas
push
mov
and
push
mov
and
cwtl
mov
in
jb
cmp
push
pop
fucomi
xchg
adc
leave
jbe
xchg
lea
std
in
stc
jge
repz
sbbl
aas
mov
call
jge
mov
movsb
cli
mov
roll
aaa
dec
pop
mov
test
lret
fsubl
scas
mov
inc
iret
loop
stos
in
adc
outsb
mov
call
lds
in
pop
fsubs
xor
enter
fsubrl
or
shl
rclb
mov
dec
mov
adc
test
xchg
and
lock
add
cmpsb
mov
movb
adc
cmp
imul
xor
outsl
addr16
jb
hlt
add
fcmove
mov
cvtdq2ps
mov
lods
js
mov
inc
add
pop
cmp
fs
mov
imul
shlb
aad
dec
xor
je
das
out
adc
aam
ljmp
push
jg
rcll
cmp
arpl
movsb
rcll
push
cmc
jo
and
lcall
out
xchg
cmpsl
shll
xor
adc
lock
add
and
jecxz
push
xchg
int3
sahf
sub
pop
shrl
xchg
adc
inc
arpl
rorb
push
jmp
and
sti
and
in
mov
in
xchg
lock
jle
int
pop
jb
jge
mov
mov
pop
addr16
mov
add
inc
and
fwait
mov
and
movsb
fs
jnp
cmp
push
bound
mov
cmpsb
mov
adc
sub
aas
push
jns
sub
sub
push
cli
add
pop
cwtl
std
ss
das
bound
repz
push
add
xchg
cmpsb
cmp
mov
hlt
inc
mov
adc
or
inc
cmp
push
std
arpl
sub
inc
jb
hlt
test
fsubl
mov
popf
jb
test
lea
test
sbb
pop
test
fisubl
add
test
test
ss
push
mov
mov
test
rclb
sbb
and
orl
pop
into
popa
cwtl
xor
cmp
imul
fisubs
test
push
inc
lea
mov
sbb
jne
clc
dec
ja
insl
sbb
xchg
sbb
into
sbb
mov
push
and
jbe
or
sti
pop
sbb
push
frstor
cmp
jle
mov
push
iret
bound
push
int3
insl
fwait
adc
dec
in
add
mov
jl
nop
or
pop
jb
and
inc
aad
stos
adc
mov
lahf
xchg
mov
add
sub
pop
call
mov
inc
inc
sbb
ds
idivb
xchg
arpl
repz
cli
and
clc
add
fnsave
mov
test
push
adc
lods
in
clc
in
xor
scas
outsb
adc
sub
daa
int
xor
nop
into
add
jmp
flds
jae
loop
test
sbb
xchg
roll
pop
cld
psraw
inc
aam
dec
jle
je
add
xchg
loop
pop
mov
fistps
jnp
dec
jp
lret
push
fprem
and
and
or
lret
cmp
js
aaa
dec
ret
pop
dec
insl
xorl
out
in
mov
mov
mov
in
mull
add
jb
add
cmpsl
add
stos
lds
pop
sbb
ficoms
fs
cmp
pop
pop
lds
leave
or
xchg
jge
pop
inc
sub
flds
lcall
mov
inc
fmull
dec
scas
sahf
dec
js,pt
inc
push
outsb
or
mov
xor
jle
std
sahf
call
mov
pop
push
loope
pushf
ret
jnp
or
add
add
xor
pop
cmp
subb
imul
orb
jno
es
sub
jl
aaa
in
fldcw
sub
push
arpl
aam
and
dec
outsl
rclb
mov
xchg
xor
lret
popl
pop
jo
loopne
lock
and
pop
push
jl
popa
push
test
pusha
sarb
push
push
push
in
arpl
sbb
repnz
cmp
loopne
add
or
rcrl
in
xchg
aas
mov
das
out
imul
xchg
adc
sarl
fs
movl
mov
or
xor
lods
pushf
mov
sbbl
clc
mov
adc
jne
fistpl
inc
jbe
inc
je
xchg
divb
icebp
scas
push
cld
addl
and
scas
add
popf
mov
mov
lods
jge
testl
sub
xor
or
push
cmp
adc
and
fmull
in
sub
pop
ffree
fnstsw
xchg
lcall
sbb
mov
test
jg
movsb
fcmovnu
cmpsl
mov
jl
pop
pop
aam
insl
jl
setbe
in
jb
lret
scas
movsl
int
mov
cmp
lcall
pop
fwait
push
test
mov
inc
out
decl
xchg
aas
adc
out
fimull
inc
iret
push
test
pop
popf
mov
cmp
sub
xor
mov
pop
xor
adc
adc
dec
push
in
dec
sti
push
aam
lock
inc
mov
cmc
sti
inc
push
sbb
mov
jmp
cld
rcll
inc
ror
or
and
sarb
decb
mov
nop
xor
or
cmc
dec
aaa
aad
loopne
mov
add
add
cmpsb
inc
push
mov
cmpsb
xchg
dec
mov
xor
std
sti
and
test
out
adc
and
sub
shlb
inc
push
sbb
adc
int
into
xchg
dec
push
mov
sub
sbb
pop
sub
sbb
clc
adc
inc
push
cmp
hlt
adc
movsb
adc
jl
xchg
mov
repz
jl
es
js
clc
add
inc
lahf
jge
je
cmc
or
aam
mov
sbb
nop
outsl
and
or
mov
test
mov
stc
fildll
fcoms
in
pushf
loop
inc
inc
fdivs
mov
into
xor
jo
leave
ja
aam
push
jecxz
mov
push
add
stc
xchg
sbb
mov
xchg
mov
shl
add
xor
out
mov
and
and
imul
enter
jl
cltd
js
and
pop
mov
sub
test
bound
pop
aas
xchg
xor
mov
lret
adc
stc
mov
push
sub
and
push
js
notl
out
jg
or
push
mov
jmp
mov
imul
movsb
mov
sbb
inc
lret
dec
and
mov
icebp
dec
sbb
mov
std
pop
jecxz
in
cmp
xchg
sbb
mov
xor
mov
inc
mov
fidivrl
and
and
pop
mov
or
nop
add
dec
aad
or
imul
fnstcw
enter
hlt
pop
xchg
add
pop
xor
cmpsb
dec
pop
imul
adc
jle
jnp
cli
mov
adc
sti
test
push
test
xchg
pop
xorl
fiadds
out
lahf
mov
mov
xchg
xchg
adc
pop
mov
mov
or
mov
outsb
inc
cltd
inc
mov
cli
adc
stos
enter
out
fdivrs
push
lea
sbb
outsl
lcall
or
out
in
shrl
pop
sub
dec
fwait
or
out
sahf
mov
push
cmp
dec
sub
les
mov
in
mov
adc
jnp
mov
jmp
inc
push
imul
imul
adc
mov
add
popf
jnp
inc
sar
add
and
jb
jl
sti
mov
mov
xchg
or
loopne
fnstenv
pop
mov
dec
xchg
lret
adc
cmp
fsubs
mov
sbb
bound
rcrl
mov
push
and
mov
push
repz
movsl
gs
cltd
in
dec
lahf
aaa
rcrl
stos
adc
jecxz
jno
mov
js
mov
cwtl
mov
sbbl
lods
insb
pop
mov
scas
mov
xchg
add
negl
or
je
notl
mov
sbb
imul
in
subb
adcb
inc
adc
insb
mov
popa
mov
inc
jg
mov
outsl
push
into
lods
add
lods
lret
daa
xchg
out
pop
loop
or
adc
cli
mov
jnp
mov
push
push
fwait
int3
test
xchg
in
add
mov
push
insb
xlat
pop
xchg
repz
shl
dec
sbb
mov
sub
push
shlb
jno
outsb
stos
pop
cmpsl
aas
mov
xor
in
divl
enter
outsl
popa
ds
dec
cmp
inc
cmpsb
lcall
xchg
out
xorl
std
cmp
lahf
jbe
mov
loope
sub
sbb
ficomps
repnz
mov
cmp
mov
xchg
aam
mov
xchg
mov
xor
push
in
incb
or
test
sbb
insb
lods
adc
cmpsb
sbb
cmpsb
pop
popa
mul
mov
popf
mov
fisttpll
fs
sub
cmp
push
push
sbb
jb
negb
imul
inc
push
pop
bound
mov
cld
clc
negl
arpl
fucomi
pushf
push
mov
mov
xor
xor
push
fimuls
test
xor
test
adc
xor
or
xchg
adc
adc
pop
jl
add
jecxz
mov
xchg
pop
pop
cmpl
aas
sub
pusha
lds
cmp
mulb
ss
aam
dec
push
call
mov
leave
add
pop
sahf
test
movsl
xlat
fsubrl
sub
fisttpl
sub
loopne
inc
xchg
dec
mull
cmc
icebp
mov
call
lret
adc
xchg
push
push
jo
pop
push
or
xor
rorl
add
mov
mov
push
call
and
in
and
stc
jnp
cmp
out
mov
cmp
jns
sbb
inc
mov
enter
fsubrs
xor
ljmp
std
mov
mov
xorl
dec
mov
jge
add
stos
jbe
aas
sub
insl
pop
xor
cmpsb
mov
hlt
shll
jnp
dec
lock
lret
fistps
or
dec
jnp
bound
insl
fwait
pushf
and
and
stos
or
test
dec
inc
cmp
in
add
inc
push
cmp
ss
ds
clc
mov
lock
jmp
inc
loop
lds
orb
mov
mov
shrb
lahf
sub
xchg
fxch
sbb
pop
sti
out
cmp
loope,pt
sub
ja
pop
pop
notb
mov
arpl
jmp
lea
xchg
jl
cmp
sahf
push
fisubrl
dec
ljmp
stos
mov
inc
in
roll
sub
pop
fcomp
jg
int3
into
or
and
fnstsw
dec
and
stos
push
les
cmpsl
mov
xchg
jg
mov
adcb
mov
push
adc
je
js
call
mov
fldt
fnstsw
movsb
imul
sub
ja
movsb
arpl
pop
jb,pt
inc
shlb
mov
mov
add
fcoms
pop
push
pop
bound
sahf
inc
cmp
movsb
orl
repz
inc
ja
push
scas
add
dec
loopne
jnp
jo
inc
imul
mov
rorl
mov
cmpl
adc
mov
stos
xchg
repnz
out
mov
mov
insb
and
mov
roll
lods
xor
dec
push
imul
mov
movl
xlat
aas
lods
cmp
dec
jg
clc
cmp
add
jae
insb
cltd
xor
rcrl
mov
sbb
call
adc
mov
sbb
jb
xchg
cld
dec
imul
movsl
cmp
mov
bound
repz
mov
cmp
pop
shl
cmpsl
xor
adc
pushl
and
sti
push
pop
imul
dec
mov
sbb
cmpsl
pop
adc
aas
mov
cltd
lcall
lds
pop
cmpsl
xchg
cmpsb
loop
cmp
das
mov
daa
fwait
mov
in
jmp
push
lahf
negb
xorl
lock
out
dec
xchg
and
mov
or
std
insl
sbb
mov
pop
jmp
cmpsb
and
mov
repnz
jbe
jno
test
mov
xor
loop
sbb
fistpl
pop
mov
cmp
jbe
test
fsubrs
sub
adc
mov
sbb
jb
rcrl
test
rcrl
xchg
out
cltd
mov
ja
inc
ret
sti
in
mov
add
inc
or
ds
add
pop
movsb
mov
mov
in
mov
jle
or
xor
lds
mov
push
pop
fidivl
pop
sar
xor
fs
scas
jmp
insb
fucomip
dec
mov
enter
loop
pop
add
popf
scas
cli
adc
inc
pop
cmp
mov
jb
cmp
jecxz
ljmp
fsub
movsl
xchg
xor
xor
imul
inc
popf
adc
push
orl
jge
ss
and
pop
or
inc
inc
and
aam
pop
pop
decb
and
and
stos
cwtl
fprem
or
inc
dec
ret
mov
add
lods
mov
jge
pop
dec
rcll
imul
bound
add
jnp
test
mov
mov
jle
subl
gs
movsl
pop
xor
pop
pop
fisubs
aas
movsl
jo
or
cs
add
push
shll
es
filds
mov
and
insb
inc
push
js
je
xor
orb
decl
roll
les
lret
jge
or
and
repz
addb
sbb
mov
dec
mov
imul
mov
mov
fsubrl
add
sahf
imul
stc
cs
fisubrl
fs
loope
lcall
cmc
mov
mov
xchg
daa
and
push
fsubrs
ret
pop
js
gs
cmc
pop
inc
mov
scas
rcr
dec
mov
repnz
inc
sbb
fstpl
dec
popa
pop
out
push
lcall
ds
aas
add
jp
in
sbb
mov
ja
popf
pmullw
out
mov
inc
std
mov
mov
jne
sahf
cltd
cmc
and
je
ja
into
mov
pop
ret
mov
cwtl
jecxz
out
cmp
icebp
dec
adc
mov
xchg
std
dec
lret
sbb
mov
sub
cld
in
and
mov
test
les
fwait
call
pusha
movsb
cmp
or
mov
es
push
mov
mov
dec
fildll
and
lret
cli
int3
pop
leave
mov
mov
nopl
mov
lret
or
inc
mov
jl
test
loopne
stos
or
pushf
cmp
pop
enter
stc
mov
cli
pushf
cli
pop
movl
mov
push
cmpl
in
add
js
adc
and
xor
mov
stc
fwait
pop
or
pop
loope
call
js
dec
pop
push
test
insb
mov
mov
mov
loop
movl
push
push
and
outsb
mov
xchg
movsb
icebp
cltd
mov
repnz
dec
sub
or
push
mov
or
adc
in
add
mov
cld
mov
inc
das
or
xchg
and
cmc
mov
dec
pop
mov
fcmove
mov
mov
repz
rcll
mov
outsl
scas
push
mov
sti
or
cmpsl
lea
call
dec
inc
ret
shll
mov
arpl
adc
sub
xor
fimull
mov
cmp
or
data16
xor
lods
add
arpl
push
mov
test
mov
cmp
test
cmp
fs
les
ds
stc
jg
xor
daa
fmull
insb
sbb
fsubl
inc
cld
jno
inc
or
push
jnp
and
push
loop
outsl
jge
test
mov
mov
mov
or
dec
movb
xor
mov
and
lea
and
lret
xchg
mov
mov
jo
pusha
or
xor
leave
mov
mov
push
lock
sahf
add
out
and
andl
cmp
inc
scas
rcll
push
pop
outsb
lret
adc
jns
pusha
push
fdivrs
imul
jecxz
dec
subl
stos
mov
rclb
je
push
testb
mov
js
sbb
ja
mov
test
sub
cwtl
pusha
test
cli
out
inc
inc
cwtl
out
mov
add
insb
cli
cmpsb
subb
subl
data16
xchg
jbe
push
or
adc
imul
push
fildll
mov
jle
nopl
ja
outsb
mov
or
xchg
stos
notb
pop
inc
sbb
repnz
push
jg
cmp
rcrl
add
sti
sub
pushf
cmp
or
icebp
shlb
jo
hlt
inc
push
jne
cmp
repz
inc
jae
orb
insb
call
call
xlat
ss
jb
xor
xchg
movsb
dec
mov
jae
jle
mov
je
lods
add
jne
add
bound
je
shlb
push
loopne
test
mov
mov
push
call
mov
scas
addb
and
stos
ret
push
mov
lock
test
cmp
int
adc
test
cmp
and
xlat
sub
pop
sub
in
in
not
aam
push
or
ljmp
dec
push
xchg
iret
lahf
notl
dec
mov
mov
out
mov
mov
loopne
mov
push
or
mov
cmpsl
js
jb
or
stos
cmp
mov
xchg
mov
lret
mov
movlps
andl
push
ss
or
push
adc
and
jns
mov
xor
ds
cld
pop
ljmp
lret
xchg
into
mov
sbbl
pop
pop
sti
push
pop
pop
clc
pop
call
mov
xorl
inc
mov
xchg
adcl
sahf
fwait
mov
jle
jns
xor
sub
fidivrs
sbb
das
call
sub
sub
and
ljmp
data16
cli
mov
stos
adc
sti
sbb
cli
cmc
ret
sbb
dec
add
lds
dec
adc
inc
movsl
adc
xor
pop
ja
or
ss
testb
pop
hlt
jb
mov
hlt
test
dec
mov
ret
xchg
fdivrs
call
mov
imul
test
imul
add
pop
call
and
loop
jns
out
sub
aas
xchg
add
mov
pushf
mov
ror
sub
in
sbbb
or
push
jb
sub
push
in
test
scas
sti
xchg
ret
adc
movsb
cmc
push
sbb
cmp
jl
mov
mov
mov
pushf
call
mov
or
jg
adc
sub
dec
and
cld
sbb
and
imul
and
movsl
pop
mov
cmc
mov
adc
mov
pop
mov
jo
mov
pop
jge
xchg
and
ret
pop
ja
dec
dec
lret
in
es
dec
mov
mov
data16
icebp
fsubrs
mov
xchg
cmpl
mov
ret
pop
test
jmp
sub
popa
movsl
xchg
aas
or
scas
pop
push
fwait
sbb
mov
mov
push
les
in
or
lds
inc
add
or
cli
mov
std
xchg
mov
xor
ffree
pop
testl
outsb
pop
and
and
and
cmc
call
imul
mov
and
out
jno
jl
inc
cmc
outsl
adc
xor
dec
adc
xor
or
out
jae
fsubr
shlb
and
pop
out
xchg
lret
leave
mov
int
jg
mov
push
outsb
dec
push
int
dec
sub
fistpl
sub
fsubs
je
pop
mov
add
ljmp
xchg
mov
js
cwtl
mulb
shrl
sahf
xor
adc
cwtl
and
lds
sub
xchg
push
test
jnp
jae
jns
test
insl
pop
dec
lcall
ret
gs
test
out
push
andb
dec
mov
movsl
add
test
push
ljmp
shr
out
mov
movsl
scas
cmp
outsl
in
xchg
dec
lret
lods
push
or
shrl
pusha
push
loope
cmovg
mov
aad
fidivrs
or
loope
sub
jmp
mov
xchg
outsl
jge
and
rclb
adc
or
dec
jge
dec
push
jle
pop
pop
adc
mov
inc
xchg
cmc
ja
loop
sbb
push
fidivrs
cs
sub
clc
stos
push
jb
jp
xorl
call
add
loopne
sahf
mov
std
lods
outsl
in
repz
lods
lret
and
xor
popf
mov
movsl
mov
movl
jl
xor
out
push
fildl
mov
addr16
sarl
add
shrl
scas
popf
repnz
mov
testl
push
mov
data16
xchg
aaa
and
outsb
jle
fs
int3
in
adc
and
pop
mov
stos
push
add
loopne
mov
xchg
pop
mov
cmp
or
clc
movsl
dec
icebp
jecxz
add
jmp
test
push
sub
scas
int
dec
jmp
pop
loope
mov
xchg
in
in
lods
mov
inc
notb
in
cwtl
scas
divb
fiadds
mov
ror
xchg
adc
dec
icebp
pushf
sbb
push
fs
fsubrl
dec
in
lods
insb
push
mov
pop
inc
pop
mov
scas
inc
test
and
cmp
push
es
aas
pop
sub
call
mov
pop
dec
jne
stc
or
dec
dec
ret
and
jle
cs
and
arpl
pop
movsb
push
pop
push
xor
outsb
arpl
sbb
pop
nop
gs
xor
cmc
pop
ljmp
push
iret
mov
je
pop
icebp
and
mov
and
mov
inc
sahf
push
push
lahf
sti
sbb
jo
nop
movl
or
fcomi
and
add
loope
or
mov
mov
cli
mov
cmp
loope
cli
enter
xor
mov
push
lods
xlat
iret
aas
cmpsl
test
shlb
or
sub
rorb
sbb
add
inc
icebp
test
lret
inc
sub
iret
in
pushf
movsb
inc
pop
outsb
jge
fmuls
sbb
and
int3
cmc
movsb
push
movsb
ljmp
inc
cmp
jne
pop
cmpsl
pop
cmp
pop
pop
or
in
pop
push
outsb
xlat
xchg
sbb
les
fldcw
cmp
rclb
and
mov
scas
jecxz
mov
imul
lahf
cmc
in
aaa
jnp
xchg
aaa
andl
adc
es
push
ss
dec
pusha
mov
test
scas
cwtl
xor
sbb
insl
jns
fiadds
jnp
ljmp
push
fsub
ret
push
xorb
sbbb
xor
imul
outsl
cmp
fcmovnu
mov
rolb
jp
iret
mov
ret
fmull
or
sbb
cmc
pop
lods
jo
pop
out
push
sub
jae
pop
cmp
data16
or
ficompl
sahf
lds
cmp
jg
lds
cmpsl
rol
ss
sbb
and
pusha
inc
xor
mov
lods
scas
fs
into
jg
js
icebp
shrb
push
sub
xchg
incl
mov
aad
cmp
lds
in
call
lahf
mov
pop
insb
ret
aaa
fmull
add
inc
daa
xlat
cmp
cmc
lock
and
mov
mov
fimull
cld
enter
xchg
and
xor
popa
int3
pop
scas
mov
sbb
push
mov
jne
pop
mov
pop
in
ljmp
or
cld
mov
shl
lock
rcrl
stos
jnp
add
lds
inc
aas
enter
mov
mov
jecxz
jae
or
sub
inc
es
imul
and
repnz
into
fmull
inc
dec
pop
sub
xchg
pusha
pop
lcall
jno
sub
lds
jo
movl
mov
push
xor
jmp
aam
adc
jl
pop
push
mov
pop
cmp
adc
xchg
jo
js
xor
pop
mov
std
xchg
xor
push
dec
and
test
xchg
inc
push
fisubrl
fldcw
pop
pushf
mov
xor
adc
fs
outsl
jne
cmp
adc
insb
aas
mov
fwait
rolb
xchg
shr
push
push
cmp
inc
or
nop
loop
and
int3
pop
aad
push
mov
pop
sbb
xor
jne
gs
cmpsl
rcl
test
xchg
pop
rorb
push
sbb
stos
orl
pop
test
inc
iret
aaa
cmp
mov
loopne
mov
in
cmp
pop
imul
std
dec
cmpsb
inc
dec
sub
push
cmp
pop
push
dec
mov
dec
out
jns
adc
lret
ljmp
mov
add
jmp
aam
jne
imul
jno,pn
sti
jp
out
push
loop
dec
int
sbb
jb
test
dec
mov
nop
jae
fst
daa
sub
divl
test
addr16
gs
push
repz
daa
jnp
inc
enter
and
cmp
xor
pop
jno,pt
dec
lods
fdivp
dec
test
sarl
mov
cmc
mov
negl
ja
pop
repz
sahf
xchg
push
jb,pt
and
jg
and
push
in
aas
jb
mov
mov
popa
dec
sbb
mov
loopne
mov
jmp
mov
cmovs
insl
ss
sarb
inc
jo
jge
mov
mov
inc
clc
jp
dec
push
lahf
cmp
in
mov
loopne
icebp
xchg
iret
ljmp
ret
or
fcos
xchg
xchg
loope
mov
ror
test
das
dec
dec
in
test
dec
es
cmp
xchg
aam
sti
or
cmp
xchg
invd
scas
mov
scas
adc
rcl
or
popa
and
aaa
pop
nop
inc
xchg
xchg
hlt
inc
add
out
repz
inc
int
xchg
repz
int
fdivl
mov
push
sbb
xor
push
sbb
nop
push
cmp
mov
daa
in
xchg
dec
fcmove
adc
addr16
xor
test
decb
xchg
sahf
mov
stos
inc
adc
nop
idiv
cmp
repnz
or
adc
and
loope
mov
out
in
pushf
inc
cmp
scas
mov
daa
mov
xchg
mov
jno
cmp
lock
jno
jmp
popa
sbbb
dec
lahf
je
cmp
filds
je
inc
mov
sbb
xor
es
test
arpl
sub
lods
adc
push
shlb
mov
gs
jb
jecxz
push
ret
mov
adc
pop
test
push
pop
cwtl
pop
subl
and
mov
ss
push
push
add
and
dec
pop
idivl
cmc
add
push
or
in
pop
or
mov
ss
xor
data16
stc
sbb
testl
fs
push
out
imulb
hlt
lahf
test
inc
mov
hlt
pop
lea
rcr
push
xor
xchg
ret
xor
mov
push
xor
xchg
lcall
jns
jno
movsl
jg
xorl
addl
cltd
fxch
fs
add
inc
iret
push
jmp
and
pop
mov
push
sbb
sub
and
pop
out
aad
jg
xor
push
xor
xor
inc
add
mov
leave
pushl
jle
xor
push
xchg
push
xchg
jb
sub
or
xchg
push
dec
in
inc
nop
movsb
adc
sbb
stos
aas
aas
mov
pushf
mov
dec
add
loop
mov
bound
stc
insb
add
add
mov
cmp
sub
jp
out
arpl
xchg
mov
dec
push
lret
and
scas
inc
xchg
das
int3
mov
ror
mov
cmpsl
add
sbb
loope
inc
addl
xchg
stc
imul
sub
lea
ss
hlt
aad
stos
add
xor
push
sar
imul
pop
rorl
insb
gs
dec
jle
or
xchg
mov
gs
jge
mov
xchg
jg
xor
fdivr
dec
add
mov
shl
mov
xor
in
orl
imul
pop
dec
jmp
adc
adc
mov
or
jae
dec
popa
xor
in
ret
sbb
dec
add
xor
adc
hlt
mov
xchg
lret
dec
sub
mov
ret
es
or
or
pushf
and
loope
inc
jge
rcl
rcrb
or
mov
adc
mov
pushf
mov
push
push
or
push
daa
xchg
mov
sbb
lcall
inc
repnz
pop
fcoml
addr16
arpl
cmpsb
add
fnstsw
mov
popa
out
scas
fnstsw
les
cmp
scas
ljmp
orb
pop
call
filds
pusha
js
push
rcl
sbb
sti
jg
or
in
sarb
dec
movsb
jle
dec
aad
test
and
scas
lea
push
jge
add
in
mov
mov
aad
fwait
bound
inc
in
dec
push
cmp
js
push
push
int3
or
lock
push
aad
cwtl
out
cmp
test
mov
push
scas
xchg
clc
movsl
jnp
pop
lahf
imul
addb
adc
in
cmc
fcmovnbe
ja
cwtl
das
ret
xchg
les
xchg
jb
or
ficoms
xchg
sarl
aad
fwait
ljmp
test
data16
pop
xchg
int3
mov
fdivrl
mov
lds
fucomip
mov
fdivrp
stos
jae
pop
push
ret
insb
inc
dec
dec
decb
rolb
mov
cwtl
ret
xchg
cs
pop
jne
movntq
fstp
out
addl
mov
dec
and
push
mov
adc
sti
inc
sbb
and
xchg
enter
gs
sub
xchg
int
notl
xor
aam
sti
xor
cmc
adc
outsl
hlt
rcrb
test
inc
mov
inc
cmp
fwait
and
pop
shl
fidivrs
loope
mov
jl
cmp
mov
mov
jns
imul
and
loop
jmp
xchg
or
or
push
repz
or
push
cmpsl
adc
cld
outsb
mov
mov
js
test
fcomp
imul
dec
decl
outsl
mov
and
pop
mov
mov
popa
inc
out
or
mov
cmpsb
or
jb
sub
jne
xchg
iret
sbb
fistl
rclb
enter
int
push
mov
xchg
out
pop
and
fdivrp
bound
hlt
cmc
test
addr16
data16
add
sub
ficoms
adc
jmp
cmpsb
jle
dec
xchg
xor
lcall
xchg
mov
bound
pusha
rep
ja
and
flds
adc
mov
es
push
mov
and
pop
jo
adc
jae
dec
add
jo
jae
xchg
adc
sahf
sub
xchg
add
jmp
repz
test
ljmp
stc
xor
jns
xchg
dec
test
js
push
popa
in
xor
in
syscall
cmpb
mov
inc
enter
lea
cmp
and
sbb
inc
or
movsl
jmp
adc
push
dec
sbb
and
xchg
mov
add
mov
das
call
lock
in
imul
cltd
mov
cmp
mov
mov
ljmp
mov
mov
mov
fnstsw
insl
pop
mov
cmp
lea
btsl
jb
cli
pop
cltd
mov
push
pop
mov
push
aad
ficompl
jno
lret
lcall
cmp
and
adc
xlat
lods
xchg
jae
mov
gs
inc
into
and
mov
int3
jecxz
xor
cltd
rcrl
or
add
xchg
rorl
xchg
jmp
jp
das
add
pusha
das
mov
insl
xchg
out
daa
test
cmp
jns
xchg
aaa
or
imul
insl
js
ja
mov
scas
pop
fcompl
sbb
popa
aas
dec
imul
sbb
sbb
sbb
push
or
shr
jae
call
mov
out
inc
into
lock
or
adc
andb
pop
movsb
inc
pop
dec
xor
inc
stos
daa
mov
jmp
sub
shll
lods
adc
ljmp
xchg
lahf
add
push
and
out
jge
outsb
ret
pop
adc
stos
mov
push
mov
lret
adc
hlt
jo
jg
cmp
enter
push
in
or
test
jne
mov
mov
and
addb
inc
push
push
jb
adc
pusha
ss
mov
cmp
or
js
jb
rcrl
xchg
and
and
iret
test
icebp
shlb
inc
lret
pop
les
xlat
xor
jp
dec
into
push
lock
nop
jle
xor
jecxz
mov
mov
pop
shr
out
das
push
sbb
gs
inc
add
test
fwait
movsb
pushf
fiaddl
ss
pop
mov
insb
mov
fsubl
adc
cltd
add
sbb
lods
push
addr16
and
lret
outsb
push
add
bound
lods
xor
xchg
loope
repz
int3
and
jmp
insb
jne
hlt
lods
mov
scas
jbe
dec
insl
sub
mov
dec
addr16
imul
mov
in
cmp
pop
sbb
push
push
jno
imul
xchg
add
push
or
ud2
in
je
cs
cltd
clc
dec
cmp
jmp
mov
mov
xor
push
xor
and
cmp
popa
loope,pn
cs
push
xor
inc
loopne
mov
xor
sbbb
xchg
insb
push
mov
jbe
adc
dec
or
mov
mov
ja
stc
push
pop
jb
ds
scas
xchg
add
stos
repz
clc
sub
jne
push
xor
sbb
adc
adc
adc
fidivs
sbb
addr16
mov
stc
jl
add
aaa
sahf
jbe
clc
xchg
jo
cmp
push
xor
mov
pop
icebp
dec
pop
lds
dec
dec
movsb
push
hlt
jmp
jo
orl
sub
stos
xor
std
sbb
cmpsl
out
sbb
test
xchg
push
sub
inc
inc
sbb
mov
shrb
in
sbb
mov
xchg
sbb
sub
gs
sub
mov
mov
test
inc
cltd
jae
bnd
cmpsb
add
into
cmpsl
xor
faddl
xchg
aad
jo
je
not
and
lret
cwtl
push
jnp
sarl
mov
cmc
ret
cmpsb
add
add
xchg
and
push
shlb
sti
push
sbb
push
int3
dec
xchg
outsb
push
sub
incb
push
dec
jno
push
sub
sarl
cmp
call
push
int
or
mov
fs
jl
inc
fimuls
pusha
out
ja
jns
xchg
cwtl
mov
insl
daa
xlat
rorb
cltd
mov
cltd
mov
clc
mov
loopne
mov
jb
dec
clc
jle
push
push
jne
js
and
fwait
clc
mov
push
sbb
jl
inc
rol
pop
jno
cmpb
sbb
mov
movsb
fistpl
popf
inc
lahf
fdivrp
push
mov
push
dec
scas
sub
lcall
notb
push
cli
gs
into
and
xor
icebp
pop
mov
mov
jns
gs
mov
shl
mov
out
jno
scas
rcl
xchg
cmc
pop
jp
sub
mov
stos
or
pop
dec
addr16
push
test
xchg
imul
fists
nop
sbb
and
sub
jne
sar
out
cmp
repz
subb
push
in
cltd
dec
inc
push
mov
push
cmpl
movsb
push
iret
aad
es
jae
int
loope
sbb
rorw
into
sub
jnp
andb
xor
mov
xchg
mov
fcomps
cmp
jle
std
pop
cwtl
cwtl
enter
std
fcompl
fnstcw
test
test
sub
and
push
out
jle
mov
inc
push
ja
xor
and
mov
mov
push
fld
fdivl
inc
push
cmp
mov
xchg
rorb
mov
icebp
das
sbb
and
mov
arpl
sahf
push
cwtl
cmp
lahf
scas
cmpsb
aad
mov
incl
push
addr16
adc
xchg
dec
lds
outsl
outsb
sub
ficoms
pop
mov
xchg
out
dec
mov
addb
mov
cmp
push
dec
adc
loopne
or
gs
push
lret
inc
push
and
adc
sar
mov
inc
out
fisubrs
roll
or
ljmp
std
scas
inc
xchg
icebp
push
xor
cmp
and
jo
cmp
dec
lods
outsl
xchg
jg
fsts
pusha
jecxz
int
testb
jge
cmc
xor
jl
jbe
ljmp
mov
mov
int
cmp
push
mov
pop
nop
sub
movsl
add
fadd
fwait
mov
or
push
mov
popf
aas
add
jno
aas
test
aad
cwtl
pop
mov
aaa
push
insb
adc
dec
mov
shlb
faddl
push
fwait
adc
scas
mov
shrl
lds
push
xor
mov
fwait
popa
loopne
sub
neg
lret
or
sbb
sahf
stos
popf
jnp
pop
out
lret
inc
mov
dec
inc
popa
movsl
lret
aaa
push
scas
adc
outsl
fucomi
subps
daa
mov
mov
aaa
sub
cltd
dec
and
pop
pop
into
mov
subb
push
push
sbb
adc
jno
iret
or
in
jmp
xchg
fdivrs
fldl
jno
ficompl
scas
adc
movsl
scas
jb
mov
cld
gs
div
stc
pop
popl
pop
cld
xor
push
and
aas
add
cld
jmp
lea
xor
pop
dec
sbb
xlat
shrb
fsubrs
orl
mov
mulb
dec
hlt
outsl
lret
lcall
xor
rcrl
popf
mov
mov
add
cmpsl
mov
pop
into
mov
xchg
sub
jp
cmpsb
adc
ss
gs
addr16
mov
ret
push
or
push
test
in
dec
lea
sarb
jno
fadd
mov
nop
xor
mov
testl
out
and
loopne
out
fcoml
xchg
hlt
and
in
mov
ds
push
mov
fwait
pop
test
inc
lods
pusha
or
in
jle
adc
fcmovne
enter
out
fs
jg
das
add
inc
sahf
mov
push
shlb
mov
mov
in
jle
mov
sbb
adc
or
nop/reserved
pop
and
in
mov
adc
push
js
sbb
movsl
out
lahf
jno
call
or
movsb
and
sbb
pusha
dec
or
mov
mov
dec
cwtl
mov
mov
add
mov
insl
es
pop
push
std
pusha
hlt
addb
push
inc
lcall
es
add
cmp
in
ficomps
xlat
arpl
ja
and
in
aam
ljmp
cs
mov
sbb
cwtl
loop
xor
pop
ret
or
mov
lds
push
ret
jno
cmp
jl
in
loop
leave
add
sbb
insb
or
cmpl
enter
rcrb
rcl
pop
push
pop
stos
jae
repz
int
roll
dec
aam
aas
aad
cmpsl
sbb
out
jmp
loop
jns
lea
arpl
sub
xor
outsb
cmp
jne
rcll
psubq
stos
insl
sub
lahf
addr16
movl
shl
mov
adc
or
mov
xchg
cmp
fldenv
cmp
jmp
jp
sub
rorl
add
mov
lods
dec
sub
mov
inc
cs
flds
fstp
push
nop
jnp
and
dec
sub
xchg
jmp
mov
xor
subl
into
xor
mov
aas
test
cli
pop
int3
std
lds
out
leave
call
mov
addr16
sub
xor
ss
mov
out
repz
dec
jne
mov
rcl
aas
aaa
add
cmpsl
inc
popf
add
ss
mov
mov
and
repz
pop
ror
cmp
mov
xchg
push
sub
nop
lret
sbb
push
push
jle
or
or
sub
inc
or
and
jecxz
jge
or
inc
sahf
inc
pusha
push
dec
data16
add
mov
inc
ja
mov
ja
add
xchg
mov
jo
and
jbe
xchg
pop
lock
clc
jb
add
pushf
add
sub
dec
fadds
and
jns
add
and
add
adc
mov
mov
js
push
aam
xor
xchg
hlt
fnsave
fstps
xchg
cmp
mov
outsl
xorb
cltd
pop
js
mov
mov
sahf
in
cmp
leave
arpl
cmp
loope
fnsave
add
and
and
push
mov
test
stc
aaa
xchg
cmc
and
test
xor
les
lods
xchg
cmp
sbb
inc
pop
lods
std
lods
fsubrs
ja
and
xor
push
or
popa
dec
punpcklwd
negl
jl
movsl
sti
mov
mov
data16
lea
sbb
cmp
push
stos
sbb
xorb
pop
out
rcll
mov
loop
movsl
jge
adc
mov
jo
bound
out
insl
push
sbb
ret
fidivrl
jecxz
push
sbb
fldt
xchg
sub
dec
test
add
pusha
iret
js
test
jge
add
ds
aaa
out
jp
out
add
rcrl
ds
in
mov
aaa
add
es
xor
pop
addb
fisttps
mov
xchg
addr16
jmp
test
stos
xor
rol
add
scas
sub
test
stos
add
in
xlat
and
inc
or
jle
and
mov
ret
cwtl
aas
jle
sub
pop
inc
pop
mov
jbe
aaa
nop
adc
fwait
add
mov
adc
js
fs
adc
das
adc
xchg
aas
pop
push
pop
jbe
mov
rorl
scas
dec
pop
test
and
ja
fmul
lea
imul
xor
and
pusha
test
cmpl
sub
push
in
hlt
dec
adc
mov
in
es
movsl
loope
add
repz
adc
ds
push
lds
mov
lock
daa
cmpsl
testl
adc
mov
jmp
daa
loop
orb
ja
incb
mov
loop
mov
pop
xor
add
nop
fucomp
adc
bound
daa
stc
dec
in
enter
inc
fs
ret
push
je
imul
push
push
pop
orl
addl
out
cli
std
pop
iret
add
lcall
or
xor
into
cmc
fnstsw
loope
sbb
add
rcll
add
xchg
mov
cmp
movsl
das
sbb
push
lret
xchg
sub
and
mov
fcmovbe
fldt
mov
ss
cmc
popl
pop
and
addl
mov
in
movsl
and
sarb
sub
je
inc
lods
in
fnstsw
imul
lods
aad
xchg
push
shl
cltd
mov
mov
cmpsb
in
test
pop
test
jbe
jp
fbstp
repz
mov
adc
imul
bound
pushf
add
and
pop
aaa
xchg
push
out
dec
pop
mov
mov
in
pushf
hlt
lods
inc
aam
adc
and
push
dec
xchg
pushf
ret
add
arpl
cmp
daa
negl
divl
mov
leave
fnsave
test
ret
mov
lret
in
or
andl
jmp
arpl
test
lods
movsb
cmpsb
aaa
xchg
jp
and
cmpsl
cli
andb
leave
push
subb
add
lds
pop
and
and
clc
pop
cmpsl
sbb
outsb
xchg
mov
shrl
cmc
jge
xchg
mov
mov
inc
inc
and
push
push
push
jbe
out
test
repz
out
aaa
sub
dec
dec
add
negl
push
repnz
mov
fsubl
aas
aas
dec
js
or
roll
push
lea
lret
add
or
cmp
push
jo
neg
out
jb
inc
popf
ret
xlat
les
ret
xor
pop
das
rcrl
stos
sbb
popf
sahf
bound
pop
dec
les
inc
sbbb
xor
jl
dec
push
je
sbb
mov
mov
sbb
ret
mov
lcall
dec
add
cmp
inc
rcrb
xor
jmp
sbb
dec
sub
test
mov
daa
addr16
mov
cmp
cmovo
in
pop
js
cmp
jl
sbb
loopne
cmp
das
jge
mov
jg
gs
pop
mov
or
in
jge
dec
dec
pop
ja
and
mov
cld
test
add
cmp
push
inc
in
jmp
fbld
dec
mov
int
xchg
xorl
stos
adc
mov
pop
lea
int
sub
bound
test
js
pop
lret
fildl
ss
xor
orl
sub
adcl
pop
jecxz
and
mov
jbe
jmp
dec
jbe
subb
push
sub
adcl
pop
pop
call
pop
push
adcb
lea
xchg
jb
add
jge
cmp
lods
testb
push
adcb
gs
divl
mov
andb
int3
cmp
jne
rolb
add
mov
in
xor
mov
in
cmc
pusha
cmp
nop
mov
loop,pt
cmpl
cltd
sub
sub
or
jns
or
cli
xchg
nop
hlt
cmp
pop
or
jno
or
out
stos
out
int
push
inc
jne
ret
nop
test
sbb
pusha
hlt
loope
in
inc
sub
cmpsb
adc
fldt
mov
jp
pushf
add
mov
cmp
xor
jno
or
push
adcb
push
fnstsw
and
out
sbb
xorb
call
add
push
mov
in
pusha
lds
pop
xchg
cwtl
jo
inc
test
negl
fwait
mov
xchg
xchg
mov
jg
lret
out
xor
scas
dec
cmp
aas
stos
leave
int3
pop
jmp
mov
pop
and
insb
enter
sbb
insb
popf
enter
cli
in
pop
jne
int
rcll
daa
int3
sahf
inc
cmpsb
pop
cli
clc
push
inc
xor
enter
xor
pop
jl
add
pop
jp
test
xchg
jge
fs
push
jbe
fldenv
push
push
add
inc
xchg
sub
pop
stos
xor
push
ss
repz
mov
lcall
and
out
mov
iret
sbb
pop
sbbl
int3
push
addr16
inc
sub
pmulhuw
aas
je
loopne
cmp
outsb
xor
lret
jmp
cmp
scas
and
leave
testl
daa
addb
jg
fildll
xor
sub
les
es
fcmovb
jae
jb
imul
das
jne
push
mov
add
and
xor
add
loope
insl
dec
lods
jae
in
stos
subl
cwtl
lock
jg
popf
cmp
cmp
movsl
mov
adcl
pusha
and
outsb
popf
out
pop
or
arpl
js
xchg
inc
mov
jp
push
mov
cmp
sahf
push
les
push
adc
push
jae
dec
js,pt
and
stc
subb
xchg
adc
sarl
aas
xchg
xchg
std
inc
outsb
jg
sbb
mov
pop
in
jge
arpl
fs
out
pop
in
mov
data16
jbe
adc
cltd
mov
inc
mov
ja
mov
mov
repz
mov
mov
xor
dec
incl
xchg
fldt
xor
adc
mov
sti
imul
jge
inc
test
incb
jae
lods
leave
inc
fisttps
lahf
mov
movsl
cmp
lods
add
push
scas
iret
mov
repnz
lods
push
push
push
sbb
mov
inc
pusha
mov
inc
scas
and
cwtl
pop
adc
xor
cmp
jo
pop
and
dec
xor
cltd
inc
enter
add
xor
mov
out
pushf
push
adc
jns
pop
sahf
push
aaa
dec
negb
sbb
lock
xchg
cmpsb
cmp
cmp
jmp
pop
popa
jmp
stos
sbb
and
sub
pop
daa
cmp
pop
ss
pop
sbb
fdivrl
pop
jne
mov
xchg
arpl
mov
js
insb
fimuls
pushf
jb
shl
add
adc
mov
push
mov
imul
clc
out
lds
enter
imul
xchg
popa
jo
clc
aaa
cmpsl
fsubr
nop
mov
fs
cld
mov
sub
jnp
or
push
das
mov
data16
lcall
aas
fdivs
jg
pop
loop
mov
inc
addl
ljmp
sub
enter
push
ret
hlt
mov
sbbb
pop
lock
mov
subl
mov
les
push
push
out
mov
xchg
add
mov
loope
fsubr
xchg
cwtl
cmp
scas
je
fxch
fnstenv
rorb
sbb
test
in
rcll
bound
xchg
pop
loop
std
fdivl
jge
fidivrs
push
inc
sti
cmp
scas
add
cs
fistpll
enter
popf
cmpsl
jb
xor
fadd
pop
bound
dec
xor
enter
out
movsl
mov
aaa
and
sbb
push
xchg
ja
sbbl
sub
cmp
mov
repz
andl
push
mov
jnp
lds
shr
jle
push
shl
ja
lret
mov
push
pop
xor
aas
jae
in
iret
mov
inc
setbe
push
cmp
bound
mov
lahf
outsb
cmp
loope
ss
mov
mov
in
pusha
cli
leave
cmp
iret
mov
dec
mov
push
arpl
push
cltd
bound
or
inc
daa
pop
stos
mov
js
ds
jnp
inc
out
pop
and
imul
bound
cli
sub
mov
mov
insl
clc
xchg
fnstenv
mov
mov
int3
jno
jp
jg
mov
mov
in
adc
data16
ljmp
lret
xchg
inc
test
push
or
bnd
outsl
mov
push
cld
into
clc
into
jl
nopl
xchg
sub
add
mov
inc
outsb
je
sub
adc
xor
jecxz
insl
ficomps
ret
adcb
xchg
jecxz
lock
inc
fs
xor
popa
pop
pushf
add
xchg
cld
gs
cmpsb
loop
int3
xchg
pop
sbb
cmpsb
jb
pusha
xchg
movsb
rol
out
mov
fdivs
dec
jecxz
sbb
and
movsb
and
lahf
fsub
jns
cltd
cli
and
movsl
fidivrs
fnstcw
pop
mov
daa
inc
hlt
xchg
sbb
jecxz
movsb
hlt
shr
cmp
jecxz
adc
push
push
push
pop
adc
sub
xchg
mov
jle
xor
out
inc
push
test
or
divl
jb
mov
popl
inc
mov
pushf
adc
xor
in
sub
mov
jle
push
jecxz
mov
jg
adc
sub
fisubl
xor
sub
sub
leave
cmp
dec
test
rorb
popa
add
mov
mov
mov
test
out
inc
mov
scas
repz
daa
sbbb
rep
js
or
std
push
call
adc
daa
pop
shrl
push
cli
in
out
sub
adc
jb
adc
lods
in
jl
hlt
and
xor
xor
test
sbb
pop
aas
dec
mov
adc
pop
jp
mov
insl
push
dec
pop
or
nop
mov
sbb
or
pop
pop
and
mov
insb
adc
lcall
mov
in
jp
aas
pop
lods
out
xor
lret
test
sub
outsb
into
mov
sti
insb
mov
popf
xor
in
popa
sbb
inc
push
scas
lahf
out
aaa
aam
rorb
jle
adc
dec
xchg
scas
jmp
xchg
lock
mov
mov
add
mov
int3
mov
gs
sbb
mov
sbb
sahf
pop
sub
cld
icebp
std
or
push
pop
dec
repnz
lahf
cmp
jmp
push
xor
ss
adc
jo
add
divb
jle
dec
xchg
dec
xor
inc
adc
dec
jmp
inc
inc
in
and
outsb
arpl
in
icebp
pop
dec
sub
fisubrl
jmp
or
inc
movsb
out
or
dec
cmp
push
pop
pop
mov
rcl
call
push
lret
adc
mov
lret
xchg
into
insl
scas
pop
out
sbb
and
mov
inc
push
js
leave
clc
xor
stos
iret
movsl
inc
add
add
sbb
lods
ficoms
or
mov
jns
pop
mov
ja
xchg
pop
lret
stos
std
movsl
push
jb
fisubs
scas
jns
jbe
jg
push
inc
mov
push
xor
mov
jmp
lcall
loopne
adc
lods
fistpl
int3
dec
js
fstl
pop
dec
push
sbb
loop
out
aad
cmp
lea
cmpsl
push
imul
pop
clc
testb
icebp
and
pop
jmp
mov
aad
test
mov
adc
clc
sbb
pop
aad
int
aad
and
mov
aad
test
xchg
loope
add
bound
sahf
test
lret
or
cmp
lods
repz
aad
into
hlt
call
dec
and
repnz
arpl
push
inc
std
jp
sbb
push
test
into
pop
push
iret
lods
xchg
xchg
cld
fs
int
inc
test
sbb
jns
inc
lea
jne
stos
sub
xor
movsl
fildll
mov
movsb
arpl
mov
gs
adc
or
fdivs
in
bound
xor
sbb
test
or
sub
jmp
mov
pop
aas
inc
cltd
sti
cmpsb
repnz
scas
push
jecxz
into
outsb
xchg
int3
add
add
shll
sti
sbb
fnsave
cmp
dec
mov
lea
push
pop
data16
mov
pop
loope
xor
addb
sbb
inc
sub
push
fs
mov
inc
push
inc
pop
out
jbe
shrl
neg
movsb
push
movsb
or
pop
push
rclb
test
or
sbb
push
push
cmp
jbe
cmp
test
out
pop
push
or
dec
sub
add
jmp
pusha
lahf
imul
xchg
out
xor
test
fnstcw
pop
mov
dec
and
enter
nop
pop
or
xor
or
sub
test
and
pop
rclb
mov
sub
data16
push
mov
sahf
out
mov
jmp
test
movsb
roll
xchg
int
in
add
std
in
into
outsb
mov
outsl
mov
filds
ds
xchg
jbe
fcoml
xorb
lahf
add
jmp
rcll
ljmp
jle
mov
add
adc
fstp
stc
or
xlat
ret
push
cmpsl
std
fiadds
dec
lods
lea
lds
xchg
icebp
repz
popf
fidivrl
aas
dec
hlt
or
scas
push
adc
ljmp
pushw
out
dec
dec
sbb
scas
lds
push
addl
int
das
mov
mov
adc
lret
mov
sub
loope
roll
js
cmp
into
pop
mov
or
pop
adc
mov
cmp
pop
or
int
daa
leave
mov
pop
mov
jl
mov
xchg
cltd
dec
js
int
pop
jmp
mov
jmp
jle
push
push
xchg
outsb
xchg
movsb
rcl
add
pop
sub
lret
cwtl
mov
xchg
adc
sbb
mov
xchg
pop
out
adc
jae
nop
out
lret
xchg
test
and
sub
push
fstpt
loopne
jle
insb
add
imul
sarb
dec
in
sar
push
dec
jns
test
mov
int
add
ret
jg
data16
push
stos
int3
inc
mov
add
or
inc
xor
mov
js
inc
repz
lret
jg
mov
test
cwtl
js
xor
stos
mov
sbbb
xor
jnp
xchg
or
je
add
ja
inc
insl
pop
lret
imul
sarl
sub
xor
adc
xor
sub
xchg
push
outsl
pop
test
popf
xchg
mov
outsb
fisttpl
add
push
sub
xchg
pop
pop
mov
push
push
cwtl
jge
test
add
cmpsl
jb
mov
add
mov
lret
inc
lret
popa
cli
iret
lea
repnz
ret
out
mov
shll
mov
repnz
jmp
cmp
inc
inc
mov
mov
jg
bnd
and
jns
lea
add
repz
fidivrs
add
lea
sahf
hlt
outsb
xor
js
xor
mov
adc
push
stos
call
jns
cmp
mov
loope
pop
push
jl
mov
iret
lods
mov
daa
stc
pop
hlt
xchg
push
push
xor
clc
and
fildll
movzbl
add
push
dec
pusha
shll
int
gs
cmc
ljmp
cwtl
pop
andb
inc
cmp
insl
leave
adc
xchg
or
ret
fs
adc
arpl
sbb
js
lret
pushf
push
iret
mov
push
adc
movb
sub
xor
or
mov
mov
inc
popa
rcrl
inc
aaa
in
cmpsb
icebp
inc
cmpl
lea
sbb
cli
sbb
insb
mov
test
rolb
cmp
pop
fwait
in
cmp
or
jl
or
inc
bound
in
test
cmc
roll
daa
in
and
cmp
jae
gs
xor
fnstcw
mov
pop
jge
mov
aam
addb
int3
outsb
push
je
jns
imul
in
popf
int
imul
push
cmp
std
jmp
pop
rcr
clc
mov
fidivl
xor
mov
push
mov
movsl
aad
add
lea
xchg
aad
andl
mov
sahf
adc
inc
fiaddl
loopne
xor
hlt
mov
dec
xor
adc
pushf
sahf
inc
pop
in
icebp
or
andb
rclb
adc
or
xlat
sub
xor
push
sbb
lock
out
addr16
loope
pop
shrb
add
loopne
insl
stc
mov
jns
sti
mov
xchg
xlat
jae
fisttps
jle
fbld
xchg
cmp
in
in
stos
sub
hlt
adc
push
arpl
cmc
add
jns
gs
cmp
je
inc
dec
dec
iret
xchg
mov
mov
int3
popa
adc
loopne
divl
ret
push
leave
sub
in
loop
cmp
leave
in
pop
push
mov
dec
das
icebp
cmp
aam
aaa
rorb
pushl
pop
lcall
sbb
or
mov
faddl
inc
loopne
lods
test
jp
rcl
adc
inc
mov
negl
stos
rclb
pop
mov
dec
repz
dec
mov
fidivl
sbb
cmp
pop
ds
jg
jns
jge
mov
je
fs
lods
lret
fstp
lahf
jno
adc
fistps
push
jae
neg
add
add
leave
sahf
cli
cmp
adc
mov
sub
loop
sbb
mov
lock
leave
push
out
pop
push
mov
in
mov
xchg
push
fsubp
repnz
in
adc
insb
mov
sub
fistl
xor
lahf
xchg
xorb
mov
push
out
cmc
push
scas
mov
dec
fdivs
call
popa
movsl
and
or
aad
jbe
or
jno
pop
cmp
fldenv
cwtl
jg
outsl
or
in
push
ret
out
cmp
xchg
or
push
adc
sbb
mov
fnsave
mov
adc
sub
xor
inc
dec
data16
mov
push
daa
cmp
js
pop
pop
or
ds
gs
cmp
je
lea
push
mov
popa
mov
dec
or
in
pop
jl
mov
push
xchg
sbb
cmp
cwtl
inc
daa
test
xchg
jge
ds
mov
pusha
mov
aad
pop
lahf
out
lock
out
lret
pushf
and
push
jnp
loopne
sbb
fidivrs
sbb
inc
inc
int3
ds
xor
push
cvtpi2ps
fcomi
sahf
push
icebp
xorb
das
sarl
pusha
and
jmp
outsb
insb
les
andl
and
repnz
aas
das
pop
push
mov
testl
sahf
dec
in
or
push
loop
add
lahf
and
jg
arpl
pop
iret
pop
ja
rorb
sbb
icebp
stc
pop
add
test
enter
inc
outsl
arpl
outsl
dec
std
push
sbb
dec
aaa
movsb
ss
push
dec
cltd
sahf
mov
inc
imul
leave
cmp
sbb
mov
mov
jl
inc
cmp
sbb
jno
and
pop
je
inc
and
sub
ret
sub
jo
jbe
sub
adc
ret
push
insb
sbb
popa
fldcw
mov
add
push
dec
scas
mov
test
dec
outsb
out
push
xor
inc
inc
sbb
sbbl
mov
dec
sub
cwtl
sub
repz
incb
pop
movsl
and
add
sub
mov
push
popf
in
out
insb
inc
sbb
ljmp
adcb
aas
xchg
lods
add
mov
bound
inc
xchg
add
negb
xor
idivl
push
add
movsl
and
imul
adc
xor
cld
in
inc
fidivs
sbb
sub
mov
adc
cmp
sbb
in
mov
dec
loope
mov
cs
pop
ret
inc
push
mov
mov
pop
sbb
xlat
mov
mov
into
pop
pcmpeqd
jmp
ja
push
leave
mov
dec
mov
inc
shll
test
aad
int3
pop
jbe
xchg
pop
lods
loopne
pop
shll
or
sub
aad
xor
cmp
pop
jnp
je
push
call
dec
setp
mov
mov
divb
cmp
ss
aaa
adc
es
scas
sbb
dec
jbe
adc
jbe
sub
mov
sbb
mov
add
mov
aam
mov
sbb
or
xchg
sbb
repz
cmpsb
rcrb
ss
out
sub
xor
push
xlat
iret
push
pop
xor
cmc
aam
aad
dec
inc
add
dec
push
adc
lcall
or
repnz
pop
outsl
outsl
push
lret
incb
hlt
lcall
mov
adc
adc
outsl
pop
pop
es
ljmp
xchg
test
hlt
cltd
mov
cmpsb
addr16
ror
and
lahf
jns
xchg
sub
mov
lods
out
aaa
mov
ljmp
cmp
push
dec
mov
mov
sub
and
cmp
das
xor
push
push
icebp
push
inc
test
cltd
cld
popf
pop
out
pop
adc
das
out
pushf
js
xor
jg
int
jno
bound
aaa
mov
repz
aaa
js
pop
jge
mov
sti
out
push
pop
push
inc
fstp
jl
pop
scas
in
xlat
jl
and
cld
push
cmpsl
sub
lock
xchg
or
je
aad
push
add
in
add
mulw
sbb
mov
mov
mov
std
xchg
into
pop
or
mov
push
enter
fsincos
lods
xchg
into
mov
inc
or
xchg
mov
push
adc
es
ljmp
or
dec
pop
sub
pop
dec
jno
mov
mov
dec
sbb
or
xorl
sub
dec
push
mov
mov
cmpb
cmp
jle
pop
fwait
jge
int3
cmp
popl
ja
jge
lods
lret
test
or
fdivrl
inc
aad
inc
insb
jno
test
aad
lods
mov
faddp
fs
xchg
out
arpl
out
mov
mov
out
test
lahf
popf
int
rcl
iret
js
inc
mov
jno
bound
inc
jne
sahf
int3
in
mov
stc
popa
dec
test
dec
sti
or
xchg
fsubp
rcrb
repnz
pusha
add
and
jnp
xchg
xchg
jb
stos
xor
jecxz
inc
xchg
cmp
or
push
fisubrl
cwtl
inc
and
stc
push
jmp
pop
inc
inc
movzbl
pop
mov
cmp
mov
mov
and
adc
mov
leave
add
pop
dec
pop
sar
in
insb
movsl
iret
adc
xchg
dec
push
aad
push
leave
dec
rcrl
push
js
dec
sub
loope
push
incl
push
fldt
or
adc
sub
aas
add
jb
mov
inc
in
into
mov
jae
add
data16
push
aad
mov
lds
cs
and
imul
std
repnz
movsb
das
mov
arpl
movsb
xor
cmp
mov
or
jmp
test
mov
push
mov
xlat
push
insl
sahf
inc
mov
mov
fld1
mov
mov
scas
popa
test
out
sbb
ret
add
mov
sub
sbb
outsb
loopne
xchg
rol
in
mov
popa
pop
jbe
and
lock
sbb
lods
cmp
shlb
mov
and
leave
push
mov
push
add
fisttpl
xorl
or
sahf
movl
mov
mov
outsb
movsl
jge
dec
mov
add
loop
inc
push
outsb
adc
jmp
push
fnstenv
push
mov
daa
and
in
jle
push
mov
das
pop
fisubrl
int3
jmp
imulb
das
hlt
push
lods
bound
push
inc
or
jg
icebp
cmp
fisttps
mov
dec
popf
jle,pn
mov
scas
imul
adc
jecxz
jae
xor
aad
add
and
setg
enter
popa
cmp
adc
cmp
std
jno
adc
jl
push
or
fstpt
mov
inc
cltd
xchg
mov
pop
hlt
mov
cmp
fdiv
test
jge
adc
adcb
mov
dec
jne
outsl
aas
nop
cmc
dec
jo
scas
insb
and
in
jbe
cmp
lahf
and
loopne
leave
movsl
insb
out
xchg
xchg
cs
aad
xchg
arpl
loope
sub
or
jns
mov
cmpsl
mov
idiv
out
or
push
xor
sbb
jmp
mov
inc
int
sarb
jnp,pt
cmpsl
shlb
orb
ja
add
push
lret
mov
scas
pop
dec
je
pushf
adc
push
mov
pop
sub
mov
sub
xchg
test
into
iret
dec
out
jo
mov
in
cli
sub
movsb
jno
ret
scas
cmpsb
cwtl
inc
repnz
dec
je
mov
rclb
out
sbb
inc
xlat
push
add
das
or
insl
cmc
jmp
ret
sbb
mov
bound
in
cld
orl
sub
adc
test
pop
sbb
insl
or
call
addl
popa
xor
pop
sub
outsl
mov
and
fs
jl
lahf
insb
mov
push
sub
pop
lahf
push
or
fld
pop
aam
xchg
mov
sarb
cmp
fldcw
xchg
lret
mov
mov
out
testl
lahf
pop
mov
mov
inc
sbb
call
and
xchg
jp
push
roll
std
sbb
jl
or
jae
mov
mov
jb
imul
dec
sub
xor
ret
lcall
sub
sbb
mov
nop
push
push
repnz
rolb
push
pop
push
xchg
out
jle
aam
lods
sbb
int3
adc
scas
or
dec
inc
test
push
pop
sbb
pop
jle
jg
sbb
ret
popf
stos
das
add
add
movsl
pop
xor
push
aad
lods
outsl
push
dec
inc
sarb
mov
fmuls
xchg
mov
repnz
add
jp
insb
push
add
arpl
dec
jno
pushf
test
cmp
cmp
xor
sub
push
movsb
xchg
dec
testl
sub
into
or
mov
mov
lea
xor
sbb
dec
sahf
fisubrl
xchg
xlat
cs
es
mov
lea
in
xchg
pop
or
pushf
scas
sub
std
pop
into
inc
fldenv
outsb
fwait
int3
xchg
pop
iret
jg
out
cld
mov
dec
sarl
andl
popa
sbb
cmp
sbb
out
btc
stc
adc
daa
sub
mulb
fildll
sahf
and
dec
add
sub
xor
rorl
out
popf
add
mov
addr16
sub
jl
imul
cmp
faddl
unpcklps
dec
xor
sub
cli
data16
mov
and
sbb
dec
sub
sub
dec
nop
inc
std
xchg
test
xchg
test
lret
dec
or
int
fsubs
jo
sarl
or
push
jmp
stos
in
adc
push
mov
bound
mov
push
xor
adc
or
movsl
jbe
leave
add
rcll
xchg
aas
ds
push
call
pop
cmpb
ret
mov
cmpsb
stos
jle
mov
loope
test
outsb
iret
lods
je
aam
clc
push
fs
lods
push
or
mov
and
mov
ljmp
pop
inc
jne
pop
fcmove
xchg
push
xchg
cmp
lock
or
aam
outsl
les
into
sarl
mov
rorl
fistpll
std
jecxz
jnp
push
or
xor
ret
mov
jp
jo
mov
in
movsl
andb
sar
std
stos
popa
aaa
imul
dec
cmp
cmpb
mov
lret
in
fdivl
in
and
popa
pop
and
mov
xor
jns
push
cmp
add
lret
mov
push
xchg
ret
push
hlt
mov
fwait
xchg
in
in
lds
adc
pop
std
xor
leave
je
out
fisubl
mov
stc
fld
add
ficompl
xchg
aaa
cmpsl
cld
aas
fdivs
jno
jg
stos
jecxz
jo
jp
incb
js
jl
add
xlat
jno
nop
cltd
adc
jle
cltd
and
pushf
jns
imul
pop
mov
mov
pop
ret
xchg
rolb
lea
inc
ret
xor
movsb
dec
cltd
imul
xchg
push
and
xchg
ret
xorl
jns
adc
adc
daa
jno
push
inc
fdivrs
adc
imul
jg
dec
scas
xchg
jg
sub
mov
mov
loop
lock
xor
jmp
lret
pop
jno
dec
or
outsl
pop
out
ficompl
push
jge
loop
mov
negb
sarl
fdivrs
mov
mov
inc
jno
inc
cmp
dec
popa
dec
mov
pop
dec
xor
lods
test
popf
mov
xlat
mov
sbb
add
ljmp
roll
or
popf
lahf
lods
rol
push
ficompl
sub
fstps
or
jae
jecxz
cmp
pop
ja
loopne
inc
mov
sbb
outsb
or
in
jo
test
shll
push
je
add
out
inc
pusha
into
pop
xchg
sbb
pop
movsb
xchg
add
add
cmp
ror
ret
pop
mov
imul
push
pop
inc
insl
push
sbbb
pop
push
idivb
pop
cmpsl
movsl
dec
insl
sbb
push
mov
xor
adc
shl
xor
cli
call
out
test
inc
mov
mov
movsb
mov
int
lock
pop
cmpsb
xchg
xlat
xor
ss
movsb
sbbb
cmpsb
fistps
mov
xor
sub
dec
faddl
sbb
fwait
out
cmc
push
fiadds
fbstp
cmpsb
mov
stos
out
stos
punpcklbw
sbb
inc
lods
aaa
sbb
sub
arpl
jnp
out
popa
inc
out
adc
xchg
or
lods
adc
test
das
add
into
mov
lret
mov
stc
repnz
sahf
jp
xchg
cltd
sti
jns
shld
inc
push
inc
out
imul
cmpsl
sbb
push
lods
hlt
xor
add
cmp
mov
sbb
push
lret
inc
sahf
idivl
pop
sbb
cs
cld
enter
incl
outsb
imul
pop
es
imul
insl
jmp
cmp
rorb
sbbb
mov
sub
sbb
jae
ret
mov
dec
push
jg
dec
cmpsl
scas
imul
shlb
cltd
dec
and
push
lahf
sub
inc
mov
mov
pop
mov
pop
push
mov
sarb
cmp
clc
xchg
enter
js
sub
loopne
insl
ljmp
mov
jg
test
mov
sbb
lret
and
xor
pop
repz
inc
dec
daa
xchg
dec
out
jnp
shll
scas
pop
insl
jmp
mov
sti
adc
icebp
out
lret
mov
mov
pop
adc
pop
imul
xlat
jecxz
bound
sub
xlat
push
mov
int
mov
mov
arpl
jbe
or
in
mov
in
pop
xchg
jns
jns
aad
jecxz
mov
mov
lea
shll
lret
pop
subl
sti
xor
adc
sub
orl
xlat
int
dec
cmp
mov
pop
sahf
mov
inc
or
and
jmp
push
pop
inc
dec
adc
outsl
ret
fldl
popf
xor
add
imul
fnsave
or
jne
fstps
sbb
stos
shll
insl
or
sbb
cmp
cmp
inc
or
imul
ret
fdivrs
loop
adc
or
jne
sbb
push
jecxz
sub
push
inc
xchg
cs
adc
sbb
xchg
push
ret
jp
adc
jmp
fldl
test
lock
cmpl
cld
int3
mov
mov
inc
out
push
inc
fyl2x
dec
dec
add
push
cmp
aaa
pcmpgtd
lods
xor
jo
inc
mov
sub
xchg
cwtl
and
xchg
out
daa
adc
mov
ss
inc
xchg
sbb
push
stc
stc
dec
sbb
rcr
sub
xlat
std
mov
mov
pop
fwait
adc
cwtl
push
xchg
sahf
leave
mul
pushf
jecxz
or
popa
cmpsb
fwait
rcr
ja
xchg
inc
cmpsl
mov
popf
mov
push
int
cmp
cli
pop
xchg
fsub
jns
shll
sub
rolb
pop
das
frstor
adc
out
ds
or
imul
xchg
xchg
in
pop
mov
xchg
out
stos
jg
and
xchg
mov
sbb
push
xchg
mov
lret
sbb
lods
lods
ds
mov
fdivrl
repz
popf
fcmovne
cwtl
xchg
xchg
lods
mov
dec
mov
mov
sbb
fsubs
jae
cmc
or
add
scas
add
pop
push
sbb
pop
aas
rcrl
add
mov
lock
leave
mov
inc
aas
gs
pushf
push
inc
push
loopne
int3
and
push
movsl
jp
sub
mov
mov
leave
jb
mov
in
push
int
leave
mov
add
pop
add
mov
jb
or
sub
add
mov
jne
xor
daa
or
push
lods
fiaddl
fxch
jns
arpl
cmpsl
xchg
call
cli
jbe
aaa
shrl
orl
lahf
xor
rclb
loop
sub
sub
mov
pop
inc
sahf
lock
jge
add
sahf
cli
lods
icebp
cmpsb
cmp
jo
rcr
test
call
cmp
mov
test
push
adc
mov
and
rcll
sbb
jb
mov
decb
xor
pop
inc
mov
in
or
push
add
adc
fadds
jbe
add
dec
dec
fwait
sti
mov
cmp
or
jge
lock
popf
mov
fdivrs
mov
xchg
push
cld
fucomp
sub
sub
push
fs
dec
add
push
filds
xlat
fmull
or
cli
mulb
mov
imul
mov
xor
dec
mov
mov
and
lahf
in
xchg
sbb
test
shrb
sbb
sub
dec
adc
push
lret
adc
jp
scas
xlat
mov
mov
or
jg
stos
jmp
push
pop
fisubs
jg
lret
repnz
rcr
adcb
ds
sbb
inc
jecxz
jecxz
rolb
add
aas
add
inc
xchg
mov
push
orl
push
scas
push
cmp
or
xchg
adcb
jmp
mov
test
adc
lock
mov
in
pop
xchg
cmp
lock
cmp
shlb
cmp
addb
inc
push
sarl
divl
shr
jmp
sti
test
int
in
mov
xlat
mov
sbbl
jnp
jbe
mov
jge
jecxz
and
imul
loop
jmp
aam
out
nop
les
xchg
test
dec
jge
mov
sub
popa
maskmovq
notl
cmp
add
in
jo
fldenv
pop
cmp
icebp
movsl
gs
mov
insb
inc
and
pop
mov
xchg
mov
scas
jae
sub
sub
push
fidivs
mov
jecxz
inc
cmp
jmp
mov
loopne
inc
mov
push
add
les
inc
cmc
jge
adc
out
adc
stos
jne
sbb
or
pop
stos
inc
or
loopne
jnp
mov
adc
adc
movsl
enter
adc
sbb
and
mov
sub
mov
adc
xor
pop
ret
in
in
out
mov
mov
je
jae
pop
dec
loopne
mov
addr16
jp
setns
mov
divl
imul
jbe
mov
pop
jge
and
movsb
xor
mov
leave
mov
xchg
pop
frstor
aad
pop
aad
inc
jb
push
sbbl
std
mov
add
dec
adc
outsl
test
jae
js
clc
out
xor
sbb
fdivrs
xor
in
or
dec
dec
mov
lods
mov
aam
fdivrl
lods
ret
inc
sbb
jne
sub
outsl
xor
sbb
xor
inc
fnstenv
push
jp
xchg
add
xchg
push
cmp
mov
test
rcrb
negl
dec
mov
jae
pop
sbb
push
repz
xchg
and
mov
mov
pop
fnstsw
dec
popl
xchg
sbb
sbb
bound
inc
and
or
negb
jbe
call
mov
inc
mov
lock
into
orb
mov
lahf
pop
dec
shll
cmp
inc
xchg
add
fadd
push
dec
gs
dec
pusha
mov
loopne
adc
in
and
les
xchg
mov
in
xlat
loope
lahf
mov
popa
cmp
shrb
loop
std
mov
test
inc
or
imul
fstpt
inc
cmp
lods
roll
stc
lret
dec
pop
dec
push
inc
xor
das
jmp
inc
push
mov
inc
scas
cmpsl
xor
loopne
add
out
and
jnp
fadd
iret
mov
arpl
nop
dec
jecxz
dec
dec
cs
ljmp
xchg
pop
push
xor
xchg
mov
sti
clc
mov
pop
ds
mov
sbb
jecxz
add
pop
movsb
add
sub
fists
daa
xor
data16
mov
pop
mov
push
inc
jbe
mov
sbb
mov
xor
xchg
fnstsw
xor
scas
pop
inc
subl
data16
push
daa
mov
movsl
cmpsb
das
mov
or
fildll
orb
data16
cmp
ljmp
imul
xor
and
divb
dec
xchg
xchg
add
and
outsl
mov
adc
pop
push
mov
ret
push
mov
sti
insl
out
aam
add
icebp
xor
andb
mov
outsb
neg
int
cmpl
xlat
lds
sub
mov
cli
or
push
push
push
add
push
std
mov
jg
imul
inc
add
inc
ja
cmp
loopne
and
int3
mov
ficompl
or
rclb
cmp
dec
mov
insl
mov
and
scas
in
mov
pop
mov
mov
xlat
mov
mov
jp
pop
int
lock
or
cltd
aad
sbb
insl
and
xchg
cmp
loope
xchg
or
sub
das
addr16
rorb
std
test
ja
fwait
andl
xchg
fsubrl
dec
push
iret
lds
mov
or
cmc
aam
sbb
and
dec
sti
dec
xchg
ljmp
in
scas
sub
and
cmpsl
mov
in
pop
test
orl
pusha
cmpsb
jo
sbb
sbb
rorl
jg
popa
dec
scas
scas
push
stc
jg
pop
dec
sbb
aaa
xchg
sbb
xchg
inc
inc
pop
jae
fs
sub
shlb
and
enter
stc
pop
dec
lods
pop
scas
mov
ljmp
pop
lea
jmp
movsb
and
jmp
dec
out
imul
mov
cwtl
sahf
loope
pop
pop
mov
mov
stos
xchg
dec
pop
lahf
enter
mov
mov
or
sbb
fs
mov
pop
pop
pusha
or
and
mov
aas
inc
out
push
mov
jae
das
dec
or
mov
out
addb
out
rcrb
ret
pop
mov
stos
cmp
ret
scas
in
push
scas
rcr
outsl
out
jmp
sub
rcrl
in
mov
dec
cmp
popa
push
or
or
mov
mov
and
adc
mull
mov
jae
xorl
fdivrs
fidivrl
out
mov
push
cmc
hlt
cmp
decl
or
xchg
fisubl
mov
adc
sub
je
jge
enter
and
push
aaa
pop
scas
popa
clc
aam
adc
xor
movsb
in
mov
push
xchg
lds
cmp
xor
pminsw
sbb
jecxz
mov
adc
pop
movsl
or
out
xor
cld
adc
scas
mov
add
mov
push
bnd
sub
sub
lret
mov
scas
mov
sarl
cld
jecxz
sbb
in
sarl
leave
jns
icebp
into
jecxz
aad
cmc
xor
repz
dec
sbb
dec
aaa
inc
jbe
fidivrl
lods
adc
push
adc
jecxz
shlb
xchg
xor
inc
push
adc
jae
jmp
stc
popf
push
hlt
push
mov
xor
out
sub
into
and
inc
push
clc
adc
pop
enter
dec
adc
xor
xchg
sahf
std
cltd
fmuls
into
jbe
push
int3
mov
fcmovne
fadds
add
or
inc
shl
insb
lds
mov
jp
sbb
loope
insb
sbb
cmc
xor
lar
mov
and
lret
jns
cltd
clc
dec
cmp
jl
sbb
push
loope
pmulhuw
adc
ret
jnp
jns
fisttpl
mov
cmpb
out
cs
add
out
int
add
fadd
jmp
fsubr
bound
popa
add
and
mov
pusha
jns
inc
outsl
cwtl
mov
adcb
xchg
push
push
inc
and
dec
cmc
cmp
push
cmp
push
dec
dec
cmp
push
jp,pn
push
xor
sub
sbb
dec
and
mov
jae
outsb
shrb
mov
jne
xchg
sub
pop
roll
insb
shlb
outsb
ret
stos
mov
push
xchg
pop
xchg
into
arpl
pop
mov
mov
jp
movsl
leave
sbb
xchg
scas
out
fnsave
xchg
dec
and
sub
and
loop
push
aad
dec
aad
and
push
mov
jo
popf
mov
pop
cli
movsb
or
mov
mov
out
xchg
push
xchg
aad
pop
and
add
cmpb
sub
fcomps
mov
icebp
pop
hlt
jo
addr16
add
ret
enter
repnz
enter
clc
lods
mov
test
xor
inc
cmpsl
pusha
addl
iret
fnstenv
or
sbb
stos
mov
sub
push
adc
sub
add
pop
push
mov
mov
inc
sbb
pop
cmpsb
sub
mov
lods
adc
lds
or
or
push
mov
pop
iret
mov
aad
push
mov
and
xchg
or
popa
lock
sbb
add
sub
pop
je
push
add
ror
push
pop
dec
dec
jge
and
mov
bound
jbe
mov
pop
xchg
dec
xor
mov
push
add
ja
sub
mov
dec
pop
pop
or
inc
pushf
dec
xchg
jl
in
mov
addr16
divl
pop
mov
imul
movsl
cli
or
adc
mov
add
cs
lahf
popa
scas
adc
cmpsl
or
push
into
mulb
dec
fldcw
jmp
sbb
push
loope
lahf
jge
push
mov
push
notb
cmp
mov
dec
pop
out
repz
cmp
xchg
inc
stos
or
data16
in
ffreep
pop
mov
mov
or
sti
nop
cli
jmp
cli
dec
push
and
inc
fiadds
cmp
cltd
jo
sbb
rcrl
int3
cmp
adc
in
dec
lds
pop
jbe
scas
sub
push
cmpsl
jbe
or
fcomip
mov
pop
ss
xor
les
push
jle
hlt
mov
cmp
jns
dec
roll
push
out
orb
mov
push
pop
ljmp
and
add
lsl
pop
mov
pop
mov
dec
cmp
pop
adc
lock
fwait
push
pop
shlb
add
inc
dec
in
popf
or
adc
fwait
daa
add
or
movsb
push
es
jne
hlt
xchg
sbb
cmc
gs
push
cwtl
mov
mov
mov
mov
lods
ficoml
arpl
xor
mov
jb
clc
jecxz
xchg
inc
fdivl
jbe,pn
loop
jecxz
out
add
stos
sub
sbb
inc
cmp
jmp
sbb
out
add
movsl
sbb
jl
into
or
push
push
pop
call
in
push
jge
or
fimuls
pop
out
lods
ret
nop
mov
into
stos
int
dec
popa
mov
xor
pop
and
jl
popa
lcall
and
mov
faddl
jb
add
inc
mov
jo
cmp
pop
insb
jge
sbb
push
into
test
adc
mov
lret
mov
sub
movsl
stos
dec
cmpsb
dec
jl
jecxz
mov
and
jbe
fistpl
inc
sub
xor
fsubl
mov
jle
ss
mov
mov
pop
add
inc
mov
sub
in
mov
out
ret
push
cld
insb
inc
sub
ja
scas
lret
stos
mov
iret
loop
ret
xlat
into
push
out
cmp
ja
sub
xchg
add
jmp
es
ss
sti
addr16
dec
cmp
and
jno
das
loope
lock
repz
dec
xor
xor
test
fstpt
xchg
mov
lret
je
adc
cltd
movsl
into
imul
mov
inc
pushl
cmpsl
arpl
test
outsb
inc
add
xchg
test
jecxz
cmp
jmp
mov
ja
jns
andl
sub
fidivl
out
ss
adc
mov
insb
adc
bound
mov
jp
xor
xchg
xchg
pop
xlat
nop
cmp
pop
sbb
and
in
push
sub
sbb
cwtl
add
std
mov
mov
or
andl
mov
mov
dec
and
scas
scas
cs
enter
mov
and
ss
pop
cmp
stc
sbb
and
fdivr
lods
mov
pop
stos
sub
mov
hlt
sbb
imul
cmpsb
cltd
rep
mov
dec
sbb
cmp
jg
or
enter
adc
int
push
sarb
dec
fwait
inc
push
jo
push
sub
inc
sbb
mov
pop
aam
aaa
repz
pop
sbb
pop
cld
insl
rep
lcall
imul
lock
jecxz
pop
xor
xor
repz
mov
or
jmp
cmp
cltd
dec
add
movsb
sbbl
aas
leave
dec
out
mov
add
push
adc
jmp
jmp
sbb
in
xor
inc
lds
cwtl
out
clc
insl
test
mov
xor
mov
xor
pop
out
sbb
es
or
mov
xchg
rcl
imul
cmpsb
adc
in
enter
add
xchg
inc
cmp
pop
fldenv
int3
mov
ret
flds
pop
dec
cmp
mov
call
cmpsb
iret
cmp
jle
imul
xchg
push
inc
movsl
sahf
test
push
mov
jecxz
cmc
mov
cli
mov
imul
sbb
outsl
xchg
pop
mov
dec
xor
jmp
popa
dec
or
iret
push
adc
divl
out
jno
aaa
inc
inc
jno
jno
inc
lret
arpl
mov
insl
fs
out
adc
insb
les
repnz
testb
dec
sbb
sti
and
jl
push
sbb
push
test
sub
sbb
push
outsb
out
adc
adc
add
mov
pusha
cld
arpl
je
cltd
push
xor
dec
jge
xchg
scas
cltd
sbb
hlt
inc
push
xor
xor
mov
mov
lcall
xorl
cmpb
out
inc
xor
addb
lea
push
mov
inc
into
mov
aam
xchg
push
push
add
or
jge
cs
fs
hlt
data16
xchg
pop
int3
sti
in
sbb
bound
call
pop
test
sub
pushf
out
or
ja
mov
dec
pop
les
fwait
push
jnp
bound
call
inc
cmp
les
dec
inc
mov
push
jecxz
insl
sbb
scas
test
or
dec
popa
lods
cli
mov
shlb
int
pop
xchg
xor
into
call
scas
stos
sub
push
mov
xchg
adc
pop
jne
mov
fs
ret
or
mov
push
lcall
repnz
sarb
fbld
shl
jnp
into
lret
adc
and
or
lahf
inc
jns
repnz
call
sub
xchg
out
out
pop
cmp
jl
aam
shll
loopne
jmp
xchg
hlt
lahf
nop
adc
shlb
in
and
jg
in
in
repz
sub
cmp
incb
imul
in
pusha
int3
or
popf
add
xlat
xchg
xor
fistps
cmpsb
std
lds
push
push
dec
pop
pusha
adc
test
push
xchg
dec
jne
out
mov
or
fisttpll
jbe
dec
into
and
dec
fwait
dec
jno
std
repz
test
cmpsl
sub
iret
loop
je
sub
sbb
gs
or
mov
push
notb
push
sub
sub
in
arpl
xchg
mov
mov
xchg
pushf
xor
lahf
cwtl
orl
test
and
dec
xlat
jne
rcll
push
ret
test
addl
outsl
push
out
mov
fistpll
pop
jmp
imul
inc
mov
or
or
movsl
mov
ss
scas
daa
sub
inc
xchg
jns
sbb
push
vpcmpeqw
lods
or
je
es
mov
mov
ja
bound
push
sbb
push
push
repz
inc
and
add
sbb
outsb
dec
push
push
cmp
dec
xchg
inc
sti
insl
add
stos
add
loop
stos
jg
stos
xchg
lea
lcall
cmpsl
jno
add
mov
jne
xchg
frstor
push
push
mov
sbb
fdivr
and
negl
xchg
jg
iret
xlat
push
mov
xchg
test
pop
ret
cmpsl
jno
cmpsl
sub
mov
les
sub
das
xor
insb
mov
es
popf
push
xor
in
ljmp
sub
shll
add
cmc
jl
out
iret
outsl
jecxz
or
add
loop
mov
or
bound
loop
jg
es
mov
add
ljmp
lret
fucomip
enter
adc
data16
pusha
mov
dec
adc
andb
add
outsl
inc
xlat
or
and
push
lods
jp
inc
add
fwait
and
mov
sbb
fiaddl
les
mov
loopne,pt
push
mov
lret
or
add
int
pop
fldt
mov
dec
inc
inc
xchg
jbe
pop
jmp
push
popa
adc
push
adc
fwait
jge
insl
adc
int
repz
into
iret
pop
pop
daa
adc
pusha
push
divl
pop
test
stos
cltd
cltd
stos
inc
inc
jnp
xor
mov
jmp
test
xlat
cli
sbb
cld
mov
pop
mov
cmpsl
scas
jno
rorl
pop
pop
sahf
jp
push
test
jbe
jae
test
int
inc
xor
repz
int
jb
gs
add
jb
push
inc
dec
ja
repz
xchg
inc
cs
data16
pop
ror
dec
inc
add
pop
inc
add
xchg
shlb
cmpl
pop
fs
inc
popa
xor
xorl
cmp
int3
and
lcall
insb
out
movsl
subl
mov
sahf
or
lea
test
mov
out
imul
loope
xchg
adc
mov
mov
nop
sub
cli
sbb
addl
adc
xor
insb
sub
shll
repz
icebp
lea
dec
jl
inc
pushf
scas
pop
es
bound
scas
lret
xor
je
inc
jp,pt
sbb
push
rcr
cwtl
fimull
fwait
lods
stos
mull
mov
pop
mov
in
dec
jno
cli
loop
rcll
outsl
cmp
add
imul
ljmp
push
fistl
mov
aaa
in
insb
iret
jle
add
push
add
movsl
add
xchg
mov
xchg
dec
int3
fs
fcoms
icebp
dec
popa
addr16
adc
and
nop
xchg
jno
shlb
imul
shl
stos
clc
leave
mov
lock
xchg
mov
pop
adcl
pop
mov
sbb
mov
pop
cmp
mov
cmp
call
movsb
test
imul
mov
or
daa
addb
repnz
jecxz
popa
xor
test
or
adc
xchg
test
pop
repnz
xchg
sbb
insl
adc
mov
jecxz
test
and
jecxz
aas
fwait
lcall
jb
stc
mulb
push
fsubrl
in
movsb
mov
scas
push
adc
hlt
dec
loopne
insl
fildl
push
dec
mov
scas
pop
xor
mull
jno
mov
pop
or
mov
lret
sub
scas
in
js
cli
imul
push
xchg
cmp
test
je
and
mov
cmpsb
daa
lret
mov
aaa
push
cmc
push
in
push
andb
in
sbb
mov
mov
and
mov
ds
stos
xchg
pushf
and
inc
jge
pop
aam
xor
push
pop
shr
lcall
js
mov
inc
cmp
mov
movsl
xor
cmp
jae
fildl
icebp
icebp
jecxz
scas
xchg
addr16
push
jge
pop
jl
and
in
repnz
push
dec
and
or
sbbl
dec
adc
jnp
pop
lret
sub
ret
iret
push
dec
mov
hlt
push
mov
out
sahf
jbe
imul
rcrl
shll
xor
sub
fistpll
cmp
aad
mov
cwtl
out
mov
mov
out
iret
call
xor
jbe
shlb
jo
inc
shll
jge
mov
mov
jb
aam
cmp
in
inc
add
mov
xchg
jo
js
or
movb
inc
xchg
mov
enter
lret
stos
in
test
test
cmp
push
insb
xor
mov
pop
sub
mov
pop
dec
xor
sbb
lock
mov
or
rcl
push
popa
pop
aam
jne
inc
jl
mov
out
mov
test
mov
popa
xchg
or
loope
ficoml
jb
xchg
xor
jl
pop
data16
pop
lock
in
dec
loopne
rcr
lahf
push
dec
out
pop
movsl
cltd
call
enter
test
mov
jne
loop
pop
mov
mov
adcl
iret
cmpsl
xchg
out
xor
call
push
aad
push
dec
inc
mov
and
repz
shrl
adc
adc
out
jnp
lods
pop
add
sti
pop
stc
push
mov
cmc
cmp
ret
dec
call
and
lods
call
mov
inc
inc
cmpsl
mov
ljmp
fistpll
mov
or
insb
xchg
jg
nop
sbb
jbe
gs
push
popf
int
mov
cmp
add
cmpsl
hlt
out
push
es
aam
add
mov
divl
inc
shll
add
fistpl
or
inc
cmpsb
mov
dec
shll
stc
jnp
daa
xchg
test
mov
jbe
sub
in
xor
cld
mov
xchg
jg
arpl
ja
negl
insl
jae
lcall
fistps
repnz
sbb
cmc
setno
test
xchg
ljmp
mov
mov
out
add
xor
test
xchg
dec
ror
mov
insb
xor
test
andl
lds
dec
cld
sbb
jge
xor
test
dec
push
push
lcall
xor
mov
mov
inc
adc
lret
scas
popa
lcall
xor
das
in
xchg
adc
leave
dec
and
mov
mov
jge
mov
sbb
jns
insb
mov
pop
lds
xor
push
dec
and
xadd
lods
testb
jne
out
lea
scas
inc
pop
fwait
aas
mov
dec
addr16
outsl
fsts
movb
and
aam
sahf
sbb
aam
dec
in
ret
lcall
jbe
adc
sbb
xchg
and
repnz
icebp
sti
nop
loopne
stos
push
cmp
lgs
add
jnp
es
mov
pusha
and
mov
cmp
enter
ja
add
jb
jno
add
mov
xchg
push
dec
rcr
cmp
jg
push
adc
sbb
xor
or
inc
out
xchg
adc
pop
or
jg
das
fidivrs
push
sub
fmull
push
add
push
aad
mov
inc
mov
push
mov
aam
xor
xchg
dec
nop
aam
cmpsb
stc
cmp
sub
sub
call
out
test
es
and
cmp
fistpll
test
push
orb
pop
xor
aad
icebp
pushl
lret
sbb
mov
push
out
icebp
cmp
jg
sub
fisttpl
jno
in
adc
test
popf
mov
jae
add
sub
fistps
mov
lret
ja
or
sti
out
shrl
mov
xchg
adc
xchg
mov
xchg
mov
lds
out
jle
add
push
inc
xchg
sub
popa
mov
ljmp
ret
mov
pop
in
scas
push
pushf
sarl
and
pusha
pop
ret
jg
sub
out
mov
add
inc
pop
and
imul
dec
adc
rcrb
gs
pop
out
cmp
cli
sarb
lock
jnp
sub
or
shl
pop
jecxz
or
mulb
mov
sub
cli
mov
or
arpl
mov
test
dec
jl
jp
inc
xchg
xor
aad
pushf
test
ds
xchg
outsl
icebp
neg
cwtl
mov
push
dec
sub
dec
cmp
insl
mov
mov
pop
xchg
dec
clc
jb
mov
dec
jle
in
xchg
cwtl
mov
ret
in
push
mov
in
jecxz
cltd
lods
jne
jno
mov
inc
pop
push
mov
jmp
loope
jns
xchg
insb
cmp
out
inc
inc
aam
jge
ret
jae
test
sbb
jmp
in
mov
add
pusha
inc
test
sbb
sar
loopne
mov
jge
and
push
aaa
xchg
xchg
add
ret
jle
xor
test
out
or
adc
jg
addl
leave
jge
arpl
add
lods
cmc
mov
push
xchg
into
dec
divb
mov
sub
or
stos
jae
sbb
push
imul
mov
lahf
test
lea
adc
jmp
mov
sbb
ret
test
pop
mov
loop
daa
adc
out
adc
sub
lcall
add
ret
sbb
inc
mov
adc
dec
and
pop
and
addr16
andl
add
or
sbb
sub
or
cmp
repz
jb
push
mov
sub
sub
add
inc
cwtl
inc
or
push
adc
sbb
inc
mov
leave
rclb
mov
sub
enter
divl
mov
xchg
cltd
jbe
ror
sarb
addl
inc
add
rcll
dec
popa
jge
insb
push
loop
jns
repnz
scas
andb
push
push
enter
pusha
insl
popf
mov
jbe
pop
adc
add
dec
jmp
jbe
add
jno
cmp
jle
pushf
sub
add
cltd
mov
sbb
cmp
pop
std
stos
popf
push
scas
out
dec
imul
or
fmul
or
sbb
loope
ficomps
mov
cwtl
or
inc
mov
stos
fisttpl
mov
pop
gs
jne
out
add
outsl
cld
mov
mov
imul
jmp
and
mov
test
ss
jo
adc
scas
fwait
into
shlb
sbb
outsl
jg
dec
icebp
test
adcl
std
push
mov
xor
aad
mov
gs
sbbb
pop
fwait
lods
jo
popa
xchg
xor
cmpsb
push
scas
xlat
xchg
fcomip
push
dec
iret
mov
int
adc
adc
pop
mov
bound
orb
add
mov
add
subl
and
int
xor
ja
ds
cmp
pop
fiaddl
je
addr16
jae
lds
ss
add
lcall
jnp
jno
push
idivb
fdivp
push
jo
push
roll
or
cwtl
sub
ljmp
jae
xor
int3
int3
cmp
in
mov
insb
sub
jmp
aaa
pusha
fidivs
xlat
loopne
and
xlat
std
mov
fbld
dec
inc
adc
or
addr16
jg
xor
sbb
movsl
jno
hlt
rolb
or
aam
lods
mov
insb
jb,pt
xchg
inc
cmp
push
sbb
mov
stc
push
pop
call
inc
sub
nop
ret
dec
sahf
jo
xchg
bound
mov
into
jbe
mov
jbe
xor
and
std
iret
lds
pop
pop
loopne
inc
sbb
cmpsl
or
inc
sbb
dec
mov
inc
sti
xor
mov
hlt
inc
and
pop
add
stc
add
int
push
les
pop
outsb
mov
pop
jmp
cltd
cmpsl
sub
push
or
adc
cmp
rcr
dec
or
std
mov
push
das
cmp
mov
jle
std
addb
cmp
mov
fstpl
push
aaa
adc
cwtl
outsl
mov
fld
shll
mov
imul
jb
mov
fbld
ja
sub
add
rcll
mov
mov
pop
hlt
pop
sbb
lds
ret
xchg
jno
inc
cltd
inc
idivl
xchg
or
cmp
xchg
cmp
scas
les
push
cli
pop
and
push
sti
cmp
mov
lret
adc
dec
dec
add
stc
outsb
adc
aas
dec
xchg
inc
adc
lea
pusha
mov
lds
inc
inc
jno
inc
pop
mov
ljmp
cmpsl
mov
sarl
dec
scas
mov
sahf
or
in
rcl
pop
pushf
xlat
pop
adc
sub
adc
out
stos
hlt
test
stos
jmp
xor
neg
pop
pop
rorb
lret
jg
aam
imul
add
fadds
div
pop
into
mov
push
and
push
xorl
xor
mov
adc
das
test
lock
stc
push
lods
ja
jp
dec
lods
pop
xchg
mov
test
lret
stc
ja
mov
sub
out
cmc
bound
xchg
mov
dec
aad
pushl
hlt
out
xchg
push
xorl
pop
das
aam
xlat
loop
ljmp
and
or
push
notb
insb
sub
sti
mov
push
shr
je
xchg
jne
lods
jae
push
cli
loop
cmp
adc
mov
nop
testb
mov
push
pop
popa
inc
pop
push
pop
das
movsb
or
sbb
lret
lcall
mov
icebp
add
mov
test
cmpsl
fnstcw
dec
insl
int3
mov
sbb
adc
xchg
shll
jecxz
mov
sti
into
or
imul
jnp
cli
dec
rcr
lods
in
mov
loopne
push
into
cwtl
xlat
bound
scas
mov
out
sbb
cmc
adc
iret
fisubrs
xchg
or
mov
add
aas
inc
cmp
and
adc
outsl
sub
cmc
jmp
mov
pop
neg
into
fstpt
js
jl
shlb
sbb
sub
add
pop
pop
test
xchg
cwtl
orb
fwait
pop
or
pop
ljmp
shll
je
pop
cmpb
cmp
sbb
cmp
or
fbld
or
mov
aas
xchg
mov
mov
adc
pusha
int
imul
add
inc
cwtl
jl
sbb
gs
movsb
sarb
popa
jbe
daa
inc
cmpsb
lea
lods
cmpsb
movsb
jno
and
and
pop
lret
pop
lods
push
or
cmpl
sub
xor
rcll
ljmp
test
adc
push
cmp
je
mov
mov
mov
fcompl
mov
push
roll
sti
in
std
scas
fstl
in
lods
movsl
or
cmpsb
cmp
sbb
fists
xlat
adc
fnstsw
cmp
popa
add
cmc
in
in
pop
je
lcall
cmpsl
sahf
insb
outsb
add
add
sahf
loop
cwtl
out
mov
mov
mov
sbb
add
sub
in
adc
xchg
and
test
icebp
daa
push
adc
adc
mov
jl
ja
jl
cmp
pop
pop
out
pop
cltd
xchg
cs
cmp
pop
xchg
and
xchg
sbb
std
mov
fnstcw
out
xchg
mull
adc
in
mov
js
mov
fwait
adc
pop
popa
pop
xchg
shll
mov
or
aaa
inc
or
mov
jmp
fs
cmp
mov
dec
in
adc
popa
lcall
adc
arpl
es
xor
rolb
das
mov
adc
mov
xchg
inc
inc
data16
movsl
inc
ficoms
or
mov
xor
mov
xor
inc
and
xchg
jnp
mov
btsl
ret
aad
les
jae
xchg
ljmp
inc
into
pop
clc
adc
das
pusha
push
mov
jle
mov
sub
adc
imul
pop
out
aad
shll
pop
adc
mov
je
pop
xor
sub
or
movsb
testl
xor
pop
test
ja
push
jo
in
mov
icebp
pop
mov
mov
pop
outsb
pop
pop
dec
cltd
cli
adc
inc
jns
int3
mov
xor
ret
out
jg
jge
adc
jno
adc
in
ror
sbb
cmpl
dec
arpl
or
mov
pop
mov
cmp
test
pushf
xor
mov
stos
mov
or
sbb
push
and
add
out
pop
or
xchg
lret
and
stos
adc
pop
fidivs
or
in
insb
push
das
in
dec
insl
lret
push
scas
icebp
push
lahf
adc
out
mov
sti
daa
mov
data16
fwait
sbb
push
pop
push
mov
popf
pusha
call
filds
pusha
sub
pop
pop
and
int3
lret
inc
movsl
dec
mov
mov
sbbl
or
clc
dec
les
pop
sbb
and
lcall
lods
jae
notb
jecxz
sar
sub
push
push
das
xchg
push
sti
or
into
mov
pop
ja
inc
adc
dec
jae
ds
mov
ret
std
out
lret
bound
add
adc
sarl
mov
stos
add
and
mov
enter
jae
dec
test
jle
push
push
sub
lods
leave
sahf
push
xor
jl
and
cli
add
sbbl
jae
jge
mull
nop
push
hlt
xor
sub
mov
lods
cmp
jb
sahf
lods
fwait
divl
fcompl
jne
daa
or
cmp
fmull
inc
xchg
jns
test
push
int3
pop
mov
mov
mov
jp
inc
sub
jno
rcrb
lret
xchg
inc
jae
pop
mov
cwtl
mov
fmull
and
arpl
xchg
xor
imul
sbb
xor
sub
out
leave
push
jle
jb
popa
sub
dec
pop
mov
jo
stos
pop
push
cmpsb
cmp
dec
in
or
sub
mov
or
sarb
inc
int
loopne
insl
mov
xor
xlat
pushf
xor
dec
push
xor
rcll
and
addr16
and
sub
jb
lock
in
mov
add
cmpl
mov
sbb
inc
es
pushf
aad
jae
xor
mov
push
jbe
mov
ds
jl
xor
dec
rcrb
fcomps
mov
mov
in
and
inc
inc
jmp
roll
dec
mov
add
push
jno,pn
out
sti
roll
lcall
mov
add
mov
mov
pop
jo
sub
movsl
aaa
jne
int3
sub
cs
aaa
int
aam
daa
shll
std
add
dec
imul
stc
shl
test
sub
pop
es
insb
insl
mov
push
mov
sbb
inc
jae
jge
xchg
dec
stos
push
inc
aad
push
cmpl
push
data16
add
ljmp
xchg
mov
inc
pop
fwait
sbb
jl
push
out
mov
out
dec
mov
mov
jmp
imul
cwtl
outsb
fdivl
fldenv
push
xchg
add
outsb
mov
cwtl
je
sbb
rclb
lret
xchg
xor
sub
ja
jmp
pop
in
faddl
test
mov
dec
movl
xchg
push
rcll
stc
inc
or
adc
push
pop
mov
push
pop
jmp
movsl
ret
aam
mov
test
and
mov
and
mov
mov
ss
test
mov
aas
xchg
adc
sbb
bound
mov
mov
dec
cwtl
or
scas
mov
or
inc
mov
data16
aaa
in
mov
xor
push
mov
mov
dec
pop
cmpsb
sbb
cs
idiv
sarb
popl
xor
mov
jns
cltd
jp
test
jp
arpl
push
mov
pop
bound
mov
andl
pop
sbb
inc
inc
mov
or
aam
or
in
fcomp
jmp
or
out
push
ja
pop
imul
movsl
mov
inc
daa
into
jbe
nop
jno
stos
test
inc
mov
cltd
out
dec
pop
sbb
mov
hlt
mov
dec
dec
xchg
mov
cmp
ss
jge
and
pop
popa
pop
into
mov
scas
push
add
inc
xlat
out
ficompl
stos
inc
sbb
les
xchg
and
sbb
cli
scas
jmp
stos
add
js
mov
mov
aaa
repnz
fsubs
mov
addr16
scas
lret
mov
mov
cmp
push
les
dec
sub
jp
bound
ud1
fdivrp
icebp
sub
push
jmp
movsl
add
push
test
cmpsb
pop
xchg
adc
cmpsl
push
aaa
in
or
aam
in
push
adc
push
test
inc
dec
add
cli
inc
ljmp
jbe
xchg
sub
push
add
icebp
mov
pop
ja
mov
mov
mov
and
fsubr
add
cmp
rcll
pop
lret
xchg
mov
int
rcrl
xor
xchg
adc
cmp
jae
mov
push
pop
jg
lret
mov
icebp
mov
ret
clc
push
pop
dec
movsl
inc
fnstenv
inc
repz
shlb
test
flds
push
aad
mov
sbb
loope
jmp
mov
sbb
call
pop
out
lods
ret
nop
or
cmp
imul
aad
insl
leave
dec
jecxz
jne
add
mov
enter
mov
enter
inc
imulb
nop
add
pop
lds
jecxz
pop
adc
pop
std
mov
jge
clc
pop
out
mov
mov
stos
push
mov
lret
push
fcompl
bound
mov
cld
insb
mov
aad
mov
mov
sub
mov
push
add
add
add
sbb
pop
pop
lock
inc
enter
jae
jmp
cmp
inc
adc
jmp
in
mov
dec
mov
clc
xlat
scas
int3
lcall
insb
popa
int3
add
jle
rolb
push
add
mov
cwtl
lods
dec
dec
dec
push
jmp
nop
and
in
pop
sbbl
jl
jb
stc
stc
xor
out
ret
mov
mov
into
sbb
adc
dec
pusha
in
mov
movsb
loope
add
mov
xor
jle
mov
out
ja
dec
cltd
mov
xchg
popf
cmp
negb
or
stc
bound
push
mov
ljmp
test
cli
sbb
sbb
mov
xor
cmc
loopne
stc
mov
pop
into
inc
pushf
add
lock
mov
adc
ss
mov
sub
aad
sub
icebp
insb
mov
bound
fsubl
or
cmp
inc
sbb
push
mov
cmp
out
negb
sbb
mov
aas
or
aaa
enter
or
push
mov
mov
push
repnz
andl
pusha
stos
mov
test
adc
ja
pop
sbb
loop
jle
neg
fcmove
mov
or
mov
xlat
fadds
jg
clc
pop
cmp
in
fyl2x
mov
scas
in
cld
jge
xchg
mov
nop
xor
jge
sub
cli
jne
iret
sbb
push
mov
insb
insb
test
mov
mov
mov
jno
xchg
gs
inc
and
in
testb
inc
cmp
sbb
lds
mov
push
movsl
pop
mov
sbb
addr16
in
fisubrl
push
out
fstpt
push
stc
xor
dec
aam
pop
arpl
inc
lock
jge
ror
mov
sbb
iret
clc
call
adc
push
pusha
cli
leave
jmp
sub
ja
cli
sub
lret
cmp
dec
cmc
or
push
sbb
jle
pop
sbb
fs
ja
mov
mov
addb
cmpsl
adc
sbbl
lock
dec
movsb
or
loop
int3
jb
mov
mulb
daa
shl
out
out
push
test
outsb
and
xchg
xchg
dec
xlat
lods
int3
mov
add
xor
xchg
or
xchg
lods
mov
pop
jmp
inc
mov
rorb
insl
adc
movsb
stos
pusha
cmpsb
jecxz
pop
adc
pcmpeqb
jnp
lret
insl
xchg
mov
notb
sahf
data16
cmp
sbb
insl
and
rolb
xor
mov
mov
and
lods
insb
mov
dec
xor
dec
xchg
test
cmpsb
lcall
sbb
ret
test
sub
inc
xchg
mov
sbb
loope
in
out
xor
adc
fstpl
ss
lret
jmp
xor
mov
rclb
xor
popa
test
mov
sub
pusha
push
scas
cmp
stos
iret
inc
call
mov
jge
mov
or
lret
and
inc
movsb
das
cmp
dec
cmp
xor
mov
movsb
inc
shrb
andl
xchg
add
sub
dec
push
iret
nop
sbb
in
ja
loope
mull
mov
stc
sub
push
xchg
cmp
mov
xor
jnp
push
addb
pop
lcall
mov
add
jns
lods
adc
sub
jl
pop
xchg
outsl
call
jg
stos
sbb
hlt
pop
jmp
mov
insl
cmc
mov
decl
sub
xor
adc
mov
or
cs
imull
pop
es
jle
pop
xchg
shlb
call
ret
cmp
jne
pop
inc
mov
dec
mov
fwait
mov
sbb
xchg
xchg
lods
sbb
sbb
mov
inc
mov
insb
pop
mov
sub
iret
jne
adc
std
popa
add
or
mov
movsl
fsubr
xor
xchg
jns
push
outsl
idiv
dec
sub
mov
cs
sbb
lock
adc
or
lods
jno
add
push
insb
jnp
dec
and
insb
mov
lcall
fwait
mov
add
pusha
pop
ja
fwait
test
push
subb
addb
repnz
jae
or
ljmp
pop
mov
or
cmp
mov
cmp
mov
and
test
pop
data16
mov
fisubrs
fldt
dec
push
and
pop
test
jb
mov
jl
sbb
or
jo
jl
or
insb
push
jp
sub
sub
mov
mov
ljmp
stos
add
or
sbb
in
cmp
push
mov
out
cltd
xchg
test
jecxz
dec
int
jb
lea
push
es
aaa
mov
inc
gs
add
hlt
adc
cmp
scas
mov
sahf
fstps
lds
test
test
loope
bswap
add
xchg
xlat
cmp
stos
mov
je
test
inc
xor
inc
ret
mov
pop
shl
les
insl
jne
jle
fucomi
cld
int3
stos
ja
adc
xor
repnz
pushf
mov
or
andl
lcall
repz
cmc
adc
loopne
or
mov
cmp
jp
sub
dec
ret
mov
and
sbb
je
sub
stc
sarb
out
xor
das
and
inc
inc
push
cmpsb
pop
mov
outsb
rcrb
mov
cmpsb
insb
jbe
mov
lret
mov
sbbl
mov
jg
les
push
xor
ret
inc
sub
mov
out
dec
out
enter
jbe
jecxz
ljmp
les
sub
std
mov
push
xchg
pop
or
divl
sub
mov
push
jecxz
inc
mov
push
scas
aas
lret
and
push
das
adc
les
mov
pop
jbe
push
or
std
lods
adc
cmc
adc
cmp
fidivs
sti
cmp
xchg
test
mov
adc
ss
mov
cmp
cmpsl
xor
jmp
xchg
jbe
jbe
cmp
xor
jp
cltd
xor
fildll
jp
outsl
je
test
jecxz
or
xchg
add
leave
or
mov
js
dec
int3
jge,pt
jne
dec
rorb
nop
mov
pop
mov
cltd
inc
gs
es
fmulp
inc
dec
xor
lret
aad
js
mov
inc
add
cltd
adc
mov
mov
rorb
popf
xchg
sub
sub
sub
sti
test
sbb
ja
jns
stos
fwait
jge
push
inc
sub
xchg
xchg
pusha
pop
mov
push
stos
xchg
jno
stos
lock
sahf
out
negl
scas
rcr
xchg
add
imul
roll
sbb
out
cs
pushl
mov
push
arpl
add
sbbb
sbb
inc
mov
jecxz
push
out
mov
ret
bound
cmp
ficoml
sar
add
dec
ss
insl
dec
jge
xor
xor
aad
into
dec
insl
mov
outsl
push
aaa
or
push
stos
int
shrl
jmp
leave
inc
xor
sbbl
mov
pop
jl
mov
dec
inc
clc
jecxz
and
add
cmp
sub
push
fisubrl
cmc
fsubrs
cld
xor
dec
push
adc
push
scas
xchg
and
test
push
shll
fcom
dec
aas
fidivs
or
daa
fwait
dec
dec
enter
mov
adc
mov
rcr
sbb
bound
leave
inc
mov
std
push
xor
sar
ret
fcoml
fcompl
fildl
mov
enter
xchg
aam
xchg
push
sbb
adc
aad
sahf
push
sub
sbbl
sub
adc
push
and
movsl
stc
jbe
movsl
jge
xchg
cmp
mov
daa
push
or
int
jbe
xor
jbe
int
xchg
cmp
movsb
dec
pop
adcb
fdivrs
xor
jb
pmaxub
jle
fwait
lock
push
sbb
setns
add
pop
xor
jnp
addr16
fistpl
repnz
jp
mov
negb
mov
stos
mov
stc
fstpl
es
imul
mov
adc
imul
sub
mov
cmp
int
into
stos
lea
xchg
dec
adc
xchg
data16
and
push
hlt
push
out
jg
mov
cmp
sbb
or
leave
push
cmp
scas
mov
mov
inc
mov
mov
test
and
adc
popf
push
shlb
jb
iret
cmpl
or
test
movsb
mov
or
rcll
mov
and
movsb
jb
sub
mov
adc
repnz
inc
insb
mov
insb
addr16
in
jno
jno,pt
movsb
and
jns
sbb
gs
jns
jnp
lock
dec
xchg
mul
pushf
mov
mov
imul
gs
ror
xchg
mov
cli
movsb
xchg
das
sub
inc
cmpsb
sub
pop
insl
popa
and
cmp
xor
adc
out
gs
outsb
scas
enter
popf
daa
popf
jbe
ja
inc
jmp
add
jecxz
fcoml
push
adc
or
negb
repz
xchg
scas
leave
imulb
jmp
cmpsl
sub
mov
sbb
add
cmc
ljmp
lea
scas
and
scas
movsl
push
mov
sahf
bound
jb
lfence
icebp
xchg
pop
rcr
cmp
cmpb
insb
push
bnd
mov
and
sub
mov
sub
mov
xor
lret
shl
add
adc
pusha
push
ficomps
jle
lds
mov
adc
std
pop
pusha
fcmovnbe
ja
sbb
mov
ficomps
sbb
cwtl
pop
aam
xlat
in
or
cmc
sub
sub
jmp
dec
or
cli
push
adc
jecxz
dec
inc
push
or
lods
mov
cmp
scas
andl
mov
out
dec
aam
test
lods
fsubl
lcall
addl
fs
cmp
pop
stos
pop
jbe
push
je
ret
or
fxch
fwait
push
jns
mov
cwtl
or
pop
jae
icebp
mov
inc
inc
stc
shrl
out
loop
adc
jno
imul
and
sbb
fidivs
sub
scas
cltd
mov
js
icebp
in
fs
sub
jg
stos
and
in
mov
dec
scas
sbb
cmpsb
cmp
add
sbb
out
xor
daa
xor
mov
leave
lahf
loop
add
cs
push
and
icebp
adc
out
jp
pushf
clc
in
sbb
sub
xorb
xchg
xor
xchg
pop
stos
jno
bswap
inc
je
dec
imul
cmp
les
push
in
lret
xor
stos
xchg
popa
dec
dec
mov
jg
pop
clc
lds
shrd
lods
pop
cmp
mov
das
rorb
fcoms
pop
adc
sbb
xor
dec
adc
test
stos
mov
adc
lahf
inc
or
fisubrl
jnp
adc
int3
xchg
bound
ljmp
pushf
inc
rcll
mov
outsb
push
add
mov
loop
xchg
lret
mov
jo
mov
xor
jge
or
add
add
ja
jp
mov
dec
lea
pop
in
mov
lret
jbe
cmpsl
sub
push
testb
mov
mov
imul
xchg
iret
pop
divps
adc
arpl
cmc
or
nop
int
repnz
test
fldcw
push
inc
popf
jbe
in
mov
cmp
or
imulb
dec
push
sahf
test
lods
adc
icebp
shll
xor
fsubrs
and
dec
inc
rcrl
dec
jno
push
jae
imul
or
cltd
stc
xor
sti
js
test
decl
jae
dec
fdivrs
dec
push
pushf
sbb
sub
sbb
cmpb
enter
loopne
cld
les
xchg
rcll
insb
jb
aas
inc
test
hlt
adc
out
xor
jbe
aam
sub
or
sbb
sbb
inc
pushf
ret
stos
jle
adc
mov
inc
jmp
xchg
add
ficompl
pop
push
dec
jb
push
mov
add
inc
int3
pop
mov
outsl
incl
enter
pop
popa
xor
add
lea
push
cli
push
in
push
fstl
lds
fmuls
inc
insb
jae
inc
int3
inc
shlb
lret
sub
dec
in
ss
sets
mov
or
pop
out
cmp
push
jnp
push
ret
and
cmp
sub
fwait
mov
mov
pusha
test
mov
adc
inc
mov
outsb
aaa
iret
sbb
sti
lods
jmp
dec
sbb
ret
test
mov
dec
enter
loopne
cs
inc
andb
int3
lret
push
jmp
popa
movsb
jo
leave
lret
test
and
mov
jmp
gs
sti
movsb
sti
dec
xchg
adc
xchg
cmpl
cmp
lret
sub
rcll
sbb
mov
xchg
fnstenv
sub
in
shrb
nop
inc
inc
rclb
mov
imul
loop
xchg
xor
pop
je
ficomps
cli
inc
insb
cmpsl
pop
add
jne
aaa
inc
movsl
popf
and
xor
lock
cmpsl
push
xchg
jg
dec
jae
inc
insl
dec
xor
and
xchg
shl
jp
inc
adc
cli
mov
lods
test
inc
jo
pushf
cmp
es
sbb
sbb
fistl
jb
fcmovne
mov
dec
mov
mov
push
ja
bound
sub
daa
jno
test
jg
mov
or
out
inc
mov
mov
sbbl
mov
lods
xchg
sarb
aas
hlt
js
and
mov
mov
push
pop
add
das
scas
mov
adc
xlat
imul
cli
mov
icebp
out
scas
les
ds
rcl
sub
in
shll
mov
das
mulb
mov
and
push
pushf
ret
cmp
bound
in
lea
outsb
shlb
mov
int
mov
mov
jg
iret
mov
in
aas
fadds
clc
fidivrs
aam
in
cld
lret
dec
mov
jb
aaa
insb
popfw
jecxz
lahf
in
mov
repnz
shl
jecxz
or
mulps
cmp
hlt
xor
clc
sub
mov
stos
dec
das
movsb
mov
test
dec
in
cmp
gs
scas
stc
stc
pop
xor
bound
lea
lock
push
mov
mov
sbb
adc
push
jbe
xor
xor
inc
mov
inc
ret
aam
insb
add
pop
in
sbb
lds
or
push
pop
sbb
scas
inc
shlb
cmp
inc
mov
adc
push
jge
xor
divb
inc
clc
push
shl
pop
push
call
adc
pop
mov
mov
jl
lcall
push
push
xor
and
mov
scas
jnp
subl
pop
inc
mov
js
push
notb
mov
dec
mov
push
and
mov
addb
loopne
popl
stos
push
jne
les
mov
sahf
into
mov
mov
or
xchg
push
pushf
xor
int
mov
add
lahf
mov
sbb
and
mov
or
mov
hlt
xor
pop
mov
and
or
movsb
jl
xchg
mov
jge
or
fiadds
aam
push
mov
push
addr16
push
push
roll
cmc
pop
cmp
mov
jl
loope
mov
jmp
mov
es
nop
mov
stos
pop
insb
ss
or
xchg
in
aas
mov
mov
adc
dec
fiaddl
cmp
xor
popf
cli
cmpsl
rcrb
aam
push
xchg
mov
push
xor
cli
pop
mov
dec
xor
mov
js
mov
scas
jb
pushl
mov
aam
add
xor
adc
imulb
sbbb
push
fcompl
lea
adc
lea
sub
testb
jg
adc
add
sub
xchg
gs
mov
mov
rclb
jmp
out
ljmp
dec
daa
dec
addb
ror
xorb
lock
out
rcr
lret
push
mov
addr16
or
mov
out
adc
popa
jne
push
mov
insl
sub
lods
int3
loopne
and
lcall
fisttpl
xchg
or
mov
pop
lcall
jne
ja
and
adc
and
jno
rolb
dec
das
js
aam
mov
adc
dec
xlat
mov
jg
pop
jg
testl
dec
lea
sub
adc
mov
cmpsl
fsubr
pop
popa
add
jmp
mov
mov
xchg
or
das
push
add
nop
adc
imul
pop
sub
daa
adc
jg
mov
ljmp
insl
negb
imul
sahf
out
iret
add
mov
and
xor
gs
or
jmp
dec
shr
inc
mov
dec
pop
ss
loope
adc
cmc
push
cmpsb
adc
dec
sti
dec
mov
xor
dec
cmp
mov
push
dec
fwait
out
movsb
es
fldt
pop
movsb
std
cmp
scas
movsb
pop
lahf
mov
xchg
sbb
fistpll
in
mov
and
jbe
out
mov
rolb
ret
push
jmp
aaa
popa
inc
sub
adc
sub
mov
idivb
push
xor
or
xor
sub
mov
icebp
jb
mov
nop
imul
int3
jecxz
sbbl
push
jp
xchg
pop
sub
outsl
mov
jno
lret
mov
test
popa
jl
outsl
and
push
aad
je
es
push
movsb
jl
dec
sbb
das
adc
aas
sbb
lea
insl
cmp
aam
sub
push
pop
xchg
dec
movsl
sub
ja
pop
lcall
lret
hlt
mov
cmp
xor
push
sbb
ds
mov
push
add
pop
enter
pop
adc
or
jno
xchg
pop
fwait
outsl
inc
or
cmp
push
pop
add
cmp
inc
cmc
push
mov
adc
outsb
mov
adc
iret
sub
adc
pop
sti
fbstp
or
jp
add
cld
mov
shl
add
aaa
aas
sbb
cmp
push
xor
pop
cltd
push
inc
and
test
xlat
mov
cli
xlat
lock
add
int
xor
addr16
dec
enter
sub
push
mov
push
popf
sub
or
stc
rcll
push
rolb
xchg
daa
pop
mov
out
orb
push
mov
cmpsl
movntq
frstor
mov
lea
lea
sbb
cli
je
mov
push
das
jge
mov
and
dec
ljmp
and
subb
repnz
push
mov
clc
mov
aad
fidivrl
sub
scas
pop
sub
in
and
ror
push
imul
in
lcall
push
loope
loope
ret
mov
iret
pusha
pop
lret
jmp
or
fidivrs
sub
clc
fcomi
adc
inc
rol
repz
sub
scas
loopne
cmp
out
dec
fisttpl
xor
fidivl
aam
fs
sbb
and
test
pop
mov
or
aas
loop
sbb
lea
and
leave
xor
add
or
adc
xor
or
cld
mov
mov
psubd
gs
adc
lock
in
mov
sar
push
repnz
pop
jbe
sbb
mov
mov
shl
jo
push
xor
inc
dec
dec
jb
lea
or
rcrb
pop
ficoml
push
adc
loope
loop
mov
fs
cmp
in
aas
pusha
addb
jo
push
ret
imul
cmp
pushf
sub
pusha
out
push
add
xor
scas
jl
stos
sub
or
pop
imul
adc
test
jae
or
dec
push
dec
jb
pusha
sub
push
sbb
js
mov
xor
inc
daa
sbb
lds
add
rcr
cmp
add
push
mov
mov
rcll
jne
or
or
add
sarb
jl
jb
ret
divl
mov
dec
dec
push
jecxz
jle
popa
repz
cwtl
pop
mov
iret
icebp
add
xchg
cmp
stos
push
aas
fldl
push
inc
mov
push
or
fisttps
ret
inc
add
outsl
xchg
mov
push
les
dec
and
scas
or
mov
push
mov
fwait
mov
mov
ljmp
es
sbb
ret
fiaddl
cmp
mov
xor
rorl
add
fwait
subb
test
mov
jle
adc
and
fdivrs
mov
popa
stos
cmp
clc
push
jle
cmpsb
cmp
movsl
sbb
adc
mov
int3
xchg
push
jns
xor
xchg
add
dec
inc
call
jno
cmpsb
pop
jne
mov
lret
sub
lret
dec
cmp
dec
add
shll
ss
scas
dec
jae
mov
inc
je
fadds
movsl
inc
int3
cmp
lds
and
ror
and
std
and
xchg
stc
jecxz
movsl
aaa
and
push
dec
fcmovbe
mov
aam
sbb
cmp
in
notb
add
outsb
mov
loope
adc
add
stc
and
cmp
xor
mov
push
ret
mov
inc
loop,pt
repnz
nop
arpl
scas
mov
aas
inc
ljmp
aas
cmp
fistl
lret
pop
or
out
and
pop
aam
sbb
cmp
cmpb
inc
lea
scas
pop
inc
movsb
ret
adc
pop
pop
or
fsubl
mov
and
jbe
inc
ret
lds
sbb
xlat
push
push
lahf
xchg
cmp
xchg
scas
fldenv
pmaxsw
fldt
and
push
iret
and
in
pop
out
fcmovu
sar
sbb
test
cli
mov
push
int
mov
stos
leave
aaa
ss
lods
mov
outsb
int3
cmp
out
xchg
in
mov
sbb
mov
gs
jne
jp
ffree
push
cmpsb
jmp
inc
push
je
aaa
pop
or
jmp
push
shll
xor
lcall
fisttpl
inc
mov
and
ss
mov
cwtl
cmp
repnz
adc
sbb
fsubrp
sti
movq
adc
repnz
sbb
sub
inc
lahf
jb
in
dec
decl
xchg
fiaddl
out
dec
and
mov
loopne
mov
xchg
mov
cmpsl
pop
mov
mov
movsb
insb
orl
test
sahf
cmc
mov
in
jge
cltd
mov
lods
ss
ljmp
cmp
add
push
aam
cmpsb
add
add
inc
adc
shrb
cli
jbe
ret
push
popf
mov
xchg
add
jb
into
cmc
mov
mov
xchg
xchg
test
inc
sub
push
faddl
jb
mov
dec
sub
inc
sbb
ficoms
push
cwtl
repz
decl
push
mov
fwait
add
stos
pop
cwtl
fdivl
int3
pushf
mov
add
popf
andb
mov
pop
add
pop
stc
mov
into
inc
aas
pop
testb
push
subps
cmp
out
nop
data16
popa
push
pop
repnz
fs
mov
das
nop
adcb
ret
jbe
and
and
aas
mov
xor
mov
or
aaa
popf
cld
cli
push
mov
xchg
bound
cs
aas
and
pushf
icebp
push
loop
mov
out
mov
push
sub
adc
in
mov
gs
mov
cmp
mov
sbb
inc
iret
outsb
mov
outsb
jge
jne
repnz
pop
mov
adc
cmp
cwtl
jmp
inc
mov
jl
push
mov
mov
and
xchg
stc
incb
mov
ret
sbb
xor
mov
in
xor
cld
mov
mov
adc
pop
push
or
aas
pop
or
mov
mov
adc
mov
and
iret
sti
subb
jne
int3
lods
mulb
mov
inc
shll
add
enterw
outsb
jbe
ja
push
popf
jp
ljmp
std
fimuls
mov
push
jns
push
cli
pop
fwait
sbb
popa
dec
pop
mov
xor
jo
pop
lods
xor
outsl
jno
mov
pop
add
popf
rcr
outsb
sub
sbb
jl
cmpsb
popf
jns
cltd
adc
cmpsl
cmpsl
jl
xchg
mov
adc
gs
pushf
test
insl
inc
loop
movsb
pushl
xor
mov
dec
jae
adc
dec
scas
loope
push
inc
in
pop
aad
or
enter
dec
lcall
cmp
out
xor
xor
and
test
mov
lcall
ljmp
clc
sub
xor
push
dec
shll
sbb
mov
jns
mov
push
inc
adc
in
pop
sbb
jge,pt
test
outsl
inc
movsb
sub
mov
les
add
fwait
and
pop
lea
adc
in
push
cmp
pop
mov
inc
cmp
cltd
fwait
mov
cwtl
sbb
push
sub
sbb
data16
out
jecxz
pushf
dec
add
add
mov
cli
js
aam
sub
jecxz
je
in
loope
ret
pop
mov
push
push
in
xor
ja
dec
inc
push
jns
fs
pop
cli
clc
test
inc
stos
enter
ret
cmpsb
jbe
iret
push
xchg
xchg
pop
inc
cmp
movsl
mov
neg
lock
jle
dec
jnp
imul
sub
push
push
push
cmp
pop
mov
or
out
cmp
shlb
fidivrl
mov
adc
and
aaa
sub
xor
xchg
push
rcll
ret
sub
push
sti
sbb
loop
sub
sub
lret
fistps
test
add
dec
or
cmp
in
sub
jle
icebp
dec
pop
int3
out
mov
leave
pop
jae
and
mov
add
pop
fs
and
push
inc
and
imul
and
xchg
pop
push
in
repz
lret
ret
js
sub
and
int
test
adc
adc
out
mov
cmc
mov
pop
mov
adc
push
mov
idiv
or
push
enter
ficompl
sub
incl
or
jnp
push
repz
and
mov
jbe
lcall
sub
cs
lret
dec
fldl
jle
cmp
inc
stos
bound
cli
sahf
or
stc
dec
aaa
pop
cld
push
push
mov
cs
xchg
pop
xor
out
xchg
and
mov
and
insl
sahf
xor
inc
lahf
sbb
xchg
iret
out
mov
leave
xchg
enter
dec
xlat
lock
sbb
cmp
repz
int3
fiaddl
sti
in
xor
mov
test
dec
xlat
pop
or
mov
aad
aam
jo
shll
push
add
dec
movb
fisubrs
enter
sbb
out
leave
push
clc
bound
sbb
add
xchg
aad
cmpsl
xor
and
cmc
add
incl
loope
push
loope
mov
push
repnz
icebp
xchg
inc
fwait
idiv
dec
iret
arpl
cmpsb
popf
das
out
lret
push
daa
imul
xor
and
or
and
repnz
pop
add
xlat
idivl
xor
sbbb
es
lahf
dec
push
inc
fwait
mov
pop
pusha
and
loope
push
sub
lret
repnz
xchg
jl
leave
push
inc
jns
stos
out
out
fwait
pop
jecxz
sbb
jg
loop
xchg
jbe
roll
popa
push
fwait
push
push
pop
repnz
cmc
mov
loop
imul
pop
push
inc
push
or
sub
jno
orb
daa
jmp
xchg
fists
xor
outsl
outsb
cmp
test
rorl
jno
xor
jg
bound
loopne
dec
mov
or
test
xor
insb
sahf
clc
mov
cmpsb
push
mov
pop
mov
xor
lods
fdivrp
into
repz
xor
mov
inc
aam
idivb
mov
fsts
int
cmpsb
loopne
in
lods
stc
repnz
pop
imul
xor
aad
rcrb
sub
xchg
mov
testl
or
not
lea
jmp
leave
popf
jmp
ret
dec
fcoml
mov
pusha
shlb
or
aas
sbb
cltd
sbb
repnz
sti
jmp
mov
fstps
xchg
sbb
lret
push
or
inc
xchg
jns
mov
je
mov
jne
mov
sub
outsb
dec
jns
stos
sub
pop
iret
sbb
push
mov
sub
or
lods
inc
mov
arpl
xor
mov
sub
pop
ljmp
adc
sbb
ss
mov
outsb
inc
push
push
insl
ljmp
int3
and
cmpsb
mov
repz
fistpl
cmp
inc
cs
bound
or
lods
mov
gs
and
loopne
fwait
mov
jo
inc
pop
out
sbb
movsb
aad
jb
data16
ret
aaa
into
mov
pop
test
bound
sub
mov
nop
cmpsb
scas
jb
bound
and
mov
add
mov
aaa
js
jmp
imul
cmp
hlt
cwtl
dec
or
push
imul
cld
cmpsb
std
out
pop
pop
xor
push
add
inc
loope
push
mov
push
inc
inc
xchg
inc
repnz
jl
mov
aad
jno
lods
adc
mov
mov
and
clc
enter
scas
pop
jmp
push
push
mov
imul
sbb
xor
sbb
popf
insl
divl
aas
popl
mov
jge
int3
pusha
je
or
scas
bound
mov
sbb
jmp
aam
outsl
cmp
out
cmpsl
aad
ja
sbb
in
push
add
jge
rcll
stc
roll
in
std
popf
testb
mov
lea
sbb
push
lret
roll
js
lret
sbb
xchg
inc
fmull
push
std
stc
sbb
push
mov
fs
gs
push
push
stos
cmpb
popf
aam
popa
xor
jecxz
pop
lcall
sub
lret
adc
ds
cmp
cmp
xor
and
mov
pop
orl
cmp
cld
mov
and
pop
cmc
in
push
fsts
pop
repnz
cli
jbe
mov
pop
insb
mov
shlb
in
std
lret
inc
inc
mov
sub
ds
loope
and
mov
push
dec
jne
adc
int
push
out
je
and
test
ret
aam
add
pop
inc
cmp
shr
xchg
fwait
mov
aaa
scas
or
data16
popa
mov
leave
scas
adc
jb
cld
or
adc
mov
mov
adc
and
or
mov
loop
lahf
in
jnp
inc
cmc
pop
std
popa
aad
xor
push
out
add
fisttpl
and
aam
mov
push
xor
rolb
outsl
pop
mov
fsubs
icebp
or
insb
pop
shrl
ret
pusha
push
cmpb
pop
or
push
push
fisubl
jb
pop
push
les
pusha
popa
adc
ljmp
lret
roll
inc
inc
dec
sub
cmc
int
add
mov
push
fstpt
pushf
pusha
lods
cmpsb
fwait
pop
add
in
adc
sbb
jns
repz
adc
addl
jle
push
stos
loopne
shll
sbb
fimuls
pusha
lret
xchg
dec
popa
outsb
movsb
ret
sbb
sub
push
xor
sbb
out
push
in
stos
fdivl
sbb
push
adcl
into
mov
or
cld
jle
inc
inc
xlat
pop
mov
push
cmp
push
jecxz
dec
and
sahf
sbb
repnz
cmp
xor
ja
out
cli
insl
in
sbb
add
data16
and
mov
loope
inc
cmp
mov
dec
test
ret
cmp
add
rclb
xchg
inc
add
cs
jge
loope
scas
lret
ret
mov
dec
fcomps
repz
ds
jno
inc
adc
add
dec
aaa
test
nop
test
repnz
stc
loopne
mov
fsubrl
inc
int3
adc
xchg
out
in
lret
mov
cmpsb
xor
clc
test
data16
loop
sub
or
jmp
cmp
popa
inc
push
mov
mov
push
lods
adc
aaa
xor
out
dec
outsb
cmp
in
pop
mov
xchg
stc
dec
jle
enter
push
jl
adc
push
or
dec
sbb
cld
scas
lds
addr16
jmp
insl
mov
push
nop
imul
or
jl
pop
sarl
idivb
shr
lahf
sbb
mov
cwtl
mov
popf
jnp
or
outsb
sbb
pushf
les
roll
movb
shll
or
jnp
daa
mov
xchg
jge
lds
mov
jae,pn
call
imulb
ds
cmp
push
aas
cmpsb
je
shlb
lods
lock
leave
clc
out
mov
add
jns
jmp
mov
and
in
mov
sti
popa
imul
adc
pop
mov
aas
lret
pop
mov
ret
fnstcw
arpl
mov
xchg
lcall
stos
pop
mov
leave
je
repnz
jmp
cmp
repnz
inc
jno
in
xor
dec
inc
pusha
pop
mov
push
dec
inc
repz
mov
adc
jmp
or
jecxz
or
mov
mull
jmp
loop
or
fmuls
mov
mov
mov
test
and
mov
add
adc
cmp
es
clc
cmpsl
cmp
mov
push
addr16
cwtl
jb
adc
jecxz
lcall
pusha
cmp
sub
mov
adc
popa
push
jnp
cmp
sbb
lods
or
loope
stos
rol
sahf
jb
imul
cmp
ja
dec
mov
cmpsb
pushf
inc
adc
test
push
xchg
or
test
lods
imul
pop
leave
dec
cli
lea
outsb
push
lock
push
pop
mov
mov
int3
adc
push
aad
or
in
mov
jge
add
mov
ret
pop
std
lods
ret
fimull
add
or
mov
mov
test
xchg
outsl
jo
push
push
mov
jecxz
mov
repnz
lret
inc
stos
inc
arpl
inc
mov
pop
roll
dec
adc
jo
fistl
cmp
imul
aas
setge
fcmovnu
pop
cmp
ret
adc
ss
jp
sti
in
jb
lods
andl
icebp
stc
roll
adc
mov
into
cli
xchg
je
sub
push
xor
adc
cmp
jle,pt
aas
mov
test
dec
mov
or
add
or
push
inc
fbld
sbb
xor
stos
xchg
loopne
or
push
pop
sub
lods
adc
aam
cmc
aas
jnp
arpl
mov
mov
imul
insb
jo
fbstp
js
sti
aam
cmp
movsl
jmp
cltd
jae
dec
out
clc
xor
sub
fnstenv
ret
sarb
aad
and
cmp
iret
clc
dec
push
cs
push
ror
xor
adc
cmp
cmpsl
pop
mov
adc
push
pushf
and
inc
xchg
mov
scas
test
sbb
fiaddl
mov
inc
movsb
mov
push
outsb
ret
aas
cmpsb
loope
movsl
std
and
sub
mov
mov
mov
arpl
out
repnz
in
xor
xor
xorl
out
fstps
ja
enter
enter
testb
inc
icebp
dec
jg
mov
hlt
call
or
aam
arpl
mov
sub
out
mov
cmp
inc
xor
xchg
rcrl
or
stos
clc
fdivp
or
cmpsl
ss
sub
dec
mov
dec
test
xor
push
add
inc
scas
mov
cmp
add
adc
data16
int
xor
clc
push
jns
cltd
jle
push
push
repnz
flds
cmp
xorl
jecxz
repnz
or
sbb
add
mov
cltd
or
stc
xchg
jmp
sub
icebp
into
add
mov
fsubs
jge
push
push
xchg
inc
dec
sbb
fsub
mov
xor
add
fstl
test
outsl
jmp
addr16
xchg
stos
and
ss
divb
dec
sbb
mov
push
repnz
stc
ja
cmp
stc
and
dec
repnz
idivl
dec
dec
cmp
xor
push
dec
addr16
pop
subl
cmp
bound
in
cmpb
pop
jecxz
push
int
ret
push
sbb
cli
iret
outsb
sub
mov
mov
shlb
inc
and
inc
mov
sbb
test
xor
enter
sub
jecxz
cmp
push
lods
test
insl
roll
pop
insb
dec
roll
repnz
ficoml
pop
aaa
push
or
lock
xor
sbbl
dec
cmp
in
rcrb
lea
xchg
cmp
shrb
cmp
dec
insb
push
and
cmp
int
dec
mov
inc
aam
sub
inc
data16
int
jno
xchg
lods
jecxz
push
test
sbb
test
sbb
xchg
xchg
js
adc
fcoml
xor
movl
add
adc
fcompl
jl
jno
pop
or
adc
mov
sub
add
fidivrs
fidivs
in
xchg
ficoml
repz
and
push
fwait
push
mov
dec
dec
sub
sbb
cmp
inc
test
push
aas
push
stos
mov
add
pop
hlt
rclb
cmpsb
pop
rcrl
int
xor
or
xorb
or
pop
pop
and
mov
push
add
push
pop
adc
test
and
jno
insb
pop
pop
jmp
stos
mov
js
scas
add
xor
out
sub
jp
mov
push
leave
xchg
xchg
leave
jne
ljmp
test
popf
lock
popf
imul
inc
pop
popf
mov
adc
out
ljmp
jle
jp,pt
mov
scas
jmp
and
hlt
cmp
or
xchg
mov
outsb
lahf
inc
sarb
arpl
data16
fs
dec
stos
jnp
insl
mov
les
clc
rcr
stos
fadds
popl
fildl
jb
and
cmp
orl
jne
adcb
push
out
icebp
fmuls
push
adcb
insb
pop
mulb
test
cmp
pop
pop
sub
sbb
xor
sbb
clc
mov
pop
shrl
fistpl
fstp
cli
mul
outsb
in
in
into
in
sbb
lea
pop
loopne
das
cld
mov
and
test
mov
fwait
ljmp
out
and
pop
lds
je
adc
and
jo
rcll
xor
jnp
cltd
and
adc
cmp
sbbl
xor
xchg
pop
dec
xor
or
xor
pop
data16
scas
cmc
pop
push
mov
mov
sub
inc
or
adc
sbb
lcall
in
mov
mov
cs
jle
imul
icebp
ds
and
stos
aam
adc
sub
mov
mov
sahf
or
jns
aaa
shr
pop
imul
jbe
insb
test
and
notl
rol
lds
shlb
mov
int3
push
ss
lods
jb
lds
lea
cmpsl
loopne
fisttps
fimuls
dec
cmp
xor
adc
lcall
mov
testl
cmp
dec
movups
add
lahf
repz
sbb
enter
adc
jno
jno
loop
inc
adc
push
imull
pop
lret
sbb
mov
fisttps
aas
fs
scas
fs
shlb
cli
push
pop
push
test
xor
or
jo
adc
mov
xor
aad
inc
xchg
xchg
jnp
cmp
add
in
mov
jecxz
push
adc
pop
pop
jg
fldenv
jmp
shlb
jge
and
int
mov
cmpb
aam
call
jmp
lret
mov
arpl
jne
gs
jno
int
sti
fwait
pop
scas
out
cmp
and
inc
addr16
and
decl
and
mov
pop
xor
outsl
lods
lock
pushf
in
sub
pushf
test
inc
xor
push
xchg
shl
and
or
lret
lahf
cmp
add
pushf
jle
data16
add
and
sbb
or
push
imul
out
sbb
xchg
nop
xor
arpl
lret
push
mov
pusha
in
fisubrs
sbb
shll
xor
lahf
loop
xor
sub
xchg
aam
clc
scas
pop
fwait
mov
mov
repnz
xchg
or
jge
in
and
adc
rcll
rolb
insb
pop
mov
es
mov
or
lret
dec
dec
lcall
cs
cmp
xchg
adc
pop
rclb
jb
push
inc
add
mov
shr
mov
sbb
sbb
aam
cld
lret
cli
and
adc
aas
fwait
iret
or
out
sub
or
push
jge
fwait
imul
xor
cs
sbb
jb
adc
mov
xor
push
add
xor
push
mov
call
enter
sub
jne
mov
add
bound
movsb
fsubl
int
mov
test
sub
mov
push
inc
dec
es
lea
into
mov
adc
jge
lock
xor
or
or
mov
inc
notb
dec
xor
add
stc
cmp
or
mov
pop
out
aas
xchg
or
xor
dec
sub
into
bound
jmp
sub
pusha
pop
lock
mov
rcrl
xchg
pop
fdivl
and
xchg
jl
mov
data16
sbb
pop
addr16
mov
jg
pusha
mov
or
pop
jmp
xchg
jnp
sbb
xor
pop
pop
sub
mov
fidivl
in
ljmp
jl
ss
jmp
pop
xor
loop
data16
xchg
std
pusha
push
imul
stc
xchg
dec
mov
rcl
sarb
pop
es
push
jb
mov
pop
scas
pop
mov
cmp
mov
xor
adc
and
add
outsl
pop
popf
xchg
lcall
leave
mov
jo
je
data16
cld
or
inc
lcall
xor
loopne
lret
adc
int3
mov
lret
jae
dec
lret
pop
jbe
pop
lock
push
pop
mov
cmc
or
sub
fcompl
lret
sti
in
stos
push
pop
stc
lds
adc
jns
adc
adc
repz
inc
test
rcrb
mov
das
cmc
lcall
das
sub
sbb
push
jl
andb
or
mov
data16
fcomi
outsl
dec
jbe
adc
xchg
mov
fldt
leave
std
mov
outsb
inc
lcall
dec
lret
mov
ljmp
jno
test
xchg
push
rorb
aaa
pop
jp,pn
insl
lahf
push
aad
repnz
push
sbb
sbb
sbb
sbb
fisubrl
xchg
das
push
lcall
int3
xchg
push
add
or
adc
stc
rcll
shlb
cmp
lret
push
repnz
fucom
rclb
data16
mov
mov
mov
dec
push
out
sub
lahf
inc
jmp
cmpl
sbb
push
mov
inc
mov
jp
daa
les
xor
pop
das
adc
adc
add
xchg
movsb
xchg
movsl
rclb
pop
adc
dec
mov
mov
and
insl
je
xrelease
sub
aam
pop
pop
es
in
mov
inc
clc
xor
sub
add
repz
je
dec
stc
push
xchg
sbbb
loopne
mov
js
jg
call
sti
out
cmpsl
mov
adc
adc
aam
xchg
pop
mov
xchg
jb
pop
scas
jge
shrb
mov
adc
repz
lret
push
cld
pop
in
or
cmp
fildl
outsb
insb
sbb
or
xlat
mov
adc
cmp
loope
add
enter
int3
test
dec
stos
cmp
adc
pop
bound
fldenv
dec
jmp
mov
lods
add
cmpsb
pop
or
or
adc
out
inc
mov
adc
cmp
pusha
daa
sarl
loop
mov
mov
out
cmpsl
imul
jge
aas
xor
loop
and
rorl
call
adc
add
mov
test
cmpsb
in
fs
outsb
pop
push
sub
add
or
stos
and
push
out
sbb
jge
pop
ret
leave
sbb
es
inc
popf
mov
test
cmp
adc
test
adc
mov
sbb
add
dec
imul
loop
movsl
stos
mov
call
les
icebp
pop
fs
popf
push
ds
pop
push
das
xor
es
incb
mov
jns
cmp
xor
jp
lea
add
ret
mov
out
jo
movsb
dec
or
fs
fistpl
push
push
jl
out
add
cmc
pop
or
outsl
adc
vphaddwq
mov
adc
pop
jmp
inc
xchg
stos
popf
lret
mov
inc
cmp
pop
daa
addr16
insl
sub
xchg
mov
test
rcrl
lahf
cmpsb
cmp
sbb
xor
add
xor
lea
mov
or
clc
inc
xchg
icebp
mov
ret
data16
add
push
xor
push
jmp
js
jno
mov
push
cmc
pop
cmp
mov
inc
into
adc
in
test
in
dec
andl
xor
pop
in
pop
sbb
xchg
mov
inc
test
popa
push
inc
add
js
je
mov
push
inc
cmpsb
jmp
dec
inc
sub
loop
das
fmulp
ss
fxch
in
push
cmpsb
and
cltd
mov
inc
shll
std
stos
cltd
outsl
pop
int3
ljmp
sbb
sti
mov
cmp
pop
pusha
add
inc
shll
jns
repz
jl
repnz
scas
and
adc
and
sbb
aas
repz
mov
sbb
xor
in
xchg
outsl
mov
dec
int3
pop
sub
jns
push
xchg
gs
aas
jecxz
fwait
and
jo
push
jo
ss
pushf
mov
js
xchg
or
test
outsb
and
lods
jle
sar
add
mov
add
xchg
hlt
loopne
std
mov
imul
pop
xchg
movsb
lock
lahf
jae
lcall
pop
bound
xorl
insl
ret
jp
pusha
xchg
mov
fst
adc
jb
push
loope
idivb
push
mov
push
adc
int
fwait
pushw
arpl
sbb
sbb
out
inc
sub
inc
add
dec
shl
and
adc
sarl
cmp
stos
mov
push
add
push
repz
cwtl
dec
stos
jg
fistpll
pop
cltd
arpl
sahf
push
sbb
ret
push
clc
dec
pushf
push
aaa
stos
pop
lds
inc
sub
sarl
ret
mov
push
lock
daa
fldl
out
int
gs
add
and
fildl
pushf
pop
out
or
and
add
sar
les
add
xor
push
sbb
imul
push
xlat
jg
and
lcall
push
xchg
adc
mov
je
stos
add
iret
aad
pushf
adcw
mov
gs
cli
std
xor
mov
lods
mov
cmp
or
push
sbb
add
cmp
adcb
and
lods
cmpsb
inc
jbe
xchg
xchg
fidivl
mov
dec
cwtl
mov
sbb
insl
sub
push
jnp
mov
pop
xchg
bound
aas
incl
lods
adc
popf
sub
test
inc
sub
fldt
cmp
push
scas
outsb
pop
push
cmp
int
out
jne
xchg
into
sub
addr16
or
add
std
pop
ja
cmpsl
lea
pop
inc
xor
xchg
out
jae
push
fcompl
loopne
inc
ret
mov
dec
cmc
adc
into
aam
adc
shll
or
jmp
shr
hlt
dec
mov
sbbl
insl
out
jnp
ss
sub
or
lods
mov
lcall
or
inc
mov
push
and
hlt
mov
push
notl
pop
inc
test
dec
mov
inc
dec
aaa
pusha
ljmp
sbb
icebp
movsl
fcmovnb
add
sub
jns
loopne
or
push
std
dec
mov
jo
dec
cli
insb
outsl
ret
sbb
jne
popf
loope
stos
fwait
dec
mov
aas
push
xchg
fmull
mov
add
dec
cmp
and
hlt
sbbl
and
cld
pop
pop
push
ss
test
rcll
int3
test
or
pop
ds
imull
mov
xlat
jne
je
call
xor
fsincos
xchg
arpl
fimuls
cmp
cld
jb
xchg
sbb
adc
push
lods
inc
push
mov
push
scas
xorl
les
xchg
adc
popf
scas
mov
pushl
add
out
test
inc
adc
and
into
sub
dec
pop
xchg
andb
ljmp
lods
lahf
lods
icebp
mov
cmp
jge
jbe
mov
cmp
pop
bound
fcmovu
les
push
lahf
jne
push
pusha
mov
std
cwtl
or
sahf
xor
cmp
xchg
scas
mov
pusha
iret
add
lods
sbb
aad
cwtl
mov
cwtl
and
out
xor
repz
into
ss
mov
xorb
ffreep
mov
jno,pt
or
int3
ljmp
adc
xchg
je
popa
pop
ss
pop
pop
push
sub
sub
mov
xor
out
jae
stos
enter
cltd
arpl
cmp
xor
and
jo
sti
test
cltd
lods
xchg
xchg
lret
xor
push
outsb
jo
dec
cmp
mov
pop
mov
call
loopne
jge
shlb
xlat
jno
xchg
fidivs
les
scas
mov
daa
inc
imul
cmp
push
or
add
arpl
pop
or
jmp
add
rclb
sahf
and
out
mov
push
gs
add
notl
and
ja
aaa
lea
scas
icebp
ljmp
adc
push
mov
cmp
and
cs
leave
jp
popf
movsl
aas
pop
sbb
jge,pn
push
mov
data16
cld
pop
mov
jp
fs
xor
push
das
mulb
dec
or
clc
shrl
ljmp
xor
ss
mull
filds
push
out
popa
cmp
test
adc
les
lahf
jmp
adc
test
pop
mov
dec
fadd
xor
inc
stos
mov
popf
repz
mov
dec
add
jb
mov
dec
nop
push
jb
mov
enter
push
popa
sahf
shlb
pop
or
inc
and
push
aas
lret
into
add
icebp
outsl
in
mov
leave
andl
ror
fmul
ficompl
in
cmp
fdivrl
mov
mov
mov
mov
cmp
js
xchg
cmp
mov
adc
das
push
mov
push
call
dec
daa
aas
inc
iret
push
pop
jns
js
insb
adc
jmp
pop
nop
add
adc
out
loop
dec
pushf
cld
cltd
cmp
shl
repz
xchg
gs
dec
xor
in
xlat
or
enter
mov
std
outsb
into
pop
ret
lods
cmp
sub
icebp
or
xchg
jae
cmp
in
push
pop
shll
cmp
fs
fadds
test
mov
std
cs
int
mov
test
cmp
lahf
adc
xor
dec
jg
enter
cmp
ret
imul
and
inc
dec
cltd
xchg
repz
mov
push
cmp
xchg
scas
in
lods
adc
push
sti
xchg
leave
into
fldl2e
dec
xlat
loopne
jno
stc
pop
cwtl
lret
jns
sahf
push
out
jecxz
into
push
insl
jecxz
or
pop
inc
xor
or
pop
sub
adc
int
mov
divb
out
repz
fdivrp
fcomps
cmp
int3
add
lods
mov
or
jmp
xchg
scas
in
xor
fwait
rcl
adc
cld
mov
fstl
sub
imul
sub
jbe
lods
fimuls
enter
jbe
addr16
push
jp
xlat
mov
sahf
fsubrs
mov
ds
les
sahf
stos
dec
xchg
jg
push
fwait
mov
inc
data16
sbb
loopne
push
mov
xchg
test
cld
stos
outsl
xchg
iret
ss
repz
and
jg
inc
mov
cltd
loope
mov
arpl
into
inc
pop
xlat
sahf
mov
cmp
repz
pop
stos
outsl
pop
subb
pop
dec
ja
andl
psllq
leave
outsb
xchg
dec
add
sbbl
xchg
push
outsl
pop
je
fmull
cli
rep
subl
xchg
ret
or
insl
imul
adc
mov
xchg
jbe
push
std
lahf
xor
test
jo
call
imul
cmp
adc
push
clc
xchg
push
mov
jae
addr16
outsb
arpl
pop
sbb
jmp
int
aaa
fcmovnu
in
mov
jg
and
pop
test
fistl
mov
js
xrelease
mov
cmc
stos
andl
or
into
push
cmp
repnz
test
arpl
adc
jno
jae
jg
call
jl
sub
lds
lahf
outsl
and
cmp
add
adc
pop
xorb
adc
lea
xchg
mov
fucomip
mov
insl
fisttpll
push
add
add
pop
dec
pop
pop
movsb
int
add
clc
xchg
insl
cmp
jne
mov
aam
cli
xlat
stos
popf
repnz
sbb
jle
outsl
xor
adc
mov
or
mov
mov
scas
or
inc
lret
aaa
pop
sbb
ss
lods
xor
cmp
scas
xchg
adcl
lahf
cld
aas
mov
cmp
mov
cmc
sti
fbstp
adc
mov
test
xchg
addb
call
pusha
mov
out
dec
cmp
aad
wrmsr
test
pop
mov
stc
or
add
mov
push
lods
push
mov
inc
lea
xor
sub
shl
jmp
sub
bound
stc
adc
xchg
and
xor
pop
mov
es
icebp
testl
rcl
dec
ljmp
inc
addr16
push
mov
jbe
fildl
pop
xchg
mov
ret
subb
add
sbb
pop
arpl
jae
fdivr
mov
dec
int3
or
sbb
add
cmp
adc
js
fs
push
fidivs
test
fwait
je
scas
shll
lods
mov
inc
push
scas
arpl
dec
sub
push
aam
cmp
pop
adc
mov
arpl
iret
add
add
jo
loopne
inc
dec
jnp
js
in
adc
sbb
sbb
cmpsb
imul
cmp
pop
aad
call
test
fstps
jecxz
jg
enter
mov
xor
add
push
sbb
repnz
movsl
push
and
jg
les
mov
mov
adc
loopne
cmp
xchg
hlt
inc
cmp
push
cltd
pop
adc
push
xchg
or
sbb
outsl
ret
push
out
test
fs
inc
adc
jbe
in
iret
jne
lods
pop
cmp
mov
dec
in
shrb
push
repz
sub
inc
fildl
cld
push
ficompl
loopne
scas
pop
jl
mov
sbb
je
insl
ret
out
mov
cld
xor
xchg
mov
rolb
mov
cmp
repz
lret
sub
jecxz
or
ret
mov
mov
je
ds
cmp
mov
add
inc
lea
mov
icebp
add
outsl
cmpsl
orb
aas
add
aaa
ret
mov
jae
mov
fisubrs
ja
daa
lods
outsl
test
jg
rclb
lcall
imul
mov
std
pop
ja
stc
push
push
adc
int
cltd
or
shl
cmpsl
jbe
gs
sbb
sti
mov
cltd
push
push
pop
xlat
adc
lret
int3
movsl
push
stos
pushf
fidivrl
js
mov
pop
mov
sbbb
insb
mov
popa
ficoml
popa
pop
lods
lea
push
sbb
xor
sbb
in
jo
clc
sbb
mov
shlb
adc
mov
xor
ret
adc
xlat
xor
and
xchg
cmp
rcll
nop
rcrb
enter
push
dec
sbb
scas
addb
arpl
repz
rcrb
out
imul
xor
mov
in
daa
out
out
loop
mov
ret
popf
inc
dec
inc
popl
xor
push
xor
xor
jmp
cmp
stc
repz
mov
lahf
imul
clc
rolb
sti
push
jl
push
inc
add
loopne
in
pop
loop
pop
and
setp
mov
enter
mov
test
inc
aas
cltd
xchg
loope
sub
pop
jle,pn
sti
hlt
cmc
loope
sbb
jp
stos
loop
dec
mov
cltd
push
idiv
adc
enter
sti
pop
inc
mov
dec
cwtl
inc
dec
int3
mov
mov
daa
insb
repz
lods
icebp
popa
idivb
jg
add
enter
pop
adc
push
or
stos
out
fsts
insb
loope
dec
orl
lret
loopne
mov
adc
dec
fsubrl
dec
les
ja
gs
jne
sub
mov
inc
xor
jne
push
jb
or
dec
inc
loopne
out
mov
icebp
jbe
push
out
iret
addr16
and
add
rorl
jmp
sti
repz
mov
add
or
jne
sahf
std
push
in
and
cmpsb
xchg
pop
jo
std
aam
push
cmp
mov
nop
mov
icebp
inc
out
sub
aad
dec
out
scas
mov
movsl
adc
pop
and
sub
xchg
int3
pop
addl
ret
mov
insb
pop
jge
cwtl
les
push
add
lret
movsb
or
scas
xor
mov
lcall
jg
lea
popa
into
repz
mov
loop
and
cld
jecxz
add
test
xchg
push
lcall
popa
jp
cmp
or
or
loopne
mov
add
xchg
bound
mov
cmp
sbbb
inc
mov
aas
cmp
mov
test
stos
adc
pushf
leave
cli
cmp
xchg
mov
sub
aaa
sub
sub
cltd
xor
inc
insb
popl
jecxz
aas
and
and
add
xorb
mov
mov
lock
xor
stc
ds
push
jns
sub
xchg
dec
xchg
adc
in
gs
mov
lods
dec
inc
xchg
mov
out
fildll
inc
sbb
inc
mov
adc
adc
add
xor
scas
jbe
mov
fs
jae
cwtl
mov
sbb
fwait
jne
push
aaa
mov
orl
mov
mov
xchg
testb
fldt
dec
pop
stos
test
dec
jg
imul
bound
push
sub
inc
push
jne,pn
popl
mov
leave
test
insb
or
and
lods
pushf
push
dec
add
pop
fisttps
mov
lea
jge
xor
and
aaa
ret
testb
arpl
and
insl
into
lods
adc
sbb
test
mov
lock
sbb
jnp
add
dec
fsubs
sbb
cmp
jecxz
pop
push
lds
inc
xchg
adc
sahf
inc
jbe
xchg
dec
and
or
fs
push
testl
pop
nop
add
lahf
sub
mov
jmp
cmp
out
loope
push
adc
cmp
mov
sub
or
lcall
adc
hlt
pop
sbb
bound
push
repnz
sub
sub
push
in
mov
push
pop
sub
imul
in
dec
cltd
out
test
fcomi
push
adc
xchg
sarl
int
add
jmp
call
out
aaa
cwtl
add
pushf
or
sub
dec
int3
xor
andb
push
dec
or
sub
inc
roll
mov
inc
cmp
stc
aaa
js
test
fistpl
sub
mov
dec
int3
les
jmp
es
insl
mov
mov
or
adc
out
xchg
in
out
in
sbb
inc
nop
sti
push
adc
jle
rcll
and
cmpsb
and
xchg
es
pop
mov
mov
call
dec
adc
lea
call
setg
and
mov
dec
dec
push
setg
jl
lods
in
push
sub
cmp
jne
arpl
out
or
sbb
xlat
scas
jp
xchg
sbb
mov
les
out
out
fisubrl
in
shll
mov
in
clc
inc
sub
std
icebp
mov
xchg
cmc
xchg
pop
mov
cltd
enter
inc
or
cli
cmc
aam
mov
jo
je
xor
shlb
imul
shl
sbb
cmp
cmp
and
mov
push
js
aaa
aas
jo
pop
ds
jecxz
jmp
cwtl
js
mov
mov
inc
mov
test
leave
add
loope
lods
incb
stc
pop
adc
leave
hlt
shll
mov
insb
xchg
add
fcomip
or
movsl
xor
push
push
sub
dec
dec
cmc
sbb
popl
mov
arpl
lods
mov
mov
popa
jle
out
aas
xchg
les
arpl
mov
pop
movb
and
xor
add
sub
stos
leave
test
xchg
cmp
lret
repnz
dec
adc
xchg
aaa
out
es
jbe
cltd
mov
inc
fs
mov
loop
dec
js
jp
sbb
inc
jb
sub
test
push
inc
leave
add
xor
in
pop
push
and
adc
cwtl
jns
push
mov
and
adc
mov
int
stc
int
fsubrl
pushf
outsl
mov
mov
pop
loopne
jae
sti
xchg
add
call
adc
fwait
mov
sub
fs
orb
dec
lods
clc
icebp
xor
movsb
imul
xchg
in
jo
sub
jg
dec
loopne
fisttpl
cmp
mov
icebp
pop
pop
jecxz
or
fxtract
xlat
xor
jecxz
sbb
dec
push
std
mov
jmp
jns
and
fs
xchg
icebp
shl
cld
mov
and
icebp
scas
and
dec
shrb
gs
ja
imul
push
js
sbb
test
movsl
insl
adc
movsb
ljmp
sub
lock
shl
inc
add
out
inc
jge
inc
add
sub
negl
fnstcw
pop
push
out
sbb
xchg
and
fnsave
aaa
rclb
or
sbb
fstpl
outsl
stc
aaa
sbb
jo
stc
fiadds
stos
adc
xchg
mov
popf
mov
daa
xchg
jo
xchg
xchg
ficoml
push
or
outsb
mov
dec
jne
fidivrl
daa
clc
and
sub
jno
jmp
xor
int
sbb
cltd
sarl
and
xor
cli
lea
cmp
cmp
mov
es
sbb
iret
ljmp
inc
imul
xchg
sub
call
cli
mov
mov
sti
test
inc
sti
fldl
dec
push
lret
jnp
adc
das
pop
test
jecxz
xchg
outsb
aam
imul
adc
push
adc
and
push
jge
sbb
dec
mov
mov
movsb
cmp
data16
cmpsl
fstpl
outsl
daa
sbb
icebp
sahf
insb
mov
mov
adc
gs
arpl
ficoml
add
ret
fdivrs
fiaddl
xchg
idivb
test
xlat
jmp
imul
addr16
push
ret
push
out
imull
aaa
xchg
push
in
inc
ds
aad
adc
lds
hlt
sahf
adc
je
ret
clc
jge
xchg
push
pop
cld
xor
pop
push
out
ret
mov
ret
push
pcmpgtb
mov
mov
and
pop
push
xor
ljmp
push
mov
ja
je
bound
ret
out
pop
arpl
lret
in
popf
movsl
add
das
jge
lret
daa
in
addr16
mov
dec
in
movsl
inc
pop
jecxz
jae
das
call
mov
lods
lea
cld
mov
dec
test
pop
mov
and
cwtl
mov
or
mov
jmp
adc
jae
jns
fisttpl
shlb
shrb
inc
mov
push
rcl
add
std
fs
sbb
cmpsb
mov
repnz
push
lcall
out
ja
stc
xchg
addb
stc
call
cmpb
rorl
sti
pop
in
xchg
out
les
stc
stos
dec
mov
mov
pop
dec
dec
sub
mov
add
bound
call
leave
push
pop
push
pop
push
addl
sti
stc
lods
xor
inc
lods
movsb
call
fidivrs
arpl
xchg
and
push
sub
in
adc
and
push
cmc
push
sarl
lret
dec
rcrl
xchg
stos
into
ret
arpl
addr16
cmpsl
fwait
jp
sbb
jnp
stos
xor
lret
mov
and
lcall
out
jbe
stc
jmp
stos
cwtl
aaa
jb
mov
and
jg
clc
xchg
movsl
push
push
fs
in
sub
pop
ja
pop
push
out
sub
push
mov
stos
cmp
mov
scas
dec
aad
mov
int
or
xchg
les
lcall
inc
clc
js
stos
lret
ljmp
jae
movsb
fwait
lret
fsubrl
jns
shlb
push
jle
inc
mov
roll
jae
pop
sbb
push
test
sbb
or
sbb
and
mov
inc
das
sub
sub
pop
pop
xor
push
dec
mov
mov
xor
inc
cmp
subl
ficoml
mov
ja
mov
dec
add
or
adc
jb
pop
pop
jge
jae
stos
push
mov
int
jle
dec
js
xor
aas
inc
jp
xchg
outsl
repz
add
inc
inc
in
mov
dec
orl
push
hlt
xor
out
icebp
xor
cmp
push
cmp
inc
xlat
adc
iret
cmp
adc
dec
jl
stc
aad
mov
or
pop
out
mov
scas
xorl
leave
nop
enter
jle
clc
inc
xor
fdiv
gs
mov
and
and
sti
hlt
xchg
ds
add
xchg
cmpsb
stos
push
clc
adc
rorl
and
cmpsb
fwait
loope
pop
sbb
cmp
popf
jae
shll
call
arpl
mov
dec
sub
cmp
or
push
sbb
xchg
jno
add
push
in
dec
mov
ret
adc
mov
sbb
add
repz
mov
nop
sub
ja
shr
add
sbb
xorb
test
popf
xchg
imulb
push
cmpsb
popa
xchg
repnz
sbb
dec
inc
adc
inc
add
cmp
cmc
adc
out
inc
or
fcomps
jge
bound
pop
inc
mov
inc
xchg
inc
jge
imul
sahf
cmc
repnz
insb
loope
enter
shrl
jo
jge
in
les
in
out
sarb
sub
push
in
ds
pop
leave
inc
and
pop
or
sub
mov
shlb
cmp
pop
or
xor
aam
jl
pop
cmp
scas
out
or
jb
ss
inc
mov
jns
lret
test
nop
mov
push
push
or
pop
push
maxps
shll
into
les
mov
mov
push
xchg
mov
aam
jmp
push
stc
int3
inc
scas
out
mov
sub
testl
insb
mov
scas
sbb
mov
mov
inc
cmc
aad
lret
stos
fucomip
xor
adc
into
xchg
int
mov
nop
insb
cmp
jno
imul
or
rorl
in
sub
hlt
cld
mov
shrb
pop
fcmovnb
in
mov
push
push
inc
adc
push
xchg
mov
ljmp
out
aaa
into
sarl
or
sarb
ja
and
loope
cwtl
push
sub
and
cli
pop
cli
out
mov
bound
mov
xor
push
call
fwait
xchg
jl
jmp
add
dec
dec
push
rcrb
stos
or
push
lods
rcll
loop
je
push
stc
movsl
fldl
xor
int3
push
sahf
ret
pushf
iret
mov
inc
mov
cmp
aaa
outsl
or
lds
inc
iret
in
jecxz
mov
fcmovne
bswap
dec
clc
sub
rcl
fisttpll
inc
push
jp
enter
outsl
xchg
xchg
insb
pop
dec
fdivl
xor
scas
mov
ss
dec
push
pushf
jge
arpl
mov
xchg
jae
add
pop
addr16
lock
xchg
mov
xchg
inc
ljmp
mov
pop
loop
shrb
or
pushf
mov
popa
inc
int3
mov
aam
cmpsl
xchg
mov
cmpsb
lds
loope
adc
sti
lahf
out
xchg
call
push
xor
cmp
mov
xor
std
inc
int
cmp
test
adc
sbb
mov
fcmovbe
shlb
gs
fbstp
adc
mov
out
jae
jmp
mov
mov
orb
add
out
xor
or
add
addr16
sub
fmuls
sbb
inc
xchg
mov
andl
push
adc
bound
ljmp
and
sbb
ds
jo
dec
js
inc
jne
inc
jns
or
cmpl
in
ficomps
scas
jno
mov
mov
loopne
sub
jle
les
out
clc
mov
sbb
cmc
aam
aas
mov
loopne
mov
sub
daa
xchg
add
mov
mov
xchg
jg
ja
shlb
adc
mov
les
push
stos
pop
and
in
push
cmp
inc
subb
loopne
cmp
add
mov
jmp
xchg
add
ror
popa
xchg
mov
pushf
jae
enter
mov
stos
mov
mov
push
cmpsl
push
movsb
das
lea
add
pop
out
add
loopne
jbe
and
leave
pop
xchg
inc
xlat
lret
add
pop
enter
mov
pop
lahf
jge
cmp
int
sub
out
jg
push
mov
pop
loopne
repz
stos
add
in
in
lock
cmp
fidivrl
movsb
es
and
pop
xchg
dec
push
js
ret
mov
mov
xor
or
icebp
cmp
and
cmc
push
lsl
lods
push
bnd
add
mov
insl
into
mov
pusha
cmp
outsb
int
push
test
inc
jg
dec
fstpt
lcall
mov
xchg
jnp
jno
xchg
dec
imul
cmpb
or
mov
in
sbb
loop
adc
xor
imul
and
xchg
movsl
cmp
daa
divb
call
mov
jns
ror
fistps
jbe
xchg
jecxz
xchg
mov
mov
arpl
js
push
ss
outsl
dec
test
imul
imul
mov
adc
pusha
xchg
inc
xchg
xor
jo
and
and
ss
mov
sbb
std
sbb
push
cmp
scas
lret
cli
adc
jg
ret
push
and
in
daa
test
into
es
dec
mov
cmp
mov
aaa
cltd
bound
ljmp
cld
fistl
imull
add
and
inc
cmpsl
sbb
mov
mov
sub
lea
sub
das
lahf
mov
imul
xchg
jns
and
insb
sbbl
lea
xchg
adc
rolb
adc
es
lods
pop
test
sbb
sti
cmp
add
sub
pop
jmp
xchg
cltd
sti
cmc
adc
jg
lods
fmulp
test
sbb
xchg
mov
ffree
aas
insb
ret
dec
xbegin
lret
xchg
mov
push
rcl
push
jno
sbb
mov
js
sbb
adc
inc
pop
xchg
dec
test
jbe
mov
notb
or
xchg
jge
les
jmp
mov
dec
jnp
jo
jns
or
inc
shrl
lods
jecxz,pt
lcall
sub
int3
loopne
mov
je
xor
inc
or
dec
push
or
jmp
lea
fisttps
mov
cmpsb
xchg
xor
jle
imul
popa
xor
sbbb
cmp
inc
or
jecxz
adc
repnz
cmp
push
pop
ret
addr16
je
jl
aas
aas
mov
cli
idiv
cli
aas
imul
cmpsl
ds
cmpsb
lahf
mov
dec
adc
mov
jns
jmp
lcall
lcall
repnz
dec
mov
mov
jmp
mov
mov
dec
fldenv
fbld
mov
mov
lock
pushl
push
movsb
mov
shlb
aad
aaa
lret
jae
pop
inc
movsl
mov
sbb
arpl
ja
loop
adc
leave
push
or
push
xchg
sbb
cmpsl
add
repnz
stos
jno
cmc
lret
and
rcll
sub
add
push
scas
mov
mov
fidivs
scas
add
rcl
jno
sbb
mov
mov
xor
push
xchg
mov
fstpl
mov
and
add
lds
stos
sub
aad
cltd
xor
dec
sub
xor
cmpsb
push
pushf
loope
pop
xor
dec
ficoml
lds
dec
aas
mov
cmc
push
loopne
jl
push
mov
pop
xlat
out
add
add
and
push
push
add
inc
mov
push
std
cld
stos
push
jae
add
out
push
pop
icebp
xchg
aas
xchg
jecxz
xlat
pop
cli
arpl
les
insl
out
ljmp
inc
pop
or
into
mov
and
push
call
inc
jle
into
test
adc
imul
push
lock
test
push
faddl
sub
jns
fildll
mov
mov
fidivrl
xchg
push
push
xchg
mov
fldcw
cmp
xchg
jle
lcall
inc
ror
mov
mov
imul
jae
incb
jp
push
mul
push
sbb
pop
imul
or
mov
mov
pop
rorb
stos
xchg
or
ja
sbb
sub
fidivrs
jg
in
sbb
dec
push
xchg
shl
lods
lahf
dec
bound
aas
lea
fadd
lcall
mov
jb
push
and
sbb
dec
sahf
cmc
jnp
fstl
popa
xor
sbb
or
stos
mov
jecxz
imul
imul
lds
sbb
test
lret
inc
add
mov
jnp
insb
add
sub
popa
pushf
dec
cmp
aam
iret
movsb
inc
mov
inc
aad
je
pushl
mov
xor
mov
imul
xlat
mov
fisubrs
push
push
inc
aaa
mov
cmp
ret
push
xor
in
mov
push
push
jno
pop
idivl
rclb
test
sub
mov
sub
loop
dec
lods
dec
xchg
aas
cmp
mull
ja
inc
push
dec
pushf
mov
cwtl
mov
push
popa
push
js
push
je
xor
in
lret
sbb
xlat
sub
shll
iret
inc
pop
sub
xlat
jne
jne
scas
dec
sbb
or
aam
push
push
inc
ret
mov
popf
loopne
mov
cmp
ret
bound
sbb
lahf
shlb
push
and
shll
in
xchg
and
into
pop
fadds
and
xchg
sar
fucomip
sub
push
sbb
cmp
jb
daa
fdivs
lea
into
pop
out
sti
mov
out
and
mov
xchg
mov
adc
xchg
mov
sub
cmc
add
mov
lahf
call
jp
push
adc
adc
mov
dec
sbb
insl
cmp
subb
addb
inc
seta
imul
dec
insl
mov
stos
mov
pop
imul
sahf
inc
jbe
mov
xor
fstp
je
adc
lods
jo
mov
pushf
jnp
mov
aad
mov
inc
addr16
neg
adc
adc
xor
rcrl
fiaddl
enter
bound
adc
xor
push
ret
int
scas
or
pop
inc
add
cmp
outsl
adc
sub
aas
aam
pop
pop
movsl
xchg
xchg
sahf
repnz
mov
lock
roll
je
aas
rclb
sbb
fdivs
enter
mov
add
mov
push
lock
jle
mov
push
cmp
xchg
scas
add
fnstcw
xchg
sub
fs
dec
or
push
mov
mov
shll
add
negb
xchg
mov
jno
pop
inc
sub
aas
inc
movsl
int
sbb
xchg
fcmovb
dec
push
into
add
int3
pop
fiadds
imul
jle
leave
repnz
loopne
cmp
mov
jge
xchg
sbb
out
dec
pop
push
and
not
push
dec
enter
cmp
test
push
jnp
jge
add
sahf
pop
sub
sub
cmpl
repz
cmc
sbb
ja
aad
repz
loope
or
xlat
mov
in
mov
fdivrl
call
lods
push
scas
mov
es
sub
loop
xlat
aas
imul
xor
addr16
lahf
dec
iret
shll
lcall
and
ds
push
xchg
insl
scas
xor
je
nop
loop
push
mov
out
je
add
xor
cmp
inc
stc
aam
jb
mov
loopne
fcoml
dec
dec
ja
stc
mov
push
dec
push
ja
dec
xlat
insb
mov
push
stos
dec
xchg
push
cmpb
cmp
jns
fimuls
cmp
adc
mov
pop
jnp
in
xchg
es
sub
cli
fs
dec
out
add
sbb
jle
out
ret
push
push
out
ljmp
push
pop
pop
mov
mov
repnz
in
sbb
pop
mov
xchg
or
jecxz
xchg
hlt
pop
pop
shll
xor
push
inc
pop
inc
leave
mov
loope
incb
in
jns
ret
int3
mov
and
dec
inc
push
or
es
fcmovne
add
mov
hlt
lods
je
in
push
imul
mov
js
rorb
sbb
out
jno
sub
lret
pop
adc
sbb
aas
xchg
add
ret
sbb
movsl
out
push
inc
sub
out
push
dec
shll
inc
fs
or
scas
aam
enter
sarl
push
or
repnz
cli
mov
ficoms
fsubl
mov
xchg
pop
jle
outsl
addr16
into
lock
dec
das
notl
dec
xor
sbb
sub
push
mov
dec
mov
fsts
lds
jge
add
fcoms
lods
outsb
test
xor
jg
and
xor
ja
and
xchg
sar
outsb
and
lods
pop
push
mov
mov
pushl
test
sti
movsl
adc
dec
leave
xchg
insb
xor
lea
lahf
push
inc
xor
out
js
mov
push
push
sub
mov
push
loope
imul
ret
addr16
push
clc
push
es
fucom
call
data16
or
or
push
insl
inc
aam
incl
outsl
or
enter
xor
std
mov
test
cmp
inc
mov
adc
sbb
stos
ret
neg
xor
mov
imul
jo
jle
rcll
inc
mov
cli
xchg
insb
push
rolb
xchg
xchg
adc
mov
test
ror
or
xor
xor
mov
loop
repnz
or
imul
cmp
ja
pop
in
lods
mov
jnp
cmpsl
sbb
jle
cmpsl
sub
xor
jle
cmc
push
das
xchg
xchg
pop
scas
jbe
insb
sbb
add
in
and
repz
lds
xchg
scas
xchg
std
cmpb
ds
movsb
jne
aaa
inc
push
xor
fwait
mov
frstor
addl
mov
stos
dec
mov
xor
push
jge
push
cmpsb
jne
imul
hlt
addb
dec
pop
popf
jmp
sub
scas
or
xchg
xchg
lret
push
sub
jae
rcrb
loope
xchg
push
jl
icebp
outsb
push
jne
shl
aas
xchg
fidivl
adc
mov
lods
fidivrs
clc
fidivrl
lods
lea
loop
lds
aad
je
cmp
mov
mov
movsb
leave
outsl
cld
mov
div
add
ss
std
aam
sub
shrd
lock
sbb
sbb
dec
adcb
sub
cmp
fwait
aam
dec
lcall
push
cmp
add
mov
js
adc
mov
imul
mov
outsl
xchg
xchg
movsb
push
mov
add
pop
mov
pop
cmp
in
push
jbe
adc
xor
jl
mov
pushf
fisubs
dec
jmp
add
mov
popa
test
data16
cmc
test
fidivs
cmp
xor
imul
lahf
pop
add
dec
data16
mov
xchg
push
mov
lret
test
add
or
lea
aad
outsb
ja
aaa
add
mov
cmpb
addr16
cltd
jmp
adc
mov
movsb
mov
jno
ja
inc
push
fmuls
movb
mov
jl
mov
les
mov
psubq
adc
fcomps
mov
sub
xchg
xor
jle
pop
cwtl
xor
mov
in
xchg
pop
test
jmp
add
add
sub
popa
cmp
or
jle
xor
test
mov
and
cs
fdiv
jno
push
cmpb
pop
add
mov
imul
scas
pop
lcall
in
stos
mov
cld
stc
pop
or
push
sub
xchg
mov
jnp
mov
dec
sbb
sahf
jmp
adc
cmpsb
jns
jns
scas
daa
mov
lahf
test
scas
je
in
and
lea
lds
aaa
stos
push
jmp
rclb
jl
out
lea
mov
mov
outsw
cmp
jge
inc
jb
iret
stos
icebp
sub
xor
sbb
pusha
mov
xchg
adc
mov
add
inc
lea
inc
xor
push
imul
mov
pusha
adc
adcl
test
lahf
pop
mov
mov
or
pop
dec
addb
or
xchg
sub
add
lcall
pop
cmp
jb
mov
clc
rep
add
cmp
fdiv
xor
xor
mov
cli
test
cmp
mov
imul
mov
jg
lcall
xor
cwtl
adc
insl
inc
push
mov
inc
stos
pop
xchg
xchg
cmp
push
cmp
xor
arpl
stos
xchg
cmp
fmulp
adc
xor
loop
mov
add
sub
out
jb
push
inc
xor
ret
xchg
repz
pop
cmpsb
loopne
stos
addr16
jo
ljmp
pop
dec
xchg
xchg
adc
jg
ds
out
pop
xchg
pop
push
into
cmp
aad
jns
jge
scas
das
popa
sbb
imulb
int3
scas
sarl
subb
lahf
movsl
sarb
mov
sahf
mov
sbb
xor
jp
adc
mov
icebp
inc
mov
xchg
or
jl
adc
xor
jmp
jae
out
add
jmp
fs
loopne
xchg
mov
inc
sub
adc
repz
rcr
icebp
inc
mov
mov
jge
fcomps
test
lods
out
fstpt
jb
mov
xor
pop
mov
cmp
dec
imul
lea
push
xor
pop
mov
push
dec
jle
jg
add
jno
jge
imul
gs
jo
cmc
inc
popa
lea
lcall
sbb
cmp
push
pop
orb
or
mov
ror
into
pop
std
sub
ficomps
cmp
push
out
stos
dec
fbld
mov
aas
rcrl
fcoml
insb
jb
xchg
push
xchg
xchg
int
jb
out
fprem
jnp
cmp
ja
and
mov
mov
jns
xor
dec
sub
mov
outsb
adcb
pop
push
das
cmp
mov
jns
jns
enter
xlat
pop
mov
lock
adc
add
sub
jae
dec
xor
div
mov
or
xor
jo
nop
xchg
xlat
cmpsl
out
loopne
int
and
jbe
xor
sbb
mov
sub
xchg
stc
cmc
adc
enter
mov
inc
and
mov
movsb
pop
inc
sbb
push
imul
fisubrl
mov
aad
popa
jge
inc
xchg
imul
insl
dec
push
xor
cs
in
aam
jne
xor
rol
dec
or
cvtpi2ps
cmp
jg
push
cmp
cld
mov
stos
ret
sub
out
add
add
cmpsb
out
mov
ds
dec
and
cmp
add
add
jge
imul
jae
mov
cmp
sbb
cmp
pop
mov
fdivr
cmpsb
pusha
push
mov
mov
fisubrs
jecxz
sbb
xchg
out
pop
push
pop
inc
mov
fcmovnu
pushf
in
iret
xchg
stos
mov
pop
icebp
sub
inc
daa
cmp
lea
scas
mov
arpl
addr16
cmp
xchg
in
pop
mov
pop
sbb
movsb
movsl
pop
scas
out
test
das
ljmp
jno
call
xchg
fcoms
fucomip
pop
push
jecxz
jns
dec
cmp
push
mov
cmp
fdivp
stc
jge
add
push
or
scas
lcall
insb
jo
fwait
mov
push
cltd
arpl
add
inc
adc
enter
cmp
cmp
daa
mov
xchg
popa
je
scas
adc
sarl
mov
enter
inc
inc
mov
pop
subb
arpl
mov
lods
stc
jo
mov
ror
jmp
shrb
gs
sub
scas
cvtps2pi
lahf
shll
movsb
pop
add
dec
mov
ret
pop
dec
push
pop
je
xor
sbb
sub
fadd
xchg
gs
sarb
loope
push
sahf
lahf
sub
dec
mov
xchg
push
sbb
fs
js
dec
sub
dec
push
ret
fs
cli
jb
ds
dec
push
jne
mov
inc
push
insb
adc
adc
sbb
lods
lods
outsb
daa
or
fidivrs
sub
int3
cmp
sbb
push
jge
ret
stos
ds
jmp
out
add
mov
dec
xor
dec
outsb
fcmovnu
test
test
mov
insl
lcall
mov
mov
xchg
pop
dec
cli
lds
mov
sbb
pop
xchg
stos
sub
xor
mov
add
adc
or
jae
inc
mov
push
xchg
pop
cld
ret
adcb
leave
int
and
pop
shll
outsb
dec
xor
mov
mov
sub
test
imul
ds
sti
in
lods
popf
insb
sbb
mov
idiv
adc
cmpsb
outsl
adc
adc
sbb
enter
sar
xlat
sbb
bound
xchg
popf
scas
or
dec
push
test
imul
push
imul
push
pop
or
mov
out
insb
sub
std
enter
or
jb
pusha
aad
scas
sub
nop
mov
cmpsw
inc
sbb
jg
test
sbb
sub
mov
je
pop
js
ret
aas
push
lods
sbb
insl
lahf
and
ja
mov
sbb
inc
lret
outsb
inc
adc
stos
mov
jns
das
hlt
inc
es
sub
enter
or
test
cmp
push
or
push
outsb
nop
setge
ja
lret
loopne
in
fwait
jg
xor
testl
and
ljmp
jp
xchg
lret
lcall
push
in
stos
leave
insb
xchg
jae
add
int
fisubrl
outsb
lds
jnp
mov
add
scas
dec
lods
ss
je
decb
addb
jne
dec
call
add
mov
ret
pop
push
sbb
inc
daa
int
add
std
cmp
rdtsc
aaa
orb
mov
xor
dec
ja
add
mov
fbld
ds
mov
es
pushf
ja
mov
or
pop
fidivs
mov
mov
mov
pop
out
repnz
fwait
xchg
shlb
jno
popa
loop,pt
fwait
cwtl
icebp
andl
mov
or
sub
cmp
into
ss
js
imul
add
cwtl
out
es
sbb
ret
rcll
lea
repnz
hlt
cmp
and
iret
das
inc
mov
out
cmp
or
lds
lods
idivb
outsl
stc
adc
cmpsl
xor
mov
pop
mov
das
stc
pop
lret
rolb
dec
aad
mov
or
sub
cmp
mov
out
push
xorb
subl
rorl
in
fwait
aam
pop
xchg
jns
sti
jno
and
in
data16
shll
or
cmp
cmp
cmp
aad
arpl
pusha
lret
js
dec
ss
imulb
adc
push
push
push
and
test
add
out
js
push
rorl
call
sub
jnp
or
lods
repz
std
inc
imul
inc
test
ret
scas
mov
xor
mov
adc
or
scas
or
ss
sub
dec
ficoms
nop
lods
std
mov
ljmp
xchg
movsl
push
cmpsb
jnp
loope
into
push
mov
push
pop
mov
mov
mov
outsl
aas
cld
cmp
das
mov
dec
and
lods
mov
sarl
out
shrl
scas
push
scas
mov
push
jp
pop
inc
xchg
arpl
fwait
cmp
repz
jle
notl
or
pop
jno
das
scas
fiadds
pushf
lods
xchg
fsts
dec
xchg
mov
jno
repnz
xchg
out
popf
fists
dec
arpl
xor
cmpsl
icebp
push
mov
loop
push
out
lock
inc
insl
push
outsl
movsb
inc
stos
add
negb
lods
sbb
cmp
inc
mov
imul
cli
std
push
mov
xchg
arpl
or
mov
push
jbe
adc
pop
and
xchg
push
subb
daa
cmp
dec
cs
inc
lcall
test
mov
mov
loope
sub
push
insb
jne
pop
lcall
sbb
in
mov
sub
add
mov
mov
vxorpd
add
jmp
sub
fdivs
push
aas
add
clc
cmc
ljmp
scas
sub
jns
and
mov
gs
mov
mov
inc
in
mov
ret
je
gs
cmp
int3
ret
pop
xor
cwtl
jne
sbb
adc
fwait
adc
ljmp
sub
lods
test
and
pop
jae
movsl
adc
cltd
dec
daa
adcl
je
push
inc
popf
aad
dec
les
idivl
pop
movsb
push
push
jno
add
or
fs
insb
ret
jno
pop
cmp
out
inc
or
mov
add
test
jge
sahf
mov
mov
xchg
xlat
nop
inc
popf
je
int3
imul
out
add
jl
mov
lods
mov
adc
xchg
loopne
inc
fsubr
xor
fcmove
mov
fwait
cmp
adc
jl,pn
xor
stos
clc
sbb
fldenv
inc
scas
or
inc
cli
pop
jle
js
sbb
push
lahf
aas
jmp
push
pop
and
mov
and
lret
jne
sub
mov
stos
cmc
test
pop
cmp
push
xor
inc
cmp
nop
aaa
xor
xor
or
enter
cmpsl
data16
daa
and
xor
push
add
adc
scas
dec
in
xchg
ret
jle
sbb
mov
aad
xor
les
hlt
gs
negb
sub
leave
pop
loope
inc
xchg
adc
test
push
inc
ret
popa
add
xchg
test
or
mov
adc
popf
scas
pop
dec
push
jp
add
enter
mov
out
les
out
xlat
mov
and
das
sbb
insl
scas
aad
xor
aaa
sub
and
js
dec
inc
dec
inc
sub
popa
jb
into
jmp
icebp
mov
jo
notb
sub
pop
sub
sti
mov
pop
dec
xor
inc
movsl
cmpl
test
mov
jnp
cld
test
mov
lds
sbbl
cmp
popa
nop
inc
clc
xchg
cs
lret
movb
pop
inc
in
mov
sbb
cld
pop
pop
inc
xor
and
mov
lods
pusha
pop
jno
test
push
cld
ret
inc
arpl
iret
arpl
jno
ficomps
and
or
je
in
fs
ffree
aaa
or
lret
adc
fs
sahf
sub
add
mov
inc
data16
mov
cmc
mov
pop
out
cli
frstor
push
or
xchg
outsl
fdivp
sub
insl
lret
xchg
outsl
sub
dec
pop
repnz
out
inc
frstor
fidivs
sub
sarb
rcr
jge,pn
sbb
push
xor
jns
sub
out
cli
or
mov
add
pop
cmp
ret
cmpl
stc
es
push
vcvttss2si
adc
outsb
sbb
int3
cmp
mov
push
add
fmuls
sub
mov
mov
testl
jne
pop
cli
xor
sub
dec
xchg
fsubrl
cmpsb
shlb
lock
jae
scas
cli
pop
jge
push
cmp
lods
jecxz
bnd
mov
push
mov
or
dec
sub
jns
xor
out
aam
notb
mov
stos
mov
nop
call
scas
ficoml
enter
mov
rcr
inc
cmp
cltd
dec
push
iret
xchg
cmp
mov
dec
test
sbb
jecxz
out
loopne
aad
in
data16
fiaddl
leave
xchg
data16
pop
xchg
fsubl
call
and
or
adcb
jecxz
movsl
inc
or
jno
das
fdivrs
mov
push
xchg
jno
or
xlat
sub
and
xchg
cwtl
popf
mov
and
mov
cs
scas
add
out
sarb
das
dec
rolb
jp
or
shlb
mov
push
cld
js
add
push
sbb
jns
leave
mov
dec
iret
decb
fdivrs
cltd
shll
ss
repnz
mov
adc
or
mov
xorl
mov
mov
enter
test
jge
dec
push
lret
mov
icebp
add
sbb
mov
mov
cltd
rclb
push
or
mov
push
and
sbb
lret
jae
pop
add
inc
cmp
fs
mov
sub
mov
enter
mov
cli
jne
push
dec
jne
dec
adc
fiaddl
into
xchg
sbb
sub
dec
movsb
aaa
dec
jmp
inc
leave
aad
or
call
rolb
lcall
outsl
sbb
push
dec
movsb
aad
and
bound
or
sub
cmpsb
mov
fwait
and
push
fdivrs
or
repz
and
xchg
push
jp
push
cmpsl
std
insl
aaa
std
outsl
pop
pop
mov
sub
mov
push
xor
sbb
cmp
or
mov
lahf
mov
jno
inc
into
fwait
xchg
cs
sahf
in
jmp
movsl
pop
xchg
pushf
sti
xchg
jg
and
rorb
dec
nop
rorb
xchg
in
jae
mov
cmp
aaa
xchg
push
or
inc
cmp
cwtl
mov
js
in
xor
mov
adc
adc
dec
mov
mov
subb
rcll
int
ja
fld
cld
mov
mov
test
lods
adc
push
adc
jno
jle
ficoms
data16
cwtl
sahf
clc
fwait
jmp
addr16
xchg
lret
mov
fidivs
pop
fnstenv
mov
scas
clc
pop
xlat
pusha
shufps
aad
mov
inc
outsl
sbb
into
sub
push
aam
ret
cli
and
ljmp
pop
mov
pop
sti
xchg
dec
cltd
movntps
loope
ss
stc
js
sbb
mov
scas
loopne
stos
sbb
jbe
test
push
or
dec
cmp
xor
or
insb
jae
inc
popf
test
inc
and
fistpll
aad
xchg
mov
sub
and
add
bound
scas
pop
mov
add
mov
jb
hlt
in
inc
sahf
sub
rolb
push
inc
sub
push
fcmovne
leave
dec
pop
data16
jp
adc
notb
scas
mov
xor
lods
out
mov
dec
rclb
test
out
xor
in
std
cmp
out
sub
inc
test
or
inc
out
stos
roll
fdivrl
cmpsl
icebp
and
loopne
xabort
mov
push
mov
arpl
mov
pop
adc
or
in
xchg
outsl
sbb
clc
jl
pop
shll
outsb
ljmp
add
sub
sbb
test
jb
dec
xor
add
cs
in
in
xchg
jmp
mov
add
fnsave
stos
into
pop
test
mov
add
test
jge
or
mov
pop
movsb
out
sbb
jg
mov
pop
mov
push
sub
imul
xchg
jnp
push
sub
mov
xor
mov
repnz
aam
ror
fwait
push
jb
cwtl
sub
lret
lock
inc
stos
clc
sub
aas
std
xchg
pop
ja
orb
or
in
bound
in
pusha
sbb
mov
mov
fisubl
cmpl
stos
sub
lcall
repnz
xchg
push
out
pop
xchg
and
mov
pop
insb
outsl
sbbl
test
ror
and
rorl
fstp
loope
dec
enter
cwtl
pop
bound
mov
jmp
add
pop
test
adc
push
and
mov
and
jb
fisttpll
mov
clc
adcl
das
movsl
and
ffree
addb
sahf
xor
roll
out
int
arpl
push
xchg
adc
fdivs
mov
or
adc
mov
dec
mov
sub
sbb
xchg
jnp
pop
ljmp
cwtl
pop
push
orb
in
sbb
inc
xchg
jmp
clc
sbb
push
test
mov
pop
sbb
mov
xchg
xchg
shll
mov
mov
bound
out
xchg
adc
mov
dec
inc
es
mov
loopne
or
clc
mov
sahf
jg
pop
lret
lahf
arpl
push
dec
jbe
cli
mov
xor
pushf
push
and
cmp
push
jecxz
ficoml
fistpl
adc
imul
and
or
mov
and
xchg
dec
xchg
and
xor
das
lods
adc
in
hlt
jbe
test
lcall
ja
out
popa
ss
jmp
push
ret
and
negl
aaa
dec
push
or
data16
push
in
ucomiss
push
adc
shl
jbe
add
sbb
sub
xchg
lcall
fdivs
dec
jbe
enter
jbe
cmp
fsubr
icebp
aas
std
pop
mov
test
insb
pop
cmpsb
mov
cmpl
test
call
fs
or
mov
add
mov
jp
addr16
sbb
mov
xchg
mov
es
cmp
cmpsb
loop
mov
xchg
dec
ljmp
test
push
add
ror
sub
ficompl
divl
xchg
scas
add
cmpsl
test
push
ss
xor
xchg
jecxz
push
inc
je
add
sub
push
push
mov
test
sub
loopne
cs
add
jg
and
scas
loope
ss
enter
push
mov
packuswb
push
add
or
rcrl
aas
js
adc
cmp
js
cmp
inc
jae
xor
cmp
stos
in
popa
fists
xchg
mov
cmp
lret
dec
out
inc
mov
sbb
das
rorl
xchg
cmp
sub
lcall
cmpsl
cmp
mov
insl
jne
pop
push
pop
jmp
frstor
movsl
mov
rcl
jl
das
mov
xlat
cltd
mov
cld
push
jno
xchg
inc
repnz
xor
cmpb
rorb
das
cmp
jmp
outsl
scas
out
setl
xor
or
mov
notl
call
mov
dec
ja
call
popl
mov
or
into
mov
lods
into
push
push
movsb
lret
or
mov
dec
mov
push
insl
loopne
arpl
mov
or
ficomps
das
repz
in
icebp
mov
add
std
loopne
jl
les
mov
jae
daa
popa
jb
cmc
insl
or
adc
popa
orl
or
cmp
mov
mov
rcrb
xchg
xor
shrl
dec
stos
mov
rcrl
sbb
subl
or
jg
or
xchg
shlb
or
push
sub
and
hlt
xor
pop
jne
jo
jbe
sub
test
icebp
scas
popa
xchg
pop
sarl
js
xor
ds
loop
dec
out
jp
xchg
jg
dec
pop
push
push
daa
mov
dec
out
inc
inc
adc
in
outsb
icebp
std
mov
or
or
jo
imul
pop
loop
adc
lods
sbb
and
adc
xchg
push
xor
push
ret
inc
ret
adc
loop
xlat
aas
mov
push
test
xor
mov
xor
jge
lcall
push
mov
scas
adc
lods
or
mov
push
sub
stos
mov
outsb
pusha
insl
mov
mov
sub
dec
and
je
push
fisubrs
mov
push
sub
sub
inc
cmp
in
into
mov
ret
insb
xor
cld
aad
xor
iret
push
mov
ss
inc
xchg
call
pop
xchg
xchg
bound
fidivs
mov
jns
mov
int3
int
cltd
xchg
fcmovbe
add
push
loopne
mov
add
push
add
icebp
sub
inc
push
loope
rorb
std
je
in
xor
popf
cmp
jno
fs
sbb
cmp
mov
jle
adc
adc
jl
xchg
sbb
or
pop
insb
or
adc
lahf
xor
or
pop
lcall
jbe
cli
inc
pop
cmp
insb
mov
pop
mov
inc
les
sub
sbb
sub
or
ds
fmuls
inc
rcrl
sub
mov
mov
inc
adc
out
xor
xchg
imul
pusha
mov
add
stc
pop
rorl
shrb
cmpsl
sbb
scas
push
push
dec
cmpsb
sbb
add
mov
mov
jp
mov
mov
dec
sti
or
or
lret
inc
or
cmp
in
es
sub
fisubrl
mov
cmpsb
inc
popl
and
in
test
xor
mov
or
enter
adcb
pop
aas
stos
loopne
imul
enter
loop
out
enter
loop
fdivr
scas
ret
mov
shlb
and
pop
fldl
mov
xchg
dec
lds
mov
icebp
out
fs
and
addr16
ret
cmp
cmc
rorl
xchg
pop
dec
js
fists
xchg
add
shr
pop
cmp
xchg
shr
test
mov
fiadds
loope
and
jae
hlt
inc
cmpb
dec
lret
nop
enter
push
jae
mov
dec
loope
xchg
repnz
adc
or
xchg
fdiv
inc
mov
mov
push
in
test
mov
mov
outsl
add
inc
pslld
mov
xor
repz
lcall
jne
sub
movsl
mov
pusha
jle
mov
push
int
or
mov
xchg
push
cld
dec
jno
enter
pop
enter
xor
stc
cmp
adc
out
cmpsl
leave
imul
insl
or
or
lea
fisubrs
jo
and
adc
cmpsl
shl
mov
mov
fldcw
jne
lret
test
inc
add
dec
mov
subb
pop
imul
adc
lret
xor
jb
sbb
push
inc
movsl
mov
test
xchg
sahf
aad
stos
leave
popf
cmp
jl
idiv
push
and
in
push
int3
scas
adc
pop
lods
loop
pop
or
into
aas
adc
clc
shr
mov
ds
test
mov
clc
or
out
cmp
sub
es
es
adc
das
cwtl
out
in
push
sub
cmp
push
xor
fldl
dec
or
call
xor
popf
mov
push
rorl
inc
jns
sbb
inc
pushf
mov
xchg
sbb
ja
add
or
enter
test
scas
sub
dec
cmp
xchg
sub
push
mov
mov
lods
fstpt
sub
mov
repz
add
add
or
jns
mov
inc
or
cwtl
xor
jl
cmpsb
jnp
dec
addl
jae
sahf
push
lret
out
mov
lret
bound
and
idivl
inc
test
mov
xor
das
mull
aas
push
or
sub
rorl
gs
lods
ds
or
adc
push
pop
pop
js
push
cmp
mov
mov
in
and
nop
jmp
loope
clc
or
sub
mov
mov
adc
test
loop
pop
xchg
xchg
or
cwtl
fnsave
loopne
mov
jae
pop
mov
pop
orb
repnz
cmp
mov
scas
push
push
ret
lods
mov
xchg
das
jecxz
or
outsl
mov
ljmp
mov
mov
inc
int3
xchg
out
daa
cmc
dec
xor
sub
icebp
lahf
hlt
mov
push
inc
sub
or
sar
jmp
inc
jge
aas
jge
repnz
call
and
loop
adc
pop
dec
xor
gs
out
xor
rol
shlb
gs
dec
dec
mov
cmpsl
pop
lods
sarl
mov
and
push
lea
adc
jecxz
test
sti
or
jb
jnp
or
mov
mov
push
push
outsl
sbb
jecxz
sahf
mov
or
and
sub
leave
repnz
pop
call
xlat
dec
xchg
dec
pop
out
pop
pop
shl
loope
mov
and
out
and
loope
adc
adc
push
push
cmp
mov
ds
jb
jne
push
leave
inc
leave
ja
pop
movb
pop
mov
inc
lods
cmp
cmp
dec
xor
mov
lods
std
arpl
out
inc
in
jo
xchg
mov
or
xor
lret
mov
bound
flds
fdivl
jae
pushf
inc
roll
sar
mov
sub
jo
xlat
inc
sahf
mov
aad
insl
pop
jle
sbb
ja
mov
fistpll
jg
test
popf
xchg
mov
cmp
sbb
adc
insb
cmp
rcrl
jg
call
push
data16
sub
dec
cmp
sbb
cmpsl
lcall
jo
xor
jb
pop
je
xchg
or
data16
mov
cmpb
jns
or
pop
ror
cmp
leave
lret
ficomps
insl
lret
push
movaps
and
mov
je
mov
jge
sbb
push
fs
push
aad
jl
sti
pop
sbb
and
and
ljmp
xchg
mov
in
push
mov
fstps
pop
adc
bound
int
xchg
enter
sahf
xchg
cmp
xchg
test
packuswb
sub
out
push
repz
xorl
ds
xchg
or
shll
xor
sti
iret
out
ret
add
mov
dec
scas
lret
and
jecxz
or
lock
not
and
mov
pop
pop
addr16
dec
mov
mov
jp
sub
jp
lea
and
xchg
add
mov
insb
cmp
test
dec
pusha
mov
sub
out
ficoml
mov
adc
rcl
rep
nop
adc
xor
push
mov
add
aaa
js
sahf
lds
je
or
jne
shrb
cmp
xor
sbb
testb
mov
mov
cmc
cmp
testb
adc
jns
test
insl
or
test
push
loopne
cmpsl
adc
jmp
adc
test
addr16
cmp
fildl
sbb
or
mov
mov
dec
jb
ljmp
or
push
jo
xlat
mov
leave
inc
imull
sub
scas
push
aam
pop
mov
add
sbb
pop
jmp
and
cmp
xor
xor
push
or
cld
fldl2t
mov
maxps
mov
push
cmp
sti
xchg
xchg
in
inc
xlat
out
and
dec
mov
sbb
sub
rcrl
or
loopne
jb
bound
mov
sbb
or
mov
push
imul
push
adc
xchg
add
insb
cmpsl
test
push
lcall
jecxz
push
stos
leave
jns
jmp
cld
xchg
mov
test
push
jns
dec
mov
adc
call
cmp
ficompl
stos
stos
stc
leave
cmp
out
movb
pop
shrb
adc
dec
je
movsb
mov
jl
rolb
movsl
xor
sahf
mov
pop
jns
cmp
andb
rclb
out
pop
mov
add
out
hlt
test
les
inc
lea
cmpsb
push
mov
dec
cld
mov
pop
nop
or
dec
sarb
sahf
mov
push
push
mov
iret
lret
or
fbld
xchg
or
dec
mul
and
xchg
ret
jge
xorb
xchg
mov
push
les
gs
xor
inc
mov
push
scas
xchg
lods
pusha
add
leave
shrl
imul
or
sub
sarl
pop
in
mov
mov
ret
out
movsb
push
adc
jp
add
push
std
insl
test
or
out
pop
mov
test
mov
adc
ret
fadds
icebp
lock
decl
cmpsb
lcall
notb
std
cli
mov
test
or
outsb
in
rorl
inc
popf
arpl
iret
lahf
mov
jbe
adc
sbb
mov
jecxz
xor
aaa
ljmp
sti
inc
lods
jge
loope
dec
mov
cmc
cmp
out
jecxz
dec
mov
fisubrs
pop
rcl
push
mov
or
mov
push
inc
mov
inc
into
xor
xor
inc
adc
gs
sbb
lea
in
test
mov
mov
push
add
add
arpl
adc
cld
pushf
or
jg
sbb
jecxz
or
fcomps
push
sub
mov
fistpll
xor
xor
pop
xchg
sbb
lods
inc
fdivl
data16
sbbb
dec
ja
pop
sbb
std
test
mov
or
pop
or
inc
adc
sahf
or
ret
movsl
fs
sbb
ss
mov
ror
daa
bound
pop
xchg
lret
inc
cmp
aam
outsl
cwtl
lds
jbe
ja
jnp
dec
stc
lahf
sti
out
aaa
push
hlt
fimuls
call
push
jl
rclb
jo
or
repz
jne
aad
xor
mov
sub
adc
cmc
xor
insb
ja
sub
mov
ret
sti
jb
cmp
popa
dec
sbb
ret
int
sbbl
jle
fcmovne
addb
addr16
inc
adc
pop
push
mov
ds
push
jae
pop
xchg
cmpsb
orl
mov
loope
jge
add
in
jl
mov
mov
clc
fwait
mov
sub
lea
jbe
addr16
stos
js
xchg
std
xlat
mov
fidivrl
sub
popf
pop
ljmp
movb
addr16
imul
push
mov
into
xor
shlb
fwait
ljmp
push
addl
ficoml
sbb
adc
mov
shl
or
lcall
aas
push
xchg
movsl
fimull
sbb
enter
in
xchg
insl
push
cmc
and
sarl
out
lods
push
dec
outsl
mov
mov
jmp
inc
daa
add
adc
inc
mull
pop
mov
pop
into
mov
movsb
lock
out
pop
push
and
dec
push
or
sti
aad
ja
xchg
int3
mov
jmp
xlat
xchg
in
decb
cmp
mov
ljmp
push
lock
adc
popf
aad
sbb
pop
int
pop
into
sub
cmpb
cli
dec
aam
pop
xchg
sub
push
sub
add
es
jge
xor
lock
dec
subl
xor
cmp
mov
pop
push
scas
dec
sub
mov
daa
call
push
sub
sbb
push
popa
loop
fisubs
cmpsb
xchg
lds
out
inc
sbb
mul
aas
cmpsb
adc
fldenv
movb
cmp
pop
ficompl
inc
or
xor
in
adcl
cmp
jb
cmp
pop
sub
xor
pop
lret
leave
cmc
xor
cmp
ds
outsb
sahf
jecxz
or
dec
jg
pop
fistps
xchg
cmc
mov
jae
std
lds
or
lahf
sahf
cmpsl
shrl
out
test
test
and
and
ret
lret
or
mov
cmpsb
xchg
add
dec
mov
and
and
lcall
rolb
je
xor
dec
and
jae
sbb
sub
cmc
pop
inc
sbb
mov
sub
push
aas
mov
lds
ja
add
inc
imul
cmp
lock
inc
pop
daa
ljmp
jo
cmpsb
mov
add
in
jno
add
and
fbld
cmpsb
jp
daa
loop
out
and
jp
sbb
mov
xchg
push
arpl
jmp
or
test
push
xchg
xor
fimull
in
dec
dec
stos
rorb
push
adc
mov
ss
cwtl
setg
add
aaa
xor
test
xchg
shrb
xor
push
sub
mov
lcall
imul
fstpt
mov
aad
insb
push
dec
fs
push
add
jbe
push
neg
xlat
adc
clc
inc
jecxz
pushl
jecxz
dec
cmp
jecxz
repnz
es
mov
jnp
xchg
lahf
shll
inc
mov
pop
or
adc
mov
inc
das
jl
or
daa
movsl
subl
push
mov
mov
aad
sbb
lret
sub
int3
bound
cwtl
xchg
push
loop
fidivrl
adc
xor
std
mov
iret
push
jo
jmp
push
or
jge
sub
fsubr
mov
in
adc
in
sbb
mov
stc
stos
dec
pop
cmp
les
icebp
fsubrl
mov
push
fwait
andl
popf
enter
lods
mov
dec
in
outsb
cwtl
rcr
mov
push
add
rcll
add
pop
dec
lea
cmp
inc
mov
aad
daa
out
pop
mov
mov
in
mov
mov
mov
push
inc
les
cli
adc
decl
fdivp
and
dec
add
add
inc
gs
cmp
cmc
sbb
frstor
mov
inc
xchg
xchg
fidivrs
outsb
inc
and
xchg
loope
popf
lock
sub
hlt
add
sub
test
push
inc
xchg
cmc
fstps
test
dec
mov
imul
imul
call
pop
inc
push
jns
adc
popf
jns
je
repz
cwtl
mov
fimuls
xor
sub
flds
pop
cmpsl
in
or
int
mov
ret
negl
pusha
jo
xor
scas
int
xchg
dec
inc
pop
xchg
jg
repnz
adc
ljmp
out
pop
pushf
sub
hlt
pusha
insl
lahf
mov
cmpsl
add
mov
test
lods
sbb
jmp
orb
pop
push
xor
or
mov
cmpb
mov
push
adc
dec
push
jge
aas
stos
in
and
mov
fbstp
pop
movsl
add
repnz
jo
dec
xchg
lret
sub
ret
das
scas
push
rcll
jnp
jge
and
iret
pop
cmp
fdivs
aam
push
pop
gs
out
or
mov
in
arpl
hlt
pop
and
adc
cli
cli
cmpl
push
mov
push
pop
xor
fwait
inc
add
cmpsb
cmp
aam
iret
pop
push
jg
mov
mov
xchg
das
imul
dec
pushl
mov
push
or
push
adc
push
xorl
hlt
cmp
das
loope
fistps
or
sbb
sbb
imul
repz
pop
pushf
dec
add
mov
jns
dec
test
jae
sub
or
test
je
imul
mov
add
jne
or
scas
mov
dec
mov
mov
add
sub
push
jl
cmp
push
ror
aad
pop
mov
hlt
ja
xor
sbbb
iret
or
jmp
push
aaa
jecxz
lret
stos
lods
imul
mov
stos
stos
and
inc
sbb
daa
js
jo,pt
sub
push
imul
pop
in
adc
sub
jnp
arpl
or
inc
jo
cwtl
in
into
push
mov
mov
mov
scas
cmpsb
loope
or
rcrl
mov
std
cwtl
lret
dec
adc
dec
cmp
seto
cli
sbb
add
ss
sub
mov
sbb
inc
pop
scas
mov
adc
and
push
outsb
mov
mov
cmpsl
cmp
xor
stos
or
jno
push
mov
cmc
imul
cmp
pop
in
icebp
and
or
out
in
cmpsb
in
and
xchg
iret
mov
orb
cmp
and
xor
filds
loopne
shrb
dec
jecxz
in
icebp
sub
and
sub
push
sbb
push
insl
push
adc
push
inc
test
xor
popa
xor
jne
mov
xchg
dec
adc
push
cli
test
fcmovb
repz
mov
int3
push
fidivs
bound
jecxz
andb
lret
cs
and
xchg
iret
ljmp
xor
cli
jne
xor
ret
sti
add
and
fmuls
mov
jae
sbb
out
in
out
dec
xchg
pop
mov
fdivrs
jecxz
pusha
cmp
xlat
sbb
pop
aam
jecxz
das
inc
xor
es
adc
add
hlt
int3
jo
add
add
sbb
push
sbb
xchg
inc
clc
cmp
or
mov
roll
sahf
in
pop
xor
jle
sub
insb
ss
cmp
loope
test
ret
stos
push
fs
inc
nop
test
push
sbb
test
mov
jge
movsb
ss
jmp
add
stos
jns
sbb
lds
fmuls
or
pop
cmp
push
xor
jl
xlat
call
xor
fadds
xchg
aam
gs
jmp
outsb
xchg
fcoms
ret
add
xor
dec
pusha
sbb
cs
pop
movsl
test
jmp
imul
mov
lods
jnp
push
mov
inc
inc
xor
mov
sub
pop
movsb
xor
or
repz
jp
xor
sbb
or
adc
mov
loop
fcmovu
les
sub
mov
jp
lret
mov
and
inc
pusha
leave
sub
add
and
mov
arpl
lods
in
cmp
and
data16
sbb
mov
xchg
fsubs
and
in
insb
mov
mov
sahf
loope
xor
popf
dec
subb
enter
enter
je
popa
lcall
add
xchg
ss
mov
or
std
mov
loopne
pop
mov
xlat
stos
mov
dec
push
addl
mov
shrb
or
xlat
lcall
dec
imull
iret
cmp
mov
daa
dec
ljmp
mov
pusha
insl
xchg
sub
vmovupd
stos
sbb
lods
add
orl
gs
shlb
int
into
inc
pop
out
pop
mov
lods
sub
xchg
mov
jo
xor
mov
sbb
mov
sbb
sub
xchg
fwait
mov
cmp
in
mov
push
mov
mov
xchg
fldl
push
ja
sbb
or
aas
cmc
jmp
shlb
lahf
out
sbb
dec
mov
stos
and
sbb
pop
rorb
and
sub
ret
push
sbb
and
pop
cmp
mov
pushf
mov
jno
fmulp
xor
push
outsl
seta
push
dec
dec
cwtl
shrb
dec
inc
add
mov
insl
fucomp
insb
in
loope
adc
movsb
cmp
jp
in
cmp
fadd
addr16
dec
out
xchg
loope
aas
int3
push
outsb
inc
movsb
inc
lret
cmp
and
sub
repnz
imulb
popa
sbb
and
outsl
iret
or
mov
push
negb
or
aas
xchg
iret
sbb
roll
mov
fadds
sbb
dec
or
sbb
push
lret
sbb
cmp
pop
ds
dec
cmpsl
adc
insl
mov
leave
jno
xchg
hlt
dec
ja
insb
cld
stos
xchg
jno
mov
aad
stos
adc
sbb
sub
mov
out
lcall
adc
adc
fs
sbb
orb
sbb
lods
mov
fisubrl
dec
bnd
xor
mov
xor
test
or
pmuludq
add
cld
add
int
nop
jne
xchg
mov
bound
mov
ljmp
call
inc
add
add
mov
aam
pop
jae
sub
jae
pop
cmp
dec
sarb
ja
sub
xlat
jno
push
cmc
xchg
setge
cmpsl
jge
jle
and
pop
mov
mov
dec
ret
xor
mov
push
push
push
cmc
je
aas
stc
xor
outsb
ds
inc
mov
jp
repnz
mov
mov
pop
fildl
cltd
mov
hlt
xchg
stos
sahf
jle
fsubl
popa
dec
jmp
mov
loope
movsb
test
cltd
loope
or
pop
or
out
shlb
add
jne
xchg
xchg
mov
sbb
jbe
sarb
pop
fs
stos
and
push
ja
inc
sti
mov
jno
push
addr16
mov
scas
pushf
and
ret
push
out
jb
hlt
dec
add
pop
sbb
fisubrl
idivb
incl
mov
in
xor
mov
daa
cmp
shlb
test
add
add
jge
push
push
hlt
lea
xlat
aas
mov
mov
shr
add
sbb
pop
rcll
dec
popf
psubw
adc
pop
mov
push
mov
in
es
xchg
push
scas
loopne
lea
scas
test
add
mov
nop
and
lret
sub
cmp
jge
mov
daa
xor
fdivl
jge
push
fucomp
lret
repnz
mov
sub
push
fistpl
mov
fmul
jecxz
in
adc
xlat
test
lret
xlat
xlat
loope
cmpsb
jg
imul
mov
and
xchg
inc
push
loopne
scas
nop
jno
push
std
sub
dec
repz
ret
jns
outsb
mov
dec
stos
push
and
jl
pop
adc
shlb
shrl
out
inc
push
push
in
xor
jns
out
push
inc
or
add
or
test
xor
icebp
cs
pop
fsubs
shll
mov
and
sti
sarb
lcall
pop
and
dec
cmc
lret
lods
mov
or
lea
popa
dec
pop
js
and
ja
sub
jl
test
cmp
mov
ds
in
mov
xchg
xor
stc
inc
int
jmp
ljmp
cmp
cmpsl
or
cmpsl
adc
dec
out
and
lret
outsb
sbb
bnd
insb
jo
pop
dec
int
or
xor
sub
xor
mov
add
sbb
cmp
and
inc
test
inc
fucomip
add
mov
sti
cmp
mov
shl
adc
mov
out
lods
es
mov
sar
fistps
dec
cltd
fs
sub
insl
mov
mov
data16
and
add
add
mov
push
daa
mov
mov
inc
mov
flds
sbb
rolb
xchg
out
push
sub
icebp
mov
inc
cld
outsl
cli
sbb
lock
xchg
incb
mov
mov
repnz
icebp
inc
shrl
cwtl
jne
fadd
pop
lahf
pop
jns
push
shl
ss
jb
xchg
movsb
ss
mov
inc
inc
cmp
jmp
fdivrs
imul
xchg
mov
test
sub
sub
pop
xchg
mov
add
std
out
outsl
jae
and
leave
or
in
jmp
iret
ds
add
sub
sub
xor
xor
and
test
mov
sbb
ja
js
adc
into
sbb
dec
out
pop
mov
ljmp
mov
ret
pop
mov
repz
mov
ficompl
sbb
in
push
roll
push
arpl
xor
push
cmp
insl
loop
dec
inc
add
das
leave
dec
xor
mov
out
jp
xorl
mov
jb
das
rolb
xchg
xchg
sub
fists
cmpb
dec
jno
push
mov
jns
pop
lret
pop
fistpll
cmp
xor
ljmp
pop
adc
in
and
fwait
push
insl
and
leave
cli
insl
ljmp
addr16
out
pusha
pop
cmp
mov
bound
arpl
addb
daa
shlb
pop
iret
or
xchg
icebp
push
je
iret
fwait
push
popf
jo
repz
filds
mov
rcl
xchg
and
dec
sub
dec
repz
and
leave
pop
lea
mov
daa
rcl
sub
aaa
outsl
cltd
clc
sbb
inc
les
pop
xchg
pushf
and
pop
hlt
popa
loop
inc
adc
add
mov
mov
jge
push
int3
aam
rcr
jl
xor
push
dec
add
pop
fs
dec
or
cmpsl
andb
mov
stos
lret
mov
je
imul
repz
and
lock
adc
xchg
cmc
sub
idiv
jnp
into
jecxz
jmp
pop
jle
fstpt
jp
cs
adc
repnz
jle
out
repz
and
ja
push
popa
xor
unpckhps
push
mov
out
xor
adc
or
pushf
clc
and
mov
push
cli
out
ret
out
iret
and
pop
cmp
xor
movsl
lods
mov
in
mov
aam
pop
xlat
rcl
imul
lds
lahf
mov
leave
test
ss
outsb
or
sbb
inc
jge
and
in
add
jle
in
lcall
clc
shlb
xorl
popa
repz
jl
add
shll
adc
dec
xor
lea
aam
sbbl
cmpsl
or
pop
insl
mov
xchg
bound
adcl
cmp
xchg
xor
jp
dec
ret
sub
es
mov
add
fistpll
nop
ds
pusha
jbe
jno
hlt
scas
push
imul
or
cld
call
loope
lds
lods
dec
inc
mov
cmpsl
out
loopne
mov
std
cmpsb
int
jb
xor
or
arpl
rol
xchg
xchg
lods
pusha
push
sub
jne
cwtl
cli
stos
sub
adc
xchg
push
ljmp
popf
cli
xchg
repnz
mov
xor
test
pop
sbb
jnp
push
dec
push
loopne
orl
sbb
mov
push
dec
cmp
dec
mov
into
inc
lock
int3
xor
nop
push
test
lahf
mov
inc
xchg
movsb
lods
mov
outsl
pop
dec
into
jo
inc
sbb
xor
nop
test
movsb
in
inc
add
jne
ret
cmpb
dec
cmp
adc
dec
jecxz
sub
pop
add
sub
fmuls
aad
arpl
dec
pop
adc
fbstp
mov
xchg
sti
dec
movsl
adc
xchg
jno
jbe
nop
jno
fiaddl
ljmp
dec
and
repz
jae
popf
mov
test
gs
mov
lds
xor
out
pop
in
add
jae
test
popf
lret
outsb
aad
dec
pop
mov
inc
in
sbbb
test
push
gs
xchg
sbb
inc
fs
pop
sub
push
jnp
shl
icebp
and
fwait
jmp
fstpt
xor
jg
and
dec
rclb
dec
cli
mov
inc
lret
arpl
frstor
enter
jle
pushf
sbb
xchg
add
dec
xor
mov
mov
push
xchg
or
cmp
pop
scas
push
mov
add
jecxz
mov
outsb
in
pop
daa
dec
jns
test
sub
jmp
xchg
mov
xor
mov
addl
es
in
pop
jg
das
sub
jno
rolb
or
movsl
adc
adc
subb
or
and
cli
jmp
mov
and
pop
nop
or
testl
xchg
adc
push
movsl
push
and
jbe
or
jbe
lcall
pop
or
jnp
dec
arpl
sti
cmpsb
xchg
test
fld
cli
mov
xor
jb
push
lods
inc
mov
jl
cmp
mov
inc
push
clc
pop
cld
pop
cmc
adc
xor
dec
jno
fcomi
in
test
cmp
or
sarb
ss
repz
or
mov
ja
mov
adc
and
fisttpl
rcl
outsl
sub
mov
in
xorb
mov
call
inc
xchg
clc
iret
decb
mov
out
enter
shlb
das
sub
fldenv
sahf
cmp
and
jb
mov
xchg
popa
les
sub
mov
movl
xchg
xchg
cmp
rcr
ljmpw
lahf
int3
ja
es
pop
or
pusha
insl
fistpl
andb
in
inc
push
adc
mov
push
or
testl
arpl
fldt
shl
in
xchg
push
and
or
hlt
xchg
pop
xchg
sarb
inc
sahf
aam
sahf
clc
fwait
and
mov
cmpsb
xor
pushl
arpl
ficoml
push
gs
cmpsl
and
aad
movsb
addl
jb
xchg
and
fisttpl
inc
cmp
xor
and
jb
mov
pop
xor
lods
pusha
ficoms
sub
out
mov
xchg
std
jl
cmp
repz
pop
add
push
add
jbe
test
scas
pop
adc
and
lcall
mov
inc
jae
xor
pop
pop
cmp
sbb
push
xchg
sti
adc
cmp
cli
enter
mov
subl
movsb
cmp
and
dec
js
push
pop
mov
adc
js
aad
mov
xchg
push
inc
fwait
cmp
xchg
cmp
jle
mov
roll
in
xchg
mov
or
aas
jnp
fldenv
scas
in
into
hlt
fstpl
jle
jno
dec
pop
push
jl
push
mov
push
inc
outsl
sahf
xchg
xchg
cltd
inc
inc
sub
mov
jge
jecxz
mov
arpl
out
push
fsts
repz
orl
mov
sbb
lcall
pop
xor
pop
xor
dec
leave
dec
cmpsl
sub
inc
xor
out
adc
fnstcw
sub
mov
cmp
and
cmpsb
popa
ret
das
mov
xchg
and
add
adc
mov
outsl
loop
add
inc
push
lock
leave
push
ss
mull
scas
adc
pop
sbb
hlt
mov
ds
scas
xchg
hlt
push
adc
fisubrl
add
leave
mov
xor
in
rolb
add
pop
dec
adc
scas
divb
stos
mov
sub
push
outsb
in
ds
jno
inc
insb
into
pop
out
mov
xlat
xor
xchg
daa
push
inc
hlt
shrl
pop
adc
fildll
pop
mov
sarl
aad
sahf
jae
xor
jge
repnz
add
sbb
por
repz
or
icebp
inc
stc
fs
in
jle
ja
lock
mov
lock
fldt
mov
xlat
xchg
jecxz
inc
fistpl
mov
movsb
neg
or
sti
lea
in
subl
mov
pushf
lcall
dec
push
adc
or
push
adc
dec
sbb
adc
mov
jp
mov
andl
or
movl
mov
cmpsb
enter
xrelease
or
nop
mov
or
xchg
lea
jmp
xor
lcall
pop
or
div
push
pop
aad
fwait
icebp
inc
mov
lods
pop
push
cmc
mov
in
das
testb
jmp
and
cmp
add
or
mov
xorl
sbb
xor
cmp
js
cmc
in
outsl
fdivs
pop
mov
stos
mov
fcomip
movsb
dec
pop
enter
xlat
push
or
ljmp
mov
add
xor
fbld
add
or
xchg
cmp
mov
adc
ds
hlt
cmp
jbe
icebp
mov
outsb
pop
xor
fbstp
jnp
addb
adc
push
les
mov
sbb
xor
rorb
dec
cmc
mov
fprem1
add
sub
call
pop
mov
das
sbb
jp
ret
je
jbe
xchg
bound
out
mov
and
adc
jns
aam
adc
mov
xchg
dec
shl
mov
mov
jl
dec
sub
shlb
cmpsl
xor
cmp
les
movsb
aam
cmc
repnz
push
push
fs
inc
push
or
cmp
and
dec
mov
rorb
aad
ss
and
add
cmp
mov
mov
aam
in
adc
lods
xor
in
push
cmpsb
test
and
or
push
shlb
in
adc
or
hlt
sahf
out
aad
lock
orb
xor
aam
dec
jne
push
int
orb
dec
xchg
bound
lret
adc
jb
sbb
cmpsb
pop
mov
hlt
insl
lods
cmp
xor
in
addl
sbb
fmul
mov
and
xor
mov
mov
sti
mov
and
stc
pop
mov
loop,pt
mov
mov
jmp
xchg
rcll
mov
sbb
ss
repnz
in
test
lahf
mov
pop
popa
lcall
andl
leave
jae
test
fdivrs
or
jbe
dec
push
mov
test
dec
iret
and
inc
das
or
rcrb
std
fwait
xor
xlat
shl
ljmp
mov
rol
sti
pop
ret
push
xor
inc
into
push
adc
adc
stos
and
test
ret
jmp
add
in
dec
push
jnp
mov
cli
mov
xor
and
push
mov
std
mov
dec
insb
movsl
jl
dec
sti
push
ds
push
or
bound
adc
rol
loope
in
pop
pop
sub
stos
jp
out
js
enterw
sub
adc
into
xchg
aas
popa
testb
jo
xor
sbb
inc
das
inc
mov
test
psrlw
push
imul
in
xor
jg
add
dec
cmc
xor
sti
jno
dec
das
loop
ljmp
mov
shlb
pop
jg
shlb
mov
stc
int
scas
pop
rcrl
sbb
addb
jecxz
imul
inc
jecxz
inc
pop
adc
dec
stos
sar
jno
add
cwtl
and
orb
js
loopne
push
and
testb
pop
push
repz
aas
add
ja
out
fcomip
jp
xor
jg
stc
pop
xchg
or
jmp
ret
lret
sub
mov
in
mov
inc
popf
test
push
and
xchg
jge
cmp
inc
push
cmp
addr16
int
pop
adc
push
loop
das
je
out
xchg
xor
sti
dec
sub
je
stos
push
int
test
and
addr16
and
movsl
jno
dec
inc
inc
icebp
xor
ds
push
in
lods
fisubs
inc
mov
outsb
cmpsl
cltd
xchg
adc
sbb
in
sub
movsl
adc
lods
and
cmc
loopne
rcrb
ljmp
in
mov
push
dec
pop
addr16
sub
mov
imul
in
dec
aad
icebp
xlat
xchg
dec
mov
gs
jno
push
lock
sub
add
aam
loopne
cld
sub
dec
sbb
push
popf
subb
cs
mov
pop
push
repz
loope
xorl
iret
or
sbb
mov
in
cmp
xor
stos
mov
jns
and
xchg
popa
mov
outsb
aam
test
xchg
shll
mov
dec
jmp
mov
movlps
es
in
scas
out
push
xor
stc
dec
mov
lods
mov
xor
sub
sub
incb
cmp
or
sbb
test
push
add
xchg
iret
mov
testb
inc
test
das
fsts
mov
mov
inc
stos
lods
rcr
mov
andb
add
mov
fwait
dec
ret
adc
or
loop
push
xchg
and
repnz
mov
sti
sti
aaa
add
inc
pop
loopne
xchg
jo
int3
mov
jecxz
xorb
sub
inc
andl
push
enter
xchg
push
out
ss
scas
mov
subb
mov
les
inc
arpl
jmp
enter
lcall
mov
inc
arpl
sub
insl
mov
jnp
popa
stos
push
lcall
cmp
jg
mov
or
pop
clc
leave
cli
mov
jecxz
jp
lcall
mov
dec
or
sbb
dec
sub
mov
pop
or
in
inc
bnd
xchg
sub
aaa
repnz
fildll
repnz
mov
add
inc
rorl
dec
call
fsub
add
cmp
sbb
loopne
or
je
mov
cs
inc
shll
xchg
loope
pop
jae
or
jg
or
addr16
lock
aaa
mov
sbb
testl
decl
fildll
rcll
popf
fisubl
lcall
jbe
movsl
leave
js
int3
add
xor
mov
addr16
lahf
and
dec
pop
mov
inc
sbb
sbb
fs
sar
push
sub
mov
pop
push
sub
mov
or
ja
fwait
xor
test
mov
jmp
mov
rorl
lahf
test
cmpsb
or
dec
push
test
jg
sub
mov
jns
push
or
into
rcrl
xor
imul
imul
in
rol
cli
mov
mov
data16
xor
cwtl
lods
lret
lods
push
jp
xor
jbe
fidivrl
adc
dec
pushf
rcr
mov
insl
xor
adcl
int
lea
lahf
test
lock
gs
and
daa
cmc
pop
nop
adc
or
sub
push
inc
aam
outsl
pop
aad
sti
les
adc
pushf
stc
push
inc
push
aas
pop
test
loope
xchg
gs
xor
and
lea
xchg
int3
and
adc
inc
mov
jo
imul
outsb
xlat
lds
push
mov
sbb
inc
insl
inc
out
mov
mov
pop
mov
jl
lock
mov
fnstsw
div
pop
adc
xchg
cmp
or
mov
inc
mov
cmp
js
std
pop
into
jns
aas
xchg
mov
sub
jne
outsl
movsb
inc
mov
negb
mov
outsl
jp
jnp
push
pushf
shll
icebp
nop
adc
xchg
lds
es
bound
clc
add
cmp
sub
pop
shr
fst
and
cltd
xor
or
jmp
xchg
adc
xor
in
push
popf
jge
push
cmp
popf
lods
add
insl
sbb
mov
xchg
loope
inc
ljmp
loope
jge
outsl
sti
adc
mov
xchg
jecxz
push
xchg
es
mov
mov
and
push
arpl
int3
cmp
mov
xor
push
adc
mov
push
rcrl
hlt
mov
xchg
cmpsl
jmp
pushl
sbb
shll
dec
mov
jne
lret
imul
or
lods
cmp
push
lcall
mov
sub
mov
sbbb
mov
and
jb
aas
aam
movsb
out
cmp
cmp
fcmovb
shlb
and
jmp
repnz
add
inc
in
push
jo
ljmp
popa
cmp
or
jg
push
stc
mov
dec
dec
call
push
out
dec
je
xor
lods
push
movsb
lock
test
fstpl
mov
ret
pop
std
dec
jg
lret
test
mov
and
adc
mov
sti
sbb
push
adc
cmp
pop
pop
call
test
mov
cmp
je
push
outsb
mov
push
imul
pop
mov
dec
pop
sub
adc
push
pop
daa
js
lret
leave
arpl
add
xor
rorb
jae
fwait
cmpb
fildl
push
xchg
movsb
fs
inc
dec
mov
mov
sarb
mov
jle
aaa
cmp
cmp
mov
pop
ficomps
scas
inc
repnz
out
je
call
filds
or
clc
insb
mov
push
jae
and
push
or
popa
test
xchg
aad
test
out
ds
ja
sarl
pop
test
or
inc
add
popf
push
xchg
sahf
imul
pop
andl
fs
sub
dec
fiaddl
lods
popa
icebp
ret
hlt
push
sbb
repnz
mov
test
mov
lds
mov
lods
addl
hlt
imul
pop
icebp
pop
nop
cmpsl
jbe
push
or
addr16
jbe
pusha
imull
fwait
mov
add
lds
sub
fwait
mov
xchg
dec
cmp
jb
xchg
stos
out
xchg
or
push
and
arpl
hlt
movsb
movsb
in
and
mov
push
sti
lds
mov
and
in
adc
adc
scas
cwtl
imul
mov
dec
sbb
lods
sahf
lea
out
mov
xchg
adc
pusha
iret
push
mov
adc
lret
and
mov
scas
hlt
es
inc
fst
xlat
and
or
pushf
cmp
push
and
enter
add
dec
xor
xchg
jae
sub
fldt
and
mov
jecxz
adc
in
push
loopne
mulb
cmp
loope
test
cmp
daa
frstor
std
lods
cmpsb
push
xlat
lcall
ljmp
out
sub
dec
js
push
mov
mov
loopne
cmc
jae
fdivs
js
lods
outsb
imull
clc
cmp
rol
rorb
cmp
add
cmp
add
push
addr16
aam
or
push
inc
cmp
lcall
mov
sbb
js
lahf
adc
xor
fwait
or
xchg
cwtl
cld
or
pop
mov
push
loopne
rclb
rorb
inc
daa
mov
jg
mov
loop
xchg
jno
cmp
sarl
xchg
std
jle
push
xchg
mov
mov
orl
stos
ja
and
sub
jmp
shl
sub
into
mov
aad
das
cli
pop
push
mov
out
cltd
jl
mov
add
stc
adc
pop
mov
inc
xlat
nop
and
test
ret
stos
insb
and
stos
xor
jl
add
in
rcr
das
xor
outsl
and
push
sub
or
or
in
xchg
xchg
lds
pop
pushf
ret
movsl
push
mov
pop
stos
popf
cmc
stc
sbb
add
int3
mov
ss
lods
push
sub
adc
mov
in
push
add
or
and
js
addr16
push
and
hlt
jne
add
cmp
test
sub
imul
jo
jae
inc
into
sub
movsl
pusha
mov
pop
add
gs
and
xor
enter
imul
ja
jmp
jecxz
enter
mov
inc
shlb
dec
ss
sub
jecxz
loope
xor
sarb
mov
xor
pop
cmp
lock
and
pop
mov
pop
aas
sub
xchg
pop
cmp
cld
mov
mov
push
push
popa
push
js
and
or
and
cmp
shll
call
lock
fs
lds
jmp
mov
imul
addr16
in
mov
xor
imul
icebp
jnp
mov
nop
sbb
loopne,pt
adc
sub
sub
push
sbb
dec
adc
inc
jae
adc
cmc
ja
cmp
dec
int3
mov
xor
outsb
aam
mov
cmp
mul
push
pop
or
stos
rcrb
mov
xchg
sub
adc
hlt
xor
in
lret
out
sbb
lret
mov
or
sbb
mov
cmp
jnp
mov
mov
xorl
mov
xor
in
xchg
sbb
cwtl
pavgw
je
shlb
popf
cltd
xor
mov
aam
mov
push
notl
mov
fs
ja
sub
sbb
fwait
and
push
rorl
sbb
out
mov
test
orl
or
mov
int
xchg
mov
out
xchg
jne
inc
mov
or
sub
sbb
sub
add
cmp
adc
cmpsl
lods
push
loop
adc
dec
pop
pusha
enter
add
adc
xor
pop
lods
or
jge
aad
push
shrb
pop
loope
in
movsl
imul
jmp
push
xchg
xchg
sbb
or
aas
notb
push
movsb
aas
cmp
hlt
xchg
mov
bound
dec
jb
pop
cmpsl
mov
push
cmpsb
xor
sbb
mov
xor
adcb
jb
pop
and
ss
ss
xor
sbb
fstpt
je
aam
ret
mov
push
sbb
inc
adcl
jl
push
in
xor
imul
stos
repnz
cmp
or
clc
test
and
push
xchg
ret
xor
mov
popf
lods
pop
cli
mov
jne
sahf
sub
stos
push
push
sbb
out
je
inc
mov
inc
mov
push
in
push
push
sbb
imul
sahf
stc
ja
out
into
iret
test
nop
push
pop
stos
pop
ret
ljmp
mov
push
push
cmc
mov
addr16
xchg
fldenv
rol
fdivrs
and
call
xor
push
imull
mov
inc
fwait
lcall
push
inc
xchg
and
jl
jle
testb
scas
pop
push
pop
cmpl
rcrl
xlat
mov
enter
sub
adc
aam
loope
dec
mov
ljmp
dec
cmp
mov
and
lret
arpl
xor
pop
pushw
cmp
shlb
mov
shll
enter
pop
dec
add
lret
and
xchg
fwait
and
push
pop
ja
jae
pop
dec
fs
test
nop
pop
pop
and
ja
adc
push
adc
or
frstor
pop
push
inc
or
mov
aad
xchg
ficomps
pusha
repnz
and
push
push
mov
jbe
cli
jnp
jmp
es
jge
fs
jae
int
or
mov
rcrb
mov
mov
pop
gs
pop
jb
bnd
lret
push
lcall
insb
pop
mov
pop
cltd
xor
iret
or
adc
xchg
movsl
add
std
movsb
enter
pop
enter
jae
cmp
fs
dec
xor
push
mov
xor
inc
jmp
stc
jecxz
mov
sbb
shrl
popf
es
xchg
imull
divb
push
out
xor
push
sahf
adc
cwtl
bound
xchg
rclb
dec
jbe
jnp
cmp
lds
mov
mull
inc
call
xchg
outsb
push
pop
addr16
sub
sub
xor
lret
cmp
lret
fldt
xlat
mov
cmp
ss
addr16
pop
mov
jo
sub
xchg
stos
imul
and
mov
fsubl
jae
mov
mov
pop
icebp
push
mov
sub
leave
aam
sbb
push
xlat
aam
adc
cmc
and
mov
and
mov
xchg
cmp
push
mov
insb
sub
mov
xchg
arpl
popf
cmpsb
test
xchg
xor
in
push
mov
and
mov
push
push
mov
pop
jno
mov
sub
mov
shll
pop
jb
jb
inc
fidivrs
cmp
and
adcl
addr16
inc
adc
aas
dec
cs
loop
dec
mov
cmp
xlat
clc
push
stos
fs
pop
jecxz
sbb
subb
int
fldenv
xchg
shlb
cli
pop
inc
pop
mov
sbb
inc
dec
jns
popa
jg
mov
xor
iret
pop
pop
in
add
ret
adc
iret
adc
mov
fcoml
xchg
insb
cmp
mov
push
cld
test
jmp
push
aaa
out
icebp
mov
pop
pop
fs
lea
pop
cmp
cli
addr16
xor
fisubrl
aad
ja
pop
lea
adc
maxps
xor
dec
jo
ret
cmpsl
nop
shl
mov
adc
xchg
ljmp
in
sbb
cmp
sub
xchg
xor
inc
pop
jno
std
fists
push
fcomip
rcrl
arpl
leave
mov
cmp
cwtl
into
jb
or
data16
jmp
inc
inc
cmp
push
mov
xor
mov
mov
mov
leave
mov
loop
fsubl
sub
jge
jne
and
lock
pop
jbe
in
les
daa
cltd
scas
xor
mov
outsl
add
mov
jl
add
sar
push
cli
test
ds
and
add
dec
fnstenv
popf
dec
call
fnstenv
push
aas
add
in
lods
dec
mov
or
pop
push
ja
lret
mov
daa
push
pusha
push
icebp
xchg
jmp
add
dec
pop
inc
js
jae
addb
xchg
test
push
add
fsub
mov
into
in
push
jle
mov
in
xor
xor
cmpsb
sub
inc
scas
and
dec
movsb
jnp
dec
adc
stos
adc
out
xchg
gs
clc
inc
and
leave
aaa
and
gs
insb
add
lods
push
inc
cwtl
pop
mov
dec
repnz
xchg
dec
insl
fwait
push
and
push
test
mov
lods
sbb
in
imul
arpl
scas
bound
jmp
mov
mov
push
cmp
lahf
dec
mov
insb
addb
adc
dec
mov
les
lock
idivl
add
lods
mov
loopne
xchg
bound
neg
or
sub
adc
or
jecxz
or
aaa
jne
imul
imul
ret
in
hlt
or
jno
inc
xor
cmova
das
xchg
add
fisubs
or
lcall
xor
pushl
jb
push
mov
outsb
cmp
pop
loop
rcrb
pop
rcrl
cli
mov
mov
push
imul
in
cli
repz
pop
add
adc
mov
xchg
mov
lahf
repnz
out
cmovb
sahf
jle
test
push
add
cs
mov
add
jne
pop
jge
into
enter
dec
mov
push
repnz
pop
test
sahf
data16
clc
test
ficomps
pop
rorb
rolb
cmp
and
les
jns
sub
ljmp
or
xor
imul
in
inc
loope
jnp
jg
test
in
jo
aad
jns
int3
cmp
adc
dec
adc
or
sbb
lret
push
cmp
push
push
sub
inc
repz
stos
shlb
push
icebp
ja
and
push
push
cwtl
aas
ja
enter
jbe
dec
mov
pop
cmp
mov
mov
and
fs
stos
hlt
pop
sub
inc
out
insb
jle
jno
inc
dec
inc
adc
dec
jl
in
xchg
sub
divl
pop
repnz
ds
out
leave
jge
or
lock
in
jl
loop
mov
sub
rcll
leave
nop
jnp
jae
dec
xchg
in
push
repz
xchg
pushf
lahf
push
cmpsl
sti
not
or
sub
push
into
in
hlt
scas
rcl
out
ja,pn
bound
adc
mov
scas
cmp
scas
sub
mov
mov
scas
cltd
sti
jecxz
rorl
mov
in
popa
daa
push
jecxz
push
dec
fmul
sub
outsl
jmp
xchg
imull
inc
xlat
arpl
ret
cmp
jb
push
stc
cmp
and
xchg
pushf
inc
pop
xchg
mov
ljmp
xor
xorl
ljmp
mov
lret
push
test
fmul
xchg
sub
mov
cltd
jmpw
xchg
and
mov
jae
and
lods
idivl
dec
std
inc
lahf
addl
dec
cwtl
pop
pop
in
add
sub
cmp
add
pushf
xor
jbe
mov
stos
je
rolb
mov
push
pushf
inc
inc
bound
inc
popf
push
xchg
cwtl
mov
sbb
mov
int
and
pop
aas
repz
gs
adc
jl
dec
filds
ret
mov
data16
mov
or
sbb
out
popf
call
stos
shl
test
xor
sub
jl
lods
inc
lahf
rcrl
adc
mov
ret
inc
mov
sub
cmc
leave
sarb
lret
mov
pop
mov
xor
hlt
mov
ljmp
mov
cs
adc
out
jae
pop
aam
hlt
stos
mov
int3
add
in
sub
lea
in
arpl
into
jns
push
insb
sahf
fcmovnu
jle
hlt
cmp
js
faddl
mov
mov
adc
dec
push
inc
mov
les
adc
cwtl
push
testl
notb
cmpsb
inc
cld
cmp
xchg
xor
pop
push
or
fiaddl
lcall
sahf
in
out
pop
fcmovb
fwait
dec
mov
pop
clc
mov
pop
cmc
jns
and
into
das
cwtl
adc
mov
dec
mov
scas
sbb
test
xchg
dec
push
sbbb
rorb
push
scas
add
push
inc
outsb
test
or
pop
xchg
jle
adc
adc
push
outsb
mov
movsb
bnd
outsb
dec
lds
fmull
rolb
inc
xlat
sub
dec
lret
or
es
pop
popf
shll
in
push
shlb
xchg
push
xor
dec
call
adc
sub
inc
adc
call
call
dec
fisttpl
xchg
jae
aad
fisubl
dec
adc
repnz
or
mov
adc
lret
push
daa
lods
aam
and
sub
cmpsl
out
xchg
push
and
mov
test
mov
jp
cmpsb
cltd
lret
in
aas
int
sub
lods
out
cmpsb
sub
add
fldt
loop
push
sar
sub
das
jle
xchg
stos
push
sbbl
pop
cwtl
cs
dec
insl
or
pop
jno
mov
pop
xchg
push
adc
mov
push
iret
nop
jg
jae
js
mov
cld
adc
inc
nop
inc
sti
nop
sub
xor
fmul
or
fistpll
aas
mov
mov
push
out
adc
sbb
cli
pop
dec
aam
ret
es
sbb
fldenv
popa
popa
ss
cmp
aaa
push
and
nop
ljmp
outsl
and
push
ss
mov
es
in
nop
jne
div
mov
lods
test
test
scas
dec
ljmp
mov
push
enter
imul
dec
ljmp
adc
rcrb
add
lea
and
pop
es
sub
lcall
rcll
mov
loopne
adc
and
js
cmp
jge
add
add
ds
jbe
pop
arpl
mov
xor
dec
sub
dec
cmp
sbb
mov
mov
lcall
or
sub
dec
movsb
cld
shll
jae
sub
xor
xchg
cmp
and
pop
dec
jb
jae
imul
mov
xchg
pop
inc
inc
add
push
dec
jae
cmp
push
mov
inc
sbb
fdivrl
cli
test
pop
pop
inc
popf
sub
loopne
mov
mov
mov
xor
icebp
inc
pusha
sub
iret
cmp
arpl
stos
mov
ret
mov
subl
mov
dec
pop
jmp
test
cmpsl
rolb
xchg
sbb
ds
data16
cmp
aam
dec
repz
jmp
aam
sub
stos
xchg
mov
pop
jge
xlat
mov
rolb
jmp
fildl
xchg
cmp
enter
outsl
sub
push
mov
cmc
das
jbe
or
imul
push
and
add
mov
cmp
rclb
fdivrs
es
add
push
inc
dec
les
and
inc
lods
xchg
mov
dec
xchg
into
fcmovne
cmp
clc
js
jb
mov
xor
mov
mov
rcrl
popa
jno
xchg
or
daa
rclb
mov
xor
mul
pop
repnz
lock
jae
out
in
inc
clc
outsb
divb
push
adc
pop
pusha
mov
xor
loopne
xor
pop
xor
push
lret
adc
adc
sbb
mov
mov
stos
pop
cli
pop
sub
jbe
js
addr16
stos
add
aad
ljmp
jmp
pusha
stos
mov
xchg
test
in
fwait
or
cs
test
repz
lcall
jecxz
xor
push
xchg
inc
push
jne
pushw
xchg
mov
pushf
lahf
shlb
into
cmc
test
icebp
mov
imul
xchg
mov
cmp
bound
leave
xor
add
aam
cs
cs
dec
cmpb
sub
add
imul
repz
ficoms
cmpsb
jne
mov
or
cmc
dec
fnstenv
ficomps
data16
mov
cmp
cmp
insb
mov
mov
lea
sub
int3
fdivrl
sub
push
test
mov
ret
bsr
rcll
je
enter
ljmp
push
dec
icebp
adc
mov
loope
insl
or
adc
dec
div
loop
or
mov
addl
xchg
pop
xchg
stc
jnp
push
cwtl
int
fucomip
pop
das
std
inc
xor
lret
adc
iret
inc
cli
not
add
in
jnp
lea
das
rorb
stc
call
mov
pusha
push
dec
or
jbe
lahf
pusha
dec
mov
cmp
mov
test
mov
adc
test
xor
sub
dec
lret
sahf
sti
mov
ret
mov
mov
push
fdivs
andl
loopne
jae
mov
dec
mov
cs
lds
push
adc
xor
mov
xlat
xchg
test
mov
mov
dec
pop
pop
add
jae
and
push
pop
insb
mov
jo
push
mov
sbb
aaa
leave
lahf
xor
int3
arpl
out
add
in
sub
fcomps
test
cmp
xchg
imul
movsb
lods
or
mov
pop
adc
cs
xor
loopne
mov
and
outsl
push
movsl
cmp
js
sar
mov
out
or
push
das
movsb
repnz
adc
or
xchg
dec
inc
repz
pushf
push
fnop
enter
popl
jae
clc
int
cld
cmpsl
xchg
sbb
add
mov
and
add
in
stos
adc
dec
and
dec
popa
push
jg
loope
movsl
out
ror
mov
ja
push
lds
das
popa
xor
das
pop
dec
repnz
inc
popa
fstpt
ja
fistpll
lahf
mov
mov
pop
push
pop
dec
insb
xor
push
rclb
jmp
mov
int
mov
mov
mov
mov
or
adc
divl
and
sub
xchg
fisttps
es
sbb
cmp
mov
or
jo
add
fwait
push
mov
hlt
out
dec
pop
xchg
jo
dec
pushf
push
inc
adcb
jmp
hlt
out
mov
aad
or
lock
stos
jecxz
movsl
adc
scas
inc
sar
push
jb
dec
adc
or
gs
enter
jge
jo
cmpsb
mov
push
jae
stos
sahf
mov
mov
ds
bound
push
cmpsb
xchg
repz
fcoms
cmp
sub
add
lea
mov
js
mov
mov
cmp
lcall
pop
mov
popa
mov
push
dec
pop
add
addr16
mov
rcl
mov
mov
sub
xchg
sub
dec
lods
popf
cmp
jb
sbb
sub
cmp
xchg
push
mov
lea
sbb
cmc
neg
fs
into
aad
lahf
rcrb
scas
insb
push
mov
stos
fstl
mov
icebp
test
scas
adc
adc
push
andb
jle
hlt
cmc
scas
inc
imul
mov
xchg
push
sarl
outsb
sub
mov
jbe
fistps
and
jp
add
dec
ret
lea
pop
jp
xor
xchg
bnd
xor
and
pop
inc
repnz
xchg
aaa
fistps
ja
or
out
jbe
stos
sahf
jb
jbe
insb
mov
and
insb
or
stos
int3
movupd
aam
shll
pop
inc
cmp
dec
subb
sbb
xor
mov
push
stos
test
mov
sbb
test
inc
scas
dec
addr16
jmp
clc
data16
sub
insb
inc
xchg
std
add
jnp
cmp
cmp
int3
jb
addr16
dec
shlb
inc
xchg
adc
out
jne
mov
outsb
movsb
addr16
pop
push
out
mov
adc
aam
fwait
orb
or
cmp
or
push
cmpsl
jns
insb
mov
and
movsl
in
cmp
sbb
xor
lcall
xlat
sbb
popf
add
pop
jo
lcall
lcall
inc
add
pop
push
std
loopne
outsl
jecxz
pop
nop
incl
repnz
dec
sahf
dec
mov
jbe
sbb
push
inc
mov
testb
push
inc
add
jg
mov
jge
sbb
jno
mov
and
mov
ljmp
sbb
andb
mul
mov
fucomip
xor
add
dec
arpl
dec
xchg
into
sub
imul
mov
ficoms
lret
sub
testl
sbb
fcomps
push
enterw
mov
sbb
fidivrs
jae
mov
adc
popa
sub
pop
adc
sub
test
cltd
push
std
in
stos
bnd
int3
shll
cltd
sbb
jae
adc
loop
dec
or
iret
outsb
xor
jmp
jb
cmp
cmpb
dec
jnp
arpl
shrb
add
out
mov
pop
pop
jno
bound
adc
scas
inc
mov
int3
cmp
enter
mov
outsl
loop
sbb
ret
xchg
or
push
cmp
arpl
push
sbb
pop
pop
sbb
mov
out
inc
sub
pop
leave
out
sbb
sbb
xor
cmp
and
push
mov
enter
lock
xor
jbe
fcoms
mov
call
test
in
push
pop
pop
jecxz
mov
pop
sti
fadds
sub
pop
ja
add
sahf
sub
imul
cmp
loope
fistpll
scas
idivl
jmp
nop
mov
hlt
lods
mov
loop
cmp
in
push
idiv
cmp
mov
shrb
pop
mov
into
imul
out
xorb
push
pop
add
fs
sub
fnstsw
enter
xchg
pop
xchg
je
int
movsb
lods
mov
xchg
lds
xchg
mov
and
add
add
inc
add
shll
mov
test
lahf
pop
das
lret
loop
cld
add
outsb
xchg
cmp
mov
arpl
dec
cmp
jo
add
mov
dec
xchg
push
loope
mov
add
leave
xchg
fcoml
push
or
in
add
test
lods
stos
cmp
fsubrl
lds
es
xor
mov
inc
jb
das
rorl
pusha
xchg
lods
xchg
es
fstps
pop
das
cmpsb
lcall
pop
out
ljmp
mov
push
lret
adcl
or
out
shll
dec
pop
stc
nop
lahf
sub
inc
inc
mov
in
pop
loop
fldl
sahf
outsb
push
add
scas
adc
push
pop
movsb
and
popl
call
sti
pop
stos
pop
es
rorb
mov
or
add
cmp
mov
lcall
aam
jp
test
xchg
cmpsl
int3
pop
mov
jns
popf
pop
xchg
fcmovnbe
mov
cs
imul
out
clc
sub
and
ds
mov
ss
enter
adc
xchg
sub
pop
mov
enter
xchg
mov
xchg
and
inc
loope
lcall
xchg
adc
mov
add
pop
stos
ss
mov
lret
sahf
test
sbb
xlat
stos
pop
imul
adc
cmpsb
mov
test
mov
dec
inc
popa
push
jae
movsl
sbbb
mov
mov
dec
dec
mov
stos
cmpsl
addr16
sahf
jo
mov
pop
pusha
inc
inc
clc
push
and
add
jo
mov
lret
pop
or
push
loope
cltd
or
or
out
dec
fisttpl
fsubs
push
adcb
jmp
push
popf
or
stos
jp
ret
std
xor
or
mov
adc
xchg
jb
inc
mov
push
add
xor
hlt
add
loopne
imul
xchg
sarb
dec
scas
test
push
dec
mov
jecxz
call
mov
imul
aad
shll
cmp
push
out
sub
sbb
popa
cltd
pop
aad
lds
inc
scas
in
mov
adc
inc
frstor
std
sub
inc
push
sbbb
fdivs
sti
xor
in
pop
add
sarb
adc
rolb
inc
sub
xor
xchg
and
gs
in
fs
insb
jg
rcrl
sarb
inc
scas
and
outsb
fbld
mov
xlat
xchg
adc
mov
fs
push
xor
or
xlat
xor
jb
ror
lock
jle
xor
sub
mov
xchg
rorb
arpl
push
jbe
and
mov
jmp
xchg
sbb
call
mov
dec
mov
test
leave
and
jbe
lods
into
xor
xchg
inc
enter
pushf
cmp
loop
jmp
push
adc
iret
lret
in
push
arpl
dec
daa
hlt
sbb
or
bound
pop
or
push
fcom
pop
and
cmp
mov
out
pop
cwtl
pop
jl
sti
add
ljmp
test
xor
int3
cmpsl
xchg
xchg
jg
test
insl
inc
cmp
movsb
leave
pop
push
add
pop
aaa
addr16
gs
rol
push
sub
jge
shrb
int
fwait
dec
pop
inc
stos
sti
popf
pop
mov
mov
loopne
fsubl
pusha
fisttpll
test
jl
ja
int3
sbb
loop
or
and
or
push
push
push
repnz
ds
jne
push
lahf
sbb
stc
popa
in
int
or
pushf
lods
inc
jo
xor
sbb
repnz
xchg
dec
enter
lods
fsubrs
test
xchg
dec
cwtl
mov
mov
ficoml
nop
icebp
jo
mov
jg
ret
or
rolb
popf
push
sahf
int3
daa
test
daa
and
xchg
pop
cli
dec
outsb
rep
jno
push
clc
push
lret
aas
pushf
push
push
mov
sbb
insb
rorl
push
mov
mov
shlb
ret
mov
out
in
int
hlt
mov
test
in
inc
push
dec
into
flds
cli
ret
sti
xchg
pop
xor
fistpl
push
add
ja
and
pop
mov
pop
add
mov
dec
pushf
loopne
test
sti
jnp
cwtl
push
xor
mov
sub
push
and
and
pop
mov
imul
jae
and
or
inc
pop
out
adc
pop
adc
push
int3
dec
cmovne
xchg
push
lods
and
jle
insl
pop
scas
iret
or
cmpsl
xchg
cmp
repnz
xchg
fcomps
stc
dec
inc
das
mov
mov
es
jg
jle
mov
dec
leave
jmp
popa
fwait
popl
mov
push
fwait
pop
adc
pusha
sarb
icebp
leave
mov
lcall
jle
push
add
inc
aas
cmp
mov
mov
stos
pop
add
mov
xchg
pop
mov
push
fimuls
push
mov
xor
fisubs
loop
xchg
sti
cwtl
pop
sbb
xor
pop
sub
mov
mov
idiv
inc
lods
or
out
jge
pop
std
adc
jo
push
int
mov
jecxz
pop
xchg
and
inc
fisttps
or
add
pop
push
adc
mov
cmovns
popa
dec
loop
insl
lock
ror
mov
fwait
pop
mov
dec
push
sub
add
imul
push
mov
xchg
lahf
mov
enter
jmp
sub
flds
cmpsb
test
mov
jns
test
sbb
inc
cmp
scas
in
int3
push
imul
dec
lret
ret
nop
jg
roll
stos
rol
cmp
icebp
fmul
std
push
and
pop
popf
adc
cli
jbe
ss
xchg
mov
loope
sub
jecxz
push
xchg
pusha
cmc
mov
adc
repz
sbb
inc
addr16
push
popf
pcmpgtb
push
mov
aas
sti
in
adc
push
add
rcll
in
pushf
sbb
dec
outsb
lock
scas
out
dec
push
stc
scas
push
loopne
js
out
xchg
push
je
inc
add
mov
jo
cwtl
xor
adc
cltd
sbb
pop
mov
xor
out
xchg
push
insl
das
pop
lds
scas
popa
push
test
sub
popa
mov
cmp
jmp
scas
es
loop
jge
imul
je
shll
stc
loopne
mov
jns
scas
rcrb
mov
loopne
sub
daa
jmp
jb
lds
push
shlb
inc
int
out
dec
in
and
mov
sub
imul
insl
sub
push
or
mov
cmc
or
sbbb
mov
bound
imull
mov
cmp
xor
mov
cmp
push
add
popf
dec
jns
or
daa
dec
jae
jecxz
push
push
mov
das
push
inc
daa
rcrl
stos
or
rep
and
mov
pop
cmp
push
mov
iret
xchg
ds
mov
mov
and
pusha
loop
ljmp
mov
xchg
lods
and
js
into
repnz
or
stc
pop
test
scas
rcrl
sbb
mov
sbb
add
jnp
iret
jo
add
dec
push
dec
and
cmp
adc
shrb
jnp
pop
cmpb
mov
lea
mov
mov
jle
loopne
jmp
adc
mov
and
repz
jnp
mov
mov
mov
mov
in
lods
test
dec
iret
xchg
in
aas
inc
push
mov
popa
cmp
aaa
jmp
dec
mov
adc
popw
ds
movsl
xchg
inc
cmp
cmovb
scas
ja
aaa
sub
fwait
push
out
sbb
sub
jbe
pushf
mov
iret
in
dec
int3
xor
lds
xor
aas
in
aad
add
mov
inc
iret
and
and
stos
js
inc
pop
mov
mov
call
lahf
push
mov
lods
jl
in
pop
inc
add
ret
lahf
xlat
inc
jge
push
rcl
insb
dec
mov
jne
pop
outsb
das
adc
xchg
lods
or
outsb
xchg
fldcw
push
outsl
lods
mov
xchg
mov
dec
sub
push
sub
jo
mov
loope
loop
xchg
sub
sub
cmc
inc
movsb
or
cmp
inc
iret
mov
jecxz
push
pop
lcall
lods
jle
push
jecxz
fcom
cmp
movsb
inc
das
jp
jge
ds
push
test
lcall
inc
xlat
cmc
jmp
in
cmp
add
jl
push
adc
je
mov
loop
loop
sub
push
pop
push
mov
sahf
jle
adc
add
adc
add
addb
into
stc
int3
inc
repnz
jae
mov
push
xlat
pop
pop
adc
sub
scas
int
mov
xor
aam
rclb
decb
gs
jmp
dec
lods
mov
pop
mov
xor
insl
shlb
xchg
lods
mov
iret
mov
insb
stc
fldenv
test
cmp
xchg
pop
dec
in
test
ss
mov
jecxz
lret
dec
test
sbbb
jle
pop
mov
and
cwtd
iret
push
mov
sbb
xor
pop
js
jmp
aad
arpl
dec
jecxz
mov
ret
push
stos
push
int3
xchg
cmp
dec
lods
movsl
cmp
pop
ret
xor
pop
pop
sti
fdivl
cmpsl
cmp
pop
data16
aas
out
pushf
lods
xor
cmpsl
dec
inc
mov
loop
mulb
sbbl
insb
in
xor
rorb
and
js
aaa
cmpsb
dec
mov
fsubrs
dec
push
xchg
cmovae
cmp
mov
dec
mov
daa
add
inc
dec
mov
cmp
mov
fisttpll
or
mov
adc
mov
cmp
mov
stos
adc
add
mov
cld
out
in
js
mov
dec
andl
outsl
sub
cmpsb
add
lahf
pop
jmp
js
aam
jnp
cmp
xchg
loop
shrl
mov
push
pop
xor
loopne
inc
rcr
stos
test
jp
fiadds
mov
dec
out
jp
test
ja
loopne
aam
outsb
fcomi
mov
sub
dec
jmp
mov
sbbb
lahf
sbb
cmp
sub
push
push
mov
frstor
push
jne
aas
andl
xor
mov
jo
sub
js
mov
test
pop
imul
fmulp
xchg
lret
push
xchg
push
push
pop
sub
or
xchg
or
cwtl
and
loopne
sbb
add
push
leave
xor
dec
les
incb
repz
test
mov
mov
mov
rorl
push
inc
into
rorb
adc
imul
mov
pop
lds
loopne
cmp
fists
sbb
push
mov
jl
push
rcl
in
imul
adcb
and
mov
popf
mov
loop
leave
or
xor
pop
neg
rcrl
repnz
enter
repz
dec
jno,pn
leave
mov
mov
clc
fistpl
push
lock
or
in
adc
xor
cmc
out
cmp
sarl
test
add
push
iret
jg
das
ljmp
or
pop
mov
fdivl
jns
and
les
jmp
and
adc
mov
and
iret
add
inc
mov
movsb
enter
leave
dec
mov
add
pushf
loope
lret
clc
mov
data16
jp
inc
sub
mov
mov
sub
adc
arpl
pop
popf
in
imul
add
and
add
and
add
adc
push
sbb
and
fldl
sub
xchg
xlat
lret
add
or
mov
sub
test
movsl
push
cmp
inc
jno
lock
pop
fisttpl
pop
mov
ficoml
lret
dec
push
data16
mov
inc
sbb
popf
mov
sub
push
outsl
fwait
or
int
in
or
dec
fidivl
xor
xor
xor
sub
sbb
addl
test
cmc
dec
adc
stc
sub
roll
mov
push
hlt
scas
shrb
jne
jmp
xor
icebp
xchg
pop
test
hlt
rorb
jecxz
adc
mov
pusha
pop
jmp
ss
out
push
int
adc
sub
pop
xor
out
pop
xchg
jae
ja
or
mov
sub
xchg
mov
cwtl
push
dec
ds
stc
punpckldq
jmp
scas
in
mov
mov
out
sub
xor
movsl
sub
push
xor
inc
loop
rcr
loop
sbb
in
mov
fisubrl
cmp
xor
add
fwait
push
test
ret
in
outsl
or
push
lea
cmpsb
mov
data16
push
dec
and
lret
cmc
sti
popa
mov
inc
mov
out
mov
enter
push
jnp
loope
popa
pushf
bound
xor
xor
dec
test
mov
inc
sbb
or
je
and
xor
add
jl
dec
fwait
aad
scas
shrb
inc
jecxz
sbb
push
inc
sub
mov
imul
in
mov
stos
les
fsubl
int
test
int
add
dec
mov
lock
hlt
jg
sysret
or
icebp
add
pop
loopne
clc
je
mov
in
aaa
push
adc
lds
push
jae
insl
xchg
pusha
into
hlt
testl
adc
idiv
or
hlt
pop
pushf
sarl
into
mov
insb
test
in
sti
xor
cmp
xchg
xchg
dec
sub
scas
ds
jns
push
inc
or
push
movb
cmp
jne
mov
mov
test
ds
aas
mov
add
lods
stos
rclb
or
or
in
xor
xor
cmpsl
loop
cld
sahf
push
pop
sub
cld
push
push
leave
mov
ds
or
std
pop
in
pop
adc
cmpsl
xor
shl
pushf
push
movsl
movsl
lahf
fstps
inc
sbb
movsb
js
fildll
push
mov
add
push
lcall
shrl
into
inc
and
pop
jp
lds
es
icebp
scas
fs
icebp
hlt
inc
in
lcall
and
sbb
fisubl
jecxz
sub
or
push
cmp
adc
adc
push
ds
mov
mul
push
jbe
adc
mov
push
jae
push
xorb
test
inc
cmp
sub
jge
popf
rcrb
fdivl
jno
jbe
int3
xchg
out
comiss
lcall
push
jbe
dec
sub
xor
jge
pop
xchg
jne
cwtl
push
mov
adc
lahf
pop
sub
insl
arpl
pop
movb
lock
imull
fisubl
and
xchg
fcoms
popa
sbb
movsb
ss
xor
xchg
imul
sahf
adc
lahf
push
fwait
mov
cli
mov
lret
push
and
stos
mov
push
dec
mov
push
repz
into
xchg
lret
mov
inc
inc
fwait
dec
pop
fs
fcomps
pop
and
or
dec
add
outsb
push
repz
les
xchg
iret
int
mov
dec
dec
inc
pop
aam
movsb
int
int3
mov
mov
mov
dec
cmc
dec
cmpsl
xchg
dec
insl
loopne
dec
and
push
into
sub
xchg
pop
lret
scas
aas
cmp
scas
add
out
mov
xchg
inc
scas
pop
insl
ja
jl
and
shrl
push
cmp
lods
adc
and
mov
mov
popf
xchg
cmp
mov
cmp
inc
mov
push
and
push
loop
fistpll
out
fmull
sub
sahf
lret
loopne
mov
pop
pop
jns
xchg
mov
jnp
fidivs
shll
mov
sub
pop
in
cld
cmpsl
pop
into
sub
inc
xor
popf
push
dec
negl
xchg
mov
mov
and
fisttps
hlt
or
inc
insb
mov
pop
add
sti
push
mov
xchg
xor
pop
xchg
cmpsl
dec
dec
xchg
fst
sub
fsubrp
idivb
mov
mov
sbb
push
push
leave
dec
enter
mov
test
add
dec
xchg
xlat
jg
push
out
dec
sub
mov
notb
sbb
fs
inc
push
fnstcw
mov
std
movsb
leave
xchg
imul
cmc
insl
pop
pop
es
pop
mov
ja
xor
xor
mov
in
and
sahf
dec
bound
mov
flds
fisttpll
adc
fwait
ret
jmp
jns
aam
rcrb
cmp
cmpsl
repnz
mov
orl
in
push
outsl
xchg
sub
insb
mov
xor
testl
mov
lcall
fadds
hlt
sbb
jns
mov
rorb
cmp
mov
pushf
shr
sbb
adc
adc
lahf
or
jo
outsl
gs
dec
mov
iret
cmp
arpl
aam
lods
movsl
mov
pop
in
test
mov
in
adc
sbb
cld
jmp
and
push
ret
mov
movsl
inc
mov
jo
sahf
sub
or
xor
je
imul
lret
and
jae
xchg
push
icebp
pop
aam
sti
dec
in
ja
push
lods
out
rcr
stos
or
push
test
incl
mov
fldenv
dec
adc
and
sbb
mov
add
mov
sub
push
jg
sti
mov
call
xchg
hlt
xlat
sahf
pop
test
ror
pop
int3
add
movb
and
pop
or
adc
rorb
inc
mov
rol
pop
jmp
cmp
add
lods
dec
xchg
jbe
add
and
cmpsl
push
cmp
xchg
sbb
mov
test
fstpl
jmp
sub
jmp
roll
lods
cmp
cmp
roll
push
push
cmpsb
or
gs
inc
sti
xchg
scas
xchg
adc
mov
inc
roll
shr
ret
ljmp
ja
std
testl
scas
pop
call
int3
iret
sub
jo
mov
add
ljmp
mov
outsb
arpl
test
fdivrp
jp
out
lret
out
jne
cmp
jmp
loopne
push
ret
inc
mov
cmp
mov
cmp
adc
sbbl
sbb
test
xor
xchg
cmp
es
jo
je
repz
xchg
and
insb
lods
or
test
mov
je
sarl
mov
sub
rcrl
pop
addb
popa
inc
imul
pop
ret
das
mov
pop
mov
fs
sub
int
xor
aam
mov
arpl
iret
push
pushf
mov
push
xor
mov
fidivrs
nop
inc
lahf
dec
jge
mov
stos
cli
adc
or
call
ret
cmpb
mov
decl
inc
push
jecxz
aas
aad
dec
dec
and
inc
pop
mov
pop
push
es
jnp
pushf
push
addb
lret
test
xchg
dec
movb
iret
xor
pop
lods
leave
jo
jge
or
pushf
xchg
cltd
call
in
adc
stc
cltd
imul
sub
jae
push
push
mov
add
clc
lods
shl
cmpsb
dec
and
xor
dec
pop
loope
loopne
mov
xchg
fldenv
stos
idivl
inc
lea
mov
js
pop
mov
pop
insl
cwtl
xchg
sub
fdivrl
sbb
stc
xor
xor
or
jge
add
xchg
dec
inc
jge
stos
and
sbb
test
sbb
faddp
push
jecxz
hlt
mov
out
repz
hlt
cwtl
jns
add
push
jae
fiaddl
call
sub
sbb
sti
mov
cmp
push
push
loopne
clc
add
adc
push
sbb
or
mov
test
mov
outsl
roll
xchg
xchg
decb
sarl
roll
cmp
dec
outsl
movsl
in
shr
mov
cli
cmpsl
arpl
sbb
test
add
or
es
fistpl
sahf
sub
xchg
cmpsb
adc
shll
lods
outsl
mov
adc
jle
dec
call
mov
dec
mov
test
push
pusha
xchg
xchg
adcb
push
lret
adc
inc
pop
test
fwait
mov
or
std
sbb
xchg
cmp
in
test
subb
std
push
rorb
xchg
cmpsl
cwtl
mov
pop
push
sub
xor
cmpsl
add
out
into
ja
push
add
mov
xchg
cmp
xor
mov
xchg
xor
lahf
pop
inc
scas
cmp
test
fwait
or
inc
mov
js
adc
jno
xor
push
ja
clc
repnz
and
mov
movsl
push
neg
xchg
sub
mov
sbb
mov
cmp
push
lds
int
mov
lcall
inc
imul
and
add
jecxz
xor
mov
push
jge
cltd
fstpl
push
mov
cmp
les
loopne
ja
hlt
sbb
and
mov
test
stos
adc
push
fwait
fcmovne
push
xor
xor
imul
dec
xchg
lea
push
mov
adc
xor
or
loopne
aas
sarl
or
cmp
mov
add
addr16
dec
out
push
sbb
pop
aaa
adc
movsb
xor
pop
shll
in
fists
add
jge
mov
rcll
call
mov
scas
and
sbb
or
jge
add
push
repz
cwtl
sahf
cli
and
dec
xlat
mov
cmpsb
pop
lock
mov
outsb
jbe
loope
push
aad
mov
mov
cmp
sub
mov
repnz
jnp
in
xchg
and
pop
jb
notl
or
je
out
roll
das
outsb
dec
inc
jge
pop
test
imul
sbb
dec
iret
adc
shll
pop
mov
mov
pop
aam
jo
fxam
je
ja
aaa
pop
sbb
adc
and
or
call
jo
xchg
cmp
jns
lcall
fwait
rorl
sbb
ss
out
or
testl
jno
inc
mov
std
test
mov
mov
in
sbb
adc
nopl
adc
adc
mov
in
jne
mov
mov
mov
adc
add
pop
das
and
mov
mov
ds
push
and
or
sbb
test
mov
es
insl
icebp
mov
jecxz
outsl
decb
cmp
jns
cmpsb
mov
js
xchg
fstl
es
cmc
mov
jb
jge
nop
fisttpll
and
mov
mov
sbb
jns
sub
gs
and
jmp
jle
mov
out
test
ja
int
movsb
lcall
add
add
add
mov
mov
sub
dec
xchg
or
in
lock
mov
dec
aad
xchg
enter
adc
aas
nop
xchg
cli
cmp
fstpt
repnz
mov
sub
je
rep
mov
js
mov
xlat
mov
xor
and
sbb
insl
imul
xchg
sub
in
data16
lods
jp
and
or
int
sbb
stos
stos
jnp
neg
cmc
js
ljmp
imul
in
fiaddl
sbb
cmc
aas
xchg
sbbl
jbe
xor
jno
xlat
imul
inc
int
inc
cvtdq2ps
sbb
cltd
ret
pop
cmc
jmp
dec
jecxz
arpl
xchg
lcall
les
bound
shlb
sub
xor
int3
lock
in
add
jmp
jo
pop
jp
mov
jns
xor
in
dec
notl
iret
cmp
ljmp
ret
mov
xor
xor
ljmp
int
rsqrtps
fnstsw
or
jbe
into
jmp
sub
call
push
jg
je
bound
cli
dec
rclb
mov
or
repz
or
fwait
sub
push
ljmp
fsubs
push
pop
pusha
cmp
loope
or
outsl
fcomps
scas
xchg
pop
notb
mov
adc
jnp
lock
dec
jl
lcall
test
push
lahf
mov
fsubl
xor
or
rcrl
dec
push
pop
push
addl
jo
icebp
insb
mov
enter
aam
mov
pop
and
dec
ds
push
or
dec
shr
insl
add
daa
sti
shrb
cmc
out
pop
sub
adc
push
inc
div
mov
mov
add
loope
adc
xor
sti
out
gs
push
adc
ja
cwtl
test
xor
shl
adc
insl
inc
sbb
xor
dec
jp
sub
dec
aas
sub
mov
jne
mov
test
dec
jb
pushf
cmpsb
or
jmp
sbb
and
sbb
mov
cmp
xchg
jno
mov
pop
punpckldq
into
xchg
sub
push
ret
cmp
lds
jae
push
push
inc
cmp
fnstsw
cwtl
in
fsubs
lods
sbb
add
fistpll
js
sbb
mov
or
inc
mov
add
cmp
out
mov
dec
fsts
adc
out
out
xchg
mov
mov
xlat
fs
dec
and
pop
or
add
adc
xchg
jbe
pop
mov
cmc
je
mov
xchg
out
cmp
enter
int3
stc
lcall
dec
sbb
enter
lods
jge
negb
sbbl
adc
rolb
movsl
enter
sub
jnp
or
out
mov
push
stc
adc
shrb
jecxz
push
and
roll
and
int
jns
in
in
xchg
in
xor
mov
cltd
dec
lcall
scas
arpl
mov
lret
jnp
mov
int
mov
in
xchg
lock
push
inc
cmp
pop
xchg
adc
pop
dec
and
cli
push
sub
enter
push
mov
imul
or
ror
push
vmovhps
or
adc
xlat
xchg
ret
mov
testl
jg
xchg
lahf
xchg
push
shrb
add
sti
lret
das
xchg
fisttpl
jae
popf
push
je
push
jbe
xor
jns
mov
je
fadds
pop
sub
push
insl
aam
adc
pop
fcoms
enter
mov
aaa
dec
xchg
and
out
sbb
push
or
lret
sbb
jmp
lods
das
mov
cmp
ss
mov
sub
pop
push
adc
sti
les
popa
push
sti
bound
imul
outsb
dec
es
movsl
fcompl
sub
test
mov
aam
testb
xor
or
aam
adc
jns
cmpsb
or
hlt
loop
push
mov
xchg
xchg
jo
sub
insb
dec
ss
add
in
xor
mov
fimuls
or
repz
mov
pop
idiv
cmp
dec
pop
cs
out
dec
mov
xlat
insb
test
xchg
lret
mov
sub
loop
inc
int
inc
test
and
pop
pop
mov
push
fdivl
dec
lods
testb
repnz
rol
add
cmp
dec
loope
xchg
sti
push
jne
xlat
add
pop
jg
pop
xor
jge
out
je
pop
mov
insl
lds
pop
add
mov
mov
pop
dec
popa
add
mov
bound
repz
test
push
fdivs
push
outsl
pusha
xchg
xorl
icebp
mov
nop
xorb
add
inc
inc
push
sub
icebp
imul
shll
dec
std
or
jmp
mov
hlt
push
cltd
jp
sbb
adcl
stc
outsl
mov
cltd
xchg
mov
jns
inc
dec
dec
pop
out
and
add
push
cmp
iret
mov
dec
dec
sbb
cmp
mov
xchg
aas
pusha
fiadds
std
add
and
push
adc
or
xor
andb
inc
or
pop
pop
inc
outsl
inc
aaa
or
lods
call
dec
out
xor
sub
rep
push
jno
subb
iret
mov
xchg
test
jae
cmpsb
push
mov
ds
repz
fldt
xchg
test
movb
add
in
cmp
pusha
xchg
pop
xchg
or
sub
shlb
jg
sbb
ret
push
test
test
popa
mov
jno
insl
lock
jae
mov
psubusw
fwait
cmp
push
mov
out
lcall
adc
jmp
adc
lcall
ret
mov
inc
mov
pop
pop
jle
arpl
in
jp
push
push
xlat
outsb
out
mov
and
push
stos
add
inc
xchg
int3
shll
pop
insb
stc
jb
mov
or
imul
push
add
and
divl
and
mov
push
pop
imul
mov
pop
or
fs
dec
lahf
mov
push
mov
push
repz
rcl
fists
inc
mov
divb
or
ss
and
and
sti
mov
mov
pop
mov
mov
xor
push
xor
rorb
lret
mov
push
xchg
rcrl
mov
xchg
push
xor
popa
xchg
sbb
loopne
or
xchg
stc
cli
test
mov
sub
mov
nop
or
jae
stc
lcall
push
cmp
push
fdivrl
pop
inc
mov
mov
push
mov
mov
dec
ret
xchg
in
push
and
mov
addl
mov
std
inc
jo
gs
jno
sti
enter
ds
mov
inc
cmp
test
jno
push
xor
daa
leave
arpl
cs
rcll
pop
das
fadd
mov
jl
fstps
insl
lret
mov
add
out
mov
mov
lock
mov
jp
sub
mov
add
in
aam
lock
sub
adc
pop
mov
push
sub
lock
shrl
mov
shrl
xor
repz
pop
sbb
xchg
mov
sub
xchg
lret
stc
imul
mov
ret
sub
es
dec
daa
sahf
sbb
lock
lods
pop
pop
and
pop
lds
test
es
push
xchg
mov
cmp
xor
or
div
inc
add
sub
repz
scas
movsl
pop
push
inc
stos
sahf
jns
xlat
xor
stos
push
cmp
and
clc
xor
push
insb
sbb
pop
or
xor
ljmp
in
fs
aaa
shlb
adc
sub
iret
push
add
jns
push
or
ret
syscall
jne
out
mov
pop
push
ret
scas
sarl
dec
ss
in
leave
pop
fucomp
xor
fisttpl
dec
jae
jbe
mov
imul
ror
sahf
push
mov
ret
aam
aas
ret
cmc
punpcklbw
mov
mov
in
add
sub
stc
add
push
xchg
adc
insl
or
push
cs
mov
insb
add
test
fdivr
jge
out
sbb
movsl
test
mov
ret
xchg
repz
popa
das
mov
cmp
daa
dec
int3
rcrb
adc
popa
mov
or
pop
jg
bndldx
outsl
loope
push
scas
loopne
or
fistpl
mov
mov
aam
sysexit
loope
push
fldl
aas
stos
mov
popa
mov
iret
inc
sub
push
jae
xchg
std
hlt
jmp
lahf
pop
sbb
bound
and
stos
mov
pop
popl
popa
ja
jno
cwtl
cmpl
adc
mov
jge
cmpsb
push
cld
test
inc
icebp
cmp
mov
jle
push
xor
mov
mov
or
pop
inc
add
xor
xchg
add
test
mov
jae
xor
or
jb
cmp
lahf
sub
pushf
cmp
dec
movsl
inc
cs
pushf
cld
ja
divl
iret
pusha
add
push
pushf
ljmp
fnstenv
test
imul
push
jns
jnp
xor
jbe
dec
mov
sti
mov
mov
stos
push
aam
lods
iret
mov
jmp
push
sub
jg
jns
sti
pop
cmp
adc
ret
cmp
data16
push
mov
push
jg
ss
pop
mov
int
inc
data16
rclb
shll
push
movsb
sub
mov
or
push
mov
stos
lea
mov
push
or
mov
push
test
push
scas
addr16
sub
mov
cmp
dec
addr16
push
orb
ret
ss
das
or
lcall
nop
lock
push
fcoms
out
dec
divl
cmp
test
cmpsb
test
out
test
in
repnz
test
sbbl
xor
add
stos
and
dec
add
cmp
adc
add
test
rcrl
lahf
adc
movsl
xor
pop
iret
loopne
sub
or
cmc
lret
push
movb
dec
arpl
jnp
mov
push
mov
pop
lock
ret
mov
push
adc
add
hlt
xchg
add
adc
mov
inc
xchg
pop
add
mov
movsl
sub
repz
cmp
sub
jge
int
add
sbb
xchg
xchg
cmp
sub
ja
cmp
aaa
cwtl
dec
jge
lcall
pop
hlt
addr16
push
inc
ds
mov
mov
cmp
mov
xor
push
xorl
mov
push
mov
mov
pop
icebp
mov
data16
xchg
sub
scas
jae
out
lret
ret
mov
dec
and
imul
mov
push
es
jbe
jae
out
xlat
sti
sti
jmp
mov
mov
jnp
pushf
push
jl
jnp
aaa
pop
sbb
or
inc
adc
enter
dec
mov
dec
fnstcw
in
push
xchg
mov
xchg
cmpsb
inc
inc
mov
addr16
or
ds
sub
or
sar
add
lock
call
cmp
loop
jp
nop
mov
testb
cmove
popa
icebp
lcall
cmp
pop
xchg
daa
xor
into
orl
lcall
jb
es
lods
test
sahf
push
daa
icebp
and
lock
test
push
and
xchg
test
fcmovnb
gs
dec
subl
jmp
ret
test
rorl
pop
sbb
es
mov
fs
gs
lcall
mov
xchg
aam
repnz
daa
jb
pop
pop
sbb
jne
adc
cmp
pop
sub
mov
out
idivl
stc
xor
dec
jnp
jo
mov
cld
adc
fs
push
jge
subl
pop
and
add
cld
js
decl
loope
mov
insl
ror
sbb
inc
mov
xchg
stos
leave
mov
jnp
pop
xchg
in
fidivrs
push
test
cmp
mov
adc
xchg
in
xor
cmc
les
mov
es
clc
add
mov
imul
sbb
outsb
sbb
fcmovnu
adc
ds
ljmp
lea
xchg
js
movsl
add
xchg
push
popf
cmp
mov
rolb
mov
sub
mov
icebp
add
hlt
mov
shl
inc
or
hlt
pop
push
or
push
test
add
icebp
jecxz
xchg
mov
nop
movsl
imul
pushf
dec
mov
popa
rcrl
pushf
call
aas
lea
out
jne
push
fimull
add
xor
xchg
xchg
sbb
inc
test
lock
loop
inc
xor
add
mov
dec
push
adc
rolb
cmp
cld
pop
out
jmp
sub
das
jle
mov
testl
xor
outsb
mov
push
and
int
test
xor
pop
pop
sarb
dec
flds
inc
inc
push
std
or
iret
and
dec
ds
test
jo
and
mov
cli
popa
mov
pop
push
push
notl
sbb
lock
sbb
orb
pop
xchg
clc
xchg
adc
lea
sbb
mov
push
nop
inc
xchg
das
jo
std
sub
test
sub
mov
sub
xchg
xor
and
pop
jp
jmp
sub
jnp
mov
addb
push
out
cltd
cmp
jg
ficoml
es
pop
pop
add
xor
shrl
lahf
xlat
xchg
pop
jge
jl
rorl
pop
cwtl
dec
sbb
cltd
shlb
xchg
out
aaa
add
mov
imul
lds
das
add
mov
mov
mov
fidivs
rolb
pusha
sbb
cmp
cmp
cld
jo
add
mov
xor
mov
add
jb
cmpl
daa
lods
dec
cli
dec
in
ret
push
and
xorb
ret
arpl
popl
push
mov
push
hlt
jns
jp
iret
mov
out
cwtl
ret
popf
scas
fdivs
js
mov
mov
lcall
jl
mov
jbe
add
enter
jle
ss
jns
add
push
clc
out
fcoml
jo
and
sbb
repz
xchg
ret
jl
mov
push
test
adc
mov
mov
in
les
push
mov
pop
in
addr16
push
clc
dec
push
and
xor
lods
imul
lock
mov
xchg
fcoms
incb
push
dec
jns
in
fistl
xor
sub
push
fimull
adc
adc
mov
push
out
stos
xor
ss
outsb
decl
stc
push
push
jae
jp
idivb
std
mov
adc
push
inc
cmp
add
fwait
adc
mov
lret
out
movsl
lods
dec
mov
add
das
add
adc
pop
or
push
or
das
int3
cmpsb
lret
or
outsl
test
push
data16
lahf
cltd
dec
pop
xor
sub
iret
mov
mov
cmp
mov
imul
aaa
dec
mul
out
aaa
dec
dec
add
daa
sbb
push
movlps
fstpt
lret
imul
lods
and
inc
sbb
rcrl
jle
dec
push
push
jns
adc
aad
xorb
jae
jns
push
xchg
xor
dec
mov
add
aad
xchg
iret
xor
fcmovb
movsb
sarb
call
js
mov
jnp
jne
inc
or
jnp
pop
mov
aad
lahf
in
lods
push
jae
push
jne
movsb
mov
cld
jp
push
lahf
and
pop
imul
iret
and
sub
add
das
or
jmp
push
pop
ds
nop
mov
mov
in
int3
add
fsubrs
insb
ss
lds
mov
aaa
or
mov
pop
or
js
movsl
add
inc
outsl
mov
mov
outsl
dec
out
push
mov
dec
dec
cmp
mov
adc
pop
jmp
pop
daa
mov
sub
xor
pop
pusha
stos
outsl
rcl
ja
inc
and
aad
or
stos
and
adc
ret
dec
inc
insb
jge
sbb
sti
push
adc
fwait
imul
dec
pop
es
cld
fildl
aaa
xchg
int
lock
adc
in
stos
and
push
mov
daa
sub
jnp
rcr
andl
in
mov
pop
xchg
test
ret
push
addr16
xchg
xorl
in
lods
cmc
jg
lahf
cmp
outsb
mov
repz
cli
mov
loopne
xchg
cmpsl
fnstcw
cld
popa
push
popf
xor
mov
fwait
pop
or
inc
pushl
ljmp
stos
cmp
or
call
cmp
dec
push
or
mov
push
clc
or
cwtl
in
mov
add
xor
shl
mov
xchg
cli
fstpt
push
sarl
mov
out
ja
or
or
neg
sub
lock
popf
cs
push
xchg
dec
or
mov
or
mov
push
scas
lods
aaa
jns
mov
xor
pop
cmp
add
mov
or
pusha
inc
jo
outsb
scas
int
xchg
adcb
dec
jnp
gs
in
iret
adc
aam
out
enter
cmp
lods
adc
addl
fnstenv
std
hlt
pcmpeqw
ljmp
fwait
and
or
or
jg
ret
sub
test
cmpsb
and
xchg
insb
dec
adc
mov
push
lret
adc
lds
cltd
jo
rolb
enter
aad
dec
push
adc
bswap
mov
mov
inc
lds
mov
jno
fstpt
and
divl
loope
adc
fldt
je
pop
std
mulb
lods
push
arpl
out
enter
stos
cltd
or
xor
cmc
pushl
das
dec
lret
add
add
and
or
cmp
divb
mov
mov
xchg
cs
push
and
jp
mov
mov
arpl
ror
stos
mov
fisttps
xchg
lock
sub
dec
stos
adc
imul
lea
inc
adc
stos
scas
xchg
jb
idiv
outsl
stc
loopne
xchg
mov
mov
inc
sbb
lock
cs
fstps
or
mov
sub
rolb
sub
mov
inc
or
cltd
sbb
add
inc
push
add
push
pop
mov
ficoms
mov
inc
push
dec
xor
je
es
imul
lar
adc
jno
sti
insl
aad
outsb
and
imul
add
andb
sbb
sbb
cmpb
jecxz
addl
out
add
leave
pop
pushf
lahf
lret
and
mov
inc
imulb
lret
inc
jge
adc
jle
cmp
mov
dec
aam
sbb
in
dec
jl
lcall
jns
fadds
dec
imul
inc
rorl
adc
ficompl
bound
movsl
adc
jle
xor
fdivp
in
ret
jo
pop
sub
sub
pop
cmc
and
xchg
sbb
pop
inc
mov
mov
dec
or
push
pushf
sbb
and
cli
and
lea
lret
xchg
cld
xchg
xor
xor
mov
dec
outsl
pop
xchg
sbb
vshufps
stos
inc
test
push
mov
dec
xchg
sbb
lret
add
testl
mov
mov
lahf
idivl
fdivs
mov
popaw
sarb
dec
cwtl
pop
int3
or
rcrl
or
and
aas
pop
mov
cmc
mov
or
clc
cmp
jnp
dec
ret
inc
out
js
aas
mov
dec
jge
inc
cmp
in
test
bound
jl
flds
aas
push
outsl
fcmovb
aaa
and
inc
dec
lods
pop
cmp
nop
sbb
xlat
mov
fdivl
xchg
pusha
lea
and
insb
or
or
std
adc
dec
dec
enter
xchg
mov
fwait
aad
inc
sbb
out
adc
and
mov
gs
sub
scas
aas
rep
aad
pop
mov
stos
cmc
cmpsb
xchg
gs
rol
pop
fimull
adc
add
int
mov
mov
cmpl
jb
adc
push
loop
cmc
dec
mov
hlt
xor
popf
in
push
enter
jne
sbb
adc
mov
cmc
jno
rcl
adc
adc
outsl
jo
fwait
mov
fdivrs
add
mov
cs
into
shlb
and
loopne
shr
xchg
ret
xchg
dec
mov
mov
shll
fcomip
and
pop
sti
inc
movsb
out
outsb
std
cmp
test
pop
jno
push
lock
push
daa
pop
cmpl
adc
bound
in
mov
sahf
scas
sbb
out
dec
popf
aaa
jae
in
fsubrl
lock
push
test
push
xchg
sbb
fiaddl
mov
out
imul
in
iret
out
jle
mov
sahf
ljmp
dec
insl
in
lods
dec
mov
dec
xchg
and
mov
sbb
inc
add
cmp
movsl
mov
jae
mov
ret
xchg
gs
movsb
lea
push
mov
ret
xlat
xor
lret
mov
dec
movsl
and
cmp
inc
filds
push
or
aaa
lock
sbb
xor
ds
xchg
jns
cld
jle
ljmp
lahf
jle
mov
pop
inc
jb
jo
adc
rolb
shll
cmpl
sub
or
xchg
in
and
pop
mov
insl
fmuls
sbb
cmp
adc
idiv
mov
pusha
jae
push
push
pop
out
fistl
enter
call
daa
push
xchg
sub
clc
add
pop
repz
jg
in
or
cmp
xor
pusha
ret
into
addr16
adc
gs
or
pop
out
popf
inc
sub
inc
popf
mov
cmpsb
jecxz
cmpb
les
inc
decl
xlat
in
iret
repnz
or
jge
pop
push
lcall
cmp
filds
scas
cld
shrb
xchg
sbb
xchg
pop
or
add
xor
popl
inc
add
mov
jp
fildl
jecxz
xchg
xchg
cmpsl
stc
movsb
mov
int
xlat
sti
daa
popf
fwait
adc
push
hlt
enter
pop
push
jp
int3
xor
dec
call
and
cmc
mov
clc
test
xor
jno
push
loop
push
fs
sbb
leave
leave
sbb
inc
rcl
ficompl
test
add
cmp
xor
add
jb
xchg
ss
xor
movsb
popa
add
fidivrl
push
jo
mov
xchg
mov
pop
and
xchg
inc
mov
add
cmp
loopne
or
mov
or
sbb
icebp
adcb
rcrb
testl
jecxz
mov
hlt
mov
mov
adc
orl
adc
aam
hlt
jnp
loope
inc
cmpsl
push
ja
xchg
andl
ljmp
lock
dec
push
out
imul
mov
out
lret
sbb
lods
mov
add
sbb
adcb
mov
movsb
repz
test
je
jo
stos
insl
push
cwtl
xchg
int
movsb
cltd
mov
xchg
jle
push
pop
xchg
fsts
shlb
mov
and
imul
inc
dec
and
js
add
cwtl
xor
or
cmp
mov
shlb
sbb
and
inc
inc
xchg
cmp
jnp
mov
xchg
test
cmpsb
mov
lret
rcrb
mov
inc
mov
mov
xchg
imul
jg
stos
fldcw
cs
sub
dec
sub
dec
out
add
scas
stos
ret
in
movsb
or
sub
std
mov
inc
ret
mov
dec
ja
adc
sub
mov
pop
pop
ja
popa
push
test
push
pop
jg
pop
lock
mov
mov
loop
fucom
rcrl
sbb
push
jno
push
arpl
imul
outsb
test
fistl
imul
push
sub
fdivs
mov
mov
out
das
jecxz
int3
js
cmp
arpl
sub
outsl
in
popa
dec
inc
int3
or
adc
subb
test
mov
jnp
mov
push
sbb
lods
sub
imul
jg
add
inc
sub
xor
js
or
xchg
mov
and
repz
inc
sub
insb
sub
popf
pop
test
and
pop
into
pop
adc
mov
cltd
jge
aas
dec
inc
lahf
outsl
xchg
mov
xchg
rorb
cmp
mov
es
xchg
sbb
loopne
sub
cli
loopne
pop
pushf
outsb
xor
mov
push
xor
or
dec
sbb
push
mov
or
clc
das
or
sub
xchg
aaa
cmp
js
or
push
clc
cmpsb
lods
jl
mov
pop
negb
mov
sub
imul
push
popf
stc
jno
dec
cmc
xor
fnsave
insl
cmp
lcall
pop
jae
shrl
dec
xchg
cmp
cmp
sbb
sub
lret
or
add
add
stos
jecxz
iret
dec
cmp
lock
push
mov
jne
mov
pushf
push
mov
lcall
sub
rcrl
xchg
sbb
sub
mov
or
repz
adc
test
mov
movsl
sub
roll
inc
or
sub
xchg
ljmp
adc
cmp
fistpl
xor
cmp
ds
jecxz
mov
adc
push
jmp
push
cmpb
ret
idivb
xlat
fldln2
insl
outsl
xor
jp
loope
inc
popa
test
popa
loop
stos
sbb
rolb
push
lds
cmp
jle
repz
jmp
outsl
lods
pushf
scas
int3
lods
mov
scas
dec
arpl
in
xchg
and
dec
leave
int3
call
pop
test
mov
jle
xchg
inc
push
pop
cmp
sbb
scas
fidivrs
sub
xchg
out
dec
fwait
mov
xor
mov
pop
mov
mov
or
aaa
ret
mov
mov
mov
sub
hlt
xor
push
bound
dec
or
pop
negb
inc
aam
imul
adc
inc
into
lcall
std
dec
xchg
push
push
sbb
dec
mov
mov
xor
and
jmp
stc
fstpl
mov
aad
addl
push
mov
push
std
hlt
imul
outsb
out
sbbb
and
pop
aas
push
movsb
in
push
in
dec
jae
mov
cmpsb
sbb
mov
movsl
jmp
dec
js
lds
sbb
fbld
add
fwait
in
jne
adc
xchg
ret
and
and
sbb
push
mov
inc
sti
or
orb
xchg
cmp
push
pop
scas
dec
movsb
add
pop
add
out
dec
cwtl
inc
enter
int
mov
in
jb
or
test
sub
jo
insb
sub
xor
outsb
sub
lret
push
dec
cmp
xor
xlat
mov
out
cmp
pop
pop
inc
jbe
add
dec
fs
xor
or
push
out
lock
inc
fisttpl
cld
inc
imul
data16
push
aam
cmp
mov
jb
cmp
xchg
and
jp
arpl
push
aas
rorl
and
dec
in
int3
test
mov
dec
fdivs
jb
or
jne
pop
out
bound
inc
adc
pushf
or
hlt
add
push
fdivs
in
pop
ljmp
add
mov
adc
in
in
mov
bswap
xchg
movsb
sbb
ss
scas
mov
inc
enter
inc
or
sub
dec
jo
clc
mov
add
cli
aas
pop
je
in
std
mull
lods
cs
mov
jmp
jbe
inc
cmp
lret
mov
in
sbb
shlb
add
xchg
mov
cld
mov
es
push
ljmp
es
into
nop
lahf
mov
in
mov
imul
out
pop
popa
mov
sbb
xchg
imul
jl
add
fisttpll
cmpsb
popl
fs
mov
popf
fstl
pop
cmp
sbb
mov
pusha
add
ficomps
mov
lret
dec
sarl
call
mov
mov
push
dec
fsubp
mov
in
movsb
aas
xchg
xchg
cmp
ret
cld
packssdw
mov
std
and
xor
adc
xchg
ds
ja
ja
cltd
cmpsb
ja
sbb
push
sbb
or
fidivl
call
dec
movsb
xchg
mov
adc
pop
hlt
mov
adc
xchg
iret
jno
adc
lahf
cmp
push
mov
mov
in
add
pop
loop
mov
iret
in
mov
xchg
jb
std
pop
inc
popa
stos
adc
cli
cld
lcall
in
xlat
loop
mov
int3
and
pusha
loope
icebp
inc
xchg
and
inc
jmp
xor
rcr
jmp
mov
rcl
lods
mov
sub
mov
sbb
cmc
push
mov
icebp
dec
fdiv
or
jns
mov
mov
gs
enter
int
adc
mov
call
mov
sub
ret
xchg
push
inc
xor
icebp
push
jns
inc
sub
mov
pop
sarl
or
pop
mov
call
push
dec
sub
jmp
ja
dec
fidivs
lds
jne
insb
or
call
cmp
out
aam
ja
cwtl
cs
repnz
ljmp
test
pusha
mov
ja
push
cld
push
jl
aas
imul
or
addr16
in
jge
sbb
repnz
dec
jmp
andb
xchg
xchg
xlat
daa
add
cltd
inc
jo
mov
lret
testb
cmp
mov
lds
and
adc
sti
daa
call
lea
pop
andl
in
ror
jbe
xchg
mov
add
ja
dec
and
sub
xchg
mov
mov
sbb
jns
dec
pop
das
shlb
add
mov
mov
xor
mov
jg
jne
mov
mov
cld
frstor
pop
pop
sub
and
pop
mov
xor
sbb
lds
or
mov
xor
xchg
mov
mov
adc
iret
outsl
pop
arpl
fbld
rorl
pop
xor
test
pushf
add
pop
pop
cmpsl
rolb
xlat
enter
mov
mov
arpl
cmova
jmp
inc
lods
and
ss
cmp
xchg
mov
ret
mov
std
lret
insb
fnstsw
enter
loop,pt
ljmp
test
inc
dec
test
scas
testb
arpl
jo
xor
std
jns
inc
mov
sub
cmp
outsb
jmp
nop
ja
loop
ljmp
xlat
mov
sub
in
push
rorl
aaa
or
insl
addr16
jno
sbbl
test
dec
push
scas
jnp
jns
scas
imul
fs
pop
jmp
inc
jle
adc
push
mov
inc
push
fnsave
pushl
str
cmp
int3
addr16
xchg
stos
inc
cld
test
dec
push
push
inc
xchg
lods
mov
pop
ffreep
imul
push
jae
xchg
mov
imul
cmp
adc
sbb
sub
clc
ja
js
shlb
and
sbb
fdivrs
dec
movl
xor
mov
xor
in
jg
jbe
push
xor
or
decl
ret
push
push
sarb
sub
adc
mov
addr16
and
push
dec
xchg
or
pop
lret
mov
es
popf
mov
mov
mov
and
cmpsl
jns
xchg
out
fs
test
sub
jecxz
outsb
pop
add
sti
sub
jp
or
sub
xchg
pop
sarb
arpl
mov
sbb
lock
push
fldenv
xor
dec
add
inc
mov
sub
fimuls
xchg
mov
arpl
clc
ds
xlat
insl
lods
insl
add
and
outsb
or
xchg
pop
pop
inc
cwtl
cmpsb
cmp
push
outsl
sbb
jbe
ret
outsl
jle
push
ret
mov
push
stc
sahf
cmp
xor
das
inc
add
add
dec
or
aas
mov
jge
pop
mov
or
daa
xor
push
mov
sbb
loopne
movsb
js
cs
dec
cmp
test
and
xor
jb
cmpsb
lea
stos
adc
into
and
popf
sbb
xor
xor
xchg
dec
shrb
adc
jo
xchg
ja
push
aam
out
stc
cmp
in
mov
dec
adc
movsb
js
lods
and
popf
jg
sbb
out
lock
cltd
or
jb
push
sub
scas
bound
test
stc
sbb
xchg
insb
push
mov
xchg
idivl
dec
ret
push
pop
add
jbe
std
gs
inc
shrl
cmp
out
in
pop
mov
lods
test
insl
pop
jge
popf
pop
enter
fimull
lds
nop
and
fwait
cwtl
pop
lahf
push
rol
adc
xor
mov
jne
insl
xchg
loop
mov
xchg
add
pop
adc
push
dec
xor
jge
inc
push
loop
xchg
dec
jnp
enter
fisttpl
xor
pop
cmpsl
mov
push
sbb
adc
in
lods
js
leave
hlt
fmull
mov
test
repz
lret
mov
loop
imul
fsubrp
jo
or
std
test
and
lods
cmp
mov
rcl
push
out
int3
cmp
addr16
ljmp
out
test
push
aaa
ss
adc
xchg
xor
adc
add
pop
or
stc
fdiv
fwait
data16
cmp
lds
push
inc
sbb
in
pop
js
popa
add
in
hlt
jle
sub
push
dec
sti
sub
pop
or
int3
in
cltd
sub
pushl
subb
pop
imull
repz
fsubs
es
push
imul
subb
stos
mov
mov
stc
mov
fimuls
dec
pop
jge
dec
enter
xchg
out
mov
or
popf
mov
test
andb
imul
or
mov
das
das
int
cmpsl
ss
pop
adc
hlt
test
pusha
stc
incl
inc
aas
testb
rclb
push
adc
sti
popa
movsb
sub
xchg
pop
adc
jo
enter
stc
fstps
out
inc
mov
mov
ret
fadd
in
mov
mov
leave
mov
je
sbb
xchg
popl
mov
jmp
inc
inc
sub
xchg
sub
xchg
adc
hlt
pop
xchg
fwait
decb
gs
jg
insb
outsb
jmp
lods
fwait
sbbb
iret
imul
bnd
push
cmp
aad
xchg
pop
sub
pop
xlat
mov
fnstenv
add
js
rcll
xor
aam
lahf
adc
inc
out
lret
sub
movsl
fucom
adc
push
icebp
test
mov
push
inc
stos
or
sub
outsb
stc
mov
jns
lock
ljmp
jne
push
and
int3
cmp
push
mov
lea
fmull
jle
push
mov
bound
scas
dec
push
mov
mov
lcall
sti
sarb
jmp
fistl
cld
xor
cltd
adc
sub
iret
nop
pop
push
stos
jae
out
aas
repz
jns
ja
xor
jbe
inc
push
divb
cwtl
mov
lahf
adc
lea
int
mov
dec
dec
mov
push
push
arpl
fldl
jle
icebp
mov
iret
add
mov
mov
pushf
xchg
insl
cs
es
mov
call
sub
or
xchg
mov
aaa
cld
fbld
xchg
fs
aam
xchg
inc
or
stos
and
jecxz
mov
movsl
in
cs
fs
and
mov
pop
std
xchg
call
fdivrl
stc
scas
push
cld
jmp
sub
daa
inc
push
push
inc
or
xchg
adc
lcall
test
shlb
jge
and
xor
addr16
addl
ss
enter
cmpsb
jge
stos
pop
in
int3
aaa
cmp
adc
adc
cmp
lods
mov
jo
shrb
loope
jb
xchg
mov
inc
and
aas
lret
xchg
jo
jnp
push
inc
shr
xor
jno
out
mov
jle
add
lcall
mov
inc
aam
mov
popf
jnp
sub
mov
xchg
push
lods
call
es
mov
fisubl
pushf
mov
divb
into
adc
out
gs
cmp
hlt
inc
test
dec
mov
xchg
push
cmp
out
cmpb
sbb
imul
repnz
daa
js
xor
add
repnz
arpl
mov
in
add
sbbb
test
jne
jns
dec
xchg
inc
inc
jo
jge
fcomp
cmpsb
sub
add
movsb
mov
lahf
mov
jge
lret
das
lret
aad
fdivrs
push
push
cld
out
mov
rcrl
pushf
cmp
vpsubusw
push
je
cmp
daa
test
sub
les
jge
xor
shl
mov
sub
jle
jns
loope
dec
and
movsl
sti
sbb
cmc
dec
lret
cmpsb
sbb
sub
icebp
addr16
sbb
shrb
fcmovne
cmp
addr16
adc
nop
sbb
push
or
aad
inc
rcr
xor
fiadds
in
iret
push
jecxz
push
mov
je
xchg
dec
xor
or
insb
sbb
ret
test
jo
je
sub
add
popf
inc
xlat
xlat
scas
cli
mov
mov
mov
adc
rclb
stos
cld
faddl
gs
data16
mov
iret
push
mov
mov
xor
filds
mull
and
sub
mov
shlb
imul
lret
repz
pushf
mov
lea
hlt
gs
into
or
mov
xchg
mov
adc
add
fucomip
test
out
pop
jge
xor
out
cmp
inc
mov
jge
jnp
leave
jle
lds
mov
jb
adc
mov
cmp
jge
sbb
cmpsl
mov
out
shlb
mov
cmpsl
int3
aaa
ret
ljmp
push
loope
jnp
mov
enter
clc
push
je
mov
cmp
ds
jle
cltd
jle
sub
enter
sti
sbb
into
outsb
ja
push
pusha
mov
push
sub
sub
insb
inc
cmp
jns
xor
pushf
test
mov
lea
push
inc
in
insb
aaa
xchg
push
and
xchg
cld
stc
imul
inc
push
data16
add
push
clc
jmp
in
das
mov
repnz
mov
outsl
jno
movsl
push
iret
ret
cmp
jb
pop
enter
cmc
je
aad
lods
or
mov
push
cmpsb
and
mov
enter
enter
fstps
std
int3
push
imul
outsl
rorl
xchg
push
mov
sahf
jb
push
xchg
cwtl
inc
sbb
stos
mov
dec
les
adc
std
inc
or
add
das
xor
ret
jg
xor
and
in
in
sbb
pop
ja
andl
sar
jno
stos
je
out
test
daa
fisubrl
out
jnp
lock
inc
push
push
adc
add
dec
femms
repnz
movsl
bound
mov
lods
repz
sub
in
sbbb
das
mov
inc
rcrl
jmp
movl
and
mov
cli
out
repnz
lcall
dec
add
pop
icebp
in
test
je
jb
and
mov
pop
xchg
sbb
inc
jmp
xor
mov
cwtl
mov
sbb
adc
add
jnp
das
jns
clc
xchg
icebp
in
mov
inc
adc
addr16
out
faddl
pop
or
sbb
test
je
mov
popa
js
imul
mov
cltd
fistpll
jg
pop
fsubrs
iret
mov
add
cmp
sbb
lret
enter
xlat
inc
adc
aam
out
sub
dec
test
gs
nop
sahf
inc
inc
cmpsl
cmpsb
mov
fwait
mov
and
xchg
in
or
mov
fdivs
int3
ficoml
dec
mov
mov
cmpsb
cmpsb
jb
mov
mov
sbb
lods
jmp
jmp
out
xchg
mov
aas
sti
dec
sar
or
mov
adc
mov
movsb
xchg
jg
imulb
outsb
minps
dec
fimuls
dec
mov
add
loopne
in
jb
jl
test
mov
clc
nop
inc
das
mov
stos
sbb
inc
dec
sub
lds
jl
clc
xchg
xchg
mov
add
movsb
inc
fistpll
test
and
adc
pop
inc
hlt
bswap
loop
jge
cltd
sub
mov
sub
cmpsb
data16
inc
aaa
shll
cmp
out
aaa
idivl
out
jl
test
movsl
orl
add
call
je
xor
es
stos
xchg
xor
cli
rcrl
pop
iret
add
jb
idiv
dec
pop
aas
add
mov
shlb
fwait
adc
pop
ss
mov
mov
les
jge
jne
jmp
cmp
mov
out
sub
jbe
add
in
mov
pusha
cwtl
movsl
lahf
push
dec
jne
adc
pusha
xchg
mov
sub
jae
xor
cltd
test
dec
mov
mov
lods
lods
xor
lods
outsl
cld
or
divb
push
mov
mov
repz
pop
xor
add
adc
add
out
cs
shll
leave
mov
aam
mov
insl
dec
popf
dec
std
pop
int3
test
imul
testl
mov
mulb
sub
adc
ret
clc
sbb
or
insl
adc
inc
testl
popf
bnd
push
ds
movsb
jg
fisttpll
cmc
insl
repnz
xor
mov
dec
cmp
clc
pop
xchg
pushf
lahf
dec
jmp
daa
sbb
dec
out
mov
jge
xchg
popa
ds
pop
push
or
mov
and
xlat
stos
les
xchg
mov
cmp
inc
xlat
pop
mov
xor
negb
mov
shll
cwtl
inc
addr16
lock
mov
or
adc
dec
lods
add
cli
inc
fidivl
or
sbb
out
daa
scas
in
jno
psubsw
mov
mov
lds
push
iret
cmp
mov
or
mov
cmp
dec
data16
xchg
mov
push
sbb
aas
imul
push
pop
xchg
xor
mov
sbb
shr
aad
popa
imul
lahf
inc
lds
imul
iret
pop
and
push
mov
mov
ja
xchg
pop
jg
dec
sbb
inc
fnstenv
je
cltd
bswap
test
test
jno
or
movl
cwtl
in
mov
pusha
ljmp
jg
cmp
xor
dec
jns
pop
stc
repnz
cwtl
pop
sar
xchg
popf
hlt
cmp
or
inc
mov
imul
insl
fcoml
ret
loope
in
test
and
fildll
mov
cld
fistpll
sub
add
movsb
repz
aaa
xchg
or
pusha
das
loopne
fnsave
clc
pop
sbb
fs
je
or
adc
out
les
inc
decl
dec
leave
push
daa
adc
jno
jno
and
cmp
sti
pushf
mov
lods
jmp
leave
xlat
fisubrs
adc
roll
mov
int3
pop
test
outsb
jne
pop
push
dec
mov
add
ja
xchg
dec
xlat
testb
mov
roll
xchg
mov
xchg
cmp
mov
adc
imul
xor
es
insb
arpl
dec
cmp
sbb
pop
scas
xchg
repnz
adcb
inc
lahf
adc
cwtl
mov
or
pop
loop
dec
jno
cs
cmp
push
mov
push
push
push
arpl
ds
sub
shll
arpl
xor
gs
push
popa
test
mulb
cmp
enter
or
shlb
push
mov
jbe
mov
popf
mov
je
push
les
mov
jle
jl
cmp
ret
ss
sbb
or
mov
jno
and
pop
ljmp
popa
xchg
aaa
inc
add
gs
leave
adcl
test
xchg
sbb
jl
outsb
adc
sub
std
gs
out
movb
in
pop
cmp
push
pop
dec
mov
dec
iret
inc
mov
in
sbb
mov
fcoml
scas
push
dec
push
xchg
inc
es
xchg
inc
dec
mov
clc
mov
adc
pop
sub
mov
ss
out
lods
addr16
mov
lret
cmpb
push
sub
shl
pop
dec
out
mov
ja
std
ret
ror
inc
loop
fidivrl
sub
xor
xchg
fnstcw
or
mov
js
push
mov
push
dec
daa
fstp
ret
xchg
mov
push
sub
bound
movsl
insl
inc
ljmp
jnp
dec
ljmp
iret
roll
add
mov
mov
cmp
push
jbe
aaa
cs
shll
sub
out
push
in
sbb
sub
test
shld
xchg
pop
add
inc
fs
push
mov
mov
xor
dec
sti
scas
fwait
imul
test
clc
xchg
popa
arpl
mov
mov
sahf
jecxz
sub
fildll
sub
shl
pop
jae,pn
stos
out
mov
push
jae
mov
fsubl
les
sbb
pop
popw
sbb
mov
xchg
stc
xchg
xor
loopne
jns
xchg
iret
je
xchg
out
nop
adc
mov
psllw
call
es
sub
stc
lahf
jecxz
repz
mov
arpl
out
xchg
lds
and
push
sti
add
clc
sub
mov
ja
gs
jg
fldcw
xor
or
and
jp
mov
xchg
mov
loopne
mov
ret
shll
jp
push
push
lcall
inc
dec
xor
stos
in
aad
aam
jbe
insl
add
jns
dec
ret
popa
loope
mov
add
sub
fistpll
xlat
sbb
lcall
push
outsl
pop
fs
mov
mov
int3
sbb
mov
mov
es
sar
test
mov
xchg
mov
sbb
dec
test
cmp
sbb
push
mov
add
dec
fsubrp
mov
add
insl
cmp
xorb
mov
push
jl
jb
out
xor
out
xchg
mov
jg
shll
decb
subb
stos
ljmp
lahf
and
int
testl
notl
and
add
cmpsb
lock
fsubr
aad
sbb
dec
push
jae
mov
adc
hlt
stos
pop
adc
pop
das
xor
cmp
mov
push
nop
jo
mov
and
mov
mov
add
std
add
inc
rol
cmc
sub
mov
mov
sbb
sbb
cmpsl
pushf
push
xor
repz
mov
mov
cmpsl
aam
cld
les
xor
sub
popf
dec
add
adc
adc
inc
enter
into
inc
outsb
mov
cmp
lock
mov
loop
xchg
in
push
adc
dec
pusha
mov
jb
cwtl
insb
roll
and
mov
inc
popa
sub
sbb
dec
fs
out
lret
aaa
ja
out
and
cmpsl
or
int3
prefetch
dec
aam
and
shrl
cld
mov
icebp
repz
pop
cltd
rcll
clc
dec
sub
lret
or
fldl
pop
push
shll
mov
jae
sti
dec
inc
std
lahf
xchg
jbe
aad
add
xor
loope
cmp
cs
xchg
dec
push
je
xchg
lret
icebp
cltd
dec
pop
push
fstl
movsl
lock
inc
or
mov
mov
push
adc
hlt
push
adc
popa
fimull
or
mov
mov
mov
pushf
mov
push
lods
xchg
push
dec
repnz
xlat
pushf
cmp
xchg
faddl
sarb
push
nop
loop
push
mov
sbb
sub
inc
cmp
bound
sub
xor
adc
cmp
aas
mov
push
fwait
fwait
xchg
mov
shr
xor
lret
sub
out
test
mov
into
jo
stc
cmp
stos
jno
or
inc
dec
rcl
add
cmpsl
int3
or
mov
aam
mov
jno
aam
or
gs
ret
inc
push
jnp
clc
loopne
mov
inc
mov
icebp
jo
cld
cli
leave
mov
xchg
pop
push
scas
movsb
cmp
or
int
and
xchg
and
lods
jne
push
test
adc
dec
lods
lret
adcb
mov
or
xchg
jecxz
test
and
daa
test
test
fs
push
push
frstor
aad
ss
nop
push
je
sbb
das
xchg
or
fnsave
adc
mov
in
shlb
dec
in
mov
push
xchg
push
or
xchg
mov
mov
outsb
add
sbb
das
shrl
sub
ret
sti
mov
pop
dec
inc
xchg
jge
cmp
cli
ja
stc
jmp
divps
pop
nop
sbb
lods
xchg
mov
lods
fstpl
out
insb
in
ljmp
push
push
aaa
adc
cmc
roll
and
pop
pop
ljmp
jg
gs
adc
in
iret
imul
mov
or
ret
lock
and
negl
sbb
pop
push
sbb
mov
or
or
adc
inc
aaa
fmuls
add
int
outsb
cltd
imul
xchg
sub
movsb
or
add
inc
les
add
push
jnp
jg
jmp
jne
jp
mov
dec
xchg
dec
call
in
ja
mov
lea
sbb
int
rcrl
inc
sarl
mov
add
andl
fucom
add
jb
leave
stos
adc
gs
dec
ret
cld
jle
rol
jo
les
jle
pop
adc
jmp
fldcw
ljmp
popl
mov
jo
mov
fbstp
jne
fldt
jecxz
push
jl
jae
scas
out
cld
js
loopne
inc
add
fucomi
pusha
adc
sub
lahf
sarb
xchg
xchg
repz
xchg
mov
loopne
lcall
fcoml
into
leave
dec
ret
inc
ljmp
push
adc
cvtps2pd
aaa
imul
ja
pusha
int
gs
shrl
xor
fs
and
sbb
push
cmpsl
data16
adc
inc
iret
in
mov
cltd
in
mov
adc
lcall
inc
insl
push
fadd
aas
in
aam
in
arpl
push
bound
sti
pop
shll
rcrl
jecxz
adc
stos
fisttpl
sbb
test
mov
ja
xchg
sub
gs
fistps
lcall
repnz
testb
xor
pop
mov
cmp
sub
out
nop
in
jmp
jle
adc
int
push
or
out
mov
xchg
inc
jecxz
pop
pop
outsl
lret
stos
dec
fdivl
imul
test
mov
ja
fcomp
pop
movsl
and
pop
das
jl
loopne
mov
jne
pcmpeqw
pop
mov
das
mov
imul
bsf
test
and
add
cmp
ja
dec
xchg
or
stc
sbb
rcll
adc
xor
mov
es
loope
mov
push
push
notb
mov
inc
jne
and
dec
mov
fxam
pushf
sahf
movsl
loope
ss
adcb
cwtl
in
mov
ja
les
lods
pop
sahf
mov
stos
xchg
fstpl
stc
or
scas
push
fcomps
pop
mov
lods
cmc
jg
mov
dec
iret
push
popf
cli
stos
mov
lods
jo
dec
in
and
fiaddl
xor
mov
sub
mov
fmull
outsb
fcmovnb
xlat
xchg
xor
scas
push
bound
les
mov
lock
sbb
ret
pop
das
mov
fidivs
push
mov
test
pop
lods
lret
push
dec
mov
cltd
test
sahf
mov
inc
push
jne
sbbb
loop
fstl
in
lret
dec
cmp
mov
leave
lods
jg
push
mov
rolb
call
pop
xchg
dec
mov
jp
jge
xchg
cs
ret
cmp
call
jo
mov
inc
xor
fdivl
add
shll
repz
hlt
cmpsb
push
cmpsl
out
jb
push
jp
cmp
shll
inc
inc
inc
add
bound
xchg
inc
rcrb
hlt
cmpsl
ror
and
push
xor
cld
jbe
jmp
mov
shlb
popa
mov
icebp
popw
pop
mov
mov
push
repz
les
daa
jle
call
mov
aad
pop
sub
jbe
inc
or
bound
add
mov
mov
cli
push
pop
add
adc
adc
ss
insl
ret
hlt
nop
xor
cmpsl
aad
xor
push
mov
decb
pop
xchg
ds
test
and
dec
adcl
shlb
int
cs
fstpt
les
xchg
in
js
clc
popf
mov
ja
adc
daa
jae
mov
xchg
aas
xor
sub
cwtl
mov
or
push
and
cmp
loop
cmp
iret
inc
icebp
shrl
decl
rorb
imul
jmp
and
daa
add
fimull
sti
test
pop
cmp
dec
rcrl
inc
cli
cmp
daa
les
mov
adc
pop
pop
fcmovb
lcall
stc
pop
mov
add
pop
popf
cmpsl
adc
fimull
hlt
imul
movsb
or
insb
hlt
gs
imul
js
rcll
movsl
ja
pop
mov
int3
lahf
nop
and
mov
dec
push
sub
pop
push
or
call
outsl
push
dec
and
stc
mov
dec
dec
fmull
jp
aam
push
test
or
stos
pusha
add
scas
push
and
pusha
cwtl
fisubrs
cmp
add
or
dec
lret
mov
test
lret
cmp
mov
sub
pop
bound
rol
aaa
jo
inc
gs
fsubr
push
pop
jne
popf
mov
dec
or
mov
clc
dec
insb
test
jle
push
outsb
loope
mov
jl
cmp
int3
adc
int3
aad
insl
add
shr
or
fldl
sbb
push
add
xchg
faddl
add
mov
aas
fs
jg
or
add
dec
mov
jae
imul
aam
js
loopne
imul
inc
mov
mov
daa
push
shlb
gs
repz
shl
mov
mov
jne
hlt
sub
or
adc
insb
andb
inc
les
fwait
test
inc
mov
and
insl
xor
js
xor
mov
and
adc
movsb
adc
adc
shl
jmp
in
mov
xlat
mov
fsubl
ss
xchg
pop
pushf
add
cmp
mov
mov
into
shlb
mov
dec
sub
lahf
jns
adc
push
pushf
aaa
add
mov
int3
adc
pop
movsb
pop
lret
hlt
cmpsb
mov
addr16
in
mov
or
sbb
mov
aad
push
cmp
inc
push
add
pop
dec
push
fucom
mov
clc
mov
ret
arpl
and
sub
ds
hlt
notb
sbb
cs
ljmp
bnd
sbb
push
ror
sub
push
repz
int3
popf
mov
lods
push
and
cld
negl
sub
int3
jne
adc
jmp
xchg
push
aas
add
or
fidivs
fsubr
popl
lock
iret
mov
push
inc
cmp
into
push
xchg
rcrl
movsb
lcall
jge
dec
dec
fistpll
pop
sbb
leave
mov
inc
push
xchg
andb
pop
xor
loopne
leave
out
push
add
stc
insl
lcall
cmp
cmp
inc
lret
pop
test
dec
je
movsl
adc
or
rcrb
sub
sbb
scas
or
cmp
push
loope
loopne
repnz
mov
and
cmpsl
jge
lret
xchg
sbb
mov
stos
push
bound
xchg
jle
xor
js
in
insb
mov
ja
popl
or
push
addr16
in
ljmp
jbe
sbb
movsb
and
out
je
mov
xor
fmull
arpl
jae
lea
loope
add
add
loopne
inc
std
or
push
test
test
rorl
jo
inc
fcomip
int3
into
sti
pop
leave
push
push
adc
mov
roll
pop
jne
or
mov
or
insl
dec
ret
pop
stos
add
add
sbb
lret
add
stos
js
pop
das
inc
insl
jns
test
jo
jae
jno
cmp
ljmp
xchg
pop
lods
cmpl
or
inc
iret
addr16
std
ret
cmp
cmp
or
das
xor
sbb
adcl
mov
jge
or
fimuls
mov
or
lods
enter
out
adc
mov
push
mov
std
out
testb
xor
dec
fistpl
or
dec
out
sub
add
inc
push
ss
movsb
cmp
dec
pop
and
out
push
ss
mov
dec
mov
pushf
pop
or
ja
push
mov
pop
arpl
xor
add
test
in
dec
shl
outsb
fisubrl
mov
or
aad
out
inc
lea
pop
shr
jle
inc
arpl
mov
or
repnz
jg
andb
xchg
imulb
outsb
pusha
jb
ljmp
aaa
xor
mov
sar
dec
ja
sbb
or
adc
mov
lret
es
mov
pop
mov
arpl
repz
dec
xor
sbb
xchg
inc
mov
cli
push
movsl
negl
in
push
lcall
fiadds
or
and
fstl
andb
mov
dec
push
pop
pusha
mov
dec
mov
ljmp
arpl
fsubl
test
leave
in
add
mov
out
in
rep
mov
lods
test
lret
add
pusha
adc
int3
adc
out
and
call
mov
xor
call
or
stc
outsb
sbb
shl
pop
aas
xor
xchg
or
xor
add
lock
push
lds
jo
mov
mov
cmovb
push
xchg
ja
stos
movb
loopne
push
xchg
mov
mov
sbbl
nop
push
add
add
xlat
les
sub
lret
xchg
or
shll
orl
in
mov
data16
aad
scas
or
mov
call
mov
ja
ret
scas
les
arpl
popl
dec
inc
call
frstor
mov
sbb
cmpb
xchg
pusha
mov
lret
push
clc
call
icebp
repnz
xchg
mov
xor
push
mov
pop
pop
inc
mov
test
adc
movzbl
jne
mov
dec
stc
mov
mov
inc
mov
sub
ja
in
movsl
pop
and
mov
mov
fdivrs
and
nop
mov
mov
inc
pop
jne
inc
push
fcoms
cmp
cltd
cmp
data16
and
dec
mov
sbb
subl
mov
mov
and
lods
fmull
inc
cltd
rorl
jge
jns
push
inc
icebp
cmc
pop
mov
mov
jle
pop
cmpsb
mov
cmpsl
adc
mov
mov
xorb
rcl
sbb
in
mov
rcrb
mov
test
ficomps
loope
jne
not
mov
sub
and
arpl
in
in
loopne
mov
stc
or
pop
scas
xchg
fstl
push
ret
pusha
jle
adc
add
out
push
sbb
push
or
jg
movsl
dec
arpl
neg
popf
leave
dec
movsl
out
sub
movsb
cmp
lock
push
fildll
xchg
mov
sub
adc
bound
lds
pop
xchg
or
insb
jbe
sbb
stos
roll
jo
xchg
mov
fnsave
pusha
sub
test
movsl
adc
or
cmp
inc
daa
mov
es
jns
ss
or
cltd
pop
mov
push
or
add
cltd
mov
mov
push
or
neg
inc
mov
jae
insl
cld
sbb
sbb
push
sbb
std
push
movsl
fimull
popa
mov
add
xor
adc
in
mov
in
fldl
jno
and
in
inc
mov
enter
cs
mov
sub
cmp
inc
mov
pop
lret
cli
push
jmp
pushf
insb
insb
ret
pop
xchg
mov
aas
jg
enter
pop
popa
adc
pop
enter
out
fwait
imul
adc
jnp
loopne
push
mov
inc
sub
movsb
pop
jo
movsb
sub
pop
or
mov
aad
loopne
rcll
pop
jmp
lea
out
mov
cmpsb
iret
aaa
add
insb
rclb
and
hlt
cli
inc
fiaddl
pushf
mov
jns
cmp
sub
jbe
push
xor
mov
adc
mov
cld
popa
jae
pop
test
lret
mov
jg
add
mov
movsl
repz
testb
fcoml
xchg
sub
je
mov
pusha
lds
jae
inc
sbb
push
shll
in
sub
test
movsl
xchg
and
mov
inc
mov
lods
out
add
mov
pop
pop
pop
pushf
mov
or
pop
cmp
jecxz
hlt
das
sahf
mov
out
in
orl
insb
shll
pop
ljmp
rcrb
sub
imul
adc
push
int
sbb
adc
cmpsb
mov
aas
aad
push
roll
dec
xor
mov
xor
mov
push
stc
lret
sub
sub
sbb
pop
in
jbe
adc
jge
fs
pop
sbb
sbb
cltd
loop
jl
jno
push
xchg
stos
lds
out
mov
add
test
mov
adc
xchg
push
mov
mov
rclb
pop
dec
arpl
sbb
ss
divl
xchg
jecxz
out
mov
shrl
std
je
jne
sbb
inc
int3
ja
sahf
and
lret
call
push
mov
lret
pushf
add
mov
mov
sbb
aas
add
lret
icebp
push
roll
dec
mov
outsl
cmp
and
mov
pop
mov
cld
aam
pop
pop
test
dec
fdivl
mov
je
adc
or
fidivl
sbb
in
adc
jmp
sub
jecxz
sbb
into
mov
cmc
repnz
push
jns
lcall
bound
in
sub
sbbl
mov
bound
out
mov
pusha
cmp
orb
aad
or
sahf
add
xchg
std
jne
jo
jb
popa
in
call
fisttps
push
adc
ds
lea
adc
daa
and
imul
fld
rorl
popa
mov
shl
add
and
pop
pusha
int
xor
outsb
mov
xchg
insl
mov
inc
dec
mov
out
xchg
movsb
mov
mov
iret
push
jp
mov
mov
fnstenv
ror
sarb
gs
xchg
xlat
outsb
pushf
fwait
xor
mov
fnstcw
push
outsb
mov
rcll
into
outsb
fsubs
add
adc
or
pop
mov
mov
xchg
xchg
pop
pop
in
mov
and
cmc
add
imul
mov
inc
cli
mov
stc
sbb
int3
mov
cwtl
inc
adc
mov
push
scas
push
push
push
dec
sub
mov
test
clc
imul
mov
inc
push
sti
stc
enter
inc
ret
xchg
les
xchg
subl
iret
iret
xchg
sbb
pop
mov
mov
int
push
fbld
cli
inc
insb
lret
fwait
sti
mov
test
xor
push
cli
xchg
xchg
or
mov
mov
xor
dec
movsl
icebp
arpl
rcll
popf
sbb
add
mov
insb
or
push
xor
loopne
xchg
popa
sbb
inc
adc
push
or
daa
stos
mov
imul
or
jae
push
je
pop
out
push
sub
test
push
and
mov
mov
dec
push
shlb
pop
cmpsl
xorb
mov
push
std
jp
aad
ret
sbb
add
mov
loopne
mov
cld
cli
std
push
inc
pusha
pmaxub
lds
inc
lret
or
mov
les
mov
sti
repz
ja
mov
out
jp
xchg
cmp
lret
orb
sbb
and
ds
repnz
cmp
and
stos
fwait
jns
ficomps
repz
mov
mov
data16
pop
jbe
dec
inc
insb
dec
test
fdivr
insl
arpl
xor
scas
out
dec
repz
mov
lods
and
pop
jo
xchg
xchg
test
push
dec
iret
sub
aam
jl
and
mov
jb
outsb
call
roll
rcrl
cmc
xchg
repnz
test
jnp
push
push
test
ret
or
ja
aaa
insl
ds
inc
in
scas
dec
rcl
xlat
and
stc
or
xchg
or
xchg
adc
cwtl
mov
jnp
scas
jp
bound
ret
loop
inc
cli
xlat
inc
cld
cltd
out
sbb
out
std
add
rolb
mov
pop
jmp
scas
movsl
shll
imul
fidivs
inc
xorb
xor
adc
inc
adc
shl
popa
inc
imul
adc
jb
insl
cmc
nop
mov
sub
xchg
push
push
mov
cs
mov
test
jo
mov
jne
mov
je
mov
cli
cmc
ds
or
and
xchg
lahf
inc
imul
adc
cs
out
pop
outsb
ficoms
rorl
or
inc
mov
mov
jbe
movsb
sbb
sbb
pop
mov
lock
jne
loop
jmp
test
out
cli
jge
lsl
fdivrs
imul
ds
int3
test
push
in
fistpll
push
push
cmp
icebp
stc
int
push
and
scas
pop
arpl
ja
adc
mov
mov
jne
or
test
cmp
outsb
test
inc
sahf
cltd
push
lea
push
in
std
xor
xchg
stos
mov
xchg
mov
lds
jp
jecxz
les
pop
or
fisubrs
cmp
popf
or
rcr
sahf
cwtl
repz
push
jo
sbb
dec
mov
xor
negl
adc
adc
xorb
mov
and
sub
addr16
mov
cs
pop
mov
pop
es
push
mov
scas
inc
aad
clc
mull
xchg
mov
test
xchg
sub
xlat
push
xor
cli
xor
dec
fstpl
push
out
andl
sbbb
call
sbb
and
out
dec
insb
dec
rcll
pop
dec
push
or
or
sti
mov
jl
std
loopne
inc
cwtl
int3
subl
inc
sub
call
out
fistl
daa
arpl
mov
dec
imul
fistpll
xor
push
fisubrl
inc
lds
int
ja
repnz
adc
xchg
mov
lock
stc
mov
mov
jmp
nop
lock
test
jl
sbb
jae
mov
bound
movsl
xchg
ss
ja
xor
push
cmp
inc
imul
cld
add
test
into
daa
cmp
movsl
fildl
nop
inc
mov
std
sbb
jmp
fdivp
mov
cltd
inc
xchg
iret
cmp
pop
xchg
shl
xchg
cwtl
daa
lcall
pop
arpl
movsb
push
ljmp
stos
add
cmp
ffreep
mov
mov
mov
ret
push
add
push
sarb
xor
add
sbb
leave
adc
sarb
in
int3
fst
out
inc
sbb
sti
xor
mov
jge
push
call
ds
mov
pop
inc
push
int3
cmp
mov
sbb
loope
mov
inc
xor
jo
leave
jmp
and
mov
fs
jmp
daa
sti
repnz
pop
pop
mov
pop
push
movsl
inc
in
inc
xchg
sti
xchg
mov
in
faddl
add
push
adc
jae
in
pop
jle
inc
sub
sahf
iret
inc
cmp
lret
jecxz
jo
pop
fs
or
or
rorl
adc
scas
xlat
xchg
shll
out
xchg
pop
hlt
inc
popf
jmp
dec
enter
mov
jo
jl
and
cmp
mov
cmp
movb
stos
cmpsl
dec
aam
outsl
lcall
lea
mov
sbb
pop
xchg
sti
xor
insb
sub
push
lock
ss
add
in
fsub
arpl
insl
out
push
push
xor
pop
neg
insb
and
and
ljmp
cwtl
xor
jp
sub
push
dec
andl
jge
mov
jle
popf
pop
sti
shll
sub
shrl
fdivl
mov
pop
in
dec
mov
and
add
addr16
xor
adc
and
cmp
dec
sbb
jmp
sti
insl
lret
imul
jno
xchg
inc
je
pop
out
xchg
inc
add
fsubrl
je
rcrb
not
pop
int3
jle
sti
pop
stos
jmp
insb
jl
in
lahf
and
and
cmp
js
jb
mov
jp
iret
es
mov
sbb
dec
int
cbtw
cmpsl
rcr
addr16
push
cmpsb
movsb
mov
repnz
mov
pop
popa
mov
int3
stos
and
inc
imul
dec
movl
rorl
test
aam
outsb
add
sbb
sub
mov
lahf
in
pusha
dec
sbb
shrb
sahf
xor
negb
in
sbb
xor
add
mov
pop
js
mov
or
test
xchg
push
nop
pusha
cmc
push
pop
lods
cltd
mov
hlt
add
jecxz
adc
adc
out
sbb
and
jl
inc
inc
mov
jns
std
adc
es
faddl
jno
sbb
mov
bound
sbb
push
xchg
fnstenv
mov
adc
fmul
and
xchg
mov
outsl
lret
sti
cltd
xchg
lcall
hlt
push
pop
aas
outsl
cmp
pop
xchg
aaa
xor
cmp
test
cmp
pop
out
and
mov
push
cmp
shrl
lods
fldcw
jae
pop
fisubrl
pop
mov
mov
cmp
insl
nop
cmp
icebp
mov
mov
stos
inc
inc
inc
push
adc
mov
ret
ret
cwtl
add
xchg
push
lock
out
pop
sbb
out
jmp
adc
loop
into
xchg
iret
xor
mov
cmp
mov
hlt
sbb
ljmp
cmc
movsl
cmp
flds
pushf
jns
out
pop
xchg
stc
test
aaa
pusha
add
aas
inc
pop
fninit
xor
divl
insl
scas
xor
aas
in
clc
xor
cmc
xor
cmpsl
jg
sbb
popf
nop
leave
xor
push
ret
mov
fucomip
inc
bound
bound
mov
fistps
pcmpeqw
aam
cli
bound
jno
xor
push
sbb
ret
add
and
and
push
fnstenv
lahf
xchg
cwtl
fimull
lret
pop
or
pop
sub
jmp
mov
pop
mov
cmc
cmp
pop
inc
out
ds
sub
xor
orl
lods
in
in
shll
or
push
push
jecxz
test
shll
insl
mov
pop
adc
lret
es
and
sbb
cltd
sbb
adc
adc
push
hlt
cmp
loope
jge
imul
mov
movsl
mov
rorb
or
mov
insl
adc
cs
das
ret
or
xchg
push
daa
fcomi
cmp
adc
inc
aad
nop
shl
cltd
sbb
and
fiadds
mov
outsl
mov
xor
pop
data16
jle
lods
adc
clc
inc
push
adc
push
xlat
sahf
xchg
sub
ret
xor
xchg
rcl
pop
sbb
rclb
mov
sub
in
pop
push
in
sbb
and
movsb
pushf
andl
jb
and
jbe
mov
jno
mov
cmc
mov
dec
xchg
pop
xchg
jne
pop
nop
inc
mov
stc
add
cmp
out
or
test
mov
lahf
sub
loope
sahf
repz
jae
pushf
inc
jle
test
fs
out
dec
mov
lret
sbb
jno
adc
movsl
lods
lcall
mov
and
or
into
or
fiaddl
pop
adc
adc
sti
jns
mov
xor
stos
or
push
xlat
mov
adc
les
cmp
pop
fwait
scas
arpl
ds
int3
or
iret
lcall
push
cmp
dec
into
xchg
ret
shll
xor
out
call
and
mov
popf
push
outsl
fnsave
sub
push
inc
jo
and
add
dec
cld
push
insl
nop
jle
repz
mov
or
xchg
test
incl
das
ds
lods
icebp
lea
scas
jge
mov
jge
and
mov
adc
testl
fistps
mov
idivl
adc
and
or
xor
data16
xchg
and
scas
pop
daa
mov
daa
pop
push
cld
outsb
inc
pop
xor
add
movsb
mov
filds
pop
and
xor
lods
aam
and
add
fistps
scas
sbb
adc
jp
sbb
cmpsb
movq
cld
push
out
lcall
and
dec
add
imul
mov
in
pop
js
cs
mov
in
inc
jge
enter
pop
ja
hlt
or
mov
jnp
mov
jecxz
imul
pop
xor
and
mov
xorb
or
rcrb
mov
test
orb
jmp
jecxz
mov
dec
cmp
inc
push
cltd
cmpsb
inc
pop
lea
pop
add
inc
aad
call
mov
fcompl
dec
adc
sbb
lods
cmp
xor
jle
and
fcomp
or
add
dec
in
ds
push
mov
aas
cmp
adc
jecxz
movsb
jp
jnp
adc
sbb
addr16
cltd
xchg
in
pushf
sahf
lahf
jle
test
movsl
outsb
aas
inc
fldl
sub
rcl
fucom
inc
adc
pop
in
mov
cwtl
rcl
dec
sbb
ja
sahf
jno
stc
lret
ljmp
leave
jecxz
lcall
xor
xchg
ljmp
cltd
xchg
test
sub
inc
cltd
inc
mov
adc
or
out
jbe
lock
mov
mov
insb
in
shlb
xor
push
loopne
roll
aad
add
in
xchg
add
fisubs
ror
and
pop
jmp
inc
mov
mov
xchg
xor
pop
fnstsw
repnz
fisubrs
shlb
loope,pt
dec
rol
or
push
xlat
sti
sbbl
cwtl
int3
sub
add
inc
push
loop
inc
je
int3
or
dec
jns
outsl
data16
pop
daa
sbb
fwait
adc
and
stos
repnz
outsb
loopne
adc
ret
jns
insl
lds
insb
mov
aas
xchg
je
jbe
xor
pop
cs
iret
mov
imul
clc
and
in
push
repz
add
cmp
add
popf
jns
sbb
sar
mov
inc
jle
inc
out
sbb
rclb
xlat
sub
xor
mov
xor
js
lock
push
iret
mov
jb
sub
fidivs
cmp
loopne
pop
mov
enter
roll
sbb
outsl
icebp
daa
xor
mov
xchg
icebp
and
lahf
cld
movb
dec
and
add
pop
insl
cmp
xor
dec
aaa
jnp
xchg
jbe
xchg
ja
std
dec
das
cltd
cli
adc
ret
fwait
mov
test
add
sahf
and
sahf
jae
push
mov
inc
xor
addr16
push
mov
nop
jg
jbe
push
pushl
cli
scas
cmp
mov
sbb
xchg
ret
lods
adc
mov
inc
or
or
mull
add
dec
jge
stos
jge
pop
fwait
cmc
mov
arpl
cmp
scas
jle
push
add
adc
rclb
push
xchg
pop
fucom
call
jmp
shl
mov
out
es
arpl
and
cli
fidivl
ret
push
rorl
add
psubb
js
fwait
add
repz
mov
nop
add
inc
inc
fwait
push
inc
stos
add
and
dec
sub
bound
fcomp
xchg
insb
insl
xor
out
or
aas
or
inc
push
cld
imul
and
and
hlt
je
inc
jo
or
mov
xor
outsb
inc
adc
imul
pushf
cmpsb
mov
iret
and
mov
jl
aad
push
cmp
data16
out
arpl
in
enter
leave
push
push
mov
sub
cmpsl
xor
gs
cmp
dec
sub
addr16
std
ds
and
push
or
xor
or
popfw
nop
scas
cwtl
fucomp
sahf
push
les
sub
adc
mov
mov
sahf
test
adc
jno
cmp
mov
aam
push
inc
mov
pop
push
pop
mov
stc
sbb
push
incl
jle
mov
addr16
lods
jge
test
and
lock
cmp
ss
das
lret
or
fdivs
lret
in
inc
jmp
add
pushf
sub
mov
and
push
mov
lods
adc
sub
gs
xor
repz
dec
or
pop
xchg
xor
mov
mov
jp
push
or
gs
jle
and
jl
ret
sbb
sahf
mov
divb
stc
loope
repz
pop
adc
jo
push
and
int3
iret
xchg
mov
aam
push
xlat
jmp
testb
pop
cmc
pop
and
or
mov
xor
mov
imul
fsubrl
push
add
pop
jbe
xchg
mov
imul
pop
dec
sbb
cmp
pop
add
or
xor
or
fcomps
enter
pop
or
xchg
into
mov
icebp
lahf
push
and
daa
push
xor
data16
clc
mov
popa
or
out
call
clc
gs
pop
pop
cmpsl
xor
inc
push
adc
xchg
dec
jno
sarl
addb
test
cmp
in
out
or
add
arpl
das
mov
movsb
inc
xchg
dec
xchg
add
jge
and
scas
mov
inc
inc
cmp
fdivl
xchg
lods
sbb
pop
in
pop
xor
ret
xor
cld
repz
push
imul
push
pop
cli
lods
aad
jecxz
pushf
jbe
sbb
cltd
jne
add
push
test
clc
mov
push
cli
fisttpl
filds
cwtl
mov
inc
mov
movsb
daa
push
js
mov
iret
jne
mov
pop
iret
mov
test
outsl
clc
rclb
loop
jecxz
enter
mov
sti
cli
bound
je
inc
cwtl
sarl
leave
out
dec
les
adc
adc
and
mov
aas
xor
inc
fiadds
subb
aaa
inc
dec
das
nop
das
ret
fcompp
add
push
out
addr16
shrl
aad
mov
mov
jb
adc
xlat
ljmp
ljmp
pop
jo
testl
in
push
dec
dec
aam
adc
ds
clc
jl
out
add
rcr
pushf
ljmp
jge
add
cmpsl
or
jecxz
mov
sbb
push
pop
test
out
sbb
int
jo
nop
aad
add
sbbl
push
inc
push
sbb
addr16
fucom
aad
mov
mov
cmp
inc
das
stc
in
jne
sbb
aas
pop
movsl
orb
mov
test
repz
dec
jmp
xchg
fimuls
ret
stos
jl
cltd
ret
bound
aad
push
push
aaa
mov
xchg
mov
les
cmc
pop
aas
and
dec
leave
cmpsb
test
pop
lahf
jmp
jp
ret
cmp
xchg
mov
neg
movsb
xchg
cmp
mov
lea
ljmp
cmp
cmc
repnz
js
dec
dec
negl
mov
dec
iret
frstor
lcall
iret
scas
mov
rorl
fmuls
mov
int
cmp
xchg
sub
pop
ss
pop
push
push
mov
sbb
cli
ret
pop
sbb
xchg
stos
sbb
push
push
or
test
lret
sbb
pop
pop
jge
pop
je
jb
push
add
and
dec
in
hlt
aad
stc
mov
icebp
sbb
fcomps
sub
mov
xor
bound
push
stc
addl
push
ja
adc
jmp
enter
xor
add
rolb
add
jbe
or
add
jno
mov
and
mov
xlat
ja
rorl
sbb
mulb
push
int
cmp
aad
movsl
adc
pop
push
fcmovnb
jae
dec
int3
ret
hlt
out
or
jmp
aad
push
pop
and
lret
dec
inc
iret
mov
jne
imul
iret
rorl
dec
pop
dec
sbb
adc
mov
xchg
and
or
cmp
mov
or
movsl
pop
fnstsw
xor
fistl
cmpsl
fld
rorl
sbb
or
jo
mov
mov
push
jae
cmp
cli
out
loopne
aad
mov
mov
mov
jb
ret
fistl
insl
cmp
cltd
fsubr
dec
push
cmp
dec
jae
iret
and
data16
jle
rolb
je
cmp
test
push
mov
dec
jmp
leave
fiaddl
mov
rcrb
aam
mov
xchg
add
sbb
pusha
xchg
popf
mov
cwtl
sti
sub
test
mov
test
pop
pushf
mov
jecxz
in
mov
and
jmp
aaa
mov
lods
std
incb
dec
outsl
lods
andl
ficomps
mov
push
lahf
sub
xor
pop
mov
leave
enter
mov
xor
scas
enter
xchg
shrb
cmp
leave
jo
insb
and
in
or
adc
aas
subl
add
cmp
cmp
xor
out
adc
dec
movb
push
sar
and
aad
sbb
adcb
bound
aam
lcall
jb
inc
call
sbb
loopne
cmpsl
es
int
dec
jmp
mov
arpl
mov
jae
popa
pop
sbb
mov
lods
loop
jecxz
rorl
cli
aas
cmp
mov
jb
fsubs
das
insb
xor
jle
icebp
inc
xor
sahf
add
mov
divb
lods
push
pop
aad
jle
pop
dec
enter
leave
das
icebp
sbb
pusha
push
jae
cmpsb
hlt
lahf
sub
enter
fldt
jmp
jle
mov
or
scas
push
insl
jmp
pushf
cmp
mov
cwtl
jge
ss
adc
mov
ljmp
lods
scas
into
dec
into
xor
insl
dec
sbb
cmp
dec
incl
roll
roll
dec
dec
inc
pop
outsl
cli
jns
loop
imul
addr16
xchg
fmulp
movsb
dec
xor
inc
sti
inc
mov
mov
fstpt
popa
subps
and
and
mov
or
in
test
popf
or
sub
ja
and
imul
int3
jl
jo
or
mov
lock
adc
inc
repnz
mov
loopne
dec
jo
jg
adc
int
or
dec
ljmp
inc
scas
cmp
cmp
imul
cwtl
xchg
mov
les
jno
stos
out
cmp
or
jmp
mov
std
es
or
gs
and
jns
xorb
fstpl
cwtl
loopne,pn
mov
lret
cwtl
pop
test
outsl
sub
and
push
jp
mov
and
jg
std
and
cmp
mov
mov
mov
or
aad
ljmp
xchg
lret
xchg
dec
adc
jae
push
stos
cmp
sub
mov
negb
stos
dec
ss
sub
inc
stc
mov
mov
fdivrl
test
std
imul
add
pop
sub
lods
shrl
mov
insb
insb
test
fisubrs
jb
cmpsb
add
insl
std
jecxz
movsb
pop
mov
cmpsl
sbbb
lcall
sub
ficomps
jecxz
imul
add
lods
daa
or
sbb
cmp
pop
add
ret
mov
xchg
push
shl
cwtl
mov
or
mov
comiss
xlat
aas
xchg
push
lret
push
push
in
push
enter
movb
jns
sub
cmc
rolb
pop
enter
lcall
scas
shrl
repz
mov
push
dec
test
fisttps
test
jo
pop
fiaddl
cld
cmpsb
xchg
xchg
aad
addb
sub
cmpsl
sbb
dec
daa
push
gs
sbb
sub
cmpsb
jmp
cltd
daa
stos
outsl
cmp
int3
shlb
dec
das
mov
cmp
and
jge
cwtl
ror
jne
movsb
dec
hlt
fadds
flds
inc
cmpsl
dec
bnd
lea
push
test
jne
aad
pop
add
push
call
sub
mov
cmpsb
mov
mov
aad
pop
std
enter
lock
add
add
xchg
icebp
mov
lds
ret
clc
rcrl
push
movsl
inc
inc
call
xchg
cmpsl
xor
les
push
push
int
pushf
cmp
jb
jge
or
imul
insl
lahf
xor
arpl
lcall
shlb
clc
cmp
inc
adcb
loop
imul
mov
mov
fisubl
notl
adc
xor
xchg
cld
mov
repnz
fbld
push
xor
nop
cmp
insb
mov
and
out
fs
or
rep
sub
adc
lods
lods
inc
mov
cli
jecxz
icebp
dec
out
repz
outsl
cmpsl
mov
mov
out
cmp
inc
inc
xchg
xor
imul
mov
int3
pop
mov
pop
outsb
ja
sub
ljmp
lea
ljmp
popf
call
and
and
std
jl
or
lret
test
loope
je
inc
sub
jne
and
sub
ds
xchg
sbb
or
mov
or
dec
sbb
popf
xchg
jne
pop
divb
mov
insl
push
stc
and
jns
pushf
adc
mov
adc
js
loop
pop
or
cmp
fnstenv
mov
andb
daa
incl
add
push
sbb
cmp
or
dec
jp
mov
xor
pop
test
addb
mov
adc
dec
inc
jmp
jbe
sbb
dec
inc
pop
mov
ds
mov
shrl
movsb
les
maskmovq
notl
insb
rorb
xchg
mov
jmp
fisubrs
je
add
out
push
push
fdivrl
test
sti
inc
outsb
mov
pop
jae
pop
negl
fists
pop
loope
movsb
fistpll
push
test
push
ds
inc
push
imulb
or
ret
out
cld
dec
push
xchg
mov
xchg
rorl
repnz
test
xchg
sahf
js
mov
fldenv
rcrb
es
xchg
mov
pop
subl
aad
inc
lahf
aaa
push
ljmp
aad
pusha
pop
inc
xchg
dec
repz
mov
stos
xchg
inc
inc
pop
push
insl
jne
cltd
jg
imul
mov
lret
fistpl
add
sub
or
imul
insl
in
adc
jge
in
sbb
fstl
pushf
ret
fisttpll
out
test
das
mov
cmp
cmp
rolb
nop
daa
jno
inc
test
aas
int3
imul
inc
mov
lds
nop
sbb
repz
add
sar
mov
sbbb
lods
push
cld
aaa
das
inc
mov
out
fdivl
xchg
sbb
fildl
push
jnp
int3
in
leave
push
fstl
mov
cmp
adc
test
lahf
sahf
daa
sbb
cmp
inc
mov
in
into
idivb
sahf
inc
stos
loop
jge
jb
movsb
cmp
ja
pop
add
push
pop
jbe
cmp
mov
mov
pop
in
std
rclb
sbbb
inc
lock
xorl
sbb
movsl
loop
lret
pushf
push
and
imul
dec
or
push
xor
xor
cmp
rcrb
mov
les
xchg
jl
sbb
in
xchg
pop
mov
jl
and
data16
push
ret
and
push
test
sbb
pop
push
push
out
inc
xchg
mov
adc
and
iret
mov
dec
sbb
inc
jle
dec
cmp
sbb
insb
mov
mov
ss
pop
out
lret
je
and
mov
insb
adc
sbbb
sub
mov
js
out
inc
add
fsubl
mov
inc
iret
lods
into
stos
cmp
mov
shlb
sub
sbb
adc
or
leave
xor
lods
jbe
jl
es
mov
cwtl
daa
out
sub
mov
xlat
push
mov
nop
es
mov
out
dec
shlb
and
fidivl
push
push
shlb
pop
sahf
leave
insl
fcompl
xlat
negb
pusha
jns
mov
dec
ljmp
xor
pop
das
into
shl
jbe
cltd
mov
testb
inc
cmpsb
sbb
push
push
inc
xchg
cmp
jne
nop
push
lret
pop
sahf
add
lea
push
leave
xor
add
push
das
ljmp
movsl
mov
mov
loop
je
pop
pxor
push
cs
push
sub
lahf
mov
insb
jno
push
scas
sub
mov
dec
xor
hlt
fucomip
ja
bound
xor
jns
or
lea
les
mov
rcr
fisubrl
movsl
sbbl
mov
insl
into
sbb
xor
pop
imul
mov
xor
push
lcall
addl
lds
out
xchg
cmp
pop
lret
loop
pop
xchg
jge
sarb
push
scas
insl
xchg
sub
fildll
mov
sub
mov
fcoms
xor
stc
pop
push
in
popf
daa
xchg
loopne
jmp
push
or
in
cs
dec
dec
jo
nop
outsb
fcomi
pop
loop
andb
cmp
mov
jae
arpl
les
mov
and
leave
xchg
xor
add
sbb
leave
sub
sbb
jo
xchg
filds
out
stc
add
push
or
mov
push
dec
hlt
and
adc
mov
stos
cmp
loope
insw
sbb
jns
adc
xor
test
lea
inc
in
push
hlt
mov
call
pusha
into
aad
sub
xor
push
bound
mov
jnp
add
sbb
ja
test
insb
jg
sbb
lcall
xor
incl
or
fistl
popf
shll
es
out
cmp
lock
test
test
aas
js
xchg
lea
in
push
mov
js
sbb
mov
idivl
pop
mov
push
mov
ret
push
cmp
push
jp
jmp
xchg
ja
into
push
std
cmp
sahf
sbb
cld
xchg
cmp
add
cmpsl
shl
adc
ret
pop
dec
jne
push
fidivrl
inc
sub
cld
mov
andl
ss
rclb
xchg
xor
aam
addr16
sbb
lds
pusha
imul
push
fmul
jge
imul
jo
pop
push
jnp
cli
mov
add
push
sbb
push
pushf
rol
adc
xchg
aaa
movb
aam
sub
inc
stc
sbb
mov
insb
xor
push
mov
jl
jmp
sub
mov
insl
sbb
ja
inc
inc
mov
cs
test
movsl
out
inc
or
sbb
repz
in
cwtl
push
ja
andb
add
hlt
imul
cmp
ret
mov
mov
cmp
dec
pop
ds
pop
cld
add
in
add
loope
icebp
push
pushf
pusha
loopne
rcrb
push
imul
in
xchg
repnz
mov
mov
inc
test
xor
sti
mov
nop
mov
fs
shrb
mov
in
pop
js
add
rol
sarl
mov
push
inc
dec
neg
jge
push
jno
imul
mov
out
pop
sub
addr16
rcll
arpl
mov
pusha
out
andl
push
xchg
jmp
xchg
cmpsl
adc
jnp
loop
scas
xchg
add
inc
mov
or
inc
sub
hlt
stos
ss
je
aaa
nop
rcr
dec
pop
push
jg
mov
xchg
jmp
push
lods
or
sub
fimull
aaa
test
mov
in
sub
sub
lret
out
adc
int3
in
push
les
scas
repnz
movsb
jae
in
pop
sbb
sahf
test
fisttpl
dec
loopne
push
push
lret
or
push
push
pusha
mov
fdivrl
out
cwtl
adc
pushf
sbb
inc
flds
inc
ror
daa
pop
leave
cli
cmp
rcrl
sub
jns
or
sti
add
push
push
xlat
fadds
add
xchg
hlt
lret
cli
or
test
sub
mov
inc
add
jecxz
bound
insb
mov
xchg
dec
mov
or
ja
lcall
cmp
in
iret
mov
orl
icebp
pop
out
into
enter
mov
jo
push
adc
js
dec
scas
stos
cs
andl
das
xor
mov
das
adc
push
icebp
dec
aas
mov
xchg
lods
pop
jne
pop
adc
xchg
jecxz
shrb
mov
adc
mov
jb
mov
add
inc
cltd
mov
ret
push
cmp
lods
cli
xorb
jp
xor
jecxz
add
out
jmp
cltd
or
loopne
gs
mov
mov
jne
insb
sahf
sar
mov
cmp
mov
inc
mov
jmp
fnsave
xor
add
mov
and
fnstcw
sahf
loope
inc
cmp
lcall
mov
inc
cs
int
aas
jmp
mov
xor
fisubrl
or
adc
pushf
sub
fchs
shrl
jno
arpl
jmp
shll
ret
adc
cmp
mov
xor
cmp
mov
arpl
inc
sbb
movl
in
mov
in
push
loopne
xchg
push
cwtl
sub
jmp
xor
js
out
lods
nop
stos
jnp
fnsave
mov
insl
or
jne
jmp
adc
gs
imul
dec
pop
jmp
call
add
popa
ret
and
idivl
cmp
ss
or
and
repz
clc
and
jg
or
test
cli
sub
add
ljmp
push
or
mov
add
sub
xor
and
dec
lcall
sbb
sbb
mov
xchg
jle
xor
stc
fldcw
cli
fnstsw
sti
test
mov
addb
mov
cli
jne
stos
or
shll
sahf
ljmp
sub
pop
xchg
gs
arpl
loopne
sub
mov
fsubrl
push
fsubrl
inc
popa
mov
add
pop
lret
pop
imul
inc
adc
pop
mov
xlat
rclb
pusha
jg
mov
rolb
fptan
inc
sub
imul
mov
xor
pcmpgtw
dec
ss
mov
or
xor
out
aam
out
stos
int
mov
or
jb
inc
les
xchg
xlat
xor
xchg
ss
dec
pop
pop
jbe
lods
and
or
ljmp
scas
xchg
mov
out
iret
aas
sub
outsb
dec
fs
push
cmp
push
gs
xor
sti
mov
mov
xor
lea
xor
pop
mov
cmp
adc
mov
xor
cld
or
sub
jmp
movsb
enter
rol
lret
sub
push
xor
enter
add
dec
ret
sti
sbb
and
addl
call
cltd
ret
pop
and
xchg
pop
mov
pop
push
mov
jmp
or
shlb
loope
ljmp
fwait
lahf
scas
sub
jle
jnp
lret
mov
or
add
js
ret
xchg
in
mov
btr
dec
cmc
sahf
cltd
sbb
mov
and
in
cmpsl
jns
mov
pop
cmp
cmpb
in
cli
into
fdivl
imul
shr
mov
lret
xchg
push
inc
cli
sbb
dec
push
push
dec
fchs
in
add
mov
dec
pop
sbb
sub
sbbl
pop
shll
lcall
lods
popaw
mov
cmp
pop
lock
dec
or
inc
mov
stos
std
pusha
mov
adc
push
and
sub
stc
add
push
mov
out
xchg
mov
push
inc
sub
pusha
mov
insb
sti
push
xchg
call
fwait
dec
lcall
mov
and
push
mov
icebp
mov
stos
out
cltd
ss
xor
push
cltd
in
push
xchg
mov
cli
cmp
je
cmp
inc
aam
mov
lret
ljmp
xchg
repnz
adc
lret
ja
xlat
aaa
iret
stos
sbb
lea
in
inc
jg
out
pop
lods
imul
sub
adc
fnstcw
sbbl
sarl
mov
notb
sub
adc
ss
and
ljmp
iret
cmpsb
jne
imul
out
loop
mov
dec
fdivr
mov
jno
cmp
imul
addl
sbb
je
adcl
insb
mov
adc
jl
cmp
dec
inc
cmpsb
add
add
mov
mov
xchg
mov
and
mov
lea
jnp
in
mov
cmp
mov
imul
and
stc
pop
scas
add
fcomps
loope
stc
push
sub
xchg
shl
add
mov
and
pop
test
repz
fmul
addr16
lcall
inc
movsb
xchg
insb
call
mov
push
or
pop
sbb
lods
mov
lret
or
push
sbb
rcll
jnp
and
pop
call
rorl
xlat
and
lods
stos
push
push
aam
fcompl
ss
repz
dec
aaa
dec
js
xchg
xchg
lods
push
dec
mov
jl
mov
and
push
daa
mov
push
cmp
out
out
inc
sub
andl
and
mov
add
loop
jmp
repnz
mov
push
iret
shrl
cli
inc
pop
xchg
xor
mov
es
clc
push
je
iret
cmp
jno
ret
mov
rcrl
jge
jmp
dec
das
pop
or
fdivrs
jo
push
mov
jb
inc
std
loopne
dec
pop
enter
dec
add
mov
xchg
cmp
push
std
pop
mov
out
pusha
cmp
mov
fnstenv
sub
push
and
xchg
sub
sub
ficompl
fwait
dec
push
test
aam
jmp
int
enter
in
mov
lret
out
sub
xchg
out
fcom
jnp
movsb
cwtl
call
mov
out
popf
stos
or
cmp
xchg
mov
mov
sbb
out
outsb
arpl
mov
movsb
scas
push
add
mov
push
inc
aaa
cmc
and
pop
rcll
jmp
jnp
add
sub
sub
fcompl
mov
daa
dec
pop
std
cwtl
daa
and
mov
addb
into
jae
push
pop
dec
and
jae
xchg
add
mov
sbb
int
outsl
stos
hlt
pop
fbstp
mov
mov
mov
test
push
xchg
js
and
inc
pop
push
into
dec
mov
test
orb
mov
mov
aas
pop
popa
incl
adc
lret
ss
xchg
std
mov
fstl
test
fcmovnu
cmp
std
dec
or
xor
test
xchg
xchg
xor
aam
add
mov
fsubl
sub
dec
decb
xchg
testb
jge
xlat
clc
out
adc
xor
sub
ljmp
jmp
dec
popa
wrmsr
jmp
xchg
jb
mov
add
mov
lods
dec
mov
sub
jbe
cmpsb
jnp
das
push
scas
dec
std
std
pop
dec
lret
mov
aad
sub
fdivp
les
sub
repnz
mov
push
lret
pop
mov
movsl
loopne
flds
fisttpl
neg
add
pop
ror
cmp
dec
pop
mov
sbb
fdivrs
aaa
dec
xchg
pop
sbb
imul
and
xchg
dec
jmp
addr16
pop
cmp
or
or
sub
scas
mov
shlb
sbb
out
insb
sub
mov
sub
push
imulb
test
sbb
or
dec
rorb
pop
pushf
jbe
loopew
mov
cmp
mov
je
popf
lret
jle
mov
xor
inc
hlt
pop
pop
add
or
inc
movsb
jne
stos
fwait
dec
xorl
add
or
pop
test
stc
loope
out
testb
repz
xchg
push
mov
push
repnz
fs
sbb
pusha
ja
call
leave
imul
aam
movsb
cmpsl
mov
jb
push
lret
clc
fildl
xchg
ds
pop
je
xor
aaa
mov
orl
mov
ss
cmp
imul
and
jle
push
not
mov
sbb
flds
sbb
add
add
gs
xchg
test
xchg
cli
dec
hlt
jp
push
lods
cmpsb
sub
popf
xchg
cltd
test
andl
push
sahf
sbb
inc
arpl
ds
sbb
or
stos
dec
mov
xor
enter
in
sbb
cmp
addb
push
fstps
pop
adc
xlat
outsb
sbb
repnz
xchg
mov
pop
shrl
adc
and
mov
dec
inc
jne
pop
aaa
adc
mov
push
pop
xor
xchg
xchg
std
push
xor
xor
dec
mov
cld
lods
stc
ds
dec
loope
sub
insb
arpl
add
inc
mov
stos
fcmove
sbb
aaa
ret
loopne
icebp
jns
loope
fidivl
xchg
jg
mov
testl
lods
jb
add
sarl
insl
stc
xor
hlt
push
fst
lcall
pop
adc
cmp
mov
cmc
mov
addr16
push
mov
sbb
and
lock
sbb
cmp
rol
pop
jl
pop
inc
pop
pop
add
mov
add
xchg
addb
loope
cmp
je
fidivrl
cli
adc
fadds
inc
aad
cmp
mov
or
dec
mov
stos
pop
adc
cmp
add
mov
mov
adc
mov
add
out
clc
xorl
ret
mov
cmp
lods
jae
push
fistpll
shl
mov
imul
sti
stos
sub
mov
mov
push
cs
sub
popf
bound
sub
xor
cld
pop
push
cmpsb
cmp
cmp
jb
sub
addr16
pusha
clc
adc
xor
lret
mov
mov
das
fidivrs
pushf
and
mov
cmp
gs
inc
adc
inc
iret
dec
cs
rol
stos
test
lock
ret
mov
ds
sbb
jne
popl
imul
int3
arpl
jge
mov
iret
bound
addr16
insb
lods
sub
shl
bound
lods
jle
or
inc
add
stos
jl
lahf
cmp
nop
popf
mov
mov
fmull
push
push
and
insb
aaa
mov
adcl
loopne
loope
lea
mov
sub
inc
loope
add
lods
stos
clc
sahf
out
imul
push
hlt
and
imul
cmpb
rolb
mov
pusha
mov
push
pop
push
pop
push
stc
adc
cmp
loopne
cmc
test
or
test
cmp
sti
ret
add
call
xchg
ficoml
dec
gs
les
jne
enter
mov
cmp
test
dec
aam
les
out
mov
pop
scas
pop
out
sub
cmp
push
jae
xchg
pop
inc
cs
mov
mov
and
test
shll
add
or
loopne
pop
mov
call
lcall
shr
xchg
data16
inc
outsl
out
daa
adc
dec
dec
xor
mov
push
push
ret
add
js
push
cld
dec
loopne
lock
rcrl
xor
test
or
dec
mov
dec
push
call
or
daa
dec
shll
insb
cmp
fdivrp
ja
push
rcrb
push
pusha
inc
push
cs
cs
iret
push
sahf
nop
push
daa
lret
mov
sub
pop
mov
insb
ret
inc
mov
pusha
lcall
imul
cmp
push
inc
add
imul
mov
mov
roll
xlat
mov
leave
loopne
push
ljmp
lret
fisubrs
push
xchg
dec
shrb
jns
pop
jns
jbe
inc
or
int3
testb
xchg
adc
sub
les
mov
dec
sbb
xchg
and
shll
scas
push
mov
dec
sbb
xchg
scas
xchg
push
xchg
negb
jle
loope
nop
lret
xchg
push
test
jle
sbb
mov
idivb
pop
lret
adc
das
fdivs
mov
mov
add
fcmovnbe
out
aam
popf
inc
xchg
int3
jl
adc
xchg
add
cmc
cmp
xchg
pushf
daa
loopne
dec
xlat
lcall
popf
fs
pop
out
push
addr16
or
test
xchg
das
movsl
jo
insl
pop
lea
dec
push
dec
dec
xor
push
out
add
cmp
jp
in
dec
out
scas
sub
sbb
push
fidivs
mov
mov
scas
nop
lahf
call
int
adc
inc
push
sar
ss
repz
jb
lock
pop
inc
mov
pop
xchg
inc
cli
loop
and
fnstcw
lods
jae
cwtl
or
sub
into
ljmp
iret
xchg
push
inc
push
mov
in
add
and
adc
xchg
outsb
fstl
repz
mov
adc
lods
jno
mov
cli
adc
add
fisttps
frstor
in
cwtl
lock
or
and
lods
das
pop
push
les
add
jge
inc
cmp
ja
push
sahf
popa
fwait
test
jb
xchg
sub
adc
les
push
adc
out
es
and
iret
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
add
add
add
test
add
cwtl
pop
add
mov
add
add
add
adc
add
inc
add
push
add
dec
add
dec
add
inc
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
jmp
add
add
add
add
add
add
add
add
add
add
loopne
add
pusha
jmp
add
add
add
add
add
add
add
add
add
add
or
add
js
sbb
push
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
in
sbb
xor
add
in
add
add
add
add
add
add
add
mov
add
add
sbb
xor
add
in
add
add
add
add
add
add
add
mov
add
xor
sbb
xor
add
in
add
add
add
add
add
add
add
fadds
add
push
add
add
add
add
add
add
push
add
add
add
add
nop
add
xorb
add
add
add
add
xorb
or
add
xor
add
pop
add
xorb
add
add
add
add
add
add
add
add
clc
add
adcb
add
and
adcb
add
dec
add
adcb
add
add
add
add
add
add
add
add
add
add
addb
add
sbb
dec
add
add
add
add
add
add
add
add
add
test
add
repz
inc
add
add
add
add
add
add
add
add
add
rolb
add
test
sbb
pop
add
add
add
add
add
add
add
add
add
clc
add
add
negb
add
add
in
add
add
add
add
add
add
add
and
add
pop
negl
add
add
in
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
jo
add
or
sbb
pop
add
add
add
add
add
add
add
add
add
cwtl
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
sbb
pop
add
add
add
add
add
add
add
add
add
adc
add
sbb
in
add
in
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
pusha
add
add
sbb
insb
add
add
add
add
add
add
add
add
add
mov
add
sbb
inc
add
add
add
add
add
add
add
add
add
rolb
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
fadds
add
add
in
add
add
add
add
add
add
add
add
sbb
sub
add
in
add
add
add
add
add
add
add
sub
sbb
test
add
in
add
add
add
add
add
jg
add
pop
add
add
addb
add
add
add
add
add
add
add
add
jo
add
insb
xor
add
add
in
add
add
add
add
add
add
add
cwtl
add
sbb
test
add
in
add
add
add
add
or
xchg
add
add
push
add
xor
add
pop
push
add
addb
cmpb
add
add
add
push
add
clc
push
add
and
add
dec
pop
add
jo
add
add
add
add
add
add
add
add
add
and
add
cld
xor
add
add
add
add
add
add
add
add
dec
push
add
xchg
xor
add
in
add
add
add
add
add
add
add
jo
add
adc
sbb
cli
add
add
add
add
add
add
add
add
add
cwtl
push
add
or
sbb
ljmp
add
add
add
add
add
add
rolb
add
cmp
add
add
add
add
add
add
add
add
call
inc
sbb
mov
add
in
add
add
add
add
add
add
add
adc
add
pop
inc
sbb
int3
add
add
add
add
add
add
add
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
pusha
pop
add
faddl
add
add
add
add
add
add
add
add
add
add
mov
add
rolb
add
add
add
add
add
add
or
add
add
add
add
sub
add
push
or
adcb
add
js
add
mov
sldt
enter
sbb
add
lock
sbbb
add
sbb
add
inc
or
sbbb
add
add
nop
or
addb
add
add
add
add
add
add
add
add
add
sbb
add
dec
inc
sbb
push
add
add
add
add
add
add
add
add
add
inc
or
add
add
in
add
add
add
add
add
add
add
push
inc
sbb
js
add
in
add
add
add
add
add
add
add
nop
or
add
sbb
les
add
in
add
add
add
add
add
add
add
mov
dec
sbb
sub
add
in
add
add
add
add
add
add
add
loopne
add
xor
add
add
in
add
add
add
add
add
add
add
or
add
js
sbb
inc
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
add
add
add
add
pop
or
add
sbb
fadds
add
in
add
add
add
add
add
add
add
orb
add
dec
sbb
adc
add
in
add
add
add
add
add
add
add
test
add
or
add
add
in
add
add
add
add
add
or
add
or
orb
add
or
add
xor
add
add
add
add
add
add
add
add
add
clc
or
add
sbb
adc
add
in
add
add
add
add
add
add
add
and
add
inc
dec
sbb
adc
add
in
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
orb
sbbb
add
ret
addb
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
add
add
add
add
add
mov
add
cli
nop
sbb
adc
add
in
add
add
add
add
add
add
add
fimull
add
mov
add
add
in
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
inc
or
add
xchg
sbb
enter
in
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
sahf
ds
sahf
ds
out
sahf
ds
out
popf
aas
push
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
push
popf
aas
out
popf
aas
push
popf
aas
out
popf
aas
push
popf
aas
push
sahf
ds
out
popf
ds
out
sahf
aas
out
sahf
ds
popf
ds
popf
aas
push
popf
aas
out
popf
aas
out
sahf
aas
out
sahf
aas
out
sahf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
push
popf
ds
sahf
ds
sahf
ds
popf
ds
lahf
cmp
push
sahf
aas
push
popf
aas
out
pushf
inc
out
pushf
inc
out
pushf
inc
in
pushf
inc
in
popf
inc
in
popf
inc
out
popf
inc
out
pushf
inc
out
pushf
inc
push
pushf
inc
push
popf
inc
push
popf
inc
out
pushf
inc
out
popf
aas
out
popf
ds
out
sahf
aas
out
sahf
aas
out
sahf
aas
push
popf
ds
popf
aas
push
sahf
aas
out
pushf
inc
in
popf
inc
ljmp
jmp
inc
jmp
inc
jmp
inc
ljmp
out
popf
inc
push
popf
inc
in
popf
inc
ljmp
jmp
inc
jmp
inc
ljmp
jmp
pushf
inc
push
popf
ds
lahf
cmp
repnz
cmp
push
mov
aaa
push
lahf
inc
out
popf
inc
ljmp
jmp
dec
jmp
xchg
inc
call
lcall
ljmp
out
pushf
inc
push
pushf
dec
out
pushf
dec
jmp
dec
jmp
popf
aas
ljmp
out
sahf
inc
push
cltd
inc
push
pushf
inc
clc
mov
inc
jmp
cltd
inc
jmp
mov
dec
call
movsb
push
jmp
mov
pop
jmp
sahf
push
push
mov
dec
ljmp
fcompl
inc
jmp
fwait
inc
fistps
dec
call
lcall
cld
mov
cmp
lock
ds
lahf
ds
ljmp
ficoml
insb
jmp
scas
outsb
fildll
imul
cmpsl
imul
cmpsl
imul
cmpsb
imul
fisubl
outsl
jo
fisubl
insl
fisubrs
push
fisubrl
outsb
jmp
lods
jno
out
imul
frstor
imul
mov
fildll
pop
fistpl
push
call
xchg
push
call
xchg
push
jmp
cltd
push
jmp
movsl
pop
jmp
scas
insl
fldt
imul
shlb
jbe
fidivl
dec
push
pushf
cmp
repz
ds
popf
notrack
xchg
inc
jmp
fwait
dec
fstps
outsl
dec
fdivr
fdivr
loop
jmp
out
out
jmp
in
out
icebp
push
jmp
jmp
in
icebp
out
sti
call
in
ljmp
aad
fsubrl
pop
dec
mov
lret
inc
mov
nop
push
jmp
mov
cltd
push
iret
jmp
loop
jmp
jmp
fdivrp
jmp
je
in
fwait
inc
out
pushf
inc
out
popf
aas
in
xchg
inc
jmp
cltd
dec
fstpl
push
lock
push
ljmp
cmc
call
lret
out
push
out
push
call
sar
cmc
call
loop
sti
hlt
in
stc
icebp
std
cmc
sti
cli
std
stc
cld
cld
sti
stc
cmc
clc
std
cld
cld
cld
std
sti
stc
cli
out
push
fadd
fldcw
popa
dec
push
dec
xchg
push
dec
push
call
xchg
push
fistpl
std
lock
icebp
std
cld
out
std
std
repz
std
cmc
std
clc
out
fisubl
inc
in
pushf
inc
out
popf
aas
push
sahf
dec
jmp
inc
ljmp
cli
mov
jns
fbld
insb
call
sahf
outsl
fstps
push
fcompl
imul
fsubl
xchg
jmp
fcmovnb
sti
out
stc
icebp
cli
sti
cld
push
cli
push
cli
push
sti
push
cld
push
sti
cli
std
std
stc
icebp
push
fld
dec
nop
push
call
xchg
push
call
xchg
push
call
xchg
push
call
cwtl
fs
mov
cld
cld
clc
push
std
push
push
push
cld
std
std
bnd
movsb
jno
call
pushf
inc
out
popf
aas
push
popf
inc
jmp
xchg
inc
push
mov
pop
push
movsb
jmpw
lcall
aam
pop
call
xchg
pop
call
xchg
pop
fcoms
push
ficoms
push
jmp
cltd
pop
ficompl
ja
fisubrl
movsb
sti
out
clc
out
cld
sti
stc
cli
std
clc
cld
push
cld
out
sti
std
push
cld
cld
cli
lock
stc
faddp
jmp
mov
call
cltd
pop
call
xchg
push
call
cltd
push
call
cwtl
push
fistpl
addr16
call
in
loopne
stc
sti
cli
push
sti
push
cld
push
std
push
cld
cld
std
lock
fsubs
push
pushf
inc
push
popf
aas
jmp
xchg
inc
jmp
push
jmp
cltd
push
fistl
push
call
push
dec
mov
int
push
dec
dec
dec
dec
dec
nop
dec
dec
xchg
dec
call
xchg
dec
call
xchg
dec
ficoml
push
call
cltd
pop
fisubl
push
fdivrs
std
idiv
std
cld
sti
std
push
stc
cld
push
cli
stc
stc
in
stc
fdivrl
fistpl
push
call
cwtl
push
call
cltd
push
fistps
jmp
mov
sti
idiv
stc
push
cli
push
std
push
cli
stc
std
std
in
jmp
test
inc
push
popf
inc
push
popf
aas
out
cwtl
dec
in
xchg
dec
ljmp
call
mov
into
mov
int
push
dec
mov
lret
lea
int3
lea
int3
lea
lret
mov
nop
dec
dec
xchg
push
dec
xchg
push
call
xchg
dec
call
xchg
dec
call
xchg
dec
dec
xchg
push
dec
xchg
pusha
call
cmpsb
jge
in
lret
mov
std
icebp
loop
idiv
cld
push
std
cli
std
sti
icebp
cld
loop
in
mov
fcompl
pop
call
fwait
push
call
lcall
fcompl
xchg
clc
out
cld
idiv
sti
std
push
sti
stc
cld
in
jmp
stos
insb
in
lcall
lock
ds
xchg
dec
push
xchg
dec
jmp
xchg
dec
ficoml
push
inc
mov
mov
leave
mov
int
push
call
nop
push
call
nop
push
call
lea
iret
mov
int3
nop
push
dec
mov
lret
dec
xchg
dec
dec
xchg
dec
dec
cwtl
push
dec
cltd
pop
inc
xchg
arpl
shlb
cmc
out
stc
cli
sti
std
cli
cld
std
cld
hlt
std
out
out
mov
call
pushf
pop
call
pushf
pop
call
sahf
push
call
fwait
push
fstps
push
out
cld
clc
stc
sti
cli
sti
sti
sti
out
aas
out
popf
ds
sahf
aas
in
lcall
fstl
dec
dec
xchg
dec
inc
xchg
push
inc
xchg
push
dec
xchg
push
call
xchg
push
ficomps
push
fistl
call
xchg
push
call
xchg
push
dec
xchg
push
dec
xchg
push
dec
xchg
dec
call
cwtl
push
call
lcall
lret
call
cmpsl
test
cli
fcmovnb
cld
lock
std
cld
sti
cld
cld
cld
cmc
cld
out
in
mov
call
sahf
pop
call
lahf
push
call
mov
push
fstps
push
in
cld
idiv
cli
sti
cld
sti
std
sti
out
fldt
inc
out
popf
ds
out
popf
aas
jmp
sahf
inc
fistps
dec
call
cltd
dec
dec
xchg
dec
dec
cwtl
push
call
sahf
pop
call
mov
arpl
in
push
jmp
mov
jmp
sahf
pusha
fstpl
pop
call
xchg
push
dec
xchg
dec
call
xchg
dec
call
cltd
push
call
xchg
push
call
xchg
pop
call
cltd
imul
mov
cli
std
cld
sti
std
idiv
sti
jmp
call
mov
pop
fisubl
push
frstor
pop
fbstp
int3
cld
hlt
sti
sti
std
std
sti
sti
out
fisubrl
inc
in
popf
aas
out
popf
aas
fcompl
inc
jmp
mov
push
call
lcall
fsubs
out
mov
cltd
push
ret
cltd
push
ret
cltd
push
mov
mov
ficompl
push
call
cltd
push
call
cltd
push
call
cwtl
dec
call
xchg
dec
fcoms
pusha
call
movsb
jnp
jmp
lret
clc
cld
std
idiv
sti
in
aad
out
xchg
call
mov
push
fbld
push
jmp
cmpsb
push
jmp
movsb
pop
jmp
mov
push
loopne
sti
icebp
std
cld
cli
cld
std
cld
std
in
fldt
inc
out
popf
aas
out
sahf
aas
ljmp
jmp
pushf
push
fcompl
js
ljmp
push
std
ljmp
in
out
in
clc
fcmove
in
shrl
ficompl
pop
fistpl
dec
call
xchg
dec
fistl
pop
dec
cwtl
imul
cmc
std
std
clc
sti
out
xlat
call
movsl
push
jmp
test
jmp
movsl
pop
jmp
mov
push
ffree
sti
out
cld
clc
std
cld
std
cld
sti
in
fldt
inc
out
popf
inc
push
popf
aas
in
cltd
inc
out
mov
push
jmp
lods
ja
not
scas
sti
jmp
out
cld
idiv
cld
cli
std
cli
std
stc
idiv
idiv
stc
out
std
out
lock
cmpsl
jmp
cmpsl
je
xlat
fwait
pop
ficompl
push
fstps
fistpl
arpl
repnz
stos
cld
lock
sti
std
idiv
std
lock
lock
fisubrl
push
jmp
test
pop
jmp
cmpsb
popa
fildll
mov
cld
idiv
std
sti
std
cld
sti
in
fisubrl
inc
out
popf
inc
out
popf
aas
in
xchg
cmp
in
fwait
dec
fstpl
xchg
push
aam
out
std
idiv
std
std
cli
cld
sti
sti
std
std
cli
cld
sti
std
stc
clc
lock
cld
ljmp
fisubl
pop
fldenv
dec
jmp
mov
pop
call
pushf
fs
out
lds
sti
std
clc
lock
test
pop
fisubrl
pop
jmp
lods
pop
jmp
cmpsl
arpl
fsubrl
stc
in
std
idiv
sti
std
std
cld
out
fsubrs
inc
in
popf
inc
out
popf
aas
push
lcall
loopne
dec
fsubrl
jmp
std
clc
std
std
cld
sti
sti
std
cli
std
cli
std
cld
std
sti
push
cld
call
pop
fcompl
dec
jmp
mov
pop
call
cltd
pop
ljmp
stc
stc
cli
cld
in
jecxz
test
jmpw
scas
pop
fidivs
pop
jmp
scas
popa
jmp
stos
fs
test
in
shll
std
idiv
std
cld
std
std
cli
in
call
test
jmp
fwait
inc
in
popf
inc
out
popf
aas
stc
lahf
inc
push
fwait
inc
jmp
cwtl
inc
fldenv
icebp
cli
stc
cld
clc
std
cld
cld
cli
clc
stc
push
stc
push
stc
clc
sti
std
cld
cld
cli
cld
repz
out
push
shlb
fcompl
push
jmp
mov
pop
fcompl
pop
jmp
mov
lock
cli
sti
std
cli
std
in
ljmp
movsb
push
jmp
mov
fnstenv
jmp
stos
fs
cmpsl
jno
jmp
scas
stc
call
cld
std
std
sti
cli
in
call
test
jmp
pushf
inc
jmp
inc
out
sahf
aas
push
fwait
cmp
jmp
xchg
inc
call
mov
repz
std
std
std
cld
std
std
cld
stc
cld
push
cli
push
stc
push
sti
stc
std
cli
hlt
cli
jmp
fisubl
pop
fbld
jmp
cmpsb
pop
fcomps
popa
fnstenv
out
cld
cld
stc
std
repnz
push
les
jmp
mov
fidivs
gs
lods
gs
fsubs
lods
clc
jmp
cld
cld
sti
sti
in
fldenv
inc
in
popf
inc
out
sahf
aas
push
lahf
inc
out
sahf
inc
jmp
cltd
inc
call
mov
repz
cld
cli
cld
cli
cli
clc
cld
push
cli
push
cli
stc
std
std
cld
push
out
call
lcall
mov
pop
jmp
stos
pop
jmp
test
fsubl
popa
dec
test
jmp
cli
sti
push
imul
push
test
ljmp
jmp
mov
jmp
lods
gs
fisubl
stos
push
call
cld
cld
std
cld
cli
cld
out
fisubl
inc
in
popf
inc
out
sahf
aas
out
mov
inc
jmp
pushf
dec
call
cmpsl
jo
repnz
cld
stc
cli
std
std
std
cld
cli
push
jmp
push
fdivr
hlt
lret
stos
jmp
cmpsl
jnp
frstor
pop
fsubrl
push
jmp
stos
pop
jmp
cmpsb
pop
fistpl
jae
jmp
push
cmc
push
sti
imul
push
int
jmp
cmpsb
jae
in
lods
imul
call
mov
in
scas
arpl
fsubl
cmpsb
mul
std
std
sti
cli
cld
cli
cld
sti
cld
in
fsubl
inc
in
popf
inc
out
sahf
aas
jmp
inc
jmp
popf
inc
fisubrl
cli
out
clc
call
hlt
repnz
stc
ljmp
in
lret
lods
jmp
mov
ja
ficomps
pop
jmp
lods
pop
push
jmp
stos
pop
jmp
popa
fstps
in
clc
std
repnz
clc
clc
clc
in
clc
shll
in
lods
push
out
mov
in
mov
push
mov
pusha
fisubs
mov
cld
std
cli
push
cld
clc
std
std
sti
sti
in
fsubrl
inc
in
popf
aas
out
sahf
aas
clc
mov
inc
push
pushf
inc
jmp
test
sar
icebp
int
out
ret
lock
out
lcall
mov
jmp
mov
jmp
lods
xchg
loop
jns
fistps
jmp
movsl
pop
jmp
lods
pop
jmp
scas
push
jmp
scas
push
jmp
stos
push
jmp
cmpsl
pop
jmp
movsl
arpl
fcomps
sahf
in
cld
sti
repnz
stc
stc
in
clc
xlat
mov
in
js
jmp
imul
out
mov
fs
mov
fbld
popf
cmc
loopne
sti
stc
push
std
push
std
std
stc
jmp
call
popf
ds
out
popf
ds
clc
pushf
inc
push
xchg
ds
cwtl
aas
jmp
xlat
scas
call
movsl
jg
rclb
fcompl
fstpl
jmp
sahf
gs
jmp
cmpsl
fs
jmp
call
mov
jmp
scas
push
jmp
lods
push
jmp
stos
pop
jmp
movsb
popa
fcomps
jne
stc
fdivrs
cli
idiv
cld
stc
out
push
fdivrs
jmp
mov
arpl
cmc
shlb
mov
fwait
push
loopne
cld
std
stc
push
std
push
std
std
clc
jmp
jmp
popf
inc
in
sahf
aas
out
sahf
aas
push
cwtl
inc
stc
lahf
inc
push
fwait
inc
push
mov
call
xchg
arpl
out
stos
gs
stos
pop
push
lods
pop
push
lods
pop
push
lods
pop
out
scas
pusha
in
scas
in
scas
pusha
in
scas
pop
jmp
lods
pop
jmp
mov
in
mov
call
stos
pop
jmp
test
fcomps
jb
not
mov
push
jecxz
std
cld
stc
sti
push
repz
clc
sar
mov
jmp
mov
addr16
ret
cmc
mov
fs
in
pushf
repnz
std
stc
sti
clc
std
cld
std
stc
ljmp
lahf
inc
in
sahf
inc
out
popf
aas
jmp
ds
pushf
inc
push
pushf
ds
cmpsl
push
push
mov
rcrb
pop
push
lods
push
push
mov
push
mov
push
mov
out
mov
jmp
pop
jmp
pop
ljmp
jmp
mov
ljmp
jmp
lahf
data16
fsubrl
stos
cmc
jecxz
clc
std
cld
stc
sti
clc
idiv
stc
fmulp
jmp
mov
popa
in
mov
push
push
mov
addr16
in
rcrb
cld
idiv
cld
cli
clc
std
cli
idiv
idiv
ljmp
lahf
dec
jmp
inc
out
popf
aas
jmp
fwait
aas
out
pushf
cmp
push
iret
xchg
call
mov
pop
push
mov
clc
mov
pop
push
mov
push
mov
pusha
in
mov
pop
jmp
mov
jmp
mov
jmp
scas
pop
jmp
cmpsb
pop
in
stos
outsb
push
mov
mov
cli
loopne
std
lock
sti
cld
cld
push
repnz
cld
idiv
div
push
fxch
jmp
mov
arpl
out
mov
push
cmc
les
clc
mov
outsl
push
mov
fdivr
std
repnz
sti
repz
cld
hlt
cmc
jmp
ficoms
inc
out
popf
aas
push
mov
aas
out
popf
ds
jmp
pop
push
aam
call
movsl
insl
jmp
stos
out
mov
out
mov
out
mov
in
mov
in
mov
in
mov
out
mov
in
mov
jmp
mov
jmp
mov
jmp
lods
pop
jmp
cmpsl
popa
in
lods
jo
idivb
mov
neg
jmp
push
cld
cli
idiv
push
cli
in
cli
faddp
in
mov
push
test
push
les
test
cli
mov
jb
repz
leave
mul
clc
in
clc
in
std
mul
std
lock
fisubrs
dec
jmp
inc
out
popf
aas
push
lahf
inc
push
pushf
cmp
in
stos
push
fdivl
call
lahf
imul
loopne
insb
jmp
scas
jo
ljmp
jmp
scas
fs
mov
out
mov
pop
jmp
mov
in
mov
jmp
sahf
fs
lods
jnp
not
scas
hlt
std
cmc
loope
sti
hlt
loop
cli
repz
cld
repz
std
lock
sti
fidivl
push
mov
sti
shrb
outsl
clc
outsl
cld
shrl
mov
push
mov
clc
lds
clc
shrl
out
lret
out
lds
jmp
fwait
dec
jmp
inc
out
popf
aas
push
fwait
cmp
repnz
ljmp
jmp
shlb
shll
cmp
lods
cmp
stos
jge
fldenv
jmp
mov
fs
in
mov
ljmp
jmp
gs
in
mov
jmp
cmpsl
popa
fbld
jno
clc
leave
lcall
leave
mov
jmp
xchg
push
ret
in
mov
in
lods
insb
push
mov
cld
mov
outsl
cli
leave
outsl
inc
insl
push
mov
in
stos
insb
in
mov
ljmp
jmp
mov
fsubrs
jp
out
gs
scas
pop
in
popf
inc
out
popf
aas
stc
popf
cmp
in
fwait
inc
jmp
test
in
mul
out
fld
ljmp
jmp
sarb
jmp
leave
movsl
jmp
rclb
loope
push
fildll
pop
call
mov
gs
mov
ljmp
jmp
push
ljmp
fsubrl
push
out
push
in
scas
push
mov
imul
sti
leave
imul
leave
imul
mov
insb
stc
mov
outsl
push
mov
outsb
jmp
mov
jno
std
mov
inc
out
popf
aas
mov
aas
jmp
cltd
dec
call
movsb
outsb
in
idiv
std
sti
cmc
cld
cld
idiv
clc
push
out
call
cli
in
out
into
sahf
jmp
mov
fbstp
pop
push
shlb
shlb
mov
jmp
popf
inc
jmp
mov
push
mov
je
out
ret
jo
icebp
ret
stc
lds
inc
jo
inc
outsb
dec
imul
int3
insl
cli
lret
imul
lret
std
int3
push
dec
insb
inc
jo
dec
jae
cli
lds
cli
lds
cld
enter
jb
clc
je
cld
lds
sti
mov
inc
out
sahf
aas
std
mov
aas
jmp
lcall
jmp
idiv
stc
std
push
cld
std
sti
std
cld
sti
cmc
std
lock
push
std
in
clc
fdivr
icebp
iret
cltd
jmp
lods
pusha
out
mov
push
mov
fs
sti
mov
inc
push
scas
push
inc
imul
stc
shlb
repnz
outsb
push
into
outsb
shll
call
outsl
dec
imul
int
cli
int
stc
int
cli
into
imul
into
imul
int
std
int3
outsl
std
iret
jae
test
insb
dec
insl
dec
insb
dec
imul
into
jno
sti
shll
mov
aas
cli
pushf
xor
jmp
xchg
push
call
movsl
jne
jmp
push
push
std
push
cld
stc
std
std
cli
cld
stc
clc
std
idiv
stc
clc
sti
cli
std
push
sti
fdivl
in
lods
stc
mov
gs
std
mov
inc
push
mov
dec
imul
shrb
iret
insb
push
iret
imul
shrb
shrl
call
imul
std
int3
imul
lret
imul
lret
imul
lret
std
lret
cld
leave
imul
leave
insb
cli
leave
insl
push
push
sti
int3
outsl
dec
outsb
std
enter
arpl
dec
fs
inc
arpl
in
mov
ds
cld
mov
aas
fists
jmp
push
stc
std
cld
push
cli
std
push
sti
push
cld
push
std
std
push
std
push
push
cld
push
jmp
ret
cmpsl
insl
jmp
cmpsb
pop
clc
mov
addr16
inc
popa
call
mov
inc
data16
sti
ret
push
ret
repz
imul
enter
enter
enter
insb
clc
shrl
mov
imul
mov
push
in
mov
out
mov
push
out
mov
push
mov
push
std
mov
aas
out
sahf
ds
std
mov
inc
jmp
xchg
dec
jmp
test
out
int
push
in
std
std
hlt
stc
cld
cli
sti
std
std
cld
cli
std
std
push
sti
sti
push
cld
std
stc
std
idiv
jmp
ret
jmp
stos
insl
jmp
stos
pop
push
shrl
data16
sti
ret
in
inc
ljmp
in
stos
pop
jmp
mov
jmp
mov
jmp
scas
outsl
jmp
scas
outsl
call
scas
jl
out
jl
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ljmp
call
mov
test
test
ljmp
push
sahf
inc
out
popf
aas
clc
lcall
lock
push
jmp
pushf
pop
jmp
xchg
jmp
lods
push
out
push
jmp
clc
std
std
clc
sti
cld
idiv
sti
std
stc
std
cli
stc
in
clc
fldcw
jmp
mov
push
lds
stc
enter
lds
jmp
cmpsb
push
fists
outsl
push
mov
push
mov
lcall
mov
movsl
in
shrl
repz
mov
hlt
lret
mov
hlt
into
mov
push
aam
clc
fcmovne
push
fadd
push
fmul
push
clc
loop
std
out
jmp
test
jmp
inc
out
pushf
inc
out
popf
aas
clc
lcall
negl
dec
fistpl
jb
loope
xchg
push
mov
in
sar
neg
cld
out
jmp
std
ljmp
jecxz
out
mov
pop
push
mov
cli
lds
lret
dec
gs
clc
mov
gs
fcoms
xchg
jmp
call
in
in
fdivrp
out
loop
cld
out
out
std
out
in
push
in
push
out
push
in
push
icebp
push
icebp
push
in
push
jmp
div
std
clc
idiv
cld
hlt
std
loope
ds
in
pushf
inc
out
popf
aas
std
mov
ds
fwait
inc
push
mov
jmp
imul
stos
outsb
mov
ljmp
push
lods
push
aam
jmp
pushf
jmp
mov
jmp
cmpsb
push
mov
cld
ret
gs
dec
arpl
dec
dec
fs
inc
insb
push
mov
dec
xchg
arpl
cli
int3
lods
cli
call
sti
repnz
std
push
push
std
idiv
std
std
cli
std
clc
hlt
std
idiv
std
cld
cli
sti
sti
std
sti
cld
cld
std
std
clc
cld
idiv
cli
cld
cld
push
cli
cld
std
sti
call
jmp
popf
inc
in
popf
aas
out
popf
aas
stc
mov
ds
fwait
cmp
mov
insb
push
mov
ljmp
jmp
lods
push
loop
insl
jmp
mov
jmp
mov
jmp
mov
call
mov
cli
lds
call
insb
sti
int3
fs
sti
lret
dec
push
stc
shrb
stos
push
aam
ja
std
loope
idiv
std
cli
std
cld
sti
cld
cli
clc
sti
stc
std
std
std
sti
idiv
std
cli
std
std
std
cld
std
cld
cld
cld
std
cld
sti
cld
stc
cli
std
cld
in
fldenv
out
popf
inc
out
popf
aas
out
popf
ds
lahf
aas
push
lcall
mov
push
cli
ret
cmc
mov
arpl
in
mov
jmp
mov
push
mov
gs
clc
les
cli
int
cld
shrl
cli
iret
data16
cld
int3
addr16
cld
lret
in
mov
call
pushf
jmp
mov
push
std
clc
cli
sti
std
cli
std
stc
std
clc
sti
cli
std
std
cld
clc
cli
std
std
std
cld
std
std
std
cli
cli
clc
idiv
std
cli
cld
in
fsubs
dec
out
popf
inc
out
popf
aas
jmp
lcall
jmp
movsl
dec
mov
imul
dec
outsl
std
lret
cld
lret
sti
leave
imul
lret
clc
lret
imul
std
lret
std
lret
imul
std
iret
push
dec
imul
in
mov
fldenv
mov
sti
jmp
cli
idiv
sti
std
clc
std
hlt
std
clc
sti
sti
std
cli
push
stc
cld
cld
sti
cld
std
cld
cli
std
cli
cli
cld
cli
sti
std
cli
jmp
shlb
inc
ljmp
jmp
lcall
out
aas
in
movsb
dec
sti
mov
addr16
std
leave
push
dec
insl
dec
push
dec
push
dec
push
cld
shrb
stc
shrb
cld
iret
addr16
dec
addr16
dec
outsb
dec
outsb
dec
imul
enter
shlb
mov
push
mov
push
mov
test
jmp
ljmp
jmp
jmp
jmp
jmp
out
out
out
in
in
lock
icebp
ljmp
mov
jmp
sahf
dec
ljmp
call
lahf
inc
call
mov
pop
push
mov
pop
cld
lds
dec
addr16
dec
push
shrl
shrb
shrb
int
dec
je
std
lret
cli
les
idivb
pop
jmp
movsb
dec
jmp
mov
arpl
jecxz
outsb
fldenv
insb
dec
cmpsl
outsl
dec
lods
jb
into
stos
insb
call
stos
push
call
test
fldenv
push
fldenv
insl
call
cmpsl
outsb
call
cmpsb
outsl
call
movsl
insl
call
movsl
outsb
call
movsl
outsl
call
movsl
outsb
imul
xchg
aas
out
fwait
ds
popf
aas
push
sahf
aas
in
sahf
inc
push
mov
inc
in
sahf
inc
push
lods
push
out
scas
push
jmp
push
push
mov
std
mov
pop
inc
pusha
inc
arpl
cld
lds
std
les
inc
addr16
mov
popa
jmp
pop
jmp
pop
jmp
lahf
inc
jmp
xchg
inc
call
popf
dec
jmp
cwtl
dec
call
xchg
dec
fcomps
fstpl
inc
call
pushf
inc
jmp
inc
in
pushf
inc
jmp
inc
jmp
fwait
inc
call
fwait
dec
jmp
popf
dec
jmp
cltd
inc
jmp
xchg
cmp
push
cltd
ss
cld
cmpsb
inc
push
sahf
ds
sahf
ds
popf
cmp
mull
ds
popf
inc
push
movsb
dec
ljmp
call
sahf
inc
out
lahf
inc
out
mov
inc
call
mov
dec
jmp
lcall
call
movsb
dec
out
mov
inc
push
cltd
ds
pushf
inc
push
cltd
inc
out
lcall
out
lahf
inc
push
sahf
inc
push
sahf
inc
stc
lahf
inc
push
sahf
cmp
push
lahf
cmp
push
lahf
cmp
out
lahf
inc
in
sahf
inc
in
lahf
inc
push
mov
inc
push
mov
cmp
out
pushf
cmp
out
sahf
cmp
push
popf
ds
fwait
ss
stc
sahf
cmp
clc
lcall
repnz
inc
jmp
xchg
cmp
call
pushf
inc
push
popf
inc
push
pushf
inc
in
fwait
inc
ljmp
out
xchg
dec
in
xchg
dec
in
lcall
in
sahf
inc
jmp
inc
push
popf
aas
stc
sahf
aas
sahf
inc
std
lcall
cli
pushf
inc
push
pushf
inc
push
cltd
ds
stc
lcall
std
popf
cmp
clc
pushf
aaa
push
popf
aaa
push
popf
cmp
repz
cmp
hlt
popf
aaa
push
popf
aaa
out
popf
cmp
in
lahf
cmp
ljmp
push
lahf
xor
lock
cmp
in
sahf
ds
out
sahf
aas
incl
add
add
add
xor
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
xor
add
add
jns
push
adc
dec
mov
mov
and
ja
ja
ja
add
add
add
arpl
add
outsl
add
add
add
cmp
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
add
add
jns
push
adc
dec
mov
mov
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
xor
add
add
jns
push
and
inc
add
push
add
add
je
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
sub
or
pop
dec
jb
addr16
pop
and
xor
add
add
jns
push
and
inc
bound
and
and
insb
jge
testl
ja
ja
add
add
add
arpl
add
outsl
add
add
add
inc
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
jns
push
and
ja
ja
ja
add
add
add
arpl
add
outsl
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
xchg
sbb
inc
xchg
sbb
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
xchg
sbb
sbb
add
xchg
sbb
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
sti
sahf
mov
mov
loopne
push
adc
and
cmp
rcr
arpl
loopne,pn
shr
sar
or
dec
stc
fyl2xp1
push
cmp
xor
jns
pop
js
cmpsl
leave
push
xor
fwait
push
and
push
mov
inc
sbb
xor
lahf
add
daa
cltd
lahf
adc
or
cmpsb
ret
cltd
mov
cmp
push
push
cli
orb
sub
pop
xchg
test
movsb
mov
cs
xchg
and
push
xor
fcomip
jno
pop
cld
push
mov
mov
out
pop
mov
or
xchg
clc
aad
cmpsb
ds
loopne
fsubr
je
jge
rep
cmp
push
jb
and
adc
aad
mov
test
cwtl
inc
pop
inc
jge
aad
shrb
mov
jmp
dec
leave
out
inc
mov
and
pop
xor
cli
dec
or
aas
pop
or
inc
jns
cmpsl
xchg
cmp
adc
mov
jl
enter
pop
mov
xchg
js
mov
mov
gs
lods
jnp
jg
ret
xchg
sbb
and
aas
or
push
dec
pop
push
pusha
jmp
gs
shll
test
mov
pushf
ret
lahf
mov
sbbb
adc
out
notl
adc
ret
scas
jns
loop
sbb
fidivs
xchg
insb
dec
iret
stos
jle
pop
mov
pusha
cmpsb
sbb
mov
addr16
lds
push
or
cmc
hlt
xchg
out
movsl
cmp
xchg
pop
cltd
repz
or
sahf
js
adc
cmp
ret
mov
add
mov
loope
gs
mov
cmpsl
sbb
js
loopne
stc
in
stos
movsl
pop
je
xorb
mov
mov
cmp
popa
push
ret
sub
dec
mov
pop
adc
mov
or
push
mov
fildll
cltd
out
cmp
idivb
lahf
xlat
stos
mov
add
dec
xor
outsb
mov
lods
mov
cmp
lret
loope
ret
loope
and
mov
jecxz
jnp
push
out
fldcw
xchg
pop
daa
jg
cmovns
cmpsb
dec
mov
repnz
push
shr
and
dec
mov
dec
rclb
inc
sub
shlb
pop
xor
jle
cmpl
push
sbb
jae
xchg
jl
mov
icebp
dec
xor
imull
fcmovb
dec
jmp
rcr
cltd
adc
add
ss
mov
mov
icebp
repnz
je
pop
nop
add
add
jnp
push
popa
cmp
inc
lods
push
adcl
or
fstpt
pusha
jle
stc
inc
daa
inc
pop
cli
dec
repz
daa
sub
push
je
das
cmp
push
adc
and
das
pop
scas
pop
dec
push
inc
sub
inc
int
sub
sub
rolb
push
fisubrl
in
movsl
sbb
sbb
mov
iret
cld
loop
call
mov
jle
mov
inc
xchg
mov
shlb
fimull
add
sub
sub
pop
addr16
sbb
mov
lret
sbb
mov
and
mov
mov
pop
jg
ja
mov
mov
cmp
or
push
mov
adc
lss
stc
cli
add
fldcw
mov
jge
or
inc
into
aas
xor
js
cmp
addr16
xchg
jmp
stos
addr16
lret
or
fcoms
adcl
sbb
pusha
lcall
imul
test
cs
and
rolb
jecxz
pop
in
lods
orl
xor
add
lcall
sbb
cmp
adc
jecxz
mov
repnz
lcall
je
cld
push
push
sub
mov
push
into
xchg
and
ffree
in
or
movsb
and
mov
lret
sbb
xchg
cmp
push
mov
sub
faddp
push
orl
cmp
je
sub
jns
sbb
ja
mov
fistps
sbb
xchg
inc
cld
push
cmp
push
adc
inc
inc
dec
scas
mov
pop
cmp
repz
sub
or
pushf
cs
cs
xor
cltd
adc
pop
cmp
inc
or
sti
sbb
int
jp
sbb
arpl
test
mov
cmp
popa
mov
adc
push
xchg
gs
outsb
xor
inc
icebp
ret
insb
popa
icebp
icebp
jns
repz
push
pop
int3
jo
mov
aad
fisttps
jno
sbb
test
mov
test
add
dec
pushw
pop
xor
inc
pop
pop
xchg
xor
fcompl
loope
mov
jne
cmp
mov
testb
xor
xor
bound
fldcw
ficomps
and
cmp
mov
xchg
clc
mov
cltd
mov
mov
mov
xor
push
adc
scas
xchg
sub
addr16
push
pop
mov
jp
mov
mov
jge
cmpl
cmp
scas
push
inc
jno
sti
sbb
test
dec
cltd
insl
sbb
stos
sbb
pop
push
mov
pop
mov
inc
push
mov
in
mov
cmpb
fistpl
test
cwtl
add
stos
xor
pop
mov
insb
xchg
cmp
dec
pop
pop
aaa
xor
popa
sbb
outsb
cmp
xlat
out
sub
cmp
sbb
lahf
lods
int3
mov
ret
sbb
in
ds
jecxz
mov
xlat
adc
out
cltd
ret
in
pop
out
outsb
sub
fistpll
bound
xchg
mov
xchg
cmp
ja
push
outsb
jl
nop
sti
lret
pop
and
cmpb
imul
jb
jo
lcall
rcrb
add
inc
mov
out
mov
dec
xchg
jmp
sbb
sbb
movsl
lock
mov
aaa
nop
sub
ljmp
pop
push
data16
jbe
xor
jp
fcomi
insb
cmpsl
pop
push
jl
jae
push
subl
adcl
pop
adc
in
fidivs
inc
pop
adc
and
shlb
test
pop
mov
pop
dec
inc
movsb
dec
cmp
stos
xchg
shrl
int3
xor
xchg
inc
aad
aad
std
sbb
pop
fiaddl
or
xor
push
jnp
or
xlat
inc
out
pop
icebp
jb
push
orps
push
loopne
dec
lret
fmuls
outsl
pushf
test
std
lods
pop
pusha
cmpsb
lret
std
sub
or
outsl
lds
incb
pop
sbb
lahf
lods
cmpl
fbld
push
cltd
inc
xchg
test
push
mov
jge
aaa
xlat
mov
jnp
cmp
mov
mov
iret
push
jns
repz
out
xor
js
mov
pop
xchg
stos
mov
nop
adc
aaa
sub
pusha
ds
add
jp
and
outsl
push
mov
mov
pusha
movsl
bound
fcmovnu
jge
int
js
mov
cmpsl
in
dec
cld
jge
test
mov
push
sahf
inc
xchg
je
das
jecxz
xor
inc
and
push
xchg
popf
bound
fdivl
cmpsl
jne
xor
stos
and
ja
jo
les
sbb
stos
or
aas
mov
sub
add
imul
push
lret
test
aam
add
pusha
fstpt
mov
sarl
jno
cmc
in
push
dec
jno
or
test
mov
mov
sub
gs
mov
test
pop
xchg
jmp
out
aam
test
je
push
jmp
and
movsl
outsb
out
gs
cmp
mov
rcrl
and
xor
add
leave
int3
out
scas
inc
push
xor
adc
leave
dec
or
push
ds
bound
push
jns
mov
ss
dec
sbb
movb
cmpb
mov
pop
cwtl
xchg
jne
repnz
bound
das
scas
cld
out
out
push
aaa
mov
stos
mov
lock
push
ja
fcmovnbe
and
pop
loopne
mov
dec
dec
add
hlt
add
mov
mov
aam
dec
pop
pop
lcall
push
notl
fisubrs
push
inc
sub
arpl
popf
or
arpl
inc
mov
or
mov
dec
sti
fildl
iret
push
inc
add
and
mov
mov
dec
movsb
loopne
pop
loop
inc
int3
pop
sub
push
xchg
add
cmp
out
imul
scas
xchg
sub
mov
sub
jbe
fcompl
ljmp
inc
jl
xchg
loopne
jbe
into
add
lods
dec
lcall
outsb
push
xchg
imul
jne
xchg
movsl
std
gs
push
icebp
and
sub
xchg
outsb
dec
cmpsl
ds
fcoml
jo
jae
push
mov
push
arpl
or
xor
push
push
xchg
xor
xor
int3
mov
pusha
inc
nop
cmp
and
xlat
jecxz
ljmp
mov
ljmp
pusha
aaa
xchg
stc
adc
and
cmpsl
nop
lock
pop
sub
rcrl
xor
aad
xor
addr16
cmc
fmuls
mov
repz
int
test
inc
js
pop
jbe
mov
pop
pop
jl
subl
shlb
or
aas
or
push
movsl
arpl
add
arpl
les
xchg
je
jne
xorl
stos
adcl
adc
iret
loop
iret
sbb
xorb
mov
adc
lret
push
popf
xor
mov
jae
je
jecxz
das
lahf
and
inc
push
into
add
cltd
les
icebp
test
add
adc
imul
mov
jne
mov
mov
mov
xchg
jno
das
imul
pop
xchg
lret
stos
aam
mull
xorb
and
bound
shrb
stc
push
add
xor
lcall
inc
movl
imul
dec
cwtl
test
dec
xor
xor
cltd
shlb
add
push
leave
dec
fisttps
push
testl
xchg
jecxz
mov
pushf
jg
pusha
dec
ds
mov
in
imul
pop
dec
push
lea
pop
nop
adc
loopne
loop,pn
push
sbb
gs
mov
push
or
loop
adc
add
aas
add
cmp
push
push
and
cmpb
push
lock
jg
lods
nop
fwait
shll
sbb
push
cmp
add
push
mov
mov
adc
jp
mov
mov
jle
lret
mov
mov
lds
push
cmp
mov
cmp
inc
inc
adc
in
rol
push
and
scas
leave
jnp
xchg
out
in
xor
add
inc
loope
jbe
mov
xchg
loope
ret
and
stos
and
in
aad
into
outsb
push
addr16
ljmp
jmp
push
inc
mov
xchg
out
insb
mov
leave
mov
out
push
fsub
dec
mov
mov
pop
gs
and
mov
cmpsl
cs
outsb
mov
xor
dec
pop
pop
push
and
jbe
mov
ficompl
mov
out
stos
lds
sbb
loopne
int
fs
mov
testb
lock
xchg
and
pop
and
movsb
je
push
addr16
test
pop
push
xor
dec
pop
sbb
mov
enter
popf
pop
popf
inc
pushf
popf
xchg
out
mov
pop
es
push
out
leave
stc
add
jno
test
andb
sbb
mov
mov
popf
out
ret
inc
ljmp
dec
sbbb
subb
sub
test
and
dec
xchg
and
cmpsb
xchg
negb
mov
ret
jae
shll
lret
jns
lahf
xor
loope
movsb
inc
add
xor
imul
or
sbb
push
js,pt
cmpsb
inc
xor
sub
mov
push
push
dec
rcr
lods
xorb
sub
inc
enter
ja
inc
je
arpl
lcall
jp
bound
xlat
lods
test
cmpsb
fwait
aad
jg
xor
insb
inc
bndldx
cmp
adc
dec
cli
sbb
push
addr16
push
mov
fcoml
test
in
repnz
xorb
mov
add
push
mov
xchg
rorb
jnp
sbb
mov
push
pushf
mov
ja
mov
pop
iret
push
inc
pop
and
test
fisttpll
stos
imul
jns
pop
mov
pop
mov
test
mov
push
test
call
add
sub
xor
mov
inc
pusha
or
pop
dec
jns
pop
inc
jmp
mov
inc
jp
sbb
pop
testl
daa
push
xor
stc
push
ja
mov
pop
insl
stos
stos
sbb
cwtl
insl
pop
push
in
push
out
and
xchg
inc
loop
push
mov
fcoms
pop
or
jp
sarl
pop
shlb
ret
xchg
test
xchg
adc
push
fnop
cmpsl
fdivr
mov
into
mov
mov
outsl
loopne
jo
rol
jecxz
scas
push
or
out
test
xor
add
xchg
mov
mov
enter
inc
ficoml
adc
frstor
insl
idiv
inc
adc
push
mov
cli
jecxz
adc
inc
dec
sbb
int3
adc
in
xor
mov
jns
rorb
mov
js
addl
ja
mov
stc
xchg
jno
lahf
in
mov
and
fwait
enter
enter
push
sbb
imul
popa
and
daa
adc
inc
imul
inc
add
push
clc
and
sbb
push
add
jb
xor
adc
pop
mov
fsubl
insl
sbb
push
mov
push
pop
outsl
mov
stc
pop
pop
sti
jmp
mull
adc
ficomps
rclb
push
test
fstpl
xchg
inc
in
ss
inc
or
loopne
fsts
cmc
roll
sub
jecxz
push
aam
ret
pop
mov
fcoml
js
mov
ret
sbb
mov
xchg
pop
sub
aam
int3
lea
cs
in
ss
push
mov
call
push
daa
packssdw
movsb
loope
pop
sub
push
cld
add
pushf
and
in
add
push
mov
loop
xchg
cld
loope
cwtl
cld
les
pusha
test
scas
inc
push
adc
add
push
hlt
xchg
inc
cld
xor
adc
jl
insb
shll
fnsave
sarb
sbb
push
dec
int3
aaa
ljmp
mov
daa
inc
jl
mov
add
popf
fstpl
dec
add
fsubl
sbb
ds
out
or
adc
xchg
xor
mov
mov
out
inc
cmp
into
lock
mov
jmp
loop
xor
jne
adc
jg
stos
scas
sbb
hlt
call
sub
sti
and
lock
dec
loope
loopne
dec
pop
lods
aam
cmp
adcl
negl
jns
test
pop
add
push
adc
gs
ret
scas
xchg
or
cmp
daa
push
mov
out
sti
pop
scas
mov
lret
add
sbbl
aas
sbbb
add
rcr
iret
sub
rclb
mov
push
daa
add
mov
add
xchg
jnp
inc
aaa
sti
jae
int3
sbbl
lcall
insl
push
repz
stos
mov
mov
and
sub
aad
mov
pop
mov
xchg
cmp
pop
push
push
outsl
add
mov
cs
adc
push
ss
jne
xlat
push
jle
sub
push
add
sub
inc
outsb
roll
mov
mov
in
push
loope
leave
les
push
and
cld
pop
mov
jmp
fwait
popa
pushf
or
je
push
scas
popf
xlat
fimull
or
sbb
ds
mov
out
outsl
imul
xor
loop
push
scas
stc
rclb
test
dec
fsts
enter
shrb
mov
icebp
ss
in
add
adc
hlt
xchg
add
inc
and
jmp
mov
leave
inc
jg
mov
cmp
repnz
faddl
xchg
data16
add
stc
lcall
adc
fisubs
or
jmp
imul
rcl
xor
mov
sti
mov
mov
test
mov
xor
lcall
add
add
or
or
dec
adc
stos
scas
orl
cmp
gs
aam
add
mov
cmp
repz
nop
pop
shrl
jno
mov
in
test
pop
jns
bound
sub
loope
push
iret
call
push
xchg
push
inc
rcrb
out
ret
cmpsb
fisttps
mov
inc
dec
gs
outsl
or
mov
push
jp
add
dec
xchg
aam
mov
xchg
jo
cmp
das
pop
data16
fdivs
mov
inc
insl
jo
cltd
dec
js
pop
popf
jne
push
push
mov
jp
jg
xor
fdiv
add
add
mov
inc
ficompl
lods
mov
into
push
popf
rolb
jbe
aam
dec
clc
push
dec
lahf
stos
nop
jl
push
mov
ljmp
les
test
and
repnz
xor
rclb
cmpl
pusha
rcrb
jnp
adc
int
mov
inc
inc
mov
rcl
andb
or
jl
popa
cmpsb
jge
insb
mov
dec
push
push
cld
push
pop
out
xchg
subl
inc
xor
aam
inc
mov
and
lock
out
sub
insb
inc
out
dec
mov
scas
fildl
lods
dec
incb
and
adc
jmp
leave
adc
fisubl
push
pop
sbb
cmp
out
movsl
jne
xchg
bound
out
jl
push
jl
mov
mov
lea
imul
lcall
test
cmp
ret
movsl
fisubrs
cmp
xor
mov
repz
daa
dec
sub
pop
cmp
addr16
stos
fs
inc
jns
mov
aam
sbb
xor
mov
dec
enter
adc
inc
and
mov
shll
mov
aas
sti
pop
mov
and
and
add
sub
xchg
push
testl
jnp
pop
cmpl
mov
enter
outsb
sbb
mov
daa
mov
mov
xchg
inc
mov
and
inc
sub
repnz
sbb
ljmp
es
inc
pop
lds
push
stos
mov
fnstenv
push
mov
mov
outsb
pop
ror
xchg
pop
fadds
daa
sub
jb
fisubrl
in
imul
movsl
daa
jo
lock
xchg
dec
pop
dec
fnstsw
daa
mov
popa
in
adc
je
jnp
xchg
xor
xchg
ss
push
bt
ficomps
and
xchg
cmp
popf
gs
mov
pop
jnp
cltd
xlat
cmp
add
call
or
shlb
add
mov
sbb
xchg
scas
rcrl
sbb
mov
adc
fiadds
mov
outsl
push
cmpsl
repz
mov
inc
mov
pop
sub
dec
mov
ficoml
jbe
dec
inc
push
jg
or
dec
leave
add
inc
sbb
jne
mov
push
jae
loopne
fsub
push
ret
aas
sbb
mov
lret
outsb
movsl
inc
lret
dec
pop
sub
cwtl
fdivs
incb
hlt
sbb
in
insl
push
mov
jae
into
dec
and
mov
loopne
int3
jb
icebp
push
cmc
jne
in
and
jnp
cli
out
jb
call
lcall
pop
fistpll
lods
jo
mov
hlt
jo
out
je
das
pop
push
and
pop
loopne
jmp
lret
rorb
push
fcomip
imul
in
aad
lea
gs
cli
sub
push
push
push
jl
nop
mov
mov
andb
jmp
mov
pop
frstor
pop
or
sbb
xor
andl
and
lret
lcall
test
and
lods
ds
jne
mov
cmp
test
inc
int3
xchg
adc
sti
and
in
jbe
cmp
mov
add
fs
pop
push
cmpsb
adc
insl
sub
jno
adc
xor
sahf
test
insl
cwtl
repnz
movsl
sarl
es
sub
add
cli
push
pusha
dec
xor
int3
ficompl
pushf
inc
je
aam
mov
fsubr
cwtl
mov
mov
test
mov
cmc
iret
sub
cltd
imul
mov
pop
jmp
loopne
mov
pop
cwtl
fcmovne
and
adc
mov
iret
cltd
insl
jbe
fsubs
test
xor
les
insb
push
mov
nop
sbb
pop
pop
cmp
shll
xchg
jg
dec
loop
das
lea
shlb
mov
sbb
insb
into
inc
mov
out
popa
or
popa
jb
mov
int3
inc
dec
push
repz
mov
sub
stos
imul
test
cmpsl
mov
cs
ss
stc
mov
cmpsl
in
shrl
loope
adc
xor
popf
aam
shlb
xor
mov
mov
mov
adc
mov
addr16
movsl
sub
test
mov
hlt
ret
nop
mov
and
mov
daa
push
cs
mov
loop
and
rol
lahf
fists
rorb
dec
out
push
and
cmp
fwait
pop
sbb
hlt
and
test
cld
loopne
adc
cs
xor
jg
cmp
fadds
push
mov
mov
daa
into
dec
std
dec
jge
xchg
mov
pushf
pop
mov
dec
add
insl
out
imul
ss
aad
sbbb
loopne
jno
out
cmp
xchg
test
cmp
add
jmp
rorb
pop
sub
add
addr16
fldcw
jecxz
int3
clc
dec
mov
lahf
mov
roll
cmpsl
cltd
stos
add
sbb
lods
push
sub
mov
dec
push
cltd
push
jge
mov
mov
pop
cli
imul
mov
inc
mov
mov
pop
lret
test
jb
mov
inc
xor
cs
or
in
mov
movsb
push
mov
mov
scas
xor
sbb
leave
fsubr
mov
pusha
mov
je
mov
les
mov
pop
or
sub
xor
mov
subb
add
or
outsb
push
daa
divl
jp
jecxz
or
push
pop
popa
addb
push
pop
push
test
sub
or
aaa
mov
xchg
nop
inc
xchg
inc
cmp
gs
cli
xchg
jl
mov
mov
adc
mov
add
adc
jge
les
mov
pop
and
fwait
nop
iret
aam
negb
shll
inc
push
les
ja
xor
out
faddl
xchg
jge
repz
testb
or
mov
ret
aam
inc
push
adc
and
dec
or
mov
push
xchg
mov
loopne
and
or
pop
add
lahf
lods
mull
xchg
inc
divb
cmp
inc
mov
in
clc
add
cmp
inc
cmp
push
or
mov
add
in
mul
sub
inc
mov
dec
fs
sbb
jne
popa
mov
lock
inc
or
dec
inc
test
pop
mov
imul
add
outsl
mov
fdivs
aas
mov
in
pop
sbb
popl
aas
lahf
add
int
jecxz
ret
pop
fiadds
outsb
inc
jns
xchg
mov
cmp
movsl
jns
aad
adc
sub
cmc
mov
add
mov
outsb
in
push
movl
daa
inc
mov
cwtl
loopne
je
mov
xchg
out
jne
inc
adc
mov
outsb
push
mov
stos
dec
cmpl
xchg
xchg
mov
lods
pop
mov
or
lret
push
sbb
in
fistpl
xchg
mov
out
loopne
mov
push
mov
int3
lret
ret
iret
daa
cmp
ss
mov
ret
or
cld
mov
pop
cli
mov
jbe
arpl
fcomps
loope
out
mov
in
and
xor
push
sbb
cltd
rorl
push
or
push
jecxz
adc
mov
fistpll
bound
je
enter
sahf
cwtl
sbb
add
inc
and
inc
adc
and
mov
add
xchg
je
jns
sbb
cltd
rcr
insl
pop
and
aaa
mov
or
mov
sbb
mov
xor
mov
je
xor
push
xor
and
mov
mov
movsl
push
and
or
mov
movsl
ret
add
lcall
push
push
movsb
lret
mov
add
pop
cmp
inc
or
xchg
add
push
fsubr
jo
loopne
flds
out
cli
test
ficomps
call
or
in
jle
push
jp
aaa
imul
loop
aas
cmp
ja
cli
xor
faddp
sbb
in
dec
subl
inc
incl
sub
shl
pop
fwait
or
mov
adc
in
mov
mov
hlt
jmp
lea
into
clc
jb
push
jnp
out
xchg
iret
in
fmuls
lahf
mov
inc
sbb
js
xchg
decl
inc
lods
xchg
xchg
stc
mov
popa
popf
mov
cmpsl
jne
pop
cld
pop
call
cld
pop
int
lcall
popa
adcl
jae
ficoms
mov
movsb
jnp
xor
lret
inc
adcb
add
lods
sysret
notl
jnp
sti
inc
push
ss
rcl
jno
mov
mov
aas
add
sub
outsl
out
xor
push
mov
test
in
push
jne
or
js
cli
outsb
fs
pushf
or
icebp
xor
or
push
je
shr
insb
jl
jle
imull
call
cmpsl
inc
cmp
sbb
loope
mov
mov
aam
call
scas
loope
lods
push
add
cmpsl
add
xlat
out
mov
int
jno
pop
testb
addr16
mov
pop
xor
xlat
jp
xlat
and
sahf
notl
or
notl
xchg
sub
insl
push
lods
adc
movsl
stos
xor
stc
mov
pop
add
or
out
cmc
scas
sbb
scas
push
clc
fcmovnb
mov
fiadds
js
sbb
xchg
dec
mov
stos
and
inc
jns
push
fdivrs
sub
shrb
mov
addr16
out
and
sbbb
mov
push
sub
jge
loopne
testb
xor
mov
popa
sbb
mov
lret
jbe
popa
push
jle
in
les
push
add
xchg
rclb
mov
sbb
lret
shlb
pop
push
iret
xchg
insb
jo
push
insb
lods
test
xchg
or
mov
insb
add
fiadds
rorb
xor
dec
test
mov
xchg
jg
cmp
push
cli
xchg
out
ret
test
cs
and
push
insb
dec
mov
and
loop
mov
data16
pop
mov
lahf
push
xor
aas
fwait
push
and
add
sahf
dec
ss
sub
imulb
xor
dec
dec
push
mov
jp
fistpll
dec
adc
mov
popf
test
mov
or
fwait
in
aad
mov
inc
pop
sub
pop
movl
rorb
aad
mov
out
sbb
shr
xchg
xchg
cmp
and
jp
push
jmp
dec
and
push
pop
xor
sarl
negb
sub
mov
ret
sbb
shr
jmp
sub
dec
pop
xchg
imul
or
or
insl
ss
fmuls
fistpl
push
sbb
mov
movsl
xor
cwtl
shll
pop
xor
or
scas
rolb
push
hlt
into
aam
mov
imulb
cli
jb
xlat
add
or
adc
mov
call
fs
mulb
out
cmpsb
addr16
pop
les
jb
int
stc
jb
push
mov
and
insl
mov
and
mov
nop
pop
adc
mov
popf
mov
cli
pop
in
adcb
cwtl
push
fadds
shrb
dec
jge
pop
in
dec
xchg
test
outsb
dec
xchg
sbb
mov
sbb
push
push
xor
jle
xchg
sbb
mov
or
pop
sub
lret
dec
pusha
popa
and
sub
andb
call
lret
aam
les
iret
add
mov
fisubl
fwait
fs
adc
xor
out
jl
incl
mov
or
insl
pop
xor
cli
arpl
inc
pop
stos
sahf
jg
add
inc
cmp
int
cld
movsl
ret
sbb
int3
inc
mov
jmp
xchg
xor
call
ret
imul
out
hlt
mov
inc
in
lock
mov
sbb
sbb
inc
fstps
aad
pusha
pop
popf
idivl
popa
int
std
add
ret
ja
rclb
mov
stc
cmp
outsl
inc
push
lods
or
xrelease
das
mov
jge
cmp
and
loop
jo
es
and
lods
and
push
hlt
mov
out
loopne
jl
pushw
shrl
insl
add
mov
daa
pop
lock
inc
jns
les
or
mov
repz
mov
cmp
sub
xor
xchg
pusha
xor
scas
push
and
loope
cmp
xchg
adc
mov
push
out
test
fstps
out
es
adc
mov
or
scas
js
jno
jp
push
add
iret
out
mov
cmpsl
mov
jno
sub
cmp
jae
mov
or
cmp
adc
adc
pshufw
pop
xchg
rcll
pop
in
sub
xchg
call
fnstenv
mov
in
sub
outsb
pop
or
icebp
push
sub
dec
mov
aam
stos
sub
in
test
movsl
in
ret
sub
cli
jecxz
cwtl
cmc
jns
pop
pop
cmpsl
shl
sub
icebp
and
pop
mov
or
xor
cwtl
sub
imul
fmuls
in
sub
nop
mov
xchg
jb
or
sbb
fmuls
ret
xor
outsb
or
add
ror
sub
adc
jno
add
add
stos
jmp
jns
cmp
cltd
dec
and
hlt
test
xchg
sar
dec
lahf
mov
stc
push
lods
ret
xor
sbb
stos
sbb
icebp
fcoml
cli
lcall
mov
lds
dec
sbb
test
push
lcall
mov
and
andb
pop
int
xchg
mov
dec
into
push
or
lock
lods
inc
dec
insb
scas
idivb
mov
mov
or
push
ss
sub
lods
push
xchg
adc
les
or
xchg
inc
nop
xchg
cmp
cs
sti
jp
pop
and
shll
les
pop
xor
push
loope
sub
pop
or
ret
insb
xchg
fs
inc
int
add
push
es
cmp
mov
adc
adc
lcall
mov
subl
adc
ret
inc
gs
outsl
push
inc
mov
pop
ret
imul
ret
repz
fldenv
push
sti
rcl
cmpsl
outsb
jns
xchg
sub
cmp
fildll
rclb
iret
mov
js
sub
in
mov
ror
test
pop
push
push
xchg
imul
loop
add
rcll
dec
int3
orb
fldenv
dec
and
pop
sahf
and
out
cwtl
pop
imul
jno
jnp
popf
and
and
cmp
ja
bswap
js
xchg
outsb
mov
jl
add
add
mov
cli
ret
or
in
jmp
fucomip
push
jle
push
outsl
sbb
push
push
and
add
outsb
xchg
shlb
add
add
pop
cmpsl
xchg
mov
xchg
fs
mov
push
loopne
je
jge
sub
mov
scas
subb
push
enter
sub
adc
and
ja
call
push
scas
out
adc
and
sub
dec
inc
inc
xchg
inc
lret
je
mov
dec
addr16
call
sbb
fisubrl
add
shr
jecxz
stc
and
adc
and
clc
add
out
imul
divl
pop
aaa
rcl
aam
imul
mov
cmp
adc
jno
popf
mov
push
lea
dec
lahf
out
loop
xor
lcall
sbb
lret
sbb
call
int3
incl
bnd
mov
test
jbe
clc
sbb
ss
mov
lea
test
mov
dec
sub
mov
xacquire
jbe
pop
or
test
test
adc
pop
out
fstps
int
inc
popa
fs
mov
call
stos
pop
mov
jg
push
or
sarl
ret
xchg
sbb
shll
iret
jle
cmp
addl
js
and
dec
pop
in
outsb
jb
and
mov
scas
enter
or
movsb
mov
stc
fistpll
add
cmp
jb
enter
invd
ror
loope
iret
jecxz
adc
std
das
push
fildll
mov
push
mov
sbb
jp
std
and
add
mov
jne
popa
mov
mov
cmp
js
dec
mov
ror
jbe
in
mov
pop
arpl
cli
fldenv
in
repz
dec
sbb
or
or
cwtl
popa
or
loop
xor
fstpt
cmpsb
fs
ret
test
xor
les
push
dec
aas
sub
jl
out
inc
stos
xchg
dec
pop
jecxz
outsl
pop
xlat
lods
aam
into
inc
test
mov
and
mov
push
cmp
mov
loope
faddl
mov
xor
cmc
ja
aam
call
xlat
daa
xchg
cli
xor
mov
sub
clc
sub
jno
bound
mov
stc
adc
xchg
push
xchg
data16
sbb
or
nop
jl
aad
rorb
adc
cmpl
lods
jg
iret
pop
ja
cmpsl
sbb
aaa
movsl
repnz
push
cmp
inc
insl
cld
and
shlb
in
stos
fwait
push
inc
push
shll
ja
je
pushl
push
bnd
mov
out
and
xchg
jmp
sub
pusha
sbbb
sbb
test
jae
mov
leave
repnz
jo
mov
ret
jno
jo
test
push
scas
mov
cmp
roll
mov
xor
inc
sti
mov
adc
cmp
ja
pmaxub
inc
bound
shll
sub
cmc
pop
pop
mov
shll
fcmovb
mov
jnp
ret
popf
sub
lea
fsubl
inc
inc
pop
in
mov
cmp
das
or
push
add
dec
repnz
or
loope
fistps
push
xor
or
out
xlat
mov
jge
call
out
les
scas
das
sbb
adc
jns
arpl
aas
xchg
roll
je
cmp
shl
jb
jno
aaa
sbb
dec
jecxz
inc
out
push
sbb
push
pop
push
fildl
js
jne
pusha
sbb
push
shl
les
in
and
jp
lods
adc
push
fistpl
mov
push
test
mov
jge
mov
out
pop
push
add
xchg
push
pop
addr16
jo
int3
in
int3
incb
add
movsl
pop
mov
dec
cs
loopne
xor
insl
or
stos
mov
pop
sbb
jmp
in
lcall
mov
or
icebp
rol
pop
loopne
aaa
iret
fsts
dec
jae
ret
mov
xchg
jbe
mov
jmp
insl
mov
insb
push
mov
add
jno
and
xor
sbb
gs
imul
push
xchg
lods
loope
pop
movsl
adc
repnz
cmp
sbb
in
ljmp
or
cld
lret
push
hlt
nop
cmovbe
cwtl
loopne
pop
cmp
pop
fstpl
xchg
sbb
stos
mov
xchg
repz
lret
fwait
aaa
mov
enter
or
xorl
fidivs
arpl
out
jecxz
cmp
aad
push
ret
stc
imul
or
xor
ret
xorl
pusha
out
xorl
pop
dec
mov
sub
pop
je
sbb
cmpsb
out
or
iret
push
or
or
and
jae
xor
outsb
outsb
mov
push
rorb
out
push
mov
fstps
push
pop
mov
cmpsl
cmp
or
andb
ret
dec
sbb
xor
sarb
insb
lahf
xchg
dec
leave
movsl
push
je
int3
or
push
push
dec
push
xchg
push
xchg
pop
movq
push
adc
test
gs
push
mov
inc
pop
repz
ds
mov
mov
adc
mov
ja
cmp
fisubrl
js
daa
bsr
mov
std
mov
sub
test
mov
dec
pop
dec
mov
fdiv
xchg
aas
push
mov
and
push
mov
and
cwtl
mov
in
jb
cmp
push
pop
fucomi
xchg
adc
leave
jbe
xchg
lea
std
in
stc
jge
repz
sbbl
aas
mov
call
jge
mov
movsb
cli
mov
roll
aaa
dec
pop
mov
test
lret
fsubl
scas
mov
inc
iret
loop
stos
in
adc
outsb
mov
call
lds
in
pop
fsubs
xor
enter
fsubrl
or
shl
rclb
mov
dec
mov
adc
test
xchg
and
lock
add
cmpsb
mov
movb
adc
cmp
imul
xor
outsl
addr16
jb
hlt
add
fcmove
mov
cvtdq2ps
mov
lods
js
mov
inc
add
pop
cmp
fs
mov
imul
shlb
aad
dec
xor
je
das
out
adc
aam
ljmp
push
jg
rcll
cmp
arpl
movsb
rcll
push
cmc
jo
and
lcall
out
xchg
cmpsl
shll
xor
adc
lock
add
and
jecxz
push
xchg
int3
sahf
sub
pop
shrl
xchg
adc
inc
arpl
rorb
push
jmp
and
sti
and
in
mov
in
xchg
lock
jle
int
pop
jb
jge
mov
mov
pop
addr16
mov
add
inc
and
fwait
mov
and
movsb
fs
jnp
cmp
push
bound
mov
cmpsb
mov
adc
sub
aas
push
jns
sub
sub
push
cli
add
pop
cwtl
std
ss
das
bound
repz
push
add
xchg
cmpsb
cmp
mov
hlt
inc
mov
adc
or
inc
cmp
push
std
arpl
sub
inc
jb
hlt
test
fsubl
mov
popf
jb
test
lea
test
sbb
pop
test
fisubl
add
test
test
ss
push
mov
mov
test
rclb
sbb
and
orl
pop
into
popa
cwtl
xor
cmp
imul
fisubs
test
push
inc
lea
mov
sbb
jne
clc
dec
ja
insl
sbb
xchg
sbb
into
sbb
mov
push
and
jbe
or
sti
pop
sbb
push
frstor
cmp
jle
mov
push
iret
bound
push
int3
insl
fwait
adc
dec
in
add
mov
jl
nop
or
pop
jb
and
inc
aad
stos
adc
mov
lahf
xchg
mov
add
sub
pop
call
mov
inc
inc
sbb
ds
idivb
xchg
arpl
repz
cli
and
clc
add
fnsave
mov
test
push
adc
lods
in
clc
in
xor
scas
outsb
adc
sub
daa
int
xor
nop
into
add
jmp
flds
jae
loop
test
sbb
xchg
roll
pop
cld
psraw
inc
aam
dec
jle
je
add
xchg
loop
pop
mov
fistps
jnp
dec
jp
lret
push
fprem
and
and
or
lret
cmp
js
aaa
dec
ret
pop
dec
insl
xorl
out
in
mov
mov
mov
in
mull
add
jb
add
cmpsl
add
stos
lds
pop
sbb
ficoms
fs
cmp
pop
pop
lds
leave
or
xchg
jge
pop
inc
sub
flds
lcall
mov
inc
fmull
dec
scas
sahf
dec
js,pt
inc
push
outsb
or
mov
xor
jle
std
sahf
call
mov
pop
push
loope
pushf
ret
jnp
or
add
add
xor
pop
cmp
subb
imul
orb
jno
es
sub
jl
aaa
in
fldcw
sub
push
arpl
aam
and
dec
outsl
rclb
mov
xchg
xor
lret
popl
pop
jo
loopne
lock
and
pop
push
jl
popa
push
test
pusha
sarb
push
push
push
in
arpl
sbb
repnz
cmp
loopne
add
or
rcrl
in
xchg
aas
mov
das
out
imul
xchg
adc
sarl
fs
movl
mov
or
xor
lods
pushf
mov
sbbl
clc
mov
adc
jne
fistpl
inc
jbe
inc
je
xchg
divb
icebp
scas
push
cld
addl
and
scas
add
popf
mov
mov
lods
jge
testl
sub
xor
or
push
cmp
adc
and
fmull
in
sub
pop
ffree
fnstsw
xchg
lcall
sbb
mov
test
jg
movsb
fcmovnu
cmpsl
mov
jl
pop
pop
aam
insl
jl
setbe
in
jb
lret
scas
movsl
int
mov
cmp
lcall
pop
fwait
push
test
mov
inc
out
decl
xchg
aas
adc
out
fimull
inc
iret
push
test
pop
popf
mov
cmp
sub
xor
mov
pop
xor
adc
adc
dec
push
in
dec
sti
push
aam
lock
inc
mov
cmc
sti
inc
push
sbb
mov
jmp
cld
rcll
inc
ror
or
and
sarb
decb
mov
nop
xor
or
cmc
dec
aaa
aad
loopne
mov
add
add
cmpsb
inc
push
mov
cmpsb
xchg
dec
mov
xor
std
sti
and
test
out
adc
and
sub
shlb
inc
push
sbb
adc
int
into
xchg
dec
push
mov
sub
sbb
pop
sub
sbb
clc
adc
inc
push
cmp
hlt
adc
movsb
adc
jl
xchg
mov
repz
jl
es
js
clc
add
inc
lahf
jge
je
cmc
or
aam
mov
sbb
nop
outsl
and
or
mov
test
mov
stc
fildll
fcoms
in
pushf
loop
inc
inc
fdivs
mov
into
xor
jo
leave
ja
aam
push
jecxz
mov
push
add
stc
xchg
sbb
mov
xchg
mov
shl
add
xor
out
mov
and
and
imul
enter
jl
cltd
js
and
pop
mov
sub
test
bound
pop
aas
xchg
xor
mov
lret
adc
stc
mov
push
sub
and
push
js
notl
out
jg
or
push
mov
jmp
mov
imul
movsb
mov
sbb
inc
lret
dec
and
mov
icebp
dec
sbb
mov
std
pop
jecxz
in
cmp
xchg
sbb
mov
xor
mov
inc
mov
fidivrl
and
and
pop
mov
or
nop
add
dec
aad
or
imul
fnstcw
enter
hlt
pop
xchg
add
pop
xor
cmpsb
dec
pop
imul
adc
jle
jnp
cli
mov
adc
sti
test
push
test
xchg
pop
xorl
fiadds
out
lahf
mov
mov
xchg
xchg
adc
pop
mov
mov
or
mov
outsb
inc
cltd
inc
mov
cli
adc
stos
enter
out
fdivrs
push
lea
sbb
outsl
lcall
or
out
in
shrl
pop
sub
dec
fwait
or
out
sahf
mov
push
cmp
dec
sub
les
mov
in
mov
adc
jnp
mov
jmp
inc
push
imul
imul
adc
mov
add
popf
jnp
inc
sar
add
and
jb
jl
sti
mov
mov
xchg
or
loopne
fnstenv
pop
mov
dec
xchg
lret
adc
cmp
fsubs
mov
sbb
bound
rcrl
mov
push
and
mov
push
repz
movsl
gs
cltd
in
dec
lahf
aaa
rcrl
stos
adc
jecxz
jno
mov
js
mov
cwtl
mov
sbbl
lods
insb
pop
mov
scas
mov
xchg
add
negl
or
je
notl
mov
sbb
imul
in
subb
adcb
inc
adc
insb
mov
popa
mov
inc
jg
mov
outsl
push
into
lods
add
lods
lret
daa
xchg
out
pop
loop
or
adc
cli
mov
jnp
mov
push
push
fwait
int3
test
xchg
in
add
mov
push
insb
xlat
pop
xchg
repz
shl
dec
sbb
mov
sub
push
shlb
jno
outsb
stos
pop
cmpsl
aas
mov
xor
in
divl
enter
outsl
popa
ds
dec
cmp
inc
cmpsb
lcall
xchg
out
xorl
std
cmp
lahf
jbe
mov
loope
sub
sbb
ficomps
repnz
mov
cmp
mov
xchg
aam
mov
xchg
mov
xor
push
in
incb
or
test
sbb
insb
lods
adc
cmpsb
sbb
cmpsb
pop
popa
mul
mov
popf
mov
fisttpll
fs
sub
cmp
push
push
sbb
jb
negb
imul
inc
push
pop
bound
mov
cld
clc
negl
arpl
fucomi
pushf
push
mov
mov
xor
xor
push
fimuls
test
xor
test
adc
xor
or
xchg
adc
adc
pop
jl
add
jecxz
mov
xchg
pop
pop
cmpl
aas
sub
pusha
lds
cmp
mulb
ss
aam
dec
push
call
mov
leave
add
pop
sahf
test
movsl
xlat
fsubrl
sub
fisttpl
sub
loopne
inc
xchg
dec
mull
cmc
icebp
mov
call
lret
adc
xchg
push
push
jo
pop
push
or
xor
rorl
add
mov
mov
push
call
and
in
and
stc
jnp
cmp
out
mov
cmp
jns
sbb
inc
mov
enter
fsubrs
xor
ljmp
std
mov
mov
xorl
dec
mov
jge
add
stos
jbe
aas
sub
insl
pop
xor
cmpsb
mov
hlt
shll
jnp
dec
lock
lret
fistps
or
dec
jnp
bound
insl
fwait
pushf
and
and
stos
or
test
dec
inc
cmp
in
add
inc
push
cmp
ss
ds
clc
mov
lock
jmp
inc
loop
lds
orb
mov
mov
shrb
lahf
sub
xchg
fxch
sbb
pop
sti
out
cmp
loope,pt
sub
ja
pop
pop
notb
mov
arpl
jmp
lea
xchg
jl
cmp
sahf
push
fisubrl
dec
ljmp
stos
mov
inc
in
roll
sub
pop
fcomp
jg
int3
into
or
and
fnstsw
dec
and
stos
push
les
cmpsl
mov
xchg
jg
mov
adcb
mov
push
adc
je
js
call
mov
fldt
fnstsw
movsb
imul
sub
ja
movsb
arpl
pop
jb,pt
inc
shlb
mov
mov
add
fcoms
pop
push
pop
bound
sahf
inc
cmp
movsb
orl
repz
inc
ja
push
scas
add
dec
loopne
jnp
jo
inc
imul
mov
rorl
mov
cmpl
adc
mov
stos
xchg
repnz
out
mov
mov
insb
and
mov
roll
lods
xor
dec
push
imul
mov
movl
xlat
aas
lods
cmp
dec
jg
clc
cmp
add
jae
insb
cltd
xor
rcrl
mov
sbb
call
adc
mov
sbb
jb
xchg
cld
dec
imul
movsl
cmp
mov
bound
repz
mov
cmp
pop
shl
cmpsl
xor
adc
pushl
and
sti
push
pop
imul
dec
mov
sbb
cmpsl
pop
adc
aas
mov
cltd
lcall
lds
pop
cmpsl
xchg
cmpsb
loop
cmp
das
mov
daa
fwait
mov
in
jmp
push
lahf
negb
xorl
lock
out
dec
xchg
and
mov
or
std
insl
sbb
mov
pop
jmp
cmpsb
and
mov
repnz
jbe
jno
test
mov
xor
loop
sbb
fistpl
pop
mov
cmp
jbe
test
fsubrs
sub
adc
mov
sbb
jb
rcrl
test
rcrl
xchg
out
cltd
mov
ja
inc
ret
sti
in
mov
add
inc
or
ds
add
pop
movsb
mov
mov
in
mov
jle
or
xor
lds
mov
push
pop
fidivl
pop
sar
xor
fs
scas
jmp
insb
fucomip
dec
mov
enter
loop
pop
add
popf
scas
cli
adc
inc
pop
cmp
mov
jb
cmp
jecxz
ljmp
fsub
movsl
xchg
xor
xor
imul
inc
popf
adc
push
orl
jge
ss
and
pop
or
inc
inc
and
aam
pop
pop
decb
and
and
stos
cwtl
fprem
or
inc
dec
ret
mov
add
lods
mov
jge
pop
dec
rcll
imul
bound
add
jnp
test
mov
mov
jle
subl
gs
movsl
pop
xor
pop
pop
fisubs
aas
movsl
jo
or
cs
add
push
shll
es
filds
mov
and
insb
inc
push
js
je
xor
orb
decl
roll
les
lret
jge
or
and
repz
addb
sbb
mov
dec
mov
imul
mov
mov
fsubrl
add
sahf
imul
stc
cs
fisubrl
fs
loope
lcall
cmc
mov
mov
xchg
daa
and
push
fsubrs
ret
pop
js
gs
cmc
pop
inc
mov
scas
rcr
dec
mov
repnz
inc
sbb
fstpl
dec
popa
pop
out
push
lcall
ds
aas
add
jp
in
sbb
mov
ja
popf
pmullw
out
mov
inc
std
mov
mov
jne
sahf
cltd
cmc
and
je
ja
into
mov
pop
ret
mov
cwtl
jecxz
out
cmp
icebp
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
add
add
add
test
add
cwtl
pop
add
mov
add
add
add
adc
add
inc
add
push
add
dec
add
dec
add
inc
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
jmp
add
add
add
add
add
add
add
add
add
add
loopne
add
pusha
jmp
add
add
add
add
add
add
add
add
add
add
or
add
js
sbb
push
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
in
sbb
xor
add
in
add
add
add
add
add
add
add
mov
add
add
sbb
xor
add
in
add
add
add
add
add
add
add
mov
add
xor
sbb
xor
add
in
add
add
add
add
add
add
add
fadds
add
push
add
add
add
add
add
add
push
add
add
add
add
nop
add
xorb
add
add
add
add
xorb
or
add
xor
add
pop
add
xorb
add
add
add
add
add
add
add
add
clc
add
adcb
add
and
adcb
add
dec
add
adcb
add
add
add
add
add
add
add
add
add
add
addb
add
sbb
dec
add
add
add
add
add
add
add
add
add
test
add
repz
inc
add
add
add
add
add
add
add
add
add
rolb
add
test
sbb
pop
add
add
add
add
add
add
add
add
add
clc
add
add
negb
add
add
in
add
add
add
add
add
add
add
and
add
pop
negl
add
add
in
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
jo
add
or
sbb
pop
add
add
add
add
add
add
add
add
add
cwtl
add
add
sbb
pop
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
sbb
pop
add
add
add
add
add
add
add
add
add
adc
add
sbb
in
add
in
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
pusha
add
add
sbb
insb
add
add
add
add
add
add
add
add
add
mov
add
sbb
inc
add
add
add
add
add
add
add
add
add
rolb
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
fadds
add
add
in
add
add
add
add
add
add
add
add
sbb
sub
add
in
add
add
add
add
add
add
add
sub
sbb
test
add
in
add
add
add
add
add
jg
add
pop
add
add
addb
add
add
add
add
add
add
add
add
jo
add
insb
xor
add
add
in
add
add
add
add
add
add
add
cwtl
add
sbb
test
add
in
add
add
add
add
or
xchg
add
add
push
add
xor
add
pop
push
add
addb
cmpb
add
add
add
push
add
clc
push
add
and
add
dec
pop
add
jo
add
add
add
add
add
add
add
add
add
and
add
cld
xor
add
add
add
add
add
add
add
add
dec
push
add
xchg
xor
add
in
add
add
add
add
add
add
add
jo
add
adc
sbb
cli
add
add
add
add
add
add
add
add
add
cwtl
push
add
or
sbb
ljmp
add
add
add
add
add
add
rolb
add
cmp
add
add
add
add
add
add
add
add
call
inc
sbb
mov
add
in
add
add
add
add
add
add
add
adc
add
pop
inc
sbb
int3
add
add
add
add
add
add
add
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
pusha
pop
add
faddl
add
add
add
add
add
add
add
add
add
add
mov
add
rolb
add
add
add
add
add
add
or
add
add
add
add
sub
add
push
or
adcb
add
js
add
mov
sldt
enter
sbb
add
lock
sbbb
add
sbb
add
inc
or
sbbb
add
add
nop
or
addb
add
add
add
add
add
add
add
add
add
sbb
add
dec
inc
sbb
push
add
add
add
add
add
add
add
add
add
inc
or
add
add
in
add
add
add
add
add
add
add
push
inc
sbb
js
add
in
add
add
add
add
add
add
add
nop
or
add
sbb
les
add
in
add
add
add
add
add
add
add
mov
dec
sbb
sub
add
in
add
add
add
add
add
add
add
loopne
add
xor
add
add
in
add
add
add
add
add
add
add
or
add
js
sbb
inc
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
add
add
add
add
pop
or
add
sbb
fadds
add
in
add
add
add
add
add
add
add
orb
add
dec
sbb
adc
add
in
add
add
add
add
add
add
add
test
add
or
add
add
in
add
add
add
add
add
or
add
or
orb
add
or
add
xor
add
add
add
add
add
add
add
add
add
clc
or
add
sbb
adc
add
in
add
add
add
add
add
add
add
and
add
inc
dec
sbb
adc
add
in
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
orb
sbbb
add
ret
addb
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
add
add
add
add
add
mov
add
cli
nop
sbb
adc
add
in
add
add
add
add
add
add
add
fimull
add
mov
add
add
in
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
inc
or
add
xchg
sbb
enter
in
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
sahf
ds
sahf
ds
out
sahf
ds
out
popf
aas
push
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
push
popf
aas
out
popf
aas
push
popf
aas
out
popf
aas
push
popf
aas
push
sahf
ds
out
popf
ds
out
sahf
aas
out
sahf
ds
popf
ds
popf
aas
push
popf
aas
out
popf
aas
out
sahf
aas
out
sahf
aas
out
sahf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
out
popf
aas
push
popf
ds
sahf
ds
sahf
ds
popf
ds
lahf
cmp
push
sahf
aas
push
popf
aas
out
pushf
inc
out
pushf
inc
out
pushf
inc
in
pushf
inc
in
popf
inc
in
popf
inc
out
popf
inc
out
pushf
inc
out
pushf
inc
push
pushf
inc
push
popf
inc
push
popf
inc
out
pushf
inc
out
popf
aas
out
popf
ds
out
sahf
aas
out
sahf
aas
out
sahf
aas
push
popf
ds
popf
aas
push
sahf
aas
out
pushf
inc
in
popf
inc
ljmp
jmp
inc
jmp
inc
jmp
inc
ljmp
out
popf
inc
push
popf
inc
in
popf
inc
ljmp
jmp
inc
jmp
inc
ljmp
jmp
pushf
inc
push
popf
ds
lahf
cmp
repnz
cmp
push
mov
aaa
push
lahf
inc
out
popf
inc
ljmp
jmp
dec
jmp
xchg
inc
call
lcall
ljmp
out
pushf
inc
push
pushf
dec
out
pushf
dec
jmp
dec
jmp
popf
aas
ljmp
out
sahf
inc
push
cltd
inc
push
pushf
inc
clc
mov
inc
jmp
cltd
inc
jmp
mov
dec
call
movsb
push
jmp
mov
pop
jmp
sahf
push
push
mov
dec
ljmp
fcompl
inc
jmp
fwait
inc
fistps
dec
call
lcall
cld
mov
cmp
lock
ds
lahf
ds
ljmp
ficoml
insb
jmp
scas
outsb
fildll
imul
cmpsl
imul
cmpsl
imul
cmpsb
imul
fisubl
outsl
jo
fisubl
insl
fisubrs
push
fisubrl
outsb
jmp
lods
jno
out
imul
frstor
imul
mov
fildll
pop
fistpl
push
call
xchg
push
call
xchg
push
jmp
cltd
push
jmp
movsl
pop
jmp
scas
insl
fldt
imul
shlb
jbe
fidivl
dec
push
pushf
cmp
repz
ds
popf
notrack
xchg
inc
jmp
fwait
dec
fstps
outsl
dec
fdivr
fdivr
loop
jmp
out
out
jmp
in
out
icebp
push
jmp
jmp
in
icebp
out
sti
call
in
ljmp
aad
fsubrl
pop
dec
mov
lret
inc
mov
nop
push
jmp
mov
cltd
push
iret
jmp
loop
jmp
jmp
fdivrp
jmp
je
in
fwait
inc
out
pushf
inc
out
popf
aas
in
xchg
inc
jmp
cltd
dec
fstpl
push
lock
push
ljmp
cmc
call
lret
out
push
out
push
call
sar
cmc
call
loop
sti
hlt
in
stc
icebp
std
cmc
sti
cli
std
stc
cld
cld
sti
stc
cmc
clc
std
cld
cld
cld
std
sti
stc
cli
out
push
fadd
fldcw
popa
dec
push
dec
xchg
push
dec
push
call
xchg
push
fistpl
std
lock
icebp
std
cld
out
std
std
repz
std
cmc
std
clc
out
fisubl
inc
in
pushf
inc
out
popf
aas
push
sahf
dec
jmp
inc
ljmp
cli
mov
jns
fbld
insb
call
sahf
outsl
fstps
push
fcompl
imul
fsubl
xchg
jmp
fcmovnb
sti
out
stc
icebp
cli
sti
cld
push
cli
push
cli
push
sti
push
cld
push
sti
cli
std
std
stc
icebp
push
fld
dec
nop
push
call
xchg
push
call
xchg
push
call
xchg
push
call
cwtl
fs
mov
cld
cld
clc
push
std
push
push
push
cld
std
std
bnd
movsb
jno
call
pushf
inc
out
popf
aas
push
popf
inc
jmp
xchg
inc
push
mov
pop
push
movsb
jmpw
lcall
aam
pop
call
xchg
pop
call
xchg
pop
fcoms
push
ficoms
push
jmp
cltd
pop
ficompl
ja
fisubrl
movsb
sti
out
clc
out
cld
sti
stc
cli
std
clc
cld
push
cld
out
sti
std
push
cld
cld
cli
lock
stc
faddp
jmp
mov
call
cltd
pop
call
xchg
push
call
cltd
push
call
cwtl
push
fistpl
addr16
call
in
loopne
stc
sti
cli
push
sti
push
cld
push
std
push
cld
cld
std
lock
fsubs
push
pushf
inc
push
popf
aas
jmp
xchg
inc
jmp
push
jmp
cltd
push
fistl
push
call
push
dec
mov
int
push
dec
dec
dec
dec
dec
nop
dec
dec
xchg
dec
call
xchg
dec
call
xchg
dec
ficoml
push
call
cltd
pop
fisubl
push
fdivrs
std
idiv
std
cld
sti
std
push
stc
cld
push
cli
stc
stc
in
stc
fdivrl
fistpl
push
call
cwtl
push
call
cltd
push
fistps
jmp
mov
sti
idiv
stc
push
cli
push
std
push
cli
stc
std
std
in
jmp
test
inc
push
popf
inc
push
popf
aas
out
cwtl
dec
in
xchg
dec
ljmp
call
mov
into
mov
int
push
dec
mov
lret
lea
int3
lea
int3
lea
lret
mov
nop
dec
dec
xchg
push
dec
xchg
push
call
xchg
dec
call
xchg
dec
call
xchg
dec
dec
xchg
push
dec
xchg
pusha
call
cmpsb
jge
in
lret
mov
std
icebp
loop
idiv
cld
push
std
cli
std
sti
icebp
cld
loop
in
mov
fcompl
pop
call
fwait
push
call
lcall
fcompl
xchg
clc
out
cld
idiv
sti
std
push
sti
stc
cld
in
jmp
stos
insb
in
lcall
lock
ds
xchg
dec
push
xchg
dec
jmp
xchg
dec
ficoml
push
inc
mov
mov
leave
mov
int
push
call
nop
push
call
nop
push
call
lea
iret
mov
int3
nop
push
dec
mov
lret
dec
xchg
dec
dec
xchg
dec
dec
cwtl
push
dec
cltd
pop
inc
xchg
arpl
shlb
cmc
out
stc
cli
sti
std
cli
cld
std
cld
hlt
std
out
out
mov
call
pushf
pop
call
pushf
pop
call
sahf
push
call
fwait
push
fstps
push
out
cld
clc
stc
sti
cli
sti
sti
sti
out
aas
out
popf
ds
sahf
aas
in
lcall
fstl
dec
dec
xchg
dec
inc
xchg
push
inc
xchg
push
dec
xchg
push
call
xchg
push
ficomps
push
fistl
call
xchg
push
call
xchg
push
dec
xchg
push
dec
xchg
push
dec
xchg
dec
call
cwtl
push
call
lcall
lret
call
cmpsl
test
cli
fcmovnb
cld
lock
std
cld
sti
cld
cld
cld
cmc
cld
out
in
mov
call
sahf
pop
call
lahf
push
call
mov
push
fstps
push
in
cld
idiv
cli
sti
cld
sti
std
sti
out
fldt
inc
out
popf
ds
out
popf
aas
jmp
sahf
inc
fistps
dec
call
cltd
dec
dec
xchg
dec
dec
cwtl
push
call
sahf
pop
call
mov
arpl
in
push
jmp
mov
jmp
sahf
pusha
fstpl
pop
call
xchg
push
dec
xchg
dec
call
xchg
dec
call
cltd
push
call
xchg
push
call
xchg
pop
call
cltd
imul
mov
cli
std
cld
sti
std
idiv
sti
jmp
call
mov
pop
fisubl
push
frstor
pop
fbstp
int3
cld
hlt
sti
sti
std
std
sti
sti
out
fisubrl
inc
in
popf
aas
out
popf
aas
fcompl
inc
jmp
mov
push
call
lcall
fsubs
out
mov
cltd
push
ret
cltd
push
ret
cltd
push
mov
mov
ficompl
push
call
cltd
push
call
cltd
push
call
cwtl
dec
call
xchg
dec
fcoms
pusha
call
movsb
jnp
jmp
lret
clc
cld
std
idiv
sti
in
aad
out
xchg
call
mov
push
fbld
push
jmp
cmpsb
push
jmp
movsb
pop
jmp
mov
push
loopne
sti
icebp
std
cld
cli
cld
std
cld
std
in
fldt
inc
out
popf
aas
out
sahf
aas
ljmp
jmp
pushf
push
fcompl
js
ljmp
push
std
ljmp
in
out
in
clc
fcmove
in
shrl
ficompl
pop
fistpl
dec
call
xchg
dec
fistl
pop
dec
cwtl
imul
cmc
std
std
clc
sti
out
xlat
call
movsl
push
jmp
test
jmp
movsl
pop
jmp
mov
push
ffree
sti
out
cld
clc
std
cld
std
cld
sti
in
fldt
inc
out
popf
inc
push
popf
aas
in
cltd
inc
out
mov
push
jmp
lods
ja
not
scas
sti
jmp
out
cld
idiv
cld
cli
std
cli
std
stc
idiv
idiv
stc
out
std
out
lock
cmpsl
jmp
cmpsl
je
xlat
fwait
pop
ficompl
push
fstps
fistpl
arpl
repnz
stos
cld
lock
sti
std
idiv
std
lock
lock
fisubrl
push
jmp
test
pop
jmp
cmpsb
popa
fildll
mov
cld
idiv
std
sti
std
cld
sti
in
fisubrl
inc
out
popf
inc
out
popf
aas
in
xchg
cmp
in
fwait
dec
fstpl
xchg
push
aam
out
std
idiv
std
std
cli
cld
sti
sti
std
std
cli
cld
sti
std
stc
clc
lock
cld
ljmp
fisubl
pop
fldenv
dec
jmp
mov
pop
call
pushf
fs
out
lds
sti
std
clc
lock
test
pop
fisubrl
pop
jmp
lods
pop
jmp
cmpsl
arpl
fsubrl
stc
in
std
idiv
sti
std
std
cld
out
fsubrs
inc
in
popf
inc
out
popf
aas
push
lcall
loopne
dec
fsubrl
jmp
std
clc
std
std
cld
sti
sti
std
cli
std
cli
std
cld
std
sti
push
cld
call
pop
fcompl
dec
jmp
mov
pop
call
cltd
pop
ljmp
stc
stc
cli
cld
in
jecxz
test
jmpw
scas
pop
fidivs
pop
jmp
scas
popa
jmp
stos
fs
test
in
shll
std
idiv
std
cld
std
std
cli
in
call
test
jmp
fwait
inc
in
popf
inc
out
popf
aas
stc
lahf
inc
push
fwait
inc
jmp
cwtl
inc
fldenv
icebp
cli
stc
cld
clc
std
cld
cld
cli
clc
stc
push
stc
push
stc
clc
sti
std
cld
cld
cli
cld
repz
out
push
shlb
fcompl
push
jmp
mov
pop
fcompl
pop
jmp
mov
lock
cli
sti
std
cli
std
in
ljmp
movsb
push
jmp
mov
fnstenv
jmp
stos
fs
cmpsl
jno
jmp
scas
stc
call
cld
std
std
sti
cli
in
call
test
jmp
pushf
inc
jmp
inc
out
sahf
aas
push
fwait
cmp
jmp
xchg
inc
call
mov
repz
std
std
std
cld
std
std
cld
stc
cld
push
cli
push
stc
push
sti
stc
std
cli
hlt
cli
jmp
fisubl
pop
fbld
jmp
cmpsb
pop
fcomps
popa
fnstenv
out
cld
cld
stc
std
repnz
push
les
jmp
mov
fidivs
gs
lods
gs
fsubs
lods
clc
jmp
cld
cld
sti
sti
in
fldenv
inc
in
popf
inc
out
sahf
aas
push
lahf
inc
out
sahf
inc
jmp
cltd
inc
call
mov
repz
cld
cli
cld
cli
cli
clc
cld
push
cli
push
cli
stc
std
std
cld
push
out
call
lcall
mov
pop
jmp
stos
pop
jmp
test
fsubl
popa
dec
test
jmp
cli
sti
push
imul
push
test
ljmp
jmp
mov
jmp
lods
gs
fisubl
stos
push
call
cld
cld
std
cld
cli
cld
out
fisubl
inc
in
popf
inc
out
sahf
aas
out
mov
inc
jmp
pushf
dec
call
cmpsl
jo
repnz
cld
stc
cli
std
std
std
cld
cli
push
jmp
push
fdivr
hlt
lret
stos
jmp
cmpsl
jnp
frstor
pop
fsubrl
push
jmp
stos
pop
jmp
cmpsb
pop
fistpl
jae
jmp
push
cmc
push
sti
imul
push
int
jmp
cmpsb
jae
in
lods
imul
call
mov
in
scas
arpl
fsubl
cmpsb
mul
std
std
sti
cli
cld
cli
cld
sti
cld
in
fsubl
inc
in
popf
inc
out
sahf
aas
jmp
inc
jmp
popf
inc
fisubrl
cli
out
clc
call
hlt
repnz
stc
ljmp
in
lret
lods
jmp
mov
ja
ficomps
pop
jmp
lods
pop
push
jmp
stos
pop
jmp
popa
fstps
in
clc
std
repnz
clc
clc
clc
in
clc
shll
in
lods
push
out
mov
in
mov
push
mov
pusha
fisubs
mov
cld
std
cli
push
cld
clc
std
std
sti
sti
in
fsubrl
inc
in
popf
aas
out
sahf
aas
clc
mov
inc
push
pushf
inc
jmp
test
sar
icebp
int
out
ret
lock
out
lcall
mov
jmp
mov
jmp
lods
xchg
loop
jns
fistps
jmp
movsl
pop
jmp
lods
pop
jmp
scas
push
jmp
scas
push
jmp
stos
push
jmp
cmpsl
pop
jmp
movsl
arpl
fcomps
sahf
in
cld
sti
repnz
stc
stc
in
clc
xlat
mov
in
js
jmp
imul
out
mov
fs
mov
fbld
popf
cmc
loopne
sti
stc
push
std
push
std
std
stc
jmp
call
popf
ds
out
popf
ds
clc
pushf
inc
push
xchg
ds
cwtl
aas
jmp
xlat
scas
call
movsl
jg
rclb
fcompl
fstpl
jmp
sahf
gs
jmp
cmpsl
fs
jmp
call
mov
jmp
scas
push
jmp
lods
push
jmp
stos
pop
jmp
movsb
popa
fcomps
jne
stc
fdivrs
cli
idiv
cld
stc
out
push
fdivrs
jmp
mov
arpl
cmc
shlb
mov
fwait
push
loopne
cld
std
stc
push
std
push
std
std
clc
jmp
jmp
popf
inc
in
sahf
aas
out
sahf
aas
push
cwtl
inc
stc
lahf
inc
push
fwait
inc
push
mov
call
xchg
arpl
out
stos
gs
stos
pop
push
lods
pop
push
lods
pop
push
lods
pop
out
scas
pusha
in
scas
in
scas
pusha
in
scas
pop
jmp
lods
pop
jmp
mov
in
mov
call
stos
pop
jmp
test
fcomps
jb
not
mov
push
jecxz
std
cld
stc
sti
push
repz
clc
sar
mov
jmp
mov
addr16
ret
cmc
mov
fs
in
pushf
repnz
std
stc
sti
clc
std
cld
std
stc
ljmp
lahf
inc
in
sahf
inc
out
popf
aas
jmp
ds
pushf
inc
push
pushf
ds
cmpsl
push
push
mov
rcrb
pop
push
lods
push
push
mov
push
mov
push
mov
out
mov
jmp
pop
jmp
pop
ljmp
jmp
mov
ljmp
jmp
lahf
data16
fsubrl
stos
cmc
jecxz
clc
std
cld
stc
sti
clc
idiv
stc
fmulp
jmp
mov
popa
in
mov
push
push
mov
addr16
in
rcrb
cld
idiv
cld
cli
clc
std
cli
idiv
idiv
ljmp
lahf
dec
jmp
inc
out
popf
aas
jmp
fwait
aas
out
pushf
cmp
push
iret
xchg
call
mov
pop
push
mov
clc
mov
pop
push
mov
push
mov
pusha
in
mov
pop
jmp
mov
jmp
mov
jmp
scas
pop
jmp
cmpsb
pop
in
stos
outsb
push
mov
mov
cli
loopne
std
lock
sti
cld
cld
push
repnz
cld
idiv
div
push
fxch
jmp
mov
arpl
out
mov
push
cmc
les
clc
mov
outsl
push
mov
fdivr
std
repnz
sti
repz
cld
hlt
cmc
jmp
ficoms
inc
out
popf
aas
push
mov
aas
out
popf
ds
jmp
pop
push
aam
call
movsl
insl
jmp
stos
out
mov
out
mov
out
mov
in
mov
in
mov
in
mov
out
mov
in
mov
jmp
mov
jmp
mov
jmp
lods
pop
jmp
cmpsl
popa
in
lods
jo
idivb
mov
neg
jmp
push
cld
cli
idiv
push
cli
in
cli
faddp
in
mov
push
test
push
les
test
cli
mov
jb
repz
leave
mul
clc
in
clc
in
std
mul
std
lock
fisubrs
dec
jmp
inc
out
popf
aas
push
lahf
inc
push
pushf
cmp
in
stos
push
fdivl
call
lahf
imul
loopne
insb
jmp
scas
jo
ljmp
jmp
scas
fs
mov
out
mov
pop
jmp
mov
in
mov
jmp
sahf
fs
lods
jnp
not
scas
hlt
std
cmc
loope
sti
hlt
loop
cli
repz
cld
repz
std
lock
sti
fidivl
push
mov
sti
shrb
outsl
clc
outsl
cld
shrl
mov
push
mov
clc
lds
clc
shrl
out
lret
out
lds
jmp
fwait
dec
jmp
inc
out
popf
aas
push
fwait
cmp
repnz
ljmp
jmp
shlb
shll
cmp
lods
cmp
stos
jge
fldenv
jmp
mov
fs
in
mov
ljmp
jmp
gs
in
mov
jmp
cmpsl
popa
fbld
jno
clc
leave
lcall
leave
mov
jmp
xchg
push
ret
in
mov
in
lods
insb
push
mov
cld
mov
outsl
cli
leave
outsl
inc
insl
push
mov
in
stos
insb
in
mov
ljmp
jmp
mov
fsubrs
jp
out
gs
scas
pop
in
popf
inc
out
popf
aas
stc
popf
cmp
in
fwait
inc
jmp
test
in
mul
out
fld
ljmp
jmp
sarb
jmp
leave
movsl
jmp
rclb
loope
push
fildll
pop
call
mov
gs
mov
ljmp
jmp
push
ljmp
fsubrl
push
out
push
in
scas
push
mov
imul
sti
leave
imul
leave
imul
mov
insb
stc
mov
outsl
push
mov
outsb
jmp
mov
jno
std
mov
inc
out
popf
aas
mov
aas
jmp
cltd
dec
call
movsb
outsb
in
idiv
std
sti
cmc
cld
cld
idiv
clc
push
out
call
cli
in
out
into
sahf
jmp
mov
fbstp
pop
push
shlb
shlb
mov
jmp
popf
inc
jmp
mov
push
mov
je
out
ret
jo
icebp
ret
stc
lds
inc
jo
inc
outsb
dec
imul
int3
insl
cli
lret
imul
lret
std
int3
push
dec
insb
inc
jo
dec
jae
cli
lds
cli
lds
cld
enter
jb
clc
je
cld
lds
sti
mov
inc
out
sahf
aas
std
mov
aas
jmp
lcall
jmp
idiv
stc
std
push
cld
std
sti
std
cld
sti
cmc
std
lock
push
std
in
clc
fdivr
icebp
iret
cltd
jmp
lods
pusha
out
mov
push
mov
fs
sti
mov
inc
push
scas
push
inc
imul
stc
shlb
repnz
outsb
push
into
outsb
shll
call
outsl
dec
imul
int
cli
int
stc
int
cli
into
imul
into
imul
int
std
int3
outsl
std
iret
jae
test
insb
dec
insl
dec
insb
dec
imul
into
jno
sti
shll
mov
aas
cli
pushf
xor
jmp
xchg
push
call
movsl
jne
jmp
push
push
std
push
cld
stc
std
std
cli
cld
stc
clc
std
idiv
stc
clc
sti
cli
std
push
sti
fdivl
in
lods
stc
mov
gs
std
mov
inc
push
mov
dec
imul
shrb
iret
insb
push
iret
imul
shrb
shrl
call
imul
std
int3
imul
lret
imul
lret
imul
lret
std
lret
cld
leave
imul
leave
insb
cli
leave
insl
push
push
sti
int3
outsl
dec
outsb
std
enter
arpl
dec
fs
inc
arpl
in
mov
ds
cld
mov
aas
fists
jmp
push
stc
std
cld
push
cli
std
push
sti
push
cld
push
std
std
push
std
push
push
cld
push
jmp
ret
cmpsl
insl
jmp
cmpsb
pop
clc
mov
addr16
inc
popa
call
mov
inc
data16
sti
ret
push
ret
repz
imul
enter
enter
enter
insb
clc
shrl
mov
imul
mov
push
in
mov
out
mov
push
out
mov
push
mov
push
std
mov
aas
out
sahf
ds
std
mov
inc
jmp
xchg
dec
jmp
test
out
int
push
in
std
std
hlt
stc
cld
cli
sti
std
std
cld
cli
std
std
push
sti
sti
push
cld
std
stc
std
idiv
jmp
ret
jmp
stos
insl
jmp
stos
pop
push
shrl
data16
sti
ret
in
inc
ljmp
in
stos
pop
jmp
mov
jmp
mov
jmp
scas
outsl
jmp
scas
outsl
call
scas
jl
out
jl
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ljmp
call
mov
test
test
ljmp
push
sahf
inc
out
popf
aas
clc
lcall
lock
push
jmp
pushf
pop
jmp
xchg
jmp
lods
push
out
push
jmp
clc
std
std
clc
sti
cld
idiv
sti
std
stc
std
cli
stc
in
clc
fldcw
jmp
mov
push
lds
stc
enter
lds
jmp
cmpsb
push
fists
outsl
push
mov
push
mov
lcall
mov
movsl
in
shrl
repz
mov
hlt
lret
mov
hlt
into
mov
push
aam
clc
fcmovne
push
fadd
push
fmul
push
clc
loop
std
out
jmp
test
jmp
inc
out
pushf
inc
out
popf
aas
clc
lcall
negl
dec
fistpl
jb
loope
xchg
push
mov
in
sar
neg
cld
out
jmp
std
ljmp
jecxz
out
mov
pop
push
mov
cli
lds
lret
dec
gs
clc
mov
gs
fcoms
xchg
jmp
call
in
in
fdivrp
out
loop
cld
out
out
std
out
in
push
in
push
out
push
in
push
icebp
push
icebp
push
in
push
jmp
div
std
clc
idiv
cld
hlt
std
loope
ds
in
pushf
inc
out
popf
aas
std
mov
ds
fwait
inc
push
mov
jmp
imul
stos
outsb
mov
ljmp
push
lods
push
aam
jmp
pushf
jmp
mov
jmp
cmpsb
push
mov
cld
ret
gs
dec
arpl
dec
dec
fs
inc
insb
push
mov
dec
xchg
arpl
cli
int3
lods
cli
call
sti
repnz
std
push
push
std
idiv
std
std
cli
std
clc
hlt
std
idiv
std
cld
cli
sti
sti
std
sti
cld
cld
std
std
clc
cld
idiv
cli
cld
cld
push
cli
cld
std
sti
call
jmp
popf
inc
in
popf
aas
out
popf
aas
stc
mov
ds
fwait
cmp
mov
insb
push
mov
ljmp
jmp
lods
push
loop
insl
jmp
mov
jmp
mov
jmp
mov
call
mov
cli
lds
call
insb
sti
int3
fs
sti
lret
dec
push
stc
shrb
stos
push
aam
ja
std
loope
idiv
std
cli
std
cld
sti
cld
cli
clc
sti
stc
std
std
std
sti
idiv
std
cli
std
std
std
cld
std
cld
cld
cld
std
cld
sti
cld
stc
cli
std
cld
in
fldenv
out
popf
inc
out
popf
aas
out
popf
ds
lahf
aas
push
lcall
mov
push
cli
ret
cmc
mov
arpl
in
mov
jmp
mov
push
mov
gs
clc
les
cli
int
cld
shrl
cli
iret
data16
cld
int3
addr16
cld
lret
in
mov
call
pushf
jmp
mov
push
std
clc
cli
sti
std
cli
std
stc
std
clc
sti
cli
std
std
cld
clc
cli
std
std
std
cld
std
std
std
cli
cli
clc
idiv
std
cli
cld
in
fsubs
dec
out
popf
inc
out
popf
aas
jmp
lcall
jmp
movsl
dec
mov
imul
dec
outsl
std
lret
cld
lret
sti
leave
imul
lret
clc
lret
imul
std
lret
std
lret
imul
std
iret
push
dec
imul
in
mov
fldenv
mov
sti
jmp
cli
idiv
sti
std
clc
std
hlt
std
clc
sti
sti
std
cli
push
stc
cld
cld
sti
cld
std
cld
cli
std
cli
cli
cld
cli
sti
std
cli
jmp
shlb
inc
ljmp
jmp
lcall
out
aas
in
movsb
dec
sti
mov
addr16
std
leave
push
dec
insl
dec
push
dec
push
dec
push
cld
shrb
stc
shrb
cld
iret
addr16
dec
addr16
dec
outsb
dec
outsb
dec
imul
enter
shlb
mov
push
mov
push
mov
test
jmp
ljmp
jmp
jmp
jmp
jmp
out
out
out
in
in
lock
icebp
ljmp
mov
jmp
sahf
dec
ljmp
call
lahf
inc
call
mov
pop
push
mov
pop
cld
lds
dec
addr16
dec
push
shrl
shrb
shrb
int
dec
je
std
lret
cli
les
idivb
pop
jmp
movsb
dec
jmp
mov
arpl
jecxz
outsb
fldenv
insb
dec
cmpsl
outsl
dec
lods
jb
into
stos
insb
call
stos
push
call
test
fldenv
push
fldenv
insl
call
cmpsl
outsb
call
cmpsb
outsl
call
movsl
insl
call
movsl
outsb
call
movsl
outsl
call
movsl
outsb
imul
xchg
aas
out
fwait
ds
popf
aas
push
sahf
aas
in
sahf
inc
push
mov
inc
in
sahf
inc
push
lods
push
out
scas
push
jmp
push
push
mov
std
mov
pop
inc
pusha
inc
arpl
cld
lds
std
les
inc
addr16
mov
popa
jmp
pop
jmp
pop
jmp
lahf
inc
jmp
xchg
inc
call
popf
dec
jmp
cwtl
dec
call
xchg
dec
fcomps
fstpl
inc
call
pushf
inc
jmp
inc
in
pushf
inc
jmp
inc
jmp
fwait
inc
call
fwait
dec
jmp
popf
dec
jmp
cltd
inc
jmp
xchg
cmp
push
cltd
ss
cld
cmpsb
inc
push
sahf
ds
sahf
ds
popf
cmp
mull
ds
popf
inc
push
movsb
dec
ljmp
call
sahf
inc
out
lahf
inc
out
mov
inc
call
mov
dec
jmp
lcall
call
movsb
dec
out
mov
inc
push
cltd
ds
pushf
inc
push
cltd
inc
out
lcall
out
lahf
inc
push
sahf
inc
push
sahf
inc
stc
lahf
inc
push
sahf
cmp
push
lahf
cmp
push
lahf
cmp
out
lahf
inc
in
sahf
inc
in
lahf
inc
push
mov
inc
push
mov
cmp
out
pushf
cmp
out
sahf
cmp
push
popf
ds
fwait
ss
stc
sahf
cmp
clc
lcall
repnz
inc
jmp
xchg
cmp
call
pushf
inc
push
popf
inc
push
pushf
inc
in
fwait
inc
ljmp
out
xchg
dec
in
xchg
dec
in
lcall
in
sahf
inc
jmp
inc
push
popf
aas
stc
sahf
aas
sahf
inc
std
lcall
cli
pushf
inc
push
pushf
inc
push
cltd
ds
stc
lcall
std
popf
cmp
clc
pushf
aaa
push
popf
aaa
push
popf
cmp
repz
cmp
hlt
popf
aaa
push
popf
aaa
out
popf
cmp
in
lahf
cmp
ljmp
push
lahf
xor
lock
cmp
in
sahf
ds
out
sahf
aas
incl
add
add
add
xor
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
xor
add
add
jns
push
adc
dec
mov
mov
and
ja
ja
ja
add
add
add
arpl
add
outsl
add
add
add
cmp
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
add
add
jns
push
adc
dec
mov
mov
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
xor
add
add
jns
push
and
inc
add
push
add
add
je
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
sub
or
pop
dec
jb
addr16
pop
and
xor
add
add
jns
push
and
inc
bound
and
and
insb
jge
testl
ja
ja
add
add
add
arpl
add
outsl
add
add
add
inc
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
jns
push
and
ja
ja
ja
add
add
add
arpl
add
outsl
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
xchg
sbb
inc
xchg
sbb
imul
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
xchg
sbb
sbb
add
xchg
sbb
add
add
popa
mov
mov
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
sti
sahf
mov
mov
loopne
push
adc
and
cmp
rcr
arpl
loopne,pn
shr
sar
or
dec
stc
fyl2xp1
push
cmp
xor
jns
pop
js
cmpsl
leave
push
xor
fwait
push
and
push
mov
inc
sbb
xor
lahf
add
daa
cltd
lahf
adc
or
cmpsb
ret
cltd
mov
cmp
push
push
cli
orb
sub
pop
xchg
test
movsb
mov
cs
xchg
and
push
xor
fcomip
jno
pop
cld
push
mov
mov
out
pop
mov
or
xchg
clc
aad
cmpsb
ds
loopne
fsubr
je
jge
rep
cmp
push
jb
and
adc
aad
mov
test
cwtl
inc
pop
inc
jge
aad
shrb
mov
jmp
dec
leave
out
inc
mov
and
pop
xor
cli
dec
or
aas
pop
or
inc
jns
cmpsl
xchg
cmp
adc
mov
jl
enter
pop
mov
xchg
js
mov
mov
gs
lods
jnp
jg
ret
xchg
sbb
and
aas
or
push
dec
pop
push
pusha
jmp
gs
shll
test
mov
pushf
ret
lahf
mov
sbbb
adc
out
notl
adc
ret
scas
jns
loop
sbb
fidivs
xchg
insb
dec
iret
stos
jle
pop
mov
pusha
cmpsb
sbb
mov
addr16
lds
push
or
cmc
hlt
xchg
out
movsl
cmp
xchg
pop
cltd
repz
or
sahf
js
adc
cmp
ret
mov
add
mov
loope
gs
mov
cmpsl
sbb
js
loopne
stc
in
stos
movsl
pop
je
xorb
mov
mov
cmp
popa
push
ret
sub
dec
mov
pop
adc
mov
or
push
mov
fildll
cltd
out
cmp
idivb
lahf
xlat
stos
mov
add
dec
xor
outsb
mov
lods
mov
cmp
lret
loope
ret
loope
and
mov
jecxz
jnp
push
out
fldcw
xchg
pop
daa
jg
cmovns
cmpsb
dec
mov
repnz
push
shr
and
dec
mov
dec
rclb
inc
sub
shlb
pop
xor
jle
cmpl
push
sbb
jae
xchg
jl
mov
icebp
dec
xor
imull
fcmovb
dec
jmp
rcr
cltd
adc
add
ss
mov
mov
icebp
repnz
je
pop
nop
add
add
jnp
push
popa
cmp
inc
lods
push
adcl
or
fstpt
pusha
jle
stc
inc
daa
inc
pop
cli
dec
repz
daa
sub
push
je
das
cmp
push
adc
and
das
pop
scas
pop
dec
push
inc
sub
inc
int
sub
sub
rolb
push
fisubrl
in
movsl
sbb
sbb
mov
iret
cld
loop
call
mov
jle
mov
inc
xchg
mov
shlb
fimull
add
sub
sub
pop
addr16
sbb
mov
lret
sbb
mov
and
mov
mov
pop
jg
ja
mov
mov
cmp
or
push
mov
adc
lss
stc
cli
add
fldcw
mov
jge
or
inc
into
aas
xor
js
cmp
addr16
xchg
jmp
stos
addr16
lret
or
fcoms
adcl
sbb
pusha
lcall
imul
test
cs
and
rolb
jecxz
pop
in
lods
orl
xor
add
lcall
sbb
cmp
adc
jecxz
mov
repnz
lcall
je
cld
push
push
sub
mov
push
into
xchg
and
ffree
in
or
movsb
and
mov
lret
sbb
xchg
cmp
push
mov
sub
faddp
push
orl
cmp
je
sub
jns
sbb
ja
mov
fistps
sbb
xchg
inc
cld
push
cmp
push
adc
inc
inc
dec
scas
mov
pop
cmp
repz
sub
or
pushf
cs
cs
xor
cltd
adc
pop
cmp
inc
or
sti
sbb
int
jp
sbb
arpl
test
mov
cmp
popa
mov
adc
push
xchg
gs
outsb
xor
inc
icebp
ret
insb
popa
icebp
icebp
jns
repz
push
pop
int3
jo
mov
aad
fisttps
jno
sbb
test
mov
test
add
dec
pushw
pop
xor
inc
pop
pop
xchg
xor
fcompl
loope
mov
jne
cmp
mov
testb
xor
xor
bound
fldcw
ficomps
and
cmp
mov
xchg
clc
mov
cltd
mov
mov
mov
xor
push
adc
scas
xchg
sub
addr16
push
pop
mov
jp
mov
mov
jge
cmpl
cmp
scas
push
inc
jno
sti
sbb
test
dec
cltd
insl
sbb
stos
sbb
pop
push
mov
pop
mov
inc
push
mov
in
mov
cmpb
fistpl
test
cwtl
add
stos
xor
pop
mov
insb
xchg
cmp
dec
pop
pop
aaa
xor
popa
sbb
outsb
cmp
xlat
out
sub
cmp
sbb
lahf
lods
int3
mov
ret
sbb
in
ds
jecxz
mov
xlat
adc
out
cltd
ret
in
pop
out
outsb
sub
fistpll
bound
xchg
mov
xchg
cmp
ja
push
outsb
jl
nop
sti
lret
pop
and
cmpb
imul
jb
jo
lcall
rcrb
add
inc
mov
out
mov
dec
xchg
jmp
sbb
sbb
movsl
lock
mov
aaa
nop
sub
ljmp
pop
push
data16
jbe
xor
jp
fcomi
insb
cmpsl
pop
push
jl
jae
push
subl
adcl
pop
adc
in
fidivs
inc
pop
adc
and
shlb
test
pop
mov
pop
dec
inc
movsb
dec
cmp
stos
xchg
shrl
int3
xor
xchg
inc
aad
aad
std
sbb
pop
fiaddl
or
xor
push
jnp
or
xlat
inc
out
pop
icebp
jb
push
orps
push
loopne
dec
lret
fmuls
outsl
pushf
test
std
lods
pop
pusha
cmpsb
lret
std
sub
or
outsl
lds
incb
pop
sbb
lahf
lods
cmpl
fbld
push
cltd
inc
xchg
test
push
mov
jge
aaa
xlat
mov
jnp
cmp
mov
mov
iret
push
jns
repz
out
xor
js
mov
pop
xchg
stos
mov
nop
adc
aaa
sub
pusha
ds
add
jp
and
outsl
push
mov
mov
pusha
movsl
bound
fcmovnu
jge
int
js
mov
cmpsl
in
dec
cld
jge
test
mov
push
sahf
inc
xchg
je
das
jecxz
xor
inc
and
push
xchg
popf
bound
fdivl
cmpsl
jne
xor
stos
and
ja
jo
les
sbb
stos
or
aas
mov
sub
add
imul
push
lret
test
aam
add
pusha
fstpt
mov
sarl
jno
cmc
in
push
dec
jno
or
test
mov
mov
sub
gs
mov
test
pop
xchg
jmp
out
aam
test
je
push
jmp
and
movsl
outsb
out
gs
cmp
mov
rcrl
and
xor
add
leave
int3
out
scas
inc
push
xor
adc
leave
dec
or
push
ds
bound
push
jns
mov
ss
dec
sbb
movb
cmpb
mov
pop
cwtl
xchg
jne
repnz
bound
das
scas
cld
out
out
push
aaa
mov
stos
mov
lock
push
ja
fcmovnbe
and
pop
loopne
mov
dec
dec
add
hlt
add
mov
mov
aam
dec
pop
pop
lcall
push
notl
fisubrs
push
inc
sub
arpl
popf
or
arpl
inc
mov
or
mov
dec
sti
fildl
iret
push
inc
add
and
mov
mov
dec
movsb
loopne
pop
loop
inc
int3
pop
sub
push
xchg
add
cmp
out
imul
scas
xchg
sub
mov
sub
jbe
fcompl
ljmp
inc
jl
xchg
loopne
jbe
into
add
lods
dec
lcall
outsb
push
xchg
imul
jne
xchg
movsl
std
gs
push
icebp
and
sub
xchg
outsb
dec
cmpsl
ds
fcoml
jo
jae
push
mov
push
arpl
or
xor
push
push
xchg
xor
xor
int3
mov
pusha
inc
nop
cmp
and
xlat
jecxz
ljmp
mov
ljmp
pusha
aaa
xchg
stc
adc
and
cmpsl
nop
lock
pop
sub
rcrl
xor
aad
xor
addr16
cmc
fmuls
mov
repz
int
test
inc
js
pop
jbe
mov
pop
pop
jl
subl
shlb
or
aas
or
push
movsl
arpl
add
arpl
les
xchg
je
jne
xorl
stos
adcl
adc
iret
loop
iret
sbb
xorb
mov
adc
lret
push
popf
xor
mov
jae
je
jecxz
das
lahf
and
inc
push
into
add
cltd
les
icebp
test
add
adc
imul
mov
jne
mov
mov
mov
xchg
jno
das
imul
pop
xchg
lret
stos
aam
mull
xorb
and
bound
shrb
stc
push
add
xor
lcall
inc
movl
imul
dec
cwtl
test
dec
xor
xor
cltd
shlb
add
push
leave
dec
fisttps
push
testl
xchg
jecxz
mov
pushf
jg
pusha
dec
ds
mov
in
imul
pop
dec
push
lea
pop
nop
adc
loopne
loop,pn
push
sbb
gs
mov
push
or
loop
adc
add
aas
add
cmp
push
push
and
cmpb
push
lock
jg
lods
nop
fwait
shll
sbb
push
cmp
add
push
mov
mov
adc
jp
mov
mov
jle
lret
mov
mov
lds
push
cmp
mov
cmp
inc
inc
adc
in
rol
push
and
scas
leave
jnp
xchg
out
in
xor
add
inc
loope
jbe
mov
xchg
loope
ret
and
stos
and
in
aad
into
outsb
push
addr16
ljmp
jmp
push
inc
mov
xchg
out
insb
mov
leave
mov
out
push
fsub
dec
mov
mov
pop
gs
and
mov
cmpsl
cs
outsb
mov
xor
dec
pop
pop
push
and
jbe
mov
ficompl
mov
out
stos
lds
sbb
loopne
int
fs
mov
testb
lock
xchg
and
pop
and
movsb
je
push
addr16
test
pop
push
xor
dec
pop
sbb
mov
enter
popf
pop
popf
inc
pushf
popf
xchg
out
mov
pop
es
push
out
leave
stc
add
jno
test
andb
sbb
mov
mov
popf
out
ret
inc
ljmp
dec
sbbb
subb
sub
test
and
dec
xchg
and
cmpsb
xchg
negb
mov
ret
jae
shll
lret
jns
lahf
xor
loope
movsb
inc
add
xor
imul
or
sbb
push
js,pt
cmpsb
inc
xor
sub
mov
push
push
dec
rcr
lods
xorb
sub
inc
enter
ja
inc
je
arpl
lcall
jp
bound
xlat
lods
test
cmpsb
fwait
aad
jg
xor
insb
inc
bndldx
cmp
adc
dec
cli
sbb
push
addr16
push
mov
fcoml
test
in
repnz
xorb
mov
add
push
mov
xchg
rorb
jnp
sbb
mov
push
pushf
mov
ja
mov
pop
iret
push
inc
pop
and
test
fisttpll
stos
imul
jns
pop
mov
pop
mov
test
mov
push
test
call
add
sub
xor
mov
inc
pusha
or
pop
dec
jns
pop
inc
jmp
mov
inc
jp
sbb
pop
testl
daa
push
xor
stc
push
ja
mov
pop
insl
stos
stos
sbb
cwtl
insl
pop
push
in
push
out
and
xchg
inc
loop
push
mov
fcoms
pop
or
jp
sarl
pop
shlb
ret
xchg
test
xchg
adc
push
fnop
cmpsl
fdivr
mov
into
mov
mov
outsl
loopne
jo
rol
jecxz
scas
push
or
out
test
xor
add
xchg
mov
mov
enter
inc
ficoml
adc
frstor
insl
idiv
inc
adc
push
mov
cli
jecxz
adc
inc
dec
sbb
int3
adc
in
xor
mov
jns
rorb
mov
js
addl
ja
mov
stc
xchg
jno
lahf
in
mov
and
fwait
enter
enter
push
sbb
imul
popa
and
daa
adc
inc
imul
inc
add
push
clc
and
sbb
push
add
jb
xor
adc
pop
mov
fsubl
insl
sbb
push
mov
push
pop
outsl
mov
stc
pop
pop
sti
jmp
mull
adc
ficomps
rclb
push
test
fstpl
xchg
inc
in
ss
inc
or
loopne
fsts
cmc
roll
sub
jecxz
push
aam
ret
pop
mov
fcoml
js
mov
ret
sbb
mov
xchg
pop
sub
aam
int3
lea
cs
in
ss
push
mov
call
push
daa
packssdw
movsb
loope
pop
sub
push
cld
add
pushf
and
in
add
push
mov
loop
xchg
cld
loope
cwtl
cld
les
pusha
test
scas
inc
push
adc
add
push
hlt
xchg
inc
cld
xor
adc
jl
insb
shll
fnsave
sarb
sbb
push
dec
int3
aaa
ljmp
mov
daa
inc
jl
mov
add
popf
fstpl
dec
add
fsubl
sbb
ds
out
or
adc
xchg
xor
mov
mov
out
inc
cmp
into
lock
mov
jmp
loop
xor
jne
adc
jg
stos
scas
sbb
hlt
call
sub
sti
and
lock
dec
loope
loopne
dec
pop
lods
aam
cmp
adcl
negl
jns
test
pop
add
push
adc
gs
ret
scas
xchg
or
cmp
daa
push
mov
out
sti
pop
scas
mov
lret
add
sbbl
aas
sbbb
add
rcr
iret
sub
rclb
mov
push
daa
add
mov
add
xchg
jnp
inc
aaa
sti
jae
int3
sbbl
lcall
insl
push
repz
stos
mov
mov
and
sub
aad
mov
pop
mov
xchg
cmp
pop
push
push
outsl
add
mov
cs
adc
push
ss
jne
xlat
push
jle
sub
push
add
sub
inc
outsb
roll
mov
mov
in
push
loope
leave
les
push
and
cld
pop
mov
jmp
fwait
popa
pushf
or
je
push
scas
popf
xlat
fimull
or
sbb
ds
mov
out
outsl
imul
xor
loop
push
scas
stc
rclb
test
dec
fsts
enter
shrb
mov
icebp
ss
in
add
adc
hlt
xchg
add
inc
and
jmp
mov
leave
inc
jg
mov
cmp
repnz
faddl
xchg
data16
add
stc
lcall
adc
fisubs
or
jmp
imul
rcl
xor
mov
sti
mov
mov
test
mov
xor
lcall
add
add
or
or
dec
adc
stos
scas
orl
cmp
gs
aam
add
mov
cmp
repz
nop
pop
shrl
jno
mov
in
test
pop
jns
bound
sub
loope
push
iret
call
push
xchg
push
inc
rcrb
out
ret
cmpsb
fisttps
mov
inc
dec
gs
outsl
or
mov
push
jp
add
dec
xchg
aam
mov
xchg
jo
cmp
das
pop
data16
fdivs
mov
inc
insl
jo
cltd
dec
js
pop
popf
jne
push
push
mov
jp
jg
xor
fdiv
add
add
mov
inc
ficompl
lods
mov
into
push
popf
rolb
jbe
aam
dec
clc
push
dec
lahf
stos
nop
jl
push
mov
ljmp
les
test
and
repnz
xor
rclb
cmpl
pusha
rcrb
jnp
adc
int
mov
inc
inc
mov
rcl
andb
or
jl
popa
cmpsb
jge
insb
mov
dec
push
push
cld
push
pop
out
xchg
subl
inc
xor
aam
inc
mov
and
lock
out
sub
insb
inc
out
dec
mov
scas
fildl
lods
dec
incb
and
adc
jmp
leave
adc
fisubl
push
pop
sbb
cmp
out
movsl
jne
xchg
bound
out
jl
push
jl
mov
mov
lea
imul
lcall
test
cmp
ret
movsl
fisubrs
cmp
xor
mov
repz
daa
dec
sub
pop
cmp
addr16
stos
fs
inc
jns
mov
aam
sbb
xor
mov
dec
enter
adc
inc
and
mov
shll
mov
aas
sti
pop
mov
and
and
add
sub
xchg
push
testl
jnp
pop
cmpl
mov
enter
outsb
sbb
mov
daa
mov
mov
xchg
inc
mov
and
inc
sub
repnz
sbb
ljmp
es
inc
pop
lds
push
stos
mov
fnstenv
push
mov
mov
outsb
pop
ror
xchg
pop
fadds
daa
sub
jb
fisubrl
in
imul
movsl
daa
jo
lock
xchg
dec
pop
dec
fnstsw
daa
mov
popa
in
adc
je
jnp
xchg
xor
xchg
ss
push
bt
ficomps
and
xchg
cmp
popf
gs
mov
pop
jnp
cltd
xlat
cmp
add
call
or
shlb
add
mov
sbb
xchg
scas
rcrl
sbb
mov
adc
fiadds
mov
outsl
push
cmpsl
repz
mov
inc
mov
pop
sub
dec
mov
ficoml
jbe
dec
inc
push
jg
or
dec
leave
add
inc
sbb
jne
mov
push
jae
loopne
fsub
push
ret
aas
sbb
mov
lret
outsb
movsl
inc
lret
dec
pop
sub
cwtl
fdivs
incb
hlt
sbb
in
insl
push
mov
jae
into
dec
and
mov
loopne
int3
jb
icebp
push
cmc
jne
in
and
jnp
cli
out
jb
call
lcall
pop
fistpll
lods
jo
mov
hlt
jo
out
je
das
pop
push
and
pop
loopne
jmp
lret
rorb
push
fcomip
imul
in
aad
lea
gs
cli
sub
push
push
push
jl
nop
mov
mov
andb
jmp
mov
pop
frstor
pop
or
sbb
xor
andl
and
lret
lcall
test
and
lods
ds
jne
mov
cmp
test
inc
int3
xchg
adc
sti
and
in
jbe
cmp
mov
add
fs
pop
push
cmpsb
adc
insl
sub
jno
adc
xor
sahf
test
insl
cwtl
repnz
movsl
sarl
es
sub
add
cli
push
pusha
dec
xor
int3
ficompl
pushf
inc
je
aam
mov
fsubr
cwtl
mov
mov
test
mov
cmc
iret
sub
cltd
imul
mov
pop
jmp
loopne
mov
pop
cwtl
fcmovne
and
adc
mov
iret
cltd
insl
jbe
fsubs
test
xor
les
insb
push
mov
nop
sbb
pop
pop
cmp
shll
xchg
jg
dec
loop
das
lea
shlb
mov
sbb
insb
into
inc
mov
out
popa
or
popa
jb
mov
int3
inc
dec
push
repz
mov
sub
stos
imul
test
cmpsl
mov
cs
ss
stc
mov
cmpsl
in
shrl
loope
adc
xor
popf
aam
shlb
xor
mov
mov
mov
adc
mov
addr16
movsl
sub
test
mov
hlt
ret
nop
mov
and
mov
daa
push
cs
mov
loop
and
rol
lahf
fists
rorb
dec
out
push
and
cmp
fwait
pop
sbb
hlt
and
test
cld
loopne
adc
cs
xor
jg
cmp
fadds
push
mov
mov
daa
into
dec
std
dec
jge
xchg
mov
pushf
pop
mov
dec
add
insl
out
imul
ss
aad
sbbb
loopne
jno
out
cmp
xchg
test
cmp
add
jmp
rorb
pop
sub
add
addr16
fldcw
jecxz
int3
clc
dec
mov
lahf
mov
roll
cmpsl
cltd
stos
add
sbb
lods
push
sub
mov
dec
push
cltd
push
jge
mov
mov
pop
cli
imul
mov
inc
mov
mov
pop
lret
test
jb
mov
inc
xor
cs
or
in
mov
movsb
push
mov
mov
scas
xor
sbb
leave
fsubr
mov
pusha
mov
je
mov
les
mov
pop
or
sub
xor
mov
subb
add
or
outsb
push
daa
divl
jp
jecxz
or
push
pop
popa
addb
push
pop
push
test
sub
or
aaa
mov
xchg
nop
inc
xchg
inc
cmp
gs
cli
xchg
jl
mov
mov
adc
mov
add
adc
jge
les
mov
pop
and
fwait
nop
iret
aam
negb
shll
inc
push
les
ja
xor
out
faddl
xchg
jge
repz
testb
or
mov
ret
aam
inc
push
adc
and
dec
or
mov
push
xchg
mov
loopne
and
or
pop
add
lahf
lods
mull
xchg
inc
divb
cmp
inc
mov
in
clc
add
cmp
inc
cmp
push
or
mov
add
in
mul
sub
inc
mov
dec
fs
sbb
jne
popa
mov
lock
inc
or
dec
inc
test
pop
mov
imul
add
outsl
mov
fdivs
aas
mov
in
pop
sbb
popl
aas
lahf
add
int
jecxz
ret
pop
fiadds
outsb
inc
jns
xchg
mov
cmp
movsl
jns
aad
adc
sub
cmc
mov
add
mov
outsb
in
push
movl
daa
inc
mov
cwtl
loopne
je
mov
xchg
out
jne
inc
adc
mov
outsb
push
mov
stos
dec
cmpl
xchg
xchg
mov
lods
pop
mov
or
lret
push
sbb
in
fistpl
xchg
mov
out
loopne
mov
push
mov
int3
lret
ret
iret
daa
cmp
ss
mov
ret
or
cld
mov
pop
cli
mov
jbe
arpl
fcomps
loope
out
mov
in
and
xor
push
sbb
cltd
rorl
push
or
push
jecxz
adc
mov
fistpll
bound
je
enter
sahf
cwtl
sbb
add
inc
and
inc
adc
and
mov
add
xchg
je
jns
sbb
cltd
rcr
insl
pop
and
aaa
mov
or
mov
sbb
mov
xor
mov
je
xor
push
xor
and
mov
mov
movsl
push
and
or
mov
movsl
ret
add
lcall
push
push
movsb
lret
mov
add
pop
cmp
inc
or
xchg
add
push
fsubr
jo
loopne
flds
out
cli
test
ficomps
call
or
in
jle
push
jp
aaa
imul
loop
aas
cmp
ja
cli
xor
faddp
sbb
in
dec
subl
inc
incl
sub
shl
pop
fwait
or
mov
adc
in
mov
mov
hlt
jmp
lea
into
clc
jb
push
jnp
out
xchg
iret
in
fmuls
lahf
mov
inc
sbb
js
xchg
decl
inc
lods
xchg
xchg
stc
mov
popa
popf
mov
cmpsl
jne
pop
cld
pop
call
cld
pop
int
lcall
popa
adcl
jae
ficoms
mov
movsb
jnp
xor
lret
inc
adcb
add
lods
sysret
notl
jnp
sti
inc
push
ss
rcl
jno
mov
mov
aas
add
sub
outsl
out
xor
push
mov
test
in
push
jne
or
js
cli
outsb
fs
pushf
or
icebp
xor
or
push
je
shr
insb
jl
jle
imull
call
cmpsl
inc
cmp
sbb
loope
mov
mov
aam
call
scas
loope
lods
push
add
cmpsl
add
xlat
out
mov
int
jno
pop
testb
addr16
mov
pop
xor
xlat
jp
xlat
and
sahf
notl
or
notl
xchg
sub
insl
push
lods
adc
movsl
stos
xor
stc
mov
pop
add
or
out
cmc
scas
sbb
scas
push
clc
fcmovnb
mov
fiadds
js
sbb
xchg
dec
mov
stos
and
inc
jns
push
fdivrs
sub
shrb
mov
addr16
out
and
sbbb
mov
push
sub
jge
loopne
testb
xor
mov
popa
sbb
mov
lret
jbe
popa
push
jle
in
les
push
add
xchg
rclb
mov
sbb
lret
shlb
pop
push
iret
xchg
insb
jo
push
insb
lods
test
xchg
or
mov
insb
add
fiadds
rorb
xor
dec
test
mov
xchg
jg
cmp
push
cli
xchg
out
ret
test
cs
and
push
insb
dec
mov
and
loop
mov
data16
pop
mov
lahf
push
xor
aas
fwait
push
and
add
sahf
dec
ss
sub
imulb
xor
dec
dec
push
mov
jp
fistpll
dec
adc
mov
popf
test
mov
or
fwait
in
aad
mov
inc
pop
sub
pop
movl
rorb
aad
mov
out
sbb
shr
xchg
xchg
cmp
and
jp
push
jmp
dec
and
push
pop
xor
sarl
negb
sub
mov
ret
sbb
shr
jmp
sub
dec
pop
xchg
imul
or
or
insl
ss
fmuls
fistpl
push
sbb
mov
movsl
xor
cwtl
shll
pop
xor
or
scas
rolb
push
hlt
into
aam
mov
imulb
cli
jb
xlat
add
or
adc
mov
call
fs
mulb
out
cmpsb
addr16
pop
les
jb
int
stc
jb
push
mov
and
insl
mov
and
mov
nop
pop
adc
mov
popf
mov
cli
pop
in
adcb
cwtl
push
fadds
shrb
dec
jge
pop
in
dec
xchg
test
outsb
dec
xchg
sbb
mov
sbb
push
push
xor
jle
xchg
sbb
mov
or
pop
sub
lret
dec
pusha
popa
and
sub
andb
call
lret
aam
les
iret
add
mov
fisubl
fwait
fs
adc
xor
out
jl
incl
mov
or
insl
pop
xor
cli
arpl
inc
pop
stos
sahf
jg
add
inc
cmp
int
cld
movsl
ret
sbb
int3
inc
mov
jmp
xchg
xor
call
ret
imul
out
hlt
mov
inc
in
lock
mov
sbb
sbb
inc
fstps
aad
pusha
pop
popf
idivl
popa
int
std
add
ret
ja
rclb
mov
stc
cmp
outsl
inc
push
lods
or
xrelease
das
mov
jge
cmp
and
loop
jo
es
and
lods
and
push
hlt
mov
out
loopne
jl
pushw
shrl
insl
add
mov
daa
pop
lock
inc
jns
les
or
mov
repz
mov
cmp
sub
xor
xchg
pusha
xor
scas
push
and
loope
cmp
xchg
adc
mov
push
out
test
fstps
out
es
adc
mov
or
scas
js
jno
jp
push
add
iret
out
mov
cmpsl
mov
jno
sub
cmp
jae
mov
or
cmp
adc
adc
pshufw
pop
xchg
rcll
pop
in
sub
xchg
call
fnstenv
mov
in
sub
outsb
pop
or
icebp
push
sub
dec
mov
aam
stos
sub
in
test
movsl
in
ret
sub
cli
jecxz
cwtl
cmc
jns
pop
pop
cmpsl
shl
sub
icebp
and
pop
mov
or
xor
cwtl
sub
imul
fmuls
in
sub
nop
mov
xchg
jb
or
sbb
fmuls
ret
xor
outsb
or
add
ror
sub
adc
jno
add
add
stos
jmp
jns
cmp
cltd
dec
and
hlt
test
xchg
sar
dec
lahf
mov
stc
push
lods
ret
xor
sbb
stos
sbb
icebp
fcoml
cli
lcall
mov
lds
dec
sbb
test
push
lcall
mov
and
andb
pop
int
xchg
mov
dec
into
push
or
lock
lods
inc
dec
insb
scas
idivb
mov
mov
or
push
ss
sub
lods
push
xchg
adc
les
or
xchg
inc
nop
xchg
cmp
cs
sti
jp
pop
and
shll
les
pop
xor
push
loope
sub
pop
or
ret
insb
xchg
fs
inc
int
add
push
es
cmp
mov
adc
adc
lcall
mov
subl
adc
ret
inc
gs
outsl
push
inc
mov
pop
ret
imul
ret
repz
fldenv
push
sti
rcl
cmpsl
outsb
jns
xchg
sub
cmp
fildll
rclb
iret
mov
js
sub
in
mov
ror
test
pop
push
push
xchg
imul
loop
add
rcll
dec
int3
orb
fldenv
dec
and
pop
sahf
and
out
cwtl
pop
imul
jno
jnp
popf
and
and
cmp
ja
bswap
js
xchg
outsb
mov
jl
add
add
mov
cli
ret
or
in
jmp
fucomip
push
jle
push
outsl
sbb
push
push
and
add
outsb
xchg
shlb
add
add
pop
cmpsl
xchg
mov
xchg
fs
mov
push
loopne
je
jge
sub
mov
scas
subb
push
enter
sub
adc
and
ja
call
push
scas
out
adc
and
sub
dec
inc
inc
xchg
inc
lret
je
mov
dec
addr16
call
sbb
fisubrl
add
shr
jecxz
stc
and
adc
and
clc
add
out
imul
divl
pop
aaa
rcl
aam
imul
mov
cmp
adc
jno
popf
mov
push
lea
dec
lahf
out
loop
xor
lcall
sbb
lret
sbb
call
int3
incl
bnd
mov
test
jbe
clc
sbb
ss
mov
lea
test
mov
dec
sub
mov
xacquire
jbe
pop
or
test
test
adc
pop
out
fstps
int
inc
popa
fs
mov
call
stos
pop
mov
jg
push
or
sarl
ret
xchg
sbb
shll
iret
jle
cmp
addl
js
and
dec
pop
in
outsb
jb
and
mov
scas
enter
or
movsb
mov
stc
fistpll
add
cmp
jb
enter
invd
ror
loope
iret
jecxz
adc
std
das
push
fildll
mov
push
mov
sbb
jp
std
and
add
mov
jne
popa
mov
mov
cmp
js
dec
mov
ror
jbe
in
mov
pop
arpl
cli
fldenv
in
repz
dec
sbb
or
or
cwtl
popa
or
loop
xor
fstpt
cmpsb
fs
ret
test
xor
les
push
dec
aas
sub
jl
out
inc
stos
xchg
dec
pop
jecxz
outsl
pop
xlat
lods
aam
into
inc
test
mov
and
mov
push
cmp
mov
loope
faddl
mov
xor
cmc
ja
aam
call
xlat
daa
xchg
cli
xor
mov
sub
clc
sub
jno
bound
mov
stc
adc
xchg
push
xchg
data16
sbb
or
nop
jl
aad
rorb
adc
cmpl
lods
jg
iret
pop
ja
cmpsl
sbb
aaa
movsl
repnz
push
cmp
inc
insl
cld
and
shlb
in
stos
fwait
push
inc
push
shll
ja
je
pushl
push
bnd
mov
out
and
xchg
jmp
sub
pusha
sbbb
sbb
test
jae
mov
leave
repnz
jo
mov
ret
jno
jo
test
push
scas
mov
cmp
roll
mov
xor
inc
sti
mov
adc
cmp
ja
pmaxub
inc
bound
shll
sub
cmc
pop
pop
mov
shll
fcmovb
mov
jnp
ret
popf
sub
lea
fsubl
inc
inc
pop
in
mov
cmp
das
or
push
add
dec
repnz
or
loope
fistps
push
xor
or
out
xlat
mov
jge
call
out
les
scas
das
sbb
adc
jns
arpl
aas
xchg
roll
je
cmp
shl
jb
jno
aaa
sbb
dec
jecxz
inc
out
push
sbb
push
pop
push
fildl
js
jne
pusha
sbb
push
shl
les
in
and
jp
lods
adc
push
fistpl
mov
push
test
mov
jge
mov
out
pop
push
add
xchg
push
pop
addr16
jo
int3
in
int3
incb
add
movsl
pop
mov
dec
cs
loopne
xor
insl
or
stos
mov
pop
sbb
jmp
in
lcall
mov
or
icebp
rol
pop
loopne
aaa
iret
fsts
dec
jae
ret
mov
xchg
jbe
mov
jmp
insl
mov
insb
push
mov
add
jno
and
xor
sbb
gs
imul
push
xchg
lods
loope
pop
movsl
adc
repnz
cmp
sbb
in
ljmp
or
cld
lret
push
hlt
nop
cmovbe
cwtl
loopne
pop
cmp
pop
fstpl
xchg
sbb
stos
mov
xchg
repz
lret
fwait
aaa
mov
enter
or
xorl
fidivs
arpl
out
jecxz
cmp
aad
push
ret
stc
imul
or
xor
ret
xorl
pusha
out
xorl
pop
dec
mov
sub
pop
je
sbb
cmpsb
out
or
iret
push
or
or
and
jae
xor
outsb
outsb
mov
push
rorb
out
push
mov
fstps
push
pop
mov
cmpsl
cmp
or
andb
ret
dec
sbb
xor
sarb
insb
lahf
xchg
dec
leave
movsl
push
je
int3
or
push
push
dec
push
xchg
push
xchg
pop
movq
push
adc
test
gs
push
mov
inc
pop
repz
ds
mov
mov
adc
mov
ja
cmp
fisubrl
js
daa
bsr
mov
std
mov
sub
test
mov
dec
pop
dec
mov
fdiv
xchg
aas
push
mov
and
push
mov
and
cwtl
mov
in
jb
cmp
push
pop
fucomi
xchg
adc
leave
jbe
xchg
lea
std
in
stc
jge
repz
sbbl
aas
mov
call
jge
mov
movsb
cli
mov
roll
aaa
dec
pop
mov
test
lret
fsubl
scas
mov
inc
iret
loop
stos
in
adc
outsb
mov
call
lds
in
pop
fsubs
xor
enter
fsubrl
or
shl
rclb
mov
dec
mov
adc
test
xchg
and
lock
add
cmpsb
mov
movb
adc
cmp
imul
xor
outsl
addr16
jb
hlt
add
fcmove
mov
cvtdq2ps
mov
lods
js
mov
inc
add
pop
cmp
fs
mov
imul
shlb
aad
dec
xor
je
das
out
adc
aam
ljmp
push
jg
rcll
cmp
arpl
movsb
rcll
push
cmc
jo
and
lcall
out
xchg
cmpsl
shll
xor
adc
lock
add
and
jecxz
push
xchg
int3
sahf
sub
pop
shrl
xchg
adc
inc
arpl
rorb
push
jmp
and
sti
and
in
mov
in
xchg
lock
jle
int
pop
jb
jge
mov
mov
pop
addr16
mov
add
inc
and
fwait
mov
and
movsb
fs
jnp
cmp
push
bound
mov
cmpsb
mov
adc
sub
aas
push
jns
sub
sub
push
cli
add
pop
cwtl
std
ss
das
bound
repz
push
add
xchg
cmpsb
cmp
mov
hlt
inc
mov
adc
or
inc
cmp
push
std
arpl
sub
inc
jb
hlt
test
fsubl
mov
popf
jb
test
lea
test
sbb
pop
test
fisubl
add
test
test
ss
push
mov
mov
test
rclb
sbb
and
orl
pop
into
popa
cwtl
xor
cmp
imul
fisubs
test
push
inc
lea
mov
sbb
jne
clc
dec
ja
insl
sbb
xchg
sbb
into
sbb
mov
push
and
jbe
or
sti
pop
sbb
push
frstor
cmp
jle
mov
push
iret
bound
push
int3
insl
fwait
adc
dec
in
add
mov
jl
nop
or
pop
jb
and
inc
aad
stos
adc
mov
lahf
xchg
mov
add
sub
pop
call
mov
inc
inc
sbb
ds
idivb
xchg
arpl
repz
cli
and
clc
add
fnsave
mov
test
push
adc
lods
in
clc
in
xor
scas
outsb
adc
sub
daa
int
xor
nop
into
add
jmp
flds
jae
loop
test
sbb
xchg
roll
pop
cld
psraw
inc
aam
dec
jle
je
add
xchg
loop
pop
mov
fistps
jnp
dec
jp
lret
push
fprem
and
and
or
lret
cmp
js
aaa
dec
ret
pop
dec
insl
xorl
out
in
mov
mov
mov
in
mull
add
jb
add
cmpsl
add
stos
lds
pop
sbb
ficoms
fs
cmp
pop
pop
lds
leave
or
xchg
jge
pop
inc
sub
flds
lcall
mov
inc
fmull
dec
scas
sahf
dec
js,pt
inc
push
outsb
or
mov
xor
jle
std
sahf
call
mov
pop
push
loope
pushf
ret
jnp
or
add
add
xor
pop
cmp
subb
imul
orb
jno
es
sub
jl
aaa
in
fldcw
sub
push
arpl
aam
and
dec
outsl
rclb
mov
xchg
xor
lret
popl
pop
jo
loopne
lock
and
pop
push
jl
popa
push
test
pusha
sarb
push
push
push
in
arpl
sbb
repnz
cmp
loopne
add
or
rcrl
in
xchg
aas
mov
das
out
imul
xchg
adc
sarl
fs
movl
mov
or
xor
lods
pushf
mov
sbbl
clc
mov
adc
jne
fistpl
inc
jbe
inc
je
xchg
divb
icebp
scas
push
cld
addl
and
scas
add
popf
mov
mov
lods
jge
testl
sub
xor
or
push
cmp
adc
and
fmull
in
sub
pop
ffree
fnstsw
xchg
lcall
sbb
mov
test
jg
movsb
fcmovnu
cmpsl
mov
jl
pop
pop
aam
insl
jl
setbe
in
jb
lret
scas
movsl
int
mov
cmp
lcall
pop
fwait
push
test
mov
inc
out
decl
xchg
aas
adc
out
fimull
inc
iret
push
test
pop
popf
mov
cmp
sub
xor
mov
pop
xor
adc
adc
dec
push
in
dec
sti
push
aam
lock
inc
mov
cmc
sti
inc
push
sbb
mov
jmp
cld
rcll
inc
ror
or
and
sarb
decb
mov
nop
xor
or
cmc
dec
aaa
aad
loopne
mov
add
add
cmpsb
inc
push
mov
cmpsb
xchg
dec
mov
xor
std
sti
and
test
out
adc
and
sub
shlb
inc
push
sbb
adc
int
into
xchg
dec
push
mov
sub
sbb
pop
sub
sbb
clc
adc
inc
push
cmp
hlt
adc
movsb
adc
jl
xchg
mov
repz
jl
es
js
clc
add
inc
lahf
jge
je
cmc
or
aam
mov
sbb
nop
outsl
and
or
mov
test
mov
stc
fildll
fcoms
in
pushf
loop
inc
inc
fdivs
mov
into
xor
jo
leave
ja
aam
push
jecxz
mov
push
add
stc
xchg
sbb
mov
xchg
mov
shl
add
xor
out
mov
and
and
imul
enter
jl
cltd
js
and
pop
mov
sub
test
bound
pop
aas
xchg
xor
mov
lret
adc
stc
mov
push
sub
and
push
js
notl
out
jg
or
push
mov
jmp
mov
imul
movsb
mov
sbb
inc
lret
dec
and
mov
icebp
dec
sbb
mov
std
pop
jecxz
in
cmp
xchg
sbb
mov
xor
mov
inc
mov
fidivrl
and
and
pop
mov
or
nop
add
dec
aad
or
imul
fnstcw
enter
hlt
pop
xchg
add
pop
xor
cmpsb
dec
pop
imul
adc
jle
jnp
cli
mov
adc
sti
test
push
test
xchg
pop
xorl
fiadds
out
lahf
mov
mov
xchg
xchg
adc
pop
mov
mov
or
mov
outsb
inc
cltd
inc
mov
cli
adc
stos
enter
out
fdivrs
push
lea
sbb
outsl
lcall
or
out
in
shrl
pop
sub
dec
fwait
or
out
sahf
mov
push
cmp
dec
sub
les
mov
in
mov
adc
jnp
mov
jmp
inc
push
imul
imul
adc
mov
add
popf
jnp
inc
sar
add
and
jb
jl
sti
mov
mov
xchg
or
loopne
fnstenv
pop
mov
dec
xchg
lret
adc
cmp
fsubs
mov
sbb
bound
rcrl
mov
push
and
mov
push
repz
movsl
gs
cltd
in
dec
lahf
aaa
rcrl
stos
adc
jecxz
jno
mov
js
mov
cwtl
mov
sbbl
lods
insb
pop
mov
scas
mov
xchg
add
negl
or
je
notl
mov
sbb
imul
in
subb
adcb
inc
adc
insb
mov
popa
mov
inc
jg
mov
outsl
push
into
lods
add
lods
lret
daa
xchg
out
pop
loop
or
adc
cli
mov
jnp
mov
push
push
fwait
int3
test
xchg
in
add
mov
push
insb
xlat
pop
xchg
repz
shl
dec
sbb
mov
sub
push
shlb
jno
outsb
stos
pop
cmpsl
aas
mov
xor
in
divl
enter
outsl
popa
ds
dec
cmp
inc
cmpsb
lcall
xchg
out
xorl
std
cmp
lahf
jbe
mov
loope
sub
sbb
ficomps
repnz
mov
cmp
mov
xchg
aam
mov
xchg
mov
xor
push
in
incb
or
test
sbb
insb
lods
adc
cmpsb
sbb
cmpsb
pop
popa
mul
mov
popf
mov
fisttpll
fs
sub
cmp
push
push
sbb
jb
negb
imul
inc
push
pop
bound
mov
cld
clc
negl
arpl
fucomi
pushf
push
mov
mov
xor
xor
push
fimuls
test
xor
test
adc
xor
or
xchg
adc
adc
pop
jl
add
jecxz
mov
xchg
pop
pop
cmpl
aas
sub
pusha
lds
cmp
mulb
ss
aam
dec
push
call
mov
leave
add
pop
sahf
test
movsl
xlat
fsubrl
sub
fisttpl
sub
loopne
inc
xchg
dec
mull
cmc
icebp
mov
call
lret
adc
xchg
push
push
jo
pop
push
or
xor
rorl
add
mov
mov
push
call
and
in
and
stc
jnp
cmp
out
mov
cmp
jns
sbb
inc
mov
enter
fsubrs
xor
ljmp
std
mov
mov
xorl
dec
mov
jge
add
stos
jbe
aas
sub
insl
pop
xor
cmpsb
mov
hlt
shll
jnp
dec
lock
lret
fistps
or
dec
jnp
bound
insl
fwait
pushf
and
and
stos
or
test
dec
inc
cmp
in
add
inc
push
cmp
ss
ds
clc
mov
lock
jmp
inc
loop
lds
orb
mov
mov
shrb
lahf
sub
xchg
fxch
sbb
pop
sti
out
cmp
loope,pt
sub
ja
pop
pop
notb
mov
arpl
jmp
lea
xchg
jl
cmp
sahf
push
fisubrl
dec
ljmp
stos
mov
inc
in
roll
sub
pop
fcomp
jg
int3
into
or
and
fnstsw
dec
and
stos
push
les
cmpsl
mov
xchg
jg
mov
adcb
mov
push
adc
je
js
call
mov
fldt
fnstsw
movsb
imul
sub
ja
movsb
arpl
pop
jb,pt
inc
shlb
mov
mov
add
fcoms
pop
push
pop
bound
sahf
inc
cmp
movsb
orl
repz
inc
ja
push
scas
add
dec
loopne
jnp
jo
inc
imul
mov
rorl
mov
cmpl
adc
mov
stos
xchg
repnz
out
mov
mov
insb
and
mov
roll
lods
xor
dec
push
imul
mov
movl
xlat
aas
lods
cmp
dec
jg
clc
cmp
add
jae
insb
cltd
xor
rcrl
mov
sbb
call
adc
mov
sbb
jb
xchg
cld
dec
imul
movsl
cmp
mov
bound
repz
mov
cmp
pop
shl
cmpsl
xor
adc
pushl
and
sti
push
pop
imul
dec
mov
sbb
cmpsl
pop
adc
aas
mov
cltd
lcall
lds
pop
cmpsl
xchg
cmpsb
loop
cmp
das
mov
daa
fwait
mov
in
jmp
push
lahf
negb
xorl
lock
out
dec
xchg
and
mov
or
std
insl
sbb
mov
pop
jmp
cmpsb
and
mov
repnz
jbe
jno
test
mov
xor
loop
sbb
fistpl
pop
mov
cmp
jbe
test
fsubrs
sub
adc
mov
sbb
jb
rcrl
test
rcrl
xchg
out
cltd
mov
ja
inc
ret
sti
in
mov
add
inc
or
ds
add
pop
movsb
mov
mov
in
mov
jle
or
xor
lds
mov
push
pop
fidivl
pop
sar
xor
fs
scas
jmp
insb
fucomip
dec
mov
enter
loop
pop
add
popf
scas
cli
adc
inc
pop
cmp
mov
jb
cmp
jecxz
ljmp
fsub
movsl
xchg
xor
xor
imul
inc
popf
adc
push
orl
jge
ss
and
pop
or
inc
inc
and
aam
pop
pop
decb
and
and
stos
cwtl
fprem
or
inc
dec
ret
mov
add
lods
mov
jge
pop
dec
rcll
imul
bound
add
jnp
test
mov
mov
jle
subl
gs
movsl
pop
xor
pop
pop
fisubs
aas
movsl
jo
or
cs
add
push
shll
es
filds
mov
and
insb
inc
push
js
je
xor
orb
decl
roll
les
lret
jge
or
and
repz
addb
sbb
mov
dec
mov
imul
mov
mov
fsubrl
add
sahf
imul
stc
cs
fisubrl
fs
loope
lcall
cmc
mov
mov
xchg
daa
and
push
fsubrs
ret
pop
js
gs
cmc
pop
inc
mov
scas
rcr
dec
mov
repnz
inc
sbb
fstpl
dec
popa
pop
out
push
lcall
ds
aas
add
jp
in
sbb
mov
ja
popf
pmullw
out
mov
inc
std
mov
mov
jne
sahf
cltd
cmc
and
je
ja
into
mov
pop
ret
mov
cwtl
jecxz
out
cmp
icebp
dec
adc
mov
xchg
std
dec
lret
sbb
mov
sub
cld
in
and
mov
test
les
fwait
call
pusha
movsb
cmp
or
mov
es
push
mov
mov
dec
fildll
and
lret
cli
int3
pop
leave
mov
mov
nopl
mov
lret
or
inc
mov
jl
test
loopne
stos
or
pushf
cmp
pop
enter
stc
mov
cli
pushf
cli
pop
movl
mov
push
cmpl
in
add
js
adc
and
xor
mov
stc
fwait
pop
or
pop
loope
call
js
dec
pop
push
test
insb
mov
mov
mov
loop
movl
push
push
and
outsb
mov
xchg
movsb
icebp
cltd
mov
repnz
dec
sub
or
push
mov
or
adc
in
add
mov
cld
mov
inc
das
or
xchg
and
cmc
mov
dec
pop
mov
fcmove
mov
mov
repz
rcll
mov
outsl
scas
push
mov
sti
or
cmpsl
lea
call
dec
inc
ret
shll
mov
arpl
adc
sub
xor
fimull
mov
cmp
or
data16
xor
lods
add
arpl
push
mov
test
mov
cmp
test
cmp
fs
les
ds
stc
jg
xor
daa
fmull
insb
sbb
fsubl
inc
cld
jno
inc
or
push
jnp
and
push
loop
outsl
jge
test
mov
mov
mov
or
dec
movb
xor
mov
and
lea
and
lret
xchg
mov
mov
jo
pusha
or
xor
leave
mov
mov
push
lock
sahf
add
out
and
andl
cmp
inc
scas
rcll
push
pop
outsb
lret
adc
jns
pusha
push
fdivrs
imul
jecxz
dec
subl
stos
mov
rclb
je
push
testb
mov
js
sbb
ja
mov
test
sub
cwtl
pusha
test
cli
out
inc
inc
cwtl
out
mov
add
insb
cli
cmpsb
subb
subl
data16
xchg
jbe
push
or
adc
imul
push
fildll
mov
jle
nopl
ja
outsb
mov
or
xchg
stos
notb
pop
inc
sbb
repnz
push
jg
cmp
rcrl
add
sti
sub
pushf
cmp
or
icebp
shlb
jo
hlt
inc
push
jne
cmp
repz
inc
jae
orb
insb
call
call
xlat
ss
jb
xor
xchg
movsb
dec
mov
jae
jle
mov
je
lods
add
jne
add
bound
je
shlb
push
loopne
test
mov
mov
push
call
mov
scas
addb
and
stos
ret
push
mov
lock
test
cmp
int
adc
test
cmp
and
xlat
sub
pop
sub
in
in
not
aam
push
or
ljmp
dec
push
xchg
iret
lahf
notl
dec
mov
mov
out
mov
mov
loopne
mov
push
or
mov
cmpsl
js
jb
or
stos
cmp
mov
xchg
mov
lret
mov
movlps
andl
push
ss
or
push
adc
and
jns
mov
xor
ds
cld
pop
ljmp
lret
xchg
into
mov
sbbl
pop
pop
sti
push
pop
pop
clc
pop
call
mov
xorl
inc
mov
xchg
adcl
sahf
fwait
mov
jle
jns
xor
sub
fidivrs
sbb
das
call
sub
sub
and
ljmp
data16
cli
mov
stos
adc
sti
sbb
cli
cmc
ret
sbb
dec
add
lds
dec
adc
inc
movsl
adc
xor
pop
ja
or
ss
testb
pop
hlt
jb
mov
hlt
test
dec
mov
ret
xchg
fdivrs
call
mov
imul
test
imul
add
pop
call
and
loop
jns
out
sub
aas
xchg
add
mov
pushf
mov
ror
sub
in
sbbb
or
push
jb
sub
push
in
test
scas
sti
xchg
ret
adc
movsb
cmc
push
sbb
cmp
jl
mov
mov
mov
pushf
call
mov
or
jg
adc
sub
dec
and
cld
sbb
and
imul
and
movsl
pop
mov
cmc
mov
adc
mov
pop
mov
jo
mov
pop
jge
xchg
and
ret
pop
ja
dec
dec
lret
in
es
dec
mov
mov
data16
icebp
fsubrs
mov
xchg
cmpl
mov
ret
pop
test
jmp
sub
popa
movsl
xchg
aas
or
scas
pop
push
fwait
sbb
mov
mov
push
les
in
or
lds
inc
add
or
cli
mov
std
xchg
mov
xor
ffree
pop
testl
outsb
pop
and
and
and
cmc
call
imul
mov
and
out
jno
jl
inc
cmc
outsl
adc
xor
dec
adc
xor
or
out
jae
fsubr
shlb
and
pop
out
xchg
lret
leave
mov
int
jg
mov
push
outsb
dec
push
int
dec
sub
fistpl
sub
fsubs
je
pop
mov
add
ljmp
xchg
mov
js
cwtl
mulb
shrl
sahf
xor
adc
cwtl
and
lds
sub
xchg
push
test
jnp
jae
jns
test
insl
pop
dec
lcall
ret
gs
test
out
push
andb
dec
mov
movsl
add
test
push
ljmp
shr
out
mov
movsl
scas
cmp
outsl
in
xchg
dec
lret
lods
push
or
shrl
pusha
push
loope
cmovg
mov
aad
fidivrs
or
loope
sub
jmp
mov
xchg
outsl
jge
and
rclb
adc
or
dec
jge
dec
push
jle
pop
pop
adc
mov
inc
xchg
cmc
ja
loop
sbb
push
fidivrs
cs
sub
clc
stos
push
jb
jp
xorl
call
add
loopne
sahf
mov
std
lods
outsl
in
repz
lods
lret
and
xor
popf
mov
movsl
mov
movl
jl
xor
out
push
fildl
mov
addr16
sarl
add
shrl
scas
popf
repnz
mov
testl
push
mov
data16
xchg
aaa
and
outsb
jle
fs
int3
in
adc
and
pop
mov
stos
push
add
loopne
mov
xchg
pop
mov
cmp
or
clc
movsl
dec
icebp
jecxz
add
jmp
test
push
sub
scas
int
dec
jmp
pop
loope
mov
xchg
in
in
lods
mov
inc
notb
in
cwtl
scas
divb
fiadds
mov
ror
xchg
adc
dec
icebp
pushf
sbb
push
fs
fsubrl
dec
in
lods
insb
push
mov
pop
inc
pop
mov
scas
inc
test
and
cmp
push
es
aas
pop
sub
call
mov
pop
dec
jne
stc
or
dec
dec
ret
and
jle
cs
and
arpl
pop
movsb
push
pop
push
xor
outsb
arpl
sbb
pop
nop
gs
xor
cmc
pop
ljmp
push
iret
mov
je
pop
icebp
and
mov
and
mov
inc
sahf
push
push
lahf
sti
sbb
jo
nop
movl
or
fcomi
and
add
loope
or
mov
mov
cli
mov
cmp
loope
cli
enter
xor
mov
push
lods
xlat
iret
aas
cmpsl
test
shlb
or
sub
rorb
sbb
add
inc
icebp
test
lret
inc
sub
iret
in
pushf
movsb
inc
pop
outsb
jge
fmuls
sbb
and
int3
cmc
movsb
push
movsb
ljmp
inc
cmp
jne
pop
cmpsl
pop
cmp
pop
pop
or
in
pop
push
outsb
xlat
xchg
sbb
les
fldcw
cmp
rclb
and
mov
scas
jecxz
mov
imul
lahf
cmc
in
aaa
jnp
xchg
aaa
andl
adc
es
push
ss
dec
pusha
mov
test
scas
cwtl
xor
sbb
insl
jns
fiadds
jnp
ljmp
push
fsub
ret
push
xorb
sbbb
xor
imul
outsl
cmp
fcmovnu
mov
rolb
jp
iret
mov
ret
fmull
or
sbb
cmc
pop
lods
jo
pop
out
push
sub
jae
pop
cmp
data16
or
ficompl
sahf
lds
cmp
jg
lds
cmpsl
rol
ss
sbb
and
pusha
inc
xor
mov
lods
scas
fs
into
jg
js
icebp
shrb
push
sub
xchg
incl
mov
aad
cmp
lds
in
call
lahf
mov
pop
insb
ret
aaa
fmull
add
inc
daa
xlat
cmp
cmc
lock
and
mov
mov
fimull
cld
enter
xchg
and
xor
popa
int3
pop
scas
mov
sbb
push
mov
jne
pop
mov
pop
in
ljmp
or
cld
mov
shl
lock
rcrl
stos
jnp
add
lds
inc
aas
enter
mov
mov
jecxz
jae
or
sub
inc
es
imul
and
repnz
into
fmull
inc
dec
pop
sub
xchg
pusha
pop
lcall
jno
sub
lds
jo
movl
mov
push
xor
jmp
aam
adc
jl
pop
push
mov
pop
cmp
adc
xchg
jo
js
xor
pop
mov
std
xchg
xor
push
dec
and
test
xchg
inc
push
fisubrl
fldcw
pop
pushf
mov
xor
adc
fs
outsl
jne
cmp
adc
insb
aas
mov
fwait
rolb
xchg
shr
push
push
cmp
inc
or
nop
loop
and
int3
pop
aad
push
mov
pop
sbb
xor
jne
gs
cmpsl
rcl
test
xchg
pop
rorb
push
sbb
stos
orl
pop
test
inc
iret
aaa
cmp
mov
loopne
mov
in
cmp
pop
imul
std
dec
cmpsb
inc
dec
sub
push
cmp
pop
push
dec
mov
dec
out
jns
adc
lret
ljmp
mov
add
jmp
aam
jne
imul
jno,pn
sti
jp
out
push
loop
dec
int
sbb
jb
test
dec
mov
nop
jae
fst
daa
sub
divl
test
addr16
gs
push
repz
daa
jnp
inc
enter
and
cmp
xor
pop
jno,pt
dec
lods
fdivp
dec
test
sarl
mov
cmc
mov
negl
ja
pop
repz
sahf
xchg
push
jb,pt
and
jg
and
push
in
aas
jb
mov
mov
popa
dec
sbb
mov
loopne
mov
jmp
mov
cmovs
insl
ss
sarb
inc
jo
jge
mov
mov
inc
clc
jp
dec
push
lahf
cmp
in
mov
loopne
icebp
xchg
iret
ljmp
ret
or
fcos
xchg
xchg
loope
mov
ror
test
das
dec
dec
in
test
dec
es
cmp
xchg
aam
sti
or
cmp
xchg
invd
scas
mov
scas
adc
rcl
or
popa
and
aaa
pop
nop
inc
xchg
xchg
hlt
inc
add
out
repz
inc
int
xchg
repz
int
fdivl
mov
push
sbb
xor
push
sbb
nop
push
cmp
mov
daa
in
xchg
dec
fcmove
adc
addr16
xor
test
decb
xchg
sahf
mov
stos
inc
adc
nop
idiv
cmp
repnz
or
adc
and
loope
mov
out
in
pushf
inc
cmp
scas
mov
daa
mov
xchg
mov
jno
cmp
lock
jno
jmp
popa
sbbb
dec
lahf
je
cmp
filds
je
inc
mov
sbb
xor
es
test
arpl
sub
lods
adc
push
shlb
mov
gs
jb
jecxz
push
ret
mov
adc
pop
test
push
pop
cwtl
pop
subl
and
mov
ss
push
push
add
and
dec
pop
idivl
cmc
add
push
or
in
pop
or
mov
ss
xor
data16
stc
sbb
testl
fs
push
out
imulb
hlt
lahf
test
inc
mov
hlt
pop
lea
rcr
push
xor
xchg
ret
xor
mov
push
xor
xchg
lcall
jns
jno
movsl
jg
xorl
addl
cltd
fxch
fs
add
inc
iret
push
jmp
and
pop
mov
push
sbb
sub
and
pop
out
aad
jg
xor
push
xor
xor
inc
add
mov
leave
pushl
jle
xor
push
xchg
push
xchg
jb
sub
or
xchg
push
dec
in
inc
nop
movsb
adc
sbb
stos
aas
aas
mov
pushf
mov
dec
add
loop
mov
bound
stc
insb
add
add
mov
cmp
sub
jp
out
arpl
xchg
mov
dec
push
lret
and
scas
inc
xchg
das
int3
mov
ror
mov
cmpsl
add
sbb
loope
inc
addl
xchg
stc
imul
sub
lea
ss
hlt
aad
stos
add
xor
push
sar
imul
pop
rorl
insb
gs
dec
jle
or
xchg
mov
gs
jge
mov
xchg
jg
xor
fdivr
dec
add
mov
shl
mov
xor
in
orl
imul
pop
dec
jmp
adc
adc
mov
or
jae
dec
popa
xor
in
ret
sbb
dec
add
xor
adc
hlt
mov
xchg
lret
dec
sub
mov
ret
es
or
or
pushf
and
loope
inc
jge
rcl
rcrb
or
mov
adc
mov
pushf
mov
push
push
or
push
daa
xchg
mov
sbb
lcall
inc
repnz
pop
fcoml
addr16
arpl
cmpsb
add
fnstsw
mov
popa
out
scas
fnstsw
les
cmp
scas
ljmp
orb
pop
call
filds
pusha
js
push
rcl
sbb
sti
jg
or
in
sarb
dec
movsb
jle
dec
aad
test
and
scas
lea
push
jge
add
in
mov
mov
aad
fwait
bound
inc
in
dec
push
cmp
js
push
push
int3
or
lock
push
aad
cwtl
out
cmp
test
mov
push
scas
xchg
clc
movsl
jnp
pop
lahf
imul
addb
adc
in
cmc
fcmovnbe
ja
cwtl
das
ret
xchg
les
xchg
jb
or
ficoms
xchg
sarl
aad
fwait
ljmp
test
data16
pop
xchg
int3
mov
fdivrl
mov
lds
fucomip
mov
fdivrp
stos
jae
pop
push
ret
insb
inc
dec
dec
decb
rolb
mov
cwtl
ret
xchg
cs
pop
jne
movntq
fstp
out
addl
mov
dec
and
push
mov
adc
sti
inc
sbb
and
xchg
enter
gs
sub
xchg
int
notl
xor
aam
sti
xor
cmc
adc
outsl
hlt
rcrb
test
inc
mov
inc
cmp
fwait
and
pop
shl
fidivrs
loope
mov
jl
cmp
mov
mov
jns
imul
and
loop
jmp
xchg
or
or
push
repz
or
push
cmpsl
adc
cld
outsb
mov
mov
js
test
fcomp
imul
dec
decl
outsl
mov
and
pop
mov
mov
popa
inc
out
or
mov
cmpsb
or
jb
sub
jne
xchg
iret
sbb
fistl
rclb
enter
int
push
mov
xchg
out
pop
and
fdivrp
bound
hlt
cmc
test
addr16
data16
add
sub
ficoms
adc
jmp
cmpsb
jle
dec
xchg
xor
lcall
xchg
mov
bound
pusha
rep
ja
and
flds
adc
mov
es
push
mov
and
pop
jo
adc
jae
dec
add
jo
jae
xchg
adc
sahf
sub
xchg
add
jmp
repz
test
ljmp
stc
xor
jns
xchg
dec
test
js
push
popa
in
xor
in
syscall
cmpb
mov
inc
enter
lea
cmp
and
sbb
inc
or
movsl
jmp
adc
push
dec
sbb
and
xchg
mov
add
mov
das
call
lock
in
imul
cltd
mov
cmp
mov
mov
ljmp
mov
mov
mov
fnstsw
insl
pop
mov
cmp
lea
btsl
jb
cli
pop
cltd
mov
push
pop
mov
push
aad
ficompl
jno
lret
lcall
cmp
and
adc
xlat
lods
xchg
jae
mov
gs
inc
into
and
mov
int3
jecxz
xor
cltd
rcrl
or
add
xchg
rorl
xchg
jmp
jp
das
add
pusha
das
mov
insl
xchg
out
daa
test
cmp
jns
xchg
aaa
or
imul
insl
js
ja
mov
scas
pop
fcompl
sbb
popa
aas
dec
imul
sbb
sbb
sbb
push
or
shr
jae
call
mov
out
inc
into
lock
or
adc
andb
pop
movsb
inc
pop
dec
xor
inc
stos
daa
mov
jmp
sub
shll
lods
adc
ljmp
xchg
lahf
add
push
and
out
jge
outsb
ret
pop
adc
stos
mov
push
mov
lret
adc
hlt
jo
jg
cmp
enter
push
in
or
test
jne
mov
mov
and
addb
inc
push
push
jb
adc
pusha
ss
mov
cmp
or
js
jb
rcrl
xchg
and
and
iret
test
icebp
shlb
inc
lret
pop
les
xlat
xor
jp
dec
into
push
lock
nop
jle
xor
jecxz
mov
mov
pop
shr
out
das
push
sbb
gs
inc
add
test
fwait
movsb
pushf
fiaddl
ss
pop
mov
insb
mov
fsubl
adc
cltd
add
sbb
lods
push
addr16
and
lret
outsb
push
add
bound
lods
xor
xchg
loope
repz
int3
and
jmp
insb
jne
hlt
lods
mov
scas
jbe
dec
insl
sub
mov
dec
addr16
imul
mov
in
cmp
pop
sbb
push
push
jno
imul
xchg
add
push
or
ud2
in
je
cs
cltd
clc
dec
cmp
jmp
mov
mov
xor
push
xor
and
cmp
popa
loope,pn
cs
push
xor
inc
loopne
mov
xor
sbbb
xchg
insb
push
mov
jbe
adc
dec
or
mov
mov
ja
stc
push
pop
jb
ds
scas
xchg
add
stos
repz
clc
sub
jne
push
xor
sbb
adc
adc
adc
fidivs
sbb
addr16
mov
stc
jl
add
aaa
sahf
jbe
clc
xchg
jo
cmp
push
xor
mov
pop
icebp
dec
pop
lds
dec
dec
movsb
push
hlt
jmp
jo
orl
sub
stos
xor
std
sbb
cmpsl
out
sbb
test
xchg
push
sub
inc
inc
sbb
mov
shrb
in
sbb
mov
xchg
sbb
sub
gs
sub
mov
mov
test
inc
cltd
jae
bnd
cmpsb
add
into
cmpsl
xor
faddl
xchg
aad
jo
je
not
and
lret
cwtl
push
jnp
sarl
mov
cmc
ret
cmpsb
add
add
xchg
and
push
shlb
sti
push
sbb
push
int3
dec
xchg
outsb
push
sub
incb
push
dec
jno
push
sub
sarl
cmp
call
push
int
or
mov
fs
jl
inc
fimuls
pusha
out
ja
jns
xchg
cwtl
mov
insl
daa
xlat
rorb
cltd
mov
cltd
mov
clc
mov
loopne
mov
jb
dec
clc
jle
push
push
jne
js
and
fwait
clc
mov
push
sbb
jl
inc
rol
pop
jno
cmpb
sbb
mov
movsb
fistpl
popf
inc
lahf
fdivrp
push
mov
push
dec
scas
sub
lcall
notb
push
cli
gs
into
and
xor
icebp
pop
mov
mov
jns
gs
mov
shl
mov
out
jno
scas
rcl
xchg
cmc
pop
jp
sub
mov
stos
or
pop
dec
addr16
push
test
xchg
imul
fists
nop
sbb
and
sub
jne
sar
out
cmp
repz
subb
push
in
cltd
dec
inc
push
mov
push
cmpl
movsb
push
iret
aad
es
jae
int
loope
sbb
rorw
into
sub
jnp
andb
xor
mov
xchg
mov
fcomps
cmp
jle
std
pop
cwtl
cwtl
enter
std
fcompl
fnstcw
test
test
sub
and
push
out
jle
mov
inc
push
ja
xor
and
mov
mov
push
fld
fdivl
inc
push
cmp
mov
xchg
rorb
mov
icebp
das
sbb
and
mov
arpl
sahf
push
cwtl
cmp
lahf
scas
cmpsb
aad
mov
incl
push
addr16
adc
xchg
dec
lds
outsl
outsb
sub
ficoms
pop
mov
xchg
out
dec
mov
addb
mov
cmp
push
dec
adc
loopne
or
gs
push
lret
inc
push
and
adc
sar
mov
inc
out
fisubrs
roll
or
ljmp
std
scas
inc
xchg
icebp
push
xor
cmp
and
jo
cmp
dec
lods
outsl
xchg
jg
fsts
pusha
jecxz
int
testb
jge
cmc
xor
jl
jbe
ljmp
mov
mov
int
cmp
push
mov
pop
nop
sub
movsl
add
fadd
fwait
mov
or
push
mov
popf
aas
add
jno
aas
test
aad
cwtl
pop
mov
aaa
push
insb
adc
dec
mov
shlb
faddl
push
fwait
adc
scas
mov
shrl
lds
push
xor
mov
fwait
popa
loopne
sub
neg
lret
or
sbb
sahf
stos
popf
jnp
pop
out
lret
inc
mov
dec
inc
popa
movsl
lret
aaa
push
scas
adc
outsl
fucomi
subps
daa
mov
mov
aaa
sub
cltd
dec
and
pop
pop
into
mov
subb
push
push
sbb
adc
jno
iret
or
in
jmp
xchg
fdivrs
fldl
jno
ficompl
scas
adc
movsl
scas
jb
mov
cld
gs
div
stc
pop
popl
pop
cld
xor
push
and
aas
add
cld
jmp
lea
xor
pop
dec
sbb
xlat
shrb
fsubrs
orl
mov
mulb
dec
hlt
outsl
lret
lcall
xor
rcrl
popf
mov
mov
add
cmpsl
mov
pop
into
mov
xchg
sub
jp
cmpsb
adc
ss
gs
addr16
mov
ret
push
or
push
test
in
dec
lea
sarb
jno
fadd
mov
nop
xor
mov
testl
out
and
loopne
out
fcoml
xchg
hlt
and
in
mov
ds
push
mov
fwait
pop
test
inc
lods
pusha
or
in
jle
adc
fcmovne
enter
out
fs
jg
das
add
inc
sahf
mov
push
shlb
mov
mov
in
jle
mov
sbb
adc
or
nop/reserved
pop
and
in
mov
adc
push
js
sbb
movsl
out
lahf
jno
call
or
movsb
and
sbb
pusha
dec
or
mov
mov
dec
cwtl
mov
mov
add
mov
insl
es
pop
push
std
pusha
hlt
addb
push
inc
lcall
es
add
cmp
in
ficomps
xlat
arpl
ja
and
in
aam
ljmp
cs
mov
sbb
cwtl
loop
xor
pop
ret
or
mov
lds
push
ret
jno
cmp
jl
in
loop
leave
add
sbb
insb
or
cmpl
enter
rcrb
rcl
pop
push
pop
stos
jae
repz
int
roll
dec
aam
aas
aad
cmpsl
sbb
out
jmp
loop
jns
lea
arpl
sub
xor
outsb
cmp
jne
rcll
psubq
stos
insl
sub
lahf
addr16
movl
shl
mov
adc
or
mov
xchg
cmp
fldenv
cmp
jmp
jp
sub
rorl
add
mov
lods
dec
sub
mov
inc
cs
flds
fstp
push
nop
jnp
and
dec
sub
xchg
jmp
mov
xor
subl
into
xor
mov
aas
test
cli
pop
int3
std
lds
out
leave
call
mov
addr16
sub
xor
ss
mov
out
repz
dec
jne
mov
rcl
aas
aaa
add
cmpsl
inc
popf
add
ss
mov
mov
and
repz
pop
ror
cmp
mov
xchg
push
sub
nop
lret
sbb
push
push
jle
or
or
sub
inc
or
and
jecxz
jge
or
inc
sahf
inc
pusha
push
dec
data16
add
mov
inc
ja
mov
ja
add
xchg
mov
jo
and
jbe
xchg
pop
lock
clc
jb
add
pushf
add
sub
dec
fadds
and
jns
add
and
add
adc
mov
mov
js
push
aam
xor
xchg
hlt
fnsave
fstps
xchg
cmp
mov
outsl
xorb
cltd
pop
js
mov
mov
sahf
in
cmp
leave
arpl
cmp
loope
fnsave
add
and
and
push
mov
test
stc
aaa
xchg
cmc
and
test
xor
les
lods
xchg
cmp
sbb
inc
pop
lods
std
lods
fsubrs
ja
and
xor
push
or
popa
dec
punpcklwd
negl
jl
movsl
sti
mov
mov
data16
lea
sbb
cmp
push
stos
sbb
xorb
pop
out
rcll
mov
loop
movsl
jge
adc
mov
jo
bound
out
insl
push
sbb
ret
fidivrl
jecxz
push
sbb
fldt
xchg
sub
dec
test
add
pusha
iret
js
test
jge
add
ds
aaa
out
jp
out
add
rcrl
ds
in
mov
aaa
add
es
xor
pop
addb
fisttps
mov
xchg
addr16
jmp
test
stos
xor
rol
add
scas
sub
test
stos
add
in
xlat
and
inc
or
jle
and
mov
ret
cwtl
aas
jle
sub
pop
inc
pop
mov
jbe
aaa
nop
adc
fwait
add
mov
adc
js
fs
adc
das
adc
xchg
aas
pop
push
pop
jbe
mov
rorl
scas
dec
pop
test
and
ja
fmul
lea
imul
xor
and
pusha
test
cmpl
sub
push
in
hlt
dec
adc
mov
in
es
movsl
loope
add
repz
adc
ds
push
lds
mov
lock
daa
cmpsl
testl
adc
mov
jmp
daa
loop
orb
ja
incb
mov
loop
mov
pop
xor
add
nop
fucomp
adc
bound
daa
stc
dec
in
enter
inc
fs
ret
push
je
imul
push
push
pop
orl
addl
out
cli
std
pop
iret
add
lcall
or
xor
into
cmc
fnstsw
loope
sbb
add
rcll
add
xchg
mov
cmp
movsl
das
sbb
push
lret
xchg
sub
and
mov
fcmovbe
fldt
mov
ss
cmc
popl
pop
and
addl
mov
in
movsl
and
sarb
sub
je
inc
lods
in
fnstsw
imul
lods
aad
xchg
push
shl
cltd
mov
mov
cmpsb
in
test
pop
test
jbe
jp
fbstp
repz
mov
adc
imul
bound
pushf
add
and
pop
aaa
xchg
push
out
dec
pop
mov
mov
in
pushf
hlt
lods
inc
aam
adc
and
push
dec
xchg
pushf
ret
add
arpl
cmp
daa
negl
divl
mov
leave
fnsave
test
ret
mov
lret
in
or
andl
jmp
arpl
test
lods
movsb
cmpsb
aaa
xchg
jp
and
cmpsl
cli
andb
leave
push
subb
add
lds
pop
and
and
clc
pop
cmpsl
sbb
outsb
xchg
mov
shrl
cmc
jge
xchg
mov
mov
inc
inc
and
push
push
push
jbe
out
test
repz
out
aaa
sub
dec
dec
add
negl
push
repnz
mov
fsubl
aas
aas
dec
js
or
roll
push
lea
lret
add
or
cmp
push
jo
neg
out
jb
inc
popf
ret
xlat
les
ret
xor
pop
das
rcrl
stos
sbb
popf
sahf
bound
pop
dec
les
inc
sbbb
xor
jl
dec
push
je
sbb
mov
mov
sbb
ret
mov
lcall
dec
add
cmp
inc
rcrb
xor
jmp
sbb
dec
sub
test
mov
daa
addr16
mov
cmp
cmovo
in
pop
js
cmp
jl
sbb
loopne
cmp
das
jge
mov
jg
gs
pop
mov
or
in
jge
dec
dec
pop
ja
and
mov
cld
test
add
cmp
push
inc
in
jmp
fbld
dec
mov
int
xchg
xorl
stos
adc
mov
pop
lea
int
sub
bound
test
js
pop
lret
fildl
ss
xor
orl
sub
adcl
pop
jecxz
and
mov
jbe
jmp
dec
jbe
subb
push
sub
adcl
pop
pop
call
pop
push
adcb
lea
xchg
jb
add
jge
cmp
lods
testb
push
adcb
gs
divl
mov
andb
int3
cmp
jne
rolb
add
mov
in
xor
mov
in
cmc
pusha
cmp
nop
mov
loop,pt
cmpl
cltd
sub
sub
or
jns
or
cli
xchg
nop
hlt
cmp
pop
or
jno
or
out
stos
out
int
push
inc
jne
ret
nop
test
sbb
pusha
hlt
loope
in
inc
sub
cmpsb
adc
fldt
mov
jp
pushf
add
mov
cmp
xor
jno
or
push
adcb
push
fnstsw
and
out
sbb
xorb
call
add
push
mov
in
pusha
lds
pop
xchg
cwtl
jo
inc
test
negl
fwait
mov
xchg
xchg
mov
jg
lret
out
xor
scas
dec
cmp
aas
stos
leave
int3
pop
jmp
mov
pop
and
insb
enter
sbb
insb
popf
enter
cli
in
pop
jne
int
rcll
daa
int3
sahf
inc
cmpsb
pop
cli
clc
push
inc
xor
enter
xor
pop
jl
add
pop
jp
test
xchg
jge
fs
push
jbe
fldenv
push
push
add
inc
xchg
sub
pop
stos
xor
push
ss
repz
mov
lcall
and
out
mov
iret
sbb
pop
sbbl
int3
push
addr16
inc
sub
pmulhuw
aas
je
loopne
cmp
outsb
xor
lret
jmp
cmp
scas
and
leave
testl
daa
addb
jg
fildll
xor
sub
les
es
fcmovb
jae
jb
imul
das
jne
push
mov
add
and
xor
add
loope
insl
dec
lods
jae
in
stos
subl
cwtl
lock
jg
popf
cmp
cmp
movsl
mov
adcl
pusha
and
outsb
popf
out
pop
or
arpl
js
xchg
inc
mov
jp
push
mov
cmp
sahf
push
les
push
adc
push
jae
dec
js,pt
and
stc
subb
xchg
adc
sarl
aas
xchg
xchg
std
inc
outsb
jg
sbb
mov
pop
in
jge
arpl
fs
out
pop
in
mov
data16
jbe
adc
cltd
mov
inc
mov
ja
mov
mov
repz
mov
mov
xor
dec
incl
xchg
fldt
xor
adc
mov
sti
imul
jge
inc
test
incb
jae
lods
leave
inc
fisttps
lahf
mov
movsl
cmp
lods
add
push
scas
iret
mov
repnz
lods
push
push
push
sbb
mov
inc
pusha
mov
inc
scas
and
cwtl
pop
adc
xor
cmp
jo
pop
and
dec
xor
cltd
inc
enter
add
xor
mov
out
pushf
push
adc
jns
pop
sahf
push
aaa
dec
negb
sbb
lock
xchg
cmpsb
cmp
cmp
jmp
pop
popa
jmp
stos
sbb
and
sub
pop
daa
cmp
pop
ss
pop
sbb
fdivrl
pop
jne
mov
xchg
arpl
mov
js
insb
fimuls
pushf
jb
shl
add
adc
mov
push
mov
imul
clc
out
lds
enter
imul
xchg
popa
jo
clc
aaa
cmpsl
fsubr
nop
mov
fs
cld
mov
sub
jnp
or
push
das
mov
data16
lcall
aas
fdivs
jg
pop
loop
mov
inc
addl
ljmp
sub
enter
push
ret
hlt
mov
sbbb
pop
lock
mov
subl
mov
les
push
push
out
mov
xchg
add
mov
loope
fsubr
xchg
cwtl
cmp
scas
je
fxch
fnstenv
rorb
sbb
test
in
rcll
bound
xchg
pop
loop
std
fdivl
jge
fidivrs
push
inc
sti
cmp
scas
add
cs
fistpll
enter
popf
cmpsl
jb
xor
fadd
pop
bound
dec
xor
enter
out
movsl
mov
aaa
and
sbb
push
xchg
ja
sbbl
sub
cmp
mov
repz
andl
push
mov
jnp
lds
shr
jle
push
shl
ja
lret
mov
push
pop
xor
aas
jae
in
iret
mov
inc
setbe
push
cmp
bound
mov
lahf
outsb
cmp
loope
ss
mov
mov
in
pusha
cli
leave
cmp
iret
mov
dec
mov
push
arpl
push
cltd
bound
or
inc
daa
pop
stos
mov
js
ds
jnp
inc
out
pop
and
imul
bound
cli
sub
mov
mov
insl
clc
xchg
fnstenv
mov
mov
int3
jno
jp
jg
mov
mov
in
adc
data16
ljmp
lret
xchg
inc
test
push
or
bnd
outsl
mov
push
cld
into
clc
into
jl
nopl
xchg
sub
add
mov
inc
outsb
je
sub
adc
xor
jecxz
insl
ficomps
ret
adcb
xchg
jecxz
lock
inc
fs
xor
popa
pop
pushf
add
xchg
cld
gs
cmpsb
loop
int3
xchg
pop
sbb
cmpsb
jb
pusha
xchg
movsb
rol
out
mov
fdivs
dec
jecxz
sbb
and
movsb
and
lahf
fsub
jns
cltd
cli
and
movsl
fidivrs
fnstcw
pop
mov
daa
inc
hlt
xchg
sbb
jecxz
movsb
hlt
shr
cmp
jecxz
adc
push
push
push
pop
adc
sub
xchg
mov
jle
xor
out
inc
push
test
or
divl
jb
mov
popl
inc
mov
pushf
adc
xor
in
sub
mov
jle
push
jecxz
mov
jg
adc
sub
fisubl
xor
sub
sub
leave
cmp
dec
test
rorb
popa
add
mov
mov
mov
test
out
inc
mov
scas
repz
daa
sbbb
rep
js
or
std
push
call
adc
daa
pop
shrl
push
cli
in
out
sub
adc
jb
adc
lods
in
jl
hlt
and
xor
xor
test
sbb
pop
aas
dec
mov
adc
pop
jp
mov
insl
push
dec
pop
or
nop
mov
sbb
or
pop
pop
and
mov
insb
adc
lcall
mov
in
jp
aas
pop
lods
out
xor
lret
test
sub
outsb
into
mov
sti
insb
mov
popf
xor
in
popa
sbb
inc
push
scas
lahf
out
aaa
aam
rorb
jle
adc
dec
xchg
scas
jmp
xchg
lock
mov
mov
add
mov
int3
mov
gs
sbb
mov
sbb
sahf
pop
sub
cld
icebp
std
or
push
pop
dec
repnz
lahf
cmp
jmp
push
xor
ss
adc
jo
add
divb
jle
dec
xchg
dec
xor
inc
adc
dec
jmp
inc
inc
in
and
outsb
arpl
in
icebp
pop
dec
sub
fisubrl
jmp
or
inc
movsb
out
or
dec
cmp
push
pop
pop
mov
rcl
call
push
lret
adc
mov
lret
xchg
into
insl
scas
pop
out
sbb
and
mov
inc
push
js
leave
clc
xor
stos
iret
movsl
inc
add
add
sbb
lods
ficoms
or
mov
jns
pop
mov
ja
xchg
pop
lret
stos
std
movsl
push
jb
fisubs
scas
jns
jbe
jg
push
inc
mov
push
xor
mov
jmp
lcall
loopne
adc
lods
fistpl
int3
dec
js
fstl
pop
dec
push
sbb
loop
out
aad
cmp
lea
cmpsl
push
imul
pop
clc
testb
icebp
and
pop
jmp
mov
aad
test
mov
adc
clc
sbb
pop
aad
int
aad
and
mov
aad
test
xchg
loope
add
bound
sahf
test
lret
or
cmp
lods
repz
aad
into
hlt
call
dec
and
repnz
arpl
push
inc
std
jp
sbb
push
test
into
pop
push
iret
lods
xchg
xchg
cld
fs
int
inc
test
sbb
jns
inc
lea
jne
stos
sub
xor
movsl
fildll
mov
movsb
arpl
mov
gs
adc
or
fdivs
in
bound
xor
sbb
test
or
sub
jmp
mov
pop
aas
inc
cltd
sti
cmpsb
repnz
scas
push
jecxz
into
outsb
xchg
int3
add
add
shll
sti
sbb
fnsave
cmp
dec
mov
lea
push
pop
data16
mov
pop
loope
xor
addb
sbb
inc
sub
push
fs
mov
inc
push
inc
pop
out
jbe
shrl
neg
movsb
push
movsb
or
pop
push
rclb
test
or
sbb
push
push
cmp
jbe
cmp
test
out
pop
push
or
dec
sub
add
jmp
pusha
lahf
imul
xchg
out
xor
test
fnstcw
pop
mov
dec
and
enter
nop
pop
or
xor
or
sub
test
and
pop
rclb
mov
sub
data16
push
mov
sahf
out
mov
jmp
test
movsb
roll
xchg
int
in
add
std
in
into
outsb
mov
outsl
mov
filds
ds
xchg
jbe
fcoml
xorb
lahf
add
jmp
rcll
ljmp
jle
mov
add
adc
fstp
stc
or
xlat
ret
push
cmpsl
std
fiadds
dec
lods
lea
lds
xchg
icebp
repz
popf
fidivrl
aas
dec
hlt
or
scas
push
adc
ljmp
pushw
out
dec
dec
sbb
scas
lds
push
addl
int
das
mov
mov
adc
lret
mov
sub
loope
roll
js
cmp
into
pop
mov
or
pop
adc
mov
cmp
pop
or
int
daa
leave
mov
pop
mov
jl
mov
xchg
cltd
dec
js
int
pop
jmp
mov
jmp
jle
push
push
xchg
outsb
xchg
movsb
rcl
add
pop
sub
lret
cwtl
mov
xchg
adc
sbb
mov
xchg
pop
out
adc
jae
nop
out
lret
xchg
test
and
sub
push
fstpt
loopne
jle
insb
add
imul
sarb
dec
in
sar
push
dec
jns
test
mov
int
add
ret
jg
data16
push
stos
int3
inc
mov
add
or
inc
xor
mov
js
inc
repz
lret
jg
mov
test
cwtl
js
xor
stos
mov
sbbb
xor
jnp
xchg
or
je
add
ja
inc
insl
pop
lret
imul
sarl
sub
xor
adc
xor
sub
xchg
push
outsl
pop
test
popf
xchg
mov
outsb
fisttpl
add
push
sub
xchg
pop
pop
mov
push
push
cwtl
jge
test
add
cmpsl
jb
mov
add
mov
lret
inc
lret
popa
cli
iret
lea
repnz
ret
out
mov
shll
mov
repnz
jmp
cmp
inc
inc
mov
mov
jg
bnd
and
jns
lea
add
repz
fidivrs
add
lea
sahf
hlt
outsb
xor
js
xor
mov
adc
push
stos
call
jns
cmp
mov
loope
pop
push
jl
mov
iret
lods
mov
daa
stc
pop
hlt
xchg
push
push
xor
clc
and
fildll
movzbl
add
push
dec
pusha
shll
int
gs
cmc
ljmp
cwtl
pop
andb
inc
cmp
insl
leave
adc
xchg
or
ret
fs
adc
arpl
sbb
js
lret
pushf
push
iret
mov
push
adc
movb
sub
xor
or
mov
mov
inc
popa
rcrl
inc
aaa
in
cmpsb
icebp
inc
cmpl
lea
sbb
cli
sbb
insb
mov
test
rolb
cmp
pop
fwait
in
cmp
or
jl
or
inc
bound
in
test
cmc
roll
daa
in
and
cmp
jae
gs
xor
fnstcw
mov
pop
jge
mov
aam
addb
int3
outsb
push
je
jns
imul
in
popf
int
imul
push
cmp
std
jmp
pop
rcr
clc
mov
fidivl
xor
mov
push
mov
movsl
aad
add
lea
xchg
aad
andl
mov
sahf
adc
inc
fiaddl
loopne
xor
hlt
mov
dec
xor
adc
pushf
sahf
inc
pop
in
icebp
or
andb
rclb
adc
or
xlat
sub
xor
push
sbb
lock
out
addr16
loope
pop
shrb
add
loopne
insl
stc
mov
jns
sti
mov
xchg
xlat
jae
fisttps
jle
fbld
xchg
cmp
in
in
stos
sub
hlt
adc
push
arpl
cmc
add
jns
gs
cmp
je
inc
dec
dec
iret
xchg
mov
mov
int3
popa
adc
loopne
divl
ret
push
leave
sub
in
loop
cmp
leave
in
pop
push
mov
dec
das
icebp
cmp
aam
aaa
rorb
pushl
pop
lcall
sbb
or
mov
faddl
inc
loopne
lods
test
jp
rcl
adc
inc
mov
negl
stos
rclb
pop
mov
dec
repz
dec
mov
fidivl
sbb
cmp
pop
ds
jg
jns
jge
mov
je
fs
lods
lret
fstp
lahf
jno
adc
fistps
push
jae
neg
add
add
leave
sahf
cli
cmp
adc
mov
sub
loop
sbb
mov
lock
leave
push
out
pop
push
mov
in
mov
xchg
push
fsubp
repnz
in
adc
insb
mov
sub
fistl
xor
lahf
xchg
xorb
mov
push
out
cmc
push
scas
mov
dec
fdivs
call
popa
movsl
and
or
aad
jbe
or
jno
pop
cmp
fldenv
cwtl
jg
outsl
or
in
push
ret
out
cmp
xchg
or
push
adc
sbb
mov
fnsave
mov
adc
sub
xor
inc
dec
data16
mov
push
daa
cmp
js
pop
pop
or
ds
gs
cmp
je
lea
push
mov
popa
mov
dec
or
in
pop
jl
mov
push
xchg
sbb
cmp
cwtl
inc
daa
test
xchg
jge
ds
mov
pusha
mov
aad
pop
lahf
out
lock
out
lret
pushf
and
push
jnp
loopne
sbb
fidivrs
sbb
inc
inc
int3
ds
xor
push
cvtpi2ps
fcomi
sahf
push
icebp
xorb
das
sarl
pusha
and
jmp
outsb
insb
les
andl
and
repnz
aas
das
pop
push
mov
testl
sahf
dec
in
or
push
loop
add
lahf
and
jg
arpl
pop
iret
pop
ja
rorb
sbb
icebp
stc
pop
add
test
enter
inc
outsl
arpl
outsl
dec
std
push
sbb
dec
aaa
movsb
ss
push
dec
cltd
sahf
mov
inc
imul
leave
cmp
sbb
mov
mov
jl
inc
cmp
sbb
jno
and
pop
je
inc
and
sub
ret
sub
jo
jbe
sub
adc
ret
push
insb
sbb
popa
fldcw
mov
add
push
dec
scas
mov
test
dec
outsb
out
push
xor
inc
inc
sbb
sbbl
mov
dec
sub
cwtl
sub
repz
incb
pop
movsl
and
add
sub
mov
push
popf
in
out
insb
inc
sbb
ljmp
adcb
aas
xchg
lods
add
mov
bound
inc
xchg
add
negb
xor
idivl
push
add
movsl
and
imul
adc
xor
cld
in
inc
fidivs
sbb
sub
mov
adc
cmp
sbb
in
mov
dec
loope
mov
cs
pop
ret
inc
push
mov
mov
pop
sbb
xlat
mov
mov
into
pop
pcmpeqd
jmp
ja
push
leave
mov
dec
mov
inc
shll
test
aad
int3
pop
jbe
xchg
pop
lods
loopne
pop
shll
or
sub
aad
xor
cmp
pop
jnp
je
push
call
dec
setp
mov
mov
divb
cmp
ss
aaa
adc
es
scas
sbb
dec
jbe
adc
jbe
sub
mov
sbb
mov
add
mov
aam
mov
sbb
or
xchg
sbb
repz
cmpsb
rcrb
ss
out
sub
xor
push
xlat
iret
push
pop
xor
cmc
aam
aad
dec
inc
add
dec
push
adc
lcall
or
repnz
pop
outsl
outsl
push
lret
incb
hlt
lcall
mov
adc
adc
outsl
pop
pop
es
ljmp
xchg
test
hlt
cltd
mov
cmpsb
addr16
ror
and
lahf
jns
xchg
sub
mov
lods
out
aaa
mov
ljmp
cmp
push
dec
mov
mov
sub
and
cmp
das
xor
push
push
icebp
push
inc
test
cltd
cld
popf
pop
out
pop
adc
das
out
pushf
js
xor
jg
int
jno
bound
aaa
mov
repz
aaa
js
pop
jge
mov
sti
out
push
pop
push
inc
fstp
jl
pop
scas
in
xlat
jl
and
cld
push
cmpsl
sub
lock
xchg
or
je
aad
push
add
in
add
mulw
sbb
mov
mov
mov
std
xchg
into
pop
or
mov
push
enter
fsincos
lods
xchg
into
mov
inc
or
xchg
mov
push
adc
es
ljmp
or
dec
pop
sub
pop
dec
jno
mov
mov
dec
sbb
or
xorl
sub
dec
push
mov
mov
cmpb
cmp
jle
pop
fwait
jge
int3
cmp
popl
ja
jge
lods
lret
test
or
fdivrl
inc
aad
inc
insb
jno
test
aad
lods
mov
faddp
fs
xchg
out
arpl
out
mov
mov
out
test
lahf
popf
int
rcl
iret
js
inc
mov
jno
bound
inc
jne
sahf
int3
in
mov
stc
popa
dec
test
dec
sti
or
xchg
fsubp
rcrb
repnz
pusha
add
and
jnp
xchg
xchg
jb
stos
xor
jecxz
inc
xchg
cmp
or
push
fisubrl
cwtl
inc
and
stc
push
jmp
pop
inc
inc
movzbl
pop
mov
cmp
mov
mov
and
adc
mov
leave
add
pop
dec
pop
sar
in
insb
movsl
iret
adc
xchg
dec
push
aad
push
leave
dec
rcrl
push
js
dec
sub
loope
push
incl
push
fldt
or
adc
sub
aas
add
jb
mov
inc
in
into
mov
jae
add
data16
push
aad
mov
lds
cs
and
imul
std
repnz
movsb
das
mov
arpl
movsb
xor
cmp
mov
or
jmp
test
mov
push
mov
xlat
push
insl
sahf
inc
mov
mov
fld1
mov
mov
scas
popa
test
out
sbb
ret
add
mov
sub
sbb
outsb
loopne
xchg
rol
in
mov
popa
pop
jbe
and
lock
sbb
lods
cmp
shlb
mov
and
leave
push
mov
push
add
fisttpl
xorl
or
sahf
movl
mov
mov
outsb
movsl
jge
dec
mov
add
loop
inc
push
outsb
adc
jmp
push
fnstenv
push
mov
daa
and
in
jle
push
mov
das
pop
fisubrl
int3
jmp
imulb
das
hlt
push
lods
bound
push
inc
or
jg
icebp
cmp
fisttps
mov
dec
popf
jle,pn
mov
scas
imul
adc
jecxz
jae
xor
aad
add
and
setg
enter
popa
cmp
adc
cmp
std
jno
adc
jl
push
or
fstpt
mov
inc
cltd
xchg
mov
pop
hlt
mov
cmp
fdiv
test
jge
adc
adcb
mov
dec
jne
outsl
aas
nop
cmc
dec
jo
scas
insb
and
in
jbe
cmp
lahf
and
loopne
leave
movsl
insb
out
xchg
xchg
cs
aad
xchg
arpl
loope
sub
or
jns
mov
cmpsl
mov
idiv
out
or
push
xor
sbb
jmp
mov
inc
int
sarb
jnp,pt
cmpsl
shlb
orb
ja
add
push
lret
mov
scas
pop
dec
je
pushf
adc
push
mov
pop
sub
mov
sub
xchg
test
into
iret
dec
out
jo
mov
in
cli
sub
movsb
jno
ret
scas
cmpsb
cwtl
inc
repnz
dec
je
mov
rclb
out
sbb
inc
xlat
push
add
das
or
insl
cmc
jmp
ret
sbb
mov
bound
in
cld
orl
sub
adc
test
pop
sbb
insl
or
call
addl
popa
xor
pop
sub
outsl
mov
and
fs
jl
lahf
insb
mov
push
sub
pop
lahf
push
or
fld
pop
aam
xchg
mov
sarb
cmp
fldcw
xchg
lret
mov
mov
out
testl
lahf
pop
mov
mov
inc
sbb
call
and
xchg
jp
push
roll
std
sbb
jl
or
jae
mov
mov
jb
imul
dec
sub
xor
ret
lcall
sub
sbb
mov
nop
push
push
repnz
rolb
push
pop
push
xchg
out
jle
aam
lods
sbb
int3
adc
scas
or
dec
inc
test
push
pop
sbb
pop
jle
jg
sbb
ret
popf
stos
das
add
add
movsl
pop
xor
push
aad
lods
outsl
push
dec
inc
sarb
mov
fmuls
xchg
mov
repnz
add
jp
insb
push
add
arpl
dec
jno
pushf
test
cmp
cmp
xor
sub
push
movsb
xchg
dec
testl
sub
into
or
mov
mov
lea
xor
sbb
dec
sahf
fisubrl
xchg
xlat
cs
es
mov
lea
in
xchg
pop
or
pushf
scas
sub
std
pop
into
inc
fldenv
outsb
fwait
int3
xchg
pop
iret
jg
out
cld
mov
dec
sarl
andl
popa
sbb
cmp
sbb
out
btc
stc
adc
daa
sub
mulb
fildll
sahf
and
dec
add
sub
xor
rorl
out
popf
add
mov
addr16
sub
jl
imul
cmp
faddl
unpcklps
dec
xor
sub
cli
data16
mov
and
sbb
dec
sub
sub
dec
nop
inc
std
xchg
test
xchg
test
lret
dec
or
int
fsubs
jo
sarl
or
push
jmp
stos
in
adc
push
mov
bound
mov
push
xor
adc
or
movsl
jbe
leave
add
rcll
xchg
aas
ds
push
call
pop
cmpb
ret
mov
cmpsb
stos
jle
mov
loope
test
outsb
iret
lods
je
aam
clc
push
fs
lods
push
or
mov
and
mov
ljmp
pop
inc
jne
pop
fcmove
xchg
push
xchg
cmp
lock
or
aam
outsl
les
into
sarl
mov
rorl
fistpll
std
jecxz
jnp
push
or
xor
ret
mov
jp
jo
mov
in
movsl
andb
sar
std
stos
popa
aaa
imul
dec
cmp
cmpb
mov
lret
in
fdivl
in
and
popa
pop
and
mov
xor
jns
push
cmp
add
lret
mov
push
xchg
ret
push
hlt
mov
fwait
xchg
in
in
lds
adc
pop
std
xor
leave
je
out
fisubl
mov
stc
fld
add
ficompl
xchg
aaa
cmpsl
cld
aas
fdivs
jno
jg
stos
jecxz
jo
jp
incb
js
jl
add
xlat
jno
nop
cltd
adc
jle
cltd
and
pushf
jns
imul
pop
mov
mov
pop
ret
xchg
rolb
lea
inc
ret
xor
movsb
dec
cltd
imul
xchg
push
and
xchg
ret
xorl
jns
adc
adc
daa
jno
push
inc
fdivrs
adc
imul
jg
dec
scas
xchg
jg
sub
mov
mov
loop
lock
xor
jmp
lret
pop
jno
dec
or
outsl
pop
out
ficompl
push
jge
loop
mov
negb
sarl
fdivrs
mov
mov
inc
jno
inc
cmp
dec
popa
dec
mov
pop
dec
xor
lods
test
popf
mov
xlat
mov
sbb
add
ljmp
roll
or
popf
lahf
lods
rol
push
ficompl
sub
fstps
or
jae
jecxz
cmp
pop
ja
loopne
inc
mov
sbb
outsb
or
in
jo
test
shll
push
je
add
out
inc
pusha
into
pop
xchg
sbb
pop
movsb
xchg
add
add
cmp
ror
ret
pop
mov
imul
push
pop
inc
insl
push
sbbb
pop
push
idivb
pop
cmpsl
movsl
dec
insl
sbb
push
mov
xor
adc
shl
xor
cli
call
out
test
inc
mov
mov
movsb
mov
int
lock
pop
cmpsb
xchg
xlat
xor
ss
movsb
sbbb
cmpsb
fistps
mov
xor
sub
dec
faddl
sbb
fwait
out
cmc
push
fiadds
fbstp
cmpsb
mov
stos
out
stos
punpcklbw
sbb
inc
lods
aaa
sbb
sub
arpl
jnp
out
popa
inc
out
adc
xchg
or
lods
adc
test
das
add
into
mov
lret
mov
stc
repnz
sahf
jp
xchg
cltd
sti
jns
shld
inc
push
inc
out
imul
cmpsl
sbb
push
lods
hlt
xor
add
cmp
mov
sbb
push
lret
inc
sahf
idivl
pop
sbb
cs
cld
enter
incl
outsb
imul
pop
es
imul
insl
jmp
cmp
rorb
sbbb
mov
sub
sbb
jae
ret
mov
dec
push
jg
dec
cmpsl
scas
imul
shlb
cltd
dec
and
push
lahf
sub
inc
mov
mov
pop
mov
pop
push
mov
sarb
cmp
clc
xchg
enter
js
sub
loopne
insl
ljmp
mov
jg
test
mov
sbb
lret
and
xor
pop
repz
inc
dec
daa
xchg
dec
out
jnp
shll
scas
pop
insl
jmp
mov
sti
adc
icebp
out
lret
mov
mov
pop
adc
pop
imul
xlat
jecxz
bound
sub
xlat
push
mov
int
mov
mov
arpl
jbe
or
in
mov
in
pop
xchg
jns
jns
aad
jecxz
mov
mov
lea
shll
lret
pop
subl
sti
xor
adc
sub
orl
xlat
int
dec
cmp
mov
pop
sahf
mov
inc
or
and
jmp
push
pop
inc
dec
adc
outsl
ret
fldl
popf
xor
add
imul
fnsave
or
jne
fstps
sbb
stos
shll
insl
or
sbb
cmp
cmp
inc
or
imul
ret
fdivrs
loop
adc
or
jne
sbb
push
jecxz
sub
push
inc
xchg
cs
adc
sbb
xchg
push
ret
jp
adc
jmp
fldl
test
lock
cmpl
cld
int3
mov
mov
inc
out
push
inc
fyl2x
dec
dec
add
push
cmp
aaa
pcmpgtd
lods
xor
jo
inc
mov
sub
xchg
cwtl
and
xchg
out
daa
adc
mov
ss
inc
xchg
sbb
push
stc
stc
dec
sbb
rcr
sub
xlat
std
mov
mov
pop
fwait
adc
cwtl
push
xchg
sahf
leave
mul
pushf
jecxz
or
popa
cmpsb
fwait
rcr
ja
xchg
inc
cmpsl
mov
popf
mov
push
int
cmp
cli
pop
xchg
fsub
jns
shll
sub
rolb
pop
das
frstor
adc
out
ds
or
imul
xchg
xchg
in
pop
mov
xchg
out
stos
jg
and
xchg
mov
sbb
push
xchg
mov
lret
sbb
lods
lods
ds
mov
fdivrl
repz
popf
fcmovne
cwtl
xchg
xchg
lods
mov
dec
mov
mov
sbb
fsubs
jae
cmc
or
add
scas
add
pop
push
sbb
pop
aas
rcrl
add
mov
lock
leave
mov
inc
aas
gs
pushf
push
inc
push
loopne
int3
and
push
movsl
jp
sub
mov
mov
leave
jb
mov
in
push
int
leave
mov
add
pop
add
mov
jb
or
sub
add
mov
jne
xor
daa
or
push
lods
fiaddl
fxch
jns
arpl
cmpsl
xchg
call
cli
jbe
aaa
shrl
orl
lahf
xor
rclb
loop
sub
sub
mov
pop
inc
sahf
lock
jge
add
sahf
cli
lods
icebp
cmpsb
cmp
jo
rcr
test
call
cmp
mov
test
push
adc
mov
and
rcll
sbb
jb
mov
decb
xor
pop
inc
mov
in
or
push
add
adc
fadds
jbe
add
dec
dec
fwait
sti
mov
cmp
or
jge
lock
popf
mov
fdivrs
mov
xchg
push
cld
fucomp
sub
sub
push
fs
dec
add
push
filds
xlat
fmull
or
cli
mulb
mov
imul
mov
xor
dec
mov
mov
and
lahf
in
xchg
sbb
test
shrb
sbb
sub
dec
adc
push
lret
adc
jp
scas
xlat
mov
mov
or
jg
stos
jmp
push
pop
fisubs
jg
lret
repnz
rcr
adcb
ds
sbb
inc
jecxz
jecxz
rolb
add
aas
add
inc
xchg
mov
push
orl
push
scas
push
cmp
or
xchg
adcb
jmp
mov
test
adc
lock
mov
in
pop
xchg
cmp
lock
cmp
shlb
cmp
addb
inc
push
sarl
divl
shr
jmp
sti
test
int
in
mov
xlat
mov
sbbl
jnp
jbe
mov
jge
jecxz
and
imul
loop
jmp
aam
out
nop
les
xchg
test
dec
jge
mov
sub
popa
maskmovq
notl
cmp
add
in
jo
fldenv
pop
cmp
icebp
movsl
gs
mov
insb
inc
and
pop
mov
xchg
mov
scas
jae
sub
sub
push
fidivs
mov
jecxz
inc
cmp
jmp
mov
loopne
inc
mov
push
add
les
inc
cmc
jge
adc
out
adc
stos
jne
sbb
or
pop
stos
inc
or
loopne
jnp
mov
adc
adc
movsl
enter
adc
sbb
and
mov
sub
mov
adc
xor
pop
ret
in
in
out
mov
mov
je
jae
pop
dec
loopne
mov
addr16
jp
setns
mov
divl
imul
jbe
mov
pop
jge
and
movsb
xor
mov
leave
mov
xchg
pop
frstor
aad
pop
aad
inc
jb
push
sbbl
std
mov
add
dec
adc
outsl
test
jae
js
clc
out
xor
sbb
fdivrs
xor
in
or
dec
dec
mov
lods
mov
aam
fdivrl
lods
ret
inc
sbb
jne
sub
outsl
xor
sbb
xor
inc
fnstenv
push
jp
xchg
add
xchg
push
cmp
mov
test
rcrb
negl
dec
mov
jae
pop
sbb
push
repz
xchg
and
mov
mov
pop
fnstsw
dec
popl
xchg
sbb
sbb
bound
inc
and
or
negb
jbe
call
mov
inc
mov
lock
into
orb
mov
lahf
pop
dec
shll
cmp
inc
xchg
add
fadd
push
dec
gs
dec
pusha
mov
loopne
adc
in
and
les
xchg
mov
in
xlat
loope
lahf
mov
popa
cmp
shrb
loop
std
mov
test
inc
or
imul
fstpt
inc
cmp
lods
roll
stc
lret
dec
pop
dec
push
inc
xor
das
jmp
inc
push
mov
inc
scas
cmpsl
xor
loopne
add
out
and
jnp
fadd
iret
mov
arpl
nop
dec
jecxz
dec
dec
cs
ljmp
xchg
pop
push
xor
xchg
mov
sti
clc
mov
pop
ds
mov
sbb
jecxz
add
pop
movsb
add
sub
fists
daa
xor
data16
mov
pop
mov
push
inc
jbe
mov
sbb
mov
xor
xchg
fnstsw
xor
scas
pop
inc
subl
data16
push
daa
mov
movsl
cmpsb
das
mov
or
fildll
orb
data16
cmp
ljmp
imul
xor
and
divb
dec
xchg
xchg
add
and
outsl
mov
adc
pop
push
mov
ret
push
mov
sti
insl
out
aam
add
icebp
xor
andb
mov
outsb
neg
int
cmpl
xlat
lds
sub
mov
cli
or
push
push
push
add
push
std
mov
jg
imul
inc
add
inc
ja
cmp
loopne
and
int3
mov
ficompl
or
rclb
cmp
dec
mov
insl
mov
and
scas
in
mov
pop
mov
mov
xlat
mov
mov
jp
pop
int
lock
or
cltd
aad
sbb
insl
and
xchg
cmp
loope
xchg
or
sub
das
addr16
rorb
std
test
ja
fwait
andl
xchg
fsubrl
dec
push
iret
lds
mov
or
cmc
aam
sbb
and
dec
sti
dec
xchg
ljmp
in
scas
sub
and
cmpsl
mov
in
pop
test
orl
pusha
cmpsb
jo
sbb
sbb
rorl
jg
popa
dec
scas
scas
push
stc
jg
pop
dec
sbb
aaa
xchg
sbb
xchg
inc
inc
pop
jae
fs
sub
shlb
and
enter
stc
pop
dec
lods
pop
scas
mov
ljmp
pop
lea
jmp
movsb
and
jmp
dec
out
imul
mov
cwtl
sahf
loope
pop
pop
mov
mov
stos
xchg
dec
pop
lahf
enter
mov
mov
or
sbb
fs
mov
pop
pop
pusha
or
and
mov
aas
inc
out
push
mov
jae
das
dec
or
mov
out
addb
out
rcrb
ret
pop
mov
stos
cmp
ret
scas
in
push
scas
rcr
outsl
out
jmp
sub
rcrl
in
mov
dec
cmp
popa
push
or
or
mov
mov
and
adc
mull
mov
jae
xorl
fdivrs
fidivrl
out
mov
push
cmc
hlt
cmp
decl
or
xchg
fisubl
mov
adc
sub
je
jge
enter
and
push
aaa
pop
scas
popa
clc
aam
adc
xor
movsb
in
mov
push
xchg
lds
cmp
xor
pminsw
sbb
jecxz
mov
adc
pop
movsl
or
out
xor
cld
adc
scas
mov
add
mov
push
bnd
sub
sub
lret
mov
scas
mov
sarl
cld
jecxz
sbb
in
sarl
leave
jns
icebp
into
jecxz
aad
cmc
xor
repz
dec
sbb
dec
aaa
inc
jbe
fidivrl
lods
adc
push
adc
jecxz
shlb
xchg
xor
inc
push
adc
jae
jmp
stc
popf
push
hlt
push
mov
xor
out
sub
into
and
inc
push
clc
adc
pop
enter
dec
adc
xor
xchg
sahf
std
cltd
fmuls
into
jbe
push
int3
mov
fcmovne
fadds
add
or
inc
shl
insb
lds
mov
jp
sbb
loope
insb
sbb
cmc
xor
lar
mov
and
lret
jns
cltd
clc
dec
cmp
jl
sbb
push
loope
pmulhuw
adc
ret
jnp
jns
fisttpl
mov
cmpb
out
cs
add
out
int
add
fadd
jmp
fsubr
bound
popa
add
and
mov
pusha
jns
inc
outsl
cwtl
mov
adcb
xchg
push
push
inc
and
dec
cmc
cmp
push
cmp
push
dec
dec
cmp
push
jp,pn
push
xor
sub
sbb
dec
and
mov
jae
outsb
shrb
mov
jne
xchg
sub
pop
roll
insb
shlb
outsb
ret
stos
mov
push
xchg
pop
xchg
into
arpl
pop
mov
mov
jp
movsl
leave
sbb
xchg
scas
out
fnsave
xchg
dec
and
sub
and
loop
push
aad
dec
aad
and
push
mov
jo
popf
mov
pop
cli
movsb
or
mov
mov
out
xchg
push
xchg
aad
pop
and
add
cmpb
sub
fcomps
mov
icebp
pop
hlt
jo
addr16
add
ret
enter
repnz
enter
clc
lods
mov
test
xor
inc
cmpsl
pusha
addl
iret
fnstenv
or
sbb
stos
mov
sub
push
adc
sub
add
pop
push
mov
mov
inc
sbb
pop
cmpsb
sub
mov
lods
adc
lds
or
or
push
mov
pop
iret
mov
aad
push
mov
and
xchg
or
popa
lock
sbb
add
sub
pop
je
push
add
ror
push
pop
dec
dec
jge
and
mov
bound
jbe
mov
pop
xchg
dec
xor
mov
push
add
ja
sub
mov
dec
pop
pop
or
inc
pushf
dec
xchg
jl
in
mov
addr16
divl
pop
mov
imul
movsl
cli
or
adc
mov
add
cs
lahf
popa
scas
adc
cmpsl
or
push
into
mulb
dec
fldcw
jmp
sbb
push
loope
lahf
jge
push
mov
push
notb
cmp
mov
dec
pop
out
repz
cmp
xchg
inc
stos
or
data16
in
ffreep
pop
mov
mov
or
sti
nop
cli
jmp
cli
dec
push
and
inc
fiadds
cmp
cltd
jo
sbb
rcrl
int3
cmp
adc
in
dec
lds
pop
jbe
scas
sub
push
cmpsl
jbe
or
fcomip
mov
pop
ss
xor
les
push
jle
hlt
mov
cmp
jns
dec
roll
push
out
orb
mov
push
pop
ljmp
and
add
lsl
pop
mov
pop
mov
dec
cmp
pop
adc
lock
fwait
push
pop
shlb
add
inc
dec
in
popf
or
adc
fwait
daa
add
or
movsb
push
es
jne
hlt
xchg
sbb
cmc
gs
push
cwtl
mov
mov
mov
mov
lods
ficoml
arpl
xor
mov
jb
clc
jecxz
xchg
inc
fdivl
jbe,pn
loop
jecxz
out
add
stos
sub
sbb
inc
cmp
jmp
sbb
out
add
movsl
sbb
jl
into
or
push
push
pop
call
in
push
jge
or
fimuls
pop
out
lods
ret
nop
mov
into
stos
int
dec
popa
mov
xor
pop
and
jl
popa
lcall
and
mov
faddl
jb
add
inc
mov
jo
cmp
pop
insb
jge
sbb
push
into
test
adc
mov
lret
mov
sub
movsl
stos
dec
cmpsb
dec
jl
jecxz
mov
and
jbe
fistpl
inc
sub
xor
fsubl
mov
jle
ss
mov
mov
pop
add
inc
mov
sub
in
mov
out
ret
push
cld
insb
inc
sub
ja
scas
lret
stos
mov
iret
loop
ret
xlat
into
push
out
cmp
ja
sub
xchg
add
jmp
es
ss
sti
addr16
dec
cmp
and
jno
das
loope
lock
repz
dec
xor
xor
test
fstpt
xchg
mov
lret
je
adc
cltd
movsl
into
imul
mov
inc
pushl
cmpsl
arpl
test
outsb
inc
add
xchg
test
jecxz
cmp
jmp
mov
ja
jns
andl
sub
fidivl
out
ss
adc
mov
insb
adc
bound
mov
jp
xor
xchg
xchg
pop
xlat
nop
cmp
pop
sbb
and
in
push
sub
sbb
cwtl
add
std
mov
mov
or
andl
mov
mov
dec
and
scas
scas
cs
enter
mov
and
ss
pop
cmp
stc
sbb
and
fdivr
lods
mov
pop
stos
sub
mov
hlt
sbb
imul
cmpsb
cltd
rep
mov
dec
sbb
cmp
jg
or
enter
adc
int
push
sarb
dec
fwait
inc
push
jo
push
sub
inc
sbb
mov
pop
aam
aaa
repz
pop
sbb
pop
cld
insl
rep
lcall
imul
lock
jecxz
pop
xor
xor
repz
mov
or
jmp
cmp
cltd
dec
add
movsb
sbbl
aas
leave
dec
out
mov
add
push
adc
jmp
jmp
sbb
in
xor
inc
lds
cwtl
out
clc
insl
test
mov
xor
mov
xor
pop
out
sbb
es
or
mov
xchg
rcl
imul
cmpsb
adc
in
enter
add
xchg
inc
cmp
pop
fldenv
int3
mov
ret
flds
pop
dec
cmp
mov
call
cmpsb
iret
cmp
jle
imul
xchg
push
inc
movsl
sahf
test
push
mov
jecxz
cmc
mov
cli
mov
imul
sbb
outsl
xchg
pop
mov
dec
xor
jmp
popa
dec
or
iret
push
adc
divl
out
jno
aaa
inc
inc
jno
jno
inc
lret
arpl
mov
insl
fs
out
adc
insb
les
repnz
testb
dec
sbb
sti
and
jl
push
sbb
push
test
sub
sbb
push
outsb
out
adc
adc
add
mov
pusha
cld
arpl
je
cltd
push
xor
dec
jge
xchg
scas
cltd
sbb
hlt
inc
push
xor
xor
mov
mov
lcall
xorl
cmpb
out
inc
xor
addb
lea
push
mov
inc
into
mov
aam
xchg
push
push
add
or
jge
cs
fs
hlt
data16
xchg
pop
int3
sti
in
sbb
bound
call
pop
test
sub
pushf
out
or
ja
mov
dec
pop
les
fwait
push
jnp
bound
call
inc
cmp
les
dec
inc
mov
push
jecxz
insl
sbb
scas
test
or
dec
popa
lods
cli
mov
shlb
int
pop
xchg
xor
into
call
scas
stos
sub
push
mov
xchg
adc
pop
jne
mov
fs
ret
or
mov
push
lcall
repnz
sarb
fbld
shl
jnp
into
lret
adc
and
or
lahf
inc
jns
repnz
call
sub
xchg
out
out
pop
cmp
jl
aam
shll
loopne
jmp
xchg
hlt
lahf
nop
adc
shlb
in
and
jg
in
in
repz
sub
cmp
incb
imul
in
pusha
int3
or
popf
add
xlat
xchg
xor
fistps
cmpsb
std
lds
push
push
dec
pop
pusha
adc
test
push
xchg
dec
jne
out
mov
or
fisttpll
jbe
dec
into
and
dec
fwait
dec
jno
std
repz
test
cmpsl
sub
iret
loop
je
sub
sbb
gs
or
mov
push
notb
push
sub
sub
in
arpl
xchg
mov
mov
xchg
pushf
xor
lahf
cwtl
orl
test
and
dec
xlat
jne
rcll
push
ret
test
addl
outsl
push
out
mov
fistpll
pop
jmp
imul
inc
mov
or
or
movsl
mov
ss
scas
daa
sub
inc
xchg
jns
sbb
push
vpcmpeqw
lods
or
je
es
mov
mov
ja
bound
push
sbb
push
push
repz
inc
and
add
sbb
outsb
dec
push
push
cmp
dec
xchg
inc
sti
insl
add
stos
add
loop
stos
jg
stos
xchg
lea
lcall
cmpsl
jno
add
mov
jne
xchg
frstor
push
push
mov
sbb
fdivr
and
negl
xchg
jg
iret
xlat
push
mov
xchg
test
pop
ret
cmpsl
jno
cmpsl
sub
mov
les
sub
das
xor
insb
mov
es
popf
push
xor
in
ljmp
sub
shll
add
cmc
jl
out
iret
outsl
jecxz
or
add
loop
mov
or
bound
loop
jg
es
mov
add
ljmp
lret
fucomip
enter
adc
data16
pusha
mov
dec
adc
andb
add
outsl
inc
xlat
or
and
push
lods
jp
inc
add
fwait
and
mov
sbb
fiaddl
les
mov
loopne,pt
push
mov
lret
or
add
int
pop
fldt
mov
dec
inc
inc
xchg
jbe
pop
jmp
push
popa
adc
push
adc
fwait
jge
insl
adc
int
repz
into
iret
pop
pop
daa
adc
pusha
push
divl
pop
test
stos
cltd
cltd
stos
inc
inc
jnp
xor
mov
jmp
test
xlat
cli
sbb
cld
mov
pop
mov
cmpsl
scas
jno
rorl
pop
pop
sahf
jp
push
test
jbe
jae
test
int
inc
xor
repz
int
jb
gs
add
jb
push
inc
dec
ja
repz
xchg
inc
cs
data16
pop
ror
dec
inc
add
pop
inc
add
xchg
shlb
cmpl
pop
fs
inc
popa
xor
xorl
cmp
int3
and
lcall
insb
out
movsl
subl
mov
sahf
or
lea
test
mov
out
imul
loope
xchg
adc
mov
mov
nop
sub
cli
sbb
addl
adc
xor
insb
sub
shll
repz
icebp
lea
dec
jl
inc
pushf
scas
pop
es
bound
scas
lret
xor
je
inc
jp,pt
sbb
push
rcr
cwtl
fimull
fwait
lods
stos
mull
mov
pop
mov
in
dec
jno
cli
loop
rcll
outsl
cmp
add
imul
ljmp
push
fistl
mov
aaa
in
insb
iret
jle
add
push
add
movsl
add
xchg
mov
xchg
dec
int3
fs
fcoms
icebp
dec
popa
addr16
adc
and
nop
xchg
jno
shlb
imul
shl
stos
clc
leave
mov
lock
xchg
mov
pop
adcl
pop
mov
sbb
mov
pop
cmp
mov
cmp
call
movsb
test
imul
mov
or
daa
addb
repnz
jecxz
popa
xor
test
or
adc
xchg
test
pop
repnz
xchg
sbb
insl
adc
mov
jecxz
test
and
jecxz
aas
fwait
lcall
jb
stc
mulb
push
fsubrl
in
movsb
mov
scas
push
adc
hlt
dec
loopne
insl
fildl
push
dec
mov
scas
pop
xor
mull
jno
mov
pop
or
mov
lret
sub
scas
in
js
cli
imul
push
xchg
cmp
test
je
and
mov
cmpsb
daa
lret
mov
aaa
push
cmc
push
in
push
andb
in
sbb
mov
mov
and
mov
ds
stos
xchg
pushf
and
inc
jge
pop
aam
xor
push
pop
shr
lcall
js
mov
inc
cmp
mov
movsl
xor
cmp
jae
fildl
icebp
icebp
jecxz
scas
xchg
addr16
push
jge
pop
jl
and
in
repnz
push
dec
and
or
sbbl
dec
adc
jnp
pop
lret
sub
ret
iret
push
dec
mov
hlt
push
mov
out
sahf
jbe
imul
rcrl
shll
xor
sub
fistpll
cmp
aad
mov
cwtl
out
mov
mov
out
iret
call
xor
jbe
shlb
jo
inc
shll
jge
mov
mov
jb
aam
cmp
in
inc
add
mov
xchg
jo
js
or
movb
inc
xchg
mov
enter
lret
stos
in
test
test
cmp
push
insb
xor
mov
pop
sub
mov
pop
dec
xor
sbb
lock
mov
or
rcl
push
popa
pop
aam
jne
inc
jl
mov
out
mov
test
mov
popa
xchg
or
loope
ficoml
jb
xchg
xor
jl
pop
data16
pop
lock
in
dec
loopne
rcr
lahf
push
dec
out
pop
movsl
cltd
call
enter
test
mov
jne
loop
pop
mov
mov
adcl
iret
cmpsl
xchg
out
xor
call
push
aad
push
dec
inc
mov
and
repz
shrl
adc
adc
out
jnp
lods
pop
add
sti
pop
stc
push
mov
cmc
cmp
ret
dec
call
and
lods
call
mov
inc
inc
cmpsl
mov
ljmp
fistpll
mov
or
insb
xchg
jg
nop
sbb
jbe
gs
push
popf
int
mov
cmp
add
cmpsl
hlt
out
push
es
aam
add
mov
divl
inc
shll
add
fistpl
or
inc
cmpsb
mov
dec
shll
stc
jnp
daa
xchg
test
mov
jbe
sub
in
xor
cld
mov
xchg
jg
arpl
ja
negl
insl
jae
lcall
fistps
repnz
sbb
cmc
setno
test
xchg
ljmp
mov
mov
out
add
xor
test
xchg
dec
ror
mov
insb
xor
test
andl
lds
dec
cld
sbb
jge
xor
test
dec
push
push
lcall
xor
mov
mov
inc
adc
lret
scas
popa
lcall
xor
das
in
xchg
adc
leave
dec
and
mov
mov
jge
mov
sbb
jns
insb
mov
pop
lds
xor
push
dec
and
xadd
lods
testb
jne
out
lea
scas
inc
pop
fwait
aas
mov
dec
addr16
outsl
fsts
movb
and
aam
sahf
sbb
aam
dec
in
ret
lcall
jbe
adc
sbb
xchg
and
repnz
icebp
sti
nop
loopne
stos
push
cmp
lgs
add
jnp
es
mov
pusha
and
mov
cmp
enter
ja
add
jb
jno
add
mov
xchg
push
dec
rcr
cmp
jg
push
adc
sbb
xor
or
inc
out
xchg
adc
pop
or
jg
das
fidivrs
push
sub
fmull
push
add
push
aad
mov
inc
mov
push
mov
aam
xor
xchg
dec
nop
aam
cmpsb
stc
cmp
sub
sub
call
out
test
es
and
cmp
fistpll
test
push
orb
pop
xor
aad
icebp
pushl
lret
sbb
mov
push
out
icebp
cmp
jg
sub
fisttpl
jno
in
adc
test
popf
mov
jae
add
sub
fistps
mov
lret
ja
or
sti
out
shrl
mov
xchg
adc
xchg
mov
xchg
mov
lds
out
jle
add
push
inc
xchg
sub
popa
mov
ljmp
ret
mov
pop
in
scas
push
pushf
sarl
and
pusha
pop
ret
jg
sub
out
mov
add
inc
pop
and
imul
dec
adc
rcrb
gs
pop
out
cmp
cli
sarb
lock
jnp
sub
or
shl
pop
jecxz
or
mulb
mov
sub
cli
mov
or
arpl
mov
test
dec
jl
jp
inc
xchg
xor
aad
pushf
test
ds
xchg
outsl
icebp
neg
cwtl
mov
push
dec
sub
dec
cmp
insl
mov
mov
pop
xchg
dec
clc
jb
mov
dec
jle
in
xchg
cwtl
mov
ret
in
push
mov
in
jecxz
cltd
lods
jne
jno
mov
inc
pop
push
mov
jmp
loope
jns
xchg
insb
cmp
out
inc
inc
aam
jge
ret
jae
test
sbb
jmp
in
mov
add
pusha
inc
test
sbb
sar
loopne
mov
jge
and
push
aaa
xchg
xchg
add
ret
jle
xor
test
out
or
adc
jg
addl
leave
jge
arpl
add
lods
cmc
mov
push
xchg
into
dec
divb
mov
sub
or
stos
jae
sbb
push
imul
mov
lahf
test
lea
adc
jmp
mov
sbb
ret
test
pop
mov
loop
daa
adc
out
adc
sub
lcall
add
ret
sbb
inc
mov
adc
dec
and
pop
and
addr16
andl
add
or
sbb
sub
or
cmp
repz
jb
push
mov
sub
sub
add
inc
cwtl
inc
or
push
adc
sbb
inc
mov
leave
rclb
mov
sub
enter
divl
mov
xchg
cltd
jbe
ror
sarb
addl
inc
add
rcll
dec
popa
jge
insb
push
loop
jns
repnz
scas
andb
push
push
enter
pusha
insl
popf
mov
jbe
pop
adc
add
dec
jmp
jbe
add
jno
cmp
jle
pushf
sub
add
cltd
mov
sbb
cmp
pop
std
stos
popf
push
scas
out
dec
imul
or
fmul
or
sbb
loope
ficomps
mov
cwtl
or
inc
mov
stos
fisttpl
mov
pop
gs
jne
out
add
outsl
cld
mov
mov
imul
jmp
and
mov
test
ss
jo
adc
scas
fwait
into
shlb
sbb
outsl
jg
dec
icebp
test
adcl
std
push
mov
xor
aad
mov
gs
sbbb
pop
fwait
lods
jo
popa
xchg
xor
cmpsb
push
scas
xlat
xchg
fcomip
push
dec
iret
mov
int
adc
adc
pop
mov
bound
orb
add
mov
add
subl
and
int
xor
ja
ds
cmp
pop
fiaddl
je
addr16
jae
lds
ss
add
lcall
jnp
jno
push
idivb
fdivp
push
jo
push
roll
or
cwtl
sub
ljmp
jae
xor
int3
int3
cmp
in
mov
insb
sub
jmp
aaa
pusha
fidivs
xlat
loopne
and
xlat
std
mov
fbld
dec
inc
adc
or
addr16
jg
xor
sbb
movsl
jno
hlt
rolb
or
aam
lods
mov
insb
jb,pt
xchg
inc
cmp
push
sbb
mov
stc
push
pop
call
inc
sub
nop
ret
dec
sahf
jo
xchg
bound
mov
into
jbe
mov
jbe
xor
and
std
iret
lds
pop
pop
loopne
inc
sbb
cmpsl
or
inc
sbb
dec
mov
inc
sti
xor
mov
hlt
inc
and
pop
add
stc
add
int
push
les
pop
outsb
mov
pop
jmp
cltd
cmpsl
sub
push
or
adc
cmp
rcr
dec
or
std
mov
push
das
cmp
mov
jle
std
addb
cmp
mov
fstpl
push
aaa
adc
cwtl
outsl
mov
fld
shll
mov
imul
jb
mov
fbld
ja
sub
add
rcll
mov
mov
pop
hlt
pop
sbb
lds
ret
xchg
jno
inc
cltd
inc
idivl
xchg
or
cmp
xchg
cmp
scas
les
push
cli
pop
and
push
sti
cmp
mov
lret
adc
dec
dec
add
stc
outsb
adc
aas
dec
xchg
inc
adc
lea
pusha
mov
lds
inc
inc
jno
inc
pop
mov
ljmp
cmpsl
mov
sarl
dec
scas
mov
sahf
or
in
rcl
pop
pushf
xlat
pop
adc
sub
adc
out
stos
hlt
test
stos
jmp
xor
neg
pop
pop
rorb
lret
jg
aam
imul
add
fadds
div
pop
into
mov
push
and
push
xorl
xor
mov
adc
das
test
lock
stc
push
lods
ja
jp
dec
lods
pop
xchg
mov
test
lret
stc
ja
mov
sub
out
cmc
bound
xchg
mov
dec
aad
pushl
hlt
out
xchg
push
xorl
pop
das
aam
xlat
loop
ljmp
and
or
push
notb
insb
sub
sti
mov
push
shr
je
xchg
jne
lods
jae
push
cli
loop
cmp
adc
mov
nop
testb
mov
push
pop
popa
inc
pop
push
pop
das
movsb
or
sbb
lret
lcall
mov
icebp
add
mov
test
cmpsl
fnstcw
dec
insl
int3
mov
sbb
adc
xchg
shll
jecxz
mov
sti
into
or
imul
jnp
cli
dec
rcr
lods
in
mov
loopne
push
into
cwtl
xlat
bound
scas
mov
out
sbb
cmc
adc
iret
fisubrs
xchg
or
mov
add
aas
inc
cmp
and
adc
outsl
sub
cmc
jmp
mov
pop
neg
into
fstpt
js
jl
shlb
sbb
sub
add
pop
pop
test
xchg
cwtl
orb
fwait
pop
or
pop
ljmp
shll
je
pop
cmpb
cmp
sbb
cmp
or
fbld
or
mov
aas
xchg
mov
mov
adc
pusha
int
imul
add
inc
cwtl
jl
sbb
gs
movsb
sarb
popa
jbe
daa
inc
cmpsb
lea
lods
cmpsb
movsb
jno
and
and
pop
lret
pop
lods
push
or
cmpl
sub
xor
rcll
ljmp
test
adc
push
cmp
je
mov
mov
mov
fcompl
mov
push
roll
sti
in
std
scas
fstl
in
lods
movsl
or
cmpsb
cmp
sbb
fists
xlat
adc
fnstsw
cmp
popa
add
cmc
in
in
pop
je
lcall
cmpsl
sahf
insb
outsb
add
add
sahf
loop
cwtl
out
mov
mov
mov
sbb
add
sub
in
adc
xchg
and
test
icebp
daa
push
adc
adc
mov
jl
ja
jl
cmp
pop
pop
out
pop
cltd
xchg
cs
cmp
pop
xchg
and
xchg
sbb
std
mov
fnstcw
out
xchg
mull
adc
in
mov
js
mov
fwait
adc
pop
popa
pop
xchg
shll
mov
or
aaa
inc
or
mov
jmp
fs
cmp
mov
dec
in
adc
popa
lcall
adc
arpl
es
xor
rolb
das
mov
adc
mov
xchg
inc
inc
data16
movsl
inc
ficoms
or
mov
xor
mov
xor
inc
and
xchg
jnp
mov
btsl
ret
aad
les
jae
xchg
ljmp
inc
into
pop
clc
adc
das
pusha
push
mov
jle
mov
sub
adc
imul
pop
out
aad
shll
pop
adc
mov
je
pop
xor
sub
or
movsb
testl
xor
pop
test
ja
push
jo
in
mov
icebp
pop
mov
mov
pop
outsb
pop
pop
dec
cltd
cli
adc
inc
jns
int3
mov
xor
ret
out
jg
jge
adc
jno
adc
in
ror
sbb
cmpl
dec
arpl
or
mov
pop
mov
cmp
test
pushf
xor
mov
stos
mov
or
sbb
push
and
add
out
pop
or
xchg
lret
and
stos
adc
pop
fidivs
or
in
insb
push
das
in
dec
insl
lret
push
scas
icebp
push
lahf
adc
out
mov
sti
daa
mov
data16
fwait
sbb
push
pop
push
mov
popf
pusha
call
filds
pusha
sub
pop
pop
and
int3
lret
inc
movsl
dec
mov
mov
sbbl
or
clc
dec
les
pop
sbb
and
lcall
lods
jae
notb
jecxz
sar
sub
push
push
das
xchg
push
sti
or
into
mov
pop
ja
inc
adc
dec
jae
ds
mov
ret
std
out
lret
bound
add
adc
sarl
mov
stos
add
and
mov
enter
jae
dec
test
jle
push
push
sub
lods
leave
sahf
push
xor
jl
and
cli
add
sbbl
jae
jge
mull
nop
push
hlt
xor
sub
mov
lods
cmp
jb
sahf
lods
fwait
divl
fcompl
jne
daa
or
cmp
fmull
inc
xchg
jns
test
push
int3
pop
mov
mov
mov
jp
inc
sub
jno
rcrb
lret
xchg
inc
jae
pop
mov
cwtl
mov
fmull
and
arpl
xchg
xor
imul
sbb
xor
sub
out
leave
push
jle
jb
popa
sub
dec
pop
mov
jo
stos
pop
push
cmpsb
cmp
dec
in
or
sub
mov
or
sarb
inc
int
loopne
insl
mov
xor
xlat
pushf
xor
dec
push
xor
rcll
and
addr16
and
sub
jb
lock
in
mov
add
cmpl
mov
sbb
inc
es
pushf
aad
jae
xor
mov
push
jbe
mov
ds
jl
xor
dec
rcrb
fcomps
mov
mov
in
and
inc
inc
jmp
roll
dec
mov
add
push
jno,pn
out
sti
roll
lcall
mov
add
mov
mov
pop
jo
sub
movsl
aaa
jne
int3
sub
cs
aaa
int
aam
daa
shll
std
add
dec
imul
stc
shl
test
sub
pop
es
insb
insl
mov
push
mov
sbb
inc
jae
jge
xchg
dec
stos
push
inc
aad
push
cmpl
push
data16
add
ljmp
xchg
mov
inc
pop
fwait
sbb
jl
push
out
mov
out
dec
mov
mov
jmp
imul
cwtl
outsb
fdivl
fldenv
push
xchg
add
outsb
mov
cwtl
je
sbb
rclb
lret
xchg
xor
sub
ja
jmp
pop
in
faddl
test
mov
dec
movl
xchg
push
rcll
stc
inc
or
adc
push
pop
mov
push
pop
jmp
movsl
ret
aam
mov
test
and
mov
and
mov
mov
ss
test
mov
aas
xchg
adc
sbb
bound
mov
mov
dec
cwtl
or
scas
mov
or
inc
mov
data16
aaa
in
mov
xor
push
mov
mov
dec
pop
cmpsb
sbb
cs
idiv
sarb
popl
xor
mov
jns
cltd
jp
test
jp
arpl
push
mov
pop
bound
mov
andl
pop
sbb
inc
inc
mov
or
aam
or
in
fcomp
jmp
or
out
push
ja
pop
imul
movsl
mov
inc
daa
into
jbe
nop
jno
stos
test
inc
mov
cltd
out
dec
pop
sbb
mov
hlt
mov
dec
dec
xchg
mov
cmp
ss
jge
and
pop
popa
pop
into
mov
scas
push
add
inc
xlat
out
ficompl
stos
inc
sbb
les
xchg
and
sbb
cli
scas
jmp
stos
add
js
mov
mov
aaa
repnz
fsubs
mov
addr16
scas
lret
mov
mov
cmp
push
les
dec
sub
jp
bound
ud1
fdivrp
icebp
sub
push
jmp
movsl
add
push
test
cmpsb
pop
xchg
adc
cmpsl
push
aaa
in
or
aam
in
push
adc
push
test
inc
dec
add
cli
inc
ljmp
jbe
xchg
sub
push
add
icebp
mov
pop
ja
mov
mov
mov
and
fsubr
add
cmp
rcll
pop
lret
xchg
mov
int
rcrl
xor
xchg
adc
cmp
jae
mov
push
pop
jg
lret
mov
icebp
mov
ret
clc
push
pop
dec
movsl
inc
fnstenv
inc
repz
shlb
test
flds
push
aad
mov
sbb
loope
jmp
mov
sbb
call
pop
out
lods
ret
nop
or
cmp
imul
aad
insl
leave
dec
jecxz
jne
add
mov
enter
mov
enter
inc
imulb
nop
add
pop
lds
jecxz
pop
adc
pop
std
mov
jge
clc
pop
out
mov
mov
stos
push
mov
lret
push
fcompl
bound
mov
cld
insb
mov
aad
mov
mov
sub
mov
push
add
add
add
sbb
pop
pop
lock
inc
enter
jae
jmp
cmp
inc
adc
jmp
in
mov
dec
mov
clc
xlat
scas
int3
lcall
insb
popa
int3
add
jle
rolb
push
add
mov
cwtl
lods
dec
dec
dec
push
jmp
nop
and
in
pop
sbbl
jl
jb
stc
stc
xor
out
ret
mov
mov
into
sbb
adc
dec
pusha
in
mov
movsb
loope
add
mov
xor
jle
mov
out
ja
dec
cltd
mov
xchg
popf
cmp
negb
or
stc
bound
push
mov
ljmp
test
cli
sbb
sbb
mov
xor
cmc
loopne
stc
mov
pop
into
inc
pushf
add
lock
mov
adc
ss
mov
sub
aad
sub
icebp
insb
mov
bound
fsubl
or
cmp
inc
sbb
push
mov
cmp
out
negb
sbb
mov
aas
or
aaa
enter
or
push
mov
mov
push
repnz
andl
pusha
stos
mov
test
adc
ja
pop
sbb
loop
jle
neg
fcmove
mov
or
mov
xlat
fadds
jg
clc
pop
cmp
in
fyl2x
mov
scas
in
cld
jge
xchg
mov
nop
xor
jge
sub
cli
jne
iret
sbb
push
mov
insb
insb
test
mov
mov
mov
jno
xchg
gs
inc
and
in
testb
inc
cmp
sbb
lds
mov
push
movsl
pop
mov
sbb
addr16
in
fisubrl
push
out
fstpt
push
stc
xor
dec
aam
pop
arpl
inc
lock
jge
ror
mov
sbb
iret
clc
call
adc
push
pusha
cli
leave
jmp
sub
ja
cli
sub
lret
cmp
dec
cmc
or
push
sbb
jle
pop
sbb
fs
ja
mov
mov
addb
cmpsl
adc
sbbl
lock
dec
movsb
or
loop
int3
jb
mov
mulb
daa
shl
out
out
push
test
outsb
and
xchg
xchg
dec
xlat
lods
int3
mov
add
xor
xchg
or
xchg
lods
mov
pop
jmp
inc
mov
rorb
insl
adc
movsb
stos
pusha
cmpsb
jecxz
pop
adc
pcmpeqb
jnp
lret
insl
xchg
mov
notb
sahf
data16
cmp
sbb
insl
and
rolb
xor
mov
mov
and
lods
insb
mov
dec
xor
dec
xchg
test
cmpsb
lcall
sbb
ret
test
sub
inc
xchg
mov
sbb
loope
in
out
xor
adc
fstpl
ss
lret
jmp
xor
mov
rclb
xor
popa
test
mov
sub
pusha
push
scas
cmp
stos
iret
inc
call
mov
jge
mov
or
lret
and
inc
movsb
das
cmp
dec
cmp
xor
mov
movsb
inc
shrb
andl
xchg
add
sub
dec
push
iret
nop
sbb
in
ja
loope
mull
mov
stc
sub
push
xchg
cmp
mov
xor
jnp
push
addb
pop
lcall
mov
add
jns
lods
adc
sub
jl
pop
xchg
outsl
call
jg
stos
sbb
hlt
pop
jmp
mov
insl
cmc
mov
decl
sub
xor
adc
mov
or
cs
imull
pop
es
jle
pop
xchg
shlb
call
ret
cmp
jne
pop
inc
mov
dec
mov
fwait
mov
sbb
xchg
xchg
lods
sbb
sbb
mov
inc
mov
insb
pop
mov
sub
iret
jne
adc
std
popa
add
or
mov
movsl
fsubr
xor
xchg
jns
push
outsl
idiv
dec
sub
mov
cs
sbb
lock
adc
or
lods
jno
add
push
insb
jnp
dec
and
insb
mov
lcall
fwait
mov
add
pusha
pop
ja
fwait
test
push
subb
addb
repnz
jae
or
ljmp
pop
mov
or
cmp
mov
cmp
mov
and
test
pop
data16
mov
fisubrs
fldt
dec
push
and
pop
test
jb
mov
jl
sbb
or
jo
jl
or
insb
push
jp
sub
sub
mov
mov
ljmp
stos
add
or
sbb
in
cmp
push
mov
out
cltd
xchg
test
jecxz
dec
int
jb
lea
push
es
aaa
mov
inc
gs
add
hlt
adc
cmp
scas
mov
sahf
fstps
lds
test
test
loope
bswap
add
xchg
xlat
cmp
stos
mov
je
test
inc
xor
inc
ret
mov
pop
shl
les
insl
jne
jle
fucomi
cld
int3
stos
ja
adc
xor
repnz
pushf
mov
or
andl
lcall
repz
cmc
adc
loopne
or
mov
cmp
jp
sub
dec
ret
mov
and
sbb
je
sub
stc
sarb
out
xor
das
and
inc
inc
push
cmpsb
pop
mov
outsb
rcrb
mov
cmpsb
insb
jbe
mov
lret
mov
sbbl
mov
jg
les
push
xor
ret
inc
sub
mov
out
dec
out
enter
jbe
jecxz
ljmp
les
sub
std
mov
push
xchg
pop
or
divl
sub
mov
push
jecxz
inc
mov
push
scas
aas
lret
and
push
das
adc
les
mov
pop
jbe
push
or
std
lods
adc
cmc
adc
cmp
fidivs
sti
cmp
xchg
test
mov
adc
ss
mov
cmp
cmpsl
xor
jmp
xchg
jbe
jbe
cmp
xor
jp
cltd
xor
fildll
jp
outsl
je
test
jecxz
or
xchg
add
leave
or
mov
js
dec
int3
jge,pt
jne
dec
rorb
nop
mov
pop
mov
cltd
inc
gs
es
fmulp
inc
dec
xor
lret
aad
js
mov
inc
add
cltd
adc
mov
mov
rorb
popf
xchg
sub
sub
sub
sti
test
sbb
ja
jns
stos
fwait
jge
push
inc
sub
xchg
xchg
pusha
pop
mov
push
stos
xchg
jno
stos
lock
sahf
out
negl
scas
rcr
xchg
add
imul
roll
sbb
out
cs
pushl
mov
push
arpl
add
sbbb
sbb
inc
mov
jecxz
push
out
mov
ret
bound
cmp
ficoml
sar
add
dec
ss
insl
dec
jge
xor
xor
aad
into
dec
insl
mov
outsl
push
aaa
or
push
stos
int
shrl
jmp
leave
inc
xor
sbbl
mov
pop
jl
mov
dec
inc
clc
jecxz
and
add
cmp
sub
push
fisubrl
cmc
fsubrs
cld
xor
dec
push
adc
push
scas
xchg
and
test
push
shll
fcom
dec
aas
fidivs
or
daa
fwait
dec
dec
enter
mov
adc
mov
rcr
sbb
bound
leave
inc
mov
std
push
xor
sar
ret
fcoml
fcompl
fildl
mov
enter
xchg
aam
xchg
push
sbb
adc
aad
sahf
push
sub
sbbl
sub
adc
push
and
movsl
stc
jbe
movsl
jge
xchg
cmp
mov
daa
push
or
int
jbe
xor
jbe
int
xchg
cmp
movsb
dec
pop
adcb
fdivrs
xor
jb
pmaxub
jle
fwait
lock
push
sbb
setns
add
pop
xor
jnp
addr16
fistpl
repnz
jp
mov
negb
mov
stos
mov
stc
fstpl
es
imul
mov
adc
imul
sub
mov
cmp
int
into
stos
lea
xchg
dec
adc
xchg
data16
and
push
hlt
push
out
jg
mov
cmp
sbb
or
leave
push
cmp
scas
mov
mov
inc
mov
mov
test
and
adc
popf
push
shlb
jb
iret
cmpl
or
test
movsb
mov
or
rcll
mov
and
movsb
jb
sub
mov
adc
repnz
inc
insb
mov
insb
addr16
in
jno
jno,pt
movsb
and
jns
sbb
gs
jns
jnp
lock
dec
xchg
mul
pushf
mov
mov
imul
gs
ror
xchg
mov
cli
movsb
xchg
das
sub
inc
cmpsb
sub
pop
insl
popa
and
cmp
xor
adc
out
gs
outsb
scas
enter
popf
daa
popf
jbe
ja
inc
jmp
add
jecxz
fcoml
push
adc
or
negb
repz
xchg
scas
leave
imulb
jmp
cmpsl
sub
mov
sbb
add
cmc
ljmp
lea
scas
and
scas
movsl
push
mov
sahf
bound
jb
lfence
icebp
xchg
pop
rcr
cmp
cmpb
insb
push
bnd
mov
and
sub
mov
sub
mov
xor
lret
shl
add
adc
pusha
push
ficomps
jle
lds
mov
adc
std
pop
pusha
fcmovnbe
ja
sbb
mov
ficomps
sbb
cwtl
pop
aam
xlat
in
or
cmc
sub
sub
jmp
dec
or
cli
push
adc
jecxz
dec
inc
push
or
lods
mov
cmp
scas
andl
mov
out
dec
aam
test
lods
fsubl
lcall
addl
fs
cmp
pop
stos
pop
jbe
push
je
ret
or
fxch
fwait
push
jns
mov
cwtl
or
pop
jae
icebp
mov
inc
inc
stc
shrl
out
loop
adc
jno
imul
and
sbb
fidivs
sub
scas
cltd
mov
js
icebp
in
fs
sub
jg
stos
and
in
mov
dec
scas
sbb
cmpsb
cmp
add
sbb
out
xor
daa
xor
mov
leave
lahf
loop
add
cs
push
and
icebp
adc
out
jp
pushf
clc
in
sbb
sub
xorb
xchg
xor
xchg
pop
stos
jno
bswap
inc
je
dec
imul
cmp
les
push
in
lret
xor
stos
xchg
popa
dec
dec
mov
jg
pop
clc
lds
shrd
lods
pop
cmp
mov
das
rorb
fcoms
pop
adc
sbb
xor
dec
adc
test
stos
mov
adc
lahf
inc
or
fisubrl
jnp
adc
int3
xchg
bound
ljmp
pushf
inc
rcll
mov
outsb
push
add
mov
loop
xchg
lret
mov
jo
mov
xor
jge
or
add
add
ja
jp
mov
dec
lea
pop
in
mov
lret
jbe
cmpsl
sub
push
testb
mov
mov
imul
xchg
iret
pop
divps
adc
arpl
cmc
or
nop
int
repnz
test
fldcw
push
inc
popf
jbe
in
mov
cmp
or
imulb
dec
push
sahf
test
lods
adc
icebp
shll
xor
fsubrs
and
dec
inc
rcrl
dec
jno
push
jae
imul
or
cltd
stc
xor
sti
js
test
decl
jae
dec
fdivrs
dec
push
pushf
sbb
sub
sbb
cmpb
enter
loopne
cld
les
xchg
rcll
insb
jb
aas
inc
test
hlt
adc
out
xor
jbe
aam
sub
or
sbb
sbb
inc
pushf
ret
stos
jle
adc
mov
inc
jmp
xchg
add
ficompl
pop
push
dec
jb
push
mov
add
inc
int3
pop
mov
outsl
incl
enter
pop
popa
xor
add
lea
push
cli
push
in
push
fstl
lds
fmuls
inc
insb
jae
inc
int3
inc
shlb
lret
sub
dec
in
ss
sets
mov
or
pop
out
cmp
push
jnp
push
ret
and
cmp
sub
fwait
mov
mov
pusha
test
mov
adc
inc
mov
outsb
aaa
iret
sbb
sti
lods
jmp
dec
sbb
ret
test
mov
dec
enter
loopne
cs
inc
andb
int3
lret
push
jmp
popa
movsb
jo
leave
lret
test
and
mov
jmp
gs
sti
movsb
sti
dec
xchg
adc
xchg
cmpl
cmp
lret
sub
rcll
sbb
mov
xchg
fnstenv
sub
in
shrb
nop
inc
inc
rclb
mov
imul
loop
xchg
xor
pop
je
ficomps
cli
inc
insb
cmpsl
pop
add
jne
aaa
inc
movsl
popf
and
xor
lock
cmpsl
push
xchg
jg
dec
jae
inc
insl
dec
xor
and
xchg
shl
jp
inc
adc
cli
mov
lods
test
inc
jo
pushf
cmp
es
sbb
sbb
fistl
jb
fcmovne
mov
dec
mov
mov
push
ja
bound
sub
daa
jno
test
jg
mov
or
out
inc
mov
mov
sbbl
mov
lods
xchg
sarb
aas
hlt
js
and
mov
mov
push
pop
add
das
scas
mov
adc
xlat
imul
cli
mov
icebp
out
scas
les
ds
rcl
sub
in
shll
mov
das
mulb
mov
and
push
pushf
ret
cmp
bound
in
lea
outsb
shlb
mov
int
mov
mov
jg
iret
mov
in
aas
fadds
clc
fidivrs
aam
in
cld
lret
dec
mov
jb
aaa
insb
popfw
jecxz
lahf
in
mov
repnz
shl
jecxz
or
mulps
cmp
hlt
xor
clc
sub
mov
stos
dec
das
movsb
mov
test
dec
in
cmp
gs
scas
stc
stc
pop
xor
bound
lea
lock
push
mov
mov
sbb
adc
push
jbe
xor
xor
inc
mov
inc
ret
aam
insb
add
pop
in
sbb
lds
or
push
pop
sbb
scas
inc
shlb
cmp
inc
mov
adc
push
jge
xor
divb
inc
clc
push
shl
pop
push
call
adc
pop
mov
mov
jl
lcall
push
push
xor
and
mov
scas
jnp
subl
pop
inc
mov
js
push
notb
mov
dec
mov
push
and
mov
addb
loopne
popl
stos
push
jne
les
mov
sahf
into
mov
mov
or
xchg
push
pushf
xor
int
mov
add
lahf
mov
sbb
and
mov
or
mov
hlt
xor
pop
mov
and
or
movsb
jl
xchg
mov
jge
or
fiadds
aam
push
mov
push
addr16
push
push
roll
cmc
pop
cmp
mov
jl
loope
mov
jmp
mov
es
nop
mov
stos
pop
insb
ss
or
xchg
in
aas
mov
mov
adc
dec
fiaddl
cmp
xor
popf
cli
cmpsl
rcrb
aam
push
xchg
mov
push
xor
cli
pop
mov
dec
xor
mov
js
mov
scas
jb
pushl
mov
aam
add
xor
adc
imulb
sbbb
push
fcompl
lea
adc
lea
sub
testb
jg
adc
add
sub
xchg
gs
mov
mov
rclb
jmp
out
ljmp
dec
daa
dec
addb
ror
xorb
lock
out
rcr
lret
push
mov
addr16
or
mov
out
adc
popa
jne
push
mov
insl
sub
lods
int3
loopne
and
lcall
fisttpl
xchg
or
mov
pop
lcall
jne
ja
and
adc
and
jno
rolb
dec
das
js
aam
mov
adc
dec
xlat
mov
jg
pop
jg
testl
dec
lea
sub
adc
mov
cmpsl
fsubr
pop
popa
add
jmp
mov
mov
xchg
or
das
push
add
nop
adc
imul
pop
sub
daa
adc
jg
mov
ljmp
insl
negb
imul
sahf
out
iret
add
mov
and
xor
gs
or
jmp
dec
shr
inc
mov
dec
pop
ss
loope
adc
cmc
push
cmpsb
adc
dec
sti
dec
mov
xor
dec
cmp
mov
push
dec
fwait
out
movsb
es
fldt
pop
movsb
std
cmp
scas
movsb
pop
lahf
mov
xchg
sbb
fistpll
in
mov
and
jbe
out
mov
rolb
ret
push
jmp
aaa
popa
inc
sub
adc
sub
mov
idivb
push
xor
or
xor
sub
mov
icebp
jb
mov
nop
imul
int3
jecxz
sbbl
push
jp
xchg
pop
sub
outsl
mov
jno
lret
mov
test
popa
jl
outsl
and
push
aad
je
es
push
movsb
jl
dec
sbb
das
adc
aas
sbb
lea
insl
cmp
aam
sub
push
pop
xchg
dec
movsl
sub
ja
pop
lcall
lret
hlt
mov
cmp
xor
push
sbb
ds
mov
push
add
pop
enter
pop
adc
or
jno
xchg
pop
fwait
outsl
inc
or
cmp
push
pop
add
cmp
inc
cmc
push
mov
adc
outsb
mov
adc
iret
sub
adc
pop
sti
fbstp
or
jp
add
cld
mov
shl
add
aaa
aas
sbb
cmp
push
xor
pop
cltd
push
inc
and
test
xlat
mov
cli
xlat
lock
add
int
xor
addr16
dec
enter
sub
push
mov
push
popf
sub
or
stc
rcll
push
rolb
xchg
daa
pop
mov
out
orb
push
mov
cmpsl
movntq
frstor
mov
lea
lea
sbb
cli
je
mov
push
das
jge
mov
and
dec
ljmp
and
subb
repnz
push
mov
clc
mov
aad
fidivrl
sub
scas
pop
sub
in
and
ror
push
imul
in
lcall
push
loope
loope
ret
mov
iret
pusha
pop
lret
jmp
or
fidivrs
sub
clc
fcomi
adc
inc
rol
repz
sub
scas
loopne
cmp
out
dec
fisttpl
xor
fidivl
aam
fs
sbb
and
test
pop
mov
or
aas
loop
sbb
lea
and
leave
xor
add
or
adc
xor
or
cld
mov
mov
psubd
gs
adc
lock
in
mov
sar
push
repnz
pop
jbe
sbb
mov
mov
shl
jo
push
xor
inc
dec
dec
jb
lea
or
rcrb
pop
ficoml
push
adc
loope
loop
mov
fs
cmp
in
aas
pusha
addb
jo
push
ret
imul
cmp
pushf
sub
pusha
out
push
add
xor
scas
jl
stos
sub
or
pop
imul
adc
test
jae
or
dec
push
dec
jb
pusha
sub
push
sbb
js
mov
xor
inc
daa
sbb
lds
add
rcr
cmp
add
push
mov
mov
rcll
jne
or
or
add
sarb
jl
jb
ret
divl
mov
dec
dec
push
jecxz
jle
popa
repz
cwtl
pop
mov
iret
icebp
add
xchg
cmp
stos
push
aas
fldl
push
inc
mov
push
or
fisttps
ret
inc
add
outsl
xchg
mov
push
les
dec
and
scas
or
mov
push
mov
fwait
mov
mov
ljmp
es
sbb
ret
fiaddl
cmp
mov
xor
rorl
add
fwait
subb
test
mov
jle
adc
and
fdivrs
mov
popa
stos
cmp
clc
push
jle
cmpsb
cmp
movsl
sbb
adc
mov
int3
xchg
push
jns
xor
xchg
add
dec
inc
call
jno
cmpsb
pop
jne
mov
lret
sub
lret
dec
cmp
dec
add
shll
ss
scas
dec
jae
mov
inc
je
fadds
movsl
inc
int3
cmp
lds
and
ror
and
std
and
xchg
stc
jecxz
movsl
aaa
and
push
dec
fcmovbe
mov
aam
sbb
cmp
in
notb
add
outsb
mov
loope
adc
add
stc
and
cmp
xor
mov
push
ret
mov
inc
loop,pt
repnz
nop
arpl
scas
mov
aas
inc
ljmp
aas
cmp
fistl
lret
pop
or
out
and
pop
aam
sbb
cmp
cmpb
inc
lea
scas
pop
inc
movsb
ret
adc
pop
pop
or
fsubl
mov
and
jbe
inc
ret
lds
sbb
xlat
push
push
lahf
xchg
cmp
xchg
scas
fldenv
pmaxsw
fldt
and
push
iret
and
in
pop
out
fcmovu
sar
sbb
test
cli
mov
push
int
mov
stos
leave
aaa
ss
lods
mov
outsb
int3
cmp
out
xchg
in
mov
sbb
mov
gs
jne
jp
ffree
push
cmpsb
jmp
inc
push
je
aaa
pop
or
jmp
push
shll
xor
lcall
fisttpl
inc
mov
and
ss
mov
cwtl
cmp
repnz
adc
sbb
fsubrp
sti
movq
adc
repnz
sbb
sub
inc
lahf
jb
in
dec
decl
xchg
fiaddl
out
dec
and
mov
loopne
mov
xchg
mov
cmpsl
pop
mov
mov
movsb
insb
orl
test
sahf
cmc
mov
in
jge
cltd
mov
lods
ss
ljmp
cmp
add
push
aam
cmpsb
add
add
inc
adc
shrb
cli
jbe
ret
push
popf
mov
xchg
add
jb
into
cmc
mov
mov
xchg
xchg
test
inc
sub
push
faddl
jb
mov
dec
sub
inc
sbb
ficoms
push
cwtl
repz
decl
push
mov
fwait
add
stos
pop
cwtl
fdivl
int3
pushf
mov
add
popf
andb
mov
pop
add
pop
stc
mov
into
inc
aas
pop
testb
push
subps
cmp
out
nop
data16
popa
push
pop
repnz
fs
mov
das
nop
adcb
ret
jbe
and
and
aas
mov
xor
mov
or
aaa
popf
cld
cli
push
mov
xchg
bound
cs
aas
and
pushf
icebp
push
loop
mov
out
mov
push
sub
adc
in
mov
gs
mov
cmp
mov
sbb
inc
iret
outsb
mov
outsb
jge
jne
repnz
pop
mov
adc
cmp
cwtl
jmp
inc
mov
jl
push
mov
mov
and
xchg
stc
incb
mov
ret
sbb
xor
mov
in
xor
cld
mov
mov
adc
pop
push
or
aas
pop
or
mov
mov
adc
mov
and
iret
sti
subb
jne
int3
lods
mulb
mov
inc
shll
add
enterw
outsb
jbe
ja
push
popf
jp
ljmp
std
fimuls
mov
push
jns
push
cli
pop
fwait
sbb
popa
dec
pop
mov
xor
jo
pop
lods
xor
outsl
jno
mov
pop
add
popf
rcr
outsb
sub
sbb
jl
cmpsb
popf
jns
cltd
adc
cmpsl
cmpsl
jl
xchg
mov
adc
gs
pushf
test
insl
inc
loop
movsb
pushl
xor
mov
dec
jae
adc
dec
scas
loope
push
inc
in
pop
aad
or
enter
dec
lcall
cmp
out
xor
xor
and
test
mov
lcall
ljmp
clc
sub
xor
push
dec
shll
sbb
mov
jns
mov
push
inc
adc
in
pop
sbb
jge,pt
test
outsl
inc
movsb
sub
mov
les
add
fwait
and
pop
lea
adc
in
push
cmp
pop
mov
inc
cmp
cltd
fwait
mov
cwtl
sbb
push
sub
sbb
data16
out
jecxz
pushf
dec
add
add
mov
cli
js
aam
sub
jecxz
je
in
loope
ret
pop
mov
push
push
in
xor
ja
dec
inc
push
jns
fs
pop
cli
clc
test
inc
stos
enter
ret
cmpsb
jbe
iret
push
xchg
xchg
pop
inc
cmp
movsl
mov
neg
lock
jle
dec
jnp
imul
sub
push
push
push
cmp
pop
mov
or
out
cmp
shlb
fidivrl
mov
adc
and
aaa
sub
xor
xchg
push
rcll
ret
sub
push
sti
sbb
loop
sub
sub
lret
fistps
test
add
dec
or
cmp
in
sub
jle
icebp
dec
pop
int3
out
mov
leave
pop
jae
and
mov
add
pop
fs
and
push
inc
and
imul
and
xchg
pop
push
in
repz
lret
ret
js
sub
and
int
test
adc
adc
out
mov
cmc
mov
pop
mov
adc
push
mov
idiv
or
push
enter
ficompl
sub
incl
or
jnp
push
repz
and
mov
jbe
lcall
sub
cs
lret
dec
fldl
jle
cmp
inc
stos
bound
cli
sahf
or
stc
dec
aaa
pop
cld
push
push
mov
cs
xchg
pop
xor
out
xchg
and
mov
and
insl
sahf
xor
inc
lahf
sbb
xchg
iret
out
mov
leave
xchg
enter
dec
xlat
lock
sbb
cmp
repz
int3
fiaddl
sti
in
xor
mov
test
dec
xlat
pop
or
mov
aad
aam
jo
shll
push
add
dec
movb
fisubrs
enter
sbb
out
leave
push
clc
bound
sbb
add
xchg
aad
cmpsl
xor
and
cmc
add
incl
loope
push
loope
mov
push
repnz
icebp
xchg
inc
fwait
idiv
dec
iret
arpl
cmpsb
popf
das
out
lret
push
daa
imul
xor
and
or
and
repnz
pop
add
xlat
idivl
xor
sbbb
es
lahf
dec
push
inc
fwait
mov
pop
pusha
and
loope
push
sub
lret
repnz
xchg
jl
leave
push
inc
jns
stos
out
out
fwait
pop
jecxz
sbb
jg
loop
xchg
jbe
roll
popa
push
fwait
push
push
pop
repnz
cmc
mov
loop
imul
pop
push
inc
push
or
sub
jno
orb
daa
jmp
xchg
fists
xor
outsl
outsb
cmp
test
rorl
jno
xor
jg
bound
loopne
dec
mov
or
test
xor
insb
sahf
clc
mov
cmpsb
push
mov
pop
mov
xor
lods
fdivrp
into
repz
xor
mov
inc
aam
idivb
mov
fsts
int
cmpsb
loopne
in
lods
stc
repnz
pop
imul
xor
aad
rcrb
sub
xchg
mov
testl
or
not
lea
jmp
leave
popf
jmp
ret
dec
fcoml
mov
pusha
shlb
or
aas
sbb
cltd
sbb
repnz
sti
jmp
mov
fstps
xchg
sbb
lret
push
or
inc
xchg
jns
mov
je
mov
jne
mov
sub
outsb
dec
jns
stos
sub
pop
iret
sbb
push
mov
sub
or
lods
inc
mov
arpl
xor
mov
sub
pop
ljmp
adc
sbb
ss
mov
outsb
inc
push
push
insl
ljmp
int3
and
cmpsb
mov
repz
fistpl
cmp
inc
cs
bound
or
lods
mov
gs
and
loopne
fwait
mov
jo
inc
pop
out
sbb
movsb
aad
jb
data16
ret
aaa
into
mov
pop
test
bound
sub
mov
nop
cmpsb
scas
jb
bound
and
mov
add
mov
aaa
js
jmp
imul
cmp
hlt
cwtl
dec
or
push
imul
cld
cmpsb
std
out
pop
pop
xor
push
add
inc
loope
push
mov
push
inc
inc
xchg
inc
repnz
jl
mov
aad
jno
lods
adc
mov
mov
and
clc
enter
scas
pop
jmp
push
push
mov
imul
sbb
xor
sbb
popf
insl
divl
aas
popl
mov
jge
int3
pusha
je
or
scas
bound
mov
sbb
jmp
aam
outsl
cmp
out
cmpsl
aad
ja
sbb
in
push
add
jge
rcll
stc
roll
in
std
popf
testb
mov
lea
sbb
push
lret
roll
js
lret
sbb
xchg
inc
fmull
push
std
stc
sbb
push
mov
fs
gs
push
push
stos
cmpb
popf
aam
popa
xor
jecxz
pop
lcall
sub
lret
adc
ds
cmp
cmp
xor
and
mov
pop
orl
cmp
cld
mov
and
pop
cmc
in
push
fsts
pop
repnz
cli
jbe
mov
pop
insb
mov
shlb
in
std
lret
inc
inc
mov
sub
ds
loope
and
mov
push
dec
jne
adc
int
push
out
je
and
test
ret
aam
add
pop
inc
cmp
shr
xchg
fwait
mov
aaa
scas
or
data16
popa
mov
leave
scas
adc
jb
cld
or
adc
mov
mov
adc
and
or
mov
loop
lahf
in
jnp
inc
cmc
pop
std
popa
aad
xor
push
out
add
fisttpl
and
aam
mov
push
xor
rolb
outsl
pop
mov
fsubs
icebp
or
insb
pop
shrl
ret
pusha
push
cmpb
pop
or
push
push
fisubl
jb
pop
push
les
pusha
popa
adc
ljmp
lret
roll
inc
inc
dec
sub
cmc
int
add
mov
push
fstpt
pushf
pusha
lods
cmpsb
fwait
pop
add
in
adc
sbb
jns
repz
adc
addl
jle
push
stos
loopne
shll
sbb
fimuls
pusha
lret
xchg
dec
popa
outsb
movsb
ret
sbb
sub
push
xor
sbb
out
push
in
stos
fdivl
sbb
push
adcl
into
mov
or
cld
jle
inc
inc
xlat
pop
mov
push
cmp
push
jecxz
dec
and
sahf
sbb
repnz
cmp
xor
ja
out
cli
insl
in
sbb
add
data16
and
mov
loope
inc
cmp
mov
dec
test
ret
cmp
add
rclb
xchg
inc
add
cs
jge
loope
scas
lret
ret
mov
dec
fcomps
repz
ds
jno
inc
adc
add
dec
aaa
test
nop
test
repnz
stc
loopne
mov
fsubrl
inc
int3
adc
xchg
out
in
lret
mov
cmpsb
xor
clc
test
data16
loop
sub
or
jmp
cmp
popa
inc
push
mov
mov
push
lods
adc
aaa
xor
out
dec
outsb
cmp
in
pop
mov
xchg
stc
dec
jle
enter
push
jl
adc
push
or
dec
sbb
cld
scas
lds
addr16
jmp
insl
mov
push
nop
imul
or
jl
pop
sarl
idivb
shr
lahf
sbb
mov
cwtl
mov
popf
jnp
or
outsb
sbb
pushf
les
roll
movb
shll
or
jnp
daa
mov
xchg
jge
lds
mov
jae,pn
call
imulb
ds
cmp
push
aas
cmpsb
je
shlb
lods
lock
leave
clc
out
mov
add
jns
jmp
mov
and
in
mov
sti
popa
imul
adc
pop
mov
aas
lret
pop
mov
ret
fnstcw
arpl
mov
xchg
lcall
stos
pop
mov
leave
je
repnz
jmp
cmp
repnz
inc
jno
in
xor
dec
inc
pusha
pop
mov
push
dec
inc
repz
mov
adc
jmp
or
jecxz
or
mov
mull
jmp
loop
or
fmuls
mov
mov
mov
test
and
mov
add
adc
cmp
es
clc
cmpsl
cmp
mov
push
addr16
cwtl
jb
adc
jecxz
lcall
pusha
cmp
sub
mov
adc
popa
push
jnp
cmp
sbb
lods
or
loope
stos
rol
sahf
jb
imul
cmp
ja
dec
mov
cmpsb
pushf
inc
adc
test
push
xchg
or
test
lods
imul
pop
leave
dec
cli
lea
outsb
push
lock
push
pop
mov
mov
int3
adc
push
aad
or
in
mov
jge
add
mov
ret
pop
std
lods
ret
fimull
add
or
mov
mov
test
xchg
outsl
jo
push
push
mov
jecxz
mov
repnz
lret
inc
stos
inc
arpl
inc
mov
pop
roll
dec
adc
jo
fistl
cmp
imul
aas
setge
fcmovnu
pop
cmp
ret
adc
ss
jp
sti
in
jb
lods
andl
icebp
stc
roll
adc
mov
into
cli
xchg
je
sub
push
xor
adc
cmp
jle,pt
aas
mov
test
dec
mov
or
add
or
push
inc
fbld
sbb
xor
stos
xchg
loopne
or
push
pop
sub
lods
adc
aam
cmc
aas
jnp
arpl
mov
mov
imul
insb
jo
fbstp
js
sti
aam
cmp
movsl
jmp
cltd
jae
dec
out
clc
xor
sub
fnstenv
ret
sarb
aad
and
cmp
iret
clc
dec
push
cs
push
ror
xor
adc
cmp
cmpsl
pop
mov
adc
push
pushf
and
inc
xchg
mov
scas
test
sbb
fiaddl
mov
inc
movsb
mov
push
outsb
ret
aas
cmpsb
loope
movsl
std
and
sub
mov
mov
mov
arpl
out
repnz
in
xor
xor
xorl
out
fstps
ja
enter
enter
testb
inc
icebp
dec
jg
mov
hlt
call
or
aam
arpl
mov
sub
out
mov
cmp
inc
xor
xchg
rcrl
or
stos
clc
fdivp
or
cmpsl
ss
sub
dec
mov
dec
test
xor
push
add
inc
scas
mov
cmp
add
adc
data16
int
xor
clc
push
jns
cltd
jle
push
push
repnz
flds
cmp
xorl
jecxz
repnz
or
sbb
add
mov
cltd
or
stc
xchg
jmp
sub
icebp
into
add
mov
fsubs
jge
push
push
xchg
inc
dec
sbb
fsub
mov
xor
add
fstl
test
outsl
jmp
addr16
xchg
stos
and
ss
divb
dec
sbb
mov
push
repnz
stc
ja
cmp
stc
and
dec
repnz
idivl
dec
dec
cmp
xor
push
dec
addr16
pop
subl
cmp
bound
in
cmpb
pop
jecxz
push
int
ret
push
sbb
cli
iret
outsb
sub
mov
mov
shlb
inc
and
inc
mov
sbb
test
xor
enter
sub
jecxz
cmp
push
lods
test
insl
roll
pop
insb
dec
roll
repnz
ficoml
pop
aaa
push
or
lock
xor
sbbl
dec
cmp
in
rcrb
lea
xchg
cmp
shrb
cmp
dec
insb
push
and
cmp
int
dec
mov
inc
aam
sub
inc
data16
int
jno
xchg
lods
jecxz
push
test
sbb
test
sbb
xchg
xchg
js
adc
fcoml
xor
movl
add
adc
fcompl
jl
jno
pop
or
adc
mov
sub
add
fidivrs
fidivs
in
xchg
ficoml
repz
and
push
fwait
push
mov
dec
dec
sub
sbb
cmp
inc
test
push
aas
push
stos
mov
add
pop
hlt
rclb
cmpsb
pop
rcrl
int
xor
or
xorb
or
pop
pop
and
mov
push
add
push
pop
adc
test
and
jno
insb
pop
pop
jmp
stos
mov
js
scas
add
xor
out
sub
jp
mov
push
leave
xchg
xchg
leave
jne
ljmp
test
popf
lock
popf
imul
inc
pop
popf
mov
adc
out
ljmp
jle
jp,pt
mov
scas
jmp
and
hlt
cmp
or
xchg
mov
outsb
lahf
inc
sarb
arpl
data16
fs
dec
stos
jnp
insl
mov
les
clc
rcr
stos
fadds
popl
fildl
jb
and
cmp
orl
jne
adcb
push
out
icebp
fmuls
push
adcb
insb
pop
mulb
test
cmp
pop
pop
sub
sbb
xor
sbb
clc
mov
pop
shrl
fistpl
fstp
cli
mul
outsb
in
in
into
in
sbb
lea
pop
loopne
das
cld
mov
and
test
mov
fwait
ljmp
out
and
pop
lds
je
adc
and
jo
rcll
xor
jnp
cltd
and
adc
cmp
sbbl
xor
xchg
pop
dec
xor
or
xor
pop
data16
scas
cmc
pop
push
mov
mov
sub
inc
or
adc
sbb
lcall
in
mov
mov
cs
jle
imul
icebp
ds
and
stos
aam
adc
sub
mov
mov
sahf
or
jns
aaa
shr
pop
imul
jbe
insb
test
and
notl
rol
lds
shlb
mov
int3
push
ss
lods
jb
lds
lea
cmpsl
loopne
fisttps
fimuls
dec
cmp
xor
adc
lcall
mov
testl
cmp
dec
movups
add
lahf
repz
sbb
enter
adc
jno
jno
loop
inc
adc
push
imull
pop
lret
sbb
mov
fisttps
aas
fs
scas
fs
shlb
cli
push
pop
push
test
xor
or
jo
adc
mov
xor
aad
inc
xchg
xchg
jnp
cmp
add
in
mov
jecxz
push
adc
pop
pop
jg
fldenv
jmp
shlb
jge
and
int
mov
cmpb
aam
call
jmp
lret
mov
arpl
jne
gs
jno
int
sti
fwait
pop
scas
out
cmp
and
inc
addr16
and
decl
and
mov
pop
xor
outsl
lods
lock
pushf
in
sub
pushf
test
inc
xor
push
xchg
shl
and
or
lret
lahf
cmp
add
pushf
jle
data16
add
and
sbb
or
push
imul
out
sbb
xchg
nop
xor
arpl
lret
push
mov
pusha
in
fisubrs
sbb
shll
xor
lahf
loop
xor
sub
xchg
aam
clc
scas
pop
fwait
mov
mov
repnz
xchg
or
jge
in
and
adc
rcll
rolb
insb
pop
mov
es
mov
or
lret
dec
dec
lcall
cs
cmp
xchg
adc
pop
rclb
jb
push
inc
add
mov
shr
mov
sbb
sbb
aam
cld
lret
cli
and
adc
aas
fwait
iret
or
out
sub
or
push
jge
fwait
imul
xor
cs
sbb
jb
adc
mov
xor
push
add
xor
push
mov
call
enter
sub
jne
mov
add
bound
movsb
fsubl
int
mov
test
sub
mov
push
inc
dec
es
lea
into
mov
adc
jge
lock
xor
or
or
mov
inc
notb
dec
xor
add
stc
cmp
or
mov
pop
out
aas
xchg
or
xor
dec
sub
into
bound
jmp
sub
pusha
pop
lock
mov
rcrl
xchg
pop
fdivl
and
xchg
jl
mov
data16
sbb
pop
addr16
mov
jg
pusha
mov
or
pop
jmp
xchg
jnp
sbb
xor
pop
pop
sub
mov
fidivl
in
ljmp
jl
ss
jmp
pop
xor
loop
data16
xchg
std
pusha
push
imul
stc
xchg
dec
mov
rcl
sarb
pop
es
push
jb
mov
pop
scas
pop
mov
cmp
mov
xor
adc
and
add
outsl
pop
popf
xchg
lcall
leave
mov
jo
je
data16
cld
or
inc
lcall
xor
loopne
lret
adc
int3
mov
lret
jae
dec
lret
pop
jbe
pop
lock
push
pop
mov
cmc
or
sub
fcompl
lret
sti
in
stos
push
pop
stc
lds
adc
jns
adc
adc
repz
inc
test
rcrb
mov
das
cmc
lcall
das
sub
sbb
push
jl
andb
or
mov
data16
fcomi
outsl
dec
jbe
adc
xchg
mov
fldt
leave
std
mov
outsb
inc
lcall
dec
lret
mov
ljmp
jno
test
xchg
push
rorb
aaa
pop
jp,pn
insl
lahf
push
aad
repnz
push
sbb
sbb
sbb
sbb
fisubrl
xchg
das
push
lcall
int3
xchg
push
add
or
adc
stc
rcll
shlb
cmp
lret
push
repnz
fucom
rclb
data16
mov
mov
mov
dec
push
out
sub
lahf
inc
jmp
cmpl
sbb
push
mov
inc
mov
jp
daa
les
xor
pop
das
adc
adc
add
xchg
movsb
xchg
movsl
rclb
pop
adc
dec
mov
mov
and
insl
je
xrelease
sub
aam
pop
pop
es
in
mov
inc
clc
xor
sub
add
repz
je
dec
stc
push
xchg
sbbb
loopne
mov
js
jg
call
sti
out
cmpsl
mov
adc
adc
aam
xchg
pop
mov
xchg
jb
pop
scas
jge
shrb
mov
adc
repz
lret
push
cld
pop
in
or
cmp
fildl
outsb
insb
sbb
or
xlat
mov
adc
cmp
loope
add
enter
int3
test
dec
stos
cmp
adc
pop
bound
fldenv
dec
jmp
mov
lods
add
cmpsb
pop
or
or
adc
out
inc
mov
adc
cmp
pusha
daa
sarl
loop
mov
mov
out
cmpsl
imul
jge
aas
xor
loop
and
rorl
call
adc
add
mov
test
cmpsb
in
fs
outsb
pop
push
sub
add
or
stos
and
push
out
sbb
jge
pop
ret
leave
sbb
es
inc
popf
mov
test
cmp
adc
test
adc
mov
sbb
add
dec
imul
loop
movsl
stos
mov
call
les
icebp
pop
fs
popf
push
ds
pop
push
das
xor
es
incb
mov
jns
cmp
xor
jp
lea
add
ret
mov
out
jo
movsb
dec
or
fs
fistpl
push
push
jl
out
add
cmc
pop
or
outsl
adc
vphaddwq
mov
adc
pop
jmp
inc
xchg
stos
popf
lret
mov
inc
cmp
pop
daa
addr16
insl
sub
xchg
mov
test
rcrl
lahf
cmpsb
cmp
sbb
xor
add
xor
lea
mov
or
clc
inc
xchg
icebp
mov
ret
data16
add
push
xor
push
jmp
js
jno
mov
push
cmc
pop
cmp
mov
inc
into
adc
in
test
in
dec
andl
xor
pop
in
pop
sbb
xchg
mov
inc
test
popa
push
inc
add
js
je
mov
push
inc
cmpsb
jmp
dec
inc
sub
loop
das
fmulp
ss
fxch
in
push
cmpsb
and
cltd
mov
inc
shll
std
stos
cltd
outsl
pop
int3
ljmp
sbb
sti
mov
cmp
pop
pusha
add
inc
shll
jns
repz
jl
repnz
scas
and
adc
and
sbb
aas
repz
mov
sbb
xor
in
xchg
outsl
mov
dec
int3
pop
sub
jns
push
xchg
gs
aas
jecxz
fwait
and
jo
push
jo
ss
pushf
mov
js
xchg
or
test
outsb
and
lods
jle
sar
add
mov
add
xchg
hlt
loopne
std
mov
imul
pop
xchg
movsb
lock
lahf
jae
lcall
pop
bound
xorl
insl
ret
jp
pusha
xchg
mov
fst
adc
jb
push
loope
idivb
push
mov
push
adc
int
fwait
pushw
arpl
sbb
sbb
out
inc
sub
inc
add
dec
shl
and
adc
sarl
cmp
stos
mov
push
add
push
repz
cwtl
dec
stos
jg
fistpll
pop
cltd
arpl
sahf
push
sbb
ret
push
clc
dec
pushf
push
aaa
stos
pop
lds
inc
sub
sarl
ret
mov
push
lock
daa
fldl
out
int
gs
add
and
fildl
pushf
pop
out
or
and
add
sar
les
add
xor
push
sbb
imul
push
xlat
jg
and
lcall
push
xchg
adc
mov
je
stos
add
iret
aad
pushf
adcw
mov
gs
cli
std
xor
mov
lods
mov
cmp
or
push
sbb
add
cmp
adcb
and
lods
cmpsb
inc
jbe
xchg
xchg
fidivl
mov
dec
cwtl
mov
sbb
insl
sub
push
jnp
mov
pop
xchg
bound
aas
incl
lods
adc
popf
sub
test
inc
sub
fldt
cmp
push
scas
outsb
pop
push
cmp
int
out
jne
xchg
into
sub
addr16
or
add
std
pop
ja
cmpsl
lea
pop
inc
xor
xchg
out
jae
push
fcompl
loopne
inc
ret
mov
dec
cmc
adc
into
aam
adc
shll
or
jmp
shr
hlt
dec
mov
sbbl
insl
out
jnp
ss
sub
or
lods
mov
lcall
or
inc
mov
push
and
hlt
mov
push
notl
pop
inc
test
dec
mov
inc
dec
aaa
pusha
ljmp
sbb
icebp
movsl
fcmovnb
add
sub
jns
loopne
or
push
std
dec
mov
jo
dec
cli
insb
outsl
ret
sbb
jne
popf
loope
stos
fwait
dec
mov
aas
push
xchg
fmull
mov
add
dec
cmp
and
hlt
sbbl
and
cld
pop
pop
push
ss
test
rcll
int3
test
or
pop
ds
imull
mov
xlat
jne
je
call
xor
fsincos
xchg
arpl
fimuls
cmp
cld
jb
xchg
sbb
adc
push
lods
inc
push
mov
push
scas
xorl
les
xchg
adc
popf
scas
mov
pushl
add
out
test
inc
adc
and
into
sub
dec
pop
xchg
andb
ljmp
lods
lahf
lods
icebp
mov
cmp
jge
jbe
mov
cmp
pop
bound
fcmovu
les
push
lahf
jne
push
pusha
mov
std
cwtl
or
sahf
xor
cmp
xchg
scas
mov
pusha
iret
add
lods
sbb
aad
cwtl
mov
cwtl
and
out
xor
repz
into
ss
mov
xorb
ffreep
mov
jno,pt
or
int3
ljmp
adc
xchg
je
popa
pop
ss
pop
pop
push
sub
sub
mov
xor
out
jae
stos
enter
cltd
arpl
cmp
xor
and
jo
sti
test
cltd
lods
xchg
xchg
lret
xor
push
outsb
jo
dec
cmp
mov
pop
mov
call
loopne
jge
shlb
xlat
jno
xchg
fidivs
les
scas
mov
daa
inc
imul
cmp
push
or
add
arpl
pop
or
jmp
add
rclb
sahf
and
out
mov
push
gs
add
notl
and
ja
aaa
lea
scas
icebp
ljmp
adc
push
mov
cmp
and
cs
leave
jp
popf
movsl
aas
pop
sbb
jge,pn
push
mov
data16
cld
pop
mov
jp
fs
xor
push
das
mulb
dec
or
clc
shrl
ljmp
xor
ss
mull
filds
push
out
popa
cmp
test
adc
les
lahf
jmp
adc
test
pop
mov
dec
fadd
xor
inc
stos
mov
popf
repz
mov
dec
add
jb
mov
dec
nop
push
jb
mov
enter
push
popa
sahf
shlb
pop
or
inc
and
push
aas
lret
into
add
icebp
outsl
in
mov
leave
andl
ror
fmul
ficompl
in
cmp
fdivrl
mov
mov
mov
mov
cmp
js
xchg
cmp
mov
adc
das
push
mov
push
call
dec
daa
aas
inc
iret
push
pop
jns
js
insb
adc
jmp
pop
nop
add
adc
out
loop
dec
pushf
cld
cltd
cmp
shl
repz
xchg
gs
dec
xor
in
xlat
or
enter
mov
std
outsb
into
pop
ret
lods
cmp
sub
icebp
or
xchg
jae
cmp
in
push
pop
shll
cmp
fs
fadds
test
mov
std
cs
int
mov
test
cmp
lahf
adc
xor
dec
jg
enter
cmp
ret
imul
and
inc
dec
cltd
xchg
repz
mov
push
cmp
xchg
scas
in
lods
adc
push
sti
xchg
leave
into
fldl2e
dec
xlat
loopne
jno
stc
pop
cwtl
lret
jns
sahf
push
out
jecxz
into
push
insl
jecxz
or
pop
inc
xor
or
pop
sub
adc
int
mov
divb
out
repz
fdivrp
fcomps
cmp
int3
add
lods
mov
or
jmp
xchg
scas
in
xor
fwait
rcl
adc
cld
mov
fstl
sub
imul
sub
jbe
lods
fimuls
enter
jbe
addr16
push
jp
xlat
mov
sahf
fsubrs
mov
ds
les
sahf
stos
dec
xchg
jg
push
fwait
mov
inc
data16
sbb
loopne
push
mov
xchg
test
cld
stos
outsl
xchg
iret
ss
repz
and
jg
inc
mov
cltd
loope
mov
arpl
into
inc
pop
xlat
sahf
mov
cmp
repz
pop
stos
outsl
pop
subb
pop
dec
ja
andl
psllq
leave
outsb
xchg
dec
add
sbbl
xchg
push
outsl
pop
je
fmull
cli
rep
subl
xchg
ret
or
insl
imul
adc
mov
xchg
jbe
push
std
lahf
xor
test
jo
call
imul
cmp
adc
push
clc
xchg
push
mov
jae
addr16
outsb
arpl
pop
sbb
jmp
int
aaa
fcmovnu
in
mov
jg
and
pop
test
fistl
mov
js
xrelease
mov
cmc
stos
andl
or
into
push
cmp
repnz
test
arpl
adc
jno
jae
jg
call
jl
sub
lds
lahf
outsl
and
cmp
add
adc
pop
xorb
adc
lea
xchg
mov
fucomip
mov
insl
fisttpll
push
add
add
pop
dec
pop
pop
movsb
int
add
clc
xchg
insl
cmp
jne
mov
aam
cli
xlat
stos
popf
repnz
sbb
jle
outsl
xor
adc
mov
or
mov
mov
scas
or
inc
lret
aaa
pop
sbb
ss
lods
xor
cmp
scas
xchg
adcl
lahf
cld
aas
mov
cmp
mov
cmc
sti
fbstp
adc
mov
test
xchg
addb
call
pusha
mov
out
dec
cmp
aad
wrmsr
test
pop
mov
stc
or
add
mov
push
lods
push
mov
inc
lea
xor
sub
shl
jmp
sub
bound
stc
adc
xchg
and
xor
pop
mov
es
icebp
testl
rcl
dec
ljmp
inc
addr16
push
mov
jbe
fildl
pop
xchg
mov
ret
subb
add
sbb
pop
arpl
jae
fdivr
mov
dec
int3
or
sbb
add
cmp
adc
js
fs
push
fidivs
test
fwait
je
scas
shll
lods
mov
inc
push
scas
arpl
dec
sub
push
aam
cmp
pop
adc
mov
arpl
iret
add
add
jo
loopne
inc
dec
jnp
js
in
adc
sbb
sbb
cmpsb
imul
cmp
pop
aad
call
test
fstps
jecxz
jg
enter
mov
xor
add
push
sbb
repnz
movsl
push
and
jg
les
mov
mov
adc
loopne
cmp
xchg
hlt
inc
cmp
push
cltd
pop
adc
push
xchg
or
sbb
outsl
ret
push
out
test
fs
inc
adc
jbe
in
iret
jne
lods
pop
cmp
mov
dec
in
shrb
push
repz
sub
inc
fildl
cld
push
ficompl
loopne
scas
pop
jl
mov
sbb
je
insl
ret
out
mov
cld
xor
xchg
mov
rolb
mov
cmp
repz
lret
sub
jecxz
or
ret
mov
mov
je
ds
cmp
mov
add
inc
lea
mov
icebp
add
outsl
cmpsl
orb
aas
add
aaa
ret
mov
jae
mov
fisubrs
ja
daa
lods
outsl
test
jg
rclb
lcall
imul
mov
std
pop
ja
stc
push
push
adc
int
cltd
or
shl
cmpsl
jbe
gs
sbb
sti
mov
cltd
push
push
pop
xlat
adc
lret
int3
movsl
push
stos
pushf
fidivrl
js
mov
pop
mov
sbbb
insb
mov
popa
ficoml
popa
pop
lods
lea
push
sbb
xor
sbb
in
jo
clc
sbb
mov
shlb
adc
mov
xor
ret
adc
xlat
xor
and
xchg
cmp
rcll
nop
rcrb
enter
push
dec
sbb
scas
addb
arpl
repz
rcrb
out
imul
xor
mov
in
daa
out
out
loop
mov
ret
popf
inc
dec
inc
popl
xor
push
xor
xor
jmp
cmp
stc
repz
mov
lahf
imul
clc
rolb
sti
push
jl
push
inc
add
loopne
in
pop
loop
pop
and
setp
mov
enter
mov
test
inc
aas
cltd
xchg
loope
sub
pop
jle,pn
sti
hlt
cmc
loope
sbb
jp
stos
loop
dec
mov
cltd
push
idiv
adc
enter
sti
pop
inc
mov
dec
cwtl
inc
dec
int3
mov
mov
daa
insb
repz
lods
icebp
popa
idivb
jg
add
enter
pop
adc
push
or
stos
out
fsts
insb
loope
dec
orl
lret
loopne
mov
adc
dec
fsubrl
dec
les
ja
gs
jne
sub
mov
inc
xor
jne
push
jb
or
dec
inc
loopne
out
mov
icebp
jbe
push
out
iret
addr16
and
add
rorl
jmp
sti
repz
mov
add
or
jne
sahf
std
push
in
and
cmpsb
xchg
pop
jo
std
aam
push
cmp
mov
nop
mov
icebp
inc
out
sub
aad
dec
out
scas
mov
movsl
adc
pop
and
sub
xchg
int3
pop
addl
ret
mov
insb
pop
jge
cwtl
les
push
add
lret
movsb
or
scas
xor
mov
lcall
jg
lea
popa
into
repz
mov
loop
and
cld
jecxz
add
test
xchg
push
lcall
popa
jp
cmp
or
or
loopne
mov
add
xchg
bound
mov
cmp
sbbb
inc
mov
aas
cmp
mov
test
stos
adc
pushf
leave
cli
cmp
xchg
mov
sub
aaa
sub
sub
cltd
xor
inc
insb
popl
jecxz
aas
and
and
add
xorb
mov
mov
lock
xor
stc
ds
push
jns
sub
xchg
dec
xchg
adc
in
gs
mov
lods
dec
inc
xchg
mov
out
fildll
inc
sbb
inc
mov
adc
adc
add
xor
scas
jbe
mov
fs
jae
cwtl
mov
sbb
fwait
jne
push
aaa
mov
orl
mov
mov
xchg
testb
fldt
dec
pop
stos
test
dec
jg
imul
bound
push
sub
inc
push
jne,pn
popl
mov
leave
test
insb
or
and
lods
pushf
push
dec
add
pop
fisttps
mov
lea
jge
xor
and
aaa
ret
testb
arpl
and
insl
into
lods
adc
sbb
test
mov
lock
sbb
jnp
add
dec
fsubs
sbb
cmp
jecxz
pop
push
lds
inc
xchg
adc
sahf
inc
jbe
xchg
dec
and
or
fs
push
testl
pop
nop
add
lahf
sub
mov
jmp
cmp
out
loope
push
adc
cmp
mov
sub
or
lcall
adc
hlt
pop
sbb
bound
push
repnz
sub
sub
push
in
mov
push
pop
sub
imul
in
dec
cltd
out
test
fcomi
push
adc
xchg
sarl
int
add
jmp
call
out
aaa
cwtl
add
pushf
or
sub
dec
int3
xor
andb
push
dec
or
sub
inc
roll
mov
inc
cmp
stc
aaa
js
test
fistpl
sub
mov
dec
int3
les
jmp
es
insl
mov
mov
or
adc
out
xchg
in
out
in
sbb
inc
nop
sti
push
adc
jle
rcll
and
cmpsb
and
xchg
es
pop
mov
mov
call
dec
adc
lea
call
setg
and
mov
dec
dec
push
setg
jl
lods
in
push
sub
cmp
jne
arpl
out
or
sbb
xlat
scas
jp
xchg
sbb
mov
les
out
out
fisubrl
in
shll
mov
in
clc
inc
sub
std
icebp
mov
xchg
cmc
xchg
pop
mov
cltd
enter
inc
or
cli
cmc
aam
mov
jo
je
xor
shlb
imul
shl
sbb
cmp
cmp
and
mov
push
js
aaa
aas
jo
pop
ds
jecxz
jmp
cwtl
js
mov
mov
inc
mov
test
leave
add
loope
lods
incb
stc
pop
adc
leave
hlt
shll
mov
insb
xchg
add
fcomip
or
movsl
xor
push
push
sub
dec
dec
cmc
sbb
popl
mov
arpl
lods
mov
mov
popa
jle
out
aas
xchg
les
arpl
mov
pop
movb
and
xor
add
sub
stos
leave
test
xchg
cmp
lret
repnz
dec
adc
xchg
aaa
out
es
jbe
cltd
mov
inc
fs
mov
loop
dec
js
jp
sbb
inc
jb
sub
test
push
inc
leave
add
xor
in
pop
push
and
adc
cwtl
jns
push
mov
and
adc
mov
int
stc
int
fsubrl
pushf
outsl
mov
mov
pop
loopne
jae
sti
xchg
add
call
adc
fwait
mov
sub
fs
orb
dec
lods
clc
icebp
xor
movsb
imul
xchg
in
jo
sub
jg
dec
loopne
fisttpl
cmp
mov
icebp
pop
pop
jecxz
or
fxtract
xlat
xor
jecxz
sbb
dec
push
std
mov
jmp
jns
and
fs
xchg
icebp
shl
cld
mov
and
icebp
scas
and
dec
shrb
gs
ja
imul
push
js
sbb
test
movsl
insl
adc
movsb
ljmp
sub
lock
shl
inc
add
out
inc
jge
inc
add
sub
negl
fnstcw
pop
push
out
sbb
xchg
and
fnsave
aaa
rclb
or
sbb
fstpl
outsl
stc
aaa
sbb
jo
stc
fiadds
stos
adc
xchg
mov
popf
mov
daa
xchg
jo
xchg
xchg
ficoml
push
or
outsb
mov
dec
jne
fidivrl
daa
clc
and
sub
jno
jmp
xor
int
sbb
cltd
sarl
and
xor
cli
lea
cmp
cmp
mov
es
sbb
iret
ljmp
inc
imul
xchg
sub
call
cli
mov
mov
sti
test
inc
sti
fldl
dec
push
lret
jnp
adc
das
pop
test
jecxz
xchg
outsb
aam
imul
adc
push
adc
and
push
jge
sbb
dec
mov
mov
movsb
cmp
data16
cmpsl
fstpl
outsl
daa
sbb
icebp
sahf
insb
mov
mov
adc
gs
arpl
ficoml
add
ret
fdivrs
fiaddl
xchg
idivb
test
xlat
jmp
imul
addr16
push
ret
push
out
imull
aaa
xchg
push
in
inc
ds
aad
adc
lds
hlt
sahf
adc
je
ret
clc
jge
xchg
push
pop
cld
xor
pop
push
out
ret
mov
ret
push
pcmpgtb
mov
mov
and
pop
push
xor
ljmp
push
mov
ja
je
bound
ret
out
pop
arpl
lret
in
popf
movsl
add
das
jge
lret
daa
in
addr16
mov
dec
in
movsl
inc
pop
jecxz
jae
das
call
mov
lods
lea
cld
mov
dec
test
pop
mov
and
cwtl
mov
or
mov
jmp
adc
jae
jns
fisttpl
shlb
shrb
inc
mov
push
rcl
add
std
fs
sbb
cmpsb
mov
repnz
push
lcall
out
ja
stc
xchg
addb
stc
call
cmpb
rorl
sti
pop
in
xchg
out
les
stc
stos
dec
mov
mov
pop
dec
dec
sub
mov
add
bound
call
leave
push
pop
push
pop
push
addl
sti
stc
lods
xor
inc
lods
movsb
call
fidivrs
arpl
xchg
and
push
sub
in
adc
and
push
cmc
push
sarl
lret
dec
rcrl
xchg
stos
into
ret
arpl
addr16
cmpsl
fwait
jp
sbb
jnp
stos
xor
lret
mov
and
lcall
out
jbe
stc
jmp
stos
cwtl
aaa
jb
mov
and
jg
clc
xchg
movsl
push
push
fs
in
sub
pop
ja
pop
push
out
sub
push
mov
stos
cmp
mov
scas
dec
aad
mov
int
or
xchg
les
lcall
inc
clc
js
stos
lret
ljmp
jae
movsb
fwait
lret
fsubrl
jns
shlb
push
jle
inc
mov
roll
jae
pop
sbb
push
test
sbb
or
sbb
and
mov
inc
das
sub
sub
pop
pop
xor
push
dec
mov
mov
xor
inc
cmp
subl
ficoml
mov
ja
mov
dec
add
or
adc
jb
pop
pop
jge
jae
stos
push
mov
int
jle
dec
js
xor
aas
inc
jp
xchg
outsl
repz
add
inc
inc
in
mov
dec
orl
push
hlt
xor
out
icebp
xor
cmp
push
cmp
inc
xlat
adc
iret
cmp
adc
dec
jl
stc
aad
mov
or
pop
out
mov
scas
xorl
leave
nop
enter
jle
clc
inc
xor
fdiv
gs
mov
and
and
sti
hlt
xchg
ds
add
xchg
cmpsb
stos
push
clc
adc
rorl
and
cmpsb
fwait
loope
pop
sbb
cmp
popf
jae
shll
call
arpl
mov
dec
sub
cmp
or
push
sbb
xchg
jno
add
push
in
dec
mov
ret
adc
mov
sbb
add
repz
mov
nop
sub
ja
shr
add
sbb
xorb
test
popf
xchg
imulb
push
cmpsb
popa
xchg
repnz
sbb
dec
inc
adc
inc
add
cmp
cmc
adc
out
inc
or
fcomps
jge
bound
pop
inc
mov
inc
xchg
inc
jge
imul
sahf
cmc
repnz
insb
loope
enter
shrl
jo
jge
in
les
in
out
sarb
sub
push
in
ds
pop
leave
inc
and
pop
or
sub
mov
shlb
cmp
pop
or
xor
aam
jl
pop
cmp
scas
out
or
jb
ss
inc
mov
jns
lret
test
nop
mov
push
push
or
pop
push
maxps
shll
into
les
mov
mov
push
xchg
mov
aam
jmp
push
stc
int3
inc
scas
out
mov
sub
testl
insb
mov
scas
sbb
mov
mov
inc
cmc
aad
lret
stos
fucomip
xor
adc
into
xchg
int
mov
nop
insb
cmp
jno
imul
or
rorl
in
sub
hlt
cld
mov
shrb
pop
fcmovnb
in
mov
push
push
inc
adc
push
xchg
mov
ljmp
out
aaa
into
sarl
or
sarb
ja
and
loope
cwtl
push
sub
and
cli
pop
cli
out
mov
bound
mov
xor
push
call
fwait
xchg
jl
jmp
add
dec
dec
push
rcrb
stos
or
push
lods
rcll
loop
je
push
stc
movsl
fldl
xor
int3
push
sahf
ret
pushf
iret
mov
inc
mov
cmp
aaa
outsl
or
lds
inc
iret
in
jecxz
mov
fcmovne
bswap
dec
clc
sub
rcl
fisttpll
inc
push
jp
enter
outsl
xchg
xchg
insb
pop
dec
fdivl
xor
scas
mov
ss
dec
push
pushf
jge
arpl
mov
xchg
jae
add
pop
addr16
lock
xchg
mov
xchg
inc
ljmp
mov
pop
loop
shrb
or
pushf
mov
popa
inc
int3
mov
aam
cmpsl
xchg
mov
cmpsb
lds
loope
adc
sti
lahf
out
xchg
call
push
xor
cmp
mov
xor
std
inc
int
cmp
test
adc
sbb
mov
fcmovbe
shlb
gs
fbstp
adc
mov
out
jae
jmp
mov
mov
orb
add
out
xor
or
add
addr16
sub
fmuls
sbb
inc
xchg
mov
andl
push
adc
bound
ljmp
and
sbb
ds
jo
dec
js
inc
jne
inc
jns
or
cmpl
in
ficomps
scas
jno
mov
mov
loopne
sub
jle
les
out
clc
mov
sbb
cmc
aam
aas
mov
loopne
mov
sub
daa
xchg
add
mov
mov
xchg
jg
ja
shlb
adc
mov
les
push
stos
pop
and
in
push
cmp
inc
subb
loopne
cmp
add
mov
jmp
xchg
add
ror
popa
xchg
mov
pushf
jae
enter
mov
stos
mov
mov
push
cmpsl
push
movsb
das
lea
add
pop
out
add
loopne
jbe
and
leave
pop
xchg
inc
xlat
lret
add
pop
enter
mov
pop
lahf
jge
cmp
int
sub
out
jg
push
mov
pop
loopne
repz
stos
add
in
in
lock
cmp
fidivrl
movsb
es
and
pop
xchg
dec
push
js
ret
mov
mov
xor
or
icebp
cmp
and
cmc
push
lsl
lods
push
bnd
add
mov
insl
into
mov
pusha
cmp
outsb
int
push
test
inc
jg
dec
fstpt
lcall
mov
xchg
jnp
jno
xchg
dec
imul
cmpb
or
mov
in
sbb
loop
adc
xor
imul
and
xchg
movsl
cmp
daa
divb
call
mov
jns
ror
fistps
jbe
xchg
jecxz
xchg
mov
mov
arpl
js
push
ss
outsl
dec
test
imul
imul
mov
adc
pusha
xchg
inc
xchg
xor
jo
and
and
ss
mov
sbb
std
sbb
push
cmp
scas
lret
cli
adc
jg
ret
push
and
in
daa
test
into
es
dec
mov
cmp
mov
aaa
cltd
bound
ljmp
cld
fistl
imull
add
and
inc
cmpsl
sbb
mov
mov
sub
lea
sub
das
lahf
mov
imul
xchg
jns
and
insb
sbbl
lea
xchg
adc
rolb
adc
es
lods
pop
test
sbb
sti
cmp
add
sub
pop
jmp
xchg
cltd
sti
cmc
adc
jg
lods
fmulp
test
sbb
xchg
mov
ffree
aas
insb
ret
dec
xbegin
lret
xchg
mov
push
rcl
push
jno
sbb
mov
js
sbb
adc
inc
pop
xchg
dec
test
jbe
mov
notb
or
xchg
jge
les
jmp
mov
dec
jnp
jo
jns
or
inc
shrl
lods
jecxz,pt
lcall
sub
int3
loopne
mov
je
xor
inc
or
dec
push
or
jmp
lea
fisttps
mov
cmpsb
xchg
xor
jle
imul
popa
xor
sbbb
cmp
inc
or
jecxz
adc
repnz
cmp
push
pop
ret
addr16
je
jl
aas
aas
mov
cli
idiv
cli
aas
imul
cmpsl
ds
cmpsb
lahf
mov
dec
adc
mov
jns
jmp
lcall
lcall
repnz
dec
mov
mov
jmp
mov
mov
dec
fldenv
fbld
mov
mov
lock
pushl
push
movsb
mov
shlb
aad
aaa
lret
jae
pop
inc
movsl
mov
sbb
arpl
ja
loop
adc
leave
push
or
push
xchg
sbb
cmpsl
add
repnz
stos
jno
cmc
lret
and
rcll
sub
add
push
scas
mov
mov
fidivs
scas
add
rcl
jno
sbb
mov
mov
xor
push
xchg
mov
fstpl
mov
and
add
lds
stos
sub
aad
cltd
xor
dec
sub
xor
cmpsb
push
pushf
loope
pop
xor
dec
ficoml
lds
dec
aas
mov
cmc
push
loopne
jl
push
mov
pop
xlat
out
add
add
and
push
push
add
inc
mov
push
std
cld
stos
push
jae
add
out
push
pop
icebp
xchg
aas
xchg
jecxz
xlat
pop
cli
arpl
les
insl
out
ljmp
inc
pop
or
into
mov
and
push
call
inc
jle
into
test
adc
imul
push
lock
test
push
faddl
sub
jns
fildll
mov
mov
fidivrl
xchg
push
push
xchg
mov
fldcw
cmp
xchg
jle
lcall
inc
ror
mov
mov
imul
jae
incb
jp
push
mul
push
sbb
pop
imul
or
mov
mov
pop
rorb
stos
xchg
or
ja
sbb
sub
fidivrs
jg
in
sbb
dec
push
xchg
shl
lods
lahf
dec
bound
aas
lea
fadd
lcall
mov
jb
push
and
sbb
dec
sahf
cmc
jnp
fstl
popa
xor
sbb
or
stos
mov
jecxz
imul
imul
lds
sbb
test
lret
inc
add
mov
jnp
insb
add
sub
popa
pushf
dec
cmp
aam
iret
movsb
inc
mov
inc
aad
je
pushl
mov
xor
mov
imul
xlat
mov
fisubrs
push
push
inc
aaa
mov
cmp
ret
push
xor
in
mov
push
push
jno
pop
idivl
rclb
test
sub
mov
sub
loop
dec
lods
dec
xchg
aas
cmp
mull
ja
inc
push
dec
pushf
mov
cwtl
mov
push
popa
push
js
push
je
xor
in
lret
sbb
xlat
sub
shll
iret
inc
pop
sub
xlat
jne
jne
scas
dec
sbb
or
aam
push
push
inc
ret
mov
popf
loopne
mov
cmp
ret
bound
sbb
lahf
shlb
push
and
shll
in
xchg
and
into
pop
fadds
and
xchg
sar
fucomip
sub
push
sbb
cmp
jb
daa
fdivs
lea
into
pop
out
sti
mov
out
and
mov
xchg
mov
adc
xchg
mov
sub
cmc
add
mov
lahf
call
jp
push
adc
adc
mov
dec
sbb
insl
cmp
subb
addb
inc
seta
imul
dec
insl
mov
stos
mov
pop
imul
sahf
inc
jbe
mov
xor
fstp
je
adc
lods
jo
mov
pushf
jnp
mov
aad
mov
inc
addr16
neg
adc
adc
xor
rcrl
fiaddl
enter
bound
adc
xor
push
ret
int
scas
or
pop
inc
add
cmp
outsl
adc
sub
aas
aam
pop
pop
movsl
xchg
xchg
sahf
repnz
mov
lock
roll
je
aas
rclb
sbb
fdivs
enter
mov
add
mov
push
lock
jle
mov
push
cmp
xchg
scas
add
fnstcw
xchg
sub
fs
dec
or
push
mov
mov
shll
add
negb
xchg
mov
jno
pop
inc
sub
aas
inc
movsl
int
sbb
xchg
fcmovb
dec
push
into
add
int3
pop
fiadds
imul
jle
leave
repnz
loopne
cmp
mov
jge
xchg
sbb
out
dec
pop
push
and
not
push
dec
enter
cmp
test
push
jnp
jge
add
sahf
pop
sub
sub
cmpl
repz
cmc
sbb
ja
aad
repz
loope
or
xlat
mov
in
mov
fdivrl
call
lods
push
scas
mov
es
sub
loop
xlat
aas
imul
xor
addr16
lahf
dec
iret
shll
lcall
and
ds
push
xchg
insl
scas
xor
je
nop
loop
push
mov
out
je
add
xor
cmp
inc
stc
aam
jb
mov
loopne
fcoml
dec
dec
ja
stc
mov
push
dec
push
ja
dec
xlat
insb
mov
push
stos
dec
xchg
push
cmpb
cmp
jns
fimuls
cmp
adc
mov
pop
jnp
in
xchg
es
sub
cli
fs
dec
out
add
sbb
jle
out
ret
push
push
out
ljmp
push
pop
pop
mov
mov
repnz
in
sbb
pop
mov
xchg
or
jecxz
xchg
hlt
pop
pop
shll
xor
push
inc
pop
inc
leave
mov
loope
incb
in
jns
ret
int3
mov
and
dec
inc
push
or
es
fcmovne
add
mov
hlt
lods
je
in
push
imul
mov
js
rorb
sbb
out
jno
sub
lret
pop
adc
sbb
aas
xchg
add
ret
sbb
movsl
out
push
inc
sub
out
push
dec
shll
inc
fs
or
scas
aam
enter
sarl
push
or
repnz
cli
mov
ficoms
fsubl
mov
xchg
pop
jle
outsl
addr16
into
lock
dec
das
notl
dec
xor
sbb
sub
push
mov
dec
mov
fsts
lds
jge
add
fcoms
lods
outsb
test
xor
jg
and
xor
ja
and
xchg
sar
outsb
and
lods
pop
push
mov
mov
pushl
test
sti
movsl
adc
dec
leave
xchg
insb
xor
lea
lahf
push
inc
xor
out
js
mov
push
push
sub
mov
push
loope
imul
ret
addr16
push
clc
push
es
fucom
call
data16
or
or
push
insl
inc
aam
incl
outsl
or
enter
xor
std
mov
test
cmp
inc
mov
adc
sbb
stos
ret
neg
xor
mov
imul
jo
jle
rcll
inc
mov
cli
xchg
insb
push
rolb
xchg
xchg
adc
mov
test
ror
or
xor
xor
mov
loop
repnz
or
imul
cmp
ja
pop
in
lods
mov
jnp
cmpsl
sbb
jle
cmpsl
sub
xor
jle
cmc
push
das
xchg
xchg
pop
scas
jbe
insb
sbb
add
in
and
repz
lds
xchg
scas
xchg
std
cmpb
ds
movsb
jne
aaa
inc
push
xor
fwait
mov
frstor
addl
mov
stos
dec
mov
xor
push
jge
push
cmpsb
jne
imul
hlt
addb
dec
pop
popf
jmp
sub
scas
or
xchg
xchg
lret
push
sub
jae
rcrb
loope
xchg
push
jl
icebp
outsb
push
jne
shl
aas
xchg
fidivl
adc
mov
lods
fidivrs
clc
fidivrl
lods
lea
loop
lds
aad
je
cmp
mov
mov
movsb
leave
outsl
cld
mov
div
add
ss
std
aam
sub
shrd
lock
sbb
sbb
dec
adcb
sub
cmp
fwait
aam
dec
lcall
push
cmp
add
mov
js
adc
mov
imul
mov
outsl
xchg
xchg
movsb
push
mov
add
pop
mov
pop
cmp
in
push
jbe
adc
xor
jl
mov
pushf
fisubs
dec
jmp
add
mov
popa
test
data16
cmc
test
fidivs
cmp
xor
imul
lahf
pop
add
dec
data16
mov
xchg
push
mov
lret
test
add
or
lea
aad
outsb
ja
aaa
add
mov
cmpb
addr16
cltd
jmp
adc
mov
movsb
mov
jno
ja
inc
push
fmuls
movb
mov
jl
mov
les
mov
psubq
adc
fcomps
mov
sub
xchg
xor
jle
pop
cwtl
xor
mov
in
xchg
pop
test
jmp
add
add
sub
popa
cmp
or
jle
xor
test
mov
and
cs
fdiv
jno
push
cmpb
pop
add
mov
imul
scas
pop
lcall
in
stos
mov
cld
stc
pop
or
push
sub
xchg
mov
jnp
mov
dec
sbb
sahf
jmp
adc
cmpsb
jns
jns
scas
daa
mov
lahf
test
scas
je
in
and
lea
lds
aaa
stos
push
jmp
rclb
jl
out
lea
mov
mov
outsw
cmp
jge
inc
jb
iret
stos
icebp
sub
xor
sbb
pusha
mov
xchg
adc
mov
add
inc
lea
inc
xor
push
imul
mov
pusha
adc
adcl
test
lahf
pop
mov
mov
or
pop
dec
addb
or
xchg
sub
add
lcall
pop
cmp
jb
mov
clc
rep
add
cmp
fdiv
xor
xor
mov
cli
test
cmp
mov
imul
mov
jg
lcall
xor
cwtl
adc
insl
inc
push
mov
inc
stos
pop
xchg
xchg
cmp
push
cmp
xor
arpl
stos
xchg
cmp
fmulp
adc
xor
loop
mov
add
sub
out
jb
push
inc
xor
ret
xchg
repz
pop
cmpsb
loopne
stos
addr16
jo
ljmp
pop
dec
xchg
xchg
adc
jg
ds
out
pop
xchg
pop
push
into
cmp
aad
jns
jge
scas
das
popa
sbb
imulb
int3
scas
sarl
subb
lahf
movsl
sarb
mov
sahf
mov
sbb
xor
jp
adc
mov
icebp
inc
mov
xchg
or
jl
adc
xor
jmp
jae
out
add
jmp
fs
loopne
xchg
mov
inc
sub
adc
repz
rcr
icebp
inc
mov
mov
jge
fcomps
test
lods
out
fstpt
jb
mov
xor
pop
mov
cmp
dec
imul
lea
push
xor
pop
mov
push
dec
jle
jg
add
jno
jge
imul
gs
jo
cmc
inc
popa
lea
lcall
sbb
cmp
push
pop
orb
or
mov
ror
into
pop
std
sub
ficomps
cmp
push
out
stos
dec
fbld
mov
aas
rcrl
fcoml
insb
jb
xchg
push
xchg
xchg
int
jb
out
fprem
jnp
cmp
ja
and
mov
mov
jns
xor
dec
sub
mov
outsb
adcb
pop
push
das
cmp
mov
jns
jns
enter
xlat
pop
mov
lock
adc
add
sub
jae
dec
xor
div
mov
or
xor
jo
nop
xchg
xlat
cmpsl
out
loopne
int
and
jbe
xor
sbb
mov
sub
xchg
stc
cmc
adc
enter
mov
inc
and
mov
movsb
pop
inc
sbb
push
imul
fisubrl
mov
aad
popa
jge
inc
xchg
imul
insl
dec
push
xor
cs
in
aam
jne
xor
rol
dec
or
cvtpi2ps
cmp
jg
push
cmp
cld
mov
stos
ret
sub
out
add
add
cmpsb
out
mov
ds
dec
and
cmp
add
add
jge
imul
jae
mov
cmp
sbb
cmp
pop
mov
fdivr
cmpsb
pusha
push
mov
mov
fisubrs
jecxz
sbb
xchg
out
pop
push
pop
inc
mov
fcmovnu
pushf
in
iret
xchg
stos
mov
pop
icebp
sub
inc
daa
cmp
lea
scas
mov
arpl
addr16
cmp
xchg
in
pop
mov
pop
sbb
movsb
movsl
pop
scas
out
test
das
ljmp
jno
call
xchg
fcoms
fucomip
pop
push
jecxz
jns
dec
cmp
push
mov
cmp
fdivp
stc
jge
add
push
or
scas
lcall
insb
jo
fwait
mov
push
cltd
arpl
add
inc
adc
enter
cmp
cmp
daa
mov
xchg
popa
je
scas
adc
sarl
mov
enter
inc
inc
mov
pop
subb
arpl
mov
lods
stc
jo
mov
ror
jmp
shrb
gs
sub
scas
cvtps2pi
lahf
shll
movsb
pop
add
dec
mov
ret
pop
dec
push
pop
je
xor
sbb
sub
fadd
xchg
gs
sarb
loope
push
sahf
lahf
sub
dec
mov
xchg
push
sbb
fs
js
dec
sub
dec
push
ret
fs
cli
jb
ds
dec
push
jne
mov
inc
push
insb
adc
adc
sbb
lods
lods
outsb
daa
or
fidivrs
sub
int3
cmp
sbb
push
jge
ret
stos
ds
jmp
out
add
mov
dec
xor
dec
outsb
fcmovnu
test
test
mov
insl
lcall
mov
mov
xchg
pop
dec
cli
lds
mov
sbb
pop
xchg
stos
sub
xor
mov
add
adc
or
jae
inc
mov
push
xchg
pop
cld
ret
adcb
leave
int
and
pop
shll
outsb
dec
xor
mov
mov
sub
test
imul
ds
sti
in
lods
popf
insb
sbb
mov
idiv
adc
cmpsb
outsl
adc
adc
sbb
enter
sar
xlat
sbb
bound
xchg
popf
scas
or
dec
push
test
imul
push
imul
push
pop
or
mov
out
insb
sub
std
enter
or
jb
pusha
aad
scas
sub
nop
mov
cmpsw
inc
sbb
jg
test
sbb
sub
mov
je
pop
js
ret
aas
push
lods
sbb
insl
lahf
and
ja
mov
sbb
inc
lret
outsb
inc
adc
stos
mov
jns
das
hlt
inc
es
sub
enter
or
test
cmp
push
or
push
outsb
nop
setge
ja
lret
loopne
in
fwait
jg
xor
testl
and
ljmp
jp
xchg
lret
lcall
push
in
stos
leave
insb
xchg
jae
add
int
fisubrl
outsb
lds
jnp
mov
add
scas
dec
lods
ss
je
decb
addb
jne
dec
call
add
mov
ret
pop
push
sbb
inc
daa
int
add
std
cmp
rdtsc
aaa
orb
mov
xor
dec
ja
add
mov
fbld
ds
mov
es
pushf
ja
mov
or
pop
fidivs
mov
mov
mov
pop
out
repnz
fwait
xchg
shlb
jno
popa
loop,pt
fwait
cwtl
icebp
andl
mov
or
sub
cmp
into
ss
js
imul
add
cwtl
out
es
sbb
ret
rcll
lea
repnz
hlt
cmp
and
iret
das
inc
mov
out
cmp
or
lds
lods
idivb
outsl
stc
adc
cmpsl
xor
mov
pop
mov
das
stc
pop
lret
rolb
dec
aad
mov
or
sub
cmp
mov
out
push
xorb
subl
rorl
in
fwait
aam
pop
xchg
jns
sti
jno
and
in
data16
shll
or
cmp
cmp
cmp
aad
arpl
pusha
lret
js
dec
ss
imulb
adc
push
push
push
and
test
add
out
js
push
rorl
call
sub
jnp
or
lods
repz
std
inc
imul
inc
test
ret
scas
mov
xor
mov
adc
or
scas
or
ss
sub
dec
ficoms
nop
lods
std
mov
ljmp
xchg
movsl
push
cmpsb
jnp
loope
into
push
mov
push
pop
mov
mov
mov
outsl
aas
cld
cmp
das
mov
dec
and
lods
mov
sarl
out
shrl
scas
push
scas
mov
push
jp
pop
inc
xchg
arpl
fwait
cmp
repz
jle
notl
or
pop
jno
das
scas
fiadds
pushf
lods
xchg
fsts
dec
xchg
mov
jno
repnz
xchg
out
popf
fists
dec
arpl
xor
cmpsl
icebp
push
mov
loop
push
out
lock
inc
insl
push
outsl
movsb
inc
stos
add
negb
lods
sbb
cmp
inc
mov
imul
cli
std
push
mov
xchg
arpl
or
mov
push
jbe
adc
pop
and
xchg
push
subb
daa
cmp
dec
cs
inc
lcall
test
mov
mov
loope
sub
push
insb
jne
pop
lcall
sbb
in
mov
sub
add
mov
mov
vxorpd
add
jmp
sub
fdivs
push
aas
add
clc
cmc
ljmp
scas
sub
jns
and
mov
gs
mov
mov
inc
in
mov
ret
je
gs
cmp
int3
ret
pop
xor
cwtl
jne
sbb
adc
fwait
adc
ljmp
sub
lods
test
and
pop
jae
movsl
adc
cltd
dec
daa
adcl
je
push
inc
popf
aad
dec
les
idivl
pop
movsb
push
push
jno
add
or
fs
insb
ret
jno
pop
cmp
out
inc
or
mov
add
test
jge
sahf
mov
mov
xchg
xlat
nop
inc
popf
je
int3
imul
out
add
jl
mov
lods
mov
adc
xchg
loopne
inc
fsubr
xor
fcmove
mov
fwait
cmp
adc
jl,pn
xor
stos
clc
sbb
fldenv
inc
scas
or
inc
cli
pop
jle
js
sbb
push
lahf
aas
jmp
push
pop
and
mov
and
lret
jne
sub
mov
stos
cmc
test
pop
cmp
push
xor
inc
cmp
nop
aaa
xor
xor
or
enter
cmpsl
data16
daa
and
xor
push
add
adc
scas
dec
in
xchg
ret
jle
sbb
mov
aad
xor
les
hlt
gs
negb
sub
leave
pop
loope
inc
xchg
adc
test
push
inc
ret
popa
add
xchg
test
or
mov
adc
popf
scas
pop
dec
push
jp
add
enter
mov
out
les
out
xlat
mov
and
das
sbb
insl
scas
aad
xor
aaa
sub
and
js
dec
inc
dec
inc
sub
popa
jb
into
jmp
icebp
mov
jo
notb
sub
pop
sub
sti
mov
pop
dec
xor
inc
movsl
cmpl
test
mov
jnp
cld
test
mov
lds
sbbl
cmp
popa
nop
inc
clc
xchg
cs
lret
movb
pop
inc
in
mov
sbb
cld
pop
pop
inc
xor
and
mov
lods
pusha
pop
jno
test
push
cld
ret
inc
arpl
iret
arpl
jno
ficomps
and
or
je
in
fs
ffree
aaa
or
lret
adc
fs
sahf
sub
add
mov
inc
data16
mov
cmc
mov
pop
out
cli
frstor
push
or
xchg
outsl
fdivp
sub
insl
lret
xchg
outsl
sub
dec
pop
repnz
out
inc
frstor
fidivs
sub
sarb
rcr
jge,pn
sbb
push
xor
jns
sub
out
cli
or
mov
add
pop
cmp
ret
cmpl
stc
es
push
vcvttss2si
adc
outsb
sbb
int3
cmp
mov
push
add
fmuls
sub
mov
mov
testl
jne
pop
cli
xor
sub
dec
xchg
fsubrl
cmpsb
shlb
lock
jae
scas
cli
pop
jge
push
cmp
lods
jecxz
bnd
mov
push
mov
or
dec
sub
jns
xor
out
aam
notb
mov
stos
mov
nop
call
scas
ficoml
enter
mov
rcr
inc
cmp
cltd
dec
push
iret
xchg
cmp
mov
dec
test
sbb
jecxz
out
loopne
aad
in
data16
fiaddl
leave
xchg
data16
pop
xchg
fsubl
call
and
or
adcb
jecxz
movsl
inc
or
jno
das
fdivrs
mov
push
xchg
jno
or
xlat
sub
and
xchg
cwtl
popf
mov
and
mov
cs
scas
add
out
sarb
das
dec
rolb
jp
or
shlb
mov
push
cld
js
add
push
sbb
jns
leave
mov
dec
iret
decb
fdivrs
cltd
shll
ss
repnz
mov
adc
or
mov
xorl
mov
mov
enter
test
jge
dec
push
lret
mov
icebp
add
sbb
mov
mov
cltd
rclb
push
or
mov
push
and
sbb
lret
jae
pop
add
inc
cmp
fs
mov
sub
mov
enter
mov
cli
jne
push
dec
jne
dec
adc
fiaddl
into
xchg
sbb
sub
dec
movsb
aaa
dec
jmp
inc
leave
aad
or
call
rolb
lcall
outsl
sbb
push
dec
movsb
aad
and
bound
or
sub
cmpsb
mov
fwait
and
push
fdivrs
or
repz
and
xchg
push
jp
push
cmpsl
std
insl
aaa
std
outsl
pop
pop
mov
sub
mov
push
xor
sbb
cmp
or
mov
lahf
mov
jno
inc
into
fwait
xchg
cs
sahf
in
jmp
movsl
pop
xchg
pushf
sti
xchg
jg
and
rorb
dec
nop
rorb
xchg
in
jae
mov
cmp
aaa
xchg
push
or
inc
cmp
cwtl
mov
js
in
xor
mov
adc
adc
dec
mov
mov
subb
rcll
int
ja
fld
cld
mov
mov
test
lods
adc
push
adc
jno
jle
ficoms
data16
cwtl
sahf
clc
fwait
jmp
addr16
xchg
lret
mov
fidivs
pop
fnstenv
mov
scas
clc
pop
xlat
pusha
shufps
aad
mov
inc
outsl
sbb
into
sub
push
aam
ret
cli
and
ljmp
pop
mov
pop
sti
xchg
dec
cltd
movntps
loope
ss
stc
js
sbb
mov
scas
loopne
stos
sbb
jbe
test
push
or
dec
cmp
xor
or
insb
jae
inc
popf
test
inc
and
fistpll
aad
xchg
mov
sub
and
add
bound
scas
pop
mov
add
mov
jb
hlt
in
inc
sahf
sub
rolb
push
inc
sub
push
fcmovne
leave
dec
pop
data16
jp
adc
notb
scas
mov
xor
lods
out
mov
dec
rclb
test
out
xor
in
std
cmp
out
sub
inc
test
or
inc
out
stos
roll
fdivrl
cmpsl
icebp
and
loopne
xabort
mov
push
mov
arpl
mov
pop
adc
or
in
xchg
outsl
sbb
clc
jl
pop
shll
outsb
ljmp
add
sub
sbb
test
jb
dec
xor
add
cs
in
in
xchg
jmp
mov
add
fnsave
stos
into
pop
test
mov
add
test
jge
or
mov
pop
movsb
out
sbb
jg
mov
pop
mov
push
sub
imul
xchg
jnp
push
sub
mov
xor
mov
repnz
aam
ror
fwait
push
jb
cwtl
sub
lret
lock
inc
stos
clc
sub
aas
std
xchg
pop
ja
orb
or
in
bound
in
pusha
sbb
mov
mov
fisubl
cmpl
stos
sub
lcall
repnz
xchg
push
out
pop
xchg
and
mov
pop
insb
outsl
sbbl
test
ror
and
rorl
fstp
loope
dec
enter
cwtl
pop
bound
mov
jmp
add
pop
test
adc
push
and
mov
and
jb
fisttpll
mov
clc
adcl
das
movsl
and
ffree
addb
sahf
xor
roll
out
int
arpl
push
xchg
adc
fdivs
mov
or
adc
mov
dec
mov
sub
sbb
xchg
jnp
pop
ljmp
cwtl
pop
push
orb
in
sbb
inc
xchg
jmp
clc
sbb
push
test
mov
pop
sbb
mov
xchg
xchg
shll
mov
mov
bound
out
xchg
adc
mov
dec
inc
es
mov
loopne
or
clc
mov
sahf
jg
pop
lret
lahf
arpl
push
dec
jbe
cli
mov
xor
pushf
push
and
cmp
push
jecxz
ficoml
fistpl
adc
imul
and
or
mov
and
xchg
dec
xchg
and
xor
das
lods
adc
in
hlt
jbe
test
lcall
ja
out
popa
ss
jmp
push
ret
and
negl
aaa
dec
push
or
data16
push
in
ucomiss
push
adc
shl
jbe
add
sbb
sub
xchg
lcall
fdivs
dec
jbe
enter
jbe
cmp
fsubr
icebp
aas
std
pop
mov
test
insb
pop
cmpsb
mov
cmpl
test
call
fs
or
mov
add
mov
jp
addr16
sbb
mov
xchg
mov
es
cmp
cmpsb
loop
mov
xchg
dec
ljmp
test
push
add
ror
sub
ficompl
divl
xchg
scas
add
cmpsl
test
push
ss
xor
xchg
jecxz
push
inc
je
add
sub
push
push
mov
test
sub
loopne
cs
add
jg
and
scas
loope
ss
enter
push
mov
packuswb
push
add
or
rcrl
aas
js
adc
cmp
js
cmp
inc
jae
xor
cmp
stos
in
popa
fists
xchg
mov
cmp
lret
dec
out
inc
mov
sbb
das
rorl
xchg
cmp
sub
lcall
cmpsl
cmp
mov
insl
jne
pop
push
pop
jmp
frstor
movsl
mov
rcl
jl
das
mov
xlat
cltd
mov
cld
push
jno
xchg
inc
repnz
xor
cmpb
rorb
das
cmp
jmp
outsl
scas
out
setl
xor
or
mov
notl
call
mov
dec
ja
call
popl
mov
or
into
mov
lods
into
push
push
movsb
lret
or
mov
dec
mov
push
insl
loopne
arpl
mov
or
ficomps
das
repz
in
icebp
mov
add
std
loopne
jl
les
mov
jae
daa
popa
jb
cmc
insl
or
adc
popa
orl
or
cmp
mov
mov
rcrb
xchg
xor
shrl
dec
stos
mov
rcrl
sbb
subl
or
jg
or
xchg
shlb
or
push
sub
and
hlt
xor
pop
jne
jo
jbe
sub
test
icebp
scas
popa
xchg
pop
sarl
js
xor
ds
loop
dec
out
jp
xchg
jg
dec
pop
push
push
daa
mov
dec
out
inc
inc
adc
in
outsb
icebp
std
mov
or
or
jo
imul
pop
loop
adc
lods
sbb
and
adc
xchg
push
xor
push
ret
inc
ret
adc
loop
xlat
aas
mov
push
test
xor
mov
xor
jge
lcall
push
mov
scas
adc
lods
or
mov
push
sub
stos
mov
outsb
pusha
insl
mov
mov
sub
dec
and
je
push
fisubrs
mov
push
sub
sub
inc
cmp
in
into
mov
ret
insb
xor
cld
aad
xor
iret
push
mov
ss
inc
xchg
call
pop
xchg
xchg
bound
fidivs
mov
jns
mov
int3
int
cltd
xchg
fcmovbe
add
push
loopne
mov
add
push
add
icebp
sub
inc
push
loope
rorb
std
je
in
xor
popf
cmp
jno
fs
sbb
cmp
mov
jle
adc
adc
jl
xchg
sbb
or
pop
insb
or
adc
lahf
xor
or
pop
lcall
jbe
cli
inc
pop
cmp
insb
mov
pop
mov
inc
les
sub
sbb
sub
or
ds
fmuls
inc
rcrl
sub
mov
mov
inc
adc
out
xor
xchg
imul
pusha
mov
add
stc
pop
rorl
shrb
cmpsl
sbb
scas
push
push
dec
cmpsb
sbb
add
mov
mov
jp
mov
mov
dec
sti
or
or
lret
inc
or
cmp
in
es
sub
fisubrl
mov
cmpsb
inc
popl
and
in
test
xor
mov
or
enter
adcb
pop
aas
stos
loopne
imul
enter
loop
out
enter
loop
fdivr
scas
ret
mov
shlb
and
pop
fldl
mov
xchg
dec
lds
mov
icebp
out
fs
and
addr16
ret
cmp
cmc
rorl
xchg
pop
dec
js
fists
xchg
add
shr
pop
cmp
xchg
shr
test
mov
fiadds
loope
and
jae
hlt
inc
cmpb
dec
lret
nop
enter
push
jae
mov
dec
loope
xchg
repnz
adc
or
xchg
fdiv
inc
mov
mov
push
in
test
mov
mov
outsl
add
inc
pslld
mov
xor
repz
lcall
jne
sub
movsl
mov
pusha
jle
mov
push
int
or
mov
xchg
push
cld
dec
jno
enter
pop
enter
xor
stc
cmp
adc
out
cmpsl
leave
imul
insl
or
or
lea
fisubrs
jo
and
adc
cmpsl
shl
mov
mov
fldcw
jne
lret
test
inc
add
dec
mov
subb
pop
imul
adc
lret
xor
jb
sbb
push
inc
movsl
mov
test
xchg
sahf
aad
stos
leave
popf
cmp
jl
idiv
push
and
in
push
int3
scas
adc
pop
lods
loop
pop
or
into
aas
adc
clc
shr
mov
ds
test
mov
clc
or
out
cmp
sub
es
es
adc
das
cwtl
out
in
push
sub
cmp
push
xor
fldl
dec
or
call
xor
popf
mov
push
rorl
inc
jns
sbb
inc
pushf
mov
xchg
sbb
ja
add
or
enter
test
scas
sub
dec
cmp
xchg
sub
push
mov
mov
lods
fstpt
sub
mov
repz
add
add
or
jns
mov
inc
or
cwtl
xor
jl
cmpsb
jnp
dec
addl
jae
sahf
push
lret
out
mov
lret
bound
and
idivl
inc
test
mov
xor
das
mull
aas
push
or
sub
rorl
gs
lods
ds
or
adc
push
pop
pop
js
push
cmp
mov
mov
in
and
nop
jmp
loope
clc
or
sub
mov
mov
adc
test
loop
pop
xchg
xchg
or
cwtl
fnsave
loopne
mov
jae
pop
mov
pop
orb
repnz
cmp
mov
scas
push
push
ret
lods
mov
xchg
das
jecxz
or
outsl
mov
ljmp
mov
mov
inc
int3
xchg
out
daa
cmc
dec
xor
sub
icebp
lahf
hlt
mov
push
inc
sub
or
sar
jmp
inc
jge
aas
jge
repnz
call
and
loop
adc
pop
dec
xor
gs
out
xor
rol
shlb
gs
dec
dec
mov
cmpsl
pop
lods
sarl
mov
and
push
lea
adc
jecxz
test
sti
or
jb
jnp
or
mov
mov
push
push
outsl
sbb
jecxz
sahf
mov
or
and
sub
leave
repnz
pop
call
xlat
dec
xchg
dec
pop
out
pop
pop
shl
loope
mov
and
out
and
loope
adc
adc
push
push
cmp
mov
ds
jb
jne
push
leave
inc
leave
ja
pop
movb
pop
mov
inc
lods
cmp
cmp
dec
xor
mov
lods
std
arpl
out
inc
in
jo
xchg
mov
or
xor
lret
mov
bound
flds
fdivl
jae
pushf
inc
roll
sar
mov
sub
jo
xlat
inc
sahf
mov
aad
insl
pop
jle
sbb
ja
mov
fistpll
jg
test
popf
xchg
mov
cmp
sbb
adc
insb
cmp
rcrl
jg
call
push
data16
sub
dec
cmp
sbb
cmpsl
lcall
jo
xor
jb
pop
je
xchg
or
data16
mov
cmpb
jns
or
pop
ror
cmp
leave
lret
ficomps
insl
lret
push
movaps
and
mov
je
mov
jge
sbb
push
fs
push
aad
jl
sti
pop
sbb
and
and
ljmp
xchg
mov
in
push
mov
fstps
pop
adc
bound
int
xchg
enter
sahf
xchg
cmp
xchg
test
packuswb
sub
out
push
repz
xorl
ds
xchg
or
shll
xor
sti
iret
out
ret
add
mov
dec
scas
lret
and
jecxz
or
lock
not
and
mov
pop
pop
addr16
dec
mov
mov
jp
sub
jp
lea
and
xchg
add
mov
insb
cmp
test
dec
pusha
mov
sub
out
ficoml
mov
adc
rcl
rep
nop
adc
xor
push
mov
add
aaa
js
sahf
lds
je
or
jne
shrb
cmp
xor
sbb
testb
mov
mov
cmc
cmp
testb
adc
jns
test
insl
or
test
push
loopne
cmpsl
adc
jmp
adc
test
addr16
cmp
fildl
sbb
or
mov
mov
dec
jb
ljmp
or
push
jo
xlat
mov
leave
inc
imull
sub
scas
push
aam
pop
mov
add
sbb
pop
jmp
and
cmp
xor
xor
push
or
cld
fldl2t
mov
maxps
mov
push
cmp
sti
xchg
xchg
in
inc
xlat
out
and
dec
mov
sbb
sub
rcrl
or
loopne
jb
bound
mov
sbb
or
mov
push
imul
push
adc
xchg
add
insb
cmpsl
test
push
lcall
jecxz
push
stos
leave
jns
jmp
cld
xchg
mov
test
push
jns
dec
mov
adc
call
cmp
ficompl
stos
stos
stc
leave
cmp
out
movb
pop
shrb
adc
dec
je
movsb
mov
jl
rolb
movsl
xor
sahf
mov
pop
jns
cmp
andb
rclb
out
pop
mov
add
out
hlt
test
les
inc
lea
cmpsb
push
mov
dec
cld
mov
pop
nop
or
dec
sarb
sahf
mov
push
push
mov
iret
lret
or
fbld
xchg
or
dec
mul
and
xchg
ret
jge
xorb
xchg
mov
push
les
gs
xor
inc
mov
push
scas
xchg
lods
pusha
add
leave
shrl
imul
or
sub
sarl
pop
in
mov
mov
ret
out
movsb
push
adc
jp
add
push
std
insl
test
or
out
pop
mov
test
mov
adc
ret
fadds
icebp
lock
decl
cmpsb
lcall
notb
std
cli
mov
test
or
outsb
in
rorl
inc
popf
arpl
iret
lahf
mov
jbe
adc
sbb
mov
jecxz
xor
aaa
ljmp
sti
inc
lods
jge
loope
dec
mov
cmc
cmp
out
jecxz
dec
mov
fisubrs
pop
rcl
push
mov
or
mov
push
inc
mov
inc
into
xor
xor
inc
adc
gs
sbb
lea
in
test
mov
mov
push
add
add
arpl
adc
cld
pushf
or
jg
sbb
jecxz
or
fcomps
push
sub
mov
fistpll
xor
xor
pop
xchg
sbb
lods
inc
fdivl
data16
sbbb
dec
ja
pop
sbb
std
test
mov
or
pop
or
inc
adc
sahf
or
ret
movsl
fs
sbb
ss
mov
ror
daa
bound
pop
xchg
lret
inc
cmp
aam
outsl
cwtl
lds
jbe
ja
jnp
dec
stc
lahf
sti
out
aaa
push
hlt
fimuls
call
push
jl
rclb
jo
or
repz
jne
aad
xor
mov
sub
adc
cmc
xor
insb
ja
sub
mov
ret
sti
jb
cmp
popa
dec
sbb
ret
int
sbbl
jle
fcmovne
addb
addr16
inc
adc
pop
push
mov
ds
push
jae
pop
xchg
cmpsb
orl
mov
loope
jge
add
in
jl
mov
mov
clc
fwait
mov
sub
lea
jbe
addr16
stos
js
xchg
std
xlat
mov
fidivrl
sub
popf
pop
ljmp
movb
addr16
imul
push
mov
into
xor
shlb
fwait
ljmp
push
addl
ficoml
sbb
adc
mov
shl
or
lcall
aas
push
xchg
movsl
fimull
sbb
enter
in
xchg
insl
push
cmc
and
sarl
out
lods
push
dec
outsl
mov
mov
jmp
inc
daa
add
adc
inc
mull
pop
mov
pop
into
mov
movsb
lock
out
pop
push
and
dec
push
or
sti
aad
ja
xchg
int3
mov
jmp
xlat
xchg
in
decb
cmp
mov
ljmp
push
lock
adc
popf
aad
sbb
pop
int
pop
into
sub
cmpb
cli
dec
aam
pop
xchg
sub
push
sub
add
es
jge
xor
lock
dec
subl
xor
cmp
mov
pop
push
scas
dec
sub
mov
daa
call
push
sub
sbb
push
popa
loop
fisubs
cmpsb
xchg
lds
out
inc
sbb
mul
aas
cmpsb
adc
fldenv
movb
cmp
pop
ficompl
inc
or
xor
in
adcl
cmp
jb
cmp
pop
sub
xor
pop
lret
leave
cmc
xor
cmp
ds
outsb
sahf
jecxz
or
dec
jg
pop
fistps
xchg
cmc
mov
jae
std
lds
or
lahf
sahf
cmpsl
shrl
out
test
test
and
and
ret
lret
or
mov
cmpsb
xchg
add
dec
mov
and
and
lcall
rolb
je
xor
dec
and
jae
sbb
sub
cmc
pop
inc
sbb
mov
sub
push
aas
mov
lds
ja
add
inc
imul
cmp
lock
inc
pop
daa
ljmp
jo
cmpsb
mov
add
in
jno
add
and
fbld
cmpsb
jp
daa
loop
out
and
jp
sbb
mov
xchg
push
arpl
jmp
or
test
push
xchg
xor
fimull
in
dec
dec
stos
rorb
push
adc
mov
ss
cwtl
setg
add
aaa
xor
test
xchg
shrb
xor
push
sub
mov
lcall
imul
fstpt
mov
aad
insb
push
dec
fs
push
add
jbe
push
neg
xlat
adc
clc
inc
jecxz
pushl
jecxz
dec
cmp
jecxz
repnz
es
mov
jnp
xchg
lahf
shll
inc
mov
pop
or
adc
mov
inc
das
jl
or
daa
movsl
subl
push
mov
mov
aad
sbb
lret
sub
int3
bound
cwtl
xchg
push
loop
fidivrl
adc
xor
std
mov
iret
push
jo
jmp
push
or
jge
sub
fsubr
mov
in
adc
in
sbb
mov
stc
stos
dec
pop
cmp
les
icebp
fsubrl
mov
push
fwait
andl
popf
enter
lods
mov
dec
in
outsb
cwtl
rcr
mov
push
add
rcll
add
pop
dec
lea
cmp
inc
mov
aad
daa
out
pop
mov
mov
in
mov
mov
mov
push
inc
les
cli
adc
decl
fdivp
and
dec
add
add
inc
gs
cmp
cmc
sbb
frstor
mov
inc
xchg
xchg
fidivrs
outsb
inc
and
xchg
loope
popf
lock
sub
hlt
add
sub
test
push
inc
xchg
cmc
fstps
test
dec
mov
imul
imul
call
pop
inc
push
jns
adc
popf
jns
je
repz
cwtl
mov
fimuls
xor
sub
flds
pop
cmpsl
in
or
int
mov
ret
negl
pusha
jo
xor
scas
int
xchg
dec
inc
pop
xchg
jg
repnz
adc
ljmp
out
pop
pushf
sub
hlt
pusha
insl
lahf
mov
cmpsl
add
mov
test
lods
sbb
jmp
orb
pop
push
xor
or
mov
cmpb
mov
push
adc
dec
push
jge
aas
stos
in
and
mov
fbstp
pop
movsl
add
repnz
jo
dec
xchg
lret
sub
ret
das
scas
push
rcll
jnp
jge
and
iret
pop
cmp
fdivs
aam
push
pop
gs
out
or
mov
in
arpl
hlt
pop
and
adc
cli
cli
cmpl
push
mov
push
pop
xor
fwait
inc
add
cmpsb
cmp
aam
iret
pop
push
jg
mov
mov
xchg
das
imul
dec
pushl
mov
push
or
push
adc
push
xorl
hlt
cmp
das
loope
fistps
or
sbb
sbb
imul
repz
pop
pushf
dec
add
mov
jns
dec
test
jae
sub
or
test
je
imul
mov
add
jne
or
scas
mov
dec
mov
mov
add
sub
push
jl
cmp
push
ror
aad
pop
mov
hlt
ja
xor
sbbb
iret
or
jmp
push
aaa
jecxz
lret
stos
lods
imul
mov
stos
stos
and
inc
sbb
daa
js
jo,pt
sub
push
imul
pop
in
adc
sub
jnp
arpl
or
inc
jo
cwtl
in
into
push
mov
mov
mov
scas
cmpsb
loope
or
rcrl
mov
std
cwtl
lret
dec
adc
dec
cmp
seto
cli
sbb
add
ss
sub
mov
sbb
inc
pop
scas
mov
adc
and
push
outsb
mov
mov
cmpsl
cmp
xor
stos
or
jno
push
mov
cmc
imul
cmp
pop
in
icebp
and
or
out
in
cmpsb
in
and
xchg
iret
mov
orb
cmp
and
xor
filds
loopne
shrb
dec
jecxz
in
icebp
sub
and
sub
push
sbb
push
insl
push
adc
push
inc
test
xor
popa
xor
jne
mov
xchg
dec
adc
push
cli
test
fcmovb
repz
mov
int3
push
fidivs
bound
jecxz
andb
lret
cs
and
xchg
iret
ljmp
xor
cli
jne
xor
ret
sti
add
and
fmuls
mov
jae
sbb
out
in
out
dec
xchg
pop
mov
fdivrs
jecxz
pusha
cmp
xlat
sbb
pop
aam
jecxz
das
inc
xor
es
adc
add
hlt
int3
jo
add
add
sbb
push
sbb
xchg
inc
clc
cmp
or
mov
roll
sahf
in
pop
xor
jle
sub
insb
ss
cmp
loope
test
ret
stos
push
fs
inc
nop
test
push
sbb
test
mov
jge
movsb
ss
jmp
add
stos
jns
sbb
lds
fmuls
or
pop
cmp
push
xor
jl
xlat
call
xor
fadds
xchg
aam
gs
jmp
outsb
xchg
fcoms
ret
add
xor
dec
pusha
sbb
cs
pop
movsl
test
jmp
imul
mov
lods
jnp
push
mov
inc
inc
xor
mov
sub
pop
movsb
xor
or
repz
jp
xor
sbb
or
adc
mov
loop
fcmovu
les
sub
mov
jp
lret
mov
and
inc
pusha
leave
sub
add
and
mov
arpl
lods
in
cmp
and
data16
sbb
mov
xchg
fsubs
and
in
insb
mov
mov
sahf
loope
xor
popf
dec
subb
enter
enter
je
popa
lcall
add
xchg
ss
mov
or
std
mov
loopne
pop
mov
xlat
stos
mov
dec
push
addl
mov
shrb
or
xlat
lcall
dec
imull
iret
cmp
mov
daa
dec
ljmp
mov
pusha
insl
xchg
sub
vmovupd
stos
sbb
lods
add
orl
gs
shlb
int
into
inc
pop
out
pop
mov
lods
sub
xchg
mov
jo
xor
mov
sbb
mov
sbb
sub
xchg
fwait
mov
cmp
in
mov
push
mov
mov
xchg
fldl
push
ja
sbb
or
aas
cmc
jmp
shlb
lahf
out
sbb
dec
mov
stos
and
sbb
pop
rorb
and
sub
ret
push
sbb
and
pop
cmp
mov
pushf
mov
jno
fmulp
xor
push
outsl
seta
push
dec
dec
cwtl
shrb
dec
inc
add
mov
insl
fucomp
insb
in
loope
adc
movsb
cmp
jp
in
cmp
fadd
addr16
dec
out
xchg
loope
aas
int3
push
outsb
inc
movsb
inc
lret
cmp
and
sub
repnz
imulb
popa
sbb
and
outsl
iret
or
mov
push
negb
or
aas
xchg
iret
sbb
roll
mov
fadds
sbb
dec
or
sbb
push
lret
sbb
cmp
pop
ds
dec
cmpsl
adc
insl
mov
leave
jno
xchg
hlt
dec
ja
insb
cld
stos
xchg
jno
mov
aad
stos
adc
sbb
sub
mov
out
lcall
adc
adc
fs
sbb
orb
sbb
lods
mov
fisubrl
dec
bnd
xor
mov
xor
test
or
pmuludq
add
cld
add
int
nop
jne
xchg
mov
bound
mov
ljmp
call
inc
add
add
mov
aam
pop
jae
sub
jae
pop
cmp
dec
sarb
ja
sub
xlat
jno
push
cmc
xchg
setge
cmpsl
jge
jle
and
pop
mov
mov
dec
ret
xor
mov
push
push
push
cmc
je
aas
stc
xor
outsb
ds
inc
mov
jp
repnz
mov
mov
pop
fildl
cltd
mov
hlt
xchg
stos
sahf
jle
fsubl
popa
dec
jmp
mov
loope
movsb
test
cltd
loope
or
pop
or
out
shlb
add
jne
xchg
xchg
mov
sbb
jbe
sarb
pop
fs
stos
and
push
ja
inc
sti
mov
jno
push
addr16
mov
scas
pushf
and
ret
push
out
jb
hlt
dec
add
pop
sbb
fisubrl
idivb
incl
mov
in
xor
mov
daa
cmp
shlb
test
add
add
jge
push
push
hlt
lea
xlat
aas
mov
mov
shr
add
sbb
pop
rcll
dec
popf
psubw
adc
pop
mov
push
mov
in
es
xchg
push
scas
loopne
lea
scas
test
add
mov
nop
and
lret
sub
cmp
jge
mov
daa
xor
fdivl
jge
push
fucomp
lret
repnz
mov
sub
push
fistpl
mov
fmul
jecxz
in
adc
xlat
test
lret
xlat
xlat
loope
cmpsb
jg
imul
mov
and
xchg
inc
push
loopne
scas
nop
jno
push
std
sub
dec
repz
ret
jns
outsb
mov
dec
stos
push
and
jl
pop
adc
shlb
shrl
out
inc
push
push
in
xor
jns
out
push
inc
or
add
or
test
xor
icebp
cs
pop
fsubs
shll
mov
and
sti
sarb
lcall
pop
and
dec
cmc
lret
lods
mov
or
lea
popa
dec
pop
js
and
ja
sub
jl
test
cmp
mov
ds
in
mov
xchg
xor
stc
inc
int
jmp
ljmp
cmp
cmpsl
or
cmpsl
adc
dec
out
and
lret
outsb
sbb
bnd
insb
jo
pop
dec
int
or
xor
sub
xor
mov
add
sbb
cmp
and
inc
test
inc
fucomip
add
mov
sti
cmp
mov
shl
adc
mov
out
lods
es
mov
sar
fistps
dec
cltd
fs
sub
insl
mov
mov
data16
and
add
add
mov
push
daa
mov
mov
inc
mov
flds
sbb
rolb
xchg
out
push
sub
icebp
mov
inc
cld
outsl
cli
sbb
lock
xchg
incb
mov
mov
repnz
icebp
inc
shrl
cwtl
jne
fadd
pop
lahf
pop
jns
push
shl
ss
jb
xchg
movsb
ss
mov
inc
inc
cmp
jmp
fdivrs
imul
xchg
mov
test
sub
sub
pop
xchg
mov
add
std
out
outsl
jae
and
leave
or
in
jmp
iret
ds
add
sub
sub
xor
xor
and
test
mov
sbb
ja
js
adc
into
sbb
dec
out
pop
mov
ljmp
mov
ret
pop
mov
repz
mov
ficompl
sbb
in
push
roll
push
arpl
xor
push
cmp
insl
loop
dec
inc
add
das
leave
dec
xor
mov
out
jp
xorl
mov
jb
das
rolb
xchg
xchg
sub
fists
cmpb
dec
jno
push
mov
jns
pop
lret
pop
fistpll
cmp
xor
ljmp
pop
adc
in
and
fwait
push
insl
and
leave
cli
insl
ljmp
addr16
out
pusha
pop
cmp
mov
bound
arpl
addb
daa
shlb
pop
iret
or
xchg
icebp
push
je
iret
fwait
push
popf
jo
repz
filds
mov
rcl
xchg
and
dec
sub
dec
repz
and
leave
pop
lea
mov
daa
rcl
sub
aaa
outsl
cltd
clc
sbb
inc
les
pop
xchg
pushf
and
pop
hlt
popa
loop
inc
adc
add
mov
mov
jge
push
int3
aam
rcr
jl
xor
push
dec
add
pop
fs
dec
or
cmpsl
andb
mov
stos
lret
mov
je
imul
repz
and
lock
adc
xchg
cmc
sub
idiv
jnp
into
jecxz
jmp
pop
jle
fstpt
jp
cs
adc
repnz
jle
out
repz
and
ja
push
popa
xor
unpckhps
push
mov
out
xor
adc
or
pushf
clc
and
mov
push
cli
out
ret
out
iret
and
pop
cmp
xor
movsl
lods
mov
in
mov
aam
pop
xlat
rcl
imul
lds
lahf
mov
leave
test
ss
outsb
or
sbb
inc
jge
and
in
add
jle
in
lcall
clc
shlb
xorl
popa
repz
jl
add
shll
adc
dec
xor
lea
aam
sbbl
cmpsl
or
pop
insl
mov
xchg
bound
adcl
cmp
xchg
xor
jp
dec
ret
sub
es
mov
add
fistpll
nop
ds
pusha
jbe
jno
hlt
scas
push
imul
or
cld
call
loope
lds
lods
dec
inc
mov
cmpsl
out
loopne
mov
std
cmpsb
int
jb
xor
or
arpl
rol
xchg
xchg
lods
pusha
push
sub
jne
cwtl
cli
stos
sub
adc
xchg
push
ljmp
popf
cli
xchg
repnz
mov
xor
test
pop
sbb
jnp
push
dec
push
loopne
orl
sbb
mov
push
dec
cmp
dec
mov
into
inc
lock
int3
xor
nop
push
test
lahf
mov
inc
xchg
movsb
lods
mov
outsl
pop
dec
into
jo
inc
sbb
xor
nop
test
movsb
in
inc
add
jne
ret
cmpb
dec
cmp
adc
dec
jecxz
sub
pop
add
sub
fmuls
aad
arpl
dec
pop
adc
fbstp
mov
xchg
sti
dec
movsl
adc
xchg
jno
jbe
nop
jno
fiaddl
ljmp
dec
and
repz
jae
popf
mov
test
gs
mov
lds
xor
out
pop
in
add
jae
test
popf
lret
outsb
aad
dec
pop
mov
inc
in
sbbb
test
push
gs
xchg
sbb
inc
fs
pop
sub
push
jnp
shl
icebp
and
fwait
jmp
fstpt
xor
jg
and
dec
rclb
dec
cli
mov
inc
lret
arpl
frstor
enter
jle
pushf
sbb
xchg
add
dec
xor
mov
mov
push
xchg
or
cmp
pop
scas
push
mov
add
jecxz
mov
outsb
in
pop
daa
dec
jns
test
sub
jmp
xchg
mov
xor
mov
addl
es
in
pop
jg
das
sub
jno
rolb
or
movsl
adc
adc
subb
or
and
cli
jmp
mov
and
pop
nop
or
testl
xchg
adc
push
movsl
push
and
jbe
or
jbe
lcall
pop
or
jnp
dec
arpl
sti
cmpsb
xchg
test
fld
cli
mov
xor
jb
push
lods
inc
mov
jl
cmp
mov
inc
push
clc
pop
cld
pop
cmc
adc
xor
dec
jno
fcomi
in
test
cmp
or
sarb
ss
repz
or
mov
ja
mov
adc
and
fisttpl
rcl
outsl
sub
mov
in
xorb
mov
call
inc
xchg
clc
iret
decb
mov
out
enter
shlb
das
sub
fldenv
sahf
cmp
and
jb
mov
xchg
popa
les
sub
mov
movl
xchg
xchg
cmp
rcr
ljmpw
lahf
int3
ja
es
pop
or
pusha
insl
fistpl
andb
in
inc
push
adc
mov
push
or
testl
arpl
fldt
shl
in
xchg
push
and
or
hlt
xchg
pop
xchg
sarb
inc
sahf
aam
sahf
clc
fwait
and
mov
cmpsb
xor
pushl
arpl
ficoml
push
gs
cmpsl
and
aad
movsb
addl
jb
xchg
and
fisttpl
inc
cmp
xor
and
jb
mov
pop
xor
lods
pusha
ficoms
sub
out
mov
xchg
std
jl
cmp
repz
pop
add
push
add
jbe
test
scas
pop
adc
and
lcall
mov
inc
jae
xor
pop
pop
cmp
sbb
push
xchg
sti
adc
cmp
cli
enter
mov
subl
movsb
cmp
and
dec
js
push
pop
mov
adc
js
aad
mov
xchg
push
inc
fwait
cmp
xchg
cmp
jle
mov
roll
in
xchg
mov
or
aas
jnp
fldenv
scas
in
into
hlt
fstpl
jle
jno
dec
pop
push
jl
push
mov
push
inc
outsl
sahf
xchg
xchg
cltd
inc
inc
sub
mov
jge
jecxz
mov
arpl
out
push
fsts
repz
orl
mov
sbb
lcall
pop
xor
pop
xor
dec
leave
dec
cmpsl
sub
inc
xor
out
adc
fnstcw
sub
mov
cmp
and
cmpsb
popa
ret
das
mov
xchg
and
add
adc
mov
outsl
loop
add
inc
push
lock
leave
push
ss
mull
scas
adc
pop
sbb
hlt
mov
ds
scas
xchg
hlt
push
adc
fisubrl
add
leave
mov
xor
in
rolb
add
pop
dec
adc
scas
divb
stos
mov
sub
push
outsb
in
ds
jno
inc
insb
into
pop
out
mov
xlat
xor
xchg
daa
push
inc
hlt
shrl
pop
adc
fildll
pop
mov
sarl
aad
sahf
jae
xor
jge
repnz
add
sbb
por
repz
or
icebp
inc
stc
fs
in
jle
ja
lock
mov
lock
fldt
mov
xlat
xchg
jecxz
inc
fistpl
mov
movsb
neg
or
sti
lea
in
subl
mov
pushf
lcall
dec
push
adc
or
push
adc
dec
sbb
adc
mov
jp
mov
andl
or
movl
mov
cmpsb
enter
xrelease
or
nop
mov
or
xchg
lea
jmp
xor
lcall
pop
or
div
push
pop
aad
fwait
icebp
inc
mov
lods
pop
push
cmc
mov
in
das
testb
jmp
and
cmp
add
or
mov
xorl
sbb
xor
cmp
js
cmc
in
outsl
fdivs
pop
mov
stos
mov
fcomip
movsb
dec
pop
enter
xlat
push
or
ljmp
mov
add
xor
fbld
add
or
xchg
cmp
mov
adc
ds
hlt
cmp
jbe
icebp
mov
outsb
pop
xor
fbstp
jnp
addb
adc
push
les
mov
sbb
xor
rorb
dec
cmc
mov
fprem1
add
sub
call
pop
mov
das
sbb
jp
ret
je
jbe
xchg
bound
out
mov
and
adc
jns
aam
adc
mov
xchg
dec
shl
mov
mov
jl
dec
sub
shlb
cmpsl
xor
cmp
les
movsb
aam
cmc
repnz
push
push
fs
inc
push
or
cmp
and
dec
mov
rorb
aad
ss
and
add
cmp
mov
mov
aam
in
adc
lods
xor
in
push
cmpsb
test
and
or
push
shlb
in
adc
or
hlt
sahf
out
aad
lock
orb
xor
aam
dec
jne
push
int
orb
dec
xchg
bound
lret
adc
jb
sbb
cmpsb
pop
mov
hlt
insl
lods
cmp
xor
in
addl
sbb
fmul
mov
and
xor
mov
mov
sti
mov
and
stc
pop
mov
loop,pt
mov
mov
jmp
xchg
rcll
mov
sbb
ss
repnz
in
test
lahf
mov
pop
popa
lcall
andl
leave
jae
test
fdivrs
or
jbe
dec
push
mov
test
dec
iret
and
inc
das
or
rcrb
std
fwait
xor
xlat
shl
ljmp
mov
rol
sti
pop
ret
push
xor
inc
into
push
adc
adc
stos
and
test
ret
jmp
add
in
dec
push
jnp
mov
cli
mov
xor
and
push
mov
std
mov
dec
insb
movsl
jl
dec
sti
push
ds
push
or
bound
adc
rol
loope
in
pop
pop
sub
stos
jp
out
js
enterw
sub
adc
into
xchg
aas
popa
testb
jo
xor
sbb
inc
das
inc
mov
test
psrlw
push
imul
in
xor
jg
add
dec
cmc
xor
sti
jno
dec
das
loop
ljmp
mov
shlb
pop
jg
shlb
mov
stc
int
scas
pop
rcrl
sbb
addb
jecxz
imul
inc
jecxz
inc
pop
adc
dec
stos
sar
jno
add
cwtl
and
orb
js
loopne
push
and
testb
pop
push
repz
aas
add
ja
out
fcomip
jp
xor
jg
stc
pop
xchg
or
jmp
ret
lret
sub
mov
in
mov
inc
popf
test
push
and
xchg
jge
cmp
inc
push
cmp
addr16
int
pop
adc
push
loop
das
je
out
xchg
xor
sti
dec
sub
je
stos
push
int
test
and
addr16
and
movsl
jno
dec
inc
inc
icebp
xor
ds
push
in
lods
fisubs
inc
mov
outsb
cmpsl
cltd
xchg
adc
sbb
in
sub
movsl
adc
lods
and
cmc
loopne
rcrb
ljmp
in
mov
push
dec
pop
addr16
sub
mov
imul
in
dec
aad
icebp
xlat
xchg
dec
mov
gs
jno
push
lock
sub
add
aam
loopne
cld
sub
dec
sbb
push
popf
subb
cs
mov
pop
push
repz
loope
xorl
iret
or
sbb
mov
in
cmp
xor
stos
mov
jns
and
xchg
popa
mov
outsb
aam
test
xchg
shll
mov
dec
jmp
mov
movlps
es
in
scas
out
push
xor
stc
dec
mov
lods
mov
xor
sub
sub
incb
cmp
or
sbb
test
push
add
xchg
iret
mov
testb
inc
test
das
fsts
mov
mov
inc
stos
lods
rcr
mov
andb
add
mov
fwait
dec
ret
adc
or
loop
push
xchg
and
repnz
mov
sti
sti
aaa
add
inc
pop
loopne
xchg
jo
int3
mov
jecxz
xorb
sub
inc
andl
push
enter
xchg
push
out
ss
scas
mov
subb
mov
les
inc
arpl
jmp
enter
lcall
mov
inc
arpl
sub
insl
mov
jnp
popa
stos
push
lcall
cmp
jg
mov
or
pop
clc
leave
cli
mov
jecxz
jp
lcall
mov
dec
or
sbb
dec
sub
mov
pop
or
in
inc
bnd
xchg
sub
aaa
repnz
fildll
repnz
mov
add
inc
rorl
dec
call
fsub
add
cmp
sbb
loopne
or
je
mov
cs
inc
shll
xchg
loope
pop
jae
or
jg
or
addr16
lock
aaa
mov
sbb
testl
decl
fildll
rcll
popf
fisubl
lcall
jbe
movsl
leave
js
int3
add
xor
mov
addr16
lahf
and
dec
pop
mov
inc
sbb
sbb
fs
sar
push
sub
mov
pop
push
sub
mov
or
ja
fwait
xor
test
mov
jmp
mov
rorl
lahf
test
cmpsb
or
dec
push
test
jg
sub
mov
jns
push
or
into
rcrl
xor
imul
imul
in
rol
cli
mov
mov
data16
xor
cwtl
lods
lret
lods
push
jp
xor
jbe
fidivrl
adc
dec
pushf
rcr
mov
insl
xor
adcl
int
lea
lahf
test
lock
gs
and
daa
cmc
pop
nop
adc
or
sub
push
inc
aam
outsl
pop
aad
sti
les
adc
pushf
stc
push
inc
push
aas
pop
test
loope
xchg
gs
xor
and
lea
xchg
int3
and
adc
inc
mov
jo
imul
outsb
xlat
lds
push
mov
sbb
inc
insl
inc
out
mov
mov
pop
mov
jl
lock
mov
fnstsw
div
pop
adc
xchg
cmp
or
mov
inc
mov
cmp
js
std
pop
into
jns
aas
xchg
mov
sub
jne
outsl
movsb
inc
mov
negb
mov
outsl
jp
jnp
push
pushf
shll
icebp
nop
adc
xchg
lds
es
bound
clc
add
cmp
sub
pop
shr
fst
and
cltd
xor
or
jmp
xchg
adc
xor
in
push
popf
jge
push
cmp
popf
lods
add
insl
sbb
mov
xchg
loope
inc
ljmp
loope
jge
outsl
sti
adc
mov
xchg
jecxz
push
xchg
es
mov
mov
and
push
arpl
int3
cmp
mov
xor
push
adc
mov
push
rcrl
hlt
mov
xchg
cmpsl
jmp
pushl
sbb
shll
dec
mov
jne
lret
imul
or
lods
cmp
push
lcall
mov
sub
mov
sbbb
mov
and
jb
aas
aam
movsb
out
cmp
cmp
fcmovb
shlb
and
jmp
repnz
add
inc
in
push
jo
ljmp
popa
cmp
or
jg
push
stc
mov
dec
dec
call
push
out
dec
je
xor
lods
push
movsb
lock
test
fstpl
mov
ret
pop
std
dec
jg
lret
test
mov
and
adc
mov
sti
sbb
push
adc
cmp
pop
pop
call
test
mov
cmp
je
push
outsb
mov
push
imul
pop
mov
dec
pop
sub
adc
push
pop
daa
js
lret
leave
arpl
add
xor
rorb
jae
fwait
cmpb
fildl
push
xchg
movsb
fs
inc
dec
mov
mov
sarb
mov
jle
aaa
cmp
cmp
mov
pop
ficomps
scas
inc
repnz
out
je
call
filds
or
clc
insb
mov
push
jae
and
push
or
popa
test
xchg
aad
test
out
ds
ja
sarl
pop
test
or
inc
add
popf
push
xchg
sahf
imul
pop
andl
fs
sub
dec
fiaddl
lods
popa
icebp
ret
hlt
push
sbb
repnz
mov
test
mov
lds
mov
lods
addl
hlt
imul
pop
icebp
pop
nop
cmpsl
jbe
push
or
addr16
jbe
pusha
imull
fwait
mov
add
lds
sub
fwait
mov
xchg
dec
cmp
jb
xchg
stos
out
xchg
or
push
and
arpl
hlt
movsb
movsb
in
and
mov
push
sti
lds
mov
and
in
adc
adc
scas
cwtl
imul
mov
dec
sbb
lods
sahf
lea
out
mov
xchg
adc
pusha
iret
push
mov
adc
lret
and
mov
scas
hlt
es
inc
fst
xlat
and
or
pushf
cmp
push
and
enter
add
dec
xor
xchg
jae
sub
fldt
and
mov
jecxz
adc
in
push
loopne
mulb
cmp
loope
test
cmp
daa
frstor
std
lods
cmpsb
push
xlat
lcall
ljmp
out
sub
dec
js
push
mov
mov
loopne
cmc
jae
fdivs
js
lods
outsb
imull
clc
cmp
rol
rorb
cmp
add
cmp
add
push
addr16
aam
or
push
inc
cmp
lcall
mov
sbb
js
lahf
adc
xor
fwait
or
xchg
cwtl
cld
or
pop
mov
push
loopne
rclb
rorb
inc
daa
mov
jg
mov
loop
xchg
jno
cmp
sarl
xchg
std
jle
push
xchg
mov
mov
orl
stos
ja
and
sub
jmp
shl
sub
into
mov
aad
das
cli
pop
push
mov
out
cltd
jl
mov
add
stc
adc
pop
mov
inc
xlat
nop
and
test
ret
stos
insb
and
stos
xor
jl
add
in
rcr
das
xor
outsl
and
push
sub
or
or
in
xchg
xchg
lds
pop
pushf
ret
movsl
push
mov
pop
stos
popf
cmc
stc
sbb
add
int3
mov
ss
lods
push
sub
adc
mov
in
push
add
or
and
js
addr16
push
and
hlt
jne
add
cmp
test
sub
imul
jo
jae
inc
into
sub
movsl
pusha
mov
pop
add
gs
and
xor
enter
imul
ja
jmp
jecxz
enter
mov
inc
shlb
dec
ss
sub
jecxz
loope
xor
sarb
mov
xor
pop
cmp
lock
and
pop
mov
pop
aas
sub
xchg
pop
cmp
cld
mov
mov
push
push
popa
push
js
and
or
and
cmp
shll
call
lock
fs
lds
jmp
mov
imul
addr16
in
mov
xor
imul
icebp
jnp
mov
nop
sbb
loopne,pt
adc
sub
sub
push
sbb
dec
adc
inc
jae
adc
cmc
ja
cmp
dec
int3
mov
xor
outsb
aam
mov
cmp
mul
push
pop
or
stos
rcrb
mov
xchg
sub
adc
hlt
xor
in
lret
out
sbb
lret
mov
or
sbb
mov
cmp
jnp
mov
mov
xorl
mov
xor
in
xchg
sbb
cwtl
pavgw
je
shlb
popf
cltd
xor
mov
aam
mov
push
notl
mov
fs
ja
sub
sbb
fwait
and
push
rorl
sbb
out
mov
test
orl
or
mov
int
xchg
mov
out
xchg
jne
inc
mov
or
sub
sbb
sub
add
cmp
adc
cmpsl
lods
push
loop
adc
dec
pop
pusha
enter
add
adc
xor
pop
lods
or
jge
aad
push
shrb
pop
loope
in
movsl
imul
jmp
push
xchg
xchg
sbb
or
aas
notb
push
movsb
aas
cmp
hlt
xchg
mov
bound
dec
jb
pop
cmpsl
mov
push
cmpsb
xor
sbb
mov
xor
adcb
jb
pop
and
ss
ss
xor
sbb
fstpt
je
aam
ret
mov
push
sbb
inc
adcl
jl
push
in
xor
imul
stos
repnz
cmp
or
clc
test
and
push
xchg
ret
xor
mov
popf
lods
pop
cli
mov
jne
sahf
sub
stos
push
push
sbb
out
je
inc
mov
inc
mov
push
in
push
push
sbb
imul
sahf
stc
ja
out
into
iret
test
nop
push
pop
stos
pop
ret
ljmp
mov
push
push
cmc
mov
addr16
xchg
fldenv
rol
fdivrs
and
call
xor
push
imull
mov
inc
fwait
lcall
push
inc
xchg
and
jl
jle
testb
scas
pop
push
pop
cmpl
rcrl
xlat
mov
enter
sub
adc
aam
loope
dec
mov
ljmp
dec
cmp
mov
and
lret
arpl
xor
pop
pushw
cmp
shlb
mov
shll
enter
pop
dec
add
lret
and
xchg
fwait
and
push
pop
ja
jae
pop
dec
fs
test
nop
pop
pop
and
ja
adc
push
adc
or
frstor
pop
push
inc
or
mov
aad
xchg
ficomps
pusha
repnz
and
push
push
mov
jbe
cli
jnp
jmp
es
jge
fs
jae
int
or
mov
rcrb
mov
mov
pop
gs
pop
jb
bnd
lret
push
lcall
insb
pop
mov
pop
cltd
xor
iret
or
adc
xchg
movsl
add
std
movsb
enter
pop
enter
jae
cmp
fs
dec
xor
push
mov
xor
inc
jmp
stc
jecxz
mov
sbb
shrl
popf
es
xchg
imull
divb
push
out
xor
push
sahf
adc
cwtl
bound
xchg
rclb
dec
jbe
jnp
cmp
lds
mov
mull
inc
call
xchg
outsb
push
pop
addr16
sub
sub
xor
lret
cmp
lret
fldt
xlat
mov
cmp
ss
addr16
pop
mov
jo
sub
xchg
stos
imul
and
mov
fsubl
jae
mov
mov
pop
icebp
push
mov
sub
leave
aam
sbb
push
xlat
aam
adc
cmc
and
mov
and
mov
xchg
cmp
push
mov
insb
sub
mov
xchg
arpl
popf
cmpsb
test
xchg
xor
in
push
mov
and
mov
push
push
mov
pop
jno
mov
sub
mov
shll
pop
jb
jb
inc
fidivrs
cmp
and
adcl
addr16
inc
adc
aas
dec
cs
loop
dec
mov
cmp
xlat
clc
push
stos
fs
pop
jecxz
sbb
subb
int
fldenv
xchg
shlb
cli
pop
inc
pop
mov
sbb
inc
dec
jns
popa
jg
mov
xor
iret
pop
pop
in
add
ret
adc
iret
adc
mov
fcoml
xchg
insb
cmp
mov
push
cld
test
jmp
push
aaa
out
icebp
mov
pop
pop
fs
lea
pop
cmp
cli
addr16
xor
fisubrl
aad
ja
pop
lea
adc
maxps
xor
dec
jo
ret
cmpsl
nop
shl
mov
adc
xchg
ljmp
in
sbb
cmp
sub
xchg
xor
inc
pop
jno
std
fists
push
fcomip
rcrl
arpl
leave
mov
cmp
cwtl
into
jb
or
data16
jmp
inc
inc
cmp
push
mov
xor
mov
mov
mov
leave
mov
loop
fsubl
sub
jge
jne
and
lock
pop
jbe
in
les
daa
cltd
scas
xor
mov
outsl
add
mov
jl
add
sar
push
cli
test
ds
and
add
dec
fnstenv
popf
dec
call
fnstenv
push
aas
add
in
lods
dec
mov
or
pop
push
ja
lret
mov
daa
push
pusha
push
icebp
xchg
jmp
add
dec
pop
inc
js
jae
addb
xchg
test
push
add
fsub
mov
into
in
push
jle
mov
in
xor
xor
cmpsb
sub
inc
scas
and
dec
movsb
jnp
dec
adc
stos
adc
out
xchg
gs
clc
inc
and
leave
aaa
and
gs
insb
add
lods
push
inc
cwtl
pop
mov
dec
repnz
xchg
dec
insl
fwait
push
and
push
test
mov
lods
sbb
in
imul
arpl
scas
bound
jmp
mov
mov
push
cmp
lahf
dec
mov
insb
addb
adc
dec
mov
les
lock
idivl
add
lods
mov
loopne
xchg
bound
neg
or
sub
adc
or
jecxz
or
aaa
jne
imul
imul
ret
in
hlt
or
jno
inc
xor
cmova
das
xchg
add
fisubs
or
lcall
xor
pushl
jb
push
mov
outsb
cmp
pop
loop
rcrb
pop
rcrl
cli
mov
mov
push
imul
in
cli
repz
pop
add
adc
mov
xchg
mov
lahf
repnz
out
cmovb
sahf
jle
test
push
add
cs
mov
add
jne
pop
jge
into
enter
dec
mov
push
repnz
pop
test
sahf
data16
clc
test
ficomps
pop
rorb
rolb
cmp
and
les
jns
sub
ljmp
or
xor
imul
in
inc
loope
jnp
jg
test
in
jo
aad
jns
int3
cmp
adc
dec
adc
or
sbb
lret
push
cmp
push
push
sub
inc
repz
stos
shlb
push
icebp
ja
and
push
push
cwtl
aas
ja
enter
jbe
dec
mov
pop
cmp
mov
mov
and
fs
stos
hlt
pop
sub
inc
out
insb
jle
jno
inc
dec
inc
adc
dec
jl
in
xchg
sub
divl
pop
repnz
ds
out
leave
jge
or
lock
in
jl
loop
mov
sub
rcll
leave
nop
jnp
jae
dec
xchg
in
push
repz
xchg
pushf
lahf
push
cmpsl
sti
not
or
sub
push
into
in
hlt
scas
rcl
out
ja,pn
bound
adc
mov
scas
cmp
scas
sub
mov
mov
scas
cltd
sti
jecxz
rorl
mov
in
popa
daa
push
jecxz
push
dec
fmul
sub
outsl
jmp
xchg
imull
inc
xlat
arpl
ret
cmp
jb
push
stc
cmp
and
xchg
pushf
inc
pop
xchg
mov
ljmp
xor
xorl
ljmp
mov
lret
push
test
fmul
xchg
sub
mov
cltd
jmpw
xchg
and
mov
jae
and
lods
idivl
dec
std
inc
lahf
addl
dec
cwtl
pop
pop
in
add
sub
cmp
add
pushf
xor
jbe
mov
stos
je
rolb
mov
push
pushf
inc
inc
bound
inc
popf
push
xchg
cwtl
mov
sbb
mov
int
and
pop
aas
repz
gs
adc
jl
dec
filds
ret
mov
data16
mov
or
sbb
out
popf
call
stos
shl
test
xor
sub
jl
lods
inc
lahf
rcrl
adc
mov
ret
inc
mov
sub
cmc
leave
sarb
lret
mov
pop
mov
xor
hlt
mov
ljmp
mov
cs
adc
out
jae
pop
aam
hlt
stos
mov
int3
add
in
sub
lea
in
arpl
into
jns
push
insb
sahf
fcmovnu
jle
hlt
cmp
js
faddl
mov
mov
adc
dec
push
inc
mov
les
adc
cwtl
push
testl
notb
cmpsb
inc
cld
cmp
xchg
xor
pop
push
or
fiaddl
lcall
sahf
in
out
pop
fcmovb
fwait
dec
mov
pop
clc
mov
pop
cmc
jns
and
into
das
cwtl
adc
mov
dec
mov
scas
sbb
test
xchg
dec
push
sbbb
rorb
push
scas
add
push
inc
outsb
test
or
pop
xchg
jle
adc
adc
push
outsb
mov
movsb
bnd
outsb
dec
lds
fmull
rolb
inc
xlat
sub
dec
lret
or
es
pop
popf
shll
in
push
shlb
xchg
push
xor
dec
call
adc
sub
inc
adc
call
call
dec
fisttpl
xchg
jae
aad
fisubl
dec
adc
repnz
or
mov
adc
lret
push
daa
lods
aam
and
sub
cmpsl
out
xchg
push
and
mov
test
mov
jp
cmpsb
cltd
lret
in
aas
int
sub
lods
out
cmpsb
sub
add
fldt
loop
push
sar
sub
das
jle
xchg
stos
push
sbbl
pop
cwtl
cs
dec
insl
or
pop
jno
mov
pop
xchg
push
adc
mov
push
iret
nop
jg
jae
js
mov
cld
adc
inc
nop
inc
sti
nop
sub
xor
fmul
or
fistpll
aas
mov
mov
push
out
adc
sbb
cli
pop
dec
aam
ret
es
sbb
fldenv
popa
popa
ss
cmp
aaa
push
and
nop
ljmp
outsl
and
push
ss
mov
es
in
nop
jne
div
mov
lods
test
test
scas
dec
ljmp
mov
push
enter
imul
dec
ljmp
adc
rcrb
add
lea
and
pop
es
sub
lcall
rcll
mov
loopne
adc
and
js
cmp
jge
add
add
ds
jbe
pop
arpl
mov
xor
dec
sub
dec
cmp
sbb
mov
mov
lcall
or
sub
dec
movsb
cld
shll
jae
sub
xor
xchg
cmp
and
pop
dec
jb
jae
imul
mov
xchg
pop
inc
inc
add
push
dec
jae
cmp
push
mov
inc
sbb
fdivrl
cli
test
pop
pop
inc
popf
sub
loopne
mov
mov
mov
xor
icebp
inc
pusha
sub
iret
cmp
arpl
stos
mov
ret
mov
subl
mov
dec
pop
jmp
test
cmpsl
rolb
xchg
sbb
ds
data16
cmp
aam
dec
repz
jmp
aam
sub
stos
xchg
mov
pop
jge
xlat
mov
rolb
jmp
fildl
xchg
cmp
enter
outsl
sub
push
mov
cmc
das
jbe
or
imul
push
and
add
mov
cmp
rclb
fdivrs
es
add
push
inc
dec
les
and
inc
lods
xchg
mov
dec
xchg
into
fcmovne
cmp
clc
js
jb
mov
xor
mov
mov
rcrl
popa
jno
xchg
or
daa
rclb
mov
xor
mul
pop
repnz
lock
jae
out
in
inc
clc
outsb
divb
push
adc
pop
pusha
mov
xor
loopne
xor
pop
xor
push
lret
adc
adc
sbb
mov
mov
stos
pop
cli
pop
sub
jbe
js
addr16
stos
add
aad
ljmp
jmp
pusha
stos
mov
xchg
test
in
fwait
or
cs
test
repz
lcall
jecxz
xor
push
xchg
inc
push
jne
pushw
xchg
mov
pushf
lahf
shlb
into
cmc
test
icebp
mov
imul
xchg
mov
cmp
bound
leave
xor
add
aam
cs
cs
dec
cmpb
sub
add
imul
repz
ficoms
cmpsb
jne
mov
or
cmc
dec
fnstenv
ficomps
data16
mov
cmp
cmp
insb
mov
mov
lea
sub
int3
fdivrl
sub
push
test
mov
ret
bsr
rcll
je
enter
ljmp
push
dec
icebp
adc
mov
loope
insl
or
adc
dec
div
loop
or
mov
addl
xchg
pop
xchg
stc
jnp
push
cwtl
int
fucomip
pop
das
std
inc
xor
lret
adc
iret
inc
cli
not
add
in
jnp
lea
das
rorb
stc
call
mov
pusha
push
dec
or
jbe
lahf
pusha
dec
mov
cmp
mov
test
mov
adc
test
xor
sub
dec
lret
sahf
sti
mov
ret
mov
mov
push
fdivs
andl
loopne
jae
mov
dec
mov
cs
lds
push
adc
xor
mov
xlat
xchg
test
mov
mov
dec
pop
pop
add
jae
and
push
pop
insb
mov
jo
push
mov
sbb
aaa
leave
lahf
xor
int3
arpl
out
add
in
sub
fcomps
test
cmp
xchg
imul
movsb
lods
or
mov
pop
adc
cs
xor
loopne
mov
and
outsl
push
movsl
cmp
js
sar
mov
out
or
push
das
movsb
repnz
adc
or
xchg
dec
inc
repz
pushf
push
fnop
enter
popl
jae
clc
int
cld
cmpsl
xchg
sbb
add
mov
and
add
in
stos
adc
dec
and
dec
popa
push
jg
loope
movsl
out
ror
mov
ja
push
lds
das
popa
xor
das
pop
dec
repnz
inc
popa
fstpt
ja
fistpll
lahf
mov
mov
pop
push
pop
dec
insb
xor
push
rclb
jmp
mov
int
mov
mov
mov
mov
or
adc
divl
and
sub
xchg
fisttps
es
sbb
cmp
mov
or
jo
add
fwait
push
mov
hlt
out
dec
pop
xchg
jo
dec
pushf
push
inc
adcb
jmp
hlt
out
mov
aad
or
lock
stos
jecxz
movsl
adc
scas
inc
sar
push
jb
dec
adc
or
gs
enter
jge
jo
cmpsb
mov
push
jae
stos
sahf
mov
mov
ds
bound
push
cmpsb
xchg
repz
fcoms
cmp
sub
add
lea
mov
js
mov
mov
cmp
lcall
pop
mov
popa
mov
push
dec
pop
add
addr16
mov
rcl
mov
mov
sub
xchg
sub
dec
lods
popf
cmp
jb
sbb
sub
cmp
xchg
push
mov
lea
sbb
cmc
neg
fs
into
aad
lahf
rcrb
scas
insb
push
mov
stos
fstl
mov
icebp
test
scas
adc
adc
push
andb
jle
hlt
cmc
scas
inc
imul
mov
xchg
push
sarl
outsb
sub
mov
jbe
fistps
and
jp
add
dec
ret
lea
pop
jp
xor
xchg
bnd
xor
and
pop
inc
repnz
xchg
aaa
fistps
ja
or
out
jbe
stos
sahf
jb
jbe
insb
mov
and
insb
or
stos
int3
movupd
aam
shll
pop
inc
cmp
dec
subb
sbb
xor
mov
push
stos
test
mov
sbb
test
inc
scas
dec
addr16
jmp
clc
data16
sub
insb
inc
xchg
std
add
jnp
cmp
cmp
int3
jb
addr16
dec
shlb
inc
xchg
adc
out
jne
mov
outsb
movsb
addr16
pop
push
out
mov
adc
aam
fwait
orb
or
cmp
or
push
cmpsl
jns
insb
mov
and
movsl
in
cmp
sbb
xor
lcall
xlat
sbb
popf
add
pop
jo
lcall
lcall
inc
add
pop
push
std
loopne
outsl
jecxz
pop
nop
incl
repnz
dec
sahf
dec
mov
jbe
sbb
push
inc
mov
testb
push
inc
add
jg
mov
jge
sbb
jno
mov
and
mov
ljmp
sbb
andb
mul
mov
fucomip
xor
add
dec
arpl
dec
xchg
into
sub
imul
mov
ficoms
lret
sub
testl
sbb
fcomps
push
enterw
mov
sbb
fidivrs
jae
mov
adc
popa
sub
pop
adc
sub
test
cltd
push
std
in
stos
bnd
int3
shll
cltd
sbb
jae
adc
loop
dec
or
iret
outsb
xor
jmp
jb
cmp
cmpb
dec
jnp
arpl
shrb
add
out
mov
pop
pop
jno
bound
adc
scas
inc
mov
int3
cmp
enter
mov
outsl
loop
sbb
ret
xchg
or
push
cmp
arpl
push
sbb
pop
pop
sbb
mov
out
inc
sub
pop
leave
out
sbb
sbb
xor
cmp
and
push
mov
enter
lock
xor
jbe
fcoms
mov
call
test
in
push
pop
pop
jecxz
mov
pop
sti
fadds
sub
pop
ja
add
sahf
sub
imul
cmp
loope
fistpll
scas
idivl
jmp
nop
mov
hlt
lods
mov
loop
cmp
in
push
idiv
cmp
mov
shrb
pop
mov
into
imul
out
xorb
push
pop
add
fs
sub
fnstsw
enter
xchg
pop
xchg
je
int
movsb
lods
mov
xchg
lds
xchg
mov
and
add
add
inc
add
shll
mov
test
lahf
pop
das
lret
loop
cld
add
outsb
xchg
cmp
mov
arpl
dec
cmp
jo
add
mov
dec
xchg
push
loope
mov
add
leave
xchg
fcoml
push
or
in
add
test
lods
stos
cmp
fsubrl
lds
es
xor
mov
inc
jb
das
rorl
pusha
xchg
lods
xchg
es
fstps
pop
das
cmpsb
lcall
pop
out
ljmp
mov
push
lret
adcl
or
out
shll
dec
pop
stc
nop
lahf
sub
inc
inc
mov
in
pop
loop
fldl
sahf
outsb
push
add
scas
adc
push
pop
movsb
and
popl
call
sti
pop
stos
pop
es
rorb
mov
or
add
cmp
mov
lcall
aam
jp
test
xchg
cmpsl
int3
pop
mov
jns
popf
pop
xchg
fcmovnbe
mov
cs
imul
out
clc
sub
and
ds
mov
ss
enter
adc
xchg
sub
pop
mov
enter
xchg
mov
xchg
and
inc
loope
lcall
xchg
adc
mov
add
pop
stos
ss
mov
lret
sahf
test
sbb
xlat
stos
pop
imul
adc
cmpsb
mov
test
mov
dec
inc
popa
push
jae
movsl
sbbb
mov
mov
dec
dec
mov
stos
cmpsl
addr16
sahf
jo
mov
pop
pusha
inc
inc
clc
push
and
add
jo
mov
lret
pop
or
push
loope
cltd
or
or
out
dec
fisttpl
fsubs
push
adcb
jmp
push
popf
or
stos
jp
ret
std
xor
or
mov
adc
xchg
jb
inc
mov
push
add
xor
hlt
add
loopne
imul
xchg
sarb
dec
scas
test
push
dec
mov
jecxz
call
mov
imul
aad
shll
cmp
push
out
sub
sbb
popa
cltd
pop
aad
lds
inc
scas
in
mov
adc
inc
frstor
std
sub
inc
push
sbbb
fdivs
sti
xor
in
pop
add
sarb
adc
rolb
inc
sub
xor
xchg
and
gs
in
fs
insb
jg
rcrl
sarb
inc
scas
and
outsb
fbld
mov
xlat
xchg
adc
mov
fs
push
xor
or
xlat
xor
jb
ror
lock
jle
xor
sub
mov
xchg
rorb
arpl
push
jbe
and
mov
jmp
xchg
sbb
call
mov
dec
mov
test
leave
and
jbe
lods
into
xor
xchg
inc
enter
pushf
cmp
loop
jmp
push
adc
iret
lret
in
push
arpl
dec
daa
hlt
sbb
or
bound
pop
or
push
fcom
pop
and
cmp
mov
out
pop
cwtl
pop
jl
sti
add
ljmp
test
xor
int3
cmpsl
xchg
xchg
jg
test
insl
inc
cmp
movsb
leave
pop
push
add
pop
aaa
addr16
gs
rol
push
sub
jge
shrb
int
fwait
dec
pop
inc
stos
sti
popf
pop
mov
mov
loopne
fsubl
pusha
fisttpll
test
jl
ja
int3
sbb
loop
or
and
or
push
push
push
repnz
ds
jne
push
lahf
sbb
stc
popa
in
int
or
pushf
lods
inc
jo
xor
sbb
repnz
xchg
dec
enter
lods
fsubrs
test
xchg
dec
cwtl
mov
mov
ficoml
nop
icebp
jo
mov
jg
ret
or
rolb
popf
push
sahf
int3
daa
test
daa
and
xchg
pop
cli
dec
outsb
rep
jno
push
clc
push
lret
aas
pushf
push
push
mov
sbb
insb
rorl
push
mov
mov
shlb
ret
mov
out
in
int
hlt
mov
test
in
inc
push
dec
into
flds
cli
ret
sti
xchg
pop
xor
fistpl
push
add
ja
and
pop
mov
pop
add
mov
dec
pushf
loopne
test
sti
jnp
cwtl
push
xor
mov
sub
push
and
and
pop
mov
imul
jae
and
or
inc
pop
out
adc
pop
adc
push
int3
dec
cmovne
xchg
push
lods
and
jle
insl
pop
scas
iret
or
cmpsl
xchg
cmp
repnz
xchg
fcomps
stc
dec
inc
das
mov
mov
es
jg
jle
mov
dec
leave
jmp
popa
fwait
popl
mov
push
fwait
pop
adc
pusha
sarb
icebp
leave
mov
lcall
jle
push
add
inc
aas
cmp
mov
mov
stos
pop
add
mov
xchg
pop
mov
push
fimuls
push
mov
xor
fisubs
loop
xchg
sti
cwtl
pop
sbb
xor
pop
sub
mov
mov
idiv
inc
lods
or
out
jge
pop
std
adc
jo
push
int
mov
jecxz
pop
xchg
and
inc
fisttps
or
add
pop
push
adc
mov
cmovns
popa
dec
loop
insl
lock
ror
mov
fwait
pop
mov
dec
push
sub
add
imul
push
mov
xchg
lahf
mov
enter
jmp
sub
flds
cmpsb
test
mov
jns
test
sbb
inc
cmp
scas
in
int3
push
imul
dec
lret
ret
nop
jg
roll
stos
rol
cmp
icebp
fmul
std
push
and
pop
popf
adc
cli
jbe
ss
xchg
mov
loope
sub
jecxz
push
xchg
pusha
cmc
mov
adc
repz
sbb
inc
addr16
push
popf
pcmpgtb
push
mov
aas
sti
in
adc
push
add
rcll
in
pushf
sbb
dec
outsb
lock
scas
out
dec
push
stc
scas
push
loopne
js
out
xchg
push
je
inc
add
mov
jo
cwtl
xor
adc
cltd
sbb
pop
mov
xor
out
xchg
push
insl
das
pop
lds
scas
popa
push
test
sub
popa
mov
cmp
jmp
scas
es
loop
jge
imul
je
shll
stc
loopne
mov
jns
scas
rcrb
mov
loopne
sub
daa
jmp
jb
lds
push
shlb
inc
int
out
dec
in
and
mov
sub
imul
insl
sub
push
or
mov
cmc
or
sbbb
mov
bound
imull
mov
cmp
xor
mov
cmp
push
add
popf
dec
jns
or
daa
dec
jae
jecxz
push
push
mov
das
push
inc
daa
rcrl
stos
or
rep
and
mov
pop
cmp
push
mov
iret
xchg
ds
mov
mov
and
pusha
loop
ljmp
mov
xchg
lods
and
js
into
repnz
or
stc
pop
test
scas
rcrl
sbb
mov
sbb
add
jnp
iret
jo
add
dec
push
dec
and
cmp
adc
shrb
jnp
pop
cmpb
mov
lea
mov
mov
jle
loopne
jmp
adc
mov
and
repz
jnp
mov
mov
mov
mov
in
lods
test
dec
iret
xchg
in
aas
inc
push
mov
popa
cmp
aaa
jmp
dec
mov
adc
popw
ds
movsl
xchg
inc
cmp
cmovb
scas
ja
aaa
sub
fwait
push
out
sbb
sub
jbe
pushf
mov
iret
in
dec
int3
xor
lds
xor
aas
in
aad
add
mov
inc
iret
and
and
stos
js
inc
pop
mov
mov
call
lahf
push
mov
lods
jl
in
pop
inc
add
ret
lahf
xlat
inc
jge
push
rcl
insb
dec
mov
jne
pop
outsb
das
adc
xchg
lods
or
outsb
xchg
fldcw
push
outsl
lods
mov
xchg
mov
dec
sub
push
sub
jo
mov
loope
loop
xchg
sub
sub
cmc
inc
movsb
or
cmp
inc
iret
mov
jecxz
push
pop
lcall
lods
jle
push
jecxz
fcom
cmp
movsb
inc
das
jp
jge
ds
push
test
lcall
inc
xlat
cmc
jmp
in
cmp
add
jl
push
adc
je
mov
loop
loop
sub
push
pop
push
mov
sahf
jle
adc
add
adc
add
addb
into
stc
int3
inc
repnz
jae
mov
push
xlat
pop
pop
adc
sub
scas
int
mov
xor
aam
rclb
decb
gs
jmp
dec
lods
mov
pop
mov
xor
insl
shlb
xchg
lods
mov
iret
mov
insb
stc
fldenv
test
cmp
xchg
pop
dec
in
test
ss
mov
jecxz
lret
dec
test
sbbb
jle
pop
mov
and
cwtd
iret
push
mov
sbb
xor
pop
js
jmp
aad
arpl
dec
jecxz
mov
ret
push
stos
push
int3
xchg
cmp
dec
lods
movsl
cmp
pop
ret
xor
pop
pop
sti
fdivl
cmpsl
cmp
pop
data16
aas
out
pushf
lods
xor
cmpsl
dec
inc
mov
loop
mulb
sbbl
insb
in
xor
rorb
and
js
aaa
cmpsb
dec
mov
fsubrs
dec
push
xchg
cmovae
cmp
mov
dec
mov
daa
add
inc
dec
mov
cmp
mov
fisttpll
or
mov
adc
mov
cmp
mov
stos
adc
add
mov
cld
out
in
js
mov
dec
andl
outsl
sub
cmpsb
add
lahf
pop
jmp
js
aam
jnp
cmp
xchg
loop
shrl
mov
push
pop
xor
loopne
inc
rcr
stos
test
jp
fiadds
mov
dec
out
jp
test
ja
loopne
aam
outsb
fcomi
mov
sub
dec
jmp
mov
sbbb
lahf
sbb
cmp
sub
push
push
mov
frstor
push
jne
aas
andl
xor
mov
jo
sub
js
mov
test
pop
imul
fmulp
xchg
lret
push
xchg
push
push
pop
sub
or
xchg
or
cwtl
and
loopne
sbb
add
push
leave
xor
dec
les
incb
repz
test
mov
mov
mov
rorl
push
inc
into
rorb
adc
imul
mov
pop
lds
loopne
cmp
fists
sbb
push
mov
jl
push
rcl
in
imul
adcb
and
mov
popf
mov
loop
leave
or
xor
pop
neg
rcrl
repnz
enter
repz
dec
jno,pn
leave
mov
mov
clc
fistpl
push
lock
or
in
adc
xor
cmc
out
cmp
sarl
test
add
push
iret
jg
das
ljmp
or
pop
mov
fdivl
jns
and
les
jmp
and
adc
mov
and
iret
add
inc
mov
movsb
enter
leave
dec
mov
add
pushf
loope
lret
clc
mov
data16
jp
inc
sub
mov
mov
sub
adc
arpl
pop
popf
in
imul
add
and
add
and
add
adc
push
sbb
and
fldl
sub
xchg
xlat
lret
add
or
mov
sub
test
movsl
push
cmp
inc
jno
lock
pop
fisttpl
pop
mov
ficoml
lret
dec
push
data16
mov
inc
sbb
popf
mov
sub
push
outsl
fwait
or
int
in
or
dec
fidivl
xor
xor
xor
sub
sbb
addl
test
cmc
dec
adc
stc
sub
roll
mov
push
hlt
scas
shrb
jne
jmp
xor
icebp
xchg
pop
test
hlt
rorb
jecxz
adc
mov
pusha
pop
jmp
ss
out
push
int
adc
sub
pop
xor
out
pop
xchg
jae
ja
or
mov
sub
xchg
mov
cwtl
push
dec
ds
stc
punpckldq
jmp
scas
in
mov
mov
out
sub
xor
movsl
sub
push
xor
inc
loop
rcr
loop
sbb
in
mov
fisubrl
cmp
xor
add
fwait
push
test
ret
in
outsl
or
push
lea
cmpsb
mov
data16
push
dec
and
lret
cmc
sti
popa
mov
inc
mov
out
mov
enter
push
jnp
loope
popa
pushf
bound
xor
xor
dec
test
mov
inc
sbb
or
je
and
xor
add
jl
dec
fwait
aad
scas
shrb
inc
jecxz
sbb
push
inc
sub
mov
imul
in
mov
stos
les
fsubl
int
test
int
add
dec
mov
lock
hlt
jg
sysret
or
icebp
add
pop
loopne
clc
je
mov
in
aaa
push
adc
lds
push
jae
insl
xchg
pusha
into
hlt
testl
adc
idiv
or
hlt
pop
pushf
sarl
into
mov
insb
test
in
sti
xor
cmp
xchg
xchg
dec
sub
scas
ds
jns
push
inc
or
push
movb
cmp
jne
mov
mov
test
ds
aas
mov
add
lods
stos
rclb
or
or
in
xor
xor
cmpsl
loop
cld
sahf
push
pop
sub
cld
push
push
leave
mov
ds
or
std
pop
in
pop
adc
cmpsl
xor
shl
pushf
push
movsl
movsl
lahf
fstps
inc
sbb
movsb
js
fildll
push
mov
add
push
lcall
shrl
into
inc
and
pop
jp
lds
es
icebp
scas
fs
icebp
hlt
inc
in
lcall
and
sbb
fisubl
jecxz
sub
or
push
cmp
adc
adc
push
ds
mov
mul
push
jbe
adc
mov
push
jae
push
xorb
test
inc
cmp
sub
jge
popf
rcrb
fdivl
jno
jbe
int3
xchg
out
comiss
lcall
push
jbe
dec
sub
xor
jge
pop
xchg
jne
cwtl
push
mov
adc
lahf
pop
sub
insl
arpl
pop
movb
lock
imull
fisubl
and
xchg
fcoms
popa
sbb
movsb
ss
xor
xchg
imul
sahf
adc
lahf
push
fwait
mov
cli
mov
lret
push
and
stos
mov
push
dec
mov
push
repz
into
xchg
lret
mov
inc
inc
fwait
dec
pop
fs
fcomps
pop
and
or
dec
add
outsb
push
repz
les
xchg
iret
int
mov
dec
dec
inc
pop
aam
movsb
int
int3
mov
mov
mov
dec
cmc
dec
cmpsl
xchg
dec
insl
loopne
dec
and
push
into
sub
xchg
pop
lret
scas
aas
cmp
scas
add
out
mov
xchg
inc
scas
pop
insl
ja
jl
and
shrl
push
cmp
lods
adc
and
mov
mov
popf
xchg
cmp
mov
cmp
inc
mov
push
and
push
loop
fistpll
out
fmull
sub
sahf
lret
loopne
mov
pop
pop
jns
xchg
mov
jnp
fidivs
shll
mov
sub
pop
in
cld
cmpsl
pop
into
sub
inc
xor
popf
push
dec
negl
xchg
mov
mov
and
fisttps
hlt
or
inc
insb
mov
pop
add
sti
push
mov
xchg
xor
pop
xchg
cmpsl
dec
dec
xchg
fst
sub
fsubrp
idivb
mov
mov
sbb
push
push
leave
dec
enter
mov
test
add
dec
xchg
xlat
jg
push
out
dec
sub
mov
notb
sbb
fs
inc
push
fnstcw
mov
std
movsb
leave
xchg
imul
cmc
insl
pop
pop
es
pop
mov
ja
xor
xor
mov
in
and
sahf
dec
bound
mov
flds
fisttpll
adc
fwait
ret
jmp
jns
aam
rcrb
cmp
cmpsl
repnz
mov
orl
in
push
outsl
xchg
sub
insb
mov
xor
testl
mov
lcall
fadds
hlt
sbb
jns
mov
rorb
cmp
mov
pushf
shr
sbb
adc
adc
lahf
or
jo
outsl
gs
dec
mov
iret
cmp
arpl
aam
lods
movsl
mov
pop
in
test
mov
in
adc
sbb
cld
jmp
and
push
ret
mov
movsl
inc
mov
jo
sahf
sub
or
xor
je
imul
lret
and
jae
xchg
push
icebp
pop
aam
sti
dec
in
ja
push
lods
out
rcr
stos
or
push
test
incl
mov
fldenv
dec
adc
and
sbb
mov
add
mov
sub
push
jg
sti
mov
call
xchg
hlt
xlat
sahf
pop
test
ror
pop
int3
add
movb
and
pop
or
adc
rorb
inc
mov
rol
pop
jmp
cmp
add
lods
dec
xchg
jbe
add
and
cmpsl
push
cmp
xchg
sbb
mov
test
fstpl
jmp
sub
jmp
roll
lods
cmp
cmp
roll
push
push
cmpsb
or
gs
inc
sti
xchg
scas
xchg
adc
mov
inc
roll
shr
ret
ljmp
ja
std
testl
scas
pop
call
int3
iret
sub
jo
mov
add
ljmp
mov
outsb
arpl
test
fdivrp
jp
out
lret
out
jne
cmp
jmp
loopne
push
ret
inc
mov
cmp
mov
cmp
adc
sbbl
sbb
test
xor
xchg
cmp
es
jo
je
repz
xchg
and
insb
lods
or
test
mov
je
sarl
mov
sub
rcrl
pop
addb
popa
inc
imul
pop
ret
das
mov
pop
mov
fs
sub
int
xor
aam
mov
arpl
iret
push
pushf
mov
push
xor
mov
fidivrs
nop
inc
lahf
dec
jge
mov
stos
cli
adc
or
call
ret
cmpb
mov
decl
inc
push
jecxz
aas
aad
dec
dec
and
inc
pop
mov
pop
push
es
jnp
pushf
push
addb
lret
test
xchg
dec
movb
iret
xor
pop
lods
leave
jo
jge
or
pushf
xchg
cltd
call
in
adc
stc
cltd
imul
sub
jae
push
push
mov
add
clc
lods
shl
cmpsb
dec
and
xor
dec
pop
loope
loopne
mov
xchg
fldenv
stos
idivl
inc
lea
mov
js
pop
mov
pop
insl
cwtl
xchg
sub
fdivrl
sbb
stc
xor
xor
or
jge
add
xchg
dec
inc
jge
stos
and
sbb
test
sbb
faddp
push
jecxz
hlt
mov
out
repz
hlt
cwtl
jns
add
push
jae
fiaddl
call
sub
sbb
sti
mov
cmp
push
push
loopne
clc
add
adc
push
sbb
or
mov
test
mov
outsl
roll
xchg
xchg
decb
sarl
roll
cmp
dec
outsl
movsl
in
shr
mov
cli
cmpsl
arpl
sbb
test
add
or
es
fistpl
sahf
sub
xchg
cmpsb
adc
shll
lods
outsl
mov
adc
jle
dec
call
mov
dec
mov
test
push
pusha
xchg
xchg
adcb
push
lret
adc
inc
pop
test
fwait
mov
or
std
sbb
xchg
cmp
in
test
subb
std
push
rorb
xchg
cmpsl
cwtl
mov
pop
push
sub
xor
cmpsl
add
out
into
ja
push
add
mov
xchg
cmp
xor
mov
xchg
xor
lahf
pop
inc
scas
cmp
test
fwait
or
inc
mov
js
adc
jno
xor
push
ja
clc
repnz
and
mov
movsl
push
neg
xchg
sub
mov
sbb
mov
cmp
push
lds
int
mov
lcall
inc
imul
and
add
jecxz
xor
mov
push
jge
cltd
fstpl
push
mov
cmp
les
loopne
ja
hlt
sbb
and
mov
test
stos
adc
push
fwait
fcmovne
push
xor
xor
imul
dec
xchg
lea
push
mov
adc
xor
or
loopne
aas
sarl
or
cmp
mov
add
addr16
dec
out
push
sbb
pop
aaa
adc
movsb
xor
pop
shll
in
fists
add
jge
mov
rcll
call
mov
scas
and
sbb
or
jge
add
push
repz
cwtl
sahf
cli
and
dec
xlat
mov
cmpsb
pop
lock
mov
outsb
jbe
loope
push
aad
mov
mov
cmp
sub
mov
repnz
jnp
in
xchg
and
pop
jb
notl
or
je
out
roll
das
outsb
dec
inc
jge
pop
test
imul
sbb
dec
iret
adc
shll
pop
mov
mov
pop
aam
jo
fxam
je
ja
aaa
pop
sbb
adc
and
or
call
jo
xchg
cmp
jns
lcall
fwait
rorl
sbb
ss
out
or
testl
jno
inc
mov
std
test
mov
mov
in
sbb
adc
nopl
adc
adc
mov
in
jne
mov
mov
mov
adc
add
pop
das
and
mov
mov
ds
push
and
or
sbb
test
mov
es
insl
icebp
mov
jecxz
outsl
decb
cmp
jns
cmpsb
mov
js
xchg
fstl
es
cmc
mov
jb
jge
nop
fisttpll
and
mov
mov
sbb
jns
sub
gs
and
jmp
jle
mov
out
test
ja
int
movsb
lcall
add
add
add
mov
mov
sub
dec
xchg
or
in
lock
mov
dec
aad
xchg
enter
adc
aas
nop
xchg
cli
cmp
fstpt
repnz
mov
sub
je
rep
mov
js
mov
xlat
mov
xor
and
sbb
insl
imul
xchg
sub
in
data16
lods
jp
and
or
int
sbb
stos
stos
jnp
neg
cmc
js
ljmp
imul
in
fiaddl
sbb
cmc
aas
xchg
sbbl
jbe
xor
jno
xlat
imul
inc
int
inc
cvtdq2ps
sbb
cltd
ret
pop
cmc
jmp
dec
jecxz
arpl
xchg
lcall
les
bound
shlb
sub
xor
int3
lock
in
add
jmp
jo
pop
jp
mov
jns
xor
in
dec
notl
iret
cmp
ljmp
ret
mov
xor
xor
ljmp
int
rsqrtps
fnstsw
or
jbe
into
jmp
sub
call
push
jg
je
bound
cli
dec
rclb
mov
or
repz
or
fwait
sub
push
ljmp
fsubs
push
pop
pusha
cmp
loope
or
outsl
fcomps
scas
xchg
pop
notb
mov
adc
jnp
lock
dec
jl
lcall
test
push
lahf
mov
fsubl
xor
or
rcrl
dec
push
pop
push
addl
jo
icebp
insb
mov
enter
aam
mov
pop
and
dec
ds
push
or
dec
shr
insl
add
daa
sti
shrb
cmc
out
pop
sub
adc
push
inc
div
mov
mov
add
loope
adc
xor
sti
out
gs
push
adc
ja
cwtl
test
xor
shl
adc
insl
inc
sbb
xor
dec
jp
sub
dec
aas
sub
mov
jne
mov
test
dec
jb
pushf
cmpsb
or
jmp
sbb
and
sbb
mov
cmp
xchg
jno
mov
pop
punpckldq
into
xchg
sub
push
ret
cmp
lds
jae
push
push
inc
cmp
fnstsw
cwtl
in
fsubs
lods
sbb
add
fistpll
js
sbb
mov
or
inc
mov
add
cmp
out
mov
dec
fsts
adc
out
out
xchg
mov
mov
xlat
fs
dec
and
pop
or
add
adc
xchg
jbe
pop
mov
cmc
je
mov
xchg
out
cmp
enter
int3
stc
lcall
dec
sbb
enter
lods
jge
negb
sbbl
adc
rolb
movsl
enter
sub
jnp
or
out
mov
push
stc
adc
shrb
jecxz
push
and
roll
and
int
jns
in
in
xchg
in
xor
mov
cltd
dec
lcall
scas
arpl
mov
lret
jnp
mov
int
mov
in
xchg
lock
push
inc
cmp
pop
xchg
adc
pop
dec
and
cli
push
sub
enter
push
mov
imul
or
ror
push
vmovhps
or
adc
xlat
xchg
ret
mov
testl
jg
xchg
lahf
xchg
push
shrb
add
sti
lret
das
xchg
fisttpl
jae
popf
push
je
push
jbe
xor
jns
mov
je
fadds
pop
sub
push
insl
aam
adc
pop
fcoms
enter
mov
aaa
dec
xchg
and
out
sbb
push
or
lret
sbb
jmp
lods
das
mov
cmp
ss
mov
sub
pop
push
adc
sti
les
popa
push
sti
bound
imul
outsb
dec
es
movsl
fcompl
sub
test
mov
aam
testb
xor
or
aam
adc
jns
cmpsb
or
hlt
loop
push
mov
xchg
xchg
jo
sub
insb
dec
ss
add
in
xor
mov
fimuls
or
repz
mov
pop
idiv
cmp
dec
pop
cs
out
dec
mov
xlat
insb
test
xchg
lret
mov
sub
loop
inc
int
inc
test
and
pop
pop
mov
push
fdivl
dec
lods
testb
repnz
rol
add
cmp
dec
loope
xchg
sti
push
jne
xlat
add
pop
jg
pop
xor
jge
out
je
pop
mov
insl
lds
pop
add
mov
mov
pop
dec
popa
add
mov
bound
repz
test
push
fdivs
push
outsl
pusha
xchg
xorl
icebp
mov
nop
xorb
add
inc
inc
push
sub
icebp
imul
shll
dec
std
or
jmp
mov
hlt
push
cltd
jp
sbb
adcl
stc
outsl
mov
cltd
xchg
mov
jns
inc
dec
dec
pop
out
and
add
push
cmp
iret
mov
dec
dec
sbb
cmp
mov
xchg
aas
pusha
fiadds
std
add
and
push
adc
or
xor
andb
inc
or
pop
pop
inc
outsl
inc
aaa
or
lods
call
dec
out
xor
sub
rep
push
jno
subb
iret
mov
xchg
test
jae
cmpsb
push
mov
ds
repz
fldt
xchg
test
movb
add
in
cmp
pusha
xchg
pop
xchg
or
sub
shlb
jg
sbb
ret
push
test
test
popa
mov
jno
insl
lock
jae
mov
psubusw
fwait
cmp
push
mov
out
lcall
adc
jmp
adc
lcall
ret
mov
inc
mov
pop
pop
jle
arpl
in
jp
push
push
xlat
outsb
out
mov
and
push
stos
add
inc
xchg
int3
shll
pop
insb
stc
jb
mov
or
imul
push
add
and
divl
and
mov
push
pop
imul
mov
pop
or
fs
dec
lahf
mov
push
mov
push
repz
rcl
fists
inc
mov
divb
or
ss
and
and
sti
mov
mov
pop
mov
mov
xor
push
xor
rorb
lret
mov
push
xchg
rcrl
mov
xchg
push
xor
popa
xchg
sbb
loopne
or
xchg
stc
cli
test
mov
sub
mov
nop
or
jae
stc
lcall
push
cmp
push
fdivrl
pop
inc
mov
mov
push
mov
mov
dec
ret
xchg
in
push
and
mov
addl
mov
std
inc
jo
gs
jno
sti
enter
ds
mov
inc
cmp
test
jno
push
xor
daa
leave
arpl
cs
rcll
pop
das
fadd
mov
jl
fstps
insl
lret
mov
add
out
mov
mov
lock
mov
jp
sub
mov
add
in
aam
lock
sub
adc
pop
mov
push
sub
lock
shrl
mov
shrl
xor
repz
pop
sbb
xchg
mov
sub
xchg
lret
stc
imul
mov
ret
sub
es
dec
daa
sahf
sbb
lock
lods
pop
pop
and
pop
lds
test
es
push
xchg
mov
cmp
xor
or
div
inc
add
sub
repz
scas
movsl
pop
push
inc
stos
sahf
jns
xlat
xor
stos
push
cmp
and
clc
xor
push
insb
sbb
pop
or
xor
ljmp
in
fs
aaa
shlb
adc
sub
iret
push
add
jns
push
or
ret
syscall
jne
out
mov
pop
push
ret
scas
sarl
dec
ss
in
leave
pop
fucomp
xor
fisttpl
dec
jae
jbe
mov
imul
ror
sahf
push
mov
ret
aam
aas
ret
cmc
punpcklbw
mov
mov
in
add
sub
stc
add
push
xchg
adc
insl
or
push
cs
mov
insb
add
test
fdivr
jge
out
sbb
movsl
test
mov
ret
xchg
repz
popa
das
mov
cmp
daa
dec
int3
rcrb
adc
popa
mov
or
pop
jg
bndldx
outsl
loope
push
scas
loopne
or
fistpl
mov
mov
aam
sysexit
loope
push
fldl
aas
stos
mov
popa
mov
iret
inc
sub
push
jae
xchg
std
hlt
jmp
lahf
pop
sbb
bound
and
stos
mov
pop
popl
popa
ja
jno
cwtl
cmpl
adc
mov
jge
cmpsb
push
cld
test
inc
icebp
cmp
mov
jle
push
xor
mov
mov
or
pop
inc
add
xor
xchg
add
test
mov
jae
xor
or
jb
cmp
lahf
sub
pushf
cmp
dec
movsl
inc
cs
pushf
cld
ja
divl
iret
pusha
add
push
pushf
ljmp
fnstenv
test
imul
push
jns
jnp
xor
jbe
dec
mov
sti
mov
mov
stos
push
aam
lods
iret
mov
jmp
push
sub
jg
jns
sti
pop
cmp
adc
ret
cmp
data16
push
mov
push
jg
ss
pop
mov
int
inc
data16
rclb
shll
push
movsb
sub
mov
or
push
mov
stos
lea
mov
push
or
mov
push
test
push
scas
addr16
sub
mov
cmp
dec
addr16
push
orb
ret
ss
das
or
lcall
nop
lock
push
fcoms
out
dec
divl
cmp
test
cmpsb
test
out
test
in
repnz
test
sbbl
xor
add
stos
and
dec
add
cmp
adc
add
test
rcrl
lahf
adc
movsl
xor
pop
iret
loopne
sub
or
cmc
lret
push
movb
dec
arpl
jnp
mov
push
mov
pop
lock
ret
mov
push
adc
add
hlt
xchg
add
adc
mov
inc
xchg
pop
add
mov
movsl
sub
repz
cmp
sub
jge
int
add
sbb
xchg
xchg
cmp
sub
ja
cmp
aaa
cwtl
dec
jge
lcall
pop
hlt
addr16
push
inc
ds
mov
mov
cmp
mov
xor
push
xorl
mov
push
mov
mov
pop
icebp
mov
data16
xchg
sub
scas
jae
out
lret
ret
mov
dec
and
imul
mov
push
es
jbe
jae
out
xlat
sti
sti
jmp
mov
mov
jnp
pushf
push
jl
jnp
aaa
pop
sbb
or
inc
adc
enter
dec
mov
dec
fnstcw
in
push
xchg
mov
xchg
cmpsb
inc
inc
mov
addr16
or
ds
sub
or
sar
add
lock
call
cmp
loop
jp
nop
mov
testb
cmove
popa
icebp
lcall
cmp
pop
xchg
daa
xor
into
orl
lcall
jb
es
lods
test
sahf
push
daa
icebp
and
lock
test
push
and
xchg
test
fcmovnb
gs
dec
subl
jmp
ret
test
rorl
pop
sbb
es
mov
fs
gs
lcall
mov
xchg
aam
repnz
daa
jb
pop
pop
sbb
jne
adc
cmp
pop
sub
mov
out
idivl
stc
xor
dec
jnp
jo
mov
cld
adc
fs
push
jge
subl
pop
and
add
cld
js
decl
loope
mov
insl
ror
sbb
inc
mov
xchg
stos
leave
mov
jnp
pop
xchg
in
fidivrs
push
test
cmp
mov
adc
xchg
in
xor
cmc
les
mov
es
clc
add
mov
imul
sbb
outsb
sbb
fcmovnu
adc
ds
ljmp
lea
xchg
js
movsl
add
xchg
push
popf
cmp
mov
rolb
mov
sub
mov
icebp
add
hlt
mov
shl
inc
or
hlt
pop
push
or
push
test
add
icebp
jecxz
xchg
mov
nop
movsl
imul
pushf
dec
mov
popa
rcrl
pushf
call
aas
lea
out
jne
push
fimull
add
xor
xchg
xchg
sbb
inc
test
lock
loop
inc
xor
add
mov
dec
push
adc
rolb
cmp
cld
pop
out
jmp
sub
das
jle
mov
testl
xor
outsb
mov
push
and
int
test
xor
pop
pop
sarb
dec
flds
inc
inc
push
std
or
iret
and
dec
ds
test
jo
and
mov
cli
popa
mov
pop
push
push
notl
sbb
lock
sbb
orb
pop
xchg
clc
xchg
adc
lea
sbb
mov
push
nop
inc
xchg
das
jo
std
sub
test
sub
mov
sub
xchg
xor
and
pop
jp
jmp
sub
jnp
mov
addb
push
out
cltd
cmp
jg
ficoml
es
pop
pop
add
xor
shrl
lahf
xlat
xchg
pop
jge
jl
rorl
pop
cwtl
dec
sbb
cltd
shlb
xchg
out
aaa
add
mov
imul
lds
das
add
mov
mov
mov
fidivs
rolb
pusha
sbb
cmp
cmp
cld
jo
add
mov
xor
mov
add
jb
cmpl
daa
lods
dec
cli
dec
in
ret
push
and
xorb
ret
arpl
popl
push
mov
push
hlt
jns
jp
iret
mov
out
cwtl
ret
popf
scas
fdivs
js
mov
mov
lcall
jl
mov
jbe
add
enter
jle
ss
jns
add
push
clc
out
fcoml
jo
and
sbb
repz
xchg
ret
jl
mov
push
test
adc
mov
mov
in
les
push
mov
pop
in
addr16
push
clc
dec
push
and
xor
lods
imul
lock
mov
xchg
fcoms
incb
push
dec
jns
in
fistl
xor
sub
push
fimull
adc
adc
mov
push
out
stos
xor
ss
outsb
decl
stc
push
push
jae
jp
idivb
std
mov
adc
push
inc
cmp
add
fwait
adc
mov
lret
out
movsl
lods
dec
mov
add
das
add
adc
pop
or
push
or
das
int3
cmpsb
lret
or
outsl
test
push
data16
lahf
cltd
dec
pop
xor
sub
iret
mov
mov
cmp
mov
imul
aaa
dec
mul
out
aaa
dec
dec
add
daa
sbb
push
movlps
fstpt
lret
imul
lods
and
inc
sbb
rcrl
jle
dec
push
push
jns
adc
aad
xorb
jae
jns
push
xchg
xor
dec
mov
add
aad
xchg
iret
xor
fcmovb
movsb
sarb
call
js
mov
jnp
jne
inc
or
jnp
pop
mov
aad
lahf
in
lods
push
jae
push
jne
movsb
mov
cld
jp
push
lahf
and
pop
imul
iret
and
sub
add
das
or
jmp
push
pop
ds
nop
mov
mov
in
int3
add
fsubrs
insb
ss
lds
mov
aaa
or
mov
pop
or
js
movsl
add
inc
outsl
mov
mov
outsl
dec
out
push
mov
dec
dec
cmp
mov
adc
pop
jmp
pop
daa
mov
sub
xor
pop
pusha
stos
outsl
rcl
ja
inc
and
aad
or
stos
and
adc
ret
dec
inc
insb
jge
sbb
sti
push
adc
fwait
imul
dec
pop
es
cld
fildl
aaa
xchg
int
lock
adc
in
stos
and
push
mov
daa
sub
jnp
rcr
andl
in
mov
pop
xchg
test
ret
push
addr16
xchg
xorl
in
lods
cmc
jg
lahf
cmp
outsb
mov
repz
cli
mov
loopne
xchg
cmpsl
fnstcw
cld
popa
push
popf
xor
mov
fwait
pop
or
inc
pushl
ljmp
stos
cmp
or
call
cmp
dec
push
or
mov
push
clc
or
cwtl
in
mov
add
xor
shl
mov
xchg
cli
fstpt
push
sarl
mov
out
ja
or
or
neg
sub
lock
popf
cs
push
xchg
dec
or
mov
or
mov
push
scas
lods
aaa
jns
mov
xor
pop
cmp
add
mov
or
pusha
inc
jo
outsb
scas
int
xchg
adcb
dec
jnp
gs
in
iret
adc
aam
out
enter
cmp
lods
adc
addl
fnstenv
std
hlt
pcmpeqw
ljmp
fwait
and
or
or
jg
ret
sub
test
cmpsb
and
xchg
insb
dec
adc
mov
push
lret
adc
lds
cltd
jo
rolb
enter
aad
dec
push
adc
bswap
mov
mov
inc
lds
mov
jno
fstpt
and
divl
loope
adc
fldt
je
pop
std
mulb
lods
push
arpl
out
enter
stos
cltd
or
xor
cmc
pushl
das
dec
lret
add
add
and
or
cmp
divb
mov
mov
xchg
cs
push
and
jp
mov
mov
arpl
ror
stos
mov
fisttps
xchg
lock
sub
dec
stos
adc
imul
lea
inc
adc
stos
scas
xchg
jb
idiv
outsl
stc
loopne
xchg
mov
mov
inc
sbb
lock
cs
fstps
or
mov
sub
rolb
sub
mov
inc
or
cltd
sbb
add
inc
push
add
push
pop
mov
ficoms
mov
inc
push
dec
xor
je
es
imul
lar
adc
jno
sti
insl
aad
outsb
and
imul
add
andb
sbb
sbb
cmpb
jecxz
addl
out
add
leave
pop
pushf
lahf
lret
and
mov
inc
imulb
lret
inc
jge
adc
jle
cmp
mov
dec
aam
sbb
in
dec
jl
lcall
jns
fadds
dec
imul
inc
rorl
adc
ficompl
bound
movsl
adc
jle
xor
fdivp
in
ret
jo
pop
sub
sub
pop
cmc
and
xchg
sbb
pop
inc
mov
mov
dec
or
push
pushf
sbb
and
cli
and
lea
lret
xchg
cld
xchg
xor
xor
mov
dec
outsl
pop
xchg
sbb
vshufps
stos
inc
test
push
mov
dec
xchg
sbb
lret
add
testl
mov
mov
lahf
idivl
fdivs
mov
popaw
sarb
dec
cwtl
pop
int3
or
rcrl
or
and
aas
pop
mov
cmc
mov
or
clc
cmp
jnp
dec
ret
inc
out
js
aas
mov
dec
jge
inc
cmp
in
test
bound
jl
flds
aas
push
outsl
fcmovb
aaa
and
inc
dec
lods
pop
cmp
nop
sbb
xlat
mov
fdivl
xchg
pusha
lea
and
insb
or
or
std
adc
dec
dec
enter
xchg
mov
fwait
aad
inc
sbb
out
adc
and
mov
gs
sub
scas
aas
rep
aad
pop
mov
stos
cmc
cmpsb
xchg
gs
rol
pop
fimull
adc
add
int
mov
mov
cmpl
jb
adc
push
loop
cmc
dec
mov
hlt
xor
popf
in
push
enter
jne
sbb
adc
mov
cmc
jno
rcl
adc
adc
outsl
jo
fwait
mov
fdivrs
add
mov
cs
into
shlb
and
loopne
shr
xchg
ret
xchg
dec
mov
mov
shll
fcomip
and
pop
sti
inc
movsb
out
outsb
std
cmp
test
pop
jno
push
lock
push
daa
pop
cmpl
adc
bound
in
mov
sahf
scas
sbb
out
dec
popf
aaa
jae
in
fsubrl
lock
push
test
push
xchg
sbb
fiaddl
mov
out
imul
in
iret
out
jle
mov
sahf
ljmp
dec
insl
in
lods
dec
mov
dec
xchg
and
mov
sbb
inc
add
cmp
movsl
mov
jae
mov
ret
xchg
gs
movsb
lea
push
mov
ret
xlat
xor
lret
mov
dec
movsl
and
cmp
inc
filds
push
or
aaa
lock
sbb
xor
ds
xchg
jns
cld
jle
ljmp
lahf
jle
mov
pop
inc
jb
jo
adc
rolb
shll
cmpl
sub
or
xchg
in
and
pop
mov
insl
fmuls
sbb
cmp
adc
idiv
mov
pusha
jae
push
push
pop
out
fistl
enter
call
daa
push
xchg
sub
clc
add
pop
repz
jg
in
or
cmp
xor
pusha
ret
into
addr16
adc
gs
or
pop
out
popf
inc
sub
inc
popf
mov
cmpsb
jecxz
cmpb
les
inc
decl
xlat
in
iret
repnz
or
jge
pop
push
lcall
cmp
filds
scas
cld
shrb
xchg
sbb
xchg
pop
or
add
xor
popl
inc
add
mov
jp
fildl
jecxz
xchg
xchg
cmpsl
stc
movsb
mov
int
xlat
sti
daa
popf
fwait
adc
push
hlt
enter
pop
push
jp
int3
xor
dec
call
and
cmc
mov
clc
test
xor
jno
push
loop
push
fs
sbb
leave
leave
sbb
inc
rcl
ficompl
test
add
cmp
xor
add
jb
xchg
ss
xor
movsb
popa
add
fidivrl
push
jo
mov
xchg
mov
pop
and
xchg
inc
mov
add
cmp
loopne
or
mov
or
sbb
icebp
adcb
rcrb
testl
jecxz
mov
hlt
mov
mov
adc
orl
adc
aam
hlt
jnp
loope
inc
cmpsl
push
ja
xchg
andl
ljmp
lock
dec
push
out
imul
mov
out
lret
sbb
lods
mov
add
sbb
adcb
mov
movsb
repz
test
je
jo
stos
insl
push
cwtl
xchg
int
movsb
cltd
mov
xchg
jle
push
pop
xchg
fsts
shlb
mov
and
imul
inc
dec
and
js
add
cwtl
xor
or
cmp
mov
shlb
sbb
and
inc
inc
xchg
cmp
jnp
mov
xchg
test
cmpsb
mov
lret
rcrb
mov
inc
mov
mov
xchg
imul
jg
stos
fldcw
cs
sub
dec
sub
dec
out
add
scas
stos
ret
in
movsb
or
sub
std
mov
inc
ret
mov
dec
ja
adc
sub
mov
pop
pop
ja
popa
push
test
push
pop
jg
pop
lock
mov
mov
loop
fucom
rcrl
sbb
push
jno
push
arpl
imul
outsb
test
fistl
imul
push
sub
fdivs
mov
mov
out
das
jecxz
int3
js
cmp
arpl
sub
outsl
in
popa
dec
inc
int3
or
adc
subb
test
mov
jnp
mov
push
sbb
lods
sub
imul
jg
add
inc
sub
xor
js
or
xchg
mov
and
repz
inc
sub
insb
sub
popf
pop
test
and
pop
into
pop
adc
mov
cltd
jge
aas
dec
inc
lahf
outsl
xchg
mov
xchg
rorb
cmp
mov
es
xchg
sbb
loopne
sub
cli
loopne
pop
pushf
outsb
xor
mov
push
xor
or
dec
sbb
push
mov
or
clc
das
or
sub
xchg
aaa
cmp
js
or
push
clc
cmpsb
lods
jl
mov
pop
negb
mov
sub
imul
push
popf
stc
jno
dec
cmc
xor
fnsave
insl
cmp
lcall
pop
jae
shrl
dec
xchg
cmp
cmp
sbb
sub
lret
or
add
add
stos
jecxz
iret
dec
cmp
lock
push
mov
jne
mov
pushf
push
mov
lcall
sub
rcrl
xchg
sbb
sub
mov
or
repz
adc
test
mov
movsl
sub
roll
inc
or
sub
xchg
ljmp
adc
cmp
fistpl
xor
cmp
ds
jecxz
mov
adc
push
jmp
push
cmpb
ret
idivb
xlat
fldln2
insl
outsl
xor
jp
loope
inc
popa
test
popa
loop
stos
sbb
rolb
push
lds
cmp
jle
repz
jmp
outsl
lods
pushf
scas
int3
lods
mov
scas
dec
arpl
in
xchg
and
dec
leave
int3
call
pop
test
mov
jle
xchg
inc
push
pop
cmp
sbb
scas
fidivrs
sub
xchg
out
dec
fwait
mov
xor
mov
pop
mov
mov
or
aaa
ret
mov
mov
mov
sub
hlt
xor
push
bound
dec
or
pop
negb
inc
aam
imul
adc
inc
into
lcall
std
dec
xchg
push
push
sbb
dec
mov
mov
xor
and
jmp
stc
fstpl
mov
aad
addl
push
mov
push
std
hlt
imul
outsb
out
sbbb
and
pop
aas
push
movsb
in
push
in
dec
jae
mov
cmpsb
sbb
mov
movsl
jmp
dec
js
lds
sbb
fbld
add
fwait
in
jne
adc
xchg
ret
and
and
sbb
push
mov
inc
sti
or
orb
xchg
cmp
push
pop
scas
dec
movsb
add
pop
add
out
dec
cwtl
inc
enter
int
mov
in
jb
or
test
sub
jo
insb
sub
xor
outsb
sub
lret
push
dec
cmp
xor
xlat
mov
out
cmp
pop
pop
inc
jbe
add
dec
fs
xor
or
push
out
lock
inc
fisttpl
cld
inc
imul
data16
push
aam
cmp
mov
jb
cmp
xchg
and
jp
arpl
push
aas
rorl
and
dec
in
int3
test
mov
dec
fdivs
jb
or
jne
pop
out
bound
inc
adc
pushf
or
hlt
add
push
fdivs
in
pop
ljmp
add
mov
adc
in
in
mov
bswap
xchg
movsb
sbb
ss
scas
mov
inc
enter
inc
or
sub
dec
jo
clc
mov
add
cli
aas
pop
je
in
std
mull
lods
cs
mov
jmp
jbe
inc
cmp
lret
mov
in
sbb
shlb
add
xchg
mov
cld
mov
es
push
ljmp
es
into
nop
lahf
mov
in
mov
imul
out
pop
popa
mov
sbb
xchg
imul
jl
add
fisttpll
cmpsb
popl
fs
mov
popf
fstl
pop
cmp
sbb
mov
pusha
add
ficomps
mov
lret
dec
sarl
call
mov
mov
push
dec
fsubp
mov
in
movsb
aas
xchg
xchg
cmp
ret
cld
packssdw
mov
std
and
xor
adc
xchg
ds
ja
ja
cltd
cmpsb
ja
sbb
push
sbb
or
fidivl
call
dec
movsb
xchg
mov
adc
pop
hlt
mov
adc
xchg
iret
jno
adc
lahf
cmp
push
mov
mov
in
add
pop
loop
mov
iret
in
mov
xchg
jb
std
pop
inc
popa
stos
adc
cli
cld
lcall
in
xlat
loop
mov
int3
and
pusha
loope
icebp
inc
xchg
and
inc
jmp
xor
rcr
jmp
mov
rcl
lods
mov
sub
mov
sbb
cmc
push
mov
icebp
dec
fdiv
or
jns
mov
mov
gs
enter
int
adc
mov
call
mov
sub
ret
xchg
push
inc
xor
icebp
push
jns
inc
sub
mov
pop
sarl
or
pop
mov
call
push
dec
sub
jmp
ja
dec
fidivs
lds
jne
insb
or
call
cmp
out
aam
ja
cwtl
cs
repnz
ljmp
test
pusha
mov
ja
push
cld
push
jl
aas
imul
or
addr16
in
jge
sbb
repnz
dec
jmp
andb
xchg
xchg
xlat
daa
add
cltd
inc
jo
mov
lret
testb
cmp
mov
lds
and
adc
sti
daa
call
lea
pop
andl
in
ror
jbe
xchg
mov
add
ja
dec
and
sub
xchg
mov
mov
sbb
jns
dec
pop
das
shlb
add
mov
mov
xor
mov
jg
jne
mov
mov
cld
frstor
pop
pop
sub
and
pop
mov
xor
sbb
lds
or
mov
xor
xchg
mov
mov
adc
iret
outsl
pop
arpl
fbld
rorl
pop
xor
test
pushf
add
pop
pop
cmpsl
rolb
xlat
enter
mov
mov
arpl
cmova
jmp
inc
lods
and
ss
cmp
xchg
mov
ret
mov
std
lret
insb
fnstsw
enter
loop,pt
ljmp
test
inc
dec
test
scas
testb
arpl
jo
xor
std
jns
inc
mov
sub
cmp
outsb
jmp
nop
ja
loop
ljmp
xlat
mov
sub
in
push
rorl
aaa
or
insl
addr16
jno
sbbl
test
dec
push
scas
jnp
jns
scas
imul
fs
pop
jmp
inc
jle
adc
push
mov
inc
push
fnsave
pushl
str
cmp
int3
addr16
xchg
stos
inc
cld
test
dec
push
push
inc
xchg
lods
mov
pop
ffreep
imul
push
jae
xchg
mov
imul
cmp
adc
sbb
sub
clc
ja
js
shlb
and
sbb
fdivrs
dec
movl
xor
mov
xor
in
jg
jbe
push
xor
or
decl
ret
push
push
sarb
sub
adc
mov
addr16
and
push
dec
xchg
or
pop
lret
mov
es
popf
mov
mov
mov
and
cmpsl
jns
xchg
out
fs
test
sub
jecxz
outsb
pop
add
sti
sub
jp
or
sub
xchg
pop
sarb
arpl
mov
sbb
lock
push
fldenv
xor
dec
add
inc
mov
sub
fimuls
xchg
mov
arpl
clc
ds
xlat
insl
lods
insl
add
and
outsb
or
xchg
pop
pop
inc
cwtl
cmpsb
cmp
push
outsl
sbb
jbe
ret
outsl
jle
push
ret
mov
push
stc
sahf
cmp
xor
das
inc
add
add
dec
or
aas
mov
jge
pop
mov
or
daa
xor
push
mov
sbb
loopne
movsb
js
cs
dec
cmp
test
and
xor
jb
cmpsb
lea
stos
adc
into
and
popf
sbb
xor
xor
xchg
dec
shrb
adc
jo
xchg
ja
push
aam
out
stc
cmp
in
mov
dec
adc
movsb
js
lods
and
popf
jg
sbb
out
lock
cltd
or
jb
push
sub
scas
bound
test
stc
sbb
xchg
insb
push
mov
xchg
idivl
dec
ret
push
pop
add
jbe
std
gs
inc
shrl
cmp
out
in
pop
mov
lods
test
insl
pop
jge
popf
pop
enter
fimull
lds
nop
and
fwait
cwtl
pop
lahf
push
rol
adc
xor
mov
jne
insl
xchg
loop
mov
xchg
add
pop
adc
push
dec
xor
jge
inc
push
loop
xchg
dec
jnp
enter
fisttpl
xor
pop
cmpsl
mov
push
sbb
adc
in
lods
js
leave
hlt
fmull
mov
test
repz
lret
mov
loop
imul
fsubrp
jo
or
std
test
and
lods
cmp
mov
rcl
push
out
int3
cmp
addr16
ljmp
out
test
push
aaa
ss
adc
xchg
xor
adc
add
pop
or
stc
fdiv
fwait
data16
cmp
lds
push
inc
sbb
in
pop
js
popa
add
in
hlt
jle
sub
push
dec
sti
sub
pop
or
int3
in
cltd
sub
pushl
subb
pop
imull
repz
fsubs
es
push
imul
subb
stos
mov
mov
stc
mov
fimuls
dec
pop
jge
dec
enter
xchg
out
mov
or
popf
mov
test
andb
imul
or
mov
das
das
int
cmpsl
ss
pop
adc
hlt
test
pusha
stc
incl
inc
aas
testb
rclb
push
adc
sti
popa
movsb
sub
xchg
pop
adc
jo
enter
stc
fstps
out
inc
mov
mov
ret
fadd
in
mov
mov
leave
mov
je
sbb
xchg
popl
mov
jmp
inc
inc
sub
xchg
sub
xchg
adc
hlt
pop
xchg
fwait
decb
gs
jg
insb
outsb
jmp
lods
fwait
sbbb
iret
imul
bnd
push
cmp
aad
xchg
pop
sub
pop
xlat
mov
fnstenv
add
js
rcll
xor
aam
lahf
adc
inc
out
lret
sub
movsl
fucom
adc
push
icebp
test
mov
push
inc
stos
or
sub
outsb
stc
mov
jns
lock
ljmp
jne
push
and
int3
cmp
push
mov
lea
fmull
jle
push
mov
bound
scas
dec
push
mov
mov
lcall
sti
sarb
jmp
fistl
cld
xor
cltd
adc
sub
iret
nop
pop
push
stos
jae
out
aas
repz
jns
ja
xor
jbe
inc
push
divb
cwtl
mov
lahf
adc
lea
int
mov
dec
dec
mov
push
push
arpl
fldl
jle
icebp
mov
iret
add
mov
mov
pushf
xchg
insl
cs
es
mov
call
sub
or
xchg
mov
aaa
cld
fbld
xchg
fs
aam
xchg
inc
or
stos
and
jecxz
mov
movsl
in
cs
fs
and
mov
pop
std
xchg
call
fdivrl
stc
scas
push
cld
jmp
sub
daa
inc
push
push
inc
or
xchg
adc
lcall
test
shlb
jge
and
xor
addr16
addl
ss
enter
cmpsb
jge
stos
pop
in
int3
aaa
cmp
adc
adc
cmp
lods
mov
jo
shrb
loope
jb
xchg
mov
inc
and
aas
lret
xchg
jo
jnp
push
inc
shr
xor
jno
out
mov
jle
add
lcall
mov
inc
aam
mov
popf
jnp
sub
mov
xchg
push
lods
call
es
mov
fisubl
pushf
mov
divb
into
adc
out
gs
cmp
hlt
inc
test
dec
mov
xchg
push
cmp
out
cmpb
sbb
imul
repnz
daa
js
xor
add
repnz
arpl
mov
in
add
sbbb
test
jne
jns
dec
xchg
inc
inc
jo
jge
fcomp
cmpsb
sub
add
movsb
mov
lahf
mov
jge
lret
das
lret
aad
fdivrs
push
push
cld
out
mov
rcrl
pushf
cmp
vpsubusw
push
je
cmp
daa
test
sub
les
jge
xor
shl
mov
sub
jle
jns
loope
dec
and
movsl
sti
sbb
cmc
dec
lret
cmpsb
sbb
sub
icebp
addr16
sbb
shrb
fcmovne
cmp
addr16
adc
nop
sbb
push
or
aad
inc
rcr
xor
fiadds
in
iret
push
jecxz
push
mov
je
xchg
dec
xor
or
insb
sbb
ret
test
jo
je
sub
add
popf
inc
xlat
xlat
scas
cli
mov
mov
mov
adc
rclb
stos
cld
faddl
gs
data16
mov
iret
push
mov
mov
xor
filds
mull
and
sub
mov
shlb
imul
lret
repz
pushf
mov
lea
hlt
gs
into
or
mov
xchg
mov
adc
add
fucomip
test
out
pop
jge
xor
out
cmp
inc
mov
jge
jnp
leave
jle
lds
mov
jb
adc
mov
cmp
jge
sbb
cmpsl
mov
out
shlb
mov
cmpsl
int3
aaa
ret
ljmp
push
loope
jnp
mov
enter
clc
push
je
mov
cmp
ds
jle
cltd
jle
sub
enter
sti
sbb
into
outsb
ja
push
pusha
mov
push
sub
sub
insb
inc
cmp
jns
xor
pushf
test
mov
lea
push
inc
in
insb
aaa
xchg
push
and
xchg
cld
stc
imul
inc
push
data16
add
push
clc
jmp
in
das
mov
repnz
mov
outsl
jno
movsl
push
iret
ret
cmp
jb
pop
enter
cmc
je
aad
lods
or
mov
push
cmpsb
and
mov
enter
enter
fstps
std
int3
push
imul
outsl
rorl
xchg
push
mov
sahf
jb
push
xchg
cwtl
inc
sbb
stos
mov
dec
les
adc
std
inc
or
add
das
xor
ret
jg
xor
and
in
in
sbb
pop
ja
andl
sar
jno
stos
je
out
test
daa
fisubrl
out
jnp
lock
inc
push
push
adc
add
dec
femms
repnz
movsl
bound
mov
lods
repz
sub
in
sbbb
das
mov
inc
rcrl
jmp
movl
and
mov
cli
out
repnz
lcall
dec
add
pop
icebp
in
test
je
jb
and
mov
pop
xchg
sbb
inc
jmp
xor
mov
cwtl
mov
sbb
adc
add
jnp
das
jns
clc
xchg
icebp
in
mov
inc
adc
addr16
out
faddl
pop
or
sbb
test
je
mov
popa
js
imul
mov
cltd
fistpll
jg
pop
fsubrs
iret
mov
add
cmp
sbb
lret
enter
xlat
inc
adc
aam
out
sub
dec
test
gs
nop
sahf
inc
inc
cmpsl
cmpsb
mov
fwait
mov
and
xchg
in
or
mov
fdivs
int3
ficoml
dec
mov
mov
cmpsb
cmpsb
jb
mov
mov
sbb
lods
jmp
jmp
out
xchg
mov
aas
sti
dec
sar
or
mov
adc
mov
movsb
xchg
jg
imulb
outsb
minps
dec
fimuls
dec
mov
add
loopne
in
jb
jl
test
mov
clc
nop
inc
das
mov
stos
sbb
inc
dec
sub
lds
jl
clc
xchg
xchg
mov
add
movsb
inc
fistpll
test
and
adc
pop
inc
hlt
bswap
loop
jge
cltd
sub
mov
sub
cmpsb
data16
inc
aaa
shll
cmp
out
aaa
idivl
out
jl
test
movsl
orl
add
call
je
xor
es
stos
xchg
xor
cli
rcrl
pop
iret
add
jb
idiv
dec
pop
aas
add
mov
shlb
fwait
adc
pop
ss
mov
mov
les
jge
jne
jmp
cmp
mov
out
sub
jbe
add
in
mov
pusha
cwtl
movsl
lahf
push
dec
jne
adc
pusha
xchg
mov
sub
jae
xor
cltd
test
dec
mov
mov
lods
lods
xor
lods
outsl
cld
or
divb
push
mov
mov
repz
pop
xor
add
adc
add
out
cs
shll
leave
mov
aam
mov
insl
dec
popf
dec
std
pop
int3
test
imul
testl
mov
mulb
sub
adc
ret
clc
sbb
or
insl
adc
inc
testl
popf
bnd
push
ds
movsb
jg
fisttpll
cmc
insl
repnz
xor
mov
dec
cmp
clc
pop
xchg
pushf
lahf
dec
jmp
daa
sbb
dec
out
mov
jge
xchg
popa
ds
pop
push
or
mov
and
xlat
stos
les
xchg
mov
cmp
inc
xlat
pop
mov
xor
negb
mov
shll
cwtl
inc
addr16
lock
mov
or
adc
dec
lods
add
cli
inc
fidivl
or
sbb
out
daa
scas
in
jno
psubsw
mov
mov
lds
push
iret
cmp
mov
or
mov
cmp
dec
data16
xchg
mov
push
sbb
aas
imul
push
pop
xchg
xor
mov
sbb
shr
aad
popa
imul
lahf
inc
lds
imul
iret
pop
and
push
mov
mov
ja
xchg
pop
jg
dec
sbb
inc
fnstenv
je
cltd
bswap
test
test
jno
or
movl
cwtl
in
mov
pusha
ljmp
jg
cmp
xor
dec
jns
pop
stc
repnz
cwtl
pop
sar
xchg
popf
hlt
cmp
or
inc
mov
imul
insl
fcoml
ret
loope
in
test
and
fildll
mov
cld
fistpll
sub
add
movsb
repz
aaa
xchg
or
pusha
das
loopne
fnsave
clc
pop
sbb
fs
je
or
adc
out
les
inc
decl
dec
leave
push
daa
adc
jno
jno
and
cmp
sti
pushf
mov
lods
jmp
leave
xlat
fisubrs
adc
roll
mov
int3
pop
test
outsb
jne
pop
push
dec
mov
add
ja
xchg
dec
xlat
testb
mov
roll
xchg
mov
xchg
cmp
mov
adc
imul
xor
es
insb
arpl
dec
cmp
sbb
pop
scas
xchg
repnz
adcb
inc
lahf
adc
cwtl
mov
or
pop
loop
dec
jno
cs
cmp
push
mov
push
push
push
arpl
ds
sub
shll
arpl
xor
gs
push
popa
test
mulb
cmp
enter
or
shlb
push
mov
jbe
mov
popf
mov
je
push
les
mov
jle
jl
cmp
ret
ss
sbb
or
mov
jno
and
pop
ljmp
popa
xchg
aaa
inc
add
gs
leave
adcl
test
xchg
sbb
jl
outsb
adc
sub
std
gs
out
movb
in
pop
cmp
push
pop
dec
mov
dec
iret
inc
mov
in
sbb
mov
fcoml
scas
push
dec
push
xchg
inc
es
xchg
inc
dec
mov
clc
mov
adc
pop
sub
mov
ss
out
lods
addr16
mov
lret
cmpb
push
sub
shl
pop
dec
out
mov
ja
std
ret
ror
inc
loop
fidivrl
sub
xor
xchg
fnstcw
or
mov
js
push
mov
push
dec
daa
fstp
ret
xchg
mov
push
sub
bound
movsl
insl
inc
ljmp
jnp
dec
ljmp
iret
roll
add
mov
mov
cmp
push
jbe
aaa
cs
shll
sub
out
push
in
sbb
sub
test
shld
xchg
pop
add
inc
fs
push
mov
mov
xor
dec
sti
scas
fwait
imul
test
clc
xchg
popa
arpl
mov
mov
sahf
jecxz
sub
fildll
sub
shl
pop
jae,pn
stos
out
mov
push
jae
mov
fsubl
les
sbb
pop
popw
sbb
mov
xchg
stc
xchg
xor
loopne
jns
xchg
iret
je
xchg
out
nop
adc
mov
psllw
call
es
sub
stc
lahf
jecxz
repz
mov
arpl
out
xchg
lds
and
push
sti
add
clc
sub
mov
ja
gs
jg
fldcw
xor
or
and
jp
mov
xchg
mov
loopne
mov
ret
shll
jp
push
push
lcall
inc
dec
xor
stos
in
aad
aam
jbe
insl
add
jns
dec
ret
popa
loope
mov
add
sub
fistpll
xlat
sbb
lcall
push
outsl
pop
fs
mov
mov
int3
sbb
mov
mov
es
sar
test
mov
xchg
mov
sbb
dec
test
cmp
sbb
push
mov
add
dec
fsubrp
mov
add
insl
cmp
xorb
mov
push
jl
jb
out
xor
out
xchg
mov
jg
shll
decb
subb
stos
ljmp
lahf
and
int
testl
notl
and
add
cmpsb
lock
fsubr
aad
sbb
dec
push
jae
mov
adc
hlt
stos
pop
adc
pop
das
xor
cmp
mov
push
nop
jo
mov
and
mov
mov
add
std
add
inc
rol
cmc
sub
mov
mov
sbb
sbb
cmpsl
pushf
push
xor
repz
mov
mov
cmpsl
aam
cld
les
xor
sub
popf
dec
add
adc
adc
inc
enter
into
inc
outsb
mov
cmp
lock
mov
loop
xchg
in
push
adc
dec
pusha
mov
jb
cwtl
insb
roll
and
mov
inc
popa
sub
sbb
dec
fs
out
lret
aaa
ja
out
and
cmpsl
or
int3
prefetch
dec
aam
and
shrl
cld
mov
icebp
repz
pop
cltd
rcll
clc
dec
sub
lret
or
fldl
pop
push
shll
mov
jae
sti
dec
inc
std
lahf
xchg
jbe
aad
add
xor
loope
cmp
cs
xchg
dec
push
je
xchg
lret
icebp
cltd
dec
pop
push
fstl
movsl
lock
inc
or
mov
mov
push
adc
hlt
push
adc
popa
fimull
or
mov
mov
mov
pushf
mov
push
lods
xchg
push
dec
repnz
xlat
pushf
cmp
xchg
faddl
sarb
push
nop
loop
push
mov
sbb
sub
inc
cmp
bound
sub
xor
adc
cmp
aas
mov
push
fwait
fwait
xchg
mov
shr
xor
lret
sub
out
test
mov
into
jo
stc
cmp
stos
jno
or
inc
dec
rcl
add
cmpsl
int3
or
mov
aam
mov
jno
aam
or
gs
ret
inc
push
jnp
clc
loopne
mov
inc
mov
icebp
jo
cld
cli
leave
mov
xchg
pop
push
scas
movsb
cmp
or
int
and
xchg
and
lods
jne
push
test
adc
dec
lods
lret
adcb
mov
or
xchg
jecxz
test
and
daa
test
test
fs
push
push
frstor
aad
ss
nop
push
je
sbb
das
xchg
or
fnsave
adc
mov
in
shlb
dec
in
mov
push
xchg
push
or
xchg
mov
mov
outsb
add
sbb
das
shrl
sub
ret
sti
mov
pop
dec
inc
xchg
jge
cmp
cli
ja
stc
jmp
divps
pop
nop
sbb
lods
xchg
mov
lods
fstpl
out
insb
in
ljmp
push
push
aaa
adc
cmc
roll
and
pop
pop
ljmp
jg
gs
adc
in
iret
imul
mov
or
ret
lock
and
negl
sbb
pop
push
sbb
mov
or
or
adc
inc
aaa
fmuls
add
int
outsb
cltd
imul
xchg
sub
movsb
or
add
inc
les
add
push
jnp
jg
jmp
jne
jp
mov
dec
xchg
dec
call
in
ja
mov
lea
sbb
int
rcrl
inc
sarl
mov
add
andl
fucom
add
jb
leave
stos
adc
gs
dec
ret
cld
jle
rol
jo
les
jle
pop
adc
jmp
fldcw
ljmp
popl
mov
jo
mov
fbstp
jne
fldt
jecxz
push
jl
jae
scas
out
cld
js
loopne
inc
add
fucomi
pusha
adc
sub
lahf
sarb
xchg
xchg
repz
xchg
mov
loopne
lcall
fcoml
into
leave
dec
ret
inc
ljmp
push
adc
cvtps2pd
aaa
imul
ja
pusha
int
gs
shrl
xor
fs
and
sbb
push
cmpsl
data16
adc
inc
iret
in
mov
cltd
in
mov
adc
lcall
inc
insl
push
fadd
aas
in
aam
in
arpl
push
bound
sti
pop
shll
rcrl
jecxz
adc
stos
fisttpl
sbb
test
mov
ja
xchg
sub
gs
fistps
lcall
repnz
testb
xor
pop
mov
cmp
sub
out
nop
in
jmp
jle
adc
int
push
or
out
mov
xchg
inc
jecxz
pop
pop
outsl
lret
stos
dec
fdivl
imul
test
mov
ja
fcomp
pop
movsl
and
pop
das
jl
loopne
mov
jne
pcmpeqw
pop
mov
das
mov
imul
bsf
test
and
add
cmp
ja
dec
xchg
or
stc
sbb
rcll
adc
xor
mov
es
loope
mov
push
push
notb
mov
inc
jne
and
dec
mov
fxam
pushf
sahf
movsl
loope
ss
adcb
cwtl
in
mov
ja
les
lods
pop
sahf
mov
stos
xchg
fstpl
stc
or
scas
push
fcomps
pop
mov
lods
cmc
jg
mov
dec
iret
push
popf
cli
stos
mov
lods
jo
dec
in
and
fiaddl
xor
mov
sub
mov
fmull
outsb
fcmovnb
xlat
xchg
xor
scas
push
bound
les
mov
lock
sbb
ret
pop
das
mov
fidivs
push
mov
test
pop
lods
lret
push
dec
mov
cltd
test
sahf
mov
inc
push
jne
sbbb
loop
fstl
in
lret
dec
cmp
mov
leave
lods
jg
push
mov
rolb
call
pop
xchg
dec
mov
jp
jge
xchg
cs
ret
cmp
call
jo
mov
inc
xor
fdivl
add
shll
repz
hlt
cmpsb
push
cmpsl
out
jb
push
jp
cmp
shll
inc
inc
inc
add
bound
xchg
inc
rcrb
hlt
cmpsl
ror
and
push
xor
cld
jbe
jmp
mov
shlb
popa
mov
icebp
popw
pop
mov
mov
push
repz
les
daa
jle
call
mov
aad
pop
sub
jbe
inc
or
bound
add
mov
mov
cli
push
pop
add
adc
adc
ss
insl
ret
hlt
nop
xor
cmpsl
aad
xor
push
mov
decb
pop
xchg
ds
test
and
dec
adcl
shlb
int
cs
fstpt
les
xchg
in
js
clc
popf
mov
ja
adc
daa
jae
mov
xchg
aas
xor
sub
cwtl
mov
or
push
and
cmp
loop
cmp
iret
inc
icebp
shrl
decl
rorb
imul
jmp
and
daa
add
fimull
sti
test
pop
cmp
dec
rcrl
inc
cli
cmp
daa
les
mov
adc
pop
pop
fcmovb
lcall
stc
pop
mov
add
pop
popf
cmpsl
adc
fimull
hlt
imul
movsb
or
insb
hlt
gs
imul
js
rcll
movsl
ja
pop
mov
int3
lahf
nop
and
mov
dec
push
sub
pop
push
or
call
outsl
push
dec
and
stc
mov
dec
dec
fmull
jp
aam
push
test
or
stos
pusha
add
scas
push
and
pusha
cwtl
fisubrs
cmp
add
or
dec
lret
mov
test
lret
cmp
mov
sub
pop
bound
rol
aaa
jo
inc
gs
fsubr
push
pop
jne
popf
mov
dec
or
mov
clc
dec
insb
test
jle
push
outsb
loope
mov
jl
cmp
int3
adc
int3
aad
insl
add
shr
or
fldl
sbb
push
add
xchg
faddl
add
mov
aas
fs
jg
or
add
dec
mov
jae
imul
aam
js
loopne
imul
inc
mov
mov
daa
push
shlb
gs
repz
shl
mov
mov
jne
hlt
sub
or
adc
insb
andb
inc
les
fwait
test
inc
mov
and
insl
xor
js
xor
mov
and
adc
movsb
adc
adc
shl
jmp
in
mov
xlat
mov
fsubl
ss
xchg
pop
pushf
add
cmp
mov
mov
into
shlb
mov
dec
sub
lahf
jns
adc
push
pushf
aaa
add
mov
int3
adc
pop
movsb
pop
lret
hlt
cmpsb
mov
addr16
in
mov
or
sbb
mov
aad
push
cmp
inc
push
add
pop
dec
push
fucom
mov
clc
mov
ret
arpl
and
sub
ds
hlt
notb
sbb
cs
ljmp
bnd
sbb
push
ror
sub
push
repz
int3
popf
mov
lods
push
and
cld
negl
sub
int3
jne
adc
jmp
xchg
push
aas
add
or
fidivs
fsubr
popl
lock
iret
mov
push
inc
cmp
into
push
xchg
rcrl
movsb
lcall
jge
dec
dec
fistpll
pop
sbb
leave
mov
inc
push
xchg
andb
pop
xor
loopne
leave
out
push
add
stc
insl
lcall
cmp
cmp
inc
lret
pop
test
dec
je
movsl
adc
or
rcrb
sub
sbb
scas
or
cmp
push
loope
loopne
repnz
mov
and
cmpsl
jge
lret
xchg
sbb
mov
stos
push
bound
xchg
jle
xor
js
in
insb
mov
ja
popl
or
push
addr16
in
ljmp
jbe
sbb
movsb
and
out
je
mov
xor
fmull
arpl
jae
lea
loope
add
add
loopne
inc
std
or
push
test
test
rorl
jo
inc
fcomip
int3
into
sti
pop
leave
push
push
adc
mov
roll
pop
jne
or
mov
or
insl
dec
ret
pop
stos
add
add
sbb
lret
add
stos
js
pop
das
inc
insl
jns
test
jo
jae
jno
cmp
ljmp
xchg
pop
lods
cmpl
or
inc
iret
addr16
std
ret
cmp
cmp
or
das
xor
sbb
adcl
mov
jge
or
fimuls
mov
or
lods
enter
out
adc
mov
push
mov
std
out
testb
xor
dec
fistpl
or
dec
out
sub
add
inc
push
ss
movsb
cmp
dec
pop
and
out
push
ss
mov
dec
mov
pushf
pop
or
ja
push
mov
pop
arpl
xor
add
test
in
dec
shl
outsb
fisubrl
mov
or
aad
out
inc
lea
pop
shr
jle
inc
arpl
mov
or
repnz
jg
andb
xchg
imulb
outsb
pusha
jb
ljmp
aaa
xor
mov
sar
dec
ja
sbb
or
adc
mov
lret
es
mov
pop
mov
arpl
repz
dec
xor
sbb
xchg
inc
mov
cli
push
movsl
negl
in
push
lcall
fiadds
or
and
fstl
andb
mov
dec
push
pop
pusha
mov
dec
mov
ljmp
arpl
fsubl
test
leave
in
add
mov
out
in
rep
mov
lods
test
lret
add
pusha
adc
int3
adc
out
and
call
mov
xor
call
or
stc
outsb
sbb
shl
pop
aas
xor
xchg
or
xor
add
lock
push
lds
jo
mov
mov
cmovb
push
xchg
ja
stos
movb
loopne
push
xchg
mov
mov
sbbl
nop
push
add
add
xlat
les
sub
lret
xchg
or
shll
orl
in
mov
data16
aad
scas
or
mov
call
mov
ja
ret
scas
les
arpl
popl
dec
inc
call
frstor
mov
sbb
cmpb
xchg
pusha
mov
lret
push
clc
call
icebp
repnz
xchg
mov
xor
push
mov
pop
pop
inc
mov
test
adc
movzbl
jne
mov
dec
stc
mov
mov
inc
mov
sub
ja
in
movsl
pop
and
mov
mov
fdivrs
and
nop
mov
mov
inc
pop
jne
inc
push
fcoms
cmp
cltd
cmp
data16
and
dec
mov
sbb
subl
mov
mov
and
lods
fmull
inc
cltd
rorl
jge
jns
push
inc
icebp
cmc
pop
mov
mov
jle
pop
cmpsb
mov
cmpsl
adc
mov
mov
xorb
rcl
sbb
in
mov
rcrb
mov
test
ficomps
loope
jne
not
mov
sub
and
arpl
in
in
loopne
mov
stc
or
pop
scas
xchg
fstl
push
ret
pusha
jle
adc
add
out
push
sbb
push
or
jg
movsl
dec
arpl
neg
popf
leave
dec
movsl
out
sub
movsb
cmp
lock
push
fildll
xchg
mov
sub
adc
bound
lds
pop
xchg
or
insb
jbe
sbb
stos
roll
jo
xchg
mov
fnsave
pusha
sub
test
movsl
adc
or
cmp
inc
daa
mov
es
jns
ss
or
cltd
pop
mov
push
or
add
cltd
mov
mov
push
or
neg
inc
mov
jae
insl
cld
sbb
sbb
push
sbb
std
push
movsl
fimull
popa
mov
add
xor
adc
in
mov
in
fldl
jno
and
in
inc
mov
enter
cs
mov
sub
cmp
inc
mov
pop
lret
cli
push
jmp
pushf
insb
insb
ret
pop
xchg
mov
aas
jg
enter
pop
popa
adc
pop
enter
out
fwait
imul
adc
jnp
loopne
push
mov
inc
sub
movsb
pop
jo
movsb
sub
pop
or
mov
aad
loopne
rcll
pop
jmp
lea
out
mov
cmpsb
iret
aaa
add
insb
rclb
and
hlt
cli
inc
fiaddl
pushf
mov
jns
cmp
sub
jbe
push
xor
mov
adc
mov
cld
popa
jae
pop
test
lret
mov
jg
add
mov
movsl
repz
testb
fcoml
xchg
sub
je
mov
pusha
lds
jae
inc
sbb
push
shll
in
sub
test
movsl
xchg
and
mov
inc
mov
lods
out
add
mov
pop
pop
pop
pushf
mov
or
pop
cmp
jecxz
hlt
das
sahf
mov
out
in
orl
insb
shll
pop
ljmp
rcrb
sub
imul
adc
push
int
sbb
adc
cmpsb
mov
aas
aad
push
roll
dec
xor
mov
xor
mov
push
stc
lret
sub
sub
sbb
pop
in
jbe
adc
jge
fs
pop
sbb
sbb
cltd
loop
jl
jno
push
xchg
stos
lds
out
mov
add
test
mov
adc
xchg
push
mov
mov
rclb
pop
dec
arpl
sbb
ss
divl
xchg
jecxz
out
mov
shrl
std
je
jne
sbb
inc
int3
ja
sahf
and
lret
call
push
mov
lret
pushf
add
mov
mov
sbb
aas
add
lret
icebp
push
roll
dec
mov
outsl
cmp
and
mov
pop
mov
cld
aam
pop
pop
test
dec
fdivl
mov
je
adc
or
fidivl
sbb
in
adc
jmp
sub
jecxz
sbb
into
mov
cmc
repnz
push
jns
lcall
bound
in
sub
sbbl
mov
bound
out
mov
pusha
cmp
orb
aad
or
sahf
add
xchg
std
jne
jo
jb
popa
in
call
fisttps
push
adc
ds
lea
adc
daa
and
imul
fld
rorl
popa
mov
shl
add
and
pop
pusha
int
xor
outsb
mov
xchg
insl
mov
inc
dec
mov
out
xchg
movsb
mov
mov
iret
push
jp
mov
mov
fnstenv
ror
sarb
gs
xchg
xlat
outsb
pushf
fwait
xor
mov
fnstcw
push
outsb
mov
rcll
into
outsb
fsubs
add
adc
or
pop
mov
mov
xchg
xchg
pop
pop
in
mov
and
cmc
add
imul
mov
inc
cli
mov
stc
sbb
int3
mov
cwtl
inc
adc
mov
push
scas
push
push
push
dec
sub
mov
test
clc
imul
mov
inc
push
sti
stc
enter
inc
ret
xchg
les
xchg
subl
iret
iret
xchg
sbb
pop
mov
mov
int
push
fbld
cli
inc
insb
lret
fwait
sti
mov
test
xor
push
cli
xchg
xchg
or
mov
mov
xor
dec
movsl
icebp
arpl
rcll
popf
sbb
add
mov
insb
or
push
xor
loopne
xchg
popa
sbb
inc
adc
push
or
daa
stos
mov
imul
or
jae
push
je
pop
out
push
sub
test
push
and
mov
mov
dec
push
shlb
pop
cmpsl
xorb
mov
push
std
jp
aad
ret
sbb
add
mov
loopne
mov
cld
cli
std
push
inc
pusha
pmaxub
lds
inc
lret
or
mov
les
mov
sti
repz
ja
mov
out
jp
xchg
cmp
lret
orb
sbb
and
ds
repnz
cmp
and
stos
fwait
jns
ficomps
repz
mov
mov
data16
pop
jbe
dec
inc
insb
dec
test
fdivr
insl
arpl
xor
scas
out
dec
repz
mov
lods
and
pop
jo
xchg
xchg
test
push
dec
iret
sub
aam
jl
and
mov
jb
outsb
call
roll
rcrl
cmc
xchg
repnz
test
jnp
push
push
test
ret
or
ja
aaa
insl
ds
inc
in
scas
dec
rcl
xlat
and
stc
or
xchg
or
xchg
adc
cwtl
mov
jnp
scas
jp
bound
ret
loop
inc
cli
xlat
inc
cld
cltd
out
sbb
out
std
add
rolb
mov
pop
jmp
scas
movsl
shll
imul
fidivs
inc
xorb
xor
adc
inc
adc
shl
popa
inc
imul
adc
jb
insl
cmc
nop
mov
sub
xchg
push
push
mov
cs
mov
test
jo
mov
jne
mov
je
mov
cli
cmc
ds
or
and
xchg
lahf
inc
imul
adc
cs
out
pop
outsb
ficoms
rorl
or
inc
mov
mov
jbe
movsb
sbb
sbb
pop
mov
lock
jne
loop
jmp
test
out
cli
jge
lsl
fdivrs
imul
ds
int3
test
push
in
fistpll
push
push
cmp
icebp
stc
int
push
and
scas
pop
arpl
ja
adc
mov
mov
jne
or
test
cmp
outsb
test
inc
sahf
cltd
push
lea
push
in
std
xor
xchg
stos
mov
xchg
mov
lds
jp
jecxz
les
pop
or
fisubrs
cmp
popf
or
rcr
sahf
cwtl
repz
push
jo
sbb
dec
mov
xor
negl
adc
adc
xorb
mov
and
sub
addr16
mov
cs
pop
mov
pop
es
push
mov
scas
inc
aad
clc
mull
xchg
mov
test
xchg
sub
xlat
push
xor
cli
xor
dec
fstpl
push
out
andl
sbbb
call
sbb
and
out
dec
insb
dec
rcll
pop
dec
push
or
or
sti
mov
jl
std
loopne
inc
cwtl
int3
subl
inc
sub
call
out
fistl
daa
arpl
mov
dec
imul
fistpll
xor
push
fisubrl
inc
lds
int
ja
repnz
adc
xchg
mov
lock
stc
mov
mov
jmp
nop
lock
test
jl
sbb
jae
mov
bound
movsl
xchg
ss
ja
xor
push
cmp
inc
imul
cld
add
test
into
daa
cmp
movsl
fildl
nop
inc
mov
std
sbb
jmp
fdivp
mov
cltd
inc
xchg
iret
cmp
pop
xchg
shl
xchg
cwtl
daa
lcall
pop
arpl
movsb
push
ljmp
stos
add
cmp
ffreep
mov
mov
mov
ret
push
add
push
sarb
xor
add
sbb
leave
adc
sarb
in
int3
fst
out
inc
sbb
sti
xor
mov
jge
push
call
ds
mov
pop
inc
push
int3
cmp
mov
sbb
loope
mov
inc
xor
jo
leave
jmp
and
mov
fs
jmp
daa
sti
repnz
pop
pop
mov
pop
push
movsl
inc
in
inc
xchg
sti
xchg
mov
in
faddl
add
push
adc
jae
in
pop
jle
inc
sub
sahf
iret
inc
cmp
lret
jecxz
jo
pop
fs
or
or
rorl
adc
scas
xlat
xchg
shll
out
xchg
pop
hlt
inc
popf
jmp
dec
enter
mov
jo
jl
and
cmp
mov
cmp
movb
stos
cmpsl
dec
aam
outsl
lcall
lea
mov
sbb
pop
xchg
sti
xor
insb
sub
push
lock
ss
add
in
fsub
arpl
insl
out
push
push
xor
pop
neg
insb
and
and
ljmp
cwtl
xor
jp
sub
push
dec
andl
jge
mov
jle
popf
pop
sti
shll
sub
shrl
fdivl
mov
pop
in
dec
mov
and
add
addr16
xor
adc
and
cmp
dec
sbb
jmp
sti
insl
lret
imul
jno
xchg
inc
je
pop
out
xchg
inc
add
fsubrl
je
rcrb
not
pop
int3
jle
sti
pop
stos
jmp
insb
jl
in
lahf
and
and
cmp
js
jb
mov
jp
iret
es
mov
sbb
dec
int
cbtw
cmpsl
rcr
addr16
push
cmpsb
movsb
mov
repnz
mov
pop
popa
mov
int3
stos
and
inc
imul
dec
movl
rorl
test
aam
outsb
add
sbb
sub
mov
lahf
in
pusha
dec
sbb
shrb
sahf
xor
negb
in
sbb
xor
add
mov
pop
js
mov
or
test
xchg
push
nop
pusha
cmc
push
pop
lods
cltd
mov
hlt
add
jecxz
adc
adc
out
sbb
and
jl
inc
inc
mov
jns
std
adc
es
faddl
jno
sbb
mov
bound
sbb
push
xchg
fnstenv
mov
adc
fmul
and
xchg
mov
outsl
lret
sti
cltd
xchg
lcall
hlt
push
pop
aas
outsl
cmp
pop
xchg
aaa
xor
cmp
test
cmp
pop
out
and
mov
push
cmp
shrl
lods
fldcw
jae
pop
fisubrl
pop
mov
mov
cmp
insl
nop
cmp
icebp
mov
mov
stos
inc
inc
inc
push
adc
mov
ret
ret
cwtl
add
xchg
push
lock
out
pop
sbb
out
jmp
adc
loop
into
xchg
iret
xor
mov
cmp
mov
hlt
sbb
ljmp
cmc
movsl
cmp
flds
pushf
jns
out
pop
xchg
stc
test
aaa
pusha
add
aas
inc
pop
fninit
xor
divl
insl
scas
xor
aas
in
clc
xor
cmc
xor
cmpsl
jg
sbb
popf
nop
leave
xor
push
ret
mov
fucomip
inc
bound
bound
mov
fistps
pcmpeqw
aam
cli
bound
jno
xor
push
sbb
ret
add
and
and
push
fnstenv
lahf
xchg
cwtl
fimull
lret
pop
or
pop
sub
jmp
mov
pop
mov
cmc
cmp
pop
inc
out
ds
sub
xor
orl
lods
in
in
shll
or
push
push
jecxz
test
shll
insl
mov
pop
adc
lret
es
and
sbb
cltd
sbb
adc
adc
push
hlt
cmp
loope
jge
imul
mov
movsl
mov
rorb
or
mov
insl
adc
cs
das
ret
or
xchg
push
daa
fcomi
cmp
adc
inc
aad
nop
shl
cltd
sbb
and
fiadds
mov
outsl
mov
xor
pop
data16
jle
lods
adc
clc
inc
push
adc
push
xlat
sahf
xchg
sub
ret
xor
xchg
rcl
pop
sbb
rclb
mov
sub
in
pop
push
in
sbb
and
movsb
pushf
andl
jb
and
jbe
mov
jno
mov
cmc
mov
dec
xchg
pop
xchg
jne
pop
nop
inc
mov
stc
add
cmp
out
or
test
mov
lahf
sub
loope
sahf
repz
jae
pushf
inc
jle
test
fs
out
dec
mov
lret
sbb
jno
adc
movsl
lods
lcall
mov
and
or
into
or
fiaddl
pop
adc
adc
sti
jns
mov
xor
stos
or
push
xlat
mov
adc
les
cmp
pop
fwait
scas
arpl
ds
int3
or
iret
lcall
push
cmp
dec
into
xchg
ret
shll
xor
out
call
and
mov
popf
push
outsl
fnsave
sub
push
inc
jo
and
add
dec
cld
push
insl
nop
jle
repz
mov
or
xchg
test
incl
das
ds
lods
icebp
lea
scas
jge
mov
jge
and
mov
adc
testl
fistps
mov
idivl
adc
and
or
xor
data16
xchg
and
scas
pop
daa
mov
daa
pop
push
cld
outsb
inc
pop
xor
add
movsb
mov
filds
pop
and
xor
lods
aam
and
add
fistps
scas
sbb
adc
jp
sbb
cmpsb
movq
cld
push
out
lcall
and
dec
add
imul
mov
in
pop
js
cs
mov
in
inc
jge
enter
pop
ja
hlt
or
mov
jnp
mov
jecxz
imul
pop
xor
and
mov
xorb
or
rcrb
mov
test
orb
jmp
jecxz
mov
dec
cmp
inc
push
cltd
cmpsb
inc
pop
lea
pop
add
inc
aad
call
mov
fcompl
dec
adc
sbb
lods
cmp
xor
jle
and
fcomp
or
add
dec
in
ds
push
mov
aas
cmp
adc
jecxz
movsb
jp
jnp
adc
sbb
addr16
cltd
xchg
in
pushf
sahf
lahf
jle
test
movsl
outsb
aas
inc
fldl
sub
rcl
fucom
inc
adc
pop
in
mov
cwtl
rcl
dec
sbb
ja
sahf
jno
stc
lret
ljmp
leave
jecxz
lcall
xor
xchg
ljmp
cltd
xchg
test
sub
inc
cltd
inc
mov
adc
or
out
jbe
lock
mov
mov
insb
in
shlb
xor
push
loopne
roll
aad
add
in
xchg
add
fisubs
ror
and
pop
jmp
inc
mov
mov
xchg
xor
pop
fnstsw
repnz
fisubrs
shlb
loope,pt
dec
rol
or
push
xlat
sti
sbbl
cwtl
int3
sub
add
inc
push
loop
inc
je
int3
or
dec
jns
outsl
data16
pop
daa
sbb
fwait
adc
and
stos
repnz
outsb
loopne
adc
ret
jns
insl
lds
insb
mov
aas
xchg
je
jbe
xor
pop
cs
iret
mov
imul
clc
and
in
push
repz
add
cmp
add
popf
jns
sbb
sar
mov
inc
jle
inc
out
sbb
rclb
xlat
sub
xor
mov
xor
js
lock
push
iret
mov
jb
sub
fidivs
cmp
loopne
pop
mov
enter
roll
sbb
outsl
icebp
daa
xor
mov
xchg
icebp
and
lahf
cld
movb
dec
and
add
pop
insl
cmp
xor
dec
aaa
jnp
xchg
jbe
xchg
ja
std
dec
das
cltd
cli
adc
ret
fwait
mov
test
add
sahf
and
sahf
jae
push
mov
inc
xor
addr16
push
mov
nop
jg
jbe
push
pushl
cli
scas
cmp
mov
sbb
xchg
ret
lods
adc
mov
inc
or
or
mull
add
dec
jge
stos
jge
pop
fwait
cmc
mov
arpl
cmp
scas
jle
push
add
adc
rclb
push
xchg
pop
fucom
call
jmp
shl
mov
out
es
arpl
and
cli
fidivl
ret
push
rorl
add
psubb
js
fwait
add
repz
mov
nop
add
inc
inc
fwait
push
inc
stos
add
and
dec
sub
bound
fcomp
xchg
insb
insl
xor
out
or
aas
or
inc
push
cld
imul
and
and
hlt
je
inc
jo
or
mov
xor
outsb
inc
adc
imul
pushf
cmpsb
mov
iret
and
mov
jl
aad
push
cmp
data16
out
arpl
in
enter
leave
push
push
mov
sub
cmpsl
xor
gs
cmp
dec
sub
addr16
std
ds
and
push
or
xor
or
popfw
nop
scas
cwtl
fucomp
sahf
push
les
sub
adc
mov
mov
sahf
test
adc
jno
cmp
mov
aam
push
inc
mov
pop
push
pop
mov
stc
sbb
push
incl
jle
mov
addr16
lods
jge
test
and
lock
cmp
ss
das
lret
or
fdivs
lret
in
inc
jmp
add
pushf
sub
mov
and
push
mov
lods
adc
sub
gs
xor
repz
dec
or
pop
xchg
xor
mov
mov
jp
push
or
gs
jle
and
jl
ret
sbb
sahf
mov
divb
stc
loope
repz
pop
adc
jo
push
and
int3
iret
xchg
mov
aam
push
xlat
jmp
testb
pop
cmc
pop
and
or
mov
xor
mov
imul
fsubrl
push
add
pop
jbe
xchg
mov
imul
pop
dec
sbb
cmp
pop
add
or
xor
or
fcomps
enter
pop
or
xchg
into
mov
icebp
lahf
push
and
daa
push
xor
data16
clc
mov
popa
or
out
call
clc
gs
pop
pop
cmpsl
xor
inc
push
adc
xchg
dec
jno
sarl
addb
test
cmp
in
out
or
add
arpl
das
mov
movsb
inc
xchg
dec
xchg
add
jge
and
scas
mov
inc
inc
cmp
fdivl
xchg
lods
sbb
pop
in
pop
xor
ret
xor
cld
repz
push
imul
push
pop
cli
lods
aad
jecxz
pushf
jbe
sbb
cltd
jne
add
push
test
clc
mov
push
cli
fisttpl
filds
cwtl
mov
inc
mov
movsb
daa
push
js
mov
iret
jne
mov
pop
iret
mov
test
outsl
clc
rclb
loop
jecxz
enter
mov
sti
cli
bound
je
inc
cwtl
sarl
leave
out
dec
les
adc
adc
and
mov
aas
xor
inc
fiadds
subb
aaa
inc
dec
das
nop
das
ret
fcompp
add
push
out
addr16
shrl
aad
mov
mov
jb
adc
xlat
ljmp
ljmp
pop
jo
testl
in
push
dec
dec
aam
adc
ds
clc
jl
out
add
rcr
pushf
ljmp
jge
add
cmpsl
or
jecxz
mov
sbb
push
pop
test
out
sbb
int
jo
nop
aad
add
sbbl
push
inc
push
sbb
addr16
fucom
aad
mov
mov
cmp
inc
das
stc
in
jne
sbb
aas
pop
movsl
orb
mov
test
repz
dec
jmp
xchg
fimuls
ret
stos
jl
cltd
ret
bound
aad
push
push
aaa
mov
xchg
mov
les
cmc
pop
aas
and
dec
leave
cmpsb
test
pop
lahf
jmp
jp
ret
cmp
xchg
mov
neg
movsb
xchg
cmp
mov
lea
ljmp
cmp
cmc
repnz
js
dec
dec
negl
mov
dec
iret
frstor
lcall
iret
scas
mov
rorl
fmuls
mov
int
cmp
xchg
sub
pop
ss
pop
push
push
mov
sbb
cli
ret
pop
sbb
xchg
stos
sbb
push
push
or
test
lret
sbb
pop
pop
jge
pop
je
jb
push
add
and
dec
in
hlt
aad
stc
mov
icebp
sbb
fcomps
sub
mov
xor
bound
push
stc
addl
push
ja
adc
jmp
enter
xor
add
rolb
add
jbe
or
add
jno
mov
and
mov
xlat
ja
rorl
sbb
mulb
push
int
cmp
aad
movsl
adc
pop
push
fcmovnb
jae
dec
int3
ret
hlt
out
or
jmp
aad
push
pop
and
lret
dec
inc
iret
mov
jne
imul
iret
rorl
dec
pop
dec
sbb
adc
mov
xchg
and
or
cmp
mov
or
movsl
pop
fnstsw
xor
fistl
cmpsl
fld
rorl
sbb
or
jo
mov
mov
push
jae
cmp
cli
out
loopne
aad
mov
mov
mov
jb
ret
fistl
insl
cmp
cltd
fsubr
dec
push
cmp
dec
jae
iret
and
data16
jle
rolb
je
cmp
test
push
mov
dec
jmp
leave
fiaddl
mov
rcrb
aam
mov
xchg
add
sbb
pusha
xchg
popf
mov
cwtl
sti
sub
test
mov
test
pop
pushf
mov
jecxz
in
mov
and
jmp
aaa
mov
lods
std
incb
dec
outsl
lods
andl
ficomps
mov
push
lahf
sub
xor
pop
mov
leave
enter
mov
xor
scas
enter
xchg
shrb
cmp
leave
jo
insb
and
in
or
adc
aas
subl
add
cmp
cmp
xor
out
adc
dec
movb
push
sar
and
aad
sbb
adcb
bound
aam
lcall
jb
inc
call
sbb
loopne
cmpsl
es
int
dec
jmp
mov
arpl
mov
jae
popa
pop
sbb
mov
lods
loop
jecxz
rorl
cli
aas
cmp
mov
jb
fsubs
das
insb
xor
jle
icebp
inc
xor
sahf
add
mov
divb
lods
push
pop
aad
jle
pop
dec
enter
leave
das
icebp
sbb
pusha
push
jae
cmpsb
hlt
lahf
sub
enter
fldt
jmp
jle
mov
or
scas
push
insl
jmp
pushf
cmp
mov
cwtl
jge
ss
adc
mov
ljmp
lods
scas
into
dec
into
xor
insl
dec
sbb
cmp
dec
incl
roll
roll
dec
dec
inc
pop
outsl
cli
jns
loop
imul
addr16
xchg
fmulp
movsb
dec
xor
inc
sti
inc
mov
mov
fstpt
popa
subps
and
and
mov
or
in
test
popf
or
sub
ja
and
imul
int3
jl
jo
or
mov
lock
adc
inc
repnz
mov
loopne
dec
jo
jg
adc
int
or
dec
ljmp
inc
scas
cmp
cmp
imul
cwtl
xchg
mov
les
jno
stos
out
cmp
or
jmp
mov
std
es
or
gs
and
jns
xorb
fstpl
cwtl
loopne,pn
mov
lret
cwtl
pop
test
outsl
sub
and
push
jp
mov
and
jg
std
and
cmp
mov
mov
mov
or
aad
ljmp
xchg
lret
xchg
dec
adc
jae
push
stos
cmp
sub
mov
negb
stos
dec
ss
sub
inc
stc
mov
mov
fdivrl
test
std
imul
add
pop
sub
lods
shrl
mov
insb
insb
test
fisubrs
jb
cmpsb
add
insl
std
jecxz
movsb
pop
mov
cmpsl
sbbb
lcall
sub
ficomps
jecxz
imul
add
lods
daa
or
sbb
cmp
pop
add
ret
mov
xchg
push
shl
cwtl
mov
or
mov
comiss
xlat
aas
xchg
push
lret
push
push
in
push
enter
movb
jns
sub
cmc
rolb
pop
enter
lcall
scas
shrl
repz
mov
push
dec
test
fisttps
test
jo
pop
fiaddl
cld
cmpsb
xchg
xchg
aad
addb
sub
cmpsl
sbb
dec
daa
push
gs
sbb
sub
cmpsb
jmp
cltd
daa
stos
outsl
cmp
int3
shlb
dec
das
mov
cmp
and
jge
cwtl
ror
jne
movsb
dec
hlt
fadds
flds
inc
cmpsl
dec
bnd
lea
push
test
jne
aad
pop
add
push
call
sub
mov
cmpsb
mov
mov
aad
pop
std
enter
lock
add
add
xchg
icebp
mov
lds
ret
clc
rcrl
push
movsl
inc
inc
call
xchg
cmpsl
xor
les
push
push
int
pushf
cmp
jb
jge
or
imul
insl
lahf
xor
arpl
lcall
shlb
clc
cmp
inc
adcb
loop
imul
mov
mov
fisubl
notl
adc
xor
xchg
cld
mov
repnz
fbld
push
xor
nop
cmp
insb
mov
and
out
fs
or
rep
sub
adc
lods
lods
inc
mov
cli
jecxz
icebp
dec
out
repz
outsl
cmpsl
mov
mov
out
cmp
inc
inc
xchg
xor
imul
mov
int3
pop
mov
pop
outsb
ja
sub
ljmp
lea
ljmp
popf
call
and
and
std
jl
or
lret
test
loope
je
inc
sub
jne
and
sub
ds
xchg
sbb
or
mov
or
dec
sbb
popf
xchg
jne
pop
divb
mov
insl
push
stc
and
jns
pushf
adc
mov
adc
js
loop
pop
or
cmp
fnstenv
mov
andb
daa
incl
add
push
sbb
cmp
or
dec
jp
mov
xor
pop
test
addb
mov
adc
dec
inc
jmp
jbe
sbb
dec
inc
pop
mov
ds
mov
shrl
movsb
les
maskmovq
notl
insb
rorb
xchg
mov
jmp
fisubrs
je
add
out
push
push
fdivrl
test
sti
inc
outsb
mov
pop
jae
pop
negl
fists
pop
loope
movsb
fistpll
push
test
push
ds
inc
push
imulb
or
ret
out
cld
dec
push
xchg
mov
xchg
rorl
repnz
test
xchg
sahf
js
mov
fldenv
rcrb
es
xchg
mov
pop
subl
aad
inc
lahf
aaa
push
ljmp
aad
pusha
pop
inc
xchg
dec
repz
mov
stos
xchg
inc
inc
pop
push
insl
jne
cltd
jg
imul
mov
lret
fistpl
add
sub
or
imul
insl
in
adc
jge
in
sbb
fstl
pushf
ret
fisttpll
out
test
das
mov
cmp
cmp
rolb
nop
daa
jno
inc
test
aas
int3
imul
inc
mov
lds
nop
sbb
repz
add
sar
mov
sbbb
lods
push
cld
aaa
das
inc
mov
out
fdivl
xchg
sbb
fildl
push
jnp
int3
in
leave
push
fstl
mov
cmp
adc
test
lahf
sahf
daa
sbb
cmp
inc
mov
in
into
idivb
sahf
inc
stos
loop
jge
jb
movsb
cmp
ja
pop
add
push
pop
jbe
cmp
mov
mov
pop
in
std
rclb
sbbb
inc
lock
xorl
sbb
movsl
loop
lret
pushf
push
and
imul
dec
or
push
xor
xor
cmp
rcrb
mov
les
xchg
jl
sbb
in
xchg
pop
mov
jl
and
data16
push
ret
and
push
test
sbb
pop
push
push
out
inc
xchg
mov
adc
and
iret
mov
dec
sbb
inc
jle
dec
cmp
sbb
insb
mov
mov
ss
pop
out
lret
je
and
mov
insb
adc
sbbb
sub
mov
js
out
inc
add
fsubl
mov
inc
iret
lods
into
stos
cmp
mov
shlb
sub
sbb
adc
or
leave
xor
lods
jbe
jl
es
mov
cwtl
daa
out
sub
mov
xlat
push
mov
nop
es
mov
out
dec
shlb
and
fidivl
push
push
shlb
pop
sahf
leave
insl
fcompl
xlat
negb
pusha
jns
mov
dec
ljmp
xor
pop
das
into
shl
jbe
cltd
mov
testb
inc
cmpsb
sbb
push
push
inc
xchg
cmp
jne
nop
push
lret
pop
sahf
add
lea
push
leave
xor
add
push
das
ljmp
movsl
mov
mov
loop
je
pop
pxor
push
cs
push
sub
lahf
mov
insb
jno
push
scas
sub
mov
dec
xor
hlt
fucomip
ja
bound
xor
jns
or
lea
les
mov
rcr
fisubrl
movsl
sbbl
mov
insl
into
sbb
xor
pop
imul
mov
xor
push
lcall
addl
lds
out
xchg
cmp
pop
lret
loop
pop
xchg
jge
sarb
push
scas
insl
xchg
sub
fildll
mov
sub
mov
fcoms
xor
stc
pop
push
in
popf
daa
xchg
loopne
jmp
push
or
in
cs
dec
dec
jo
nop
outsb
fcomi
pop
loop
andb
cmp
mov
jae
arpl
les
mov
and
leave
xchg
xor
add
sbb
leave
sub
sbb
jo
xchg
filds
out
stc
add
push
or
mov
push
dec
hlt
and
adc
mov
stos
cmp
loope
insw
sbb
jns
adc
xor
test
lea
inc
in
push
hlt
mov
call
pusha
into
aad
sub
xor
push
bound
mov
jnp
add
sbb
ja
test
insb
jg
sbb
lcall
xor
incl
or
fistl
popf
shll
es
out
cmp
lock
test
test
aas
js
xchg
lea
in
push
mov
js
sbb
mov
idivl
pop
mov
push
mov
ret
push
cmp
push
jp
jmp
xchg
ja
into
push
std
cmp
sahf
sbb
cld
xchg
cmp
add
cmpsl
shl
adc
ret
pop
dec
jne
push
fidivrl
inc
sub
cld
mov
andl
ss
rclb
xchg
xor
aam
addr16
sbb
lds
pusha
imul
push
fmul
jge
imul
jo
pop
push
jnp
cli
mov
add
push
sbb
push
pushf
rol
adc
xchg
aaa
movb
aam
sub
inc
stc
sbb
mov
insb
xor
push
mov
jl
jmp
sub
mov
insl
sbb
ja
inc
inc
mov
cs
test
movsl
out
inc
or
sbb
repz
in
cwtl
push
ja
andb
add
hlt
imul
cmp
ret
mov
mov
cmp
dec
pop
ds
pop
cld
add
in
add
loope
icebp
push
pushf
pusha
loopne
rcrb
push
imul
in
xchg
repnz
mov
mov
inc
test
xor
sti
mov
nop
mov
fs
shrb
mov
in
pop
js
add
rol
sarl
mov
push
inc
dec
neg
jge
push
jno
imul
mov
out
pop
sub
addr16
rcll
arpl
mov
pusha
out
andl
push
xchg
jmp
xchg
cmpsl
adc
jnp
loop
scas
xchg
add
inc
mov
or
inc
sub
hlt
stos
ss
je
aaa
nop
rcr
dec
pop
push
jg
mov
xchg
jmp
push
lods
or
sub
fimull
aaa
test
mov
in
sub
sub
lret
out
adc
int3
in
push
les
scas
repnz
movsb
jae
in
pop
sbb
sahf
test
fisttpl
dec
loopne
push
push
lret
or
push
push
pusha
mov
fdivrl
out
cwtl
adc
pushf
sbb
inc
flds
inc
ror
daa
pop
leave
cli
cmp
rcrl
sub
jns
or
sti
add
push
push
xlat
fadds
add
xchg
hlt
lret
cli
or
test
sub
mov
inc
add
jecxz
bound
insb
mov
xchg
dec
mov
or
ja
lcall
cmp
in
iret
mov
orl
icebp
pop
out
into
enter
mov
jo
push
adc
js
dec
scas
stos
cs
andl
das
xor
mov
das
adc
push
icebp
dec
aas
mov
xchg
lods
pop
jne
pop
adc
xchg
jecxz
shrb
mov
adc
mov
jb
mov
add
inc
cltd
mov
ret
push
cmp
lods
cli
xorb
jp
xor
jecxz
add
out
jmp
cltd
or
loopne
gs
mov
mov
jne
insb
sahf
sar
mov
cmp
mov
inc
mov
jmp
fnsave
xor
add
mov
and
fnstcw
sahf
loope
inc
cmp
lcall
mov
inc
cs
int
aas
jmp
mov
xor
fisubrl
or
adc
pushf
sub
fchs
shrl
jno
arpl
jmp
shll
ret
adc
cmp
mov
xor
cmp
mov
arpl
inc
sbb
movl
in
mov
in
push
loopne
xchg
push
cwtl
sub
jmp
xor
js
out
lods
nop
stos
jnp
fnsave
mov
insl
or
jne
jmp
adc
gs
imul
dec
pop
jmp
call
add
popa
ret
and
idivl
cmp
ss
or
and
repz
clc
and
jg
or
test
cli
sub
add
ljmp
push
or
mov
add
sub
xor
and
dec
lcall
sbb
sbb
mov
xchg
jle
xor
stc
fldcw
cli
fnstsw
sti
test
mov
addb
mov
cli
jne
stos
or
shll
sahf
ljmp
sub
pop
xchg
gs
arpl
loopne
sub
mov
fsubrl
push
fsubrl
inc
popa
mov
add
pop
lret
pop
imul
inc
adc
pop
mov
xlat
rclb
pusha
jg
mov
rolb
fptan
inc
sub
imul
mov
xor
pcmpgtw
dec
ss
mov
or
xor
out
aam
out
stos
int
mov
or
jb
inc
les
xchg
xlat
xor
xchg
ss
dec
pop
pop
jbe
lods
and
or
ljmp
scas
xchg
mov
out
iret
aas
sub
outsb
dec
fs
push
cmp
push
gs
xor
sti
mov
mov
xor
lea
xor
pop
mov
cmp
adc
mov
xor
cld
or
sub
jmp
movsb
enter
rol
lret
sub
push
xor
enter
add
dec
ret
sti
sbb
and
addl
call
cltd
ret
pop
and
xchg
pop
mov
pop
push
mov
jmp
or
shlb
loope
ljmp
fwait
lahf
scas
sub
jle
jnp
lret
mov
or
add
js
ret
xchg
in
mov
btr
dec
cmc
sahf
cltd
sbb
mov
and
in
cmpsl
jns
mov
pop
cmp
cmpb
in
cli
into
fdivl
imul
shr
mov
lret
xchg
push
inc
cli
sbb
dec
push
push
dec
fchs
in
add
mov
dec
pop
sbb
sub
sbbl
pop
shll
lcall
lods
popaw
mov
cmp
pop
lock
dec
or
inc
mov
stos
std
pusha
mov
adc
push
and
sub
stc
add
push
mov
out
xchg
mov
push
inc
sub
pusha
mov
insb
sti
push
xchg
call
fwait
dec
lcall
mov
and
push
mov
icebp
mov
stos
out
cltd
ss
xor
push
cltd
in
push
xchg
mov
cli
cmp
je
cmp
inc
aam
mov
lret
ljmp
xchg
repnz
adc
lret
ja
xlat
aaa
iret
stos
sbb
lea
in
inc
jg
out
pop
lods
imul
sub
adc
fnstcw
sbbl
sarl
mov
notb
sub
adc
ss
and
ljmp
iret
cmpsb
jne
imul
out
loop
mov
dec
fdivr
mov
jno
cmp
imul
addl
sbb
je
adcl
insb
mov
adc
jl
cmp
dec
inc
cmpsb
add
add
mov
mov
xchg
mov
and
mov
lea
jnp
in
mov
cmp
mov
imul
and
stc
pop
scas
add
fcomps
loope
stc
push
sub
xchg
shl
add
mov
and
pop
test
repz
fmul
addr16
lcall
inc
movsb
xchg
insb
call
mov
push
or
pop
sbb
lods
mov
lret
or
push
sbb
rcll
jnp
and
pop
call
rorl
xlat
and
lods
stos
push
push
aam
fcompl
ss
repz
dec
aaa
dec
js
xchg
xchg
lods
push
dec
mov
jl
mov
and
push
daa
mov
push
cmp
out
out
inc
sub
andl
and
mov
add
loop
jmp
repnz
mov
push
iret
shrl
cli
inc
pop
xchg
xor
mov
es
clc
push
je
iret
cmp
jno
ret
mov
rcrl
jge
jmp
dec
das
pop
or
fdivrs
jo
push
mov
jb
inc
std
loopne
dec
pop
enter
dec
add
mov
xchg
cmp
push
std
pop
mov
out
pusha
cmp
mov
fnstenv
sub
push
and
xchg
sub
sub
ficompl
fwait
dec
push
test
aam
jmp
int
enter
in
mov
lret
out
sub
xchg
out
fcom
jnp
movsb
cwtl
call
mov
out
popf
stos
or
cmp
xchg
mov
mov
sbb
out
outsb
arpl
mov
movsb
scas
push
add
mov
push
inc
aaa
cmc
and
pop
rcll
jmp
jnp
add
sub
sub
fcompl
mov
daa
dec
pop
std
cwtl
daa
and
mov
addb
into
jae
push
pop
dec
and
jae
xchg
add
mov
sbb
int
outsl
stos
hlt
pop
fbstp
mov
mov
mov
test
push
xchg
js
and
inc
pop
push
into
dec
mov
test
orb
mov
mov
aas
pop
popa
incl
adc
lret
ss
xchg
std
mov
fstl
test
fcmovnu
cmp
std
dec
or
xor
test
xchg
xchg
xor
aam
add
mov
fsubl
sub
dec
decb
xchg
testb
jge
xlat
clc
out
adc
xor
sub
ljmp
jmp
dec
popa
wrmsr
jmp
xchg
jb
mov
add
mov
lods
dec
mov
sub
jbe
cmpsb
jnp
das
push
scas
dec
std
std
pop
dec
lret
mov
aad
sub
fdivp
les
sub
repnz
mov
push
lret
pop
mov
movsl
loopne
flds
fisttpl
neg
add
pop
ror
cmp
dec
pop
mov
sbb
fdivrs
aaa
dec
xchg
pop
sbb
imul
and
xchg
dec
jmp
addr16
pop
cmp
or
or
sub
scas
mov
shlb
sbb
out
insb
sub
mov
sub
push
imulb
test
sbb
or
dec
rorb
pop
pushf
jbe
loopew
mov
cmp
mov
je
popf
lret
jle
mov
xor
inc
hlt
pop
pop
add
or
inc
movsb
jne
stos
fwait
dec
xorl
add
or
pop
test
stc
loope
out
testb
repz
xchg
push
mov
push
repnz
fs
sbb
pusha
ja
call
leave
imul
aam
movsb
cmpsl
mov
jb
push
lret
clc
fildl
xchg
ds
pop
je
xor
aaa
mov
orl
mov
ss
cmp
imul
and
jle
push
not
mov
sbb
flds
sbb
add
add
gs
xchg
test
xchg
cli
dec
hlt
jp
push
lods
cmpsb
sub
popf
xchg
cltd
test
andl
push
sahf
sbb
inc
arpl
ds
sbb
or
stos
dec
mov
xor
enter
in
sbb
cmp
addb
push
fstps
pop
adc
xlat
outsb
sbb
repnz
xchg
mov
pop
shrl
adc
and
mov
dec
inc
jne
pop
aaa
adc
mov
push
pop
xor
xchg
xchg
std
push
xor
xor
dec
mov
cld
lods
stc
ds
dec
loope
sub
insb
arpl
add
inc
mov
stos
fcmove
sbb
aaa
ret
loopne
icebp
jns
loope
fidivl
xchg
jg
mov
testl
lods
jb
add
sarl
insl
stc
xor
hlt
push
fst
lcall
pop
adc
cmp
mov
cmc
mov
addr16
push
mov
sbb
and
lock
sbb
cmp
rol
pop
jl
pop
inc
pop
pop
add
mov
add
xchg
addb
loope
cmp
je
fidivrl
cli
adc
fadds
inc
aad
cmp
mov
or
dec
mov
stos
pop
adc
cmp
add
mov
mov
adc
mov
add
out
clc
xorl
ret
mov
cmp
lods
jae
push
fistpll
shl
mov
imul
sti
stos
sub
mov
mov
push
cs
sub
popf
bound
sub
xor
cld
pop
push
cmpsb
cmp
cmp
jb
sub
addr16
pusha
clc
adc
xor
lret
mov
mov
das
fidivrs
pushf
and
mov
cmp
gs
inc
adc
inc
iret
dec
cs
rol
stos
test
lock
ret
mov
ds
sbb
jne
popl
imul
int3
arpl
jge
mov
iret
bound
addr16
insb
lods
sub
shl
bound
lods
jle
or
inc
add
stos
jl
lahf
cmp
nop
popf
mov
mov
fmull
push
push
and
insb
aaa
mov
adcl
loopne
loope
lea
mov
sub
inc
loope
add
lods
stos
clc
sahf
out
imul
push
hlt
and
imul
cmpb
rolb
mov
pusha
mov
push
pop
push
pop
push
stc
adc
cmp
loopne
cmc
test
or
test
cmp
sti
ret
add
call
xchg
ficoml
dec
gs
les
jne
enter
mov
cmp
test
dec
aam
les
out
mov
pop
scas
pop
out
sub
cmp
push
jae
xchg
pop
inc
cs
mov
mov
and
test
shll
add
or
loopne
pop
mov
call
lcall
shr
xchg
data16
inc
outsl
out
daa
adc
dec
dec
xor
mov
push
push
ret
add
js
push
cld
dec
loopne
lock
rcrl
xor
test
or
dec
mov
dec
push
call
or
daa
dec
shll
insb
cmp
fdivrp
ja
push
rcrb
push
pusha
inc
push
cs
cs
iret
push
sahf
nop
push
daa
lret
mov
sub
pop
mov
insb
ret
inc
mov
pusha
lcall
imul
cmp
push
inc
add
imul
mov
mov
roll
xlat
mov
leave
loopne
push
ljmp
lret
fisubrs
push
xchg
dec
shrb
jns
pop
jns
jbe
inc
or
int3
testb
xchg
adc
sub
les
mov
dec
sbb
xchg
and
shll
scas
push
mov
dec
sbb
xchg
scas
xchg
push
xchg
negb
jle
loope
nop
lret
xchg
push
test
jle
sbb
mov
idivb
pop
lret
adc
das
fdivs
mov
mov
add
fcmovnbe
out
aam
popf
inc
xchg
int3
jl
adc
xchg
add
cmc
cmp
xchg
pushf
daa
loopne
dec
xlat
lcall
popf
fs
pop
out
push
addr16
or
test
xchg
das
movsl
jo
insl
pop
lea
dec
push
dec
dec
xor
push
out
add
cmp
jp
in
dec
out
scas
sub
sbb
push
fidivs
mov
mov
scas
nop
lahf
call
int
adc
inc
push
sar
ss
repz
jb
lock
pop
inc
mov
pop
xchg
inc
cli
loop
and
fnstcw
lods
jae
cwtl
or
sub
into
ljmp
iret
xchg
push
inc
push
mov
in
add
and
adc
xchg
outsb
fstl
repz
mov
adc
lods
jno
mov
cli
adc
add
fisttps
frstor
in
cwtl
lock
or
and
lods
das
pop
push
les
add
jge
inc
cmp
ja
push
sahf
popa
fwait
test
jb
xchg
sub
adc
les
push
adc
out
es
and
iret
test
aas
sbb
sub
mov
outsb
shrl
jnp
rorb
popa
mov
out
pop
add
movsb
cmp
push
dec
enter
add
push
sub
mov
or
pop
mov
jns
xchg
insb
push
pushf
enter
pop
pop
das
pop
fidivrl
dec
ja
jmp
adc
repz
mov
sub
sub
in
sbb
jo
mov
xchg
jns
mov
mov
addr16
dec
jbe
mov
xor
xor
es
addr16
sub
and
out
cmp
dec
cmc
loopne
nop
je
ss
xchg
insb
movl
fstl
pop
cwtl
jmp
cld
scas
loope
or
mov
add
repnz
loop
enter
lods
lahf
test
xor
repnz
addr16
lcall
fmuls
pop
in
ss
inc
pop
fsubs
cltd
mov
and
push
pop
dec
loopne
movsb
mov
xchg
or
push
rol
jae
dec
add
iret
inc
loop
int3
scas
xor
pop
xchg
mov
jp
lret
mov
ror
mov
dec
notl
fdivrs
out
jae
rdmsr
inc
sub
lods
int3
fsts
push
pusha
mov
test
inc
mov
fwait
mov
jne
push
push
cmpsb
xor
dec
mov
insl
mov
rcrl
jns
les
lahf
test
mov
repnz
pop
lock
test
adc
push
inc
loopne
pop
mov
jle
jo
ss
mov
enter
stc
jecxz
sbb
fidivl
mov
shrb
testb
movsl
popf
pop
mov
bound
stos
popa
stos
iret
jo
xor
add
loop
mov
out
jg
mov
mov
inc
lock
mov
pop
mov
fwait
shr
inc
pop
stc
or
jmp
xlat
sahf
cmc
mov
ds
mov
andl
cltd
push
in
fidivrs
sar
arpl
xchg
fmul
rolb
pop
roll
mov
es
sub
jmp
into
shrl
xor
bound
aam
fisttpll
fwait
xor
fsubl
mov
xor
mov
call
int3
jno
in
jnp
icebp
pop
xor
add
pop
cmc
and
mov
sbb
fcom
cmpsb
fstps
in
popf
xor
dec
mov
push
adc
push
mov
inc
sub
sbb
dec
jns
ret
mov
pop
xchg
lods
pop
xor
adc
test
push
jns
loopne
dec
lret
ret
fxch
inc
mov
std
bound
xchg
lods
add
pop
dec
pushf
cmpsb
dec
mov
xorb
mov
jp
xorl
daa
pop
inc
cmp
cwtl
jb
mov
lods
stos
shrb
or
mov
lods
add
xchg
pop
pop
xchg
dec
xor
test
mov
jmp
adc
ljmp
fidivrs
loope
imul
sub
mov
push
mov
add
pop
ss
pop
and
mov
cld
cmpsb
or
dec
hlt
xor
cmp
push
xchg
inc
mov
lret
aas
mov
jg
cmp
js
out
iret
dec
loope
add
ds
jge
fs
jae
sub
stos
idivl
mov
mov
fcmovnu
sti
push
add
lds
xor
lock
and
cli
lret
movsb
pop
sub
pop
jno
pop
fidivl
shlb
inc
insb
loope
nop
in
add
mov
test
stos
cwtl
int3
pop
loop
scas
mov
rolb
out
lcall
pusha
gs
subb
dec
and
das
mov
inc
push
push
jo
out
dec
fadds
jnp
mov
add
push
xchg
lea
mov
jp
les
cmpsb
and
fldenv
xchg
push
push
inc
sub
pushf
int
add
out
mov
sub
mov
popf
add
jnp
movsb
push
adc
sbb
test
jge
and
pop
jo
or
negb
push
fistpl
fnsave
mov
adc
imull
in
movsb
mov
cmp
aaa
std
ret
add
sarb
lods
imul
ss
pushf
insb
cmpsb
rep
cmpsb
into
js
jno
leave
mov
mov
mov
pop
fcoms
out
xor
rcll
add
pop
xor
test
repnz
std
mov
addr16
xlat
pushf
sub
cmpsb
jecxz
in
inc
insl
push
outsb
rcr
cmc
pop
lods
xlat
mov
jne
jl
stos
add
dec
mov
cmp
jge
fldcw
cltd
mov
decb
subl
cmp
mov
cmp
loopnew
andl
adc
lcall
lahf
mov
lods
dec
in
pushf
push
repnz
xchg
out
cmpb
cmpsl
mov
test
fs
rcrl
aam
in
or
push
int3
into
cs
cmp
jae
mov
sub
sbb
dec
fnsave
or
jmp
out
leave
or
mov
push
sbb
push
mov
sbb
rcll
lret
adc
dec
mov
int
pop
idivb
push
push
mov
icebp
push
inc
xchg
arpl
subl
test
sbb
jmp
test
insl
jno
push
ret
xor
sbbl
sbb
imul
shll
jae
popa
sti
mul
shlb
add
std
dec
adc
js
and
and
xchg
cmpsl
rclb
cmp
mov
fnstcw
int
jmp
push
mov
sbb
fsubs
cmp
push
les
mov
cld
mov
out
or
jno
hlt
dec
pop
mov
dec
mov
sub
daa
mov
inc
bound
insb
lret
shlb
scas
xor
jl
cld
xchg
gs
pop
jp
and
dec
jl
mov
insb
sub
inc
nop
jns
enter
push
sub
xor
stos
xor
ret
pop
jno
mov
cmp
inc
sbb
sti
inc
adc
sarb
notb
mov
fucomi
mov
test
adc
icebp
jae
cmp
xor
dec
ljmp
add
lahf
negb
xor
mov
push
push
xor
pop
dec
xchg
push
dec
and
nop
push
and
sub
jo
mov
xchg
inc
lahf
clc
mov
inc
arpl
shr
stos
loopne
push
stos
repz
add
cmp
repnz
insb
inc
adc
and
rolb
and
and
out
and
std
cli
xchg
xor
fcom
xlat
loope
call
push
scas
pop
mov
pop
mov
or
fwait
data16
outsl
jb
loope
sbb
fmull
xchg
mov
sub
mov
lock
push
mov
xchg
mov
loope
psubb
lcall
mov
inc
shll
xchg
cmc
sarl
shl
pop
mov
cmp
sub
sbb
xchg
mov
lcall
add
nop
out
mov
jns
mov
insb
in
loope
push
or
cmp
scas
and
pop
mov
pop
mov
mov
lea
push
inc
xchg
xchg
or
mov
ss
cmp
cmpl
mov
fxch
sbb
lods
and
mov
push
pop
dec
scas
repz
adc
sub
mov
push
adc
bound
jge
popa
push
jns
in
xor
inc
cmc
sbb
in
and
push
pop
mov
bnd
push
test
xor
sub
xor
fwait
xchg
jle
adc
shl
rorl
push
mov
jmp
outsb
fiaddl
into
push
js
push
sub
insb
jnp
pop
jl
jecxz
outsl
frstor
mov
das
inc
out
or
fidivs
push
push
and
cwtl
popf
gs
dec
dec
xor
add
or
pop
aaa
sub
lcall
push
push
mov
stc
sbb
stc
jno
push
xchg
mov
adcb
pop
out
into
and
mov
out
lcall
jecxz
das
pop
dec
mov
iret
xor
pop
adc
popf
or
dec
shrb
arpl
xlat
mul
pop
xor
lods
jae
lret
mov
dec
mov
xchg
push
cmp
bnd
xor
popa
push
inc
movsl
imul
ja
sahf
xchg
jnp
cmpsl
add
popa
pop
bound
decl
sub
pop
clc
fwait
gs
mov
xor
stos
imul
lods
xchg
int
stos
lock
repz
push
mov
je
ss
xor
inc
sbb
test
lds
xor
jno
negl
lea
movsb
out
insl
xor
lea
fbstp
outsl
pusha
fs
add
mov
dec
pop
divl
dec
enter
xor
stc
and
addb
or
pop
pcmpgtd
xchg
jp
scas
sbb
call
jge
xor
arpl
or
xchg
or
jne
push
mov
mov
pop
test
das
shrl
out
push
rolb
orl
adc
xchg
dec
scas
popf
ret
dec
out
mov
pop
pop
out
filds
insb
push
ss
int
push
popa
pop
pop
sub
js
or
mov
aad
jl
xor
iret
lds
inc
mov
pop
in
mov
movsl
mov
jno
mov
or
pop
xchg
push
test
pushl
rcr
xor
rcl
ja
inc
imul
rcl
out
sub
fdivrl
lock
scas
bound
aam
ds
or
adc
and
inc
jecxz
adc
es
sti
add
sub
or
sub
aam
xor
sahf
movsb
pop
pop
sub
sarl
data16
daa
popf
es
std
xchg
imul
insl
add
mov
rcrl
fistl
sbb
mov
rcr
sbb
mov
and
sub
addr16
enter
or
imul
sbb
lds
dec
cli
ljmp
jo
loopne
icebp
push
outsb
ljmp
dec
ljmp
xor
pop
xchg
or
add
mov
inc
jne
cmp
mov
loope
testb
mov
jnp
jno
dec
insl
mov
mov
subl
lock
mov
out
popa
aaa
dec
ret
sti
dec
inc
int
fcoml
or
mov
and
aas
mov
inc
dec
mov
je
mov
loope
cltd
push
gs
mov
xor
jae
xor
cmpsl
scas
mov
insb
xor
scas
btr
fucomip
add
xchg
test
imul
pop
adc
out
les
push
nop
out
add
xor
cmpl
dec
cs
sbb
add
cmp
and
into
out
and
dec
loopne
in
loop
mov
rcrb
add
sbb
or
fcmovnbe
test
dec
jp
xor
or
cmpsb
fisubl
inc
ret
in
inc
mov
loop
rorl
pop
jns
and
pop
pop
mov
mov
add
push
cmp
lods
in
or
push
out
jb
sahf
lock
test
or
ja
leave
sub
lds
ljmp
loopne
rep
xchg
xchg
inc
inc
pop
and
xor
addb
outsb
and
jmp
out
pop
sub
cmp
add
cld
ds
mov
xor
movsb
mov
les
xor
out
test
mov
adc
daa
dec
mov
out
std
call
xor
inc
fsubr
adc
imulb
sbb
imul
mov
mov
push
and
pop
addl
ret
inc
iret
imul
adc
insb
sub
add
jg
aam
mov
sbb
mov
test
or
mov
dec
notb
mov
inc
incl
dec
aad
mov
aas
pop
jbe
push
and
fistpl
push
ret
adcb
aam
push
sub
movsb
add
stos
jb
ret
jle
mov
ds
std
add
add
nop
out
movsl
bound
fcomi
cmp
in
mov
popf
mov
push
sahf
add
push
fcomps
adc
cmp
mov
mov
add
cmpsl
aaa
add
in
xchg
pop
test
jb
rorb
push
add
das
lds
je
lret
and
sbb
lea
push
adc
dec
mov
call
lods
push
lods
sbb
xchg
xorl
jnp
js
inc
and
maskmovq
idivl
mov
mov
out
gs
mov
cmp
stc
les
fwait
lahf
sub
std
fistl
dec
dec
sbb
sarl
dec
mov
repnz
dec
cld
push
mov
xchg
sbb
cmc
idivl
stos
and
xchg
mov
inc
sahf
inc
pop
jbe
cmp
ljmp
mov
dec
jp
or
cli
sbb
test
cmpsl
test
out
ficompl
lods
or
pop
jmp
cld
sub
cmpsl
cmp
mov
mov
test
jg
gs
mov
adc
or
add
jg
or
vgetexpps
xor
mov
stos
inc
or
jno
adc
rcl
div
mov
adc
frstor
sub
pop
mov
imul
sbb
mov
sbb
or
fldcw
adc
mov
leave
push
jmp
xor
push
fnstcw
xchg
mov
mov
arpl
push
pop
inc
les
sub
cli
mov
aaa
jge
sub
sbb
or
scas
setle
aad
imul
cmp
out
insb
sub
jae
pop
int3
clc
dec
dec
fisttps
mov
daa
xchg
jnp
lods
aam
bound
test
lock
or
cmp
and
cwtl
out
pop
push
mov
mov
jnp
xchg
xor
scas
dec
roll
sub
aaa
xchg
push
inc
sbb
xchg
jmp
mov
sub
mov
adc
mov
jecxz
mov
mov
cs
clc
xor
stos
jecxz
imul
or
push
lahf
fcoml
jo
xchg
push
stc
shlb
inc
adc
pop
fnsave
pop
add
lahf
cmp
sar
sahf
rorb
xchg
add
int3
rorb
push
cli
cltd
mov
rcrb
nop
push
in
mov
mov
sbb
ss
in
hlt
cltd
mov
xchg
sub
adc
sub
dec
test
faddl
push
mov
sahf
cmpsb
xchg
call
pusha
or
push
mov
xchg
push
jge
push
mov
test
mov
add
rorb
mov
sub
addb
ss
cmp
inc
mov
dec
push
pop
ret
fisubrs
inc
sbb
or
inc
rcrl
rclb
sarl
shlb
cld
inc
out
mov
aam
push
inc
lret
add
mov
jae
add
loop
negb
sub
loope
in
repz
ds
stos
xlat
in
out
test
ret
ret
jo
jg
dec
lea
fisttpll
icebp
xadd
adc
addr16
adc
sub
lods
or
es
xor
scas
lds
add
arpl
xor
push
das
adc
pop
xchg
mov
sub
push
addb
dec
sti
cmp
in
imul
dec
mov
addr16
subl
mov
jl
clc
push
and
test
in
cmpsl
movsl
stos
or
xor
outsl
sarb
and
test
shlb
sarl
into
sbb
or
hlt
and
mov
in
les
cli
les
test
loope
mov
adc
push
mov
mov
jns
repz
call
out
ret
add
outsl
shrb
push
mov
push
bound
xchg
insl
mov
inc
into
repnz
mov
jo
fst
je
jge
data16
xchg
insb
fadd
xor
mov
jns
jo
add
xchg
in
test
cmp
mov
adc
fwait
aas
das
adc
nop
imul
xor
and
xchg
iret
xchg
dec
in
cmp
pop
or
ss
mov
jl
lret
pusha
and
cmp
mov
lea
adc
dec
inc
dec
dec
sti
sub
fimull
popf
or
adc
dec
or
push
and
mov
clc
sub
js
dec
stos
popa
std
out
enter
cmp
subb
mov
inc
mov
or
lahf
and
loopne
and
xlat
sarb
jmp
idiv
neg
dec
je
es
xlat
adc
adc
pop
cmpl
cltd
divb
push
addl
xor
xchg
or
add
cmpsl
push
js
mov
repnz
push
decl
sbb
or
dec
jnp
pushw
jns
enter
mov
ss
push
adc
push
xor
sbb
cmp
push
rcll
push
mov
push
mov
pop
cmpsb
addl
in
cmp
inc
pusha
push
fmuls
push
insl
push
pop
test
sbb
push
sub
and
jl
inc
mov
xlat
cmpsl
aam
daa
imul
js
dec
mov
mov
pop
and
call
mov
cmp
jb
scas
pop
xor
aad
xchg
lahf
stos
jmp
adc
dec
or
mov
sbb
pop
fadd
dec
xchg
sbb
push
dec
scas
std
mov
mov
pushl
or
std
in
imul
xchg
jno
jo
jp
and
jecxz
daa
mov
cmp
adc
inc
pop
pop
lret
out
ret
jo
mov
or
loope
jbe
jecxz
stos
mov
nop
jne
aas
repnz
test
loope
sbbl
push
shrl
fs
sbb
mov
movsb
push
mov
mov
pop
lea
mov
xchg
and
inc
dec
repz
sub
es
cwtl
inc
sbb
xchg
dec
or
adc
mov
adc
pop
enter
scas
pop
in
shl
test
test
xor
ja
and
arpl
xchg
ja
aam
jno
mov
add
cs
add
pop
jbe
mov
fwait
sub
inc
push
sub
dec
pop
cmp
cmp
jg
insl
jmp
jne
inc
xor
test
cmc
pop
mov
insb
popf
mov
sarb
inc
imul
repz
notb
cmpsl
lock
rolb
loopne
flds
inc
xlat
jbe
jnp
es
sbb
flds
dec
jae
push
call
push
and
aas
shll
aad
in
insb
adc
iret
pop
inc
rcrb
testl
je
mov
hlt
dec
stos
ljmp
or
ret
lret
pop
stos
lock
incl
jno,pn
fnsave
xchg
leave
push
cmp
ss
sbb
xchg
mov
lcall
jo
cmpsl
negl
sbb
dec
into
fbld
mov
xchg
xchg
push
push
and
pushf
lea
icebp
je
stos
push
pop
jecxz
iret
popa
jb
imull
cmp
call
jo
inc
xchg
xor
push
jmp
lahf
mov
push
push
push
or
sbb
xor
lahf
mov
cmp
iret
loopne
lret
mov
add
mov
jmp
out
fisubs
inc
mov
cmp
out
mov
out
pop
add
inc
out
testb
or
mov
stos
push
pop
xchg
xchg
and
xorb
cmp
xchg
iret
fs
repz
dec
add
in
inc
fwait
sti
jmp
hlt
adc
out
out
iret
bound
jns
hlt
jbe
cltd
xchg
inc
push
mov
mov
xchg
bound
std
ror
stos
sub
popf
std
dec
dec
add
fcomi
lods
mov
sub
xchg
pusha
movsl
into
mov
add
push
inc
out
cld
push
movsb
add
popa
scas
xchg
fidivrs
xchg
cwtl
jle
test
add
stc
stc
inc
dec
push
adc
popa
insl
popf
fidivs
cmpsb
outsb
pop
fxam
or
sbb
repz
incl
push
pop
testb
add
shrl
jno
lahf
push
and
sbb
cmp
pop
test
sub
ljmp
add
and
inc
or
out
aad
out
cli
xchg
imul
inc
add
cmp
ds
ffreep
jl
jo
cmpsl
int3
push
jg
or
sub
lock
cmc
rcrl
rol
rorl
aam
mov
flds
and
lods
xchg
mov
push
inc
xor
xor
cwtl
test
adc
pop
call
test
stc
mov
aaa
in
int
adc
cmp
sub
add
xor
out
std
jne
push
sbb
mov
dec
jge
inc
pop
inc
push
nop
xchg
int3
xchg
cmc
xor
andb
das
loope
adc
pop
pop
ret
jmp
ja
sub
out
sti
jo
sbb
mov
inc
fidivs
je
mov
loope
pop
inc
jne
les
enter
fsts
jle
jl
mov
jecxz
fwait
nop
mov
lahf
and
rcrb
pop
ret
js
ret
adc
xor
stos
or
idiv
ficomps
andb
stos
jecxz
push
dec
lret
lret
sbb
sbb
mov
test
sbb
stos
in
sbb
fnstsw
bnd
fdivp
add
cmc
adc
cmp
xor
lea
scas
cmp
int
jg
inc
inc
shlb
xor
addr16
mulb
cwtl
ljmp
xor
lods
add
and
or
mov
xchg
fnstcw
push
and
mov
imul
xor
loopne
jb
das
mov
hlt
dec
test
fsub
cmp
lahf
mov
pop
sub
shlw
test
sbb
inc
clc
rorl
xlat
shld
jbe
and
or
jle
data16
gs
and
dec
push
dec
push
cmc
movsb
xchg
pop
repnz
or
jbe
mov
clc
out
divb
les
cmpsl
lret
popf
stos
mov
cltd
test
sbb
pop
pop
stc
sahf
rclb
sub
fists
imul
adc
or
lds
test
in
pusha
inc
xchg
enter
sub
mov
rol
arpl
push
dec
or
aaa
mov
and
push
mov
cs
inc
fwait
sti
mov
and
aam
gs
cmp
xchg
test
mov
lea
sti
mov
and
sub
cmp
sahf
xchg
sub
shlb
nop
sub
rorb
enter
icebp
pop
inc
testl
dec
shll
insl
das
fmull
lea
fbstp
daa
stc
rcrl
mov
jns
out
movsl
inc
or
rorl
pop
ja
xor
cmp
push
inc
xchg
dec
dec
cmc
add
out
mov
out
jge
shlb
das
xlat
pop
jl
ds
fists
and
or
mov
or
inc
test
cmpsl
pop
and
lret
mov
sub
rorb
leave
and
lock
aad
pop
xchg
mov
test
popf
es
rorl
add
jge
or
xchg
icebp
outsl
dec
cmp
idivb
hlt
push
inc
pop
cwtl
int3
ss
mov
jecxz
cwtl
pop
dec
js
ret
decl
rcr
mov
dec
ficompl
xchg
inc
subl
cmpsl
mov
arpl
xchg
outsb
in
lret
lock
lahf
rcrb
pop
gs
add
inc
stc
sahf
lock
cs
daa
mov
mov
es
add
addr16
pop
or
test
fwait
pop
pop
jb
dec
push
xchg
jecxz
icebp
scas
xor
stos
js
mov
arpl
inc
jo
push
jecxz
lret
jg
mov
jbe
cmp
inc
xor
lods
ret
fldenv
je
sarb
and
and
push
in
rorb
and
push
inc
bound
lcall
mov
jecxz
push
in
pop
sbb
rcrl
mov
sbb
test
leave
lret
xor
jno
ret
stc
in
lods
and
out
cs
sub
xor
cltd
jg
pop
jp
fnstcw
push
pop
fdivs
or
sbb
testb
add
xor
mov
jae
lret
fisttps
lea
int
jle
mov
lods
mov
popa
cmp
pusha
outsb
dec
int
repz
enter
std
cmp
xor
fstl
mov
ljmp
add
repnz
in
cld
rcrb
sub
jo
hlt
add
divb
sub
idivb
pop
out
mov
pop
pushf
mov
std
and
cli
test
inc
sbb
xchg
mov
mov
add
dec
sbb
jecxz
data16
xchg
xchg
xchg
or
xor
repnz
mov
icebp
ljmp
dec
scas
nop
sub
pushf
jno
fldenv
xor
adc
cli
push
inc
jge
arpl
jp
lds
inc
addr16
xlat
test
or
adc
jnp
cmp
pop
sbb
mov
add
in
and
sbb
xorb
sub
push
and
incb
push
loope
lea
or
adc
cli
ror
je
cmpsl
dec
negb
inc
nop
add
inc
jge
sahf
xor
sti
in
jb
add
das
cld
ret
sti
and
jo
pop
ljmp
mov
insb
mov
mov
jbe
inc
out
mov
nop
adc
inc
xor
sbb
in
decl
fcompl
pop
pusha
jmp
aas
ret
outsl
out
mov
jae
shrb
sbb
jbe
cmp
jge
stos
mov
push
mov
into
adc
sub
cmpsl
add
mov
sub
outsb
fldt
mov
mov
mov
push
movsb
jl
add
lret
xchg
enter
cmpsl
leave
fsubrl
jmp
sbb
inc
rcl
cmpsb
and
or
cmp
nop
out
mov
data16
loop
aaa
outsl
adcb
je
enter
sub
aad
push
xchg
xor
cmp
outsl
pop
paddsb
mov
and
dec
les
mov
fimull
cmp
call
or
fisubrs
rcrb
or
sbb
into
xchg
addr16
xchg
inc
leave
js
pop
sub
pop
sbb
lahf
fstpt
aas
movsl
cmp
or
mov
xlat
mov
push
xchg
push
xchg
test
cmp
push
pop
and
shlb
scas
andl
fwait
jp
pop
lcall
shrl
cmpb
ret
and
sub
add
aaa
add
fsubl
scas
add
fcmovu
fs
push
inc
into
lcall
enter
xor
fsubrp
dec
into
lods
cmc
stos
fyl2x
popf
and
cmc
lods
sbb
inc
xor
pop
cmp
xchg
mov
push
pop
pop
cmp
pop
mov
std
jbe
mov
dec
xchg
mov
jmp
cmp
int
jecxz
nop
or
jne
lods
stos
cmp
inc
jb
js
notb
fiadds
or
and
and
jge
aas
push
push
xchg
addr16
test
ds
pop
popf
mov
es
dec
test
xchg
daa
aad
rcrl
bound
cmpsb
cld
fidivrs
push
sbb
xchg
sbb
sahf
mov
dec
pushf
lods
jb
xor
cmp
sub
hlt
in
int3
adc
lahf
cmp
stos
repnz
pop
aaa
mov
je
movsl
loope
fst
retw
dec
push
adc
cmp
push
hlt
or
leave
mov
or
data16
fcomip
shlb
out
push
push
out
rcrl
mov
cld
xor
fstpl
pop
fcompl
clc
push
mov
lea
xchg
sub
scas
jb
cmpsl
mov
test
mov
data16
shl
xchg
mov
adc
movsb
or
dec
push
pop
pop
inc
lea
jnp
add
push
pop
and
pop
je
or
inc
jle
inc
in
mov
jbe
xchg
mov
fs
popa
push
mov
int3
dec
out
sbb
sub
pushf
sti
pop
xor
int
pop
test
xor
call
mov
shll
jnp
ds
mov
sbb
je
rorl
sahf
test
adc
data16
int3
insl
pushf
loop
push
push
adc
test
imul
jbe
repz
mov
dec
jns
jmp
jne
adc
icebp
cmpsb
and
push
icebp
push
cmpsl
mov
sub
stos
xchg
xchg
hlt
ret
xchg
adc
mov
xorb
sti
les
push
jmp
pop
rorl
fidivrl
jmp
inc
inc
rclb
cmp
imul
jnp
jae
inc
lcall
pop
gs
push
inc
cli
loope
sbb
pushf
push
mov
jb
push
or
mov
lods
xchg
xchg
pop
test
int
insl
aas
xor
aas
inc
jmp
cmp
jecxz
mov
faddl
out
nop
jo
bndstx
pushl
dec
xlat
xor
clc
icebp
cmp
pushf
or
dec
adc
out
fsts
aas
in
mov
sub
xor
out
shlb
xorb
mov
xor
dec
dec
xchg
inc
mov
dec
adc
ds
clc
call
push
shl
xchg
pop
dec
mov
pusha
xchg
adc
inc
add
push
fadds
mov
popf
sti
fdiv
fwait
enter
scas
mov
adc
insb
push
mov
fcmovu
test
sub
xor
mov
push
xorb
dec
int3
xchg
mov
loop
jns
xchg
test
sarb
mov
xor
jge
pop
or
xor
repnz
and
test
mov
xchg
and
popa
adc
addl
and
fimuls
movsb
pop
push
js
int3
out
pop
fildll
xor
xor
mov
push
jno
cmp
pop
mov
into
mov
lods
push
adc
fsts
xchg
stos
scas
mov
add
xchg
pusha
mov
out
fmuls
mov
jae
dec
xchg
push
lds
lret
dec
jle
lods
mov
scas
ljmp
adc
xchg
scas
repnz
int3
xchg
int
mov
push
xlat
mov
sbb
sbb
inc
int3
lcall
jae
jae
add
in
int
in
pusha
es
dec
outsl
push
push
mov
out
xchg
icebp
in
pop
or
and
js
xlat
mov
in
inc
movsb
lahf
pusha
push
mov
or
in
clc
fdiv
fsubr
lods
gs
xchg
out
push
xor
clc
lcall
sub
pop
mov
push
adcb
sahf
adc
scas
dec
add
nop
pop
divb
sub
in
loopne
cmp
mov
dec
into
push
shll
inc
push
mov
filds
xchg
adc
xor
xchg
jb
clc
adc
addr16
xor
aas
pop
xor
inc
xchg
dec
into
subb
push
fs
jns
sub
cltd
aad
outsb
das
xor
jl
xchg
jno
sub
mov
xchg
nop
ja
inc
add
sub
lock
sbb
push
ficoml
pop
xor
aaa
clc
in
add
adc
adc
pop
pop
outsl
insl
out
sarb
cld
xor
cmpsb
xchg
jmp
aaa
rclb
inc
ret
add
or
das
lret
mov
cmp
lods
inc
xchg
rorb
add
loop
mov
je
cmp
sbb
mov
push
dec
inc
or
cmp
push
je
iret
or
xchg
arpl
ds
jns
sub
pop
jo
mov
test
dec
dec
dec
and
pop
xchg
xchg
pop
mov
cmp
call
mulb
fiadds
xchg
xchg
inc
inc
mov
pusha
mov
out
sahf
loop
mov
add
xor
pop
inc
adc
mov
test
stos
fldcw
xlat
lahf
fdiv
call
or
jle
movsb
or
and
lret
cmp
dec
jb
insl
push
dec
mov
cmp
mulb
push
jle
add
data16
push
jg
pop
js
add
push
out
add
sbb
add
xor
fidivl
in
push
mov
pop
xchg
pop
pop
adc
cmpsb
leave
xor
lods
sbb
fistps
mov
mov
into
insl
xor
pop
mov
sbb
in
lret
ror
jmp
cmp
lods
cmp
cltd
mov
pushf
xor
call
xlat
vcvttsd2si
xchg
andl
test
shrb
xor
add
shlb
adc
lahf
or
lcall
push
ds
sbb
dec
xchg
push
outsb
neg
ja
fwait
sbb
test
cli
xor
cmp
and
cmp
or
sbb
pop
mov
xor
sahf
mov
jo
lods
push
push
mov
push
xchg
add
insb
cwtl
jge
mov
fidivrs
insl
and
jecxz
or
add
ss
sti
push
jne
das
push
dec
mov
xchg
sar
jo
std
adc
xchg
mov
mov
push
insl
cld
je
fnsave
jg
xor
test
add
cmpsl
push
scas
jns
dec
push
ja
push
outsl
push
adc
fdivl
aaa
es
bound
pop
push
leave
dec
mov
fmuls
iret
mov
sahf
cmp
jmp
in
add
mov
mov
dec
pop
mov
mov
jle
inc
dec
or
icebp
aas
mov
add
mov
mov
adc
out
jbe
jns
dec
sbb
mov
pop
sbb
adc
in
aaa
xor
mov
dec
movsl
lcall
test
sbb
sbb
mov
sti
push
mov
out
sbb
inc
mov
test
mov
movl
pop
inc
push
and
icebp
pop
xchg
lods
mov
imulb
push
jne
or
out
ss
mov
cmpsb
push
insl
sbb
pop
rorb
adc
mov
xchg
arpl
loope
inc
jb
push
popa
mov
push
mov
push
roll
add
out
fadds
and
rcll
add
cmp
xlat
out
call
xor
push
or
adc
andl
inc
mov
xchg
jmp
xor
lods
jl
fdivs
push
xchg
mov
loop
orb
je
out
aad
inc
add
push
jb
mov
cmp
loope
and
xchg
mov
scas
inc
bound
cwtl
jl
loop
pop
and
cwtl
loopne
mov
ds
les
dec
cmp
sub
mov
mov
pop
push
adc
and
out
jle
lods
ret
xor
test
push
std
add
push
inc
lods
test
fs
stc
ds
and
out
xor
orb
add
add
cmp
scas
aas
mov
jns
fucompp
mov
fnstcw
test
sarb
push
int
jne
jo
popa
pop
lock
jno
mov
cld
mov
fldl
iret
int3
cwtl
fneni(8087
mov
leave
jecxz
pop
inc
out
test
inc
sbb
cli
roll
jns
ja
adc
leave
mov
lcall
mov
int
adc
fiadds
push
das
cmpsb
mov
pop
out
dec
ret
fsts
push
or
dec
mov
int
xor
test
cltd
and
fs
and
mov
sub
dec
jge
jo
lcall
aaa
jo
das
cld
xor
jle
sub
push
add
pusha
jecxz
in
fdivs
in
jns
int
pusha
sub
idiv
shl
mov
xlat
mov
fistpl
or
idivl
loop,pn
push
fwait
xor
cmpsb
mov
pop
std
jl
and
jne
loop
pop
pop
jno
dec
rolb
mov
or
clc
scas
cwtl
jle
xchg
test
push
test
xchg
lahf
mov
cmpsl
stos
mov
xor
ret
push
cmp
dec
jp
les
and
out
or
imul
add
push
sbb
xorb
dec
xchg
push
roll
jecxz
stos
push
xor
pop
inc
adc
ds
ret
dec
xor
add
dec
fsubl
push
ds
dec
inc
arpl
sub
inc
xchg
inc
decl
cmp
jb
in
sti
sbb
pop
sub
icebp
push
dec
sarb
jno
push
mov
rcl
or
mov
cltd
mov
jae
cmp
repnz
in
js
pop
and
mov
adc
jb
fs
or
pop
sbb
sub
mov
inc
fwait
sub
popf
or
aaa
rclb
push
cld
sahf
dec
scas
cmc
or
jge
pop
ljmp
sti
ja
arpl
add
insl
inc
push
inc
enter
test
bound
dec
call
icebp
std
jecxz
sbb
pop
inc
and
ds
cmovp
fwait
lcall
fwait
xorl
jae
mov
sbb
cltd
jg
sub
lock
jmp
push
adc
and
lds
into
mull
mov
sbb
jecxz
mov
loope
mov
outsb
int
sub
xor
clc
orb
imul
xchg
adc
cltd
push
mov
mov
movsb
test
xchg
jl
pop
push
sbb
jp,pn
in
icebp
cmp
es
pop
sarl
jle
cmpl
leave
insl
lods
das
push
imul
sub
jno
stc
sbb
add
push
sbb
fiaddl
notl
lret
or
std
lcall
jge
or
int
pop
pop
add
ficomps
mov
je
mov
adc
pop
jg
out
lods
sti
pusha
cltd
pop
pop
mov
inc
cmp
add
mov
pop
int3
in
sbb
xor
cmc
in
shr
add
or
arpl
ffreep
mov
sbb
es
ss
dec
out
xchg
test
jno
lods
inc
notb
je
clc
mov
sbb
sbb
das
or
cwtl
sahf
stc
adc
out
subb
inc
xlat
scas
in
push
repnz
gs
pop
push
scas
stc
fsts
and
pop
mov
or
sbb
notb
jl
xchg
mov
xchg
cmp
inc
jbe
sub
test
mov
ds
testl
xor
mov
movb
fisubrs
mov
xorb
jbe
jns
xor
scas
sbb
or
stc
inc
cs
jb
dec
pop
jle
pop
and
lods
fwait
dec
add
jp
jne
mov
sbb
xor
push
pushf
bound
sar
or
cmpsl
pop
fldl
pop
fcoml
iret
gs
dec
je
sub
cli
pushf
push
ret
test
mov
xor
or
mov
out
cmp
sbb
inc
test
inc
fiaddl
daa
inc
aas
into
fldt
shr
sub
inc
fisttpll
in
sti
and
dec
test
mov
dec
outsb
testl
ja
testl
sahf
mov
out
push
lret
dec
es
shl
test
pmuludq
cmp
mov
dec
js
pop
inc
ds
mov
lock
mov
rcrb
movb
cmovp
popf
es
ror
mov
fstpl
rol
lret
sbb
mov
leave
push
leave
xchg
inc
xchg
repz
aaa
imul
push
mov
cwtl
fcom
cmp
add
in
mov
sbb
mov
out
movsl
sbb
adc
push
arpl
shrb
push
iret
in
in
sbb
and
sub
sahf
dec
fcompl
mov
jns
add
repnz
shrb
flds
mov
push
push
adc
cwtl
call
fsubr
gs
lock
cli
xor
and
lods
xchg
movsl
movsb
push
pop
xchg
and
jae
pop
scas
in
pop
xchg
mov
xor
sarl
cmp
cmpsb
rclb
movsb
cmp
push
mov
inc
sbb
nop
ja
jb
fisubrl
or
jbe
pop
jbe
loopne
pushf
mov
out
inc
xor
push
insl
cmc
ja
push
xor
jno
mov
dec
adc
movsl
cmpsl
js
sub
pop
ds
adc
pusha
jp
pop
mov
inc
xlat
xlat
mov
adc
pop
sub
sub
clc
sub
cmpsl
subl
jmp
sub
aam
icebp
dec
daa
mov
int
addr16
cld
add
cs
add
aas
inc
jo
cmpsb
pop
sbb
cmp
mov
push
pop
mov
cmp
sbb
xor
aad
fnstcw
sti
pop
add
jno
pop
adc
jle
in
fbld
push
or
leave
jnp
dec
out
push
mov
call
xor
push
mov
dec
loopne
dec
or
jp
out
jg
and
fisubrs
mov
dec
sbb
xchg
sbb
dec
adc
rcrl
fwait
pop
mov
fwait
inc
adc
mov
test
push
iret
loopne
imul
data16
pusha
fimuls
cmc
es
mov
push
fwait
lds
dec
rorl
inc
orb
sti
das
insb
gs
arpl
xbegin
lcall
sarb
cmpsl
idiv
or
mov
aam
pusha
mov
adc
mov
mov
jno
add
lods
sbb
sahf
xchg
mov
fisubrs
fstpt
shrb
call
dec
fisttpl
out
js
orb
stos
sub
pop
dec
push
sbb
pop
sbb
ret
test
push
scas
fsts
das
loope
pop
mov
shl
mov
enter
push
shl
and
lahf
or
or
inc
test
adc
and
dec
mov
dec
popf
and
popf
sbb
jp
xchg
lcall
and
push
cmp
les
mov
and
xchg
pop
fmuls
mov
fstp
icebp
cltd
jnp
or
jo
sub
rorl
pop
rclb
lcall
pop
aas
into
xor
mov
jb
cld
out
mov
stos
scas
movsb
mov
adc
adc
jl
cmp
jl
push
les
adc
notl
int
and
jecxz
mov
scas
xor
mov
aad
inc
fsts
loop
cwtl
jge
mov
sbbl
insb
add
dec
rep
push
push
cwtl
lods
or
fisubrl
out
push
xorl
xor
mov
adc
cmp
cwtl
mov
cld
jmp
test
mov
jp
and
inc
adc
add
lods
test
add
dec
mov
dec
lahf
js
push
mov
sub
inc
pop
dec
fwait
cld
cltd
shl
pop
pushl
jp
addr16
inc
xchg
xchg
aaa
xor
sbb
push
mov
xchg
push
ds
and
ds
cltd
cmp
xor
lods
pusha
xlat
out
add
idiv
cmp
imul
mov
and
and
jp
lock
ret
push
mov
fistps
dec
dec
cltd
or
or
imul
mov
adc
inc
iret
in
cmp
lock
or
ret
imul
xorl
pushf
icebp
mov
lea
push
mov
dec
ret
sbb
xor
mov
cli
mov
popa
rolb
fiaddl
xor
mov
and
imul
inc
stos
jp
jp
sbb
ljmp
push
movsl
mov
lock
pushf
mov
pop
imul
mov
xor
push
test
and
mov
pusha
sub
and
push
inc
xor
push
xor
call
scas
cmp
xchg
ljmp
jb
loop
cmp
es
inc
lahf
js
mov
cwtl
ljmp
mov
push
cmp
dec
fwait
jg,pn
mov
imul
xchg
sbb
inc
jecxz
push
mov
ret
cmpsb
jp
out
ds
fs
lds
ja
sub
frstor
int
aas
push
mov
jbe
aas
mov
jae
dec
js
mov
xchg
mov
ret
es
jmp
adc
sbb
push
call
pop
mov
jne
inc
inc
sbb
fnstenv
call
cmp
dec
push
push
xchg
sti
fidivrs
push
xor
in
insl
pop
pushf
and
xor
jge
push
test
testl
xchg
jl
shll
inc
pop
pop
popa
stos
sub
sub
fisttpl
mov
rol
imul
cmp
mov
xchg
icebp
sar
mov
movsb
xchg
in
mov
xor
jmp
hlt
dec
and
mov
lret
lock
lods
sub
and
sahf
gs
and
aas
sub
test
jb
fdivr
insb
and
mov
mov
ficoms
mov
dec
sti
add
jae
test
dec
jae
or
stc
and
gs
push
xchg
lods
push
lret
add
stos
mov
mov
sbb
and
mov
loope
cmpsl
into
stos
sbb
cmp
xorb
dec
loopne
clc
inc
xchg
mov
and
rorb
inc
mov
inc
lret
dec
push
pop
das
mov
in
xlat
mov
icebp
cmp
lahf
pop
lcall
mov
and
jae
xchg
xchg
jmp
mov
or
mov
adcl
or
push
jg
fwait
and
xor
push
shrl
dec
push
fmull
cmc
loopne
sbb
xchg
loopne
mov
sub
popf
lods
neg
mov
xchg
pop
fstps
inc
xlat
mov
shl
mov
int
in
mov
xor
cmp
push
fisubrs
add
int3
ret
inc
push
inc
shl
add
inc
dec
push
dec
xor
addr16
mov
mov
cmp
mov
push
mov
or
ret
aaa
cmpb
sub
imul
jne
xlat
xchg
add
pusha
into
ja
push
call
idivl
icebp
adc
add
pop
movsl
sub
add
jo
or
mov
inc
push
xlat
cmpsb
add
push
lret
cmp
outsb
jecxz
ja
mov
cmp
mov
das
aam
aam
flds
cmp
cmpsl
loopne
mov
inc
and
or
xor
jno
jg
push
or
cwtl
cwtl
mov
stos
out
lds
push
add
movb
outsl
and
jb
cmpsb
inc
xor
outsl
inc
ja
fnstenv
sahf
xchg
scas
jle
fnstsw
jb
sbb
ret
mov
adc
ret
test
loope
pop
add
cmp
outsb
bound
or
pop
rcll
dec
ret
and
lea
scas
cld
and
int
ljmp
pop
daa
cmp
dec
mov
push
sub
inc
sahf
mov
in
mov
adc
or
divl
es
jno
daa
movsl
negb
push
xchg
sti
cmpsl
test
ja
repnz
dec
push
or
push
or
inc
xchg
inc
out
popf
xor
push
adc
call
jge
sbb
push
jbe
mov
cld
dec
mov
push
xchg
mov
sbb
cwtl
iret
dec
fs
sbb
aaa
jg
fistl
out
ja
ja
dec
adc
lods
sahf
mov
cmp
sbb
inc
clc
imul
dec
mov
cmpsb
adc
sbb
push
cmpsl
jmp
mov
jo
sub
inc
mov
jg
mov
dec
movsb
adc
lods
int3
xchg
inc
sub
sub
outsb
jmp
daa
shl
repz
jnp
xor
pushf
pusha
insb
cmp
sbb
nop
movsb
push
push
mov
and
jnp
int
ret
inc
jmp
sub
sub
pop
pushf
xchg
pop
outsb
int3
add
lret
adc
mov
aas
and
fs
mov
ds
pop
mov
mov
fstl
in
and
fs
or
push
xchg
movsb
jl
scas
inc
clc
xchg
dec
jg
adc
lahf
fwait
sarb
mov
outsb
pop
mov
jmp
add
imul
mov
jnp
call
pop
and
cmpsl
je
int
xchg
fwait
add
je
cli
and
cmp
mov
and
testb
jmp
jecxz
lret
repz
testl
xor
jecxz
dec
loopne
xor
repnz
jmp
ret
push
mov
test
cld
dec
mov
inc
pop
xchg
sbb
ljmp
mov
cmp
iret
cmp
xor
add
mov
imul
adc
and
push
jecxz
pushf
xor
imul
pop
mov
push
inc
loope
or
cli
and
push
out
cmp
add
aad
gs
push
xchg
jge
mov
mov
daa
inc
pop
mov
mov
inc
int
dec
popa
mov
mov
cmp
andl
dec
sarb
jp
mov
lods
aad
sub
imul
push
lea
fcmovnbe
adc
rorl
repz
pop
fmull
rclb
popa
dec
xchg
mov
pop
outsb
pop
sbb
fs
cmpsb
mov
and
jnp
pop
jne
mov
rcrl
aad
jae
add
jmp
movsl
call
fldt
jl
mov
push
test
outsb
je,pn
or
test
jae
adc
sbb
in
jle
or
and
dec
cmpsl
inc
jl
out
scas
jns
xchg
inc
push
inc
mov
pushf
xor
icebp
cmpsb
icebp
xchg
jp
xchg
mov
ss
cmp
ficomps
lcall
rcrl
jge
dec
jns
aam
sub
popf
imul
decb
data16
imul
lds
std
data16
sub
test
push
inc
sub
cmpsl
mov
mov
ror
lods
das
aam
leave
mov
addr16
arpl
aaa
mov
data16
xchg
pop
imul
cmp
sbb
jmp
ja
daa
fsubrl
aas
mov
into
pop
pop
xchg
or
pusha
mov
pop
pushf
and
jl
add
cmpsb
lret
lcall
js
sub
es
cmpsb
test
int3
mov
incb
sti
mov
sub
lods
data16
push
inc
pop
mov
pushf
mov
in
pop
fisubrl
or
sbb
sti
sbb
imul
adc
push
mov
xor
push
out
cltd
dec
mov
sub
push
jnp
pop
sub
pop
mov
scas
das
dec
pop
lcall
push
mov
mov
cmp
fs
dec
stc
imul
repnz
sub
insb
xor
leave
sub
cmp
add
ss
call
push
mov
movsl
shll
or
lock
jp
lods
inc
jae
add
int3
sub
xchg
pushf
lds
adc
shlb
in
insb
test
imul
loope
pop
gs
stos
aam
les
in
dec
sub
sbb
sbb
mov
in
into
pop
cmp
inc
pop
dec
xlat
jle
aad
aas
pop
dec
add
mov
pop
mov
sahf
mov
addb
in
mov
push
inc
daa
push
dec
sub
gs
sub
stos
sti
lea
and
out
out
add
jle
out
cmp
repnz
fwait
mov
stos
lods
jo
cltd
jnp
out
loope
loop
js
aaa
lret
in
hlt
rcrb
jo
negl
dec
lock
push
imul
mov
insb
clc
xchg
sbb
outsb
lret
mull
sbb
pushf
sub
inc
shrl
mov
shll
xlat
leave
xor
lods
jo
es
cwtl
scas
stc
out
sub
dec
lret
adc
rcrb
imul
push
mov
xchg
add
adc
mulb
add
xor
pushf
repnz
xor
stos
fwait
test
xchg
add
int
insb
lock
rcll
repnz
dec
aam
loop
loopne
in
fisubl
xchg
int3
push
cli
out
pop
das
add
insb
pop
aam
in
lods
mov
rcrb
out
mov
std
push
fnstsw
aaa
pop
pop
dec
lahf
fdivl
sahf
sub
or
xchg
xor
sbb
xor
mov
incb
mov
push
push
lret
arpl
rolb
sti
pusha
arpl
inc
test
repnz
aad
aad
stc
pop
or
add
mov
and
imul
push
out
xor
adc
in
push
mov
jmp
stos
rcr
das
add
pop
xchg
cmp
push
and
in
call
ret
js
loop
test
push
shlb
fs
gs
mov
jecxz
mov
dec
clc
mov
fdivs
mov
jne
scas
aad
xchg
sbbl
std
mov
cmp
xchg
mov
roll
div
mov
movsl
push
pop
xorl
test
int
rorl
mov
mov
mov
sbb
jne
mov
lahf
jmp
orl
xchg
idivb
push
mov
jecxz
mov
sub
push
push
sahf
xor
mov
ficompl
mov
rcrl
mov
mov
js
outsl
mov
pop
call
call
ljmp
es
in
dec
xor
push
mov
daa
inc
cs
rol
cmp
scas
shll
add
imul
xchg
loopne
push
pop
pop
daa
push
fsubrl
jle
repz
adc
in
xchg
or
into
push
and
addr16
adc
inc
xor
call
push
push
mov
inc
notl
mov
lcall
inc
adc
in
cli
cmp
mov
jmp
outsl
shlb
push
dec
adc
flds
sub
sbb
push
sub
mov
fwait
aas
insb
pop
out
out
and
push
lods
jecxz
jns
loope
push
pop
pusha
push
pop
cli
mov
pop
movsl
or
mov
loope
mov
das
pop
and
subl
shll
adc
adc
jmp
jl
push
xor
aaa
fists
jne
dec
push
and
lahf
ja
data16
push
and
cmovns
cmp
push
push
ljmp
test
push
mov
test
cwtl
cmp
pop
popf
sahf
mov
std
pop
jp
inc
xor
lods
divb
pushl
out
in
and
insb
aad
adc
mov
test
cmp
sbb
xor
add
pop
mov
push
push
adc
lret
divl
cmp
mov
add
fstl
and
push
dec
mov
icebp
fcomps
je
insl
test
rorl
mov
shl
int3
pop
mov
pop
jg
mov
jno
push
std
repz
lcall
fmul
test
fldl
nop
fisttps
stos
les
test
rcll
test
cli
add
dec
std
mov
loope
scas
xorl
lcall
movsl
inc
xchg
lcall
sub
mov
pushl
pop
dec
fmuls
sub
add
mov
jge
jecxz
out
arpl
ja
cld
mov
jge
push
pop
xor
jl
push
xor
je
jo
jne
adc
cltd
mov
push
iret
roll
lock
xor
mov
adc
imul
or
cmpsl
cmp
mov
jmp
int3
daa
dec
ret
push
sub
out
cmp
icebp
mov
addr16
das
loopne
sub
das
add
or
mov
push
sub
lahf
jnp
cmpsl
imul
jge
or
lcall
inc
mov
mov
lock
jmp
cmc
sub
lret
ja
pop
cltd
mov
adc
in
mov
jns
mov
xchg
call
jl
aaa
ucomiss
xchg
mov
adc
lea
or
outsl
sbb
jnp
sub
inc
fbld
lret
sub
shl
xchg
orl
and
addr16
dec
cwtl
mov
mov
sub
sbb
add
mov
sub
push
sahf
cltd
inc
aad
jmp
dec
mov
adc
mov
or
mov
shll
imull
mov
dec
in
cmp
add
dec
nop
aaa
lcall
ss
mov
je
push
hlt
das
shlb
mov
inc
push
sub
adc
xchg
aas
jge
inc
cmp
lcall
xchg
fistpl
fcomip
pop
pop
push
int
ss
adc
push
pop
sub
pop
ljmp
sbbl
ss
jmp
aad
stos
mov
test
and
cltd
xchg
jns
mov
addr16
mov
test
lock
jne
mov
dec
cs
pop
sbb
adc
into
jle
ret
xchg
and
xchg
push
mov
clc
cmp
ret
and
repnz
stos
int3
push
add
mov
or
inc
jp,pt
bound
cmp
pop
jbe
idiv
stos
add
test
arpl
mov
test
jp
xchg
inc
jbe
cmpsb
dec
jmp
mov
xor
pop
dec
rcl
out
cmp
js
jmp
dec
or
movsb
adc
outsl
repz
ficompl
int
aaa
dec
and
dec
xor
shl
cltd
xor
movhps
jnp
xor
out
in
sbb
ret
daa
inc
std
js
sbb
inc
inc
das
cmpsl
ret
mov
jmp
push
jmp
mov
subb
mov
roll
pusha
test
es
lods
ret
sbb
push
int3
cmp
adc
aaa
movsl
ret
adc
pushf
lods
pop
ret
and
stos
adc
mov
imul
nop
out
push
and
mov
xchg
rcrb
xor
sbb
loope
adc
inc
and
stos
jno
daa
inc
dec
sub
clc
pop
add
mov
inc
xor
jbe
mov
ret
lea
sbb
sub
flds
jne
or
outsw
pop
test
sahf
lock
push
lods
dec
and
mov
push
pop
push
xchg
shrb
sbb
das
inc
push
xor
and
out
jns
sbb
jb
push
adc
xchg
and
mov
and
dec
push
test
add
inc
call
xchg
in
es
xchg
and
dec
cs
mov
out
out
imul
push
dec
ljmp
loopne
out
xchg
dec
push
sbb
xrelease
dec
fsubrl
xchg
sub
mov
inc
es
ficomps
or
push
sysret
dec
sub
mov
sbb
push
sbb
push
mov
movsb
sub
inc
test
sbb
mov
leave
pop
push
jle
mov
lods
push
mov
movb
into
mov
mov
mov
insl
cmp
lea
imul
shll
loope
arpl
pop
pop
jns
mov
mov
add
and
sub
inc
insb
jg
and
cmp
inc
jge
sub
jmp
fimull
cmp
adcl
mov
sbb
jg
sbb
aaa
sbb
fisttpll
inc
jmp
xchg
hlt
add
cltd
inc
xor
loop
addr16
arpl
mov
test
add
mov
cmp
and
shr
test
adc
popa
leave
stc
and
push
pop
sub
je
jns
sub
add
cmpsl
jbe
adc
daa
xchg
push
jbe
mov
sbb
popa
jae
adc
mov
es
pusha
sar
lods
imul
daa
lret
add
cmp
mov
and
sbb
test
push
push
pop
sub
repnz
insl
cmpsl
hlt
xor
lret
jne
int
inc
in
dec
fwait
dec
add
inc
out
movsb
inc
repnz
lret
mov
add
mov
cmpl
cwtl
add
cmpsl
adc
std
pop
pop
sbb
adc
push
and
int3
push
sahf
ror
xor
ud0
or
sbb
pop
xor
movsb
shll
repnz
add
lods
fnstsw
sti
lahf
mov
in
mov
enter
icebp
and
cmp
or
test
pop
daa
sbb
jecxz
xchg
mov
push
sahf
pusha
fistl
loope
jnp
ss
in
and
out
nop
mov
movsb
mov
clc
cmc
fistps
xchg
and
inc
mov
adc
pop
repz
sbb
sbb
orb
addl
inc
push
fdivs
call
data16
int3
lock
jno
std
pop
xor
jl
xchg
out
inc
ljmp
in
mov
inc
movsb
push
or
mov
mov
fcoms
test
shlb
popf
or
and
fs
cmp
arpl
inc
test
adc
sahf
cld
dec
inc
mov
lahf
sub
cmpsl
dec
mov
cmp
adc
cmp
pop
loope
ljmp
pop
repz
incl
sub
add
xchg
test
test
mov
mov
jb
out
adc
xchg
es
add
mov
adc
xchg
push
jp
and
movsl
adc
in
mov
xchg
pop
add
outsl
pop
daa
mov
dec
add
pop
or
icebp
pushf
loop
add
std
gs
insl
push
pop
add
cwtl
test
xchg
xchg
inc
xor
jne
fsubrl
in
insb
sub
iret
clc
push
inc
mov
scas
jno
adc
or
jg
jmp
leave
mov
pusha
sbb
shrb
mov
imull
pop
cld
movb
js
test
lret
pop
shlb
lods
lret
outsb
adc
xor
pop
cmp
lods
xor
fs
cld
insl
cld
xchg
sbb
sbb
jmp
cwtl
mov
jb,pt
repz
aas
mov
cwtl
mov
add
or
cmp
sub
adc
xchg
subb
pop
or
mov
pop
mov
in
fnstcw
rcrb
or
push
push
sbb
xor
mov
out
arpl
rorl
sbb
inc
dec
cmp
dec
jecxz
pushf
push
outsl
roll
insb
pop
test
insl
jae
sbb
fstl
repnz
cmp
lods
cmpsl
jg
loop
dec
fldt
mov
aad
xchg
testb
test
pushf
mov
mov
pop
mull
jp
push
lock
mov
aam
or
pop
nop
mov
shr
mov
push
or
cmp
inc
cmpsl
jnp
lods
cmp
dec
dec
sbb
jge
xchg
mov
addr16
mov
jb
rcrl
lret
fists
inc
leave
mov
sahf
iret
popa
daa
cmpsb
xlat
mov
es
jnp
and
dec
mov
fadd
pop
sub
xor
test
push
sbb
mov
ret
aas
jg
cs
fcmovnbe
mov
xor
mov
dec
sub
testb
dec
or
insl
push
push
dec
sbb
iret
pop
aaa
repnz
jnp
lret
jns
gs
xor
push
jp
sbb
sub
stc
fsubrl
movsl
lods
stc
push
test
clc
xor
in
in
xor
aad
push
push
insb
popf
jbe
and
mov
rcrl
iret
or
fidivrl
xchg
mov
clc
sub
sub
jnp
into
mov
jae
stc
sbb
imul
fwait
sbb
inc
sub
add
jle
mov
popa
cmp
adc
leave
stc
out
addr16
push
xchg
in
enter
pop
dec
push
icebp
mov
push
xchg
sub
jge
jno
pop
push
ret
or
sub
mov
loopne
fldz
xchg
std
cmp
add
adc
dec
insb
sbb
inc
add
or
rcr
std
adc
mov
push
mov
pop
mov
ljmp
enter
negl
fldenv
rcll
subb
mov
hlt
push
or
fdivrp
cmpsb
lahf
xchg
lods
sub
xorl
fucom
sbbw
cmp
mov
mov
insl
cwtl
mov
xor
gs
movsl
xchg
ror
push
cld
sbb
and
cmpsb
orb
adc
sbb
scas
mov
add
jno
int
fs
out
push
inc
push
lods
in
add
push
repz
gs
fstl
data16
ds
dec
ffree
xor
iret
dec
xchg
imul
and
in
ds
xchg
mov
pushf
xlat
lahf
sti
call
sbb
jge
outsb
or
sub
leave
or
pop
pop
fwait
aas
bound
xchg
push
xchg
sbb
orb
and
inc
cmp
xchg
lcall
mov
sub
sub
inc
jae
and
lds
ljmp
inc
aaa
jno
fadds
lahf
mov
cmp
or
push
fbld
into
adc
cltd
cmp
hlt
cmc
sub
jns
mov
cmp
mov
mov
push
mov
bound
xchg
pop
cmpl
mov
push
lods
in
mov
jle
cmp
inc
sbb
sti
mov
pushf
ficoms
cli
xlat
dec
mov
shlb
cli
int
jnp
jp
mov
arpl
pop
push
mov
pop
sti
or
cmc
fwait
push
xor
adcb
lahf
cwtl
pop
insb
stc
cs
pop
xor
mov
or
ret
or
das
repnz
std
sbbb
pop
push
cs
divb
das
xchg
scas
dec
pop
mov
push
ss
lods
aam
cld
rcrb
push
cmpsb
pop
dec
popf
or
popf
cmp
rorb
adc
in
inc
pop
sub
dec
mov
inc
push
xor
push
and
dec
loop
call
mov
push
out
shrl
repz
xchg
push
loop
inc
movsl
cmp
inc
test
jle
xchg
lds
testl
adc
insb
push
js
lock
repz
cwtl
aam
cmp
xchg
sarb
adc
cli
mov
mov
gs
movsb
dec
adc
pop
jp
jmp
inc
mov
mov
in
lods
inc
mov
scas
outsl
cmpsb
daa
fiaddl
sbb
imul
test
adc
cli
jmp
ret
imul
jp
xchg
sbb
cwtl
push
xor
mov
xchg
icebp
movzbl
scas
adc
jno
loop
call
fs
jl
pusha
push
insb
arpl
orl
pop
int3
in
loopne
test
sbb
cmp
push
lock
adc
sahf
sbb
mov
lds
insb
push
jp
mov
adc
or
sti
das
in
nop
add
lahf
bound
sahf
adc
mov
loop
ja
dec
sbb
addl
mov
ljmp
adc
push
movsb
addr16
insl
shrl
push
cwtl
pop
cmpsl
das
pushl
adc
push
rorb
pop
inc
mov
and
in
xchg
push
out
push
fisubrl
ljmp
nop
jbe
lods
lret
into
xchg
rcrl
sub
xchg
sbb
fists
mov
inc
xchg
cmp
cmp
nop
jg
fs
mov
lock
dec
out
pusha
mov
popa
mov
cmp
aas
jae
mull
adc
mov
jbe
lret
aad
movsb
in
fwait
lods
push
mov
aas
mov
sbb
jle
sub
or
shlb
in
lret
andb
shrb
cltd
mov
lods
in
stos
push
vpsubw
jge
or
sbb
imul
testb
adc
fnstcw
int
ret
sub
pop
es
jecxz
std
sbb
movsl
jp
gs
adc
adc
dec
add
int
push
mov
insl
fimull
in
cwtl
push
repz
idivl
mov
sub
bound
jbe
adc
mov
addl
jge
xchg
add
pop
jecxz
in
fldl
rolb
cmp
sbb
mov
icebp
test
xchg
mov
jns
imul
mov
insl
pop
dec
mov
into
mov
cmp
xchg
je
cmpsb
jecxz
pop
cwtl
adc
inc
cmp
jbe
jg
movsl
loop
scas
mov
decl
mov
adc
adc
dec
adc
fs
xchg
jae
sub
pop
nop
push
test
push
push
ljmp
jg
or
dec
js
inc
inc
push
push
loop
sbb
xor
popa
add
mov
daa
or
fnstcw
aaa
int3
jo
sbb
fsubrl
pop
mov
cmp
jo
shlb
shl
ds
imul
frstor
cmp
pop
stc
rcrl
fisubrs
xor
cltd
push
cmpsl
xor
and
adc
lock
mov
xor
loop
jns
push
rolw
loope
mov
sub
sarb
andl
ja
test
push
in
mov
dec
in
out
nop
jle
imul
mov
cmp
arpl
test
jg
ret
xor
adcl
jne
xor
sub
cmp
pushf
out
decl
shll
mov
out
lcall
jl
repnz
gs
sbb
addr16
cwtl
xchg
ja
push
sbbl
call
mov
sub
xchg
mov
fcoms
stos
pop
sub
testl
pop
popf
mov
notl
jns
loopw
dec
pushf
sbb
lahf
jne
dec
push
mov
jo
cmpsb
sbb
push
lret
mov
out
mov
xchg
jecxz
dec
push
jno
push
xchg
pusha
js
xchg
adc
test
sbb
stos
jmp
mov
mov
ret
andb
shll
pop
adc
cmp
repz
or
stc
ss
in
filds
mov
fdivrs
xchg
call
shr
cmp
dec
pushf
sbb
mov
call
lret
cmp
icebp
mov
hlt
cwtl
je
pop
imul
push
pushl
icebp
xor
dec
not
jns
xor
jb
jno
jb
fisttps
into
hlt
call
inc
cwtl
add
loope
inc
and
das
sub
mov
push
sbb
inc
push
das
push
pop
mov
gs
inc
ss
repnz
mov
and
lcall
sub
mov
movsb
insb
hlt
jle
pop
inc
in
popa
mov
mov
add
xor
sti
or
pop
fisttpl
shl
pop
rol
fsubrs
movb
dec
mov
std
xchg
jns
sub
and
cmpsb
cwtl
fbstp
mov
or
push
xchg
fistps
sti
xchg
popf
cmp
adc
pop
add
or
cltd
sub
pop
out
leave
movsb
dec
inc
push
rcrb
jbe
jg
out
add
jmp
sub
push
mov
sbb
push
xor
and
fwait
pop
out
push
aaa
mov
jecxz
xchg
and
ds
inc
f2xm1
popa
push
stos
orl
mov
aaa
cmp
testb
imul
xchg
fisttpl
ficompl
xor
ss
aas
inc
rcr
adc
xchg
pop
sub
cmp
fbld
pop
jns
mov
fmuls
xchg
sbb
xchg
cltd
cmp
inc
ds
icebp
imul
negb
sbb
imul
daa
add
repnz
push
xorl
inc
mov
jne
outsl
out
mov
fisubrs
mov
or
repz
mov
je
hlt
sub
jecxz
inc
adc
cmc
pop
jns
push
mov
bound
aaa
imul
cmc
aam
xchg
xchg
xor
and
les
js
xchg
xchg
shlb
leave
inc
mov
insl
mov
lods
mov
clc
xchg
adc
pop
inc
ja
or
inc
out
out
je
lock
inc
mov
shl
pop
lods
lret
cmp
repz
cmpsb
loopne
lock
cmp
inc
mov
mov
mov
aas
inc
pop
scas
repz
jbe
mov
into
repnz
loope
sub
daa
jle
lret
mov
aas
loopne
dec
pop
xor
cltd
mov
aam
mov
stc
cli
pop
inc
movsb
mov
stos
loopne
pop
sub
mov
in
jecxz
jl
cmp
xor
dec
test
push
call
adc
stos
es
mov
aaa
std
cmpsl
gs
cmp
mov
rorb
xor
adc
test
fidivl
sbb
inc
inc
fdivrl
push
inc
cmp
js
cwtl
and
sub
mov
imul
xor
fnsave
pop
sbb
xor
in
test
lods
fdivr
repz
shl
icebp
mov
imul
xchg
iret
sbb
ds
mov
xchg
in
mov
fiadds
pop
sbb
lock
sahf
fisubs
xchg
xor
enter
insb
leave
push
jne
addr16
mov
mov
mov
jl
rclb
mov
sar
in
cmp
insb
ljmp
and
or
sbbb
aad
pop
gs
stos
insb
je
xor
mov
ja
dec
out
cvtps2pd
push
push
loope
jmp
jmp
add
cmp
pop
lret
push
push
insl
cmpb
repnz
push
scas
mov
mov
shrl
movsl
xchg
shlb
sbbl
inc
dec
mov
push
mov
out
movsb
jmp
sub
adc
pop
int3
not
out
fstps
scas
adc
sbb
jnp
aam
jo
ds
sbb
push
inc
mov
mov
mov
sub
xchg
mov
mov
dec
or
sbb
sub
outsb
cmpsb
dec
sbb
leave
pusha
mov
dec
insb
idivb
xchg
xchg
xor
push
push
rcll
into
jp
xchg
add
inc
xchg
jmp
test
xchg
sub
outsl
ja
push
sbb
pop
sub
repz
adc
push
sar
aas
add
leave
cmp
mov
test
push
bnd
out
dec
into
adc
add
lahf
lods
inc
arpl
sti
in
mov
xchg
xor
push
iret
ret
bound
pshufw
sub
xchg
lock
push
jecxz
shrl
insl
mov
pop
sahf
out
mov
test
push
mov
addr16
movsb
loope
sbb
out
in
test
shrb
mov
sub
mov
rorl
xchg
mov
mov
mov
test
or
add
push
test
jno
mov
add
lock
xlat
loope
mul
popf
sub
xchg
push
or
repz
icebp
xchg
pop
mov
mov
out
jae
mov
sbb
adc
xchg
fisubl
add
pushf
sub
jmp
in
inc
cmp
or
cmp
popa
sbb
gs
jne
leave
sub
idivl
sbb
pop
mov
mov
mov
dec
push
mov
pop
jp
mov
jns
iret
outsb
pusha
mov
insb
xchg
pop
rorl
sarl
outsl
jns
sub
mov
push
addr16
sub
test
ss
jbe
pushf
inc
stos
out
fildll
mov
stc
enter
sub
pop
xor
addr16
or
movsl
cmp
and
jae
insb
push
loope
test
subb
cmp
add
cmc
movsb
push
push
dec
add
xchg
and
and
xchg
fbstp
push
aad
mov
mov
stc
pop
dec
xor
scas
and
jne
cmp
sahf
gs
push
fstl
das
cli
sub
mov
cwtl
inc
imul
stos
test
xchg
ret
lds
add
pusha
mov
pop
add
leave
xchg
lods
lahf
jl
mov
xchg
cmp
cltd
insl
dec
sbb
xor
jno
lret
in
in
push
push
out
stos
cmpsl
sbb
scas
icebp
xchg
out
in
inc
stc
bound
pop
das
je
and
mov
xchg
daa
pop
test
xor
clc
dec
hlt
jne
jae
cmpl
mov
push
mov
pop
clc
insl
shrl
out
mov
pop
fwait
cmp
test
dec
nop
add
pop
mov
mov
nop
js
out
shlb
mov
stos
test
sub
aad
roll
stos
mov
in
imul
inc
mov
sbbl
cltd
push
into
mov
outsl
stc
rorb
cmp
adc
push
aaa
adc
push
test
push
xchg
nop
dec
add
mov
pop
push
lods
fnstcw
mov
iret
push
or
aas
test
lods
mov
add
adc
imulb
adc
xchg
test
cmpsb
xchg
or
xchg
add
mov
push
and
sbb
or
dec
repnz
mov
stc
adc
mov
das
rcl
adc
test
push
js
sbb
dec
movsl
inc
mov
and
dec
push
call
xor
inc
sbb
xorb
or
std
lretw
out
and
aas
dec
std
lcall
mov
lods
sbb
rolb
push
fidivrs
pop
out
add
cmp
mov
mov
call
adc
movsb
clc
adc
mov
cmp
mov
test
pop
cs
add
call
mov
test
xor
mov
sub
mull
es
xchg
jl
jnp
mov
xor
pusha
iret
sar
movsl
inc
add
outsb
loopne
dec
fnstsw
daa
enter
sbb
dec
scas
sub
fildl
sahf
subb
add
push
jl
dec
pop
pop
xchg
xchg
dec
std
mov
push
xchg
test
dec
inc
dec
and
xor
jecxz
push
or
lds
test
test
mov
jnp
push
xchg
sbb
xlat
imul
sbb
mov
sub
loopne
mov
out
inc
ss
fadd
and
lret
lcall
jmp
dec
js
cmc
dec
je
push
int
fnstsw
mov
xchg
rolb
sub
fistpll
and
lds
and
dec
mov
mov
enter
fildl
pop
fwait
push
fildl
sti
xchg
add
mov
mov
fistpll
mov
mov
cmp
insl
mov
inc
lods
jle,pn
xchg
ret
xor
mov
xor
flds
fisubrl
dec
cmp
stos
mov
adcb
loopne
call
cmp
pop
aas
mov
leave
lcall
insb
call
mov
hlt
cs
sahf
adc
push
repz
out
iret
mov
bound
jns
jl
outsb
in
push
test
xor
mov
xor
in
dec
xchg
ss
xlat
adc
fildl
mov
mov
imul
xchg
push
mov
nop
ja
divl
xchg
cmpb
movsb
cmp
lea
icebp
mov
pushf
or
hlt
fstpt
mov
cmp
xchg
jmp
lret
cmp
or
inc
or
imul
and
push
jle
int
sub
in
add
movsb
push
xchg
xor
jle
jge
jge
cli
pop
testb
int
xchg
lret
sub
mov
test
sti
mov
dec
sub
cmp
mov
and
sub
mov
arpl
xor
clc
pop
stos
or
push
outsl
jae
clc
push
inc
insl
sub
mov
pop
mov
xorb
cmp
push
movsb
push
stos
lret
insb
data16
bound
adc
mov
xchg
cmc
fisubrl
js
mov
cwtl
push
imul
cmp
push
fucom
mov
int
sarb
cmpb
pop
adc
cmpsl
in
lcall
jnp
mov
mov
stc
dec
sbb
adc
pop
mov
scas
bound
lods
jmp
jo
rcr
cltd
cmc
test
push
mov
xchg
test
xor
inc
push
and
dec
sbb
push
xlat
mov
xor
jl
fmuls
test
push
push
in
aam
mov
push
pop
mov
test
movsb
insl
aam
and
push
insl
lods
sbb
jo
imul
outsb
dec
inc
mov
adc
test
cmp
cwtl
cmpb
cwtl
iret
aad
dec
xor
or
mov
push
hlt
mov
daa
push
out
mov
xchg
jnp
sub
push
inc
jl
pop
rol
es
and
mov
sbb
lods
push
cmpl
inc
loop
xchg
scas
es
cld
jo
mov
pop
ret
mov
jae
sub
or
xchg
fldenv
push
test
or
cmp
dec
xchg
daa
movsl
fidivrs
sahf
out
and
shll
test
jno
mov
bound
frstor
js
int
dec
rcl
outsl
stos
scas
fsubl
mov
mov
cmc
cmp
dec
jno
aaa
jge
insb
and
ret
push
popf
pop
in
push
pop
xlat
sahf
inc
xor
xor
sub
dec
arpl
stos
outsb
mov
inc
cmpb
xchg
cmp
nop
push
int3
lods
daa
or
xchg
movsb
push
or
xchg
fs
in
inc
movsb
push
data16
test
pushfw
cmp
movsb
out
jle
stos
aaa
push
repz
rclb
mov
call
rclb
pushf
cltd
push
fmull
ja
pushf
aaa
xchg
pop
xorb
ret
imul
fcoms
jne
mov
inc
xchg
dec
xor
pushf
push
andb
add
mov
add
and
push
or
add
out
negb
jle
shll
add
xor
jne
or
sbb
gs
push
or
loopne
jecxz
sub
scas
inc
dec
jno
cmp
add
sti
sub
mov
icebp
ret
inc
sbb
cs
mov
jl
xor
lret
adc
jge
sbb
nop
enter
sbb
mov
and
shr
inc
in
loop
sarb
test
movb
pop
test
pop
jno
aad
fldcw
push
ret
push
push
bound
fwait
cltd
pop
mov
imul
lret
and
xchg
iret
test
lahf
pop
pop
sbb
sbb
hlt
adc
cli
test
mov
jg
dec
or
and
out
mov
les
sub
add
hlt
jmp
jl,pt
adc
cmpsb
adc
xchg
fisttps
xchg
cwtl
sti
sub
mov
in
cwtd
ljmp
lret
cwtl
dec
xor
out
jle
js
pop
nop
cmpsl
fsubs
fsubs
push
lods
pop
rcr
shlb
xchg
sarb
out
inc
xor
shr
out
push
jg
adc
xlat
inc
pop
out
mov
add
mov
movsb
and
aad
incb
js
xchg
pop
inc
aas
xor
sbb
fs
xchg
inc
pop
insl
stos
or
fxch
pop
xchg
cmpsl
cmp
cmc
add
rolb
sbb
xchg
out
xchg
xor
adc
dec
or
sub
shl
pop
jno
imull
dec
insb
jnp
pop
nop
nop
jg
pop
fdivr
cmc
outsl
in
inc
or
jmp
outsb
mov
lcall
adc
sub
mov
dec
jl
shl
sbb
push
mov
fwait
roll
int3
imul
cmp
or
roll
xor
ret
cld
jg
xor
push
mov
rcrl
mov
ljmp
mov
or
push
dec
inc
mov
sub
imul
or
aam
push
gs
jae
push
shr
mov
pop
setnp
mov
sbb
mov
cmc
cmp
dec
and
lea
add
mov
js
aam
lods
jge
sub
xor
cmpl
cmc
add
mov
sti
inc
arpl
scas
mov
add
adc
xor
jge
fs
mov
jae
sub
sbb
mov
pushf
push
jge
and
imul
xchg
ss
cmp
inc
mov
push
mov
fstps
xchg
adc
xorb
jo
or
mov
test
in
push
jno
sub
jmp
push
dec
mov
es
push
pop
sbb
mov
mov
ljmp
jecxz
out
stos
cwtl
fmulp
rcl
xor
mov
and
mov
addr16
pop
std
or
nop
cli
das
int
incb
lock
dec
pop
rcll
pop
sarb
pop
mov
arpl
mov
add
ret
inc
adc
enter
add
adc
or
jns
adc
mov
xchg
mov
out
add
xchg
add
and
bound
inc
int3
es
dec
push
nop
add
stos
pop
andl
daa
fstps
push
mov
lods
hlt
xchg
xor
and
mov
xchg
jb
sbb
clc
in
sbb
repz
mov
in
jp
loope
lock
aam
push
jb
iret
xchg
outsb
push
mov
test
out
xor
mov
mov
insb
and
cmpsl
ja
mov
inc
sti
mov
jns
and
fisttps
ds
pop
imul
lea
push
sub
out
hlt
mov
and
lds
stos
lcall
and
std
and
addr16
add
xor
mov
mov
ja
lods
add
or
andb
adc
in
xor
in
aaa
leave
sub
fcompl
pop
in
testl
nop
inc
divl
loope
mov
dec
ljmp
dec
cmp
das
push
lahf
jo
shlb
sub
retw
imul
loop
push
add
ss
insb
dec
mov
out
add
mov
xor
aad
adc
loopne
push
sbb
mov
fisubrs
fisubs
es
or
inc
xlat
aad
xlat
jmp
inc
notb
js
iret
pop
test
loope
mov
fs
pushf
add
daa
add
sbb
push
ljmp
fldl
fisttpl
adc
sbb
stc
xchg
nop
mov
call
out
loopne
add
lods
sbb
inc
arpl
or
push
inc
mov
xlat
data16
js
xor
sbb
popa
push
xchg
shl
sbb
xchg
xor
sub
gs
mov
mov
jl
ljmp
mov
shlb
cmpsl
mov
stos
inc
inc
xor
loopne
mov
ds
dec
mov
or
dec
sti
pop
mov
jg
mov
inc
fwait
mov
mov
aad
mov
ret
imul
lcall
push
repz
push
adc
pop
mov
mov
out
xor
cvtps2pd
loope
out
shrl
sarl
xchg
pop
adc
sti
loopne
filds
jbe
xor
xchg
lock
loope
push
push
mov
push
cld
mov
andl
out
mov
pop
dec
popl
into
cwtl
pop
test
test
xor
jp
jns
push
xchg
stos
mov
sub
or
arpl
adc
gs
jmp
xor
enter
cltd
and
in
xchg
pusha
decl
test
roll
jp
fs
in
addr16
adc
and
fnstsw
jmp
inc
cmp
lods
lcall
aad
inc
sarl
insb
rolb
int
out
xchg
call
hlt
out
rclb
cld
cmc
mov
fstpl
sar
in
cmpsb
fbstp
fcompl
iret
pop
pop
jle
cmp
push
testb
lcall
bound
jecxz
mov
push
xor
ljmp
call
mov
xchg
mov
rcll
jge
pop
mov
push
ja
and
push
cli
sbb
sub
and
das
jecxz
add
mov
std
test
or
jg
sbb
das
sub
add
inc
jl
pop
into
inc
outsl
pushf
test
pusha
cmp
mov
js
adc
loopne
xchg
bound
and
daa
test
xor
sarb
inc
push
push
and
data16
jnp
shlb
cmc
negl
jl
push
fsubp
adc
sti
or
mov
scas
add
daa
jne
rcll
adc
add
adc
xchg
and
call
adc
sarl
mov
out
sub
push
add
and
push
adc
jns
or
cli
popa
cmp
enter
add
push
pop
add
flds
or
sub
es
sahf
sbbb
xchg
sub
fiaddl
in
mov
and
dec
sbb
call
cmp
jns
rorl
shl
mov
add
xchg
sub
mov
cmp
sub
lods
mov
mov
pop
sbb
xor
outsl
dec
sbb
adc
mov
sub
repnz
xchg
inc
fwait
pop
xchg
pop
xchg
stos
push
icebp
subb
pop
out
out
ljmp
dec
and
mov
out
sub
and
imul
cmp
out
and
orb
adc
fisubs
shll
sbb
data16
xor
int3
and
push
pop
arpl
xor
mov
pusha
addr16
sub
cmp
push
pop
cmp
xchg
in
inc
cmp
cmp
dec
bound
das
icebp
out
and
pushf
sbb
adc
mov
dec
mov
fisubl
outsl
or
push
outsb
movsb
shll
sub
iret
dec
xor
lret
inc
adc
mov
xchg
cltd
push
in
test
ret
test
movsl
rolb
mov
add
dec
or
cli
in
jno
mov
mov
jno
sbb
aaa
scas
pop
or
sbb
add
dec
inc
out
and
and
cmp
add
cmp
sbb
push
xchg
fdivl
roll
fiadds
xchg
stos
pop
pop
jecxz
add
adc
pop
in
mov
or
jne
mov
mov
jmp
enter
sub
das
repnz
cmp
cld
add
test
push
lds
jbe
stos
es
test
add
jg
jmp
inc
cmpsb
mov
test
mov
pop
in
pop
xchg
mov
lods
je
jge
mov
cld
add
xchg
sub
ja
movsl
sbb
leave
adc
add
fldcw
enter
lret
test
pop
sti
push
scas
aaa
ljmp
pushf
pop
sti
fistps
ret
add
inc
mull
pop
mov
xchg
lea
out
cltd
and
cli
sbb
int
mov
inc
out
push
pop
es
push
cwtl
fnstenv
cli
jle
push
or
loope
sub
or
pop
and
test
gs
movsb
pop
xchg
xchg
std
mov
sbb
sahf
arpl
add
mov
jae
pop
mov
mov
xor
pushf
dec
xor
mov
fidivs
test
cmpsb
cmc
jnp
pushf
mov
mov
bound
sbb
inc
leave
or
adc
mov
lahf
lret
sbb
jg
lahf
mov
add
aad
cli
cmpsb
arpl
lret
xchg
dec
stos
aad
jmp
fsubrl
jnp
pop
aas
arpl
xchg
push
aad
cltd
or
daa
jecxz
sub
movsl
xor
cmp
mov
push
xlat
or
mov
sub
mov
pop
pop
and
outsb
jg
xchg
es
jp
mov
dec
dec
mov
jo
mov
adc
outsb
add
jle
lods
in
repz
xchg
icebp
ja
mov
dec
mov
mov
xchg
sbb
cld
aad
lds
je
sbb
stos
mov
and
mov
mov
sub
mov
leave
add
jae
rorl
enter
lea
mov
in
mov
push
push
fprem
aam
adc
sbb
cmp
mov
outsb
sub
out
data16
in
cmp
sbb
es
push
jo
addr16
mov
inc
xchg
push
mov
push
loopne
mov
sarl
dec
arpl
push
popf
jae
inc
lcall
add
fwait
adc
cmp
repnz
dec
cmpsl
mov
adc
ds
ss
xchg
cs
and
cmpsb
movsb
inc
push
pop
dec
jo
mov
inc
int3
shlb
mov
in
rolb
pop
cli
push
push
in
cmp
adc
sbb
push
jp
xchg
cmp
scas
testb
lods
into
xlat
leave
sbb
fstpl
pop
test
sub
cli
xor
mov
jae
ss
add
cmp
pop
scas
jl
sahf
into
stc
inc
pop
mov
push
dec
push
dec
adc
xchg
add
inc
or
lock
sarl
loopne
or
pop
fnsave
je
and
sub
xchg
cli
mov
dec
nop
adc
in
xchg
mov
ja
sahf
mov
adc
nop
mov
mov
mov
inc
mov
push
insb
stos
cmp
popf
pop
jbe
call
arpl
push
in
lret
mov
in
mov
lods
repnz
rolb
sub
mov
pop
cmpsb
in
xchg
push
imul
clc
sti
pop
push
dec
and
or
int3
repz
test
or
testl
fwait
cwtl
and
mov
shl
mov
or
ret
sbb
sbb
jae
or
loop
cmp
mov
jecxz
mov
sbb
lret
jbe
lret
lret
push
jle
jmp
ss
xchg
fcoms
movsw
shrb
stos
decb
loop
or
aam
add
jp
mov
xor
clc
cmp
roll
lret
inc
sahf
cmc
fwait
push
jmp
or
dec
adc
stos
push
rcr
lahf
mov
je
sub
mov
add
jge
xchg
adc
or
sub
jo
inc
frstor
psubsb
fcomps
je
shrl
and
xchg
mov
push
push
stos
push
gs
loope
outsl
inc
bound
popa
sti
or
push
cmpsl
mov
add
in
arpl
fsub
leave
pop
vcvtsi2ssl
pop
leave
popf
fcompl
rcll
sbb
insl
in
push
inc
leave
jle
pop
aam
pop
pop
xchg
out
loopne
gs
clc
sbb
movsb
inc
sahf
stos
mov
pop
movsb
outsl
inc
out
and
add
sbb
pop
mov
xlat
add
bound
bound
jmp
out
cmp
xchg
mov
jne
inc
push
cmpsb
popf
scas
fldt
ljmp
push
push
jmp
pusha
mov
cwtl
jno
cli
xchg
ss
out
xor
mov
sub
iret
loop
in
mov
pop
arpl
inc
lret
mov
jmp
push
sbb
mov
sub
jne
ss
jmp
clc
mov
inc
cs
jmp
jo
add
out
dec
jo
adc
mov
mull
inc
cli
push
stc
aaa
loop
cmp
sub
xor
mov
mov
inc
repnz
xchg
insb
dec
cld
enter
fdivl
mov
in
int3
shrl
std
jb
out
xor
cmpsl
push
lock
sbb
ror
repz
ljmp
inc
jae
pushf
jge
lock
push
popa
es
mov
lods
cli
je
lods
add
inc
ds
inc
fwait
pop
out
arpl
lret
adc
mov
mov
push
lret
xchg
dec
mov
cmc
por
dec
stos
loopne
outsl
jmp
mov
icebp
push
out
jge
pop
ljmp
icebp
sti
cmp
or
and
pop
negb
rolb
add
ljmp
shlb
cmp
sbb
out
xchg
jb
add
add
inc
push
test
pop
dec
rolb
scas
inc
repnz
xchg
aas
pop
cmp
jp
subl
mov
aam
jo
stc
repz
push
divb
pop
mov
ret
pop
sbb
mov
push
pop
outsb
in
dec
xchg
lods
je
test
xchg
jbe
clc
ss
pusha
movsl
pop
mov
call
scas
sub
pop
adc
fcoms
mov
xor
adc
out
sub
cmp
cmc
insl
outsl
pop
cmpsl
and
xchg
setne
leave
add
hlt
sbb
aam
rcl
sub
lods
out
xchg
je
das
jbe
ja
loop
mov
fstpl
repnz
cwtl
repnz
roll
inc
lods
cmpsb
mov
xchg
out
pop
repnz
shr
mov
sarl
cwtl
sub
movsb
inc
mov
out
iret
jno
sub
xlat
cmpsl
adc
mov
sub
add
jmp
adc
adc
movsl
mov
or
lcall
xor
fstl
jnp
cmp
cmp
jnp
test
fists
xlat
push
push
mov
mov
call
xor
xchg
aaa
test
mov
sbb
fwait
push
call
jb
cmpsl
jmp
mov
pop
cs
int
jge
cmp
push
clc
test
sahf
out
ds
pusha
jae
cltd
mov
addr16
sub
jecxz
aad
aas
mov
adc
popf
cmp
scas
xchg
fisubl
loop
orb
push
notb
shl
lods
loop
mov
mov
push
arpl
adc
add
rcrl
push
loope
rclb
push
sahf
shl
cmp
xchg
gs
test
aad
ljmp
jge
out
push
add
mov
add
inc
or
lret
pushf
fcoml
and
mov
sbb
mov
mov
mov
pop
push
arpl
stc
mov
adc
push
repnz
sbb
xchg
sub
inc
lret
inc
push
lahf
fnsave
push
in
jnp
lret
lahf
aad
push
sbb
out
movsb
cli
sti
in
and
rclb
or
pop
jmp
xor
or
sbb
adc
sub
movsl
pop
and
or
xor
xor
jbe
adc
js
scas
dec
jne
addb
xor
leave
enter
in
loope
shrl
lods
scas
jle
dec
sbb
xlat
push
xchg
jg
out
inc
jne
cmp
or
jae
sahf
test
push
mov
int3
cmpsl
lock
and
in
lret
or
mov
outsb
sarl
std
push
xchg
push
icebp
dec
jmp
sbb
xchg
mov
sbb
dec
pop
aas
push
cmp
rcl
xor
and
push
aas
push
lret
dec
jno
leave
cmp
adc
orl
cwtl
mov
push
aad
dec
cmp
and
bound
xor
sbb
and
lods
sub
fimull
rorl
fs
call
mov
test
fsubp
xchg
mov
popf
scas
adc
rol
fnstcw
cmpsl
pop
xor
lds
mov
ds
xor
ret
dec
fidivl
add
sub
popf
fs
mov
lods
iret
sbb
pop
dec
cmp
outsl
xor
rorb
pop
mov
adc
mov
inc
lret
sbb
push
mov
jge
push
inc
lret
out
mov
add
jbe
push
cmpsb
push
imull
xor
in
shr
inc
in
filds
pop
mov
call
pop
mov
fsts
cld
into
inc
mov
in
test
scas
mov
adc
sbb
mov
jbe
orl
mov
aam
push
pushf
fstps
cmpsl
out
inc
adcl
adc
adc
arpl
push
xor
cmp
movsl
mov
dec
cltd
or
gs
dec
mulb
adc
mov
mov
cmp
jp
pop
sbb
das
push
sub
xchg
xor
push
nop
add
cmc
push
or
adcl
adc
movsl
push
cmp
inc
or
inc
adc
cld
out
test
outsl
mov
repz
xor
push
fcomi
sbb
mov
push
and
das
mov
hlt
jno
jecxz
jmp
ss
mov
lock
test
rorl
mov
mov
mov
and
adc
nop
insb
dec
jae
fildll
add
or
xchg
popf
sbb
mov
and
shl
flds
subl
sub
inc
lds
in
rcrl
mov
pop
jmp
adc
flds
loopne
or
xchg
rorb
and
mov
mov
cwtl
adc
mov
mov
mov
in
repnz
jbe
dec
aaa
icebp
pop
lods
cmp
fdivrp
xchg
fs
mov
shlb
sbb
iret
mov
insl
adc
in
in
cli
xchg
push
and
repz
xchg
adc
mov
cmp
iret
xchg
mov
jne
sbb
mov
dec
pop
xor
xchg
xchg
xchg
jns
test
es
mov
test
push
cmc
push
je
xlat
in
dec
mov
xchg
outsl
inc
push
add
aad
inc
dec
adc
testl
xchg
insb
pop
xchg
add
mov
mov
jb
scas
fstl
in
std
fwait
movsl
inc
and
roll
sbb
push
fs
push
sbb
ret
aad
andl
cmp
lcall
sti
leave
cmpsl
mov
fcmovb
push
mov
sahf
es
pop
jmp
ja
lds
push
jp
pmaxsw
mov
addps
jg
sarl
int3
pop
jae
inc
or
clc
xor
adc
jl
lahf
addr16
inc
pop
cmp
scas
sbb
loope
sbb
loop
sahf
jne
jb
mov
sub
loope
push
pop
addr16
jae
mov
xor
lds
and
sbb
ds
jns
shll
sub
inc
mov
push
inc
in
lock
hlt
into
adc
jge
fmulp
dec
mov
xor
or
repnz
inc
sub
sbb
jle
arpl
jnp
jecxz
and
mov
push
push
jp
mov
push
rcll
xchg
cltd
icebp
repz
push
inc
sbb
pop
jo
ss
mov
lcall
mov
push
insb
push
mov
adc
pop
mov
push
sbb
pop
sti
imul
fmull
faddl
or
int3
cld
sub
pushf
testl
je
cmp
push
int
rcrl
add
cmc
xchg
dec
add
push
ret
push
shr
data16
mov
mov
repz
in
xchg
ret
mov
pop
sbbl
sarl
dec
pop
pop
jae
xor
xor
push
int3
add
js
rcl
or
jecxz
cmp
pop
mov
stos
pop
sbb
or
mov
pop
daa
aaa
and
arpl
movsb
xchg
mov
adcb
fwait
bound
pushf
xor
fwait
sbb
cli
fbstp
rcll
inc
sbb
call
mov
inc
movsb
lret
int
xor
pop
sub
pop
xlat
mov
mov
das
data16
xchg
les
cld
xchg
dec
sbb
inc
inc
xchg
lods
jmp
aaa
pop
stos
mov
dec
mov
outsl
lgs
jae
lock
adc
insb
dec
add
mov
in
mov
fwait
xchg
xor
fwait
scas
sbb
cmpsl
push
js
xchg
repnz
dec
xor
cmp
in
imul
leave
inc
jno
mov
mov
add
mov
adc
jge
or
jne
lds
sbb
clc
ljmp
push
pop
or
xor
add
jne
sti
call
sub
xchg
inc
adc
pop
sbb
sti
jns
sbb
nop
int
lods
jne
cltd
cs
outsb
mov
dec
sbb
inc
pop
push
jb
sub
sub
movsb
push
cmp
lods
mov
lock
insb
xchg
out
call
adc
mov
repnz
pop
pop
leave
incl
sbb
in
sub
cmpsl
mov
mov
xchg
pop
jl
ja
lods
inc
jge
in
cmp
jbe
out
jo
test
pop
jo
lock
pop
ret
out
outsl
pop
pop
bound
stc
sbb
cli
push
in
adc
std
sbb
dec
and
in
test
xorl
adc
push
rolb
sbb
add
jae
mov
pop
jae
icebp
mov
xchg
mull
cmp
loope
ret
rcrl
cmp
mov
adc
jmp
stos
xchg
jl
push
xchg
pop
cmc
insl
lods
cltd
inc
test
inc
push
dec
dec
xchg
jl
jecxz
loop
insb
sti
mov
out
shr
pop
jnp
or
inc
repz
pop
hlt
jne
pop
jo
clc
out
rorb
push
orl
leave
ja
mov
push
in
pop
sbb
mov
stos
add
xchg
cmc
lods
xchg
les
shl
movsl
es
bound
pop
movsb
xor
pop
mov
jbe
jo
mov
push
test
mov
enter
pop
imul
sbb
cmp
cmp
mov
gs
or
clc
clts
ret
aad
mov
jne
cli
scas
and
push
xchg
ficoms
mov
aaa
xchg
sbb
xchg
lods
push
inc
ret
pop
add
inc
pop
mov
push
int
jle
mov
inc
push
mov
movl
fidivl
into
cmp
mov
mov
movsl
ljmp
pop
xor
cli
jge
xchg
push
loopne
xchg
adc
push
xor
sbb
fsubrl
mov
xchg
lret
enter
pop
dec
sti
cmp
push
es
repz
rclb
jge
sbb
xchg
push
dec
or
dec
jg
dec
sbb
fsubp
fwait
std
mov
adc
pop
mov
addr16
les
pop
dec
out
ds
gs
popa
adc
imul
push
loope,pt
ljmp
and
ljmp
add
sbb
je
mov
push
cmpsb
mov
pusha
pushf
jnp
je
loopne
ret
add
insb
push
pop
cmpsb
inc
push
push
sub
jae
push
xor
jp
xchg
xor
cmc
not
dec
stc
inc
mov
xor
mov
mov
push
jns
lcall
pop
inc
test
sub
inc
lods
icebp
or
fcoml
mov
pop
imul
fninit
or
mov
inc
rcr
sub
or
addl
std
fcom
movsb
sahf
in
mov
ret
jno
xchg
in
xchg
mov
cmc
outsb
shl
jo
idivb
cld
adc
pop
pusha
xchg
cltd
mov
cmp
xchg
test
mov
cmp
sub
lret
add
js
inc
pop
cmp
aad
add
mov
test
into
jl
adc
ficomps
push
sub
adc
fisubrs
mov
scas
shlb
mov
aad
enter
out
push
jmp
mov
adc
je
dec
mov
mov
sub
loope
sbb
pop
adc
mov
xor
jae
cmp
stc
jo
inc
fwait
stc
and
pop
jne
mov
sub
gs
fdivrs
inc
out
lods
pop
jmp
sub
jl
pushf
jmp
inc
fldenv
shrl
int3
testl
mov
xorl
loop
and
test
lret
ljmp
hlt
xchg
into
push
movsl
mov
xor
out
xor
add
shlb
push
movsb
mov
sub
clc
das
pop
jb
mov
fsubrs
or
je
test
adc
cmp
mov
and
mov
into
pop
mov
inc
iret
adc
aam
icebp
insl
cs
xchg
inc
pop
cs
dec
mov
pop
enter
outsl
mov
push
jge
iret
jns
stc
fs
lods
push
xor
lock
jge
lock
mov
lods
and
mov
mov
out
int
call
fwait
mov
inc
int
inc
xor
movsl
cli
or
dec
or
xlat
xchg
insb
enter
cmpsl
sbb
push
push
test
pop
rclb
lahf
mov
pop
incl
inc
sar
popa
jge
push
push
inc
jnp
push
shlb
scas
mov
insl
jne
inc
mov
ja
std
leave
xchg
mov
imul
push
lahf
test
jbe
loope
jecxz
movsl
pusha
jmp
sbb
xor
test
and
mov
sub
jp
mov
dec
addr16
or
lcall
leave
movsl
imul
in
test
or
push
cmp
mov
mov
add
das
jo
fcoml
cmp
loop
push
jbe
inc
lods
jo
icebp
and
mov
aaa
loope
add
ja
cmp
rclb
mov
xchg
loop
sbb
cmp
xchg
pop
out
pop
arpl
jb
cmpsl
rorb
mov
hlt
jp
addb
or
mov
push
mov
and
cmp
or
dec
mov
xor
xchg
adc
fdivr
cmp
sbb
jno
or
fstl
enter
jbe
pushf
mov
push
mov
xchg
xor
roll
xchg
jns
in
js
fyl2x
scas
cli
add
dec
add
lock
pop
xor
inc
leave
sub
add
mov
xchg
mov
add
pop
sti
push
iret
adc
jne
cmpsb
push
popa
js
xchg
out
test
in
inc
mov
dec
xor
or
sbb
jecxz
mov
jbe
or
jle
aaa
aad
cwtl
xchg
fldt
jp
rorb
fs
mov
mov
stos
push
popf
lock
pop
call
shl
pop
sbb
loope
dec
jle
jg
movsb
pushf
bswap
fstpl
push
insb
repnz
lahf
movsl
adc
mov
jae
jl
dec
sbb
mov
cmp
lds
inc
xor
push
push
mov
xlat
sbb
roll
inc
rclb
push
aas
cltd
shll
lods
xor
push
popa
mov
fdiv
pop
dec
pop
xchg
xchg
and
int3
ljmp
or
cmp
jbe
sbb
sub
cld
stos
cld
sbb
jecxz
cmpsl
cmpsl
mov
mov
push
ret
aad
fisttpll
pop
adc
sub
imul
dec
and
test
js
mov
push
push
jnp
aad
mov
xchg
std
xchg
adc
mov
add
rcrl
ret
cmp
aad
or
add
loop
inc
xor
fbstp
out
dec
sub
sub
popa
cwtl
sbb
inc
xchg
add
or
outsb
fwait
jle,pt
mov
xchg
rcr
inc
sub
ficoms
jl
test
or
mov
sbbb
popf
dec
adc
sbb
or
pop
add
xor
ret
cmp
inc
mov
adc
call
mov
mov
pop
and
leavew
adc
fwait
adc
sub
js
sub
into
std
dec
imul
scas
push
fstpt
jno
add
xchg
pop
ficoml
sbb
and
movsb
gs
push
loopne
shlb
int
cld
jmp
push
insl
sbbb
sub
popa
push
dec
mov
jnp
test
sub
mov
add
mov
mov
push
dec
fdivrl
push
iret
push
sub
sbb
sbb
add
scas
loope
mov
popa
ljmp
and
mov
and
or
mov
mov
ficoml
arpl
popa
rcrb
shrb
repnz
mov
dec
jge
jle
es
adc
scas
pop
sub
xlat
into
dec
frstor
clc
mov
push
cwtl
outsl
shl
dec
sarl
pop
mov
icebp
adc
lcall
cli
jg
mov
mov
xor
ret
adc
mov
jecxz
dec
shl
push
fs
jae
mov
test
rorb
iret
cmp
test
shll
mov
xchg
lahf
rorl
outsl
fistpl
repz
inc
imul
push
aad
jl
scas
test
xchg
out
mov
iret
cmc
mov
fcomp
or
repz
fs
out
movsl
pop
pop
scas
ds
cmp
clc
test
ljmp
imul
mov
and
pop
sahf
bound
inc
jbe
sub
jae
push
sub
inc
into
xchg
sub
adc
mov
icebp
dec
fldcw
add
ljmp
fsubrl
push
pop
jle
mov
bound
adc
nop
mov
push
and
mov
mov
mov
dec
mov
xchg
sahf
sub
adc
fwait
in
data16
nop
mov
rorl
sub
mov
lds
pop
pusha
inc
and
xrelease
popa
gs
popa
dec
lahf
flds
mov
mov
jo
mov
insb
and
es
xchg
mov
mov
cs
mov
xchg
gs
or
xlat
mov
and
insb
inc
xchg
addr16
sahf
xor
cwtl
shrl
jae
jl
sub
cmp
cs
not
push
cld
xor
mov
push
imul
sub
scas
mov
push
jg
lock
xor
mov
cld
out
dec
fwait
sbb
push
mov
lcall
push
aam
dec
xchg
mov
in
ja
mov
push
hlt
xlat
adc
pop
xchg
sbb
dec
mov
pop
pop
ss
lods
inc
dec
mov
imul
mov
bound
repz
fucom
pop
jmp
sub
mov
adc
jb
xor
inc
pop
lahf
push
cmp
fadds
movsb
cli
mov
and
incl
ja
outsl
repz
in
inc
dec
iret
adc
adc
fidivl
call
pop
je
cwtl
stos
cmpsl
xchg
jne
aaa
dec
fdivs
shll
loop
adc
repnz
pop
sbb
mov
subb
rcr
scas
mov
stos
and
inc
aad
lock
outsl
add
jbe
mov
lea
sahf
insl
lcall
cltd
ficoml
xor
push
push
cltd
push
dec
jno
enter
dec
xor
ja
push
sub
lods
inc
loopne
or
pushl
mov
movsb
jg
stos
sbb
aas
mov
or
adc
adc
xor
and
add
mov
dec
mov
cmp
repz
push
fistl
adc
jg
mov
jge
sbb
cmc
sub
push
xor
mov
shrl
inc
add
adc
stc
inc
leave
clts
sbb
repnz
cmpsl
les
push
cmpsl
add
dec
mov
clc
push
and
mov
ds
in
fbld
in
adc
push
hlt
mov
subb
inc
cli
in
adc
mov
or
xchg
jl
or
or
ljmp
pop
sbb
test
cltd
mul
xchg
lcall
mov
sbb
jnp
or
add
sub
inc
mov
adc
push
cmc
lret
sbb
pusha
pop
sbb
xlat
sub
mov
mov
pop
repnz
jb
add
add
push
lock
add
out
and
js
pop
test
sub
popf
mov
mov
mov
jmp
int3
fmull
call
or
xchg
inc
sub
stos
outsl
add
mov
ljmp
cli
push
push
fs
push
fbld
call
adc
push
or
cli
and
and
push
push
jns
xorb
mov
mov
in
mov
or
imulb
push
mov
mov
inc
arpl
sbb
or
sahf
cmp
adc
lods
ds
fs
and
sbb
es
adc
pop
fiaddl
inc
es
mov
mov
popf
add
add
add
jp
out
dec
movsl
pop
cmp
dec
mov
movsl
repz
rcl
sbb
int3
data16
jbe
cld
leave
out
fistps
fstpt
shll
into
aam
orl
lcall
lock
movsl
into
out
lods
dec
movsl
stos
pop
mov
xchg
mov
cmp
jmp
ja
push
add
and
les
push
loope
in
out
lea
out
mov
or
movsl
pop
jnp
jge
ret
cmp
jns
ds
xchg
lret
pop
lcall
cld
sahf
cmpsb
cmp
sbb
add
inc
mov
sbb
cmpsb
push
inc
or
popf
xor
mov
and
lret
insl
xor
enter
mov
xchg
testb
jecxz
inc
jns
test
jo
xchg
inc
stos
mov
insb
sub
sahf
mov
dec
pop
iretw
in
and
lcall
sbb
sbb
or
adcl
shl
pop
pop
stos
xor
and
inc
loopne
rol
inc
movsl
scas
idivl
mov
out
adc
fnstsw
shrl
dec
xchg
cmpsl
xchg
xor
pushf
rorb
mov
cld
add
mov
leave
mov
jmp
pop
imul
ja
dec
pop
test
add
jp
mov
push
stos
ficompl
dec
stos
push
jle
sbbb
pop
pop
and
popa
cmp
test
aam
cmc
outsb
int
je
mov
xchg
lret
loop
mov
int3
push
movl
jge
pop
aam
mov
clc
arpl
xchg
push
jo
aam
add
sbb
mov
mov
dec
add
cmpsl
pop
ljmp
cmp
adcl
out
mov
iret
test
lahf
icebp
jle,pn
rcll
insb
sti
or
test
pop
jecxz
mov
cld
mov
repnz
aam
pop
pop
mov
into
sbb
or
sub
mov
loop
adc
mov
out
dec
frstor
cmp
ja
pop
popa
leave
testl
mov
adc
mov
xchg
jle
dec
jmp
std
pop
outsb
test
enter
mov
lods
xchg
leave
inc
cmp
pop
adc
test
push
lret
in
fmul
xchg
lds
jns
mov
xor
dec
subl
mov
lahf
adc
mov
jmp
mov
rcrl
xchg
jl
aas
jp
cs
shlb
call
or
movsb
and
sub
jne
outsl
mov
ds
fisttps
pop
ja
and
call
cmpsb
mov
dec
ss
pop
jnp
data16
xor
cmpsl
in
mov
jge
mov
lock
nop
dec
or
dec
nop
fcmovbe
push
std
jo
cmp
mov
shll
adc
lahf
fcmovnbe
insl
js
int3
ret
dec
adc
adc
mov
ret
repz
out
pop
xchg
stos
les
jg
in
test
aam
and
mov
jecxz
cltd
incb
pop
mov
sti
adc
push
addb
sbb
int
imul
sbb
clc
dec
into
and
lock
adc
adc
sbb
sub
mov
shrb
jnp,pn
out
xor
mov
rorb
aaa
loope
pop
out
clc
dec
lret
bound
sub
ljmp
dec
push
cmpsb
aas
fdivrs
iret
pop
jmp
js
enter
mov
jp
cmp
fsubrs
addr16
lret
aam
cmp
sti
pop
mov
imul
repnz
sub
sti
lock
jecxz
mov
fyl2xp1
push
adc
mov
imul
push
xor
in
std
insb
nop
gs
mov
sarl
mov
xor
xchg
int3
dec
fldenv
xor
xrelease
xchg
mov
popa
cmc
mov
pop
aad
mov
inc
dec
push
ret
lods
sub
mov
jge
nop
cmp
adc
insl
xchg
cld
mov
lret
sub
pop
sahf
pop
sti
jo
mov
out
test
lret
outsl
test
push
jne
out
dec
ret
repz
gs
in
int
rorb
cmpsl
sub
xchg
push
cmp
stos
mov
pop
sbb
push
mov
std
xor
push
jle
mov
loopne
push
mov
sbb
or
aam
fbstp
xchg
mov
out
out
jnp
ljmp
jecxz
push
push
ljmp
sub
insl
jo
xchg
adc
adc
ljmp
xor
test
call
dec
icebp
sbb
loopne
inc
sti
inc
ljmp
adc
rolb
mov
pop
push
mov
add
mov
lock
cwtl
aaa
bound
adc
ja
aad
jmp
js
pushf
in
fs
sub
lods
or
loop
or
mov
and
push
jae
add
xchg
jl
sub
pushl
cwtl
es
sub
mov
mov
rorl
xchg
add
jg
int
test
shlb
xor
cmp
xchg
mov
mov
orb
pop
mov
rcrl
xchg
out
pusha
xor
jle
mov
in
cmp
lods
lods
inc
push
push
gs
jae
xchg
pop
push
mov
inc
xchg
cmp
fstpl
jno
repz
gs
push
pop
lret
imul
push
pop
push
sbb
adc
in
ret
xchg
cmp
int
clc
cmp
lret
ret
jne
inc
push
aas
mov
cmp
fdiv
in
enter
jp
shlb
inc
sbb
loop
pop
xor
movsb
inc
xor
dec
adc
sub
lret
je
scas
pop
dec
cmpsl
jg
stc
aam
cmp
jmp
jns
pop
dec
ficoms
xchg
xchg
or
dec
add
sbb
call
and
imul
ds
xor
xchg
test
popa
inc
cmp
cs
pushf
ffreep
pop
mov
into
out
scas
push
xor
lahf
mov
test
movsl
out
xchg
fdivrl
fistpl
and
mov
pop
sahf
icebp
dec
shl
sahf
gs
or
dec
fistl
pop
or
bound
sub
cmp
and
jbe
lods
jb
les
fwait
mov
leave
pop
loop
pop
jge
inc
fiaddl
std
xchg
xchg
mov
dec
mov
cmp
std
pop
add
insl
repnz
shlb
jb
push
cmp
stc
ret
gs
dec
or
ret
notb
sbb
pop
cs
xchg
insb
stos
repz
pop
cmp
jl
push
adc
add
xchg
sbb
pop
jo
bound
jge
flds
add
fbld
idivb
imul
std
adcb
add
std
mov
jnp
jb
pop
enter
jmp
jle
jl
es
mov
pop
jnp
jmp
shlb
ret
sti
clc
mov
and
sahf
jp
jo
add
mov
es
sub
testb
xor
push
or
cmp
clc
aam
cmp
lds
in
iret
pop
dec
cltd
cmp
das
dec
ror
add
and
mov
cmp
sbb
shll
jg
pop
aad
std
mov
out
sahf
xchg
aaa
les
cwtl
pop
cmp
out
mov
lods
mov
pop
jae
xchg
push
int
shll
inc
lods
sbb
fbld
inc
outsl
xchg
mov
push
xor
dec
fucomip
test
and
outsb
fcmovu
sbb
sbb
mov
aaa
ret
jae
call
out
test
out
in
or
imul
mov
inc
adc
iret
aaa
cmp
xchg
and
inc
push
mov
pop
les
jmp
movl
push
mov
out
mov
mov
stc
xor
cmp
dec
out
dec
or
lcall
repnz
cld
add
mov
pusha
pushf
lock
enter
sub
sbb
loope
mov
repz
adc
fisubrl
xor
scas
loope
cmp
cmc
ret
pop
and
push
outsl
in
pop
incl
stc
inc
push
ss
lods
adc
add
insb
sub
dec
pop
mov
enter
pushf
inc
shll
xor
dec
mov
cmp
inc
sbb
adc
out
imul
repnz
fcmovnb
inc
pop
push
jp
adc
push
and
enter
mov
mov
sub
test
lods
movsb
arpl
pop
bound
shrb
jecxz
out
xlat
test
xchg
mov
xor
fmull
fldl
fsubrl
testl
mov
cmp
rol
nop
popf
jle
and
arpl
xor
xchg
aaa
daa
pop
into
xchg
lods
dec
mov
sbb
loop
cli
pop
jp
mov
pop
sbb
xchg
dec
or
daa
sub
scas
mov
movsl
jae
jb
adc
sbb
dec
push
push
arpl
pushf
pop
jle
inc
mov
test
out
repz
lahf
xor
imul
mov
fstpl
xchg
iret
jp
aas
in
dec
cmp
adc
sbb
and
loopne
repnz
mov
popf
cmpb
push
inc
sbb
pop
xor
mov
ret
mov
out
js
clc
shlb
iret
hlt
loop,pn
push
cmp
lods
fistpll
and
dec
mov
pop
cmp
and
std
rclb
xchg
sub
add
cld
inc
aas
xor
dec
fisttpll
cmpsb
inc
lret
into
shlb
adc
push
cmp
ret
aas
in
push
jbe
leave
loope
mov
aam
xor
stos
add
shrb
movsb
add
iret
mov
ret
xor
xor
inc
out
mov
out
pop
out
adc
mov
daa
xor
test
arpl
bound
fs
mov
mov
outsl
in
adc
adc
hlt
mov
push
or
mov
sbb
imulb
fdiv
dec
loopne
popa
inc
ret
shl
dec
sar
xor
orl
cmp
and
out
adc
add
leave
mov
call
jle
xchg
in
lea
jbe
std
adc
mov
iret
xorb
loope
sbb
jae
aam
sahf
jmp
sarb
xchg
and
inc
xor
jnp
sarb
in
cltd
mov
adc
aas
arpl
repz
imul
jl
xchg
ret
int3
stc
mov
or
push
fisttps
dec
shll
add
je
push
out
rolb
pop
out
repz
clc
dec
les
sbb
add
gs
jmp
push
xchg
repz
inc
xor
adc
es
inc
dec
inc
incb
and
pop
xorl
das
pop
pop
dec
ficoms
fwait
adc
or
push
fisubs
shr
push
dec
cmp
vpmacssww
jp
lods
imul
or
add
and
into
repz
iret
rcll
sub
xor
stos
sti
jno
outsb
mov
push
fistps
mov
or
sbb
mov
data16
in
add
sub
push
inc
jle
jg
ds
dec
mov
repz
out
ja
inc
mov
lea
arpl
movsb
clc
ret
adc
aad
int
inc
adc
jno
inc
popa
and
outsb
add
addr16
arpl
outsl
jbe
cmpl
push
mov
or
arpl
bound
sub
jae
jbe
clc
iret
dec
int
xor
pop
pop
mov
mov
aaa
adcb
out
insb
mov
mov
ret
aas
add
sub
pop
fcoms
out
or
mov
and
inc
flds
mov
movsb
repz
das
jne
mov
jae
fsubrp
push
repz
int
imul
dec
hlt
popf
adc
and
bound
scas
pop
pop
sbb
out
jns
pusha
xchg
mov
inc
jp
das
cld
fsubrs
cmpsb
test
dec
movsb
test
movb
jo
mov
aam
int
pop
jns
movsb
sbb
in
shlb
xchg
add
dec
in
push
movsb
aas
call
stc
xchg
fsubr
jbe
cltd
roll
js
jmp
sbb
dec
and
pop
mov
jge
push
inc
cmp
lock
xchg
cs
inc
repz
dec
gs
adc
mov
add
cmp
dec
mov
rol
sub
test
dec
rol
add
test
das
adc
mov
inc
int
inc
testl
sbb
icebp
fdivs
inc
hlt
xchg
cli
ja
cltd
push
dec
cmc
jecxz
shl
aaa
ficomps
jge
adc
and
mov
sbb
jbe
ror
inc
xlat
movsb
sub
adc
aam
test
mov
addr16
push
es
mov
mov
pop
lock
add
pop
sbb
inc
mov
pop
lahf
inc
loop
arpl
dec
inc
inc
inc
push
cmp
ss
cmp
mov
lods
xlat
test
jecxz
addb
andl
pop
add
jno
mov
inc
neg
sbb
dec
jge
aad
fwait
js
ret
loopne
pop
aam
xchg
pop
rcll
or
xor
mov
scas
push
imul
adc
and
cmp
in
stos
xchg
inc
sub
xchg
dec
popf
jmp
sbb
hlt
mov
out
dec
leave
adc
xor
shlb
jo
xor
sbb
cmc
mov
add
aaa
mov
iret
or
xor
shlb
pop
mov
inc
pop
test
shll
ret
inc
lock
cmp
loope
sti
sbb
cmp
ret
and
ret
rorb
adc
add
mov
call
gs
out
sbb
dec
cmp
es
movsl
test
mov
lds
clc
xchg
sahf
jp
xchg
aas
xor
int3
xor
cmp
and
int
shrb
mov
pop
loopne
clc
sub
and
dec
out
inc
sub
rcrb
sbb
jae
test
mov
pop
xchg
pop
aad
fildl
cmpsb
dec
push
dec
roll
or
push
sbb
les
push
or
sti
jb
push
add
jle
fidivl
aaa
aam
and
xchg
out
or
xor
cmp
insb
mov
cltd
orl
sbb
cmp
cmp
adc
jae
cmp
and
enter
mov
jl
xchg
add
push
or
les
xchg
xchg
jp
out
das
insl
dec
lret
arpl
push
lea
xchg
je
inc
or
movsl
and
std
punpcklbw
jp
pop
sbb
mov
or
inc
lock
mov
loopne
sti
popf
dec
call
test
jnp
nop
inc
movsl
adc
dec
movsl
fimull
and
aaa
pushf
lds
ret
jmp
dec
mov
and
add
and
or
into
arpl
test
in
cmpsl
fwait
xor
in
cmp
lods
cli
xor
adc
rcrl
in
hlt
loope
pop
mov
hlt
adc
sub
mov
and
ret
repnz
xchg
inc
add
jb
jge
outsb
and
rep
stos
sbb
dec
jg
stos
push
adc
mov
lea
mov
js
repz
xor
cltd
pop
jnp
das
into
jge
mov
pushf
repnz
imul
movsl
int3
pop
sbb
in
adc
jb
cwtl
insl
jmp
xchg
sbb
push
outsl
imul
insb
das
mov
filds
xlat
jb
xchg
roll
sar
pop
aas
pop
xchg
int3
adc
jne
pushf
dec
mov
and
pop
imul
rclb
pop
iret
adc
and
cmp
push
in
ljmp
sahf
mov
mov
jle
and
mov
gs
mov
sub
sbb
sub
or
imul
mov
test
dec
in
arpl
data16
sti
dec
aas
xchg
arpl
cld
mov
cmpl
push
xchg
mov
inc
imul
dec
aas
jnp
cmpsb
pop
pushl
mov
movsl
sub
cmpsl
mov
mov
add
cmp
fnstcw
ds
shlb
loop
imul
push
cmp
inc
lods
in
scas
sub
lea
xchg
add
insb
leave
mov
jle
stc
dec
inc
dec
xlat
or
mov
xchg
mov
xchg
adc
jecxz
and
insb
js
or
scas
dec
push
ror
ljmp
lds
xchg
push
push
pop
js
lcall
pop
adc
or
repnz
xchg
dec
jnp
adc
push
sub
mov
xor
add
mov
dec
into
cmp
mov
xchg
int3
orl
sub
lret
inc
arpl
imul
xor
loop
imulb
mov
mov
andl
daa
lock
push
and
xor
xchg
das
stos
ljmp
cli
xchg
mov
mov
push
push
pop
lods
bound
cmpsl
pusha
cmpsb
cmc
mov
fisubl
and
or
add
push
dec
push
mov
ret
shll
stos
mull
xor
ret
ret
cltd
scas
cli
imul
addr16
scas
dec
nop
nop
lods
cmpsb
xchg
mov
or
roll
push
fistpll
sbb
cmp
imul
jmp
dec
test
sub
test
or
out
mov
sub
incl
mov
xor
sub
movsb
pop
ja
sbb
sahf
repz
repnz
push
cmpsl
and
mov
push
mov
mov
cmp
xchg
shll
jecxz
lea
xchg
iret
pop
inc
push
in
dec
mov
pop
jnp
das
inc
fld
or
into
iret
aam
and
or
std
add
pop
mov
and
rolb
repz
mov
inc
dec
pop
adc
add
test
hlt
xor
pop
mov
cmp
adc
jp
rcrl
cmp
mov
inc
in
in
stc
cmp
repnz
push
jne
adc
ret
xchg
and
out
fcmovu
or
sbb
gs
repz
decl
ret
adc
cmp
push
xlat
xchg
pop
xor
popa
scas
cmp
adc
test
lods
out
add
mov
gs
dec
push
cmpsl
test
pop
jo
and
sbb
orl
sbb
xchg
and
mov
in
adc
mov
sub
outsb
add
imul
dec
ret
sub
xchg
aam
jle
push
xchg
dec
sahf
push
pushf
dec
or
je
ret
fsts
push
fisubrs
xchg
sbb
or
mov
leave
pop
mov
test
and
mov
imul
cmp
inc
mov
adc
dec
leave
xor
shl
imul
jnp
dec
and
push
xor
xor
push
jnp
ret
inc
mov
orl
jg
mov
mov
fnstcw
mov
arpl
jae
push
mov
arpl
aam
sbb
sbb
hlt
inc
jl
sub
outsb
or
lcall
lahf
pop
mov
clc
rorb
and
aad
pop
int3
pop
pushf
push
mov
lock
rolb
cmpsl
mov
or
pop
jbe
fsubrl
dec
mov
movsl
repnz
mov
jp
or
sbb
and
sub
into
clc
xchg
cs
push
inc
outsl
push
popf
jg
adc
popf
lods
stos
je
nop
fimull
sbb
push
pop
out
sti
lock
sub
inc
inc
cmp
or
push
dec
out
or
cmp
fwait
mov
repnz
leave
test
pop
and
xor
inc
push
adcl
fwait
dec
mov
test
push
test
loop
pop
or
pop
rorb
notl
cmp
icebp
adc
adc
pop
pop
aad
jmp
dec
xchg
pop
sub
or
jne
inc
push
xor
jb
dec
pop
mov
push
lods
sbb
inc
xchg
adc
popf
icebp
add
mov
xchg
mov
inc
push
roll
or
popa
in
shlb
cld
and
mov
pusha
xchg
cmpb
push
cs
xchg
lcall
cmp
mov
aaa
sahf
movsl
sub
lret
xlat
mov
outsl
and
mov
pop
mov
fistpll
and
stos
or
mov
push
push
call
lahf
xlat
or
sbb
incb
ds
cmp
sub
into
dec
and
or
dec
mov
ljmp
jmp
mov
xor
pop
dec
fbstp
decb
fwait
test
push
scas
das
mov
mov
pop
add
mov
sbb
pop
ja
fnstenv
sti
sub
push
ss
ljmp
dec
lods
fildl
pop
dec
mov
push
repz
adc
rcll
movsl
mov
lahf
js
push
fucomi
mov
fsub
pop
pop
gs
lcall
cwtl
sub
es
pop
inc
or
jne
dec
xchg
jne
mov
ljmp
or
cmp
hlt
sub
sbb
xor
adc
dec
pushf
ja
les
sub
arpl
mull
pop
sbb
je
imul
pop
lods
or
pop
out
and
xor
xor
shrb
daa
adcb
jno
jmp
fidivs
cmp
lds
cmpsb
std
xlat
push
sub
or
rolb
cmc
cmp
pop
repnz
jne
int
repz
hlt
mov
popa
xor
es
jnp
aam
imul
and
out
incb
test
jne
xchg
jg
or
xor
mov
ret
and
dec
data16
imul
cld
loop
xchg
mov
jae
stc
add
ret
in
dec
movsb
sti
pop
adc
pop
pop
data16
lods
dec
mov
loope
cld
dec
or
sub
in
call
push
sbb
ret
push
xor
jo
mov
jp
js
pop
inc
jmp
inc
and
and
jns
iret
push
cli
neg
loope
cmp
xchg
test
nop
sbb
fcoms
inc
cmp
cli
pop
out
sbb
jmp
pop
loopne
and
mov
lock
sub
popf
rcrl
add
mov
push
out
sub
xlat
xchg
push
mov
fsts
sub
fcoml
push
imul
test
jecxz
dec
push
xchg
inc
jae
dec
add
inc
or
mov
jns
negb
testl
mov
loop
jl
jno
jl
stos
xor
aaa
mov
cmpsl
addr16
test
jmp
push
mov
adcb
fmull
xchg
fbstp
repz
aas
dec
mov
and
jo
sbb
scas
daa
outsb
test
mov
in
push
or
xchg
xor
xchg
rolb
mov
lea
lods
xchg
into
xchg
gs
xchg
fisubs
mov
std
fiaddl
enter
aaa
popf
jb
sub
sbb
pop
mov
int
adc
movsl
cmc
int
mov
mov
mov
testl
pop
arpl
test
das
jbe
je
das
pop
push
push
iret
push
mov
imul
call
popf
mov
fbstp
jecxz
je
and
andl
jge
dec
push
sarl
and
dec
jmp
sub
add
xchg
sbb
cmp
and
nop
lods
mov
mov
xchg
iret
aas
pusha
fisttps
lret
repz
add
insb
xor
out
js
cwtl
clc
mov
jmp
fidivrl
mov
pushf
xchg
xchg
xchg
and
xchg
in
pop
and
mov
hlt
inc
loopne
loop
je
out
pusha
test
mov
fsts
test
and
mov
jb
push
insb
stos
mov
shrb
popf
pop
inc
or
ja
dec
mov
nop
sbb
and
test
mov
lds
movsl
xchg
jo
mov
in
dec
aad
push
push
aaa
sahf
cmpsb
and
jae
dec
movsl
mov
push
mov
push
sub
cmpsl
dec
sbb
es
pushf
xchg
fadds
mov
and
cltd
or
xor
out
dec
dec
lods
inc
cmpl
mov
les
cltd
xor
and
stc
jge
jle
inc
sub
cmp
int
mov
mov
jge
out
mov
aas
pop
push
cmc
sahf
sub
pop
add
and
aam
movsl
xchg
xor
fnstcw
sub
push
adc
or
iret
push
xchg
mov
loope
insb
lds
lods
push
test
push
jne
sub
xchg
jl
dec
lcall
adc
sub
pop
mov
rcll
fisubl
jnp
jbe
sbb
inc
nop
in
in
idivl
lods
mov
mov
sub
jae
popf
cltd
cs
push
mov
sub
shrl
sub
mov
lds
mov
add
stos
inc
dec
aaa
nop
xchg
aaa
sbb
pop
insl
jge
push
mov
or
outsl
bnd
inc
push
cwtl
fcoms
xchg
cmp
mov
ret
sbb
push
mov
mov
arpl
xchg
psrld
mov
xchg
fidivrl
shr
or
enter
xchg
fimull
mov
jg
insl
call
or
or
data16
lret
aam
inc
dec
mov
out
andb
jb
fdivl
push
xchg
push
aad
jge
jg
psubb
les
xchg
mov
pop
or
lret
addr16
mov
mov
add
nop
cmp
push
outsl
mov
iret
lcall
jb
add
icebp
or
push
icebp
and
jecxz
faddl
push
outsl
std
or
cmp
andl
push
stc
sub
jle
mov
xchg
adc
hlt
call
inc
sbb
cmpsb
pushf
mov
sbb
loope
mov
cmpsb
dec
aad
sbb
mov
sbb
xchg
adc
xchg
clc
push
inc
insl
lret
pop
shrb
adc
movsb
inc
cmp
aam
sub
jae
addr16
xor
push
out
stc
pop
cmp
cli
adc
jne
dec
rolb
dec
call
leave
pop
jp
cmp
outsb
and
inc
inc
scas
enter
add
mov
rcr
mov
jo
lea
xchg
out
ss
ficoms
xchg
lcall
lock
jg
sahf
add
daa
pop
ret
test
fwait
push
lods
in
imul
mov
dec
adc
stos
push
arpl
sub
cld
loop
cmp
dec
jne
dec
cltd
imul
imul
jno
sub
add
cs
or
sub
xchg
outsb
push
js
imul
jno
xchg
imul
pop
sbb
adc
or
movb
fsubs
dec
xchg
roll
jbe
add
jl
cmpsl
mov
xchg
mov
add
inc
insl
in
sub
lds
or
or
imul
dec
sarl
mov
arpl
xlat
pop
add
xor
lcall
idivb
mov
cmp
fld
aad
clc
cmp
inc
cmp
test
loopne
and
mov
int3
clc
lds
jne
and
sarb
mov
xchg
jbe
sbb
lret
sbb
aam
data16
orb
adc
shrl
push
jl
orb
arpl
pop
inc
mov
mov
pop
scas
xchg
jecxz
adc
pop
outsl
das
xchg
dec
out
fldt
dec
loopne
int3
jae
sahf
mov
mov
lods
adc
jle,pn
loopne
ss
jnp
cli
xor
sub
lods
cltd
lods
call
mov
rorb
adc
test
push
in
pop
or
or
push
int3
lcall
sub
pop
cltd
sbb
stos
stos
imul
jne
pushf
xor
loope
mov
inc
jne
fildll
movsl
out
rcrl
imul
in
jge
xchg
stc
ret
lds
xchg
xchg
loope
sbb
shlb
les
or
xchg
push
stc
cmp
fst
inc
hlt
mov
xor
push
mov
push
aam
or
stos
cmp
fists
cmp
push
cmc
mov
out
sub
popa
incl
rorl
add
inc
adcb
pop
lahf
in
and
mov
mov
movl
sub
stos
jmp
sub
mov
dec
rolb
loope
mov
mov
mulb
ja
pop
lret
test
inc
jmp
sub
incb
jnp
jne
jmp
popl
addr16
test
fisubrl
add
pushf
push
mov
test
mov
call
jo
or
push
inc
inc
in
sub
sahf
pop
jle
inc
push
mov
cmp
mov
int3
popa
fcmovnbe
jno
jecxz
dec
shrl
push
and
sar
lods
adc
cmp
xchg
xchg
push
bound
jp
jno
fwait
adc
stos
mov
orb
fcomps
or
stos
and
push
sbbl
data16
cmpsb
sbb
bound
mov
xor
call
jno
hlt
mov
cmp
inc
cmp
mull
sbb
or
ret
nop
inc
cmpsl
stos
push
push
stos
stc
and
pop
xchg
add
pop
adcl
test
sbb
addr16
daa
xchg
int
push
mov
sub
push
jne
hlt
imul
icebp
hlt
push
and
pop
pusha
xor
push
call
pop
mov
mov
mov
push
bound
or
insl
btr
cli
paddsw
jle
call
xor
xor
es
in
mov
cmp
les
mov
lea
pop
or
sub
pushl
stos
loop
push
xor
xchg
sti
aad
cli
pop
sub
inc
cmp
pop
out
test
adc
or
outsb
push
lock
sarl
pop
rorb
gs
pop
add
test
in
enter
fprem1
and
call
add
jg
or
icebp
sub
in
xor
pop
insb
jg
sbb
xlat
adc
jmp
loope
mov
dec
fnstcw
jmp
dec
sti
and
mov
sub
dec
sbb
adc
dec
fcmove
adc
lods
dec
cltd
inc
adc
call
sbb
mov
xchg
dec
jl
dec
shlb
lret
adc
pop
sti
push
aad
roll
jecxz
iret
cmp
aad
mov
or
repnz
dec
xchg
int
inc
popf
mov
test
aas
into
movsb
jne
fistpll
cmp
jp
mov
mov
cs
fadds
filds
fldenv
lret
fimull
stos
add
and
fs
nop
loopne
inc
cmp
fnstsw
scas
cmp
adc
into
cwtl
aam
scas
mov
arpl
test
shll
mov
cltd
scas
pop
xchg
mov
mov
pop
fdivrs
call
sti
hlt
sub
push
outsb
cmpsb
or
xchg
cli
imul
into
les
mov
pusha
scas
sub
mov
inc
mov
inc
and
sbb
test
aas
dec
aad
jmp
andb
xchg
fiaddl
mov
stos
popf
fldl
in
imul
call
aad
adc
mov
addr16
std
int3
jmp
out
lret
xchg
dec
xor
dec
inc
icebp
leave
mov
rolb
xor
mov
cmp
arpl
int3
sbb
push
out
iret
test
cmp
mov
push
pop
jle
popa
cld
mov
pop
sub
jg
pushf
fisttpll
es
lea
daa
xchg
test
pop
lods
add
es
imul
stc
xchg
icebp
clc
adc
std
or
adc
shrb
push
lret
push
mov
addr16
sub
cmp
leave
rorl
jae
pop
pushl
popf
or
enter
jb
ficomps
jmp
jecxz
jle
dec
jecxz
repz
cmpsl
movsl
add
inc
sbb
mov
out
pop
add
sub
outsl
sbb
ljmp
sub
inc
jns
sbb
add
loop
jp
repz
dec
arpl
sub
mov
inc
mov
xor
push
out
rcl
sub
je
ja
push
fisubl
cmp
mov
in
aaa
sub
out
fimuls
out
popa
scas
adc
push
jecxz
inc
jno
rcrl
push
cmp
adc
mov
call
pop
aam
fdivs
daa
fisubrl
fwait
pusha
fiaddl
rcrl
cwtl
sub
out
int3
or
test
nop
xor
aad
and
loope
sbb
mov
hlt
idivb
daa
fmuls
out
push
jg
das
xchg
int
aad
addr16
sbb
mov
push
sti
out
scas
pop
in
test
jb
xchg
adc
jl
hlt
aad
or
xor
popf
xchg
xchg
stc
aam
js
hlt
stos
nop
inc
push
imul
imul
cmp
pop
inc
pop
ror
loopne
mov
filds
jne
mov
dec
xlat
adc
add
sbb
dec
push
inc
push
push
imul
sbb
pushf
test
adc
stc
adc
cmp
ret
loope
in
popf
push
sub
lret
xlat
push
pop
mov
insl
inc
dec
sbb
cmpsl
jno
fsubrs
insl
add
cld
and
popf
add
fmull
xor
or
fucomip
into
jnp
sub
cmpb
out
inc
sahf
pop
cmpsl
push
mov
pmaddwd
filds
in
jmp
pop
adc
or
cwtl
cmpsb
cli
stos
movsb
sbb
adc
pop
mov
mov
sub
mov
mov
sub
subl
insl
in
popf
cmpsl
sub
dec
movsl
ss
push
lea
jl
xor
inc
xchg
mov
test
loopne
jnp
adc
dec
test
in
aas
into
xchg
xor
push
ret
jp
stos
cmpsb
pop
jne
addr16
jns
pop
leave
sarl
inc
mov
jle
cmpsb
mov
pop
and
mov
ds
add
add
add
clc
cmpsb
fnsave
adcb
inc
subb
sbb
sub
xor
jae
jae
or
popa
pop
xor
lods
popa
add
jmp
jnp
ficomps
mov
lahf
mov
andl
and
outsb
mov
hlt
push
mov
addr16
jns
and
xor
daa
jmp
rolb
sahf
mov
jnp
mov
inc
push
jns
jne
pop
test
aas
xchg
pop
sbb
ljmp
inc
loope
push
sbb
loope
stos
fisubrs
test
or
and
call
and
xor
pop
nop
sub
or
push
cmp
push
aas
or
outsb
test
push
test
xor
mov
lods
or
xchg
jle
adc
cs
push
nop
xchg
popf
jbe
mov
lret
pop
dec
cmc
and
insl
cmp
mov
mov
scas
pop
pop
cmc
xor
xor
ss
xchg
clc
sub
lock
fldcw
cmp
outsb
pop
and
push
pop
or
adc
cmovo
cli
test
sbb
jmp
dec
pop
aam
inc
cwtl
aad
cmpsb
int3
cld
jg
adc
mov
lock
mov
push
xchg
push
imul
lods
inc
gs
push
mov
xlat
add
pop
test
pusha
mov
aad
int3
or
mov
sub
push
aam
sub
bound
lret
adc
scas
test
mov
xor
xchg
push
lahf
xchg
clc
add
std
sub
sahf
stc
das
into
cmp
xor
xor
sub
sub
incl
xchg
pop
enter
movzbl
adc
loope
jo
flds
cld
fstps
cmp
lret
or
insl
adc
sti
push
xchg
addb
test
cmp
aad
loop
and
adc
adc
rol
xor
adc
mov
jne
daa
sub
and
cmp
push
mov
sub
aad
stos
mov
xchg
mov
nop
sbb
addr16
push
nop
inc
int
aam
sbb
les
xor
sub
mov
xchg
outsb
pop
addr16
loopne
pop
stos
pusha
outsb
ds
in
ror
out
mov
pop
loope
shll
sub
fwait
adc
mov
or
test
repz
aam
movsb
pop
jne
cmp
jno
mov
inc
pushf
repnz
cmp
mov
mov
pop
xchg
lcall
sub
mov
mov
ja
mov
lret
mov
add
mov
in
xor
or
push
mov
notl
imul
mov
xor
xchg
inc
jp
cmp
in
mov
mov
imull
repz
arpl
mov
adc
aad
sub
xchg
mov
dec
lock
fimull
xor
hlt
aam
subl
cmp
xchg
jo
xchg
sub
ja
out
sub
leave
outsl
mov
pop
sahf
repz
loope
xor
push
xchg
pop
sar
test
xchg
dec
test
cmp
xchg
shrl
push
aad
sub
jnp
gs
pop
cmp
jp
mov
push
leave
mov
xlat
call
push
notb
mov
es
cmpsb
fstl
mov
adc
aad
pop
sbb
ja
adc
cmp
cli
sub
lret
in
inc
mov
fcompl
mov
sub
daa
fwait
and
addl
dec
jge
test
sbb
add
cmp
inc
jo
sub
push
pushf
les
jmp
xlat
cmp
mov
mov
dec
mov
lret
pop
popa
jnp
es
pop
cmp
xchg
add
popa
mov
add
in
in
fs
stos
rorl
into
dec
pop
decb
and
jmp
and
and
loope
mov
inc
das
test
pop
sbb
ja
lock
mov
add
mov
cwtl
outsb
sub
jae
jb
std
cmp
xchg
lock
inc
or
push
sarl
push
adc
inc
jmp
mov
loop
stos
jg
xchg
les
sub
into
mov
pop
push
negb
jb
or
es
dec
jge
popa
adc
dec
adc
mov
aas
mov
inc
sahf
loop
jb
mov
jmp
inc
or
fwait
push
jle
inc
push
pop
js
jge
adc
xchg
loopne
loope
cmp
icebp
jg
aam
out
sub
mov
popa
xchg
push
out
sbb
out
popa
out
cmp
bound
sub
aad
test
cmp
mov
sbb
jmp
jmp
push
jb
packsswb
sbb
ljmp
cld
lret
sahf
xor
mov
clc
in
jne
dec
mov
in
mov
pop
mov
pop
les
fnstenv
and
js
mov
cmp
jecxz
sbb
addr16
pop
push
mov
adc
aas
push
out
cmp
inc
lea
dec
xchg
ffreep
push
inc
clc
cltd
jge
cmp
mov
add
je
pop
adc
stc
out
icebp
int3
push
xchg
pushf
adc
pop
arpl
pusha
dec
hlt
mov
sbb
inc
mov
je
cmpsl
mov
jnp
jp
out
in
imul
pusha
sub
sub
test
mov
popa
xchg
push
sahf
shl
mov
inc
xor
mov
mov
jbe
ret
pop
jp
lds
imull
xlat
ret
xor
add
dec
sarl
inc
orl
jo
push
add
inc
xchg
xor
sub
lods
insb
adc
jge
sub
arpl
cli
cli
xchg
jg
shl
sub
cmpsb
lods
dec
in
xchg
test
sbb
or
mov
or
insb
rcrl
jno
scas
sar
mov
xor
mov
es
xchg
mov
sub
bound
mov
popa
insl
ss
mov
cli
sbb
mov
inc
fcoml
cltd
pop
add
or
arpl
xor
jl
sbb
dec
sbb
jae
sarl
mov
and
sub
jp
repnz
in
or
jne
outsb
rcrl
and
push
ja
add
out
add
pusha
inc
pop
dec
cmc
test
xorb
je
mov
pop
sarb
pop
adc
cltd
into
sub
popf
enter
int
dec
gs
or
pop
sbbb
adc
loop
xor
stc
pop
jo
cmp
push
add
test
shll
sbb
ja
push
mov
insb
mov
mov
pop
pop
test
cmp
into
jmp
jge
sub
dec
push
xor
inc
hlt
dec
rorb
mov
pop
mov
int3
movsb
cwtl
dec
arpl
adc
mov
lds
lret
stc
xor
push
xor
xchg
imul
add
xchg
xchg
pop
sub
ret
in
pop
imul
mov
or
test
add
dec
push
lret
xchg
sti
inc
js
pushf
cmpsl
dec
iret
sub
loopne
test
mov
insb
mov
lret
arpl
mov
scas
or
dec
enter
repnz
xchg
repz
push
hlt
lahf
and
xor
hlt
loop
dec
add
push
cltd
push
popf
andb
test
rcrl
cmp
dec
cld
jne
push
cmp
xlat
mov
xlat
adc
jecxz
xchg
repnz
rcrl
sbb
fwait
mov
add
mov
test
aad
ret
dec
std
mov
lds
loope,pt
test
inc
pop
daa
repz
xchg
xchg
sub
dec
roll
outsl
mov
pop
add
dec
mov
aam
jg
or
shll
imulb
pop
add
jnp
xor
inc
inc
outsb
mov
push
jmp
aad
enter
dec
inc
mov
das
or
jg
xchg
pop
aas
mov
rcrb
out
outsb
adcb
fbstp
pop
cld
in
cld
cli
and
cli
stos
mov
cmp
shl
pop
int3
cmp
jmp
mov
add
or
sbb
testl
daa
mov
push
imul
xchg
dec
mov
jne
inc
jle
int3
out
pop
in
jo
repz
xor
mov
fadds
dec
data16
xchg
fwait
mov
divb
lds
imull
mov
cmp
hlt
shr
sti
xchg
cmp
popf
shrl
cmp
aas
sub
inc
jne
jae
cmp
ljmp
scas
ret
add
xchg
add
andb
or
mov
insl
popf
in
sahf
or
jge
mov
insb
iret
mov
rcll
cmp
lds
movl
xor
mov
mov
or
loop
sub
adc
mov
xchg
filds
ja
push
sub
mov
out
out
mov
cmp
jb
iret
outsl
mov
popf
dec
xor
or
into
lahf
call
cmp
int3
in
sbb
xchg
bound
idivl
xor
push
stos
cmp
lret
into
mov
out
add
jne
pop
cmp
mov
add
mov
icebp
icebp
pop
fidivrs
out
dec
mov
rcrl
test
inc
dec
push
sbb
xor
pmulhw
mov
sbb
nop
dec
push
test
popf
lcall
xor
dec
push
cmpsl
nop
mov
jbe
cmp
cmpsl
pop
insb
adc
hlt
jb
mov
stos
lcall
cli
sub
adc
orl
popa
call
mov
pusha
dec
dec
xlat
inc
push
ljmp
inc
push
or
mov
lds
shll
in
pop
add
addr16
lcall
dec
in
ss
idivb
sub
mov
adc
jl
sub
outsb
iret
push
push
std
stos
fcompl
mov
lds
fs
bswap
scas
jnp
pushf
fsubl
push
movsl
ljmp
sub
lcall
sbb
popa
mov
cmp
iret
sbb
incl
in
sub
fwait
aam
inc
adc
int3
mov
push
int3
push
push
sbb
mov
sbb
pop
lret
or
inc
jbe
stos
fldl
and
sahf
sbb
push
and
xor
xchg
pop
ja
stos
loope
mov
lods
shrl
jbe
xchg
pop
lret
fstps
scas
mov
and
call
push
fcomi
jbe
mov
mov
mov
xor
push
out
mov
pop
repz
mov
or
adc
xchg
stos
ljmp
out
sub
ret
mov
cmp
in
adcl
xchg
pop
xchg
add
mov
push
inc
push
nop
add
pop
mov
aaa
jno
push
aam
fs
cwtl
push
mov
aad
jmp
out
and
repz
repnz
adc
sub
inc
dec
sub
sbb
into
fnsave
inc
dec
rcrl
jno
lds
or
psrld
sub
xchg
bound
mov
cmpsb
in
addr16
sub
mov
pop
repz
mov
fdivp
mov
xor
test
into
push
push
outsl
scas
xchg
imul
cmpsb
in
fwait
inc
or
or
subl
inc
rcrl
flds
inc
xorl
mov
or
jno
rcrb
jecxz
pop
adc
fisubrs
mov
fnsave
jg
in
aam
cli
xorb
jmp
subl
stc
mov
push
fadds
mov
sbb
fldt
stos
mov
popf
pop
faddp
rcrb
fwait
test
aaa
lcall
push
pop
push
loope
sub
lret
notb
pop
mov
icebp
les
nop
testb
aam
mov
mov
jle
jp
lods
xor
das
push
ss
fcoms
sarb
inc
sub
push
std
rcll
cmp
mov
adc
hlt
pop
outsl
xchg
xor
cmp
sub
cmpsl
xchg
jmp
xor
outsb
pop
dec
lods
push
mov
cs
ljmp
xchg
mov
fildll
rcll
mov
jbe
or
iret
xor
mov
cmc
add
mov
sub
xor
test
iret
inc
aam
daa
pop
and
or
mov
xor
inc
gs
addr16
cmc
in
les
sub
test
insb
ja
mov
mov
dec
mov
das
inc
shll
orb
les
stos
jge
inc
cli
test
cmpsb
and
test
sbb
mov
icebp
jg
and
test
push
adc
pop
cmp
add
les
xor
mov
sbb
sbb
rol
sahf
test
xor
lahf
nop
dec
xor
mov
negb
add
sbb
iret
ljmp
pusha
xchg
inc
rcll
mov
inc
xchg
mov
pop
push
inc
pop
mov
jno
xor
and
mov
mov
leave
ljmp
imul
push
and
rorb
cmpsl
arpl
sar
ljmp
addr16
popf
repz
fxch
loop
ret
dec
sbb
out
mov
jo
decb
aaa
int3
lea
stc
dec
push
inc
xor
fistl
xchg
mov
movsl
jo
dec
inc
es
add
cmp
xchg
shrl
mov
lret
lahf
jle
and
stos
add
ret
jge
dec
inc
push
pushw
sub
xchg
and
cmc
mov
push
xlat
xor
mov
xor
repnz
in
fdivrs
push
sub
or
push
xchg
add
xor
orb
out
pop
in
data16
sub
mov
dec
cld
xchg
stc
sub
movsl
mov
insl
mov
rorl
mov
aas
dec
popa
faddl
add
movsb
adc
xchg
mov
mov
mov
loop
jg
sbb
mov
outsl
or
out
cmp
pop
in
scas
stos
mulb
test
out
divb
test
mov
jecxz
mov
mov
imul
in
imul
push
add
xor
popf
push
push
pop
scas
mov
jb
mov
xchg
sti
pop
mov
fld
das
cmp
xchg
fadds
add
cmc
xor
pop
je
repnz
and
sub
aaa
faddl
or
stos
push
jnp
in
lcall
adc
bound
mov
cmp
pop
in
xor
stos
mov
mov
push
xor
es
scas
ljmp
sahf
fsubl
ljmp
lds
fistpl
sarb
bnd
sarb
bnd
push
sti
and
pop
add
sbb
js
mov
clc
cmc
push
mul
pop
pop
mov
jl
das
stos
and
xorb
lea
insb
fdivl
pop
inc
or
inc
ss
mov
push
out
dec
shl
out
movsb
push
shll
or
add
jecxz
jg
jge
lods
filds
aas
push
mov
rolb
and
roll
out
push
adc
inc
add
pop
pop
jne
jmp
sub
and
stos
pop
xchg
pop
stos
mov
bound
xor
and
mov
mov
pop
fiaddl
notb
loopne
mov
out
push
int3
aad
xor
in
daa
ljmp
andl
shl
loope
sub
or
jecxz
push
in
pop
jnp
jne
dec
mov
cmp
xor
push
pop
mov
sbb
jns
dec
shlb
and
push
xchg
lahf
jl
xor
pop
outsl
movsl
inc
jecxz
lret
mov
fbld
and
push
push
movsb
loopne
pop
mov
push
mov
or
sbb
scas
xor
rorl
push
mov
or
pop
mov
and
jbe
mov
ja
hlt
pushf
aaa
cli
xchg
inc
push
cmpsb
mov
iret
push
xlat
xor
nop
cmp
xchg
js
and
out
daa
sub
cmp
sub
es
cltd
dec
cmp
fadds
and
shl
mov
stos
in
mov
sbb
inc
and
dec
pop
mov
adc
loope
push
push
loopne
sbb
pushf
sbb
sbbb
leave
cmpsb
inc
fidivs
mov
jb,pt
add
aam
insl
popf
jl
flds
xor
cmp
pop
in
push
xor
cmp
movsb
insb
cmpsl
cmp
push
ljmp
fistpll
std
sti
cli
or
sbb
pop
and
pop
stc
std
push
testl
lret
mov
xchg
into
adc
mov
xchg
addr16
icebp
pop
sub
ret
ret
ja
out
stc
insb
fwait
cmp
adc
ljmp
fildll
sbb
das
ds
cltd
or
loope
and
jnp
movsl
ds
adc
mov
mov
fildl
loope
test
lods
cmc
out
cmp
fidivs
lret
mov
aad
hlt
push
pop
and
cmp
gs
fisubrs
pusha
pop
mov
andl
push
jge
nop
and
aam
mov
lret
ret
jno
scas
xlat
pop
adcb
fcmovb
mov
ja
pop
hlt
pop
dec
imul
dec
xorl
adc
jl
loope
push
outsb
ss
xchg
adc
mov
cld
add
repz
xor
jae
lcall
push
inc
dec
xor
push
jbe
mov
out
fisttps
cltd
mov
adcl
add
xorl
ret
dec
push
fsts
push
or
xor
or
fdiv
push
cs
fisttpll
mov
jno
fs
pop
mov
pushl
dec
pop
xor
and
mov
testb
pop
mov
inc
dec
pop
insb
inc
daa
jge
pop
jnp
jg
in
xchg
cmp
out
addr16
jp
inc
jns
adc
xchg
mov
lcall
xchg
push
cltd
movb
inc
adc
sahf
cmp
iret
push
sahf
in
sbb
jge
lods
clc
cmpsl
push
mov
loop
push
adc
cmp
mov
add
addb
jo
cmpl
ljmp
inc
push
jns
pop
add
stos
js
cmp
sub
int
mov
aas
cli
enter
and
outsb
jl
xlat
mov
imul
int3
push
or
in
shlb
shll
inc
pop
and
frstor
loop
popf
or
les
sbb
xlat
outsl
pop
inc
in
pop
mov
out
aam
dec
rcrl
repnz
ror
dec
adc
add
mov
and
sbb
add
and
arpl
dec
and
outsb
sti
in
mov
fwait
xor
loope
mov
adc
scas
or
inc
adc
cmp
enter
inc
in
and
add
inc
dec
test
xchg
rcrb
iret
add
icebp
ljmp
arpl
jp
sbb
mov
pusha
daa
add
xor
fstl
push
cld
mov
jmp
push
insl
icebp
scas
sahf
pushf
ret
sbb
xchg
mov
adc
sbb
int
mov
lds
aam
sbb
xchg
test
movsb
sub
ljmp
jg
pop
sbb
fmuls
cmp
int
or
nop
pop
int3
mov
dec
adc
das
dec
jnp
and
push
pop
fsts
sub
mov
into
lahf
fs
insb
je
jmp
int
push
std
inc
push
pop
pop
loopne
call
hlt
test
mov
cltd
sub
insl
push
aad
cli
xchg
fidivl
stos
fldenv
adc
cmpsl
jno
out
xchg
add
sbb
jge
in
push
lea
call
inc
xchg
shrl
insl
xorl
les
dec
fsubrs
push
cwtl
fstpt
rcl
xor
mov
sub
fstps
add
and
adc
or
add
icebp
out
adc
mov
jb
jne
or
daa
jne
call
xchg
or
mov
pop
sbb
adc
stos
mov
sub
out
js
and
sub
ret
das
sub
xor
or
and
insb
imul
fildll
movsb
jbe
sbb
dec
fwait
cltd
jge
jb
mov
xor
add
int3
icebp
loopne
mov
adc
sbb
and
daa
loopne
sahf
xor
add
std
insb
adc
int3
jge
adcl
dec
dec
fnstsw
mov
dec
ss
pop
or
addr16
sbb
mov
or
cmp
imulb
sbb
xchg
test
dec
mov
into
jge
mov
roll
jge
mov
xor
mov
pop
mov
rcrl
pop
std
or
test
das
mov
lds
push
push
pop
sahf
jb
imul
scas
or
or
jb
adc
fcomps
std
lock
out
dec
jo
xor
add
cmc
pop
fsubrl
ja
ret
xor
jae
lock
add
out
rcl
sub
mov
and
mov
shr
icebp
add
mov
mov
jnp
es
xchg
iret
xor
xchg
xor
mov
jle
ret
cmp
hlt
lods
negl
lcall
fs
outsl
or
xchg
mov
inc
and
fiadds
aam
pop
pop
xor
data16
jne
cmpb
xchg
jno
test
sbb
int
push
xchg
or
push
arpl
pop
xlat
xchg
in
dec
out
insl
dec
sub
mov
ds
adc
movsb
dec
into
fbstp
xorl
xlat
xchg
aad
mov
das
jg
sbbb
pop
test
push
jl
push
mov
pop
push
lret
mov
pop
loop
gs
sarl
popf
adc
add
repz
jns
mov
aad
leave
inc
push
xor
adc
mov
mov
xor
lock
leave
into
loope
rol
hlt
mov
sbb
mov
mov
cmovg
cli
xchg
and
xchg
mov
mov
rol
dec
pop
movsb
mov
popf
iret
jge
xchg
push
fistps
sar
fdivr
test
add
mov
push
push
adc
ljmp
pop
adc
pop
push
data16
xchg
mov
cwtl
mov
ljmp
popf
add
pop
mov
xor
jecxz
loope
hlt
adc
xor
cmpsl
bound
jne
lods
jmp
mov
repnz
and
add
and
cmpsl
add
push
mov
jge
dec
sbb
pop
cmpsl
pop
ljmp
roll
jl
push
cmp
jne
divb
loopne
rorb
jns
xor
pop
pop
test
or
jo
mov
mov
cld
cmc
fisttpl
sub
mov
pop
lea
mov
imulb
cmpsb
push
fldl
and
hlt
xor
adc
popl
mov
call
les
popf
jp
xchg
xorl
das
push
or
dec
jbe
sub
push
push
mov
jae
shlb
dec
nop
jg
out
xchg
gs
mov
cmpsb
daa
popf
sub
mov
sbb
or
nop
inc
pop
lock
insb
inc
push
clc
mov
stos
lods
mov
es
fldcw
xchg
and
xchg
gs
push
fiadds
and
sbb
push
in
or
rcl
rcrl
stos
int
inc
jge
cmp
or
xchg
addr16
pop
clc
mov
or
vpsubw
jle
jns
pop
xchg
and
aas
and
fmull
pop
fcmovnu
cwtl
sti
popf
mov
insb
sbb
lret
mov
cmc
rclb
push
adc
dec
ret
pop
push
in
ljmp
xlat
mov
xor
mov
mov
push
cmp
in
push
lods
mov
incb
imul
addr16
ss
fnstsw
jl
pop
jnp
jb
mov
push
adc
mov
dec
dec
sub
and
inc
lods
mov
ret
dec
jecxz
sub
xchg
pop
stc
cli
movsl
daa
lahf
adcb
pop
sbb
movsl
ficoml
adc
jno
push
pop
xchg
sub
inc
inc
jne
xchg
jl
cmpsb
fildll
sub
push
inc
inc
mov
leave
fnstenv
inc
out
cwtl
xor
icebp
cmp
pop
hlt
xorl
aam
jle
lods
dec
rcrl
push
notb
xor
ret
aad
mov
mov
fistps
stos
cmp
mov
push
push
add
outsb
cmpsl
and
adc
insb
add
vpmovm2d
xor
mov
out
mov
cmc
insb
cmpsl
push
fiadds
push
ret
add
add
popf
loopne
lret
aad
stos
xor
not
sub
testl
cmpb
mov
inc
sub
xor
mov
push
xchg
call
push
lea
test
add
mov
shlb
ds
outsb
loop
ss
mov
popf
fisttpll
xor
add
push
sub
stos
and
mov
std
jno
inc
fnop
bswap
push
arpl
shrb
mov
mov
xlat
jp
pop
and
adc
stos
cmp
ficompl
cmp
jl
mov
popa
mov
mov
sti
enter
dec
and
rclb
gs
sbb
jle
and
out
pop
or
mov
in
in
lods
pop
aas
add
adc
ret
pop
jp
mull
aam
call
in
jno
mov
cltd
mov
adc
xor
mov
hlt
mov
jle
fsubs
xlat
js
jae
in
mov
into
mov
inc
sbb
mov
enter
iret
dec
in
add
xchg
jnp
imul
sbb
sub
sub
sbb
or
rclb
and
adc
lahf
pop
push
push
insl
shll
jno
std
push
shll
bnd
sub
inc
sub
lea
sahf
loop
xor
subl
insl
filds
cmp
lds
dec
and
inc
in
iret
cli
fistpl
rcr
in
mov
or
cmp
ljmp
orl
jecxz
or
imul
xchg
shlb
dec
clc
inc
xchg
cld
mov
inc
xchg
dec
and
nop/reserved
scas
test
sbb
jne
in
js
cmp
sub
lds
jg
in
scas
call
cmp
loope
js
ja
xchg
aas
sub
cltd
push
or
adc
push
add
xor
outsl
insl
mov
mov
mov
les
das
sub
insl
push
jl
pop
mov
loopne
mov
mov
add
pop
mov
sub
mov
xor
or
dec
fcoml
and
inc
push
mov
push
fstps
mov
sbb
leave
shrb
ds
test
testl
stos
cli
das
xor
test
and
xlat
pop
pop
pop
push
outsl
mov
lea
stc
add
sbb
mov
mov
dec
repnz
sbb
push
mov
in
sti
xchg
loop
scas
loope
sbb
adc
adc
insl
ds
cmp
iret
add
mov
xchg
gs
das
pop
repnz
push
pop
sbb
cmp
pusha
loope
pop
xor
cmp
push
aam
stc
popf
adc
mov
sub
mov
jne
or
mov
mov
sub
sahf
pop
inc
or
push
stos
xor
xor
xorl
mov
ficoms
push
cld
xchg
or
cli
mov
out
pop
push
sbb
lahf
xor
test
push
into
sbb
jmp
lods
sub
aam
negl
shrl
leave
sbb
cltd
popa
push
outsl
sarb
pushl
cli
and
je
js
cmp
mov
sub
add
call
pop
xchg
in
movsb
imul
bound
in
test
mov
dec
xor
lahf
cmp
xor
aam
jae
sbb
mov
adc
mov
ffreep
outsl
orl
xor
imul
cmp
adc
adc
sub
xor
mov
neg
into
and
sub
movsb
push
cld
push
nop
dec
sub
pop
repz
push
mov
fistps
xor
pop
and
push
pop
push
inc
adc
fdivs
rorl
out
adc
test
lock
and
int
aas
mov
mov
mov
jns
mov
xchg
ja
iret
test
sub
outsl
sti
stc
repz
addl
xor
idivb
rcrl
popf
push
cmp
arpl
stos
mov
add
add
int3
cmp
ficoms
aad
or
xor
push
pop
and
pop
outsl
pop
cmp
testb
mov
mov
out
push
adc
mov
sbb
stos
cmovp
cmp
clc
xchg
sub
nop
lea
shll
nop
aaa
fistpl
aaa
add
xchg
jo
scas
jl
test
push
jmp
mov
add
insb
arpl
push
dec
mov
and
push
mov
sti
inc
aad
add
jp
jle
xchg
push
testb
and
jo
outsb
mov
pop
cmp
mov
xor
out
out
xor
pushf
lods
push
jmp
mov
adc
xor
int3
cmp
inc
sbb
mov
fsub
add
xchg
sub
sbb
mov
lock
out
fucomip
mov
push
mulb
xor
jno
jecxz
insl
dec
ss
test
fsubl
daa
push
jecxz
loope
sbb
cmp
sbb
je
push
mov
cltd
lock
pop
inc
mov
sub
sub
lcall
aas
mov
jb
inc
popa
lds
test
mov
pop
enter
add
jle
adc
lea
add
ljmp
decl
push
push
dec
imul
xchg
sub
mov
sbb
loope
jno
inc
push
cmp
loop
out
mov
fnstenv
notl
dec
sbb
dec
test
cmp
adc
or
push
inc
call
xchg
sbb
xchg
int
push
mov
mov
xchg
xor
push
xchg
push
pop
fistpl
test
pop
adc
jae
je
inc
stos
stc
add
pop
in
jb
les
adc
scas
sbb
mov
and
sbb
fdivrl
mov
jo
nop
sbb
mov
clc
xchg
js
xchg
jb
xchg
jecxz
gs
mov
test
inc
push
sbb
mov
add
aad
mov
sbb
mov
push
jae
jbe
cmp
mov
add
in
lods
jnp
fcomps
or
xorps
xchg
test
repnz
fcom
pop
in
mov
std
pop
add
sbb
pop
imul
mov
add
add
xor
inc
fimuls
frstor
lea
mov
imul
inc
add
fnstcw
or
sti
mov
push
adcl
je
lret
inc
lds
fidivrl
push
inc
adc
imul
push
inc
add
test
push
in
lods
repz
mov
std
push
mov
out
leave
push
stos
pop
adc
pushl
push
fdivrl
in
cs
cmpsb
mov
pop
adc
pop
mov
xchg
out
repnz
out
lret
xchg
pop
jl
jle
lret
mov
inc
cmp
aas
popl
es
adc
mov
mov
adc
out
cwtl
in
cmpsb
sub
test
fwait
insb
inc
dec
int3
ljmp
push
fucomi
mov
mov
roll
mov
xchg
mov
mov
push
adc
aas
fs
lock
notb
push
or
mov
xor
jne
ja
sub
icebp
outsl
jl
pop
lds
sbb
lea
pop
push
int3
adc
push
jmp
mov
stos
das
mov
imul
cmpsb
push
pushf
out
fnstsw
jg
lret
push
sub
cmpsb
enter
subl
fwait
pop
push
lods
adc
je
and
ljmp
mov
mov
imul
lret
popf
push
push
lret
ficomps
sub
test
adc
hlt
or
inc
cmp
xor
lahf
and
xchg
jne
pop
adcb
pop
addb
jae
enter
lock
pop
out
xor
sbb
pop
dec
mov
call
loopne
sbb
jl
arpl
js
jg
mov
or
xor
pop
or
fistpll
sub
mov
and
test
xchg
scas
pop
lret
jge
sahf
outsb
popw
adcb
xchg
mov
push
sbb
rcll
pop
out
movsl
mov
test
sbb
xor
adc
mov
ss
jg
xor
outsl
out
les
lods
scas
cmp
add
and
inc
cmp
sbb
popa
sti
lods
icebp
push
iret
pop
push
daa
xor
fdiv
mov
popa
je
rcll
jb
js
movq
jp
mov
addr16
mov
jp
pop
adc
jns
pop
adc
ja
insl
subl
pop
sbb
jbe
push
adc
ret
mov
mov
adc
cs
sti
shr
jne
mov
push
adc
lods
dec
das
adc
ficoml
imul
sub
inc
stos
cmp
cmp
mov
int
and
xor
shrb
or
ljmp
mov
loop
jmp
push
stos
ja
or
add
movl
mov
pop
adcb
out
sti
es
daa
and
push
sub
add
pop
aad
addr16
xchg
loop
daa
imul
cs
aaa
popf
daa
cmpsl
mov
mov
dec
in
jnp
pop
gs
inc
mov
notb
scas
cmc
pop
sub
cmpsb
out
mov
clc
nop
xchg
mov
leave
mov
fcoms
mov
push
xlat
iret
mov
pop
loop
rcrb
lods
and
pcmpeqb
or
pop
add
mov
xchg
push
je
sti
cli
loop
testl
sub
pop
fwait
test
sub
rcr
and
mov
fs
mov
add
jns
hlt
inc
lcall
test
or
xchg
roll
outsl
dec
jbe
push
into
pusha
push
pop
hlt
cmp
orb
test
aam
cmpsl
pop
enter
loop
pop
popa
add
sbb
jo
mov
mov
loop
jnp
stos
outsl
jecxz
cmp
mov
movsb
out
and
inc
je
out
icebp
lret
sbb
add
mov
cltd
pop
out
jl
data16
dec
movsb
jle
aaa
ss
daa
mov
xor
pushf
xchg
arpl
outsb
mov
xchg
push
bound
sub
mov
loop
jecxz
mov
fcmovnb
and
adc
vpunpcklwd
pop
mov
stos
stos
psubsw
ljmp
mov
sti
pop
dec
sahf
orb
and
xchg
jo
imul
mov
dec
enter
sbb
sbb
andb
add
lgdtl
sub
bound
inc
enter
idivb
addr16
sbb
adc
repz
mov
jb
adc
sub
push
mov
rolb
std
and
test
jmp
mov
roll
xchg
repnz
js
cmp
xchg
mov
cwtl
js
mov
dec
push
cmp
and
sub
push
fs
insl
rol
test
loope
mov
leave
stos
je
mov
ficoms
cmp
jnp
mov
popf
adc
dec
sub
inc
fildll
and
stc
and
hlt
mov
pop
add
and
imul
into
inc
xlat
push
cmp
jae
jne
gs
cmp
mov
in
shll
mov
push
aas
enter
jecxz
iret
mov
int
xor
jle
mov
insb
movsl
jb
push
leave
aaa
sbb
out
dec
rcrb
hlt
pushf
add
addb
gs
mov
cli
imul
or
loopne
xchg
sbb
jno
push
fnstenv
cmp
sub
stos
jl
inc
imul
and
mov
pop
sbb
andb
je
jae
jb
sub
xor
mov
pop
lea
idivl
xchg
js
pop
xchg
and
push
dec
inc
mov
push
cmp
vmulss
icebp
popa
sub
mov
sub
dec
imul
cltd
loopne
es
or
pop
mov
cmp
and
dec
push
mov
mov
or
fadd
mov
jns
out
scas
inc
xor
mov
testb
xchg
pop
mov
fcoms
jne
mov
or
xchg
jne
shlb
mov
inc
mov
or
sub
inc
mov
xchg
in
and
sub
ja
adc
fldt
lcall
scas
cmc
xchg
arpl
jecxz
inc
xlat
fnsave
add
mov
cmp
and
mov
int3
mov
or
jl
mov
dec
sarb
adc
jmp
test
insb
fiaddl
xchg
mov
icebp
sbb
pop
sahf
dec
sub
mov
or
push
popf
adc
insb
movb
pop
andb
add
addr16
sub
adc
pushf
jmp
cmpsb
jmp
leave
xchg
sbb
jl
dec
or
fabs
and
mov
push
cltd
fdivrp
xchg
lods
rcll
mov
clc
jg
and
cmc
popf
push
mov
shlb
mov
lock
lcall
inc
jns
popa
test
faddl
decl
aad
ds
push
sub
adc
int3
jb
pushl
movsl
xchg
push
aam
out
pop
xor
pop
pushf
dec
mov
fisttpll
jae
mov
out
xchg
mov
xchg
sbb
cwtl
jbe
adc
jl
jno
push
pop
inc
rclb
mov
or
lea
push
push
test
jno
sbb
loop
repz
shrb
push
cmp
dec
dec
inc
ss
xchg
dec
cmp
es
and
cmp
outsl
sub
mov
hlt
sahf
out
add
push
mov
je
push
sub
add
adc
jb
mov
inc
testl
cmp
mov
mov
jge
decl
inc
inc
lcall
out
pop
lahf
xchg
insl
pop
ret
mov
sbb
mov
call
push
es
into
add
and
xchg
xchg
pop
shr
mov
inc
inc
xor
adc
adcb
sub
add
mov
mov
jmp
fisubs
push
arpl
mov
outsb
cmp
arpl
or
insb
loop
popa
dec
popa
jb
enter
adcl
push
popf
sub
jnp
add
push
fldenv
xchg
jae
mov
rcll
pop
daa
movsl
pop
pop
shlb
shlb
add
mov
inc
ret
mov
in
xor
mov
fisubs
dec
je
xor
in
movsl
cwtl
mov
gs
pop
add
cltd
add
mov
inc
push
arpl
mov
out
jne
test
pushf
pushf
pusha
push
or
xor
repnz
jnp
jg
push
fistps
psrad
xor
xor
and
xor
cmp
mov
ret
das
xchg
scas
loope
addl
pop
mov
pushf
push
test
inc
xchg
into
jne
inc
xchg
out
pop
fistps
cmp
call
lods
and
sub
or
lret
mov
shl
and
cmc
out
mov
dec
inc
ds
popa
jno
repnz
sub
mov
aaa
jne
lea
mov
movsb
adc
mov
cmpsb
mov
dec
or
enter
mov
push
in
xchg
jno
jno
add
jl
fcmovnbe
mov
js
cmp
inc
lds
out
xor
mov
mov
movsl
popa
jo
jnp
repnz
xchg
xor
mov
stos
sub
test
inc
outsb
in
hlt
lret
mov
add
pushf
cli
call
jg
dec
and
outsb
jb
imul
or
test
push
sub
add
pop
cld
sub
sub
cmp
adc
sbb
and
mov
dec
or
mov
xchg
jle
adc
sub
or
mov
cmp
xchg
mov
movsb
lods
mov
xor
jno
lock
mov
push
lea
and
popa
gs
jg,pn
scas
cli
shl
ljmp
adc
push
fwait
daa
mov
and
repz
andb
pop
ss
push
outsl
jg
add
es
mov
xor
andl
fmull
imull
cmpsl
lock
sahf
mov
int3
aad
cmpsl
or
xchg
xchg
arpl
int3
js
adc
push
decl
bound
xchg
xchg
ret
pop
pop
pop
pop
inc
adc
mov
out
dec
push
adc
lret
shlb
mov
xchg
push
inc
stos
sub
ja
in
jmp
push
dec
subl
push
add
test
stos
lret
or
pop
pop
out
pop
imul
test
rolb
xchg
lahf
inc
mov
cld
cmp
popa
lcall
mov
dec
cmp
sbb
insl
pop
cmp
arpl
jnp
sbb
inc
xchg
addl
and
push
sub
aam
fucomip
mov
loopne
xchg
pop
cmp
ds
add
outsb
xor
mov
add
adc
jle
and
adc
mov
clc
and
icebp
or
int3
movsl
jns
test
ja
pop
cwtl
add
or
pushf
push
jns
inc
and
enter
dec
or
jl
lret
test
xchg
mov
sub
push
sub
lods
cmp
lock
fucomip
mov
ljmp
inc
stc
lret
adc
inc
fiaddl
xor
unpcklps
fstpt
inc
out
cmp
daa
test
pop
inc
frstor
nop
jp
popa
mov
mov
jae
cli
in
mov
pusha
insb
adc
xor
xchg
xorb
scas
cmpsl
lods
icebp
fadds
jg
mov
outsb
out
push
mov
mov
nop
jae
inc
fldcw
adc
sbb
pop
cli
and
movsl
jge
jb
ss
sub
stos
inc
sbb
cmp
jmp
pop
mov
push
add
jp
fldcw
hlt
pop
mov
std
jbe
or
pusha
cwtl
lahf
mov
in
pop
pop
stc
leave
dec
jge
jg
jns
adc
or
sti
and
lret
or
test
dec
sbb
lds
mov
lock
sub
es
imul
xchg
xchg
push
sub
cltd
xchg
rol
push
adc
sub
adc
int
mov
push
sub
jno
pop
bound
mov
xor
xor
notb
mov
adc
enter
cmp
sub
xor
inc
fcomi
into
imul
xchg
into
sahf
push
pop
out
jge
inc
jmp
cmp
in
xor
cli
loop
sbb
std
dec
es
or
jno
xchg
jp
addr16
cmp
mov
aaa
mull
enter
in
loop
scas
arpl
mov
add
movsb
lcall
js
popa
mov
lods
push
or
mov
xor
push
pop
aam
daa
and
mov
and
and
lret
orb
adc
sub
cmp
adc
or
shlb
fwait
movsl
or
push
jl
addr16
mov
test
xchg
cld
adc
jbe
jl
loopne
fcomps
insl
out
fwait
fwait
push
xchg
repnz
dec
jmp
andb
dec
insl
mov
jns
outsl
push
fsts
loop
push
shll
inc
dec
add
les
call
int3
push
test
fisttps
push
add
cmp
push
lock
mov
lret
call
add
outsl
movsb
jno
jne
les
jg
ficoml
js
rorb
bound
xor
cli
push
repnz
stc
out
in
idivb
cmp
out
jge
pop
mov
inc
test
aam
and
pop
gs
hlt
and
jge
icebp
and
lods
jmp
adc
or
xchg
cmpsl
push
jmp
sub
popa
and
push
add
push
mov
addr16
sub
xchg
cmp
cmp
add
pop
push
lea
out
cli
adc
xchg
inc
inc
push
jmp
repz
push
inc
mov
pop
push
ret
pushf
xorb
dec
out
in
imul
and
daa
mov
xchg
movsl
push
jecxz
add
arpl
mov
mov
dec
dec
pop
push
aas
push
rcr
movsb
aam
pushf
sbb
in
std
into
faddl
push
ret
ret
mov
pop
xlat
cmpsb
adc
jge
jnp
daa
and
fbstp
adc
aad
jo
xor
and
mov
push
ret
mov
mov
sbb
adcb
add
add
fwait
test
xor
mov
cmp
push
lds
cld
gs
imul
icebp
jge
sub
outsb
sar
lret
jmp
stos
aad
divl
mov
push
push
ljmpw
sbb
xchg
hlt
push
mov
jne
sub
das
test
push
fwait
cmpsl
lds
cli
push
pushf
push
push
xlat
repz
push
jno
out
and
inc
push
sbb
inc
aam
inc
test
lret
push
fistl
mov
xchg
xor
sub
test
out
inc
mov
das
inc
outsl
mov
add
popa
push
sub
rcrb
mov
cmc
cmp
add
dec
test
imul
add
xor
lret
mov
rcll
sbb
jecxz
lret
inc
rorl
push
mov
dec
gs
inc
dec
aad
push
mov
xor
add
xchg
bound
push
cmovle
clc
xor
add
lods
loope
pop
int3
pop
in
jecxz
mov
in
stos
jle
xchg
jmp
mov
les
jmp
xorb
enter
mov
lret
pop
or
xchg
scas
xchg
loopne
and
roll
xchg
inc
hlt
and
xchg
sub
fldt
hlt
adc
xchg
push
push
pop
cmpsl
add
ss
ja
sub
jp
xor
inc
and
test
sub
inc
mov
dec
sti
sbb
push
jmp
pop
repnz
sbb
mov
enter
and
cld
sub
pop
or
jne
cwtl
clc
ficomps
and
in
xor
inc
pop
sbbl
jmp
lcall
rol
repnz
shrl
xor
test
movsl
in
dec
add
xchg
jnp
stos
dec
dec
sub
xor
adc
lea
popf
and
add
xor
sbb
jp
dec
push
mov
push
sti
pop
rolb
movsl
cmp
adc
xchg
sbb
lcall
in
xchg
lea
cmp
inc
outsb
stc
dec
sarb
rolb
paddusb
lock
push
or
repnz
mov
lret
inc
loope,pt
das
sub
mov
sbb
andl
pop
sti
dec
fcompl
mov
mov
cltd
push
enter
mov
inc
dec
add
mov
loop
movsl
scas
out
ficoms
mov
data16
mov
rcll
out
rcr
mov
jae
adc
call
or
mov
pop
mov
xchg
adc
inc
xchg
icebp
ljmp
iret
mov
push
hlt
push
lods
addb
xor
andl
sub
push
out
insl
ret
cmp
mov
dec
jo
jbe
inc
mov
insl
mov
jl
xchg
in
add
mov
mov
cmpsl
inc
add
aad
xchg
mov
insl
inc
shl
pop
and
inc
add
sub
mov
pop
jnp
andb
aad
mov
scas
lret
sbb
dec
int3
mov
fsubr
or
decb
cld
cld
mov
sub
cltd
imul
aad
mov
inc
add
xor
push
cltd
and
mov
sbb
lea
cmp
jmp
stos
dec
mov
cmp
les
cmp
add
sbb
pop
popa
loope
inc
in
dec
shll
aam
mov
cmp
dec
std
mov
fnstenv
setnp
addr16
shrl
pusha
push
lock
out
std
cli
sbb
dec
cld
fcmovnbe
adc
popf
xchg
shr
aas
or
dec
inc
mov
aam
negl
or
jbe
mov
dec
xchg
pop
in
jb
test
fcomp
data16
lods
andl
mov
pop
xor
jb
out
and
xchg
mov
ljmp
mov
ss
mov
ret
sbb
cld
subl
icebp
movsl
cmpsl
dec
add
mov
push
imull
js
shlb
out
fisubrs
int
pop
rcrl
inc
inc
mov
mov
inc
jnp
push
push
cmpsb
cmpsb
cmp
ss
stos
xchg
dec
dec
adc
into
popa
mov
push
loopne
jns
sahf
inc
jecxz
mov
xor
iret
cwtl
add
cmc
lods
mov
xchg
testl
iret
sti
cmp
add
and
add
add
pop
cmp
mov
lea
orl
jb
movsb
jo
in
inc
int3
out
es
sub
ja
mov
movsl
mov
rorb
or
test
dec
lds
adc
rolb
cli
xchg
pop
xchg
sbb
mov
and
add
sub
jp
mov
sarl
or
loop
rorl
pop
sbb
in
push
aas
fdivrl
adc
call
ds
movsb
pop
jb
popf
inc
jp
addb
popf
mov
adc
inc
insl
fs
nop
dec
movsl
xchg
stos
mov
lods
aad
in
push
adc
mov
mov
ss
cli
dec
repz
xchg
repz
jge
lahf
and
add
xor
mov
jb
jl
negl
cld
inc
or
ret
mov
js
movsb
ret
into
aad
shr
pop
in
sarl
jle
sbbl
int3
jns
inc
ja
lahf
ret
gs
dec
mov
cmp
xlat
mov
gs
in
push
jbe
sbb
nop
xor
icebp
ret
and
mov
shl
push
lahf
js
pop
add
cs
imul
xor
mov
jno
lret
and
push
jns
xor
shl
pusha
insb
mov
pop
loop
rclb
sub
adc
fstpl
push
jp
lret
fcoms
jl
test
and
mov
or
mov
sti
addr16
xchg
fisubl
mov
pop
dec
mov
inc
mov
je
pop
outsl
js
mov
pop
test
enter
mov
ret
icebp
dec
sub
and
mov
cmovbe
push
inc
out
jge
mov
lret
pop
lahf
loopne
addr16
rclb
rcr
icebp
mov
jns
ja
jne
xchg
dec
xor
dec
fidivrs
iret
std
pop
mov
in
mov
sub
rolb
cmp
ljmp
and
mov
cltd
jmp
addps
xchg
cmc
push
sub
adc
mov
movsl
and
inc
jle
in
or
jl
jnp
shlb
and
mov
sbb
pop
inc
jge
sbb
mov
repz
aam
out
loope
xchg
ds
or
fs
jbe
pop
sti
add
dec
jl
popa
gs
movsb
mov
outsb
add
test
mov
add
mov
mov
mulb
pop
leave
lods
xchg
and
adc
sub
or
fwait
cmp
cmp
lods
into
loop
adc
leave
scas
loop
add
jmp
adc
in
sbb
jmp
and
and
cld
fisubl
lcall
lock
jo
fiaddl
ja
or
shlb
dec
fcmove
cmpsb
mov
stos
icebp
bound
push
das
aad
test
mov
jbe
cmp
and
pushf
push
pop
pop
mov
jns
lahf
jno
mov
rclb
aaa
jnp
sbb
mov
adc
fimuls
xchg
or
xor
js
adc
push
xchg
testl
out
in
stc
sbb
inc
les
in
sub
rorl
daa
jmp
mov
xchg
mov
xor
shlb
cmp
dec
shrd
xor
repnz
mov
cltd
sbb
and
adc
push
jl
adc
adc
fildll
or
jb
cmp
or
jle
jo
or
mov
imul
add
xchg
adc
loope
or
and
mov
mov
cmp
pop
dec
lret
inc
insl
in
lahf
outsb
popaw
jb
sbb
int3
jae
movsb
push
lods
inc
mov
mov
jmp
ficoml
xor
push
psllq
dec
sbb
decb
bound
sbbl
les
call
push
fsts
and
sub
or
add
push
int3
fidivrl
mov
testb
mov
pop
add
sbb
jle
inc
push
pop
cli
jmp
arpl
in
pop
popa
jno
cmpl
and
adc
cld
icebp
daa
out
loope
loopne
hlt
rcl
outsb
cli
arpl
into
lods
dec
jno
sub
loopne
and
je
movsb
cmp
movsl
das
mov
xchg
mov
push
in
push
or
sbb
xor
cwtl
jns
pop
push
jnp
push
outsl
insl
or
in
addr16
std
arpl
scas
stos
sbb
xchg
mov
push
in
adc
jno
inc
sahf
mov
fldt
lahf
add
and
adc
cmp
cld
dec
int3
call
mov
flds
mov
mov
cld
pop
xor
pop
enter
fsubs
cli
shrl
sbb
cltd
std
inc
sub
jno
xchg
jp
mov
out
push
jnp
sti
fsubrl
sahf
int3
and
dec
push
sub
mov
outsb
xchg
xchg
aad
inc
mov
push
cld
out
sarl
fidivs
stos
outsl
or
mov
xor
sbb
clc
jmp
add
or
xchg
mov
mov
pop
and
int
fstl
or
add
mov
cmovp
repz
mov
jge
mov
mov
add
xor
xor
sbb
lea
cmp
lret
xchg
adc
pop
pop
outsb
inc
cmp
fisubs
pop
out
xchg
mov
mov
add
sti
fidivrl
or
dec
jmp
mov
gs
sarb
stc
cmp
clc
inc
dec
loope
leave
insb
mov
jae
loope
xchg
bound
inc
shll
negb
pop
out
mov
cli
cmp
push
xor
add
add
mov
xor
push
jnp
xchg
roll
enter
pop
shlb
jb
scas
outsl
pop
cli
sbb
sbb
jae
insb
scas
push
ret
or
fcoml
and
loopne
pop
cltd
adc
in
mov
sub
pop
xor
outsl
out
flds
scas
mov
inc
mov
pushf
pop
xchg
push
push
push
loopne
std
out
arpl
inc
pop
popa
jne
push
mov
int
push
leave
mov
enter
push
leave
push
hlt
fistl
lahf
test
cmpsl
dec
sbb
popa
mov
mov
xor
pop
mov
push
nop
punpckhdq
dec
mov
pushf
fmuls
mov
fs
and
js
sub
fiadds
fs
das
das
inc
sbb
mov
mov
jo
dec
aam
iret
cltd
mull
popa
push
test
and
lahf
rcrb
push
call
and
test
sahf
push
or
sub
mov
pop
pusha
add
mov
xchg
popa
das
xchg
sbb
js
mov
push
fdiv
jl
sbb
jge
jmp
pop
cmp
lahf
push
dec
je
enter
rcll
push
dec
ds
testl
mov
in
pop
rcl
fcoms
push
das
add
mov
jp
pop
loope
stos
stc
arpl
in
jmp
jnp
xorb
sub
push
pop
lods
sub
shll
push
outsb
mov
shrb
scas
lret
mov
clc
pop
inc
mov
icebp
scas
fstps
mov
inc
push
push
mov
fisubrl
mov
repnz
pop
shlb
clc
or
repnz
fldenv
incl
and
into
cli
mov
repz
out
mov
mov
adc
gs
outsb
inc
dec
lds
mov
push
jno
rorl
push
shlb
dec
stos
xchg
cmp
pop
mov
out
stos
jle
into
mov
xchg
inc
popa
xchg
cltd
jp
subb
jno
add
test
mov
mov
test
stos
int3
xlat
jnp
dec
movd
adc
xor
repz
dec
lahf
mov
cltd
inc
xor
std
push
mov
push
inc
test
dec
and
lods
ret
dec
outsb
sub
bsf
jne
xorl
pop
jno
lret
stos
or
push
pop
rorl
fstps
in
inc
push
dec
add
jmp
outsl
jns
pop
gs
jmp
mov
inc
and
mov
xor
xchg
mov
hlt
cmp
inc
xchg
mov
and
xchg
test
mov
lods
dec
mov
shl
orb
rorb
cmc
les
sub
ss
das
push
pop
call
cmc
aad
cwtl
push
fnstcw
out
out
cmp
pop
mov
in
cwtl
inc
adc
arpl
aam
pop
call
pop
pop
out
mov
jl
out
lret
lea
jmp
inc
mov
mov
sub
ja
cmp
xlat
shll
lret
mov
lret
xor
mov
test
cltd
negb
jge
inc
pusha
push
loope
sub
dec
negl
mov
sub
push
test
loopne
gs
inc
ja
add
sub
movsl
in
insb
mov
or
push
ljmp
les
lahf
ret
ljmp
mov
push
jne
cmpb
jo
mov
aam
loop
aaa
aas
mov
dec
pop
pusha
mov
rcl
dec
mov
dec
xchg
add
sbb
orl
dec
mov
add
inc
dec
xchg
mov
push
add
xchg
insb
and
je
push
jb
pop
ljmp
pushl
lret
xor
push
movsb
push
in
cmp
jbe
stos
ss
fldcw
pop
push
push
xchg
adc
ja
xchg
enter
and
stc
inc
insb
xchg
and
lcall
in
push
dec
cld
inc
int
scas
pop
push
mov
mov
movsl
and
sbb
dec
lret
sub
mov
cmc
xor
ja
inc
pushf
mov
ljmp
pushf
push
stos
push
call
out
adc
mov
sti
add
push
xchg
inc
sub
in
jno
inc
loop
and
sub
mov
lods
test
jne
je
call
lock
dec
in
push
dec
dec
inc
add
xor
fwait
add
pop
dec
fcoms
fisttpl
popf
test
imul
dec
mov
out
iret
xor
or
pushf
cld
sub
addr16
add
pop
call
inc
fdivl
das
mov
or
enter
dec
out
mov
cwtl
test
daa
cmpsb
int
jp
mov
fnstsw
aas
ljmp
mov
in
ds
jecxz
pop
lods
pusha
add
repz
mov
mov
andb
lret
in
sub
in
jb
call
mov
pop
imul
pop
faddl
jp
mov
aaa
lret
cld
jge
add
add
xchg
sti
das
mov
add
in
cs
cmpb
pop
inc
inc
adc
in
addr16
cmp
aad
add
in
sbb
pop
scas
xor
lods
test
mov
mov
xchg
sar
popa
fstl
insl
aas
cmpb
pop
sbb
sub
push
sub
mov
xor
and
inc
push
sub
in
mov
fcmovnu
jb
cltd
add
into
mov
insl
jb
shrb
loope
jle
mov
cld
mov
arpl
rsqrtps
loopne
mov
jo
std
lock
or
mov
hlt
adc
pop
cmpsb
test
dec
jg
rcll
sub
cmp
mov
xchg
mov
icebp
mov
push
jo
pusha
sti
stos
and
sbb
stos
adc
xor
out
inc
or
neg
mov
sbb
sub
icebp
ror
jbe
and
cmp
int3
shll
es
sub
aad
add
out
cmp
jle
mov
xor
adc
testl
mov
sbb
and
movsl
sbb
dec
inc
dec
shll
stc
popf
sar
lss
xor
pop
sahf
push
add
test
mov
pop
pushf
xlat
cmp
iret
movsb
test
pushf
adc
adc
jp
inc
test
cmp
push
inc
ss
xor
adc
sbb
fwait
inc
xor
mov
pop
fsubrs
mov
adc
enter
cltd
mov
ja
push
std
in
xlat
mov
popa
mov
jo
pop
and
ret
dec
mov
jl
push
stos
loopne
sub
sbb
mov
cmp
ficomps
cmp
es
inc
sub
cld
ss
test
cld
jns
les
adc
jns
insb
dec
data16
mov
mov
adc
shlb
lods
lock
xchg
sub
iret
ss
negl
inc
mov
pop
shl
mov
pop
xor
xor
lahf
lcall
cmp
pop
cmp
add
shlb
lea
xchg
mov
insb
or
scas
xor
sub
lock
subb
jne
ja
mov
push
xor
stc
sub
outsb
mov
sub
push
sbb
jg
fadds
xchg
pop
stos
dec
js
push
flds
js
out
dec
pusha
dec
popf
sbb
lods
pushf
int
jno
cmp
outsb
mov
notb
push
popf
sbb
and
aad
xchg
xchg
lahf
nop
sarb
sarb
and
pop
pop
dec
jmp
xchg
ss
mov
sbb
push
add
sub
mov
daa
test
mov
push
out
push
mov
inc
sbb
shl
jmp
adc
roll
add
lods
mov
dec
movsl
shlb
negl
loope
lret
pop
push
popf
int3
stos
test
lahf
mov
sbb
sti
sub
fldl
into
ja
or
leave
dec
pop
cmp
fs
es
outsl
iret
mov
push
jns
push
int3
sub
cmp
push
sarl
cmp
roll
add
pop
pop
pusha
in
cwtl
stos
sti
mov
test
ret
jbe
test
and
add
in
pop
shr
jp
shl
sbb
or
addl
push
rcll
mov
test
pop
repz
test
xchg
lds
cmp
pop
aaa
cmc
sahf
or
jl
repnz
mov
mov
jle
xchg
inc
mov
mov
jae
adcl
push
mov
pop
faddp
push
xor
push
leave
mov
adc
repnz
mov
add
cmp
push
cmc
mov
mov
mov
mov
lods
mov
add
mov
xor
dec
or
popw
push
add
adc
add
lock
mov
repz
sbb
xor
mov
inc
push
sbb
pop
push
cwtl
fcompl
xchg
push
out
mov
mov
inc
aad
cs
ja
sbb
add
dec
shrb
dec
xor
test
push
lret
lock
mov
cmp
adc
sbb
cmp
ljmp
push
jg
inc
mov
loope
xor
int
ret
adcl
lret
rcl
std
pop
jno
aas
sahf
push
mov
out
lahf
push
ret
rcl
fidivs
mov
movsb
pop
out
push
jno
ss
or
adc
pop
mov
add
iret
xor
push
stc
or
leave
push
shlb
dec
ja
sysenter
jns
jmp
push
icebp
in
lahf
lret
mov
aad
lret
in
jae
sar
into
call
int
xchg
aas
dec
add
xchg
lods
cwtl
xlat
leave
loopne
mov
xor
jge
sub
int
sbb
pop
mov
imul
push
sbb
xor
inc
dec
jb
incb
idiv
sti
out
push
lds
repz
aas
jp
leave
adc
sub
mov
jne
jbe
test
dec
jle
mov
mov
ss
add
mov
call
xchg
outsb
push
sbbb
xchg
bound
cltd
lahf
stos
sbb
push
adc
add
jae
rcll
in
insb
jge
sti
mov
insb
scas
pop
call
mov
sub
sbb
fwait
lods
dec
in
div
in
imul
or
pushf
rcr
add
and
fs
xor
xchg
popf
pop
push
bound
push
out
imul
arpl
sbb
xchg
shr
das
arpl
jno
les
push
pusha
lcall
mov
cmp
les
popa
xchg
or
es
into
test
call
test
xchg
dec
xchg
cltd
clc
jno
mov
add
adc
fsubl
pop
orb
in
fnstenv
sbb
pop
cld
enter
jae
call
test
mov
and
out
xchg
in
lahf
mov
xchg
loop,pn
adc
xchg
dec
mov
jge
adc
xchg
add
xchg
mov
add
sub
cmp
das
incl
cmpsb
adc
or
add
jp
mov
test
jl
dec
mov
xchg
notl
ret
xlat
xchg
or
test
push
sbb
fnstsw
mov
sti
adc
adc
insb
xchg
negl
faddp
mov
mov
test
xchg
xchg
pminsw
inc
fildll
jno
hlt
sub
mov
cli
js
sbb
pop
xlat
fcmovnu
mov
push
jae
xor
mov
adc
inc
mulb
stc
dec
inc
or
into
sahf
ss
sbb
pop
shlb
rcrl
inc
and
iret
jp
mov
rcrl
fsubrl
push
mov
stos
cmp
mov
jge
jp
push
push
push
repz
lcall
test
xor
mov
pop
mov
cmp
cmp
xchg
addr16
lret
fstl
mov
enter
hlt
xchg
lock
inc
test
pop
out
xchg
shlb
outsw
lods
test
pop
std
addr16
aaa
test
dec
add
add
jne
lahf
push
cli
jbe,pt
jmp
ret
xor
movsl
sbb
push
test
add
pop
rcrb
xor
lret
pop
fs
scas
mov
push
in
cmpsl
negb
pop
test
out
dec
pop
dec
mov
cwtl
mov
xor
sahf
pop
jecxz
pop
sbb
lea
dec
inc
nop
xor
xchg
and
mov
pop
outsb
test
inc
dec
or
xchg
das
int3
clc
mov
js
fldl
roll
dec
int3
jns
mov
inc
adc
lods
xor
sarb
loop
push
cwtl
mov
mov
mov
fwait
adc
inc
jne
push
push
and
sahf
xor
std
rorb
lcall
shrb
xor
adc
xorb
push
cmpl
mov
inc
push
mov
or
push
inc
js
sbbb
cwtl
xor
ret
cld
bound
sahf
push
jecxz
cmc
fsubrl
mov
aad
xor
std
inc
adc
fldcw
dec
fcmovnb
inc
sub
sbb
in
outsb
icebp
pop
jge
pop
dec
call
sbb
xlat
aad
les
or
mov
push
dec
sahf
lds
cmpsb
out
popa
sub
gs
nop
or
lds
add
repz
movsb
mov
sbb
rep
cs
pop
nop
add
inc
jb
sub
sti
cmp
outsb
xchg
push
test
dec
xlat
inc
sbb
out
xchg
je
psrlw
xor
cld
dec
shll
push
xchg
frstor
and
xchg
xorl
jnp
fucom
cmp
nop
dec
gs
aad
dec
pop
jns
mov
inc
jecxz
outsl
add
fwait
push
ret
cmpb
xchg
jne
cs
cs
add
dec
dec
push
lahf
pusha
int3
xchg
ret
dec
inc
dec
cs
rcll
dec
pop
insl
jo
nop
pusha
scas
mov
jmp
ds
rolb
cmp
or
sbb
fildll
push
xlat
in
lods
push
add
rcll
enter
mov
or
sbb
mov
pop
sub
movsb
popf
mov
sbb
in
popa
cmp
mov
int3
ss
jp
or
icebp
add
xor
push
test
sbb
fsts
aam
nop
mov
in
jmp
test
mov
inc
add
jb
out
sbb
dec
sub
mov
imul
jl
popa
mov
dec
push
sub
sarl
icebp
pusha
arpl
push
ret
mov
scas
add
xor
es
imul
sti
orl
mov
and
sub
jmp
insl
pop
out
iret
dec
ret
cmp
aas
dec
repz
add
test
adc
lcall
aas
es
jg
cmpsb
mov
xor
add
nop
divb
xchg
push
mov
mov
shrl
test
lret
cmp
xchg
mov
mov
mov
incb
cld
loop
fcomps
mov
inc
push
jmp
cli
inc
test
pop
adc
jge
xor
pusha
push
in
push
pop
cli
mov
xchg
int3
in
iret
inc
xchg
scas
ds
clc
pop
mov
jl
test
sub
sarb
stos
movsb
or
fldenv
push
test
jle
sbb
mov
aad
mov
ret
push
fs
cmp
jmp
jbe
mov
testb
jno
xchg
in
sti
jmp
push
pop
int
xor
sub
push
out
dec
imul
hlt
jl
call
test
repz
inc
les
arpl
rcrl
push
mov
dec
jmp
sub
jnp
xor
mov
pusha
cmp
mov
xchg
fwait
outsl
cmp
jae
fwait
gs
icebp
pop
rorb
jbe
add
mov
lods
push
shl
movsb
pop
scas
xorl
cli
lods
stos
dec
daa
jg
dec
sarb
xchg
std
fcompl
mov
xor
inc
or
cmp
outsl
sti
stc
ss
mov
cmp
ficomps
jmp
idivb
cli
out
data16
dec
sbb
cmpb
push
mov
cmp
xchg
adc
pop
sub
sub
adc
shl
sbb
sub
into
js
adc
cs
mov
mov
dec
popa
adc
mov
sti
jge
mov
popa
and
inc
enter
pop
sbb
mov
scas
clc
lcall
or
pop
int3
mov
clc
incl
mov
out
inc
dec
dec
mov
xchg
fists
lcall
cmpl
sbb
xor
mov
cmp
push
pusha
cli
add
scas
je
outsl
sbb
scas
ficompl
push
sbbl
add
mov
xor
xchg
push
add
jne
out
fdivs
jo
mov
xor
bound
addb
push
fidivrl
sub
mov
lret
sbb
mov
push
sbb
mov
lcall
dec
jnp
in
ds
dec
push
pop
cmpsb
mov
sub
xlat
push
leave
in
and
iret
adc
fidivrs
orl
clc
jo
push
xchg
pop
nop
fisubrl
inc
js
sub
xlat
and
stos
imul
mov
leave
pop
icebp
jge
fstl
and
repnz
scas
mov
cwtl
movsl
jno
stc
je
mov
pop
xor
xor
mov
ret
lods
mov
cmp
adc
test
pop
flds
xor
lcall
add
mov
bound
jb
cld
hlt
cmp
pushf
xchg
pop
xor
mov
inc
xchg
inc
mov
cmp
xchg
and
shlb
pop
dec
stos
pop
push
jge
imul
in
fimuls
sbb
out
or
cmpsb
rclb
das
sbb
std
fmull
popa
lret
mov
or
dec
mov
mov
push
mov
dec
fsts
fsub
push
scas
movsb
xor
push
inc
xor
add
adc
adc
and
ret
mov
push
dec
inc
and
cmp
add
enter
outsl
mov
xchg
pop
popa
ds
cmp
and
mov
out
fwait
leave
xor
sub
clc
and
fmuls
insb
lods
shll
incl
sarb
cmp
iret
lods
cmp
xchg
cmpsl
popa
add
add
cmp
leave
adc
movb
arpl
xchg
scas
xorb
jecxz
sub
adc
out
xor
sub
xor
dec
nop
aaa
daa
inc
arpl
call
ljmp
test
xor
jg
mov
jb
rorb
pop
iret
mov
mov
adc
ficoml
or
daa
push
bound
mov
mov
mov
roll
fs
jmp
xchg
add
into
xchg
cli
pushf
enter
lret
inc
mov
clc
cmp
jp
in
int
cmp
pop
mov
cmp
lahf
fcomip
stos
orl
add
add
fdivp
pop
mov
in
mov
dec
cmp
adc
mov
adc
mov
loopne
shl
or
adcb
mov
adc
aad
sbb
jmp
pop
loopne
or
out
dec
jo
adc
icebp
icebp
cmpsb
mov
cmc
xchg
notb
mull
ja
push
roll
jo
fs
flds
push
cli
jb
mov
mov
pop
push
mov
scas
fildll
out
incl
or
jnp
das
pop
in
sub
xchg
int3
cmp
jle,pt
cs
mov
movsb
leave
adc
push
sahf
and
sbb
ret
adc
jl
sbb
inc
aam
arpl
push
mov
sub
sbb
int
push
or
lahf
addb
mov
sub
mov
jg
dec
adc
xor
ret
sbb
cmp
mov
rclb
out
aad
int
fsincos
pop
mov
icebp
test
sub
aad
add
lods
jmp
popf
cmp
xor
stos
inc
xchg
ss
sbb
sbb
cwtl
clc
push
aas
push
lret
rcll
jge
aas
ret
add
dec
add
adc
icebp
pop
mov
xchg
lahf
dec
loopne
fstps
push
in
push
cmp
xchg
in
leave
jb
fcoms
insb
js
icebp
xor
or
mov
or
dec
xor
push
aad
xchg
ds
ja
movsb
insb
dec
scas
arpl
loopne
mov
lcall
jp
push
mov
fmull
outsb
outsb
mov
addr16
scas
add
and
shll
sub
add
sbb
jo
add
sbbb
cmp
sbb
fsub
pop
ljmp
call
cltd
cli
push
lds
or
mov
cmp
xor
negl
clc
ljmp
xchg
or
dec
mov
and
push
fnstcw
sbb
dec
or
out
decl
mov
inc
pop
sbb
aam
sbb
imul
push
inc
ret
cmp
repz
fistl
push
inc
insl
je
roll
pushf
cmp
fistpll
push
ja
in
or
test
jnp
test
pop
mov
sti
xlat
sbb
aad
in
adcb
cmc
in
dec
movsb
scas
call
mov
jg
mov
sub
and
sbb
jecxz
loope
xchg
adc
cmp
nop
das
mov
jno
pushf
push
cmpsb
dec
pop
loope
sub
mov
cmpsl
mov
je
xor
stos
jecxz
pop
ljmp
test
or
pop
movsl
insb
dec
daa
add
push
fdivrs
data16
jo
mov
rcrl
loope
fcomip
movsl
cmpsl
add
orb
jbe
lret
cwtl
xor
icebp
cmp
das
stos
rorb
pop
mov
dec
sahf
xor
fldcw
and
dec
jge
mov
shrb
adc
xchg
xchg
and
into
out
sub
roll
repnz
shr
orl
add
iret
fisubrl
sbb
xor
ret
adc
sbb
cli
arpl
mov
fs
test
add
fdivl
xor
dec
cmp
in
mov
mov
adc
sbb
dec
lahf
jnp
pop
pop
lds
xor
icebp
jno
add
std
mov
ja
cwtl
sbb
repnz
dec
xchg
lret
push
mov
mov
dec
mov
xchg
adc
adc
pop
pop
mov
mov
cwtl
jg
cli
scas
movsb
leave
xchg
mov
xchg
mov
in
fdivl
jmp
loope
enter
add
hlt
jg
sub
inc
mov
pushf
mov
out
pop
cmpsb
or
or
and
scas
adc
mov
rclb
sub
out
mov
fmuls
inc
mov
and
push
xor
and
inc
xor
pop
jp
out
pop
imul
dec
cmp
xchg
inc
and
js
xchg
add
xchg
adc
js
xor
mov
and
lods
or
dec
sarb
int
cmp
notb
xor
mov
sbb
test
arpl
cmp
mov
pop
testl
out
hlt
movsb
add
cmc
mov
xchg
cmp
icebp
out
add
enter
aaa
dec
aaa
xor
jb
clc
loop
repnz
pop
adc
xor
mov
or
ret
pusha
or
ret
dec
or
into
xchg
aaa
in
jecxz
sbb
pop
dec
notb
aad
leave
testb
mov
negl
or
fwait
cmp
mov
ljmp
mov
xor
jb
insb
inc
icebp
shrl
pop
das
cli
out
pop
add
int
jecxz
cmp
lock
in
dec
in
mov
jne
sbb
gs
mov
cmp
jp
jnp
sbb
sbb
pop
imul
sbb
push
in
xor
out
test
mov
sub
js
adc
shl
pop
js
fs
sub
cld
mov
dec
enter
push
dec
cmpsl
test
stc
hlt
add
inc
repnz
cmpl
fbld
mov
jge
aam
dec
lahf
out
cld
mov
cli
xchg
inc
mov
mov
jg
and
or
movsl
or
inc
xor
inc
jns
leave
nop
jnp
push
arpl
cmp
xchg
mov
adc
add
push
les
sti
xlat
call
and
enter
test
mov
xchg
jge
dec
test
mov
lcall
xchg
sub
push
sahf
mov
xchg
rcrb
in
int3
nop
push
mov
btr
out
mov
xlat
pop
rorb
add
push
sub
cli
jp
insb
fiadds
fs
cmp
push
aam
adc
push
sub
cmp
andb
xor
int
addr16
mov
int
and
and
jo
sbb
lods
jnp
aad
test
push
mov
iret
add
hlt
test
sbb
test
insb
push
ds
fnstcw
pushf
into
mov
sbb
popa
shrl
pop
xor
lea
lret
jns
shlb
mov
sbb
xchg
adcb
insb
mov
sub
popa
xchg
cmp
jg
andb
mov
mov
dec
cmp
lds
inc
inc
out
es
mov
leave
clc
test
out
pop
clc
xchg
or
mov
or
and
test
arpl
push
jge
mov
or
loope
je
imul
xchg
add
rcll
fisttpll
dec
int
insb
ficoms
xor
pop
ljmp
dec
fwait
pop
adc
xchg
jbe
negb
jno
jb
sbb
xchg
fadds
nop
pop
imul
dec
sub
xor
mov
in
stos
jle
or
adc
popa
loop
mov
negl
test
pop
clc
add
adc
iret
outsl
mov
sarl
addr16
pop
jl
xchg
arpl
sbb
sub
das
cmp
jge
movsb
repnz
add
inc
lods
pop
jne
or
rol
xchg
pop
aas
mov
lock
mov
arpl
and
addl
and
sub
and
mov
cwtl
adc
pop
xorl
imulb
outsb
mov
and
mov
insb
cmc
cmp
std
test
push
setne
xchg
daa
jge
cmc
outsb
cmp
loop
fs
sbb
pusha
sub
cmpsl
fisttpll
aas
jb
out
xchg
dec
lock
jp
xor
push
mov
pop
imul
imul
and
jg
push
rolb
add
movsb
pop
int
cmpsb
pop
loop
xchg
ret
mov
leave
mov
xchg
ret
outsb
or
sbb
push
rcrb
xchg
jp
inc
ljmp
movsl
jo
jle
dec
inc
test
ret
outsb
jge
les
ja
jg
push
imul
and
jb
adc
leave
test
frstor
dec
inc
dec
loopne
mov
mov
mov
out
jle
into
mov
fdivrs
faddl
jl
cld
in
sti
lret
push
mov
addr16
xchg
and
mov
add
jle
loop
sbb
adc
nop
lcall
mov
aaa
add
adc
lret
out
pop
mov
mov
std
or
cmp
insl
ds
out
shll
sub
mov
rorb
pop
add
and
sbb
out
adc
js
sub
mov
jmp
dec
jnp
mov
jb
pop
aad
add
jne
addr16
cmpsl
gs
test
movsl
jp
lea
mov
mov
dec
push
stc
or
add
pop
add
jge
jne
xchg
loop
push
inc
inc
sti
std
push
inc
mov
out
int
and
leave
sub
jp
das
pushf
mov
inc
dec
lahf
les
cmp
sub
ljmp
stc
cltd
repnz
das
sarb
mov
pop
call
push
dec
es
and
scas
sbb
loop
andl
ljmp
and
and
xor
jbe
repz
mov
cmp
lds
outsb
or
and
out
loopne
sub
test
xchg
jns
adc
and
sbb
popa
dec
dec
insl
jnp
inc
mov
outsl
movsb
jo
insb
pop
mov
sub
jle
jns
nop
xchg
cld
dec
sbb
fs
sahf
dec
test
xchg
lods
stos
mov
fidivrl
inc
insb
ror
xor
add
sub
in
in
insb
xchg
jl
adc
in
add
in
insb
xchg
mov
daa
inc
push
sub
xchg
or
call
mov
jne
mov
jg,pn
into
dec
not
add
mov
iret
mov
inc
mov
loop
mov
adc
les
sbb
pop
cmp
nop
sbb
jnp
adc
loopne
inc
dec
xor
ret
or
les
cmp
or
mov
sbb
test
test
push
cmovs
dec
xor
test
mov
ds
cwtl
call
dec
imul
mov
sub
inc
testb
push
sub
jae
dec
push
les
stos
mov
sahf
cwtl
je
dec
fsubrl
inc
mov
add
pop
inc
jle
mov
rolb
loop
aas
sbb
cld
mov
popf
and
es
mov
out
es
cmpsl
es
cs
lcall
mov
sbb
xlat
mov
mov
out
fisubl
mov
daa
xor
cli
or
mov
lcall
sbb
icebp
loope
mov
fs
shll
into
repnz
pop
daa
out
pop
jns
ficompl
and
jge
invd
das
test
jbe
mov
adc
mov
push
cli
divb
xchg
in
sbb
jp
ljmp
bound
pop
add
jns
int
repz
imul
inc
sbb
ss
mov
add
cltd
into
test
fs
sbb
add
movsl
pop
pop
cmp
lods
and
push
xchg
out
andl
in
xchg
negb
adc
scas
sub
add
mov
les
daa
fwait
mov
ljmp
pop
xorb
jbe
daa
adc
mov
jnp
xorl
or
fprem
adc
ljmp
int3
mov
shlb
std
xchg
xchg
mov
fimull
out
ret
adc
bound
xor
push
sbb
pop
ds
jb
sub
inc
xchg
int
rcrb
outsl
xorb
xor
addr16
push
fnstcw
inc
sarl
jno
sbb
inc
dec
lret
or
sbb
arpl
add
les
lret
in
xor
xchg
into
sahf
repz
ja
stc
popf
pop
xchg
out
sub
xchg
cmp
bsr
jae
xor
dec
aaa
addr16
xchg
cmp
and
fstp
jl
pop
or
outsl
xchg
and
sbb
repz
sbb
mov
addr16
in
mov
jbe
int
push
fstl
icebp
add
movsl
sub
movsb
faddl
adc
or
lds
icebp
std
cmp
and
popa
pusha
out
xor
xor
mov
mov
jle
les
xchg
and
jp
aad
or
fdivr
mov
add
push
lcall
push
sarb
ret
into
xchg
xchg
pop
imulb
cltd
inc
and
pop
stos
mov
push
push
nop
cltd
cs
ret
inc
inc
jb
pop
out
mov
sbb
arpl
add
mov
xlat
mov
rorb
outsb
add
mov
sub
dec
sarl
mov
mov
mov
xchg
jle
add
insb
movsb
divl
xchg
scas
push
lcall
lret
mov
fsubs
lret
jp
pop
imul
fldt
adc
jle
mov
push
int
jp
ret
add
aam
pop
lock
addr16
pop
popl
out
outsl
lock
aaa
in
pop
xchg
popa
xlat
adc
mov
mov
add
cwtl
mov
in
jp
not
sub
sub
mov
insb
arpl
jg
mov
push
scas
xchg
push
ss
sbb
scas
bound
loop
lock
xor
and
cmp
lods
fstpl
cmc
shrl
mov
push
hlt
lahf
stc
mov
fcomps
sarb
pop
fdiv
outsl
jb
pop
adc
adc
lds
clc
cmc
dec
imull
sahf
lock
lock
dec
movsl
adc
add
testl
cmpsl
mov
cs
hlt
aas
dec
pop
inc
das
mov
pop
xor
sub
lds
jno
xor
test
das
cmp
movsb
push
lods
sub
ret
or
sbb
pop
call
xor
ficoml
pop
mov
loopne
imul
and
inc
sub
ja
dec
lock
push
or
inc
mov
push
cmpsb
lret
mov
lret
mov
adc
shll
pushl
sbb
int3
imul
fcomps
out
pop
movsl
hlt
into
jge
sbb
repz
into
xchg
lods
lret
pop
pop
es
cmp
flds
jb
in
xor
push
jns
mov
jl
std
adc
loop
in
cmc
dec
push
dec
mov
inc
fstpl
outsb
mov
int
out
js
mov
icebp
mov
mov
fdivl
roll
cli
mov
popf
es
mov
dec
cwtl
and
mov
mov
inc
into
adc
mov
inc
repnz
icebp
ss
or
je,pn
rcl
in
or
adc
and
arpl
sub
mov
sbb
or
xor
xor
ja
inc
arpl
movsl
mov
mov
addl
test
flds
mov
push
mov
mov
xor
cwtl
jne
dec
push
sbb
and
inc
push
cmp
sbb
sahf
call
pop
ret
push
pop
lds
pusha
mov
mov
scas
sub
bound
shl
pop
rorb
jmp
shlb
add
pop
xor
mov
insb
je
push
ffree
jg
lret
add
icebp
pop
mov
mov
and
mov
sahf
cwtl
xor
mov
mov
inc
roll
loopne
jg
xchg
andl
test
loopne
aaa
shll
scas
xor
adc
jmp
mov
adc
sbb
add
popf
fwait
pop
fists
and
out
mov
stos
mov
frndint
push
mov
dec
or
mov
roll
cmc
dec
cltd
testl
clc
push
xchg
xchg
jecxz
dec
xchg
lret
adc
or
cmp
jg
in
mov
scas
dec
inc
iret
mov
cmp
mov
dec
jl
mov
and
je
test
decb
ret
lret
lds
mov
icebp
pop
fmul
pop
xor
shll
idivl
scas
and
stos
add
mov
popa
xchg
das
xchg
add
pop
cmpsb
mov
pop
sub
les
testl
mov
enter
add
or
mov
pushf
cmp
cmpl
jno
push
cmp
jb
mov
lds
inc
pop
jmp
outsl
xchg
test
repz
ds
inc
into
jle
lea
imulb
fimuls
mov
cmp
ret
lahf
mov
pop
push
cmp
mov
adc
sbb
add
imul
xchg
mov
xor
rclb
add
xchg
xor
pop
fisubrl
jo
dec
xchg
shrl
cmp
mov
mov
cmp
xchg
sbb
shlb
arpl
cmp
test
cmpsl
test
rclb
fsts
setns
push
xor
lock
fsubrs
pop
imul
push
ds
daa
inc
jb
repz
push
xchg
ret
jg
daa
sbb
xchg
add
xlat
push
xor
sub
sub
mov
addb
es
mov
cmc
lcall
in
stc
into
out
push
outsl
fistl
mov
ljmp
subl
xchg
out
sub
loope
movsl
mov
icebp
xchg
repz
fsubl
and
xchg
jecxz
lods
mov
insb
pop
and
mov
mov
and
inc
cltd
insb
ja
jmp
sub
sbb
dec
push
cld
add
sub
mov
push
dec
ds
xor
mulb
sbb
aas
sub
cmp
xlat
test
xor
mov
or
sbb
stc
loopne
adc
imul
and
sarb
aam
scas
sub
mov
cmp
imul
ss
test
xchg
orb
add
cmp
push
dec
dec
cld
jle
out
adc
sahf
xor
inc
sub
sbb
xchg
and
imull
cmpsb
push
xchg
dec
sbb
xlat
mov
loope
in
leave
mov
mov
je
aad
out
in
iret
lds
scas
loopne
fnstcw
std
mov
les
mov
push
or
jno
inc
mov
xor
mov
iret
mov
sbb
clc
ljmp
push
xchg
sbb
xor
fcoms
pop
rorb
mov
or
push
mov
icebp
shrl
mov
inc
jbe
and
sub
sbb
dec
and
rorb
push
add
mov
adc
pusha
cmpsl
jg
les
sbb
cmp
mov
adc
jge
std
mov
fdivl
xor
mov
flds
inc
xchg
pop
outsl
hlt
in
adc
out
ret
xchg
mov
add
or
adc
stos
xchg
xor
push
inc
addb
pop
jbe
xor
rcll
lods
popa
fidivs
xorb
and
mov
jg
inc
je
imul
leave
mov
rorl
cli
lret
mov
cmp
sub
lea
cmp
jge
adc
out
fwait
pop
shll
fadds
sbb
enter
push
push
cmpsb
movsl
mov
xorl
dec
aas
mov
and
mov
call
add
add
out
jl
jae
aam
push
fdivrs
jb
cwtl
mov
sti
je
test
cmp
xchg
push
dec
fldcw
jo
rolb
and
out
and
daa
test
addr16
mov
out
sarl
inc
inc
jno
add
cltd
inc
mov
lock
ficompl
xor
pushl
addl
sbb
ja
jg
push
or
xchg
lods
iret
pop
mov
pop
xorb
icebp
or
mov
aam
lock
int3
mov
xchg
and
mov
push
xor
and
pop
loop
cmp
push
js
es
dec
inc
mov
in
jb
iret
mov
cltd
loopne
fsubp
jle
cmp
out
mov
aaa
cmpb
pop
int
cltd
sbb
lcall
adc
aaa
and
cmp
mov
mov
adc
dec
movsl
dec
sub
cmp
jmp
pusha
inc
mov
call
pop
mov
outsb
movsl
jne
addr16
cmp
lock
cmpsl
fisubrl
repnz
dec
or
sub
jno
jbe
icebp
pop
xchg
mov
insb
inc
mov
movsl
notl
repz
out
sahf
push
loop
and
mov
scas
mov
mov
jle
mov
stos
pop
and
adc
mov
outsb
sub
dec
inc
es
dec
mov
scas
inc
push
lods
int
dec
or
xchg
sub
in
arpl
sub
aas
sahf
mov
rorb
pusha
add
sbb
or
mov
pushf
jo
aaa
ljmp
stc
ret
cli
inc
mov
imul
push
or
adc
mov
sub
jno
adc
sbbb
sub
xchg
je
fnstenv
adc
push
mov
adc
ds
sti
cld
mov
push
add
in
clc
mov
xor
dec
push
pop
mov
mov
add
add
xchg
xchg
es
mov
lahf
or
mov
int
sbb
cmc
fucom
cmp
subb
cmpl
daa
loop
pop
adc
je
decb
xchg
icebp
pop
and
mov
cwtl
ljmp
rcl
push
ds
mov
es
sub
aad
mov
mov
mov
into
test
stos
jb
mov
je
mov
mov
inc
mov
and
sbb
sbb
push
or
mov
pusha
pop
lcall
jle
and
ret
ds
inc
fwait
andb
out
dec
sahf
push
inc
jecxz
jb
scas
adc
loop
test
fisttps
sub
xchg
add
jge
xlat
inc
xor
bnd
fdivs
mov
outsl
inc
imul
pop
in
sbb
jg
xor
push
adc
rol
or
adc
inc
mov
fidivrs
push
xor
scas
int
dec
jbe
push
movsb
fbstp
pop
psubsb
adc
cs
jle
xchg
pop
mov
adc
adc
jbe
roll
jecxz
les
hlt
hlt
cld
lret
pop
sbb
xor
adc
xor
outsb
lahf
shlb
sbb
stos
dec
lret
insl
mov
xchg
imul
and
mov
mov
xchg
sti
xchg
mov
inc
es
pop
hlt
pushf
push
loopne
push
mov
imul
add
pop
orb
jmp
sbb
mov
mov
nop
loopne
and
mov
and
mov
sarl
std
push
pop
into
jecxz
nop
icebp
lods
xor
and
js
push
cmp
mov
cli
cmp
pop
xor
xor
cmp
cmc
leave
ds
fs
into
and
dec
incl
xorl
adc
and
inc
pushf
fcmovnu
xor
cmp
pop
xchg
lea
fidivs
jp
adc
jns
jmp
popf
or
testb
les
sbb
stc
jbe
adc
jl
add
sbb
in
aas
cmp
dec
sub
das
in
xchg
out
push
xchg
pop
mov
popa
sbb
and
sbb
adc
fimuls
in
push
mov
enter
test
divl
jb
sbb
add
adc
xor
popf
lahf
or
xchg
add
xchg
sbbb
pop
mov
pop
aaa
dec
inc
jmp
repz
sub
repnz
or
and
mov
sbb
xlat
mov
xchg
fwait
jmp
jmp
test
mov
cs
ja
mov
pop
dec
test
iret
push
sub
ret
mov
jmp
int
mov
push
int
inc
out
dec
pusha
sub
pop
mov
insb
insl
scas
adc
daa
lcall
mov
mov
pop
in
xchg
jb
cmc
and
sbb
inc
in
nop
push
imul
lret
mov
and
test
cmpsb
sbb
jmp
mov
subl
mov
cmpsb
ljmp
ficomps
mov
std
push
inc
jg
sub
push
int
lahf
pop
add
clc
pop
jbe
int3
lcall
sbb
add
or
or
es
out
dec
cmp
pop
ret
mov
sbb
sbb
imul
xchg
gs
jne
out
push
addr16
jmp
jbe
test
jge
sub
cmp
push
in
add
pop
push
xchg
cmp
sti
or
cld
insl
rcrb
push
arpl
inc
or
push
loop
scas
push
jbe
rorb
or
cld
push
push
gs
mov
mov
test
mov
push
mov
insl
add
inc
mov
cld
pop
mov
hlt
ja
sub
push
mov
leave
leave
xlat
xor
popa
movsl
loope
ljmp
fmuls
dec
adc
arpl
jp
dec
movb
pop
cs
in
dec
out
push
les
insl
test
stc
les
dec
mov
shll
movsb
pop
push
sub
rclb
sbb
in
push
sub
sub
mov
and
mov
aas
adc
aam
mov
loopne
mov
add
push
jbe
orl
xor
pop
add
jnp
inc
or
add
fcmovnbe
sbb
sub
aam
and
pop
jno
and
imul
popa
push
aas
pop
fldt
enter
stc
sub
mov
cmp
dec
lret
arpl
lds
nop
clc
fsubp
std
xlat
adc
pop
movsb
mov
xor
enter
push
xor
lahf
mov
xchg
or
out
aam
add
cltd
mov
mov
pop
jmp
jl
inc
cmp
jns
sbb
lods
sub
sbb
dec
int3
jnp
out
leave
int
inc
jge
iret
sti
shlb
imul
xor
fbstp
hlt
and
adc
sub
xchg
cmp
test
fmull
dec
cmp
jae
add
ja
rcl
and
cmp
lods
in
mov
mov
sbb
rcrl
imul
out
xchg
jae
ljmp
inc
mov
lret
pop
jg
aaa
int3
ss
jno
loopne
jecxz
sbb
xor
mov
sbb
xchg
lcall
lods
ja
fisttpll
cmc
je
je
pop
std
sub
adc
rorb
in
rcl
and
cmp
bound
cmp
outsb
je
out
test
jl
xor
jmp
cli
fdiv
test
lret
jo
inc
dec
push
or
ljmp
mov
hlt
mov
jp
pop
xchg
fmul
pop
push
mov
mov
outsb
rcr
lahf
sarl
sbb
and
push
push
add
cld
pusha
dec
jl
xchg
outsb
fcoms
popa
jg
sbb
cmp
loop
and
mov
inc
or
xchg
mov
sahf
lea
fisttpll
inc
shll
test
xchg
or
outsl
push
and
push
pop
xchg
dec
ret
inc
pop
movsb
rcr
dec
push
pop
adcl
ror
jle
and
test
lods
movaps
mov
imull
adc
pop
sbb
lret
mul
insb
es
ss
inc
push
enter
movsl
mov
rcll
insb
and
adc
xchg
or
xlat
xorl
test
or
adcb
lods
mov
mov
jg
int
or
cmp
and
popa
xchg
pop
and
fidivrs
jcxz
outsb
inc
jge
mov
int
xchg
push
pop
iret
mov
ds
sbb
jl
lret
push
pop
les
loopne
loop
mov
add
aas
mov
adc
and
mov
sub
add
movsb
sub
jbe
mov
cmp
sbb
lahf
cmp
xchg
iret
inc
jns
push
jb
mov
sarl
dec
mov
clc
mov
clc
jne
fbstp
enter
mov
pop
dec
and
movsl
scas
icebp
xor
lahf
inc
inc
cmpsb
out
and
pop
out
nop
stc
xchg
jbe
mov
rorl
lcall
fisubrl
outsb
push
outsl
imul
pop
adc
cmp
scas
mov
dec
pop
ss
call
fnclex
add
bnd
scas
sbb
push
mov
ret
orl
fcomps
lret
stos
inc
push
jb
faddl
icebp
lcall
adc
ds
fs
push
push
in
test
jae
push
inc
outsl
outsl
repz
mov
dec
ds
lahf
dec
push
add
test
outsb
jg
mov
xor
and
data16
pop
imul
add
pop
ret
ds
loopne
mov
addr16
lea
out
push
push
ds
pop
fidivrs
inc
scas
inc
mov
jle
addr16
lods
lock
int3
sub
out
jecxz
mov
ja
mov
scas
push
mov
daa
mov
jae
jl
push
shll
lret
fs
loopne
cmp
inc
movsb
mov
xlat
bound
sti
sbb
enter
into
out
js
cmovl
es
mov
out
xchg
jg
ret
jle
mov
subb
movsb
fistl
arpl
push
in
rcll
mov
push
jg
adc
mov
mov
out
jbe
xchg
mov
push
sbb
adc
or
shl
pop
mov
push
sbb
ret
mov
mov
scas
cltd
stc
xor
stos
sub
cmp
adc
sahf
loop
aad
adc
in
pop
ja
xchg
mov
xor
ffree
test
cmpsb
movb
jmp
int3
jl
cmpsl
mov
dec
sbb
mov
sti
loop
cmp
push
bound
adc
and
adc
movsb
pop
push
mov
cmp
pop
add
inc
and
dec
xor
insb
movsl
fwait
movsb
repnz
and
out
sub
sbb
sar
push
cmc
insl
stos
movl
jle
and
mov
lret
sbb
ja
leave
ja
out
pop
sub
lret
pop
ret
es
jne
popa
jl
sub
add
mov
and
fistps
jbe
or
lahf
fidivrs
and
out
mov
jb
or
xor
faddl
loopne
in
push
push
pop
std
sub
push
in
iret
sub
sub
adc
mov
sti
sub
add
pop
mov
xor
call
rcll
or
jp
cli
jbe
ret
ficoml
mov
enter
dec
xor
out
mov
cwtl
dec
jl
cmpsl
sbb
sbb
test
divl
loope
fbld
shlb
pop
daa
xor
xor
mov
pop
repz
outsb
stc
daa
jne
cwtl
dec
ficoml
mov
in
jle
inc
aad
adc
pop
lds
pop
shl
std
sti
pusha
cwtl
jl
pop
ja
cmp
insl
insl
cmpl
mov
dec
mov
push
xchg
adc
and
clc
and
mov
add
clc
daa
xchg
or
out
push
hlt
or
pop
jl
jge
jmp
mov
insl
and
fdivs
je
push
nop
jle
dec
jecxz
lock
pop
sbb
and
jne
push
sti
jae
sbb
jge
stos
push
icebp
out
mov
and
sbb
pop
loopne
loope
xlat
lock
in
fs
shrb
pop
push
push
mov
stos
pop
sahf
arpl
xchg
nop
xor
out
gs
enter
or
imul
fisttpl
inc
movl
sbb
sub
add
insb
test
ja
xlat
aas
fmuls
aas
cmc
cmp
popa
stc
adc
sbb
icebp
and
lcall
frstor
outsl
dec
and
inc
cmp
jp
mov
lock
daa
out
jp
xchg
sbb
ret
repz
and
call
aaa
rcrl
push
stc
dec
cwtl
xchg
mov
cs
mov
movsl
pop
in
pop
sbb
stc
stc
xor
jo
adc
les
arpl
dec
lahf
fnstenv
push
rcl
pushf
aam
iret
mov
addl
sub
pop
or
mov
push
rolb
pop
das
arpl
push
arpl
hlt
xor
lret
jecxz
sub
mov
enter
xlat
adc
pop
pop
cmc
mov
cmp
jge
cmpsl
popf
dec
ljmp
stos
je
mov
fldl
pop
test
mov
movsl
pop
sub
popa
inc
lock
shrb
xor
xchg
xchg
aas
mov
xchg
insb
push
sub
inc
add
pushf
int3
bound
dec
mov
xchg
mov
xchg
insl
dec
cmc
ja
icebp
jne
mov
ret
sub
outsb
add
loope
lea
dec
cmp
leave
or
nop
fistpl
insb
or
fisttpl
jne
lcall
test
push
pushl
ds
gs
mov
jb
inc
addl
cmp
cmp
mov
cmp
mov
sbb
std
je
lods
out
push
pop
xchg
pop
insl
lods
xor
out
mov
mov
pop
pop
cli
fstpl
shll
imul
mov
add
dec
push
mov
add
push
mov
xlat
mov
or
in
inc
mov
test
addr16
iret
out
imul
pop
sbb
mov
das
sbb
xchg
lea
adc
or
pop
jno
inc
in
pop
cli
ja
pop
loopne
ret
cmpsl
mov
pop
jp
pop
dec
jne
into
inc
push
out
lock
lcall
outsb
jg
pop
sub
jo
cli
mov
lods
stc
mov
insb
add
mov
mov
bound
xor
ss
fpatan
lds
push
cmc
lds
push
sarb
push
or
and
ret
in
in
xchg
dec
movl
fldl
test
and
cs
mov
aad
fstpt
push
in
mov
add
addr16
sub
jae
mov
pop
lret
inc
mov
push
push
sti
cwtl
int3
cmp
mov
push
arpl
add
mov
pop
negb
or
sbb
adc
mov
jge
and
sub
call
loop
icebp
ret
jle
sub
pop
adc
aam
shl
outsb
mov
test
mov
in
repnz
cmpsl
xchg
mov
adc
push
xchg
rcrb
sbb
aas
int
pop
xor
fwait
jo
enter
mov
xchg
xchg
arpl
outsb
sub
mov
and
bound
jg
or
mov
inc
aam
sub
je
pop
xchg
jbe
cli
cli
mov
into
mov
loope
sub
dec
testb
imul
pushf
int3
mov
into
cmc
mov
jae
jl
and
push
out
and
movsl
sbb
jb
aad
outsl
sub
inc
push
mov
inc
repz
dec
orl
ficompl
jmp
inc
pop
xchg
int
mov
lock
push
cmp
pop
test
push
adcl
pop
dec
ljmp
jns
add
mov
mov
sbb
cwtl
lahf
ja
into
jg
aas
sahf
cmc
cld
aas
jno
xchg
rorb
call
pop
iret
leave
fstpt
dec
mov
push
add
push
loope
aas
fisttpl
xlat
lods
outsl
xchg
aad
pop
into
push
into
out
test
jge
cmp
filds
or
mov
sbb
clc
movsl
cmpsb
push
sbb
adc
popa
sub
add
xor
or
out
sub
int
fstl
cmp
xor
adc
js
fcmove
into
or
cmpsl
or
dec
rcrl
ret
enter
lea
movsb
imul
mov
dec
lcall
inc
sbb
sub
call
lahf
push
out
dec
lods
and
mov
jle
xchg
shlb
jecxz
mov
daa
xchg
xor
adc
pop
fistl
lock
pop
add
addr16
and
insb
adc
movsl
je
adc
sbbl
ds
aad
in
fadds
lahf
ror
lock
sbb
inc
shrb
inc
lret
pop
and
inc
or
lahf
fdivrs
cld
pop
dec
mov
out
ficoms
dec
sbb
popf
aas
sbb
jl
push
jae
xor
aas
mulb
push
sub
cmpsb
movhps
sbb
mov
fs
out
inc
cltd
fldl2t
jae
lcall
sub
inc
add
inc
notl
clc
popa
incb
sbb
jbe
push
or
movsl
leave
cwtl
sbbl
cmp
inc
xor
aas
sub
in
fcomps
dec
enter
fiaddl
dec
xlat
mov
test
lahf
adc
xchg
ficompl
scas
mov
sti
push
stc
inc
int3
dec
in
testl
inc
sbb
loope
sub
inc
iret
lea
jecxz
mov
test
in
xchg
arpl
cmp
dec
outsb
inc
xchg
xchg
pop
dec
pop
test
jl
jno
jecxz
mov
mov
jo
ret
sub
mov
sbb
sub
mov
sub
lds
sbb
int
fnsave
icebp
in
jae
out
and
test
imul
icebp
outsl
inc
cmc
adc
pop
pop
pusha
xor
cld
in
push
mov
mov
outsl
es
sbb
ret
decb
lret
daa
or
fs
test
loopne
in
mov
push
push
sub
push
out
xor
jbe
ret
in
clc
cmp
pop
xchg
sti
dec
xchg
ljmp
insb
push
clc
xchg
jmp
xchg
in
sub
sub
push
cmpsb
inc
out
cmp
mov
repnz
loopne
xor
in
mov
icebp
cmp
pop
in
in
icebp
add
lret
out
jo
mov
sti
lea
mov
pop
inc
mov
mov
sti
loopne
cmpl
add
lds
jno
mov
mov
je
and
mov
push
lea
rcr
xchg
pop
cs
jns
sbb
andl
cmc
imul
xor
pop
or
outsl
dec
cmp
mov
ss
xchg
test
xor
pop
push
or
cmpl
adc
lahf
push
int
imul
lods
inc
ljmp
or
aaa
xor
cmp
add
bound
push
js
mov
in
or
repz
sbb
jg
dec
cmp
inc
mov
clc
hlt
cwtl
jmp
jb
std
xchg
cmp
ss
nop
popa
cmp
popa
dec
iret
jecxz
push
sub
mov
xchg
out
int3
push
lret
ljmp
and
jge
or
inc
cs
adc
xor
jbe
shll
push
pop
adc
lds
lods
lret
xchg
dec
addr16
xor
mov
and
jle
lds
push
cld
frndint
adc
inc
shlb
xchg
inc
sbb
in
xor
jge
adc
and
icebp
mov
adc
ficoml
add
dec
fdivs
and
xor
aas
dec
xchg
pop
mov
imul
pop
add
xchg
sahf
loope
mov
mov
scas
sub
addb
and
xor
push
jae
sub
gs
xorl
ktestb
mov
mov
fnstsw
inc
mov
mov
leave
das
push
fbstp
in
or
jge
xadd
in
sbb
push
push
cs
mov
std
push
mov
push
mov
xor
jns
mov
inc
sbb
je
fisttpll
sub
sub
adc
jbe
fisttpll
mov
addr16
mov
iret
push
aas
out
or
call
hlt
lock
cmp
sbb
jnp
lds
mov
leave
jmp
idivb
sbb
test
xchg
adcb
insl
in
jle
dec
and
add
jb
inc
or
lret
xorb
xchg
ja
cmp
int
arpl
inc
xchg
xchg
scas
insl
repnz
jle
and
aas
addl
popf
xor
pop
jp
inc
sbb
jb
in
xor
test
sub
les
or
sub
push
ficomps
sbb
lcall
lahf
mov
popa
and
rcrl
mov
or
jl
dec
call
inc
ds
xlat
ffree
sbb
out
and
jle
and
inc
cmp
mov
dec
push
loopne
dec
xor
in
inc
ret
mov
js
mov
or
pop
test
lods
addr16
xchg
das
out
jecxz
add
pop
stos
icebp
and
push
lods
and
fisubs
push
sub
push
push
pushw
popf
cmp
xchg
mov
inc
fcoms
ret
or
xchg
pop
inc
mov
pop
inc
ror
test
inc
es
repnz
imulb
pop
lods
and
idivb
inc
jg
mov
stc
mov
and
insl
shlb
push
aaa
jno
adc
hlt
std
xchg
outsl
xchg
pop
in
sarb
dec
and
xchg
or
inc
data16
and
and
insl
sub
lods
shlb
inc
mov
xlat
ds
push
xor
cmc
sub
aam
es
cwtl
xrelease
dec
mov
mov
pushw
ficomps
in
popa
jl
jae
dec
nop
or
pusha
dec
test
push
hlt
mov
sbb
pop
addr16
int
mov
daa
cltd
sub
jo
mov
ret
pop
add
orl
jecxz
sbb
dec
adc
pushl
and
and
movsb
pop
mov
sub
divl
mov
out
xchg
sub
xchg
or
xor
xchg
add
mov
fidivs
mov
sub
cmovle
dec
mov
pop
dec
jecxz
cwtl
mov
out
hlt
icebp
aam
sbb
outsb
decb
iret
ret
sub
aas
xchg
jb
and
pop
inc
fstpt
sarb
shll
rolb
inc
out
leave
pop
dec
add
jmp
push
inc
enter
lret
jge
pop
mov
ret
leave
mov
ljmp
cld
jb
mov
das
cld
sub
xlat
pushf
flds
rcl
in
jns
cwtl
sbb
popa
xchg
imul
loope
aas
aaa
insl
pop
dec
js
test
mov
add
xlat
sub
and
dec
pop
adc
push
or
mov
sub
xor
jo
push
in
jno
inc
dec
fmull
imul
sbb
int
mov
jle
dec
xchg
inc
add
popa
xchg
dec
clc
mov
stc
enter
mov
rcrb
mov
jl
bound
xchg
mov
pop
cmp
sub
mov
negl
cli
jmp
test
test
loopne
and
aad
cwtl
mov
sub
aam
daa
pusha
mov
mov
icebp
popa
push
dec
jg
icebp
dec
aaa
loopne
out
adc
arpl
cmp
mov
push
test
fs
out
adc
outsb
je
xor
and
mov
mov
pop
sarl
pop
fiaddl
jne
dec
lock
loope
add
cmp
cltd
add
sub
mov
dec
and
lods
sub
movsl
sbb
pusha
mov
mov
push
outsl
push
mov
sub
mov
xchg
cli
sbb
lret
dec
xchg
or
popf
fidivrs
lfs
sarb
imul
repnz
dec
adc
lods
mov
divl
aaa
xchg
repnz
pop
inc
cmp
xchg
mov
sti
shlb
sbb
lea
sub
mov
ja
jbe
add
jl
test
jb
repz
pop
je
jo
scas
or
in
jecxz
inc
xor
dec
inc
dec
sub
cmp
mov
jle
dec
jne
xchg
ss
loope
int3
int
stos
outsb
cwtl
mov
push
xor
mov
lods
daa
rcll
push
xchg
or
pop
dec
shl
movsl
jnp
dec
ss
dec
jno
cmp
adc
xor
test
push
call
loope
push
cmp
mov
pop
scas
adc
into
jmp
mov
xchg
aad
ss
test
pop
sbb
pop
lds
outsl
mov
and
push
inc
aad
arpl
mov
add
jle
out
shlb
cmpsl
repz
mov
leave
and
loopne
or
push
xchg
jmp
xchg
inc
movsl
int
dec
push
jle
xchg
cmc
mov
lds
cmc
lahf
or
jp
gs
sbb
dec
pop
stc
lods
test
pop
dec
insb
enter
jecxz
mov
push
sbb
scas
sbb
inc
push
xchg
sbb
arpl
pop
fstpt
and
and
inc
pusha
leave
movsb
cltd
mov
iret
mov
fwait
mov
adc
mov
int
fwait
into
enter
xchg
popa
pop
outsl
mov
cmp
xchg
fstpt
mov
dec
cmp
xor
and
ds
pop
jl
arpl
push
push
pop
inc
iret
jne
das
cmpsl
in
dec
fidivrs
insl
outsb
clc
divps
jbe
aas
loop
lret
es
mov
rcrl
fwait
jmp
jno
mov
xor
mov
xor
xlat
xchg
lods
sbb
xor
and
cmpsl
ret
aaa
push
jo
or
push
jecxz
cwtl
call
sti
aam
push
add
roll
inc
pusha
cmp
mov
repz
inc
stos
jle
xchg
inc
sub
xchg
or
ds
lds
aaa
add
xchg
in
pop
pop
or
popl
cmp
rcl
lahf
jae
add
dec
xchg
add
mov
add
cmp
add
or
xchg
movsb
or
shlb
mov
lcall
insl
cmp
cmp
aam
cwtl
loope
xchg
fldlg2
fiaddl
mov
xchg
fiadds
shrl
mov
test
or
aas
movsb
sub
imul
sahf
outsb
cs
mov
mov
fwait
daa
sub
test
xor
jo
sbb
adc
fidivs
xchg
inc
mov
pusha
lea
les
add
xchg
bound
lods
adc
xchg
dec
inc
enter
jne
mov
add
xor
mov
call
rcr
movsb
test
fidivs
push
insb
scas
rorl
data16
lds
jg
push
mov
ja
outsb
cmpsb
and
hlt
ljmp
mov
enter
xor
or
mov
int
repnz
aas
loop
mov
xchg
mov
or
sub
or
pop
aaa
lods
jmp
mov
add
sbbb
pop
loope
std
int
and
test
rorl
adc
pop
arpl
mov
push
or
bound
mov
and
ja
push
movsb
pop
jmp
mov
call
neg
addr16
in
xor
push
sub
sbb
sbb
inc
jbe
mov
pop
mov
outsl
in
ret
pop
cmpsb
cmp
hlt
xor
test
pop
test
cmp
jo
aad
push
xchg
pop
sahf
cmc
in
xorb
hlt
push
pop
rorl
mov
push
push
and
mov
mov
in
jmp
iret
lds
and
test
xchg
stos
lcall
xchg
inc
insb
lret
and
js
sub
add
jo
ret
adc
fcmovnbe
lcall
jne
jmp
popf
clc
add
mov
jmp
in
pop
adc
add
xor
movsl
loop
jmp
inc
pop
out
stos
mov
hlt
mov
ss
test
inc
ja
mov
shlb
adc
mov
pusha
mov
add
mov
cmp
xchg
imul
lret
aas
jecxz
mov
push
push
movsb
pop
adcb
xor
jg
in
jle
test
pusha
inc
mov
or
sbb
xor
jge
dec
aad
and
add
dec
fiadds
aad
sbbl
add
lret
shlb
leave
rol
insb
ljmp
aas
mov
mov
jp
test
shl
out
push
pop
ds
jnp
add
aaa
pop
cmpsb
gs
outsb
aam
cmp
fistl
jl
mov
cmp
jmp
subl
fwait
sti
inc
dec
push
lea
mov
adc
mov
add
ror
aaa
mov
push
cs
scas
rcrl
push
pusha
and
inc
pop
je
mov
test
lret
cmp
ds
jp
pop
xchg
shlb
dec
hlt
pop
jmp
fsubl
test
testb
adc
pop
or
daa
push
ret
push
std
cmc
jb
sti
xchg
add
xchg
inc
and
pop
push
adc
adc
fimull
repnz
push
push
push
add
and
cmp
int3
or
rcrl
mov
mov
xchg
add
stos
add
sub
icebp
out
add
push
xor
scas
dec
std
adc
ffree
das
push
dec
push
jp
inc
out
fldt
bswap
add
pop
or
push
cwtl
js
mov
out
xchg
jle
xlat
pop
dec
outsl
lea
scas
inc
jae
mov
push
stos
sbb
cmp
cmp
ret
scas
fwait
mov
sbb
repnz
aad
or
jns
fistpl
cmp
aaa
aad
lock
dec
insb
loopne
popf
loop
pushf
xlat
aaa
pop
add
jmp
outsl
dec
rol
insb
pop
push
inc
fstps
dec
and
icebp
mov
mov
lods
imul
sub
jp
mov
and
rcll
xor
clc
mov
mov
neg
dec
repnz
xchg
fisttpll
pop
cmp
mov
testl
push
inc
cmpsb
sub
decb
loopne
and
movsb
jmp
out
sub
std
fidivl
push
bound
inc
cs
ror
or
xor
xor
inc
cmpsb
mov
pop
cmc
aas
adc
lret
add
in
mov
xor
jae
cmp
fucom
add
sub
xlat
xchg
mov
inc
pop
dec
loopne
sub
jle
loopne
xchg
lods
sarl
pop
dec
pop
and
fucomip
outsb
movsb
inc
jae
inc
enter
mov
push
fiaddl
jle
sub
dec
xchg
test
ss
dec
or
bound
cli
movsb
jp
test
cli
jo
pop
cmp
xchg
xchg
js
les
or
pop
jnp
out
xchg
out
lods
pop
cs
and
sub
cwtl
dec
jbe
aad
negb
pop
nop
xchg
push
jecxz
or
scas
add
add
jns
test
test
insb
jg
mov
movsb
xchg
int3
jmp
sahf
shlb
xlat
mov
scas
pop
call
je
mov
mov
in
das
aaa
stos
imul
push
jl
inc
push
cmp
adc
inc
sub
lock
adc
sbb
das
insb
js
repnz
repz
mov
mov
gs
lea
xchg
testb
popa
and
pop
pop
repz
add
rolb
jp
jmp
or
imul
inc
sbb
addl
cltd
das
or
jmp
sbb
movsl
or
rcrb
mov
cmp
and
sahf
jb
fadds
push
dec
lea
es
sbb
xchg
scas
lds
mov
and
dec
mov
fidivrl
cs
mov
cmp
sbb
cmpsb
cmp
adc
es
daa
xchg
xor
dec
negl
call
in
outsb
mov
lods
aad
xchg
xor
ljmp
aas
bound
sub
hlt
mov
gs
ret
lea
insb
hlt
dec
jge
or
adc
addr16
inc
xor
popa
daa
clc
xchg
jbe
mov
lahf
out
pop
sub
lock
stos
mov
test
and
inc
nop
push
out
mov
inc
sub
or
fdivrs
addb
push
paddw
jbe
xchg
ljmp
xchg
insb
pop
wrmsr
xchg
aad
rcrl
mov
sub
xor
pop
rcl
and
inc
fwait
jl
pop
das
lods
nop
lret
sahf
add
daa
subb
mov
jp
lea
std
dec
rcr
insl
jae
call
dec
je
lds
and
adc
call
inc
pop
mov
pop
pop
xchg
int
scas
or
outsb
js
jno
mov
sarl
xchg
push
js
mov
push
inc
push
mov
aaa
scas
leave
jl
pop
out
cmp
mov
into
test
ja
inc
test
shlb
pop
jno
and
xchg
cltd
xor
jb
repnz
movsb
add
sti
pop
popa
dec
push
sarb
sbb
in
scas
jo
pop
les
jge
idiv
loope
add
cmp
push
icebp
push
mov
adc
scas
enter
jo
and
push
pushf
test
push
cmpsl
in
subb
inc
pop
mov
adc
add
sarb
push
inc
adc
scas
cltd
mov
rolb
call
lds
inc
out
sti
stc
negl
dec
jne
or
xlat
in
outsl
add
repz
adc
pushf
adc
jl
xor
rclb
int
loopne
jl
add
loop
aad
and
int3
imul
push
push
pop
movsl
bound
jnp
push
cmc
mov
out
dec
mov
cmp
push
jge
pop
icebp
sub
mov
jno
rcrb
icebp
mov
test
pop
push
jmp
movsb
sbb
mov
scas
dec
xor
xchg
fldt
hlt
mov
negl
add
rcrb
sbb
add
mov
ret
sbb
in
stos
xlat
icebp
cli
js
imul
xlat
inc
fsubr
out
push
and
xchg
mov
div
sub
cs
xchg
icebp
mov
ss
popf
inc
cltd
xor
insb
jmp
push
pop
pop
xchg
fdiv
pop
mov
shlb
in
test
stos
pop
sbb
pop
rolb
test
jns
mov
ljmp
jmp
xchg
xchg
out
dec
mov
xor
movsl
aad
inc
ret
movsb
jp
movsl
les
iretw
sub
fcmovbe
sbb
mov
out
xchg
inc
xor
out
leave
mov
inc
xlat
adc
gs
mov
sbb
push
ss
jg
dec
mov
sar
push
xchg
sub
lret
push
arpl
mov
jl
data16
rcl
test
pop
shlb
addr16
push
fidivrs
inc
mov
or
cmpsb
jg
outsl
idivb
imul
inc
inc
xchg
sbb
mov
and
pop
int
mov
fwait
sbb
fmulp
lods
inc
jg
mov
mov
jo
mov
in
mov
pop
inc
mov
test
or
push
push
mov
add
push
insl
in
push
xor
jb
jmp
mov
ljmp
addb
cmc
adc
and
inc
outsl
mov
xchg
lahf
push
pop
mov
sub
pop
pop
call
lea
inc
sub
inc
bnd
icebp
push
mov
lret
ljmp
int
addr16
mov
xchg
cli
fiaddl
sbbl
and
cmp
fwait
mov
leave
adc
cmc
fdivs
scas
push
or
jmp
loope
fwait
loopne
sbb
ljmp
into
add
jb
cli
sub
sbb
jge
cmp
in
fwait
mov
shlb
xor
xchg
in
test
ret
adc
rorb
rorl
mov
mov
jne
or
mov
cwtl
jo
and
pminub
mov
outsl
cwtl
mov
jg
mov
ss
test
test
push
popf
jns
mov
cli
xchg
sub
mov
je
popa
cmp
clc
dec
dec
aam
sahf
sti
data16
sbb
pusha
je
or
mov
jp
and
xor
adc
addr16
dec
popa
sar
jne
and
dec
dec
gs
je
push
xor
pusha
mov
inc
push
cmp
jmp
je
test
stos
xor
mov
dec
loop
lret
sbb
int3
dec
outsl
cmp
xchg
xchg
dec
adc
mov
in
pop
xchg
subb
pop
sbbl
aam
dec
test
bound
lock
fst
popa
adc
lret
fldenv
sub
jbe
sub
pop
out
add
push
scas
push
push
aas
adc
outsb
jb
in
inc
sub
mov
push
push
push
leave
mov
loope
adc
xchg
xchg
in
cmp
sub
and
and
jne
mov
and
insl
jl
ds
dec
scas
into
cwtl
data16
push
imul
xchg
insb
popf
jp
cmp
shl
jp
mov
push
lret
sbb
cmp
and
cmpsl
jp
imull
pop
and
repnz
arpl
dec
cmpsl
mov
mov
jbe
test
jecxz
out
add
add
call
ret
sbb
out
push
push
fcomp
mov
and
and
sahf
imul
cmpl
shrl
jbe
ja
pop
inc
mov
leave
subb
movsl
out
and
mov
aad
lods
lock
aam
jge
pop
inc
fcmovnbe
push
xchg
sti
test
and
add
xor
movsl
clc
mov
mov
ret
movl
pop
push
std
mov
pop
dec
cld
dec
mov
mov
xor
shlb
repz
jne
int3
movsl
movsw
mov
sbb
dec
cmp
adc
adc
arpl
add
xchg
mov
mov
ljmp
xor
sub
and
or
jmp
neg
sbb
xlat
jle
lods
mov
das
mov
mov
and
lock
adc
pushf
pop
sti
adcl
and
les
mov
mov
mov
push
adc
push
gs
aam
not
aaa
dec
je
mov
dec
cltd
sub
xchg
scas
cmp
cwtl
js
cmp
xchg
pusha
out
inc
xchg
loopne
cmp
sbbl
adc
call
adc
mov
jl
mov
repnz
imul
push
inc
pop
mov
fdivrl
cli
pop
imul
imul
xor
dec
mov
pop
gs
dec
aam
sub
popl
sbb
mov
out
sub
in
dec
or
pop
sahf
mull
jbe
pop
sub
pop
and
nop
xchg
cmp
xor
cmp
mov
adc
lret
js
push
jmp
mov
sub
test
push
outsw
rclb
jnp
shlb
xchg
in
imul
push
mov
and
imul
test
cmpsl
and
incb
cltd
dec
mov
iret
inc
mov
cmp
mov
inc
dec
push
pusha
repnz
lods
data16
mov
cmp
pop
inc
js
imul
mov
mov
mov
pop
cmp
xchg
leave
adcl
jmp
nop
cmp
xchg
pusha
adc
loop
stos
jo
sub
movsb
test
sub
xchg
xor
dec
es
add
bound
push
shrl
add
cltd
out
fsubrl
mov
and
mov
mov
scas
daa
add
test
aaa
adc
cmp
adc
fnsave
xchg
cmp
pop
push
and
jne
in
adc
ficoml
cmp
jl
hlt
mov
dec
and
in
test
std
fsubl
scas
add
or
add
xchg
or
jle
adc
push
dec
lock
fiaddl
xlat
push
les
cmp
sarb
hlt
pushf
add
jp
insb
dec
adc
in
and
xor
paddq
cmp
or
dec
add
loopne
cld
daa
rolb
in
xchg
je
out
clc
and
test
xchg
adc
xor
out
pop
scas
xor
xor
ljmp
push
test
mov
and
and
ljmp
mov
sbb
push
sub
inc
cld
pop
inc
xchg
mov
dec
push
add
in
test
sub
mov
pushf
dec
addl
pusha
dec
jbe
or
xor
out
ss
into
mov
inc
jge
jle
cld
out
cltd
popf
dec
inc
add
or
out
mov
mov
je
jae
add
mov
or
mov
sti
shll
or
jmp
sub
pop
arpl
inc
popa
or
pop
mov
cmpsl
jge
imul
enter
jbe
xorl
int
jo
in
gs
mov
jo
xor
dec
cmp
push
out
inc
sub
movsl
ret
cmp
cltd
in
jnp
in
and
or
push
mov
sbb
mov
and
mov
jle
adc
pop
xchg
fnstcw
dec
and
sarl
jae
push
and
pop
pop
roll
popa
les
mov
scas
leave
sub
lret
dec
xchg
lock
pop
mov
stos
jp
cmp
inc
aam
out
inc
or
pop
lcall
mov
xchg
pop
outsb
cmpsl
inc
jne
cmc
mov
out
aas
and
fldl
jo
pop
inc
mov
mov
inc
pop
mov
into
fldenv
lea
fsubrp
xchg
outsb
in
jl
and
inc
sbb
mov
dec
pop
or
daa
xor
inc
lret
push
lret
pop
adc
lahf
adc
lea
sti
sub
call
aad
mov
cltd
cmpsb
fnstenv
loopne
shr
popa
jae
xchg
hlt
xorl
fs
cs
icebp
outsb
rcrb
add
xchg
jp
or
fwait
jmp
pop
xchg
push
xchg
xchg
pushf
xor
popa
js
adc
pop
sbb
adc
xor
test
nop
push
add
ljmp
pop
dec
pop
aad
scas
or
push
outsl
mov
stos
inc
sub
adc
shll
sub
ja
sbb
outsl
pop
outsb
push
test
mov
or
pusha
pop
and
neg
or
mov
mov
cmpsl
mov
ja
push
data16
mov
push
or
flds
inc
inc
vaesdeclast
add
fldcw
fcomip
push
pop
scas
repz
roll
xchg
pop
lods
sbb
insl
fcomip
outsb
push
int
or
in
leave
cs
cld
push
movsl
es
and
xor
dec
movl
push
jne
mov
jo
ficoms
jg
lcall
sbb
sub
stos
arpl
cltd
mov
test
sarl
cld
and
sti
lock
insl
push
cltd
add
scas
adc
aad
push
shll
jge
jae
stos
push
test
sbb
cmc
fs
and
into
push
inc
lcall
es
push
ret
dec
rclb
jae
xor
sbb
xchg
enter
adc
jmp
xchg
mov
pop
pop
jae
ret
cwtl
js
sbb
out
ds
daa
and
jne
mov
pushf
cmp
je
fwait
jbe
stos
pop
ja
out
mov
cld
scas
push
push
mov
shrb
sbb
out
andl
xorl
test
xchg
insl
mov
lret
inc
scas
dec
xchg
fnstcw
test
ret
icebp
fldcw
dec
push
jne
dec
lea
sub
scas
cmpsb
push
cltd
arpl
pusha
cmp
cli
mov
mov
hlt
fdivs
scas
mov
xor
imul
mov
sbb
or
test
inc
loop
and
bound
test
lret
data16
lea
icebp
aaa
or
repz
dec
int
shrb
jno
ds
and
and
push
js
hlt
jno
je
ja
sub
cltd
dec
fisttps
push
and
xor
xor
test
mov
inc
ljmp
dec
pushaw
push
cmpsb
push
xor
in
movsl
cwtl
sub
std
pushf
incl
lods
cmpsl
mov
daa
bound
insb
and
xchg
dec
test
das
dec
les
push
xor
adc
in
jg
dec
push
dec
adc
scas
adc
jo
xchg
cld
push
xchg
stos
out
add
mov
pop
pop
mov
xchg
hlt
dec
daa
mov
sub
rolb
das
arpl
push
mov
jns
cmp
xchg
sub
mov
add
ret
dec
and
xchg
pop
arpl
fisubl
pop
sbb
xchg
out
loopne
pop
xor
imul
movsl
mov
test
stc
dec
lods
movsl
in
push
lods
es
jp
add
jno
pushf
ja
jmp
addr16
push
stos
dec
shrb
ret
std
repnz
push
pushf
mov
sahf
add
cmc
jno
test
fcomip
fiaddl
shll
mov
inc
add
dec
cmp
ja
mov
and
outsl
lds
std
adc
xchg
adc
pusha
neg
icebp
sub
or
mov
dec
popa
rorb
pop
jns
call
enter
ret
sub
and
sbb
adc
in
data16
dec
lods
mov
adc
dec
pop
lret
gs
into
push
xchg
sub
stos
les
popa
fidivrl
xlat
mov
int
dec
xchg
pop
add
cmpsl
jmp
push
mov
repz
mov
pop
fiaddl
mov
fnsave
push
add
les
aaa
cs
ficoml
sarl
aas
stos
fwait
and
push
jo
cmp
push
inc
adc
idiv
cmpsl
sbb
lock
sub
dec
rol
fs
shll
cmp
dec
jb
loope
movsl
cs
inc
add
pop
fsubrs
in
xor
cmc
xorl
clc
xchg
and
lock
xchg
dec
xlat
fst
lahf
rorb
out
aam
sub
ja
loope
movl
add
sbb
xor
and
shll
shlb
or
push
xor
pop
push
mov
outsl
stos
fiaddl
mov
lcall
int
lock
out
cmp
or
mov
mov
add
add
pusha
xchg
cltd
ljmp
add
les
lods
xor
loop
mov
xchg
gs
repz
inc
imull
or
sub
add
repz
jg
out
mov
and
xchg
jbe
lahf
pusha
mov
pusha
jmp
fwait
adc
push
insb
shrl
nop
jle
lods
test
sahf
rcrb
out
push
cmp
clc
cmp
sub
sub
sbb
push
mov
cli
mov
daa
sahf
mov
cltd
test
sbb
vpsubusw
mov
pop
sub
cs
jp
adcl
pop
jle
addr16
std
imul
into
mov
in
sub
xchg
push
inc
fwait
repz
lods
fldcw
jo
pop
cs
incb
jl
push
adc
xor
orb
loope
mov
ret
mov
and
and
insb
mov
enter
sub
fdivs
js
stos
sbb
rclb
dec
ds
loope
fdivl
pop
mov
mov
std
ret
add
pusha
int
lret
pop
nop
push
aaa
les
clc
cld
mov
pop
ret
leave
sbb
xchg
jge
rcrl
ret
lret
out
fildll
cmp
lock
in
add
scas
aam
sub
xor
add
sbb
lock
stos
cmp
ljmp
jmp
aas
rorl
fstpt
pushl
out
sbb
loopne
or
and
ja
lea
push
lock
sarb
pushf
stc
lock
shll
movups
inc
push
or
icebp
arpl
xchg
mov
idiv
test
or
ja
mov
pop
shrl
test
in
xor
mov
push
daa
dec
pop
movsb
sub
aam
mov
push
jecxz
cmp
sti
sub
push
xlat
std
mov
xchg
jp
jle
pop
sub
mov
push
sub
jae
push
xor
jle
inc
sub
cltd
and
cmp
iret
xor
js
sbb
cmp
stc
xchg
int3
mov
outsb
ret
rolb
fs
call
xor
mov
sub
imul
cmp
scas
xor
hlt
lods
cmpb
leave
inc
popa
jnp
in
lret
mov
cld
pop
sti
mov
mov
add
mov
enter
xlat
cmc
jo
mov
ja
inc
rcl
push
mov
ret
lcall
idivl
cmc
lret
aam
imul
jnp
icebp
scas
mov
dec
addr16
push
fwait
inc
sub
sahf
mov
xchg
adc
push
mov
mov
lret
mov
push
sarl
push
lods
xchg
xor
cltd
mov
fwait
xor
in
fbld
mov
dec
xchg
ja
frstpm(287
xchg
sbb
mov
sub
cmp
mov
xchg
add
xchg
xchg
cmp
pop
test
mov
add
adc
mov
call
fistl
pop
inc
repnz
push
lock
dec
pop
aad
cmc
lods
add
cmc
fdivrl
dec
xlat
mov
and
jle
loopne
push
insb
xor
cmp
fucomp
pop
push
cld
cmp
xchg
push
xorb
inc
xlat
adc
xchg
mov
xchg
push
shll
bound
add
mov
inc
cmp
fcomp
outsb
frstor
mov
std
testl
push
pop
mov
dec
lret
adc
or
jecxz
jge
ja
stos
jbe
movsbl
adc
test
test
cmpb
ucomiss
lret
mov
pushf
test
ss
sub
inc
aam
jns
leave
out
adcl
jp
pop
pop
xor
xor
cmp
mov
stos
movsl
lahf
ljmp
and
cli
lods
sub
jno
adcb
les
dec
scas
pushl
mov
inc
mov
ja
cmpsb
push
sbb
xchg
loopne
push
lret
mov
and
mov
shll
sbb
push
in
xchg
jne
or
aas
xchg
adc
ljmp
fnstsw
xchg
xchg
loopne
out
lods
push
sbb
insl
sarb
push
enter
dec
push
adcb
ror
stc
inc
cmpsl
stc
jns
xor
mov
in
lds
mov
add
and
pop
stos
pop
adc
mov
imul
out
mov
pop
adc
cmpsb
outsb
mov
stc
xor
addb
mov
maxps
mov
flds
roll
sub
push
jle
mov
in
setno
clc
cmp
clc
lods
test
and
mov
loope
xchg
jmp
jge
fldcw
js
int3
inc
mov
iret
push
fcoml
mov
xchg
and
arpl
pushf
rorl
mov
cli
and
sahf
dec
jo
push
or
sub
rorb
shr
adc
pop
sub
sarb
insl
fsubrs
adc
stos
pop
sub
mov
jge
stc
pop
lods
pop
out
push
fsts
add
jo
push
ret
mov
ss
popa
or
in
insl
stc
cmpsb
insl
ret
xor
inc
lcall
jne
push
pop
fstl
test
jno
adc
iret
out
lcall
ret
and
insl
loopne
mov
push
add
cmp
push
or
jg
sti
add
dec
sub
adc
xchg
jmp
xlat
iret
scas
and
cld
lds
mov
movl
scas
xor
inc
add
mov
cmp
popa
pushf
push
mov
lcall
daa
mov
outsb
arpl
or
mov
mov
mov
mov
loop
jb
jmp
in
scas
cltd
cmp
ljmp
mov
sub
dec
dec
fwait
and
and
push
sbb
cltd
cmp
imul
xchg
in
cld
aad
jne
xor
mov
lds
dec
sbb
scas
insl
filds
enter
lds
or
mov
push
mov
stc
xor
push
xor
popa
push
cmp
in
lret
sub
sub
pusha
add
add
sahf
movsb
pop
out
idivl
ret
sub
js
imul
insb
imul
jne
sbb
fwait
leave
mov
push
scas
cmp
push
cld
in
stos
mov
data16
fisubs
inc
jle
push
cltd
push
shr
test
jecxz
cmp
inc
cld
ja
sub
mov
lods
jb
js
push
xchg
xchg
scas
cltd
adc
insl
stos
mov
mov
xchg
adc
pop
insb
cmp
mov
fcoml
fmulp
lock
cmpsb
setge
daa
dec
cmp
gs
test
dec
mov
fsts
jmp
jns
lods
arpl
sbb
cmp
jg
add
pop
mov
in
nop
inc
sahf
inc
scas
push
cmp
sahf
sub
mov
pop
sbb
ljmp
push
fdivrl
cltd
data16
xchg
insb
shlb
and
shrl
popf
loope
mov
push
jae
arpl
loopne
cli
xor
into
cmp
inc
push
test
push
jecxz
mov
stos
pop
jl
test
or
xchg
sub
pop
mov
enter
xchg
rep
sbbl
test
jge
and
mov
xchg
stc
je
fisttps
icebp
push
xchg
mov
push
cwtl
xchg
jl
jmp
testb
and
mov
mov
addl
scas
sahf
fisttpll
popf
mov
xor
cmp
jecxz
sbb
mov
adc
sahf
nop
clc
jp
hlt
cmp
inc
add
adc
dec
mov
fnsave
xor
xchg
aaa
out
pop
inc
lret
pop
cmp
and
jae
repnz
aad
adc
enter
push
push
scas
dec
xor
ja
push
push
xchg
aaa
sub
push
and
or
mov
mov
out
xorl
dec
stc
lods
add
arpl
insl
lds
rcrl
adc
dec
insb
inc
test
ror
mov
out
xor
jge
xor
inc
out
jae
cmp
xorl
push
cld
mov
xlat
sbb
push
cs
dec
lret
popf
call
std
xor
adc
mov
mov
test
sbb
subl
test
es
inc
lock
aaa
jae
sahf
sti
sbb
int3
jnp
jnp
ret
mov
pop
adc
jl
xchg
push
inc
sahf
inc
stc
pop
sub
aam
xor
popa
xchg
adc
cmp
fcmovbe
mov
mov
xor
loop
lret
jbe
pop
sbb
add
xchg
into
mov
sbb
jle
in
mov
cmpsl
insb
sbb
add
cmpsl
push
xor
addr16
loopne
js
lock
push
in
pop
pop
and
shll
and
fs
out
shrb
adc
hlt
cmp
fisttpl
aaa
jecxz
cmp
jle
or
and
adcl
shrb
int
mov
popa
mov
mulb
scas
inc
push
pop
jb
push
xchg
cli
imul
mov
pop
mov
mov
lret
mov
or
and
je
call
je
insb
repz
negb
fisubs
pop
or
pop
and
sbb
shlb
xchg
mov
jmp
hlt
adc
mov
sbb
pop
dec
bound
dec
bound
lods
pop
test
pop
push
dec
mov
in
pop
in
adc
sti
shr
push
sub
xor
loopne
lahf
sub
loope
in
dec
pop
cltd
cmp
or
repz
jb
cltd
mov
popa
insb
jge,pt
mov
test
inc
adc
nop
roll
xchg
and
in
insb
out
jb
and
pop
inc
cmp
pop
cli
push
ficompl
rcrl
xor
jg
in
sub
jne
mov
out
push
sbb
cmp
sti
leave
pop
mov
loopne
mov
loop
jb
lcall
mov
dec
mov
dec
sub
fldenv
popa
clc
xchg
rolb
fwait
mov
pop
mov
dec
fldt
sbb
mov
ja
or
sub
cmp
test
mov
cmp
or
int3
xchg
and
jb
mov
mov
imul
pop
push
pop
jno
fcmovb
dec
filds
sbb
leave
dec
mov
fisttps
mov
pop
pop
aad
in
sbbl
mov
movsb
pop
ret
sub
or
popa
call
push
inc
mov
out
ljmp
sbb
mov
mov
jmp
mov
pop
mov
and
jl
jbe
inc
iret
jge
cmp
adc
fmull
and
sbb
xchg
out
sub
lret
fidivrl
dec
xor
sub
lret
or
adc
push
into
jbe
jnp
lods
fildll
sbb
clc
stos
fisubrl
test
pop
sub
sbb
outsb
and
imul
jge
mov
ljmp
sbb
sarb
shrb
jno
ljmp
sbb
add
js
arpl
sysenter
push
fwait
out
mov
xchg
insl
out
push
fwait
push
into
stos
mov
mov
iret
mov
mov
lret
in
cmp
ljmp
jmp
lret
cmp
repnz
jne
sbb
das
dec
mov
add
jns
cmp
inc
mov
loop
aam
icebp
add
or
int
mov
stc
dec
addr16
cli
dec
sbb
cltd
cmp
lahf
pop
xchg
js
jb
xor
cltd
mov
enter
out
insl
push
and
and
gs
aas
repnz
data16
hlt
filds
in
lods
out
mov
gs
mov
mov
and
and
push
std
xor
lods
or
pop
out
sub
jmp
imul
jnp
andl
fmuls
cmp
mov
jle
adc
mov
mov
push
xor
push
mov
pop
cltd
popa
inc
aas
rclb
inc
hlt
mov
psubb
adc
loop
aam
imul
sbb
adc
adc
mov
push
mov
adc
and
cli
scas
stc
xchg
andb
pop
ffree
jmp
testb
inc
inc
out
test
mov
lods
and
push
jecxz
clc
rolb
in
add
rcrb
mov
out
and
or
or
fstl
in
push
push
cmp
and
leave
xchg
stc
pop
jbe
push
es
test
int3
sbb
or
or
xchg
clc
inc
out
and
shrb
es
xchg
inc
cmpsl
push
cwtl
pop
inc
pop
add
sbb
or
dec
sbb
out
xlat
push
inc
gs
stos
shl
das
mov
ret
add
inc
fistps
adc
push
mov
push
jo
repnz
ljmp
lods
jbe
mov
lret
adc
jo
mov
jge
push
dec
les
das
imul
mov
stos
mov
dec
add
jge
mov
dec
mov
loope
mov
ret
adc
inc
int
jle
dec
adc
sbb
mov
js,pn
addb
pop
xor
nop
cmpsb
stos
inc
mov
and
call
cli
lods
push
js
addr16
sbb
mov
dec
dec
add
mov
sub
in
insb
std
ret
mov
pop
inc
xlat
int
pop
outsb
push
mov
aaa
jl
sub
dec
mov
fldenv
aas
ret
dec
jae
mov
mov
call
lcall
fidivl
pop
ljmp
jae
sub
ret
outsl
call
outsl
jno
clc
jge
pop
xor
out
aam
fldl
movsl
fistps
inc
push
stos
sub
dec
das
inc
push
pop
sub
in
out
mov
sahf
test
data16
pop
stos
aas
and
lds
sub
ds
sub
frstor
outsb
jne
and
or
fsubrs
adc
aad
jecxz
sub
rorl
fsubs
dec
inc
jb
hlt
test
or
lods
mov
out
outsl
andb
push
filds
int
loopne
call
and
mov
xchg
outsl
enter
and
lea
cmp
ja
daa
push
push
fsts
xchg
xchg
pop
rcll
stos
add
cmp
fucompp
in
sahf
add
imulb
push
add
xchg
mov
or
sbb
adc
movsb
pop
push
inc
and
leave
cmp
sub
xor
inc
sub
cmpsl
pusha
mov
jnp
decb
fidivrs
in
shl
push
insl
or
movsl
cwtl
clc
lods
sub
sbb
pusha
fdivrs
aas
mov
loope
or
aam
mov
sub
js
mov
dec
jns
lock
psrlq
inc
jp
in
push
jne
push
pop
add
movsb
inc
or
stos
aam
mov
mov
adcb
sub
push
cmpl
xlat
movsb
push
xchg
pop
sbb
and
clc
fcmovnb
push
call
loope
add
inc
mov
rolb
sbb
xchg
sbb
dec
test
cltd
iret
test
aaa
xchg
jno
sahf
fwait
jno
adc
add
in
mov
mov
mov
pop
sub
jmp
cmp
xor
negb
mov
mov
or
jae
stc
rolb
hlt
ret
ds
and
push
mov
or
repnz
xor
aam
or
pop
adc
pop
gs
in
fstps
mov
jp
imul
lods
jge
cmp
rolb
call
jmp
fistl
loop
fstpt
adc
jmp
popf
push
xchg
fwait
mov
xor
cmp
dec
add
je
sub
pop
cmp
bound
mov
mov
jecxz
dec
sub
jo
jp
shl
movsb
les
sbb
and
jmp
dec
inc
in
mov
jle
xchg
pop
dec
jl
imul
jmp
fidivrs
adc
int
push
add
inc
inc
xchg
xchg
aaa
int3
mov
cmp
dec
lds
jp
and
lret
push
scas
push
fnstcw
adc
cmp
mov
or
mov
add
push
cltd
fs
mov
dec
mov
mov
data16
or
sbb
mov
pusha
xchg
cmpsb
sbb
inc
aas
push
and
dec
push
inc
outsb
push
std
xchg
mov
mov
aad
add
cmp
mov
std
insb
mov
into
mov
cs
in
pop
imull
jl
inc
mull
push
cmc
outsl
shl
pop
xor
cmpsl
xor
dec
scas
nop
lahf
int3
adc
scas
sbb
es
test
ss
xchg
test
pop
pushf
int3
push
mov
jmp
cmpsl
xor
jmp
xchg
aaa
push
test
inc
scas
xchg
xchg
xchg
cli
push
push
mov
fcoms
pop
notb
dec
push
mov
and
xchg
mov
loopne
into
adc
test
mov
ljmp
nop
sbb
xor
sti
xorb
inc
xchg
sub
or
xor
jae
adc
lret
jl
les
xchg
sbb
jno
add
mov
or
and
xchg
xlat
ja
push
pop
mov
cmpsl
imul
gs
jne
loopne
adc
xor
movsb
xchg
add
inc
xchg
and
xchg
mov
mov
pusha
fldenv
icebp
bound
or
dec
fmull
xor
mov
scas
out
push
imulb
xchg
adcb
xchg
les
jae
or
inc
and
cmp
mov
pop
pop
mov
imul
bound
mov
sti
loopne
jbe
xor
push
sahf
cmpsb
add
cmp
cld
cltd
lret
leave
inc
aad
mov
std
movsb
int
fisubs
mov
out
add
fisttpll
or
shll
inc
inc
in
test
xchg
mov
and
test
enter
ljmp
pop
cs
cmp
fs
pop
cmpsl
test
std
mov
scas
icebp
hlt
jno
data16
idivb
mov
pop
inc
cmp
test
jecxz
dec
inc
push
xor
repnz
push
jns
add
xor
or
pop
or
xchg
mov
inc
add
ja
shll
testb
adc
jo
mov
cltd
mov
push
insl
push
inc
pop
pop
mov
xchg
add
mov
lret
sar
dec
lret
int3
push
in
sbb
and
inc
sub
cmc
in
inc
mov
test
pop
iret
mov
cmp
fucom
push
dec
mov
and
aam
into
out
or
call
mov
js
push
ss
xchg
mov
jp
inc
mov
bound
sbb
int3
outsl
lahf
or
cld
call
dec
idivb
cmp
inc
rorb
popf
mov
cld
stos
pop
loope
filds
adc
adc
lret
push
out
mov
push
stc
xor
sbbb
insl
or
test
adc
call
lahf
scas
xchg
lret
jl
jns
ret
xchg
insl
test
inc
fptan
jns
push
repnz
inc
fucomip
addr16
or
popa
dec
mov
jecxz
push
cmc
mov
mov
xchg
xchg
dec
push
movsb
push
out
sbb
ds
sbb
xchg
dec
clc
rorb
mov
lsl
mov
pop
js
in
pop
mov
sub
outsl
adc
into
dec
je
roll
dec
andl
push
fsubrl
js
push
pop
xor
leave
out
push
jo
insb
int3
repz
loope
mov
cmp
mov
cmp
adc
add
add
dec
mov
adc
outsl
adc
mov
pusha
imul
xor
mov
adc
push
cmp
jne
mov
out
mov
jmp
inc
jmp
mov
and
and
jp
into
mov
sti
pop
ljmp
mov
loop
cmc
sbb
xchg
outsb
cld
sbb
sbb
arpl
les
fdivr
xchg
xchg
lods
ficomps
sub
sub
aas
js
xchg
jle
sub
dec
popa
push
jo
cmp
sbb
stos
mov
nop
lods
xchg
ja
lret
ja
dec
pushl
inc
test
dec
and
lcall
xlat
fs
fidivrl
popf
inc
adc
lret
test
nop
add
mov
outsb
das
xlat
lock
aas
cmpsl
lods
push
push
xor
cltd
movsb
mov
mov
insb
fs
lahf
mov
fdivs
mov
xchg
cmp
push
mov
fstpl
inc
jbe
loopne
lret
add
cmc
mov
add
mov
and
arpl
xor
roll
mov
bound
sbb
outsb
adc
data16
push
int
adc
roll
jns
mov
dec
rorb
xor
jbe
in
xchg
in
std
fistpll
mov
shl
cmpsl
cli
mov
or
add
popa
jle
sbb
push
or
xchg
jo
adc
test
loopne
mov
dec
mov
idivl
pusha
mov
dec
nop
std
pop
push
mov
shll
jg
or
adc
xchg
sbb
lock
lret
xchg
pop
cmp
roll
es
fld
push
mov
enter
js
into
in
in
push
cmp
adc
mov
jns
push
and
cwtl
mov
xlat
pop
adc
jae
sub
jne
call
mov
xchg
nop
push
test
push
in
in
and
fidivs
cmpsl
xchg
push
xor
ds
sub
es
xor
dec
and
in
ss
mov
push
lcall
jp
fistpl
cmp
sahf
bound
push
inc
xchg
mov
push
jmp
aad
push
cltd
mov
xchg
orb
fsts
sub
in
mov
add
mov
bound
xor
jge
add
pushf
es
lea
push
adc
inc
fucomi
aam
pop
fnsave
xor
and
ds
out
push
pop
and
jo
movl
inc
leave
or
add
jmp
icebp
adc
pop
cmpsb
xchg
cmp
mov
dec
rcll
dec
fimuls
mov
in
cltd
stc
jbe
aad
pop
js
jge
mov
adc
push
mov
enter
mov
subl
sbb
imul
push
mov
in
mov
lock
jae
xchg
cli
cmp
nop
lret
mov
test
arpl
push
lods
adc
repnz
std
mov
mov
sub
nop
add
addr16
test
push
inc
pop
repnz
enter
xchg
loop
mov
mov
mov
sbb
push
lock
jge
sbb
lahf
fmuls
ja
aad
xchg
into
popf
pop
andl
loopne
cmp
mov
inc
call
repz
or
jg
into
out
fucomp
into
mov
loope
ds
cmpsl
push
mov
popa
push
into
xchg
pop
add
mov
scas
pop
test
sub
movsl
icebp
xchg
adc
push
pop
in
jp
je
insb
fcomps
sub
add
jns
stos
lret
push
cmc
sti
loopne
mov
push
test
dec
in
inc
jnp
push
fidivrl
cmc
pop
inc
jle
aam
xchg
mov
pop
jae
leave
movsb
ret
test
stos
jbe
out
lahf
in
pop
cmp
xor
jo
lock
dec
jae
jns
out
fwait
pop
lea
shll
inc
je
mov
fwait
sub
mov
add
loopne
jmp
push
pop
sub
jp
xchg
mov
xchg
xor
add
fadds
dec
lahf
daa
and
lret
lret
ret
in
and
adc
mov
add
lods
xor
and
fdivp
sti
loop
mov
cltd
inc
sub
fisttps
mov
jnp
adc
int
jmp
dec
addr16
mov
and
push
add
dec
lcall
sbb
push
push
cs
into
fisubs
mov
mov
mov
xchg
push
add
stc
test
push
xor
loop
pop
or
sub
mov
lcall
scas
push
mov
das
mov
jle
pop
cmp
ljmp
cmp
repz
test
orl
mov
fnstcw
sub
and
insl
repz
push
pushf
insl
ljmp
cmp
in
rolb
xchg
clc
aas
or
shrl
jnp
popa
adc
xor
adc
or
xchg
cmp
icebp
insb
ljmp
fs
shrb
mov
push
fucomp
jl
fwait
movsb
or
insl
jb
hlt
call
ss
mov
adc
test
push
xchg
pop
bound
add
xor
xchg
stos
mov
pop
dec
jo
sarl
cmp
in
jne
rol
add
mov
mov
sbb
dec
xor
inc
insl
sbb
notl
popf
pop
cmovp
in
stos
sub
pop
stc
push
insl
and
loope
call
imul
pop
rolb
jp
pop
dec
cmp
or
clc
xor
sbb
dec
xorb
and
jb
or
jle
pop
sub
push
pop
call
out
ficoms
pusha
mov
inc
aam
test
repz
jp
or
push
xchg
lods
pop
pop
adc
popf
mov
xor
scas
push
pop
inc
mov
pop
ljmp
outsb
loopne
mov
and
out
je
fstps
mov
pop
into
push
outsb
imul
data16
or
xchg
mov
shl
add
mov
sub
add
dec
int3
dec
test
rcrl
dec
and
shrb
ret
xor
pop
dec
out
subl
cmp
jmp
pop
push
clc
cld
popf
xor
mov
test
or
in
mov
test
mov
ljmp
cwtl
ljmp
orb
mov
jmp
loopne
fs
movsl
in
push
and
cli
mov
sbb
xor
inc
loopne
jp
and
or
cmp
test
rorl
std
cmp
out
mov
push
inc
mov
cmpb
jge
mov
mov
push
lea
mov
jo
pusha
cmovle
jg
insl
sbb
stc
movsl
outsl
clc
gs
je
test
xor
popf
inc
adc
rdmsr
mov
in
sbb
cs
lock
jecxz
ss
inc
div
mov
jp
sub
aad
push
pop
fincstp
xchg
xchg
push
mov
jb
popf
test
adc
push
mov
out
and
mov
xchg
xchg
ret
push
imul
add
insb
out
int
and
mov
into
mov
xchg
enter
and
jbe
mov
sub
call
stos
cmp
cltd
cmp
lods
mov
add
push
xchg
out
pop
inc
dec
stc
in
pop
sbb
loope
daa
xor
xchg
xchg
xchg
adc
sbbb
pushf
mov
sbb
and
lret
test
ss
sbb
xchg
lods
jbe
popf
sahf
dec
ficompl
sbb
mov
jmp
shll
or
fs
add
mov
cmp
fdivrl
daa
inc
lcall
push
push
push
mov
clc
xor
xlat
fistl
jo
sahf
xor
mov
rclb
lret
negb
out
lcall
mov
int
or
mov
mov
or
ret
loop
fnsave
leave
and
push
js
mov
ds
lock
test
mov
and
dec
sub
xchg
mov
das
sbb
xchg
push
loope
imul
adc
and
sbb
das
fstps
int
sahf
scas
jge
and
sbb
lahf
add
push
lret
mov
and
je
shrb
xchg
dec
into
gs
mov
cltd
sbb
hlt
popl
stos
adc
les
add
les
ret
out
les
mov
ds
test
pop
in
xor
dec
xor
pop
mov
in
stc
clc
ret
movsb
out
cmc
jge
iret
add
xchg
daa
adc
mov
cmp
cmc
negb
dec
stos
and
jmp
jns
jbe
xorl
lret
or
add
cld
rolb
and
jb
xchg
mov
scas
into
mov
mov
xor
xlat
js
or
jg
pop
das
adcl
movsb
mov
fs
mov
pop
out
ljmp
inc
jle
scas
add
or
mov
mov
cmp
cmp
hlt
shrb
lods
ret
pop
insl
and
sub
js
test
jmp
inc
inc
lret
xchg
push
das
frstor
mov
sahf
sbb
lea
arpl
cwtl
mov
xchg
repz
int
or
jg
subb
orl
aam
lods
dec
loope
aas
mov
cmp
ret
test
loop
or
js
nop
nop
and
rcrb
nop
mov
push
rolb
inc
add
add
push
mov
imul
push
aad
add
cwtl
push
adc
rcll
sbb
xchg
jp
jns
fisubrs
fsubrs
mov
sub
popa
roll
into
mov
stos
xchg
int3
xchg
jae
popf
fwait
movsl
sub
cmpsl
cmc
test
pop
sbb
jmp
jmp
mov
or
leave
add
or
jnp
dec
inc
push
pop
and
adc
insb
data16
xchg
or
cld
mov
xorl
lea
mov
cmp
sub
pop
pop
xchg
stc
jno
pop
dec
hlt
andl
dec
lret
jle
pop
mov
or
push
xchg
pop
dec
movsb
stos
and
or
out
push
adc
scas
push
nop
sbb
push
add
repz
hlt
cmp
lret
movsl
dec
mov
in
test
or
in
aaa
loopne
cld
mov
or
insl
adc
loop
push
ss
mov
mov
sub
lret
lods
iret
out
fsubp
dec
out
inc
iret
lods
in
jo
sub
or
cmpsl
sbb
or
pop
cmp
hlt
test
enter
push
dec
loop
cld
push
int3
sbb
and
cld
sbb
push
cmp
cmpl
xchg
add
movsl
mov
cltd
stos
loopne
loopne
out
and
call
sub
push
cmp
inc
and
pop
xchg
popf
stos
bound
adc
sub
push
repnz
jecxz
pop
dec
ret
in
insb
push
in
pop
push
imul
enter
mov
sub
es
fildll
sbb
lret
jnp
mov
fsubrs
dec
inc
jo
inc
jmp
gs
icebp
rcrb
mov
sarl
mov
dec
shll
aam
scas
push
jle
adc
add
fwait
jge
cmp
stos
je
test
cli
inc
out
cmp
jmp
insl
pop
mov
and
cmp
fs
mov
cs
sbbl
push
mov
xchg
xchg
sahf
cmp
iret
out
in
iret
lcall
sub
jp
mov
sbb
fnsave
repz
daa
mov
pop
out
ror
notw
adc
inc
insl
ss
jge
stos
into
and
cmc
sbb
enter
out
mov
popf
fldpi
scas
pusha
out
mov
es
into
sub
xchg
mov
lds
les
inc
sbb
xchg
imul
dec
insb
loope
aad
jecxz
pop
pusha
xchg
xor
test
or
or
mov
jg
xchg
mov
int3
in
and
sti
push
xchg
clc
sbb
jo
xchg
mov
loope
nop
lret
insb
push
xor
cmp
aam
ret
imul
and
mov
inc
loop
mov
mov
add
rcr
stc
lods
mov
mov
jnp
jno
lods
add
jmp
fbstp
call
inc
fcoms
loop
lea
mov
cmpsb
sbb
dec
mov
jg
mov
aam
jp
dec
ljmp
push
cmp
ret
mov
cmp
iret
movsb
push
jp
loope
mov
repz
out
jnp
push
shr
div
jg
xchg
test
fucomp
mov
add
xchg
lods
jo
jmp
mov
pop
jbe
inc
lcall
and
subl
lods
mov
dec
push
scas
sub
mov
pop
jge
jl
mov
fisttpll
and
fwait
add
sti
mov
xor
dec
pusha
movb
mov
pop
imulb
jnp
or
dec
push
repnz
and
jbe
jb
dec
lods
arpl
xchg
bswap
inc
pop
or
mov
test
mov
mov
jl
mov
jo
push
rcrb
rcll
fsubrl
cmpsb
ds
dec
dec
lds
sub
dec
test
mov
ds
pop
sbb
or
or
push
hlt
fildll
push
fwait
inc
dec
push
fldcw
addl
notl
popa
add
xchg
dec
out
mov
mov
jo
cli
push
cmpsl
stc
scas
sub
dec
sbb
das
sarl
xchg
sbb
inc
push
scas
mov
hlt
adc
mov
pop
std
bound
or
les
int3
sub
test
sbbb
push
push
mov
out
sub
je
outsl
mov
gs
jo
cmp
jno
adc
pop
sbb
cmp
gs
fs
rcll
xlat
mov
sbb
in
outsb
add
mov
cmpsb
push
add
aad
fidivs
cmpl
cmp
hlt
inc
loope
jecxz
push
ffreep
pop
nop
sub
into
int
jae
dec
shlb
rcrb
stos
jmp
in
es
dec
data16
scas
sub
dec
inc
nop
and
push
aaa
xor
mov
cld
mov
and
dec
rcll
dec
add
cmc
icebp
stc
xorb
push
pushf
xlat
popf
pop
or
pop
popf
scas
out
in
sbb
pop
push
dec
pop
jns
xor
push
movsl
pusha
adc
fcmovne
or
aam
xor
fsubs
mov
jae
fdivrs
insb
jbe
arpl
je
jp
imul
fcompl
add
push
and
out
jae
aad
push
icebp
fs
pop
mov
cmc
ret
xchg
lret
or
lods
jecxz
jns
sbbb
jno
aam
rcrb
mov
xlat
mov
insl
xchg
test
out
jnp
fwait
cmp
cmp
dec
fiadds
or
icebp
and
or
insl
testb
adc
add
xlat
add
mov
aaa
xor
out
test
rcll
ret
hlt
jne
pop
rcr
xor
idiv
subl
add
ret
mov
das
and
lods
lock
inc
in
jbe
aas
mov
mov
ja
sahf
sbb
jl
daa
scas
stos
mov
sbb
xchg
ss
aam
and
stos
jl
movsb
lods
nop
xlat
loope
sub
test
adc
aam
cmc
adc
leave
scas
imul
les
sbb
jge
lods
aad
fucompp
add
or
dec
in
cmp
movsl
test
cs
imul
andl
sub
jo
ds
sbb
lahf
or
call
inc
shl
ret
jp
mov
rcll
rcll
and
inc
aam
test
fwait
mov
adc
xor
loop
dec
cmpl
lods
mov
call
enter
sbb
ljmp
jne
test
inc
pop
sub
fdiv
adc
insl
imul
cmp
imul
push
lods
ja
test
ficoms
pop
je
mov
sbb
aad
fisttpl
inc
xchg
add
and
addr16
and
adc
das
cli
push
jne
sub
xlat
or
jae
adc
in
mov
out
loope
jns
ss
jl
fs
jge
xchg
push
mov
xor
ja
pop
xor
jecxz
mov
fs
sub
cmp
cld
add
ja
loop
mov
test
test
mov
cwtl
fsubrl
push
jbe
js
jns
dec
jne
sbb
cwtl
mov
popf
sbb
dec
mov
add
iret
sbb
push
divl
add
xchg
mov
sbb
cmpsb
inc
imulb
mov
mov
mov
adc
mul
xor
out
out
gs
ficompl
dec
sub
cs
push
mov
inc
movsl
xchg
lods
in
ss
mov
inc
jp
aam
cltd
stc
inc
dec
pop
jae
mov
inc
fs
pushf
into
testb
sub
pop
jnp
xchg
sub
filds
xchg
sahf
addl
repnz
mov
mov
or
mov
sti
xchg
adc
and
lcall
xchg
test
dec
and
dec
sbb
sbb
shrl
daa
jb
and
adc
and
stc
xchg
cmp
jle
outsl
sub
and
js
sub
or
dec
push
loop
lds
lods
jp
xlat
mov
sub
push
orl
fsubs
inc
sub
repz
clc
insb
rorl
in
das
sub
xchg
mov
or
pop
outsb
fildll
gs
mov
sub
lret
insb
pop
pop
jp
aam
fdivr
imul
shl
data16
sub
jb
out
or
cs
jns
cli
jge
sub
int
sbb
mov
fisubrl
adc
fsubrs
lcall
enter
jae
lret
insl
enter
push
push
enter
push
mov
mov
mov
testb
inc
loope
iret
cmp
fwait
insb
inc
xor
push
fcompl
pop
popa
pushw
mov
and
dec
rol
repz
xchg
and
push
pop
push
in
and
pop
fsubl
out
std
fcoml
negb
je
movsb
shlb
xlat
and
add
push
mov
scas
test
jns
dec
xor
push
lods
mov
adcb
lock
sarl
xor
cli
inc
ljmp
testb
aam
stos
pusha
inc
lods
sbb
call
nop
pop
ret
ror
clc
leave
out
sbb
rcl
insb
mov
cmp
xor
push
shlb
out
mov
stos
inc
jg
mov
nop
dec
lahf
xchg
cmp
inc
cmpsb
cmp
adc
xchg
test
cmp
push
stos
test
xor
test
stc
enter
iret
in
out
adc
cmc
push
mov
pushf
sbb
fwait
xchg
sbb
test
je
repnz
adc
mov
push
ret
jg
jp
and
pop
push
jg
pop
lahf
pop
aad
fmuls
or
dec
pop
add
mov
clc
cltd
push
pop
icebp
mov
jns
pushf
xor
out
add
mov
shl
push
xor
lods
cs
loope
subb
outsl
xchg
aas
mov
stc
sbb
mov
pop
lahf
push
xorb
add
f2xm1
mov
or
xor
jo
hlt
push
xlat
mov
xor
arpl
cmpsb
lcall
mov
push
cld
bound
out
mov
popa
add
in
popl
aaa
cmp
cmpsb
xchg
mov
push
and
lds
std
inc
and
cmc
loop
mov
mov
jg
std
xchg
sbb
cmp
mov
inc
lods
test
lods
lock
push
push
rcr
cmp
xor
aaa
es
mov
push
and
cld
mov
xchg
cmp
rcrl
into
cmp
cmp
dec
or
test
lock
scas
std
adc
test
stos
mov
std
fwait
cmc
or
mov
das
mov
repz
sbb
mov
mov
stos
pop
in
cmp
add
clc
inc
fwait
mov
pop
and
popf
mov
in
popa
fldl
ficoml
ja
xchg
push
sbb
mov
pop
cld
inc
mov
movsl
cmp
movsl
test
jnp
xchg
dec
dec
mov
xchg
nop
push
xchg
push
add
cmpsl
dec
pop
test
add
mov
and
sbb
insl
call
dec
insl
out
test
or
out
loope
or
mov
sub
mov
nop
call
inc
pop
push
or
cmpl
mov
loop
jge
sub
pop
sbb
jge
jl
dec
xchg
sub
inc
imul
adc
cmp
gs
sti
xchg
lds
or
lahf
xchg
adc
shlb
dec
out
cmp
int3
cmc
add
pop
xlat
sbb
cwtl
dec
adcl
cltd
out
les
stc
mov
adc
es
inc
jge
lods
movsl
sbb
xchg
aas
xchg
pop
cmp
enter
fucomp
jge
imul
into
aaa
push
cli
dec
daa
js
jp
sub
xor
pcmpgtd
or
bound
addr16
push
pop
mov
jne
cmp
fbld
xor
shll
cld
ror
adc
jno
lcall
lods
xor
js
xor
ds
push
sbb
adcb
daa
inc
or
inc
cmp
adc
cmpsl
lods
cli
xchg
fst
and
dec
inc
je
mov
int
push
lock
xchg
out
lods
inc
lret
shll
rclb
cs
sysexit
jg
ljmp
mov
add
sbb
add
sbbl
ret
dec
ret
push
fimuls
inc
sbb
jnp
mov
sub
xor
sti
inc
mov
cmp
jg
sub
sbb
xchg
cmp
ja
jg
add
cmc
loop
xor
adc
sti
xchg
or
int
icebp
adc
jg
push
mov
jns
lcall
das
lds
int
pop
push
inc
out
fstpt
push
mov
fldenv
gs
mov
test
add
add
jmp
xchg
lods
ja
mov
js
aam
inc
mov
jp
fidivs
push
sbb
push
mov
dec
fcomps
mov
add
inc
scas
imul
jae
pop
inc
cmc
rol
xor
hlt
cmp
stos
inc
xor
sbb
movsl
and
repz
or
or
arpl
push
rcrl
es
iret
fsubs
scas
cmp
xor
dec
push
es
std
mov
and
ljmp
mov
sarb
sbb
xor
or
push
insl
lret
mov
arpl
and
je
mov
sbb
mov
mov
dec
or
cli
adc
stos
std
pop
out
pop
inc
jae
or
sbb
mov
jecxz
adc
add
and
jns
mov
dec
xchg
cmpl
mov
insl
dec
icebp
rcll
adcl
push
iret
decl
pop
nopl
lods
sbb
pop
cli
movsl
jns
sub
addr16
loop
xchg
bound
and
addb
es
xchg
std
icebp
divl
xchg
adc
lcall
jnp
sbb
jmp
and
test
and
or
ss
xchg
sub
jne
aaa
aas
test
dec
push
sahf
sub
mov
stos
outsb
sahf
push
xor
mov
popa
aas
xchg
shll
jns
popa
adc
inc
dec
xor
in
negl
movsl
ss
and
rcl
outsb
insl
orl
add
mov
cmp
or
push
out
sahf
add
jns
sub
mov
ficompl
cli
sub
mov
dec
push
adc
and
add
in
sub
cmp
push
es
sti
scas
pop
popf
or
push
cmpsb
or
add
pusha
out
nop
dec
xchg
or
cmp
inc
push
in
outsl
cmp
divb
xlat
shll
xchg
inc
pop
clc
ja
andl
xor
daa
outsb
inc
mov
xchg
into
lods
mov
or
dec
in
jbe
inc
mov
pop
movsb
and
in
xor
dec
xchg
mov
push
pop
lret
sub
ds
inc
jle
repz
dec
dec
xor
mov
popf
lret
inc
jle
popa
insb
rcrb
cmp
push
xchg
push
lcall
jg
icebp
pop
fistpl
xchg
ljmp
out
jg
push
aam
pop
add
dec
inc
rcl
jp
cmp
sub
icebp
cmp
mov
leave
cmc
sahf
mov
aaa
inc
mov
das
cwtl
mov
xchg
jge
in
pop
pop
fdivl
mov
daa
sub
or
push
jge
in
cmp
xchg
mov
mov
inc
pop
stc
je
roll
and
insl
aad
mov
pop
fcomip
mov
xor
xor
pushf
bound
nop
adc
std
adc
mov
fstp
mov
lret
std
fcomip
jns
jnp
jle
jle
push
xor
hlt
jbe
cmp
idiv
lea
test
test
push
jo
inc
scas
dec
dec
imul
dec
jns
enter
cmp
jp
mov
sarl
arpl
aad
cmc
mov
xor
mov
jae
ficompl
ret
dec
loop
add
mov
sub
insb
add
insl
push
pop
inc
mov
jg
lcall
jbe
insb
fcmovu
sbb
in
push
xor
mov
imul
into
push
dec
push
out
je
mov
dec
inc
inc
inc
or
or
test
rcrl
cmp
adc
mov
sbb
in
out
fidivrl
cld
push
popa
dec
inc
out
mov
dec
daa
shr
shr
cmpsl
cltd
jb
loope
and
roll
fldl
mov
sbb
cmp
aaa
push
inc
jne
mov
jge
sbb
cmpsl
inc
adc
les
ss
push
mov
jbe
push
sub
lret
sub
cmpsl
out
lret
mov
pop
call
jae
leave
fmull
mov
mov
mov
jb
movsl
shll
hlt
cmpsl
and
push
jno
mov
mov
aam
push
push
pop
mov
adc
or
sbb
sub
and
mov
movsb
mov
inc
pop
dec
push
lods
push
outsl
fisubrs
mov
pop
and
scas
popa
lret
nop
lcall
gs
cli
shrb
cmp
ror
cmp
push
movsb
jb
sbb
dec
lcall
scas
adc
adc
stc
jp
je
mov
notl
lods
adc
add
inc
out
mov
and
loope
lret
in
dec
jns
xor
and
adc
ljmp
ret
pop
in
nop
xor
sub
add
pop
imul
mov
pop
jl
push
or
push
sbb
jl
xchg
loopne
mov
pop
in
cmp
sub
outsl
ficomps
mov
add
sbbb
dec
stc
jne
inc
push
scas
mov
insb
scas
pusha
mov
sub
sub
sub
addr16
stos
add
jmp
or
and
and
push
arpl
pop
cli
loop
jecxz
jbe
pop
clc
addr16
mov
cld
cli
aas
push
or
xchg
xchg
popa
rcr
xor
lea
lret
rorb
call
rep
in
mov
sete
sub
fnsave
cmp
or
pop
mov
xchg
loope
push
jb
sub
adc
dec
arpl
lea
pop
movb
ljmp
ret
fldcw
jge
loopne
imul
js
mov
cmpsb
xor
and
insb
xor
daa
sarl
xor
mov
rorb
or
negb
mov
sar
popl
leave
jp
leave
jecxz
cmc
jnp
aaa
sub
sbb
adcl
fnstsw
xchg
es
mov
ret
mov
lret
int3
xchg
pop
mov
cs
daa
dec
sub
mov
daa
adc
cmp
dec
shl
pusha
cmpsb
repnz
jae
pop
sbb
mov
or
rcrb
xchg
stc
rolb
icebp
call
jb
mov
jmp
pusha
roll
mov
mov
insb
test
fwait
loop
test
push
call
imul
test
push
popf
stos
in
mov
dec
dec
or
cmp
cld
jmp
fidivl
movsb
sti
inc
rcrl
xor
aad
push
push
push
or
test
xchg
test
pop
jne
arpl
fildll
mov
mov
aaa
xor
cmp
xchg
popa
dec
add
adcb
leave
jo
pop
or
sbbb
call
ja
insb
iret
ss
mov
inc
xor
or
lods
xchg
push
cwtl
pop
outsl
fldln2
jae
imul
push
add
fidivrl
outsb
xlat
jge
jne
fmul
xchg
movb
cmp
sub
cmp
insb
dec
iret
aam
pop
loopne
inc
loope
jecxz
sub
imul
js
lds
mov
ljmp
xchg
dec
int3
dec
fisubs
xchg
fiaddl
aaa
popf
inc
cmp
scas
push
cmp
test
mov
imul
inc
push
and
adc
ljmp
scas
jns
test
lea
xor
inc
dec
pop
xor
sbb
lret
push
popf
and
hlt
stos
cmp
jle
mov
stos
loopne
imul
jb
cmp
cmc
xchg
jnp
or
fidivrs
mov
jge
or
xchg
cs
movsb
lret
test
mov
pop
xchg
es
dec
ret
mov
sti
lock
inc
xor
idivb
ljmp
std
fcomps
mov
push
push
or
mov
push
mov
dec
push
mov
loop
jle
pop
jbe
mov
cmp
xchg
iret
clc
shll
and
sti
dec
xor
repnz
jl
push
add
or
jb
add
rcrl
inc
repnz
int3
fwait
mov
repnz
dec
push
lods
popa
cmc
icebp
out
push
fsubrs
pop
int
cwtl
pop
mov
sbb
inc
cmp
mov
mov
mov
mov
iret
add
outsb
pusha
loopne
call
push
sub
fdivs
jmp
pusha
sbb
xor
or
sbb
aaa
and
ss
xchg
pop
or
xchg
sbb
pop
mov
inc
mov
xor
es
jne
gs
divb
imul
and
jb
pop
test
pop
subb
jmp
rcrb
clc
mov
mov
jb
adc
mov
inc
dec
cmp
mov
inc
dec
jmp
xor
ret
mov
lods
stos
cmpsb
mov
cltd
loopne
test
dec
insl
sub
jnp
hlt
mov
push
loope
inc
popa
pop
push
fistpll
cs
je
div
sbb
in
adc
out
pop
repnz
test
push
pop
pop
jae
je
in
cmp
add
cmp
inc
mov
shrb
in
add
incl
pop
es
ljmp
add
in
mov
lret
or
aaa
lock
shr
push
inc
lods
aad
in
inc
movsb
mov
icebp
push
xchg
orb
data16
sbb
fwait
xchg
mov
mov
rclb
in
xlat
xchg
push
adc
in
lea
xchg
cmp
xchg
sbb
mov
test
shlb
aas
push
sbb
movsb
xor
fsubrl
lret
inc
pop
mov
insl
call
cmpsb
enter
popa
or
add
jnp
mov
lds
push
sub
mov
leave
mov
sahf
jo
xlat
outsb
mov
fst
dec
addr16
cmp
pop
lock
xlat
push
loop
arpl
pop
es
outsb
push
gs
daa
adc
out
jp
in
sahf
xor
sub
jmp
xchg
sub
pop
outsl
sbb
imull
and
scas
jb
orl
push
push
pushf
in
gs
rorl
adc
out
stos
mov
mov
mov
dec
jo
push
inc
cli
ret
cwtl
pushf
mov
bound
push
rcl
push
sti
scas
insb
cltd
mov
push
mov
jnp
in
lds
iret
mov
push
mov
cmp
push
push
pop
adc
xorl
in
out
test
mov
cmp
scas
das
dec
adc
adc
mov
jbe
push
test
cmp
push
pop
adc
jp
out
dec
out
lock
aas
ljmp
cmp
push
mov
lea
fimull
and
cld
mov
addl
mov
out
nop
pop
xchg
dec
xlat
jl
jp
sbb
xor
xchg
arpl
in
out
mov
fldl
notl
arpl
cmp
jb
std
adc
addr16
add
lret
jp
stos
lret
push
int3
xchg
sbb
mov
jmp
sub
add
jns
ljmp
xchg
fcoml
adc
fmuls
jbe
imul
andb
jae
fiaddl
pop
or
lret
movsl
push
movsb
icebp
stc
movsl
xchg
xchg
add
outsl
js
lahf
cmp
cmp
inc
adc
hlt
popf
jl
mov
out
xor
add
sub
xchg
add
insb
rorb
mov
lcall
je
les
lcall
pop
xor
out
dec
in
push
sbb
cmp
mov
lods
cmp
rcl
and
cwtl
int
push
ror
sahf
xchg
fldt
jg
cmp
outsl
add
gs
addr16
cmp
dec
mov
inc
cwtl
bound
int
cmpl
dec
sbb
push
mov
ds
stos
repnz
mov
and
and
rclb
pop
add
xchg
into
mov
fcompl
arpl
fistps
dec
sbb
dec
push
hlt
mov
js
movsb
push
cmp
sbb
lahf
rol
mov
loopne
rorb
dec
call
jl
adcl
rorl
sub
nop
mov
ja
rolb
aaa
movsl
ja
dec
xchg
ss
call
je
sbb
inc
xchg
in
mov
cmp
push
das
mov
cld
jbe
orb
dec
cmp
sub
lcall
xor
push
pop
push
adc
sbbb
andl
cmp
jp
stc
adcb
sbb
jne
imul
pop
in
andl
inc
leave
sub
repnz
or
call
sub
xlat
jl
into
jbe
jbe
jnp
jne
fwait
clc
and
xorb
pusha
push
inc
cmpsl
call
and
and
mov
or
cmp
test
jecxz
push
sub
imul
sbb
inc
push
sbb
daa
insb
inc
mov
rorl
xor
fsubrl
xchg
addb
add
and
movsl
das
in
repz
adc
xor
adc
andl
mov
push
pop
leave
mov
pop
adc
adc
aam
nop
imul
jbe
cmp
shll
jbe
cmp
jno
mov
stos
mov
xchg
xor
jge
lock
add
adc
xchg
jle
or
mov
test
mov
inc
mov
repnz
pop
shlb
dec
cwtl
cmpsb
mov
pushf
gs
xor
xor
mov
push
sbb
dec
sbb
xchg
jp
push
jns
fisubs
insl
popl
jg
jl
fiadds
and
out
mov
mov
loop
mov
xchg
movb
dec
fiaddl
mov
lret
pop
es
xor
xacquire
es
sbb
sbb
test
dec
into
xor
call
popf
jne
push
dec
mull
xchg
shlb
std
dec
jnp
push
es
dec
and
dec
lcall
xchg
add
xchg
xchg
nop
movsl
repz
in
and
or
cmp
xor
stos
cmp
jge
jle
add
mov
gs
or
fldt
dec
sub
pop
adc
mov
lcall
mov
movsl
xor
mov
aaa
lock
or
shlb
mov
inc
call
add
jns
notl
dec
inc
dec
mov
nop
pop
je
sub
mov
fwait
js
jl
mov
insb
and
divb
mov
std
repz
mov
icebp
aaa
std
pop
inc
cmp
lds
mov
mov
push
nop
jb
pop
mov
mov
dec
xchg
mov
test
mov
pop
outsl
lcall
xchg
fwait
mov
add
adc
pop
mov
add
or
sub
adc
mov
add
and
or
inc
jp
mov
cmpsb
ss
or
add
inc
mov
arpl
xor
test
fstl
fiadds
orb
ljmp
mov
popa
jp
jae
in
aas
jae
scas
icebp
sub
xchg
jge
adc
mov
test
add
xchg
push
xor
dec
jg
lcall
pushf
test
icebp
jb
sbb
jg
sub
pusha
inc
jb
push
out
mov
scas
mov
movsb
in
inc
not
jb
pop
loop
mov
push
mov
push
outsb
orl
test
jbe
clc
jmp
scas
or
std
and
sub
in
test
imul
cmp
add
dec
icebp
mov
sub
or
sti
dec
push
pop
adc
sub
rcll
adc
addr16
fwait
lock
mov
les
pop
push
in
aaa
je
or
pop
lret
jo
add
loope
les
xchg
in
mov
ja
or
and
sti
inc
xchg
sbb
clc
into
clc
push
mov
pushf
mov
test
add
or
roll
push
jp
sub
mov
pop
push
dec
sub
std
movsl
jg
push
out
sub
jns
fnstsw
jmp
imul
dec
xchg
xor
push
lcall
mov
dec
arpl
push
mov
inc
sub
cmp
mov
push
push
adc
push
fsubr
mov
add
jp
inc
out
dec
insb
movsl
fs
mov
sbb
add
sbb
fmull
push
ret
nop
fistpll
and
jmp
sbb
rcl
push
jl
mov
lahf
sub
add
push
jns
std
iret
out
clc
lods
mov
repz
ret
decl
aas
mov
cmpsl
js
sahf
mov
sti
cmp
loopne
scas
test
mov
or
mov
xor
ss
and
pop
fnstcw
mov
xchg
fists
bound
dec
repnz
push
pop
dec
fistpl
ret
cltd
jo
jae
in
mov
and
cli
mov
mov
push
ficomps
cmp
popf
sub
mov
pushf
sub
movsb
test
into
xor
sub
mov
xor
mov
insl
push
pop
clc
pop
jbe
ss
ja
dec
and
cltd
jp
inc
aas
sarl
sbb
jbe
lcall
cmpsb
mov
cmpl
movsl
bound
xlat
cmpsl
inc
ret
stc
fnstcw
adc
sbb
movsl
or
sti
add
cmc
push
mov
mov
ja
xchg
xchg
adc
enter
xor
scas
aam
push
insb
in
inc
sub
cmpsb
repnz
mov
aaa
mov
stos
shll
and
mov
pop
sub
jae
frstor
enter
movsl
cmp
sub
xchg
outsl
jb
lcall
xchg
cmp
cmp
push
movsb
dec
pop
mov
push
icebp
jno
mov
ljmp
loope
mov
in
push
cmc
jne
outsb
fildl
movsl
test
ss
cmp
and
sbb
jmp
push
icebp
or
push
cs
xor
out
addr16
into
cmp
mov
dec
mov
fsts
sbb
xchg
xor
mov
insl
int3
adc
push
push
mov
insl
jns
scas
cmp
sti
sbb
nop
mov
sub
mov
ja
and
fldcw
arpl
rcrb
sti
sub
jo
mov
cltd
dec
mov
cmp
adc
fdivrl
adc
or
mov
push
mov
adc
jno
xchg
mov
js
sbb
lock
add
loop
push
fsubr
jno
call
cs
bound
in
clc
sbb
add
data16
testb
sbb
dec
pop
push
aam
pop
enter
fs
fsub
xchg
sub
divl
sub
aad
dec
add
sub
scas
stos
test
imul
stos
out
add
fiadds
loopne
ret
xor
pop
cmp
xchg
lret
push
xor
xorl
int
mov
fsubl
sbb
xor
xor
popa
cmp
into
into
mov
adc
jns
inc
mov
mov
aam
cltd
imul
addl
xor
call
push
lods
test
xor
repnz
xchg
or
insb
mov
pop
inc
add
loopne
adc
out
push
adc
lods
xchg
orb
mov
mov
cwtl
cmpb
cmc
lock
fwait
xor
pop
mov
cmp
sub
popf
mov
or
pop
sub
cmp
ret
loop
enter
xor
in
repnz
push
add
es
sti
int3
xchg
loop
insb
and
cs
jmp
out
idivb
jno
pop
fsts
in
jbe
out
pop
add
lcall
ljmp
and
clc
sub
out
sub
shl
sub
adc
mov
mov
xchg
xchg
cld
pusha
or
inc
outsl
mov
clc
or
popf
xchg
dec
fimull
xchg
pop
rolb
enter
add
jl
gs
insl
inc
pushf
mov
inc
inc
xchg
mov
movsl
bound
inc
or
std
lret
mov
sub
outsl
sub
je
fwait
mov
xchg
test
jle
jno
ret
push
pop
xchg
and
fwait
pushf
xchg
mov
and
cmc
dec
inc
push
sbb
mov
xlat
stc
ds
jo
xchg
jg
cmpsl
dec
aas
xor
jns
cli
dec
cs
mov
add
push
or
xchg
pop
sub
addl
popf
add
push
cmp
jnp
add
out
or
lds
dec
jg
rorl
adc
test
in
and
fiaddl
mov
push
add
xchg
lds
inc
mov
xchg
and
sbb
cmp
clc
pop
push
and
movsb
mov
ljmp
sub
mov
ja
push
adc
cmp
push
jp
inc
aam
jge
pop
mov
pop
add
sar
pop
jo
les
adc
out
sahf
cmp
inc
xchg
mov
jb
mov
stos
fdivs
cmp
xchg
lret
decl
arpl
jecxz
jae
sub
fsubs
icebp
inc
cmp
lock
sub
fiaddl
push
fsub
scas
pusha
xor
mov
or
leave
push
ret
xor
mov
lcall
mov
and
pop
aas
push
or
ror
pop
pop
test
push
lret
into
adc
in
data16
mov
repnz
call
dec
aas
inc
mov
xchg
nop
mov
test
inc
lods
push
add
decl
cld
dec
xlat
mov
ja
sbb
adc
fcomip
filds
int
add
cmp
scas
xchg
push
xor
pop
or
mov
ljmp
mov
cmpb
sbbb
stos
ljmp
fdivl
lock
aam
mov
cmc
mov
push
out
sbb
pop
sbb
jns
test
movb
mov
fs
add
mov
cmpsb
push
shrb
je
sub
mov
bnd
out
stc
push
lods
xor
ss
mov
test
stos
lcall
mov
idivl
jns
jp
mov
pop
or
andb
insl
sub
out
movsb
lahf
arpl
ljmp
jne
call
stos
inc
lods
stc
push
rorb
jmp
dec
xchg
jnp
mov
cmp
push
int3
jp
sub
cltd
movl
jecxz
ret
imul
push
jns
sbb
scas
and
nop
sbb
jns
in
push
or
leave
iret
sub
mov
movsl
cmc
repz
imul
sub
imul
lods
stos
mov
cmpsl
les
cmp
movsl
test
fcmovne
repnz
push
jle
out
ror
sbb
pushf
xor
and
pop
mov
jmp
push
movsl
cltd
push
daa
out
adc
dec
cmp
icebp
je
mov
mov
cli
rcrb
popa
filds
mov
insl
dec
stc
testb
adc
mov
add
roll
repz
imul
rol
mov
mov
adc
cmpsl
dec
mov
xlat
dec
in
mulb
and
mov
or
xchg
push
and
icebp
imul
lcall
call
cmp
cmp
bt
sbb
pop
xor
arpl
xchg
xor
inc
mov
je
sbb
xchg
test
sub
pushf
nop
rcrl
rorl
add
and
bound
add
pushf
out
cltd
mov
ss
aam
pop
sbbl
jge
pop
arpl
inc
das
sbb
xchg
fisubs
adc
xchg
imul
or
add
jle
cmp
ja
pop
pop
lock
outsl
popa
and
aas
xchg
enter
sbb
hlt
cli
popl
cmp
jle
jno
mov
push
iret
mov
inc
jl
mov
lret
fwait
mov
cs
mov
call
mov
adc
es
es
jmp
je
adc
sbb
or
or
mov
push
jo
loopne
in
mov
mov
push
sub
aam
out
jne
sbb
mov
dec
pop
in
into
pop
ret
pop
fimull
sub
dec
ret
stc
xor
stos
cwtl
push
xchg
xchg
mov
push
lret
mov
je
mov
outsl
jno
std
xchg
and
icebp
mov
sbb
sbb
aas
and
sbb
stos
xor
bound
lds
push
ret
in
xor
jle
dec
and
jp
das
add
cmp
or
cld
mov
roll
sub
imulb
outsb
add
and
inc
out
loop
sbb
inc
in
dec
mov
lcall
shrl
add
dec
xchg
cli
aaa
addr16
sbb
xor
outsl
add
cmp
sbb
cli
lock
dec
jne
adc
popw
mov
addl
pop
loopne
repnz
test
push
fsubrp
insl
inc
mov
mov
orl
sbb
imul
insb
mov
xchg
and
jl
in
sbb
jg
cmp
xchg
out
aas
fs
xchg
pop
pop
lds
jb
inc
out
xor
jno
mov
icebp
or
push
xor
dec
out
push
push
aad
dec
mov
lods
out
pop
push
js
add
mov
mov
mov
xchg
fs
adc
ds
mov
into
out
adc
push
push
dec
dec
aaa
subb
in
or
adc
jnp
adc
xor
ret
mov
cld
dec
sar
cmp
in
cmpsb
sbb
je
dec
sbb
and
out
pop
in
cmpsb
fsubs
xor
icebp
std
mov
or
jmp
dec
jns
jns
sbb
cmpsb
ret
ret
scas
lcall
test
dec
dec
dec
cmpsb
push
inc
push
xor
jo
xor
and
dec
mov
push
scas
cmpsb
push
jne
stc
test
xor
iret
repz
pop
fs
push
xchg
xchg
push
popa
stos
inc
andb
and
jno
icebp
shr
nop
andl
testb
hlt
mov
aaa
js
sbb
cmp
mov
xchg
xorb
testl
push
out
push
cmp
test
rorb
xchg
jb
xchg
xor
aas
imul
in
jb
adc
push
jbe
shl
lods
cmp
ljmp
mov
shlb
rcr
pop
jo
xor
inc
sbb
push
dec
xorb
test
xor
outsb
data16
out
lods
mov
mov
into
bound
and
sub
fistps
aam
cmp
insl
push
push
test
lcall
enter
cmp
inc
and
lret
sbb
xor
movsl
and
mov
cmp
jbe
in
shll
pop
call
cmp
dec
dec
pop
addr16
rclb
inc
icebp
filds
and
enter
jae
inc
movsb
push
jg
lret
jne
in
scas
dec
jae
sahf
or
jle
je
lds
jp
push
ret
pop
dec
inc
mov
xor
dec
and
xchg
or
mov
repnz
in
imul
repz
popa
add
cmpsl
stos
fwait
add
sahf
fisubrl
jb
lods
fnstcw
sti
pop
das
or
push
adc
lret
pop
sbb
pop
cmp
inc
in
push
icebp
pop
mov
sub
shll
jb
gs
mov
jnp
mov
pop
pusha
pop
jb
mov
adc
out
das
and
aad
mov
loop
adc
cmc
mov
inc
and
out
out
adc
mov
nop
mov
xor
aaa
jns
repnz
mov
stc
enter
sbb
das
cmc
and
mov
mov
sbb
imul
icebp
adc
and
xchg
in
insb
in
or
das
push
aaa
jbe
push
divl
push
rclb
lea
test
bound
cmp
mov
js
cmp
push
shl
mov
fwait
add
xor
sub
xlat
mov
inc
cld
loope
jbe
imul
sbb
test
pop
sbb
dec
cwtl
filds
push
dec
push
hlt
data16
mov
into
mov
in
lods
dec
add
imul
addr16
lret
test
subl
imul
mov
movsl
cmp
loop
mov
int
mov
mov
out
jo
xchg
test
mov
adc
jnp
repz
popa
mov
scas
jbe
in
push
mov
repnz
jge
or
aam
mov
cmp
mov
data16
or
jle
inc
dec
dec
out
imul
cs
scas
jmp
mov
jne
jp
push
movsl
mov
insl
cmpsl
lods
sahf
or
movsb
add
test
push
mov
call
lds
sbb
jne
icebp
jmp
xchg
test
les
lods
push
push
adc
jle
mov
js
cmc
aam
stos
lock
js
rcr
dec
add
mov
sbb
data16
fimull
fnstsw
imul
adc
stos
or
fidivrs
adc
add
add
jne
push
aaa
mov
inc
out
int3
int3
xor
arpl
dec
call
pop
jmp
or
adc
sahf
idivl
mov
ret
inc
or
push
mov
cmp
dec
bound
adc
mov
mov
and
and
test
dec
test
jg
addb
aaa
outsl
pop
pusha
idivb
inc
push
popa
dec
aas
es
sub
cli
jmp
jb
popw
xchg
andl
dec
and
sbb
movsb
jmp
movsl
nop
sub
stos
dec
jne
dec
xchg
test
cld
pop
and
insw
dec
jne
rorb
xor
add
movl
movl
lahf
sub
dec
out
cltd
lods
cmc
xchg
fstpl
pop
sub
shlb
sbb
and
out
ljmp
jns
movsb
ret
pop
rolb
mov
bound
mov
add
cmp
icebp
sarl
ss
mov
mov
jae
out
outsl
outsb
loopne
jecxz
out
addb
or
in
adc
mov
mov
mov
or
add
sbb
out
lret
xor
repz
cmp
cmc
xor
jae
push
xor
dec
dec
and
mov
xlat
mov
rcrb
mov
mov
cmpsl
fwait
adc
adc
mov
stc
mull
dec
movsl
faddl
aad
fidivrl
jecxz
adc
dec
jb
lret
xchg
add
pusha
jae
fnsave
mov
pop
pop
leave
shll
sti
cmp
mov
rcl
stos
ss
out
cmpsb
cmp
ret
mov
mov
pop
rorb
and
push
pop
dec
cli
aaa
stc
xchg
sti
xchg
pop
push
jge
int3
popa
jb
sarl
dec
add
test
mov
adc
idivb
push
aaa
cld
out
imul
ja
imul
aad
insb
lea
mov
mov
addb
mov
push
in
arpl
sub
cmp
in
pop
xchg
movsl
dec
cmp
arpl
test
mov
jl
lods
lahf
jno
ljmp
test
int
lahf
mov
scas
mov
sub
pop
push
cmp
cmp
pop
xlat
sub
pushf
neg
adc
inc
repz
jbe
or
aaa
inc
push
dec
dec
push
pushf
mov
fldcw
xchg
out
and
pop
lea
aam
adc
ss
seta
scas
jecxz
push
call
xchg
movsb
push
mov
andl
xor
xor
nop
add
jecxz
aam
xchg
lock
rcll
and
fisubrl
or
sub
fcmovbe
fwait
iret
cmp
add
dec
dec
jp
push
popa
jo
cmc
iret
jne
adc
dec
call
xchg
cs
jecxz
leave
lds
and
jo
or
mov
jmp
movsb
mov
imul
mov
push
cmp
aam
in
push
addl
mov
mov
scas
or
inc
shll
sbb
dec
xchg
loope
cmpsb
je
xchg
adc
enter
es
arpl
cmp
push
cmp
jo
pushf
out
lock
aaa
inc
call
decb
mov
pop
jecxz
fldt
and
pop
push
cmp
push
inc
mov
ljmp
scas
fwait
xchg
inc
jle
in
icebp
push
cld
inc
lea
lods
mov
fucomp
and
jb
aaa
test
fwait
xor
popa
and
insl
out
inc
dec
outsl
pop
mov
scas
jns
out
or
jecxz
pop
popa
push
pop
fsubs
ja
cmpsl
andb
xchg
jl
aam
push
outsl
imul
mov
fwait
loope
jg
and
mov
sub
aam
mov
mov
push
mov
jae
mov
cwtl
mov
sbb
sbb
aas
inc
pop
mov
leave
or
jns
stc
jmp
mov
mov
mov
mov
push
ds
pop
cmpsb
and
outsb
arpl
sahf
rclb
jb
adc
mov
pusha
lods
loope
xchg
mov
iret
fldcw
cmp
subb
cmpsl
and
sbb
fdivrl
push
dec
and
xlat
aas
push
push
xor
sub
pop
pusha
jno
sub
mov
int
xor
fs
ret
xchg
dec
aaa
shr
or
and
nop
lods
sub
outsb
jne
pop
sbb
push
fisubrs
mov
dec
adc
pop
test
inc
pop
andb
mov
outsb
inc
cmp
cmp
lods
jl
data16
adc
es
fisubrl
outsb
inc
push
push
sub
fwait
out
mov
jmp
inc
push
cmpsb
arpl
popf
cmp
sbb
adc
inc
mov
scas
sbb
xchg
and
xor
repz
outsb
inc
iret
mov
or
mov
xchg
mov
pop
out
mov
aad
addr16
mov
or
add
les
sub
ljmp
inc
pop
sub
cli
sub
enter
push
mov
mov
mov
and
jns
jae
add
mov
mov
lea
sarl
es
insb
jp
lods
pusha
cld
pop
mov
push
mov
dec
stc
rcrl
inc
xlat
icebp
mov
addr16
and
jnp
pop
incl
aaa
mov
xchg
jne
repz
fcmovb
dec
xor
lret
push
add
bound
push
pop
lock
addr16
pop
sarl
dec
cmpsl
xchg
scas
jmp
hlt
pop
bound
out
dec
or
mov
mov
mov
inc
hlt
int
cmp
mov
push
mov
subb
in
rclb
cmp
lret
cs
test
mov
notb
outsb
aam
or
sub
jle
and
aad
adcl
ljmp
data16
pop
mov
pop
outsl
or
stc
pop
pushl
push
loop
gs
sbb
shll
nop
jl
push
mov
inc
out
out
inc
es
add
sub
popf
aam
addr16
and
insl
repz
cmp
outsl
shrl
cmp
jmp
ret
int
and
outsl
inc
insb
cmpsb
imul
jge
shrl
in
shll
or
mov
adc
in
call
jb
push
or
adc
repnz
sbb
imul
lret
jne
in
mov
andb
test
cmp
sbb
cmp
dec
cmp
mov
mov
call
add
push
fsts
shrl
mov
xor
sbb
sub
push
shlb
pop
sbb
pop
ret
mov
sbbl
test
sub
cmpsl
pop
leave
out
lock
mov
fcmovnu
mov
push
loopne
in
pop
in
popf
add
orl
cmp
cmc
sbb
cltd
ret
inc
and
jmp
lods
shrb
js
dec
ror
mov
lret
idivb
add
mov
inc
sbb
inc
fildl
or
push
jp
inc
fimuls
lret
fisttps
inc
mov
add
imul
push
bound
push
push
mov
mul
mov
out
lea
loopne
pop
jl
int
mov
pop
int3
mov
mov
sub
fs
cltd
int3
xchg
inc
stc
sub
dec
inc
setno
push
test
lret
cmp
scas
inc
sub
xor
mov
jb
sub
and
je
insl
fwait
push
mov
dec
lock
add
adc
stos
mov
cwtl
stc
sbb
sti
rep
enter
or
test
xlat
repz
sub
and
mov
rorb
jg
ficoms
push
add
fildll
mov
mov
addr16
adc
std
movsb
test
ret
pop
loope
in
sub
icebp
jb
and
dec
das
bound
sub
sti
cmc
ror
jmp
pop
aam
rorb
ljmp
jg
cli
cli
ljmp
out
pushf
aas
mov
imul
adc
cmp
outsl
and
push
movsl
fsubrl
in
outsl
pop
out
pop
hlt
and
jge
or
mov
jbe
es
xor
jecxz
jp
mov
mov
add
adc
rclb
inc
imul
insb
cli
cmpsb
leave
mov
fmuls
std
outsl
mov
jo
ret
std
sbb
cmc
dec
sub
jae
xor
xchg
pop
jbe
repz
in
push
and
sbb
insb
sbb
cmp
mov
je
fdivrl
jge
cltd
adcb
dec
je
in
insb
add
xchg
fldcw
sbb
add
jnp
dec
loopne
jno
int
xchg
filds
sbb
sub
sub
and
cs
cmp
xchg
es
sbb
pop
mov
push
lret
outsl
les
adc
xchg
xchg
or
cs
fdivrs
push
and
mov
lds
sub
in
pop
loope
xor
xor
jle
in
jecxz
call
mov
mov
sub
pop
lcall
jbe
lret
es
xchg
ret
test
movsl
mov
in
rolb
icebp
nop
je
and
or
sbb
mov
ja
test
cli
jmp
shll
mov
pop
outsb
nop
mov
test
sbb
cmp
mov
mov
jmp
dec
test
pop
int
gs
pusha
bound
mov
sahf
push
push
popa
lds
jge
push
and
imul
xor
sub
data16
fs
pushf
mov
cltd
daa
push
cltd
repz
cmp
or
rcr
ss
in
inc
cld
jmp
je
push
jae
push
push
out
lods
mov
ljmp
mov
sti
cmp
add
xlat
or
clc
sub
imul
iret
cmp
iret
movsl
idivl
scas
sub
cmc
sub
iret
dec
dec
es
aas
xchg
jns
add
xor
ret
fwait
pop
jnp
add
cmpsl
fsubr
mov
push
sub
push
mov
imul
ljmp
mov
ret
adc
rorb
inc
in
jecxz
call
mov
cwtl
pop
lahf
outsl
mov
push
dec
cwtl
pop
call
mov
xchg
popf
nop
cmp
pop
popf
fs
lods
or
lret
inc
mov
mov
bound
imul
or
fucomp
dec
lcall
sub
and
sub
mov
dec
sub
rcrb
aam
lea
sahf
in
jb
jb
testb
jno
mov
test
mov
lret
js
pop
pop
sbb
repnz
sbb
mov
or
cltd
inc
ss
mov
ja
sub
dec
hlt
mov
shrb
mov
sahf
adc
push
call
jl
aaa
rol
cltd
fisubs
sbb
cltd
fmuls
mov
inc
imul
sub
ret
shll
mov
and
ljmp
loop
or
in
roll
jno
sub
cmpl
or
loopne
adc
mov
jns
mov
adc
out
sbb
imul
mov
cmp
call
mov
adc
and
fs
sbb
dec
gs
mov
rorb
sbbb
aas
jbe
cmp
xchg
and
jno
fdivr
movsb
scas
add
adc
rcll
lods
and
fwait
add
sahf
aad
pop
cmp
mov
std
pop
in
jp
aam
mov
repz
pusha
adc
sub
sub
sahf
out
aaa
iret
and
push
std
aas
fwait
pop
inc
ret
pusha
clc
rorl
sbb
call
fmull
aaa
jno
aas
add
roll
test
jbe
mov
lds
ds
in
lods
and
mov
js
adc
pop
dec
xor
icebp
xor
ljmp
test
fs
push
jno
inc
lds
and
dec
negb
push
add
out
mov
test
lods
aaa
mov
dec
push
mov
sub
sub
adc
repz
loope
gs
in
dec
incl
mov
mov
xor
sub
dec
lds
mov
sub
inc
mov
mov
shrl
popa
dec
push
cmp
cmp
mov
test
out
test
inc
push
and
imul
and
fistl
or
fstpt
and
mov
insb
xor
int3
pusha
inc
out
icebp
cmpxchg
mov
mov
mov
lcall
and
sbb
xchg
xor
cli
mov
or
mov
pop
add
and
dec
mov
xchg
jecxz
and
push
xor
mov
imul
push
mov
lock
popf
call
and
pop
cltd
pop
adc
call
xchg
jb
shlb
xorl
out
dec
and
pop
stos
js
sub
repnz
insl
loopne
std
jl
adc
jg
push
pop
test
gs
roll
data16
fldenv
lock
or
xchg
xchg
mov
add
mov
mov
push
cmp
inc
and
sbb
mov
jp
lret
push
xchg
mov
mov
scas
jge
std
lret
xlat
xchg
or
dec
out
xchg
add
js
pop
push
inc
jo
bound
or
loopne
or
ja
out
inc
add
xor
fcmove
mov
out
push
aas
mov
lods
enter
aad
jne
push
ljmp
mov
or
mov
dec
rclb
mov
iret
hlt
sbb
out
pop
pop
pushf
mov
mov
cltd
loope
sub
or
jno
mov
ficoml
push
test
das
stc
push
push
pop
push
loop
adc
aaa
pushl
out
imul
repz
push
icebp
test
je
push
jno
jmp
and
into
into
lods
loope
push
and
sbb
add
enter
pop
subl
cmp
xchg
dec
sbb
cmp
pop
movsb
push
xor
out
je
pop
aaa
call
mov
dec
repnz
leave
sbb
shll
imul
movsl
inc
inc
icebp
arpl
mov
pop
das
out
inc
push
and
out
movsl
popf
xchg
inc
mov
and
sub
push
jbe
cwtl
pop
jno
or
sbb
dec
and
hlt
add
dec
dec
je
and
pop
pop
loope
fstp
sbb
pushf
jnp
pop
sub
sahf
lcall
pop
aam
fsts
out
lret
mov
mov
repz
push
xor
lret
push
add
hlt
repz
adc
mov
jecxz
lret
adc
push
xor
push
dec
loope
ja
fcmovbe
out
add
cmp
sbb
dec
or
xor
dec
and
out
je
adc
push
add
es
aam
jmp
sbb
out
mov
sub
pop
cmp
adc
or
lods
adc
out
dec
sub
xor
scas
add
cmp
dec
dec
fistps
addr16
xlat
lods
testl
out
scas
addb
sahf
inc
adcb
jno
xchg
xchg
xchg
js
neg
xchg
insl
adc
push
daa
xchg
push
fs
movsb
push
arpl
arpl
cmp
pop
outsl
add
and
imul
cltd
jl
cmpsl
cltd
inc
jnp
imul
lret
dec
pop
fisubrs
hlt
rcl
cmpb
push
cltd
sahf
cwtl
addr16
adc
mov
xlat
adc
adc
das
insb
rcll
xchg
lea
xor
mov
test
xchg
add
mov
test
sar
shr
xor
cli
mov
ret
sti
jecxz
std
das
cmp
add
mov
pop
mov
xchg
in
mov
pop
stos
adc
mov
sbb
rolb
ror
mov
ljmp
push
aam
push
les
inc
push
int3
mov
inc
push
xor
cltd
sbb
test
stos
in
xor
jge
mov
mov
stos
xor
sbb
cmc
fcmovnb
sbb
mov
ja
andl
jb
jg
sub
stos
sbb
cli
or
mov
call
inc
ret
inc
aam
fcomps
sbb
sar
out
adc
sti
mov
stos
mov
in
fisubl
and
dec
fidivrs
jge
jle
cwtl
adc
movsb
adc
xor
lea
lret
sub
pusha
mull
into
mov
mov
in
pushf
imul
mov
mov
rolb
sub
xlat
push
negl
in
jo
dec
repnz
out
out
dec
and
or
push
lcall
int
mov
pop
inc
inc
xchg
mov
mov
pusha
out
movsl
adc
test
xor
cs
add
jo
sub
repz
leave
jbe
adc
pusha
cmpsb
or
les
pop
and
clc
lock
add
or
dec
jno
addl
jb
test
rolb
xchg
xor
lret
sub
add
xchg
sub
dec
mov
and
adc
ret
je
push
insb
scas
gs
jp
cmc
or
das
or
mov
cmp
daa
cli
cmp
jle
adc
out
and
fistpl
call
and
inc
repnz
pop
dec
inc
daa
sbb
in
jecxz
mov
iret
cmc
aaa
jnp
cmp
ds
jle
inc
inc
clc
cmpsl
mov
cmp
or
xlat
push
inc
cmp
jg
sbb
sbb
inc
dec
lods
jp
les
adc
fmull
rcrb
jmp
add
rclb
bnd
ss
xchg
push
enter
inc
iret
pop
arpl
clc
xor
jmp
jne
imul
in
push
jmp
jge
rcrl
pop
loopne
iret
xor
fdivrs
inc
pushf
out
pop
inc
call
push
add
mov
out
sbb
sbb
sarb
adc
pop
push
out
add
clc
lahf
adc
insb
sub
addr16
and
adc
jo
ja
push
mov
loopne
aam
jmp
push
cli
fidivrs
lret
cmp
inc
dec
jg
sub
pop
les
mov
cltd
add
cld
mov
xor
push
xor
push
je
cli
fsubr
sbb
shlb
dec
fimuls
sahf
xchg
jl
add
mov
decl
insb
pop
sbb
push
dec
mov
push
incl
pop
sbb
fsubl
ds
mov
mov
xor
jl
aad
roll
mov
fistl
jns
inc
sbb
pushf
call
mov
popf
mov
add
mov
dec
js
or
sub
mov
cmp
add
loop
cmpsb
pop
jge
pop
aaa
jg
imul
out
cmp
in
daa
sub
lods
out
cwtl
xlat
add
js
xchg
xchg
xor
add
sbb
push
xorb
retw
lods
pop
mov
mov
mov
push
std
arpl
andl
push
stos
and
repnz
mov
xchg
cmp
mov
and
or
jb
jnp
sar
js
add
stos
cmp
out
ljmp
push
icebp
stc
subb
xor
dec
or
jo
shl
test
xchg
adc
enter
mov
sbb
push
aas
jo
mov
scas
mov
ret
or
test
push
fbstp
and
aam
adc
lds
mov
sbb
test
mov
mov
push
add
push
mov
shlb
push
or
leave
cmp
std
jg
ret
iret
mov
js
adc
stc
push
push
pop
and
aas
aaa
sbb
aad
push
popf
and
out
push
add
or
add
pop
dec
out
xor
lea
jno
gs
mov
cli
xchg
fildl
call
sbb
inc
push
and
aam
orb
mov
out
popf
movsb
aam
inc
mov
sbb
xchg
cwtl
mov
jns
push
je
jns
sub
addr16
cmp
xor
clc
rolb
jo
or
jecxz
xchg
jae
into
mov
jb
sbb
pop
testl
mov
push
and
xor
xor
lcall
mov
mov
add
cmp
addr16
loop
sub
hlt
or
cmc
sub
movsl
jbe
push
add
push
lds
out
fwait
cmpsl
testb
popf
dec
xchg
call
mov
flds
inc
out
mov
adc
lods
push
jge
add
mov
movsb
adc
cs
dec
lods
mov
xchg
push
shl
aad
xor
sub
popa
jo
and
dec
out
mov
imul
outsl
jno
adc
xor
mov
inc
andb
movsb
and
movsl
inc
fs
pusha
out
in
bound
fs
dec
and
bound
scas
xor
stos
xchg
jb
dec
sti
pop
mov
dec
pop
repnz
jmp
pop
pop
lods
imulb
push
pop
mov
inc
sub
jb
bnd
adc
xchg
push
mov
adc
icebp
repnz
sub
xor
xor
fidivrl
add
jl
or
icebp
push
cli
shr
addb
enter
fwait
daa
dec
cmp
mov
and
dec
lds
inc
cmp
and
push
cltd
dec
or
inc
or
add
inc
mov
mov
lahf
cltd
out
mov
push
addr16
mov
cld
mov
aas
sbb
or
mov
dec
lahf
and
test
sti
gs
jne
frstor
lret
inc
shl
mov
add
sbb
das
dec
cmp
test
jecxz
gs
insl
rcrl
mov
or
sti
mov
outsl
adc
inc
mov
pop
inc
out
scas
pop
fldl
jo,pn
mov
adc
sub
lods
pop
sbb
push
inc
inc
fildl
adc
jmp
mov
mov
mov
or
push
mov
or
in
pop
lods
mov
push
xor
mov
and
lock
jae
mov
inc
cmp
out
sub
mov
int3
fs
daa
nop
sbb
popf
stos
xchg
test
dec
mov
leave
jb
fnstsw
fidivrl
outsb
stos
stos
push
aaa
mov
insb
add
daa
sbb
je
mov
popf
push
mov
sub
aam
and
movsl
mov
sahf
pusha
scas
or
push
xor
out
push
ljmp
inc
mov
dec
lahf
addl
cmp
inc
jo
sbbb
shr
mov
divb
in
mov
sar
enter
and
inc
idivb
test
dec
push
dec
push
leave
jno
inc
out
push
sti
jo
pop
add
mov
rolb
jle,pn
mov
ss
xorl
mov
jp
sahf
scas
xchg
dec
sbb
mov
mov
dec
fwait
jb
outsb
add
cmp
out
out
jae
mov
in
xchg
outsl
jle
mov
sbb
pusha
sahf
lds
pusha
jecxz
cmp
rcrb
pushf
jo
aaa
ret
dec
sbb
sbb
insb
mov
lahf
lods
les
inc
jne
mov
das
xor
xor
xchg
les
lea
in
cmp
mov
fisubrs
insb
jns
and
movb
jo
xchg
mov
loope
jmp
and
push
jmp
xchg
jns
decl
rclb
std
mov
cmpsl
pop
or
pop
and
mov
cltd
lret
loopne
imul
cmpsl
pusha
xchg
loope
scas
imul
lds
push
lea
lds
inc
dec
lret
fnsave
test
les
mov
sub
sub
test
nop
scas
push
imul
mov
loopne
cwtl
mov
ret
pop
enter
push
aaa
rorl
add
lret
mov
xchg
orb
aas
xchg
ficoml
aam
lds
sahf
pop
push
pushf
out
shrb
fnstsw
into
call
insb
inc
mov
push
cmp
pop
xchg
xchg
cmovne
dec
dec
test
adc
jg
push
mov
pop
scas
mov
sbb
cmp
int
popa
imul
mov
ficoms
insl
inc
cmp
pop
add
insb
cwtl
ss
sbb
fstl
and
mov
jecxz
rclb
cmpsl
insl
jmp
jno
sub
ret
jb
out
jmp
ja
jo
mov
or
les
mov
xor
mov
notb
push
cmpl
test
cmpsb
dec
fwait
mov
sbbb
rcl
add
rolb
sahf
fstpt
mov
jg
out
pop
sub
mov
cmp
mov
mov
xor
insl
pop
and
cli
add
shrb
loope
mov
nop
hlt
pop
ds
leave
sbb
test
jb
or
mov
push
je
lea
leave
jne
mov
mov
pop
add
cmpsl
je
xchg
add
bound
add
push
pusha
or
mov
xchg
in
dec
mov
movsl
add
aam
mov
lods
mov
push
xor
frstor
lahf
dec
idivb
sub
ljmp
xor
jge
aad
or
data16
xchg
lods
dec
es
mov
lods
data16
cld
in
push
xor
inc
ret
test
mov
xor
andb
out
test
mov
popa
sbb
mov
mov
imul
sti
inc
daa
xor
out
fmull
or
cltd
dec
mov
mov
add
or
cmp
movsl
loop
jne
mov
push
out
push
ja
leave
subl
in
mov
jecxz
hlt
sub
xor
lds
mov
scas
adc
outsl
push
and
outsb
mov
xchg
rol
sub
icebp
jno
sub
hlt
movsb
pop
les
cltd
cs
sarb
push
insl
cmp
mov
xor
loope
cmp
push
inc
jbe
leave
sbb
sub
les
insb
inc
or
push
mov
mov
or
adc
and
jle
xor
xchg
sarb
rolb
repnz
mov
shlw
idivb
out
mov
push
sub
std
repnz
cmp
xor
gs
sbb
fiadds
fidivrs
fadd
icebp
xchg
or
cwtl
lods
adc
popa
daa
outsl
das
xorb
push
mov
sbb
push
roll
repnz
xchg
sbb
and
pop
out
sub
sti
test
jl
mov
es
inc
mov
xor
lret
add
or
fdivrs
xchg
mov
loopne
insl
imul
enter
cmp
or
fisubs
ror
pop
nop
cmp
pop
pushf
push
orb
jo
push
fists
jmp
xor
popa
jmp
loope
pusha
aam
and
jnp
xchg
mov
outsl
in
mov
add
push
push
in
jp
fimull
add
xchg
ss
sarb
ret
jle
mov
jmp
movsb
adcl
mov
push
adc
in
orl
push
mov
mov
repnz
pop
xor
lea
push
mov
popf
sub
movsl
xchg
hlt
and
in
add
mov
sbb
mov
lods
sbb
ficoms
pop
dec
test
push
lcall
or
jo
or
addl
mov
sbb
std
mov
add
pop
push
dec
outsl
insl
scas
ja
xchg
mov
xlat
mov
loopne
gs
fdivrp
call
pop
or
mov
jp
mov
in
sahf
je
pop
pop
mov
sub
push
xchg
aaa
cltd
aad
popa
out
cli
jae
pop
bound
out
int3
pop
iret
add
push
icebp
push
mov
adc
jo
fcomps
addr16
fwait
mov
cmp
les
enter
lret
data16
jo
pop
outsl
mov
pop
mov
das
xchg
sub
push
mov
mov
mov
clc
popf
int
xchg
sbb
mov
xor
inc
inc
mov
xchg
lret
mov
push
lcall
inc
mov
add
scas
mov
mov
cmp
lds
xlat
dec
mov
xor
mov
leave
out
sti
pusha
mov
rorl
pop
int
xor
inc
xor
jmp
inc
sahf
stc
dec
fists
cmc
movsb
inc
jno
pop
inc
shrb
scas
aaa
mov
incl
pop
mov
test
aas
es
mov
dec
mov
push
xor
dec
sub
shrb
xchg
sbb
test
mov
out
or
push
jle
inc
mov
xchg
addr16
xchg
inc
push
fsubl
ljmp
xchg
and
pop
clc
add
jno
scas
cmp
loope
inc
sbb
inc
shrb
movsl
sti
stos
mov
adc
sub
jo
push
jae
mov
sbb
mov
gs
cmpsl
push
mov
push
xor
mov
push
inc
cmpsb
int
and
cmp
filds
or
out
pop
movsb
pop
xlat
arpl
jge
lea
inc
pushf
push
mov
jo
xchg
cmp
sub
fwait
daa
icebp
push
sbb
xlat
lock
push
xor
or
sahf
push
inc
dec
and
lods
sahf
outsb
lret
xchg
les
mov
stos
iret
sub
pop
iret
dec
in
lods
je
je
mov
xlat
and
mov
lock
icebp
dec
ljmp
int3
or
or
je
sub
and
in
mov
xchg
push
sbb
outsb
or
add
sti
xchg
jne
aas
sti
pop
mov
cli
xchg
ss
cmp
or
ja
fisttpll
jl
push
and
and
outsb
jmp
push
stos
mov
adc
cmp
and
fsubs
dec
lods
test
or
cmp
cmp
js
xlat
lods
push
mov
pop
push
lea
inc
out
mov
nop
xchg
pop
ret
xchg
and
clc
fistpl
lock
test
std
push
or
frstor
je
cmpsl
mov
sbb
lods
xor
mov
iret
fwait
cmp
jb
jae
scas
sub
xchg
sbb
jnp
arpl
loopne
or
inc
movsb
push
xchg
addr16
iret
aad
fiadds
mov
ret
int
jnp
mov
dec
fs
call
and
xchg
daa
popa
or
xchg
ljmp
ret
cmp
push
dec
or
insb
pop
xor
sbb
mov
in
inc
lods
leave
adc
cltd
sti
loopne
es
mov
lret
inc
dec
nop
lret
or
movsb
movsl
movsl
sub
aas
imul
rcl
andl
add
shlb
jbe
int
fidivs
lret
mov
loope
outsb
fs
push
and
aad
jmp
adc
mov
test
mov
aaa
jns
int3
jmp
jp
cli
arpl
jg
jo
imul
ds
xchg
push
fiaddl
mov
adc
add
lds
repz
repz
fidivrl
adc
in
test
out
jae
xor
fcoml
inc
es
mov
data16
push
adc
aad
cmp
bound
mov
aas
fiadds
adc
xchg
mov
scas
sub
lock
mov
jg
sbb
pop
dec
pop
daa
xchg
and
jmp
je
addb
imul
rcrb
sbb
pop
cld
xor
stos
call
mov
inc
sbb
mov
cmpsb
scas
xor
add
push
mov
inc
push
repz
or
or
lahf
sbb
imull
xor
aas
jnp
and
out
push
jle
pop
mov
fcoms
loope
ja
jnp
lcall
dec
repz
jo
insl
add
jnp
dec
inc
adc
into
push
aaa
push
and
mov
jg
ficompl
call
lahf
push
das
jmp
inc
ret
out
insl
mov
rcrb
push
mov
xor
sbb
movsb
sub
aam
std
insl
sahf
mov
aam
jno
popa
mov
mov
pop
repnz
outsb
jnp
sbb
std
dec
test
add
add
and
jge
xor
pop
scas
add
in
push
mov
xor
sbb
lret
mov
push
sbb
inc
test
mov
mov
mov
inc
pop
pusha
push
or
jne
pop
pop
loopne
ljmp
push
xor
das
outsl
test
ds
rolb
push
gs
int
fldenv
addb
aam
push
push
cmpsl
stos
sub
mov
repnz
aaa
xchg
pop
pop
pop
jnp
add
cmp
repnz
sbb
add
test
push
dec
notl
stos
push
and
push
inc
loop
aas
out
push
repnz
repnz
fsubl
lea
jle
pop
sub
fucomp
jp
adc
xor
popf
rcr
sbb
and
dec
jo
ds
mov
shll
dec
clc
lahf
mov
aad
les
and
sub
inc
iret
xchg
sbb
clc
pop
inc
xlat
dec
and
pop
jle
fdivrl
ret
mov
dec
push
les
iret
sub
cwtl
and
lahf
mov
cmpsl
xchg
mov
cmp
inc
fwait
mov
sbb
adc
xor
sahf
push
sbb
ret
lcall
sbb
lret
pop
out
mov
add
out
mov
or
outsl
sbb
push
xchg
outsb
arpl
adc
pop
push
stos
bound
pop
testl
out
mov
add
pop
xchg
out
mov
mov
sub
add
mov
pop
add
daa
hlt
mov
xchg
push
insl
ficoml
lcall
push
and
cwtl
mov
out
mov
call
sbb
jmp
jecxz
cmp
insb
lock
add
mov
lret
inc
mov
fidivl
fisttpll
pop
mov
scas
lds
shlb
jmp
jae
in
sbb
cwtl
cltd
into
clc
dec
cmp
xchg
loop
idivl
scas
and
push
stos
mov
addl
cmp
js
pop
int
xor
das
push
les
push
incl
adc
add
addb
inc
es
pop
lods
mov
aas
mov
pusha
xor
js
xor
call
adc
imul
std
bound
push
push
icebp
xchg
loopne
adc
es
gs
movsl
pop
cmc
jbe
dec
or
push
mov
daa
xchg
sub
push
ljmp
fwait
sub
cmp
call
pop
orl
and
stos
or
mov
popa
insb
test
lcall
loope
xor
popf
rclb
test
jle
and
movsb
in
test
mov
popf
cmp
es
push
enter
push
out
popa
inc
cmp
lods
sbb
dec
cli
mov
xchg
je
jae
daa
ds
and
arpl
loope
add
fstp
push
shlb
sub
mov
test
xchg
aas
fisubl
jle
inc
and
fxch
jecxz
or
cmovnp
mov
inc
cmp
mov
sub
mov
jg
imul
xor
out
cmpsl
stos
xor
and
mov
out
fists
dec
sub
add
addr16
fstpt
mov
lret
and
adc
cmp
std
repz
gs
jbe
in
xor
loop
in
jp
and
mov
add
out
hlt
xchg
es
dec
daa
push
testb
cmp
mov
or
pop
int3
ljmp
xor
ffree
insl
jbe
xchg
mov
jbe
aaa
nop
jb
inc
sti
mov
mov
ds
inc
jno
xor
rorl
sbb
or
cmp
jecxz
mov
and
shrl
and
mov
pop
ret
rcr
mov
cltd
cmp
add
insl
ret
lods
push
jo
dec
push
jo
jno
xchg
dec
aam
rorb
jp
and
ret
xor
pop
popa
aas
lret
fyl2x
push
push
fimull
sub
mov
scas
fldcw
and
mov
inc
stc
addl
jb
mov
lock
sahf
pop
sbb
sbb
loopne
fdivp
stc
pop
or
stc
adcb
dec
in
sub
inc
sub
and
jns
cltd
pop
int
sub
dec
pop
clc
and
push
cmp
dec
mov
mov
bnd
xchg
insl
mov
jo
leave
loop
repz
dec
out
jmp
push
sbb
pop
les
pop
pop
addr16
pushf
push
adcl
mov
int3
xchg
int3
add
ss
jo
xor
pop
sahf
stos
std
dec
test
jmp
test
xchg
or
test
adc
or
adc
out
aam
cmp
sbb
jne
push
xchg
fucom
and
jecxz
xchg
or
xorl
xchg
sub
out
xor
out
mov
sub
cmp
pop
adc
frstor
pop
jg
sbb
in
filds
hlt
ljmp
mov
mov
sbb
pop
inc
clc
sbb
sub
inc
scas
xor
xor
in
or
dec
or
sar
cwtl
mov
xor
sub
lret
in
jb
cmp
xlat
sub
xor
push
imul
outsl
add
or
push
sbb
add
push
xchg
inc
lret
addr16
cmp
push
jmp
or
shll
mov
cs
aam
dec
fs
stc
and
ss
aaa
xchg
inc
mov
mov
dec
jnp
jne
sahf
inc
cld
testl
mov
dec
push
pop
aam
xor
dec
cltd
fsubs
pop
jl
pop
cmp
xchg
push
or
roll
aad
repz
in
adc
popf
adc
mov
shl
ret
and
jbe
mov
dec
mov
jge
jae
mov
test
mov
jno
hlt
push
testb
repnz
dec
push
nop
xchg
call
stos
push
stos
lahf
mov
shlb
data16
movsl
adc
setle
inc
imul
and
pop
es
or
pop
pop
adc
xor
je
ret
mov
mov
xchg
test
push
cld
xchg
mov
ret
lock
out
stc
adc
inc
sbb
fwait
into
pop
jbe
mov
push
pminub
mov
mov
xor
jbe
fstps
scas
testb
ljmp
and
or
adc
rcrl
jae
push
scas
pop
jecxz
or
jecxz
iret
cmp
cmp
stos
cmp
nop
jns
movsb
rcll
in
hlt
mov
pusha
ret
cltd
add
pop
sbb
xor
iret
stos
push
jle
pop
sub
cmc
shl
mov
mov
xchg
repnz
scas
jecxz
lods
in
jle
test
pop
rorb
dec
sub
test
sarl
sbb
sbb
push
addr16
inc
jmp
sarb
ja
adc
and
aad
add
das
inc
repnz
mov
aas
cmp
jl
dec
push
mov
jb
int3
push
push
xchg
xor
push
or
xchg
push
sbb
xchg
jecxz
in
sub
ds
daa
jne
or
mov
rorl
mov
sbbb
lea
adc
ret
jb
shll
pop
jns
sbb
aam
dec
js
pop
out
ret
inc
mov
add
cmp
and
in
ljmp
out
xchg
pop
lods
adc
mov
gs
mov
sbb
sub
test
push
jg
ror
mov
or
adc
jbe
popa
outsb
cmp
mov
test
ficomps
adcl
test
stc
aaa
xchg
xchg
xchg
cld
sbb
push
sti
stc
in
push
sti
inc
incb
pop
xchg
aaa
inc
in
push
xchg
jne
pop
sbb
pmulhuw
dec
mov
sub
into
into
jnp
lret
and
mov
sbb
out
mov
loope
push
jmp
cs
fnstenv
call
arpl
xorb
stos
in
xorl
sub
or
xchg
xchg
inc
idivb
xchg
pop
fdivrs
lret
cmp
mov
mov
adc
fsts
mov
cld
or
push
inc
loopne
lret
pushf
scas
fiadds
inc
popa
movsl
pop
lods
cli
mov
lock
add
sub
sahf
dec
cli
dec
fs
pop
notb
mov
pop
jnp
sbb
cld
sbb
call
cmpsb
jp
inc
out
jne
cs
xchg
inc
rcl
mov
adc
js
mov
add
jbe
xor
fnsave
lret
test
jbe
push
call
xchg
pop
das
xchg
mov
mov
gs
xchg
arpl
xor
inc
xor
pop
xor
popf
xchg
mov
adcl
loope
push
add
aad
insb
daa
test
dec
dec
mov
call
cmp
lods
push
insb
or
mov
lods
inc
stc
int
adc
lret
and
lahf
xchg
shrl
xchg
mov
push
xchg
inc
ret
mov
or
stos
das
ret
and
jno
jne
icebp
jno
lahf
rcl
arpl
loope
das
xor
in
out
pop
mov
inc
insb
sub
mov
add
mov
ret
outsb
cmp
pop
cmp
ljmpw
dec
loop
cmp
jp
nop
jmp
xor
xor
sbb
cmp
ja
test
enter
sub
rorl
faddl
xlat
xchg
es
pop
or
loop
ds
sub
jbe
insl
leave
pushf
sub
mov
push
inc
ret
mov
sti
lods
adc
sbb
shl
pop
or
dec
ret
jmp
in
jmp
dec
push
enter
int
insl
shr
fcomi
repz
roll
mov
rcll
xor
aaa
mov
and
cs
fcmovb
jmp
enter
hlt
addr16
or
repnz
and
pop
int
sahf
cmpsb
test
mov
out
scas
scas
and
or
pop
pop
rol
fnstenv
add
scas
mov
mov
inc
mov
jno
xchg
sbb
jp
jg
daa
jbe
adcl
push
cmc
mov
xchg
rcrb
cs
push
push
out
mov
xchg
leave
jno
add
shlb
xorl
repz
cmp
xor
cmc
test
dec
and
int3
arpl
xchg
adc
xchg
test
lret
jp
fcmovnb
aam
xor
scas
insb
pop
adc
mov
mov
sub
insb
xchg
jecxz
mov
fnstcw
jge
xor
dec
lea
dec
jp
lret
pop
outsl
pop
jge
vmread
fiadds
or
push
js
push
cwtl
inc
cmp
or
mov
sahf
sahf
xorl
jmp
or
fbstp
cwtl
aad
mov
jp
xchg
fwait
outsb
jb
jnp
mov
cmpsl
adc
icebp
test
mov
cmpsl
mov
push
cmp
sarl
popf
std
test
imul
in
dec
fs
add
lcall
adc
and
sub
xchg
lods
adc
lea
and
ja
out
fdivr
ror
cs
loopne
or
nop
cmp
js
inc
cmp
out
xchg
andb
jb
mov
mov
sbb
mov
movsb
push
incl
enter
sti
dec
iret
cs
daa
jge
pushf
jge
mov
stc
enter
test
inc
push
ret
xor
mov
or
pop
sahf
addr16
ljmp
std
movsb
in
xchg
inc
in
pop
repnz
sti
cmp
sub
lods
aaa
leave
aad
mov
mov
ret
mov
mov
enter
mov
ss
mov
xlat
dec
jge
gs
ja
mov
icebp
mov
lods
fwait
dec
pop
push
push
fucom
jno
jp
test
in
je
pop
int3
pop
aaa
out
add
lock
or
mov
push
cli
out
lods
popa
dec
ret
dec
mov
mov
shl
add
add
imul
jp
xchg
addr16
in
pusha
bound
pop
movsb
dec
loope
gs
xor
sub
sbb
push
test
cmpl
hlt
pushf
pushf
mov
in
pop
push
sahf
jl
or
cmpsb
pop
push
mov
or
aam
ja
into
inc
xlat
push
loope
add
sub
pop
shrl
cmp
xor
lods
or
insl
stc
repz
shll
or
inc
dec
xor
out
fisubrl
xor
ret
xchg
fwait
xchg
or
sbb
jnp
or
jge
add
rcll
xor
or
xor
mov
and
leave
mov
adc
bswap
dec
cmpsb
jle
pop
loope
lds
mov
cmp
mov
addr16
int3
push
xchg
daa
subb
subl
imul
xchg
adc
and
sbbl
shlb
pushf
outsb
jg
mov
fisubl
dec
add
fiadds
cwtl
outsl
pavgb
je
adc
or
shlb
inc
imul
xor
mov
sub
and
les
pop
pop
mov
fucomip
psrlw
pop
sub
stc
xchg
pop
in
in
add
pop
push
sbb
push
cmp
lods
daa
jmp
and
loopne
nop
jno
pop
jnp
inc
adc
shlb
sub
and
ror
pop
jg
sbb
push
test
repz
popa
fcompp
mov
inc
out
sbb
ds
cld
aaa
or
ss
or
mov
adc
cmc
sub
mov
addl
xchg
dec
xchg
dec
xchg
mov
outsl
out
xchg
xor
movsb
push
std
fwait
sub
mov
sbb
outsl
mov
inc
imul
inc
insb
mov
ret
fdivrp
push
pop
sub
pusha
fwait
add
cmp
pusha
cmpb
pop
ss
sbb
daa
push
xor
stc
popa
xchg
les
stos
push
imul
lret
popf
cmp
in
orb
insl
xchg
sub
mov
movsb
sub
aaa
stos
mov
cmp
shlb
mov
pop
ds
pop
push
decb
xchg
ss
ja
inc
dec
enter
xor
jmp
mov
ljmp
es
outsb
sbb
sbb
ja
lret
loopne
cltd
lods
hlt
aaa
inc
sbb
jg
inc
test
or
or
insl
iret
test
mov
pop
and
roll
lods
push
int3
or
into
cmp
and
imul
inc
xor
push
in
mov
adc
mov
inc
mov
movsl
insl
pop
sub
ret
jecxz
dec
jbe
jl
stos
movsl
push
pushl
mov
das
call
mov
jecxz
mov
shll
mov
xor
xor
or
dec
push
dec
jne
ja
icebp
mov
fdiv
xor
xchg
jo
inc
test
aam
jl
shl
cmp
jnp
dec
sbb
cmpsb
sbb
imul
scas
ljmp
pop
or
call
adc
jno
dec
mov
xor
mov
inc
mov
and
fdivrl
push
and
dec
es
pop
jecxz
test
outsl
loopne
adcl
and
xorl
mov
xor
or
jb
test
sarl
or
enter
dec
or
mov
popa
es
push
mov
dec
push
inc
xor
mov
repz
mov
int
mov
call
pop
movsb
xor
std
mov
pop
sbb
xchg
mov
addb
shll
shlb
out
ds
lods
mov
pop
dec
jb
daa
fs
jae
jo
movsb
jne
pushl
adc
std
ljmp
inc
xchg
test
lods
cmc
or
sub
pop
jmp
pop
cmp
push
addl
pop
mov
stos
pop
ret
hlt
xchg
sahf
sbb
out
nop
lock
addl
xchg
adc
jb
dec
clts
in
shlb
pop
dec
popf
mov
andb
scas
jno
movsb
imul
loopne
mov
dec
push
leave
sahf
push
sub
adc
mov
mov
inc
mov
push
loope
mov
sbb
xor
ficoms
lock
or
fiadds
pushf
inc
or
push
xchg
shrb
les
or
xchg
addl
les
pushf
movsl
aaa
lcall
and
sarb
inc
mov
pop
inc
sbb
sbb
clc
jle
into
mov
push
pop
imul
cld
dec
add
fwait
testb
and
aam
arpl
clc
jmp
sub
add
icebp
mov
push
in
ds
ds
out
inc
jmp
lock
test
push
dec
push
adc
mov
fcmovne
push
cmpsb
xor
mov
mov
mov
push
sub
into
jno
sti
and
push
pop
hlt
mov
adc
mov
push
mov
push
cs
dec
imul
jno
and
lock
push
mov
add
pop
jmp
ret
sbb
lahf
das
or
outsb
mov
push
dec
arpl
cmp
ja
ljmp
gs
pop
pop
xchg
push
cli
push
inc
jle
subl
stc
mov
or
push
xor
pop
fcompl
jmp
stc
jb
dec
int
xchg
cmc
shll
jb
pop
outsb
mov
sbb
orl
inc
inc
jno
loopne
cmp
jns
push
addr16
mov
pusha
lods
push
lahf
jb
aas
adc
jle
fiaddl
in
sbb
ds
stos
mov
ds
fistl
jecxz
mov
das
push
or
je
push
loop
pop
cmp
mov
mov
inc
jne
push
out
mov
les
add
pop
dec
ret
insb
sbb
xchg
pop
dec
dec
pop
sub
mov
clc
daa
and
repnz
in
jae
je
cltd
xchg
mov
hlt
sub
or
test
es
insb
inc
sub
push
xchg
rep
push
inc
mov
jle
cmp
cmpb
push
mov
ret
adc
adc
adc
sbbl
mov
addl
outsl
fistpl
repnz
inc
movsl
pop
mov
pop
in
mov
dec
je
sbb
iret
shlb
cwtl
je
sbb
cmp
fcompl
cwtl
mov
inc
sub
xchg
sahf
mov
fimuls
stos
sbb
jbe
es
mov
fidivrs
sub
xor
out
loopne
shlb
and
adc
lcall
shlb
imul
ja
insb
loope
cld
jb
enter
sbb
jle
aam
in
sub
inc
inc
dec
daa
mov
leave
sbb
jbe
push
add
cmp
jle
lods
inc
lock
cmp
popa
and
pop
or
cmp
xlat
pusha
mov
int3
enter
in
add
xchg
dec
leave
push
out
jecxz
int3
mov
test
push
inc
lcall
cmpsl
iret
or
push
stc
js
xor
dec
push
es
lods
mov
mov
ret
inc
shlb
sub
outsb
leave
scas
or
test
pop
dec
sub
mov
lret
ret
aam
fs
dec
rcrb
stos
inc
cltd
inc
orl
and
cs
sbb
call
dec
inc
mov
cmp
add
push
sub
xchg
push
dec
dec
stos
sub
clc
lods
aad
popf
pop
fildll
fistl
pop
nop
aad
cmp
int3
sbb
dec
jbe
and
sbb
cwtl
loopne
andl
cmp
jo
push
test
sti
callw
mov
sahf
loop
arpl
and
fldt
inc
aas
and
add
lret
fstpl
cmp
repnz
cmp
pop
fmuls
push
xor
leave
cmp
mov
jne
repz
stc
jbe
push
xlat
or
out
sbb
add
mov
in
and
jge
xchg
jp
push
repnz
jns
push
inc
jle
inc
cmpsb
fs
loop
pop
icebp
jbe
aaa
loop
into
dec
test
sbbl
xchg
mov
pop
mov
and
scas
scas
std
cmp
sub
xchg
push
daa
inc
xor
int
pop
or
mov
mov
aas
test
xchg
mov
icebp
xchg
addb
rcrl
in
inc
xor
and
sti
mov
in
cmpsb
adc
lcall
cmp
mov
negb
sbb
mov
dec
hlt
aaa
sbb
sub
push
dec
je
test
mov
adc
jnp
jbe
xor
adc
add
aad
aaa
scas
movsb
mov
inc
dec
xchg
push
fistl
jmp
sub
les
das
push
xor
cwtl
adc
sti
lock
loop
mov
out
repnz
pop
nop
nop
jns
daa
rcll
push
xor
xchg
lea
jmp
aad
jne,pt
daa
es
fs
jl
ret
movsb
imull
imul
xchg
dec
mov
mov
push
pushf
into
out
cmp
sbb
sbb
js
add
mov
push
call
addr16
xor
or
xchg
cmp
xchg
jp
mov
scas
cmp
ret
cmp
jmp
xchg
push
adc
add
cmp
push
in
inc
lret
clc
push
pop
push
hlt
xchg
js
lcall
mov
pop
dec
jmp
fs
cmp
into
push
jbe
inc
jno
dec
addb
pop
or
mov
popf
shlb
pushf
push
test
leave
std
push
sbb
fiadds
add
push
int
pushf
outsb
sbb
and
dec
mov
xchg
sub
mov
rcrb
and
daa
mov
popl
imul
imul
insl
mov
sbb
or
xor
inc
adc
add
je
fidivl
jb
xlat
sub
mov
xchg
aad
stos
sub
fldenv
pop
and
movsw
inc
sub
add
and
xchg
imul
out
sbb
shr
and
pop
push
inc
imul
iret
pop
fs
jge
std
icebp
outsb
ficoml
jecxz
xor
mov
jl
mov
xor
outsb
cmpsb
mov
push
jmp
adc
mov
in
push
bound
bound
sub
arpl
ja
fucom
pop
minps
push
pop
xlat
jno
fwait
sub
mov
xor
imul
mov
pusha
push
hlt
lea
mov
pop
cmp
sub
sti
aaa
aad
shll
mov
jo
sbb
dec
adc
frstor
fmuls
repz
mov
xchg
pusha
push
fcomip
inc
test
push
push
inc
push
xor
adc
xor
arpl
lods
icebp
enter
pop
add
outsb
push
gs
clc
xchg
xor
stos
xor
bound
pop
icebp
insb
jg
daa
popl
xor
push
or
dec
es
rclb
sbb
std
jg
shll
sti
mov
cmpsb
push
ljmp
sub
pop
mov
repz
cmp
rcr
lret
jae
inc
shrl
lret
xchg
popa
hlt
es
test
cltd
es
cli
adc
xchg
sbb
lcall
mov
nop
jp
add
and
into
mov
pop
sbb
pop
out
or
je
rolb
addb
fwait
jo
hlt
dec
push
das
and
xchg
mov
aam
pop
adc
push
push
add
push
or
jb
imul
hlt
jl
jno
in
sub
cwtl
ljmp
pop
fidivrl
push
xchg
and
add
sbb
push
icebp
leave
jmp
mov
movsb
lea
scas
ljmp
add
add
cmp
add
mov
cmp
sbb
mov
ret
pop
sbb
xor
or
dec
pop
or
pop
insl
mov
or
iret
mov
decb
fidivs
pop
mov
jne
lret
mul
in
cmp
push
sub
mov
add
push
cmp
pop
and
jge
mov
out
in
shlb
push
call
adc
push
cld
sub
mov
fdecstp
push
or
mov
lcall
push
inc
pop
jo
test
aas
pusha
jecxz
inc
jecxz
movsb
lahf
adc
imul
pop
inc
push
mov
push
jle
scas
outsl
inc
xchg
cmp
rcll
sbb
mov
clc
mov
sub
cltd
inc
imul
fisttpl
lods
dec
dec
cmpsb
jmp
int
repnz
pop
sbb
std
mov
dec
push
lahf
pop
das
out
mov
inc
icebp
addb
mov
and
mov
sub
xchg
sti
and
je
xchg
pop
cmp
ror
popa
imul
scas
push
xor
arpl
test
or
lods
mov
ss
fwait
inc
fsubrs
mov
lea
xchg
dec
pop
cld
in
add
adc
jns
and
or
sbb
cmp
mov
mov
mov
rcrb
in
mov
cmpsb
push
ss
leave
push
pusha
push
ror
loopne
xchg
jge
les
test
fbld
inc
add
aam
pop
insb
shr
popf
mov
cmp
les
aad
fldenv
add
pop
scas
scas
xchg
adc
andb
dec
into
divb
shl
adc
push
aad
hlt
add
int3
push
out
xor
dec
and
sub
inc
shl
sbb
sbb
repnz
fistps
pop
loope
mov
mov
popa
repz
out
and
inc
adc
sub
mov
call
sbb
mov
out
sbb
leave
lea
repz
sub
jb
inc
jg
aam
xchg
mov
mov
xor
jmp
sbb
aaa
lahf
or
push
rcll
mov
jl
mov
nop
xor
xor
filds
dec
fcompl
add
icebp
mov
sub
insb
pop
shll
stos
or
scas
repz
mov
dec
pop
cs
mov
mov
div
pop
jge
lods
xor
dec
sbb
fmuls
xor
dec
or
xor
ficoms
mov
mov
dec
bound
add
mov
xchg
add
fimull
cli
mov
je
xor
mov
mov
sub
jno
dec
pop
dec
push
xchg
xlat
xchg
daa
xchg
int3
arpl
fisttps
and
lea
jmp
push
mov
movsl
pop
outsb
stc
mov
sbb
inc
out
pop
and
repz
inc
xchg
hlt
movsl
fs
loop
sbbl
dec
cmp
lret
sti
pop
xorl
mov
push
pop
sub
mov
jle
nop
mov
leave
dec
pop
mov
xor
mov
bound
xor
jmp
jg
insb
push
inc
mov
add
jl
std
daa
xor
push
test
sbb
sbb
fnstsw
aad
push
insl
mov
in
leave
in
sti
cs
adc
nop
stos
cmp
out
ficomps
mov
cli
sbb
stc
adcb
gs
and
test
in
incb
sbb
inc
outsl
ljmp
push
or
outsl
ret
pop
sbb
movsl
clc
xchg
out
push
sbb
cwtl
pop
enter
lahf
sub
rclb
movb
sbb
inc
add
aaa
sub
push
testl
pop
fdivr
mov
mov
rorl
repz
or
inc
imul
jg
mov
dec
mov
repz
icebp
hlt
cwtl
movsb
mov
mov
or
pop
sub
jno
xchg
test
mov
cli
fsubl
lahf
aam
nop
addl
cli
xchg
dec
add
mov
pop
jne
out
or
loop
xchg
xchg
lods
movsl
cmpsb
out
in
loope
jne
movsl
jecxz
jb
xchg
jns
sbb
mov
lret
sub
push
mov
sbb
leave
adc
push
inc
lods
cwtl
and
and
mov
mov
out
test
int3
xchg
mov
xchg
cmp
dec
jmp
jo
sti
popf
and
frstor
rcpps
mov
loopne
sub
dec
xchg
out
ja
add
sbb
ret
lock
sbb
fistpl
fisttpll
roll
ret
mov
int
imul
fildl
out
and
mov
push
inc
jbe
scas
movsb
sbb
jne
mov
xor
aam
orb
pop
loopne
into
hlt
push
test
push
lcall
lcall
lcall
aaa
mov
jne
dec
aaa
jge
inc
jno
jg
shrl
mov
xor
xchg
subb
popf
sbb
rolb
call
lret
jmp
xor
fcomi
sbb
and
cli
mov
pop
ds
dec
mov
pop
inc
dec
push
test
ja
dec
or
shlb
xlat
cmp
frstor
jg
add
inc
stc
add
fldl
hlt
add
jle
and
in
mov
out
mov
fistps
dec
call
push
aad
cmpsb
clc
mov
test
test
sub
leave
cwtl
mov
imul
mov
cmpl
jle
shll
mov
xchg
jle
xor
ficoml
and
lods
lock
mov
sub
mov
out
jp
push
sahf
hlt
arpl
or
push
mov
xchg
dec
outsl
mov
sbb
popf
jl
and
adcl
loope
add
sti
sub
sub
sub
popa
mov
lds
pop
in
pop
cmpsl
repz
jg
mov
xchg
jmp
das
pop
mov
cmp
mov
insb
hlt
or
mov
sub
and
cltd
mul
jg
outsb
leave
sti
mov
jo
rcrb
movntq
ffreep
dec
mov
jge
scas
xchg
xor
mov
jno
cmpsl
push
cltd
xor
sbb
or
fsubrs
or
in
sub
mov
xchg
pop
in
vmovaps
pop
in
push
mov
les
jg
pop
mov
ljmp
xchg
xchg
push
sbb
inc
mov
outsb
sbb
stos
sub
or
je
int3
out
dec
mov
lock
outsb
mov
push
push
mov
ja
lcall
mov
stos
mov
int3
scas
and
cltd
in
or
mov
xor
mov
testb
test
sub
int
mov
inc
xor
push
push
add
inc
jb
lcall
movb
jle
mov
xor
xchg
mov
adc
rolb
adc
cli
shrl
xchg
lods
data16
test
daa
cmp
test
pop
stos
push
rorb
fimuls
and
mov
push
into
pop
mov
sbb
jbe
push
repz
lahf
pop
mov
test
fidivl
fcoml
pop
stc
insb
test
or
lds
idivl
push
jp
cmp
xor
sarl
add
jb
cwtl
mul
jbe
pop
xor
and
dec
adc
mov
xor
sub
xchg
fwait
sub
mov
xchg
or
adc
mov
inc
dec
mov
bound
jecxz
xor
mov
addl
inc
test
sub
lret
pop
push
das
cwtl
in
data16
fs
dec
xor
out
scas
sbb
mov
adc
push
int
inc
dec
xor
outsl
xchg
jnp
comiss
jb
mov
ds
xchg
int3
or
fdivrl
sbb
jae
jb
and
mov
cs
add
jnp
call
pop
cmp
loop
popf
rcl
test
adc
xchg
or
xor
aaa
push
jmp
pop
or
cld
or
push
and
cmp
loop
fildll
xchg
jns
push
mov
out
pop
aaa
xor
mov
loope
or
in
sbb
push
push
aaa
stc
insl
xchg
in
push
sbbb
shl
push
mov
mov
push
or
add
pop
xchg
dec
stos
cmp
es
mov
lods
xorb
cwtl
lock
and
push
aam
fdivrp
xor
bound
mov
push
out
or
lock
out
mov
dec
je
fmul
push
cmp
and
pusha
imull
in
push
aad
movsb
adc
idivl
cmpb
inc
inc
inc
dec
lret
stos
out
out
cmp
insl
inc
xor
sub
in
sbb
imul
fidivrl
lcall
push
jne
or
cmp
mov
jle
sbb
std
movb
xchg
jnp
push
insl
fiadds
xchg
mov
pop
mov
enter
or
jbe
adc
sbb
push
jle
mov
mov
xchg
insl
and
mov
daa
ret
sahf
push
inc
jns
xor
cmp
lods
ljmp
add
and
xor
js
mov
xchg
mov
mov
sub
test
sbb
pop
stos
adc
inc
xchg
mov
pop
mov
lret
mov
addr16
mov
mov
xchg
pushf
cs
mov
lret
mov
sti
test
scas
les
insl
mov
mov
movsl
or
sahf
jg
lods
cmp
xchg
xor
rcr
lret
xchg
mov
pop
jae
mov
mov
shrb
cmp
jge
xchg
and
dec
jo
enter
loop
scas
dec
rclb
xor
aad
adc
inc
push
mov
jns
mov
iret
das
rcrl
mov
jp
mov
divl
add
lret
push
mov
scas
mov
adc
add
stos
andb
mov
cmp
iret
and
mov
sahf
daa
sti
push
mov
int3
fdivrl
sub
jmp
pop
in
xchg
xchg
dec
ret
pop
adc
pop
fiaddl
aas
sbb
jns
sbb
or
sub
adc
or
sub
mov
bound
cli
jns
es
jae
in
mov
inc
notb
jno
cmp
in
inc
or
push
stc
push
lock
sbb
cmp
mov
push
pop
movsl
xor
les
call
mov
lahf
mov
es
not
sub
jp
sub
repz
and
dec
sbb
fwait
lret
cmp
fcomps
sub
sbb
mov
shlb
mov
scas
ja
mov
fldl2t
push
mov
push
cmp
imul
idiv
outsb
or
shlb
cmc
sbb
fucom
out
aaa
jns
cli
rcr
hlt
cli
mov
xchg
stos
cld
ja
push
js
dec
dec
pop
inc
mov
add
repz
mov
adc
or
out
cltd
daa
insb
jns
hlt
shrb
dec
add
adc
xchg
stc
mov
ja
xchg
movb
xlat
cli
cmc
popf
push
add
jne
mov
scas
std
inc
pop
inc
les
xor
sub
mov
movsb
pushf
xor
outsl
xor
popf
add
bound
push
stc
aas
sub
sbb
dec
insl
lock
lret
sti
ljmp
sbb
stos
je
mov
jns
jno
add
or
xlat
cmp
ret
dec
sahf
lret
mov
add
pop
dec
shl
push
sahf
clc
push
fwait
scas
xlat
or
movsb
fbld
hlt
xchg
or
push
clc
xor
movsl
arpl
push
shl
ficoml
dec
push
jns
rclb
fistps
aad
inc
xchg
dec
cli
xor
jle
outsb
sub
rolb
adc
xor
sti
add
data16
movsl
push
mov
cmp
aad
repz
fldt
pop
push
push
or
adc
and
and
mov
jns
stc
lahf
dec
or
jmp
mov
pop
jns
mov
pop
or
mov
mov
iret
testb
push
dec
aad
ljmp
and
aam
xor
jae
dec
leave
test
bound
lahf
sahf
push
lcall
jecxz
test
sub
mov
lret
add
outsl
mov
stc
sbb
in
std
cmp
movsl
sub
and
or
test
dec
xor
jbe
mov
inc
cmp
add
fs
mov
in
jmp
dec
dec
jb
adc
pop
and
int3
hlt
push
xchg
gs
pop
push
add
mov
mov
push
flds
inc
ret
sarl
pop
cmp
push
into
push
in
leave
daa
subb
sbb
cmp
cmp
in
inc
mov
and
loop
pushf
aaa
popf
ret
bound
push
xor
xchg
int3
addb
lea
lock
rorb
push
cmp
lahf
rorl
mov
ss
add
clc
jge
cli
push
fmulp
mov
insb
in
sahf
adc
mov
adc
test
xchg
adc
jbe
arpl
rcl
inc
add
sub
and
pusha
mov
lret
dec
push
sarb
sbb
rcrl
push
xchg
movsl
fsubs
sbb
pop
and
pop
in
inc
mov
mov
mov
push
sbb
inc
sti
seto
and
mov
add
jae
fldl
add
mov
hlt
dec
push
xor
push
out
lods
cld
lds
ds
adc
imul
mov
repnz
outsb
mov
mov
adc
ljmp
xchg
test
dec
jbe
jp
mulb
arpl
stc
jnp
shrb
mov
cmpsl
sahf
cmp
hlt
sbb
imul
xchg
scas
jne
repnz
cwtl
pop
adc
loope
jge
scas
js
and
int3
xchg
adc
out
sarb
xchg
bound
ljmp
loop
dec
stos
pop
movsb
stc
adc
lds
cmp
pop
sar
push
xor
lods
gs
inc
cmp
enter
notl
and
testb
pop
and
cs
xchg
mov
fsubr
std
pop
idiv
insl
and
out
subl
movsb
rorl
loope
jle
pop
bound
pop
push
mov
data16
rep
or
icebp
xor
lods
popl
es
lods
pusha
xchg
in
mov
ljmp
jnp
cmp
imul
out
insb
sub
aas
sti
pop
pop
fistpll
mov
push
scas
sti
mov
adc
mov
mov
div
xchg
xchg
lcall
mov
lcall
pop
cmp
inc
add
adcl
lahf
jns
push
dec
into
and
popa
cs
arpl
ja
cmp
enter
sahf
in
inc
ja
mov
sub
xchg
xchg
inc
xchg
gs
lock
lahf
orb
inc
test
cmc
aaa
add
in
test
aam
je
push
ror
mov
cltd
rclb
ds
cltd
push
loopne
mov
hlt
ret
test
add
pop
push
stos
xchg
xor
pop
jecxz
xor
pop
and
jno
dec
addl
insl
call
jecxz
loopne
sub
xchg
jmp
hlt
aaa
enter
es
pop
popf
nop
mov
lods
push
push
sbb
rolb
push
sub
or
xor
es
mov
mov
mov
nop
xchg
insb
icebp
shl
pop
aas
or
leave
xchg
push
push
aaa
sbb
pusha
testl
movsb
cmp
je
dec
test
inc
pop
sahf
mov
imul
mov
mov
jns
test
push
icebp
push
out
pop
insb
push
mov
cmc
jbe
fwait
add
dec
in
pop
fnstenv
hlt
mov
ret
stos
insl
mov
aam
fincstp
push
out
fcoms
xchg
scas
mov
push
insl
mov
add
adc
mov
divb
insl
enter
cmp
das
inc
aad
enter
enter
add
inc
push
jp
pop
pop
xor
xchg
daa
loopne
icebp
pop
push
pop
insl
daa
sti
andb
int
push
jecxz
jnp
test
sbb
scas
mov
and
dec
sbb
sub
rolb
rcrb
imul
xchg
test
cld
jb
jl
int3
das
orb
pop
outsb
mov
inc
movsb
xor
fidivrl
adc
mov
loop
arpl
jnp
sarl
sbb
mov
push
mov
mov
insb
mov
and
dec
shll
lods
pop
clc
push
mov
jns
in
lods
mov
mov
mov
mov
arpl
inc
pushf
in
mov
aaa
aas
xor
imul
sbb
ret
add
popf
repz
inc
dec
xor
ret
aaa
jns
enter
xor
out
mov
add
pop
jns
jne
fs
test
and
mov
mov
hlt
dec
in
sbb
xchg
sbb
push
adc
test
cld
loop
xchg
sarb
xchg
and
jnp
stos
sub
shlb
icebp
ljmp
xor
fldenv
mov
cmc
xchg
and
jnp
and
add
xchg
mov
js
adc
jb
sar
jno
or
dec
notl
jb
in
test
adc
inc
cmp
dec
cmp
nop
mov
adc
adcb
or
in
loop
sub
lcall
cld
mov
cld
sbbb
dec
dec
or
stos
xchg
or
in
sbbl
or
push
push
test
or
mov
xchg
je
stos
rolb
sbb
aaa
cmc
xchg
xor
movsl
xchg
js
jmp
adcb
addr16
out
mov
nop
inc
outsl
lahf
in
lcall
push
enter
cwtl
fisttps
insb
test
pop
push
xchg
add
ret
dec
cmp
sbb
bound
or
add
negb
rcrl
cmpsl
fdivrs
rclb
test
in
pop
push
push
mov
xchg
inc
lods
movsl
mov
dec
sbb
add
daa
popf
mov
sub
daa
sub
add
jns
cmpsl
lods
adc
or
mov
das
in
fisubrs
inc
jnp
push
out
dec
xchg
shrl
call
imul
push
jp
nop
sbb
je
dec
movsb
sub
jns
fidivs
and
cmc
in
mov
xlat
inc
das
xchg
jl
mov
insl
std
addb
push
das
or
mov
gs
pop
idivl
sbbl
sbb
hlt
mov
jle
mov
push
pop
stos
jb
push
adc
and
xor
loope
aam
repnz
sub
shlb
icebp
mov
cmpsb
loope
cmp
insb
aam
jl
lahf
gs
lods
lcall
mov
fwait
sar
js
ret
xor
sar
aaa
stc
inc
ficompl
ror
mov
cmp
xchg
and
dec
aad
xchg
lret
sahf
and
ss
pushf
mov
add
sbb
jne
xor
mov
sbb
test
pusha
lods
shll
je,pn
imul
or
cltd
lahf
rcrl
xor
and
mov
fwait
in
xchg
mov
rcl
inc
add
divb
xor
mov
clc
push
sub
sub
repnz
enter
rorl
push
push
movsb
push
lods
clc
adc
mov
cld
xor
movsl
ret
adc
in
test
pusha
sub
and
fmulp
sbbb
sbb
push
dec
out
repz
adc
inc
lret
inc
movsl
lahf
loop
add
cli
mov
clc
cmc
mov
mov
push
push
mov
dec
out
in
xchg
out
rcll
int
out
sbb
sti
mov
jg
inc
lods
mov
jg
xchg
xor
test
out
adc
inc
sub
test
aaa
dec
inc
pop
rolb
in
mov
clc
lods
aad
or
and
sahf
xchg
fsubrp
in
inc
pop
jle
stos
cltd
test
shrb
aas
inc
sti
add
jmp
es
xchg
push
lods
bound
lret
stc
fstps
jg
push
inc
cmp
jmp
xlat
lea
pop
pusha
mov
add
jne
lret
fdivrp
adc
and
inc
mov
test
mov
add
inc
jns
std
push
pop
jge
ljmp
xor
arpl
and
inc
mov
xor
arpl
add
dec
adc
loopne
fcoms
push
js
pop
out
std
enter
jmp
into
lret
pushf
idivb
mov
ret
dec
pop
pop
jbe
fwait
mov
mov
xor
pop
inc
xchg
mov
sub
xor
and
adc
aad
cmp
sbb
add
mov
xchg
mov
mov
movsl
adc
sub
add
ss
and
arpl
lods
mov
dec
insb
or
loop
sub
mov
push
nop
fists
and
cld
sub
in
scas
aaa
sub
xor
add
xchg
and
int3
and
pop
test
push
or
mov
adc
or
loopne
push
lahf
jb
call
mov
dec
jbe
add
mov
out
in
pusha
sub
ret
sub
inc
xor
es
js
loopne
jae
jne
push
les
mov
pop
dec
jge
or
mov
fdivrl
pop
mov
jbe
xor
push
xor
in
je
pop
out
mull
fs
aad
push
sub
inc
in
dec
xlat
and
jp
jmp
jge
pop
sub
fwait
mov
xchg
lea
movsb
inc
pop
pop
cs
icebp
xor
add
pop
cmp
out
lods
ds
lcall
in
cld
sbb
mov
nop
out
in
xor
ret
aaa
dec
in
add
bound
jne
stc
in
jo
adc
push
mov
clc
push
push
adc
and
mov
cmovnp
arpl
mov
dec
push
cmpsb
sbb
cmp
sbb
sahf
addb
inc
lods
test
nop
stos
sub
test
mov
push
setb
imul
leave
adc
cmp
or
mov
test
movsb
adc
jno
xor
jl
movsl
adc
scas
sub
mov
mov
mov
repnz
sahf
mov
aam
das
pop
outsb
sbb
lahf
pop
stos
mov
into
out
scas
mov
paddb
or
jp
mov
pop
js
push
scas
push
lds
jge
xor
loop
pop
pop
push
pushf
bound
xchg
mov
add
bound
mov
sbb
jle
push
test
dec
stc
out
mov
and
push
loope
dec
xchg
or
fwait
jmp
cld
cmp
and
int3
mov
jmp
out
inc
adc
xchg
dec
xchg
loope
imul
es
ds
or
ja
xor
xor
imul
call
mov
push
dec
jmp
fwait
lret
jae
out
or
mov
imul
das
fsts
inc
sahf
pop
mov
stos
sti
cwtl
iret
bnd
lea
mov
lods
cmp
sub
xchg
test
push
xor
test
scas
pop
faddl
movsl
call
in
adc
insb
xchg
js
mov
adc
shrb
jnp
mov
sub
pop
sub
push
movzwl
adc
or
mov
inc
and
out
js
lods
addr16
lcall
push
mov
arpl
cwtl
pusha
jle
aad
pop
xchg
pop
arpl
sti
or
dec
or
ret
xor
ret
out
mov
je
pop
imul
cmp
adc
outsl
ret
mov
sub
nopl
popl
fwait
in
movsb
movl
add
scas
mov
or
and
data16
dec
into
mov
inc
dec
aas
dec
cwtl
scas
aaa
add
lret
adc
aaa
iret
fadds
hlt
cltd
nop
mov
mov
les
pop
jmp
cmp
dec
repz
aas
pop
out
jmp
lock
imulb
push
dec
push
inc
add
lret
jno
cmc
cmp
sub
out
jb
sarl
and
xor
mov
pop
icebp
adc
test
sub
mov
js
pop
loope
repz
xchg
xchg
iret
mov
inc
mov
xacquire
xchg
ficoms
jmp
and
aas
mov
inc
jnp
jo
jnp
inc
push
adc
rcr
cmp
ss
pushl
call
into
sbb
shlb
xor
xor
dec
jl
stos
pop
push
mov
pop
or
push
add
mov
mov
aad
pop
jle
cs
mov
xchg
or
xor
imul
push
stc
sub
sahf
add
pop
mov
pop
jl
rcll
shlb
je
notl
push
or
stos
ret
in
movsb
or
cmp
mov
jb
adc
and
popa
push
in
mov
and
jmp
push
out
dec
int
rcll
pop
movsb
int3
mov
sbb
ror
cmpsb
jg
fadds
mov
sbbl
sub
int
cmp
ds
mov
cmpsl
jmp
fndisi(8087
push
and
out
push
cmpsl
cli
mov
enter
or
jbe
es
mov
or
push
jmp
dec
aas
cmpsl
imul
les
repz
loop
es
jnp
cmpsb
xor
and
mov
push
dec
test
dec
enter
mov
xor
cli
mov
or
out
jl
pop
outsb
les
loope
icebp
adc
push
push
and
xchg
out
inc
hlt
cmp
cwtl
mov
shlb
aam
lahf
ficoms
or
adc
aad
fs
mov
cmp
in
enter
fwait
sub
clc
pop
pop
out
pop
stos
cwtl
pushf
sub
rolb
mov
cld
mov
out
or
out
dec
cltd
test
jb
sahf
sub
dec
pusha
cmp
stc
enter
popf
pushf
fs
adc
movsl
or
int
call
into
mov
data16
or
jno
sbb
int
push
pop
pop
adcb
pop
jp
iret
dec
jno
fcmovbe
push
mov
lahf
inc
sub
cmp
lds
cmp
jno
ret
insl
ljmp
nop
imul
mov
insl
xor
insb
xchg
mov
fcoms
nop
jp
mov
push
push
in
out
leave
xchg
mov
out
sub
in
adcl
repnz
xorl
sub
hlt
mov
lret
add
hlt
aaa
cmp
inc
cli
xchg
fwait
push
push
push
cmc
dec
mov
cmp
adc
movb
pop
loope
nop
add
inc
bound
sub
xlat
int3
lea
stos
addr16
repz
xor
jmp
xor
enter
aaa
lea
lret
icebp
sbb
ljmp
xorl
cmp
cmpsb
cmp
sbb
xchg
arpl
pop
adc
clc
ja
sti
pop
sbb
bswap
negb
lcall
add
in
cmp
or
push
test
xchg
lahf
rcrb
fdivrp
pop
icebp
inc
rcll
xor
test
pop
pop
repnz
cmpsb
pop
sahf
xchg
popa
dec
into
fmull
dec
cmp
cmp
pop
inc
and
mov
mov
cld
pop
sub
js
jl
push
mov
aam
cmp
cmc
lcall
mov
sbb
sbb
inc
test
dec
add
andb
pop
xchg
jno
leave
sbb
lods
sbb
out
inc
and
lret
sbb
add
add
mov
out
mov
ret
imul
jbe
addr16
fstps
push
or
jae
ret
and
leave
lahf
jl
das
adc
inc
or
push
cmp
repz
stos
daa
rsm
sub
xor
popl
inc
psubusb
roll
pop
sarb
leave
cmp
or
mov
xorl
test
mov
jae
jle
push
mov
pop
iret
xorl
mov
pusha
pop
ja
dec
ds
sbb
rolb
dec
pop
dec
or
shlb
sbb
dec
jae
les
in
js
iret
lods
mov
pushf
pop
adc
jbe
sbb
cmpsl
cmp
inc
lea
jb
inc
repz
lods
xor
mov
mov
mov
outsb
push
fucompp
mov
push
popa
sti
loop
push
sub
xor
sahf
mov
xchg
pop
and
in
xchg
xor
mov
pop
sub
inc
mov
rcrb
fimull
test
cmpsb
divl
add
mov
push
inc
jno
daa
mov
push
and
stc
mov
jo
movb
insl
xchg
js
addr16
mov
imul
in
in
rcrb
xor
xchg
lcall
jge
loope
lcall
in
popa
shr
stos
lcall
lock
fdivrs
xor
mov
mov
clc
push
mov
rclb
mov
mov
int3
sub
sbb
stos
mov
mov
mov
sbb
adc
sub
das
pushf
mov
ret
adc
xchg
and
notb
cmp
daa
inc
stos
mov
enter
ret
dec
push
pusha
sahf
stos
pop
inc
adc
rorl
jmp
pushf
repnz
popf
sbbb
fbld
and
stos
mov
sbb
jnp
xor
cwtl
imul
outsb
mov
dec
inc
ficomps
xchg
bound
or
cmp
cltd
int
or
xor
ljmp
ja
outsl
in
cs
iret
xor
jp
imulb
inc
sti
lcall
sbb
add
cmpsb
lahf
aas
pop
cld
gs
cmp
pop
dec
mov
gs
sahf
push
pushf
test
jo
push
xlat
cmpsb
mov
xlat
inc
xchg
cmp
mov
iret
jo
or
mov
nop
popa
dec
mov
jmp
mulb
xlat
push
flds
jge
mov
and
dec
mov
clc
push
mov
out
inc
rcrl
movsl
push
pop
push
mov
es
into
jmp
dec
inc
or
cli
rorb
pop
sub
mov
out
cmp
mov
out
ss
push
ljmp
jb
aad
lret
test
push
dec
adc
cld
cli
hlt
in
mov
lods
push
sarl
lock
add
cmp
ljmp
aas
push
daa
arpl
mov
mov
xchg
or
daa
mov
loopne
out
xchg
adcb
cltd
lock
push
cmp
mov
sarb
and
into
push
loop
dec
adc
add
test
popa
mov
cmp
adc
lds
ficoms
mov
outsb
leave
rcrb
and
xor
adc
cmp
aaa
adc
mov
mov
jbe
shl
mov
popl
in
repnz
push
cmp
mov
add
bound
xchg
cli
pushf
push
mov
icebp
mov
or
nop
inc
xor
imul
fldl
cmp
fwait
dec
into
mov
arpl
lahf
mov
popf
pushl
rcll
ss
repnz
sbb
push
repnz
jb
jae
nop
dec
subb
fwait
daa
gs
insb
clc
outsb
rorb
xchg
and
int3
add
std
cltd
dec
adc
dec
enter
pop
xor
cmp
mov
pop
sbb
repz
bound
jae
shrl
adc
dec
lret
shrb
push
imul
rcr
fsubr
cld
negb
lret
xlat
pop
nop
xchg
adcl
push
jp
push
sbbl
int3
sub
sbb
shlb
loopne
nop
adc
mov
inc
fistpl
call
dec
and
mov
pop
add
dec
dec
enter
add
pop
sub
sub
adc
cmp
imul
dec
popa
and
mov
fwait
lret
adc
xor
fsts
xor
adc
mov
xchg
sbb
test
ss
push
mov
sub
aaa
add
sub
push
cwtl
sbb
bound
icebp
rolb
cli
mov
adc
xchg
std
and
hlt
and
dec
and
add
lods
ret
out
subb
mov
adc
jae
inc
or
in
xor
enter
ficompl
lcall
adc
mov
jge
leave
push
inc
dec
pop
xchg
add
xor
mov
inc
adc
push
mov
pusha
fdivs
shl
ret
xchg
push
cld
fwait
mov
cli
ficoml
xlat
xchg
push
cmc
mov
int
test
outsb
mov
lret
mov
xlat
jle
mov
mov
adc
loope
adc
mov
xchg
cmc
sbb
inc
and
iret
mov
lret
mov
imul
and
cmpb
out
dec
mul
mov
pusha
repz
in
lods
push
idivb
andb
push
cmp
xor
push
dec
jae
es
add
xor
push
jecxz
jecxz
fmuls
xchg
movsl
mov
jg
xchg
and
aad
adcl
sti
in
mov
adc
int
and
mov
inc
das
ja
in
push
hlt
test
mov
xchg
cli
sbb
mov
mov
cld
cltd
test
sub
add
repnz
loopne
in
adc
gs
test
inc
cmpsb
inc
inc
cmp
stos
clc
mov
jae
xchg
sbb
pop
mov
push
fwait
cmp
mov
add
andb
cld
adc
sahf
mov
ret
mov
aas
daa
dec
adc
cmp
mov
out
aam
adc
arpl
dec
cmpsb
inc
or
gs
inc
sub
cmp
in
aaa
jae
call
lock
stc
mov
dec
lock
xchg
ja
nop
roll
mov
lcall
ret
mov
or
push
inc
jne
arpl
xchg
mov
test
sbb
sti
and
xchg
shll
lds
out
mov
sahf
mov
clc
ja
push
pop
push
cwtl
dec
test
aam
mov
mov
es
sbb
lret
outsb
repnz
push
rorb
push
subl
push
mov
cmpb
cmp
notb
jo
xor
jge
and
jecxz
jmp
jl
mov
or
cmpsl
sub
push
add
cmp
mov
fdivrl
push
sub
mov
in
mov
pop
inc
notl
lcall
sub
cmp
or
mov
dec
xor
push
movsl
sbb
fisubs
stc
and
fwait
dec
ret
lods
mov
movsb
cmpsb
sbb
aam
sar
inc
push
pop
aam
fisttps
cmp
add
popf
push
adc
add
das
fldcw
pusha
mov
test
lret
jae
pop
adcl
pop
fs
or
mov
mov
stc
iret
iret
adc
aas
mov
mov
pop
xor
es
xchg
nop
jge
sub
faddl
int
jmp
mov
dec
fnstcw
fcom
out
movsl
call
fnsave
fwait
repnz
clc
add
lds
add
adc
xor
daa
push
or
repz
mov
movsl
imul
in
mov
es
cs
mov
jle
call
pop
pop
cmp
push
xchg
movsl
push
adc
sub
movsl
mov
out
push
jp
das
or
sbb
pusha
jecxz
lods
add
insl
int3
mov
cli
loopne
jns,pt
jo
les
push
dec
cltd
inc
stos
test
push
fdivl
aad
popf
shrb
jnp
jmp
dec
adc
pop
jmp
sbb
xchg
sub
inc
push
inc
dec
dec
cmpb
push
daa
dec
or
das
enter
xchg
xchg
cltd
mov
das
mov
xchg
rorl
mov
xlat
mov
pop
rorl
sub
mov
movsl
popf
add
inc
dec
sub
test
jo
aam
push
mov
ror
fwait
and
test
test
iret
sbb
xchg
enter
outsl
and
inc
pop
and
js
fwait
push
and
push
data16
xchg
ljmp
mov
push
mov
fdivl
push
add
xchg
lods
idivb
call
and
push
dec
fwait
jmp
fsubs
loope
xchg
jl,pt
sahf
icebp
insb
scas
xchg
jmp
mov
insb
out
lret
fnstsw
sarl
push
lahf
mov
mov
pop
jno
dec
mov
mov
xlat
xchg
int3
or
lcall
sbb
movsbl
cmpsl
sub
xchg
mov
ret
pop
nop
push
bnd
rolb
lahf
and
sbb
dec
fwait
sbb
lahf
cltd
pusha
pop
leave
dec
lret
and
jae
or
dec
fcmovbe
imul
nop
lret
lods
mov
sub
leave
loope
lret
hlt
call
aas
push
push
jecxz
adc
sub
mov
mov
pusha
push
jno
hlt
jg
into
nop
jl
jns
mov
in
add
jb
rorl
mov
mov
stos
out
mov
iret
dec
push
lret
mov
jl
es
sete
aam
cmp
jnp
add
cmp
xchg
lods
cld
fwait
cmpsb
and
scas
inc
pop
les
sbb
in
cld
sti
js
adc
mov
int
push
stc
pushf
popf
sub
stc
test
push
adc
in
jo
testb
cmp
negb
lret
push
lea
dec
test
lcall
and
jb
dec
rorl
loop
scas
arpl
inc
int
mov
icebp
adc
dec
movb
xor
sub
push
jbe
in
test
mov
pushf
jmp
clc
loopne
dec
xor
sbb
mov
fs
mov
mov
jae
jp
xor
ret
bound
jg
ja
or
lcall
test
fcmovnb
jnp
lods
lret
roll
inc
cmpsb
push
xor
notb
sub
cld
stos
insl
xchg
movsb
xchg
push
xor
iret
loop
pop
xchg
or
sub
loop
pop
andb
movsl
loopne
add
mov
mov
mov
pop
xlat
aas
rcl
jge
jg
aam
sbb
es
scas
and
and
jecxz
scas
ret
fcoml
mov
jno
adc
dec
fstpt
lods
jnp
sbb
xor
imul
jl
popa
jae
or
repnz
adc
or
adc
movsb
pushf
test
mov
test
sub
inc
adc
xchg
inc
mov
or
mov
shll
sbb
and
xchg
inc
push
or
mov
fsubl
xor
push
add
scas
mov
out
imul
mov
lahf
fbld
out
cmp
cmc
jge
gs
push
xchg
pop
mov
xor
aad
cld
testl
dec
push
std
mov
stc
xchg
out
sbbl
mov
dec
mov
cwtl
or
add
mov
sahf
dec
jge
add
or
iret
in
lods
repnz
lock
lret
dec
mov
lods
iret
lods
add
std
inc
or
push
shl
mov
enter
pop
sub
shr
and
xchg
pop
inc
stc
dec
sbb
sbb
lea
xchg
ds
pop
jne
repz
jge
lahf
push
mov
xchg
adc
js
adc
adc
es
push
pop
jns
jne
mov
xor
cmp
xchg
cwtl
and
mov
add
mov
or
push
nop
sti
or
ljmp
sub
pop
push
xchg
into
popa
lds
add
push
adc
dec
xlat
out
and
dec
dec
pusha
cmc
adc
stos
ficompl
shlb
stos
push
fsubrs
jne
mov
push
and
icebp
mov
out
push
outsb
sub
inc
sbb
js
dec
pop
icebp
adc
xor
rol
fisubrl
and
xchg
cmp
xor
nop
mov
inc
mov
jo
loope
popf
pop
jmp
lock
out
xor
xor
loope
int3
xchg
cmp
in
cld
inc
mov
imul
and
insl
mov
lds
inc
imul
pop
adc
arpl
jg
rolb
icebp
dec
out
mov
orl
dec
or
popf
leave
fsubrl
xor
dec
push
push
sbb
enter
in
addr16
hlt
or
inc
mov
mov
mov
xchg
sub
inc
jge
aas
add
imul
negl
scas
sub
dec
push
cwtl
std
xor
mov
push
mov
mov
jo
push
std
aad
out
dec
cmpb
adcl
mov
sbb
outsl
and
aaa
loop
mov
xchg
in
fsts
mov
mov
inc
jnp
mov
aaa
jl
aaa
les
sti
cwtl
sub
subb
jle
into
int3
loop
mov
fwait
gs
dec
and
fadd
push
loope
adc
add
jo
dec
mov
sti
in
sbb
movsb
xor
cmp
pop
jg
jl
pop
push
jmp
jecxz
xchg
hlt
mov
popa
push
int
sub
subb
pusha
mov
scas
in
addr16
icebp
into
test
push
cmp
divb
mov
lds
add
movsl
out
xor
jl
jae
lds
bound
ret
insl
adc
cld
iret
shrl
shl
jle
pusha
aad
jmp
add
add
fadd
and
insb
push
fsubl
add
fimull
out
mov
call
shlb
push
shrl
fwait
bound
in
es
mov
imul
pop
repz
int
into
add
sbb
xor
or
xor
cltd
stos
jno
dec
and
pusha
sub
or
jecxz
mov
pop
cmc
cmp
fstps
jb
sbb
adcl
ljmp
fwait
pop
adc
mov
push
jmp
test
test
outsl
ficoms
or
pop
sub
scas
pop
pusha
je
pop
cmp
data16
cmpsb
adc
and
lods
in
sub
sub
sahf
mov
sbb
cltd
dec
fsubl
xchg
sub
add
and
mov
data16
addb
aas
sbb
cmp
mov
hlt
xor
movsl
cwtl
mov
push
jp
jmp
daa
loope
sub
loopne
das
jne
xchg
lret
jns
lock
cwtl
xor
adc
repz
lea
aaa
xchg
jns
in
das
dec
insl
arpl
xchg
sub
icebp
dec
fildll
or
rolb
inc
cmpsl
lods
jns
push
push
push
add
lahf
das
jmp
mul
or
mov
pop
mov
mov
notl
lret
scas
enter
insl
repz
mov
and
mov
jle
xchg
hlt
stos
jecxz
add
inc
rcll
gs
test
or
jne
mov
fldl
inc
test
sbb
ljmp
out
pop
repnz
rcll
fsubp
adc
icebp
cmp
gs
leave
aaa
pop
scas
sti
into
push
mov
sahf
cwtl
or
add
sti
jns
sbb
cmp
mov
enter
add
jb
pop
je
add
inc
add
and
pop
inc
hlt
push
loop
call
pushl
leave
lods
sub
out
std
push
sub
cmp
sub
mov
sub
scas
imull
mov
mov
repz
pusha
stos
movswl
mov
xor
cmp
shll
and
ret
imul
cmp
sbb
adcl
jmp
test
fidivl
ret
addr16
xor
cmp
push
test
mov
lret
ret
and
test
cmp
sbb
ljmp
fwait
cmp
clc
lret
dec
push
imul
jae
cmp
dec
push
cmp
mov
lcall
jl
loop
mov
loop
shrl
enter
idivl
hlt
mov
jae
test
jge
push
mov
mov
xchg
imul
cmp
shrb
pusha
pop
lods
inc
add
fnstcw
sahf
popa
shr
shll
in
or
push
xchg
xchg
fstps
pop
ljmp
or
xchg
jnp
push
mov
movl
and
and
ficompl
dec
hlt
add
inc
push
lds
in
fs
jno
nop
and
cmpsb
popa
mov
out
cmp
sti
out
and
sbb
xchg
xchg
and
dec
mov
mov
pop
hlt
inc
test
fisubrs
dec
push
xchg
xchg
mov
int3
in
mov
cmp
pop
mov
aad
and
divl
jnp
push
popa
push
enter
pop
enter
and
std
fstl
out
dec
dec
cld
ret
cmpsl
or
les
roll
neg
dec
addl
cpuid
int3
add
cmc
add
jno
pushf
jnp
and
jo
cmp
xchg
enter
push
pop
in
repz
out
orl
push
inc
xchg
push
loop
ret
and
xchg
fsubrl
or
xchg
adc
mov
notl
sbb
hlt
or
mov
sub
into
adc
or
jns
or
push
xchg
jae
fst
push
push
in
xchg
roll
pop
orb
pop
xchg
pop
or
lcall
add
adc
mov
adc
clc
push
add
inc
and
pusha
and
mov
jmp
sub
jmp
push
or
xchg
or
mov
jp
stos
pop
inc
gs
jne
jb
cmpsb
ss
aad
fwait
mov
fwait
testb
adc
sbb
fsts
movsl
mov
dec
movsl
mov
pop
mov
or
fnstcw
xor
push
inc
or
sti
movsl
pop
mov
push
push
jbe
mov
or
stc
lahf
mov
and
in
je
mov
lea
or
jle
adc
or
or
insb
inc
int3
xchg
pop
ds
scas
jp
fidivs
lret
nop
fwait
popl
mov
mov
adc
push
loopne
sbb
ficoml
mulps
mov
insl
xor
jns
xorl
push
sbb
loope
and
andb
inc
or
push
cmp
hlt
adc
fincstp
sbb
xor
xchg
sbb
out
movsb
push
repnz
xchg
cmp
xchg
andb
sub
push
addr16
push
mov
dec
cwtl
mov
dec
adc
cmp
or
push
jp
push
gs
je
test
jo
xor
and
mov
jae
mov
mov
push
cld
shl
mov
fcmovb
push
push
std
loop
pop
cmp
leave
mov
repnz
aas
pushf
pop
add
popa
sbb
repnz
jge
nop
in
lahf
pusha
ds
and
mov
jecxz
xchg
out
xchg
out
cmpsl
sub
lahf
hlt
sub
out
loop
sbb
out
cmp
mov
sub
scas
push
test
sbb
gs
shl
inc
sub
mov
cmp
sub
mov
sub
mov
sbb
out
jb
iret
sbb
jno
mov
pop
cs
lcall
and
sub
pop
lcall
out
test
and
or
inc
sub
pop
push
mov
xchg
and
test
jp
adc
imul
out
dec
clc
loop
push
add
ss
mov
lds
sub
jp
sub
dec
das
movsl
xchg
sub
data16
lock
inc
mov
in
stos
cmpsl
adc
cltd
xchg
xchg
xchg
mov
cmp
mov
fidivs
sub
cmp
fidivs
sbb
arpl
inc
cmc
adc
mov
push
pushf
lret
out
pop
cwtl
movzbl
sub
mov
fisubrl
outsb
push
call
lcall
fimull
jne
mov
outsb
dec
sub
or
xchg
cmp
lods
dec
pop
jle
imul
xchg
push
hlt
add
and
cmp
rcrl
pop
loop
jp
aam
sub
sbb
jge
repz
inc
xchg
out
jp
out
mov
mov
dec
into
pop
push
mov
call
lahf
push
sbb
dec
jg
push
movntq
out
repnz
inc
adc
cmp
jge
ljmp
pop
push
sahf
add
pop
rolb
inc
mov
cltd
dec
add
loop
pop
shll
gs
in
rclb
inc
ss
pop
jnp
cwtl
or
cmp
adc
xchg
dec
mov
adcl
mov
ud2
ds
push
movsb
and
rol
xor
and
xchg
repnz
pop
leave
sub
add
cmc
negb
mov
clc
adc
aas
bound
cmp
add
xchg
jno
js
pushf
push
ficoml
jl
jg
pop
jg
jp
jnp
xchg
movb
pusha
subb
lds
and
add
jno
mov
scas
jg
dec
stos
add
add
data16
rcrl
mov
lds
dec
mov
xor
add
lods
stos
aam
and
xchg
setne
dec
xor
scas
cmp
stc
xor
dec
and
bswap
sbb
in
mov
mov
frstor
fimull
xchg
pop
add
add
cs
push
jb
fbld
and
mov
mov
sub
sbb
out
loopne
lock
outsl
lods
mov
adc
adc
inc
mov
sbb
mov
loop
jns
and
gs
mov
cmc
inc
fidivrl
sarl
mov
stc
repnz
lcall
stc
scas
scas
mov
pop
shr
adc
loopne
lret
scas
push
sub
pop
push
xor
cmp
cmp
mov
fbstp
imul
ret
into
pop
sub
int3
dec
repz
mov
in
cmp
push
loop,pt
mov
ja
jns
mov
int
xchg
outsb
dec
test
out
movsl
movsl
cli
testb
pusha
sbb
cmp
sub
pop
mov
call
mov
sub
std
int
andb
call
and
and
xor
int3
jbe
pop
sbb
sbb
mov
xor
mov
mov
je
pusha
push
hlt
fdivrl
into
imul
push
int3
or
mov
mov
outsb
or
cmp
mov
adc
pop
mov
push
push
push
out
jb
dec
pushf
int3
fneni(8087
leave
or
or
xor
xor
stc
sahf
and
pop
pop
jns
negl
mov
push
mov
cwtl
xlat
test
jge
adc
push
sti
js
push
cltd
mov
fs
cmp
push
enter
sbb
mov
inc
mov
jg
outsb
lret
dec
out
lret
mov
push
or
xor
mov
and
lret
pop
imul
mov
popf
test
dec
test
popl
sub
and
shll
test
fs
mov
cmp
subl
cmp
adc
push
dec
sub
out
aas
mov
arpl
xor
jp
mov
pop
std
lock
sbb
dec
push
cmp
jo
xchg
mov
mov
cwtl
cmc
stos
outsb
mov
aad
or
fstps
jmp
das
call
mov
outsl
lea
in
xchg
cmp
and
sbb
jle
adc
pop
repz
jmp
hlt
test
adc
jg
jne
sub
inc
push
hlt
je
jle
mov
lret
adc
leave
fsub
lret
push
or
addr16
call
mov
jmp
push
pop
mov
cmp
es
repnz
int
test
cltd
add
ja
dec
push
adc
sub
pushf
lds
inc
xor
repz
popf
cmpl
pop
mov
mov
imul
mov
jo
out
push
mov
sbb
or
adc
and
add
imul
in
jp
xchg
and
es
lret
pushf
fwait
call
out
jg
and
sbb
enter
dec
xchg
or
cmp
les
das
stc
push
cltd
adc
divl
inc
mov
fwait
push
pop
mov
lds
add
xor
adc
dec
test
xor
mov
xor
add
sub
cs
mov
cmp
and
xchg
out
xchg
xor
or
push
pop
cmpsl
js
dec
pop
std
imul
mov
loope
adc
inc
out
filds
mov
lods
pushf
fildl
mov
arpl
insb
xorb
pop
outsb
cmp
stc
loopne
jae
and
test
cmp
cli
ljmp
insl
test
inc
xor
sub
xchg
mov
or
les
mov
fisttpl
enter
pop
jne
push
or
or
and
pop
bsr
ficomps
xchg
mov
jg
jmp
sub
xor
ret
ret
pop
mov
daa
scas
sub
cmp
or
jecxz
jae
jg
push
add
pop
inc
je
cmp
mov
int3
jp
cmc
pop
idiv
lahf
push
sbb
fsubl
push
mov
jmp
in
outsl
jmp
push
incl
out
loopne
cli
jae
cmp
outsl
test
and
sbb
adc
and
push
and
inc
cmp
sti
jmp
in
mov
dec
sbb
leave
fists
aam
jns
push
iret
mov
sbb
stos
cmpsl
push
outsb
adc
jae
adc
mov
fs
test
sahf
fsubrl
fs
mov
dec
cld
push
lods
ja
in
cmp
cmp
out
aas
lret
loopne
cmp
hlt
push
insl
mov
or
pop
je
lret
cltd
xchg
jmp
xchg
dec
out
les
sarb
xchg
insb
or
cld
push
mov
dec
js
pop
or
rorb
push
pcmpeqd
shrb
repnz
push
sub
adc
aas
and
jecxz
test
imul
cmpsl
jg
cmp
icebp
mov
imul
and
pop
adc
mov
stos
add
gs
xor
lock
and
rclb
in
sbb
hlt
into
sub
je
aad
scas
popf
fwait
shrb
lock
adc
xor
push
aad
iret
loopne
cli
test
dec
into
outsb
mov
lret
sti
or
fdivr
mov
lock
pop
addr16
ds
sub
jge
loop
cltd
sub
add
adc
pop
cmp
sarl
fbstp
in
aam
push
std
lcall
mov
adc
xchg
mov
mov
data16
xchg
cmpl
pop
scas
push
fs
mov
repz
lds
int
jge
lcall
inc
rorb
jne
int3
lret
je
cwtl
scas
outsl
arpl
decl
call
jb
xor
loope
shlb
mov
das
adc
xor
sub
lret
lahf
mov
clc
xchg
popf
sbb
data16
nop
dec
test
leave
and
and
sbb
in
mov
and
jno
lret
or
sub
mov
scas
sbb
sub
out
mov
pop
test
inc
xchg
test
in
lods
push
mov
fwait
and
ds
fs
repnz
scas
jp
test
pop
shl
jo
xchg
cmp
in
mov
pushl
arpl
and
mov
jns
mov
adc
mov
lahf
movb
mov
imulb
dec
notb
mov
dec
pusha
stos
test
popf
mov
repnz
sti
lods
push
xchg
loope
imul
fcoml
push
rcrl
int3
popf
fimuls
mov
cmpsb
adc
rorl
xchg
jl
std
aad
xchg
imul
sub
and
imul
push
lret
es
ret
xlat
pop
pop
pushl
mov
inc
mov
xchg
cmp
sub
add
mov
jns
aad
jb
mov
xorl
rcll
dec
mov
fdivs
sub
cmp
mov
pop
sub
cmp
adc
and
xor
jg
or
mov
lds
mov
rorb
into
cmp
sub
pop
mov
fldt
jns
fisubrl
adc
decb
aad
in
push
or
xchg
jl
in
stos
push
js
cmp
jl
int
stc
repz
lock
ret
pusha
hlt
mov
sti
faddl
cmp
adc
and
xor
stos
stos
jg
sub
xor
inc
jle
mov
fstl
add
xchg
jmp
cltd
inc
out
dec
add
jmp
mov
stos
inc
jbe
cmp
out
lea
xor
jp
xchg
fisttpl
pusha
jbe
xchg
add
push
imul
or
cs
and
and
push
mov
adc
in
cld
adc
gs
negb
mov
mov
sti
adc
adc
cmp
jle
cmp
sbb
ficoml
sar
push
mov
outsb
xor
xor
les
adc
and
mov
pop
imul
test
ret
popf
je
scas
insl
dec
sbb
inc
call
sub
or
popa
outsl
lods
xor
inc
pop
add
shll
fisubrs
pop
and
jg
mov
xchg
push
fcompl
push
xor
or
bound
dec
movsb
cmp
stos
xchg
xor
push
ret
mov
stc
je
mov
xchg
negl
lock
push
sar
sub
aaa
dec
filds
in
cmp
xor
mov
repnz
jb
jnp
and
imul
jb
pop
xchg
iret
sbb
popf
pop
add
das
pushf
in
mov
lds
cmp
sbb
jo
out
test
dec
dec
popf
mov
jmp
xor
cmp
and
das
cmp
jl
mov
dec
mov
ret
pop
sahf
xorl
adc
cwtl
inc
mov
icebp
scas
jbe
add
mov
sbb
sbbb
icebp
jns
cmp
out
mov
addr16
jl
sbb
xchg
cltd
add
sbbl
sbb
incl
jne
mov
and
out
in
push
adc
sub
inc
mov
out
shll
into
jmp
jle
cltd
or
pop
enter
mov
xchg
je
adc
inc
xchg
icebp
sbb
cltd
cld
xchg
mov
adc
push
rdmsr
into
jecxz
xor
js
ret
sbb
xor
adc
scas
fidivrs
push
aad
outsb
jnp
xor
inc
jp
inc
cld
add
mov
sbb
cmpsl
fwait
add
inc
jg
adc
arpl
push
add
mov
mov
xchg
js
pop
cli
inc
inc
add
cld
pop
push
in
mov
xchg
mov
decl
fstpt
sub
mov
mov
pusha
xor
and
xor
mov
cmp
nop
push
mov
int3
packssdw
in
dec
in
std
mov
pop
jne
mov
ss
loop
filds
mov
xchg
sahf
mov
xor
inc
in
xchg
xchg
and
adc
pop
pop
int3
nop
mov
mull
fistps
sub
insb
loop
jns
ret
inc
dec
les
sti
xchg
pop
jo
xor
jne
ja
inc
inc
adc
ret
mull
shl
sub
sub
add
xchg
daa
roll
xor
push
push
fmull
mul
and
cmp
out
cmp
cwtl
ljmp
daa
mov
adc
cmp
adc
sub
sbb
ds
adc
orl
jne
out
pop
pop
mov
mov
cmpsb
test
mov
test
stos
pop
jle
shr
lods
mov
mov
outsb
cmpsb
jnp
stc
xor
shrb
mov
repz
loopne
cmp
xor
insb
push
leave
inc
das
push
cmp
or
repz
repz
outsl
cmp
loop
stos
and
outsl
xchg
stos
inc
adc
sbb
dec
xchg
sbb
ret
push
test
jae
cmpsb
cmp
xchg
jnp
jmp
mov
arpl
int
push
xor
mov
cmp
jg
add
stos
roll
add
jno
inc
loop
stos
pop
into
push
and
mov
inc
mov
stos
rcrb
ja
pop
push
mov
mov
adc
mov
lcall
lds
pop
xchg
lea
pop
or
pop
shlb
in
xor
mov
loop
add
loop
in
das
insl
mov
ret
mov
call
inc
int
fs
cmp
repnz
jnp
popf
arpl
mov
mov
jge
mov
out
cli
stc
test
stos
icebp
shrl
push
mov
or
and
and
movl
in
out
lock
cmp
cld
in
test
loope
sbb
xchg
mov
ret
adc
inc
mov
lock
pop
mov
cltd
sbb
cmp
cmp
pop
fcmovnu
or
and
insb
addl
xchg
add
pop
cmp
cld
andb
aam
sbb
mov
push
add
jns
in
stos
cwtl
pop
subl
sti
fld
pop
sarb
dec
or
dec
pop
or
mov
addr16
jmp
add
sub
mov
pop
cmc
jp
inc
sti
jge
pop
stos
push
cld
test
mov
vdivpd
cmp
mov
mov
aas
imul
inc
loope,pn
adc
add
adc
push
pop
push
mov
cmp
test
ret
das
mov
int3
loope
mov
adc
xor
mov
hlt
lods
movsb
mov
or
xchg
xorb
mov
cmpsb
inc
das
das
es
adc
xorb
jle
enter
in
js
test
jl
push
test
lcall
in
mov
cmp
insl
ficompl
pop
scas
in
or
cmp
ss
fisubl
add
or
lret
test
mov
cmp
jecxz
and
insb
fsubrl
inc
mov
fcomp
dec
or
cs
out
pushf
das
and
shll
adc
jmp
push
mov
or
xchg
les
int3
sub
add
iret
jmp
lret
jns
cmp
pop
enter
xor
dec
call
ss
imulb
pop
xor
movsb
jmp
pop
fstl
dec
icebp
cmpsl
jbe
out
sahf
fisttpl
inc
gs
sbb
lock
les
mov
jnp
mov
dec
leave
jb
cmp
adc
outsb
jmp
mov
ds
or
mov
mov
loop
pop
cmp
push
rolb
loopne
push
mov
push
jge
jge
dec
je,pt
push
cmpsb
push
sub
fsubl
cmc
xor
out
inc
movsb
out
jl
and
mov
xchg
push
test
sub
dec
and
sub
stc
mov
or
dec
in
hlt
out
hlt
scas
xchg
aaa
out
in
in
push
push
and
enter
pop
lret
int
adc
cmp
pmaxub
mov
mov
mov
adc
cld
mov
lcall
bound
mov
pop
popf
fnstenv
adc
sbb
les
sub
pop
dec
test
aas
dec
sbb
fistpll
popa
push
daa
pop
xchg
adc
out
add
imul
das
mov
pop
dec
sbb
cmp
popf
ds
add
movsl
xchg
cmp
addr16
adc
cmp
xor
jmp
arpl
inc
aaa
movsb
loope
cli
pop
jns
lret
adc
adc
mov
or
std
aad
pop
je
adc
push
ret
push
fwait
in
popf
dec
pop
movsl
pop
sub
mov
jb
jno
scas
add
jae
sub
fcompl
xor
cltd
mov
mov
dec
or
lock
xchg
in
ret
lahf
jb
add
es
sub
sbb
and
inc
imul
jge
push
sub
pop
pusha
cwtl
int3
pop
stos
iret
cmc
dec
jbe
dec
jp
add
shr
mov
xchg
out
xchg
jp
in
imul
jnp
fists
cld
fs
punpckldq
shlb
xchg
ljmp
bound
outsb
out
iret
repnz
arpl
out
out
pop
add
fwait
pop
push
bound
pop
mov
and
lret
inc
push
pusha
icebp
fbld
sub
into
fcmovu
pop
scas
pop
sbb
test
push
xchg
jne
xor
stos
xchg
lock
jae
sub
jnp
push
push
sub
inc
sbb
lock
ljmp
xor
jbe
push
pusha
sbb
movsb
sbb
jge
mov
bound
loopne
cmp
and
push
dec
je
mov
cmc
cltd
shlb
shl
mov
out
fwait
and
fidivl
mov
sbb
mov
lock
sahf
mov
lds
bound
mov
test
in
les
or
mov
mov
std
add
xchg
or
inc
mov
andl
and
outsb
jne
cmp
clc
pop
lgs
sbb
jmp
outsb
ds
fwait
adcb
andb
sbb
pop
sbb
ret
rorl
dec
pand
icebp
mov
sbb
add
mov
fdivrs
popa
mov
aaa
pop
ss
dec
data16
pop
push
test
scas
gs
pop
jnp
inc
mov
cmp
inc
sarb
mov
icebp
mov
xchg
fcomps
mov
inc
xchg
pop
mov
loope
cmp
es
xor
pop
adc
gs
dec
xchg
ret
sub
popa
mov
lods
xchg
pop
and
adc
pop
test
inc
add
ret
jno,pt
lcall
lea
cmp
and
sub
adc
imul
sub
inc
sarb
pop
divb
mov
repz
mov
jbe
les
push
sbb
in
mov
lods
cld
das
loop
jmp
mov
outsb
imulb
jne
mov
loop
daa
mov
sahf
pushf
fistpl
mov
push
inc
sub
pop
fdivrl
cld
loop
out
aas
int3
rcl
push
jg
movsl
sbb
ljmp
lret
adc
movsl
pop
jmp
xor
rorl
add
dec
nop
pusha
ror
clc
fisubrl
subl
inc
iret
xor
fisttpll
call
xchg
fnsave
jge
out
sub
dec
mov
fwait
mov
das
mov
ds
out
lea
aad
jge
int
aas
add
nop
hlt
xor
popf
pop
lea
lret
in
xchg
cmp
imul
fcompl
and
in
loopne
sub
inc
stc
cwtl
xchg
in
sub
pop
sarb
pusha
xchg
stc
out
push
shrb
sbb
jae
cmpsb
cmp
sub
jge
adc
es
insl
push
lock
rolb
xchg
into
daa
add
mov
insl
lds
mov
jmp
fimull
xchg
shll
mov
inc
xor
xchg
test
movsb
mov
aas
mov
movsb
and
xlat
jl
shlb
mov
xor
dec
pop
fdivrl
fwait
or
pop
sar
cmc
jg
sahf
out
mov
pop
pop
mov
insb
cs
xor
ss
mov
ljmp
in
push
pusha
and
jnp
xor
add
lret
xor
lahf
xchg
or
lret
fisubl
and
sbb
iret
mov
outsl
and
cwtl
lret
cld
or
fsubrl
out
mov
xor
push
sub
dec
sub
push
pop
cmpsb
mov
cmp
mov
dec
cmp
sub
push
jp
inc
shl
pop
xchg
adc
mov
sbb
imul
test
add
and
cltd
xchg
inc
dec
test
xchg
xor
popa
js
xchg
or
aas
fisubrs
out
ficompl
fnsave
mov
mov
cmp
dec
pop
push
pusha
lret
xchg
pop
call
jmp
jns
mov
les
testb
xchg
dec
lret
pop
js
or
jo
jb
add
push
call
xchg
icebp
aad
jae
lea
and
scas
mov
pop
or
sti
ljmp
sbb
add
mov
xchg
nop
lods
mov
dec
sahf
jge
push
gs
push
cmp
pusha
popa
sahf
sti
pop
mov
lea
bound
xorb
push
mov
xchg
dec
in
push
push
add
dec
sub
bound
dec
fisubrl
jge
push
xor
mov
cmp
ss
add
mov
push
sbb
adcb
jmp
xchg
orb
jecxz
cmp
jns
dec
lcall
push
popa
js
pop
inc
mov
mov
pop
js
push
mov
push
mov
ss
lss
xlat
and
mov
xor
fcmovnbe
xchg
mul
sahf
nop
sbb
inc
cmp
jg
cmp
xor
add
aam
mov
mov
cmp
and
cmp
jae
jns
subb
icebp
jno
lods
stos
insl
hlt
add
mov
xlat
jns
ret
lock
and
dec
in
pop
push
test
imul
pop
and
iret
xchg
jno
mov
inc
call
lds
mov
fsubrp
frstor
jns,pt
pop
inc
aaa
repnz
sbb
jns
or
outsb
push
repz
inc
fcmove
adc
nop
and
repnz
cmpl
ds
into
xchg
cmpsl
mov
push
mov
pusha
sbb
fdivr
sti
cmp
mov
dec
cmpsl
stos
or
shll
lods
test
mov
shl
out
lret
rclb
cs
hlt
and
cmc
lock
jl
jg
out
pop
out
mov
cmc
and
jle
mov
jp
mov
out
stos
xlat
dec
add
push
rcl
movsb
adc
or
adc
fs
pop
or
push
leave
inc
mov
mov
insb
leave
and
sub
std
push
push
dec
jle
sbb
mov
mov
sbb
les
mov
and
sahf
stos
push
mov
mov
bound
imul
mov
loopne
xor
push
jp
xchg
and
dec
sub
in
test
repz
adc
repnz
sbb
jmp
stos
cmpsb
xchg
or
jl
or
test
add
ja
cwtl
mov
push
sub
sbb
sub
pop
lcall
dec
mov
cmp
cmp
mov
xor
sub
sbb
push
inc
movsb
and
dec
loopne
lds
aaa
out
mov
test
fwait
mov
sbb
fs
repnz
test
mov
adcb
out
rclb
lret
das
insb
faddl
nopl
xchg
mov
into
push
or
sub
fiadds
vpmulhrsw
test
outsb
add
imul
es
test
movsb
clc
pop
mov
mov
xorl
and
mov
push
cmp
sbb
fisubrl
xor
pusha
pop
ficoms
sbb
loopne
shrl
cmp
sbb
mov
jo
mov
fdivrp
sub
cmp
mov
imul
xor
mull
hlt
and
cld
sub
iret
out
xchg
and
pop
in
and
icebp
iret
dec
or
cs
hlt
fstl
inc
push
hlt
lcall
mov
sub
lcall
mov
es
or
or
mov
fs
iret
adc
aam
add
jnp
xchg
push
lcall
adc
cltd
loopne
jo
add
faddl
xor
mov
repnz
fcomi
push
push
mov
mov
out
mov
mov
in
pop
cwtl
call
jo
mov
push
sub
or
rcrl
push
dec
cmp
push
adc
mov
cld
inc
pop
add
dec
dec
add
xchg
popl
lock
mov
xchg
fcomp
out
jl
into
jecxz
iret
clc
push
cmc
test
fsubs
push
push
stos
cwtl
cmpsl
push
or
into
mov
and
sbb
ja
jg
pop
popf
ds
push
ret
sub
ja
add
loope
gs
int
imul
test
les
not
lods
movsb
fisttps
sbb
or
cmpl
jmp
stos
fdivrp
add
fwait
mov
jb
and
fiadds
ds
mov
inc
sbb
clc
add
adc
mov
enter
and
adc
cmpsb
subb
push
js
adc
rorb
and
jne
lcall
jbe
mov
pusha
sub
cmpsb
movsb
xchg
jecxz
jp
and
inc
popf
mov
jmp
xor
cli
cwtl
ret
mov
cmp
rcrb
add
stos
test
out
sub
add
fs
movsl
cmp
cld
movsl
jl
test
rcrb
pop
jae
cwtl
ja
aad
mov
es
and
jnp
aam
xchg
roll
orl
pop
and
les
lods
scas
mov
mov
pushf
cmc
cmp
inc
sahf
mov
ficoms
add
out
xchg
xchg
imul
push
cmp
arpl
jle
and
out
stos
push
lock
xor
dec
mov
add
pop
cmpsb
jne
aam
mov
inc
scas
and
mov
pop
pop
sub
in
cmpsb
dec
arpl
inc
ret
push
pop
lock
xchg
outsl
pop
ficoms
xor
cmc
or
mov
ret
fistpl
gs
ficoml
sbb
pushf
fldpi
mov
scas
out
mov
lds
hlt
jns
sbb
aas
cmp
xchg
pop
loopne
push
pushf
sub
pop
mov
cwtl
aaa
bound
cwtl
pop
loop
dec
or
insb
jb
cmp
out
cmpsl
into
mov
les
imul
repnz
stos
repz
int3
inc
in
fisubl
aaa
in
out
lcall
out
jns
add
jecxz
xchg
mov
sti
cmp
pop
or
push
call
dec
gs
push
inc
dec
xchg
lds
pop
push
popf
pusha
mov
add
dec
repz
sbbb
and
insb
iret
mov
call
nop
fisubrs
push
mov
push
xchg
es
mov
xchg
in
sbb
sarl
das
push
ds
pop
dec
out
out
loop
mov
or
dec
sub
imul
jb
fsubs
gs
sti
outsl
mov
sub
jmp
cmp
nop
test
fwait
adc
hlt
add
fcmovu
or
inc
sahf
stos
mov
rcll
out
adc
push
pop
fdivs
or
out
idiv
xchg
fldcw
fdivrp
jne
pop
stc
nop
hlt
adc
subl
test
ret
sbb
mov
mov
mov
push
and
dec
lcall
jecxz
jbe
pop
jecxz
cmpsb
cmp
sar
pop
mov
aam
popf
pop
sbb
push
lret
pop
cwtl
xlat
lods
popa
push
cli
testb
pusha
sbb
clc
popa
out
lahf
loopne
ret
cwtl
out
push
loope
into
in
aas
leave
into
in
lret
or
push
inc
popf
mov
cs
adc
pop
sub
push
cmp
cltd
leave
ja
movsb
aaa
mov
sbb
call
les
sbb
xchg
lahf
pushf
pop
lods
pusha
xlat
pop
pop
and
inc
mov
arpl
and
xchg
cwtl
jbe
mov
xor
sub
mov
jecxz
pop
dec
fs
pop
fwait
jo
pusha
popa
and
mov
fbstp
xor
push
mov
rcll
mov
mov
jae,pn
and
lock
push
aaa
orl
lret
xchg
xchg
adc
in
xchg
shll
fs
mov
or
jmp
mov
xor
xor
fsts
or
lahf
and
xchg
or
xchg
jmp
cmp
fmuls
sub
popl
mov
push
pop
fldl
pop
sbbb
hlt
pushf
adc
cmpsb
sbb
xor
pop
push
adc
mov
cmp
xlat
lret
dec
ret
sub
inc
stos
test
lahf
mov
icebp
test
fdivp
dec
pop
loop
jnp
pusha
ljmp
int
inc
rol
stc
push
movsb
xchg
ret
or
mov
jmp
test
stos
pop
mov
xchg
pop
pop
adc
sbb
dec
pop
jb
int
pushf
push
jo
inc
jecxz
add
lahf
adc
icebp
adc
xor
add
xchg
push
inc
inc
aad
push
pop
xor
adc
sahf
jb
lret
xbegin
in
leave
icebp
xchg
out
or
out
shll
jge
mov
or
shrl
rol
les
xor
mov
setle
mov
and
sbb
add
stc
mov
dec
movsb
sbb
in
subl
fucomi
mov
fists
jp
inc
add
arpl
ret
ret
test
sbb
fwait
mov
dec
scas
or
sti
cmp
or
pcmpgtd
sbb
xor
aam
xchg
sbb
mov
outsl
dec
jl
cmpsb
hlt
add
xchg
mov
movsb
mov
adc
jbe
mov
inc
pushf
test
rcrb
pop
fldl
loop
leave
push
mov
f2xm1
push
shl
mov
mov
outsb
adc
jo
das
push
jg
sbb
inc
ds
jmp
fstl
xlat
and
pop
jns
inc
push
fisttps
daa
jno
mov
out
lods
int
fwait
sbb
push
inc
xchg
jno
lahf
or
lods
sbb
or
jnp
xchg
addr16
inc
inc
repz
lahf
incb
push
test
fs
in
js
add
xlat
mov
enter
push
into
stos
jge
lods
fcoml
dec
cmp
xchg
jl
xchg
sub
int
sub
dec
mov
mov
inc
jge
mov
jle
add
fidivl
jo
push
mov
cmp
dec
enter
ficoml
or
lds
lock
int
push
jecxz
pop
mov
xchg
mov
sub
movsb
les
dec
xor
sub
idivb
xchg
mov
cmp
ror
das
outsl
jge
inc
mov
add
out
pop
repnz
inc
jns
enter
xchg
aad
fbstp
push
mov
cmp
sub
mov
cmovs
mov
jmp
jp
jns
and
out
insb
mov
xchg
mov
sti
push
sub
jle
fisttpl
js
clc
es
es
rcl
dec
leave
scas
sbb
cmpsb
lds
rorb
cmpsb
push
xor
dec
stos
cmp
dec
idivb
popa
nop
push
stc
jl
xlat
pop
icebp
test
imul
loopne
lods
cmp
loopne
cwtl
aad
add
jle
mov
or
cmp
imul
lods
push
and
mov
jno
dec
ja
xchg
dec
mov
test
jecxz
loopne
lods
mov
rclb
mov
and
pop
ds
add
adc
test
mov
notb
cmp
fldcw
imul
out
jne
cmpsl
loopne
out
mov
xchg
call
mov
mov
inc
scas
int3
push
push
lods
lock
mov
sahf
adc
jle
lcall
dec
sbb
pop
imul
fisttpll
js
test
ret
mov
pop
jg
push
js
jns
sub
lea
cmpsl
push
push
enter
popf
and
fwait
ret
mov
push
or
add
adc
push
out
imul
pushf
dec
mov
arpl
leave
cmp
adc
ret
or
add
cld
mov
xor
in
in
or
stos
gs
cld
into
push
xor
sarb
mov
fisubrs
insl
push
sti
test
pop
sbb
insb
mov
and
fwait
cmp
push
mov
out
loope
inc
outsl
jecxz
dec
les
mov
call
mov
push
loopne
mov
insl
das
decb
cmp
test
stc
out
add
sub
or
das
xor
loop
sub
divb
xchg
mov
cmp
nop
adc
xor
daa
jmp
jae
stc
adc
adc
je
jns
imul
das
pusha
outsl
scas
outsl
xchg
rolb
pop
inc
loope
lret
xor
and
and
pop
pop
and
cltd
add
and
jge
sbb
dec
ss
into
pop
mov
roll
daa
pop
add
xor
sbb
inc
cmp
xchg
inc
inc
jmp
es
popf
insb
xchg
mov
mov
cmp
fdiv
lret
mov
xlat
imul
clc
and
idivb
adcb
outsl
stos
sti
jnp
frstor
inc
sub
repnz
rcrb
in
add
hlt
sbb
lds
out
sbb
cmp
lock
mov
fildl
push
in
pop
xor
inc
pusha
mov
sbb
add
dec
push
pop
push
mov
dec
jo
xor
or
push
sbb
shll
cmc
and
inc
scas
sub
mov
sti
jle
push
push
bound
cmc
enter
addl
int3
lea
insl
ret
sti
mov
adc
mov
mov
rorb
fsub
fsubs
stos
mov
jo
sub
test
push
or
adc
nop
and
ljmp
movsb
in
xchg
leave
loope
sahf
in
sub
and
fcoml
mov
fldl
aad
pop
sub
dec
dec
jecxz
test
dec
aas
paddsb
xorl
pop
adc
cs
in
out
cli
sub
jmp
mov
pop
push
ljmp
jnp
adc
int
sahf
mov
add
cwtl
aam
inc
push
pop
xorb
stos
mov
sbb
mov
jnp
imul
and
pop
stos
xor
out
inc
mov
xchg
xchg
lret
out
cmp
sbb
pop
inc
cltd
insl
add
inc
push
mov
push
int3
les
pop
add
jnp
into
push
mov
cmp
into
fistl
nop
cmpb
lods
cmp
dec
rolb
pop
shrl
adc
arpl
xchg
mov
push
sahf
sti
dec
andb
or
movsl
rcrb
test
icebp
arpl
xor
sub
das
sbb
loopne
cli
mov
mov
add
sub
jge
jmp
je
push
mov
shll
inc
fnstcw
jecxz
mov
dec
nop
inc
add
bound
jne
bound
xchg
lcall
mov
jg
repz
adc
punpcklwd
jo
sahf
pop
scas
je
push
dec
cmp
test
jge
push
sub
mov
sub
test
out
stos
je
mov
fcmovnu
mov
lcall
cld
ljmp
dec
pop
sub
mov
movsl
js
cmp
add
imull
xor
loop
mov
fs
mov
mov
ret
arpl
sub
mov
mov
inc
test
iret
lahf
int
sbb
xchg
pop
incb
aam
ds
mov
xor
loop
xor
std
dec
enter
ret
xchg
mov
je
mov
sbb
stos
mov
nop
sbb
insb
mov
mov
outsl
and
push
shl
movsb
fst
mov
jg
xor
imul
bound
push
shrb
adcl
cs
gs
push
push
jmp
adc
sahf
gs
js
mov
adc
cmp
dec
clc
jecxz
xchg
add
inc
test
insl
and
cs
in
adc
xchg
in
inc
movsl
xchg
mov
jb
cld
and
ficoms
sub
jg
pop
mov
jbe
or
popf
sub
ficomps
gs
sbb
mov
incl
lret
stc
in
inc
and
or
adc
mov
stos
pop
fs
xor
jl
inc
loopne,pt
test
in
addl
xor
call
insb
mov
xor
push
mov
les
arpl
popa
outsb
sbb
cltd
sub
nop
mov
xor
pop
xchg
pop
loopne
mov
push
xchg
lcall
push
inc
sub
cli
cld
mov
stos
push
test
fcoml
push
sbb
mov
std
adc
mov
add
mov
insb
adc
fs
push
xchg
loope
std
hlt
outsb
imul
mov
sub
insb
adc
push
xorl
inc
sub
pop
xchg
fsts
ret
mov
sub
jl
daa
xchg
lret
popa
add
rorb
lret
orb
xchg
outsb
and
xlat
cmp
loop
cmp
push
mov
adc
jbe
inc
ljmp
mov
mov
and
adc
aam
pop
ss
nop
lds
jb
addr16
cmc
inc
push
jno
pop
call
icebp
aaa
repz
and
sub
mov
outsb
daa
xchg
stc
mov
out
and
xor
divl
icebp
clc
roll
out
push
cmp
jno
and
shlb
mov
sahf
ss
xor
stc
popf
lock
push
addr16
jmp
cli
negl
stc
shrl
xchg
loopne
push
movsl
mov
stos
pop
xchg
lea
push
inc
test
enter
mov
popf
add
data16
push
sub
in
xor
data16
scas
mov
xor
scas
out
rcrl
sbb
ja
xor
dec
or
out
mov
or
cmp
cmp
mov
fisubs
cli
cmc
mov
scas
test
loopne
add
ljmp
data16
int3
ss
adc
add
fnstenv
aaa
out
cmpsl
or
push
test
loope
sub
test
inc
mov
loopne
lret
jecxz
aam
pop
int
pop
in
add
imul
cmp
inc
test
mov
push
xchg
sub
fs
add
adc
test
out
les
pop
mulb
sbb
xor
jae
pop
and
xor
lods
push
ret
jnp
jae
data16
sub
jb
push
sbbb
lods
or
sbb
jmp
inc
outsb
or
xor
xor
jne
rol
out
xchg
jg
repz
cmp
push
cld
push
shlb
loope
mov
imul
insb
cli
hlt
dec
dec
lahf
pop
xchg
sbb
std
jge
pop
and
fistpl
adc
or
jmp
sub
sahf
jle
fadds
addl
sub
add
addr16
nop
lcall
loope
jns
xlat
jecxz
fimull
fistpl
dec
mov
stos
dec
mov
mov
repnz
add
loope
lret
cwtl
pop
mov
clc
xchg
push
imul
sbb
jnp
push
enter
push
inc
out
jo
dec
stos
lds
xor
lds
cmpsl
mov
xchg
stos
add
into
mov
cmpl
rcr
das
mov
test
or
movsl
xor
cs
push
cltd
loopne
int
mov
stc
movl
push
dec
shr
aaa
inc
sub
fwait
xor
insb
sbb
xor
int3
inc
inc
mov
stos
ljmp
mov
adc
fstps
or
pop
call
aam
cmp
push
pop
mov
adc
add
roll
push
push
jg
pop
push
cmpb
scas
mov
dec
jle
fdivrs
push
scas
shlb
aaa
cmp
xchg
imul
mov
sbb
into
jb
adc
mov
mov
jo
or
enter
xchg
mov
mov
and
mov
jnp
jmp
popf
mov
sbb
pop
xor
in
or
clc
cli
fwait
orl
ret
push
mov
xor
and
ljmp
pop
mov
scas
xor
cmp
pop
ljmp
pop
iret
mov
in
mov
lahf
mov
push
push
xor
in
pop
cltd
push
mov
into
fchs
sbb
inc
leave
push
stos
push
jmp
xor
dec
dec
cmp
or
cmp
loope
fidivl
out
push
fbld
pop
push
test
fadds
mov
pop
mov
xor
cmpl
xor
cltd
xor
pop
mov
repnz
sub
clc
lret
lret
clc
lods
fs
sbb
inc
mov
out
setne
inc
jmp
dec
jl
push
loop
cwtl
push
jae
xor
mov
imul
dec
stc
notb
mov
sbb
fisttpl
mov
repz
data16
jl
xor
xlat
mov
testb
jmp
arpl
into
out
bound
fcompl
sbb
jnp
dec
imul
daa
les
mov
hlt
or
mov
adc
and
or
mov
cs
sub
scas
insl
xchg
or
jmp
fbld
mov
xor
xchg
gs
addb
pop
mov
inc
mov
xlat
inc
mov
shlb
add
jecxz
and
dec
aas
cld
ret
push
xchg
pop
jp
popa
jne
cmpsl
adc
dec
mov
adc
mov
pop
insb
pusha
pop
cmpsb
pop
or
arpl
jl
hlt
movsb
neg
lea
and
mov
jp
and
cmp
xchg
fidivrs
jecxz
loope
hlt
xchg
jno
into
arpl
xor
cwtl
imul
subb
arpl
or
push
jge
jg
cmc
cli
cmp
rorl
inc
xor
into
outsl
imul
repnz
cmp
mov
inc
lahf
loopne
sub
stos
xchg
xor
inc
shlb
mov
add
lea
or
mov
rcrl
push
jns
lds
in
cmp
rcr
das
aas
fs
gs
movsl
sahf
enter
clc
push
into
dec
dec
scas
aaa
mov
inc
pushf
jae
jns
add
scas
xlat
fstpl
ja
cmpl
pop
hlt
ja
cld
adc
sub
int
into
xchg
inc
pop
jge
cltd
jbe
jne
fistpl
pop
cltd
insb
inc
outsl
xor
adc
push
sub
out
jno
mov
mov
adc
fimuls
bnd
push
fsub
testl
sti
pusha
lret
test
aam
xorb
fwait
jae
out
sbb
push
or
cmpsl
adc
jl
xor
sbb
sbb
das
stos
cs
setbe
push
xchg
inc
cmp
addl
leave
ljmp
outsb
pop
daa
dec
cld
jo
andl
dec
dec
mov
add
jg
adc
fndisi(8087
inc
shr
jne
mov
push
repz
lock
adc
test
int3
stc
stos
cltd
or
push
in
jmp
mov
js
ds
cmp
testb
fs
push
mulb
mov
sti
sahf
test
pop
rcl
jnp
cmp
incb
popa
repz
lret
sbb
les
sbbb
scas
mov
lock
shrb
xor
and
lcall
pop
push
mov
in
jo
hlt
xchg
add
ret
dec
xor
mov
push
cmp
loopne
add
dec
js
or
aam
adc
cmp
fisubrl
lahf
repz
mov
inc
dec
mov
mov
iret
std
fs
inc
int3
jmp
fwait
lret
jbe
dec
lock
js
jne
inc
je
sub
out
dec
mov
clc
mov
sysret
mov
stos
inc
xor
mov
and
loop
rcr
sbb
dec
lods
and
inc
aas
xor
mov
mov
inc
leave
push
imul
fs
ja
fsubrs
jge
add
inc
dec
adc
dec
loopne
je
xor
test
and
mov
jno
mov
cmp
pop
daa
cmc
nop
bound
insb
testl
sarb
dec
jg
fstpt
lods
inc
push
mov
insb
xchg
jnp
mov
cmp
icebp
jb
ljmp
enter
icebp
aaa
movsb
push
scas
es
xor
test
xor
iret
sub
bnd
rcrb
xchg
mov
jge
mov
jle
arpl
mov
dec
addb
fildll
inc
jle
je
add
dec
mov
or
inc
cmp
sbb
ffree
in
mov
neg
mov
sbb
sub
mov
cmp
push
mov
test
fdivrs
lock
cli
les
or
lahf
fidivrs
decb
mov
xor
mov
out
lcall
cmpsl
and
shrl
jae
jo
or
js
add
mov
add
scas
nop
ficoms
jmp
push
adc
sub
adc
or
das
ds
fyl2x
mov
sbb
and
js
shr
stc
xchg
cmp
mov
xor
fs
movsb
cmpsb
js
sbb
shlb
or
dec
or
push
sub
add
lret
sub
add
xchg
or
mov
out
and
imul
cmp
cmp
xchg
in
std
movsl
lods
inc
and
loope
dec
lahf
cs
insl
mov
test
xor
lcall
adc
jl
movlhps
xor
jecxz
cmpsl
loop
dec
sub
lock
xchg
lret
gs
lods
fs
and
sbb
sbb
sub
sub
sub
push
mov
pop
pushl
adc
divl
shrb
dec
lret
cmp
outsb
sub
xor
or
std
daa
fldcw
push
dec
xor
in
xlat
mov
div
jb
je
popf
test
adc
and
lds
cld
jbe
bound
dec
es
loopne
in
push
jbe
aad
inc
ds
into
stos
imul
insb
sti
add
in
cld
fsubr
daa
movsl
xchg
mov
movsb
or
gs
ret
popf
pop
jbe
loop
sub
int
mov
daa
adc
dec
jge
inc
imul
mov
sbb
mov
out
sbb
sub
gs
ljmp
sahf
paddq
pushf
std
xchg
and
sbb
shrb
jp
add
out
test
jb
and
mov
push
mov
ds
rcrl
and
mov
fwait
jg
ss
addb
sub
pop
addl
data16
push
mov
cmpsb
aam
pop
pop
adc
jne
dec
mov
mov
repnz
or
shll
les
pop
push
test
xchg
add
jb
ror
lret
push
lock
lds
lds
dec
add
vdivsd
jmp
out
pop
je
fdivrl
out
std
das
fs
les
or
out
call
nop
and
jbe
pop
in
mov
mov
sub
fwait
push
xchg
pop
pop
dec
dec
cwtl
int3
inc
test
inc
pop
pop
add
push
jns
clc
adc
jecxz
pop
add
cmpsl
jl
dec
rcl
jo
mov
pop
mov
dec
lret
mov
mov
iretw
xor
mov
cmp
in
sbbb
fndisi(8087
jbe
dec
scas
mov
loope
fsqrt
cmpl
rorl
mov
push
addr16
addr16
adc
xchg
outsl
ja
fsubs
sub
orl
push
test
nop
push
pop
daa
roll
daa
test
pop
fistps
xchg
or
or
xor
out
jbe
leave
cmpsb
repz
imul
mov
inc
pop
cmp
idivb
dec
sub
push
cmp
lret
in
imul
mov
sub
sub
int
cmpl
mov
fucomi
out
push
push
mov
inc
stos
insl
mov
adc
insb
pop
sbb
add
inc
mov
loope
enter
pop
aam
in
std
sub
xchg
push
imul
imul
inc
rcrl
pop
test
mull
mov
bound
mov
add
pop
sbb
xchg
push
xlat
and
mov
mov
roll
add
push
ja
mov
icebp
adc
cwtl
pop
outsl
add
out
inc
in
imulb
push
sar
cs
mov
mov
mov
push
out
arpl
enter
lea
cwtl
jno
mov
xrelease
mov
imulb
mov
xchg
or
lods
stc
insl
push
adc
ror
jg
clc
fwait
mov
daa
aaa
inc
push
xor
lahf
and
pop
fcmovne
push
scas
xor
mov
push
neg
lret
push
mov
out
mov
dec
pop
je
test
sub
or
dec
pop
out
jne
inc
jecxz
xchg
dec
jns
repz
dec
sbb
les
add
add
xchg
jnp
sbb
aam
add
sbb
sbb
cli
ret
je
or
stos
pop
add
pusha
sub
inc
lock
lret
sbb
xchg
dec
lods
lret
out
gs
inc
iret
hlt
sub
repz
je
mov
mov
sub
xchg
adc
xchg
mov
sarl
pop
mov
sub
xchg
push
jo
xchg
xor
sub
clc
pushf
mov
mov
mov
mov
cmp
rorb
xor
std
mov
cmpsl
mov
aad
fiadds
push
pop
pop
add
stc
out
hlt
scas
lret
aad
je
movsb
jge
insl
add
xor
mov
mov
fmuls
leave
pushf
pop
xchg
inc
push
mov
frstor
inc
scas
repnz
cmp
dec
adc
cs
sub
dec
rclb
cmc
test
add
add
mov
cmc
inc
xchg
int3
sub
push
pop
pop
ret
jb
shrl
out
repz
cmp
gs
and
jp
mov
mov
scas
es
shlb
insb
fldcw
add
lcall
cmpsl
inc
into
or
mov
rolb
mov
shrl
inc
fnstcw
dec
imul
std
pop
pop
xchg
cltd
lcall
mov
pop
mov
add
es
add
or
xor
fnstsw
cmc
cmp
test
sub
inc
cmp
jl
mov
adc
test
sub
mov
addl
nopl
loopne,pn
sub
outsl
mov
push
fisubl
xchg
aam
cmp
scas
cmp
gs
jns
add
mov
stos
mov
cmpsb
jp
dec
fisttpll
ss
xchg
aam
add
jns
dec
out
pop
loope
idivl
or
das
add
cmc
scas
popa
stos
fstpl
sub
adc
divb
repnz
pop
mov
add
sbb
jecxz
pusha
aad
movsl
jb
clc
in
push
in
adc
aad
and
dec
out
aas
sbb
fcmovnb
mov
mov
dec
ja
add
push
or
dec
cmp
lea
jmp
test
jno
mov
scas
adc
ficompl
pop
dec
sti
adc
pushl
repnz
iret
arpl
popf
mov
or
or
or
adc
aaa
das
push
ja
mov
pusha
xchg
jge
add
std
ficompl
cld
divl
repnz
cs
jecxz
adc
into
and
mov
fwait
test
dec
or
movsb
xchg
xchg
loopne
fcoml
fldt
push
aad
int
dec
les
adc
sub
xchg
push
xchg
test
jp
push
fneni(8087
inc
leave
cmpsl
pop
adc
lock
xor
xlat
jno
rcll
sbb
aas
ret
ret
cmp
jb
lahf
inc
ret
lahf
nop
jmp
xchg
dec
pushf
xchg
inc
or
sbb
lods
lcall
mov
dec
clc
out
pop
pusha
cmp
leave
sbb
sub
xor
jbe
mov
pop
pop
shlb
repz
and
lea
insb
push
mov
ret
pop
xchg
ss
addl
jle
mov
mov
ret
outsl
stos
mov
mov
cmp
sub
imul
outsl
stos
or
lret
jns
adcb
rorl
jge
loopne
in
gs
inc
pop
mov
xchg
scas
insb
je
xchg
or
push
addl
pop
test
mov
sub
psubb
lods
jmp
inc
jno
fs
cmp
es
jnp
lret
mov
aad
scas
popf
stc
sahf
inc
jne
scas
cmp
xor
xorb
jns
cmpsl
outsl
nop
inc
sub
hlt
sub
ret
adc
aam
loop
cli
push
movsl
mov
or
divb
mov
mov
jp
ja
push
jge
xchg
xor
addl
test
mov
inc
loope
add
test
sar
pop
mov
fsub
and
pop
xor
aas
pop
ret
clc
icebp
clc
inc
jecxz
out
scas
jno
xor
and
lar
sbb
imul
mov
pop
xchg
sbb
test
and
jmp
adc
cmc
mov
inc
ss
jno
mov
and
imul
xor
jo
sub
sbb
mov
adc
mov
xchg
pop
test
fnstenv
enter
add
js
imul
inc
add
xor
push
lret
jae
dec
adc
lods
loop
and
imull
push
pusha
popa
jg
stos
sbb
int
insb
cli
lcall
and
rcrl
vpshufd
sub
shll
sub
cld
bound
and
mov
or
mov
sahf
clc
xchg
aas
or
shl
push
les
stc
faddp
jns
fcmovbe
cwtl
add
jecxz
ret
in
imul
neg
stos
cmp
popf
adc
mov
leave
mov
sbb
or
cmp
push
mov
fs
pushf
push
pop
cmp
stos
int3
hlt
mov
cmc
cmp
and
adc
sub
xchg
imul
pusha
xor
mov
out
sub
cmpsb
mov
mov
or
lods
mov
inc
scas
xchg
icebp
negl
adc
fxtract
xchg
leave
dec
mov
xchg
mov
mov
push
xlat
add
test
pushl
and
sbb
and
negl
mov
cli
ja
nop
insb
mov
popf
mov
andb
mov
and
imul
cmpsl
pop
cmpsb
inc
stc
pop
mov
jp
xor
ficomps
jecxz
cwtl
jb
xor
scas
ljmp
inc
pop
dec
pushf
mov
or
push
dec
mov
pop
xor
rolb
in
les
mov
jle
pop
xchg
pop
mov
push
out
jl
sub
mov
aad
and
in
jns
loopne
imul
inc
leave
xchg
add
jnp
mov
sbb
ljmp
in
rorb
or
jns
jg
scas
orb
out
xchg
jae
stos
dec
sarb
daa
jne
jg
mov
and
fimuls
insl
nop
jbe
bnd
test
add
test
and
pop
mov
xchg
les
popf
push
cmc
mov
in
xchg
icebp
lods
pop
out
sbb
jno
and
cmpsb
xchg
aam
sarl
xchg
lcall
fnstenv
mov
push
pop
decl
sub
and
jmp
cmc
lods
cmp
adc
mov
dec
jle
int3
cmp
cmp
pop
jne
push
xchg
popa
pop
lods
pop
push
jns
shrb
adc
ss
adc
push
push
or
cmpsb
pmaddwd
push
scas
imul
pop
js
jle
inc
add
cmp
sarl
push
sub
add
cmp
dec
int
and
adc
dec
sbb
negb
icebp
or
dec
jbe
jmp
inc
leave
call
inc
iret
mov
xlat
shll
mov
call
lock
mov
inc
into
in
loopne
scas
push
pop
dec
jbe
hlt
mov
mov
dec
xor
cmp
cmp
adc
andl
out
bound
insl
aas
mov
dec
in
xorb
sub
imul
add
cmp
out
data16
mov
mov
jle
xchg
ss
and
stos
xchg
xchg
xchg
or
sbb
stc
inc
mov
mov
add
lea
push
ret
mov
and
mov
es
ror
mov
xchg
pop
pusha
sbb
push
ds
or
xchg
stc
xchg
cmp
mov
out
aam
xlat
mov
ret
pop
xchg
and
or
test
add
lods
push
loope
push
iret
or
inc
push
repz
inc
mov
xor
adc
daa
ss
xor
adc
inc
xchg
mov
xor
bound
loopne
lcall
insl
in
mov
mov
fistps
enter
mov
testb
stc
push
mov
jp
int3
push
push
loope
xchg
mov
fisubl
bound
out
and
cmc
cmpsb
jb
je
pushf
jp
mov
sbb
je
adc
xor
or
cltd
divl
xor
dec
mov
cs
mov
mov
jg
sarl
xchg
or
add
stc
shll
push
pop
pop
mov
imull
cmc
dec
push
enter
test
mov
dec
adc
les
mov
subb
test
aas
mov
dec
mov
xor
divb
xlat
adcb
pop
out
sbb
mov
inc
pavgw
scas
ret
inc
and
lcall
std
into
and
inc
sbb
popf
mov
cmp
fwait
out
jae
es
jp
sbb
iret
adc
cld
dec
icebp
jae
lods
decb
std
inc
inc
jne
or
fcmove
arpl
cmp
or
fidivrs
xchg
add
and
push
add
xor
fisubrl
push
mov
pop
push
bound
test
push
mov
enter
ds
scas
in
adc
lock
lds
push
scas
pop
jae
cmp
jmp
out
inc
in
rorl
and
outsl
imul
jge
aam
clc
loopne
je
in
lret
sti
jnp
adc
out
lds
xchg
cmp
xlat
pop
mov
xchg
cmpsb
movsl
jno,pn
test
aas
or
sub
shlb
add
xor
into
inc
jl
fmulp
insl
fildl
cmp
xor
stos
cli
jo
jl
xor
sub
idivb
hlt
aam
mov
xor
inc
dec
push
nop
es
insb
xor
xor
cmp
push
shll
int
sbb
rep
mov
repnz
in
imul
ss
inc
xchg
mov
jl
icebp
adc
cmp
pop
lret
sub
movsl
dec
inc
mov
mov
ja
mov
insl
adc
stc
jl
fs
sub
jnp
cmp
push
icebp
push
cld
ljmp
stos
inc
fsubl
add
into
mov
mov
mov
mov
lret
or
dec
jecxz
sbb
inc
add
test
repnz
gs
cltd
fnstsw
leave
or
and
cltd
xor
pop
inc
add
addb
rolb
int
fcmovnu
dec
xchg
cmp
insl
fs
push
orl
icebp
xlat
dec
xchg
movsb
push
xor
inc
rorl
shlb
bnd
fistpl
clc
xor
xor
mov
movsl
out
cltd
and
fidivrl
shlb
jbe
jge
pushf
ljmp
in
mov
nop
in
shrl
add
in
es
xchg
jno
lret
rclb
xchg
aaa
lcall
sahf
fsts
cmpsb
xor
lods
std
shll
leave
ja
rcr
insl
mov
jbe
loope
or
xor
pop
sbb
fnstsw
arpl
or
ret
cmp
push
push
inc
mov
jle
bound
mov
lahf
pop
jecxz
mov
sub
sbb
xchg
push
and
out
sbb
jo
push
scas
int
test
push
xlat
sbb
sar
mov
jne
pop
pop
inc
loop
xchg
mov
jmp
adc
dec
dec
repz
mov
pop
push
mov
pop
push
outsl
and
movsb
adc
mov
sub
fdivrl
adc
add
jecxz
mov
xchg
insb
mov
or
fidivrs
jns
imul
icebp
adc
lret
scas
and
adc
mov
push
mov
mulb
cs
mov
xchg
out
or
push
jns
std
and
dec
out
add
xchg
mov
stos
pop
mov
xchg
test
jne
cmpsb
push
cmp
mov
test
mov
std
inc
scas
jecxz
mov
mov
mov
add
adc
js
aam
imul
sub
cwtl
into
ficomps
adc
cmpb
test
dec
xlat
dec
xchg
out
les
and
das
xor
or
dec
cld
repz
push
faddl
sahf
mov
outsl
or
fistpl
mov
pop
sub
jno
shl
cli
mov
pop
or
popa
inc
call
and
inc
call
out
mov
arpl
or
jae
enter
mov
jecxz
mov
into
imul
sarb
mov
sub
ss
enter
pushf
testl
inc
xchg
subl
incb
ds
inc
inc
or
outsl
mov
pushf
ss
xchg
stc
pop
jns
cmp
pop
outsb
adc
adc
xor
jae
pop
lods
mov
mov
mov
mov
clc
cmc
mov
push
jge
pop
shl
jp
lods
cmp
je
inc
addb
loop
outsb
imul
lret
xchg
fisubrs
cmpsb
cmp
dec
sbb
das
pop
xchg
xchg
roll
add
add
mov
and
cli
push
test
out
popa
lock
push
or
hlt
sbb
push
enter
xlat
jno
cli
jno
test
dec
sbb
cmpsb
rcll
cs
mov
xor
and
add
xor
leave
sbb
jge
xchg
ror
inc
pop
push
stos
orb
jecxz
xchg
ficoml
cld
dec
xor
xchg
pusha
dec
bound
pop
mov
push
adc
arpl
out
jne
push
in
out
insb
out
insl
or
addb
dec
adc
mov
dec
call
iret
aad
into
cmp
imul
lret
bound
negl
cmp
cli
inc
js
dec
add
idivb
loope
jno
dec
mov
stc
xchg
filds
adc
out
push
aas
out
aam
dec
or
add
testl
xor
pop
pusha
adc
shll
std
sbb
mov
mov
movsb
and
jg
and
mov
push
hlt
push
aad
out
sbb
ret
movsb
or
sub
sahf
lock
mov
pop
clc
loop
fnstenv
adc
bound
mov
repnz
fdivl
mov
and
fsubrl
dec
out
xchg
xor
inc
push
push
popa
jns
ret
test
or
lea
fstp
dec
cwtl
icebp
mov
inc
lods
ja
xchg
mov
rorb
bound
ja
mov
adc
fucom
sti
cltd
xchg
out
pop
mov
cmc
cltd
das
or
mov
or
or
adc
xchg
ljmp
inc
xchg
cs
xchg
pop
mov
sub
jno
loopne
add
loop
pushf
lock
xorl
sub
push
bound
lret
xchg
add
pop
push
fcom
jp
popfw
enter
jg
mov
lret
adc
pop
inc
dec
jo
sub
mov
sbb
push
lods
fdivr
jecxz
je
and
mov
leave
push
fsubl
divb
mov
in
out
mov
sbb
test
jo
fmull
js
pop
inc
std
lret
cmc
cmp
jmp
pop
xor
inc
jae
fcmovb
jnp
jno
imul
mov
mov
sbb
push
lea
add
mov
mov
xor
add
addl
aaa
xchg
sub
mov
addr16
jno
dec
fisttpll
fldl
or
mov
push
sbb
pop
loop
mov
pop
jns
out
mov
push
adc
test
mov
push
sahf
inc
push
and
fldenv
das
ljmp
in
and
orb
xor
push
movsb
inc
ret
or
test
jle
inc
lahf
lds
fsubrl
or
or
nop
nop
dec
pop
outsl
mov
mov
or
inc
push
inc
dec
jne
lds
or
or
inc
fwait
bound
and
jecxz
adc
in
stos
jo
mov
fstl
pop
cmpl
xchg
adc
cmc
and
pusha
cmp
iret
cmpsl
or
loopne
mov
jmp
cmp
andl
mov
sub
fistpl
jecxz
cmp
aaa
fiadds
mov
out
bnd
jg
out
inc
jbe
jbe
pop
xchg
je
dec
fsubrl
out
inc
xor
aas
mov
ret
sbb
inc
xchg
add
xor
adc
jl
jne
cmp
mov
dec
adc
shlb
mov
inc
int
xor
pop
movsb
or
sub
xor
inc
mov
fucomi
mov
iret
cmpsl
inc
dec
cmp
jecxz
jno
add
lock
adc
mov
bnd
negl
test
xchg
cmp
out
in
mov
inc
push
jl
out
jge
es
data16
les
sbb
inc
out
or
push
rorb
adc
das
aad
sbb
lods
inc
push
scas
fcoml
mov
ja
push
sbb
loop
in
adc
pop
int
jge
push
push
pop
mov
adc
mov
xchg
out
lds
cmpsb
stos
arpl
jl
sbb
push
nop
addr16
lock
enter
mov
stos
pop
xchg
jl
das
das
test
shrb
fs
lods
in
gs
dec
add
mov
movsl
dec
shrb
js
add
or
inc
pop
hlt
or
sub
xchg
outsb
jne
mov
jge
iret
jns
ss
fbld
rcrl
mov
mov
int3
adc
enter
push
mov
jb
ss
inc
pop
jmp
enter
loopne
negb
xchg
or
xor
jge
dec
sub
rorl
stc
rorb
out
test
stos
fisttps
lds
dec
leave
sbb
mov
push
shlb
xchg
mov
andl
arpl
test
fadd
loopnew
mov
mov
hlt
jno
ljmp
andb
mov
mov
loope
sbb
icebp
aam
sbb
inc
mov
sub
push
js
lret
xor
call
int3
push
cwtl
test
negb
sub
sahf
mov
outsb
std
shlb
movl
jne
movsl
or
fisttpll
sarb
stos
pop
xchg
sarl
insb
adc
sarb
aam
movsb
loopne
jp
add
cmp
fxch
add
lret
lcall
cmp
fldz
jo
cwtl
dec
add
sarb
xor
aas
test
mov
stos
add
or
dec
ret
push
in
daa
fists
out
clc
and
dec
xor
cmp
into
in
push
pop
inc
xor
cmp
lock
jge
es
push
leave
cmp
push
ljmp
aam
in
mov
cld
loope
sbb
in
clc
xchg
sbb
pop
mov
and
mov
jg
outsb
mov
and
dec
stc
xchg
pop
and
and
loopne
jge
mov
push
nop
pop
mov
mov
and
inc
cmp
push
pushf
pop
jo
insl
or
pop
push
xor
popa
fs
pop
je
cmp
pop
fisubrl
xchg
fadd
jl
mov
jnp
jnp
stos
scas
adc
xorb
cs
mov
jbe
cmp
push
adc
or
test
cmp
fnsave
repz
mov
or
clc
rcrl
daa
cmp
adc
cmpsl
cld
push
adc
xor
push
enter
shrb
xor
jns
in
mov
mov
xchg
lea
cs
rcl
bswap
xchg
push
mov
in
js
mov
pushf
stc
jae
lods
lea
adc
stos
shlb
out
outsl
cs
xchg
repnz
inc
jle
jmp
pop
pop
or
cmp
cs
jno
pop
cmp
xor
bound
fdivp
orb
in
fstpl
jp
aad
push
das
shr
cmp
sub
and
ret
call
int3
dec
std
test
lds
in
andl
jle
or
js
xchg
mov
add
js
add
pushf
cltd
lods
sarb
pop
adc
jb
cmc
stc
inc
inc
mov
sbb
push
cmp
xlat
mov
adc
insl
add
movsl
jb
or
je
dec
jge
adcb
pop
pop
push
jmp
push
xchg
dec
test
sar
mov
and
push
jge
jg
xchg
rorb
mov
mov
mov
sahf
jns
dec
sub
jnp
pop
mov
sbb
repz
scas
cmp
adc
mov
xchg
pop
loope
addps
pop
and
inc
mov
addr16
lahf
fidivrl
stc
mov
mov
ljmp
dec
iret
cmp
out
movsl
sbb
sub
scas
or
test
inc
cmp
mov
movb
int
loop
cwtl
inc
push
mov
dec
cld
xor
mov
icebp
and
in
cld
addr16
pop
in
movsb
lahf
pop
push
push
jnp
lcall
cwtl
mov
aas
push
add
dec
xchg
sbb
paddq
imull
sub
and
int
pop
jno
das
mov
dec
rol
es
xchg
or
lcall
mov
xor
aad
ficomps
mov
xchg
aad
leave
imull
push
and
mov
outsb
repz
imull
cwtl
les
or
xor
sub
hlt
push
inc
sub
int3
mov
add
movsb
subb
scas
stc
mov
int3
push
sbb
in
cmp
or
sub
add
jp
out
dec
out
push
xchg
push
mov
fnstcw
inc
xor
cmp
mov
xchg
sbb
rcl
iret
cmpsb
repnz
aaa
xor
ljmp
push
gs
in
or
adc
sub
cmc
call
jns
shrl
jmp
or
test
sbb
les
mov
xchg
xorb
out
cmpsl
push
scas
jo
popa
mov
adc
mov
push
sti
dec
loopne
in
ja
dec
data16
jo
cmp
pop
or
jecxz
rcr
push
fcompl
sub
ficoms
push
jecxz
jo
cs
mov
out
mov
and
inc
inc
pop
mov
lret
ret
dec
jg
lock
pop
imul
xor
rclb
movd
aam
int
mov
mov
or
sbb
in
pop
push
bound
xchg
push
fucomip
mov
jmp
adc
mov
jmp
add
stc
cmp
sbb
sub
pop
cld
cmp
dec
and
add
sbb
sbb
xchg
js
lods
push
or
jae
sub
dec
outsb
jg
sub
add
fs
lock
das
or
xchg
test
into
js
pop
fists
scas
dec
int3
jl
nop
jge
negl
mov
jl
sub
sub
cmp
push
dec
aaa
or
lcall
into
stc
cmovge
lock
adc
sbb
shlb
jne
add
jle
jbe
fucomi
sti
push
std
enter
aas
testl
push
adc
aam
cmp
in
insb
enter
and
cmpsl
add
jnp
pop
addr16
jno
inc
sbb
fisttpl
pop
or
lahf
and
popf
jns
add
pop
add
xor
mov
cmp
lret
faddl
fmul
icebp
add
mov
lahf
and
add
sub
mov
insb
stos
mov
popa
movsl
push
push
stos
es
aad
scas
pop
test
js
push
mov
into
jns
add
frstor
jp
test
or
je
lret
jp
das
push
inc
in
fmulp
mov
call
push
fisubl
and
clc
je
stos
xchg
adc
lahf
in
call
push
orl
je
xchg
jns
xchg
out
push
adc
push
xor
push
xlat
mov
mov
repnz
adc
or
jb
pop
mov
jns
mov
xchg
andb
out
fisttpl
inc
popf
sub
xor
into
mov
inc
decb
fs
and
xchg
das
pusha
loopne
pop
sub
outsl
cmp
shlb
or
xchg
push
movq
test
xor
push
xor
shlb
push
jmp
mov
loope
cwtl
jbe
push
mov
cmovno
nop
cmp
test
ret
jge
pop
xlat
mov
mov
jns
aas
in
lds
mov
xchg
dec
mov
stos
add
pop
adc
ds
push
xor
mulb
pop
add
dec
in
in
sub
shl
int
or
jg
push
xlat
push
loop
mov
cwtl
push
into
xchg
or
scas
lret
pop
idivl
movsb
sbb
pop
jne
dec
cli
dec
aad
push
xchg
push
lods
mov
loope
sbb
lret
roll
enter
pop
repz
mulb
js
lds
and
xlat
fs
pop
or
or
xchg
mov
jp
sub
cmp
jp
sub
dec
or
sti
shlb
aaa
jb
cld
mov
incl
push
hlt
pop
rol
xchg
sub
and
or
dec
jecxz
out
ljmp
das
add
sarl
and
fwait
cmp
jns
adc
repnz
add
cmp
pop
rorl
mov
add
stos
push
fs
aam
mov
and
in
bound
fadds
fidivrl
xchg
imul
insl
inc
pusha
in
jle
ret
js
test
jbe
rcl
paddq
hlt
ljmp
fisttpll
push
mov
jmp
lds
sub
push
out
cltd
dec
lret
push
imul
ja
jae
mov
cwtl
out
mov
movsb
outsl
lcall
jns
adc
cmc
cs
xchg
cli
out
and
or
push
insb
pop
or
push
test
aam
jno
gs
aad
jp
adc
clc
les
xchg
das
js
rcrb
ljmp
cmp
std
loopne
stos
xor
add
dec
jecxz
fwait
test
cmp
lods
test
and
outsl
and
iret
addr16
jb
nop
sub
jle
and
ret
mov
lahf
adc
pop
add
inc
aam
xchg
pop
fcomi
inc
cmp
mov
add
stc
cmpsb
push
dec
pop
xor
xchg
and
fcompl
dec
stos
mov
lret
lock
mov
xor
adc
mov
fdivrs
repz
les
inc
jle
cmp
dec
cmpsb
cmpsl
test
xorb
jae
jge
das
xchg
pop
mov
push
stos
insb
mov
dec
scas
dec
jns
std
enter
cld
cld
movsb
push
cmc
fstl
dec
pop
rcl
fidivs
sub
call
xlat
cmpsl
nop
aam
sub
sahf
repz
add
xor
jg
repnz
movsb
mov
push
scas
xchg
insl
add
mov
cmp
nop
loop
mov
inc
mov
mov
adc
sbbb
adc
adc
pop
pop
fdivl
cmp
les
inc
jmp
decb
jp
adc
dec
inc
mov
imul
inc
push
insl
mov
adc
call
std
in
or
xor
xor
cmp
cmp
hlt
fistpl
dec
fwait
movsb
or
and
xchg
jno
mov
cmp
or
add
and
fcompp
movnti
ficomps
out
f2xm1
push
dec
repnz
inc
popf
enter
cmp
dec
dec
arpl
shlb
sub
rcrl
mov
and
js
leave
jp
stc
shlb
aad
cld
add
push
test
movsl
push
scas
mov
aaa
aam
pop
fwait
stc
xchg
mov
rorb
aas
shll
mov
in
gs
push
pop
xchg
mov
pop
xchg
sub
into
lock
scas
gs
stos
inc
stos
jne
pop
enter
scas
jne
xor
or
shrl
stos
in
jp
xor
push
dec
ja
or
jmp
jbe
cli
or
add
lock
xchg
inc
jbe
fbstp
jbe
in
stos
jns
mov
push
sub
call
pop
or
daa
lahf
sbb
pop
imul
outsb
and
popf
es
loope
sub
xchg
sahf
mov
sahf
testb
mov
pop
aas
jo
inc
sub
ja
sbb
lods
push
inc
inc
mov
lcall
xchg
mov
inc
arpl
or
fimuls
inc
dec
push
add
ds
scas
icebp
jo
add
pop
and
xchg
inc
mov
orl
mov
cmp
and
mov
movb
xor
cmp
jg
into
pop
mov
out
ja
es
call
imul
scas
rcl
jmp
fs
jp
jmp
mov
out
jns
adc
hlt
setle
dec
pop
aas
movsb
cmp
aaa
jo
jne
mov
out
and
xchg
out
cmp
mov
mov
pop
es
hlt
mov
in
in
mov
aaa
mov
ror
xor
add
outsl
repnz
sbb
jge
loopne
jecxz
mov
aaa
xchg
mov
cmpsl
inc
into
cmp
loop
fs
rcl
int3
into
pop
adc
push
pusha
and
cltd
out
in
cmpsb
test
aam
cmpb
or
out
cmpsl
cmp
cld
mov
fdivrs
mov
aam
push
rolb
mov
or
int3
cmc
dec
cmp
inc
mov
cltd
fdivrs
cmp
mov
mov
mov
and
iret
int3
in
jl
jae
jp
add
hlt
test
cld
int3
jb
and
leave
lret
cmp
pop
lcall
mov
test
stc
loop
nop
dec
adc
loope
cmp
imul
insl
or
add
aas
inc
decl
jg
pusha
ret
movsb
lods
gs
mov
aaa
fsubrp
sysexit
pop
push
mov
arpl
mov
lds
andl
lea
push
icebp
adc
sub
sahf
pop
fistl
icebp
mov
mov
or
js
cmp
pop
pop
lahf
mov
sbb
push
push
xor
push
push
mov
test
movsl
lret
push
xchg
jle
jae
inc
into
or
int
aam
aas
hlt
or
ja
or
push
out
sub
imul
jno
sbb
adc
cmp
cmpsb
mov
cmp
push
enter
ds
ret
mov
lahf
xlat
inc
frstor
repnz
mov
push
loop
sub
lcall
adc
ret
add
out
cmp
sub
push
inc
mov
cmp
adcl
sub
mov
sbb
sub
mov
jp
icebp
add
lahf
add
push
incb
jge
sub
popa
mov
cmpsl
jecxz
adc
pop
fs
xchg
insb
addr16
pop
sahf
adc
mov
push
cmpsl
inc
and
dec
fsubl
je
pusha
cmp
daa
pop
mov
dec
sarb
xchg
jl
cmp
sbb
jp
icebp
push
pop
mov
roll
mov
sbb
mov
xchg
add
pop
dec
or
jl
sahf
movsl
mov
cmp
sub
jb
mov
pop
sbb
adc
cmpsb
sub
xchg
lret
and
and
sbb
ret
push
pop
rcrb
push
test
or
mov
mov
out
cs
jns
imul
enter
jnp
adc
subb
push
nop
sarb
mov
rol
mov
and
hlt
xchg
idivb
push
sub
out
sub
mov
push
sub
xor
push
pop
sub
sub
mov
jmp
mov
shrl
inc
pop
mov
or
imul
jl
add
dec
ret
xchg
pop
dec
jne
adc
out
mov
mov
fwait
sarb
iret
xchg
lock
pop
push
dec
int
mov
or
int3
scas
xor
add
xchg
in
pop
cltd
mov
mov
cwtl
xor
xor
push
jne
ds
push
mov
mov
aam
and
jl
inc
pop
and
loope
push
imul
pop
fistl
push
inc
push
outsl
loop
dec
xor
inc
bound
xor
push
mov
shrl
xor
test
push
push
ljmp
pop
xor
dec
out
shrl
pop
jl
sahf
xor
mov
sbb
mov
in
test
push
sub
cs
out
push
push
imul
mov
pop
in
push
pop
xchg
stos
adc
scas
dec
pop
data16
sub
and
mov
shrl
pop
sub
cmc
popa
fidivs
xchg
xchg
cmpsb
mov
fwait
inc
push
cmp
test
icebp
fbld
dec
or
xor
leave
xor
pop
inc
clc
test
mov
lock
or
or
add
aad
jl
shlb
mov
push
xor
mov
push
mov
fdivrs
mov
in
pop
outsl
js
jbe
lods
xor
push
adc
mov
mov
cmp
std
add
sti
jae
xchg
gs
xor
sahf
dec
cmp
cltd
loope
dec
mov
cmpsb
test
or
test
jmp
mov
mov
sbb
movl
addr16
cmp
sub
pop
xor
cmp
adc
outsl
adc
cwtl
mov
jg
data16
loopne
jl
aaa
jmp
popa
jp
sbb
sub
std
roll
pop
xchg
cmc
int3
clc
xchg
inc
inc
sub
jp
xor
mov
loopne
jmp
or
mov
pusha
inc
mov
cmp
mov
int3
repnz
xor
test
fs
popf
push
mov
std
ja
mov
hlt
lahf
jae
xor
add
add
js
sub
stc
dec
xchg
cs
jo
movb
sarb
icebp
mov
adc
pop
xchg
push
negb
dec
mov
xchg
adc
ds
lahf
lcall
aaa
das
cwtl
mov
divb
mov
mov
xchg
fstpt
mov
dec
out
jle
and
add
xchg
ljmp
cmp
sbbb
loope
les
int
imul
pusha
mov
dec
aam
mov
mov
pop
sti
push
int3
notl
test
lcall
xchg
test
inc
sub
adc
movsl
data16
nop
cmp
or
ret
xor
cmpl
mov
int
push
fwait
ret
test
fimull
mov
mov
leave
xor
mov
pop
mov
shll
jbe
xchg
adc
xchg
test
arpl
leave
repz
cmpsl
xor
sub
hlt
push
jne
stos
dec
mov
inc
test
ljmp
add
cmpl
repz
lret
andl
mov
gs
add
push
fwait
insl
sbb
scas
jl
inc
mov
mov
and
nop
xchg
fwait
leave
daa
sahf
int3
mov
mov
sub
xchg
lock
out
xchg
cmpsl
cmp
sbb
or
mov
mov
sbb
xlat
in
lcall
push
cmpsl
dec
mov
add
xor
inc
mov
mov
cli
aad
repz
out
fbstp
sbb
mov
inc
jne
into
xlat
dec
push
or
dec
addr16
push
fwait
xor
push
jle
aaa
jp
adc
push
dec
lret
inc
xor
mov
mov
mov
jnp
mov
add
mov
mov
ficomps
cmp
wrmsr
std
scas
dec
and
leave
push
mov
fistl
fnstenv
jmp
and
xor
adc
pop
sub
outsb
ljmp
aam
bound
push
fs
imul
xor
ljmp
ret
mov
mov
scas
daa
int
cmpsb
push
into
daa
scas
call
inc
dec
dec
mov
pop
ss
and
mov
sarb
ret
add
aad
mov
pop
mov
fdivl
pop
repz
jecxz
push
mov
and
fsts
or
cmp
mov
out
ficoms
mov
or
sub
pop
movsl
xor
int
mov
fwait
push
andb
in
icebp
pop
mov
je
clc
into
dec
push
sbb
rclb
xchg
lret
rolb
stc
data16
xor
loopne
aaa
inc
aad
ja
mov
xchg
add
sahf
test
or
push
pop
push
xor
inc
jns
xor
inc
jmp
or
in
mov
outsb
fwait
add
inc
repz
adc
adc
pop
test
jnp
pop
jge
jle
popf
cvttps2pi
hlt
push
roll
pop
fucompp
push
add
in
adc
lret
mov
cmp
ljmp
cmc
roll
cs
mov
in
mov
shlb
xor
aaa
lods
pop
hlt
inc
add
ret
push
ds
outsb
js
negl
inc
lret
dec
addr16
stos
adc
adc
outsb
jo
sub
dec
jl
inc
sbb
popf
push
mov
fmull
lahf
js
inc
sub
into
inc
aam
inc
inc
mov
mov
scas
aam
fisubrl
unpckhps
mov
sub
inc
cwtl
ret
into
cmp
mov
ficoms
loop
in
inc
pushf
and
test
mov
scas
mov
and
jecxz
arpl
icebp
mov
sub
push
out
dec
out
lea
and
add
andl
jmp
push
stos
fwait
mov
mov
xchg
ror
pop
ret
out
sbb
pop
sbb
jmp
lds
dec
cmp
lea
adc
cmp
adc
mov
dec
dec
push
mov
dec
mov
adc
aaa
sahf
mov
popa
fs
cmpl
xor
aaa
fndisi(8087
lahf
dec
imul
jg
rorl
lock
jp
loop
xchg
push
test
and
mov
jne
ljmp
aas
pop
repnz
roll
fistpll
test
pop
pusha
test
jg
daa
dec
insl
pop
adc
and
call
mul
jle
cmp
sbbl
push
movsb
pop
insb
outsl
mov
outsb
xchg
sub
jns
mov
ljmp
jne
or
sub
pop
insl
into
mov
pop
shrb
fldl
imul
ud2
les
test
daa
dec
jp
je
out
mov
inc
test
mov
jmp
notl
inc
push
leave
sub
xor
icebp
push
mov
and
cmp
aaa
bound
mov
jmp
iret
pop
add
sti
adcb
jo
or
out
adc
pop
dec
dec
pusha
or
xor
push
pop
int
push
cmpsb
push
lds
mov
sbb
leave
test
addr16
adc
fldcw
cli
in
loope
stc
xchg
lock
pop
sub
rclb
dec
sbb
imul
xchg
rorl
and
stc
enter
imul
aaa
repz
xchg
nop
cmp
cmp
and
adc
add
aas
sbb
leave
mov
pop
xchg
cmp
adc
addr16
mov
pusha
hlt
mov
mov
lock
in
aas
shr
roll
mov
pop
pusha
push
pop
fucomp
adc
push
xchg
scas
xchg
cltd
xchg
jnp
addb
pop
mov
inc
cmp
mov
push
xchg
cli
ljmp
inc
jl
cmp
xor
lods
push
inc
mov
cs
xor
adc
mov
test
test
push
scas
out
sahf
push
out
imulb
add
je
mov
loop
push
adc
push
mov
cmp
xchg
cmp
repz
fisubs
std
arpl
sahf
aaa
int3
adc
pop
adc
push
rcl
les
adc
jo
jmp
mov
lahf
lods
pop
push
mov
cltd
sub
cli
mov
add
push
in
loopne
inc
gs
mov
frstor
dec
scas
ja
sahf
mov
sub
out
sbb
mov
pop
out
sbb
rcll
orl
negb
pop
xchg
imul
insb
lar
pop
lcall
int3
lea
adc
cwtl
dec
iret
mov
popf
in
jge
insl
in
outsb
loopne
xchg
rcll
popa
data16
dec
jge
lret
imul
jno
cmp
pop
lods
jb
pop
cwtl
push
cmpsl
roll
stc
pop
dec
aad
stos
cwtl
loop
push
xor
push
out
xchg
xchg
les
faddl
rorb
cli
rol
out
xchg
jnp
xorl
mov
insb
inc
cmp
bound
and
clc
pop
lds
and
pop
lret
fcoms
scas
ret
mov
fdivrp
mov
in
arpl
xchg
push
popa
mov
addb
nop
xchg
jns
jp
bndldx
int
push
sti
jnp
add
test
push
lahf
cs
lret
cld
sub
cmp
sbb
xor
jmp
movsl
repz
mov
mov
pushf
mov
add
add
pop
fcmovnu
lret
nop
testb
mov
sbb
mov
ret
rolb
js
or
push
cmc
movsl
adc
out
add
mov
andb
cmpsl
ja
xchg
cmp
in
push
into
ja
sahf
sub
jae
pop
shlb
int
push
cmp
adc
addr16
repz
cld
xor
mov
mov
test
mov
pop
jb
pop
hlt
pop
into
cmp
xchg
loop
inc
sub
pop
jg
inc
xchg
xchg
fwait
pop
shrb
leave
xchg
inc
int
addr16
xchg
test
insl
icebp
jbe
int
mov
pop
jge
fdivr
in
adc
or
cmpl
inc
sub
push
fucom
push
and
cmp
jg,pn
aas
pop
cmp
int3
loopne
mov
push
push
loope
mov
pop
fnstcw
ficoml
or
cmpsb
dec
cmp
scas
decl
repnz
add
shr
bound
je
out
or
cmpl
xorl
and
mov
adc
fs
or
push
push
adc
jp
add
jg
cmp
aaa
mov
mov
jge
mov
sti
pop
in
stos
js
xchg
fwait
loop
jae,pt
and
mov
xor
imul
ds
inc
mov
mov
push
pop
sub
movsb
xchg
jle
fwait
cmp
mov
dec
in
std
pop
xor
sbb
iret
cmp
dec
sub
add
mov
sub
dec
aad
or
add
repz
inc
jne
mov
xor
fdivrs
or
rsqrtps
mov
mov
adc
sub
jg
je
outsl
out
pop
dec
mov
fstpl
daa
in
pop
stos
loopne
loope
or
sbb
sbb
cli
stos
cmp
rcrb
xchg
shlb
addl
ja
mov
outsl
in
jnp
bound
pop
jno
ss
pinsrw
movsl
cmc
or
inc
mov
adc
lcall
in
adc
insb
je
cmpsb
ljmp
dec
scas
movsb
or
out
andb
sub
xor
inc
iret
jp
adc
cwtl
ret
jge
push
ffreep
or
sub
addr16
push
mov
push
adc
test
push
jo
aam
cmp
jb
inc
std
daa
stos
ret
mov
or
xchg
inc
adc
arpl
out
pop
dec
dec
int
fldz
xorl
test
out
rcrl
mov
xor
or
mov
and
add
push
cmp
mov
sbb
mov
dec
mov
push
shll
in
pop
into
fiadds
fsub
add
leave
popf
dec
inc
mov
mov
sahf
cmp
xchg
lret
mov
xchg
jmp
jnp
dec
aad
ficoml
xchg
mov
sub
sub
repz
fs
out
out
ljmp
xor
repnz
arpl
test
push
fstl
add
cmp
inc
aas
mov
insb
arpl
dec
loopne
adc
jns
inc
outsb
mov
aad
orb
cltd
mov
inc
out
xchg
push
bound
push
adc
mov
into
aaa
dec
mov
sbb
and
je
outsb
repz
movsb
xchg
xchg
insl
ret
adc
mov
fadd
xlat
cltd
test
add
in
cs
popw
daa
gs
fstl
aam
sbb
sarb
cmp
mov
dec
mov
jmp
or
push
xchg
mov
xlat
xchg
dec
mov
aad
sbb
push
lock
mov
lcall
ret
stos
add
fmull
sbb
es
pop
mov
jmp
jp
arpl
jmp
test
lret
fnstsw
cmpb
mov
in
inc
pop
lds
cmp
gs
and
int
xor
jecxz
cmpl
mov
push
sub
mov
dec
mov
iret
mov
aam
addb
and
push
data16
xor
adc
mov
push
jbe
add
outsb
mov
dec
scas
jns
outsb
mov
sbb
scas
pop
repnz
xchg
psrlw
popa
loopne
outsb
lods
push
mov
lods
sub
adcb
and
xor
outsl
push
and
inc
xor
push
inc
add
mov
push
mull
pop
mov
inc
mov
push
int
ja
inc
and
call
inc
push
fld
loope
leave
add
jne
push
sub
cmpsb
lods
jg
call
cmp
jmp
popa
insl
add
and
repnz
inc
sahf
pop
and
popa
insl
pop
sub
shlb
push
push
dec
movsl
test
clc
mov
rclb
ljmp
xchg
or
xor
xor
cmp
push
das
fnstenv
das
cli
push
cli
shll
pusha
jmp
outsl
aad
mov
xchg
or
mov
xor
adc
mov
inc
das
mov
mov
jae
ljmp
out
push
pop
aam
add
cmp
scas
dec
lods
ror
mov
jnp
mov
andl
pop
and
sbb
jge
add
fildll
cld
dec
mov
push
imul
mov
lods
sub
pusha
xchg
rcrl
out
pop
inc
dec
ss
sub
sbb
cmp
iret
fdivr
mov
and
xchg
orb
mov
aam
xchg
mov
shlb
jae
icebp
mov
mov
cltd
ret
mov
inc
pushf
pop
jnp
pop
ret
mov
dec
fwait
aam
outsb
sbb
mov
cwtl
lods
cmpsl
arpl
adc
mov
adcb
lret
andl
cltd
out
sbb
addb
sub
sti
call
stos
mov
loopne
mov
inc
rorl
mov
mov
sub
jl
pop
nop
inc
enter
mov
and
jb
gs
dec
test
xor
stos
iret
rcrl
and
adc
cmp
lods
mov
and
jae
jns
inc
pusha
xor
dec
out
in
pop
js
leave
push
dec
icebp
scas
cmp
or
mov
mov
in
mov
fbld
insl
mov
dec
cs
jne
in
loop
lret
and
push
out
jmp
je
sub
push
and
or
adc
xchg
xchg
push
adc
shl
xchg
xchg
xor
outsb
add
jne
mov
imul
cwtl
andl
cltd
sbb
fs
repz
lahf
dec
call
pop
inc
or
inc
out
pop
add
int
xor
stc
das
jno
into
lret
sub
cmp
dec
out
aaa
mov
ds
jmp
fcompl
xor
inc
add
cltd
cmc
add
popa
or
mov
mov
jb
ja
or
cmovp
sbb
push
std
pop
arpl
and
jne
dec
inc
aas
sarl
xor
mov
fcmovu
and
scas
jmp
pop
lds
inc
imulb
dec
test
cmc
adc
push
addr16
mov
add
push
hlt
lcall
xor
jl
mov
inc
push
push
and
mov
and
and
inc
rep
lock
gs
mov
subb
mov
or
sub
dec
scas
loopne
stos
push
loope
pusha
aas
mov
das
mov
out
xchg
aaa
and
xor
jo
stc
and
outsb
push
jle
test
adc
int3
or
cli
outsb
inc
std
out
pop
rorl
pop
in
xchg
dec
vpackuswb
daa
and
decl
dec
pop
ds
aam
or
stos
int3
xorb
shrl
rol
les
inc
xchg
jl,pt
mov
fmul
in
mov
aas
stos
mov
int3
mov
out
pop
test
stc
mov
add
das
std
ror
sbb
outsl
xorl
sub
sahf
mov
push
adc
and
repnz
mov
scas
sahf
push
repz
loope
fcoms
and
insl
or
xchg
imul
xchg
cmc
adc
xchg
cltd
shlb
pop
inc
mov
jmp
hlt
mov
sahf
movsl
fdivrs
and
loop
xchg
mov
or
enter
ss
mov
icebp
cld
jno
add
cld
and
mov
int3
jno
cmp
aad
fwait
popa
jbe
in
cmp
pusha
push
sbb
shrb
dec
push
sbb
sub
xor
and
and
xor
fidivl
xchg
push
es
mov
push
jmp
mov
lcall
dec
dec
cs
cs
cmpl
cmp
sub
pop
mov
inc
sub
mov
fimull
or
icebp
jo
and
cmp
gs
adc
sbb
cmp
jb
jb
xor
cmp
mov
xchg
shl
pop
cs
add
or
sbb
mov
jge
clc
mov
add
cmp
mov
dec
mov
in
xchg
and
cmpsl
aam
repnz
dec
dec
xlat
fidivs
test
xor
mov
ficoms
push
nop
jae
push
leave
or
jb
jae
mov
jns
cwtl
aas
mov
mov
and
clc
sbb
and
jmp
std
or
xchg
test
jecxz
arpl
ss
push
xor
aaa
add
jmp
cltd
mov
es
xor
daa
cmp
add
movsb
es
jo
out
vunpckhps
dec
in
ret
pop
adc
fnstsw
xchg
aaa
inc
xchg
cltd
sbb
adc
fcoml
xor
cmp
movsb
push
sub
mov
shr
out
dec
call
enter
adc
iret
scas
shl
add
push
sub
jb
sbb
test
cmp
ja
pushf
out
fsts
push
ljmp
adc
out
movsb
gs
mov
out
lock
pop
xchg
pand
add
adcl
sub
lds
xchg
dec
jbe
push
das
sbb
hlt
mov
pop
push
loopne
or
loop
fldt
pop
cmpsl
imul
lcall
notb
cmp
repz
mov
mov
outsb
jne
iret
fwait
outsl
xchg
ficoms
rorb
lods
hlt
inc
sbb
mov
negb
dec
les
sub
mov
xchg
stos
andl
mov
add
sub
push
lea
imul
outsb
pop
push
sbb
or
jecxz
sub
or
push
in
sahf
jle
inc
jl
mov
dec
fsub
xor
cld
test
sub
mov
fnsave
and
movzwl
repz
lods
hlt
and
mov
test
ljmp
mov
fwait
push
pop
jno
cs
mov
les
sub
pusha
cmc
mov
jno
push
icebp
xor
add
loop
mov
mov
dec
mov
sbb
dec
inc
cmc
mov
rclb
outsl
js
inc
fldt
mov
or
fisubrl
adc
aaa
enter
xor
movsb
xor
sbb
enter
into
or
push
and
mov
pop
out
shll
dec
mov
and
adc
mov
out
adc
in
cmp
fbld
rcr
imul
cwtl
mov
push
push
cmpsb
add
cmp
std
xor
lods
jmp
jle
shll
xchg
dec
pusha
icebp
aaa
enter
imul
aad
daa
ret
cwtl
sub
fisttpll
mov
sbb
add
or
push
sbb
sbb
sahf
pop
or
inc
cmpsl
lods
ret
xlat
dec
cmp
cmpl
enter
ds
call
mov
inc
in
jns
adc
pop
test
jmp
fcomps
pop
pop
inc
push
lods
adc
sub
push
cmp
or
shlb
xchg
mov
xor
nop
int
cmp
mov
lds
icebp
lock
dec
adc
mov
cmp
mov
push
push
cmp
int
lahf
add
sbbl
jmp
aad
cmp
repz
lahf
pop
shl
mov
jnp
jp
scas
imul
or
bound
lds
daa
std
adc
dec
xchg
stos
scas
outsl
inc
mov
lret
in
shll
test
fmull
out
lods
iret
jo
xor
pushf
sub
adc
and
notl
pop
sbb
xchg
shrl
call
jo
or
lret
and
stos
xor
jp
mov
into
insb
jns
daa
cmp
cmp
cmp
cmpsb
sbb
sahf
pop
add
add
adc
neg
orl
outsl
xchg
add
adc
sbb
ficompl
cmpsl
cld
fmuls
or
lcall
insb
negl
imul
aaa
sarl
cmp
pop
aam
in
addb
roll
pop
mov
fcomps
dec
jne
pop
pop
jns
lods
jo
mov
pushf
aas
and
test
daa
adc
rcr
jne
mov
cltd
test
fsubl
stos
clc
test
xchg
and
and
repnz
mov
mov
arpl
mov
cld
out
sbb
pop
mov
aad
push
scas
cs
adc
dec
add
pop
jbe
mov
rorb
aad
shlb
aad
add
icebp
in
sub
imul
data16
and
mov
testl
xchg
xor
int
test
jecxz
mov
iret
movsb
pop
shrl
icebp
cwtl
loop
sub
pop
inc
xor
roll
inc
cmp
es
das
test
xchg
test
hlt
outsl
adc
jle
stc
dec
cmpl
and
add
pop
cmp
sbb
arpl
cmp
ret
and
subl
jle
lret
ds
mov
cli
xor
cmp
push
xchg
arpl
iret
jne
dec
dec
pop
jae
push
out
mov
push
clc
xlat
jmp
pop
fistpl
lret
test
mov
cmp
xchg
ret
in
mov
out
mov
lcall
add
fstpl
leave
xorb
sub
add
dec
xor
xchg
jle
inc
pushf
pop
lods
dec
push
outsb
les
daa
les
orl
dec
jecxz
mov
xchg
add
les
push
mov
inc
push
test
mov
sbb
dec
cli
iret
mov
xchg
mov
dec
clc
pushf
in
fisttpl
ret
push
mov
in
inc
sub
jecxz
jge
cmp
xchg
loop
jecxz
sub
ja
mov
ret
fbstp
in
in
mov
pop
mov
inc
inc
pushf
imul
nop
hlt
inc
adc
push
fstpt
aam
cmpsb
rcr
cmp
jmp
mov
mov
and
and
in
stc
stc
push
rol
mov
test
sub
outsb
add
mov
cmpsb
mov
jne
xor
add
inc
fcmovu
mov
fwait
call
shr
mov
fistpl
push
dec
xor
lods
cmpsl
or
push
pushf
inc
add
iret
test
jle
movsb
add
movsb
lods
addr16
scas
xor
jnp
insl
ret
loop
inc
add
jnp,pt
repnz
xor
mov
sti
sub
loop
cmp
cmp
pop
mov
and
pop
adc
jmp
cmp
and
cmpsb
mov
daa
xlat
adc
mov
mov
outsl
je
inc
jns
sbb
xchg
jae
mov
ds
mov
je
and
or
mov
data16
adc
xchg
jns
hlt
adc
pop
stos
stos
mov
rol
mov
shlb
push
xchg
loopne
inc
movsb
mov
ja
shl
dec
cmpsb
inc
fistpll
pop
push
dec
push
cmp
jae
pop
pushf
leave
fbld
xorb
xchg
ljmp
xchg
loope
adc
mov
xor
pop
push
bsf
add
out
in
xchg
icebp
hlt
scas
jmp
fs
test
pop
xchg
mov
lods
mov
into
mov
int
rol
cmp
pop
out
pop
into
xchg
pop
push
xchg
repnz
add
addb
dec
push
and
pop
shl
hlt
cwtl
sbb
bound
test
xor
cltd
and
imulb
mov
adc
cmp
and
inc
outsb
imulb
jns
bound
and
jne
sbbl
mov
cmpsl
push
push
adc
loope
test
call
iret
xor
mov
xlat
add
out
aaa
into
cltd
or
popf
sub
add
xchg
daa
mov
xlat
inc
xor
jae
mov
stos
ljmp
add
inc
mov
add
xlat
packsswb
stos
push
and
lea
ja
inc
je
sbb
add
fists
ficomps
mov
jb
dec
mov
pop
and
enter
lods
sbb
jo
and
cmp
lahf
push
push
sti
xchg
xchg
sub
push
pop
andl
int3
mov
mov
lock
mov
jnp
rcl
icebp
pop
add
push
dec
push
sub
inc
cmpsb
insb
stc
je
xchg
push
dec
jae
out
mov
or
xlat
fwait
cli
lods
mov
sbb
pushf
xchg
sbb
add
mov
lods
lahf
sahf
ss
adc
cmp
mov
into
cltd
cltd
pop
inc
in
adc
fmulp
adc
mov
jl
mov
in
adc
je
mov
push
and
inc
adc
cmp
fisttpll
movsl
sbb
in
jno
pop
xchg
xchg
fildl
outsb
jae
pusha
jno
or
xchg
pushf
arpl
jl
jmp
mov
mov
lret
add
insb
sahf
mov
add
in
cmc
adc
int3
sub
repz
xlat
dec
mov
aam
rcll
adc
mov
in
xor
cs
je
push
xchg
or
les
push
cmp
leave
jecxz
mov
push
inc
fs
sbb
enter
std
and
imul
lods
int3
push
xchg
sub
mov
cwtl
jmp
lds
lods
push
test
in
arpl
cmp
mov
enter
ret
ds
call
xchg
nop
cmpsb
repnz
fildll
popf
cltd
pop
inc
mov
movb
out
inc
inc
add
jbe
nop
jo
xchg
mov
lods
and
jle
out
sahf
daa
jg
arpl
mov
pop
mov
repnz
call
lcall
or
stos
fists
mov
shlb
movsb
cmp
sub
lret
lds
mov
mov
fstpt
sti
push
cmp
add
mov
or
call
xchg
cmp
mull
mov
and
mov
push
mov
push
sub
loop
js
jecxz
add
jne
scas
scas
or
dec
add
es
fstpl
adc
push
xchg
mov
pop
sub
aas
int
lret
iret
cmp
out
pop
cmp
mov
fimull
out
jg
jecxz
push
fistpll
xchg
rcrb
and
shrb
popa
add
sti
push
gs
in
std
test
dec
xlat
iret
insl
jecxz
jle
mov
push
aas
jo
sbb
mov
fiadds
je
pushf
push
cmp
and
sbb
repz
push
lock
add
inc
push
pop
sbb
add
sarl
cli
fimuls
cmp
pushf
push
jno
pop
fs
or
push
inc
mov
sbb
lcall
shl
pop
mulb
inc
push
adc
sub
ret
inc
push
xor
ss
and
xchg
cmp
dec
jno
outsb
mov
sub
mov
mov
pop
jns
testl
jns
xlat
sbb
mov
sub
dec
addr16
mov
nop
daa
cmp
fiadds
or
insb
xor
lret
mov
and
sbb
sbbl
sbb
cltd
xchg
or
hlt
mov
pop
jg
std
jle
xor
xchg
loopne
jecxz
cmp
sub
js
std
dec
shlb
pop
addl
shrb
and
pop
mov
xorb
pushf
fstpl
das
push
addr16
pop
outsl
testl
sub
sarl
jne
inc
fwait
xorl
mulb
arpl
sub
add
fisttpl
lock
jae
mov
or
and
int
sbb
add
sahf
jns
inc
xchg
repz
dec
outsb
and
xchg
and
jl
mov
add
cmpsl
xor
cmpsl
sub
adc
popa
xchg
cmp
push
in
ja
add
mov
add
sbb
pop
mov
iret
popa
mov
dec
gs
xchg
cmp
mov
jmp
popf
jl
ficoml
into
inc
rorl
popf
out
out
imul
jmp
fwait
pop
jle
dec
rclb
pop
mov
test
imul
dec
iret
xor
int3
into
cmpsb
pusha
js
push
cltd
mov
mov
int
mov
xor
ljmp
in
add
rcll
dec
loopnew
out
inc
xchg
into
pop
jmp
jmp
add
pop
fs
jae
pusha
sbb
bound
add
decl
mov
daa
movsb
xchg
loopne
dec
fwait
out
jle
lods
into
xchg
ss
or
lods
xor
mov
jg
jo
je
std
jae
hlt
jg
pop
adc
lret
or
sub
sub
dec
mov
push
loopne
push
je
mov
adc
ss
and
mov
shrb
fs
icebp
int
pusha
xchg
xor
ret
outsl
dec
pop
jl
subb
push
sub
mov
test
loop
and
and
jb
and
cmpsb
pop
mov
mov
sahf
ret
xor
and
divl
adc
fisubrl
xor
and
push
inc
lods
xchg
mov
pop
stc
jnp
out
adc
in
dec
shl
jb
scas
lcall
xor
dec
out
notb
stos
jno
push
in
jge
sbb
mov
push
sbb
xchg
fnstcw
cld
cmc
lods
sub
das
mov
mov
adc
pusha
xorl
jge
js
pop
xchg
xlat
add
scas
push
test
xchg
mov
mov
scas
or
and
cltd
jg
lcall
shrb
enter
xchg
dec
push
sbb
lcall
push
inc
mov
daa
push
mov
lcall
mov
ja
add
sub
cli
sub
lds
mov
andb
pop
inc
cmp
jmp
push
hlt
cmpl
or
cwtl
pop
shlb
fwait
clc
push
int3
push
in
jl
push
pop
mov
mov
aaa
sbb
cmc
cmp
fwait
mov
mov
push
pushf
lret
movsb
inc
inc
pop
cltd
and
push
outsl
loop
sub
sbb
xchg
fmuls
mov
insl
dec
mov
pop
test
stos
or
mov
stc
fdivrl
les
sbb
and
fcoml
sub
ljmp
pop
aam
out
push
das
daa
stos
cld
hlt
mov
rol
les
fisubs
jbe
jle
js
fistl
test
ds
xor
sbb
xor
shlb
sub
fidivrs
mov
pop
dec
iret
inc
sahf
and
mov
loop
test
cwtl
push
and
jmp
lea
mov
jnp
or
not
inc
or
adc
fisttpll
cmc
inc
sub
outsb
fwait
push
mov
test
dec
hlt
insb
mov
pop
push
xor
sbb
fiadds
cld
mov
nop
sub
shlb
fnstsw
loope
lods
fcompl
fldl
dec
add
jp
cld
sub
imul
pop
roll
adc
cmp
dec
and
push
mov
aam
mov
das
out
pop
pop
and
fisttpl
jo
outsb
inc
iret
sub
add
sbb
jno
call
jl
push
mov
mov
add
and
mov
and
or
lock
mov
dec
test
gs
sub
cs
fisubs
push
in
and
mov
cld
insb
scas
sbb
ret
jp
out
jo
jnp
and
mov
pop
lcall
mov
mov
mov
jne
xlat
pop
sbb
int
ljmp
xorb
push
inc
jbe
sub
add
xor
rclb
adc
and
ret
inc
andb
out
rorb
ret
inc
push
jge
mov
sub
sbb
mov
int3
jae
push
push
inc
push
sahf
jnp
icebp
push
adc
mov
adc
repz
xor
push
push
fiaddl
xchg
add
pop
and
daa
cli
cmp
cmp
jnp
iret
stc
cltd
repz
leave
mov
jo
out
inc
icebp
sbb
paddd
add
mov
push
push
or
les
nop
and
es
rcrb
mov
pusha
out
repz
pop
mov
cmp
mov
sub
xor
mov
adc
inc
xor
stos
adc
mov
fisubl
push
add
cmp
and
add
bound
pop
mov
enter
lahf
jo
adc
dec
loopne
rcrb
xchg
push
xor
cltd
inc
dec
jns
inc
sbb
ss
cmp
xchg
lret
enter
nop
mov
shll
test
mov
ja
jae
fs
stos
outsb
decl
push
je
ljmp
add
rorb
js
lds
jnp
cmp
mov
out
cmp
xchg
sub
test
loope
es
incl
jnp
cmpb
push
adc
rcrl
add
and
sahf
jae
xor
xor
or
test
mov
fildl
insl
mov
add
xorb
mov
mov
mov
and
pop
dec
xchg
xchg
xchg
dec
rorb
test
adc
jne
add
inc
fnstcw
mov
dec
mov
mov
imul
and
cmpl
insb
mov
imulb
sbb
mov
xchg
ret
inc
or
push
lock
push
fdivrl
xlat
lahf
cmp
dec
sbb
sahf
mov
mov
jb
xchg
inc
mov
xlat
ja
les
xchg
pop
mov
sub
jno
pop
pop
mov
xchg
stos
shlb
add
iret
sahf
adc
leave
hlt
test
dec
mov
add
out
pop
and
jl
and
sbb
mov
mov
and
cmp
int3
inc
dec
lcall
in
xlat
ljmp
aas
shld
push
gs
mov
mov
mov
mov
loopne
iret
sahf
sub
dec
cmp
scas
add
leave
jle
arpl
subb
enter
inc
mov
push
fcmovnu
xlat
add
sub
and
idivl
cmc
lea
or
pop
leave
mov
mov
push
insl
lea
xor
sub
daa
add
inc
push
mov
or
ja
push
jl
test
in
ss
dec
rorb
adc
sub
clc
xchg
cmp
loope
pop
mov
lods
outsb
inc
mov
push
outsl
rol
cmpsl
inc
push
test
sti
pop
pop
push
sbb
mov
and
mov
dec
xchg
jae
push
dec
loope
in
xchg
les
psraw
sub
pop
add
cltd
loopne
or
daa
cmp
dec
mov
mov
iret
sti
and
sbb
sub
add
or
mov
addb
mov
jmp
mov
sub
loop
xchg
jle
out
call
lcall
jecxz
and
adc
mov
in
dec
mov
xorb
mov
jle
imul
fildl
icebp
insb
sahf
lds
shl
xlat
das
leave
adcb
xchg
repnz
inc
cmp
out
out
std
add
or
add
test
adc
fdivrs
push
test
std
push
imul
or
outsl
repz
xor
and
lods
jmp
or
add
pop
mov
scas
in
xchg
cld
lods
mov
js
jo
mov
mov
xchg
mov
or
jmp
or
add
rcrb
in
sub
and
xor
mov
ss
fwait
pop
pushf
mov
and
jns
xlat
pop
sbb
dec
add
pop
gs
adc
stos
add
sti
stc
popf
jmp
pop
pop
dec
test
mov
addr16
ret
enter
popf
and
inc
es
xor
sbb
pop
scas
mov
nop
xchg
js
push
xchg
rclb
enter
stos
cmp
inc
push
cmp
mov
xorl
sbb
pusha
icebp
and
sbb
inc
cmpsl
add
pop
imul
pop
xor
dec
jecxz
push
mov
nop
mov
and
inc
add
lods
insl
pop
add
xor
add
push
xor
or
sbb
adc
clc
sbb
insl
aad
sar
stc
clc
stos
hlt
dec
stos
dec
or
and
cli
cmpsl
not
cwtl
test
arpl
aad
popa
rcl
clc
data16
imul
xchg
push
jmp
xchg
stc
arpl
push
inc
das
cmp
jo
pop
xorb
sbb
aad
cmp
std
jmp
daa
cmp
shrb
ds
sahf
mov
insb
sub
rolb
adc
mov
sbb
add
fmul
sti
mov
dec
fwait
sbb
rolb
fsts
enter
inc
outsl
leave
jns
mov
loope
icebp
pop
and
xor
mov
pop
xchg
std
jecxz
and
push
xor
pop
bound
fldl
pop
scas
dec
or
sbb
jecxz
shr
push
dec
clc
out
pop
mov
push
fidivl
adc
xchg
sbb
jns
or
mov
jg
aam
inc
jle
in
ret
mov
mov
cmp
stos
lret
scas
pop
dec
fcomps
fsub
mul
mov
push
movsb
aaa
adc
in
xor
int
out
mov
leave
popf
xchg
mov
aad
testb
scas
sbb
fdivrs
adc
mov
jo
xchg
lods
popf
jnp
in
pop
adcb
popa
movl
mov
xchg
mov
push
mov
call
rorl
jmp
out
jp
or
adc
lahf
in
mov
frstor
cli
aam
loopne
imulb
arpl
mov
inc
pusha
loope
inc
push
out
mov
nop
xchg
fists
push
shlb
jl
aaa
jle
adc
repz
dec
in
push
xorl
lea
subb
stos
nop
xchg
fdivs
mov
mov
dec
out
sahf
in
repnz
lret
mov
gs
out
and
mov
xchg
inc
jmp
mov
inc
shrl
and
aad
jae
addb
lods
jns
mov
dec
popa
lret
imul
jns
jl
fs
es
hlt
lock
int3
addl
test
inc
xchg
lea
cld
shr
push
and
jb
xchg
adc
movsb
lret
hlt
punpcklbw
sub
cwtl
dec
push
call
je
fs
jp
pop
int3
lret
mov
sbb
test
xchg
iret
dec
pop
push
cmp
fptan
stos
xchg
and
les
push
out
mov
cwtl
test
negl
sahf
jl
and
bsr
xor
pop
dec
out
fwait
inc
test
arpl
scas
xor
jge
out
leave
lret
lea
fwait
in
jp
jmp
push
stc
jmp
in
xor
cltd
mov
aad
dec
clc
fstl
add
in
lods
into
cwtl
out
xchg
call
test
loopne
cmpsb
and
or
test
jge
xor
jo
dec
adc
mov
inc
outsb
mov
cmc
lret
sbbb
pop
ja
jg
shrl
and
loopne
add
and
sbb
pushf
mov
mov
mov
stc
sbb
aam
mov
sub
xor
lea
push
xchg
sbb
push
popf
mov
fs
rolb
pop
lahf
in
adc
in
jp
dec
mov
aas
subl
test
fildl
aaa
mov
out
pop
mov
ljmp
rclb
nop
into
dec
in
xchg
or
mov
pop
inc
pshufw
sti
mov
xor
mov
and
and
std
xchg
xchg
adc
into
mov
out
stc
scas
inc
pop
xchg
inc
mov
or
inc
in
les
xor
mov
subl
sub
vsqrtpd
aaa
xchg
push
pushf
nop
and
cltd
mov
pushf
dec
mov
dec
mov
test
jb
xor
mov
ds
adc
cs
jns
inc
xlat
repz
pop
dec
iret
pop
and
sub
jg
mov
out
ja
xchg
cmp
insb
inc
stos
ret
jbe
sbb
add
lcall
fsubrs
xchg
clc
pop
push
pop
sar
add
pop
mov
push
sahf
dec
or
test
ljmp
mov
pop
mov
cmp
in
sub
xchg
outsl
push
or
iret
push
jb
jbe
in
rorl
fbld
push
ret
dec
mov
test
fildl
mov
jo
push
jmp
or
jb
jge
sbb
pop
pop
add
outsb
cwtl
mov
and
fdivrs
mov
sbb
dec
sub
in
inc
cltd
xchg
test
mov
cltd
call
fldenv
out
in
nop
sub
stos
add
sub
push
pop
or
adc
push
lods
mov
pop
in
cli
jecxz
jns
xchg
xor
fbstp
andb
push
nop
or
inc
sub
pop
frndint
loop
push
fnstcw
inc
push
and
fisubrl
into
jns
clc
xorb
jo
out
xor
adc
pop
and
fstpt
pop
cmc
pop
inc
fwait
cmc
sub
or
jbe
or
lcall
mov
xchg
pushf
mov
insb
or
lea
das
sub
mov
xor
mov
adc
lods
ret
jbe
into
lcall
push
mov
je
and
test
lret
js
shlb
xor
mov
mov
mov
call
aad
mov
rorl
xorb
pop
add
xchg
rclb
mov
mov
add
fbstp
inc
dec
sub
out
movsb
cli
stos
cmp
mov
and
ret
push
imul
aaa
push
clc
insb
addr16
shlb
bound
stos
call
adc
bound
jecxz
xor
and
sbb
arpl
or
cmp
cmp
js
cmc
cmp
pop
shl
cmp
lret
cmp
sti
in
mov
scas
xchg
inc
xor
inc
jecxz
out
push
scas
adc
dec
nop
lock
push
push
in
loop
and
cmpsl
dec
or
nop
je
bound
fisubrs
jmp
dec
pop
movsb
mov
lock
mov
adc
std
adc
push
sbb
imul
xchg
lds
adc
js
test
dec
lods
les
pop
mov
push
inc
pusha
push
clc
adc
gs
mov
xchg
xor
lods
int
adc
mov
adc
pop
cltd
push
xor
and
inc
push
xchg
add
stc
jg
push
cmpsb
enter
xchg
cmc
cmp
adc
subl
or
popf
adc
pusha
inc
adc
push
repz
orl
xlat
pop
or
in
rcl
mov
push
divl
orb
das
xchg
fdivr
dec
sbb
sub
mov
pop
stos
popf
int
pop
pop
fnstenv
xor
sbb
ret
cmc
insl
mov
in
sar
pop
jne
xchg
push
xchg
loope
adc
push
inc
cmp
aam
popf
sbb
out
imul
mov
push
push
mov
in
or
push
in
jmp
jg
stos
cmp
cmp
and
lahf
xchg
lods
sbb
jae
movsl
fldlg2
xchg
pop
aad
sahf
fcmovnbe
jp
or
sbb
out
imul
adc
fadds
xor
inc
push
push
xchg
push
xchg
lock
les
lcall
imul
in
pop
dec
adcl
fiadds
mov
lahf
push
mov
arpl
ja
xorb
jno
xchg
in
lock
es
loop
stos
rcl
pop
aas
sahf
jb
cli
cld
or
sbb
sub
pop
pop
and
sbb
test
sarb
cltd
clc
outsb
ljmp
fiadds
iret
fwait
jo
movsb
loope
orb
mov
xchg
sahf
insb
shll
cld
push
inc
mov
jecxz
jo
add
ficomps
xchg
mov
jno
jo
bound
mov
sbb
daa
adc
int3
aad
adc
int3
push
sub
push
or
or
jo
rolb
and
daa
xor
or
jae
inc
daa
fldcw
ja
or
sbb
mov
or
xor
push
rcrb
out
ja
or
jbe
jl
push
jns
mov
inc
lea
add
adc
movsl
ljmp
jb
addl
xchg
pop
jl
pusha
push
dec
negb
out
inc
lds
notl
add
aad
ret
cld
sbb
push
repnz
fmul
inc
dec
daa
sbb
out
or
pop
jb
ss
mov
push
pop
in
ds
filds
lcall
mov
mov
ret
dec
out
ret
stos
ljmp
hlt
das
dec
cmp
in
xchg
inc
ljmp
mov
push
icebp
je
dec
notl
adc
jbe
sahf
js
push
dec
add
mov
test
pop
push
mov
lods
sub
sbbl
outsb
jno
xlat
cmp
rorl
and
lea
cmpl
int
add
nop
and
push
mov
fidivrl
sarb
in
pop
adc
orl
jo
xchg
ds
mov
xchg
cld
push
in
fstps
aam
add
lret
in
mov
popa
inc
shrb
sbb
xchg
cld
imul
push
loopne
and
movsl
cmp
outsb
movsl
adc
inc
xchg
test
ret
fdivl
and
mov
mov
and
lahf
add
and
mov
cmp
or
lods
xor
xchg
sarl
jae
les
cmp
stos
cld
push
jmp
dec
sar
nop
mov
adcb
dec
xchg
add
insb
sub
lds
inc
mov
adc
fidivrl
mov
movsl
mov
jmp
mov
fcoms
or
in
imul
and
fidivrs
pop
mov
pop
and
icebp
cmc
dec
mov
repz
push
dec
dec
ror
in
add
jg
xor
mov
loop
notl
mov
mov
sbb
stos
or
jnp
mov
push
xchg
sbb
or
and
ja
add
cmp
into
sbb
jo
iret
mov
int3
js
arpl
sahf
aam
mov
cmp
mov
mov
mov
cmc
sahf
ret
aaa
xor
and
lock
cltd
cli
out
inc
mov
maxps
xlat
fisubrs
shr
mov
mov
outsb
repz
in
sub
sub
mov
rcrb
shrl
mov
cmp
push
push
cmpsb
and
inc
jecxz
push
dec
cmp
xor
xor
sbb
sbb
test
test
and
mov
add
addr16
mov
addr16
into
cmp
jno
sbb
scas
stc
loop
adc
mov
cld
mov
mov
ja
inc
scas
das
pop
xor
lea
pop
das
cwtl
lock
push
adc
push
out
bound
dec
cmp
hlt
cli
push
mov
sub
dec
cwtl
ja
loopne
fistl
lahf
push
bound
jp
mov
mov
mov
out
jle
mov
fs
jne
and
xchg
pop
loope
rcrl
stos
in
mov
movsl
into
pop
out
push
xchg
js
jmp
dec
lea
test
aam
inc
xchg
push
pop
loope
xchg
sub
sub
out
aad
aas
shlb
aad
inc
pop
popl
xor
add
push
mov
imul
ret
mov
and
ret
pop
gs
mov
cmp
loop
xchg
stos
xor
popf
popa
out
cmp
js
in
mov
cmp
int3
or
push
pop
lods
mov
sub
lcall
add
inc
cs
and
ret
fbld
push
push
cmpsb
sbbl
repnz
in
bts
data16
cmp
mov
sbb
insb
fisttps
push
jno
xchg
or
jno
enter
lods
sbb
sti
mov
in
mov
xchg
pushf
push
sbb
xor
jle
jb
fbld
push
shll
mov
fimull
jo
mov
enter
data16
shrb
lods
xor
aaa
sbb
dec
ret
in
jb
adc
rcll
std
in
sbb
fld1
outsb
push
adc
and
inc
mov
movsl
cld
dec
ror
in
sbb
push
sbb
test
sbb
ljmp
push
add
repnz
mov
imul
out
test
xchg
inc
mov
das
fadds
in
shrl
lea
push
lret
leave
cmpl
jo
test
sub
jae
testl
into
sub
sarb
and
adc
lods
setnp
in
jae
fildl
xchg
imul
jno
pop
mov
cmp
add
cmp
pop
jg
sbb
inc
push
fs
mul
mov
xchg
rol
xchg
sbb
sbb
out
nop
incl
jl
sub
int3
enter
adc
out
xor
jbe
popf
fcmovbe
mov
mov
lret
jbe
lahf
shlb
jmp
or
popa
mov
push
cli
sub
scas
imul
sbbb
loopne
pop
js
mov
sahf
ret
dec
cmp
and
popf
imul
fiaddl
aad
test
adc
add
popf
das
leave
sub
das
mov
lods
mov
jl
out
test
xchg
scas
fisttpl
sub
imull
sbb
dec
nop
add
xchg
nop
dec
inc
stc
sti
addr16
mov
out
cmp
xchg
imul
rolb
clc
mov
xchg
dec
xchg
cmp
cs
inc
roll
xchg
out
push
pop
mov
divl
or
jmp
mov
in
aaa
negb
mov
cmp
mov
and
pushf
sbb
push
in
xchg
scas
daa
cs
out
push
insb
push
push
roll
aas
xchg
sbb
test
dec
pop
jl
das
jae
and
jae
xchg
and
fcomps
cld
push
dec
cmpsb
cmc
pop
cmp
addl
stos
lock
pop
lea
sub
inc
sub
or
hlt
nop
loopne
orl
call
mov
or
cld
mov
lea
fidivs
jmp
fldenv
mov
or
mov
ljmp
fiaddl
ja
icebp
mov
xor
xor
mov
mov
cltd
mov
mov
les
mov
int3
popl
imul
dec
xchg
in
cmpb
and
ss
mov
in
sbb
lcall
mov
pop
arpl
ljmp
idivl
cmpsl
and
pop
rcll
lahf
push
ror
mov
cmc
jg
jg
mov
adc
xor
jbe
test
sti
push
mov
lcall
outsl
xchg
push
push
xchg
mov
mov
mov
mov
mov
xchg
stos
sbb
xor
andb
jne
xlat
pop
aaa
aaa
sub
sbb
cli
ja
adc
mov
imul
jle
gs
jmp
xor
adc
outsb
adc
mov
xor
adc
shr
fsts
lea
insb
xor
fidivl
hlt
stc
jg
adc
fiaddl
add
xchg
mov
cmp
sbb
mov
js
inc
rcrl
pop
aaa
xchg
je
jbe
int3
lcall
jp
cmp
jne
mov
test
add
rclb
jg
pushf
and
cmc
popa
jbe
negl
dec
mov
gs
sbb
fsubl
sbb
test
cmp
or
jge
in
jnp
mov
xchg
mov
out
pusha
in
movsb
out
mov
pop
push
scas
inc
mov
fisttps
test
sbb
mov
pop
stc
push
lcall
push
shll
call
dec
pop
sbb
xor
jns
and
dec
bound
sbb
call
or
lret
mov
dec
scas
cs
mov
fstpt
xchg
fistpll
pop
std
mov
loope
and
dec
insl
cltd
jmp
sub
cmp
inc
jae
xor
pop
lcall
sub
mov
out
call
inc
ficoms
and
jge
adc
popa
ds
leave
out
xor
sub
add
fs
dec
mov
push
int3
sub
ljmp
mov
inc
jp
in
movl
xchg
jle
lock
fldl
movsl
pmaxub
dec
mov
mov
sbb
imul
movsb
cmp
rcrb
in
add
pop
rorb
cs
dec
stc
mov
cmpsl
jno
gs
cwtl
or
stc
xchg
and
je
mov
icebp
mov
scas
daa
sub
xchg
sub
stos
pop
rcrl
pop
or
jg
xor
gs
push
push
sub
sti
dec
shrb
sbb
inc
xor
hlt
stos
xchg
int3
xchg
mov
add
xor
mov
xchg
sbb
shlb
cmp
cld
pop
mov
mov
mov
sub
cmp
xor
ja
scas
cmp
les
aam
lcall
addb
sti
push
jle
mov
dec
int3
mov
mov
jbe
mov
sbb
add
rorb
add
lcall
jo
sbb
sbb
mov
mov
mov
pop
testb
aad
outsl
mov
sub
adcb
lods
outsl
push
lock
push
addr16
lea
mov
sti
jno
jb
call
xchg
sbb
sti
out
sbb
pop
pop
inc
and
mov
pop
xor
mov
in
jg
fstps
outsb
fiadds
sub
lods
adc
adc
mov
testb
mov
and
inc
or
hlt
dec
cmp
movsb
into
fnstcw
cmp
imul
jl
push
cmp
push
xchg
push
in
pushf
arpl
dec
inc
xor
in
pop
push
aaa
movsl
pop
mov
cmc
push
lock
sbb
mov
xchg
dec
sub
mov
cltd
arpl
ss
and
pop
fisubrs
adc
mov
out
sub
or
lods
dec
lds
xor
test
sub
sub
cmpsb
mov
std
sahf
bound
mov
inc
hlt
cmp
lahf
jg
add
cmpsb
mov
mov
rorb
aad
lods
xor
xor
mov
pop
mov
pop
dec
xor
xchg
faddl
sub
stos
xchg
sahf
xchg
and
in
pop
pop
testl
sti
movsb
xchg
sub
push
xchg
lods
idiv
sbb
movsl
sahf
mov
sbb
clc
bound
cli
or
xlat
scas
aam
jo
and
mov
mov
add
jle
clc
int
push
pop
dec
insl
and
add
pushf
sub
add
out
push
into
push
test
stos
ret
inc
dec
insb
push
icebp
roll
stc
pop
inc
mov
jae
xor
int
push
popa
push
insl
and
inc
arpl
pop
pop
mov
dec
movsl
into
scas
mov
add
hlt
test
mov
add
gs
cmp
and
nop
xchg
push
outsb
pushf
adc
dec
mov
fdivrl
scas
jbe
xor
xor
test
loopne
add
add
xchg
pop
loop
pop
bound
jne
inc
bound
push
out
lds
cld
mov
mov
mov
pop
push
sbb
mov
arpl
imul
cld
dec
and
outsb
cmp
arpl
sbb
scas
mov
je
inc
out
cltd
cmp
mov
mov
xchg
fisttpl
xor
sar
adc
dec
loop
cmp
jnp
js
testb
jle
jle
sub
mov
loopne
mov
loope
mov
sahf
dec
sub
sbb
pop
in
mov
inc
lea
mov
test
mov
xchg
xchg
int3
lds
out
xchg
roll
jg
cmpsl
jbe
sbb
or
stos
sahf
js
gs
push
ja
mov
dec
daa
lahf
dec
push
lret
pop
jmp
push
test
call
pop
pop
shlb
cmp
push
pusha
xchg
and
shlb
in
sbb
mov
pop
jle
sub
dec
out
jb
sbb
push
add
insb
in
imul
ja
inc
orb
adc
sbb
add
jge
sti
inc
repz
movsb
hlt
jle
jns
stos
inc
mov
dec
mov
leave
dec
mov
mov
cltd
mov
jg
push
int
xchg
test
ljmp
mov
aas
shrb
test
add
xor
ror
mov
lret
fdivr
insl
mov
sarl
lret
ja
inc
sub
outsl
cmp
inc
sbb
mov
xor
jg
bound
les
inc
dec
in
shll
lds
sub
mov
pop
and
popf
xor
enter
inc
fwait
sub
icebp
jle
xlat
cmp
mov
dec
jle
inc
cmc
fistpll
pop
push
bound
int
add
jno
call
movsl
jns
movsl
sbb
aad
movsb
pop
mov
lcall
inc
inc
lea
popf
push
dec
add
dec
inc
int
sub
pop
cmp
add
xor
and
aam
jle
pmaxsw
lret
scas
cmp
inc
push
dec
sub
in
mov
stc
in
cmp
pop
mov
and
dec
inc
in
add
cmp
push
dec
jne
mov
es
cmp
je
xor
sbb
loop
push
repz
adc
fisttpl
pop
and
in
stos
mov
xchg
pop
dec
dec
add
sbb
ja
repz
and
cmpsb
mov
dec
sahf
gs
les
cmp
adcl
or
mov
sarb
sub
popf
pop
into
in
xor
sbb
insb
adc
dec
push
enter
adc
jmp
jmp
pop
mov
jno
clc
nop
or
inc
ss
in
jo
sub
les
incb
dec
xor
gs
mov
sbb
push
xchg
pop
pop
es
cmpsl
push
jge
mov
aam
je
repnz
scas
test
mov
cmp
or
mov
jo
lods
inc
jbe
rcrb
aaa
pop
stos
push
mov
jmp
ret
dec
fdivrl
mov
stc
xor
push
push
call
out
scas
scas
cwtl
js
adc
ljmp
movsb
arpl
pop
loop
cmc
mov
inc
imul
xchg
pop
les
or
push
dec
cmc
enter
bound
clc
addr16
add
dec
loop
pop
xorb
into
jns
push
mov
dec
sub
pop
rcrl
movsl
js
dec
imul
xor
loop
test
test
xor
xchg
push
idiv
push
int3
push
jns
call
add
int
mov
negl
xchg
not
add
rorl
popf
gs
cmpsl
mov
icebp
jle
dec
pop
pop
lret
imul
inc
fstpt
mov
les
lahf
push
jbe
push
mov
imul
outsb
out
ss
mov
or
mov
xchg
mov
mov
in
bound
push
sub
mov
popa
push
fstl
sbb
inc
call
xlat
pop
mov
jo
bound
iret
inc
xchg
mov
in
and
mov
inc
pop
js
adc
inc
push
and
xchg
leave
aad
inc
sbb
xchg
sbb
test
js
sbb
push
test
mov
bnd
dec
fldl
sub
xor
add
jae
mov
lahf
mov
or
stos
sbb
mov
shrb
jg
mov
shrl
dec
ja
or
or
call
push
out
or
push
cltd
pop
iret
inc
add
jle
pop
loope
pop
movsl
mov
imul
push
xor
inc
fcomps
gs
add
mov
in
jns
sbb
decb
sub
or
mov
fisttps
pop
dec
in
icebp
pop
pop
in
pop
mov
or
ret
cmpsb
jle
std
cmp
xchg
and
push
xor
pushf
add
sub
icebp
outsl
gs
and
inc
mov
movsl
sub
pop
in
fnstsw
xor
fidivl
das
imul
icebp
sub
push
pop
cmpxchg
movsl
lret
ja
popf
les
hlt
mov
sbb
mov
and
in
into
fists
lods
pop
adc
or
inc
or
es
imul
push
xor
cmp
xchg
mov
icebp
adc
mov
popa
add
popa
testl
jb
cli
jae
dec
sub
out
aaa
mov
mov
aam
adc
mov
in
pop
fcom
mov
jp
mulb
jg
cmp
xor
push
pop
cmp
mov
sub
loope
sub
pop
mov
jbe
push
aam
cltd
in
dec
js
out
rcr
add
cmpsb
fistl
sbb
lds
lds
shlb
push
push
cwtl
xchg
mov
subb
cmp
stc
sbb
in
xor
mov
stos
cwtl
adc
dec
insl
cmp
movsl
popa
es
jnp
jae
cld
adc
rcll
decb
cmc
sbb
cmp
mov
lds
into
lea
and
cwtl
pop
or
mov
adc
jp
stc
mov
pop
lock
push
out
or
hlt
loopne
fstpt
add
mov
add
adc
pop
jne
and
add
inc
cld
dec
add
bound
aaa
repz
jb
xor
mov
jecxz
das
sti
or
bts
pop
cltd
dec
xor
mov
in
sub
bound
add
mov
fsubrs
push
xlat
sarl
push
or
leave
in
ja
sbb
mov
loope
sub
adc
cmpl
leave
pop
mov
nop
daa
sub
cmp
test
fsub
inc
push
std
inc
mov
addb
push
loop
dec
and
fisttps
mov
add
or
popf
dec
add
lcall
shrl
lret
mov
out
push
add
andb
loop
pop
sar
fucomp
xchg
fmull
xor
jge
push
sbb
fildl
push
orb
idivb
fcompl
das
sub
in
inc
sbb
mov
leave
out
cmp
daa
movsb
test
fld
sbb
add
dec
add
jecxz
mov
lods
stos
bound
mov
std
mov
popf
mov
push
icebp
xor
sub
xchg
dec
lret
push
mov
insl
cmc
mov
pop
cmp
and
jb
dec
sti
lret
dec
or
jbe
negl
gs
xchg
ljmp
jmp
stos
movsb
inc
cmp
jb
sub
int3
sarl
push
imul
jnp
pushf
sub
mov
push
pop
js
or
and
cmc
std
mov
xor
or
mov
inc
push
dec
mov
adc
std
mov
cmp
std
pop
add
test
adc
into
cmp
ret
test
and
pop
psllq
adc
sub
cld
out
xchg
mov
orl
out
fcoml
shll
xor
ja
cmp
mov
fadds
xlat
std
cmc
clc
fidivs
xchg
and
aas
or
sarb
jnp
or
in
or
ja
sbb
jb
and
xchg
push
lret
ret
iret
sbb
test
sbb
mov
or
jbe
neg
inc
pop
push
mov
hlt
out
cli
nop
mov
push
mov
adc
addr16
inc
jno
add
or
nop
mov
clc
xchg
outsb
and
icebp
xor
sbb
outsb
loop
test
push
pusha
lahf
pop
sbbl
mov
movsl
or
add
scas
mov
adc
add
jl
call
dec
push
popa
xchg
inc
cmp
xor
push
int3
jp
add
hlt
aam
andb
push
loop
xchg
push
decl
inc
pop
rcll
sub
cmp
jb
adc
and
adc
repz
push
loope
sub
push
addl
test
mov
push
popa
loop
loope
add
and
pop
inc
movsb
aas
les
cwtl
popa
negb
pop
jmp
adcl
inc
cmp
pop
cwtl
mov
push
fldenv
dec
fwait
adc
cmpsl
mov
repnz
lods
dec
push
mov
cli
pop
out
jno
fidivl
push
cmpsb
popf
mov
sbb
push
inc
jb
cmpsb
jge
sti
cmp
cmp
sub
cmp
ja
add
stos
test
inc
add
cmp
test
add
scas
jno
frstor
scas
mov
loop
imul
sub
push
sub
loopne
cmp
ljmp
inc
imul
in
mov
xor
loope
push
jnp
scas
adc
and
sahf
push
js
stos
jp
xor
iret
inc
aad
push
dec
xor
pop
cmpsb
or
gs
cmp
push
and
cmp
fadds
fcompl
jae
clc
push
leave
lret
xchg
xor
hlt
inc
fiadds
xchg
out
and
enter
out
sub
cmp
movsl
mov
push
mov
lahf
cwtl
pop
rcrl
jae
dec
add
lock
cmpsb
jp
pop
lods
inc
sbb
mov
mov
jmp
mov
xchg
imul
or
es
dec
gs
mov
add
pop
sub
adc
sbb
cmp
jno
popf
pusha
or
cmp
faddl
pop
mov
jb
mov
frstor
dec
lods
jns
mov
xor
dec
or
or
adc
mov
scas
idivb
mov
mov
add
loope
leave
xchg
cmp
ret
push
dec
sub
dec
xor
xor
xchg
cs
les
mov
out
adc
add
movsl
pop
push
inc
mov
xor
xor
fnsave
adc
pop
jmp
jnp
fimuls
test
cmpsl
lds
mov
xor
jno
cmpsb
dec
cmp
push
out
dec
fisubrl
test
ss
xchg
sub
or
or
outsb
mov
int3
push
dec
scas
xor
fcmove
out
mov
scas
pop
aad
addb
loopne
mov
push
mov
pop
xchg
push
add
in
lock
and
scas
icebp
mov
andl
jae
adc
adc
jb
jp
xor
cmpsl
sbb
repnz
jbe
shl
clc
nop
sbb
nop
pop
and
and
sbb
lcall
add
je
mov
sub
fstps
test
xchg
filds
mov
fs
mov
cmp
add
ficoms
adc
orb
andl
es
out
xchg
or
and
dec
dec
cltd
mov
jnp
mov
mov
test
xchg
shrl
inc
lods
xor
arpl
fnstsw
gs
mov
enter
adc
aaa
push
loop
aas
sbb
and
fistpll
jp
xor
jg
push
sbb
add
add
adc
js
adc
xorl
std
arpl
xor
out
fucomi
push
adc
andb
rcll
mulb
aas
popa
push
xorb
pop
outsl
mov
repnz
mov
pop
pop
mov
cmp
push
in
insb
add
add
iret
arpl
pop
mov
and
adc
xor
mov
lock
stos
xchg
pop
insb
jmp
popa
stos
mov
iret
mov
xor
mov
sub
lds
in
pop
inc
or
mov
sub
pop
push
ss
sub
aas
insb
aas
loopne
sub
aas
mov
ljmp
popf
daa
les
jae
incl
jmp
and
andl
mov
test
cmp
xchg
and
and
jns
imul
xchg
xor
or
cli
mov
ret
scas
lahf
iret
mov
mov
sub
and
mov
cltd
add
dec
mov
hlt
xor
pop
imul
mov
adc
adc
inc
or
pop
pop
mov
add
mov
jae
lcall
adc
adc
xlat
xchg
jns
lea
xchg
dec
iret
mov
mov
xor
repz
push
pop
jae
xor
jp
mov
cmpsb
stc
dec
dec
call
iret
sbbl
adc
test
inc
inc
add
xorb
sbb
in
xrelease
jb
mov
push
shrb
bnd
repnz
aam
adc
ret
adc
adc
mov
cmp
dec
icebp
mov
xchg
jl
adc
insb
rcrb
sbb
mov
sub
or
xlat
xlat
movsb
mov
arpl
mov
cmp
push
loop
mov
mov
stos
jo
int3
or
mov
lret
xchg
scas
sub
negb
nop
cmp
gs
lahf
mov
test
dec
sbb
push
mov
shlb
and
into
jb
sbb
jg
jns
pop
push
imul
push
arpl
cmc
js
jnp
pusha
push
mov
es
cmp
in
loopne
aam
loope
sbb
clc
pop
imul
mov
sbb
repnz
movb
push
xchg
cld
xchg
dec
test
pop
out
stc
add
push
test
iret
fdiv
mov
lods
pop
jo
xchg
les
ret
leave
std
or
adc
adc
mov
xchg
mov
lahf
arpl
int3
xorb
jecxz
mov
cmc
jae
addb
hlt
fadds
xchg
pop
insl
ret
push
aad
lods
mov
or
pusha
out
popa
stos
dec
or
sbb
xchg
mov
dec
mov
xchg
daa
lock
jbe
sarl
jns
je
repz
imul
mov
and
mov
out
push
mov
push
mov
out
add
sti
cld
mov
adc
mov
scas
and
orl
fimull
lds
arpl
lea
insb
insb
or
and
jl
test
xor
jnp
mov
shll
repz
push
sbb
outsb
inc
xchg
adc
out
xchg
dec
dec
mov
mov
pop
mov
daa
insb
fs
jge
jecxz
orb
leave
iret
cmp
mov
xchg
stc
add
stc
add
mov
and
ss
mov
enter
or
or
inc
mov
and
pop
push
cmp
push
sub
mov
test
or
mov
inc
mov
jge
add
in
fdivs
les
xor
mov
pop
mov
and
ja
aas
and
mov
out
sub
dec
mov
pop
mov
pop
cmpsl
lcall
or
sbb
inc
dec
and
aam
bnd
loop
or
adc
jle
xor
pop
xchg
hlt
stos
imul
push
int3
sub
stos
inc
xor
lods
mov
hlt
mov
test
ja
push
lds
mov
clc
or
sbb
mov
jecxz
push
xlat
data16
pop
xchg
fsubrs
jbe
fimull
test
cmp
lods
fisubs
adc
addb
mov
or
xchg
xor
pop
jle
stos
addr16
lea
mov
and
sub
xor
add
or
nop
cs
decb
mov
sub
jns
inc
push
lods
cmp
add
lcall
cs
cli
popf
jno
ss
cld
sub
inc
jb
repz
xchg
aas
outsb
mov
leave
inc
icebp
push
loope
add
xor
cmpsl
and
dec
and
jbe
out
jae
xchg
sti
xor
inc
inc
fwait
nop
xchg
adc
push
sbb
mov
insb
pop
dec
pop
jns
sbb
push
push
loope
add
fadd
jmp
subb
loop
sahf
test
stos
dec
mov
and
lahf
pop
sbb
xor
pop
sbb
jae
jl
and
xchg
movsl
xchg
adc
shrl
test
lret
test
xor
dec
addr16
lcall
cld
loop
ljmp
push
in
mov
dec
sub
jg
fprem
sub
xchg
and
popf
dec
xchg
cmp
inc
mov
mov
push
rolb
gs
fimull
dec
xor
popa
lods
das
add
push
sahf
addr16
dec
testb
sbb
jae
dec
pusha
cmpsb
jo
xchg
xor
mov
push
push
xchg
lret
clc
cwtl
jecxz
ljmp
pop
pusha
popa
adc
adc
mov
cmp
xor
call
cmc
call
outsl
push
repz
mov
adc
cmpsb
fwait
adc
xorb
sti
fmull
testl
add
xchg
mov
inc
pop
loopne
pop
adc
jle
and
sub
jmp
xor
lea
cmpsb
fdivr
cmpsl
rol
xchg
aas
fs
insl
mov
and
sub
repnz
lahf
inc
adc
mov
dec
xor
jb
add
mov
cli
or
add
jle
or
imul
sbb
xchg
inc
movsb
dec
out
push
cmp
loopne
pop
dec
pop
cmp
sub
pop
push
addl
popa
test
arpl
and
mov
and
js
sbb
repz
sbb
sarl
dec
lret
jmp
and
and
das
roll
push
adc
ss
addr16
push
adc
jno
xchg
mov
leave
loop
in
movsl
dec
aam
scas
add
adc
mov
ret
push
push
xchg
divb
nop
sub
dec
bnd
push
pop
inc
mull
push
hlt
mov
int3
in
out
call
dec
mov
cmp
mull
or
bound
ds
test
xchg
popa
push
pop
daa
inc
scas
andb
leave
mov
mov
mov
inc
in
mov
ss
shlb
jp
fwait
xchg
dec
gs
pop
add
scas
scas
cmp
ss
paddusb
cmp
imul
std
add
pusha
test
jg
and
sub
inc
test
jg
adcl
outsb
mov
in
dec
mov
popf
cmpsb
push
in
ficoms
pop
xchg
fnstsw
sub
or
popf
cmp
push
repz
mov
pop
add
jl
iret
movsb
mov
scas
in
leave
cmp
dec
jno
icebp
loope
pop
jmp
cmp
out
inc
mov
sub
pushf
bound
lcall
in
inc
fwait
fs
test
and
arpl
push
repz
sub
cld
pop
jne
icebp
scas
repz
in
repz
orb
xlat
cmp
mov
jecxz
loope
pusha
shlb
lods
cld
in
cmc
rorl
clc
push
clc
sarl
sahf
push
push
and
das
aad
cmp
jno
pusha
insl
cmc
pop
in
mov
adc
inc
dec
mov
in
pop
cmp
addl
divl
xchg
fs
cs
mov
and
out
mov
fs
aad
test
add
and
xor
pop
dec
jo
ljmp
jae
mov
inc
pop
cmp
das
mov
adc
xor
movsl
add
mov
jb
add
cmp
push
loope
xor
std
into
xchg
mov
cmc
std
subl
mov
jle
push
arpl
iret
pop
mov
mov
pop
jp
mov
push
lods
sahf
push
notb
je
sub
js
movsb
or
rcll
dec
fistpll
dec
inc
outsb
add
xchg
pop
enter
or
nop
add
cltd
fidivl
sti
lcall
out
xor
data16
and
fmuls
mov
mov
and
call
add
xchg
cmp
cltd
fidivrs
lods
es
jne,pn
sbb
mov
dec
js
sbb
neg
add
pop
jmp
jno
sub
mov
jl
pop
lods
xor
mov
cmc
inc
test
jnp
jecxz
repnz
out
mov
jl
nop
inc
es
mov
rclb
lret
lret
addr16
outsb
int3
loop
inc
dec
loop
or
lock
lret
inc
mov
insl
scas
ja
pop
scas
imull
dec
loop
lcall
lret
test
lret
pop
es
lock
xor
addl
sahf
jmp
add
pop
xchg
pop
in
xchg
jns
push
fwait
stos
inc
fs
lods
adc
addr16
cmp
mov
fcmovbe
repnz
clc
jo
mov
fisubs
lcall
decb
xchg
adc
leave
cmpsl
rcll
push
cmpsl
push
xor
mov
pop
cmpsb
jl
push
orl
pop
jmp
adc
mov
out
popa
add
and
cmp
mov
pop
lahf
movsb
cltd
mov
repz
sbb
xor
aad
fst
bound
out
dec
lods
sbb
pop
adc
inc
repnz
mov
cwtl
enter
inc
int
sahf
in
push
mov
iret
mov
push
mov
imul
inc
test
mov
xchg
subl
jmp
mov
dec
lods
fcoml
shll
jp
stos
mov
xor
icebp
jmp
clc
pop
loop
sbb
adc
ss
rcr
push
pop
adc
xor
mov
cmp
and
stos
adc
pusha
mov
cld
mov
outsl
inc
inc
adc
adc
add
ljmp
shlb
cmp
icebp
xor
fcoms
or
fcomp
jg
scas
sbb
fwait
pop
test
mov
repnz
fiadds
mov
out
add
push
adc
inc
ret
test
sub
xchg
xchg
lods
push
fdivrl
fbstp
fwait
cli
adc
inc
jnp
out
es
aam
mov
gs
push
outsb
inc
push
lods
lahf
adc
pushf
not
pop
ss
xchg
xchg
insl
pop
xchg
pushf
push
cmp
fscale
insl
out
mul
pop
mov
divb
mov
fstpt
repz
fmul
mov
dec
xchg
dec
mov
stc
add
lods
inc
xchg
push
ja
xchg
out
and
or
mov
mov
andl
xchg
cmp
scas
sub
bound
xchg
repz
xor
xchg
xor
push
jmp
cmc
scas
in
icebp
sub
jle
jns
sub
out
xchg
lds
cs
mov
dec
add
xor
dec
dec
dec
lea
leave
sbb
mov
gs
xor
insl
inc
inc
jmp
imul
add
aaa
dec
xchg
dec
jo
fistps
adc
sbb
or
add
mov
jbe
aaa
leave
mov
push
mov
roll
cmpb
and
cmc
das
arpl
or
mov
cmpl
addb
adc
lcall
imul
sbb
ds
mov
lods
icebp
out
repz
cmp
add
les
daa
cmp
scas
pop
ret
in
lock
xlat
xchg
es
add
push
ud1
fisubrl
ja
sbb
xchg
leave
hlt
insb
cwtl
jno
sbb
ss
notb
jnp
sbb
mov
mov
cli
fistpll
outsb
iret
repnz
mov
mov
mov
jmp
xchg
addr16
sub
mov
sbb
or
test
scas
inc
and
ds
adc
addr16
push
ret
or
jp
inc
mov
xchg
enter
and
inc
es
out
sub
fdivl
inc
xchg
stos
jae
xchg
bndldx
xor
cmpl
sbb
loope
lods
mov
loop
lods
inc
mov
ror
sbb
pop
fidivs
lcall
jnp
dec
es
pop
cmp
mov
mov
std
inc
inc
ja
ficomps
outsl
ljmp
int
xchg
cmp
out
test
adc
fbstp
popa
sub
add
jg
mov
cmpl
gs
hlt
dec
dec
ret
jle
pop
lock
leave
rorb
mov
ljmp
or
les
es
ret
lea
ja
mov
ljmp
aaa
add
lahf
test
mov
fwait
mov
cmp
mov
inc
iret
arpl
aas
add
inc
es
sbb
rep
add
lcall
imul
pushf
aas
jecxz
lret
lods
movsl
mov
push
je
jne
movsb
jno
mov
pop
into
xorl
call
sbb
lds
xor
aas
pcmpgtb
mov
dec
stc
pushf
in
adcb
add
movsl
mov
mov
popa
sahf
cwtl
xchg
and
adc
inc
and
xor
xor
mov
xchg
rcrl
pop
jle
test
jmp
xchg
inc
pextrw
pusha
daa
adc
dec
sub
cmp
cmc
js
adc
stc
test
rcr
insl
rorl
jl
mov
sub
neg
cld
lods
rol
pop
pop
movsl
cmp
sbb
hlt
shlb
and
push
in
popa
inc
sub
jb
out
imul
cmpsl
lahf
pop
and
hlt
pop
sub
cmpsl
lcall
into
cmp
or
inc
jb
bound
rcl
clc
push
and
push
jg
xchg
mov
push
mov
xor
push
dec
xchg
cli
push
sbb
enter
bound
addr16
pop
push
pop
int3
xor
sub
test
shl
push
pop
mov
cmp
leavew
adc
jmp
outsl
jae
jmp
mov
mov
sahf
push
ror
sub
jecxz
pop
ret
adc
into
sub
jge
pop
in
push
lret
inc
int
rorb
pushf
flds
pop
push
stc
pop
dec
push
arpl
popf
in
xchg
in
push
ds
sub
xchg
sbb
xor
mov
aad
test
inc
mov
outsb
inc
mov
xchg
aas
cmc
pop
push
mov
dec
mov
xchg
sbb
addb
jecxz
arpl
adc
addr16
aam
dec
call
lret
mov
arpl
setge
hlt
jne
cmc
lret
jo
sahf
xor
inc
dec
cmc
jmp
and
in
enter
shll
lea
int3
jbe
daa
mov
push
dec
adc
mov
sub
mov
mov
inc
xor
testb
inc
popa
jnp
sti
ja
cmpsb
fildl
cmp
mov
fnstcw
push
leave
test
cmp
adc
push
test
fwait
push
sbb
sub
sbb
pushf
push
xchg
adcl
fmull
in
pop
pop
dec
sbb
testl
mulb
dec
scas
or
and
xor
mov
loope
aam
pop
pop
push
and
pop
push
in
jbe
xor
rolb
sarl
clc
push
movsl
cmp
incl
and
cltd
into
cwtl
jmp
mov
cld
lea
xchg
sahf
and
ss
movsb
aas
fistps
sub
push
mov
sub
pop
dec
ljmp
dec
push
push
inc
and
test
loop
imul
cmp
xor
mov
xor
jl
jl
add
imul
inc
in
in
divb
push
ja
jp
fcoms
pushf
push
test
int3
es
xlat
push
mov
mov
xor
mov
or
scas
popf
xchg
dec
jbe
ds
pop
pusha
mov
push
inc
fwait
sbb
fsubrs
sbb
inc
lods
movsb
test
jbe
sbb
or
subb
push
sbb
add
aad
inc
cltd
sub
aad
ljmp
xlat
rcl
sub
fistl
push
inc
cmp
not
push
push
jmp
fwait
push
mov
add
push
push
xchg
stos
inc
or
mov
sub
mov
mov
loopne
mov
pop
mov
inc
jl
mov
insl
xor
je
hlt
jo
js
or
call
arpl
adc
sub
repnz
jmp
xchg
xorb
aad
fiaddl
mov
dec
scas
dec
pop
lods
add
jecxz
mov
jg
push
mov
inc
push
stos
sbb
xlat
pop
xchg
shlb
jp
addr16
push
gs
shll
jno,pt
fldenv
inc
sbb
sbb
and
pushf
push
adc
fsubrl
mov
jns
lods
mov
xchg
gs
pop
pop
sub
mov
cmpl
ss
out
stc
shlb
sbb
xchg
add
js
cmp
scas
lods
arpl
insl
mov
lcall
outsl
dec
cmpsl
loop
sub
or
sbb
outsb
adc
sub
inc
mov
adc
in
mov
frstor
inc
push
leave
into
dec
lret
sbb
loop
mov
lahf
lods
es
rol
mov
fs
adc
test
loope
cmp
insb
sub
cmp
roll
jle
push
cld
inc
outsl
in
and
dec
mov
popf
mov
push
lcall
adc
cmp
jno
add
daa
cmpsl
fisttps
push
icebp
popf
out
ret
pop
xchg
sbb
xor
xchg
dec
cmc
fsub
stos
adc
xchg
push
xor
stos
aad
lret
mov
or
incb
jnp
dec
mov
aad
sti
ss
inc
sbb
stc
jno
mov
movsb
jmp
inc
push
sahf
cmpsl
xor
enter
sub
gs
jb
sub
mov
xchg
cwtl
jno
pop
xchg
movsb
shl
pop
inc
out
scas
aas
nop
mov
outsb
test
ss
movsb
lods
clc
movd
jmp
iret
sbb
cmp
ficoms
xchg
ds
inc
jmp
sti
jmp
addr16
lret
mov
imul
pop
lods
arpl
xchg
movsl
adc
mov
push
idivl
popf
cltd
je
pop
xor
test
mov
mov
jg
push
mov
xor
pop
add
icebp
in
std
jns
add
mov
cld
popf
in
mov
sbb
rol
sbb
mov
cmp
inc
jecxz
inc
and
fsubrl
xor
inc
cs
cmp
ret
cld
mov
adc
movsl
sbb
xchg
out
mov
fisubrl
rcrb
dec
xchg
push
push
pop
rorb
incb
dec
lods
shl
sub
lds
cmp
imul
sbbl
jns
in
push
pusha
lret
scas
lahf
mov
aam
pop
mov
std
fdivrs
adcl
lds
jg
jno
mov
inc
sub
add
test
pop
cmp
sub
jmp
sbb
inc
int
shrb
push
push
push
and
cmp
ds
add
mov
fsubl
fisttpll
xchg
pop
test
inc
popa
jle
stos
outsb
pop
inc
cmpsb
push
sbb
mov
leave
lods
fpatan
mov
scas
cmpsl
xor
mov
outsl
or
sbb
mov
arpl
jb
aaa
mov
dec
insl
jno
rorl
cs
jmp
pop
test
cmp
call
inc
sbb
xchg
sub
popa
and
push
mov
push
dec
and
out
rep
mov
iret
push
in
imul
mov
bnd
ja
add
xor
xchg
mov
ljmp
and
pop
jne
jmp
cs
add
add
mov
gs
xor
cmp
shll
mov
cmp
push
call
sbb
aam
cmp
sti
jae
inc
or
sub
inc
xchg
sub
fnstenv
insb
push
mov
xchg
inc
pop
mov
pop
test
xchg
push
cmp
xchg
stos
insl
cmp
insb
pop
pusha
push
push
sahf
fidivrl
iret
les
outsb
in
das
xor
mov
xchg
xor
sbb
push
add
mov
hlt
lods
repz
cmp
lock
sub
out
das
cld
out
xchg
out
xchg
std
dec
sbb
cltd
jae
inc
pop
les
pop
rclb
inc
sub
fildll
mov
hlt
xchg
data16
imul
pop
ds
sbb
push
or
mov
shlb
and
inc
adcb
xchg
adc
and
mov
mov
inc
mov
lcall
push
push
loopne
loop
mov
scas
icebp
mov
lcall
mov
mov
lea
sti
inc
fcmovnu
inc
bound
jnp
sahf
imul
jne
sub
movsl
pusha
push
adc
fs
or
inc
inc
cmp
jae
lcall
sub
jnp
data16
shlb
mov
mov
inc
mov
lock
pop
inc
add
adc
xchg
add
pop
insb
xchg
sar
nop
mov
rcll
dec
int
data16
pop
adc
das
iret
popf
sahf
scas
push
mov
or
fdivs
push
add
mov
sbbl
fsubr
inc
test
mov
lods
mov
pop
xchg
sub
test
insb
jo
sbb
faddl
scas
xchg
sbb
lods
xchg
add
push
bound
pop
sub
pop
and
and
sub
sub
enter
repnz
dec
xchg
aad
or
mov
or
mov
cmpl
iret
cmp
adc
fidivs
lahf
movsb
mov
cmp
enter
inc
pusha
dec
js
mov
addr16
in
ljmp
cmc
pusha
popf
mov
addb
or
aad
jb
sbb
xor
lret
pushf
mov
inc
push
lds
push
inc
mov
pop
pop
mov
pusha
sbb
jo
test
orb
ds
movsb
test
xor
mov
or
cltd
bound
sub
jecxz
bound
mov
mov
stos
dec
xchg
push
shll
fwait
xor
scas
adc
push
fistpl
jns
and
jecxz
cwtl
test
jne
push
scas
pop
shrb
pop
jmp
ficoml
lcall
pop
iret
daa
out
push
push
jmp
mov
adcb
sbb
fmul
cmp
adc
push
mov
stos
aaa
call
add
sti
and
jg
jp
negl
sti
add
xor
pop
js
icebp
dec
in
add
in
mov
cmpl
xorl
fldenv
mov
mov
gs
lcall
addr16
or
add
bound
add
xor
test
les
stos
movsl
adc
add
pop
popa
repnz
sbb
mov
adc
and
cmp
fld
dec
push
ja
mov
inc
xchg
push
call
push
shlb
sub
hlt
js
shrb
addl
popa
enter
lret
shll
incb
lret
lock
pop
xor
pop
popf
push
fistpl
testb
sarl
add
pushf
jbe
and
cmp
pusha
xchg
rcrb
leave
mov
xor
lcall
push
jb
imul
push
adc
mov
aas
sub
cld
outsb
dec
sub
dec
xlat
lods
fnop
mov
sub
leave
add
xor
dec
cli
xchg
insl
pushf
sti
in
sbb
aaa
adc
dec
or
pushf
in
arpl
in
dec
jb
dec
mov
sbb
inc
inc
icebp
hlt
mov
outsl
enter
sbb
inc
loop
adc
pop
push
mov
add
push
xor
jp
sbb
inc
repnz
and
sbb
sub
xchg
lods
lods
popa
mov
into
mov
jno
test
adc
push
push
cmp
test
jne
ret
lret
cwtl
insl
pop
sti
gs
sub
les
lcall
push
xchg
jae
push
push
maskmovq
testl
mov
fwait
add
mov
clc
cmp
or
popa
dec
xchg
dec
shl
mov
icebp
push
repnz
mov
xchg
les
ds
clc
mov
jl
mov
mov
adc
and
xor
mov
ret
jle
rclb
cmp
adc
push
mov
jb
push
jecxz
inc
xchg
adc
add
aas
fsubrl
gs
movsb
imul
pop
xor
cmpsl
mov
mov
roll
jns
cmp
pop
dec
push
movsl
sbb
aas
popf
sbb
lods
xorb
arpl
add
add
arpl
icebp
out
js
cmp
adc
sbb
adc
xchg
mov
icebp
jp
clc
lcall
ret
int
aad
push
hlt
jmp
add
or
or
dec
jecxz
ficoml
into
inc
mov
enter
roll
lret
xchg
xlat
or
add
jge
shlb
fmul
test
popa
cmc
mov
mov
or
jae
call
mov
mov
xchg
xor
mov
lods
or
lret
xchg
imul
stc
stc
or
mov
hlt
mov
out
and
jp
shlb
mov
sub
fstpt
test
or
insb
daa
pop
push
push
aad
shlb
das
jbe
popf
jge
nop
aam
or
mov
rcl
and
inc
loopw
mov
push
in
sbb
pop
xor
in
nop
mov
fwait
sbb
mov
inc
mov
xor
je
cmpsl
ror
shll
jmp
push
aas
sbb
pop
push
subb
push
pop
cmp
or
inc
pop
jbe
fstpt
xorb
sub
mov
sbb
cmp
push
call
rcrl
and
movl
sbbl
scas
jg
iret
scas
lret
sbb
mov
jb
and
stos
movsb
dec
clc
cmpsl
leave
pop
frstor
popf
jmp
adcl
inc
push
push
pop
aaa
xchg
insb
and
ret
aas
push
incl
arpl
push
imul
add
mov
push
fdiv
mov
dec
fldenv
stos
jo
test
adc
jnp
dec
ss
sub
mov
nopl
aas
inc
pop
scas
cmc
mov
cmpl
gs
pop
pop
out
or
aad
push
push
pop
push
stos
pop
leave
mov
or
aam
cmp
xor
aad
mov
mov
mov
loopne
outsb
pop
jg
xor
pop
hlt
popf
xchg
test
lods
mov
imul
xor
pop
jmp
ja
push
in
jge
bound
cwtl
push
inc
push
xchg
adc
stc
jns
xchg
xor
inc
xchg
inc
jo
pop
fs
enter
and
inc
push
aas
cmc
xchg
mov
push
aaa
jne
mov
lcall
std
popf
sahf
lret
adc
cld
push
cmpsb
sub
mov
mov
or
mov
fldcw
sub
arpl
mov
leave
mov
adc
sub
and
mov
jle
push
sub
mov
and
sbb
and
fdiv
sbb
sub
jl
ffreep
js
sub
or
jl
stos
mov
xorl
into
push
mov
das
fisttpll
cld
push
pop
fsubrl
xor
sub
xor
sti
imul
loop
clc
mov
fsubr
xor
jne
ret
pop
or
cmc
sub
mov
inc
fbld
pop
es
pop
je
lea
mov
xchg
adc
jp
and
and
rolb
cli
push
out
add
repz
mov
push
rcrb
movsb
jo
jnp
mov
inc
mov
das
fcomps
xor
xor
mov
lret
das
mov
pop
stos
cwtl
mov
xchg
out
jmp
xor
sub
pop
jns
sub
sub
mov
jmp
ljmp
mov
xchg
fcmove
frstor
sarb
filds
jo
and
jnp
or
pop
fildll
ljmp
sbb
bound
mov
push
adc
les
push
movsl
mov
aam
push
mov
and
loopne
nop
pop
mov
int3
addr16
xchg
dec
rolb
cmpb
cmpsb
outsl
scas
xchg
fwait
pushf
inc
jne
xor
sub
iret
mov
xlat
dec
fs
dec
outsl
jo
fdivs
ret
dec
dec
shr
pop
inc
push
outsl
pop
fildll
pusha
addr16
add
add
push
lcall
push
into
cmp
cwtl
sub
loop
pop
into
lret
and
push
faddl
inc
push
shll
jno
fists
mov
pop
or
fucom
nop
scas
sbb
mov
jge
rcrl
xchg
pop
dec
faddl
je
pop
mov
xchg
adc
push
push
jle
inc
and
push
mov
cmp
sbb
push
dec
push
push
xlat
scas
and
std
mov
cmpsb
add
lea
mov
rorl
cs
add
cmpsl
call
daa
pop
jle
add
lods
test
xor
push
jne
jp
movsb
insb
nop
jo
cmp
repnz
inc
mov
in
cmpsl
iret
jnp
test
xor
sbb
adc
cmp
jo
fdivrs
push
sbb
mov
lret
jae
lock
in
sbb
test
pop
aas
push
pop
rcrl
mov
xchg
test
add
mov
bnd
popa
bound
dec
adc
mov
cwtl
and
shll
fidivrs
push
test
pop
cli
xor
sub
bound
pushf
sub
jb
testl
pop
sbb
mov
aad
adc
movsb
xchg
sub
andb
dec
pop
mov
iretw
loope
jnp
cmp
xchg
and
and
sub
lock
dec
roll
mov
or
dec
mov
dec
xchg
mov
push
mov
hlt
lods
pop
xchg
push
sahf
mov
push
loope
add
aas
jge
xadd
cmp
pop
jb
cmp
xchg
pop
lds
cli
fbld
inc
mov
in
pop
fucomp
mov
repnz
cltd
test
fdivrl
std
sahf
pop
aad
sub
aad
test
cmp
cmp
fdivrl
xchg
aas
aas
lea
gs
sbb
sub
fisttpll
lret
popa
dec
pop
lods
fs
sbb
ret
decl
xlat
mov
filds
xchg
out
mov
mov
adcl
test
xchg
fs
mov
mov
cmp
cmp
hlt
xor
roll
dec
test
ret
mov
mov
jge
movsb
or
mov
fisubl
add
mulb
jle
sarb
jg
sbb
cmp
mov
lds
mov
lds
mov
dec
or
ja
pop
mov
jmp
insl
cmp
daa
push
sbb
inc
jbe
sbb
sbb
sbb
xlat
pusha
in
mov
mov
pop
pusha
in
and
push
aam
lods
enter
ja
mov
sbbl
sbb
pop
sarb
adc
ljmp
dec
mov
jnp
and
test
in
fcmovnu
cmp
leave
mov
fidivs
popa
scas
rcll
pop
sub
popa
lea
loopne
cli
movsb
adc
sub
sub
int3
mov
pusha
sbb
mov
insb
xor
or
add
add
dec
ss
jno
mov
push
ss
mov
and
adc
shrl
popf
xchg
inc
and
stc
mov
mov
pop
lods
mov
pop
scas
or
test
shlb
xchg
pop
jno
and
jne
inc
ficomps
mov
mov
sbbl
mov
lock
ljmp
xor
rcr
std
mov
lea
or
jns
mov
das
dec
jo
lcall
pushf
outsl
jp
fs
ret
mov
insl
icebp
ficompl
add
mov
jp
sti
out
ss
adc
mov
leave
jge
in
dec
out
add
xor
gs
imul
push
push
into
mov
mov
testl
sar
repnz
cmpsb
push
push
xchg
repz
adc
cmp
add
push
mov
test
jbe
lds
jmp
rep
lretw
lods
xchg
shll
std
xor
call
repz
dec
push
lods
or
jecxz,pn
push
xor
out
test
dec
lret
jb
ds
fnsave
js
les
xor
js
or
mov
jnp
lahf
hlt
xor
dec
int3
cld
push
push
sbb
outsb
sub
scas
sbb
into
outsl
jmp
pusha
rorl
out
push
sub
cli
add
cmp
sub
and
inc
push
push
sbb
mov
sub
cld
andl
cmp
jns
push
ficoml
mov
dec
sub
std
xchg
daa
jno
sbb
cmp
sub
call
pop
dec
xchg
orb
loopne
mov
jnp
xchg
jge
fwait
shl
aaa
xchg
cld
push
dec
sbb
add
lret
scas
shlb
loope
aad
clc
lret
out
ret
or
or
scas
in
add
sbb
test
test
stos
mov
or
les
fwait
out
mov
nop
or
push
and
mov
hlt
xlat
dec
sti
pop
pop
test
sbb
sbb
mov
inc
rol
jecxz
adc
mov
mov
and
cmc
mov
lds
mov
scas
inc
fs
xchg
fwait
es
mov
call
mov
xchg
les
mov
push
xchg
or
flds
int3
stos
add
jp
test
loop
jnp
imul
cmpl
pushf
rcrl
ljmp
and
jb
jge
test
flds
out
add
cli
daa
sub
out
cmp
xchg
imul
daa
xorl
sbb
outsb
adcl
sbb
xor
dec
push
add
sbb
jge
mov
ljmp
aad
or
push
lods
xchg
push
push
xchg
cmp
push
icebp
push
xchg
jecxz
mov
jge
dec
mov
ror
lcall
mov
shr
or
sub
loopne
jns
out
clc
mov
xchg
xor
cltd
push
mov
add
mov
imul
jno
push
ret
inc
testl
stos
push
repnz
aad
scas
cld
scas
aaa
mov
add
add
sbb
mov
movsl
pmuludq
arpl
loop
and
sahf
insb
xor
cmpsl
add
xchg
fsubrl
negl
repz
inc
ss
clc
cwtl
out
test
ss
pop
add
mov
push
fildll
xchg
scas
in
or
shlb
mov
add
mov
je
jnp
aad
mov
dec
ljmp
cmc
xor
rcll
lock
movsl
cmp
push
data16
push
out
js
mov
xchg
pop
mov
repz
push
fwait
decl
out
adc
icebp
lret
test
fcoml
js
rorl
shrl
js
xchg
test
out
call
lahf
mov
arpl
leave
mov
pop
bound
mov
imull
mov
inc
jecxz
enter
out
mov
notl
clc
cmpsl
jecxz
push
adc
dec
int3
dec
jbe
xor
push
push
lret
pusha
jne
push
cwtl
adcb
icebp
inc
pop
mov
or
inc
rcrb
pop
test
jp
jecxz
sub
inc
dec
fneni(8087
fcompl
xchg
mov
ds
fnsave
pop
rorb
fsubrl
jecxz
mov
dec
push
mov
rorl
insl
inc
or
icebp
xchg
jb
or
dec
lock
gs
stos
pop
pop
dec
sub
lahf
fstl
xor
add
loopne
aad
fcompl
rclb
pusha
fimuls
xchg
cmp
jns
mov
jnp
dec
mov
mov
outsb
adc
push
push
sub
jl
mov
xor
test
sub
pop
out
and
popf
xor
or
fwait
out
adc
push
jl
push
jns
cmpsl
jno
inc
pop
lock
mov
or
cmpsb
mov
jle
pop
add
cmp
xor
out
repnz
ds
push
repz
sbb
cmp
enter
sbb
sbb
inc
pusha
xchg
mov
sbb
mov
rorb
sti
mov
adc
scas
push
call
lcall
or
or
stc
nop
or
lods
mov
push
notl
and
in
adc
add
and
or
dec
lock
cmpsl
sub
sbb
in
mov
int
stos
les
mov
dec
and
inc
dec
pop
adc
jno
jl
adc
add
jne
pushf
imul
cld
roll
arpl
push
pop
je
jle
lds
push
aaa
cwtl
shlb
jge
and
addl
ljmp
xor
and
stos
cmp
rcll
rorl
test
mov
fs
cmp
daa
hlt
mov
cli
cmpb
out
adc
iret
int
das
bound
jae
mov
mov
popf
xchg
call
jnp
outsb
jnp
les
push
repnz
push
push
sub
fprem
daa
in
into
cmpb
adc
ficomps
pop
outsl
mov
xchg
out
pop
das
sbb
mov
sub
call
xchg
jge
xchg
xor
sbb
aad
mov
jno
divl
imul
lea
inc
ljmp
push
push
sbb
mov
sub
scas
push
ret
das
xor
jmp
ret
push
ss
dec
jmp
ror
mov
dec
dec
sub
insl
jp
sub
shl
push
mov
mov
fs
imul
cmc
je
aas
cmpsl
cmp
in
inc
aaa
xor
sbb
pushf
lock
and
rorl
cs
mov
mov
adc
idivb
pop
cmpsb
mov
cmp
cmpsl
xor
inc
mov
xor
ja
clc
es
stc
mov
rclb
pop
pop
pushf
test
dec
inc
adc
ljmp
xchg
and
sahf
fistpll
jne
data16
inc
sbb
and
push
pop
sbb
movb
into
dec
js
push
test
sti
adc
ja
data16
fstps
mov
pushf
lods
in
push
adc
iret
xchg
ljmp
pusha
pop
js
aam
inc
xchg
fcmovnu
les
cmc
jp
sahf
shrl
cs
mov
insb
xchg
test
mov
arpl
cs
dec
mov
dec
mov
ds
lahf
dec
mov
stc
dec
std
lea
inc
sub
shl
in
enter
dec
fcomip
pop
mov
repz
add
mov
lret
push
lods
inc
outsb
push
pop
and
cmpsl
push
xchg
inc
leave
jnp
movl
fwait
sbbb
outsl
jns
mov
ret
fcoms
aas
shlb
out
fsubrp
scas
icebp
push
jmp
xor
fnsave
out
jns
push
jb
icebp
fstpt
sbb
test
call
popa
xor
push
sti
xchg
cs
int3
into
cmp
push
lods
fstps
push
movsb
mov
sub
push
add
jecxz
jo
in
xchg
mov
mov
repnz
dec
dec
xor
mov
xor
faddl
jmp
arpl
ljmp
pandn
sbb
jmp
cmpsb
fstpl
sbb
and
popf
mov
xor
fisubrl
lahf
push
dec
mov
dec
daa
add
xor
add
push
sbb
pop
call
mov
pop
push
arpl
loop
cld
addr16
adc
and
jg
repz
in
lcall
daa
mov
lods
clc
rorb
fdivrl
mov
nop
xchg
pop
jbe
gs
test
and
das
xor
in
inc
or
mov
call
xchg
xor
fldcw
xchg
popf
inc
lds
add
and
out
mov
sub
mov
push
xchg
call
sti
jnp
mov
int3
sahf
aaa
inc
and
add
dec
jle
stos
aad
mov
imul
inc
andb
test
or
lret
ja
popf
mov
cmp
dec
jae
mov
out
leave
mov
mov
test
jnp
xchg
mov
xchg
pop
jae
xor
cld
mov
arpl
mov
je
je
jmp
jns
push
adc
sub
gs
ror
insb
in
cmc
pop
fld
dec
movnti
repnz
pop
mul
test
fsubrl
cld
xchg
jmp
xorl
test
aaa
test
adc
roll
pushf
in
push
mov
mov
inc
shll
jb
dec
andl
scas
in
pop
stos
push
adc
add
cmp
aas
imul
sti
push
pop
bound
mov
xchg
add
pop
imul
loop
in
add
in
jnp
mov
popl
cmpsl
sbb
and
fs
adc
inc
mov
cwtl
mov
xor
nopl
stos
cmp
pop
jle
pop
mov
ret
mov
mov
lods
dec
popa
psllw
cmp
in
cmpl
insl
arpl
ljmp
inc
ret
dec
jg
out
mov
aad
xchg
inc
xchg
fucomp
jle
in
push
cmpsb
shlb
ficoms
mov
repnz
outsb
in
push
test
mov
fwait
repz
push
pop
rep
push
mov
and
leave
decl
pusha
or
adc
dec
or
ficoml
dec
push
rolb
mov
ljmp
xchg
idivb
mov
out
xchg
lods
mov
add
out
arpl
add
xchg
clc
push
shll
cmp
xchg
repz
jecxz
inc
xor
jmp
mov
or
pop
xor
sub
push
fwait
dec
pushf
mov
popf
and
lret
sub
lods
mul
push
fdivl
rcl
xorb
std
sbb
insb
rorl
in
sarl
inc
nop
inc
adc
enter
xchg
arpl
mov
xor
imul
push
lret
mov
je
cmp
xchg
popa
dec
loop
mov
enter
mov
add
xor
aam
push
jbe
popf
imul
mov
pop
or
mov
cmp
les
or
in
jmp
dec
pop
mov
dec
cmp
and
push
int3
pop
add
xor
mov
xchg
and
cmc
cmpsl
out
hlt
xor
push
adc
sub
xchg
repz
sbb
movsl
sbb
adc
sbb
xchg
jae
adc
inc
lods
push
lar
addl
xchg
adc
pushf
dec
jp
outsl
xchg
and
cmp
or
cmpsl
push
pop
test
push
jbe
int3
cwtl
jp
xchg
sahf
push
jl
xor
push
je
push
cmp
mov
xchg
mov
push
aas
xchg
int3
mov
jle
pop
addr16
into
aad
out
pop
pop
mov
test
lret
or
and
insb
xor
into
xchg
movsb
adc
mov
pop
pop
mov
fcoml
push
out
sbb
inc
fsubs
fdivrl
sbb
leave
fs
lahf
inc
out
mov
in
sbb
test
push
add
in
jmp
das
ja
icebp
lret
mov
jnp
shld
nop
push
xchg
xor
js
loope
sub
jbe
repz
sub
loopne
xor
xchg
test
add
cmp
insl
xor
add
and
add
push
movl
jle
mov
lods
movsb
insb
xor
aam
xchg
mov
aam
out
repz
dec
testb
pusha
les
ja
cmp
popf
dec
push
fwait
lock
pop
push
test
sbb
nop
mov
cmp
cmp
cmp
xor
mov
leave
or
dec
cmp
je
adc
icebp
cmp
rcll
adc
pop
mov
push
and
add
ds
add
sub
das
mov
push
xor
jge
lods
or
xchg
cmpsb
pusha
aam
jno
add
mov
test
push
in
or
ljmp
ret
sub
push
imul
xchg
ljmp
loope
pusha
mov
enter
scas
or
push
push
shrl
daa
push
js
pop
fldt
mov
adc
daa
lods
outsl
sbb
sti
shrl
scas
in
push
mov
icebp
sub
add
cld
pop
mov
sub
out
lods
decb
adc
jmp
push
cmp
test
dec
pop
adc
cmp
sti
lock
inc
cmp
stc
add
loop
movsb
or
ret
ja
test
xchg
mov
sbb
out
jl
roll
jg
sbb
xchg
enter
fbstp
and
pushf
loopne
cmp
push
inc
movsb
mov
rcll
in
fstps
or
divl
cmp
jns
mov
add
or
scas
decl
shll
js
ret
inc
cltd
jno
fwait
jbe
sbb
test
sbbb
mov
cmp
add
inc
mov
pop
stos
inc
adc
jae
les
mov
push
pusha
ret
adc
xchg
sub
push
fmuls
add
repnz
pusha
fadds
inc
push
popa
push
lock
hlt
out
xchg
cltd
sub
daa
aam
adc
ss
and
mov
sbb
sub
cmp
xbegin
push
shll
rcr
mov
mov
mov
xchg
pop
push
mov
sbb
xchg
sub
clc
cmp
xchg
push
ss
xchg
sbb
sbb
in
xchg
jb
jecxz
mov
loop
imul
cmpsl
push
pushf
dec
xor
pop
mov
xchg
and
xchg
stos
cli
idivb
test
inc
adc
xchg
inc
cmp
stos
mov
test
jl
jl
jne
and
lods
push
xor
jnp
andb
rorb
fimuls
stc
stc
sub
inc
push
jmp
xor
repz
inc
push
xchg
cld
mov
or
adc
xor
push
push
je
inc
mov
insb
mov
aaa
jg
addr16
mov
out
aad
pop
inc
aaa
and
xor
pop
sbbb
sbb
pop
sub
lahf
xchg
xor
inc
adc
leave
addl
stos
into
add
push
repnz
or
xchg
std
in
sub
adc
jg
test
jnp
pop
clc
gs
mov
mov
xor
cmp
dec
in
sbb
mov
inc
dec
pop
pop
lcall
es
or
or
call
mov
ret
fldenv
push
xchg
jmp
mov
gs
mov
int3
jb
pop
push
test
fnstenv
xor
sbb
lcall
jmp
insl
addl
xchg
subl
sarl
leave
ljmp
pusha
and
mov
or
sbb
mov
and
dec
xor
insb
xor
sbb
add
stc
ljmp
jge
add
cmc
repz
cmc
scas
imulb
out
ljmp
imul
dec
fdivrl
call
in
repz
mov
mov
push
mov
rol
enter
xchg
movsl
adc
mov
pushf
cs
jle
xor
mov
xchg
cld
cmpsb
leave
repz
and
mov
pop
cmp
rol
and
and
add
adc
iret
nop
imul
push
addr16
sbb
lods
mov
fimull
pop
pop
sub
push
dec
pop
xchg
loopne
push
rorl
imul
mov
lea
jo
sti
sub
inc
sti
insl
add
shll
popf
cwtl
mov
es
mov
push
imul
movsl
fstp
mov
cmpsb
pusha
mov
jecxz
add
out
int
mov
test
xchg
lret
popf
ret
or
jne
aaa
fiadds
or
lahf
jmp
and
inc
and
or
push
ljmp
lea
gs
inc
scas
inc
popf
insb
and
push
test
add
fiadds
daa
sbb
subl
adc
loopne
jo
push
sub
ds
sub
fstl
pop
imul
arpl
sub
xor
inc
or
in
jnp
in
xchg
jnp
out
pop
sbb
imul
mov
or
pop
loope
dec
mov
mov
inc
in
push
sbb
sub
cmpsl
jmp
andb
jl
jae
mov
xchg
inc
clc
cld
xchg
out
lcall
dec
mov
fsubr
sbb
setle
sub
js
ja
or
adc
pop
inc
mov
shl
xor
cmp
mov
shlb
and
sbb
mov
sbb
sub
mov
mov
and
shll
mov
sbb
sub
js
mov
push
push
inc
pop
inc
mul
sahf
out
test
ljmp
mov
pop
ret
in
loopne
lea
mov
mov
push
mov
rcrl
pop
out
pop
mov
push
lahf
pop
lea
sbb
xchg
int
loope
push
pop
xor
in
or
inc
arpl
mov
dec
jns
pop
adc
mov
icebp
adcl
aaa
push
mov
lcall
jmp
cwtl
inc
mov
sub
lcall
mov
jb
push
push
hlt
pop
clc
and
scas
js
sbb
sbb
mov
mov
jno
shrl
cmp
add
jne
add
push
mov
adc
bound
aas
or
inc
cmp
repz
add
sbb
and
xchg
xchg
insl
add
out
aas
dec
and
mov
out
mov
dec
roll
pop
cmp
lock
je
sti
push
mov
and
dec
cli
inc
rcrb
das
int
sub
sub
orb
lods
data16
pop
js
inc
jp
mov
sbb
inc
fcmove
dec
mov
jnp
or
push
sub
sbb
test
inc
shll
or
ret
and
dec
xchg
and
stc
cmp
lods
mov
adc
mov
pop
xor
aas
mov
mov
shll
stc
scas
and
push
push
or
inc
mov
aaa
inc
gs
cmc
mov
loop
test
cmpsl
ds
fistpll
lcall
inc
in
mov
sub
fld
pusha
jg
push
mov
inc
xchg
cmpsl
nop
xor
mov
scas
es
pop
mov
xchg
inc
std
test
cs
adc
setp
jae
xchg
out
mov
cmc
daa
push
jae
stc
and
es
lock
shll
test
out
out
cmpsb
lret
arpl
les
movsb
mov
mov
sahf
in
jecxz
sbb
sbb
insl
mov
sbb
popa
sbb
sti
cmp
jo
jge
lret
pop
fisttpll
push
insl
cmpsb
inc
xchg
sbb
jne
out
loope
inc
je
and
pop
outsb
lcall
jbe
bound
mov
int3
push
cmc
add
fwait
add
mov
rorl
lds
mov
sub
out
cmpsl
ret
mov
jle
mov
stos
and
arpl
inc
cmp
scas
movsb
dec
scas
insb
bts
loope
mov
jge
mov
mov
xchg
mov
mov
dec
mov
out
mov
push
mov
in
scas
jl
aaa
pusha
mov
cld
inc
adc
inc
dec
mov
adc
cmc
cmc
fimull
int
loop
pop
xchg
push
in
pop
pop
inc
add
lods
lret
jne
adcl
mov
sub
clc
mov
inc
xchg
enter
cmp
pop
jp
imul
or
and
inc
sbb
fmull
cmp
and
lret
sbb
fbld
or
xchg
jg
xchg
jg
popa
movsl
adc
jae
sbb
call
mov
dec
add
imul
and
jae
push
mov
mov
pop
push
mov
adcl
adc
fisttps
add
mov
mov
mov
cli
in
fstpt
sub
push
inc
imul
nop
dec
leave
sbb
fidivs
mov
mov
loopne
add
lahf
add
or
pop
cli
push
cmp
out
xor
and
icebp
pop
pop
or
xchg
in
xor
jmp
lea
in
shlb
jecxz
jns
out
insb
mov
insl
add
shl
push
mov
iret
add
sub
jb
sbb
leave
lods
sbb
mov
cmp
lcall
push
xor
mov
dec
cli
mov
call
dec
and
adc
cmpsb
pop
je
xor
jne
loope
dec
call
popa
shll
icebp
xor
mov
and
mov
daa
and
pusha
push
daa
sahf
cltd
sub
sbb
and
xor
add
fsubrl
test
or
cmp
divl
pop
jnp
dec
push
ljmp
pop
shrb
leave
inc
sbb
data16
jno
fwait
lahf
mov
lea
xchg
lods
jg
mov
push
hlt
adc
mov
into
jo
mov
push
mulb
test
sbb
add
mov
inc
sub
pop
inc
test
pop
je
mov
xor
jecxz
test
cmp
dec
jp
out
aad
daa
out
int
cwtl
and
xor
cmc
mov
repnz
pop
cmp
or
inc
outsb
dec
scas
cmp
cli
and
push
jb
mov
insb
fwait
scas
sub
mov
or
adc
mov
mov
aaa
in
leave
fadd
mov
imul
iret
xchg
mov
frstor
mov
dec
sbb
stos
int3
mov
ret
dec
outsb
std
stos
jle
out
jg
ret
xchg
in
cs
popa
push
dec
push
ficompl
push
das
enter
push
into
shll
into
out
out
gs
pusha
push
cld
mov
xchg
push
int
cmp
sub
shlb
iret
push
jmp
andb
adc
out
jne
repnz
mov
rcl
cmp
sbb
inc
jb
and
cltd
ficoml
mov
dec
inc
mov
push
fmul
mov
stos
loopne
and
adcb
lds
sbb
test
dec
cli
inc
rclb
pop
xchg
pop
loop
les
out
sbb
sbb
adc
test
scas
gs
test
or
mov
mulb
lds
xchg
add
pop
sub
pop
adc
test
mov
and
lahf
xchg
clc
insl
adc
ret
adc
adc
and
stos
mov
mov
movsl
add
int3
out
inc
dec
dec
and
out
daa
mov
push
jle
call
ds
ficoms
jno
loopne
xchg
push
and
mov
and
mov
ljmp
adc
out
lret
push
cmp
in
out
fwait
mov
mov
xchg
add
out
out
cmp
rorb
push
pop
outsb
jp
pop
stos
jne
mov
adc
pushf
ret
fdivl
dec
loop
lods
popa
orb
pusha
loopne
sub
jo
lock
dec
in
add
xor
sub
cs
out
pop
inc
andl
sahf
inc
aam
and
mov
jmp
push
dec
xor
out
pop
in
mov
mov
xchg
repnz
or
test
add
and
jle
push
into
cltd
or
push
std
jne
fistl
es
mov
aad
lock
mov
popa
xchg
add
pop
fnstsw
movsl
xor
xor
add
popa
out
sbb
pop
or
cmp
xor
ret
pop
lret
or
int
negl
movsl
sbb
fsts
popf
popa
mov
test
mov
xorb
leave
dec
dec
fwait
sbb
ljmp
test
mov
adcl
mov
adc
mov
jp
mov
sub
sbb
lret
adc
sbb
lock
mov
dec
inc
mov
pop
dec
cmp
dec
test
jns
pusha
sarl
int
mov
popf
orl
mov
aaa
cmp
bound
les
xchg
call
sarb
popf
stos
arpl
xchg
ja
aam
arpl
or
pop
scas
ja
and
and
int3
insb
mov
popf
sti
lods
stos
sbb
mov
pop
int3
and
popa
and
out
cwtl
daa
in
add
xor
cmp
in
mov
stos
push
push
bound
lods
stc
in
adc
dec
fdivrl
mov
stc
sbb
sbb
rcrl
ja
aas
xchg
jge
sbb
sbb
xchg
mov
into
movsl
aas
xorb
fcoml
sub
clc
xlat
cmpsl
jnp
xor
jnp
xor
jno
hlt
imul
ret
scas
incb
xchg
sbb
mov
dec
pop
sub
dec
lret
mov
xchg
add
cli
aas
imul
call
cmp
sbb
in
pop
test
xchg
xorb
sub
pusha
mov
pop
xchg
mov
jmp
pop
lcall
int
loopne
add
stc
xorb
sub
pop
sub
xchg
repz
mov
fs
inc
lods
psllw
jns
and
dec
lods
test
inc
dec
xor
lret
daa
repnz
xor
movsl
fisttpll
leave
es
arpl
subb
push
mov
mov
adcl
mov
and
mov
out
xchg
pop
add
cmpl
cwtl
data16
inc
mov
cmp
fistpl
and
sahf
mov
shl
mov
mov
in
repz
in
or
les
test
sub
and
xchg
jns
dec
addr16
imul
xchg
sahf
leave
push
pop
dec
push
cs
cmp
leave
push
adc
popf
flds
outsl
mov
rcll
call
mov
add
lret
fbstp
sbbl
add
xorb
push
mov
fnsave
fwait
movl
icebp
shl
inc
dec
filds
add
pop
xchg
push
and
push
jae
pop
mov
jmp
inc
std
icebp
sub
sbb
outsl
mov
pop
dec
mov
push
dec
mov
mov
mov
fcoms
xlat
mov
out
mov
sbb
stc
jp
fucomp
data16
test
jbe
mov
xchg
rcrb
xchg
and
push
dec
or
std
dec
adc
loope
or
add
mov
or
pusha
dec
jb
test
jge
stos
jmp
icebp
fcoms
cmpl
inc
xor
jecxz
in
iret
lock
cmp
add
test
out
out
sbb
and
xchg
sbb
push
and
mov
movsl
insl
popa
lods
in
in
pushf
cmp
cs
and
pop
inc
lds
push
ret
clc
xor
jecxz
cmc
ret
testl
scas
daa
fdivr
mov
lahf
dec
mov
cld
jle
adc
sbb
mov
outsl
mov
lock
pusha
mov
xor
jns
stos
sub
push
xorb
scas
add
and
push
lea
sbb
in
outsl
sbb
test
fidivl
divl
aad
fldcw
mov
sub
mov
fbld
pop
cmp
arpl
aam
push
lock
fcmove
imul
mov
push
cwtl
and
and
call
jge
icebp
outsl
xchg
push
xor
repnz
rclb
inc
fnsave
cmp
mov
sub
insl
pop
lahf
or
mov
mov
xor
cltd
fists
cltd
sub
push
pop
popa
scas
das
mov
stos
loopne
dec
mov
out
insb
xchg
xor
pusha
in
inc
add
cmpsl
daa
push
mov
sbb
aam
dec
push
or
mov
cmpl
setb
push
imul
das
xchg
fildll
xor
xchg
sub
mov
jl
lcall
es
or
cli
cmpsl
lahf
fidivl
insl
cmpsl
lea
popa
push
int
mov
imul
xchg
add
mov
jbe
sbb
sbb
out
push
mov
fwait
das
clc
and
and
outsl
cmpb
lock
rcr
mov
push
xchg
stos
shrb
movsl
or
cmpsb
in
add
mov
mov
fidivrs
popf
pop
lea
mov
adc
cmp
jge
add
mov
in
imul
cmp
jecxz
dec
ret
sar
out
dec
xor
pop
andl
push
inc
cmpsb
shrl
fwait
mov
loop
bound
mov
jnp
mov
and
loope
mov
push
push
pop
cs
mov
pop
mov
ret
xlat
fnstsw
adc
adc
test
ud2
call
movsl
xor
bound
fdivl
scas
sbb
cmp
adc
push
push
fsubl
loop
sbb
mov
dec
jne
cmp
or
sub
scas
adc
out
add
adc
fldpi
dec
xor
dec
cli
test
int3
lahf
insl
iret
push
fsubs
sbb
cmp
adc
mov
sub
pop
nop
and
in
lcall
andb
and
out
xor
mov
pop
jne
xchg
les
mull
push
test
in
mov
xchg
add
out
bound
xor
cmp
jno
mov
sub
cmp
xchg
cmp
push
jle
push
or
js
lods
dec
es
in
lock
dec
jg
ss
xor
outsl
cmp
xor
mov
aam
mov
xor
and
inc
sbb
out
ljmp
xchg
jo
icebp
loopne
mov
stc
cmp
sub
popa
int3
jae
pop
dec
dec
in
or
inc
fcomps
inc
outsb
mov
mov
fwait
push
sbb
mov
sub
cld
shr
into
imul
or
outsb
lods
stc
test
outsl
sahf
ss
dec
outsb
mov
ljmp
iret
adc
pop
ficoms
mov
movsl
pusha
add
ret
lret
lahf
cmp
shl
push
inc
push
mov
lahf
xor
push
bound
cmp
gs
fcmovnb
mov
push
retw
ds
pop
outsb
les
inc
test
cmpsl
les
push
add
cmp
mov
in
insl
ret
cmc
lcall
cwtl
lahf
jnp
dec
shlb
xchg
movsb
jecxz
cmp
lds
call
outsb
daa
inc
jle
jo
aad
lods
je
push
cmp
cmp
out
sub
pop
cmc
inc
push
lods
sbb
mov
sbb
add
rorb
jl
mov
pop
jmp
out
add
cmp
adc
xor
fdivrl
jbe
xor
movsl
in
rcll
xchg
xchg
insl
dec
pop
insl
cmp
cwtl
cli
es
dec
xchg
dec
lahf
xor
xchg
sub
rorl
aad
or
xor
jno
lcall
and
xchg
filds
les
mov
push
add
sbb
cs
push
movsl
add
dec
and
cmpsb
sub
arpl
movsb
sbb
test
int
push
jmp
adcl
jno
int
jg
pop
in
pop
out
xchg
mov
pusha
jge
dec
lock
out
cmp
lret
cld
aam
sbb
aas
bound
dec
js
inc
clc
dec
test
insl
divb
cmp
fwait
or
rcrl
jbe
xchg
orb
push
decl
mov
inc
cmp
popa
aad
push
iret
jmp
enter
mov
push
scas
push
outsb
imul
jmp
pop
daa
dec
mov
popa
mov
cmp
mov
scas
imul
ret
jge
outsb
jmp
gs
mov
into
loope
sub
mov
cmp
cmpsl
cmp
mov
dec
fstpt
loope
add
cmpsb
loopne
movb
pop
popf
mov
sub
inc
or
adc
or
push
rcll
jge
sbb
das
sbb
mov
cmp
cmp
pop
out
mov
xchg
leave
mov
aam
mov
mov
inc
mov
test
pop
addr16
outsl
fsubl
push
jb
es
xchg
loop
stos
gs
stos
mov
sarb
push
icebp
shl
stos
mov
ficomps
inc
xchg
jo
int3
adc
adc
and
sahf
mov
stos
add
aaa
push
ljmp
sbb
int
mov
dec
lcall
pop
push
fsubr
mov
sar
aad
mov
pop
xchg
sub
in
testb
push
imul
mov
sbb
pop
xor
xchg
mov
leave
imul
cmp
bound
adc
push
sub
ret
cmp
cmc
jnp
je
sub
push
pop
out
cmp
add
ds
mov
sbb
sub
cli
mov
lret
addl
shlb
sahf
push
mov
repz
xchg
xor
add
push
push
inc
inc
fstps
and
dec
inc
es
jge
pmaddwd
and
dec
stc
lahf
dec
adc
cmp
ljmp
lret
cmp
ss
xor
sti
cmpsb
pushf
fs
xchg
push
add
jne
jb
adc
imul
js
bound
push
shrl
dec
and
adc
fidivl
or
xlat
imul
xor
or
pushf
jbe
mov
fnsave
into
sarl
out
pop
sahf
adc
imul
or
dec
sub
test
out
in
or
mov
test
loop
add
imul
and
xor
mov
pusha
xchg
pop
fwait
sub
mov
bound
js
xchg
push
or
inc
into
ss
std
testb
sub
dec
enter
gs
lock
push
in
sti
cmp
push
pop
outsl
push
mov
sbb
imul
adc
pop
mov
push
leave
mov
mov
xrelease
loopne
idivl
jge
divb
sbb
arpl
sbb
inc
popl
xor
pop
mov
push
loopne
add
fldl
cwtl
add
xchg
add
jl
or
mov
movsb
and
fcmovbe
dec
xor
xchg
loopne
andl
jmp
dec
aad
adc
out
dec
xchg
cltd
hlt
and
dec
jne
mov
stc
cmp
not
fwait
jmp
mov
xlat
out
jl
push
es
sbb
pop
sub
std
xor
xor
dec
lock
add
dec
iret
push
dec
push
addr16
lret
adc
fildll
mov
xchg
pop
data16
inc
jp
jo
fstps
ffreep
add
aam
js
or
mov
je
jecxz
jae
mov
je
stc
in
movsl
inc
jo
inc
mov
push
jp
inc
sbb
std
adc
jge
pop
test
test
test
or
imul
shlb
sbb
and
aad
call
cmpsl
sti
push
inc
mov
shlb
push
negb
in
jb
out
lahf
bound
pop
call
xchg
xchg
cwtl
mov
mov
jne
test
test
jge
jbe
push
pop
and
gs
imul
js
test
add
push
jecxz
adc
fsubr
xor
xor
ja
inc
xchg
mov
std
xchg
in
cmpsl
aad
mov
mov
test
push
icebp
stc
mov
aam
push
aas
jns
in
loop
xchg
jmp
xchg
jns
outsl
out
jb
push
mov
jl
add
push
inc
or
push
adc
outsl
fisttpl
adc
cli
xchg
pop
out
fwait
aaa
xchg
fisubrs
add
xlat
dec
js,pt
test
imul
subl
mull
adc
and
push
jno
push
cs
xor
inc
jmp
loopne
pop
cs
bound
inc
and
lret
mov
sub
stc
mov
jo
sbb
and
sbbb
or
dec
loopne
out
pop
jne
cmc
and
cmc
sub
push
mov
push
xor
rcll
sahf
stc
repnz
mov
bndstx
sbb
pop
cmp
dec
sub
das
jmp
push
sbb
and
adc
pop
and
inc
push
mov
push
xor
jae
iret
jbe
movsb
pop
add
push
enter
cmpsl
add
jg
pop
adc
les
test
mov
pop
mov
inc
adc
into
clc
push
mov
mov
outsl
mov
pop
aad
jmp
push
movsb
cmp
mov
adc
xchg
adc
sbb
sub
lods
lcall
lds
or
in
dec
jge
pusha
xchg
dec
mov
scas
xor
into
test
icebp
rorb
adc
jno
jle
or
xor
arpl
jecxz,pt
cs
fdivrs
lds
or
fstps
adc
jmp
das
fdivl
dec
into
mov
push
pop
jge
and
mov
icebp
cmp
push
pop
stos
sbb
sub
mov
and
aam
jno
fsubr
aad
orb
mov
mov
shr
iret
fstpl
sti
xor
xor
sub
dec
stos
enter
out
fwait
je
mov
aaa
leave
shrb
mov
imul
mov
sbb
nop
sbb
xor
cli
addl
out
xchg
jl
imul
sahf
xchg
outsl
shr
js
inc
scas
pop
cmpsb
push
sbb
xor
push
in
or
push
push
aad
push
dec
das
xor
dec
push
pop
pushf
add
orb
iret
ljmp
jo
lret
stc
daa
fsts
movsb
push
cmp
rorl
aad
rcll
add
xchg
mov
aas
scas
shrb
dec
pop
or
push
cmp
xchg
lret
lods
enter
jmp
sbb
push
test
jmp
cltd
add
adc
adc
jp
mov
mov
cwtl
inc
jg
call
lods
fdivrl
divb
into
xchg
icebp
dec
sti
or
mov
jae
pop
ds
aam
sub
leave
int
inc
in
aam
jecxz
or
sub
mov
push
xor
insl
lods
and
or
sbb
aam
sub
mov
fdivl
cmp
les
stos
and
mov
dec
and
mov
ljmp
out
ret
pop
idivb
adc
pop
xchg
xchg
shrb
jns
je
testl
fcmovb
and
pusha
jg
mov
enter
jne
mov
in
or
sbb
pop
push
cmp
sub
push
xlat
pop
xchg
add
cmp
scas
mov
jbe
les
rcrb
xor
add
xchg
mov
cmpl
test
dec
cmpsb
test
ficompl
test
lcall
out
in
cmpsl
fdiv
jecxz
mov
pop
jno
pop
adc
push
or
movsl
mov
adc
xchg
ljmp
sbbl
mov
mov
imul
or
dec
nop
imul
test
mov
mov
call
push
xchg
xorl
out
jmp
out
dec
addb
or
sbb
mov
and
int
fsubrs
addr16
sbb
insb
mov
insl
dec
sbb
lds
in
scas
aas
sti
jnp
int3
push
and
xor
mov
jns
dec
and
cmp
jno
dec
iret
cmp
add
inc
mov
data16
cmpsb
int
cmpsl
or
mov
in
inc
and
into
scas
movsl
shl
arpl
lods
xchg
pop
push
push
mov
stos
dec
mov
bound
sub
cmp
inc
mov
mov
imul
inc
bound
std
addr16
cmp
xchg
mov
clc
sbbb
in
fiadds
std
push
loopne
adc
push
cld
icebp
nop
imul
enter
shll
fsts
adc
mov
stos
pop
nop
movsb
es
shll
xchg
cs
icebp
xor
cmp
fdivrl
dec
outsb
in
push
les
outsb
mov
sbb
xchg
ss
aad
mov
push
aam
clc
sbb
xchg
sub
adc
inc
fcoms
repnz
sub
and
fwait
mov
dec
lds
xchg
mulb
outsl
pxor
jnp
or
dec
pop
mov
sbb
sub
mov
mov
push
popa
pop
jle
daa
inc
shll
jnp
sahf
mov
inc
sbb
loope
insb
ds
fldl
test
pop
mov
aad
mov
and
sub
loope
pop
outsb
jns
dec
mov
arpl
sti
je
jne
and
jnp
pop
push
mov
cmpb
loop
or
les
xor
fwait
cmc
ret
out
daa
cmc
les
imul
or
lods
stc
leave
mov
into
movsl
inc
sub
int
pop
add
sub
sub
outsb
push
data16
lock
mov
dec
inc
mov
ss
mov
sub
pop
inc
mov
mov
push
pushl
inc
ja
adc
in
sti
ljmp
aaa
xchg
insb
sub
pop
int
jns
movsl
xor
push
daa
ljmp
push
adc
insb
lea
cwtl
fisubs
lret
das
cmp
lods
or
sbb
xor
xchg
inc
cmpsl
dec
jecxz
mov
call
shl
sbb
push
movsb
pushf
icebp
sbbl
cmp
mov
jbe
xor
push
orb
and
add
mov
lcall
add
sbb
inc
and
leave
popa
sub
jg
pusha
jle
xchg
mov
call
xchg
aad
jp
push
cmp
pop
imull
out
jge
lock
lahf
sub
cmc
pop
xchg
adc
pop
push
and
out
dec
push
dec
aaa
pop
sub
aam
shll
sbb
repz
into
xchg
fimull
sub
mov
pop
insb
js
mov
mov
mov
pop
cld
push
inc
or
cmp
data16
dec
or
cwtl
fcompl
dec
sahf
sbb
loope
lods
push
clc
daa
les
sub
push
mov
mov
pop
stos
push
sbb
mov
cmpsl
jg
xchg
xlat
data16
mov
popf
es
scas
mov
inc
cmp
in
push
sub
loope
mov
pop
push
test
jge
inc
mov
pop
mov
mov
or
fsts
jmp
loop
mov
insl
fsqrt
orl
dec
fiaddl
fs
jno
jmp
leave
test
jb
mov
sahf
add
sbb
xor
or
insl
cmp
gs
cmp
cmp
xor
popf
pusha
dec
js
sbb
ret
hlt
lds
lods
arpl
das
add
ret
rol
or
mov
mov
jmp
lods
cli
pop
jne
jbe
frstpm(287
xor
sbb
adc
push
pop
push
and
je
mov
mov
aam
mov
mov
or
sbb
or
push
cmp
out
mov
imul
lds
stos
rcl
mov
movsl
aad
cmpsl
add
pushf
push
add
loopne
movsb
pop
xor
mov
scas
xchg
sub
pushl
dec
jmp
out
dec
iret
pop
inc
js
dec
stc
pop
xchg
xchg
or
jne
mov
sbbl
int3
jge
xlat
mov
dec
jmp
lods
lods
loop
dec
mov
mov
jns
lret
xchg
sbb
push
popa
xor
leave
mov
std
or
sahf
data16
rorb
adc
mov
mov
ja
daa
icebp
xorl
mov
dec
jl
add
inc
xor
mov
insb
mov
pop
subl
cmp
cld
nop
mov
scas
lahf
movsb
in
inc
scas
mov
orl
sub
cmpsl
sahf
push
jge
pop
adc
sbb
mov
pop
out
jge
es
mov
cmp
pop
push
dec
xchg
out
push
and
outsb
jne
or
sbb
stc
stos
fcmovnbe
lods
mov
loopne
mov
jne
daa
jp
cmpsl
sub
cmp
mov
out
iret
into
inc
cmc
insl
jne
xchg
fld
xchg
sub
sub
test
xor
mov
stos
mov
cli
inc
outsl
dec
xchg
dec
fcmovb
ret
stos
mov
mov
xlat
test
dec
pop
mov
shlb
xchg
pop
xor
cmpsl
jno
dec
mov
cmp
sbb
out
js
push
pop
loopne
call
dec
mov
repnz
sub
sbb
mov
scas
and
sub
xchg
jnp
cmpb
jnp
jcxz
in
pop
push
jns
cmpsb
mov
inc
push
sahf
push
dec
sub
scas
mov
jge
cli
mov
sub
mov
jmp
rcrb
sub
sbb
ja
lcall
jge
stc
xchg
jmp
nop/reserved
popa
dec
cld
jg
cmp
mov
aaa
push
cwtl
inc
adc
jb
movsl
push
insl
fcoml
es
xchg
push
sub
sahf
and
fldt
jno
je
rcll
xlat
sbbl
inc
fs
cltd
mov
sbb
mov
outsb
stos
add
cltd
or
icebp
ss
xchg
or
out
mov
cmpsb
lea
pop
mov
fwait
jle
cmc
sub
fiaddl
test
imul
pop
fs
and
mov
int3
nop
push
stc
das
mov
inc
jo
dec
popf
pop
pop
push
lea
dec
ret
cmp
pop
mov
pop
and
in
mov
fidivl
cli
and
dec
aaa
je
je
cmp
cld
pop
insb
adc
sub
movsb
stos
nop
nop
es
sub
xchg
push
jle
lods
cmpsl
mov
data16
dec
inc
aas
outsb
fwait
in
mov
incb
inc
sahf
adc
inc
popl
add
push
mov
jp
adc
dec
sub
popa
cmp
movsl
notb
and
cld
in
dec
lods
mov
pop
adc
in
mov
out
lret
sub
mov
cmpsl
nop
xor
mov
push
shrb
push
sbb
mov
dec
jo
mov
mov
loope
mov
les
jb
bnd
mov
clc
inc
hlt
and
addb
inc
pop
push
pop
xchg
icebp
nop
scas
iret
adc
dec
add
adc
mov
pop
add
xchg
outsl
push
imul
mov
out
add
jmp
xchg
jno
mov
xchg
fs
das
bound
enter
ss
sbb
xor
dec
jg
movsl
sbb
dec
fidivrs
les
aam
or
xor
pop
pop
push
xor
sub
jbe
arpl
aas
addr16
popf
insb
stos
out
lcall
inc
add
or
lock
pusha
mov
mov
gs
xlat
adc
pop
and
cmp
daa
fwait
push
into
das
movsb
pushf
inc
loopne
and
cwtl
cwtl
lcall
dec
adc
fistps
imulb
in
jb
add
leave
inc
sbb
nop
cmp
xor
ljmp
sbb
loopne
sarb
loop
mov
dec
popa
call
in
mov
insb
fidivs
das
pop
mov
sbb
gs
cmpsl
ds
sub
lahf
dec
inc
and
aaa
in
sti
mov
idiv
jo
inc
pop
pushf
lods
shll
cmp
cmpsl
push
and
or
aam
xchg
push
pop
sub
sbb
leave
lea
inc
xchg
pop
ret
adc
sbb
jnp
mov
outsl
inc
stc
xor
sub
fdiv
push
mov
in
cmp
in
jp
into
cmp
loope
hlt
mov
lods
xlat
addb
movsl
jmp
iret
inc
adc
jecxz
jae
push
pop
jo
push
cmp
andb
mov
ja
push
ret
push
push
std
fcomi
xor
into
daa
lcall
les
mov
or
sub
push
xchg
or
in
jne
sahf
cltd
xchg
jmp
dec
repnz
pop
sub
lret
jl
mov
rcrb
ss
jnp
subb
push
or
test
fwait
dec
shr
push
xor
cmp
sub
fistl
cltd
loopne
sarb
push
scas
orb
icebp
leave
sub
pop
ljmp
cmp
and
leave
sbb
sbb
outsl
mov
shll
or
and
mov
sbb
out
sub
cltd
dec
daa
pop
xorl
mov
and
das
daa
in
pop
shll
sub
push
dec
adc
or
out
and
arpl
daa
repnz
sub
sbb
sub
pop
popf
daa
iret
add
imul
fwait
hlt
ja
popa
add
icebp
xchg
fwait
sarl
cmpsl
and
popa
cmp
outsb
mov
je
mov
je
push
sub
aad
pushf
stos
add
push
mov
test
xor
cmp
push
mov
xlat
arpl
mov
rol
xchg
mov
mov
adc
mov
push
jge
les
shrl
jmp
jle
fadd
movsb
xchg
rol
ds
outsb
push
pop
xchg
push
das
and
add
cmp
mov
dec
int3
ret
or
adc
mov
mov
aas
dec
inc
mov
sbb
lret
mov
aaa
mov
and
out
test
jl
inc
adc
push
or
das
outsl
mov
ja
jae
jl
push
cmp
icebp
pop
daa
inc
inc
icebp
rolb
xor
leave
sbb
add
in
popa
or
push
cld
mov
mov
push
sbb
clc
push
jl
ret
mov
xor
loop
sbb
ret
jbe
pop
push
push
rcrb
inc
cmc
cwtl
sbb
add
sbb
stos
sbb
int3
arpl
xchg
mov
popa
push
arpl
fs
jb
jl
jne
and
cmp
call
adc
pushl
mov
cwtl
mov
cltd
orl
cmc
cmp
js
leave
pop
dec
mov
mov
lret
inc
mov
stc
sahf
aam
push
push
push
sub
xchg
rorl
mov
adc
test
lods
lods
loop
lahf
subl
jmp
inc
inc
cmpsl
xor
add
inc
bound
xchg
cmp
sub
scas
sbb
push
clc
xchg
add
sbb
outsl
xor
sub
pop
stos
jne
xchg
cli
adc
push
adc
div
int3
xor
xchg
push
loop
mov
cli
aad
dec
inc
sbb
xchg
jb
hlt
ret
andl
jmp
add
adc
sub
cmpsb
int3
cld
mov
les
push
and
mov
dec
adc
leave
jecxz
xor
adc
int3
inc
pop
and
ja
jle
push
popa
call
add
and
pop
cmp
mov
sub
lock
loope
clc
cmp
and
mov
lcall
dec
fsubr
pop
xlat
add
add
in
dec
icebp
xor
add
nop
adcb
or
jno
mov
shrb
fiadds
push
dec
mov
lock
and
repz
shlb
iret
test
push
dec
add
inc
insl
inc
fbld
sbb
or
loope
jb
sahf
fdiv
outsl
add
iret
clc
test
cmp
push
xor
jmp
mov
inc
fucom
xor
sbb
nop
mov
inc
aad
int3
push
test
inc
icebp
mov
movsb
popf
in
aad
les
test
gs
push
addr16
inc
jbe
ret
jp
jmp
mov
mov
popf
xchg
adc
out
sbb
faddp
mov
das
inc
xorb
aaa
ss
adc
imul
adc
pop
push
aam
add
sahf
mov
repnz
sarb
pop
repnz
scas
or
jne
adc
lahf
icebp
inc
js
push
cltd
int3
jbe
out
sub
fmul
call
jmp
jg
insl
and
notl
test
jno
pop
cmp
pop
mov
andl
push
add
cmp
and
iret
popa
rolb
call
mov
ds
aam
pop
test
and
adc
clc
outsl
ljmp
xchg
dec
lock
pop
shrb
inc
scas
mov
rolb
lahf
add
lea
push
scas
dec
and
loopne
scas
sbb
cmp
and
rorb
sub
std
inc
jp
lods
jecxz
pop
loope
push
mov
inc
xor
pop
pop
or
pop
push
hlt
inc
and
rep
push
ss
jo
jmp
xor
xchg
mov
test
jne
shl
sahf
push
adc
icebp
push
add
and
or
jbe
movsl
jne
dec
cld
mov
inc
out
rolb
data16
fwait
enter
leave
aam
je
adc
insl
test
je
adc
xchg
jno
cld
and
mov
sarl
ja
int3
lock
movntps
xlat
mov
jo
ret
stos
out
out
xchg
jecxz
push
stc
pop
pop
lock
sbb
cmpsl
mov
push
adc
jecxz
and
dec
repnz
xchg
pusha
outsb
cmp
cwtl
jns
sbbl
flds
insl
sbb
lock
pop
pop
adc
mov
pop
sub
adcb
aaa
xlat
sub
pop
jl
mov
repz
push
je
repnz
sbb
or
mov
dec
cs
ret
jp
xchg
clc
cli
dec
in
ja
sti
sti
fwait
bound
out
dec
jo
mov
jmp
out
sahf
jp
push
push
dec
adc
mov
es
cmp
aam
aad
fildll
push
sti
jb
pop
inc
std
xchg
mov
fiadds
and
bound
jmp
jnp
jne
pop
outsl
inc
ljmp
push
and
mov
push
push
push
fisubs
popf
inc
mov
aam
inc
cwtl
icebp
mov
mov
push
sbb
push
or
addb
pop
add
imul
cmp
scas
mov
pop
mov
stos
test
xchg
xchg
pushf
lahf
or
push
addb
bound
sti
shlb
fadds
fstpt
and
jo
fbstp
icebp
add
outsb
mov
lock
int3
sub
fidivs
test
inc
fldpi
adc
mov
out
push
adc
inc
cmp
pop
lret
or
icebp
scas
nop
push
mov
push
and
jp
fucomip
adc
filds
pop
test
scas
daa
rcrl
sub
scas
testl
push
aad
popf
add
das
fstps
sub
movb
lds
testl
test
pop
mov
sarb
cmpsl
repz
shlb
aaa
adc
xor
imul
jmp
ja
inc
ja
loopne
int
mov
or
sub
in
int3
lods
sbb
xchg
cmp
decl
pushf
orl
pop
inc
stos
or
lret
jns
and
pusha
mov
push
jg
lods
ja
fcomps
xor
and
pop
push
cmp
jge
dec
push
out
dec
and
push
mov
cmp
pushl
pop
sbb
lock
or
jge
call
mov
add
scas
sub
cmp
and
jl
mov
scas
bound
add
stos
xor
push
cmp
xor
fs
into
xor
gs
ss
push
jecxz
jnp
jae
jbe
sbb
mov
arpl
subb
sub
add
aam
cmp
dec
lods
inc
movsb
add
addr16
pop
fstps
ret
mov
arpl
jp
enter
daa
xchg
jg
mov
pop
stos
pushf
mov
pop
hlt
sbb
or
dec
xor
or
or
call
jecxz
loope
fistpll
sahf
inc
in
lods
daa
dec
outsl
fnstcw
dec
aad
shll
jno
jl
icebp
icebp
jbe
call
lods
rcr
pop
push
cltd
jl
fldpi
push
repz
cmpsb
lcall
call
cmp
lods
and
pop
nop
mov
ds
addr16
mov
sub
addr16
mov
and
fmul
adc
adc
xchg
fs
icebp
mov
scas
jmp
data16
sbb
loop
rcr
push
push
jno
mov
mov
sub
push
add
das
js
jo
inc
lret
sahf
dec
push
fwait
rcrl
xlat
jmp
dec
jmp
sbb
push
jl
je
mov
ljmp
ret
cmpsb
js
lret
idivl
aad
mov
pushf
add
mov
mov
or
test
out
jns
outsb
and
jge
push
add
popf
sub
movsl
lds
js
aad
mov
mov
xor
xchg
mov
xlat
les
jne
mov
mov
pop
mov
adc
push
adcl
rcrl
out
add
or
cmpl
lret
pop
add
sub
mov
ljmp
imul
punpckldq
adc
jp
fadds
arpl
mov
in
dec
inc
ret
ja
loopne
xor
xor
aad
out
cld
pop
push
mov
scas
cli
pop
inc
push
pop
jecxz,pn
inc
add
stc
iret
or
fisubs
xor
scas
ja
loop
mov
adc
lock
stc
fldcw
sub
push
mov
push
cmc
loope
popa
add
mov
fdivs
xchg
mov
mov
mov
sbb
mov
pop
lret
jo
dec
lods
inc
push
movsb
mov
sbb
sbb
xchg
cli
adc
mov
jo
and
xor
xchg
dec
inc
pop
subl
xor
xchg
test
lret
mov
cmpsb
in
jno
fimull
jp
loopne
cmpsb
pop
idiv
push
or
xlat
in
cmp
in
divl
je
mov
xor
mov
lret
cld
xor
jp
jbe
pop
loope
lcall
iret
add
loopne
iret
mov
clc
and
adc
lods
jecxz
call
sub
and
stc
sbb
movsb
inc
out
xchg
fcompl
fmul
and
and
push
pop
mov
sbb
cmpsb
cmp
mov
cmp
jo
fistps
loope
xchg
add
and
pop
repnz
iret
sbb
dec
movsb
enter
movb
jge
xchg
scas
cwtl
arpl
and
xor
jne
imul
push
inc
mov
fstpt
std
mov
bound
stos
hlt
and
mov
push
int3
push
fldenv
leave
aas
jns
push
dec
fcomps
cmp
js
and
fbstp
xchg
lahf
popf
cld
daa
sbb
mov
mov
rcll
inc
or
sub
xor
loopne
ds
outsb
pop
and
xor
stos
adc
push
ds
push
xchg
out
stos
ja
imul
mov
sub
push
stc
mov
pop
jle
test
fcompl
sbb
repnz
sbb
cmc
pop
mov
les
push
in
pop
fsubp
cmp
lock
add
sub
stos
adc
inc
cltd
pusha
inc
add
and
adc
outsl
inc
inc
and
jp
and
lret
sub
sbb
mov
cmp
mov
mov
outsb
fcoml
or
adc
xor
int
xchg
or
repz
bound
scas
je
or
icebp
lahf
iret
adc
sub
and
jg
mov
mov
pop
add
mov
stc
push
nop
ret
stc
hlt
shl
jb
and
and
jb
gs
fimuls
inc
dec
inc
test
aaa
jl
fistpll
jg
int3
ljmp
bound
or
mov
mov
mov
xchg
aaa
movb
jl
pusha
das
mov
xchg
lea
dec
dec
mov
and
add
mov
in
hlt
xchg
push
jno
dec
mov
push
push
xor
fnstcw
mov
sbb
push
cmp
and
aaa
cwtl
scas
or
movsb
mov
lods
push
xor
int
int
pop
sub
adc
push
ja
cmp
dec
sub
sub
in
sti
inc
mov
inc
cmp
in
or
in
aas
or
repnz
out
int3
imul
cld
shlb
out
pop
sbb
xlat
out
sahf
clc
scas
or
sub
mov
jnp
mov
inc
and
popa
shlb
mov
add
sahf
mov
sti
jp
faddl
in
lea
lcall
mov
mov
mov
stos
imulb
std
sti
shll
jnp
adc
mov
dec
mov
or
call
lds
inc
lock
jae
fimuls
lret
idiv
lret
mov
mov
add
inc
push
das
imul
and
fcomi
int3
adc
das
in
jne
cwtl
mov
enter
bnd
loop
aas
lahf
add
push
mul
fisttpll
pop
mov
hlt
pop
loopne
loopne
push
lcall
ss
aaa
loope
in
add
outsl
sub
cmp
sbbl
loopne
dec
loop
adc
sub
or
push
arpl
inc
inc
fldt
repnz
push
cld
pusha
cmp
mov
or
mov
push
lds
sub
sti
pop
out
sbb
cmpsb
adc
adc
insl
or
rolb
popw
mov
cmpl
inc
jbe
xchg
push
nop
adc
lahf
push
jo
mov
sbbl
into
in
pop
mov
sbb
dec
mov
jecxz
mov
xor
xchg
pushf
push
imul
add
rcll
rclb
and
and
inc
and
mov
lret
enter
jmp
idivl
inc
lods
lret
decl
push
mov
imul
sub
mov
and
and
cmp
mov
push
add
or
and
add
iret
gs
in
push
aam
mov
cmp
decb
xor
sahf
pop
insb
stos
scas
dec
mov
add
mov
out
add
cmpsb
dec
xchg
enter
out
mov
sbb
xor
lds
push
adc
jb
sbb
mov
xor
lods
fldcw
hlt
aam
scas
pop
arpl
addr16
sbbb
pop
inc
sub
cmp
sbbb
movsl
aaa
add
cmpsb
pop
movsl
stos
sbb
ret
lods
lock
pusha
pop
in
push
inc
stc
je
sub
adc
ja
loopne
lds
nop
lds
pop
xchg
add
loope
sbb
adc
lods
or
xchg
mov
popa
add
test
ljmp
inc
cmc
popa
fistpll
or
mov
popa
cld
xchg
cmp
sub
xchg
outsb
add
pop
pop
js
into
pop
ret
inc
xorb
xor
lea
mov
sti
mov
mov
insb
or
pop
mov
imul
test
jae
push
stos
in
scas
stos
or
pop
sahf
rcrb
test
sub
outsl
and
es
cmpsl
jmp
int
push
cmp
and
sub
push
jle
movsb
lods
xacquire
mov
lds
cmp
fmuls
je
mov
dec
movsb
sbb
jg
sti
jns
inc
scas
gs
scas
add
push
out
cltd
push
jne
mov
and
push
dec
jns
cmpb
int
mov
mov
mov
cmovs
dec
aad
inc
xor
and
rcll
lods
add
xchg
jmp
cmp
add
ficoml
out
mov
jo
push
fidivl
repnz
lahf
sbb
int3
out
sub
sbb
push
ja
sbb
cli
or
jns
lahf
dec
das
pop
pop
or
orb
xor
js
enter
out
test
je
or
xchg
jmp
adc
pushf
fsubr
pop
push
or
out
inc
lea
loop
ss
sub
pusha
cmp
fimuls
jl
cmp
sti
mov
cwtl
and
shrl
adc
xor
cmp
adc
mov
lock
leave
pop
rolb
decb
mov
pop
imul
hlt
inc
stc
stos
mov
sub
lea
mov
pushf
xor
inc
xor
mov
lret
push
fwait
pop
cmovo
mov
push
movsb
sub
and
clc
mov
pushf
rorl
rorl
lahf
adc
pop
inc
js
and
xchg
test
ja
addr16
push
mov
jmp
stos
ret
cltd
xchg
loope
mov
xor
in
pop
repnz
mov
pop
loope
jbe
int3
push
out
cmovp
lock
push
cmp
jl
sbb
and
das
insl
sbb
cmovbe
sahf
sub
push
mov
aam
cmp
mov
sub
xchg
pop
or
stc
or
push
popa
test
pop
mov
and
cmp
fcmovb
jg
adcb
add
push
insl
xchg
dec
mov
sub
jge
sbb
dec
data16
lret
mov
clc
mov
lods
xchg
aad
add
ficomps
dec
fidivl
mov
mov
dec
scas
or
nop
cmp
push
scas
aad
ja
scas
mov
dec
fnstcw
fcoms
push
sub
mov
mov
adc
cmp
in
js
fnstcw
shlb
xchg
lds
jne
dec
aad
pop
and
jae
das
xchg
lret
aam
sbb
ljmp
mov
insb
ljmp
lods
cmpsl
or
push
lea
or
iret
jge
push
call
test
jns
insb
mov
bound
pop
out
nop
mov
mov
jg
push
adc
add
dec
cmc
mov
pop
jle
insl
cmp
popf
aas
outsb
lret
in
test
mov
nop
cmpsb
and
pop
sbb
jecxz
fsubrs
xor
cmp
cltd
pop
cmp
fwait
in
or
icebp
xor
xor
xchg
arpl
cmp
popl
mov
ja
ljmp
iret
xchg
sbb
ret
mov
inc
out
xchg
sub
cmpsb
mov
cmp
mov
outsb
pop
xor
jl
or
lret
iret
xchg
push
jp
fsubr
cmpsl
sbb
das
loopne
dec
div
testl
mov
into
out
push
sbb
nop
xor
out
popa
xor
inc
xchg
xor
aad
mulb
jo
ficoms
or
pop
imul
fstpl
adc
mov
push
movsb
je
out
xor
insb
mov
dec
idiv
loop
push
ret
je
jmp
and
push
in
xchg
popf
dec
sbbl
sbb
test
shll
mov
jnp
fnstenv
xchg
movsb
mov
lret
faddp
lret
dec
cmp
adc
sub
mov
xchg
data16
cld
mov
jle
dec
sub
lret
call
popf
jns
repz
vmread
leave
xor
lahf
push
sbb
das
mov
in
jns
sbb
loop
rcrb
testb
sarl
les
test
out
lods
sti
loop
xor
cmpsl
ret
adc
arpl
jbe
out
jp
jnp
inc
mov
lock
rcl
test
pcmpeqb
push
mov
pop
repnz
adc
sbb
movsb
mov
insb
das
clc
addb
jp
aad
movsb
dec
rolb
jg
add
inc
add
push
mov
push
push
pop
call
into
dec
xchg
jbe
mov
mov
pop
shrl
stos
sbb
test
or
inc
loop
stos
out
or
or
movsb
jmp
mov
daa
dec
das
pop
pop
sub
sbb
inc
jmp
push
clc
xor
repnz
cld
adc
outsb
cmp
sti
pushf
cmpsl
push
and
sub
dec
cwtl
and
mov
sub
jle
and
pop
fisttps
mov
inc
adc
inc
shrl
jne
lods
or
in
aaa
popa
inc
insl
push
lods
int
jo
sub
adc
stc
mov
imul
and
pushf
adc
ja
add
shlb
adc
push
sub
mov
xor
dec
div
push
mov
mov
loope
mov
scas
xchg
dec
sub
out
fsubrs
sub
jp
mov
test
jg
push
bound
mov
dec
or
mov
test
je
sub
cmp
push
inc
and
rcrl
jge
jge
cmp
outsb
sbb
dec
inc
push
nop
mov
scas
orl
in
stos
je
roll
scas
adc
addr16
loop
mov
lret
mov
pop
add
jne
push
and
dec
loop
or
jne
pop
lods
flds
cwtl
xchg
push
cwtl
dec
insl
inc
jmp
push
push
outsb
mov
cmpsb
mov
in
jmp
mov
pop
push
jo
sub
punpckldq
add
data16
aam
lods
xor
dec
inc
dec
push
xlat
cmpsb
outsl
aaa
into
mov
ljmp
and
pushf
aam
lods
shld
xchg
adc
test
fidivl
sbb
jecxz
imul
dec
loope
sbb
pop
stos
pop
out
leave
and
push
dec
inc
pop
cmpsb
xchg
mov
xor
adc
xor
pushf
mov
mov
xchg
pop
sbb
iret
sbb
aad
outsb
xchg
shrb
popf
ss
popf
push
pop
dec
or
cltd
jecxz
push
mov
aaa
add
lahf
sub
mov
push
cwtl
scas
inc
and
inc
mov
inc
decb
out
outsb
mov
sub
pop
out
sbb
jp
enter
out
xchg
and
out
adc
dec
pmullw
inc
or
mov
pop
nop
mov
leave
jo
xor
lcall
push
scas
push
and
dec
jg
xor
mov
leave
andb
aaa
sbb
das
in
mov
jbe
pop
test
adc
jbe
sbb
std
and
outsb
inc
fists
push
xchg
decl
mov
outsl
shl
out
pop
push
insb
pop
dec
cmp
cli
loope
negl
out
cld
dec
sub
stos
ror
adc
imul
or
js
dec
inc
insb
jle
xchg
sub
adc
push
gs
bound
ss
test
cmc
pop
xor
push
lcall
rorb
lods
out
mov
lock
inc
push
mov
push
mov
stc
mov
or
and
pop
out
mov
add
xor
mov
fmuls
sar
fistpl
sub
lret
inc
jno
mov
cmp
je
enter
out
hlt
xchg
test
jecxz
shl
fldt
pop
out
and
clc
xor
sbb
mov
adc
test
imul
insb
shll
add
or
cmp
dec
fcmovnbe
loope
adc
cmp
push
jmp
jnp
inc
loop
insb
xchg
rolb
jp
ret
cltd
lods
fstpl
lcall
push
sti
mov
fcomps
sub
cmp
sbb
sbb
push
add
shl
popa
xor
imul
pop
fsubl
loopne
je
push
add
bound
pop
iret
mov
xor
lds
repnz
add
test
mov
fnstenv
sbb
int
movsl
sub
inc
xor
xor
dec
cli
movsl
lea
or
push
push
xorb
ljmp
gs
mov
mov
xorb
xchg
mov
lods
loope
in
push
cltd
subb
mov
or
jmp
std
adc
fistl
pop
mov
mov
sbb
call
mov
mov
gs
or
es
push
lods
jae
xor
cmc
mov
aam
adcl
mov
or
js
inc
mov
add
xchg
and
shll
daa
dec
dec
jne
loop
push
mov
add
and
adc
lods
call
les
xchg
push
jb
ror
repnz
dec
flds
je
dec
adc
jnp
mov
into
push
fdiv
mov
fbstp
mov
add
loope
std
jae
bound
shr
mov
adc
lahf
cmp
inc
mov
jecxz
insl
movsb
xchg
rol
out
fidivrs
fidivrs
call
pusha
cltd
pop
hlt
repz
aam
loope
and
aas
jbe
loopne
fdivp
imul
xor
jns
in
and
dec
shrl
loop
pusha
sbb
nop
sbb
dec
mov
jg
mov
mov
or
fstl
scas
push
sbb
mov
inc
fmulp
push
test
push
pop
add
pusha
lea
sbb
dec
jb
mov
in
mov
icebp
pop
popa
cld
int
mov
scas
movsl
gs
je
sbb
and
out
repnz
imul
cmpb
cmc
lods
loope
test
loop
cmpsl
and
mov
leave
outsl
pop
mov
in
pop
sub
daa
xor
xor
out
loop
into
outsb
xchg
mov
addb
fisttpl
in
mov
jecxz
and
mov
cs
dec
adc
stc
hlt
fildll
push
push
push
lahf
pop
stc
or
dec
pop
dec
rcrl
fildl
in
mov
js
jg
jbe
inc
push
ficoml
push
mov
adc
test
scas
into
and
jne
jg
sub
ljmp
jmp
jo
fs
sub
bound
adc
add
xchg
mov
sbb
cmc
mov
addb
sbb
jnp
in
mov
add
lods
mov
inc
call
mov
aas
xchg
aad
xchg
mov
sub
push
fldl
fimuls
and
popf
cmpsb
mov
jp
push
pop
mov
mov
jge
stc
xchg
mov
in
add
fs
jo
imul
inc
jbe
push
mov
loop
pusha
popf
push
push
xor
cwtl
push
ja
sbb
addr16
fnstenv
mov
inc
pop
popa
cmp
dec
imul
js
dec
cmp
arpl
cmp
pop
inc
in
mov
nop
lods
mull
ljmp
sbb
insl
pusha
sbb
out
cmp
mov
dec
cld
push
out
hlt
adc
pop
push
cmp
sub
sbb
incl
mov
xchg
sub
into
dec
jecxz
jmp
cli
enter
test
add
mov
xchg
or
sbb
icebp
adc
inc
mov
xor
cmpsl
xlat
sub
mov
jle
mov
mov
dec
out
pop
pop
pop
lret
idiv
filds
das
add
imul
push
xchg
push
test
adc
cmp
xor
out
stc
mov
cmp
pusha
dec
jno
pushf
mov
outsl
sbb
loope
inc
int3
pushl
and
ss
aaa
fs
add
shlb
sbb
adc
pusha
jmp
dec
jmp
and
aaa
cmp
mov
jnp
cmpsb
and
xor
les
nop
lock
idivl
int3
inc
inc
addr16
or
inc
sub
scas
cmp
mov
dec
push
icebp
mov
shlb
xchg
daa
outsl
jg
adcb
cmpl
push
push
das
daa
out
mov
fs
pop
cmp
jge
std
std
call
sub
and
inc
loopne
js
mov
sbb
lcall
ja
pop
shrl
and
pop
and
mov
divb
push
repnz
push
xchg
mov
xor
pop
cmc
sub
js
sub
and
push
in
jg
jle
insl
pop
mov
push
sub
out
sarl
sub
mov
stos
xor
iret
flds
xor
xor
clc
orl
int
lock
fdivr
mov
and
cmpsb
rcll
sub
adc
nop
int
cwtl
jbe
daa
push
cltd
sbb
push
scas
test
and
mov
scas
loop
inc
adc
ret
mov
sahf
mov
sbb
sbb
insb
jge
add
push
inc
jb
sahf
cmp
ret
push
mov
dec
push
push
sti
in
daa
add
sub
pop
cmp
lods
ljmp
mov
test
int3
aad
pop
sbb
mov
loopne
enter
adcb
hlt
leave
add
sarl
inc
mov
adc
subb
test
in
stc
jecxz
inc
les
ljmp
ficompl
push
jnp
aad
adc
negb
or
loop
cmpsl
aas
filds
cmpsl
push
adc
lret
repz
cmp
fnstenv
inc
push
add
dec
adc
add
testl
pop
mov
dec
scas
jge
or
dec
dec
test
scas
ret
and
mov
in
aad
push
hlt
cmpb
pop
adc
movsl
add
lods
es
pop
rcrl
xchg
notb
mov
outsb
inc
add
xchg
fs
pop
xlat
push
lods
shl
pop
and
xchg
jge
lea
mov
int3
jle
xor
js
xchg
out
out
in
fimull
jle
out
es
sbb
xchg
rcr
sahf
rorb
xchg
pushf
mov
or
dec
xor
xor
push
adc
pop
sbb
dec
sub
ficomps
cmp
and
shll
clc
dec
push
adc
stc
adc
rclb
icebp
push
sti
rorb
jae
fwait
pop
js
fdivl
rcll
jg,pt
or
ss
or
sbb
xlat
ret
hlt
fisubrs
mov
dec
aam
std
das
jae
scas
lods
lret
js
int
bound
inc
inc
shl
mov
or
inc
sahf
and
xor
add
xor
stos
sbb
nop
jmp
stc
fsubl
roll
subl
add
fninit
cmpsl
pop
xchg
push
dec
fcoml
jge
iret
mov
neg
les
mov
sahf
js
xlat
cmc
bound
mov
iret
shrb
dec
fistpl
out
insb
outsl
push
in
push
dec
mov
iret
iret
mov
inc
adc
lcall
mov
xor
div
scas
popa
adc
repnz
sub
jl
gs
pushf
fidivrs
call
arpl
iret
cmp
shrb
add
jb
mov
call
std
xchg
mov
sbb
pop
jno
orl
iret
push
lock
insb
sub
or
xor
mov
sbb
std
inc
lahf
call
cwtl
movsb
pop
xchg
mov
xor
ret
cmc
inc
ret
int3
pusha
jle
jbe
pop
xchg
mov
icebp
ja
addr16
js
xor
or
ret
ret
out
push
dec
cli
aas
hlt
mov
xchg
jbe
stos
adc
jge
sbb
orl
fsubrs
std
std
daa
sub
push
inc
jae
jae
negb
sarb
pop
stos
xchg
mov
mov
fwait
ja
xchg
das
mov
adc
nop
bswap
test
xchg
aaa
cmpsb
or
testl
ret
out
cli
jns
push
roll
mov
push
js
nop
add
into
xor
xchg
xchg
andb
ds
fstps
scas
cmp
lret
sub
or
and
push
int3
jno
inc
xchg
dec
jp
mov
xor
dec
outsb
in
xchg
xlat
push
jle
sbb
test
lea
test
xchg
or
cmp
jno
xchg
sub
mov
popf
loop
dec
fcoms
xchg
xchg
and
mov
pop
inc
mov
out
xlat
cmp
sti
sarl
add
pop
pop
call
mov
mov
cli
lcall
mov
insb
ret
and
rorl
pop
push
mov
mov
push
les
xchg
inc
lcall
cmp
push
cmp
pop
ja
push
je
or
in
rcrl
js
jecxz
cmp
cmp
and
jb
lea
sbb
mov
dec
in
fnsave
rcrb
add
adc
adc
or
xchg
adc
pop
rcr
jg
test
push
pop
outsl
movsb
sahf
xor
sbb
ret
cld
popl
lcall
mov
dec
repnz
sbb
notb
and
jbe
jp
cmc
jle
adcb
ficompl
xor
sub
mov
fnstsw
cmp
les
mov
orb
xchg
jns
ret
jmp
scas
and
gs
or
call
sbb
mov
jg
pop
icebp
ss
cs
out
cmp
jns
push
scas
jae
ret
pop
pop
push
pushf
mov
pusha
or
out
punpckhdq
loop
jns
mov
je
xor
xchg
in
cmp
cmp
fistpl
add
sub
inc
test
loop
mov
and
fs
pop
inc
xchg
fnsave
cmc
inc
adc
decb
loop
xchg
jl
test
into
lods
sub
pushw
mov
add
fcoml
out
dec
addl
out
test
or
mov
loope
xchg
xor
or
and
fsubs
mov
or
jge
dec
stc
add
cmpsl
daa
data16
and
sbb
icebp
or
adc
sar
ret
outsb
mov
jns
insb
test
lret
iret
dec
shlb
mov
jl
in
xor
shlb
sti
pop
mov
loope
inc
xchg
mov
lahf
scas
mov
inc
ljmp
movsb
mov
pusha
mov
adc
imul
cmp
add
jle
dec
inc
mov
lods
sub
fcomip
jo
jo
pop
iret
dec
outsl
das
xor
insl
inc
push
in
mov
push
jo
out
or
imul
jbe
xor
and
repnz
cmp
mov
mov
rcr
pop
push
mov
mov
hlt
pop
aad
icebp
mov
cmp
lret
mov
fadd
mov
in
sbb
jmp
mov
mov
in
add
mov
and
sub
out
xor
push
jge
mov
je
cmp
mov
add
inc
dec
xchg
lea
filds
jle
lea
imul
cmp
stos
aad
mov
adc
dec
adc
xlat
or
arpl
sub
jo
int
push
lahf
es
add
dec
std
jmp
fsts
call
lods
call
into
loop
or
lea
pop
pusha
test
xor
pcmpgtb
xlat
sar
lods
cs
scas
adc
adc
cmpsb
push
sbb
cld
jne
sbb
cmp
lock
fidivrs
jl
sbbl
in
std
imul
inc
repnz
imul
cmp
cltd
jae
dec
adc
mov
jp
sarb
mov
ret
xchg
push
cwtl
jno
lcall
dec
vcvtsd2si
and
jge
pop
sbbb
add
or
fbstp
lcall
setb
adc
imulb
pop
dec
repz
loope
daa
jb
lock
mov
les
sub
cld
call
mov
mov
filds
mov
dec
insb
mov
sar
and
add
adc
and
hlt
or
dec
or
sub
inc
mov
loop
add
add
aaa
sub
lods
mov
insl
out
mov
fcoms
mov
cmp
jmp
dec
jo
inc
jno
mov
sub
cmp
or
mov
fwait
icebp
xchg
inc
aad
mov
test
lods
mov
sub
push
xchg
fwait
shr
sub
push
jae
scas
fwait
roll
fnstenv
mov
rcrb
cmp
sub
or
ja
jge
cmpsl
das
sti
and
push
mov
jo
jnp
xor
lcall
xor
sub
lret
adc
inc
in
xchg
jmp
mov
mov
cmc
mov
sahf
outsb
inc
fcoml
fwait
test
cmp
std
call
sarl
jl
mov
or
pop
add
jo
loopne
xor
dec
orl
lds
jno
es
jno
dec
aaa
shrb
insl
mov
add
mov
jge
or
insl
jl
push
push
dec
movl
lret
inc
out
xor
ljmp
add
mov
mov
ljmp
test
scas
int3
test
pop
pusha
jno
cmp
mov
push
repnz
sbb
fstp
imul
test
cld
stc
sbb
cmpsb
jno
jp
jg
stos
clc
mov
jo
sbb
test
stos
mov
aaa
sbb
xorb
fdivl
das
adc
sbb
fdivrs
cmp
jp
outsb
aam
ficompl
jb
iret
out
cmp
cli
jp
faddl
jmp
xchg
sbb
jl
or
xorb
or
shrb
push
testb
ss
adc
jge
fs
into
call
fiadds
outsb
push
push
pop
inc
pusha
sub
into
add
mov
movsl
icebp
mov
test
mov
je
xchg
daa
sbb
shlb
cmp
or
or
push
jb
pop
into
adc
into
ja
je
outsl
stos
fmuls
das
dec
xor
ljmp
mov
xlat
test
lret
dec
stos
or
adc
jnp
shl
insl
leave
mov
cs
in
dec
push
fs
loope
push
mov
dec
imul
add
xchg
cmp
push
adc
pop
mov
push
aad
dec
loop
mov
or
test
sbb
out
clc
in
mov
lds
fimuls
sub
or
sbb
mov
mov
adc
push
cltd
shlb
mov
cmp
jmp
jne
push
hlt
shrb
jb
jae
xchg
cmpsb
cltd
cmp
out
dec
sub
jnp
repnz
add
add
add
or
sbb
pop
mov
lock
jbe
sbb
jo
lods
aas
and
add
sahf
call
jo
loopne
lods
inc
inc
sbbl
inc
sti
xlat
in
add
mov
lret
xchg
bound
aas
int
lret
xor
gs
fnsave
into
sub
mov
sub
sub
outsb
inc
adc
pop
jle
out
call
mov
aaa
movsl
mov
sbb
ret
daa
pop
dec
pop
rclb
shrl
aas
adc
or
jne
sbb
add
in
dec
cmpsl
inc
sub
loope
mov
fisttpll
xchg
mov
pop
inc
pop
rorl
xor
addr16
xchg
fldl
je
mov
xor
shlb
push
adc
push
and
jp
imul
push
and
or
add
mov
ds
xchg
mov
dec
xor
and
and
repz
adc
push
adc
call
fstpl
je
movsb
daa
cmp
dec
cmp
fisubs
jl
shrb
pusha
fcom
jmp
sbb
push
ret
mov
sbb
pop
cmpsl
js
ss
popf
xor
adc
hlt
inc
mov
or
jbe
lret
xchg
call
cmp
mov
and
add
mov
int
pop
dec
in
inc
pop
stos
movsl
push
mov
add
jecxz
movsb
outsb
add
and
clc
ss
or
pop
push
and
jecxz
sbb
scas
pop
and
popa
pop
push
out
sbb
in
test
or
cmc
jle
hlt
ret
lret
mov
and
add
test
in
popa
orb
neg
mov
out
mov
fnstenv
jge
gs
ficomps
std
hlt
test
jmp
adc
je
push
push
stos
cld
loop
pop
push
add
xchg
cmp
fstp
jl
pop
jmp
dec
sub
pop
xor
and
xor
cmp
cli
jne
dec
rolb
mov
mov
adc
or
sub
xchg
movsb
push
inc
xchg
ret
xchg
adc
psubsb
sbb
mov
sub
mov
xor
adc
push
sbb
test
sbb
adc
sub
int3
mov
inc
xor
xchg
mov
es
lods
dec
dec
xchg
movsb
in
movsl
push
mov
jecxz
in
mov
mov
inc
cmp
scas
fists
clc
mov
sbb
stos
js
leave
stc
imul
aaa
push
pop
cmp
dec
in
push
fstp
inc
fimull
push
les
jecxz
add
stos
xchg
inc
ret
aad
fwait
mov
push
por
hlt
pop
adc
ret
cmpsl
dec
and
fs
das
out
enter
and
in
adc
and
sub
lahf
mov
jle
les
and
repz
mov
inc
aam
adc
cmp
pop
sbb
cmp
std
and
jmp
jns
sub
mov
dec
rol
adc
sti
negl
inc
dec
inc
sbb
aam
fidivs
mov
mov
pop
or
or
mov
das
mov
or
pop
jbe
xchg
cs
std
movsb
mov
push
dec
cwtl
mov
out
lods
mov
mov
push
add
jb
adcl
mov
int3
out
xchg
mov
ret
movsb
rcrl
mov
mov
add
jmp
in
xchg
pop
lahf
shrl
icebp
scas
les
xchg
sti
scas
inc
fcmovb
cmpb
ss
mov
dec
fwait
lahf
sub
mov
sbbl
mov
dec
out
xchg
iret
add
xor
sbb
sub
pop
or
push
outsl
and
dec
jae
or
jp
outsl
test
xor
push
inc
sbb
daa
shr
adc
dec
mov
dec
xor
scas
shl
mov
mov
and
jecxz
mov
sbb
jge
mov
cmp
shlb
imul
in
xchg
cmp
jmp
cltd
arpl
inc
ljmp
mov
sbb
jle
mov
sub
movsl
sub
xor
push
cmpsb
sbb
mov
push
out
lret
inc
or
aad
rcrb
push
inc
and
faddl
in
add
inc
mov
push
inc
cli
bound
xchg
push
ss
mov
pop
mov
inc
cmpsl
inc
jbe
dec
orl
pop
ja
or
mov
bound
fsub
jnp
xchg
in
pop
out
dec
and
pop
sbb
push
cmp
xor
out
into
jae
and
cmp
push
jns
aam
stc
icebp
sti
mov
les
out
call
jp
or
mov
mov
cli
pop
adc
fcoms
jo
jnp
fsubs
jecxz
sub
jecxz
or
lea
xor
jg
loope
mov
adc
loope
shr
push
pop
cltd
mov
sub
fisttpl
jmp
outsb
aam
pop
and
call
pop
jno
add
insl
cli
out
dec
sub
sahf
popa
or
test
add
int3
and
dec
mov
or
test
push
push
out
lods
movsl
jp
fisttpll
pushf
fldcw
sbb
add
add
loop
pop
inc
jp
dec
out
pop
cs
add
add
mov
leave
data16
fistl
mov
adc
fs
movsl
popa
adc
add
negb
dec
cwtl
imul
addr16
jge
jg
mov
mov
lds
sub
adc
jnp
out
rcrb
pop
sbb
call
outsb
test
and
adc
shlb
pop
icebp
cmc
adc
sub
jnp
adc
mov
sub
addl
sbb
dec
repnz
lods
adc
add
sub
push
lock
adc
stos
div
shl
push
lock
clc
aam
lcall
insb
jns
iret
mov
adc
xor
sbb
pop
xor
mov
cwtl
test
jae
loop
cld
fimuls
repnz
jmp
nop
inc
sub
and
fldenv
ror
out
clc
les
loop
dec
call
insb
mov
fwait
inc
mov
fimuls
pop
and
mov
lds
adc
and
aaa
shr
outsb
sbb
rcrb
adc
and
sub
pop
sub
imulb
xchg
jecxz
sbb
jns
mov
lods
xor
dec
loopne
push
xlat
mov
pop
insb
sub
push
test
adc
adc
pop
popf
js
daa
sub
sub
mov
daa
jecxz
and
pop
add
pop
push
lds
sub
mov
xlat
mov
cmp
jbe
lcall
leave
pushf
into
dec
dec
cmp
cli
or
jg
xor
xor
mov
mov
outsb
pusha
jae
pop
inc
mov
pop
pop
lds
mov
fcompl
or
sub
int
lret
mov
pop
sub
stc
les
cmpsb
clc
adc
xchg
imul
movsb
sbb
adc
mov
daa
sbbb
xchg
add
xlat
insl
mov
push
xor
mov
mov
shlb
std
test
mov
xorb
sub
popl
cmp
mov
xchg
ljmp
cmp
aam
pop
test
scas
fisubl
jmp
nop
std
arpl
outsb
movsl
adc
fcoml
or
stos
jb
jge
loopne
sbb
cli
stos
pop
xor
adc
push
js
dec
and
mov
enter
daa
data16
inc
add
test
cld
sti
cmp
inc
aas
inc
rolb
and
inc
sbb
call
es
int
adc
out
js
inc
jl
sub
push
pop
jp
daa
in
xchg
or
xor
sub
sbb
or
inc
add
xor
jb
mov
cli
inc
mov
cmp
adc
jge
dec
jl
ffree
sub
pop
outsl
jne
mov
test
inc
sub
add
ljmp
cwtl
mov
dec
jne
pop
pop
psrlq
xchg
xor
dec
mov
and
nop
stc
insb
inc
dec
and
pushf
out
dec
or
and
cmc
jl
inc
mov
inc
popl
jge
je
shll
or
sub
xchg
xor
adc
dec
data16
bound
enter
fsubrl
xor
ds
mov
xor
pusha
xor
call
jbe
dec
xor
movups
cli
rep
push
outsl
icebp
mov
stos
aas
loop
in
int
in
mov
dec
mov
outsb
fcoms
xor
stos
scas
or
insl
out
pop
cmp
xor
add
call
jle
push
cmp
ss
xchg
fwait
xchg
xor
pop
sbb
hlt
adc
jecxz
xorl
lahf
xchg
add
mov
push
jmp
push
pop
insl
push
lock
dec
push
jo
jbe
loopne
xor
fcompl
xchg
jp
and
jp
lahf
jg
pop
add
or
xor
int
xor
ror
test
fldl
push
leave
addr16
pop
aad
daa
into
addb
ficoml
popa
notb
or
imul
ret
jge
enter
dec
pop
jle
mov
fistps
out
call
ret
pop
pusha
inc
adc
xchg
imul
push
int
scas
inc
aad
pop
arpl
sub
roll
jecxz
imul
shll
mov
inc
js
xor
das
rcrb
sbb
cwtl
test
int
jg
mov
popa
icebp
or
xchg
stos
xchg
ss
es
iret
es
test
adc
mov
or
adc
mov
addr16
gs
mov
sbb
lcall
inc
sub
xor
in
int3
jecxz
fbstp
push
dec
lret
test
lds
roll
lcall
faddp
xchg
loop
pop
mov
xchg
ret
inc
push
xchg
sub
inc
jg
pop
in
int
push
adc
ret
mov
fcompl
jnp
adc
arpl
pop
into
enter
mov
cmp
test
add
xchg
mov
test
pop
stc
lret
adc
shrb
test
into
jecxz
iret
adc
leave
lods
xor
push
or
addr16
pop
push
loop
or
mov
adc
cmpsl
sbb
xor
fs
shll
aas
dec
cmpsb
rcll
test
sub
fldcw
cmp
mov
outsl
mov
fdivrl
pop
inc
frstor
adc
mov
cld
stos
inc
sbb
clc
mov
iret
mov
in
popf
mov
insb
je
cmpsb
and
jmp
push
movsb
add
sub
dec
jns
mov
stos
mov
pop
jge
push
mov
cmc
insl
mov
iret
lods
adc
jecxz
inc
stos
cmp
sahf
mov
add
mov
icebp
enter
sub
sarb
rorl
and
inc
jnp
leave
or
arpl
lock
inc
jns
cmc
cmp
aas
ljmp
add
in
sub
push
mov
fiaddl
dec
jle
sahf
test
in
enter
test
sub
jae
inc
shrb
mov
idivb
pop
mov
stos
xchg
cmc
sbb
rorb
cmpsl
xchg
ljmp
push
mov
jl
fbld
inc
sbb
push
lds
leave
inc
or
notb
mul
stc
jns
mov
call
mov
ds
loopne
dec
shrl
xor
mov
mov
mov
dec
adc
je
sub
jge
lret
add
xor
dec
adc
cmpsb
cmp
mov
adc
jle
repnz
in
outsb
pop
dec
jmp
push
mov
cmp
pop
mov
adc
rorl
jns
cmp
gs
xlat
stos
addl
and
and
stos
xor
mov
mov
add
std
sar
or
cmp
xor
mov
mov
rcll
dec
aas
pushl
iret
mov
insb
int
mov
stos
push
inc
jae
push
in
daa
pop
lret
dec
xchg
fwait
aas
push
mov
notb
jne
mov
jne
repz
dec
add
mov
cs
in
clc
faddl
adc
stos
sbb
jle
fstpt
cmp
ljmp
xor
fistpll
call
mov
es
lods
sahf
fisubs
pop
sub
cmp
std
insb
sbb
jnp
repnz
mov
lock
test
jecxz
pop
insl
mov
stos
pop
loope
pop
push
icebp
cs
mov
nop
popl
test
and
out
stos
fsubs
cltd
or
movsl
arpl
xchg
divb
fucompp
mov
push
mov
and
mov
cmp
ret
mov
lahf
sub
xor
cmp
jmp
inc
leavew
sbb
jmp
enter
jne
data16
jge
xchg
in
add
push
jge
xchg
orl
les
bound
jmp
jae
test
dec
adc
sub
cmp
scas
fnstsw
std
in
pop
rorl
pop
out
sub
cmp
jns
dec
fisubrl
fisttps
test
add
sub
jne
push
pusha
das
pop
stc
imul
hlt
xchg
outsl
loope
push
out
stc
test
xchg
sub
mov
dec
scas
arpl
lret
mov
jl
pop
icebp
fisubrs
test
lock
icebp
imul
insb
mov
mov
pop
mov
aas
push
xchg
pop
pop
xchg
stc
jl
jmp
or
pushf
subb
jae
aaa
cmp
jne
cmpsb
in
shl
pop
cmp
ds
lock
push
lods
sub
loope
enter
jl
pop
sbb
inc
lock
mov
jnp
ljmp
repnz
or
rcl
and
ret
add
mov
inc
xchg
pop
inc
scas
cwtl
inc
push
leave
mov
xlat
inc
jmp
xor
xor
leave
fnsave
sub
pusha
pop
xor
enter
in
sbb
cmp
or
orl
push
add
fdivrp
adc
rorl
push
adc
repz
out
push
stc
sahf
cmp
mov
fldenv
mov
jecxz
adc
sbb
mov
and
mov
sub
outsb
and
adc
lock
xor
inc
jns
in
jmp
xadd
cmp
ja
jnp
dec
popa
push
aaa
sbb
adc
jp
loopne
add
sbb
mov
mov
ljmp
jbe
lock
je
movsb
xor
inc
loopne
lods
cltd
imul
adc
push
cli
jb
push
push
add
push
mov
stc
outsb
dec
pop
jno
xorb
and
push
test
dec
mov
add
xchg
jb
insl
imul
sbb
fldenv
push
mov
or
and
repz
test
in
xchg
pop
out
repz
inc
sub
pop
push
xchg
aam
stc
nop
ljmp
in
inc
push
xchg
test
dec
ljmp
sbb
inc
or
add
test
outsl
push
andb
subb
pop
pop
inc
push
ud1
vpshufd
mov
shrb
and
negl
cs
jno
fbld
or
mov
cltd
pop
cmpsb
addr16
xchg
sbb
leave
movsb
andl
add
and
sub
jmp
std
stos
ljmp
mov
dec
int3
jne
sub
push
dec
and
xchg
shrb
or
adc
imul
sbbl
sbb
test
popw
xor
sarl
sbb
mov
mov
mov
into
jp
push
sub
push
dec
das
pop
dec
cs
ret
mov
addr16
sbb
inc
mov
xor
push
in
pop
dec
lahf
nop
inc
sar
jge
pop
dec
je
sti
bound
ret
add
and
dec
lock
jmp
adc
and
fisubs
ds
outsl
movsl
mov
in
pop
lock
sbbl
into
push
sub
mov
sub
xchg
mov
add
mov
inc
cmpl
les
mov
leave
lods
pop
add
dec
cmp
and
dec
cmpl
je
out
out
sub
cmp
scas
xchg
push
mov
and
adc
fwait
fs
mov
test
xchg
mov
add
movsb
mov
push
enter
push
pop
or
in
push
xor
jbe
data16
pop
adc
aam
push
popa
or
inc
xorl
aaa
add
out
sub
sub
mov
push
sub
and
sarb
cwtl
loopne
andl
inc
xchg
jae
sub
out
mov
daa
add
std
sbbl
xchg
xorb
mov
push
stos
inc
mov
dec
push
push
mov
dec
jp
mov
dec
push
xor
sbb
inc
out
cmc
pop
cwtl
mov
ds
pusha
add
push
incb
mov
and
cmpsb
mov
cs
pop
jo
in
push
and
cmp
cmc
push
and
arpl
lret
sub
inc
mov
hlt
xor
inc
icebp
inc
movsb
out
add
in
inc
or
mov
pop
mov
sub
lods
stos
pop
in
stc
mov
mov
out
push
add
cmp
or
xchg
inc
push
shlb
pop
jle
sti
lahf
pmulhuw
cli
mov
cmp
cmp
in
pop
fcompl
mov
fidivl
ret
add
xor
dec
push
mov
and
fisttpl
movsb
inc
rolb
adc
das
sbbb
popf
mov
pusha
sub
lcall
aam
into
xchg
mov
inc
repnz
mov
adc
mov
cmp
dec
jmp
mov
repz
pushf
pop
jmp
mov
dec
cmp
inc
add
jg
call
jmp
mov
mov
or
loopne
mov
mov
dec
inc
mov
jne
xor
jg
xchg
mov
iret
cs
cmpsl
jnp
out
mov
repz
je
es
pop
ljmp
mov
adc
mov
cs
pop
jo
pop
cmp
lret
jmp
sub
call
pop
push
adc
rcr
add
cwtl
xchg
ret
and
push
add
enter
jb
lods
xor
and
jp
push
and
std
fdecstp
and
rcl
or
cmpsb
mov
inc
sbb
xor
rclb
in
in
insl
push
adc
xlat
mov
les
es
adc
lahf
add
mov
lret
dec
jg
sub
movsb
jne
jge
jg
dec
pop
mov
cmp
leave
dec
call
or
aaa
cld
lods
mov
pop
xorl
in
mov
and
aaa
mov
jmp
or
sbbb
sbb
dec
fstl
lret
lar
xchg
in
fwait
gs
ds
mov
stos
call
sub
push
mov
lret
aad
sub
out
ret
and
add
or
mov
mov
adc
repnz
and
fstl
movsb
ja
mov
inc
hlt
cli
sbb
adc
jmp
hlt
pop
inc
shl
rolb
mov
imul
int
mov
push
xor
in
enter
mov
loope
shl
fs
loope
sti
mov
dec
aaa
in
pop
mov
inc
daa
insl
pop
test
or
scas
rorb
pop
add
fnsave
lods
pop
ja
mov
iret
xor
or
sub
mov
mov
dec
cmp
negb
loop
cltd
pushf
arpl
inc
inc
js
mov
mov
out
cmpsb
and
mov
mov
test
mov
jmp
and
imul
sbb
mov
jecxz
imul
fisubl
sti
xchg
xchg
push
sbbb
add
negb
cmp
mov
cmpsb
or
xchg
pop
push
adc
adc
call
leave
mov
arpl
adc
fdivrs
xchg
ret
mov
lret
sub
shrb
rorl
mov
scas
cmpl
sbb
and
mov
mov
sahf
ljmp
std
icebp
mov
fs
ljmp
jle
or
cmp
jecxz
cwtl
cmc
hlt
pushf
jbe
lahf
cmp
jge
pop
bound
xor
rcrb
push
inc
loop
and
repnz
push
inc
dec
sbb
imul
leave
inc
push
mov
pop
rcrl
aam
push
insl
adc
fsts
mov
lods
js
enter
mov
fistps
xor
negl
pop
out
pushl
ss
subl
notl
add
imul
jmp
gs
jmp
mov
and
adc
leave
xchg
lahf
add
push
mov
or
push
xchg
cmpsl
das
mov
ljmp
mov
cltd
mov
xor
nop
push
mov
push
movsb
sbb
push
or
mov
test
inc
mov
mov
cltd
adc
pop
add
insb
push
rclb
cmp
roll
mov
fsubl
idiv
das
rclb
cmp
clc
sar
cmp
dec
push
dec
pop
push
imul
mov
fists
push
cmp
fstpt
sti
mov
mov
cmpxchg8b
pop
rcr
add
sbb
jg
iret
shlb
xchg
xorl
jg
adc
cmp
scas
pop
adc
lock
mov
cmp
aam
js
scas
jb
jmp
mov
push
sub
loope
sub
push
lahf
bound
lods
jbe
xchg
aam
lret
sub
out
mov
dec
cltd
push
push
and
mov
popf
loop
in
push
adc
cmp
lea
mov
mov
test
add
cmc
sarl
jp
add
or
shrb
in
dec
mov
pop
outsl
loopne
sbb
cmp
inc
in
cmpsb
leave
sub
and
sbb
bswap
sub
mov
in
cs
xchg
cs
mov
mov
mov
mov
aas
std
jbe
dec
pop
pushf
xchg
sub
int3
aas
sbb
jg
add
loope
push
ja
cmp
gs
shl
cmp
jbe
lret
adc
repz
arpl
pushf
mov
pop
fwait
gs
mov
xchg
jns
jl
pop
push
mov
jg
sarb
lods
add
repnz
cmc
int
shl
mov
or
mov
icebp
mov
xchg
and
cmp
lea
lods
aas
ljmp
sbb
mov
shr
outsl
dec
push
xchg
sub
adc
xchg
push
mov
lods
out
loopne
pop
out
test
and
jge
xor
jb
cmp
test
fucomp
scas
pushf
pop
rol
jb
mov
divl
ss
daa
and
jl
push
xor
xor
sub
xchg
ss
pop
imul
xchg
rcll
xchg
movsb
xchg
ds
push
push
xchg
cmp
xchg
negl
xchg
push
rolb
or
in
out
mov
outsl
or
sub
jae
push
sub
icebp
ret
into
out
and
pusha
sub
jmp
repnz
add
jg
dec
shlb
add
xchg
sti
mov
popa
nop
jae
add
fs
add
jp
and
dec
or
mov
add
mov
cmp
jl
les
aad
inc
pop
negb
cmp
lret
mull
cmpl
js
out
mov
outsl
ret
jl
and
push
pop
dec
xchg
decl
dec
mov
jae
sub
fs
mov
xor
popf
shlb
push
cmp
mov
mov
or
insb
lock
repz
sub
sti
sbb
mov
mov
mov
repz
xorb
ljmp
pop
loop
fcomps
nop
and
cwtl
aas
pop
sub
nop
insb
mov
shrl
push
xor
andb
sub
addb
icebp
push
or
insl
rcl
sbb
outsl
sbb
mov
call
nop
mov
mov
add
out
jmp
pop
xor
mov
push
insb
jl
ret
mov
lods
out
insb
jl
and
in
scas
push
dec
mov
sbb
sbb
popa
dec
icebp
ljmp
xor
xor
and
into
and
adc
inc
mov
imul
and
and
lret
aad
mov
mov
out
pop
inc
add
jno
cltd
cwtl
add
pop
jge
sub
adc
push
int
or
pop
cs
inc
pop
or
lock
pop
loop
inc
lret
into
pop
xlat
mov
mov
push
pop
insb
xchg
sub
xor
cmp
cmp
and
sub
aaa
bound
xchg
push
mov
dec
in
cmp
dec
xchg
cmp
or
jl
sub
cltd
pushf
pop
jae
idivl
lods
cmpsb
lds
iret
pop
incl
or
ja
and
jno
push
loope
mov
fidivs
loope
stos
loope
imul
outsb
test
mov
lds
sbb
loope
lahf
repz
aam
lahf
jg
jg
push
arpl
inc
mov
cmpsb
sti
mov
cmp
pop
push
movsb
roll
scas
mov
pop
pop
jae
dec
push
jnp
loope
push
lahf
daa
into
rolb
mov
out
stc
imul
xchg
scas
jae
pop
or
lcall
cld
or
enter
sbb
jge
aaa
popf
mov
push
outsl
sbb
xor
jmp
hlt
xchg
or
cmpsb
push
aas
out
mov
pusha
nop
pusha
lcall
cmp
fildll
sub
adc
add
mov
mov
adc
ljmp
movsl
shrl
jnp
stc
mov
jge
add
fadds
xchg
fmuls
stos
push
mov
popl
sahf
not
cmp
pop
mov
cld
decb
cmp
jle
fmul
mov
pushf
divl
mov
jne
push
dec
cs
pop
xor
jmp
invd
and
ret
or
aad
aaa
rcl
std
out
or
dec
mov
pop
stc
sbb
cmp
or
add
mov
sbb
lods
mov
mov
push
lret
xor
xor
fs
ja
popa
add
push
adc
jmp
cmp
xor
adcb
nop
adc
imul
xor
pop
mov
lock
cltd
dec
jg
addr16
or
pusha
rorb
mov
dec
adc
xor
push
dec
fsubr
mov
push
sbb
dec
mov
sub
pop
mulb
mov
fsubl
lea
lret
dec
and
xlat
inc
loope
fwait
incb
out
push
push
lods
sub
jp
dec
out
adc
add
dec
inc
pop
jp
sbb
mov
cmp
jae
iret
leave
clc
adc
push
stos
pusha
mov
adc
jns
sub
mov
sahf
loope
adc
cmp
es
jmp
add
mov
push
cmp
inc
in
cmc
adc
ficompl
add
fisttps
xchg
jne
pusha
dec
mov
aam
xchg
add
adc
lret
and
sub
scas
leave
mov
lcall
push
push
movsl
inc
push
aad
mov
push
cwtl
mov
push
dec
sub
icebp
icebp
add
xchg
mov
fmull
sub
jge
xchg
out
xchg
js
push
push
cmpsl
or
addb
push
aam
sbb
push
xchg
cmp
into
mull
lods
push
mov
xchg
insb
dec
fidivrs
mov
into
in
outsb
nop
pusha
jmp
sub
iret
mov
xor
pop
mov
xor
sbbl
jno
aas
push
mov
mov
sub
sarb
cmpl
mov
pusha
pop
movsl
mov
in
xchg
xchg
push
sub
adc
mov
cmp
out
pop
xor
in
lods
mov
cmpsl
lods
mov
jnp
mov
mov
add
jge
out
fcmovne
cltd
mov
push
stc
cmp
push
in
mov
sub
aam
scas
ret
popa
add
out
xchg
lods
lock
shl
inc
fisttpl
ret
sbb
shll
xchg
add
mov
gs
and
add
and
loop
sbb
shll
leave
loop
stos
and
jns
or
insl
loope
mov
push
adcl
sarb
push
xor
sub
dec
es
pushf
or
adc
insl
dec
movsb
add
std
ret
mov
mull
cmc
mov
jl
and
loope
int3
pushl
and
cmp
add
xor
js
sub
into
fistl
add
push
enter
decb
jns
pop
push
add
aaa
imul
fisubl
aaa
movb
inc
xlat
lret
add
inc
lahf
ja
xchg
je
hlt
cmp
adc
mov
and
cmp
mov
jp
addr16
js
xchg
adc
inc
inc
xor
pusha
loopne
test
shl
jb
in
push
loope
and
je
inc
cltd
hlt
cmpsl
xchg
xchg
jp
out
outsb
jge
dec
jno
inc
in
scas
es
nop
sub
ss
mulb
gs
xor
fistl
mov
mov
push
leave
sbb
push
inc
es
les
inc
gs
xchg
add
arpl
mov
inc
insb
pusha
inc
fbstp
mov
and
mov
pushf
mov
repnz
sub
roll
lret
mov
in
inc
mov
xorl
push
jp
or
daa
subb
sub
jb
xor
xor
lock
int
out
adc
in
inc
out
adc
dec
in
pop
cmc
test
mov
fwait
idivl
scas
mov
mov
dec
push
imulb
enter
adc
push
sub
sub
orb
mov
aas
adc
mov
pop
sarl
inc
push
in
jl
test
fildl
dec
gs
mov
sub
jl
inc
lea
cwtl
or
dec
cltd
sbb
out
and
push
push
ljmp
or
inc
lret
push
jnp
xor
push
mov
arpl
in
xchg
jno
add
stc
mov
inc
pop
xchg
lret
lea
imul
je
mov
scas
xchg
scas
xchg
dec
cmpsb
mov
stos
dec
rclb
in
lahf
sbb
cld
out
cmp
cmpsb
cs
inc
stc
movsb
fcom
imul
out
mov
sub
shl
movsl
jb
imul
daa
xor
js
mov
xor
lds
insb
jo
loop
pop
popf
dec
mov
add
mov
les
dec
dec
sahf
pushf
fists
popf
jg
hlt
xchg
mov
add
sti
fmuls
sti
and
orl
lods
push
dec
sbb
and
mov
test
pop
cs
jae
add
arpl
andb
fisttps
rolb
rclb
pop
jg
inc
inc
and
or
loope
xchg
call
jo
push
add
push
sbb
pop
mov
jne
inc
and
inc
jl
cmp
push
mov
test
mov
vaddpd
inc
sbb
pop
and
dec
test
xlat
test
or
lods
icebp
shll
push
pushf
push
xchg
inc
pushf
pop
fiadds
movsl
pop
and
xchg
pop
push
loope
or
out
mov
sbb
faddl
leave
sub
shlb
cltd
push
xlat
xchg
add
imul
imul
sbb
je
jns
xchg
scas
adc
push
roll
inc
lods
je
pushf
mov
push
adc
sbb
add
cmp
push
push
and
ret
movsb
fbld
imul
insb
mov
push
adc
cmp
xchg
dec
cmp
push
jb
jle
ret
jne
ja
in
daa
pop
mov
gs
fsubrl
stos
xor
in
dec
mov
aam
pop
and
cmp
pop
inc
mov
je
hlt
cmpsb
mov
mov
stos
jge
inc
and
test
or
aaa
arpl
xor
inc
and
enter
lret
mov
enter
leave
hlt
sbbl
jne
je
mov
adc
fwait
pop
jno
cmp
std
push
insl
inc
dec
jnp
es
mov
adc
lods
pusha
sub
xchg
ret
sti
or
mov
lcall
inc
sbb
fcmovnu
inc
sub
lds
mov
mov
int3
push
jb
es
aaa
xchg
jnp
in
or
outsl
mov
fcoml
loope
fadd
pop
sbb
pusha
cmpsb
add
push
rclb
jmp
iret
cmp
inc
ret
cltd
lea
jne
push
std
je
data16
pop
mov
ss
popa
ret
pusha
mov
pop
mov
push
cmc
mov
push
jnp
pop
xor
mov
xchg
mov
movsl
jnp
mov
cmpsl
cmpsl
pop
push
mov
rcr
mulb
popa
jg
stos
jge
cs
inc
fs
push
gs
add
cmp
pusha
shll
imul
xor
in
test
shlb
adc
repnz
xor
and
push
test
test
popa
xchg
push
stos
mov
pop
pop
xchg
mov
pop
push
sbb
bound
lea
pop
xor
mov
mov
sbb
sti
add
lahf
fnstcw
inc
pop
cmp
outsb
sbb
mov
push
add
jge
sti
cmpsl
xor
call
pop
ljmp
add
cmp
in
sti
mov
ror
mov
outsl
pop
sbb
sub
push
or
jge
push
cld
push
add
add
jae
xlat
inc
mov
xor
mov
lahf
push
inc
cli
mov
jo
ja
nop
xchg
mov
cmc
push
jno
es
and
jns
jp
pop
arpl
jl
push
subb
test
aaa
xchg
xchg
cmp
ret
dec
jbe
xor
push
in
pushf
sbb
fistpll
daa
fwait
cmpsb
sub
push
ljmp
ret
sbb
or
inc
ret
aam
test
inc
pop
sub
sbb
cmp
and
call
stos
mov
cmp
ss
dec
xor
xchg
xor
out
out
xor
mov
jl
sbb
js
mov
js
dec
mov
cmp
sbb
loope
inc
fmull
sbb
outsb
ss
lahf
es
jl
xchg
push
push
pop
push
mov
sub
fisubl
jmp
aad
scas
pop
or
cmp
fnstenv
or
fstp
in
pop
add
xchg
pusha
outsl
cli
mov
cmp
pop
mov
fiaddl
hlt
lret
inc
jge
push
inc
test
fisttpll
xchg
lods
add
mov
lea
adc
xor
and
mov
jno
add
mov
orb
insb
scas
pop
in
div
jns
jb
ja
cltd
fmuls
int
jb
jnp
xor
outsb
mov
push
mov
push
ficompl
sbb
and
test
aam
xor
test
mov
and
mov
rol
aam
mov
aam
jne
pop
or
lahf
rol
add
push
cltd
aaa
aaa
push
push
mov
pusha
push
lods
xchg
cmp
pop
lock
imul
xlat
ret
adc
cmpsb
mov
add
sub
inc
lock
push
gs
adc
fisttps
ds
add
into
jnp
xlat
nop
imul
in
inc
sbb
mov
or
mov
int
mov
inc
push
push
dec
dec
pop
ds
cmp
and
test
and
jl
inc
stos
mov
pop
flds
jb
dec
jl
ss
insl
cmp
ds
sbb
std
mov
add
sbb
and
add
fimull
enter
mov
je
sbb
dec
in
and
fdiv
mov
hlt
leave
pop
mov
fnstsw
fldcw
push
add
mov
shrl
mov
cmp
mov
pop
data16
aas
loope
dec
movsl
clc
lret
jg
sbb
adc
lcall
adc
aad
movsb
in
inc
dec
ret
dec
fiaddl
add
daa
fidivrl
cltd
rcll
push
aaa
loope
jle
inc
lds
jae
xchg
lret
int
xchg
mov
add
adc
and
in
adc
sarb
loopne
jle
fwait
xlat
stos
xor
push
movsb
sub
int
add
rcrl
dec
dec
jb
lcall
jle
xchg
xchg
adc
and
xchg
lea
fdivrl
mov
and
mov
sahf
jecxz
jle
into
lret
cli
sti
out
stos
mov
adc
jo
xchg
jbe
rorl
mov
lods
pop
cmpsb
adc
popa
outsl
ffreep
es
xor
mov
pop
mov
push
mov
mov
push
sub
int
ret
xor
sbb
mov
add
popw
shrb
sub
sarl
mov
fnstsw
push
dec
and
enter
push
jmp
sbb
cmp
sub
rdmsr
mov
cmpsb
adc
mov
daa
add
popa
nop
ds
ret
or
fwait
xor
scas
mov
xchg
adc
jmp
mov
scas
out
lods
adc
cmp
pop
das
int
mov
ds
pop
aaa
mov
lods
mov
xor
sbb
cmp
fnstsw
push
jmp
fst
push
lcall
mov
xchg
lret
and
push
sbb
xlat
mov
adc
lods
push
cmpsb
in
xchg
ja
test
arpl
js
jmp
popa
jb
pop
mov
push
jb
xor
mov
or
lds
adc
and
jmp
sbb
adc
xchg
aaa
mov
ja
cmpb
je
je
cmc
aad
push
add
lea
in
dec
adc
mov
out
flds
add
scas
imul
ja
sti
inc
es
cmp
in
adc
in
call
fs
push
enter
outsb
lret
pop
inc
in
sbb
mov
mov
push
xchg
mov
inc
cmp
outsl
or
inc
popf
jo
jbe
leave
mov
out
adc
dec
inc
xor
cmp
mov
sub
scas
jbe
repz
jb
in
xchg
movsb
or
ljmp
enter
dec
dec
dec
in
int
das
bound
and
sbb
xchg
push
mov
xor
mov
cltd
nop
lea
ror
hlt
les
push
shrl
xchg
imul
hlt
or
and
or
push
push
cmp
outsb
and
jmp
inc
pop
inc
jb
push
mov
shl
icebp
adc
lcall
loope
adc
aad
sbb
int
clc
push
mov
push
mov
sbb
pusha
sub
pop
mov
lret
sbb
inc
dec
add
add
push
out
arpl
sub
insl
mov
es
jp
setbe
add
mov
lock
test
sbb
push
iret
decl
dec
jbe
push
push
movsl
inc
or
push
xchg
out
xchg
out
js
or
in
add
mov
shlb
jne
jbe
xor
mov
adc
or
loop
leave
les
push
adc
in
outsl
jp
push
in
adc
pop
outsl
lea
fisttpl
jae
enter
pushf
out
add
cmp
xchg
shl
add
pop
lea
push
adc
imul
jbe
and
mov
dec
xor
xchg
mov
inc
dec
and
cmc
mov
insb
outsb
pop
pop
lahf
mov
dec
dec
mov
stos
les
lret
pop
out
push
adc
push
adc
divl
inc
lods
xor
pop
jno
rol
call
jmp
fildll
xor
mov
mov
mov
xchg
imul
int3
xchg
test
sub
xchg
jno
test
mov
xchg
push
ds
dec
sbb
push
fidivrs
popa
pop
mov
mov
arpl
and
test
inc
movsl
jnp
jne
mov
xchg
lods
nop
dec
imul
mov
addb
hlt
outsl
jle
jge
push
adc
mov
in
xor
out
push
imul
stos
dec
cld
fiaddl
or
dec
sub
int
and
jnp
xchg
sbb
push
push
dec
scas
pop
xor
inc
out
aad
jl
lea
push
insb
ret
mov
rcll
dec
and
jno
mov
inc
fisttpl
faddl
cltd
addr16
scas
jl
movsl
sub
dec
jle
cmpl
imul
aam
icebp
popa
pushf
test
incb
mov
sub
hlt
add
dec
out
or
pop
js
mov
dec
mov
pop
ja
xchg
lcall
dec
push
cmp
fildll
jo
jl
int3
xchg
jmp
pop
mov
sbb
notl
fcoms
ljmp
pop
xor
aaa
cwtl
sbb
add
xchg
sbb
xchg
jge
cwtl
scas
ret
mov
repz
adc
cmp
int
sbb
loopne
pop
subl
int3
lret
loop
dec
ret
lahf
sub
int3
sbb
out
lret
imul
fsts
aaa
cmp
jg
mov
out
and
adc
lods
fcmovnu
pop
shll
mov
pop
pop
ja
pop
in
xorb
outsb
push
mov
push
mov
lcall
and
lods
ss
sbb
jl
rcrb
scas
mov
in
pop
testb
ret
shlb
push
cmp
sbb
pop
dec
daa
rcr
icebp
nop
bound
ret
and
xor
sbb
adcl
pop
sub
jmp
jmp
and
ljmp
gs
push
or
ljmp
dec
scas
or
inc
mov
mov
addr16
shll
rcrl
stos
andnps
push
clc
mov
pop
jmp
scas
call
and
cs
pop
push
sbb
xchg
or
mov
xchg
pop
lret
fidivl
outsb
loop
mov
pushf
mov
push
cmpsl
mov
mov
adc
push
out
outsb
sar
sahf
and
shll
inc
adc
inc
pop
lret
cmp
dec
pop
cmp
fbstp
cs
js
pop
cmp
sarl
and
fstl
aad
inc
dec
cltd
inc
mov
nop
pop
sahf
xchg
popf
mov
ret
xchg
nop
es
stos
push
outsb
pop
jle
out
in
mov
cmpsb
cmp
aas
repz
fadds
push
mov
mov
add
cwtl
pop
jl
fsubr
mov
inc
or
fiaddl
divl
scas
scas
sbb
ja
cmc
loop
sbb
push
dec
les
sti
inc
dec
cmp
rcr
mov
fdivl
cmpsb
sub
scas
or
jmp
inc
adc
movsl
decb
insl
movb
daa
clc
pop
lods
lahf
xor
lret
pop
test
or
fisttpll
in
mov
hlt
aaa
insl
out
popa
dec
xchg
sbb
hlt
les
outsb
aad
push
push
xchg
xchg
lods
sbb
std
pusha
cmpsb
adc
es
push
push
test
mov
mov
popf
cmp
bound
rcr
and
mov
inc
cmpsl
cld
pop
mov
insb
and
jb
les
in
jge
or
pop
aas
cmp
shr
roll
and
cmp
aaa
lds
mov
aaa
push
out
pop
add
scas
jbe
hlt
faddl
mov
lret
aaa
cmpl
fistpll
mov
dec
bound
push
pop
mull
push
pop
jae
xor
mov
add
lods
inc
cmpb
ret
dec
dec
inc
ficoml
pop
cld
and
sub
ds
pop
push
stos
sti
hlt
add
push
lret
cmp
add
cmp
xchg
imulb
ret
pop
clc
popa
add
mov
xor
jns
xor
data16
sub
pop
and
popf
push
jge
jg
js
loope
jge
sti
adc
xchg
dec
cmpsb
or
push
clc
stc
shll
or
pop
and
jnp
cmp
popf
es
aaa
lea
cmp
int3
in
jecxz
cltd
or
push
sbb
or
repz
test
mov
xor
sub
aaa
in
add
arpl
in
repz
push
in
lock
lret
test
and
mov
and
stos
out
pushf
jnp
lret
inc
mov
or
test
fldenv
lcall
dec
decb
adc
push
jmp
push
sub
inc
xchg
fildll
fistpll
sbb
push
dec
xchg
inc
or
lods
mov
fwait
notl
hlt
cs
imul
inc
lahf
and
setl
sub
ficoml
mov
jecxz
inc
cmp
lods
mov
into
leave
xchg
xchg
push
test
mov
cmpb
out
dec
adc
outsl
int
mov
addr16
pop
mov
xor
mulb
mov
dec
nop
fwait
xchg
andb
mov
testb
mov
std
adc
cmpsb
push
mov
jl
cwtl
insl
icebp
inc
jmp
mov
push
jo
out
dec
mov
pushf
and
mov
xorl
es
dec
scas
mov
sbb
xchg
push
or
xchg
fnstsw
cmpsl
mov
mov
cmp
and
sub
fistps
shlb
orb
mov
movl
pop
sub
jbe
js
test
mov
fisubs
movsl
xchg
pop
pusha
out
test
data16
pusha
cmp
xchg
push
hlt
aas
jecxz
rcll
adc
dec
shll
out
push
pop
sbb
jb
dec
mov
adc
adc
adc
mov
lods
xchg
jo
enter
xchg
xchg
cmp
push
clc
testb
xchg
pop
jne
pushf
lret
gs
sbbb
testb
sbb
mov
fistps
shll
loope
movsb
jns
repz
icebp
mov
adc
inc
mov
adc
dec
lret
dec
arpl
repz
push
movb
pop
fdivs
xor
mov
test
enter
push
sbb
data16
adc
sub
xor
lods
pop
cmp
push
bound
and
mov
sarb
ret
push
xchg
pop
pop
pop
push
or
xchg
and
cmp
shlb
enter
repz
or
les
repnz
fdiv
cwtl
pop
cmp
ret
pushf
cmpsb
push
cmp
jecxz
pop
in
out
aas
dec
subb
xchg
push
addr16
jmp
leave
sbb
push
cli
mov
dec
and
lret
test
jp
leave
push
mov
imul
jb
mov
mov
mov
repz
lock
cmp
and
into
mov
mov
daa
mov
cmp
mov
in
inc
inc
addr16
jle
xchg
push
test
in
xor
sti
mov
mov
mov
mov
and
daa
xchg
into
inc
mov
fdivl
adc
add
pop
mov
jl
popa
push
in
stc
pop
and
scas
cmpsl
or
mov
dec
xlat
sbb
jmp
jnp
pusha
inc
push
js
dec
or
xchg
jo
lcall
xchg
popf
mov
sub
outsb
lods
sarl
mov
inc
fwait
adc
in
add
push
pop
scas
sbb
and
cld
jnp
aad
ss
mov
mov
cmp
pop
enter
mov
sub
leave
mov
jmp
arpl
mov
jge
jge
test
into
nop
pop
stos
out
push
mov
out
push
cli
arpl
adc
and
lret
ret
iret
sub
mov
mov
arpl
mov
add
or
dec
ret
fsubl
mov
push
fwait
imul
fcompl
sub
or
ljmp
sti
mov
sbb
imul
add
scas
nop
push
dec
or
lcall
icebp
cmp
pop
mov
lret
fcomps
push
add
pushf
notb
pop
out
jecxz
pop
add
xlat
in
cmp
inc
mov
jae
in
arpl
aam
daa
sub
xor
aas
decb
test
mov
pop
js
mov
je
aad
repnz
ss
insb
mov
sbb
daa
icebp
add
inc
add
cwtl
dec
and
inc
std
pop
dec
aam
cmpsb
push
filds
movsb
xor
lds
fbld
push
jecxz
lret
stos
mov
push
pop
je
stos
icebp
cs
movsl
jmp
lods
push
fs
xchg
inc
dec
pop
or
mov
das
out
cmpsl
jae
sub
outsl
add
jae
adc
xchg
or
and
pop
adcl
lods
add
push
sbb
sub
mov
jp
iret
rolb
dec
push
int
shrb
pop
inc
sti
mov
mov
cmp
mov
pop
lahf
jo
jmp
fwait
or
mov
cmp
mov
fiaddl
std
pushf
xor
jnp
das
sti
cmpsb
test
or
sbb
mov
dec
mov
sahf
pop
outsb
popf
xchg
shll
mov
mov
mov
enter
popf
mov
movsl
jno
fs
fstpl
rol
adc
ret
ja
test
pop
push
popf
rorb
adc
movb
xchg
mov
inc
sub
adc
push
xorb
sarb
and
cmp
in
push
xor
ss
lods
arpl
mov
inc
dec
ljmp
fsubs
lret
int
xor
aam
imul
jne
and
fisubrs
xchg
in
mov
mov
test
cmp
dec
into
fs
insb
jb
inc
iret
push
or
gs
insl
rorl
push
mov
test
sbb
cmp
push
ret
add
xlat
fcomps
loope
les
fcomps
gs
loop
ds
ljmp
ds
or
mov
xor
sbb
or
sub
inc
mov
ret
jo
add
dec
loop
push
test
daa
and
dec
xor
push
add
ds
xchg
and
call
dec
out
mov
imul
push
inc
cmp
sub
mov
ds
xor
outsb
adc
mov
cmc
xlat
int3
cmp
add
mov
pusha
add
mov
jmp
in
jns
fistpll
lret
stc
scas
int
push
test
stc
cmp
sahf
and
clc
pop
sbb
repnz
xchg
push
push
cmp
and
xchg
ljmp
lcall
shr
outsb
xchg
scas
jge
es
sahf
fcom
sbb
jg
jmp
xchg
movsl
mov
mov
dec
inc
ds
inc
lcall
push
mov
aaa
and
or
popa
dec
sub
add
movsl
roll
jp
fstps
mov
inc
mov
xchg
xchg
mov
mov
lret
scas
lahf
pusha
mov
test
jecxz
sub
aaa
fs
fld
push
test
fs
push
push
pop
jg
push
pop
dec
jns
pop
jp
insl
cs
inc
loopne
cmpsb
sub
dec
insl
nop
notb
sbb
cmp
scas
pushf
push
cld
sbb
in
dec
push
test
dec
xor
mov
test
mov
daa
or
shlb
rol
fildl
sub
push
insb
scas
adc
mov
jne
or
mov
pushf
jbe
int
push
jnp
jne
jno
push
pusha
addr16
mov
mov
movsl
mov
lcall
and
popa
divb
mov
jl
loop
out
shlb
jnp
inc
and
lret
and
sub
imul
or
adcb
pop
jmp
dec
sbb
cwtl
sub
xlat
dec
ret
adc
pop
test
mov
adc
testb
mov
add
shrb
mov
fisttpl
je
testl
pop
insl
arpl
into
sub
or
ss
mov
mov
xchg
dec
push
ret
jns
test
adc
jne
dec
outsb
aas
mov
sbb
pop
push
or
es
mov
mull
mov
dec
in
scas
add
xchg
cmp
std
iret
inc
add
cwtl
stc
ds
jg
jg
jbe
or
xlat
imul
jecxz
in
int
inc
inc
xlat
inc
xchg
cld
jns
cmp
aad
push
push
mov
or
js
jle
fsubl
mov
fildll
cmp
pop
jae
inc
pop
ds
push
outsl
pop
out
dec
es
cmpsb
jno
fildll
stc
push
xor
mov
xor
fisubs
outsl
lret
aas
jmp
jno
mov
cwtl
pop
jb
fisttpll
lcall
push
scas
daa
les
daa
mov
repnz
add
insl
mov
popf
ror
jae
xchg
adc
inc
mov
stos
mov
push
rcl
pop
fwait
addr16
mov
loope
push
cltd
add
sbb
cld
mov
loopne
movb
push
pop
add
xor
adc
add
shlb
loop
mov
jmp
xor
mov
rcl
xor
pop
ret
lret
imul
outsl
scas
mov
cltd
daa
pushf
outsb
mov
or
ret
cmp
mov
add
or
mov
lret
pushl
jo
popf
xchg
scas
lret
adc
and
jnp
mov
xchg
lret
cmp
dec
aam
sbb
and
repz
dec
add
fidivs
dec
jg
mov
iret
inc
push
ficoms
mov
xchg
aad
sub
lods
test
add
inc
int
scas
xor
jo
std
stos
push
pop
cmp
std
movsb
rclb
imul
ds
idivb
rol
lock
insb
movsb
clc
dec
fstpl
pushf
testl
ret
xchg
aad
popa
xor
dec
pusha
jae
pop
xor
lock
shr
cli
rcrl
cmpsb
push
fisubrl
dec
pop
jp
pop
add
adc
ret
fucomip
cld
stos
inc
fadds
out
dec
rcrb
pop
sbb
hlt
pop
pop
mov
xor
push
leave
and
insl
lods
mov
in
cmpsl
negb
pop
inc
adc
cmp
test
sbb
mov
cmp
call
pop
jl
add
push
cmpb
roll
mov
mov
addb
mov
mov
add
inc
or
push
mov
lret
js
and
dec
out
dec
pop
sbb
add
push
lea
decl
jnp
and
loopne
xchg
rcrb
loop
xchg
pop
sbb
mov
mov
arpl
jno
xor
out
mov
mov
stc
or
loopne
mov
loope
or
xchg
loopne
or
ss
imul
inc
sbb
imul
hlt
jg
cmp
cltd
icebp
fildll
loop
mov
adc
cmpsb
scas
pushf
cmp
cmpsl
pop
fadds
jo
aam
sub
dec
push
sbb
pop
loopne
mov
aas
pcmpgtd
push
cmpb
xor
adc
jle
jnp
xchg
cmp
fs
call
or
popa
clc
lea
sahf
rorl
popa
hlt
fidivrl
fs
push
shlb
dec
dec
jo
js
loop
push
sub
pop
vlddqu
inc
jge
dec
dec
jmp
test
lods
cmp
iret
popa
mov
test
inc
out
roll
sbb
cmp
ds
mov
push
jmp
cmp
xor
mov
sub
mov
add
pop
mov
insb
enter
push
loope
pop
pop
insl
test
or
mov
sub
lods
test
jge
push
dec
lret
xlat
push
mov
fistl
dec
dec
sub
pop
ret
pusha
jne
mov
adc
popa
push
mov
sahf
lret
mov
cmp
and
or
or
jo
icebp
mov
shlb
and
mov
xor
adc
enter
dec
cmpsb
jae
inc
inc
into
test
bound
scas
xor
cmpsb
outsl
sbbb
sub
loope
lea
xor
mov
jne
cmpsl
repnz
or
fidivrs
cwtl
push
pusha
in
rclb
popa
fcomps
js
inc
push
rcrl
insb
fcom
dec
call
sub
in
test
push
popf
jge
push
pop
ret
jbe
ss
xchg
out
and
push
call
inc
lods
sub
push
imul
outsb
dec
dec
std
icebp
cld
jmp
push
inc
mov
fcompl
jno
dec
int
push
push
mov
shlb
jne
in
sub
inc
jp
push
xor
jne
xchg
cmp
jecxz
or
icebp
outsl
jo
int
lret
and
insb
dec
mov
dec
shrl
jg
aaa
sbb
push
jmp
cmp
sbb
mov
fisttpll
testl
addr16
jno
mov
inc
add
out
std
stos
mov
cmp
mov
dec
repz
rolb
roll
rcrl
pop
mov
sbb
imul
inc
ds
dec
mov
push
xor
out
jecxz
lahf
push
divl
jo
sub
xchg
xchg
ja
mov
outsl
clc
nop
sbb
pop
adc
subb
movsb
push
inc
es
in
and
mov
dec
push
dec
mov
rcrl
addb
pop
iret
jp
insb
push
and
cmp
lock
cmp
outsb
stc
loope
mov
sbb
push
lret
fadd
or
mov
int3
popf
push
xchg
stos
dec
xor
addb
cmp
xchg
add
or
bound
jae
mov
rorl
push
adc
ds
jl
movsb
mov
idiv
in
pop
mov
test
into
xor
jl
push
xchg
test
loopne
cmpb
and
xchg
mov
adc
xorb
cmp
mov
int
jo
ror
insl
ljmp
aas
xchg
jns
lahf
sub
cmp
and
stos
adc
cmp
ret
xor
imul
sti
push
stc
pop
mov
or
repnz
fs
mov
outsb
mov
pcmpgtd
mul
pop
mov
xchg
sbb
mov
outsl
in
sti
xor
out
test
stos
xchg
xorl
pop
rep
add
inc
lods
arpl
outsb
xor
xor
lock
call
jno
mov
or
ds
mov
pop
aam
fsts
mov
int
pop
mov
lret
bound
aaa
mov
gs
push
fwait
std
cwtl
outsl
lahf
and
enter
lret
fbld
fldt
jae
ja
ds
test
out
pushf
movsb
pop
test
or
inc
test
flds
popf
push
push
xchg
fcomi
sbb
dec
and
mov
lret
xor
xchg
test
sbb
hlt
test
test
shrb
mov
add
aam
popf
lret
and
jecxz
add
adc
pushf
pop
in
pop
xor
lock
jle
pop
fwait
xlat
clc
inc
pop
sbb
jmp
cs
or
clc
sbb
cmp
ror
or
and
mov
das
insl
push
sbb
jnp
adc
and
inc
pop
fisttps
xor
imul
pop
iret
arpl
mov
xlat
adc
inc
adc
movb
test
mov
mov
jg
outsb
icebp
dec
add
in
mov
bound
push
stos
ret
mov
inc
std
and
push
cmc
mov
mov
xchg
fiaddl
push
in
push
jne
and
lsl
cmpsl
roll
xchg
xchg
pop
push
insl
ret
mov
sbb
push
scas
jmp
dec
push
pop
pop
fcmovne
inc
shll
repz
xor
call
sub
dec
mov
das
and
es
xor
lods
push
das
and
out
test
jecxz
imul
mov
mov
bnd
pop
std
dec
std
jecxz
pop
lods
sub
xor
ror
or
pop
popf
inc
mov
mov
add
cmp
dec
scas
lahf
push
mov
int3
testl
lds
mov
or
stos
aaa
imul
not
push
adc
iret
fistpl
sbb
xor
lock
xor
outsb
repz
mov
aas
inc
arpl
fs
mov
and
add
dec
test
pop
jo
xor
subl
pop
into
imul
dec
popl
add
jle
fcmovu
lahf
adc
lret
ror
repnz
test
je
incl
scas
loopne
jbe
push
and
xchg
dec
pop
leave
xchg
sbb
add
test
leave
mov
mov
in
xchg
or
ror
repz
jmp
mov
cli
adc
fcmovb
or
pop
inc
shlb
xor
ljmp
mov
add
mov
pop
sub
pop
test
add
imul
cmp
inc
and
mov
dec
data16
jg
aam
scas
pop
pop
jmp
out
jmp
loopne
pop
push
add
mov
xor
call
jo
test
or
repz
or
mov
fidivs
lret
rorl
jecxz
push
or
in
fnstcw
sub
sbb
sbb
fdivp
add
mov
sbb
je
cmp
adc
pop
sub
mov
and
add
sub
mov
sub
jp
jmp
fcomip
imul
fistl
hlt
mov
ffree
movsl
xchg
insl
cmp
cltd
sahf
repnz
cmp
pop
pushf
dec
push
orl
aam
xchg
xchg
gs
or
cld
pop
cmp
sbb
mov
xor
rcrl
xchg
push
cld
dec
fdivr
add
imul
lock
jno
mov
pop
sbb
adc
loopne
in
pop
xchg
in
jne
rclb
cmp
mov
inc
mov
cld
mov
scas
rcrl
sbb
pushf
cmp
outsb
cmp
add
outsl
arpl
xor
nop
and
pop
mov
pop
fstl
push
hlt
inc
push
ret
xchg
mov
and
sbb
orb
cwtl
jno
xchg
xor
adc
out
arpl
icebp
jmp
sub
sahf
or
add
fidivs
jns
sub
cmp
pop
dec
loopnew
adc
jmp
sti
push
rcl
aas
stos
fbstp
out
shll
adc
jg
jg
dec
into
lahf
fwait
jp
lcall
push
clc
call
cld
ja
mov
sub
outsb
arpl
adc
xchg
stos
ljmp
lock
add
sbb
shr
mov
sti
mov
mov
sub
cmp
aas
fwait
lahf
cmpsl
sbb
and
fnstcw
ljmp
adc
lods
push
dec
pop
icebp
add
in
loopne
xor
cmpsb
rcr
mov
pop
arpl
mov
cwtl
outsb
ret
xchg
mov
sub
lea
lods
fldl
je
addr16
icebp
dec
dec
dec
repz
xchg
shl
sahf
dec
imul
xor
mov
sbb
std
sub
sub
fdivr
lock
mov
dec
lahf
stos
mov
xchg
adc
scas
and
dec
shrb
ss
rcll
dec
clc
data16
int
fcomps
or
xor
pop
ja
xor
lret
adc
mov
mov
jge
inc
push
pop
test
push
jle
dec
imul
out
call
mov
scas
test
sbb
mov
rol
add
je
out
inc
jnp
ss
sahf
addb
dec
lret
or
pushf
repnz
xor
xor
jns
jns
sub
dec
inc
daa
xor
mov
aas
out
lret
sti
push
mov
insb
sbb
lcall
fmull
aas
shll
fsubl
test
cmp
cmp
out
insl
inc
fstpt
pop
mov
xchg
jmp
or
and
xchg
and
daa
aas
mov
dec
push
mov
mov
in
jnp
out
add
lods
xchg
jb
ja
out
mov
inc
dec
cltd
shrb
inc
sbb
jge
jmp
psrld
aaa
sbb
jg
inc
fldl
inc
pop
dec
mov
out
pop
dec
shlb
ficomps
lcall
rep
ficoml
pop
xlat
orb
jne
sbb
int3
mov
vmread
jp
aam
out
icebp
or
pushf
mov
scas
jmp
cli
stc
or
sub
cmc
lock
in
enter
xor
mov
ss
test
ds
movsl
cld
dec
dec
ficompl
xor
fcompl
fldt
shl
ljmp
fprem1
lret
jbe
adc
adc
sarb
shl
jno
jl
push
aam
and
je
adc
mov
cmpsl
adc
jne
jmp
add
enter
fs
mov
pop
push
sbbb
dec
adc
std
das
movsb
push
dec
lods
cmp
fsubr
push
and
adc
sub
adc
lret
inc
or
imul
adc
add
dec
push
scas
in
dec
fsts
cli
outsl
movsb
cld
xchg
sub
test
jno
mov
gs
push
xchg
pop
mov
dec
push
loopne
xchg
xor
and
jmp
jo
inc
bound
and
dec
jmp
test
sbb
sbb
push
clc
xor
gs
frstor
orb
xor
lds
imul
dec
add
repz
jp
in
stos
sbb
sub
jmp
fadds
pop
loopne
ljmp
insl
sbb
ljmp
sarb
fnstsw
lahf
shrl
xchg
stos
jne
jbe
das
push
rolb
pop
pop
insb
loop
mov
and
jmp
mov
dec
sub
push
or
ret
jns
pushf
es
xor
enter
mov
xchg
pusha
sbb
pop
mov
in
cmp
sub
or
xchg
push
inc
clc
addl
test
jge
jmp
xor
xor
insb
push
fsubrs
out
rolb
xchg
cmp
mov
ljmp
dec
sbb
sub
inc
xor
clc
mov
pushf
sub
cltd
sbb
call
sbb
sbb
adc
or
dec
xchg
aas
adc
movsb
lods
fwait
or
pushl
xchg
jno
cli
test
add
and
icebp
cmpb
loop
jl
leave
dec
adc
sbb
scas
or
mov
cs
mov
sbb
iret
repz
and
sub
rorb
scas
lock
push
nop
inc
shlb
sbb
jae
lods
out
jmp
or
xor
sbbl
sbb
in
dec
adc
scas
fs
xchg
jnp
jno
fildll
lock
arpl
nop
fnstcw
cmp
cmp
mov
loop
cld
jo
movsb
pop
insl
in
cltd
xchg
push
xlat
inc
std
pop
sub
scas
push
jnp
outsb
xchg
stc
pop
push
push
add
popa
cmpsb
mov
mov
test
dec
pop
xchg
push
jno
insl
and
cmp
jno
dec
test
daa
cld
dec
pop
fwait
mov
xchg
sbb
pop
pushf
flds
icebp
sub
adc
dec
cli
xor
push
jb
dec
pop
lret
xchg
push
inc
pop
insb
mov
push
stos
lea
mov
xor
add
inc
idivb
sub
movl
cmpsl
popa
push
jecxz
jb
jp
xor
sub
aad
fnstcw
ljmp
gs
clc
xor
inc
mov
shrb
xchg
je
inc
not
mov
cmp
clc
int
push
dec
stc
mov
aaa
jnp
add
cltd
add
jbe
push
dec
push
cld
xor
jae
popa
loope
mov
testl
xchg
cmp
dec
mov
call
je
mov
arpl
sub
fstl
cmp
pop
mov
enter
mov
in
iret
xor
fimull
jns
mov
ss
and
inc
jmp
lods
fwait
das
aas
js
pop
mov
push
sbb
je
sahf
pusha
lods
cltd
pop
test
inc
lods
jecxz
and
mov
sbb
jb
sub
das
arpl
cli
les
sbb
repnz
stos
mov
or
in
out
popa
push
flds
mov
jnp
pop
jecxz
mov
nop
or
sbb
dec
jge
popf
out
and
test
leave
jle
inc
imul
sbb
cmpsb
lcall
or
jecxz
jg
sahf
mov
sub
dec
xchg
fwait
lods
in
aaa
push
rorl
lock
jle
mov
cmc
inc
lods
gs
fdivs
sbb
inc
and
daa
ljmp
xchg
mov
testb
cwtl
pop
shll
dec
out
aad
adc
sub
push
push
clc
in
push
sti
mov
stos
mov
pop
xchg
out
pop
push
repnz
icebp
jne
push
inc
shl
stc
mov
int3
cli
lea
leave
adc
ss
pop
rclb
test
mov
rcr
ret
add
adc
loop
jg
push
movsb
push
xchg
repnz
cmpsb
mov
xchg
rorl
or
and
mov
ljmp
arpl
sar
pop
ret
fcomip
bound
scas
mov
dec
out
int3
cwtl
ret
sahf
cmpsb
mov
inc
sbb
lcall
push
leave
cltd
pop
ja
or
push
inc
sbb
cwtl
fwait
push
lock
pusha
pop
inc
inc
adc
xchg
dec
jbe
push
cmc
or
pop
pusha
xchg
mov
or
shrb
sbb
das
jle
mov
out
add
mov
mov
popf
test
pop
and
bound
fcmovbe
mov
or
iret
cmp
test
mov
push
in
call
rcl
cltd
popa
daa
imul
cmp
lret
das
icebp
ss
std
sub
sub
mov
xchg
sar
lcall
stos
int3
adc
jb
pushf
inc
sub
jecxz
push
sub
push
flds
shrl
imul
shrl
pop
push
fidivrs
dec
mov
ficomps
repnz
jo
mov
insb
xchg
jl
cmpsl
sbb
sub
in
ror
xchg
stos
or
repz
sbb
xchg
push
pop
pop
pop
adc
iret
pop
dec
adc
sahf
sbb
mov
pop
test
mov
adc
mov
nop
pop
comiss
mov
dec
repnz
mov
sbb
ja
jmp
dec
adc
daa
sbbb
int
sti
cwtl
lcall
test
mov
je
cmp
adc
xchg
sbb
mov
sahf
iret
cmpsb
cs
mov
in
idivl
push
xchg
cmp
pop
cmp
mov
xor
cmpsb
addr16
and
jl
imul
sub
xchg
stos
pop
push
cmp
xchg
cmp
dec
mov
data16
mov
in
xor
shll
out
xor
scas
mov
out
std
shlb
mov
js
mov
lret
pop
push
cmp
pop
push
imul
cmp
pop
cmpsb
shll
cld
or
rcll
insb
das
inc
jge
cwtl
xchg
push
aad
iret
jg
fs
push
add
ffreep
ss
loopne
xlat
int
pop
dec
adc
daa
push
bound
es
scas
stos
pop
sar
fwait
adc
xchg
nop
ljmp
aad
inc
adc
mov
rcrl
push
pop
and
pushf
into
pop
ret
mov
rclb
or
lret
xchg
fstl
adc
inc
push
out
inc
adc
loop
mov
and
sbb
jo
cli
scas
sub
jb
shrb
sbb
dec
dec
in
mov
dec
cld
xor
aaa
push
pop
icebp
mov
cli
mov
aas
sbb
testb
inc
ds
add
popf
cmp
sub
pop
cmpsl
sbb
xchg
test
xor
xchg
rcl
es
sbb
xchg
mov
rol
add
in
ss
xchg
call
subb
scas
add
inc
fists
jnp
in
je
out
jae
rorl
mov
push
and
mov
sbb
aad
inc
cmp
mov
sahf
cmpsb
outsb
jne
push
add
xor
stos
jg
addl
mov
fwait
dec
into
pop
push
jg
into
sub
add
decl
sbb
ja
jg
dec
rcl
xchg
aad
shrb
das
and
nop
mov
pop
cmp
imul
in
mov
dec
inc
outsl
insb
aam
sub
lahf
xchg
mov
mov
xor
subl
and
clc
sub
aad
outsl
mov
dec
cli
mov
in
add
sub
push
mov
mov
mov
mov
inc
std
add
mov
popf
or
orb
and
cmp
mov
inc
pop
fisubs
mov
push
mov
mov
popa
dec
inc
je
out
mov
sub
or
sarb
and
addr16
inc
fldt
sti
popa
jecxz
lea
xor
xlat
lret
and
clc
icebp
xor
mov
xchg
pop
out
push
jb
dec
cli
sbb
lret
cmp
enter
push
sub
fsubrl
mov
popl
les
inc
in
fcompl
push
loope
cmp
fldenv
adc
mov
rcr
lahf
push
ret
lcall
and
adc
in
cmp
xor
push
inc
fldt
push
xor
inc
sub
fsub
shl
clc
or
mov
sbb
test
push
mov
jb
add
pop
dec
sub
stos
outsb
in
adc
pop
stc
shrb
in
fisttps
add
divl
add
fsubs
xor
push
in
mov
xchg
mov
lahf
arpl
jno
lea
test
pop
mov
pop
pop
out
push
or
into
ficoml
dec
lret
mov
inc
jg
sahf
sub
cmp
jmp
sub
cmp
jo
aad
test
mov
adc
push
outsl
jns
and
jno
mov
les
loope
inc
inc
idivl
or
push
mov
iret
mov
add
and
or
adc
in
int
cmc
dec
icebp
fwait
aam
and
les
or
mov
imul
lret
shrl
into
ficompl
outsl
pop
enter
ss
hlt
sbb
inc
xor
pop
xchg
inc
mov
jb
dec
cmp
cwtl
or
cmc
mov
cmpsl
cmp
fcoml
cwtl
insl
and
xchg
std
arpl
jb
shlb
cmpsb
in
xorl
fists
and
dec
mov
sbb
mov
pop
out
sahf
and
fisttpl
mov
mov
and
mov
mov
decl
or
push
mov
fwait
ljmp
jle
sahf
ljmp
nop
std
push
xor
imulb
je
push
dec
cmp
sbb
shll
dec
xchg
mov
enter
roll
pushl
call
push
iret
dec
test
sub
dec
xor
fs
out
bound
push
rol
ds
sbb
loop
sbb
and
push
xabort
xlat
bound
xchg
mov
xor
cmpsl
push
inc
lahf
sub
xor
or
bound
mov
scas
dec
jecxz
mov
lods
shl
jp
jb
push
push
mov
sbb
push
ficoml
inc
jg
rcl
mul
sub
sub
push
push
gs
sti
les
mov
pop
push
add
std
out
push
xchg
jmp
mov
xor
js
dec
and
push
inc
and
push
je
xchg
mov
or
iret
mov
dec
not
fnstsw
pop
mov
push
movsb
cmp
in
pop
stos
out
fldcw
inc
push
lcall
stos
out
mov
mov
test
iret
inc
pop
mov
ret
xchg
push
xor
sbb
adc
cli
lcall
aam
push
push
and
popf
dec
ljmp
into
or
inc
je
frstor
mov
inc
bound
dec
out
jb
pop
push
das
leave
push
insb
push
and
stc
ja
xor
clc
or
adc
pushf
xchg
dec
stc
idivb
push
lock
mov
out
push
inc
out
push
aam
out
push
scas
mov
faddl
adc
or
xor
ret
movsb
jmp
sub
lea
lods
lret
int
mov
push
ficoms
add
icebp
int
xchg
xchg
out
add
mov
pop
add
ljmp
test
bound
fbstp
nop
testl
jne
mov
cld
add
idivb
xchg
out
lods
or
insb
push
in
hlt
xchg
dec
lock
in
mov
in
adcl
popa
call
incl
dec
fstl
adc
pop
test
push
adc
je
push
lret
sbb
sub
es
fidivrl
sbb
lock
jne
clc
out
movsb
pop
cmpsl
stos
cmpsb
shlb
inc
cmc
addr16
out
inc
ja
imul
cmp
or
sub
shll
mov
aas
hlt
mov
inc
sbb
inc
mov
fildl
cmpsb
notl
xor
pop
push
ds
out
xor
push
mov
mov
lea
adc
in
out
cmpb
shrl
pop
push
sub
mov
test
pusha
xchg
inc
inc
ret
mov
add
repnz
sbb
jne
jo
sub
ret
cld
adc
lcall
cltd
xchg
and
in
cmc
push
fsubs
cld
enter
dec
cmp
dec
popf
fstpl
call
jge
or
inc
dec
xchg
loope
add
ja
mov
pushl
jbe
sub
pop
das
jl
movsl
sbb
jo
shll
pop
test
negb
pop
mov
push
inc
es
cld
fbld
mov
or
push
dec
into
lahf
shlb
sub
data16
mov
push
cli
sub
es
pop
loope
or
test
std
mov
sub
mov
lock
jne
lock
xorb
and
es
adc
inc
out
cmp
sahf
outsl
jmp
out
addr16
or
xchg
or
dec
inc
shl
dec
outsb
xor
aas
push
mov
test
inc
call
sub
andnps
mov
pop
mov
pop
push
je
pop
cld
pop
in
jb
xor
pushf
inc
call
cmp
fucom
jl
pop
add
pusha
data16
inc
cmp
decl
xchg
dec
lea
push
dec
dec
and
pop
je
lods
mov
loope
dec
jno
jp
in
cs
lds
cld
adc
repnz
push
adc
movaps
xchg
jle
cwtl
test
imul
mov
dec
dec
inc
mov
xchg
cmp
mov
lds
leave
in
ret
ret
fisubrs
dec
pushf
into
push
or
xchg
test
mov
xchg
inc
lahf
inc
dec
jo
cmp
loop
push
mov
cmp
push
fdivrs
mov
xchg
ljmp
jb
mov
imul
fnstcw
xchg
jg
jl
mov
inc
mov
adc
loope
sbb
enter
xor
int
xchg
and
rcrl
xchg
push
jne
add
mov
push
sti
mov
adc
pop
das
or
adc
push
out
mov
push
adc
sub
xlat
into
pop
xorb
fcoml
sub
cmc
push
and
popa
jmp
mov
daa
adc
data16
in
insl
enter
std
mov
addr16
test
mov
repz
push
in
adc
jo
xchg
inc
or
imul
xchg
adc
mov
inc
hlt
xor
lds
mov
pop
aam
leave
lea
rclb
pop
mov
mov
pop
pop
mov
cs
out
or
push
dec
add
adc
into
cwtl
inc
or
xchg
int3
xor
mov
sub
mov
adc
pop
lret
push
dec
adc
inc
inc
adc
cld
loopne
pop
adc
cmp
push
mov
adc
mov
ja
sarb
das
dec
push
cmp
sub
je
iret
aas
repz
mov
dec
add
dec
imul
ja
adc
and
ror
out
lret
pop
daa
xor
inc
mov
bnd
pop
cmpsb
jnp
sahf
into
ret
jmp
rcl
and
adc
mov
mov
mov
shrl
mov
js
imul
or
add
test
cmp
add
popf
loopne
xchg
xor
and
pop
out
or
iret
int3
jbe
nop
mov
sti
cltd
jmp
je
jg
jmp
divl
mov
or
mov
sub
dec
sub
xchg
add
dec
or
pushf
pushf
out
in
xor
sub
aas
fldt
or
cmp
xor
icebp
xor
and
xchg
mov
out
mov
popa
fsts
mov
sahf
sub
xor
dec
sbb
dec
and
jg
push
into
mov
lahf
movsb
std
inc
pop
aam
mov
rcll
divb
pop
inc
pop
push
xchg
pop
scas
aam
clc
aad
test
inc
cs
xor
test
into
xor
push
ficomps
mov
or
push
insl
jmp
push
mov
jns
cld
je
xor
cmp
movsb
div
pop
cwtl
jge
lock
in
mov
sub
inc
dec
test
into
cs
inc
sub
in
or
pop
sahf
clc
ds
in
fnstenv
mov
xchg
xchg
mov
dec
call
movsl
int3
sbb
jbe
xor
push
or
jae
push
jle
in
stc
and
mov
pop
add
xchg
xchg
sbb
movsl
adc
lods
ret
mov
push
mov
lds
daa
sbb
adc
or
aas
mov
cmp
adc
push
sarb
sub
out
push
dec
stos
test
enter
push
and
enter
gs
fcomps
or
sbb
mov
pop
stos
mov
stos
pop
addl
insb
insb
push
ja
add
or
loopne,pt
scas
cmpsl
cs
into
test
pusha
or
sbb
adc
rcrl
sbb
rorb
sub
sbb
mov
cmp
test
daa
lahf
fidivl
sbb
and
int3
add
xor
push
push
ja
cmp
insb
int
jae
inc
adc
pop
ret
int
xlat
lahf
cmp
sbb
sbb
cltd
mov
jnp
mov
sbb
test
inc
ja
cmp
js
sti
dec
jae
mov
and
and
sti
adc
loopne
push
mov
jns
pop
in
cld
sbb
jmp
mov
gs
mov
inc
pushl
int3
dec
jnp
sub
or
negb
mov
lcall
inc
pushf
sti
mov
sbb
pop
aam
or
add
leave
cmp
jge
scas
test
add
cmp
jb
adcl
ss
dec
cmp
cmp
out
xor
push
clc
cmp
mov
in
jmp
arpl
int
lret
outsl
test
je
mov
and
sub
loope
leave
xor
mov
insb
mov
mov
aad
in
popf
mov
scas
fidivrs
pop
in
scas
repnz
imul
push
arpl
psllq
repz
and
leave
scas
mov
sbbl
stc
sbb
popf
andl
cmp
lods
pushf
jns
cld
fildl
jecxz
mov
mov
js
repnz
sbb
mov
pushf
inc
call
push
xor
inc
pop
outsb
xchg
xor
mov
movsl
insl
mov
cmpsl
cld
add
mov
aas
push
sbb
sbb
ret
push
xor
ja
loop
inc
jb
sub
mov
push
mov
shlb
and
mov
xchg
mov
sub
rorb
sbb
mov
rcr
lret
fimull
cmp
sbb
loopne
add
push
ljmp
aas
mov
pop
push
shl
arpl
ret
icebp
dec
and
aas
insl
rclb
ret
cli
test
pop
pop
cmc
clc
popf
or
sbb
jne
sub
cmp
cmp
sbb
jl
xchg
test
std
mov
call
adc
sub
push
jl
jmp
popf
lds
mov
loop
fdivrl
xor
push
xchg
pop
orb
icebp
jno
stc
push
jne
mov
push
leave
mov
jmp
push
iret
ds
insb
jnp
es
jno
xlat
lods
inc
frstor
icebp
cmp
jae
mov
cltd
lahf
pop
cld
xchg
push
jmp
mov
pushf
adc
mov
and
xchg
addb
xor
stos
fwait
lods
mov
cs
dec
sbb
lahf
addr16
dec
push
sub
and
adcl
vmaxsd
cwtl
arpl
dec
je
or
sbb
sbb
hlt
imul
cmp
pop
mov
in
jae
cmp
arpl
into
cli
arpl
dec
and
and
push
sub
cmc
lret
int3
mov
or
scas
sub
loopne
ljmp
inc
rcll
push
push
insl
and
push
mov
fbld
movsl
push
daa
mov
inc
shll
test
enter
fwait
shr
cmpsb
rclb
jbe
xor
nop
jae
push
in
scas
fnsave
xchg
jno
push
xor
cmp
or
movsl
mov
pop
sub
push
xchg
inc
jmp
out
test
jns
inc
jns
clc
rorl
sub
sbb
ja
test
movb
loopne
sub
mov
fidivrl
outsl
or
mov
push
mov
enter
ds
shlb
or
xchg
mov
jnp
jecxz
lcall
leave
mov
and
pusha
nop
in
jge
jp
mov
sub
test
cmp
adc
dec
cmpsl
push
jecxz
inc
or
xor
aaa
call
repz
xlat
dec
mov
cmpsb
repz
jmp
data16
push
dec
jle
pop
mov
lret
push
mov
adc
xchg
iret
outsb
test
pop
cli
pop
pusha
pop
jge
jb
cmpsl
cmc
movsb
push
daa
out
je
inc
in
sub
rcl
into
rorb
jecxz
scas
pop
daa
data16
in
mulb
daa
out
or
inc
push
pop
leave
pop
jecxz
aas
stos
js
pop
aam
dec
pusha
rcll
mov
jne
imul
in
idiv
push
mov
lock
jp
adc
test
sbb
data16
pop
mov
lahf
sub
fisubrl
mov
cmp
xchg
repz
leave
daa
mov
gs
pop
add
push
sahf
out
mov
push
add
jae
add
xchg
int
outsl
add
or
int
dec
jmp
jno
imul
cmc
xchg
stos
jle
xor
test
sub
mov
mov
std
pushf
ret
mov
aam
and
clc
add
jns
stos
repz
test
or
lcall
adc
mov
pop
pop
shlb
lods
pop
mov
xchg
insl
scas
inc
dec
ds
out
mov
arpl
xchg
iret
jp
lds
adc
and
ret
inc
orl
xchg
ror
aas
push
fsubl
dec
insl
sbb
mov
mov
rorb
dec
cmp
adc
in
xlat
call
cmc
rcl
xchg
psllw
rcll
stos
out
lcall
mov
insb
push
outsb
push
dec
lahf
xor
jp
jno
scas
push
inc
push
movsb
je
mov
clc
jle
pop
push
cmp
xchg
clc
addr16
inc
test
or
jge
stos
insb
mov
cld
pusha
imulb
dec
jnp
aaa
push
xchg
jns
mov
ret
fwait
call
add
lods
decl
jge
das
or
lods
ficompl
fimuls
jl
push
pusha
pop
ret
or
lea
adc
inc
xor
jbe
push
dec
jbe
ret
mov
aaa
ljmp
mov
or
and
xchg
lock
or
or
push
scas
scas
jo
cld
ret
aam
jnp
popa
ss
mov
add
push
test
enter
pop
out
lcall
pop
mov
cmp
push
movsb
stc
aas
mov
jne
jge
fimuls
dec
movsl
mov
int
into
add
and
pop
sbb
mov
adc
in
aas
in
subb
xor
pop
leave
xor
hlt
repz
add
sub
test
and
pop
mov
loopne
cmpl
pop
sti
mov
jns
mov
pop
jnp
adc
jns
in
add
hlt
pop
mov
mov
pop
and
push
cltd
fstl
lret
divb
push
mov
sbb
dec
and
sbb
repnz
mov
loope
add
pop
inc
pop
gs
mov
outsl
cmp
or
les
push
or
xor
sbb
aam
and
lret
out
pusha
mov
mov
test
adc
shl
mov
or
lahf
shrb
inc
adc
ja
outsl
inc
inc
icebp
cmp
push
imul
mov
lret
push
lock
pop
es
outsl
mov
mov
js
dec
dec
jo
add
sub
pop
mov
cmp
adc
mov
jbe
stos
jecxz
or
in
cwtl
insb
insb
sbb
sub
jnp
dec
test
dec
pminub
sti
xor
idiv
jns
pop
cwtl
in
add
jg
mov
mov
inc
dec
mov
icebp
cmp
jns
xchg
xchg
xchg
cmp
sbb
jp
mov
dec
or
mov
push
insl
mov
add
test
dec
sbb
sti
xchg
push
sbb
leave
jno
mov
adc
ror
movsb
clc
jmp
adc
adc
sub
add
fsubrl
jge
xchg
pop
mov
push
xor
mov
jg
xor
out
ljmp
dec
in
aam
iret
xchg
out
ja
lahf
fnstcw
mov
movsl
cs
outsb
mov
add
pop
jno
stos
ljmp
je
insb
orb
xor
mov
icebp
mov
adc
jmp
add
and
es
in
pop
mov
ss
fdivs
mov
sub
ja
or
fs
pslld
lahf
cli
aas
or
ret
jle
sbb
pop
push
push
or
jmp
sbb
and
aam
ljmp
mov
jne
sbb
lret
pop
pop
jmp
push
inc
repz
mov
stos
cli
pop
mov
stc
in
mov
xor
sahf
je
pop
outsb
push
mov
or
addr16
fidivl
or
inc
orb
shlb
hlt
fisubs
pop
out
ja
imul
int3
sub
or
cmpsb
push
aam
push
xor
test
jg
nop
cmp
xchg
repnz
mov
jnp
mov
outsb
adc
xchg
xorl
mov
sarb
pop
pop
fldenv
jb
sbb
fsubrl
sub
aam
fnstcw
arpl
jbe
jnp
test
xor
pop
jp
cmp
cmp
push
in
clc
mov
dec
sarl
aaa
out
and
iret
mov
shrl
pop
pushl
add
testb
adc
enter
lea
push
push
add
xor
pop
rol
rorl
cs
pop
ror
jecxz
ret
inc
imul
leave
pop
arpl
aaa
pop
roll
cs
jo
jmp
or
lret
push
stos
and
stos
pop
cltd
fistpl
aas
in
dec
test
sahf
leave
mov
push
shlb
inc
rolb
inc
cmp
ds
jg
movsl
sbb
and
out
iret
cwtl
pop
jns
and
xchg
and
test
xor
mov
mov
sbb
js
and
cmp
leave
jl
stos
dec
scas
jne
into
fsts
push
popf
inc
mov
call
inc
push
pop
sub
inc
pop
repnz
lock
pushf
insb
pusha
js
jl
lds
lds
dec
pop
pop
push
gs
sti
mov
cmp
dec
and
cs
testb
jmp
in
jecxz
idivl
gs
cmp
jmp
or
outsb
jg
jmp
pop
addr16
sub
pop
pop
into
cltd
pushf
fdivl
sbb
testb
leave
shll
mov
or
mov
popa
add
inc
movsb
xchg
pushf
jno
or
outsl
nop
popa
cwtl
lods
popa
dec
inc
pop
xchg
fwait
xlat
dec
mov
xchg
mov
xchg
add
jecxz
inc
stc
or
out
insl
dec
mov
ficompl
stos
add
es
jl
ret
adc
fisttpl
insb
repnz
imul
out
inc
andb
sub
in
repz
les
data16
mov
sbb
movsl
add
inc
lahf
in
lret
or
fistpll
mov
in
mov
lock
daa
shll
int3
lahf
jp
mov
rorb
cmpsb
in
sub
fldt
lock
push
ja
mov
mov
pop
or
dec
add
mov
sbb
sub
rorb
shll
mov
fists
std
sbb
inc
loope
cmp
jne
loop
pop
out
leave
je
mov
inc
out
inc
dec
hlt
and
xor
test
adc
mov
add
push
xchg
jg
lret
add
stos
push
aam
test
inc
add
sub
inc
pop
add
out
int
hlt
in
cld
dec
std
sbb
das
scas
mov
jmp
cmc
rorl
in
sub
mov
scas
test
jl
lock
stos
pop
nop
cmc
test
rolb
testl
ds
inc
mov
adc
clc
jno
pop
xchg
lret
jp
and
arpl
mov
mov
xchg
sbb
pop
test
es
mov
into
jge
xor
dec
aad
cwtl
mov
adc
inc
fimull
cmp
adc
lcall
and
dec
fwait
add
adc
loope
xchg
jle
cmpsb
stos
jl
arpl
in
or
mov
cmp
dec
or
add
and
mov
hlt
inc
das
jae
add
and
divl
sti
jl
push
subb
out
icebp
repz
adc
stc
imul
int3
xlat
hlt
fbstp
sbb
pop
add
dec
and
mov
dec
icebp
adc
stos
sub
out
out
fstpt
or
and
dec
faddp
sbb
jle
sti
insb
xchg
pop
jnp
or
jae,pn
rclb
rcr
out
add
pusha
push
adc
pop
idivl
sub
fidivl
lea
cmp
add
xchg
dec
notb
insl
add
inc
adc
cld
repz
arpl
pop
cmc
xchg
cltd
pop
inc
hlt
mov
jmp
cld
add
sti
inc
sti
cmp
addr16
xchg
adc
nop
aas
das
imul
in
insl
js
xlat
in
inc
pop
cmpsl
mov
arpl
dec
mov
xchg
xor
sub
cmp
xor
push
out
cmp
lods
ficompl
dec
stc
mov
and
mov
push
mov
jg
jmp
mov
rcrl
mov
mov
add
fwait
enter
test
cs
cwtl
inc
mov
jb
dec
mov
in
xor
or
sbb
shlb
push
pusha
enter
ficomps
fld
jecxz
je
jbe
jne
xor
fistl
and
mov
mov
pop
out
fisubl
std
test
xchg
test
imul
out
add
sbb
call
and
mov
das
cmc
sysret
sub
es
xchg
xor
or
sbb
and
in
ret
fsts
sbb
stc
movsb
insl
jl
stc
lock
mov
aam
aaa
pop
push
adc
pusha
ss
lcall
inc
pusha
scas
rorl
push
mov
in
scas
inc
lock
dec
mov
pusha
xor
xchg
jmp
xor
jmp
ljmp
mov
and
add
pop
addr16
out
sbb
pop
and
sbb
cltd
decl
add
sub
aam
sbb
dec
loopne
adc
pop
add
insl
ret
in
aam
clc
jno
fldenv
lcall
imul
sbb
pop
add
aas
jae
aad
mov
lcall
lret
and
add
std
jo
clc
or
sbb
dec
lret
add
cmp
in
insb
mov
ds
sub
stos
lahf
inc
not
stos
mov
fcmovu
cmp
adc
stos
int3
cmc
pop
cmc
pop
out
push
movsb
and
in
jmp
cmp
iret
push
push
lahf
mov
leave
decl
jecxz
dec
in
jmp
cmp
mov
loop
paddusw
mov
jns
cs
and
shrl
test
fisubs
add
aas
cmpsl
add
fisttpl
mov
icebp
xor
subb
dec
mov
dec
jno
cmpsb
int3
aad
jnp
xchg
adc
fldl
jbe
ds
and
shlb
push
repnz
mov
sub
xlat
insl
mov
push
jae
and
xchg
ja
aam
mov
jns
clc
pop
jle
in
pop
rclb
sti
mov
out
lret
jmp
push
insb
andl
fwait
outsb
push
mov
jno
dec
adc
mov
push
sub
mov
les
popa
ret
cmp
push
push
mov
dec
xchg
mov
push
pop
stos
xorl
push
and
mov
cwtl
pushf
xchg
outsl
dec
jge
add
inc
cwtl
fs
or
xchg
xor
inc
dec
aaa
mov
sbb
sub
push
cmp
pxor
cmp
sub
jae
push
subb
pop
or
jns
rol
mov
adc
int3
mov
xchg
inc
push
leave
adc
sub
das
loop
scas
fisubs
je
pop
stos
cltd
adc
repz
cmp
mov
or
sahf
ja
inc
outsb
xchg
cmp
loope
out
inc
addb
pop
jle
or
fdivrs
mov
fcmovne
iret
addb
lret
cmp
add
movsb
sub
cmc
jp
or
add
jbe
je
pop
shr
int3
inc
cmp
fisttpll
bndldx
fdivrp
mov
sahf
cltd
jmp
mov
sbb
dec
mov
xchg
sbb
repnz
jbe
add
movb
sti
fidivrl
ffreep
cmpb
sub
sbb
mov
imul
fdivs
fwait
pop
outsl
and
pushf
roll
adc
inc
lods
loop
scas
pop
outsb
aaa
cmp
mov
xchg
lds
out
xchg
cltd
and
dec
sbb
sbbl
rolb
jbe
fcmovne
loop
lds
rol
arpl
lahf
jae
jl
lock
sbb
cmp
imul
jge
mov
add
mov
sbb
jb
in
adc
mov
xor
fistps
xor
mov
pop
cmpsl
jo
imul
gs
dec
into
movsb
mov
in
mov
jecxz
mov
call
ljmp
sbb
mov
clc
mov
jnp
pop
xor
lret
cmc
aas
sub
push
mov
dec
lcall
push
mov
rorb
and
add
cmc
sbb
add
mov
test
push
mov
iret
idiv
adc
out
dec
enter
xor
sbbb
or
adc
repz
adc
jl
loopne
xchg
adc
in
and
dec
mov
pop
sub
lods
addr16
or
pop
fsubrl
mov
mov
pop
adc
das
xchg
aaa
insb
mov
or
cmc
dec
push
testb
das
stos
inc
in
jge
outsl
adc
jg
imul
pop
xor
cmp
out
push
es
divl
mov
aaa
and
bound
xchg
sub
decb
jg
movsb
inc
bextr
pop
test
jmp
repnz
or
xchg
sbb
push
call
cltd
xor
inc
fcoms
add
pop
push
rclb
mov
lea
js
pop
mov
sub
adc
daa
mov
mov
adc
test
mov
push
data16
gs
jnp
adc
addr16
and
pop
iret
push
pop
leave
js
push
mov
scas
sub
xchg
test
add
pop
dec
ds
xchg
push
xchg
add
or
loopne
scas
dec
cmpb
jp
inc
mov
or
and
test
pop
pop
pop
pcmpgtb
jmp
inc
adc
mov
jns
aaa
sarl
loopne
aaa
mov
push
mov
xor
jae
mov
in
dec
push
test
ret
or
pop
test
pop
pusha
xor
xchg
dec
call
or
fsubl
pop
rol
inc
adc
notb
jno
mov
lcall
push
imul
xor
out
hlt
mov
mov
mov
inc
xor
movsb
dec
imul
in
push
inc
out
cld
pop
dec
push
andl
mov
fisubrs
cs
jo
outsl
pop
mov
jmp
cltd
pop
dec
jb
mov
jne
inc
in
jo
xorb
sti
call
jmp
xlat
lret
fs
mov
cmp
pop
idivb
jmp
loop
jb
negl
xchg
and
dec
movsl
dec
lret
sub
das
les
leave
lods
out
das
mov
xchg
jmp
fwait
mov
or
and
lea
push
sbb
loopne
xor
or
adc
cmp
scas
cld
int
sub
lret
cmp
add
sarb
ds
mov
inc
add
loope
jb
repz
jb
xor
sbb
out
sbb
pop
insl
lret
sub
movsl
notb
mov
pop
fistpll
xor
xor
push
iret
adc
mov
sbb
cmp
testl
mov
int
xchg
loope
loop
lea
ljmp
out
add
inc
ds
cmp
pop
mov
pushl
popf
add
cld
mov
cwtl
and
xchg
inc
inc
dec
test
popf
roll
cmpl
and
push
jo
dec
lcall
out
or
xchg
and
shrl
adc
push
jp
cmpsb
mov
aad
orb
cmp
das
sub
mov
xchg
mov
in
xchg
push
push
mov
adcl
dec
cmpsb
mov
push
int3
mov
js
mov
xchg
xchg
outsl
or
jmp
icebp
outsl
mov
sbb
mov
ds
sti
pop
fdivs
addr16
es
push
xchg
test
jle
sti
pop
and
xchg
xchg
xchg
push
sahf
in
xor
push
push
sub
imul
cmp
mov
call
test
fstpt
push
mov
jns
pop
call
sub
mov
test
cs
leave
inc
scas
pop
cmp
xchg
inc
mov
fstpl
push
mov
sbb
xor
popa
cmp
repnz
dec
outsl
xor
les
or
fmull
out
jno
sysenter
inc
popa
out
inc
jecxz
aas
das
dec
insb
dec
adc
push
dec
adc
into
lds
lret
jne
sarl
arpl
outsb
lods
xlat
mov
push
test
xlat
fbld
and
push
sbb
mov
mov
repnz
push
sbb
data16
inc
cmp
xchg
fwait
add
ja
pop
cli
or
mov
pop
das
icebp
stos
clc
mov
inc
xorl
mov
stos
ret
mov
popa
xchg
jle
jnp
mov
fcmovb
pop
repz
pop
sub
lahf
push
jmp
pop
mov
add
hlt
push
dec
stos
mov
lds
add
mulb
mov
dec
dec
lock
jno
add
aad
lea
jb
and
repnz
mov
xchg
jecxz
cmpsl
shll
cmp
insb
in
push
add
imul
in
xchg
pop
fistpl
and
dec
inc
aas
clc
leave
inc
xor
adc
sbb
jae
push
adc
push
pop
in
adc
inc
dec
scas
bound
mov
pusha
je
iret
icebp
mov
sub
or
jns
in
or
pop
gs
dec
leave
inc
push
shrl
sbb
sbb
mov
mov
adc
jl
cmp
inc
icebp
mov
mov
ljmp
pop
push
into
xchg
mov
xchg
bound
testl
fwait
inc
lahf
lods
cld
into
mov
dec
pop
jecxz
cmpsl
outsl
lret
into
add
dec
add
cmp
mov
loope
sub
mov
lret
fisubrs
mov
push
repz
pop
xor
mov
or
stos
xor
call
into
add
adc
ret
lds
xchg
scas
cmp
popa
popf
xorl
dec
xchg
insb
pop
in
adc
mov
in
sub
or
movb
sub
pushf
sub
push
lcall
jmp
mov
jae
cs
mov
ljmp
and
call
mov
roll
notb
push
and
negl
movsb
popa
out
mov
mov
pop
pop
fnstcw
aam
pop
xor
into
das
inc
ljmp
jecxz
and
incb
icebp
fwait
clc
dec
mov
xor
in
jne
jbe
dec
mov
enter
and
xor
cmpsl
or
test
lods
shll
jge
ja
popf
stos
mov
jecxz
test
jns
push
mov
cmc
stos
lea
loopne
mov
idivb
mov
loopne
dec
subl
xchg
pop
arpl
aas
mov
sbb
add
arpl
lods
js
imul
les
rcll
xchg
pop
adc
jge
lds
xor
in
xor
sub
jae
aaa
dec
jo
bound
out
cmp
popa
dec
outsl
lea
in
mov
fidivl
bound
lea
gs
cmp
pop
pop
add
add
lds
mov
jg
sub
lret
mov
mov
outsb
jns
xchg
cmp
add
int3
xor
adc
and
mov
imul
loop
xor
shrl
lahf
mov
shlb
mov
push
or
xor
jno
fwait
adc
xor
push
push
jbe
daa
scas
inc
das
out
push
push
ljmp
sub
cmc
inc
cli
sahf
cltd
mov
lahf
push
sub
pop
rolb
adc
xchg
aam
testb
imul
cmpsl
mov
shr
jno
paddb
mov
mull
push
pop
lea
sub
jns
out
test
fistpll
fs
mov
mov
sbb
ret
cld
cli
es
jb
pop
or
mov
pop
cmp
cmp
mov
add
das
cmp
cmp
pop
sub
fbstp
jle
mov
cmc
mov
cltd
adc
pop
sti
pop
cmp
and
sbb
xchg
xchg
out
nop
mov
ret
push
into
sbbl
les
xchg
filds
pop
rorl
aas
enter
insl
or
clc
sbb
xchg
popa
test
imul
das
xor
call
jle
jmp
jns
inc
sub
jnp
mov
and
inc
lea
or
lahf
inc
ret
sbb
in
adc
mov
mov
push
shrb
int
xor
mov
push
mov
movb
jns
cmp
push
stos
ljmp
inc
int
cmpsb
bound
cs
mov
xchg
lret
ja
lea
push
lahf
sti
push
xor
imul
movsb
mov
xchg
adc
add
push
sbb
sti
or
jl
movsl
inc
ror
xor
and
data16
jle
cmpsb
ljmp
ljmp
adc
pop
xchg
mov
dec
sahf
xchg
nop
sahf
inc
adcb
xor
insl
pop
insb
imul
outsl
push
jb
cmpsl
mov
inc
shl
sub
hlt
jle
pop
xor
lahf
daa
adc
or
out
inc
add
test
lcall
adc
jl
mov
pop
fsubs
add
call
js
adc
xchg
addb
fistpl
bound
lea
and
mov
dec
adc
clc
or
ljmp
in
mov
sub
das
lahf
push
sbb
je
or
push
push
mov
mov
add
lea
mov
sub
call
and
push
pop
iret
arpl
pop
ss
add
leave
jns
jne
jge
fisttpl
push
add
xor
popa
xor
jbe
mov
call
add
stos
fwait
sbb
inc
pop
insb
pop
fsubrl
push
mov
outsl
es
in
ret
push
xchg
jno
mov
cmpsb
jle
sub
mov
jae
lods
mov
rclb
sbb
sub
rcrb
and
hlt
mov
and
dec
and
pop
jp
adc
xchg
icebp
pop
cltd
cmp
sub
test
cmp
jne
imul
std
out
popf
jns
aam
jle
enter
cmpsb
cmp
aad
adc
or
mov
push
push
mov
cmp
orl
aas
adc
pop
or
mov
pop
jb
inc
dec
lret
lods
pushf
cmp
sbb
adc
les
into
push
jp
imul
test
cwtl
jnp
push
xchg
mov
aas
arpl
jmp
fsubrs
int
outsb
lea
xor
sub
pop
adc
mov
jns
adc
test
call
pop
into
lods
fildl
ret
sbb
dec
dec
or
cmpsb
cmpsl
adc
stc
fcoml
in
in
cs
test
add
adc
sub
xchg
repz
clc
fwait
in
stos
fdivl
lods
int3
call
xor
add
pop
jno
ss
popf
dec
and
dec
push
ror
push
lds
lea
sbb
fwait
fwait
mov
iret
fcoml
push
or
xchg
push
data16
lds
jns
jnp
pop
jmp
inc
jb
rcrl
outsb
sub
movsb
jmp
and
sbb
add
xchg
cltd
push
pop
pop
in
adc
pop
aas
dec
sarb
xchg
div
push
jge
mov
dec
ja
lock
ds
shlb
cmp
push
push
negl
jl
nop
popa
rclb
in
fs
mov
daa
dec
lods
add
lds
sbb
mov
aad
subl
jns
mov
call
xchg
add
lods
call
fidivl
into
lcall
push
fisttpll
push
mov
push
imul
cmpb
inc
and
mov
xor
mov
test
xchg
loop
sub
cmp
out
lods
cmpsl
cli
and
lods
pushf
or
into
jp
push
lret
aas
iret
xchg
or
lret
fnstenv
push
jne
jb
gs
popa
test
inc
or
sub
shll
decl
add
addl
mov
xlat
pop
lods
scas
mov
jns
adc
imul
cmpsl
mov
dec
push
daa
adc
js
addr16
jo
orl
jno
cmpsb
dec
and
mov
movsl
sub
push
add
cmp
cmc
out
push
fld
push
jnp
das
enter
ljmp
dec
out
stc
cli
xchg
lea
mov
add
fistl
jbe
fistpll
xchg
jle
and
ffree
pusha
push
nop
or
or
inc
lock
mov
rclb
xchg
cmp
pop
gs
xor
jecxz
push
push
movsl
add
call
pop
or
push
jmp
fsubrs
out
hlt
ljmp
cld
cmp
mov
pop
sbbl
push
je
jle
test
xchg
stc
rdtsc
mov
in
fwait
sub
out
sahf
mov
in
or
in
addr16
xor
loopne
adc
bound
cli
and
mov
cmp
jae
sbb
and
icebp
pusha
push
jp
xchg
sbb
jge
unpcklps
cld
xor
xlat
mov
mov
repz
pop
jne
and
inc
mov
andl
aaa
or
fdivl
xchg
aam
mov
dec
and
ss
push
cmp
in
loop
xchg
pop
pop
stos
enter
dec
dec
call
lcall
pop
daa
fidivl
mov
pop
mov
inc
jl
adc
into
in
cmpsl
adc
push
mov
adc
lods
xchg
pop
inc
push
popf
push
mov
push
pop
sbb
dec
pushf
in
or
jne
das
outsl
jmp
fnsave
loop
roll
stc
into
es
mul
mov
cmp
ljmp
in
mov
dec
cs
loope
out
ljmp
add
jge
imul
fldl
jecxz
dec
inc
xchg
cmc
pop
in
ficoml
pop
aad
sub
pushf
sub
and
adc
loopne
add
push
out
pop
cmpsb
sti
rcr
mov
lock
mov
xor
js
mov
mov
mov
dec
pushf
pop
call
push
lcall
xchg
sbb
xchg
jb
xor
jb
sub
lea
cltd
mov
imul
dec
iret
xchg
mov
add
out
daa
aaa
jge
in
add
imul
dec
clc
fldenv
jle
jl
push
js
pop
leave
cmpsl
xor
dec
jbe
mov
lcall
pop
aas
stos
mov
imul
scas
dec
stos
stos
jns
mov
mov
iret
xchg
sarl
mov
gs
leave
push
in
xorb
sbb
push
pop
or
mov
jbe
xor
inc
inc
mov
movsl
add
or
lret
pop
dec
jmp
sub
cmpsb
push
loope
sub
or
lea
inc
xchg
xor
sbb
testb
sub
mov
ja
xlat
cmpsb
into
and
and
pop
jmp
test
push
inc
cwtl
ja
in
mov
sahf
or
and
mov
shlb
pop
adc
sub
stc
mov
fisubrs
xor
mov
add
inc
xchg
pop
leave
stc
xor
loope
jnp
jb
fwait
in
nop
cmpsl
pushf
imulb
xchg
lret
push
int3
xchg
adc
xchg
jb
aam
enter
jecxz
mov
sti
ret
or
or
aas
mov
and
hlt
cmp
fcompl
jecxz
dec
mov
clc
xchg
push
jno
jmp
mov
imul
xlat
mov
movsb
xor
scas
test
push
insb
out
jecxz
fsubs
stos
cmp
jo
mov
flds
jno
mov
ds
cld
dec
lock
int3
outsl
das
ret
pop
fdivrl
xlat
dec
shll
icebp
pop
out
mov
cmp
cmp
pusha
adc
lret
sti
push
mov
insl
pop
aam
cmp
lret
pop
pop
cld
daa
jl
popa
gs
pop
out
in
or
add
mov
cmp
cmpsl
hlt
aas
icebp
ret
xchg
adc
mov
daa
shll
mov
pop
cmp
xchg
ljmp
and
fistpll
adc
lret
mov
data16
loopne
jns
adc
xor
push
addr16
push
std
popa
sbb
stc
jnp
sbb
jno
and
cwtl
mov
pop
hlt
dec
mov
inc
xor
mov
jne
jbe
pusha
jle
sbb
jg
into
push
sub
test
popa
xor
ret
divb
test
aam
into
add
add
push
inc
xchg
add
imul
int
push
jno
and
insl
bound
jge
xor
inc
jb
xorl
jns
and
clc
in
jbe
insb
sbb
idivb
lds
inc
dec
fwait
push
popf
push
fidivs
mov
leave
loope
push
neg
xchg
ds
mov
nop
sub
dec
test
jo
inc
pop
enter
push
push
mov
dec
mov
dec
mov
mov
jbe
mov
adc
and
mov
dec
mov
or
dec
insb
loop
shlb
enter
and
push
dec
xchg
in
jp
mov
inc
repz
mov
lcall
and
in
cmp
arpl
scas
das
inc
loope
sbb
and
cmp
pop
sahf
sub
mov
mull
xor
jns
outsl
push
cmp
jge
cmp
xchg
inc
loope
out
leave
and
ja
lods
imul
jle
arpl
testb
add
les
dec
xlat
adc
push
adc
mov
pop
xor
mov
cmp
or
jae
lret
hlt
xchg
jbe
jecxz
test
stos
mov
sub
lahf
call
out
mov
stos
test
mov
addl
push
jmp
jmp
jb
in
in
push
jb
iret
sbb
sbb
clc
int3
call
jae
fs
mov
jb
cli
cmp
inc
xchg
sbb
sbb
in
dec
dec
sub
aas
mov
push
push
cmp
mov
rol
xor
push
xchg
inc
bound
popa
sbb
mov
shl
in
and
jl
cmp
aas
enter
insl
je
add
dec
pop
lds
jecxz
mov
xlat
dec
add
push
mov
gs
fwait
add
repz
sti
dec
jg
fwait
cmp
stos
jnp
ret
cmc
fisubl
mov
cmp
jb
xchg
jl
sti
movsb
pusha
std
in
sub
cltd
sbb
inc
mov
enter
fimuls
lret
jae
adc
push
sub
mov
and
popf
cmp
mov
jmp
mov
mov
push
jmp
insb
rorl
insb
cmp
adc
mov
cmp
test
ret
sti
xor
jne
stos
lahf
xchg
cmpsb
movsb
ds
xor
pop
xchg
div
int3
jbe
nop
mov
cmc
push
lds
movsb
jns
sbb
jecxz
leave
mov
add
outsl
cmpsb
pop
add
cmpsl
pop
ret
addr16
enter
adc
cmp
sbb
sbb
jne
mov
call
mov
dec
fildl
jo
cmp
pop
adc
out
sub
movsb
cmc
adc
in
lds
mov
leave
or
test
jp
sarb
mov
nop
ret
jecxz
xorl
mov
mov
out
mov
cli
jne
fistl
outsl
inc
fcomip
adc
add
ret
dec
dec
adc
icebp
push
shlb
mov
xchg
cmp
pushf
or
adc
xrelease
mov
fsubs
aaa
xorl
xchg
jl
xchg
inc
jge
mov
xor
test
iret
mov
add
bound
stos
xchg
fsubrs
movl
adc
mov
pop
sbb
popf
mov
pop
out
int3
cmc
dec
call
inc
cmp
pop
out
pop
jg
xor
add
sti
jmp
stc
clc
fcomp
test
lea
mov
enter
outsl
inc
iret
pop
mov
in
imul
aaa
mov
les
pop
fistl
push
sub
inc
ja
stos
js
loope
test
cmc
push
adc
sub
aam
push
adc
xor
out
scas
out
jmp
std
in
inc
jb
lock
sbb
popf
xor
xchg
mov
iret
adc
push
in
ljmp
sbb
test
faddl
enter
and
call
sbb
pop
sub
inc
scas
fistpl
stos
movsl
inc
pop
ror
cld
adc
xchg
ret
inc
push
je
incl
mov
dec
out
sbb
or
sti
push
xchg
test
pop
add
data16
xchg
out
leave
push
imul
or
cmc
pop
jp
ret
push
pop
stos
mov
ja
insb
add
into
dec
and
and
fwait
jge
xchg
imul
mov
xchg
lods
jmp
addr16
fdivrs
out
sbb
mov
xchg
lea
dec
call
fwait
cmp
int
ret
sub
mov
hlt
push
jae
cmp
cld
push
inc
push
rcll
xchg
in
dec
loope
inc
push
xor
push
push
aad
adc
sub
movups
mov
jbe
lret
mov
xor
cmpb
adc
sub
inc
push
sbb
jnp
loop
cwtl
jne
cmovp
mov
fsubrs
out
xor
repnz
xor
cmp
pop
inc
scas
sbb
aad
mov
pop
mov
repz
roll
pusha
insb
adcb
imul
or
ss
dec
imul
cmp
cmpsl
mov
sbb
or
jmp
add
inc
adc
and
xchg
lods
mov
xchg
in
xchg
jmp
cmp
cmpsb
or
in
sbb
lret
xlat
cmp
inc
test
repnz
xchg
int
lret
and
lds
sub
sbb
iret
mov
cmp
xor
shl
xor
out
nop
hlt
imul
inc
cli
jmp
mov
adc
jno
sub
ja
mov
in
test
pop
mov
sub
insl
cmc
or
test
inc
inc
pop
flds
jae
lret
pusha
int
inc
in
je
fs
out
les
mov
add
and
loope
sbb
popf
mov
add
stc
mov
jbe
xchg
push
push
jge
cmp
mov
dec
xchg
rcl
sub
js
outsl
pushl
sbb
mov
bound
std
xor
je
bnd
inc
push
add
cs
and
or
outsb
xor
mov
mov
push
sub
adc
stos
notb
call
add
mov
daa
shl
sbb
pop
sti
dec
loop
scas
and
jmp
dec
pop
cmpsb
iret
sbb
jg
xchg
mov
in
mov
sarb
insb
pop
adc
decl
sahf
es
pusha
push
inc
ss
cltd
in
xchg
xchg
popa
ja
mov
xor
stos
jge
lret
mov
pushf
hlt
cli
pop
inc
sbb
cmp
dec
mov
leave
iret
mov
mov
pop
andb
sub
add
mov
inc
fucomi
push
ja
sbb
mov
xchg
ja
cmp
popa
int
sub
sbb
adc
or
imul
test
cwtl
mov
dec
mov
pop
test
lret
and
lock
cmp
add
jno
lret
dec
dec
xorl
sarb
out
pusha
add
fs
out
cwtl
push
std
js
js
sahf
stos
cwtl
xchg
push
dec
cmp
loopne
xchg
and
cmpsl
cmp
sub
fisttps
lahf
inc
out
jle
in
lcall
into
pop
icebp
pop
pushf
enter
sbb
not
js
addb
subps
push
call
fdivrl
mov
std
mov
mov
incb
jp
ret
daa
xlat
mov
pop
repnz
mov
xor
dec
jecxz
pop
dec
mov
jbe
xchg
dec
push
pop
pop
rorb
fiadds
test
popa
and
loop
lods
push
mov
xchg
cli
dec
mov
shll
jb
push
lods
loopne
jg
jae
mov
imul
stc
inc
popf
int
jae
adc
xor
xor
inc
lcall
xor
push
push
xchg
xchg
mov
or
sub
ret
push
pop
add
jnp
shrb
sub
and
sbb
rcrl
pop
js
mov
mov
movsl
push
outsb
lock
sbb
std
pop
pop
add
ds
mov
pop
icebp
pop
jo
xrelease
outsl
ret
das
mov
mov
adc
sbb
rcll
jl
adc
into
ss
mov
sbb
ja
pop
mov
pop
sbb
sub
add
push
pop
or
flds
adc
push
jno
lock
xor
inc
in
inc
push
es
sbb
jbe
into
or
cmc
add
outsl
pop
or
push
xchg
mov
inc
fists
in
xlat
sahf
xor
outsl
mov
mov
or
mov
dec
sub
incb
pop
sbb
fwait
dec
pushf
and
adc
stc
push
cmpsl
aad
into
outsl
in
and
push
aaa
repnz
cmp
nop
cmp
cmpsb
je
aas
sbb
and
pop
nop
jne
subl
push
sti
cmp
adc
add
insl
pop
xchg
cmp
jge
push
dec
lods
popa
lcall
push
mov
xchg
cmp
xchg
pop
or
mov
loope
pushf
xor
out
out
xor
shrb
sub
mov
xchg
pop
mov
pop
jl
icebp
lock
pop
cmc
xchg
ret
inc
imul
and
test
stos
icebp
jb
and
test
sbb
jecxz
int
pop
std
test
or
mov
sbb
push
bound
mov
lods
cmpb
pop
and
push
rol
push
push
add
shll
cmp
or
cmp
aas
imul
mov
xor
mov
push
cmp
sbb
sbb
test
xchg
cli
in
and
ds
pop
inc
movsl
repz
inc
adc
cs
adc
mov
das
das
mov
cld
cmpsb
mov
mov
dec
ss
call
jno
lods
cmpsl
fistpll
divl
or
lds
fisubrl
or
aam
sub
jecxz
std
mov
lods
mul
xor
int
popf
push
or
dec
cmpsl
roll
lods
stos
push
cs
mov
movsb
push
xchg
adc
aad
aam
push
ret
popa
pop
inc
cwtl
je
mov
fildll
mov
icebp
out
es
mov
push
arpl
push
cmp
rorb
mov
out
rcrl
rorb
cmc
popa
xor
mov
rcl
jg
mov
xchg
inc
in
add
enter
pop
call
in
enter
addr16
push
cmp
cmc
sub
enter
add
cmp
mov
je
cli
sbb
or
ljmp
push
lock
pop
adc
lret
out
lods
mov
adc
fsubrl
lcall
std
lret
nop
ss
sti
push
in
sarb
fstpl
sbb
inc
pushf
or
in
iret
je
pop
pushl
movsl
mov
jne
sahf
cmp
xlat
bts
das
mov
test
imul
js
test
mov
addr16
xchg
bswap
pushw
push
cmp
fsubs
fnstcw
adcl
mov
push
mov
in
rclb
sarl
cmp
adc
scas
orb
loope
aad
adc
sbb
movsl
inc
imul
jns
pop
add
stos
sub
mov
mov
lahf
je
cmp
dec
ss
fwait
lock
push
sar
dec
cltd
fadd
inc
aaa
mov
lret
lret
pusha
ljmp
int3
sbb
fwait
int3
mov
adc
cli
cli
add
loope
jmp
mov
popf
pusha
or
ljmp
push
push
mov
bound
inc
insl
adc
out
lock
lds
test
mov
out
fiaddl
imul
push
pop
mov
jmp
push
add
sub
or
xor
ss
cmp
fiadds
dec
pop
hlt
imul
xchg
xor
or
test
adc
idiv
loop
pop
in
ret
inc
cmpsl
xor
les
ja
scas
stos
sub
jg
lahf
cld
mov
cld
push
bound
shr
mov
pop
inc
or
cmp
test
cld
jns
jnp
leave
pop
xchg
aam
pusha
imul
cltd
mov
ds
pop
xor
mov
sub
push
or
dec
jg
das
ds
shll
pop
pop
out
add
std
xor
sbb
dec
cmpsl
ds
xlat
dec
inc
repnz
fwait
popl
je
push
pop
sbb
xchg
ljmp
cmp
add
jecxz
pusha
inc
call
lock
in
mov
xlat
test
inc
js
in
mov
popf
and
iret
enterw
jp
pop
xlat
nop
into
clc
mov
shlb
popf
or
mov
mov
ss
imul
pop
jne
int
mov
sti
jmp
push
pop
out
inc
pop
xor
lahf
adc
fisttps
sbb
ljmp
xchg
cltd
lock
aas
in
cmp
pushf
js
dec
mov
xchg
jnp
fcompl
aad
subb
xchg
push
dec
ds
cmpsl
jmp
mov
int
ret
cmp
mov
arpl
jb
and
sbb
mov
push
outsb
sbb
jb
push
push
push
mov
in
ds
movsb
dec
sub
mov
and
pushf
mov
repnz
mov
shrl
rorl
push
adc
enter
test
sbb
mov
pop
xchg
cltd
adc
or
ljmp
cmpsl
cmp
jae
scas
pop
out
inc
in
aas
xchg
xchg
lods
adc
shlb
in
enter
std
iret
lcall
mov
sbb
pushf
or
adc
or
jge
mov
cli
aas
lret
jle
push
push
xchg
jge
out
xchg
xlat
test
cmp
out
lea
jns
push
cs
lds
ret
jge
adc
movsl
xchg
push
dec
xor
and
fucomp
sub
sub
dec
xchg
pop
adc
push
popa
inc
add
cwtl
xchg
test
dec
cli
lret
insl
pop
pop
inc
aaa
scas
cs
and
pop
push
xlat
jno
mov
out
sar
jl
add
enter
and
or
jle
push
add
fistl
fisubl
idivl
mov
cs
in
cmp
sub
fdiv
ljmp
mov
mov
outsl
adc
ss
xchg
mov
movb
mov
and
aam
fstl
test
mov
sti
bound
lods
inc
frstor
jno
pop
cmc
xchg
mov
sbb
jle
mov
cmc
fnstcw
jnp
push
aaa
mov
test
out
scas
std
mov
pusha
dec
aam
xor
loop
inc
sbb
test
mov
jecxz
icebp
pop
xor
pop
xlat
cmp
and
mov
fidivrl
popl
mov
rcrl
fst
fsubrl
in
cmp
clc
aas
nop
adc
bound
or
pop
ljmp
cld
out
push
in
dec
xchg
xor
idivb
fnstenv
or
ja
enter
or
sub
insb
gs
lahf
mov
push
jne
std
add
shll
out
cmp
cmp
das
add
adcb
xor
rcll
sub
scas
in
lcall
jnp
in
cld
out
les
imul
mov
notb
xchg
push
jp
mov
js
ljmp
movsl
push
or
pop
shl
dec
repz
fstpl
loopne
int3
leave
mov
lods
cmc
xor
jmp
adc
dec
fmull
fwait
jne
pop
dec
mov
mov
inc
and
xchg
rcr
add
orb
push
pop
scas
jo
inc
and
dec
mov
add
mov
js
xchg
outsb
xchg
and
add
xlat
or
negl
adc
out
cld
cmp
in
xchg
push
ret
jns
out
loopne
sti
hlt
cmp
lret
fcmove
hlt
imul
pop
sbb
mov
pusha
dec
outsb
inc
sbb
mov
push
xchg
sub
scas
lahf
out
mov
and
inc
push
sub
cmp
sub
into
dec
jmp
and
ret
incl
rorb
ds
dec
jns
push
bound
dec
aad
push
adc
jmp
sbb
lods
push
mov
inc
xchg
inc
adc
inc
and
jb
stc
test
jg
mov
pusha
in
bound
lods
and
sub
cld
das
in
lea
dec
mov
sbbb
mov
xlat
or
lahf
push
cmc
cmpsb
cmc
jl
faddp
jns
jecxz
fwait
cmp
xchg
ljmp
dec
jb
mov
mov
dec
out
jmp
cmpl
adc
data16
in
aaa
jae
or
aas
jno
ja
jle
xchg
in
insb
dec
pop
adc
mov
mov
movsl
add
test
mov
inc
jne
mov
fwait
mov
cmp
std
in
in
movsl
xchg
or
out
mov
mov
cld
shlb
cmpsb
dec
lahf
mov
subb
lcall
test
cli
adc
fisttps
add
xor
adc
jno
push
cmp
sbb
adc
xor
mov
push
mov
pop
in
clc
lret
sbb
cmpsb
rcrb
int
add
sahf
int
jg
lock
je
sbb
dec
xor
push
dec
mov
push
cmp
pop
xor
adc
adc
add
xchg
std
mov
push
outsb
cmp
cmp
mov
icebp
lret
xchg
lods
dec
ljmp
or
jns
out
mov
out
cmp
jl
ja
loopne
sbb
fdivrp
aas
in
jb
and
cmp
jl
jbe
test
sbb
mov
aaa
aas
lods
ljmp
shlb
or
inc
mov
hlt
add
gs
jbe
dec
push
xchg
rcr
push
int3
mov
xchg
fs
pop
sbb
jg
lods
xor
rorl
lods
mov
push
or
cltd
sbb
jno,pn
sbb
xchg
ret
adc
mov
sbb
sarb
jmp
xchg
pushf
lahf
cmp
lret
xlat
call
or
jge
std
sub
mov
lahf
test
iret
roll
shr
inc
test
inc
enter
das
inc
xor
pop
fiadds
or
adc
adc
ds
push
cmp
pop
nop
xchg
loopne
sbb
lods
mov
mov
mov
leave
mov
hlt
cmp
js
adc
dec
dec
aaa
sub
or
sub
xor
jg
shrl
mov
add
xchg
ja
insb
mov
fcoml
and
pop
adc
idivb
mov
in
add
iret
dec
mov
ljmp
popa
add
push
cltd
mov
pop
adc
cmc
mov
outsl
mov
frstor
fwait
inc
ret
sbb
icebp
cmpsl
dec
orl
add
jae
into
mov
mov
fcmovnbe
or
ss
lret
cmp
cmp
call
ficompl
push
xlat
xchg
scas
orb
in
loope
mov
out
adc
or
or
or
inc
jp
ds
mov
mov
out
stos
mov
mov
inc
mov
mov
in
jb
dec
xor
sub
cmp
jbe
lods
inc
push
jo
sub
mov
mov
jmp
mov
aaa
inc
sub
cmp
lods
ja
js
cmp
outsl
ret
xor
mov
cld
test
dec
in
and
shll
cmpsb
push
push
adc
jbe
shll
out
es
es
iret
xchg
cwtl
dec
shl
arpl
ret
insl
andb
pop
mov
mov
mov
loopne
xor
cwtl
test
push
lods
fsub
fsubrp
pushf
mov
and
incl
out
divb
xchg
arpl
movsb
cs
add
and
lcall
sub
push
dec
sti
jne
loope
adc
in
popf
test
cmp
fbstp
leave
and
out
test
inc
testb
popa
movsb
gs
mov
mov
cmp
lahf
push
xor
sbb
adc
sbb
aaa
and
mov
jbe
xchg
add
inc
add
push
repz
loope
fs
or
sbbl
pop
dec
popf
pop
cltd
ja
push
movb
jb
dec
jecxz
sub
cltd
inc
push
adc
pop
pop
mov
rorl
subb
enter
cmp
inc
dec
mov
push
dec
xchg
mov
std
or
mov
arpl
pop
sbb
es
rcll
rcr
push
mov
push
dec
add
subb
dec
pop
aaa
aas
nop
ret
push
mov
sub
mov
int3
xchg
pop
dec
jnp
xor
out
rorl
fistl
xchg
cmp
testb
inc
aam
pop
jnp
inc
inc
and
icebp
jns
pop
dec
lds
out
push
inc
xchg
inc
pop
imul
dec
movsb
ds
mov
mov
js
fs
push
jns
jmp
sub
loopne
pusha
inc
imul
mov
jne
push
setb
pop
adcl
mov
inc
xchg
adc
aas
fldcw
xchg
xchg
outsb
das
addr16
jecxz
fcoms
aad
or
pop
inc
mov
shll
aad
mov
movsl
sahf
test
jbe
out
pushf
adc
jae
sarl
jo
cmp
aad
mov
cmp
xchg
pop
insl
adc
testb
xchg
stos
ss
fs
mov
aaa
pop
push
es
je
mov
mov
sbb
test
pusha
xchg
fnstcw
adc
mov
mov
cmpb
lret
cmp
dec
xadd
roll
mov
jae
adc
and
inc
adc
dec
scas
jecxz
push
hlt
jg
lods
xor
lret
outsl
nop
ret
jmp
cmp
les
xchg
jge
xor
loope
out
mov
adc
push
in
xchg
adc
dec
pop
mov
jnp
adc
fwait
addr16
xchg
mov
roll
push
scas
fsubrs
out
movl
in
xor
lock
dec
pop
mov
insb
imul
stc
xchg
iret
dec
jno,pt
fsts
cld
sbb
imull
pop
xchg
jecxz
and
daa
cmc
pusha
frstor
add
jecxz
dec
imul
icebp
cmp
dec
es
popa
fldenv
out
push
or
test
repnz
mov
outsb
stos
int3
adc
rcrl
lods
je
sbb
std
or
cmp
pop
mov
les
aad
fildl
pop
clc
int
dec
and
fiaddl
mov
cmc
lods
jns
fidivs
and
xchg
mov
repz
xchg
clc
jmp
xchg
lock
lds
test
fisubrs
nop
inc
pop
dec
mov
mov
and
fcmovu
jnp
inc
aad
out
popa
ja
mov
in
stc
ds
lret
adc
pushf
fldenv
rorb
push
mov
adc
mov
push
mov
jp
inc
cmp
insb
cmp
push
xor
mov
xchg
fldl
clc
iret
movsb
or
mov
test
test
lahf
inc
pop
or
cs
les
jl
push
adc
push
cmp
rorl
mov
pop
mov
leave
mov
fs
movsb
cli
xchg
cmp
add
aam
dec
dec
push
repz
or
outsl
mov
es
incl
mov
repz
pop
out
xor
xchg
nop
out
xchg
dec
push
jle
mov
repz
cmpsl
dec
pop
lret
xchg
or
inc
cmpsb
ret
cltd
xor
dec
ret
push
dec
int
xchg
cmp
loopne
adc
inc
movb
adc
dec
lock
in
cmp
cmp
cwtl
adcb
jo
fildl
sbb
aad
sti
test
xchg
jno
cmpsb
cmp
jbe,pt
and
dec
lea
sub
sub
js
mov
data16
lock
aaa
test
push
lock
and
jbe
and
sbb
mov
rorb
mov
jns
popf
out
mov
cmp
mov
jne,pn
or
inc
mov
pop
mov
cmpsb
xchg
arpl
lea
or
outsl
mov
stos
inc
daa
sub
mov
and
inc
mov
out
mov
mov
lcall
lods
jp
add
inc
jb
sbb
aas
ja
rcrb
xchg
mov
mov
in
dec
jmp
adc
fistl
in
pop
push
xchg
or
xorb
mov
icebp
pusha
call
pop
in
adc
adc
xchg
mov
scas
and
adc
xchg
cltd
or
out
xchg
clc
mov
filds
imul
cmp
repnz
and
andl
adc
mov
imul
sub
mov
std
daa
test
xor
lods
pop
ret
mov
mov
cmp
sbb
les
loope
aas
push
outsb
outsl
outsl
insl
cli
ds
mov
arpl
mov
pop
dec
sbb
sbb
cmpsb
xchg
test
popf
push
mov
add
dec
fdivl
or
arpl
cs
int3
ljmp
sarb
loopne
scas
scas
sub
into
xor
lahf
fisubrs
mov
add
imul
add
popa
push
fadd
mov
imul
mov
rcrb
jle
out
jmp
fs
push
inc
mov
mov
mov
pusha
mov
xor
mov
cmp
mov
mov
imul
gs
xor
or
cwtl
push
and
jbe
jg
fnstsw
lea
fstps
xor
cmp
dec
cmp
test
sub
lock
int3
insl
mov
imul
cmp
lods
aaa
inc
stos
push
mov
imul
aam
mov
sti
dec
mov
jne
mov
nop
push
neg
add
pusha
sbb
cwtl
out
test
mov
and
inc
jnp
cmp
rclb
stos
orl
xor
aam
ret
and
testb
cs
loopne
cltd
jge
in
je
int
and
dec
xchg
pop
fstl
cmp
mov
loop
adc
aad
inc
mov
jmp
and
ds
pop
rcrl
enter
add
push
enter
movsb
push
adc
lcall
insl
fidivrl
adc
jmp
cmpsb
insl
sbb
hlt
call
mov
mov
mov
fs
and
jbe
lret
and
popa
lcall
inc
push
mov
push
jo
leave
adc
xorl
mov
hlt
push
sbb
fistpll
cmc
xor
js
inc
fstps
ja
movsl
loope
call
mov
cwtl
into
mov
sahf
or
or
pop
out
push
enter
jae
ret
sti
popa
jbe
mov
incl
push
mov
xchg
add
jne
mov
scas
es
xchg
lahf
add
push
sbb
movsb
pop
and
out
pop
or
pop
movl
movsl
push
out
jno
jne
push
repz
test
adc
rcl
xchg
xchg
xchg
pop
cmpsl
in
shlb
xchg
xlat
xor
or
outsl
xor
das
cmovs
push
sahf
stc
mov
add
stos
testb
push
sub
out
icebp
daa
into
or
daa
popf
in
and
cmp
bound
or
dec
dec
xchg
adcb
xor
sahf
sub
push
jb
adc
dec
push
and
push
lods
iret
lret
mov
or
jecxz
repnz
sarl
cld
push
mov
ljmp
jmp
cmp
mov
es
and
mov
scas
clc
inc
shll
cmpsl
dec
inc
sti
in
xchg
add
cmp
hlt
cli
push
push
xor
add
inc
out
subl
jo
daa
insb
into
mov
dec
inc
lods
stos
fwait
xor
imull
ret
jp
and
fsubl
pop
mov
push
fsubr
lock
imul
mov
mov
ds
sbb
jecxz
lods
pushf
add
pop
ljmp
lret
inc
repz
jmp
lock
outsl
pop
fucomi
jg
aam
fldt
jno
repnz
mov
adc
out
fidivrl
jl
xor
mov
xor
outsl
dec
stos
lods
fs
repz
dec
das
add
or
test
jmp
adc
add
xor
data16
xor
into
lret
push
rolb
xchg
cmp
sbb
inc
stc
mov
loopne
mov
pusha
rolb
pushf
testl
cmp
pop
or
rorl
sti
pop
jmp
rcrl
stos
fidivl
stos
adc
push
lret
cltd
cmpl
in
lods
push
xchg
mov
gs
push
mov
jecxz
xchg
cmovo
hlt
fisubs
fwait
push
and
push
pop
out
out
movsb
out
out
pop
cli
xchg
xor
jl
inc
subb
sahf
in
imul
mov
push
pop
call
and
test
xor
lcall
xchg
sbb
test
cmp
push
pop
push
pushf
iret
xor
dec
fidivs
fldl
out
mov
cld
xor
loop
inc
inc
jne
jl
pop
push
divb
popa
xchg
pop
and
popf
sbb
add
xchg
lods
mov
inc
es
dec
in
out
jae
in
clc
pop
or
push
push
test
sub
test
mov
paddd
cmc
test
mov
out
in
nop
jns
jno
outsb
sub
inc
fldcw
pop
mov
aaa
cmp
mov
stc
gs
sub
push
test
loopne
enter
and
or
xor
dec
bound
mov
popf
mov
or
stos
add
mov
repz
xchg
sbb
or
dec
cwtl
mov
dec
test
and
divb
dec
push
sbb
mov
xor
mov
mov
stos
adc
aad
xchg
in
insl
out
xchg
hlt
xor
cmp
fildl
adc
xor
mov
lcall
jo
pushf
add
popf
nopl
sub
jae
popa
ret
fidivrs
je
jno
mov
cmp
outsl
xchg
and
repnz
mov
xor
loop
loop
imul
add
es
push
sub
adc
or
xchg
mov
push
mov
and
add
or
test
dec
or
sub
mov
fisubs
dec
daa
mov
out
add
push
jb
mov
dec
jbe
xchg
sbb
and
clc
dec
pop
sub
cld
das
push
cli
dec
sarl
push
ljmp
cmp
out
mov
into
inc
add
xchg
cmc
dec
push
test
and
addr16
push
mov
or
mov
mov
jae
call
sub
mov
push
inc
scas
loop
jmp
fyl2x
jno
sbb
in
out
fdiv
add
sete
mov
movsb
xor
sbb
imulb
addl
sbb
and
xchg
aas
outsb
fucomp
mulb
xor
adc
adc
aad
pop
loopne
jg
mov
ret
in
cld
jne
movsb
sbb
or
daa
add
lea
mov
pop
fisubl
jl
repnz
xchg
xchg
push
xchg
xchg
adc
ljmp
lds
mov
fnsave
xor
xchg
mov
add
outsb
inc
sub
ljmp
push
fcoml
push
dec
adc
in
mov
hlt
test
fcom
sti
cmp
mov
sti
shlb
mov
out
icebp
sub
testb
dec
imul
mov
mov
add
pop
mov
aaa
aad
out
mov
sub
jb
jo
add
fldenv
sbb
loope
dec
test
gs
and
xor
inc
jp
pop
pop
cltd
out
mov
and
lcall
xor
xchg
add
add
push
and
mov
or
repnz
aas
inc
mov
mov
fldl
fs
jno
lds
xchg
cmp
out
outsl
xor
fisubrl
sub
mov
stos
cltd
sahf
jo
push
inc
jb
cmp
loope
shr
mov
les
mov
inc
or
movl
mov
or
addr16
pop
cmc
adc
push
push
mov
stos
pop
mov
fcompl
clc
pop
aad
in
insl
mov
pop
cmp
add
xor
cmp
shll
sub
ljmp
sbb
add
sub
out
movsb
dec
sbb
push
adc
jnp
test
push
das
stos
rcll
scas
fidivrl
sbb
adc
mov
jnp
rcrl
lods
mov
lods
pop
icebp
call
jb
jno
mov
outsl
dec
repnz
mov
mov
outsl
adc
addb
mov
pop
mov
popf
icebp
dec
mov
lret
out
ss
pop
aaa
adc
jecxz
in
sub
lcall
int
jge
scas
enter
dec
mov
mov
out
ja
lock
jmp
addb
inc
jb
arpl
sbbb
popa
add
adc
repz
inc
outsl
sbb
jae
xor
aam
and
mov
cmp
in
xchg
mov
data16
sbb
add
pop
inc
and
and
test
outsb
xchg
add
mov
hlt
pop
out
mov
cmp
fsubl
and
and
clc
cmp
pop
cs
xchg
ret
add
sbb
ja
insl
add
mov
sub
stc
jb
push
mulb
pop
sbb
lock
and
xchg
js
loopne
mov
dec
popf
mov
xor
arpl
xor
test
dec
xchg
sbb
lahf
mov
les
sbb
sbb
lods
int3
stc
arpl
xchg
addr16
mov
imull
jl
daa
into
ret
adc
arpl
sub
outsb
inc
xor
adc
enterw
push
loope
lret
inc
xchg
mov
cmpsb
cmp
and
sets
add
out
fstl
and
pop
bound
test
imul
into
incl
dec
cmc
fldenv
loop
jmp
repnz
jmp
jnp
out
loop
shlb
mov
dec
fs
test
inc
or
xchg
aaa
and
in
cmp
mov
and
mov
pop
adc
sbbl
pop
stos
adc
mov
jg
std
sbb
adc
xlat
lcall
mov
inc
out
stc
inc
fstpt
lea
xor
insb
mov
mov
sti
push
stos
cltd
fsubs
lahf
mov
fs
mov
enter
imul
push
lcall
mov
adc
test
adc
mov
push
ficoms
outsl
push
jns
inc
jnp
mov
push
or
movsl
das
push
pop
ds
mov
inc
and
mov
es
jns
sbb
aam
mov
mov
ja
xor
jl
xor
sbb
popf
test
mov
into
outsb
lcallw
mov
outsl
push
mov
fmuls
repnz
xchg
sbb
outsb
mov
testl
pusha
or
inc
popf
sbb
push
outsb
jb
jno
push
inc
mov
in
outsl
dec
inc
and
dec
movsb
cmp
test
bnd
loop
push
push
je
ja
xchg
cmp
ffree
or
dec
jnp
int3
jmp
test
subb
invd
pusha
mov
aam
cmp
ja
sbb
cmp
xlat
icebp
sbb
push
adc
ljmp
movsb
leave
ret
aad
adc
repnz
jbe
aaa
imul
cmpsb
js
sub
out
jp
inc
pusha
jne
inc
mov
adc
cmp
fwait
push
and
iret
mov
cld
add
pop
scas
sarb
sub
xchg
pop
xorl
jbe
pop
xor
sbb
mov
cmp
or
in
in
cld
pop
loop
dec
arpl
push
gs
push
cmpsb
test
sti
jg
bound
pop
cltd
and
pop
cli
mov
cmp
stc
subl
sbb
xchg
xchg
movsb
adc
xchg
or
xchg
pop
add
adc
cli
outsb
insl
sbb
adc
dec
mov
or
into
xchg
stos
mov
add
loopne
pop
lret
test
xchg
or
outsl
int
insb
push
push
pop
push
jg
fsubs
test
aaa
or
push
add
cmp
pop
fsubs
cmp
arpl
lock
in
insb
aas
mov
cmpsb
ljmp
cmp
inc
mov
ljmp
loope
add
mov
jo
outsl
mov
hlt
jl
pop
lret
push
popa
pop
scas
dec
imul
mov
mov
int
xchg
or
xor
imul
lds
aam
add
jbe
popa
insb
jp
jno
js
adc
popf
pop
inc
in
je
notl
hlt
pop
add
test
nop
repz
mov
js
imul
lock
adc
and
fidivs
jmp
fadds
fwait
ret
testl
push
in
out
outsl
in
xlat
xlat
pop
sub
sbb
ret
int
negb
adc
adc
cmp
mov
push
ss
xchg
mov
sti
aam
aaa
loopne
xor
jnp
test
push
xor
icebp
pop
xchg
aas
pop
dec
mov
sub
pusha
inc
movsl
shrb
push
mov
sahf
out
push
fs
cld
lock
shlb
hlt
gs
cmp
rorb
add
add
in
mov
mov
ljmp
mov
bound
xchg
lahf
adc
ret
loopne
cmp
xor
iretw
push
fbld
stos
mov
fs
fmull
pop
sbb
jae
push
shl
sub
repnz
aam
mov
cwtl
cmp
mov
jg
pop
adc
jp
mov
cmp
std
pop
loop
fildl
lock
insb
cmp
xor
imul
imulb
mov
test
push
jg
xchg
mov
minps
imul
xchg
icebp
add
jo
std
xor
fidivl
or
cld
std
cwtl
decb
dec
cmp
out
mov
loop
pushf
shr
cmc
add
dec
fdecstp
rol
gs
push
lret
mov
hlt
movhps
out
add
sbb
jae
mov
mov
bound
jmp
cs
jnp
cmp
push
lea
and
xchg
lock
stc
and
repz
dec
cmp
inc
xorb
add
adcb
cltd
lahf
and
outsl
mov
mov
inc
add
into
cmp
sub
mov
mov
adc
movsb
shll
das
add
out
xor
pop
les
jmp
xchg
aas
mov
jge
pop
test
jg
pop
sub
adcl
loopne
mov
and
pop
mov
dec
fisubl
fildll
dec
cmp
lret
fisubl
int
cmp
pop
push
push
lcall
loop
or
add
test
imul
outsl
insl
mov
add
jns
jp
mov
dec
adc
inc
lahf
rclb
fcos
in
sub
rclb
clc
movsl
jns
cmpsb
cmpsl
cld
adc
inc
or
in
add
sti
and
aas
pop
cmp
rorl
icebp
dec
out
lods
xchg
push
je
sbb
sub
das
repz
dec
stos
mov
test
jge
mov
vmovaps
es
negb
adc
sub
add
testb
enter
pop
mov
std
dec
jbe
out
mov
xchg
sub
mov
jle
roll
cli
xor
aas
aaa
imul
mov
adc
jns
inc
mov
jge
aaa
pop
out
js
xor
popf
or
add
jbe
adc
or
adc
lds
xchg
cmp
mov
add
xor
inc
adc
jl
and
add
dec
inc
insl
insb
jns
out
jns
hlt
fidivrl
int
or
ss
push
xchg
in
jmp
je
outsb
pop
add
test
jbe
rcr
cmpsl
pop
xor
int
gs
push
dec
scas
xor
es
pushf
dec
dec
fildl
sub
cwtl
leave
test
sbb
sub
jge
mov
rcll
xchg
clc
repz
xchg
xchg
hlt
jge
push
dec
mov
push
cs
fwait
test
shl
adc
bound
mov
fdivrs
mov
and
jbe
pop
xor
aas
xchg
jne
push
idiv
jg
clc
cmp
mov
daa
mov
adc
rcr
push
cmp
mov
xchg
jp
jne
pop
and
push
inc
scas
fcmovbe
out
outsl
sbb
pop
jp
jl
rol
icebp
cmp
jno
push
int3
pop
cmp
ror
arpl
sbb
xchg
xor
xchg
pop
mov
scas
iret
inc
cmpsl
xchg
and
test
shrb
inc
xchg
mov
dec
es
loopne
mov
mov
out
mov
pop
scas
stos
fimull
jns
cmp
jb
mov
mov
pop
push
jno
adc
mov
dec
xor
imul
cmp
jle
cli
push
or
inc
pop
sub
adc
shl
sar
xchg
add
mov
testl
push
sub
push
cmp
mov
sub
push
les
movsl
push
push
daa
xchg
out
jae
rcrb
js
push
popf
ss
adc
lret
scas
dec
loop
gs
inc
fnstsw
xchg
stos
lret
and
imul
stos
sbb
test
mov
pop
out
in
push
add
decl
lods
lea
sub
and
mov
cmc
jae
and
adc
ljmp
and
cmp
lret
jo
pop
xchg
pop
push
fidivrs
mov
into
sub
xor
std
mov
pop
subl
push
inc
movsb
xor
xchg
popa
ret
and
pop
fcmovnu
out
jmp
jecxz
shlb
ss
and
sbb
cmc
xor
dec
aam
sub
mov
es
int3
sarb
imul
stos
ret
dec
loopne
das
xor
aaa
cmp
mov
xchg
sbb
imul
jb
mov
push
jl,pn
jg
pop
cwtl
xor
les
jecxz
pop
icebp
pop
mov
pop
aad
imul
cs
add
xlat
test
out
push
pop
add
callw
xor
loope
fwait
xchg
jg
hlt
mov
repnz
or
addb
inc
pop
inc
xor
pop
or
push
and
jne
js
imul
sbb
mov
pop
sbb
mov
lock
dec
ret
cmp
pop
pop
lds
scas
loop
ja
and
in
loopne
fsubrs
or
loope
push
js
fdivl
push
lods
dec
mov
jo
mov
in
mov
icebp
loop
insl
or
jo
outsb
roll
mov
lds
xchg
mov
notl
test
rclb
jecxz
fidivrs
add
insl
nop
jno
pop
lahf
mov
xchg
cmp
mov
lret
adc
push
fildl
adc
lcall
or
xlat
fistps
cmpsb
mov
inc
push
mov
ljmp
dec
xor
je
push
sub
cwtl
test
adc
outsl
push
and
imul
and
ret
sub
mov
mov
cli
sub
mov
xlat
mov
push
adc
mov
jge,pt
aam
fisttpll
sbb
and
addr16
mov
lock
sub
pop
cmpsb
mov
lahf
pop
push
scas
mov
fst
test
mov
subl
pop
ds
in
jecxz
mov
mov
mov
cmc
sbb
shrl
lret
leave
jb
sbb
fstpl
aam
mov
pop
push
jbe
mov
sbb
out
jo
addr16
add
stc
scas
pop
fidivrl
sub
dec
sbb
repz
adc
je
cmp
push
repz
mov
mov
nop
adc
inc
sbb
pop
cmpsl
repnz
bound
test
test
inc
xor
repnz
ret
test
xchg
leave
jno
pop
lret
fstps
jns
out
dec
inc
pop
aas
lds
push
in
jl
mov
or
pop
fwait
ret
out
repnz
pop
divl
lea
xor
or
dec
enter
aaa
fdivrs
clc
into
inc
ja
mov
jbe
addr16
dec
cli
ja
dec
push
hlt
test
and
nop
add
jns
jne
out
add
jp,pn
jl
rol
pusha
jae
enter
xor
fcoml
mov
rcrb
xchg
in
test
sahf
jne
inc
pop
sub
outsl
int3
fstps
lods
scas
xchg
cmpsl
scas
adc
cmc
jbe
mov
jle
ja
movsl
ret
sub
dec
loopne
outsl
movsl
or
leave
cs
and
leave
or
push
test
loopne
lods
addr16
and
inc
jno
and
mov
loop
cmp
push
sahf
push
mov
or
out
cli
sarl
daa
and
loop
inc
push
jmp
aaa
or
mov
xor
call
scas
fldl
inc
sbb
es
stos
ljmp
jp
outsb
std
mov
adc
sub
loope
sub
imul
or
mov
orl
mov
pushf
push
pop
fucomp
dec
imul
pop
imull
inc
sbb
es
and
outsb
jb
and
insl
mov
addl
loope
lret
out
pop
mov
cmpsl
add
scas
jmp
push
xor
jecxz
sub
popa
xor
shrl
filds
or
cld
inc
outsb
push
jge
sub
cmp
into
bound
mov
pushf
mov
sbb
repnz
sahf
sti
or
mov
cltd
mov
mov
out
add
aas
mov
shl
xor
cmc
xchg
rol
and
leave
xor
fcomps
push
cli
sbb
jg
pop
sub
rcr
and
test
xor
mov
pop
jp
push
in
cltd
fcmovb
mov
cmc
daa
push
mov
lcall
loop
repnz
ljmp
test
and
insl
testb
in
cmp
or
imul
stos
sahf
or
shll
fbld
andb
xor
rdtsc
mov
lea
pusha
test
adc
fs
add
int
pop
test
std
movsb
cmp
cmp
sbb
sub
or
out
dec
shll
pop
jp
int
rclb
out
and
sbb
mov
dec
jo
sbb
enter
in
cli
pushf
je
mov
inc
sub
mov
pop
or
or
loopne
pushf
and
mov
fnstsw
sub
je
cmpsb
or
stos
in
push
int
es
mov
and
pop
mov
insl
xor
scas
adc
dec
inc
push
lret
and
sbb
jo
mov
sbb
nop
or
fidivs
sub
cli
and
cmp
jnp
and
cs
inc
outsb
adc
sub
cmp
sub
mov
jmp
cld
adc
push
mov
add
mov
mov
add
xchg
movsb
stc
pop
mov
sti
cmpsb
dec
pop
pop
cmp
imul
in
mov
lds
mov
jge
andb
lcall
repnz
push
and
xor
pop
add
nop
sbb
cli
cmpsb
or
ss
sahf
jge
mov
cmp
push
out
lock
cwtl
and
adc
loop
jl
sti
inc
xchg
push
jecxz
ss
push
adc
and
or
or
sbb
das
shr
aaa
loopne
out
mov
mov
push
cmpsb
div
ds
add
repnz
or
ds
or
fsubrl
clc
mov
cltd
add
scas
and
or
inc
or
in
inc
loopne
pusha
aam
mov
cwtl
lret
add
das
subb
sbb
insl
inc
inc
lock
stc
xchg
lods
cmp
xchg
test
gs
lock
xor
lret
shlb
jne
cld
loop
fisubrl
test
sbb
pop
sbb
fcoml
mov
inc
scas
xchg
es
call
cli
ljmp
clc
cld
cwtl
data16
in
ja
stos
in
jg
cmp
mov
xchg
loopne
loope
dec
addr16
repz
lock
or
pop
dec
or
les
dec
idivb
inc
mov
outsb
mov
mov
orps
popf
es
into
pop
jl
or
push
mov
mov
in
mov
fstpt
cli
mov
push
pop
neg
ljmp
int
sub
cmp
cltd
lds
fstps
imul
add
hlt
sbb
jno
push
xchg
sahf
aad
mov
loope
or
movsb
stc
aaa
cli
push
jb
sbb
imul
lods
ljmp
fists
shl
fwait
sub
repnz
mov
mov
imul
mov
push
push
mov
int3
iret
cltd
and
scas
dec
gs
or
or
sub
add
imul
rorb
cmp
cmp
clc
pop
and
cmp
lea
fists
add
lods
nop
aaa
fimuls
cmp
fdivrs
iret
or
or
jns
add
and
adcl
xor
cmpsb
push
jbe
push
pop
fs
mov
add
dec
dec
add
lret
in
push
push
arpl
mov
xor
jle
mov
xor
add
js
movsl
adcb
mov
sbb
int
mov
jno
movsb
test
xchg
repz
mov
push
push
ja
xor
jmp
cltd
addr16
push
bnd
mov
call
push
les
inc
adc
lret
xchg
adc
out
xorl
rcrb
pop
adc
sbb
gs
nop
out
roll
sti
push
je
xchg
les
out
daa
xchg
pusha
or
jg
pop
ja
addr16
daa
clc
xchg
data16
divl
or
ret
lds
or
jmp
push
stos
std
ljmp
frstor
stc
jp
cmp
cmp
les
push
inc
lock
xchg
stos
movsl
mov
or
das
dec
and
jp
push
cmc
and
push
fucomp
in
cmc
pop
and
push
mov
mov
jg
adc
ret
mov
mov
icebp
lahf
popf
jne
jecxz
into
push
aad
cmp
cmp
lcall
ret
push
sub
or
dec
ret
add
setle
aas
sub
xor
out
adc
movsl
stos
lds
jo
arpl
ret
sub
pop
mov
add
fwait
adc
imul
data16
rcrl
int3
popa
cwtl
pop
jne
scas
mov
xchg
aad
xchg
scas
in
lahf
cmp
movsb
jbe
test
mov
arpl
sub
mov
sbb
or
jmp
stos
test
les
mov
popf
cmp
jno
dec
push
jb
jb
mov
or
mov
fnstsw
adc
push
fldcw
lds
pop
sbb
gs
sarl
shlb
das
mov
aas
fldl
cmp
nop
pop
or
div
sahf
push
jmp
adc
xchg
mov
pop
or
mov
or
dec
dec
sbb
add
lods
sbb
sub
adc
push
int
adc
or
addr16
lock
stc
xor
inc
inc
and
loop
int
dec
leave
fcom
cmpsl
je
shll
xorb
enter
push
stos
push
stos
mov
enter
mov
repz
pop
cmp
mov
push
int3
jg
inc
loopne
shl
mov
pop
jg,pn
dec
adc
sub
mull
xor
addl
or
fs
add
mov
flds
mov
xorl
fwait
add
icebp
mov
dec
out
loopne
mov
cmp
int
xchg
leave
movsl
adc
cmp
lds
pusha
fdivs
push
cmp
xor
xor
fwait
push
push
cmp
notl
and
add
in
push
ret
jl
mov
dec
push
inc
mov
test
push
js
lods
cs
stos
adc
sbb
adc
ret
subb
sbb
outsl
sbb
mov
sahf
xor
orb
mov
xchg
inc
cmp
sarl
lret
test
leave
jns
push
aad
lock
aas
cwtl
add
ror
ja
and
add
rol
mov
jbe
xchg
xor
lea
addl
mov
xor
lock
mov
mov
inc
icebp
addr16
inc
das
shl
mov
inc
adc
icebp
xor
add
add
sbb
jp
sub
les
sub
mov
add
dec
or
mov
xor
xor
mov
std
push
adc
fdivl
lock
jl
fistl
and
nop
sarb
in
jge
mov
data16
or
das
sub
xchg
push
mov
pushf
push
adc
movl
fdivrl
scas
ret
jne
pop
pop
lret
sahf
and
xor
rclb
cmp
xor
enter
sbb
test
mov
cmp
cmc
xchg
sub
pop
pop
xchg
in
sub
inc
ljmp
mov
aaa
and
pop
dec
add
inc
cwtl
in
stos
sub
inc
scas
pop
rcrb
std
addr16
out
dec
xor
lods
mov
fs
sub
mov
ss
jb
mov
ficoms
pop
inc
or
add
orb
push
pop
mov
mov
mov
push
aad
jno
adc
aas
jmp
mov
mov
test
add
icebp
test
loope
jb
ss
js
mov
adc
nop
in
dec
sub
rcll
daa
icebp
fdivp
popf
daa
fwait
jno
xchg
insb
cmp
adc
xchg
test
xchg
cmc
push
and
shlb
mov
cwtl
cmpsl
sbb
inc
or
outsb
nop
ljmp
mov
mov
pop
mov
mov
pop
insl
rol
scas
dec
testb
xor
ret
xchg
inc
mov
cltd
int3
xchg
loopne
push
jle
mov
rcll
push
imul
mov
mov
xchg
shll
stos
jl
add
pop
and
and
push
mov
pop
xor
adcb
jae
stos
div
add
test
cwtl
inc
pop
sbb
mov
in
jne
dec
sub
inc
in
mov
jl
cld
xchg
stos
dec
xorb
xor
rorl
in
pushl
movsb
lea
sahf
fisttps
mov
or
data16
popa
dec
mov
pop
adc
jmp
adc
mov
fdivs
inc
jge
icebp
mov
lahf
pop
adc
lea
and
dec
dec
hlt
das
bound
xchg
shl
ja
push
xor
cmc
or
stc
sub
jp
jno
mov
not
mov
xchg
or
das
sbb
mov
ret
pusha
or
cmp
sbb
adc
fildll
nop
push
cmp
pop
imul
cmp
mov
and
lods
pop
test
pop
call
pop
add
out
xchg
cld
dec
bound
cmc
cltd
dec
mov
leave
sub
sbb
movl
lcall
xchg
scas
imul
add
lret
into
xor
in
out
pop
pop
stos
sub
data16
and
mov
sahf
rcl
int3
xor
xchg
cmp
shl
sbbl
or
and
xchg
cmp
dec
mov
cmp
insl
pop
push
sbb
stos
addr16
jp
push
shll
inc
dec
jge
and
sub
xor
movsb
movsb
scas
lods
and
sbb
movsl
jp
push
cmc
xlat
in
fdivl
mov
lret
ret
in
sbb
mov
sbb
pop
lock
pop
mov
out
sub
mov
xchg
xor
or
dec
into
popl
addr16
in
push
mov
sbb
pusha
test
outsb
xorl
cmp
clc
movsl
jne
lahf
cmp
mov
idivb
pop
adc
cmp
out
outsb
imul
xchg
sahf
jle
xor
push
js
repz
into
inc
int3
sahf
addl
jne
out
and
cmp
and
cmpsb
dec
out
pushf
or
add
mov
mov
mov
sarb
push
addb
inc
rorb
leave
lret
and
pop
or
loopne
int3
and
sahf
nop
aas
sbb
xchg
xor
ljmp
inc
je
mov
stos
shlb
mov
jo
nop
jmp
inc
hlt
ss
rcrb
sub
adcl
xchg
cmp
repz
sbb
leave
cmpsb
pop
pop
and
mov
ret
add
mov
push
mov
add
packuswb
fs
stc
push
sahf
leave
cmp
leave
xor
in
dec
int
add
and
loope
out
movsl
push
lret
shl
shll
rorl
das
rcr
and
add
fdivl
das
data16
stc
in
xor
hlt
mov
mov
mov
jl
sbb
hlt
stos
enter
jbe
popf
jne
sbb
add
dec
jo
test
dec
adc
cld
nop
decl
mov
mov
mov
test
push
adc
cld
lret
mov
push
call
into
mov
pop
jo
fsub
aas
mov
add
inc
dec
mov
mov
xchg
lds
dec
fld
xchg
mov
jl
sub
xchg
dec
rolb
push
cmp
xchg
enter
dec
fildll
nop
push
stos
in
pushf
fwait
xchg
sbb
adc
dec
xlat
adc
xor
and
test
lret
pop
dec
fnsave
pop
fbld
pop
loop
out
xchg
rcrl
and
jle
dec
mov
dec
xchg
loope
out
xchg
out
dec
gs
mov
cwtl
adc
mov
int3
sbb
sub
jmp
mov
jg
add
js
or
insb
mov
pushf
xor
cmpl
clc
mov
or
mov
push
cs
fwait
mov
cs
movsl
inc
leave
jae
ret
icebp
ret
lock
sahf
mov
sarl
xchg
adc
xchg
adc
addb
sub
or
sbb
test
iret
fisttpll
jl
sub
dec
and
push
cmp
add
inc
daa
add
ret
adc
loop
jg,pn
sbb
aas
scas
mov
jge
mov
pushf
in
imul
pop
push
imul
push
xor
fdivs
and
test
in
mov
sti
jecxz
add
or
mov
and
lods
mov
pmuludq
inc
xor
and
sub
shll
stos
pop
imul
hlt
aad
fcmovbe
lret
das
mov
or
fcomi
inc
inc
rolb
sub
push
stc
or
cs
sarb
testl
inc
or
sbb
mov
adc
pop
add
test
sub
cmp
insb
int
rdtsc
movsb
mov
add
rol
insb
movsl
dec
pop
cmp
scas
sti
pop
sub
mov
or
jb
push
cs
lock
clc
xor
in
push
push
stos
mov
jnp
mov
push
mov
add
adc
cli
fists
sub
add
push
fwait
pop
lds
push
gs
or
arpl
pop
xchg
in
push
movl
aaa
rorb
loope
xlat
sbb
stos
int
addl
xor
inc
orb
ja
adc
xlat
add
lods
fmuls
xchg
push
push
mov
mov
ficomps
ds
popf
pop
outsl
lods
push
xchg
cli
fucomi
sub
pop
imul
cltd
push
sub
lods
mov
push
mov
pop
dec
mov
jno
in
sub
inc
sbb
pop
ret
nop
hlt
movsb
test
pop
aaa
mov
lret
ret
in
xchg
mov
outsb
xor
sub
or
push
into
sub
arpl
out
roll
stos
sbb
and
jg
dec
cmp
outsl
push
insb
shll
cmp
rcr
mov
aad
fidivrs
and
sub
in
fisubl
xor
add
xor
jmp
mov
rcr
ficompl
sub
ret
and
test
cmp
cld
lahf
cmpsb
fsubl
jge
inc
pop
nop
movsb
pusha
movl
test
stc
push
pop
scas
add
push
pop
push
fildl
or
mov
aas
sub
jecxz
addr16
pushf
sbb
and
cmpsl
jge
fnstenv
scas
pop
lret
fildl
push
or
mov
dec
in
test
inc
xchg
insb
mov
or
pop
xor
push
mov
pop
jns
pop
mov
jl
out
out
sbb
fwait
lock
out
in
xor
loop
mov
inc
jbe
add
pop
xchg
arpl
xor
adc
dec
outsl
rcl
test
daa
nop
and
and
enter
nop
mov
mov
xchg
xchg
addr16
out
out
dec
dec
xchg
je
cs
sub
fadd
int3
fwait
jae
adc
popa
nop
das
cmp
push
dec
ret
fdivr
rorb
cmc
fists
cmp
in
dec
cmc
insb
ss
dec
mov
das
rorl
mov
insb
jae
jne
push
sti
fsubr
clc
push
loop
pushf
push
or
bnd
cmp
test
hlt
dec
sbb
fadds
sbb
jmp
mov
jp
sbb
dec
mov
stos
sbb
add
sub
mov
pusha
test
xchg
inc
insb
pop
sti
or
jo
popf
mov
push
sbb
outsl
mov
shlb
pop
mov
pop
mov
xor
jecxz
mov
sub
xlat
int
xor
sbb
out
in
xor
and
cs
jae
and
mov
clc
jo
adc
int3
sti
adc
mov
sbb
icebp
cmp
sahf
jp
sub
es
pop
pushf
js
or
and
sub
dec
std
pop
add
adc
subl
jmp
bound
xchg
mov
test
or
add
ljmp
xor
cltd
inc
xor
pop
and
jae
fs
pop
jg
adcb
out
adcl
xor
and
sbb
movsb
sub
pop
push
aaa
xchg
das
ss
xor
into
add
nop
popa
xchg
push
pushf
xor
iret
adc
lret
pop
cmp
sub
mov
push
test
mov
and
lea
iret
mov
mov
lods
xor
lahf
std
xor
lcall
add
push
jo
mov
add
xchg
sub
xchg
adc
push
insb
inc
mov
in
and
dec
insb
dec
sub
popa
push
push
cmp
inc
cmpsb
mov
pop
and
test
arpl
adc
ds
lock
stos
cmc
jmp
imul
fbstp
popa
inc
jno
xchg
sahf
pop
outsl
sub
fdivrl
call
into
push
mov
sbb
mov
push
and
dec
ds
test
notl
mov
push
push
mov
aad
ret
out
cwtl
lcall
pop
in
ljmp
fists
mov
test
scas
lea
mov
mov
jl
das
jns
lcall
xor
xchg
mov
cld
rolb
cwtl
xchg
and
outsl
pop
and
xlat
pop
sbb
unpckhps
cmp
or
pop
dec
mov
scas
pop
out
faddl
xor
popf
add
insb
repnz
mov
pusha
aaa
cli
or
or
xor
std
lods
dec
jecxz
and
adc
shrb
mov
sub
idivl
inc
pop
mov
mov
aaa
popa
ret
das
and
movsb
push
inc
fcompl
jl
add
int
and
jg
xor
xchg
test
dec
xchg
fistl
xor
fdivr
jne
push
fbstp
int3
adcb
gs
pop
push
out
arpl
movsb
inc
mov
iret
mov
fiadds
ljmp
or
cli
fwait
jge
push
jns
jnp
dec
test
dec
add
mov
mov
das
out
and
mov
cwtl
repz
into
adc
and
xchg
jns
and
cmp
es
aaa
ja
popf
add
mov
push
xchg
jmp
dec
pop
adc
cmp
pop
cmp
mov
sarb
xchg
and
lds
cmp
lahf
or
sub
and
pop
in
push
jmp
test
popf
int
or
xor
jge
rcrl
hlt
arpl
stc
push
push
jg
sbb
popf
inc
repz
mov
cmp
lret
xchg
or
push
pop
mov
mov
jle
push
mov
xchg
dec
insb
mov
out
dec
push
lret
sahf
aad
bound
divl
out
in
fcomps
and
ss
pop
repz
and
in
mov
or
scas
ror
ds
sbb
mov
test
adc
inc
xchg
cmp
adc
push
out
dec
mov
xor
sbb
ret
data16
lods
int3
and
push
das
fimull
mov
test
and
and
lea
rorb
ret
call
mov
pop
jno
sbb
push
and
sarl
mov
iret
lods
xchg
xchg
test
out
or
or
and
lahf
fdivrp
cwtl
roll
mov
push
insb
mov
sbb
jmp
add
xchg
and
out
and
push
loop
iret
sar
adc
pop
sbb
lcall
dec
in
lds
shlb
aaa
add
inc
jns
aam
sub
inc
hlt
adc
pop
xor
mov
call
cmpsl
mov
adc
cmp
andb
lods
add
arpl
push
inc
cmp
xor
inc
ljmp
stos
and
out
adc
movl
in
inc
ljmp
xor
in
lods
jb
test
push
out
push
xchg
loope
aam
add
arpl
test
mov
enter
inc
adcb
sahf
sub
dec
inc
sti
jo
push
outsb
mov
jnp
sub
test
jne
jo
dec
imul
dec
outsl
adc
push
jmp
xchg
outsb
out
mov
mov
loop
rcrl
sub
hlt
add
or
std
das
js
inc
push
mov
inc
pop
xor
mov
xor
sub
jecxz
add
xlat
sub
xchg
int3
pop
and
daa
pop
jns
mov
mov
mov
adc
mov
add
int
ja
sbb
pop
sbb
and
dec
ds
arpl
sbb
insb
adc
jmp
mov
or
imulb
fcomi
jle
in
xor
idivl
sbb
and
jmp
lea
sbb
out
mov
rcl
xchg
lret
test
enter
mov
or
int3
in
shr
sub
pushf
xchg
adcl
adc
add
in
push
inc
xor
das
xchg
call
or
and
sub
mov
dec
cmp
pusha
sbb
mov
sub
sbb
scas
aas
popl
fnstcw
inc
and
push
fldcw
push
mov
std
pop
enter
mov
mov
xchg
inc
icebp
shrl
xorb
xchg
push
push
mov
sub
pop
jne
xorb
ret
repnz
jno
stos
ljmp
data16
mov
and
sbb
jae
push
movsl
int3
sbb
out
call
xchg
pop
and
lcall
stos
jbe
add
mov
mov
cwtl
mov
test
sahf
and
ret
sti
jmp
pop
pop
mov
xor
lret
fcmovu
js
cmpl
clc
push
mov
mov
mov
lret
push
pop
mov
and
shrb
sbb
shlb
int
jl
cs
fcompl
idiv
jb
dec
sbb
jmp
add
les
mov
jnp
mov
lock
mov
sbb
outsl
icebp
iret
sub
cmc
aaa
jno
sarb
sbb
inc
mov
jno
pop
cmc
int3
aaa
ljmp
adc
pop
add
mov
or
and
pop
lret
shlb
repnz
add
push
lcall
push
pushf
inc
push
adc
into
les
mov
add
bnd
add
stos
insl
adc
in
xchg
dec
enter
or
nop
aas
nop
fwait
ret
cmc
testb
jl
dec
cmp
lret
jo
lods
mov
sub
out
jae
dec
jg
lock
adc
lock
adc
pop
lods
test
aaa
cmpsb
xor
dec
dec
sahf
add
enter
push
jecxz
mov
hlt
stos
lods
mov
scas
mov
mov
jmp
fnstsw
add
mov
fisttpl
popa
lret
inc
fwait
out
or
cli
stc
movsb
xor
push
sub
pop
dec
aaa
call
testl
jge
fidivs
int3
mov
clc
lds
mov
pop
shlb
mov
pusha
in
pop
xor
stc
adc
stc
sub
fists
idivb
pop
jmp
inc
scas
add
xchg
jp
xor
dec
mov
nop
sub
push
cwtl
inc
insb
jge
pop
ja
push
jbe
ja
dec
mov
push
xchg
and
cmc
cmp
xchg
je
adc
ja
mov
test
or
jne
xor
adc
adc
add
nop
sub
push
xor
lock
mov
jbe
or
push
in
xlat
push
mov
sub
popl
clc
imul
loopne
mov
ret
iret
mov
or
cli
mov
stc
call
fsubl
pop
aad
add
repnz
in
pusha
push
popa
cld
call
xchg
cltd
stc
outsb
jl
ljmp
rcll
out
ds
mov
jecxz
inc
lret
nop
pop
dec
jle
adc
sub
cmp
or
fucomi
sub
xor
sbb
stc
xlat
fdivl
push
dec
ja
pop
mov
push
lahf
mov
movsb
imul
dec
imul
cmp
in
jp
test
dec
outsb
mov
inc
inc
or
in
test
mov
lcall
lods
fadds
cmp
sbb
int3
mov
pusha
adc
push
mov
aad
xchg
std
stc
icebp
mov
xchg
and
pushf
icebp
cmp
movsl
int3
sbb
rcl
cltd
sbb
mov
in
out
je
xchg
std
cmpsl
sbb
mov
mov
and
and
jo
xchg
xchg
je
jno
push
and
in
fs
xchg
pop
push
out
xor
mov
sti
leave
inc
out
adcb
jno
mov
fisubrs
lcall
repz
xchg
pop
mov
jne
inc
jle
out
clc
push
adc
stc
enter
data16
gs
xor
imul
cmp
insl
mov
jne
inc
mov
mov
cmp
pop
mov
push
repnz
std
fcom
mov
int
in
cltd
pop
mov
pop
lcall
xchg
add
mov
movsl
mov
inc
and
and
xor
roll
aas
sbb
mov
jbe
jb
js
pop
mov
push
push
jne
mov
adc
lcall
test
aaa
adc
and
ret
addl
mov
pop
push
and
xchg
call
enter
cmc
lock
enter
fwait
outsl
dec
pop
push
cmpsb
add
sbb
mov
stos
fsubl
call
xor
je
je
mov
andb
sarl
das
pop
testl
push
xchg
xchg
in
lea
in
push
lret
in
lods
push
notb
loope
push
jge
pushf
notb
lcall
mov
inc
mov
loop
jecxz
pop
gs
movsb
add
xchg
jmpw
jne
push
outsb
or
repz
cld
loopne
push
and
adc
addb
xor
sti
sti
and
insl
out
xor
pusha
push
pusha
mov
add
mov
cwtl
xor
mov
pop
test
fdivr
jp
and
std
cmp
lock
inc
adc
jnp
je
mov
lret
sbb
outsb
je
outsb
xor
pop
push
bound
gs
add
ficomps
inc
test
cli
lret
push
lcall
add
and
outsb
sarb
test
lock
cmc
out
loopne
jbe
and
add
pop
inc
mull
scas
movsl
push
or
jmp
or
push
sub
jmp
das
loope
mov
cmpsb
sbb
out
sub
test
sbb
test
dec
jns
lcall
jbe
and
dec
bound
or
decb
adc
out
sbb
aad
movsl
jp
add
fidivrl
mov
and
cmp
and
push
pushf
loope
xor
add
jge
push
pop
incb
or
fiaddl
jl
pop
cmp
jb
add
jnp
out
enter
in
mov
cmp
mov
dec
jns
sbb
icebp
and
repnz
jl
lcall
das
test
dec
aas
fwait
dec
mov
movsl
mov
popa
push
mov
mov
add
lds
rorl
jg
into
mov
aam
or
sbb
lods
mov
mov
cmp
cld
inc
mov
inc
scas
clc
and
mov
lods
cmp
fldt
movsl
hlt
out
mov
out
popa
bound
cmp
outsb
pop
inc
cli
jbe
addl
insl
vandnps
int3
fmull
adc
cld
push
lea
mov
sahf
jne
mov
repz
ja
andl
sub
pop
sar
add
bound
push
inc
dec
in
test
xchg
bound
adc
ds
dec
ljmp
inc
cmp
push
lahf
mov
in
and
andb
xor
xchg
sub
repnz
cmp
pop
cltd
popf
xchg
gs
lds
outsb
lret
sbb
mov
cmp
sub
pop
clc
jmp
xlat
mov
mov
shrl
or
mov
cmc
rolb
daa
mov
dec
pop
jns
lret
lods
mov
adc
in
loopne
sbb
dec
jno
push
lahf
cmp
enter
lret
sbb
cmp
sti
test
mov
pushf
sbb
or
test
ret
push
cmp
sub
jmp
dec
dec
mov
mov
ret
pop
inc
sub
scas
mov
cmp
push
push
std
dec
loopne
xchg
test
out
dec
xor
pop
loope
je
iret
add
push
pop
lods
mov
push
push
lahf
mov
mov
cwtl
jb
lds
mov
mov
jecxz
mov
sub
pop
and
das
xchg
mov
call
xlat
xlat
xchg
sarb
dec
jg
sbb
in
imul
bound
mov
or
icebp
subb
mov
and
and
daa
ds
rol
ret
xchg
mov
pop
ds
std
mov
and
push
and
xchg
nop
push
dec
test
addb
pop
mov
mov
aam
in
rolb
xchg
xchg
jb
xchg
call
out
movsl
jmp
cmp
push
or
add
mov
stc
mov
addl
push
or
cmp
inc
adc
mov
sbbb
loopne
das
jecxz
je
loop
jmp
inc
shrb
fwait
into
push
fadds
lahf
ja
adc
sub
push
leave
outsl
pusha
xchg
jae
ror
aad
sub
insl
add
adc
js
in
repnz
adc
ja
push
dec
scas
lods
dec
push
ret
mov
sub
test
dec
lds
mul
dec
mov
mov
pop
mov
or
mov
push
je
lea
mov
mov
xchg
imul
xchg
cmp
aad
pop
dec
xchg
inc
push
mov
adc
cmc
pushf
adc
cwtl
mov
cmc
or
adc
xchg
add
jle
inc
sbb
addr16
shrb
in
test
hlt
enter
jno
xor
ljmp
inc
pand
pop
cmp
cmp
in
add
or
pop
pop
shlb
xchg
push
cwtl
add
inc
ret
xchg
loope
xchg
push
adc
in
pop
int3
lcall
repz
cmp
xor
sub
imul
or
dec
adc
dec
pop
in
pop
subl
mov
xchg
mov
insb
xor
setns
jmp
int3
es
lods
fcoml
add
and
ja
xlat
loop
shl
and
cld
es
sbb
push
dec
jne
out
movsb
adc
sbb
inc
jnp,pt
rorb
ret
or
fstl
dec
cmp
xor
mov
or
inc
push
mov
sar
dec
fidivs
dec
std
mov
sbb
jle
mov
jmp
mov
inc
adc
sub
bound
fnstcw
jnp
adc
pop
jp
mov
jg
or
js
adc
sub
mov
sub
mov
sbb
xchg
pop
dec
pop
dec
adc
roll
jb
cmc
lret
push
in
push
aam
aam
ds
fidivrl
mov
xor
into
lds
pop
mov
jmp
loopne
sbb
mov
shrl
cmpsl
jge
push
inc
xchg
fistl
lds
lret
out
arpl
aas
and
adc
xchg
push
push
push
inc
outsl
pusha
aaa
scas
xchg
dec
adc
inc
push
push
mov
pop
or
insb
jae
mov
into
dec
ds
push
xor
lds
mov
outsb
or
and
sarb
clc
arpl
xchg
sti
std
mov
imul
fwait
dec
dec
loopne
push
sahf
fmulp
repnz
imul
mov
and
lahf
icebp
fisubl
cltd
add
xchg
xor
jge
mov
mov
push
cmpsl
lods
add
sbbl
call
push
ficoml
add
subl
jae
fnstsw
fldenv
cmp
imul
mov
out
push
test
pushf
jg
jns
dec
js
scas
loope
subl
testb
pop
insl
xlat
stos
and
je,pt
cmp
int3
add
int3
and
xchg
xchg
and
lock
sti
xchg
fldt
fwait
jns
pop
mov
sbb
adc
loope
cmp
xchg
nop
je
pop
lds
sub
mov
push
inc
pmuludq
es
leave
sbb
push
adc
jmp
adc
jmp
sub
or
shlb
fnstsw
mov
cwtl
and
dec
in
sbb
in
mov
xor
xchg
cwtl
cmpsl
dec
mov
pusha
mov
cmp
cwtl
mov
adc
adc
push
push
je
mov
sbb
popf
outsb
adc
insb
inc
dec
mov
push
sarb
mov
int3
mov
xchg
daa
rclb
xor
bound
cmp
outsb
xchg
subl
in
and
push
mov
rcr
popf
sbb
loop
and
insl
popa
popf
pusha
or
outsl
std
outsb
int3
mov
dec
pop
aas
les
jl
ja
jl
push
push
or
push
sub
out
sbb
cmpsb
pusha
jmp
negb
mov
inc
fstpt
cld
loop
and
add
inc
cld
pop
pop
mov
leave
leave
add
arpl
pop
dec
xchg
leave
rcl
sbb
jmp
aaa
call
and
fs
adc
sbb
and
or
sub
mov
test
dec
or
mov
sbb
jb
add
stos
outsb
lcall
xor
inc
fstps
scas
std
movsl
movsl
popf
adc
popf
inc
leave
push
imul
and
or
iret
xor
add
mov
pop
test
cmpsb
cmp
cmc
pop
jp
jge
enter
xchg
add
xchg
aas
aad
cmpsb
sbb
sbb
jp
or
sahf
jge
mov
arpl
ss
xchg
sahf
std
adc
stos
mov
gs
cmp
xor
mulb
jns
cmp
daa
push
iret
sbbb
mov
sbb
jp
push
mov
xlat
decl
push
cli
jge
mov
cmp
jo
fwait
mov
imul
movsb
inc
rorl
mov
adc
dec
repz
inc
int3
sub
hlt
clc
scas
push
push
inc
inc
dec
xchg
sbbb
int3
mov
xchg
dec
jg
sbb
call
mov
mov
aaa
out
sahf
inc
les
mov
mov
in
loop
movsb
xchg
inc
jl
and
push
aaa
add
fnop
lods
sbb
data16
jl
pusha
inc
sub
icebp
imul
ret
mov
test
les
ret
rol
out
add
sub
pop
ret
sahf
mov
add
xor
and
inc
cmc
cmpsl
mov
popa
bound
inc
sub
and
mov
inc
dec
fs
sahf
mov
xchg
xchg
xor
into
dec
push
popa
xchg
daa
push
xor
adc
and
mov
add
add
mov
stos
enter
in
vmovsd
adc
mov
icebp
popf
push
loopne
pop
mov
outsb
pop
out
inc
mov
xor
imul
lods
xchg
testb
scas
enter
arpl
stos
fs
sbbl
addr16
das
pushl
or
bound
decb
lcall
insl
pop
push
cwtl
mov
fistps
jbe
jge
mov
jge
jae
push
lds
and
xchg
mov
cmp
outsb
push
insb
lods
xor
js
jne
cmpsl
sub
in
ret
cmpsl
or
cld
ret
test
inc
pop
mov
cmp
test
popf
add
fucomp
jns
fucomp
movsb
lds
sbb
add
xor
jle
aas
inc
sti
push
inc
sbb
insl
icebp
sub
mov
sub
xor
adc
mov
test
stos
sub
rclb
test
enter
repnz
adc
outsl
cmp
sub
rcrb
pop
mulb
and
in
inc
scas
xchg
pop
add
jecxz
outsl
es
and
mov
xchg
or
test
lods
or
rclb
mov
mov
mov
mov
dec
xchg
xorl
movb
out
lret
mov
sub
pop
adc
ds
out
mov
js
jge
stos
ljmp
pushf
pop
in
clc
movsl
lods
outsb
push
into
jno
iret
fs
jb
jg
add
sarl
add
out
jmp
sbb
loopne
sbb
sub
adc
mov
xchg
add
cld
or
addl
jae
sub
movsl
cmp
sub
jae
shlb
cld
sbb
xchg
inc
or
or
int3
stos
xor
lds
jne
jne
sbb
xchg
mov
push
loop
add
push
xor
sbb
mov
into
sub
adc
fidivl
aam
mov
jge
push
daa
sub
lahf
ja
fucomip
cwtl
sub
pop
dec
push
repz
or
out
mov
in
icebp
sub
add
xchg
test
cmp
icebp
in
fyl2xp1
xchg
sub
sbb
popf
popf
xor
outsb
insb
dec
js
mov
push
inc
mov
jp
and
popa
mov
and
rcrl
lds
xor
adc
jnp
dec
or
popf
sbb
iret
sub
xchg
call
jae
pop
lcall
lods
xchg
sbb
cmp
push
mov
inc
mov
push
hlt
mov
add
fistpl
push
test
push
push
jle
sub
jo
xchg
xor
or
aam
mov
imull
int3
icebp
add
je
or
xchg
sbb
lahf
leave
loopne
adc
pop
push
adc
stos
fsubs
aas
out
adc
xor
out
lahf
sar
and
inc
fstpl
gs
sub
or
repnz
adc
mov
rcrl
pop
out
xchg
xchg
mov
daa
stc
jns
pop
ret
jo
pop
mov
xchg
push
cmp
pop
cmc
vmwrite
mulb
mov
inc
stos
adc
fdiv
call
and
fbstp
dec
mov
and
fcmovbe
aaa
icebp
push
pop
pop
inc
xlat
inc
xchg
jnp
add
fimull
inc
movsb
dec
dec
stos
lret
mov
inc
ret
dec
mov
scas
mov
in
sti
loop
ljmp
push
ret
cmpsl
adc
leave
jo
mov
jbe
mov
aad
fcoml
and
out
inc
je
pusha
push
aad
add
jne
es
and
test
stos
lock
pop
cmp
subb
xchg
movsb
add
jp
loopne
mov
in
pusha
icebp
jmp
incl
xchg
mov
mov
aam
lods
mov
pop
inc
xchg
notl
pop
ss
cmp
or
jbe
sub
aad
push
rcll
xor
dec
push
push
test
inc
jne
jbe
daa
or
out
jo
sbb
or
insb
adc
lock
fsub
inc
je
push
mov
lahf
lock
push
popl
movsl
sub
xor
add
js
testb
mov
pop
inc
mov
pushf
fiaddl
call
add
pop
jne
je
enter
cmp
cltd
cmp
scas
nop
xor
or
repnz
outsl
ja
jge
jl
push
adc
imul
loope
pop
jle
mov
movsb
fstpt
stos
sub
imul
inc
lahf
loop
cmp
xlat
sub
test
test
mov
in
xorl
jl
lds
jb
mov
jl
cld
test
sbb
add
imul
add
test
outsb
xor
xchg
loope
popa
add
and
lcall
jns
pop
sbb
repz
ja
adc
jns
mov
hlt
or
daa
leave
ficoms
jne
aas
push
cmc
mov
add
ss
es
cmp
and
mov
dec
sahf
pop
fsts
push
inc
and
outsl
outsl
add
or
mov
pop
mov
pop
out
mov
push
rolb
int3
hlt
movd
inc
cmp
sbb
mov
push
sub
ret
mov
mov
push
aad
hlt
out
sahf
cwtl
or
add
or
pop
mov
imul
fdivr
jle
mov
cmp
aas
inc
adc
je
cmp
rcl
ret
fstl
xchg
add
and
stc
pop
pop
dec
popa
pushf
dec
out
jne
mov
rolb
decl
mov
and
insl
jns
cwtl
push
ficompl
xchg
inc
xor
lret
and
sub
xchg
in
mov
ss
imul
push
arpl
dec
insb
or
out
nop
out
xchg
test
mov
cmp
xor
cmp
lods
jo
aad
and
andnps
fadds
scas
pop
in
mov
xor
push
lock
cwtl
pop
bound
sub
cmp
or
dec
mov
add
mov
xor
or
scas
mov
sbb
cmovae
cs
dec
mov
ret
and
fiadds
fidivl
cli
subl
sub
lahf
sbb
mov
fiadds
mov
lret
out
jo
add
enter
mov
pop
fsubp
cmp
cmp
js
adc
rcll
push
inc
out
ljmpw
or
jo
clc
neg
or
jge
sbb
jae
dec
insb
popa
incb
cmp
sbb
xor
push
mov
out
push
aas
push
cmp
xor
test
fsubs
and
test
pusha
cpuid
clc
xorl
popf
adc
push
jmp
lahf
push
push
mov
add
mov
jne
cmpsl
je
xlat
test
mov
sbb
call
lahf
push
pop
pop
mov
jmp
dec
nop
out
fcmove
pop
ds
rcrb
test
xor
fwait
or
mov
sbb
aad
popa
std
rep
jo
xlat
xchg
fnstcw
loopne
dec
aaa
jmp
inc
lcall
mov
mov
push
movsb
movsl
hlt
xlat
cmp
sti
mov
add
sbb
inc
jno
fidivl
cmp
insb
add
jge
aam
mov
adc
outsl
inc
push
lds
not
lods
and
push
lea
add
push
stos
push
sarb
xchg
stos
stc
sub
jecxz
sarl
cld
lock
jecxz
idivl
cmc
fwait
xor
sub
scas
jo
xlat
mov
fs
xchg
mov
and
call
pop
sbb
leave
int
insl
dec
das
shrl
gs
push
cmp
aad
dec
and
push
lret
in
cmpsl
lret
lcall
mov
loopne
dec
repnz
xor
into
flds
sbb
dec
jp
leave
pop
push
xor
in
stc
pop
lods
test
repnz
dec
pop
xor
scas
pusha
or
jo
mov
add
out
les
lahf
pop
sbb
push
pushf
jno
cli
inc
cmpsl
xchg
dec
mov
ret
mov
jo
stos
xchg
xchg
jnp
stos
add
dec
xchg
stc
push
adcb
lea
add
mov
jp
jbe
cmpb
add
push
sbb
out
mov
sub
lret
outsb
push
fdivrs
lret
sarl
cs
pop
sub
insb
adc
ds
lods
push
jge
mov
pusha
std
rcll
jl
rol
into
push
dec
inc
xchg
ud2
cli
xor
mov
inc
adc
sbb
shl
jnp
cmpsb
push
xor
push
out
shlb
ljmp
sbb
push
cwtl
dec
std
or
xchg
pop
mov
ss
fwait
add
mov
mov
mov
push
push
scas
add
in
jmp
mov
jmp
jmp
lret
lret
ljmp
movsb
xor
xlat
out
dec
out
das
and
out
data16
rorb
jle
stc
repz
xchg
xor
pushf
xchg
mov
je
add
ficompl
xchg
add
cld
cmp
insb
jns
imul
jle
xchg
ja
jecxz
jno
jno
xor
pop
and
nop
add
and
mov
in
test
out
stos
subl
clc
adc
insb
arpl
push
push
mov
sub
imul
pusha
push
mov
into
aam
or
jecxz
sti
adcb
push
mov
bound
loopne
mov
ljmp
add
inc
lret
inc
scas
fistps
cmp
test
nop
pop
push
cs
pop
cmp
repz
mov
pop
out
pop
push
pop
nop
rorb
call
sahf
repnz
push
push
jns
bound
sub
fidivrl
lret
notb
loopne
cmp
pop
mov
cltd
fwait
hlt
dec
std
push
jnp
dec
bound
pop
into
pop
movsl
faddl
lea
cmpsb
sbb
int3
mov
dec
xchg
and
stc
mov
fmuls
or
nop
cmp
xor
in
and
dec
mov
sub
subl
inc
add
add
or
bound
pop
leave
hlt
push
push
or
or
or
cs
out
mov
push
or
adc
xlat
ja
inc
adc
or
cmp
adc
xchg
ljmp
push
divb
inc
inc
imull
lahf
xor
sbb
or
inc
movsl
sub
cmp
or
add
and
iret
cmpsl
inc
mov
pop
or
xorl
push
cli
cmp
mov
dec
imul
and
push
stos
mov
addr16
push
inc
or
sahf
mov
or
xor
mov
add
dec
mov
test
test
jl
imul
xor
repnz
enter
push
sahf
mov
or
int
test
xchg
mov
add
or
pop
mov
into
jns
or
aam
pop
and
aad
pop
addr16
mov
adc
iret
imul
fsts
jg
mov
loope
das
sbb
mov
lds
jbe
scas
pop
pop
bound
cmpsb
push
lods
aaa
pop
icebp
jnp
cmc
jb
push
call
aaa
sub
or
push
aaa
lods
pop
adc
insl
adc
mov
jo
xchg
push
or
jmp
dec
or
jg
nop
fwait
int3
movsb
cmp
sub
push
mov
cmpsb
icebp
jns
push
push
ret
sub
nop
mov
inc
pop
xchg
push
push
cmpsb
lahf
cmp
jbe
pop
cmpsl
insl
outsl
enter
jp
push
mov
out
lods
mov
adc
mov
das
fisubrl
popf
lock
dec
pavgw
mov
cmpsl
sub
js
cmpsb
aas
notl
mov
mov
out
mov
jae
mov
lock
sbb
or
nop
xor
cmp
xchg
nop
mov
push
or
ret
arpl
test
mov
add
in
sbb
or
stos
sbb
ret
idivb
pop
dec
xor
sbb
movsb
adcb
sbb
dec
cmp
test
fstl
aaa
inc
push
out
sub
mov
arpl
jne
sub
in
or
iret
es
adc
inc
pop
mov
fldcw
fisttpll
push
sub
pop
mov
lds
xlat
lcall
fstp
inc
or
subb
out
in
cltd
adc
mov
out
dec
mov
mov
clc
sub
std
and
xchg
inc
in
or
jg
push
ds
fstps
movsl
pop
pop
icebp
xchg
sub
xchg
and
dec
mov
and
andb
pop
inc
dec
lcall
push
movl
mov
lret
imul
nop
pslld
arpl
dec
or
xchg
imul
das
and
loope
loope
mov
fsubrl
ja
lret
pop
pop
in
daa
mov
aad
cwtl
je
dec
push
mov
pop
in
iret
test
aam
pop
cmp
stos
push
aas
mov
xorb
arpl
mov
fiaddl
hlt
ss
jae
hlt
adc
or
int3
mov
push
in
push
adc
mov
push
or
dec
mov
mov
add
sbb
xor
inc
in
roll
andb
mov
mov
dec
mov
dec
dec
cmc
xrelease
lea
shrb
sub
and
test
fcoml
jb
loopne
ds
arpl
lahf
out
cs
es
or
mov
add
das
das
jle
xor
out
aaa
pop
and
in
adc
or
add
xchg
rcrb
cwtl
fwait
aam
and
stos
jo
pushf
sbb
rol
lcall
lret
adc
lea
in
cmp
std
fwait
jmp
repnz
cmpl
sbb
add
insl
mov
pop
test
sbb
xor
pop
sbb
hlt
xchg
mov
scas
push
mov
lcall
loop
lret
sub
gs
aam
inc
nop
fbstp
loope
xor
and
mov
std
dec
dec
jg
mov
rorb
rclb
cmp
leave
icebp
mov
mov
xor
out
into
adc
cltd
cmp
lds
roll
sbb
mov
dec
jl
sub
cs
push
je
cltd
popa
clc
jge
and
jno
std
inc
cmpsl
ja
mov
xchg
xor
scas
gs
jmp
test
and
in
addb
pushf
mov
aad
sbb
sbb
mov
popf
jb
xchg
mov
sbb
mov
in
pop
std
js
cmp
mov
loop
lret
sahf
nop
fldl
add
into
xchg
in
cwtl
out
mov
loop
je
jle
jecxz
fwait
ja
aam
mov
iret
dec
jl
pop
jno
sbb
lods
sahf
pop
or
sbb
dec
dec
lret
sti
mov
dec
test
jb
mov
jge
cwtl
in
sbb
pop
pop
out
fldt
roll
loop,pt
jg,pn
hlt
sbb
cmp
mov
xchg
stos
cmpsl
mov
add
push
inc
daa
ljmp
cmp
jnp
and
jb
xchg
movl
sub
sub
fstpl
adc
movsb
movsl
into
or
jbe
mov
mov
lcall
pop
mov
jl
scas
insl
mov
cld
fsts
test
mov
outsl
jp
les
sarl
jmp
das
sbb
out
fcoms
das
ret
pop
pop
adc
xchg
push
pop
inc
cmp
clc
imulb
cmp
adc
lods
lock
sahf
or
and
sub
xor
add
sbb
sbb
sub
sbb
bound
sub
aaa
adc
cmpsb
add
negl
leave
mov
pop
sub
xor
push
mov
xchg
pop
icebp
inc
fistl
adc
lods
mov
iret
lea
orb
add
dec
dec
psubd
out
fdivrs
push
lret
sub
xchg
in
push
inc
xchg
add
mov
loopne
dec
inc
mov
and
sbb
ljmp
jl
js
add
or
push
lret
push
std
and
mov
in
pop
mov
jp
adcl
hlt
scas
xlat
repnz
ds
xchg
nop
push
enter
jl
outsb
or
mov
adc
add
or
cltd
fildl
pop
pop
lds
ret
push
adc
ret
xlat
sub
push
sub
push
outsl
jne
mov
inc
cmp
xor
dec
insb
loop
mov
aaa
and
inc
out
fdivs
arpl
sbb
ficoms
ret
mov
filds
jle
int
sub
or
js
ljmp
sti
xlat
adc
cmc
dec
stos
es
mov
jmp
icebp
test
imul
int3
jg
imul
pushf
dec
call
add
jge
pusha
ljmp
jge
adc
cmp
pop
fs
dec
sbb
push
mov
in
idiv
es
pop
loope
int3
mov
pop
pop
mov
call
push
sbb
loope
lahf
inc
xchg
test
inc
pop
nop
fwait
imul
adc
jecxz
imul
notb
sbb
sahf
add
scas
rcrb
outsl
or
imul
pop
mov
sahf
lahf
mov
sub
push
cltd
fiaddl
cs
sbb
inc
out
inc
data16
jb
jo
mov
cmp
push
sub
or
stos
xor
cmp
xchg
call
loope
mov
jbe
aam
loop
mov
sub
adc
push
and
in
mov
push
stc
jb
cwtl
or
inc
cmp
lods
xchg
dec
sub
push
xchg
xchg
xchg
add
mov
cmc
icebp
dec
add
outsl
pmulhuw
and
xchg
idivb
incl
jg
in
das
sbbl
lcall
psraw
adcb
imul
sbb
xchg
inc
lods
lock
hlt
ja
or
cmp
movsl
jne
adcl
xor
push
pop
hlt
dec
div
decl
sarl
lahf
push
inc
cmp
clc
add
imul
cmp
jb
dec
mov
insb
or
xchg
xchg
mov
popf
lods
in
push
xchg
cli
aam
sub
repz
dec
xor
imul
fsts
sub
or
scas
mov
mov
daa
out
mov
push
inc
jmp
jb
or
inc
test
or
or
test
xchg
push
fidivs
ds
push
mov
imulb
push
xor
call
insl
dec
dec
or
xchg
xchg
dec
jae
in
cs
mov
fistps
cmpsb
or
jle
fistl
mov
pop
xor
repnz
or
sub
xchg
cmc
push
adc
sub
test
into
loope
xchg
push
push
and
clc
dec
outsl
out
jmp
dec
inc
test
cmp
loopne
xorl
shr
xorb
incl
and
add
jp
add
out
dec
inc
imull
sar
repz
or
aaa
mov
inc
pop
fildll
mov
js
gs
cmp
in
mov
je
jno
cmp
mov
mov
pop
inc
adc
jmp
lods
pop
xchg
mov
add
in
iret
decl
xor
pop
mov
dec
data16
mov
stc
je
sbb
adc
xchg
sbb
bndldx
loopne
sbb
mov
fs
and
mov
shlb
lea
enter
bound
xor
js
or
cld
cmp
jmp
sub
outsl
popf
and
or
out
cmp
cmpb
sarb
cmp
sub
jmp
xchg
movb
loop
xlat
adc
filds
ret
jle
cmp
xchg
pop
les
fs
ret
scas
mov
roll
cmpsl
dec
pop
pop
pop
iret
inc
loop
jbe
arpl
sub
cwtl
mov
call
jae
sub
or
mov
add
in
jge
popf
fisubl
out
fwait
imul
pop
repz
pop
xor
and
mov
pop
aaa
insb
push
notb
and
lock
icebp
ror
addr16
or
push
mov
jns
cli
cmpsl
adc
add
testl
mov
add
cwtl
xor
sub
cmpb
mov
icebp
inc
lcall
addr16
push
pusha
mov
jmp
stc
inc
aad
arpl
inc
cltd
add
push
jmp
pop
test
lcall
mov
dec
rclb
inc
mov
dec
lcall
ljmp
loope
mov
movsl
outsb
in
addr16
add
je
loopne
mov
add
pop
push
xor
pop
or
ret
sbb
sbb
shll
push
ljmp
mov
outsl
adc
gs
es
insl
dec
scas
icebp
int3
or
dec
pusha
jp
popf
frstor
into
mov
lds
sub
in
ss
push
hlt
in
jno
pop
aad
dec
inc
or
fstps
orl
mov
cmp
cmp
adc
xor
je
ljmp
popf
lahf
xchg
add
sbb
addr16
push
stos
sbbb
fmull
imull
inc
or
push
pop
xor
call
aaa
and
inc
bound
test
push
jno
in
mov
pusha
in
jmp
pop
sbb
push
push
add
sbb
and
xor
shlb
sbb
pushf
jle
aaa
loope
lret
push
and
test
mov
subb
cwtl
insb
xor
mov
int
dec
pushf
inc
xor
lea
xchg
in
sbb
imul
scas
inc
nop
repnz
add
mov
adc
sub
ret
adc
inc
sbb
in
mov
and
int
loop
test
loope
pop
and
add
lret
scas
call
push
adc
jnp
pop
mov
fcmovnbe
add
cmc
mov
enter
dec
pushf
dec
mov
das
add
jno
inc
imul
scas
lds
dec
popa
ror
scas
inc
xchg
sarb
stos
movlps
testl
add
add
mov
push
aas
cmp
cmp
jl
call
xchg
and
test
xchg
xchg
repnz
divb
xchg
loopne
in
scas
push
stos
mov
arpl
out
in
push
adc
jno
sub
out
sub
jge
lods
cmc
xchg
mov
js
pop
insl
into
dec
outsl
and
mov
push
xchg
mov
pop
jne
popa
imul
add
out
std
cli
pushf
mov
xchg
mov
xchg
adcl
cmp
fs
push
add
movsl
mov
mov
cmp
int3
in
cmpsb
xchg
or
pop
cmc
pop
jae
nop
sub
sub
push
mov
ficoml
sbb
dec
pusha
stc
inc
inc
outsb
push
mov
out
and
rclb
call
push
inc
pusha
push
mov
mov
es
sub
cwtl
mov
cmp
jne
dec
out
arpl
enter
lcall
sbb
je
push
repnz
and
das
ret
cmp
test
pushf
xor
xchg
xchg
out
inc
cld
addl
pop
fs
inc
mov
jp
aaa
sbb
mov
iret
out
adc
mov
sub
insl
add
mov
lahf
pop
ds
xchg
into
jnp
mov
push
mov
fnstsw
pop
clc
jg
fs
jnp
and
add
pop
xchg
pop
fs
lds
push
test
insl
inc
mov
dec
sarb
mov
addr16
clc
pop
mov
mov
mov
and
inc
mov
mov
cli
cmpsb
sbb
jns
aaa
dec
push
inc
xchg
inc
dec
ss
xor
sub
jecxz
add
icebp
jnp
in
xchg
mov
aad
mov
out
decb
push
xchg
popf
imul
jbe
lods
adc
cmp
xchg
mov
insl
inc
adc
xchg
mov
xlat
test
xchg
push
pushf
in
xchg
ret
or
lods
adc
rorb
ss
mov
popa
inc
int3
push
inc
ret
or
fsubrp
and
inc
test
pop
clc
outsw
call
fstps
bound
cmp
dec
mov
jne
sti
mov
fdiv
pop
pop
sbb
add
jo
jae
imul
cmpsb
fisttpl
ljmp
sarl
adc
fdivs
xchg
aaa
inc
jnp
in
sbb
les
and
adc
cmp
in
xchg
mov
xchg
sbb
lret
enter
out
xchg
fldl2e
pushf
sub
leave
test
ret
push
cwtl
cmp
cltd
das
cmp
push
sti
cwtl
cmc
xchg
push
std
jecxz
daa
push
push
les
cmp
add
push
lahf
fnstsw
mov
mov
inc
addr16
add
and
pop
fnsave
pop
cmp
mov
xchg
add
out
pop
mov
dec
jne
or
mov
ret
inc
out
lds
push
jb
or
jns
fld
filds
dec
nop
test
jns
fcmovne
cmp
inc
jge
loopne
or
pop
lods
xchg
das
js
insl
cmpsb
xchg
inc
cmp
or
subb
and
cwtl
jbe
add
or
jge
xor
cmp
sbb
jne
xchg
mov
pop
mov
in
rclb
push
aam
cmp
and
pop
popa
mov
xchg
bound
pop
mov
adc
and
jmp
mov
adc
xor
ret
es
int3
sbb
out
dec
pushf
lods
outsl
push
and
mov
dec
ficoml
out
gs
rclb
xchg
sbb
stos
arpl
adc
mov
dec
adc
ljmp
test
in
sub
aas
popa
add
hlt
mov
adc
out
inc
ficomps
push
fcomps
adc
add
ja
shll
pop
sbb
and
lods
xchg
jmp
test
dec
or
sub
dec
dec
sarb
add
pop
in
pop
cs
fistpl
jo
fimull
nop
ja
shrb
mov
lret
popa
pop
pop
idivl
fsubl
int
xor
mov
sub
or
lock
icebp
sbb
std
test
fbstp
int3
dec
mov
jp
ds
repnz
adc
mov
lcall
fiaddl
mov
cmp
pop
divb
pop
cmp
popf
push
lds
pop
pop
sti
test
jle
popa
fsubr
inc
sub
test
sbbl
insl
mov
data16
nop
cld
enter
fdiv
je
stos
scas
add
xchg
xchg
xchg
sbb
cltd
je
add
adc
aas
fnstenv
add
jge
sub
mov
mov
sub
pusha
mov
daa
clc
adcl
and
mov
les
fstl
push
cmp
mov
mov
test
fwait
push
rcll
pop
or
rcrl
lods
lods
nop
or
xor
push
fcmovne
pusha
loop
gs
pushf
outsl
sub
fcoml
pop
fs
rdpmc
lret
dec
pop
adc
mov
push
jecxz
leave
ss
shrb
gs
xlat
int3
stos
pusha
mov
cltd
or
cmp
lret
add
mov
lds
lods
xor
push
clc
ss
std
cmp
jbe
leave
xchg
iret
hlt
int
iret
enter
das
rcl
sti
jnp
lret
test
sbb
pop
pop
into
inc
imul
outsl
bnd
scas
hlt
add
xchg
fcoml
dec
push
mov
dec
pop
out
jge
into
pop
imul
or
mov
insl
jne
dec
fwait
lods
fwait
scas
pop
subl
mov
push
mov
dec
xchg
push
mov
inc
mov
out
sub
xchg
push
sub
sarl
lret
out
cmp
pop
mov
pop
fsubs
mov
scas
popf
jmp
fidivs
stc
mov
sub
mov
pop
in
mov
xchg
fiadds
int3
arpl
loop
dec
outsb
xor
test
shlb
push
cltd
mov
pop
xchg
sbb
mull
mov
push
call
call
das
jle
mov
sbb
insb
dec
jbe
xchg
dec
push
mov
dec
inc
sbb
jae
popa
dec
leave
int3
jo
imul
test
ljmp
faddl
pop
xchg
push
dec
int3
push
push
or
jns
fwait
outsl
rorb
push
pop
xorb
in
dec
repnz
adc
mov
inc
push
mov
rcl
cld
jl
test
xchg
std
test
xlat
scas
push
push
loopne
jne
mov
and
add
fwait
pop
xchg
dec
cmp
lret
daa
aam
pop
cmp
jmp
shrb
cltd
push
adc
and
or
test
and
add
cmp
xchg
das
xchg
jae
sbb
popf
sbb
mull
aas
xchg
rep
pop
lock
jns
cwtl
lods
add
scas
cmc
jl
xor
mov
gs
push
ficompl
push
in
loope
mov
popf
mov
lcall
outsb
inc
dec
push
int
idivb
add
repnz
iret
xchg
mov
xlat
rcl
popf
adc
data16
rorl
or
std
jne
mov
loopne
into
adc
mov
test
push
mov
pmaddwd
shlb
sbb
xchg
pop
xor
add
bound
sbb
in
adc
cld
mov
pop
lcall
jecxz
in
push
outsb
or
add
sub
sbb
and
push
xor
xchg
xchg
sub
movsb
movsb
or
das
mov
jp
pop
add
jnp
sti
push
inc
inc
scas
pop
sub
push
lock
add
xlat
pop
insl
lods
mov
and
stos
test
pop
rcrb
and
dec
test
push
inc
jo
das
data16
add
cs
test
mov
je
clc
test
push
mov
push
add
dec
jge
ss
pop
nop
test
xor
ljmp
rcr
inc
or
test
int3
adc
adc
ds
pop
or
cmp
shl
fwait
push
mov
lds
js
inc
inc
inc
lret
cltd
push
add
cs
and
ja
inc
adc
push
xor
bnd
ret
add
sub
dec
rcl
cli
lcall
scas
pop
je
imul
add
nop
mov
dec
jne
mov
test
jne
loopne
sbb
aas
adc
cmp
test
pop
daa
mov
fcomi
shlb
xchg
add
push
das
lock
pop
pop
nop
js
add
roll
out
mov
pushl
push
or
movb
xchg
adc
es
scas
push
push
push
mov
xchg
pop
sbb
das
add
adc
loope
into
fs
inc
fidivs
ret
mov
inc
jge
xchg
push
adc
mov
mov
xor
pop
dec
cmpsl
xchg
and
into
push
or
js
popf
call
dec
lds
arpl
and
cmp
loope
xor
pop
js
add
test
jle
jno
mov
insb
jg
and
int3
ss
add
jns
fsubs
fisttpl
lods
mov
arpl
mov
in
mov
dec
sub
jge
outsb
int3
in
jmp
hlt
out
fcompl
mov
repz
pop
push
sbb
outsl
lahf
xor
repz
iret
jg
cmp
sar
sbb
aaa
and
xor
int
je
les
jle
pop
insl
xor
mov
loopne
mov
cmp
cmp
jb
testb
inc
add
stos
sarl
jb
ret
xor
add
xor
push
cmp
stos
lock
add
das
mov
inc
push
int3
je
dec
dec
mov
mov
push
dec
fs
ret
lcall
jns
insl
ret
sub
adc
adc
sbb
dec
fldt
repnz
mov
mov
cmp
mov
enter
jo
fildl
add
popl
clc
jge
fcomps
lds
jg
jbe
xor
inc
cmp
dec
jae
sub
cs
repnz
mov
jb
mov
subl
dec
les
enter
cmp
lods
mov
rorb
in
or
mov
fldl
cmp
inc
sti
lahf
jae
int3
adc
cld
lcall
into
mov
out
adc
jnp
mov
jp
xor
flds
cmp
pop
into
or
insb
ss
inc
inc
loop
jg
push
sarb
jae
inc
pop
hlt
mov
cwtl
inc
notb
jmp
into
insb
lds
daa
pop
lret
lods
pop
xor
dec
lcall
jae
add
shlb
out
lds
int
mov
ds
and
pop
xor
ret
xor
pop
loopne
mov
cmpsl
cmp
adc
out
or
push
loopne
aam
sub
mov
addb
loop
mov
call
xchg
ds
mov
loopne
pop
icebp
jb
pop
mov
and
pop
negl
rolb
aaa
and
idivb
sti
mov
shll
mov
jmp
pop
mov
insl
and
jl
fsubs
inc
cmpb
mov
jo
adc
jg
jbe
or
push
inc
nop
testl
cmpsb
dec
jmp
jg
mov
pop
push
int3
pop
push
jge
inc
adc
xchg
xor
mov
sahf
shll
loop
xor
xor
xchg
lea
push
loop
mov
jl
fnstsw
iret
mov
sbb
call
mov
leave
mov
aas
cmc
mov
lahf
stos
jmp
inc
scas
xchg
sbbl
js
mov
and
sbb
xor
xchg
out
aaa
into
add
mov
pop
sub
shr
in
push
adc
in
vmwrite
out
bound
mov
mov
mov
inc
xchg
jae
int
push
in
jge
lahf
std
clc
in
and
add
in
bound
iret
cwtl
fcomp
pop
inc
dec
dec
inc
repnz
rorb
pop
xchg
es
add
imul
mov
not
inc
aaa
add
enter
jb
mov
xchg
rorl
adc
jmp
mov
mov
test
stos
xor
jo
mov
test
rcll
sbbl
push
fcoms
hlt
add
mov
inc
into
mov
mov
flds
push
adc
sub
pop
mov
xor
pop
or
int
insb
mov
xchg
and
in
inc
add
repnz
or
mov
inc
cmp
cmp
sbb
xor
pushf
or
pushf
jg
mov
push
jbe
xlat
popf
test
pushf
out
sub
xor
dec
repnz
pop
mov
xorl
or
ja
xchg
int3
inc
inc
aaa
in
and
mov
jnp
hlt
pop
fxch
cmp
popf
cmpsb
lds
addr16
or
inc
stos
loope
arpl
inc
stos
mov
xor
cli
dec
sbbl
leave
add
jnp
add
mov
pop
sbb
je
inc
enter
ss
shr
scas
leave
inc
das
inc
or
fcoms
pop
lock
xchg
xor
les
xchg
arpl
imul
iret
mov
outsb
xchg
sbb
das
std
andl
mov
pop
mov
imul
and
bound
pop
leave
in
xor
loop
js
jp
xor
sub
movsl
sti
mov
pop
sub
fisubs
mov
out
out
sti
insb
mov
movsb
mov
hlt
lret
add
in
cmpsb
inc
push
out
rcrl
loop
int
into
rcrb
iret
cmp
xorl
sahf
cli
jb
sub
aaa
jle
cmp
mov
xchg
and
adc
push
aas
test
test
popa
jae
popf
out
aad
jp
cmc
subb
xor
dec
leave
cmc
out
aas
add
fs
mov
hlt
es
sahf
mov
cmpb
les
xchg
cmp
aaa
in
xchg
xor
add
jno
fadds
fstps
test
test
popf
pop
pop
in
or
add
and
hlt
sbb
jne
filds
fsubl
test
loop
sub
int
lret
push
stc
ljmp
jno
or
int
aaa
push
or
mov
xor
in
inc
add
ljmp
jp
adc
fcom
ret
aam
dec
shl
add
mov
out
bound
xchg
test
hlt
mov
xchg
mov
lret
jno
jg
inc
jbe
arpl
sub
push
rorb
dec
loop
or
or
test
inc
and
adc
popf
push
add
cli
repnz
xor
fisttpll
push
test
aam
pop
fcoms
stc
push
xor
mov
xchg
pushf
or
or
mov
insl
mov
mulb
push
stos
jge
and
sub
xchg
inc
in
out
mov
jns
mov
mov
loopne
test
xchg
adc
jbe,pt
scas
ret
sub
insl
and
test
sub
add
jle
cmpsb
pop
int3
icebp
ret
and
xchg
mov
sahf
notl
cmc
je
jb
je
adc
das
cmp
pop
pop
jle
and
jne
or
enter
insl
jae
lret
mov
mov
rep
arpl
sbb
xchg
mov
or
pop
dec
pushf
push
insb
mov
fs
sbb
add
push
jmp
inc
and
call
xchg
adc
mov
int
nop
enter
jne
icebp
mov
fimuls
sbb
pop
pop
xor
cli
in
sarb
inc
xchg
rcll
fisttps
cmp
jge
arpl
jns
sbb
pusha
stos
scas
jo
mov
add
cltd
dec
adc
clc
adc
mov
xchg
or
xchg
push
mov
dec
daa
lock
testb
sarb
push
inc
dec
lock
mov
or
pop
jp
out
mov
roll
jle
shrb
mov
xor
je
adc
push
jl
fwait
and
std
sub
mov
jl
shll
hlt
imul
and
rcr
adc
mov
mov
iret
adc
or
cltd
scas
or
pop
push
mov
popf
push
cwtl
stos
fdiv
scas
enter
push
and
mov
mov
out
enter
mov
push
xchg
lds
push
cli
cmpsl
addb
jne
inc
data16
add
xor
scas
add
test
out
notb
roll
jecxz
sbb
ficoms
out
xor
jge
cmpsb
and
mov
cmp
jae
jb
stc
incb
push
and
movsb
jmp
add
inc
adc
and
inc
pushl
mov
add
sbb
sub
decl
fstps
mov
add
pop
fdivrl
or
fsubs
add
in
mov
push
mov
and
mov
inc
lods
fsubr
lods
je
imul
negb
lods
mov
xor
jmp
sub
icebp
push
outsl
push
xchg
loopne
inc
sbb
js
mov
xchg
scas
dec
dec
jbe
fadds
jge
test
in
lcall
add
sub
pop
mov
sub
push
mov
sbb
pop
fsubr
in
push
lahf
jmp
hlt
xor
test
cmp
enter
jno
shll
test
movsl
jns
push
and
mov
enter
add
rcll
adcl
inc
fcoms
sub
add
es
lahf
mov
xchg
hlt
jg
cmpsb
mov
sbb
cwtl
add
es
xor
mov
inc
cmpsb
cmpsb
pop
push
cmp
xor
or
jae
fdivs
repnz
push
sub
sub
push
push
dec
add
out
test
jnp
pop
or
jp
popf
push
js
shr
mov
lds
jns
cs
addr16
and
inc
push
gs
inc
xchg
faddl
aam
aad
push
leave
adc
mov
fisubrs
lcall
xchg
mov
in
out
cmpb
adc
lea
xchg
or
fldt
mov
push
in
xchg
fmull
pop
lahf
ret
jnp
in
pushf
adcb
jge
sub
mov
add
stos
cmp
mov
daa
mov
les
gs
cmp
adc
push
jl
adc
jle
aas
pop
push
rcr
cmp
mov
push
push
out
popf
xor
jmp
xor
mov
fxch
fwait
xor
in
inc
fldenv
aam
leave
pop
mov
add
test
xchg
ficoml
dec
adc
into
jnp
xchg
xchg
push
jbe
cmpsb
jo
sub
leave
or
ljmp
popf
inc
or
gs
or
mov
and
ret
push
xchg
into
idivl
enter
adc
inc
adc
nop
insl
iret
sbb
jp
loop
cmc
add
push
adc
jo
nop
xchg
out
jg
cmp
lea
sub
es
gs
mov
inc
dec
out
dec
and
addr16
mov
jbe
shrl
loope
int
out
mov
das
fdivr
negb
inc
arpl
rclb
add
in
cmp
inc
incl
dec
cmp
iret
inc
imul
imull
pop
sub
pop
jbe
scas
cs
push
inc
repz
xchg
mov
testb
sbb
loope
cmp
lcall
lahf
mov
test
dec
into
push
xchg
movsb
ret
xor
pop
cmp
jle
into
icebp
mov
cmc
cmpsl
pop
jg
mov
aaa
divb
shl
push
inc
xor
push
sbb
jae
cmpsb
adc
dec
sub
mov
popf
clc
mov
mov
xchg
aad
roll
iret
push
inc
stos
or
pop
fidivrs
sub
jns
pop
cmpsl
lods
xor
ret
or
fdivl
pop
insl
push
cmp
lahf
add
jb
aas
sbb
cmp
xor
bndstx
iret
dec
push
cmpsb
sti
pusha
push
pop
sub
xchg
rcrb
or
fwait
pop
mov
test
adc
mov
jae
or
sbb
test
cwtl
inc
in
pop
mov
popa
inc
jns
add
lods
xchg
nop
int3
push
lods
out
aam
mov
xchg
imul
int
xor
inc
pop
and
mov
jnp
addb
mov
add
cmp
addr16
push
mov
push
lret
cli
pusha
lcall
xchg
xor
insb
cmp
cmp
add
jle
push
aas
out
xchg
xor
jge
or
data16
pop
sub
dec
mov
mov
leave
adc
and
subl
outsb
adc
xchg
insb
and
mov
adc
jae
cltd
xchg
sbb
or
repz
fcoml
ja
inc
std
pop
sub
xchg
movsb
mov
add
cwtl
shll
fcmovne
sub
cmp
add
mov
jnp
push
inc
jge
add
add
inc
popf
subl
inc
adc
int3
aad
repz
iret
test
mov
xchg
inc
and
push
leave
fs
inc
aad
xchg
jle
imul
push
enter
xor
inc
xlat
fst
out
jg
test
inc
rcrl
fdivr
or
sbb
inc
jo
adc
jg
push
mov
push
aad
stos
insl
loopne
mov
push
inc
cmp
xchg
mov
shlb
enter
mov
sub
mov
inc
pop
dec
in
stc
cwtl
xchg
pop
icebp
pop
leave
mov
add
stos
shll
sbb
xchg
sbb
mov
push
testb
cltd
fildll
in
ja
jmp
push
ret
cs
inc
and
aam
mov
std
mov
jge
push
insb
jb
adc
xor
mov
sbbb
or
jae
cmp
clc
loopne
fildl
hlt
pop
sub
dec
fcomps
andl
enter
popl
je
adc
pop
jp
sahf
lods
mov
mov
mov
nop
insl
mov
lcall
sarl
mov
nop
xor
and
repnz
push
dec
out
jb
push
pop
roll
adc
cmpsl
sub
sbb
and
xlat
ja
jle
int3
clc
in
push
mov
mov
jbe
je
xor
and
jo
jno
test
dec
cli
pop
jnp
or
sbb
push
aad
cmpsl
lcall
es
pop
xchg
sar
mov
sbb
arpl
mov
loope
cmc
add
popf
xlat
int
pop
mov
loope
outsl
imul
daa
cwtl
adc
adc
add
leave
mov
outsb
mov
das
mov
int3
mov
out
jle
sbb
out
aam
xchg
dec
repz
mov
xchg
pop
rol
pop
mov
addr16
jns
repz
xor
nop
add
rorb
aas
xchg
outsl
or
nop
sahf
or
dec
or
lock
pop
iret
add
inc
repz
out
dec
fs
enter
push
ret
add
pop
cmpsl
mov
jecxz
daa
adc
loopne
popf
daa
sub
bndldx
and
std
fists
jns
pushf
xchg
lds
fbstp
sbb
cs
xchg
jno
lret
loopne
es
add
ficomps
mov
lcall
nop
fdivrl
xchg
jl
jge
hlt
dec
add
test
mov
pop
jge
rorb
movsl
clc
setge
sahf
dec
test
push
push
mov
sbb
xchg
ret
xchg
dec
stos
add
movsb
add
mov
cld
jecxz
mov
sub
add
mov
or
dec
rcrl
mov
add
imul
lret
sbb
sub
in
rep
test
ja
out
mov
cmpl
jecxz
mov
mov
pop
cli
cmp
jns
sub
addr16
and
dec
and
xchg
jl
cmp
mov
pop
add
outsl
push
fadd
test
xchg
mov
loope
or
mov
mov
or
push
mov
or
imul
in
or
sbb
mov
mov
bnd
aam
pusha
clc
mov
mov
adc
adc
dec
xlat
out
mov
cwtl
xorl
and
lret
add
xchg
clc
lds
jl
sub
pop
lea
enter
stos
fsubrl
lahf
mov
xchg
dec
hlt
jmp
iret
sbb
movsb
ja
pop
mov
fstps
mov
fs
imul
fidivs
popa
sahf
stos
call
pop
shrl
fdivl
and
mov
xor
jne
mov
xor
out
aad
fs
inc
insl
cmp
inc
lock
movsb
ljmp
cmp
in
mov
jg
xchg
ret
out
push
insb
loopne
push
iret
and
mov
xchg
js
and
xchg
das
les
test
rclb
test
aad
andl
test
ret
into
bswap
jo
jo
pop
cld
jl
stos
xorl
cmpsl
sub
xor
sbb
scas
mov
ret
aas
sbb
imul
xor
std
jg
add
rep
xor
gs
cld
js
test
push
or
rcll
jmp
and
inc
lods
rcrl
xor
xchg
les
jmp
jb
das
data16
xor
inc
outsl
clc
and
cmpsl
aas
or
xchg
mov
pop
iret
cs
scas
or
xchg
mov
scas
int
xchg
mov
outsb
scas
js
jne
xchg
out
into
je
js
xor
xor
pop
cld
push
ds
add
and
push
xchg
into
test
test
and
aad
xchg
push
sarl
or
mov
hlt
adc
jbe
push
fcoml
pusha
subb
inc
mov
in
in
dec
sub
jnp
pop
out
dec
pop
std
xrelease
push
das
or
dec
push
les
lds
bound
push
and
das
fmul
stos
jns
cld
lcall
or
jge
pop
xor
icebp
jae
int3
cmp
mov
insb
out
movsl
loop
in
sahf
repnz
push
cmpsl
pop
inc
and
inc
pop
sbb
adc
xor
mov
pusha
sub
cmp
gs
mov
aam
adcl
push
addr16
loopne
shl
xchg
push
push
aas
mov
push
xor
sbb
jne
imul
dec
cmp
cmpsl
inc
xor
pusha
std
out
imul
sbb
stos
mov
mov
add
add
out
push
das
xchg
xchg
mov
out
aam
sub
ja
xor
inc
dec
adc
gs
sbb
lcall
inc
jns
mov
dec
fsubrs
push
cmp
hlt
mov
dec
iret
das
add
mov
jnp
mov
jne
mov
ljmp
loope
in
popf
jbe
and
jl
rcrb
lcall
xchg
sub
and
push
jb
mov
push
adc
inc
pop
movsl
in
push
jne
daa
into
les
das
mov
pop
imul
jecxz
andb
mov
push
xchg
ret
pop
idivb
inc
add
add
sbb
lods
popf
pop
pop
push
jnp
loope
or
addr16
rcr
out
test
push
out
pop
cmc
or
xor
and
mov
xchg
stos
mov
mov
std
push
sbb
scas
int3
imul
push
jnp
pop
mov
jns
sahf
hlt
or
jmp
aad
mov
icebp
cwtl
sbb
pop
xor
jae
mov
jmp
pop
xlat
inc
lods
mov
repz
ja
outsb
arpl
cmp
sub
sub
fistl
fwait
sub
mov
and
adc
adc
xchg
sub
js
jp
aad
xchg
jae
leave
std
je
mov
andb
movsl
sbb
and
repz
ret
std
scas
pushf
sbb
cmp
sbb
mov
add
xchg
pusha
aad
loop
pop
adc
clc
sarb
and
xor
cmp
inc
jo
or
mov
sbb
adcl
test
in
sbb
mov
sar
clc
stos
cmp
fs
scas
imul
xlat
pop
out
push
in
push
shll
xchg
hlt
subb
shlb
clc
lods
push
test
test
xlat
adc
sbbl
jge
insl
clc
nop
gs
fbstp
mov
mov
mov
pop
cmpsl
xchg
push
cmp
lret
gs
pop
mov
out
lret
out
sar
fcmovb
dec
xor
cmp
add
out
add
sub
dec
sti
add
cli
and
push
inc
xlat
xlat
ror
xchg
mov
xchg
or
and
cmc
testl
push
add
adc
push
pop
testb
daa
mov
addr16
jl
loope
cmp
stc
sahf
scas
xor
dec
push
test
and
ret
jl
sbb
gs
rcrl
mov
xor
rolb
pop
adc
mov
aas
pop
and
jmp
cmp
xchg
mov
ret
pop
xchg
pop
jbe
xchg
es
lret
out
ja
clc
jp
je
in
jno
stos
rcrb
add
in
sbb
outsl
loopne
sbb
add
hlt
out
out
sbb
add
or
jnp
lretw
jnp
lods
push
or
sti
shrb
sub
pushf
inc
pop
mov
sbb
xor
pop
ret
in
lcall
mov
imul
aaa
ret
dec
lods
pop
mov
sub
andl
fistl
cmc
pop
xor
jle
out
dec
in
mov
daa
mov
fld1
cs
sub
dec
sub
dec
iret
out
adc
jo
repnz
mov
mov
sub
adc
add
pop
jo
test
movsb
sbb
cmp
scas
push
sbb
aaa
adc
into
packsswb
andl
cld
cmpl
sbb
sub
pop
xchg
out
aam
sar
pop
jns
xor
inc
in
xchg
iret
lret
push
xchg
mov
xchg
xchg
ficoms
loopne
scas
decb
mov
mov
cs
fcmove
or
cltd
popa
mov
stos
in
test
sub
ret
dec
xor
repnz
adc
add
pushf
cwtl
cmp
cmc
mov
add
push
lcall
and
lock
cmpsb
mov
jnp
adc
sahf
jecxz
int3
sub
add
mov
mov
repz
scas
jnp
dec
xor
mov
stos
testl
imul
xchg
call
xchg
sub
sub
imul
scas
cmp
fs
push
adc
and
add
sbb
xchg
dec
sbb
lahf
jle
jns
ljmp
mov
fldcw
cmp
in
xchg
push
sbb
dec
push
jne
mov
xor
std
int
test
int3
iret
lods
jbe
sbb
jno
fcompl
jecxz
movsl
mov
out
enter
inc
sahf
xchg
mov
push
mov
mov
addr16
outsl
cmp
pop
in
std
ljmp
xchg
sub
jnp
dec
and
push
pop
jne
push
inc
jmp
sbb
loopne
mov
fwait
sti
cmc
mov
mov
mov
popa
jbe
sti
sub
push
sbb
test
adc
add
mov
xor
pop
andl
rorb
sbb
cmp
mov
inc
insl
outsb
sub
xchg
shr
aas
cwtl
gs
xor
dec
xor
xchg
aam
sbb
pop
pop
mov
ljmp
addr16
xor
push
xor
and
mov
mov
jl
pop
push
cmp
leave
mov
cmp
sbb
push
stc
fs
sbb
jg
sbb
subb
cmpsl
push
loope
dec
push
push
and
adc
jbe
rcrb
xchg
adc
sti
dec
mov
jg
pop
dec
jbe
dec
in
pop
push
cmp
icebp
push
rcll
sbb
xor
outsl
cmp
outsl
js
inc
push
in
dec
sbb
push
lcall
bnd
mov
mov
add
xorb
add
sarl
push
adc
jle
ret
lret
in
je
cmp
or
sbb
or
cmpsl
adc
push
pop
sub
cmpsl
aas
adc
xchg
outsb
aas
rcrl
cmc
mov
int3
aam
sub
je
call
add
loopne
xchg
mov
cmp
loope
cmp
jmp
lods
xchg
and
adc
nop
mov
pop
dec
mov
and
stos
sbb
cltd
add
push
mov
sahf
or
xchg
xchg
push
mov
lock
andb
int
ljmp
pusha
ret
cmp
lock
mov
movsb
add
enter
jg
ret
mov
sbb
mov
cltd
add
add
cmp
stos
lods
xor
mov
lock
mov
loop
fiadds
movsb
fnstenv
mov
bound
fdivl
xchg
aas
mov
leave
jae
icebp
xor
or
shlb
in
stc
mov
sub
jno
cmpsl
cmp
sub
jb
fidivrl
insl
pop
cli
cmp
and
cmp
push
call
stos
xor
int
inc
xchg
dec
adc
mov
mov
inc
push
sahf
cmp
data16
and
daa
jle
loopne
sbb
add
mov
and
jmp
sub
insl
pop
icebp
jge
mov
mov
popa
pop
insb
cmp
les
js
call
push
dec
inc
and
imul
pop
and
js
jmp
lods
imul
into
mov
lret
jmp
ficomps
fmuls
sub
push
ljmp
push
mov
lock
xor
fnstcw
push
fimuls
daa
mov
enter
xor
push
cmp
fldl
and
loope
mov
fcmovu
mov
shrb
jg
loopne
adc
pop
iret
dec
cmpsb
xchg
pop
cs
lahf
mov
cmc
jb
rcll
int
incl
xchg
mov
std
or
push
push
sub
cltd
sahf
xchg
test
jnp
loopne
ret
lret
xor
cmp
jge
adc
pop
stc
xchg
das
repz
inc
inc
fwait
lock
sbb
icebp
adcl
pop
add
jo
jge
inc
aas
adc
sti
lcall
cwtl
fwait
mov
pop
push
jmp
fmull
idivb
pushf
dec
and
rcrb
mov
mov
popf
bound
mov
ffreep
cmpsb
sbb
loopne
pop
push
xor
xchg
pop
rcrl
fisubrs
and
iret
std
rcrb
stos
inc
ja
xchg
xchg
dec
add
xchg
rcr
outsb
jne
and
loope
sub
and
sti
fld
cmp
xchg
movsl
jmp
add
add
add
sti
mov
or
mov
in
test
inc
icebp
xchg
les
adcl
xchg
cltd
xor
dec
mov
fcomps
jb
xor
dec
repnz
js
imul
xchg
cltd
mov
add
push
faddp
cmc
pop
fmull
inc
pop
and
jne
call
stos
test
test
mov
iret
or
xchg
rcrb
iret
mov
adc
sbb
inc
pop
les
icebp
pushf
mov
inc
cmp
pop
mov
lock
inc
push
jge
fs
jl
mov
fidivs
mov
xchg
in
dec
xchg
pop
or
in
push
xor
int3
xchg
xchg
sahf
or
sbb
or
cmp
cmp
adc
jmp
shr
dec
push
fsts
hlt
idiv
and
push
push
je
cwtl
sarl
cwtl
mov
iret
adc
int
cmp
dec
cmp
push
push
ret
aaa
and
cwtl
icebp
aas
pop
js
cs
mov
mov
in
sub
cmpsl
pusha
gs
aaa
mov
mov
adc
mov
das
jecxz
test
std
sub
insl
inc
and
push
inc
add
sbb
imul
mov
pop
clc
xchg
call
leave
xchg
xor
sub
ret
push
fadds
push
cwtl
pop
addb
lahf
jecxz
xorb
aam
pushf
ret
push
jp
int3
addb
sbb
xchg
test
repz
sbb
jne
movsb
xor
inc
loop
loop
in
in
stc
in
dec
push
enter
mov
pavgw
in
das
fdivl
jnp
enter
sub
push
insb
les
lcall
lret
add
aad
repz
sub
cwtl
push
loopne
mov
mov
jo
sub
fildll
dec
jbe
sbb
call
mov
loope
loopne
cld
sbb
scas
in
xor
cli
clc
in
push
push
mov
mov
dec
xor
dec
inc
inc
leave
mov
loope
flds
dec
dec
inc
mov
lahf
or
jae
jmp
aad
cltd
xchg
add
iret
orb
ss
fsub
push
out
dec
jmp
dec
in
or
repz
mov
xor
les
incl
push
fbld
movupd
pusha
sub
pushf
pop
rcr
hlt
shll
add
mov
dec
in
mov
ret
out
xor
mov
shrb
mov
rcrl
pop
stos
mov
mov
mov
and
icebp
jle
addb
inc
aam
in
aad
ljmp
add
pop
call
dec
aam
adc
shl
enter
in
push
sub
pop
add
jb
loop
cmpsl
popf
add
mov
pop
or
inc
pop
jecxz
sbb
xor
jo
or
das
lea
stc
iret
and
ficomps
addb
scas
jne
mov
movsl
ja
in
inc
push
lret
gs
clc
dec
outsl
xchg
inc
and
fs
or
sbb
into
or
stc
inc
int3
dec
jge
jne
xchg
add
mov
xchg
ja
gs
pushf
and
sub
jge
jecxz
xor
add
mov
stos
in
inc
loope
fldenv
mov
pop
push
outsb
std
xchg
mov
xor
push
jecxz
and
xor
jnp
lret
and
lret
mov
or
cwtl
add
mov
nop
xchg
aas
out
stc
scas
int
mov
sbb
sbb
je
push
mov
js
and
sub
lret
pop
mov
xchg
mov
cwtl
lahf
cmp
mov
cmp
movsb
fadds
sub
das
movsl
sub
sti
stc
mov
hlt
mov
mov
push
leave
or
out
mov
pop
sbb
data16
test
ja
cmp
mov
jns
xor
add
jns
pusha
sub
mov
imul
fs
dec
or
ljmp
dec
lahf
lea
xchg
adc
xchg
shll
xchg
outsb
push
shrb
ja
mov
shrl
dec
lahf
rorl
inc
cli
sub
enter
cmpb
pop
mov
test
ret
fisttpl
inc
ss
cmp
xchg
mov
repz
and
push
mov
add
dec
push
xor
fldcw
lcall
pop
xchg
xchg
dec
jge
sbb
in
lea
fsubl
dec
ss
divb
insl
call
jnp
xchg
add
lods
xchg
loopne
test
in
mov
call
mov
sub
pop
aam
bound
imul
je
call
icebp
jnp
aad
scas
subl
or
rorb
mov
lret
pop
inc
outsb
lea
loope
in
ss
nop
bnd
pop
aam
cwtl
mov
sbb
aam
jb
xchg
cmp
movsl
mov
inc
inc
mov
mov
inc
fisubrs
jmp
pushf
sahf
jg
mov
mov
pop
cmp
cltd
mov
and
imul
aad
insb
mov
call
and
pusha
jmp
scas
insb
jbe
sub
movsb
test
fs
add
jb
pop
aad
mov
mov
mov
addr16
mov
jge
mov
lret
mov
pop
aad
xchg
sbb
adc
mov
fdecstp
jo
lods
cmp
fsubl
fdiv
insb
jne
mov
pop
in
ss
test
pop
orb
mov
orl
pop
cld
mulb
or
cmpsl
shrb
sbb
les
xchg
mov
fwait
negb
das
ljmp
fisubl
movsb
pushf
push
aad
or
pop
test
cmp
out
mov
push
adc
jl
out
mov
pop
fmull
cwtl
scas
xchg
lods
pop
mov
mov
and
and
and
mov
in
out
mov
jne
sub
rcll
orl
ret
mov
andb
push
mov
into
pop
push
clc
sbb
xchg
and
lods
pushf
mov
repnz
cmpsb
pop
lods
xchg
nop
mov
enter
and
int
cmc
mov
pop
xor
sti
stos
repz
fwait
push
mov
mov
cmp
mov
or
mov
inc
push
and
mov
sarb
add
xor
jg
arpl
cmp
jnp
xor
sbb
ret
fstpl
leave
push
inc
sbb
sub
xchg
ss
outsb
pop
dec
std
jnp
adc
enter
repz
cmc
test
lea
cmp
enter
add
xor
or
pop
hlt
dec
bound
std
jle
test
ss
je
xchg
xor
jl
cmp
sub
dec
ret
jns,pt
jno
sbbl
inc
fistl
jmp
sbb
or
in
aam
lods
xlat
out
mov
mov
sbb
jge
dec
fldl
int3
in
xchg
pop
push
add
and
subl
jmp
adc
into
dec
bound
orb
mov
push
popa
pop
out
dec
pop
shr
mov
scas
ljmp
dec
int
inc
pusha
push
adc
jno
mov
lret
mov
jge
xchg
push
or
or
dec
cmpsb
leave
imul
stc
ret
ljmp
sub
decb
xor
inc
aam
insl
nop
mov
lods
lret
out
fwait
jg
jae
adc
jo
push
xchg
mov
xor
outsl
mov
mov
jl
pop
jbe
lcall
cltd
sub
cmpsb
mov
sbb
jp
repnz
gs
cmp
mov
ds
in
in
cmp
mov
or
mov
lcall
ret
aam
lock
and
in
pop
sbb
sub
push
pop
pop
mov
mov
cwtl
inc
jecxz
ljmp
sbb
std
cld
dec
mov
dec
insb
mov
cmp
das
push
iret
inc
cmp
cmp
into
xor
arpl
mov
fcoml
and
ret
cmp
xlat
shrl
push
pop
loop
cmpsb
mov
adc
pop
mov
rorl
out
scas
lret
xchg
es
daa
pop
repz
aam
dec
xor
addr16
int3
jo
js
popf
sub
sbb
cltd
xchg
xchg
push
insb
std
cmp
pop
mov
imul
test
ds
into
ret
xchg
xchg
sbb
sub
inc
xchg
adc
loope
scas
xlat
leave
sti
jmp
arpl
ret
scas
mov
push
push
mov
adc
scas
in
in
addr16
adc
stc
in
adc
lods
adc
add
xlat
daa
sub
movsl
test
xor
div
and
insl
rcr
jg
std
inc
sti
push
inc
xchg
sbb
dec
mov
xor
adcb
sahf
xchg
push
adc
decl
pop
fwait
jl
in
inc
rcll
or
mov
xchg
xor
mov
les
movsb
in
pop
test
negl
lea
pop
nop
lcall
pop
xor
int
mov
inc
adcl
xor
and
mov
test
stos
push
daa
shlb
mov
sbb
sbb
insb
fldcw
sbb
add
and
cld
movsl
add
pop
push
movsl
xchg
popa
std
cmp
sbb
mov
orl
and
and
call
add
jge
loopne
pop
in
dec
jecxz
xchg
mov
adc
nop
pop
inc
mov
xchg
popa
mov
pop
push
xorl
sahf
xchg
adc
xchg
cmp
xchg
mov
icebp
dec
push
push
pop
xor
loopne
repz
loopne
rcll
jle
dec
nop
fnstenv
pop
pop
mov
jno
stc
sub
gs
or
in
int3
add
repz
shl
dec
lcall
adcb
movsb
popf
mov
xchg
xchg
xchg
jno
lcall
call
push
adc
inc
dec
sbb
outsl
adc
mov
imul
xchg
push
mov
add
xchg
sbb
dec
dec
test
xorb
stos
aam
push
lahf
js
mov
insl
xchg
push
stos
call
dec
adc
leave
fiaddl
lods
xor
dec
sub
mov
insb
mov
mov
sub
ror
cmpsb
inc
dec
rorb
adc
push
scas
unpcklps
mov
cmp
lea
xor
mov
cld
add
ljmp
mov
cmp
shlb
icebp
push
push
testb
js
pusha
cmp
pop
cmpsl
pop
mov
and
es
clc
es
inc
lds
sbb
jb
std
insb
sahf
sbb
mov
pop
mov
frstor
shlb
push
dec
and
jle
sahf
aas
mov
out
scas
xor
sub
jnp
ds
mov
lahf
mov
sti
fdivl
pop
cmp
sub
dec
adc
dec
dec
dec
dec
cld
push
xchg
shlb
cmp
ret
mov
mov
mov
insb
xchg
ljmp
push
dec
ss
aaa
jge
cmpsb
repnz
test
jmp
or
mov
mov
xchg
or
fcmovnb
lret
push
jecxz
fisubs
mov
int3
lock
je
adc
scas
movsl
jge
addr16
pop
fidivs
les
or
dec
jp
ret
fstps
add
bound
pop
fwait
test
jp
xchg
jmp
cli
jbe
and
xor
xchg
js
mov
mov
mov
mov
add
xor
and
js
cmp
lds
fistl
movsl
mov
xchg
aad
ret
or
xorl
xchg
jecxz
pop
popf
stos
cmp
push
hlt
cmovae
push
pop
mov
push
ja
lods
cs
sbb
std
xorl
dec
clc
sti
mov
cmp
test
mov
clc
jl
xor
inc
loopne
and
andl
in
lods
sbbl
push
fsubs
fistps
or
pop
sub
dec
cltd
es
pop
cli
fs
mov
les
sbb
dec
dec
nop
dec
roll
adc
dec
mov
push
notb
dec
fimuls
aad
loop
es
dec
xlat
add
ffreep
int
push
lds
pop
int
stc
sub
repnz
leave
mov
pop
ret
stos
ret
gs
dec
scas
mov
pop
xor
daa
jle
dec
jmp
dec
or
mov
and
faddl
shlb
adc
in
adc
xchg
gs
test
push
ja
cltd
call
mov
adc
xor
dec
inc
jl
or
sub
ljmp
stos
adc
in
sub
pusha
aas
pusha
or
mov
cmc
sbb
xchg
nop
sub
mov
xor
nop
add
xchg
jge
inc
cmc
mov
shlb
xchg
mov
leave
sub
and
lds
cmpsl
push
stos
fisubrs
pop
test
push
popl
insb
into
int
jp
jb
popa
test
and
xchg
pop
sbb
xorb
rcrl
or
or
shr
push
mov
push
fistl
and
push
jb
mov
push
pmaxub
sahf
ret
dec
out
bound
repnz
lret
mov
sub
or
mov
dec
insb
movsb
jb
inc
mov
or
enter
nop
inc
in
lcall
xchg
sbb
mov
adc
sti
fcom
xchg
xchg
into
xchg
adc
insl
xchg
mov
sbbb
sbb
jp
jmp
addr16
addl
jbe
ja
nop
insl
popf
jcxz
leave
xor
push
xorl
jp
test
cmc
pop
out
int3
js
cmp
lds
in
adc
adcb
or
out
pop
fadd
repnz
imul
fdivs
push
fimull
in
mov
cltd
xlat
loope
xchg
jecxz
fidivs
scas
notb
imul
mov
pop
push
xchg
and
sti
roll
push
dec
cs
adc
pop
outsb
pop
mov
xchg
divl
xchg
adc
cmpsb
pusha
aaa
mov
clc
mov
mov
xor
xchg
pop
adc
cmp
scas
ss
dec
mov
arpl
shrl
adc
and
sbb
xchg
cmp
adc
mul
inc
or
cmpl
ja
jae
aaa
addl
fs
or
cli
fstl
or
lahf
roll
test
cmpsb
push
mov
pop
js
jb
jne
leave
aad
test
das
lcall
adc
mov
cli
cmp
loope
sbb
sahf
jne
out
adc
sbb
or
bound
lret
lret
test
fucomp
fimuls
mov
xor
mov
pop
scas
aad
mov
insl
aas
sarb
adc
sub
push
test
sub
cmp
or
xor
call
aas
lret
xchg
add
fnsave
shlb
jno
fisttpl
or
or
sub
or
sub
lcall
int3
adc
pop
bswap
imul
jecxz
lret
mov
ljmp
addps
pop
cmp
sub
and
nop
add
cmp
pushf
sbbb
ret
daa
cmp
mov
add
push
push
cmc
arpl
sbb
xor
mov
inc
test
sub
cmc
sub
in
data16
nop
icebp
repz
popf
dec
mov
jae
data16
mov
push
xchg
mov
push
daa
add
and
sahf
cmp
xor
aaa
lret
push
sub
sub
or
dec
lds
mov
out
ss
dec
scas
ret
mov
data16
jno
les
pushf
imull
sti
insl
aam
cwtl
sub
and
shlb
jbe
add
daa
das
adc
push
ficoms
rcll
aas
xchg
in
pusha
cmp
aas
loopne
lret
out
mov
shlb
loop
and
dec
push
adc
enter
lea
add
enter
xlat
cmp
dec
add
jo
xchg
movsl
nop
icebp
dec
icebp
bound
inc
cmp
loopne
cwtl
sbb
add
enter
mov
add
add
fnstcw
mov
and
pushf
xor
sub
bound
ficoml
dec
mov
cltd
jae
cmp
xor
incb
xor
push
mov
shll
fstpl
pop
or
add
mov
inc
and
fisubrl
dec
inc
mov
pop
jne
in
fbld
shr
sbb
insb
or
icebp
add
cmp
add
sbb
inc
cwtl
repnz
cmpsl
mov
scas
push
sti
arpl
in
lret
dec
js
shlb
jle
xchg
jecxz
rclb
mov
push
inc
es
cmpsl
movsl
sbb
adc
subl
mov
xchg
enter
hlt
hlt
loopne
test
lods
pop
mov
mov
add
rcr
or
aad
shll
adc
push
cmc
pop
jb
mov
mov
jmp
sub
icebp
inc
test
cmpsl
mov
outsl
in
arpl
push
sbbl
mov
mov
mov
mov
adc
mov
xlat
sub
test
sarl
shlb
aas
stc
fnstcw
jge
or
int3
mov
and
inc
adc
testb
lret
leave
adc
loop
jle
cmpsl
jo
add
rcrb
fisttpll
xor
and
int
mov
mov
mov
ja
test
jns
test
jnp
loop
ret
pop
aaa
dec
mov
sub
inc
mov
aas
add
test
cmpsb
test
fcompl
stos
inc
dec
pushf
or
loopne
cmc
mov
push
or
movsl
mov
mov
mov
pop
mov
pop
jo
xchg
add
repz
outsb
fcomps
stos
jne
pop
mov
jp
jae
adc
xor
sti
sbb
xor
mov
jg
rcrl
mov
dec
xchg
in
mov
clc
or
adc
pushf
mov
jle
outsl
cltd
bound
stc
cltd
add
jbe
xor
fsubs
mov
xor
mov
mov
sub
sbb
fcomps
leave
adc
pop
and
mov
cmp
iret
xor
cmc
pop
stc
or
cmpsl
inc
lock
clc
or
or
inc
sbb
dec
out
jns
cld
xchg
and
data16
pushf
push
fs
frstor
jl
push
lock
fwait
jo
movsl
stos
mov
dec
fisttps
inc
mov
gs
adc
addr16
add
add
cwtl
sbb
add
ret
mov
es
cli
fidivs
cmp
pop
mov
loop
pop
test
pop
push
in
lds
bound
jno
or
adc
push
icebp
sub
jne
cltd
or
scas
js
mov
fnstenv
pop
push
mov
mov
push
mov
mov
and
adc
nop
mov
sti
pop
test
add
fimull
xlat
out
subb
test
cmpsb
sbb
cmpsl
loope
mov
pop
ss
ljmp
jo
test
notl
test
iret
jge
jae
jo
adc
inc
cmp
xchg
jge
jno
mov
mov
ret
push
fidivrl
jle
cmp
pop
pop
adc
or
dec
loopne
mov
adc
sbb
mov
lock
popf
xor
cmp
mov
in
ds
adc
mov
mov
adc
stc
xlat
cmp
lahf
loopne
gs
mov
inc
lret
mov
rcr
push
or
jo
lcall
rolb
mov
mov
mov
add
cli
bound
bound
bound
xor
add
out
push
shr
movsl
movsb
lcall
jg
aaa
lcall
sarl
or
or
xchg
pop
pop
xchg
and
sbb
mov
ficompl
mov
imul
icebp
popfw
mov
add
push
jecxz
xchg
pusha
mov
jg
inc
push
shl
sbb
dec
addl
dec
int3
out
xor
out
or
lock
xchg
mov
addr16
xor
and
jns
popa
push
add
ja
rep
pusha
cmp
leave
cmp
ljmp
out
int3
jae
jb
add
adc
stc
into
xor
cmp
lcall
push
out
adcl
push
aad
inc
mov
mov
imul
fyl2x
repnz
jae
jge
push
cld
insb
push
add
mov
lcall
scas
or
arpl
ror
xchg
aad
cmp
mov
mov
in
lret
and
jg
addr16
outsl
repz
lods
jno
not
push
dec
bound
xchg
aam
sarb
lahf
sbb
jb
rclb
sub
cmc
pop
pop
mov
call
add
mov
filds
pop
lds
pop
pusha
ret
jae
xor
mov
cmp
xchg
sbb
lock
dec
lock
xor
imul
adc
jne
faddl
iret
jmp
or
push
shll
test
sbb
sbb
rclb
sbb
invd
imul
xchg
cwtl
pop
or
lods
cmpsl
xor
mov
xchg
push
xchg
scas
cmp
add
inc
or
and
ret
rorl
push
cmc
mov
icebp
xor
lcall
nop
sbb
outsb
xchg
mov
mov
pop
popf
xchg
adc
fs
pop
xchg
pop
mov
xorl
cwtl
push
sbb
test
popa
jb
cmp
and
inc
das
jbe
addr16
push
pop
rolb
xor
jle
jno
jle
and
ja
dec
jnp
jno
jge
test
insl
loope
and
in
sbb
outsl
and
cmp
scas
push
orb
testb
js
mov
push
push
repz
and
into
or
and
decl
jae
push
jg
inc
pushf
gs
dec
lds
ffree
dec
fcmovbe
pop
int
es
cld
sbb
mov
ficoms
scas
xchg
mov
in
mov
mov
sahf
xchg
jne
repz
or
push
lock
push
mov
push
cs
addr16
xchg
sbb
rcrb
pop
mov
icebp
and
mov
fwait
add
pop
roll
push
daa
pop
add
shrb
ret
loopne
mov
outsb
push
mov
sub
add
mov
loopne
je
mov
fisttpll
stos
push
mov
addr16
pusha
stos
xor
in
sbb
adc
mov
mov
inc
mov
push
andb
inc
aad
mov
addr16
rsm
push
push
or
dec
jno
dec
xlat
adc
andl
xor
loop
mov
add
jecxz
fidivrs
inc
lret
out
inc
ds
mov
shr
mov
sarb
ret
ret
cs
fdivs
insl
imul
mov
setle
insl
pop
add
imul
sub
andb
jmp
add
cmp
sahf
cmp
adc
pop
mov
cli
mov
in
mov
xchg
jp
xchg
lret
adc
or
lock
sbb
sub
insl
in
and
add
sbb
ret
xchg
aas
xchg
int
jg
xchg
add
xchg
dec
or
push
xorb
stc
fcmovnbe
and
mov
in
push
mov
ds
mov
lret
loope,pt
xor
add
aaa
fnstsw
pop
jo
xorl
jnp
test
or
test
push
fldt
lock
cld
lcall
inc
mov
nop
cltd
pop
loopne
add
sbb
push
inc
dec
dec
or
xchg
inc
mov
sub
dec
cmp
cmp
jecxz
das
lods
inc
out
fwait
scas
repz
mov
cmpsb
insl
mov
pop
adc
jae
lret
addr16
insl
sub
mov
mov
sti
std
mov
add
test
shrb
xor
cltd
mov
fistpll
test
cltd
testb
dec
cmpsb
movsl
lahf
jg
adc
rorl
mov
dec
sbb
pop
or
popa
cli
inc
fimull
cmp
pusha
jp
outsl
pop
daa
test
inc
jb
arpl
jb
test
cltd
push
loop
push
dec
sub
mov
mov
outsb
fsubl
cmc
pop
or
mov
imul
xchg
imul
push
cmpsb
bound
rcrb
sbb
shlb
adc
out
clc
out
test
mov
pop
jbe
push
push
sub
fimull
insl
and
or
adc
movsl
aam
mov
mov
movsb
stc
sahf
mov
add
fbld
jge
dec
adc
iret
push
inc
xchg
into
mov
jmp
inc
mov
push
loope
sub
inc
or
pop
enter
dec
pushf
jecxz
call
add
push
ficompl
cmp
test
jge
mov
setnp
nop
inc
sbb
pop
sbb
ficoms
jge
xor
addr16
nop
xchg
dec
fisubl
xor
sarl
scas
clc
shlb
pop
inc
push
xchg
dec
bnd
out
insl
adcl
mov
cmp
mov
test
and
cmpsb
push
mov
jno
daa
mov
adc
add
iret
lea
mov
insl
jecxz
jno
dec
mov
cmpsb
imul
mov
mov
sti
mov
dec
cmc
mov
sbb
stc
pop
push
divb
xor
in
mov
adc
mov
cs
call
cltd
lret
sbb
ja
pop
push
cmp
in
shl
nop
sbb
cmp
cmpsl
pop
sahf
jle
arpl
ds
xor
fcmovb
cmp
or
imul
jecxz
push
jne
inc
filds
cld
inc
test
push
sbb
or
ja
fmulp
sub
mov
out
bound
mov
jo
sub
fldl
inc
xchg
or
in
out
addr16
mov
loope
add
in
xchg
outsl
add
std
movsb
sub
and
int
into
push
xchg
icebp
hlt
incl
imul
mov
xchg
cmp
push
and
add
pop
out
cmp
loope
stos
jne
aad
inc
test
movsb
push
popf
push
pop
movsl
pop
cld
ljmp
out
cmp
out
mov
pop
xchg
mov
jo
ja
sbb
lds
stos
and
dec
rcll
movsb
inc
mov
jmp
divb
icebp
insb
cwtl
jmp
xchg
cmp
jo
push
stos
push
xchg
rcrl
movsl
out
pop
popa
jo
jne
dec
into
xor
mov
xchg
mov
fmul
jno
fnstsw
lret
incb
jle
or
ljmp
js
hlt
mov
pop
sbb
fdivp
pushf
add
inc
jae
jb
adc
shlb
arpl
push
sub
xor
pop
int3
sbb
jmp
sbb
gs
in
push
xchg
out
test
cmpsb
mov
mov
movsl
add
jo
addr16
repnz
mov
xor
mov
mov
loopne
mov
es
ret
lock
fstpl
jno
push
jne
xor
shlb
dec
pop
pop
lds
subb
cmp
pusha
push
je
xorb
decb
es
mov
imul
das
mov
xchg
pushf
lods
ret
popl
aaa
scas
add
xor
mov
cli
addb
in
loopw
pop
and
adc
inc
cld
iret
out
inc
sahf
jmp
hlt
pop
addl
push
iret
mov
mov
icebp
or
addr16
xchg
ljmp
ds
outsb
mov
icebp
fbld
mov
cmp
rolb
enter
test
mov
rcll
out
or
cs
ljmp
or
inc
repz
sahf
sti
adcb
addr16
or
bound
sbb
dec
push
iret
mov
push
jae
or
push
xor
sub
sub
nop
xchg
push
push
dec
int3
dec
pop
xchg
mov
sbb
mov
push
jae
ficoms
cmpsl
pop
xlat
jecxz
pop
aas
mov
outsb
loopne
add
in
mov
ret
lods
fldenv
jnp
and
push
mov
das
dec
xchg
dec
mov
scas
enter
xor
cmpsb
addr16
enter
mov
jmp
fimuls
ss
insb
int
xlat
out
iret
jge
das
pop
cs
nop
pop
cltd
je
sbb
pop
dec
cmp
sub
dec
insb
xor
sbb
out
push
cmp
mov
or
fisttps
cmc
add
add
inc
stos
fcmovbe
adc
push
mov
xlat
inc
dec
insl
in
fisttpl
testl
or
mov
dec
add
imul
and
inc
mov
inc
jecxz
sub
rorl
out
pop
das
or
inc
mov
pop
jns
or
stos
mov
xchg
mov
addr16
xor
iret
sbb
call
daa
sahf
testl
rolb
or
das
rcr
popa
pop
mov
add
into
dec
inc
xor
or
dec
addr16
pop
and
mov
jnp
popa
rcrb
stos
das
jmp
mov
ret
cmp
dec
inc
adc
push
out
pop
sub
loopne
movsb
sbb
jmp
dec
ret
icebp
dec
lods
mov
ret
pop
adc
cmp
cmpsb
cmp
or
cmpsl
loope
inc
inc
in
iret
sbb
inc
and
lcall
dec
push
jl
scas
rcrl
push
vxorps
xchg
push
push
sub
dec
pop
and
imul
mov
ficoml
inc
or
mov
iret
dec
push
dec
ror
add
sbb
sub
add
sub
aam
sub
pop
push
fistpll
dec
cmp
mov
icebp
aas
inc
jmp
push
cmp
lds
mov
and
sbb
inc
loope
adc
sbb
sbb
mov
adc
scas
outsb
imul
and
jmp
je
rorb
pushf
jmp
rclb
mov
pop
out
sub
js
insb
cmp
mov
push
call
shrb
sub
cmpsb
lods
cmp
sti
xlat
jp
pushf
fdivl
add
outsb
jge
insl
mov
mov
mov
fcomps
in
mov
adc
hlt
mov
dec
dec
adc
call
mov
fiaddl
dec
lahf
mov
call
mov
cmpsb
int
mov
jle
sbb
inc
popf
xchg
aad
clc
inc
lock
xchg
cmp
pop
gs
dec
lods
lods
sahf
stos
loopne
clc
xchg
mov
addr16
test
push
arpl
faddl
pop
push
add
cmc
push
inc
std
push
xchg
dec
popa
andnps
pusha
std
push
xor
ds
clc
ret
lret
cmp
push
cmp
push
dec
int3
sub
stc
push
mov
xor
loop
mov
xchg
sub
sub
push
inc
enter
push
loopne
xchg
stos
notb
stc
aad
cli
popa
insl
cltd
cwtl
aas
xchg
lret
sti
in
and
test
dec
pop
sbb
pop
repz
jmp
sub
xchg
dec
and
int3
push
add
ret
and
mov
cmp
movsb
lahf
push
push
scas
fdiv
sub
mov
arpl
sahf
sbb
mov
into
jle
adcl
es
pop
sti
push
mov
das
jo
out
and
leave
add
xchg
sahf
push
repz
push
inc
lcall
sarb
stc
insb
xchg
fimuls
and
pop
jne
dec
lock
fistps
roll
jp
out
outsl
mov
movsl
mov
jnp
jmp
les
jbe
out
mov
pushf
stos
cmp
test
popf
cld
sub
aam
sbb
rcrb
jp
dec
popf
xchg
or
in
sbb
aas
aad
imul
call
mov
cwtl
mov
push
loop
cltd
adc
mov
xchg
imul
jbe
mov
dec
popa
lret
rcll
adc
push
pop
pushf
shll
sbb
test
adc
adc
test
in
pop
aad
pop
push
hlt
repz
cmpsl
adc
scas
push
sub
cmc
cmp
arpl
loop
movsl
int
addb
dec
xchg
mov
inc
in
sub
mov
jmp
dec
test
sbb
inc
sarl
fnclex
lds
out
idiv
lea
outsl
rol
mov
idivb
inc
and
cld
jg
dec
fidivs
int
jge
fldenv
mov
adc
dec
lret
loope
int
movsb
mov
inc
or
orl
insl
rcl
mov
dec
test
enter
in
insb
push
jecxz
loopne
jo
xchg
ja
mov
dec
insl
lret
in
inc
icebp
sub
pop
mov
xor
xor
divl
mov
adc
push
xchg
and
dec
js
push
cwtl
mov
adc
pushl
out
cmp
mov
pusha
ljmp
adc
push
xor
push
mov
out
cmp
sbb
push
fsubrs
adc
rorb
pop
xlat
add
rorb
adc
and
js
add
stos
je
int3
addl
pusha
fcoml
loop
mov
repnz
mov
push
pop
mov
ds
stc
outsb
jg
shl
push
jg
lret
iret
jns
daa
aaa
lods
sbb
into
repz
sbb
int3
sub
inc
push
aas
pop
push
in
or
outsl
or
insb
repz
sub
inc
out
fldln2
mov
mov
xlat
xchg
jbe
cmp
dec
jne
test
cmp
xchg
cmpsb
inc
and
sti
iret
or
jp
popf
ja
dec
push
mov
jns
out
xchg
scas
mov
aaa
push
add
jnp
inc
movsl
lahf
mov
fwait
adc
dec
and
gs
mov
add
mov
sbb
jecxz
xchg
xchg
clc
push
dec
mov
incb
jmp
dec
cs
aam
ret
or
push
sub
jecxz
mov
adc
fmuls
add
xorl
daa
mov
scas
outsl
sti
mov
mov
loope
xor
subl
fnstenv
cmp
fcom
mov
xchg
imul
push
pushf
xchg
mov
push
scas
cld
insb
cmpsl
sbb
xchg
adc
xor
ljmp
dec
repnz
addr16
pushf
jge
or
add
outsl
cld
mov
inc
push
and
aam
hlt
sub
shll
arpl
popf
daa
sbb
je
jmp
lcall
xor
cmp
test
fsubrl
or
xchg
sarl
xorb
mov
sub
mov
aam
or
mov
test
hlt
pop
adc
push
js
add
ret
add
orb
sbb
pop
push
in
adcb
shll
xor
stos
in
push
les
in
in
xor
pop
push
dec
sti
pop
dec
add
loop
sbb
test
int3
lret
movsb
or
xchg
stos
sbb
mov
lds
mov
pusha
cltd
and
les
fs
in
imul
stos
mov
stos
ret
push
cli
and
cwtl
lret
outsb
push
jnp
mov
ljmp
push
or
jp
or
pop
or
out
popf
outsl
sti
out
fisubl
or
loop
jg
repnz
adc
outsb
test
sub
lock
lds
imul
and
push
jae
mov
iret
cmpsl
repz
in
xchg
scas
xchg
inc
dec
sub
cmpl
cmp
sub
xor
dec
push
shrb
test
pop
mov
int3
pusha
in
jp
push
movsb
mov
mov
lods
aad
insb
in
adc
out
jmp
sbb
and
int
pop
xchg
aas
mov
cmp
loope
lods
imul
jmp
ja
jno
sub
pop
or
pushl
jo
jnp
add
sahf
push
dec
and
dec
enter
iret
cli
jno
mov
and
mov
je
inc
int
mov
cs
mov
scas
bound
mov
paddd
jle
in
cmp
into
mov
xor
icebp
das
mov
pop
pop
icebp
loope
add
dec
arpl
loope
xor
aas
mov
ljmp
push
sub
pop
sahf
push
jne
divb
sbb
mov
pop
sar
jecxz
cmp
ja
ficompl
mov
mov
ja
cli
fstpl
shr
inc
xchg
in
mov
cmpsb
lods
xchg
or
and
fcompl
xor
jnp,pn
fsubp
adc
dec
lret
aaa
out
fsubrs
out
rcr
mov
pop
or
dec
sub
daa
jl
jp
cmc
jp
adc
sahf
cmp
push
pushw
pop
push
cmpsl
inc
dec
xor
xor
or
adc
dec
enter
outsl
lcall
popa
mov
sahf
push
pop
mov
call
xchg
sbb
mov
sbb
jmp
jp
push
sbb
xchg
mov
inc
in
sbb
pop
repz
adc
jbe
imul
cmp
insl
sbb
in
fildl
lods
pop
dec
push
mov
lret
sti
or
ja
and
sbb
data16
cmp
cli
mov
popf
in
test
pop
arpl
das
jge
push
rcrb
dec
aas
and
cmc
sti
mov
popl
push
arpl
sbb
fmuls
mov
jmp
test
dec
and
scas
ja
arpl
cltd
mov
in
imul
jle
fiaddl
push
cltd
aaa
xchg
bnd
and
push
test
cmpsb
in
or
mov
pusha
orl
lock
mov
fsts
mov
into
in
cmovl
dec
loopne
sbb
pop
dec
sub
daa
das
sahf
lret
shrb
shr
sbb
roll
jo
sahf
data16
stos
mov
jp
cmp
xchg
scas
nop
jge
jns
push
fwait
mov
lds
jns
movsl
mov
movsb
fs
lcall
sbb
mov
or
aas
or
in
and
sbb
xor
push
jecxz
lds
xor
out
or
sub
and
pop
xchg
lea
jmp
call
jg
inc
push
or
cmp
lahf
sub
aad
pop
xchg
and
mov
out
scas
sub
pop
fisubs
fsubrs
mov
in
xchg
push
mov
mov
lahf
outsb
stos
repz
lea
cmp
es
jne
xchg
clc
rolb
icebp
jb
and
xor
mov
into
add
jmp
fisttps
xor
xchg
push
std
or
or
push
dec
call
pop
cmp
or
fwait
jb
shll
mov
inc
push
dec
les
pop
jge
jnp
adc
push
push
loopne
xor
je
xor
fcomps
test
clc
mov
leave
sbb
mov
dec
xor
push
xchg
fmulp
clc
insb
pop
test
and
out
dec
xchg
mov
pop
idivl
mov
and
dec
xchg
pop
mov
xchg
out
mov
inc
jae
and
addl
push
jae
ret
sbb
add
cs
xchg
iret
int3
fists
sub
fsubs
and
mov
push
mov
pop
jge
mov
mov
lods
bound
sbbl
fs
icebp
xchg
mov
fidivs
outsl
xchg
push
pop
test
push
cmp
mov
orb
loope
in
add
pop
xchg
mov
out
mov
push
lret
movsb
jne
rolb
and
cmc
adc
es
test
std
add
imul
adc
cli
lock
pop
mov
or
jl
cmc
std
imul
jg
jae
gs
sti
div
mov
addr16
les
jns
in
test
arpl
insb
push
jg
jmp
push
lods
jns
lcall
mov
adc
jno
xchg
adc
lahf
in
dec
jno
dec
and
inc
jno
push
sub
and
roll
pop
mov
mov
sahf
ds
mov
scas
pop
test
ds
mov
fldenv
pop
nop
lods
std
out
jbe
add
ss
and
lock
cld
adc
sub
sahf
mov
mov
xor
ret
movsb
lds
xchg
divb
fs
fisubrs
data16
push
mov
int3
or
fidivrl
push
pusha
stc
int3
lahf
dec
fcmove
cs
popf
dec
mov
fwait
cmpb
push
or
inc
adc
mov
aaa
and
hlt
or
xor
sahf
lea
or
adc
test
in
fsincos
cmp
les
lcall
xchg
sub
cmc
pop
int3
sbb
adc
mov
push
lahf
or
xor
aad
lds
popf
mov
xor
into
jg
je
rorl
xchg
dec
in
cmc
xchg
cmpsl
and
lods
rcrl
fimuls
fisttpll
cmp
adc
mov
aad
aad
cmp
inc
sbb
out
and
mov
lret
jbe
rcrl
pop
xchg
or
adc
fidivrs
pop
add
pop
leave
stos
push
and
jmp
addr16
or
push
jg
mov
das
add
push
pop
cmc
stos
scas
inc
enter
mov
int3
push
push
mov
xchg
push
testb
mov
mov
push
jle
pop
and
subl
cmp
push
bound
repnz
loopne
ljmp
fstl
cmp
arpl
dec
cmpsl
popa
xlat
adc
push
adc
icebp
fwait
cltd
test
xor
imul
mov
or
inc
xor
mov
push
sbb
mov
push
es
out
repnz
push
ja
fcompl
sub
fstpt
push
pop
ja
icebp
push
insl
add
lds
push
aas
subl
flds
and
js
add
add
rolb
pop
rcrl
repz
lret
pop
leave
dec
call
adc
out
adc
insl
push
fisubl
push
nop
or
xor
sbb
sub
push
int
into
cmp
ljmp
pop
mov
push
gs
dec
xor
enter
push
or
orb
jg
pop
lret
std
neg
jecxz
lret
cli
adc
int
insb
test
clc
xorb
addb
test
mov
cmp
stc
cs
pop
lret
call
enter
dec
mov
aas
jo
pusha
inc
movsb
xchg
cmc
dec
in
jae
sbb
cmpsb
fnstsw
roll
sub
fiaddl
jo
fstps
std
jo
adc
fwait
dec
rcll
pop
inc
sub
mov
add
or
cli
cmp
insb
das
into
sbb
inc
pop
adc
dec
or
adc
sbb
outsl
inc
repnz
push
adc
outsb
add
jmp
inc
mov
aaa
sbb
mov
test
shrl
mov
inc
mov
and
jb
jae
pop
adc
or
jbe
or
xor
or
cmpsl
jle
and
jmp
mov
shlb
sbb
mov
cmpsl
mov
roll
call
repz
in
es
jl
add
and
sahf
or
sti
call
ljmp
xor
jmp
filds
int3
push
outsb
repnz
bnd
hlt
cmp
filds
std
cs
jno
jmp
sbb
mov
lret
iret
adc
add
popf
iret
xchg
push
push
mov
lcall
mov
dec
xchg
mov
jne
add
sbb
lahf
push
mov
loope
add
out
stos
lea
aam
xchg
pop
add
fistpl
mov
push
lcall
mov
je
xor
fildll
jno
ljmp
mov
adc
xchg
push
jae
in
lock
xchg
pop
push
in
inc
add
jp
mov
adc
cli
sub
fwait
inc
inc
inc
aaa
outsl
loope
and
mov
dec
mov
inc
sti
jns
mov
sarb
repnz
bound
sub
jne
test
xchg
push
stos
repz
outsb
and
mov
jne
xchg
add
jg
sbb
mov
pop
movsl
aas
xchg
add
push
pop
bnd
unpckhps
imul
orb
xor
div
jg
cmp
pop
mov
sub
lock
lods
xchg
or
lcall
test
cmp
notb
nop
or
mov
ja
outsl
stos
pop
inc
or
sbb
push
jecxz
test
xchg
jmp
rolb
cwtl
outsb
sub
push
pop
dec
test
sub
xor
repnz
std
cmp
xchg
xlat
aam
pop
mov
and
popf
inc
mov
loopne
mov
xchg
fnstenv
hlt
push
or
inc
jns
inc
mov
push
ds
insl
ret
fucom
ss
lds
mov
stos
and
adc
movsb
push
test
add
imul
sbb
mov
push
pop
inc
dec
mov
fisubl
pushf
sbb
cmp
ficomps
dec
mov
iret
or
loop
jle
or
add
aas
stc
incl
sub
pop
in
mov
add
ljmp
pop
ret
mov
cmpsb
arpl
jle
das
cmp
sbb
pusha
mov
data16
push
lea
bound
push
ror
repz
mov
movsl
popa
push
xor
add
mov
popf
jge
and
lods
fadds
jle
pop
lahf
inc
iret
mov
mov
sub
iret
clc
out
adc
or
sub
lods
rol
sub
fmuls
pop
daa
xlat
cli
orb
xchg
lahf
inc
inc
cmpl
mov
jae
imul
pop
sub
out
or
insb
je
or
xor
mov
imul
xor
jo
xor
popf
adcl
sahf
xchg
mov
jb
xor
cmpsb
das
push
aad
mov
jb
pusha
ret
ret
inc
push
lods
push
nop
shlb
leave
pop
mov
xchg
sub
xchg
pop
leave
mov
jg
add
xor
adc
sub
xor
shll
mov
or
das
popa
push
mov
adc
or
addb
mov
dec
hlt
jns
xchg
lock
gs
jg
push
pop
or
pop
sbb
cmp
inc
sti
pop
shrl
cmpb
inc
loope
mov
mov
jae
mov
mov
dec
sub
jno
mov
in
addl
fs
fs
cmp
test
cmp
mov
arpl
out
jp
insl
icebp
ds
fmul
loopne
pushf
rcrl
add
cmp
movsb
adc
mov
test
aad
dec
cltd
mov
mov
cwtl
repz
jg
and
cmp
mov
and
mov
ret
push
stos
pop
jae
add
cmpsl
xchg
inc
adc
pop
cmp
dec
stos
adc
lea
popf
sbb
jmp
push
mov
pop
jg
and
in
dec
test
mov
in
mov
mov
out
cmp
dec
in
jmp
int3
cltd
insb
insb
lahf
xor
das
mov
mov
lahf
cltd
lock
test
xlat
mov
leave
dec
negb
adc
iret
sub
add
ja
push
incb
pushf
and
xchg
push
adc
cmc
outsb
xchg
aad
in
movsl
cmpsl
or
xchg
xor
pop
adcb
push
repz
xor
fstpl
pop
scas
fidivrs
jns
mov
imull
inc
and
or
test
gs
push
arpl
cmp
int
jbe
insl
stos
xlat
xchg
imul
rcr
js
and
andl
std
add
mov
jno
mov
pop
cmp
out
push
cmpl
iret
shll
xor
je
mov
pop
xor
fstpl
sub
and
jmp
pusha
push
gs
lret
call
mov
insl
dec
rclb
push
push
sub
jns
jle
xchg
testb
cmc
test
cmc
xchg
inc
cmpsb
pop
pop
sbb
xchg
inc
repz
cld
push
add
repnz
les
sbb
lds
adcl
add
cmc
sbb
cwtl
cmp
adcb
push
xor
push
stc
hlt
out
adc
test
popa
and
repnz
lods
mov
dec
decl
push
out
dec
outsl
push
mov
or
jo
sbb
and
ja
sbb
sbb
or
xchg
outsl
outsl
fidivl
jo
push
jecxz
mov
pand
std
fadds
push
lods
and
pop
lds
sbb
ss
repz
scas
sbb
add
xchg
pop
les
aam
mov
adc
je
adc
jnp
clc
push
xchg
mov
jmp
nop
iret
inc
inc
js
sbb
lock
lret
xchg
mov
test
adc
lret
fsts
in
cmp
lret
enter
fldenv
cmp
sbb
inc
test
push
ja
pop
movsl
mov
mov
inc
adc
sub
scas
mov
adc
mov
inc
pop
pop
jb
xor
nop
xor
inc
dec
shr
aas
js
sub
jnp
and
inc
adc
jno
dec
sbb
jmp
cld
mov
aas
hlt
push
xchg
dec
aaa
popa
inc
add
bound
dec
add
rcl
xor
fwait
sbb
adc
push
fisubl
cmp
sbb
decb
aas
dec
imul
test
je
or
xchg
dec
les
lcall
mov
add
xor
mov
xchg
int
jmp
bound
enter
loopne
xchg
add
push
in
mov
out
testl
mov
js
lret
stos
aam
imul
std
das
adc
bound
push
insl
inc
test
pop
lahf
jg
pop
mov
movsb
das
lahf
fnstenv
jg
jnp
push
pop
dec
or
xor
rclb
icebp
xchg
xchg
aas
ljmp
push
scas
cwtl
icebp
js
into
mov
add
mov
xchg
xchg
or
dec
popa
lcall
push
cmpsl
mov
adc
ss
in
out
xchg
xchg
stos
or
cs
mov
hlt
ret
dec
scas
or
into
sub
sub
push
cmpsl
push
shr
mov
mov
insl
pop
cmp
scas
cwtl
loop
sahf
dec
aas
outsb
jmp
inc
outsl
dec
pop
cmp
cmp
shl
scas
or
pop
ret
sbb
call
push
xor
xchg
or
pop
cmc
sbb
sbb
shl
xor
mov
das
jno
cwtl
and
sti
push
jne
xchg
ds
in
outsl
or
cmp
mov
lcall
push
xor
mov
inc
ret
jmp
shll
movsb
pop
sbb
push
test
or
push
call
mov
pop
mov
int
mov
movsb
xorl
jbe
or
ror
stc
pop
sti
xchg
and
xchg
outsb
jmp
das
xor
pushf
sub
adc
movsl
jnp
lds
int
in
in
dec
test
in
ss
sub
leave
inc
fisubs
fiaddl
xchg
xor
ffree
mov
shlb
xor
cmp
shl
push
fstl
push
add
and
jge
in
aad
pop
and
popa
add
loopne
sbb
and
push
mov
icebp
pop
imul
sub
outsl
outsl
push
adc
dec
fcomp
cld
loop
daa
add
ds
mov
in
cltd
add
and
test
std
mov
idiv
push
push
outsb
mov
adc
inc
and
adc
xchg
or
dec
mov
cld
jns
sbb
or
push
hlt
sbb
mov
cwtl
mov
or
and
or
pusha
dec
fdivs
cld
xchg
ss
bound
sub
cmp
imul
and
pop
dec
cmp
mov
adc
mov
xchg
push
fistl
sub
ret
mov
arpl
es
mov
jge
popa
fdivrl
stos
sbb
fidivrl
push
shl
cwtl
cmp
into
hlt
or
mov
mov
xchg
pop
add
inc
fildl
or
mov
aad
add
frstor
movsb
jno
movsl
cmp
adc
add
and
push
js
minps
or
dec
pop
shlb
mov
mov
and
xor
sbb
mov
pop
and
bound
in
jge
sbb
inc
loop
inc
xor
ret
xchg
stc
push
mov
xor
push
dec
xchg
and
pop
and
loopne
sub
mov
xchg
jmp
mov
mov
add
aam
add
in
push
test
out
repz
and
cld
mov
push
test
leave
push
add
mov
lcall
inc
or
sbb
sub
mov
mov
lock
mov
mov
test
inc
adc
lods
jbe
dec
sbb
or
xchg
std
or
repnz
repz
clc
dec
inc
clc
mov
loop
adc
jno
js
bnd
lea
adcl
and
add
insl
sbb
or
pusha
push
loope
pop
dec
xor
mov
pusha
dec
fdivl
std
addr16
jb
xchg
addr16
cmp
or
adc
jge
je
and
xor
add
xor
or
clc
push
dec
std
aas
xor
jecxz
cmp
insb
aaa
push
loop
mov
xor
inc
inc
inc
and
lcall
inc
pop
fldl
fisttps
dec
push
xlat
add
push
daa
stos
fstpt
fsubrl
sbb
daa
add
xchg
sarb
imul
jecxz
cwtl
xchg
out
ret
pop
dec
out
push
pop
sub
pop
stos
sbb
xchg
lahf
aam
mov
mov
and
or
push
test
loopne
aas
mov
iret
les
jmp
xchg
in
ret
pop
mov
pop
cmpsl
shr
and
dec
cmc
cs
jae
fwait
shlb
cmpsl
sub
jmp
jmp
lret
int
ja
mov
ret
adc
sti
adc
sbb
or
divl
pop
cltd
ja
jne
pop
dec
add
add
ja
fcmovbe
mov
test
inc
mov
jnp
pop
mov
mov
rcl
push
push
int
mov
or
std
mov
xchg
fsubrl
and
inc
hlt
push
mov
push
dec
stc
and
xchg
mov
push
pop
cmp
inc
cmp
mov
daa
sbb
lret
out
ds
lret
jp
push
dec
jl
movsl
mov
pcmpeqd
push
xchg
dec
push
shlb
xchg
xchg
flds
imul
or
pop
in
sub
add
jg
sti
jo
sub
add
adc
jecxz
clc
xor
repnz
cmp
lcall
ds
pop
pop
cmp
std
push
add
fiaddl
dec
test
shll
sub
out
jne
imul
push
gs
fwait
movsl
xor
cmp
cltd
repz
add
cmpsl
sahf
negb
jno
push
cwtl
adc
sub
aad
pop
lret
test
testb
or
jae
and
or
and
out
pop
outsl
lods
jb
adc
cmp
push
jnp
sub
jecxz
sub
jge
mov
mov
inc
sbb
lahf
clc
xlat
sub
daa
rcll
xor
cmp
xor
bound
sahf
out
jb
dec
iret
or
fdivl
out
aam
aad
cld
ret
xorb
lods
sub
repz
mov
dec
mov
dec
test
jge
add
imul
data16
shrl
pop
lcall
mov
mov
mov
mov
mov
repnz
push
insl
pop
pop
xchg
adc
mov
add
push
int
mov
inc
fisubrl
pop
jns
adc
pop
push
into
shlb
push
cld
imul
sbb
int
and
in
add
stos
stos
mov
or
ret
dec
add
pop
rorl
jge
lret
ljmp
push
sbb
jbe
pop
in
out
sbb
dec
xor
aad
push
mov
pop
mov
sti
lret
js
aaa
sbb
or
xorl
fists
jae
notrack
adcl
push
mov
dec
dec
or
enter
ffreep
mov
jnp
cmc
sbb
and
filds
popa
shrb
cld
test
fucom
je
sarb
enter
ficompl
push
movsb
inc
add
fcmovnu
dec
pusha
push
mov
cmp
jge
add
dec
xchg
jb
fnstenv
push
sbb
sbb
in
imul
mov
aaa
pop
jecxz
pushf
repnz
xchg
mov
cmp
dec
xchg
mov
mov
negb
repz
or
xchg
fstpt
fimuls
mov
fidivs
sbb
xor
mov
jae
test
or
add
push
outsb
xor
popa
pop
movq
sbb
push
fsubr
iret
fidivl
xchg
lret
fisubrs
sti
lcall
ss
xor
push
stos
ds
push
jecxz
sbb
mov
out
jp
enter
test
or
inc
push
pusha
flds
adc
gs
dec
sarl
sarb
loope
xchg
cmp
pop
aam
pop
sbb
test
popa
cmc
fdiv
inc
lock
add
jo
add
sbb
lret
sbb
scas
add
jmp
jbe
imul
jecxz
adc
loope
cmp
add
imul
ja
lods
movsb
cs
stos
cld
sbb
movsl
popa
add
mov
loopne
dec
and
add
jno
sub
push
testb
aam
movsl
popa
pop
mov
mov
lahf
dec
popf
sub
sbb
add
jae
mov
les
icebp
ret
fsubl
dec
push
int3
sub
or
insb
cli
into
cmpsb
stos
lock
rcll
fcoml
dec
cmp
pop
repnz
and
imul
lods
test
dec
mov
inc
fiadds
daa
push
cmp
mov
inc
sbbb
pop
jle
mov
fsubrl
pusha
pop
scas
sbb
imull
jb
nop
ja,pn
fdivrs
sub
and
mov
jl
xorl
jno
scas
sbb
sahf
subl
add
negb
cmpl
pop
mov
stos
sbbl
rcl
sub
ljmp
pop
loop
adc
pop
sub
stos
shrb
in
stos
mov
lods
push
scas
jl
test
rorb
push
jle
push
ret
testb
hlt
leave
inc
ds
push
fstp
or
fwait
loope
mov
roll
dec
mov
js
inc
popf
bswap
jae
mov
push
lds
fnstenv
mov
fsubl
inc
fs
inc
sub
hlt
mov
add
mov
cld
adc
insl
sbb
adc
cwtl
inc
int
jge
mov
ljmp
out
test
sub
add
out
out
sbb
fdivrp
sub
test
addb
mov
test
add
loop
push
xchg
fsubr
adc
jmp
popf
mov
test
out
xor
jp
cmp
fldcw
sbb
enter
push
ror
push
mov
mov
jae
add
scas
std
xchg
popf
insb
imul
mov
or
in
iret
push
pop
pop
in
push
popf
pop
sbb
push
jno
pop
cmp
pop
dec
fucom
test
jmp
xchg
cmc
cmpsl
jo
out
cli
jbe
xor
shl
scas
lock
sbb
je
lret
and
jg
pop
mov
pop
dec
add
jns
popa
negl
push
into
lds
mov
jns
rorl
das
fcompp
sbb
test
nop
sbb
in
adc
mov
mov
sbb
insl
jo
adc
or
add
jp
data16
jno
jl
ret
mov
inc
or
sbb
mov
jmp
jmp
mov
push
ja
testl
jne
and
push
pop
mov
sub
add
fs
test
xor
ljmp
addl
fmuls
push
mov
aam
mov
pop
and
mov
inc
cli
mov
mov
jle
cwtl
scas
mov
cmp
js
pop
jecxz
aad
jns
or
mov
iret
pop
sbb
lret
stos
jmp
sbb
or
mov
clc
enter
xchg
push
jb
fnstenv
iret
inc
gs
lods
stos
loopne
add
sar
xchg
sub
inc
iret
js
negb
mov
jp
repnz
cli
jnp
fnstenv
in
push
lea
pop
ja
jle
pop
js
pop
pop
test
fldcw
popa
lea
inc
fcomps
dec
xor
bound
fiaddl
aam
js
imul
mov
jmp
loope
xlat
scas
int
inc
in
enter
push
push
cmp
flds
pop
cli
imul
pop
dec
push
insl
xchg
mov
imul
nop
pop
jle
idiv
sti
clc
mov
pop
divb
sub
call
jecxz
or
movsl
push
jbe
pop
in
in
sbb
stc
mov
cmp
inc
lock
add
pushl
xor
xor
or
lock
push
and
cs
fnstenv
jne
stos
and
sbb
movsb
inc
dec
in
mov
pusha
pushf
inc
jns
rcr
test
cmpsb
cmp
dec
mov
fcmovnu
fdivr
xor
or
push
xlat
or
fdivrs
add
fst
sbb
add
ds
mov
cmp
repnz
mov
sbb
ljmp
in
inc
and
xchg
add
and
stos
ljmp
push
add
or
adc
cmp
fildl
rep
push
dec
mov
push
xchg
xchg
sub
mov
call
mov
ror
jae
jo
sahf
mov
add
out
shll
cltd
lea
xchg
ds
mov
aas
dec
lret
test
jmp
aas
xchg
add
pop
and
dec
xchg
xchg
repz
insl
int
dec
ja
pop
out
dec
and
or
aaa
jne
aas
int3
test
aad
scas
push
bound
cwtl
and
or
dec
movsl
xor
popa
fldenv
scas
xchg
loop
cld
je
negb
js
sbb
shrb
arpl
push
or
sbb
mov
cwtl
jne
aas
and
in
xchg
mov
scas
into
xor
call
nop
pop
mov
and
push
inc
hlt
adc
insl
inc
cmp
and
pop
push
jno
loope
ljmp
fisttpl
scas
enter
jae
jae
mov
mov
pop
push
adc
push
out
dec
mov
pop
loopne
inc
mov
cli
xchg
orb
push
daa
mov
push
mov
adc
pop
mov
sbb
fdivrs
rorl
or
loope
repnz
mov
push
rcrl
fstpl
dec
addl
mov
adc
movsl
push
in
jno
andb
or
push
outsb
push
dec
shlb
aas
mov
out
jno
loop
neg
nop
cmp
inc
dec
jns
xor
xchg
iret
in
xor
xchg
xchg
cmp
fisttpl
inc
mov
out
hlt
jecxz
and
mov
lods
sub
jae
xchg
cmpsb
push
cwtl
aas
pop
or
out
push
or
jns
les
xchg
mov
cmp
mov
sbb
sti
or
dec
in
out
push
repnz
pop
testl
sbb
jo
sbb
enter
cmp
mov
xor
pop
movsl
sbb
adc
mov
dec
sti
call
mov
lea
or
dec
sub
or
xor
adc
jbe
test
mov
lret
adc
adc
out
cld
nop
xchg
fucomp
or
loope
mov
push
adc
push
sub
fwait
cs
sbb
les
mov
js
cld
scas
repnz
invd
dec
out
adc
lcall
lea
jecxz
adcl
arpl
mov
sarl
rorb
call
dec
std
sbb
loopne
xchg
push
dec
lcall
inc
test
xchg
mov
jmp
sbb
dec
loopne
and
lods
dec
cltd
jne
xchg
jbe
mov
cmp
icebp
aad
aaa
mov
bound
jl
dec
aas
push
sbb
cmp
xchg
xchg
cmp
call
inc
fldcw
dec
lods
or
daa
iret
lcall
loopne
push
lahf
and
push
das
push
sub
movsb
inc
jle
cld
jecxz
jne
cmpsl
xor
jmp
jne
ljmp
mov
adc
dec
xor
xchg
ja
or
cmpsl
cltd
lods
add
outsl
cmpsb
inc
fnstsw
cmp
or
inc
movsl
lahf
hlt
sbb
mov
xor
push
inc
xchg
mov
stos
pop
jg
push
aad
mov
fsubs
rcl
sub
fwait
jae
mov
push
mov
movl
mov
aaa
cmc
mov
pop
loop
arpl
xlat
jo
cmp
pop
int
sub
xor
adc
mov
inc
mov
fwait
jae
out
cmpsb
mov
mov
lods
xchg
jb
or
sbb
push
sbb
icebp
out
cmp
mov
inc
nop
lret
out
adc
or
lds
mov
mov
add
xchg
sub
mov
bound
cmp
stos
adc
and
fstpl
jecxz
pop
dec
cmpsb
js
dec
mov
outsb
xchg
adc
cmp
xlat
inc
pop
xchg
das
sbb
mov
cmpsl
xchg
mov
roll
jecxz
xlat
push
adc
jne
adc
lret
lods
or
xchg
pop
jl
push
imul
inc
out
pop
push
test
push
loope
das
lds
add
add
enter
sub
sti
rcl
ljmp
mov
dec
enter
push
mov
mov
and
or
cmc
insl
and
jg
repnz
xchg
icebp
sbb
and
pop
inc
push
mull
jo
inc
out
cmpsl
outsl
cli
add
sub
ret
cmp
jmp
push
int
cmp
jno
aad
icebp
loop
in
cs
arpl
and
in
ds
xchg
js
lods
mov
enter
and
cmc
ficomps
sbb
and
mov
cld
incl
jno
sbb
add
add
adc
sub
repz
pop
lds
jecxz
lcall
cmc
pusha
fs
iret
pop
jecxz
xlat
or
gs
jp
inc
pop
pushf
sub
int
loopne
mov
test
push
sub
xchg
mov
ljmp
insb
fs
into
popa
jbe
mov
inc
shll
xchg
xchg
adc
sarb
lea
mov
pop
data16
shl
jle
add
jb
pop
push
in
adc
add
ljmp
adc
pop
movsb
dec
and
ja
pop
cmp
jb
stc
add
inc
dec
mov
jecxz
ljmp
dec
xchg
jnp
cmp
push
and
aaa
in
rcl
push
scas
or
and
inc
sbb
cmp
pop
fcoms
ret
lret
dec
jbe
xchg
jp
ss
jle
cmp
cmp
rorb
lea
test
loop
push
loope
js
push
adc
popf
jmp
inc
cld
and
test
stos
push
xchg
sbb
cwtl
psraw
pop
aas
cmpsl
mov
sbb
jb
out
or
in
adc
popf
fidivs
movsb
mov
or
push
pop
bound
std
mov
arpl
cltd
sbb
sub
sub
ja
dec
sar
xchg
mov
mov
mov
or
sbb
ret
push
clc
adc
out
ja
cmp
mov
dec
addb
xor
sbb
push
cli
test
xchg
stc
pop
cmc
dec
xor
jne
fsubs
mov
mov
ja
sub
daa
enter
testb
cmpsl
int3
dec
xchg
mov
test
mov
fs
adc
ljmp
rorb
into
stos
sarl
data16
sub
jl
jnp
sbb
cld
or
push
das
xchg
pop
dec
dec
pop
xchg
and
mov
pop
leave
loop
mov
std
xor
addr16
pop
xor
push
mov
mov
cmpsl
push
mov
inc
mov
mov
sbb
insl
cmp
test
jns
aam
aad
shrb
sbb
and
mov
mov
mov
dec
sbb
jo
mov
data16
xchg
fsincos
xlat
cld
inc
fisttpl
xor
pop
ss
mov
fiadds
pop
in
fs
test
or
pushf
arpl
inc
stos
or
fwait
rcrb
push
ret
test
shlb
xchg
jp
and
lock
vmread
fnstenv
dec
xchg
fwait
mov
jno
stos
adc
mov
imul
xchg
pop
sbb
jmp
inc
pop
inc
mov
clc
nop
jl
fildl
movsl
mov
fsubrl
stc
rclb
ret
rorb
ret
imul
mov
or
pop
xor
out
jmp
pop
adcb
stos
mov
iret
jnp
stc
cli
idivb
push
cwtl
xchg
je
push
or
ret
mov
push
or
loope
ret
out
aam
mov
stc
sbb
cmp
std
test
flds
in
push
sub
lds
push
in
cmp
mov
lahf
jno
cmp
push
in
insb
mov
movsl
mov
je
xchg
xchg
ret
dec
cmp
aam
shll
inc
adc
cmp
push
loopne
popf
stos
xchg
cmp
mov
push
mov
clc
adc
aad
xchg
popf
add
and
jns
push
frstor
mov
mov
cli
popa
mov
imul
xchg
mov
leave
fdiv
cmp
sub
std
inc
cltd
divl
in
push
insl
mov
popa
in
mov
mov
xchg
push
dec
sbb
mov
lcall
xchg
fists
rcrb
in
adc
mov
repz
cwtl
inc
clc
mov
or
sub
ljmp
xchg
lods
push
push
dec
mov
xchg
addl
xchg
pop
adc
lcall
push
mov
mov
pop
cwtl
movsb
jno
inc
fdivrl
std
imul
jo
xlat
outsb
sub
in
push
pop
int3
ss
dec
push
mov
loopne
push
mov
mov
fnstsw
call
leave
push
lods
push
push
xor
aas
outsl
scas
mov
std
and
or
cmp
add
push
mov
sub
dec
adc
mov
add
push
mov
in
mov
in
mov
or
test
pop
iret
sub
pop
xor
stos
and
sbb
xchg
xor
mov
int
jp
and
fs
xchg
lret
jmp
scas
shll
test
cmp
cld
dec
and
lods
loop
mov
dec
xchg
out
mov
add
dec
add
mov
push
and
dec
dec
inc
cmp
cli
add
mov
mov
decl
scas
je
dec
xor
test
int3
and
fnstsw
add
jecxz
test
cmpsl
mov
sbb
pusha
pop
xor
mov
ja
cli
stos
lret
jg
jl
mov
bound
out
cmp
sbb
mov
in
shrl
lds
and
std
xor
pop
aad
pop
or
repnz
mov
push
sbb
and
mov
fistpll
scas
cmp
dec
mov
xlat
movsl
shlb
aam
movsl
into
loope
jl
mov
sub
fsubl
and
aam
daa
pop
mov
leave
in
push
sbb
lahf
cs
xchg
test
sbb
and
push
ret
xchg
sahf
and
popa
mov
daa
aas
jns
xchg
mov
xchg
dec
ss
ret
imul
pop
xchg
aaa
lret
mov
xor
sbb
pop
adc
bound
fwait
push
gs
dec
sbb
cmp
sti
bound
xor
std
and
pop
das
or
mov
fwait
lock
xchg
cwtl
pop
mov
jle
mov
insl
insl
jbe
aaa
mov
jno
clc
mov
popa
imul
lret
cmpsl
inc
push
stos
push
sbb
adc
add
adc
lret
lds
in
add
add
lahf
les
xlat
nop
mov
mov
rorl
fidivs
mov
ds
adc
scas
pushf
and
adc
arpl
test
scas
pop
inc
jle
jl
pop
xlat
push
sub
mov
arpl
das
mov
cli
push
push
outsb
inc
xlat
or
in
xor
pop
push
or
fs
or
add
fiaddl
sub
push
and
lret
jne
sub
popa
mov
clc
sbb
fiadds
push
dec
cs
sbb
iret
lds
movsl
sbb
in
inc
enter
jg
mov
ds
scas
mov
repnz
lret
gs
xchg
push
adc
in
cltd
clc
cltd
sub
les
imulb
aaa
stos
ja
packssdw
xchg
cltd
add
les
push
imulb
mov
ss
adc
mov
cwtl
sbb
incb
out
mov
jns
jnp
xchg
mov
mov
outsb
pop
je
adcl
loop
inc
in
and
sarb
mov
clc
out
xchg
es
jbe
test
adc
sub
pop
mov
push
fistps
hlt
outsl
cltd
xchg
jae
xlat
add
and
sub
ja
test
adc
ficompl
aad
or
or
rol
mov
inc
cltd
mov
sub
jbe
in
add
out
popa
inc
jl
push
push
xor
xorb
jne
or
jno
lea
pop
and
xor
int3
sti
sbb
rcll
mov
dec
or
mov
insb
outsl
repnz
loope
xor
mov
in
mov
insl
xchg
daa
nop
xor
sub
daa
loopne
lock
scas
pop
jmp
test
das
inc
lahf
in
roll
jo
jle
arpl
sub
lock
pop
jne
push
mov
cmp
cmp
loop
loope
je
outsl
int3
mov
movsb
cld
pop
lahf
adc
sub
lods
ljmp
ja
or
or
xchg
cmp
stos
cmp
clc
cmp
jecxz
inc
mov
mov
gs
cmp
adcb
sub
or
stc
push
mov
adc
sbb
punpcklwd
out
mov
js
movsl
or
sarb
cli
sub
insb
stc
ret
in
ss
xchg
pop
push
push
inc
or
outsl
test
out
in
sub
pop
subl
adc
jl
mov
shlb
cltd
cltd
mov
mov
push
ds
cmp
test
bnd
stc
pop
push
pop
fisubl
dec
sub
xor
mov
push
sahf
pop
cmpsb
jb
fldl
pushf
mov
rcrb
repz
popa
add
mov
mov
sahf
shlb
mov
decb
loope
cmp
sbb
call
lods
pop
sti
mov
pop
or
enter
cmp
hlt
iret
decb
rol
inc
or
mov
add
lret
cmp
cmp
into
add
mov
or
pop
add
clc
adc
ret
fs
scas
and
sbb
cmp
jp
aad
jns
lret
push
cmp
loope
test
ds
or
inc
dec
xchg
scas
addr16
jmp
jp
lods
out
imul
inc
sub
pop
sub
dec
pushf
repnz
pop
cli
stos
sbb
fisubs
sbb
sub
jns
mov
jnp
and
and
in
xchg
fldl
xchg
loop
push
addr16
xchg
xlat
jne
sub
js
jge
pop
lcall
push
xchg
cmp
pop
stos
std
repz
xchg
fs
mov
push
mov
dec
jmp
or
mov
cwtl
jecxz
mov
mov
mov
xchg
addr16
in
inc
adc
lods
adc
ret
daa
mov
test
adc
mov
sub
js
push
js
pop
enter
or
call
xchg
push
ret
mov
lods
xor
notb
mov
jno
in
inc
test
adc
test
aas
out
mov
test
xchg
popf
jge
cli
stos
or
and
mov
lods
fdivrl
jnp
jl
sahf
lods
inc
loop
jmp
iret
sub
or
inc
call
mov
ret
leave
pop
call
fisttpl
xor
xor
aad
mov
mov
adc
cwtl
mov
jmp
xchg
fadds
arpl
xchg
mov
call
mov
in
cmpsb
inc
mov
jno
jo
rorl
jecxz
lea
inc
or
mov
fidivs
enter
stos
push
cmp
jmp
lcall
out
fisubrl
fsubl
push
dec
out
repz
shrl
into
mov
mov
pop
push
and
and
cld
and
mov
jb
add
ja
leave
sbb
rorl
insb
mov
xchg
and
outsb
and
mov
in
pop
stc
bound
sub
xchg
or
aam
cs
mov
pusha
cmp
daa
lods
lds
xchg
out
lods
adc
jnp
int
outsb
sbb
push
mov
cli
imul
leave
lea
ret
mov
sub
in
pop
sahf
aad
push
lds
cmp
stos
in
insb
mov
lcall
push
jo
and
or
sbb
lcall
ss
jae
andl
mov
inc
inc
mov
jp
dec
sbb
addr16
cmpl
push
sbb
sub
xchg
pop
jae
mov
pushf
inc
push
mov
testl
xor
sbb
jecxz
add
add
and
sub
adc
adc
and
iret
cwtl
xor
repz
mov
out
sub
xchg
push
lds
cmp
sub
mov
repnz
mov
cmc
pop
inc
mov
cmp
xor
pop
mov
gs
push
sti
cwtl
or
sub
movsb
pop
xchg
sbb
fsubs
sub
xor
fsubrl
mov
push
inc
ror
or
adc
lods
lret
push
add
or
lcall
cmp
dec
pop
push
in
shll
push
push
fsts
mov
cmp
repnz
loopne
mov
and
cmp
xor
je
dec
mov
in
daa
push
dec
cmp
or
lock
jg,pt
inc
and
push
push
aas
in
fs
mov
cmpsl
cmpsb
lds
outsb
mov
sbb
xlat
xchg
rcrl
dec
idivb
dec
mov
orb
stos
push
les
push
dec
dec
sub
cmp
fistpl
mov
aaa
data16
sub
sub
test
xor
dec
addr16
fwait
push
add
xor
loop
out
test
scas
xor
and
jp
jmp
sbb
repnz
popl
sub
insb
bound
inc
stc
lds
or
inc
mov
into
inc
jo
gs
and
inc
icebp
lds
stc
pushf
push
pop
iret
int
pop
mov
jo
jns
inc
jle
out
imul
leave
or
cmp
pop
inc
fldl
push
mov
mov
popf
xor
loope
lret
cmpsl
les
subl
adc
int
lret
sti
pop
lds
sbbl
sahf
mov
jle
cmp
mov
or
sub
xor
outsl
mov
fdivrl
and
cmp
add
jge
or
adc
aad
or
int
push
dec
je
js
jle
sub
aaa
mov
outsb
fnstsw
cmpsb
mov
mov
and
shll
movl
fldl
push
push
add
jmp
test
mov
sbb
xor
push
iret
pop
jb
push
add
jbe
loope
icebp
int
add
cmpsb
rorb
sarl
outsb
inc
inc
adc
mov
xor
in
xchg
imul
cs
jns
ljmp
cmpsl
insb
in
dec
shll
mov
sbbb
popf
leave
inc
pop
out
fistpl
dec
into
shll
daa
in
xor
int
jns
fwait
repnz
lea
sub
lods
test
push
gs
sub
push
adc
xchg
repz
dec
xchg
nop
iret
jnp
in
add
adc
or
cld
sub
or
fs
data16
out
mov
ljmp
sar
sub
addr16
sbb
pop
shlb
push
mov
push
cmp
pop
shrl
push
cmp
xor
mov
test
pop
mov
pop
test
dec
shl
or
pop
pop
shlb
xor
es
lock
fnsave
cld
mov
aas
or
ljmp
add
pop
ljmp
test
jg
pop
ret
imulb
jne
leave
jno
sub
sub
push
test
call
mov
mov
sub
mov
inc
xchg
dec
cli
or
mov
das
cwtl
mov
fsts
pslld
pop
js
int
dec
out
js
outsb
loope
push
call
cmc
pop
mov
das
dec
dec
fisubrl
xor
push
and
add
cld
lock
add
mov
push
das
mov
cmp
imul
pushf
dec
cmpsl
mov
cmp
and
add
cmc
and
add
sbb
cld
lea
and
xchg
and
sarb
adc
aaa
adc
or
scas
push
loopne
ss
xchg
xchg
mulb
cmp
fildll
inc
outsb
mov
insl
leave
adc
xchg
pop
sbb
test
pusha
add
pushf
xor
push
inc
add
jno
adc
sbb
mov
jg
roll
and
pshufw
cmc
mov
and
push
jmp
mov
mov
arpl
mov
out
add
and
push
stos
ja
btc
xor
int
add
dec
cltd
dec
ja
ret
jno
lods
add
inc
pop
or
cmpsb
adc
jno
enter
push
cmp
outsl
adc
das
sub
loopne
ljmp
aaa
test
push
pop
push
add
sub
mov
xchg
out
lret
shrb
and
cmpsl
std
xchg
pop
std
and
sub
sbb
insl
inc
sbb
jns
cmp
dec
sub
sahf
sub
fsubs
out
dec
xlat
aad
addr16
mov
sbb
hlt
adc
cmp
pusha
xchg
dec
mov
popf
repnz
mov
dec
adc
push
aaa
add
mov
daa
adc
out
lods
int
cmp
popa
inc
mov
cwtl
xor
out
lods
lret
repnz
fists
pop
xchg
pusha
out
js
cmp
push
das
and
mov
inc
jnp
xchg
xchg
repz
push
fcompl
mov
pop
push
pop
sbb
lods
jbe
jl
adc
jbe
lods
mov
xorl
and
jl
mov
jns
inc
push
jbe
lds
xchg
pop
cmp
inc
data16
push
in
cwtl
popa
addl
int3
fbld
push
loop
js
ss
andb
fstpt
xchg
ret
and
aad
fcompl
cmp
incb
pop
dec
mov
xchg
sarl
and
or
idivb
mov
addr16
test
stos
and
inc
pop
out
loop
dec
mov
stos
push
pop
mov
mov
in
ljmp
dec
push
outsl
test
ja
push
test
or
xchg
imul
lahf
pop
jmp
enter
cld
dec
dec
data16
stos
pop
jmp
test
jb
stos
pop
adc
gs
pop
xor
sbb
jno
xor
cmp
popf
cltd
pop
fldl
mov
lcall
adc
push
push
aaa
xchg
or
lea
push
mov
jbe
stc
or
sub
mov
inc
dec
in
fsubrl
fsubs
aaa
push
adc
pop
push
in
stos
rol
cli
movsl
pop
push
inc
or
std
out
and
jns
cli
sub
pop
nop
push
mov
add
adc
into
sub
mov
xchg
fisubs
out
cmp
jno
sarl
adc
mov
xor
in
rorl
jle
insb
jnp
leave
mov
adc
add
out
sarb
and
inc
in
or
pop
out
sbb
test
icebp
outsb
mov
xchg
jno
push
mov
xor
data16
inc
xor
cmp
aad
pusha
outsb
cltd
cmpsb
cmp
pop
les
or
sbb
aaa
xchg
popf
pushf
or
sti
fcmovnu
in
dec
std
icebp
nop
inc
clc
bound
sbb
es
test
jns
addr16
jne
push
lods
in
sub
or
pop
or
fwait
popa
adc
xchg
cwtl
sbb
scas
or
loopne
jb
lcall
outsb
andb
xchg
aam
cli
fldenvs
out
add
popf
cmp
cmc
mov
icebp
and
fwait
push
ja
inc
test
sub
push
rclb
lret
and
enter
int3
xchg
jb
fwait
pop
add
aaa
mov
imul
cmp
int
xorl
cmp
out
pop
fsts
inc
jg
shrl
mov
sbb
xor
int3
out
in
xor
xchg
cmpsl
stos
pop
inc
fisttps
js
aad
js
push
fsubs
leave
add
push
sbb
mov
jp
jge
and
sub
pop
cmpsl
lods
push
sub
sahf
imul
daa
or
add
push
nop
xchg
ja
ljmp
or
or
lock
pop
adc
aad
outsb
pop
and
arpl
pop
or
shl
pusha
dec
mov
mov
push
xchg
sub
sub
les
mov
push
sub
mov
out
xchg
stc
or
mov
clc
mov
bound
aas
aaa
out
mov
adc
xor
lods
mov
inc
lea
add
ljmp
jg
leave
jle
pop
mov
jecxz
dec
xchg
cmp
sbb
add
and
xor
call
add
fimuls
mov
jg
iret
cmp
xor
xlat
inc
fldt
insb
jp
std
jmp
pop
ja
add
test
jp
test
jecxz
movsl
aam
pop
jae
mov
push
dec
lea
xchg
jecxz
cmp
hlt
mov
inc
fistpl
pop
add
outsb
mov
push
sbb
cmp
push
jno
stos
stc
dec
nop
in
pop
scas
xchg
and
or
hlt
cmp
mov
adc
sub
jp
les
push
es
ret
mov
mov
out
testl
pop
loop
call
mov
dec
pop
lods
dec
dec
xchg
cwtl
and
mov
xor
into
negb
hlt
cmp
and
fisubrs
sub
pop
xchg
pushf
push
sti
addr16
cld
adc
cmc
sbb
sti
lret
iret
adc
mov
pop
mov
sbb
in
or
mov
push
xchg
add
jo
jmp
cmp
loopne
roll
out
cmp
mov
lret
lret
pcmpeqw
pop
stos
mov
and
mov
push
mov
xchg
adcb
neg
in
push
pop
xor
outsb
xchg
lds
cld
stos
adc
insb
xchg
add
or
push
sub
sti
mov
adc
or
clc
jp
sti
sbb
xchg
xchg
xor
decb
shlb
xchg
adc
add
sub
cld
ds
xchg
dec
sub
xchg
adc
das
fsubr
imul
ret
sub
mov
test
out
fwait
pop
hlt
dec
pop
rcll
push
int3
xchg
push
testb
mov
or
outsl
je
push
outsl
dec
adc
xor
cmp
jno
call
jmp
mov
and
loop
xor
push
dec
fcmovb
repz
loope
push
clc
push
lea
rorb
test
mov
add
sbb
loopne,pt
cli
mov
fisttpl
push
push
sub
ret
pop
lahf
inc
xchg
dec
push
lods
mov
and
cld
mull
arpl
pop
pop
cwtl
js
loope
minps
call
pushf
mov
push
testb
cmc
dec
push
icebp
test
dec
jle
ljmp
mov
jp
out
std
and
push
add
sbb
or
movsl
addr16
cmp
jbe
lds
lcall
and
and
jl
iret
shrb
mov
cmc
gs
pushf
and
lcall
jno
fmull
sbb
add
stos
adc
pusha
xor
mov
lock
jbe
lods
imulb
xchg
inc
adc
ja
loopne
mov
pop
movsb
and
jno
xchg
inc
rorl
mov
add
xchg
cltd
mov
sub
push
cmp
or
mov
mov
mov
cmp
inc
adc
xor
pusha
add
lret
pop
sbb
jmp
mov
dec
xchg
pop
in
gs
pushw
dec
jno
or
lret
jbe
pop
in
sub
and
decb
xor
imul
add
add
adc
inc
sub
rorb
cld
push
xchg
stc
sbb
out
out
clc
insb
pop
pop
mov
idivl
pop
stos
push
fidivl
jg
mov
std
jp
fwait
jecxz
int3
xor
mov
pop
jmp
mov
lock
test
cmpsb
out
push
xchg
or
jge
sub
mov
add
xchg
jmp
cmpsl
adc
mov
insl
shll
int
push
add
mov
mov
xchg
mov
push
arpl
mov
pop
inc
andb
cmpsl
mov
cmp
sub
push
call
punpckldq
movsl
jnp
pop
sub
xor
pop
inc
push
fsts
pop
sub
dec
mov
hlt
mov
push
into
xor
enter
fnstcw
or
xor
popa
add
xlat
jge
das
add
pushf
notl
or
inc
push
push
jg
insl
sbbl
mov
jle
ret
test
pop
or
inc
or
cmp
cmp
mov
in
movsb
es
mov
fistps
dec
stc
jns
or
sbb
or
lret
pop
mov
pop
mov
mov
cmp
xchg
xchg
rcrb
xchg
add
mov
pusha
sub
dec
xlat
adc
stos
pop
stos
add
or
mov
hlt
push
aam
idivl
push
mov
or
sub
pop
mov
loope
loop
mov
push
mov
pop
mov
xor
mov
pop
xchg
inc
ret
add
loopne
and
arpl
push
loop
inc
sti
orl
and
pop
in
mov
fwait
add
adc
enter
nop
ret
fistpl
cli
icebp
inc
into
xor
sbb
xchg
shrb
outsl
sub
mov
cmp
fnstsw
sub
movsb
icebp
jl
jmp
mov
std
lahf
repnz
mov
inc
out
or
dec
lea
leave
loop
stos
push
lcall
repnz
outsb
mov
cli
rorb
imul
arpl
and
in
lcall
adc
and
addr16
shlb
pop
lea
inc
fs
jle
mov
popf
ja
int
jmp
inc
ficomps
dec
inc
or
out
mov
add
mov
sub
adc
stos
iret
sub
push
xor
mov
inc
xchg
insl
push
lock
je
mov
cmpsb
dec
mov
imul
pop
imul
nop
add
pusha
jbe
rcrb
push
je
fldl
lret
pusha
and
jge
push
mov
sub
out
pop
xchg
sbbl
and
outsb
cmp
sahf
leave
inc
aaa
mov
rcll
insl
jnp
cld
bound
push
pop
leave
mov
push
and
adc
repnz
mov
movl
xor
push
xor
loope
test
sub
daa
add
mov
nop
int3
pop
sbb
pop
mov
mov
mov
out
dec
add
mov
jae
xor
std
ljmp
mov
lcall
jg
je
xor
inc
fidivs
xor
leave
pop
cs
out
fwait
lods
mov
pushl
movsb
adc
aas
ljmp
outsl
loop
sahf
fnsave
cmp
mov
mov
pop
fnsave
hlt
imull
outsl
fisttps
pop
lret
test
or
hlt
aam
adc
inc
dec
mov
cmp
out
lcall
push
mov
lret
mov
jl
mov
movl
dec
and
dec
pushf
push
in
add
sbb
dec
mov
sub
stc
imul
jbe
dec
cmp
cmp
cwtl
std
divl
mov
imul
push
stc
sarl
fstpt
out
cltd
sub
movsl
filds
out
jecxz
mov
adcb
jo
xchg
sbb
outsl
inc
stos
cmp
in
lret
cs
adc
mov
mov
stc
out
adc
add
mov
js
idiv
cmp
movb
mov
and
int3
fidivrl
xor
lds
jno
inc
jne
and
lret
dec
addl
adc
ficomps
clc
scas
int
popl
nop
cwtl
lods
leave
xchg
nop
jo
mov
inc
xchg
in
pop
dec
pop
jns
inc
and
popf
stc
mov
mov
cmp
or
arpl
add
imul
mov
lock
fnstenv
inc
pop
lods
xchg
mov
mov
jae
jmp
sbb
je
push
mov
or
imul
shr
sbb
mov
pushl
xlat
test
sub
loopne
inc
fcmovbe
pop
sbb
rol
dec
push
add
cmp
lock
fs
dec
movsb
mov
mov
push
xor
into
fisubrl
aad
sub
insb
push
loope
mov
mov
mov
movsb
xchg
xchg
add
and
pop
repz
loope
adc
jp
sub
sub
test
cltd
sbb
sbb
dec
jecxz
jmp
jg
and
push
mov
pop
pop
sub
pop
push
mov
pop
sbb
lret
dec
ljmp
int
sub
cmp
jnp,pt
fs
fldcw
add
cmpsl
mov
jge
mov
das
addl
lock
cmp
jo
loope
popa
sub
mov
loop
mov
in
jae
insl
icebp
adc
dec
lock
inc
add
add
pop
in
dec
cmp
dec
sbb
xor
cmp
setp
jno
xchg
dec
scas
scas
sbb
push
sbb
mov
xchg
stc
test
push
sub
dec
dec
mov
jb
cmp
and
iret
jno
outsb
sub
lods
arpl
jp
repnz
negb
pushl
sarl
fcoml
test
sbb
mov
xor
aad
clc
mov
dec
in
add
loop
add
add
imul
mov
xchg
inc
mov
pop
mov
lahf
int3
xchg
dec
ja
push
enter
testl
aaa
enter
daa
or
mov
mov
pop
test
sbb
popf
sub
add
cwtl
sub
inc
fidivl
popf
cmp
lea
xchg
xorl
and
dec
into
addr16
mov
xlat
rorb
jmp
push
rorb
push
imul
shrl
fnstsw
out
test
mov
out
jno
sub
push
std
mov
in
in
test
insb
sbb
add
and
pushf
sar
mov
dec
inc
lret
fmull
dec
movb
inc
jge
cmp
pop
mov
inc
xchg
lahf
and
js
push
sub
jge
cmp
mov
imul
int
test
xor
jecxz
aam
es
mov
gs
fcoml
push
dec
jns
test
push
imul
pusha
inc
imul
cltd
sub
ljmp
push
sub
popa
push
inc
adc
cli
jl
xor
out
nop
push
mov
divb
in
in
ljmp
mov
aam
stc
insl
add
xchg
cmovns
xchg
sub
out
dec
or
mov
or
push
das
and
mov
mov
sbb
div
sub
out
test
xor
out
popa
adc
ret
sub
inc
call
out
xlat
pop
mov
shlb
jns
negl
test
es
xchg
test
sbb
pop
shrl
mov
mull
orb
mov
dec
mov
js
push
scas
jns
sbb
or
popf
mov
dec
dec
add
inc
stc
pop
or
ret
aaa
daa
adc
mov
int
jb
jnp
push
mov
and
jp
cmp
fdivl
decl
test
mov
rclb
pop
lock
fmull
mov
and
adc
ret
push
dec
mov
outsl
scas
xlat
test
insl
push
scas
ret
aaa
vpshufhw
das
xchg
aas
addb
and
in
jmp
icebp
fisttpll
ret
jge
and
mov
xor
jo
mov
dec
add
sbb
cmpsl
lods
divb
push
aad
repnz
int
fsubrl
xchg
out
or
push
sahf
addb
sub
or
subb
dec
add
lds
dec
aaa
sti
lret
lea
fcoml
xchg
jo
js
pop
push
jl
out
inc
xchg
cld
lret
push
data16
lcall
pop
push
subb
or
std
add
outsb
cmc
sbb
cltd
sbb
xchg
cwtl
dec
mov
nop
and
sbbl
insl
cmp
push
dec
lods
daa
test
outsl
xor
sbb
dec
loopne
jnp
xor
push
add
xchg
ljmp
iret
push
inc
xchg
or
ss
imul
loopne
push
add
jg
pop
int
test
and
jmp
mov
ja
push
pop
lea
mov
xchg
add
cli
mov
movsl
mov
out
inc
stos
add
scas
push
mov
cltd
add
cmc
cmp
in
pop
test
pop
pop
cmpsb
xchg
mov
lods
les
and
or
jl
pop
cwtl
push
cwtl
adc
inc
xchg
hlt
in
cltd
rolb
xchg
fnstenv
fcmovbe
fdiv
mov
cmpsb
test
jmp
sbb
cmp
jb
mov
repnz
dec
pop
sub
cltd
mov
or
aam
mov
add
scas
add
cmpl
sub
dec
outsl
lea
and
dec
daa
in
repz
icebp
bound
ret
xlat
jo
ret
sbb
rolb
imul
jae
cmpsb
test
repz
leave
imul
push
push
scas
fcmovnu
ret
inc
int
imul
cmp
and
test
and
mov
movsl
push
jne
cmp
xor
dec
pop
call
mov
lret
jle
out
jnp
jbe
inc
out
mov
mov
push
pop
dec
shrl
ret
xchg
cmp
loope
pop
push
or
and
mov
aam
jnp
lcall
adc
ljmp
scas
cmp
dec
mov
repz
xlat
fs
icebp
mov
jb
mov
movsb
sbb
or
mov
fcomip
or
xor
mov
inc
repz
xchg
aam
inc
scas
dec
pop
bound
int3
mov
fsubrl
dec
les
out
in
repnz
out
clc
js
into
mov
mov
shll
aam
mov
xor
jecxz
mov
dec
and
adc
ja
sub
push
lds
or
pusha
shrl
pop
test
mov
cmp
xchg
push
into
adcl
int3
popa
imul
leave
jbe
xor
pop
test
out
mov
add
pop
add
into
or
push
xor
test
sub
out
pop
push
cmp
and
inc
fucom
adc
hlt
pop
or
dec
mul
mov
insb
in
int
adc
push
sbb
rorl
mov
push
xor
or
sub
add
movsb
pushf
xchg
mov
dec
inc
xchg
cltd
dec
jae
das
std
adc
lods
sub
push
imul
les
jae
stc
imul
aam
test
call
pop
js
test
aam
dec
sbb
mov
mov
and
ljmp
fsubr
inc
daa
mov
mov
pushf
jecxz
dec
jp
mov
push
aaa
nop
sahf
adc
addb
daa
push
sbb
mov
outsb
clc
mov
hlt
sub
subl
jbe
subl
sub
mov
sbb
mov
into
loopne
addr16
add
in
add
lds
pop
out
xchg
mov
loopne
dec
sbb
cmp
andb
stos
cs
mov
cli
shlb
adc
sub
sub
nop
bound
sar
add
sub
mov
add
dec
insl
sub
xlat
mov
dec
cmp
stc
sahf
sti
repnz
push
lock
mov
inc
lds
mov
stos
push
sub
add
fisttps
mov
jmp
fildll
push
xchg
xchg
mov
xchg
popa
cmc
inc
xchg
loop
dec
ja
test
mov
enter
and
orl
jg
loope
out
cld
xchg
push
in
mov
mov
add
push
add
add
nop
sub
adc
notb
lcall
adc
adc
mov
cmpsl
js
leave
cmc
xorl
mov
mov
and
das
mov
xchg
in
jmp
lret
jbe
mov
repz
inc
adc
inc
pusha
cmp
inc
mov
rorl
mov
mov
rcrl
mov
push
sti
movsb
test
xlat
mov
mov
pushf
sbb
pop
inc
add
lods
xchg
gs
jno
rorl
xor
cmpsl
add
mov
inc
out
xor
notb
dec
cmp
or
mov
popf
jecxz
and
or
jle
xchg
psubd
idivb
and
ds
xchg
dec
fcmovbe
jae
or
pop
fbld
icebp
in
daa
mov
mov
mov
mov
mov
xor
stc
jno
bound
push
or
jns
mov
add
aad
cmp
inc
pop
gs
les
outsb
mov
xor
repnz
outsl
loop
nop
scas
cltd
dec
repnz
ja
rcrl
jp
outsl
xor
xchg
xchg
inc
jg
mov
pop
push
sbb
jmp
rorl
lcall
jmp
leave
addr16
cmp
cmc
loopne
fs
daa
pop
mov
popf
push
xor
rcrl
jmp
mov
loope
imul
and
dec
into
mov
sbb
dec
xchg
loope
inc
push
mov
nop
mov
xchg
mov
and
dec
inc
mov
shlb
std
fidivs
in
jl
sbb
hlt
gs
jecxz
out
dec
xchg
fstl
fists
pop
andb
cmp
mov
jmp
push
fsubl
xor
cmpsl
add
push
jecxz
in
or
add
iret
dec
lahf
ret
xor
mov
out
repnz
imul
fisttpll
pop
movsl
fdivr
xchg
sbb
dec
fucomi
adc
rcll
ljmp
fidivrs
jnp
bound
fwait
add
jp
push
xor
add
jbe
mov
push
popa
stos
or
cltd
push
lock
subb
dec
pop
xor
ret
cmp
inc
or
pop
pop
cltd
cltd
mov
mov
fcmovb
push
pop
pop
or
inc
push
pop
ficoml
les
sbb
xor
dec
jecxz
ficoms
test
lret
sbb
xor
mov
div
sti
or
inc
cmc
adc
adc
mov
push
and
imul
mov
jbe
pop
scas
scas
jge
es
ja
js
or
inc
xchg
cwtl
popa
adc
fisttpll
lea
mov
fucom
add
sar
pop
stos
mov
cs
or
or
mov
adc
jo
jo
les
pusha
clc
ja
lret
int
cmp
adc
fstps
sbb
fldcw
pop
pop
xchg
arpl
fs
ret
xchg
jo
loope
ss
mov
pop
fistpl
decl
xchg
add
inc
or
sub
mov
add
and
xchg
scas
inc
cmp
or
clc
sub
jecxz
test
cs
loop
mov
lock
lcall
or
fldcw
repz
or
pop
jno
adc
mov
adc
xchg
dec
or
stos
arpl
add
popl
cmpsb
add
dec
int3
movsb
mov
or
pop
dec
popf
mov
stos
inc
sarl
mov
adc
jne
jbe
pop
pop
or
xchg
out
test
push
lods
roll
inc
faddl
leave
ror
loop
pop
mov
or
mov
es
fsubs
movsb
rcrb
out
add
loope
jl
ss
cmp
cmpsl
mov
xchg
icebp
fimuls
rolb
lock
push
cmc
test
inc
pusha
xchg
jle
jnp
mov
jl
lahf
xlat
xor
sahf
mov
pop
dec
or
icebp
sub
cwtl
repnz
adc
adc
cmp
enter
movsl
cltd
insl
and
popf
xchg
xor
push
lds
cmp
fcoms
inc
inc
sti
sub
mov
xor
and
iret
fnstcw
shr
push
ljmp
into
call
dec
sub
rorb
dec
insb
in
call
or
cmp
stos
xor
cwtl
or
lcall
xor
pusha
mov
test
insl
mov
add
cld
push
stos
ja
out
iret
popa
imul
lock
loope
mov
pop
fldl2e
inc
fists
ret
cmp
inc
clc
pop
outsb
inc
mov
mov
cmpsb
pop
pop
mov
sti
test
mov
and
cwtl
scas
iret
push
or
cmpb
cmp
lret
xor
sub
push
mov
cmp
loopne
xor
pop
das
xchg
sub
jecxz
loop
xchg
dec
push
scas
addl
js
xor
fisttpl
aaa
out
mov
xchg
and
shll
sub
mov
add
mov
mov
pop
out
jb
cmpsb
int3
pop
fimuls
mov
mov
mov
lods
fdiv
dec
ret
clc
push
or
push
mov
dec
mov
sahf
lahf
xor
jns
test
mov
scas
icebp
xchg
jbe
and
jbe
sub
xor
movsl
adc
xchg
mov
or
push
dec
mov
and
dec
outsl
pop
xor
fldenv
ss
mov
add
mov
xor
in
mov
jnp
stos
pop
bound
test
daa
jecxz
repz
xlat
and
leave
notb
inc
cmp
movsb
add
xchg
add
fwait
fs
test
add
int3
ret
jl
test
and
test
xlat
add
pop
cmp
mov
hlt
into
xchg
jbe
call
mov
lahf
decl
mov
stos
aad
mov
stc
mov
scas
ficoms
popf
icebp
or
vpunpckhdq
inc
inc
repz
rolb
mov
cli
mov
xchg
and
mov
add
std
mov
sbb
cmp
jmp
imul
mov
push
test
adc
clc
leave
dec
and
mov
les
add
shl
xchg
scas
data16
xchg
sub
pop
mov
xchg
ljmp
mov
paddusw
inc
and
cmp
lds
insb
test
add
imul
dec
jge
pushf
or
cmp
cmpsl
xchg
cmpb
ret
jp
mov
inc
loope
data16
sahf
mov
mov
scas
stos
mov
and
cli
dec
sub
mov
pop
and
addb
mov
mov
int3
das
mov
test
xchg
or
repz
pusha
add
sbb
popa
jbe
push
decb
and
iret
xor
cltd
pop
push
mov
or
push
jge
mov
mov
sbb
ja
les
inc
sub
pop
std
pop
mov
iret
neg
lods
cmpsl
jge
js
cmc
insb
push
mov
js
xor
repnz
cmc
insl
dec
lds
pop
negb
mov
fs
sub
shl
pop
int
cld
mov
mov
push
pop
xchg
sbbb
push
jmp
bound
arpl
sub
out
fidivl
loop
movsl
les
cmc
in
popf
jp
inc
std
adcl
mov
add
pop
push
inc
nop
xor
les
fdivrs
out
pusha
mov
popa
mov
sbbl
outsb
mov
icebp
mov
test
xchg
popa
push
sub
ret
lret
cmpl
in
xchg
jo
pop
xchg
cli
inc
push
popf
inc
mov
and
repnz
xchg
fldenv
mov
jg
xchg
sbb
push
xchg
enter
add
adc
pop
xchg
sub
or
dec
cmc
jl
data16
cmpsb
loope
pop
xchg
inc
sahf
adc
dec
movsb
pop
call
and
dec
mov
jae
fcmovnbe
jno
adc
out
mov
fildll
push
in
jle
xchg
mov
xchg
rclb
ss
push
data16
mov
daa
roll
ficoms
rcl
cltd
pop
cmp
pop
movsl
mov
jne
xchg
push
jle
push
mov
push
shrl
jns
shll
out
loope
scas
outsl
into
cmp
pop
pushf
or
cmpsl
mov
mov
fcompl
jo
lods
jns
xchg
mov
mov
mov
mov
pop
lret
mov
inc
jge
inc
loopne
in
jle
sbb
inc
add
outsl
les
gs
je
push
xchg
cs
dec
stos
addr16
cltd
mov
sbb
lret
stc
xchg
sti
add
scas
into
xchg
les
xchg
mov
cmpl
ds
or
push
ja
jo
pop
fiaddl
cmc
fcoml
popf
mov
mov
dec
or
pop
gs
mov
or
pop
in
fwait
leave
mov
je
in
out
scas
fsubl
mov
xchg
sbb
mov
test
andb
cmpsb
in
pop
xlat
adc
push
aas
scas
add
test
xor
pushl
adcb
mov
outsl
aas
outsl
jle
add
fisubrl
je
xorl
cmpsb
inc
mov
sub
push
xor
inc
jge
movsb
pop
arpl
hlt
jnp
inc
fbld
out
add
out
sahf
and
xchg
shlb
sbb
fbld
xor
das
fldt
aad
aad
les
add
mov
push
cmpsl
jo
mov
sub
mov
inc
add
subl
idivl
add
aas
pushf
aaa
mov
lods
add
mov
lods
into
scas
jg
lret
addl
add
iret
and
fisubrl
jp
add
aam
add
in
mov
mov
sbb
xor
or
xchg
clc
decl
movsb
sbb
fists
int
adc
xor
xchg
scas
pop
jnp
das
pop
cltd
mov
call
mov
int3
add
mulb
jno
add
mov
jnp
mov
cmc
out
inc
push
nop
inc
xchg
out
fwait
sub
nop
fistpll
mov
stc
inc
or
add
jge
test
loope
loope
mov
ret
nop
shlb
xor
jg
sub
add
or
mov
and
pop
mov
add
lret
sub
sbb
leave
mov
je
add
ljmp
aas
jp
inc
sub
jg
movl
mov
int3
mov
jg
dec
xchg
outsl
adc
inc
test
cmpl
dec
sub
stos
and
mov
push
sti
dec
popa
pop
sub
ss
cmpsl
push
and
xor
insl
push
cmp
adc
inc
pop
push
js
enter
into
outsb
pop
mov
cltd
cmp
sarb
adc
clc
je
or
in
sub
jp
jo
lea
test
dec
mov
call
lock
mov
divb
fs
test
aam
pop
push
pop
jmp
inc
and
testl
negl
shl
jg
and
test
imul
cwtl
inc
hlt
int
ljmp
lods
fnstcw
add
aad
mov
xchg
pusha
jno
imul
lret
out
cmp
xchg
insl
mov
idivl
fs
ret
jle
ffree
fucomi
push
push
into
sbb
cwtl
aam
xor
adc
sti
and
mov
pop
cmp
adc
repnz
test
repnz
mov
std
sti
xchg
stc
and
add
mov
xor
jb
cmp
rolb
roll
and
in
xlat
dec
gs
shl
cmpl
xchg
dec
bound
dec
push
sub
mov
jl
sarb
sbb
sub
xchg
insb
dec
mov
shrb
push
mov
imul
fdivrl
add
push
fisttps
dec
in
jno
xorl
push
filds
ss
fcoms
cmp
and
scas
cmpsl
ss
sbbb
jge
addr16
aaa
leave
pop
push
pop
aad
popf
mov
or
in
mov
inc
inc
fldl
mov
cmpsb
adc
jns
xrstor
shll
stc
add
dec
in
test
aaa
xchg
sbb
lods
shl
push
cmp
pusha
inc
bound
out
repnz
sbb
jl
jnp
sub
out
xor
aas
ljmp
or
and
mov
and
loop
mov
xor
jns
or
sahf
jecxz
icebp
dec
cmp
int3
std
sbb
incb
xor
imul
xchg
adc
xchg
cmpsb
test
dec
mov
mov
int3
and
or
call
push
int3
inc
es
inc
jmp
jno
lods
stc
es
lahf
loop
mov
stc
xor
dec
addr16
jo
push
orl
ss
arpl
fldt
jns
push
jp
inc
sub
jl
mov
mov
aaa
xchg
mov
mov
or
loopne
popf
and
lcall
pop
push
jle
xchg
in
test
loop
outsb
inc
pop
ret
pushf
cs
arpl
lock
neg
outsb
mov
dec
adc
inc
and
mov
insb
call
aam
jnp
xchg
xor
push
push
push
mov
inc
cltd
test
fwait
test
dec
push
adc
ret
xor
mov
out
enter
pop
testl
mov
xchg
imul
push
or
mov
add
arpl
pop
ficoms
es
int
dec
les
mov
pusha
rcrb
ficomps
jmp
ficoms
aam
clc
popa
xor
inc
pop
adcb
push
add
sbb
inc
pushf
jecxz
mov
pushf
sbb
mov
xchg
sub
push
aaa
sub
scas
cmp
inc
aas
out
mov
aas
xchg
stos
repnz
shlb
in
xor
mov
js
xchg
sbb
loop
add
cmp
sub
jno
hlt
xchg
fcoms
popa
lcall
mov
jns
lret
push
dec
outsl
pop
imul
sbb
sar
aas
or
pop
add
add
jns
sbb
push
mov
lcall
lock
sbb
ret
cmp
push
hlt
icebp
adc
call
fsubs
lahf
shll
or
bound
pop
and
or
adc
lock
xchg
sbb
pusha
sub
xchg
dec
cwtl
std
test
fsubrl
cmp
push
xor
stos
cmp
xor
mov
inc
dec
adc
cmpsb
into
or
jl
repz
push
loope
mov
aad
or
data16
xchg
mov
fwait
adc
leave
or
pop
test
cld
in
cmp
pop
xor
test
pop
sbb
dec
pop
cltd
fwait
sarb
xchg
rorl
sbb
push
mov
and
push
xorl
bound
pop
mov
jo
cmp
mov
cmp
mov
dec
mov
outsb
sbb
xor
insl
sub
xor
int
fcoml
and
and
or
mov
and
ret
lret
addr16
cmpsl
push
and
loop
pop
ret
mov
add
adc
icebp
cmpl
addr16
pop
xor
inc
mov
test
add
hlt
fimull
mov
sub
ja
andl
xor
mov
cmp
push
push
lret
into
inc
iret
xchg
xchg
subb
xor
fiaddl
mov
imul
out
add
dec
add
mov
push
push
cmp
push
insl
imul
push
jns
xor
out
call
addr16
lods
sbb
pop
insb
inc
push
out
out
test
pop
test
mov
ret
out
mov
shr
sbb
loop
out
push
push
xchg
in
sahf
clc
xchg
mov
jle
jnp
iret
and
imul
cmp
jle
inc
jmp
mov
mov
add
mov
adc
in
lea
fidivs
movsl
inc
sbb
or
leave
lock
aam
out
xor
shll
in
leave
fists
in
fwait
movsb
aas
cli
cli
sahf
sub
call
lret
into
push
rcrl
in
lret
arpl
cmpb
jmp
push
cli
ret
cmp
cmp
outsl
mov
ds
gs
adc
fcoms
and
enter
or
sbb
and
loop
test
not
sbb
popa
mov
std
mov
jl
inc
fidivrl
iret
cmp
leave
mov
lret
or
push
and
mov
lds
push
dec
std
inc
pop
add
mov
jmp
dec
inc
shlb
ljmp
repz
sbb
arpl
inc
mul
push
adc
xchg
lret
ljmp
xor
pop
cmp
fwait
and
inc
push
push
mov
imul
scas
dec
ret
iret
push
addr16
cld
xchg
add
and
xchg
or
xchg
and
mov
pop
rorb
pop
jns
rcll
fnstsw
pop
rol
mov
test
mov
pop
dec
push
push
lds
push
subb
xor
dec
xchg
push
pop
sub
and
dec
mov
mov
or
adc
sbb
iret
in
jge
mov
outsb
mov
mov
sbbb
cmp
arpl
js
sti
mov
sbb
iret
js
or
mov
mov
pop
jo
into
outsl
pusha
test
or
lahf
mov
dec
mov
lret
in
lcall
adc
les
and
js
insb
lahf
jp
fwait
sbb
sub
decb
push
fidivl
in
pushf
or
pop
ss
mov
stc
popa
xchg
pop
rcrb
ja
repnz
xchg
sbb
je
xor
imul
fimuls
fs
clc
and
pushl
lret
dec
cwtl
mov
pop
jmp
sbb
jnp
pop
in
or
pop
mov
mov
cmp
dec
jno
jecxz
loope
shrl
test
push
decl
fnstenv
aam
clc
push
out
dec
jge
dec
jno
in
mov
cmp
lods
add
in
inc
icebp
mov
mov
and
jmp
cld
gs
sbb
int3
pop
fadds
cmc
lret
xchg
push
xor
ja
adc
mov
lds
imul
in
xchg
jno
mov
sbb
pop
add
movsb
dec
ret
lahf
sub
pop
iret
imul
fs
xor
mov
fnstenv
mov
in
popa
xor
pop
and
add
hlt
stos
inc
push
dec
or
ret
mov
dec
nop
cmpsl
ds
cmpsl
push
inc
jl
jo
movsb
jns
or
std
jbe
ret
and
les
test
dec
cmp
pop
fisttpll
push
lds
pop
sub
and
pop
cmp
lods
and
gs
jge
pusha
sbb
std
sub
mov
aad
repnz
pop
ds
mov
sarb
xchg
js
jb
inc
mov
push
out
inc
cmp
cmpsb
rcrb
and
fsubrp
jnp
popf
and
inc
sub
cmpsb
push
out
clc
jnp
adc
jle
sbb
dec
cmp
dec
cltd
and
and
sbb
push
dec
cmpsl
stos
add
xor
movsb
jl
xlat
mov
sahf
popf
sub
sub
adc
loope
fidivrl
rcll
and
jl
arpl
rep
cltd
fnsave
mov
dec
pop
push
jle
jb
loope
rorl
pop
call
jae
push
aaa
lret
cmp
mov
inc
jbe
or
sbb
add
cmp
jbe
aas
repnz
roll
mov
pop
inc
rclb
cld
negl
ds
mov
ffree
fucomip
imul
push
ljmp
scas
lods
xor
fwait
les
pusha
cmp
gs
fsts
imull
imul
testl
mov
mov
fdivrl
xor
push
mov
sbb
jmp
inc
lahf
jnp
movsb
pusha
pop
test
das
fildll
xlat
lea
mov
and
mov
dec
mov
loope
inc
lock
stos
pop
mov
xor
aaa
jle
pop
push
mov
add
es
inc
and
jb
xor
rorb
ret
popf
cmp
mov
cmpl
ret
cmpsl
mov
adc
sub
lret
cmc
mov
int
or
daa
enter
sbb
fisttps
lea
sbb
mov
adc
pusha
cmp
push
repz
inc
mov
mov
dec
int3
pop
push
jbe
mov
bound
loope
in
adc
adc
cltd
mov
adc
fistl
pusha
jp
rorl
ljmp
xchg
cmpsb
cmp
mov
mov
cmp
pop
dec
dec
jmp
int3
repnz
cmpsl
scas
fs
ret
arpl
loop
pop
cmp
or
mov
imul
stos
mov
mov
lods
sahf
int3
orl
cmp
mov
dec
lret
fidivrl
cli
pcmpeqw
outsl
pop
outsb
and
inc
aad
inc
jb
lock
and
cli
addr16
push
loop
test
inc
xlat
pusha
ficoml
push
aas
std
mov
add
jmp
push
inc
testb
xchg
popa
mov
push
push
xor
rclb
dec
mov
aad
in
lahf
xorl
sarb
or
adcb
dec
jno
test
aad
test
pop
leave
cmp
data16
pop
addl
mov
iret
dec
jae
add
popf
les
loop
xlat
out
shl
inc
imul
push
roll
movsl
mov
sbb
mov
sbb
nop
xorb
stos
mov
gs
fdivl
xchg
mov
or
mov
test
inc
fidivrl
jo
jg
fistl
sbb
rorb
or
dec
ds
add
jmp
test
mov
arpl
jge
xchg
outsl
cltd
inc
lock
mov
pop
jmp
cmp
imul
cmp
sbb
cli
xlat
cmpsl
or
cmp
or
scas
sbb
adc
call
and
adc
mov
add
divb
leave
out
jmp
dec
push
aaa
jmp
pop
xor
ret
add
ss
js
cmp
inc
nop
mov
fstpt
iret
inc
mov
icebp
add
pop
test
lods
xchg
ss
ret
lret
xchg
lods
inc
cmpb
dec
pop
push
jae
arpl
adc
lahf
lock
sarb
mov
lods
push
fpatan
or
mov
fimuls
imul
lods
mov
add
cmp
or
out
dec
dec
hlt
push
inc
xor
mov
mov
orb
pop
scas
jecxz
xchg
aas
cltd
or
popf
fmul
sub
out
jnp
adc
mov
js
inc
test
mov
sti
push
inc
pop
add
xchg
inc
mov
addl
mov
shrb
popa
push
dec
ret
das
cmp
or
lea
inc
push
mov
mov
xor
push
cmpl
inc
aad
add
mov
push
mov
sub
dec
aad
xchg
int
pop
ss
idiv
icebp
adc
dec
aad
xchg
leave
loope
cmp
das
out
push
dec
xor
sbb
sbb
mov
incl
lahf
ds
lods
lds
jae
mov
imul
sbb
dec
rcrb
enter
es
mov
pop
jle
pop
or
adc
dec
inc
aaa
mov
jns
leave
pop
int3
jp
mov
das
push
cmp
fwait
xchg
movsb
xor
mov
xchg
daa
insb
jmp
cwtl
sub
and
pop
call
in
js
test
popa
or
jp
fs
xlat
in
inc
mov
test
cwtl
dec
sub
pop
add
jmp
mov
sbb
push
in
cmp
push
andl
and
shlb
test
xchg
xchg
loope
sbb
in
cs
mov
les
jnp
sarb
les
push
cmc
pop
aas
push
mov
fs
dec
outsb
push
shl
push
je
add
fs
ret
xchg
fs
lcall
movsb
mov
push
cmpl
mov
mov
lret
leave
out
sbb
xlat
cwtl
iret
and
xor
jge,pn
sub
mov
dec
shr
sub
mov
lods
cmp
adc
sub
aam
out
insl
pop
pop
popf
pop
dec
movsl
push
mov
mov
lcall
push
mov
dec
sar
lods
outsl
int3
jno
icebp
mov
ljmp
and
int
lds
pop
jg
loope
mov
push
sub
mov
fs
adc
icebp
sahf
push
into
enter
mov
repz
int
das
pop
xor
adc
cli
cmp
aas
mov
mov
push
xor
iret
xchg
imul
test
jl
and
sti
jb
int3
add
dec
jnp
dec
outsb
adc
fs
push
mov
xor
imul
xor
stc
fistpl
pop
js
or
inc
mov
mov
aaa
push
inc
push
in
sahf
mov
out
cld
rorl
shr
add
cmp
sbb
pop
inc
insb
mov
daa
sub
out
push
imul
mov
repnz
jns
pop
lcall
addl
lahf
sahf
jbe
push
ja
loop
jl
cmp
or
inc
ret
pop
or
popf
add
xor
les
dec
dec
jae
jecxz
push
je
cmp
push
add
pop
sub
mov
cmp
ss
popf
mov
call
push
sahf
push
icebp
fisubrl
leave
fisubs
test
shlb
sub
jge
sbb
mov
setge
inc
pop
dec
mov
stos
jg
and
sbb
popa
mov
leave
mov
rolb
outsl
pop
je
mov
stc
insb
jmp
dec
adc
add
sub
les
lods
xor
je
in
sbb
cmc
pop
cltd
push
push
icebp
mov
dec
lcall
sub
mov
xchg
jl
dec
push
pop
test
rcrl
test
push
mul
sub
ds
and
lret
jae
add
push
cmc
push
sub
movsl
mov
xor
jge
pushl
cmc
sarl
or
add
push
addb
out
adc
pop
jbe
movsl
test
inc
cld
je
fists
lods
fcoms
xor
stc
rcrl
lods
mov
lret
in
adc
mov
push
ds
mov
mov
in
out
inc
out
xor
icebp
pusha
ljmp
roll
mov
cmp
cs
lods
cmp
lret
lahf
cmp
xchg
xchg
inc
cld
sub
push
into
lods
mov
test
mov
stos
cld
jnp
rol
mov
mov
ss
or
pop
sti
jns
xlat
mov
repnz
in
mov
xchg
stos
xor
pop
aam
les
sbb
sahf
cwtl
dec
sbbb
or
adc
ds
out
lds
pop
jle
cli
jns
lds
mov
pop
and
inc
add
and
into
cmp
lahf
popf
mov
in
js
ljmp
jmp
stc
decb
jns
sub
sub
jecxz
dec
sarl
pop
test
xor
xor
daa
jg
fsubrl
sub
test
addb
daa
cmp
pushf
in
les
push
cmp
mov
mov
addl
push
mov
push
pop
dec
mov
and
sbb
sarl
sub
aaa
xor
fmull
mov
lahf
mov
in
aad
xchg
dec
fldenv
icebp
jmp
xor
dec
add
arpl
nop
dec
sti
les
mov
cmpl
xchg
sbb
ret
adc
pop
adc
js
sti
rcl
mov
cmpsb
test
dec
std
dec
sti
push
iret
sub
xor
addr16
popf
jle
mov
jp
in
loope
xchg
rolb
mov
into
js
test
data16
jmp
jbe
mov
nop
xor
out
loop
fdivrs
and
insl
fldcw
adc
lcall
jae
jp
or
repz
adc
push
xchg
mov
repz
dec
popa
loopne
mov
mov
push
fcomps
mov
cmpsl
loop
outsb
scas
outsl
popf
xor
icebp
pop
daa
das
faddl
stc
push
idivb
dec
shrb
mov
fsubl
test
lods
addr16
mov
std
sbb
icebp
enter
mov
sub
sbb
adc
mov
or
push
add
clc
jns
aas
out
mov
xchg
bound
cmp
iret
outsb
iret
sbb
gs
and
ret
jecxz
mov
lcall
push
mov
pop
add
sbb
push
stos
cld
stos
clc
ljmp
xchg
fsubrs
lret
cld
aam
adc
int
or
hlt
pop
cmp
xor
inc
xchg
ljmp
addr16
push
pushf
fwait
sbbl
push
mov
shll
aam
ja
push
mov
movsl
std
xor
aas
or
cli
sar
icebp
cltd
push
call
or
stc
cmp
ds
jae
jl
sub
and
jns
nop
xchg
mov
popa
roll
sbb
out
sbb
sub
ja
jl
inc
lods
fistl
movl
ljmp
push
mov
lock
mov
sti
mov
aaa
lods
cmp
loopne
dec
push
add
dec
pushf
and
mov
adc
sahf
xor
mov
pop
cs
ja
inc
sub
cmp
jg
ret
enter
adc
in
push
je
iret
leave
sbb
aas
nop
xchg
aad
mov
cmp
in
mov
test
orl
leave
mov
inc
shlb
mov
jp
mov
outsb
sbb
fwait
inc
xchg
adc
pop
cmp
jnp
push
in
mov
adc
mov
stos
pop
mov
pop
lret
imul
xchg
mov
addl
aad
sarb
jecxz
adc
addr16
pop
mov
sub
js
sbb
mov
mov
cmp
inc
and
push
add
pop
and
mov
pusha
adcb
aad
out
loopne
xchg
pop
cmp
clc
mov
mov
cmp
push
out
jns
and
mov
and
scas
test
push
cwtl
ret
mov
jecxz
dec
xor
ljmp
std
cwtl
icebp
ret
jmp
hlt
jo
or
imul
sub
imul
pop
leave
std
mov
insb
sti
sbb
fwait
popf
mov
or
clc
rcll
addl
str
cltd
lods
shl
pusha
dec
jmp
std
ljmp
cmpsl
scas
imul
pop
daa
lea
or
lcall
rorb
pop
mov
add
mov
inc
ds
inc
pop
fnstsw
add
jbe
sub
std
stos
decl
push
cmp
pop
jle
mov
in
lods
jns
inc
mov
inc
cvtdq2ps
mov
roll
in
dec
hlt
xchg
fcompl
sbb
hlt
mov
mov
jecxz
mov
das
mov
idiv
shrl
mov
mulb
ret
xor
into
push
jbe
jge
add
adc
mov
adc
push
sahf
fsubs
inc
imul
stc
mov
mov
test
push
cld
mov
mov
xchg
push
mov
test
faddl
fnsave
cmc
xchg
fsts
cmpsl
fucomi
mov
mov
mov
sbb
imul
lods
roll
pop
aaa
in
in
out
add
inc
lods
nop
add
sub
iret
loopne
mov
pop
jnp
gs
pusha
pop
lds
inc
jnp
rorb
lea
out
inc
dec
call
xchg
sbb
push
out
stos
lea
popa
jle
inc
ror
mov
inc
cld
pop
std
pop
dec
pop
shll
and
shlb
ds
xchg
jne
and
inc
mov
shrl
xlat
in
sahf
fdiv
roll
jge
push
mov
jno
rcrb
movsb
cwtl
out
inc
scas
cwtl
adc
dec
adc
mov
int
mov
adc
rcrl
push
push
fstpl
test
repz
and
sbb
out
mov
nop
cmpl
movsl
insl
add
pusha
roll
stos
mov
add
add
leave
stos
adc
pushf
jae
stos
mov
shll
incb
aad
adc
dec
int3
scas
sbb
dec
enter
sub
pusha
enter
mov
dec
imul
pushf
xchg
fwait
gs
inc
inc
mov
mov
sub
nop
pushf
and
add
std
sbb
and
in
data16
nop
outsb
or
sbb
xchg
pusha
inc
cmpsl
mov
dec
movsl
and
mov
jne
mov
daa
test
jecxz
test
lds
cli
icebp
or
fs
into
cs
inc
aad
xchg
add
jge
es
inc
cs
sub
std
je
sbb
xchg
stc
adc
cmp
sbb
sbb
pop
fcomps
enter
pop
xchg
cmpsb
lods
cmp
jle
inc
dec
xchg
xor
mov
or
inc
adc
xchg
xchg
out
pop
mov
pusha
cmpsb
adc
lods
pop
mov
pop
cs
pop
int3
dec
repnz
jmp
out
jge
and
loop
push
pop
and
sarb
mull
mov
insb
inc
mov
xor
cmp
in
pusha
lods
push
popa
mov
rorb
popa
xlat
push
and
outsl
arpl
mov
mov
ss
pop
jae
sub
jnp
xchg
mov
dec
lahf
pop
adcb
mov
push
mov
mov
add
mov
loopne
cmp
inc
lcall
fsubrs
sub
sbb
insl
push
lea
add
mov
loope
stos
stos
xor
lret
cmp
add
les
sbb
inc
icebp
xchg
adcl
gs
jae
insb
push
mov
in
lods
pop
add
sbb
pop
sahf
imul
push
sbb
cmp
xor
sbbl
in
sti
int
lds
cmp
aam
out
add
sbb
jmp
and
cmp
gs
adc
adc
outsb
push
adc
and
das
jno
mov
scas
sbb
mov
mov
pop
pop
inc
xor
lods
sbb
pop
inc
xchg
and
xor
fisubrs
pop
push
iret
jbe
fwait
mov
leave
push
push
mul
sbb
aas
scas
popa
xor
enter
and
jb
cwtl
cmp
mov
das
popf
outsb
inc
mov
loopne
insb
in
mov
lods
push
rolb
pop
sub
movsb
outsb
dec
adc
dec
cmp
mov
sub
add
mov
xchg
cltd
lods
xchg
or
add
fisubl
sbb
add
test
inc
mov
mov
mov
mov
dec
or
xchg
test
xchg
aad
and
call
popf
hlt
or
fsubl
inc
mov
add
xor
or
out
daa
int3
dec
sbb
or
out
jne
mov
mov
out
inc
xchg
or
cltd
mov
int3
imulb
or
stos
add
dec
lahf
hlt
loop
shl
adc
mov
jmp
adc
ss
xor
xor
adc
out
pop
pop
lock
cld
dec
addr16
sti
xor
leave
daa
icebp
lahf
sbb
cmp
insb
cmp
gs
insl
adc
repz
fsubs
inc
add
dec
imull
mov
lds
mov
dec
cli
inc
movsl
xchg
cmpsb
mov
xchg
jb
sub
lds
nop
daa
popf
cmp
stc
mov
xorl
stc
movsl
dec
cwtl
xor
cltd
push
xchg
shll
sub
dec
mov
mov
sti
repz
lods
test
jl
ret
sbb
cld
sar
cmpsl
xchg
das
lret
sub
or
repz
mov
aam
jae
push
dec
subl
jl
shrb
cld
xchg
mov
add
jno
mov
insl
jg
xor
pop
jne
adc
lret
fcmove
push
aas
mov
adc
ror
fistpll
dec
mov
mov
in
push
pop
sub
loope
add
push
data16
pop
or
notb
or
test
or
fisttpl
out
and
test
lock
or
xchg
and
ret
dec
decb
push
aad
xor
ret
ss
leave
and
push
ja
mov
aaa
aad
inc
jno
xchg
dec
imul
xor
jle
push
cmpb
in
fbstp
popf
add
xlat
xor
dec
cmp
mov
outsb
in
push
test
test
ja
lea
je
add
rolb
fidivrs
cmc
mov
cld
mov
mov
push
mov
das
imul
andl
scas
sub
test
and
adc
dec
or
jbe
mov
loope
xlat
pop
mulb
and
cmp
addb
mov
jbe
pop
dec
pop
lock
outsb
mov
add
or
lds
pusha
xchg
aas
pop
adc
jmp
sti
inc
fsubl
xchg
mov
daa
cltd
inc
fldenv
popf
mov
mov
scas
testl
cs
sub
jecxz
sbb
rcrb
sbb
movsb
fucom
mov
pop
mov
sti
fisubrs
xchg
mov
lods
mov
cmp
push
xchg
mov
enter
dec
shll
outsb
fistl
popf
jbe
call
xor
xor
scas
and
iret
testl
fisubl
shll
push
call
cmpsl
lea
lods
inc
inc
mov
push
insl
jne
ss
xchg
push
mov
xchg
lock
imul
dec
ja
jnp
jg
repz
pop
mov
cmpsl
or
mov
pop
mov
lock
andb
xor
fs
xor
jno
pop
outsl
fisubrl
bound
push
add
adc
inc
sbb
dec
leave
imul
mov
cmp
int3
dec
xor
imul
out
cli
testb
ss
dec
scas
loop
cmp
push
lcall
cmp
jg
fstpl
cltd
pop
loopne
sti
into
cs
adc
orps
cmp
push
mov
call
xchg
iret
and
cmp
test
loope
and
lahf
mov
repz
ljmp
in
add
cld
in
jg
gs
adc
cltd
dec
bound
repz
stc
imul
xor
push
lds
lret
inc
mov
jnp
out
bound
mov
pshufw
jge
add
sbb
push
cmp
xchg
loopne
sti
xor
xchg
rcrb
mov
scas
inc
pause
call
add
popa
js
inc
ja
syscall
fs
enter
dec
add
push
lret
sbb
fstpt
pop
and
fldl
mov
xor
pushf
pop
cmp
and
imul
cmp
mov
inc
loop
dec
iret
lea
lcallw
outsb
jp
ds
xchg
gs
outsb
imul
iret
mov
mov
popf
and
add
and
jne
fiaddl
sbb
adc
jl
adc
popa
mov
imul
mov
xor
and
cmp
add
jmp
mov
push
icebp
jns
or
enter
lods
adc
jge
mov
push
lock
jle
cs
outsl
rolb
lods
out
or
jnp
jp
dec
aas
stos
stc
or
mov
xor
outsl
inc
push
dec
fdivr
sub
xchg
icebp
shl
cwtl
test
pop
mov
lods
mov
jge
fwait
nop
lret
inc
push
orl
leave
mov
test
or
loop
in
or
lock
popa
push
lret
xor
adc
add
pop
mov
adc
lds
sub
xchg
and
into
das
mov
dec
testl
inc
ja
xor
mov
cmp
cld
cli
sub
xchg
aad
jbe
pop
xchg
es
and
rcll
and
popw
pop
stc
push
jp
sbb
cwtl
fldenv
mov
mov
cmp
repz
jle
sub
cmp
cvtps2pd
or
xor
cmpsl
sarl
dec
sub
adc
das
pusha
mov
scas
clc
enter
stos
sub
fldl
out
int3
mov
fildl
and
pop
push
pop
scas
mov
fs
xor
lock
and
cs
stos
push
inc
aaa
mov
rcll
push
push
jg
cli
sub
add
push
sbbb
gs
dec
lret
test
popa
pushf
xchg
sbb
sub
mov
shll
push
mov
mov
or
les
or
test
push
jmp
mov
js
imulb
outsb
push
mov
stos
pop
in
insb
cmp
push
or
jbe
leave
add
out
repnz
dec
add
mov
xchg
cmpsl
xchg
mov
dec
mov
cmp
jge
pop
test
pop
xor
sbb
aad
or
dec
call
jmp
dec
and
mov
and
xlat
mov
sbb
daa
dec
int
inc
out
xchg
mov
xchg
test
add
cmp
rcrb
push
shrl
test
imul
pop
fisubs
hlt
fimuls
out
push
aas
les
push
xor
mulb
or
pop
cmp
out
scas
clc
mov
enter
add
pop
dec
rcl
pop
add
sbb
movb
cmp
hlt
and
jno
aaa
sti
cmp
out
stc
xchg
add
scas
xorl
pop
jno
sarl
pop
and
lds
xchg
jbe
mov
cltd
xor
inc
xorb
pop
fcom
dec
test
xchg
mov
int
mov
pop
jb
xor
jnp
lds
iret
insl
cmpsl
lock
xchg
in
mov
fdivrl
dec
notl
xor
in
ljmp
cltd
dec
les
mov
and
imul
jb
push
inc
jns
pop
jmp
mov
das
outsb
inc
mov
aad
in
pushf
push
lea
mov
cltd
jbe
scas
pop
ss
jge
mov
mov
push
or
mov
push
xchg
dec
xorl
loopne
out
test
enter
cmc
fiadds
and
add
sti
adc
sub
xchg
daa
add
int3
test
inc
daa
adc
scas
dec
dec
cli
ss
lds
add
mov
rol
in
divb
int3
test
adc
sarb
dec
in
cmpsb
dec
aad
mov
add
icebp
fidivl
data16
in
cmp
xchg
dec
ljmp
mov
sbb
jno
pop
das
xor
mov
shlb
add
cmp
sub
sbb
outsb
mov
xor
inc
xor
lods
mov
push
push
lock
mov
call
shll
cmpsb
enter
stos
sbb
testl
mov
sub
jmp
cmp
inc
dec
dec
lcall
sub
xchg
dec
push
and
mov
faddl
or
aas
xor
inc
dec
xlat
test
sbb
shrl
ss
stos
stc
fwait
pop
mov
sbb
cwtl
xchg
cmp
cmp
push
das
adc
sarb
sub
rclb
clc
mov
mov
xlat
xor
das
aad
push
call
inc
pop
inc
stc
add
bound
fwait
repz
lods
sbb
and
mov
or
push
mov
or
in
test
push
inc
and
cmp
dec
pop
and
stos
and
add
ss
std
push
mov
adcb
bound
or
inc
mov
fstpl
push
sarb
add
sbb
sub
lods
cmp
push
xchg
mov
fsub
rcll
iret
cli
sbb
repnz
ret
fisubs
cli
into
andl
mov
imul
lret
push
inc
hlt
push
jb
shlb
mov
std
std
call
imul
xchg
stos
in
cmpsb
fidivrs
in
inc
js
xchg
cmpsb
jmp
js
push
xor
pop
dec
cmc
jmp
gs
xor
sbb
mov
daa
add
and
hlt
pushf
adc
repnz
xchg
and
mov
or
mov
cmp
xchg
jle
dec
loope
push
orb
xchg
dec
push
ljmp
movsb
xor
nop
jo
loope
imul
jbe
loope
jl
gs
addl
adc
cs
in
sub
lea
test
or
scas
jmp
and
arpl
add
cld
cs
test
pusha
dec
inc
adc
fisubl
sbb
hlt
add
jb
cwtl
jg
or
stos
xor
sub
jns
jns
aaa
sahf
aad
xor
clc
es
mov
incl
mov
fadds
repnz
sarl
jmp
pop
jne
test
mov
pop
movsb
adc
movsb
push
mov
and
push
jns
ss
jecxz
xchg
cmpsb
in
jb
sub
std
mov
leave
ret
push
add
xchg
jo
das
mov
jae
adc
mov
pop
iret
sub
adc
pop
call
mov
sub
clc
call
scas
lods
cmc
fs
loop
jno
in
cmp
aaa
mov
daa
cli
mov
inc
and
addr16
sub
and
ret
jmp
arpl
enter
and
pop
sahf
mov
jo
jmp
push
adc
or
jbe
mov
jo
add
jno
and
sbb
sub
insl
icebp
and
adc
and
inc
inc
in
jno
ss
jbe
dec
fsubp
sub
jp
daa
mov
mov
mov
shlb
std
mov
shlb
loope
and
mov
mov
jno
mov
das
fmull
in
inc
inc
jne
out
pushf
jle
popa
jle
add
adc
loopne
nop
adc
shlb
cmp
jmp
mov
xor
repz
insl
iret
das
jbe
xor
jp
mov
xchg
test
sub
and
imul
jns
adc
dec
mov
test
or
or
cltd
lahf
xor
lock
pop
das
fidivrs
push
jecxz
pop
adc
mov
rcll
in
ds
pop
stos
dec
jae
movl
mov
movsb
fdivp
xchg
jl
add
push
fistpl
inc
jmp
loop
lahf
mov
inc
and
xor
xor
jmp
rol
dec
stc
jb
sub
out
and
push
xor
dec
mov
out
xchg
outsb
xchg
mov
fidivrs
dec
fs
pop
pop
mov
xchg
int
jmp
mov
dec
add
xchg
pop
and
xchg
inc
jl
sbb
shr
fidivs
pop
pop
fstpl
mov
sbbl
sarb
mov
dec
int3
mov
jnp
or
fisubl
dec
jbe
mov
outsl
mov
add
push
dec
cwtl
mov
cmp
arpl
int
mov
insl
sub
roll
cmp
cld
daa
jo
add
out
iret
andl
xchg
test
mov
lret
push
ds
push
mov
mov
push
mov
fadd
repnz
pop
rorl
callw
sub
shr
jo
fmull
mov
jne
stos
test
fwait
rol
js
sub
or
cmp
pop
xchg
xchg
pusha
sub
sub
cmp
or
out
fiadds
sbb
std
call
ds
adc
in
mov
mov
mov
push
outsl
addr16
clc
mov
imul
sbb
popa
sub
hlt
dec
sti
jne
pop
xchg
test
and
push
add
cmpb
inc
mov
in
jb
jo
add
cmp
sub
lahf
ret
dec
nop
pop
out
dec
mov
add
icebp
fwait
cmc
ret
cmp
push
ret
das
inc
mov
mov
sub
and
add
adc
jle
jmp
and
idiv
popf
sbbl
mov
ds
push
dec
jmp
lahf
xchg
inc
in
movsl
push
sub
je
mov
dec
popa
or
icebp
mov
jo
cmp
cmp
pop
xor
cli
mov
push
aas
lret
loop
mov
shr
aaa
int3
mov
in
jl
and
lcall
sahf
inc
sarl
or
cwtl
xchg
inc
or
inc
or
stos
iret
icebp
mov
xor
sbb
mov
add
and
out
xchg
xchg
cld
scas
imul
adc
nop
out
ds
pop
pushf
xchg
inc
out
aaa
test
pushf
push
cltd
or
dec
pop
mov
xchg
push
add
xchg
cmp
test
in
mov
imulb
dec
xchg
mov
push
sbb
inc
rcll
dec
mov
loopne
loope
pop
push
cmpsb
or
mov
inc
adc
ret
mov
imul
arpl
ficoms
push
lret
xor
scas
lret
mov
jmp
mov
jo
pop
fdivrl
int3
popf
push
mov
test
push
xchg
sub
gs
nop
fcmovnb
add
loop
mov
and
jbe
xchg
mov
xor
xchg
data16
inc
into
fwait
mov
mov
negl
mov
mov
iret
push
jle
les
jae
jbe
lea
mov
pop
adc
pop
xchg
or
fdivrs
jno
or
or
adc
push
jl
clc
gs
inc
test
jnp
fistpll
shl
in
stos
mov
insb
popf
icebp
lret
jmp
lcall
or
pop
fisubrs
xor
cltd
aas
lds
icebp
pop
notl
mov
xchg
mov
dec
jnp
aaa
mov
mov
mov
jl
jb
jns
mov
add
sti
nop
loope
call
adc
xor
sti
into
sbb
sub
outsb
rcr
adc
out
inc
frstor
es
push
jns
stos
data16
int3
and
pop
in
stos
mov
outsl
lret
pop
fistps
add
notl
push
mov
inc
add
sbb
cmp
scas
xor
fidivl
mov
jno
hlt
sbb
lock
iret
sub
and
repz
xchg
popf
push
incl
ror
insb
rcr
subb
mov
sbb
scas
or
nop
in
mov
sbb
jg
dec
pop
incb
repnz
lods
cmp
movsb
xor
pop
fistl
mov
sub
xchg
pop
push
xchg
pop
or
xchg
inc
les
push
and
ljmp
aaa
sbb
dec
xchg
mov
fwait
pop
mov
push
je
or
inc
lds
pop
shrl
hlt
sub
stos
inc
dec
adc
sub
cmp
fcompl
jle
add
jle
cmp
pushf
lods
pop
mov
loope
pop
inc
jno
imulb
outsl
xchg
scas
stos
out
fmull
mov
mov
test
subb
mov
es
cmp
fidivrl
xchg
mul
push
push
or
sub
dec
and
mov
lahf
scas
mov
cmp
mov
push
cmp
into
lds
test
aad
sbb
jbe
jmp
data16
add
mov
popf
cmpl
mov
mov
leave
adc
jge
cltd
adc
cmp
adc
add
out
mov
and
aad
rcl
mov
sbb
fstps
shrl
xchg
ja
inc
dec
mov
and
jmp
xor
mov
lret
cli
repnz
gs
xchg
dec
xchg
aaa
pop
push
push
and
test
pop
jle
mov
push
inc
mov
std
push
ljmp
movsl
ljmp
scas
out
jge
cli
cmpsb
loopne
out
ret
popf
sbb
sub
notb
mov
adc
jmp
cmp
cmpsb
cmc
cmp
or
aam
push
sbb
int
cmp
insb
adc
xchg
and
xchg
mov
jae
xchg
cld
mov
push
jno
sub
stos
sub
dec
xchg
out
mov
int3
dec
xchg
or
out
sub
xor
add
pop
loopne
addr16
ja
shlb
outsb
imulb
mov
pop
shr
adc
mov
jge
sub
xor
aas
movsb
adc
out
inc
call
mov
add
fstpl
loop
int
loope
movsb
mov
mov
repz
xchg
pop
pop
js
pop
mov
fsubr
loop
or
lcall
xor
inc
inc
mov
je
les
adc
cmp
into
jmp
cltd
xlat
xchg
loope
mov
rcl
or
pop
push
lahf
lahf
or
stc
dec
dec
pop
or
icebp
xor
mov
cli
push
sbb
push
mov
push
shlb
dec
and
sbb
int3
xor
inc
decb
add
fadd
lcall
cmp
outsb
pusha
push
mov
dec
rcrb
out
in
mov
adc
mov
scas
sbb
add
loopne
adc
cmpsb
insb
cmpsl
jne
sbb
add
dec
dec
shll
dec
imul
jno
inc
push
loope
pushf
pop
inc
test
cwtl
xchg
cwtl
jnp
pop
pop
in
or
mov
xchg
sub
in
pop
jae
xchg
mov
cmp
cmp
sub
xchg
or
insb
adcl
push
pop
xor
pop
sbb
mov
cmc
cmc
sub
sub
clc
ljmp
xchg
sahf
outsb
jl
mov
xchg
inc
inc
push
fidivl
lcall
loope
xor
inc
dec
lret
inc
data16
sub
push
jb
or
leave
or
mov
repz
pop
fcmovnb
cmp
sub
and
sub
xchg
stos
inc
jnp
adc
dec
ss
dec
jmp
fbld
dec
clc
scas
jecxz
pop
lret
jbe
fmull
jb
jl
std
pushl
sbb
pop
pop
mov
add
mov
add
pushl
adc
inc
adc
loope
xor
mov
enter
dec
mov
in
in
mov
inc
outsb
clc
lret
pushf
adc
popa
gs
mov
lods
add
dec
mov
mov
dec
jns
push
dec
xchg
add
add
fnstenv
rol
popf
or
mov
xor
add
lods
jno
pop
push
and
and
dec
dec
pop
loopne
fsubrl
mov
dec
cmp
clc
stc
xchg
mov
pop
inc
je
lret
adc
or
lods
jg
xor
test
mov
les
lds
cmpsl
movsl
cli
cmpsb
sbb
sub
mov
sbb
insb
mov
lock
xchg
push
xor
sti
andb
leave
push
out
pop
add
push
adc
fwait
mov
int
test
mov
iret
pusha
pop
addr16
pop
out
xchg
mov
dec
ret
aas
div
add
outsl
cmpb
inc
mov
sti
es
add
insl
jns
in
sbb
dec
pop
and
insl
mov
idivb
xchg
jle
pop
cli
scas
dec
jo
add
sub
jnp
fsubrl
mov
mov
sbb
add
mov
aad
stc
js
add
dec
cltd
jae
aaa
aam
ds
sbb
cmpsb
stos
ja
xor
adc
xchg
aaa
es
outsl
inc
jb
in
outsb
lcall
std
pop
mov
mov
cmpsb
mov
xchg
loope
cs
dec
mov
jbe
mov
insl
or
fidivs
lret
xor
lock
and
es
or
cmp
jns
test
loopne
idivb
movnti
push
mov
es
inc
add
rclb
ficoms
xchg
in
cmp
and
mov
push
sub
sbb
sbb
bound
mov
je
cmpsl
sti
sub
or
gs
xor
add
ret
mov
mov
jp
sub
push
testb
aas
ficoml
mov
js
lret
xlat
jb
inc
mov
and
jns
jmp
jae
mov
or
jle
adcl
mov
outsb
jno
insb
lea
inc
loopne
push
ficoms
ss
decb
dec
mov
pop
push
mov
add
test
fs
push
js
cmpsb
adc
arpl
test
mov
sbb
xchg
mov
arpl
inc
mov
sbb
cmp
push
subb
aas
mov
add
fucom
xchg
pop
mov
lods
lahf
and
lods
or
ret
push
xor
xchg
push
mov
subb
xchg
sahf
data16
cmpsb
cmp
mov
cltd
adc
nop
nop
jnp
sbb
imull
repz
jae
addr16
add
sti
call
inc
inc
xchg
lcall
imul
adc
mov
xchg
insl
xor
aam
push
pop
inc
mov
out
jae
xchg
in
roll
enter
push
or
leave
lret
mov
inc
les
mov
add
scas
sbb
xorb
xchg
lods
cmpsb
pop
rcrl
sub
lea
and
xchg
sub
jle
cmp
jo
or
test
out
inc
push
pop
lods
aaa
jns
stos
dec
adc
sbb
jmp
lds
dec
sbb
jecxz
sub
xchg
add
mov
in
jne
mov
cmpsl
insl
pop
int3
dec
leave
inc
mov
js
sbbb
pop
adc
sbb
addb
data16
rcr
mov
cwtl
dec
subl
sbb
dec
sbb
ja
orl
push
mov
mov
push
dec
repz
rcrb
ret
mov
fbld
aad
pop
push
popf
dec
add
push
sub
fcoms
mov
addr16
scas
mov
adc
cwtl
rcll
xchg
and
mov
call
insb
insb
push
dec
inc
push
jp
push
mov
cmp
jnp
xchg
cmpsl
stos
cld
and
in
mov
pushf
dec
test
xchg
and
sti
jnp
fisubrs
push
fistpll
lds
xchg
testb
jmp
mov
xchg
mov
sbb
adc
out
rcrb
loop
test
adc
imul
jns
jns
jns
mov
outsl
pusha
fmul
pop
inc
mov
ja
pushf
sbb
adc
in
nop
out
movsb
sub
add
xor
push
leave
push
mov
enter
test
mov
aas
sar
pop
rcl
xchg
jne
scas
fnstcw
mov
fs
sub
mov
push
in
sub
add
shr
cli
stc
lea
xlat
pop
out
imul
mov
pop
add
test
mov
in
adc
cltd
js
xlat
inc
dec
leave
mov
std
imul
cld
mov
jl
out
mov
nop
aam
and
lock
cltd
adc
out
mov
add
or
sub
stos
add
setns
or
mov
imul
repnz
sbb
orb
pop
shlb
lret
push
and
xchg
lsl
pop
inc
fisttpll
fsubrl
add
test
sub
pop
test
sbb
movsb
stos
dec
mov
mov
xor
mov
xlat
cmpsb
mov
mov
fldenv
in
dec
sub
jo
out
add
add
push
fcmovb
out
stos
test
hlt
or
fucom
push
call
add
je
push
cwtl
aaa
pop
subb
rcll
sbbl
adc
cli
cli
sub
in
popa
sub
scas
les
fadd
fiadds
lock
pop
sub
inc
sub
or
jmp
sbb
fildll
add
inc
xor
cs
dec
mov
clc
jae
loopne
and
int
push
dec
push
sbb
dec
fs
xor
inc
push
sub
out
aad
sbb
jmp
mov
test
pop
sbb
les
sbb
or
in
mov
jne
sub
xor
add
sub
mov
insl
lret
inc
movsb
sbb
xchg
rcl
ftst
pcmpeqw
scas
insb
rcrl
lock
repnz
xor
sarb
in
pop
dec
adcb
in
xor
adc
cli
test
xchg
and
add
push
stos
pop
inc
inc
cmp
mov
movsl
and
in
jmp
notb
inc
jns
mov
inc
or
cmp
jecxz
and
jge
push
sahf
dec
xchg
icebp
in
add
push
push
imul
or
lcall
xlat
xchg
cmp
push
pusha
fiaddl
jl
jl
dec
jno
out
pop
fucompp
jns
ja
out
dec
jae
mov
inc
ljmp
pop
mov
cmp
shll
xlat
test
sbb
lcall
jge
sbb
dec
xchg
cmpsb
lret
sub
repnz
push
sbb
inc
lcall
and
inc
or
mov
pop
adc
cmp
mov
std
cmpb
ja
scas
push
pop
mov
and
mov
cli
add
cli
loope
bound
ret
adc
xor
pushf
out
inc
add
gs
inc
pop
jl
jp
mov
scas
stos
cmp
rclb
xor
sbbb
mov
xor
cmpsb
test
les
push
fwait
jno
inc
inc
jge
dec
sbb
inc
cmpsb
mov
pusha
mov
movsl
call
or
std
xor
and
test
andl
xchg
mov
aam
popf
xchg
dec
sub
inc
lods
ds
fs
xchg
adc
ja
es
jb
shll
jno
shrl
dec
xchg
mov
pop
jns
aam
adc
sub
jb
cmp
insl
and
adc
push
dec
cld
adc
scas
loopne
scas
int
movsl
or
and
push
or
sbb
call
mov
jecxz
mov
add
outsb
into
pop
mov
test
or
adc
imul
pop
popf
cmp
addb
mov
mov
sbb
mov
dec
xor
add
sub
mov
call
xlat
in
jecxz
aas
dec
int3
add
call
je
mov
xchg
testl
or
inc
mov
ficoms
test
lods
pushf
int
pop
ja
adc
mov
jp
loop
call
adc
or
test
pop
fiaddl
cmpsl
and
jmp
push
xchg
les
xchg
mov
jg
or
push
negl
mov
mov
adc
adc
fidivrs
cmp
lcall
jns
xchg
stos
adc
call
cld
nop
sub
das
test
jb
fldt
imul
mov
mov
pusha
mov
jnp
mov
mov
dec
inc
inc
xchg
mov
push
imul
jb
xor
mov
add
fnstcw
std
xor
jae
push
mov
pop
pop
out
cmp
fcompl
mov
lock
rcrl
push
paddd
test
push
sbb
in
dec
into
test
xchg
push
sbb
loop
mov
mov
sbb
ja
cmp
int
and
xor
push
fidivrl
sbb
or
dec
xor
leave
fimull
mov
cmpsb
push
lretw
rcrb
mov
mov
sbb
xor
mov
inc
cmpsb
andl
or
sbb
bound
adc
std
sub
mov
sbb
adcl
push
and
or
push
jp
cwtl
movsb
aaa
ds
jnp
cwtl
imul
inc
lods
sub
sub
sbb
test
fucomi
and
jne
dec
and
imul
fldcw
jae
and
pop
pop
push
sbb
sbbl
outsb
pop
fwait
idivl
sub
call
dec
adc
pop
imul
insw
adc
and
ds
adc
cmc
sahf
sub
cs
jne
push
and
mov
fwait
xchg
les
imul
fcmovnu
flds
movsb
int3
mov
cmp
push
stc
inc
vcmpps
adc
sbb
imul
xor
or
dec
ljmp
cmp
into
push
lcall
cltd
mov
or
cltd
inc
push
xchg
mov
cmpsl
mov
mov
sbb
stos
ss
and
adc
orb
jg
out
lcall
mov
insb
pop
mov
dec
fwait
xchg
or
push
push
xchg
dec
sub
adc
popf
cli
xchg
sub
icebp
jle
and
lock
and
mov
bound
addr16
movsl
cld
test
nop
mov
and
and
loope
mov
out
jmp
arpl
shlb
mov
xor
push
xchg
mov
frstor
dec
mov
adc
aam
mov
pop
ss
jg
add
testl
pusha
sub
and
mov
pop
mov
mov
enter
sbb
xlat
add
add
push
xchg
add
cmpsb
jle
push
adc
arpl
out
push
mov
push
push
add
lret
in
sub
sbb
cmpsb
js
dec
push
and
ja
dec
cmp
shll
mov
adc
dec
pusha
pop
push
sub
add
shr
mov
enter
cmp
loop
xor
mov
pop
inc
fcoml
adc
outsl
mov
xchg
mov
push
xchg
in
or
loop
leave
mov
and
or
ret
jo
test
and
mov
cmp
xor
xor
ret
xchg
sub
and
int
fistpll
ds
aam
push
daa
jl
mov
sbb
adc
cmp
xor
mov
xchg
lods
push
fwait
xchg
xor
push
hlt
adc
mov
dec
js
fnsave
mov
xchg
push
pop
xchg
das
ss
pop
ljmp
loop
mov
in
js
push
movsb
mov
divl
lret
inc
in
not
add
and
les
jb
push
std
add
loop
in
inc
cmpsl
mov
lods
mov
dec
clc
stos
push
lcall
outsb
add
icebp
adc
mov
xchg
enter
mulb
mov
pop
rorb
mov
in
fstpl
jb
movsb
jb
xchg
les
lods
push
and
sbb
jmp
jmp
inc
out
out
mov
scas
and
mull
adc
aaa
fs
aad
xorl
pop
mov
imul
push
call
cmc
xchg
xchg
dec
lock
add
inc
push
pop
adc
lock
mulb
and
inc
xor
xchg
push
jno
iret
dec
ss
jns
xchg
cmpsb
leave
cmp
data16
jge
fidivs
xor
push
icebp
scas
mull
fdivp
das
pop
or
es
mov
aam
push
fisubrs
pop
jge
jb
cmp
cmp
xchg
int3
xchg
xorl
jge
inc
stos
ret
scas
dec
das
push
lods
scas
ret
lret
inc
shl
adc
sbb
xor
popf
pop
push
xor
mov
jle
jmp
hlt
push
fs
add
adc
xor
repz
lahf
ds
cmp
mov
mov
insb
je
adc
mov
sub
jns
cmc
mov
std
mov
xlat
stos
sub
jecxz
mov
jb
sbb
ja
ljmp
push
jle
adc
mov
loopne
inc
fcomi
push
sub
push
sbb
xchg
sub
lcall
int3
or
mov
and
enter
stos
add
or
pop
sahf
xchg
aad
rcll
lods
jg
cwtl
mov
pop
inc
mov
push
mov
and
daa
inc
pop
add
lods
add
aad
xlat
push
jb
cmpsl
mov
inc
repnz
out
xor
push
rolb
mov
bound
xchg
repnz
imull
add
mov
fdivr
pushf
popa
jne
dec
sbb
jle
xor
mov
je
ret
xchg
dec
or
jnp
xchg
xchg
out
popf
xchg
icebp
js
push
imul
xchg
pop
mov
cmpb
ss
or
xchg
inc
or
and
mov
push
ret
sarb
inc
call
dec
mov
jne
fistpl
mov
les
jb
mov
xchg
nop
and
and
cmpsb
pop
shl
sbb
jnp
push
out
jne
insb
add
mov
jge
lods
jae
pop
sub
out
in
fwait
xor
mov
jge
mov
and
ret
in
mov
inc
sub
mov
jmp
push
cmpb
mov
pop
xchg
pushf
mov
cld
ds
out
mov
hlt
push
dec
cmp
inc
call
fwait
and
daa
int
sbb
cmp
sub
fsts
in
in
shll
outsl
daa
xor
adc
out
stos
ja
pop
lcall
dec
dec
icebp
int
mov
repz
mov
jnp
lods
test
adc
pop
fbld
decb
cmp
adc
fisttpl
scas
das
call
imul
dec
add
popf
mov
shrb
cmpsl
mov
mov
mov
stos
adc
out
mov
dec
push
arpl
stos
xchg
insl
push
arpl
test
push
push
xor
sbb
dec
jmp
ljmp
nop
fwait
cltd
push
shll
and
shll
aam
xchg
dec
scas
stos
mov
insl
lds
or
fwait
mov
arpl
ds
shrl
lahf
xchg
out
push
push
push
push
push
mov
xchg
movsb
mov
ljmp
pop
xor
cmp
inc
xchg
mov
mov
pop
iret
dec
jno
movsl
push
adc
fistpll
push
xchg
repnz
cli
xlat
fldt
pop
pop
pop
popa
lea
or
dec
push
jae
and
shlb
insb
shr
incb
pusha
xchg
pop
mov
ss
cmp
adc
out
mov
movsl
jle
jecxz
cwtl
mov
nop
inc
std
mov
out
push
xor
cmovns
jae
ret
xor
out
dec
mov
xchg
sbb
aam
loop
popa
dec
cmp
ffree
jne
mov
test
inc
add
out
fcompl
add
adc
mov
sbb
xchg
and
xor
mov
rcrb
inc
mov
cli
xchg
jns
mov
pusha
and
cmp
xor
dec
jmp
cmp
adc
lods
and
mov
loopne
addl
mov
sub
xchg
clc
int
ret
lcall
push
aad
fisubl
outsb
roll
xchg
inc
neg
shr
scas
repz
sub
jle
jmp
test
cmp
sub
loope
ret
fbstp
mov
sub
and
or
adc
add
stos
ljmp
arpl
adc
shrl
mov
cmp
adc
pop
fcomi
ss
sti
sub
jo
push
and
and
xchg
mov
mov
loop
pop
das
ss
add
adc
push
mov
xchg
pop
ret
mov
lods
xchg
or
and
mov
xor
push
rcll
push
lods
lods
xchg
ror
insb
push
outsl
daa
ret
lock
ds
jns
in
push
cmp
scas
mov
adc
cmp
mov
push
movsb
jmp
cld
popf
sbb
std
adc
jne
jl
adc
and
aam
int
add
or
inc
adc
inc
inc
test
lock
cmp
mov
push
inc
push
in
pop
pop
mov
lock
or
and
int3
fs
push
test
dec
xor
dec
pop
sarl
cs
sbb
es
push
lret
pop
dec
sbb
and
sub
filds
loop
and
push
mov
lahf
jmp
dec
push
push
adc
mov
cmc
push
sbb
mov
mull
or
aad
mov
int
sbbl
fwait
out
push
mov
nop
jg
xchg
jle
ficompl
std
cli
imul
push
inc
movsl
jns
sbb
ret
xchg
jmp
inc
shrb
inc
dec
pop
shlb
gs
fs
or
xlat
jmp
xor
lds
in
mov
ljmp
push
div
cmpsb
out
rcl
inc
movsl
pop
leave
mov
sub
je
mov
xorl
orb
mov
sti
pop
aam
les
imulb
int3
inc
lcall
popf
enter
cmp
mov
inc
lret
mov
sub
mov
into
hlt
out
pop
int3
repz
mov
jecxz
adc
or
test
repz
in
dec
mov
mov
mov
loope
cmp
ja
pusha
clc
pop
orb
mov
sbb
cmp
out
divb
xor
inc
stos
lahf
aam
push
mov
jbe
fbld
pop
jmp
and
push
xor
add
addl
cmp
fldcw
mov
cli
sbb
cmp
pop
xor
ret
lods
dec
ret
les
mov
mov
rorb
sti
mov
cmp
push
pushf
inc
out
in
pushf
das
jge
cmp
and
mov
add
add
fsub
xchg
shl
jecxz
or
push
push
lock
cmp
inc
lods
jb
sub
inc
mov
sbb
in
loope
mov
sub
mov
inc
lahf
adc
xchg
clc
lods
loope
jl
incl
fldt
pop
cmc
repz
sub
jmp
andnps
imul
push
fisttps
sub
ficomps
rorb
cmp
xor
fisubs
xchg
xchg
jmp
mov
inc
insl
pop
lahf
fstpt
int3
ret
add
cmp
out
mov
xchg
scas
ret
lret
xor
mov
push
dec
jo
adc
dec
dec
inc
incb
fs
jmp
xlat
lahf
scas
sub
clc
fistps
adc
imul
pop
arpl
ljmp
jns
test
jno
adc
add
mov
and
repnz
daa
int3
dec
repz
dec
xchg
mov
scas
int
cmpsb
lods
test
lar
fs
mov
push
jbe
stos
fwait
push
pop
adc
jns
xchg
mov
movsb
xchg
adc
cmp
dec
xchg
in
lcall
iret
inc
xor
fisubs
sti
xor
outsl
xchg
stos
jg
rcl
xor
testl
mov
and
rcrb
sub
test
cmpsl
shlb
lea
or
mov
mov
dec
pop
inc
pop
stc
dec
in
out
es
mov
in
out
add
stos
jg
push
orl
fwait
pop
cmc
stos
lret
and
and
adc
adc
mov
mov
lods
sti
mov
dec
mov
xchg
pop
decl
inc
mov
das
popf
into
std
wrmsr
mov
xchg
jae
push
sbb
adc
jnp
mov
or
leave
popf
pop
addl
in
mov
dec
xchg
test
push
sbb
xchg
mov
imul
lahf
pop
aaa
mov
mov
or
shl
adc
rcrl
inc
jnp
sub
or
clc
fstpl
dec
dec
adc
ret
jne
mov
add
fmuls
jecxz
adcl
mov
push
jae
and
or
fcmovnbe
xor
cmp
pusha
add
or
cmc
outsb
and
xchg
mov
push
pusha
pop
fwait
div
cmc
fnsave
lret
imul
jns
movsb
xlat
rolb
addr16
mov
push
mov
jbe
cwtl
adc
adc
outsl
xor
sbb
in
lcall
push
into
lods
mov
call
outsl
addr16
rcrb
push
aam
fistpll
push
sbb
movsb
movsb
shll
out
sbb
loop
sbb
sti
rcl
push
icebp
mov
int
mov
push
subl
inc
add
push
and
call
inc
xchg
aam
lahf
es
mov
outsb
pusha
hlt
fs
data16
jl
fdivrl
jae
in
out
mov
mov
sub
stos
push
lock
stc
dec
cltd
fwait
or
out
stos
lods
stos
and
out
mov
je
xor
movsl
mov
sahf
push
inc
sub
bound
mov
or
mov
jg
xchg
fistpll
sub
and
fdivs
pop
insb
cmpsl
pop
push
cmp
or
hlt
bound
sub
insl
sahf
lods
das
add
es
lds
xchg
mov
stos
in
lods
out
dec
xor
bound
xchg
adc
pushf
and
inc
cmc
mov
dec
js
and
mov
xor
inc
dec
adc
xchg
pop
loopne
push
push
mov
xor
jp
aaa
and
add
test
jbe
and
mov
inc
sbb
pop
sub
mov
or
mov
in
xchg
sub
jecxz
mov
sti
stc
jb
sub
dec
cmp
mov
mov
inc
ljmp
sbb
sub
add
stos
lahf
pop
scas
cmp
mov
imul
mov
int
mov
popf
inc
aas
mov
sti
adc
and
enter
idivb
jl
and
rorb
mov
and
mov
in
test
scas
and
push
in
sub
cld
lods
xchg
xor
sti
push
inc
lds
roll
mov
xor
push
sub
aas
pop
adc
pop
or
or
sub
dec
xchg
xchg
or
add
nop
push
mov
es
ret
lods
add
cmpsb
out
popf
inc
pop
lea
stos
ret
and
lds
test
sub
jno
fadds
adc
int
sti
out
mov
test
loop
push
std
clc
dec
and
out
iret
popa
adc
mov
inc
gs
aas
fs
mov
leave
or
nop
fld
inc
imul
les
lods
nop
sbb
lods
jmp
inc
mov
or
fcom
clc
sbbl
adc
cmp
pushf
sub
inc
or
cwtl
lock
ret
xor
fwait
push
mov
imul
call
jg
sti
sbb
pop
aas
rolb
mov
sub
jns
das
add
mov
pop
gs
jecxz
outsb
out
adc
addr16
sub
xchg
add
mov
clc
ret
mov
ljmp
sbb
xlat
push
push
mov
out
jl
cli
cmp
cmp
fcmovnu
mov
adc
fcoml
in
daa
xor
daa
insb
xchg
xor
cmpsl
xor
sub
cmp
inc
and
loopne
sbb
cmpsl
ret
push
test
or
fwait
xchg
gs
jne
jno
cmpsl
filds
rcrb
paddusw
mov
pop
aad
les
mov
xor
out
icebp
test
stos
in
test
cmc
cld
std
fcmovnu
pop
pop
dec
idivw
jge
mov
dec
fwait
pop
pop
loopne
es
push
scas
test
xchg
xchg
dec
repnz
das
ds
or
lahf
inc
mov
lock
add
js
aam
pop
dec
ds
or
stos
mov
lock
sbb
xchg
dec
pop
dec
pop
push
fistpll
sub
and
jb
mov
data16
or
incb
jle
iret
les
pop
xor
fstp
into
imul
sub
movsb
sbb
rcr
int3
xor
inc
and
sarb
sti
push
ja
and
push
in
sahf
mov
std
leave
add
ret
aas
call
sbb
cmp
push
adc
or
ja
int3
mov
call
fs
insl
lock
inc
mov
pop
loope
loope
mov
in
popa
repz
out
push
cli
add
add
lea
mov
leave
xor
sbb
inc
mov
scas
jnp
push
fnstenv
and
jp
add
mov
sub
sahf
jp
test
xchg
shll
cmp
push
cmp
enter
inc
mov
jne
adcb
stc
fldenv
cmp
pop
insl
fs
cwtl
mov
mov
bound
pop
push
ljmp
jno
mov
sub
cmpsl
fcoml
mov
cmp
sbb
pop
and
rol
mov
push
mov
jl
dec
push
sahf
outsb
jb
pop
push
sub
sbb
aad
adc
push
inc
dec
fwait
cmp
sbb
push
cmp
enter
dec
nop
xor
pushf
mov
popf
xchg
sbb
adc
ja
inc
int
ret
sub
out
call
jne
and
rol
cmc
test
jo
into
mov
push
cli
jmp
pop
hlt
pop
push
fnstsw
pop
frstor
cmp
ds
mov
int
outsb
mov
fisubrl
push
leave
and
or
pusha
pop
in
xlat
mov
xor
inc
dec
enter
jns
popa
inc
fnstenv
xchg
les
dec
pop
pop
cmp
jg
movsb
popf
repnz
ja
dec
ljmp
fistpll
sbb
bound
add
push
shll
imul
inc
pop
repnz
pop
mov
xlat
xor
jne
xor
sarl
xor
call
not
rcll
mov
pop
cmc
je
sbb
xor
jecxz
push
add
mov
cwtl
movsb
adc
lea
inc
and
iret
mov
stc
mov
jg
mov
jl
push
jl
xchg
xchg
mov
adc
int
jl
int
and
or
and
cmp
mov
xor
bound
xor
adc
cmp
lods
dec
lret
incb
inc
js
jne
js
jb
popa
sti
xchg
mov
xor
test
sbb
adc
mov
cmpsl
hlt
inc
and
insb
aas
pushf
idiv
int
mov
lods
mov
add
mov
mov
inc
sti
or
idivl
xor
loop
ss
jecxz
xor
imul
or
int
lods
out
adc
mov
mov
pop
pusha
lahf
lds
scas
mov
test
push
push
dec
js
push
fsts
xor
lret
cmp
popf
ficompl
or
loop
and
fisubrs
in
scas
insb
jo
pop
out
popa
xchg
and
pop
cmp
out
sbb
inc
mov
les
in
inc
test
scas
cs
mov
lods
sti
lods
fdivs
cwtl
mov
out
mov
lods
int3
and
adc
mov
cmp
addr16
ljmp
jb
push
cwtl
test
jge
dec
addr16
jg
inc
outsl
aas
pop
add
mov
scas
inc
or
das
aad
inc
test
imul
xchg
push
aaa
adc
lcall
mov
or
push
pushf
add
push
fcomip
push
ret
frstor
loop
sub
pop
ficoms
sub
flds
in
adc
enter
jecxz
clc
lret
das
add
mov
imul
stc
sub
daa
mov
out
add
mov
jo
and
lock
push
sub
mov
sbb
lcall
not
cmc
mov
jmp
mov
cltd
out
sub
jno
jg
jbe
les
and
inc
addl
into
xor
xchg
popa
push
pusha
push
sahf
scas
mov
inc
les
loope
cmpsb
pop
xchg
mov
mov
cmp
dec
pop
fld
clc
arpl
mov
mov
stc
sarb
mov
add
fnstsw
mov
out
cmpsb
xchg
lahf
and
mov
cmp
mov
add
push
mov
jae
test
jle
lcall
mov
xchg
mov
nop
shll
xchg
aad
dec
lods
shlb
roll
test
stc
or
out
cs
mov
inc
xor
sti
push
xor
in
aad
lods
and
rolb
pop
scas
aad
xor
inc
mov
mov
gs
mov
and
jle
and
repnz
dec
ret
lret
mov
cld
ljmp
les
fiaddl
xor
sahf
add
imul
adcb
dec
mov
ja
lock
mov
rclb
stc
enter
pop
pop
adc
mov
pop
jnp
dec
push
mov
mov
or
xchg
shrl
in
ja
inc
dec
inc
jle
clc
mov
dec
jmp
pusha
into
pop
shrb
in
rcl
mov
mov
sub
outsl
stc
fwait
cmpl
das
pop
inc
pop
loopne
or
fwait
xchg
dec
andb
mov
aam
push
inc
call
in
bound
int3
roll
stc
cmpsl
adc
lahf
int
cmc
ljmp
sti
jecxz
or
xchg
fidivrl
test
or
sub
andb
int
mov
insl
sub
and
pop
add
sbbb
pop
add
or
test
xor
add
and
and
mov
mov
cmc
and
rorl
daa
mov
repnz
lcall
mov
in
into
inc
mov
push
dec
loopne
dec
nop
pop
push
mov
xchg
cs
inc
cltd
cwtl
leave
lea
scas
mov
fnstcw
mov
xchg
and
scas
sub
lahf
mov
jbe
data16
or
cld
cmova
mov
cmp
and
test
jns
je
orb
nop
int
call
push
fsincos
push
cmpb
lcall
or
sub
mov
insb
adc
lods
and
insl
xchg
xchg
jb
dec
fwait
rol
push
mov
add
icebp
ret
addb
out
das
out
and
pop
or
pusha
sbb
or
js
in
xchg
cmpb
sub
dec
or
jo
loop
add
sahf
add
push
xchg
ljmp
dec
and
jge
sub
insb
mov
fldcw
lea
notb
or
fidivrs
dec
sti
ss
clc
push
dec
dec
enter
scas
mov
pop
dec
jb
loop
jbe
sbb
mov
ds
ss
lahf
mov
mov
daa
pop
inc
inc
xchg
xor
jmp
repnz
dec
scas
xor
sbb
ret
enter
std
mov
sahf
pop
mov
sbb
jecxz
sti
xchg
repz
pop
lret
pusha
cmc
fmull
xor
inc
scas
pop
insb
mov
leave
loope
pop
daa
and
notl
sbb
inc
scas
ret
and
stos
test
lret
outsl
mov
mov
pop
test
dec
gs
repz
cmp
jo
adc
cmp
shll
push
and
lret
push
mov
cmpsl
and
nop
testl
lahf
dec
push
scas
xorl
in
push
sbb
jnp
mov
and
out
xor
sbb
iret
out
insb
xchg
aam
xchg
or
sub
inc
inc
adc
inc
fmuls
orb
shlb
lods
push
ss
insb
lea
test
push
iret
cmp
stos
mov
xorb
movsl
xor
adc
mov
sbb
mov
mov
lock
dec
adc
pop
xchg
outsl
or
outsb
aam
fistl
push
push
pop
aaa
mov
repnz
mov
scas
cld
in
ret
push
sub
cmp
ja
dec
lock
mov
movsb
push
shll
aad
xchg
pop
sarb
pop
add
and
daa
inc
push
dec
sarb
insl
daa
fldl
lcall
mov
ljmp
icebp
mov
sahf
mov
and
and
out
and
mov
xchg
mov
lea
push
push
rcrl
xchg
cmova
fistl
push
mov
xor
jo
mov
andb
push
mov
mov
cmp
or
push
pop
insl
ret
dec
add
pop
dec
cmp
shlb
xor
cmp
out
mov
add
lods
lods
adcb
icebp
shlb
lcall
dec
jb
hlt
rcrl
or
jne
mov
aas
sub
enter
lock
pop
ret
mov
enter
push
mov
or
jecxz
in
jmp
mov
out
cli
cmc
jle
sti
xor
mov
jb
pop
loopne
sub
jge
sub
stos
mov
js
inc
pop
mov
cltd
inc
sub
fldcw
leave
push
push
sbb
mov
repz
cmp
mov
inc
xchg
fnsave
mov
adc
sbb
das
sbb
fwait
pop
xchg
add
mov
sti
fcmovnu
mov
and
nop
inc
adc
or
imul
popa
or
jno
cmc
push
pop
nop
xchg
sub
jge
fldcw
pusha
sub
sbb
mov
movsb
xchg
mov
es
and
test
mov
add
xchg
into
pop
push
shll
dec
push
test
jecxz
inc
dec
mov
xchg
sub
xlat
cmp
das
and
mov
sbb
cmp
jnp
mov
into
jl
cltd
lahf
cmp
lds
mov
or
ss
mov
mov
aaa
sub
or
pop
xor
roll
out
data16
sbb
push
push
mov
cwtl
iret
cmp
testb
loope
dec
shlb
ja
inc
dec
jnp
inc
push
outsl
mov
mov
pop
test
cmc
jg
mov
scas
jecxz
rol
and
pop
jne
fisubs
rol
movsb
insb
fmuls
ljmp
imul
mov
jbe
or
lock
sub
xchg
mov
iret
ds
sub
add
mov
or
lock
hlt
adc
ret
sub
pop
out
cmpsb
push
in
orl
jb
jl
loopne
jne
xor
in
cmp
aad
insb
das
test
cmp
xchg
stos
pushf
clc
sahf
sahf
mov
add
insb
jo
ret
fs
sub
aas
jp
ja
xchg
outsl
clc
les
jl
int
jmp
ret
je
lods
mov
ds
and
and
cmpsl
out
push
jno
push
addr16
mov
push
ljmp
aas
xchg
cmp
dec
lea
dec
or
das
add
pop
dec
add
xor
and
fidivrl
sti
outsl
push
xlat
push
lock
cmp
lret
ljmp
movsl
inc
test
data16
sahf
int
and
call
adc
push
sti
ljmp
sbb
sbb
iret
or
pop
mov
pop
test
xchg
adc
cmc
test
pop
scas
jno
inc
sbb
push
mov
orl
popf
arpl
sub
jns
enter
inc
lods
cmp
inc
popa
adc
xlat
clc
mov
shlb
lcall
sub
xchg
push
push
dec
orl
inc
aaa
pop
or
mov
fstpl
push
or
arpl
push
mov
mov
push
in
fimull
cld
or
loope
xchg
movsb
and
xlat
inc
loopne
or
inc
repnz
adc
push
fcompl
in
movsl
jge
mov
in
aas
or
jno
push
pusha
mov
fisubl
jno
addr16
xor
lock
jmp
adcb
jb
addb
xchg
push
xchg
pop
pop
xlat
dec
ss
cmpl
ret
dec
xor
rolb
xchg
push
mov
inc
sbb
jne
mov
loopne
fsincos
in
inc
aad
cmpb
xchg
jo
outsb
ucomiss
xor
je
call
pop
push
gs
enter
xor
fwait
jae
jo
lahf
inc
das
lahf
adc
cmpl
ja
jae
push
dec
cmp
mov
push
push
mov
mov
sysexit
xchg
out
add
inc
repnz
mov
push
in
mov
push
nop
sarb
add
add
push
pop
je
mov
es
lds
mov
andl
jle
xor
jns
mov
pop
subb
divb
cmp
dec
xchg
imul
and
or
int3
pop
inc
shr
das
insb
xchg
ja
in
leave
flds
sbb
pop
cli
push
or
cld
mov
in
mov
or
stc
popf
ss
or
mov
cmp
mov
nop
push
ja
push
fsubrl
xor
aad
jmp
ficoml
xchg
and
add
iret
push
inc
sbb
add
sub
push
cld
fisttps
das
scas
enter
pop
cs
cmpsl
mov
call
add
xchg
dec
icebp
lea
sbb
cmp
mov
jmp
insl
push
test
xchg
jb
or
and
add
sar
push
push
mov
jl
xchg
shl
cmpsl
and
aaa
nop
inc
push
or
cmp
xlat
in
lret
push
sub
jbe
ret
movsb
ret
ret
jnp
dec
pop
xchg
cmc
pop
add
lahf
inc
mov
pop
push
test
xchg
jmp
adc
xchg
and
arpl
xchg
cmp
mov
pop
xchg
mov
inc
in
insb
adc
repz
test
mov
fidivl
adc
push
enter
fstpl
lahf
pop
arpl
add
push
sbb
jb
sub
in
loopne
inc
test
adc
cwtl
xlat
mov
clc
xchg
add
pop
mov
add
sbb
and
lds
jp
xchg
push
mov
call
pushf
mov
sbb
dec
and
mov
dec
shll
add
adc
pop
mov
mov
popa
ret
jmp
addr16
xor
testb
sbb
cwtl
mov
pop
xor
outsl
ja
jno
pop
lea
push
pop
rolb
int
enter
add
mov
test
test
jbe
or
jae
aam
mov
adc
addb
shrd
mov
in
ja
outsb
loopne
pop
andb
jne
ficompl
mov
sbb
jecxz
push
mov
mov
add
stos
outsb
sub
lods
stos
popf
mov
aad
and
das
mov
sbb
mov
into
rol
cltd
test
mov
xchg
stc
xchg
jb
pop
jnp
mov
push
mov
fnsave
sbb
xor
pop
movsl
mov
cmp
cmp
adc
add
and
fidivs
leave
push
iret
sbb
iret
xchg
sub
add
int3
hlt
into
pop
std
add
outsl
cmp
insb
cmp
dec
es
jno
push
shrb
aam
xchg
cs
enter
lret
lcall
mov
into
mov
xchg
push
lret
mov
in
mov
inc
adcl
adc
gs
jns
cmp
cmp
mov
insb
aam
stc
xor
xchg
dec
out
rcl
push
mov
mov
rolb
and
outsb
imul
jns
int3
and
in
mov
inc
or
scas
arpl
sub
add
gs
dec
lods
sbb
inc
mul
in
xor
movsl
mov
fdivrl
jo
std
ret
sbb
cmp
jb
jmp
sub
mov
or
jns
lock
data16
cltd
pushf
jmp
fcompl
scas
lret
jae
sar
popa
ja
ss
xchg
je
or
into
stos
push
fildll
cltd
jl
call
add
js
daa
inc
jecxz
add
popf
aas
xchg
addr16
push
sbb
lods
inc
or
or
or
mov
push
or
jecxz
fdivs
xchg
arpl
icebp
jne
cmp
das
imul
sub
mov
add
xor
imul
daa
cmp
movsl
out
repz
dec
data16
ffreep
lret
repnz
hlt
xor
xchg
clc
dec
jge
call
imul
popf
fistpll
sbb
shrl
mov
jno
and
cmpsb
and
adc
mov
in
fists
cltd
fdivrl
xchg
rorl
ret
leave
adc
jae
mov
pop
pop
xchg
cmc
mov
sbb
and
adc
push
in
arpl
movsw
xchg
cli
xor
and
fsts
mov
addr16
jbe
inc
mov
jnp
push
rorl
mov
mov
arpl
xchg
sub
sbb
push
xchg
push
dec
stos
pop
jle
lcall
or
mov
jl
add
xor
js
cmp
insb
pushf
ret
push
and
sti
push
xchg
leave
test
dec
lods
jns
repz
jb
bound
cld
test
outsl
dec
cmp
cmp
ficomps
js
sahf
jecxz
pop
int3
xor
lahf
imul
mov
test
ljmp
pusha
mov
push
mov
pushf
mov
ret
and
adc
or
xchg
dec
out
mov
cmc
and
mov
inc
outsb
adc
jne
mov
stos
sub
lock
pop
push
repnz
out
out
pop
mov
add
and
cmp
jp
dec
add
fistpll
pusha
xchg
jmp
inc
sbb
bound
rorl
or
lret
ret
js
rorl
cmp
cwtl
clc
inc
ljmp
xchg
lds
mov
xchg
pop
cs
test
lds
adc
gs
js
mov
ds
out
lret
jns
fst
xchg
pusha
and
iret
adc
seta
xor
je
int
or
cmpsl
ret
add
in
cmc
ljmp
in
cmp
inc
xor
cmp
sarb
dec
sbb
adc
dec
daa
out
xchg
arpl
stc
movsl
mov
repz
push
mov
push
fidivrl
cmpl
push
imul
adc
loope,pn
rcrb
sbb
push
addr16
mov
subl
dec
outsb
mov
int3
enter
cmp
je
push
stc
or
sbb
dec
test
mov
aad
inc
mov
rorb
addr16
in
scas
dec
insl
jge
call
jmp
das
sahf
inc
mov
push
jecxz
addr16
dec
ficoml
leave
mov
dec
mov
and
push
call
and
into
test
sub
push
sub
sti
popf
hlt
mov
leave
or
imul
jnp
aas
jle
dec
movsl
mov
adc
cmp
scas
popf
inc
std
inc
insb
mov
sbb
cltd
in
jmp
cmp
dec
cmp
mov
add
in
adc
xchg
imul
jnp
aad
enter
mov
lods
jno
int3
xchg
sub
or
xchg
ficoms
or
ss
cli
mov
aas
cmp
es
fst
push
or
adc
pop
out
repnz
and
ds
mul
mov
or
cmpsl
bswap
cld
jg
mov
fucom
aas
arpl
popa
mov
dec
mov
movsl
sbb
add
addr16
pop
or
loope
inc
inc
js
fmuls
and
in
in
xor
lods
lock
les
inc
cmp
popf
cmp
test
and
arpl
cmc
mov
and
xor
mov
nop
adc
stc
add
clc
or
mov
push
popa
fsts
add
fcomps
stos
lret
mov
bnd
push
xlat
dec
das
pop
orl
xchg
inc
cld
add
jne
or
outsl
and
cmpsl
stos
inc
push
mov
aad
sahf
inc
out
or
jecxz
inc
inc
push
jle
mov
mov
lret
repz
sub
sbb
cmpsl
xor
mov
pusha
push
push
std
mull
xchg
sbbl
das
mov
frstor
movsl
and
pop
sbb
xor
push
je
fnstsw
cmp
lock
mov
jmp
lcall
jb
int
xchg
fidivrl
shlb
xlat
push
jae
aad
test
push
inc
adc
sub
inc
mov
add
icebp
lock
leave
fsts
pop
jbe
mov
push
mov
mov
sahf
jns
sub
xchg
lcall
push
xor
leave
mov
xlat
pop
rcrl
cli
xchg
out
test
cwtl
lcall
test
ss
std
aam
mov
out
xor
mov
je
aad
pushf
xchg
addl
mov
inc
int3
jae
sbb
add
sub
lret
hlt
sbb
loop
shll
imull
jbe
mov
aad
lods
sbb
into
hlt
les
xor
mov
jg
test
mov
xor
inc
add
jecxz
mov
xchg
and
fwait
mov
xchg
cwtl
and
push
xchg
and
pop
shrb
lock
jne
adc
xor
push
pop
xchg
adc
push
insb
cld
push
lds
mov
gs
out
push
movsl
fisubl
es
jecxz
lea
inc
jmp
mov
test
pop
loopne
fcomi
jae
aas
imul
ret
call
int
imul
xor
hlt
inc
test
mov
xchg
les
test
jge
lods
pop
adcb
js
inc
xchg
push
cs
cmp
loop
mov
pop
and
les
mov
rorb
jle
or
cmp
filds
mov
push
test
dec
outsb
jl
sbb
mov
xchg
cmc
int
in
sub
stos
push
mov
imul
jecxz
inc
xorl
and
mov
lock
andl
pop
pop
push
sub
fcmovb
xor
sbb
cmp
ret
mov
xchg
xchg
xchg
ret
mov
xor
pop
stos
ljmp
xchg
js
mov
sub
in
push
les
xchg
cmc
testb
lcall
cmp
sbbb
stos
pop
pop
inc
dec
leave
mov
stc
mov
inc
xlat
sahf
outsb
xor
fsubrs
std
xchg
dec
mov
mov
adc
push
adc
pop
lret
ljmp
jbe
fstpt
or
lds
xor
std
cmpb
fldt
inc
cmp
int3
mov
or
cvtpi2ps
in
ja
or
stos
js
jecxz
adc
je
ljmp
inc
in
ror
cmc
or
dec
icebp
or
sbb
push
push
sarb
mov
mov
in
adc
insb
scas
mov
fdivrs
shlb
jbe
aam
loopne
xchg
repz
ja
add
shlb
dec
sbb
andl
in
pop
mov
mov
sbb
dec
ficoms
mov
adc
add
dec
or
dec
xor
jnp
adc
lahf
ljmp
adc
loope
fildl
and
cmpsl
push
lret
imul
xor
pop
fdivr
jbe
hlt
repz
cmp
fs
jge
in
fnstsw
sbb
ss
rorl
pop
repnz
lret
fs
mov
jge
outsl
or
arpl
xor
imul
jb
ret
jno
cmpsb
mov
lret
sti
icebp
out
xor
test
push
fistpll
fildl
inc
pop
scas
xor
clc
fldcw
add
idiv
xchg
push
dec
fwait
dec
adcl
mov
sbb
in
in
mov
ljmp
push
sbb
fs
dec
mov
cltd
fwait
popl
xor
shlb
mov
inc
jns
movl
outsb
xor
dec
cmp
jmp
push
pop
pop
aas
push
and
imul
scas
push
fsubr
jp
mov
add
jl
push
adc
cmp
cmp
pop
sub
out
push
outsl
repz
pop
pop
fdiv
push
std
gs
mov
out
mov
sub
add
jecxz
aas
arpl
mov
sarl
cwtl
xchg
add
cmpsb
out
dec
inc
push
call
lret
psubb
addr16
fcmovnb
icebp
movsw
pop
aam
or
cld
imul
mov
dec
or
out
add
xor
add
push
aas
inc
pop
mov
push
in
xchg
cmp
xor
loope
xchg
cltd
push
add
ret
sbb
xor
daa
gs
aaa
push
pushf
dec
mov
dec
fiaddl
movsb
fnclex
cmpsb
cli
or
mov
pop
push
divl
in
cmp
hlt
pop
push
dec
jbe
xchg
xchg
push
xchg
sbb
ljmp
test
push
int
mov
jne
cmp
lcall
push
mov
in
xor
cs
sub
outsl
push
outsb
jae
mull
pop
lret
inc
add
jmp
dec
dec
mov
xchg
cmp
outsl
mov
or
lahf
roll
adc
or
ficoml
repnz
dec
xchg
pop
xchg
or
leave
jne
mov
out
into
lahf
cmp
add
sbb
xor
idivl
or
repnz
dec
mov
cmpsl
stos
loop
inc
icebp
mov
pop
cs
mov
push
xor
in
sbb
mov
arpl
pusha
es
js
imulb
xchg
xor
movsl
insl
mov
movsb
hlt
mov
outsb
divl
sub
in
dec
jae
mov
sbb
push
mov
and
mov
xchg
addr16
jecxz
cwtl
jecxz
les
xchg
lahf
adc
cmpsb
mov
das
sub
out
add
xor
jg
cli
push
loop
movsl
or
scas
rorl
pushf
mov
xor
faddl
inc
mov
aas
and
xchg
pop
sub
cs
subb
sub
jb
imul
lcall
iret
mov
test
cltd
or
add
fld
inc
inc
lahf
sbb
dec
jl
mov
in
sub
push
sbb
ljmp
dec
or
icebp
add
loopne
ficompl
adc
push
scas
mov
loopne
mov
ret
mov
das
outsb
jmp
cmc
xor
repz
add
mov
adc
sbb
neg
loopne
adc
mov
push
xor
mov
adc
jmp
cltd
jno
nop
out
in
rcll
cltd
adc
out
sbb
sbb
ret
pop
mov
and
fcmovnbe
fbstp
jne
mov
lcall
jns
mov
dec
test
xor
add
adc
repnz
std
pop
xchg
adc
xchg
mov
push
push
sbb
jne
pop
cmpsb
sbb
pop
mov
push
dec
pop
sbb
testb
cld
ret
sti
pop
inc
imul
push
xchg
mov
repz
iret
imul
ja
cld
lea
mov
xchg
mov
push
and
and
filds
xor
into
loope
stos
sbb
push
popf
rorb
sub
inc
sbb
sub
sub
pop
lahf
mov
pop
lcall
idivl
pop
es
dec
adc
loopne
mov
and
jne
movsl
or
fdiv
pusha
ss
adc
sbb
das
mov
sarb
aas
inc
popf
stos
pop
pusha
inc
in
mov
cmp
aas
mov
push
inc
add
mov
popf
popf
ret
popf
jecxz
pop
lods
enter
pop
out
les
rcl
jnp
mov
pop
xor
pusha
or
negl
mov
out
loop
loopne
repnz
adc
les
xchg
and
lods
movsb
xor
pop
adc
mov
aad
rorl
rorl
es
out
ja
inc
movsl
sbb
loop
fwait
outsl
mov
pushf
or
or
cmp
jno
fisubs
push
mov
lock
cmp
push
das
in
rolb
inc
clc
lret
mov
xor
jmp
pop
mov
call
xor
test
add
add
insb
lods
xor
sbb
inc
nop
mov
sahf
jb
out
cmpsl
pop
mov
sbb
imul
shlb
popa
popa
cmp
cmpsl
mov
setg
imul
shll
sbb
lcall
xor
mov
mov
cs
cmpsb
ljmp
lods
cmp
bound
mov
pushf
jno
pushf
pushf
pop
sbb
ja
cld
sbb
repnz
or
data16
sbb
stos
sbb
jg
and
mov
sbb
cmp
or
adc
imull
clc
mov
or
ljmp
add
out
push
jne
xchg
adc
and
sub
inc
xchg
outsl
test
and
push
int
repnz
dec
jnp
int
insb
jb
cmp
jl
push
jmp
pop
xchg
jbe
jmp
cmp
call
cmc
lods
inc
scas
mov
cmp
push
sub
xchg
pusha
arpl
pop
in
call
sbb
push
addl
arpl
gs
pop
mov
in
mov
pop
aam
push
lods
xchg
or
out
pop
popl
mov
inc
mov
xchg
out
or
jl
lock
xchg
jbe
cmpsl
jmp
xchg
out
push
dec
sti
sbb
fdivrl
outsb
ficompl
mov
fs
mov
daa
aam
out
jle
jb
sub
aad
lahf
adc
repnz
popa
inc
push
ror
jbe
and
aam
add
inc
xor
push
xchg
jno
push
mov
imul
fwait
icebp
rcrb
push
sti
mov
dec
dec
xor
mov
adc
test
mov
adc
sub
add
adc
cmp
mov
loop
test
enter
push
adc
pop
out
jo
nop
sub
insb
mov
movsl
ljmp
addb
and
into
rorl
dec
in
test
rorl
xchg
add
in
sub
pop
arpl
aam
cmp
push
push
adc
xchg
and
and
clc
add
and
les
sbb
mov
mov
adc
push
add
add
outsb
push
dec
roll
rcrb
cli
push
push
dec
adc
stos
jg
or
shrl
out
pop
fxrstor
or
repnz
int
cmpsl
outsl
jl
test
pop
pmaxsw
jb
xchg
or
test
xor
in
lods
daa
daa
popa
icebp
dec
pop
mov
mov
sbb
sub
sti
push
inc
icebp
dec
fwait
jecxz
jl
jbe
stos
dec
cs
inc
and
inc
popf
and
mov
sub
sub
add
inc
cmpsb
fcompl
mov
or
inc
pop
dec
adcb
sbb
dec
hlt
call
lahf
sbb
push
inc
in
scas
and
mov
aad
pop
jbe
sbb
and
imul
add
jp
popa
xchg
push
push
pop
idivl
xor
icebp
frstor
ss
cmp
push
cltd
push
mov
pop
and
jmp
je
cmc
ds
or
lds
and
aaa
pop
shlb
scas
jns
push
fsubs
xchg
hlt
add
mov
idivb
cmpsb
outsb
aad
rolb
in
decl
cmpsl
cmp
call
data16
ror
or
call
xchg
xor
leave
sbb
lods
sub
cmp
push
pop
imul
and
cmp
dec
jecxz
popf
lods
mov
pop
nop
lret
enter
int
and
or
cli
and
cmp
mov
ljmp
lea
inc
xor
mov
dec
mov
mov
sub
and
outsb
mov
pop
test
pushf
xchg
fisttpl
int
rcrl
sub
leave
xlat
je
jno
or
xchg
and
jmp
pop
jg
sbb
jecxz
xor
loop
movsb
inc
xchg
or
fcmovnu
adc
inc
sarb
int
pusha
cmp
push
ss
inc
hlt
pop
adcb
cwtl
rorb
adc
jg
test
addr16
popf
test
out
pushf
add
inc
inc
pop
mov
mov
xchg
xchg
fisttps
dec
adc
cmp
mov
and
push
dec
stos
mov
dec
dec
lds
or
ja
add
cmpsb
mov
jns
mov
sub
mov
inc
mov
xchg
fbstp
je
push
mov
dec
add
pusha
test
repz
insb
xchg
int
push
mov
add
mov
push
push
movsb
pop
icebp
push
imul
and
and
jmp
or
subl
sbb
inc
imul
inc
insb
fbld
mov
es
dec
loope
testl
movsl
adc
sub
rorl
movl
dec
mov
cld
imul
dec
jnp
sahf
popf
pop
test
mov
xchg
sub
mov
es
sahf
push
cmp
xchg
sub
jno
sbb
imul
jmp
js
inc
orb
movsb
pop
xchg
and
movsb
mov
mov
lcall
lahf
jbe
sub
xor
push
push
inc
ret
jne
sub
scas
adc
jecxz
push
dec
scas
cld
lods
xchg
fs
insl
add
adc
mov
inc
fnstcw
js
add
ss
pop
out
out
aad
jl
fwait
push
stc
mov
lahf
fs
lcall
aas
movsl
pop
insl
test
xor
lods
aaa
xchg
lret
lods
sub
xor
sub
fwait
or
or
sar
dec
mov
xor
push
popa
stos
lret
rolb
scas
pop
addr16
sarb
fidivrl
int3
ljmp
pop
dec
stos
add
dec
sarb
aaa
jecxz
inc
add
push
loop
xor
jecxz
mov
sbb
cmp
cmc
sbb
xchg
lret
insl
je
xor
pop
cmpsb
sub
or
pop
rclb
xchg
jp
sbb
or
jb
mov
sbb
pushf
mov
jo
add
mov
aad
daa
iret
xchg
pop
mov
dec
jno
add
stos
das
or
or
adcb
arpl
leave
cs
mov
and
add
xor
data16
push
xchg
mov
cmp
inc
and
cmp
jmp
mov
mov
dec
sbb
mov
mov
xchg
iret
sub
popa
adc
xor
shl
imulb
sarl
and
inc
outsb
mov
out
sbb
and
xor
das
sbb
or
cmpb
push
out
xor
cmp
and
sbb
or
pusha
test
cltd
ja
clc
or
mov
lahf
negb
aam
fcompl
mov
jge
push
test
loop
ret
xchg
dec
popf
xor
insb
call
scas
dec
lret
inc
xchg
addl
pop
sub
jno
fldenv
sbb
mov
imul
arpl
data16
fildl
movsl
cmp
icebp
or
leave
mov
mov
and
pop
ret
push
in
and
and
xor
pop
aaa
lods
pop
pop
xor
clc
nop
shll
adc
sahf
jbe
call
dec
loope
inc
or
ds
cli
les
loopne
mov
lods
insl
and
push
insl
mov
fnstsw
xchg
push
sub
cmp
jo
out
ss
jge
dec
cmp
jnp
xor
add
push
rorb
lea
idivb
stos
lret
dec
aad
mov
jge
or
and
xchg
lods
shr
xor
dec
sbb
adc
aas
mov
adc
add
arpl
addl
arpl
shrb
mov
idivl
jno
sub
in
inc
ds
into
cmp
dec
adc
jge
xchg
in
mov
pop
std
add
repz
mov
push
mov
jp
inc
sarb
int
rclb
inc
dec
out
pop
dec
loop
cltd
sub
les
ljmp
test
or
loopne
xchg
sub
push
dec
lcall
xchg
dec
movsb
sahf
mov
pop
in
add
jmp
negb
mov
in
or
sbbb
mov
in
jns
loop
pop
push
out
movsl
add
sub
pop
pushf
and
int3
clc
dec
hlt
add
fisubl
mov
mov
inc
cmp
mul
popf
fidivs
pop
sbb
push
mov
add
adc
fs
add
pop
shl
xchg
mov
outsb
cmp
imul
lods
xlat
or
xchg
rclb
cli
adc
dec
data16
lods
ret
insl
je
mov
push
adc
add
cmc
das
cwtl
fmull
xor
or
test
cltd
push
inc
fwait
xlat
loope
andl
add
push
leave
mov
push
pop
fistps
test
test
ret
xchg
cmp
pop
or
popa
adc
les
repnz
mov
das
adcb
testl
test
mov
scas
popf
or
or
mulb
lahf
mov
push
mov
imul
push
mov
lahf
xor
xchg
push
lcall
out
fsub
popa
aad
push
cmp
jnp
pop
sahf
cmpsb
jge
push
rol
adc
add
leave
xlat
mov
mov
or
cmc
fisttpll
inc
sbb
hlt
pop
inc
add
mov
roll
dec
je
inc
popf
pop
outsl
or
int3
fstps
mov
out
inc
fwait
sbb
rorb
add
mov
xor
pop
popa
out
push
or
pop
xchg
adc
sti
cmp
aas
pop
add
mov
or
out
lock
adc
xchg
mov
inc
sbb
lret
shr
lods
jle
and
pop
cltd
aam
xchg
jmp
or
adc
jb
out
incl
xchg
in
fmuls
dec
lds
cmp
cmp
out
cmpsb
pop
add
lret
or
sub
shll
imul
sbb
ja
leave
outsl
pop
mov
push
into
and
sbb
test
xor
dec
pop
mulb
fimuls
adc
pop
cmp
aam
or
popf
test
popf
jmp
inc
inc
out
lds
jns
pop
out
xchg
adc
cmp
ljmp
dec
das
lock
xor
lret
fwait
es
fsubs
cwtl
inc
mov
inc
call
lret
xchg
ja
lea
jae
add
dec
ret
fwait
daa
pop
mov
das
jecxz
inc
aas
ret
sbb
mov
and
mov
sbb
pop
gs
jb
bound
or
in
mov
jp
push
and
and
xchg
or
jp
mov
xor
pop
jl
cmp
jle
adc
dec
in
xchg
pop
ficomps
insb
xchg
outsb
ret
xor
fnstenv
add
inc
add
fidivs
cmpsb
xor
lret
pop
sti
lods
addr16
dec
stos
sbbb
sbb
inc
test
test
push
out
mov
push
rdmsr
mov
cwtl
or
push
jg
test
push
insl
adc
or
sbb
push
outsl
jmp
pop
xor
dec
mov
adc
dec
cmp
inc
std
xchg
mov
mov
mov
stc
imul
inc
sbb
or
fsubs
push
dec
mov
sub
scas
out
sbb
push
out
cmpsl
sbb
lahf
fdivl
dec
lods
xor
mov
push
hlt
out
cmp
ljmp
lock
and
jno
ror
cld
repnz
inc
push
fwait
outsb
push
lcall
insl
adc
xlat
jg
jo
insl
inc
cmpsl
mov
call
lods
add
and
shrl
mov
adc
outsl
mov
bound
js
add
adc
inc
out
jb
add
xchg
mov
xchg
lods
mov
sub
mov
add
xorb
jle
or
mov
pusha
sahf
fcoms
in
sarb
popa
mov
xor
push
ficompl
mov
pushf
rorl
and
out
mov
data16
mov
push
es
push
les
cmpsl
inc
ljmp
push
and
out
jne
pop
pop
enter
out
xchg
xor
aas
les
jb
inc
icebp
push
push
dec
insl
nop
int
xchg
sbb
pushf
add
sbb
dec
pop
rclb
mov
jmp
mov
test
jnp
adc
xchg
lds
imul
xor
push
cli
dec
jno
aas
adc
xchg
dec
andl
inc
in
cmp
lea
mov
test
je
xchg
sbb
pop
lea
pop
ss
fsubl
out
movsl
div
rolb
insb
lods
dec
fimuls
cmp
adc
fwait
dec
mov
sbb
in
rcr
repnz
xchg
xor
jmp
mov
cmpsl
and
push
cli
test
cmp
push
pop
popa
and
imul
xor
cmc
nop
rcl
inc
enter
cmp
loope
push
sub
sbb
lret
into
jle
mov
cmp
cmpl
xchg
push
pop
pop
rcl
dec
js
fcompl
mov
push
test
out
mov
enter
push
fisubrl
std
lret
xor
sti
jb
fnstsw
sub
pop
inc
popa
fucompp
inc
pop
sub
sbb
sbb
scas
or
mov
fwait
jge
xor
xchg
xchg
pop
pop
xor
pop
jno
pop
add
popf
imul
ret
fsubrp
popf
sahf
xchg
and
push
or
test
icebp
inc
xor
add
ljmp
mov
mov
xor
shlb
sub
fsubrp
stos
fcmovu
xchg
leave
scas
sub
jl
push
cmp
popa
daa
push
cmp
scas
decb
xchg
sbb
jge
push
jle
dec
into
loopw
decb
aas
fcoms
push
and
add
jmp
mov
setns
stc
dec
jb
adc
leave
pop
xchg
and
cld
les
sub
push
daa
das
iret
in
inc
mov
test
xchg
mov
inc
adc
jns
xchg
ja
call
or
daa
addr16
inc
add
adc
leave
test
xchg
stos
mov
sbb
fs
ds
call
test
dec
clc
in
ret
and
xchg
movsl
mov
cmp
loopne
ret
test
pushf
loope
scas
mov
and
sbb
outsb
stos
les
sbb
adc
shrl
push
fwait
shlb
mov
in
lods
or
dec
xchg
arpl
fxch
rcll
cmc
mov
mov
lret
push
lods
lret
out
in
or
adc
and
pop
mov
sub
fisubs
mov
xor
jo
jmp
add
sub
or
loopne
ljmp
daa
lea
cwtl
sbb
mov
mov
ret
cmp
lret
adc
bound
pop
xchg
aam
push
mov
lea
xchg
mov
aad
pusha
shll
add
dec
sub
cmpsl
push
add
lock
sub
adc
jns
out
jbe
cld
ja
xchg
mov
push
sub
mov
mov
jge
int3
rorb
sti
hlt
adc
jne
aad
cmp
sub
xor
mov
mov
scas
push
sbb
mov
cmp
sub
inc
or
loop
push
bound
xchg
popa
cmp
xor
mov
ret
movsl
lds
mov
or
fwait
and
add
imul
repnz
fists
shlb
shll
mov
outsb
imul
sbb
fld
iret
cltd
fistl
test
scas
mov
in
in
dec
mov
adc
iret
cwtl
jne
cmp
into
cli
add
push
add
lds
jmp
push
jo
jecxz
or
adcb
out
cli
ljmp
loopne
sub
shll
iret
dec
shlb
cmc
scas
imul
fstl
in
les
fnstsw
pushf
popf
or
fmul
push
jmp
ja
rclb
xor
sbb
nop
adcl
mov
inc
ljmp
jns
fildll
mov
sub
cmp
sub
pop
xor
fdivs
pop
pop
test
gs
in
pop
ljmp
jo
cld
mov
cmp
or
and
jp
lds
xlat
stc
ret
insb
xor
sbb
icebp
cmp
ds
xor
or
out
sub
xor
cmp
xor
js
lods
in
and
mulps
pop
insl
fistpl
mov
movsb
push
add
jne
fsubs
jo
imul
iret
mov
cld
push
lods
cmpsl
insb
out
scas
es
and
pop
mov
sahf
inc
sbb
outsl
jecxz
adc
adc
pop
mov
shl
xchg
mov
mov
add
stos
pop
sbb
dec
pushf
add
out
sub
js
ss
push
lods
mov
scas
ds
ret
push
fidivs
les
sbb
loopne
jne
mov
aam
imul
add
fwait
pop
mov
xor
mov
andl
lea
inc
mov
dec
pusha
add
and
out
inc
cmp
pop
xchg
sti
dec
push
imul
xchg
adc
xlat
loope
mov
ds
add
pop
xchg
pop
mov
inc
loop
cli
jl
sahf
int
mov
setnp
mov
xchg
or
add
jb
mov
add
ret
decl
mov
ds
and
shrb
cmpsb
jg
sub
mov
int
jmp
mov
je
push
cmp
les
roll
out
fbld
cwtl
xor
enter
adc
mov
icebp
xlat
clc
push
mov
jp
mov
pop
inc
in
hlt
stos
popa
jbe
sbb
dec
push
mov
inc
mov
adc
jge
or
ljmp
pop
cmp
inc
out
pop
arpl
xchg
mov
mov
xchg
fistpll
subl
jg
pop
stos
popf
mov
or
dec
xchg
mov
xlat
xlat
or
cmp
mov
push
cltd
pop
inc
xor
or
scas
push
jns
cmp
jl
leave
out
pop
ja
or
addr16
dec
lods
pushf
cli
xchg
sbbl
jo
ret
int
dec
in
test
sbb
mov
mov
repz
sub
or
add
dec
sbbl
hlt
push
cmp
fiadds
outsb
mov
push
lds
aas
mov
xor
sbb
out
rcl
insl
jmp
cmpsb
mov
mov
mov
aaa
xchg
lods
and
and
popl
out
inc
sub
jmp
dec
jp
and
add
imul
add
sub
ds
xor
mov
cmp
cmp
xchg
stos
pusha
mov
notb
mov
repz
adc
adc
mul
and
in
mov
fidivrl
ret
jbe
test
je
cmp
arpl
lahf
js
mov
jge
popa
add
mov
cmp
xchg
or
jmp
pop
push
xor
cld
lds
aam
and
xchg
out
mov
dec
mov
ja
popa
add
pop
test
push
adcl
xor
sahf
mov
push
mov
cmp
lahf
lods
sti
stc
pop
push
jns
add
and
cmpsb
and
and
add
add
aam
mov
sub
daa
cld
rclb
sub
nop
inc
shr
xor
mov
xchg
arpl
aam
cmp
data16
fdivl
sbb
ja
loope
cli
jge
sbbb
or
ficomps
hlt
ret
inc
push
jne
shl
ret
sahf
jno
aaa
jnp
fs
lahf
lret
push
inc
negl
push
mov
je
jl
sbb
push
enter
sub
fcmovnbe
cmp
xchg
ss
nop
mov
and
out
mov
push
sub
in
sub
mov
in
shrl
fdivl
ljmp
mov
into
clc
cmc
and
shrb
bnd
inc
subl
and
roll
add
xor
jmp
mov
xor
mov
sbb
outsb
and
subb
sub
scas
inc
mov
or
icebp
lock
ds
outsl
xchg
sbb
mov
out
add
pop
clc
out
mov
movsl
stc
dec
cmpsl
lahf
aad
pusha
movups
mov
imul
adc
or
std
inc
sahf
sub
mov
fistl
push
outsl
nop
adc
mov
mov
lret
mov
in
pop
shl
xor
pop
movsl
or
out
aaa
xchg
mov
dec
xchg
outsl
clc
cli
add
jnp
push
jg
dec
loope
dec
jno
pop
push
and
pop
sbb
pop
pop
and
loope
pop
sbb
dec
dec
sub
lea
inc
scas
dec
popf
loopne
push
push
andl
lret
cmovs
add
mov
into
imul
xor
xchg
inc
adc
jge
bound
jne
cli
or
in
fnstsw
or
cmpsb
mov
cmp
sbb
repz
jmp
jno
sub
or
cmpsl
mov
xchg
pushf
nop
adc
rcl
and
ljmp
scas
push
inc
movsb
sub
test
call
jns
imul
cmc
mov
sbb
pop
je
sbb
dec
sub
addr16
aad
gs
or
arpl
int
insl
iret
pop
mov
xor
lock
fadds
imul
inc
adc
fcoms
lods
pop
push
pushf
mov
adc
sub
push
data16
imul
fdivl
jecxz
roll
je
bound
test
jp
mov
push
lods
or
pusha
stos
dec
xor
mov
mov
and
fdivrs
inc
xor
fsubrs
decb
jnp
xchg
cs
or
pushf
sub
push
or
sarl
sbb
ficoml
fnstenv
xor
dec
insl
gs
ds
addr16
xor
sbb
mov
adc
push
leave
add
push
and
lods
xorb
or
xor
xchg
jg
in
xchg
mov
dec
add
ss
mov
movsl
enter
fistps
pop
out
or
sbb
out
fdivl
xchg
and
sub
xchg
pop
cmp
rolb
inc
aam
mov
lock
arpl
test
gs
xchg
jo
adc
stos
jb
es
repnz
pusha
dec
mov
mov
rol
mov
or
stos
mov
aas
push
add
rcll
mov
pop
insl
add
jmp
sub
sbb
into
insl
and
xor
mov
push
mov
or
and
popf
incb
cmp
cmpsb
scas
fdivrs
cmpl
xchg
sub
mul
sbb
push
xchg
xchg
mov
dec
pop
loop
inc
int
stos
push
jb
mov
cmp
jmp
mov
mulb
popa
lcall
xor
div
push
and
and
loopne
sbb
loope
and
aas
inc
jp
mov
js
and
xor
add
daa
mov
ret
pop
call
aad
shl
mov
into
rcrb
dec
outsb
scas
out
in
movsl
cld
xchg
outsl
inc
lahf
cmc
std
fbstp
ss
dec
les
add
cmpsl
sbb
mov
fwait
mov
mov
je
mov
mov
enter
divb
sbb
js
scas
sub
divb
fidivrs
xchg
lahf
test
or
cmpsb
jl
inc
push
push
sub
fbld
jg
dec
pusha
add
sbb
outsl
test
shll
loopne
clc
rcll
xchg
dec
adc
adc
and
push
sub
lcall
mov
in
sarl
dec
and
in
shrb
jmp
xchg
popa
stc
les
shll
adc
pop
imul
and
mov
mov
xor
mov
loope
xchg
xchg
dec
and
adc
mov
cmp
fidivl
sbb
push
pop
stos
cmp
cmp
sbb
fldcw
push
in
cmp
jae
xor
sub
ret
imul
xchg
or
push
loopne
call
push
js
push
fmuls
mov
xchg
dec
add
dec
fsts
fstpl
xor
imul
inc
adc
mov
ficoml
pop
xor
jp
je
mov
movsl
cli
cmpsl
push
push
test
cmpl
xchg
dec
loop
pop
loop
fcomps
xor
pop
add
push
xor
decl
loop
jbe
mov
and
ss
push
add
shll
xchg
dec
or
inc
xor
mov
push
xor
or
fstpl
sub
leave
or
add
loopne
ficompl
sahf
test
ret
bound
repnz
in
mov
or
addr16
out
cmc
jmp
jnp
in
sbb
add
cmp
pop
push
push
mov
popf
mov
add
xor
jne
adc
pop
pop
pop
mov
sbbb
jnp
jae
scas
jne
dec
popa
inc
fdivrs
fistps
pusha
lahf
scas
xor
movsl
aaa
in
cmp
scas
add
arpl
mov
mov
mov
mov
enter
dec
push
repnz
xchg
pusha
and
cmp
adc
repz
ja
xchg
pop
dec
leave
fucom
lret
jnp
repz
jns
xor
lahf
dec
js
inc
dec
pop
sub
arpl
int3
add
pop
js
mov
call
ret
ffree
cmc
push
outsl
pop
ror
lock
pop
mov
jg
shl
call
push
jmp
dec
sbb
insl
ds
sbb
pusha
fwait
or
mov
push
test
movsl
pop
decl
pop
frstor
lret
leave
dec
repnz
nop
cmpsb
jecxz
out
fs
jno
push
lea
gs
mul
ds
hlt
imul
pushf
sub
aaa
sub
std
test
cmp
xchg
repz
add
scas
loopne
lds
cmp
fidivrl
mov
jmp
mov
shlb
cwtl
incl
mov
add
daa
pop
out
sbb
scas
jl
and
scas
into
push
lods
jle
jae
jp
dec
push
outsl
or
ror
xchg
pop
dec
bts
punpcklwd
mov
mov
aam
imull
inc
hlt
nop
sbb
mov
inc
lods
pop
pop
mov
and
mov
fistpll
sahf
data16
cwtl
sbb
push
add
rolb
jmp
and
mulb
inc
call
sbb
mov
mov
into
and
inc
and
push
xchg
ss
xor
xor
fs
cld
sbb
sar
push
jle
dec
lahf
rolb
mov
iret
jne
ja
mov
into
inc
xchg
fmuls
xor
push
add
sub
ds
in
mov
xor
xor
orb
push
xchg
aas
pop
subb
lods
xchg
cmp
stos
cmp
lds
pop
es
fldl
pusha
shlb
daa
pop
cmc
jp
arpl
mov
sti
push
fcom
xchg
les
inc
pop
mov
inc
or
pop
clc
scas
jmp
out
sub
test
aad
adc
rorl
adc
adc
shrl
adc
mov
dec
mov
ret
daa
mov
cmc
mov
repz
scas
inc
jp
push
push
xor
sub
xchg
xchg
push
ret
iret
fcmovu
jnp
das
xlat
push
stos
pop
add
lret
sub
sub
cmp
hlt
movsl
addr16
or
mov
fcmove
in
mov
or
cmpsl
lods
lcall
rclb
xchg
cmpsl
mov
xor
scas
daa
adc
shlb
xlat
fnstsw
sbb
cmp
jae
aad
cmc
mov
test
cmp
mov
xor
ljmp
insb
adc
leave
jbe
inc
out
mov
lods
mov
fs
mov
or
aam
cmp
jne
inc
jle
daa
ficoml
pop
add
jle
iret
jp
fldl
cmp
incl
out
out
push
les
push
in
ret
popa
sbb
jg
pushf
cli
xlat
jecxz
dec
out
fwait
ret
inc
sbb
mov
iret
aad
out
fldl
dec
mov
adc
roll
mov
shrb
outsb
ljmp
lods
insb
out
fidivrs
mov
cmp
xchg
cltd
cli
fadds
idivb
fadds
cmp
jecxz
ds
xchg
inc
fnsave
dec
dec
cmp
add
and
mov
imul
pop
mov
inc
pop
mov
icebp
xchg
dec
and
add
mov
addr16
in
out
imul
inc
pop
mov
imul
mov
add
or
sbb
popa
cmpsl
mov
ret
mov
test
mov
fdivrs
aam
ss
push
fsts
inc
ss
or
lods
ljmp
cmpsb
xchg
shlb
jmp
movsl
mov
cmp
add
cltd
add
xor
xor
add
into
push
push
add
dec
ja
sbb
fs
subb
xor
mov
jmp
gs
add
call
movsl
scas
int
daa
lods
cmp
lahf
and
inc
dec
arpl
pop
push
adc
add
sub
inc
adc
pushf
push
add
mov
dec
push
jmp
testl
inc
xchg
repz
jae
and
sbb
insb
sub
aaa
adc
bound
int3
andb
push
jno
pushf
loope
mov
pop
pop
in
dec
shrl
idivl
mov
add
inc
xor
test
sbb
insl
insb
dec
adc
cltd
xchg
inc
xor
jle
jl
pop
pop
iret
or
scas
fs
add
shlb
mov
pop
sbb
imul
lret
push
jae
movsb
pop
adc
inc
test
push
mov
push
sub
jns
inc
cmp
aad
clc
cmp
xorl
fldcw
sbb
repz
adc
fchs
sub
pushf
mov
das
popfw
repz
arpl
jmp
mov
mov
mov
test
sbb
pop
jecxz
sar
int3
dec
pop
jbe
fldenv
xchg
xor
shrl
adc
adc
iret
push
gs
add
mov
mov
jl
sub
push
mov
push
hlt
aas
dec
or
inc
ret
rcrl
int3
cmp
xchg
leave
mov
insb
mov
outsb
or
xor
pop
pop
cmp
pop
push
lock
mov
cld
call
pop
fsubr
sbb
mov
dec
cltd
data16
push
xchg
fwait
adc
and
mov
dec
mov
pop
lret
test
mov
push
mov
push
mov
lret
inc
jo
cmp
and
call
mov
in
mov
sarb
xor
xchg
dec
shl
push
clc
sbb
pop
cmpsl
inc
rclb
sti
sub
loopne
sbb
mov
pop
and
sti
gs
xchg
xor
aas
mov
dec
push
push
lcall
push
mov
or
shrl
idivl
movsb
push
repnz
insl
mov
leave
mov
mov
jle
push
xor
pop
xchg
adc
out
cmc
cmpsb
jl
pop
test
xchg
inc
xchg
setns
bound
xor
mov
and
xor
test
push
scas
mov
push
mov
sub
insb
jmp
pop
hlt
and
mov
pop
adc
mov
jae
sbb
adc
sahf
add
mov
outsl
sbb
mov
mulb
xchg
and
mov
mov
xor
push
mov
ja
push
aas
mov
sbb
enter
xor
aas
adc
int3
jo
imul
or
popa
sub
mov
rcrl
pop
subl
cmovo
mov
sarl
test
xor
and
xchg
pop
jbe
pop
inc
or
dec
inc
sub
in
nop
push
cltd
shl
sbb
aad
dec
outsl
sub
shr
int3
sarl
mov
sub
mov
pop
insl
mov
mov
sbb
and
sbbb
xlat
cmc
mov
scas
inc
and
jge
ret
pushf
adc
mov
and
insb
mov
add
shll
stos
xchg
add
or
cmpsl
jmp
push
jge
shll
xor
inc
mov
popa
outsb
fidivs
enter
sbb
enter
sahf
negb
xchg
jne
cmpsl
mov
cltd
gs
les
fs
insb
xor
add
rdpmc
jns
pop
cmc
or
push
es
addr16
pop
mov
movsl
xchg
cwtl
cmc
addr16
mov
lds
mov
les
shll
and
mov
mov
cwtl
out
adc
lahf
int
int
sub
iret
pop
inc
pushf
inc
lock
scas
push
stos
aas
fiaddl
js
rclb
mov
into
and
cltd
lahf
jns
and
cmpsl
fstps
cmp
fdivs
pop
sub
dec
cwtl
aaa
mov
fimuls
push
cs
cltd
sbb
fisubl
lret
iret
leave
popa
pop
enter
inc
xor
inc
movsl
mov
sub
and
xor
ds
pusha
push
cltd
xor
lcall
jmp
dec
jns
mov
test
movsl
pop
neg
cwtl
cmp
add
mov
sti
jp
das
test
adc
pop
pop
pusha
push
add
fwait
std
jmp
adc
out
sti
pop
outsb
mov
outsb
push
mov
sbb
aam
test
lret
push
mov
fiaddl
xchg
fstp
das
or
jge
xor
mov
out
adc
rorl
fiaddl
fs
xchg
mov
pop
pop
arpl
xor
and
out
out
movsl
fnsave
push
mov
popa
lahf
adcb
xchg
aam
xchg
aam
sarb
mov
cwtl
test
pop
shlb
test
mov
or
clc
jb,pt
cmp
shlb
push
inc
jne
das
dec
sti
lods
push
das
pop
mov
jns
repz
dec
inc
jle
in
mov
ret
loopne
popf
fwait
xor
mov
inc
incb
xor
divl
adc
rcll
sbb
cmpsl
cli
cmc
out
pushw
sarb
or
mov
out
stos
jg
mov
rol
shlb
cmpsl
mov
mov
lods
inc
sti
inc
sub
shl
jg
fwait
cmc
movl
into
dec
mov
imul
pop
mov
out
stos
inc
or
cs
outsb
fcmovu
fldenv
cltd
addr16
clc
popa
test
and
sub
rorl
or
mov
sbb
pop
cld
mov
rcll
pop
xchg
sub
jns
mov
out
shrl
rclb
cmp
push
mov
mov
jmp
into
pop
pop
add
push
fwait
jmp
frstor
jbe
mov
cs
jmp
scas
cmpl
adc
fidivl
adc
imulb
mov
ss
xchg
push
push
mov
dec
mov
inc
push
pop
test
mov
jle
sub
scas
cwtl
pop
xorl
jo
lods
mov
inc
adc
mov
inc
jge
mov
negb
cmp
inc
bound
xor
inc
jp
ss
imul
out
mov
add
add
dec
xchg
xor
jnp
xchg
or
inc
xchg
sub
cmp
push
and
xchg
mov
loope
int
adc
mov
movsb
out
cmpsl
fistpll
and
jbe
lock
lea
push
mov
pop
mov
dec
adc
outsb
addb
adc
cltd
sub
ret
test
sbbb
outsb
inc
or
jo
mov
sub
push
and
cmp
dec
dec
mov
roll
mov
out
mov
test
aad
fstp
push
add
mov
cs
cmp
aad
adc
xchg
sbb
adc
ss
leave
jle
pop
shrl
fists
inc
mov
out
imul
shlb
es
mov
fwait
mov
fmuls
cmpsb
jns
or
aas
mov
aas
cmpsl
jns
nop
andl
adc
dec
jae
dec
insl
loop
loop
push
mov
cmc
xorl
jne
cpuid
ss
jg
xchg
pop
xchg
jge
inc
lret
push
inc
inc
jl
mov
push
mov
cltd
cmp
add
pop
cld
adc
push
fsubs
mov
leave
inc
mov
sbb
out
add
sbb
movsb
cmpsl
pop
push
pop
sbb
inc
jmp
aas
lea
mov
add
push
xor
cmp
pop
dec
mov
adc
ja
pushf
loop
movsl
sbb
into
insl
inc
dec
sahf
push
jmp
sbb
movsb
pop
shrl
xchg
cmp
adc
out
nop
and
lret
into
xchg
cs
xor
scas
jp
push
dec
mov
iret
mov
mov
jae
cmpsl
or
jle
and
jg
and
mov
dec
xchg
packsswb
popa
fcomi
mov
sbb
adc
mov
mov
jle
mov
sub
jp
icebp
xor
lea
loopne
cwtl
mov
and
sub
mov
loop
lea
mov
rorb
cmp
pop
fildll
xchg
es
mov
sub
or
loope
inc
adc
xlat
and
cwtl
incb
inc
les
fildl
orl
sub
push
mov
add
hlt
push
popf
mov
mov
pushl
out
mov
cs
adc
or
test
aad
inc
adc
cmpsb
ja
js
jbe
repz
test
jns
mov
or
jle
dec
insl
lahf
mov
pop
call
jp
pop
cmpl
mov
jg
imul
push
call
call
mov
mov
mov
inc
lds
cwtl
into
cmp
mov
xlat
ljmp
ds
cli
scas
ret
fbld
adc
ret
push
jmp
sub
inc
xchg
sbb
fsub
jns
or
mov
sub
adc
push
or
out
hlt
out
pop
dec
nop
cmc
or
sub
movl
movsb
fisttpll
push
mov
fsincos
pop
lock
lea
mov
mov
fs
mov
mov
or
jne
gs
push
mov
cltd
inc
mov
adc
mov
push
dec
lods
mov
movsb
dec
das
fwait
dec
in
fs
dec
cmp
inc
cmpl
in
in
movsb
lds
mov
cld
out
bound
inc
cs
call
insl
into
or
jnp
xchg
xchg
pop
mov
xor
mov
mov
mov
incl
sbb
enter
lock
mov
jge
mov
stos
inc
ja
and
fbld
stos
ds
es
pop
aam
stos
or
cld
adc
mov
sbb
stc
pop
popf
push
jne
cmp
es
daa
pop
jp,pt
out
insb
push
stos
and
cmpsb
rcr
cmpsl
std
cs
cmp
xor
fucom
dec
addr16
and
mov
add
push
mov
lock
sbb
es
movsb
pop
dec
adc
jecxz
rol
pop
ret
hlt
andl
mov
and
sbb
mov
sbb
jle
adc
and
mov
pop
in
dec
stos
mov
pop
cmp
rol
popa
out
pop
adc
pop
das
insl
sahf
popa
or
imul
scas
xor
adc
popa
push
xchg
call
pop
imul
aaa
mov
jge
sbb
rcrl
inc
cmpsl
and
xor
fldenv
adc
xor
xchg
addr16
adc
hlt
iret
lock
cmp
push
incl
push
xor
in
adc
xor
cmp
push
adc
jnp
pop
outsl
pop
insl
cwtl
movsl
outsb
loope
pop
lods
dec
dec
call
outsl
arpl
mov
sub
mov
in
cli
lods
scas
adc
test
imul
xor
jne
test
mov
ja
stos
xchg
jle
pop
adc
mov
pop
inc
sbb
sbb
icebp
leave
xor
stos
shll
rcrl
fcmovne
sbb
popl
subb
pop
sub
push
sbb
cld
gs
push
lahf
lods
add
adc
push
jmp
fisttpll
inc
mov
out
out
loop
loope
inc
out
mov
lcall
pop
inc
push
inc
lock
sbb
or
rolb
push
inc
les
add
lret
push
in
sahf
call
jo
popa
gs
ficompl
mov
pop
mov
xor
xchg
sub
fcoml
push
call
mov
in
inc
and
xchg
mov
jo
lahf
in
je
gs
in
push
or
shlb
jne
push
loopne
push
xchg
sub
cwtl
push
mov
pop
movsb
je
xchg
lret
cltd
test
mov
mov
push
sub
pop
inc
fmull
popf
cli
xchg
aam
push
sbb
cmc
movsl
dec
int
mulb
arpl
subl
andl
pop
cmp
psubusw
je
ret
inc
neg
icebp
lret
xchg
iret
shrl
adc
inc
scas
sub
adc
int
pop
das
and
or
sbb
cmp
or
call
sahf
sbb
jne
jno
test
xor
or
xlat
push
bound
adc
in
xlat
lret
pusha
rcll
daa
jg
outsb
int
mov
addr16
xchg
sub
jae
leave
xlat
mov
ret
mov
cli
mov
out
xor
in
sbb
or
call
ja
fmuls
mov
ja
gs
mov
leave
movsb
ret
mov
cwtl
cwtl
inc
jns
aaa
xchg
or
inc
mulb
cli
lock
flds
test
filds
lock
out
imull
xorb
mov
pop
xchg
jo
mov
push
aad
or
add
push
outsl
jle
mov
fsubrs
popa
cmp
rorb
dec
adc
sahf
jbe
ljmp
loop
cmp
inc
dec
sti
and
mov
outsl
xchg
pushf
fldenv
out
movsb
out
inc
xor
int
in
adc
xchg
movsb
pop
fisubrl
lahf
xchg
add
push
push
sub
jns
mov
push
sbb
jb
popf
mov
lods
jge
aam
ljmp
cmpb
movsb
push
sbb
popa
inc
out
jge
daa
insb
cmp
sub
ja
out
cli
push
outsl
pop
daa
std
bound
jo
loop
cmp
mov
fcomi
mov
iret
fldcw
mov
sbb
mov
xchg
ficoml
jge
jecxz
cmp
fcoms
jge
and
dec
xchg
cli
movsb
fsubs
int3
push
mov
test
push
and
xor
sub
test
pop
cmp
or
sbbb
test
and
movsl
sbb
xor
jb
push
adc
cs
notb
inc
bound
icebp
mov
sbb
lahf
and
mov
dec
or
dec
bound
mov
mov
cmpsl
mov
int3
dec
lods
outsb
inc
jo
and
cmp
pop
arpl
sbb
mov
sbb
sti
or
xchg
cmc
cmp
adc
xchg
insb
std
mov
pop
stos
repnz
sahf
movsb
ljmp
dec
jno
ljmp
jo
jnp
jp
scas
mov
sub
rcll
push
hlt
fmuls
movsb
or
lds
ljmp
in
jecxz
adc
orb
mov
push
loope
outsb
dec
xorb
dec
push
pop
popf
push
xor
mov
bound
in
sar
sub
insb
ja
fiaddl
mov
jb
repnz
cmp
jge
adc
mov
icebp
loopne
or
mov
adc
dec
adc
and
add
mov
pop
loope
sahf
aaa
mov
out
jne
adc
push
jl
add
mov
and
push
jae
test
push
lock
inc
rcr
scas
xchg
inc
stos
fldl
cwtl
mov
scas
or
lcall
popa
pop
mov
xchg
mov
repnz
mov
mov
mov
loopne
divb
xchg
sbb
mov
add
jg
sub
or
adc
jns
xlat
int
sbb
inc
adc
add
mov
repz
mov
mov
mov
sbb
movsl
into
call
xchg
bound
and
jg
clc
in
and
pop
add
jmp
mov
ljmp
push
ret
pushf
in
call
dec
lods
sahf
ss
jnp
mov
scas
xor
insb
or
pushl
mov
inc
push
rorl
popf
mov
push
cmpxchg
jl
mov
dec
inc
xor
rorl
inc
cmpsb
loopne
pushf
enter
sbb
fisubl
lret
in
mov
mov
test
xchg
lret
mov
add
out
mov
jbe
or
xor
sbb
shl
mov
insl
test
dec
cmp
addr16
mov
push
in
cs
pop
scas
and
jns
cmpsl
or
and
cwtl
sub
imul
jmp
sbb
sub
adc
scas
jnp
adc
pop
repz
insl
fsubrl
inc
into
shlb
mov
push
cmpsb
popl
xchg
pop
neg
shl
xchg
push
sub
adc
pop
in
popa
pop
mov
pop
sub
aam
sub
lds
sbb
test
xchg
js
scas
scas
fwait
push
movsb
loope
sub
jb
data16
push
les
cmp
imul
jns
es
cld
add
test
xlat
scas
and
mov
push
inc
in
fiaddl
jns
jbe
and
dec
push
pop
arpl
adc
inc
cmp
fs
adc
sub
sub
arpl
push
pop
gs
lods
pop
xor
jg
cmp
test
sub
lds
pop
adc
scas
mov
add
pop
fiadds
fiadds
xchg
fdivr
aad
ja
sbb
call
mov
jle
stos
loopne
add
sbb
and
lret
pop
mov
dec
cmp
aas
push
sar
push
cmp
sahf
xor
outsl
fcmove
in
pop
ss
out
lret
cli
mov
xor
pop
jnp
xchg
or
add
sbb
jge
ja
pop
sbb
dec
jno
sub
and
cs
xchg
enter
aas
jb
mov
imul
xor
xor
rol
or
nop
pop
cld
adc
mov
cmpsl
dec
enter
mov
bound
mov
adc
push
mov
subb
and
data16
xor
insl
jge
filds
sub
push
hlt
ret
bound
or
xor
and
jns
jne
int
aam
icebp
adc
addr16
cwtl
shll
dec
repz
adc
xor
mov
cmp
xor
mov
or
loop
jno
xor
rol
call
dec
icebp
rorb
mov
xorb
out
loopne
push
and
adc
es
rclb
push
jecxz
mov
fdiv
cmpsb
iret
jne
sub
ljmp
popf
xchg
into
cltd
stos
push
inc
lea
push
mov
es
aaa
out
roll
repnz
add
sub
cwtl
int3
push
dec
lock
pushf
imul
shll
sub
push
movsl
adc
inc
dec
test
fimull
dec
xor
lods
push
and
decl
inc
xchg
rorb
xacquire
xchg
adc
pop
mov
adc
jnp
mov
ja
jge
sub
testl
push
xchg
xchg
xor
xchg
adc
cld
add
adc
fwait
jmp
mov
addr16
addr16
xchg
or
test
pop
dec
cmpb
sbb
mov
cmp
iret
out
xchg
mov
les
lahf
ja
sub
mov
adc
mov
xchg
xchg
add
gs
xor
push
sub
pop
jg
push
movsl
pop
mov
add
loop
cwtl
adc
or
inc
mov
leave
add
mov
jbe
daa
js
cld
jmp
ds
loope
jno
mov
xor
jmp
mov
and
repnz
pop
cmp
xlat
mov
outsl
add
xchg
pop
rcll
sbb
mov
jecxz
imul
ret
cmp
xor
jg
scas
fcompl
cmpsb
stos
pop
sbb
enter
adc
cmp
push
jo
int3
pop
inc
sahf
imul
out
je
int
ljmp
loope
pop
mov
or
add
rorb
dec
pop
call
repz
lea
loopne
xchg
sub
iret
pusha
pop
jae
jne
loope
mov
and
enter
iret
ds
insb
xlat
push
das
testb
add
in
leave
mov
pop
cmp
sbb
stc
movb
and
jge
lcall
ss
arpl
fsubrp
push
mov
cmc
popf
sbb
sbb
dec
sub
xchg
fdivs
aam
jmp
or
mov
add
loopne
mov
mov
push
insl
or
push
and
mov
sbb
imul
mov
sbb
call
xlat
dec
test
sbb
out
popf
lret
dec
in
inc
mov
into
mov
jb
cmp
sub
inc
adc
inc
cmpsl
or
outsl
jo
pop
mov
pop
int3
int3
dec
js
push
fidivrs
jmp
call
pop
adc
dec
xchg
in
push
ficompl
rclb
jbe
sti
rcrl
and
xchg
je
clc
mov
fs
add
mov
dec
pop
insb
int3
adc
fisttpl
lods
xchg
xor
arpl
out
sub
push
sysret
mov
pop
sub
loopne
adc
out
pop
push
out
xchg
jg
pop
mov
lods
or
mov
mov
push
hlt
add
gs
mov
lock
and
icebp
mov
mov
cmp
xor
and
sub
ror
insl
int
mov
jp
xor
shll
mov
xchg
dec
inc
aam
sbb
pop
dec
daa
jg
inc
inc
mov
xchg
mov
sbb
push
cmpsl
push
sbb
aam
dec
dec
je
xorb
movsb
jecxz
mov
cli
addb
cmp
mov
das
or
mov
xor
mov
xor
adc
movsb
mov
test
inc
mov
xchg
sbb
cmp
or
sbb
and
jp
inc
div
push
loope
mov
sub
std
mov
int
ret
sbb
xor
aad
ljmp
adc
pop
iret
idiv
cmc
es
repz
insl
mov
test
mov
inc
lods
sub
mov
cs
mov
mov
inc
in
int
xchg
sbb
insb
mov
lods
xchg
jg
das
out
popa
pop
int
ja
insb
cmpsl
movb
fdivl
mov
dec
sbb
inc
cmpsl
ret
sbb
xchg
cmp
xchg
nop
call
test
bound
out
outsl
dec
mov
lret
ljmp
negb
sahf
je
and
inc
aas
lcall
hlt
insl
pop
test
cltd
ss
aaa
aad
sub
push
fstpt
jnp
pushf
dec
and
ss
out
or
fidivrl
addr16
outsl
jg
fs
std
sbb
sub
push
adc
xchg
bound
jmp
dec
icebp
add
lret
cmovbe
sbb
in
mov
jns
mov
outsl
decl
jge
fisubl
pop
and
dec
xchg
sbb
in
cld
shl
stc
jge
push
dec
push
lcall
icebp
mov
jb
loope
or
nop
stc
pop
rsm
pop
fwait
loope
xor
outsl
imul
std
cmpb
xchg
xor
add
js
movsb
jbe
fistpl
in
mov
mov
xchg
pop
mov
test
or
jge
icebp
xchg
sub
xlat
jge
das
fcmovnbe
push
mov
cltd
adc
inc
fisubl
or
dec
push
mov
pop
int3
ljmp
cltd
movsb
inc
aad
sbb
and
shlb
negb
inc
fstps
cmc
xchg
add
push
mov
leave
imul
xchg
je
std
test
adc
fisubrl
pextrw
mov
aas
mov
xchg
xchg
testb
lahf
pop
dec
in
mov
test
dec
sub
aas
jno
test
enter
sti
sbb
add
jo
ds
incl
mov
pop
or
sub
mov
add
ret
idivb
loope
inc
xchg
sub
in
popf
fsubl
pop
into
xchg
lcall
dec
in
cltd
int
add
lea
int3
dec
push
std
stos
cmp
or
jae
filds
pop
jmp
mov
icebp
cmp
repnz
dec
lahf
inc
xchg
std
mov
mov
inc
mov
or
nop
orb
dec
je
fnsave
je
push
movsl
les
mov
packuswb
sub
or
sub
enter
in
inc
jnp
inc
jae
aam
lods
fidivrs
mov
cmpb
jbe
sbb
lods
mov
inc
into
unpcklps
test
jae
fwait
pop
out
inc
or
out
stos
cmp
add
cmp
lock
cltd
dec
push
add
loop
loop
cmp
dec
push
loop
inc
pop
fcomps
sbb
adc
or
fcmovu
frstor
fistl
xlat
cs
repnz
sub
xor
andb
out
push
sub
jne
mov
jle
adc
xor
jmp
xchg
in
inc
inc
es
inc
stc
pop
mov
or
jo
jns
divb
xor
adc
bound
fadds
jecxz
in
jns
xchg
pusha
femms
int
daa
out
out
imul
sub
sub
nop
sub
dec
push
leave
add
mov
adc
mov
cmp
mov
fbstp
je
mov
dec
cld
pushf
mov
ret
or
fsubrl
cmp
fstpl
push
push
subb
jo
cmpsb
mov
push
aaa
scas
call
or
and
adc
mov
xchg
and
lahf
sarl
cmp
and
mov
in
cmp
sub
std
mov
cmp
imull
push
mov
sub
dec
push
jns
lods
ja
mov
mov
aad
push
imul
movsb
xor
xor
dec
jb
test
and
sub
mov
push
cmpsl
cmp
mov
cmpsl
rolb
push
leave
ja
xor
dec
notl
dec
out
pushf
data16
push
mov
jae
mov
mov
cmp
das
lock
ret
notl
or
sarl
sbb
dec
mov
jle
test
cmp
sub
xor
cmc
ljmp
inc
cmp
sti
enter
ljmp
push
cmp
lds
xor
push
xor
xchg
add
dec
movsb
fsubrl
test
imul
subl
leave
pop
pop
pop
loopne
ss
inc
negb
cmp
pop
neg
sub
sub
test
xchg
rcrl
lds
mov
lods
in
std
lods
shrb
shll
add
sahf
movb
dec
or
icebp
stos
fwait
mov
stos
jmp
lea
fildll
inc
test
xchg
jne
dec
bound
stc
mov
ljmp
icebp
push
lods
test
and
movsl
mov
jnp
mov
rol
popa
pop
dec
push
ss
fdiv
xchg
or
loopne
mov
sub
nop
inc
fidivrs
outsb
pop
or
mov
sahf
or
je
inc
xchg
sbb
ja
mulb
ret
jne
sub
mov
out
fsts
push
aaa
mov
xchg
mov
cmp
enter
shlb
jle
lds
aaa
and
jo
xchg
insb
fwait
and
shl
sbb
bswap
ret
jp
xor
mov
lods
inc
outsl
loope
js
dec
test
push
push
outsb
push
jl
divps
lret
out
into
les
mov
push
jbe
out
pusha
daa
arpl
rorl
icebp
xor
sub
das
jnp
xor
or
aas
ljmp
xchg
sub
std
inc
pop
std
xchg
addr16
mov
popf
cld
dec
outsl
cmp
and
lcall
movsl
jne
fwait
dec
test
pop
das
fstpt
clc
inc
add
clc
jnp
les
outsb
xor
mov
pop
sbb
sub
inc
iret
xor
das
shrl
mov
pop
mov
jbe
sub
cmc
xor
dec
mov
xchg
add
mov
mov
addr16
out
push
jne
out
or
mov
js
xchg
enter
lock
cmovns
std
pop
cmp
lret
pop
mov
js
ja
xlat
sub
push
pop
cltd
inc
push
pop
jmp
add
cmpb
add
lods
dec
lea
push
inc
loope
mov
adc
push
xor
xchg
lahf
add
xchg
int
sub
pop
and
fdivrs
rolb
adc
test
idiv
ret
mov
xlat
mov
push
jno
mov
jle
or
pusha
mov
es
push
stos
leave
cmc
std
testl
mov
push
pop
jns
jnp
aas
and
and
test
outsb
leave
add
mov
insl
in
aam
dec
roll
mov
scas
inc
into
pop
xor
pop
dec
sbb
xor
out
pop
inc
out
push
cs
xchg
lods
sbb
mov
insl
stc
nop
js
ficoms
mov
push
lret
add
stc
inc
jmp
mov
loopne
or
lahf
pop
ret
adc
pop
cli
dec
and
les
idivb
sti
and
imul
aad
and
xor
adc
ja
and
sbb
in
iret
xchg
scas
je
lea
cmp
sbb
jnp
enter
or
cs
mov
mov
mov
dec
xchg
clc
cmp
clc
sti
push
inc
test
call
outsb
aas
jecxz
xor
add
mov
mov
loop
insb
scas
std
push
dec
and
inc
pusha
ja
mov
or
out
outsl
movsb
pop
or
xchg
leave
repnz
mov
mov
mov
fwait
xchg
gs
sbb
push
xor
iret
pop
mov
xchg
jp
loop
adc
icebp
jne
mov
push
fwait
push
fwait
xor
adc
std
and
or
fwait
jmp
mov
add
adc
mov
lods
jne
inc
fisubrl
incb
xor
mov
cmpsl
jae
xchg
sbb
sub
pop
addr16
push
lret
sub
cmp
cmp
faddp
cli
loop
cmp
shrl
jae
mov
pop
mov
or
jnp
out
dec
xor
fsubrl
dec
jae
cwtl
subb
mov
loop
mov
adc
lds
cld
fimuls
shl
mov
es
inc
pop
cmpsb
fcmove
mov
mov
mov
insb
and
into
sbb
hlt
pop
mov
testl
cmp
pusha
lds
arpl
mov
test
cmp
ret
mov
pop
mov
das
mov
push
add
add
cmp
repz
mov
scas
fisttpl
mov
and
jp
add
xlat
pop
cmp
stos
rcr
enter
ret
or
filds
xor
outsb
mov
mov
or
mov
add
push
cmpsl
ss
inc
bound
jg
mov
imul
aaa
and
mov
sbb
repnz
pop
fmul
lret
shlb
and
xchg
loope
or
cmp
inc
jp
roll
loope
and
xchg
loopne
mov
mov
mov
add
iret
xor
outsb
fsubrl
pushf
adc
jnp
test
mov
and
push
loopne
icebp
mov
mov
incb
pusha
clc
outsl
std
sbb
jns
adc
jns
in
cmp
insl
mov
fbstp
outsb
aas
fmuls
inc
xor
stc
gs
inc
testb
subl
fiaddl
mov
insb
pop
testb
xchg
addb
adc
int
sti
into
icebp
xchg
jmp
cld
loopne
aas
push
push
lret
cs
push
loop
leave
pop
adcl
insb
int3
xchg
sub
enter
jle
mov
push
pop
pop
ljmp
mov
repnz
push
pop
out
sbb
nop
ficoms
rorb
pop
aaa
pusha
sub
loop
push
inc
testl
sbb
nop
cmp
mov
repnz
test
testl
jg
jg
or
and
xor
repz
mov
add
scas
pushf
inc
push
xor
push
gs
stc
xor
jae
lock
mov
sbbb
stos
add
mov
lcall
cmp
jne
jne
inc
lret
test
pop
sbb
cmp
adc
jge
pop
test
dec
push
mov
jge
clc
adc
rep
xchg
pusha
mov
ljmp
push
lea
sub
cwtl
lock
lcall
xchg
fstpl
push
lock
icebp
xor
stos
addr16
pop
daa
xor
jge
push
je
in
sub
xchg
shlb
mov
xor
add
xor
and
xor
xchg
and
sbb
adc
jb
xchg
cli
ss
or
and
push
rcl
loopne
mov
inc
in
adc
mov
adc
lods
stc
push
jae
add
out
movsb
sbb
inc
out
push
dec
or
sbb
icebp
data16
out
inc
sbb
adc
push
loopne
loop
sub
pop
xlat
or
lret
or
jb
inc
dec
cmpsb
stos
xlat
jae
fidivs
or
inc
xchg
xor
int
pop
mov
mov
xlat
or
addb
push
push
cmp
stos
or
or
and
cli
dec
aam
jne
pop
popa
ds
mov
in
adc
sarl
xchg
int3
add
dec
mov
xchg
dec
and
std
jne
das
nop
push
mov
and
int3
leave
adc
add
and
bound
add
pusha
cltd
sbb
les
sti
mov
lock
ljmp
stos
ja
cmp
outsb
jp
idiv
pop
or
cmpsl
mov
cmp
cmp
or
ret
clc
rorl
xor
mov
mov
cltd
jg
jecxz
pop
push
cmp
insl
enter
pop
mov
xchg
jbe
aad
stos
xor
pop
popa
sub
sub
addr16
out
test
pushf
es
adc
and
xchg
jg
adc
dec
sahf
in
mov
lret
inc
mov
cltd
mov
or
xchg
jne
inc
pop
shrb
stc
into
std
scas
fists
mov
fmull
call
dec
mov
enter
pop
lea
out
scas
push
jl
push
fimull
stos
cwtl
adc
push
loop
stc
out
das
lock
mov
fwait
xchg
lods
fs
pop
sbb
ret
out
inc
mov
inc
push
add
loop
cmpsb
leave
xor
popw
or
pop
jp
or
inc
pop
cmp
mov
decb
xor
and
out
push
pop
rolb
jl
jge
push
xchg
lock
pop
std
fisubs
mov
dec
stos
lret
loop
std
sub
lret
shll
scas
sub
out
mov
jb
test
or
xor
stos
shrl
sub
dec
dec
mov
and
jb
sarl
push
in
cmp
inc
in
push
jno
call
repz
pop
sahf
roll
movsl
inc
cs
cwtl
ljmp
xchg
add
cmp
adc
lock
test
jle
sub
push
dec
pop
out
les
sbb
shl
mov
data16
mov
pcmpeqw
sbb
hlt
push
jne
ljmp
and
add
cltd
lret
arpl
xchg
cmp
xchg
loop
and
int3
xor
add
xchg
scas
rcll
cmp
jb
repz
and
iret
pop
fdivrl
ss
xchg
aad
sbb
nop
xlat
jns
ja
imul
dec
mov
pop
pop
je
ss
mov
aaa
dec
sbb
pavgb
inc
into
ret
push
in
pop
nop
ja
or
aam
inc
push
imul
std
adc
jb
in
dec
cmp
pop
inc
fidivrs
jmp
sbb
lcall
movsl
dec
pop
push
es
lods
ret
xchg
jae
ret
cmp
push
mov
cli
dec
or
lods
and
mov
fidivrl
icebp
xlat
pushf
aas
mov
pop
sbb
push
push
mov
out
sar
dec
ret
or
fldenv
andps
les
pop
dec
outsb
clc
xor
dec
push
cwtl
in
or
std
or
rcrl
lcall
fucom
fisttps
gs
cmpsb
xchg
pop
adc
dec
cmpl
mov
insb
rcrl
or
xorl
sbb
jp
lods
fistps
jp
jne
imul
cli
or
in
inc
pop
xor
rolb
xor
inc
inc
push
out
mov
push
pop
sbb
int3
add
or
xor
testb
pop
enter
and
jp
push
adc
sub
lret
ss
dec
push
sbb
dec
cmc
xor
imul
sti
inc
jecxz
mov
sub
sahf
arpl
jle
xor
shr
pop
mov
stc
cs
mov
adc
sbb
xchg
sti
cmpb
lods
dec
test
xor
arpl
ret
push
add
push
mov
mov
ss
sub
sub
xchg
stos
fnstsw
jmp
add
das
mov
or
pop
sbb
cltd
fbstp
mov
popf
out
or
mov
pushf
dec
cmp
pop
test
leave
scas
jnp
insl
pop
ds
dec
imul
ss
inc
inc
cmpsl
dec
inc
gs
cmp
or
xor
mov
ljmp
insl
cmpsb
cwtl
mov
repz
movb
js
adcb
add
add
add
xrelease
mov
jg
fst
or
push
cmp
pusha
loop
in
movb
dec
xchg
push
add
and
jbe
inc
xor
pop
fs
mov
popf
dec
lret
fs
xor
mov
loop
out
aas
ret
add
nop
and
shrb
ret
push
popf
test
in
inc
rol
add
fldl
sti
movsl
push
lods
int3
jbe
pop
inc
jge
dec
add
mov
jl
fs
dec
sub
test
sti
ficompl
mov
movb
push
mov
sub
jle
bound
cmp
lods
push
mov
out
test
xacquire
dec
lahf
jp
sub
nop
sbb
es
bound
and
lock
je
imul
popa
jmp
sbb
fiadds
pop
fisubs
push
sub
ret
js
jb
ss
xchg
mov
push
xlat
and
pop
sub
fidivs
cmp
inc
addl
sbb
mov
dec
outsl
xor
mov
faddp
push
repz
cli
xchg
movsb
jg
pop
inc
fisubrs
das
repnz
xor
pop
pop
aaa
loop
mov
inc
cmp
shlb
and
push
and
cmp
mov
mov
gs
pop
js
jmp
or
test
aaa
cmp
pop
dec
pop
jg
cmpsb
pop
pusha
mov
xor
push
push
mov
push
xchg
jmp
shl
ss
push
insl
mov
dec
mov
sub
push
fucomip
pop
orl
mov
fcoms
sbb
sub
fldt
scas
in
cmpsl
jne
popf
pop
shr
shl
jp
fs
push
push
mov
push
aaa
hlt
pop
push
fldenv
cltd
test
cmp
fimuls
push
rorb
lods
lret
sub
fwait
iret
int3
add
jge
in
pop
jmp
jnp
lds
fdivs
adc
and
sbb
sbb
mov
inc
test
sti
outsl
mov
push
jp
pop
idivl
add
popf
les
pop
sahf
jmp
and
lahf
sahf
jo
hlt
ret
js
inc
ljmp
pop
mov
outsb
pop
add
pop
xchg
and
and
mov
sbb
or
fimull
cmp
fnstsw
sbb
xchg
cmp
inc
and
pop
adcl
mov
insb
dec
push
sbb
fidivrs
ret
int3
sbb
aad
cld
jo
lcall
push
lods
fdivs
mov
adc
pop
mov
shlb
test
xlat
subb
xlat
lret
rolb
xor
pop
out
mov
push
cwtl
dec
pop
jne
ss
fsub
mov
push
or
shlb
add
add
int
fs
pop
fdivr
adc
fnstenv
ret
mov
add
inc
loop
xchg
inc
sbb
int
xchg
cwtl
mov
jno
push
sbb
cmpsb
cltd
in
cmc
mov
pop
add
push
in
xor
cmp
adc
xchg
sub
inc
fisubrs
movsl
mov
sbb
mov
inc
fs
jbe
pop
fildl
xchg
imul
pop
jnp
sub
and
add
push
dec
loop
lock
sub
push
jb
cwtl
sbb
fs
insb
fadd
repz
cs
sub
stos
fidivrs
repnz
mov
push
imul
mov
jae
fistl
cmp
xor
test
inc
inc
push
outsl
cmp
lock
fistl
sbb
popf
adc
andl
sbb
pop
pop
mov
jecxz
push
mov
pop
sbb
mov
inc
imul
or
and
dec
inc
ss
gs
sbb
sbb
push
aaa
mov
xor
loopne
xchg
andl
sbb
fldenv
call
and
mov
xchg
xchg
movsl
xchg
add
ss
inc
or
mov
ror
push
dec
mov
and
xchg
xchg
inc
mov
pop
pop
fs
test
mov
cmp
mov
mov
scas
imul
stos
sub
mov
cmc
addr16
jl
pop
cmp
or
pop
sbb
int
pop
lahf
or
frstor
mov
xor
dec
sub
mov
cmpsb
xor
cmc
fistps
dec
xchg
xor
pop
xlat
and
cmp
repz
inc
mov
es
xchg
cmp
jbe
push
dec
pop
sbb
push
shll
xchg
jne
jmp
cmp
ja
lret
stc
cli
lods
aas
and
mov
mov
scas
xor
mov
ds
pop
xorl
and
push
jecxz
out
mov
mov
insb
mov
into
jp
pop
xlat
jno
xchg
hlt
ds
stc
popa
xchg
cmp
cmp
cld
test
sarb
or
test
dec
xchg
sbb
movsb
add
cmpsb
push
dec
mov
testl
pop
sarl
aam
movsl
mov
sbb
dec
stos
sub
cli
cmpsl
add
movsl
push
cmp
push
sub
mov
jle
fdivr
add
aas
inc
fildll
outsb
add
sub
mov
cs
mov
fistl
aas
jle
xlat
lcall
sbb
out
mov
std
dec
data16
stos
push
out
fmuls
push
loop
cmpl
enter
and
adc
xchg
cli
sbb
aaa
out
notb
fistpll
sbb
inc
lods
hlt
sbb
test
inc
push
cmpsb
mov
or
xor
mov
sub
dec
or
adc
adc
mov
adc
xchg
xchg
fwait
jae
push
add
fimuls
test
xlat
pop
imul
adc
gs
out
sub
arpl
or
xchg
cltd
data16
in
sbb
dec
insb
test
clc
and
int
js
xchg
subb
ret
cs
lret
test
rclb
push
inc
sub
ficoms
push
shll
jmp
jnp
rcll
dec
sbbl
fs
aaa
lret
daa
or
push
jg
sti
push
cli
pop
bnd
push
fcmovnb
jl
out
out
mov
push
dec
dec
push
or
iret
push
int3
mov
cli
popa
arpl
add
and
xorl
dec
js
dec
push
lea
addr16
lea
sub
xor
mov
mov
fwait
push
sbb
lret
mov
xchg
ret
mov
mov
xor
clc
scas
rol
push
loopne
stos
addr16
mov
inc
sbb
or
add
push
nop
add
or
mov
inc
in
or
imul
rclw
lret
in
dec
cmp
jno
jb
idivl
insl
loopne
mov
or
mov
inc
or
xchg
rorl
mov
out
push
adc
push
jmp
pop
inc
loop
into
sbb
jl
ret
leave
or
sbb
adc
in
sub
pop
pop
inc
mov
out
in
xor
mov
or
and
iret
lret
jbe
cmp
sahf
mov
sbb
cli
mov
jmp
outsl
les
sbbb
pop
imul
in
orb
frstor
xchg
idivb
lahf
std
das
push
int
roll
jge
pusha
lcall
and
push
push
jg
ljmp
jle
adc
fwait
xchg
hlt
in
sbb
or
into
sub
adc
lock
aas
pop
sub
stos
add
les
pop
rorb
inc
push
dec
call
repnz
lods
xor
in
push
and
adc
mov
cmp
movsb
flds
push
ja
and
mov
jmp
nop
in
ja
inc
jg
dec
cmpsb
push
mov
xchg
addb
jb
aam
pop
mov
mov
xor
fnsave
sbb
and
daa
repnz
cmp
pop
xor
shl
btr
popa
loop
jmp
int
dec
sub
mov
pop
inc
mov
loope
into
xchg
dec
sbbl
sub
adc
lcall
mov
push
hlt
jno
out
xor
lcall
and
adc
stos
lods
lret
push
inc
out
pop
push
mov
stos
pushf
adc
xchg
jo
pop
out
pushf
lcall
and
push
mov
push
rolb
aaa
pop
sbb
stc
pop
push
popf
cmc
imul
std
cmp
in
dec
xlat
daa
dec
xchg
mov
lcall
bound
andl
or
xchg
ret
add
mov
jns
cmpsb
mulb
sbb
inc
mov
mov
sub
arpl
xor
and
pop
insl
sahf
xchg
movsl
dec
and
push
or
xchg
dec
jne
push
into
xor
mov
or
cli
js
xor
lahf
enter
push
cmc
jl
cmpb
rcrl
int3
xor
and
dec
adc
jae
jl
cmpsl
aas
mov
cs
push
xchg
or
outsl
setbe
adc
push
sbb
jmp
mull
shrb
xchg
fwait
inc
push
pop
xchg
popa
dec
mov
xchg
test
sbb
cli
inc
xchg
inc
pop
sahf
add
sti
cltd
lods
mov
lret
popa
cmp
sub
fwait
lea
jmp
sbb
movsb
xchg
mov
lret
inc
push
pop
and
aad
push
pop
pop
outsl
sbbl
out
aad
pusha
xor
mov
sbbb
adc
jecxz
inc
and
insb
push
aad
shlb
cs
sub
adc
fisttpl
test
add
mov
xchg
mov
mov
cmpsb
adc
test
jmp
push
fwait
adc
mov
loope
and
or
lods
pop
jg
xor
test
pop
cmp
imul
xor
mov
in
in
int3
ja
ljmp
sarl
pop
into
mulb
xchg
or
inc
or
cmp
andl
testl
ljmp
sbb
sbb
repz
adc
add
sbb
jno
lahf
sub
jge
clc
pop
jbe
mov
inc
adc
mov
shll
shl
sti
neg
adc
cmp
and
mov
lods
jle
call
lock
outsb
sarb
hlt
iret
sbb
clc
insl
std
ret
aad
sti
mov
jmp
fsubrl
bound
inc
xor
or
or
pop
fistl
push
out
xchg
pop
inc
jmp
mov
push
sbb
fcoms
lods
hlt
lret
xchg
je
dec
push
push
cwtl
gs
ficoms
arpl
stc
dec
andl
bound
fsubs
cmpsl
jnp
push
jb
std
dec
fnstenv
adcb
adc
data16
jg
pop
call
pusha
add
sbb
in
and
mov
repz
xchg
test
gs
les
les
add
cmp
outsb
pusha
adc
lock
pop
xchg
sbb
inc
repnz
cwtl
rolb
divl
pop
or
dec
bound
out
test
dec
pop
and
in
push
fsts
cmp
jo
mov
int
or
ja
test
jp
nop
push
data16
jnp
sbb
xor
dec
sbb
pop
dec
jl
subb
or
je
sbb
addl
es
mov
dec
xchg
mov
xor
jecxz
test
pop
popa
sti
insb
add
jp
pop
push
jg
pop
repnz
repnz
xor
xorl
hlt
divb
mov
dec
insb
icebp
gs
addr16
push
je
xor
jp
xchg
repz
das
pop
es
lds
and
mov
inc
lds
jno
adc
mov
or
out
inc
push
lods
imul
mov
pushf
pop
jbe
push
fimuls
xchg
roll
dec
pop
outsl
fs
sbb
mov
jp
out
inc
cmp
mov
out
add
lock
xchg
cmp
mov
sbb
stc
mov
inc
clc
cs
aad
in
xchg
add
ret
jecxz
mov
outsl
mov
dec
lea
gs
gs
js
xor
lcall
xchg
fucom
fsubrs
movsl
daa
xlat
mov
jmp
mov
mov
xchg
xor
cmpsb
mov
mov
xor
aas
scas
sub
push
ja
mov
cmp
sub
mov
fwait
shrb
add
sub
adc
add
clc
cmc
mov
dec
or
add
test
aaa
inc
inc
mov
inc
sub
int
lea
adc
or
imul
ss
test
xor
jns
or
clc
xchg
sbb
mov
sbb
mov
mov
js
test
push
sbb
cs
fsubs
les
cwtl
xor
in
loopne
pop
fwait
sub
daa
repz
roll
sarb
fisubrs
clc
inc
and
lock
cmp
outsb
in
movsl
int3
mov
cmp
es
inc
popf
lahf
test
push
lret
push
in
push
repz
cmp
sti
jnp
aad
lea
xchg
mov
inc
daa
into
add
dec
int3
ja
jnp
push
and
in
lret
mov
or
sub
subb
mov
xchg
sub
mov
add
sbb
addr16
dec
dec
lret
jp
push
stc
mov
dec
lahf
jns
jae
mov
push
xlat
das
inc
icebp
aad
xchg
lea
test
rol
cmp
sub
aaa
jo
shlb
enter
out
fisttps
push
movsb
out
xchg
in
add
fidivrs
mov
xchg
out
xchg
xchg
aam
pop
and
and
cld
or
add
leave
es
push
jnp
pop
dec
daa
jmp
cmpl
repz
into
cmp
mulb
test
mov
leave
xor
js
xchg
dec
stos
into
pop
lea
mov
jnp
xchg
xor
jp
sub
xchg
es
in
rorb
mov
lfs
xor
mov
inc
mov
imul
and
iret
cmp
dec
cmc
out
dec
jns
xchg
add
cmp
and
icebp
std
std
cmp
and
in
dec
jl
xchg
mov
pop
adc
and
and
popa
dec
mov
pop
and
sbb
out
dec
xchg
jno
add
mov
dec
sbb
sbb
inc
and
test
pop
and
jmp
lret
test
xchg
test
popa
and
adc
adc
insl
pusha
add
orb
das
dec
and
test
sub
pop
jecxz
inc
popf
xor
fidivrl
jae
mov
fisubrl
push
add
cmp
cmp
test
enter
lock
sub
jg
cmp
mov
stos
rolb
roll
stos
cmpsb
icebp
orb
popf
fs
test
inc
pop
push
jne
xor
adc
jle
push
xor
je
xlat
xchg
imul
cmp
in
test
cwtl
fidivrl
pop
and
mov
inc
ficoms
sub
mov
into
fwait
mov
mov
push
pop
xorl
test
mov
fcompl
insb
mov
sarb
pop
stos
pop
mov
loope
and
mov
cltd
test
repz
mov
fiaddl
xlat
xor
lods
jb
nop
in
pushf
call
fs
dec
enter
loop
pop
mov
or
or
test
mov
jno
movsl
cmp
pop
cmp
sub
cmp
sub
mov
inc
sbb
movsb
cmp
jmp
imul
frstor
mov
jp
ss
or
sub
jnp
hlt
mov
cwtl
incl
sbb
or
jmp
repnz
jns
sub
xchg
inc
mov
push
cmp
js
cmp
jl
fadds
pop
cmp
mov
bound
aaa
inc
mov
or
jnp
sbb
cltd
or
pop
cmp
or
and
push
sub
mov
sbb
cmp
mov
ja
xchg
fisubl
xor
sub
rcrl
dec
out
jmp
fdivrp
jb
and
sub
mov
dec
mov
es
setae
push
je
inc
sbb
mov
stc
jl,pt
lock
push
clc
lret
mov
loopne
addl
sti
test
popa
and
mov
add
into
das
push
shll
arpl
mov
add
test
out
cmpsb
daa
mov
and
push
shrb
lea
and
push
xor
imul
pmuludq
out
or
pop
imulb
cmpl
imul
inc
pop
cmp
nop
popa
adcl
cmp
adc
lds
ljmp
test
adc
out
pop
decl
arpl
roll
les
inc
and
loop
aas
jg
sbb
adc
ds
push
pop
lcall
adc
call
mov
addr16
gs
icebp
int3
movsl
out
push
shlb
mov
out
push
pop
pop
lods
lret
nop
inc
pop
and
lret
subl
rclb
mov
outsb
outsb
pop
push
lods
lods
jg
les
imul
sti
ret
sbb
outsl
mov
cmpl
dec
lret
stc
or
jecxz
and
xor
push
out
lea
cwtl
adc
rclb
push
add
mov
jbe
jp
jmp
idivl
mov
xor
fildl
dec
sbb
push
insb
sub
pop
repz
add
movl
inc
cld
sub
dec
ss
lock
sbb
jmp
mov
pop
aas
lret
mov
enter
scas
push
mov
rorb
pop
sub
insl
dec
test
jle
into
loopne
mov
xchg
es
and
xchg
mov
pop
push
aas
cmp
notb
gs
dec
popf
and
xchg
lods
movsb
mov
lock
or
xchg
notb
loopne
lret
cmc
mov
stos
insl
and
inc
cwtl
mov
inc
test
ret
pusha
test
push
aad
std
adc
sahf
jge
ret
loope
sub
ss
clc
jg
mov
xor
jl
pop
sbb
jns
jp
imul
pop
loop
and
fldl
mov
hlt
push
pushf
and
mov
xchg
mov
ljmp
fwait
leave
add
inc
push
mov
test
in
or
cmpsb
sti
cmp
stc
cmp
fsts
lds
fs
pop
pop
mov
adc
popl
iret
testb
out
pop
in
addb
xchg
sbb
xchg
es
dec
andl
int
les
in
in
jnp
or
jle
mov
cmpb
or
pop
cmp
cmp
mov
sub
jno
lret
addr16
pop
xchg
bound
mov
inc
out
fldt
sbb
cmpsb
lock
sub
and
xor
repnz
andb
mov
jno
mov
sub
test
out
jne
ficompl
fldcw
pop
cltd
ret
bound
jno
cltd
dec
les
adc
add
adc
jne
add
xchg
and
mov
dec
int3
dec
lods
pop
int
cmp
aam
push
mov
inc
cmp
pop
push
stos
xchg
fdivrs
mov
jb
add
lea
hlt
jecxz
aas
adc
mov
arpl
pop
int
mov
jae
sbb
add
popf
pop
inc
mov
stc
xchg
stc
mov
sar
fwait
pop
fidivrl
fdivrl
xchg
cwtl
dec
cmp
dec
into
jbe
cwtl
insb
push
dec
scas
les
push
adc
leave
mov
div
aaa
lcall
jle
mov
fs
movsb
cmp
jl
loope
stos
in
pop
inc
or
std
jle
inc
jnp
dec
xlat
test
fcomps
loope
xchg
in
imulb
or
test
aaa
pop
sbb
lods
sub
cmp
js,pn
orl
and
mov
pop
rclb
insl
xor
pop
sub
push
pop
cmp
sub
pop
push
aam
mov
in
and
outsl
lret
je
dec
pop
iret
aad
in
mov
or
nop
xor
jge
js
jmp
stos
inc
in
ret
fmuls
mov
pushf
add
lods
out
out
ja
fldl2e
ret
imul
fbstp
and
push
mov
mov
mov
jecxz
jbe
inc
mov
lcall
inc
dec
test
adc
mov
fisttpll
rol
or
jmp
cmp
sahf
je
aaa
mov
and
cmp
faddl
dec
inc
sbbb
push
lcall
bound
mov
xor
pusha
mov
mov
and
xchg
push
loope
loop
repz
inc
xchg
add
xor
push
frstor
adc
push
mov
mov
pop
jno
aam
or
jb
mov
xchg
xorl
mov
pop
inc
shll
cltd
cmpsl
push
sub
xchg
jbe
imul
fldl
je
into
cli
dec
enter
pop
out
out
push
lret
add
cld
aam
dec
mov
xchg
cmp
aas
bnd
cmpb
fbld
jle
pop
ror
neg
orl
mov
insb
clc
xchg
fisubl
sbb
fdivs
mov
pusha
clc
loopne
inc
xchg
mov
fwait
bound
ret
cmpb
into
and
ret
dec
xchg
ja
popf
addr16
pusha
sub
pop
pop
icebp
adc
cmp
xchg
pop
out
stos
imul
adc
sbb
popf
arpl
hlt
sub
dec
mov
xor
dec
cmp
sti
push
xor
mov
and
int3
imulb
fiaddl
fwait
xorl
adc
mov
xor
movsb
push
dec
mov
sub
cmp
cwtl
push
mov
mov
aad
xor
insl
addr16
cmpsl
xchg
sbb
pushf
sbb
das
mov
hlt
imul
jnp
xchg
xchg
dec
lods
test
inc
imul
lds
dec
mov
mov
jbe
test
mov
cmp
test
jae
mov
mov
push
mov
and
arpl
jmp
lods
arpl
mov
popa
cli
in
je
mov
jge
xor
rcll
popf
sub
lret
insb
arpl
push
inc
subl
sahf
data16
pop
jae
push
pop
xor
je
xchg
rorb
xchg
adc
inc
mov
and
mov
dec
test
sub
jns
lret
test
insb
lods
in
mov
dec
inc
fwait
jl
lret
cmp
ret
inc
pop
push
or
pop
aaa
sbb
mov
push
sub
xlat
leave
inc
bound
mov
pop
push
xor
sbb
daa
movsb
test
lahf
inc
out
jmp
mov
push
mov
data16
sbb
sub
fistpll
jae
sbb
addr16
or
aam
xchg
sub
inc
sbb
cli
fsubrl
out
sub
insb
repz
out
arpl
add
mov
inc
and
or
sub
mov
jg
and
push
imul
fdivs
lret
inc
das
cmp
sti
adc
insb
dec
je
sbb
sbb
or
sti
or
or
or
out
add
inc
mov
sbb
or
cmp
jge
fnstsw
xor
push
pop
inc
arpl
inc
mov
rcrb
into
add
daa
sub
popf
sbb
sti
cmp
clc
mov
push
jo
int
fildll
dec
jo
test
dec
mov
iret
pop
xchg
scas
adc
pop
outsl
or
decb
clc
lcall
pop
dec
jmp
pop
sahf
dec
add
pusha
or
add
push
subb
mov
out
push
lret
and
mov
aaa
push
jbe
div
jge
sub
int
out
jecxz
xor
iretw
jl
mov
sbb
push
shrb
test
outsb
cmpsb
mov
ss
loopne
push
js
cli
dec
push
push
cs
arpl
lock
insb
cwtl
inc
fidivs
dec
mov
mov
clc
xlat
sub
lahf
cli
sub
cmp
sub
jbe
mov
iret
jg
lods
bound
std
lcall
mov
loop
xchg
shll
mov
xchg
inc
jns
ret
xchg
xchg
inc
jae
psrlw
lods
movsl
icebp
cmpsb
pop
lcall
push
call
add
lods
into
or
jl
mov
loop
mov
mov
cs
jmp
stc
sbb
xorl
insb
or
mov
gs
jae
cwtl
push
dec
out
add
dec
outsl
ja
repz
push
push
lret
jecxz
jae
mov
mov
adc
xlat
in
shr
pop
ret
pop
or
dec
sbb
mov
or
push
sub
int3
hlt
fnstcw
ja
xlat
jle
int
push
push
xor
lahf
add
pop
cs
lcall
or
lods
fcoml
ds
adc
je
mov
fs
sub
ljmp
push
notb
in
ds
ljmp
jge
fildl
inc
lock
lcall
rcll
call
mov
push
xor
push
jmp
faddl
push
mov
enter
aam
dec
and
mov
pushf
xor
shrb
jae
and
dec
inc
xor
add
cmp
outsl
clc
jae
jecxz
cltd
xor
xor
adc
sahf
add
jb
push
or
jl
ret
sub
mov
ret
in
insl
mov
sub
dec
ret
shl
jns
inc
push
popa
das
jb
call
lea
push
or
sub
mov
sub
mov
mov
push
dec
loope
cltd
mov
frstor
sub
test
mov
fcmovu
leave
out
inc
adc
pop
out
mov
mulb
cs
dec
mov
sbb
cmp
adc
pop
mov
jno
cltd
jno
xor
les
mov
pop
jbe
lds
and
mov
aaa
dec
pop
jmp
ljmp
pop
pop
push
jbe
cs
das
xor
or
jge
arpl
je
mov
mov
lret
into
ds
pop
or
in
pop
jbe
int
mov
fdivl
mov
sarl
push
cmc
jecxz
jl
xor
mov
sub
mov
nop
mov
jg
sbb
fdivs
and
mov
testb
rcrl
cmpb
xor
dec
mov
mov
pop
add
push
fisttps
daa
mov
push
pop
adc
sub
mov
insl
push
add
xchg
fimuls
ljmp
sub
mov
loop
inc
dec
or
outsl
mov
lds
push
add
pop
pop
daa
inc
xchg
and
xchg
pop
cmp
jecxz
push
pop
fs
adc
es
push
jmp
mov
pop
pop
inc
mov
insl
xchg
sbb
sbb
loope
add
add
mov
sti
out
scas
cli
xchg
sbb
dec
and
add
imul
jno
stos
mov
xchg
or
mov
jnp
pop
pop
jmp
sbb
clc
jp
jns
pop
adc
test
mov
adc
push
push
mov
jbe
mov
sub
outsl
mov
and
inc
adc
ljmp
fmull
sub
js
mov
or
dec
and
pushf
mov
std
lea
jmp
cmp
imul
lcall
faddl
xlat
pushf
xchg
dec
mov
sub
push
fcomps
mov
dec
popf
and
lods
test
call
xor
xchg
push
sbb
ret
sbb
mov
mov
test
jl
push
int
rcll
sbb
iret
sbbb
mov
std
scas
stos
fst
xorl
subl
notl
push
adc
fstps
add
mov
mov
lret
jns
pop
insb
or
fsub
in
popf
mov
mov
in
movsb
adc
xor
fcomps
pop
jno
fnsetpm(287
mov
jle
cmp
lret
call
outsb
inc
ja
xor
adc
xor
mov
ja
add
jle
mov
mov
clc
push
pop
aas
mov
popa
push
fimuls
orb
adc
dec
dec
xchg
shl
jb
insb
and
cmp
pop
push
pop
mov
test
xchg
xchg
out
mov
add
jb
out
out
inc
pop
sbb
aas
sub
jo
hlt
or
fisttpll
lds
arpl
push
pop
scas
sahf
push
cmpsl
in
lds
sbb
add
dec
jbe
add
subl
imul
pusha
add
out
pop
cld
sbb
mov
mov
nop
sub
leave
push
mov
je
inc
pusha
fistl
lahf
adc
cmp
fdivl
dec
sub
push
push
imul
in
cmpb
repz
pop
and
sbb
jnp
fwait
cld
ss
outsl
cmp
aaa
mov
ds
cs
in
xor
hlt
out
sub
and
or
or
and
bound
test
xlat
pop
lcall
inc
adc
aad
dec
aad
in
aas
punpckhwd
jnp
js
in
mov
dec
fst
push
or
stc
jmp
icebp
shll
outsl
imull
aam
xor
stc
inc
arpl
cmp
sub
fcompl
mov
std
mov
notl
rclb
jnp
pop
jmp
or
mov
pop
mov
add
movsl
dec
cli
mov
std
jge
push
xor
rcrb
adc
mov
xchg
mov
mov
int
pop
rorb
ficomps
adc
iret
cltd
fistpl
sub
adc
cwtl
lcall
sarl
lea
dec
subb
cmp
imulb
dec
and
iret
mov
pop
shrb
sbb
inc
idivl
int3
ss
add
stc
sahf
into
mov
or
cmpsb
sbb
cmpsb
jae
push
add
inc
inc
mov
mov
aad
fdivrl
jecxz
repz
add
xor
insb
shrl
js
inc
bound
hlt
lret
and
iret
add
mov
ds
mov
adc
adc
shr
cld
sub
fcompl
rol
daa
in
push
bnd
out
sub
dec
mov
fnstcw
mov
scas
pop
or
roll
das
mull
cmpsl
cmp
sar
push
popf
lods
shrb
push
xchg
outsl
pushf
xor
inc
repnz
out
pop
je
adc
mov
mov
mov
les
lcall
mov
add
into
aam
fs
imul
ljmp
xchg
jns
adc
lret
or
pop
add
lods
gs
cli
rorl
and
and
shll
stos
cmp
pop
mov
iret
ja
icebp
jae
loopne
adc
cltd
movsl
push
lret
and
mov
push
orb
cmpsl
test
sub
sub
insl
cmpsb
dec
jae
cmp
ss
sti
push
jl
sbb
mov
cli
shll
mov
inc
pop
mov
subl
push
adc
jecxz
movsl
or
cld
gs
out
insb
mov
scas
jae
xor
inc
frstor
call
imul
sbb
gs
adc
jg
mov
frstor
push
in
ss
inc
lds
leave
imul
mov
cli
repnz
cmp
sbb
inc
scas
mov
imul
cmp
xchg
sbb
mov
out
hlt
xor
fildl
aam
or
int3
pop
and
push
test
in
pop
cmp
jne
sbb
jmp
push
mov
insl
rcr
or
jl
mov
and
cmp
lods
sbb
pop
into
fdivl
test
sahf
jmp
xor
sub
ljmp
mov
in
xor
adc
add
mov
xlat
jge
loop
add
jmp
lea
mov
lock
jb
lods
push
jmp
notb
fwait
sti
jmp
in
lcall
pushf
push
mov
popa
lahf
fs
lret
cmp
cwtl
into
pop
in
push
sub
push
cmp
in
lock
inc
xchg
and
add
sbb
int
and
cmp
fsts
in
push
mov
outsl
jbe
mov
mov
jmp
in
rcll
fs
jmp
lods
movsb
scas
xchg
pop
jns
sbb
aas
mov
je
vrsqrtps
add
jne
inc
cmp
test
mov
repnz
xchg
imul
cwtl
sbb
mov
pushf
adcb
cmp
add
aas
pushf
sbb
nop
sbb
mov
lea
push
sbb
jge
addr16
sub
negb
lods
shlb
cmp
leave
jo
add
ds
in
mov
add
mov
fistpl
stc
cmpsl
cmp
add
lahf
push
jns
push
push
push
add
mov
ret
sub
sbb
sub
push
ss
hlt
aam
jmp
sti
mov
loope
sbb
mov
xchg
bound
push
in
stos
or
in
add
sbb
std
and
insl
outsb
stc
cmpsb
pop
sub
xor
stos
jne
mov
add
sbb
add
push
pop
push
sub
fisttps
and
dec
dec
jg
dec
jno
outsb
sub
adc
jge
add
xchg
cltd
pop
ret
adc
mov
sub
out
xor
jl
adc
test
aad
mov
mov
sbb
pop
push
std
adc
cltd
adc
mov
mov
push
inc
cli
mov
cli
test
in
fidivs
add
pop
out
lods
fldcw
imul
sub
jg
sub
ja
cmc
testl
mov
icebp
insl
bound
scas
jmp
mov
rclb
mov
aaa
ja
push
jbe
inc
adc
stos
mov
mov
jbe
mov
insb
je
pop
mov
mov
fisubrs
sti
movaps
mov
popf
push
sub
sbb
push
sbb
loop
dec
ja
dec
inc
mov
idivl
cmp
mov
leave
mov
and
test
rep
jge
xorl
in
shll
cmpb
pop
dec
xor
push
mov
nop
outsl
shrb
sbb
dec
popf
jg
pop
xor
pop
mov
int3
jle
sbb
rep
pop
lret
pushf
lahf
ljmp
xchg
xor
in
stc
scas
fsub
sbb
sbb
mov
lock
push
mov
out
add
loopne
push
je
cmp
subl
xorb
popf
jo
adc
test
mov
inc
mov
jg
mov
dec
or
inc
ja
mov
xor
or
xor
ljmp
push
das
push
cmp
out
xchg
pop
push
cmp
mov
es
xor
xor
pop
call
pop
ja
adc
adcl
jno
add
int3
pop
das
cmp
cltd
insb
cs
pop
lretw
sbb
jmp
mov
pop
dec
fs
dec
sti
lcall
aas
push
mov
dec
jb
mov
push
cmp
lret
mov
rorl
bound
loope
pop
mov
or
push
cmp
outsb
test
lahf
sbb
mov
pop
xchg
loopne
ljmp
jg
sti
pop
xlat
ret
leave
sub
loopne
inc
or
cmpsb
shrl
push
or
push
mov
mov
mov
mov
dec
pop
decl
lret
mov
cmp
add
dec
mov
push
cmpb
and
movsl
push
jb
test
and
cmpsb
sbb
lock
and
roll
mov
sub
jo
fucom
adc
lea
repnz
popa
les
dec
sbb
lea
mov
jl
inc
inc
roll
mov
mov
cmp
das
pop
insb
clc
mov
fucomip
mov
adc
outsb
pushf
add
imul
inc
out
or
and
pop
adc
sub
jge
pop
es
stos
xor
xchg
enter
cmpsb
sbb
mov
mov
sub
ss
js
in
inc
xchg
icebp
stc
or
mov
imul
lods
outsb
fidivrs
cmpsb
sbb
jle
mov
lds
lock
je
inc
dec
lcall
jnp
mov
sarl
dec
arpl
pop
repnz
mov
test
mov
jb
mov
fsubs
shr
adc
push
orl
in
lds
fisubrs
insl
jae
xlat
dec
push
adc
loopne
add
cwtl
sbb
add
jle
imulb
test
lods
int3
arpl
xchg
adc
leave
inc
sahf
lret
fcmovu
push
pop
mov
pop
in
jecxz
repz
jnp
or
push
xor
push
lods
into
mov
movl
cmp
push
mov
popa
add
jnp
xchg
mov
push
add
jb
scas
and
scas
pop
negb
dec
int3
stos
xor
dec
cmp
inc
dec
dec
imul
dec
pop
xor
test
and
outsl
adc
xchg
not
pop
cmpsb
pop
xchg
add
iret
daa
add
mov
cltd
and
push
test
jbe
test
jae
mov
pop
rcrb
arpl
xlat
mov
add
or
mov
adc
add
push
inc
fldcw
aad
pop
shrb
adc
mov
sbb
cmp
insl
in
cmc
mov
mov
lods
mov
scas
testl
stos
mov
xor
aas
push
mov
outsb
int
lret
aam
xor
or
lock
cmp
push
inc
mov
xorb
xchg
pop
in
ja
dec
cmp
and
inc
out
hlt
sbb
std
aas
dec
imull
shr
dec
fiaddl
imul
je
mov
lcall
cmp
inc
hlt
pop
je
negl
dec
enter
jo
and
cmp
push
pop
sbb
jo
dec
hlt
cmp
ljmp
and
adc
std
cltd
adc
add
inc
clc
stos
scas
sahf
and
jns
and
pop
or
inc
pop
and
and
psubusb
mov
add
ret
inc
push
cmp
push
icebp
jge
pop
mov
shlb
daa
cmpsb
js
outsl
mov
and
push
jmp
xor
ret
inc
ljmp
sbb
sbb
xor
fcmovne
lcall
push
loopnew
jns
xchg
test
leave
gs
lcall
cmp
out
add
mov
sbb
rol
inc
js
in
aam
push
mov
repz
inc
mov
arpl
lds
push
outsl
push
inc
ljmp
sbb
push
sbb
jo
dec
pop
loopne
fwait
cmp
stc
xchg
out
aad
mov
lods
out
pop
das
push
into
mov
adc
ret
movsb
cmp
push
mov
lcall
xchg
xorl
clc
incl
sub
mov
mov
add
mov
std
xchg
out
adc
movb
sub
sub
or
jmp
orl
jecxz
inc
push
jns
gs
es
push
loop
shrl
mov
fstps
or
jg
inc
data16
xor
or
mov
mov
aad
int3
movsl
in
or
fildl
enter
dec
in
insl
mov
fwait
inc
mov
add
push
je
aas
out
jo
inc
loope
inc
fistl
out
cmp
sbb
pop
sbb
mov
stos
inc
sub
jp
cmp
dec
pusha
dec
jge
push
lcall
enter
pop
xor
jecxz
cmpsb
std
mov
ljmp
sbb
push
jne
inc
mov
jmp
push
pop
es
sub
inc
and
pop
in
cli
cmp
pop
roll
jmp
xchg
mov
hlt
mov
ss
rol
xchg
insl
stc
js
dec
push
mov
gs
loopne
pop
jne
cmc
loop
lock
dec
push
mov
sbb
pop
lods
bound
push
sub
movsb
sbb
repnz
call
loopne
adc
xchg
cmp
jl
xor
push
mov
jl
jne
jp
in
dec
jb
cwtl
ret
test
sti
cld
pop
es
je
shlb
lods
outsb
or
mov
fistl
cltd
scas
repnz
es
andps
les
xchg
push
jne
push
clc
sbb
cmp
pusha
lcall
add
loop
inc
mov
loopne
push
xlat
cmc
sub
into
xrelease
sarb
push
mov
and
pop
add
lahf
stos
pop
xchg
fdivrl
int
pop
fwait
sbb
sbb
notl
daa
mov
es
daa
fisttps
loope
je
stc
inc
add
cmc
xlat
dec
aam
or
dec
clc
imul
jmp
mov
ljmp
sbb
iret
hlt
aad
shl
test
dec
mov
int
out
jns
xchg
lods
int
imul
adc
xor
sbb
test
mov
cmp
xchg
cli
addr16
bound
sbb
out
push
add
aam
gs
pop
inc
out
mov
mov
sahf
adc
inc
enter
cld
sbb
in
das
adc
push
adc
mov
xor
cs
jge
mov
add
call
das
lcall
jle
divb
nop
mov
mov
lods
push
bound
push
and
imul
loope
cmp
fisubs
ficomps
icebp
fidivl
loope
lcall
lcall
or
cltd
loopne
stos
inc
aam
scas
mov
das
pop
jge
and
jns
jp
fsubrs
gs
incb
das
push
inc
inc
jecxz
jo
push
pop
dec
ss
fmull
test
inc
and
xchg
push
push
cld
add
xchg
outsl
dec
cmp
mov
or
rorb
jno
sub
pop
rsm
enter
xchg
or
leave
cld
cld
and
xorb
dec
jmp
inc
adc
push
pusha
adc
pop
icebp
xchg
cmp
add
xor
mov
pop
sub
lock
push
push
popf
pop
add
jnp
inc
and
mov
push
fiaddl
xchg
adc
fcoml
cmc
jl
daa
push
rclb
sahf
lods
scas
push
cmc
push
cmpsl
cld
andl
mov
sub
inc
jae
cmc
inc
xchg
test
sbb
pop
adc
sbb
leave
sub
pop
adc
aaa
sbb
out
cmp
fiadds
mov
ret
pushf
jbe
pop
cli
add
cmp
int
lret
mov
mov
cmc
lret
lret
repnz
gs
fnstcw
sbbb
ret
or
sub
adc
dec
movsb
push
mov
mov
add
adc
pushf
jo
incl
inc
mov
in
or
mov
push
mov
jae
ret
in
decl
in
inc
mov
inc
lahf
lds
mov
adc
jp
adc
or
into
sarl
cmp
inc
repnz
xlat
in
pop
or
es
cs
push
sbb
cmp
jb
fwait
imul
sahf
ja
addr16
mov
and
inc
std
movsl
mov
stc
loope
imul
mov
dec
or
fisttpl
jns
xor
sub
enter
imul
mov
jbe
fisubl
ss
outsb
std
jnp
out
cmpsl
fimuls
push
cmc
adc
das
add
pop
xchg
int3
or
mov
mov
out
sahf
or
mov
insb
icebp
aas
push
or
adc
les
sub
sti
add
imul
aam
inc
fs
mov
sub
jnp
pusha
jl
hlt
jge
mov
ja
gs
mov
pop
out
pop
or
loopne
fmuls
fidivl
in
in
pop
sbbl
pushf
hlt
adc
fwait
jg
push
jmp
ja
test
lret
subl
lds
mov
jno
pop
pop
jecxz
sbb
std
xchg
addr16
cmp
in
adc
cmp
push
addr16
test
rclb
ds
push
sbb
jle
mov
cmovge
and
insl
cmp
lods
adc
adc
pushl
xor
xor
roll
imul
jbe
addb
push
pop
notb
incl
jle
pusha
mov
cmp
or
jnp
lcall
lock
jo
dec
mov
imul
jg
in
jge
pop
mov
mov
dec
xchg
add
cwtl
scas
aaa
xchg
imul
inc
je
ret
out
add
addr16
shrl
cmp
mov
popl
adc
jmp
leave
jne
into
jl
or
and
in
mov
stos
leave
dec
or
xchg
shlb
ret
mov
and
push
pop
dec
stos
mov
push
sub
xor
scas
and
fcomip
mov
or
sub
cmp
inc
mov
mov
out
and
addr16
mov
inc
sub
flds
outsb
mov
jb
add
push
das
in
shl
loopne
outsl
push
pusha
xchg
push
jmp
orb
sub
fs
cmp
push
sub
dec
cld
pop
adc
fisubl
or
mov
gs
icebp
jge
or
out
jne
cld
inc
data16
mov
and
into
push
orb
inc
dec
mov
std
sti
adc
or
and
sbb
and
mov
push
jne
cmp
add
pop
adc
imul
adcb
inc
mov
jne
xchg
cmp
xor
fwait
popf
push
xlat
shll
mov
xor
clc
jg
std
mov
sbb
cmp
stos
into
push
testb
data16
cmp
mov
xor
jp
pushf
push
jne
pop
jno
or
sbb
mov
push
mov
pop
data16
gs
imul
out
mov
repnz
pop
fwait
xchg
add
out
jno
ja
pop
ja
loopne
adc
inc
jmp
lds
lock
push
push
sub
xchg
cmp
lods
lods
xor
out
repz
push
lcall
xor
cwtl
add
pop
mov
jnp
mov
lret
jmp
jnp
push
and
dec
fmuls
int
dec
pusha
ret
insb
int3
into
mov
xor
loop
imul
cmp
int
mov
sub
es
iret
out
sub
out
repz
mov
pop
in
add
enter
fwait
jg
popf
aas
jmp
sahf
cld
outsb
xchg
mov
enter
hlt
outsb
and
pushf
sarb
pop
aad
xor
lea
jge
xchg
loope
push
sub
add
sbb
outsl
inc
xlat
sbbl
or
sub
and
insl
xchg
ficomps
fs
push
aas
movsl
das
cmp
out
sbb
xor
sub
faddp
cli
mov
inc
xor
lods
call
dec
and
dec
stos
mov
add
mov
ja
inc
xchg
jmp
mov
pop
lds
bound
ret
inc
push
sub
push
jne
lods
dec
cmp
dec
and
or
pop
push
pop
mov
xchg
loopne
in
cmp
lds
cmp
inc
sub
push
cmpsb
push
cmp
sahf
or
hlt
mov
out
jp
shl
sbb
xchg
adc
push
ret
push
hlt
sbb
dec
cmp
cmpsb
je
mov
xchg
mov
bound
lret
mov
cmpb
or
push
inc
outsl
sbb
add
jae
outsl
xor
pop
dec
sub
jae
inc
loop
xchg
ss
addb
stos
ljmp
ret
js
push
les
mov
dec
fstpl
push
mov
jecxz
or
and
cmp
mov
rorb
mov
roll
xchg
add
clc
mov
cmpsl
mov
cmc
subb
in
dec
jg
out
stos
les
loope
jecxz
jp
mov
aas
push
das
leave
cli
sbb
mov
cmpl
lock
push
push
xchg
jecxz
mov
sar
jle
in
flds
push
push
inc
in
and
mov
lret
xchg
orb
xchg
xchg
dec
stos
fdivl
outsl
xchg
pop
sub
pop
jo
lods
xchg
enter
dec
nop
push
fisttps
test
fdivr
mov
enter
inc
dec
addr16
push
mov
xchg
test
inc
inc
push
xchg
scas
test
cmpsb
shll
sub
roll
sub
lods
push
sbb
out
mov
das
lret
rclb
shll
scas
push
pop
mov
cli
mov
loop
lea
dec
xchg
jecxz
pop
xchg
push
insb
and
stos
das
scas
in
mov
flds
push
adc
aas
or
push
repz
mov
mov
mov
push
addb
jnp
push
jbe
mov
outsb
pop
lock
mov
cmp
xor
ret
mov
in
sbbb
cmpsl
dec
icebp
mov
pop
mov
inc
rorb
enter
stc
dec
sbb
fiaddl
xor
lret
lea
sbb
aas
xchg
and
je
cmp
dec
shl
mov
ret
and
je
pop
jmp
add
lock
inc
xchg
fs
aaa
push
repnz
mov
imul
ja
movntps
mov
cs
ja
cli
pop
lret
jo
js
aam
fsubr
mov
cmp
sub
insl
add
sbb
aad
adc
xchg
cmp
xchg
insl
pop
pop
insl
jp
test
rcrb
sbb
and
outsb
jge
mov
jno
out
int3
sahf
nop
out
sti
mov
mov
movsb
push
popa
fmuls
scas
push
add
mov
addr16
gs
loop
push
pop
mov
aad
lods
adc
outsl
mov
cwtl
adc
bsf
push
fimull
addl
jecxz
xchg
cmp
cli
push
add
int3
insb
leave
inc
sub
std
dec
jl
jne
insb
stc
push
data16
pop
pushw
sbb
cmp
cwtl
cmpsl
int3
fcmovne
enter
in
in
daa
pop
add
mov
pop
fmull
push
hlt
lret
adc
or
jae
jg
in
repz
push
lahf
or
daa
loope
jge
jle
mov
pop
sbb
mov
cmp
dec
dec
outsl
and
outsl
and
mov
iret
cmc
inc
cld
xor
test
or
mov
pop
xchg
loope
sub
jecxz
sahf
and
rcll
pop
inc
shl
sub
test
das
mov
push
inc
fcoml
into
rcrb
popa
in
inc
sahf
add
daa
dec
stos
add
popa
cld
fwait
xor
cmp
add
in
scas
xchg
or
rorl
and
scas
add
pop
in
xor
mov
xchg
in
lds
fstps
fs
dec
jbe
or
dec
dec
mov
icebp
mov
cmpsb
cli
repnz
aad
pop
xor
sub
dec
push
arpl
dec
out
jo
mov
sub
mov
lods
ss
and
pop
clc
addr16
ds
stos
mov
test
shll
je
inc
test
out
test
pop
and
inc
cwtl
push
jb
loopne
cmp
in
pop
mov
outsl
pop
lods
sub
or
cli
inc
sbb
mov
pop
sti
and
cmp
cmpsl
cld
mov
inc
jno
out
movsb
in
cwtl
xchg
jo
mov
jbe
rcl
movsb
sub
sub
hlt
sarb
leave
and
lahf
rorl
dec
xor
push
lods
cbtw
push
adc
mov
and
dec
push
stos
cs
stos
icebp
ja
or
push
mov
jne
outsb
lcall
ficoms
mov
fwait
adc
adc
out
cltd
add
pop
jb
sub
push
test
cld
cmp
cmp
adc
cmp
and
or
leave
outsb
mov
lods
mov
sub
bound
int3
lret
sahf
jnp
push
push
pop
dec
inc
sarb
ja
int3
xor
insl
sahf
jecxz
out
xor
pop
loope
push
xorl
push
gs
cmp
push
mov
lods
dec
lock
enter
and
sub
scas
adc
mov
push
call
xchg
lds
mov
push
sahf
sub
testb
add
icebp
adc
ret
dec
enter
das
mov
nop
and
sbb
mov
pop
push
cmc
test
cs
xor
inc
jge
rorb
movb
daa
cvtps2pd
outsb
imul
je
mov
lods
outsb
fcmovnb
mov
mov
outsl
dec
arpl
xchg
cmp
jnp
mov
inc
dec
call
les
lret
pop
add
jp
mov
add
mov
jbe
inc
and
test
rorb
cmc
mov
out
xchg
push
test
and
cltd
pop
mov
rcr
mov
aad
int
lods
or
and
test
push
add
scas
into
xor
push
in
std
jmp
clc
mov
mov
lret
loope
bound
in
dec
int3
mov
ffree
jl
mov
inc
lds
jns
mov
push
pusha
fcoml
lds
push
popf
xor
jb
loopne
dec
or
push
cltd
jb
xchg
sub
jbe
cmp
addb
nop
fnstenv
push
roll
rcrl
or
popf
mov
xchg
cmp
out
xchg
fdivl
dec
xchg
in
adc
cli
cli
pop
sbb
pop
sbb
push
mov
sub
add
fildl
icebp
sahf
cmp
stos
pop
and
divb
out
fs
sbbl
pop
add
test
xor
push
testl
cwtl
mov
xor
and
xchg
orb
cmp
cmpsl
xor
xchg
out
jmp
pop
ss
fnsave
mov
sub
in
dec
sbb
mov
sub
frstor
dec
xchg
out
je
pop
mov
xor
lods
outsb
out
lcall
test
xchg
inc
mov
rclb
aaa
and
sbb
xchg
push
sbb
std
xchg
mov
pusha
aad
xchg
mov
shll
imul
sub
mov
jae
jmp
push
jbe
out
gs
fmulp
pop
popf
pop
sub
pop
inc
dec
mov
call
or
aad
add
pop
mov
test
jnp
inc
les
rol
mov
fstl
lahf
cld
sbb
fsubl
dec
negb
data16
xor
fsubrs
sbb
xor
fisttpll
daa
pop
xchg
out
sub
enter
xor
jmp
scas
jo
insl
mov
cmp
inc
mov
jnp
fadds
and
pop
inc
and
int3
dec
shlb
test
imul
in
fwait
push
pop
data16
cltd
push
test
mov
scas
cmp
push
sub
addr16
push
dec
push
int3
test
call
xor
imull
xchg
pop
sub
mov
cwtl
adc
sub
iret
cmc
inc
sbb
cmpsb
and
out
xchg
ss
ficompl
dec
inc
ret
scas
pop
aam
lock
gs
shr
loopne
fnstsw
mov
leave
out
add
arpl
xchg
add
adc
dec
mov
daa
mov
idivl
and
aaa
cmc
cmp
jmp
adc
push
jmp
leave
push
ret
mov
aam
je
inc
aaa
mov
dec
aad
cmc
roll
jno
insb
mov
repnz
iret
mov
loopne
mov
cmp
ss
pop
push
mov
xchg
into
mov
mov
jl
mov
pop
sbb
movsb
cli
ss
mov
or
add
mov
das
pop
ja
mov
daa
cmp
sbb
fbstp
popa
xchg
cmpsl
cmp
sub
repnz
sbb
jecxz
hlt
mov
in
mov
ret
fucomi
or
xor
xchg
adc
push
mov
icebp
stos
nop
xor
fisubl
je
daa
fs
jle
adc
push
sub
xchg
fs
sub
and
or
xchg
sbb
mov
xchg
or
cmc
shr
inc
fstpt
stos
popf
jecxz
das
pop
std
fwait
xchg
cmpb
pop
imul
adc
cmp
pop
mul
ret
add
or
inc
xchg
push
call
mov
and
cmc
gs
popa
add
mov
jp
test
repnz
jecxz
cmp
jg
cmp
push
mov
or
pop
popa
fdivl
lret
jno
mov
inc
std
aad
or
xor
cltd
lret
mov
jno
movsb
btc
adc
jns
int
and
sbbl
lods
dec
xor
inc
xchg
ret
mov
jmp
cmp
aas
test
rclb
pop
fnstsw
dec
pop
jne
aas
lods
sbb
mov
hlt
aad
xchg
cmp
dec
into
cs
sub
sbb
cltd
xchg
cmc
add
sbb
clc
imul
and
repz
stos
fbstp
lahf
xlat
jg
scas
push
leave
popf
or
adc
add
imul
lods
cmp
and
fists
outsb
add
sbb
loop
test
sbb
arpl
sub
xchg
popf
xor
stc
insb
sbb
xchg
lret
pop
or
adc
mov
xor
jno
mov
push
push
repz
and
jl
in
cmpsb
push
roll
jo
int
mov
xor
adc
ret
test
push
jl
jecxz
jg
clc
aam
shrb
addl
fldcw
jmp
lods
out
cmp
add
js
push
push
cmp
sti
and
push
mov
orl
loope
dec
ljmp
nop
adc
ret
mov
fsubrl
or
mov
lods
adc
mov
sub
sub
out
cli
push
lock
jne
test
testb
arpl
push
mov
xchg
mov
xor
in
out
pop
jl
test
shrl
mov
mov
xchg
push
xchg
ret
mov
out
lret
push
filds
loop
cmp
adc
nop
addr16
push
or
and
je
pop
push
pusha
xlat
fisttpl
and
fwait
shrb
jns
cs
pop
js
icebp
test
jo
adc
cmpsl
jge
add
dec
idivl
ret
hlt
imul
out
push
add
pop
pusha
std
mov
pop
outsl
test
movsb
adc
fimull
scas
mov
dec
pop
fcom
cmpsl
mov
xchg
push
mov
push
pop
mov
imul
int
mov
sub
pop
sbb
lea
frndint
jns
aas
js
xor
out
imul
popf
pop
outsb
sub
mov
dec
jl
inc
inc
sbb
mov
iret
jns
mov
bswap
sarb
mov
mov
test
adc
mov
aas
pop
lret
das
jg
push
and
cmpsl
inc
lds
fadds
orl
pop
bound
iret
movb
push
outsl
loope
sbb
into
cmp
xchg
or
iret
rcr
jne
and
std
jb
pop
aad
stos
or
add
dec
test
int3
jp
pop
shlb
std
sahf
xchg
mov
mov
mov
lret
lret
pop
jb
cmp
inc
mov
roll
xor
jnp
fwait
ret
lods
xor
jle
dec
lahf
push
aad
movsb
mov
sarl
adc
dec
pop
add
sub
mov
cmp
push
inc
mov
repnz
pop
mov
jl
mov
sti
js
dec
push
repnz
mov
insl
dec
aaa
pop
mov
fdivrs
ret
cwtl
xchg
loop
lcall
lahf
mov
ret
insl
cmc
out
cmp
loope
and
lea
cmp
adc
imul
pop
push
subl
lcall
cmp
xorb
push
repnz
lods
imul
mov
bound
testb
ret
push
adc
pop
inc
add
addr16
out
cltd
ficompl
jae
mov
cmp
insb
mov
mov
out
jecxz
lods
jne
test
push
into
jle
dec
mov
pop
lds
dec
aaa
mov
add
out
xchg
scas
out
or
push
cs
les
call
push
mov
lea
scas
lcall
test
movsb
push
mov
dec
call
inc
jnp
fst
adc
fwait
or
or
push
jbe
lret
jo
cli
test
jb
aaa
addr16
mov
mov
push
pop
pushf
rolb
insb
mov
push
test
aaa
adc
ret
icebp
pushf
inc
fcmovb
shll
lahf
lods
ss
pop
push
cmp
dec
popf
cmp
rcrl
leave
xchg
aas
int
aam
lea
popf
cmp
shl
scas
push
cmp
repz
insl
insb
stc
cmp
pop
xor
fsubs
je
xor
imull
mov
ficomps
xchg
enter
rcr
insl
xor
and
out
lods
pop
cmp
inc
cltd
sarb
pop
aad
mov
mov
mov
and
rcll
adcl
and
add
add
push
in
add
test
inc
test
cmp
inc
pop
fcomps
mov
icebp
fldenv
and
xchg
inc
xchg
loope
repz
xor
mov
in
mov
out
in
into
mov
mov
sub
ja
and
aad
inc
ss
sub
mulb
xchg
nop
sti
pop
push
sbb
outsl
mov
sti
add
mov
and
dec
orb
lahf
sbb
arpl
lock
mov
fistpl
push
or
xchg
fadds
pop
sub
add
ja
inc
fstpl
daa
sub
sub
or
mov
push
shll
outsb
out
jno
ret
mov
popa
xchg
or
sub
add
lret
sub
push
stos
xorl
push
adc
dec
xchg
ljmp
fnsave
and
aam
jge
inc
mov
subl
xor
inc
test
mov
sbb
repnz
push
enter
xchg
mov
outsl
add
dec
das
enter
mov
inc
mov
movsb
cwtl
aam
dec
inc
movsb
lcall
and
lea
push
xchg
push
push
mov
push
cmp
or
adc
stc
pusha
add
ss
lods
imul
int
inc
push
adcb
ss
mov
jecxz
mov
mov
pop
jbe
sbb
cmp
jns
fadds
add
push
outsb
jle
sti
lahf
inc
enter
inc
xor
dec
and
mov
adc
pop
xchg
and
cmpsb
stc
mov
push
rcrl
sbb
fisubl
out
mov
jmp
rcrl
clc
test
ret
mov
add
and
sbb
fisubrs
inc
bound
daa
cmpsb
pop
stc
sbb
adc
outsb
fucomip
loope
xchg
mov
out
clc
jns
xor
mov
dec
ja
xchg
and
test
jne
cmp
mov
imul
pusha
out
xlat
fwait
sub
xor
in
fistpl
or
cmc
shrb
enter
inc
or
mov
and
insl
jae,pt
pop
pop
adc
xchg
arpl
xchg
pushf
mov
jmp
gs
and
add
adc
cmove
scas
imul
mov
imul
push
jl
ret
cmpsb
xor
fwait
push
aam
loope
or
fcmovbe
loop
shlb
inc
xchg
push
sub
insl
add
ret
cmc
or
dec
xlat
repz
arpl
nop
popf
addr16
cmp
mov
or
inc
loope
out
adc
lods
ljmp
and
xor
push
xor
aam
mov
movups
adc
out
adc
sbb
cmp
es
pop
test
adc
testl
jbe
and
push
jae
adc
cmpsb
inc
ljmp
shl
sbb
push
push
je
std
imulb
clc
pushf
jg
dec
in
mov
jge
xchg
mov
shll
icebp
xchg
jns
cmp
or
push
in
popa
and
loopne
je
iret
insb
dec
adc
shlb
shlb
sbb
int3
jg
cmp
rolb
enter
leave
jp
push
pop
pop
in
fnsave
jno
fs
sub
data16
push
mov
call
mov
std
kmovw
lcall
scas
cmp
je
sub
leave
adc
xor
fisubs
dec
inc
sub
pusha
mov
xlat
or
push
xor
push
mov
inc
movsl
mov
rcl
mov
idiv
loop
or
sub
sub
push
scas
popa
add
imul
sbb
lahf
mov
sbb
mov
push
cwtl
push
cmpsl
lret
pop
jge
mov
sub
fdiv
sbb
stc
popf
mov
inc
lods
enter
dec
fsubrp
lock
or
insb
push
ljmp
fisttpl
push
icebp
inc
lcall
jle
pop
mov
mov
xchg
mov
dec
fimuls
xor
or
sub
inc
fucom
sbb
xchg
jl
adc
aad
cmp
pop
add
and
jecxz
kmovb
lods
inc
mov
ret
pop
imul
repz
out
in
test
lods
jge
bnd
mov
pushf
out
adc
addr16
sbb
dec
sahf
mov
jle
pop
test
jg
shll
mov
icebp
and
cltd
rclb
inc
mov
lcall
xor
mull
arpl
xchg
xchg
into
das
outsl
jecxz
notl
dec
dec
cmp
cwtl
xor
jmp
mov
movsb
les
cmpsb
mov
xchg
mov
mov
test
adc
mov
pop
fwait
dec
cltd
out
sahf
pop
adc
and
mov
imul
mov
arpl
mov
ss
shrl
clc
and
xor
movsb
jo
add
daa
fstpl
test
mov
ljmp
fsubrp
mov
or
inc
test
push
inc
or
pop
jbe
stc
arpl
sbb
mov
stos
incb
mov
in
icebp
movsb
push
loope
jecxz
leave
inc
dec
adc
mov
cmp
mov
ret
fstps
add
mov
test
inc
cs
mov
jmp
push
cmp
ss
dec
ret
add
adc
mov
or
xchg
rorl
cmp
xchg
addb
jp,pt
out
jbe
inc
cmpl
jmp
in
pop
test
jo
mov
xchg
xorl
push
jb
out
and
cld
cmp
subl
mov
adcb
fiaddl
insl
cs
in
je
adc
data16
sbb
and
pop
sbb
std
sti
xchg
add
data16
int
repnz
sbb
cmpsb
jns
in
fcoms
mov
lcall
lret
test
into
repz
fbstp
pop
cmpsb
js
and
scas
cld
inc
addl
mov
aas
mov
popa
inc
rcrl
jns
mov
or
fs
vmovdqa
stos
dec
movl
or
scas
or
dec
test
in
mov
fmul
sub
xchg
xchg
inc
cmp
cmpsl
in
shrb
out
mov
dec
repnz
xchg
cmc
pop
movl
or
lock
dec
pop
into
pop
push
dec
stos
jle
rclb
jp
xor
push
fdivs
test
sbb
aaa
mov
mov
inc
jle
mov
adc
xchg
push
lea
iret
pusha
push
ficompl
sbb
jmp
lock
mov
or
jmp
jo
lcall
aaa
lret
icebp
jge
mov
cwtl
jmp
inc
inc
ljmp
lcall
lahf
xchg
jg
loop
repz
loopne
enter
jp
scas
mov
dec
push
xchg
arpl
cli
mov
je
clc
jbe
ds
fisubs
xorl
stos
mov
popa
lahf
inc
push
jge
or
cli
adc
dec
and
insb
fs
sub
into
ljmp
adc
clc
mov
mov
jg
or
fwait
arpl
pop
or
imul
repnz
xor
push
bnd
pushf
pop
mov
mov
jecxz
fwait
lahf
add
lcall
lahf
test
cmpsl
xchg
mov
sbb
sbb
sub
xchg
xor
imul
sub
repz
imul
test
xchg
cmp
sbb
push
jnp
jge
or
adc
in
in
and
cmp
cli
pop
fidivrs
test
dec
add
xor
pop
push
ds
cmp
mov
test
and
push
aad
or
ss
and
popl
sub
push
and
add
xor
pop
popf
enter
mov
mov
jo
lods
push
pop
mov
aad
mov
call
movb
mov
lret
pop
test
mov
cmp
xchg
es
stos
xchg
aad
rorl
push
jns
inc
iret
mov
pop
cmp
sar
mov
or
jbe
in
push
jp
dec
lret
xor
bound
push
jo
add
push
in
call
pop
sub
repz
jl
mov
clc
add
xor
rolb
xchg
cmp
aam
push
sub
data16
in
lea
scas
xor
lahf
mov
mov
inc
xor
xor
or
fldcw
call
push
shlb
test
movsl
shlb
cmp
mov
call
pushf
mov
out
fwait
xchg
jle
mov
mov
jecxz
xchg
fs
xlat
xchg
cmpsl
test
xor
orl
pop
sbb
lret
xor
cmpb
inc
cmp
stos
jge
mov
je
shrl
jecxz
adc
dec
test
adc
repnz
sbb
enter
sbb
push
adc
xor
clc
mov
imul
mov
je
jb
cwtl
cmc
int3
xor
out
and
pop
addl
data16
fsubrl
mov
pop
sub
lahf
sub
in
ficoml
adc
movsb
add
mov
mov
jp
jg
test
jp
movsl
out
pop
call
arpl
daa
push
pop
push
aad
lahf
ljmp
loope
sbb
xchg
jmp
mov
push
add
mov
jp
mov
mov
test
fwait
dec
add
loope
or
subl
test
add
aad
leave
push
scas
mov
cld
int
cltd
push
push
pavgw
xchg
xchg
xor
jmp
xor
xchg
cmpsl
fwait
stc
jmp
movq
mov
inc
or
into
inc
data16
adc
aas
icebp
mov
inc
rol
jl
out
in
icebp
sti
push
mov
mov
int
push
pop
daa
inc
enter
cmp
mov
shlb
fs
fsubrp
popa
ja
push
adc
pop
cmp
decb
aaa
jne
lods
push
or
clc
cmpsb
cmpsb
mov
mov
mov
testl
mov
cmc
popa
sub
scas
cmp
mov
stos
test
dec
sbb
icebp
loope
xchg
xor
pushf
jmp
pop
sbb
out
cmp
nop
adc
aas
mov
es
pop
push
lahf
push
pop
mov
push
xor
and
ds
nop
pushw
pop
push
push
or
jmp
mov
aam
clc
pop
pop
adc
push
sub
xor
testb
cmp
mov
in
stos
pusha
in
or
fcoml
ror
clc
bound
lahf
and
es
aaa
sbb
cmp
jno
stos
add
lahf
leave
les
add
mov
notl
pop
test
jg
pop
or
ja
sahf
das
ret
hlt
add
xchg
jl
push
and
xchg
adc
ljmp
subl
es
fsubrs
fdivl
repnz
rclb
xor
pop
mov
mov
out
into
xor
pusha
lock
mov
mov
adc
add
shll
ret
pushfw
nop
xchg
dec
mov
pop
mov
inc
insl
cmpsb
sbb
repnz
lahf
aaa
sbb
insl
push
jg
xor
sub
xor
sub
loope
hlt
push
test
pop
subb
adc
and
xor
adc
push
mov
jecxz
jae
or
sbbl
cmpsl
in
and
dec
dec
rcrb
in
les
lods
mov
mov
shll
jmp
scas
fsubrl
lahf
lcall
and
decb
das
lds
out
popf
pop
sarb
xchg
inc
cmc
xor
clc
cs
ret
in
dec
fcmovbe
in
icebp
aaa
das
jl
ret
fidivrl
loope
jnp
dec
aas
movsl
out
cmp
cs
sbb
lret
inc
lcall
lret
pop
add
xchg
jmp
xor
or
scas
sarb
sbb
mov
in
mov
pop
cmp
sahf
xor
adc
jae
mov
mov
loop
pop
cmp
inc
add
popa
inc
and
sbb
cmp
xor
das
in
sarb
mov
cltd
add
lret
not
subl
jmp
lahf
sbb
push
push
pushf
adc
mov
push
dec
push
mov
dec
cltd
jbe
aad
pop
stos
es
push
rcrb
fcmovnbe
sbb
icebp
out
xchg
inc
aaa
hlt
xchg
bound
mov
fsubl
cmovl
mov
mov
mov
sarl
dec
mov
jbe
cmpsl
or
jbe
pop
into
push
enter
nop
jb
fisttpll
call
sub
mov
scas
cmp
mov
and
dec
hlt
and
xchg
inc
xlat
ret
lods
movsb
inc
dec
mov
push
jge
mov
int
xor
mov
fadd
stos
aad
or
lahf
and
jnp
add
mov
cmp
pop
sbb
mov
add
adc
mov
sub
push
negb
and
loope
push
mov
adc
js
andb
dec
and
ja
push
mov
dec
lahf
imul
dec
jmp
add
and
call
lea
fistps
aas
dec
inc
xchg
lret
test
cs
sahf
jns
loopne
jo
in
mov
insl
dec
nop
fimull
or
aad
fld
inc
sbb
mov
pop
std
cmp
icebp
push
sti
sub
jae
ret
sub
and
cmp
fistl
mov
jge
pop
mov
xchg
xor
and
mov
loopne
fistpl
call
mov
subb
les
scas
and
scas
out
inc
add
pop
pop
and
pop
cli
and
xchg
adc
mov
pop
sbb
xchg
lret
lds
leave
sbbb
mov
sbb
enter
xor
push
cmp
out
pop
lock
adc
jl
cmp
mov
cmp
ds
cli
push
stos
aad
adc
pop
in
inc
push
mov
sti
cli
push
sbb
inc
sbb
sti
sub
fimuls
lret
mov
subl
stc
das
clc
inc
sbb
dec
fisttps
bound
pop
lea
jbe
mov
push
jge
fisubrs
sbb
mov
leave
sub
enter
mov
jb
add
dec
xlat
cld
lret
push
and
mov
mov
fs
movsl
jp
addr16
push
pop
add
mov
aas
mov
shll
stc
out
ror
or
popf
js
pop
into
fsubrp
stc
xlat
enter
lret
dec
fiadds
cld
mov
xchg
into
inc
sub
daa
pop
jbe
mov
jne
add
mov
daa
xor
xlat
adc
sar
push
cld
mov
push
insb
dec
adc
add
adc
out
dec
mov
push
xchg
insb
or
inc
mov
mov
push
je
push
or
rorb
inc
add
pop
cmp
inc
and
mov
stos
add
fwait
sub
dec
adc
popl
pop
in
inc
cmp
rorb
push
and
lret
addl
leave
sub
inc
add
push
ret
fcmovne
repnz
dec
jl
inc
sub
push
mov
lods
xor
mov
out
orl
shlb
sbb
movsl
lcall
test
fidivrl
mov
fdivs
ret
mov
and
nop
jne
arpl
mov
ds
lret
push
adc
mov
xor
cmpsb
cmp
xchg
cmp
pop
jb
xor
cmc
cli
fdivrs
adc
je
jg
xchg
insl
cmc
jb
pusha
ljmp
filds
addr16
add
and
jns
imul
shlb
push
jg
das
xchg
jb
lods
lahf
or
notl
cmp
sbb
cmp
ds
stos
cmp
cmp
lods
xchg
test
dec
gs
xor
or
popf
je
lods
cmp
inc
pop
icebp
xchg
aaa
adc
sbb
outsb
lods
lds
cmpsl
add
and
jmp
icebp
or
cltd
call
lods
push
into
gs
iret
pop
aam
scas
or
jl
mov
jg
pop
cmp
sub
or
jmp
aas
lret
in
outsl
sub
mov
fsubrl
dec
add
or
ret
cmp
rorl
jmp
xor
and
sub
rcrl
xchg
icebp
xchg
lods
jbe
mov
mov
xchg
loopne
dec
pop
dec
fistps
pop
dec
cmp
cmp
popa
or
call
call
inc
xor
clc
push
out
lea
mov
and
sub
mov
adc
sbb
decb
sub
es
lock
movntq
in
jbe
jae
mov
insl
jb
sarb
in
sbb
lock
dec
stc
nop
iret
xor
repnz
sahf
int
cmp
fnsave
push
jns
mov
das
sub
jmp
sbb
aam
mov
jl
push
push
xor
mov
pop
lock
outsl
shl
addr16
in
in
clc
mov
mov
or
xor
sbb
and
shlb
mov
or
push
out
lds
loopne
pusha
sbb
popf
inc
lahf
add
dec
scas
inc
pushf
aas
mov
pop
aad
lock
roll
adc
or
and
push
dec
add
fs
cmpsl
dec
push
xlat
xor
testl
popf
sbb
push
sbb
lcall
daa
cli
adc
dec
imul
mov
fdivl
fprem
aas
lock
cmp
or
pop
aaa
or
and
les
mov
ret
movsb
add
jle
ja
lret
xchg
pop
jp
pop
scas
or
std
xchg
shl
dec
fdivr
or
repz
push
rorl
push
mov
es
jl
dec
iret
add
les
movsb
movsl
iret
jp
fimuls
scas
dec
push
xor
daa
mov
scas
pop
rcrb
out
push
xchg
repnz
rcrl
cmc
xchg
mov
push
loopne
mov
cld
lea
fistpll
clc
cmpsl
filds
dec
out
dec
mov
xor
leave
pop
and
or
pop
andl
aam
lret
sbb
adc
fldz
pop
enter
push
or
dec
fnstcw
sub
scas
or
sub
xchg
mov
dec
sbb
inc
sub
sub
pop
mov
mov
cs
push
xlat
mov
movsb
adc
cmpsb
mov
cmp
cltd
insb
pushf
clc
test
lea
fcoms
pop
ss
jl
pushf
roll
ss
pop
jp
clc
jne
imull
arpl
and
iret
iret
arpl
call
cmpsb
fiaddl
aas
popl
push
pop
loopne
inc
mov
cmp
data16
enter
ffreep
repz
into
or
in
xor
cwtl
mov
jg
mov
sbb
ja
cmpl
cmp
icebp
mov
addr16
and
cmp
adc
pop
add
sbb
mov
int3
fwait
pop
test
addb
jo
int
lar
aaa
repz
cmp
xor
jmp
test
das
jno
mov
xor
mov
sub
adc
sbb
lods
adc
jno
test
shlb
int3
in
enter
insb
ljmp
push
clc
movsb
jecxz
sbb
mov
sbb
mov
push
add
movl
dec
movsl
dec
adc
daa
int
add
inc
add
mov
xchg
out
sub
insl
or
js
jo
pop
int3
icebp
mov
call
repnz
sbb
in
mov
mov
icebp
insb
jo
jne
mov
add
xor
ss
into
pop
dec
ljmp
pop
cmpb
dec
repnz
enter
imul
fnsave
mov
inc
adc
popl
add
int3
mov
enter
xchg
inc
es
outsl
pop
in
popa
nop
or
inc
xlat
inc
sub
pop
xchg
mov
mov
aaa
push
lock
pop
jne
aad
inc
incl
mov
arpl
mov
in
movsb
push
test
sti
testl
mov
or
into
sub
mov
je
jbe
dec
pop
sub
mov
pop
shll
push
cmp
and
sbb
jmp
and
dec
cmp
imul
imul
add
icebp
cmp
dec
loope
cwtl
and
xchg
push
dec
popf
mov
jbe
pop
or
mov
aas
jnp
arpl
add
mov
lods
inc
xchg
out
add
cld
out
mov
mov
and
sbb
add
mov
add
sbb
fidivrs
loope
adc
adc
add
xlat
inc
pop
lret
pusha
jge
pop
dec
add
movl
mov
xchg
mov
jae
and
adc
insl
jo
push
push
mov
les
push
arpl
insb
movsl
ja
std
stos
jg
push
inc
xor
lea
adc
adc
inc
outsb
scas
cmp
loop
insl
lods
or
add
loop
popa
mov
mov
pop
ficomps
sbb
movsl
ds
imul
xor
push
and
cmp
stos
mov
push
mov
into
mov
mov
mov
insl
inc
repnz
test
enter
lds
sti
hlt
mov
testb
dec
xor
and
lcall
dec
push
xchg
cmp
aam
rcll
xchg
scas
pop
sub
icebp
mov
insl
in
mov
ljmp
sub
and
in
xor
cli
sub
jle
dec
inc
test
dec
mov
xor
test
xchg
xchg
fbstp
cs
mov
add
xchg
mov
es
and
inc
dec
scas
sarl
pop
icebp
jne
mov
outsb
js
add
pusha
cmp
repz
ds
jg
cmp
push
jae
mov
mov
in
repz
jne
sbb
pop
fs
ja
and
mov
sbb
inc
push
sar
notrack
repz
push
xchg
pop
xchg
lock
loop
mov
mov
fwait
mov
arpl
std
into
pop
adc
test
cmp
paddq
dec
sbb
popa
and
insb
sbb
xchg
gs
inc
pusha
aad
add
popf
popa
inc
jne
or
mov
movsb
dec
xchg
mov
mov
sbb
jp
dec
test
adc
sti
mov
dec
jae
pop
pop
adc
dec
rorl
pop
loop
xchg
das
sub
int3
dec
sbb
popf
pop
lods
xor
jp
arpl
inc
xchg
push
in
jecxz
das
lods
in
mov
jg,pt
xor
mov
bound
scas
stos
sahf
pusha
jg
cltd
add
adcl
js
mov
std
mov
bound
adc
sub
loop
cmp
inc
inc
inc
add
mov
jp
xor
andb
sub
or
repz
and
and
loop
aad
sub
in
test
loopne
push
cmp
out
jne
loop
mov
xchg
push
test
push
sub
xchg
push
je
loope
sbb
in
cwtl
arpl
ror
lock
lret
pop
jns
push
cmp
sub
jnp
lret
cmpsl
stos
loope
mov
cmpsl
sbb
mov
push
rol
aad
mov
imul
repnz
mov
pop
vunpcklps
jecxz
rcrb
or
inc
dec
cmp
cmp
rorl
or
sbb
shlb
divl
dec
mov
dec
mov
mov
cmp
dec
movl
subb
cs
mov
jne
mov
call
sbb
popa
out
xchg
decl
stos
mov
pop
cmp
adc
jg
jp
imul
dec
rorl
loopne
xchg
sub
dec
leave
cmpsl
arpl
dec
xchg
mov
inc
out
jne
pop
call
in
nop
test
int3
mov
inc
fcomps
lahf
mov
mov
jle
iret
repnz
mov
mov
arpl
movsb
inc
and
lods
mov
or
test
push
add
lret
xor
inc
ja
and
or
dec
out
daa
xor
ljmp
leave
mov
pusha
movsb
push
sub
adc
stc
xchg
repz
mov
lret
xlat
sahf
lcall
ret
inc
cmp
repnz
mov
fisubrs
mov
pop
movsl
inc
push
mov
jae
inc
or
popa
adc
inc
dec
gs
cmpsb
dec
mov
mov
in
jl
in
mov
jb
pop
adc
mov
hlt
mov
sti
xchg
ds
pop
sub
out
inc
fldenv
imul
adc
cmp
adc
push
ds
add
sbb
pop
dec
sbb
cmp
data16
ret
jmp
inc
cwtl
jecxz
test
sbb
sarb
jl
xlat
inc
adc
pop
popf
mov
out
testb
xlat
fcoms
std
int
mov
cmp
cmp
insb
and
or
jl
fistl
ror
mov
dec
pop
gs
adc
imul
sub
mov
js
clc
mov
push
mov
pop
mov
shlb
lcall
stos
sbb
in
aam
ss
mul
sub
pop
in
test
lcall
add
add
mov
sbb
jecxz
lahf
roll
or
xchg
popf
pushf
fisttpll
push
xlat
xor
pop
or
aas
phsubsw
xor
xor
cmp
pop
aam
ret
cltd
lea
loopne
xchg
xchg
nop
mov
push
in
mov
inc
mov
push
pop
in
repz
cs
mov
addb
imul
fimull
and
push
insl
fimull
inc
add
data16
or
mov
lahf
add
add
bound
and
loopne
popa
test
in
mov
xchg
sbb
fnstcw
sahf
in
jno
jae
cmp
jp
inc
inc
incb
and
js
lods
add
cmpsb
test
xchg
cwtl
add
mov
and
fsts
adc
imul
xchg
addr16
and
or
js
dec
adc
repz
cmc
icebp
stos
and
incl
hlt
aam
das
incl
in
clc
es
adc
mov
cmp
mov
icebp
inc
pop
mov
sbb
js
lcall
mov
scas
inc
dec
leave
aad
inc
jne
inc
cmp
out
out
faddl
cmp
icebp
jb
gs
adc
jae
xor
ljmp
jmp
mov
dec
clc
adc
mov
loope
fldl
mov
sbb
xchg
sti
sahf
sarb
pop
pop
jne
movsl
xchg
adc
ret
pop
jl
out
stc
shr
inc
fists
mov
mov
iret
int3
sbb
fisubrl
sahf
inc
xor
divl
sbb
and
and
dec
scas
outsl
lret
mov
pop
adcl
push
rolb
fisubl
or
shll
in
iret
pop
cmpsb
mov
insl
fcomip
dec
fwait
popa
lea
mov
xchg
popf
push
sbb
lret
sbb
and
shll
scas
push
adc
mov
scas
mov
outsb
test
nop
xor
xchg
dec
test
gs
xor
mov
and
dec
sub
lret
or
ss
mov
stos
outsb
loope
stos
test
subb
nop
sub
pop
jnp
into
ja
ja
and
cmpsb
rorb
scas
xor
lret
js
fcoml
out
lds
jl
dec
jp
pop
jae
loop
je
fbld
cli
jmp
test
push
dec
sbb
or
or
jl
sbb
orb
push
call
cmp
loope
mov
mov
push
jno
in
hlt
dec
adc
lods
insl
add
sub
jge
xlat
mov
add
pop
xchg
cmp
into
or
lods
jbe
rorb
in
out
lea
cwtl
shrb
mov
dec
ja
movsl
cmp
mov
cmpsl
imul
push
test
mov
pop
dec
pop
mov
call
sbb
cltd
xor
fidivs
ret
iret
stos
sbb
sbb
xor
idivl
pop
push
enter
lea
hlt
push
mov
sub
inc
push
hlt
jns
repz
loopne
mov
add
shr
faddl
fistpl
dec
jo
fdivrl
jae
cli
lret
ja
lds
cld
or
push
mov
push
int3
loope
inc
adc
and
mov
adcl
push
ljmp
xlat
test
xchg
xchg
stc
pushf
cmp
dec
shrl
add
lock
or
add
adc
xchg
mov
lret
roll
push
mov
mov
call
adc
scas
jle
mov
ficoml
xlat
es
push
inc
sub
pushf
repnz
fcompl
and
xchg
and
movsb
into
dec
mov
lods
stc
inc
add
mov
icebp
test
mov
imul
mov
jp
scas
div
scas
and
into
fidivs
sbb
outsb
pop
push
testl
adc
cltd
negb
adc
rolb
pop
cmp
movsl
fmuls
xchg
scas
mov
pop
jbe
pop
movsl
fisubrs
cmp
mov
rolb
mov
jb
sbbb
arpl
xorb
rclb
mov
adc
jbe
push
test
mov
mov
mov
popf
sarb
xchg
ja
das
jmp
add
mov
dec
stc
mov
stos
push
push
aaa
jne
je
xchg
lahf
mov
mov
push
push
out
or
adc
in
pop
pop
mov
sbb
mov
pop
popf
loop
add
stc
xchg
inc
shlb
int
mov
out
popf
ljmp
pop
or
lret
rcrb
and
inc
pushf
das
adc
fsts
cli
or
popa
pop
pop
cltd
sarl
and
xchg
mov
xor
addr16
inc
dec
iret
daa
xor
in
stc
or
xchg
mov
xchg
je
sub
sbb
mov
xchg
pop
jo
cltd
push
pop
enter
daa
filds
cltd
sub
ss
mov
stc
popa
or
sub
push
sub
arpl
insl
lods
mov
jl
xchg
arpl
cmp
inc
aam
push
fwait
ror
inc
lcall
cli
xchg
ljmp
jp
push
dec
mov
mov
pop
int
or
jbe
cmc
mov
jmp
jecxz
rorl
add
lods
popf
inc
sub
enter
sbb
filds
xor
call
insb
pop
mov
add
pop
inc
mov
arpl
int
mov
fwait
add
pop
pop
fimull
and
clc
cmp
dec
enter
test
cld
and
je
dec
loope
iret
ja
lret
rcr
jecxz
push
xlat
jnp
and
xor
mov
xlat
mov
xor
dec
or
sub
pop
xchg
fldcw
bound
iret
sar
aas
sbb
fsubs
jno
push
mov
pop
pop
sbb
mov
jmp
push
lahf
xchg
pop
mov
cmc
stos
orl
mov
mov
mov
or
and
and
cmp
push
test
and
add
inc
xorl
jnp
xor
mov
cmpsl
cwtl
or
roll
push
sbb
and
dec
xor
popa
mov
sbb
out
mov
sbb
push
lret
repnz
ret
jae
arpl
mov
arpl
and
in
mov
sarb
ficoml
in
or
insb
out
dec
mov
loopne
rorb
adc
mov
xor
push
and
jb
dec
imul
roll
lahf
mov
rorb
enter
or
rclb
mov
adc
sbb
inc
dec
pop
cld
push
xor
cmpsl
mov
sub
adc
jbe
cmc
push
or
loop
push
loop
sbb
shrb
outsb
dec
add
cmpsb
sub
data16
push
push
into
jnp
pushf
dec
jp
fdivl
ss
mov
jecxz,pn
push
loop
push
jno
jb
push
mov
push
add
lock
test
inc
fwait
push
add
gs
ficompl
inc
mov
out
inc
scas
or
jne
or
xor
mov
lods
lea
jge
lods
dec
dec
shlb
js
add
push
fscale
adc
jae
subl
dec
arpl
mov
notb
lds
gs
xchg
shll
xchg
shlb
testl
sti
cmpsl
jno
pusha
insb
mov
add
frstor
sti
fsts
add
adc
sbb
pop
xorl
mov
cmp
xchg
push
mov
inc
je
cmp
cmp
js
into
push
mov
test
outsl
cmp
push
loopne
adc
add
repz
push
xor
mov
imull
mov
clc
push
stc
push
fcomps
jmp
jecxz
jecxz
ret
call
xchg
fidivl
subb
js
lahf
outsb
sbb
push
xchg
ds
mov
mov
lea
xchg
sub
int
lahf
add
dec
loopne
ret
mov
mov
and
insl
mov
mov
stc
cmp
clc
sbb
out
dec
dec
aaa
call
in
add
adc
mov
ljmp
ds
jle
sahf
iret
hlt
das
mov
fmul
push
jp
inc
rol
imul
push
xchg
lret
fsubl
push
out
mov
loop
scas
push
jo
or
adc
out
xchg
shll
jmp
in
pop
scas
call
mov
mov
fisttpll
shlb
dec
mov
inc
in
xchg
or
or
adc
out
hlt
mov
loope
mulb
in
aam
lret
lret
mov
cmp
sbb
shll
pop
outsl
les
fildll
mov
or
cmc
add
orl
dec
mov
out
insb
mov
dec
push
hlt
mov
lock
mov
test
stos
and
rcll
push
fnstenv
sarl
cmpsb
pop
mov
xchg
imul
xchg
popf
cmp
jb
lret
mov
aas
pop
inc
xchg
xor
test
outsl
mov
rolb
xchg
in
repnz
pushf
rcrb
inc
jne
jb
push
jo
push
rclb
cmc
repnz
rcll
xchg
ret
out
cmp
or
mov
and
fmulp
inc
int
mov
adcl
hlt
repnz
sbb
or
aam
pop
popa
cmp
andb
cmp
pop
sarl
outsb
mov
xchg
lods
sbb
lods
addr16
iret
xor
mov
sub
cld
paddd
xchg
out
inc
jns
mov
sub
loop
cmpsb
arpl
pop
ss
cmpsb
sub
ret
aaa
adc
cmpb
lcall
fcos
fiaddl
adc
and
shl
fisubrl
ja
pop
lods
insl
cmp
xchg
dec
push
cmc
mov
es
xchg
scas
xor
data16
mov
clc
test
cmp
cmp
or
js
or
lcall
mov
and
xchg
mov
inc
cmpl
cli
mov
aad
xchg
ja
sbb
adc
jmp
lret
adc
test
cmp
ret
es
xchg
sub
push
jg
dec
cmp
fdivs
push
pop
inc
pop
mov
cmp
lods
inc
sbb
shll
lret
jb
in
dec
add
ret
jg
loopne
clc
pop
popa
popf
push
movsl
add
popf
sub
push
ss
cld
fwait
daa
je
notb
int3
cli
pop
inc
adcl
out
xchg
stc
mov
imul
out
out
and
cmpsl
xchg
and
inc
cld
stos
xor
mov
sub
cwtl
repz
cmp
std
dec
test
add
out
arpl
lods
mov
ss
jg
push
or
mov
repnz
dec
add
loopne
popa
jb
rcrl
xor
aaa
xor
mov
outsl
jg
mov
mov
test
xor
jmp
ret
ljmp
data16
pusha
mov
sbb
mov
xchg
mov
mov
jg
pop
out
cltd
test
pop
add
inc
popf
ret
cli
movsb
test
je
aam
dec
data16
and
push
push
jbe
sub
sub
mov
sbb
scas
xor
cmp
dec
xchg
bnd
fcos
pushl
mov
dec
push
push
mov
cmp
sti
xchg
icebp
cmpl
cmp
fmull
faddl
inc
aad
dec
sbb
cmp
mov
mov
stos
sub
jge
jo
dec
jle
enter
fistpll
adc
sti
and
vmulss
das
test
loope
mov
xchg
sbb
push
stos
fsubs
xor
int
int
mov
loope
rolb
add
sub
std
imul
push
stos
pop
add
mov
xchg
test
push
rorb
and
pushf
into
pop
sub
leave
add
aad
add
dec
jl
dec
xchg
test
mov
and
push
js
cs
popa
inc
addr16
in
and
imul
repnz
inc
adc
mov
xchg
and
jmp
pop
cmpsb
xchg
orl
add
jmp
popf
pop
push
bound
leave
jno
adc
pusha
push
call
jo
mov
inc
in
dec
push
xchg
dec
sbb
aas
sahf
fnsave
out
pop
mov
loop
mov
int
pop
je
push
fisttpll
cmp
sub
incb
push
mov
movsl
mov
jg
inc
mov
out
cmp
insl
jg
fldenv
mov
cmp
stos
rolb
daa
jns
stc
dec
loopne
cmp
push
leave
outsl
jg
lds
xor
ljmp
add
mov
repnz
testl
sahf
xor
je
cltd
or
dec
pop
push
aad
ja
xor
lcall
data16
push
mov
adc
daa
inc
pop
jns
pop
sbb
cld
and
push
fld
fdivs
test
fists
popf
mov
mov
loope
js
xchg
hlt
and
push
pop
cmp
xor
inc
mov
mov
pop
pop
adc
xchg
push
dec
lret
dec
fstp
mov
push
mov
test
nop
xchg
icebp
jns
xchg
inc
cmpsl
mov
sahf
lods
jb
dec
loopne
mov
fprem
in
inc
fstpl
int3
add
sarb
pop
out
mov
stos
insl
add
ret
pop
pop
sbb
bound
mov
fistl
cmpsl
inc
xchg
push
adc
lock
sti
lret
shl
test
in
aaa
adc
add
push
fcomps
cmc
xor
sub
dec
cld
push
xchg
push
pushf
mov
data16
dec
inc
mov
scas
nop
sub
insl
pop
cld
push
inc
cmpsb
nop
cmpsl
fscale
jmp
inc
daa
cld
xor
mov
xor
adc
sub
inc
incb
xor
xor
fiadds
ljmp
iret
mov
inc
stc
addr16
cmc
shll
stos
loop
pushf
iret
movsl
arpl
cltd
test
daa
jge
sbb
lds
fs
adc
mov
push
clc
out
movsb
jnp
je
fsts
or
repnz
and
sbb
ret
xchg
fs
mov
in
mov
inc
je
xor
lods
push
in
lods
in
data16
mov
dec
push
movl
xor
lea
jl
push
push
and
push
arpl
leave
sbb
test
mov
gs
push
lds
pop
shll
repnz
cmpsb
push
push
stos
clc
into
sbb
rcl
add
in
mov
scas
pop
in
mov
mov
jl
cli
cltd
xchg
clc
call
daa
jo
out
dec
inc
push
xchg
sub
sbb
jbe
xor
movsl
addr16
inc
cmp
pop
sbb
dec
scas
jb
sub
jns
xor
xchg
jo
push
outsb
xor
gs
int
adc
mov
lea
jecxz
inc
mov
fwait
inc
arpl
xchg
lret
loop
pop
ret
cmp
jbe
inc
mov
mov
push
cld
inc
std
jne
adc
outsl
xorb
push
or
sbb
test
insb
test
jnp
shrl
mov
cmp
xor
cmpsl
jl
mov
in
rol
insb
lods
xor
in
lret
shrb
je
mov
pushf
jne
xor
cli
pop
dec
dec
adc
shl
pop
add
or
xchg
xchg
pushf
pop
push
int3
das
jge
xor
cmpsb
int
pop
movsl
pop
mov
xchg
clc
nop
sbb
inc
mov
lods
pop
xor
xor
mov
loop
stc
xor
pop
pop
jecxz
jecxz
sbbb
test
in
pop
xchg
test
jae
push
daa
dec
xchg
das
scas
mov
lcall
jge
in
roll
and
sub
cld
fwait
add
stos
cs
stc
loopne
daa
imul
push
xchg
loope
cmpsl
jno
mov
fs
mov
lahf
fs
mov
lock
mov
fsubrs
jp
mov
sbb
cmp
testl
sbb
int3
pushf
and
push
idivb
sarb
es
sub
clc
pop
push
fimull
lds
xlat
adc
add
int
xchg
fistpll
shlb
adc
or
stc
pushl
out
push
call
xor
stc
add
adc
xchg
sbb
push
xor
insl
and
popa
ss
mov
jne
jg
cmp
add
sbbb
push
sub
test
xchg
mov
out
out
aas
xor
aaa
mov
out
push
scas
fcmovne
outsl
nop
daa
es
jno
scas
fiadds
call
insl
loope
sub
mov
or
mov
add
sbb
dec
out
xor
movsl
fs
out
iret
mov
jmp
and
ss
pop
imull
lods
dec
mov
xchg
push
add
movsl
jne
stos
stos
mov
and
shll
and
adc
ds
test
mov
nop
test
imul
jle
repnz
ret
xchg
cmp
xchg
pop
stc
js
out
cmp
sahf
and
pop
jnp
pop
push
popf
add
dec
pop
xor
push
dec
sti
xor
ret
out
jp
xor
fstpl
mov
sbb
mov
mov
push
aas
inc
or
xchg
sub
clc
xchg
lock
insb
sti
mov
cmpsb
repz
test
fxch
ret
or
pop
pop
inc
push
and
mov
int3
cmp
push
cmp
mov
fadds
rcl
ljmp
enter
or
fldl
inc
enter
xlat
xchg
inc
in
je
into
stos
into
in
jb
iret
sub
pop
fcompl
mov
add
mov
mov
xor
sub
sbb
repz
pop
das
xchg
out
cwtl
das
cmp
mov
jbe
lcall
dec
daa
aaa
cmp
loope
int
out
in
pop
adc
inc
mov
cld
mov
pop
loope
jb
push
in
fidivrs
loope
daa
dec
les
cmp
or
rolb
and
mov
lret
mov
into
fs
inc
or
inc
fwait
arpl
jl
dec
call
jno
fwait
scas
outsl
lret
les
dec
inc
icebp
sub
fs
mov
dec
or
push
inc
cld
mov
ljmp
mov
jmp
imul
mov
ficoml
jle
imul
pop
ja
ds
rorl
xor
pop
outsb
ffreep
bnd
cltd
stos
jb
hlt
shl
add
mov
cmp
leave
js,pt
lahf
out
mov
aaa
sub
adc
data16
test
loop
mov
sti
dec
fwait
mov
mov
xor
push
mov
fptan
out
dec
sub
outsl
sbb
jmp
push
sub
xchg
sbb
add
inc
xor
stos
sub
rcr
fcoms
xor
movsb
je
aam
dec
mov
lds
fwait
js
xchg
sbb
jle
popf
scas
push
adc
popa
out
cmpsb
imul
lods
repz
cmpsb
out
sbb
sub
jae,pn
dec
add
mov
movsb
mov
inc
mov
xchg
sahf
and
mov
inc
sbb
sub
leave
sahf
test
cmpsb
incb
sbb
inc
jmp
fsubrl
lret
sbb
adc
mov
fistpll
mov
jbe
mov
add
and
lret
loopne
and
movsl
adc
aas
xor
xor
xor
pop
loopne
out
or
fwait
mov
lret
into
mov
or
xchg
cmp
leave
test
cmp
jae
fdivrs
xchg
sbb
das
add
mov
in
lret
and
test
call
gs
ret
adc
ffreep
pop
sbb
xor
test
inc
and
mov
ss
test
imul
xor
lcall
notb
adc
sub
jge
jo
cmpsl
pop
pop
adc
jmp
xchg
jne
mov
cwtl
aad
clc
jnp
xorb
fwait
enter
arpl
dec
mov
scas
arpl
loop
aad
adc
xor
cmp
imul
jg
ucomiss
in
adc
cmpsl
sbb
sbb
out
in
push
mov
sarl
rorb
insl
and
push
adc
cs
cmpsl
je
mov
or
cmp
add
stos
pop
or
ret
mov
pop
repnz
aad
pop
popf
push
and
or
jle
jl
dec
icebp
xor
push
divl
cmp
and
xchg
dec
xchg
fidivrs
jne
mov
adcb
setb
js
cmc
pusha
add
sub
mov
pop
in
cld
adc
cld
repz
cwtl
dec
sub
stos
out
pusha
pusha
dec
insl
scas
jle
js
pop
das
test
fs
dec
lods
mov
mov
xor
shrl
leave
sbb
aad
aas
ret
mov
xor
popa
bound
divb
fucomi
shll
xor
movsl
sbb
das
mov
dec
ret
dec
fists
clc
imul
pop
hlt
arpl
aaa
aam
fildl
mov
cmp
push
pop
rclb
and
adc
mov
or
data16
xlat
dec
int
pop
jmp
mov
sbb
xor
inc
les
add
js
lds
inc
scas
imul
mov
call
jmp
mov
inc
cs
xchg
push
add
inc
jns
inc
jle
sub
mov
xchg
insl
aad
mov
xchg
leave
cwtl
sub
add
fdivrl
in
mov
subl
mov
fidivl
rcrl
fcmove
mov
or
jg
sbb
mov
aam
lret
pushf
and
dec
cmp
movsl
mulb
mov
shlb
pop
xor
popf
add
inc
in
les
rcrl
add
fldt
mov
hlt
sub
fmuls
stc
das
mov
sbb
lahf
push
mov
popa
adc
aad
sbb
add
sbb
add
hlt
bnd
inc
adc
mov
jl
inc
pop
leave
gs
dec
xor
imul
mov
xchg
loopne
testl
adc
iret
xcrypt-ecb
cmpsl
or
ss
loop
stos
sbb
lahf
popa
call
fildl
mov
cmpb
test
cmp
mov
insl
xor
pop
sub
cltd
arpl
sub
imull
cwtl
out
mov
in
and
out
jnp
stc
dec
movd
pop
sbb
in
inc
jecxz
lahf
mov
jecxz
mov
insb
cld
ret
xchg
into
fldl
ja
xchg
sub
pop
test
mov
cs
into
xor
subl
je
or
jecxz
loop
and
push
push
or
loopne
pop
bound
test
push
jnp
dec
mov
adc
and
pop
mov
dec
pop
in
sbb
in
adc
sbb
in
sbb
adc
js
add
mov
ljmp
and
in
mov
xchg
test
sbb
sub
cmp
daa
sarb
je
cwtl
mov
sub
push
mov
pop
das
sbb
sub
add
dec
pusha
push
inc
pmaddwd
adc
nop
and
or
stc
idivl
xor
push
mov
push
into
andl
sbb
daa
jbe
ret
leave
mov
adc
ret
adc
cmp
repz
andb
aam
test
arpl
test
xchg
aas
fs
jns
inc
mov
inc
je
int3
mov
bound
push
add
cmp
pop
imul
bound
jne
pop
adc
cltd
and
add
mov
push
xor
adc
mov
int3
jle
mov
xchg
xchg
ja
adc
loope
lods
inc
sbb
push
movsb
mov
xlat
xchg
lock
pop
repnz
jp
leave
xchg
xor
insb
and
push
jg
and
stos
cmp
push
inc
pop
in
push
fsubrl
int
movsl
mov
mov
lahf
subl
adc
jne
push
inc
lods
inc
cmp
adc
mov
out
clc
add
es
or
pop
fildll
mov
ja
dec
mov
xor
dec
lods
sbb
dec
mov
loop
ss
mov
and
flds
add
xchg
pushf
jae
push
divl
mov
andb
push
jb
mov
lcall
in
mov
sub
aas
or
mov
sbb
in
mov
jge
pop
lock
lret
add
imul
jp
out
sbb
xchg
lcall
pop
jbe
mov
sub
std
jmp
cmp
mov
fidivl
stos
adc
inc
in
add
rcll
or
pop
add
jb
add
fcom
jmp
ljmp
push
jne
adc
dec
push
je
popa
sbb
out
push
repz
repnz
loope
push
test
int
add
pop
xorl
cld
adc
add
pop
and
or
aad
call
mov
in
scas
mov
outsl
stos
inc
insb
ret
movsbl
xchg
subl
jle
jae
adc
push
je
cmp
jle
icebp
inc
repz
pop
fsubrs
sbb
sbb
pop
xor
sbb
xchg
and
stos
xchg
mov
xor
fiaddl
xor
fwait
insl
xor
lea
push
add
sub
and
and
inc
jno
mov
sub
jle
xchg
push
push
and
mov
mov
sar
cmc
xlat
xor
pushf
into
push
jno
push
clc
outsb
into
lcall
lret
aas
and
pop
fdivrs
test
cmp
repz
inc
test
not
addr16
jnp,pt
sbb
jb
ss
dec
addr16
push
into
hlt
insb
xchg
dec
sub
fidivl
adc
call
int
add
out
lea
inc
mov
adc
lea
xchg
repnz
aad
repz
sub
hlt
idiv
or
add
mov
cmp
cmp
sahf
test
jecxz
jp
push
int3
fisubs
int
xor
inc
and
inc
adc
fiadds
mov
sub
subl
mov
js
xchg
push
lea
daa
mov
mov
jle
mov
dec
add
push
sub
fmuls
lret
push
push
shr
jmp
push
cmp
fcompl
mov
xchg
pop
cltd
fcoms
add
rolb
mov
xlat
shll
dec
into
mov
inc
nop
mov
adc
push
xchg
sub
inc
enter
push
mov
mov
leave
and
adc
sbb
arpl
xchg
clc
sub
lds
inc
insb
ret
cmp
ljmp
fcomps
add
cs
fsubs
jb
xchg
pop
inc
dec
sarl
cmp
out
or
je
cmp
jge
icebp
mov
xor
sbb
dec
push
mov
jbe
add
xor
imull
mov
out
addr16
hlt
sub
pop
xchg
pop
shll
pop
les
jnp
fadd
sar
xlat
xchg
cmp
adc
add
cmp
xchg
adc
push
cmc
mov
add
cmpsb
divl
test
icebp
hlt
ja
adc
mov
push
sub
call
inc
lret
xor
adc
gs
mov
xor
data16
test
pusha
outsl
add
add
pop
xchg
inc
out
pop
fdiv
sahf
adc
ffree
xor
and
mov
adcb
mov
mov
cmp
hlt
xchg
fistps
mov
insb
mov
ret
incl
imul
mov
dec
rcll
cwtl
outsb
dec
and
and
push
addb
xchg
insl
inc
and
jnp
stc
lea
insl
rclb
in
pop
adc
push
cmpb
sbb
and
lahf
xchg
add
mov
inc
mov
inc
cmp
pop
lret
cmp
push
adc
mov
and
popf
mov
adcb
arpl
mov
sbb
dec
cmp
mov
mov
rclb
mov
add
lret
inc
cmpsl
pop
push
cmp
push
pop
shlb
ss
ss
inc
push
stos
fs
mov
cmp
shrb
loop
mov
loopne
int
push
pop
push
adc
sbb
outsb
sbb
wrmsr
sbb
test
daa
movsb
sub
mov
enter
aaa
clc
dec
lea
fwait
add
xor
push
dec
mov
jle
inc
testl
enter
adc
lcall
cmp
push
push
pop
loope
std
xor
into
aam
jmp
cmp
sbb
mov
xchg
inc
bound
mov
push
adc
cmp
mov
dec
xor
jp
adc
add
mov
jmp
out
cmp
pop
sub
stos
sub
mov
add
xor
xchg
mov
ljmp
sub
and
xor
push
lcall
push
pop
das
insb
push
inc
bound
icebp
gs
fcmovbe
loop
push
daa
cmp
into
mov
xchg
mov
faddl
bound
aaa
xlat
outsl
sub
cmp
in
test
mov
adc
nop
icebp
add
loopne
fcmovu
fwait
mov
or
jb
adc
icebp
sub
inc
ror
adc
pop
int
repz
fwait
stos
dec
adc
or
movsl
sbb
sub
xor
jbe
push
pop
push
pop
and
or
lods
in
adc
movsb
mov
mov
mov
imul
fistl
cmp
in
add
mov
repz
mov
xchg
test
roll
outsl
xor
loop
mov
mov
mov
xchg
leave
inc
sub
sub
inc
push
aaa
mov
sub
mov
dec
fwait
ret
mov
mov
or
fwait
mov
pop
jp
outsl
pshufw
mov
mov
push
sub
mov
xor
jae
sbb
add
lea
in
int
and
xorps
push
add
pop
sarl
ljmp
popa
mov
jp
loope
push
add
inc
movsl
xchg
int
int
daa
lock
dec
and
sbb
dec
jmp
xchg
mov
mov
mov
loopne
test
cmpsl
mov
gs
pop
shlb
loope
iret
inc
push
jle
push
xchg
adc
imul
mov
out
mov
xlat
mov
jb
sbb
pushf
add
jns
jb
rolb
fisttpl
mov
dec
cs
jae
push
fldenv
jnp
insl
ljmp
in
pop
add
lods
ss
or
inc
lods
fsubrs
sbb
push
ret
ret
push
aaa
jg
mov
cli
ret
jns
dec
decb
fidivrs
jl
sub
imul
test
xchg
aam
xor
divl
call
push
lcall
push
inc
xor
sub
ja
subb
jne
jae
xchg
sbb
lret
jecxz
or
loop
mov
push
lahf
fcomi
cwtl
into
add
es
sbb
test
mov
sarl
std
aas
xlat
inc
imul
aaa
cmp
cwtl
shll
ret
js
gs
icebp
lds
mov
mov
mov
and
aas
dec
xchg
push
sbb
push
enter
test
cmp
jns
ret
jns
out
mov
push
sarl
sbbl
test
mov
mov
sub
test
sbb
idivl
call
xor
mov
push
stos
fsubp
jmp
jnp
ret
pusha
jg
dec
mov
mov
stos
inc
add
xchg
inc
daa
stos
sub
out
adc
or
push
or
sub
xchg
arpl
mov
mov
ljmp
sub
jno
fdivrl
jp
int3
xchg
pushf
or
jns
xor
icebp
add
test
push
call
adc
test
jle
js
imul
and
pop
fsubs
and
into
pushf
cmpsl
mov
sub
inc
mov
lahf
mov
push
xlat
js
pop
or
mov
sti
mov
xor
inc
mull
cltd
mov
cltd
movsb
stc
dec
fnstsw
or
and
adc
test
dec
popf
loop
mov
and
mov
sub
test
shlb
xor
adc
hlt
test
xorb
mov
add
imul
mov
arpl
xchg
popa
scas
stos
sub
adc
pop
out
insl
sub
adcl
shlb
into
cmp
test
jo
pop
cli
mov
mov
pusha
test
data16
xchg
sub
repnz
mov
testl
fistpll
dec
sbb
push
add
jp
test
in
sahf
pop
cltd
out
mov
fidivrl
push
insb
int
xchg
add
mov
sbb
pop
js
sub
mov
das
rcll
inc
adc
push
and
cmpsb
in
ficoml
icebp
int3
adc
jne
add
es
lahf
mov
sar
ds
insb
mov
adc
inc
mov
cmp
sub
cmp
sbb
mov
cmp
shl
nop
fbstp
pop
call
ljmp
movsl
negw
icebp
loopne
daa
loope
push
or
inc
leave
cltd
pop
mov
int
sti
cmp
popf
inc
pop
sbb
pop
roll
xor
pop
adc
sub
xor
scas
ret
mov
call
ds
mov
dec
aam
mov
mov
test
adc
test
push
aad
dec
sbb
sbb
lret
sub
test
repnz
jbe
movsb
cmp
xlat
pushf
stos
cmpsl
and
es
bound
cwtl
cmpsb
lea
or
or
lock
push
mov
sub
leave
cmp
xor
roll
xchg
xor
daa
inc
mov
and
pop
ljmp
fcoml
xor
and
pop
jge
ret
jnp
std
adc
scas
aaa
cmpsl
jp
or
inc
icebp
addb
insb
sub
imul
jge
mov
hlt
mov
out
cmp
lds
and
inc
hlt
repnz
mov
mov
mov
or
jo
popf
js
int
insl
push
xor
jno
xchg
not
clc
nop
cli
or
test
sub
push
pop
xorb
inc
test
mov
jbe
test
scas
dec
lea
mov
imul
int
cld
jno
mov
hlt
mov
cltd
mov
call
movsl
ljmp
cs
scas
push
cltd
mov
clc
lods
jge
dec
jo
es
sub
cmpsl
dec
xchg
jg
shll
cmpsb
stos
mov
incl
pop
repz
sub
jne
jl
loopne
les
mov
dec
sub
pusha
fwait
or
push
fdivrl
lods
sbbl
fs
and
jg
and
das
rolb
push
xchg
jg
mov
mov
add
adc
subl
sub
push
cmp
sbb
insb
vpcmpgtw
inc
loop
sub
jns
sbbb
out
pop
in
mov
testb
pop
push
loop
mov
mov
pop
hlt
push
addr16
imul
cs
stos
es
outsl
sbb
adc
mov
cmp
test
mov
add
ss
out
push
mov
add
pop
in
js
push
je
popa
inc
sbb
sti
subl
add
addr16
mov
in
pop
lret
subl
movsb
inc
jg
inc
xchg
movsb
mov
add
es
push
lods
mov
movsl
movl
shll
js
clc
dec
sub
mov
fucomp
pop
push
icebp
mov
cwtl
and
mov
xchg
add
pop
cmpsb
jg
adc
mov
movsl
adcb
in
and
insb
jge
inc
popf
sub
jp
js
mov
inc
mov
fstpl
out
dec
lock
movlps
test
sbb
mov
cli
inc
icebp
lock
mov
mov
cmp
or
leave
imul
mov
mov
xchg
cmpl
mov
loop
arpl
fwait
dec
sbb
insl
dec
xor
pusha
mov
sbb
xchg
repnz
pushl
dec
pop
lahf
cld
subb
jo
push
imul
pusha
mov
ret
jl
enter
ljmp
test
xor
insl
cmp
imul
inc
adc
jne
rcpps
int
pop
jle
stc
jne
popa
or
imul
pop
aad
cs
imul
add
fabs
push
xor
mov
out
pop
and
dec
aaa
in
fs
hlt
sbb
xlat
xchg
mov
pop
xchg
jns
mov
add
arpl
rorb
cs
push
ljmp
stos
shl
adc
andl
mov
int3
mov
adc
clc
fwait
sarb
push
aas
pop
cmp
push
and
mov
fmull
int3
enter
sub
sbb
andb
xchg
pop
mov
xchg
insl
push
test
dec
or
sbb
jb
or
loope
stos
mov
mov
sub
push
aas
or
dec
inc
xchg
sub
stos
mov
and
out
ret
sbbl
fcomps
jb
inc
cs
sub
or
or
pop
out
jmp
jne
std
mov
outsl
jo
add
test
xchg
les
sub
inc
aaa
pop
imul
bound
jecxz
aad
mov
mov
jl
ss
dec
mov
repz
daa
add
push
jl
xor
and
push
out
sub
sub
pusha
jg
iret
popa
xchg
out
inc
jmp
daa
dec
push
push
dec
cmp
out
fisubl
or
imul
inc
mov
mov
aam
enter
fnstsw
aam
lds
scas
aaa
gs
fwait
dec
out
stos
inc
xlat
push
stos
mov
rsqrtps
push
sub
inc
jmp
rcrb
sub
pop
add
out
leave
jp
sbb
cld
cmpsb
jmp
out
add
mov
sub
lret
sti
fidivs
aam
pop
sbb
add
or
or
sub
lcall
fcom
inc
rorb
cmp
stos
std
iret
inc
lds
mov
cmpsb
ljmp
movsl
test
xchg
or
and
clc
jmp
xchg
cmp
mov
mov
mov
pop
fmulp
sar
das
push
xchg
je
xchg
sbb
shll
loopne
mov
lea
add
dec
inc
es
xchg
int3
push
mov
or
idivb
test
insb
jmp
movb
lret
imul
xchg
imul
sbb
mov
xlat
add
nop
dec
jl
xchg
and
rcll
lret
pop
dec
sbb
and
mov
out
xor
add
andb
jg
icebp
mov
popaw
xchg
sbb
mov
adc
and
jb
mov
pop
push
push
mov
or
lahf
arpl
jge
pop
sbb
stos
scas
loopne
mov
popa
loopne
fnsave
or
push
mov
mov
clc
test
cwtl
or
dec
in
inc
in
ficoms
lods
in
fmuls
std
or
and
mov
adc
mov
jl
xchg
adc
and
add
inc
jg
rcrl
sbb
or
cmp
fdivr
adc
int
sub
adc
fstpl
aaa
pushl
add
out
dec
dec
mov
aas
sbb
add
push
jo
add
arpl
sbb
jae
mov
xor
cmc
insl
jbe
add
jo
sbb
sub
push
lods
pop
lret
outsl
mov
and
add
pushf
xor
call
and
pop
jl
pop
cld
les
mov
xor
cltd
xor
popa
or
xor
sbb
es
mov
loop
inc
inc
mov
dec
icebp
movsl
leave
repnz
pop
dec
pusha
jl
outsb
shlb
int
mov
stos
adc
jge
pushf
fwait
add
popf
push
mov
inc
inc
std
je
aam
inc
mov
mov
xor
je
js
sub
mov
ret
call
jb
sub
cmp
iret
mov
faddl
enter
inc
inc
stos
mov
adc
movsl
dec
dec
mov
lds
xor
jno
sbb
in
cmp
decb
jne
lret
stos
pushf
inc
mov
mov
rolb
sub
clc
ljmp
xor
push
or
lock
sub
data16
outsb
fistpll
push
loop
ds
addb
pop
sbb
rol
add
aam
push
mov
xor
js
adc
icebp
cmp
pop
add
es
je
fwait
inc
sub
add
ficoml
push
imul
sub
mov
mov
scas
push
in
xor
mull
lret
dec
xlat
mov
call
push
mov
out
nop
xchg
push
xchg
jg
jmp
cmp
repz
daa
add
or
adc
insb
notb
mov
fwait
test
dec
bound
aas
scas
ret
mov
jo
pop
cwtl
mov
inc
and
jmp
xor
dec
push
scas
stos
jl
pop
out
pushf
lahf
sub
mov
gs
add
loope
mov
lods
into
xor
mov
sbb
add
push
sbb
out
nop
mov
sbb
adc
int3
pop
mov
adc
push
sbb
daa
dec
int
or
adc
or
xchg
add
jae
or
or
or
push
ficompl
push
pop
jl
cmpsl
sti
int
cmp
mov
mov
and
les
push
imul
mov
pop
sub
dec
stos
pop
or
jle
les
inc
lock
pop
arpl
and
sbb
mov
mov
lahf
ret
cmp
mov
test
data16
and
mov
sbb
push
and
sbb
pushl
es
in
push
mov
adc
sub
enter
cwtl
inc
or
adc
ret
dec
lcall
jns
dec
orb
jmp
repz
sub
and
pop
popa
fs
inc
popf
gs
imul
mov
jne
mov
sub
je
pop
xlat
movsb
jo,pn
les
cmpsl
mov
cmp
mov
fisubs
and
sub
cs
inc
fwait
jno
lret
inc
adc
mov
push
push
test
data16
xor
push
fwait
cmpsl
sub
add
add
dec
lahf
push
cmp
sbbl
scas
fstpt
cmpsl
mov
add
sbb
insb
mov
repz
es
push
insb
stos
and
push
loope
dec
cli
xor
lods
loop,pt
dec
lods
and
mov
cmp
fistps
mov
mov
cmp
je
push
addr16
inc
roll
dec
fcomi
pop
cltd
dec
aaa
loopne
push
and
ret
xchg
mov
fisubl
pop
xor
iret
lods
cmp
aaa
jecxz
push
mov
gs
jecxz
fnstsw
jl
out
outsl
aad
inc
mov
fstl
mov
add
je
mov
cmp
push
inc
loope
xchg
sbb
enter
js
cmpsl
fwait
in
and
jbe
aaa
in
adc
dec
push
je
add
sbb
mov
lret
arpl
mov
xchg
mov
arpl
and
add
or
in
fs
jmp
pushf
dec
ja
hlt
xor
xchg
das
dec
cmp
mov
ljmp
add
mov
data16
jg
or
push
out
mov
xchg
shlb
xor
cmpsl
adc
mov
lcall
mov
int
std
test
shlb
test
jecxz
xor
scas
dec
sbb
incl
sub
jmp
dec
pop
mov
xor
mov
jl
lret
sbb
out
xchg
sahf
mov
push
rcrb
or
add
push
or
les
fs
icebp
repnz
sahf
adc
aad
imul
adc
add
cmpsl
in
cmpsb
scas
xchg
push
mov
xchg
lret
jp
adc
mov
arpl
or
or
js
xor
xchg
mov
fimull
daa
push
sub
xchg
cwtl
cmpl
sub
out
xchg
add
jb
fwait
sub
sub
fcoms
fnstenv
cmp
aad
jbe
in
jb
outsb
mov
in
or
jno
inc
adc
ja
sub
lods
push
push
lret
pop
cltd
xchg
push
pop
les
ret
push
inc
int
add
mov
icebp
add
push
out
xor
aad
xlat
pop
cmp
fnstsw
popa
repnz
push
hlt
call
pop
inc
or
push
pop
sbb
cmp
mov
mov
push
cmp
lcall
aas
sub
inc
mov
clc
enter
frstor
sarl
mov
sub
dec
sahf
xchg
dec
mov
fistl
loop
ret
push
add
imul
xchg
shrb
pop
mov
push
loop
std
mov
or
fsubrl
rcl
pusha
das
or
cmpl
in
cltd
mov
loop
mov
mov
mov
sbb
ss
adcl
push
lds
sub
mov
adc
je
jno
xor
jecxz
lret
in
adc
clc
mov
sbb
int
cmpsl
mov
adc
shl
rcr
les
data16
pop
xorl
stc
iret
cwtl
xlat
repz
loope
inc
insb
sbb
jno
cmp
std
mov
mov
in
add
and
xor
xlat
shll
in
adc
push
loopne
xor
test
xchg
and
add
pop
mov
push
xorb
push
add
mov
push
scas
mov
xor
loopne
pop
mov
data16
pop
jo
int
imul
lret
out
lock
loope
cmpsl
jns
jmp
or
flds
out
cmpsl
mov
repnz
mov
cs
imul
inc
xchg
jmp
xchg
sbb
add
xor
repnz
in
hlt
icebp
cmp
xchg
shlb
outsb
pop
int3
jecxz
mov
mov
aad
and
or
mov
ret
sbb
xor
add
xchg
cmp
dec
shr
aad
push
stos
and
mov
add
mov
mov
mov
adc
jg
sbb
jno
int
push
and
iret
divb
mov
cmpsb
dec
rcll
push
mov
test
outsl
push
add
fildl
push
cltd
fs
call
fisttps
xchg
add
and
pop
and
inc
cmpsb
mov
hlt
mov
mov
rcr
imul
ds
repz
cmp
repz
xchg
movsb
xor
sbb
divb
mov
add
jp
scas
cmp
pop
fisubrl
or
sarb
sub
add
dec
dec
add
adc
mov
mov
icebp
sbb
pop
lock
call
push
cltd
jg
ret
jmp
out
xchg
mov
int
adc
xchg
je
loope
in
sub
insl
cmp
icebp
sub
rolb
add
ljmp
aad
iret
xor
jns
push
ljmp
in
adc
ljmp
icebp
mov
jno
subl
xchg
movsl
pusha
call
cmp
or
pop
mov
sbb
loop
pop
xchg
mov
ljmp
sbb
mov
gs
add
sbb
fdiv
mov
and
dec
mov
jae
loope
sbb
jecxz
jmp
cmp
dec
rorl
jbe
xchg
inc
xor
scas
adc
xlat
mov
xchg
sbb
mov
cmpsb
sbb
std
dec
dec
les
dec
dec
add
cmp
and
xchg
bound
repnz
dec
jo
or
arpl
clc
or
inc
outsb
ljmp
push
add
daa
dec
jne
mov
lret
xchg
mov
mov
out
xlat
lcall
pop
sbb
std
cmp
mov
rcrb
lds
jo
ja
sub
in
sbbb
sub
pop
mov
mov
test
push
inc
mov
negb
adc
push
jnp
outsb
ret
jecxz
repnz
scas
negb
pop
lock
inc
cmp
adc
cmp
dec
xchg
mov
loopne
cld
repnz
cwtl
mov
out
cmp
dec
and
je
add
jns
sbb
mov
dec
xor
fstl
in
adc
jns
stos
pop
aam
fbstp
cmpsl
sarl
imul
out
dec
shlb
xchg
mov
xorb
shrb
xchg
xor
stc
cmpl
cmp
mov
fs
in
cmpb
and
inc
or
movsl
repz
and
xchg
dec
pop
hlt
cmp
inc
jb,pt
repz
mov
leave
std
pop
js
jecxz
mov
adc
cmpl
dec
adc
sub
xor
adc
in
sbb
scas
and
test
sbb
andb
xor
inc
jno
jae
mov
adc
or
pop
and
leave
mov
xchg
lcall
push
xor
movsl
sbb
test
cmp
dec
push
jecxz
inc
mov
xlat
pop
ljmp
jns
leave
imul
add
test
fldl
testb
sub
ds
jmp
cmpsl
jne
lcall
and
int3
inc
or
dec
inc
pop
outsb
fists
stos
outsl
in
ret
clc
sbb
push
or
dec
cltd
xchg
out
and
dec
push
mov
stos
pop
lds
sub
jno
repnz
insl
pop
push
or
les
xchg
dec
mov
push
int
xchg
mov
or
xor
mov
inc
xor
sbb
push
and
xchg
push
sub
and
mov
inc
pop
xor
jg
add
adc
push
mov
pop
add
dec
jl
and
push
dec
sbb
jecxz
mov
jne
jbe
mov
shlb
mov
outsb
and
orl
or
ret
xchg
idivb
jge
mov
mov
jmp
push
push
mov
imul
add
arpl
ja
cmc
cmp
enter
mov
loop
or
dec
xchg
adc
cmp
pop
cld
mov
movl
push
or
pop
popf
xchg
das
mov
sahf
popf
ret
or
fdivs
adc
jecxz
add
test
imull
adc
mov
xlat
pop
lea
xchg
mov
dec
jmp
xor
inc
insb
out
jp
lock
mov
push
jnp
dec
enter
sbbb
rcl
jns
push
out
add
xchg
add
xchg
pop
je
adcl
sub
sub
xor
outsb
push
add
sub
jno
sbb
dec
lahf
pop
adc
loop
fwait
sub
rorl
mov
push
lock
cld
pop
popf
es
pop
shrl
call
adc
jecxz
and
sbb
mov
or
imul
jl
xlat
mov
cmc
jmp
xor
or
add
or
xor
pusha
pop
xorb
mov
mov
pushf
icebp
xchg
int
insb
dec
int3
fiadds
lds
roll
dec
das
xchg
bound
roll
int
sbb
push
and
xchg
sbb
movsb
jmp
sti
add
mov
or
fcmovnb
xchg
ret
or
cs
mov
jge
sti
inc
jecxz
cmp
call
cmp
out
or
ja
inc
repz
dec
push
das
insb
pop
xchg
mov
popl
test
lcall
pop
ret
add
add
xor
hlt
loopne
add
dec
push
rcrb
jcxz
push
dec
mov
xor
popf
cmp
cmp
ja
test
rcrl
mov
in
mov
aad
incb
sbb
jno
imul
lds
push
movsb
leave
push
aam
adc
aad
movb
mov
iret
popf
cmp
or
dec
sbb
sub
xchg
call
sti
mul
out
stos
xchg
add
pop
mov
out
and
mov
dec
scas
jo
out
les
in
in
and
out
xorb
mov
sti
mov
jo
repnz
mov
inc
nop
pushf
out
hlt
dec
push
xchg
lahf
ret
sub
lds
aas
mov
mov
adc
cmp
cmc
adc
dec
dec
mov
xlat
cli
cmc
shrl
add
sar
mov
and
into
mov
push
jle
int3
cmp
ds
mov
mov
mov
imul
icebp
push
nop
push
aaa
cmp
fsubl
adc
mov
in
and
or
and
into
xchg
and
push
adc
push
push
fcmovnu
push
and
cmp
mov
fldt
push
xchg
cmp
pop
xchg
mov
mov
sbb
movsb
push
push
push
ss
clc
dec
imul
mov
dec
cmpsb
pop
mov
mov
dec
dec
cmp
inc
test
add
lret
adc
inc
scas
xor
lret
imul
jecxz
pop
mov
or
jle
pop
rcrl
outsl
je
pushf
mov
movsb
mov
das
adc
mov
pop
inc
mov
pushf
mov
inc
bound
ficoml
test
mov
or
loope
pop
repz
xchg
lcall
mov
mov
sub
pop
sbb
push
loopne
lods
jg
icebp
dec
jg
incb
mov
mov
push
pop
into
shl
rorl
sbb
sub
or
out
enter
test
les
inc
cmc
dec
pop
mov
fs
add
ret
out
add
sarl
push
push
mov
jl
es
and
arpl
enter
xor
fcoms
shrl
hlt
imul
cmpsb
lds
insb
xlat
dec
fidivs
and
bound
lods
pop
adc
fwait
dec
mov
data16
mov
imul
call
push
js
xchg
jbe
push
xchg
popf
xchg
or
adc
call
mov
mov
dec
fsubrs
fdivrl
or
or
inc
daa
and
cmp
pop
ret
js
mov
dec
xor
std
rol
repnz
or
lea
pop
lods
in
sbb
std
leave
leave
das
icebp
leave
hlt
sub
movl
daa
in
or
loope
gs
sub
cli
rcll
in
insb
std
ds
cmp
mov
ss
scas
mov
add
pop
sub
dec
push
js
in
pop
adc
ret
loope
sahf
scas
aad
mov
test
ds
xchg
sub
ds
xchg
mov
xlat
pop
outsl
mov
repnz
outsb
or
pop
hlt
inc
and
sbbb
adc
lock
dec
xor
insb
out
inc
sbb
call
mov
fdiv
cmp
inc
jl
andl
mov
push
push
out
int3
xchg
popa
bound
jno
aam
arpl
lea
jno
arpl
xchg
or
sbb
push
dec
mov
add
and
rcr
jne
cmp
mov
or
lock
ds
adc
fnsave
sub
movsl
out
pop
imul
mov
shrb
push
cbtw
ja
and
mov
sub
sub
stc
fiadds
jl
pop
dec
movsb
sub
ss
cli
add
in
into
cmpsl
jnp
lock
mov
stos
xchg
ljmp
cwtl
aad
mov
inc
adc
in
jl
orb
xor
or
int
lret
outsb
mov
cltd
pop
outsb
fildll
fisttpll
xchg
das
and
loopne
sarl
incb
or
test
jbe
mov
fmull
sub
mov
mov
dec
jecxz
sub
inc
mov
loop
mov
in
sarl
clc
cmp
cmc
mov
andb
lock
mov
mov
cmpsb
in
cmpsb
dec
cltd
sbb
pop
out
jle
lods
inc
fs
repz
ss
inc
cltd
and
cld
outsl
lea
xor
fisttpl
imul
mov
push
xlat
popa
imul
jg
ljmp
inc
ss
in
mov
inc
pop
popf
lods
add
mov
or
pop
add
push
sub
xchg
cmc
lods
scas
xchg
mov
add
lock
mov
mov
dec
in
test
ljmp
hlt
pop
pop
xor
push
mov
adc
mov
sbb
lea
mov
mov
in
push
mov
xor
and
repz
and
mov
leave
imul
arpl
jne
cmp
push
pop
outsb
push
gs
cmp
out
sbb
jecxz
and
imul
out
clc
lods
sbb
fistl
cmpsb
mov
mov
adc
push
xorl
inc
bound
pop
push
bound
outsb
xchg
in
dec
mov
cmc
cmp
jne
lret
insl
hlt
gs
test
addr16
sbb
lret
je
cwtl
xor
jno
mov
xorl
sti
xchg
outsl
xchg
loope
mov
or
jp
mov
cli
iret
imul
add
xchg
xchg
inc
xor
les
hlt
repz
faddl
mov
std
in
mov
pop
mov
scas
mov
fcmove
cmpsl
adc
add
jl
jle
xor
xor
into
or
xor
movsb
cmpb
sti
lcall
pop
outsl
hlt
push
les
jle
fpatan
mov
mov
push
sti
mov
push
push
dec
xor
cmp
es
lods
popa
jge
scas
and
or
rorl
or
hlt
dec
imul
in
movsl
push
in
inc
cmp
cs
mov
jno
jnp
push
imul
iret
ret
mov
add
pop
jbe
mov
jecxz
pop
mov
inc
mov
inc
xor
mov
es
fwait
xchg
aas
pop
pop
xor
ror
push
dec
loopne
repz
ficoml
nop
mov
rclb
mov
js
out
mov
je
push
mov
push
aam
rcr
push
je
sbb
xlat
push
add
lods
or
std
test
add
jl
sahf
jle
repnz
cmc
adc
and
pop
lds
dec
sbb
and
xchg
pop
mov
pop
arpl
lea
dec
insl
push
pop
clc
pop
xlat
xor
cmpsb
mov
cmc
jg
dec
inc
mov
and
lds
loopne
or
sbb
test
jmp
jge
jns
mov
jmp
out
xchg
int3
jmp
div
dec
push
mov
push
in
sbb
jg
popf
into
test
stos
pminsw
mov
shlb
sahf
sbb
jmp
cmp
pmulhw
xchg
enter
popf
push
sbb
sub
mov
outsb
loope
out
sub
dec
push
insb
movsb
inc
cmp
sti
enter
or
and
push
jmp
dec
push
adc
and
loopne
mov
cmp
push
pop
popa
clc
pop
loop
sbb
dec
cltd
dec
mov
xor
jg
push
mov
aad
sub
shll
pop
in
adc
enter
movsb
iret
fldt
loope
loope
dec
fwait
out
cmpsl
notb
and
mov
stc
sbb
xor
xlat
xchg
cmp
push
or
or
add
lods
mov
mov
mov
xchg
insl
jns
call
push
icebp
sub
lea
lret
addr16
jle
test
insb
pop
mov
mov
fldln2
xchg
cmc
mov
xor
xchg
ja
cmp
push
popa
insl
icebp
ret
dec
mov
jl
es
xchg
icebp
lods
ds
and
sahf
int3
pop
popa
rolb
pop
mov
out
sub
jl
jae
addl
sub
xchg
and
flds
push
push
jae
je
call
mov
jge
pop
xorl
in
and
iret
imul
popf
jl
xchg
mov
ficomps
lods
xchg
sub
ret
cld
cmp
dec
cmp
nop
test
xor
push
xchg
aad
ljmp
or
repnz
pop
fucomp
sbb
or
jne
mov
loopne
xor
mov
in
fisubs
cwtl
imul
popf
cli
aad
cmp
enter
test
mov
push
fmuls
imul
add
cmp
push
iret
test
js
fsubl
aaa
xor
and
aam
jb
iret
lods
push
lcall
das
lods
pop
mov
sbb
xchg
leave
mov
pushf
push
dec
test
pop
pop
loope
fwait
sbb
mov
push
jl
xchg
add
sub
scas
xor
aas
iret
sub
push
int3
in
mov
int3
ljmp
loope
call
mov
mov
cmpsl
mov
arpl
dec
fdivrs
and
ret
jb
in
cmp
xor
das
pushf
ficomps
mov
dec
hlt
pop
mov
pop
adc
aas
xchg
sbb
popf
add
aaa
je
push
or
ret
add
test
push
movsb
das
or
adc
rorl
push
inc
ss
pop
aas
test
push
ss
jns
pop
mov
jbe
cld
pushf
ret
out
mov
call
ljmp
push
ret
mov
push
lret
jae
dec
int
xor
pop
jl
rorb
cmp
rol
into
lret
cltd
clc
cmp
dec
cmpsb
cmp
sbb
or
sub
xor
push
jae
stos
int
std
mov
sub
push
mov
or
lods
je
xchg
in
bound
stos
imull
mov
fsubr
and
dec
lahf
fldl
imul
xchg
clc
lret
addr16
jg
and
lcall
iret
dec
outsb
push
and
mov
xchg
sahf
cmpsl
movb
mov
popf
xchg
mov
out
pop
in
adc
fstl
out
add
aas
in
subl
mov
ror
ret
adc
lods
jecxz
out
xor
sub
xchg
call
stc
in
inc
xchg
xchg
aaa
push
add
lret
adc
mov
and
push
mov
mov
sub
jnp
cmp
mov
fnstsw
and
mov
cwtl
andb
popa
push
sub
push
dec
rcrb
sub
jl
lods
pop
andl
rcrl
xor
rorb
xor
and
in
mov
iret
sub
aad
and
fcmovnu
xchg
jae
jp
xor
mov
xchg
dec
push
add
lds
mov
out
xchg
cwtl
cmp
stos
jbe
insl
mov
loopw
jno
shrb
into
pop
aaa
andl
jno
jg
or
xchg
sahf
incl
lds
mov
mov
xchg
or
insb
and
mov
mov
jg
cmp
ds
push
pop
push
sti
addr16
pop
sbb
jge
cmp
add
lods
push
adc
movsl
int
sub
fstl
lods
sub
shlb
mov
mov
or
loope
popl
popf
jae
pop
and
aas
stos
inc
cmp
addr16
xchg
xor
jne
pop
repz
fwait
arpl
imul
out
and
adc
sub
jecxz
adc
sub
adcb
jne
xor
inc
cltd
sbb
xor
mov
ret
sbb
push
jne
mov
lods
jge
outsb
lcall
push
call
data16
std
jno
or
add
jno
pop
fwait
mov
cmp
stos
popa
repnz
out
mov
mov
pop
mov
pop
xor
cmpsl
lock
add
in
repz
loopne
sbb
or
stc
dec
cmp
sbbb
sub
loopne
sbb
add
jns
mov
stc
mov
pop
jmp
pop
mov
rcl
lret
imul
xchg
xchg
mov
out
inc
push
lock
cmp
or
arpl
shlb
fwait
pushf
in
sbb
rorb
shrb
push
loope
pop
cmp
mov
sbb
call
adc
lock
loop
les
sbb
or
mov
or
jecxz
addb
push
in
adc
adc
dec
dec
lea
insl
add
pop
jp
pushf
imul
xor
aam
cwtl
ret
orl
pop
and
jno
ljmp
es
jne
lock
push
repnz
shrl
fimull
adc
xchg
cmp
mov
hlt
stc
cmpsb
ret
push
daa
xlat
fnstenv
insl
and
into
in
jnp
mov
addr16
scas
cmp
ljmp
jp
xor
xchg
dec
movsb
stos
je
incb
outsl
and
loopne
aad
loop
in
sub
add
addr16
sbb
adc
sbb
sahf
mov
imul
aas
imul
jge
repz
mov
and
ljmp
aaa
fisttpll
mov
push
ja
push
addr16
mov
jbe
xor
jp
sub
cmp
dec
lret
cld
add
ret
popf
sbb
jge
jg
outsl
rorl
arpl
xor
mov
test
cmpsl
out
jmpw
stos
out
cmp
sti
loopne
sbb
rolb
ror
sarb
and
jb
fimuls
inc
or
ret
sarb
cmp
jne
in
sbb
adc
push
in
push
repnz
mov
adc
and
aam
xor
mov
in
in
cmp
sub
jmp
xchg
mov
inc
add
popl
cmpsl
push
adc
push
sub
lea
fwait
in
pop
lock
sbb
inc
iret
ds
into
es
xlat
cmp
mov
test
cmpsl
sub
dec
mov
sub
dec
arpl
sahf
sbb
popa
insl
in
dec
icebp
ret
pop
mov
pushf
mov
or
xchg
jmp
pop
push
push
jmp
inc
test
xor
in
mov
adc
jo
std
aam
loopne
adc
or
mov
fcoml
inc
lods
in
outsl
stos
enter
sbb
loope
stos
stos
loope
mov
nop
dec
into
mov
shl
loopne
pop
inc
out
inc
push
sbb
dec
jbe
jp
mov
xor
lahf
sbb
sub
leave
push
in
and
inc
mov
flds
or
movsb
add
shll
addr16
sahf
mov
inc
loopne
cld
or
or
jecxz
jp
mov
pop
push
pop
push
lods
fs
jmp
or
and
popl
ja
xchg
jne
inc
lods
jns
arpl
cmp
add
dec
jecxz
push
or
in
scas
stc
mov
in
jno
lods
out
xor
movsl
mov
enter
sarl
mov
pop
sti
fiadds
out
addr16
lcall
in
movsb
pusha
mov
dec
outsl
push
cmc
loope
mov
aad
pop
mov
stos
add
pop
pop
mov
lea
adc
test
inc
fwait
pop
and
pop
rcll
cmpb
add
insb
cltd
xlat
stc
mov
les
lds
scas
outsl
ret
sbb
pop
ja
xor
leave
fmull
shrl
xor
xchg
leave
add
pop
pusha
loope
sub
sbb
xchg
dec
ss
fadd
call
mov
clc
push
mov
mov
dec
es
test
ljmp
enter
and
mull
mov
je
sub
xchg
imul
xor
sbb
icebp
imul
jbe
mov
pop
or
jp
sbb
add
insb
dec
jae
xchg
add
ss
mov
dec
sbb
push
jno
jecxz
inc
out
mov
mov
cld
sbb
fwait
push
je
cmp
cld
in
out
stos
jp
inc
pop
cmc
push
int
dec
test
add
sbb
mov
sahf
je,pt
lahf
jo
or
pop
dec
or
insb
ret
stos
mov
mov
dec
pop
fldenv
ds
pop
inc
dec
dec
dec
popf
loopne
shrb
movsb
call
ss
add
cvtps2pi
xor
add
push
test
xor
nop
clc
callw
ror
outsl
clc
faddp
fwait
inc
mov
sar
sti
add
push
in
add
xor
mov
data16
daa
fidivrl
gs
mov
bound
dec
lods
mov
xchg
dec
push
add
jne
fildll
bound
cwtl
xchg
loop
push
push
add
add
push
jl
mov
lds
sbb
out
mov
and
mov
in
cltd
cmpsl
adc
sub
outsb
sub
adc
stos
xor
xor
cwtl
imul
mov
stc
lods
sub
in
push
ret
lods
imul
and
imul
je
mov
cmp
or
xchg
lcall
aam
leave
adc
dec
sub
adc
push
pop
lcall
mov
movl
lahf
sarl
clc
dec
push
test
sub
push
imul
and
xchg
ret
imul
or
insb
ljmp
ja
sbb
movsb
sbb
lds
mov
sub
jl
push
fcompl
jne
out
cs
mov
cmp
jmp
insl
xor
bound
scas
dec
movlps
inc
loope
stc
and
jg
inc
cmpsl
dec
mov
shlb
add
ret
pop
ret
jno
mov
scas
mov
test
xchg
sbb
xor
mov
call
mov
insl
daa
xchg
mov
or
xchg
jg
int3
adc
push
mov
subl
stos
pushl
mov
lea
fidivl
mov
mov
addr16
mov
das
mov
push
aas
bound
dec
and
pusha
add
adc
sti
lret
notb
test
icebp
mov
sti
icebp
cli
movsl
sbb
mov
sub
popa
inc
bound
std
xchg
mov
pushw
sbbl
xchg
mov
push
xor
xor
adc
loop
rcrl
fsubrl
stos
enter
xchg
xor
and
hlt
or
mov
sbb
cmp
loopne
movsb
test
pop
std
dec
cli
stos
xchg
inc
in
cltd
mov
jecxz
mov
pop
je
pop
je
in
ss
cmp
mov
xchg
mov
pop
mov
pusha
fidivs
jno
in
jl
testl
lret
mov
bound
cmp
stos
pop
shll
movsl
mov
and
fmulp
mov
repnz
push
and
scas
mov
jns
xchg
adc
xor
sbb
inc
push
popf
jns
and
inc
fnstsw
arpl
in
cmpsl
push
push
aaa
movsb
fs
outsb
out
cwtl
insl
idivl
into
cmp
int
push
fs
sub
test
cmp
mov
mov
or
test
mov
mov
cmp
mov
enter
cli
xor
lret
inc
outsl
mov
pop
adc
xor
pop
sbb
repnz
dec
inc
pop
int3
lock
in
push
or
add
lcall
jns
jge
fcomip
or
ljmp
fdivrp
inc
sarb
push
and
mov
mov
push
insb
pop
ja
arpl
fidivs
pop
negl
jo
andl
dec
sbb
cli
adc
rcrl
addr16
jb
dec
nop
xchg
aam
jbe
enter
pop
pusha
into
bound
mov
mov
inc
push
fistpll
xchg
ret
mov
inc
cmp
mov
data16
adc
adc
inc
insl
mov
ret
mov
adc
pop
test
mov
adc
imul
fdivs
daa
sub
or
sub
fs
jecxz
iret
ja
mov
cmp
dec
sbb
out
xorb
daa
xchg
sar
leave
xchg
pop
je
sbb
stos
dec
xchg
pop
adc
fldt
or
pop
xchg
les
sub
loope
dec
inc
xchg
mov
call
jbe
sbb
add
inc
inc
jbe
add
std
fwait
stc
mov
mov
cmpl
test
push
rcrl
mov
in
addr16
fisttps
jge
loop
aam
mov
sub
lods
test
test
push
movsl
sahf
out
jne
jp
push
popf
cltd
insl
mov
xor
cmp
aam
test
mov
pop
lahf
mov
daa
pop
data16
sahf
sub
and
cld
or
std
inc
dec
sti
lock
ljmp
fsts
leave
test
push
ljmp
popf
dec
sti
das
dec
clc
jae
push
xor
adc
xchg
xchg
pop
jmp
mov
pop
jno
stos
add
mov
jns
and
sbb
insl
tzmsk
jb
sbb
les
mov
cmovno
adc
std
xor
hlt
jbe
sbb
dec
sti
ss
cmpsl
and
ret
inc
sbb
dec
icebp
js
push
pop
mov
popf
pop
inc
popf
jnp
inc
ds
mov
jb
xchg
push
dec
sbb
adc
and
push
test
fs
mov
movsb
iret
mov
add
inc
mov
into
jl
mov
lods
sti
mov
icebp
aaa
mov
add
push
test
call
jne
ljmp
adc
pop
je
repnz
dec
sar
dec
jne
lods
mov
cmp
andl
inc
jno
ficomps
or
push
call
xor
push
inc
shl
repz
inc
push
mov
mov
lret
pop
and
push
mov
add
cmpsl
mov
cli
fcmovne
daa
cmp
std
ret
sbb
xor
js
daa
icebp
xchg
loop
sbb
jp
or
push
jno
fwait
es
push
addr16
jae
test
pop
fs
jo
jmp
or
cwtl
and
out
or
les
lret
adc
or
into
add
mov
test
imul
pop
jnp
jle
clc
xchg
in
lods
xor
dec
nop
sti
pop
inc
adc
push
dec
adc
mov
xor
fcmovnbe
inc
push
or
cmp
dec
in
sub
insl
jle
es
adc
jne
pop
or
add
cltd
imul
xchg
cltd
bound
daa
xor
sub
sub
out
add
mov
rol
call
out
cld
pop
js
xchg
cmp
into
push
push
add
and
adc
shrl
fsts
ljmp
ljmp
mov
add
or
dec
sbb
cmp
jns
cmp
sti
sbb
xor
lods
imulb
rcrl
rcll
mov
enter
jecxz
and
sbbl
or
mov
pop
sbb
outsb
jno
lea
test
pusha
and
jl
inc
lock
cwtl
fsubs
pop
xchg
push
sub
jae
sbb
jnp
stc
das
loope
or
outsb
imul
xor
sub
mov
and
mov
sub
push
ret
notb
sub
sub
push
scas
xor
push
cmp
shl
xchg
test
and
stos
pushw
outsl
xchg
xchg
mov
jns
mov
push
jle
xor
repz
xlat
lods
ja
lds
xor
adc
stos
cmp
inc
inc
js
and
stos
xor
mov
mov
arpl
add
stos
sbb
push
fbld
mov
insl
insb
repnz
andl
imul
push
cmpsb
mull
lcall
push
and
sbbb
je
cs
stos
adc
or
inc
iret
inc
out
inc
add
jl
repnz
je
xor
in
mov
dec
jns
add
sub
push
jmp
mov
fstpt
lahf
fcompl
shll
int3
xchg
sbb
aaa
mov
dec
or
lret
addr16
into
add
sub
push
je
mov
jge
fisubrs
jb
push
xchg
mov
cmp
push
jnp
out
sub
xorb
hlt
fisubs
mov
aad
fildll
roll
push
pop
pop
in
mov
aaa
push
jg
mov
andb
xchg
adcl
adc
lods
imul
sbb
push
inc
mov
insl
pusha
ja
mov
inc
push
sbb
test
cmc
testb
inc
lods
dec
shl
mov
repz
sbb
inc
and
pop
insb
jne
lea
gs
out
cli
scas
pop
adc
test
and
xchg
push
xor
leave
mov
in
push
adc
arpl
jno
aad
ret
outsb
push
lock
jb
out
repnz
sub
mov
mov
mov
rol
and
jp
out
xor
arpl
mov
jp
outsl
xchg
cmpsl
fwait
mov
jbe
mov
js
push
imul
stos
mov
test
int3
mov
xchg
inc
repz
mov
push
popa
jmp
dec
xchg
jbe
jle
fisubrl
call
sarb
cs
lods
nop
xchg
and
cld
sahf
cltd
cwtl
fsubl
add
mov
pop
xor
or
repnz
jne
movsb
lea
dec
aas
sbb
test
int3
inc
jecxz
repz
dec
cmp
jne
jl
xchg
fdivrp
add
jle
sbbl
xor
cmpb
cmp
jle
mov
mul
jns
scas
stos
inc
fsubrl
loope
je
orl
js
ljmp
in
adc
icebp
mov
adc
pop
dec
daa
push
adc
mov
push
inc
sbb
inc
in
mul
cld
cmp
loopne
stc
iret
cmpsb
or
fldcw
cmp
or
push
aam
int3
dec
push
jnp
lcall
xchg
cs
mov
mov
shll
imul
loope
in
or
mov
push
stc
iret
cmp
ds
pop
xchg
cmc
sbb
xor
adc
or
repnz
or
loopne
jmp
lods
leave
jns
adc
adc
sbb
mov
out
fwait
cli
mov
jnp
add
hlt
sti
cmp
lea
dec
shrl
inc
imul
jl
aas
and
ds
inc
jns
cmp
popf
mov
mov
xchg
inc
dec
push
mov
je
notb
movsb
psrlq
lods
mov
mov
or
lahf
jmp
loop
pop
xor
clc
add
cs
mov
and
ret
and
and
xchg
and
inc
popa
mov
test
lea
movsl
popf
out
test
das
loope
cwtl
les
and
sbb
rorb
loop
mov
inc
sub
push
ja
and
xchg
fdivl
test
jmp
lods
xor
cmp
dec
sbb
mov
jmp
push
ror
in
and
add
hlt
iret
mov
sub
lcall
add
outsb
xor
xchg
cs
jle
sti
andl
xor
gs
lods
shlb
push
pop
mov
roll
int3
jns
hlt
imul
jp
lods
jno
jge
ja
pop
push
inc
xor
ret
outsl
xor
test
push
negl
cs
fistpl
movsl
dec
mov
push
aaa
ds
xlat
lret
xorl
mov
loop
popa
xchg
movb
mov
daa
shlb
and
add
push
push
mov
and
xor
call
stos
nop
push
fdivs
fdivl
fdivp
in
pushf
inc
fs
pop
jb
es
fldt
mov
push
or
out
daa
outsl
dec
mov
xchg
movsl
pop
sahf
jmp
push
jnp
test
out
push
adc
inc
cmpsb
pop
es
mov
test
stc
push
jl
or
mov
aam
and
mov
jle
xchg
cmpsl
mov
or
fistps
mov
jg
ja
cmpsb
in
mov
nop
mov
loope
hlt
sub
stos
pop
popf
or
dec
cmp
pop
iret
xor
sub
xor
inc
cmp
rolb
outsb
xchg
mov
mov
aaa
jo
imul
dec
sub
pop
rorl
dec
or
mov
xchg
jl
ljmp
and
dec
mov
punpcklbw
jne
xchg
unpckhps
daa
adc
clc
and
arpl
in
testl
or
mov
dec
rcr
popf
mov
jbe
fistps
enter
push
xchg
push
or
sbb
loope
xchg
scas
cmp
mov
add
xchg
dec
dec
aam
insb
inc
sbb
push
jp
xchg
sbbl
lods
mov
sar
ret
or
data16
mov
bound
mov
andl
rcll
xlat
xor
outsb
mov
cmc
loop
int
lods
test
mov
jecxz
jnp
fs
fs
mov
div
in
push
insl
lds
add
jnp
sub
mov
jbe
inc
popf
pop
dec
pop
fstpl
lret
lea
ret
or
test
lcall
mov
cmc
mov
pmulhw
cmp
mov
add
jecxz
pop
pop
or
into
rolb
dec
mov
popf
div
cmc
lcall
call
add
icebp
jmp
or
dec
movsb
shl
lds
jo
insl
mov
adc
jp,pt
repz
ret
jns
mov
and
ret
les
jp
in
sub
cltd
add
inc
call
push
xchg
fdivrs
xor
mov
mov
jmp
and
insb
xor
inc
mov
lret
stc
movsl
sti
jno
dec
cltd
or
ss
sub
mov
mov
cmp
mov
inc
cmp
stos
out
xchg
testl
movsb
aam
popa
ret
jle
les
mov
lods
pop
mov
lretw
push
loop
cltd
fisubrs
inc
sub
sub
pop
in
mov
ljmp
dec
cmp
push
call
test
jne
aam
mov
insb
outsb
and
sahf
test
or
cmp
sub
inc
sub
and
sub
imul
xchg
sahf
pop
cmp
mov
test
mov
xor
or
ret
add
out
pop
mov
adc
push
ret
and
add
and
loope
out
imul
jle
mov
push
inc
cltd
xchg
mov
or
push
or
inc
fst
add
mov
in
and
xchg
imul
jmp
in
pushf
or
outsl
jbe
lret
mov
enter
cmp
stos
test
inc
in
loop
sbb
dec
stc
inc
xlat
and
fcoml
pop
mov
movsb
js
pop
push
adc
daa
lahf
stos
dec
leave
fidivrs
out
dec
mov
adc
into
xchg
mov
in
sub
stos
mov
push
jne
lret
xor
mov
mov
or
lahf
jns
sbb
test
lods
packssdw
dec
or
shlb
cmp
ds
inc
je
sbb
ljmp
or
xor
push
xor
or
inc
ret
mov
movsb
imul
int
add
sti
into
test
addr16
cmp
add
ret
fs
push
hlt
insb
pop
pop
xchg
mov
mov
add
repz
push
je
cld
xchg
int
mov
xchg
adc
jae
scas
cmp
dec
adcb
inc
dec
jb
cli
xor
mov
cmc
out
mov
xor
adc
sub
or
adc
cmp
sbb
xchg
inc
xor
dec
add
mov
loope
and
xor
pop
push
jp
add
cltd
dec
loop
mov
cmp
or
aaa
cs
jecxz
pop
bound
pop
je
mov
lock
int
je
jg
push
rep
jne
test
fwait
cmpsl
lcall
or
ret
aaa
add
sub
les
push
pop
test
xchg
daa
fidivrs
mov
pop
mov
cmpsl
pop
mov
push
inc
sub
jb
mov
sbb
out
divl
sub
or
pop
dec
xor
ja
stc
sub
cltd
inc
mov
xor
xchg
sti
mov
pop
mov
div
dec
inc
jg
sbb
sbb
in
in
xor
dec
incl
sub
pop
inc
std
pop
arpl
test
inc
mov
lds
push
mov
jp
mov
test
cs
ja
xchg
dec
jge
cmpsb
jl
loopne
mov
lea
lret
mov
cmpsl
jae
jmp
push
sahf
xor
insl
push
stos
sbb
mov
sahf
je
sub
mov
loope
in
ret
pop
fisttpll
sub
push
sub
stc
aas
jmp
cmp
adc
xor
lret
xchg
jno
jp
cld
or
int
out
add
scas
nop
hlt
out
imul
out
xchg
push
into
sub
pop
aaa
pop
clc
jbe
ror
and
cld
xchg
xchg
jg
inc
andl
fsub
data16
aaa
pop
jg,pt
add
shrb
push
xchg
jmp
jmp
inc
dec
sub
jle
mov
inc
push
cltd
jne
icebp
outsl
mov
iret
ss
outsl
pushf
pop
and
and
xchg
outsb
add
aam
add
sub
sar
nop
negb
sbb
fstpt
pushf
movsl
clc
pop
pop
out
pop
push
jmp
fs
dec
pop
mov
test
cmovne
js
pop
add
call
or
jno
dec
jecxz
inc
in
popf
mov
in
add
into
lcall
andb
cmp
inc
insl
iret
mov
dec
cwtl
push
into
sbb
test
dec
pushf
xchg
dec
adc
out
aad
out
and
fxch
and
sub
mov
dec
push
push
mov
adc
jne
sub
in
sbb
dec
out
cld
and
mov
jns
mov
fcoml
lods
frstor
inc
xchg
mov
xchg
xchg
dec
inc
jge
loope
lahf
out
cmc
pop
daa
jl
cld
or
je
lcall
cmp
xor
nop
lahf
dec
xchg
popf
leave
out
imul
adc
push
adcl
ljmp
sarb
mov
mov
fnstcw
stos
lcall
add
out
adc
jnp
pop
jnp
cli
mov
xchg
daa
fwait
shll
push
hlt
lods
cmpsb
jle
cmpsl
fwait
jbe
aaa
xor
fsts
add
push
jge
xchg
jnp
faddl
rorb
cli
push
and
mov
into
popa
sbb
sub
push
je
sbb
ss
imul
xor
mov
or
mov
in
les
or
push
or
je
out
adc
cmovns
pop
in
fstpl
outsb
cli
push
and
push
pop
aas
mov
call
mov
pushf
mov
push
xchg
xchg
xchg
fst
push
mov
dec
or
popa
test
lahf
jmp
aas
sub
cmp
push
stos
and
maskmovq
imul
or
ret
inc
ret
outsb
out
xchg
jmp
push
dec
fcoms
dec
mov
imul
dec
leave
xor
jbe
aas
cmpsl
pop
jno
outsb
jae
jmp
sub
mov
adc
xchg
out
scas
into
scas
and
push
subl
nop
dec
cmc
shrl
clc
pop
nop
xchg
mov
inc
push
test
not
xchg
pushf
repz
sub
push
rcll
adc
mov
sbb
sbb
jb
scas
jbe
pop
mov
dec
inc
das
sbb
sub
nop
int3
cmpsb
test
lock
xorb
nop
cld
filds
leave
and
loop
stos
out
fcom
fsubrs
cmpsb
and
xchg
inc
mov
mov
push
mov
xor
xor
insl
xor
in
cli
lret
psubb
fisubrs
pop
or
in
add
aaa
add
inc
movsl
test
test
jle
adc
push
je
jns
int
push
adc
xchg
dec
in
or
stc
cmp
leave
sbbb
xor
clc
data16
arpl
jno
cltd
xchg
push
decb
mov
outsb
xor
lsl
fistps
scas
imul
push
data16
jle
cmp
adc
scas
aas
pop
mov
pusha
mov
mov
sub
lods
add
popf
lock
inc
cli
xchg
ljmp
pop
outsb
ret
inc
inc
mov
mov
push
dec
sub
jbe
out
sbb
mov
pop
mov
mov
mov
pushf
jnp
ljmp
and
and
in
and
xchg
adc
out
mov
andl
jno
stc
sbb
xchg
xor
je
cli
das
leave
int3
mov
movsl
dec
push
adc
or
pusha
cmp
in
inc
jl
xor
cli
in
loop
clc
lock
push
test
jl
rorb
inc
and
and
lret
sar
cmp
fcmove
adc
mov
data16
int
mov
mov
sub
aaa
call
mov
xchg
test
popa
jbe
sub
pop
mov
sub
mov
sub
repz
ljmp
mov
xchg
ret
lock
or
fistpll
cmovb
adc
fs
cmp
mov
imul
cmp
sub
sub
pop
test
out
lods
fdivrp
mov
popf
loop
ror
mov
dec
push
cltd
and
lahf
lret
fsubrs
add
mov
mov
loopne
lcall
jge
xchg
cmp
dec
mov
or
pop
mov
fwait
mov
das
adc
out
jbe
cmp
imul
sarb
add
repz
pop
push
pop
pop
stos
outsb
or
adc
das
std
fimull
lret
jo
lcall
cwtl
jecxz
pop
adc
pop
lds
cmp
adc
pop
into
jbe
ret
popa
jg
call
xorb
jbe
insl
pushf
xchg
xor
and
out
lret
mov
jl
daa
shr
sbbl
cmpl
xchg
out
lds
push
lock
sbb
pop
loopne
jl
jge
xchg
inc
das
nop
jnp
cmp
fldt
dec
xchg
popf
popa
jbe
mov
dec
xchg
mov
mov
rolb
sub
mov
daa
rol
cs
fbstp
adc
icebp
jnp
and
mov
push
shrl
push
pop
jbe
inc
fwait
xchg
iret
fists
push
rclb
shll
data16
out
push
and
push
loopne
pop
popw
clc
push
das
lahf
or
mov
jne
adc
rcrb
or
sbb
lcall
mov
jecxz
pusha
in
repnz
sub
and
repz
les
and
ss
lods
mov
fldl
imul
test
add
out
repz
sarl
cmpsb
inc
push
jl
dec
pusha
xor
leave
mov
out
dec
pop
daa
addb
dec
fcmove
pop
inc
adcl
cmc
sbb
cmp
xchg
ret
pop
add
fidivrl
add
mov
and
adc
inc
inc
popf
adc
jb
jl
in
mov
sbb
xor
xchg
addr16
fisubs
xchg
fisttpll
mov
or
fbstp
pop
popf
jno
stc
xor
mov
outsb
aam
add
adc
and
mov
inc
imul
mov
out
rcrl
lahf
ljmp
ss
mov
add
sub
mov
mov
in
addr16
insl
xchg
xor
inc
push
stc
loopne
inc
xchg
test
add
out
cmp
inc
lcall
push
dec
mov
mov
cmp
cmp
ja
pusha
dec
adc
jns
into
lret
imul
ds
mov
repnz
xor
movsb
inc
push
adc
cs
std
fwait
sbb
ret
stos
mov
cwtl
popa
into
and
cwtl
test
inc
lcall
mulb
add
lds
mov
int
sub
mov
dec
inc
scas
sbb
popl
adc
dec
lea
or
lods
sahf
fsubp
sub
das
mov
pusha
lock
push
sbb
stos
jno
pushf
insl
push
pop
mov
mov
add
inc
pop
sbb
mov
test
pop
xchg
push
adc
pop
out
xorb
jnp
mov
jb
xchg
lahf
push
inc
mov
enter
pop
jp
xor
scas
mov
jl
pop
imul
cmp
shlb
xorb
jnp
outsl
fldcw
jae
mov
inc
inc
xchg
mov
mov
add
ret
or
xchg
jns
in
nop
mov
lcall
dec
lods
push
das
or
in
xor
adc
push
aad
adc
jecxz
fdivrs
fcomps
into
aaa
push
and
out
pmulhw
pop
addr16
stc
fmul
mov
adc
lods
mov
stos
nop
xor
repnz
inc
or
aad
mov
push
and
xor
cli
jmp
pop
repz
inc
mov
add
stos
pop
sbb
or
leave
cmp
add
fimuls
ja
test
fistpll
jbe
cmp
pushf
or
pop
out
jno
mov
sbb
and
or
addl
push
mov
push
clc
push
push
enter
cmpsb
aas
negl
sub
test
jae
push
mov
call
dec
push
xchg
cli
aam
pop
inc
pop
and
sti
outsb
aaa
mov
mov
nop
movsl
pop
sar
xchg
test
les
outsb
push
or
xor
xchg
mov
or
sbb
and
and
and
mov
cld
loope
mov
add
jbe
call
ret
enter
std
repz
sbbl
mov
sbb
gs
jg
mov
jecxz
fdivl
xchg
std
sub
nop
sbb
xor
dec
cli
outsl
xor
xor
jb
jmp
test
mov
aam
gs
and
and
shlb
xor
mov
movsb
out
cmc
mov
xor
and
inc
pop
xor
sar
gs
ret
xchg
cli
popa
outsb
les
jae
aad
stos
pop
mov
data16
or
fisubs
jbe
jmp
dec
xor
push
pop
pop
xchg
dec
jno
adc
aam
icebp
xchg
orb
or
mov
mov
arpl
adc
int3
fcmovbe
inc
xlat
sub
or
ret
add
push
out
adc
test
xchg
xchg
lea
les
mov
in
arpl
inc
in
mov
cmp
inc
negl
out
adcl
xchg
out
les
pop
ljmp
and
push
pop
jns
adc
cld
lahf
mov
aad
ds
push
aad
std
adc
loope
js
push
test
gs
in
ret
rorb
adc
add
enter
lret
pop
enter
jp
mov
push
insb
repnz
dec
cmpsb
aam
cmpsb
or
xor
out
sub
push
mov
stos
and
fsubrs
div
mov
popa
inc
cmp
call
lret
jle
stos
repz
imul
fstps
push
dec
mov
xor
cld
cmp
sub
lds
mov
inc
js
add
mov
pop
test
or
xor
call
jns
xchg
or
adc
dec
movsb
xchg
push
insl
js
loopne
repnz
mov
in
psubb
idivl
stc
cmp
xchg
pop
cmp
dec
sbb
test
dec
std
jl
pop
jno
out
shlb
xchg
or
add
pop
pop
adc
pop
inc
pop
test
xlat
jecxz
bswap
stos
push
and
push
adc
in
pusha
jnp
cmp
test
hlt
xchg
test
jnp
ja
sub
adc
lds
hlt
fidivl
cmpsb
arpl
push
xor
stos
push
mov
lret
add
pop
fistps
sub
xchg
popf
pop
sbb
dec
mov
sub
sub
mov
insb
jmp
jle
dec
fucomp
fwait
or
dec
lret
pand
mov
iret
push
lods
aas
xor
or
rcll
sbb
js
add
stos
push
xchg
push
jb
xchg
test
xchg
xchg
sbb
push
sbb
or
xchg
lods
sbb
sub
test
mov
andl
lret
cld
xor
out
lea
insl
pusha
and
push
aas
pop
sbb
data16
mov
es
outsb
repnz
jb
mov
repz
arpl
imul
aam
sbb
or
stc
mov
push
int
sarb
adc
mov
daa
xor
cmpb
inc
movsb
sub
lods
fmull
movsl
pushf
out
xor
notl
les
data16
sub
mov
pop
cmp
jbe
outsb
aaa
xchg
xchg
jmp
outsb
jmp
inc
sbb
pop
mov
dec
into
push
xlat
outsb
and
test
push
jnp
fisubl
mov
jne
or
and
xchg
pop
test
hlt
jno
inc
fcos
cmp
repz
or
aam
cmp
out
cmp
cs
pop
dec
jmp
pop
xor
rcll
xchg
and
sub
cmpsl
add
dec
cmp
cmp
clc
jl
leave
pop
sub
jg
mov
mov
mov
add
stc
fists
inc
cmp
add
jge
bound
js
mov
sahf
mov
icebp
icebp
roll
lods
pop
xchg
adc
lods
imul
pop
adc
pop
sub
dec
sahf
lea
push
test
test
mov
test
mov
pusha
ffree
mov
jo
xchg
out
int3
xorl
sbb
xor
sahf
aam
fsubrl
pop
scas
or
mov
or
hlt
cmp
adc
stos
ret
insl
sub
push
outsl
mov
mov
ljmp
ljmp
inc
inc
sarl
mov
xorl
stos
std
jl
xor
mov
stc
jp
in
xlat
xchg
add
sub
push
jne
aas
sub
push
fwait
xchg
mov
stc
leave
scas
add
xor
test
enter
xor
mov
xor
pusha
sub
pop
dec
dec
mov
push
lahf
fbstp
shlb
inc
sti
push
pushf
pop
xor
iret
xchg
imul
leave
repnz
gs
sub
jbe
test
mov
aaa
xchg
les
in
pop
out
mov
jb
add
inc
stc
push
js
cltd
inc
scas
and
out
push
sub
dec
or
enter
scas
and
mov
mov
jmp
sbb
and
or
leave
inc
inc
fists
cmp
dec
xchg
into
or
mov
or
push
test
push
sub
in
fs
cmp
push
jnp
ja
hlt
lcall
icebp
ljmp
dec
sbb
jbe
fucomp
mov
fstpt
jmp
push
shr
xor
cmp
push
adc
repz
mov
cmpsl
or
mov
pop
mov
ja
aas
add
loop
dec
icebp
jnp
jns
adc
ret
rorb
outsl
bound
push
pop
mov
mulb
sbb
cmp
ss
mov
sbb
movsl
pop
insl
push
mov
xchg
cwtl
test
mov
shl
adc
inc
adc
test
out
push
mov
push
into
jl
je
add
out
mov
dec
push
sbb
jns
xor
mov
out
mov
aaa
mov
mov
push
jg
inc
xchg
xor
mov
mov
cld
mov
dec
pop
out
jg
sbb
dec
hlt
xorl
mov
les
push
js
jno
cmp
fstpl
and
into
imulb
sub
insb
rcrl
adc
xor
mov
loop
rclb
push
call
push
aad
mov
push
cmpsl
movsb
mov
hlt
loope
cmc
pusha
repnz
or
push
jbe
in
cmp
imul
les
sbb
push
or
mov
aam
xor
cmp
inc
enter
scas
clc
jno
lock
xor
xor
xlat
stos
daa
dec
cld
stos
sbb
dec
pop
out
inc
clc
jne
aaa
sub
jb
pop
jae
adc
pop
sti
sbb
lods
arpl
add
mov
sub
cmpsl
xchg
cmpsb
or
repnz
sub
push
call
iret
dec
adc
mov
jmp
jne
loope
cmp
cmpsb
dec
push
mov
fldt
add
mov
clc
mov
jle
pop
imul
mov
insb
add
out
fsubl
popf
inc
mov
add
inc
or
loopne
out
jb
ss
mov
rcrb
cmc
push
es
cmp
add
dec
int
gs
jbe
xor
push
shl
mov
pop
or
addr16
mov
enter
or
or
xor
push
movsb
lock
lret
ficoml
bound
sbb
test
mov
inc
stos
out
mov
add
jl
xchg
add
cld
mov
sahf
mov
and
jae
sar
cli
mov
sbb
mov
xor
push
fsubl
arpl
jp
mov
add
fstpl
jnp
outsb
and
repnz
mov
inc
in
pop
fisubrs
jo
fwait
out
xor
loope
adc
push
pop
lock
dec
jns
stos
adc
xor
cmp
shrl
test
inc
or
das
idivl
ret
and
inc
jecxz
mov
push
into
sbbb
gs
xchg
sbb
jns
sub
repnz
xchg
ja
ror
out
mov
cli
cmpsl
mov
fcoml
in
pop
pop
in
pop
out
push
movsb
ja
inc
jecxz
nop
jge
aaa
or
jns
out
imul
rcrl
mov
iret
ret
int3
sbb
mov
xchg
jae
sarb
xlat
dec
jg
mul
cmpsb
adc
gs
jns
faddp
dec
xchg
lock
xchg
jne
stos
gs
push
scas
and
add
out
jl
dec
or
adc
jle
push
loop
fsubp
or
adc
mov
mov
pop
sbb
add
adc
xor
cmp
add
mov
mov
jns
addr16
push
push
xchg
dec
icebp
lock
sub
das
xor
test
shr
in
xlat
push
mov
hlt
mov
inc
mov
dec
test
test
mov
sbb
aam
shlb
add
and
sub
mov
sub
xor
jg
es
add
scas
push
scas
inc
outsb
scas
sub
shll
adc
hlt
out
jno
dec
sbb
push
push
push
pop
mov
adc
enter
cld
pop
pop
aad
or
mov
adc
or
or
dec
or
mov
mov
lock
fcoml
inc
pop
add
outsl
or
mov
xlat
add
ret
test
sbb
sub
stc
andb
adc
sub
ds
repz
imul
sub
jmp
pop
fstpl
pop
xchg
fistl
std
mov
mov
mov
sbb
mov
adc
sub
lcall
jg
test
or
inc
test
cmp
fcomps
mov
lahf
mov
jle
sub
xchg
add
ret
push
xor
js
fcmovb
mov
xchg
xlat
and
into
mov
xorl
lods
jne
nop
pusha
sbb
jg
sbb
int3
cmp
mov
push
cmpsl
mov
dec
pop
out
mov
xchg
adc
or
sahf
pushf
push
inc
push
adc
lods
aam
adc
mov
incl
ds
rcl
subb
jmp
test
pop
test
push
or
xchg
push
mov
mov
inc
xchg
mov
ret
pop
repnz
sbb
das
add
mov
test
ficompl
or
lea
cltd
mov
push
lods
add
lret
push
adc
insb
mov
mov
sbb
sbb
push
pusha
push
add
xchg
and
into
xchg
pop
inc
popa
adc
dec
cmp
lret
fldenv
xchg
arpl
push
int3
sub
mov
push
xchg
popa
fists
xchg
popf
fwait
imul
jle
sub
xor
mov
xorb
sub
leave
fucomip
ja
fldcw
jb
add
out
repnz
movsl
jb
lahf
push
repz
shr
out
out
mov
cmc
in
in
sbb
fdivr
out
xchg
inc
add
jle
sbb
sti
cmpsb
fists
or
daa
and
fldl
rorb
dec
jb
movsl
mov
mov
push
pushl
fs
jmp
cmp
test
mov
pusha
mov
std
adcl
cwtl
fcomp
pop
addr16
sbb
arpl
cmp
mov
fwait
xchg
enter
inc
jne
pop
leave
push
stc
cwtl
stc
xor
nop
jle
sub
pop
mov
sub
jns
daa
call
arpl
cmp
aas
sub
out
inc
test
js
scas
dec
aam
sbb
jge
divl
sbb
dec
mov
jg
cmp
fcompl
cmp
inc
not
sti
pop
or
aam
or
lods
pop
cltd
or
mov
rcrb
push
aad
aad
xlat
ds
ret
pop
xchg
inc
and
stos
jg
lcall
data16
aas
and
inc
mov
cmp
sbb
push
fistpll
sub
aas
cmc
sub
jno
push
lock
popa
mov
xchg
out
mov
enter
dec
and
nop
and
sub
pop
dec
mov
push
arpl
outsb
mov
in
cmp
cltd
cmpsb
cmp
std
fdivs
and
pop
mov
or
jo
mov
xchg
test
adc
mov
andb
daa
and
jmp
out
das
loopne
lcall
dec
movl
add
fidivrs
scas
and
or
jb
mov
mov
pop
or
and
js
fimuls
sub
dec
je
adc
or
pop
das
sahf
and
hlt
shrb
jmp
aas
sub
ja
es
xor
push
repz
mov
les
xor
xchg
jl
sbb
ljmp
dec
or
or
cld
push
jl
jle
and
aam
push
pusha
jno
subb
adc
sti
pop
fs
jae
cmpsb
adc
sti
cmp
mov
icebp
ucomiss
rorb
shlb
loopne
gs
mov
sub
jp
nop
mov
mov
or
sub
cmc
sbb
lea
jl
jne
push
test
stc
push
adc
test
xor
jb
xor
sbb
and
push
pop
ja
loop
xor
pop
mov
jns
adc
stos
xchg
jbe
pop
js
jmp
mov
adc
fidivrs
mov
fdivrl
add
repz
mov
icebp
mov
dec
xor
sahf
add
stc
fmull
in
mov
fcompl
or
dec
or
push
insl
cltd
sti
in
adc
imul
cmp
add
mov
pusha
mov
and
test
loopne
jno
lahf
scas
cwtl
xor
xor
mov
repz
mov
cmpsb
pusha
push
xchg
mov
jl
xchg
inc
rolb
mov
sbb
adc
inc
insl
and
lock
shl
inc
scas
loope
cmc
push
mov
sub
xor
inc
sbb
cltd
adc
push
ss
mov
aad
xchg
fdiv
adc
xor
jnp
in
sti
add
mov
insl
mov
pop
adc
dec
orl
ret
daa
xor
pop
mov
xor
pop
lret
iret
call
mov
int
out
cld
pop
call
cwtl
icebp
repnz
pop
xchg
inc
jne
mov
lcall
mov
enter
fbstp
sub
das
in
xlat
out
stos
repnz
inc
or
into
ja
add
dec
jp
xchg
cmp
pop
sbbb
cmp
xchg
jnp
pushf
ret
xorl
fistl
in
xchg
xchg
jmp
dec
pop
ljmp
fidivl
ret
xor
or
adc
ss
xchg
xchg
ds
push
fwait
insl
cwtl
jmp
fldlg2
pop
stos
push
push
mov
pop
inc
jb
adc
xor
ffree
cli
scas
icebp
xchg
and
mov
stc
mov
sahf
mov
inc
inc
shrb
int
repnz
mov
xchg
jmp
repz
jl
jns
pmullw
xlat
call
mov
fidivrl
pop
mov
imul
loop
jno
mov
lret
sbb
push
repnz
sbb
or
gs
adc
or
jb
dec
mov
push
inc
inc
xchg
into
adc
loopne
adc
sbb
jge
pop
xchg
cltd
dec
filds
lret
push
sbb
idivl
push
in
and
sbb
add
inc
andb
mov
mov
and
adc
sub
adc
leave
push
sbb
pop
xchg
loope
mov
sub
int
stos
adc
ret
add
or
aad
aas
ret
sarb
mull
adc
loop
out
push
jecxz
mov
lahf
push
push
insb
in
adc
sahf
in
imul
fbld
add
and
mov
pusha
dec
push
pop
int
das
cmp
lock
mov
or
icebp
add
fildll
outsl
dec
ds
xchg
or
push
orb
nop
and
mov
mov
aad
pop
push
xchg
popf
push
adc
out
stos
rcrl
imul
scas
sarl
and
push
adc
mov
add
int3
divl
adcl
xlat
sub
pop
inc
cmp
out
in
das
fdivs
rorl
and
push
pop
jg
dec
push
test
clc
gs
icebp
divl
and
pop
adc
std
pop
jns
aad
das
xor
add
cmp
push
stc
pushf
shr
and
lea
hlt
cmp
mov
cmc
adc
mov
inc
dec
lock
scas
mov
add
out
mov
aad
clc
cmp
add
and
or
daa
mov
jnp
sti
dec
jle
mov
bnd
out
xor
xchg
or
push
mov
mov
rol
orb
sub
dec
je
adc
push
mov
enter
dec
sbb
bound
fldz
add
out
out
push
movsl
sub
loop
jge
or
imull
fld
pop
sti
xchg
adc
les
inc
stos
cwtl
dec
cmp
push
inc
add
gs
fmuls
loope
xor
inc
inc
xor
stos
jno
mov
xchg
ljmp
and
mov
test
push
hlt
mov
fcomps
xchg
jb
daa
xlat
mov
dec
fbld
pop
mov
ficompl
xchg
xor
push
mov
ja
movsl
outsl
inc
imul
call
jnp
clc
insb
xor
loopne
adc
and
sub
sub
inc
xlat
repz
mov
leave
xorl
sbb
call
lock
stc
mov
shr
pushf
and
bound
mov
xor
push
in
lods
imul
pushf
lds
add
inc
push
adc
fdiv
dec
add
aaa
cmp
cmp
mov
leave
cmpsb
inc
jne
jg
xor
in
sub
lea
cwtl
inc
cmp
cmp
andb
je
fcomp
clc
out
icebp
jb
aas
jg
mov
fistl
jb
mov
mov
adc
pop
lds
xor
aas
sarl
jnp
xchg
int3
leave
mov
jne
je,pt
cs
cmc
rorb
lret
andb
nop
shl
pop
setge
jmp
adc
icebp
add
mov
mov
mov
out
mov
lret
inc
and
dec
mov
sub
cmc
dec
push
fsubr
xor
xor
sbb
call
push
jmp
ret
ret
jg
sbb
stc
fmul
pop
lret
bound
push
loope
push
push
je
mov
cmp
cmp
cmc
push
mov
dec
or
popa
scas
and
lret
shll
add
lret
fs
inc
out
popf
dec
push
and
xchg
fsubs
aam
lods
cltd
test
ja
dec
mov
xchg
add
inc
out
dec
xchg
inc
push
xchg
inc
shll
jp
movsl
mov
and
lahf
xor
adc
ret
fdivrl
mov
mov
test
sarb
mov
cmpsb
jmp
fcmovu
pop
testl
adc
lods
mov
cmpsb
cmp
or
xchg
fidivrl
add
ja
scas
pop
fwait
sahf
xchg
pop
es
push
outsl
dec
dec
ljmp
mov
in
pop
pop
inc
inc
pop
out
adc
xchg
dec
pop
jge
xchg
rorl
dec
decb
sbbb
int
xor
sbb
incb
cmc
iret
and
scas
stos
inc
mov
mov
lods
test
shl
mov
mov
inc
outsl
or
mov
lods
mov
inc
xchg
sbb
fwait
and
fistpll
lods
roll
mov
mov
ja
xchg
imul
mov
push
push
cmpsb
shll
adc
inc
or
xchg
repnz
pusha
mov
ja
dec
dec
jo
sbb
outsl
in
js
leave
sarl
outsb
dec
and
insb
arpl
scas
xchg
and
cmp
inc
pop
mov
sub
jmp
sub
rorb
adc
push
fidivs
into
sub
dec
cwtl
clc
xchg
xor
sbb
cmc
add
lea
add
out
xor
mov
out
inc
rorl
test
pop
loop
dec
in
mov
pop
stos
jo
fimuls
jle
push
jne
lret
test
movsl
add
lods
ds
test
add
xchg
dec
pop
cmp
lea
dec
cmp
mov
cmc
in
shrl
roll
mov
cmp
lcall
mov
mov
mov
rdmsr
imull
sbb
mov
jb
or
cmp
push
mov
rclb
ret
test
jne
pop
fldt
je
jae
or
shlb
ret
sub
sbb
push
dec
gs
or
dec
popa
das
ljmp
mov
pop
sbb
scas
rclb
sub
pusha
out
mov
shlb
push
sbb
adc
movntps
mov
push
int3
mov
sub
dec
data16
fcoml
into
lret
pusha
push
adcb
adc
popf
enter
push
ljmp
mov
fldt
les
rcrb
jns
fldenv
mov
xchg
rcrb
push
xor
jo
lock
xor
jp
xchg
rolb
lret
xchg
fs
and
adc
push
pusha
sub
cmp
outsl
xlat
pop
pop
sub
mov
jecxz
outsl
or
imul
lods
xor
xor
push
xchg
inc
pop
mov
aad
testl
add
in
mov
mov
adc
imul
enter
and
cwtl
push
sub
dec
jbe
pushf
orb
mov
mov
aaa
adc
bound
in
decl
mov
in
fadds
repnz
lcall
mov
test
hlt
dec
xchg
jo
cmp
je
and
sbb
push
gs
mov
mov
push
outsl
lret
mov
daa
dec
xchg
in
test
test
dec
out
and
cmp
jbe
ja
jae
or
mov
mov
ja
jnp
mov
lahf
push
jmp
mov
bnd
rcll
dec
bound
in
das
fildl
jmp
add
sub
inc
jecxz
xchg
jno
hlt
sub
test
and
mov
cmp
mov
jnp
popf
pop
hlt
sub
addr16
add
mov
divl
jno
int3
push
push
addb
mov
cmpsl
add
push
mov
loopne
jl
icebp
std
gs
pop
push
adc
cmpsb
setb
es
popf
mov
arpl
test
jl
ja
and
mov
lock
sar
xchg
xlat
and
ficoms
insl
stc
push
inc
setg
shlb
inc
dec
jae
sub
mov
push
leave
sarl
into
jle
shll
push
jno
testb
inc
or
adc
sbb
fsubrl
pusha
or
cwtl
and
sar
int3
in
cmp
add
cmp
movsb
aam
jo
mov
cmp
mov
and
or
sub
les
or
or
je
les
inc
aam
push
push
frstpm(287
sbb
mov
xchg
xor
mov
jb
or
roll
cltd
imul
push
in
mov
lock
nop
clc
mov
and
inc
push
jne
pop
cmpsb
ja
jle
lahf
ud0
sub
mov
ja
inc
xchg
mov
movhps
call
sub
push
and
jns
mov
push
push
ljmp
sbb
incl
int3
in
mov
mov
mov
adc
into
mov
lret
xchg
jmp
in
std
mov
cmp
cmp
sahf
subb
adc
out
arpl
adc
adc
shlb
cmp
fcomi
sti
neg
jbe
mov
push
jmp
aas
lds
scas
fdivl
sti
out
cmp
pop
sbb
stos
lcall
mov
adcl
test
mov
sbb
fwait
insb
xchg
shr
inc
pop
out
into
repnz
int
mov
and
lods
inc
xchg
stc
inc
sub
cmp
repnz
lods
cmpsb
mov
outsl
cmp
sub
aam
out
lods
jbe
sbb
inc
ds
gs
sub
push
jg
dec
jnp
hlt
cmp
xchg
mov
adc
mov
movsb
and
inc
jg
sbb
push
push
dec
xorb
out
cmp
clc
sub
mov
xor
sub
push
popf
fsubl
mov
sub
and
push
fs
sti
mov
ljmp
daa
xchg
inc
or
ds
or
popa
lds
xchg
and
xchg
insb
adc
adc
mov
adc
push
fidivl
addb
jecxz
popa
add
or
lds
or
aas
jge
lds
pop
sub
sbb
outsl
leave
mov
dec
loop
scas
xor
cld
fs
jo
adc
sub
xchg
or
in
adc
sarl
jns
add
pop
loope
push
lret
fisubrs
scas
inc
movl
jp
ret
xor
jge
push
inc
les
int3
fs
fidivl
shl
lret
ret
insl
repz
mov
mov
repnz
xor
insb
xor
nopl
bound
mov
mov
sub
idiv
in
adc
jns
aad
inc
test
xchg
mov
adc
int
pop
fs
mov
dec
xchg
aad
mov
add
jge
andb
popf
dec
stc
pop
mov
dec
mov
inc
or
lret
test
mov
test
and
mov
int3
shl
mov
in
jge
add
pop
lods
inc
sub
int
mov
push
xrelease
jle
pop
insb
int
or
xor
pop
hlt
or
sub
ror
ret
in
shlb
mov
inc
cmpb
pop
push
stc
jl
mov
shr
sar
sbb
sub
mov
push
imul
jno
dec
push
cs
and
fwait
mov
in
jp
jns
cld
dec
aad
jnp
fabs
xchg
add
ret
mov
sub
mov
aad
jo
mov
adc
cmc
divl
jecxz
jl
add
out
push
fs
xchg
aas
pushf
outsl
adc
popa
xchg
cmp
or
or
sub
aad
mov
mov
adc
scas
bound
xchg
xchg
xchg
ja
pusha
jl
push
pop
adc
adcl
sub
push
out
rolb
je
das
scas
rol
pop
das
and
or
leave
pop
pushf
das
mov
ficomps
push
fldenv
xorl
or
pop
jne
stc
insl
ret
iret
or
mov
cmpsl
lcall
arpl
dec
jno
inc
xchg
inc
adc
jl
lret
xor
mov
adc
xchg
xchg
dec
push
pop
mov
adc
test
inc
ret
jmp
nop
pop
push
jmp
pop
push
ds
jns
bound
insl
aaa
clc
add
lea
ss
add
xchg
xor
pushf
clc
mov
sbb
mov
dec
sub
jp
inc
mov
popa
out
aad
cmp
addr16
cltd
mov
jl
sub
sub
jo
int
add
mov
movsb
shll
and
push
xorl
adc
sbb
cmpsl
push
insl
and
jmp
jo
mov
jp
jp
mov
sbb
sbb
test
sub
push
push
inc
iret
nop
mov
fmull
fs
loop
push
ret
sti
and
insb
jecxz
cmp
lods
sbb
sub
fmuls
xor
mov
in
jno
and
sbbb
mov
adc
xchg
dec
popa
add
test
xor
or
shlb
jne
in
cmp
cwtl
arpl
jecxz
mov
mov
sbb
cmpsl
out
aam
mov
pop
adc
mov
xor
lea
popa
pop
rorb
cmp
popa
subb
push
dec
fadds
outsb
adc
dec
pop
push
mov
and
mov
mov
jae
xchg
pop
mov
xchg
pop
pop
jno
dec
lods
cmpsl
pop
cld
pop
sub
dec
cld
jmp
lods
mov
xchg
aad
or
in
loop
ret
lea
mov
imul
fldenv
jge
mov
cmp
adc
inc
repz
cmp
pop
mov
sbb
fists
inc
mov
mov
mov
out
mov
in
add
sbb
movsb
outsb
pop
and
jno
repnz
add
movsl
dec
cltd
rclb
in
repz
cmp
repz
jns
faddp
lret
push
mov
push
cmp
rclb
ds
jbe
jae
or
into
and
pop
inc
xor
sbb
add
inc
popa
mov
pusha
sar
sub
pop
inc
test
mov
cmpb
inc
and
cld
aaa
fwait
inc
aas
ds
mov
jge
add
cltd
ret
dec
lea
in
push
sbb
int
cmp
out
fcmovnb
je
pop
inc
out
test
jmp
xchg
lds
adc
xchg
pusha
jecxz
int3
jnp
test
xor
cltd
pop
add
cmpsl
xlat
mov
add
dec
icebp
leave
cli
xchg
dec
push
cld
pop
lods
imul
clc
out
inc
mov
arpl
hlt
ficompl
add
pop
in
mov
lahf
andb
cmpl
push
mov
adc
mov
test
in
sbb
call
cltd
popf
fsubrs
add
push
sub
xor
insl
repnz
int
lds
pop
fistpl
push
sti
fldt
mov
push
pop
daa
out
xlat
mov
mov
mov
call
jo
push
repz
ja
or
add
enter
xchg
cld
cmp
jmp
mov
jl
jmp
loope
sbb
mov
lods
cmc
out
add
arpl
leave
les
push
mov
mov
sbb
rcll
stos
mov
mov
stc
fsubr
push
lods
add
rcrl
cmp
aam
fildll
sahf
pop
pusha
and
push
scas
in
sub
lcall
push
addl
lahf
add
cmpsb
xor
les
sbb
xlat
push
pop
jg
rclb
data16
jns
movsl
sub
xor
int
cmp
inc
cld
lcall
ljmp
fidivrs
cltd
fbld
lock
in
stc
or
push
mull
divb
ja
push
aam
jo
xor
xor
movl
addl
cmp
movsb
push
mov
lods
jecxz
lahf
sbbb
mov
dec
cwtl
inc
and
push
jp
inc
shll
notl
addr16
and
lea
aaa
pushf
push
daa
jae
push
je
push
jae
psrlw
fidivrs
data16
cmp
sbb
lods
mov
ficompl
cmpb
mov
lea
in
mov
rol
lret
mov
into
enter
loopne
xchg
dec
pop
sarb
sub
xor
mov
aas
push
test
cwtd
call
jnp
js
pop
aaa
lods
push
sub
or
fnstcw
lods
sub
outsb
xor
arpl
movsl
icebp
dec
xor
insb
push
data16
and
cwtl
sub
mov
out
nop
xor
or
push
imul
out
cmc
ds
adc
cld
in
inc
dec
inc
pop
dec
mov
jge
xor
cmc
aam
outsl
or
popf
or
jb
insb
cmp
ljmp
cmp
pop
and
inc
mov
mov
push
jg
icebp
mov
loopne
pop
mov
jb
insb
mov
pop
xor
dec
pop
add
xchg
stc
and
fmull
cwtl
data16
adc
in
scas
sti
pop
test
or
xor
add
fsubrp
hlt
cmpsb
pop
iret
mov
mov
test
add
test
daa
mov
push
repz
ret
mov
mov
jbe
or
rcll
lods
out
les
pop
fs
daa
sub
gs
xchg
repnz
mov
and
pop
cmp
cmp
add
sub
fwait
mov
aas
jg
test
fwait
inc
jae
rcrb
fistps
pop
jl
jae
lds
mov
dec
das
aad
pusha
pusha
mov
insb
rcl
pop
ljmp
fstpt
inc
in
cmpsl
dec
fwait
sub
nop
push
jecxz
pusha
daa
je
jecxz
xchg
pop
mov
sub
add
xchg
add
pop
test
sbb
fldl
push
ljmp
std
mov
inc
jmp
stos
pop
insb
push
inc
xchg
xchg
bound
repz
fcoms
dec
push
xorl
inc
int
sub
mov
mov
sub
aam
lds
adc
sti
sbbb
call
jp
rolb
daa
dec
mov
mulb
rorl
mov
dec
xor
push
enter
push
and
jb
xorl
frstor
into
xor
pushf
ljmp
xor
call
ret
pop
ret
xor
push
arpl
mov
hlt
cmp
lods
in
sub
xchg
or
or
jmp
hlt
and
js
cld
imul
cmc
or
jge
bound
inc
ja
mov
movsb
sets
mov
in
dec
or
inc
or
int3
push
push
pop
xchg
jl
pop
mov
and
mov
push
loope
and
outsb
mov
jl
sahf
mov
jno
jae
stos
fnstcw
loopne
mov
push
sub
ret
ljmp
test
iret
daa
fwait
jle
or
xchg
out
shlb
call
xor
int3
push
jnp
iret
mov
fucomi
pop
test
insl
out
xchg
xor
jo
cmp
ds
js
jae
test
push
push
lahf
test
sub
ljmp
ja
divl
pushf
ljmp
imul
mov
push
outsb
int3
in
push
xlat
mov
mov
pop
sbb
dec
cwtl
xor
adc
cwtl
add
pushf
aas
or
jmp
cmp
mov
push
xchg
ret
sub
push
nop
popf
adc
push
enter
mov
pop
mov
dec
je
dec
sub
shlb
xor
xchg
daa
das
test
gs
xchg
sahf
icebp
test
mov
mov
insl
out
scas
xor
cmc
push
add
arpl
loope
sub
sbb
mov
or
test
sub
mov
sbb
lods
ret
mov
xorb
adc
adc
cmpsl
ljmp
mov
push
sbb
xor
pusha
jg
mov
aas
cmp
xor
mov
out
or
xchg
and
add
js
push
mov
fs
dec
inc
fs
iret
ret
int
nopl
into
std
lock
and
leave
sbb
std
push
pop
lcall
arpl
sub
ret
add
movsl
jl
mov
lret
push
out
int
mov
stos
icebp
daa
sub
inc
scas
jae
das
xchg
addr16
inc
sbb
fistpll
xor
sbb
xchg
pop
cmp
test
xor
and
negl
lret
loope
nop
daa
shlb
sbb
mov
lods
xor
inc
cmp
xor
jne
pop
pop
scas
icebp
cltd
mov
int3
aad
inc
ret
sub
jl
cli
and
pop
jb
sub
sub
out
sbb
mov
adc
dec
fcomps
xchg
dec
psubq
fisubl
iret
dec
push
data16
inc
inc
push
sub
mov
mov
cld
push
xor
es
ja
push
xor
imul
das
xchg
sub
scas
inc
cmc
xchg
xor
cmp
xchg
push
addl
stc
out
and
addb
mov
int3
test
or
adc
enter
lods
mov
push
out
add
inc
bound
push
sahf
push
in
and
inc
xor
sub
cmp
daa
mov
cmp
xchg
xor
test
aaa
inc
ret
xchg
jmp
push
out
jnp,pt
lock
jbe
and
cld
xchg
mov
mov
cmovge
and
test
call
cmp
imul
out
in
push
mov
andl
cmpsb
or
sbb
mov
push
push
loop
ds
ljmp
in
dec
adc
mov
sarl
push
ja
adc
imul
sub
in
fnstenv
xchg
push
mov
enter
dec
cmp
push
push
dec
push
push
sahf
mov
andb
test
pop
andb
add
sub
scas
fs
jmp
and
mov
je
test
push
jg
xchg
pop
add
xlat
xchg
addb
mov
jg
js
mov
in
inc
mov
es
sub
sub
pop
push
movsb
push
dec
mov
xlat
lahf
adc
mov
nop
je
bound
jg
popf
fs
les
test
andl
in
in
lods
repz
cld
inc
sti
jne
xor
mov
push
in
mov
popf
mov
cltd
sbb
shrl
mov
popf
fcoms
lods
aaa
or
out
aam
test
xchg
xor
popf
add
sub
sbb
push
push
js
and
mov
lds
int3
shrb
les
in
sub
scas
repz
jnp
cmc
cwtl
pop
cmp
imul
mov
mov
movsb
or
mov
shll
pop
or
and
sbb
or
mov
sbb
dec
sub
mov
add
mov
fwait
outsl
push
cmp
arpl
jae
mov
fisttpl
fdiv
xlat
mov
in
push
sbb
enter
mov
sub
dec
jge
imul
mov
hlt
jne
mov
cmp
popa
shll
repnz
and
out
mov
data16
jp
cmp
loop
xor
leave
in
pop
jmp
je
xor
das
sub
or
xchg
xchg
das
mov
int
stc
or
mov
psllq
mov
lahf
push
daa
add
out
dec
cmp
rorl
les
or
imul
addl
icebp
add
mov
add
repz
inc
xchg
dec
sbb
pop
push
jnp
icebp
call
dec
pop
cwtl
jge
repnz
xchg
mov
das
or
and
lret
imul
decb
in
lret
mov
xchg
lea
imul
inc
mov
jl
mov
pop
sbb
pop
xor
mov
jle
mov
in
or
ficoms
jns
push
mov
cld
loope
push
and
in
stc
iret
push
cmpsl
and
and
add
int
arpl
std
lcall
movsb
mov
jecxz
gs
jbe
pop
iret
xor
dec
pop
sbb
mov
mov
mov
loopne
mov
or
imul
les
lret
xchg
es
add
cli
scas
dec
add
pop
mov
inc
mov
sbb
in
cltd
dec
or
jb
sub
mov
imulb
ja
fwait
mov
loopne
fucom
movsb
jb
push
adc
test
fildl
lock
imul
add
mov
jns
ljmp
ljmp
cmpl
push
adc
add
mov
add
cmpsb
jge
cmp
das
mov
xchg
rclb
sti
in
mov
pusha
sub
aaa
repz
fisubs
xor
cmpsl
rorl
leave
mov
dec
jecxz
ja
cld
xor
adc
jl
and
xchg
test
movsb
mov
adc
shrb
cmpsb
add
add
sti
ss
jnp
lods
pop
cmp
fdivrl
je
into
push
jne
je
imul
lods
xchg
cmc
adc
jae
sbb
js
rorl
jnp
in
push
add
stc
sub
mov
xor
jbe
jge
and
sub
or
inc
push
data16
mov
fimull
or
cltd
xor
lcall
sbb
xor
mov
or
pop
aam
mov
cmp
jo
outsb
ss
xorl
add
mov
and
xor
inc
repz
jmp
std
mov
and
imul
stos
lcall
call
jecxz
push
aaa
loope
icebp
into
or
cld
test
push
outsl
out
mov
xchg
sub
and
adc
test
test
aad
into
cmc
sahf
out
mov
or
jns
and
jmp
cmp
or
cmpsl
jnp
pop
xor
test
pop
cli
xchg
in
add
xor
cmp
leave
and
push
and
sbb
mov
lret
jnp
push
idivb
gs
lods
xchg
test
sbb
xchg
jb
xchg
fdivrs
les
lock
sbb
pop
ljmp
loope
scas
mov
test
dec
push
jno
popa
repz
clc
add
sub
add
xchg
ds
gs
xor
sbb
xlat
jne
rcl
jo
outsl
movsb
jecxz
stos
lcall
jns
jbe
inc
mov
nop
scas
mov
xchg
pop
lods
fldenv
lret
dec
sti
xor
xchg
rcr
mov
cmpsb
lods
fstpl
arpl
mov
ds
mov
jge
mov
ret
xchg
lret
mov
loopne
and
dec
addr16
fdivrs
test
cmc
ficomps
adc
cltd
test
inc
mov
mov
inc
jbe
lcall
rcr
in
sub
ffreep
aas
mov
sti
dec
sbb
or
sbb
dec
mov
into
les
xor
inc
mov
cltd
leave
ret
cli
outsl
sbb
sbb
dec
clc
stc
rcll
repz
mov
out
sub
outsb
dec
imul
cmp
xchg
popf
or
fidivrs
xchg
jle
jne
mov
lds
inc
jno
lock
jle
andl
adc
cs
xchg
sub
imul
jecxz
popa
ss
ret
jle
sbb
test
sbb
cmp
jae
sub
arpl
lret
rolb
xchg
adc
pop
pop
xchg
stos
aad
loopne
idivb
add
push
stc
test
lea
jbe
dec
cs
mov
hlt
cmp
mov
idiv
in
mov
lahf
mov
lods
mov
jecxz
or
stos
mov
nop
jae
xchg
clc
adc
pop
pop
lcall
stc
lock
cmpsb
ret
inc
push
mov
cmp
push
fdivrs
lea
shl
push
cltd
out
mov
es
adc
xor
cli
pop
jno
mov
or
xor
in
and
mov
mov
nop
aad
sub
dec
jg
sbb
pop
pop
or
and
call
jns
loopne
jmp
jno
inc
daa
fldcw
xchg
dec
imul
push
xchg
cs
jle
lock
and
aaa
xor
push
xchg
jmp
dec
add
mov
push
mov
and
sub
add
inc
scas
inc
xchg
popf
mov
push
bound
imul
push
stc
and
movsb
pop
ficoml
mov
pop
cmp
movsb
lahf
jge
xchg
cmp
lret
mov
sbb
mov
imul
imul
xor
mov
movsl
xchg
dec
inc
lahf
push
out
pop
lods
fsubl
xchg
leave
xchg
fistl
pop
sahf
mov
mov
jge
js
movsl
dec
fsubs
addl
dec
das
scas
jne
ja
pushf
mov
push
loop
ds
data16
fstps
bound
ss
cmp
shrb
push
mov
cltd
sbb
mov
push
mov
sub
mov
dec
adc
cmp
or
popa
xchg
mov
and
adc
dec
aas
fsubp
stos
xchg
das
cmp
addr16
inc
and
xchg
mov
lahf
dec
inc
sahf
xor
lcall
je
lods
incl
ja
test
dec
and
scas
test
xchg
out
sub
xchg
mov
xlat
sub
dec
div
or
inc
outsl
pop
adc
xchg
adc
mov
adc
mov
test
inc
xchg
insl
addl
dec
pop
int3
data16
lds
lods
lods
cwtl
loope
scas
and
xchg
xor
cltd
mov
xchg
sbb
pop
dec
stc
jle
inc
inc
mov
jo
and
jg
rorl
aas
lock
subl
inc
pop
icebp
loop
dec
push
nop
decb
es
cmp
jbe
icebp
push
xor
movl
cmp
push
insl
arpl
js
loope
sahf
inc
or
rcl
mov
js
mov
jns
out
es
xchg
xlat
es
dec
cmp
lock
loope
lcall
in
jo
cmp
popf
pop
xchg
or
ja
aaa
out
mov
cmp
or
loope
clc
test
lds
lret
pop
adc
jg
jmp
outsl
add
sub
jmp
stos
sub
adc
popf
xchg
js
ficoms
sub
mov
fstl
es
jb
inc
fldcw
adc
mov
hlt
jns
mov
mov
scas
dec
or
lods
in
loop
sti
add
repnz
xor
iret
or
mov
lods
sbb
xor
mov
iret
xchg
jne
je
fdiv
adc
mov
inc
cmpsl
movsl
mov
test
adcb
dec
xlat
sub
jge
push
lods
sbb
arpl
push
lahf
pop
outsl
inc
push
mov
inc
jecxz
mov
add
push
push
outsl
xor
lea
cmp
cmpsb
daa
mov
incl
lea
addr16
int
pop
clc
inc
adc
dec
sub
test
xchg
divb
orl
mov
out
scas
js
add
xchg
jle
sahf
jns
icebp
pop
pop
out
push
lea
fimuls
out
gs
dec
inc
popf
sub
hlt
mov
ds
cmp
sub
xor
in
stos
or
dec
inc
fs
dec
push
or
xchg
mov
lods
jle
ljmp
mov
fs
dec
push
icebp
inc
fsubrl
dec
cmp
jmp
jns
inc
and
loop
daa
inc
roll
adc
mov
sbb
inc
inc
shlb
add
add
dec
adc
mov
sub
jbe
call
lds
insb
cmp
jecxz
lds
jmp
jl
pushf
cmp
adc
shlb
mov
sbb
adc
pusha
sahf
xorb
inc
add
lods
sbb
mov
fwait
std
cmp
hlt
mov
mov
adc
out
outsl
std
inc
fidivrs
xchg
and
dec
aad
les
ljmp
leave
mov
loopne
movsl
call
in
adc
push
add
gs
mov
icebp
sub
ljmp
test
xchg
icebp
outsb
rorb
lret
in
popl
or
int
cmp
hlt
sub
jle
push
mov
stos
ds
pop
mov
cmp
dec
push
into
xor
push
mov
or
cmc
sbb
xor
add
cwtl
xor
mov
shl
pop
fs
sbb
sbb
jne
xchg
add
cltd
mov
cmpsb
pop
push
mov
dec
push
jg
cmp
mov
lds
add
icebp
mov
lcall
outsb
pop
in
mov
mov
mov
or
lret
repz
pop
fidivl
jae
jecxz
std
xor
mov
pop
stc
pop
hlt
and
push
dec
pslld
push
cmpsl
pushf
push
xchg
movsl
daa
movsl
dec
test
xchg
jmp
jge
xchg
mull
mov
sarb
pop
fidivs
movq
add
movsl
iret
sub
addb
and
out
dec
sbb
dec
mov
fildll
mov
lret
add
inc
dec
out
arpl
das
arpl
fstl
pushf
pop
ss
jmp
jns
mov
inc
sbb
rclb
cltd
leave
and
out
repnz
imul
push
cmc
add
jb
test
icebp
sti
fdivrl
dec
sbb
fs
mov
stos
sbb
jp
sub
xchg
lahf
lods
jp
push
mov
xchg
inc
scas
push
sbb
pop
mov
mov
adc
jp
dec
or
push
cmp
into
inc
sahf
popf
aam
fisttpl
mov
cmp
dec
fildl
pop
imul
add
sbb
xor
sbb
mov
pop
cmp
mov
mov
movsl
std
dec
mov
mov
xorb
mov
dec
nop
push
mov
cltd
leave
adc
fisubl
jb
popa
and
push
test
cmpl
test
and
es
dec
pop
jns
in
int
hlt
jns
jnp
insb
loop
cli
dec
ret
lret
add
mov
fcom
daa
js
jmp
mov
xlat
jmp
stos
insb
notl
pop
addr16
sub
pushf
out
sahf
or
xor
inc
dec
push
sub
xchg
pop
sbb
movsb
pop
cmp
add
daa
clc
xchg
clc
push
scas
fidivrs
adc
gs
inc
sbb
add
cmp
and
inc
add
cmp
insl
call
mov
jo
jbe
jg
dec
popf
int
outsb
adc
inc
cmp
pop
cltd
inc
stos
aaa
push
popa
fs
loop
fcomps
mov
imul
sub
inc
js
lock
xchg
or
inc
fdivrs
pop
movsl
cmp
fmul
dec
andb
push
in
je
cmp
xchg
xchg
aad
xlat
or
push
push
xchg
int
or
cli
ficoml
jge
out
xor
sbb
and
xchg
adc
test
insb
lahf
into
out
pusha
in
test
loopne
jns
push
dec
fmuls
outsl
push
jecxz
jmp
movsl
adc
repnz
test
stos
mov
jle
test
cmp
mov
ja
dec
out
dec
push
sbb
push
sar
rclb
or
mov
loop
or
pop
lods
sarb
or
std
gs
mov
scas
mov
xchg
hlt
ror
sub
ds
mov
in
jp
inc
data16
in
ja
mov
data16
fdivr
push
inc
dec
cld
imul
ds
add
jg
xchg
fcoms
lea
dec
jnp
and
movsl
cld
jle
add
test
jl
fcomps
jo
pop
push
popf
dec
loope
dec
mov
and
mov
js
clc
arpl
sbb
lret
xchg
mov
add
adc
repz
andb
pop
and
enter
or
push
rcrb
sub
pop
push
mov
loopne
repz
mov
jne
into
sub
in
mov
xlat
shl
cli
mov
add
outsb
xchg
cmp
ljmp
inc
and
push
pusha
lcall
sbb
test
dec
movsb
scas
dec
cmc
mov
xor
scas
movsl
pop
inc
jmp
outsl
aam
fists
dec
je
add
cmpsl
shl
jno
leave
cmpsl
pop
jl
mov
pop
mov
mov
fiadds
sub
adcl
jmp
cmp
cli
push
insb
ljmp
pop
xor
cmp
mov
sbb
shll
lock
enter
stos
imull
sub
mov
cmp
das
sbb
sub
sub
imul
subb
sbb
mov
push
sub
sub
mov
mov
jmp
mov
mov
jo
ret
sub
xchg
and
loop
dec
pop
sub
and
leave
dec
cmp
jb
xchg
xchg
iret
inc
sub
packuswb
mov
inc
mov
outsb
adc
mov
fstps
dec
js
test
repnz
inc
jnp
je
pop
int3
and
lds
add
and
pop
loope
lds
addr16
shl
or
and
fsubl
mov
pop
pop
inc
push
dec
mov
repz
mov
mov
push
jmp
pop
fcomps
and
and
mov
or
mov
movsb
adc
xchg
lea
sbb
add
adc
ret
into
mov
sub
fnstenv
into
in
inc
mov
sub
push
cld
stos
cmpsl
cli
pop
fbstp
aas
add
out
xchg
iret
ret
sbbb
test
dec
mov
movsb
fnsave
stos
push
dec
test
inc
pop
ret
lods
popa
mov
mov
mov
dec
outsb
sub
cmpb
int3
mov
es
loopne
movsl
daa
lret
mov
loopne
rclb
jge
mov
inc
gs
imul
cmc
inc
outsl
dec
add
daa
aas
setae
movsb
arpl
out
xchg
shl
xchg
and
jbe
adc
fcoml
cmp
sub
dec
jmp
ret
stc
cmpsl
xor
adc
icebp
or
cwtl
xchg
inc
nop
fnstcw
mov
xor
lcall
out
aas
mov
es
sub
int3
pop
sbb
push
pop
out
ja
xchg
push
mov
fdivrs
js
inc
fdivr
popa
mov
xchg
lret
pushf
outsb
mov
and
mov
cmp
mov
mov
ljmp
add
loop
mov
jp
xchg
popf
stos
sub
out
aad
jge
dec
push
scas
mov
dec
pushf
cwtl
xlat
mov
jb
bound
adc
dec
push
inc
dec
lods
cmp
es
leave
inc
push
mov
pop
aam
jge
and
mov
sub
mov
or
xchg
arpl
scas
les
push
xchg
adc
pop
and
fisttpll
xchg
mov
mov
mov
dec
jmp
pop
xchg
mov
lret
pusha
iret
pusha
push
push
jb
fcompl
inc
sarb
rcll
arpl
addl
adc
arpl
jge
in
adc
or
push
sbbb
je
mov
inc
test
pushf
xor
jne
int
mov
mov
loope
iret
xchg
dec
xchg
fisttpl
std
and
mov
xlat
jae
adc
pop
lahf
pushf
mov
icebp
adc
add
mov
xor
les
jo
test
adc
pop
xchg
mov
add
xor
adc
lcall
mov
dec
mov
sarl
rcrb
pop
ret
mov
mov
jb
mov
sub
in
sub
popf
lret
adc
dec
pop
pop
and
dec
and
cmc
cmp
sahf
aaa
mov
fisttpll
ds
push
pop
adcl
mov
ficompl
inc
push
mov
ret
std
push
inc
movsl
pop
sub
mov
pusha
call
mov
lcall
cld
sub
dec
cmp
push
adc
lret
int
fs
xchg
mov
add
push
xor
enter
imul
in
or
jne
add
dec
rclb
push
pushf
jne
mov
into
fnstenv
pop
sub
sbb
sbb
clc
aam
push
cmp
repnz
pushf
dec
lods
leave
mov
fists
xor
sbb
repz
cmp
in
mov
das
jge
ljmp
sub
jmp
cmp
pop
sub
push
push
nop
jo
push
scas
fbstp
fildll
mov
inc
add
adc
xchg
xor
dec
mov
mov
push
ret
int3
clc
pushf
inc
das
cwtl
cld
pop
fcoms
mov
or
fildl
sbb
push
jbe
lods
sbb
lahf
cs
mov
fidivs
xchg
ror
stos
enter
mov
es
hlt
lahf
and
mov
push
sarl
cld
and
dec
cmp
pop
mov
sub
push
int3
outsb
loopne
adc
fwait
in
push
adc
jle
clc
jo
add
std
dec
mov
loopne
shrb
add
mov
mov
push
xchg
cmp
dec
inc
and
lcall
fwait
xor
mov
add
pop
ja
push
adc
jmp
outsl
sbb
sub
push
and
fadds
stc
xor
sbb
add
bound
sbb
mov
sti
jno
faddp
dec
or
xchg
and
jno
clc
add
mov
mov
mov
add
push
inc
aad
aad
pushf
sbb
push
fdivs
add
and
adc
loop
out
mov
flds
andb
les
lret
pop
decb
call
adc
shlb
mov
sub
pop
movsb
inc
cmc
enter
xlat
xlat
repnz
cmc
fldcw
enter
jne
imul
lock
pusha
lret
ds
in
lret
das
lahf
sbb
xchg
add
sub
pop
in
or
sti
nop
movsb
dec
pop
dec
xchg
data16
lock
nop
mov
adc
arpl
loope
das
mov
add
inc
int3
repnz
push
ss
or
inc
sbb
out
hlt
es
xchg
out
outsb
cmc
mov
xor
add
jno
push
es
pop
arpl
ds
mov
popf
jg
sub
and
bswap
out
ret
shlb
add
leave
pop
sub
sub
testb
cmpsb
or
dec
movsb
out
andl
das
pop
and
lods
stc
loopne
jge
sahf
mov
loope
movsb
jo
adc
or
pop
adc
bound
pushf
pop
popa
outsb
sbb
sbb
idivb
movsb
out
lods
lods
popa
jp
imul
andl
fidivrs
xchg
lea
lahf
in
scas
loop
popf
add
call
stos
aaa
leave
pop
in
lret
xchg
mov
inc
push
in
push
or
mov
push
cli
mov
inc
enter
xchg
les
pop
repnz
pop
jp
xchg
loopne
icebp
out
sbb
adc
mov
les
popa
pop
out
cmc
adc
mov
stc
cmpsl
lcall
mov
pop
enter
insl
pop
adc
push
pop
xchg
pop
mov
sti
lods
aas
ljmp
ljmp
mov
or
sbb
adc
inc
call
hlt
cld
call
dec
inc
push
mov
popf
icebp
cwtl
add
xchg
loope
repz
add
fstpl
mov
popa
popa
dec
adc
or
jne
cmc
ucomiss
and
test
push
mov
cmp
push
mov
lret
jge
je
inc
push
testl
sbb
clc
aam
bound
inc
xchg
pop
cmp
sar
in
pop
orl
into
xchg
test
push
add
cmp
fldt
pop
arpl
sti
mov
cltd
dec
cmp
mov
xchg
mov
fisubrs
inc
lret
sbb
scas
sub
pop
pop
shl
sbbb
dec
mov
fwait
icebp
add
in
call
push
or
je
jbe
push
xlat
or
xchg
push
push
inc
jo
test
aaa
rcl
mov
adc
loope
xchg
roll
data16
add
in
jne
test
bound
leave
push
addl
adc
stc
add
aaa
insb
popa
popf
mov
inc
dec
add
or
stos
dec
push
mov
filds
nop
sahf
aad
xchg
imul
or
xor
pop
add
cmp
mov
gs
dec
push
int
test
outsb
scas
negl
inc
sub
pop
stos
ret
popa
sarb
imul
sub
sbb
jmp
inc
mov
push
lahf
adc
js
push
ret
push
arpl
aas
cmp
sbb
or
call
sbb
and
mov
add
sub
jmp
push
xchg
dec
int3
scas
push
xor
loope
mov
es
mov
mov
xor
or
or
dec
fwait
in
dec
cltd
std
pusha
in
push
and
pop
pop
push
insl
lds
jmp
inc
xor
dec
xchg
mov
jb
mov
xchg
cmp
adc
hlt
aad
enter
subl
into
es
sahf
sbb
mov
lret
inc
lahf
js
cmc
mov
movsl
dec
mov
xchg
rdtsc
xor
push
push
js
cld
and
or
aad
jp
cltd
push
or
repnz
pop
jp
icebp
jecxz
shll
fs
shlb
pop
sbb
addr16
pushf
loop
in
rclb
sub
hlt
imul
jle
mov
and
dec
pop
cwtl
mov
cmc
push
jnp
push
cmp
jmp
mov
subb
popl
clc
sub
pop
jmp
push
or
push
adc
lsl
cmp
cmp
mov
xchg
sbb
mov
mov
or
mov
into
xchg
jecxz
sub
jbe
jmp
rcl
jne
outsb
fs
data16
sbb
ja
xor
cmp
addl
imul
lret
cmp
cmpsl
sbb
dec
xchg
jmp
lcall
pusha
add
cld
pop
test
mulb
clc
aaa
daa
inc
xchg
adc
in
mov
mov
es
sub
aas
sub
cmp
lret
addr16
jle
dec
sbbb
sbb
mov
es
aam
iret
xor
loopne
push
stc
mov
lcall
push
and
cmpsb
mov
jb
xchg
les
inc
xor
sub
xchg
xchg
jge
loop
push
sbb
cmp
push
or
lret
in
pop
jb
lahf
cmp
or
and
popf
jge
push
push
push
pop
aam
inc
push
xchg
pop
iret
jp
cli
mov
inc
insb
insb
inc
cmp
sbb
sub
sbb
add
cmp
ljmp
xchg
mov
fdivrl
arpl
orb
shll
jmp
rcr
xor
dec
addr16
data16
xchg
les
pop
jecxz
jb
sti
out
aaa
sbb
stos
inc
mov
test
or
and
mov
pop
jecxz
je
je
clc
shll
pop
dec
movsb
pop
adcl
add
dec
neg
or
cmpsl
sub
outsb
inc
in
iret
mov
or
mov
clc
cmpsl
outsl
loop
pop
lea
xor
or
and
push
lcall
jg
push
mov
leave
inc
aaa
sub
mov
push
mov
inc
imul
add
sub
movsl
jbe
inc
lret
hlt
jae
lds
adc
or
imul
popf
push
ja
shlb
ret
mov
mov
repz
pop
push
push
mov
sbb
fisttpl
pusha
sub
xchg
aas
into
mov
xchg
dec
push
sbb
insl
nop
clc
add
mov
inc
mov
enter
push
mov
pop
lea
pop
lcall
mov
inc
addb
mov
jnp
jle
testl
pop
jp
mov
cmpsb
dec
insl
in
mov
and
ret
mov
imul
les
ds
fisubrs
pop
add
mov
jnp
clc
scas
sub
adc
inc
mov
or
cltd
loopne
sahf
adc
out
daa
or
out
lods
cmc
sub
xchg
sub
mov
dec
push
bound
and
xchg
sub
sbb
cmp
lret
inc
in
or
inc
pusha
es
mov
dec
push
je
mov
push
lods
jge
cld
lods
dec
pusha
dec
mov
js
push
mov
mov
cmp
popf
jmp
dec
cld
or
mov
lea
xchg
dec
mov
dec
xlat
daa
lds
gs
loopne
dec
mov
imul
sbb
jge
test
push
dec
movsl
sbb
xor
out
sub
sti
push
inc
fidivrs
ds
pop
insl
pop
pop
aaa
pusha
dec
mov
and
mov
mov
inc
test
mov
in
movsb
lock
popf
mov
jp
mov
dec
jo
cld
and
bnd
lcall
cli
das
jp
ss
scas
ljmp
and
roll
mov
mov
mov
dec
push
cmc
sub
inc
inc
scas
xchg
xor
push
int
sub
push
and
cmpsb
push
aam
repz
xor
mov
out
outsb
xchg
mov
inc
pop
scas
mov
or
mov
int
xchg
push
movsl
sarl
xor
mov
sahf
test
adc
adc
push
pop
stos
push
cmp
in
cmp
push
push
mov
mov
test
aaa
cmpb
das
dec
cmp
pop
cmc
xor
andl
movsb
lods
cli
movsl
lods
sub
fsubrs
jmp
outsl
pushf
adc
int3
notb
in
test
mov
mov
xchg
add
or
mov
les
data16
sub
mov
and
cwtl
prefetch
sub
jmp
arpl
call
xor
fldl
add
in
clc
repz
mov
mov
lods
dec
sub
push
daa
test
xor
mov
fwait
push
xor
cltd
add
stc
push
pop
inc
sub
sbb
mov
es
pop
mov
dec
push
inc
mov
push
sub
pop
bound
int
sbb
adc
clc
xchg
leave
imul
in
pop
dec
out
fsub
jbe
adc
ljmp
daa
push
sbb
mov
fdivl
roll
ja
int
inc
push
xchg
mov
pop
mov
out
push
pop
out
cmpsb
std
xchg
jle
and
pusha
push
pop
pusha
repz
xchg
cltd
lods
xchg
ds
push
inc
testl
sub
jg
mov
mov
sbb
mov
cmc
mov
popa
int3
pop
jecxz
push
data16
vpmacsww
pop
jo
lods
sub
repz
jge
icebp
push
add
decl
pop
cmp
cli
cmpb
out
outsl
mov
mov
icebp
xchg
fdivrl
out
jae
aaa
fs
fbstp
mov
or
arpl
push
lock
inc
or
repz
mov
mov
push
mov
sub
mov
xorl
xchg
dec
mov
inc
aad
clc
add
inc
loop
add
add
lret
std
add
leave
push
fwait
out
ss
push
push
xor
xor
sti
xchg
repnz
and
addb
repnz
fwait
incl
andb
mov
mov
inc
xor
mov
or
lahf
jbe
inc
mov
dec
xchg
mov
fildl
xor
and
mov
outsb
cltd
sub
mov
out
into
inc
pop
dec
mov
sub
setl
adc
xor
out
or
int3
jno
aas
out
mov
xchg
popa
and
sahf
mov
sub
stos
mov
out
jecxz
pushf
bound
inc
mov
enter
push
xchg
jns
add
push
sub
jge
xchg
add
mov
xor
cmpsl
pop
pop
mov
test
aas
arpl
jbe
arpl
lret
shlb
mov
lcall
pop
inc
insb
sahf
iret
ffreep
enter
and
add
repz
xor
scas
jbe
gs
divb
ja
aas
push
in
ret
xchg
hlt
mov
xchg
flds
lock
and
jno
fdivrp
aas
lock
dec
add
call
jecxz
xor
dec
mov
and
icebp
adc
aaa
dec
dec
es
xor
clc
xor
movsl
dec
aam
dec
clc
push
test
sbb
insl
add
or
call
pushf
cmp
xchg
aad
xlat
mov
ret
idiv
int3
sahf
fistpl
inc
add
sbbb
xchg
sub
outsl
and
inc
xchg
movsl
xchg
sarl
outsb
sarl
xor
mov
or
dec
fwait
ljmp
fidivrs
mov
sbb
pusha
xor
in
fs
cmc
cmp
jb
pop
inc
dec
sub
test
adcl
add
mov
iret
mov
adc
lret
jmp
pop
test
pop
cld
in
fsubrl
rcrb
lahf
cwtl
cmp
in
addr16
or
enter
push
dec
shll
addl
pop
lret
pusha
inc
push
aad
stc
jmp
fstpt
test
loop
insb
dec
gs
pop
mov
cmc
jo
or
shlb
mov
and
adc
js
outsl
cmpsl
xor
das
inc
jns
test
jb
jmp
push
mov
adc
sbb
dec
cmc
or
jecxz
push
sbb
jb,pt
ljmp
out
cmpsl
outsb
imul
push
scas
pop
adc
xchg
sub
add
test
pop
cmp
inc
jnp
or
xor
dec
sub
aam
cmp
pop
xchg
popf
dec
push
fmul
fwait
ret
add
in
jno
sarl
and
insb
jno
mov
sub
lcall
out
dec
push
or
test
cmp
adc
push
test
jmp
mov
pop
mov
out
cltd
jno
ljmp
pop
mov
nop
pop
test
push
sahf
jp
push
sarl
jnp
or
mov
adc
ljmp
stos
push
aas
pop
sbb
jge
test
rcr
loopne
test
adc
mov
xchg
rcrl
xchg
arpl
pushf
out
push
pop
inc
adc
adc
je
js
arpl
lock
in
daa
and
push
mov
gs
pushf
or
sbb
mov
ljmp
jp
add
nop
pop
lcall
loop
je
add
std
sub
cmpsb
test
dec
daa
insl
sahf
adc
nop
pop
cs
outsl
js
lret
ret
xor
mov
loopne
jle
loopne
cmp
in
enter
lahf
inc
pop
fs
cmpsb
sbb
cmp
or
sbb
xlat
int3
cmp
inc
out
dec
shl
movsl
pop
mov
mov
mov
mov
je
add
and
jge
or
push
in
sbb
jnp
loop
aam
mov
pushf
cld
sar
cwtl
mov
sti
mov
fwait
bswap
out
mov
jns
cwtl
or
cmpsl
add
or
insb
shlb
inc
addr16
sbb
inc
adcb
jle
lods
xor
pop
mov
iret
sub
inc
push
pop
adc
add
rorb
testb
xor
pop
adc
pusha
subl
mov
ret
rolb
inc
movsl
add
or
roll
out
inc
scas
iret
in
std
sub
cmp
imul
outsb
aam
mov
out
jl,pt
mov
pop
mov
push
cmpb
xchg
inc
fadd
repz
xchg
incl
xor
fwait
das
icebp
sbb
lods
fldenv
je
iret
je
mov
sub
bound
outsb
lds
inc
pop
shlb
sub
inc
adc
movsb
pop
sub
adc
inc
das
daa
out
mov
pop
stos
das
mov
or
push
jo
sbb
mov
sbb
xlat
fisubrl
push
jg
xchg
les
xor
sahf
pop
lea
cli
enter
and
dec
lock
jne
cmc
clc
or
sarb
or
nop
ss
jo
adc
loope
inc
add
xchg
shrb
sti
adc
inc
mov
sbb
fcoms
outsl
inc
xchg
pop
dec
xor
arpl
mov
pop
adc
xlat
jmp
xlat
fiadds
mov
and
mov
add
and
and
ficoml
test
int3
clc
jo
scas
fcoml
les
mov
jno
mov
pop
cli
mov
in
cmp
outsb
jne
js
mov
aas
test
or
push
add
cltd
pop
repnz
xchg
movntps
out
rcrl
jne
inc
jb
popf
mov
pop
bound
dec
xchg
sub
mov
push
inc
in
mov
jge
mov
iret
fldenv
cld
loopne
clc
test
bound
and
pushf
sub
adc
out
sub
add
loopne
xchg
xchg
in
loop
push
sbb
sbb
mov
lea
push
mov
mov
cltd
iret
imul
xchg
popf
mov
rorb
cmpsl
xorb
cltd
leave
or
add
add
sarb
inc
sar
mov
mov
imul
jne
mov
es
adc
mov
in
repz
pushf
aad
jnp
mov
bound
adc
push
outsl
pop
push
add
lret
jne
aaa
scas
jge
jnp
xor
dec
xor
inc
lods
fcomps
incb
xor
mov
repz
imull
cmc
or
lods
push
data16
pop
inc
adc
popf
add
xchg
mov
rolb
fildll
aad
sbb
shrl
or
mov
outsb
into
dec
pop
sub
adc
mov
in
or
stos
faddl
push
cltd
mov
hlt
mov
dec
icebp
or
loopne
dec
xchg
into
xor
jbe
fldenv
out
lret
or
or
inc
aad
push
adc
loopne
xor
xor
xor
in
pushf
inc
fdivrl
jo
loopne
jno
push
pusha
mov
jg
fs
push
nop
arpl
je
in
push
mov
divb
popa
pop
push
dec
cli
dec
xor
ja
hlt
mov
aam
xchg
dec
das
lock
lahf
push
cltd
dec
cs
out
jb
pop
ret
jbe
adc
cmp
data16
ret
sub
stos
mov
enter
xchg
push
test
mov
jnp
mov
leave
dec
fldcw
sahf
xchg
test
mov
fs
and
test
add
dec
lahf
sbb
xlat
push
test
stos
jo
lret
or
lods
cmp
lahf
mov
add
ficompl
fcmovbe
int
and
into
sbb
stos
adc
or
jmp
rclb
rolb
mov
jg
mov
aas
loopne
jmp
test
inc
imul
jns
pop
cltd
sbb
xchg
ret
push
aam
add
xchg
add
or
rolb
push
mov
push
xor
mov
push
adc
mov
pop
sub
lock
in
or
loope
xor
xor
cmpsl
sbb
add
stc
mov
mov
cmp
out
sbb
daa
ret
add
cltd
nop
mov
xchg
dec
nop
cli
rorb
mov
jle
mov
jbe
pop
pop
outsl
xor
clc
push
push
cmpsl
mov
add
insb
inc
fsubr
sbb
rorl
or
or
xor
int
add
mov
addr16
jne
and
mov
add
and
dec
lods
jg
pop
add
ja
call
out
icebp
sahf
push
sbb
fs
arpl
inc
addr16
dec
std
lock
pop
fwait
mov
iret
inc
test
es
mov
push
sbb
mov
jecxz
dec
jno
out
mov
jnp
js
dec
sub
in
push
fldenv
popf
push
xor
adc
jb
ret
insb
pop
cmp
pop
ja
dec
add
pop
mov
jg
inc
cwtl
adc
and
sti
pop
and
je
lds
add
jns
mov
rorb
fistps
out
mov
rcrl
ss
das
jb
and
add
pop
popf
jle
mov
add
loop
sbb
mov
or
mov
mov
xchg
jns
lret
xlat
ret
fnsave
mov
repz
pop
mov
ret
stos
ja
add
ret
cmp
aaa
mov
lcall
xchg
dec
inc
jno
in
sbb
cmpsl
mov
rorb
jp
repz
data16
cmp
cltd
mov
fldcw
and
cmp
xchg
ds
insb
in
dec
insb
test
xchg
sbb
loope
lcall
clc
xor
push
test
mov
mov
push
jmp
cli
xchg
push
nop
push
clc
cmp
stos
mov
xor
mov
ja
mov
fdivs
out
mov
insb
or
sub
lods
fcomi
jmp
in
jnp
add
sbbb
sahf
jnp
pop
sub
mov
xor
fiaddl
lock
push
std
and
mov
sub
jl
pop
mov
gs
insb
pop
add
adc
xor
mov
loopne
icebp
xor
add
xlat
or
push
imul
stos
xorl
in
push
mov
push
fldenv
mov
js
xchg
int
ret
movsl
lcall
mov
cmpsb
xor
sbb
mov
sub
adc
jno
mov
jmp
cltd
loope
adc
xchg
repnz
cmpsb
bound
push
xor
dec
mov
loope
push
mov
pusha
scas
pop
cmp
jns
fldt
imul
push
rclb
or
jge
es
mov
sar
insb
and
adc
adc
sbbb
lret
cmpl
arpl
flds
and
mov
mov
fiaddl
adc
sbb
pop
inc
arpl
jmp
mulb
xchg
lret
adcl
jp
rcl
mov
xor
xchg
sub
negl
adc
jp
adc
xchg
movsb
mov
push
mov
xorl
clc
mov
jl
push
dec
inc
fistps
sahf
ljmp
or
mov
in
ficoms
lods
repnz
cmp
sbb
repnz
pop
mov
insl
repz
rol
int
ficomps
std
sub
sbb
dec
repz
dec
addr16
hlt
sub
sub
rcrb
fisttps
lds
repnz
push
and
int3
cmp
icebp
stc
cmp
jl
negl
lret
add
into
clc
jbe
pushf
mov
xor
movsb
cs
inc
gs
mov
jecxz
adc
bound
push
xor
jl
ljmp
sub
jns
fidivl
gs
mov
out
jns
mov
jge
mov
addr16
xchg
cmp
imul
cs
fldenv
imul
out
cmp
insb
rcrb
adc
xacquire
sub
dec
xor
mov
jmp
cmp
fcomp
adc
push
pop
js
popf
adc
jle
xor
mov
imul
cltd
daa
mov
and
lret
fisubrs
xor
fidivrl
adc
inc
out
sub
insl
loop
mov
adc
sub
pop
test
enter
xchg
test
add
out
mov
cld
pop
daa
enter
repz
aaa
push
xlat
add
gs
loope
imul
sub
cltd
push
jmp
lock
repz
or
gs
ret
inc
xor
movsl
sub
jae
mov
out
neg
xor
andb
push
or
jmp
daa
sbb
mov
jnp
dec
daa
mov
sub
scas
je
and
mov
test
subb
adc
scas
cmpsb
mov
test
sub
jge
lahf
cmp
mov
cmpsb
jne
pusha
pushf
jl
mov
pop
pop
push
mov
call
mov
sbb
int3
rorb
jecxz
sub
xorl
inc
sbb
xlat
mov
push
and
or
mov
or
pop
lea
or
add
inc
repz
jecxz
outsb
ds
mov
push
or
pop
and
sub
pop
jg
dec
lahf
ja
in
aas
hlt
cmp
sub
jae
cmpsl
notl
pop
fdivs
sub
mov
or
dec
and
cmp
stc
inc
ds
sbb
push
int3
pop
cmp
mov
mov
fwait
out
pop
lcall
dec
imul
mov
in
lock
cmc
daa
pop
in
adc
add
push
ret
adc
sti
and
xchg
testb
fstpl
cli
mov
pop
outsl
mov
adc
stc
and
popf
add
stc
mov
sbb
xlat
popa
xor
add
mov
out
sahf
addr16
cmp
xchg
sar
repz
mov
mov
popf
gs
loope
subl
dec
stos
insb
movsl
push
sub
sbb
or
and
lds
jno
xor
call
cmp
jb
movsl
xorb
cld
rcr
loopne
lods
outsl
test
mov
ljmp
cwtl
xchg
loop
mov
icebp
fisttps
mov
xchg
sbb
fsub
adc
add
mov
or
xor
sbb
xor
xchg
imul
inc
cmp
faddp
or
push
ret
sub
movsb
dec
repz
hlt
cmp
gs
adc
xor
add
cmp
dec
sub
or
push
popf
lods
scas
out
out
out
inc
pop
cltd
adc
push
out
and
and
movsb
sub
sub
imul
push
movsb
clc
imul
call
out
orl
xlat
xchg
out
loopne
inc
and
loopne
xlat
sbb
outsb
push
push
jae
dec
iret
sub
xor
into
imul
stos
or
clc
or
sbb
add
xchg
insb
sti
icebp
cmpsl
sub
out
fldenv
data16
sbb
jae
mov
push
mov
jae
sbb
gs
sarl
enter
test
adc
sbb
push
add
aam
mov
push
scas
repnz
insl
or
jo
and
in
pop
mov
test
and
mov
jo
push
cwtl
int
mov
lods
jae
addr16
jo
hlt
sub
inc
pop
xchg
jno
push
scas
bound
jb
xchg
ljmp
sub
inc
push
xchg
and
mov
pop
cmc
inc
enter
dec
out
fstpl
cmp
xor
loope
fadds
in
jg
mov
jge
push
stos
ss
icebp
loop
mov
fs
inc
in
mov
lods
aaa
or
and
sbb
inc
mov
mov
sbb
gs
leave
test
test
push
aas
push
lock
inc
inc
andl
imul
cmp
das
push
pop
dec
jle
cwtl
fldcw
and
pop
insb
xchg
or
adc
add
add
cmp
loopne
rcll
sub
xor
lret
cmp
inc
xor
mov
dec
mov
ss
sub
adc
pop
cld
fldcw
adc
shll
push
adc
pop
test
cltd
enter
jns
roll
icebp
mov
and
inc
push
fwait
mov
loop
test
repnz
cmp
in
jp
sahf
test
pop
xorb
loop
push
push
into
ret
es
dec
mov
push
enter
xchg
lods
sub
and
test
xchg
shrb
xchg
push
fcmovne
fnstenv
fstpl
adc
sbb
aam
pop
sub
fmull
insl
cwtl
lret
push
mov
test
dec
stc
int
dec
cld
loope
fisttpll
mov
inc
outsb
xchg
and
xor
dec
sar
loop
cltd
adc
hlt
imul
loope
mov
xor
jo
push
jo
mov
jno
decb
lods
mov
mov
mov
unpcklps
sahf
sub
xchg
shrl
dec
mov
outsl
pop
pop
enter
mov
leave
sub
loop
out
cmp
inc
cltd
ss
adc
jmp
dec
lods
inc
xchg
inc
mov
in
popa
loope
or
and
cmp
nop
jae
leave
loop
cmp
inc
jmp
mulb
jecxz
push
pop
sub
xorb
out
das
jnp
pop
jp
or
test
loopne
arpl
loope
pop
out
pushf
pop
push
pop
pushf
bound
ffree
stos
inc
ss
mov
or
int
ljmp
fsts
xor
aaa
cmc
jae
push
mov
xor
fimull
call
ja
in
hlt
enter
pop
sahf
das
and
jp
dec
xlat
and
lock
and
bound
into
popf
in
jmp
mov
xchg
nop
insl
loop
xchg
pop
sar
out
dec
ret
outsl
mov
pop
push
loopne
xor
xchg
jp
xor
lahf
aam
lcall
mov
sbb
adc
call
jecxz
aas
pop
fmull
lahf
inc
aad
pop
mov
sar
cmpl
cmp
sub
orl
cmp
arpl
mov
stos
or
into
jb
das
loope
adc
dec
cmp
xchg
rcrb
push
sub
iret
pop
mov
add
and
push
xchg
in
sahf
in
movsl
xor
out
imul
dec
mov
sbb
pushf
push
ret
jae
add
push
insb
cmp
adc
test
aam
loop
bound
xor
mov
push
popa
jno
or
xchg
pop
pop
repz
jns
cmp
sub
xchg
movsb
mov
inc
mov
jbe
fnsave
into
sbbl
and
gs
ja
and
stc
stos
jo
call
rolb
sbb
ret
jo
add
pop
fidivrs
dec
mov
fsubrl
loope
stos
xchg
push
mov
inc
cli
lock
cmp
jns
in
sub
cmp
push
scas
aas
sti
jecxz
xor
pop
inc
inc
push
cltd
mov
fstpt
sbb
mov
xor
and
fldl
rcr
fldcw
lsl
adc
inc
adc
popf
cmp
or
adc
rorl
mov
cli
cmp
pop
or
jle
das
icebp
lahf
xchg
push
lods
mov
hlt
das
lds
or
insb
xchg
mov
repnz
push
minps
repnz
jnp
repnz
jno
sub
aam
mov
inc
pop
pop
bound
dec
jge
xor
cmpb
insb
mov
xorb
fwait
adc
xor
inc
dec
inc
adc
or
ja
jge
pop
or
push
or
scas
mov
pop
outsb
lock
and
out
mov
divb
jp
lods
adc
sbb
push
es
insb
in
mov
leave
dec
mov
adc
cmp
test
stc
lods
push
adc
cmp
xlat
sbb
loop
or
js
mov
fs
popf
push
stos
sbb
fisttpl
sbbl
or
adc
push
outsl
mov
fisttpll
test
push
stos
jno
int3
in
bound
mov
movsl
negb
or
pop
dec
xchg
enter
cmpsb
lods
movsl
in
cwtl
daa
sub
nopl
adc
mov
and
mov
aas
push
imul
roll
cmp
in
push
or
lret
imul
inc
and
cs
xor
fwait
std
popa
adc
pop
and
cli
xor
test
sub
js
jmp
mov
mov
mov
push
xor
adc
mov
add
out
dec
aam
and
and
pop
and
cmp
mov
fwait
rcr
inc
cmpsb
adc
mov
mov
pop
in
adc
jecxz
pop
mov
loopne
and
mov
push
dec
push
test
push
pop
aad
xchg
cmpsb
adc
adc
lcall
insl
add
push
xchg
shlb
lds
lea
dec
movsl
loope
push
insb
sub
std
addr16
out
inc
ja
cmp
dec
sbb
dec
in
cmpsb
jp
xor
mov
je
insb
or
bound
test
xlat
mov
adc
jno
ds
or
mov
sub
jle
push
aaa
xor
jbe
adcb
cli
and
out
rorl
pop
cmp
movsl
xor
push
into
inc
aaa
dec
pop
lahf
stc
test
lea
stos
std
je
decl
aad
andb
pop
push
cbtw
outsl
cli
loope
push
sub
stc
or
shlb
xchg
xchg
or
jle
in
mov
lods
js
mov
nop
mov
mov
and
inc
scas
or
mov
roll
pushf
int
push
xorb
shl
mov
addr16
hlt
fcompl
pop
fwait
mov
mov
sti
pop
nop
lret
mov
sti
xchg
gs
inc
outsb
cmpsb
in
push
dec
dec
jecxz
mov
movsb
fdivrl
xchg
mov
sbb
xor
pushf
lret
mov
dec
andb
jb
inc
adc
lock
fldcw
push
popa
jle
sbb
enter
mov
sbb
cmp
or
pop
invd
cmp
inc
stos
arpl
data16
clc
xchg
es
sbb
cli
sbb
and
or
into
subb
movsb
repz
pop
sub
adc
dec
push
mov
push
aas
xor
inc
pop
aam
out
in
pop
cmp
andl
push
or
stc
push
lods
dec
jmp
ss
imul
ss
in
nop
pop
idiv
insl
call
fstpt
cmp
lock
mov
pop
mov
pop
sbb
lods
dec
dec
push
aam
inc
loope
rorl
mov
mov
xchg
xchg
push
push
outsl
shll
cmc
mov
sbb
and
jnp
lret
imul
jmp
inc
or
pop
sub
out
adc
jae
inc
aad
mov
call
cmp
divl
sbb
jg
ljmp
push
mov
dec
mov
cmp
scas
mov
aas
pop
sbb
cld
lahf
std
sbb
and
ret
add
in
mov
and
outsl
add
loopne
add
lods
xor
pop
fnstenv
add
push
xchg
outsb
inc
jae
fstl
insl
rolb
jae
sub
sahf
outsb
adc
pop
jnp
subb
popf
mov
dec
aam
adc
jmp
sbb
push
inc
inc
mov
popf
std
lods
mov
pop
dec
push
loop
je
add
mov
cmp
inc
subl
xchg
sbb
lret
icebp
mov
test
jmp
iret
movsl
ficoms
adc
insl
jnp
adcl
pop
or
add
rcrb
notl
push
leave
imul
shll
sbb
icebp
push
insb
lds
xlat
mov
repnz
mov
push
add
enter
sub
jg
jl
cs
ret
adc
sbb
mov
loop
mov
adcl
dec
mov
fisttpll
in
and
call
int3
mov
sub
imul
xchg
daa
mov
add
pusha
dec
xor
in
gs
adc
outsb
ja
xchg
mov
mov
jg
insb
pop
ret
insb
mov
sbb
lahf
rorb
mov
test
unpcklps
mov
sbb
adc
lods
and
lcall
mov
addr16
insl
jmp
mov
push
daa
adc
xchg
in
ret
jo
inc
bound
adc
in
cmc
xchg
sub
aad
aam
sub
cmp
in
sbb
mov
or
into
aaa
sahf
adc
cmp
hlt
mov
jne
stos
or
or
mov
and
and
lea
int
test
and
popl
push
insl
sahf
lcall
adc
test
xchg
sbb
pop
aad
xchg
jae
pushf
test
nop
push
push
sbb
das
sub
decb
inc
enter
mov
mov
std
out
push
repz
cmp
cmpl
xor
subps
sbb
outsl
mov
subb
sbb
xchg
adc
loope
adc
sub
lret
shlb
push
addr16
xchg
push
xor
pusha
ret
shlb
std
addr16
js
loopne
fwait
lcall
shl
inc
jle
mov
sub
ror
push
add
inc
scas
push
push
iret
inc
call
sti
insb
std
mov
push
sbb
mov
jae
into
jmp
mov
in
nop
in
jecxz
inc
dec
sar
ret
xchg
movsl
add
jp
repnz
cmp
sub
aad
mov
xchg
aam
cmp
and
pop
in
add
stc
fcmovu
subl
mov
dec
add
sub
push
pop
sub
insl
test
int
es
pop
lock
ss
jecxz
dec
sbb
inc
cmp
cmp
ljmp
push
std
xchg
sub
cli
aaa
add
leave
das
shll
dec
sbb
or
test
or
cmp
pop
in
popa
dec
mov
push
push
test
fistpll
rolb
in
dec
rcll
and
add
or
icebp
sbb
or
repnz
lcall
call
shlb
fwait
dec
mov
add
int
popa
or
sar
jb
leave
clc
jns
popf
or
hlt
stos
out
dec
mov
out
adc
scas
xlat
sti
jae
icebp
xor
jno
xchg
mov
mov
mov
sbb
lahf
jl
aaa
sub
push
nop
cmp
or
cwtl
clc
mov
mov
pop
outsl
fimuls
cmp
mov
ja
xor
dec
mov
xchg
je
xchg
lods
frstor
loop
not
aaa
outsl
sbb
or
sti
dec
jae
and
sub
ret
out
fists
dec
icebp
jmp
mov
xor
mov
xorl
iret
in
filds
dec
aad
mov
xor
out
jg
shlb
inc
cmp
push
mov
mov
mov
ficoml
xchg
xchg
sarl
shlb
lock
mov
into
sbb
mov
jae
cmp
pop
popf
inc
and
cmpsl
xlat
fwait
pop
fldl
inc
cmp
pushf
jecxz
push
fidivrs
push
jns
aam
push
lcall
sub
mov
cld
mov
pop
and
shrl
cmc
arpl
lods
repnz
fildll
mov
and
mov
shll
xchg
enter
lea
inc
fimull
adc
sbb
dec
jnp
sbb
jmp
jge
lods
mov
dec
xchg
pop
inc
int3
xchg
and
bound
scas
lea
push
xchg
add
and
ljmp
js
and
incl
push
xchg
pop
mov
ret
icebp
add
lcall
lcall
imul
sub
pop
sub
mov
sub
jmp
gs
xor
roll
loop
mov
jne
int3
pop
dec
xchg
adc
adc
mov
out
mov
pushf
cmp
ss
outsb
add
out
push
pop
inc
sbb
jne
out
jo
inc
cmp
mov
fsubs
cwtl
in
adc
mov
dec
data16
push
cwtl
rcrl
jecxz
fwait
test
lret
jle
mov
int
mov
cwtl
or
jle
fwait
cmp
enter
aad
dec
xchg
push
popl
add
ljmp
and
stos
cltd
add
dec
lcall
jb
loop
inc
mov
ret
mov
sub
mov
mov
pushl
aam
jp
push
fcmovu
xor
xchg
jo
jmp
out
popa
inc
xorl
psrlw
fcmovbe
jne
or
out
stos
hlt
cld
jp
dec
data16
into
xor
adc
je
cmp
jle
mov
xor
pop
xor
stc
mov
xchg
dec
mov
aam
loop
xchg
popf
mov
imull
mov
xor
add
sub
cmp
imul
xor
add
cmpsb
roll
xor
and
int
inc
pop
loopne
leave
or
ja
clc
lret
mov
pop
mov
pushf
mov
fdivs
cli
cli
aaa
movb
fwait
call
int
arpl
js
aas
mov
es
mov
mov
ds
adc
mov
mov
faddp
in
xchg
outsl
std
movsl
push
sti
test
int3
lods
sbb
jo
push
mov
push
leave
movsl
mov
sub
push
sbb
iret
cld
mov
fimuls
jg
rcrl
push
xchg
xchg
jmp
jmp
and
dec
cmp
cs
scas
xor
and
xor
pop
or
and
nop
aad
lret
xor
cmp
sub
imul
dec
jg
add
sbb
cmp
lods
jl
inc
add
jmp
pop
iret
bound
inc
push
jno
leave
call
je
test
push
lret
mov
dec
jmp
fcmovu
add
jl
push
jb
jnp
cmp
rcll
jns
mov
sbb
leave
movsb
leave
out
xchg
mov
sub
xor
mov
xchg
adc
xor
out
push
call
add
lock
inc
lods
pop
push
jp
or
sbb
mov
mov
inc
cwtl
imul
adc
insb
mov
fwait
jne
push
inc
jmp
test
rcr
inc
mov
push
mov
jbe
inc
pop
push
popf
movsb
cli
cmp
daa
fmul
shr
dec
iret
sbb
data16
mov
lret
out
sahf
mov
pop
add
or
sbbl
xlat
mov
pop
xchg
mov
and
jne
mov
and
dec
lods
std
inc
shlb
test
xchg
pop
decb
es
repz
inc
jmp
out
push
inc
xchg
shrl
iret
test
mov
push
fcoms
bound
mov
pusha
sbb
data16
andb
xchg
out
and
dec
int3
sub
pop
inc
add
subb
icebp
bound
add
xchg
shrb
mov
add
sub
in
push
nop
push
dec
or
cmc
call
mov
js
pop
cmpsl
xor
or
push
push
int
fcmovu
or
jmp
ds
xor
out
inc
pop
push
pushf
jno
ljmp
and
loopne
push
cltd
shlb
int
ficoml
inc
aaa
in
xchg
xor
sti
sahf
enter
pop
mov
fwait
loopne
jp
pushf
outsl
mov
bound
mov
mov
mov
push
sub
or
mov
orb
ja
inc
sbb
das
cltd
mov
lds
and
cmpsl
inc
sub
or
and
push
ss
stos
mov
or
sbb
dec
nop
or
fcompl
imul
or
dec
in
aam
inc
mov
jmp
jecxz
fnstcw
xor
xchg
fildl
insb
adc
cmp
inc
cmp
sbb
jmp
stos
pop
mov
cmp
mov
xchg
jns
addr16
arpl
push
cld
in
in
bound
inc
xchg
cmp
bound
imul
jp
xor
pusha
sbb
and
inc
ret
repz
ss
out
imul
mov
out
sub
cltd
mov
inc
push
mov
rol
xlat
mov
out
int
dec
and
jns
inc
and
fisubl
add
cmc
pop
nop
and
xchg
add
sub
lea
add
jnp
pop
mov
xor
mov
sbb
lahf
shlb
iret
push
pop
add
dec
lret
stos
mov
js
nop
fmull
cmpsb
dec
lock
mov
les
insb
fistps
scas
xchg
mov
sbb
aas
enter
and
mov
sub
lea
mov
dec
push
mov
data16
out
out
jge
mov
lret
shlb
iret
sarb
test
dec
mov
jmp
popa
daa
or
cmp
pop
xchg
pop
mov
outsl
shlb
fsubrs
lods
mov
inc
test
sub
sub
cld
stos
hlt
jne
inc
sbb
int3
cmpsb
js
pop
adc
ret
int3
in
cs
sahf
popf
repz
cmp
sbb
cmpsb
orb
lods
mov
movsb
cmp
dec
jne
push
pop
push
jecxz
scas
jmp
add
insb
push
add
stos
xchg
xor
shrb
mov
scas
and
in
es
call
xor
inc
inc
loopne
push
aaa
je
aad
cli
movsl
icebp
cs
popf
imul
push
fldcw
sbb
adc
mov
push
adc
daa
xchg
shlb
loopne
clc
data16
es
cmp
or
fs
add
orb
cmp
sub
rol
cli
jo
adc
cwtl
push
or
orl
rorb
lods
mov
push
mov
stos
cwtl
adc
ss
stos
push
jge
mov
add
push
mov
jbe
mov
fildl
fisttpll
push
xorb
add
sub
cs
adc
adc
je
stos
xor
lock
jecxz
in
push
pop
mov
clc
jge
testb
add
dec
sbb
cmp
pop
jge
les
adc
mov
out
xor
sub
pusha
mov
pushf
and
test
mov
call
jne
test
jle
push
js
rorl
leave
dec
or
in
sar
or
imul
sbbl
cmp
xchg
pop
outsb
cmpsb
lea
push
das
adc
push
mov
sahf
adc
sub
je
loop
in
jb
loope
push
cwtl
sub
pop
adc
xor
adc
shr
lock
jge
repnz
cmp
adc
dec
or
es
orl
jns
nop
stos
ljmp
lock
test
mov
inc
inc
push
hlt
jne
or
dec
jae
jnp
out
dec
lret
imul
sahf
mov
enter
repz
cli
sbb
adc
iret
push
cmp
ret
out
cmp
push
pop
pusha
pop
cmp
inc
popa
sub
mov
xor
push
ret
inc
xchg
lods
dec
push
xor
xor
out
je
neg
js
pop
dec
lcall
paddsw
mov
ficoml
jle
dec
xchg
ret
mov
loope
mov
rcl
pushf
cmp
gs
push
jmp
fildll
inc
dec
insl
ja
cmp
mov
js
and
test
out
sbb
out
xor
mov
cmpsb
and
sbb
sbb
add
push
insb
inc
cmp
push
or
xchg
push
out
pop
pop
sbb
push
sbb
push
push
cmp
icebp
loopne
fimuls
mov
inc
stos
cmp
inc
sub
scas
stos
jg
je
int3
ja
jo
xlat
or
push
int
xlat
pop
in
or
mov
out
outsb
in
or
mov
mov
or
arpl
insb
pop
cld
sbb
and
cmp
sub
push
rcll
int3
xor
loop
call
negb
sub
lret
lods
inc
ja
push
push
fiaddl
pop
push
imul
add
out
jns
xchg
ret
ds
adc
mov
scas
mov
test
lcall
scas
fildl
mov
insb
xor
pusha
aam
icebp
pop
sub
fisubrl
pushf
jnp
divb
push
shlb
ds
in
aaa
dec
push
sub
movsb
fsubs
xor
les
fsubl
into
stos
sbb
mov
insl
outsb
notb
jo
call
sub
push
mov
scas
out
ss
das
mov
adc
imul
cmpps
clc
mov
mov
and
scas
xor
sti
inc
push
test
add
pop
sbb
pushf
mov
pop
arpl
dec
stos
pop
sub
ja
es
sub
ss
iret
fisttpl
sub
pusha
test
inc
je
jmp
repz
fsubrs
sub
jecxz
or
int
push
and
clc
dec
std
adc
xchg
jmp
xchg
ret
leave
fisttps
sub
push
bound
adc
xchg
sarl
shll
lahf
dec
lods
hlt
bound
stos
stos
jne
lods
test
pop
xchg
test
add
loopne
loop
fidivl
pop
fists
xchg
pop
dec
mov
adc
mov
jecxz
setne
sti
cld
xchg
push
loope
xor
push
in
bound
mov
push
ror
push
pop
or
pop
hlt
addr16
enter
arpl
push
mov
jne
mov
jo
add
addl
push
and
xor
pop
int
mov
call
mov
push
divb
sub
xlat
in
test
aas
lret
das
cmp
lods
lods
pop
rorl
roll
enter
cmp
nop
flds
lea
sub
loopne
and
fwait
jae
sbb
adc
or
mov
dec
fwait
out
bound
hlt
mov
subb
out
lea
mov
pop
lock
ljmp
cmpsl
mov
pop
imul
mov
jne
jg
jecxz,pt
pop
loope
out
pop
in
loope
hlt
cmp
js
movsb
and
in
lock
jl
aas
shll
or
imul
rol
nop
bound
addr16
xchg
adc
jae
popf
cmp
adc
scas
cld
jecxz
push
into
xchg
mov
pop
fidivl
test
fwait
rcl
cwtl
movsl
push
fbld
add
cmc
cmp
mov
cmp
pusha
aaa
lea
fs
mov
and
fmuls
and
push
mov
mov
insb
jb
fcom
fs
test
test
pop
lahf
les
insb
pop
loope
mov
inc
xor
xchg
cmp
adc
and
ss
pop
sub
sub
jmp
adc
cmp
outsl
or
dec
jp
push
aam
xchg
popf
sub
inc
cmp
dec
push
and
fisubrs
adc
push
mov
cwtl
push
mov
push
ror
jmp
cmp
loop
pop
jno
mov
int
sbb
lods
test
sbb
mov
cmpsb
ret
in
in
mov
jg
or
dec
int
mov
lock
mov
pusha
xchg
cmp
xor
in
jae
push
xor
int3
sbb
mov
ljmp
push
mov
xor
rcr
adc
int3
aaa
pop
movb
cmp
ljmp
dec
insl
mov
inc
dec
xor
dec
xchg
and
xor
popf
add
push
or
jo
rclb
adc
fistpll
pop
and
sub
into
imul
mov
push
xchg
jb
dec
stos
sbbl
inc
stc
cmpsl
mov
scas
int3
dec
push
lahf
dec
fiaddl
cmp
or
in
mov
cmp
into
add
jbe
or
dec
xor
scas
outsl
and
cmp
and
mov
push
nop
int3
jmp
mov
or
mov
jo
in
inc
mov
repz
and
popa
mov
xchg
mov
push
pop
imul
sbb
mov
js
dec
pushl
out
lds
ds
test
fisubs
dec
rol
pop
les
stos
mov
imul
cmp
mov
fst
cmpsl
mov
shl
jl
mov
adc
testl
jbe
cwtl
je
mov
add
mov
dec
jne
in
mov
jmp
jbe
mov
xchg
sub
push
push
pop
add
sbb
mov
adc
adc
loopne
pop
enter
enter
clc
imul
inc
add
xor
jge
dec
pop
jle
dec
ss
stc
push
xchg
mov
bound
push
aaa
mov
fwait
mov
shl
lret
add
lock
dec
repz
sub
in
dec
js
ret
stos
loop
out
xchg
fldcw
or
mov
std
out
cltd
and
mov
into
and
cltd
push
jbe
scas
fs
lea
push
adc
or
inc
popf
repz
sub
cmpsb
jns
sbb
lock
dec
and
cld
push
movsb
cmp
mov
cmc
add
out
xlat
clc
push
out
or
pop
fistpl
hlt
cmc
fbstp
sbb
cmp
movsb
dec
lods
and
mov
cmp
sub
insl
aas
dec
push
mov
push
lahf
popa
je
in
xor
mov
sub
subl
std
movsb
sub
lahf
lds
mov
push
xchg
dec
xchg
mov
sarb
inc
mov
lock
pop
imul
and
cmpsb
fsubrl
mov
push
decl
loop
shrl
int3
outsl
lahf
das
testl
cmpsb
cmc
sahf
jle
inc
leave
call
scas
fs
aad
mov
push
enter
fadds
lret
int
test
cld
jmp
mov
daa
rdmsr
sti
pop
sbb
or
sub
scas
pop
dec
mov
sub
adc
add
mov
pop
inc
add
mov
test
mov
jp
subb
push
out
inc
cli
aas
jle
imul
repz
push
stc
cs
lcall
mov
imul
lock
test
dec
mov
push
rorl
jnp
adc
into
outsb
add
adc
add
out
out
fists
movsb
lods
loopne
inc
addr16
in
out
lods
inc
pop
ljmp
sub
fwait
loope
fs
or
xchg
mov
push
inc
in
dec
and
xchg
sbb
cld
or
sub
arpl
and
int3
jg
mov
nop
or
loope
push
fcoms
in
xchg
or
mov
sub
lods
cmc
mov
dec
enter
lods
sub
pop
mov
add
inc
cld
aas
fs
xor
clc
pop
sbb
aas
fabs
pop
lret
jo
test
movsb
std
lret
mov
jg
rolb
into
sbb
cmp
lock
hlt
in
in
ja
fbstp
mov
bound
xchg
shll
pop
ljmp
arpl
sub
sahf
xor
or
xchg
fists
pop
jecxz
and
fmuls
fsubrs
pop
lret
rcrl
movsl
test
ret
mov
sti
int3
stos
inc
lds
jno
and
lea
dec
adc
mov
ret
sbb
and
xor
cs
sub
sub
mov
xchg
xor
sub
sub
sbb
add
jp
sub
fdivr
fidivl
loopne
outsb
das
cmp
push
dec
push
mov
push
jbe
repnz
xlat
sub
inc
inc
xchg
pop
popa
fisubs
mov
or
push
out
sarb
or
out
add
popf
fnstenv
adc
adc
xchg
xchg
and
dec
xor
jg
fcoms
push
inc
xor
lds
and
or
mov
inc
ds
stos
cmpsl
clc
or
dec
sub
jmp
iret
scas
dec
aad
cli
and
push
jle
jmp
daa
jne
insl
out
jmp
mov
les
adc
idivb
enter
push
jno
mov
mov
andl
cmp
in
popf
movsl
and
daa
jle
repnz
cmp
repnz
fidivrs
push
sar
adc
mov
xor
xlat
mov
mov
pop
inc
or
mov
and
sub
mov
dec
mov
scas
call
xor
mov
test
and
sahf
mov
lock
mov
data16
aam
int
cmpsl
push
xchg
sbb
rorl
mov
push
jl
add
push
mov
hlt
call
cwtl
pusha
jge
dec
ss
data16
inc
and
insl
lea
dec
pop
fdivs
mov
xchg
test
out
rcr
leave
inc
mov
dec
mov
pushf
mov
dec
gs
test
ret
pop
pop
test
repnz
inc
es
fsubr
dec
addb
js
push
lret
xor
xchg
sub
fdivrl
fistl
rcll
popa
adcl
sbb
mov
xchg
ret
bound
fiaddl
xor
lea
adc
push
dec
test
inc
fs
xchg
rcll
out
mov
imul
jne
jp
test
inc
inc
pop
cld
jae
xor
in
dec
mov
gs
je
dec
stc
cmp
cld
shrl
or
dec
cltd
xchg
enter
xchg
roll
or
adc
lock
test
mov
mov
or
mov
mov
mov
lcall
pop
loope
add
adc
sti
std
cmp
add
mov
add
pop
int
repz
mov
sbb
dec
scas
jge
adc
ds
mov
push
outsl
xchg
out
in
xchg
and
inc
arpl
jae
jae
add
xchg
lds
push
icebp
pop
pop
je
or
lcall
lock
mov
or
iret
inc
jle
sub
sub
fstl
cmp
mov
jp
sub
xchg
sbb
in
xchg
bnd
inc
mov
lret
lcall
cld
sub
mov
ljmp
sub
dec
outsb
call
dec
pop
pushf
mov
xchg
inc
lock
popa
jns
push
xchg
scas
insl
popf
inc
sahf
divl
push
ds
cmp
cld
cmp
shll
mov
inc
xchg
cmpsl
push
mov
push
inc
or
std
repnz
bound
mov
repz
xor
fcomi
arpl
push
push
mov
mov
shrl
notl
stc
leave
and
ljmp
mov
pop
insb
sbb
mov
mov
mov
cmc
sti
out
xchg
out
lcall
pusha
xchg
cmp
sbb
shlb
jp
les
push
and
orl
ss
cli
pushf
pop
call
lock
in
lahf
pusha
divl
repz
push
mov
xor
outsl
addr16
mov
imul
sub
lock
push
mov
out
cmp
insb
mov
push
nop
cwtl
jo
ret
xchg
xor
test
repz
mov
mov
xor
xchg
scas
mov
stos
ret
call
inc
inc
int
add
xchg
scas
rorb
inc
sbb
pop
pop
pop
dec
add
mov
mov
test
mov
adc
xchg
iret
test
add
add
push
cmc
or
dec
outsb
ret
mov
cmp
in
cmp
adc
into
ds
rorl
sub
int3
jmp
push
shl
cltd
xchg
stos
in
int
clc
shrl
mov
stos
scas
ret
pop
mov
js
xchg
push
cwtl
or
push
lcall
in
fimull
sub
push
out
inc
ljmp
xchg
lahf
mov
cltd
xlat
bswap
cwtl
les
subb
sub
rcr
scas
inc
jne
mov
outsl
ret
xchg
sub
xchg
daa
pop
pop
mov
xchg
push
sub
nop
mov
push
jmp
data16
pop
nop
loop
pop
sbb
sub
jle
add
jnp
addl
sarb
push
outsb
pop
js
loopne
mov
ficoms
insl
cld
rcrb
gs
xchg
dec
hlt
fadds
sbb
or
sbb
lock
cs
or
mov
dec
sbb
in
orb
fidivrs
pop
sub
mov
inc
jmp
pop
test
push
nop
sbb
sub
sub
sub
test
ds
ss
xchg
cld
hlt
jb
xlat
data16
stc
add
mov
jo
cltd
adc
push
add
ss
mull
out
dec
xchg
js
cmpsb
les
sbb
or
mov
jge
xchg
roll
and
or
mov
or
into
sub
ds
inc
sub
mov
dec
xchg
mov
lcall
and
hlt
in
mov
arpl
fwait
cmp
xor
repz
inc
enter
mov
sahf
adc
add
jno
push
pop
and
das
movsb
pop
imul
mov
mov
dec
push
mov
repnz
inc
fwait
stc
in
outsl
outsb
lret
sub
inc
xlat
or
jecxz
inc
and
fistl
cmp
sti
cmp
mov
aaa
nop
xchg
imull
push
mov
cltd
jae
in
push
xchg
sub
push
inc
pop
adc
ljmp
sbb
out
repz
in
xchg
cli
push
inc
enter
mov
loope
cmpsl
cmpsl
jmp
mov
rolw
and
add
xor
fdivl
ret
in
xchg
stos
mov
mov
js
outsl
pop
bound
rcrl
mov
dec
insb
pushf
inc
cwtl
cli
fdivrl
iret
jno
out
jge
adc
xor
or
test
mov
push
xor
mov
mov
inc
inc
pop
lahf
mov
sub
iret
imul
cmpsb
out
ja
sub
cmp
push
shrb
fnstenv
popa
push
lcall
test
stos
scas
pop
inc
repz
mov
in
lcall
xchg
mov
aad
inc
xchg
xchg
add
pop
cmp
cmp
fisttps
fwait
test
pushf
pop
pop
repnz
mov
jbe
das
or
add
inc
les
das
dec
out
adc
out
mov
rclb
aaa
lret
faddp
ds
stos
push
cmpsb
xor
rolb
insb
andb
lds
addr16
inc
fisubrs
popa
push
mov
cmp
push
cmp
pop
imulb
add
mov
mov
xor
cltd
jp
sbb
inc
adc
mov
mov
xor
cld
cld
lea
mov
mov
and
sub
xor
test
fcomip
dec
test
rorl
jecxz
sub
jne
dec
mov
scas
sub
in
and
and
or
inc
addr16
fsub
cli
fwait
lds
lea
cwtl
mov
ret
hlt
mov
addl
arpl
or
inc
rorb
sbb
popf
pop
push
mov
scas
mov
inc
adc
out
push
repz
xchg
add
sbb
addr16
push
inc
dec
cltd
test
sbb
cs
out
mov
and
sub
inc
fimuls
mov
sbb
push
xchg
mov
out
mov
arpl
das
into
sub
out
inc
or
sub
push
xchg
cmp
xchg
hlt
pmulhuw
movsb
aad
icebp
imul
sbb
mov
out
sub
shll
pshufw
or
inc
cmpsl
outsb
test
add
movzwl
inc
xchg
and
mov
and
pop
xchg
call
sti
mov
pop
imul
pop
jb
mov
in
mov
outsl
jle
add
bound
fstpl
jl
and
or
addr16
dec
add
cmp
inc
les
mov
daa
sub
in
or
mov
or
lds
imul
popa
inc
cmpsl
push
push
inc
inc
dec
in
jl
cmpb
push
insb
jecxz
jmp
mov
jecxz
push
push
mov
cwtl
xor
mov
xor
mov
repz
pop
leave
dec
sbb
jge
sbb
loopne
out
popl
in
adc
sub
ja
pop
imul
mov
pop
aam
shl
xchg
shll
or
call
inc
and
shl
hlt
sqrtps
xor
mov
xor
cli
ja
add
lds
stos
or
icebp
lahf
xchg
jp
int
xchg
cmp
jle
pop
mov
out
xchg
enter
add
repz
test
mov
add
push
dec
cmp
test
push
testb
inc
lahf
cmp
ljmp
jbe
adc
cmpsb
fucomip
jb
lcall
ja
es
daa
lods
push
test
stc
push
cmp
push
dec
gs
pushf
movsl
mov
pop
sub
add
push
mov
push
add
jmp
andps
andb
insl
jp
jecxz
jg
ljmp
jle
or
pop
mov
in
loop
xchg
xlat
gs
jmp
flds
cltd
cmp
sbb
and
push
pop
push
and
dec
scas
das
xor
xor
mov
and
mov
and
dec
loop
xchg
jae
mov
mov
dec
lods
jo
pop
inc
cmp
xor
test
push
mov
pop
ret
icebp
xchg
stos
cld
push
dec
movsb
mov
cmc
arpl
push
movsl
pop
and
jns
fsubr
ret
cmp
loop
mov
mov
push
int
fwait
or
lcall
inc
push
cmp
jmp
scas
cwtl
push
mov
jb
cs
cwtl
cli
orl
outsl
inc
jl
cmpsb
mov
jg
sarb
int3
stos
pusha
cmc
jmp
xor
cltd
mov
xchg
in
mov
outsb
dec
push
ffreep
dec
cmpsl
int3
lea
jo
ret
mov
mov
lahf
sarb
xchg
sahf
or
leave
pop
lock
data16
pop
std
and
ficomps
jne
std
xor
cmp
push
lahf
lock
xchg
push
xchg
sub
push
pop
jb
dec
mov
fistpl
pop
lret
in
inc
push
push
mov
int3
push
nop
mov
dec
clc
ret
xor
add
or
sbb
addb
inc
and
inc
imul
adc
addl
cmp
add
lods
push
xorl
mov
sbb
fdivl
inc
inc
iret
sub
or
dec
shll
mov
outsb
dec
hlt
movsb
mov
in
icebp
mov
or
mov
jns
dec
pop
orb
mov
mov
stos
shll
pop
push
and
sub
mov
sub
xchg
mov
ja
push
fwait
jle
fldenv
stc
xor
pop
jecxz
aas
push
and
cmp
sbb
test
fsubp
push
lods
rcrl
mov
pop
insl
cmp
adc
sub
enter
dec
lcall
aam
stc
push
leave
sub
xor
add
lret
add
repnz
aas
sbb
pop
sbb
insl
std
repz
int
cmp
in
push
ret
cmp
mov
lods
jp
loopne
push
adc
and
scas
xor
imul
push
int3
sub
pop
repz
lods
or
inc
jns
xchg
call
sub
aaa
and
sbb
push
pushf
dec
pop
idivb
and
mov
push
xor
pop
gs
dec
lcall
mov
out
jae
daa
xchg
mov
xor
imul
addr16
mov
pop
xchg
push
mov
jo
movsb
cwtl
daa
pop
dec
add
repnz
pop
jmp
pop
xchg
lods
mov
pop
mov
add
inc
or
rorb
jb
testb
stc
add
jns
pushf
fsubr
out
outsb
push
outsl
push
cli
loope
pop
inc
push
mov
lock
jmp
push
jbe
xor
leave
out
jecxz
mov
inc
es
jb
mov
pop
cltd
in
dec
cs
data16
ja
aad
xchg
mov
mov
lock
stc
push
sub
leave
lret
jnp
inc
fmuls
cli
and
mov
dec
stos
or
push
jecxz
push
add
imul
ljmp
xchg
jae
mov
inc
xor
imul
pop
mov
shrb
adc
add
insl
test
shl
inc
enter
jmp
cld
adc
mov
lds
dec
fiaddl
daa
lret
adc
mov
jbe
gs
int
or
inc
ljmp
add
adc
sahf
inc
mov
lret
xor
jmp
or
stc
movsl
pop
enter
mov
pop
jno
arpl
repz
push
cmc
sub
data16
jno
sub
lock
sub
sub
adc
rcrb
ret
loop
roll
outsb
movsl
jge
and
test
orb
cmp
jmp
and
addb
jge
jecxz
repnz
pop
clc
xorb
mov
sbb
les
leave
stos
dec
insb
jg
sahf
rcrb
punpckhbw
push
scas
mov
jno
das
pop
and
ss
cwtl
in
pop
bts
inc
or
pop
sbb
pop
push
dec
add
inc
fistpll
gs
aam
cmpsb
cmp
or
push
push
aas
daa
jmp
mov
mov
jg
push
iret
subl
sub
loope
test
and
or
push
jbe
outsl
ds
push
dec
or
sbb
xor
out
pop
ffree
mov
lret
fcoml
mov
rorb
into
fidivl
cs
fsubl
mov
hlt
aas
push
arpl
cmp
sub
mov
inc
popa
cltd
xor
inc
xchg
inc
sbb
push
adc
rcll
add
test
or
jp
jmp
das
fstl
xor
cwtl
out
mov
scas
loope
aas
inc
test
adc
and
movsb
xchg
xchg
jmp
xor
loop
sub
mov
jmp
sarb
aas
adc
daa
dec
sbb
jle
rorb
and
repnz
xchg
jmp
dec
or
mov
push
xchg
aas
pusha
adc
lods
cmp
movb
lcall
adc
daa
add
push
add
adc
inc
out
xchg
adc
stos
dec
xor
xchg
xchg
xor
clc
mul
nop
ljmp
pusha
clc
in
push
into
ret
cmp
imul
mov
xchg
das
repz
mov
test
sub
repz
push
sbb
pop
cmpl
cmp
add
movsl
dec
sub
pusha
dec
adc
in
or
pusha
sbb
xchg
cmp
ret
sbb
jns
cmp
icebp
loopne
adc
aad
out
pop
shrd
cmp
addr16
movsb
push
or
lret
and
cwtl
sub
stos
ss
enter
mov
mov
pop
xor
mulb
loope
sbb
mov
mov
xor
loop
sarb
jmp
xchg
ss
stos
addr16
test
sbb
lcall
mov
or
cld
and
xor
icebp
mov
pop
jne
daa
fisubl
arpl
mov
jge
dec
nop
pop
and
pop
pop
push
in
mov
lret
jecxz
add
daa
loope
clc
lea
rcrb
sbb
lea
xor
push
fcoms
imull
adc
jns
or
sub
fdivrs
and
incl
mov
adc
ss
push
dec
jns
add
inc
pop
lods
les
mov
mov
loop
fs
push
popa
push
add
cmp
iret
xchg
lret
inc
mov
or
sub
sbb
mov
loope
sarl
imul
jmp
jnp
pop
movsl
xchg
ret
add
orl
adc
cmp
pop
adc
dec
bound
lock
std
mov
pop
adc
mov
ret
popf
cmp
pop
push
dec
push
adc
dec
jno
xlat
push
sub
popa
fisttpll
pminub
mov
push
jb
mov
inc
inc
outsl
pop
push
add
or
jl
or
sub
arpl
jl
cmpsb
adc
pusha
popf
shlb
aaa
mov
cwtl
shr
inc
arpl
xor
xchg
push
popf
leave
push
inc
mov
xchg
cmp
mov
jge
out
call
pusha
xchg
ficomps
fisubs
pop
in
and
clc
inc
mov
imul
aas
ret
sub
mov
imul
loope
movl
ret
xchg
nop
cmpsl
and
lret
mov
sbb
and
add
cmp
sub
jmp
sbb
xor
ret
addl
cmp
jl
ljmp
inc
fstl
push
popf
lods
add
scas
jge
nop
fcmovbe
and
jb
xchg
lds
cwtl
cs
mov
nop
test
andl
ljmp
lret
jmp
push
loope
push
std
aaa
adc
add
pop
jp
loope
push
shll
out
pop
test
in
and
and
shrb
mov
fs
or
sbb
fisubrs
rcrl
xchg
mov
icebp
push
movsb
gs
jg
jns
rcr
data16
ficompl
outsb
dec
lods
fistl
adc
fs
pop
iret
fnstenv
xlat
es
fdivp
mov
popf
test
lea
call
xlat
jnp
dec
je
scas
xchg
std
vunpcklps
cltd
inc
nop
fistpll
push
sub
enter
sbb
out
stos
jbe
jae
jno
adc
int3
jne
cmc
adc
outsl
add
cmp
mov
pop
scas
lahf
mov
xchg
outsb
fcoms
insl
leave
push
leave
sbb
add
pop
repnz
leave
adc
dec
test
inc
add
in
or
dec
cltd
in
bound
and
clc
clc
and
mov
frstor
cmc
adc
mov
dec
xchg
push
mov
add
mov
add
gs
out
arpl
stos
jae
test
lahf
inc
test
or
pop
mov
cs
mov
adc
push
sbb
int
push
bound
fnstcw
push
call
fisubs
xor
inc
dec
fisttps
dec
leave
sub
loop
add
mov
jmp
cmp
sub
jp
dec
arpl
ret
out
iret
das
xchg
cmpsb
adc
mull
sarb
addr16
les
fcmovnu
sbb
repnz
mov
das
or
inc
jecxz
pop
xor
pop
ljmp
cmpsb
out
cltd
pop
xchg
cmp
adc
outsb
mov
lret
js
sbb
fs
pop
xlat
cli
in
push
push
mov
sbb
bound
test
punpckhdq
call
mov
push
mov
lock
pop
xchg
mov
cmpsb
mov
mov
push
scas
dec
push
inc
jb
sbb
and
lods
dec
mov
cmc
push
push
jno
inc
jbe
iret
mov
testl
sbb
sahf
cmp
popf
stos
mov
lret
aas
loope
inc
adc
cmp
enter
jecxz
inc
mov
xor
outsl
jns
mov
subb
or
sub
xchg
popa
xchg
mov
in
mov
loopne
rcrl
mov
and
rcrl
dec
xchg
mov
inc
and
cld
testl
testb
setae
cwtl
push
pushf
ja
mov
push
xchg
jge
lea
fmuls
dec
negb
sub
cmp
fmull
cmp
inc
aaa
ret
and
push
add
popa
jge
and
data16
add
sahf
mov
xor
add
out
or
fstps
movsb
outsl
imul
hlt
icebp
and
cwtl
and
cwtl
popa
inc
dec
jp
sub
mov
xor
arpl
push
in
aad
mov
out
popa
sbb
mov
xor
pushf
daa
push
fsubrl
jge
clc
test
add
stos
and
cwtl
mov
jge
or
cltd
sub
enter
or
add
and
cltd
sub
fsubrs
mov
aad
std
mov
push
das
xchg
and
xchg
xchg
cmpsb
rcrl
js
fxch
dec
add
pop
faddl
clc
fs
xor
mov
inc
lfs
fildll
aam
lea
fs
cwtl
jae
or
sub
cmpb
pop
mov
icebp
daa
loopne
mov
sub
insb
gs
xchg
inc
mov
jge
dec
mov
pinsrw
lret
dec
push
mov
into
sbb
outsb
mov
sub
cli
cmpsb
leave
and
addr16
dec
pop
dec
dec
and
call
mov
outsl
add
adc
fcoms
pop
push
inc
ss
loope
fsub
sub
xchg
xchg
shrb
sarl
add
jmp
test
xchg
loope
sub
mov
repz
mov
adc
inc
int
scas
inc
sbb
ret
mov
fidivs
nop
fcmovbe
xchg
push
push
hlt
into
xor
xchg
inc
push
mov
popa
stos
leave
aas
cld
push
movsl
stos
int3
jge
inc
xor
add
xor
sub
sub
lcall
lods
mov
inc
xor
xchg
imul
jecxz
lcall
popa
sbb
mov
sub
pop
mov
mov
xchg
hlt
mov
in
add
inc
mov
xchg
lods
jo
dec
sub
cld
lret
or
bnd
jg
fdivp
jge
add
push
dec
and
lds
inc
or
arpl
shlb
stos
cmpl
inc
repz
cwtl
shll
rcll
lds
popf
inc
xor
sub
pushl
xor
dec
ret
dec
inc
adc
icebp
sub
jmp
xor
sub
cmp
ljmp
hlt
or
jnp
lock
addb
decb
clc
fsubr
ret
scas
out
lods
push
dec
arpl
stc
adc
and
pop
inc
xor
ror
int3
pop
lds
or
pop
notb
stos
jo
dec
cli
sbb
das
dec
adc
jb
jl
add
call
idiv
jecxz
call
movsb
jge
js
scas
sbb
inc
pop
pusha
xor
pusha
lock
std
test
bound
movsb
mov
mov
cwtl
mov
mov
pop
fsubs
sbb
call
sbb
inc
lea
je
pop
insb
pop
leave
push
adc
xor
addr16
xor
and
pop
in
xor
push
insl
adcb
and
mov
sub
mov
dec
insl
daa
icebp
bound
dec
test
jne
subl
mov
sbb
aaa
mov
sub
sbb
mov
add
loope
push
orb
xchg
xchg
push
mov
and
mov
clc
out
ret
lds
adc
sub
pop
inc
xor
out
mov
imul
cmpsl
add
sub
ja
cltd
mov
mov
adc
jecxz
fcomi
pop
push
add
adc
xchg
fdiv
lret
fcompl
and
sahf
and
xchg
jae
cltd
sbb
pusha
lds
fadds
and
mov
mov
pop
lret
pop
jle
sbb
into
add
xlat
mov
pop
aas
jno
cmp
dec
xchg
pusha
cmc
dec
and
jmp
ret
xchg
mov
xor
mov
fnstenv
sbb
jno
test
jl
jae
jb
mov
inc
pop
xchg
ss
leave
ds
lock
cmp
jae
sub
jmp
inc
jb
pop
test
popf
enter
popa
cmp
mov
push
and
test
xchg
bswap
ss
cmpsb
cmp
lcall
dec
enter
inc
ss
sub
repz
xchg
loope
rorb
mov
lea
adc
lahf
sub
pop
push
int
sti
jne
jbe
pop
roll
lcall
cmp
push
pushf
and
dec
incb
pop
fiadds
jae
sub
cltd
pop
dec
je
scas
pop
push
dec
pop
mov
addr16
push
mov
push
xchg
jbe
lret
lahf
cmp
stos
jge
push
movsb
fbstp
adc
adc
loope
pause
test
repnz
shlb
imul
xchg
outsb
je
pop
xlat
sahf
aas
push
inc
push
outsl
call
push
out
xlat
mov
ret
add
jo
outsl
fstl
pop
mov
aad
push
ret
outsl
lret
int3
test
xchg
mov
mov
adc
in
insb
jmp
jbe
and
ror
mov
incl
add
push
mov
lret
sub
xchg
les
aam
mov
cmp
incb
sub
jo
lret
test
decl
mov
inc
outsl
inc
call
xchg
test
add
push
xchg
ret
inc
ljmp
pop
shrl
cmp
pusha
xlat
mov
iret
out
rcrb
fcompl
repnz
mov
rclb
ja
ljmp
mov
mov
notl
iret
es
inc
xchg
or
shl
mov
xchg
adc
test
pop
sub
fwait
sub
sbb
or
xor
xchg
dec
imul
add
pop
mov
mov
les
mov
or
adc
lahf
pop
or
or
xchg
scas
dec
add
adc
ds
gs
sti
mov
dec
arpl
sbb
push
jecxz
mov
leave
pushf
cmp
sub
or
push
sub
pushf
mov
jo
mov
sbb
fadd
pop
test
jae
orl
mov
addr16
jge
add
sub
scas
outsl
dec
pop
js
adc
dec
push
icebp
cmp
test
and
or
dec
mov
or
stos
out
sbb
pop
push
mov
fisubl
lds
or
mov
jge
dec
adc
test
cmp
pusha
cli
xchg
mov
and
mov
out
inc
adc
das
mov
and
xchg
dec
adc
loopne
xor
pop
icebp
cmp
push
pop
or
mov
shl
mov
int
xor
jno
jno
add
jecxz
mov
mov
mov
add
lcall
cmpsl
imul
jmp
gs
fmuls
iret
inc
inc
popf
sbb
sub
cli
mov
push
shrb
movsb
loope
cs
mov
clc
clc
fdivs
mov
and
fwait
int
sub
sub
out
stc
andb
push
and
enter
out
jo
repnz
mov
sbb
filds
pop
push
movsb
and
mov
pop
fwait
mov
cmp
jne
mov
push
outsl
bound
cmp
mov
push
rcrl
and
mov
lret
popa
jg
lcall
popf
les
xchg
pop
mov
and
bound
loope
xor
in
iret
pop
push
test
jge
cmp
shlb
das
pop
sbb
test
lahf
int
fimuls
lret
push
aas
xor
inc
lret
push
cmp
into
pop
cmpsb
sub
dec
ljmp
in
jo
dec
mov
out
push
sub
cli
push
sbb
test
add
mov
jne
xchg
idivb
mov
enter
push
cli
jle
aaa
call
lcall
in
mov
cmp
push
scas
jp
xor
sbb
shrb
mov
xchg
insl
sub
mov
dec
or
ret
shll
rorl
sbb
cmp
xor
push
and
add
idivl
xor
sbb
mov
out
out
mov
cmc
mov
imul
sub
push
js
push
daa
out
ja
or
aad
loope
out
pop
lds
mov
lahf
xchg
or
rolw
xor
loope
mov
int3
or
dec
or
sub
ret
cli
call
cmpsl
clc
insb
js
pop
sbb
pop
std
push
xchg
lods
lahf
outsl
lret
mov
iret
pop
jmp
test
or
sub
aaa
add
out
pop
insl
mov
out
mov
mov
popa
mov
inc
imul
inc
lahf
das
repz
arpl
negb
cmp
xorl
imul
pop
mov
std
fsts
andl
jmp
adc
fwait
and
lcall
lret
or
lds
jb
out
mov
sub
dec
repnz
cmp
pop
dec
add
adc
test
jmp
xor
adc
sub
mov
addr16
or
testl
cmpsl
out
cmpsl
imul
and
in
jmp
inc
pop
jo
xor
divb
nop
lods
sbb
outsl
inc
xchg
xchg
mov
or
jnp
sbbl
jns
stos
lret
shll
dec
insl
mov
repnz
jecxz
add
fidivl
ret
in
xor
ja
dec
xchg
mov
xchg
sub
stos
leave
adc
jp
cmp
or
aas
xchg
fcomps
push
xchg
aad
sub
cmp
rcll
enter
cwtl
in
xchg
les
aas
mov
adc
xor
int3
mov
insl
lret
pushf
aas
test
xchg
inc
mov
xchg
cli
std
lcall
je
add
fbld
cmp
pop
and
mov
mov
movl
push
xchg
pop
fcoms
xor
cli
mov
or
xchg
jge
or
fwait
sahf
mov
int3
cmp
sub
pop
push
ljmp
xchg
lahf
pop
cmpsl
push
push
xchg
cmp
mov
mov
and
xchg
aad
mov
and
push
leave
divb
lea
inc
and
int3
test
fwait
mov
out
lcall
mov
repnz
fdivp
push
xlat
inc
outsb
cmp
pop
data16
add
outsb
in
jl
imul
int
mov
js
dec
lret
fists
pop
dec
fstpt
mov
jmp
scas
loop
sub
push
xchg
cli
add
cmp
sbbl
mov
push
pop
pop
add
testb
cmpsl
mov
jae
xor
out
jmp
hlt
adc
insl
mov
pop
adc
stc
sbb
push
outsl
mov
cmp
adc
mov
dec
mov
mov
test
sub
or
rorb
mov
mov
inc
cld
dec
lods
je
xor
cmpl
icebp
xor
or
cmp
mov
and
xor
xchg
out
movsl
cwtl
testl
mov
inc
mov
leave
push
xor
imul
hlt
aad
inc
and
sbb
out
mov
enter
ret
std
cli
ficompl
mov
inc
inc
xor
insb
test
bound
pop
int3
fdivs
mov
or
xor
or
test
and
adc
pop
sbb
xlat
test
mov
mov
sbb
repz
dec
out
sbb
dec
xchg
fs
dec
or
xchg
std
inc
movsb
mov
pop
sub
loope
and
stc
test
jp
cmc
popf
dec
mov
sub
loopne
mov
xchg
lds
xor
ja
aaa
pusha
outsb
stos
jne
or
mov
cmpsl
jne
movsb
fcomp
ja
push
mov
rcr
push
jbe
es
add
mov
sbb
inc
and
inc
inc
loop
pop
xor
daa
div
add
outsb
outsl
repnz
ret
mov
push
inc
mov
push
sbb
shr
fidivrl
stos
clc
sub
push
subb
xchg
sbb
jne
or
cmpsl
inc
rolb
add
sbb
repz
test
cmp
jne
add
xor
xchg
xor
inc
and
outsb
dec
rclb
sub
and
fldcw
dec
cmpsl
clc
add
push
xor
push
mov
cmp
mov
xor
jle
and
xor
push
push
rolb
push
push
and
pop
xchg
or
daa
mov
inc
sub
push
stos
dec
xchg
or
jns
fidivl
add
add
push
xchg
and
and
dec
psubusw
mov
lods
js
adc
dec
mov
add
push
enter
push
int3
mov
sub
push
mov
in
jb
jle
pop
movsb
and
fldenv
lock
rdtsc
push
or
imul
mov
bound
mov
or
fcomp
xchg
lods
xor
mov
mov
mov
fs
loope
add
lahf
aam
fisubl
mov
xchg
ret
mov
adc
push
jmp
cmp
imul
and
and
shr
lea
push
add
xorl
dec
mov
xchg
pop
ss
xchg
ret
ficoml
imul
stc
xor
cmp
jne
sti
pop
daa
cli
cmp
jmp
fsubl
xor
adc
dec
mov
imul
cmpsl
xor
cmp
arpl
repz
sahf
arpl
das
pop
pushf
mov
rolb
dec
enter
or
cmp
or
xchg
sbb
add
jg
scas
jp
out
adcb
cmc
int3
or
xchg
cli
mov
mov
sti
fnstcw
inc
je
pop
xchg
dec
and
aad
jns
or
scas
stos
jnp
inc
and
mov
icebp
sub
push
xchg
cltd
hlt
add
push
in
push
arpl
dec
loope
sbb
fisttps
sbb
nop
mov
stc
decl
les
imul
push
inc
lock
mov
pop
lret
push
int3
mov
push
dec
dec
sbb
mov
ds
scas
scas
inc
mov
pop
fnstenv
push
or
and
cmc
push
jno
mov
sbbb
pop
add
mov
int3
push
enter
test
js
ret
shlb
pop
sbb
incl
popf
movsb
notl
sbb
or
add
jae
mov
xor
outsl
xor
aad
inc
sbb
mov
sub
aaa
loopne
pop
xchg
stc
mov
or
sub
push
add
leave
push
xor
mov
movsb
data16
les
sbb
inc
inc
insl
mov
add
mov
sbb
out
sbb
cwtl
mov
out
aad
xor
ja
sub
or
je
xor
cld
fnsave
cmc
fcomip
rcrl
int
adc
cmp
xor
insl
inc
xor
mov
rcrb
pop
pop
movsb
pushw
pop
dec
rorb
outsb
imul
pop
cmp
pop
push
loope
shlb
sahf
iret
jp
jl
lods
push
pop
sbb
push
pop
xchg
xchg
stos
xor
cmp
or
int3
test
xchg
js
aas
int
data16
lcall
mov
test
xor
pop
jnp
xlat
or
pop
and
mov
jecxz
clc
mov
add
test
fwait
divb
inc
inc
out
xor
ss
outsb
pop
mov
dec
mov
cld
push
lcall
cltd
jb
fnstcw
jl
insl
ret
insl
imul
mov
add
sub
push
and
sbb
ficompl
gs
inc
addr16
push
bound
adc
ljmp
iret
popl
popa
pop
add
out
mov
dec
jne
ret
mov
sbb
cmpsb
inc
daa
add
fimull
xchg
mov
add
xor
pop
or
jns
jecxz
push
or
xor
pop
adc
adc
push
lds
xchg
outsb
mov
enter
mov
push
addr16
or
adc
xor
rcl
arpl
xor
cli
in
mov
out
and
loope
mov
daa
push
test
movsl
jl
stos
insl
mov
lods
jno
dec
imull
or
out
popf
xchg
inc
ret
pop
cmp
cli
mov
sub
lds
jbe
jmp
jecxz
and
push
mov
lahf
dec
stos
jnp
aas
mov
mov
cltd
fisttpl
jno
ficoms
fsubl
subl
jp
shrb
repnz
push
push
std
inc
inc
dec
es
sbb
cs
ret
and
xor
je
mov
pushf
loopne,pt
push
daa
movsb
and
pop
sarb
push
and
outsb
addr16
out
aad
xchg
push
sub
mov
and
int
sbb
push
cmp
jle
jl
mov
pop
or
call
test
push
mov
das
add
xlat
cmp
xor
pop
xlat
rcr
and
push
jbe
outsb
ret
mov
mov
and
xchg
cli
es
sub
mov
push
fisttpll
xor
jge
test
cmpl
push
mov
jne
cmpsb
nop
cmpsl
cmp
lods
addr16
dec
rol
cmp
movsl
fisubrl
sub
sub
cmp
loop
fcmovnb
jo
insb
pop
dec
jmp
push
dec
mov
push
xchg
add
out
rolb
bound
sbb
mov
add
pop
dec
jbe
arpl
jecxz,pt
mov
sbb
mov
repz
gs
lds
inc
adc
cmp
mov
in
loope
jne
mov
pop
decb
cld
mov
jg
xchg
jmp
inc
int
subb
imul
xchg
add
movsb
movsl
incb
repz
mov
aam
loopne
pusha
cmpsb
stos
xor
cli
scas
es
inc
mov
aaa
jno
arpl
call
cmc
pop
es
pop
addb
xor
fwait
xchg
adc
data16
fwait
mov
roll
mov
sbb
mull
mov
cltd
lock
insl
lock
pop
adc
insb
imul
pop
push
and
or
inc
popa
jbe
push
cmp
mov
outsb
inc
mov
jne
inc
in
outsb
push
inc
mov
jge
push
dec
jp
fidivrl
mov
mov
popa
inc
ret
adc
shlb
push
add
loopne
sbb
adc
pop
sbb
push
imul
pop
scas
data16
and
xchg
adc
out
dec
push
movsb
repnz
mov
ret
imul
jo
cmp
inc
mov
into
inc
rcll
push
push
insb
pop
cmp
dec
mov
add
pop
insl
ret
and
shll
jecxz
inc
sbb
adc
adc
xchg
cmc
je
fcomps
out
imul
dec
cmc
data16
sbb
daa
pop
mov
sbb
or
shll
xor
adc
mov
and
mov
aas
adc
leave
popf
mov
add
mov
std
daa
xor
sbbb
xchg
adc
mov
and
inc
xchg
jae
in
sbb
push
jae
inc
xchg
push
push
insl
rclb
pop
scas
ficoms
inc
stc
push
fnclex
pop
push
cmp
jo
mov
popa
sahf
arpl
decl
dec
ja
push
clc
inc
mov
movsb
stos
movsl
add
add
fcoml
lcall
sub
pop
and
fisubrl
push
aas
dec
and
lds
cmc
ret
jae
sarb
pop
outsl
xchg
or
xchg
adc
xchg
and
stos
cli
sbb
sub
test
ja
sar
fisubrl
popa
cmp
mov
push
mov
pop
jl
sub
fcompl
push
adc
xor
push
xchg
pop
gs
in
xchg
add
push
push
push
icebp
repz
popf
mov
mov
out
or
fcoms
xchg
lods
lods
in
and
mov
sub
loop
in
call
cltd
mov
cmp
add
sahf
fcomps
lods
pop
mov
add
negb
les
pop
in
idivb
cmpsl
cmp
scas
push
testb
mov
pop
loopne
bound
std
adc
sahf
fs
mov
mov
jae
shll
sub
repz
sub
jnp
push
pop
adc
sub
mov
std
es
sbb
subb
mov
jle
mov
pop
pushf
or
or
in
mov
dec
xor
cmp
mov
cmp
mov
or
mov
xor
xor
aad
push
or
lods
jbe
jg
pop
test
xor
test
inc
ss
in
lret
xchg
pop
mov
stc
repz
cmp
pop
mov
lods
rcl
and
xchg
es
jmp
mov
cmp
lock
pop
and
pop
leave
mov
inc
mov
push
mov
int
sub
xor
xchg
lock
ds
pop
mov
insl
or
dec
sub
popa
aam
fisttpl
xchg
or
sahf
je
xchg
mov
inc
xor
jg
jecxz
push
nop
xchg
pop
dec
fcoml
lea
adc
push
or
sarl
and
neg
mov
int3
jno
adc
mov
mov
pop
or
movsb
fisubs
mov
imul
xor
and
js
insb
ljmp
in
call
dec
inc
jecxz
pop
mov
dec
cmpsb
pop
test
push
in
xor
inc
jl
aad
mov
aad
adc
dec
fadds
mov
pop
adc
clc
popa
mov
lock
lods
cs
into
ja
out
cmp
inc
sbb
cmp
pop
ss
pop
scas
test
jge
sub
adc
cs
movsl
repnz
andb
jp
inc
xor
xchg
xor
jecxz
mov
inc
lret
arpl
inc
add
xor
ss
stos
cmovns
dec
in
stos
push
aas
popf
push
cwtl
jmp
das
mov
inc
mov
pop
je
call
cmp
fs
fs
sbb
mov
lea
and
fdiv
mov
aaa
jp
leave
shlb
bound
push
inc
dec
xor
sarl
cwtl
and
mov
xchg
cltd
movsl
or
pop
outsl
or
int3
subl
inc
stc
imul
pop
push
in
xchg
rol
ljmpw
stos
push
shrl
fsubr
sbbl
in
fisubrs
mov
data16
jle
aam
push
cld
lea
dec
out
inc
repz
iret
subl
or
xchg
and
fimuls
xchg
cmp
dec
add
pop
jb
push
rcrb
jno
js
push
ficomps
mov
sub
fldenv
into
sti
test
call
jbe
mov
lret
add
xor
push
pop
mov
push
pop
aad
jge
pop
xchg
cmp
mov
jo
pushf
mov
call
addl
xor
xor
sti
dec
iret
xchg
xchg
inc
stc
inc
adc
xchg
jmp
out
push
jb
xchg
sbb
mov
mov
and
and
dec
icebp
lock
or
dec
outsl
xchg
sarl
push
xor
aas
adc
fisttpll
pusha
sbb
lds
xorl
pop
add
es
dec
xor
lret
and
inc
mov
jmp
jnp
out
mov
xor
pop
mov
pop
push
jp
xorb
dec
int3
imul
pop
call
icebp
shrl
sbb
repz
orb
mov
inc
xor
sub
jbe
fimull
out
pop
out
pop
sarb
xchg
mov
add
ss
jle
insl
clc
jecxz
loop
lret
mov
xor
or
pop
mov
xor
mov
and
stos
dec
daa
dec
mov
stos
aam
test
mov
or
cmp
iret
nop
sub
aam
sbb
dec
out
pop
es
dec
jp
cwtl
aad
or
adc
xchg
or
scas
scas
xor
fldenv
mov
test
mov
gs
arpl
mov
call
sub
push
jo
mov
jne
mul
cmp
pop
jno
jge
iret
test
pop
jmp
push
in
imul
jo
ret
mov
and
dec
addr16
add
stc
int3
aaa
orb
enter
mov
dec
adc
jmp
je
jns
fistpll
dec
cmpsb
popl
stc
ljmpw
pop
jb
xchg
in
sbb
pop
push
mov
sti
adc
cwtl
mov
bound
fcomps
fnstenv
in
pop
mov
cmp
das
in
cmpsb
mov
nop
cmpb
lret
mov
push
cmp
mov
add
les
xor
mov
mov
xor
push
call
ss
movsb
and
cwtl
stos
insb
mov
jae
pop
adc
push
js
fidivrs
jg
cmpsb
repz
add
inc
push
bound
rcrl
xor
stos
mov
lock
add
icebp
push
jno
sti
cli
cmp
inc
lahf
sahf
jp
sub
loopne
or
cld
cmp
mov
ds
jecxz
ds
cmp
mov
mov
imul
xor
xor
xchg
sub
pop
jmp
test
jne
cmp
jae
cwtl
push
cmp
hlt
cmp
out
lock
fldt
pop
mov
scas
cld
arpl
push
outsl
inc
pop
cmp
aaa
aaa
daa
clc
pushf
xchg
xlat
mov
cli
sti
add
shl
sub
pop
sbb
mov
add
xchg
hlt
push
xlat
sub
in
pop
scas
sbb
xchg
and
out
mov
jmp
push
xchg
add
fcoms
shlb
cwtl
roll
or
mov
subl
ret
in
and
mov
out
sahf
xchg
rorb
mov
and
jmp
mov
and
fldt
cmp
mov
cmpsl
sahf
les
lret
jbe
das
jp
and
or
pop
sub
rol
mov
jae
jl
insl
int3
ja
add
xor
inc
inc
jle
mov
mov
lods
inc
adc
ja
xchg
dec
xlat
mov
fistl
int3
ret
ja
sahf
mov
jecxz
mov
in
and
jbe
outsl
ficoms
xchg
into
mov
sbb
jmp
sti
dec
xchg
jnp
mov
ljmp
sbb
jb
lods
lods
lcall
mov
into
jle
sbb
mov
mov
out
and
lods
mov
or
and
xrelease
mov
test
cmp
mov
fucomip
scas
clc
mov
aaa
mov
add
arpl
fstpt
xor
pop
or
mov
jae
test
jns
xor
inc
test
cmpsb
jb
sbb
rclb
repz
mov
xchg
pop
jecxz
mov
dec
pop
jecxz
cltd
cmpsb
test
pop
imul
mov
pop
dec
add
fcmovbe
and
fdivs
mov
dec
in
or
and
add
unpcklps
dec
sti
mov
pop
jnp
cmpsl
xchg
je
mov
jle
mov
aam
mov
mov
pop
dec
movq
adc
ljmp
sti
mov
sahf
jae
fldenv
cmp
add
iret
mov
sbb
outsl
enter
fsubr
cmpsl
into
cmp
and
clc
movsl
mov
xlat
nop
dec
jp
sub
clc
push
pusha
stos
mov
push
scas
loopne
xchg
or
and
pushf
test
or
ss
fwait
adc
dec
loope
lret
and
jle
test
lret
cltd
jb
pop
pop
clc
inc
frstor
xchg
xchg
adc
xchg
sub
sub
ds
clc
mov
and
mov
jp
les
mov
push
nop
or
aas
idivb
mov
mov
and
inc
loopne
enter
inc
jmp
mov
outsl
mulb
push
jns
mov
mov
or
push
xchg
fs
inc
lcall
fwait
sub
dec
add
inc
data16
lds
in
nop
lea
or
inc
xorl
fs
inc
jl
push
into
hlt
sbb
mov
mov
js
mov
out
pop
cmpsl
pop
sti
xchg
jbe
fnsetpm(287
inc
in
sar
xor
mov
cmp
negb
mov
jno
mov
int
pop
lods
dec
adc
mov
cmp
sbb
repz
movb
call
jnp
enter
rcll
mov
xchg
cltd
xchg
sub
mov
sti
mov
pop
xor
imulb
jno
movsl
xor
xor
int3
dec
dec
add
mov
push
add
xchg
insb
sub
jg
mov
push
fs
stos
xchg
leave
ss
jle
xchg
aas
dec
xor
or
push
in
and
pop
ds
adc
ret
jg
add
mov
dec
imul
xor
out
dec
test
xchg
clc
mov
sub
outsl
int3
inc
xor
rcl
fs
fistps
mov
or
jp
pop
and
out
fs
push
push
ss
xor
aad
lods
and
daa
push
mov
pop
jns
xchg
mov
sub
push
cmc
outsb
jge
sub
bnd
shlb
mov
popa
in
pushf
and
lea
cmp
inc
mov
mov
arpl
nop
xor
mov
or
cld
sarl
andl
mov
mov
int
xchg
popa
adc
aam
fcomps
lock
inc
dec
loopne
dec
outsl
adc
addr16
mov
and
jp
insb
repz
mov
xor
push
cmpsl
cmp
xor
push
rcrb
mov
mov
and
movsb
mov
push
scas
les
dec
cmp
cmp
js
outsb
shrb
mov
inc
daa
lcall
jecxz
insl
push
adc
test
loope
lods
fstps
iret
insb
cmpsb
stc
stos
mov
pusha
jge
or
mov
push
movsl
adc
scas
jg
cmp
clc
jmp
mov
jmp
daa
std
aam
add
insb
inc
jg
adc
fdiv
lods
cmpsl
mov
fs
cmp
jbe
aas
dec
jo
lahf
xor
sub
jp
mov
jae
xor
cmpsl
pop
push
xchg
add
and
outsb
ret
dec
inc
iret
adc
insl
push
and
hlt
push
mov
sub
and
roll
pop
scas
inc
int
cmp
adc
rcl
cld
dec
and
daa
adc
inc
sbb
sbb
ss
push
insl
or
add
jp
push
rcrb
inc
adc
loop
cmp
pop
ja
fmull
enter
push
xor
loopne
push
sub
mov
sbb
inc
jne
rclb
jno
sub
loop
jmp
jno
cmpsb
mov
dec
mov
xchg
ds
int3
lods
sub
adc
sub
xchg
jno
sbb
popa
mov
in
mov
cmpsb
push
mov
les
pop
testb
and
daa
inc
pop
int
and
push
das
fisttps
les
out
xor
loopne
arpl
jo
sbb
lock
sahf
or
xorb
test
pop
outsl
sbb
add
inc
push
mov
inc
sbb
lcall
xchg
mov
test
neg
je
xchg
stos
mov
jge
int3
push
xor
sub
rcll
scas
inc
push
push
aam
jbe
add
ret
bts
push
pop
arpl
or
xchg
xchg
pop
mov
xchg
and
and
cltd
inc
cmc
jnp
stc
jnp
cmp
add
rcrl
adc
and
push
lea
loope
mov
cmp
divb
xorl
push
dec
or
inc
inc
test
add
mov
jnp
loope
inc
mov
mov
daa
in
add
inc
int
add
sbb
dec
std
push
mov
inc
mov
mov
xor
xlat
insb
add
pushf
mov
jle
fyl2xp1
add
mov
ljmp
xchg
loopne
dec
pushf
jg
cli
inc
push
mov
or
xor
jnp
pop
dec
dec
sti
sbbl
rsm
xor
mov
scas
mov
dec
hlt
jp
imul
fmul
inc
ljmp
ret
pushf
flds
jmp
mov
xchg
dec
push
and
pushf
testl
hlt
sti
ja
sbbb
mov
adc
mov
fbstp
fs
lds
mov
sub
icebp
outsl
arpl
movsl
jl
cmpl
mov
xchg
add
jg
jp
shll
mov
jecxz
ret
mov
outsl
aad
and
inc
or
pop
xor
std
push
stos
xchg
lcall
pop
insl
mov
and
push
lods
cwtl
inc
fsubrs
sub
inc
jl
sbb
cmp
xchg
decb
neg
jecxz
xchg
add
sub
stc
and
jno
dec
mov
cmp
jnp
arpl
jns,pn
or
cli
inc
add
push
mov
arpl
cmpsb
xor
dec
cmp
mov
mov
cmp
pop
in
fnstcw
sbb
fwait
xor
mov
je
iret
cmp
icebp
aaa
xor
inc
or
scas
mov
push
int
lods
rclb
mov
or
xchg
cmpsl
idivb
lods
xor
adc
push
and
fwait
scas
xchg
dec
sbb
cmp
inc
jb
mov
cmp
mov
rorb
fsubs
inc
cmpsl
mov
adc
sbb
inc
ss
xor
xchg
sub
add
imul
repnz
insl
movsl
cmc
adc
xorb
fsubr
and
test
enter
cltd
lds
lret
popl
jb
add
inc
mov
neg
cld
dec
adc
fists
mov
popa
fstpl
jne
xor
ja
je
or
adc
dec
sbb
sbb
jl,pn
mov
sbb
xchg
iret
inc
arpl
add
push
mov
inc
shl
jmp
lret
int
fiadds
repz
cmpsl
js
rcll
iret
test
out
jmp
cmpsl
aas
mov
int3
mov
insl
sub
ret
mov
or
daa
popf
sbb
lret
lods
cs
and
lret
out
sbb
lock
loopne
push
jp
les
xchg
jl
call
pop
rcr
jno
push
push
mov
pop
mov
dec
mov
popa
loopne
adc
or
mov
loopne
lret
sub
loope
aam
repnz
push
loopne
loop
leave
xor
push
cmp
or
dec
mov
push
leave
jb
dec
dec
inc
sbb
pop
out
inc
stos
cmp
mov
or
iret
adc
loopne
out
mov
daa
das
xchg
inc
and
xchg
aas
or
mov
jb
xor
xchg
mov
sahf
dec
jne
mov
sbb
jno
xor
add
jae
mov
std
push
dec
and
push
inc
add
sti
imul
or
pop
out
cmp
jp
cmp
and
inc
mov
adc
aas
out
nop
add
mov
movsl
mov
fcompl
xor
xchg
xor
adc
sbb
enter
mov
cmp
test
mov
aad
out
xchg
and
test
aas
std
mov
xor
ss
ret
add
jne
add
loopne
add
andl
dec
imul
mov
xchg
mov
xor
daa
insl
inc
test
xorb
les
ja
scas
cmpl
jecxz
dec
and
jo
in
mov
das
ja
adc
mov
int3
jne
test
or
pop
mov
mov
sub
and
outsl
or
in
push
int3
xchg
push
aam
scas
lock
cmp
pushf
test
xchg
jmp
dec
movsl
dec
lahf
cmp
jnp
out
sbb
or
pop
pop
call
cs
lahf
add
ljmp
lret
icebp
mov
scas
div
mov
add
add
fnstcw
or
int
dec
movsl
enter
movl
jge
mov
xlat
lahf
cmp
mov
movsl
lods
hlt
or
sbb
lods
mov
fsubs
inc
xchg
xor
mov
jno
dec
cmpsl
pop
fdivrl
inc
pop
push
je
leave
inc
xchg
shll
add
mov
push
popf
sub
xchg
fcomip
sub
dec
mov
lret
mov
fsubrp
imul
inc
or
jmp
scas
push
jle
inc
sarb
orb
ds
add
in
and
adc
sbbb
cmc
test
and
xchg
push
or
clc
nop
in
scas
icebp
or
or
in
cmpsb
xchg
movsl
inc
cmp
fstl
push
icebp
inc
in
xor
sbb
lds
fmull
or
jl
outsl
nop
pop
jmp
sbb
in
jge
mov
sbb
into
xchg
mov
xor
int3
hlt
sahf
test
rorb
popf
in
data16
inc
mov
push
sub
mov
int3
sbb
outsl
ja
js
insl
faddl
jp
sti
daa
arpl
xchg
divl
pop
sub
lahf
icebp
outsb
enter
repnz
in
xor
pop
add
fwait
idivl
lods
sbb
jle
popa
hlt
loopne
ss
js
sub
imul
sbbl
mov
mov
ds
inc
pop
insb
xor
loopne
jg
aaa
popa
and
xchg
jno
imul
fdivr
lock
xor
mov
cmpl
popa
loop
stc
cmp
sbb
fsubrl
add
mov
movsl
lods
test
ljmp
cmp
jno
jle
jno
jge
in
out
mov
loopne
mov
ret
and
rcrb
ficoml
pop
inc
outsl
and
jne
add
mov
dec
pop
xchg
cmp
sub
pop
jg
cmp
movsl
pop
xchg
adc
jmp
fidivrl
ret
loope
adc
dec
ret
xor
lea
mov
sub
xchg
cs
mov
xor
data16
scas
sbb
fs
adc
jno
sub
push
nop
repnz
movsl
inc
cld
mov
sbb
insb
in
cmp
inc
subb
mov
icebp
xchg
jo
lcall
das
adc
les
and
mov
add
lcall
adc
inc
mov
jmp
pop
dec
ds
xchg
cs
cmp
inc
out
mov
ja
popf
jg
fcmovbe
jns
adc
and
sub
lahf
lds
mov
mov
ljmp
out
mov
mov
and
sahf
xchg
sub
lods
jle
testb
movsl
ficoml
mov
insl
jmp
sbbl
ljmp
xor
jmp
test
jne
add
loope
out
rcrb
sbb
cmp
and
daa
arpl
inc
inc
je
out
adc
sub
mov
loop
imul
mov
and
add
loope
shll
mov
frstor
filds
test
or
jp
call
or
pop
push
pushf
hlt
imul
push
add
int3
and
scas
xchg
and
out
inc
or
fs
aam
jne
pop
and
addb
push
stos
sub
inc
mov
out
imul
cmc
jl
or
xchg
cmp
jnp
inc
addr16
lret
shlb
fdivr
test
mov
xor
add
add
rcl
outsl
and
jns
add
mov
fildll
subl
xchg
push
lahf
mov
jnp
rorb
dec
fwait
cltd
mov
sbb
outsl
lods
ret
or
jne
stos
mov
lea
lret
cmp
test
loope
out
mov
sbb
add
adc
xchg
les
pop
pusha
add
out
xchg
mov
or
loope
xor
jmp
mov
xchg
cwtl
mov
fs
movsl
adc
xchg
cmp
das
jecxz
dec
pop
push
push
dec
mov
dec
and
or
jmp
jecxz
push
dec
sti
mov
or
push
imul
sub
jmp
xchg
dec
ja
push
and
test
cwtl
cmp
jmp
mov
cwtl
pop
aad
repnz
xor
fidivs
and
add
roll
test
out
xlat
repnz
xchg
xor
and
mov
mov
das
inc
add
das
out
cmp
mov
mov
daa
iret
movsb
mov
fsubs
adc
test
call
sub
mov
fistl
push
mov
loop
call
jp
insb
push
fs
in
pop
stos
repnz
ds
cs
and
mov
cmp
push
scas
xlat
ror
popa
mov
outsl
cmp
add
mov
pop
mov
and
decb
cs
jl
xlat
test
popa
push
aaa
mov
je
cli
mov
in
out
ljmp
mov
push
pushf
gs
push
add
and
cmpl
je
mov
stc
mov
data16
xor
int3
in
xor
dec
fwait
push
mov
pop
cmp
lahf
mov
icebp
mov
mov
xor
mov
xor
outsl
mov
inc
cmc
bnd
sub
inc
pushf
filds
sub
xchg
lods
dec
leave
outsb
notb
cs
imul
int3
out
push
xchg
sbb
jp
inc
int3
in
ljmp
insb
nop
xchg
pop
jb
inc
inc
xchg
xor
sahf
jnp
lret
fistps
jle
push
push
mov
xchg
ja
insl
insb
outsb
adc
xchg
aaa
or
shl
sti
sub
mov
into
inc
and
mov
push
mov
scas
rclb
negl
repnz
push
or
lock
push
fs
jmp
xchg
je
sbb
sahf
mov
mov
xor
sbb
sub
and
insl
or
sbb
movsb
ljmp
dec
fimull
xor
adc
dec
roll
fcoms
fistpll
cli
cmp
mov
and
add
js
iret
sub
inc
ljmp
in
pop
mov
push
lods
and
and
sub
clc
add
or
cli
fcomps
stos
lds
cmp
inc
jecxz
jnp
mov
mov
ja
push
std
inc
and
out
out
outsl
int3
inc
int
gs
rol
daa
pop
or
adc
aas
push
sub
int
enter
jnp
popa
int3
lods
rolb
ja
jnp
pusha
and
out
add
jo
out
mov
outsb
pop
arpl
nopl
mov
rcrb
adc
out
adc
mov
aam
mov
and
repnz
fbld
pop
cmpsb
mov
sbb
mov
inc
jl
or
xchg
and
push
dec
cmp
dec
fimuls
addl
or
xchg
stc
pop
jnp
mov
sar
or
jae
gs
shr
loope
ja
ret
sub
push
in
push
mov
int
repz
outsb
xor
imulb
mov
inc
ret
es
xchg
cmpsl
push
dec
xchg
sub
mov
mov
sbb
xor
sbb
loope
sbb
lods
jo
mov
rcll
lahf
inc
testb
subl
mov
mov
xchg
cmpsl
iret
jl
shlb
mov
jmp
xlat
mov
imul
scas
test
jb
shlb
cli
loope
mov
jl
sub
lahf
inc
andb
mov
add
pop
movsl
clc
mov
out
mov
mov
lcall
addr16
dec
movsb
add
aam
xlat
adc
pushf
shlb
std
je
push
mov
stos
and
xchg
push
mov
push
jno
lock
cwtl
adc
pop
xchg
or
jb
jp
jl
and
addr16
mov
in
cli
sub
cli
mul
movsl
adc
icebp
cmpsb
pop
mov
push
cmp
pop
inc
enter
inc
push
or
stc
cmp
cmpsl
mov
sti
or
sbb
lock
pop
pop
je
in
stc
in
popa
aam
in
push
rcrl
stos
push
dec
lods
add
cs
pop
imul
mov
and
xchg
mov
jnp
mov
mov
sbb
inc
aam
inc
and
jo
push
in
test
testb
sbb
dec
cli
pop
inc
pop
out
cwtl
pop
mov
mull
popa
inc
pop
mov
ss
int
push
inc
fsubs
sti
repz
or
lret
loop
and
idivl
test
cmpsb
iret
add
fsubl
dec
lcall
cmp
add
test
sahf
fwait
push
andb
jno
xchg
pop
fists
ret
in
and
clc
lock
aad
jle
xchg
subb
lahf
push
jp
repz
sub
jle
mov
cmp
cmp
mov
hlt
add
mov
dec
xor
push
pop
stos
adc
pop
test
xor
xchg
and
lods
jp
hlt
clc
xor
int
mov
and
mov
call
pop
adc
in
jb
push
sub
mov
pop
gs
pop
inc
dec
cmpsb
leave
imull
push
cltd
repnz
movsl
je
xor
jae
ds
cmpsb
lret
push
mov
shl
mov
xor
in
mov
lret
repnz
int
ret
int3
mov
mov
shll
pop
inc
das
fnstcw
aad
jns
test
jbe
inc
or
and
mov
push
adc
pop
pop
fistps
or
cmp
test
jle
push
mov
mov
mov
add
lahf
pop
movsl
lods
ret
adcl
cmc
sub
and
sub
aas
adc
pop
bound
popf
sbb
fimuls
sub
hlt
push
or
push
out
adc
mov
rolb
add
mov
adc
das
sbb
addr16
sarl
jo
jbe
cmp
mov
inc
xadd
mov
or
mov
outsl
pop
sbb
jmp
cli
call
mov
movsl
dec
jmp
das
or
and
orb
dec
fadd
xchg
fists
fildll
push
sub
jge
mov
pushf
mov
inc
stc
into
push
adc
dec
or
in
xor
cmp
cmp
test
pop
out
cmp
movsl
jbe
mov
and
cmp
sbb
add
pop
inc
movsl
inc
mov
adc
cmp
adc
mov
in
sub
mov
es
pop
or
scas
shrb
xchg
sub
xchg
jle
mov
cmp
jb
ljmp
push
lds
fabs
rcrb
sbb
push
mov
out
cmpl
inc
das
push
push
xchg
inc
xor
mov
mov
adc
adc
mov
testb
outsb
jge
decb
cmpsb
sbb
andb
roll
pushf
pop
cmp
in
cld
fstps
mov
mov
jno
rolb
jae
sbb
xorb
loopne
cs
jmp
sbb
test
lret
cmp
add
cli
cs
inc
mov
imul
test
aam
add
push
pop
aas
pop
repz
leave
dec
incb
in
cmp
test
xor
rcl
aas
push
mov
mov
lods
pop
add
jne
imul
cmp
and
pop
xchg
jge
push
push
mov
jbe
insb
rol
enter
mov
mov
mov
dec
push
xor
fcoms
mov
mov
mov
mov
or
sbb
fdivrs
mov
jbe
adc
pop
pop
mov
mov
mov
int
push
adc
pop
out
or
mov
cli
and
dec
adc
adc
inc
rol
lret
sub
gs
les
mov
pop
jmp
inc
fs
push
insl
js
lcall
lahf
jg
sub
push
jns
adc
jb
cmp
scas
xchg
stos
push
int3
adc
jmp
scas
push
cmovo
daa
or
pusha
pop
pop
nop
jge
cmp
mov
push
cmpsl
pop
mov
mov
loop
pop
cmc
data16
fistl
xor
fnstcw
jo
gs
lret
pop
dec
dec
and
inc
arpl
lahf
xor
sub
sub
adc
outsl
ljmp
mov
jmp
add
out
mov
mov
push
jmp
neg
dec
repz
adc
pop
test
mov
cmp
and
insl
and
or
cld
push
stc
mov
mov
xchg
ret
jmp
ljmp
jmp
es
mov
xor
sub
scas
sahf
dec
leave
inc
movsl
stos
dec
cltd
mov
fwait
push
ret
xchg
or
mov
lea
aad
inc
stc
sti
push
out
pop
jp
js
mov
movsl
lret
cs
push
aas
inc
sahf
incl
jb
push
call
aaa
add
xor
shlb
sahf
ret
inc
cmp
fwait
or
clc
lods
mov
int3
jp
movsl
mov
cmp
mov
sub
pop
jge
je
int3
icebp
pop
pop
or
in
push
mov
out
and
pop
inc
leave
pusha
imul
leave
jg
and
push
dec
push
es
bound
fcmovnb
xor
add
jnp
pop
pop
and
mov
mov
add
pop
dec
dec
inc
cmp
push
xchg
mov
xor
outsl
jge
arpl
sub
test
push
insb
cmp
mov
sub
xchg
cmp
push
and
pusha
insl
jl
dec
pop
xchg
adcl
jmp
jbe
dec
shll
rcll
lea
ror
push
cld
sahf
aas
addr16
mov
test
mov
popa
xor
cmp
mov
ja
xchg
mov
pop
push
mov
xor
lock
mov
mov
mov
lret
int3
or
mov
jb
pushf
into
xchg
test
cld
xchg
xor
inc
mov
xor
arpl
int
incb
xchg
xor
cmp
outsl
sub
into
addr16
xchg
cmp
outsl
movsl
mov
int
cli
fildl
xchg
add
lea
mov
and
push
repnz
jae
outsb
push
cmp
mov
cwtl
inc
sbb
inc
cmpl
stos
out
shlb
daa
ds
xchg
sub
cmp
pop
fs
lods
sbb
mov
test
jl
sub
lea
sbb
sti
lock
mov
adc
add
rorl
mov
sbb
dec
xchg
je
mov
icebp
push
jge
add
movsl
push
and
mov
push
roll
in
repnz
and
fs
jne
aaa
in
jl
lahf
call
js
iret
add
mov
ds
xor
mov
ja
and
xor
rcll
mov
out
insl
mov
cmc
nop
fstpt
test
ljmp
lods
inc
and
iret
cltd
dec
cs
adc
dec
in
outsl
je
int
aaa
push
insb
xorl
add
cli
push
mov
fldcw
js
mov
and
call
sbb
scas
icebp
in
push
iret
fistpl
lcall
add
addr16
mov
or
jge
xchg
push
lods
pop
imul
test
nop
mov
sub
pop
jecxz
mov
mov
aaa
inc
shll
movsl
js
repnz
fdivr
mul
test
fisubrs
xchg
inc
pop
mov
xchg
sahf
cmp
adc
insl
sti
popf
icebp
jae
leave
scas
add
mov
adc
lahf
bound
cmp
je
icebp
mov
scas
mov
out
mov
push
add
stos
aas
scas
push
sbb
xchg
iret
cmpl
mov
in
outsb
pusha
mov
negl
mov
aam
mov
jnp
jae
mov
fsts
rclb
xchg
gs
lock
out
nop
push
in
sbb
push
sub
lods
add
inc
mov
aam
xor
jne
xchg
adc
imul
or
sar
mull
out
cmp
and
fmuls
push
jo
aaa
dec
dec
stc
dec
add
nop
jge
xchg
fidivrs
out
push
jo
incl
ljmp
xchg
ds
inc
lcall
xor
sbb
mov
push
sub
insl
lret
cwtl
dec
dec
push
lcall
aad
out
fs
add
and
fisubl
imul
lcall
gs
lock
inc
fnsave
aaa
ret
repz
scas
dec
and
mov
insl
dec
lods
cmp
cmp
push
xor
ret
iret
in
or
add
out
pop
inc
dec
rol
lahf
rclb
test
jo
mov
lock
cltd
xor
imull
jo
mov
loop
pushf
rolb
pop
mov
mov
out
inc
inc
mov
ljmp
jno
out
push
mov
push
mov
fs
lret
dec
or
add
lret
jo
dec
sbb
sbb
movsl
scas
and
push
repz
decb
jb
mov
and
stc
sti
dec
cltd
stc
dec
cmp
int
shr
mov
in
pop
enter
and
mov
loopne
jb
pop
push
ja
mov
filds
icebp
stos
dec
or
xor
lret
ret
push
lds
subb
mov
xor
lretw
fdivrl
test
sbb
mov
scas
stos
jmp
cmp
push
lea
inc
mov
pushf
notb
jbe
stos
lret
mov
or
or
movsb
loopne
and
into
pop
test
mov
sbb
cmc
xchg
data16
rcrl
and
cld
xor
xchg
loopne
inc
mov
add
inc
mov
and
or
jp
rclb
rclb
sbb
dec
xorb
nop
mov
andl
lahf
push
sub
pop
jge
aaa
movsl
and
xchg
sbb
jp
pop
mov
clc
test
dec
pop
cmpsl
sub
pop
push
push
stos
xchg
mov
or
push
das
jp
cmp
sti
hlt
mov
inc
and
mov
jp
xor
push
movsb
sub
popa
push
into
pop
push
lcall
stos
jo
mov
xchg
shl
lcall
or
pop
pop
add
pusha
mov
out
in
pop
std
sub
and
rclb
sub
mov
pop
sub
add
pop
lahf
xor
push
fwait
jge
cltd
push
mov
repz
pop
push
fstl
mov
jmp
aam
fistpll
lret
add
mov
aad
insb
and
mov
cmc
cwtl
and
imul
inc
add
jo
mov
pop
dec
add
push
scas
fmuls
sti
shrl
int
xchg
push
pop
cmp
sub
stos
and
outsb
cmp
xor
mov
mov
in
jns
xchg
cmpsl
out
andl
or
fisttpl
mov
imull
les
or
mov
cmpl
mov
jmp
cmc
das
lret
mov
push
iret
jbe
out
cli
pop
pop
add
dec
mov
xor
out
pushf
in
pop
sbb
clc
cld
jns
mov
mov
inc
or
cmp
aad
mov
inc
mov
aad
rcll
add
add
cmp
inc
fadds
push
sahf
dec
mov
sbb
fnsave
or
mov
outsl
mov
xchg
adcb
mull
test
adc
iret
sar
push
popa
jb
fiadds
add
push
jno
mov
ja
dec
std
xorl
mov
jne
sub
jmp
aaa
loop
fwait
jb
jbe
xchg
inc
push
shr
xor
in
pusha
orl
jnp
push
rol
mov
and
add
shl
jnp
out
inc
outsb
push
mov
jbe
repnz
push
clc
mov
dec
pop
add
shl
sbb
or
mov
xchg
insb
cmp
cmp
or
leave
outsb
imul
jae
rorl
pusha
xor
cmp
cld
adc
adc
push
aaa
je,pn
push
andb
inc
mov
push
idivl
loop
mov
adc
insl
into
xor
cmp
jns
das
rcrl
ss
sbb
and
test
mov
repz
fidivrs
stos
mov
je
adcl
mov
clc
mov
or
out
xor
xchg
push
ds
inc
jo
aam
lret
xchg
cmp
ljmp
adc
sbb
aam
leave
mov
dec
jns
and
fisubrs
dec
cltd
aam
lods
pop
scas
sbb
mov
inc
xor
call
gs
dec
mov
mov
cmp
int
mov
adc
xor
in
mov
shll
leave
sub
adc
sahf
in
in
dec
xchg
out
add
or
aam
daa
mov
dec
scas
dec
jp
push
daa
fdivl
ret
iret
push
lods
pop
sbb
mov
sub
fmulp
cmp
mov
add
dec
push
in
xor
fs
pushf
rcll
mov
adc
or
or
add
inc
sbb
std
aas
arpl
mov
push
les
adc
leave
lods
insb
xor
push
int
sub
lods
mov
mov
sti
les
push
add
add
mov
jnp
or
lea
mov
movsb
add
and
js
sbb
or
add
fmul
nop
inc
jle
addr16
push
xchg
lds
cmc
mov
ljmp
pop
int
hlt
adc
push
std
hlt
pop
cmp
jne
push
in
scas
sbb
pop
or
pop
dec
insb
pop
aam
jo
aas
sbb
xchg
inc
andb
push
div
mov
inc
push
mov
mov
imul
sub
pusha
or
xor
jne
fstpl
xchg
hlt
mov
or
arpl
fs
push
cltd
leave
inc
sti
xabort
in
adc
sbb
xor
jnp
xor
dec
xor
mov
adc
out
or
mov
clc
imul
fcmovnu
push
in
xchg
pop
out
add
sbb
pop
insl
leave
jg
add
sbb
mov
push
add
sbbb
out
push
int3
cmp
mov
roll
xor
jmp
lret
mov
test
xchg
test
pop
mov
insl
push
push
sbb
into
call
add
cmp
cmp
jg
mov
jp
or
icebp
xchg
pop
adc
push
inc
stc
fisttpl
mov
sub
or
arpl
cld
push
lods
xlat
shll
push
push
dec
or
inc
movsl
mov
stos
nop
push
jecxz
mov
push
push
mov
adc
fs
pop
insl
and
ss
ss
push
imul
imul
fwait
cli
add
xor
jle
pop
movb
out
loope,pn
jl
out
mov
mov
repnz
pop
dec
and
pop
test
cli
inc
repnz
iret
addr16
push
xor
pop
lods
das
sbb
into
xchg
jmp
jge
les
pop
stos
and
sub
jno
aad
mov
das
xor
push
cmp
into
filds
bound
insl
fildll
rolb
int
or
dec
add
imul
lret
sbb
sti
mov
sub
sub
mov
gs
mov
dec
and
inc
xchg
add
fnsave
pop
mov
mov
iret
mov
xadd
jno
sub
ja
ret
insb
stos
das
xor
stos
sub
pushf
cmpsl
lods
fwait
lret
into
adc
jmp
mov
sub
sub
push
ret
aaa
mov
inc
pushf
aaa
adc
stos
adc
ret
stos
mov
xchg
out
mov
xor
xchg
ds
mov
xchg
pop
jge
cwtl
in
push
movsb
repnz
test
mov
jae
xchg
iret
xchg
push
aas
sub
and
sub
shll
mov
call
fwait
dec
jle
and
or
lret
xchg
fcom
mov
imul
lock
gs
jo
shl
out
pop
xchg
sub
mov
outsl
xchg
pushf
int3
or
cmc
push
push
jle
lret
pop
xchg
scas
rcrb
inc
bound
ret
out
pop
pusha
push
sahf
movsl
cli
inc
jl
stos
sbb
jmp
clc
into
sub
out
jmp
mov
mov
mov
mov
xchg
sahf
jle
es
push
mul
add
insb
xchg
leave
push
or
mov
dec
adc
dec
mov
cltd
dec
movsb
fidivs
pop
inc
gs
lcall
sbbb
sub
jbe
aad
xchg
sbbb
jmp
pop
or
sbb
out
je
sbb
rorb
lahf
cwtl
xchg
dec
xchg
fwait
cmp
out
pop
add
addr16
cltd
lret
loopne
cwtl
inc
scas
mov
stos
dec
adcb
xchg
test
ljmp
add
add
lcall
das
fsts
lret
fsub
mov
fwait
sbb
inc
adc
inc
mov
test
xor
cmp
popa
lcall
js
sub
sub
mov
sub
xor
movsb
jl
js
mov
adc
xor
dec
pop
js
xor
jmp
lahf
lods
inc
sbb
out
adc
mov
out
out
lret
add
sub
push
dec
arpl
sahf
add
arpl
in
jne
jle
in
jmp
cltd
pop
or
sbb
scas
mov
test
addl
inc
jnp
and
mov
push
jb
in
rcrb
mov
test
int3
jbe
add
push
xchg
jg
insb
sub
adc
stos
add
popf
mov
fxch
aas
xchg
add
sub
mov
add
bound
push
push
push
in
imul
scas
and
or
fsubrs
mov
push
repz
imul
add
aas
push
negl
or
pop
sbb
fidivrl
cmpsl
insl
lret
add
in
out
push
pop
mov
orl
jle
and
adc
sti
es
pusha
nop
inc
lods
xor
dec
xchg
jne
mov
jg
sti
es
adc
test
inc
aas
cmpsb
out
cmp
icebp
out
fisttps
scas
xor
js
andl
lods
das
xor
das
dec
adc
xchg
cmpsl
pop
xchg
inc
mov
sub
sarb
sahf
ljmp
mov
fs
cmp
cld
pop
out
xchg
ja
mov
sub
mov
xlat
xlat
mov
in
mov
add
shrd
popa
cmp
outsl
lock
std
data16
es
jle
inc
sti
sub
outsb
and
stc
scas
sbb
inc
sarl
aam
xor
loop
push
in
jecxz
jae
jge
into
es
inc
movsl
mov
mov
mov
adcl
std
cmp
adc
lock
cmpsl
sub
addb
outsb
mov
repz
imul
js
bound
lret
shlb
int
fnstenv
jle
mov
add
inc
sti
into
xchg
pushf
in
rorl
inc
loope
std
cmpsb
lcall
lock
bound
mov
test
push
pop
xor
mov
add
out
aas
rcll
fcomp
ret
test
flds
push
mov
sbb
data16
xchg
mov
test
loop
jge
pop
test
pushf
adc
lods
mov
les
adc
mov
adc
push
call
cmp
adc
push
cmc
insb
xchg
sub
dec
xlat
inc
and
cltd
cmpsb
inc
push
js
rclb
and
loopne
jp
sbb
ss
mov
add
sbb
fldt
xchg
xor
fisubl
shlb
sbb
inc
repnz
pop
fwait
int3
scas
enter
and
pushfw
loope
inc
mov
sbb
pushf
sbb
adc
jp
pop
jnp
dec
xchg
in
sub
scas
daa
movsb
call
lea
jp
int
inc
lea
lea
adc
adc
jnp
mov
out
mov
lret
pop
out
loopne
mov
subl
loope
inc
repz
and
sbb
sub
lods
call
loope
jo
lret
push
adc
mov
push
pop
cmpsl
and
xlat
fimull
mov
stos
jbe
xchg
stc
cmp
cmp
push
and
stos
push
or
xor
insl
fwait
pop
flds
fisttpl
mov
rclb
insb
fisttps
adc
mov
jbe
imul
xorb
inc
mov
jo
gs
inc
sub
cmpsl
aam
mov
bound
scas
and
dec
adc
inc
imul
popf
nop
iret
aam
dec
xor
out
inc
cmc
popf
and
or
or
sub
loopne
jae
jbe
mov
lret
sbb
leave
sbb
dec
mov
mov
cmp
std
pop
jbe
sahf
outsb
int
lods
push
repnz
xchg
jns
rol
lods
mov
data16
mov
inc
mov
push
xchg
loopne
pop
shrl
xchg
enter
adc
popf
cwtl
arpl
sbb
popa
mov
sub
gs
inc
mov
push
inc
adc
jecxz
xor
push
ret
jbe
ficompl
and
push
int3
out
lds
mov
loope
mov
subb
adc
std
push
lock
and
stos
ja
repnz
and
sub
pop
mov
in
mov
push
shlb
cltd
dec
adcb
pop
aad
xchg
jg
adc
mov
sub
adc
xchg
int3
jge
dec
cmp
dec
adc
int
fidivrs
mov
cmp
loopne
jbe
icebp
aas
cmc
pop
mov
sub
sub
jo
mov
nop
lods
sub
cmp
scas
lock
mov
iret
sahf
orl
cmp
pop
dec
and
out
add
roll
xorb
xchg
popa
into
xchg
subl
add
mov
repnz
jge
inc
adc
nop
mov
stos
mov
pop
cmc
subb
and
lahf
xor
mov
imull
fistps
inc
aaa
pop
adc
repnz
xlat
out
out
inc
or
lods
push
out
pop
add
dec
dec
pop
xor
pop
xchg
jmp
adc
xchg
sarl
scas
aaa
shll
mov
add
jle
iret
jg
ja
xchg
test
cmovbe
sahf
xor
fnsave
lock
mov
insb
mov
rclb
fbstp
mov
jl
adc
adc
rcrb
or
and
loop
movsl
mov
inc
xchg
aad
mov
js
ror
inc
mov
fsub
xchg
pop
lcall
andl
test
loopne
aam
cld
xor
aaa
int3
les
ret
movb
sub
test
cli
push
ret
add
adc
sti
lods
adc
adc
ds
pop
xchg
fcomps
and
adc
push
or
test
dec
mov
inc
jae
mov
cmpsl
sbb
std
jmp
sbb
and
sbb
repnz
inc
mov
xor
scas
and
jmp
mov
fnstenv
testb
cmp
and
lahf
jmp
sub
test
frstor
fwait
adc
pop
push
fidivs
add
pop
aad
xchg
cmp
call
mov
and
push
pushf
cld
push
mov
enter
push
pop
dec
add
dec
sahf
mov
pop
sub
in
leave
or
xchg
cmp
data16
adc
lea
mov
call
fs
test
sub
loope
out
aad
addr16
cs
dec
insb
pop
dec
popa
mov
pop
insl
mov
in
shl
jb
xchg
cmpsl
mov
scas
das
in
mov
shrb
xchg
fmull
decl
sub
cmp
mov
ror
enter
mov
or
ss
scas
pop
pusha
cltd
mov
jo
sbb
cwtl
loopne
mov
lret
mov
out
push
push
xchg
xlat
cvtpi2ps
pop
push
out
loopne
mov
test
pop
out
aad
push
mov
adc
fisubs
imul
pop
stos
xchg
mov
lcall
test
iret
dec
fwait
adc
sbbl
jns
cmc
call
adc
sub
jo
dec
mov
mov
or
popa
lods
push
mov
adc
dec
xor
dec
pop
aad
sub
push
lock
aam
mov
sar
and
xchg
push
or
push
adc
lods
mov
insl
jmp
inc
xchg
push
pop
lret
fwait
dec
xchg
sbb
test
jb
add
mov
pop
ret
mov
add
cmpsl
scas
dec
jb
call
insb
add
cltd
and
xchg
jecxz
xchg
sbb
fwait
pop
shl
jl
out
pop
cmp
jp
jmp
jecxz
mov
inc
or
jp
cmp
xor
leave
pop
mov
or
jb
test
cmp
xor
loopne
lds
lret
call
ret
pusha
jmp
popf
shlb
cli
adc
jle
daa
sbb
mov
sbb
push
push
bnd
sub
out
jnp
gs
sar
xchg
insl
lret
jmp
sub
in
es
hlt
pop
mov
mov
out
mov
cmp
sub
neg
pop
stc
loope
jo
inc
push
mov
xchg
or
and
aam
sbb
xor
inc
arpl
and
adc
into
cmp
cmpsl
add
std
ljmp
cmpsl
xchg
mov
nop
pop
or
inc
shlb
mov
jo
rclb
popf
mov
cs
sbb
into
out
pop
pop
mov
aam
test
adc
in
sbb
dec
dec
das
and
stos
leave
cltd
jb
sbb
divps
and
inc
jnp
dec
in
pop
add
pop
adc
jne
out
cmpb
fcomp
movsb
jb
push
cs
iret
xorb
pop
pop
sbbl
jb
mov
ds
ret
xor
mov
mov
xor
push
iret
shl
jecxz
std
int3
jmp
fadds
xchg
push
add
sub
pop
sbb
mov
insl
mov
mov
jle
inc
mov
or
cmpsb
push
aam
lcall
sub
pop
aaa
cli
jae
xor
test
out
leave
dec
aam
push
divl
inc
loop
xchg
lahf
into
mov
sub
pop
push
popf
jae
sub
rcr
xor
outsl
pop
popa
fcomip
and
test
mov
xlat
cmpsb
rolb
mov
cmp
sbb
insb
aam
or
push
shll
mulb
xchg
pop
sbb
rcll
lahf
and
insl
stc
cmp
pop
imulb
xor
mov
inc
das
jg
mov
sbb
fucom
and
or
subb
test
cwtl
aad
mov
inc
clc
gs
mov
fstl
sbb
cwtl
push
jge
ret
mov
bound
les
je
and
or
stos
adc
dec
fldt
and
adc
mov
cmp
insl
mov
cmp
lock
lods
scas
andb
scas
sbb
push
fwait
pop
and
pop
push
out
es
jle
xchg
pop
popa
fldcw
mov
in
sub
aad
sbb
cmp
lcall
sub
cwtl
js
ret
push
scas
adc
inc
cmp
pusha
mov
repz
pop
arpl
push
xchg
sbb
bound
add
push
jge
icebp
mov
pop
lahf
mov
jmp
push
mov
xor
mov
in
jbe
insb
xchg
into
fldt
ret
hlt
es
jbe
nop
sub
xchg
cli
es
popa
or
xchg
and
scas
lea
sub
cmp
out
fmuls
lea
mov
xchg
xor
ret
pop
stos
jbe
pop
mov
or
std
fs
adc
sub
mov
daa
add
push
add
push
mov
jg
dec
dec
dec
mov
xchg
jne
cmp
jns
arpl
inc
pusha
inc
mov
push
mov
sub
cmp
push
out
outsl
or
into
push
dec
lds
les
test
xchg
bound
push
cs
jecxz
or
jno
sti
add
add
mov
fwait
mov
sbb
in
sbb
mov
or
ds
xlat
dec
xchg
insl
mov
add
dec
sbb
and
ss
pop
mov
sbb
aam
jns
in
movsb
mov
xchg
outsb
in
mov
jg
sbb
jge
imul
push
dec
jle
lds
mull
shlb
repz
test
dec
loopne
mov
xor
jae
mov
add
mov
aaa
out
sub
push
dec
push
cmpl
or
addl
push
ljmp
out
popf
subb
xor
adc
adc
push
sbb
aas
fwait
gs
ja
pop
or
pop
xor
cltd
stos
sbb
and
fsubrl
jnp
xchg
int3
cltd
mov
stos
cli
rcl
inc
add
test
mov
ss
fadds
cmp
ret
mov
mov
cltd
flds
jno
aas
xor
sbbl
lea
vrsqrtps
xorl
jno
mov
dec
xor
xor
daa
adc
mov
pop
or
stos
push
jecxz
lds
jp
jecxz
jo
pop
orl
ret
call
sub
mul
and
scas
cli
xchg
sub
pop
cmpsb
cmp
popa
out
jp
jnp
xchg
ss
xor
xor
jne
or
cmp
sbb
add
xchg
jge
adc
cmp
xor
pop
dec
jbe
movsl
and
xorb
cltd
sbb
popa
mov
push
lds
sahf
xchg
arpl
call
dec
jb
popf
out
popf
xor
scas
xor
cmc
add
dec
inc
cmp
lret
fdivrl
fists
dec
adc
xchg
lods
imul
or
jnp
xchg
call
ss
negb
popa
or
xchg
aam
push
mov
dec
lret
loope
jne
mov
lcall
iret
inc
push
mov
xchg
test
cmpsb
popa
inc
stc
add
into
and
jg
and
aas
jmp
cmpb
nop
cmp
sti
lcall
aad
test
push
push
imul
inc
sub
xchg
outsb
xchg
mov
shll
sub
fwait
jg
rclb
push
cmp
adc
sbb
fldcw
cld
mov
or
mov
test
mov
sbb
add
mov
into
int
mov
xorl
mov
xor
fnstsw
cmp
mov
nop
insb
jnp
inc
fldenv
cmp
sub
inc
and
cmp
mov
xchg
cmp
or
mov
stos
inc
call
mov
mov
idivb
fiadds
xabort
imul
lock
dec
sar
js
pop
sub
dec
repnz
jno
clc
lock
test
or
js
imul
cmpsb
in
or
push
jp
sahf
pusha
and
xchg
je
mov
add
or
mov
and
fs
nop
sbb
scas
gs
mov
sbb
fs
divb
int3
ret
inc
pop
cwtl
lea
in
pop
sbb
aad
loopne
out
pushf
xchg
bound
mov
xchg
popa
dec
adc
push
xor
pop
and
das
lret
adc
and
out
mov
inc
xchg
mov
outsl
jl
dec
filds
in
decb
xchg
jbe
mov
mov
pop
loopne
pop
inc
mov
or
insb
enter
sbb
xor
inc
ljmpw
add
xchg
sbbb
fs
xchg
fsubrl
push
adc
jno
xchg
orb
mov
cmpsb
ja
iret
imul
movsl
xor
hlt
out
cmc
mulb
imul
aad
adc
push
out
sbb
cmp
in
pop
shr
sti
ficomps
lahf
loopne
lret
mov
jle
push
inc
add
lahf
sub
inc
inc
popa
jge
loop
add
loopne
and
jb
ffreep
out
xchg
aad
cmp
ret
loop
xor
push
and
sbb
or
aas
add
add
fcoml
adc
loop
cmp
dec
test
inc
fs
xchg
fidivrl
add
test
jg
into
hlt
adc
jle
popf
xchg
lcall
mov
aad
lea
cmp
sub
pusha
push
add
xchg
fsts
dec
jae
jge
push
sbb
sarl
testl
iret
adc
imul
push
loopne
outsl
sbbl
dec
mov
mov
xchg
xor
fdivrs
cwtl
ja
cmp
pop
push
jns
lds
leave
fucomp
cmp
jl
movsb
hlt
mov
inc
leave
fiaddl
xchg
scas
cs
lcall
pop
push
scas
and
scas
or
push
dec
insl
add
mov
leave
ret
scas
dec
mov
mov
push
pusha
push
gs
nop
testl
sti
push
pop
js
xchg
popf
daa
push
insb
push
mov
pop
inc
sbb
jno
mov
cld
sarl
pop
imul
rclb
test
out
imul
loope
fidivrs
int
inc
repz
push
mov
mov
call
add
int
test
push
push
adc
jae
jo
xor
xchg
and
inc
mov
mov
leave
mov
inc
addr16
jnp
inc
cmp
lcall
gs
push
cmpsl
mov
add
out
mov
fstpl
mov
icebp
adc
lds
lahf
ja
clc
sbbb
fsubrl
hlt
jne
mov
pop
push
and
mov
aas
dec
cmpsl
fs
les
xchg
xchg
add
cs
jmp
sti
mov
in
data16
lahf
xor
popf
out
mov
xchg
push
outsb
inc
inc
addr16
adc
test
outsl
push
or
test
movsb
data16
aas
add
push
ja
sbb
jmp
mov
pop
js
sub
push
out
jl
sahf
jno
lret
lods
repz
test
bound
mov
and
mov
inc
cmp
cltd
insb
test
add
or
fs
cwtl
jmp
pop
std
xchg
add
imul
jl
lret
out
call
and
push
loopne
lcall
out
out
cwtl
add
in
test
mov
ljmp
adc
es
outsb
dec
movsb
bound
movsb
pop
ds
insb
addl
inc
sub
push
das
dec
das
lods
fldl
and
and
adc
out
xchg
leave
jne
sbb
nop
jp
sub
pushf
xchg
adc
das
xlat
jp
lahf
lret
mov
loop
subl
pop
ret
mov
nop
out
mov
in
dec
jns
dec
and
mov
aas
out
aam
and
mov
and
cmp
nop
xor
jmp
xchg
mov
in
add
cmp
xchg
shl
aad
cli
sub
sbb
mov
push
cld
je
out
push
inc
cmc
outsl
repz
daa
cmp
adc
lea
push
stos
and
stc
push
popa
mov
inc
ds
pushf
mov
cmpsl
cmp
cmc
gs
dec
sbb
and
aam
ss
bnd
data16
push
into
xor
xor
mov
pop
mov
mov
xchg
xchg
cs
xor
pusha
add
mov
mov
pop
call
pop
cs
xor
insl
xchg
xchg
loop
lods
mov
lahf
push
lret
jmp
out
mov
pop
mov
sub
stos
popf
or
popl
push
sbb
mov
test
fistl
push
sub
xchg
bound
jge
les
stc
mov
js
repnz
or
mov
shrb
mov
scas
push
ret
xchg
sbb
std
mov
je
jle
xchg
push
ficoml
fdivl
lcall
inc
cmp
xlat
mov
dec
xor
add
or
pop
and
pop
inc
hlt
iret
ret
and
std
xor
pop
push
inc
mov
mov
mov
dec
js
insb
inc
cmpsl
int3
push
out
add
dec
inc
mov
shll
cmp
mov
mov
add
and
mov
jg
cs
pushf
scas
inc
sub
icebp
jno
dec
insl
mov
or
push
movsb
pop
adc
dec
mov
clc
sbb
or
shrb
popf
leave
sbb
ljmp
mov
shll
jle
mov
les
outsb
jge
jb
mov
or
nop
mov
leave
mov
in
test
int
xchg
inc
loope
fcmovu
leave
fdivs
ja
mov
add
xor
inc
jmp
enter
sbb
xchg
adc
pop
les
xorb
mov
lea
pushf
fdiv
call
hlt
pop
aam
sti
in
jl
addr16
dec
pop
adc
rorl
pop
xchg
ret
jmp
xor
or
xor
enter
pop
sbb
jg
xchg
lcall
fisubrl
push
into
or
jo
inc
bound
and
push
scas
stc
cmp
jb
xor
adc
sti
cmc
adc
sbb
inc
mov
push
insl
aaa
cmp
arpl
push
imul
outsl
bound
jecxz
pop
push
call
pop
xchg
mov
pop
sti
daa
fsub
mov
fs
or
xor
sbb
imul
or
subl
lods
push
int3
bnd
and
jl
in
loope
lahf
xchg
dec
adc
xchg
sti
xchg
enter
out
jg
rcrl
add
cmpsb
push
xchg
cmp
out
xchg
xor
sub
add
xchg
jle
mov
pop
iret
mov
sahf
pop
pusha
stos
dec
jo
addr16
imul
sti
jne
cmpsl
std
cmp
or
push
or
lea
imulb
xchg
fsts
in
add
lods
pop
push
push
movsb
sub
mull
lahf
scas
xchg
aas
pop
jbe
mov
rclb
aad
test
addb
clc
xor
ss
mov
cmp
mov
sbb
insl
mov
nop
jne
mov
in
inc
inc
jb
xor
loop
add
pop
int
dec
outsl
jne
push
dec
icebp
leave
add
leave
shrl
mov
out
mov
lret
addr16
stc
jbe
test
jecxz
and
xor
les
push
cmp
sarl
std
inc
scas
adc
xchg
adc
jle
inc
sar
je
jecxz
inc
mov
clc
aam
inc
leave
mov
push
dec
negb
inc
jecxz
xlat
jns
cltd
in
cmp
add
xchg
dec
mov
cmc
jae
les
mov
pop
movsl
mov
rorb
push
inc
mov
int3
cmp
es
jb
mov
sbb
and
shl
aas
out
adc
cmp
and
aam
mov
mov
pop
pop
arpl
test
je
push
ja
scas
rcr
inc
mov
les
and
mov
pop
add
out
arpl
sub
jle
clc
aas
outsb
out
subl
cmpsl
mov
andl
shlb
jo
rcl
ret
xchg
mov
dec
in
ss
adc
jo
pop
inc
push
inc
xchg
inc
sbb
aaa
pusha
or
xchg
cwtl
insl
xchg
add
mov
aad
gs
fcmove
push
dec
jo
lret
sarb
ljmp
aad
fs
addb
push
movsb
mov
sbb
sub
repnz
hlt
loop
dec
xchg
iret
cmp
jle
xchg
out
fcompl
sub
int
out
pop
or
mov
insb
push
cmp
cmp
bndldx
mov
mulb
or
xchg
jne
push
mov
or
mov
push
arpl
sbb
popf
insb
insl
mov
lods
pop
or
addr16
out
sbbl
jo
testb
jl
andl
outsb
iret
mov
sbb
mov
sub
push
inc
pusha
ret
adc
push
test
add
sar
addb
sub
in
fsubrs
sbb
adc
test
stos
out
or
mov
ficoms
rcrl
jl
gs
dec
sbb
enter
imul
xor
fnstcw
in
mov
add
popf
and
test
mov
cmpsl
outsl
sub
adc
mov
xchg
js
mov
cmp
sar
fcomps
ljmp
ret
imul
rcll
shl
cli
cmpsl
stos
sbb
xchg
jle
pop
filds
cwtl
pop
push
or
xchg
jl
dec
pop
xor
jg
mov
mov
push
in
push
dec
push
push
dec
xor
in
mov
pushf
repz
xchg
cmp
cld
pop
sub
jp
data16
sahf
aas
frstor
cmc
pushf
pop
mov
pop
out
je
gs
lcall
fnclex
leave
in
pusha
out
jge
add
jns
rcrl
push
xor
and
out
push
data16
or
cmpsb
push
mov
mov
test
lock
lods
mov
lret
push
xor
xchg
cltd
add
mov
dec
ss
outsl
inc
cmp
loop
sbbl
lret
sub
outsb
std
sbb
in
mov
xor
mov
xchg
cmpsl
sbb
add
add
jb
dec
fwait
mov
mov
xor
mov
movsl
ret
jns
cmc
push
mov
and
into
adc
daa
xor
inc
adc
pop
dec
in
jmp
out
cmp
arpl
cmpsb
lods
leave
and
push
fldl
movsb
aaa
push
cmp
push
push
add
rclb
mov
add
ss
push
xorb
in
iret
out
std
push
push
das
mov
sbb
daa
mov
cwtl
jmp
push
shll
ljmp
lea
icebp
ret
inc
jno
jge
pop
insb
mov
jnp
inc
dec
add
enter
stc
mov
loop
add
loopne
push
imul
xchg
test
not
scas
ret
push
pop
lods
push
xchg
imul
sbb
mov
sbb
lock
pushf
outsl
sti
xor
jg
sbb
jge
pop
out
sbb
sub
fldcw
jmp
cmp
push
jno
jmp
inc
mov
iret
insl
add
mov
push
push
sub
and
test
flds
add
mov
pushaw
sarb
repz
fs
or
rolb
out
out
outsb
jo
mov
or
in
mov
mov
push
cmc
cwtl
dec
repz
or
icebp
mov
pop
cld
dec
clc
fs
mov
xchg
paddb
sbb
cmp
ljmp
cmp
xchg
dec
or
out
stc
out
xlat
test
loope
mov
pop
cmpsb
xchg
inc
outsl
in
ljmp
fisubrs
xor
arpl
sbb
lahf
adc
sub
loopne
ljmp
jb
movsb
test
pop
pop
adc
rcr
xor
xor
xor
stos
test
fdivrs
xchg
jb
mov
lock
lea
stos
mov
dec
xor
frstor
stos
adc
adc
rcll
dec
cmpsb
lret
pop
xor
subb
sbb
xchg
sub
mov
mov
pusha
into
mov
xchg
jo
xchg
push
xor
add
cs
xchg
lods
mov
repz
sub
daa
ljmpw
cli
aam
scas
mov
daa
lahf
xchg
mov
lret
cmp
mov
sub
ss
pop
ret
add
dec
sbb
dec
adc
push
jbe
inc
rcr
push
pop
in
push
mov
loopne
out
adc
cltd
fsubs
pop
sub
jl
xor
stos
mov
xchg
lret
xor
addr16
xchg
xchg
adc
gs
ret
outsl
xchg
xlat
mov
rcrl
es
adcl
dec
int
sbb
loope
or
out
cmp
jg
fdivl
outsb
fsubp
push
pop
rclb
cltd
out
push
fs
mov
jmp
push
xchg
mov
mov
xchg
mov
setnp
mov
test
sub
addr16
pop
or
xor
add
xchg
mov
in
clc
xchg
or
jg
in
add
pop
movsl
jns
sub
dec
sbb
sbb
jecxz
sti
lahf
data16
sbb
insb
mov
and
loopne
popf
add
xchg
leave
xchg
test
dec
ja
or
jmp
repnz
ja
outsl
cwtl
icebp
jmp
fistl
and
leave
xchg
int3
es
je
js
sub
inc
push
std
sbb
aas
scas
pop
mov
aaa
or
mov
enter
outsl
ss
in
pop
adc
mov
pop
mov
mov
js
pop
adc
and
fidivs
dec
test
movsb
push
aaa
mov
jbe
arpl
clc
xor
push
inc
adc
jbe
dec
cmp
cwtl
xchg
sub
xor
dec
icebp
xchg
sub
mov
imul
lret
jecxz
aam
add
or
jb
xchg
mov
out
and
imul
dec
xor
and
mov
loope
xlat
stos
inc
roll
int
jno
icebp
lret
bound
mov
popa
jb
cmp
sbb
inc
inc
call
mov
xchg
outsb
bound
mov
sub
scas
aaa
jno
stos
push
add
cmp
cmpsl
xchg
shl
les
pop
cli
in
pop
adc
or
cli
inc
shlb
mov
fwait
mov
cmp
lock
dec
xor
scas
loopne
popf
lret
xchg
pop
nop
jnp
ror
or
add
cmp
jg
jle
rorb
jl
sbb
push
sub
mov
sbb
sub
rcr
rcrb
stc
push
dec
add
outsl
and
mov
test
add
es
mov
inc
pop
jp
dec
pop
pop
fdiv
or
out
push
dec
pop
mov
sbbb
outsl
outsb
out
sarl
cmovae
fisttpl
inc
jae
lret
push
xabort
push
or
das
and
xor
pushf
mov
ds
pop
xor
mov
rorl
pop
or
xlat
mov
sbb
ud1
cltd
mov
mov
dec
out
xchg
mov
jecxz
adc
in
je
pop
test
int
and
ss
sahf
pop
fisubl
xchg
xchg
sbb
add
add
stos
pop
pop
dec
pop
xlat
outsl
xchg
xor
movsl
ds
test
pop
cmp
sub
jno
fisttps
fisttpll
and
fldenv
test
mov
test
push
sbb
add
bound
push
mov
sbbl
xchg
out
sti
stc
jne
in
mov
cmp
fs
pop
mov
clc
rclb
sub
and
insb
jns
aad
cmp
mov
pop
and
inc
sbb
sbb
pop
sub
push
test
shr
shll
fwait
test
and
or
jge
shll
subb
push
or
cmp
bound
jle
xchg
lret
repnz
mov
pop
lock
fnsave
mov
or
lods
jne
sub
aad
lahf
inc
inc
mov
incb
xor
insl
dec
push
adc
and
dec
pushf
and
loope
scas
stc
loop
and
pop
and
sbb
add
fwait
sbb
rcrb
fwait
in
int3
sub
xchg
fs
loope
xchg
fs
pop
lods
fmulp
cwtl
add
dec
pop
mov
aam
xchg
insb
enter
fwait
rcll
dec
pop
xor
add
pushl
pop
lods
scas
iret
movsb
inc
jbe
pop
outsl
pop
jge
int3
sub
xor
mov
cmp
pop
xor
xor
int
ss
dec
ret
pop
aad
arpl
aaa
imul
loop
xchg
push
js
xchg
dec
xchg
pop
push
into
popa
loopne
sbb
rcll
lret
jne
jnp
cld
mov
nop
ret
jno
jnp
aas
xor
cwtl
inc
pop
mov
pushf
mov
mov
js
add
add
or
clc
cltd
cmc
test
outsb
push
or
cmp
xor
lock
inc
push
popf
pop
add
mov
js
or
sbb
in
sub
add
mov
movsb
loope
mov
aad
cmp
ja
inc
and
ljmp
rcll
enter
sub
push
fdivl
ficoml
xlat
jmp
pop
sub
cmp
xlat
fistpl
push
es
aas
insb
and
out
xor
mov
testb
fnstcw
ss
mov
cmp
cs
xlat
outsb
xchg
cmpsb
adc
nop
inc
xor
pop
cmp
aaa
adc
mov
inc
or
clc
sbb
daa
fcmovb
xor
ja
push
inc
mov
mov
hlt
in
mov
bound
loopne
in
mov
jmp
xchg
sub
push
pushf
rcll
outsl
sub
sbb
push
add
ret
dec
mov
aad
sub
daa
nop
rcrb
push
lcall
icebp
dec
iret
aad
cmp
lea
insb
pop
mov
das
mov
xlat
xor
hlt
scas
shl
fsubrp
inc
or
addr16
dec
lret
push
and
xchg
sbb
dec
inc
push
stos
cs
cmp
repnz
mov
fdivp
adc
mov
adc
inc
fs
lret
popa
dec
adc
loopne
fidivs
sub
mov
aad
sbb
ja
sub
push
arpl
push
ret
cmpsb
jl
pop
in
test
jbe
stos
jmp
pop
imul
arpl
js
mov
jae
push
sub
imul
sub
jno
loope
and
rcll
dec
mov
mov
loopne
sbb
mov
sbb
push
aas
imul
fistpl
xchg
add
dec
adc
stc
jnp
adc
or
xor
jo
push
push
fcoms
insl
push
inc
clc
dec
pop
adc
xchg
vmaxps
xor
inc
xor
ret
inc
inc
dec
lahf
mov
jmp
add
mov
ljmp
and
addr16
adc
dec
insb
adc
ljmp
sub
cmp
arpl
adc
scas
dec
loop
or
int3
xchg
out
jbe
mov
mov
xlat
xchg
add
push
cld
iret
jbe
cmp
aaa
sub
mov
pop
jo
dec
addr16
push
stos
mov
jp
lods
inc
sti
ret
mov
sbbb
mov
add
movsl
xor
sub
in
lret
bound
gs
loop
cwtl
pop
scas
andl
fstpt
movsb
sti
pop
aas
pushf
nop
xchg
lahf
dec
mov
enter
push
push
xchg
mov
test
or
adc
mov
dec
mov
jne
xor
add
aam
fcmovnb
imul
push
sub
dec
in
out
daa
jno
mov
scas
sub
cmp
sbb
int
mov
lahf
fildll
jnp
jmp
sbb
jb
xchg
fld
insl
daa
sub
adc
adc
mov
repnz
iret
sarb
or
cmpsl
or
sahf
in
add
or
xchg
push
stc
pop
or
pop
and
pop
mov
iret
aam
pushf
sarb
mov
in
and
rcrb
lods
mov
repnz
mov
push
imul
outsb
adc
cmp
pop
xchg
cmp
add
xchg
sbb
push
jb
dec
and
inc
push
pop
mov
idivb
xor
adc
repnz
xor
fstl
xor
inc
fcompl
cmc
mov
into
test
ljmp
out
push
xchg
push
insl
aad
idivb
stos
inc
mov
mov
xchg
add
mov
fwait
mov
cmpb
mov
addr16
hlt
sub
fbstp
inc
add
outsb
mov
inc
inc
mov
cmc
call
jecxz
lret
jl
add
add
adc
mov
loope
or
jecxz
mov
ret
call
and
inc
push
lds
cmp
sbb
fsubrs
hlt
inc
test
jg
inc
cltd
daa
cmpsb
sub
xor
daa
sub
mov
cmpsl
bound
mov
cli
insl
push
xchg
or
adc
adc
aas
adc
addr16
and
mov
imul
cmpl
mov
xchg
push
test
lds
arpl
jns
mov
mov
call
jbe
loopne
xor
xchg
cmp
mov
push
inc
push
xchg
mov
sub
jnp
jmp
xchg
mov
or
push
mov
repz
sbb
daa
xchg
hlt
mov
cmc
scas
or
mov
test
les
xor
pusha
iret
push
mov
sbb
xor
jns
sbb
pop
mov
int
lea
xchg
dec
stc
push
pushf
pushf
push
movsb
cmp
mov
jne
lods
mov
dec
arpl
les
cltd
in
push
adc
mov
cmp
pop
cwtl
mov
ret
nop
imul
es
mov
mov
jnp
in
sti
ret
inc
mov
inc
push
adc
jo
cltd
cwtl
xor
jecxz
adc
xchg
subl
std
insb
fstps
pop
mov
fdiv
cmp
bound
xchg
lret
or
cmp
sbb
lahf
xchg
outsl
out
adc
xlat
imul
push
or
dec
cmpsl
out
or
in
fildl
jnp
jbe
push
xorb
or
ret
lea
jmp
jo
out
incl
dec
push
ficompl
dec
ret
xchg
and
nop
adc
cmpsl
andl
xchg
mov
ljmp
mov
push
sbb
pop
adc
sub
dec
popa
pop
lahf
mov
cmc
jae
shll
jno
movl
mov
xor
xchg
push
popf
mov
jns
jbe
pop
xor
jb
pop
arpl
jnp
cmc
jecxz
mov
jmp
xchg
aad
mov
mov
pusha
data16
or
cmp
test
xchg
fsubs
jbe
fildll
pushf
pop
aad
pxor
sbb
int
pop
pop
mov
pushf
mov
cwtl
inc
dec
into
cwtl
sub
insb
xchg
mov
call
adc
mov
cltd
test
cmpsb
cltd
into
int
pop
pop
loopne
mov
pop
fmull
fcoms
pop
push
fbstp
call
pop
push
xchg
int3
and
xchg
pushf
mov
pop
xor
cmp
mov
ljmp
xchg
mov
dec
in
test
cmp
add
inc
pop
inc
mov
dec
cmpsb
clc
pop
xchg
xor
push
jg
ds
insb
cmp
mov
xlat
pop
cli
mov
js
sub
or
xor
scas
pushf
sub
adc
out
add
sub
fwait
push
sub
xchg
mov
mov
jo
aam
jb
into
test
rcrb
lock
aaa
add
repnz
pop
dec
push
or
pop
cmp
cmpsl
enter
add
out
mov
push
insl
sub
xor
push
hlt
dec
xor
std
shr
jbe
pop
bound
inc
leave
mov
lods
pop
mov
dec
and
fisubl
fdivl
sub
pop
lcall
outsl
cmp
mov
pop
pop
push
pusha
enter
insl
pushf
in
adc
mov
mov
push
lret
adc
out
sahf
mov
mov
add
insl
jg
mov
xchg
stc
push
andl
fldt
std
pop
push
push
mov
mov
mov
das
mov
arpl
mov
mov
int
lcall
dec
xchg
xor
insb
adc
imul
scas
and
loopne
cld
and
in
stos
sub
lret
or
jns
xchg
loopne
inc
push
and
push
inc
add
leave
repnz
and
push
test
into
push
repnz
mov
mov
mov
popa
in
push
xchg
mov
or
jp
repz
test
popa
mov
mov
adc
cmpsl
lret
cmp
test
mov
shrb
sarb
insl
lods
mov
rep
loop
pop
jmp
adc
sbb
je
sub
push
xor
sbb
sub
es
mov
arpl
test
push
cmpsl
mov
xor
sti
and
stc
stos
nop
jns
xchg
iret
pop
fnstsw
dec
xor
aas
pusha
mov
adc
scas
jno
inc
or
cli
dec
or
lock
loop
or
mov
test
sbb
mov
shrb
xchg
negb
xchg
mov
jecxz
lcall
cld
push
insb
insb
mov
mov
test
sub
addl
add
sti
dec
iret
inc
pop
test
shrb
shl
dec
dec
xchg
cltd
and
cmp
std
and
shll
sub
jnp
xor
sbb
ror
xchg
add
dec
sbb
or
add
sbb
jg
xchg
mov
dec
bound
call
jo
aas
cmc
sbb
aam
push
adc
sahf
pop
mov
insl
sub
cltd
mov
in
daa
iret
pop
hlt
rcrb
xchg
mov
test
cmp
pop
test
inc
or
out
sbb
test
cmp
inc
jl
add
sbb
int3
stos
sbb
mulb
flds
or
outsl
sarb
aaa
or
gs
insb
sub
cmp
sub
in
mov
aad
and
xchg
lret
cs
pusha
pop
std
mov
sahf
fildl
and
and
xchg
adc
jnp
xchg
mov
xchg
and
cmc
push
sub
rcrb
cltd
dec
add
call
adc
push
dec
sub
and
pop
cmpsl
imulb
fadds
mov
fsubrs
xor
or
dec
lds
ret
or
cld
test
daa
jecxz
sub
je
mov
cli
movsb
pop
push
aam
and
dec
out
test
jno
insl
xor
jbe
insb
pusha
nop
add
jb
mov
add
mov
jb
hlt
mov
es
push
xor
das
jge
lret
lret
jecxz
sub
add
pusha
arpl
jge
sbb
shlb
movsl
push
ret
push
divb
into
add
fiadds
add
popf
repnz
xor
jae
loopne
jne
jne
xor
mov
sbb
inc
pop
cmp
push
sbb
pop
clc
dec
inc
push
push
and
mov
xchg
pop
stos
in
call
sahf
mov
mov
test
aas
imul
xlat
mov
mov
mov
in
sbb
sbb
adc
repnz
das
out
mov
je
mov
jmp
xchg
cmpsl
outsl
jno
das
filds
sbbl
outsl
psubw
or
push
mov
mov
mov
loope
gs
pusha
inc
cmp
cmp
in
das
mov
pop
fnstcw
push
aam
loop
movsl
cltd
push
cmp
lock
aad
xchg
mov
test
mov
pop
data16
cwtl
and
test
push
sahf
cmp
pop
shrl
nop
adc
sub
push
gs
jno
cmp
ret
dec
adc
int
popf
mov
js
scas
push
xlat
mov
xlat
xorb
test
cmp
aam
scas
ret
in
jge
adc
push
cwtl
push
pop
jmp
outsl
movsl
test
cmc
add
lcall
sbb
nop
movsb
popf
push
ja
nop
scas
movsb
pop
out
jmp
sub
stos
imul
fs
sbb
and
and
and
fwait
sbb
js
and
pop
in
and
scas
ja
jp
bound
fdivrl
sub
aam
and
mov
vpsrlw
mov
insb
shr
mov
push
hlt
xor
mov
push
hlt
pop
mov
mov
push
add
or
mov
test
push
jecxz
data16
dec
or
imul
add
push
adc
lods
xchg
pop
mov
xchg
jae
jge
cmpsl
and
test
xchg
cmp
popf
pop
nop
mov
fcoml
das
imul
inc
xor
jecxz
xor
mov
xor
iret
mov
mov
out
fcompl
je
adc
and
inc
fistpll
mov
pop
adc
inc
dec
cli
je
ror
dec
xor
dec
adc
pop
inc
push
insl
cs
ret
mov
jne
mov
inc
cmpsb
pop
out
push
inc
xchg
test
inc
push
pop
mov
or
sbb
inc
and
pop
outsb
stc
cmp
mov
out
ret
push
lahf
in
inc
jns
mov
loope
arpl
mov
cmp
std
les
pop
push
push
mov
sar
mov
call
ret
pop
adcb
jb
std
stos
out
sti
loopne
ja
sub
jmp
adc
movsb
jp,pt
jg
mov
push
cmp
mov
xchg
ret
std
fdivrs
ja
push
jno
cli
xor
lds
xchg
pop
cltd
lods
and
mov
xor
xor
shrl
mov
stos
mov
mov
inc
fwait
pop
add
icebp
push
imul
sub
push
loopne
mov
testl
push
sbb
or
push
outsb
aas
fucom
xor
and
test
or
les
pop
jne
mov
data16
mov
scas
and
cmp
jge
cmpsb
cmp
mov
les
ss
xor
mov
cmp
pop
add
xor
or
bndldx
loop
adc
iret
rcr
sti
jno
sub
iret
je
push
or
jne
outsb
push
movsb
sahf
cmpsb
clc
cli
cmp
pop
aaa
jnp
mov
nop
sti
inc
subl
jae
ja
mull
iret
scas
stc
push
xor
ret
and
jae
fst
fmulp
cmp
adc
movsb
faddl
xchg
cmc
test
inc
test
sahf
insb
mov
jp
int3
fistpl
cmpsl
cmpsl
fwait
and
pop
mov
stos
das
aas
or
stc
fisttpll
and
std
cld
js
xlat
add
nop
inc
imul
cltd
stc
mov
out
add
clc
leave
jp
and
pop
lods
test
sub
loope
cmp
js
cmpsb
icebp
hlt
xchg
mov
jp
dec
ss
mov
in
iret
add
inc
sbb
pop
jmp
bound
scas
aam
mov
cmpsb
inc
testl
roll
ret
cmp
and
push
xchg
shrl
cltd
lret
out
cmp
xor
xchg
popa
mov
popf
add
idivl
lcall
orb
xchg
push
push
inc
xor
vmread
jg
xor
xchg
ds
lret
and
xchg
outsb
xor
rcrl
out
add
imul
arpl
cmpsl
mov
in
pop
pop
and
mov
and
fisubrl
mov
imul
scas
pop
adc
in
push
mov
loop
inc
mov
jnp,pn
jns
cltd
clc
adcb
mov
rsm
aas
jns
ret
cld
movsb
pop
push
clc
mov
mov
xor
sub
sub
fs
into
fldt
cmp
adc
mov
cmpsl
xchg
xchg
in
adc
sti
or
arpl
mov
outsb
cmpsb
inc
inc
aad
sbb
push
add
sti
push
divl
and
pop
insl
dec
jmp
loop
dec
mov
mov
cltd
mov
cltd
sub
add
lea
mov
repz
roll
in
mov
add
std
js
lahf
mov
adc
push
loop
mov
cld
shlb
adc
xchg
jg
jg
and
pop
popa
mov
leave
aad
or
inc
mov
pushf
bound
xchg
adc
or
mov
push
scas
into
das
xlat
inc
inc
sbb
sahf
add
mov
pusha
push
or
adc
and
jae
push
xor
clc
jg
je
push
inc
dec
sti
jecxz,pn
cmp
out
adc
lods
pop
fldt
icebp
mov
xchg
cmpsl
push
decl
ficoml
and
mov
mov
movsl
mov
int3
stos
divl
test
fldl
push
popf
mov
sahf
adc
lret
movlps
push
test
fs
jns
repnz
lret
lock
adc
jo
pop
pop
fadd
adc
dec
push
mov
sub
mov
es
push
mov
mov
adc
xchg
iret
rcr
decb
mov
jns
cltd
inc
int
jle
jp
jno
xchg
sbb
mov
fildl
imul
lods
jnp
pop
ret
popl
push
xchg
push
scas
dec
outsl
sub
xchg
inc
test
jle
cmpsb
dec
lods
std
pop
push
das
mov
jg
out
clc
cmp
push
pop
push
ss
addr16
mov
je
fistps
lea
xchg
sbb
sub
inc
neg
repz
stos
pop
xchg
sub
fildll
test
jg
pavgb
insb
ror
mov
pop
fcoml
mov
inc
and
cmpb
in
sbbl
fdivrl
push
xor
ret
cltd
mov
sarb
jg
cmc
jb
movsb
add
repz
adc
pop
fists
iret
add
jl
jmp
les
sbb
adc
cs
sbb
and
clc
add
mov
and
popa
lcall
imul
inc
xchg
and
icebp
mov
xlat
push
mov
clc
std
scas
push
cmpsl
xchg
scas
lret
lret
hlt
fcmovnu
mov
stos
lea
mov
in
pop
sbb
aas
jne
stc
cmpsl
pop
sahf
push
jne
sbb
mov
and
mov
inc
xorl
or
adc
cwtl
fwait
xor
cmp
in
xchg
pop
test
out
mov
std
pop
sub
iret
test
push
sbb
fwait
outsl
es
aad
ss
sbb
loop
mov
cmp
xchg
enter
xchg
sub
xchg
out
fwait
cmp
inc
xchg
movsb
loope
or
int3
iret
or
push
ljmp
adc
jno
jnp
xor
ret
aaa
sub
pop
data16
cwtl
rorb
mov
in
mov
sahf
inc
mov
hlt
inc
pop
imul
sbb
push
into
jns
cmc
mov
das
subl
dec
inc
mov
inc
pop
add
xchg
scas
imul
or
add
jae
jge
push
hlt
cmp
in
inc
push
push
popa
popa
xor
lcall
mov
jecxz
cmpsb
call
inc
sub
dec
xor
imul
push
fcom
loope
dec
test
leave
mov
test
pop
lods
int3
fsubs
pop
ret
das
inc
fs
mov
jmp
mov
xorl
les
daa
rcrb
outsb
and
addr16
cmp
jnp
jns
mov
fwait
mov
stos
data16
cmp
stos
add
jnp
in
loop
fdivs
adc
cmp
outsl
addr16
test
fptan
xchg
leave
or
scas
lods
mov
jno
push
push
add
xchg
out
aad
adc
mov
adc
jp
xor
mov
cld
outsl
popf
adc
push
push
outsb
lea
mov
out
cmp
mov
ja
mov
popa
cmp
xor
int
adcb
sbb
outsl
xchg
lcall
repz
aad
sub
fisubrl
adcb
pushf
popf
or
insl
dec
cmp
loopne
xchg
cmc
loope
int3
or
jb
jo
je
push
fdivr
mov
dec
xchg
fisubs
mov
ja
push
aas
jmp
mov
dec
xchg
adc
cmp
inc
inc
scas
adc
xor
dec
jo
js
pop
xor
xor
sbb
cli
jne
mov
dec
and
push
jns
lahf
mov
les
std
fdivrl
pop
and
inc
and
cmp
jmp
and
or
lods
and
loop
or
pop
lods
pop
jno
sub
mov
xchg
hlt
cmp
dec
arpl
dec
dec
les
flds
ret
mov
and
rcrb
pop
daa
rorb
call
mov
adc
add
cmp
pop
push
push
je
int3
clc
push
jbe
fbstp
movsb
push
and
jae
or
push
ret
sub
and
je
in
in
cmp
mulb
arpl
inc
out
cmpl
or
dec
mov
jns
push
and
out
and
daa
sub
add
inc
stos
or
out
adc
inc
jne
add
iret
lret
mov
pop
pop
test
mov
pop
je
push
fs
imul
stos
jmp
lds
adc
and
dec
ja
inc
lret
ficompl
lea
call
imul
dec
pop
mov
clc
enter
pop
jnp
sub
in
cmp
and
xor
and
add
push
push
mov
lcall
adc
and
fmuls
aam
cmp
push
sub
xchg
jno
inc
loop
inc
test
es
mov
jbe
xor
hlt
hlt
cmp
cmpsl
sbb
std
push
sbb
dec
or
je
jne
add
nopl
clc
ja
not
jp
and
repz
andl
pop
out
xor
inc
ljmp
enter
les
mov
fmuls
aaa
int
adc
mov
pusha
outsl
iret
imul
lods
rcl
mov
xchg
mov
push
mov
ja
mov
out
pop
ljmp
sbb
pushf
cmp
mov
fdivl
iret
jl
fdivr
cmp
adc
subb
jge
repnz
jo
pop
fwait
or
int3
push
ljmp
addr16
push
ret
insl
mov
push
stos
pop
pop
das
adc
sahf
jecxz
mov
mov
xor
add
insb
jp
out
pop
add
stos
nop
ds
hlt
pop
movsb
mov
fmulp
in
shrl
fcomps
subl
cmp
je
in
cmpl
mov
jmp
test
push
test
pop
adc
adc
lcall
addr16
fcmovbe
pop
cmpb
mov
cwtl
mov
insl
xchg
loope
sbb
dec
inc
mov
mov
out
mov
cmpsl
pushf
test
inc
je
and
xor
xlat
sbb
xor
popf
ficoml
sahf
sbb
add
stos
in
orl
or
push
test
xor
lock
scas
lea
mov
push
mov
add
adc
ret
call
jno
dec
push
loopne
inc
mov
das
mov
mov
test
mov
and
xchg
adc
jmp
jne
xor
repnz
pop
ficomps
rcll
inc
cmp
js
nop
icebp
fadd
lea
mov
or
jle
mov
jmp
jge
mov
cli
or
ljmp
pop
shrb
adc
popa
sbb
test
pop
fnsave
or
in
lcall
xchg
xchg
cmpsb
mov
or
stos
sbb
cmpsb
aam
in
pop
xorl
pop
arpl
sbb
or
out
mov
sahf
shlb
fiadds
repnz
ret
xor
sub
jl
arpl
push
xchg
lahf
lea
imull
lret
mov
mov
shlb
mov
aaa
push
cmpsl
sahf
test
jmp
ret
mov
cs
sbb
mov
les
jge
mov
pop
popf
test
fisubs
xchg
adc
enter
sbb
iret
daa
xlat
repnz
lret
sbb
mov
leave
cmp
sbb
test
ficomps
lret
call
shll
dec
cmpsl
icebp
mov
jns
ret
pop
aad
xor
fdivr
cmpsl
sbb
inc
daa
and
or
aam
fbstp
add
inc
sbb
scas
inc
sbb
movsb
shrb
mov
rol
lods
mov
sar
stc
cmp
clc
mov
lea
xchg
dec
pop
loopne
sbb
or
adc
mov
mov
inc
inc
inc
in
push
mov
arpl
cwtl
pop
insb
jmp
je
aad
movsl
cmc
xor
add
fiadds
fbstp
jp
cmp
push
jo
pop
fs
aaa
mov
xor
push
adc
loopne
repz
push
xchg
sub
adcb
mov
mov
push
fldl
rcrl
insl
out
jecxz
xchg
sbb
idiv
mov
inc
test
cwtl
adc
and
mov
push
jae
xchg
dec
cmp
jmp
iret
sbb
cmpsb
push
dec
mov
in
mov
xor
je
xchg
sub
sub
pxor
cmp
jl
cmp
rcrl
sub
fimull
js
jmp
push
dec
jns
jecxz
sub
sti
xchg
or
adc
fwait
test
sbb
and
mov
lret
dec
ja
scas
psubb
sub
jo
jmp
push
add
dec
mov
dec
bound
inc
pusha
mov
lret
sub
stc
in
jl
sti
int
push
sub
cmpsb
sbb
je
jb
andb
je
cld
repnz
mov
ror
xchg
add
out
sub
leave
popa
stc
add
stos
mov
mov
jns
xchg
inc
js
mov
xorb
pop
pop
mov
sbb
mov
xchg
gs
sub
sub
sar
jbe
jle
mov
cmp
movsb
mov
and
push
adc
sub
jno
sbb
add
jo,pt
pop
inc
cltd
imul
adc
movsl
sbb
roll
movsb
js
js
sbb
pusha
and
fcoms
rcr
jns
mov
outsb
pop
and
xlat
aas
scas
push
jb
or
hlt
outsb
stos
adc
sbb
js
aaa
sahf
nop
push
testl
lret
cs
push
data16
lret
mov
adc
add
jne
lret
loop
dec
cmp
push
repz
fincstp
mov
cli
and
jmp
cld
mov
lcall
mov
or
inc
xchg
cltd
inc
cmp
cmpsl
rcrl
xchg
bound
mov
dec
jbe
xor
aad
dec
dec
mov
cmovbe
inc
mov
call
cmp
ljmp
sbb
ret
in
sub
sbb
ret
imul
mov
jbe
push
push
aaa
or
stos
movsb
popa
push
or
jmp
cmp
das
jmp
rolb
repnz
fsubrs
xlat
lcall
add
adc
inc
cs
hlt
imul
sbb
mov
fsubl
scas
popf
lea
and
dec
add
mov
jne
cmpsl
or
cli
sub
call
fisubl
xchg
sub
inc
mov
ljmp
add
ss
out
shrb
in
pop
or
loop
loopne
int
sub
dec
ss
fwait
push
pusha
imul
xchg
sub
sbb
fwait
add
in
sbb
dec
add
sbb
mov
outsb
add
or
mov
inc
or
lock
xor
fdivr
ds
sub
inc
repnz
ret
sub
adcl
mov
lcall
xor
test
mov
stos
idivl
cmp
mov
aaa
addb
aad
lea
adc
jge
js
jo
insb
push
sbb
dec
pop
hlt
sub
outsl
in
pop
enter
mov
loop
cmpsl
cwtl
repz
and
std
cwtl
adc
push
enter
sbb
lods
jmp
xchg
rcr
int
loop
xchg
outsb
cmp
stos
inc
mov
mov
push
inc
cmp
fwait
adcb
inc
js
movsb
push
popa
adc
fisubl
out
lods
les
fwait
ljmp
fildl
mov
mov
lock
cmp
mov
inc
out
mov
jmp
lds
push
aas
mov
mov
or
mov
lods
loopne
mov
pop
shlb
aam
xor
adc
push
ret
mov
inc
das
or
repz
and
dec
aaa
push
mulb
add
ja
mov
out
lock
sbb
movsb
pop
imul
notl
sub
ss
pop
fisttps
subb
xchg
sti
push
mov
gs
or
adc
push
lock
call
lock
fucom
jbe
sub
mov
adc
sbb
push
mov
imulb
jne
dec
mov
lds
pusha
jmp
fs
loopne
sbb
icebp
out
inc
stc
bnd
add
stos
sub
cmpl
loopne
ss
fwait
or
pop
push
mov
add
adc
lods
mov
push
push
testb
das
outsl
daa
std
pop
outsb
daa
push
mov
push
mov
jecxz
icebp
aad
pop
mov
push
dec
dec
les
and
xor
jecxz
ret
lds
inc
aaa
jno
mov
push
pop
xchg
in
inc
cmpsl
adc
push
xchg
sub
das
mov
jae
dec
lods
jae
ret
shr
sbb
and
jae
dec
mov
mulb
repz
mov
xor
in
push
fcomps
das
pop
das
lds
adc
sub
scas
sahf
adc
jle
jmp
orl
test
loopne
adc
sbb
cmpl
iret
dec
fstl
cwtl
jnp
xor
adc
xchg
push
xchg
ljmp
mov
pusha
xor
sub
std
out
cmc
cltd
out
xchg
es
jns
cld
adcb
imul
pop
push
mov
or
xlat
mov
lds
out
xchg
ljmp
xor
lock
aas
sbb
xor
xchg
out
pop
push
icebp
lods
xchg
imul
push
mov
scas
mov
notl
push
xchg
push
inc
lcall
inc
out
adc
ja
xlat
cmc
mov
lock
xchg
inc
mov
mov
aaa
push
dec
sub
mov
sbb
bound
mov
lods
aad
jo
and
cs
jl
shrb
test
jg
ret
sub
sti
pushf
adc
mov
out
adc
lods
sbb
ret
mov
ss
cmp
push
ret
push
out
je
add
xor
dec
sbb
pop
jns
ficomps
dec
cmp
roll
jno
loope
sarb
enter
test
aas
cmp
xchg
xor
jns
pop
jbe
cmpsb
fists
call
loope
inc
push
sub
gs
mov
or
adc
adcl
subl
mov
push
jge
mov
mov
xchg
mov
loopne
fiaddl
es
pop
imul
jge
arpl
popa
bound
jg
mov
cmp
lock
cmpsl
sbb
mov
enter
xchg
mov
dec
inc
xchg
insl
and
adc
imul
pusha
jecxz
push
sti
sub
add
push
mov
mov
int
loop
in
ljmp
scas
es
xchg
outsb
pop
and
add
addb
and
mov
out
jnp
mov
notl
cs
mov
sub
push
dec
loopne
test
fwait
dec
add
mov
in
xchg
xchg
pop
in
loop
xor
push
mov
push
push
ljmp
add
push
xchg
lcall
and
or
outsb
ljmp
into
repz
push
mov
addr16
jle
sub
es
movsl
pop
pop
lcall
pop
sub
push
or
mov
mov
pop
je,pn
or
sub
mov
shrb
pusha
xchg
jo
adcl
popa
nop
movsl
enter
push
jg
mov
adc
mov
mov
js
aad
outsb
scas
jle
enter
in
sub
cmp
mov
adc
pop
jge
movsb
push
inc
xchg
mov
outsl
ss
xchg
add
push
xor
pushf
xchg
push
test
push
or
sbb
repz
out
mov
iret
jmp
inc
jne
mov
pop
xchg
or
in
mov
into
je
fstpt
sbb
mov
jl
data16
stos
jo
add
xor
fisttps
iret
shrb
in
add
popa
inc
in
lods
add
sub
xor
add
loop
or
ficoms
sub
sbb
enter
addr16
cwtl
push
push
movsl
dec
fsubr
add
insl
shlb
push
sbb
fidivrs
sbb
leave
pop
dec
jmp
mov
jne
or
roll
jg
pushf
adc
mov
leave
sbb
jmp
daa
mov
lret
cwtl
sub
into
or
jns
dec
shll
fisttpll
xor
out
int3
mov
pop
mov
ror
mov
call
mov
or
inc
daa
mov
mov
mov
adc
pop
unpcklps
mov
mov
cld
sbb
arpl
pop
push
jbe
sahf
mov
jo
leave
dec
ficoms
lea
sbb
xchg
mov
in
add
and
repz
xbegin
push
fdivrs
xchg
xor
sub
sti
nop
push
out
cmp
pop
jae
xchg
mov
loope
fisubrs
jne
and
fidivs
divl
cli
push
lods
push
je
adc
push
fisttps
shufps
fcoms
adcb
sbb
cmp
jo
mov
lods
fidivs
out
fnstsw
xor
rcrl
push
ret
imul
sbb
add
jb
push
dec
aad
sub
inc
daa
loope
adc
push
es
test
jecxz
xchg
xlat
imul
mov
out
aaa
and
out
push
jbe
lcall
fcmovb
jns
xor
bound
fwait
adc
and
dec
cld
mov
sbb
jb
test
cltd
dec
sbb
pop
jae
popa
dec
stos
out
or
jl
iret
dec
push
push
aaa
and
jl
or
mov
pop
adc
movsl
orb
pushf
jb
in
cmp
loope
cld
jno
xlat
mov
outsl
int
ret
mov
jnp
or
xlat
sti
xchg
fidivrl
out
add
mov
sbb
inc
mov
sbb
inc
dec
out
sahf
push
scas
aas
sbb
sbb
or
leave
mov
pop
push
outsl
ds
popa
hlt
arpl
lahf
xchg
cmp
lock
lds
xor
jle
aaa
sub
stos
push
test
sbb
jmp
push
inc
popf
lock
popa
je
xchg
les
and
aas
mov
pop
push
fs
jmp
mov
shrl
rorb
dec
adc
adc
mov
push
sarl
out
xor
jmp
and
dec
xchg
mov
cmp
in
daa
pop
in
lods
pop
loop
and
mov
fmul
mov
popf
outsl
rcr
fimuls
das
sbb
loop
mov
andl
lret
loopne
in
sub
mov
lahf
mov
jmp
into
inc
cld
imul
out
jge
arpl
pop
adc
cmp
push
mov
icebp
out
jno
fidivl
inc
fwait
mov
dec
add
cli
sbb
mov
inc
and
cmpsb
pop
loope
lret
je
mov
xchg
loopne
lcall
pop
push
sbb
mov
pop
mov
xchg
test
cmp
cmpsl
stos
dec
push
push
outsl
sahf
orb
loope
or
sbb
mov
lahf
sbb
fstl
movsb
jno
leave
push
ljmp
enter
xchg
xor
mov
scas
pop
sub
adc
sbb
jle
sub
test
cmp
xor
sbb
scas
cmp
sbbl
mov
movsb
jae
cmp
pop
mov
xchg
arpl
dec
lret
dec
xor
dec
cmp
gs
dec
sarl
movsb
and
cmpsb
loop
pop
and
adc
sbb
pop
ret
xchg
and
icebp
outsb
or
idiv
es
into
cld
sbb
or
adc
or
arpl
iret
fnsave
xorl
scas
out
and
stos
push
int3
push
sub
xchg
pop
push
and
dec
out
mov
push
pushf
push
addb
je
fwait
adc
aam
inc
pop
mov
sub
test
into
mov
std
sub
andl
lcall
frstor
inc
les
pop
push
in
call
fnsave
icebp
cmc
stos
or
outsb
test
xchg
cltd
pop
inc
pop
stos
imul
out
outsb
aad
lods
push
stos
xor
xor
xchg
inc
mov
loopne
mov
push
jb
adc
leave
loope
mov
fwait
pop
mov
adc
icebp
loopne
push
pop
xchg
mov
or
xor
sub
ret
pop
sub
cmpsl
sarl
push
fcmove
popf
in
cmp
lods
mov
jp
jnp
or
add
add
out
outsb
pop
xor
mov
push
jecxz
data16
xchg
icebp
xchg
hlt
add
jne
xlat
enter
fidivs
mov
int
cltd
adc
icebp
negl
es
dec
std
mov
push
pop
inc
scas
xlat
mov
aad
out
cmc
xlat
mov
shlb
aad
repnz
movsb
js
pop
les
xchg
or
sub
push
insl
mov
mov
inc
ds
jb
out
cli
pop
inc
mov
mov
loope
mov
mov
movsl
jne
filds
popf
or
lds
adc
push
fcomps
test
in
or
push
push
cli
pop
pushf
dec
stos
enter
sub
sub
xchg
les
sbb
and
enter
jae
cs
out
mov
xor
dec
fidivrl
mov
pop
or
into
sub
sub
mov
add
aam
xlat
xor
fwait
test
test
mov
int
fildl
push
cmpsl
xor
test
nop
push
jns
sti
push
push
jbe
ja
aas
pop
dec
inc
mov
mov
push
xchg
outsl
mov
stos
pop
andb
or
add
jmp
mov
sahf
test
decb
mov
mov
dec
test
sbb
lret
out
fcmovnu
push
lods
jl
fsubrl
pop
in
icebp
test
aam
mov
sbb
idivl
aaa
pusha
cmpsb
mov
shlb
sub
test
cmp
jp
in
push
gs
lea
fimull
test
data16
cmc
inc
add
ljmp
jne
inc
mov
mov
inc
jnp
mov
mov
or
lods
cmovge
sub
jg
sub
xchg
add
insb
test
jp
mov
pop
cwtl
or
outsl
scas
sahf
pushf
rcrb
mov
lea
clc
insb
inc
adc
ficompl
or
jns
inc
je
pop
lret
loope
or
mov
out
mov
and
add
xchg
or
push
das
add
add
and
shll
inc
int3
scas
xlat
sbb
mov
push
iret
cmovge
pushf
xchg
bound
add
lcall
fdivl
scas
xchg
push
add
icebp
inc
jmp
push
int
loope
jp
and
test
xor
inc
mov
lock
mov
test
mov
pop
mov
jle
hlt
sahf
sub
pop
pop
xchg
cmp
imul
cmp
cmpsl
rolb
sbb
dec
push
notl
scas
sub
test
xlat
push
cmp
add
mov
pop
fwait
or
mov
cltd
xor
loopne
xor
call
adc
aaa
nop
pushf
movsl
cmpsb
mov
aaa
add
mov
sbb
jbe
mov
jg
gs
dec
rcrl
dec
dec
mov
dec
jb
mov
push
or
cmc
xchg
aad
push
test
popa
mov
ds
adc
mov
cmpsl
popa
mov
shll
add
pop
or
jae
aaa
imul
sahf
jae
jle
decb
orl
mov
dec
icebp
pop
rcll
push
xor
push
pop
das
xchg
loop
sbb
daa
xor
neg
push
xchg
adc
fnsave
pop
lea
pop
faddl
push
lods
jmp
sub
cmp
pop
push
or
dec
adc
test
mov
or
inc
nop
rcll
lret
lcall
repz
shr
jnp
xor
outsl
pushf
out
test
mov
lods
mov
iret
adc
je
mov
in
mov
pop
adc
scas
dec
xor
setp
push
adc
sbbl
loope
jg
ret
adc
dec
imul
push
push
shl
loope
add
sti
in
adc
and
out
mov
divl
adcl
mov
aas
loope
pop
insb
mov
fsubr
jne
pop
mov
inc
pop
push
mov
aad
push
imul
dec
push
push
rolb
orl
cmc
imul
stos
outsb
mov
sub
dec
cli
sbb
pop
xchg
pop
pop
inc
mov
aad
jb
and
out
pop
xchg
jb
inc
mov
das
popf
pop
mov
inc
out
fnsave
loop
jg
dec
lret
xchg
out
jnp
clc
pop
and
and
enter
mov
imul
push
push
inc
mov
jno
mov
add
js
scas
inc
in
dec
aam
dec
cmc
mov
mov
adc
mov
in
nop
adc
adc
imul
push
ljmp
or
push
add
jno
imul
leave
cmp
loop
xor
or
mov
fwait
and
pop
js
out
imul
mov
mov
push
mul
add
sub
insb
ror
jne
or
xor
stc
movsb
movsl
jge
pop
add
fmul
fdivrl
mull
pop
shrb
mov
test
add
jo
dec
insl
callw
xchg
xchg
popf
test
and
mov
jmp
rolb
popa
xor
cmp
xchg
push
mov
fldt
dec
jp
pusha
lahf
cmovp
add
xchg
sbb
les
arpl
lcall
imulb
jg
dec
js
or
fnstcw
icebp
int3
test
bound
pop
or
call
ficoml
stos
lret
stos
dec
aas
je
mov
cmp
xchg
dec
pop
or
stos
aad
leave
stos
pop
std
jne
aad
pop
js
jg
fs
sbb
or
sub
cs
sbb
xchg
xorb
addr16
in
push
add
add
insl
lret
jne
or
loop
adc
mov
ds
mov
aaa
jge
pop
push
push
fs
xor
cmp
adc
sub
push
ja
ljmp
ret
lods
loopne
in
push
push
stos
adc
std
jno
roll
lret
addr16
stos
imul
xor
dec
push
mov
push
sub
xchg
stc
lds
jle
sar
xchg
jns
cmp
bound
daa
push
cmpsl
mov
sub
cwtl
gs
in
pop
mov
sub
loopne
clc
cwtl
sbb
jle
jl
jg
in
loop
int
aas
pop
dec
sub
dec
sub
addb
push
lea
xor
rolb
fwait
sti
lcall
enter
stos
dec
inc
sub
mov
ljmp
pop
sar
fsub
mov
mov
mov
add
fistl
aad
xchg
inc
scas
pop
lret
inc
das
ret
mov
pop
adc
cmp
adcb
cmp
test
cltd
sbb
xor
stc
js
test
jbe
inc
nop
fldcw
cmp
sbb
inc
arpl
pop
lret
jecxz
or
or
call
dec
sbbl
shl
push
movsb
fucomip
adc
inc
int
in
dec
mov
icebp
pop
and
testl
imul
andl
iret
mov
pop
movsl
sub
xchg
cmpsl
xchg
mov
adc
mov
fisubrs
ljmp
lret
pop
fisubs
pop
adc
xchg
jnp
pop
ds
and
pavgb
sbb
add
mov
loop
pop
dec
inc
add
pusha
mov
push
cmp
adc
hlt
dec
push
jnp
dec
insb
jb
ret
sub
ret
push
insb
imul
aam
add
loope
iret
pusha
or
cmp
andl
int
cmc
mov
test
das
dec
jmp
lret
adc
out
mov
nop
add
pop
insb
fadd
pushf
pop
mov
mov
pop
in
ja
mov
push
idivl
jge
nop
adc
and
adc
out
movsb
dec
and
test
and
push
mov
fs
ret
adc
loope
mov
mov
or
cltd
outsl
push
adc
sti
loop
repnz
test
cmpsl
mov
fdivrs
je
mov
scas
popf
neg
pushf
scas
stos
pop
push
pop
cmpsb
stos
cmp
push
cmp
out
sti
sub
push
test
mov
adc
fsincos
adc
je
jmp
in
rcll
lock
lret
int3
xchg
or
push
sbb
xchg
cmp
inc
inc
cmc
sub
mov
and
and
inc
in
ss
shll
insb
test
vcvtpd2dq
dec
ret
push
and
push
negb
mov
xchg
and
das
mov
xor
bound
cmp
mov
aam
jb
mov
std
dec
mov
incl
mov
dec
sbb
dec
jge
mov
sahf
mov
push
xor
sub
les
inc
pop
scas
shll
mov
mov
push
dec
add
and
test
or
push
add
mov
fincstp
js
in
add
xchg
call
xchg
mov
mov
sbb
inc
push
ret
loop
int3
add
ret
jl
inc
rolb
ret
imul
addl
incl
aas
test
les
cmpsl
jge
in
les
loop
push
fsubl
je
jno
roll
xchg
inc
mov
insb
sbb
inc
jle
pop
movsb
ja
fcompl
push
les
push
add
std
lock
sub
mov
mov
sub
pop
jp
mov
fimuls
cld
adc
pushf
mov
inc
popa
ret
xor
cmp
pop
or
aaa
fimull
mov
ljmp
lcall
icebp
mov
mov
aaa
mov
cmp
out
add
or
popf
pop
sbb
or
dec
loopne
lcall
pop
negl
in
bound
pop
repnz
int3
dec
shl
add
icebp
enter
jb
jno
push
adc
out
into
cs
mov
and
scas
push
cmp
sbb
xchg
cmp
test
lock
pop
mov
pop
cs
sbb
add
insl
outsb
jmp
xchg
icebp
sub
add
mov
sbb
into
and
mov
sub
fdiv
cmp
mov
inc
test
repnz
pusha
gs
add
and
lret
jo
sbb
push
je
shlb
dec
scas
dec
inc
mov
mov
mov
je
cmp
add
jmp
xchg
mov
clc
jnp
loop
pusha
push
lea
cmp
in
jne
mov
lret
xchg
pop
sbb
pop
inc
mov
out
es
xchg
jl
fs
cmp
sti
ret
push
sbb
lcall
idiv
mov
les
cmp
lea
loope
mov
rclb
pop
outsl
aas
add
invlpg
aam
push
imul
xlat
adc
jge
pop
inc
inc
gs
pop
mov
mov
dec
mov
pop
sbb
mov
mov
mov
aam
pop
fidivrs
or
or
mov
inc
fiadds
cmp
add
and
scas
mov
inc
pop
rorb
int
ret
pop
in
or
adc
sbb
dec
lret
repz
popf
push
call
out
xor
lcall
xor
xchg
movsl
icebp
lcall
test
sub
in
mov
stos
cli
fmuls
push
adc
jge
jmp
imul
icebp
into
cmp
jmp
imul
fs
icebp
pop
and
cli
sub
cmp
adc
popa
and
push
dec
push
jae
xchg
lds
xchg
aam
mov
xorb
rcl
test
scas
xchg
aam
gs
mov
scas
lods
cmp
and
pop
cwtl
je
push
cmp
inc
adc
push
add
jecxz
pop
add
in
repz
fnstsw
or
std
push
jno
jp
sub
into
jge
nop
cmpsl
push
push
push
pop
adc
push
popf
xor
into
out
lds
and
jne
mov
and
jo
sbb
xchg
cmp
mov
sti
xor
adc
xchg
imul
or
inc
xlat
add
or
hlt
jg
aam
sub
jne
cmc
mov
jns
aas
faddl
shrl
and
xchg
push
inc
pusha
out
cmp
leave
stc
jle
movb
cmp
xor
jg
enter
xchg
inc
cmp
ss
mov
xchg
add
arpl
sub
lret
sbb
sub
adc
inc
mov
in
inc
sbb
ret
scas
iret
mov
or
mov
in
sarl
mov
and
push
aas
adc
xor
jae
xor
push
push
andl
mov
sub
push
scas
jmp
das
push
adc
and
lods
test
fwait
inc
mov
push
push
js
mov
or
inc
push
pushf
loopw
decb
inc
sub
es
cmp
jge
andb
jle
std
push
mov
pop
xchg
inc
cltd
dec
in
add
mov
fisttpl
push
push
sub
adc
add
scas
xchg
adc
xor
push
js
mov
out
adc
lods
sub
ja
and
jns
lcall
adc
in
fwait
cld
data16
lret
mov
stos
and
jecxz
cwtl
shrl
pop
pop
sahf
pop
push
les
int3
and
xchg
xlat
pop
or
outsb
jb
pop
insl
mov
fisttpl
sub
mov
mov
xchg
fistl
data16
ds
cmp
xchg
lock
push
mov
or
std
movsl
lea
frstor
push
enter
push
mov
aam
hlt
pop
int
xor
in
sbb
insl
cs
adc
mov
mov
mov
xor
iret
mov
dec
ljmp
pop
xchg
add
loop
or
mov
and
gs
ja
rolb
movsl
ljmp
push
push
and
scas
adc
jnp
stos
and
mov
scas
aam
daa
pop
push
into
pop
pop
add
ss
sub
in
mov
es
negb
push
cmp
sti
pop
shll
out
sub
xabort
rclb
push
pop
popf
pop
stc
dec
fst
push
cs
mov
dec
fstpl
add
repz
add
jmp
jne
rclb
ret
mul
pop
adcl
xchg
dec
and
add
pop
out
mov
in
adc
aas
lods
insl
jbe
pop
push
pushf
mov
ret
lods
push
jnp
in
dec
add
jp
mov
dec
cltd
stos
rcll
lret
mov
bswap
cs
inc
dec
jl
lods
pop
sbb
shr
xor
or
loopne
xchg
test
adc
xchg
mov
xor
mov
inc
cld
mulb
cmp
cmp
jns
jecxz
arpl
jmp
ja
mov
mov
insl
mov
xchg
leave
lcall
fildll
mov
shld
nop
aaa
or
jo
and
xor
fpatan
psrld
cli
rclb
in
ja
or
fadd
and
flds
mov
push
mov
cmp
lcall
dec
mov
shll
push
push
arpl
mov
push
sub
pop
loope
push
pop
push
mov
ds
pop
xor
push
dec
paddb
adc
jp
fincstp
lds
jae
decl
xor
nop
rolb
rolb
cld
aaa
hlt
mov
mov
repnz
xor
xchg
push
dec
adc
test
push
std
je
sub
xor
ret
mov
mov
nop
sbb
insl
sub
movsb
push
jbe
cmpsl
dec
cmc
xchg
out
inc
je
sub
cmp
mov
dec
push
test
sub
push
xchg
jo
scas
call
lock
mov
rorl
push
fadd
and
dec
adcl
cmp
sbb
and
cld
dec
mov
test
insl
push
sbb
xchg
jle
int3
rcrl
insb
push
sub
clc
cld
dec
jb
or
or
inc
adc
mov
xchg
movsb
sti
adc
inc
pop
jb
loope
jp
sub
mov
push
adc
popf
pop
lds
jle
mov
xchg
hlt
xor
push
or
leave
in
push
lods
sbb
or
push
rorl
mov
cmp
mov
pusha
sub
shl
cmp
in
sub
cwtl
fsubl
add
pop
test
mov
stc
push
push
and
aad
cli
mov
push
adc
shr
xchg
cli
push
ret
jno
mov
jae
js
xor
in
mov
mov
jge
cli
imul
insb
mov
aam
fldenv
fs
outsl
arpl
in
stos
jnp
add
jo
mov
popf
lods
jle
xchg
outsb
push
rorl
ds
cwtl
add
ja
cs
xor
ret
imul
xchg
pop
or
xor
popa
pushf
out
add
jecxz
dec
or
data16
mov
lcall
push
int3
pop
push
and
pop
or
lahf
push
xor
jle
jbe
cltd
pusha
sbb
daa
sub
pop
sub
call
fadds
pusha
flds
fisttps
es
mov
add
faddl
jl
xchg
push
arpl
adc
iret
xchg
xlat
mov
outsl
repnz
cmpsl
push
into
bound
pop
add
mov
jae
in
in
mov
mov
mov
jno
and
clc
and
mov
lds
dec
call
or
inc
sub
int3
pop
imul
test
xchg
aad
loope
cmc
lret
test
lcall
adc
cmp
push
push
lds
sbb
repz
or
andb
xlat
inc
jo
sbb
daa
cmp
adc
pusha
pop
pop
mov
addb
bound
xor
aaa
test
add
mov
or
xchg
fyl2xp1
stc
inc
shll
test
das
lret
mov
clc
push
pop
jno
nop/reserved
scas
js
and
push
mov
lret
clc
test
leave
lods
adc
pop
adc
jo
pop
sahf
mov
jp
stos
adc
mov
cmp
xchg
test
mov
pop
xchg
xchg
addr16
movsb
decl
in
bound
jge
subb
lea
lret
gs
mov
sub
xchg
int
insl
scas
sbb
cmp
test
pop
xchg
cmp
aas
sbb
cmp
adc
out
inc
arpl
loopne
out
repnz
dec
adc
and
xchg
mov
mov
mov
aaa
cli
and
insb
popa
pop
xchg
ret
aad
pop
inc
out
mov
js
in
mov
mov
scas
adc
mov
and
dec
aad
cmp
mov
insb
filds
mov
cmp
out
loopne
icebp
imul
jbe
mul
add
mov
into
jo
mov
shll
mov
jno
or
jmp
mov
cmp
fcomi
sub
mov
test
mov
push
out
cli
into
jbe
stos
pop
out
mov
addb
pop
data16
jg
and
adc
lcall
push
stos
hlt
leave
in
or
inc
xchg
test
repz
sub
mov
cmc
addr16
mov
sub
inc
adc
into
rcrl
popa
and
mov
call
jl
add
cwtl
or
inc
popw
or
daa
pop
adc
add
add
add
jns
jp
pop
or
mov
sti
sti
xchg
fmull
sub
dec
xchg
dec
lret
add
popa
adc
paddd
in
test
test
and
jge
cmp
test
xchg
orps
je
cmpsb
sbb
imul
xor
mov
cmp
push
rcll
out
mov
rcrl
loope
push
add
cmp
paddq
loope
push
sbb
jb
pushf
dec
loope
jp
pop
stos
rcrl
sub
cmp
mov
inc
lss
ss
aad
dec
movsb
call
out
sub
in
lods
mov
dec
lea
test
xor
jb
das
and
xor
mov
fisubrl
les
loopne
fmull
inc
fidivl
mov
stos
test
mov
xchg
es
sub
mov
add
mov
jl
cmp
sbb
dec
add
into
push
inc
imul
test
or
add
vminss
repz
dec
adcb
daa
cmc
xchg
out
enter
std
pop
inc
dec
add
je
test
push
jmp
out
or
add
fidivl
and
jns
out
dec
fisttps
test
rorl
add
rorb
xor
or
sbb
adc
pop
js
cli
les
mov
bnd
push
or
add
mov
mov
das
mov
pop
adc
pop
and
dec
xchg
test
popf
rcrb
outsl
push
bound
jno
adc
or
hlt
adc
into
push
out
cltd
xchg
and
push
jne
rcll
cmp
jnp
adc
inc
stc
mov
loope
pusha
ljmp
mov
cmp
push
jbe
jae
lret
fisubl
shrd
dec
inc
repz
fdivs
cmp
mov
test
dec
ss
aam
jecxz
sbb
push
paddd
cmp
aam
repz
cmpsl
inc
enter
adc
fcomip
lea
cmpsb
xor
js
xor
push
xor
cmp
nop
out
pop
lret
imul
push
inc
inc
dec
mov
and
mov
call
lea
loopne
syscall
mov
push
inc
jl
hlt
subb
js
std
mov
outsb
jbe
ret
jb,pt
cmc
fnstenv
addr16
test
arpl
mov
inc
add
adc
dec
pusha
call
push
rolb
ds
dec
sbb
and
mov
imul
adc
adcl
fsts
leave
out
scas
ss
mov
out
mov
in
lds
outsl
out
fistl
jae
inc
loop
sub
pop
or
jne
sahf
cmp
inc
jbe
push
cltd
xor
sub
mov
mov
scas
pop
pushf
pop
movsl
adc
pushf
sbb
cli
push
test
pop
and
inc
jns
sub
out
js
in
pop
cld
xchg
lcall
call
scas
das
mov
mov
fmulp
daa
imul
mov
lock
pop
xchg
jl
pop
push
lea
bound
sbb
aas
jne
insl
push
or
cmpsl
addl
scas
add
sahf
imul
aam
popa
lcall
imul
dec
xor
mov
es
or
push
mov
icebp
pop
sbb
push
out
or
clc
sub
enter
inc
ljmp
push
mov
lcall
cli
pop
jg
inc
inc
or
pop
popa
int
xchg
sub
ja
cmp
mov
mov
jb
xor
ret
stc
imul
pop
pop
gs
subb
xchg
jbe
push
mov
pop
stc
aas
cltd
xchg
mov
xchg
addl
sahf
inc
xchg
ret
push
inc
sahf
subl
fildll
das
jns
ljmp
addr16
ja
push
cs
lock
dec
xlat
push
sub
push
xor
movsb
jno
shl
pop
add
call
int3
mov
lcall
insl
movsb
mov
test
movl
jnp
lret
test
fadds
pop
fisttpll
xchg
dec
sbb
mov
push
cwtl
fmull
pop
mov
ret
dec
mov
icebp
mov
out
or
adc
stos
xchg
sub
xchg
aas
sub
test
stc
lock
cmp
sbb
lods
insl
and
pop
adc
fdivs
pop
push
pushf
andb
prefetchw
sub
inc
int
mov
cwtl
adc
enter
std
mov
in
out
addr16
bswap
add
pop
cmc
xor
adc
adc
movsb
inc
cmp
loop
fsubs
mov
scas
xchg
mov
pop
call
lods
cld
adc
adc
mov
or
or
mov
repnz
xchg
fcmovne
xor
xchg
jmp
test
dec
sahf
jae
sarb
cli
inc
sbb
mov
ds
xchg
pop
push
xchg
das
ja
jmp
pop
mov
xchg
es
xchg
push
push
icebp
or
cmp
aaa
or
jge
fucomi
ss
mov
shr
fistl
xor
out
mov
stos
les
cmp
jne
ret
lcall
jno
dec
xlat
mov
pop
xor
out
hlt
bswap
je
push
ficompl
fistpl
push
add
cli
sti
cmp
add
adc
jnp
pop
andl
je,pn
dec
add
das
xor
movl
sbb
or
pushf
adc
dec
testl
popf
xchg
mov
sub
sbb
push
cmpsl
and
rolb
mov
push
inc
mov
hlt
pop
and
dec
push
in
fldcw
add
sbb
nop
pop
cmc
clc
repnz
adc
push
sbb
scas
mov
stos
add
popf
and
daa
out
push
add
mov
je
adc
pop
stos
xchg
cmpsl
ds
add
pushf
hlt
jae
and
test
push
xor
fisttpl
and
cmp
stos
loopne
sbb
mov
lods
xor
push
cmp
mov
mov
pusha
add
cmp
bound
add
cmp
stos
xchg
int3
push
lcallw
stos
fwait
add
xchg
push
jae
test
sarb
pop
insb
or
call
pop
flds
aam
pop
pushf
inc
push
test
sbb
jnp
mov
in
popa
jl
cli
loop
sbb
mov
sub
jp
mov
out
xor
cli
or
mov
pop
arpl
push
dec
sbb
mov
fcmovnbe
leave
and
test
fldt
scas
je
loop
add
outsb
in
adc
jo
jbe
cwtl
inc
lds
movsb
cltd
mov
call
lahf
and
push
dec
ds
lahf
cli
add
arpl
adc
iret
add
lcall
aaa
xor
jl
ret
lds
sbb
mov
sar
pop
or
dec
out
sub
es
cmpsl
rcrb
and
mov
cltd
inc
xor
jle
mov
lcall
outsl
xchg
mov
insl
lods
add
jecxz
int3
sbb
mov
js
sbb
xor
mov
xor
sete
bound
cmp
fcomip
test
ds
loope
push
jb
and
repnz
insl
mov
insl
into
int
std
sahf
mov
and
mov
or
cmp
rorl
add
mov
mov
faddl
test
lahf
push
lret
mov
add
mov
mov
in
push
popa
xor
dec
into
dec
inc
mov
shll
aaa
dec
pop
xor
cmp
mov
or
call
adc
or
dec
mov
dec
sub
sti
sbb
mov
push
pop
in
sub
mov
jg
inc
mov
jns
fsubrl
pushf
std
sub
jo
mov
das
fisubs
xor
adc
jae
sti
adc
mov
mov
push
inc
xor
cwtl
or
cmp
test
mov
jl
outsb
rolb
loopne
mov
lea
sub
cmp
cmc
mov
gs
adc
pop
sahf
inc
sbb
dec
gs
or
xlat
cmp
inc
push
fadds
jns
adc
cli
fs
dec
mov
sbb
repnz
lret
mov
sub
out
dec
cmp
iret
ja
mov
clc
xchg
sahf
jmp
out
pop
orl
ret
jae
decb
xchg
js
mov
jae
or
test
adc
roll
test
mov
ds
ss
int
mov
adc
ljmp
stc
xchg
pop
inc
dec
psubusw
xchg
jno
mov
push
out
pushf
inc
jbe
sub
mov
into
or
imul
cmp
stc
cwtl
daa
out
icebp
lods
pop
shlb
call
in
dec
add
jo
ja
and
push
sbb
call
add
loope
xchg
pop
add
jno
or
cmp
jb
loope
ss
scas
jge
mov
add
in
dec
adc
int3
cmp
sbb
sarl
cs
inc
lahf
inc
out
aam
pop
adc
pop
test
xor
inc
nop
jp
jmp
into
aaa
pusha
mov
adc
xchg
adc
sahf
arpl
and
jb
stc
sbb
xchg
dec
sbb
lock
or
pop
iret
nop
mov
xchg
andb
pop
fdivs
pop
lds
mov
xchg
jg
nop
sbb
out
and
test
ret
fistl
jo
es
dec
fisubrs
xor
mov
jae
scas
or
mov
lret
mov
cmp
clc
and
mov
mov
cwtl
call
stc
divb
add
lods
inc
pop
push
rorl
bound
push
pushf
lret
data16
lret
xor
mov
mov
dec
mov
lret
jb
push
adc
mov
outsl
mov
stos
mov
mov
push
outsl
sbb
mov
cmp
adc
stos
inc
lahf
std
mov
popf
push
in
add
mov
fwait
out
sub
js
test
push
sub
test
int3
cmpl
xchg
add
add
mov
mov
cmp
bound
cmpsb
or
loopne
vmwrite
shr
loop
ja
jnp
dec
jae
xchg
mov
and
sub
xor
lods
mov
mov
inc
push
or
int3
xchg
outsl
xor
inc
xchg
inc
imul
in
hlt
sbb
movsb
out
test
lods
sbb
xchg
addr16
cmp
jne
mov
aad
lcall
adc
hlt
xchg
ljmp
in
fcoms
je
ja
outsl
push
push
xchg
mov
and
cmp
jae
adc
cmp
bound
add
sub
jo
fdivrp
fcmovnbe
test
xor
jg
xor
fwait
movsb
or
mov
cli
push
nop
fildll
mov
jp
cs
ljmp
xchg
sub
mov
ds
test
js
sarl
repnz
stc
into
shlb
mov
imul
movsl
stc
mov
lock
stos
shr
mov
or
outsl
mov
inc
inc
dec
clc
cmp
xchg
mov
addr16
mov
sbb
icebp
fdiv
popf
dec
sub
mov
add
adc
jp
jp
sub
push
stos
loopne
fidivs
je
shll
push
push
mov
adc
mov
push
fs
mov
mov
adcb
jmp
js
and
leave
mov
pop
in
jb
jo
decl
jg
shl
xchg
scas
or
lods
jbe
sbb
mov
push
push
inc
or
pop
sahf
test
cld
or
popa
loop
xor
inc
andl
rolb
xlat
or
or
inc
fs
xor
inc
rorb
inc
movsb
ss
mov
jb
roll
mov
popa
daa
push
pop
loop
js
adc
mov
add
hlt
dec
inc
add
shlb
shl
dec
pusha
js
jg
adc
cmp
sbb
sub
push
xor
mov
imul
out
sub
negb
mov
loop
vmwrite
jecxz
push
test
pop
negl
repnz
add
adc
rcrl
pop
mov
inc
mov
mov
ja
push
add
dec
mov
jo
cli
or
outsb
pop
cmc
mov
pop
xor
mov
dec
and
xchg
cmp
mov
insl
lea
idivl
outsl
push
push
and
cmc
stc
mov
leave
adc
idivb
pop
sub
mov
icebp
add
ss
or
fadds
sub
int
mov
lea
das
cmpsl
adc
mov
test
mov
das
and
lcall
data16
xor
add
mov
cmp
push
lds
hlt
add
iret
push
ret
ds
jg
in
pop
dec
popf
add
loopne
sub
iret
add
dec
jmp
dec
jp
mov
in
xchg
addr16
mov
out
adc
pop
incl
in
sbb
mov
fidivl
mov
lcall
inc
fs
movsb
fidivrs
fxch
cmp
push
and
imul
lret
mov
pop
adc
hlt
popf
mulps
jns
addl
and
mov
adc
push
aam
xlat
adc
aam
inc
hlt
push
push
cmp
inc
test
dec
push
cmc
push
pusha
or
popa
rcll
leave
lods
cli
adc
cli
adc
add
clc
and
jg
push
popf
loopne
cmpsl
xlat
mov
lcall
jg
sbb
jae
shlb
cmp
adc
add
sub
psrlw
cmc
pop
mov
lods
adc
fidivl
fsts
push
stos
sbb
cli
jp
das
fwait
xchg
xor
outsl
out
inc
pusha
icebp
pop
mov
and
mov
pusha
or
xlat
cmpsl
movsl
out
inc
loope
dec
push
or
es
decl
mov
stos
mov
pop
popa
mov
xchg
xor
mov
mov
mov
cld
imul
mov
jge
or
sbb
popa
sub
ds
push
nop
cmc
leave
dec
xchg
add
sbb
sub
mov
test
das
aam
leave
ja
mov
neg
loopne
out
dec
pushf
stos
stos
fsub
aam
nop
imull
das
or
xchg
cli
fs
mov
sahf
cld
dec
cli
sbbb
orl
cltd
aas
cmp
bound
jae
jg
mov
negl
or
push
xchg
sbb
lds
and
sub
mov
push
icebp
repz
xor
loopne
fnstcw
inc
shl
mov
icebp
out
lret
xlat
out
les
loope
fdivs
rol
pop
mov
imul
push
push
dec
hlt
xchg
cmpl
fistl
push
lahf
or
mov
call
ss
imul
and
dec
dec
add
clc
aam
pushf
nop
xchg
pusha
xor
lods
dec
divb
into
mov
mov
roll
dec
cmp
cld
push
sbb
out
add
inc
push
repnz
rcrl
sub
lock
loopne
lret
xchg
test
adc
insb
ret
dec
jg
insb
xchg
sbb
cltd
movsb
mov
jmp
mov
outsl
mov
sub
imul
jae
jne
int3
push
and
cmp
out
xchg
sub
cmc
pop
xchg
sbb
mov
cmp
fwait
aaa
std
scas
testl
jle
lret
dec
je
push
sbb
cmc
mov
gs
je
pop
aas
xchg
sub
test
test
int
xchg
jle
ud0
mov
scas
test
adc
sub
or
out
lret
jb
jle
addr16
insb
outsb
faddp
shrl
je
jae
outsb
inc
idivb
mov
or
into
sarl
jbe
inc
dec
and
push
pop
jmp
dec
mov
cwtl
scas
scas
push
aaa
lock
sbb
push
pop
icebp
inc
hlt
lods
dec
ret
mov
in
int
adc
mov
and
ja
movsl
sbb
pop
enter
mov
jmp
fisttpl
bound
mov
addr16
jmp
jmp
hlt
sbb
xchg
sbb
push
pop
arpl
cltd
aam
or
fcompl
jns
pop
inc
nop
adc
insb
lods
mov
inc
outsl
int
in
xchg
stos
test
adc
mov
fwait
decb
mov
je
push
inc
mov
pop
jg
test
and
fadds
inc
xor
inc
shll
pop
push
icebp
shll
add
inc
push
mov
add
ds
data16
adc
jno
mov
and
mov
idivb
xchg
mov
out
das
movsl
push
lret
jle
in
sub
rolb
lds
jne
incl
cltd
sarb
in
aad
jg
or
push
sub
inc
pop
sub
mov
sahf
fwait
lret
dec
pop
ljmp
fcomps
sbb
sbb
mov
inc
push
pop
push
loope
aas
sub
push
lods
xchg
sub
adc
jl
out
mov
adcl
jp
aad
test
or
and
stc
sbb
mov
mov
adc
adcl
das
jns
push
pop
movsb
jns
shll
xchg
inc
push
add
push
ficoml
jb
das
mov
jb
push
sub
cmp
in
arpl
jle
mov
jbe
loopne
insb
dec
test
mov
mov
adc
jg
insl
stos
mov
xchg
and
in
sbb
repz
cmpsl
sub
and
outsb
fs
push
pop
or
mov
and
in
lods
inc
cwtl
aam
loop
aam
pop
fsqrt
sarb
fldenv
inc
inc
jmp
popa
pop
mov
stc
dec
sbb
mov
or
add
jge
mov
ss
or
mov
out
fistpll
or
dec
mov
jge
jno
movsl
push
in
push
stos
into
gs
mov
jns
cmp
out
mov
movsb
scas
mov
stos
aas
mov
dec
ds
jnp
std
pop
int
in
mov
sub
stc
or
enter
pusha
aam
mov
push
sbb
imul
test
cmp
inc
jg
lods
xor
lods
hlt
lods
rol
fisubrs
xor
hlt
mov
repnz
adc
mov
cs
and
cmpsb
mov
push
stos
xchg
mov
fdiv
gs
sub
pop
lahf
outsb
cmpsl
lods
bound
adc
in
jle
jl
movsl
fwait
lret
or
nop
iretw
or
mov
shrb
aas
mov
ds
out
push
call
stc
rcrl
in
mov
pop
xchg
in
mov
faddl
inc
push
xchg
mov
setno
inc
daa
or
outsb
mov
and
cmpsb
scas
add
lods
xor
sar
jle
inc
mov
idivb
mov
aam
adc
pop
add
xchg
fisubl
fs
add
into
fistpll
out
and
cmpsl
jmp
js
or
cmp
aam
xchg
mov
pop
dec
sub
pop
xchg
adc
mov
push
setbe
push
stos
cmpsb
cwtl
jle
movsb
aas
inc
sub
js
ds
cmp
sbb
adc
pop
mov
mov
xchg
jns
mov
pop
sbb
hlt
adc
inc
iret
imul
and
mov
bound
cmpb
xor
xor
jae
ret
push
jmp
adc
xchg
pop
insb
sar
je
mov
mov
pop
subb
insb
pushf
mul
sti
xor
mov
sbb
pop
or
adc
popa
ret
jmp
mov
push
jo
and
mov
test
leave
mov
call
stc
mov
pop
push
adc
jnp
ret
nop
imul
sub
stc
lahf
inc
xor
xchg
jnp
cmp
mov
sub
dec
jp
orps
pop
data16
repnz
stos
adc
or
cmc
sbb
scas
aaa
inc
add
cmp
and
dec
and
popf
adc
mov
bound
hlt
cmp
pop
fwait
mov
add
cwtl
stc
sbb
data16
mov
and
xchg
rol
push
negb
mov
stos
adc
or
popf
fldenv
stos
bound
imul
mov
jp
outsb
stos
fucomip
subl
fcmovnbe
loope
jns
mov
add
sub
les
mov
mov
push
jo
jae
cli
adc
pop
push
push
add
inc
dec
lods
ret
imulb
jl
into
loop
jbe
sarl
ljmp
sbb
push
les
clc
jge
cmpsl
jns
popa
ljmp
xor
stos
cmpsb
jge
hlt
mov
lea
mov
icebp
xchg
and
das
sbb
pop
stos
rcrb
and
fcomps
jl
andl
and
loop
mov
iret
fidivl
pop
inc
sub
jb
push
mov
sub
stc
inc
mov
ds
mov
push
cmc
scas
inc
mov
inc
inc
fnsetpm(287
std
jnp
sbb
sbb
cmpsb
push
push
adc
pushw
mov
cmp
mov
cltd
push
push
inc
cmp
inc
mov
sbb
lea
inc
mov
adc
or
mov
mov
and
jge
jne
insl
out
in
dec
pop
push
arpl
lds
aas
and
std
xor
icebp
inc
daa
test
add
sahf
gs
stc
mov
pop
sub
cmc
mov
dec
jns
sbb
and
pop
and
addr16
fidivrs
add
js
shl
jne
in
pop
vmovaps
out
jo
scas
sub
in
pop
jle
andb
adc
sbb
adc
outsl
hlt
cli
int
pop
sbb
push
push
or
orl
lea
imul
sub
and
das
mov
int3
pop
sbb
repz
mov
jecxz
add
insb
rep
das
add
roll
cld
sub
mov
pop
pop
addr16
movsb
jp
or
jb
jecxz
mov
in
rorb
js
iret
adc
dec
jnp
in
xor
cli
data16
fs
fcmovnbe
and
lret
stos
inc
int3
mov
popf
dec
sub
sbb
into
sub
das
je
psllw
ret
mov
add
sbb
jno
jle
and
push
dec
sbb
jae
cmpsb
dec
cs
sbb
xor
mov
cmp
lea
aas
inc
imul
pop
ljmp
arpl
jne
inc
sbb
in
out
dec
push
or
fst
pop
aaa
loopne
adc
in
xor
bound
jle
dec
orl
or
lcall
gs
cmpb
cmp
push
aas
xchg
cmp
adc
push
in
mov
add
sub
ljmp
data16
addr16
out
push
ds
lcall
pop
out
cli
test
sbb
xor
push
add
das
iret
or
inc
jae
lahf
xchg
mov
dec
call
mov
push
jmp
ds
pop
pop
jno
outsl
sti
inc
inc
pop
or
add
lahf
rcll
pop
ret
adc
out
ss
in
cli
adc
inc
je
sbb
cmpsl
adc
pop
das
fstpl
insl
mov
test
lret
inc
and
pop
fs
mov
adc
insl
ss
pop
fsts
xor
pop
pop
jle
pushf
add
loopnew
outsb
mov
les
ds
mov
jle
inc
outsl
fldcw
repnz
mov
pop
test
sub
inc
mov
lods
inc
sub
aaa
test
push
or
mov
sbb
jno
into
insl
leave
repnz
loop
ja
push
fimull
out
fistps
jns
pop
fwait
cltd
ror
sub
ret
out
repz
in
shll
jp
repz
mov
and
xchg
ljmp
adc
ret
jnp
jmp
jp
xor
repz
sti
arpl
pop
mov
je
mov
adc
or
cld
cld
int3
pop
inc
enter
cltd
imul
jmp
fnstenv
and
popa
icebp
das
and
mov
mov
push
push
dec
fimull
mov
and
sub
pop
in
data16
or
out
inc
addb
mov
and
mov
jbe
xchg
pop
loopne
mov
into
lret
stc
push
ret
fs
or
add
fmul
inc
sub
push
dec
outsl
push
mov
lcall
dec
pushf
lock
jp
jno
gs
lahf
call
adc
xchg
xchg
pop
sbb
pushf
jb
nop
mov
jp
inc
mov
iret
fmul
in
lods
adc
out
ja
sbb
push
push
ret
xchg
xchg
mov
dec
call
scas
or
mov
jb
lods
mov
lds
jle
or
ffree
jg
outsl
xor
xor
xor
add
and
lret
lea
stos
inc
mov
fsubrl
push
and
rolb
xor
shlb
loop
mov
cmp
or
dec
lods
sti
cmc
dec
mov
dec
push
inc
mov
and
lret
mov
addr16
pop
sub
ja
mov
adc
mov
and
pop
mov
aaa
and
add
inc
inc
fldenv
test
and
xor
test
mov
mov
mov
sub
test
lcall
idivl
adc
aam
mov
test
jle
scas
pushf
push
mov
push
neg
xchg
and
int3
pop
fdivs
ja
insb
or
test
cmp
jle
dec
cmp
arpl
leave
jl
addr16
ja
cmp
into
push
cmpsb
ss
dec
lahf
ds
push
rcr
xchg
scas
jae
mov
popa
std
stos
push
cltd
lock
addr16
adc
dec
jmp
sarl
ss
jno
daa
add
cmp
mov
rcr
sbb
fiadds
into
ds
mov
or
jae
cmp
mov
mov
adc
lds
cld
movsb
sub
jl
jnp
mov
scas
push
test
mov
fdivrs
or
xchg
dec
inc
cli
out
jb
cmp
sbb
add
bnd
add
cmp
hlt
loopne
cmp
pop
push
add
mov
mov
cmp
sbb
dec
loop
int3
flds
insl
inc
fadds
cmp
out
push
jl
in
addb
mov
shlb
or
outsb
out
call
fsubl
sub
lock
test
sub
loop
pusha
fdivrl
in
xor
push
mov
xor
jle
mov
cmp
mov
mov
je
lahf
dec
fnstcw
out
shr
xchg
adc
add
or
ret
inc
into
data16
mov
sahf
sub
jecxz
shl
mov
push
sti
adc
pop
mov
ficomps
cmc
push
cld
outsb
test
shrl
insl
popa
dec
loop
sbb
ljmp
jmp
lock
roll
cmp
bound
cmc
repz
data16
jns
movsb
or
mov
sbb
cli
outsb
jecxz
adc
pop
pop
or
shrb
mov
jmp
mov
mov
push
sub
sti
int3
cmp
loope
andb
psubd
cld
xor
mov
cmp
daa
dec
aad
ret
xor
push
test
loope
inc
pop
iret
jnp
push
and
es
sti
clc
int3
leave
ret
cli
and
jns
mov
pop
int3
and
pop
mov
adc
inc
cmp
push
cmp
sub
jge
fsubrs
aaa
push
test
outsb
push
cwtl
jg
cmp
ds
mov
fs
adc
push
xchg
or
nop
or
mov
pop
outsl
adc
cmp
mov
in
pop
adc
push
dec
jge
cmp
cmp
loope
xlat
and
and
hlt
rsqrtps
mov
cmp
pop
mov
into
adc
in
mov
cmp
pop
fisttps
xchg
jb
ja
sarb
or
jmp
les
push
and
pop
ret
repnz
sbbl
out
testl
pop
ret
stc
imul
js
cmp
jbe
je
sbb
mov
scas
pop
adc
ja
and
int
call
xchg
sub
add
mov
in
dec
nop
lret
sub
pushf
lahf
xor
or
adc
xchg
ja
push
push
jp
pop
hlt
mov
pop
mov
inc
jle
cwtl
cmpsb
or
aaa
mov
punpckldq
xlat
pop
xchg
push
push
mov
add
mov
and
pop
jmp
and
mov
push
in
in
sahf
or
cmp
pushf
mov
push
inc
add
cmp
fisttps
push
mov
sub
testb
mov
mov
jb
imul
addr16
mov
pusha
mov
xor
inc
jae
nop
pop
inc
pop
jge
ss
sbb
inc
xchg
js
mov
in
xchg
imul
sahf
lcall
push
cmp
in
popa
shl
pop
packuswb
or
jmp
push
out
jae
lock
idivl
fsubrs
addl
push
mov
popf
aad
jbe
dec
mov
cmpsb
out
js
xchg
out
xor
xor
pop
or
push
mov
stos
fs
push
dec
mov
ja
mov
data16
add
loopne
jmp
adc
pop
fs
loope
sub
pop
jo
hlt
sbb
push
push
sti
inc
loopne
scas
jmp
push
pop
fisubs
rcrl
adc
push
jecxz
and
aam
ret
dec
je
lret
or
aaa
stc
dec
sub
cs
xchg
sub
decb
sbb
dec
sbb
mov
mov
xchg
cld
movsl
mov
push
aam
loope
mov
lret
decl
aam
int3
inc
cmc
test
inc
movsb
push
inc
mov
jp
xor
shlb
arpl
dec
fistl
dec
popa
dec
fidivrl
adc
clc
js
xchg
or
jno
int
mov
cmp
imul
add
jp
ljmp
dec
mov
scas
xchg
testl
adc
mov
adc
xchg
xchg
inc
lea
xor
adc
sub
jbe
bound
cmp
movsl
fs
inc
mov
sbb
in
cmpsl
sub
clc
in
ljmp
inc
and
adc
jecxz
mov
mov
mov
test
pop
sti
adc
jbe
pop
dec
test
pop
push
das
je
push
inc
decb
xor
sub
xchg
fs
das
loope
in
test
adc
ret
addl
push
mov
mov
jne
and
andl
bound
scas
je
notl
fists
lret
push
push
and
and
movsb
push
ret
outsl
sbb
pop
xchg
ret
sbb
mov
fwait
sbb
popa
cmp
dec
pusha
push
fs
pop
rorl
dec
or
fadds
jle
cmp
in
or
movsl
inc
fisubl
push
sbb
hlt
dec
and
sbb
js
jge
mov
lods
jbe
mov
push
jmp
add
outsl
ret
cmc
lcall
je
push
lods
push
test
call
xlat
cltd
aam
mov
and
insb
arpl
push
sub
xor
cmp
imul
test
idiv
sbb
inc
push
in
dec
xchg
lcall
mov
jno
leave
xor
pushf
andb
mov
xlat
repnz
jmp
xchg
into
hlt
jmp
addr16
fs
cltd
pop
and
clc
lret
mov
sub
and
fs
push
inc
jo
andb
and
mov
cs
and
jnp
or
call
pop
loop
fsts
inc
sbb
pop
adc
mov
mov
std
xor
movsl
movsl
cmpsb
scas
repz
clc
dec
stos
test
clc
bound
push
mov
sub
pop
std
ja
in
mov
lret
xlat
push
jecxz
scas
loop
std
aam
jecxz
inc
mov
adc
dec
xchg
xchg
xor
call
and
pop
push
clc
clc
xor
mov
enter
xchg
sbbl
outsb
ret
dec
ljmp
mov
mov
in
js
cmpsb
imul
idivb
pop
push
or
test
xor
jg
sbb
and
or
dec
imul
out
stc
add
pop
test
mov
pusha
movsb
pop
adc
xchg
xchg
sbbb
pop
cmc
lcall
push
push
and
inc
mov
mov
sbb
clc
mov
sub
imul
sbb
shrb
mov
les
adc
add
xchg
mov
popa
mov
js
dec
aam
ss
adc
out
xchg
cmpsl
ljmp
pop
daa
cmc
flds
jns
mov
xchg
daa
cmp
jl
test
cmp
pop
dec
and
aaa
in
sbb
movsl
adc
sub
xchg
cmp
fld1
outsl
mov
gs
xchg
cmp
xor
add
outsb
adc
int3
fcom
mov
test
mov
std
out
pop
icebp
call
and
call
popf
fwait
aad
out
fsubrs
mov
jl
loope
fildll
iret
inc
bound
pop
cmpsb
xchg
jmp
push
and
jle
mov
dec
data16
add
dec
or
lods
out
jae
adc
roll
cmp
xchg
inc
sbb
jp
pop
cmp
adc
dec
loope
xchg
sarb
mov
loop
loope
xchg
iret
mov
lahf
mov
faddp
jne
or
inc
push
je
mov
sub
test
mov
std
mov
inc
out
cmc
ret
test
bound
es
shll
or
std
xor
xchg
dec
xchg
in
xor
mov
insl
jp
imul
ss
out
push
pop
std
js
mov
push
gs
sbb
test
stos
sbb
inc
ljmp
cmc
jno
pusha
jns
adc
aam
and
mov
dec
cs
pop
mov
mov
pop
addr16
gs
pop
scas
push
in
and
fimuls
inc
mov
mov
setge
xor
aam
pop
and
push
sbb
stos
mov
jne
in
pop
cmp
fs
sahf
mov
and
cs
fsubs
xor
pop
arpl
arpl
aad
das
fwait
add
jbe
mov
mov
dec
hlt
xchg
and
xchg
in
xor
loop
push
inc
les
lods
jg
jg
adc
xchg
popf
inc
inc
int3
sbb
fcoms
push
aam
sub
cltd
imul
cvtps2pd
ja
outsb
sbbl
cmc
push
movsl
test
add
ljmp
push
cwtl
adc
outsl
xor
sub
inc
mov
push
jo
aad
jns
cmc
test
inc
push
leave
push
adc
pop
and
lock
pop
add
shlb
dec
ja
movsb
int
mov
or
mov
loopnew
push
ja
lahf
pop
es
testl
test
rcrb
cmp
ss
inc
out
cmp
mov
jno
and
xchg
xorl
das
push
push
mov
mov
jae
jb
mov
cld
add
ror
lock
aas
ret
ficompl
scas
fdivrl
dec
mov
hlt
das
sub
fdivs
push
push
shl
cld
in
std
mov
lods
mov
popf
inc
dec
or
imul
pop
mov
or
orl
and
xor
sub
jg
lret
lret
iret
imul
add
out
and
lods
subb
xorb
les
stos
mov
push
lea
sbb
xchg
out
sub
ds
pop
xor
into
shlb
loop
push
xor
lods
adc
xorb
dec
mov
jge
inc
mov
and
jb
ljmp
lcall
gs
scas
sbb
sub
les
mov
cmpsb
pushf
inc
std
dec
xchg
les
and
mov
push
inc
cmp
cwtl
or
inc
push
lahf
into
sarb
cwtl
bnd
jns
sub
cmp
add
dec
xchg
ds
push
js
inc
dec
mov
push
shlb
inc
cmpsb
test
add
rcll
stos
pushl
and
lock
push
mov
mov
inc
push
pop
jnp
insl
mov
fwait
mov
mov
jbe
outsl
aas
roll
popf
test
notl
push
pushf
or
lds
jl
jmp
push
aas
cmpb
and
jg
mov
imul
fcompl
sahf
or
mov
daa
addl
sahf
pusha
jo
jle
lahf
clc
lret
push
jae
jmp
inc
loop
fsub
xchg
insb
fidivs
lret
fsubrp
xchg
test
mov
jne
pushf
out
mov
fs
adc
push
out
xchg
out
xchg
add
xor
fisubrs
add
jb
dec
out
out
xor
dec
cwtl
fxch
popa
xchg
pop
mov
dec
arpl
std
lret
xor
mov
fildl
dec
cmpsl
adc
addr16
or
lret
fstpt
ja
lea
in
sbb
dec
js
in
jmp
jb
add
rolb
jae
push
test
cmp
pop
sbb
arpl
les
stos
les
aad
jmp
pop
test
push
imul
fiadds
sahf
push
cmp
in
add
jb
cltd
aas
pop
loop
sbb
pop
stc
nop
loop
out
lods
add
outsl
out
movb
or
sub
sub
call
dec
data16
loop
pushf
out
lahf
loope
add
cmp
das
mov
cwtl
ljmp
or
xchg
adc
into
fiadds
sub
jmp
dec
ljmp
lahf
divl
pop
mov
imul
fidivrl
mov
fildl
lret
add
imul
xchg
adc
and
jo
add
out
jp
cmp
jns
sbb
inc
fiaddl
xchg
jecxz
pop
mov
xchg
aam
dec
rorb
push
cmc
mov
or
push
sti
sbb
mov
jb
jnp
push
sub
rclb
rcrb
enter
aad
nop
cld
mov
and
imul
cmc
push
xlat
sub
push
pop
dec
andl
push
mov
jg
add
dec
iret
cmp
cmp
int
loopne
aas
xchg
jne
roll
iret
add
je
jnp
insl
lahf
mov
or
pusha
bound
sti
lods
pop
jo
aad
mov
dec
pop
fstpt
jno
sub
xchg
lds
mov
adc
cmp
mov
aaa
ficompl
fxch
add
xchg
lcall
sub
fwait
push
aad
xor
loopne
movsb
jnp
js
add
in
int
xor
mov
aaa
int3
mov
cmp
xor
sub
adc
pop
inc
push
clc
fsts
insb
mov
xor
mov
mov
sbb
lds
shl
mov
adc
push
ja
lock
mov
cmp
push
outsl
test
sbb
xchg
aas
jge
loopne
in
lret
imul
cmp
jno
ret
outsb
pop
dec
dec
pop
shrl
mov
push
fldz
jae
negb
push
loope
aaa
dec
in
pop
or
hlt
cmc
push
cs
inc
or
sarl
dec
fstps
sarl
shl
shrl
cmc
add
out
scas
dec
mov
repz
jb
mov
repnz
aas
int
insb
sbb
push
and
pop
dec
add
out
fistpl
xor
push
pop
cmp
or
test
cmp
inc
pop
sbb
lea
dec
push
add
mov
orl
outsb
lods
mov
inc
mov
pop
dec
sub
inc
jle
hlt
int3
aad
pop
sbb
mov
adc
inc
xchg
push
mov
jnp
popf
xchg
out
test
out
xchg
xchg
leave
push
jmp
xor
stos
sub
shlb
and
das
repz
popf
pop
hlt
stc
add
sub
xchg
test
pop
pop
jae
rclb
mov
jo
test
dec
mov
push
mov
jbe
adc
mov
lods
sahf
push
sbb
out
loopne
lahf
sbb
cmp
cmp
lds
or
arpl
test
test
jns
stc
aas
jl
pop
and
xchg
xchg
fwait
mov
or
mov
loope
imul
cmp
scas
addr16
cmp
cmp
or
push
sbb
jle
in
cmp
aam
arpl
jbe
push
cmc
lea
jb
into
mov
aas
fadds
test
push
out
aas
cmp
xchg
arpl
mov
mov
and
xchg
push
sub
hlt
ja
mov
popf
mov
lcall
stos
xchg
mov
ret
dec
test
shl
push
lret
pop
bound
orb
push
xchg
out
push
mull
pop
popf
push
popf
mov
fldcw
mov
xor
arpl
out
jp
rcl
jg
loope
xchg
xor
lcall
sub
rorb
dec
pop
inc
add
add
xlat
imul
jmp
jg
ret
jp
shlb
sub
clc
inc
pop
mov
cmpsb
jns
inc
pop
push
sub
or
leave
jae
addl
jg
sarb
xor
lods
stos
stos
pop
mov
mov
decl
icebp
mov
sbb
ret
mov
sti
mov
sbb
cmovg
dec
ror
popa
inc
scas
ss
bound
push
test
xchg
cmp
dec
loop
ret
rcr
int3
in
push
fsubs
xchg
inc
inc
mov
adc
out
push
xchg
repnz
fnstcw
xor
scas
out
mov
int
pusha
mov
insb
dec
pop
int3
or
out
int
pmaxsw
push
or
bound
std
dec
imul
clc
iret
rol
pushl
lock
xchg
sbb
jne
jnp
add
xor
dec
mov
je
sub
xor
xor
dec
aaa
inc
les
imul
mov
fwait
clc
dec
aam
xor
sub
dec
jo
push
xchg
mov
pop
sub
jb
in
pop
aaa
sbb
imul
lret
mov
jg
pop
rcr
mov
mov
mov
ror
add
sub
and
mov
pushf
pushf
xor
sub
test
shll
inc
add
popa
mov
ds
cwtl
inc
and
std
test
xor
out
cmp
adc
xchg
pop
add
fs
dec
xchg
mov
xchg
lret
mov
dec
or
stos
dec
sbb
out
and
mov
sub
lret
cmpsb
pop
xlat
xor
dec
data16
xchg
mov
xchg
lock
es
test
outsl
mov
jno
sub
xchg
adc
jl
xchg
xchg
or
aaa
pop
lds
stos
push
js
sbb
xor
pop
imul
inc
cmp
fmull
sbb
add
pop
mov
cld
adc
test
xchg
inc
jl
je
out
mov
sub
xor
cmpsl
ret
mov
cmpsl
sub
loope
leave
adc
jmp
or
stos
test
xchg
jb
pop
into
and
loop
jo
xchg
push
jo
dec
push
lock
mov
scas
xchg
dec
iret
or
jno
shlb
mov
pop
sahf
sbb
pop
sbb
rcll
push
cmpsl
jmp
clc
scas
cmpsb
fdivs
test
or
inc
push
xor
jg
adc
pop
mov
push
dec
jg
and
cmpsb
jge
and
lods
jnp
sub
enter
sbb
push
push
mov
movsl
call
mov
cwtl
xchg
addr16
fistps
pop
cltd
filds
shrl
add
int3
popf
sub
dec
xor
aam
add
loopne
call
fidivrs
cmp
iret
dec
lods
pop
inc
push
clc
and
xchg
cmc
ret
push
rcrb
ret
outsb
enter
sub
ret
pop
and
cmp
add
jne
and
shlb
sub
in
xor
testb
int
pusha
scas
rorb
dec
out
mov
pop
xchg
xchg
xor
insl
mov
stc
frstor
jnp
push
leave
adc
ja
shrl
testb
insl
mov
gs
sub
cmp
xor
push
xchg
pop
shl
jle
stos
fs
inc
dec
mov
pop
mov
jl
lret
mov
pop
xor
movsb
sbb
pop
imul
jne
mov
push
bound
push
mov
sahf
mov
xchg
mov
int3
or
xor
in
sbb
sbb
mov
push
pop
dec
insb
lret
nop
dec
shll
int
adc
cmpsb
xlat
fsubrs
add
mov
cmpsb
fcmovnbe
pop
xchg
aad
mov
cmp
sbb
cmp
dec
mov
andb
ja
popf
dec
sub
xlat
pop
insl
testb
shr
push
je
add
stos
or
dec
das
outsb
scas
mov
mov
mov
inc
lcall
popa
push
jae
sub
push
xchg
loopne
xchg
nop
outsl
or
push
and
and
jbe
iret
push
adcl
xor
xchg
xor
inc
jb
testb
test
lea
mov
xchg
xchg
cmp
stc
cmp
pop
dec
out
bound
mov
and
cmc
test
push
xor
or
cmp
sbb
sub
fsts
popa
add
ja
mov
imulb
ficoml
loop
mov
mov
xor
test
sbb
mov
clc
xor
dec
pop
test
test
jne
xchg
pop
pop
mov
cmpsl
cmpb
pop
orb
test
idiv
inc
jno
cmp
add
sub
fs
popf
xor
shlb
mov
xor
xchg
and
lahf
or
xchg
test
dec
insb
movsb
mov
hlt
das
or
loop,pt
imul
push
cmpsb
mov
arpl
mov
sbb
inc
test
jne
repz
jg
repz
jle
mov
cmp
test
fsts
fdivrs
nop
mov
and
sti
cmp
or
sub
sub
dec
lret
push
pop
mov
and
fistps
addr16
aaa
jo
mov
pusha
arpl
sub
and
lret
test
dec
push
push
and
push
mov
cmp
pop
mov
in
aaa
cmp
ficoml
sar
rorb
jecxz
lea
inc
dec
popa
push
xor
fimull
dec
mov
addr16
sbb
mov
sub
jl
add
mov
jae
xor
rcll
aas
fidivrs
in
ja
adcl
pop
bound
into
push
out
dec
dec
inc
daa
imul
enter
lret
out
movl
lods
mov
arpl
jmp
inc
cmp
out
cmpb
sahf
add
mov
pop
sbb
push
rcl
fcmovne
inc
dec
adc
mov
sub
aad
test
out
fwait
mov
and
cmp
push
lahf
mov
mov
icebp
and
popl
push
out
xorl
fdivr
imul
leave
pushf
jbe
jb
jbe
lods
bnd
out
inc
fdivs
lock
test
inc
pop
xchg
mov
jae
pop
ret
dec
and
nop
mov
xchg
pop
and
lods
pop
shl
fidivs
mov
pop
xor
adc
sbb
sbb
into
out
test
jge
jbe
test
out
push
adc
sahf
push
loopne
inc
and
add
and
cwtl
jg
jns
jns
push
xchg
mov
and
insl
popl
cmc
inc
jge
or
scas
xchg
loope
gs
iret
ret
xor
cmpsb
aad
adc
out
int
mov
inc
ljmp
and
jp
or
ja
nop
dec
pop
cltd
fistpl
pop
mov
cmpsb
inc
rcr
ret
ret
jle
sbb
lea
xor
and
inc
add
sbb
test
xor
xchg
xor
jmp
lahf
imull
jmp
in
lds
test
out
lahf
into
loope
shrb
lret
xor
dec
outsl
frstor
stc
add
fmulp
mov
mov
mov
andl
mov
addr16
mov
loope
pop
jge
in
shl
pop
ljmp
shll
mov
rorb
sbb
rcl
jmp
jno
xchg
xchg
xchg
cmp
cltd
shrb
fnsave
pop
push
or
add
add
fucomip
pop
sbb
jg
xchg
push
fisttpl
lcall
jnp
mov
sbb
push
lods
cmp
ficompl
add
sub
mov
mov
data16
adc
push
testb
js
test
mov
hlt
inc
jae
not
jo
push
sti
xchg
ret
pop
loope
xlat
loop
das
lret
imul
add
lcall
push
sahf
mov
scas
test
outsl
adc
outsw
packuswb
js
mov
or
icebp
int3
orb
xor
mov
lods
push
fucom
js
xchg
and
mov
rclb
out
mov
xor
add
adc
mov
cmpsb
mov
mov
faddl
adc
sti
sbb
sub
lds
sub
add
dec
mov
int
es
cmp
jl
fcom
pop
push
ficomps
ljmp
adc
mov
jnp
mov
lahf
sbb
stmxcsr
cmp
and
ret
cmc
ficompl
xor
in
call
xor
dec
addr16
loopne
inc
cwtl
or
test
sub
mov
push
int
mov
cmpsl
mov
xor
into
pop
dec
pop
inc
sar
and
mov
shr
arpl
stos
loopne
bound
sahf
cltd
cmp
xchg
xchg
push
and
cmpsb
add
and
into
scas
in
outsb
sti
jle
cmp
leave
outsb
inc
in
and
jae
dec
mov
iret
in
popf
dec
imul
xchg
clc
lods
mov
lock
data16
cmp
push
cmp
push
or
and
ljmp
xor
cmp
jbe
sub
imul
jl
or
or
inc
sbb
imul
pop
stos
cmp
popf
push
das
dec
lods
and
iret
ljmp
lret
pusha
lea
push
xor
jecxz
push
pop
pop
add
sahf
mov
pop
add
inc
in
popf
add
lods
aam
aaa
fcoms
lret
dec
rcll
ficoms
xlat
pop
push
sub
sbb
addb
pop
mov
stc
inc
mov
push
xor
add
sbb
aam
adc
mov
pusha
aas
rorb
pop
xchg
inc
adc
jl
mov
rclb
lcall
jmp
insb
popw
cmpsb
adc
std
scas
inc
mov
xor
and
imul
mov
push
push
mov
xchg
lahf
fisttpl
sub
dec
fs
addb
sbb
mov
cmc
jbe
jne
sbb
shl
fadds
jbe
insl
push
pop
cmc
jl
rcll
aaa
cmp
inc
inc
cmp
aaa
lret
push
adc
test
push
cmp
into
imul
jnp
adc
insl
sub
inc
mov
into
aaa
pop
jb
ja
mov
inc
arpl
stos
dec
push
loop
inc
out
repz
insb
xchg
pop
push
into
int3
cld
jo
ds
xchg
clc
xchg
insl
inc
push
jns
icebp
in
test
add
xor
in
jae
and
subl
jbe
jae
mov
out
daa
mulb
outsb
incb
je
lods
std
mov
mov
inc
int
cmp
ds
fwait
pop
push
push
sub
xchg
sbb
cmp
ljmp
loop
sub
shll
add
mov
dec
lods
or
call
jmp
fwait
loop
movsl
je
inc
inc
dec
xacquire
sub
lods
cmp
add
and
inc
in
mov
andb
push
lea
cs
aas
shl
add
mov
jno
nop
rol
fwait
sub
push
add
cmpb
fs
and
rorb
outsb
aaa
enter
test
jns
or
inc
icebp
pop
jmp
sub
xchg
xchg
mov
or
out
daa
mov
cltd
imul
aad
clc
bnd
in
out
mov
mov
rcll
les
stos
lock
lret
xchg
and
in
test
shlb
cwtl
mov
push
jle
xchg
loop
jle
inc
jp
cmpl
mov
mov
sbb
push
add
shll
mov
cmpsb
pop
cltd
adc
in
cmp
mov
mull
mov
pop
add
push
inc
add
push
adc
mov
cmp
addb
xor
mov
pusha
test
inc
gs
mov
dec
call
inc
in
mov
insb
jecxz
cmc
les
jno
int3
addr16
add
jno
mov
loope
lods
push
pop
roll
and
add
lcall
push
mov
fstl
js
rol
inc
mov
xor
mov
sub
dec
filds
push
mov
lahf
je
dec
mov
mov
lret
hlt
rorb
pop
call
dec
mov
inc
outsl
add
in
clc
xchg
psrlw
in
insb
jno
dec
sub
push
or
cmp
daa
test
and
mov
in
stc
cltd
jb
xchg
push
les
ljmp
clc
push
cmpl
dec
fcoml
icebp
repz
inc
lcall
in
jle
fisubrs
or
insl
dec
lods
bound
jp
jle
repz
ret
lret
insl
mov
and
sbb
and
negl
mov
data16
lcall
push
dec
testb
int
mov
inc
xchg
inc
ljmp
sbb
add
int
arpl
jns
cli
cwtl
cmc
cltd
hlt
pushf
int3
dec
in
test
mov
mov
je
dec
lods
repnz
lcall
add
clc
or
mov
xchg
sbb
es
inc
fcoml
or
aaa
cmp
cltd
mov
repz
push
in
clc
aam
xor
mov
fbld
cmpl
out
cmc
jg
loop
push
outsl
push
jg
aam
dec
pushf
mov
mov
lods
pop
xor
sar
fisttps
in
nop
lea
clc
adc
out
ja
xlat
mov
sarb
out
call
push
dec
mov
fistpll
cmp
mov
insl
sbb
imul
inc
mov
out
mov
cwtl
ret
jg
pop
push
sbb
in
dec
pop
pushf
insl
dec
dec
cmp
std
xchg
cwtl
xchg
lcall
call
dec
outsl
add
stos
mov
mov
push
data16
rcrl
shll
mov
sti
mov
mov
idivb
and
int
push
negb
inc
cli
into
push
imul
inc
push
cmp
leave
adc
adc
inc
fwait
sub
and
lock
fimuls
ljmp
pop
lret
push
std
push
mov
pusha
rorb
xor
call
dec
pushf
out
aaa
pop
mov
inc
xor
dec
xchg
xor
int3
out
sub
sub
push
fsubl
or
adc
xor
jg
mov
inc
jmp
xchg
outsb
add
pop
sbb
mov
xchg
inc
lret
jecxz
nop
or
movl
push
sbb
gs
fidivrl
jne
sub
subb
and
aaa
pop
mov
adc
mov
shll
data16
addr16
mov
pop
fwait
std
in
sbb
js
ror
das
cmp
xchg
mov
vmwrite
sbb
push
mov
hlt
mov
push
sub
adc
fcoml
jmp
mov
lods
je
dec
aaa
rcr
inc
imul
test
jp
out
cmp
scas
popa
negb
pop
fdivr
xchg
cmp
and
mov
movb
pop
sbb
and
mov
es
repnz
or
inc
and
xchg
push
mov
insb
imul
and
adc
jnp
pop
add
cmp
xchg
sbb
lcall
aad
lods
cwtl
fcoml
les
xorl
push
mov
add
pop
popf
orl
pop
cmp
sbb
inc
test
or
pmaxsw
push
pop
cmp
icebp
push
or
push
orb
cs
jmp
pop
sub
push
roll
decl
inc
mov
adc
loopne
pop
xor
cmp
xchg
das
xlat
loopne
cmpsl
xchg
mov
push
sub
mov
jne
andl
and
int3
fistpll
loop
push
enter
in
xchg
addr16
ja
or
jl
stc
inc
push
xchg
pushf
pop
lds
mov
icebp
int3
les
or
in
adc
pushf
push
or
pop
jge
and
test
repz
lds
jmp
cmpsb
pop
mov
xor
aam
fmul
pop
stc
rclb
xchg
sub
repz
mov
mov
imul
into
addr16
pop
push
stos
mov
pop
push
cmp
vmovntdq
ds
and
push
xor
mov
inc
and
stc
loopne
jmp
lahf
jns
aaa
je
or
cmc
cmp
fisttps
mov
pop
cmp
xchg
mov
jb
mov
ret
fwait
repz
lret
rol
mov
sbb
adc
pushf
xor
pop
aad
repnz
outsl
outsb
add
mov
clc
mov
mov
lcall
imul
mov
xlat
mov
push
pusha
out
mov
pop
mov
cmp
aaa
and
mul
pop
add
dec
and
sub
jae
ret
pop
cmp
filds
loopne
in
sbb
jo
sub
pushl
inc
rol
sub
dec
loop
dec
mov
movsl
or
mov
adc
push
notb
test
push
insl
loop,pn
popf
lret
xchg
push
mov
hlt
inc
mov
dec
or
jp
dec
popa
or
sbb
mov
sahf
mov
test
or
loopne
in
and
aad
mov
inc
test
stos
shl
sbb
sarl
mov
push
jecxz
shlb
or
idivb
je
bound
loopne
lock
mov
lahf
xchg
cmpb
jle
dec
ds
xchg
data16
jns
aas
or
and
or
jp
mov
jecxz
cmovne
mov
mov
pop
stc
jne
lea
enter
shlb
sub
xchg
pop
add
xor
cmp
loope
add
sti
push
out
add
fidivs
xor
faddp
sbb
shlb
add
xor
mov
adc
shrb
fcoml
js
sub
cmp
repnz
sbb
push
enter
sbb
insl
sub
out
jl
out
sbb
add
pop
mov
jae
lods
setg
aam
lock
cmp
sti
sub
dec
lret
or
add
test
jno
mov
cmp
pop
mov
int
inc
fdivr
iret
fstpt
mov
fildll
outsl
mov
add
push
push
push
in
mov
cmpl
sub
into
cltd
cltd
icebp
subl
repz
sbb
test
lcall
add
sbb
stos
sarl
add
stc
jge
scas
mov
orl
insb
mov
testb
jg
jle
insl
lahf
jnp
popa
cmp
test
call
xor
jl
mov
push
pop
enter
pop
sub
mov
popa
sbb
cmp
mov
sbb
pop
push
ficomps
xchg
js
test
adc
int3
out
shrb
fiadds
push
lcall
stc
ret
mov
adc
add
insb
mov
xlat
imul
adc
jle
rcrl
aad
pop
popa
sbb
mov
inc
inc
push
fwait
insb
sbb
sub
cld
push
shlb
sub
sbb
call
stos
outsl
addr16
inc
adc
mov
mov
cltd
pushf
sbb
xor
shrb
in
nop
out
dec
cmp
mov
pop
xorb
jns
mov
lahf
addb
movb
pop
push
divl
sti
cmp
sub
jns
mov
fs
xchg
in
inc
mov
rcl
popf
sub
sbbb
inc
and
pop
xlat
push
pushf
sahf
cmp
lcall
repnz
cwtl
mov
push
sub
mov
stos
add
out
rorl
pop
mov
pushf
filds
jb
add
dec
or
fnstenv
loopne
or
and
mov
je
jg
mov
insl
add
jmp
xchg
decl
fsubl
mov
add
xor
or
mov
push
xor
inc
rcll
sub
bnd
mov
ds
or
mov
adc
push
nop
test
ret
pop
add
add
repz
sbb
ja
scas
sbb
rorl
pop
cld
lcall
pop
or
stos
mov
push
cmp
xor
les
pop
outsl
and
test
cwtl
push
and
jb
push
cmp
adc
nop
dec
xor
sti
or
mov
push
push
and
aas
es
in
pop
mov
sub
sbb
mov
repz
mov
xchg
inc
or
hlt
fidivrs
pop
pop
adc
mov
sbb
xchg
inc
movsb
nop
cltd
lret
cmp
repnz
sbb
mov
jp
lds
sbb
sbb
and
mov
fs
xchg
fs
test
insb
jg
into
stos
mov
rcl
sub
pushfw
lods
ret
lods
data16
inc
jno
sub
dec
sub
mov
lret
movd
outsl
hlt
out
call
sub
inc
repz
into
mov
hlt
mov
dec
pop
insb
rcrl
popa
les
scas
adc
pop
cltd
ss
icebp
mov
mov
fimuls
pop
inc
xor
scas
push
push
ret
test
pop
xchg
std
add
xor
ljmp
adc
outsl
xchg
and
insb
sbb
mov
add
in
cmp
clc
add
movsl
ljmp
mov
mov
cmp
mov
and
add
and
inc
mov
mov
cmp
and
cmpsl
push
imulb
add
push
int
cli
xchg
pusha
lds
cmp
fildl
mov
xor
dec
jo
cld
sbb
cmp
cmp
cld
push
stos
aam
xchg
loopne
mov
add
repnz
rcrl
push
movsb
dec
mov
push
mov
inc
cmpsb
fnstcw
movsl
dec
aam
lock
popa
add
or
mov
je
ret
popf
pop
sub
sub
jecxz
shrb
jg
push
pushl
mov
xor
stos
sbb
hlt
aas
mov
les
push
dec
fstpt
rcrl
cmc
inc
xor
lods
movsb
daa
adc
lds
mov
push
aad
pushf
pop
jno
andb
mov
jl
push
sbb
mov
sbbb
daa
and
xchg
xor
lcall
test
frstor
insl
cs
jecxz
push
jne
jo
jle
stc
loopne
jbe
fisubl
adc
inc
in
lds
xor
and
push
xor
jb
mov
pusha
or
push
aas
insb
inc
sub
lock
cmp
jo
adc
jnp
dec
in
inc
lods
jle
xor
cmp
jbe
cmp
jbe
fisttps
fucomip
xchg
adc
mov
popa
in
push
and
push
int
in
js
sub
aas
push
leave
sub
aas
movsl
jbe
stos
adc
mov
loop
test
jns
push
adc
fisubrs
sub
rcrl
int
mov
ja
mov
jno
js
or
sbb
ja
mov
sarb
out
mov
or
sbb
lock
dec
pop
add
in
popa
insl
ret
or
xor
in
aas
mov
push
push
pop
mov
mov
vunpcklpd
mov
fdivrp
dec
int3
jno
and
add
sahf
sbb
mov
pop
int3
pop
aam
pop
mov
into
or
xchg
out
xor
aas
pop
inc
and
jg
sahf
dec
and
push
or
sub
dec
xchg
cltd
and
xchg
pop
lds
sub
inc
mov
jg
in
sub
cltd
pop
aad
mov
fistpll
lea
lea
pushf
ds
mov
push
lods
lock
push
outsb
mov
outsl
shl
lods
js
xchg
test
rcll
xchg
pop
in
mov
pushf
dec
inc
leave
into
fsubrp
dec
scas
jge
cmp
dec
lret
xor
add
add
sti
aam
test
or
push
cmc
sub
add
xchg
mov
inc
dec
sbb
fidivrl
out
mov
adc
inc
xor
scas
or
jp
sub
sbb
mov
js
imul
lods
fwait
in
jge
mov
test
pop
je
xlat
jae
jmp
in
ljmp
lret
xchg
jl
mov
xchg
xor
in
xlat
and
fs
inc
adc
mov
sarb
scas
loopne
mov
or
push
pusha
adc
push
imul
orb
xchg
shll
stos
add
loopne
pushf
pusha
cltd
sub
fptan
cmp
ds
cmpsb
inc
ljmp
jb
push
sbb
mov
mov
popf
imul
dec
jmp
xchg
pop
or
xor
inc
ljmp
cmpsb
pop
or
ss
cmc
xchg
ja
push
xlat
adc
mov
pop
repz
inc
in
jle
imul
push
shlb
popa
or
in
lods
loop
out
cli
popw
pop
jecxz,pn
sub
fptan
lahf
push
js
lock
idivl
push
mov
sub
push
imul
lods
inc
in
pop
arpl
jo
aad
fwait
mov
sub
jecxz
addl
fiaddl
mov
pusha
adc
push
adc
jnp
sub
ret
sbb
cli
sub
xor
push
sub
hlt
into
push
push
addb
mov
ljmp
lea
add
sbb
push
shrb
cs
cmpsb
xchg
push
xor
or
rsqrtps
insb
xor
push
lahf
xor
mov
push
stc
jnp
enter
ss
mov
addr16
xchg
jp
shrb
pop
ficoms
cmpsb
pop
outsl
aas
cmc
or
push
repnz
rcr
sub
cld
test
xchg
sub
mov
imul
jecxz
call
cmp
pusha
adc
xchg
test
fdivrl
mov
dec
jae
push
add
xchg
rorl
lock
movl
mov
sahf
dec
std
mov
pop
add
fidivrs
sti
in
scas
pop
or
mov
ficomps
xor
mov
pop
fisttpl
xor
cmp
jbe
int3
ljmp
cmpb
out
pop
sub
xlat
xchg
lea
lds
les
imulb
lcall
stos
cltd
xchg
movsb
and
sub
fwait
ror
inc
lock
out
pop
push
lods
pop
cmc
hlt
insl
lcall
loopne
xchg
in
and
jno
pop
mov
adc
inc
push
ret
dec
stos
jge
lods
das
mov
hlt
rolb
xorb
cli
cmp
enter
add
andb
jae
pop
push
jne
cmp
jmp
pop
sbb
addr16
sbb
imulb
adc
or
ss
icebp
or
mov
xchg
fldenv
mov
inc
cs
pop
lret
jge
xchg
fcompl
rorb
sub
or
push
inc
adc
sub
pop
jns
push
rorb
stos
push
aad
jno
jmp
test
data16
aam
mov
pop
inc
xor
aam
add
movsb
xchg
mov
and
in
jle
call
pushl
sti
fsub
xchg
lock
hlt
mov
fwait
xchg
pusha
daa
leave
mov
mov
mov
lock
sub
xchg
lret
or
iret
iret
cmc
xchg
sub
in
arpl
lcall
mov
scas
movsb
cltd
scas
push
mov
pop
add
mov
sub
adc
mov
inc
jp
mov
jl
das
or
bound
mov
sbb
dec
jecxz
int
xchg
jecxz
push
xor
in
lcall
xchg
imul
jmp
iret
incl
cmc
or
insb
das
es
pop
ret
fstl
sbb
clc
push
in
sbb
fwait
add
xor
adc
or
sub
cmp
sbb
inc
adc
fidivs
push
mov
cmp
imul
int
adc
mov
das
jmp
inc
sahf
data16
or
in
sub
jb
out
fnstsw
in
outsb
cmp
adcl
push
ja
mov
nop
or
add
addr16
xchg
push
fdivr
shlb
inc
andl
repnz
stos
stos
loope
sub
dec
xor
inc
negb
addb
mov
add
adc
pop
push
mov
jge
mov
fimull
in
add
adc
clc
pushl
lahf
mov
jns
push
mov
add
xchg
ret
sbb
ljmp
mov
adc
dec
mov
ss
inc
jo
xchg
pop
inc
mov
lods
sbb
sahf
sbb
xchg
in
dec
mov
cmp
mov
cmp
and
jge
pop
jg
pop
mov
inc
xor
and
add
mov
nop
stos
pop
movsb
push
xchg
fwait
rcll
arpl
je
push
adc
and
mov
sub
and
mov
push
or
lcall
mov
xchg
rclb
fwait
loopne
mov
ljmp
sbb
out
sbb
popa
dec
dec
push
cmpsl
into
jmp
push
or
dec
scas
mov
sub
push
mov
rcr
scas
xor
sbb
das
mov
mov
jg
nop
inc
sbb
add
repnz
stos
jb
mov
dec
andl
cmp
lods
repnz
inc
repz
xor
repz
clc
xchg
dec
dec
leave
jp
cmpsl
pop
cmpb
cmp
ljmp
mov
jb
adc
ds
dec
jae
stos
inc
jae
mov
test
ror
inc
mov
mov
stos
jp
loopne
pop
pop
xchg
cmpsl
stos
push
jns
pop
xchg
gs
sar
xor
subb
repnz
adc
sub
in
je
xchg
and
jae
cmpsb
fidivl
push
repz
lock
sbb
jg
addr16
push
add
xchg
jmp
add
jl
xor
aam
pop
in
or
loop
leave
loopne
dec
jp
mov
cli
xchg
iret
lds
jg
mov
rorl
test
orb
inc
and
xchg
dec
adcl
popa
cs
inc
jbe
mov
das
outsb
aad
mov
jae
lods
insl
shrb
in
jecxz
arpl
out
xchg
pop
ret
fdivs
js
int3
pop
in
orl
lret
sbb
push
rclb
dec
dec
out
arpl
out
jmp
mov
in
nop
pop
adc
lods
aad
adc
inc
dec
lods
movsl
jmp
filds
cmp
mov
cmpsb
cmp
jmp
push
add
dec
jae
push
stos
mov
pop
sub
jb
aas
sbbl
sub
jge
bound
xchg
mov
loopne
push
inc
jb
shll
enter
sbb
push
dec
adc
lock
data16
or
lret
call
clc
sahf
adc
cmp
rolb
fisttpll
adc
cmp
push
nop
lock
jo
pop
ret
movsb
lods
xchg
mov
out
fistps
pop
aaa
push
lds
xchg
mov
cwtl
pop
jbe
dec
lea
push
icebp
les
bndldx
jp
stos
pop
pop
add
enter
scas
lret
mov
lea
bnd
cmpsl
pop
cli
xchg
sub
jecxz
cmpl
mov
mov
and
loope
test
and
rol
loope
push
lods
xor
lahf
inc
mov
mov
mov
or
in
les
ficoms
mov
fldcw
stos
push
rorl
pushf
sbb
in
inc
int3
cmpsl
std
movsl
xchg
mov
inc
adc
cmp
fmulp
xorl
adc
dec
stos
sbb
mov
adc
mov
adc
fistps
sbb
inc
mov
jg
popa
mov
je
dec
pop
aaa
out
cltd
bound
pop
popa
into
xor
xlat
xchg
pop
pop
dec
or
push
sub
cwtl
les
jge
jbe
push
and
sub
mov
ja
ret
in
xchg
xchg
sbb
add
xchg
push
inc
add
fldenv
aaa
divl
lods
lret
insl
out
cltd
inc
sbb
and
or
std
stos
lret
cmp
outsb
and
jno
lods
pop
insb
mov
pop
aad
pop
xchg
les
popl
scas
xor
push
in
mov
gs
inc
lds
sbb
pop
adc
shl
adc
mov
movsl
out
int
stos
and
sub
data16
jbe
movsb
repnz
mov
jns
jo
insl
jmp
test
rolb
daa
call
xchg
pop
cmc
mov
std
sarl
adc
out
jmp
lea
xchg
aaa
inc
xor
jmp
jmp
jne
je
repz
mov
mov
adc
mov
xor
sbb
jb
sub
jmp
mov
popf
clc
movl
push
pop
cmp
and
push
daa
stos
jb
icebp
cmp
fwait
add
inc
fwait
jae
test
imul
repnz
loopne
xchg
dec
xchg
in
jne
repnz
movsb
scas
or
dec
pushf
cltd
sub
fmul
and
inc
imul
arpl
sbb
popf
inc
push
adc
dec
sbb
insb
xor
les
bound
dec
xchg
push
into
pop
xchg
and
and
mov
jmp
sub
test
in
mov
mov
enter
mov
jae
mov
aas
jb
xchg
cwtl
ret
scas
shll
pushf
loope
aas
mov
lret
enterw
fldenv
pop
out
or
pusha
push
movsb
lahf
popl
jle
lret
or
int3
dec
push
sub
inc
push
pop
jb
dec
adc
jecxz
dec
test
mov
pop
fimull
adc
fsub
xchg
cli
shl
fistl
cs
mov
and
gs
or
cmp
in
out
shrl
inc
push
xchg
test
js
insl
mov
sub
adc
daa
clc
or
adc
mov
cs
dec
ja
pop
add
outsb
fs
mov
pusha
outsl
pop
jne
mov
into
jno
cmc
bound
popf
or
cli
jp
pop
mov
sbb
xchg
sub
dec
mov
sub
in
add
jbe
mov
sbb
pop
xchg
testl
pushf
adc
xlat
call
loop
add
out
int
scas
test
cmp
pop
jle
mov
jg
sbb
aad
pop
jp
mov
lcall
pop
push
or
mov
es
fistpl
and
scas
mov
sbb
push
pop
dec
add
pop
dec
or
mov
push
test
int
scas
and
push
js
push
addr16
fldt
cli
test
call
sbb
add
lret
movsb
sub
or
scas
das
push
or
imul
sbb
pop
mov
bound
mov
cmp
dec
loope
sbb
adc
repz
cmp
mov
lret
xchg
test
add
mov
add
jg
xchg
in
movsl
arpl
inc
ja
fwait
add
in
or
xor
jl
jbe
daa
or
sbbb
xor
jb
jae
adc
pop
or
arpl
fucomp
jb
int3
jne
pop
push
inc
fnstenv
adc
fwait
mov
and
jmp
dec
push
ret
jbe
sbbl
inc
sbb
cmp
test
addl
orl
es
jns
add
nop
xor
out
ds
popa
adc
in
and
push
xor
mov
add
rcrl
stos
mov
fistpl
lods
out
lock
loope
cmp
sahf
leave
sub
faddp
inc
jne
inc
insl
iret
xorb
xchg
stos
sbb
aaa
in
mov
mov
popa
pushf
cmp
ret
jnp
mov
ja
adc
stc
loop
mov
xorl
and
xor
xchg
dec
push
fnstcw
data16
lea
sub
push
sub
pop
scas
mov
test
push
std
pop
aam
lods
or
decl
mov
xchg
cltd
jle
es
jle
roll
pop
mov
pop
or
jp
mov
xor
outsl
popf
cmc
cli
ffreep
aas
mov
call
push
int3
and
outsb
cmc
inc
mov
push
and
ljmp
sub
fstl
jnp
adc
lcall
sbb
aam
imul
or
loopne
jge
mov
shlb
mov
dec
add
jg
push
mov
mov
mov
mov
xor
mov
inc
inc
cs
ret
sbb
add
cmpsb
rolb
lods
dec
cltd
and
arpl
dec
imul
inc
mov
into
sarb
loopne
das
outsl
mov
xor
movlps
mov
fwait
cmc
jnp
mov
dec
les
ds
pop
pop
out
pop
sti
mov
sahf
adc
lods
or
add
mov
xor
push
lcall
fstl
add
jecxz
jge
scas
repz
lds
outsl
lods
dec
ja
lock
xchg
jg
xor
leave
rcrl
daa
out
rorl
sahf
mov
fisubl
jge
and
sti
fcomp
pop
lret
jae
jecxz
fstps
jnp
shlb
inc
xchg
push
add
nop
xlat
int3
ljmp
mov
push
loop
adc
pop
xchg
adc
imul
subb
or
int3
cmp
jmp
test
mov
sub
cmp
lock
fidivrl
jno
sarb
lcall
lds
out
mov
cmp
and
xor
xor
mov
sub
mov
loop
cmp
cltd
pop
jne
xor
fstpl
addr16
leave
add
pop
push
out
js
shrb
push
xchg
scas
je
aas
pushf
std
mov
dec
aas
mov
repnz
adc
shl
fisttpll
mov
mov
dec
push
clc
jne
je
xchg
inc
repnz
stc
loopne
push
sub
xorl
popf
pop
and
dec
mov
dec
jae
mov
and
mov
xchg
cmp
sub
mov
pop
and
or
xchg
add
repnz
pop
test
jl
jbe
or
aad
xchg
shll
mov
xchg
scas
mov
sub
mov
dec
in
outsl
nop
movsl
pop
inc
cli
icebp
pop
sub
sub
es
mov
mov
xchg
inc
outsb
outsl
out
hlt
arpl
pop
adc
add
and
jnp
and
sarb
xchg
xor
lcall
adc
fidivrs
hlt
jge
add
pop
mov
mov
ljmp
mov
adc
lahf
loope
xlat
push
xchg
imul
push
ja
inc
aaa
jmp
hlt
iret
pop
aas
or
repnz
mov
sti
push
mov
mov
lret
repnz
add
sub
xchg
mov
mov
movsl
cmp
inc
mov
je
push
and
mov
push
lods
out
xor
push
jp
aaa
jns
mov
jl
hlt
fsubl
mov
sub
and
sbb
iret
mov
mov
jl
mov
jmp
sub
jp
popf
sub
mov
pusha
iret
mov
cmpsb
add
dec
icebp
loopne
es
jp
jae
and
sbb
dec
decb
fwait
mov
adc
fsubl
xchg
mov
adc
push
fldt
out
mov
xchg
xchg
dec
push
inc
add
enter
add
mov
inc
cmp
divb
xor
mov
test
addr16
stc
xchg
jg
movl
sbb
sub
cmpsb
test
cmpsl
in
and
imul
xor
loopne
imul
outsb
cmpsb
adc
sub
fnstenv
adc
pop
cmpsb
icebp
into
mov
cmpsl
pop
add
es
sub
ret
mov
lea
push
and
mov
jns
ror
xchg
mov
stos
add
push
mov
movsb
fisttpll
into
rcr
xor
lock
cli
int
jp
lds
nop
mov
aad
jge
jb
adc
and
and
les
cmp
pop
mov
ret
lods
arpl
inc
push
pop
dec
nop
cmpsl
jecxz
notb
dec
sub
jno
push
xor
mov
repnz
xor
mov
or
into
sub
setp
rol
inc
js
cmp
mov
jae
jmp
push
jg
sahf
jg
adc
push
mov
std
adc
repz
dec
mov
mov
arpl
leave
xchg
cmc
in
or
sbb
mov
cmp
adc
stos
in
mov
dec
mov
xchg
sbb
sbb
lods
notb
pop
imul
pop
lods
in
fadds
xchg
js
rolb
fs
shlb
test
in
test
dec
dec
loopne
loopne
add
out
ja
add
icebp
sbb
rorb
fistl
mov
cmp
mov
cmp
xchg
mov
cmpsb
adcl
adc
jne
and
fcoml
or
daa
mov
cli
mov
xor
xchg
jge
fsubr
mov
adc
or
jb
test
addr16
inc
daa
loopne
adc
cltd
mov
push
outsb
push
push
sahf
pop
sub
cmp
mov
xor
xchg
mov
dec
or
sbb
dec
fcompl
aad
lods
and
test
test
inc
jnp
push
test
push
xor
mov
jns
jb
pop
jge
and
or
push
pop
mov
stos
sarl
inc
mov
sbb
xor
ja
clc
popa
imull
lret
into
adc
inc
mov
pop
imul
ds
push
fildl
xchg
mov
stc
rorl
ja
jne
xchg
ja
in
jb
add
jne
mov
sahf
push
or
mov
xchg
cmp
add
xchg
pminub
push
fadds
mov
test
repnz
repnz
or
call
mov
adc
inc
mov
outsb
leave
inc
jg
mov
cmc
insl
rolb
xchg
mov
pop
repz
shl
popa
daa
imul
lods
or
add
pop
aas
in
stc
aas
mov
les
imul
int3
loop
mov
mov
outsb
aam
fwait
pop
cltd
jae
int
push
out
dec
or
push
ficoms
loop
and
sbb
sahf
sbb
fistps
mov
loopne
xor
dec
testb
testl
lds
push
jle
out
dec
push
mov
stos
push
xchg
aas
gs
subb
inc
dec
daa
mov
sub
or
imul
mov
sahf
daa
add
mov
in
jnp
mov
rcrb
imul
pop
jnp
stos
jae
push
push
push
pop
sub
sub
jo
xchg
arpl
sub
pop
bound
js
adc
xchg
lds
imul
cmp
jnp
pushl
pop
std
push
lahf
shr
pop
lret
in
fsub
xchg
mov
cmc
push
cmpps
cmp
jp
scas
lds
lret
cmpsl
js
sbb
fldpi
cmp
nop
call
xchg
and
xor
addb
xchg
lahf
xchg
push
hlt
scas
pop
mov
or
lods
pop
add
sbb
xor
add
data16
xor
daa
adc
adc
int3
out
arpl
or
mov
punpcklwd
ds
xchg
clc
addr16
cmpsb
inc
xchg
xor
pusha
xchg
push
xchg
insb
or
pop
lds
mov
pop
sbb
add
dec
dec
int
call
dec
sbb
adc
lods
xor
stos
in
stos
push
inc
mov
sbb
dec
stc
mov
cli
scas
int3
push
mov
jae
fs
push
cs
or
push
into
sahf
lock
iret
iret
dec
add
mov
dec
mov
mov
pushf
sbb
out
jle
test
sub
lods
pop
push
and
inc
or
test
adc
adc
imul
jb
cmpl
or
mov
add
test
or
popa
mov
addr16
fsts
pop
jns
xor
mov
inc
jnp
fcomip
jae
cmp
int3
arpl
push
push
jge
insl
mov
pop
bsr
aad
std
or
pop
insb
rcrb
mov
and
movsb
lds
dec
fs
jg
push
test
dec
or
aam
andb
add
ret
mov
sti
mov
into
inc
aam
cld
jno
and
int
sti
out
dec
jmp
ret
sub
xor
cld
movsb
rol
popa
adc
jno
sub
mov
add
shll
and
adc
xor
mov
in
rclb
jb
jge
or
jo
pop
add
cmp
loop
mov
or
adc
mov
fisttpll
mov
scas
movswl
mov
fstpl
js
out
fnstcw
inc
sub
repnz
cmp
and
cli
and
movsl
out
push
push
test
dec
cmp
pop
mov
mov
xor
mov
and
stc
stos
arpl
ss
inc
dec
mov
test
lret
inc
inc
rcr
loopne
out
out
cmp
gs
mov
add
lret
jo
adcl
mov
and
jns
gs
pop
ret
push
jge
xchg
jbe
adc
pop
leave
out
or
fcoml
xlat
and
sub
add
test
daa
outsb
xor
out
pop
orb
xchg
mov
loope
jmp
mov
fsubs
pusha
je
or
into
xchg
std
add
imul
dec
insl
jp
jp
fcmovnbe
test
inc
out
mov
lock
and
adc
bound
sub
add
inc
loope
lods
jmp
daa
push
movsb
clc
mov
icebp
pop
pop
or
shlb
movsl
fldt
adc
pushf
adc
cmp
adc
or
add
out
rorb
sub
pop
pushf
push
jnp
xor
push
insb
xchg
push
or
cmp
mov
std
mov
adc
sbb
out
aas
fmull
fucomi
pop
mov
mov
ret
xchg
popf
test
call
cmp
imul
lods
sub
clc
mov
jecxz
movsl
push
js
inc
sub
mov
mov
scas
daa
pop
test
add
inc
sbb
ljmp
push
mov
dec
cwtl
and
cs
cwtl
fisttpl
call
mov
mov
dec
lods
test
int3
ficoml
push
and
push
dec
mov
mov
jbe
jbe
add
inc
push
int
mov
sbbl
push
pop
cmpsl
in
popa
push
insb
mov
lahf
in
mov
xrelease
jp
daa
orl
sahf
sbb
add
sub
cmpsb
mov
movsb
mov
es
leave
neg
push
insb
andl
ja
out
dec
nop
stos
hlt
test
cwtl
add
imul
sbb
scas
test
xchg
jecxz
test
sar
sub
mov
mov
sbbb
xchg
adc
xchg
jne
scas
inc
jns
xlat
and
sahf
or
adc
dec
push
sub
push
xor
cmp
mov
andb
jnp
lds
dec
pop
cmpsl
arpl
push
jno
fcomi
outsl
enter
mov
push
es
push
rcl
mov
cmc
jecxz
pusha
stos
js
movsl
mov
xchg
lret
pop
std
insb
xor
sub
ret
inc
and
push
xchg
lret
push
mov
and
push
inc
fwait
arpl
sti
mov
cwtl
adc
in
mov
std
mov
push
push
inc
and
popf
lret
lods
clc
pop
or
sbb
mov
jo
mov
or
adc
inc
mov
pop
xchg
cmpsb
jne
adc
xor
and
mov
mov
push
cli
adc
dec
cmc
lods
icebp
mov
cmp
imul
push
mov
mov
lret
jle
cld
out
inc
xchg
mov
int3
fwait
sub
sub
rcrl
dec
stos
cmp
inc
adc
dec
into
and
prefetchwt1
or
jnp
stos
pop
mov
jbe
aad
cld
inc
pusha
mov
dec
inc
jne
xor
cmpl
or
jne
sub
outsl
pop
inc
mov
shrl
mov
xor
cwtl
cmc
add
mov
and
fptan
in
mov
push
inc
mov
decb
mov
cmc
imul
cmp
push
leave
adc
lds
mov
aas
std
or
pop
cmc
xchg
jbe
xchg
mov
mov
inc
push
in
push
xor
mov
or
ja
inc
insl
pushf
or
cld
clc
add
mov
sub
int
aas
dec
jns
cmp
lret
aaa
pop
pushf
fwait
mov
xchg
lret
in
sub
lea
stos
adcb
movl
xchg
mov
test
sarl
push
pop
cmp
js
mov
and
jnp
push
js
insb
pop
jmp
inc
pop
sub
pop
ja
daa
or
xlat
fidivl
repnz
add
inc
sub
inc
dec
mov
xchg
adc
lret
shll
lahf
or
jns
add
push
repnz
je
ljmp
push
pop
pop
mov
inc
mov
jno
cmp
dec
sub
es
leave
mov
push
adc
cwtl
aam
mov
xor
mov
inc
and
lds
enter
and
adc
xchg
push
in
mov
push
rep
je
mov
call
in
cmp
jne
test
xchg
add
out
mov
cli
xchg
and
jmp
rol
add
xchg
pop
mov
in
in
daa
pop
ret
push
jg
or
jnp
fcoml
decl
nop
or
pop
cmp
cmp
xchg
ljmp
es
push
ss
pop
mov
mov
ja
push
test
sub
pop
jecxz
adc
push
mov
jle
out
fimuls
xor
or
rorb
jecxz
add
loop
xchg
push
add
jmp
testl
hlt
int3
mov
sti
cli
insb
fadd
adc
rorb
inc
rcr
push
adc
fsubrp
aam
pop
hlt
push
mov
out
jbe
popa
push
mov
xchg
out
in
test
pop
xchg
loope
imul
and
mov
mov
adc
mov
pusha
cltd
pop
cmp
add
cmp
test
rclb
lahf
mov
pop
sub
sub
pop
pop
push
mov
cltd
pop
add
fucom
data16
test
mov
pop
sub
sub
or
inc
add
dec
jne
push
pusha
es
mov
stos
add
ja
call
in
outsb
jno
hlt
sbb
mov
jnp
loope
pop
add
cmc
mov
in
gs
gs
dec
sub
pop
jae
xchg
popa
fwait
mov
mov
or
xor
cmp
mov
mov
sbb
out
outsb
movl
pop
mov
stc
mov
adc
in
push
inc
jp
or
adc
ja
sbb
enter
add
es
sub
sbb
or
test
pop
out
jge
aaa
xchg
subb
in
mov
jg
stc
fcoms
or
pop
cmp
mov
enter
out
cmp
fadd
out
xchg
movsb
jbe
pop
iret
idivb
lods
inc
mull
or
ds
and
or
aam
mov
or
xor
mov
and
stos
daa
cmp
ja
loopne
mov
and
sub
or
cmpsb
push
xchg
cmc
jl
mov
sbb
mov
ljmp
mov
loope
addl
mov
push
lods
adc
int
jle
dec
jmp
test
push
lock
or
pop
in
loopne
ds
inc
mov
addr16
inc
add
mov
dec
adc
jmp
pop
pop
xor
cld
inc
mov
cmp
shlb
loopne
das
shll
pop
xchg
add
jle
repnz
call
sbb
aaa
sbb
xor
add
stc
or
leave
mov
mov
mov
mov
or
push
aad
sub
fisttps
test
cwtl
std
dec
mov
mov
xor
push
jmp
shl
sub
push
pop
lahf
pop
sbb
and
mov
std
cmpsl
pop
out
test
sub
cmp
dec
push
les
loope
mull
addr16
into
mov
enter
lock
xorl
add
cld
jnp
call
js
insb
lds
mov
outsl
xchg
push
ljmp
inc
xor
push
shll
dec
push
mov
lahf
dec
xchg
dec
push
scas
adc
iret
faddl
sub
lock
aas
out
int3
push
xor
ret
xchg
stos
sub
cmp
dec
xchg
sarl
dec
icebp
dec
and
jb
hlt
mov
sarb
int
mov
mov
lods
xchg
pusha
scas
add
inc
mov
cltd
lds
aam
or
mulb
and
std
hlt
mov
test
ds
popf
or
fwait
repnz
movsb
sub
loopne
add
add
aad
mov
and
xchg
cmp
xchg
mov
sub
sub
arpl
cmc
add
dec
aas
cmc
fwait
mov
xchg
push
xor
mov
jge,pn
imul
test
incl
mov
cmpl
rcl
xchg
into
aad
dec
dec
pop
stc
push
xchg
out
adc
inc
std
addl
inc
dec
jp
int3
add
int
test
nop
andl
inc
jbe
movb
pop
pop
nop
add
insb
xor
dec
mov
test
aas
pop
ror
jb
jno
lea
aaa
rclb
aam
pusha
int
dec
les
add
stos
sub
std
mov
insl
in
sub
std
and
mov
add
outsb
or
or
jne
pop
sub
adc
xor
idiv
je
add
pop
adc
daa
rcrb
xchg
cwtl
push
cli
leave
xorl
xchg
inc
nop
xchg
movsl
in
push
fiaddl
in
out
insb
test
jle
loop
inc
out
je
test
lret
into
or
mov
sub
vunpckhps
lahf
pop
sbb
movsb
loope
push
out
xchg
and
add
and
jg
into
repz
jge
pop
xlat
orl
jae
addr16
cmp
dec
xchg
in
pop
push
test
cli
int3
xchg
pop
dec
sti
test
cmp
push
mov
movl
outsl
inc
mov
xor
xor
scas
jno
cmp
test
mov
sub
hlt
in
dec
mov
jnp
stos
dec
pusha
jecxz
xchg
inc
ret
jl
test
mov
lods
js
jg
pop
addr16
pop
inc
in
mov
bound
add
push
mov
cmp
xchg
jl
arpl
ficompl
repnz
or
pusha
mov
outsb
fisubrl
and
cld
loopne
ss
inc
cmc
enter
dec
mov
pop
pop
jle
cmp
push
xchg
xchg
sbb
ret
divl
fwait
mov
push
xor
fimull
jbe
xchg
xorw
int3
cmp
outsb
imul
stc
test
add
or
push
in
cmp
and
arpl
sub
fsubs
cwtl
addr16
fcompl
ret
imul
gs
jl
mov
inc
mov
repz
ret
xlat
sub
test
mov
shll
outsl
xchg
xor
sbb
or
adc
and
test
in
pusha
mov
in
iret
pop
adc
stos
iret
pop
dec
or
insb
loopne
dec
jp
insl
sahf
push
pop
xor
sar
adc
cmp
cmp
sub
mov
in
mov
mov
lods
inc
pop
lods
lods
jne
mov
cmc
dec
xor
loop
lea
pusha
xor
xchg
dec
out
and
xchg
test
pop
mov
jecxz
push
pop
push
in
mov
bnd
int3
lods
sbb
jecxz
bswap
mov
jp
xchg
dec
inc
mov
loop
std
popf
fstps
rorb
leave
jl
mov
fwait
insl
jg
inc
test
push
leave
pusha
mov
push
sbb
loope
cmp
xor
jl
push
and
pusha
and
add
sbb
movl
pushf
cs
outsl
jns
jmp
xor
ret
setne
fmuls
lcall
repnz
mov
or
sbb
sbb
dec
jno
out
jmp
xchg
push
iret
xor
or
or
xchg
flds
pop
sub
push
fistl
mov
xchg
outsb
push
rcr
pop
cwtl
js
xchg
sarb
aad
int
dec
subb
insl
or
inc
je
xchg
mov
cmpsl
add
fdivl
arpl
jae
repz
pop
adc
data16
lods
bound
rolb
in
idivb
subl
cltd
mov
in
mov
mov
out
jmp
hlt
je
les
ficoml
mov
sar
test
gs
or
sbb
movsl
push
mov
arpl
xchg
ret
sbb
lret
test
mov
xchg
mov
mov
dec
inc
mov
pop
adc
push
mov
sbb
push
inc
outsl
cli
icebp
mov
lcall
mov
data16
push
jne
add
lahf
dec
xchg
rorl
shlb
insb
es
out
pop
cmp
and
and
insb
roll
xor
cmp
xchg
cld
mov
or
sahf
xor
xchg
test
inc
or
stos
sbb
sbb
pop
mov
pop
imulb
jle
adc
mov
jmp
mov
pop
lea
add
es
or
pop
mov
into
nop
movsb
imul
mov
mov
lea
mov
inc
icebp
ja
push
mov
push
pop
cmp
or
iret
push
ss
cmp
es
ret
loop
dec
inc
pop
out
mov
loop
adc
ja
xor
xor
and
aam
inc
stc
imul
jl
loope
dec
mov
xchg
push
ud0
sub
test
sahf
loopne
sarl
push
inc
insb
jae
pop
insl
ja
cmc
test
or
mov
pop
sub
call
jge,pt
xchg
sub
dec
fwait
dec
xchg
xchg
lds
stc
call
mov
stos
sbb
push
jge
add
loop
fcoml
nop
cmp
fldt
mov
mov
mov
push
or
sub
sbb
sbb
sbbb
test
push
aam
out
mov
xchg
xor
lea
xor
mov
mov
sbb
push
mov
pop
xchg
mov
nop
repz
xchg
js
pop
outsl
pop
jecxz
pop
sub
inc
xchg
adc
fisttpll
jge
fnstsw
and
xor
push
mov
cmp
pop
sahf
negb
jbe
and
call
and
or
jle
adc
test
jg
leave
sahf
pop
and
ret
inc
test
xchg
aam
rcrb
pop
pop
mov
mov
sbb
cs
popf
mov
rcrl
mov
push
scas
mov
push
mov
push
adc
pop
fmuls
stc
push
push
int3
jge
gs
mov
pop
pushf
popf
test
loopne
mov
jno
pop
jno
mov
adc
cmp
mov
test
pop
adc
lret
jg
adc
addr16
cmp
xor
ficoml
jnp
dec
cmc
or
push
movsl
push
jno
sbb
pop
jb
mov
dec
pop
push
pop
mov
push
jmp
pushf
rclb
adc
loope
add
lret
cmp
mov
lods
and
dec
pusha
movsl
sub
sub
xchg
popf
imul
jne
add
dec
add
shlb
leavew
sbb
lods
outsl
dec
test
mov
andb
cwtl
cld
dec
ds
ss
jne
nop
cltd
mov
jg
mov
dec
pop
cmp
push
addr16
lds
in
pop
jo
loop
xchg
sub
inc
dec
inc
dec
add
insb
push
adc
pop
lcall
or
daa
fwait
repnz
jmp
loopne
fstps
inc
out
sub
sbb
pop
test
rcll
mov
pop
jge
call
pusha
add
add
xor
outsl
push
gs
movsb
push
jne
fildl
insb
sbbb
out
ss
mov
cmp
mov
sbb
ljmp
movb
aad
cmp
push
xchg
inc
or
lret
push
sub
lea
mov
jmp
jmp
adc
lods
pop
pop
in
neg
dec
mov
ljmp
cmp
ljmp
or
xchg
icebp
call
cmp
push
popl
stos
jmp
xchg
inc
inc
inc
jle
or
jno
test
push
repz
cmp
mov
adc
aaa
enter
xlat
inc
xchg
das
adc
sub
and
andb
imul
nop
and
dec
push
pop
pop
mov
xor
fs
add
rdpmc
add
dec
sbb
aas
or
pop
sbbl
roll
jae
repnz
ljmp
scas
jg
sbb
mov
sub
mov
adc
mov
std
push
xchg
and
jae
stos
test
adc
xchg
movl
popa
test
sbb
popa
or
cmp
fsubl
test
popf
clc
in
jmp
rol
testl
add
pop
jne
hlt
or
cld
and
js
push
stos
add
fildll
nop
xor
lret
rcr
sub
cmpsl
pop
outsl
sarl
dec
mov
scas
adc
jmp
sbb
mov
xor
xor
inc
inc
mov
xor
pop
pop
ljmp
xor
mov
popf
push
rcrb
adc
or
cmp
neg
rcrl
sbb
push
inc
sub
daa
cmpsb
fcmovu
and
sbb
ret
das
add
cld
rol
sarb
js
push
repz
fldenv
shll
les
jns
repnz
inc
pop
into
sbb
xchg
ja
push
rorl
add
lret
add
imul
pop
pop
add
in
push
xor
mov
inc
jnp
pop
mov
dec
xor
push
fsub
iret
pop
adc
aam
or
out
movsb
loopne
add
shl
dec
test
sbb
cmpb
xchg
push
pop
cmpsb
aam
pusha
fwait
push
test
mov
stc
in
sbb
insl
aaa
into
push
filds
push
leave
lds
loope
movsb
push
negl
or
inc
pop
cwtl
mov
mov
in
and
daa
adc
imul
mov
push
data16
std
iret
shll
test
sub
inc
push
mov
xchg
fwait
sti
aas
ja
cmp
xchg
in
dec
insl
iret
out
mov
fldl
xor
add
notb
mov
and
sbb
ficoms
push
popa
and
cmpl
lahf
sarl
push
lret
sbb
test
dec
mov
outsb
imul
inc
psllq
pushf
sbb
sbb
rcl
and
enter
out
subb
mov
test
add
leave
popl
push
lea
mov
mov
push
mov
mov
das
les
cld
jbe
pop
cmp
adc
std
scas
lock
sahf
leave
std
call
cmp
push
sub
push
push
pop
inc
les
mov
add
int
dec
inc
cmc
xor
test
sahf
dec
je
dec
adc
aas
pusha
jmp
insb
inc
ja
leave
mov
jne
xchg
hlt
jge
mov
push
ret
cs
test
rcrl
shll
dec
push
sbb
in
cmc
add
mov
dec
test
add
pop
sbb
loop
pushl
fwait
mov
mov
mov
cltd
mov
out
mov
xlat
pop
xor
into
leave
mov
lock
add
xor
pusha
orl
jnp
data16
cmp
imul
jecxz
inc
cs
int3
push
shl
shlb
and
aam
pop
int
mov
es
pushf
jnp
mov
leave
push
imul
in
out
fists
insb
cmpsl
mov
mov
imul
in
rcr
jno
pop
xor
mov
pop
and
jno
aaa
or
rcrl
add
lods
insb
pop
inc
roll
je
xchg
gs
fiadds
inc
js
mov
xchg
cmc
imul
pop
inc
sti
jo
ret
mov
jbe
scas
inc
or
inc
nop
pop
clc
dec
or
dec
push
xchg
pop
cmp
ja
std
adc
inc
insl
push
repz
mul
sbb
jae
ljmp
inc
pop
movsb
test
in
movsb
cmpsl
sbb
xchg
xlat
cmp
adc
fadd
scas
into
mov
aad
cmp
int3
xchg
out
clc
decl
ret
jle
xchg
jb
cld
dec
mov
or
fpatan
sub
fists
sub
mov
mov
push
mov
mov
mov
mov
cmp
mov
mov
push
pop
jae
hlt
adc
dec
mov
and
cmp
cltd
adc
arpl
jno
js
out
rol
ret
xchg
push
or
pop
adc
fcoml
dec
push
lahf
xchg
push
push
and
inc
ljmp
pop
pop
pop
call
adcl
jne
add
push
dec
inc
xor
cmpsl
pop
fcmovb
mov
stc
xor
ret
xchg
or
add
jge
xchg
out
pop
in
jle
cmp
ret
cli
push
pop
testl
addl
inc
push
xchg
stos
jl
or
mov
nop
arpl
int
pushf
inc
or
dec
inc
mov
xchg
shlb
jo
cmc
ret
inc
lret
roll
or
jle
push
add
and
push
mov
lcall
lods
lahf
jmp
and
mov
out
loop
inc
outsb
xchg
jno
mov
pop
insb
sbbb
pop
fnstenv
mov
mov
enter
mov
out
mov
addr16
enter
out
adc
out
pop
cmpsl
or
mov
test
fisttpll
push
shl
and
xchg
adc
jecxz
into
sub
roll
jg
fcoms
pop
mov
adc
lock
rcr
scas
mov
dec
movl
sbb
mov
or
cmpsl
mov
xchg
add
lock
cltd
sub
shrb
pop
mov
mov
pop
adc
fnstcw
push
loop
addb
xchg
addr16
enter
popf
xlat
mov
repz
inc
and
sbb
or
add
adc
adc
pop
in
push
push
xlat
pop
call
rcll
pop
js
mov
pop
fimull
cld
pop
fstcw
inc
adc
in
mov
faddp
dec
out
popa
inc
push
jg
cld
inc
mov
repz
pop
adc
testl
shl
sbb
cli
mov
data16
notb
addr16
mov
cmp
adc
jle
lcall
xor
sti
mov
push
xor
xchg
and
or
std
out
cmp
in
lods
xchg
mov
dec
ljmp
add
mov
mov
test
jno
jb
in
pop
jl
ja
push
cmp
rcrb
mov
aas
xlat
fsub
hlt
pusha
loop
cmpsl
jne
sub
sti
sub
mov
or
sub
cmp
in
add
icebp
rcll
push
jmp
js
scas
in
repz
adc
mov
cmpsl
mov
out
cmpsb
xchg
faddl
push
sub
lea
fistpl
jl
and
pop
mov
sub
out
mov
pop
push
lods
arpl
stc
mov
subb
iret
mov
leave
cld
lods
sub
or
adc
adc
add
lahf
stc
cmp
mov
stos
insl
ret
cld
add
sahf
fildll
je
in
xchg
dec
or
push
xchg
sahf
push
insl
imul
mov
cld
nop
inc
xor
pushf
iret
pop
sbb
or
dec
mov
pop
idivb
rcrb
pop
inc
and
clc
add
xor
sbb
dec
jmp
gs
not
and
call
fisubs
int3
int3
mov
lea
xor
cmpsb
std
and
pop
imul
jae
sub
mov
jno
mov
testb
imul
enter
aam
cmp
pop
inc
fildl
pop
lret
repnz
mov
out
call
in
and
jg
and
xchg
jnp
add
mov
mov
mov
xlat
rcr
sub
xor
out
sub
mov
lds
gs
out
testl
mov
movsl
mov
sarb
inc
lcall
mov
movsb
fsub
pop
test
imul
add
xchg
mov
pop
jle
adc
push
xor
addr16
push
push
dec
mov
scas
sti
test
push
mov
mov
add
arpl
divb
or
insb
add
mov
xchg
cmp
xchg
ja
arpl
or
adc
sbb
jns
in
ja
xchg
call
pop
dec
cltd
adc
jecxz
push
ret
fstps
mov
mov
or
jecxz
data16
scas
xlat
adc
xor
and
and
rclb
cld
jg
cmpsb
ja
movups
push
dec
fs
pop
scas
rolb
cli
mov
inc
ja
ret
sub
in
mull
push
in
and
push
cli
pop
sbb
aam
xor
add
rcrl
popa
jne
cmpsl
inc
stc
and
jmp
outsl
xorl
lods
sub
adc
jae
xlat
mov
add
mov
jae
ljmp
pop
scas
into
inc
pop
xchg
add
repz
cmp
insl
push
cmp
scas
popa
adc
xor
cmpsb
inc
call
pop
scas
fimuls
scas
lret
lea
pop
inc
cmp
inc
cmp
scas
jo
fimuls
int
loopne
mov
lcall
pop
sti
cmpsl
jae
inc
and
push
jnp
mov
clc
cltd
pusha
minps
mov
rorl
lods
adc
ljmp
or
data16
inc
jg
push
aad
mulb
shll
mov
cmpsb
es
inc
into
hlt
or
jge
adc
mov
push
fwait
shlb
adcb
std
pop
mov
and
jp
out
mov
cmpsl
subl
adc
lods
mov
shrl
dec
roll
popa
xor
jns
scas
mov
mov
or
cmpsl
jl
fs
aaa
addr16
lds
gs
test
xlat
bound
xchg
pop
mov
lcall
dec
cmc
jno
pop
cld
lock
out
sub
inc
adc
adc
and
push
xor
addr16
cld
jno
test
fiaddl
push
dec
imul
out
loopne
sbb
push
jbe
sbb
jp
enter
xchg
dec
in
int
inc
xchg
sbb
call
loopne
jmp
insl
mov
into
clc
push
in
adc
data16
in
dec
or
mov
xor
iret
nop
aaa
cmp
push
jo
out
pop
js
mov
loopne
insb
pusha
or
lods
and
rdtsc
or
xchg
dec
imulb
push
push
dec
jno
and
mov
cwtl
pop
lcall
imul
jne
sbb
pop
ret
lcall
dec
repnz
xor
daa
testl
mov
lret
mov
adcl
xchg
jle
cmp
or
jnp
sub
jnp
ljmp
mov
int3
gs
addl
out
mov
mov
in
mov
mov
vsubsd
jnp
pushf
xchg
repnz
mov
adc
fldpi
sahf
mov
ljmp
cmp
and
fisttps
lds
cmpsb
aam
dec
lods
dec
add
push
mov
mov
sarb
mov
lea
bound
push
jbe
mov
add
lret
shlb
into
in
sub
stc
and
sub
xor
in
or
dec
loopne
cmp
loopne
inc
mov
fscale
dec
insl
ret
cltd
loopne
test
mov
cmp
and
lds
jns
nop
pushf
pop
mov
nop
jmp
push
xlat
notl
mov
pusha
cmp
jae
sbb
adc
hlt
outsb
xor
xchg
movsl
movaps
popa
jmp
pop
in
dec
xchg
cwtl
popa
jo
mov
add
aam
pushf
pop
call
scas
cmp
imul
add
enter
mov
stc
inc
enter
fld
int3
jmp
lret
lahf
xor
test
mov
shrl
mov
lds
movsb
pop
push
dec
daa
repz
inc
insl
shl
out
sub
lret
sbb
out
into
ja
lret
and
lea
mov
xchg
and
or
or
jg
and
out
imul
ss
fcomp
xor
ds
jno
fs
jl
xchg
pop
xchg
cmp
pop
sbb
sub
std
mov
fisttps
jno
mov
push
pop
pop
insb
or
in
scas
sbb
lret
ljmp
pop
xor
movsl
lea
outsl
addr16
adc
popfw
dec
sti
push
cmp
mov
and
cmp
add
sbb
sti
inc
dec
adc
cwtl
dec
add
aad
dec
popf
mov
mov
enter
cmp
movsl
lods
repz
mov
pop
inc
je
jle
call
push
or
cmp
pushf
lahf
out
ficoml
enter
xchg
in
sub
sub
cs
mov
dec
dec
lods
xchg
iret
lahf
icebp
dec
loope
iret
xchg
fwait
cmp
or
outsb
stos
out
push
bound
stos
xor
pop
pop
rcl
enter
fwait
movb
movsl
loop
out
mov
and
fxch
dec
cmp
xor
ds
xchg
mov
add
mov
insl
clc
arpl
fldt
scas
mov
or
dec
xchg
je
daa
idivb
pop
test
cld
aad
push
movsb
es
sahf
ficomps
sub
cmp
mov
leave
out
xor
test
lcall
out
lds
and
dec
mov
push
pop
jmp
jl
inc
outsl
mov
mov
mov
cmpsl
aaa
pop
adc
ror
repz
xor
or
xorl
mov
sub
jl
push
fldt
jns
in
dec
rorl
or
add
jecxz
aam
pop
adc
loope
ss
xchg
fucomp
fidivrs
in
mov
cld
shr
xor
sub
scas
xor
test
add
push
mov
das
popf
mov
jb
imul
popa
xor
fistpll
adc
js
add
adc
mov
add
cld
add
ret
sub
movsb
or
dec
add
mov
add
test
inc
mov
into
push
pusha
cs
xchg
and
ds
loop
mov
mov
arpl
dec
dec
insl
cld
push
sbb
ja
mov
sub
jo
xchg
xor
push
lods
andl
dec
gs
xchg
mov
call
jb
jmp
sbb
fiadds
sub
enter
adc
xchg
mov
and
or
mov
addl
adc
pushf
int
sahf
aad
outsl
adc
inc
and
test
sbb
movsb
nop
sbb
dec
xor
cmp
adc
sub
xor
es
mov
hlt
inc
fs
jo
sbb
cmp
fildl
shrb
movsb
jg
pop
fst
inc
add
sbb
sub
inc
adc
ret
mov
js
add
test
pushl
push
leave
idivl
mov
imul
imul
out
dec
xor
loop
mov
xchg
outsb
push
push
mov
jno
adc
data16
les
lock
add
cmp
jb
loope
scas
mov
push
mov
and
addr16
addl
inc
sub
push
hlt
dec
adc
push
sbb
xchg
rclb
ljmp
dec
popf
mov
ret
mov
push
mov
imull
addr16
jae
push
popa
jecxz
jo
mov
sub
dec
arpl
xchg
sbb
xacquire
push
mov
lahf
fisttpl
into
cmp
pop
mov
jae
lcall
cmp
mov
xor
daa
out
cmp
jae
imulb
cmpsl
add
scas
ret
or
ss
cmp
repnz
test
test
inc
jne
jl
adc
dec
mov
inc
sti
jae
arpl
mov
shl
rolb
out
hlt
mov
pusha
roll
aaa
push
ret
stc
jl
lock
cmpsl
mov
das
inc
xchg
pop
int
and
lds
mov
xor
push
outsb
ficomps
inc
test
jecxz
mov
shrl
jae
dec
les
mulb
cwtl
xchg
pop
insb
imul
xor
lods
test
push
add
adc
loopne
or
sbb
cmpsl
roll
cltd
ljmp
jl
stos
pop
mov
lahf
mov
aas
leave
jns
jbe
fbld
inc
cmp
jmp
fsubl
out
stos
xchg
cmpsb
mov
fbstp
cli
push
movsb
and
rcrb
inc
js
cmp
fdivl
inc
adc
inc
repz
or
and
in
fisttpl
ja
mov
jmp
gs
aas
sahf
icebp
push
push
push
jbe
cs
pop
xor
mov
jl
sbb
leave
stc
adc
pop
or
jbe
scas
add
xchg
sbb
pop
mov
inc
cmp
pop
dec
arpl
rcrl
mov
xchg
dec
inc
movsb
dec
xchg
jns
mov
std
jno
jns
and
cmp
scas
adc
or
insl
inc
fcmovu
lods
lods
sub
mov
sub
sti
adc
jmp
popf
mov
ss
xor
jp
dec
mov
cld
or
fists
inc
out
pop
push
adcb
xchg
xor
jnp
sbb
mov
fadd
dec
dec
xchg
dec
xchg
pop
aad
dec
mulb
das
test
xchg
add
cwtl
mov
jecxz
rclb
add
jno
pop
stos
mov
and
or
cmpsl
xchg
push
pop
mov
out
mov
xchg
repz
dec
mov
sahf
int3
scas
cmp
sbb
sbb
popa
dec
cmc
ja
fsts
inc
inc
scas
xlat
popa
xor
andl
xchg
repnz
jg
adc
cmp
lahf
lods
in
imul
test
insl
in
add
sbb
push
pop
lret
mov
xor
stos
movsl
test
in
inc
dec
fs
cmp
pushf
sbb
loop
sub
out
push
fwait
xor
xchg
or
or
xor
xchg
sar
mov
and
hlt
jo
fsubs
les
and
push
in
jp
pop
cmp
ds
xchg
mov
xchg
xchg
cmp
sbb
loopne
loopne
cmp
stc
repnz
add
cmp
mov
and
cs
test
xchg
add
test
push
cs
push
mov
imul
dec
dec
stos
ljmp
pop
lcall
leave
outsl
sub
and
jmp
mov
andb
imul
xor
fs
xorl
movsl
sub
in
push
mov
add
shrb
cmc
sub
xchg
inc
out
xor
cmpsl
xchg
xor
aaa
addl
scas
and
inc
pop
push
out
fiaddl
lock
pop
push
cwtl
cmp
mov
mov
lret
in
adc
and
lahf
test
clc
add
jl
pop
gs
testb
mov
mov
daa
cmpsb
int3
xchg
mov
push
xor
jbe,pt
push
jl
mov
dec
xor
test
pop
lods
sbb
idivl
fnstcw
ja
imul
mov
mov
pop
bound
outsb
xchg
lods
push
dec
dec
das
xor
and
jo
jle
push
int3
jo
imul
lea
xchg
or
mov
gs
mov
lahf
sub
mov
or
jecxz
into
push
pop
push
cmpb
mov
cld
cmp
and
and
lea
mov
push
std
repz
xchg
outsb
fildll
in
std
scas
mov
aaa
pushf
xchg
call
push
xchg
movsb
mov
pop
sbb
int3
adc
pusha
loop
adc
out
addr16
int
jg
push
imull
jae
sbb
es
or
int
sbbb
mov
xchg
push
dec
cltd
sub
push
sub
popa
hlt
mov
mov
adc
mov
mov
mov
dec
and
inc
shrb
fidivl
lcallw
popl
jg
icebp
add
das
bound
push
shl
out
xorb
pop
adcb
adc
lea
mov
out
and
adc
mov
pop
inc
test
cmp
scas
xor
ror
xchg
push
shl
pop
int
adc
hlt
movsl
xor
jno
jle
xchg
mov
or
pop
fldt
lret
pop
or
dec
and
in
lahf
push
insb
loop
fdivl
dec
inc
rclb
je
sbb
push
xor
cmpsl
roll
jecxz
stos
jnp
push
mov
cmpsb
add
adc
les
fstpl
jmp
mov
xorl
pop
cmp
loopne
jecxz
fldl
push
mov
dec
pop
scas
sbb
cmp
icebp
jl
push
fistpll
in
cmpsb
jge
movsl
pop
pop
mov
pop
xchg
fldcw
mov
fnstenv
pop
in
xchg
psllw
xchg
dec
ljmp
dec
xchg
inc
push
out
repnz
enter
cmpsl
inc
cmp
gs
or
pop
aas
or
push
sbb
jl
ljmp
ljmp
push
aam
adc
sahf
inc
dec
test
daa
or
jge
in
lea
mov
pushf
jo
fists
ds
or
xchg
iret
xchg
pop
popa
push
inc
push
aas
sbb
mov
xor
das
ja
fbld
add
mov
pop
mov
pop
addr16
pop
mov
loope
sub
test
pop
add
std
addb
popa
mov
test
gs
add
and
mov
fildl
fxch
xchg
xchg
scas
loop
cmp
sahf
aas
fcom
xchg
jg
arpl
push
sti
jo
or
out
adc
or
fldcw
pop
nop
pop
cmpsb
aad
mov
stos
xlat
test
int
jae
xor
out
out
cli
fsub
iret
fsts
lret
mov
sbb
fld
nop
insb
sarl
adc
std
sub
pusha
push
test
pop
jmp
add
mov
ret
adc
test
leave
roll
sbb
mov
sub
mov
or
mov
aam
pusha
pop
jecxz
push
adc
fcoms
fwait
xor
je
lods
inc
imul
xchg
jno
dec
or
pop
mov
dec
jo
aas
xor
push
ret
mov
sub
xchg
data16
and
test
ja
or
test
or
shrb
cmp
cmp
mov
adc
mov
push
int3
and
js
cmc
dec
fcmovnb
pop
lret
mov
mov
and
adc
lds
lock
sarl
lods
dec
cltd
pop
push
adc
mov
xchg
dec
pop
push
scas
sub
popa
sahf
mov
inc
rclb
jl
fidivl
test
popf
cmpsb
fldcw
push
sbb
or
jg
rolb
ret
sti
icebp
cmp
loope
sarb
and
repnz
insl
icebp
inc
push
lret
dec
lods
fmull
std
je
outsb
outsl
push
lahf
mov
mov
loope
mov
pop
outsb
subb
into
inc
cmp
icebp
aad
cmpsb
sti
insl
decb
sub
dec
mov
xor
scas
mov
into
inc
xchg
push
pusha
sti
jns
int
inc
icebp
mov
test
lea
push
orl
out
adc
mov
sub
in
test
shlb
test
inc
pop
popf
push
ror
insb
jmp
push
fwait
test
stos
mov
ret
inc
clc
inc
mov
bound
pop
ffreep
in
test
pop
xor
mov
dec
push
inc
or
jnp
pop
mov
adc
push
cmpsb
int
fcomps
mov
push
add
adc
push
mov
jbe
fsts
sub
lcall
pusha
imull
cmpsb
cli
mov
push
mov
cmp
dec
sbb
mov
movsb
mov
lret
dec
mov
out
mov
jns
add
mov
jae
fcomi
ds
jecxz
inc
cmpsb
pop
sbb
push
sti
nop
outsb
dec
mov
push
mov
int3
jl
lods
cmp
mov
sbb
pop
mov
xchg
sbb
sub
arpl
dec
mov
xor
int
mov
decb
repz
inc
add
pop
ljmp
mov
mov
add
hlt
in
mov
mov
sub
pop
lods
xchg
mov
mov
pop
sbb
and
fs
add
sub
inc
es
push
mov
mov
cltd
cld
mov
mov
insb
loopne
pushf
ret
jbe
mov
sbb
adc
lcall
fnstcw
mov
aaa
cltd
je
push
mov
int3
or
insb
shll
gs
sub
test
imul
data16
xchg
jecxz
cmpsb
ret
out
mov
adcl
xlat
jo
cmpsl
cmp
decl
movntq
out
mov
xchg
lcall
fcoms
outsb
nop
add
xor
cwtl
jge
lcall
dec
add
lahf
push
jecxz
cmpsb
jge
pop
xchg
lods
in
inc
lahf
imul
movsb
ret
mov
mov
insl
push
dec
fists
xchg
int
repnz
into
and
sahf
test
sbb
cmpl
out
das
pop
pusha
popf
cmpl
in
cld
sub
xchg
loope
jg
in
pop
jbe
cmp
xchg
fldt
cmpsb
cmp
or
test
jno
inc
sbb
dec
jo
push
daa
negb
pop
push
fwait
sbb
adc
in
mov
lcall
pop
sbb
ficompl
push
mov
adc
or
int
mulb
dec
scas
push
into
loope
push
push
push
xor
xchg
loope
pop
mov
pop
in
mov
fcoms
iret
lock
jle
push
mov
clc
mov
shlb
test
pause
jne
insl
sbb
mov
lods
pop
xor
mov
mov
scas
fbld
cwtl
mov
arpl
xor
ret
cltd
add
loope
or
mov
mov
ret
mov
fucom
enter
ret
icebp
mov
add
idiv
cs
xchg
pop
pop
xor
cmp
xchg
fdivrs
loope
push
pop
subl
fstl
sar
add
sahf
fildll
xchg
into
mov
bound
mov
cltd
xor
push
xchg
pop
jb
ret
xchg
xchg
mov
scas
pusha
into
and
cld
jmp
ret
imul
jg
xorl
aas
rcrb
aam
insl
roll
mov
test
add
xchg
inc
test
cmp
js
inc
into
out
shrl
pop
push
pop
xchg
adc
adc
repz
and
flds
jo
sarl
mov
cmp
mov
fidivs
sti
into
std
xor
pop
fldcw
ss
add
call
mov
xchg
clc
aaa
call
jns
arpl
or
scas
mov
jl
inc
dec
cmpb
xor
xchg
int3
add
sbb
mov
rcrb
push
clc
stos
and
xor
int3
ja
rcrl
xchg
shlb
shll
arpl
in
ret
sub
cmpsl
adc
iret
into
push
push
outsb
inc
xor
sbb
sub
xchg
xchg
call
adc
pushf
inc
stos
mov
push
loop
and
les
loopne
push
pop
out
nop
mov
sub
leave
sarb
fwait
jbe
mov
xlat
call
lret
mov
leave
adc
jo
pop
lods
or
push
loopne
xor
pop
or
ja
push
mov
int
mov
aad
add
cmp
je
cmp
jno
sbbb
cmc
in
mov
inc
divl
inc
jge
xor
repnz
and
mov
pop
out
add
and
fcomps
adc
sbb
imul
push
or
test
add
loope
test
sbb
cmp
lret
fcoml
mov
push
frstor
sub
and
arpl
add
mov
inc
lret
jne
jge
movl
stos
mov
mov
shlb
out
add
pop
aam
xchg
aaa
sahf
and
fs
les
mov
jmp
jmp
iret
inc
andl
pusha
mov
cmc
dec
cmp
xor
cs
jbe
sbb
pop
and
sti
sbb
pop
add
ret
leave
imul
mov
dec
mov
mov
fidivl
enter
js
leave
dec
mov
ljmp
mov
cli
xlat
dec
xchg
imul
cmp
jge
repnz
insl
inc
mov
in
adc
mov
inc
add
inc
das
in
pop
dec
sub
jns
sar
out
test
dec
shlb
ljmp
push
nop
popf
and
lcall
enter
or
jb
xor
pop
filds
stos
and
roll
jmp
repnz
push
icebp
cmp
lcallw
pop
sub
jg
cmp
pushf
and
mov
aad
fcompl
mov
mov
mov
and
mov
push
mov
stc
xchg
mov
lea
negl
or
jo
icebp
ficoms
daa
or
and
pop
lcall
nop
jnp
cld
ss
iret
sub
jl
rcrb
mul
and
xchg
inc
imul
mov
movsb
push
and
add
push
sub
ret
mov
mov
loope
jmp
in
inc
stc
hlt
xchg
and
mov
das
mov
fidivrs
xor
sub
mov
mov
outsl
fdivs
add
cmp
or
dec
cmp
sub
xchg
dec
dec
sarl
xchg
jle
inc
sub
les
mov
lea
fsubp
std
sbb
pop
loop
das
jb
cli
add
mulb
cmp
sub
adc
jns
mov
mov
ljmp
icebp
data16
insl
xor
cmp
or
lea
jbe
xchg
cmp
call
jns
push
pop
xchg
fildll
cmp
pop
and
or
les
pop
insl
push
adc
rcrb
mov
outsb
loope
cmpsl
jge
sahf
ljmp
in
lods
imul
mov
add
imul
pop
jecxz
cmp
test
and
lahf
jnp
loope
cmp
andb
aad
jno
xor
fadd
pop
shl
mov
jge
mov
and
push
in
jmp
out
and
repnz
xchg
pop
mul
mov
mov
push
imull
data16
add
fwait
jmp
cwtl
mov
gs
cwtl
mov
cmp
mov
loope
lock
xchg
or
and
ret
aad
fs
xchg
std
pop
lds
dec
mov
dec
cmp
cmpl
insb
xchg
or
mov
mov
enter
out
inc
or
adcl
ds
es
lret
push
adc
pop
scas
add
sbb
prefetchwt1
or
xor
push
shlb
std
lods
shll
popf
jmp
imul
inc
dec
xor
cmp
and
adc
sub
mov
xor
mov
lahf
pop
pop
in
jne
test
loopne
mov
pushf
daa
cmpsl
fcmovnu
jle
cltd
addr16
addb
push
shrl
mov
std
aaa
inc
push
ljmp
xchg
out
jns
fxch
not
xchg
jbe
or
repz
sbb
aas
sbb
imul
inc
outsl
sbb
inc
jae
iret
xlat
mov
xor
adc
aaa
mov
cmc
icebp
mov
dec
sbb
jge
mov
mov
insl
inc
sub
popf
insl
arpl
pushf
hlt
jle
imul
std
outsl
and
cwtl
sbb
or
add
inc
pslld
sbb
icebp
nop
movsb
push
adcl
clc
leave
sub
xchg
in
and
shl
call
mov
jno
xchg
enter
pushf
aaa
into
testb
pushf
mov
js
out
cli
xlat
stc
movsb
mov
pop
pop
in
lock
or
daa
xchg
daa
inc
int3
div
icebp
ficoms
mov
or
adc
arpl
mov
loopne
lock
dec
rclb
jecxz
aaa
jmp
inc
ss
mov
les
xchg
inc
addr16
mov
xchg
scas
fst
pushf
push
xor
sbb
push
and
jp
cli
sub
fadds
cld
cmpb
aas
xor
lfs
jg
sub
ljmp
in
es
cmp
mov
stos
jae
les
cmpsl
lods
fisubs
scas
lea
stc
push
insl
das
addr16
sbb
xchg
jle
hlt
mov
fisttps
xchg
mov
inc
je
lea
cmp
je
mov
iret
outsl
pop
andl
mov
lods
push
push
xchg
ret
xor
pop
mulb
jl
call
cmpsl
enter
jno
mov
xchg
mov
push
jno
sbb
nop
jp
les
adc
clc
xlat
mov
gs
ret
aas
mov
xchg
leave
hlt
push
pusha
add
pushf
int3
pop
inc
xchg
stos
repnz
and
imul
xor
xor
dec
lods
pop
mov
out
bound
push
das
jae
inc
les
push
mov
ret
stos
notl
push
in
ljmp
aad
pop
pop
mov
enter
imulb
test
xor
push
fcomps
jp
movsb
out
gs
inc
lahf
xchg
or
outsl
fwait
lock
in
mov
mov
push
incl
insb
inc
inc
sbb
mov
je
pop
sbb
test
gs
sub
mov
xchg
pushf
cmc
out
jne
sbb
or
jl
stos
sub
data16
mov
ljmp
push
sti
dec
cmc
sti
enter
xor
das
pop
jb
or
xchg
in
dec
lds
or
mov
inc
cmp
push
push
sbb
shrb
mov
mov
stos
push
pop
inc
fdivrs
out
mov
pop
inc
andl
repnz
xchg
jmp
lcall
pushf
fstps
sbb
lcall
adc
test
jo
subl
push
jp
lahf
mov
push
dec
add
mov
cmp
addr16
xchg
mov
pop
xchg
jae
cltd
push
jns
stos
xorb
insl
fsubs
cmp
cwtl
jp
cs
cmp
aam
xor
mov
les
push
jp
std
jnp
aam
ljmp
das
sti
lods
mov
hlt
pop
xchg
test
add
fmull
push
fwait
inc
push
pop
push
sub
ret
mov
rclb
adc
or
push
stos
pusha
dec
jno
xor
insb
test
movsb
xchg
push
gs
aas
out
gs
push
xor
daa
and
xchg
push
mov
cmp
je
jnp
sti
int3
fs
ss
mov
push
xor
lods
and
std
mov
xchg
imul
pop
test
push
jmp
test
sub
insb
or
sbb
cld
mov
outsb
and
xchg
xchg
not
and
push
jecxz
fdivrl
scas
mov
inc
jg
add
hlt
loop
xor
mov
pop
or
lods
call
scas
loope
sub
sub
aam
inc
fisttpll
dec
push
cmp
fs
lahf
aam
pop
adc
cld
flds
xor
jns
cwtl
ljmp
pop
dec
lcall
bound
and
shll
sbbb
mov
xchg
aaa
push
dec
mov
inc
fdivs
pop
imul
mov
jl,pn
leave
test
mov
ss
arpl
xor
js
jnp
pusha
xchg
or
mov
and
rol
lock
popa
add
add
and
test
cwtl
out
mov
xchg
iret
adc
ljmp
dec
rclb
xlat
stc
xchg
jg
or
loope
cs
mov
loop
pop
sub
lcall
sbb
sbb
add
inc
ret
cmpsb
lcall
mov
pushf
dec
les
pop
pop
enter
add
sub
jnp
rcrl
in
lods
insl
sahf
je
sbb
sub
xchg
jae
cmp
sbb
xor
inc
movsl
fucomi
push
dec
jnp
jbe
ret
imul
aaa
outsl
inc
jne
aas
out
mov
lds
inc
sub
das
ret
sbbb
mov
jl
mov
jg
fcoms
pop
out
fldcw
loopne
sbb
fwait
mov
scas
adc
int3
jae
pop
fisubl
loopne
popa
repz
jne
test
popf
mov
dec
fists
adc
insl
or
sub
mov
xchg
test
dec
fildll
mov
jp
dec
repz
andb
pushf
movsl
add
or
fistpl
arpl
ret
push
push
fdivr
out
mov
mov
xchg
cmpsb
lods
aas
push
popf
inc
push
cltd
mov
jl
jnp
inc
lahf
mov
inc
ja
sub
jae
pushf
aas
call
sub
js
notl
incl
mov
ds
in
es
pushf
jp
inc
add
dec
fstp
movsb
fsubs
aas
push
add
decb
add
cld
cmp
cltd
mov
dec
add
int3
push
jg
rolb
mov
sahf
adc
cmp
xchg
jno
outsl
mov
jp
inc
ret
xor
test
fildl
sbb
arpl
rcr
outsb
jno
mov
dec
shl
push
pop
inc
xorl
pop
mov
cwtl
shlb
sbb
lods
or
out
jp
int
pop
daa
test
icebp
ja
out
roll
imul
lock
lret
outsb
mov
shrb
lahf
mov
push
loope
jnp
jl
inc
stos
mov
arpl
xor
inc
xchg
xor
sub
orb
mov
dec
mov
cmc
jg
int
push
movsl
aam
repnz
lock
add
or
sub
stos
cmp
dec
push
xchg
push
cmpsb
sub
push
mov
int
insb
add
lret
mov
mov
sbb
dec
shll
cmp
pop
stos
imul
inc
push
or
mov
mov
adc
movzbl
lea
xor
mov
and
js
pop
or
imul
mov
roll
stos
stc
add
leave
pop
sbb
jbe
lahf
and
iret
int
pop
xor
ljmp
sub
ljmp
lahf
xchg
add
test
negl
and
jecxz
jp
lea
pop
test
mov
movsb
mov
lret
adc
leave
mov
shll
mov
push
or
mov
sub
jmp
adc
and
call
sbb
cld
out
mov
inc
das
insl
mov
add
add
out
testb
imul
push
add
push
mov
aad
inc
push
in
inc
setl
sahf
jp
or
pop
fcmovbe
xor
out
ljmp
xchg
sub
inc
inc
mov
jo
inc
push
popa
xchg
jb
adc
mov
out
mov
push
mov
mov
imul
or
stc
lea
inc
cltd
call
push
xchg
lret
lock
movups
outsb
mov
xchg
xor
jb
pop
hlt
sub
mov
xchg
and
jmp
jg
popa
lcall
inc
in
sub
lret
dec
into
fsubp
sbb
cmp
mov
mov
jae
inc
fisttpll
stos
insl
test
jmp
sub
pop
sub
mov
inc
clc
jo
pop
dec
push
fsts
add
xchg
dec
push
and
rorb
lods
mov
cmp
push
cli
call
outsl
adc
ficompl
aam
pop
cld
inc
cmpb
add
scas
les
dec
pop
inc
loope
pop
daa
and
loop
push
or
inc
dec
sub
in
movsl
adc
pop
repnz
adc
jg
cmc
out
or
shlb
pop
daa
fsubs
jne
mov
cmpsb
cmc
cltd
clc
xchg
mov
outsl
leave
or
or
rorb
std
pop
inc
xchg
mov
fld
sub
add
mov
popa
cmp
aas
push
mov
enter
enter
mov
mov
adc
int
or
jmp
mov
push
outsb
sub
mov
mov
test
addr16
jecxz
adc
and
dec
xor
adc
int3
outsb
inc
jge
xor
or
or
xchg
dec
mov
cmp
mov
inc
cld
jle
andb
cmp
mov
mov
lock
ljmp
sahf
mov
mov
movl
cwtl
inc
jge
es
pop
inc
sbb
loope
lcall
leave
ret
lahf
inc
lds
div
nop
imul
xchg
inc
jo
sub
cmp
sbb
ret
mov
inc
push
scas
pusha
movsb
dec
pop
ds
aad
sbbl
push
sub
xchg
pop
aam
or
aam
mov
add
push
outsl
mov
add
xor
push
cli
jge
movsb
insb
push
arpl
xchg
mov
js
add
aaa
stc
rcl
adc
mov
mov
cmpsb
stos
sahf
push
xchg
fwait
and
sbb
fstps
add
xor
sbb
pusha
jb
inc
lods
jp
jecxz
pop
lods
lods
out
cmp
iret
add
cltd
mov
adc
in
aad
cld
movsb
add
xchg
adc
push
imul
adc
popf
aad
dec
sbb
repnz
inc
and
sbb
sub
mov
orb
jo
icebp
in
mov
loop
jnp
mov
or
push
inc
es
movsl
fidivs
imul
inc
call
iret
sub
iret
cmpb
mov
mov
sbb
pop
mov
and
test
nop
mov
nop
lock
push
dec
bound
cmp
cltd
inc
add
and
dec
mov
jbe
and
dec
js
bound
pop
sub
out
iret
sbb
cmc
pop
xchg
jbe
cmp
mov
inc
mov
lea
inc
add
fildl
mov
fwait
repnz
cmpsl
mov
cmp
jle
mov
mov
pop
cmpsl
sub
sahf
xchg
mov
mov
pushl
mov
imul
mov
daa
into
mov
js
xchg
xor
mov
pop
jg
jne
xchg
mov
cmp
mov
aam
cmpsb
in
mov
and
or
sbb
xchg
push
in
lret
shlb
repnz
in
mov
xor
jl
test
sbb
nop
dec
mov
push
mov
cmp
fldenv
mov
cmp
jns
aam
mov
mov
in
and
cld
jmp
jl
jno
sbb
jp
cmp
cmp
and
add
ds
out
and
sbb
pushf
jns
in
jne
mov
dec
and
inc
das
std
xchg
mulb
mov
stos
xor
cmc
push
dec
sub
mov
std
add
sbb
sbb
lods
test
std
fs
mov
fmuls
cwtl
mov
and
mov
mov
scas
jo
mov
jge
push
testb
in
int
popa
xchg
stc
dec
aad
mov
sbb
loope
jge
push
xchg
inc
icebp
sbb
dec
pop
enter
ss
sbb
jg
cli
or
fcoms
fidivs
and
push
and
insl
push
dec
hlt
into
inc
xor
sub
sub
int
pop
daa
sbb
inc
or
cmp
mov
cmp
stos
xchg
cmovno
push
into
lods
push
sahf
ljmp
faddl
pop
mov
pop
push
lods
push
ret
stos
inc
sbb
xor
std
xor
xor
sti
push
mov
outsb
stos
call
cmp
scas
add
fldlg2
push
movsb
in
jg
jp
jnp
xchg
out
mov
sbb
cmp
jmp
iret
sbb
and
js
jnp
adc
outsb
arpl
imul
inc
ljmp
cmp
fistl
movsb
or
mov
cld
push
inc
std
insl
shlb
dec
test
lret
xor
mov
jp
outsb
fimuls
xchg
fisttpl
pop
ljmp
mov
daa
cld
lahf
data16
cltd
adc
mov
rcll
push
rcll
sub
cmp
inc
adc
inc
jo
fsubrs
pop
and
sub
sbb
xchg
enter
jnp
lods
imul
and
push
les
imull
lock
or
sbb
fsubrl
adc
sbb
inc
push
xor
xor
dec
sub
testl
add
mov
or
adc
insl
fsubrs
dec
jbe
mov
fdivs
adc
jp
lea
jle
xor
shr
hlt
cli
incl
aad
push
push
aad
into
enter
sub
jae
mov
loop
in
bound
mov
cwtl
mov
mov
sbb
xchg
js
xor
cmp
cmp
mov
dec
add
mov
test
cwtl
ja,pt
test
aad
test
mov
push
inc
push
mov
jb
or
xor
ficoms
stos
xchg
sub
push
ror
ret
cltd
mov
add
cmpsl
in
add
sub
xchg
iret
outsl
sub
adc
inc
jge
push
pop
mov
and
push
outsl
mov
add
inc
push
in
daa
push
roll
mov
xchg
je
shlb
lds
pop
mov
cmp
add
and
bound
popa
loopne
hlt
sub
sub
imul
repz
inc
mov
add
sbb
push
aas
xor
push
rcll
imul
pop
leave
cli
pop
sub
dec
in
inc
mov
push
pop
pop
sbb
mov
dec
shlb
in
icebp
adc
mov
sti
push
adc
xchg
shrb
loopne
bnd
sbb
inc
cld
add
and
add
stc
push
or
mov
sub
xor
aaa
mov
sub
out
inc
repz
mov
int3
mov
bound
mov
lret
iret
push
add
outsb
xor
inc
mov
iret
insl
insb
stc
js
adc
push
fisttpll
mov
xchg
rcpps
in
xchg
inc
xchg
inc
imul
mov
cli
imul
lods
pop
cwtl
dec
dec
xchg
cmp
stos
push
stc
and
dec
inc
and
ja
fstps
fistps
push
or
popl
shlb
clc
xor
push
push
xlat
lods
hlt
or
es
sti
adc
xchg
mov
adc
dec
lret
mov
mov
es
cwtl
push
mov
clc
xor
pushl
test
jo
inc
or
add
pop
hlt
mov
mov
add
sahf
jle
push
mov
lret
gs
nop
imul
add
aam
aad
aaa
adc
sbb
cmp
lret
movsl
sar
decb
push
pop
shl
jb
xchg
outsl
pop
jae
add
test
cmpsb
adc
into
lahf
inc
jge
cmp
loop
mov
rcrb
lcall
aam
adcb
and
pop
push
incl
scas
subl
pushf
lcall
mov
sub
es
add
cmp
jl
sub
fisttpl
outsl
loopne
xor
sub
lods
insb
out
inc
pusha
icebp
push
shl
push
jo
jmp
daa
mov
xchg
adc
sti
aaa
jp
out
pushf
cmp
cmp
or
dec
mov
into
iret
divl
push
lods
or
mov
stc
mov
mov
aam
cwtl
xchg
lret
xchg
adc
sbb
xchg
sbb
iret
inc
push
popa
dec
push
jno
push
dec
subb
xchg
inc
mov
and
add
fistpll
sub
int3
add
dec
sbb
mov
lea
fisttpl
pop
fmull
or
orl
fmuls
movsb
sahf
jl
inc
push
rorl
dec
xchg
call
orl
and
sbb
sub
jp
hlt
lahf
sbb
mov
sahf
stos
mov
adc
sub
jae
push
call
cli
push
clc
mov
or
pop
mov
cs
push
cmp
lds
das
xchg
mov
aas
xor
popa
xchg
jnp
xchg
aas
xor
test
pop
sub
enter
jae
stc
fdivr
mov
adc
jae
and
xchg
popa
fistl
xor
cmp
repnz
je
stos
stos
add
in
aad
lret
gs
sub
int
aas
repz
roll
rol
hlt
shll
lahf
pop
fdiv
icebp
rcr
fistpll
inc
lcall
mov
mov
jae
adc
sahf
mov
cmpsl
mov
sbb
mov
mov
loope
and
xchg
test
arpl
pop
push
jo
cmpsb
jno
shll
fisubrs
adc
or
mov
ret
xchg
jg
fadds
add
in
mov
inc
in
mov
cld
pop
push
sbb
cli
cld
or
fbld
jge
ret
cmpsl
incl
pop
jmp
mov
fnsave
pop
mov
adc
cld
sbbb
or
sbb
pop
xor
int3
pop
jb
add
mov
imul
dec
test
push
push
cmpsl
pop
xor
mov
fcmovnbe
or
cmp
jbe
pop
lret
mov
or
mov
rcl
jge
jnp
sbb
lds
adc
popa
fisttpl
mov
sbb
sti
sub
pushf
aas
test
into
movsl
dec
out
lcall
cmp
stos
adcl
outsl
pushf
std
push
rolb
jp
pushl
pop
mov
mov
mov
shr
jnp
cltd
lea
ret
inc
cmpsl
int3
notl
xor
lods
cli
test
fnsave
dec
ret
in
mov
movsl
test
mov
sbb
mov
mov
mov
dec
sbb
fs
in
mov
pop
mov
mov
or
movl
push
cmp
movsl
mov
dec
fs
add
sbb
mov
sub
mov
and
mov
jecxz
cmpl
add
adc
adc
sbb
int
pushf
adc
rdmsr
stos
fs
icebp
insl
lea
lret
push
cmp
pop
pop
int3
in
add
popf
clc
dec
test
lds
and
mov
lret
push
testl
imul
addb
movsl
dec
mov
addb
mov
test
aaa
repnz
int3
xor
movsl
test
cmp
mov
xchg
call
pop
xor
nop
mov
mov
mov
jecxz
ljmp
imul
and
fnstcw
sub
jge
or
fwait
leave
xor
rolb
xor
cmpsb
popf
subb
dec
or
mov
inc
dec
ljmp
mov
es
sub
jge
popa
cwtl
rcrb
mov
mov
jnp
push
or
sub
jno
addr16
cld
cmp
in
enter
stos
sbb
mov
push
sbb
lret
dec
int
inc
fcmovnbe
or
movsl
inc
sahf
add
inc
xchg
fisubs
shll
out
xchg
dec
subb
lcall
in
sarb
dec
scas
dec
jp
xor
push
popf
dec
in
jp
push
inc
mov
xchg
stos
inc
pop
pop
sub
inc
pop
xlat
decl
and
jo
inc
loop
xor
test
outsl
ljmp
shlb
shlb
mov
insl
ret
cld
lahf
popl
into
cli
cmp
push
int
mov
lcall
in
push
fwait
out
and
jne
xchg
pop
popa
adc
movsb
pop
inc
lds
dec
mov
pop
outsb
jecxz
das
push
std
pop
or
out
cmp
sete
mov
stos
int3
xchg
popa
mov
jmp
push
andb
mov
test
push
repz
xchg
sarl
dec
xorl
mov
repnz
stos
rcll
or
cmp
sahf
iret
adc
push
xchg
pop
mov
xor
jmp
in
fnstenv
les
es
cli
in
ficoms
jle
js
xor
cmp
adc
js
lods
cmpsb
cmp
cmp
loope
push
xchg
add
dec
add
add
xchg
inc
shrb
sub
fwait
adc
pop
mov
mov
out
mov
add
dec
in
jle
dec
cmp
ss
pop
hlt
mov
test
icebp
or
mov
mov
loope
ds
mov
hlt
jne
and
and
bound
jae
pop
or
popf
in
lahf
jbe
sub
add
push
and
inc
xchg
gs
jmp
cli
jb
sub
mov
xchg
mov
sahf
inc
xchg
ja
rorb
insb
cmp
or
shl
stos
int
mov
sub
dec
push
mov
adcb
popa
cmp
and
into
jb
insb
fbld
jnp
inc
loop
stc
lahf
add
into
neg
mov
or
mov
push
jle
mov
jb
mov
add
shll
sub
bound
mov
mov
pop
popf
cld
in
sahf
scas
les
push
mov
out
aas
adc
or
xchg
bnd
dec
or
cld
pop
pop
sub
pop
les
dec
or
test
clc
sbb
add
lret
adc
ss
aam
push
sbb
daa
loope
mov
adcb
adc
dec
add
cmc
or
cmpsl
jbe
stc
jmp
test
inc
loopne
jae
shll
sbb
sub
ss
sbb
testl
outsl
mov
sbbb
or
sbb
test
mov
dec
jnp
test
xor
push
pop
xchg
divl
ja
imul
dec
in
cltd
sub
pop
mov
js
pop
cld
jno
mov
pop
mov
jns
mov
mov
and
mov
les
rclb
rolb
add
dec
pop
mov
adc
scas
xchg
bound
push
repz
xchg
out
icebp
outsl
fs
gs
ja
test
pop
jl
mov
bound
dec
js
inc
fnstcw
idivl
cmp
cmp
fimuls
pushf
cmpb
test
xor
sub
outsl
push
ss
lods
sti
ja
pop
and
jae
pusha
cmp
andb
push
call
movsl
add
rolb
popa
dec
clc
and
loope
sbb
xchg
les
mov
and
call
aad
cmp
fwait
int
fimull
cmpsl
sub
adc
cmp
clc
andl
outsb
mov
xchg
lahf
dec
repz
cmpsb
fiaddl
jp
xchg
fidivs
push
push
jg
sbb
pushw
sbb
cmp
sbb
jns
nop
pop
sub
outsb
xchg
xchg
shl
rcrl
fs
sbb
jno
pop
pusha
test
aas
pop
jbe
fsubl
test
jae
loopne
mov
jnp
int
mov
dec
into
pop
fs
xor
or
subl
mov
push
xchg
push
lea
jle
leave
mov
and
mov
jns
sarl
in
pop
xor
pop
sub
fisubl
push
int
insl
mov
arpl
push
cli
or
loop
sbb
inc
cs
inc
dec
and
mov
mov
orl
sarb
mov
or
outsb
fsubr
cmp
lahf
mov
lret
dec
sub
lret
dec
cli
aas
bound
inc
dec
sbb
add
stc
add
sub
bound
push
repnz
cld
sub
push
fbstp
ret
mov
movsb
imul
add
ret
jae
cmp
loopne
xchg
inc
insb
inc
xor
test
hlt
jne
daa
mull
mov
push
in
and
add
xchg
cmpsb
sbb
sbb
inc
mov
aam
mov
push
enter
xchg
pushf
dec
xor
dec
fbstp
bound
add
xor
push
out
jecxz
adc
lock
jle
mov
push
push
mov
jmp
xor
inc
cmp
xchg
cmpsb
inc
jb
ljmp
mov
pusha
jmp
das
loope
mul
pop
xchg
lock
in
sub
xchg
or
pop
adc
add
mov
test
mov
adc
lret
lods
cmp
adc
clc
adc
pop
mov
jge
adc
dec
mov
call
nop
or
stos
and
or
imul
jb
mov
sbb
in
xchg
xor
lock
inc
add
jle
mov
rclb
lcall
in
into
lock
push
enter
or
and
xchg
mov
inc
stos
sbb
dec
mov
xchg
repz
into
xchg
xchg
adcb
fmuls
pusha
mov
rorb
jae
mov
push
stos
enter
mov
sahf
adc
dec
sti
and
nop
sbb
mov
out
aas
cmp
xor
cmp
cltd
int
outsl
mov
and
jne
or
aaa
out
ja
pop
and
pop
inc
pop
inc
mov
xor
mov
dec
movsb
gs
inc
push
mov
xchg
lods
lret
out
xchg
stos
rcl
int3
sahf
mov
lods
jg
fsubrl
xor
pop
xchg
cmpsl
out
loop
fs
jne
mov
shlb
push
jmp
sbb
pop
test
mov
sbb
leave
dec
push
dec
pusha
stos
std
pop
in
dec
dec
sub
xchg
sub
insb
add
mov
ffreep
into
test
dec
fbld
addr16
arpl
xorl
push
sub
aad
es
cltd
imul
je
sti
sbb
mov
lods
dec
mov
aas
fisttpl
aas
fdivs
mov
pop
push
sub
mov
xor
xchg
iret
stos
or
mov
cs
dec
jne
aam
dec
idiv
test
inc
lock
sub
out
stc
test
xchg
xchg
lods
adc
mov
dec
lods
cmp
bound
jno
fisubrl
mov
mov
idiv
dec
dec
push
jb
adcl
xchg
aad
pusha
xchg
inc
subl
call
mov
mov
mov
dec
dec
stc
mov
dec
lret
cli
rorb
sahf
pop
sar
mov
scas
lock
jno
std
pop
lea
sub
cwtl
dec
stc
out
mov
cmp
push
out
mov
mov
or
push
and
out
mov
and
ror
test
mov
cwtl
mov
xchg
int
loop
mov
out
mov
fildl
mov
enter
adc
mov
cwtd
inc
rcrb
inc
push
aas
andb
cmp
add
mov
incb
push
rol
jl
aam
insb
out
xchg
push
adc
or
aad
inc
scas
mov
lret
xchg
cwtl
pushf
pop
insb
in
lcall
scas
add
xor
outsb
cmpsl
mov
mov
lds
jnp
jo
fbstp
aaa
pop
jg
sub
push
mov
test
or
cmp
or
js
mov
icebp
pop
fldenv
loopne
out
cmp
sub
inc
in
sbb
sbb
sub
sbb
jle
push
xor
insb
call
sub
test
cmpsb
push
sbb
mov
into
sbbl
fld
sar
inc
cmp
xchg
cli
jmp
loop
push
dec
movsl
cli
cmp
out
out
jg
pop
mov
fisubl
xchg
imul
push
dec
fnstsw
jecxz
xchg
fwait
lret
in
nop
xor
jb
jmp
dec
pop
adc
stc
lock
in
pop
mov
popf
push
rsqrtps
orb
push
or
mull
cli
insl
dec
ss
push
ret
lret
out
cmp
ret
fldl
enter
pop
or
mov
dec
stc
inc
test
mov
shll
dec
and
arpl
push
pop
fnstcw
pop
mov
pop
sub
idivb
sbbl
gs
divb
adcl
aam
je
in
pop
xchg
out
stc
sub
pop
lds
pop
mov
mov
out
push
or
test
push
or
int3
dec
aam
aas
lcall
and
mov
lock
dec
jmp
push
jecxz
in
add
push
mov
or
add
mov
ss
aas
test
mov
aas
xor
pop
out
mov
loop
push
inc
loopne
mov
dec
mov
adc
mov
rcl
scas
mov
mov
repz
push
jmp
push
sub
and
leave
repz
xchg
push
lahf
jg
and
mov
adc
out
cmp
ret
push
loop
out
add
dec
rolb
ror
fsubrl
pop
mov
jl
jne
out
mov
aaa
and
xor
push
adc
sub
rcr
shrl
xor
mov
addr16
mov
sbb
scas
fbstp
add
andb
lods
dec
sbb
mov
mov
ds
push
or
pop
outsl
xchg
adc
mov
lcall
dec
out
mov
cs
imul
jae
into
push
imull
lret
jg
push
pop
inc
and
xchg
iret
sub
into
inc
fcmovb
std
cmp
ja
sub
pusha
lcall
mov
add
sub
jo
xlat
shll
iret
fistps
mov
jge
mov
rorl
sub
push
in
popa
cmpsb
in
mov
dec
jno
pop
not
pop
add
push
fmull
sbb
inc
or
leave
xor
sbbb
addl
pop
pop
push
das
mov
ja
push
out
jne
xor
xchg
test
dec
enter
jle
repz
ds
flds
and
out
and
mov
xor
rorl
popf
add
outsl
out
lock
pop
cltd
stos
cmp
adc
popf
sbb
fnsave
lock
add
sar
mov
jae
iret
sub
sub
jo
insl
jge
dec
lret
shlb
push
std
push
xchg
mov
xchg
jbe
int
mov
fdivrl
push
fldl
popf
pop
ret
loopne
dec
or
addr16
repnz
fnstcw
jecxz
inc
or
cmp
adc
aam
in
fs
cld
mov
leave
jno
adc
adc
call
fmull
dec
cmp
jne
jb
outsb
fcmovnbe
call
inc
imul
fsts
aas
sbb
mov
test
lds
adc
inc
push
fbstp
mov
lods
push
xor
call
add
mov
repz
clc
sbb
mov
aas
add
xchg
or
jg
fidivrl
in
lods
jb
pop
mov
arpl
and
jnp
jns
jmp
rol
jno
xchg
mov
dec
jmp
scas
inc
dec
in
pusha
cmc
arpl
jl
je
gs
inc
jle
mov
or
outsl
and
mov
insb
mov
mov
bound
popf
js
mov
aaa
test
aad
mov
or
or
movsl
pop
dec
lods
mov
mov
orb
mov
outsb
jecxz
jae
ficomps
xor
ljmp
inc
mov
mov
sub
aas
or
cwtl
scas
inc
lret
mov
dec
scas
pop
test
bound
rclb
lret
dec
addr16
xchg
adc
push
cmp
push
push
sub
ljmp
mov
cli
jno
sar
into
sbb
jp
adc
mov
not
or
lods
rcl
fcoms
icebp
jge
inc
bound
es
stos
and
jae
pop
ss
repz
mov
inc
sbb
shlb
shrl
ja
cmp
mov
mov
push
sti
sbb
aas
push
mov
and
sbb
mov
dec
push
add
mov
pop
xor
aam
mov
pop
leave
sub
pop
pop
cmpsb
pop
mov
loope
sbb
lods
adc
bound
scas
add
and
pop
push
add
lods
and
push
popf
call
pop
leave
sbb
xchg
xchg
cmp
mov
pop
cmp
in
xlat
jmp
adc
cmp
add
inc
mov
imul
shll
out
test
ret
arpl
imul
add
adc
cmp
divl
das
dec
inc
out
jnp
xor
bound
mov
fisttpl
cmp
cmp
je
cli
push
ret
push
xor
lds
out
or
and
stc
mov
fidivl
dec
mov
mov
loopne
out
add
into
push
mov
pusha
cmc
repz
cmp
jg
pop
sub
cld
cmp
dec
packuswb
mov
sti
rolb
cs
add
cmp
dec
std
push
addr16
xlat
push
dec
fildl
imul
jl
cltd
mov
xchg
loope
lds
mov
out
loope
dec
add
sub
xlat
cmp
fbld
cwtl
test
xchg
sahf
fildll
enter
xchg
outsl
xchg
shlb
mov
push
cmpsb
lock
xchg
xchg
dec
inc
shll
mov
icebp
popf
mov
sbb
mov
push
and
rolb
imul
movl
in
pop
ljmp
lds
add
loope
and
repz
sub
sahf
aaa
dec
xor
jecxz
cld
inc
push
mov
mov
aam
or
xchg
and
mov
btc
xchg
rolb
or
xchg
neg
ljmp
pop
cmp
mov
test
es
lea
mov
insl
xor
inc
int
jmp
cmc
hlt
dec
outsl
into
lock
mov
xor
ret
test
shll
addr16
lds
jae
mov
rcr
jmp
rorl
sbb
xchg
aad
pop
mov
mov
jp
pushf
notl
negl
inc
fnstcw
push
push
sub
xchg
jnp
adc
mov
std
cltd
lods
insb
out
and
je
lds
stos
cwtl
add
adc
push
cltd
mov
fwait
movsb
or
ficomps
fcmovu
sbb
std
clc
sbbb
ljmp
add
push
movsl
test
push
fbld
inc
jb
or
icebp
cmp
mov
mov
sbb
or
daa
enter
mov
mov
xchg
inc
mov
hlt
cmp
je
inc
stos
test
stos
sti
lods
int3
xor
loop
dec
roll
and
int
adc
mov
cld
inc
pusha
jle
or
addb
fwait
cmpl
or
imul
add
push
jae
in
mov
xchg
pusha
inc
addr16
mov
push
loopne
sub
pushf
add
add
jecxz
xchg
enter
movsb
push
sbb
rcrb
xchg
bound
pmovmskb
adc
pushf
push
call
xchg
cmp
adc
call
enter
mov
imul
add
int
fisubrs
enter
lret
mov
push
push
push
mov
out
inc
or
sub
jne
mov
outsl
and
outsb
ret
dec
inc
int3
or
insl
sub
in
pop
push
dec
or
rolb
pop
icebp
fincstp
adc
js
fdiv
xchg
imul
frstor
fadds
mov
cwtl
sahf
inc
mov
and
sarb
adc
cmp
hlt
and
addl
mov
and
clc
outsb
cwtl
sarb
push
push
mov
fcoms
daa
dec
fldl
insl
cmpsb
int3
sub
in
jmp
addl
inc
test
fnstsw
adc
cli
cld
inc
pop
mov
stc
mov
sub
das
dec
mov
cmpsl
paddq
add
out
aas
cmp
adc
inc
int3
sbb
fsubl
bound
or
pop
inc
mov
cwtl
loop
sbb
sub
adc
stos
mov
mov
mov
mov
mov
push
cwtl
out
test
jne
push
pop
cli
test
add
mov
push
jl
jmp
inc
out
ja
dec
rcl
cmpb
jnp
xchg
pusha
lock
xor
fs
add
inc
inc
les
std
mov
sbb
in
dec
fs
sub
jge
iret
ja
cmp
div
push
mov
or
out
mov
or
or
jecxz
and
out
in
stos
sbb
mov
or
cld
xor
lret
or
add
cli
lods
roll
adc
push
jge
jle
xchg
pop
pop
ret
mov
ret
cmp
add
sub
xchg
mov
lret
inc
cmc
out
sbb
inc
cs
inc
std
push
sarl
mov
cmp
scas
stos
adc
mov
out
push
sbb
xchg
divl
test
scas
in
out
xchg
inc
jo
inc
je
push
sbbb
inc
jne
push
lret
jns
into
sbbl
jg
movsl
or
fstpt
jle
inc
sti
sbb
xor
les
ret
lock
jnp
or
call
sub
sbb
enter
xorl
jne
and
mov
leave
rcl
mov
sub
push
into
aad
sub
xchg
icebp
mulb
mov
leave
push
mov
mov
mov
inc
sahf
xchg
and
sub
daa
inc
mov
mov
fsubrs
pop
lds
loop
push
outsb
pop
dec
cmp
adc
jnp
mov
push
mov
cmc
dec
mov
int
sarb
sub
push
pop
jmp
push
insl
dec
repnz
fstpl
icebp
pop
fdivrs
out
idivb
cltd
xchg
test
sbb
stos
cs
pop
fsubrs
mov
sbb
push
lods
ret
sbb
sub
jecxz
out
cmpl
dec
jbe
sub
notl
fildll
test
push
xchg
loop
call
push
repnz
dec
sbb
inc
rcr
cmpsb
fwait
insl
leave
or
stos
xchg
out
imul
gs
ja
stos
adc
fsubrs
out
jecxz
jno
test
mov
mov
fiadds
call
mov
insb
xorb
daa
pop
mov
cltd
shl
jb
fisttps
das
movsb
repz
outsl
mov
mov
push
shl
sbb
aas
mov
bound
and
cmp
xchg
in
imul
lock
pop
fldpi
mov
mov
imul
das
sbb
cmpb
andb
or
fmull
jnp
shlb
loopne
jecxz
inc
pop
jnp
popl
cmc
dec
jb
std
add
pop
xchg
or
incl
aad
sti
dec
cld
pushf
andl
mov
cmp
fsubrs
push
mov
int3
popf
or
in
lods
test
and
xlat
cmc
mov
dec
pushf
fnstsw
jp
mov
push
into
fldl
push
jb
les
daa
fucom
in
jo
jle
and
xchg
xor
imul
imul
jne
ss
testb
roll
cmpsb
mov
add
xor
sub
es
pop
xor
mov
or
pop
lods
out
popa
mov
pushf
std
or
bound
xchg
mov
out
mov
notl
mull
jne
cmp
bound
aam
xchg
lock
add
mov
sbb
subb
cmp
mov
adc
push
fucomp
cmpsl
mov
mov
pmulhuw
xor
lds
cli
cltd
adc
ffree
lods
iret
into
mov
into
push
mov
adc
gs
leave
push
nop
mov
inc
sbb
push
or
lds
xchg
ss
out
xor
test
out
test
cmp
mov
dec
cmpsl
add
pop
dec
out
mov
rcrl
je
inc
ljmp
jle
cwtl
fildl
sbb
pop
mov
testb
mov
mov
push
cld
popa
adc
mov
jb
mov
scas
xor
add
fcompl
fidivrs
stc
mov
fs
sub
jno
add
jmp
cmp
negb
or
mov
mov
pop
adc
adc
sbb
ljmp
lret
rcrb
mov
or
adc
dec
add
sbb
lret
lods
inc
rcrb
test
roll
cmp
and
mov
test
push
jp
lods
pop
or
jmp
aam
cltd
incb
mov
push
scas
or
pop
mov
or
mov
cwtl
mov
movsb
scas
adc
jg
test
adc
das
push
test
xchg
lods
aas
mov
and
sub
jne
jmp
fldt
scas
lods
clc
cmp
outsl
loope
add
mov
flds
divb
gs
stos
xchg
pop
les
mov
push
dec
les
adc
dec
loopne
int3
aad
stos
mov
sbb
jle
test
xchg
jecxz
decl
jge
adcl
scas
mov
imul
fwait
int
out
repnz
lea
stc
jno
dec
mov
mov
mov
das
iret
sbb
mov
and
mov
stos
ljmp
adc
pop
outsl
cmpsb
cmp
adc
push
add
nop
adc
lret
mov
out
sub
pop
mov
add
xor
sub
pop
aas
stc
xchg
aas
mov
xchg
in
pop
mov
sbb
jmp
out
mov
test
scas
cli
das
xorl
or
ss
jl
lahf
jmp
jns
leave
into
cmpsb
pop
adc
xor
mov
pop
jns
pop
push
jae
loope
and
ret
imul
fs
cmp
leave
jp
movaps
xor
roll
cmpsl
mov
test
divb
ficoml
mov
cmp
lret
loop
fcomp
mov
adc
pop
jnp
cmpsb
dec
push
xlat
mov
cltd
sbb
popa
cmpsb
xor
out
fwait
sub
xchg
loopne
inc
or
lahf
jb
push
mov
in
vpshuflw
cld
mov
int
dec
fsubl
cli
inc
mov
in
vmovd
stc
cmpsl
sbb
xchg
lret
or
jae
mov
imul
jmp
sub
xor
out
dec
inc
adc
pop
sub
loopne
mov
mov
out
int3
add
ret
pop
fwait
sbb
add
pop
les
data16
inc
inc
stos
ss
sbb
testb
xchg
adc
mov
out
lea
add
or
xor
mov
jns
pop
pop
shl
lcall
stos
cmp
dec
popl
roll
js
xchg
cmc
or
loopne
fsubl
push
mov
fmull
cwtl
adc
adc
ds
outsb
mov
imul
fdivs
jae
jbe
and
push
insb
cmp
cmp
xor
push
fcmovnbe
xor
imul
js
stc
sub
cmpsb
mov
and
push
cwtl
cmc
jae
notb
std
add
mov
int
mov
in
loope
dec
dec
outsb
shlb
sbbl
fwait
add
mov
insl
dec
das
mov
loop
mov
jmp
add
xchg
out
sub
jl
jmp
add
arpl
cli
pop
icebp
jg
loopne
push
enter
or
cwtl
daa
jle
lret
lock
imul
bound
pop
pop
ret
ret
sub
in
add
arpl
scas
pop
adc
push
mov
sbb
mov
sub
lds
cld
pop
cld
xor
add
sti
dec
ret
gs
mov
xor
mov
aad
in
movsb
inc
push
sbb
adc
add
and
xchg
xor
outsl
cwtl
leave
mov
mov
loopne
mov
mov
or
push
jp
mov
mov
xchg
insb
mov
mov
lock
cmovno
fs
stc
mov
fwait
nop
mov
mov
lds
xchg
pop
dec
clc
jns
cwtl
rcrb
pop
insb
jbe
stc
divb
pop
fistps
xor
cli
into
fcmovb
subl
mov
lock
xor
jecxz
ljmp
cmc
cld
into
push
jecxz
dec
cmp
outsb
xor
mov
inc
movsl
insl
jl
dec
ja
jmp
jo
xlat
es
or
outsb
jge
incl
ffreep
inc
inc
or
enter
mov
imul
jo
repz
loop
jmp
add
sub
pop
sub
pop
dec
enter
xor
xor
mov
test
insb
mov
jb
aam
cltd
sahf
bound
add
bound
sub
lret
jno
orl
insl
sub
mov
pop
dec
in
xor
fbld
cmp
clc
cli
fstpl
cmp
sbb
and
sbb
orb
pop
daa
fs
flds
cmpsl
add
xchg
add
inc
or
hlt
ds
aas
dec
mov
or
adc
inc
xchg
dec
ss
mov
rcl
fs
mov
add
jb
mov
jmp
rolb
int3
mov
rorb
js
pop
mov
outsl
inc
rcll
adc
push
testb
sub
leave
sar
mov
jge
pop
adc
jle
out
sbb
push
movsl
ds
and
fwait
shl
mov
inc
push
out
push
int3
stos
cmpb
adcl
mov
pop
rcl
je
out
mov
add
cmc
adc
add
js
clc
push
sub
dec
repnz
daa
jae
push
mul
sbb
cwtl
ret
pop
lods
lcall
jns
xor
enter
cmpsb
mov
xchg
xor
mov
push
shll
mov
ljmp
sbb
sbb
and
mov
adc
das
mov
pop
or
push
xchg
mov
pushf
rclb
and
inc
clc
sub
shll
dec
popf
mov
test
xor
stc
fs
and
lods
fsubrl
dec
jb
imul
mov
jge
ficoml
ljmp
mov
fiadds
mov
int
push
add
or
xchg
mov
fistl
pop
adc
xchg
push
push
jbe
cwtl
jb
push
jne
xor
lret
dec
jns
lret
gs
andl
xchg
push
mov
dec
outsl
mov
fists
sub
pop
and
mov
xchg
xchg
arpl
mov
mov
push
sub
imull
ja
loop
mov
pushf
and
adc
xchg
loopne
enter
cs
mov
stos
iret
lods
fs
sbb
dec
dec
ficompl
push
in
es
add
jnp
jecxz
adc
std
mov
xor
jecxz
mov
xor
add
inc
lods
ja
repz
mov
lret
pop
jae,pn
es
xor
or
sub
out
xchg
jb
mov
mov
mov
js
into
mov
jb
mov
mov
fildll
scas
test
mov
mov
mov
sbb
ds
xor
inc
cld
in
lahf
or
xlat
icebp
negl
fwait
in
pop
ljmp
lcall
jae
inc
vminsd
lea
cmp
std
jns
in
push
mov
loope
mov
xchg
in
cwtl
outsl
cmpsl
int3
xor
xchg
cmp
lret
mov
pop
out
mov
xor
dec
data16
test
scas
fwait
push
daa
cwtl
inc
inc
imul
mov
dec
xchg
ds
xchg
pop
into
mov
jge
mov
aaa
or
push
aaa
adc
xchg
cmpsl
sbb
adc
pop
ror
mov
mov
xor
jne
int3
shll
adcl
and
pusha
mov
out
push
ss
repnz
das
mov
jmp
xor
push
xor
lcall
sub
outsl
cmp
and
das
outsl
repnz
pop
jl
push
sti
xor
xor
ror
xor
sarl
cld
in
and
jb
arpl
jno
in
out
int3
and
xchg
aas
and
and
pop
mov
or
outsb
jbe
inc
adc
dec
and
lcall
jae
xor
inc
movsb
sub
jns
outsl
xchg
xor
or
xchg
inc
pushf
out
lea
ss
sahf
int3
or
cltd
push
sbb
cwtl
mov
mov
roll
fwait
mov
das
xor
pop
into
adc
cli
lock
sub
loopne
adc
cli
mov
in
pop
sbb
or
xor
and
sub
movsl
popa
std
leave
or
test
out
les
les
outsb
aas
cmpb
test
popf
je
jnp
imul
decb
arpl
and
or
xor
mov
xchg
nop
jbe
cmpsl
nop
out
add
cwtl
push
je
lock
and
outsb
es
cmp
aaa
sahf
aas
test
clc
out
fldenv
mov
adc
pushf
int3
ret
test
lcall
leave
cmp
add
xchg
repz
dec
adc
jne
daa
push
add
in
cld
in
dec
xchg
jne
cmp
shrb
popf
das
xchg
fs
jno
popf
push
lds
jns
insl
mov
movsl
pop
add
and
mov
hlt
adc
int3
cmp
lods
dec
inc
xchg
shll
cmp
sbb
out
call
lcall
bound
aad
add
jae
test
je
clc
fcomip
lcall
ds
lods
in
push
ret
test
out
xchg
popf
stos
jb
fistps
orb
pop
outsb
sarw
ds
or
xor
es
out
adc
xchg
movsl
sub
sub
xchg
sub
push
sarl
scas
xor
and
insb
xchg
fcmovne
pop
cli
xor
lock
mov
hlt
push
and
repz
lret
mov
cmpb
and
mov
sub
dec
fcomp
imul
push
lods
cwtl
in
cmpb
fst
and
stos
xor
cld
pop
movsl
lahf
into
test
add
cmpsb
xchg
mov
cs
cmp
inc
pop
push
jns
pop
das
rclb
cmpsb
pusha
xchg
inc
jle
mov
and
movl
mull
nop
ret
repnz
in
leave
pop
lret
movsl
mov
sti
mov
pop
cmp
or
aas
pop
mov
jle
fidivrs
push
aaa
mov
push
pop
sbb
mov
outsb
rolb
movb
xor
sub
dec
cli
adc
adcl
rcl
test
mov
ds
xlat
movsb
cmp
xchg
das
xor
pop
stos
push
pop
cld
bnd
mov
out
inc
cmp
call
sbb
outsl
arpl
push
sbb
pushf
ds
xor
adc
mov
rorb
in
loopne
fs
scas
jns
mov
call
push
mov
es
mov
into
mov
clc
hlt
cltd
mov
add
insb
add
daa
in
add
mov
xchg
mov
xor
rcr
sub
ret
and
and
push
mov
fcoms
ja
push
adc
sbb
pusha
movsl
bound
test
dec
fcmovnbe
pop
fdivrl
std
jns
dec
add
xchg
icebp
dec
xchg
or
pop
or
loop
xchg
popf
das
push
sqrtps
jns
das
jle
xchg
jne
ljmp
scas
jae
imul
mov
push
cmp
mov
pop
xchg
push
les
mov
cli
movb
iret
cs
ficoml
test
xchg
cmc
xor
lcall
fs
stos
xor
push
or
adc
div
loop
mov
call
mov
or
into
in
popa
xor
jns
aad
aad
adc
or
xor
movsb
pop
cwtl
nop
adc
mov
mov
fdivrs
pop
pop
roll
pop
or
fidivrl
nop
and
inc
add
stc
inc
jmp
xchg
test
pop
inc
ds
fisttpll
test
sub
not
sub
and
pop
jle
ficoms
fucomip
pop
xor
mov
pop
inc
push
shl
outsb
ss
outsb
dec
add
rclb
or
xchg
ret
cmp
push
add
push
sub
daa
movsb
jge
out
xlat
cmp
xchg
xor
or
mov
mov
js
adc
xchg
hlt
cmp
into
mov
mov
lds
fdivrl
jg
add
out
aad
ja
popa
pushf
stos
sub
cmp
cwtl
bound
stos
test
lret
loope
rcrl
repnz
outsl
jmp
xchg
pop
jmp
and
push
push
push
add
and
mov
aad
shrl
inc
add
add
ficoml
pop
push
pop
test
push
loope
into
orb
sbb
call
xor
mov
das
cmp
dec
inc
xor
andl
jns
nop
cmp
lcall
out
addr16
shrb
mov
mov
ret
sbb
hlt
and
outsb
enter
pushf
push
lods
pusha
and
hlt
aad
push
sar
hlt
divl
xor
push
sbb
neg
div
in
add
jmp
test
fdivrl
xor
lahf
pop
popf
cmp
jecxz
jl
pop
jo
rclb
imul
jns
or
push
pop
xchg
mov
pop
out
cmp
out
inc
test
and
fsubrs
cmpsl
lds
cmp
addr16
arpl
and
dec
fisubl
imul
pop
in
inc
mov
movsl
aad
cmpsl
pop
jg
inc
aam
test
fwait
mov
lock
icebp
movsb
jl
test
pop
ljmp
repnz
pop
test
ljmp
and
mov
adc
les
mov
or
out
pop
repnz
sysret
fstl
mov
dec
shll
mov
mov
mov
push
xchg
in
shrl
es
add
xor
jns
mov
and
or
mov
xor
int
sbb
leave
or
sti
cmp
jb
or
pmuludq
or
add
popa
push
pop
mov
jl
or
test
mov
add
sbb
lock
and
out
mov
mov
pushf
pop
sub
add
test
bound
stc
out
xlat
pop
xchg
jmp
popa
and
cwtl
inc
fistpll
loopne
push
xchg
inc
xor
arpl
js
xchg
test
mov
sti
shr
ret
pop
lods
mov
rol
sub
xchg
push
ror
out
scas
outsl
inc
ret
inc
shr
push
mov
push
lea
in
inc
hlt
sub
pushf
mov
movsl
push
mov
and
mov
rorb
sbb
int3
and
push
mov
lods
pop
lret
dec
lret
push
mov
daa
imul
lahf
pushf
or
mov
inc
mov
out
loopne
add
inc
shll
scas
sbb
add
test
inc
mov
in
or
filds
push
and
scas
inc
repnz
and
sub
or
loop
and
pop
fnstsw
push
sub
adc
xlat
insl
mov
loope
jb
mov
in
dec
xor
sysexit
xchg
sub
jge
or
mov
mov
xchg
fucomi
sbb
adc
in
xor
push
notb
jle
popa
adc
mov
ljmp
inc
inc
inc
popf
cmp
sar
insb
mov
sub
ret
add
fidivs
das
pop
enter
inc
ljmp
movsb
cltd
jne
js
cs
fstpt
pop
cmp
sub
fimuls
xlat
push
xorb
jnp
pop
inc
lret
jns
fsubr
lret
popa
push
adcl
rol
cmp
push
pop
jle
pop
or
and
mov
test
gs
push
sbb
cld
push
mov
jne
dec
pop
pushf
test
scas
mov
imul
dec
icebp
xchg
or
mov
mov
jns
outsb
mov
lods
in
sbb
xor
pop
icebp
inc
xchg
fsts
js
xchg
inc
xlat
push
insl
mov
pop
out
sbbb
outsb
sbb
xor
dec
sub
icebp
pop
jle
in
ret
mov
inc
pop
test
cmpsl
notl
subb
and
lock
test
and
sbb
ror
xor
or
daa
sahf
shll
xor
add
rcl
test
lret
sahf
test
jae
fisttpll
jnp
rolb
or
xorl
push
leave
aam
push
xor
scas
mov
int
outsl
mov
out
lcall
dec
call
push
cmpsl
fwait
lock
mov
xchg
popa
or
xorb
jmp
insb
test
and
out
addr16
jmp
daa
mull
pop
pop
cmp
mov
pushf
pop
jecxz
sbb
sbb
stos
jnp
out
fdivl
arpl
loopne
xchg
loope
scas
mov
cmp
rcl
shlb
pop
xor
addr16
lea
pop
call
jecxz
loope
push
adc
out
mulb
and
inc
js
popa
out
dec
inc
dec
and
jg
fninit
bound
out
mov
in
ljmp
add
jbe
cmpsb
sub
adc
mov
stc
das
lods
frstor
pop
ds
xor
mov
lahf
je
pop
lods
aaa
pop
lods
mov
movsl
sbb
jbe
jecxz
lods
clc
imul
ss
das
mov
fidivrs
scas
adc
pop
movsl
int
mov
pop
push
lret
orb
jns
cmp
inc
sub
ss
movsb
dec
lods
out
je
das
fwait
ja
inc
mov
cs
xchg
push
shl
outsl
dec
gs
push
xor
xchg
pop
aas
jecxz
xlat
mov
jl
push
shll
push
addl
mov
int
cmp
lret
pushf
and
fdivrs
jae
mov
in
xchg
fwait
or
imul
xchg
jae
rcr
ret
inc
push
mov
test
jb
pop
dec
imul
inc
cmp
repnz
je
push
enter
test
clc
neg
mov
push
and
sub
out
rcll
pop
dec
fs
out
sub
xlat
loop
inc
decb
push
sub
lock
xchg
ret
mov
and
mov
pop
cli
jns
movsl
lcall
cmpsb
std
imul
inc
and
inc
xor
in
inc
push
test
out
and
ds
pop
out
cld
jnp
xchg
push
push
add
jp
jae
xchg
mov
mov
sbb
aaa
push
fldl
lahf
nop
ja
enter
xor
fidivrs
mov
mov
pop
and
xchg
cld
test
bound
adc
push
cmc
mov
jns
xchg
add
lds
and
mov
int
mov
pushf
xchg
mov
sahf
push
pop
out
xor
add
lea
sbb
add
scas
xchg
dec
out
fmuls
inc
pop
ja
pop
xchg
imul
cmp
and
imul
outsl
data16
rolb
inc
xor
ret
xchg
mov
pop
out
decl
inc
mov
add
test
outsl
cmp
mov
mov
pop
rcrb
es
out
xor
cmp
dec
hlt
push
icebp
negb
test
insl
jp
jnp
loop
sbb
insl
xor
xchg
outsl
push
mov
mov
inc
inc
fisubl
inc
loope
jns
xor
popa
adc
xlat
mov
inc
cmp
pop
jle
pop
push
xor
mov
fdivrl
insl
mov
dec
or
pop
and
mov
stos
aaa
jnp
lret
jbe
test
inc
scas
loope
in
cmp
sbb
xor
dec
xor
addr16
cmp
cs
mov
push
pop
aaa
mov
mov
jbe
shufps
jb
mov
fcomp
in
jb
adc
dec
ficoms
cs
notb
xor
jnp
or
aad
push
jge
lock
adc
sahf
add
mov
xor
or
ljmp
stos
and
sbb
fmull
mov
fsubp
dec
movb
rolb
out
out
jae
mull
cmpsl
cmpsb
jnp
loopne
bound
das
fs
insb
sti
js
mov
cmp
xchg
mov
pop
test
cmp
mov
mov
dec
xor
jo
dec
push
insb
sbb
jecxz
pop
les
jae
pop
rcr
pop
push
test
incl
cmp
push
clc
and
push
je
scas
xor
loopne
je
push
test
into
dec
cli
jno
mov
call
data16
ljmp
cmp
xor
das
sbb
xor
mov
xor
and
mov
mov
aaa
mov
stos
xchg
dec
or
or
cli
test
inc
sub
xchg
es
dec
insl
push
mov
lret
test
test
lods
add
xchg
adc
cmp
xor
sti
xlat
or
pop
mov
movb
mov
out
xorl
sbb
mov
or
subb
pop
enter
and
mov
push
test
xchg
xchg
fcoms
add
sub
push
imulb
mov
js
sbb
add
push
sub
sub
ss
mov
lods
sub
jo
inc
or
xor
loopne
and
loopne
pop
or
flds
mov
stc
mov
dec
jl
or
insb
inc
dec
iret
push
repnz
dec
or
loope
cmp
imul
int3
and
mov
seto
add
into
and
mov
gs
jle
lea
scas
push
adc
mov
leave
out
shll
inc
push
movsb
mov
cmc
in
mov
loop
stos
imul
dec
pop
ss
test
sub
mov
cmc
adc
jo
add
iret
inc
test
ret
cli
cmp
dec
lock
xor
testl
jns
jno
lock
in
xchg
fisubrs
mov
outsb
mov
mov
adc
outsl
mov
and
ss
cmp
mov
xchg
imull
fadds
inc
and
pop
mov
outsb
loope
shl
add
adc
mov
sub
and
mov
in
lret
jnp
std
xchg
sub
inc
dec
and
add
sar
enter
fcoms
adc
xchg
iret
jp
jp
les
repnz
loope
fisubl
aam
aaa
mov
mov
movsl
mov
aas
sbb
pop
jbe
out
mov
mov
aad
inc
add
mov
lahf
mov
sub
dec
roll
jl
jg
scas
testb
xchg
mov
repz
dec
dec
mov
aas
pop
in
int
out
imul
mov
adc
test
scas
ficomps
pop
sbb
mov
fisttpl
xor
std
push
add
cmovg
ds
int3
xchg
enter
lea
fnstcw
aad
adc
cli
das
push
xor
out
stos
pop
cmpsl
leave
dec
xchg
repz
or
fisubl
addr16
subb
into
clc
dec
sub
jmp
mov
sub
or
test
push
imul
aaa
jl
xor
movsl
les
push
clc
xor
cwtl
inc
popa
lahf
pusha
jae
popa
mov
mov
pop
jle,pn
dec
movsb
xor
cmpsl
mov
mov
orl
movsb
or
out
adc
jg
cmp
mov
in
outsb
jne
rolb
push
mov
inc
fcoms
sub
in
test
or
sub
dec
push
jns
mov
xor
lods
jns
aad
je
shrl
sub
and
sub
lods
dec
jbe
rcrl
lock
jo
pop
shlb
sbb
mull
pop
jmp
xchg
call
push
ja
lods
and
pop
outsb
rcrl
lea
sub
cmp
cli
sbb
int3
mov
or
jbe
sub
sub
enter
cmpsl
xchg
pop
ja
mov
call
inc
in
repz
sbb
cwtl
push
mov
or
add
pop
add
sub
lods
arpl
mov
xor
dec
push
arpl
test
out
mov
fs
imul
outsb
call
loope
adc
cmp
in
pop
out
cs
test
dec
ss
jbe
loop
pop
adc
push
mov
or
inc
mov
inc
or
mov
lock
repnz
push
fwait
and
data16
pop
mov
int
int3
insl
xor
jb
jg
jb
mov
sub
movsl
gs
in
push
leave
dec
xor
add
add
not
test
sub
loop
arpl
mov
cmp
adc
imul
je
dec
mov
fs
adc
dec
mov
adc
push
enter
jmp
lock
push
xchg
push
daa
addl
adcl
add
pop
cmpsb
pop
inc
pop
daa
das
stc
dec
loopne
stos
repz
data16
inc
sub
adcl
mov
lcall
sbb
scas
mov
xchg
dec
dec
test
ret
mov
mov
stos
push
inc
dec
gs
fstpl
xor
dec
mov
and
jnp
jno
cli
mov
fdivrl
add
inc
pop
push
enter
mov
das
dec
jnp
sub
xor
insl
mov
inc
movl
and
out
xchg
xchg
cmp
sub
and
mov
push
adc
mov
repz
movsb
add
ret
mov
cmp
cmp
cwtl
cltd
out
xchg
adc
xor
cmpsb
pop
mov
push
cli
popf
repz
push
sti
leave
jle
negl
xchg
mov
lock
outsl
mov
push
sti
test
das
rorb
cmp
mov
cmpsw
imul
mov
or
repnz
lea
cld
clc
add
mov
clc
aaa
cmp
je
pushf
pop
or
add
push
test
dec
cltd
cltd
out
imul
add
test
mov
stos
nop
jge
repnz
mov
clc
lock
xchg
ret
or
jb
pop
in
pop
mov
leave
cmpsb
jo
nop
adc
adc
data16
les
mov
mov
lret
rclb
sub
pop
std
and
add
xchg
fcmovnb
lahf
mov
outsl
or
icebp
sbb
cwtl
mov
hlt
scas
adc
pusha
enter
sbb
jbe
nop
jmp
inc
cmp
lret
pop
mov
inc
lahf
sbb
or
fwait
imul
bound
into
jbe
dec
icebp
rcrl
mov
or
aam
insl
lods
pop
inc
xor
xchg
stc
lret
fidivs
out
xor
add
fmul
in
pop
dec
into
sub
jmp
xchg
xorl
enter
and
pushl
xchg
fdivrp
fs
sub
nop
ljmp
mov
mov
fcoml
inc
mov
loopne
jg
stos
push
nop
ss
inc
pusha
sbb
lcall
adcl
mov
and
adc
adc
add
jge
or
cli
inc
push
and
mov
insl
scas
mov
lods
leave
inc
inc
push
rcr
ret
jl
nop
mov
sub
aas
mov
inc
dec
pop
in
jno
xor
or
fsubs
add
bound
test
adc
or
xor
xor
mov
cltd
inc
icebp
mov
sti
dec
out
add
mov
stos
and
sbb
xor
pop
mov
lods
lcall
xchg
test
pop
xor
sub
jl
and
stc
insb
jmp
lcall
pushf
rcrl
movsl
in
cmp
pop
push
mov
aam
or
shrl
xchg
mov
mov
jae
cmp
mov
test
push
jg
test
ror
push
inc
inc
mov
fmull
push
cmc
outsl
js
cli
pop
popf
lds
in
adc
subb
push
je
mov
movsl
push
adc
push
add
imul
pop
outsl
mov
jnp
sbb
lea
push
mov
imul
push
push
sub
popf
les
lea
icebp
push
pop
and
jns
add
fcmovb
mov
sub
cmp
out
xchg
jo
sahf
pop
icebp
hlt
xor
adc
or
jno
leave
xchg
cmc
out
mov
std
or
cli
cli
flds
add
test
xchg
popa
mov
lret
or
scas
cwtl
mov
jae
adc
aaa
lock
pop
mov
sbb
xchg
or
sti
xchg
sbbb
inc
movsl
adc
scas
clc
outsb
fldl
mov
idivb
sbb
addr16
les
cmpsl
mov
aam
movsl
lock
inc
mov
cs
dec
xor
hlt
ja
push
jg
movsl
push
adc
ljmp
inc
adc
cli
pusha
sub
mov
lods
push
inc
shlb
std
cmc
mov
and
pop
cmp
ja
pop
mov
iret
iret
pop
lret
call
add
xchg
pop
cltd
fldl
js
xchg
or
lcall
mov
adc
pop
sub
or
in
fimuls
repnz
xlat
pop
aam
push
loop
stc
mov
cmp
mov
repz
out
jo
cmp
push
mov
fsincos
rol
pop
std
push
mov
jb
lret
inc
test
imul
inc
iret
fsubs
gs
pop
test
sbb
sub
xor
jmp
out
fdivr
fistpl
jg
jae
aaa
cmp
adcb
push
mov
insl
sub
dec
pushf
dec
xor
adc
lret
fs
js
lock
imul
les
and
push
sub
inc
sub
jne
ficoml
sahf
add
fwait
mov
sti
pop
in
xor
mov
outsl
pop
cltd
lcall
push
pop
jl
lds
jg
scas
fdivl
fildl
mov
aas
mov
jbe
cli
cmc
jl
ja
aaa
or
xor
sub
or
call
or
rcll
rcll
fadds
test
lds
fildll
in
in
int
fwait
jge
dec
mov
jae
sbb
jae
imul
add
call
and
mov
mov
dec
pop
lret
cmp
ret
jg
or
sti
mov
stos
jl
cmp
jecxz
and
jecxz
jg
push
out
ret
test
sub
stc
aas
daa
mov
xor
fdivrs
mov
adc
push
cmp
dec
clc
aam
jbe
lock
in
scas
cmc
cmp
je
in
fwait
xchg
mov
cmp
mov
mov
hlt
sahf
add
cmp
push
insb
jbe
rolb
lock
xorl
mov
jb
iret
jae
imul
dec
dec
and
lock
rolb
jge
xchg
add
push
push
test
pusha
sub
xor
je
jl
aaa
dec
inc
es
push
xchg
aad
sub
stos
xor
aaa
arpl
jmp
mov
pop
addl
lret
ljmp
mov
push
xor
iret
movsl
rcrl
in
inc
pusha
or
rcrl
and
iret
pop
rolb
cwtl
cmp
and
jb
ret
push
fs
xchg
xchg
xchg
pushf
pop
out
sbb
dec
leave
rorl
cmc
cmpsl
ljmp
roll
fwait
sub
test
cmp
jge
stc
test
jns
cmp
fisubs
cs
adcl
adc
and
push
mov
loopne
test
or
add
into
cmp
xor
xor
lahf
sub
jo
ljmp
ja
and
add
mov
insl
lret
fidivl
aas
lcall
out
dec
sar
into
push
fists
rol
add
hlt
ret
loopne
xchg
adc
mov
xor
dec
leave
ss
sub
out
imul
mov
sbb
imul
mov
mull
ja
daa
rcrb
mov
cmp
push
fs
xor
adc
xor
ss
dec
int3
add
js
add
ret
jo
icebp
xor
cmpb
mov
mov
scas
pop
cmp
xlat
mov
mov
sti
loope,pt
adc
xor
js
jle
mov
daa
mov
dec
pushf
cmpsb
je
and
fistpll
push
adc
adc
adcl
adc
xchg
and
inc
add
clc
loope
xchg
jl
mov
xor
dec
iret
out
aad
xchg
add
fwait
sbb
pop
adc
ljmp
mov
cmpsb
subl
out
mov
pushf
imul
or
mov
mov
xchg
jbe
ds
jmp
cmc
sarb
inc
or
cmc
xor
and
push
in
push
insl
repnz
sub
fidivrs
cmp
xchg
cmc
pop
mov
push
or
std
in
mov
lcall
imul
into
aas
mov
mov
add
pop
imul
adc
scas
aam
andl
xor
jge
inc
test
mov
loop
cmp
add
pop
popa
sub
sbb
lret
jp
add
movsl
subb
push
adc
ret
pusha
jns
popa
pop
stos
cmp
dec
jle
sbb
arpl
dec
sahf
or
push
mov
xchg
scas
in
pop
lds
movb
pusha
lret
mov
add
jnp
popf
nop
pop
pop
mov
loope
int
jl
in
shl
cld
stos
das
xor
nop
inc
dec
mov
cmc
rcll
js
int3
xchg
das
adc
pop
mov
xchg
xchg
jecxz
imul
ja
pop
test
insl
lret
fbld
sub
aad
fnsave
mov
sub
and
ret
ljmp
mov
xor
and
out
es
mov
bound
lock
addl
fsubp
test
enter
lods
jns
ja
mov
lret
daa
dec
mov
xchg
addr16
xchg
addr16
lcall
push
xor
mov
sbb
adc
xor
sbb
and
jge
adc
cmpsl
dec
test
aaa
lods
ret
sti
push
gs
add
jmp
pop
call
jmp
es
xchg
pop
loope
pop
xor
mov
lcall
cmp
sti
loope
inc
sbb
xor
sub
or
mov
ret
jb
and
and
ss
add
fmulp
sub
mov
movl
out
and
mov
sarl
mov
and
fidivrs
in
imul
pop
test
dec
jnp
mov
pop
xchg
cli
movsl
jl
neg
inc
lret
mov
jno
stos
in
sbb
nop
pop
and
pop
xchg
popa
jmp
xor
cmpsl
inc
clc
adc
out
jmp
xchg
aad
cld
cmp
and
xchg
adc
lea
test
jle
iret
scas
sub
cwtl
cmp
movsl
push
ds
xor
ja
and
in
dec
xchg
mov
rolb
mov
in
add
out
subl
loope
cwtl
adc
in
push
outsb
xor
pop
fdivp
negl
ffree
mov
mov
jecxz
out
std
lret
jo
pop
xor
mov
xor
adc
stos
lods
cmpl
pusha
subl
push
jmp
mov
fs
inc
mov
ret
lods
std
or
cmp
loopne
lds
cmp
pop
xchg
xor
lret
push
addl
cli
fcomp
inc
push
push
lret
sahf
movsb
inc
jo
or
jge
sub
popa
and
pop
test
sahf
js
cwtl
pushf
cmpsb
mov
in
add
movsl
mov
pop
mov
movsl
cmpsb
pop
fwait
andl
push
add
rorb
aas
outsb
mov
ljmp
lea
mov
into
sti
push
cld
jp
inc
cmp
scas
and
xchg
fbstp
adcl
enter
mov
dec
jmp
push
shlb
push
imul
cs
pop
pop
loopne
sub
xchg
mov
lods
push
fisubl
fisttps
ljmp
mov
xchg
inc
fs
aad
jae
repz
xchg
dec
pop
dec
mov
sub
xchg
test
dec
mov
push
mov
jb
add
mov
test
and
lea
mov
loop
shlb
mov
out
sub
fisubrs
rorl
ja
fwait
dec
jecxz
ret
xchg
test
lahf
testl
in
xchg
lret
jns
rcr
xor
pop
jmp
inc
aas
mov
pop
cmp
mov
test
add
in
push
mov
xchg
push
loopne
xor
jp
jnp
mov
mov
fldt
inc
xchg
or
jnp
int3
cmp
jp
outsl
or
inc
push
dec
jns
das
inc
or
fsubr
popf
test
jbe
je
aad
out
mov
call
pop
ds
push
outsl
retw
fstp
mov
fstpt
int3
je
jg
fidivl
pop
mov
mov
or
lock
push
mov
fmull
dec
jecxz
pop
jp
dec
imul
clc
adc
mov
test
dec
mov
mov
pop
xchg
stos
cmp
cli
test
lds
mov
ljmp
lods
sbbl
gs
push
mov
cmpb
mov
repnz
push
mov
scas
jno
jae
ljmp
in
mov
flds
addr16
jl
pop
ret
test
cwtl
es
xchg
jmp
int
in
adc
xchg
and
cmc
mov
inc
and
clc
xchg
out
fidivl
cmp
mov
icebp
mov
mov
pop
adc
stc
or
insl
xor
je
int
insb
cmp
mov
pop
inc
push
push
lret
pop
mov
sub
out
jle
lret
dec
loope
dec
pop
dec
out
pop
sbb
mov
arpl
sahf
js
jmp
out
call
aam
and
movsl
add
xor
or
dec
clc
push
mov
jb
push
cmp
pop
dec
daa
arpl
mov
jg
cwtl
xchg
cwtl
adc
inc
jmp
or
mov
ja
inc
inc
nop
add
mov
mov
test
xor
test
xchg
in
inc
jp
jo
mov
aas
movsb
add
loope
cmp
jae
cld
adc
ljmp
xor
in
arpl
insb
mov
add
push
jbe
cli
pop
lods
xor
push
inc
cmpb
insl
stos
and
cltd
sbb
push
xchg
sarl
or
xchg
call
stos
inc
push
in
orl
mov
pop
adc
sbb
xor
pop
xchg
pop
inc
daa
cli
add
lcall
jne
add
arpl
sarb
fsubrl
pop
jb
push
inc
add
cmp
sub
aam
add
