add
push
dec
adc
ret
leave
mov
mov
rcrb
pop
push
lock
mov
xor
adcb
pushf
sahf
jmp
dec
aam
or
bts
pop
adcb
dec
mov
xchg
dec
leave
fists
inc
mov
js
add
push
ss
inc
xor
inc
adcl
inc
or
ffreep
and
outsl
push
sbb
mov
sbb
mov
adc
xor
enter
pop
out
push
aad
repnz
cld
pop
outsw
ficompl
jnp
cli
sbb
inc
pop
pop
push
pop
std
jmp
ds
xor
dec
mov
pop
pop
adc
mov
xor
inc
mov
fimuls
inc
std
mov
movsl
leave
mov
pop
sarl
xchg
test
xchg
mov
sarb
test
xor
or
dec
add
out
add
fadds
push
mov
es
pop
fstl
shl
aam
xor
or
lea
jb
stc
call
lea
lea
mov
call
movl
push
mov
push
lea
jmp
movw
sub
push
call
pushf
call
lret
push
push
scas
add
insl
xor
mov
mov
jnp
scas
stc
xchg
mov
lcall
gs
mov
shll
mov
mov
inc
sbb
lcall
xchg
insl
and
mov
je
call
icebp
cmc
cmp
adc
fwait
dec
pop
jno
jp
xchg
sub
test
arpl
cs
mov
jbe
sbb
and
lods
stos
popf
cmp
loop
lock
or
push
adcb
add
xchg
dec
loope
out
pop
xor
sbb
cmp
sbb
loope
lahf
sub
mov
sub
imul
ds
ja
outsl
pop
sub
inc
jecxz
testl
xor
int
insl
cmc
pop
add
xchg
jmp
sbb
arpl
push
mov
pop
sbb
mov
xchg
pusha
dec
cld
mov
pop
les
cs
adc
and
pop
add
sub
jl
into
inc
xor
dec
ret
adc
dec
inc
fcmovu
mov
inc
xchg
add
cmp
jo
sahf
push
iret
pop
sbb
repnz
cmp
aas
inc
jecxz
rcr
mov
xlat
xor
inc
adc
shlb
jmp
lret
add
das
or
mov
add
fisttps
out
jecxz
enter
call
xor
adc
sub
mov
and
insb
push
pop
sti
mov
pop
lret
xchg
bound
cwtl
dec
adc
test
pushf
adc
inc
push
adc
pop
cmc
loopne
cmp
jmp
dec
btr
mov
add
inc
rol
test
push
add
sub
xor
adc
mov
bt
cmc
test
push
movb
jmp
lea
push
pushf
mov
lea
je
push
lea
call
jmp
add
add
adc
adc
adc
and
add
add
add
add
add
not
call
mov
pushf
movb
pusha
pushf
pushl
ret
mov
xchg
cs
fwait
es
popf
insl
fsts
push
call
jle
push
lret
ja
je
loop
mov
divb
sub
xor
push
ret
push
sbb
aaa
fadd
hlt
sti
jecxz
test
mov
sbb
mov
dec
aad
dec
sahf
inc
mov
iret
inc
pop
adc
outsl
lods
sti
mov
icebp
repnz
lret
aaa
mov
push
adc
ss
push
xor
add
sub
adc
adc
repnz
mov
mov
and
jl
sbb
push
call
jmp
jmp
xchg
pushf
call
mov
cmp
setb
lea
pop
mov
jmp
push
movl
push
movl
push
lea
jmp
jmp
add
cmp
mov
bt
mov
stc
jmp
jmp
in
insl
movsl
aaa
jecxz
loope
rcl
mov
sysret
movsl
outsl
pop
out
subb
int
xor
lahf
jmp
cmovl
adc
or
mov
or
jnp
inc
xor
pop
jg
or
movq
test
test
mov
or
or
sbb
push
sbb
scas
and
add
xor
adc
aad
fsts
push
sub
fs
mov
push
test
mov
shll
dec
dec
pop
int3
inc
gs
and
iret
jge
jmp
shrl
push
or
pop
push
lods
scas
outsb
pop
mov
add
fcomi
push
out
or
cmc
fstl
push
scas
lods
mov
sbb
ror
gs
or
addb
sbb
sub
dec
gs
shrl
mov
lods
mov
push
or
ret
insb
out
xchg
ret
xor
sub
push
les
jle
add
into
test
iret
fldcw
xor
or
bound
dec
mov
cmp
fcmovnb
int3
shll
xor
ss
sbb
insb
jo
or
mov
or
push
push
cs
inc
cmp
xor
push
orb
and
push
lods
test
xor
sub
or
or
dec
adc
popa
mov
fstpt
fs
lock
adc
rorl
push
dec
jbe
xor
jmp
repz
xchg
xor
push
popa
stc
xchg
enter
in
fisttpll
mov
jp
dec
push
jmp
popa
or
pop
iret
dec
jle
dec
push
insb
das
or
push
lea
jle
push
mov
sti
mov
imul
pop
mov
cmp
or
nop
stc
testl
int3
jbe
dec
mov
aad
and
cmp
push
jg
mov
dec
addr16
adc
push
cmp
xchg
xor
ljmp
popa
ja
jl
jo
xor
dec
jle
popa
pop
lea
inc
pop
inc
jbe
or
mov
stc
cmc
fldcw
dec
in
into
addb
or
xor
cmp
push
sbb
push
jmp
xchg
push
dec
repz
hlt
lea
jle
push
scas
sbb
push
scas
je
dec
fldenv
push
dec
dec
dec
popa
aaa
or
rol
mul
jecxz
pop
xor
push
sbb
dec
jg
mov
popa
dec
call
and
mov
add
mov
orl
xchg
or
and
popa
ret
gs
adc
insb
or
cmp
int
sarb
jne
test
pop
sbb
lret
in
stc
movlps
push
scas
scas
pop
jge
out
or
xchg
stc
movl
scas
pop
dec
test
in
orl
dec
jmp
push
imul
repz
sbb
popa
pop
push
popa
dec
leave
mov
repz
frstor
mov
int
or
pusha
popa
pop
sub
push
popa
das
iret
mov
cltd
popa
popf
popl
popa
adc
pop
xchg
cmp
jecxz
pop
popf
bound
push
push
push
popa
popa
or
push
add
fistl
pop
add
popa
dec
sbb
hlt
sbb
nop
imul
push
dec
push
pop
xchg
push
dec
mov
out
sbb
pop
push
mov
stc
push
push
mov
lea
lea
or
out
sub
sbb
push
lea
popa
repnz
jmp
mov
sub
insb
inc
roll
in
mov
in
out
lock
lock
shl
iret
cmp
popa
leave
jecxz
mov
xor
std
and
sub
dec
pop
lahf
imul
cmovge
dec
rcr
mov
pop
xlat
xchg
popa
jle
mov
adc
jle
xlat
jne
jp
sub
dec
and
xlat
add
cmp
inc
inc
lods
xchg
mov
out
outsl
stc
push
cmp
pop
cmp
imul
iret
in
dec
std
sub
scas
push
sub
movsb
dec
adc
sti
pop
push
push
stc
push
imul
cmp
or
sbb
aam
xlat
out
cltd
add
add
js
push
popa
or
bound
cmp
mov
xlat
xor
in
jp
jecxz
mov
xlat
jb
jo
jmp
cmp
or
sbb
add
mov
mov
xlat
insl
repz
int3
adc
push
sti
rep
jl
xor
push
sbb
dec
push
icebp
in
mov
inc
insl
dec
xor
outsl
int
push
dec
popa
dec
jle
mov
cmp
mov
and
xlat
push
pop
fisubs
inc
jns
ret
test
pop
ret
push
dec
pop
imul
pop
fildll
fs
xor
push
insl
jmp
adcb
push
jl
fwait
jmp
push
or
mov
out
fbstp
mov
push
fwait
push
xlat
push
adc
jecxz
inc
xchg
xchg
cwtl
and
xchg
popa
stc
fs
push
jne
movsl
jbe
add
shll
outsb
std
mov
out
cmp
push
in
loopne
jo
stc
int
scas
mov
inc
mov
popa
mov
jecxz
in
mov
jmp
shlb
out
insl
mov
push
or
xchg
inc
mov
popa
lcall
or
cli
jle
push
ss
inc
insl
push
je
inc
insl
push
cmp
int3
decl
out
adc
or
outsl
aad
push
adc
dec
xlat
and
or
cs
subb
xchg
inc
push
cwtl
xchg
and
inc
jo
outsl
xchg
cmpsl
mov
popa
push
scas
stos
cltd
jge
iret
dec
push
push
insb
out
push
sbb
jns
lea
push
ss
push
insb
and
push
scas
out
inc
push
shlb
pop
popa
dec
mov
push
fs
mov
cmp
mov
cs
push
or
subb
cltd
fisttps
int
js
push
ds
int
push
dec
dec
push
insl
mov
out
jb
inc
push
mov
int
aad
test
xchg
lret
js
pop
push
lahf
inc
mov
out
push
inc
push
sub
outsl
insb
arpl
or
push
mov
popa
or
ffreep
jp
or
arpl
int3
and
out
push
imul
push
ljmp
lods
push
jp
pop
push
push
cmc
sti
jno
leave
pop
insb
lcall
inc
hlt
lahf
pop
mov
sbbb
je
jmp
fdivs
inc
sub
jl
test
fs
orb
scas
les
mov
jo
outsl
jl
jbe
cmp
adc
or
fstp
push
pop
or
popa
push
adc
or
pop
xchg
mov
popl
cmp
fmuls
ret
and
push
cltd
or
popa
loopne
mov
pop
add
adc
hlt
incb
cltd
pop
push
dec
test
jo
je
jo
cld
pop
lea
xchg
int
jp
push
fs
push
cltd
scas
addb
adc
sbb
mov
pop
inc
idivl
out
push
popa
or
mov
popa
in
push
imul
mov
addr16
popa
repnz
pop
inc
test
adcl
cmp
adc
and
push
sub
xchg
fcomps
in
rorl
add
or
fcomps
inc
jl
push
outsl
jle
scas
or
jl
sti
push
push
push
fsubr
fildll
xchg
jle
mov
add
mov
push
and
fsubr
cmp
add
dec
xlat
fstp
cmp
or
inc
or
add
inc
fsubrs
add
jo
push
push
adc
and
into
mov
fisttps
adc
fwait
jo
push
iret
dec
aad
insb
mov
lods
lock
jne
bound
insl
js
sub
push
push
inc
xlat
or
push
mov
fmuls
lret
lcall
push
lea
add
loop
sub
aad
fstp
inc
sbb
inc
sub
push
fistpl
xlat
sub
leave
aad
push
mov
mov
fcomp
test
jecxz
jmp
bound
push
pushf
or
dec
mov
inc
xlat
fldl
imul
mov
push
fwait
rcr
cmp
jge
addr16
jge
mov
call
popf
add
lahf
cld
js
mov
xor
xlat
jne
jl
popa
je
lahf
iret
movsl
jmp
into
imul
inc
out
xlat
inc
rolb
popa
inc
push
pop
push
in
mov
add
adcl
mov
sbb
fs
aad
jl
jbe
fisttpll
and
fadds
stos
add
and
sub
or
and
pop
rorb
inc
lods
sbb
dec
push
adc
mov
or
xor
cmp
jle
sub
cmpsl
push
add
sbb
or
scas
adc
and
jg
sub
inc
fs
jo
push
push
xchg
cmp
leave
outsb
test
repnz
and
cmp
outsb
or
adc
leave
jg
push
xor
test
jno
repnz
scas
in
loop
adc
cld
scas
xchg
mov
or
jb
in
orb
mov
cmp
rdtsc
mov
aad
or
aad
push
pmullw
pop
adc
mov
mov
xchg
dec
test
setge
in
jne,pn
sub
ret
jp
xlat
lret
roll
fisubrs
add
xchg
jmp
xlat
ror
push
pop
int3
sbb
dec
lea
inc
xchg
in
aas
mov
xchg
pop
xchg
mov
dec
xorb
push
addr16
dec
mov
pop
or
inc
icebp
in
clc
add
mov
lds
mov
popf
movsl
sysret
pop
push
popa
out
xchg
lret
insl
clc
cmp
dec
sbb
push
mov
inc
sbb
iret
lods
jne
xchg
sbb
jl
stos
add
cmpsl
movsl
or
mov
jnp
adc
subl
pusha
mov
or
js
stos
adc
adc
xchg
cmpsl
insl
dec
outsl
call
xor
sub
pop
inc
adc
add
add
cmc
push
sub
mov
imul
dec
insl
stc
call
sub
push
inc
xchg
pop
inc
mov
adc
inc
jp
js
lcall
movsl
dec
or
popf
xchg
lods
sub
pop
rcrl
jmp
outsl
stos
or
xchg
inc
mov
and
or
and
adc
adc
add
jecxz
shlb
lds
stos
push
fcmove
decl
pop
mov
ljmp
mov
mov
push
fsts
jecxz
xchg
enter
notb
lds
pop
dec
push
nop
pop
and
pop
and
adc
xchg
aaa
stos
lcall
dec
popa
jmp
gs
int
adc
adc
les
inc
lds
outsl
call
out
sub
dec
lds
jmp
push
xchg
fstps
sahf
insl
push
js
sbb
or
jbe
pushf
xor
addr16
scas
stos
inc
sbb
jmp
mulb
and
test
xor
inc
test
insl
out
jg
xchg
adc
imul
test
stos
mov
jg
nop
and
iret
mov
jo
int
push
or
mov
hlt
outsb
pop
inc
das
inc
cmpsl
jne
push
loopne
jmp
out
in
mov
sbb
dec
sbb
push
or
inc
insb
and
lea
xor
mov
or
mov
and
cwtl
xchg
xor
mov
xchg
cmp
sbb
std
jge
cmp
xlat
add
imul
es
push
inc
pop
mov
sbb
pop
mov
outsl
push
cwtl
shr
and
xor
lret
js
out
mov
and
push
or
loope
cmpsl
in
jg
or
add
lds
cmc
or
and
in
mov
push
pop
adc
fimull
inc
adc
or
arpl
xchg
jle
pop
icebp
icebp
decl
cmc
dec
insl
pop
push
add
lock
in
out
in
push
pop
xchg
push
inc
mov
push
add
mov
sbbb
aas
jmp
pop
xor
xorb
and
jl
testl
sub
inc
or
loope
cmc
ds
mov
sahf
lcall
add
xchg
mov
jno
enter
mov
das
dec
lcall
sbb
imul
aam
cmp
int3
mov
xchg
clc
sub
dec
rcl
cmp
lds
mov
orl
or
test
mov
mov
pop
daa
adc
sbb
mov
dec
int
cmpsb
adcl
jmp
inc
mov
out
popa
adc
xchg
or
add
or
and
call
stos
or
adc
sbb
jmp
xchg
fstps
xchg
pusha
mov
or
dec
add
pop
movl
push
adc
fsubl
insl
cmp
js
cwtl
iret
inc
mov
jmp
jge
add
mov
jmp
jecxz
bound
jmp
push
pop
lds
adc
insl
dec
pop
movsb
insl
jmp
sbb
iret
jecxz
outsl
cmpsl
out
jmp
xchg
iret
add
jg
cwtl
mov
pop
lret
jmp
mov
pop
jo
ja
bound
repz
fstl
add
or
xchg
mov
jmp
cli
test
pop
or
dec
push
repnz
mov
jae
sbbl
lods
and
adc
mov
push
seto
bswap
xchg
mov
aam
addr16
test
shrl
gs
mov
lret
xchg
add
in
mov
pop
test
mov
inc
movsb
pop
arpl
test
sbb
sbb
out
das
sbb
dec
push
jmp
in
xchg
push
jge
adc
inc
insb
push
jp
sbb
fsubs
xchg
lds
subb
gs
or
hlt
dec
push
and
scas
inc
or
or
lahf
cmp
dec
sbb
popf
or
sbb
and
push
jnp
popl
insb
inc
xor
insb
jmp
aad
lcall
aad
leave
cmp
cmp
mov
jmp
sub
and
movsb
cmp
dec
sbb
int3
int3
sbb
repz
xlat
or
in
in
call
push
sbb
scas
imul
adc
push
jl
jo
xchg
lods
jns
out
insb
sbb
jge
pop
adc
in
testl
mov
bound
sbb
inc
push
xchg
mov
mov
fstp
pop
imull
lcall
insl
dec
ficompl
lahf
mov
lahf
pop
mov
mov
std
jmp
rolb
nop
int
pushf
popf
adc
sbb
bound
shll
femms
loopne
mov
lods
sbb
jae
call
adc
std
pop
lds
enter
aad
mov
xor
dec
test
arpl
test
mov
inc
sub
sub
aam
adc
gs
in
mov
out
mov
neg
mov
dec
sub
mov
test
test
pop
dec
pop
fiadds
movsl
arpl
mov
pop
clc
enter
push
sbb
sub
and
adc
gs
dec
repz
sti
nopl
mov
testl
pop
sbb
jmp
push
fstl
enter
sbb
mov
insl
push
rorl
jne
addr16
iret
cmp
push
outsl
inc
jns
cmpsb
mov
sbb
outsl
ds
jg
cmp
cli
dec
pop
mov
dec
negl
xchg
mov
or
lahf
sub
and
pop
dec
int
push
mov
call
xor
imul
lods
inc
dec
inc
sahf
fstpl
or
mov
inc
mov
xor
xchg
rorl
clc
xor
popa
sbb
lock
dec
loope
scas
pop
dec
popa
pop
jl
or
sbb
jmp
cmp
jl
dec
sub
imul
cmc
push
fcoml
imul
rorl
adc
add
popa
dec
inc
xchg
mov
ljmp
divb
jge
pop
mov
inc
mov
cltd
in
and
inc
outsl
push
lahf
push
dec
add
jne
mov
dec
or
xor
mov
mov
iret
cwtl
sbb
jecxz
int3
fdiv
imul
out
into
xchg
push
sub
fwait
pop
enter
sub
push
lods
aas
jg
fidivs
sahf
call
jg
push
or
daa
mov
jne
inc
andb
inc
inc
mov
jmp
adc
jmp
jmp
fdivs
add
fs
aas
movhps
sbb
cltd
inc
out
enter
mov
add
cmp
mov
jne
mov
popa
push
push
pusha
sub
mov
sub
add
sbb
fmull
loope
push
enter
cmp
out
test
out
int3
sbb
insl
add
icebp
nop
mov
je
jmp
adc
in
sub
test
jo
shl
pop
sbb
test
inc
pusha
in
xchg
push
pop
xor
and
outsb
scas
enter
mov
fmull
lcall
lods
jp
sbb
xor
add
or
xchg
rcr
sbb
mov
and
pushf
dec
in
sub
lock
dec
shr
sbb
and
pop
gs
out
outsl
jge
mov
cwtl
mov
or
pop
inc
push
xor
pop
mov
rol
jbe
shlb
lds
sbb
push
pop
xor
pop
sbb
gs
cmp
sub
das
in
movsl
or
adc
sub
pminub
push
adc
int
mov
add
jl
cmpsl
test
sti
dec
mov
sbb
mov
cmp
cltd
jnp
test
or
test
jecxz
cwtl
jne
das
pop
mov
lods
dec
cmpsl
xchg
or
pop
sbb
or
inc
xor
das
jecxz
and
pop
mov
sbb
xlat
cmc
leave
and
sbb
jnp
push
pop
sbb
icebp
sbb
jecxz
xor
push
test
xchg
loop
add
inc
xchg
sbb
out
mov
lea
dec
adc
mov
mov
sahf
cmp
aam
dec
insl
inc
data16
scas
pop
xor
xchg
cmp
stos
lcall
bound
andl
imul
scas
addb
decl
stc
push
sub
int
pop
sbb
dec
or
cmp
sarb
xor
ja
mov
jge
adc
test
mov
add
fidivrs
out
sbb
in
jge
jno
sahf
enter
xchg
xchg
add
inc
push
ficomps
and
outsb
sub
fnstenv
jne
fmuls
ror
jb
mov
pop
shlb
adc
pop
bound
pusha
pop
enter
sub
jl
ljmp
jmp
dec
cwtd
in
roll
dec
cmp
mov
bndldx
cmp
xchg
dec
jle
adc
cmovbe
lret
mov
ljmp
or
imull
imul
rorl
add
imul
add
jg
ljmp
in
lods
jnp
outsl
adc
add
data16
sbb
mov
sub
or
imul
sahf
filds
js
sbb
add
imul
hlt
dec
test
dec
test
enter
nop
push
mov
std
mov
xor
sbb
decl
adc
and
or
jne
push
daa
xor
lock
push
adc
mov
lret
iret
add
sbb
daa
fiadds
mov
and
adc
dec
insl
adc
clc
jmp
scas
test
mov
dec
cmp
pop
imul
adc
xchg
ror
les
dec
daa
jne
adc
cli
adc
sbb
outsl
push
rol
mov
ss
dec
pushf
sbbl
jne
jecxz
and
iret
int
ja
imul
out
lods
fwait
jne
enter
imul
hlt
test
stos
dec
add
and
clc
mov
mov
and
inc
rolb
ss
or
fbld
stc
imul
aaa
xchg
inc
mov
lcall
fmul
push
cmpb
inc
xor
imul
fnstsw
push
xor
pop
sbb
xchg
pop
rcrb
out
sbb
sbb
mov
lods
insb
fucomp
adc
jge
sbb
stos
out
add
fisubrs
cmpl
test
xor
mov
sbb
insb
inc
mov
pop
cmc
insb
sub
shr
xor
dec
xchg
cltd
pop
insl
and
popa
imul
adc
dec
leave
lds
inc
or
mov
aas
insl
pop
pop
add
push
sti
dec
pop
pop
jp
mov
or
push
frstor
imul
lea
or
adc
dec
fcoms
stos
cmpsl
push
dec
mov
xor
push
dec
push
bswap
stos
shll
and
jnp
xor
andl
push
sti
in
mov
arpl
flds
sbb
fimull
jmp
ja
iret
lcall
mov
mov
or
add
popa
or
enter
xorl
sar
cmp
cmpsl
bound
fcompl
or
jmp
jbe
lds
sarb
xchg
adc
mov
cmpsl
mov
cli
sbb
cmp
jmp
mov
arpl
cmp
mov
in
add
xchg
or
or
push
adc
cmp
cmp
or
lock
imul
stos
sbb
add
pop
out
sub
ljmp
out
fnstcw
or
mov
das
cmp
push
aas
or
or
or
dec
pusha
sub
jbe
add
jne
mov
test
sub
or
in
lock
push
imul
jl
inc
lods
push
pop
xchg
mov
inc
sbb
iret
jmp
add
lock
and
or
neg
jo
filds
xor
cmp
fidivs
sbb
cmp
cltd
pop
mov
int
insb
jg
movl
fidivrl
push
int
fwait
mov
aas
loopne
xchg
lcall
sarl
mov
add
pop
jge
add
insl
outsl
cmpsl
xor
and
movsl
add
pop
or
leave
pop
or
push
aas
mov
cmpb
push
ja
inc
push
dec
pop
add
mov
adc
add
lcall
ja
imul
insl
jge
xchg
cli
mov
jnp
ret
cld
or
add
lds
pop
push
filds
dec
push
push
insl
push
mov
aad
cmp
and
mov
lret
insb
adc
mov
mov
mov
lahf
cmp
pop
ss
call
fsubrl
outsb
add
push
mov
shlb
pop
dec
addr16
arpl
call
dec
mov
mov
out
add
loopne
jb
mov
mov
add
add
adc
adc
outsb
mov
das
sbb
rcrb
xchg
dec
push
pop
subl
push
lahf
xchg
push
insb
jmp
dec
add
mov
mov
addr16
inc
mov
inc
xor
jg
xor
loopne
lods
jl
inc
testl
xchg
cld
test
push
cmp
sub
test
rclb
dec
pop
in
lods
movsl
sbb
lea
mov
dec
mov
inc
enter
in
push
add
pop
inc
add
and
int3
push
or
sbb
or
std
jmp
sub
shrb
cmc
push
test
js
dec
jne
push
ljmp
test
lods
add
add
xchg
jns
or
enter
jmp
das
ss
jp
inc
loope
add
jge
mov
jns
icebp
mov
xor
xchg
dec
arpl
add
mov
daa
jmp
jno
xor
mov
mov
add
push
jae
cli
add
mov
rolb
stos
sbb
enter
repz
shlb
push
aaa
cmp
aam
sahf
stos
sbb
pop
ljmp
mov
or
call
push
xchg
pop
lcall
mov
or
ficomps
push
test
loope
xchg
in
and
sbb
test
xchg
mov
iret
sti
dec
sbb
movsb
cmpl
jne
stos
dec
test
mov
fisttpl
or
cmc
sbb
pop
mov
lahf
sbb
mov
sub
insl
push
xor
lods
add
jmp
push
scas
push
dec
dec
daa
lds
jno
stos
ficompl
das
add
jno
cmp
sbb
mov
sub
pop
adc
mov
xchg
out
jnp
push
add
in
jne
or
xchg
neg
int3
jne
ljmp
inc
pop
inc
dec
xchg
aas
or
pop
popl
mov
adc
hlt
inc
adc
ss
sahf
mov
mov
pop
jmp
push
dec
push
xchg
dec
sbb
aas
enter
add
loope
test
adcl
sbb
add
mov
cli
push
xchg
cltd
sbb
sbb
out
jg
outsl
and
cmpsb
mov
fidivrl
jo
jae
or
jmp
out
mov
imul
mov
fiaddl
pop
shrl
leave
fidivrs
or
in
xor
jb
adc
xchg
scas
js
arpl
add
inc
pop
and
adc
sbbl
xchg
and
mov
mov
mov
cmp
mov
add
inc
mov
aas
outsl
pop
inc
lods
or
jnp
xchg
insl
imul
pop
mov
mov
pushf
sahf
xor
jns
cmp
or
test
js
push
sub
les
sbb
insb
or
dec
add
mov
aad
push
pop
sti
pop
call
and
pop
lds
pop
jo
pop
jne
jns
add
flds
lds
adc
pshufw
dec
cmp
cmp
lds
lea
into
into
test
popa
roll
dec
xor
mov
xor
out
out
jg
sbb
sub
sbb
rclb
lcall
out
add
jb
sub
outsb
inc
xor
or
xor
xlat
push
clc
mov
xchg
mov
or
mov
push
or
pop
lea
aam
imul
xor
pop
shrl
lods
lret
cmp
jp
pop
xor
inc
mov
mov
adc
cmp
xor
dec
push
xor
sbb
or
lds
movsl
enter
push
pop
mov
cmpsl
push
or
cmpsl
test
push
enter
fwait
loop
and
imul
movups
mov
jge
fidivrs
push
xchg
inc
mov
cmp
add
cmp
ret
mov
add
jae
jge
out
xchg
push
mov
jbe
ds
adc
mov
fisubl
pop
vandnps
jecxz
xchg
sbb
jmp
adc
fwait
dec
push
scas
jno
stos
sbbb
or
and
pushf
addr16
leave
arpl
jge
int
pop
in
leave
xchg
insl
sbb
pop
dec
repz
mov
insb
mov
insl
add
jecxz
add
in
orb
sbb
push
or
sbb
in
jns
test
repz
or
popa
ret
sub
push
out
jno
jmp
jecxz
sti
mov
cmp
out
divb
push
popf
add
das
ficoml
xchg
fadds
pop
bound
lcall
repnz
add
cmpl
cmc
call
xor
xor
push
push
dec
loopne
adc
add
add
push
mov
cmp
or
clc
pop
in
clc
ss
sbb
lds
int
wrmsr
adc
out
pop
sti
adc
test
push
and
mov
lds
jge
add
lea
cltd
and
inc
outsb
incl
add
rolb
imul
imul
mov
jmp
and
pop
insb
push
out
pushf
movsl
sbb
aas
test
add
mov
or
push
enter
negl
jg
aad
sub
add
mov
cmp
js
and
adc
bound
stos
arpl
ds
mov
add
pcmpeqw
loope
lods
mov
jne
pop
int
out
pop
jecxz
addr16
mov
and
inc
dec
int3
jg
stos
lret
cwtl
sbb
sbb
shlb
gs
faddl
adc
data16
imul
dec
popl
jp
mov
xor
icebp
iret
inc
enter
mov
dec
cmp
popa
xchg
fwait
ja
push
adc
ljmp
sub
mov
adc
lcall
in
enter
stos
pop
mov
push
negl
xchg
out
test
mov
mov
xor
fs
add
inc
xchg
cld
mov
inc
jl
and
std
and
or
enter
mov
cmc
mov
sbbl
jg
add
mov
jne
enter
jle
add
jno
loopne
mov
add
sbb
fiadds
jg
in
jne
mov
icebp
jno
or
or
xchg
repz
sti
adc
inc
xor
int3
in
loope
jg
add
rcrl
inc
push
es
inc
add
test
leave
sub
gs
mov
in
push
sbb
add
pop
push
imul
ja
jmp
out
add
test
mov
jne
add
out
push
aaa
lcall
pop
pop
sahf
pmaxub
lods
push
add
ja
icebp
or
in
or
cmp
dec
xor
sbb
outsl
or
mov
test
push
test
and
add
sbb
fisubrs
ja
jae
loopne
outsb
mov
bound
xabort
and
js
xor
and
sub
add
pop
sbb
or
scas
add
mov
es
in
das
push
movsl
pop
das
adc
int
out
jmp
insl
sbb
outsl
sub
inc
push
jecxz
mov
adcb
push
cmp
mov
mov
add
mov
test
mov
xor
in
cmp
scas
add
add
insl
cmp
js
add
imul
aad
cmp
lea
icebp
or
adc
ud0
outsb
mov
cld
pop
inc
inc
lea
jbe
dec
push
xchg
ljmp
outsb
popf
mov
dec
adc
ret
mov
mov
or
sbb
sbb
in
insb
xchg
mov
xchg
or
adc
adcl
sbb
or
sbb
sbb
mov
mov
in
inc
add
push
clc
sub
push
iret
mov
adc
flds
ret
or
add
sarl
aad
cmc
jbe
cmp
adc
pop
xrelease
and
mov
imul
add
shr
cwtl
std
stos
xor
add
les
or
or
ficompl
mov
mov
dec
stos
mov
xchg
repz
loop
jnp
or
sbb
cmp
pop
pop
mov
sahf
enter
aas
mov
adc
pop
cmp
imul
xor
aaa
push
cwtl
jle
ja
xor
mov
enter
dec
pushf
loope
out
mov
ljmp
out
and
mov
or
das
lret
add
imul
and
mov
adc
mov
push
cs
cmp
adc
shrd
daa
in
add
mov
sbb
dec
dec
sbb
sbb
add
add
or
adc
mov
sub
push
xchg
jae
or
add
jg
insb
cmc
ret
jmp
rolb
xor
nop
cwtl
or
enter
or
push
adc
lret
add
adc
pop
insl
daa
jo
push
enter
cmp
shrb
dec
or
int
push
xor
pop
add
pop
add
mov
jp
push
sub
xor
xchg
daa
jb
pop
loope
dec
jne
in
enter
mov
test
adc
adc
inc
jae
cs
dec
push
cmc
push
jns
je
aad
inc
jae
and
jnp
push
stos
sbb
cmp
mov
add
mov
imul
sbb
cmpsb
mov
push
add
push
mov
sbb
ss
loopne
and
cld
jo
loopne
pop
mov
das
je
mov
push
fsubrs
aas
pop
xchg
dec
mov
es
mov
mov
repnz
lret
add
imul
or
pop
clc
cwtl
mov
cmpsl
out
pop
push
add
xor
lods
cwtl
daa
aas
dec
adc
or
jb
sub
sub
add
arpl
inc
fdivrs
jne
xchg
jns
ficoml
cmp
repz
sbb
gs
fwait
adc
out
sbb
fbstp
sub
and
popl
js
mov
cmp
lea
mov
or
out
mov
icebp
out
and
mov
shrl
call
outsb
sbb
insl
jg
fiaddl
fldt
lret
or
bound
outsl
popa
and
fstps
jnp
jns
or
push
jnp
outsl
add
ret
in
loop
inc
repz
in
mov
adc
or
nop
sbb
push
mov
jmp
and
je
imul
mov
rcrb
pop
dec
mov
js
pop
mov
stos
test
jo
add
add
imul
lea
test
lods
pop
cltd
adcl
push
je
pop
enter
push
push
mov
call
dec
leave
xor
cmpsl
insl
and
mov
cmpl
jge
addb
adc
mov
jo
ret
cmp
outsl
sahf
jecxz
test
dec
ficoms
mov
jo
andl
push
adc
in
sbb
or
outsb
outsl
push
add
test
adc
xchg
and
dec
stc
jns
xor
or
jns
popa
mov
fimuls
jns
sbb
insl
or
mov
inc
aaa
aas
test
outsl
and
and
cld
repnz
sub
sbb
push
cld
push
and
aad
push
jnp
or
sbb
push
dec
or
and
add
xchg
mov
orb
adc
out
pop
sbb
add
jae
push
fnstcw
iret
jp
xchg
ds
mov
sub
in
popa
loopne
das
jl
dec
xchg
or
adc
sub
jp
lret
push
mov
cmc
jne
xchg
jno
mov
rcl
add
test
push
mov
mov
ret
shrl
imul
lods
add
stos
sub
or
add
mov
filds
mov
inc
dec
add
dec
or
push
repnz
inc
pop
add
gs
cmp
xchg
sbb
or
outsl
mov
adc
pushf
clc
add
lahf
add
add
fnstenv
dec
xor
add
cmp
pop
enter
mov
decl
add
imul
enter
mov
mov
pusha
aad
xor
aad
inc
leave
fwait
mov
add
xchg
fldcw
int
imul
pop
rorl
mov
adc
jmp
or
cld
inc
mov
push
fidivrs
sbb
jecxz
sbb
pushf
xchg
out
mov
xor
jge
subl
rclb
imul
pop
enter
push
inc
out
insl
lcall
movsl
sub
or
sub
jg
sahf
jo
jge
add
sbb
fcmove
fcoms
pushf
push
outsl
push
xchg
jecxz
cmpsb
dec
inc
sbb
int
add
jns
outsl
inc
dec
fcomi
jp
fldln2
lds
push
arpl
mov
jge
mov
mov
mov
jg
dec
jae
mov
fwait
mov
cmpsl
scas
aas
xor
or
push
test
xor
sbb
jne
dec
xchg
add
jae
add
push
pop
movsl
inc
or
mov
or
pop
push
xchg
mov
adc
sbb
mov
push
xor
push
inc
sbb
jg
sti
test
enter
fnstsw
mov
cs
push
pop
push
fucomp
sbb
fmull
dec
cmp
jb
outsb
xorb
jo
outsl
or
mov
xor
mov
pop
jb
rorb
push
xbegin
xlat
call
cmp
ret
add
xor
out
adc
add
mov
xchg
mov
test
sub
lock
lods
adc
push
cs
xchg
sbb
adc
sbb
pushl
add
add
loope
mov
mov
aad
push
xchg
sub
subb
sbb
das
cmp
sub
jo
mov
inc
pop
fldenv
in
or
mov
dec
test
dec
mov
sbb
jmp
adc
add
imul
cmp
pop
mov
dec
jg
add
sbb
mov
inc
xchg
xor
hlt
mov
or
and
ret
lods
mov
pop
sbb
mov
cmp
push
xor
loope
mov
pushf
mov
adc
jns
pop
mov
stos
in
repnz
dec
add
aaa
daa
sub
xor
fistps
test
into
xor
cmovno
mov
sub
fst
les
das
mov
cmc
xor
or
mov
je
jbe
cmp
js
lcall
daa
test
add
adcb
frstor
xchg
pop
outsb
push
enter
cmp
ss
popf
xchg
aad
mov
xor
enter
rorl
adc
fs
inc
xchg
gs
insb
add
shll
loope
jns
sarl
aam
test
popf
loopne
in
stos
lods
and
clc
idivb
add
xchg
sarl
fidivl
daa
gs
sbb
add
clc
xor
daa
inc
sar
xchg
jne
adc
add
xchg
iret
push
and
pop
xchg
push
inc
cmc
test
insl
and
pushf
mov
sub
add
mov
nop
jb
call
movsl
ds
mov
stc
seta
clc
mov
mov
and
pop
fcmovbe
mov
fiaddl
outsl
dec
xchg
test
add
enter
xor
pushl
inc
xchg
popa
test
dec
in
or
xchg
sarl
pop
xchg
xor
or
imul
xor
fwait
mov
addr16
mov
subl
dec
jnp
int3
jl
adc
dec
inc
jmp
ljmp
push
test
or
addr16
and
rorb
xor
test
mov
sbb
gs
orl
psrlw
jno
mov
popa
and
movsb
sub
mov
vcmpngt_uqpd
fsts
gs
sbb
pusha
cmp
adc
mov
sbb
lahf
rclb
xor
xlat
fidivl
cmpsb
xchg
or
sarl
and
xchg
or
mov
mov
mov
adc
pop
fisubs
fwait
stos
fcoml
and
shlb
mov
leave
inc
int
xor
pop
into
mov
rorl
inc
sub
jg
mov
mov
jg
xor
fucom
pop
or
ljmp
dec
push
push
push
and
pop
push
ficomps
mov
mov
pop
pop
mov
pop
stos
sbb
push
lods
push
and
gs
adc
pop
outsl
sub
jb
out
in
or
jmp
add
test
jnp
mov
add
mov
fs
jne
or
test
xor
sbb
lret
mov
ds
imul
push
fldl
add
sbbl
fnstsw
push
jne
mov
imul
insl
xor
jecxz
nop
adc
mov
test
repnz
enter
and
cs
pop
cmp
hlt
or
inc
clc
fidivrl
mov
das
aaa
xchg
movlps
push
add
imul
and
adc
add
lock
hlt
pop
push
add
push
mov
sbb
mov
push
shlb
dec
add
test
pminub
jg,pt
andl
and
nop
sbb
mov
xchg
fstps
pusha
test
mov
loope
nop
mov
push
test
push
and
outsb
les
dec
pusha
movsb
pop
outsl
or
xchg
subl
sbb
rcll
dec
dec
push
test
or
inc
mov
xchg
mov
dec
mov
and
enter
bound
push
cli
lock
cmc
aam
dec
leave
jp
lods
jmp
and
xor
insl
add
mov
test
push
pop
pusha
pop
push
cmp
push
lret
in
gs
pop
lock
outsl
adcl
in
clc
dec
or
in
shrb
lret
dec
addr16
sbb
xchg
cmc
cld
fnstcw
int3
mov
outsl
adc
adc
inc
fistps
inc
xchg
or
daa
leave
adc
cmpl
gs
pop
jo
cmp
jp
fwait
adc
mov
sub
imul
xlat
outsl
loope
scas
subb
subb
xchg
lcall
adc
push
out
testl
and
fadd
stos
sub
add
jnp
aam
jmp
bound
testl
xchg
pop
sbb
jae
inc
movsb
repz
xor
adc
push
dec
pop
mov
or
fcomip
andb
rclb
pop
xor
enter
xchg
popa
loop
sti
adc
pop
loope
mov
dec
cmc
sbb
popa
arpl
popa
jo
mov
and
adc
mov
mov
jecxz
adc
nop
ljmp
mov
notl
xchg
or
mov
int
push
mov
sub
pminub
sbb
fsubrl
sbb
aas
fs
xor
sbb
int3
loope
outsl
cwtl
lds
sbb
decl
cmc
out
and
and
gs
sub
pop
pop
adc
call
mov
ss
mov
push
mov
dec
out
jmp
enter
or
xchg
stos
les
daa
dec
xchg
ret
lock
pop
lcall
ficompl
push
xchg
sbb
jg
sbbl
scas
add
xchg
enter
andl
dec
inc
pop
mov
pop
sub
mov
add
dec
xor
dec
in
inc
adc
adc
sbb
add
data16
or
pop
cwtl
or
add
pop
inc
movsb
enter
mov
icebp
fbstp
gs
out
inc
mov
pop
into
pop
add
lcall
mov
or
add
je
test
ret
cld
fmul
testb
sub
bound
fisubrs
aas
sbb
pop
cmp
sti
popa
lcall
insw
mov
sbb
sbb
or
add
sbb
daa
sbb
push
lahf
xchg
adcb
int3
std
jp
mov
aaa
jg
ret
dec
pop
mov
stc
mov
imul
iret
movsb
std
dec
or
pop
mov
dec
fdivs
dec
dec
ljmp
popf
dec
sbb
mov
xchg
push
cmp
jns
out
pop
cmp
cmovo
in
mov
call
xchg
scas
mov
push
mov
xor
or
jb
mov
xchg
xor
push
push
pop
orl
outsb
sub
jnp
xor
movl
rcr
in
mov
out
in
movsl
push
lea
or
sahf
xor
insl
push
jmp
rdmsr
pusha
stc
push
sub
inc
cmpsl
add
popf
sbb
or
adc
or
xchg
enter
inc
adc
daa
inc
stc
jo
jmp
in
xchg
popa
or
pop
sbb
enter
ja
repnz
enter
push
sbb
sbb
mov
mov
push
adc
pop
test
in
push
jecxz
cwtl
and
ficompl
or
mov
imul
cli
mov
fbstp
xchg
adc
mov
sbb
loope
add
xor
js
ret
sbb
out
sub
lods
lahf
icebp
or
fldenv
dec
mov
shll
push
fldenv
out
add
lea
jge
mov
cmp
sbb
add
aad
out
sbb
imul
dec
dec
bound
or
out
pop
gs
cmp
mov
mov
sub
push
test
lods
jne
into
fnstsw
jp
out
inc
outsl
bound
dec
cmp
add
inc
inc
fdivl
lahf
xor
rorb
sbb
dec
adc
lods
jl
adc
ljmp
lret
xchg
cld
outsl
or
add
mov
adc
pop
out
in
fidivs
mov
pop
enter
cmp
inc
dec
mov
enter
gs
scas
pop
jno
fs
sahf
xchg
push
pop
dec
mov
outsl
in
mov
adc
add
mov
gs
dec
mov
xchg
push
pushl
jmp
lahf
imul
sbb
adc
or
pop
repz
xor
rcr
in
arpl
xor
iret
repnz
sbb
jno
add
pushf
push
or
inc
pushf
test
inc
dec
mov
lahf
jg,pt
jp
jg
lahf
test
xor
inc
push
sub
or
and
pusha
and
mov
sbb
fcmovnb
jle
xchg
pop
enter
outsl
push
ficomps
js
or
pop
add
scas
enter
xor
dec
pop
xor
push
ss
inc
mov
mov
addb
jb
jne
push
arpl
and
push
loopne
pop
cmp
dec
sahf
leave
pop
push
adc
dec
stos
sub
push
mov
nop
aas
or
test
cmc
mov
xor
gs
out
loop
cmp
mov
xchg
sbb
imul
push
cli
insb
cmpsl
and
adc
xor
rolb
jae
mov
mov
call
int3
sti
in
xor
xchg
cmp
movsl
xchg
into
inc
in
jne
and
or
lret
mov
loope
or
push
addr16
in
mov
out
andl
sbb
mov
inc
adc
clc
push
mov
cmp
cmp
and
sti
sbb
jge
mov
lea
popa
xchg
cli
fistpl
jecxz
pop
jno
icebp
cmp
rcll
jge
test
sub
sub
nop
mov
test
cmp
test
add
sbb
jp
jbe
mov
mov
adc
dec
pop
pop
pop
aas
data16
lock
pop
fwait
out
jne
or
ljmp
ficoml
mov
popl
aas
xor
sub
enter
lock
test
loopne
xchg
xchg
dec
rorl
or
lods
lea
adc
sbb
mov
mov
or
mov
popa
jnp
daa
push
mov
or
pusha
inc
inc
adc
cmpsb
test
jge
xchg
push
sti
stos
xor
mulb
mov
arpl
cmpl
cwtl
jns
and
shlb
lcall
fsubrs
add
cs
or
rsqrtps
lret
pop
add
or
mov
sub
cmpsl
xor
mov
daa
test
mov
testl
pop
outsb
adc
mov
clc
xor
std
fisubs
mov
push
jne
out
shl
cs
rorl
pop
sti
idivl
sbb
test
test
pop
xchg
push
movsl
pop
or
lahf
sbb
ficoml
out
and
jb
mov
adc
in
stos
mov
inc
add
in
dec
inc
xchg
ljmp
adc
dec
xchg
ljmp
sbb
aas
shlb
mov
mov
mov
and
cltd
jl
dec
mov
jg
xor
xchg
mov
loopne
mov
iret
xchg
in
gs
ficomps
stos
fldt
daa
lods
cmp
mov
pop
imul
add
call
mov
xchg
pop
jae
stos
nop
outsb
or
mov
call
mov
inc
arpl
sub
mov
ficoms
inc
mov
dec
pop
push
sub
lds
rolb
pop
mov
popf
jne
xchg
mov
fcmovnb
jmp
fldenv
out
pop
fiaddl
sarl
or
xor
sub
sub
mov
inc
std
lret
mov
sub
dec
sub
dec
pop
push
cmp
cmpsb
cmp
sbb
imul
mov
push
pop
jns
dec
jmp
jne
adc
or
push
dec
add
lock
mov
add
lahf
lods
add
js
sbbl
xor
add
xchg
add
out
sbb
xor
les
xchg
rclb
aad
in
or
adc
lds
out
fsts
enter
inc
outsb
sbb
mov
lods
enter
data16
in
mov
jmp
push
lahf
or
hlt
jmp
jg
xor
xchg
mov
or
inc
sbb
pop
mov
jbe
leave
mov
outsl
rcll
imul
dec
enter
push
imul
and
xlat
imul
fstps
cmpsl
cmpb
sub
cmp
cmp
push
jg
loop
insl
xorb
jb
jns
ss
inc
lds
insb
sbb
pusha
orl
mov
sti
addb
adc
mov
add
mov
xchg
jge
and
dec
or
scas
add
cmp
push
or
mov
mov
sahf
or
pop
jmp
fisubrs
adcb
xor
add
lahf
mov
pop
add
or
jecxz
push
pop
cltd
xor
outsb
inc
pop
lods
adc
mov
mov
sbb
mov
or
stc
pop
cs
leave
and
pushf
inc
cmpl
push
in
cwtl
pop
inc
pop
or
pop
sbb
pop
sbb
fwait
das
int
and
push
imul
or
fstps
mov
inc
inc
push
sub
movsl
jae
sahf
xchg
xchg
scas
loope
xor
xchg
pushf
adc
mov
cmpsl
fcomp
outsl
lds
xchg
jecxz
mov
rorl
xchg
nop
or
dec
lods
cmp
fisttps
push
in
cmpsl
insl
mov
aad
adc
pop
in
pop
push
push
in
mov
or
aad
lret
push
mov
fimuls
in
push
ficoml
cmp
stos
or
fildl
push
adc
pop
pop
enter
in
dec
xchg
adc
in
dec
and
nop
outsb
xlat
ficompl
xor
lds
out
xchg
add
inc
popf
push
lret
lods
mov
adc
or
ret
repz
mov
insb
out
cmp
jo
sbb
and
jae
dec
jge
adc
sbb
mov
aas
jo
pushfw
fcomps
jmp
bnd
cltd
pop
mov
push
dec
cltd
sbb
pushf
jmp
pop
mov
xchg
lods
mov
adc
mov
fmull
int3
jecxz
adc
lock
jl
popf
lcall
cmc
fcompl
insb
hlt
pop
test
pop
lret
xchg
cmp
sub
or
rorb
jg
xchg
arpl
adc
pop
jns
pop
or
mov
dec
and
sbb
jle
mov
aad
fidivs
fiaddl
push
or
fdiv
lds
jmp
adc
adc
adc
mov
xchg
lds
cmp
sbb
push
call
dec
xchg
scas
in
sbb
dec
lahf
jp
lahf
and
dec
jne
aaa
and
or
lret
nop
push
daa
xor
loopne
inc
lds
insl
enter
outsb
mov
xor
enter
or
jl
cwtl
out
stos
decb
shll
sbb
jns
or
inc
es
jb
mov
and
inc
call
pop
loopne
fstpl
add
cmc
clc
push
aam
mov
jecxz
cmc
test
lcall
jae
inc
fildll
out
pop
xchg
popa
xchg
sahf
jae
mov
mov
stc
popa
clc
xor
mov
leave
fimuls
fidivs
sub
test
imul
lds
mov
es
jae
mov
or
inc
sbb
daa
mov
pop
and
aas
js
xor
mov
fcompl
jo
pop
xor
popf
push
sub
jne
enter
mov
adc
inc
xchg
popa
add
mov
or
out
mov
add
int
xchg
mov
dec
lcall
imul
sbb
push
cmpsl
jecxz
adc
xor
mov
js
mov
addl
or
adc
add
sbb
adc
ja
cmp
push
mov
out
sbbb
add
fimuls
call
popl
mov
jmp
sbb
imul
loope
clc
push
fwait
jecxz
mov
dec
sbb
or
and
scas
inc
dec
sbb
push
cltd
xor
call
sbb
dec
jecxz
mov
data16
rolb
xchg
sbb
loope
cmp
xchg
shld
and
pop
cmp
loop
push
adc
jae
cld
dec
and
stos
cmp
cmp
addl
in
dec
inc
psubusb
or
mov
xchg
or
test
push
inc
iret
xlat
xchg
push
movsl
jecxz
lret
jno
xor
pop
cmp
cmp
cmc
jbe
or
test
outsl
jae
rcl
mov
or
fisubrs
jg
sub
xchg
jecxz
jl
mov
in
or
cmp
mov
in
jae
popf
and
adc
push
dec
mov
xchg
nop
ljmp
xor
std
mov
ss
and
mov
inc
push
in
add
addl
movsb
mov
mov
sbb
dec
lret
ret
in
idivb
dec
inc
fcoml
dec
or
stos
mov
loope
in
ss
call
add
cwtl
jo
pop
cltd
nop
movsl
sbb
sbb
or
das
xor
inc
adc
inc
xor
mov
or
orb
mov
sbb
mov
movsl
and
aas
cmp
add
xchg
jmp
mov
xor
dec
iret
mov
mov
cltd
mov
das
and
push
pop
mov
inc
mov
or
inc
or
mov
xchg
fcomps
xor
pop
mov
or
jecxz
or
test
int
sub
lds
sub
js
adc
adc
ja
sti
in
mov
js
and
dec
gs
push
daa
movaps
sbb
or
dec
jg
pop
test
or
mov
cltd
loopne
adc
mov
xor
sbb
cmp
subl
loopne
pop
xchg
mov
xchg
jecxz
insl
sbb
das
xor
dec
and
xchg
push
cld
fwait
and
ja
movsl
sub
cmp
pushf
and
enter
test
movsl
filds
iret
add
std
mov
leave
dec
inc
mov
mov
fcomps
movsl
popf
jno
dec
mov
jo
pop
pop
and
enter
cmp
sbb
jnp
xchg
xchg
lret
pop
cwtl
dec
call
pop
mov
js
mov
pop
jecxz
faddl
cli
nop
xchg
xor
lea
jae
push
popf
push
insb
xor
lds
jnp
adc
push
xchg
dec
pop
ret
int
jg
testl
repnz
jmp
stos
outsb
mov
test
xor
pusha
push
pop
mov
mov
insl
mov
icebp
and
sti
rcl
mov
cmp
inc
out
int3
loope
enter
enter
sub
loope
dec
jo
or
jae
add
mov
sbb
or
mov
mov
mov
add
pop
fldcw
mov
jne
cmp
jl
es
fsubrl
je
cmc
repz
xor
mov
xor
pop
xchg
js
cmp
mov
ljmp
dec
fistpl
xor
xlat
mov
ja
mov
in
imulb
imul
int3
std
inc
fsubs
sbb
jecxz
pop
xchg
fdivp
mov
adc
mov
add
outsb
insl
mov
add
or
jno
mov
lea
lea
sbb
adc
flds
sub
add
jns
jns
data16
cmp
or
stc
mov
enter
jmp
or
daa
lea
jmp
mov
les
sbbb
add
cwtl
dec
or
loope
jo
dec
test
push
pop
mov
mov
xchg
mov
pop
mov
nop
pop
adc
xor
and
push
mov
xchg
popa
or
clc
adc
cmovo
pop
icebp
repz
add
sbb
sbb
inc
fists
dec
sbbb
popa
or
hlt
fistpl
sub
adc
arpl
cmpsl
adc
cmp
push
cmp
or
sub
or
sti
pop
ljmp
fcmovb
iret
sbb
or
add
sbb
add
inc
mov
lret
mov
mov
or
sbb
cwtl
fsubs
or
in
cmp
or
clc
mov
int
and
pop
or
jbe
dec
xor
add
or
xor
xchg
inc
jp
ss
cmp
add
inc
jl
inc
fidivs
sbb
mov
faddl
pop
stos
and
and
jno
adc
movsl
mov
dec
xor
imul
pop
mov
push
sbb
inc
in
data16
inc
cmc
and
pop
ljmp
adc
mov
test
test
imul
xor
test
inc
out
mov
fs
jbe
mov
cmp
repz
pop
pop
or
jne
int3
sahf
xor
or
orb
add
mov
in
adc
rcl
xchg
mov
push
add
jno
cld
test
sub
insb
cmp
mov
xchg
rcr
and
sub
push
mov
out
fnstcw
enter
mov
pop
cwtl
test
sbb
gs
pop
in
mov
and
divl
inc
pop
inc
adc
inc
mov
int3
insl
cld
nop
pop
leave
decb
cwtl
or
imul
mov
outsl
xor
xor
adc
push
js
and
adc
push
idiv
or
xor
add
sbb
leave
mov
sti
mov
push
mov
imul
adc
lods
test
and
add
adc
or
ret
das
or
mov
cmp
addl
enter
inc
sbb
adc
repnz
mov
sbb
testb
xor
fidivrs
mov
sbb
lea
repz
mov
or
stos
lods
cmp
lcall
xor
ja
add
mov
and
mov
jnp
int
or
ret
int
imul
sbb
sbb
push
jnp
mov
mov
mov
mov
push
ss
pop
mov
xor
mov
add
loopne
xchg
push
imul
ja
lahf
mov
add
cmc
mov
cmovnp
jp
add
jmp
xchg
adc
pop
push
sub
jl
or
push
aas
fsubs
pop
mov
out
or
xor
dec
jne
jne
fmulp
insl
stos
pop
icebp
lahf
inc
dec
call
loop
stc
mov
popf
jns
sbb
test
lds
xchg
adc
push
add
js
xchg
das
pop
mov
faddl
add
fadds
xchg
ds
or
stc
jo
mov
inc
pop
mov
or
daa
inc
cli
ss
xlat
mov
mov
mov
mov
js
cmp
xor
repz
push
pop
pop
scas
fimull
movsl
push
xchg
push
lods
or
int3
lea
sti
movsl
lea
sub
cmpsb
push
pop
outsl
fimuls
adc
mov
popa
add
fisubrs
cwtl
xor
mov
jmp
add
sbb
mov
lcall
cmp
dec
mov
xchg
and
cs
int
adc
pusha
xor
dec
dec
pop
xor
fldcw
push
jg
xor
cmpsl
int
addr16
pop
jg
and
orb
push
or
xchg
pushf
mov
sbb
sahf
aas
adc
xorl
xchg
xor
lret
xor
cmp
jp
mov
stos
mov
mov
xchg
scas
pop
aam
or
arpl
xchg
xchg
lret
adc
dec
popa
das
pop
pop
sbb
sub
fs
mov
xor
cli
pop
adc
or
add
adc
ja
imul
fisubs
aam
js
push
jp
pop
or
mov
and
and
fistps
sti
enter
jnp
lock
mov
jbe
pop
lea
es
xor
imul
and
xchg
sbb
mov
mov
xor
jnp
add
insl
add
pop
clc
xor
mov
inc
sbb
pop
roll
mov
xchg
fcomps
daa
sti
lcall
push
adc
adc
cmp
mov
pop
xor
mov
sbb
fiaddl
lret
movsl
ljmp
lods
or
imul
or
push
adc
sbb
add
push
push
pop
sbb
icebp
mov
test
arpl
jmp
int3
nop
sbb
mov
push
jg
fucomp
test
xor
jmp
pop
pop
jmp
jp
mov
mov
inc
xchg
lods
insl
mov
nop
sbb
or
xor
ss
push
mov
push
hlt
sarl
sbb
test
lret
insl
dec
cmp
sbb
sub
lock
int3
sbb
xor
dec
and
inc
xor
sti
sti
mov
sahf
mov
add
jmp
xchg
rcll
popa
subb
sbb
push
jecxz
outsb
push
scas
fwait
jns
xorb
cmp
ud0
push
pop
xchg
sbb
xchg
divl
sub
or
dec
orb
cmpsb
orb
jnp
pop
test
movsl
xor
lods
xor
pop
es
fists
leave
repnz
insl
jge
xor
insl
inc
ss
pop
push
call
mov
mov
add
pop
fldenv
lea
mov
push
push
or
push
outsl
mov
push
or
sbb
insb
loope
add
loop
xor
enter
push
dec
jb
add
cmp
jg
adc
sub
je
jmp
xor
add
or
dec
iret
mov
jne
das
leave
xor
push
mov
rorl
in
and
hlt
incl
mov
test
dec
test
fisubrl
push
imul
gs
mov
out
add
ret
or
mov
xchg
stos
jae
xchg
push
loope
add
pop
mov
sub
and
mov
xor
push
xchg
sarl
xchg
dec
pcmpgtd
test
sbb
xchg
roll
in
adc
imul
lret
in
add
sub
push
mov
push
pop
imul
insl
fisubs
push
pop
gs
inc
jns
cmc
dec
stc
out
adc
ja
xor
je
sbb
sbb
js
push
and
mov
in
pop
orl
test
das
fisubs
sbb
nop
mov
xor
sub
testl
mov
sbb
dec
mov
dec
aas
cmp
or
sbb
pop
sbb
sub
test
fsubrs
in
faddp
mov
fsubl
mov
movsb
jmp
mov
dec
jecxz
in
fcoms
call
mov
mov
pop
lret
add
jb
add
fcomps
dec
daa
iret
loope
sub
push
in
repz
aad
stos
lea
insl
xor
add
lcall
jne
aad
es
ficoms
xchg
mov
mov
adc
loope
fisubs
popa
outsb
clc
jg
lahf
in
pop
gs
mov
sbb
sbb
in
cmc
dec
fiadds
lahf
and
fisubrs
push
mov
aas
lds
cli
mov
into
mov
movsb
inc
inc
inc
addr16
fs
jmp
fsubrl
mov
adc
cmp
das
adc
inc
xor
adc
dec
xor
cmp
mov
ret
enter
mov
fsubr
xchg
inc
test
mov
icebp
xor
xor
mov
cmp
pop
and
sarl
inc
jge
mov
mov
mov
push
stc
xchg
or
insl
scas
jmp
sbb
and
add
jnp
adc
mov
pop
cwtl
fwait
push
or
jnp
push
sbb
in
enter
jecxz
xchg
or
xor
inc
in
cmp
mov
sbb
daa
fwait
loopne
push
mov
sub
stos
lea
gs
insb
popf
out
push
jns
fmuls
mov
mov
popa
inc
or
ja
sub
shll
sahf
push
mov
push
cld
lret
mov
and
jns
movsl
xor
sbb
inc
aad
xor
outsl
test
inc
mov
adc
add
dec
mov
roll
push
mov
push
adc
pusha
jge
xchg
inc
pop
and
sbb
xor
inc
lret
pop
adc
mov
mov
sbb
sbb
in
lcall
arpl
sbb
movsl
lahf
jmp
dec
repz
fisubs
cli
pop
pushf
aaa
sbb
push
adc
inc
adc
sbb
fidivrl
repnz
cwtl
inc
ds
mov
popf
pop
push
js
fwait
add
fisttpl
in
mull
sti
mov
xor
int3
xor
xor
pop
pusha
lock
fisubrl
xor
repz
sbb
pop
hlt
cmp
pop
add
addb
mov
xchg
inc
pop
mov
stos
push
push
insb
mov
cmp
inc
icebp
or
sbb
mov
test
jecxz
imul
outsl
push
out
fsubs
imul
mov
sbb
aad
out
xor
xchg
add
mov
aam
pop
or
adc
mov
adc
xchg
and
adc
mov
xchg
xchg
add
or
jge
pop
fisubrl
neg
inc
les
bound
out
mov
xchg
or
mov
mov
sbb
aam
test
mov
hlt
std
or
jb
in
jle
adc
mov
mov
pop
jne
popf
jne
sub
loopne
xchg
mov
loope
std
and
pop
sub
repnz
cwtl
aas
enter
jmp
mov
jcxz
hlt
pop
fucomi
enter
pop
pop
lea
test
lahf
test
int
or
shll
mov
adc
popf
add
ja
sbb
pop
or
cltd
mov
adc
not
or
addr16
push
fidivs
mov
loope
je
add
push
stos
adc
lcall
pop
adc
adc
jae
cwtl
sbb
jne
cmp
inc
adc
ljmp
cmp
adc
imul
or
mov
test
mov
push
jmp
mov
outsl
pop
jbe
test
popf
xchg
add
insl
cmp
movsl
frstor
arpl
lds
mov
enter
xor
sti
xor
mov
aam
dec
dec
test
xorl
std
dec
jns
push
xchg
mov
or
enter
dec
cmova
add
loope
rcrl
pop
add
adc
push
lcall
push
add
dec
je
lods
or
ja
fbstp
pop
mov
pop
lea
test
add
mov
xchg
and
mov
aas
mov
or
into
mov
lcall
insb
jecxz
inc
shll
adc
adc
or
mov
int
mov
test
shlb
push
inc
mov
arpl
xor
aad
dec
fisubrl
test
cwtl
insl
lcall
or
imul
inc
mov
mov
adc
fmul
in
fwait
mov
mov
push
out
enter
fnstcw
stos
xor
inc
xchg
or
and
sbb
out
lcall
adcl
adcl
mov
fistpl
adc
ficomps
adcl
sub
rorb
add
jb
andl
fsubrl
fiadds
pop
lahf
lahf
ljmp
pushf
xchg
xor
or
push
xchg
mov
ret
or
sbb
cmc
nop
push
rcrl
xor
int3
cltd
bound
ljmp
cmpsb
xor
ja
pop
sbb
and
mov
lods
loop
xor
lret
add
sub
inc
test
ja
shrl
add
cmpsl
inc
rclb
leave
in
push
mov
scas
or
fwait
into
mov
movsl
dec
add
ja
xchg
clc
inc
insb
nop
cli
dec
cld
jno
push
sub
repz
inc
cld
xor
rcrb
pushl
sbb
repnz
and
mov
es
cmp
dec
xchg
jmp
outsl
test
dec
fs
push
stos
inc
aas
jne
and
and
orb
cmp
pusha
mov
pushf
push
sbb
inc
icebp
mov
popa
loop
add
aad
roll
jl
mov
inc
jno
pop
fdivl
jmp
pusha
clc
adc
sub
enter
xor
popf
mov
ss
fmulp
jmp
rdmsr
pop
sbb
gs
nop
pop
jecxz
jg
jg
imul
adc
dec
cmpsb
imul
sbb
insl
mov
out
xchg
lea
dec
push
dec
push
push
fiaddl
mov
mov
cmp
call
inc
flds
cltd
or
imul
inc
mov
enter
pop
push
dec
das
xor
jbe
mov
pop
jecxz
xor
mov
cmpsb
dec
fisubs
out
int
jge
leave
arpl
rcl
repz
push
sub
mov
mov
pop
adc
inc
gs
mov
cs
mov
outsb
push
inc
dec
or
cwtl
mov
or
enter
push
test
mov
cmc
adc
in
insl
sbb
push
pop
arpl
popf
xchg
lea
xor
xor
jecxz
or
daa
test
lods
out
roll
or
shl
sub
or
push
xchg
cli
loope
std
xchg
dec
outsb
mov
or
cmpsl
cs
test
push
insb
out
xchg
xchg
add
jns
push
sbb
repz
ds
pop
push
or
push
ds
push
jmp
sbb
or
push
lock
sub
push
jno
xlat
icebp
fcmovnb
jle
or
inc
dec
xchg
pop
inc
sub
out
sbb
inc
jecxz
or
inc
sub
xchg
jno
js
adc
stc
jg
xor
jbe
cmpsl
xchg
mov
jae
dec
iret
loop
fmul
orl
jge
cltd
dec
arpl
lret
test
mov
movsl
adc
int3
pop
enter
scas
mov
mov
ret
pop
jp
pop
xchg
aad
insl
dec
mov
daa
decl
dec
or
arpl
outsb
dec
fistpl
stc
mov
push
psrlw
mov
push
jnp
fmulp
lret
js
popa
test
es
imul
xor
adc
xchg
popa
xchg
sub
jg
xchg
push
and
xor
xor
sub
mov
icebp
repz
sub
dec
fs
dec
mull
jecxz
jnp
xor
jnp
test
mov
daa
lahf
mov
xor
inc
jecxz
mov
outsb
jg
ficoms
test
cmp
mov
mov
imul
ljmp
repnz
mov
sbb
insl
cmp
sbb
enter
lret
lret
xor
rcrb
ja
fisubs
in
jecxz
mov
inc
push
mov
xchg
inc
stc
fisubs
pop
repz
icebp
lcall
dec
jo
loopne
pop
mov
lea
cmpsb
into
inc
sub
stos
cmp
jno
enter
mov
bound
mov
fisttpll
push
sub
femms
xchg
cltd
fstl
in
sbb
adc
dec
add
push
bsf
or
sbb
or
xor
push
aas
mov
adc
lret
mov
notb
adc
hlt
mov
pushl
sbb
inc
jo
push
push
cltd
inc
ss
lcall
out
bound
add
push
adc
sub
mov
ss
popl
mov
push
fiadds
cmp
gs
pop
add
fdivrs
add
xchg
int3
mov
gs
aas
enter
inc
mov
and
sbb
pop
rcr
andb
jns
cmp
inc
nop
and
es
jecxz
xor
in
inc
rcrb
cmp
ljmp
add
dec
inc
jno
jg
pop
sbb
loope
fistpll
mov
xor
push
lret
cs
mov
mov
lss
imul
mov
testl
lods
add
outsl
dec
out
clc
sbb
cmp
cmp
iret
enter
mov
scas
mov
clc
std
mov
xor
repz
loop
shl
push
fsts
dec
out
push
nop
mov
sbb
imul
cli
in
and
addr16
jp
scas
mov
aaa
add
cmpl
vpaddsw
ljmp
call
mov
int
xchg
sub
lret
mov
add
lcall
stos
jnp
inc
insl
and
and
in
iret
scas
pushf
lcall
and
push
cmp
sub
or
daa
adc
push
xchg
pop
cmp
sub
aam
shll
ret
adc
les
or
icebp
repz
add
cmc
shll
rolb
int3
cmp
dec
aaa
pop
sub
rclb
adc
mov
or
test
adc
adc
test
jp
lods
pop
in
dec
ljmp
faddl
stos
int
movsb
test
xchg
sbb
xor
inc
js
add
inc
pop
sbb
cwtl
mov
mov
out
lea
adc
test
pop
lea
sbb
jae
xchg
rcrb
adc
jp
enter
loopne
sbb
arpl
daa
arpl
adc
fadds
lods
xlat
adc
pop
add
flds
lahf
dec
adc
xchg
imul
scas
xor
xchg
add
sbb
mov
imul
dec
cmp
push
outsl
cmp
stos
jo
test
pop
clc
lcall
push
aam
mov
jg
fwait
sti
lds
pushf
pusha
sub
mov
mov
push
mov
xorb
scas
adc
out
dec
lods
test
dec
popf
test
push
dec
int
es
outsl
arpl
adc
xor
add
xor
pushf
dec
xchg
mov
dec
dec
rolb
test
movsb
je
sbb
rorb
insl
pop
rcr
iret
inc
inc
dec
adc
pusha
xor
xor
push
ljmp
nop
cltd
into
push
in
xchg
js
xchg
cmp
or
mov
or
loope
push
leave
bound
mov
or
loop
jno
lds
inc
or
das
subl
xor
out
inc
mov
cmp
das
ja
inc
add
lds
cmp
gs
push
xor
dec
outsl
into
cltd
stos
lock
mov
enter
fcos
je
jb
inc
aas
outsl
mov
xor
repz
lds
fimuls
mov
int3
data16
dec
xchg
inc
fwait
or
inc
outsl
inc
test
call
test
pop
cwtl
jle
out
dec
cmc
shr
mov
mov
test
push
out
adc
pop
dec
dec
pop
lods
stc
sub
push
xchg
mov
dec
cmp
jnp
lods
push
sub
fwait
and
adc
fwait
xor
clc
fiadds
xor
jecxz
pop
addr16
cltd
add
add
imul
data16
fiadds
sub
or
repz
sbbb
fwait
add
add
mov
mov
mov
packsswb
adc
push
repz
inc
mov
xor
sbb
mov
xchg
sbb
adc
pop
stc
mov
dec
les
jmp
mov
jno
ret
jmp
in
test
je
push
ja
data16
dec
nop
pop
inc
jl
lahf
inc
mov
push
out
out
in
scas
das
jp
and
sbb
imul
pop
shr
add
and
push
mov
stc
mov
insl
adc
pop
jne
or
mov
mov
adc
inc
sarl
lahf
sbb
pop
and
add
jg
cmp
xlat
lods
hlt
int3
sbb
imul
mov
xchg
sbb
xchg
sbb
jnp
jns
movsb
jg
pop
dec
sub
out
lret
sub
out
movsb
or
pop
mov
cli
jb
xlat
fnstenv
add
enter
inc
lret
dec
xchg
shrb
jns
lret
pusha
dec
dec
sub
dec
hlt
mov
sbb
xchg
loopne
push
add
xchg
popa
mov
test
add
imul
jge
roll
inc
push
je
scas
mov
sbb
out
pop
push
imul
movsl
add
push
pop
test
xchg
pop
inc
xor
cli
cmp
push
sbb
adc
adc
sbb
push
pop
and
fbld
mov
loopne
fs
icebp
sbb
out
sbb
movsb
pushf
arpl
bound
cmp
outsb
and
xor
fiaddl
mov
fidivs
xlat
frstor
clc
ja
icebp
insl
in
push
pop
icebp
test
sti
pop
add
push
into
xchg
imul
or
movl
orb
adc
loopne
lods
adc
sahf
shlb
aas
test
rol
xchg
and
pop
pop
adc
pop
jmp
mov
sbb
ja
repnz
sbb
jmp
mulb
call
movsl
lea
jmp
and
movsl
std
ud1
jb
ljmp
mov
scas
jge
adc
or
adc
cs
dec
or
xchg
dec
cwtl
lahf
cli
ror
cmpsb
or
lds
nop
int3
jmp
sbb
lods
gs
imul
push
adc
mov
inc
xor
sbb
xchg
das
and
call
das
adc
out
inc
fimuls
xchg
xchg
outsl
dec
pop
xchg
or
popa
clc
int3
das
mov
call
fimull
fadds
or
sar
pop
mov
push
arpl
fcmovu
jne
push
inc
xor
stos
cmc
inc
push
adc
cmp
or
imul
mov
xor
es
or
inc
or
and
jl
ficoml
lahf
lods
cmc
cmp
cmpsb
pop
or
inc
sti
mov
rclb
push
repz
pop
jno
xor
lock
es
enter
dec
mov
pop
adc
fistps
std
push
jmp
adc
sar
cmp
andb
sbb
mov
in
aad
loop
jl
fimuls
pusha
lock
xchg
mov
fnstsw
cmp
and
imul
xchg
pop
enter
test
push
pusha
sub
fsts
xor
and
or
xor
mov
push
fdivrl
mov
jmp
fstps
test
js
movsb
push
dec
stos
or
movsbl
mov
lods
cmpsb
mov
or
jg
xchg
adc
mov
lods
bound
int
stc
cmpsb
mov
lods
rorl
inc
fidivrs
push
pop
inc
mov
mov
gs
and
jmp
sbb
or
sub
lods
out
sti
mov
mov
sbb
lcall
pop
xchg
sbb
subl
loopne
push
fdivrp
in
fsubr
mov
xchg
inc
ret
stos
xor
rcr
sarl
mov
lahf
or
enter
sti
lock
dec
fs
lahf
sbb
mov
stos
jmp
jge
scas
push
imul
or
aas
jle
daa
xchg
mov
mov
mov
cltd
xor
adc
stc
push
fwait
into
mov
stc
mov
cs
jg
pushf
out
ficoms
popf
or
test
std
test
lea
pop
and
or
cltd
clc
test
subb
adc
pop
jmp
jns
imul
stc
xchg
imul
add
fsubr
and
divl
into
xchg
nop/reserved
dec
pop
push
push
push
and
inc
mov
pinsrw
out
pop
sbb
mov
mov
xor
mov
sub
test
sahf
out
pop
aam
in
xor
and
sbb
ficomps
jns
fwait
clc
bound
pop
sub
lahf
jo
xchg
sbb
dec
xorb
or
sbbl
adc
mov
rolb
mov
cltd
jb
sti
test
adc
cmc
sbb
or
xor
inc
cmp
cmp
pop
jecxz
mov
in
sbb
mov
gs
pop
inc
lahf
adc
mov
mov
test
pop
int3
roll
mov
dec
lea
in
pop
xor
xchg
dec
cli
sbb
call
out
cmpsl
mov
mov
mov
adc
test
jmp
xor
stos
std
mov
xchg
add
mov
or
in
push
xor
daa
cmp
and
cmc
or
sub
or
jmp
jge
sbb
insl
sub
xlat
pop
inc
jg
inc
cmp
fsubrs
mov
mov
loopne
pop
test
clc
pop
mov
fdivl
adc
cmp
jno
dec
lock
xchg
int3
or
sbb
add
js
mov
outsl
stos
xor
pop
lods
pushf
push
mov
jmp
sbb
sub
pop
andl
and
push
lds
add
sbb
inc
jp
pop
add
sbb
xchg
adc
or
jle
xchg
sti
adc
int
xor
insl
pop
lret
lods
push
adc
bound
test
frstor
ret
sub
dec
mov
cmp
mov
sub
push
outsb
loope
adc
add
add
call
add
sti
cmp
imul
aas
daa
movsb
push
in
dec
in
sbb
mov
aad
lock
mov
push
mov
sbb
push
test
or
or
repnz
add
sbb
xor
xchg
fcoms
xchg
cmp
lods
cmp
imul
pop
lds
lahf
and
xor
mov
inc
xchg
cwtl
inc
sbb
or
mov
or
data16
lea
mov
push
add
mov
xchg
inc
jae
or
sub
fsubl
jne
shlb
loope
ret
jno
pop
out
cwtl
in
arpl
in
aaa
xchg
aas
push
fcomps
xchg
jae
fs
adc
mov
and
or
mov
ja
dec
pop
inc
or
or
ret
add
jmp
push
repz
clc
testl
iret
sbb
cs
outsl
inc
or
push
mov
xchg
sbbb
rol
xchg
fnsave
dec
pop
mov
ss
cmp
add
paddq
inc
testl
mov
scas
push
sub
jne
ss
jne
cmp
mov
imul
pop
mov
orl
xor
or
mov
sub
jge
xchg
xchg
mov
jmp
mov
lods
mov
lahf
push
aas
shrw
cld
jecxz
clc
dec
xor
mov
daa
fidivrl
loopne
adc
sti
adc
mov
lea
dec
pop
push
mov
or
dec
push
jmp
arpl
and
outsb
psraw
test
mov
or
fwait
adc
xchg
add
add
rcrb
aad
es
xchg
push
mov
rolb
sbb
adc
fwait
sub
mov
cld
lahf
jecxz
xchg
jb
or
jb
xchg
mov
sbb
adc
or
popa
ja
cmp
lods
xchg
jno
xchg
gs
int3
ret
pop
mov
pmovmskb
int
or
jecxz
jp
fsubs
jmp
adc
jecxz
sbb
xchg
xor
frstor
ficoms
es
pushf
daa
push
in
pusha
out
cmp
gs
jmp
mov
xor
out
clc
testl
enter
ss
ja
mov
cli
push
jbe
sti
fiadds
jecxz
hlt
insl
mov
sub
je
xchg
adc
addr16
loop
inc
ds
add
mov
fwait
adc
xchg
movsl
out
xor
in
ja
inc
jge,pn
pop
pop
pop
push
fnstsw
dec
mov
dec
xchg
sbb
sbb
mov
mov
xchg
push
nop
movsl
cmp
adc
cmp
popf
sbb
sbb
and
fstpl
inc
jne
shld
sub
xchg
aam
xchg
pop
pop
daa
sub
imul
push
cltd
scas
or
adc
pop
xchg
pop
outsb
fsubs
jl
cmp
loopne
ja
or
and
stos
push
sub
fdivrp
pop
mov
inc
insl
and
mov
push
test
xlat
sbb
cs
jnp
ljmp
mov
cmp
jge
dec
push
int
jg
out
pop
mov
jecxz
inc
icebp
jl
sbb
fs
jb
dec
orl
nop
cmpl
pop
mov
inc
js
ficomps
dec
pop
stos
dec
sbb
or
push
mov
lcall
add
push
mov
aam
stos
call
out
mov
les
jge
mov
leave
jns
ja
lds
ds
femms
inc
push
imul
mov
ret
stos
push
jecxz
jne
ljmp
push
lods
call
mov
adc
arpl
cmpsl
loopne
aas
lret
add
sub
cmp
clc
xor
imul
fldcw
fisubrs
sbb
imul
and
aaa
mov
bound
arpl
aas
sbb
pop
nop
jmp
pop
insl
sahf
add
inc
sti
push
mov
fstpt
sbb
cli
cmpsl
fs
call
popa
shlb
cmpsl
mov
and
pop
push
lahf
dec
add
mov
push
sbb
cmc
adc
dec
or
add
divl
movsl
adc
mov
dec
rcrb
mov
aam
mov
lock
and
inc
push
cs
sub
cmp
leave
call
testb
dec
mov
sbb
data16
lea
pop
xchg
icebp
add
mov
mov
nop
mov
popa
sub
stc
shrb
rcr
lret
subb
xor
push
aas
pop
enter
lea
jbe
xchg
inc
sbb
xchg
test
out
cmp
jb
cmpsl
sub
inc
mov
jbe
or
xor
pop
dec
xchg
in
leave
imul
xchg
int
add
cmp
mov
adc
push
lods
mov
jecxz
lret
movsl
mov
outsl
dec
imul
adc
data16
lahf
std
std
cmp
mov
or
inc
sbb
jge
sbb
pop
pop
add
adc
mov
inc
popf
push
notb
loope
adc
pop
sbb
mov
jnp
pushf
ja
test
in
jp
sub
mov
cmp
test
jbe
dec
xchg
clc
insl
pop
or
pop
lods
rorb
sbb
repnz
test
fs
xor
aad
mov
sti
cwtl
mov
outsl
or
arpl
rcrb
test
fdivp
sbb
cmpsb
lahf
dec
sbb
cwtl
push
stos
insl
test
enter
jecxz
out
lods
or
push
pop
lds
orb
xor
mov
out
test
loopne
lea
push
or
sbb
inc
test
jp
jb
shlb
call
mov
jmp
jp
lea
cli
cmpsb
xor
mov
sbb
dec
or
test
dec
or
jbe
cmp
in
loope
push
push
or
and
xor
aaa
inc
popa
insb
in
jecxz
divb
scas
fimull
adc
scas
and
cmp
test
sbb
lock
popa
test
xor
lea
fistpl
pop
xchg
scas
repz
test
inc
aad
rcll
dec
adc
jae
fdivs
add
cmc
iret
out
addr16
push
out
and
dec
xchg
push
jb
push
in
dec
int
mov
adc
xor
loopne
jae
rcrb
push
xor
sbb
and
cmp
sbb
fmuls
clc
mov
lods
mov
xchg
sti
and
mov
mov
enter
push
adc
cmc
clc
or
pop
mov
mov
mov
incl
add
mov
idivb
xor
fidivrs
xchg
lods
adc
test
adc
jo
sbb
pop
xchg
mov
das
dec
cmp
add
jbe
dec
out
and
std
lret
xlat
insl
adc
adcb
inc
loop
imul
mov
dec
mov
outsl
push
or
mov
lea
push
mov
push
add
aad
inc
in
js
push
out
test
xchg
ljmp
or
and
imul
mov
cmp
or
dec
adc
stos
cmc
cli
push
xor
mov
or
dec
mov
movb
jmp
sti
mov
lock
inc
out
std
dec
xor
pop
fsts
in
sbb
enter
orb
push
adc
or
mov
cmp
je
cmc
inc
push
adc
push
dec
sbb
jge
and
cmp
sarb
inc
push
push
test
popf
mov
outsb
leave
add
sbb
push
sub
pushf
adc
push
jle
inc
std
cmp
inc
dec
fisttpl
sarl
test
orl
mov
insb
aaa
add
cmp
sbb
pop
mov
decb
adc
mov
shrl
mov
sub
dec
pop
insl
jmp
outsb
out
adc
mov
dec
shrd
aas
icebp
and
and
pushf
mov
mov
jg
lock
out
mov
mov
jno
mov
sbb
sbb
popa
in
mov
add
jae
ss
add
or
test
mov
arpl
jmp
addr16
ljmp
dec
dec
test
or
push
mov
mov
popf
sahf
adc
aas
test
dec
mov
dec
mov
dec
add
dec
repz
cmc
xchg
js
in
pop
mov
test
cmp
xchg
mov
out
pop
dec
cmc
push
mov
adc
mov
sbb
adc
sahf
fisubs
lahf
cmp
rcr
xor
sbb
xchg
pop
sti
inc
mov
jecxz
inc
xchg
xchg
popa
mov
adc
adc
imul
jle
icebp
mov
enter
inc
lods
jmp
clc
mov
loope
aas
scas
jle
push
fmuls
popf
pop
cmp
dec
enter
jge
imul
push
jp
pop
stos
xchg
and
fcom
cmp
movsl
adc
cmp
sub
jb
push
cmp
outsb
push
add
sahf
daa
lret
stos
sub
lods
in
daa
adc
fcoml
lret
cld
movsl
pop
and
xor
mov
add
dec
repz
sub
lock
pop
or
jns
enter
jmp
sbb
xchg
sub
mov
mov
jnp
mov
add
add
sbb
push
das
sbb
mov
mov
xchg
lahf
adc
in
loope
sbb
enter
pusha
mov
lock
nop
sub
out
and
push
outsl
addr16
inc
pusha
xor
insl
mov
es
ss
testb
jbe
les
loope
jae
cs
push
pop
cmp
xchg
lcall
sub
push
xor
clc
adc
dec
lahf
movsl
fiaddl
push
cld
not
inc
rclb
js
daa
jnp
xchg
or
dec
shlb
pop
jne
clc
add
and
push
xchg
or
mov
les
mov
shll
packssdw
inc
fdivrs
sub
out
ljmp
pop
pop
jo
out
dec
adc
pop
push
and
adc
fidivrl
push
movsb
push
pop
outsl
jb
jmp
sti
fidivs
inc
sbb
repz
fxch
xchg
mov
xchg
add
nop
mov
cmpsb
sbb
and
repnz
lods
inc
movsb
adc
sbbb
test
imul
jo
imul
lea
fbstp
cli
adcl
mov
pop
inc
aam
cmp
divb
outsl
lcall
outsl
sbb
loope
xchg
in
pop
popf
mov
test
imul
jnp
outsb
push
rclb
fimull
stos
js
adc
or
mov
pop
inc
insl
xor
dec
jbe
mov
addl
iret
gs
hlt
xchg
push
dec
push
adc
inc
dec
xor
mov
pop
pop
inc
pop
je
dec
add
scas
aas
outsb
icebp
jnp
sub
inc
rcrl
into
sub
ret
clc
push
je
je
mov
mov
rorl
cmpsl
lock
shlb
push
or
mov
test
test
or
pop
jo
or
xchg
jbe
pusha
lock
gs
adc
out
jmp
mov
iret
jmp
out
imul
insl
dec
data16
cwtl
fstps
lret
dec
das
popa
out
inc
imul
pop
mov
stc
add
ret
pusha
pop
cmp
add
in
mov
xor
and
fldcw
cmp
fdivp
dec
mov
inc
inc
int
push
sbb
or
leave
pop
and
inc
shrb
jae
and
jne
adc
xchg
pop
mov
pop
or
fsubrs
or
inc
in
push
xchg
cmp
int3
in
mov
pop
or
in
icebp
js
sbb
stos
push
test
adc
in
jecxz
test
mov
sahf
popl
adc
daa
jle
xor
daa
mov
push
pop
or
mov
or
adc
cmp
xor
hlt
cs
sbb
testb
inc
mov
int3
bound
imul
jge
xor
cmpl
jns
sub
sbb
andb
and
jns
jb
sahf
pushf
and
and
lods
ret
xchg
pop
jp
push
jnp
or
sbb
push
mov
jmp
test
inc
and
in
repnz
dec
mov
leave
iret
filds
add
aad
sbb
inc
push
cmp
pop
es
jg
sub
jnp
movsl
lret
in
imul
and
insl
mov
mov
sbbb
mov
xchg
imul
outsl
dec
cmp
fmulp
or
test
out
jmp
dec
jne
ret
dec
loopne
fwait
shl
lock
inc
outsl
cmp
lds
sbb
lahf
pop
sbb
das
fsubrl
call
push
cmp
clc
ss
add
add
ljmp
in
mov
dec
push
push
jnp
inc
lahf
arpl
dec
sbb
adc
xor
insb
jno
dec
into
mov
xor
xchg
add
or
enter
es
ljmp
pop
notb
mov
sub
push
cmpsb
dec
repnz
rorl
mov
test
pop
mov
sbb
adc
and
inc
dec
jb
pop
popa
jg,pt
push
mov
fsubl
mov
repnz
inc
dec
dec
add
dec
in
out
ja
or
and
jg
outsb
mov
stc
out
push
lods
outsl
nop
sub
inc
mov
xchg
dec
dec
stos
rolb
pop
fldenv
in
lock
inc
pop
adc
and
mov
stos
call
loopne
xchg
pop
inc
out
jmp
add
in
lds
inc
dec
jmp
dec
nopl
dec
stc
cwtl
fiadds
xor
loop
imul
mov
push
cld
push
inc
loope
push
mov
mov
xor
inc
jae
mov
and
addb
sub
and
mov
pusha
lcall
inc
cs
jae
inc
out
rcrl
ret
adc
dec
cwtl
mov
loop
repnz
call
sbb
popf
add
mov
or
mov
int
and
inc
in
xchg
out
dec
fstpl
push
test
dec
adc
fidivs
out
inc
enter
fcoms
push
or
fdivrp
cmp
enter
sbb
mov
add
nop
adc
push
ficoms
jbe
dec
pop
sub
outsb
das
ret
jae
pop
and
popf
lds
lcall
loope
sarl
sbb
shlb
cmp
fimuls
cmp
repnz
sbb
xchg
fimuls
movsb
scas
aas
mov
jge
adc
push
or
add
add
repz
or
loop
icebp
and
jecxz
sbb
cwtl
fdivrp
enter
fwait
add
das
pop
xorl
out
inc
faddp
mov
notb
push
fldcw
pop
lods
imul
outsl
dec
in
fs
int
dec
jge
push
dec
imul
loope
adc
adc
pop
adc
enter
xor
sbb
lock
adc
stc
adc
scas
sub
jecxz
ret
jnp
imul
lret
imul
push
push
and
push
or
das
ljmp
pop
dec
xchg
mov
lock
sbb
sub
fimuls
sbb
sbb
icebp
fimuls
out
adc
sti
imul
dec
mov
mov
imul
mov
fistl
pop
jmp
mov
fisttps
add
clc
mov
cmpsb
mov
ss
fisubrl
inc
or
jne
push
add
dec
cmc
sbb
adc
lcall
jecxz
adc
xor
adc
pop
loope
push
add
xchg
push
inc
int3
fcoms
inc
mov
fs
insl
cs
xchg
add
shlb
mov
sbb
sub
sub
push
and
scas
fcoms
lods
int3
push
arpl
sbb
pop
out
enter
sbb
mov
dec
shrb
test
mov
decl
push
jp
pop
sub
test
es
ja
jmp
cmpsl
mov
gs
das
daa
das
sbbb
jne
aad
jb
stc
pop
ljmp
dec
pop
jno
enter
daa
cs
test
mov
lret
sti
and
sarl
enter
fnstenv
or
inc
dec
repnz
xchg
jno
sbb
test
icebp
sti
xchg
es
adc
or
pop
ljmp
sbb
xchg
fnsave
sbb
ficoms
aas
out
fimuls
subb
jmp
addl
xchg
fildll
xchg
xchg
dec
jo
xor
push
push
dec
fs
sub
add
aad
xchg
imul
jge
in
clc
movsb
push
in
imul
in
xchg
pop
int
lahf
fsts
mov
sahf
xchg
fucomi
add
int3
and
jl
mov
mov
xchg
sti
cld
icebp
fwait
les
inc
jge
aad
pop
xor
pop
call
jns
js
xchg
rorb
std
sbb
add
dec
sbb
ds
inc
mov
jle
std
or
gs
xchg
rolb
das
enter
test
jbe
or
or
cmp
loopne
dec
pushf
mov
pushf
or
loop
fadds
jnp
adc
test
test
stos
mov
repz
mov
jmp
dec
orb
inc
aas
and
add
mov
jge
aaa
ret
arpl
pop
nop
mulb
jp
jg
lahf
xchg
sbb
movsb
lds
inc
sbb
or
sub
fstpt
shl
insl
xor
add
out
add
es
test
iret
fxch
fwait
push
dec
cmc
cmp
fiaddl
sub
adc
and
mov
xchg
mov
das
fidivs
sub
fildl
xor
inc
jns
popa
mov
pop
andb
mov
or
and
cmp
or
shrb
sbb
pop
pusha
dec
and
push
xor
ficomps
imul
enter
aas
inc
fstpt
mov
cmpsb
mov
jp
add
xor
call
mov
inc
ret
push
sbb
dec
or
pop
rcrb
cmpsl
or
xchg
gs
and
sbb
shr
mov
pop
neg
and
js
test
enter
jnp
rcrl
fcompp
or
and
xchg
pop
cltd
add
mov
in
add
or
adc
mov
in
jge
pop
test
or
and
mov
and
jg
int3
out
xor
ss
or
jg
pop
cmp
rcr
push
adc
cmpl
lods
jmp
xchg
and
pop
lods
out
outsl
jb
int3
imul
pop
mov
or
pop
sbb
or
fwait
mov
sbb
push
aas
je
push
add
or
lahf
pop
cmp
jmp
sbb
mov
xor
test
lds
sbb
xchg
push
sbb
int3
inc
adc
dec
mov
pop
cmp
xor
imulb
sbb
dec
test
lea
insl
fs
or
sbb
test
xchg
mov
dec
in
leave
or
mov
aad
adc
rolb
ret
push
inc
xchg
movaps
jb
and
add
popf
xor
push
stos
sub
insl
popa
xchg
sub
lock
das
cmp
pop
xchg
dec
jne
repz
sub
mov
sub
jl
mov
adc
sub
rcrl
jns
rcll
mov
mov
sbb
pop
fldenv
adc
push
das
jns
test
je
shrb
mov
sub
icebp
enter
shrb
xchg
xor
test
insl
insl
inc
dec
xor
or
sub
fiadds
mov
adcb
sti
or
xor
pop
iret
mov
mov
adc
jl
xor
xor
fimuls
rclb
pop
rolb
lahf
mov
fwait
sbb
sbb
lcall
xchg
iret
xchg
fsubrp
daa
enter
cmp
jne
mov
mov
je
jecxz
lcall
adc
dec
int
aad
fidivrs
sbb
and
fs
scas
dec
mov
cmc
test
pop
sub
iret
popf
inc
sbb
or
adc
std
imul
xchg
or
xor
popa
pop
push
daa
xchg
test
lock
dec
mov
and
or
push
xchg
loopne
lock
loopne
sti
lea
out
stc
jno
mov
cmovnp
add
lcall
mov
push
inc
fiadds
push
xor
dec
xor
add
out
sbb
call
stc
mov
dec
ficoml
push
mov
clc
insb
jno
pop
test
loope
pop
stos
mov
cmp
fmuls
dec
adc
push
dec
or
pop
int3
or
sbb
dec
inc
imul
inc
lcall
add
lods
test
test
popf
add
and
dec
xchg
push
gs
jmp
mov
xchg
adc
out
loope
fwait
in
xor
je
stos
pop
mov
leave
addb
dec
aam
push
fcmovu
dec
lahf
or
fchs
fiaddl
sti
icebp
int3
fisubrs
mov
fmulp
gs
sub
mov
and
iret
push
aam
push
inc
data16
push
iret
cmpsb
arpl
insb
daa
fidivrl
insb
push
mov
loope
pusha
push
adc
js
xor
mov
dec
popa
inc
ficomps
add
and
or
movsl
sbb
dec
iret
sbb
test
ret
int3
inc
hlt
in
in
or
sub
inc
and
xchg
jecxz
cmpsb
int
mov
lcall
icebp
rcrl
enter
leave
es
add
repnz
mov
fcmove
pop
or
insl
rcr
or
sbb
popaw
jecxz
clc
cmp
imul
fimuls
cmp
aad
cmovno
mov
jno
cmpsb
clc
repz
leave
lahf
cld
push
sbb
punpcklbw
outsl
fmul
or
pushf
test
fcomp
loope
popa
or
iret
ja
jo
jns
inc
dec
nop
add
test
lret
pusha
inc
dec
mov
fmuls
dec
negl
mov
push
repz
mov
mov
fnstsw
shrb
loope
out
in
loop
mov
enter
mov
xchg
icebp
ficoms
bound
mov
pop
mov
loope
mov
dec
std
bound
xchg
in
ret
xor
push
pop
mov
es
inc
inc
xor
in
les
aad
jbe
jecxz
pop
jge
xchg
jne
jp
add
sbb
mov
xor
adc
push
fadds
xchg
pop
popf
mov
dec
fsubs
popa
loope
inc
mov
and
test
cmpsb
or
xor
xchg
scas
add
loop
push
cmc
test
xor
mov
jmp
sub
movsb
xor
pusha
cmp
fldcw
adc
jl
inc
jecxz
in
xor
imul
and
push
xchg
add
sub
in
xor
mov
xchg
sbb
xor
mov
xor
dec
xor
pop
sbb
mov
bound
fidivs
mov
andl
dec
xor
fisubrl
jo
shll
clc
adc
mov
xor
loopne
roll
pop
out
or
pop
pop
mov
sub
lahf
inc
mov
sub
movsl
repnz
shlb
addl
insl
fidivs
sub
jae
movsl
daa
pushf
cmp
sub
lock
sbb
jb
lret
mov
dec
fisubs
mov
xchg
imul
adc
insl
xor
push
and
gs
mov
sahf
and
push
lcall
and
js
push
out
and
pusha
pusha
nop
xchg
mov
rep
loopne
inc
imul
insb
jne
mov
xchg
mov
xchg
cmp
cmpsl
adcb
cld
add
dec
fwait
shrb
push
sub
inc
or
popa
jne
jnp
dec
and
push
xor
test
mov
mov
test
imul
and
nop
add
popf
jge
movsl
mov
inc
dec
inc
rorb
push
in
sahf
clc
das
cmp
add
dec
mov
fwait
and
push
xchg
test
insl
or
imul
mov
jmp
and
mov
xor
push
mov
inc
mov
inc
mov
xor
and
mov
add
das
sbb
flds
or
fidivrs
mov
fwait
mov
lock
out
dec
mov
insb
and
sbb
jne
cltd
fistpll
jnp
in
add
dec
sub
jae
push
jle
fldenv
xchg
stos
je
add
pop
mov
int
bound
jp
dec
jl
mov
dec
adc
test
out
dec
iret
fnstsw
out
sbb
sbb
sti
dec
test
push
and
lret
cmpsb
xor
sbb
movsl
ret
leave
addr16
aas
cwtl
pop
xacquire
push
mov
pusha
daa
sbb
stc
mov
fnstcw
pop
hlt
loope
sub
or
ja
push
inc
jne
lahf
or
loopne
cmpsl
fdivrs
enter
movsb
and
dec
ss
loopne
idiv
stos
pushf
xchg
dec
ljmp
xchg
dec
jl
sbb
nop
push
imul
rcrb
sub
sbb
sbb
add
inc
aas
dec
cwtl
jne
in
icebp
sub
stos
ficoml
stos
aam
jmp
mov
out
adc
cld
add
cmpsl
and
lods
sarb
fnstsw
adc
xchg
cs
dec
add
dec
int
movsl
add
dec
mov
or
inc
dec
lods
jl
adc
mov
push
pop
repz
fildll
imul
jecxz
in
mov
fnstenv
push
add
jg
inc
cmp
mov
and
out
ja
mov
insl
fsubl
arpl
mov
push
cmpl
outsl
adc
int
mov
lcall
sbb
addr16
mov
adc
xchg
loopne
and
add
ror
dec
pop
cltd
aas
nop
popa
xor
ja
loope
iret
dec
or
pop
cmp
lret
sbb
add
add
insl
mov
jns
cmpb
mov
mov
cmc
pop
ficomps
dec
lret
inc
fdivr
add
pop
mov
mov
lods
adc
mov
scas
mov
dec
mov
popa
cmp
fsubrs
add
popf
fmuls
add
out
jmp
in
mov
jg
lret
std
fadd
add
cmc
ret
fsub
add
lds
test
mov
xor
push
test
push
movsb
out
aaa
add
adc
dec
or
mov
sbb
into
test
adcb
xchg
dec
js
mov
dec
outsl
pusha
popa
daa
imul
xor
xchg
icebp
fisubs
add
xchg
push
rcrb
imul
lcall
xchg
xchg
std
sub
jg
sub
scas
or
int
jae
gs
jge
cmp
aad
fiaddl
or
adc
sub
or
and
xchg
xor
in
ret
sub
out
mov
cwtl
movsl
jns
orl
aam
adc
sbb
jne
dec
sti
in
sahf
ss
mov
loope
xchg
inc
pushf
dec
jecxz
popf
or
cmpsb
sub
std
mov
or
dec
fisubrs
repz
jecxz
xor
addr16
jnp
test
push
mov
pop
icebp
lcall
adc
aas
push
lods
sub
adc
fmuls
mov
pushf
sbb
adc
lahf
sbb
xor
sbb
add
jno
fidivrs
aam
and
aam
mov
or
jo
lods
call
or
add
lea
and
movsl
or
push
fcomp
or
mov
pusha
inc
jmp
or
mov
inc
xchg
push
or
enter
or
jg
pop
outsl
inc
or
mov
inc
ja
mov
cltd
sub
fildl
mov
jnp
ljmp
or
xor
mov
mov
scas
fildl
dec
push
or
push
rcrl
and
test
lea
fimuls
repz
aaa
pop
sbb
lock
mov
xorl
or
sub
mov
pop
push
lahf
sbb
jnp
fisubrs
or
mov
push
insl
mov
or
aaa
lahf
or
int
mov
std
lea
imul
loope
cmp
mov
loop
nop
add
addb
cwtl
out
sub
xchg
push
in
rcrl
dec
mov
sbb
inc
lcall
push
jmp
jno
mov
push
mov
pop
loopne
or
imul
push
sbb
stos
and
pop
mov
clc
jne
pop
sbb
or
push
jecxz
icebp
xchg
sbbl
fisttpll
pop
aam
mov
arpl
adc
push
mov
insb
jmp
cmc
sbb
lods
sbb
dec
mov
in
mov
outsl
sbb
icebp
cmc
mov
inc
or
lret
stos
push
push
mov
push
sbb
loope
sahf
js
sbb
test
mov
push
ficoml
jnp
test
sbb
cmp
iret
mov
int
lods
jne
cmp
in
jg
add
sub
inc
mov
jae
mov
call
xchg
dec
add
mov
mov
sti
push
notl
or
sbb
push
imul
mov
insl
or
subl
jl
adc
mov
or
dec
cmp
insb
xor
adc
out
mov
rcl
bound
stos
les
adc
fsubp
gs
dec
push
add
and
jo
inc
mov
add
pop
push
fsubrp
pop
pop
xor
enter
add
movsb
sub
and
xor
push
mov
or
adc
in
xchg
adc
xchg
push
xor
xchg
jecxz
repz
shr
mov
push
cmp
push
test
dec
es
lods
fwait
sub
daa
ss
out
ficomps
jp
mov
adc
lret
add
add
adc
loope
sub
imul
pop
push
inc
ret
push
fcoml
add
sbb
out
pop
icebp
ljmp
mov
cmp
mov
jmp
xchg
and
test
sbb
or
mov
sbb
pop
xchg
jmp
leave
fidivrs
mov
or
or
dec
jg
das
pop
fcmovne
stos
or
mov
mov
es
pop
enter
call
movsw
mov
push
mov
pop
xchg
xor
enter
pop
and
mov
fwait
inc
mov
idivl
test
cmp
decl
jno
lcall
bound
pmulhuw
out
push
sbb
insl
or
aad
imul
stc
xchg
mov
aam
mov
das
imul
movsl
inc
jecxz
cmp
into
xchg
rol
fistl
scas
cmp
sub
clc
out
fadds
sub
fcmove
sub
packsswb
shll
dec
arpl
out
sub
test
adc
pop
push
add
outsl
inc
or
mov
sbb
fisubrs
inc
adc
data16
and
mov
fs
xchg
nop
rcll
mov
inc
sarl
adc
sbb
dec
or
sbb
add
xchg
sbb
xor
pop
push
and
xchg
add
fs
scas
mov
adc
fstps
xchg
addr16
sbb
xor
pop
nop
pop
mov
sub
sub
es
cmp
sbb
inc
out
cmp
sbb
imul
imul
push
in
sub
imul
rcrl
imul
push
int
xor
push
mov
fwait
mov
inc
mov
insl
mov
adc
mov
adc
xor
dec
mov
and
ss
push
rorb
inc
hlt
jmp
inc
fmulp
sub
out
dec
out
lcall
aaa
insl
push
xor
jbe
pop
cmp
mov
push
mov
outsl
push
out
mov
sub
push
aad
fwait
push
add
add
push
adc
daa
lret
sbb
jp
lea
mov
push
sbb
dec
shrb
insl
mov
push
fwait
aas
jns
xor
imul
ljmp
lock
dec
xchg
in
cmp
insb
dec
cltd
repz
mov
sbb
xor
or
gs
int3
and
push
in
pop
sub
sahf
jne
or
int3
jno
lea
pop
clc
push
dec
cwtl
lea
aam
jne
and
pop
add
inc
push
xchg
shlb
nop
js
pop
xchg
and
scas
js
imul
scas
mov
jne
js
fsubrl
into
pop
mov
stos
in
adc
dec
pop
int
fnsave
sbb
adc
jmp
pop
jne
lret
dec
pop
test
dec
add
mov
fsubs
icebp
pop
xor
or
xor
or
pop
daa
dec
outsb
push
scas
cmp
loope
jmp
aam
mov
addr16
cmp
mov
jo
daa
pop
stos
xchg
sbb
out
loope
or
xchg
xchg
push
cmp
and
inc
or
pop
pop
icebp
testl
jg
movsl
jne
loope
das
aam
jne
iret
insl
add
jmp
mov
into
mov
xor
mov
iret
push
nop
inc
mov
jae
sahf
sub
push
mov
sbb
test
push
idivl
push
bound
cs
popa
fld
inc
stc
pop
movsl
clc
sub
mov
jmp
jecxz
movsl
std
sti
sbb
icebp
xchg
int3
add
insl
or
aas
mov
adc
lods
pushf
decl
mov
mov
stc
pop
pushf
enter
mov
stos
or
and
or
mov
nop
aas
push
call
dec
lds
stos
sbb
adc
pop
pop
pusha
pop
inc
nop
stos
cmpsl
push
cmp
insl
push
pop
add
sbb
gs
dec
andl
test
add
lea
push
mov
mov
test
insl
lds
repz
push
mov
push
inc
dec
pop
data16
add
mov
or
adc
mov
jnp
adc
adc
sbb
ljmp
pop
mov
adc
lahf
add
out
dec
add
cmp
imul
jne
mov
push
inc
js
xlat
sahf
addl
jg
imul
ja
imul
aas
jne
das
push
cmp
sub
mov
or
jg
out
aas
lea
inc
jno
push
or
sbb
dec
loopne
xor
in
inc
add
in
pop
pop
jnp
enter
scas
nop
loop
pushf
ja
icebp
out
std
adc
pop
js
pop
loope
jp
mov
rclb
lcall
int3
adc
or
adc
enter
xchg
sbb
das
addr16
dec
xrelease
fsts
adc
push
adc
lcall
mov
add
mov
loopw
jecxz
in
sub
jbe
or
or
mov
add
mov
shrl
lods
stc
fcom
in
cmp
xchg
sbb
in
push
lods
das
xchg
jne
xchg
ficoms
add
and
sti
sub
insl
or
fimull
imul
into
int
popa
mov
orb
enter
scas
xchg
rclb
or
aas
or
or
jne
enter
rol
rcl
aas
dec
xor
lahf
sbb
daa
cld
pop
jmp
ljmp
sub
dec
rcl
lock
int
movsb
xchg
icebp
cmp
mov
dec
es
nop
or
adc
outsl
loop
xorl
and
jmp
add
sbb
aaa
xor
movsb
cltd
jne
das
inc
sbb
js
xor
adc
jmp
cmpl
into
es
les
jecxz
or
xor
loop
or
xor
and
fs
dec
mov
dec
sbb
xchg
cld
jge
enter
sbb
xchg
sub
mov
cmp
into
push
xchg
iret
movsb
call
cwtl
sarb
add
and
daa
xor
clc
add
mov
push
mov
pause
int
jmp
hlt
inc
ja
cmpsl
cmc
xor
push
xor
loope
test
xchg
pop
add
popa
push
xor
call
dec
inc
jne
sbb
or
ljmp
push
enter
xchg
andl
add
es
xchg
out
cmp
and
fcoms
popf
ljmp
aas
and
pop
mov
adc
call
shl
push
xchg
dec
push
popf
ss
xchg
ja
jge
jmp
ds
imul
inc
clc
cwtl
fsubr
ja
dec
lock
push
sbb
mov
addb
shll
pop
adcl
popl
enter
lahf
out
adc
mov
imul
pushf
pcmpeqd
mov
adc
mov
and
or
mov
mov
mov
dec
popa
sbb
dec
jo
in
cmp
sbb
das
shlb
in
jecxz
orb
add
bound
jmp
sbb
repnz
mov
mov
fdivl
jl
add
dec
cmc
loope
imul
sub
int
out
lock
and
in
jb
pop
fsubrs
sahf
insb
xchg
adc
repnz
cmp
jecxz
pop
mov
cmpsb
hlt
imul
fmuls
cmp
cmp
sub
mov
push
xchg
mov
or
and
dec
push
inc
add
mov
cltd
push
rolb
cmp
nop
arpl
jmp
aad
mov
adc
in
jmp
sub
sub
in
inc
lea
sbb
adc
std
mov
rorl
or
outsl
xor
aas
xor
test
daa
lret
dec
xor
xchg
add
sbb
sbb
test
add
mov
ror
lea
dec
nop
push
inc
aam
mov
adc
adc
fs
cs
sbb
inc
das
or
or
mov
cmp
int3
dec
dec
mov
aaa
sbbl
xchg
cmpsb
cli
scas
inc
push
pop
ficomps
cltd
cmp
push
ja
repz
dec
xchg
or
rclb
sbb
data16
sarl
imul
xchg
push
sahf
into
pop
lcall
pop
push
sub
inc
mov
fwait
imul
fnsave
sbb
pushf
cmp
es
jns
push
cwtl
test
pop
adc
aaa
jmp
gs
jne
or
dec
and
pop
icebp
or
cli
aam
fiadds
gs
and
cmp
bswap
out
and
push
push
cwtl
pushf
enter
mov
stc
jmp
pop
pop
push
fisubrs
mov
in
jnp
jl
xor
out
pop
aam
test
in
aam
test
mov
popa
dec
sub
xchg
xor
pusha
sub
imul
inc
mov
enter
movsl
stos
es
loope
mov
decl
aas
test
fimull
test
sbb
xor
mov
loope
adc
dec
adc
frstor
jno
push
out
ss
jbe
mov
push
pop
mov
daa
or
cli
mov
xor
mov
enter
mov
psllq
subl
xchg
faddl
mov
sbb
gs
insb
movsl
xchg
gs
or
scas
inc
in
int
mov
cmp
lods
bound
mov
pop
sub
xchg
or
xor
xchg
sbbl
adcl
pop
and
xorl
jp
test
xor
testb
xchg
dec
fs
mov
ja
sub
out
enter
sub
inc
push
jno
jbe
lcall
arpl
inc
rolb
aas
lock
and
push
enter
or
and
push
fistpll
mov
xor
pop
mov
push
aam
push
sbb
sarl
lock
adc
in
mov
imul
sub
enter
imul
jnp
xchg
and
dec
mov
jae
fwait
jg
jmp
mov
clc
push
ljmp
fidivl
jo
lods
lods
push
jne
jl
or
dec
mov
sarb
stos
das
push
push
movsb
shrb
sti
xchg
push
cmp
gs
and
dec
dec
push
imul
push
test
adc
add
cmp
hlt
jge
xchg
rcll
aam
inc
call
cmp
insl
mov
jmp
pushf
push
ja
add
add
cmp
bound
or
pop
jo
xchg
dec
jge
icebp
or
pop
inc
pushf
xchg
imul
sahf
daa
dec
dec
or
xlat
push
ficompl
cmp
push
add
ret
mov
xor
sub
orl
cmpsl
popf
js
dec
dec
jle
lcall
aad
sbb
cmpsl
xor
sbb
mull
jmp
out
test
addr16
mull
xchg
mov
in
sbb
mov
das
test
jb
inc
pop
fcomps
lahf
pop
xor
sub
dec
insl
cmp
divb
mov
ficoms
adc
dec
push
add
es
mov
jecxz
cmp
fwait
mov
aaa
push
push
jecxz
jb
adc
aad
insl
das
or
test
roll
push
cmp
mov
jbe
xor
aas
or
adc
int
jne
mov
shll
sahf
pushf
push
dec
pop
inc
out
jb
adc
std
scas
aas
and
jae
cmp
fidivs
push
test
stc
aam
ds
dec
arpl
mov
xor
mov
xor
icebp
fsts
adc
push
ds
jbe
fsubrl
xor
sbb
lods
dec
icebp
or
bound
add
or
inc
jp
or
mov
jnp
ljmp
sub
sbb
fiadds
dec
imul
cld
mov
cmp
dec
mov
mov
jg
out
jmp
cmp
aaa
mov
out
cld
aaa
sbb
in
inc
jno
pop
mov
mov
loopne
addl
sub
push
ljmp
pop
push
lcall
mov
xor
test
lock
cmp
cli
xchg
enter
pushl
jno
lahf
shrb
dec
int3
fldt
lret
dec
mov
and
lods
adc
dec
shrb
sub
sub
arpl
test
add
dec
push
and
adc
and
sbb
aam
pop
popa
adc
in
dec
addb
imul
pop
mov
es
incl
add
mov
test
fstpl
sbb
dec
test
and
stc
loopne
addl
iret
rolb
adc
jnp
sub
loope
rorl
or
mov
addr16
push
xchg
enter
loop
xchg
xlat
pop
sub
cmp
push
inc
cltd
mov
popa
stc
sub
mov
test
rcll
hlt
test
test
dec
dec
cwtl
add
mov
ljmp
lock
movsl
xchg
cmpsb
sbb
in
adc
mov
cmp
add
sbb
add
or
xor
dec
arpl
xchg
test
fildl
in
jge
jns
mov
test
enter
fnsave
mov
rcrb
mov
rcrl
inc
gs
xor
out
iret
mov
sbb
ror
inc
mov
jg
cmp
arpl
rcrl
lret
lods
nop
enter
push
jge
rcr
cmp
or
sbb
and
xchg
movsl
or
push
int
pop
inc
inc
repnz
push
imul
xchg
xchg
add
xor
xlat
cli
jge
fildll
lret
add
xor
shlb
add
dec
inc
cwtl
mov
xor
sarb
xchg
lcall
and
sbb
fidivs
jbe
xchg
movsl
add
mov
cld
aas
std
and
inc
fcmovnb
xchg
sbb
push
xor
xchg
data16
inc
nop
sub
jp
jg
popa
call
and
mov
loopne
loope
jns
testb
and
jne
and
dec
cmp
popa
adc
in
push
pop
test
jmp
popa
xchg
in
pop
dec
movsl
xchg
test
jno
out
stos
repnz
lods
jae
aad
sub
push
in
push
inc
fldl
mov
sbb
inc
xor
dec
addl
int3
fiaddl
loop
jb
and
repnz
aad
xor
jecxz
insb
stos
mov
cs
inc
push
cmp
rcll
or
sbb
sahf
or
xchg
mov
sbb
or
push
pushl
gs
mov
sbb
adc
mov
push
pop
mov
movsl
mov
clc
mov
and
xor
data16
shl
adc
inc
rclb
pop
mov
iret
mov
mov
xor
imul
mov
orb
xchg
aam
fmull
xchg
cli
pusha
je
inc
shlb
and
cwtl
negb
or
fiadds
int
adc
ljmp
adc
rcrb
sub
btr
or
mov
clc
sbb
mov
xchg
mov
xchg
xor
int3
push
xchg
and
jne
cmc
xchg
add
or
mov
mov
or
inc
outsl
add
xor
dec
sbb
cmc
inc
sti
ja
fs
mov
xchg
or
cwtl
and
cmpsb
ljmp
jmp
in
cmc
imul
push
shrl
imul
xor
in
mov
mov
or
push
imul
hlt
stos
insl
pop
pop
dec
add
enter
inc
mov
rcrl
js
out
xor
mov
xchg
and
push
out
pushf
mov
dec
jge
mov
movsl
jge
xor
cli
fcmovne
dec
insl
pop
adc
dec
call
dec
sub
icebp
cli
rcr
sbb
mov
gs
insl
adc
adc
dec
adc
add
sbb
icebp
repz
cmp
sbb
sbb
push
sbb
cwtl
out
fcompl
push
mov
lret
enter
aam
jo
imul
adc
lods
add
aas
fmuls
scas
imulb
or
mov
inc
jmp
adc
mov
fidivs
in
mov
pop
imul
jnp
pop
add
pop
sahf
cli
xchg
popa
mov
repnz
andb
inc
or
mov
sbb
sbb
test
je
faddp
mov
cmp
adc
cmp
or
and
mov
std
add
enter
clc
pop
inc
das
nop
jge
inc
or
pop
xchg
push
in
bound
dec
push
movl
inc
or
cmpsl
enter
xchg
dec
loope
or
or
sub
or
inc
xor
cmp
cltd
or
pushf
clc
mov
inc
movsb
fnstenv
lcall
mov
out
xchg
and
fiaddl
xor
xor
in
add
adcl
adc
fcmovbe
add
shll
dec
ljmp
push
xchg
push
xchg
clc
icebp
subl
mov
adc
or
sbb
cltd
adc
out
fidivrs
lret
lea
jae
test
mov
xor
and
loopne
test
in
sbb
ljmp
adc
dec
pop
and
fstps
rorb
cld
sbb
xor
mov
jmp
pop
dec
xor
mov
loopne
mov
pop
add
pop
pop
lock
insb
mov
pop
ljmp
cwtl
dec
dec
das
out
jecxz
outsb
or
out
push
data16
pop
out
and
std
jb
mov
push
xchg
fsubs
aam
inc
sbb
mov
inc
mov
push
les
inc
sbb
out
inc
mov
mov
mov
rorb
mov
adc
xor
out
int
add
pop
ljmp
stos
pop
push
fldcw
dec
dec
pusha
sti
std
mov
outsl
or
pop
sub
mov
clc
cwtl
andb
repnz
mov
or
mov
sub
aam
scas
jno
push
pusha
mov
push
orl
scas
push
xchg
test
hlt
cmpsb
sbb
dec
nop
or
int3
jmp
and
sub
jne
packuswb
jbe
adc
push
popa
push
std
mov
xchg
shlb
cmp
dec
das
outsl
adc
aad
test
or
push
or
cltd
pusha
sub
int3
mov
sbb
inc
xchg
sbb
push
or
aas
add
xchg
fmuls
inc
test
push
pop
in
out
into
sbb
and
fdivrl
outsb
sbb
fsubrs
pop
idiv
push
cmp
mov
or
decl
mov
and
push
fidivrs
push
push
lea
ljmp
aad
cmc
pop
adc
add
or
nop
sbb
mov
xor
add
jb
test
mov
xchg
orl
imul
mov
add
push
jne
mov
pop
or
add
xor
mov
fisttpl
xchg
add
xchg
mov
sbb
mov
pop
ljmp
pop
and
movsl
mov
jl
push
push
cmp
notl
xchg
js
pop
and
mov
add
cltd
fdivp
dec
scas
dec
xchg
pop
fldcw
and
fstps
fiadds
enter
test
negl
xchg
fiadds
adc
out
nop
dec
add
imul
mov
dec
adcb
sub
or
mov
push
push
dec
lret
fmuls
jbe
xchg
push
push
mov
add
or
lock
pop
adc
jecxz
mov
pop
je
adc
fcmovb
insl
adc
fidivrs
mov
mov
dec
sbb
mov
add
fs
test
imul
jbe
sbb
jnp
cmp
inc
daa
add
xchg
mov
mov
push
or
rcr
mov
push
shrl
fidivl
adc
cltd
roll
mov
push
sub
jne
adc
add
xchg
push
test
rcll
inc
pop
js
and
cmp
mov
mov
pop
xor
out
mov
push
gs
and
fdivl
lods
iret
jmp
popa
sbb
aad
adc
or
fs
mov
outsl
and
xor
sbb
and
hlt
xchg
fdivrp
fstps
sbb
movsl
mov
out
adc
mov
dec
push
bnd
xor
into
imul
cwtl
or
xchg
insl
and
pop
leave
xor
out
cli
dec
fadds
xchg
out
ljmp
dec
pop
shll
add
jo
dec
addb
dec
sbbl
je
subb
punpckhbw
or
insl
js
mov
gs
pop
fdivrs
mov
bound
ds
pop
fidivs
mov
cmpsb
and
pusha
mov
or
xor
add
mov
pop
cmpsl
add
push
mov
jp
nop
popa
pusha
push
test
inc
shl
fsubl
mov
jb
push
std
in
pushf
clc
add
jb
icebp
mov
mov
sub
pop
sub
jb
mov
adc
sbb
data16
cs
push
sub
rorl
or
mov
adc
dec
sbb
push
in
rcll
imul
out
push
sbb
mov
mov
in
pop
adc
mov
nop
ficoml
in
push
movl
xchg
addr16
sbb
sbb
and
mov
cs
pop
adc
mov
push
push
push
dec
pop
imul
pop
inc
or
js
add
lea
nop
mov
sbb
xchg
pushf
mov
cmp
addr16
jne
xchg
or
adc
lret
mov
dec
mov
inc
cmc
es
xor
pop
or
xchg
cmp
push
xlat
js
sti
js
push
push
cmp
xor
or
xor
ja
xor
xchg
call
leave
mov
jae
jecxz
and
imulb
jno
mov
pushw
and
leave
ss
add
xchg
inc
popa
arpl
mov
ror
jne
sbb
or
in
cld
jp
add
ljmp
jnp
sbb
mov
enter
cld
sbb
and
jne
pop
popa
xor
sarl
push
hlt
sahf
gs
rcl
push
psubsw
leave
cmp
in
in
fcmovu
int3
jp
insl
jge
rcrl
mov
cmp
fwait
es
mov
adc
and
movl
jo
pop
cwtl
sub
sub
fistps
push
mov
lcall
xchg
cltd
push
cmp
mov
sbb
sbb
inc
mov
pushf
mov
xchg
fidivs
call
cli
loopne
mov
and
test
pop
add
push
pop
xchg
scas
or
inc
out
push
mov
push
jne
jo
or
sahf
mov
or
push
pandn
lock
and
lret
adc
sbbl
xorb
or
jecxz
cmp
sbb
in
fwait
scas
ljmp
jbe
out
ficoms
lea
sbb
insl
inc
daa
push
xor
loope
jge
pop
jecxz
and
lret
push
mov
orl
pop
lahf
mov
test
ljmp
dec
loop
in
sbb
imul
mov
push
je
mov
add
or
add
pop
push
sbb
sbb
xor
push
bound
jne
imul
xchg
loope
fisttpl
add
push
fidivl
andb
mov
adc
cmp
adc
and
test
imul
stc
pop
dec
test
ljmp
stos
repz
jae
cmp
fldenv
pop
or
and
and
jne
hlt
arpl
adc
pop
lds
mov
pop
sbb
mov
enter
add
fistps
mov
add
mov
mov
sbb
mov
adc
mov
js
xchg
clc
jo
mov
mov
repz
int3
nop
xor
cwtl
pop
test
iret
pop
dec
enter
dec
xor
popa
in
push
sahf
fmull
outsb
mov
ret
sbb
shl
addb
inc
push
add
or
nop
sbb
cld
add
test
mov
mov
jne
dec
and
fsubrl
stos
sub
lds
pop
test
adc
in
sti
ret
sbb
xor
scas
cmp
in
dec
push
or
adc
adc
enter
clc
pshufw
add
shrb
jge
dec
ficoml
in
imul
mov
dec
push
xor
dec
pop
or
mov
dec
inc
mov
or
das
adc
pop
clc
mov
and
pop
add
sbb
mov
test
lret
sbb
mov
xchg
fmuls
sbb
dec
jo
push
xor
or
dec
mov
xchg
cmc
xor
and
add
and
repz
add
cwtl
or
xlat
sbb
rcr
xor
mov
stos
jne
ss
mov
xchg
outsb
imul
dec
adc
nop
daa
and
fsubrs
pusha
cmp
test
ljmp
sbb
mov
int3
insl
cmp
push
pushf
test
xchg
dec
push
dec
cmpsl
jmp
cmp
in
adc
and
sbb
repnz
or
fisubs
inc
adc
clc
sub
repz
xor
and
lcall
mov
pushf
push
or
pop
mov
repnz
inc
jne
fmuls
cld
adc
lcall
mov
daa
cmpsl
cmc
fucom
int
and
xor
jp
mov
mov
cmpsl
push
das
int
sub
or
mov
sub
xor
bound
les
xor
out
xor
sahf
arpl
arpl
xor
jno
and
test
dec
jp
adc
jp
stos
dec
cld
jbe
jp
xchg
pop
sbb
pop
adc
push
cltd
adcb
fwait
add
adc
call
jne
cwtl
adc
xchg
and
push
imul
scas
cmp
aas
adc
mov
dec
sarb
xlat
test
mov
into
cltd
sbb
and
test
add
push
out
mov
sub
adc
data16
in
test
mov
pop
dec
xor
sbb
dec
xor
pop
fmull
cmp
movsl
stos
dec
push
xlat
sbb
int
sbb
dec
and
and
subb
clc
enter
or
sub
xchg
mov
insl
mov
push
ss
sarl
mov
inc
or
jo
xor
rorl
jne
push
add
loop
notb
sbb
repz
mov
or
pop
out
add
not
aas
add
ljmp
sbb
negl
imul
lock
mov
adc
test
xor
addl
xlat
mov
jo
mov
adc
adc
mov
popa
mov
or
mov
push
xchg
mov
imulb
sbb
outsl
sbb
dec
test
xchg
aam
in
daa
in
int3
mov
pop
loope
test
lock
mov
and
pop
cmp
lcall
inc
movsb
mov
sub
mov
insl
push
cmc
cli
shrb
add
or
cli
test
and
jae
or
and
or
mov
test
fiadds
mov
sbb
test
cmpsl
xor
adc
mov
or
cs
sub
js
add
aaa
xor
pop
call
pusha
xchg
jno
in
test
and
gs
mov
pop
add
push
and
and
stc
out
and
sbb
dec
stos
xchg
out
mov
mov
adc
ljmp
dec
cwtl
adc
shrb
and
sbb
mov
or
add
jne
and
sbb
or
sahf
test
aaa
dec
pushf
loope
mov
mov
outsb
mov
sbb
pushf
test
xchg
pop
pop
in
mov
adc
or
lret
fnsave
sbb
add
test
or
icebp
in
or
in
adc
push
fsubrl
mov
jl
mov
shrl
or
mov
or
xor
pop
stc
xchg
pushf
mov
dec
or
mov
repz
outsl
cmc
or
loop
psllq
icebp
sti
or
lods
arpl
push
add
imul
mov
das
mov
std
and
mov
and
inc
dec
imul
pushf
push
sub
insb
cltd
xchg
push
pop
unpckhps
add
sub
or
mov
inc
insl
dec
test
push
inc
dec
arpl
xchg
repnz
mov
imul
repz
dec
dec
sahf
adc
and
add
orl
xor
cltd
cwtl
mov
xchg
jmp
xchg
dec
mov
sbb
outsb
fcoms
pop
aas
cli
xlat
and
mov
loope
rorb
sbb
in
pop
cmp
xchg
loopne
nop
mov
lds
nop
mov
jo
in
les
imul
mov
xor
ret
nop
add
adcb
sub
adcl
push
mov
jg
pop
adc
jne
jge
outsl
mov
push
dec
xchg
rolb
or
push
enter
push
mov
jg
xchg
out
push
ljmp
add
in
cld
pop
loopne
xor
outsl
pop
popa
enter
cltd
jno
lcall
in
xchg
dec
xchg
and
cwtl
addr16
and
lds
xor
popa
and
jns
popa
mov
popf
mov
xchg
xchg
inc
mov
xchg
bound
push
dec
in
arpl
fiaddl
xor
sbbl
stc
cltd
lret
lea
jp
lods
or
and
gs
js
jecxz
and
lret
xchg
xor
or
loope
add
inc
mov
sub
add
pushf
sub
mov
imul
lock
lcall
mov
mov
push
inc
dec
push
fldl
das
and
jg
int
sbb
fists
xor
pop
movsl
mov
cmpsb
sbb
push
leave
decb
mov
mov
jge
mov
jg
ds
push
mov
push
jne
and
je
add
popf
cmovo
sbb
lea
je
cmp
movsl
call
lcall
jp
sbb
sbb
dec
mov
or
xchg
stc
xchg
lea
and
dec
push
mov
popa
loope
imul
bound
pop
fiadds
gs
mov
mov
out
aas
das
sbb
js
fdivs
mov
pop
fimull
cmpsl
add
add
or
xor
mov
dec
outsb
fucom
lea
out
push
pushf
sbb
jno
push
adc
jp
sbb
dec
cmp
pop
nop
sbb
sbb
adc
and
pop
test
push
into
push
pop
push
cmp
and
push
stc
push
fidivrs
pop
outsl
enter
mov
pop
lods
lods
lock
pop
std
imul
mov
pop
aad
adc
test
or
push
arpl
push
dec
lds
imul
dec
clc
fmull
mov
imul
xchg
test
push
dec
jl
mov
sbb
lea
mov
inc
push
dec
icebp
fnstenv
sbb
imul
dec
in
int3
aam
xor
lods
test
lea
adc
jo
inc
dec
test
pushf
push
dec
fdivs
pushf
popa
das
test
pop
sub
jne
in
sbbb
cmp
add
mov
iret
gs
loopne
and
pop
jne
in
jecxz
push
lcall
cmpsl
wbinvd
pop
insb
int
sub
jge
movntq
out
adcl
scas
mov
or
movsl
popa
inc
movsl
shll
pop
inc
movsl
inc
xor
add
add
or
int
or
dec
cmpsl
push
dec
mov
pop
jne
clc
in
test
movsl
mov
divb
aas
dec
arpl
lds
aad
or
xor
adc
xchg
lret
shll
xchg
jno
ja
jp
dec
fwait
test
dec
jmp
into
orb
push
push
push
lea
inc
sbb
push
pop
add
mov
add
iret
xor
pop
sbb
mov
lret
mov
xchg
fbstp
xchg
movsb
jno
cs
jne
pop
sbb
pop
mov
setge
sbb
shlb
sbb
push
sub
jno
push
insb
cmp
wbinvd
or
pop
aaa
sbb
sbb
outsl
aaa
imul
jg
jns
jge
jno
jne
aaa
dec
dec
dec
inc
inc
inc
inc
pop
aaa
pop
pop
pop
push
push
push
push
scas
aaa
test
mov
mov
mov
dec
mov
test
xchg
xchg
xchg
xchg
out
jmp
loope
in
stc
sti
xchg
std
js
cmc
imul
rol
aaa
fcmovnu
xlat
rcl
aad
sub
xor
mov
int3
cmp
ds
cmp
fisttps
mov
adc
or
insl
addr16
fsubl
cld
ss
lahf
or
jecxz
add
mov
aam
sub
add
dec
mov
add
stc
add
or
xlat
jne
jp
or
or
pop
sbb
add
adc
jge
mov
lahf
xchg
cmpl
xchg
xchg
subl
jne
rcr
rcll
xor
xor
xlat
dec
cli
ret
pop
scas
xor
ja
xor
cli
inc
adc
pop
inc
stos
ror
iret
fidivrs
xchg
xchg
xor
ja
sbb
cmpsb
dec
test
dec
insl
test
test
and
icebp
cmpsl
xchg
xlat
cmp
pop
mov
add
pop
dec
bound
push
xor
push
jne
push
into
and
xchg
cli
lds
pushf
stos
xlat
xchg
xlat
pusha
enter
orl
int
sub
push
and
outsb
inc
jne,pt
jns
mov
cmp
insl
sbb
push
movl
and
and
dec
lcall
push
in
les
out
loopne
dec
rclb
dec
mov
sub
jo
push
jne
test
aaa
xchg
inc
inc
ds
aam
out
pop
jbe
pop
sbb
jg
iret
xchg
bound
lock
xchg
mov
ja
jg
xchg
iret
push
test
xchg
cwtl
sbb
lds
rclb
push
or
sti
scas
loope
or
mov
jmp
jns
cli
and
push
dec
adc
adc
dec
int
jne
movsl
adc
push
cmp
or
dec
mov
shl
fldenv
int3
test
insl
movsl
jns
jecxz
int
jmp
xor
lea
inc
pushf
jmp
cmc
sub
and
push
lods
add
adc
adc
pop
scas
mov
cmp
push
ror
jo
lods
movsl
stos
lds
or
dec
int
fbstp
jae
xlat
lods
loopne
push
mov
fcomi
push
loope
shlb
shl
sub
sub
sub
notb
mov
dec
and
das
leave
in
imul
popl
stos
sub
mov
movsb
loope
outsb
lds
push
into
jbe
and
pop
cs
test
xor
stos
inc
aad
das
data16
sbb
mov
in
mov
les
pop
int
lcall
sbb
mov
roll
xchg
fisttpl
mov
fsubrs
dec
jo
xchg
inc
push
mov
xor
jne
mov
das
pop
xchg
test
das
lds
inc
or
movzbl
decl
sbb
leave
mov
int
cmp
pshufw
movntps
or
repz
or
or
insl
mov
lss
pop
or
and
cmp
cmp
out
inc
out
test
add
or
sbb
and
aaa
adc
sbb
outsb
jo
aaa
fs
jle
jb
je
js
dec
dec
push
inc
aaa
inc
inc
dec
pop
pop
pop
pusha
push
aaa
push
push
pop
stos
lods
scas
mov
aaa
movsb
cmpsb
test
mov
mov
mov
xorb
xchg
xchg
aaa
xchg
xchg
cwtl
ljmp
out
cli
cld
incb
repnz
hlt
idiv
lret
rol
aaa
enter
loopne
aaa
aam
fsubrs
sub
and
aas
xor
xor
pop
stc
sub
inc
aaa
out
cmp
fcmovnbe
pop
enter
cmp
addb
sahf
orl
xchg
and
cmp
jge
xchg
dec
xor
pop
arpl
adc
pusha
cmpsb
addb
shll
sbb
sbb
xor
les
and
push
sbb
lea
popl
push
xchg
iret
or
leave
pushf
and
add
rcrl
jne
or
add
pushf
sub
lea
or
pop
lods
test
lret
cld
sub
xorl
jecxz
jb
sbb
sbb
xchg
rcl
outsl
sbb
and
adc
or
add
xor
jecxz
scas
xchg
es
lcall
aam
leave
fld
pop
popa
lahf
sahf
stc
lods
cwtl
adc
lods
jno
and
ss
pop
insl
imul
mov
sub
int
jmp
jmp
lea
or
sbb
inc
data16
jne
sub
add
pop
ja
pop
pop
pop
test
shl
mov
adc
pop
push
mov
sarl
jecxz
push
mov
fldt
or
mov
mov
ret
std
xor
repnz
push
jp
fiadds
push
mov
scas
gs
jne
pop
int
mov
mov
sbb
dec
stc
lods
add
test
cmp
cld
or
add
aad
mov
cmp
push
jmp
jmp
aaa
mov
shl
mov
inc
shrl
xchg
mov
or
pop
shl
stos
setg
xchg
mov
or
or
pop
mov
dec
dec
cmp
outsb
mov
test
rorl
xchg
dec
andb
dec
inc
out
cwtl
mov
addl
outsb
subl
arpl
lea
ret
stc
addb
mov
frndint
adc
stos
dec
addl
es
scas
enter
orb
jne
lds
push
shlb
std
jmp
jmp
aad
leave
jo
lahf
clc
mulps
pushf
pop
mov
push
sub
dec
dec
adc
adc
adc
dec
fsubrs
inc
adc
and
sbb
mov
fists
adc
or
xor
outsb
jecxz
enter
sbb
jne
stc
mov
jg
inc
pop
push
idivl
mov
sbb
fdiv
sub
fwait
sbb
ror
test
cwtl
xlat
daa
aas
pop
popf
shr
fdivs
and
mov
push
dec
fiadds
movsl
das
push
cmp
add
jne
push
sub
pop
dec
test
jl
movsl
cwtl
push
sbb
stos
mov
add
jb
stos
ret
mov
cmc
adc
mov
mov
mov
fprem1
jg
mov
xchg
dec
mov
mov
aas
pop
adc
ret
mov
arpl
enter
sahf
mov
xorb
ds
lods
xor
jbe
out
push
or
iret
fwait
lea
fnstenv
adc
ss
inc
pop
pcmpeqb
sbb
rcrl
or
mov
iret
pop
sub
rcll
cmp
pop
adc
mov
or
jecxz
stc
push
or
ds
sub
clc
fs
inc
cld
fbld
xchg
xchg
ret
cld
jno
rorl
in
mov
mov
dec
jb
or
aad
push
push
push
int
iret
jecxz
lahf
adc
icebp
lcall
lahf
mov
xor
sub
cli
or
rol
jbe
fistl
test
xchg
sbb
mov
jno
xchg
in
jnp
mov
pop
xor
mov
push
aaa
mov
mov
rcrl
ret
fs
out
je
mov
repnz
cmp
mov
inc
xchg
mov
fs
aad
mov
jg
addr16
ljmp
leave
lods
adc
sbb
mov
add
fnsave
imul
jo
or
gs
jmp
es
push
enter
test
std
cmc
mov
in
int
push
xor
cmp
jno
test
insb
mov
clc
mov
mov
les
les
xchg
sbb
sbb
test
icebp
lcall
add
xchg
cmp
roll
inc
imul
int
cld
subl
jge
jne
cmpsl
repz
cmpsl
stos
jge
stc
sbb
lahf
fistpl
lahf
repnz
lods
inc
xlat
ljmp
pushf
rolb
les
or
das
inc
ret
or
fildl
jge
imul
test
test
test
dec
mov
mov
lds
lret
cmc
dec
jecxz
test
out
mov
mov
bound
out
fwait
mov
stos
insb
xchg
stos
cwtl
cmp
arpl
jp
fsub
addr16
aad
aad
outsl
or
sar
inc
fmull
dec
pop
popf
mov
sti
rcll
sbb
insl
imul
xchg
xchg
mov
push
in
leave
dec
adc
or
mov
jb
pop
into
insl
in
rolb
sub
jge
cltd
adc
lods
push
adc
push
test
xor
bound
mov
lds
and
pop
insb
mov
xor
int
pop
inc
mov
dec
imul
or
insl
add
mov
dec
into
adc
jecxz
popf
sarl
stc
imul
popf
daa
push
outsb
ret
cmp
or
enter
jmp
add
add
sub
and
insb
inc
dec
mov
movsl
and
fstpl
std
fs
or
pop
in
cmc
jnp
jne
pop
fistps
or
dec
pop
jno
movsl
lret
xchg
jns
pop
in
mov
test
add
or
dec
test
lea
add
pop
push
add
jmp
add
jge
sbb
popa
xchg
mov
in
popf
insl
outsl
sbb
or
cmpsl
popf
adc
pop
xchg
lods
jo
gs
jmp
jecxz
cmc
jp
fstpl
imul
pusha
ret
push
cmp
or
jne
push
pop
adc
jmp
adc
push
aad
inc
ret
js
jp
out
gs
test
lods
sub
inc
pusha
dec
add
push
push
jns
test
nop
hlt
inc
mov
maskmovq
testl
stos
call
cmp
dec
in
xor
shll
jae
jecxz
add
jne
push
push
sub
dec
or
outsb
jg
shrl
adc
sarb
fistl
mov
cld
push
out
fstpt
mov
jl
mov
sbb
mov
jne
or
or
jo
addb
dec
inc
or
mov
cmp
push
iret
mov
pop
cmpsl
xchg
add
test
int
sub
dec
xchg
dec
rcrb
enter
cwtl
sbb
sbb
icebp
sahf
mov
dec
test
hlt
clc
cmp
xor
or
pop
nop
lea
ficoms
pop
pusha
sub
daa
pop
gs
push
dec
scas
add
mov
push
loopne
cmp
jmp
jns
pop
cmc
in
int
lods
outsl
pop
repz
lea
aad
inc
les
test
insl
dec
imul
sbb
and
test
push
dec
pop
lea
mov
jge
mov
test
test
cmp
inc
or
ja
lds
sbb
imul
lods
rcll
or
push
in
lds
cmp
dec
mov
jne
jge
xchg
dec
add
test
call
test
lea
pusha
dec
dec
test
js
orb
sub
aad
lds
test
push
dec
mov
lods
push
sbb
jne
sbb
or
leave
push
outsl
popf
icebp
adc
pmaxsw
ror
insw
std
push
or
cmp
sbb
sub
lahf
in
test
addr16
lea
xor
bound
or
mov
lods
mov
jne
data16
inc
outsl
popf
cli
push
pop
xchg
sbb
insl
leave
lods
mov
push
dec
mov
out
sub
adc
test
and
push
punpckhdq
push
cmpsl
dec
sbb
cmp
mov
imul
or
movsl
cmp
sbb
adc
cmp
xchg
jne
dec
mov
aaa
or
lods
adc
dec
shlb
xchg
clc
jne
je
mov
xorb
cwtl
aaa
divl
inc
ret
xchg
jg
fimuls
aaa
sub
mov
pop
adc
pop
push
je
cmp
or
xchg
or
je
mov
lahf
mov
roll
lcall
rolb
out
mov
clc
inc
mov
repnz
cmp
cmp
mov
aaa
and
mov
or
inc
xor
daa
push
dec
into
adcb
lock
cmp
aaa
xchg
xchg
mov
andps
into
dec
adcl
and
add
and
test
inc
outsb
mov
mov
jmp
adc
divl
je
stc
xor
dec
jne
in
inc
and
push
stc
mov
inc
negl
cmp
inc
pop
bound
sub
mov
repnz
popf
lcall
jmp
push
cmp
jne
cmp
sbb
dec
aad
pop
daa
cmp
int
notb
imul
pop
aaa
jg
in
cmpsb
ljmp
adc
inc
aam
mov
inc
movsb
push
pop
mov
mov
fidivs
stos
mov
mov
loop
jo
in
push
mov
adc
adc
mov
popf
sti
lret
nop
mov
les
mov
insl
push
jl
cmp
ret
mov
push
jno
xchg
cmp
test
shlb
adc
aaa
out
mov
jmp
inc
imul
mov
add
lea
mov
ss
pop
fdivs
pusha
aaa
dec
rol
int
sbbl
dec
in
or
push
xor
cmp
inc
mov
dec
sbb
movsl
or
data16
xor
out
add
in
jnp
add
into
add
or
aaa
add
mov
in
dec
cmp
stc
mov
jecxz
mov
mov
outsl
or
jbe
jmp
aaa
rclb
lods
xchg
jmp
xchg
push
decl
xor
cmp
or
aaa
jecxz
mov
add
cmp
push
add
xor
hlt
jbe
or
mov
ror
cmp
movsl
cltd
sub
dec
gs
or
adc
or
sbb
pop
or
sbb
aas
sbb
jg
sbb
pop
sar
mov
and
es
test
ret
movsb
mov
and
dec
jne
lods
rcr
shrl
sti
loope
and
push
push
cwtl
mov
movsl
sbb
mov
dec
stc
mov
cwtl
and
push
lret
in
xor
inc
adc
dec
xchg
push
push
and
sbb
dec
jns
dec
jae
xchg
sti
outsb
in
popf
cmp
pushf
adc
sub
push
xor
out
fisttpl
pop
and
dec
adc
iret
xchg
mov
xor
xor
movsl
xlat
pusha
dec
jno
xlat
dec
pop
jge
xchg
inc
xchg
or
repz
jl
mov
lcall
push
jno
cmpsl
xchg
xchg
into
push
loopne
jmp
dec
outsb
pop
dec
mov
mov
shrb
gs
fsubrs
das
sub
or
push
aas
push
mov
mov
adc
aam
cmpsl
push
outsb
add
mov
loopne,pt
fmuls
daa
add
mov
sahf
mov
mov
adc
lahf
xchg
xor
xchg
push
push
xchg
test
testb
dec
and
pop
mov
in
clc
fsubs
das
aas
cmp
enter
fsubrs
gs
jge
jne
dec
aas
inc
aas
pop
aas
push
aas
lods
aas
movsl
aas
mov
aas
test
popf
aas
xchg
aas
in
aas
in
fldt
or
adc
jo
cmpb
aas
mov
into
aas
sub
daa
aas
movswl
sbb
inc
outsb
test
pop
loope
leave
shrb
enter
sub
mov
push
shrb
enter
mov
test
xchg
adc
mov
mov
loopne
fsubs
mov
fnstcw
mov
adc
adc
xchg
fidivl
mov
mov
adc
movsl
pop
xchg
adc
adc
pop
push
lods
xchg
mov
xchg
call
rcll
adc
outsb
xchg
dec
xchg
dec
xchg
push
xchg
mov
pushf
xchg
ljmp
mov
and
shl
enter
fdivrs
add
push
xor
xor
pop
xchg
cwtl
mov
mov
mov
rorl
and
enter
xor
dec
lret
clc
sub
cmp
call
push
lahf
cmp
push
xchg
lock
loopne
or
and
jge
stos
cmp
inc
mov
mov
push
adc
push
mov
mov
jb
pop
movsl
mov
cmpsl
lea
jp
scas
xorb
and
lret
popf
sub
cmp
cmp
daa
jnp
sub
xor
and
sub
push
inc
jge
stos
scas
jb
ja
je
jno
jbe
or
sub
mov
jmp
xchg
test
int3
mov
pop
outsb
dec
fldcw
gs
xchg
adcl
add
test
insb
hlt
ds
call
push
cmp
cmp
cmp
mov
in
sub
inc
mov
xor
xor
in
aam
xor
xor
xor
xor
xor
xor
jge
mov
insb
jmp
jno
jbe
jae
push
loope
add
mov
adc
scas
cli
mov
dec
movsl
aad
ds
or
jb
dec
aas
pop
aas
pop
aas
cmpsb
aas
mov
nop
aas
pushf
aas
in
aas
cli
aas
hlt
aas
les
aas
cmp
mov
lahf
adc
pop
xchg
sbb
xchg
adc
jne
inc
xchg
lods
xchg
cltd
xchg
out
stc
xchg
xchg
fsts
push
xchg
bound
mov
ja
inc
outsb
test
mov
cmpsb
int3
mov
imul
sbb
dec
aas
pop
aas
sahf
aas
pop
ss
rolb
fadd
das
sarl
aad
or
js
pop
xor
xor
xor
xor
xor
jge
lods
fwait
jb
ja
je
jno
jbe
mov
cmpsl
jb
ja
je
jno
jbe
jae
jbe
push
adc
mov
lods
lds
lahf
int
mov
dec
aad
mov
push
test
inc
ret
mov
clc
fsubrs
jg
inc
enter
cmp
inc
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
sti
mov
and
cmp
xor
das
push
daa
inc
aas
push
aas
mov
int3
icebp
push
stc
ds
xor
sub
jnp
pop
xchg
push
adc
xchg
call
sub
add
and
dec
mov
leave
fnsave
std
jg
scas
jp
jo
xor
sub
cmp
inc
pop
xor
jge
cmpsl
xchg
push
add
jecxz
roll
outsb
inc
pop
mov
and
lds
and
sub
lret
addr16
das
stc
shrb
dec
std
cmp
and
sub
testl
inc
out
nop
lcall
test
sbb
cmp
popa
mov
in
mov
xor
je
jno
jbe
jae
jbe
push
add
jno
dec
push
test
outsb
movsb
fiadds
pushf
inc
inc
fcomps
out
xchg
jb
xchg
in
sbb
mov
xchg
xor
and
sub
sub
xor
jmp
sub
sub
adc
or
sbb
xor
xor
xor
xor
neg
or
imul
and
sbb
stos
aas
xor
in
testl
lcall
das
inc
daa
pop
xor
xchg
jae
jbe
jbe
jbe
push
push
scas
mov
ret
fimuls
jns
mov
les
lods
jmp
fbld
sbb
and
xchg
mov
aaa
shll
sahf
xor
jb
ja
fs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
xchg
imul
push
loope
xchg
dec
xor
lret
fists
sarb
adc
dec
lds
test
outsl
stos
fwait
inc
sbb
and
push
fcmove
fdivrs
sub
xor
and
cmp
xchg
cwtl
push
adc
xchg
daa
xor
sub
xor
jge
mov
lcall
dec
pushl
lret
clc
xchg
push
fnsave
ljmp
enter
sub
xor
and
sub
cmp
inc
int3
pop
jg
lods
ja
ja
jl
adc
dec
push
nop
mov
cwtl
ret
cmpsl
xlat
shlb
sbb
out
loopne
push
mov
cmp
inc
lcall
mov
fs
addb
test
jno
push
pop
testb
push
mov
dec
push
dec
sbb
jbe
pusha
sbb
insb
add
cmp
out
je
dec
das
dec
dec
dec
pop
lcall
mov
lds
and
inc
push
and
mov
scas
sub
xor
jb
add
stos
mov
cmpsl
adc
enter
mov
mov
push
shrb
mov
mov
mov
lea
lahf
xlat
inc
fcoms
xor
test
xor
scas
gs
das
push
mov
inc
loope
data16
lds
mov
imul
cmpsb
mov
aaa
std
lods
inc
shl
imul
dec
int
clc
jne
aad
mov
scas
adc
ja
je
jno
jbe
jae
jbe
jbe
jbe
jbe
jbe
jbe
fs
xchg
lea
add
cmpl
add
test
pop
xchg
ljmp
outsb
movsl
dec
mov
out
test
popf
fimull
aas
dec
aas
pusha
mov
insl
jb
ja
je
jno
jbe
jae
jbe
jbe
jbe
bound
imul
mov
lods
adc
xchg
ret
xchg
cmp
adc
dec
inc
cltd
mov
shl
outsb
nop
mov
mov
xchg
loopne
fadds
mov
movsl
xchg
sbb
mov
lea
sbb
mov
mov
add
push
ds
cmc
mov
xor
xor
cmp
xor
adc
adc
insb
lahf
xchg
mov
mov
push
pop
lods
jbe
jbe
jbe
jbe
test
fmul
clc
dec
adc
push
cli
mov
or
mov
or
jl
mov
push
out
xchg
mov
loop
fcomp
sub
push
popa
pop
xchg
pop
adc
lcall
lods
jge
cmpsl
jg
mov
mov
pop
movsl
inc
inc
cld
loopne
cmp
pop
mov
out
dec
cmpsb
scas
mov
into
xchg
out
sub
pusha
adc
mov
mov
adc
cmp
mov
mov
jb
jg
mov
sub
adc
std
xchg
cmc
adc
xchg
aad
xor
std
pop
mov
scas
clc
lods
rcrb
sbb
or
imul
nop
dec
out
nop
into
mov
inc
shrb
fsubrs
das
adc
js
mov
movsl
jge
jne
je
mov
lcall
mov
lret
nop
sub
mov
fwait
test
popa
or
xchg
clc
enter
cmp
enter
mov
jo
mov
jno
jno
outsb
or
sbb
inc
push
xchg
dec
xchg
pusha
lcall
cmp
mov
mov
mov
mov
mov
mov
mov
pop
or
jge
dec
lret
mov
mov
lea
outsb
int
test
cmp
or
and
popa
dec
jo
push
into
push
sub
movsb
mov
cmp
nop
aas
mov
mov
insb
nop
fwait
add
cmp
adc
cmp
cmp
cmp
pop
or
push
mov
xchg
jne
dec
xchg
inc
xchg
pop
xchg
push
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
push
adc
xor
lahf
lea
mov
mov
xor
add
in
fnstcw
mov
mov
mov
int
jne
shll
push
fdivrs
mov
push
repnz
insl
mov
scas
mov
ja
cmpsl
xchg
mov
dec
cmc
orb
mov
pop
sbb
rolb
xchg
daa
in
scas
lret
pusha
cli
lods
repnz
shll
shrb
dec
mov
mov
mov
mov
rorb
add
pushf
xchg
mov
aaa
test
rclb
lods
dec
in
scas
jb
mov
xchg
xchg
mov
call
fldl
aam
sbb
xchg
aad
fst
xlat
cmp
movsb
or
pop
into
popf
nop
push
xchg
rorl
mov
jnp
mov
ss
mov
sbb
pop
icebp
into
sub
lcall
mov
cmp
and
sub
jge
hlt
cmp
aam
push
push
push
test
push
mov
dec
mov
pop
mov
into
dec
flds
ja
push
mov
lea
and
cltd
ret
pop
xchg
sub
js
mov
movl
es
loope
stos
scas
add
aad
jne
mov
jbe
ret
adc
jmp
push
dec
mov
xchg
pop
hlt
insl
xlat
int3
cmp
pop
mov
outsl
lea
dec
pop
insl
in
mov
pop
jge
popf
push
inc
stos
pop
das
pop
lahf
jmp
inc
jb
push
test
mov
dec
inc
inc
aas
xor
mov
mov
movl
fnsave
fistpl
mov
push
and
js
mov
outsb
dec
push
mov
pop
rcll
xorl
mov
sub
ds
cmp
or
mov
pminub
ffreep
jne
dec
dec
imull
imul
leave
shr
mov
hlt
mov
test
add
inc
dec
int
xor
imul
xchg
sbb
test
add
sbb
push
cs
mov
mov
mov
lcall
jge
pop
push
inc
dec
test
push
mov
mov
lret
outsl
movsl
mov
stos
jnp
push
das
mov
imul
or
mov
push
mov
jmp
jae
ret
xor
mov
sub
sbb
into
sub
js
ficoml
fstpl
ret
mov
std
mov
cmp
and
pop
xorb
out
pop
cwtl
mov
mov
test
sub
ljmp
test
iret
fnstsw
stos
mov
mov
rcr
int
iret
sub
mov
in
call
add
adc
jmp
and
stc
insl
dec
add
mov
scas
movsl
and
add
jp
cmpsl
jns
pop
test
jl
ror
repnz
dec
test
lds
mov
sarl
lods
xor
or
mov
jmp
pop
add
dec
fisttpll
lds
ja
sbb
jecxz
push
adc
pop
sub
cmp
movsb
rcll
mov
inc
xchg
jno
fildll
dec
je
test
xchg
mov
xchg
push
and
in
ljmp
pop
ds
pusha
jnp
lea
mov
int
xor
or
mov
push
in
xchg
out
jnp
ljmp
iret
cmp
lahf
in
mov
dec
xor
dec
insb
inc
cmp
push
sub
out
sub
popf
fildl
lahf
dec
mov
js
xchg
sbb
lea
lahf
shl
sub
aas
ret
sbb
test
clc
mov
fistps
inc
pop
lods
sbb
mov
pusha
sbb
jmp
mov
xchg
jmp
dec
adc
in
lret
mov
dec
push
lods
lea
xchg
or
leave
insb
fnsave
fsubr
test
mov
popf
push
insl
jl
dec
and
jmp
outsl
je
pop
lret
test
and
sbb
test
pop
jp
xchg
sub
sbb
cs
lds
mov
adcb
mov
fwait
jo
int
test
test
xor
int
xor
inc
roll
aas
lret
or
decl
jecxz
sub
int
jnp
cltd
jge
jmp
push
mov
sahf
adc
mov
imul
adc
adc
orl
je
lahf
lea
shll
adc
cmpsl
cmp
or
vmovhps
xor
in
fcmovu
notb
loope
out
std
dec
pop
fistpll
dec
fbld
xchg
jmp
addr16
lea
popf
shlb
cmp
sbb
inc
stc
and
jp
sbb
outsl
mov
sarb
pop
sbb
push
pop
filds
std
das
xchg
gs
push
and
out
sub
pop
ds
cmp
out
mov
jecxz
shrb
push
scas
mov
mov
adc
inc
enter
mov
inc
mov
sarb
gs
ret
bound
pop
sub
aad
pop
and
shll
imul
jnp
dec
ret
rcrb
daa
pop
mov
add
cmp
cmp
or
xor
and
pop
mov
xchg
jl
cmp
cli
or
adc
pop
and
adc
sarb
imul
iret
and
adc
jns
cmp
inc
adc
push
leave
adc
mov
out
scas
aad
jg
out
int3
lea
cmp
adc
xchg
out
pop
inc
shrl
insl
fdivrp
add
cs
xorl
cmp
pop
scas
push
push
cmpsl
mov
leave
add
in
ja
test
scas
sub
dec
cmp
dec
aaa
jecxz
jmp
jmp
dec
push
in
insl
out
mov
sbb
and
div
fimull
rorb
jmp
or
xor
cmp
aam
pop
inc
rcr
fdivl
inc
xchg
imulb
jne
scas
or
icebp
scas
shlb
js
jne
xchg
lods
jns
adc
add
ja
flds
push
adc
dec
push
mov
test
aad
mov
jne
cmp
test
test
dec
cmpsl
pop
xchg
sbb
xchg
andl
sbb
adc
test
test
test
fwait
outsb
mov
pop
leave
xorl
and
push
inc
mov
int3
push
nop
movsl
xor
mull
jno
pop
cmpsl
jge
dec
imul
jnp
jl
mov
xchg
scas
inc
mov
adc
leave
xchg
fistl
or
adc
sub
dec
std
mov
jle
dec
push
rcrl
movsl
stos
push
int
outsb
int3
jle
pop
xor
sbb
test
xor
sbb
sbb
lods
fwait
mov
stos
lcall
mov
or
das
movsl
into
sub
test
inc
in
xchg
leave
imul
out
push
movsb
ja
lret
sbb
iret
hlt
xor
adc
gs
cltd
out
or
popf
jne
jne
shl
sbb
inc
in
and
andb
mov
popf
es
push
sbb
testb
pushf
xchg
popa
mov
ret
and
cltd
dec
lretw
xorb
sbb
sub
mov
push
out
dec
lods
arpl
cltd
cmp
inc
aaa
jmp
test
xor
inc
cwtl
fwait
insb
mov
test
shlb
push
gs
adc
xchg
xchg
ret
loope
jnp
jne
pusha
cs
addr16
mov
fs
xchg
mov
int
nop
jp
push
sbb
pop
imul
mov
pop
inc
mov
jecxz
lods
inc
icebp
sub
xchg
jbe
push
lods
orb
and
xchg
fimull
sub
push
insb
add
mov
loope
inc
dec
inc
push
inc
stc
xor
xor
test
nop
mov
mov
mov
jl
xchg
sbbb
stos
and
mov
xchg
jne
ds
add
testl
xor
in
fwait
bound
das
mov
mov
jne
cmp
sub
jl
adc
outsb
lret
inc
test
insb
outsl
loopne
sub
push
or
lds
sbb
mov
sahf
jg
cmpsl
xchg
mov
lret
loopne
sub
int
repnz
int
mov
movsb
xchg
test
insl
mov
fldenv
pop
mov
push
sub
dec
shr
and
dec
sbb
sub
inc
dec
sub
xchg
lods
ret
out
aad
int3
xor
pop
dec
jns
aas
lds
xlat
mov
push
pop
scas
ja
push
js
mov
ja
aaa
pop
mov
in
jbe
shlb
add
xor
jmp
insb
dec
mov
cltd
shll
subl
test
lea
inc
sub
flds
movsb
movsl
pop
int
adc
mov
in
fnstcw
pop
stc
pop
xchg
jg
sub
ret
jo
xor
xchg
sbb
push
cli
int
aad
subl
dec
lea
das
sahf
dec
xchg
ja
jns
cld
mov
test
dec
jno
stos
icebp
nop
es
xor
fdivr
inc
je
shrb
pop
mov
mov
adc
dec
fxam
shlb
mov
xchg
shrb
lahf
daa
nop
jle
dec
push
lcall
les
or
add
push
or
outsl
xchg
push
cli
jnp
cmpl
inc
lret
shrl
out
cmp
std
push
mov
add
mov
push
mov
cli
scas
pop
je
stos
jo
loop
cli
notl
out
push
inc
cld
jo
jmp
xchg
nop
cmp
mov
out
mov
lods
sbb
scas
add
lahf
mov
add
push
outsb
inc
rclb
shll
dec
pop
mov
jge
adc
push
push
cwtl
in
xchg
pop
outsb
jo
out
pop
andl
pop
addl
sub
cmpsb
dec
sbb
cld
out
and
xchg
dec
inc
cmp
adcb
fldt
int3
inc
movsb
push
inc
and
push
pop
fwait
sbbl
push
sbb
sub
add
std
jp
stc
or
mov
cli
or
mov
pop
bound
cmp
adc
mov
sub
jbe
and
cmp
mov
out
add
ss
dec
test
mov
dec
mov
jo
pushf
inc
inc
icebp
mov
jb
stos
mov
dec
mov
or
lahf
mov
dec
push
das
and
or
jb
andl
push
or
sub
leave
and
loopne
cmpsl
outsb
sbb
cmp
insl
in
cmp
mov
movsl
jbe
out
mov
jb
leave
fisubl
insl
push
mov
cmp
push
lods
add
xor
cmp
add
test
cmp
ret
xchg
mov
fdivl
push
cmpsl
flds
inc
push
xchg
or
test
sbb
xchg
test
lods
mov
sti
mov
cld
fbld
sbb
outsb
jp
outsb
out
mov
je
xor
cmp
xchg
cmpsl
pop
pushf
jmp
jbe
lock
xor
in
jb
inc
jo
in
xchg
jo
jmp
rcrb
neg
pop
xchg
push
shll
into
pop
or
mov
cli
xor
lahf
pop
rorl
add
shlb
xor
cmpsl
add
pop
mov
push
jb
lcall
in
mov
rcrb
fsubrl
add
leave
pop
xlat
sbb
shl
inc
dec
inc
cld
sub
out
leave
sub
insb
cld
daa
cld
xorl
mov
inc
push
mov
repnz
ret
cmpsl
cmp
cmpsl
pop
jno
and
push
int
xlat
or
adc
mov
rclb
or
mov
push
movsl
jmp
sub
mov
mov
stc
sahf
les
lods
jmp
icebp
cmpsb
insb
adc
cwtl
mov
mov
scas
lods
andb
jb
in
jne
adc
ficoml
jecxz
movsb
jmp
inc
loope
mov
int
out
incb
out
and
and
sbb
jmp
popf
pop
xchg
mov
loop
loopne
pop
mov
stc
mov
fcmovnu
fbstp
ss
fwait
pop
sahf
sub
pushf
push
push
lcall
fst
les
sub
xchg
jecxz
push
cmpsl
stos
mov
push
mov
scas
jbe
mov
decb
inc
and
cld
dec
fs
mov
fstl
push
shlb
insl
test
outsb
push
std
xchg
jne
filds
pop
inc
sub
lcall
mov
cmp
nop
inc
push
mov
mov
inc
adc
jno
add
jmp
lahf
loope
fistpll
dec
loope
inc
jmp
fdivrl
dec
mov
out
push
mov
push
mov
aad
enter
loope
xor
shl
xchg
cld
adc
inc
or
orl
ror
je
xor
xor
mov
cmpsl
in
push
mov
mov
jecxz
inc
mov
adc
repz
mov
lcall
stos
cld
adc
sbb
test
lods
or
out
outsb
xchg
adc
mov
sub
imul
sub
jb
push
dec
into
sub
filds
push
push
fwait
mov
dec
lahf
and
sub
and
aas
call
xor
stc
icebp
jo
std
mov
and
hlt
xchg
xlat
fs
mov
jl
fisttpl
repnz
pop
fcoms
je
and
jb
loop
lods
xchg
xor
cld
mov
cmpsl
adc
mov
and
mov
icebp
and
test
mov
data16
mov
xor
sub
lcall
xor
xchg
xchg
lcall
in
push
stos
adc
jmp
jb
jb
sarb
insb
out
rorb
cmpsb
mov
bound
stos
fcoms
clc
notb
push
out
dec
lahf
loope
sub
xchg
fldenv
pop
dec
cmp
loopne
push
pop
ds
mov
xor
xor
mov
aad
addr16
cmpsl
mov
test
mov
pop
lods
push
cli
and
jo
add
in
shlb
movsl
cli
jb
inc
loope
rcrb
ds
adc
test
rolb
adc
jl
xchg
pop
push
xchg
adc
xchg
imul
hlt
outsb
repnz
push
sbb
lods
mov
xor
and
lds
in
add
push
sub
cmp
pushw
pop
cmp
popa
lahf
in
cmp
js
mov
fisttpll
filds
mov
lcall
sahf
cmpsl
filds
xor
in
sti
nop
cmpsw
mov
sets
xchg
inc
mov
iret
inc
shrb
in
movsl
mov
cmp
mov
leave
xchg
inc
lods
cs
mov
mov
sbb
or
jmp
cmpsl
add
in
mov
cld
adc
loop
mov
and
mov
jb
dec
mov
jb
mov
jl
and
insb
aas
jb
pushf
in
mov
pop
in
sbbl
xor
pop
adc
pop
leave
add
sub
lods
insl
insb
fnstcw
movsl
pop
mov
pusha
mov
xor
xor
xchg
lods
mov
mov
xchg
jb
in
stc
jecxz
shlb
push
and
int
fstpt
xchg
lods
cmp
loopne
pop
xor
push
jmp
stc
ss
stc
lods
hlt
mov
hlt
cltd
sbb
pop
aad
adc
mov
push
pop
mov
mov
cmpl
cmc
or
xchg
and
sbb
lahf
outsl
mov
jecxz
jmp
popa
mov
cmc
push
inc
sub
lods
lret
stos
mov
int
jmp
mov
shr
popl
and
fstpl
pop
iret
lahf
or
cltd
xor
xchg
stc
shrd
ret
or
xor
mov
and
push
or
pop
mov
movb
xchg
xlat
mov
mov
sbb
leave
jmp
jnp
push
test
sub
mov
add
out
stos
lds
mov
aaa
sub
mov
lea
es
movsl
xchg
fwait
ja
mov
jno
xchg
cltd
cmpsl
aad
jmp
mov
scas
jecxz
andl
pop
mov
roll
jno
mov
fwait
cmpsl
insl
cmp
in
add
cmp
out
es
mov
fistl
gs
lahf
fnstsw
test
adc
stos
xlat
mov
cmp
lds
mov
insl
aad
cltd
lock
fwait
popa
rcr
and
add
sub
adc
fldt
inc
pop
sbb
out
mov
sub
dec
dec
mov
xorl
ret
scas
leave
fldl
out
cs
xchg
mov
pop
jge
enter
xlat
test
iret
jmp
aaa
xchg
xchg
aad
and
sub
popf
lods
mov
out
cltd
push
add
movl
lea
mov
stc
jne
stos
cmp
or
in
jecxz,pn
das
mov
fdivrp
mov
add
push
cmpsl
xor
pop
xlat
fcomps
out
fnsave
es
cmp
xchg
rcrl
scas
in
inc
jno
lds
sub
jmp
call
lahf
jbe
out
adc
fists
jno
mov
sub
test
sub
stc
mov
add
imul
addl
cmpsl
xchg
loopne
sbb
lahf
test
xor
xchg
mov
scas
iret
and
fld
cmp
or
out
inc
cmp
xchg
test
dec
cs
cltd
fsubrl
xchg
mov
jecxz
leave
push
mov
xor
mov
cmpl
stc
test
push
scas
sub
aaa
sub
ffreep
fwait
stc
xchg
push
dec
pop
leave
int3
cmpsl
or
sub
pop
mov
mov
lods
jmp
cmp
lret
test
popf
jecxz
mov
mov
jo
iret
adc
in
fwait
push
jmp
vpsubsw
jmp
cmp
fcomi
xchg
int
test
cmp
sub
popf
cmp
lahf
aad
jmp
add
mov
mov
test
cmp
sbb
cmp
in
cmpb
lea
scas
fstps
test
movsl
sbb
mov
fucom
iret
dec
add
sub
xchg
cwtl
test
xor
in
xchg
aaa
mov
jmp
and
mov
add
xlat
es
js
rcll
iret
inc
lock
orl
cmp
and
fst
stos
sbbl
lods
mov
pushf
and
fsubl
cmp
cmpl
popf
movsl
icebp
popf
add
mov
adc
mov
int
inc
shr
cli
or
sbb
dec
stos
xchg
adc
cmp
jmp
and
xchg
fmul
mov
mov
scas
and
cmp
adc
fmull
fmull
or
ret
orb
and
xchg
rorl
arpl
iret
pop
push
test
jne
and
popa
push
test
adc
mov
cmp
sub
movsl
and
imul
in
and
dec
and
jecxz
in
loop
scas
cmpsl
aas
fldcw
aad
or
mov
mov
mov
test
mov
push
sub
mov
test
popf
sub
sbbb
or
push
xchg
pop
stos
cmp
lods
in
dec
or
in
leave
in
fiadds
pop
mov
xor
out
cmp
imul
fisttpll
int3
cld
cmc
in
fnstenv
and
xor
dec
push
and
fnsave
jne
in
fstps
aad
dec
xchg
inc
popa
cmp
mov
dec
and
jle
xchg
xor
xchg
xchg
in
pop
inc
sub
pop
sub
out
and
ret
outsb
cmp
mov
xchg
lret
sbb
cltd
xchg
or
pop
cmp
mov
pop
xchg
jns
xor
lahf
mov
mov
shl
mov
in
test
fmull
clc
cwtl
lea
ds
cmp
test
psllq
sub
les
push
std
lret
pop
aad
out
cmpl
push
lahf
loope
sub
lea
or
aad
scas
test
out
xchg
popf
mov
fists
pop
jmp
int
inc
mov
popf
popf
mov
out
jmp
mov
out
push
cmc
test
pop
mov
inc
fcoms
test
rcrw
cs
lret
cmpsl
cmp
out
out
iret
or
rorl
jmp
iret
test
sbb
orl
mov
ret
movl
test
clc
lahf
mov
mov
or
sub
xor
mov
rorl
iret
sbb
adcl
hlt
loope
jno
jbe
mov
cmp
test
sahf
jo
nopl
filds
fwait
out
test
or
fnstenv
add
sub
addl
je
dec
cs
dec
xchg
mov
cmpsl
mov
mov
pop
sub
jno
out
cmpl
imul
nop
xchg
cs
pop
js
or
test
add
dec
cmp
jge
jecxz
mov
sub
cmp
add
enter
sub
aam
test
pop
mov
leave
ljmp
or
loope
xor
movsl
jge
lods
rcll
ljmp
leave
dec
xorb
andl
sbb
sub
mov
jecxz,pn
popa
mov
je
cltd
popf
iret
and
sub
clc
mov
mov
in
lods
sbb
mov
mov
xchg
lods
fwait
scas
pop
jmp
iret
lods
and
add
movsl
xlat
leave
popf
ja
iret
mov
shll
insb
fucomip
inc
or
add
rcrl
mov
ss
jmp
mov
pop
sbb
xor
sub
std
lahf
inc
in
pop
mov
mov
stc
popa
rcll
sub
mov
cmp
out
lahf
pop
cmp
xlat
jo
nop
jmp
pop
in
cmp
xchg
sbb
lret
in
lret
in
mov
adc
xchg
movsl
pop
fdivl
in
sub
mov
into
imul
xor
adc
cmp
test
mov
vandnps
jmp
aam
sub
lock
lea
es
xor
js
xchg
sub
aaa
cmpsb
out
rcrl
push
int
mov
inc
in
add
xchg
adc
mov
cmc
mov
xlat
xchg
ret
and
xor
dec
stos
adc
xchg
or
lret
cmc
sub
push
fwait
aad
cmpsl
inc
mov
mov
xor
in
add
addl
lahf
pop
mov
jae
mov
xchg
lcall
vpshaw
cmp
and
pop
xchg
pop
movsb
pop
out
in
mov
cs
xchg
aaa
mov
mov
sbb
lahf
pop
lods
leave
stos
daa
pop
inc
popa
in
ja
repz
mov
dec
pop
shll
push
int
mov
pop
roll
loope
into
out
add
fidivl
ds
ljmp
out
sub
aas
lods
mov
movsl
sarl
insl
xchg
loope
js
xor
out
push
mov
sbb
inc
lock
xchg
shll
int
adc
cmpsl
test
dec
xor
cltd
out
ds
pop
sub
cmpsl
or
mov
out
fcoms
cmp
push
xchg
scas
shrb
mov
push
mov
int
daa
xchg
test
popa
leave
imul
in
imul
scas
xchg
mov
mov
js
sbb
jl
mov
xlat
push
test
push
mov
push
popa
lods
or
pusha
int
adc
out
insl
xchg
ret
jae
push
in
cmp
push
fisttps
cli
mov
in
mov
in
aad
scas
pop
cmp
test
fsts
xchg
insl
mov
pop
push
fildl
pop
mov
stos
loope
mov
xor
push
lods
cmp
insb
shl
xchg
xor
mov
sbb
or
add
lock
loope
popa
sub
dec
stos
imul
movsl
decl
xchg
jbe
pop
movsl
movsb
or
cltd
mov
lods
mov
fucomp
adc
push
mov
icebp
adcb
shrl
jmp
rcr
stc
sbb
lods
jecxz
fists
cmp
rorl
fcmovu
out
in
cltd
cmc
jns
popf
rcl
imulb
loope
in
in
aaa
loop
jecxz
stos
xchg
pop
and
iret
in
pop
arpl
ljmp
divb
pop
mov
xchg
mov
popa
rolb
clc
adc
mov
arpl
lea
fwait
adc
adc
orl
scas
mov
mov
fwait
andb
jne
sbbl
sub
adc
int
and
pop
cmp
es
lcall
popa
mov
mov
cmp
stc
mov
mov
ror
pusha
mov
out
movsl
mov
in
test
adc
subl
repz
test
leave
mov
mov
sbb
popf
adc
iret
das
jae
jmp
mov
mov
sub
xor
inc
sub
lods
xlat
sbb
or
and
add
insb
pop
iret
mov
sub
subb
push
insb
or
lods
rcrl
cmpsl
lcall
fbld
adc
add
xchg
fst
clc
xchg
stc
mov
and
pop
mov
cmp
jge
xor
cmpsb
add
pop
mov
std
xchg
mov
ror
mov
inc
mov
cmp
xchg
bts
push
rorl
mov
sub
repnz
movsl
lods
cld
sub
push
jp
jp
scas
inc
jnp
out
lods
mov
into
scas
dec
in
aad
xor
lea
xchg
push
and
in
adc
aaa
shrb
jge
shll
add
sbb
mov
xchg
or
jmp
test
sub
push
xchg
adc
dec
sub
in
test
cltd
sbb
jmp
sti
pop
mov
xchg
pop
mov
faddl
xorb
cmp
pop
fwait
xor
mov
leave
cmp
leave
mov
push
xchg
rcll
cmp
in
loope
roll
aaa
xchg
lahf
ljmp
mov
mov
int
in
or
xchg
out
in
movsl
aas
inc
ror
sbb
sbb
stc
xor
pop
jecxz
fwait
xchg
mov
movsl
sub
scas
cmc
push
and
fdivr
test
test
out
leave
xchg
shll
fcmovnbe
iret
and
jmp
leave
dec
dec
xor
pop
jmp
or
stc
leave
xchg
daa
cmp
shll
in
pop
sub
xchg
mov
inc
xchg
test
mov
mov
jmp
stos
xchg
push
fdivrl
sbb
dec
rorl
out
int
adcl
cmc
dec
xor
cltd
sub
cmpsl
xchg
mov
mov
stos
lahf
cltd
cmc
call
cs
pop
andl
push
jmp
inc
cmp
mov
cld
pop
sbbl
jne
xchg
dec
leave
in
push
and
js
test
imul
movsl
sbb
mov
stc
sub
fisttps
jmp
sub
pop
dec
pop
fldpi
cmp
sub
fdivr
pop
lret
fld
cltd
scas
push
add
orl
test
fwait
sahf
sbb
out
jno
xchg
gs
cld
sbb
sub
popf
mov
fstl
leave
adc
mov
pop
and
test
or
pop
mov
and
lds
adc
shrl
pop
jmp
xchg
pop
jne
in
push
int
and
aad
insb
mov
xchg
cs
in
imul
jmp
aad
push
cmc
mov
inc
mov
push
stc
xchg
cmp
roll
stc
pop
jg
push
aad
lahf
sbb
stos
fst
out
and
fcmovb
and
mov
lods
sbbl
sub
mov
mov
sbb
push
in
jae
cmp
iret
rcrl
pop
xlat
jne
xchg
or
mov
test
and
lahf
push
mov
in
popf
jmp
in
add
lods
mov
out
rolb
insb
jns
setnp
fistpll
push
je
icebp
test
rcl
scas
pop
lods
dec
mov
imul
lods
lret
ret
xchg
mov
push
add
add
xor
std
xchg
adc
andl
mov
sub
mov
out
sub
push
cli
jecxz
outsl
test
test
iret
xlat
mov
and
and
in
popf
ficoml
roll
mov
daa
dec
mov
mov
xchg
mov
pop
int
enter
xchg
push
xchg
js
es
pop
lret
push
mov
stc
leave
iret
and
in
int3
push
or
cltd
flds
jne
and
mov
popf
cmp
fists
pop
cmp
jb
leave
sub
mov
mov
shrl
sbb
xchg
lds
push
call
and
faddl
dec
outsb
rcll
cltd
push
push
in
dec
sbb
push
mov
sbbl
icebp
pop
xchg
iret
leave
fildll
imul
out
mov
loope
fxch
mov
sub
xchg
cmpb
cmpb
mov
jb
movsl
idivl
ljmp
push
mov
fisttpl
push
es
cmp
jecxz
pop
xor
cmp
pop
fbstp
lods
loope
fldt
fisttps
jecxz
mov
xlat
lea
pop
icebp
loope
loope
jecxz
mov
popf
iret
add
push
out
adc
sbb
add
aaa
test
xchg
sub
mov
cmp
push
nop
out
mov
jmp
dec
xchg
int
clc
mov
dec
or
mov
test
or
or
xor
mov
fnstsw
shr
inc
icebp
popa
jmp
sbb
push
mov
sbb
fwait
test
fnsave
lea
lret
lcall
push
mov
jge
loope
aaa
xor
stc
daa
mov
mov
cmp
and
loope
movsl
xor
es
mov
in
cmc
jae
movsl
ret
lret
outsl
sahf
aad
out
pop
sub
adc
adc
add
int
push
scas
xchg
inc
shr
xchg
inc
and
leave
jecxz
adc
or
js
and
xchg
sub
outsb
loope
daa
adc
add
aad
fnstcw
shll
fistpll
xor
lcall
scas
stc
mov
cli
lds
mov
iret
push
xlat
xchg
pop
in
imul
push
cs
sub
xor
mov
data16
jmp
std
leave
inc
popf
sbbl
stc
ret
add
lret
movsl
popf
sbb
shll
cmp
xor
les
lret
out
xchg
shll
cmp
sbb
and
and
pop
leave
xchg
cmp
in
or
iret
jmp
push
cs
cs
mov
ret
jmp
jle
push
jmp
or
ss
push
push
ret
aad
test
or
movsb
and
push
lahf
xchg
cmp
sub
sub
sbb
ret
cmpsl
jmp
aas
push
mov
add
xchg
xor
popf
in
xchg
mov
jg
ret
xchg
sub
adc
js
es
stc
pop
std
stc
lea
lock
xor
mov
dec
mov
dec
cld
pop
push
cmpsl
inc
movsl
mov
jmp
popf
les
sbb
movsl
add
shrb
mov
fildll
movsl
out
in
imul
lds
xor
sub
or
stc
out
movsl
popf
iret
and
lret
and
xchg
imul
xchg
cs
pop
xorb
int
mov
shll
mov
xchg
xor
sub
ljmp
out
xchg
pop
in
into
call
sub
fcomps
subl
sbb
fnsave
iret
push
test
cmp
pop
xchg
test
and
insb
mov
stos
mov
cmp
mov
scas
xlat
sbb
adc
sub
das
in
sbb
xlat
stos
cmpl
mov
scas
dec
push
cmp
je
jmp
stos
loopne,pn
dec
ljmp
pop
bound
insl
xor
jmp
cltd
mov
xchg
xchg
cli
jne
inc
fisttpll
imul
pop
shl
sbb
cmp
or
xchg
lock
xchg
stc
pusha
fwait
lock
int3
es
lret
das
leave
xchg
in
sub
mov
adcl
lods
stc
das
sub
push
scas
xor
xlat
in
jne
fldt
mov
and
fcom
fsubrs
fstsw
xchg
sub
sub
push
outsl
jmp
push
mov
insl
sbb
in
out
cli
cmc
fadd
arpl
add
std
scas
cwtl
flds
fcomip
adc
xchg
fsubl
xlat
add
and
mov
mov
mov
jmp
mov
cmpsl
lds
inc
sub
adc
jmp
cmpsl
dec
push
int
inc
push
movsl
sub
pop
arpl
and
cmp
data16
out
sbb
movsb
aaa
gs
test
xor
test
in
inc
cs
dec
xchg
or
insb
mov
cltd
das
cmp
mov
lret
or
es
pop
aas
out
push
xchg
sarl
aam
subl
cmp
inc
mov
and
aam
jae
in
jmp
cmc
cmc
sub
test
cmpb
cs
cmp
pop
insb
or
popf
test
int3
fcmovne
jecxz
decb
adc
mov
adc
add
sub
insb
or
mov
test
std
ja
shll
sbbb
sub
scas
ljmp
cmpsl
popa
xchg
or
mov
sub
xchg
out
rcrl
cs
push
jp
xchg
pusha
int
ror
lods
addl
sti
add
jmp
pop
cwtl
push
aaa
fistps
rol
es
adc
aad
cwtl
adc
mov
xor
into
xor
popf
lret
mov
out
push
aaa
add
pop
fwait
add
loope
jbe
testb
push
lahf
jecxz
in
icebp
sub
push
adc
mov
repz
aaa
xchg
sub
xchg
movl
jne
sarl
lret
adcl
jmp
push
lods
rcll
jecxz
shrl
ljmp
mov
jecxz
lock
imul
cs
popa
mov
movl
mov
or
lods
out
test
pop
movsl
push
aaa
push
stos
loope
test
and
in
leave
int
inc
mov
mov
fwait
std
cltd
shlb
xor
lahf
stc
jmp
pop
cmp
dec
test
rclb
leave
ret
mov
cmp
mov
cltd
test
push
lret
ja
jmp
or
sbb
test
dec
pop
push
in
sub
push
add
push
and
rolb
push
pop
mov
fs
add
push
adc
cltd
sub
lds
mov
leave
add
out
mov
and
iret
enter
fwait
adcb
push
lret
int3
popf
pop
int
lret
sub
jl
arpl
add
pop
mov
loope
xchg
shl
stos
add
jge
sub
mov
lret
cmp
or
in
int3
xlat
add
fbld
pushw
pop
fwait
and
mov
test
lods
iret
fcoml
mov
rcrl
jge
mov
pop
inc
lea
cmp
cmp
in
push
mov
mov
rorb
add
dec
fnsave
xor
nop
pop
imul
arpl
sbb
sarl
dec
mov
push
add
jecxz
add
push
inc
xchg
sbbl
stos
or
and
sbb
and
loope
cltd
iret
lret
fsts
fcmovnbe
jl
fmuls
or
es
imull
int
lahf
repz
cmp
ret
and
rcl
fninit
push
jae
les
sbb
mov
leave
sub
and
test
js
fucomip
push
push
push
andb
pop
pop
lea
lds
int
pop
test
rorb
mov
push
cmp
nop
push
test
xchg
fbstp
cmp
inc
cmp
cmp
out
loope
insb
ja
sbbl
test
or
xchg
ret
or
cltd
xchg
sub
repnz
xchg
scas
in
daa
ret
push
adc
stos
mov
pop
roll
lret
sub
and
in
pop
popa
jge
in
jo
xor
fxch
rcr
sub
jmp
sub
mov
cmp
out
pushf
xchg
sbb
sbb
push
adc
push
jo
sbb
cmp
imul
js
xchg
fwait
mov
fcmovne
stc
xchg
push
shlb
movsl
xchg
and
sub
int
cltd
xor
or
push
jge
ret
loope
sbb
rorl
sub
pop
movsb
push
mov
fldl2t
mov
ja
incl
mov
cmp
sub
mov
movsl
jno
test
aad
scas
mov
xchg
sub
cmpsl
and
js
mov
add
mov
int
lahf
add
stc
cmpsl
lea
cmp
adc
aam
xchg
adc
or
filds
lahf
xchg
loopne
aad
jmp
or
xchg
fst
cmp
adc
pop
push
mov
insb
mov
imul
jo
movsb
iret
popa
or
popf
scas
shl
jmp
sub
dec
cwtl
sbb
add
mov
in
popf
mov
out
mov
and
sbb
inc
cmc
ljmp
adc
cmp
or
lret
daa
out
iret
std
fildll
aad
xchg
popf
stc
pop
aad
xor
mov
test
xchg
in
dec
lock
cltd
and
aad
mov
xlat
ffreep
jns
mov
leave
ret
and
push
rorl
stos
popa
xchg
es
xor
push
cmp
mov
jmp
mov
push
mov
in
lahf
ljmp
aaa
mov
mov
sbb
adc
or
mov
xchg
jmp
mov
sub
es
js
and
incl
adc
or
in
lods
push
jp
sbbl
sub
pop
cs
out
scas
mov
and
jne
cmp
and
adc
fucom
fwait
in
subb
cmpsl
or
and
push
out
jo
pop
leave
xor
inc
push
shr
adc
cmp
mov
sbb
push
sub
test
lret
and
ja
mov
jecxz
mov
aad
into
test
push
ret
popl
lahf
out
xchg
mov
mov
fs
lods
jmp
xchg
mov
pop
dec
stc
orb
jmp
jge
lea
add
subb
mulb
sbb
pop
out
stos
sbb
cmpsl
mov
mov
inc
stc
sub
mov
shrb
xor
hlt
push
sub
jl
pop
lret
fwait
out
iret
in
pusha
and
xchg
ror
mov
in
push
mov
cmp
mov
sbb
pusha
aad
aaa
jmp
pop
std
xchg
jns
es
int
daa
lahf
fistps
lds
cmp
aad
aaa
in
jmp
pop
mov
xchg
out
mov
adc
enter
push
mov
es
popf
lods
shll
js
pop
sub
fcmovne
cmc
sbb
xorl
or
xchg
loopne
cwtl
sub
shl
cmp
scas
das
arpl
mov
adc
dec
stc
jecxz
into
cmpb
sub
add
mov
mov
aaa
xchg
lcall
mov
or
and
inc
add
jmp
cld
hlt
cli
imul
aas
inc
adc
mov
enter
sub
fwait
push
icebp
adc
stos
sub
jnp
call
inc
psraw
flds
popf
shrl
popf
pop
std
rorb
cmp
cmc
cmpl
orb
lea
mov
std
loop
frstor
cld
pop
cmpsl
ljmp
xchg
add
stos
mov
jmp
cmp
xor
rorl
sub
cs
jecxz
int
inc
add
fst
sbb
stc
in
push
mov
test
cs
cmc
push
mov
es
fstp
push
jge
mov
aaa
in
stos
and
xchg
dec
jle
lock
cwtl
sub
and
mov
sub
es
gs
roll
enter
popf
cmp
ret
cmpsb
push
ljmp
imul
loope
xchg
mov
push
sub
add
subl
popa
mov
fwait
mov
aad
add
fbld
mov
push
leave
pop
in
js
bswap
jecxz
and
ljmp
ret
rcr
in
insl
xchg
add
loopne
inc
or
popf
fistl
cmpsl
jecxz,pn
mov
and
dec
in
lds
insb
fadd
and
in
sub
mov
shll
call
fstl
lods
cmc
test
ret
movsl
xor
leave
stc
decl
xlat
push
mov
jb
imul
sbb
out
xlat
adc
xor
mov
push
add
ljmp
lea
xor
xchg
and
js
popf
mov
fwait
in
inc
jge
subl
sete
popf
loope
jne
scas
psrlw
lahf
test
adc
cmp
pop
push
fnstsw
mov
shrl
xchg
stc
shll
sub
arpl
in
or
popa
push
pop
pusha
cs
cmpsl
int
mov
lahf
mov
sbb
fildll
sub
pop
add
mov
test
clc
out
fucomi
fldcw
or
aad
in
popf
inc
lds
push
push
inc
lahf
xchg
pop
lret
out
pusha
lock
je
sub
xchg
aad
ret
or
fldcw
jae
jmp
dec
dec
cmpsl
jno
roll
push
sbb
cltd
xchg
stos
in
imul
sub
adc
imul
sbb
cmc
sbb
sub
test
sub
test
or
cmp
in
mov
push
sub
andl
out
or
fwait
popf
clc
push
mov
push
add
push
inc
cs
arpl
jmp
dec
push
insb
stc
mov
in
test
sbb
nop
pop
cmp
movsl
sub
pop
enter
ret
or
subb
in
nop
sbb
imul
cmpsl
mov
sbb
mov
test
addb
in
push
xchg
imul
movsl
or
xor
clc
and
sub
inc
lret
jecxz
mov
lahf
push
cs
push
or
cmp
sub
fistpll
pop
rcr
aaa
test
or
fdivs
inc
jecxz
xor
sub
fucomi
cltd
dec
pop
mov
iret
leave
jne
popf
xchg
lea
inc
sbb
jns
xchg
loope
push
aad
jo
cmp
test
bound
loope
mov
lret
imul
mov
das
mov
cmpsl
mov
xor
fwait
add
add
es
mov
cli
xchg
daa
mov
cmc
or
in
in
loope
inc
lods
sbb
popf
dec
mov
cld
push
into
mov
mov
inc
movsl
aaa
or
push
xor
scas
ret
mov
test
mov
scas
int
lahf
mov
insl
sbb
push
mov
or
sbb
adc
in
push
xchg
add
lret
lret
out
jle
testb
xor
and
arpl
lods
jno
leave
loopne
push
mov
pop
push
sti
sbb
jge
into
fcomps
mov
xchg
sbb
pop
or
shll
jg
loope
xchg
test
orl
test
push
aaa
xchg
leave
movsl
cmpsl
xlat
ret
out
fcmovne
dec
mov
adc
ret
popl
inc
ret
sub
push
subl
xlat
lds
xchg
lret
fisttps
fldenv
mov
xchg
mov
stos
pop
jmp
xor
insl
add
cmc
stos
in
out
mov
addl
cmc
mov
xlat
add
fistps
aad
cld
adc
outsb
paddsw
out
stc
pop
test
or
call
leave
cmpsl
push
int
xchg
mov
sub
test
push
xchg
scas
pop
nop
cmp
popf
xchg
sbb
or
fnstenv
stos
sub
mov
das
mov
mov
addl
jmp
cs
sbb
sbb
inc
leave
in
daa
pop
mov
lahf
dec
out
sbb
fstpl
mov
cmp
fsub
jmp
cmp
mov
cmpsl
xor
and
or
ret
mov
shrl
mov
push
xchg
decl
jmp
ret
push
cld
dec
addb
es
inc
cmp
iret
pop
pop
adc
test
sarl
rcr
dec
dec
jmp
cmpsl
iret
movsl
insb
or
pop
mov
js
push
mov
es
xchg
in
cmp
loopne
shll
push
out
lahf
loopne
lods
orb
popf
inc
sbb
rcrb
fisubrl
push
shll
rorb
test
movsl
sub
jmp
aaa
mov
movl
roll
sar
fwait
lds
mov
fidivl
lods
push
jge
loopne
or
idivl
andl
shrl
mov
xlat
int
ret
push
jno
cwtl
sub
leave
iret
arpl
imul
or
js
sub
fildll
xchg
imul
dec
roll
das
jl
dec
int
mov
lret
push
jmp
lret
scas
push
loope
mov
aam
inc
xchg
in
fisttpl
inc
push
sti
xchg
xor
imul
sbb
adc
adc
xchg
mov
mov
test
cmp
lods
stc
cmp
pop
xor
aad
mov
cs
iret
stc
popf
fucomp
sbb
shrl
aaa
jae
in
xchg
fists
mov
mov
jecxz
mov
mov
int3
xchg
mov
jmp
cmpsl
and
out
sbb
xchg
xchg
add
not
and
push
bound
push
fcmovb
mov
jmp
fwait
adc
jecxz
cmp
xchg
cs
paddb
mov
mov
or
lcall
int
shrl
push
dec
xchg
imul
js
xor
ret
sbb
push
and
leave
sub
ret
out
pop
pop
ja
out
aad
mov
pop
lods
push
jae
cmp
lret
add
cmp
jp
roll
fcoml
fldlg2
enter
mov
jg
shll
es
in
sahf
inc
push
je
mov
imul
adc
mov
lret
sbb
ficoml
and
pusha
jg
jmp
pop
stos
xchg
lods
adc
dec
adc
mov
ret
popf
mov
daa
popf
or
leave
or
lahf
leave
shl
iret
mov
jae
fninit
mov
leave
sbb
in
adc
sub
rcrb
roll
out
cmp
mov
xchg
cmp
stc
and
in
mov
sub
cmp
xlat
popf
rcrl
jne
scas
push
mov
scas
popf
lods
imul
cmp
adc
addl
sub
inc
mov
fisttpll
jae
int
jp
inc
movsl
inc
inc
dec
shll
out
subl
outsl
leave
je
push
aad
aaa
cmp
dec
xchg
mov
xchg
push
or
test
xchg
cwtl
loope
test
add
dec
or
push
add
xchg
vorps
push
jecxz
and
cmp
movsl
mov
test
or
jmp
cmc
sbb
sub
xor
dec
fucompp
xlat
jne
rcrl
xchg
fwait
ret
xor
mov
and
test
jmp
jge
stos
xchg
in
scas
shll
orb
jo
push
and
mov
jae
cmp
iret
mov
xor
add
call
jmp
into
out
xchg
mov
adc
mov
lahf
or
xchg
movsl
mov
mov
mov
xchg
xchg
cmpsl
call
and
stos
or
imul
jl
inc
lahf
es
ret
add
popf
push
lea
mov
push
adc
out
inc
jmp
fmuls
xchg
addr16
lds
ret
iret
lret
fldt
jno
xor
rcr
iret
xor
insb
loop
sub
push
add
jmp
fmuls
xchg
xchg
xchg
sbb
mov
and
push
xor
mov
loope
das
lcall
lcall
sub
cmp
fucomp
test
lods
popa
iret
sbb
lret
scas
div
push
stc
rcpps
fcomi
xchg
fwait
lahf
subb
cltd
sahf
mov
push
cmp
jg
sbb
ficoms
imul
add
out
fmull
push
add
xchg
jl
in
sub
fcomp
jge
jmp
movsl
es
push
add
stc
fld
cld
push
stos
popf
gs
pushl
shrb
xlat
filds
inc
fdivrl
cmp
mov
imul
es
jg
in
out
mov
dec
push
push
pop
and
movsl
xor
push
loope
test
pop
jmp
int3
cli
cmp
leave
enter
pop
adc
lea
mov
out
fldt
mov
bound
xlat
xor
xchg
push
cld
stc
add
stos
push
sub
popa
jmp
cmp
xor
xlat
pop
mov
std
and
arpl
test
lock
jns
push
cmc
mov
into
scas
sti
or
aad
pop
cmc
pushf
sub
out
lea
sbbb
je
cmpsl
and
sbb
xchg
mov
sbb
ficoml
popa
lea
push
and
mov
arpl
sbb
popa
sarl
lret
adc
sub
in
jae,pt
inc
in
sti
sub
popl
aad
cmp
leave
int
shll
adc
mov
orb
xchg
mov
xor
data16
xor
test
fwait
xchg
mov
mov
lret
imul
pop
sub
sar
mov
jne
mov
enter
leave
out
in
push
xchg
push
clc
add
cld
out
xchg
xor
and
scas
lret
hlt
rolb
cli
fldenv
frstor
popf
std
je
push
xchg
fisttpll
xchg
imul
or
mov
roll
and
pop
sub
popf
mov
aam
imul
mov
lds
adcl
mov
or
and
mov
adc
dec
dec
cmp
sub
cmp
ret
push
jecxz
pop
add
xchg
sub
movsl
imul
std
int
mov
fistl
fbld
mov
std
pop
das
add
cwtl
fdivl
iret
push
push
int
fwait
adc
lcall
cmp
in
pop
fnstcw
xchg
aad
and
xchg
jmp
andl
lea
das
scas
xchg
es
jns
xchg
out
inc
shll
cmp
loope
jecxz
and
imul
lds
shl
pop
lahf
iret
cltd
in
push
es
test
jo
pop
mov
pushl
scas
push
iret
inc
xchg
iret
inc
pushf
cmc
rcll
inc
sbbl
aad
add
xlat
or
lds
out
xchg
mov
pop
mov
std
lds
adc
leave
scas
sbbl
push
mov
loope
shrl
subb
in
push
aad
xor
in
sub
popa
scas
xchg
pop
adc
in
sub
inc
push
xchg
sub
pop
mov
inc
roll
dec
int
test
std
shr
or
fcomps
dec
in
fwait
push
pop
dec
lea
packsswb
hlt
movb
test
stc
rorl
aas
pop
imul
sahf
or
cmpsl
cmpl
pop
sub
mov
fisttpl
or
or
or
mov
add
stos
ret
sbb
lahf
xchg
roll
mov
fisttpl
ret
mov
push
adc
clc
cmp
leave
and
lods
and
cltd
and
clc
jb
xchg
xor
mov
popf
fdivrl
and
fisttpll
dec
les
lahf
or
push
mov
enter
aaa
pop
mov
pop
xor
jmp
test
xchg
xchg
movaps
shr
xor
pop
push
xchg
loope
push
cmp
in
insb
lds
add
push
lea
and
popf
pop
mulb
popf
rcll
js
out
dec
sbb
movsb
pop
movl
test
and
in
mov
add
jecxz
xchg
mov
frstor
les
cmp
mov
jmp
leave
jae
add
sub
rcrl
scas
pop
pop
sub
int3
adc
popf
xchg
into
in
popf
adc
xlat
out
scas
fabs
sub
scas
adc
movsb
mov
jmp
lahf
lea
ret
jmp
shll
push
sar
std
cmpsl
add
mov
iret
xchg
add
imul
xchg
in
jl
xchg
stc
xchg
aaa
in
lds
dec
out
scas
cmp
sub
mov
scas
jnp
addb
stos
xlat
aad
jecxz
xor
pop
sub
inc
and
mov
int
cmc
into
scas
in
cmp
iret
and
imul
push
cmpsl
in
xor
mov
sub
fldt
test
push
cmp
pop
cmp
and
das
sbb
lret
sbb
sub
es
ljmp
xlat
mov
fnstenv
cmp
add
cs
cmp
fistl
push
mov
lahf
mov
cmp
mov
iret
out
lret
orl
clc
int3
jecxz
or
add
dec
inc
inc
sbb
sub
imulb
or
and
pop
cmpl
lcall
out
nop
cmp
test
in
sbb
jbe
adc
imul
jnp
in
sub
imul
movswl
mov
push
pop
rcl
xlat
mov
or
mov
pop
lea
pop
adc
sub
pop
xchg
cmp
fninit
out
les
sub
sub
in
iret
test
enter
mov
xor
ret
pusha
jne
jmp
or
mov
in
push
out
cmpsl
lret
xchg
rorl
jge
out
jbe
xchg
or
xor
stc
cmp
jo
jne
movl
fwait
iret
ret
sub
pop
sub
jmp
out
pop
fmulp
jl
mov
out
xchg
dec
or
mov
xchg
xor
popf
test
push
stc
test
jae
aas
je
xchg
cltd
int
fidivrs
dec
add
xchg
imul
adc
stos
dec
xor
iret
mull
fistpl
cmp
mov
leave
in
jecxz
js
and
cmp
test
push
lods
dec
insl
xchg
sahf
or
movsl
ret
push
sub
out
dec
cmp
idiv
sbb
loope
adc
popf
add
or
sbb
push
jno
inc
mov
mov
fdiv
jno
push
rol
mov
ret
aad
mov
data16
sub
xlat
jmp
in
out
mov
scas
hlt
addb
test
dec
mov
sbb
fistps
pop
cltd
inc
jno
or
mov
jno
fisttpll
or
inc
mov
popa
jecxz
movsl
rorb
lods
xchg
add
mov
xor
je
lahf
mov
in
xchg
dec
loope
imul
fadds
or
sub
lret
fwait
popf
mov
sub
stos
cmpsl
mov
push
das
adcl
int
cmp
movsl
push
or
enter
push
imul
jmp
cs
insl
mov
or
mov
cmp
mov
shrl
mov
push
push
sub
loope
stc
std
pop
shlb
mov
popf
in
pop
xor
in
xchg
jmp
jne
cmp
stc
movsl
popf
rcrl
adc
out
addl
stc
inc
adc
iret
mov
xchg
popl
loopne
sub
aaa
xor
int
dec
xchg
lea
into
insb
movsl
mov
mov
cmpsl
mov
ljmp
insl
sub
lods
fbstp
loope
xorl
mov
leave
jne
cs
dec
lea
iret
add
insb
and
pop
daa
das
dec
das
iret
pop
fcoms
lcall
movsl
leave
xchg
dec
jb
int
sbb
bound
rcrl
push
xor
je
fsts
cmp
mov
sub
jmp
mov
xor
cltd
test
cs
or
jae
mov
lods
test
xchg
push
adc
cmp
lret
xchg
cwtl
mov
jns
fstpt
sub
push
mov
lea
pop
cs
add
cmp
jae
jmp
pop
adc
fdivrs
insl
cmp
popf
and
cld
lds
rcr
ret
mov
repnz
jecxz
rcll
xchg
xor
fmuls
out
sysret
loope
pop
or
xchg
xchg
dec
or
lods
aas
and
mov
loope
or
ficoms
sbb
mov
jmp
subl
jb
cmp
out
sub
xchg
xchg
mov
push
es
scas
fucomip
jp
mov
jno
mov
mov
iret
xor
xchg
inc
lea
popf
int
jge
xchg
test
std
mov
loope
or
mov
xchg
sub
cmp
push
mov
movsl
test
loopne
inc
xchg
hlt
add
popf
lea
mov
lds
es
adcl
lock
stc
xchg
loope
into
fldenv
add
aam
pop
test
pop
daa
lds
sbb
fxch
and
mov
int
test
popf
aad
lods
dec
or
jmp
test
fistps
popa
xor
es
out
mov
out
inc
lea
and
push
sub
push
leave
cmc
mov
lahf
push
push
xchg
int
mov
push
or
iret
push
clc
jp
mov
mov
jmp
xor
imul
cs
xchg
sbb
aad
js
xchg
mov
iret
in
jne
xchg
mov
lcall
orl
pop
cmp
les
mov
push
mov
scas
lahf
xor
pop
aam
pop
fucomip
cmpsl
mov
leave
cs
mov
dec
fmull
popf
jne
xchg
inc
fwait
lret
push
ds
sub
jno
mov
mov
divb
lds
push
aad
lahf
js
inc
mov
iret
lods
add
test
lret
nop
adc
add
shl
jb
hlt
sub
movsb
fcom
pop
mov
iret
stos
and
les
xchg
es
xor
inc
call
movsl
jno
dec
and
push
cmp
ja
xchg
out
imul
xor
mov
test
jp
movsb
movl
pop
pop
add
lods
shl
lret
add
iret
test
and
sbb
popf
stc
lds
xchg
and
pop
movsl
shrb
xchg
pop
mov
xchg
lahf
mov
imul
mov
cmp
loop
adc
in
cwtl
mov
out
push
cltd
jmp
inc
dec
popa
iret
lods
aad
outsl
mov
movsl
cmp
lret
call
test
frstor
xlat
push
xchg
adc
mov
fistpl
cmpsl
sub
and
add
mov
xchg
and
int
mov
mov
daa
cmp
jmp
jmp
imul
lods
aas
xchg
into
xchg
xor
xchg
leave
pop
cmp
lcall
xor
lret
cmc
fwait
pop
and
test
xchg
mov
xor
jge
xchg
sub
icebp
mov
add
jecxz
jns
inc
fwait
daa
mov
cltd
adc
jecxz
sub
xor
xor
push
cltd
mov
sar
data16
pop
inc
xchg
xlat
mov
mov
popf
popa
push
mov
sbb
in
mov
bound
mov
mov
push
pop
lahf
out
sbb
fidivrs
rcrl
aaa
jmp
out
lret
shll
mov
mov
add
cmpsl
xchg
rol
das
adc
or
xlat
mov
in
xchg
push
inc
jbe
adc
mov
aaa
jmp
cltd
mov
or
xor
mov
cmp
xchg
lds
mov
fcomi
inc
pop
jae
adc
mov
sbb
sbb
inc
lahf
xlat
shlb
push
aad
or
jo
push
in
scas
pop
sub
inc
pop
cmc
mov
rcrl
sbb
test
fisttps
fcomps
or
push
mov
and
lods
fldl
mov
cmpsb
cmp
sub
leave
mov
iret
mov
jge
cmpsl
xchg
xor
xchg
leave
sbb
aam
cmp
dec
add
insl
mov
lods
inc
mov
jmp
push
addl
mov
in
xchg
into
xchg
rclb
hlt
stc
lahf
or
lods
out
jecxz
ror
mov
sub
inc
and
fcompl
iret
scas
sbb
add
xor
lcall
out
in
sub
in
dec
dec
and
scas
push
add
jmp
jge
push
enter
cs
lret
lods
adc
jmp
sub
and
cltd
ret
sahf
cmp
aad
lds
mov
lods
iret
mov
mov
push
ret
fwait
popf
jmp
or
xorb
out
xchg
clc
sub
and
enter
test
xor
shll
xchg
sub
leave
scas
ret
sbbl
lods
adcb
xlat
mov
and
out
stos
jmp
flds
pop
lret
rcrl
in
mov
int
aad
jecxz
push
lahf
jno
inc
roll
xchg
mov
lods
mov
lods
test
jae
in
in
out
lret
push
pusha
mov
xchg
lea
and
jle
fistpll
mov
pop
mov
or
sub
popf
adcl
pop
in
or
sub
mov
push
ja
xchg
in
in
aas
push
mov
mov
mov
sub
pop
popf
int
scas
stc
xchg
lea
sub
fldt
imul
test
push
lea
cmc
loop
jb
mov
insl
pop
cmp
lahf
xor
mov
adc
mov
adcl
adc
xchg
fwait
lea
in
gs
movsb
cltd
shrl
mov
stc
jecxz
subb
push
rcr
fldenv
pop
inc
mov
add
lahf
mov
xchg
cmp
sbb
add
mov
stc
ret
jmp
jecxz
xor
sbb
xor
je
jg
cltd
fnsave
mov
test
insl
sub
and
sub
mov
mov
xchg
sub
mov
in
clc
cltd
in
dec
fcomi
fistpll
jne
lea
jmp
sub
shrl
pusha
or
mov
loope
movsl
lds
fwait
xor
movsl
cmp
cltd
xchg
test
test
pop
movsl
imul
movsl
or
pop
test
int3
pushf
stc
mov
cmp
fidivl
adc
popa
out
mov
xchg
sbb
pop
mov
out
mov
ja,pn
iret
xor
dec
arpl
jae
arpl
mov
sub
and
mov
stc
pop
adc
ja
iret
leave
pop
push
pop
mov
xchg
sub
adc
push
and
xchg
pop
xorl
in
es
cmp
cmp
add
int
movsl
fisttpll
imul
movsl
mov
mov
aad
int
push
sbb
xchg
sub
and
stos
cmp
jecxz
int3
adc
fwait
movsl
loopne
movsl
push
test
aas
fsts
pop
insl
aad
fwait
or
in
movsl
test
fstp
mov
in
aaa
and
stos
daa
lret
int
filds
inc
xchg
push
scas
sbb
jmp
shll
punpckhwd
mov
ret
pushf
mov
cmp
xchg
pusha
popl
daa
cltd
push
test
sub
scas
shrl
aaa
subb
pop
pop
pop
loopne
insl
and
lahf
cmp
aad
in
mov
mov
push
cmpsl
lds
ret
lods
jns
sub
popf
fnsave
cltd
cs
push
loope
movswl
cmc
scas
imul
aaa
aam
jmp
stos
in
dec
and
and
repz
out
pusha
mov
test
arpl
fildll
mov
push
adc
adc
lods
sub
adc
imul
sbb
sbbl
xchg
jecxz
xor
stos
adc
xchg
ljmp
pop
gs
xor
cs
mov
mov
jl
add
movsl
cmp
test
rcrl
cmp
jmp
dec
mov
in
and
rcr
aam
nop
iret
xchg
xchg
xchg
xchg
arpl
jmp
rorl
fstps
jecxz
lds
movsb
roll
push
aam
xor
mov
out
mov
test
movsb
outsb
test
scas
push
cmp
push
mov
orl
fstps
aas
roll
aad
fldenv
inc
and
jmp
add
aas
xchg
call
in
mov
mov
mov
adc
stos
movsl
rol
test
sbb
mov
aam
xchg
push
fcomp
dec
shlb
aaa
sub
pop
frstpm(287
and
mov
js
xchg
test
es
lahf
lods
pop
clc
inc
pop
paddusw
jne
out
push
out
jmp
jge
aas
aaa
cmpsl
cmp
lds
cltd
mov
in
mov
scas
and
jno
xlat
sbb
in
push
rcl
popa
fadd
dec
pop
popl
adc
test
vucomisd
das
es
pop
subl
and
push
xor
filds
mov
stos
add
adc
xchg
scas
mov
pop
add
xor
jbe
xor
shrl
add
popf
xchg
out
xchg
daa
cmp
call
fwait
xchg
loope
pop
mov
int3
ret
xchg
dec
mov
add
cltd
pop
call
shl
push
dec
addr16
pextrw
lea
loopne
test
jle
fwait
mov
pop
adc
dec
xor
aad
sub
test
scas
pop
inc
pusha
das
int
mov
andl
xchg
fmulp
cmp
inc
test
movsl
mov
stos
in
mov
shr
cmp
cmpsl
lea
ret
aad
inc
mov
shrb
jne
rol
mov
out
fldl
stos
push
std
xorl
inc
das
pop
rolb
ret
lea
jae
stc
adc
jmp
xchg
xchg
aaa
mov
rcll
mov
test
pop
scas
xchg
in
cmp
lods
jmp
es
pop
adc
out
bnd
addl
bound
sbb
pusha
shl
mov
xchg
xor
loop
xchg
stos
cmc
push
fucomip
inc
fcos
incb
push
or
xchg
mov
lahf
andl
js
das
popf
xchg
ret
out
cmp
push
lock
int
cmp
insl
lahf
loop
pop
pop
fisttpl
aaa
fucom
roll
inc
fistpll
xchg
xor
pop
pushf
ss
xor
out
leave
mov
push
pop
or
fucomip
leave
int3
and
stos
mov
jmp
sbb
ror
sbb
fimull
push
dec
bswap
ror
sub
mov
popf
sbb
pop
scas
pop
push
sub
aad
int
add
or
cmpsl
and
bound
inc
cltd
ljmp
xchg
mov
sbb
hlt
test
pop
inc
or
fldcw
test
popf
je
lcall
int3
and
mov
mov
jge
fwait
loopne
adc
lahf
mov
cmp
loope
in
sbb
push
push
rorl
ffree
rcll
test
rcrl
and
and
jp
loopne
ret
jge
xchg
xlat
fwait
in
sbb
or
fildll
scas
incl
es
lcall
fwait
jecxz
push
fsub
sbb
push
lds
aas
xor
ret
aaa
in
and
mov
ljmp
mov
pop
adc
push
push
in
ja
iret
aaa
jg
xlat
sub
std
scas
push
and
shll
jno
popf
in
add
loope
arpl
enter
inc
shll
dec
imul
cld
mov
push
jns
mov
jge
sub
jb
push
xchg
iret
or
mov
or
inc
repnz
jne
inc
xlat
movsl
popa
sbb
fwait
jbe
std
add
aad
sbb
mov
aad
leave
push
cmp
sbb
out
lahf
ffree
adc
rcl
stc
xchg
jmp
test
jno
mov
stc
pop
cmp
push
cmp
pop
dec
jmp
rcll
es
push
xchg
pop
mov
gs
adc
jne
and
fisttpl
mull
dec
bnd
sub
mov
test
in
mov
mov
mov
into
cs
push
fucom
pusha
test
mov
push
xchg
pop
das
or
sub
mov
or
jmp
sbb
aad
pop
fstl
imul
mov
push
out
pushf
adc
adc
push
and
and
cwtl
popf
mov
cld
pop
mov
out
lds
cs
dec
push
and
stos
xchg
stc
bswap
pop
mov
pop
addb
out
pop
or
mov
stos
cltd
pop
int
push
or
jmp
sti
add
loope
pop
sbb
xor
test
jae
and
call
jecxz
mov
stc
adc
mov
jno
xchg
lahf
fildll
ret
cmp
incl
sbb
xlat
lds
test
jae
cmp
jecxz
pop
stos
popf
pop
orb
xor
add
test
lock
arpl
test
popa
popl
cmpsl
adc
fbld
pop
sub
popf
incl
in
lcall
rcrl
xchg
jmp
jecxz
popf
mov
pop
xchg
push
mov
outsl
sbb
je
xchg
fstl
scas
out
sbb
jecxz
jo
lret
xchg
lds
int
jne
mov
xchg
cmp
sub
pop
mov
out
xlat
movsb
cmp
xor
push
cmc
gs
xor
xchg
test
inc
adc
mov
in
and
fwait
pushf
out
dec
jne
sub
and
test
jbe
cmp
sbb
fildl
fbld
dec
insl
lret
xchg
fwait
pop
or
ffree
jmp
shl
movsl
pop
iret
cltd
roll
push
lret
popa
dec
or
sub
orb
iret
pop
mov
inc
in
cmp
mov
stos
and
dec
cmp
jmp
fidivs
lret
mov
in
dec
jmp
leave
test
mov
fldt
gs
cld
fwait
test
in
int
cmpsl
mov
mov
mov
out
sub
cmpsl
es
cltd
pop
and
xchg
jb
iret
lcall
or
popf
xchg
iret
or
mov
fdivr
lea
fwait
xlat
mov
ret
roll
lds
ret
and
outsl
sub
and
mov
sbb
inc
leave
test
scas
shr
nop
fstps
into
pop
mov
xchg
fldt
into
arpl
mov
aad
jno
jecxz
loopne
pop
out
iret
inc
jp
xlat
out
lret
lahf
xchg
cmc
push
jmp
inc
and
lret
bound
imul
pop
adc
push
stos
mov
xrstor
fnop
pop
fwait
pop
inc
mov
es
in
imul
mov
fistl
xor
mov
rcrb
or
loope
cmp
adc
cwtl
xchg
mov
sbb
arpl
sbb
lds
adc
add
shl
xchg
hlt
pop
lock
in
fwait
es
mov
pop
pop
fldl
or
and
sub
jno
lahf
lds
sbb
cmp
imul
mov
mov
loopne
xor
jbe
adc
std
popf
ja
aas
pop
frstor
leave
in
imul
cmp
movsl
loope
and
mov
in
pop
lds
cli
imul
popf
int
push
or
fwait
xor
out
movl
adc
rcl
cmp
out
mov
leave
addb
sub
xlat
dec
jle
jmp
xchg
call
fildl
jmp
mov
adc
xchg
fs
inc
enter
ficomps
pop
ret
adc
loopne
mov
inc
inc
out
filds
jne
iret
sub
jne
sbbl
xchg
mov
std
push
adc
jmp
jae
cmp
stos
clc
stc
mov
orb
rolb
loope
lahf
repnz
xor
adc
fcoml
fwait
sub
ljmp
xchg
push
test
loope
popf
xchg
add
jge
push
mov
shlb
sub
rcrl
jge
out
mov
fstl
adc
ret
in
test
mov
xchg
out
and
pmullw
scas
dec
push
into
lds
jb
or
adc
shl
aas
xchg
js
pop
lods
dec
in
cmp
jmp
subl
mov
fildll
jae
mov
adc
push
int
and
imul
clc
lahf
jecxz
mov
and
xlat
cmpsl
pavgw
sub
fcoms
scas
mov
in
cltd
out
fdivrs
mov
cltd
loopne
sub
movsl
jb
shll
insl
loope
mov
stc
sub
inc
shl
cmc
xor
arpl
xor
lods
rcll
mov
push
and
push
in
and
stos
push
mov
adc
mov
fwait
je
loope
fldenv
adc
add
flds
scas
aas
xor
mov
int3
jns
lds
dec
out
cmpsb
int3
addr16
and
aad
push
inc
leave
mov
daa
pop
inc
int3
cs
mov
sub
fld
lods
in
xor
dec
adc
xchg
sub
sub
into
fistl
sbb
iret
xchg
fldenv
ja
sbb
xchg
sub
jb
test
add
mov
xchg
xor
pop
cltd
mov
jmp
xchg
mov
pop
subl
push
pop
movsb
sbb
mov
pushf
sub
dec
xchg
mov
shll
movsl
sub
mov
fistpl
fsts
test
jnp
xor
sub
scas
push
xor
popa
flds
cs
sbb
sub
fsubr
pop
lahf
sahf
jmp
arpl
adc
test
xchg
pop
mov
ret
sub
push
sbb
lret
leave
sarb
stos
out
lahf
and
repz
sarb
int
cmp
mov
out
in
nop
outsl
test
outsb
or
jecxz
andl
pop
repz
fldln2
fsubs
xor
ret
test
daa
cmp
xor
aaa
sbb
in
test
inc
pop
push
lds
jb
mov
xor
iret
or
out
mov
sbb
mov
ret
sbb
popa
scas
cmpsl
mov
imul
mov
mov
test
push
in
xor
lss
test
xlat
sbb
xor
fists
and
xchg
lret
dec
and
sbb
daa
push
or
imul
out
jl
leave
xor
adc
xlat
scas
lea
loop
cmp
out
div
inc
xor
mov
in
xchg
std
fildll
and
lods
xor
adcl
arpl
cmp
popa
xchg
fwait
lea
sbb
sbb
fildl
roll
outsl
fst
iret
push
inc
leave
or
jecxz
sub
out
iret
mov
sbb
stos
in
in
pop
adc
jno
fcmovnu
aad
cmp
loope
pop
adc
mov
stos
xchg
shl
pop
or
mov
jno
lcall
sbb
mov
cmp
das
sub
add
or
jecxz
sub
or
push
jae
es
aas
out
cmpsl
or
mov
xchg
dec
dec
cmc
aas
cs
stos
or
pop
enter
cmp
popa
cmp
repnz
leave
sub
stos
loop
mov
out
aaa
and
cmp
dec
aam
movsl
ja
push
mov
adc
push
rcl
aas
icebp
dec
push
pop
fwait
xchg
push
jb
xchg
or
iret
push
mov
mov
xchg
cmp
cli
out
jae
xchg
aam
scas
jle
push
sub
cwtl
xchg
shrl
jge
vpshuflw
xor
push
and
fiadds
bound
iret
push
lods
lret
xor
mov
fadds
mov
stc
jmp
mov
pop
xchg
aad
add
push
popf
jmp
hlt
stos
inc
nop
arpl
pop
movsl
pop
push
sahf
sbb
int
daa
fbld
nop
lea
jecxz
loopne
in
leave
ljmp
je
inc
dec
sub
xor
jno
push
sub
lods
int
es
lret
lea
cwtl
iret
ds
mov
add
adcb
cmovb
xchg
push
fisubl
lret
xor
loope
std
xchg
mov
in
in
and
mov
sub
mov
fistl
nop
aas
add
out
mov
in
push
cmp
push
xchg
jmp
mov
lret
dec
in
xor
lods
jo
jae
in
add
test
roll
mov
scas
cmp
out
ret
jecxz
pop
pop
mov
stos
cmp
sub
xor
das
sub
lea
mov
ljmp
push
iret
loope
imul
popf
es
orl
leave
cmp
rcrl
stc
sahf
push
xchg
loope
arpl
mov
and
jecxz
jno
out
imul
lret
xor
js
out
pusha
push
push
inc
pop
cs
or
add
mov
cmc
loopne
mov
ror
adc
test
mov
rorl
imul
scas
ret
mov
stc
std
rcr
imul
jno
imul
add
cmp
movsl
in
inc
ja
int
cmpsl
aas
mov
jecxz
loope
jne
sub
mov
sub
scas
subb
bound
insl
int3
xlat
fists
mov
mov
pop
loope
dec
cmp
iret
sub
sbbl
sbb
jno
or
cmc
sarl
out
xchg
shll
aad
lods
movsb
adc
in
pop
jne
add
mov
jmp
insb
cmc
out
dec
es
scas
mov
stc
leave
std
rorl
pop
jecxz
lea
call
xlat
xchg
cmp
enter
lds
int
popf
in
imul
fistl
aam
iret
test
orl
or
fwait
jo
sub
or
test
fstl
iret
push
out
or
jmp
and
cltd
xor
pop
lods
xchg
sbbb
or
xchg
mov
movsl
rclb
inc
mov
sub
xchg
sub
adc
fstpt
dec
mov
loop
fucomip
fstps
aad
fistl
int3
xor
shld
out
sub
jne
scas
sub
sub
iret
loope
stc
rcll
out
and
pop
repz
dec
mov
sbb
lods
popf
and
jno
orb
loope
push
fs
js
cmp
xchg
mov
loopne
xchg
rcrl
mov
cmp
pop
pop
inc
dec
fmuls
jne
sub
pop
cmp
addb
mov
lret
jmp
fwait
xchg
scas
cmp
out
test
lea
int3
movsl
movsl
and
add
in
adc
inc
xchg
cmp
jge
mov
test
add
stos
lds
insb
out
leave
cwtl
lret
fnsave
lahf
in
mov
sub
mov
sarl
jmp
sti
int
orl
mov
push
stos
stos
push
out
movsl
aad
fstps
sub
shll
lret
inc
jle
loopne
shr
sbb
xlat
pop
stc
jecxz
pop
or
xchg
mov
dec
adc
fistpll
lea
pop
jecxz
popf
add
xchg
adc
push
push
insl
or
popf
pop
mov
xor
xchg
mov
in
test
ja
shrl
mov
xchg
sbb
pop
fwait
pop
mov
aas
add
push
sbb
mov
cltd
cmpsl
push
jmp
fnsave
lods
sub
pop
sub
lahf
jge
mov
jmp
movsb
sbb
cmpl
cmpl
out
bound
xchg
in
push
fmul
in
stos
bound
lcall
stc
test
popa
mov
lds
dec
jmp
dec
fimull
das
sub
fisubrs
rol
xchg
pop
dec
push
xchg
pop
xchg
imul
imul
sbb
xor
push
sbb
lea
mov
shld
sub
xchg
xor
in
mov
aad
loope
push
xchg
cmp
shrl
test
in
jnp
add
or
int
jle
repnz
push
loope
orb
mov
inc
movsb
inc
in
lea
lret
dec
jp
mov
xchg
out
adc
dec
xchg
and
divb
cmp
pop
popa
jecxz
dec
jge
push
lahf
repnz
lods
cmpsl
leave
push
xor
shrl
jmp
dec
fwait
in
mov
out
mov
imul
pusha
fimull
push
shll
lods
clc
xchg
and
mov
aad
sub
push
iret
fidivrs
jle
fisubrs
popf
stc
cli
xor
xchg
or
rcl
cmp
lahf
and
cmpsb
sbb
rorb
pop
jnp
jmp
iret
add
int3
push
adc
aad
sub
popf
lret
inc
out
test
jne
loope
leave
cmpsl
push
xchg
cld
dec
gs
aas
jne
popa
shrl
test
in
movsl
push
jg
andb
imul
subl
test
xor
aad
movsl
pop
push
mov
xchg
or
lahf
adc
pushf
inc
cmpsl
dec
int3
mov
push
cmp
fldt
xchg
xchg
or
xchg
lea
xchg
sbb
lcall
dec
sub
pop
xchg
sub
mov
mov
test
cmp
leave
xlat
jmp
aad
push
lcall
push
mov
pop
es
roll
mov
in
data16
loope
lcall
lret
roll
out
loope
in
mov
gs
popa
mov
xchg
mov
sarb
xchg
mov
aas
inc
jne
in
fdivr
cmp
xchg
xlat
cmp
mov
pop
cmpsl
sub
pop
mov
cmp
mov
orl
and
dec
movsl
movsl
mov
movsl
arpl
psubsw
and
jecxz
lds
or
test
lock
inc
imul
cmp
xor
mov
cmp
pop
mov
xchg
decl
int
enter
xor
out
in
xchg
and
shll
adc
xor
frstor
xor
pop
and
js
test
scas
mov
shl
cmp
icebp
xor
inc
cmc
insb
xchg
popf
popf
pop
out
out
or
push
and
and
dec
leave
pop
lds
sub
jbe
roll
popa
in
xlat
jmp
arpl
mov
mov
xchg
cld
call
lods
insl
sub
dec
xor
mov
or
stc
sub
add
sub
rcll
insl
mov
cmp
push
aas
es
push
mov
jne
inc
push
dec
scas
test
sub
pop
insl
ret
or
pop
mov
sbb
sbb
mov
outsb
xchg
xchg
shll
popf
push
leave
mov
orl
cltd
stos
popf
scas
sbb
cmc
sbb
in
in
movsl
jae
xchg
je
sbb
rorl
fsubl
cmpsl
movsl
stc
out
movsl
fnstcw
stos
int
test
mov
xchg
clc
pop
sar
xchg
mov
mov
and
mov
fsubr
cltd
and
fbld
adc
in
xchg
pop
test
cmp
scas
xchg
add
iret
and
jb
or
fucom
outsb
scas
mov
pop
or
in
iret
mov
loope
lahf
mov
xchg
push
push
add
sub
inc
dec
jmp
mov
orl
push
imul
shll
filds
mov
inc
pop
sub
loope
and
xchg
cltd
mov
mov
xchg
push
cmpsl
lea
cmp
stc
decl
sub
add
push
xchg
adc
ffreep
sub
sub
insl
adc
sbb
push
sbb
sub
lahf
sub
sub
stos
sub
jbe
cli
mov
push
jmp
xchg
movl
fistl
adc
lods
ljmp
sar
sbb
scas
ds
cld
sub
out
loopne
in
dec
kxorb
push
push
stc
fldl2t
addb
out
shll
daa
ficompl
ret
imul
repz
std
stc
xchg
ds
rcrl
cmp
sub
out
shrb
mov
fldl
shlb
add
out
and
into
push
xlat
sbb
jno
les
ja
fstpl
cmp
fists
sar
lea
sub
sbb
cmp
fldln2
mov
je
cltd
aas
and
jge
push
cs
cmpsl
mov
xor
xchg
sub
xchg
out
push
hlt
cltd
cmpsl
sub
pop
js
into
loop
sub
daa
pop
pop
push
shl
stos
ja
inc
enter
jmp
lcall
rcr
sub
pusha
shrl
cs
scas
pop
xchg
cmc
jle
pop
xchg
daa
div
mov
xchg
test
push
enter
cltd
jge
xchg
sbbl
fistl
addr16
lods
ja
shlb
out
jb
inc
adc
movl
outsb
shll
mov
insb
test
addb
in
mov
jge
adc
jns
or
movsl
and
scas
push
mov
in
jbe
sahf
and
mov
enter
cmp
xchg
pop
movl
test
mov
cltd
add
xchg
mov
mov
test
xor
add
mov
cmp
or
lret
cmc
stos
fucomip
jb
das
adc
cmpl
daa
loope
push
jecxz
jmp
subl
push
iret
mov
pop
roll
jno
cmp
mov
jmp
lods
jne
cmp
fdivr
fbld
or
mov
cltd
jmp
ljmp
roll
xchg
in
test
dec
jle
out
ja
or
cmpsl
and
xor
insb
cli
movsl
iret
mov
adc
jge
jo
shrb
imul
enter
scas
loope
mulb
and
sub
pushf
jne
lea
stos
out
xchg
mulb
fwait
pop
test
xor
lds
and
jno
mov
outsb
mov
xchg
jl
ud2
ret
pop
cli
cmp
aad
movsl
popf
push
mov
adc
dec
jge
in
shrb
jae
cmp
outsb
xor
pop
ret
mov
mov
mov
xchg
mov
test
add
pop
mov
in
cs
adc
stos
repz
xchg
pop
es
jecxz
arpl
jmp
mov
mov
sub
push
pop
test
dec
stos
cmp
mov
lret
sbb
sar
sub
push
daa
jo
cs
xchg
inc
pop
imul
outsb
ucomiss
ficomps
leave
push
ficoms
xlat
iret
inc
push
out
aam
fwait
es
cmp
fimull
hlt
into
jo
orb
jmp
sbb
leave
rcrl
sbb
and
test
xor
fldt
aad
dec
adc
fwait
sub
and
xchg
dec
cmp
sub
sub
sbb
pop
inc
mov
jmp
out
cmp
or
stc
lea
add
jne
push
shr
lret
cmp
cltd
lods
xchg
and
jecxz
js
loop
cmp
into
xchg
and
mov
jecxz
xchg
fcoms
stos
pop
jo
test
leave
roll
mov
ja
aad
mov
sub
jae
les
sbb
out
add
push
cmpsl
pop
lret
lret
xor
retw
cs
scas
int3
leave
mov
test
sbb
jnp
mov
and
and
jae
mov
jno
cmp
scas
sub
das
push
nop
repnz
in
fldcw
sbb
sbb
fisttpll
popf
sub
clc
pop
out
xchg
clc
xchg
insl
pusha
dec
shll
lcall
fcmovu
push
pop
mov
stos
fwait
lahf
fld1
rclb
aad
dec
lahf
mov
sub
mov
adc
test
xor
movsl
iret
push
sub
es
stc
aas
sub
stc
add
fbld
mov
arpl
loope
or
pusha
test
es
mov
stos
pusha
lods
jg
mov
xchg
scas
mov
jmp
sub
rcrl
stc
stc
mov
jne
and
inc
xor
add
inc
das
out
push
shrl
jae
es
stc
sub
shll
mov
lahf
sub
xchg
in
popf
cmp
daa
pop
xchg
int
fstpl
aad
loopne
psubsw
mov
xchg
adc
push
mov
add
in
stos
mov
mov
sbb
xchg
in
aad
pushf
popf
scas
mov
popf
sub
lds
dec
test
int
lods
sbbb
fadds
call
jns
and
sub
es
iret
in
cmp
jnp
test
and
loope
sub
dec
dec
movsl
and
out
int3
rol
jl
xor
test
ss
cmpsl
and
aad
or
mov
test
sub
dec
jg
lods
shr
sub
dec
lods
sub
shlb
sub
push
dec
subl
mov
fstps
pop
adc
dec
push
mov
xor
subb
aaa
scas
and
cmp
mov
fwait
sbb
js
lahf
push
dec
fimuls
xchg
int
aad
out
jbe
fstps
xchg
lock
adc
sarl
sbb
xor
scas
sub
out
hlt
xchg
out
xor
mov
xor
popf
es
xchg
mov
xchg
cs
pop
enter
test
mov
iret
mov
xchg
fwait
mov
jge
sbb
sub
jno
insb
scas
fsubs
cmpsb
int3
ds
movsl
sarl
fldenv
push
mov
cmp
stos
cmp
cmpsl
pusha
xor
cmp
push
ss
popf
popf
repnz
out
popa
clc
das
cltd
mov
test
dec
in
xlat
xchg
inc
repz
or
inc
scas
mov
out
repnz
mov
push
popf
xchg
or
inc
push
xor
mov
test
sbb
pop
shlb
in
dec
lcall
pop
fcmovnu
ficoms
mov
fwait
pop
arpl
push
xorl
xchg
inc
movsl
lahf
sbb
fldl2t
call
sub
iret
add
mov
mov
add
jmp
mov
test
jno
cmpsb
adc
adc
pop
loope
dec
lods
jne
aas
cmp
in
int
ret
or
pusha
cmpsl
mov
cmp
cmp
xchg
mov
add
aad
jge
cltd
addl
xrelease
clc
and
pop
loopne
out
jecxz
int
mov
adc
fildll
pop
lock
jne
popf
pop
mov
lds
adcl
fucom
int
and
sbb
cmpsl
or
jo
cs
mov
nop
adc
lret
rorl
push
mov
cmpsl
xchg
sbbb
out
or
sbb
ret
adc
sub
cmp
dec
jecxz
mov
shll
sub
jmp
mov
and
jne
xchg
flds
pop
in
insl
int
xchg
mov
mov
mov
push
and
lds
sub
aad
sub
or
mov
in
lock
adc
jb
xchg
addl
lcall
sub
pushf
aas
call
xchg
in
jmp
aad
push
icebp
addr16
nop
inc
stos
or
xchg
leave
pop
push
mov
mov
rcrl
adc
int
cmp
ljmp
subl
clc
xor
dec
cmp
dec
xchg
lahf
jae
iret
xchg
or
pushf
in
xchg
popf
loope
int
push
filds
pushf
stc
and
test
jns
jae
add
sub
or
out
enter
scas
mov
xchg
scas
lds
add
stos
rorb
popf
leave
mov
movsl
xchg
fwait
mov
mov
adc
and
loop
cmp
stc
push
adc
push
sub
cmp
sub
sbb
cmp
xchg
cmp
fbld
and
loope
outsb
mov
push
xchg
int
js
sub
mov
sbb
shrl
mov
pusha
push
arpl
push
xlat
mov
cmp
cmp
push
sub
adc
inc
fs
sub
fwait
lahf
and
fwait
iret
inc
push
jae
bound
in
movl
scas
fcomp
sbb
sub
sbb
shrl
cmpsl
aad
mov
decl
and
mov
sub
loope
mov
xchg
cltd
fnstenv
adc
push
xchg
test
arpl
xlat
pop
inc
call
lahf
sub
mov
in
push
andl
pop
pop
popf
xchg
jmp
lahf
lret
mov
adc
mov
aaa
inc
add
fdivl
shll
xchg
test
cltd
xor
arpl
adc
lods
repz
sub
sub
fdivs
bound
orl
push
sub
pop
lods
mov
lret
mov
xchg
xchg
or
sub
rorl
popf
inc
movsl
xchg
and
xor
or
mov
das
jecxz
sarb
ret
adc
adc
mov
cmpsl
packssdw
aad
push
insb
lcall
call
dec
cltd
sub
pop
lret
ss
in
jle
sub
mov
dec
sub
int
inc
lret
xor
mov
fisttpl
lahf
fistps
mov
sub
test
icebp
xchg
or
jae
mov
shr
or
in
aad
xchg
adc
lahf
movsb
jns
jns
lret
xor
mov
cs
iret
clc
xchg
popf
sub
lahf
ja
xchg
out
clc
cltd
lea
jecxz
xchg
loope
and
insl
xchg
mov
lods
xchg
lahf
cmpsl
sbb
pop
ja
add
mov
and
add
jecxz
xchg
ret
test
jge
movsl
lds
jecxz
push
mov
xor
and
enter
lcall
stos
fldcw
push
xchg
cmp
scas
cmc
movsl
int
pop
and
cltd
fldcw
pop
in
cmp
leave
pop
and
jbe
rol
shrl
std
xlat
jmp
add
ljmp
js
mov
out
jecxz
jnp
movsb
dec
add
enter
fs
xchg
stos
es
mov
out
sub
mov
movsl
sub
adc
pop
int
ret
adc
stos
adc
lods
ror
std
xchg
mov
xchg
out
xlat
push
movsl
in
mov
dec
jg
ret
cmpb
imul
in
or
movsl
clc
jno
fwait
and
pop
cld
xchg
dec
fisubrs
dec
dec
mov
lcall
push
xchg
mov
test
pop
mov
sub
and
mov
lock
pop
test
jecxz
xor
xor
lods
cmp
jb
js
not
lea
in
sub
and
call
jge
jb
arpl
rcrl
cmp
imul
insl
xchg
loopne
imul
xchg
popa
dec
mov
inc
popf
pop
stc
scas
jmp
fiadds
inc
daa
or
popf
pop
jmp
push
push
cltd
popf
fwait
pop
popf
cmp
add
ror
adc
or
or
cmp
int
mov
cmp
sbb
push
sub
movntq
popa
addl
adc
push
jecxz
sub
jmp
and
mov
xchg
pop
adc
dec
mov
int
sub
cmp
mov
xchg
movsb
cmp
adcb
cs
mov
flds
or
cmpsb
sbb
aad
or
sub
idiv
std
mov
mov
or
lret
push
inc
xchg
jb
adc
xlat
cli
jno
ret
cmp
out
push
jecxz
sbb
add
fadd
mov
pop
mov
or
popf
and
ss
loope
inc
shll
inc
adc
mov
lods
and
push
pop
adc
or
or
xlat
adc
xchg
cmp
sahf
mov
imul
rcrl
mov
rorl
out
and
xor
jge
mov
iret
hlt
pop
dec
sahf
in
psubb
lea
idiv
inc
shrl
jbe
lock
add
ret
sarb
addb
imul
xlat
lds
fisubrs
leave
mov
in
push
int
pop
fimuls
insl
out
cs
jmp
pop
fildll
cli
movsl
xorl
jb
lds
mov
cmpsb
js
mov
mov
sub
inc
sub
xchg
xor
xchg
mov
leave
imul
xchg
xchg
or
adc
cmp
in
enter
sub
aam
jmp
jb
and
xchg
pop
cmp
or
jge
mov
cmc
mov
cmp
jmp
in
cmpsl
fwait
ret
jbe
fcmovnbe
add
push
test
subl
sub
mov
sbb
hlt
int3
dec
mov
xor
inc
mov
push
roll
cs
or
jbe
sub
fs
mov
imul
adc
pop
adc
and
mov
mov
in
sbb
in
iret
movsl
or
push
popf
jmp
arpl
hlt
xchg
and
lods
mov
pop
idivb
jmp
cmp
roll
int3
out
xchg
popf
test
fisttpll
sub
pop
mov
lret
mov
cltd
jmp
push
rorb
cmp
test
or
and
popf
pushf
dec
loop
fwait
jb
movl
inc
loope
xor
int3
mov
mov
rcrb
and
fwait
mov
push
cmp
scas
or
iret
cmpsb
out
ficompl
sub
adc
lods
xchg
mov
and
sbb
stos
jbe
cmpb
xchg
add
add
fdivrs
inc
mov
iret
xchg
and
push
push
fcompl
sbb
lcall
inc
mov
jecxz
out
mov
ds
pop
imul
mov
cmp
pop
lret
cmpsl
xchg
xor
scas
shll
subl
jns
aad
push
mov
xor
addl
or
ret
movsl
and
mov
scas
es
pushf
mov
jmp
pop
std
out
ret
adc
rolb
cmpsl
vcvtdq2ps
call
test
imul
adc
push
fstpt
sub
das
das
push
push
and
jecxz
leave
inc
sti
mov
xchg
aas
or
mov
enter
int
stc
iret
fsubl
pop
push
xchg
rcrl
popf
sbb
pop
ret
das
lea
loope
data16
push
xor
loope
sbb
xor
mov
and
mov
push
push
pop
sar
ret
xchg
mov
out
add
call
pop
out
mov
fsts
aad
add
aam
test
leave
pop
dec
sub
xchg
loope
lret
xchg
or
cmc
adc
in
std
push
dec
shll
sbb
lods
movsl
xchg
jmp
adc
inc
aad
jp
in
imul
mov
sub
push
jns
cmc
cmp
sub
xor
or
cmc
imul
andl
add
cmp
jno
movsl
ret
and
xchg
inc
das
ret
or
lea
insb
in
leave
push
popf
stos
leave
cli
jecxz
pushf
int3
pop
mov
repnz
xchg
iret
xor
lds
insl
pop
imul
icebp
dec
push
cs
mov
rcl
or
xchg
lahf
mov
in
scas
sbb
mov
lods
jmp
je
cmp
ret
call
jno
xchg
fstpt
std
push
or
or
in
sarb
scas
loope
in
shrl
and
popa
sub
ficomps
add
adc
mov
xchg
fucomip
xorl
jmp
fwait
mov
out
aad
lcall
xchg
leave
rcll
popf
mov
sbb
jecxz
fldcw
fldt
pushl
inc
sbb
fnstcw
or
cmpsl
es
adcb
mov
lahf
mov
cwtl
mov
mov
sub
stc
lret
shrl
cmp
xchg
pop
cltd
orb
dec
push
cmpsw
roll
std
push
xchg
rol
lds
push
xchg
popf
in
xchg
stos
lret
cltd
addr16
iret
mov
xchg
pop
sub
and
cmp
pop
add
test
xchg
cmp
shr
push
test
popa
xchg
scas
lret
adc
lea
mov
or
jge
scas
movsl
inc
xchg
push
push
lock
lahf
sub
test
jl
lods
outsb
jle
data16
add
mov
pop
in
sbb
ret
pusha
loope
or
sub
lret
insb
push
xchg
jne
fwait
jmp
xor
cmp
pushf
xor
in
rcr
xor
in
lahf
movsl
and
jmp
push
cmp
lahf
jmp
in
mov
mov
push
stc
lahf
lds
or
xchg
mov
mov
xchg
aas
mov
cmpsb
iret
call
xchg
in
xchg
inc
ret
xor
push
es
lea
xchg
popf
clc
mov
aas
fbld
inc
fwait
decl
fwait
ss
xlat
out
iret
dec
push
fnstcw
jbe
shl
or
sti
xlat
stc
sub
xorl
icebp
aad
mov
std
ret
push
push
jmp
popa
sub
cmc
ror
lahf
movsl
cltd
fsts
xchg
pop
add
push
push
mov
xchg
dec
adc
out
cs
push
mov
and
adcl
sbb
jmp
test
lret
xchg
jl,pn
fwait
mov
xor
mov
roll
mov
mov
ret
pop
mov
push
popf
xor
mov
xor
out
mov
es
movsl
mov
jmp
jecxz
lahf
stos
adc
fcmovbe
pop
leave
xchg
dec
jbe
mov
sub
jecxz
and
in
sub
xor
imul
cmp
xchg
cmpsl
push
fucomip
ja
inc
adc
jmp
imul
and
cmp
popf
xchg
adc
jne
iret
mov
dec
rol
out
push
xchg
mov
jg
mov
pop
sti
bound
cmpsl
daa
push
sub
aaa
iret
sub
mov
popa
sub
xchg
and
sbb
lods
push
dec
or
dec
push
repz
or
sarl
mov
in
mov
mov
jno
cmp
mov
pop
push
xor
pop
xor
lods
lds
mov
adc
iret
jmp
jmp
mov
lret
aad
xchg
push
imul
jecxz
insl
sbb
inc
lcall
sub
mov
add
and
cs
mov
add
sbb
sarl
jmp
pop
ret
je
shll
lret
insl
shlb
sbb
and
andb
cmp
sbb
mov
stos
sti
or
out
lea
fstl
popf
mov
xchg
sbb
xchg
cmp
sub
ffreep
js
nop
push
fists
sbb
mov
jae
mov
scas
lods
sbb
cmp
cwtl
push
std
int
jo
in
adc
stc
jns
adc
stos
pop
out
call
pop
adc
ja
or
stc
lret
aad
lea
sahf
lret
mov
jmp
and
adc
xchg
xor
xor
sbb
inc
xor
inc
inc
pop
mov
and
sbb
or
fcmovnb
test
mov
ficompl
popa
decl
loopne
popf
inc
in
popf
dec
push
shl
out
mov
push
mov
pop
int
fs
stc
lahf
xor
popa
mov
and
dec
clc
adc
cmp
out
cmp
mov
pop
stc
out
shrl
adc
popf
mov
lahf
jg
mov
iret
pop
xor
pop
inc
pop
fistl
dec
or
and
mov
lock
shrb
pop
cmp
in
mov
push
rorl
and
sub
dec
repz
push
mov
fcmovu
cmc
and
shll
fadds
sbb
xor
lds
mov
icebp
adc
adc
add
inc
adcb
loope
inc
cmpsb
lret
dec
or
cltd
popf
rorl
fistl
jp
jmp
ret
push
jmp
roll
dec
lahf
ret
and
lock
pop
xor
int3
cld
mov
adc
pop
sarl
push
jge
in
jecxz
lds
rclb
dec
adc
fistpll
mov
mov
fsubr
pop
lret
mov
xor
mov
xchg
sti
iret
cmp
out
rorl
and
xor
jl
dec
aam
push
ljmp
mov
pop
mov
mov
scas
mov
lds
mov
ficoms
xlat
xchg
or
outsl
dec
pushf
add
mov
lea
push
inc
fxch
aas
cmp
out
jmp
push
jmp
loope
fs
pop
stc
adc
out
fwait
int
fmull
xor
mov
xor
add
loope,pn
or
mov
insb
aas
ss
fnstenv
andl
xchg
ficoms
pop
sub
in
rcl
cmc
subb
shlb
or
lods
mov
xchg
nop
mov
and
xorl
mov
popa
cmp
scas
mov
es
inc
push
movsl
das
jo
pushl
xor
jecxz
rcl
push
xchg
rep
aaa
push
int
stos
push
pop
popa
mov
dec
xlat
out
mov
in
stc
lea
imul
enter
aaa
mov
sbb
dec
in
push
sbb
fwait
stc
adc
scas
pop
imul
and
mov
cmp
cmp
push
mov
xor
stos
cmpsl
add
mov
lret
pusha
lea
mov
out
fidivs
sar
xchg
shr
cmp
cmp
jecxz
xor
jo
lahf
xchg
xor
cmp
lds
xor
aad
fnstcw
roll
aad
jmp
test
dec
jecxz
mov
scas
popf
jecxz
popl
cmc
aaa
sub
and
jge
push
test
addl
adc
adc
shr
shlb
test
mov
xchg
mov
cmp
push
inc
cmpsl
in
sbb
or
xor
sahf
mov
lock
in
lods
insl
mov
or
cmp
jne
and
dec
inc
xlat
jmp
sbb
imul
iretw
xor
jecxz
popf
test
cs
popa
inc
add
inc
inc
jb
dec
cmp
cltd
in
cs
fstps
sub
pop
pop
jmp
stc
or
mov
fisttpll
cmpsl
jo
mov
and
and
stc
lea
outsl
add
daa
jne
jmp
shll
fisttpl
and
aaa
xorl
cmp
mov
xchg
fimull
dec
in
ret
cmp
rorl
mov
ja
mov
sub
add
in
shlb
int3
sbb
int3
cmc
popa
scas
aad
xchg
mov
push
lods
mov
fsubs
sbbl
in
js
int
pop
in
sub
mov
lods
cs
out
and
cmc
sbb
and
sub
in
aaa
leave
jmp
ret
in
into
add
iret
mov
mov
xchg
stos
rcll
push
cmpb
imul
out
cmp
fsub
and
cmp
movsl
sub
int
mov
popf
cs
lret
cmp
pop
fmuls
in
fstl
fdiv
push
leave
in
out
jne
lahf
xchg
add
inc
shrl
cmpsb
jge
cltd
sub
clc
aaa
jmp
sub
pop
jecxz
imul
adc
in
faddp
test
pop
je
lret
push
adc
pusha
std
lds
pop
mov
dec
sub
nop
and
bswap
test
and
push
xchg
ljmp
xchg
fdivrs
adcl
cmp
mov
fistps
xor
and
lods
cmc
mov
pop
popf
jecxz
inc
icebp
cs
xchg
loopne
sbb
mov
shr
xor
lock
clc
test
and
xchg
es
mov
iret
xchg
cmpsb
mov
call
and
jge
mov
push
sub
sub
mov
mov
daa
lea
fldenv
in
clc
lret
es
mov
popf
jp
mov
shrb
xchg
stos
xchg
mov
adc
cmp
push
fimull
and
mov
push
ret
loopne
sub
mull
sub
rorl
jecxz
mov
lea
loope
movsl
lods
mov
push
test
add
and
stc
out
subl
xor
leave
aad
cmp
iret
jmp
dec
aad
sub
and
fiadds
mov
ficoms
out
push
rclb
shll
mov
push
adc
test
cwtl
rorb
adc
push
popf
jmp
inc
jno
and
rcl
dec
rolb
cltd
xchg
cmp
xor
jno
test
push
lds
lret
and
jne
sbb
sbb
jb
lea
popa
dec
aaa
sbb
jmp
aas
stos
fmul
inc
fistl
adc
lods
cmc
jp
stc
cmp
or
movsb
in
xchg
hlt
adc
aad
test
push
int
vmwrite
test
xor
mov
out
in
xchg
iret
movsb
movsb
setge
sbb
fmuls
out
adcb
mull
xchg
or
or
divb
push
dec
ret
lods
faddp
sarb
xlat
xchg
and
pop
leave
imul
pop
pop
loop
cs
inc
pop
lds
insb
lea
dec
rcll
or
mov
sar
sub
les
inc
adcl
pop
adc
mov
test
jp
and
out
rorl
scas
xchg
sahf
sbb
xchg
lods
add
lea
xchg
ret
int
push
stos
xchg
xchg
mov
pop
es
cmpl
mov
and
cmpsl
cltd
push
ljmp
ljmp
pop
mov
pusha
and
stos
jne
mov
leave
fwait
sub
xor
sbbl
mov
stc
jmp
xchg
mov
push
push
and
sbb
mov
stos
fisttpl
leave
cmc
aam
fstpl
adc
mov
fidivrl
aas
xor
in
mov
push
popa
mov
or
xchg
in
outsl
imul
dec
xchg
lcall
xchg
test
fnsave
fnstenv
push
imul
popl
andl
lret
scas
lea
mov
sub
fwait
mov
dec
ret
cs
push
xorl
jmp
inc
pop
add
movsl
mov
cmp
and
push
cmpsl
and
lods
cltd
lds
ret
rcr
ljmp
push
lods
dec
inc
lea
mov
lock
hlt
mov
cmp
test
js
lods
test
arpl
int
xchg
hlt
jno
jmp
xchg
leave
cltd
adcl
lret
sub
sub
out
push
scas
daa
mov
daa
cmp
loope
test
pop
xlat
frstor
scas
add
lahf
test
test
xchg
push
mov
sub
jecxz
fs
aas
in
out
insl
pop
xchg
cmp
xor
push
stc
into
in
xchg
sbb
in
jbe
sbb
mov
xor
mov
shl
cld
mov
sbb
cs
iret
popf
scas
xor
xchg
xchg
jmp
xchg
stos
jb
lahf
out
pop
xor
mov
out
adc
push
rorl
mov
nop
cmpsl
cmp
xchg
incl
push
sbb
xor
mov
cs
cmp
mov
and
mov
adc
and
les
and
lea
add
orl
frstor
cli
lea
pop
cmc
jg
rcrb
imul
sub
ds
cmpsb
cwtl
test
dec
pushf
xor
or
dec
and
mov
push
notl
imul
fists
aaa
cmp
iret
fldcw
sbb
xor
iret
jmp
out
aad
sub
xlat
scas
mov
xchg
push
xchg
iret
adc
popa
dec
aaa
ljmp
filds
dec
aad
xor
cltd
jno
fs
enter
stos
jno
mov
daa
xlat
mov
ret
aaa
pop
shll
pop
jmp
aad
pop
cmpsl
pop
xchg
lods
and
mov
addl
jge
dec
ljmp
pop
push
jecxz
inc
movsl
fcoms
sarl
scas
or
and
cltd
fnstsw
notl
test
stos
jbe
pusha
loopne
sub
sbb
test
jae
xchg
stc
add
ljmp
jno
add
testl
mov
cltd
or
lods
mov
fnsave
fstl
xlat
xor
fldl
lods
push
enter
mov
loope
fsts
ror
xorl
fstpl
xchg
fildl
cltd
fcomp
xlat
mov
mov
scas
add
xor
rorl
cmp
test
ja
sub
shll
jmp
test
or
stc
adc
or
cltd
or
and
add
rcr
xor
or
pusha
inc
les
test
mov
das
push
or
lods
int3
xor
lea
popf
lds
mov
in
lods
cltd
mov
xor
pop
push
sbb
movsl
mov
sub
fdivs
sub
ret
test
or
mov
xor
cltd
out
andb
stos
mov
cmpsl
stos
sbb
movsl
mov
sbb
shld
ret
leave
stc
lea
xorb
push
or
jb
movsl
pop
adcb
ljmp
fcomi
rcll
sbb
fisttps
xor
test
fildl
aad
fs
stos
in
inc
mov
iret
sbb
adc
mov
aam
push
pop
cmp
loope
test
adc
stc
jns
mov
test
fcmovnbe
jns
popa
dec
and
icebp
xchg
fwait
into
fldt
das
fistps
daa
lods
pop
cmpsl
jmp
in
cmp
test
ror
popa
aad
jecxz
xor
sarl
dec
mov
fsubrl
fisttps
loop
loop
jecxz
inc
push
sbb
mov
pop
aad
aaa
icebp
cmp
sub
ret
and
loope
push
jne
mov
int
sub
sub
xchg
insl
inc
pop
out
test
test
dec
aad
aam
sbb
xchg
xchg
lret
orb
shll
addb
push
xor
and
out
test
iret
out
andb
fwait
test
or
pop
dec
lds
cmp
mov
sub
fistps
sub
scas
test
dec
in
cmp
leave
fildll
test
mov
lock
lds
popa
insb
sbb
mov
push
ficomps
mov
loopne
mov
inc
lahf
int
push
pop
mov
mov
mov
aad
adc
fldt
fxch
and
adc
cmp
iret
dec
dec
orl
sbb
mov
push
cmpsl
filds
popf
xor
js
push
movsl
mov
repz
pop
inc
and
movsl
or
out
outsb
iret
repnz
push
lret
test
in
subl
cmp
movsl
mov
cmpsl
inc
push
fwait
sbb
imul
push
cltd
xor
shrl
scas
mov
shll
sbb
sbbb
push
lods
iret
adc
jl
xorb
and
cmc
push
jo
pop
popf
dec
fldcw
fsubr
add
cmp
filds
int3
add
mov
fisttpl
int
xchg
fsubs
mov
rcl
xchg
outsb
mov
iret
adcl
xchg
mov
fcomps
and
rcll
cs
enter
sbb
mov
in
test
in
mov
mov
pop
adc
xchg
mov
cmc
sbb
mov
cmp
pushw
imul
cmpsl
sbb
mov
ret
xor
adc
lret
sti
jne
ret
stc
popf
sub
pushf
sub
sub
jge
fldlg2
test
shll
xchg
dec
mov
mov
or
iret
test
or
mov
dec
daa
out
enter
in
inc
mov
fnsave
daa
or
cmpl
jecxz
jecxz
xlat
ret
mov
or
add
call
sbb
sub
add
mov
je
xor
lods
jge
sub
movsl
pop
shl
test
mov
push
and
pop
lds
ror
xor
data16
mov
movsl
ret
jg
mov
push
ret
inc
aad
mov
push
out
sbb
insl
popf
sub
rorb
aas
inc
adcl
or
pop
out
aam
hlt
lods
jmp
clc
lret
cmpsl
ds
mov
lahf
popf
loop
jae
xchg
xchg
cs
cwtl
imul
loope
popa
jecxz
fst
fwait
sbb
lahf
push
loope
adc
aad
insb
enter
ret
in
mov
cmc
sub
sbb
rcrl
lret
rcl
bnd
aam
pop
push
jge
xor
sarl
mov
xlat
cmp
test
imul
xchg
movsl
stc
xchg
cmp
fwait
int
adc
aaa
xor
loope
cmp
sub
sbbb
pop
xchg
lods
jmp
loopne
push
mov
jecxz
sub
mov
jge
lret
fiadds
mov
cwtl
sub
mov
and
and
cmc
mov
lea
sbbl
mov
ss
inc
mov
pop
jae
rol
adc
in
outsl
sub
psubq
push
mov
in
test
jo
add
orl
adcl
jmp
lret
daa
test
push
or
cmp
jmp
loop
add
and
stos
sub
and
adc
cltd
cvttps2pi
rorl
fldt
stos
lods
sbb
clc
pop
out
popf
lahf
sub
cmpsb
sbb
nop
shl
xchg
cmp
fistpl
imul
xlat
push
pushf
xor
lods
pop
xchg
or
xchg
aad
fwait
push
jae
cmp
das
std
xchg
out
push
sub
fldcw
aaa
and
mov
pushl
pop
mov
nop
leave
sarb
sub
mov
cmp
xchg
ret
inc
in
aas
in
pop
jae
xchg
xchg
shrl
nop
and
xor
xlat
xor
inc
loope
sub
lock
movsl
repz
lret
icebp
aas
test
sub
clc
aaa
shr
fwait
shll
cmp
add
adcl
lcall
jb
mov
fnstenv
cmp
out
daa
dec
mov
aad
push
fistl
lahf
add
lods
js
iret
xchg
lea
inc
xchg
pop
ffree
adc
dec
pop
movsl
sarl
add
iret
cs
mov
push
imul
push
cmp
jmp
or
stos
fucomp
push
stc
xor
adcl
cs
scas
popa
es
aaa
mov
mov
sar
push
jns
test
ret
imul
movsl
stc
aad
imul
mov
shlb
test
iret
std
sub
jp
and
xchg
movsb
adc
roll
pop
xchg
in
add
or
dec
mov
xchg
mov
test
sbb
ja
jmp
int
nop
lods
push
rorl
jmp
jb
mov
loope
adc
shrb
pop
sub
fcompl
nop
lds
out
jmp
jae
stc
cmpsl
mov
fcomip
add
and
mov
dec
sahf
test
stos
sub
sbb
lea
dec
test
aad
xchg
sbb
push
sbb
testl
jmp
cmp
test
aas
rorl
outsb
cs
lock
es
sbb
adc
jmp
iret
xor
mov
in
cmp
mov
scas
fidivs
jmp
test
push
ljmp
cmp
or
or
mov
or
adc
or
ljmp
int
test
int
cmp
mov
jne
push
xchg
xor
pop
nop
pop
in
cmpsl
adc
mov
aad
fildll
fucom
xlat
inc
sbb
or
stos
mov
int
sbb
fidivrl
xchg
and
in
es
xlat
iret
push
into
lds
mov
or
push
dec
lods
fucomip
sub
cli
and
iret
push
push
lds
movsl
xor
sbb
cmpsb
mov
mov
sbb
inc
ja
ljmp
jnp
xor
flds
push
xchg
iret
cs
mov
lds
mov
adc
loopne
inc
mov
in
popf
iret
out
pop
xchg
stc
pop
xchg
mov
andnps
movsb
push
int
loopne
aam
push
mov
fdivl
xlat
dec
sbb
in
in
sbb
out
xor
in
add
mov
iret
pop
int
mov
xchg
imul
jmp
movsb
and
sbbl
lea
rorl
xor
fldcw
cmpl
enter
jbe
dec
xchg
dec
and
mov
popf
xor
sub
xor
sar
aad
leave
test
xor
push
imul
cmp
mov
cmp
sub
fsts
mov
imul
xor
test
out
jae
mov
lahf
fstl
adcb
xchg
call
test
cmc
cmp
jne
mov
ret
rolb
pop
xlat
out
in
mov
cmpsb
lret
das
repnz
nop
dec
fmull
mov
scas
insb
iret
mov
cmc
in
push
and
inc
lahf
cmpsl
out
dec
sub
pop
pop
out
nop
ret
idiv
rcr
push
or
sub
xchg
sbbl
es
fwait
xchg
push
daa
out
scas
sub
fistl
movl
cmpsl
mov
cmpl
out
push
leave
mov
in
inc
mov
in
out
mov
sbb
and
pop
adc
push
mov
ljmp
push
lea
inc
in
jmp
jb
push
cmp
pop
fwait
xorb
push
add
fs
sbb
mov
jmp
inc
arpl
mov
mov
stc
lret
sub
inc
inc
adc
xchg
cli
mov
jmp
sbb
jge
shlb
jecxz
xchg
imul
sbb
push
sar
scas
test
mov
addr16
lods
mov
sbb
and
cmp
stos
roll
dec
lock
call
fucomip
fmulp
jecxz
insl
subl
cmpl
mov
mov
add
shrl
xchg
sub
mov
int
rcll
aaa
incl
std
in
xchg
lods
test
cmc
pop
sub
jbe
lcall
push
cmp
in
adc
inc
xchg
imul
push
push
orb
and
cmp
and
push
xchg
out
cli
pop
jp
push
aad
mov
xor
add
movl
jmp
cmp
gs
dec
popa
daa
gs
xchg
in
lret
nop
ret
cmpsl
adcb
add
fbld
lea
test
insl
pop
mov
and
adc
jne
insb
in
pop
popf
js
lea
lods
fstpl
push
fwait
sbb
frstor
jl
popf
test
cs
push
test
insb
sbb
adc
adc
popf
xchg
fstpt
and
pop
pop
andb
imul
rcll
adc
lret
sub
sti
popf
daa
sahf
and
mov
sti
jae
push
add
js
mov
sub
flds
pop
rorl
ljmp
mov
in
and
mov
cwtl
sti
int
adc
dec
ds
push
pop
out
fstps
rol
push
xor
jmp
leave
and
pop
xchg
pop
cmp
daa
out
test
and
mov
js
xchg
or
scas
adc
arpl
mov
sbb
mov
aad
in
sbb
jb
lods
ret
xchg
sahf
movsl
sbbl
imul
and
xchg
out
push
adc
into
ljmp
jae
loope
sbb
mov
jo
pusha
mov
xchg
jb
inc
loope
cld
push
jno
xchg
scas
or
leave
test
pusha
pop
pushf
pop
imul
nop
lahf
nop
mov
imul
fstpl
mov
pop
scas
jmp
pop
rcrl
push
xor
out
lds
jmp
notl
repnz
ss
mov
aaa
sub
fnstenv
ffreep
jg
loope
les
cltd
mov
ds
push
adc
fildll
push
push
cmp
mov
in
xchg
lds
xchg
xor
aas
sub
mov
cmp
sbb
push
data16
sahf
fucomp
mov
add
fwait
push
movsb
mov
fmull
fmul
sub
lods
xor
es
loope
mov
pop
push
and
clc
mov
fsubs
mov
push
in
add
and
adc
lret
add
test
xchg
add
or
stos
cmc
stc
push
push
lds
shll
xchg
jp
push
push
js
roll
and
pop
stos
addl
jno
in
push
push
bswap
shll
out
sub
cmc
or
ret
mov
aam
ss
fnstsw
in
xchg
jmp
stc
mov
fdiv
les
jae
add
cs
sbb
orl
and
jmp
cs
imul
adcl
ret
lret
shrb
xchg
xchg
leave
mov
xlat
and
dec
push
mov
mov
shrl
and
or
cs
lods
jbe
inc
push
fistpll
shll
push
cmp
fistl
out
popf
jmp
mov
or
mov
int
into
test
sarb
stos
loope
das
in
cs
aad
and
and
in
sub
xchg
sbb
mov
add
filds
ret
mov
rorb
rcr
adc
sub
insl
pop
adc
lea
xchg
cmp
dec
popf
shrl
add
jecxz
and
loop
imul
sbb
add
mov
in
cmp
and
cmpsl
jne
or
andl
sbb
and
in
mov
leave
xchg
mov
in
loope
cmp
pop
jmp
adc
in
adc
lcall
scas
out
ljmp
cmp
inc
mov
imul
lea
cmp
jl
mov
mov
mov
mov
test
inc
pushl
nop
lea
in
push
scas
mov
pop
sub
filds
cmc
push
mov
stc
mov
sub
sbb
or
ret
xchg
out
mov
aad
roll
popa
fwait
jmp
mov
dec
cmc
daa
lods
xchg
mov
cmp
sub
test
adc
jno
sub
lea
in
out
test
jns
out
mov
mov
and
sub
in
mov
aad
xor
sub
test
xchg
aaa
cmp
lahf
int
psubw
cmpsl
xchg
rcrl
and
push
mov
fs
add
cltd
aas
test
std
mov
mov
in
mov
xchg
loope
mov
sbb
push
in
lret
mov
xchg
sub
dec
lock
pop
loope
cmpsl
sbb
clc
lret
out
and
add
mov
push
adc
xchg
cltd
pop
cmc
call
mov
rorl
mov
imul
mov
dec
aad
mov
es
jmp
popf
cs
or
shll
addl
xchg
or
cmp
out
cmpsl
inc
jmp
andb
loop
fmuls
adc
sbb
jecxz
cmp
into
cmc
out
add
loope
cmp
mov
mov
adc
and
mov
or
pop
xor
add
fisttpll
and
stc
mov
dec
push
addl
lods
and
psubd
push
add
mov
sbb
int
arpl
xor
clc
ds
pusha
aaa
mov
call
dec
dec
xchg
imul
sbb
mov
push
and
or
xchg
jecxz
inc
es
in
dec
mov
sti
in
sub
pop
clc
sbb
xor
or
and
add
aad
cmpsb
test
sub
lret
lahf
cmpsl
xchg
lea
loopne
rol
aad
dec
xchg
test
cs
sbb
and
cwtl
mov
movsl
cltd
mov
xor
fcom
fsubr
ja
stos
cmp
inc
aas
xchg
std
es
in
mov
adcl
and
into
or
xor
cs
iret
fisubrl
fstpl
imul
or
aaa
and
cmp
pushf
orl
clc
call
iret
push
ljmp
lret
jb,pn
sbb
xchg
cltd
pop
int3
icebp
movsl
dec
jl
insl
pusha
push
in
mov
push
fidivrl
in
movsb
pusha
push
stos
cltd
shll
or
stc
sbb
fwait
imul
adc
orb
cltd
inc
lahf
push
jle
fildll
sub
push
out
mov
std
ja
inc
and
and
jno
adcb
mov
popf
cmpsl
sub
pop
gs
mov
es
outsb
aam
cmp
push
fdivs
cmpsb
mov
pop
lret
mov
popf
and
cmp
iret
cmp
xchg
sub
test
data16
jnp
rcll
xor
jg
adcb
subl
fbstp
mov
mov
pop
int3
lret
and
test
outsb
fwait
xchg
add
loopne
pop
mov
fcomps
into
rorl
js
lods
mov
call
mov
cld
sub
sub
aad
mov
fnstcw
mov
sarl
aad
lods
pop
sbb
pop
mov
fwait
sbb
sub
and
xor
lret
movsl
mov
xor
out
mov
inc
mov
dec
loop
push
xchg
mov
dec
xchg
mov
stc
adc
jecxz
mov
and
push
cmp
sbbl
pop
jnp
es
xor
jne
dec
or
ja
inc
jbe
mov
dec
sti
push
push
pop
adc
xchg
aad
mov
fnstcw
rorl
mov
lods
aad
jae
aam
movsl
or
test
or
dec
cltd
aad
int
out
in
mov
leave
fnstcw
movsl
in
mov
push
mov
xchg
cmpsb
cmp
and
sbb
ja
movsl
aad
leave
scas
xchg
mov
push
mov
cmp
loope
cmp
rcrb
mov
inc
iret
pop
add
iret
lret
jae
mov
mov
dec
mov
or
popa
in
jecxz
enter
out
jmp
popf
iret
xor
mov
ljmp
mov
adc
mov
fwait
es
movsb
popf
popa
jns
and
dec
sarl
scas
or
add
pusha
cld
push
cmpsl
or
and
fcoml
leave
in
pop
cmp
sub
xor
push
jp
cmp
mov
push
jne
add
xor
js
pop
mov
aam
xor
cmp
cs
ret
dec
int
cmp
and
push
add
sbb
cltd
movsl
lret
add
pop
iret
add
lods
out
stos
lahf
and
call
jns
inc
adc
xor
pop
pop
pusha
inc
xlat
jbe
pusha
xchg
mov
and
inc
cmp
or
ret
pop
clc
pop
jmp
lret
jecxz
pop
mov
popf
cmpsl
cmp
mov
rorl
lret
out
lds
sbb
push
stc
insb
cwtl
test
iret
jb
cwtl
movsl
es
or
fwait
iret
mov
in
js
frstor
imul
jmp
lds
sub
jbe
icebp
repnz
cltd
iret
adc
inc
hlt
les
inc
leave
and
std
jmp
popf
add
call
scas
jne
popf
adc
roll
xchg
test
or
add
int
pop
shll
stos
les
in
test
xchg
pop
mov
sub
xorb
out
push
in
insl
ret
and
mov
sub
iret
push
push
cltd
stos
dec
test
fdivrl
sub
and
in
sbb
pop
mov
lret
in
mov
cs
pop
insl
cs
stc
outsl
mov
lock
sarb
loope
adc
cltd
sbb
js
mov
mov
ljmp
add
test
fwait
hlt
sbb
inc
push
mov
dec
aaa
pop
fistps
stos
xchg
xor
fsubs
mov
pop
jecxz
iret
aas
pop
inc
sub
cmp
lods
mov
sub
sub
xchg
pop
xor
or
test
cmpsl
xchg
sahf
popf
pop
mov
lock
sbb
les
loop
mov
lea
fs
push
mov
xor
dec
mov
pop
inc
iret
in
lods
push
jno
jmp
lahf
inc
icebp
mov
movsl
mov
cs
sbb
cmovne
sub
fsubrl
stos
mov
ffreep
adc
add
xchg
jns
push
flds
jno
insb
test
and
mov
add
stc
js
lahf
ja
xlat
push
repz
lods
adc
xor
cmpsb
mov
mov
cmp
out
sarl
mov
mov
pop
sub
rcr
cwtl
adc
cmp
in
cmp
inc
cltd
xchg
jl
ss
clc
ret
xchg
insl
mov
in
mov
sub
test
lds
lahf
in
mov
clc
or
lret
int3
xor
out
and
dec
leave
rorl
push
pushf
mov
sarl
xorl
in
jo
loope
push
mov
and
arpl
and
or
loop
in
popa
mov
mov
aam
fbstp
lcall
xchg
mov
mov
xlat
cwtl
imul
shrl
and
ficoms
bound
lods
jno
aad
inc
mov
cltd
jmp
xchg
push
adc
push
jo
add
mov
rorl
cmpsl
xlat
xchg
ja
push
push
setnp
scas
popf
mov
jge
add
pextrw
lcall
fwait
sub
shr
and
xlat
sub
sub
adcl
push
sub
adc
adcl
orb
in
ret
sahf
data16
cli
sbb
pop
test
stos
mov
scas
fcoms
ss
test
cmp
aaa
sub
and
ja
das
leave
cmp
and
jae
shll
iret
aaa
fistpll
sbb
fwait
popf
mov
inc
jge
cmpsl
fwait
adcl
scas
int3
mull
pop
pop
int
pop
mov
jns
mov
xorl
lret
int3
iret
mov
sbb
jecxz
cmp
cmp
test
lea
sub
lcall
lret
xor
mov
in
test
sbb
push
nop
mov
adc
movsb
imul
sub
daa
out
pushw
mov
add
jecxz
scas
cmpsl
leave
jmp
sub
jmp
pop
adc
push
sub
mov
filds
vmovaps
pop
lahf
fistpl
jb
and
jns
ljmp
jmp
lret
cmp
lods
xchg
in
mov
sahf
mov
push
ret
fs
cmp
shrl
cmp
sub
and
lods
rorl
sbb
iret
loope
lods
cld
insl
xchg
test
out
into
add
test
cltd
sub
sub
adc
push
xchg
repnz
pop
mov
testl
xlat
sbb
mov
and
push
pop
push
jmp
adc
and
mov
pop
cltd
jmp
aam
out
movsl
test
lret
mov
sub
fsubs
xchg
mov
xchg
cmp
inc
or
or
mov
lea
shl
jmp
push
jne
or
sub
add
icebp
mov
daa
out
test
lds
jmp
push
orl
jmp
es
inc
enter
lret
xchg
mov
mov
enter
push
jmp
out
decl
adc
nop
mov
fwait
hlt
testl
or
jmp
rorl
cmp
pushf
or
lds
mov
sub
add
add
fmull
mov
ror
lahf
or
aad
into
or
cwtl
scas
vpmaxub
call
or
sbb
int3
scas
iret
in
fidivs
fsub
add
push
mov
inc
test
jb
lods
in
fidivrl
or
sub
jno
int
andb
xor
es
mov
fadds
add
pop
in
scas
xchg
adc
insb
or
insl
imul
push
sbb
push
out
shrl
push
lock
dec
ljmp
add
lods
cltd
stos
pop
pop
sub
sub
cltd
sub
add
into
andl
add
pop
loopne
mov
das
and
adc
xchg
cwtl
mull
dec
pop
dec
xlat
mov
out
and
xchg
pop
adc
test
cmp
sub
test
push
inc
aad
adcl
add
imul
fstl
iret
dec
lahf
push
data16
lods
mov
in
je
jle
sub
fldl2t
in
stos
mov
xchg
cs
pop
xor
add
and
xchg
inc
inc
lret
push
xor
mov
daa
in
sub
cltd
fmuls
xchg
jg
loop
inc
cmpsb
jo
xchg
pop
or
add
xchg
shll
mov
test
test
shl
subl
std
cs
mov
sbb
aad
jg
subl
sbb
dec
pop
mov
leave
out
lock
jmp
cmp
shll
es
pop
addl
jae
xchg
or
cmp
sbb
xchg
pop
test
loope
jg
es
jnp
mov
iret
jecxz
adc
sub
aad
lods
and
rcll
cmpl
sub
cmp
xchg
jne
fcomp
inc
test
sbb
stc
loope
mov
push
jmp
add
mov
pop
sub
loope
and
xor
popf
xor
das
xchg
xchg
sub
inc
rol
or
mov
jae
scas
cs
sub
cmp
lahf
cltd
and
jne
insl
popl
pop
pop
pop
clc
xchg
fucomp
inc
mov
loope
fbstp
js
jmp
popf
cmp
jo
xchg
lock
xor
fidivrs
cmc
test
jmp
cmp
xchg
popf
insl
dec
jne
fxam
popa
push
adc
cltd
xchg
mov
movsl
imul
pop
cmp
pop
lret
in
pop
push
jmp
sub
iret
lahf
aad
mov
jmp
sub
movsl
sub
popf
insb
insb
aam
test
and
add
mov
inc
mov
leave
out
rcr
cltd
sbb
pop
push
fnstenv
mov
rcrl
rcll
popf
dec
icebp
aad
push
jnp
sub
jbe
dec
lret
xchg
cmp
int3
fidivrl
sbb
xor
jmp
faddp
push
push
shr
shlb
xchg
cmpl
ret
inc
stc
push
rolb
ljmp
xchg
in
cltd
lret
cs
rcll
flds
pushf
mov
or
adcb
popf
add
scas
andl
lret
jns
mov
das
or
cltd
popf
dec
sbb
adc
or
stc
inc
sbb
loopne
jae
sbb
inc
push
test
jecxz
dec
jmp
xchg
jmp
mov
pop
sar
or
fisttpll
lret
into
inc
andb
push
rolb
cmp
test
in
lea
stos
iret
push
mov
jmp
jmp
int3
add
js
mov
in
cmp
mov
sub
dec
adc
sub
adcl
insl
and
jle
popf
ss
pop
and
mov
jl
fs
mov
inc
lock
xchg
inc
lea
hlt
and
daa
lcall
imul
test
outsb
mov
in
jo
xchg
outsb
dec
fidivrl
jmp
push
dec
popa
stc
in
pop
cmpsl
jmp
jge
in
sahf
outsl
xchg
mov
std
cmp
pop
mov
cmc
outsl
fmull
lock
leave
andl
dec
inc
ds
fcomps
lcall
addl
adc
or
xchg
pusha
das
das
cld
cmpb
js
pop
das
xlat
sub
inc
addb
shlb
cmpsl
sbbb
rcr
pop
add
jb
or
leave
jmp
shrl
insl
shrb
pop
mov
jnp
fwait
sub
ret
mov
jb
adc
sub
in
sarl
leave
xchg
std
and
lahf
scas
sub
movsl
cs
leave
jecxz
dec
cltd
cmp
push
mov
push
lds
out
lahf
lods
ret
push
or
shr
fcom
aad
adc
loope
lret
mov
pop
ljmp
xlat
aaa
xor
fldt
in
icebp
in
add
push
xchg
adcl
mov
push
scas
push
fbld
xchg
aad
test
and
pop
movsl
shll
fildl
mov
loope
mov
push
cmpb
push
pop
orl
sbb
jne
fildl
aad
lret
xchg
pop
je
xor
adc
in
insl
fists
fstl
xchg
insw
int
lea
aas
fs
movsl
add
sbbb
out
push
hlt
xor
dec
repnz
cmp
mov
push
push
xchg
push
inc
cmp
and
xchg
pop
aad
stos
int3
mov
mov
mov
hlt
xchg
dec
sub
std
add
fwait
sub
sub
stc
jecxz
push
test
and
inc
shll
aaa
xchg
lret
leave
xchg
cmp
popf
out
in
stc
rclb
or
sets
sub
add
mov
xchg
lret
lock
xorb
iret
fldl
lea
call
mov
aad
fwait
jmp
jae
or
hlt
lret
jge
inc
in
pop
cmpsl
mov
mov
insl
mov
shll
call
jmp
test
pop
in
out
bound
sub
jns
adc
shrb
xor
and
or
and
pop
ret
adc
xor
dec
cmp
xchg
pop
and
xor
out
mov
popa
mov
shrl
clc
mov
jecxz
and
xor
popf
stos
cmp
sbb
and
loopne
mov
insl
iret
lcall
sbb
or
and
push
notl
xor
push
into
out
lahf
push
inc
cmp
mov
lret
stc
cmp
in
adc
popa
test
pushl
iret
xor
rcl
in
leave
lret
bts
fnstsw
jbe
mov
pop
in
push
and
iret
cmp
mov
mov
inc
xor
inc
and
mov
jae
lods
fistpl
es
stos
mov
test
int
addr16
dec
in
or
lods
lcall
lods
and
sub
lret
mov
les
xchg
xor
pop
test
jmp
loope
into
cmp
sbb
mov
and
orl
xchg
cld
out
add
lea
lahf
lds
mov
test
lret
popa
xchg
ret
jmp
pop
pop
jg
adc
nop
sub
in
inc
ret
push
and
xchg
lahf
inc
cmp
sbb
scas
ljmp
faddl
out
sub
es
sub
nop
and
xor
iret
cli
scas
aad
lds
adc
xor
adc
pop
xchg
shrb
or
movsl
movl
in
jmp
test
xor
int
lcall
enter
cmp
cmc
mov
loope
mov
scas
mov
and
cmpsb
shl
xor
mov
push
popf
add
xor
mov
cmp
clc
pop
cmp
mov
jbe
sahf
rol
sub
pop
fcomi
mov
push
out
lods
xchg
insl
mov
jae
sub
iret
inc
and
pusha
mov
pushl
aaa
lret
mov
leave
lds
sti
loope
sub
stos
cmp
hlt
sub
xchg
sub
jno
lds
sbb
std
sub
xor
jne
int3
fldt
subb
fxch
lret
sbb
int
push
mov
popf
inc
adc
sub
sub
imul
aas
popf
mov
decl
cmp
sbb
mov
cmc
insb
loope
in
cmc
adc
pop
mov
shrl
sub
fsubl
jp
mov
fistpll
mov
jecxz
xchg
xchg
pop
cltd
bt
fnstcw
pop
lock
and
sbb
cs
stc
jmp
xchg
dec
test
lock
sub
pop
mov
adc
loope
lods
cltd
enter
mov
outsl
adcb
daa
les
mov
aad
rorl
cmp
cli
in
loope
xchg
aas
iret
jae
sub
push
dec
jno
mov
sbb
mov
sarl
mov
es
cmp
insl
iret
imul
call
fistpl
sahf
pop
and
push
xchg
mov
int3
mov
out
jne
cmpl
pop
cmpsl
int
dec
lahf
in
sbb
enter
cmp
sub
lret
rolb
roll
add
in
in
jge
ret
test
cmp
cmpsl
adc
cltd
stos
popf
iret
pop
ds
loope
ret
pop
or
sarb
sub
lea
out
std
lock
push
fstpt
mov
fwait
inc
cmp
shrl
mov
aam
arpl
adc
cmp
jg
in
insl
mov
adcl
fisubrl
ret
jne
fnsave
mov
xchg
jmp
fcmovnu
xchg
push
leave
sahf
sbb
add
mov
rorl
cmpsl
push
xchg
jmp
leave
cmp
mov
mov
pop
js
sub
out
lcall
push
fdivrs
leave
test
xor
dec
rorb
mov
dec
lcall
lods
push
or
ret
fabs
adc
fs
stos
and
push
int3
xchg
jne
jmp
pop
lret
daa
aam
and
gs
pop
push
test
inc
leave
sub
in
mov
sbb
adc
jb
mov
sbb
iret
cmp
imul
xchg
pop
pop
push
arpl
insl
lret
stos
lret
adc
call
ret
rclb
scas
inc
icebp
cmpsl
mov
testl
sbb
jnp
adc
mov
call
out
mov
push
mov
icebp
lahf
rclb
xchg
std
in
xorb
pusha
loope
inc
push
xchg
mov
sarl
lcall
dec
in
jmp
in
aaa
xchg
inc
lods
mov
popa
push
mov
xchg
iret
sub
sub
mov
pop
or
and
enter
subb
popf
mov
aas
xchg
test
in
mov
lods
fisttps
jge
cmp
in
rcr
lahf
dec
jl
rcl
clc
das
iret
sub
push
xor
xchg
mov
sbb
add
scas
jmp
adc
imul
rcr
sti
dec
nop
test
mov
sbb
out
dec
stc
xchg
iret
add
mov
and
std
pop
sub
sahf
or
sub
enter
xor
xlat
push
fldl
xchg
mov
pop
sahf
in
fwait
ds
xlat
fnsave
mov
push
ljmp
mov
stos
idivl
aaa
cmc
incl
inc
inc
jge
scas
repz
mov
mov
test
or
xor
in
pop
popf
xchg
fsts
mov
int3
cltd
out
cmp
fbstp
xchg
rorl
test
cmc
xchg
test
test
jne
js
fwait
xchg
jbe
jnp
sub
add
add
stc
lahf
dec
cmp
xorb
mov
test
xchg
enter
adc
aas
and
jmp
aad
test
mov
fstpt
iret
jecxz
ror
cmpsb
test
sbb
sub
pop
or
push
jne
xor
leave
call
sti
lea
ds
daa
sbbl
iret
cmc
cmp
or
movsl
test
push
scas
xchg
fbld
test
pop
sbbl
cmpsb
imul
mov
jmp
cmpsb
or
lret
push
iret
dec
xchg
jne
out
lahf
pop
inc
es
jp
fildl
fnstsw
ljmp
add
xlat
in
jp
jecxz
fstps
lret
xchg
jno
nop
cmpl
cmp
adc
xchg
out
mov
jns
mov
adc
xlat
iret
mov
sbb
movsl
es
shrl
cltd
adc
test
rcrb
mov
dec
xchg
cmp
sub
adc
mov
jmp
xchg
sbb
aas
out
clc
scas
xorl
mov
sbbb
stos
add
and
or
or
lds
pop
dec
jmp
jecxz
or
mov
xor
aad
daa
out
sbbl
cmp
out
mov
and
insl
and
inc
add
movl
test
xchg
repz
cmp
cli
out
xor
cs
orb
testb
cltd
clc
sub
sbb
clc
jecxz
lods
out
xor
leave
icebp
lods
xor
and
es
cmp
stc
mov
pop
cmpsb
adc
iret
cltd
cmpl
jne
lcall
pop
test
shl
out
movsl
pop
inc
inc
mov
push
lcall
xchg
jecxz
mov
or
stos
mov
pushf
clc
sub
iret
into
in
loopne
cmp
rcr
cmp
into
in
popf
cs
arpl
jecxz
lcall
iret
test
fisttpl
andl
xchg
push
lret
leave
inc
mov
mov
int3
mov
jmp
rcl
out
aaa
jmp
iret
in
cmpsl
out
jae
lock
lahf
test
xchg
out
sub
push
lret
push
shll
test
sub
lret
out
pop
scas
cmp
add
inc
popa
mulb
xor
and
rcrl
js
adc
push
shr
cmp
jge
xor
fisttps
cwtl
rolb
xchg
fs
fwait
sub
xchg
enter
lods
icebp
push
pop
xchg
dec
iretw
xchg
mov
cltd
cmpb
aas
xchg
test
xor
loope
lds
jecxz
and
pop
cmp
movsl
imul
test
mov
xor
xchg
mov
cmp
in
cmp
fnstsw
push
mov
mov
pop
in
enter
rcr
jge
loope
sbb
or
xor
sbb
xchg
mov
dec
sub
insb
cmp
lea
movsl
fisubs
stos
jmp
cmpb
decb
xchg
or
mov
xchg
stc
mov
push
pop
lea
bound
scas
lds
dec
outsl
sbb
rorl
jmp
dec
lahf
subb
xchg
lea
xchg
cmpsl
cmp
std
out
sbb
out
xchg
js
inc
sub
movsl
xchg
in
cmpsb
and
xlat
mov
xchg
loope
in
add
sti
stos
cwtl
or
popl
es
sub
push
cmp
push
sbb
popf
xchg
stc
pop
addl
loope
in
xchg
mov
push
cmp
fld
mov
add
adc
pop
subl
add
cmpsl
xchg
cmp
out
das
add
movsl
add
dec
insb
mov
out
sti
psubd
mov
or
push
enter
adcb
xchg
test
cld
cmpsb
xchg
clc
sbb
cmp
push
imulb
daa
imul
test
add
jmp
or
enter
lcall
mov
pusha
mov
sub
or
fildll
stos
xlat
pop
popf
add
movsl
ret
cmpsl
mov
bound
in
movsb
pop
fistps
mov
rol
and
adc
imul
or
sub
pop
fwait
mov
sub
scas
in
mov
fwait
test
sti
xlat
shr
js,pn
mov
mov
sbb
call
in
and
testl
test
shll
cmpsb
in
jb
pop
lahf
loope
xchg
fisubrs
scas
push
in
in
mov
out
or
test
andb
int
xchg
xchg
andb
or
aas
xchg
out
dec
fsubl
or
pop
stc
lds
xchg
daa
arpl
dec
fstpl
jae
inc
mov
push
xchg
scas
out
or
test
daa
jmp
test
lahf
stos
sahf
int3
rcll
hlt
shrl
mov
cmp
inc
iret
nop
xchg
xchg
and
ret
and
push
ret
sarb
jecxz
cmp
je
push
aas
adc
iret
push
inc
shll
pop
mov
adc
lahf
stc
jne
sub
fistps
mov
stc
jo
adc
fldenv
and
mov
int
fldcw
mov
aad
jmp
xchg
iret
and
dec
xlat
inc
jno
out
cmpsb
int3
cltd
iret
rcrb
sub
cmpsl
lods
bt
sarl
in
shrb
imul
stc
adc
mov
pusha
xchg
push
and
or
int
xchg
adc
fiadds
lret
aam
call
filds
fyl2xp1
stos
repz
cltd
imul
int3
arpl
popf
dec
aas
ret
jge
imulb
push
xor
dec
mov
iret
and
cmp
add
push
add
ret
shlb
loope
aad
pop
andl
mov
std
mov
fcoml
lret
fldt
loope
adc
sbb
shrb
fstl
cmp
jno
ss
sub
push
pop
lds
std
int
in
or
mov
add
mov
mov
fwait
lret
lds
xchg
fwait
pop
add
orb
aam
mov
in
jae
pop
and
popa
insl
imul
pop
cltd
cmp
mov
sub
outsb
in
mov
leave
fwait
int
test
dec
mov
loop
out
fwait
enter
movsl
inc
stos
lods
push
mov
xchg
mov
aaa
aad
jmp
sub
xchg
fldt
leave
add
lea
into
hlt
out
testl
scas
in
cs
jb
mov
cltd
or
popf
stc
in
pop
sub
js
mov
movsl
ret
cmp
push
xor
add
adc
cmp
shl
lods
adc
dec
subl
test
in
shll
xchg
sub
int
cltd
jmp
sbb
xor
inc
in
ds
xchg
jecxz
nop
in
push
mov
mov
pop
ret
int
push
sar
pop
cmpsl
xchg
iret
xlat
leave
inc
lret
xchg
pop
and
es
jecxz
pop
mov
mov
and
jle
out
rcl
push
xchg
add
jnp
add
push
xchg
xchg
xchg
enter
scas
shrl
int
push
jecxz
sbb
mov
addr16
jmp
sub
stc
dec
jno
popf
cmp
mov
xchg
add
sub
add
jnp
xchg
cmpsl
jb
or
lret
or
int
bound
and
pop
int
cs
divl
leave
loope
loope
insl
jb
sbb
mov
iret
mov
xchg
loope
adc
leave
lods
and
sub
icebp
xor
cmc
jo
push
add
mov
add
xchg
mov
fldl
push
int3
push
lahf
push
jo
insb
sbb
cs
std
add
stos
xchg
cmp
scas
sbb
pusha
add
std
lret
cmc
lods
sti
jmp
pop
cs
mov
and
js
in
inc
mov
daa
and
and
addb
test
and
dec
cmp
pop
sub
dec
lret
je
insb
or
popf
jne
push
xchg
mov
inc
pop
fwait
push
rolb
jns
and
inc
test
push
jae
sub
cmp
es
fdivs
pop
jno
fucom
mov
lods
ret
test
icebp
cmp
mov
imul
and
addl
movsl
xchg
jne
mov
leave
in
cmpsl
mov
and
arpl
out
add
or
sbb
pop
lea
adc
dec
sub
mov
pushf
popf
xchg
jno
xor
mov
sbb
sbb
pop
push
sub
iret
mov
ja
lods
mov
jo
loopne
sub
fstpt
xor
jge
cmp
lods
and
add
jge
add
repz
leave
fildll
cmp
movsl
in
in
adc
lods
jae
icebp
cli
addl
xor
lret
mov
bound
dec
ret
out
push
mov
repnz
inc
lea
xlat
cmpsl
frstor
or
in
mov
mov
into
lods
in
mov
mov
pop
ret
movsl
mov
jecxz
es
mov
cltd
cmpsl
pusha
hlt
inc
jmp
arpl
jne
leave
pop
and
mov
cltd
lret
cltd
rolb
adcb
and
roll
lea
nop
inc
testl
xchg
inc
cmovl
cmpsl
mov
notb
lods
dec
xchg
inc
sbbl
hlt
in
std
add
imul
and
test
sub
loope
popf
jmp
rcll
sub
lahf
push
addl
addl
in
rorl
xlat
mov
mov
mov
xchg
xor
lds
push
mov
xchg
cmp
sub
and
test
pop
stos
stc
dec
mov
sub
shr
jge
icebp
sbb
out
cmp
sbb
idivl
out
imul
mov
aam
int
mov
into
nop
mov
insb
out
es
cwtl
mov
or
ljmp
cmp
iret
and
icebp
scas
or
jl
cmpb
mov
scas
test
inc
test
xchg
test
pop
dec
jmp
jl
mov
cmc
into
int
mov
xchg
clc
lahf
hlt
rcrb
cmp
daa
lahf
fs
lds
mov
mov
andb
cmp
or
push
dec
lds
xlat
add
ja
test
sub
daa
inc
jge
add
dec
mov
shll
lods
jge
and
mov
fcom
cltd
and
and
cmp
push
imul
lods
popf
iret
test
mov
popf
fldenv
xor
mov
push
or
mov
xchg
push
out
test
lods
and
loop
sahf
sub
popf
lret
test
sub
int
adcb
int
fistps
jmp
jno
lahf
mov
jle
mov
out
adc
jmp
notb
adc
fwait
testl
lahf
mov
out
and
fcomp
jmp
mov
and
lret
lods
rcll
pop
xchg
dec
mov
fwait
inc
cmp
mov
and
bound
subb
shrl
cmp
cmpsl
xchg
jne
jmp
hlt
or
jmp
es
lret
add
loope
sbbl
push
ja
inc
loope
out
rcrb
mov
xlat
cs
mov
xchg
inc
cmp
iret
stos
stos
lret
test
xchg
lea
sub
xchg
clc
inc
in
push
test
jae
xor
fildll
xchg
aas
xchg
std
cmp
add
sbb
xor
fisttps
pop
mov
push
in
mov
lods
lret
test
push
js
xchg
pop
xchg
sbbl
jecxz
and
add
mov
mov
sub
addl
jo
int
sbb
les
aad
push
lea
pop
mov
dec
out
popa
mov
or
call
inc
leave
xchg
insl
mov
pop
jmp
and
imul
mov
aam
xor
bound
jae
push
mov
mov
clc
and
hlt
sub
adc
loope
imul
mov
mov
jbe
cs
push
mov
jp
nop
xchg
mov
int
dec
mov
jmp
aad
lods
mov
imul
ss
test
sti
in
sbb
xchg
fwait
cs
dec
jb
mov
xlat
add
add
movsl
pextrw
cmp
cmpsl
in
ret
push
faddp
test
clc
cmp
lahf
dec
or
stos
lds
or
dec
inc
xor
test
and
adc
and
stc
fnstenv
and
icebp
rcr
sub
test
mov
stc
scas
lea
shll
mov
sarl
cmp
sbb
rorl
ja
or
js
popf
sub
dec
in
and
nop
push
data16
jecxz
xor
fstp
loop
ljmp
clc
cmp
jb
in
push
xchg
jecxz
movsl
adc
pushf
dec
mov
aad
icebp
rorl
cmpsl
cmp
psubb
pusha
frstor
xchg
xor
mov
jmp
nop
mov
xchg
xor
jg
pop
mov
push
sbb
into
jae
in
xlat
pop
and
and
sub
rorb
fldpi
leave
int
stos
mov
ret
xchg
push
or
sub
jae
push
xlat
push
mov
push
shl
xchg
in
and
mov
iret
scas
fistps
dec
mov
adc
xchg
adc
and
xchg
test
lret
popf
sbb
jecxz
sub
subl
ds
sbb
cmp
leave
jecxz
popf
sub
std
mov
data16
pop
jmp
mov
stos
or
sub
into
xor
sbb
mov
mov
fwait
sub
lahf
leave
xchg
insb
sbb
fstl
add
or
xchg
add
stc
inc
and
mov
popf
lods
add
lahf
or
shr
testl
stos
in
add
adc
xchg
lods
rcll
inc
cmp
icebp
addl
sbb
test
xchg
inc
xchg
xchg
cltd
and
jmp
mov
repz
cmp
into
clc
nop
adc
aaa
xchg
and
xlat
aad
pop
popf
stc
cmpsl
xchg
shl
ds
aad
dec
jmp
or
mov
in
shll
lds
iret
pop
call
aas
lret
jno
sub
roll
inc
add
cmc
push
scas
shll
cmpsl
movsl
shrb
es
push
int
stos
sbb
pushf
cmpsl
into
cmc
repz
mov
inc
cwtl
sbb
test
iret
xchg
sbb
das
push
arpl
pop
jbe
rcl
lret
insl
mov
dec
rorb
in
in
iret
mov
and
inc
sbb
fcoml
mov
push
mov
fwait
pusha
mov
jmp
push
and
das
shll
cmpsl
or
fstps
xchg
push
mov
popf
xlat
sub
mov
add
cmp
movsl
fwait
aaa
cmp
out
mov
jne
in
sub
lret
push
push
pop
xlat
mov
out
std
fsts
mov
cmp
xor
cmpsl
sub
in
and
test
loopne
fistl
int
test
mov
fistpll
pop
fdivl
aad
popf
stos
leave
push
cs
xlat
jmp
add
xor
xchg
sbb
push
sub
mov
stc
mov
pop
jmp
repnz
cmp
scas
xlat
mov
cld
stc
stc
lods
inc
call
mov
jge
sbb
push
and
pop
enter
xchg
cmc
std
in
mov
or
fisttpl
jne
push
lret
pop
xchg
lahf
ret
rcrl
pop
sbb
negb
dec
pop
testl
push
pop
jle
repnz
ror
xadd
loope
lret
mov
mov
jno
mov
fs
orl
inc
lods
loope
pop
fwait
es
jp
clc
sub
imul
cmpl
push
sahf
call
xor
xor
fldt
xor
push
movsl
mov
adc
xchg
xorl
jle
in
imul
adc
cs
xor
std
or
mov
subl
mov
into
lods
popf
test
cmpsl
mov
scas
and
rorl
roll
popa
adcb
adc
jmp
cmp
pop
ds
cmp
aaa
int
xchg
mov
inc
cmp
push
xor
xchg
cs
inc
push
aaa
movsl
leave
pop
cmp
stc
push
cmpsl
test
and
inc
loope
cs
dec
in
mov
cwtl
pop
lret
or
mov
shr
movl
pushf
iret
push
push
inc
mov
call
dec
fsts
jns
cmc
cld
lea
mov
rcrw
sbb
int
js
add
imul
mov
inc
sub
inc
imul
test
lret
dec
popl
in
movsl
push
test
lea
xlat
rol
cs
adc
bnd
lahf
or
cmpsb
fildl
jb
scas
aad
xor
sbb
mov
stc
cmp
pop
ja
shll
cmc
setge
gs
bnd
jmp
out
movsl
mov
sbbb
push
orl
xchg
adc
mov
pop
daa
iret
xor
cmpsl
xchg
jmp
test
test
int
shrl
mov
cltd
dec
shrb
xchg
jl
out
int
xchg
lds
test
test
pop
cltd
xor
mov
pop
mov
lret
mov
ja
iret
leave
inc
in
popa
lea
inc
leave
push
mov
jecxz
cli
daa
add
jbe
and
lahf
and
js
stc
push
sub
imul
psrlq
mov
scas
mov
movsl
loope
iret
and
xchg
xchg
stc
fmul
iret
leave
push
iret
cwtl
ret
dec
push
mov
and
int
ret
or
popf
in
pop
push
scas
mov
sub
or
push
or
mov
pop
cmp
out
fwait
in
pop
repnz
lods
sub
orb
and
jbe
xor
or
rclb
js
mov
mov
test
push
dec
cs
add
cltd
lret
lret
popf
nop
mov
mov
pop
fsubrl
fisubrs
pop
or
jmp
out
lock
and
jmp
cmp
inc
loope
outsl
movsl
sbb
push
int
add
decl
fcmovne
fidivs
push
dec
and
cmp
sub
fstp
mov
mov
popf
stc
fldcw
dec
outsl
xchg
into
jo
sbb
cmpsl
dec
xlat
and
push
or
mov
or
fwait
insl
fsts
insb
shrb
mov
in
push
fldt
and
add
fiadds
stos
adc
iret
xchg
adc
rcrl
jne
xor
sub
cmpsl
iret
fucom
cmp
ds
push
and
cs
dec
inc
cmp
pop
and
pop
cmp
shll
xchg
insl
rcll
cmp
movsb
loope
pop
pop
jmp
das
push
dec
add
shl
stos
movsl
lahf
push
xchg
jnp
aaa
adc
ret
sub
mov
in
ja
int
dec
cmp
and
loope,pn
or
loopne
orb
sub
adc
int3
jbe
jmp
jmp
cmp
stos
xlat
in
mov
out
es
daa
mov
jmp
push
xlat
fistpll
xchg
stos
iret
into
shrl
jmp
inc
sbb
mov
push
nop
cmp
mov
mov
push
loope
jne
mov
sub
jne
iret
sbb
jmp
jg
aad
out
push
xchg
test
enter
sbb
popf
leave
test
pop
cmp
and
pop
int
push
aas
jecxz
cmp
popa
sub
add
loope
iret
lret
fsts
movsl
mov
mov
outsl
mov
xor
xchg
sub
inc
cmpsl
add
cmp
adcb
test
hlt
add
cmp
mov
sub
xlat
cltd
pop
jo
xor
pop
pop
bound
xchg
inc
and
inc
mov
fldt
aad
push
rol
xchg
jge,pn
decl
aad
frstor
pop
mov
lret
fcmove
sbb
push
ret
sub
adc
xchg
cmp
adcl
mov
out
adc
lea
sbb
dec
movsl
popa
call
in
jge
jmp
or
sub
popf
add
test
push
lea
sub
or
sub
popf
sbbl
fldcw
test
call
rolb
cs
xchg
hlt
jns
jmp
inc
int
jmp
cmpsb
xchg
adc
sub
pop
adc
xchg
addl
decl
mov
ljmp
aad
dec
cmp
fisttpll
xchg
es
iret
jnp
add
mov
or
fisttps
pop
sub
test
arpl
mov
insl
movsb
leave
pop
out
lea
xor
mov
movsl
cs
adc
cmpsl
xchg
push
cmp
pop
stos
pop
stc
roll
iret
es
cltd
and
loope
cwtl
movsb
lods
aad
lds
push
dec
stos
dec
iret
out
popf
inc
in
xchg
mov
sub
sub
dec
cld
les
pop
and
js
rorl
jns
popa
pop
fsubl
cs
loope
aad
add
cmc
xlat
pop
stc
jmp
xchg
fists
adc
stc
and
mov
test
roll
cmpsl
mov
pop
dec
out
xchg
jae
hlt
rorl
imul
outsb
xchg
inc
mov
std
stc
sub
popf
mov
mov
jmp
rcrl
xchg
fldcw
roll
mov
mov
push
adc
in
pop
dec
xchg
and
testl
pop
xchg
lods
leave
test
adc
es
loopne
pop
pop
push
shrl
in
xchg
or
mov
fcomp
jnp
cmp
mov
cltd
loop
imul
sbb
int
ret
or
movsl
jne
fcmovne
mov
sbb
inc
in
push
in
xchg
bound
sbb
pop
add
push
pusha
shl
ret
lahf
in
sub
je
or
push
jne
mov
mov
cmp
lret
xchg
xchg
sub
test
into
fbstp
scas
and
filds
mov
pop
jne
test
push
sub
test
lcall
push
gs
jecxz
or
popf
xchg
test
stos
mov
iret
jl
lods
popf
fwait
cmp
fucomip
ret
ljmp
movsl
pop
arpl
mov
in
std
int
or
loopne
jae
lea
cltd
imul
fs
pop
adc
lret
ret
vpaddq
lcall
repz
int
pop
jmp
test
and
scas
cld
cld
adc
into
lcall
mov
fstps
push
dec
sti
xchg
ret
add
or
fwait
lods
pop
pop
jecxz
jne
jmp
mov
lret
inc
call
pop
cmp
and
popf
movsl
stc
rclb
cmpsb
sub
push
cmpsb
sub
lret
cltd
std
call
adc
fldt
jb
fstl
hlt
loope
scas
movsb
or
xor
lods
and
das
aad
sbb
popa
stc
jecxz
mov
sbb
out
mov
mov
fnsave
and
movsl
mov
cmp
xchg
pop
in
in
cmp
pop
popf
mov
lcall
call
xlat
cmpb
icebp
in
jae
repz
nop
cmp
pop
ret
ret
push
addl
fwait
cltd
test
sub
js,pn
stos
xchg
fmul
push
and
ret
xchg
cmp
xchg
jecxz
loopne
popf
shl
fisttpl
jbe
or
ffreep
aad
or
loop
cwtl
and
mov
lods
test
lahf
cld
push
scas
ljmp
jmp
sbb
dec
bound
shr
push
inc
mov
xchg
xor
sub
pop
stos
dec
and
mov
xchg
sbb
mov
sarl
mov
pop
dec
pop
lock
cltd
sbb
je
or
jno
aad
or
lods
inc
popf
xchg
insl
pop
in
push
sbb
xchg
aaa
int
ljmp
jmp
ret
xchg
dec
pop
fidivl
sbb
mov
dec
mov
xchg
insb
jecxz
mov
cli
out
in
in
or
shrl
pop
xor
test
popf
cmp
imul
xchg
dec
subb
test
sti
sub
test
inc
ret
repz
mov
push
jg
sbb
mov
dec
dec
mov
int
push
movsl
out
pop
ret
mov
fildll
add
jno
cmp
fs
xor
add
lods
xlat
in
or
mov
into
adc
lahf
loope
ljmp
jl
adc
dec
fldcw
in
ja
call
ds
xchg
mov
mov
lds
add
xor
int
mov
call
lods
incl
int
imul
sub
iret
fs
sahf
push
rcr
icebp
xchg
sbb
jge
fs
mov
cld
pop
cmp
dec
cmpsl
dec
aas
int3
push
in
adc
mov
lds
add
pop
lahf
inc
lahf
xchg
or
jecxz
cmpsl
xor
lret
outsb
js
adc
jo
mov
addb
xchg
dec
mov
adc
pop
jo
adc
stos
pop
jg
out
jnp
cld
mov
nop
test
fwait
popf
mov
iret
scas
fstpl
push
add
xchg
xchg
mov
push
fistl
mov
loope
push
std
shll
movsl
cmpsl
sub
xchg
xchg
insl
lahf
shrl
mov
mov
rep
stos
fxch
inc
sub
pop
fs
push
add
test
xchg
loope
out
adc
cmpb
pop
stos
out
in
imul
xchg
test
cmp
in
xchg
lea
call
xor
popl
adc
cmp
add
mov
rorb
leave
mov
cs
test
lret
xchg
mov
iret
je
push
inc
mov
cmc
adc
imul
mov
rol
test
dec
jne
sbb
in
and
inc
stc
sahf
fldt
test
or
push
sbb
sub
rcr
sub
sbb
fists
or
push
push
adc
mov
xchg
lea
adc
scas
stc
mov
push
test
fwait
sub
adc
xchg
adc
pop
dec
xor
and
xchg
in
push
cmp
inc
cmp
sub
adc
aaa
fbld
in
int
ja
fnsave
add
fdivs
popf
in
inc
test
out
bound
aad
mov
mov
hlt
xchg
xorb
cs
sub
bound
loopne
adc
mov
jne
mov
mov
dec
and
cmp
test
jnp
das
mov
popf
or
dec
push
movsl
and
out
jmp
lods
lahf
dec
in
incl
add
push
out
iret
fnstenv
out
fwait
pop
rcrl
jp
fcmovnbe
rorb
or
cmp
into
pushf
repnz
int
jo
mov
cmp
in
fildl
and
sbb
xchg
test
rol
jmp
pusha
dec
pop
lahf
mov
cmp
jge
push
jge
mov
cmpsl
jmp
stos
xchg
cltd
adc
mov
aad
sbbl
and
rolb
popf
adcb
push
in
shufps
jecxz
xor
adc
gs
stc
data16
ret
add
push
adcl
mov
jns
rorl
inc
leave
out
daa
enter
cmp
xchg
es
xchg
in
sbb
cltd
ljmp
cmp
scas
daa
adc
leave
aam
lcall
jne
lret
sub
pop
push
inc
test
add
fprem1
daa
cltd
shrl
paddd
sub
fldlg2
mov
sbb
inc
xchg
in
xlat
add
bound
and
mov
and
in
lahf
sbb
pop
mov
call
xchg
cld
cmp
lds
imul
pop
fs
cmp
sbb
lahf
js
xorl
inc
out
cs
and
ljmp
das
adc
push
popf
jecxz
mov
aam
mov
cmpsl
cwtl
jo
fwait
lahf
mov
sub
xchg
mov
jb
leave
test
mov
out
and
mov
inc
in
push
or
cld
cmp
lds
sub
in
mov
iret
les
or
push
es
lret
sub
push
xor
sbb
pop
jnp
andl
in
jp
in
into
sub
sbb
movsb
ret
stos
adc
pop
mov
adc
push
loope
sbb
fnstcw
scas
xchg
jecxz
out
sbb
dec
movsl
cmp
in
fcomp
std
iret
clc
jno
mov
or
push
and
ret
es
nop
jmp
or
xlat
xchg
cmpl
test
jmp
cmpsl
mov
push
iret
inc
es
mov
scas
std
incl
lods
int3
lds
shlb
mov
xchg
aad
mov
std
sbb
clc
jl
jp
movsl
mov
enter
lahf
sbb
push
xchg
pop
mov
jo
sbb
out
push
shll
addr16
pop
ds
mov
orb
rclb
sub
xor
and
dec
adc
dec
stc
mov
xor
add
cwtl
inc
fstpl
mov
push
pop
cmp
xchg
add
es
push
pop
rcr
daa
flds
cltd
test
inc
in
dec
popf
fistpl
xchg
xchg
cltd
clc
xlat
int
es
cmp
sub
fists
inc
pop
popf
aad
jg
sub
aam
call
daa
ret
xor
fmuls
stc
lahf
lret
xchg
mov
popa
cmpsl
subl
pop
gs
xchg
fmull
inc
cmp
movsb
sub
stos
mov
fxch
pushf
nop
inc
mov
les
test
fildll
sub
pushl
out
es
pop
xchg
fwait
add
xor
pop
mov
shl
popa
mov
jl
shr
fldt
xor
jp
mov
inc
stc
xchg
ret
mov
scas
outsl
pop
cmpb
and
pop
in
js
lock
pop
jmp
push
adc
pop
lahf
or
cmp
lret
test
push
ja
xchg
in
add
leave
lock
mov
pop
jne
out
adc
imul
in
jg
stos
fwait
adc
mov
stos
mov
fcomps
aad
mov
loope
lds
fucomp
fsubl
ss
imulb
pop
jmp
shll
add
test
push
xchg
sub
jno
jmp
fldcw
mov
mov
cmpb
dec
xor
stc
add
push
ret
ljmp
pop
dec
mov
add
cmp
mov
push
or
mov
xor
out
out
push
pop
and
cmpsl
fbld
cmp
or
lods
xchg
xor
outsb
or
lods
push
sub
movsl
mov
movsl
sub
ljmp
lods
lret
jmp
lds
push
fstps
mov
jb
rcrb
xlat
sub
fstpl
pop
xor
pop
and
sbb
mov
flds
in
mov
jecxz
leave
mov
stos
jmp
push
int3
pop
rcrb
pop
adc
and
cmp
sbb
xchg
pusha
test
sub
push
test
std
xor
test
pop
xchg
push
out
adc
imul
fucom
test
leave
jb
out
add
cmp
xchg
popf
stc
mov
mov
cmp
jo
scas
and
adc
rorl
gs
int
subl
sub
aad
xchg
ss
repz
push
insb
cmc
fwait
mov
add
xchg
stc
xlat
cmp
mov
lret
mov
dec
psubw
mov
sub
mov
lea
jecxz
push
insl
fidivrs
popf
xlat
sti
lret
and
cmp
cmpsb
adc
daa
mov
sbb
xchg
out
mov
push
mov
ror
and
jge
subb
jecxz
dec
and
rorl
or
stc
lods
dec
sub
dec
and
out
cmp
or
and
call
rcrl
sub
iret
ficoms
xchg
sub
or
sbb
add
aad
cwtl
mov
add
je
stos
dec
and
in
xor
mov
cltd
push
int
sub
inc
inc
xlat
xchg
test
push
mov
xchg
lock
add
mov
test
int3
jmp
scas
test
fcmovnbe
xchg
pop
jns
xor
xor
enter
stc
stc
xor
sub
data16
ficoml
xchg
fcomps
sub
stos
ja
push
xchg
stos
jne
clc
jecxz
sub
xlat
ror
fistpll
xchg
xchg
xchg
in
std
in
fwait
pop
dec
stos
add
mov
jecxz
cltd
sbb
inc
stc
lahf
stos
fisubl
sub
xorb
fchs
adc
sub
mov
icebp
xchg
dec
fwait
pop
scas
inc
mov
scas
or
xchg
filds
out
adc
iret
in
jmp
mov
push
test
xorl
or
fldcw
shlb
sub
lret
sbb
xchg
call
int
aam
in
push
ss
fldt
in
aaa
fyl2xp1
stos
fwait
sbbl
cmpsl
fwait
xorps
ljmp
xor
xor
and
test
pop
imul
popf
in
les
adc
cmp
inc
in
jecxz
rcrl
int
sbbl
popf
insl
scas
cmp
dec
loopne
dec
mov
fsubrl
jae
or
adc
jecxz
cmp
test
cmp
int
lahf
mov
mov
mov
out
or
mov
aad
add
lods
stos
push
imul
sarl
jmp
shr
rcl
iret
sbb
mov
test
xor
fdivr
lea
sbb
test
int3
scas
cmp
mov
xlat
mov
pop
iret
repnz
lea
andl
frstor
movsl
lods
sbb
scas
sbb
notl
insl
jmp
cs
roll
add
sbb
mov
lret
imul
jno
lahf
stc
test
flds
jns
roll
shl
xchg
out
push
stos
jecxz
xchg
cmp
sarl
xchg
mov
adc
jl
ror
sahf
push
fnstsw
cmpsl
and
sub
sub
or
sub
aad
xchg
lret
cli
ja
out
int
dec
inc
inc
sub
or
out
ret
mov
mov
test
subl
jg
lods
jo
jne
mov
pop
popf
xlat
cltd
or
pop
leave
iret
mov
cmpsl
es
sbb
int3
mov
jmp
xchg
into
inc
stos
push
sub
bswap
jecxz
call
sbb
mov
cltd
mov
lds
rol
sub
int
mov
add
testb
ss
es
inc
loope
sbb
sbb
push
js
jo
lret
sbb
subb
pop
ret
in
popa
sub
lods
pop
rorb
dec
sub
and
xchg
rcll
sti
jo
addb
popa
cmpl
jle
inc
xchg
imul
popa
add
xlat
push
leave
pop
sbb
es
cmp
xchg
loope
daa
cbtw
adc
add
test
and
addr16
aad
int3
sub
mov
sub
out
jecxz
xor
cltd
in
add
cmpl
cmp
pop
stos
rcll
xchg
pop
test
sbb
sub
addb
aas
cmp
push
push
mov
pop
sub
repz
nop
pop
or
xchg
repnz
xchg
pop
jl
push
cmp
or
bound
mov
ljmp
xchg
cltd
mov
xor
fwait
xor
and
add
cmp
mov
push
xchg
jmp
int
stc
bsr
fstps
xchg
xchg
imul
inc
mov
lds
push
push
and
inc
push
out
mov
ret
shrb
xlat
add
pop
in
fstpt
pop
mov
cmpsl
flds
filds
adc
in
or
mov
in
loope
in
js
pop
out
in
stos
ret
fbstp
and
mov
mov
cld
ja
inc
das
fsubs
mov
iret
cmpsb
call
out
leave
xchg
fistl
rcrb
push
dec
movsl
push
leave
fwait
int
mov
jecxz
push
sbb
mov
xor
mov
sbb
iret
f2xm1
or
pop
or
mov
out
fstpl
mov
out
cmp
in
cmc
lahf
sub
ja
stc
int
inc
aad
pop
push
and
dec
push
mov
push
sbb
adc
cmp
and
cmp
lds
js
je
lock
sub
data16
in
push
sub
test
fstps
and
xchg
adc
mov
pop
cli
popa
mov
fisubl
leave
popf
sbb
test
lahf
shll
lods
fidivrs
shrl
addl
push
mov
lods
stos
xlat
jecxz
loope
push
test
mov
cwtl
pop
sub
test
int
pop
mov
es
std
pop
stos
push
push
mov
push
jb
push
call
and
clc
stos
ror
jge
movsl
loope
iret
int
iret
sti
clc
lds
sub
imul
fmuls
lcall
pop
scas
fdiv
dec
in
aad
and
enter
xchg
push
add
cmpsl
add
add
andl
cmp
push
and
sub
cmpsl
cmp
mov
xchg
jno
inc
xchg
mov
cmp
add
fistl
popf
lret
into
test
pop
adc
or
sub
test
adc
add
mov
in
repz
xchg
sbb
aaa
cltd
stc
sub
shll
fistps
mov
fsubl
adc
or
stos
hlt
aad
and
cmp
xlat
mov
add
push
push
sub
pushf
cmp
cmpsl
in
sub
cld
push
mov
mov
out
lret
clc
inc
lea
sub
mov
mov
popf
mov
loope
add
mov
cmp
lret
cltd
popa
cmpsl
mov
push
shll
sub
imul
into
sbb
or
decl
test
fldcw
pop
add
aam
xlat
xchg
or
daa
cmp
lea
std
andb
dec
rorb
movsl
and
dec
cmpsb
push
xchg
es
lock
hlt
pop
xor
and
shl
test
sbb
mov
fcomip
lret
aam
scas
in
in
mov
push
sub
aad
or
test
mov
repz
mov
mov
out
fisttpll
psrad
push
es
lret
cmpb
push
cltd
xchg
mov
mov
daa
xchg
stc
sub
lret
int
cmp
push
movsb
loope
mov
fwait
adc
scas
adc
das
mov
popf
movsl
xchg
fs
imul
js
add
and
test
push
mov
lret
xor
lcall
sub
sub
mov
pop
add
movsl
cs
jmp
jns
and
je
and
rol
mov
jecxz
daa
cli
jge
xchg
testl
stos
roll
cld
jae
fwait
out
lret
pop
shr
push
sub
inc
aam
cmp
scas
hlt
or
test
iret
jno
test
lds
sbb
popf
xor
in
arpl
mov
add
mov
xchg
mov
dec
mov
aam
xchg
out
push
xchg
fistl
movsl
test
sbb
iret
push
cmpsl
push
iret
adc
lods
sbb
mov
push
sbb
flds
and
stos
xchg
mov
lret
xchg
out
cmp
mov
sub
daa
lahf
lret
jl
fcmovne
and
int3
fsubrp
pop
push
pop
bound
xchg
mov
inc
xor
loop
popa
movsl
xchg
popf
aam
fidivl
sbb
sub
fistl
sarb
lock
iret
sub
mov
mov
test
andb
lods
mov
icebp
add
jne
sub
and
pushf
sbb
xchg
jecxz
movsl
mov
mov
xlat
aad
pop
xchg
xchg
pop
adc
shlb
out
xlat
mov
imul
loope
mov
push
popf
fstp
imul
shl
in
mov
mov
leave
out
xchg
xor
sub
sub
pop
shrl
dec
je
or
int
ret
addb
bswap
jmp
test
movsb
mov
mov
push
test
shl
mov
jmp
int3
cltd
sub
jo
mov
mov
cmp
xchg
ret
sub
lahf
leave
jge
mov
scas
jae
ds
xor
js
lods
ret
adc
push
pop
out
jl
and
and
ret
xorl
and
jmp
sbb
movsb
std
sbb
cmp
lds
pop
mov
sub
sbb
ret
mov
lcall
jne
dec
scas
sub
inc
fiadds
aad
es
popf
adcb
shrl
dec
dec
lock
mov
lods
dec
fsubl
int
cmpl
push
xor
adc
add
sbb
mov
popa
jl
sti
ret
cmp
lret
je
aad
jecxz
cwtl
xor
xchg
pop
or
and
mov
sub
adc
sub
sub
cmp
pop
aad
cmc
mov
cmp
sub
jne
xlat
pop
or
fadd
push
inc
das
and
sbb
fisttps
lret
bound
cmc
cmp
out
sub
popa
dec
sbb
xlat
mov
test
or
push
cwtl
mov
repnz
sub
aad
insl
or
cltd
push
xchg
mov
fwait
inc
xor
adc
sub
loope
call
sub
push
cmpl
jns
mov
mov
sub
sbb
imul
pop
push
pop
ss
imul
or
mov
insl
dec
movsl
in
xor
or
pushf
aam
and
subl
leave
aam
jg
push
pushf
xchg
shrl
push
xchg
jmp
or
sbb
in
sbb
push
dec
movsl
cmp
inc
sbb
scas
mov
mov
and
and
ja
sub
pop
cmp
dec
xchg
pop
mov
rol
stc
ds
fwait
mov
punpckhbw
arpl
fstpl
lret
js
and
xor
inc
push
ret
lret
or
sbb
push
sub
and
mov
faddl
and
jmp
leave
pop
and
lret
sarl
mov
in
iret
mov
ljmp
push
data16
inc
mov
sub
inc
jecxz
and
in
sbb
adc
popf
iret
outsl
cmp
out
lock
mov
mov
inc
jge
cmp
lret
mov
fsts
mov
cs
mov
sub
cmp
inc
fwait
nop
lret
xchg
dec
sbb
aad
lods
cmp
stc
leave
mov
movsl
cmpsl
aad
fildll
sbb
mov
xchg
imul
or
mov
rcll
push
and
cmp
sub
mov
fnsave
orb
lret
inc
lock
xchg
cli
in
pop
rcll
pop
push
test
aad
fstpt
in
fcompl
mov
lcall
mov
iret
sbb
sub
and
lds
xor
dec
repnz
adc
in
sbb
fs
lahf
in
aam
adc
frstor
mov
iret
fsts
mov
insb
sub
shl
divb
popf
and
mov
adc
stc
xlat
fistps
lds
cmp
lret
xchg
movsl
roll
ror
test
das
pop
xor
call
negl
push
sub
pop
es
xlat
and
push
imul
stc
loope
xor
lret
jno
cmp
daa
mov
cmp
push
lret
lret
mov
dec
aam
mov
sub
imul
xchg
add
mov
push
sbb
int
xor
push
stos
scas
bswap
cmp
test
xor
push
xor
xchg
in
arpl
in
pop
paddsw
sub
pop
sub
fdivrs
test
sbb
out
lahf
cmp
insb
icebp
out
daa
insb
xchg
mov
xchg
cltd
mov
mov
imul
push
or
fnstcw
stc
cltd
xchg
popa
push
or
jb
pop
scas
daa
in
sub
and
movl
aam
push
mov
and
fst
insb
mov
add
push
iret
jmp
movsl
aaa
outsb
scas
loope
out
xor
adcb
adc
mov
fistpl
lds
mov
fmull
xchg
and
rcrl
in
sub
ds
roll
lret
sahf
inc
in
es
xchg
cmp
andl
push
popf
les
movl
push
jmp
and
cli
scas
push
cmp
push
add
rcll
mov
adc
shlb
sub
pop
cmp
sbb
sub
cs
in
jne
xchg
lahf
insl
xchg
pop
inc
es
das
sbb
dec
addr16
cmc
cmp
shrl
xchg
loope
in
pop
fwait
pop
mov
sub
stc
popf
cwtl
and
in
or
cmp
out
push
lret
cwtl
movsl
dec
adcb
stc
hlt
jl
iret
shll
sbbb
sahf
jmp
sbb
sub
xor
popf
iret
inc
in
cmp
jae,pt
xchg
xorl
nop
es
popa
test
xor
test
lret
fildll
add
lea
push
int
in
dec
xor
in
jo
mov
cmpsl
leave
push
push
loope
xchg
lds
jp
inc
xchg
leave
mov
test
movsl
out
mov
into
cmp
ret
subl
insl
push
push
cmp
xor
sbb
out
pop
xor
stos
es
mov
push
jl
jno
xchg
fldt
popa
sbb
lret
and
sub
xchg
cwtl
test
scas
mov
sub
cmp
mov
cmpsl
sub
test
jmp
and
pop
push
cli
jecxz
mov
cltd
push
fstp
sub
xchg
adc
adc
xor
adcl
pop
out
outsb
dec
orl
sub
fwait
xchg
xchg
std
leave
mov
popf
xchg
shrl
jg
inc
lds
out
sub
and
aaa
mov
cs
mov
fcmovnbe
xchg
js
mov
fwait
mov
lcall
jbe
ret
mov
lret
in
and
xchg
xor
in
cltd
cmpsl
push
jmp
dec
and
cmp
adc
je
aam
push
out
stc
mov
cmpsl
in
lret
adc
sub
push
aas
adc
add
in
in
ja
lcall
xor
movsl
push
lea
lret
push
scas
mov
filds
icebp
cmpsl
xchg
lahf
pop
xchg
adc
mov
mov
pop
loopne
out
loope
xchg
hlt
leave
and
or
xchg
mov
cmp
aam
jns
in
xchg
adc
test
clc
sarl
push
mov
inc
xor
xlat
les
popf
xchg
shll
push
sub
jg
mov
rcr
mov
push
push
mov
and
cmc
leave
iret
mov
imul
or
in
imul
sbb
sahf
sub
loop,pn
fmull
mov
fwait
sub
dec
stos
jmp
jl
and
pop
int
les
mov
jmp
es
rclb
insb
xor
jno
cmpsl
es
mov
loope
push
pop
push
stc
cltd
out
ds
icebp
fbld
sub
imul
aaa
sbbl
popf
mov
mov
shll
jae
sahf
lret
pop
cmp
mov
add
popf
enter
cld
jne
shll
test
stc
inc
and
sub
ror
insb
std
in
adc
xchg
rcrl
jmp
sbb
popf
adc
or
imul
in
fcmovnbe
sbb
iret
negb
adc
mov
rorl
mov
jmp
outsb
xlat
mov
sub
dec
or
xchg
inc
and
aaa
int3
pop
frstor
cltd
daa
pop
inc
inc
loope
cmp
aad
ljmp
incl
or
inc
xchg
aaa
scas
jmp
or
jb
aas
sbb
xchg
out
jg
fists
fmuls
sub
test
cltd
fisttpll
rorl
iret
sbbb
inc
mov
popf
sbbb
test
mov
xchg
andl
movl
lods
shrl
call
cltd
scas
fistpll
rcrl
sbb
lret
aas
and
push
int
cmp
dec
shrl
mov
gs
xor
popf
xchg
out
daa
pop
sbb
addl
push
xchg
and
dec
sub
fildll
lea
push
daa
sbb
std
cs
and
test
add
rorl
dec
adc
mov
xchg
add
inc
in
xchg
push
stc
cltd
cmp
jmp
sarl
mov
iret
and
cmpsl
test
loope
cmp
inc
test
push
xor
mov
aam
ds
cmp
popf
or
fnstenv
dec
test
es
lahf
push
popf
lea
pop
pusha
inc
xchg
xlat
jmp
fwait
ret
cmp
cmp
stos
dec
std
jmp
lods
fucomp
daa
sub
mov
jmp
adcb
enter
mull
fmul
or
adc
aad
and
sbb
int
loope
or
pop
out
cmpl
push
pop
in
popf
adc
cs
iret
and
in
xchg
or
xchg
scas
xlat
inc
mov
jmp
fisubl
mov
es
sbb
and
cmc
mov
mov
cltd
int
push
in
xlat
mov
jl
out
mov
sbb
cmp
inc
mov
fldl
jbe
insb
sar
ja
int
in
pop
xchg
jmp
mov
mov
jbe
data16
jecxz
cmc
pop
shl
dec
mov
out
pop
cmp
cmp
cs
or
sub
cmc
ffreep
ret
push
mov
out
fdivs
ja
lea
jecxz
adc
shrl
sub
test
mov
ja
stos
lret
loopne
sbb
jmp
iret
stos
outsb
in
jecxz
fisttpl
data16
popa
insl
add
loope
inc
cmpb
in
and
roll
adcl
mov
nop
or
sub
mov
out
dec
loope
mov
out
std
leave
stos
jno
mov
push
mov
cs
sbb
sub
lock
bound
mov
mov
dec
test
in
cmp
aas
ret
std
mov
sbb
out
repnz
lret
stos
shll
scas
in
testb
xor
pop
nop
jns
add
xchg
andb
sub
test
sub
push
push
sbb
adc
mov
aas
es
iret
push
orl
xchg
sbb
fwait
clc
mov
leave
lds
lret
int3
mov
sub
imul
nop
popf
mov
dec
adc
pushl
aaa
cmp
xchg
insb
cltd
fxch
push
and
sbb
mov
pop
mov
and
stos
jmp
and
lret
out
cmp
insb
lea
sub
cmp
jmp
fdivrl
xor
and
in
popa
jmp
imul
cmp
iret
and
andb
out
scas
cmc
adc
test
js
cmpsl
rorl
loopne
mov
pop
stos
lret
adc
jle
test
push
xchg
mov
push
lret
adc
mov
mov
inc
or
push
es
or
xchg
orb
enter
test
ret
fisttpll
push
cmc
mov
test
pop
popa
xchg
xchg
adc
xchg
cmp
lret
mov
lret
dec
aad
sub
and
xlat
out
xchg
lds
xchg
cs
cmp
mov
xor
adc
nop
mov
sub
daa
mov
mov
movsl
xor
jge
test
fildl
mov
mov
lea
or
out
sub
movsl
mov
sub
rcrl
mov
paddsw
xchg
pushf
clc
mov
mov
or
pop
add
aad
enter
or
sub
mov
pop
lret
arpl
pop
loope
lods
mov
mov
loope
sbb
shlb
pop
mov
imul
cltd
xor
lret
rcr
lods
aad
lahf
adc
stc
movsl
das
add
out
out
mov
or
xchg
negb
dec
inc
mov
xlat
aaa
frstor
pop
popf
adcl
sbbb
pop
adc
jmp
pop
xor
cmp
xor
int
mov
xchg
sbb
jp
pop
and
stos
jo
dec
jge
pop
lcall
out
mov
cmp
leave
imul
dec
pop
shr
cmp
orb
iret
test
nop
imul
scas
or
int
les
add
aad
fildll
mov
loope
jns
cmp
adcl
jmp
mov
push
jmp
adc
clc
stc
popf
aaa
in
cmpsl
loope
mov
cmp
es
pop
sbbl
fisubrs
lea
lret
and
push
sub
xor
rol
sub
sub
iret
adc
dec
sbb
fisttpl
sub
addl
jno
icebp
out
mov
in
inc
mov
fistl
mov
cs
lods
imul
pop
sbb
cmpl
aas
xor
stos
movsl
jecxz
and
sub
or
and
mov
enter
jl
lahf
stos
arpl
xchg
aad
adc
insl
cmpsb
xlat
sbb
daa
pop
and
adc
jecxz
add
int
stos
sub
lahf
dec
inc
push
push
es
andl
cltd
hlt
js
cmp
sub
test
or
in
xchg
iret
sub
js
jbe,pn
enter
mov
arpl
aad
xlat
leave
jmp
or
in
lcall
cmp
mov
loope
jmp
lock
imul
lret
cmp
xchg
ret
mov
cmpsl
pop
xor
sbb
out
mov
daa
mov
rol
aad
sbbl
stos
push
test
mov
das
fadds
aas
fidivs
mov
mov
mov
mov
mov
mov
and
movsl
lds
jle
dec
xorl
cmp
add
out
xchg
fiadds
in
mov
sub
and
pop
xor
xor
sarl
les
cmp
jecxz
sub
push
fildll
je
and
sub
and
lahf
repnz
out
sbb
dec
mov
push
sub
rorl
xchg
mov
push
cmp
mov
xchg
fistps
xor
stos
aad
fstpt
test
mov
xor
xchg
cli
sbb
and
adc
mov
int
fiadds
into
enter
repz
mov
or
push
and
mov
fiaddl
xchg
subl
jmp
xchg
aas
sbb
cmc
push
sub
fisttps
cs
in
cmp
out
js
shll
xor
ret
hlt
ret
xchg
out
pop
loop
jge
fs
or
adc
or
pop
sbb
hlt
sar
in
fwait
out
pushf
shll
mov
popl
mov
inc
jecxz
and
rcr
outsl
cmp
leave
push
test
stc
test
repz
out
popf
stos
xchg
pop
rcll
das
pop
sbb
popf
and
mov
inc
mov
fisubl
ss
xchg
es
in
xchg
test
cld
mov
mov
mov
rolb
add
loope
divb
mov
xchg
cmp
ljmp
test
fcmovne
aas
mov
ffreep
popa
lahf
xchg
in
popa
xchg
popa
in
pop
rcrl
push
movsl
xchg
fisubl
pop
gs
inc
bound
jmp
lret
mov
int3
out
jne
shrl
xchg
sub
andb
popa
jmp
popa
sbb
mov
jbe
mov
jmp
sub
cmp
scas
mov
cmp
mov
mov
dec
int3
mov
leave
or
jge
popf
cmp
out
and
push
ret
fcmovne
sub
pusha
or
ret
mov
out
mov
scas
test
imul
mov
out
fildl
insl
mov
adc
xlat
daa
rorl
xchg
xchg
or
fnstenv
dec
fs
movsl
ljmp
jmp
int
sbb
mov
mov
ret
icebp
sub
jmp
sub
pop
es
roll
sbb
insl
or
push
sub
test
daa
fstps
cmpsb
daa
lods
xchg
jecxz
leave
jmp
in
dec
movsl
movsl
dec
int
jbe
stos
sbb
cmp
push
rcr
pop
test
xor
and
mov
je
repnz
imul
test
imul
xchg
out
or
cld
and
cs
jmp
add
jl
mov
jmp
xchg
push
dec
es
loope
jg
or
add
xor
xor
imul
call
sarl
mov
andl
adc
cmp
inc
inc
loope
ljmp
xor
cs
mov
ret
movsl
xchg
jmp
xlat
pop
lds
jns
mov
cmp
test
cmp
test
mov
loope
rcrl
xor
leave
and
orb
mov
movsl
cltd
test
mov
cs
loope
mov
test
fwait
push
and
aad
mov
mov
jmp
mov
fcmovu
mov
sub
fisubl
sbb
lret
mov
call
repz
push
sbb
sub
inc
mov
or
xor
adc
fcmovu
in
jns
jne
xlat
sbb
jmp
xchg
pop
in
in
pop
xchg
xchg
xchg
mov
leave
inc
lock
jb
push
cmp
mov
fwait
mov
xchg
push
mov
xchg
test
mov
push
popf
fldenv
popf
sub
push
mov
xor
mov
jbe
icebp
int
xchg
jns
add
sahf
bound
call
subl
lods
inc
sbb
xchg
cmpsl
pop
bound
xchg
popf
in
andl
jne
fwait
rorl
mov
and
repnz
sub
pop
xchg
shl
mov
and
xchg
aad
mov
xchg
ret
adc
sub
xchg
mov
cwtl
out
jecxz
fsubrs
in
imul
clc
inc
xchg
addl
lret
jne
cmp
mov
mov
cmpsl
jecxz
iret
add
pop
cltd
test
mov
fldcw
xchg
sub
mov
mov
add
loop
xchg
xchg
pop
push
es
mov
pop
pop
mov
xor
adc
test
mov
fucomp
xlat
pop
pop
push
push
lret
cwtl
cmp
out
inc
lret
xchg
and
jne
dec
out
or
xchg
cmp
in
mov
cmp
lahf
mov
scas
add
xor
mov
xor
xchg
jb
outsb
daa
cmp
iret
int
push
rcl
loop
lret
js
filds
fldl
sub
aad
jmp
test
cmp
aad
loope
xchg
pop
aad
fwait
pop
jecxz
and
or
cltd
cs
in
pop
imul
adc
or
sub
xchg
mov
movsl
iret
in
pop
xchg
sub
es
xchg
aad
xor
int
sbbb
or
push
or
popf
add
mov
mov
mov
jp
roll
outsb
popa
subl
push
and
insb
int
sbb
jo
sti
push
and
add
aam
bound
mov
insl
std
in
lret
das
xchg
iret
or
jmp
pop
or
push
ret
aad
orl
jne
xor
aam
in
push
inc
mov
push
std
cmp
cmp
adc
sub
xchg
in
inc
lods
test
stos
pop
lods
aad
loope
fdivrs
sub
pop
sbb
push
scas
leave
sbb
mulb
pop
mov
cmc
mov
inc
fucomip
jp
sub
xor
scas
ret
aas
movsl
popf
cmpsl
mov
xor
lret
lahf
mov
jae
lret
rcrl
sub
enter
adc
xchg
sbb
hlt
mov
lea
leave
shr
xor
jns
popf
fwait
xchg
neg
jns
adcb
clc
jbe
fistps
aad
in
cltd
add
lods
shlb
jmp
mov
pop
mov
sub
mov
push
mov
xchg
leave
mov
sbb
lret
mov
aad
fmulp
and
popf
js
push
pop
loope
out
push
push
cwtl
rorl
iret
dec
aad
outsb
xchg
dec
mov
adc
movsl
mov
ret
cs
jmp
cwtl
cld
test
rcrb
es
fstl
push
xchg
in
scas
rcll
pop
popf
arpl
in
fwait
clc
ret
aad
inc
popf
out
dec
aas
cmp
aaa
in
fucomp
lahf
lret
sub
jae
pusha
xchg
pop
sub
sub
sub
pop
sbb
push
sub
in
testb
mov
push
xchg
loope
mov
fldl
out
jmp
mov
lods
push
fsubrs
lea
stos
xchg
gs
add
lret
sub
outsb
jne
xchg
out
es
push
stc
out
and
xchg
push
and
pop
xor
xchg
arpl
sbb
lods
pushf
addb
call
sar
push
ss
cmc
dec
stos
lret
lea
and
or
lahf
sub
lahf
xchg
iret
aam
rorl
cmp
fwait
lret
fstps
sahf
cmp
adc
loope
sbb
cmp
or
scas
fmul
push
in
mov
push
iret
test
icebp
aad
inc
or
int
xchg
mov
out
cmp
repnz
fcoml
jmp
shll
cmpsl
pop
out
call
cmp
cmp
sub
sbb
sub
iret
ss
dec
iret
mov
mov
fildll
adc
or
cltd
std
ret
ret
lods
in
aas
into
jno
loope
aad
mov
push
imul
movsb
mov
fstl
stc
roll
ja
in
cmpsl
jns
xor
jne
add
cmp
lret
pop
bound
adc
mov
push
cwtl
mov
leave
popa
sbb
mov
popa
mov
jg
cmpsl
outsb
xchg
stc
into
xchg
fstps
imul
jmp
and
js
push
xchg
jns,pn
leave
stos
movsl
add
roll
sarl
mov
lret
cmp
pop
sbb
out
push
adcl
data16
and
sbb
xor
stos
leave
and
scas
movsl
mov
cmpsl
lock
mov
icebp
or
es
or
adc
cmp
iret
fucom
sbbl
lods
lcall
push
or
mov
push
out
aas
dec
popf
sbb
lahf
push
inc
xlat
push
arpl
pop
lods
loope
ret
sahf
nop
sub
leave
mov
and
xchg
jmp
in
rorb
int
dec
fcmovnb
adc
popf
mov
out
fsts
bound
or
cmp
sbb
hlt
test
iret
pop
subb
inc
push
pop
insl
jge
add
in
xchg
sub
stos
pop
and
movsl
sub
push
cltd
mov
dec
jnp
fwait
sub
sbb
clc
mov
rcr
hlt
out
gs
sub
test
pop
in
insl
xchg
aam
sub
and
test
fwait
adc
or
xchg
test
adcb
sub
js
stos
xchg
ljmp
jmp
sub
dec
jnp
add
mov
out
xor
aad
lret
out
inc
subb
pop
pop
test
in
lods
mov
test
or
xor
out
xorb
cs
int
test
mov
in
xor
mov
xchg
sub
sub
lret
push
jecxz
mov
or
push
aas
loope
xchg
mov
and
jecxz
jno
stos
cmp
enter
cmc
loope
xchg
out
ret
fcomp
xchg
xchg
xor
jnp
fwait
shrl
lret
push
movsb
or
stos
bound
sub
jnp
push
cmpb
xor
inc
popa
mov
xorb
cmp
cmp
in
out
in
and
scas
mov
inc
sbb
int3
imul
inc
popf
push
inc
cld
adcb
bndstx
or
jae
loopne
jge
xor
sbb
movsl
inc
mov
rcll
negb
and
insl
neg
mov
test
nop
push
xor
mov
add
xchg
movsl
out
inc
jnp
fucomi
nop
popf
cwtl
push
lods
in
and
out
mov
gs
test
dec
inc
lret
xor
jbe
xlat
mov
mov
sbb
jnp
lahf
movsb
jbe
dec
dec
sub
push
aas
rcrl
push
push
rcl
mov
dec
mov
shrb
out
out
xchg
mov
xchg
dec
sub
ret
cwtl
mov
icebp
pusha
mov
cmp
dec
movsl
adc
and
mov
lds
push
sub
fstpl
pop
daa
lea
cmpb
add
dec
or
mov
test
pop
lea
push
test
dec
and
movsb
adcb
lock
and
and
in
in
push
push
mov
lahf
and
stc
cmp
cmp
dec
jmp
inc
inc
addb
jbe
xchg
sbbb
andb
inc
xor
inc
cmp
orb
inc
das
out
cmpb
lcall
xchg
es
xchg
and
jb
cltd
mov
jmp
div
inc
xchg
push
cli
movsl
fwait
mov
andb
stc
sbb
pop
mov
sti
pop
lock
sahf
mov
fwait
and
or
push
leave
stc
subb
push
lods
or
pop
int
push
mov
xchg
cmpsl
mov
lcall
inc
sahf
fwait
in
dec
sahf
and
and
mov
subb
call
scas
shrl
out
mov
xor
mov
fcompl
and
cmp
sahf
pop
mov
rol
xchg
leave
cmp
xchg
mov
and
out
stos
xchg
cmpsb
es
movsl
aaa
fwait
xor
jecxz
shll
jmp
test
mov
adc
sarl
jmp
int
mov
and
cmp
enter
or
push
push
xchg
pop
aaa
mov
scas
sub
das
fcmovnbe
lock
out
ret
lods
test
push
adc
sbbl
lahf
nop
es
out
and
shr
out
sub
lds
cmp
scas
xchg
subl
adc
js
mov
test
ret
lahf
loope
jno
mov
mov
fwait
in
stos
stos
rcr
stc
lret
leave
mov
stos
fldln2
mov
fbld
mov
inc
or
cs
leave
adc
insb
adc
xlat
mov
mov
cmp
imul
xor
add
jecxz
mov
jae
xchg
sub
push
nop
jecxz
or
and
xchg
or
xorl
sub
mov
mov
lret
dec
xchg
fisttpl
repnz
or
cltd
lods
mov
jne
out
jmp
lods
insl
xchg
sub
fsubl
push
cwtl
jecxz
mov
testb
mov
cmp
jb
es
sbb
leave
sbb
sbb
inc
stc
test
mov
ror
fadds
lahf
stc
ljmp
fidivrs
scas
jl
adc
adc
mov
loope
fcoml
add
cmpb
lcall
fbld
sbb
movsl
xchg
stos
push
pop
xchg
loope
xchg
jmp
jmp
mov
test
sbb
mov
adc
aad
test
out
cs
out
add
mov
and
popf
in
ret
mov
sub
test
jnp
xor
sub
cmpsl
push
adc
and
int
jmp
in
sub
pop
test
inc
fucom
cmc
imul
xchg
jmp
pop
inc
mov
add
xchg
iret
subb
nop
xchg
mov
mov
shl
cmpsl
or
movsl
xlat
lods
lds
jmp
test
rcl
scas
xchg
fsts
and
jecxz
push
es
in
fisttpll
unpcklps
push
xchg
sub
add
xor
aaa
stos
jmp
out
and
lods
insl
rcrl
movsl
xchg
add
mov
sub
lds
adc
or
push
push
xor
cmp
out
jne
rcll
stos
fsts
mov
cmp
inc
in
sub
cltd
les
lret
notb
aam
xchg
lea
out
jno
push
jecxz
ljmp
and
mov
test
jge
cmpsl
fcomip
frstor
mov
push
cmpsl
xor
xlat
lret
roll
sbb
xchg
sub
xchg
lods
insb
mov
mov
sbb
cmp
xchg
test
or
sub
lds
inc
cs
push
stc
push
add
movsl
mov
xchg
adc
shrl
xchg
orb
jmp
popf
and
aad
mov
lret
lahf
call
mov
cmp
cmpsb
sub
xor
adcl
mov
adc
test
in
out
xchg
in
loopne
inc
cmpsb
mov
icebp
shlb
inc
sbb
std
scas
out
jge
and
fldl
clc
in
cmpb
inc
jecxz
loope
inc
pop
adc
cmp
iret
aaa
popf
xchg
sar
push
cmp
fwait
int
and
adcb
popf
mov
stos
xlat
ss
out
dec
leave
fists
pop
push
xchg
mov
rcrl
sub
stos
dec
enter
stc
fs
neg
out
in
push
mov
jmp
sub
lds
out
xorb
cmp
xchg
loope
in
or
adc
popf
stc
aad
inc
dec
mov
jnp
jmp
insb
or
or
rcll
push
iret
lods
call
in
push
stos
subb
mov
test
stc
fnstcw
add
cmp
xchg
mov
fisttpll
pop
cmp
in
cld
lahf
cmp
fldenv
fldl
movsl
xlat
lret
mov
mov
insb
cmpsl
cs
subb
int
push
orb
call
push
or
mov
xchg
mov
movsl
test
sbb
push
popa
lds
jno
ja
ss
imul
fucomi
pusha
mov
sub
push
movsb
sahf
sub
xor
mov
jbe
testb
xor
fsubrs
sbb
xor
sbb
cmpsw
repnz
test
loopne
gs
int3
xlat
and
jecxz
xchg
mov
sbb
inc
enter
sub
mov
loope
or
jecxz
test
xchg
sub
inc
mov
xchg
inc
pop
aam
push
movsl
inc
cltd
test
test
stos
loope
lea
jns
andb
inc
sti
inc
and
ret
lds
xchg
shr
or
push
fistl
jl
pop
ljmp
mov
shll
out
addr16
stos
mov
adc
int
sub
adc
fwait
out
adc
movsl
push
lock
aaa
mov
lods
xchg
push
cmp
test
inc
out
and
stos
push
int
or
fidivrl
aad
jne
xchg
lahf
enter
sbb
or
mov
subl
cld
jno
mov
fisubrl
in
in
pop
lcall
cmpsl
or
xor
sub
push
jmp
sbb
lret
pop
leave
sbbl
in
cmp
sub
in
xchg
cmpsl
fisttpl
sub
inc
clc
jmp
inc
das
xchg
or
mov
push
xor
mov
out
lods
push
fadd
sbb
fldt
dec
inc
daa
or
mov
sub
jae
insb
dec
xor
rcr
pop
sbbl
bound
test
out
rcll
test
fiaddl
fwait
cmpsl
fcoms
xor
ret
xchg
xor
test
aad
and
popf
ret
xchg
xchg
lret
scas
test
subb
cmp
iret
std
xchg
movsl
int3
add
gs
adc
lea
cmpsl
and
push
iret
ret
pop
leave
sub
lea
popa
ffree
cmpl
sub
cmp
popf
in
movl
sar
fistpl
imul
jmp
cmpsl
xchg
cmp
jb
push
mov
push
sub
or
xlat
cmp
clc
cmp
dec
jmp
shr
dec
fsubs
pop
fistpl
sub
push
fwait
pop
lock
sti
stc
clc
jp
test
ja
out
iret
in
lods
enter
popa
popa
xchg
aaa
imul
jmp
in
inc
out
pop
jecxz
test
scas
test
xchg
fs
in
jae
xchg
add
leave
jmp
int
mov
fs
aad
and
cmpsl
push
fstpl
add
xchg
es
popa
and
popf
clc
cmp
xchg
int
out
pop
test
stos
scas
fwait
push
movsl
pushf
rorl
xchg
mov
xor
push
lods
shlb
adcl
mov
test
out
xchg
test
fbld
popf
fsubrs
xchg
out
and
xchg
fstps
js
xchg
stos
pop
jmp
in
jle
cld
mov
and
pop
addr16
inc
lock
movsl
js
mov
cltd
lea
daa
jmp
xchg
or
inc
sub
test
hlt
dec
dec
imul
cltd
pop
push
push
stc
int
mov
adc
mov
flds
inc
and
aad
cwtl
adc
ret
and
jmp
stc
mov
mov
mov
lahf
cmp
out
popa
dec
stc
mov
scas
js
fnstcw
stc
in
xor
iret
aad
sbb
mov
leave
rorb
pop
jne
mov
cmp
adc
jmp
lds
ds
pop
out
shrl
sub
push
movsl
test
ret
stos
out
xor
sub
and
jge
mov
jl
xor
mov
mov
mov
leave
jbe
pop
loopne
mov
sub
scas
pop
xchg
fbld
jg
inc
aad
pushf
push
out
int3
mov
add
out
mov
or
xchg
popf
loop
and
aad
icebp
cmp
fcmovne
sub
jecxz
mov
test
push
cmp
sub
pop
aaa
jns
ret
loope
dec
fistps
inc
stc
sbb
test
int
clc
lret
cmpl
cmpl
test
leave
inc
mov
xor
pop
xchg
out
push
or
ret
shr
mov
xorl
xorb
imul
push
int3
sbb
cltd
lods
sub
and
mov
js
in
jne
mov
aad
test
push
dec
pusha
rol
fcmovnbe
pusha
lods
mov
inc
fcomps
insb
xchg
jb
fwait
inc
in
lahf
mov
pushw
in
sbb
stos
fnstsw
cwtl
dec
stc
loopne
push
stos
jmp
xchg
lcall
lahf
cmc
call
fldl
jb
xchg
scas
movsl
cmp
fcmovnu
sahf
rcl
pop
fistps
xlat
cmpsl
or
out
js
in
xchg
iret
mov
and
jbe
mov
rcl
int
stos
rorb
pop
mov
sbb
out
rorl
fldenv
mov
fstl
dec
push
and
ja
arpl
out
and
cs
dec
imul
sbb
out
jne
cltd
fcompl
jecxz
or
or
lahf
cltd
clc
outsb
fidivl
jnp
or
std
sbb
xchg
jae
sarl
push
fsub
sbb
cmc
movsl
adc
and
pop
inc
test
pop
jmp
daa
lahf
fnstsw
push
out
fadd
sbbl
mov
in
lods
push
add
in
add
jecxz
adc
clc
cltd
leave
xchg
scas
lret
std
fldl
xor
jne
jecxz
and
sbb
ret
xlat
stc
or
lds
clc
std
in
xchg
jno
popf
xor
leave
or
mov
or
popf
rcll
inc
jb
jl
lds
imul
shrd
jmp
scas
jne
fmuls
aad
lods
ss
push
mov
icebp
out
fcomps
mov
dec
rcll
shrl
aaa
pusha
movsl
fcmovnbe
lea
test
push
lahf
imul
adcl
mov
in
xor
insl
rol
jge
fnstenv
xor
outsl
aaa
jmp
ljmp
cmp
into
ss
jge
into
into
ss
test
pop
sbbb
lahf
xchg
loope
push
dec
push
test
adc
mov
sub
mov
cmp
ret
in
or
sbbl
aam
lcall
nop
xchg
test
pop
or
leave
sbb
test
iret
loope
xchg
xor
cmpsl
mov
sub
mov
or
pop
in
fstp
into
pop
cs
or
adc
sub
xchg
rcrl
aas
xchg
test
inc
in
inc
xchg
xchg
int
mov
pusha
and
add
jmp
mov
xlat
xchg
cmp
daa
push
mov
cltd
pop
cli
js
add
leave
out
test
mov
dec
mov
mov
xor
adc
mov
subb
pop
adcl
sarb
int3
aad
inc
into
pop
stos
mov
roll
inc
orb
into
aad
mov
sub
cmc
push
and
mov
sub
daa
stc
stos
in
pop
dec
xchg
mov
in
ret
jne
mov
lods
shlb
push
and
cmp
vpandn
push
cmp
loopne
cmc
test
push
or
adc
cltd
jmp
xchg
mov
jmp
jl
mov
iret
jp
push
in
mov
cmp
fistpl
adc
push
adcl
movsl
enter
xchg
jb
aaa
popa
ljmp
xchg
sbb
jmp
mov
inc
xor
mov
mov
lds
fwait
mov
lea
or
hlt
mov
push
stc
in
in
xor
jmp
je
cli
and
sahf
push
or
xlat
popf
fwait
mov
in
lret
test
leave
lds
pop
jmp
xchg
in
push
aaa
in
mov
fnsave
cwtl
sbb
pop
push
sub
out
rcrb
repnz
or
adc
iret
jecxz
push
lea
in
pop
add
sbb
repz
out
stc
das
das
or
jb
test
and
mov
push
mov
xor
mov
test
pop
scas
jecxz
jbe
test
inc
or
shrl
mov
ret
jle
sub
jno
in
movsl
in
mov
fmull
fidivs
push
xchg
and
pop
mov
es
nop
popf
enter
xor
xor
pop
sbbl
test
test
xchg
loopne
inc
test
inc
out
mov
jl
sub
sub
aad
add
lahf
cmpsl
pop
movsl
xor
cmc
into
fildll
inc
es
std
xchg
jcxz
outsl
xchg
jo
fwait
mov
into
push
cmp
loope
popa
rol
inc
xlat
movsb
pop
mov
movsl
mov
orl
jecxz
loope
clc
cltd
leave
dec
mov
lds
shrl
lea
xchg
add
xlat
xchg
mov
sar
cs
out
hlt
div
cmp
in
inc
jae
stc
popl
clc
test
orl
mov
test
mov
add
stc
or
test
mov
ds
push
cmp
xlat
out
ret
test
or
gs
icebp
aas
fimull
sahf
add
roll
sub
push
lret
xor
lods
lret
xchg
jbe
test
xchg
scas
adc
aam
into
sub
push
lods
mov
hlt
push
fs
mov
stc
fs
sub
mov
mov
mov
push
xchg
stos
imul
ja
xchg
subl
push
out
sub
pop
mov
popf
les
inc
popf
xor
mov
or
in
insb
rorb
andb
push
outsb
adcb
sub
mov
lahf
mov
in
fistpl
xchg
fwait
enter
leave
and
mov
lods
jb
ja
mov
xlat
sarl
pop
mov
xchg
xchg
pop
xchg
jns
sub
out
mov
jne
mov
push
je
movsl
jnp
adc
into
cltd
fldt
orb
rcrl
fdivrs
dec
dec
mov
lea
stc
test
dec
xchg
fcoml
mov
fdivr
mov
inc
lods
testb
push
cli
push
pop
mov
sbb
cmp
cmc
insb
xchg
in
lods
test
push
xor
xor
mov
push
jecxz
push
xorb
scas
in
lret
sarb
xlat
xchg
adc
and
sbb
in
sbb
jb
xchg
lods
sbb
or
xlat
xchg
mov
sub
sbb
sbb
cmp
in
fistpl
test
test
iret
shll
jecxz
cmp
mov
jecxz
and
fisttpll
lcall
mov
or
lds
inc
lds
dec
cwtl
jmp
sub
fcmovne
push
lods
mov
xlat
and
stc
cmpsl
cltd
or
popf
ret
cli
test
sbb
in
jge
sahf
cmpsl
out
pop
inc
icebp
in
scas
add
sarb
fists
jmp
subb
icebp
inc
mov
and
push
popf
pop
or
push
xchg
pop
xlat
dec
loope
addl
lcall
lds
cmpsb
pop
loope
test
mov
test
popf
mov
movsb
test
and
xchg
jge
xor
std
mov
inc
jo
in
mov
out
fwait
icebp
inc
adcb
dec
icebp
add
icebp
mov
adc
xchg
cmp
push
shl
flds
cs
icebp
jl
bound
jge
lock
icebp
les
icebp
cmpsl
sbbb
mov
jecxz
icebp
xchg
subb
andb
stos
icebp
popf
sub
push
jl
jmp
sbbb
shl
mov
out
pop
pop
das
jns
add
xor
icebp
std
sbbb
icebp
fildl
icebp
subb
fwait
pop
or
test
fsubs
mov
scas
sbb
mov
test
cmp
fwait
iret
movsl
pop
mov
icebp
in
push
or
jmp
insb
call
icebp
fxch
mov
pop
mov
iret
es
pop
scas
sbb
push
clc
cmc
pop
jmp
out
push
loope
xchg
mov
call
fstpl
cmp
cmp
and
and
int3
sub
in
jmp
xor
data16
sub
lret
aaa
loope
int
push
out
xchg
stos
mov
pop
mov
out
jmp
repz
adc
icebp
jno
push
mov
pop
lds
lock
mov
sbb
cwtl
mov
out
and
xchg
decl
inc
sbb
aam
jg
test
jge
xchg
ds
pop
xchg
ret
cmpsl
cmp
cmp
es
test
sbb
pop
mov
sub
cmp
or
push
stc
adc
iret
shl
mov
jb
mov
loope,pn
stos
pop
movd
push
popl
xchg
add
sbb
std
aaa
sub
test
and
mov
fwait
int
test
ja
leave
andl
cmp
stos
mov
aad
enter
fwait
ret
mov
out
movsl
jno
mov
mov
inc
popf
adc
lret
or
cmpsl
dec
add
mov
push
addl
ljmp
js
cltd
mov
cmp
and
mov
decl
sub
out
cmp
scas
xchg
out
aad
xchg
sahf
cld
xchg
out
scas
stc
cltd
and
mov
sub
lods
xor
fcmovnbe
jecxz
mov
popf
cs
cmc
sub
sbb
loope
lock
push
lods
pop
cmpsl
in
xor
sbb
xor
sarb
xor
cs
sbb
jne
lea
out
hlt
subb
ja
xor
push
mov
cmpsl
xchg
sub
jne
stc
pop
es
fwait
in
or
pop
test
or
fwait
xchg
popf
gs
iret
aad
stos
sub
movsl
xor
pop
andb
xchg
imul
test
ret
inc
in
mov
scas
mov
aaa
in
test
mov
shl
sub
pop
aaa
iret
mov
jno
incl
cltd
and
mov
lods
test
mov
mov
fwait
lds
mov
popf
aad
and
mov
stc
orl
xchg
fldcw
scas
and
push
adc
lds
mov
xorb
lcall
mov
and
lods
clc
mov
jle,pn
loop
pop
jno
imul
cmp
popf
cltd
sub
insl
add
lea
int
test
insb
popf
cltd
out
iret
fdivr
cmp
pop
fwait
dec
cltd
mov
dec
xchg
xlat
stc
xchg
lahf
ss
rolb
add
jae
dec
cmp
addl
jo
adc
lea
add
xor
and
or
mov
mov
pop
or
or
xchg
fldt
mov
and
lea
andl
sub
xchg
ficoml
and
andb
inc
scas
imul
repz
lea
xchg
adc
sub
pop
mov
push
fwait
adcb
mov
cmp
daa
loopne
aaa
cmpsl
int
cltd
sub
xchg
es
jmp
cli
mov
loope
or
pop
orb
int
clc
mov
stos
in
int
push
sbb
xlat
setne
mov
jne
popf
jl
popf
aad
dec
fnstcw
fisttpll
cmpsl
sarl
push
mov
sbb
test
leave
and
lods
in
std
push
nop
xchg
or
lcall
and
or
sub
rol
lea
adc
lahf
mov
push
jbe
mov
orl
mov
jmp
jp
push
sub
cmp
ret
int
xor
xchg
mov
stc
cmc
cs
fsub
xchg
cmp
sub
inc
fwait
jmp
insl
push
movsl
sarl
lcall
pop
cltd
shrl
xchg
pop
sbb
fdivp
cmp
outsl
mov
lea
push
adc
mov
mov
sub
and
add
xchg
mov
mov
aad
fsts
int
xchg
pushf
pop
fwait
pop
mov
push
out
loopne
push
popa
xbegin
stos
fcmovnbe
es
in
shlb
popa
sub
stos
mov
xchg
aad
push
bound
imul
xlat
adc
sub
paddd
lret
sbb
in
cmpsl
and
test
test
mov
popf
scas
dec
sub
push
shl
cvttps2pi
loope
in
mov
mov
mov
cmpsl
adc
jmp
push
sbb
daa
popf
cmpsb
popa
jecxz
cmp
ss
orl
fstpl
popf
jecxz
mov
jb
xlat
push
out
mov
iret
ret
loop
leave
lret
dec
cs
xchg
les
test
jae
out
test
stos
call
and
popl
push
aad
and
mov
and
loope
cmp
in
leave
mov
sub
push
movsl
add
clc
adc
adc
xchg
insb
or
and
push
mov
inc
fcomi
std
pop
xor
cmp
test
jmp
and
jne
addl
mov
shl
dec
ljmp
loopne
in
daa
imul
mov
push
inc
in
sbb
lret
rorl
in
sub
pop
adc
js
sbbl
push
ja
xchg
pop
in
pop
adc
sub
cmpsl
mov
ret
cmp
loope
jo
lock
sub
xor
sarl
mov
adc
mov
mov
call
or
es
add
xchg
jg
inc
add
in
cmp
mov
dec
rcll
and
or
cmp
sub
lahf
orl
lret
cmp
xchg
rcll
push
loope
pop
dec
jecxz
dec
sub
int3
push
pop
es
mov
movsl
out
sub
fucomp
cs
xor
dec
sbb
mov
and
push
call
lds
pushf
or
loope
ret
lea
movsl
in
nop
sub
popf
cmpl
mov
push
out
and
xlat
lahf
xchg
in
ja
xchg
cmpsl
lea
xor
or
jmp
mov
scas
lahf
sbb
xor
cmp
ret
cs
aaa
les
insl
fisttpll
rcrb
rorl
cmp
sub
lret
cmc
loope
push
popf
fbstp
int
push
sub
or
fwait
rol
ficoml
mov
push
mov
into
jnp
and
push
sub
addb
jbe
or
inc
jp
lods
iret
push
nopl
xor
mov
inc
loopne
fistpl
lock
shrl
mov
inc
mov
fisttps
lea
and
movsl
imul
xchg
push
stc
mov
jg
data16
mov
cmpsl
test
in
mov
shl
add
mov
jecxz
and
cmp
push
cmp
sub
pusha
lods
dec
jecxz
outsb
xor
sbb
xchg
push
outsl
add
cmp
andb
dec
mov
jecxz
daa
repz
in
loopew
xor
and
xlat
jae
lea
mov
out
ja
sub
in
shrl
push
repnz
cmp
cmpsb
sti
ss
std
or
clc
pop
mov
jo
pop
pop
in
dec
popa
jmp
leave
stos
xor
cmc
movsl
xlat
in
mov
mov
pushf
dec
mov
mov
shrl
stc
sub
mov
push
cmpsl
popf
in
sbb
xchg
test
mov
xchg
aaa
and
stc
test
test
xchg
pop
scas
xchg
movsl
icebp
sarl
dec
aad
cmpsl
into
ror
out
repz
pop
pop
movsl
push
sub
sub
rol
push
mov
in
rcll
cltd
leave
in
xor
inc
sub
jb
scas
gs
mov
sbb
cltd
xlat
sub
fsubrs
rorl
sbb
and
shlb
cld
movsl
cmpsb
or
popf
mov
out
clc
leave
mov
push
popf
fisttps
sub
loope
mov
shll
test
lea
fwait
cs
push
shr
repz
int
or
sarl
aaa
loope
fildl
call
je
mov
loopne
mov
pop
sub
jmp
mov
pop
aad
int
add
imul
jno
and
or
push
stos
popf
mov
push
das
insl
cmpl
xchg
mov
mov
push
cmp
cmp
xchg
aad
add
cs
push
jae
mov
and
cmp
andl
and
insl
add
sbb
int
or
push
test
stc
stos
pusha
sbb
leave
mov
xchg
and
mov
xlat
sub
adc
xchg
ret
jmp
add
int
cmp
aas
iret
int3
mov
add
or
dec
mov
mov
stc
ret
and
bound
fldl
xchg
rcrb
arpl
out
xor
subl
dec
xchg
sub
leave
and
popf
mov
xchg
xchg
sbb
jmp
mov
aaa
scas
shll
vrsqrtss
add
lahf
sub
lods
jmp
cs
daa
pop
sbb
xchg
xchg
es
movl
mov
enter
jb
jmp
shrl
mov
cmp
xor
in
lahf
in
or
jecxz
sub
es
cmpsl
imul
shlb
pop
adcl
out
dec
int3
mov
or
cs
pop
insl
clc
sub
lea
repnz
xchg
jo
andl
and
dec
push
enter
fwait
mov
push
shrl
leave
or
jl
mov
data16
xchg
test
mov
and
pop
shll
pop
imul
stc
sbb
adc
iret
stos
andl
jmp
movsl
lea
inc
es
or
popf
dec
push
arpl
fxch
pusha
inc
out
dec
dec
push
mov
mov
fcomip
xchg
stc
xchg
movnti
subb
test
push
cmp
pop
pop
push
pop
gs
cmp
mov
dec
jge
shrl
lahf
sbb
testl
xchg
cmp
jmp
xchg
cs
pop
or
shrl
mov
aad
jno
repz
enter
xchg
mov
movsl
sub
adc
jecxz
out
mov
push
test
sub
in
mov
sbb
mov
mov
std
xchg
imul
jecxz
ret
xor
mov
inc
int
out
and
cmp
out
jle
in
es
pusha
xor
inc
insb
mov
push
fcmovnu
lock
call
lahf
push
cmpsl
adc
sub
sub
jle
movsl
mov
lods
xchg
mov
push
popf
jno
insl
mov
scas
stos
fildll
mov
xor
xor
cmc
mov
mov
mov
ss
sbb
in
jno
xchg
rorl
jle
mov
je
and
into
pop
mov
and
push
stc
out
adc
ficompl
es
std
cmp
adc
stc
jmp
push
sbbl
repnz
mov
mov
mov
leave
cmp
aad
push
inc
fwait
xchg
aad
sbb
xor
xor
shlb
sub
pop
ffreep
sub
mov
cmc
stos
cltd
sub
or
or
cmp
cs
mov
pop
shll
ret
cmp
ds
xor
test
sub
out
mov
popa
stc
xor
scas
rorl
push
push
cmpsl
in
push
jnp
aad
loopne
shll
jb
sarl
xchg
and
mov
mov
pop
push
inc
xor
in
out
mov
fcmovne
hlt
pop
mov
push
insb
dec
dec
pop
lods
sub
imul
mov
out
sbb
adc
nop
or
cs
sub
scas
test
les
in
dec
mov
xor
mov
push
iret
push
clc
pop
frstor
jecxz
xor
cmp
dec
iret
push
repnz
sub
mov
call
mov
leave
test
cmpsl
test
stc
aam
repnz
mov
test
cmp
mov
movsb
sub
xor
xlat
cmp
andl
ja
sub
and
mov
shrl
imul
ret
jbe
add
iret
sub
mov
lods
in
mov
dec
push
push
xchg
adcl
sti
mov
inc
test
pop
or
int
xchg
sbb
pusha
lea
cmc
cmp
imul
or
iret
sbb
call
sbb
mov
pop
push
popf
push
loopne
cmpsl
xchg
xchg
movsl
xor
push
out
push
mov
sub
jl
mov
xor
and
insl
and
icebp
ret
leave
in
fbld
jg
int3
add
and
xchg
sub
das
int
fnstcw
aad
cltd
lcall
in
mov
cli
pop
cs
and
and
cmp
cmp
loope
mov
cmpsl
xor
andl
adc
test
arpl
cwtl
test
lods
push
cltd
sbb
xchg
add
xchg
push
lret
leave
pop
iret
lea
idivb
xchg
push
sarb
add
loop
cmpsl
mov
pop
in
fcompl
fwait
mov
jmp
inc
mov
sbb
daa
fldcw
das
xchg
fldcw
jecxz,pn
iret
xor
movsl
xlat
jbe
cmpsb
fidivl
subl
inc
sub
push
or
fistps
popf
xchg
lds
subb
in
rcr
add
adc
sub
fs
aad
jae
xchg
jmp
xchg
pop
jae
es
sbb
mov
iret
cmp
jmp
rorl
fistps
xchg
leave
movsl
iret
inc
mov
mov
pop
push
fdivp
sbb
push
aam
cmp
in
leave
cmp
fcomi
jmp
jmp
jmp
stos
mov
jo
push
dec
lret
notb
and
aam
in
cmp
fadd
repz
in
xor
rcrl
int
nop
orb
fbld
jge
mov
push
js
pushf
movsl
clc
mov
int
xor
mov
mov
push
loopne
xchg
push
out
cmpsl
xchg
test
jae
lcall
jecxz
jnp
pop
jne
out
lahf
pop
pushf
into
cmp
aad
scas
test
dec
adc
cmp
xlat
imul
orl
sub
popf
and
out
xchg
dec
add
in
cmp
lahf
stos
xlat
loopne
pop
call
stc
xor
inc
pop
aaa
insb
test
popf
lods
cmp
inc
or
push
sarl
mov
inc
jns
filds
xlat
and
lds
adc
sub
daa
ret
movsl
sub
fbstp
xchg
test
push
cmp
stc
out
test
pop
mov
rcrl
sbb
loope
inc
in
mov
icebp
dec
xor
popa
movsl
push
jae
add
sub
sbb
sub
xor
xchg
rorl
mov
push
movsb
sub
or
fs
popa
in
or
enter
addl
fildll
sub
stc
popa
adc
push
leave
or
rcr
and
xchg
orl
sbb
lret
and
mov
dec
movsl
jne
cmp
pop
sbb
imulb
xchg
in
ret
and
push
jmp
fcmove
popf
sub
fstps
bound
push
push
out
out
sahf
add
sub
in
into
dec
shld
fwait
push
xchg
subl
lahf
pop
and
and
mov
insl
xchg
adc
add
mov
divl
das
add
lods
and
xchg
cld
int
adc
mov
popf
and
jmp
push
lds
shl
cmp
cmpsl
int
test
cmp
rcr
pcmpeqw
pushl
adc
mov
sub
push
xchg
in
ret
push
mov
sub
sbb
jno
inc
test
pop
pop
into
jae
push
mov
in
imul
ss
dec
dec
add
jmp
and
jecxz
sub
mov
mov
ss
fwait
jb
insl
rorl
call
frstor
lahf
sub
xchg
cmp
daa
andl
cmpsl
cmc
sub
mov
in
xor
sbb
out
mov
loope
imul
sub
xchg
mov
fwait
inc
stc
movsl
popa
scas
add
pop
add
cltd
cmp
test
sub
lahf
mov
pop
js
ds
lds
pop
add
shrl
orb
loope
test
cmp
in
inc
stos
adc
shrl
test
std
fwait
iret
in
pop
mov
pop
out
push
jp
repnz
mov
cmp
pop
xchg
cs
movsl
lret
xchg
popf
test
xor
es
aad
cmpl
fdivl
mov
out
mov
popf
mov
fwait
xchg
ret
popf
lret
sub
loope
mov
test
mov
jmp
mov
xchg
rcrl
lods
stc
leave
mov
lret
jnp
and
roll
mov
jle
mov
stc
xchg
mov
cmp
push
rorl
test
ret
icebp
lcall
adc
cmp
xchg
sub
pop
mov
push
data16
push
xlat
stc
out
rcr
leave
std
ret
inc
sarl
mov
jmp
frstor
or
dec
popf
loope
and
inc
pop
aaa
popa
cmp
imul
push
clc
cmpsl
lods
movsl
movsl
out
push
mov
enter
xchg
imul
fwait
pop
push
cwtl
out
fucomi
mov
xor
adc
fcomps
jle
xlat
xchg
fwait
imul
es
jmp
cltd
lahf
sub
cmp
call
imul
test
mov
out
das
int3
mov
or
fisubrl
xchg
sbb
jecxz
cmp
sub
mov
cmp
lock
push
pop
arpl
popa
enter
loope
pusha
in
xlat
dec
ror
and
xchg
lods
vphaddwq
lea
inc
les
mov
mov
mov
pop
fwait
sub
mov
filds
xchg
pop
js
lahf
std
pop
nop
sub
cmp
out
aas
pusha
add
mov
sbb
test
pop
in
jecxz
xlat
xchg
lahf
roll
rclb
fstps
sbb
mov
adcl
cmp
jmp
adc
sub
jecxz
daa
sti
dec
cmp
mov
xchg
xchg
rcr
sub
sub
pusha
or
or
cmpl
mov
stos
imul
out
sbb
jmp
loope
jno
sbb
jne
and
std
shll
repz
mov
add
cmp
loope
fbld
cmp
dec
sbb
push
in
mov
xchg
pusha
and
in
flds
add
and
sub
sub
popf
add
test
mov
jmp
sub
call
mov
mov
test
xlat
iret
shll
aad
lret
jmp
sbb
add
pop
adc
sub
out
dec
out
cmp
cs
inc
sbb
add
and
lret
fists
iret
mov
in
xchg
int
jne
ret
ret
mov
sub
in
aad
jmp
into
push
lret
sub
mov
cmpsl
xlat
aam
push
mov
xchg
add
mov
inc
jno
sbb
stc
or
cmp
int
dec
inc
lret
icebp
and
pop
cli
sub
adc
loope
sbb
xor
cmp
arpl
sbb
pop
sbb
pop
outsl
lahf
faddl
mov
lods
test
mov
jl
lea
push
cs
jno
xchg
orl
add
shrl
push
push
mov
iret
pop
shlb
in
imul
lods
mov
push
cmpsl
in
arpl
xchg
shrl
mov
jmp
jmp
cmpsl
testb
and
push
mov
sbb
in
mov
shrb
decb
aad
imul
mov
out
test
jnp
fwait
icebp
lock
push
dec
sub
or
iret
sub
jl
add
sub
mov
scas
in
pushf
sub
xchg
cmpsl
js
pop
out
sti
out
xchg
mov
dec
fadd
and
stc
in
inc
test
daa
iret
mov
in
test
lds
mov
stc
push
popf
daa
xchg
mov
insb
mov
push
cmpsl
stos
sti
xchg
clc
ror
test
cmpsb
leave
mov
in
stos
and
xor
xchg
jno
es
jge
xlat
hlt
pusha
insl
test
imul
lret
mov
push
pushf
lds
mov
fstl
call
test
adc
or
xchg
mov
scas
ja
jbe
pop
scas
movsl
sub
xchg
adc
shrl
stos
scas
pop
and
xor
es
and
xchg
lahf
push
lret
cmc
iret
icebp
scas
fsubs
mov
mov
mov
and
xchg
xor
mov
out
pop
stc
iret
scas
cmp
cmp
mov
xor
test
data16
out
pop
sbbl
pop
loop
add
subb
test
popa
cmp
mov
popf
jmp
xchg
lahf
cmp
push
fcmovnu
std
pop
mov
test
mov
int3
lret
pop
dec
lea
sbb
stc
movsl
insb
inc
loope
cwtl
pop
mov
jecxz
xchg
ljmp
or
popa
add
es
xchg
ret
sbb
mov
xor
leave
ret
add
aaa
stos
lahf
iret
sub
ret
jmp
mov
scas
dec
push
in
fidivs
dec
cs
add
cmp
shll
jno
vmaskmovdqu
shl
movsl
xor
test
stc
cmpl
mov
fstpl
xchg
iret
nop
push
fisubrl
pop
add
clc
xor
popf
jmp
xchg
movsl
mov
out
aaa
les
cmp
sahf
cltd
xchg
adc
cmp
sbb
pop
andl
inc
test
and
int
cltd
int3
in
pop
xchg
push
shrl
xchg
sub
popf
leave
jo
lds
pop
xchg
stc
or
pop
icebp
stos
popa
push
int
movsl
out
inc
push
dec
mov
mov
lds
fimull
mov
cltd
shr
jne
xchg
sub
or
divb
sub
ret
sub
shrl
add
cltd
pop
push
mov
insb
jmp
add
and
lds
dec
lods
test
jecxz
pop
daa
or
or
xor
rorb
ret
test
test
lods
xchg
push
push
sbbl
jmp
loope
mov
repz
mov
rcll
jmp
lds
bound
or
xchg
xchg
iret
sub
xor
clc
xor
add
adc
xor
int
es
fdivr
cmpsb
adc
sbb
inc
hlt
fwait
dec
adc
pop
test
flds
xor
xor
scas
xor
jbe
pop
pop
jmp
push
xor
arpl
aaa
or
jbe
lcall
sarb
popf
sarl
push
pop
lods
inc
and
xor
test
xchg
pop
or
mov
inc
or
push
ja
sbb
cmp
sub
mov
push
stos
loop
jge
push
loop
jle
andl
inc
push
rclb
push
push
mov
sub
fldcw
inc
mov
push
mov
xchg
mov
inc
outsb
or
xlat
cmp
in
in
jge
jmp
push
ds
cmp
sub
push
nop
xlat
scas
mov
pop
xchg
lret
push
test
test
inc
rcll
es
mov
cmpsb
adc
arpl
repnz
push
lds
sbb
rolb
lea
mov
roll
dec
adc
jge
sbb
addl
xlat
repz
cmp
rcl
lds
fcmovnu
stos
xor
cmp
and
sbbb
and
dec
fbld
sbb
loope
pop
add
xchg
fsub
shl
popf
dec
popa
in
and
popf
stos
popf
icebp
xchg
dec
fstps
add
add
sub
jle
ret
imul
das
call
sbb
cmp
push
std
jmp
push
adc
pushl
mov
and
sub
ss
pusha
test
fbstp
sbb
cmpsb
mov
loop
pop
add
xlat
push
aad
sbbl
jmp
das
ja
fcmovnu
addb
adc
xchg
daa
and
aad
in
lods
inc
out
fldt
rorl
pop
inc
wrmsr
stc
out
push
push
int
cs
xchg
dec
sub
add
xchg
cmp
jo
sub
sub
cmp
xchg
dec
movsb
mov
push
push
mov
test
cmc
mov
and
lods
adc
mov
xchg
ss
mov
jmp
xor
mov
test
orb
xchg
in
mov
daa
fs
int
out
sbb
data16
cmpsl
adc
lahf
lods
jns
push
es
inc
dec
imul
push
daa
hlt
rep
add
sahf
add
subl
pop
jae
sub
push
or
sbb
xlat
and
movsl
add
dec
mov
or
out
xchg
into
and
mov
shll
leave
push
cmp
jns
jmp
imul
push
leave
psadbw
cmp
lret
mov
fcmovnu
lods
mov
iret
mov
pop
dec
in
and
inc
stos
sub
xlat
sbb
pop
fmuls
cmpsl
rcrb
mov
mov
cwtl
sub
fldenv
int
mov
jecxz
xchg
cmp
subl
pop
cmp
cltd
scas
cmp
mov
add
mov
push
mov
and
call
dec
and
dec
xor
sub
mov
add
into
xor
and
mov
sti
cmp
movsl
mov
fisubrs
fistl
push
cwtl
mov
rcll
and
in
push
and
out
nop
inc
mov
fildll
rcr
or
leave
mov
daa
push
sub
fprem
stc
sarl
int
es
aad
clc
je
iret
sub
pop
por
ror
rcl
popa
and
jbe
lahf
fldcw
push
xlat
fldt
xchg
and
cmp
cs
cltd
cs
or
pop
xlat
lods
xchg
mov
cmpsl
div
sbb
sub
in
test
jo
pushl
lods
in
dec
andl
es
xchg
ret
cmp
into
push
int3
mov
leave
out
xchg
xchg
push
dec
test
push
adcb
pop
loope
xor
int
std
aaa
adc
sbb
stc
dec
adc
scas
test
xor
leave
stos
push
push
loope
jge
push
cmp
sub
ror
inc
fiadds
adc
xchg
subl
test
add
out
aam
shll
push
pop
cmp
cmpsl
test
inc
es
icebp
loope
pushl
jmp
lea
cltd
push
xchg
mov
sarl
cmp
incl
jmp
aad
movl
or
fldl
sbbb
xchg
test
roll
cmp
cmp
scas
sub
jne
jbe
mov
test
or
leave
xor
call
xchg
je
mov
add
adc
sbb
stc
or
jno
mov
cltd
mov
shll
or
shll
lahf
or
mov
mov
rcrl
popf
std
cs
test
mov
xor
push
lahf
jge
and
test
pop
and
mov
cmp
xlat
xlat
int
lret
dec
cmpb
frstor
mov
mov
xchg
add
jecxz
mov
mov
stos
mov
arpl
lahf
and
lret
mov
sub
pop
or
ret
adc
xchg
cmc
add
xchg
jmp
rol
popf
cmp
mov
and
pop
iret
mov
mov
push
test
movsl
cmp
add
xchg
xchg
or
int3
cli
in
jmp
rcr
dec
dec
call
fcmovbe
mov
mov
lock
nop
mov
scas
sub
dec
push
test
sub
xchg
sub
push
pop
clc
xlat
ss
mov
movsl
cmp
leave
mov
lea
mov
sub
cmpsl
out
out
push
add
scas
jno
pushl
arpl
iret
lahf
insb
push
in
arpl
stc
xchg
sub
lret
fnstsw
jne
test
dec
jmp
callw
shll
icebp
mov
fistl
sub
mov
cltd
movsl
aaa
movsl
aad
xchg
decb
ret
jne
pushl
ret
out
mov
std
fcomip
or
in
cli
xchg
xor
test
xor
iret
test
enter
xor
mov
scas
mov
adc
ja
dec
or
inc
jmp
xchg
or
out
lahf
cmp
sbb
or
adc
fwait
adcl
adc
cmp
cs
jmp
xchg
mov
mov
mov
mov
jl
and
stc
and
repz
cld
loop
xchg
nop
cmp
jnp
mov
push
fldcw
lock
in
sub
dec
fldl
dec
jge
filds
mov
mov
stc
adc
imul
cmp
dec
cwtl
xchg
out
iret
xlat
in
into
mov
cmp
bound
push
or
dec
leave
xchg
cmp
iret
popa
cs
in
jecxz
stos
dec
jge
loope
cmp
mov
fldcw
out
mov
or
xchg
stos
xchg
lret
lods
popf
subb
inc
xor
mov
sub
in
sbb
sub
js
mov
cmp
push
out
mov
mov
shrl
adc
adc
js
aad
leave
mov
xor
lds
cltd
frstor
xchg
in
aam
xchg
lods
aaa
test
cs
arpl
popf
es
sub
or
test
mov
sbb
hlt
xchg
mov
push
leave
sarb
popf
out
cmpsl
mov
mov
lods
push
popf
loope
push
int3
aaa
leave
cmp
lret
movsl
xlat
fbstp
popf
xchg
sub
inc
inc
xchg
pop
mov
pop
or
fldl
out
add
push
sbbl
xchg
or
cmpsl
cmp
lea
mov
outsb
in
js
jecxz
cmp
xchg
inc
or
cmpsl
dec
xchg
jne
xchg
push
xlat
lea
lds
jno
loope
movsl
jmp
or
loopne
jge
sbbl
lahf
out
lock
pop
sub
xchg
clc
sbb
lods
in
or
dec
scas
cmp
mov
aad
ja
cmp
insl
in
jae
in
movsl
lahf
leave
jmp
mov
sub
push
int
inc
adc
dec
sarl
and
stc
mov
and
fisttps
mov
iret
mov
push
rol
pushf
mov
out
sub
xchg
stc
and
insl
push
lea
stos
xchg
jge
dec
aam
leave
sub
and
fstl
cltd
inc
jecxz
nop
movl
out
and
cmpsb
das
and
test
xchg
scas
sarl
xor
lea
sti
pop
insl
cld
mov
adc
inc
stos
popf
test
xchg
lret
mov
call
scas
cmpsl
jnp
es
daa
data16
aaa
push
cmp
jmp
test
imul
mov
push
or
pushf
sub
cwtl
lds
ret
mov
bound
sub
shr
inc
lea
adc
fnstenv
stc
shl
lahf
pop
out
cmp
lret
das
lds
jmp
cmp
test
cmpl
scas
cmp
test
imul
sub
into
fmull
test
sbb
push
lcall
int3
div
pop
enter
mov
in
xchg
xorb
cmp
iret
insb
in
mov
or
cmpsl
pop
sti
and
sbb
lea
push
fisubs
ss
test
sti
sbb
cmpsl
aas
add
aad
xor
xor
mov
lret
sub
ror
mov
hlt
inc
in
and
ja
ss
imul
mov
mov
lods
dec
mov
test
mov
rcrl
test
mov
popf
xchg
inc
rcrl
test
es
and
xchg
out
sub
fstpt
mov
fcoms
sbb
shr
dec
inc
into
xorb
inc
mov
cmpsl
mov
rcrl
pop
fildl
leave
sub
mov
mov
mov
into
cmpsb
pop
xchg
shll
inc
lock
sub
mov
pmullw
iret
and
cmp
push
jle
notl
push
sbb
pop
mov
out
xor
fistps
cs
loop
lock
arpl
mov
cmp
jmp
pop
mov
mov
cs
fwait
push
push
lret
push
dec
fwait
pop
movsl
iret
pop
dec
jle
add
in
out
mov
rcrl
add
push
xchg
xchg
xchg
es
fistpll
jmp
push
imul
inc
xor
sbb
jl
clc
sub
mov
add
cltd
cmpsl
jnp
mov
movsl
or
xlat
ja
jge
pop
in
and
aaa
xchg
push
sub
sub
pop
mov
leave
lea
lahf
xchg
aaa
jecxz
test
fyl2xp1
xchg
and
ljmp
cwtl
mov
or
popf
and
mov
pop
loope
shr
mov
stos
lahf
xchg
cmpb
cmpsl
out
fdivs
jmp
fwait
inc
loope
mov
iret
pop
mov
jg
aam
mov
scas
repz
test
and
loope
sarl
xchg
frstpm(287
cwtl
and
sbb
jmp
insl
lea
aaa
xchg
sarb
lea
mov
push
mov
andl
rol
iret
mov
pop
add
nop
ret
mov
jecxz
das
pop
sub
lret
sub
xchg
xchg
faddl
sbb
in
inc
adc
in
fistl
xor
cmp
filds
stos
mov
xchg
testl
cmp
stos
pop
dec
or
dec
int3
shr
push
sub
pop
das
loope
or
xor
iret
loope
pop
add
lahf
lods
or
xchg
enter
mov
mov
mov
xorl
arpl
insb
out
add
lods
stos
mov
lahf
shrl
rcrb
mov
jecxz
sub
fwait
sub
add
rcll
lea
add
cmp
and
in
pop
imul
fistps
add
inc
int
icebp
aaa
iret
sub
cmp
pop
sbb
mov
fldcw
xor
jecxz
pop
ret
xchg
cs
aaa
pop
sub
int
sub
adc
out
push
pop
sahf
aad
or
jmp
ds
popf
popf
push
fxch
mov
jnp
cltd
cli
fcmovnu
mov
int3
popf
pop
mov
dec
mov
mov
or
je
mov
scas
xchg
fnstsw
jmp
cmc
jmp
cwtl
mov
push
adc
cvtdq2ps
pop
or
mov
inc
fmull
rcrl
aam
lods
jns
ja
shrl
jecxz
popf
xor
mov
inc
cltd
leave
xchg
lret
add
mov
movsl
out
or
cltd
cmc
lods
lea
in
mov
ret
dec
add
ja
cltd
cmp
sub
push
test
xor
stc
push
aas
aas
push
xchg
insb
adc
aad
cltd
cs
sbb
aad
cmp
stos
add
xchg
sub
mov
xchg
orb
mov
lods
dec
xlat
iret
pop
sbb
fwait
jmp
into
dec
decl
pop
push
popf
sub
adcl
dec
adc
test
sub
mov
sbb
push
in
in
and
fnstsw
loope
js
pop
ss
nop
jmp
and
dec
aad
push
mov
pop
sub
daa
jmp
cmc
mull
push
lret
jne
roll
or
xor
xchg
insl
pop
xchg
mov
xchg
jns
pushl
jns
cmp
xchg
lret
pop
or
cmc
fnop
shrl
adc
cmp
and
popf
inc
xlat
xor
mov
ljmp
roll
add
lea
lret
cmc
orb
sbb
or
sbb
jmp
stos
fs
js
out
fstpl
sub
fnstenv
sub
and
jecxz
fstps
in
into
pop
cltd
xor
lahf
data16
adc
jmp
cltd
cmpsb
stos
xchg
clc
push
and
jmp
leave
sub
shlb
jae
xor
xor
scas
std
fwait
or
pop
add
pop
test
popf
xor
sahf
insb
mov
xor
dec
out
cmp
jecxz
rcrl
jne
push
loope
push
xlat
and
scas
sub
mov
loope
in
xchg
fsubl
outsb
jmp
test
or
fisttpl
mov
imul
pop
ret
rcll
mov
stos
push
lods
cmpsl
data16
stc
ret
js
aad
mov
test
fwait
pop
shl
push
jne
jge
push
cs
rcll
adcb
xor
cmpsb
pop
out
or
mov
mov
push
push
mov
mov
fistps
scas
mov
mov
and
int
lea
push
xchg
adc
ret
mov
mov
push
jno
xchg
leave
sbb
mov
adc
cmp
cmpsl
xlat
in
in
push
jge
cmp
or
loope
dec
int
or
cltd
lods
pusha
and
sbb
in
pop
fwait
call
push
shrl
int3
cmpsb
or
push
fidivs
idivb
mov
jecxz
or
in
mov
cmp
xor
add
sub
add
mov
int
and
pop
aad
xlat
dec
jmp
pop
js
filds
es
divl
test
in
arpl
xor
push
sahf
into
sbb
mov
pop
lret
dec
xor
xchg
in
mov
out
adc
dec
stos
cmp
mov
lods
mov
scas
pushl
out
andl
mov
lahf
xchg
adc
scas
pop
div
sub
cs
movsl
stos
es
lea
decb
lret
mov
jmp
inc
leave
xchg
and
lret
nop
xchg
in
or
adc
jmp
rclb
popa
inc
pop
nop
xlat
mov
rcll
iret
mov
aad
mov
inc
test
adc
mov
or
pop
jae
cmp
mov
cltd
imul
fidivl
cmp
jae
xchg
mov
push
aam
pop
mov
stc
stc
mov
rcr
fstpl
adc
fwait
ret
mov
jl
shrl
push
cmp
sbb
aad
adc
popf
cmpsl
jmp
cmp
shll
nop
int3
nop
inc
or
xorl
pop
insb
je
cmp
mov
pushf
inc
mov
mov
cltd
pop
xchg
lret
fcompl
ljmp
sbb
pop
cmp
push
out
mov
cli
popf
and
pop
push
sub
cmpsl
xchg
movsl
or
iret
js
mov
popf
fnstenv
stos
adc
out
adc
sub
out
shl
or
push
or
clc
add
enter
stos
mov
fistpl
xchg
push
int3
xchg
lcall
aas
popa
andl
popa
out
adc
pop
jmp
std
andb
les
lds
testb
leave
out
int3
das
cmp
lds
jne
and
xor
adc
fwait
and
cltd
popf
cmp
mov
mov
sbb
testl
cmp
mov
rcrl
and
mov
cmp
sbb
daa
rcrl
xchg
jmp
in
ret
mov
mov
mov
push
push
pop
and
dec
movl
jecxz
jo
xchg
orl
popf
push
inc
mov
stc
aas
push
imul
in
es
push
test
add
dec
pop
mov
inc
mov
pop
fbld
inc
iret
in
mov
lcall
orl
test
iret
es
push
cmp
mov
add
inc
sub
loope
inc
push
rcrl
jbe
imul
mov
cltd
xor
xlat
hlt
lods
fwait
sub
or
mov
lods
dec
popa
ret
fwait
lods
imul
xor
xchg
cmpsl
inc
sbb
jg,pn
mov
rcrl
sti
mov
int
loop
add
mov
dec
stos
popf
leave
pop
xchg
mov
andb
popf
add
cmp
jg
xchg
test
push
xor
push
cmpsl
in
fiadds
cltd
xchg
stos
mov
mov
bound
cwtl
and
fwait
sbb
adc
lret
adc
addb
cmp
inc
cmpsl
dec
nop
mov
cwtl
daa
pop
ret
jmp
jecxz
in
outsl
or
mov
rolb
stos
mov
inc
xchg
jge
es
jmp
sub
fwait
dec
inc
cmp
push
push
in
jne
mov
sub
mov
lds
cmp
out
lahf
mov
sub
add
cmp
sub
cmc
out
and
mov
sub
enter
in
inc
ljmp
cmp
mov
push
ret
mov
jecxz
ret
aad
and
in
mov
inc
scas
and
scas
adc
mov
out
iret
sub
and
dec
xchg
adc
lret
mov
push
daa
iret
loop
pop
sbb
and
stos
nop
xor
loopne
test
push
cmp
pop
inc
sti
or
stos
push
popa
test
fisttpl
push
xchg
cmpl
out
mov
rorl
sbb
lea
pop
push
fistpl
fidivrs
xchg
pop
call
sbb
shll
imul
test
fildll
sbb
fcomps
es
movsl
sbb
xchg
cmp
or
popf
xor
and
sub
push
in
jecxz
imul
clc
push
mov
pop
faddl
push
lahf
add
stc
andl
sub
stc
icebp
push
cmp
movsl
jmp
movswl
cmp
xchg
mov
mov
mov
andl
popf
inc
and
divl
lods
push
inc
push
xchg
shlb
adc
pop
push
es
xlat
lods
mov
push
test
pcmpeqd
fdivrl
fadds
xor
dec
push
lods
int
inc
add
xlat
adc
aad
popa
mov
adc
jecxz
out
xchg
movsl
in
fldenv
mov
repnz
jo
adc
vmulss
push
ja
popf
les
popa
iret
fcomps
out
xchg
call
and
out
leave
movsl
nop
mov
mov
loope
dec
ffreep
sbbb
mov
fwait
std
imul
in
lods
in
dec
out
add
fwait
test
shr
mov
sarl
aad
mov
jmp
ljmp
shlb
xchg
in
cs
cmpb
in
cmp
pop
push
daa
cltd
or
mov
adc
popa
popa
cmp
insl
dec
fldcw
xor
mov
and
mov
xchg
push
mov
and
push
test
or
mov
fdivs
fs
lock
lea
sub
dec
mov
aas
icebp
cmp
imul
andl
into
cwtl
xor
xlat
jo
xchg
repnz
cs
sub
shl
das
mov
mov
xchg
in
jmp
sub
test
pop
pop
mov
cltd
jecxz
sbb
std
xchg
mov
mov
loop
mov
push
fwait
xor
xor
add
in
inc
mov
in
and
xorl
in
sub
mov
int
js
cltd
fmul
xchg
fld
jmp
lret
into
fistl
mov
lods
movsl
or
js
mov
stos
inc
stc
lods
push
or
or
jmp
ret
int
mov
pusha
sbb
xor
mov
jmp
test
lods
and
rol
mov
hlt
cltd
mov
scas
pop
adc
es
out
xor
fdivp
add
lahf
sub
pop
iret
leave
fnstcw
push
icebp
xor
aad
or
mov
xchg
pushf
cmc
rol
inc
jne,pt
xchg
cltd
insb
push
xchg
cmc
mov
mov
mov
fucomp
shl
inc
fsts
lods
pop
mov
xor
bound
aad
xlat
push
lds
mov
pop
movsl
xor
or
leave
out
sub
add
jmp
int
mov
pop
stc
std
pop
jae
popa
xor
jns
sub
adcb
sub
out
cmpsl
cltd
mov
and
mov
stos
fisttpl
or
mov
mov
lahf
mov
mov
aas
loope
scas
data16
lods
fwait
xor
xchg
or
pop
icebp
shlb
fwait
or
lahf
inc
sub
daa
and
loope
cmp
test
mov
xchg
push
popf
add
lods
cmpsl
orl
ret
jmp
xchg
jmp
enter
and
fwait
sub
mov
mov
out
out
aad
lahf
add
test
add
es
cmp
fnop
xor
xchg
mov
je
cltd
repnz
aad
adc
push
sar
push
mov
jmp
nop
lcall
push
lea
sub
lods
add
mov
mov
cmp
shll
pavgw
fadds
movsl
xchg
lock
cmp
push
sbb
jmp
pop
iret
lea
iret
loope
cmc
out
mov
add
push
cwtl
int
test
and
xchg
stc
jmp
cmc
sub
aam
sub
sbbl
xor
aad
inc
mov
mov
xor
aam
clc
push
popa
dec
iret
scas
xor
pop
xlat
pop
sub
adc
push
jecxz
loope
imul
mov
push
mov
cltd
pop
pop
cmpsl
lods
cmp
les
mov
push
xor
out
xchg
sub
sub
jecxz
lods
shll
or
imul
out
pop
sub
sub
cmc
hlt
sub
dec
push
fsub
push
in
xchg
dec
add
daa
int
out
insb
leave
stc
iret
fildll
mov
test
shrd
xchg
iret
movl
push
push
jge
loopne
inc
loop
sub
aaa
lock
sub
adcl
adc
adcl
mov
in
mov
loop
aad
leave
lahf
cmp
jbe
push
stc
andl
sub
call
stos
int3
cmpsl
sbb
mov
pop
push
sub
test
jmp
inc
xchg
cs
add
shll
xorb
aam
lock
pop
aaa
scas
push
xor
aad
ja
xlat
cwtl
adc
mov
mov
xor
jge
fistpll
lret
add
mov
jp
mov
fmuls
adc
lea
xor
and
enter
lret
ret
or
loope
popf
sbb
les
cs
or
ret
aad
jb
mov
inc
adc
push
test
push
into
jbe
out
js
push
icebp
cmp
int3
xor
xlat
mov
push
push
imul
test
xor
sarl
sub
stc
fstpl
in
jno
xchg
mov
mov
cs
cmp
out
insb
out
movsl
sub
mov
sar
or
sub
push
std
lea
xchg
stos
out
imul
mov
xchg
lahf
sub
sbb
mov
sbb
fstp
shrl
xchg
leave
and
mov
orb
xchg
lods
icebp
shrd
xchg
add
lret
jmp
loopne
push
lea
sbb
lds
pop
dec
lock
rorb
mov
fdivrs
push
movsl
flds
xchg
mov
divb
lea
pop
icebp
pop
xor
adc
int3
in
out
adc
xchg
mov
loope
adc
sub
lret
and
js
lds
movsl
clc
insb
cltd
push
leave
fstl
sbb
fbld
popf
jmp
push
xchg
shr
sub
mov
pop
mov
stc
sub
jno
mov
cmp
xchg
leave
push
xchg
xchg
test
mov
mov
and
xor
push
push
rcrl
xchg
lret
stos
int
js
movsl
imul
sahf
sub
leave
xor
or
loope
clc
add
pop
xor
ret
push
cs
fildl
mov
popa
lea
mov
sub
xchg
sub
shrl
cmp
jb
mov
icebp
pop
push
xchg
sbb
mov
pop
adc
lods
adc
es
mov
pushf
xlat
clc
pop
in
add
lods
rcll
xchg
or
jge
cmp
vandnpd
add
jecxz
adc
pop
lahf
out
sub
int
mov
stc
xchg
into
roll
push
ret
ffree
cmc
and
xor
in
test
leave
hlt
or
push
stc
cmc
adc
jne
popf
addb
test
and
or
call
fs
subb
dec
int
push
or
fiaddl
dec
filds
sub
pshufw
mov
fwait
jl
push
lahf
cltd
cmp
mov
repnz
lock
xor
repz
orl
sub
gs
aad
daa
xchg
pop
test
cmp
arpl
repnz
adc
or
sub
rcrl
adc
int
fidivs
mov
sub
xchg
sub
pop
sub
and
cmp
and
pop
mov
and
lret
ljmp
mov
cmp
cmp
sub
xchg
ret
stc
sub
pop
lea
push
out
xchg
mov
lods
cmp
adc
stos
fwait
sub
and
mov
cmp
and
int
mov
cld
movsl
es
jb
mov
xlat
clc
mov
mov
iret
xor
cmp
cmp
ljmp
xchg
mov
stos
aad
les
mov
sbb
dec
movb
shrl
fldenv
and
or
jecxz
fnsetpm(287
or
imul
cmp
fld
out
dec
dec
sarb
xlat
test
rcr
mov
mov
inc
test
push
jecxz
push
dec
lock
in
sub
jmp
decl
add
cmp
lods
push
pop
fbld
std
mov
test
sub
in
dec
adc
pop
jno
fs
jae
cmp
leave
mov
jmp
lgs
add
xor
push
arpl
cmp
addl
sub
xor
jbe
add
xchg
or
jmp
jno
roll
out
jecxz
jnp
inc
mov
ss
lret
int
xor
pusha
mov
sub
scas
lret
ljmp
inc
lret
in
xchg
jns
cmp
fmull
leave
int
cmp
in
scas
shr
imul
test
in
push
repnz
and
mov
imul
lea
xchg
cmp
fcomip
xor
in
call
ret
fwait
jne
xchg
mov
xchg
mov
inc
dec
jne
stos
inc
imul
je
ret
jnp
idivl
xchg
popa
dec
pop
cmc
jmp
jno
scas
in
fsubrp
mov
adc
cltd
or
lahf
fsubrl
leave
xchg
xchg
mov
stos
rclb
iret
dec
shll
xchg
loope
xchg
cmp
mov
fists
icebp
pusha
xor
add
jecxz
fisttpll
rcll
pop
pop
subb
lods
push
je
stos
mov
adc
imul
sub
leave
dec
nop
inc
out
enter
popa
dec
gs
dec
sub
test
push
popf
cmp
and
pop
mov
mov
push
xor
cmp
mov
lahf
out
movsl
ret
cltd
mov
or
sahf
rolb
and
outsb
iret
aaa
test
cmp
push
inc
int
add
jb
push
and
adc
das
xchg
sbb
fdivs
or
iret
xchg
push
lock
loope
addl
sbb
test
mov
xor
push
mov
and
pop
sub
jmp
fnstcw
not
dec
pop
jb
xchg
out
repnz
and
cltd
sti
cltd
enter
mov
sub
fnstsw
js
lahf
into
rolb
sub
mov
push
lock
popl
cmp
or
incl
add
xlat
je
popa
jb
add
xchg
out
in
mov
xlat
inc
and
mov
sbb
inc
iret
rol
pushf
sbb
ret
push
aam
push
mov
xorl
jg
and
test
gs
xchg
arpl
lcall
pop
jmp
pop
and
in
jnp
int
jmp
add
mov
cltd
push
notb
in
in
inc
pusha
stos
lods
ret
cmp
xchg
scas
mov
cs
lea
jmp
test
pop
movsb
imul
and
lds
mov
sub
out
jns
in
imul
or
ljmp
jae
inc
daa
adc
inc
xor
iret
mov
jmp
inc
lret
leave
insl
mov
push
pop
mov
sti
pop
std
scas
fwait
xchg
mov
lahf
add
xchg
insl
adc
popf
sahf
pusha
sahf
push
stc
xor
es
lock
fisubs
ret
jmp
jae
push
gs
fwait
or
jae
lret
mov
xchg
aas
inc
in
or
cwtl
cs
out
cmp
xchg
test
push
lahf
mov
jmp
fistpl
roll
and
movsl
lea
lret
daa
pop
aad
out
mov
call
add
sub
xlat
aad
pop
lods
xor
lods
pushf
lock
rcl
cltd
loope
lds
cmp
and
rorl
inc
iret
out
jg
gs
repnz
aad
into
jg
cmp
jbe
jg
in
test
leave
sbb
xor
stos
fldcw
push
cmp
lret
mov
imull
insl
sbb
in
ds
sub
popf
and
sbb
sarb
sub
pop
enter
imul
stos
push
fldl
popf
cs
xor
lcall
jmp
imul
xchg
fstpt
addl
mov
cmp
and
and
sbb
mov
in
leave
or
push
add
pushf
pop
scas
movsl
cmp
scas
mov
fdivrs
sub
pop
and
cmpsl
aad
mov
jbe
stos
xchg
aas
imul
and
lcall
add
inc
pop
xchg
ret
mov
out
xchg
leave
leave
aaa
in
stc
and
movsl
iret
xchg
decb
jne
cs
adc
lds
adc
push
sub
dec
int
or
sub
lret
jle
test
es
shrl
mov
pop
xchg
add
push
jmp
ja
adcb
scas
cmp
sarl
aaa
out
ret
xchg
jmp
lods
lds
cmpsl
add
cltd
cmp
es
and
popa
ret
push
mov
mov
and
stc
roll
in
es
inc
xchg
adc
xchg
mov
movsl
test
popf
pop
mov
mov
sbb
mov
es
push
pop
call
arpl
pop
or
or
shrd
push
jmp
mov
loop
and
lods
mov
shll
push
jmp
pop
xor
mov
dec
cmc
out
in
xchg
mov
xor
es
loope
jb
rcrb
out
pop
mov
cmp
adcl
and
scas
stc
lret
test
lahf
mov
je
xchg
cmp
fs
dec
imul
fldenv
gs
dec
jecxz
mov
jecxz
and
inc
sub
test
andl
fwait
cs
cmp
out
sbb
inc
ret
push
out
orl
test
inc
repnz
scas
push
sub
into
pop
jmp
aaa
cmpsb
pop
roll
mov
lahf
mov
add
inc
sub
fldlg2
hlt
and
mov
mov
dec
dec
xchg
int
jmp
inc
pop
shll
sti
popf
mov
inc
inc
jp
lods
andb
xchg
push
dec
leave
cltd
stc
int3
inc
cltd
imul
stos
iret
jmp
add
push
sub
int
fistpll
sarb
or
xchg
ror
sub
fdivrs
cmpsl
test
inc
xor
lods
iret
and
loope
pop
jno
loopne
jns
inc
mov
fsubrs
popf
subl
rcrl
not
xor
xor
dec
push
xorb
mov
aad
call
cld
mov
mov
in
cmpsl
fisttps
mov
in
sub
inc
cltd
lods
pop
test
xor
jmp
loope
leave
push
cmp
xor
and
jmp
sub
dec
push
in
and
dec
aad
mov
lahf
sbb
dec
pop
movsb
add
aad
int3
in
repnz
popf
lods
fldl2e
loopne
and
stc
xlat
aam
inc
sub
leave
jne
stc
inc
jmp
cmp
inc
push
xchg
scas
pop
mov
xchg
cmp
jno
jae
mov
stc
mov
push
insl
xchg
ja
mov
leave
cmp
aad
shrl
and
test
mov
sub
lret
ret
sar
aad
mov
cmp
fstl
pop
out
mov
hlt
xor
lods
dec
dec
push
insb
pop
and
cltd
ss
mov
stc
xchg
aas
sub
and
sub
das
mov
fwait
pop
cs
sar
subb
xchg
scas
pop
test
xor
cmp
push
imul
push
in
mov
fwait
lcall
test
sub
push
jne
pop
fxch
ret
jno
push
xchg
jp
inc
pop
xchg
das
jmp
jmp
jg
pop
pusha
cmpsl
mov
stc
or
cmp
dec
aas
int3
int
sub
jmp
clc
idiv
jmp
push
jecxz
pop
lret
cmc
rcll
mov
and
pop
pushl
xchg
push
mov
mov
adc
jmp
mov
and
in
cltd
orb
cmc
sub
shll
out
and
popf
mov
arpl
js
push
mov
ret
jecxz
cmp
inc
out
inc
sub
out
cwtl
out
lret
popa
pop
aad
popa
into
dec
in
push
inc
frstpm(287
stos
lahf
jle
and
outsb
add
inc
insl
sub
imul
scas
xchg
test
push
cltd
test
popa
cmp
inc
int
adc
add
stc
dec
mov
sbb
sbb
cmp
test
in
lds
sbb
cs
add
jp
add
adc
nop
popa
push
sahf
sar
stos
jb
sarl
cltd
inc
shrl
push
push
mov
lahf
stc
ret
pop
frndint
dec
pop
lea
sbb
jno
iret
xor
and
cmp
popa
push
mov
inc
mov
mov
push
shlb
or
and
insl
fcoml
jns
mov
mov
fwait
cmp
or
lock
xchg
and
rclb
adc
xchg
jae
fdivs
addr16
cmpsl
xchg
xchg
dec
adc
lahf
fs
sahf
cwtl
cli
cmpsl
pop
cmp
movsl
add
xchg
adcl
leave
dec
xor
out
subb
fisttpl
push
mov
xchg
xchg
bound
adc
fcmovu
cs
adc
and
dec
adc
or
mov
cwtl
adc
popa
jmp
cs
sbbl
cmp
jbe
xor
scas
inc
inc
xor
seta
in
cmp
pop
vhaddps
imul
adc
adc
imul
sarl
arpl
in
adc
cltd
mov
pop
in
lds
in
mov
movsl
push
or
orl
loope
add
pop
into
rcrl
test
and
les
sub
test
jno
nop
push
and
and
dec
cmpsl
out
xchg
test
sbb
jg
scas
pop
icebp
cmp
push
inc
inc
mov
xchg
loope
add
cmpsl
xor
xchg
sbb
xchg
lret
rcr
xchg
add
iret
ss
pop
scas
test
lret
jmp
fisttps
fldcw
lret
fstpl
sub
add
pop
sahf
pop
lds
pop
cmpsl
clc
add
popf
pop
pop
arpl
xchg
popa
mov
insl
int
mov
add
fldenv
lret
mov
aad
and
or
in
xchg
jl
lcall
out
mov
add
mov
and
mov
test
sub
aaa
push
frstor
fildll
ja
mov
jg
stc
and
iret
push
nop
sub
cltd
aad
xchg
imul
xor
sub
fldcw
sbbl
scas
inc
cmpsb
imul
mov
push
popf
pop
mov
imul
aas
adc
subl
cmp
out
imul
xor
imul
clc
cmp
cmp
in
inc
imul
fcomps
jmp
popa
mov
jb
adc
outsb
cmpsl
add
ja
shll
scas
ficompl
daa
gs
push
in
stc
mov
cmp
aad
cltd
add
mov
imul
movsl
jae
adc
cs
addl
mov
lods
mov
inc
iret
jecxz
push
or
out
lods
aad
imul
and
lret
fimuls
test
and
jmp
lds
cs
dec
jecxz
mov
xchg
cmp
and
mov
jmp
lret
sub
scas
stc
cmpsb
pop
icebp
aaa
jne
sbb
dec
fwait
inc
shl
jg
and
hlt
popf
stos
movsb
imul
leave
adc
xor
pop
mov
fwait
sub
nop
mov
jecxz,pn
rcrl
add
xchg
jne
fldcw
sub
push
mov
leave
repz
push
xor
mov
in
sarb
sbb
adc
xlat
imul
cmp
cmp
leave
iret
push
and
popf
leave
insl
and
sbb
mov
int
movsl
fcmovnu
push
mov
cmp
jo
subl
pop
popf
xchg
popf
out
xlat
sub
and
xor
add
rcll
and
stc
jnp
pusha
pop
orl
test
pop
stc
lds
sbb
mov
push
add
das
into
fcomps
jmp
stc
mov
sahf
adc
push
cmc
out
or
push
out
mov
inc
in
sub
sbb
jbe
dec
push
in
cmp
fmulp
push
jne
xchg
mov
jb
push
pushf
adc
push
add
rcl
ret
sbb
stos
jmp
xor
pop
lods
daa
lret
imul
fildll
mov
xlat
in
jb
push
lea
jecxz
out
sub
call
or
lea
out
loop
jo
ret
fldt
pop
xchg
fmul
dec
testl
cmc
sbb
mov
xchg
and
sub
push
insb
std
lods
cmc
dec
stc
out
push
mov
ss
mov
orl
jle
dec
inc
insl
lds
fisttpll
xchg
enter
jle
xchg
xchg
cmp
mov
mov
pop
cmpsb
jmp
clc
and
lret
push
push
iret
sbb
mov
or
mov
pushl
adc
jmp
in
adc
jecxz
xchg
loope
xor
sbb
push
out
cmp
xchg
xlat
adc
or
push
js
lods
sbb
dec
jmp
or
into
mov
and
fistps
es
mov
loopne
scas
push
sub
in
dec
int
inc
cwtl
push
push
mov
cmpsl
js
xor
in
rcrl
xor
aad
aam
lods
xchg
push
lea
xchg
mov
scas
dec
movsl
lock
and
es
fistl
cmc
negl
cmp
pop
lea
xor
and
test
mov
and
sahf
iret
and
ja
lock
popf
orl
cmp
in
xchg
mov
pop
cmpsl
das
mov
int
lods
xchg
cmpsl
cs
iret
ret
push
xchg
test
sub
aaa
stc
in
leave
sub
jmp
and
ffreep
xchg
lds
mov
stos
xor
pop
in
js
loope
mov
or
shl
in
sub
add
rol
jmp
mov
cmpsl
xchg
xor
xor
pop
orl
inc
fldenv
xor
mov
dec
mov
jne
subl
fldl
jecxz
sub
adc
adc
or
int
mov
jbe
pop
fs
xchg
enter
and
pushf
je
inc
mov
cmpsl
in
push
xchg
arpl
sub
fcmovne
lods
cli
jmp
outsl
xorl
pop
fnsave
jle
iret
cltd
sub
pop
or
push
aam
add
outsb
xchg
stos
sub
ficomps
inc
mov
repnz
call
in
lea
mov
xorb
mov
mov
cmpsl
orl
pop
fwait
movsl
shrl
jmp
in
cltd
and
cmp
mov
sahf
mov
es
cmp
andb
cmp
fstpt
push
int
aaa
sbb
sub
stos
mov
ffree
std
jge
data16
add
std
in
filds
cld
sbbb
lds
in
or
and
jae
sub
sahf
jmp
or
pop
scas
xchg
mov
test
sbb
push
imul
scas
ret
push
pop
fbld
lahf
cmp
into
int
mov
std
cs
popf
fcomip
js
in
xchg
xor
out
cld
es
pop
and
aad
mov
sub
cmp
xchg
inc
xor
call
test
mov
mov
fsubl
cmpb
jmp
xor
jle
insl
movl
fisubl
sub
cmpl
push
or
mov
fsubr
fcompl
je
push
sbb
lods
xchg
rorl
stc
notb
cltd
sub
stos
mov
mov
ucomiss
sub
cmpsl
mov
xor
jne
lret
ja
test
mov
xor
lahf
mov
scas
mov
test
fsub
push
mov
jmp
lahf
cmp
xlat
mov
outsb
test
iret
sub
imul
popf
sbb
leave
pop
mov
cltd
lret
dec
pop
call
int
leave
daa
sub
lds
iret
aaa
pusha
jmp
mov
mov
js
lret
test
ljmp
ror
dec
dec
inc
loop
int3
inc
cmpw
mov
fld
cs
sbbb
or
pop
pop
or
addb
xchg
iret
ffree
xor
les
aad
sbb
fildll
cmp
jbe
jbe
in
out
popf
lds
fs
lods
sbb
lock
inc
pop
cmp
std
lcall
jbe
mov
mov
aad
push
cmp
pop
dec
xchg
std
iret
lahf
and
iret
in
and
cltd
ds
sbb
mov
sti
roll
stos
sbb
daa
mov
movsl
push
sub
loope
add
in
xchg
out
mov
lahf
loopne
loop
aad
stos
push
shl
seta
iret
les
inc
mov
add
cmp
mov
and
fstl
or
orl
or
gs
popf
xchg
subb
les
xchg
test
mov
mov
int
sub
xor
imul
xchg
mov
push
rcrl
loope
popf
daa
push
fwait
out
mov
jmp
adc
cvttps2pi
cmp
xlat
mov
pop
and
mov
cli
shll
enter
mov
mov
mov
push
ret
jecxz
popf
push
fisttpll
aad
xor
xlat
sub
int3
adc
mov
and
js
popf
ret
jmp
add
xchg
xchg
xchg
jmp
or
cs
xchg
fwait
imul
movsb
xchg
adc
sbb
ja
jmp
push
lods
sbb
shl
add
sub
adcb
test
or
stos
std
repnz
fldenv
xchg
and
out
and
leave
sbb
aad
rcrl
mov
jmp
repz
add
cmpsl
stc
rcl
test
jmp
xchg
lea
popa
movl
push
in
xchg
cltd
jne
fists
xor
cs
sub
ret
adc
fistpl
popf
sbb
in
push
push
fildl
add
adc
fstpl
adc
sub
loopne
cmp
in
cmpsl
and
imul
addps
push
and
test
popf
into
sbb
cmp
lods
aas
sar
mov
mov
fsts
adc
scas
sti
leave
dec
rorb
stc
fstp
dec
fwait
xchg
and
out
push
lret
fisttps
xlat
mov
loope
fisttpl
add
lret
int
mov
mov
cmp
and
aam
in
nop
inc
cmp
and
stos
cmc
jmp
aad
push
nop
xchg
sub
cmp
mov
xchg
sarb
scas
sbb
sbb
adc
cs
aad
fcmovbe
or
and
adc
setg
push
pop
sbb
stos
jmp
out
sbb
cmp
fwait
mov
adc
lods
xchg
jbe
test
imul
mov
pop
xor
ljmp
fldl
stc
mov
mov
out
orl
jb
lods
lea
mov
xor
jecxz
popa
fcmovne
stc
mov
sub
xchg
sar
mov
pop
pop
test
hlt
rcrl
fsubl
fistpl
xchg
and
dec
fisubrs
and
dec
ja
inc
jg
xchg
aas
int3
rcrb
inc
and
mov
jmp
lea
pop
adc
movsl
rorl
jmp
mov
imul
xor
subb
mov
sub
cltd
fucomip
loope
xlat
cmp
ret
loope
test
in
divb
test
lods
leave
pushf
xchg
push
fldt
push
jae
dec
jmp
mov
jno
outsb
cmc
lods
aaa
adc
xchg
mov
push
cmp
sti
fstpt
lea
lcall
mov
mov
xchg
test
popf
sub
pop
inc
stos
jmp
movsl
sub
cmp
es
jne
jmp
fabs
inc
leave
icebp
mov
cmp
lcall
out
cs
sub
push
cwtl
jl
lods
sub
push
subl
loope
xor
fwait
fwait
cmp
in
lock
loope
pop
in
arpl
xchg
mov
jecxz
lret
xchg
sbb
cmp
jmp
icebp
addb
push
shll
popa
jbe,pn
cmp
mov
and
pop
cld
test
inc
push
inc
mov
cmp
popf
mov
fstl
push
xchg
fstpl
xchg
loope
ret
mov
test
mov
cmp
cwtl
addb
cmp
addb
sub
cmp
sbb
lahf
jge
pop
into
sahf
insl
or
rcrl
mov
iret
xchg
lea
mov
arpl
mov
test
lcall
int
push
mov
shll
fidivrs
lods
call
pop
sub
mov
jbe
out
mov
mov
mov
sub
shll
ja
pop
or
ja
xchg
leave
sub
mov
icebp
popf
jno
push
clc
inc
mov
icebp
je
lods
ret
fnstcw
es
fistps
or
stos
dec
aas
idivb
push
fstl
adcb
sbb
mov
sub
stos
fwait
mov
rcll
mov
push
lods
frstor
bound
stc
sub
fcom
pop
push
or
test
inc
fldcw
fsubrs
sbb
clc
mov
in
loopne
movl
mov
xchg
cmp
cmp
push
mov
cwtl
scas
and
mov
cltd
lock
and
imul
sbb
jne
cltd
mov
mov
aaa
jmp
xor
loope
and
fildl
cs
in
sahf
call
icebp
aas
cmpsw
stc
or
mov
inc
lods
aam
fisttps
pop
or
leave
loope
xchg
imul
scas
push
pop
cmp
jne
cmp
xchg
pop
sti
in
in
xchg
jae
in
fwait
test
adc
mov
and
ret
lret
aad
xchg
in
clc
cs
ror
jmp
test
jp
pop
sbb
mov
pop
fisttpll
fst
out
in
lret
fisubs
popf
test
xchg
insb
cs
push
pop
in
daa
and
stc
mov
mov
xchg
lret
push
rorl
mov
dec
mov
fwait
pop
pop
inc
sub
fwait
mov
mov
hlt
aam
push
adc
lods
xchg
rcrl
lret
lahf
jl
clc
add
push
mov
jmp
imul
fst
int3
cmc
lahf
mov
test
xor
xor
stc
sub
arpl
adc
push
rcr
pop
rcl
lods
daa
dec
mov
imul
out
dec
pop
adc
lret
rclb
sub
in
pop
sub
xchg
lods
cmpsl
stc
fbld
jne
inc
aad
loope
scas
inc
dec
out
cmc
fimull
xor
test
leave
in
mov
dec
cmp
mov
out
cltd
loope
mov
xor
ljmp
fisttpll
mov
xor
leave
test
mov
mov
test
iret
pop
and
pop
and
roll
and
inc
out
lods
fcomps
mov
lock
jmp
cmp
and
xor
clc
subl
xchg
dec
xchg
test
fildll
fwait
sub
rcll
cmp
lret
ret
lahf
cwtl
fistl
outsl
mov
inc
cmpsl
cltd
jp
in
fchs
inc
sbb
and
leave
mov
ret
mov
xchg
in
mov
xor
leave
es
movl
inc
jae
pop
xlat
sbbb
test
or
push
lahf
pop
mov
fsubrs
cmp
out
jo
loop
mov
mov
icebp
mov
sub
arpl
xor
and
adc
je
leave
xlat
lahf
rcrb
out
jb
rolb
mov
movsl
and
xchg
xchg
jle
mov
jae
loopne
inc
lcall
fldl
mov
push
and
jmp
dec
mov
and
lods
lea
xor
mov
in
movsb
std
push
jbe
fwait
xor
dec
xorl
cltd
stos
aas
push
cmp
test
popf
std
int
jge
pop
shll
xchg
cmp
jmp
xchg
or
lret
flds
xchg
xchg
dec
dec
mov
or
mov
push
cmpb
leave
xchg
mov
add
xor
clc
jmp
xchg
jb
sbb
xor
mov
pop
pop
push
test
in
fcmovu
in
cmpsl
imul
add
mov
jmp
xor
mov
lods
lea
stos
iret
sub
imul
adc
mov
sbb
and
popa
push
adc
mov
std
cmp
cmp
callw
sub
aad
dec
mov
xor
jae
ss
aam
imul
and
xchg
ss
cmp
fcmovnu
lods
jmp
scas
mov
popf
sbbl
leave
sbb
adc
xchg
stos
push
nop
jns
sbb
in
pop
popf
ror
aad
cwtl
dec
sbbb
ret
push
push
cmpl
cmpsl
fnstenv
leave
aad
adc
mov
mov
jne
cmpl
pushf
or
shr
sbb
leave
jecxz
pop
shrl
lds
jl
rcpps
stc
adc
adc
jae
mov
loope
xchg
or
rolb
std
shll
stc
scas
cltd
adc
lea
sub
xchg
pop
fwait
xor
popa
ja
sub
xor
popf
aas
std
popa
iret
pusha
mov
mov
arpl
popf
ja
dec
xchg
clc
adc
push
aad
xchg
iret
daa
cmp
lods
push
call
and
rorl
and
pop
cs
lret
mov
popf
xor
dec
addl
cmp
cltd
test
stc
inc
cmp
dec
jne
mov
cmp
test
cltd
test
xchg
lock
out
dec
jge
pusha
rclb
jne
xchg
in
cs
int
sbb
add
adc
xchg
add
mov
lds
mov
lahf
stos
sub
in
loope
and
inc
out
dec
stc
mov
lcall
and
lret
aaa
cmpsl
cs
cmp
call
xlat
jne
es
pop
in
jecxz
aad
cwtl
stc
fcompl
cmpsb
lods
in
jnp
out
xchg
or
and
mov
movsl
ret
pop
xchg
or
cmpsl
pushf
mov
out
fldt
sub
sub
add
xlat
es
sub
insb
cs
movsl
sub
lds
stos
aad
sub
fcom
in
shll
out
popa
js
outsl
imul
fstpl
bound
cmpsl
test
xchg
dec
cmp
jp
mov
sub
add
fsubl
lret
div
nop
mov
lods
jb
and
es
aad
mov
inc
or
push
pop
or
insb
xchg
fwait
mov
fs
clc
in
jae
cltd
sbbl
shll
push
pop
aaa
mov
out
add
lret
and
cs
lods
rcrl
or
cmp
pop
xchg
test
insl
outsb
mov
pop
aam
sbb
loope
iret
out
cmpl
jo
pop
cltd
mov
adc
rcr
jg
cmp
mov
adc
imul
cli
lcall
mov
jge,pn
aas
dec
popa
jecxz
cld
popa
in
pusha
shrl
xchg
mov
cmp
sbb
imul
fstps
faddl
loope
fsubrl
or
fwait
jmp
adc
leave
popf
in
std
popf
popa
jge
xchg
les
and
adc
push
call
jnp
aad
and
mov
mov
lods
in
and
xchg
xor
sbb
or
test
adc
rcl
sarl
jb
jge
rorb
mov
xchg
mov
int3
orl
ret
and
xchg
loopne
push
jmp
sbb
xor
adc
int
xor
icebp
popf
mov
cli
cmp
mov
int3
jns
out
sub
push
sbb
mov
push
xchg
out
prefetch
test
mov
outsl
leave
push
cmpsl
inc
mov
sub
adcl
xor
lcall
push
push
test
push
shl
in
insl
test
wrmsr
and
popf
mov
in
lahf
fsubs
les
dec
enter
fldt
cmp
cmp
sub
push
xlat
test
push
mov
loope
shll
xchg
jecxz
mov
xlat
push
jecxz
test
decl
loope
int
fwait
jb
repz
in
imull
and
add
jb
test
in
pop
dec
push
push
sbb
pop
mov
pushl
adc
sbb
lods
les
cmpsl
popf
imul
lret
popf
pusha
loopne
and
xchg
jmp
mov
outsl
pop
push
popf
xchg
cs
mov
dec
andb
mov
jle
out
popf
jo
mov
int
add
in
fists
ljmp
imul
mov
leave
ror
in
xchg
lea
enter
mov
jmp
aaa
ss
stc
out
push
pop
or
or
jmp
mov
es
lret
sub
loopne
and
push
int3
andl
or
ror
iret
dec
orl
fsubrl
scas
test
mov
or
fcmovnu
sub
xor
aad
cmp
mov
pop
popf
lds
sub
femms
or
in
in
fbstp
add
lea
xlat
or
mov
mov
fwait
pop
popa
or
inc
scas
push
std
xor
int3
xchg
leave
mov
in
movsl
cmp
imul
sarl
xor
jae
inc
pop
aad
xchg
js
in
out
lahf
out
cwtl
jns
jl
mov
lods
into
insl
jecxz
fiaddl
pop
mov
xchg
sub
fistps
out
nop
sbbl
xor
aad
lds
xor
shr
mov
lret
popf
dec
fbld
push
cld
cmpl
inc
fwait
enter
lret
out
ja
insb
mov
add
rolb
out
movsl
scas
out
cwtl
add
mov
rorl
sub
out
push
jecxz
pop
fcomp
ds
xchg
dec
cmp
sbb
dec
xchg
and
cmp
dec
adc
mov
adc
adc
pop
push
loope
scas
out
mov
push
loop
sub
inc
jmp
xor
mov
adc
jecxz
xchg
xchg
out
sbb
push
xlat
scas
push
iret
pop
rolb
inc
stc
in
std
popf
subb
aam
cmp
mov
sbb
and
xorb
lcall
adc
add
cltd
in
sarl
adc
stos
xchg
popl
iret
sahf
mov
adc
mov
lds
or
mov
or
addb
pop
push
sub
adc
icebp
aad
adcb
loopne
popf
fucom
fnstenv
dec
push
repnz
mov
and
xchg
or
inc
mov
jmp
mov
sbb
out
add
frstor
jmp
andb
xchg
mov
adc
or
es
inc
test
pop
add
xchg
adc
testb
mov
push
repz
add
loop
shl
scas
mov
jne
ret
cld
int3
or
lods
fisttps
and
iret
cmp
cmpsb
popf
sbb
jnp
mov
mov
stc
repnz
push
jb
mov
xchg
movsl
jecxz
cmp
roll
xchg
test
and
dec
ret
push
pop
imul
push
nop
seto
xor
ja
mov
ret
or
xchg
xor
fists
or
lods
push
lock
sub
cmpsl
sbb
loopne
mov
push
xor
jmp
xchg
rcrl
imul
mov
push
cmpsl
ret
ljmp
lea
xchg
imul
popf
push
ja
cli
pop
mov
jmp
stc
lods
out
dec
mov
inc
test
push
movsl
pop
adcl
ret
push
int
popa
sub
and
clc
aad
es
jo
mov
lsl
sub
leave
iret
fwait
cmc
mov
stc
fucom
fucomi
mov
adc
push
sub
aad
jecxz
hlt
mov
mov
mov
pextrw
roll
shlb
jecxz
stos
pop
in
or
call
lods
fldcw
mov
pusha
and
aas
add
test
cmp
scas
cs
and
inc
out
into
push
filds
js
pop
add
movsl
xor
popf
cmp
pop
xlat
movl
leave
cltd
dec
sub
fildl
pop
sbb
pusha
lock
sub
mov
lods
push
sbb
push
cmpsb
into
popa
lods
mov
and
mov
push
test
je
stos
pop
lcall
cmp
es
in
mov
mov
lea
andb
jle
ret
xchg
push
xchg
lret
fwait
iret
cmp
sarb
jo
loop
in
dec
cmp
test
mov
sbb
push
lds
call
xchg
test
imul
leave
clc
fwait
sbb
scas
int
xor
aaa
pop
jecxz
rcll
adc
sub
int
fisttpl
dec
mov
push
insb
xchg
lcall
dec
lahf
addl
jl
leave
sub
cmp
cmp
xorw
es
popf
mov
fwait
std
cltd
and
sub
daa
cmp
sub
out
mov
and
test
jg
adc
pushw
test
or
mov
mov
jle
lea
cmc
jl
icebp
shrl
in
sti
iret
addb
mov
or
mov
sbbb
leave
test
cmpsl
fcmovnu
mov
xor
out
mov
out
xchg
adc
imulb
frstor
jae
sar
rcl
arpl
movsl
sub
mov
ret
mov
popa
lahf
es
int
sbb
sbb
xchg
fstl
mov
cltd
xchg
ljmp
add
push
or
mov
repz
cmp
adc
mov
add
mov
lea
ds
jae
sbb
push
scas
lret
push
xchg
sub
mov
in
adc
sub
inc
sub
cmp
test
pop
mov
sub
iret
jmp
sbb
sbb
and
push
cmp
xor
cwtl
cmp
rcl
xchg
push
clc
xchg
jecxz
std
in
in
xchg
dec
mov
xchg
in
or
cmpsl
push
les
inc
jb
jmp
push
mov
test
sub
pop
test
inc
iret
aam
das
stos
sar
jae
jg
lock
mov
aad
inc
loope
lock
jne
cmp
mov
imul
cmpsl
cltd
jb
xlat
xchg
push
xchg
mov
and
fstps
push
mov
lods
add
fmuls
stc
out
sub
xor
cmpb
lea
jb
jg
pop
mov
mov
fwait
jmp
xor
dec
pop
adc
push
or
pop
hlt
inc
ja
mov
adcb
cmpl
mov
dec
cltd
sahf
in
pushf
test
xchg
cmpl
push
jmp
cmc
cmc
ffree
jb
andl
call
or
sbb
les
popf
mov
iret
adc
mov
mov
lret
jl
aad
dec
dec
sub
cltd
add
mov
push
clc
ds
cmp
jmp
gs
shr
movsl
cmpb
test
mov
test
mov
mov
sub
in
cmp
popf
push
shll
fisubrl
addb
int
cmpsb
inc
scas
in
jge
push
dec
roll
nop
adc
fidivrs
inc
loope
js
leave
lahf
dec
lds
cltd
pushl
mov
cmpsb
add
sbbl
data16
sub
sub
popf
pop
jmp
lock
fstl
and
pop
bt
xchg
and
mov
test
ret
xchg
cmc
iret
fldt
stc
sbb
imul
cmp
popa
sub
push
and
in
js
push
loope
insl
pop
cld
mov
xor
push
mov
orb
aad
xchg
xor
movsb
pop
outsb
pop
xor
stc
xor
in
xchg
lods
lret
xor
lea
inc
adc
sbb
push
leave
fucomip
cmp
scas
das
cmc
sti
es
or
cs
jge
out
dec
cmp
hlt
and
imul
out
in
stos
stc
and
mov
xor
xchg
cld
add
cltd
mov
fstp
and
stos
push
out
mov
leave
sbb
mov
jle
xlat
pop
lea
fstpt
shrb
mov
mov
arpl
fbld
clc
lcall
cltd
lds
inc
loopne
aaa
xor
mov
xchg
push
mov
incl
out
movsl
cmp
rol
jmp
and
pop
pop
ja
mov
push
lods
mov
movsl
or
xlat
lds
and
pop
stc
pop
nop
pop
icebp
test
je
fldt
jmp
mov
mov
cmp
stc
shll
es
jb
fiaddl
rcl
stos
push
scas
and
push
add
jl
pusha
lds
movsl
mov
cltd
or
mov
leave
mov
movsl
call
in
and
adc
inc
cmp
cli
push
fs
inc
and
xchg
fnstcw
and
mov
adc
cmp
out
pop
sbb
jmp
jb
cmc
testb
flds
aaa
jp
roll
fcoml
mov
mov
sub
stc
popa
iret
jae
inc
sbb
xchg
lods
fsts
bound
xor
out
lret
dec
imul
sub
ror
jge
fstl
mov
imul
mov
iret
mov
mov
loope
jecxz
push
out
in
sti
mov
and
sub
and
mov
mov
mov
push
out
sbb
insb
sbb
daa
cmp
lock
iret
mov
pop
or
sub
pop
js
lds
cltd
cwtl
pop
pop
out
or
mov
out
stc
shll
rcrl
adc
scas
int
push
push
in
jp
cmp
fcmovnu
js
out
cs
xchg
lods
sahf
roll
mov
xchg
and
imul
mov
es
cmp
je
aad
fnsave
scas
sub
adc
shlb
es
mov
xchg
orl
sbb
lods
into
shlb
loope
int
inc
in
sub
cltd
mov
addb
dec
or
jmp
fldenv
sub
dec
lahf
roll
and
lahf
xchg
pop
test
sarb
shll
mov
push
out
subb
or
decl
mov
clc
cmp
add
frstor
arpl
xchg
iret
dec
sub
and
inc
sbb
int
roll
xchg
out
xchg
jecxz
movsl
cmp
out
nop
outsb
fstpl
testb
ret
dec
call
fsubs
in
sbb
shrl
lahf
cmpsl
stos
jmp
cmp
xchg
leave
cmp
shr
sbb
and
and
add
jge
clc
add
stc
pop
pop
pop
scas
mov
jmp
adc
or
xchg
loop
add
push
lock
out
and
in
sbb
js
jecxz
lea
popa
and
icebp
cli
sar
imul
mov
or
test
mov
lahf
jge
cmp
mov
and
push
or
xchg
stc
scas
and
cld
sbb
cmp
cmpsl
or
test
push
push
pop
shlb
data16
push
xchg
dec
mov
sub
xor
inc
sub
jmp
mov
add
pop
adc
rorl
push
xchg
or
mov
scas
adc
pop
and
xor
test
push
repnz
imul
pop
inc
add
cmp
popf
jg
es
sub
pop
sub
xchg
int
or
int
push
jne
cmpl
clc
or
int3
cmp
sbb
fst
jb
mov
lahf
nop
nop
imul
lcall
dec
jg
and
int
jl
sub
push
ror
or
mov
sub
fst
shrl
js
ret
sub
pop
mov
fwait
pop
add
sub
mov
popf
or
scas
cmp
in
sarb
movsl
fwait
xlat
and
std
sub
xor
out
or
lods
aad
push
das
add
insb
push
sbb
popf
adc
ror
jno
scas
daa
test
lods
rorl
xchg
bound
lahf
sbb
mov
mov
mov
addl
ret
jecxz
es
add
and
enter
jo
pop
fscale
push
repz
fsubrp
push
jb
decl
je
and
sahf
js
std
mov
shll
push
lret
pop
push
mov
mov
add
cwtl
subb
xchg
and
xchg
mov
dec
lods
scas
cmp
lcall
insb
roll
fs
fiaddl
std
in
mov
shll
rol
jb
jmp
mov
pop
dec
pop
lret
sub
stc
js
inc
ret
cmp
das
and
sub
xor
clc
xchg
mov
pop
mov
es
jb
xor
lods
xorb
xor
xorl
test
sahf
mov
out
cltd
pop
xor
xor
sub
or
jl
cltd
mov
insb
jns
rorl
es
int3
sub
push
arpl
xchg
mov
repnz
mov
pop
mov
fsubrs
lahf
arpl
lret
aad
std
xchg
xchg
push
test
int
cmpl
stc
lea
mov
shrl
in
mov
movsb
cmp
loope
mov
cmp
imul
lret
lahf
sub
xor
fbstp
xchg
aaa
fcmovnu
mov
lret
daa
xchg
xchg
adc
clc
cmp
loopne
test
mov
in
out
sub
sub
or
popf
lret
cmp
sub
lret
inc
ret
jge
aas
xchg
clc
out
adc
fadds
jnp
ret
sbb
lods
cmpsb
aaa
adc
ret
sub
fwait
xor
movsb
inc
scas
leave
add
jmp
xchg
stos
movsl
mov
mov
jne
ret
jbe
push
sub
fwait
xchg
mov
daa
inc
out
and
loope
fisttpl
fsubrl
push
xor
test
lea
roll
imul
movsl
mov
add
test
or
xchg
scas
int3
mov
push
jne
xor
mov
int
ret
cmp
cltd
push
adc
push
mov
and
orl
clc
hlt
cltd
movsl
js
stc
xor
xchg
cs
jecxz
mov
loop
shr
or
lock
int3
jno
xchg
mov
in
mov
outsb
push
push
push
insb
xor
inc
int3
arpl
test
inc
arpl
test
pop
fsubl
idivb
sbbb
out
xchg
lcall
bound
in
sub
stc
xor
xor
repz
sbb
in
call
ret
imul
inc
out
sbb
xor
or
subl
es
dec
lret
xlat
push
dec
rcrl
popf
sub
xchg
mov
shlb
adc
xchg
cmp
mov
dec
arpl
aas
pop
fistps
arpl
jecxz
lds
fwait
cmp
out
adc
mov
xor
test
orb
jge
fwait
loopne
cmpsl
xorl
pop
es
adc
add
int3
add
stos
test
lds
leave
xchg
adc
pop
test
aas
lret
pop
mov
loopne
xorb
ror
movsl
jo
in
xor
jbe
js
jmp
cs
cmc
shrl
mov
cltd
xchg
push
or
rcll
add
je
out
int
cmp
sub
xchg
xchg
mov
ss
inc
mov
and
cs
lret
imul
orl
or
xlat
xchg
and
sbb
jb
imulb
push
mov
or
data16
cmc
mov
mov
push
out
and
fcompl
fldcw
adc
mov
mov
mov
call
cltd
sub
adc
and
lahf
jecxz
cmp
ret
mov
fucomi
mov
xor
orl
rorl
popa
push
fadds
pop
or
inc
cltd
cmpsl
xor
xchg
push
lret
inc
push
into
push
lock
or
orl
fs
int
jmp
rcr
int
dec
mov
pop
cmpb
fbld
mov
mov
mov
mov
cmpb
cmp
sbb
xchg
shrl
mov
scas
mov
cmp
push
test
jb,pn
stc
sbb
ret
fcomp
dec
jp
xchg
iret
nop
inc
push
lea
mov
in
fs
loop
imul
gs
jl
out
fisttpl
xchg
and
jne
xlat
fldl
repnz
ds
sbb
jb
push
xor
xor
inc
das
std
lea
or
out
das
iret
mov
fwait
adc
decl
mov
shll
jae
dec
cli
adcb
in
jge
lea
xchg
aad
xor
imul
fucomp
mov
leave
stos
icebp
xchg
fdivs
lods
cmp
xlat
xchg
notb
add
xor
int
test
or
mov
frstor
sbb
push
je
xchg
add
and
fcmovnu
sahf
cmpsb
cmp
cmpsl
xor
insb
xor
enter
cmp
test
add
and
mov
xchg
iret
mov
cmp
repz
nop
test
je
xor
jg
rcll
mov
imul
jo
jmp
cmpsl
popf
ret
ret
fsubr
lds
add
mov
and
inc
in
xor
test
jne
fstl
loope
push
int3
sbb
fldenv
xchg
cmp
push
pop
sub
push
pop
mov
aad
popf
push
scas
xor
lock
lret
sahf
push
stos
xchg
jmp
mov
mov
jle
jp
gs
ret
lds
pop
inc
xchg
cmpb
pop
cmp
nop
mov
cmpsl
push
cld
and
push
scas
push
movsl
jge
mov
push
sbb
xor
mov
jmp
xor
xchg
popf
pusha
mov
pop
aad
and
ret
ret
sub
in
cmc
rolb
mov
data16
gs
mov
data16
cld
xorb
frstor
shl
sbb
or
test
xor
xchg
inc
pop
mov
xchg
daa
andl
fdivl
aas
out
cld
xorb
pop
dec
sbb
lahf
pop
lret
out
mov
movsl
cltd
lea
lock
jl
pop
mov
out
cmp
out
pop
subb
pusha
mov
data16
add
cmpsl
mov
shll
out
rol
mov
push
fimull
daa
cltd
mov
int3
lea
jmp
cmp
cs
xchg
inc
nop
ja
int3
addl
sub
jbe
jp
sub
mov
and
adcb
test
mov
sbb
xchg
jbe
int
negb
mov
push
sub
lods
enter
inc
or
fnstenv
data16
inc
inc
cld
roll
add
xchg
ds
dec
mov
mov
sbb
mov
cwtl
dec
push
mov
pop
imul
pop
pop
sti
mov
je
mov
jne
movsl
insb
es
ret
lods
gs
icebp
popf
cmpsb
fistps
lret
mov
jle
scas
sub
and
divb
xchg
cmpsl
cmpb
pusha
out
push
cmp
push
in
in
inc
dec
les
aaa
dec
and
xchg
adc
fistpll
pop
leave
dec
sub
aam
jl
insb
addl
orb
icebp
inc
cltd
xor
push
mov
and
fistpll
fidivs
adcb
sub
or
xor
xchg
mov
mov
pop
test
stc
loope
xchg
sub
or
fsts
mov
and
pop
fst
xchg
imul
subl
or
cltd
insb
mov
sub
fstps
sahf
shll
loop
in
cltd
ja
shl
cmp
mov
sub
sbb
push
fisttps
andb
rcrl
cmp
dec
xchg
aam
fstpl
in
xor
dec
cltd
cmpsl
lahf
fwait
xchg
mov
test
int
xlat
pusha
cvttps2pi
in
mov
test
xor
inc
and
imul
xchg
sbb
inc
cs
pusha
fldcw
cmpsl
jne
cmpsl
pop
daa
mov
popf
mov
xchg
loope
dec
sub
cwtl
fstps
or
int
jmp
xor
iret
adc
push
pop
js
jecxz
subl
sar
xchg
es
rcr
arpl
jg
mov
fsubl
mov
call
adc
lds
pop
rolb
mov
leave
ret
mov
enter
stc
test
xor
pop
fdivrs
leave
rcl
sub
scas
test
push
or
cltd
or
and
enter
clc
loop
cmp
mov
shrl
andl
rcl
lret
xchg
inc
addr16
fwait
xchg
decb
add
out
lahf
sbb
addr16
sarl
sbb
fucompp
sub
stos
test
lret
cmpl
cld
push
loopne
roll
push
adc
int
test
sbbl
xchg
sub
lds
sbbb
jecxz
ja
lods
subb
lret
rcrl
fimuls
dec
adc
testl
dec
incl
fwait
pop
daa
and
insb
xchg
std
xor
pop
jnp
jmp
ret
xor
sub
or
and
outsl
mov
cmpsb
fcom
sub
mov
movsl
mov
iret
jecxz
aad
out
jmp
in
inc
or
subl
pop
and
stos
hlt
inc
rcrb
shlw
lret
in
fstl
sub
icebp
mov
xchg
loopne
scas
or
cmp
negb
pop
fcoml
push
fisttpl
das
adc
enter
adc
mov
jae
dec
or
sti
or
xchg
stos
cmc
nop
in
shll
clc
dec
out
add
jne
jmp
int
pop
popa
mov
jae
outsb
or
inc
leave
mov
cltd
jecxz
jo
ljmp
sbb
jb
iret
or
aaa
mov
loope
movsl
jmp
rol
sbb
shrb
xchg
add
out
stos
jmp
in
inc
xor
add
aaa
es
fwait
shll
sub
ljmp
rcr
xor
test
dec
arpl
lea
shll
pop
mov
and
andb
dec
in
dec
popf
stos
int
mov
leave
aad
mov
fldt
btr
or
jb
sub
or
subb
roll
adc
sahf
push
cltd
inc
lods
xchg
in
imul
jle
popf
dec
daa
out
in
jne
xchg
add
jmp
test
mov
push
inc
clc
push
cs
sub
ret
jecxz
adc
test
repnz
sub
rolb
in
cmp
jecxz
mov
cltd
jmp
xchg
adc
aad
xor
jge
mov
or
mov
and
lret
loope
add
aad
fistl
pop
loope
fcomip
enter
and
cmp
iret
scas
adc
test
or
add
in
aaa
mov
xchg
fwait
xchg
sub
and
cmc
lahf
popf
test
ret
imul
rorl
lret
xor
inc
stos
mov
push
mov
add
imul
pop
subl
ljmp
stos
and
in
push
popl
pop
fbstp
ja
xlat
call
repnz
adcl
stos
nop
xorl
out
push
sahf
repz
pop
sbb
es
add
jecxz
and
adc
lret
stos
fwait
mov
mov
or
jmp
cmpsl
loope
and
mov
mov
pop
mov
int
loopne
arpl
add
fwait
rcr
sub
out
leave
dec
scas
ss
jno
sub
push
dec
mov
cmpsl
stc
adc
sub
cmp
mov
leave
push
push
aaa
mov
test
inc
stos
rol
adc
adc
cmp
out
leave
decl
cltd
lods
and
lea
dec
lods
int3
lahf
int
adc
xor
test
xor
jecxz
stos
adcb
add
cmp
roll
iret
cltd
insb
and
xchg
loope
sub
ficoms
pop
stc
and
mov
fwait
and
mov
enter
pop
jmp
xor
cmp
push
mov
dec
and
or
mov
cltd
lods
scas
fbstp
cmp
stc
or
shrl
sub
loopne
cmp
fninit
jae
pop
push
outsb
add
mov
popf
mov
push
push
iret
xchg
out
cmc
add
lds
lods
xchg
xor
jno
mov
in
push
scas
out
lds
xlat
mov
xchg
in
push
out
stos
xor
xchg
xchg
test
inc
jmp
jns
movsl
and
cs
lea
out
popf
outsb
test
inc
xor
pushf
xchg
fnstenv
cmp
cmpsl
movsl
pusha
push
ror
dec
mov
std
scas
andl
jge
mov
shrb
lret
push
mov
decl
test
or
aad
popl
sub
cs
cli
push
mov
es
hlt
aas
cmp
cmp
dec
xlat
out
fistpl
sbb
popa
insl
xchg
enter
inc
sahf
lret
cltd
mov
mov
xchg
sbb
lods
xchg
sub
xchg
lret
pop
arpl
sub
adcl
fmul
mov
xlat
push
fistl
in
int
rcr
adc
pop
aaa
sub
cmpsl
or
mov
xlat
fists
or
fnstenv
int
fisttpl
out
aam
stc
iret
in
mov
data16
inc
lds
adc
xchg
test
xor
mov
jmp
jg
fisubl
fdivrl
pop
mov
sub
jae
xor
mov
push
cmp
adc
pop
int
jne
xchg
rcll
and
pop
dec
sub
jae
xchg
fucomip
mov
mov
icebp
inc
and
lds
cs
lahf
push
in
push
and
or
ror
call
repnz
daa
and
jge
lods
aas
pop
leave
rcl
out
inc
lea
cmp
push
or
lahf
xchg
xchg
mov
or
cs
jne
xchg
icebp
test
and
stc
jno
jmp
cmpl
adc
icebp
xchg
push
push
inc
sub
iret
sahf
int
mov
call
shrl
test
jmp
ret
inc
mov
push
out
repnz
popf
pop
rclb
aad
pop
xlat
sbb
inc
imul
dec
dec
insl
popl
into
aam
popf
xchg
xchg
sub
scas
iret
aaa
das
int
es
cmp
jmp
fisttpl
adc
xchg
stc
rcrb
outsb
push
cli
aas
push
pop
xor
es
jae
out
sub
mov
adc
fildl
xchg
repnz
cltd
and
push
mov
int
out
test
push
pop
rorl
jmp
movsl
sub
add
xchg
es
pop
cs
xlat
stc
sub
repz
shll
pop
call
mov
popf
cmpsl
repnz
iret
pop
fwait
aad
xchg
sub
jnp
fists
cmpsl
ret
rcrl
fildll
jmp
nop
pop
pop
jmp
jne
sarl
pop
jne
nop
mov
add
nop
sub
dec
inc
xor
iret
iret
xor
inc
test
daa
cli
stc
xor
imul
popf
adc
mov
sbb
sub
mov
dec
mov
xchg
inc
roll
fwait
popf
cmp
mov
cmp
stc
or
xchg
sub
jmp
adc
add
ret
sub
fbld
test
or
lahf
or
out
popf
outsb
adcb
or
mov
dec
leave
sbb
mov
sub
mov
aad
frstor
push
xchg
cs
or
ret
pop
imul
in
sub
and
mov
mov
fstps
lock
xor
xor
xor
mov
popl
mov
leave
sbb
adc
sbb
std
mov
cmp
cmp
adc
insb
xor
pop
pop
mov
cmp
stos
xor
and
push
push
lcall
es
cmp
pop
test
adc
js
testw
es
scas
mov
jnp
inc
fnstsw
sbb
sub
xor
pop
cmpsl
roll
mov
leave
sahf
mov
out
jmp
inc
clc
subl
lods
lret
mov
int
subb
push
cmp
push
in
pop
subl
pop
repz
enter
lret
popf
dec
imul
push
inc
adc
sbb
sbbl
lds
mov
push
add
jno
insb
rcrl
mov
shld
fldcw
ret
aad
mov
jmp
int
mov
and
mov
mov
insl
mov
and
inc
popf
mov
jns
test
lock
cmpsb
std
fcompl
ror
clc
fstpt
fwait
lea
and
pop
mov
adc
arpl
aaa
sub
or
mov
xchg
aad
into
rcl
js
push
gs
leave
sbb
cs
dec
inc
and
scas
or
sbb
inc
insl
movsl
or
enter
inc
test
ljmp
rcl
pop
enter
sbb
jae
in
mov
xor
jne
decl
dec
pop
xchg
ret
andl
sbb
sub
lea
imul
test
in
push
ja
inc
jecxz
andb
rol
inc
mov
mov
ds
jo
or
sub
jecxz
mov
fsts
leave
popf
cs
popf
in
xchg
loope
lods
sbbl
cwtl
cmp
sub
outsb
and
test
xlat
jnp
mov
mov
and
cmp
scas
pop
xor
fidivl
dec
xchg
ret
cmp
xlat
add
stos
fwait
xchg
sub
scas
pop
movq
scas
rcll
jmp
xor
dec
cltd
insl
test
out
mov
cmpsl
xchg
cmpb
mov
insl
and
cs
iret
in
mov
sti
pop
aas
xchg
orb
incl
stos
iret
mov
or
xor
lods
cmp
popl
mov
mov
fisttpll
enter
loope
jne
xchg
jge
xor
stos
fwait
xchg
aas
into
xchg
imul
cltd
movsl
mov
inc
mov
xchg
mov
lds
fsub
jl
mov
stos
xchg
iret
cs
jne
mov
lret
aad
orl
imul
fucompp
adcl
mov
xor
sub
bound
cmpb
test
shrl
cmpsl
cld
js
scas
lahf
aad
iret
popf
lret
leave
xor
and
andb
inc
or
out
sahf
ljmp
pop
daa
xchg
mov
push
in
mov
mov
sub
mov
loope
xlat
frstor
mov
iret
mov
xchg
jnp
pushf
xor
sub
aam
sbb
leave
sub
imul
push
aam
test
gs
bound
fistps
es
and
inc
mov
mov
inc
mov
fwait
out
xchg
cmpsl
jne
pop
or
nop
fldcw
popf
cmp
mov
int
mov
cmpsl
sbb
popa
lods
cmp
jns
rorb
cmpb
sar
jge
cltd
push
pop
jae
in
mov
or
icebp
mov
cmp
adc
stc
or
adc
pop
popf
add
dec
and
in
fsubrs
or
lock
lods
adc
cmp
push
mov
test
mov
movsl
mov
xchg
test
sbb
cmpsl
mov
xchg
inc
jl
jae
inc
and
or
fwait
test
movsl
in
in
xchg
popf
loop
xchg
wrmsr
in
in
cmp
cmc
fisttps
rep
stc
in
cmp
mov
scas
movsl
cmp
stc
ss
dec
arpl
dec
mov
pop
popa
popa
ja
mov
xor
imul
movb
cmpsl
scas
pop
jne
ret
scas
mov
fistpl
test
adc
repnz
stos
mov
in
test
cmp
aas
daa
mov
je
jmp
loope
nop
cmpsb
test
rcrb
es
or
fnsave
fnstcw
xchg
iret
mov
lret
mov
lahf
and
out
sub
pushf
test
lahf
ret
mov
cs
fucomp
push
xchg
idivb
pop
ret
iret
push
arpl
imul
imul
aad
ja
jecxz
cltd
imul
sub
mov
daa
xchg
cmp
out
test
scas
sub
sub
jecxz
inc
lods
das
popf
mov
mov
mov
loope
mov
cmp
sbbb
xchg
add
adc
test
pop
mov
call
add
out
int
leave
or
ret
or
push
inc
pop
or
lahf
movsl
mov
add
test
es
xchg
rcrl
stc
xor
xor
arpl
mov
sub
adc
in
sub
sbb
leave
mov
leave
into
jecxz
dec
in
aad
addb
shr
jne
mov
lods
roll
iret
flds
pop
fistl
stos
mov
sbb
aad
divb
cltd
pop
mov
push
xchg
jmp
popf
pop
mov
sbb
pop
push
int
mov
lret
mov
lahf
mov
mov
pusha
pop
pop
rcrl
movsl
sub
xor
jno
sbb
sbb
xor
xchg
sbb
aad
pop
lea
xchg
pushf
nop
jns
in
jle
out
mov
fimull
xchg
mov
aad
scas
jecxz
je
aad
lods
std
in
imul
xor
jecxz
push
mov
xchg
andb
inc
and
fimuls
cmp
push
enter
imul
mov
dec
and
sub
movsb
sub
es
enter
dec
shll
mov
inc
aaa
iret
and
jmp
fildll
aad
mov
push
out
fcomp
lods
sub
jmp
jmp
xchg
ret
mov
xchg
in
xor
and
mov
mov
cmpsl
pop
mov
push
inc
xchg
xor
shl
popf
cltd
imul
push
subb
repnz
insb
pop
in
mov
adcl
cmp
test
push
sbb
sbb
lret
mov
xor
aad
sbb
cmp
jne
andl
mov
or
rcl
in
iret
pop
sub
out
ljmp
roll
out
xchg
mov
sub
sub
or
je
pop
movsl
aad
and
push
and
sub
xor
xchg
and
pop
push
mov
lret
cs
cmp
and
sub
popf
mov
in
out
movsl
int
mov
fwait
jecxz
out
cmc
xchg
xchg
pop
stc
gs
lods
movsb
mov
fldcw
xchg
jmp
sbb
out
cmp
data16
pop
sub
inc
leave
push
sbbl
addl
ljmp
shl
mov
xchg
int
mov
fadds
daa
roll
aad
mov
dec
bound
pop
xlat
inc
xchg
cmp
inc
mov
call
iret
int
xchg
dec
mov
add
push
out
repnz
fstps
jnp
lahf
fwait
mov
loope
cmp
mov
insl
lods
iret
add
add
int
mov
lcall
jl
jae
movsl
mov
imul
xchg
and
xchg
or
add
sbb
adc
out
test
cmp
or
xchg
cmp
mov
bound
leave
mov
lods
imul
pop
xchg
iret
jmp
mov
test
xor
in
inc
cmpsl
movsl
cmp
cmp
rcrl
cltd
into
lcall
ret
loopne
xor
jg
loope
add
inc
push
aas
and
mov
fwait
sub
std
lret
subb
add
mov
sub
fists
or
cmp
popa
shl
int
lods
xor
dec
adc
nop
dec
mov
fwait
movl
pop
sub
inc
sbb
lret
sub
cltd
imul
jmp
dec
inc
pop
mov
add
pop
int
push
test
mov
or
xchg
mov
iret
sbb
aad
sub
cmpsl
or
sub
push
jb
xchg
mov
mov
int3
push
lret
iret
mov
in
cwtl
fstpt
movsl
dec
mov
lahf
mov
adcl
roll
inc
cltd
sub
sub
aaa
push
insl
mov
push
push
jmp
ljmp
in
in
cs
push
sub
stc
or
rorl
push
dec
ja
sub
jecxz
jmp
popf
cltd
fisttpll
dec
adc
repnz
mov
and
xor
cmpsl
aad
jge
cmp
movsb
adc
jb
sbb
or
push
leave
mov
mov
arpl
xchg
jns
movsl
push
jecxz
mov
xchg
es
in
arpl
fists
test
push
int
pushf
popa
lret
aaa
dec
fcmovne
jmp
push
and
cmp
dec
sbb
loope
xchg
or
xorl
sub
test
jb
enter
ret
leave
jno
mov
sbb
ljmp
mov
dec
pop
or
test
jle
aam
jae
movsl
cmp
or
shrl
sub
push
xchg
or
out
cmpsl
mov
leave
inc
mov
fbstp
mov
shll
shrl
jmp
imull
ljmp
mov
js
test
jae
int
lods
mov
lret
xchg
xorl
test
shlb
sub
sub
sub
jecxz
sub
test
sbbb
xchg
out
jno
add
out
mov
fs
test
popf
fwait
or
xlat
mov
into
jecxz
cmpsl
imul
mov
cmp
imul
mov
cmp
adc
sarl
pop
xchg
fcmovne
sbb
orl
test
cltd
jecxz
mov
or
cld
js
mov
es
sahf
popf
scas
push
jle
in
int3
iret
insl
shlb
pop
add
in
lods
arpl
push
dec
out
push
adc
in
sbb
push
sub
lods
sub
leave
ds
movsl
fnstenv
push
xor
jmp
iret
sub
stc
stos
xchg
cmp
fldcw
rcr
dec
inc
iret
adcb
inc
sub
ss
addb
fistpll
sbb
sbb
out
mov
dec
ret
pop
mov
cmpsl
xchg
dec
fisubrl
enter
js
xlat
mov
int
or
inc
int
and
sbbl
push
sub
jns
jb
mov
imul
or
jne
xchg
stc
xchg
cmp
adc
jecxz
jl
mov
mov
cmc
cmpsl
iret
mov
mov
jae
fldl
jge
rcll
sbbl
in
scas
in
pushf
lret
mov
cmp
int
mov
mov
insb
xchg
fucomip
fs
dec
sub
push
mov
pop
fists
or
lret
ret
inc
sbb
cmpsl
sbb
ret
lea
rcrl
loope
lret
pop
or
test
les
fwait
or
stos
cmpb
js
push
mov
bound
test
fidivrs
ret
xchg
push
leave
add
cmp
inc
xlat
decl
dec
faddl
jecxz
lret
sar
sbb
fstps
ret
es
fidivs
jecxz
nop
push
jno
loopne
sbb
aad
in
and
pusha
xchg
fstl
imul
lods
loope
ss
int
pop
call
adc
fwait
jne
sub
leave
inc
xchg
in
in
ret
ljmp
pop
lret
fmul
out
in
testl
iret
adc
push
xor
fdivrs
push
scas
ret
mov
xchg
inc
mov
mov
inc
inc
mov
adc
mov
push
in
xor
jg
int
sub
fstps
sbb
pop
xor
cmpsb
roll
fstps
out
fdivs
std
rcl
in
push
pop
mov
pop
add
sub
add
push
xchg
and
in
les
js
cmp
jmp
loopne
pop
jmp
lahf
sahf
mov
sub
scas
nop
mov
push
mov
mov
xor
jmp
daa
mov
lea
in
or
xchg
inc
mov
xchg
cmp
rcrl
pop
shll
cmp
out
int3
les
sub
cmovp
cmpsl
xor
jmp
popa
pop
popa
je
rorl
cltd
loopne
or
xor
mov
sub
cmp
shr
int
jge
cltd
fistl
jnp
pop
jmp
mov
inc
fld
jmp
in
jb
aaa
lods
lret
sar
ss
lods
ret
add
adcb
lods
leave
out
std
das
push
cltd
clc
jmp
dec
pop
or
mov
mov
es
imul
in
ss
rclb
mov
jecxz
outsb
lahf
sub
add
movsl
xchg
in
pop
sbb
sbbl
aaa
inc
iret
int
push
test
test
cmc
sbb
mov
or
mov
hlt
cmp
mov
lods
xchg
xchg
fs
mov
and
xchg
adc
xlat
xor
mov
into
dec
rcrb
movsl
es
sub
mov
leave
fistps
inc
and
lcall
and
pop
test
in
mov
mov
lret
pop
jge
xor
jmp
das
xchg
jg
adc
loope
push
int3
out
daa
test
lcall
cmp
and
push
enter
adcl
das
out
enter
rorl
sbb
test
lds
cmp
dec
lods
lret
js
mov
test
popl
loope
insl
lds
test
in
test
mov
ja
lcall
dec
hlt
or
push
scas
mov
testb
mov
rorb
pop
cmp
mov
xchg
fwait
stc
sub
push
loope
xor
mov
cmc
jecxz
test
movsl
push
adc
jp
push
out
in
fistl
or
push
jecxz
adc
or
out
shlb
xchg
fbld
cmp
push
call
aaa
je
in
xor
and
dec
mov
lahf
test
xchg
xlat
in
jb
push
xchg
aas
scas
adc
inc
or
adc
push
push
mov
out
call
or
neg
aad
jge
fwait
sub
mov
mov
std
cmp
sbbl
stos
inc
stos
fwait
loopne
add
es
stc
cmp
and
mov
dec
sbb
xchg
mov
inc
push
lods
daa
iret
jmp
xchg
push
aad
pushf
adc
rcll
dec
lock
out
jecxz
mov
ret
lds
js
iret
clc
movsb
sub
inc
fldenv
in
and
adc
fwait
mov
out
add
in
jno
pushf
addl
mov
adc
std
mov
scas
adc
in
out
adcb
and
pop
cltd
jecxz
in
and
push
aaa
in
mov
sub
fldl
cs
popf
and
cmp
pop
cmc
mov
push
fimull
scas
ja
subl
xchg
dec
stc
iret
pop
es
xor
test
ja
fnstcw
imul
cwtl
mov
xorl
test
and
ret
xor
aam
lahf
xchg
in
out
and
test
fbld
xchg
fwait
sub
fbld
es
xor
arpl
mov
stc
shlb
inc
test
xchg
mov
lods
cltd
cmpsl
in
popl
out
popa
mov
push
jge
cli
es
shl
jmp
add
push
cmp
lea
pop
cmp
mov
push
sti
sub
lock
and
jecxz
ret
xchg
out
adc
nop
push
lods
xchg
in
rcrl
leave
in
sbb
in
arpl
stos
test
jae
xor
outsb
sbb
xchg
and
xchg
jnp
into
xorb
mov
adc
inc
shll
test
push
roll
push
in
mov
mov
ret
mov
push
pop
out
rorl
inc
push
mov
leave
jmp
and
in
es
cmp
cmp
addl
fisttpl
stos
cmc
sarl
decl
ds
rcrl
clc
jns
push
adc
lds
mov
inc
out
mov
in
mov
lods
jge
mov
xor
ret
leave
add
lea
xchg
aad
or
cs
dec
cmp
int3
into
dec
xchg
adc
lds
sub
fst
pop
aad
mov
jecxz
repz
fnstsw
sub
lret
fwait
subl
mov
mov
jnp
fwait
jmp
sub
imul
xchg
arpl
js
sub
scas
cmp
cmp
jmp
dec
test
sbb
fnstenv
rorb
xchg
cmp
lcall
shll
in
loop
test
popa
scas
ret
mov
test
andl
xlat
mov
push
test
cltd
jno
push
repz
clc
popf
lret
popl
or
xor
test
iret
cmp
cli
out
shrl
cltd
lds
push
cmovno
mov
dec
lods
movsl
jmp
and
mov
imul
dec
cmp
rcrl
adc
stc
fbld
out
iret
in
fabs
sbbb
xchg
adc
sub
js
rcl
addl
dec
dec
pop
and
push
cwtl
and
adc
and
divl
lods
popf
subl
or
shll
int
cmp
call
dec
scas
push
add
fnstsw
lret
outsb
push
jge
cmp
xchg
xor
xchg
subl
add
jbe,pn
iret
fsts
insb
jecxz
stc
leave
mov
xlat
adc
in
cmc
mov
bound
jmp
lods
fs
cltd
insl
outsb
roll
test
pop
cmpsl
aad
shll
sti
mov
inc
ja
dec
mov
loope
clc
mov
fistps
out
lods
push
cmp
lods
cs
shl
lds
fucompp
pop
stos
enter
cmp
and
test
xchg
adc
movsl
fisubrl
sub
lods
push
cmpsb
mov
pushl
jge
insb
out
icebp
xor
mov
mov
ret
jmp
stc
mov
mov
or
fscale
sub
jge
and
add
push
mov
out
loop
sub
pop
cmp
loop
inc
sub
int
jne
shrb
xchg
ret
loope
iret
cmp
cli
mov
jecxz
pop
sub
stos
roll
leave
test
pop
sub
aad
popf
push
ret
mov
addb
shlb
sbb
xor
pop
jmp
lds
dec
les
rclb
into
int3
xor
xchg
or
scas
xor
insl
push
pushf
imul
in
mov
ss
sub
pop
push
cmp
stos
fmul
xchg
xchg
push
mov
pushf
int
cvtps2pi
jmp
ret
inc
scas
or
mov
rcl
scas
nop
cld
clc
inc
mov
aam
and
mov
insb
aad
xorl
fwait
push
cs
cltd
cmpsl
nop
out
sub
and
pop
fldcw
mov
push
pop
add
ret
pop
sbb
and
adc
adc
or
or
jmp
jns
fbstp
push
nop
std
adcb
sbb
cltd
in
fdivr
nop
dec
or
push
xchg
mov
pop
ret
xchg
mov
push
incl
adc
sbb
aad
ret
dec
xor
shll
movsl
sahf
aad
adc
addb
sahf
pop
pop
mov
xor
loope
inc
stos
sbb
out
test
and
cmp
xchg
popf
mov
and
add
mov
call
push
xlat
mov
insb
sub
xchg
xchg
jg
addb
mov
pop
and
int
cmp
sahf
dec
sti
roll
pop
stos
es
ds
adc
add
xlat
push
aad
int3
and
dec
cwtl
pop
jecxz
fwait
mov
add
cmp
and
cmp
adc
adc
ss
rolb
sub
mov
imul
jo
and
sbb
lret
and
ss
mov
loope
sbb
mov
add
sbb
shll
ja
mov
cs
test
xchg
pop
shlb
mov
sub
pop
cmp
cmc
push
pop
xchg
cs
cmc
mov
orl
cmp
stos
fcmovnb
mov
push
ret
xchg
fstpl
jecxz
sub
adc
push
leave
lret
loope
in
fisttpll
push
movsb
in
stos
pop
std
xchg
fcoms
iret
lret
and
lret
and
mov
ljmp
mov
mov
sub
test
xchg
iret
addr16
fwait
jnp
cmp
jne
cmpsl
and
out
lods
loop
fdivrs
stc
imul
iret
add
fldl
test
mov
mov
mov
std
fnstcw
in
lahf
pop
pop
fwait
insl
pop
and
inc
aaa
std
lds
fidivrl
aad
cmp
jge
test
aaa
movsl
rcll
and
imull
jno
test
jecxz
cmpb
lret
andb
xchg
flds
popa
sub
aam
sbb
pop
movsb
xchg
add
lock
xchg
pop
punpckhbw
pop
loop
out
fnstsw
fwait
imul
adc
in
mov
adc
cmpl
cmp
ret
ja
fldt
xor
out
xchg
sub
jge
cmc
repnz
lret
inc
das
sbb
popa
jge
and
mov
push
stc
sub
and
cltd
sti
leave
imul
sub
popa
xlat
mov
mov
fnstenv
sahf
stc
jecxz
in
pop
leave
xor
rcrl
pop
int
sbb
arpl
out
sbb
test
cltd
pushl
xchg
aad
push
sub
add
ja
lret
dec
dec
jmp
mov
xor
movsl
dec
and
xchg
mov
and
cs
lods
mov
mov
imul
clc
imul
shlb
jecxz
pop
fmuls
jp
cmp
cmpsl
iret
inc
sbb
push
imul
dec
and
aad
xlat
cs
scas
sbb
rcrl
es
out
push
jg
pop
test
dec
loope
add
and
test
lea
pop
xlat
xchg
jmp
mov
lahf
aad
xchg
pop
fidivs
int3
fwait
cmc
sarl
test
jmp
jmp
in
in
push
push
aam
xor
call
test
imul
cmp
das
push
mov
in
mov
notb
les
stos
popf
cmp
add
rcll
cs
subb
mov
and
mov
mov
cmp
enter
adc
xchg
mov
movb
aad
fsubs
fistps
jne
stos
sub
leave
shl
push
dec
push
cmp
jb
or
out
xorb
fwait
or
test
jno
aad
jl
xchg
add
ret
rcr
mov
push
lods
mov
mov
in
jne
push
fld
insl
rcrl
call
mov
repnz
and
jne
fisttps
aad
iret
leave
xchg
xor
cwtl
packuswb
cmp
xchg
jecxz
fwait
loope
xor
push
mov
mov
stos
int
push
movsl
popf
test
nop
mov
scas
xchg
sub
pop
js
mov
fxam
xchg
or
ror
cmpsl
mov
mov
iret
cmp
ja
das
insl
movsl
fistps
cltd
popl
addr16
incl
inc
and
add
iret
test
inc
sbb
lahf
in
jle
stos
and
sub
push
jo
ror
push
fnstcw
out
mov
sub
xchg
push
or
gs
repz
mov
mov
dec
mov
subl
movsl
clc
into
xchg
pandn
mov
cmp
pop
fucomi
lds
imul
imul
cmp
aad
subb
cmp
xchg
scas
popa
and
daa
cmp
pop
cmp
xlat
rcrl
popf
fldl
test
push
fisttpl
mov
sbb
cmpsb
xchg
and
lds
dec
rcr
or
ficomps
iret
movsl
aas
sbb
lret
testl
adc
cs
or
fstps
dec
and
fwait
popa
fcomps
xchg
ja
mov
lahf
sub
or
jmp
xor
or
ret
mov
mov
test
sub
inc
in
call
movsl
pop
jmp
es
push
mov
in
clc
scas
iret
mov
fisttpll
dec
das
xchg
mov
lcall
xchg
xor
jae
mov
pop
xor
mov
jmp
stos
lcall
xor
xlat
test
mov
ret
mov
notl
jo
sub
mov
pop
ss
push
iret
lds
and
je
cmp
test
xor
mov
cld
mov
lea
iret
xchg
sub
insb
mov
mov
adc
ss
daa
shrl
arpl
ffreep
test
in
cltd
cmp
xchg
cmp
cltd
mov
xlat
repz
push
or
sbb
daa
mov
fld
jle,pn
xchg
loop
pop
adc
fnstcw
sub
mov
test
int
call
shll
sub
enter
mov
jo
imull
ret
jmp
mov
popf
sub
cmp
loope
inc
int3
xchg
iret
xchg
call
fwait
inc
out
popl
pop
xchg
xchg
or
movsl
andb
es
test
sar
mov
lds
push
push
in
and
push
jmp
in
xlat
sub
jp
popf
es
jae
movsl
or
rorl
or
xlat
jecxz
or
lahf
stos
popf
cs
test
aad
cltd
stc
iret
sahf
shrl
je
push
and
orl
mov
mov
mov
mov
sarl
sub
popf
int
xchg
adc
cmp
lea
into
xlat
lahf
rcll
mov
femms
movsl
cltd
mov
enter
movb
sub
push
xchg
int3
lds
mov
testl
mov
cli
test
adc
lods
mov
xchg
push
mov
es
cmp
xchg
push
push
aaa
subl
add
cltd
lods
in
adc
or
out
mov
mov
ret
cmp
cltd
sub
or
sub
push
mov
sarl
pop
div
out
pop
cmp
aas
xchg
loope
add
flds
cmp
rorl
imul
stos
fiadds
mov
mov
mov
xor
lds
fsts
lret
cmc
pop
scas
sub
add
cmp
adc
out
cmp
and
pop
and
cwtl
int
stc
mov
lahf
fcmovnu
or
pop
in
jne
scas
sbb
lds
shl
xchg
pusha
stos
arpl
jno
scas
jno
push
shrl
jnp
jmp
pusha
and
push
pop
sub
inc
jge
outsb
leave
pop
xlat
xchg
pop
adc
lds
cmc
leave
stc
aad
fnstcw
add
leave
fisttps
data16
xchg
scas
sub
ret
in
xchg
lods
popa
mov
pop
cs
int
jb
fcomps
test
lds
xor
rorl
test
cmpsl
mov
sub
movsl
mov
xchg
pop
dec
mov
adc
push
cmp
fwait
and
mov
xchg
jmp
int
add
and
adc
xlat
xor
pushl
fidivs
loop
sbb
dec
gs
ret
fwait
push
test
lds
out
and
cmp
popf
rcr
xor
sub
hlt
mov
sub
dec
sbb
cmp
cmp
jl
test
mov
lods
inc
push
movsl
in
in
lahf
add
out
jb
movsb
or
stc
mov
cmp
dec
scas
or
in
xor
lret
jbe
lods
leave
nop
lds
mov
stos
stc
iret
rolb
lock
movsl
fsts
add
lret
cltd
enter
scas
xor
in
sahf
cmc
pop
in
sbb
out
in
xor
out
jo
iret
fcoml
xchg
jge
jmp
mov
loope
mov
pop
cmp
cmp
sub
mov
clc
jne
sbb
xchg
mov
test
adc
lret
fwait
fwait
loopne
push
pushl
je
adc
mov
lcall
jecxz
rolb
fucomp
scas
or
adc
test
leave
mov
in
subl
pop
inc
lods
add
fnstsw
les
loope
test
sub
out
fldl
sub
test
fldenv
out
xchg
imul
mov
sbb
aad
fisttpl
loope
cmp
daa
mov
aaa
sub
ret
es
xchg
es
or
lret
ret
scas
addb
test
and
and
pop
jmp
push
mov
xchg
xor
cltd
mov
mov
test
or
mov
inc
jle
fidivrl
scas
fisubs
cmp
fdivrl
mov
jle
mov
out
mov
testb
in
mov
ret
inc
and
and
andb
xchg
decl
sbb
shrl
xor
in
add
xchg
push
adc
inc
sbb
shll
ja
lret
int
inc
hlt
dec
stos
and
mov
push
scas
push
pushf
mov
lret
fstpt
lods
xchg
cmpsl
mov
fdivrl
mov
out
lds
mov
or
adc
lock
push
sbb
stos
std
fists
mov
mov
pop
stc
push
out
sbb
push
and
mov
fcompl
pop
sub
xchg
lahf
jae
push
mov
ljmp
and
add
lock
aad
push
out
icebp
fwait
xlat
or
fwait
cmp
mov
mov
jne
xchg
mov
add
andl
fbstp
sbb
mov
xchg
test
ror
fmuls
dec
xor
popa
cmp
imul
mov
mov
lea
mov
popa
filds
xor
xor
or
int
mov
sub
lret
sbbl
push
xchg
fisttps
and
and
in
test
pop
cmc
in
jno
lds
cmp
pop
mov
xchg
xchg
ljmp
clc
jnp
pop
mov
out
mov
leave
iret
jmp
test
mov
push
insl
rorl
into
dec
repnz
stc
jp
int
sbb
shrl
jae
in
andl
mov
xchg
loopne
int
stos
aas
mov
and
sub
sub
out
mov
mov
shlb
xor
xor
adc
test
addr16
cmp
daa
push
es
dec
or
out
xor
ret
mov
js
jecxz
sub
sub
push
test
call
filds
and
adc
add
xor
popf
pop
xor
sbb
push
cld
stc
pop
adc
mov
test
sub
iret
sbb
out
sub
and
int
leave
pop
test
lods
ret
lock
aaa
jmp
shll
cmp
stc
test
test
jmp
mov
aam
lods
or
lea
or
ret
std
iret
xor
sub
or
cmp
aad
fwait
ss
sub
xor
inc
cmpsl
iret
test
lods
test
jp
leave
mov
mov
into
cmp
lods
inc
in
andb
hlt
aad
xchg
ret
and
xlat
cmp
sub
push
and
push
mov
dec
push
fdivl
jne
xchg
pop
jmp
lahf
push
and
lods
lods
lret
iret
in
out
int
movsl
call
std
int
xchg
test
push
imul
test
add
adc
cmpsl
dec
cs
and
fs
add
dec
mov
test
stc
scas
sbb
xchg
cmp
add
iret
and
or
sub
iret
je
lahf
cmc
mov
mov
iret
std
movsl
cmp
fnstsw
inc
into
dec
inc
mov
shll
sbb
mov
push
pop
sub
test
add
xchg
cltd
in
xchg
mov
popf
and
rorb
jns
orb
or
out
in
fwait
xchg
pop
push
cs
xchg
xor
scas
pop
cmc
cmp
sbb
int3
mov
lahf
leave
in
mov
out
push
das
jne
and
outsb
lds
and
push
lret
stos
mov
add
in
in
clc
jne
rclb
shll
lods
out
stc
std
sub
test
mov
push
mov
leave
jnp
rorb
or
lea
jno
in
or
sub
cltd
int3
xchg
pushf
ds
pop
lock
fwait
jne
lahf
ja
scas
lods
arpl
or
mov
lret
lret
mov
adc
pop
jecxz
lds
in
jb
xchg
mov
mov
xor
jge
xchg
cmp
ret
aad
push
test
sbb
mov
sbb
push
sub
popf
xor
imul
call
xor
lods
dec
aam
mov
mov
in
in
and
test
fmuls
aas
add
cmc
dec
lods
sub
xchg
sar
rcrl
and
push
mov
mov
push
sub
push
jae
cs
ja
lahf
aad
and
adcl
insl
negl
iret
pop
rcrb
or
xor
push
jo
pop
xor
cmp
mov
out
aas
in
xchg
test
pop
sub
add
mov
xchg
shrl
mov
std
in
pop
adc
stc
rep
cmp
adc
scas
loope
adcl
stc
cmp
push
shrl
cs
xchg
stc
xor
rcrl
out
fldt
repnz
jecxz
flds
pop
adc
leave
testl
inc
mov
xchg
or
dec
pop
fbstp
push
dec
add
int
push
xlat
pop
xchg
icebp
fistpl
cmpsl
test
cmp
xor
inc
stc
jp
jmp
sub
lret
aas
add
jb
fmull
shll
in
mov
in
es
sub
lret
cmp
or
cmp
aad
pop
sbb
pop
push
or
ret
xlat
sbb
and
mov
inc
cltd
int3
mov
xchg
sub
addl
jne
cmpsl
stc
fwait
lds
in
cltd
lahf
leave
orl
rcr
or
xchg
call
dec
inc
or
mov
fldcw
push
pop
cmp
pop
lret
stc
cmc
js
mov
mov
subl
cmpsl
test
lret
imul
sbb
and
and
mov
lcall
movsl
and
fs
shll
imul
pop
cmpsl
fucomip
and
xchg
sarl
push
jmp
test
xchg
pop
es
push
pop
fstpt
test
in
es
test
popa
fxch
pop
jno
int
imul
xor
in
scas
sbb
xor
frstor
adc
test
clc
lcall
and
dec
xor
pop
cmp
cs
ljmp
sub
scas
mov
stos
cmpsl
add
int
test
in
into
mov
mov
jno
stos
leave
or
cmp
iret
data16
mov
lcall
xor
repz
add
sub
pop
scas
mov
loope
pop
std
push
andb
mov
jae
sahf
test
pop
int3
push
cld
fldt
in
push
push
test
add
pop
scas
fwait
mov
xchg
cmp
lret
ret
cltd
rorl
jecxz
adc
cmp
imul
mov
movsl
cmp
push
out
sbbb
int
or
stc
mov
xor
or
sbb
mov
ljmp
in
or
out
ror
orl
push
sbb
leave
lods
xchg
cltd
push
out
fbld
mov
xchg
and
lea
fs
fnstsw
stos
cmp
xlat
cmp
pop
leave
sbb
xchg
lds
iret
sbb
cmp
pop
fildll
pop
push
pop
scas
fildl
sbb
cmp
push
push
mov
mov
in
and
lret
jno
inc
xor
inc
xchg
cmp
mov
add
bts
iret
sub
dec
add
adc
jno
push
xchg
sbb
xchg
cmpsl
cmp
xlat
push
and
mov
int
in
test
cmp
pop
dec
pop
out
leave
fldenv
out
clc
popl
out
mov
popf
inc
xchg
mov
mov
mov
fisubl
sub
sub
inc
iret
jmp
movsl
cmp
popf
lods
arpl
pop
aaa
fstps
std
and
dec
cmp
loope
mov
icebp
cmp
mov
nop
iret
mov
cmp
jle
scas
xchg
lahf
mov
jnp
mov
ja
loopne
insl
int
cs
scas
push
sti
lea
popf
shlb
cmp
jne
cmp
xor
dec
lahf
adcl
xor
pop
iret
jns
iret
mov
mov
push
mov
imul
jmp
leave
test
inc
xor
rcrb
jnp
cltd
xchg
icebp
stc
xchg
jmp
aad
int3
loop
xchg
jne
and
rorl
lcall
push
fxtract
lcall
sbb
sbbb
mov
aad
fldt
pop
sub
xchg
andl
mov
mov
mov
and
push
subb
sub
sub
mov
mov
push
int3
xchg
data16
daa
imul
cwtl
aaa
inc
mov
arpl
sar
xchg
mov
es
mov
adc
xchg
ret
mov
jecxz
push
out
nop
push
pusha
jne
xchg
out
int3
xor
xchg
scas
and
rcrl
adc
cmpsl
inc
test
aas
sub
lahf
sub
adc
sahf
test
cmpsl
jmp
jmp
lahf
fnop
sti
inc
lods
arpl
and
cli
movsl
jne
or
test
insl
fmuls
pop
jmp
shrd
stc
fistl
or
cmpsb
rcr
jo
popf
imul
int
jmp
cmpsl
jae
sub
fwait
and
push
jge
xchg
call
imul
repnz
pop
mov
ficomps
shlb
hlt
scas
jae
shrb
xchg
iret
fsubs
xor
mov
scas
mov
sub
popf
push
mov
mov
cmp
or
lea
lcall
daa
sti
adc
cmp
ss
rcrl
mov
in
xor
pop
popf
xchg
stos
test
jbe
push
loop
jo
ret
push
pop
or
add
mov
cmp
mov
aad
push
iret
data16
imul
ja
push
nop
push
cmp
lods
push
out
popf
jmp
jmp
mov
sbb
inc
aam
mov
gs
test
stc
sbb
jecxz
imul
or
xor
jmp
stos
xor
pop
sub
aas
add
adc
mov
lret
and
adc
and
lds
pop
imul
or
fldenv
flds
push
stos
cmpsb
jne
inc
cmp
das
mov
pop
jne
fisubrl
lds
in
cmp
fwait
sbb
jecxz
or
xchg
pop
mov
mov
and
fildll
and
and
push
mov
and
push
sbb
popf
out
mov
sub
ret
adcl
fidivl
mov
adcb
adc
negb
sbb
and
and
mov
lahf
inc
jecxz
fldcw
js
in
jl
cmpsb
xchg
sbb
mov
jmp
into
sub
push
or
mov
push
push
test
xchg
dec
leave
xchg
mov
dec
cmp
pop
mov
jmp
stc
mov
icebp
mov
iret
cmc
or
xchg
push
sub
leave
sub
fmuls
add
jecxz
stos
cmc
cmp
ffree
in
cmp
push
lea
imul
xor
enter
and
scas
test
cs
popa
test
cmp
and
rcrb
jae
ss
pusha
inc
fwait
js
subl
out
xor
add
in
mov
psubd
jno
scas
fwait
xchg
xlat
sbb
push
push
add
push
xchg
adcb
mov
aad
push
in
insb
pop
in
out
mov
andl
lock
sbb
popa
cltd
js
sub
jmp
xchg
les
aad
data16
or
rorl
fsubrs
leave
in
cs
sub
mov
cmp
ret
in
loopne
popa
jmp
xchg
pop
in
xchg
cwtl
mov
lret
cmp
dec
in
dec
pop
ret
mov
pop
sbb
and
adc
sbb
cmp
cmp
jno
ljmp
dec
adc
pop
shl
js
mov
xchg
lods
pop
test
lds
push
in
fdivs
aam
adc
lahf
popf
push
les
pop
iret
aad
roll
mov
cmpsl
cmp
inc
fmuls
call
xchg
mov
and
aad
mov
shll
mov
cltd
imul
xchg
dec
push
jge
xlat
push
sub
mov
cltd
and
dec
cmpsb
and
test
sbb
pop
subb
xchg
xchg
sbb
cmp
adc
dec
mov
loopne
pop
or
fildl
push
sub
or
sub
xor
add
mov
leave
mov
push
push
test
frstor
js
loope
xor
mov
add
iret
cltd
iret
inc
call
xor
es
push
xchg
push
xor
push
push
and
imul
sub
jecxz
sub
leave
cmp
test
popf
jmp
es
xchg
cmp
sti
fs
cltd
sub
in
lret
int3
jp
cmp
adc
add
clc
lret
movsl
xorl
leave
pop
push
frstor
out
cmpxchg8b
iret
push
icebp
popf
lcall
sbb
stos
outsl
pop
popf
popf
add
ljmp
mov
or
jns
mov
lret
dec
cmp
leave
in
loop
add
test
shll
push
sub
fsts
rorl
mov
mov
lahf
xchg
fsts
bound
xor
inc
fcom
jae
ret
fstps
fcmovnb
push
stc
shll
popa
bound
inc
fstpl
jno
cmp
sub
in
xchg
cmpsl
dec
clc
sub
aad
and
jmp
js
stc
lret
aas
cmpsl
test
inc
stos
sub
jmp
mov
imul
clc
mov
in
lea
push
rol
mov
push
fwait
movsl
shll
in
fnsave
cmp
rolb
xor
lret
cmpsl
push
test
jne
out
cmp
icebp
and
das
aad
xchg
mov
test
ficoms
xchg
push
sub
scas
aas
pop
sbb
dec
push
imul
mov
out
lock
or
pop
inc
insl
cs
inc
jecxz
xchg
aas
add
lahf
scas
jmp
sbb
movsl
push
push
xlat
dec
leave
out
dec
mov
out
cmc
mov
mov
aaa
es
cmpsl
xor
cs
xor
fstpt
loope
cmp
aaa
out
or
hlt
idivb
add
mov
sub
mov
stc
jecxz
je
sub
popf
shl
cwtl
out
jge
loope
cmp
mov
jne
mov
pop
xchg
lret
sbb
mov
xchg
leave
lahf
add
jmp
jecxz
and
cltd
mov
or
or
shll
std
mov
adc
jecxz
das
gs
mov
lods
xchg
inc
faddl
out
fnstsw
and
mov
enter
pop
int
pop
inc
insb
imul
push
in
mov
js
subb
cmp
dec
aad
out
popl
xor
ret
cld
lret
dec
movsb
aaa
cld
xchg
rcll
outsb
mov
lea
stos
or
jecxz
movsl
push
sbb
inc
stc
cmp
inc
movsl
loop
xchg
pop
fsubs
popf
xor
inc
faddl
jmp
stc
mov
xlat
stos
fidivrl
sbb
subl
xchg
sub
xlat
add
mov
mov
sub
into
ss
sarl
test
dec
mov
test
xchg
or
push
cs
sub
mov
lds
push
aas
aad
inc
mov
or
or
sbb
jns
cmp
xlat
pop
test
iret
xchg
aas
hlt
imul
sarl
fldenv
jp
scas
scas
xchg
jno
inc
pop
mov
xchg
stos
adc
aad
sub
cmp
add
lea
out
and
daa
data16
mov
sub
jmp
cmp
iret
or
sub
jecxz
shlb
or
fstps
or
cmpsl
push
xlat
pusha
xchg
jno
aam
test
and
push
test
in
xchg
push
in
imul
lds
jge
cmp
jge
mov
cmc
iret
frstor
push
xor
sbb
sbb
sbb
jmp
lds
fildll
js
lods
cs
sbb
arpl
data16
cmpl
lea
movsl
xor
fwait
orb
movsb
push
enter
lea
adc
aad
pop
popf
mov
insl
fsubs
out
jbe
icebp
mov
nop
xor
mov
mov
pop
mov
fwait
in
imul
lds
adc
movsl
arpl
jno
jns
orb
sub
insl
jl
mov
jecxz
mov
pop
lea
ficoms
xchg
adc
or
lahf
adc
cmp
in
dec
cmc
iret
repz
mov
out
inc
test
xchg
cmpsl
shrl
xlat
mov
in
xor
enter
inc
sub
popa
loope
cmpl
cmp
or
pop
int
push
sbb
pop
subl
shl
stc
mov
pop
popa
rcl
mov
scas
in
sub
push
fnstenv
adc
divl
idiv
xor
data16
jge
push
test
jge
popf
mov
orl
shl
mov
push
add
test
pop
mov
mov
test
sti
mov
push
or
stos
xchg
dec
sbb
mov
or
mov
fstpt
es
cltd
inc
sub
faddp
lret
and
dec
fiadds
rorl
adc
fiadds
lock
test
inc
mov
popf
fistl
cwtl
iret
scas
shl
jns
das
mov
mov
insl
add
shll
jecxz
leave
pop
xor
dec
cmp
ficompl
in
adc
xchg
cltd
mov
sub
fdiv
xchg
xor
stc
int3
mov
adcb
out
out
in
pop
fcoms
movsb
popf
insl
pop
fucom
xchg
push
lods
mov
jmp
or
sub
cmp
xor
jmp
push
in
popf
cmp
push
out
ret
js
sub
jb
aad
sbbb
inc
lret
roll
mov
xchg
pop
imul
inc
cmp
and
aad
enter
fidivl
xchg
sub
lds
push
mov
lock
in
push
jno
xchg
sbb
leave
fwait
aad
subl
iret
ret
mov
iret
push
xchg
cs
push
out
and
lods
test
mov
test
iret
popa
ret
scas
xchg
jae
push
loope
mov
mov
jmp
scas
pop
out
adc
lahf
mov
xchg
sub
scas
xchg
fsub
andl
aaa
adc
clc
cmp
cmp
pop
push
imul
pop
movsw
loope
jmp
aaa
xchg
lret
dec
leave
scas
imul
frstor
sbb
mov
xchg
popa
or
xor
push
leave
push
mov
popf
pushf
cmc
xor
pop
or
mov
cmp
xlat
mov
or
mov
repz
aad
xor
xchg
rcr
push
xchg
pop
out
lahf
inc
mov
or
ja
jmp
adc
in
mov
cmpsl
lods
leave
loopne
dec
xchg
jmp
popa
int
stos
pop
sbb
ljmp
jne
cltd
jecxz
cmp
mov
mov
test
test
sub
and
jbe
es
popa
push
enter
fcmovnu
movsl
iret
and
lods
xor
loop
jmp
cs
data16
outsb
lahf
sub
mov
or
push
nop
dec
add
adc
movsl
jge
movsl
shll
mov
mov
mov
insb
fdivrs
pop
adc
ud0
push
or
aas
jo
push
inc
sub
push
xchg
xchg
and
jl
aas
roll
pushf
sbb
loope
in
nop
nop
cmp
test
jbe
xor
fistpl
push
or
cmp
adc
mov
xor
lret
fldenv
daa
lea
sti
out
movsl
cmpl
and
stos
fildll
add
cmp
sarb
dec
insb
imul
fidivs
loope
xor
xorl
test
xor
ror
pop
xor
inc
lods
xchg
nop
lcall
sub
push
xlat
popf
fstpt
aad
jns
add
xor
fldl
and
aad
int
cmp
sub
push
fdivr
pop
jg
leave
and
shl
or
subl
push
loope
scas
push
push
sbb
xlat
loop
sub
jecxz,pn
lock
call
add
test
sbb
cltd
adc
addl
out
xchg
or
cs
nop
inc
add
test
cmp
push
inc
sbbl
jl
mov
out
sub
mov
out
xchg
lock
imul
orl
in
pop
xchg
add
test
psubusw
cltd
stos
lahf
push
xlat
fistpl
lret
popf
mov
fsubl
lds
cmpsl
bound
pop
dec
lea
adc
push
xor
mov
dec
xchg
and
xchg
in
iret
or
leave
mov
sbb
or
xor
push
cmpb
nop
adc
roll
popf
or
pop
in
stos
fucomp
leave
ret
jecxz
popa
cmpsb
aad
jno
and
add
iret
fwait
arpl
pop
arpl
lcall
data16
pop
sbb
sbb
push
pop
repz
enter
and
xchg
xor
push
sbb
aam
cmp
xor
mov
int
sub
mov
sbb
inc
fwait
cmpsl
ret
cs
add
int
jnp
das
sahf
faddl
xor
xchg
addb
lcall
fcompl
test
xchg
in
mov
jecxz
lds
cmp
mov
pop
aaa
adc
pushf
jne
bound
adc
and
aad
popf
stos
imull
stc
jns
mov
or
gs
out
js
out
iret
mov
cmp
dec
jns
int
popa
jb
mov
xor
pop
iret
sub
testb
lea
sahf
xchg
int
ja
repnz
inc
sbb
shrl
adc
in
lcall
pop
lds
xchg
sbb
ljmp
push
lret
in
cld
popf
xchg
and
push
popf
insl
aad
and
fmuls
push
add
adc
inc
mov
push
jae
cwtl
aad
fucom
cmp
test
int
rcl
flds
mov
fucom
sbb
xor
sub
push
aaa
mov
xchg
fildll
lds
cmp
jbe
addl
mov
stos
shll
and
sub
fimuls
mov
test
pop
mov
mov
es
ds
fimull
hlt
push
inc
or
sbb
outsl
or
test
gs
es
inc
in
stc
xchg
aas
adc
daa
and
inc
mov
lds
and
stc
pusha
es
dec
cwtl
inc
outsl
fsubs
shl
ja
sbb
cmp
leave
test
leave
cmp
in
jne
xchg
mov
xor
fstpl
pusha
insb
jno
mov
cmp
pop
xchg
and
in
es
sub
out
shr
jecxz
das
loope
cltd
cmp
rol
out
xor
add
xor
xchg
and
incl
out
popf
jecxz
lods
push
adc
and
dec
scas
arpl
in
cmp
cld
and
pop
das
adc
out
rcr
push
inc
lahf
mov
xchg
sarb
inc
xchg
ret
sub
in
mov
xchg
test
flds
mov
lahf
sbb
jmp
in
mov
sbb
pop
or
cmp
aad
insl
fucomip
lahf
mov
out
pop
stc
lods
imul
lahf
xchg
movl
movsl
test
scas
out
stc
or
sbb
add
stos
scas
loopne
rol
jne
and
mov
int
jle
cmpsl
and
or
sub
xor
enter
mov
lds
dec
sub
push
xor
xchg
aam
mov
insl
inc
xchg
iret
add
lea
bound
pop
sbb
ffreep
aad
rol
cmp
xchg
in
notb
push
imul
rolb
mov
jecxz
lret
ljmp
cmpb
lods
jge
pushf
xor
ljmp
push
pop
and
xchg
arpl
pop
inc
jne
and
sub
cltd
in
insl
pusha
in
pop
xor
popf
in
jge
jbe
mov
das
shl
push
js
xchg
mov
dec
iret
lds
mov
scas
fisttpll
xchg
xorl
cmp
push
out
gs
stc
sarl
and
pop
push
sub
in
sub
fcmovbe
int
sbb
xchg
sysenter
and
lea
sbb
cmc
push
jmp
push
xchg
fsts
mov
dec
test
cmp
sbb
in
fstpt
inc
in
mov
xor
sti
xor
andb
jmp
cmpsl
incl
mov
xchg
stc
lock
mov
repnz
or
std
jge
xchg
int
cltd
fwait
bound
pop
jns
in
jg
pop
fildll
popf
movsl
adc
stos
cmp
and
orb
leave
inc
lret
loope
sub
clc
xchg
vshufpd
sub
push
adc
fsts
inc
stos
in
fwait
lea
je
popf
ss
cmp
xlat
rorl
xchg
xor
sbb
cld
leave
push
in
insb
lret
xor
mov
sub
sbbl
pop
lds
out
cmp
xlat
xchg
dec
jne
or
push
stos
ficoml
sbb
cltd
sub
and
sbb
das
xchg
stc
and
lods
test
fwait
ds
adc
ja
icebp
icebp
push
jecxz
sbb
fistpll
or
bswap
test
f2xm1
jmp
std
xor
test
test
es
pop
out
movsl
lds
pop
mov
lret
aad
popf
leave
lahf
sbb
mov
mov
xchg
rorl
ret
popf
aad
loope
fldl
cli
xchg
rorl
dec
mov
lds
test
out
ss
mov
pop
in
lcall
pusha
ret
add
stos
daa
lock
push
xchg
or
stos
mov
shlb
xchg
and
mov
and
adc
xchg
jmp
push
clc
sub
push
add
jecxz
push
adc
adcl
sbb
cmp
mov
out
pop
adc
jae
daa
lods
loope
rorl
test
mov
push
fbld
push
push
iret
or
mov
rcll
mov
call
adc
mov
cmp
stc
in
lret
rol
add
push
jg
aaa
test
inc
insb
add
ret
adc
aam
loopne
lret
loop
mov
clc
iret
leave
fldenv
xchg
mov
lret
stos
cltd
cli
ret
test
nop
int
fbld
jmp
sbb
aas
std
stc
lods
popf
xor
push
sbb
inc
popa
int
les
fwait
mov
xor
or
sub
xor
lret
test
fcomip
insb
inc
mov
ret
js
test
push
into
dec
inc
cmc
inc
lahf
shlb
addl
cs
test
cltd
sub
xchg
jno
lds
test
sub
test
roll
je
cs
push
push
mov
dec
es
iret
int3
push
mov
mov
pop
flds
mov
stc
mov
sub
shrb
xchg
xor
lods
and
mov
es
aad
adcl
sub
lret
ljmp
cwtl
rcl
sub
sub
mov
popl
mov
mov
cwtl
ja
cwtl
cmc
sub
push
daa
frstpm(287
cmpsl
adc
stos
xchg
adc
mov
sbb
dec
push
mov
std
cs
repz
cmp
in
dec
popf
ss
shll
ret
imul
jge
negb
stos
movsl
sub
mov
int
pop
jmp
dec
shrl
aaa
call
pop
cwtl
mov
cmp
int3
mov
stos
daa
iret
mov
test
mov
fwait
mov
clc
and
mov
pop
xlat
mov
dec
leave
xchg
rcrl
mov
hlt
dec
pop
xlat
jecxz
adc
lret
sub
mov
push
popf
lods
arpl
or
mov
loope
cltd
es
out
mov
in
xchg
hlt
jecxz
jmp
jmp
or
ret
aad
dec
xchg
iret
scas
pusha
push
or
pusha
subl
insl
mov
add
sti
loope
and
int
pop
and
test
jle
cltd
mov
popf
bound
push
sub
or
and
in
lcall
xchg
mov
mov
and
aad
push
imul
loope
jecxz
xchg
in
jmp
mov
leave
scas
inc
xchg
sub
imul
movsb
push
mov
xchg
sub
std
es
cmp
jbe
hlt
fisttps
push
lea
and
sub
ret
loop
push
test
mov
add
out
mov
call
mov
fld
sub
faddl
popa
mov
lret
and
aad
ja
mov
daa
stos
in
cmpsb
imul
sub
cmc
add
or
stc
test
sub
fbld
cmpl
daa
pop
shrl
stos
jno
and
mov
pop
insl
out
cmpsl
in
adc
mov
in
int
mov
pop
sarl
lds
pop
lea
aad
cmp
shl
subl
cltd
add
fcomps
mov
xchg
dec
cmp
inc
imul
cwtl
xchg
xchg
jnp
orl
out
fistps
cmpsl
imul
jmp
je
adc
mov
and
mov
lock
out
lds
loope
jns
add
ret
rcll
inc
out
xchg
pop
xor
mov
test
scas
push
inc
aad
fwait
and
jmp
repz
aas
in
adc
mov
sar
clc
jecxz
mov
pushf
out
inc
jne
jo,pn
inc
lahf
pop
sub
xchg
nop
xor
js
rcr
test
mov
mov
ss
pop
subl
fabs
or
popf
in
mov
push
les
xor
popa
inc
xchg
scas
pop
inc
lods
fmul
std
fldcw
fisttps
mov
cs
cvtdq2ps
popf
push
dec
nop
push
cmpsl
push
and
mov
sbb
ret
shll
dec
cltd
xchg
test
in
inc
xchg
scas
and
stc
xor
mov
cmc
or
andl
sbb
cmp
push
in
repnz
loopne
push
adc
test
cmp
popf
mov
shll
insb
pusha
add
out
cmp
xchg
cs
ret
jne
jmp
mov
add
adc
leave
in
add
jns
push
adc
shrl
stos
lcall
ret
lahf
fdivs
sub
dec
js
push
xlat
dec
adc
loopne
pavgw
out
mov
sahf
jbe
int
lret
xchg
xchg
lahf
mov
leave
js
push
aad
pop
sub
xchg
imul
out
or
in
dec
rcl
cmpsl
lods
inc
test
rcrl
jecxz
pop
fwait
push
adc
xchg
sbb
int
popf
sub
cs
push
shlb
fxch
push
xchg
sbbl
mov
arpl
xor
mov
scas
testb
fldenv
iret
inc
jne
subl
mov
xchg
push
addl
shrb
add
dec
pop
aad
pop
addb
add
jmp
icebp
fwait
push
lret
cmp
loope
mov
mov
xchg
mov
xchg
pop
xchg
jne
int
pusha
sarl
std
insb
std
cmp
xchg
add
mov
movsl
sub
xor
cmpsl
iret
fstl
es
mov
cmpsl
nop
pop
add
pop
in
fsts
sbb
lods
jmp
sbb
mov
popf
cmp
inc
leave
mov
out
inc
ficompl
cli
test
and
loope
cs
mov
pop
inc
int
add
xor
adc
inc
xlat
sub
scas
ret
inc
cmp
inc
js
pop
xorl
ret
test
lea
adc
mov
clc
pop
mov
dec
rcrl
pop
cs
jmp
dec
iret
push
xchg
fwait
roll
xchg
pop
sbb
sub
sub
jg
sub
mov
pop
xchg
int
push
sbb
push
dec
xchg
sub
add
mov
in
cmpsb
mov
mov
lret
inc
cwtl
mov
xor
mov
pop
xchg
out
mov
push
arpl
fidivs
lahf
popf
xchg
cmp
pop
pop
pop
pushf
fcomp
jb
xchg
test
mov
inc
dec
sbb
xchg
xor
mov
mov
fstps
sub
out
mov
and
sbb
jecxz
shll
lock
xor
jle
xor
xchg
cmpsl
mov
int
scas
fisttpl
jmp
repnz
jo
mov
inc
and
fstpl
add
pop
movsl
shl
popa
xchg
mov
popl
in
mov
mov
in
or
insl
xchg
dec
leave
mov
inc
in
popa
pop
cmp
cmpps
rcrl
enter
stc
or
mov
lea
lcall
xchg
add
test
out
cli
mov
add
in
sub
sbb
push
jb
outsl
cmp
jae
inc
xchg
mov
or
andl
mov
xchg
mov
mov
xchg
std
aad
fwait
mov
test
iret
mov
jg
rcr
loopne
int3
lds
das
shll
xlat
std
lods
and
xchg
mov
shrl
pop
dec
pop
daa
shrl
inc
jmp
mov
nop
ret
mov
insl
adc
and
jge
movsl
andl
in
std
pusha
dec
lcall
mov
dec
adc
iret
lahf
mov
jmp
ret
out
fcomp
lret
loopne
push
lods
xchg
xlat
inc
cmc
ja
in
sbb
jmp
test
jecxz
cmp
aam
test
popf
movsl
xchg
mov
addl
add
or
jmp
popf
orl
push
test
fwait
pop
xchg
xor
out
fnstsw
hlt
xchg
mov
inc
out
arpl
lea
sub
int
and
ss
lret
in
fildll
adcl
or
push
jmp
adc
movsl
test
pop
pop
xor
fucomp
dec
mov
xchg
xlat
inc
sub
xchg
jne
push
cmc
push
pop
popa
popa
or
dec
mov
jno
push
adc
call
mov
and
popf
stos
sbb
xchg
xor
and
pop
lahf
pop
mov
mull
mov
push
out
mov
xchg
rorl
fmull
mov
fcmovnb
lds
mov
test
pop
sub
xchg
xchg
test
cmp
adc
roll
cmp
xor
cmpsl
mov
imul
out
add
or
rcrl
test
fisttps
mov
out
aaa
sub
popf
out
ret
es
cmp
mov
stos
sarl
stos
mov
or
fwait
iret
dec
lahf
dec
pop
ret
pop
adc
sbb
lahf
push
insb
cmp
test
daa
popf
cmp
les
fxch
or
jmp
fwait
sub
movb
or
loop
pop
xor
clc
insl
xchg
flds
push
lds
repnz
mov
mov
iret
mov
mov
push
cmp
imulb
push
cmp
stos
cmp
jo
jmp
lea
mov
and
in
and
xor
dec
dec
mov
pop
sarl
fildl
and
call
scas
add
scas
and
inc
inc
dec
sahf
jns
push
lahf
fldt
push
inc
xlat
test
lock
rcll
test
cltd
paddq
dec
in
in
nop
mov
mov
adc
loope
insl
and
enter
mov
std
mov
sub
xlat
add
fidivs
aad
ffreep
sbb
movsl
sbb
aas
or
ret
frstor
add
fwait
pop
popf
iret
in
push
jp
inc
add
icebp
mov
out
fdivs
inc
int
push
sub
mov
xlat
shll
fldl
movsl
cmp
fwait
push
leave
bswap
pusha
cltd
push
lods
mov
shll
out
sub
lods
into
push
jbe
loope
movsl
aad
in
je
mov
jle
mov
stc
push
fsubs
in
sub
mov
adc
mov
int
push
nop
cmpsl
orb
cmp
ret
mov
push
decl
rol
sbb
lea
mov
sub
jae
sbb
cmp
xor
aad
cmp
movsl
sub
push
jmp
cmpsl
sub
ffreep
push
sub
stos
dec
cs
test
scas
mov
jmp
sbb
sub
adcl
mov
in
lret
jmp
inc
test
movsb
mov
xchg
or
push
popf
mov
mov
mov
sub
lret
pusha
pop
add
out
add
mov
push
imul
add
loope
scas
inc
jne
xchg
mov
push
addr16
sub
push
enter
xlat
test
cmpb
push
test
inc
iret
xchg
into
ljmp
add
psrlq
loope
dec
repz
dec
test
test
pop
xchg
leave
out
aad
arpl
pop
fmul
xor
push
mov
lret
shlb
inc
pop
daa
repz
imul
xchg
mov
push
lods
lret
iret
aam
lcall
into
sub
pusha
xor
sbb
mov
in
sub
sbb
inc
mov
mov
fs
sub
xchg
cmpb
fildl
cmpsl
mov
xchg
arpl
aas
mov
push
in
mov
jmp
insl
lods
sbb
fcomps
in
push
sbb
ds
ss
adc
xchg
xor
shrl
int3
popf
push
ja
scas
cmp
leave
in
mov
out
xchg
mov
xlat
mov
iret
sub
aad
xchg
out
aas
insb
pop
fisttpll
jne
arpl
fbld
xchg
mov
adc
lea
dec
in
cmp
xor
nop
sbbb
adc
push
or
mov
adc
cmp
repnz
sub
inc
out
fsubs
in
icebp
mov
ret
leave
std
clc
sub
add
or
loope
lods
imul
xchg
stos
iret
dec
scas
inc
xchg
loop
or
or
mov
in
lahf
inc
and
cmp
scas
jmp
cltd
and
jg
in
lea
fwait
mov
aad
xor
xchg
add
fnsave
sub
jns
sbbb
sub
jno
mov
cwtl
nop
adc
test
inc
xchg
iret
mov
mov
sbb
mov
leave
ficomps
adc
dec
fwait
loope
or
pop
or
popa
xchg
popf
jmp
pusha
mov
pop
xchg
cs
adc
dec
stc
xchg
and
cltd
addl
stc
adc
fisttpl
cwtl
mov
js
test
cmp
pop
add
test
aas
dec
ljmp
test
enter
cmpl
jmp
or
out
xchg
in
lahf
rclb
in
mov
pop
and
int
jecxz
ds
xchg
insl
lods
xchg
mov
dec
mov
scas
jmp
sub
repz
test
test
cmp
out
stc
aad
cs
push
shl
push
and
rcrl
lock
adc
pop
adc
add
mov
inc
cltd
inc
mov
movsl
pop
xchg
adc
push
push
xchg
cmp
popa
mov
cs
std
lds
xchg
adc
int
pop
sub
fwait
adc
pop
popa
jp
ret
cs
lahf
movsl
cmc
bound
aas
sub
paddsw
aad
lret
and
scas
cmp
and
data16
faddl
sbb
sub
adc
push
rorl
xchg
jge
or
xchg
popf
sub
mov
mov
pop
test
mov
fwait
sub
lea
pop
bound
subb
faddl
imul
or
xchg
xlat
ror
inc
mov
movsl
imul
mov
mov
test
shll
fmull
push
sbb
xor
lods
test
xchg
jecxz
popf
int
stos
in
lret
push
cmp
dec
and
popf
aas
jecxz
aas
incb
and
mov
cmp
sub
cmp
cltd
stc
adc
ficoms
les
ss
shll
mov
cmp
dec
rclb
in
push
xchg
inc
push
cli
xorl
std
aad
test
dec
pusha
sbb
jb
out
add
push
call
xchg
popf
lea
mulb
in
ja
inc
jp
sub
sub
xor
and
dec
daa
mov
jmp
inc
cmc
adc
xchg
loopne
insl
push
xor
fwait
mov
xlat
in
popf
cmpsl
outsb
and
pop
sub
push
add
loop
rclb
dec
ret
insl
inc
and
fldl
jg
jmp
in
cwtl
cmpsl
filds
rorb
call
lret
scas
sub
fsubrl
shlb
sarl
cwtl
xchg
sub
mov
iret
shll
out
aad
cltd
jmp
ja
lods
lret
mov
fdivrs
cmp
ss
leave
subl
pop
js
cmp
lods
out
hlt
mov
sbb
sub
cmp
leave
bound
rcrb
fstl
or
in
js
in
arpl
dec
ror
cmc
pushf
and
cli
cmp
mov
lds
cltd
jmp
inc
lahf
sub
call
sub
push
sbb
test
popa
or
and
or
adc
fcoms
arpl
movsl
lds
or
xlat
iret
or
clc
mov
jecxz
out
xor
cltd
mov
xchg
push
xor
aaa
sbb
lahf
test
push
mov
sbb
ret
aam
test
mov
fbld
fdivs
mov
push
int
xor
jns
add
pop
mov
fcmovnbe
cltd
sub
pop
stos
clc
cmp
dec
test
cmp
out
and
in
cltd
mov
aad
ret
adc
sahf
sub
add
shll
test
roll
add
iret
xor
and
pop
jmp
sbbl
iret
jmp
mov
or
aad
shll
or
mov
js
mov
leave
mov
xchg
push
imul
out
rorb
cltd
popf
imul
fistpl
int
and
cmp
xlat
shll
adc
divb
imul
add
mov
cmp
xor
shlb
icebp
in
dec
jmp
push
int
cmp
fsubrp
dec
lea
in
es
or
fstps
bound
out
lret
ret
xchg
add
shl
leave
xor
int
mov
sbb
or
xchg
or
shrl
xor
dec
pop
mov
fbld
xchg
fwait
xlat
sub
orb
scas
loope
lret
sti
iret
jae
mov
push
push
lret
es
leave
lds
mov
xchg
jecxz
cmpsl
pushf
leave
mov
jmp
je
lods
or
jmp
cmp
cmpsl
insl
mov
loope
nop
in
sbb
xlat
pop
dec
bound
and
mov
jmp
push
cmc
cmpsl
std
mov
mov
adcl
stos
xchg
cmp
jnp
sar
iret
gs
cmpsl
fsts
cmp
rcrl
sbb
clc
fwait
cltd
test
mov
movsl
in
gs
lods
out
pop
jb
push
mov
mov
js
in
cmc
sub
outsb
insb
adc
imul
pop
add
es
mov
inc
lds
sbb
mov
or
inc
pop
mov
stc
test
xchg
pushf
ret
lcall
aad
clc
jge
fildll
int
popf
mov
call
push
adc
clc
leave
pop
mov
xor
mov
pop
add
mov
int
xchg
aad
xlat
lea
sub
sub
fcmovnu
push
inc
movsl
xchg
lods
and
shll
cmc
outsl
xchg
into
push
xor
add
orl
movsl
aas
mov
fisubl
mov
popf
mov
cmp
data16
mov
movsl
or
adc
out
mov
cltd
fstl
cs
or
or
test
push
push
cmp
testb
sub
fidivrl
ret
lret
cld
and
push
inc
insb
popa
ja
pand
push
or
lea
push
fcmove
xchg
loopne
jmp
aad
xchg
add
adc
iret
test
movsl
push
outsb
out
adc
jno
push
inc
lret
sub
aam
call
std
fcomi
fwait
enter
push
lahf
dec
decl
stc
in
lret
scas
lret
xchg
test
ds
in
iret
mov
leave
sbb
push
jp
fucomp
imul
sub
sub
mov
mov
movsl
shll
sub
pushf
in
stc
js
fisttpl
xorb
pop
imulb
in
pop
data16
xorl
xchg
dec
mov
popf
insl
lds
sbb
pop
mov
fstpt
mov
mov
movsl
cmpsl
mov
sub
fnstsw
jecxz
loop
xchg
pop
dec
or
fnstsw
jmp
and
sbb
test
mov
and
fstps
cmpsl
sbb
mov
cmp
popf
mov
test
sbbb
or
jecxz
int
push
jmp
dec
xor
jge
xor
jns
xchg
es
fistpll
sbb
dec
shll
lods
push
add
jp
sbb
pop
pop
pop
mov
mov
xlat
adc
lods
push
mov
stos
fistpll
stc
dec
adcb
leave
or
lods
in
sbb
mov
filds
pop
aas
sbb
dec
fimuls
mov
insb
out
xor
lea
inc
xor
inc
sbb
pop
add
sub
aad
loope
stc
xchg
shll
aad
pop
xchg
lret
mov
in
xor
or
fwait
mov
jne
sub
push
lahf
jae
jecxz
arpl
in
orb
mov
xchg
fstpt
rcrl
xor
xlat
int
adc
mov
mov
testb
mov
movsb
sub
test
jecxz
popf
rcr
jno
sub
cmpsl
mov
jns
imul
loop
in
cmpl
mov
mov
xor
dec
divb
fistpl
fbstp
cmp
push
test
in
insl
out
iret
jo
ljmp
test
inc
cltd
loope
mov
je
cmp
call
xchg
cmpb
or
movsl
stc
or
pushf
push
or
mov
cltd
in
mov
int
sub
jmp
iret
or
dec
roll
pusha
arpl
xlat
test
fnstcw
ljmp
aaa
or
scas
jecxz
rcrl
loope
mov
pop
mov
lods
lret
int
and
inc
in
xor
cmp
es
shl
cs
lods
out
mov
xchg
mov
cmp
push
mov
orl
popf
xchg
kmovb
in
mov
or
in
cs
pop
fistps
fisttps
pop
pop
sub
pop
in
and
imul
mov
jmp
xchg
push
jmp
add
xchg
sub
add
leave
or
sbbl
leave
add
rcr
aam
or
and
enter
cmp
cld
mov
leave
inc
mov
mov
jge
mov
shll
adc
adc
fists
pushf
cmp
mov
pop
xchg
mov
sbb
sbb
imul
cmp
lret
std
stos
loop
jmp
sub
outsb
sbb
lea
sub
xchg
rcl
ret
push
lea
js
jmp
jae
fs
icebp
pop
mul
fsubrs
mov
dec
mov
mov
iret
inc
xchg
sbb
shrl
dec
aaa
daa
push
cltd
adcl
cmc
push
jecxz
cmc
int
sub
mov
push
dec
movsb
mov
mov
and
movsb
xchg
or
push
push
dec
xlat
sub
pop
sbb
lea
pop
xor
xchg
loope
aad
fldt
pop
mov
popa
outsb
jge
sbb
sub
jmp
fisttpl
dec
leave
fldenv
ds
loope
add
call
xchg
push
xor
rcr
aas
jecxz
ret
sub
xchg
aaa
dec
mov
frstpm(287
lods
data16
mov
sbb
mov
in
push
jecxz
xchg
inc
mov
test
fists
mov
mov
mov
ja
fiadds
sbb
sub
cmp
sub
xor
push
mov
loope
cmp
test
dec
xchg
cmp
push
mov
mov
jne
mov
iret
inc
scas
push
inc
in
rcll
inc
stc
jl
mov
mov
mov
scas
and
mov
int
fnstcw
xchg
fstl
xor
lret
xor
inc
fucom
mov
dec
inc
xchg
jne
in
push
arpl
ret
stos
jae
ja
imul
subb
xor
sub
sbb
jecxz
mov
test
stc
scas
cmc
jb
lahf
test
ret
arpl
and
push
push
imul
mov
rorl
fxam
mov
lea
xor
iret
cmp
and
in
fldt
aaa
test
popf
orl
shlb
inc
in
pop
imul
or
fildl
sbbl
icebp
sub
push
cmpsb
sbb
and
mov
jae
sarb
adc
out
dec
movd
movsl
xchg
leave
jbe
mov
or
int
pop
rol
xor
push
sub
jp
in
enter
and
jg
sbb
adc
jno
and
mov
negb
repnz
jno
adc
out
shrl
lret
ror
cmp
jecxz
inc
sbb
jl
orl
leave
dec
xor
mov
clc
adc
mov
popa
and
sub
ja
arpl
sbb
mov
orb
or
mov
pop
nop
lret
mov
dec
fwait
les
lods
iret
jmp
mov
xchg
scas
pusha
icebp
ja
stos
cmp
xchg
mov
lods
call
rcrb
xlat
xchg
jmp
add
stc
out
aad
lret
jne
lock
nop
mov
sub
loope
xchg
or
lds
cs
aas
daa
imul
xor
adc
or
cmp
and
ljmp
push
mov
stc
mov
insl
or
ret
xchg
das
subl
nop
cs
rcrl
xor
nop
mov
sub
add
lcall
insb
es
dec
mov
mov
insl
movsl
stos
or
mov
les
loope
fstps
fistps
push
and
adc
mov
sub
mov
pop
enter
jne
iret
imul
test
jno
cmpb
in
pushf
mov
inc
lahf
adc
rcll
mov
cli
test
decl
jnp
enter
jecxz
setne
dec
push
enter
test
mov
xchg
push
test
mov
in
int3
sti
lret
mov
fadds
adc
lea
or
stos
lods
cmpsl
scas
sarb
incb
add
out
lahf
xlat
aas
fstl
mov
in
fadds
out
test
sbb
decl
pop
lds
lcall
cmp
cltd
sub
out
cltd
sub
addr16
pop
cmp
sbb
mov
ja
jbe
mov
jmp
call
lods
in
cli
es
jmp
es
fidivs
enter
xor
aaa
and
lods
xlat
call
jmp
mov
nop
dec
inc
push
sbb
add
scas
test
in
mov
xlat
mov
ret
cmp
mov
jmp
shl
jns
jb
lds
stos
xchg
adc
leave
jmp
cltd
pop
push
movsl
or
scas
test
lds
cmp
xchg
fcomi
test
nop
sub
lock
pop
xchg
cli
jecxz
mov
jl
mov
imul
xor
in
sub
aad
jge
ljmp
xchg
bswap
scas
out
shrl
push
popf
push
add
scas
fstl
sbb
popf
cmp
lods
iret
in
lock
mov
push
xlat
sub
pop
in
mov
pop
sub
cmpsl
push
lret
pop
adc
push
mov
out
mov
shld
push
shll
andl
iret
cld
sbb
push
cmpsl
sarl
leave
js
jno
in
jmp
repz
lods
push
or
dec
mov
ss
imul
mov
and
push
adcb
adc
aad
cmp
das
arpl
out
and
test
fsub
ffree
sbbb
stc
in
mov
out
call
cmp
fbstp
and
lret
out
fxch
insl
mov
in
ret
push
data16
popf
mov
and
lret
lret
mov
xchg
push
mov
mov
cs
sti
cmp
push
stos
shll
cltd
shlb
cwtl
cmp
adc
orl
push
mov
in
std
push
fsubr
sub
scas
ret
lcall
and
mov
lock
adc
scas
outsb
add
rolb
shlb
cmpsl
add
addl
sub
or
lret
pop
loope
cmpsl
aad
xor
jecxz
in
and
xor
xchg
nop
lahf
mov
inc
pop
cmp
aas
scas
shl
int
push
pop
es
adc
push
frstor
nop
jbe
adc
fbstp
out
jge
enter
dec
out
dec
vmwrite
test
orb
or
cltd
leave
out
lret
lock
in
movb
mov
xchg
imul
in
fsts
xor
mov
mov
iret
loopne
xchg
dec
jp
mov
xchg
pop
mov
arpl
lret
ret
push
xlat
int
or
and
dec
popa
out
mov
mov
out
mov
in
test
inc
rcrl
aaa
and
int
shll
popf
mov
sahf
or
pop
xchg
test
inc
test
push
add
in
popa
xchg
dec
loope
add
scas
mov
mov
xlat
insl
dec
test
imul
enter
and
xchg
movsl
push
and
xchg
push
lret
mov
iret
lcall
test
inc
popa
fst
push
jnp
sub
cmpl
cmp
scas
adc
mov
and
xor
out
push
in
leave
movsl
push
push
or
js
iret
enter
add
inc
stc
dec
pop
notb
sbb
in
loope
andb
and
fldl
push
orb
or
sub
rcr
xchg
fcomip
jae
jns
stos
cs
push
icebp
add
movsl
xor
or
pop
xchg
fwait
jo
aam
iret
enter
cmp
loope
jecxz
push
lds
shrb
cmp
fstpl
negl
into
es
out
fwait
dec
lods
or
and
push
add
rcrl
mov
or
leave
aam
pop
xchg
jmp
jbe
fmulp
and
shr
push
jo
pop
je
xchg
loope
inc
inc
lods
scas
mov
leave
xor
rcrl
inc
lahf
pusha
lods
sub
outsb
fisubrs
push
dec
stc
mov
cmp
pop
iret
xor
xor
jbe
jno
in
cltd
cmpsl
jle
sahf
in
add
addl
fldl
xchg
dec
mov
aas
dec
jp
cmp
mov
bound
test
and
std
mov
jmp
rol
sbb
repz
shll
mov
bound
test
mov
jecxz
subb
ret
shll
cmpsl
arpl
xchg
jae
push
clc
sub
in
enter
lcall
pop
cmpsl
xlat
mov
aad
shrb
sbb
ret
fldcw
inc
dec
sbb
add
nop
movsb
add
lahf
fimull
std
sub
inc
xor
push
leave
push
or
xchg
jmp
sarl
int
in
dec
or
cs
xchg
arpl
ja
jmp
sbb
mov
hlt
stc
sarb
dec
divb
cld
mov
insl
das
dec
mov
jae
pop
stc
paddusw
iret
xlat
push
jp
lods
stc
mov
lea
and
test
imul
mov
movsl
sti
leave
fs
pushf
mov
xor
mov
dec
add
cmpsl
lock
test
lahf
or
sarl
jmp
sub
movsl
in
aad
callw
xchg
fwait
jmp
jge
xchg
sub
scas
sbb
aad
sbb
adc
test
or
mov
hlt
add
lret
out
into
xorl
cmp
ret
sbb
push
pop
mov
dec
movsl
adc
cmp
stos
ror
pusha
sbb
jmp
pop
aaa
fwait
shll
stos
jmp
mov
pop
sub
xor
mov
xorb
mov
pop
test
test
ret
psubb
xlat
fildll
es
lds
mov
adc
pop
in
or
mov
lret
cmc
fadds
push
test
mov
and
lret
movsl
add
aam
adcl
jmp
dec
cmp
mov
push
lea
or
mov
jmp
test
mov
int
sbb
lds
jno
or
and
mov
mov
inc
lods
jno
add
lret
mov
push
push
shr
or
fnstenv
inc
pop
mov
xor
add
mov
jecxz
sub
xor
shrl
rcrl
pop
das
xor
sbb
mov
addl
sti
imul
inc
pop
fnstcw
mov
adc
xchg
adcl
fwait
dec
movsl
outsb
cmpsl
test
dec
andl
fists
push
or
ds
sub
pop
sbb
mov
dec
test
push
cmp
arpl
lret
fucomip
push
mov
adc
mov
mov
mov
jecxz
xor
xchg
bound
cltd
stc
push
imul
adcl
jne
test
loope
ja
mov
aaa
imul
mov
je
xchg
pop
or
jbe
sub
int3
pop
mov
lret
bound
mov
pop
popf
or
pop
sbb
and
push
mov
mov
dec
cmp
or
add
mov
mov
repz
outsb
movsl
imul
mov
fsubrs
cmp
roll
xor
out
sti
pop
cmpsl
mov
or
movsl
test
das
test
jb
push
add
int
lods
xor
insb
xor
mov
xchg
or
jecxz
xchg
ffree
rcr
mov
sahf
pop
xchg
cmpsl
stos
shrl
and
mov
pop
push
insl
cltd
lds
or
test
push
fmuls
mov
lods
shrb
pop
mov
or
out
icebp
mov
ffree
sbb
insb
sbb
loope
outsl
sbb
ret
ret
inc
mov
in
sub
test
shrb
and
xchg
jecxz
pop
adc
sub
inc
push
pop
out
dec
xor
push
cmp
fcomi
jmp
sub
roll
imul
sbb
lods
sbb
pop
xchg
fisubl
jmp
sbb
clc
inc
cmp
xlat
sub
xchg
sbbl
and
iret
cmp
int3
fistps
xor
sbb
and
pop
popl
mov
lods
sub
cwtl
jb
add
lea
fnstenv
push
xchg
xlat
xor
in
jge
mov
out
xor
fadds
test
je
inc
fnstsw
cmp
out
jmp
or
in
push
xor
bound
ret
aas
mov
cmp
cmc
je
push
roll
dec
lods
push
xorl
jl
fcmovnbe
adc
iret
add
mov
mov
in
jecxz
test
adc
js
pop
loope
mov
fldl
filds
jecxz
inc
jns
adc
inc
inc
xchg
inc
js
arpl
or
mov
scas
in
mov
lahf
lea
mov
cs
loopne
inc
cmp
and
sub
adc
ret
and
out
cltd
xchg
leave
dec
scas
cmp
mov
mov
jmp
lret
jp
xor
or
sub
call
sub
mov
stc
mov
push
xchg
sbb
cmp
or
test
mov
jne,pt
stc
in
xchg
aas
ret
scas
mov
sbb
mov
fildll
adc
lods
push
sub
mov
setns
movsb
push
int
stos
mov
mov
out
lods
mov
pop
xchg
fwait
cwtl
out
push
push
lds
insb
lahf
fwait
scas
xorb
mov
sarb
sub
sub
loop
sub
mov
and
xchg
test
push
push
add
stc
jno
mov
out
scas
cmp
lods
loopne
test
mov
jbe
into
mov
cs
and
jno
mov
sbbl
lahf
fwait
pushf
arpl
ja
lcall
sub
sub
xlat
data16
jae
sub
pushf
pop
aaa
lret
fwait
test
sub
test
push
lea
ljmp
leave
xor
lods
cmp
mov
sub
jae
aas
cwtl
or
arpl
sbb
lahf
movsl
in
test
sub
sub
adc
popf
mov
jecxz
pop
inc
stc
and
xor
out
mov
xchg
xchg
addb
dec
push
pop
and
pushf
mov
mov
test
dec
fnsave
push
mov
popf
mov
xor
xor
jae
cmp
lods
jb
pusha
lds
fsubrs
mov
andl
or
fbld
add
sbb
jge
cmpsl
or
aad
fsubp
and
pop
mov
cmp
lea
aas
shr
mov
xor
xchg
into
in
fbld
mov
cli
rorl
jmp
shll
mov
fisubl
cmp
js
mov
xchg
loope
mov
mov
push
push
ret
clc
sbb
inc
mov
aad
test
lods
and
push
out
push
xor
adc
xchg
jnp
loope
mov
orl
jo
mov
xchg
jmp
in
xchg
test
pop
cmpsl
in
pusha
mov
jmp
jae
inc
mov
sbb
cmp
testb
popa
dec
imul
pop
xchg
xchg
aaa
jmp
fnstcw
lret
in
test
xor
and
jecxz
xor
stc
cmpl
push
push
cld
xchg
aad
test
mov
out
std
add
mov
arpl
sub
mov
mov
inc
jmp
into
cmpsl
int
jne
movsb
sbb
sbb
xor
mov
arpl
inc
xchg
iret
xchg
cmp
sub
or
xlat
mov
mov
cmpsl
or
scas
cmp
fisubs
xchg
sub
jmp
lahf
es
aas
push
xor
fmuls
leave
cs
pop
mov
std
stc
std
cs
int
rcll
cmp
fucom
fsubl
xchg
daa
dec
inc
rcr
fdivrl
lds
pusha
mov
or
cltd
jecxz
sub
iret
cld
mov
call
jg
sub
mov
test
jmp
aad
ret
sbb
push
add
xchg
scas
mov
adc
cmpl
lahf
xchg
xchg
or
sub
pop
jnp
fwait
mov
movsl
aad
jmp
push
mov
sub
test
jecxz
jne,pn
xchg
lret
fiadds
imul
xchg
addl
push
inc
daa
mov
xchg
fwait
jecxz
sub
mov
imul
or
sub
push
push
lods
sbb
inc
sbb
repz
stc
test
mov
xor
popl
out
aad
ficoms
jmp
mov
or
out
fstpl
loope
mov
lods
fstpt
lea
xlat
xchg
test
add
stos
push
rorl
fcoml
int
mov
mov
jge
lods
rorb
out
inc
push
or
in
push
fcmovnb
add
out
sbb
cmp
pop
mov
add
mov
xlat
cltd
cmpsl
imul
aad
mov
jg
push
mov
cmpl
out
cli
subb
push
out
cld
and
std
mov
inc
aaa
dec
cmpsl
mov
jmp
test
adc
adc
movsl
push
push
sub
loope
jmp
cs
cmpsl
or
xor
jno
xor
shll
pop
xchg
aas
mov
or
and
fstsw
lods
pop
mov
repz
sub
pop
and
mov
fabs
cltd
rcrl
iret
cmp
stos
popf
mov
loope
cltd
outsl
out
fsub
hlt
mov
test
lret
repz
bswap
fwait
es
cmp
in
divb
lds
das
test
mov
mov
stc
iret
enter
fildl
shll
xchg
xchg
sub
dec
push
iret
push
xor
and
sbb
repz
insl
cmp
mov
add
test
mov
sarl
cs
sub
add
stos
xchg
leave
jmp
cmp
xlat
or
jecxz
mov
movsl
ja
sub
lock
add
cmpb
bound
lods
test
call
sbb
cmp
aad
out
mov
fsubl
jno
rorl
cmp
fsubrs
xor
jbe
ss
xchg
pop
stos
and
mov
call
arpl
dec
xor
sub
adc
fninit
lods
xchg
add
lock
in
push
or
cmpl
dec
popf
mov
cmpsl
pop
movsl
jmp
pop
inc
inc
daa
sub
pop
pop
scas
shlb
test
rcrb
xchg
in
cmpsl
cs
pop
mov
lahf
fidivrs
push
lret
lcall
jecxz
inc
xchg
mov
sub
jmp
adc
xorb
pop
ja
sarl
aas
xchg
imul
push
stos
loopne
jmp
lret
sbb
js
xchg
lods
sub
sub
and
out
cmp
mov
jmp
lret
pop
inc
ja
sub
in
add
lahf
jecxz
pop
inc
xchg
ret
mov
ja
shr
lock
xchg
adc
loope
das
xor
inc
and
and
aaa
mov
xchg
arpl
clc
mov
sbbl
mov
or
sbb
jecxz
mov
es
push
pop
out
lods
cmpsl
test
or
shl
ret
aad
and
fnsave
xchg
cmp
lds
and
bound
inc
xor
aas
sahf
cli
out
push
out
shll
jno
ss
stos
pop
add
xchg
leave
jno
push
adc
mov
and
pop
push
sub
xor
iret
push
daa
xchg
xchg
xor
ljmp
add
pop
fwait
pop
sub
xchg
daa
enter
xorl
out
jno
sub
vpaddsb
push
movsl
inc
cmp
pop
aaa
je
push
push
shll
not
adc
pop
gs
sbb
lret
repnz
sar
popf
push
cs
pop
mov
subb
xchg
out
movsl
add
ret
aas
xchg
shrl
xchg
ret
jbe
cltd
cmp
data16
pop
not
sub
pop
sub
fisttpl
pop
xchg
add
hlt
xchg
leave
in
mov
std
out
ds
cmp
mov
int
outsl
es
lds
lret
push
scas
fdivrl
mov
es
xchg
push
loope
fucomi
inc
adc
in
int
lahf
andl
xlat
scas
mov
mov
test
in
lret
xchg
ja
inc
aad
sbb
std
aad
sbb
out
test
iret
push
cmpl
adc
or
sub
xchg
icebp
arpl
ret
fsts
lea
mov
xor
leave
lcall
in
fstpt
mov
in
movsl
xor
out
leave
or
and
mov
call
out
mov
lret
icebp
popa
jae
popf
scas
mov
and
out
shl
push
lret
jecxz
cmp
addb
pop
ret
cmc
stos
insb
jg
aad
push
sbb
fwait
mov
aam
add
adc
fwait
lods
fcmovnbe
mov
filds
pop
pop
pop
pop
test
mov
out
int
and
cmpsb
inc
test
lret
lods
dec
daa
leave
cmpsb
sbb
inc
aaa
sub
ret
cmp
in
inc
sub
mov
test
stos
push
cwtl
xchg
xor
xchg
xchg
aas
mov
sub
inc
lea
out
sub
adc
jp
lret
cs
jmp
int
lcall
dec
or
push
test
cmpsb
repnz
push
fmulp
fwait
scas
mov
xchg
sbb
lret
imul
or
ja
les
insl
xchg
cs
jmp
jnp
pushf
fcom
fcmovnbe
pop
test
push
in
lock
inc
stc
lret
gs
xchg
in
sbb
push
cmp
int
fisubrl
subl
dec
xor
leave
sbb
sbb
lahf
vandnps
sbb
lock
push
mov
mov
loop
neg
stos
in
push
popf
or
and
pop
lea
or
xchg
push
sub
cltd
or
adc
xchg
in
lods
or
aad
and
xchg
movsl
test
out
mov
imul
xor
push
cmp
test
mov
out
xlat
popf
fldt
mov
xor
mov
xchg
and
repnz
xchg
pop
movsb
pop
inc
mov
sub
cmpsl
pop
cmp
out
ret
lcall
adc
lahf
jmp
ret
sub
sbb
movsl
push
dec
test
lret
mov
loope
fbstp
out
add
jmp
xor
xchg
ja
cld
mov
sbb
sub
call
cmpsl
sub
push
xor
cmc
xchg
out
movsb
cmp
mov
popa
fwait
int
pop
out
rcl
test
loope
jns
sub
jmp
pop
mov
mov
pop
sub
mov
or
mov
popf
mov
or
loope
add
lds
cmp
subl
lods
add
cmp
stc
cltd
xchg
mov
fcmovnu
fwait
rclb
xchg
pop
test
iret
lret
push
xchg
nop
daa
addb
inc
movsl
in
fs
popf
lea
in
and
xor
xchg
movsb
mov
loope
inc
cmpsl
sarl
sub
stos
push
inc
rorl
push
inc
cwtl
mov
jmp
push
mov
rolb
daa
imul
lahf
sub
mov
iret
dec
dec
bound
mov
xlat
out
adc
aas
cmp
fcmovnu
in
pop
arpl
in
mov
pop
sbb
mov
ret
cmp
push
js
in
es
dec
xchg
mov
lahf
jmp
cltd
xchg
dec
pop
or
iret
fst
ja
pop
in
por
and
nop
fwait
and
mov
dec
arpl
sub
fucomi
and
xor
mov
fldenv
stos
cltd
fists
loopne
or
sub
in
rorl
rcl
pushf
and
pop
pop
sbb
sub
frstor
fwait
lea
fisubl
imul
inc
test
fcomps
fstl
lds
add
cmpsl
xlat
shrl
stos
xor
xchg
inc
xor
push
leave
mov
out
add
lods
fsubrl
inc
xchg
rcrl
xchg
sub
xchg
push
xchg
xchg
add
mov
fldl
scas
mov
and
xor
xchg
dec
mov
mov
imul
mov
lods
xor
mov
mov
subl
das
or
push
mov
fwait
jl
mov
dec
add
xchg
mov
jl
fsubs
hlt
sub
loope
lods
cmp
pop
fnstenv
sub
dec
out
arpl
pop
movsb
fildll
add
popa
stc
mov
xchg
int
out
push
adc
push
in
xlat
jg
cmc
loop
cmp
inc
aas
scas
pop
lahf
daa
arpl
test
or
test
cmp
stos
imul
stc
mov
and
push
sar
and
lret
mov
mov
xor
sbb
mov
mov
push
imul
aas
arpl
popf
xor
inc
rcl
pop
jbe
stc
or
es
in
sbb
loope
mov
orl
pop
popf
lds
test
xchg
enter
loopne
pop
mov
icebp
fsubs
jecxz
imul
mov
imul
pusha
stc
and
push
sbb
mov
lds
daa
mov
pop
ret
jo
fisubl
dec
lea
jmp
jmp
xchg
and
pushl
and
lahf
test
pop
ret
jb
sbb
pop
mov
xlat
pop
xor
lcall
and
pop
push
out
and
push
scas
lods
jmp
lock
and
je
or
push
loope
cmpsl
sub
cmp
lea
nop
in
xchg
leave
rol
xor
and
out
push
lods
lea
jae
mov
sahf
andl
mov
mov
and
dec
cmp
int
scas
popa
push
jno
jo
add
add
xchg
imul
cmp
arpl
dec
xchg
ss
adc
and
sub
stc
push
fldcw
rcl
iret
sbb
gs
and
xchg
movsl
or
cmp
and
lods
or
mov
in
test
in
cmpsl
or
sub
jmp
int
jne
orl
ja
sbb
push
jge
mov
mov
test
aad
icebp
inc
lea
or
outsb
ret
aam
test
mov
xlat
ffreep
arpl
popf
cmp
inc
sub
add
inc
int
jle
add
test
mov
daa
xlat
cmpsl
iret
mov
nop
js
adc
push
stos
shll
dec
sub
dec
mov
subb
pop
adc
roll
imul
int
out
mov
pop
test
in
lea
fmulp
xchg
and
xlat
out
sbb
sbb
push
hlt
lret
and
cwtl
cmp
mov
fndisi(8087
and
inc
lods
pop
lods
xor
adc
ja
xlat
mov
mov
out
pop
pop
std
jge
mov
dec
mov
jae
gs
ret
clc
repnz
stos
out
mov
pop
iret
test
cs
mov
test
and
test
mov
jnp
mov
mov
and
sub
add
popf
or
test
cmp
inc
fildll
adc
or
mov
pop
in
mov
mov
mov
imul
pop
cmp
stc
cwtl
or
scas
lahf
movsl
adc
push
mov
setne
mov
inc
daa
pop
ret
subl
sti
daa
or
cs
in
mov
fcomi
test
jae
lret
lea
call
sub
sbb
xor
stos
xchg
cmp
and
test
xchg
pop
leave
cmp
sub
outsl
pop
push
ror
lahf
inc
lahf
adcb
les
jp
movsl
out
imul
scas
lret
in
sub
in
add
push
jmp
cmp
lds
jge
xlat
icebp
test
mov
movsl
enter
and
push
mov
shr
in
rcll
xchg
xchg
jecxz
inc
cltd
enter
xlat
in
scas
lods
loope
gs
and
and
mov
test
mov
inc
jne
aad
inc
and
jno
mov
movsl
lds
jecxz
or
mov
sbb
notb
mov
in
ret
test
sti
out
mov
lahf
mov
xchg
xchg
imul
sbb
lahf
push
pop
sub
imul
popf
xchg
cmp
pop
cmpl
rcll
jmp
push
lahf
sbb
repz
into
pop
orl
lret
push
cltd
xchg
test
das
mov
xor
mov
mov
inc
or
loope
fildl
shll
lcall
call
les
push
sbb
loope
sub
pop
in
push
in
cs
leave
fiadds
push
and
push
popa
fwait
popa
cld
dec
aad
or
xchg
int3
or
and
or
out
int
fwait
cmp
cmp
fistps
sub
xchg
mov
push
and
rorb
repz
mov
or
mov
loope
fucomi
lret
test
adc
sahf
xchg
or
cs
shrb
or
dec
and
jmp
and
push
lret
xor
and
inc
xlat
cmp
leave
pop
mov
in
xchg
mov
and
test
int
movsl
pop
cld
das
lock
ss
cmp
xchg
dec
in
push
inc
xchg
add
ja
push
cmp
cmp
cmp
std
push
cmp
scas
pushf
int3
or
lret
cmc
dec
mov
cmpl
sub
adc
lcall
pushf
imul
mov
and
xor
mov
mov
jmp
lock
xor
mov
push
arpl
xor
jb
sub
dec
mov
lock
adc
lret
filds
shr
cmp
sub
pop
xchg
push
inc
mov
pcmpeqd
sbb
inc
cmpsl
fs
aas
cmp
daa
into
push
adc
inc
ss
jecxz
sub
cs
stos
mov
test
repnz
adc
in
leave
fnstcw
insl
xchg
pop
es
decl
mov
xchg
and
mov
sbb
xor
cmc
sub
sub
out
je
fistpll
leave
adc
fchs
iret
jl
popf
popl
mov
in
jl
sbbl
popa
cmp
pop
loope
fistl
sub
xlat
and
cmpsl
ret
xchg
filds
leave
mov
clc
shl
in
sbb
or
mov
popf
test
push
jnp
sbb
adc
shrl
out
or
rcrl
cli
cmc
int3
mov
fcos
xchg
sub
imul
inc
and
mov
ja
iret
icebp
xchg
push
lods
or
xor
test
adc
push
out
stos
xor
mov
push
lds
fwait
mov
pop
es
flds
dec
sub
sbb
mov
sub
pop
cltd
xchg
test
push
clc
push
sub
cltd
mov
pop
or
notb
js
fisttps
sub
rep
xchg
lock
loop
push
repz
inc
mov
cmc
popa
leave
mov
movsl
sub
int
rcrl
fbld
in
stc
sbb
add
lock
jecxz
popf
cmp
vphaddubq
dec
xor
cmp
hlt
or
xchg
xlat
leave
fbstp
fidivrl
xchg
dec
iret
cmp
divb
sub
in
sti
inc
roll
pop
leave
and
lret
xchg
loope
push
fwait
xor
xchg
stos
popf
in
lret
rcrb
shrb
lods
scas
sub
or
inc
add
cmp
rolb
pop
xor
push
stos
add
lret
pop
xchg
push
pop
addl
fimull
aam
mov
cwtl
sub
jnp
xor
clc
sbb
dec
xchg
out
or
cmpsb
fstpl
iret
hlt
lds
insb
mov
test
push
mov
movsl
and
lods
add
repnz
and
enter
and
test
or
daa
pop
adc
xchg
push
popf
jmp
popf
cmp
or
fists
push
xchg
cld
loopne
sti
loopne
cs
adc
ret
lahf
jmp
mov
movsl
push
jecxz
cmpsb
arpl
dec
aad
cmc
ret
mov
mov
inc
shll
lock
enter
mov
and
xchg
in
mov
aad
cltd
mov
or
leave
push
or
cmp
jno
das
scas
lahf
ret
aad
ljmp
sbb
scas
and
int
sahf
push
fsubr
sub
test
js
mov
imul
mov
adc
push
xchg
clc
imul
repnz
dec
fwait
jne
iret
dec
sub
ljmp
rcrb
cltd
mov
add
xor
iret
ret
sbb
icebp
or
sub
cltd
jmp
sbb
pop
cmp
imul
test
cmpsl
dec
mov
sub
mov
and
mov
fwait
add
cmp
mov
jecxz
pop
mov
test
idivl
cmp
loopne
xchg
cmc
mov
mov
jge
jmp
imul
mov
loope
fisttps
clc
push
in
pop
or
jmp
jge
popa
out
rcr
pop
jo
add
xlat
es
hlt
ja
pop
or
movsl
aaa
test
int
das
stos
mov
ss
mov
test
lea
nop
mov
fwait
test
cmpsb
push
cmp
ljmp
in
cmc
cltd
fnstenv
mov
adc
stos
in
xchg
fdivrl
push
lahf
mov
ficompl
xor
xchg
loopne
inc
cs
mov
cmp
popf
aas
movl
cmp
pop
loope
in
mov
iret
clc
push
mov
lods
mov
inc
dec
jmp
mov
arpl
sub
mov
cmp
sub
mov
sub
dec
cmpsb
push
lret
fwait
ss
mov
sub
rcll
mov
push
aaa
or
push
push
aaa
mov
pop
pop
pop
mov
cmp
mov
inc
in
shll
inc
mov
fldpi
int3
lods
leave
sub
rcll
clc
sub
or
in
jecxz
rcrl
sub
jge
rcll
fcom
test
scas
andl
lret
push
test
jmp
shr
dec
popf
cmp
bound
adcl
aas
inc
jne
or
adc
lods
fcmovu
add
xchg
pop
loop
mov
mov
stos
mov
mov
cmp
iret
fsub
js
sub
sbb
xor
dec
fcmovnbe
incb
lahf
shll
bound
into
cmp
pop
mov
mov
imul
shr
cmp
mov
in
dec
out
clc
pop
fstpt
and
inc
mov
lret
repz
sub
xorl
mov
mov
lret
jno
lods
loopne
or
loope
sub
bound
test
push
cmp
test
shr
filds
scas
mov
sub
lea
fdivs
roll
inc
add
mov
mov
movsl
sub
insb
scas
xchg
sub
xor
shlb
xchg
stos
das
dec
outsl
mov
cltd
cli
mov
xchg
jae
out
fs
arpl
mov
mov
out
imul
adc
pop
mov
sub
das
out
dec
xlat
in
jecxz
enter
imul
cmp
rcr
out
in
mov
lods
imul
adc
sbb
mov
stos
pop
int3
jbe
fnstenv
out
into
and
mov
lods
add
jmp
rorl
add
adc
out
scas
and
ret
cmp
lea
cmp
cmp
mov
push
sub
sbb
jecxz
push
xor
push
jo
jns
in
das
out
xor
fstpt
test
push
scas
xchg
push
mov
or
sbb
mov
pop
popf
in
sbb
cmp
xor
cmc
mov
mov
shll
lahf
mov
stos
cmpsl
adc
inc
lds
aas
mov
int
push
cmpsl
push
lcall
cltd
iret
test
aad
shrl
roll
pusha
push
in
repz
in
adc
cmpsl
enter
adc
lret
in
xchg
pop
fmull
shr
int3
and
gs
mov
aad
mov
ljmp
mov
out
mov
js
fcoms
jmp
in
test
decl
aas
mov
dec
mov
iret
ror
scas
jmp
lret
pop
cmpsb
add
in
rcrb
subb
ss
rclb
movsl
pop
call
dec
into
or
imul
jae
aam
imul
insl
outsl
cmp
fcmove
inc
fstl
cmpsl
test
cltd
int
push
adc
adcl
in
popf
insl
data16
jne
out
pop
cmp
imul
xlat
lea
mov
cmp
psrlq
jecxz
int
inc
pop
mov
test
cmpl
lahf
cmp
test
mov
pop
and
mov
es
cltd
jecxz
ret
mov
sbb
andb
fisttpl
je
cltd
cs
pop
xchg
and
dec
cmp
lds
aad
aas
sub
popf
imul
cmpsl
jmp
mov
in
sub
cli
add
fucom
xor
push
movsl
loope
sbb
adc
sub
lea
fld
push
gs
xlat
mov
sarl
in
cmp
xchg
loope
jge
in
inc
imul
jmp
cmpsl
lea
sub
dec
iret
leave
xor
and
mov
add
or
test
hlt
jno
adc
add
roll
xor
lods
std
jmp
sub
in
clc
cmpsl
xchg
adc
and
jmp
xchg
sbb
fistps
xor
push
or
dec
negb
in
shll
pop
cmc
cli
lret
sbb
pop
mov
daa
dec
lea
aad
and
xchg
movsl
xchg
fldl
or
out
fbld
movsl
test
into
push
push
ffreep
push
adc
fdivrs
or
dec
imul
ret
mov
fnstenv
cmc
adc
inc
mov
jo
test
scas
xchg
xchg
mov
add
jb
jmp
xchg
cmp
xchg
pop
mov
sbb
sbb
mov
sbb
add
iret
and
test
mov
mov
inc
stos
cmc
sub
ss
lds
xchg
test
test
shll
push
mov
mov
scas
in
into
test
aas
or
lods
testb
pop
imul
mov
adc
mov
iret
aad
lret
lret
xchg
push
out
jbe
push
in
inc
xlat
pop
pushf
push
dec
int3
andl
lcall
push
xchg
xchg
aaa
test
lahf
jecxz
fisttps
mov
mov
das
mov
inc
xor
popl
sbb
jns
lahf
aas
xor
fsubrs
arpl
jmp
adc
scas
leave
mov
in
aas
nop
cltd
imul
xchg
in
push
xchg
stos
movsl
sbb
dec
pop
push
int
ja
ficoml
jp
mov
xchg
xchg
cmp
mov
adc
sbb
sbb
stc
cmpsl
mov
cs
stos
lret
cmp
inc
xchg
arpl
mov
cltd
cmp
rorl
cmp
sahf
aad
jbe
xor
dec
sub
popf
xor
xor
pop
mov
movsb
mov
shrb
aam
push
or
popf
shrl
ret
sub
jmp
aaa
pop
cltd
movsl
in
push
stos
lds
lret
dec
xchg
xchg
or
sub
mov
es
icebp
subl
lret
leave
movl
sub
xchg
or
lods
jmp
cmpsl
cmp
test
or
cs
in
lds
data16
cmp
adc
adc
shrl
test
mov
stos
repnz
rclb
bound
movsl
sbb
mov
movsl
sbb
jae
and
sbbl
iret
jle
int
mov
mov
xchg
ret
sbb
xchg
lahf
mov
xchg
hlt
xchg
addl
add
or
testb
mov
pop
and
pop
mov
pop
jecxz
fldt
cmp
stc
lahf
shll
test
test
lods
arpl
pop
add
mov
pop
cmp
sub
loope
fwait
jmp
xlat
lret
sbb
leave
push
imul
sbb
fdivrs
rcr
jb
or
iret
int
rorl
lret
and
cmp
movl
mov
ffreep
adc
xchg
lahf
out
imul
mov
lock
js
std
scas
inc
in
roll
mov
js
and
fcmovnu
test
ss
xchg
mov
fwait
dec
jecxz
jmp
dec
inc
cs
hlt
out
mov
xchg
cmp
ret
push
mov
out
cs
ret
sbb
stc
sbb
xor
xor
lret
dec
xchg
aas
je
or
mov
stc
out
add
insb
and
test
sub
in
mov
xchg
ret
xchg
cmpsl
in
hlt
push
es
subl
lea
xor
in
inc
mov
add
push
mov
adc
mov
in
ficompl
jns
popa
or
sub
mov
mov
ror
out
xchg
outsb
in
cmp
imul
xchg
xlat
adc
dec
iret
jne
jmp
xchg
stc
add
pop
sbb
lea
test
stos
int
rorl
inc
mov
test
insl
xor
pop
inc
push
test
mov
out
in
cmpsl
fwait
mov
rcrl
cmp
test
stos
mov
adc
dec
rcll
icebp
xor
addl
test
and
mov
xlat
pop
aad
rcr
xchg
add
in
jecxz
fldl
push
add
mov
push
mov
shl
fs
xchg
push
subl
mov
inc
xchg
ffreep
iret
cmpsl
test
rol
dec
mov
cs
xchg
nop
sub
test
mov
ja
xlat
shll
mov
cli
arpl
or
and
mov
mov
aam
pop
lods
orl
mov
clc
fsubl
fucomi
scas
pop
ror
and
in
fistl
adc
xor
jae
sub
je
sbb
adc
test
mov
fwait
popf
jmp
cmp
pop
cmp
daa
push
mov
es
xor
and
shl
sarl
adc
hlt
int3
push
lret
jbe
push
sbb
das
je
and
sub
inc
mov
lds
cmp
mov
mov
popa
xlat
sub
dec
push
out
movsl
push
outsb
pop
xchg
pop
lea
call
xchg
stc
lds
js
xor
leave
cltd
std
out
mov
dec
out
fisttpll
test
insl
sub
scas
incl
xlat
push
or
test
repz
dec
enter
jmp
inc
jbe
lret
dec
addl
daa
and
orl
pop
mov
pusha
fwait
xchg
mov
in
sbb
xchg
xor
pop
pusha
add
jecxz
lds
push
out
arpl
stc
add
cmpsb
cs
loope
mov
pushf
inc
lock
mov
dec
test
in
mov
and
ss
inc
push
push
pop
pop
mov
sub
jmp
in
adc
orb
insl
mov
stos
pop
sub
mov
push
stos
mov
lcall
addl
pop
mov
xchg
adc
int
or
in
and
popa
loope
inc
call
xor
insl
lods
and
mov
pop
fwait
lahf
aad
or
test
cmpl
mov
leave
mov
mov
out
pop
xor
mov
adc
stos
arpl
in
sub
fld
jp
or
jl
stos
pop
push
sbb
fbstp
push
or
dec
std
inc
jge
sub
or
xlat
mov
lods
sbb
pop
sub
sub
xchg
or
jecxz
scas
out
cmc
test
fwait
test
mov
mov
insl
inc
outsl
dec
pop
loope
xchg
mov
mov
icebp
pop
cmpsl
jmp
dec
sub
aam
rcll
mov
test
xchg
pop
sbb
push
das
push
movsb
pop
or
das
ss
fsubs
lret
movsl
pop
arpl
subb
ret
xchg
scas
dec
in
sub
mov
es
add
inc
pop
mov
adc
movsl
stos
clc
ficoml
mov
shrl
arpl
mov
test
xchg
je
xchg
gs
stos
jb
imul
fstpl
xchg
sub
inc
cmp
adc
leave
mov
jecxz
lods
fisubrs
mov
sbb
mov
gs
mov
pop
jbe
sar
mov
scas
fistl
test
xor
movsl
leave
adc
data16
dec
mov
sub
dec
xchg
cmp
stos
cmpsl
fnstsw
sub
jb
sbb
rcrl
adc
cmp
ss
xchg
loope
ret
sahf
ret
push
test
mov
dec
stc
pop
cmp
cmp
fldenv
popf
test
shl
or
cmp
leave
mov
add
mov
jne
and
int
cmp
arpl
mov
xchg
lods
jmp
mov
clc
or
mov
popf
push
xchg
adc
lret
test
jbe
mov
xchg
es
mov
push
or
popf
cmp
lahf
in
insb
int
sahf
pop
fwait
icebp
ret
scas
adcb
lret
jecxz
cs
jle
sar
mov
daa
cmc
adc
xor
out
cmp
push
cmp
test
pop
and
xor
mov
out
sbb
pusha
loopne
into
xor
push
mov
xlat
es
or
push
push
inc
ljmp
stc
cltd
in
jno
sub
push
xor
inc
jecxz
fs
jmp
jecxz
add
pop
cltd
and
dec
ja
loope
inc
fsubl
lahf
inc
push
mov
addr16
and
ret
rolb
cltd
in
scas
adc
mov
in
test
das
or
stc
popf
mov
sbb
jmp
popa
stos
pop
push
mov
clc
rclb
pop
push
arpl
nop
sub
pop
adc
xchg
jb
in
mov
in
andb
scas
pushf
fisubs
inc
gs
ror
imul
rcrl
cmp
stc
mov
add
sub
sbb
xor
mov
ja
int
imul
push
mov
sub
int
or
leave
jne
jecxz
and
xor
push
mov
or
mov
loopne
or
adc
cmc
xchg
mov
stc
cmp
sbbl
add
ret
and
ret
ret
jne
sub
adc
sbb
dec
mov
adc
cli
arpl
in
test
push
or
lret
int3
mov
xchg
ret
mov
push
and
roll
repnz
dec
stc
mov
pop
jno
xor
xchg
bound
gs
and
jmp
test
daa
mov
cmpsl
sub
jecxz
or
mov
out
mov
xor
sbb
sub
aam
das
shrl
cmpsl
dec
in
lods
sub
pusha
stos
sub
mov
test
mov
pop
in
lcall
aas
ss
inc
mov
pop
sbb
pop
imul
stos
jmp
test
daa
aad
ja,pn
stos
scas
mov
xchg
jne
cmpsl
sub
mov
rcll
aad
xor
cmp
xchg
dec
xor
loope
test
mov
sarl
in
daa
mov
out
and
outsl
xor
xchg
mov
iret
leave
cwtl
leave
cmp
enter
flds
xchg
mov
movsl
mov
iret
insb
fwait
pushf
mov
es
pop
push
sbb
pop
sbb
jno
push
flds
adc
ss
xchg
sub
std
xchg
addb
pop
xor
stc
and
js
xchg
mov
fisttpll
shlb
push
pop
mov
xlat
mov
shrl
ja
iret
xor
sarl
daa
mov
fxch
aaa
jae
fcmovnbe
mov
and
push
and
dec
mov
sub
in
mov
sbb
mov
mov
mov
das
and
clc
fstp
lahf
test
cmp
push
clc
iret
int
cltd
fmuls
xchg
lods
mov
add
insl
rcrl
jmp
outsl
sbb
cmpl
cs
shll
testl
int
popf
dec
pop
mov
and
and
cmpsb
or
stos
iret
or
mov
mov
vpavgw
xor
mov
incl
sub
das
andps
dec
js
int
rcll
jne
out
mov
jge
in
leave
imul
push
or
icebp
sub
in
popf
sub
fsub
lds
imul
or
jmp
mov
sahf
sbb
movsl
pop
and
mov
in
cmc
xor
test
jl
or
add
jecxz
repnz
stc
add
popl
int3
leave
leave
fnstenv
ret
and
es
sbb
xchg
in
add
dec
lods
pop
adc
mov
and
jecxz
cmp
sub
fisubrs
lods
iret
xchg
nop
das
xchg
mov
lret
int
fldt
xchg
dec
push
scas
fidivs
gs
movsb
mov
test
imul
es
popl
jge
pop
or
mov
dec
add
scas
lea
stc
mov
out
sub
jmp
pop
xchg
add
add
sub
incl
push
or
test
scas
cmc
pushf
jmp
push
sub
mov
aad
cmpsl
and
sbb
pop
inc
call
in
loop
cmc
cwtl
rcrl
test
leave
jecxz
filds
insl
mov
stc
mov
std
mov
test
aad
mov
iret
and
adc
popf
xor
lcall
sbb
clc
mov
movsl
mov
push
rcll
in
insl
ret
enter
xlat
scas
pop
cmp
sbb
out
sti
xor
rcll
add
sbb
imul
jl
sbb
mov
adc
pusha
push
popa
fbstp
jmp
movsl
ret
lret
cmpsl
out
mov
add
dec
jg
pusha
js
cmpsl
insl
jecxz
mov
jb
pop
in
scas
or
lahf
push
push
pop
mov
inc
and
pop
in
les
push
subl
push
jg
rcrl
mov
inc
xchg
test
stos
xchg
mov
rcr
ss
jg
cmpsl
xchg
push
imul
arpl
xor
loop
shrb
inc
fldcw
dec
mov
outsl
fbld
loopne
pop
push
inc
sub
pusha
imul
shr
ffreep
lds
jae
mov
lret
pop
jl
es
rcrb
lcall
mov
aaa
xlat
lds
pop
jae
mov
stos
xor
xchg
test
test
and
sbb
scas
out
int3
inc
or
lret
sub
pop
and
sbb
test
dec
test
pop
int3
cmpsl
and
sbb
jge
add
out
jae
in
push
mov
das
cmp
inc
cwtl
and
adc
cltd
xchg
cmp
sub
ret
xchg
fildll
loopne
data16
rorl
xor
iret
cmp
or
sub
cmp
sarb
cmp
sbb
rcr
adc
andl
movsl
mov
mov
in
sbb
xor
movb
mov
xchg
lods
cmp
lret
test
mov
jbe
sbb
pop
dec
shll
popf
rorl
cmp
and
popl
stc
rcrl
sbb
jns
fwait
xchg
test
iret
mov
sub
lods
adc
mov
cwtl
and
mov
test
sbb
lds
cmp
dec
jo
sbb
sbb
xchg
cs
sbb
xchg
xor
xchg
es
inc
out
pop
in
mov
lods
sub
mov
jmp
pop
shlb
xchg
lcall
lock
shl
mov
aas
jno
push
clc
lods
loope
xor
and
test
leave
mov
jle
xchg
cs
es
jne
sub
cmp
and
fwait
mov
xchg
mov
adcl
add
loope
cmp
xchg
imul
xor
add
lret
aas
sub
lahf
jne
xchg
dec
and
mov
pop
orb
adc
sub
test
int3
in
push
xchg
leave
aaa
mov
cmpsl
cmp
pop
stos
scas
sbb
enter
pop
sub
sub
jecxz
mov
adc
xor
fnstcw
aaa
insl
sub
icebp
enter
and
xchg
lahf
pop
idiv
popf
test
xlat
mov
adc
lret
hlt
adcb
test
out
stc
loope
roll
or
push
sahf
sub
mov
sbb
fstpl
push
push
cmp
mov
rcrl
loope
or
rcrl
cmc
sbb
test
cmp
jne
cmp
insl
sub
mov
jae
jecxz
jg
sbb
mov
jae
loopne
push
xor
fldl2t
xchg
mov
xchg
push
ret
leave
test
fmul
mov
adc
jo
test
popf
pop
dec
lds
fs
mov
out
orb
mov
xchg
test
popf
sbbl
in
push
xchg
or
adc
xorb
sub
fiadds
test
mov
add
cs
cmp
mov
cmpl
xchg
out
dec
cmp
cmp
sub
xor
ret
fistl
jne
cmp
and
pop
in
pop
push
rorl
fbld
lret
xchg
shr
add
cltd
into
lds
mov
ret
aas
and
loop
mov
lock
testb
mov
xchg
and
rol
pxor
ret
xchg
mov
mov
cmp
pop
push
sbb
and
dec
push
mov
into
iret
adc
rorl
imull
clc
ds
bound
push
test
sbb
lahf
in
xchg
adc
jecxz
or
rcr
pop
mov
jmp
xchg
lds
aam
int
mov
sub
cmp
mov
loope
jl
push
jmp
jmp
fwait
out
pop
push
xorb
and
test
stc
sub
nop
dec
repnz
and
pop
subb
and
pop
roll
mov
jmp
fldl
mov
xor
imul
cmp
push
mov
frstpm(287
int3
mov
aad
popf
int
mov
inc
mov
mov
test
or
loope
inc
and
scas
push
popl
in
jae
pop
in
leave
loopne
inc
es
scas
ret
sub
iret
je
jne
insl
movsl
rcrl
xorl
mov
iret
in
xchg
pop
int
sub
or
jmp
mov
sbb
testb
iret
insl
dec
and
fwait
int3
pop
sbbl
daa
loope
in
loop,pt
fsubrs
mov
out
sarl
mov
fnstcw
lds
and
xchg
movsl
in
into
sub
push
push
aam
lret
mov
scas
pop
dec
cmp
outsl
mov
aaa
mov
xlat
in
or
adc
xchg
fnsave
jmp
popa
fbld
test
cmp
fwait
daa
test
adc
xchg
mov
test
call
fbstp
js
dec
jg
popf
xchg
repz
lret
movsl
sub
mov
push
sub
imul
xchg
out
jae
outsb
andl
addr16
cmp
enter
mov
movsl
es
mov
cmp
mov
scas
cmc
add
dec
xor
add
cmp
ljmp
xor
fisttpl
cmp
int
imul
jno
lret
and
out
mov
fscale
mov
push
mov
scas
insl
scas
fwait
lea
mov
fildll
iret
bound
aad
xchg
fistl
aad
lea
mov
int3
adc
fadd
flds
push
jecxz
add
lds
xchg
scas
mov
and
jo
lock
imul
and
test
jge
xor
xchg
sub
testb
aad
cmpsl
xor
ljmp
nop
push
in
jbe
dec
test
int
xor
enter
lods
xchg
add
sbbl
sub
lahf
sub
pop
sub
dec
nop
inc
popa
lcall
dec
stc
push
adc
es
mov
daa
shll
aad
xchg
xor
lods
std
iret
iret
jge
test
cmp
lret
push
cltd
leave
lahf
cmp
mov
loope
stc
fistl
xchg
adc
xchg
sar
test
popa
ljmp
gs
mov
mov
lea
call
loope
pop
xlat
jecxz
das
push
fcomp
adc
push
xor
scas
pushf
sbb
mov
out
pop
loop
sbb
in
jne
sub
leave
xor
lods
push
and
aad
arpl
stc
fcoml
pop
pop
add
ss
xor
and
daa
movsl
fbld
push
rcl
clc
in
lret
out
ret
enter
fildll
iret
cmp
cltd
mov
aad
xor
or
andb
cmp
mov
movsl
sahf
jae
xchg
mov
sub
fwait
int
cmc
das
test
loope
sti
leave
test
add
loope
out
mov
pop
rol
sub
cmpsl
outsb
sbb
push
stc
mov
sub
mov
aad
push
mov
push
or
faddp
push
dec
imul
jmp
stos
shrl
cltd
cmpsl
mov
mov
flds
push
and
lods
out
sub
out
add
mov
and
rcrl
mov
cmp
rcr
inc
xchg
in
and
push
clc
ljmp
sbb
mov
push
cmp
pop
lds
scas
sub
sbb
xchg
lea
in
add
test
xorl
cmp
stos
repnz
inc
cwtl
shll
outsb
or
lret
sub
pop
in
sbb
mov
inc
dec
mov
mov
frstor
push
mov
imul
sub
and
push
pop
jae
std
loop
pop
call
mov
test
repz
stos
out
cwtl
frstor
arpl
inc
mov
lahf
fildll
stc
xchg
jmp
mov
lods
mov
push
sbbl
add
lret
mov
push
popf
rolb
leave
xlat
jecxz
stos
iret
mov
subb
popa
movsl
xchg
fwait
push
iret
lock
sbb
rorl
lret
int
in
fwait
push
jge
and
dec
or
in
jecxz
int3
xor
and
movsl
xchg
clc
mov
out
lret
adc
mov
aad
xchg
push
out
ljmp
sub
pop
notl
aad
leave
mov
sbb
inc
lret
fstps
xlat
test
mov
dec
aad
loopne
es
mov
fdivs
in
xor
adc
test
pop
cli
sbb
mov
inc
pop
adc
fnstcw
or
mov
mov
inc
push
fimull
in
push
roll
in
movsl
inc
add
mov
sub
xchg
xorb
int
jle
jecxz
mov
sbb
cmp
out
adc
sub
xchg
push
cmp
into
pop
xor
fwait
pop
push
addb
push
adc
in
mov
rol
mov
jnp
xchg
sub
aam
sub
mov
inc
test
pusha
mov
mov
pusha
adc
xchg
pop
mov
popf
int
add
ja
shl
in
fnsave
mov
je
je
out
cmpsb
lahf
mov
in
mov
adc
cmp
icebp
in
add
shl
inc
test
fsubrs
sbb
in
pop
insb
sub
out
out
mov
xlat
sub
or
xchg
stos
inc
cmc
imul
int
and
in
adc
mov
jmp
fstps
subb
jle
lahf
cmp
fldl
mov
or
pop
cs
ret
mov
ds
movsl
sbb
mov
add
cmp
xchg
or
mov
push
iret
scas
test
cmp
int3
mov
leave
add
out
pop
sub
dec
pop
mov
cltd
std
in
ljmp
jg
dec
mov
mov
out
rorl
jne
movsl
jge
aad
out
add
push
cli
xor
cmp
jecxz
in
lea
mov
or
inc
sbb
imul
clc
loop
shll
xchg
imul
adc
or
mov
or
push
or
repz
push
pop
mov
lcall
push
aad
fldpi
ljmp
mov
in
ja
mov
repnz
mov
xchg
popa
in
fwait
js
rol
cmp
pop
in
sub
popa
lahf
aas
xchg
in
inc
adc
pop
cmp
pop
cmpsb
sbb
hlt
sbb
xchg
and
mov
aad
testb
pusha
sahf
jae
int
inc
cmp
lods
es
popf
sub
pop
sti
adc
or
xchg
pop
arpl
xlat
or
sub
movsl
jg
out
insl
lret
outsl
cmp
popf
lds
rorl
jnp
in
cmp
aad
mov
mov
mov
push
das
cmpsb
call
pop
or
lret
mov
push
jae
inc
mull
xchg
push
and
shrl
loope
xchg
sub
movsl
shrb
xor
in
add
mov
in
cltd
add
xor
mov
xchg
dec
add
out
inc
cs
lret
mov
sub
icebp
pop
scas
cmp
nop
rcll
pop
out
lahf
lock
mov
push
xchg
mov
mov
cmpsl
stos
movsl
fwait
jb
inc
lret
push
mov
cltd
cld
xor
push
sub
iret
mov
pushf
jno
xor
cmc
push
xlat
and
les
pop
insl
out
ret
sbb
lret
mov
sub
xchg
lds
inc
cmp
repnz
in
cmp
lret
add
xchg
lea
pop
cmp
iret
jnp
sub
insl
add
pusha
test
push
stc
popf
loopne
jge
cmpsl
int
adc
cs
cmp
lea
mov
mov
mov
mov
out
stc
cmp
mov
test
fsubrl
cmp
pushf
jl
enter
or
fwait
aad
lret
dec
cli
pop
and
stc
sub
std
fisttps
xlat
in
sbb
adc
lods
es
stos
push
sub
cmp
xor
lahf
iret
dec
inc
movl
scas
ljmp
imul
lds
xchg
cmpsl
and
js
loope
stos
mov
and
mov
cs
xlat
xchg
jecxz
fisubrs
sbb
stc
xor
out
push
or
jmp
jecxz
loop
stc
notb
xchg
leave
mov
aas
cmpsl
out
orl
lret
test
pop
and
inc
lds
rcrb
mov
pop
sbb
ss
pop
and
js
jae,pn
sub
add
sub
sbb
aas
iret
sbb
mov
mov
out
insb
imul
cmp
xchg
cmpsl
and
aad
cwtl
dec
movsl
out
adc
fwait
pop
jne
test
mov
dec
fcom
jmp
stc
dec
dec
inc
icebp
repz
sub
mov
lods
push
sbb
out
enter
sub
in
dec
push
enter
push
mov
lods
shrb
ret
and
push
imul
out
sbb
test
xlat
testb
aas
inc
pop
jecxz
xor
sahf
out
push
dec
jnp
aaa
mov
in
in
iret
cmp
sub
popa
lahf
shrl
loopne
adc
fnstcw
loope
ja
das
add
fistpl
loope
sub
scas
enter
ret
cli
cmpsl
dec
repz
loope
push
adc
icebp
pusha
push
jne
jbe
dec
pop
pop
sub
into
aad
loope
cmc
xchg
shrl
arpl
in
int
jb
mov
sub
mov
sbbl
jl
rcr
jge
pushf
and
or
xchg
out
cltd
or
iret
in
and
or
stc
or
jmp
lds
ljmp
imul
fndisi(8087
imul
push
add
cmp
xchg
xor
mov
test
loopne
mov
repnz
and
ret
mov
es
mov
aad
ret
out
mov
fnstcw
xlat
test
leave
scas
pop
dec
mov
mov
mov
cs
add
sub
and
sub
popf
stos
adc
mov
fisttpl
hlt
in
or
mov
test
ret
mov
xchg
jmp
mov
sub
test
out
jb
sbb
sub
jecxz
cmp
iret
sub
dec
test
sbb
push
in
cmp
fxch
xor
mov
xchg
cmpsl
aad
js
xchg
test
mov
pop
mov
arpl
pop
mov
pop
xchg
js
fwait
out
mov
mov
incl
sub
cmc
ret
mov
fildll
subl
vcvtps2dq
dec
add
shll
adc
es
fcmovne
sbb
or
dec
pop
scas
sbb
xor
xchg
adc
xchg
dec
jmp
leave
add
in
cltd
stc
jbe
xchg
mov
pop
dec
in
out
loope
push
jo
fwait
in
pusha
pop
xchg
clc
test
in
push
mov
jne
cltd
fsubs
jmp
cmp
push
mov
fwait
lahf
push
movl
fimuls
sbb
test
cmp
scas
lds
jae
movsl
xchg
in
jge
rcrb
pop
out
in
xchg
dec
cmp
push
rorl
adc
push
das
scas
or
push
rcrl
test
sbb
jmp
stos
lcall
mov
mov
cmpsb
dec
push
lret
es
call
sbb
pop
stos
mov
sbb
out
dec
ftst
hlt
xorl
add
pop
popf
scas
jmp
and
lods
add
test
call
int3
push
adc
and
jle
lea
lds
cltd
mov
and
pop
shll
push
lods
jbe
dec
pop
xchg
stc
mov
mov
xor
out
mov
mov
xchg
cs
dec
movd
sub
mov
repnz
shlb
mul
mov
ss
jge
jmp
movsb
xor
or
lds
aaa
add
dec
cltd
cmpl
inc
sbb
popa
xchg
cmp
inc
jbe
outsb
jb
push
bound
lea
pusha
lahf
in
lret
cmp
iret
xchg
pop
lea
cmp
leave
lods
scas
cmp
mov
fisttps
scas
call
mov
mov
sbb
loope
pop
lahf
movl
xchg
lds
shll
filds
ftst
sarb
in
imul
je
push
rolb
cltd
cmpsl
push
in
push
adc
leave
rclb
cltd
movsb
xchg
imul
stos
cld
mov
mov
movsl
fabs
xor
sub
std
popf
push
lret
lods
int
push
cmp
xor
lcall
icebp
sbb
sbb
rol
lret
jns
roll
push
ffree
sub
fwait
and
push
xor
roll
sbb
push
jg
push
and
lods
ror
push
jne
out
flds
mov
mul
cmp
fstpl
mov
aad
lret
test
std
jmp
inc
iret
unpcklps
lods
cmc
call
stos
sub
mov
rcrl
fcompl
mov
ret
mov
pusha
xchg
dec
adc
int
mov
adc
stos
lret
mov
jmp
inc
add
adc
loop
popf
xor
sub
sbb
mov
lcall
mov
push
pop
insb
cmp
dec
fadds
filds
test
pop
fmul
lds
fwait
stc
adc
repnz
xchg
fs
fdivrl
cmpsl
leave
jge
mov
imul
cmp
push
or
andb
jecxz
shlb
push
mov
mov
sbb
shll
aad
and
sub
fists
pop
adc
xlat
sarl
subl
sub
cmc
xchg
cmp
cmpsl
out
cmp
iret
daa
jne
iret
in
in
in
lock
mov
lock
and
aam
test
lods
mov
lret
out
in
scas
xor
loope
cmp
aaa
aad
scas
and
add
xor
add
inc
hlt
mov
dec
cmpsl
xor
in
stos
sub
dec
xchg
jl
repnz
jecxz
call
xor
ror
and
fisubrl
xchg
mov
jmp
daa
popf
arpl
jo
inc
sub
sbb
dec
xchg
ja
mov
mov
iret
inc
jne
out
xor
jmp
add
aad
sub
and
rorb
add
faddp
iret
mov
and
lret
in
clc
mov
leave
sbb
cltd
lds
aad
fs
insl
orb
dec
out
xor
es
lds
cld
jge,pn
ret
xchg
cmp
aad
jmp
imul
popf
in
cmp
pop
popf
cmp
stc
test
in
mov
adc
push
arpl
jl
mov
pop
fld
mov
out
xlat
data16
sub
cltd
test
test
dec
mov
lret
gs
outsb
or
enter
xchg
or
and
out
dec
lret
jecxz
mov
jno
movsl
ss
xchg
in
mov
leave
jg
push
in
xlat
shl
test
and
jb
andb
mov
adc
ret
sub
frstor
mov
mov
xor
stos
mov
xor
imul
and
out
xlat
lcall
clc
orb
push
jae
xchg
ret
xor
xchg
aad
loope
xor
xchg
aad
test
and
mov
sub
pop
lahf
or
mov
mov
cmc
jno
xorb
sti
adc
fldl2t
xchg
inc
cmp
movsl
in
xchg
mov
fisubrl
xchg
std
cmp
test
sub
jo
pop
daa
mov
pusha
mov
xor
stos
or
or
sbb
add
cmp
iret
push
lret
fnstenv
sub
popa
fcmovnu
orl
pop
fadds
idivl
or
movsl
test
sbb
push
push
repnz
in
arpl
dec
push
fbstp
stos
xor
iret
inc
int
sub
cmp
in
xchg
test
push
fbld
arpl
ss
lds
inc
out
testb
jecxz
int3
clc
or
lret
pop
cmp
int
or
mov
aad
push
inc
test
lret
cmp
xchg
stc
mov
pop
ror
dec
jmp
lods
das
lea
push
subb
sub
dec
fwait
and
inc
mov
shll
sub
iret
cmp
adc
mov
cmp
lea
mov
jne
sar
xor
movsl
jmp
lods
mov
push
adc
or
incb
pop
cmp
and
lahf
xchg
add
cmp
xlat
xor
adc
sbb
pop
test
mov
pop
mov
adc
mov
and
pop
lahf
subl
fstl
sub
sbb
pop
mov
cmpsb
dec
and
fsts
fstl
fdivs
xchg
test
add
push
pop
mov
cmp
popf
ror
sbb
sub
mov
stos
nop
sub
xchg
mov
out
xchg
jecxz
rcrl
adc
test
dec
xlat
rcr
adc
sbb
or
out
mov
jne
subl
andl
mov
and
xchg
jae
fldl
out
sub
xchg
aad
push
mov
mov
sbb
sub
sub
iret
repnz
mov
rcrl
xchg
fucomp
push
bswap
and
fsts
dec
push
lea
push
jge
stc
xor
fs
xchg
dec
inc
jno
jmp
test
mov
into
fcomp
mov
in
in
push
ret
daa
sub
mov
lods
and
movsl
out
fs
scas
push
aam
sub
rcll
cmp
push
and
cltd
mov
mov
aad
scas
in
cmc
xor
stos
test
add
aad
in
xchg
push
in
test
push
xor
loopne
loope
popf
inc
lahf
fisttpl
lods
pop
fldcw
out
and
xchg
cmp
push
outsl
testb
cmc
ja
repnz
rolb
dec
mov
imul
rcl
popf
xorb
mov
call
and
sbb
xor
stos
test
in
test
fdivrs
ret
lods
jecxz
inc
xchg
sbb
shlb
les
sarb
fisttpll
loope
jne
sahf
push
mov
push
mov
pusha
mov
mov
das
mov
fs
imul
in
push
aam
int
add
loope
adc
nop
mov
aad
and
cltd
sbb
das
inc
cmp
cmp
xor
movl
lods
ret
leave
sbb
or
int
popa
sub
stc
test
xchg
movsl
fcoms
gs
bound
imul
stc
jecxz
and
mov
jnp
xlat
sub
gs
jne
cltd
stos
jmp
in
adcl
mov
mov
popf
mov
icebp
pushl
pop
and
shl
cmp
es
iret
pop
jge
push
popf
les
rdmsr
into
test
fcmovb
es
enter
jle
shlb
push
pushf
leave
int
sbb
sub
xlat
jmp
xchg
or
pop
or
mov
inc
xchg
sub
push
push
out
stos
sti
sbb
fwait
cltd
cmc
push
jecxz
xchg
xor
jmp
aad
and
lea
pushf
pop
and
dec
xor
stos
loope
mov
push
push
fiadds
sbb
aaa
cmpsl
jmp
xchg
cmpsl
aas
js
xchg
jb
fcompl
push
and
sarl
mov
xchg
push
xchg
mov
mov
add
in
test
lea
xchg
adc
fidivrs
pop
aas
sbb
test
shrl
into
jo
sub
test
jb
mov
pop
loopne
add
sub
in
mov
divb
pop
hlt
pushf
cmc
andl
data16
push
rorl
loope
xchg
pop
xor
loopne
rcll
sub
mov
push
mov
push
mov
insl
mov
test
out
or
in
ret
popa
sub
popf
pop
sub
inc
mov
mov
rol
xchg
mov
mov
inc
inc
xchg
mov
push
adc
fldcw
shl
aas
mov
in
mov
cmp
sbb
lds
addr16
mov
jbe
pop
dec
mov
lret
push
popf
fsub
xchg
cltd
pusha
test
dec
rcll
das
adc
xorl
xchg
imul
adc
fwait
sub
jl
fsubrl
fidivs
cmpl
data16
insl
fadd
jmp
data16
dec
and
enter
outsb
and
and
xor
jmp
lcall
cld
movsl
jl
ret
push
je
inc
dec
xchg
cmpb
out
imul
fcoml
push
jmp
lock
subb
sub
fs
rcr
jo
cmp
fwait
inc
decb
cmp
adc
sbb
dec
loope
cmp
aad
xlat
das
dec
push
filds
nop
xchg
adc
movsb
out
lock
jp
adc
sub
mov
lcall
jp
fwait
xor
clc
cltd
jp
push
pop
sub
push
xorb
enter
shlb
pop
inc
loop
mov
ja
jmp
sub
or
rol
cmpb
sub
and
xorb
inc
lock
in
xorb
inc
dec
mov
push
data16
jle
cmp
lock
in
popa
sub
adcb
in
sbb
inc
test
inc
cld
add
mov
std
jo
out
les
xorb
lea
out
adcb
lea
pushf
lea
mov
inc
icebp
and
inc
pop
icebp
jo
xorb
out
dec
push
fsubs
cmpsl
fcompl
cmp
jecxz
lret
xor
shrb
xchg
mov
fldenv
sbb
adc
fwait
out
dec
repnz
push
lea
popf
out
fcmovnbe
ficompl
mov
in
repnz
mov
clc
das
mov
xlat
adc
ss
mov
shll
fildll
lahf
cmp
sar
xchg
loope,pn
mov
mov
stos
and
test
leave
mov
and
loopne
aaa
stc
movsl
xchg
fcmovnb
sbb
dec
lock
cltd
enter
jmp
mov
popf
and
stc
mov
lods
push
pop
lea
and
push
repz
jmp
xchg
imul
fidivrs
mov
orl
int
imul
subl
adc
sub
jnp
add
imul
and
fdivr
mov
out
xchg
arpl
stos
cmpsl
mov
fnstcw
xor
sub
sbb
cmp
pop
rcrl
sub
adc
push
cltd
pop
mov
add
jmp
xchg
lods
mov
sahf
cmpsb
stc
mov
popa
cs
stc
pop
fnstsw
stos
mov
mov
jns
jmp
inc
stos
xor
call
or
loop
push
int
stc
popf
rorl
inc
lods
dec
mov
pushf
lahf
cmpsl
scas
or
and
push
fisubrs
rol
or
lret
rcll
in
and
pop
jmp
xor
adc
fistpl
xchg
fwait
lods
xchg
pop
js
and
iret
xchg
ror
xorb
popf
adc
test
fwait
mov
nop
fstps
fwait
and
fwait
jne
adc
mov
xchg
cmpsl
inc
pop
fsubrl
push
jmp
test
mov
mov
iret
sbb
ljmp
cld
jg
test
lea
fisubrs
lea
xor
dec
inc
je
push
pusha
js
inc
loope
xor
sub
je
and
inc
int
xchg
inc
push
and
shl
in
push
mov
dec
iret
leave
mov
lcall
sub
sbb
or
rol
movsb
in
in
stos
movsb
mov
inc
test
sub
shr
shrb
inc
test
lock
stc
xlat
out
dec
lock
mov
xor
xchg
sbb
outsb
movsb
nop
xchg
push
sub
sbb
jge
in
jae
pop
fwait
xor
push
orb
sub
scas
and
int
addb
pop
dec
pop
cld
mov
lahf
in
hlt
loopne
nop
sub
inc
cmpb
inc
cmp
pushw
sbb
out
iret
out
push
jb
in
inc
fs
jmp
sbb
pop
cwtl
sbbb
loopne
pop
inc
mov
aad
mov
into
cmp
fsts
ret
out
shlb
xchg
xchg
rcll
iret
movsb
mov
sbbb
inc
mov
es
sub
dec
or
aad
pop
cmc
pop
cmp
les
push
adc
lahf
bswap
int
out
mov
push
sub
testb
xchg
jmp
aad
or
call
flds
push
shr
xchg
testb
ret
xor
fcomp
cmp
sarl
aas
mov
sub
jge
push
sub
int
stc
stos
jmp
xchg
out
xor
cltd
inc
leave
xchg
pop
or
sets
jbe
out
mov
xchg
lea
xchg
lods
popf
xchg
cli
mov
mov
fisttpl
hlt
dec
cmp
and
test
sub
lea
sbb
cmp
jecxz
in
and
lahf
cs
jmp
add
pop
adc
and
xchg
fcoms
fstl
fisttps
adc
pop
aad
jge
sub
inc
mov
jae
lods
aad
sub
push
lods
lahf
clc
test
iret
mov
xchg
in
gs
mov
iret
jle
shlb
es
in
movsl
in
std
dec
dec
test
sbb
test
mov
lahf
cmp
xor
and
fwait
scas
xor
out
cltd
pop
sub
leave
dec
inc
or
pop
popf
jmp
das
push
adc
adc
lds
es
iret
and
ja
in
push
dec
aam
cltd
repnz
xlat
adc
xlat
rorl
pop
leave
cmpb
lret
jne
ret
cwtl
jmp
or
cmpsl
int
sarb
add
in
jae
loope
mov
stc
cmp
xchg
mov
adc
cmp
sub
aaa
push
movsl
in
es
adc
jecxz
cmp
fists
mov
cmp
leave
lret
lea
movsl
ror
imul
pop
mov
mov
mov
leave
test
or
pop
ret
cmpsl
adc
lea
mov
jmp
cs
cltd
xlat
or
leave
iret
adc
cmp
sbb
sbb
jmp
out
sbb
jmp
es
xor
sbb
adcb
iret
cmpsl
cltd
scas
vpcomw
popf
orl
sarl
and
cmp
sbb
mov
fucomp
push
adc
in
lahf
mov
lea
jno
xlat
pushf
and
jmp
push
jecxz
cs
mov
or
mov
mov
or
ret
pop
popa
xchg
pop
fwait
mov
mov
in
cmpsl
mov
cmp
popf
jmp
pop
cs
cmpsl
inc
adc
loope
pop
dec
jns
or
cmc
jecxz
out
fwait
loope
jo
mov
and
stc
cmpsl
mov
fstps
rol
pop
jge
lret
sub
in
inc
stc
cmp
fildll
fldl
popf
out
fsts
fbstp
cmp
and
sub
and
pop
repz
mov
mov
add
lea
mov
cmpsl
aad
mov
repnz
lea
jb
fwait
orb
mov
in
mov
and
ffreep
mov
test
dec
xchg
adcb
sub
mov
push
nop
popf
jb
jne
andl
sub
lret
cltd
sub
aas
repnz
cwtl
inc
mov
add
cs
out
sub
test
or
scas
iret
shrl
int3
add
js
mov
rorl
xchg
mov
call
ds
jns
xchg
xchg
cmp
enter
shll
lods
or
fldcw
aad
add
xchg
inc
outsl
push
push
icebp
fadd
pop
xchg
xor
sbb
fistl
add
movsl
stos
cmp
js
sarl
cmpsl
pop
cmp
adc
sub
cmpl
xor
adc
in
out
mov
test
mov
lret
mov
mov
lds
cwtl
xlat
repz
stos
scas
and
rcll
fildll
in
mov
shll
dec
mov
xchg
fucomp
sub
pop
outsb
scas
loopne
push
push
mov
sub
roll
push
lea
jle
cltd
aas
rclw
lods
sub
jae
push
lahf
stc
pop
fldl
mov
scas
out
and
andb
into
test
mov
scas
shlb
mov
daa
lahf
loopne
mov
xchg
popf
fst
jg
jmp
xchg
loope
xor
cmp
sbb
push
flds
out
sub
popa
popf
mov
lret
mov
test
jmp
adcl
lods
mov
mov
fisubs
mul
fstpl
mov
leave
fiadds
mov
es
pop
in
dec
ret
jno
aad
xor
xchg
andl
shll
jmp
jecxz
stc
aad
js
sbb
repnz
stos
xor
scas
push
jmp
cmpsl
mov
adc
sub
shlb
aad
sbbl
lret
orl
mov
repnz
sbb
and
add
pop
mov
nop
out
and
sub
cmp
ret
add
testl
mov
lcall
or
add
cltd
xchg
add
aad
test
lcall
aad
jmp
out
adc
lret
mov
adc
in
pop
mov
add
add
or
shll
movsl
scas
enter
xchg
jno
jmp
dec
scas
cltd
add
std
mov
int
adc
cltd
sbb
imul
add
push
mov
pushf
adc
cmpsl
jbe
mov
popf
fwait
repnz
xchg
cs
or
xlat
lods
mov
leave
jno
fisttpll
or
cmpsl
mov
xchg
aad
xor
and
sub
mov
mov
jmp
cmc
push
xchg
lods
stc
test
test
xchg
jmp
shrl
push
or
mov
fs
jge
mov
or
inc
add
fwait
sub
pushw
pushf
mov
and
stos
test
xchg
in
fsubl
fadd
stc
imul
arpl
hlt
sbb
jo
sub
cmc
sub
test
lods
dec
scas
sub
mov
mov
mov
popf
imul
or
sub
mov
push
es
loope
mov
mov
xor
sbb
popf
jmp
xchg
lea
leave
push
imul
push
inc
push
mov
and
lahf
mov
xor
xor
or
dec
pushf
andl
cmpsl
jns
or
jecxz
lds
xor
iret
popf
and
xchg
popf
xor
out
and
cld
js
jle
cmpsl
imul
fwait
xchg
inc
lahf
shrb
mov
fistl
movsl
loop
int
sub
xchg
filds
push
and
mov
pop
lcall
js
inc
fwait
adcl
xor
mov
cmp
add
cmpsb
mov
daa
dec
test
in
stc
icebp
xor
mov
ljmp
test
cmp
in
call
fldl
lret
mov
mov
xchg
int
pop
xlat
add
ss
sarl
popa
popa
or
xchg
aad
sub
cmp
jl
add
lret
int3
leave
cmc
out
call
faddp
int
in
adc
cmp
fisttps
in
or
jnp
jmp
dec
cmpl
xlat
pop
rcr
lock
sub
fcomp
cmpsl
or
shrb
rclb
mov
pop
add
xor
in
xor
sub
enter
xchg
stc
lcall
push
int
jmp
iret
popa
cs
adc
mov
mov
fnsave
call
fisttpll
mov
stos
jecxz
js
xchg
scas
xchg
mov
lea
outsb
aaa
pop
sub
stos
andl
cmp
cs
fldl
pop
mov
jmp
or
cmpsb
fs
rorl
xchg
jmp
mov
sbb
sub
in
int
mov
movsb
sub
add
test
xor
jo
adcb
or
sbb
aas
fbstp
mov
xchg
shll
stc
add
int3
sub
dec
out
stc
sbb
adc
insb
or
je
movsl
add
push
sub
sub
adc
sbb
cmp
sbb
sub
jnp
mov
mov
cs
push
xchg
jecxz
data16
dec
test
mov
std
mov
dec
sub
adc
scas
xlat
les
dec
xchg
lock
addr16
mov
sub
into
in
fisubrl
pop
push
mov
rol
cmp
fcoml
in
push
bswap
cmp
test
lahf
pop
xchg
or
pop
cltd
jne
int
jg
jmp
bound
sahf
iret
push
fld
pushf
pop
and
fwait
scas
sbb
scas
lock
mov
mov
loop
push
cltd
enter
in
cltd
mov
xor
xchg
jno
cmp
fldenv
pop
and
ret
scas
mov
das
or
sbb
stos
push
jp
sbb
sbb
movsl
jno
mov
inc
loope
leave
xchg
push
adc
fidivrl
scas
push
in
insl
stc
scas
popl
fidivrs
jmp
jae
je
pop
je
mov
cmpsl
aad
xchg
test
loopne
and
lock
lds
sub
sbb
das
mov
push
cs
ret
sub
xchg
iret
dec
out
cmp
fwait
pop
push
shll
rcll
mov
loop
cli
push
mov
rcrl
jle
pop
es
xor
outsb
test
mov
pop
xor
sub
scas
ror
jbe
test
outsl
orl
in
add
dec
rcrl
ja
mov
inc
xchg
push
jb
cs
mov
movsl
push
test
jmp
stos
sbbb
mov
test
mov
lock
popa
fwait
imul
call
test
mov
and
mov
jecxz
sbb
mov
xor
lods
and
test
push
cmp
std
xor
and
xchg
add
xlat
int
call
pop
lret
xchg
xlat
loopne
imul
out
lods
add
in
mov
sarb
fdivrs
or
int
call
mov
addb
mov
add
leave
add
das
inc
lret
cmpsl
icebp
dec
insb
jne
push
sahf
shlb
xchg
pusha
andl
and
xchg
scas
loopne
in
imul
aad
popf
lock
subb
sub
shl
in
mov
in
aas
aas
mov
test
movsl
cmp
insl
jecxz
in
fwait
dec
stos
cmp
mov
and
cltd
xor
sub
es
popf
and
test
mov
cs
mov
insb
add
movsl
dec
scas
add
xchg
jne
push
cs
xor
lods
mov
push
xor
jmp
adc
xorl
pop
stc
inc
lock
add
mov
outsb
adc
add
or
cltd
inc
xchg
ficoml
aad
repz
rol
mov
sbb
mov
test
aaa
ffree
movsl
rcrl
int
lods
mov
cmp
lret
in
ret
xlat
mov
ss
sbb
and
cmp
push
sbbb
xchg
add
std
mov
rcrl
push
add
rclb
pop
xchg
xchg
sub
or
mov
or
dec
sbb
push
xchg
or
xchg
mov
and
mov
xchg
mov
shrl
lret
stos
mov
add
test
arpl
xor
daa
je
loope
fwait
cmp
ja
popa
mov
adc
mov
push
xchg
push
clc
aad
inc
jb
shlb
stos
xchg
push
jmp
mov
xlat
sarl
repnz
jae
pop
jmp
cwtl
pmulhw
scas
jecxz
mov
rcrl
add
es
or
push
add
aad
fwait
inc
mov
pop
lea
adc
pop
mov
sti
xchg
leave
shll
inc
jno
xchg
lret
fsts
adc
cmc
fstps
aad
andl
jo
repz
sub
sub
mov
and
aam
mov
jmp
cmp
shll
test
cmc
out
movsl
sub
xchg
daa
push
jb
inc
sub
add
adc
shrl
sbb
in
sbb
mov
or
and
mov
add
lods
filds
in
pop
lea
movsl
pop
inc
je
xlat
dec
jge
scas
push
scas
mov
adc
lea
aam
pusha
adc
xlat
dec
loopne
fmulp
loop
xor
xor
or
scas
scas
cs
and
data16
push
pop
xchg
das
fists
sub
mov
jne
xlat
dec
and
shrl
jne
jmp
and
scas
imul
arpl
pusha
leave
or
repnz
cs
push
and
sub
dec
hlt
dec
xchg
cmc
pop
cmp
cmp
xor
lahf
lods
test
sub
sbb
xchg
and
sti
mov
fwait
xchg
mov
mov
out
adc
shlb
cmpsb
inc
loope
mov
fcmovnb
sub
movsl
push
rcrb
fucomp
popf
pop
insl
in
xchg
add
xchg
jne
fwait
lock
ss
sub
pop
out
jmp
sbb
cmp
fstl
shll
pop
movsl
mov
test
sub
push
lret
mov
loope
in
pop
lahf
push
xchg
adc
inc
sbb
out
xor
jnp
mov
xchg
push
push
jne
scas
test
ljmp
xchg
fsubs
test
and
aas
int
xor
push
mov
pop
mov
pop
inc
ret
in
jmp
mov
movsl
jmp
aaa
mov
xor
lods
and
sub
test
xchg
cs
cmp
lea
cmp
cmp
es
fimull
push
inc
stos
sub
push
leave
jno
mov
mov
jl
dec
sarl
or
test
orl
ss
jnp
pop
jne
jecxz
xlat
in
rclb
sub
lahf
mov
cmp
mov
pop
jbe
out
std
insb
insl
es
cmp
push
xchg
cmpsl
xor
xchg
sbb
in
test
xor
cmp
jbe
movsl
and
subl
jne
mov
mov
pop
jge
mov
mov
xor
inc
fsts
xlat
push
and
fsubs
js
decl
push
mov
clc
dec
mov
popf
ret
outsl
fwait
popa
lods
jae
loope
unpcklps
pop
dec
sub
cmp
sti
fistl
lret
add
mov
inc
sub
push
add
cltd
scas
in
push
leave
iret
xchg
mov
cmp
jb
leave
inc
fldt
int3
int
mov
es
jecxz
sub
in
andl
rcll
mov
orb
in
jo
clc
cmp
fstpt
mov
push
or
fmulp
std
stc
stos
lret
cmp
inc
movl
std
call
sub
jecxz
sarb
mov
cmp
cmpsl
movsl
mov
out
js
xor
daa
adc
mov
stc
inc
jbe
lea
xchg
scas
leave
mov
push
outsb
push
aam
loope
rcrb
xchg
mov
pushf
push
popf
fmul
int
push
loopne
into
stos
mov
sti
ret
imul
addl
adc
iret
xor
xor
jbe
sub
fwait
loopne
dec
stos
scas
jno
cmp
inc
push
cmp
xchg
push
test
lods
xchg
sub
jbe
sub
leave
push
aaa
xor
es
dec
jmp
jmp
cmp
pop
pop
orl
push
and
xchg
sub
inc
mov
push
cltd
aad
sub
xorb
xchg
rcrb
aad
push
aam
mov
sub
stos
mov
repnz
outsb
insl
lds
int
xchg
daa
emms
sarl
cmp
leave
jmp
loopne
and
flds
std
inc
xchg
stos
in
sbb
xchg
adc
dec
cmpsl
lods
sub
shll
or
cmp
mov
rclb
aas
mov
ljmp
popf
adc
in
rcrb
mov
push
orb
leave
iret
and
in
js
and
pop
cltd
fnstenv
stc
popf
dec
int3
mov
sarl
xlat
cmp
xchg
xor
pop
lea
test
icebp
pop
dec
movsl
gs
stos
cltd
in
cltd
dec
int
push
jno
mov
shr
xlat
mov
dec
mov
icebp
fisubs
pop
push
pop
dec
push
mov
xchg
mov
popf
ror
mov
rcll
or
jmp
sbb
mov
xor
xchg
add
jmp
cltd
cmpsl
ss
int
fsubrs
test
rcrb
mov
iret
lods
mov
imul
sbb
push
scas
scas
cmp
and
subb
cmp
in
popf
mov
mov
mov
stos
add
test
insb
movsb
ret
in
frstor
cmp
sbb
sub
mov
fldcw
xlat
pop
fnsave
jmp
fldl
popf
push
dec
cmova
mov
stos
add
inc
iret
mov
mov
movsl
or
arpl
imul
and
push
adc
bound
cld
iret
inc
jne
cmp
in
out
pop
pop
adc
jb
je
imul
or
mov
inc
dec
pop
movsl
xchg
pop
cmp
leave
in
xor
ret
jge
shl
dec
fisttps
xor
sub
mov
and
mov
sahf
pop
test
xchg
int
and
push
fistpl
cmp
in
jmp
adc
in
inc
arpl
ret
insl
push
imul
push
sahf
push
mov
mov
dec
mov
stos
mov
in
in
cwtl
out
test
arpl
fwait
ljmp
fbld
loopne
adc
scas
pop
mov
mov
clc
pushf
vcvtsd2si
gs
push
shrb
dec
stc
pop
daa
or
int
stc
iret
lea
clc
jmp
lods
test
imul
cli
sbb
sbb
sbb
mov
sbb
call
out
jecxz
add
sbb
mov
adc
lret
enter
mov
in
cwtl
mov
sbb
fsetpm(287
shl
jl
xor
cwtl
mov
popf
stc
dec
ret
pop
cmpsl
cmp
jge
cmp
orl
add
inc
shll
sub
dec
mov
aad
shlb
insb
mov
movsb
lret
push
pop
mov
jno
in
jmp
pop
mov
imul
mov
pop
cmp
loope
pop
and
cltd
push
mov
bound
xlat
xorb
lock
rcl
lods
mov
inc
or
sbb
dec
sub
aas
fsub
cmpsb
call
rcrl
shrl
xchg
fwait
ret
or
dec
fcompl
addr16
test
js
xchg
push
pop
pop
mov
mov
xchg
and
lods
popa
mov
lret
fwait
cmp
movl
sbb
rcrl
pop
adc
sbb
aad
pop
in
dec
xchg
imul
aas
movsl
pop
sub
mov
pop
or
xchg
movsl
iret
sub
mov
rcrl
mov
imul
popa
sbb
in
iret
push
in
divb
sub
subb
xchg
xor
nop
cmpsl
sub
ds
push
roll
sbb
dec
cltd
xchg
sbb
fstps
stos
push
filds
shll
test
out
xor
jne
cmp
sub
xchg
aad
loope
jne
mov
sbb
xor
adc
push
daa
xchg
cs
xchg
scas
fs
sub
jge
cmp
jo
sbb
pop
stos
adc
mov
jecxz
mov
xor
mov
mov
in
out
scas
fsubrl
lea
fsubs
rep
lret
add
leave
sub
stc
mov
popf
xchg
cmp
dec
xchg
mov
xlat
jmp
sbb
mov
popa
mov
test
lahf
mov
loope
xchg
movsb
daa
arpl
or
sub
ret
lea
xlat
xchg
subb
dec
scas
nop
dec
push
dec
addr16
loope
test
and
sarl
fwait
pop
mov
test
pop
test
icebp
out
orb
divl
add
cmpb
mov
push
ds
xor
sbb
cmp
dec
cmp
test
cmp
dec
mov
les
cld
ljmp
out
in
cmpb
adc
mov
lock
test
or
and
mov
test
ret
lds
adc
add
in
jl
add
jbe
jmp
sbbb
popa
or
jne,pn
xlat
dec
subl
arpl
popa
sbb
and
cmp
xlat
test
and
xor
mov
mov
lret
out
into
test
xchg
cs
mov
pusha
fsts
dec
adc
mov
add
cmp
mov
aas
jle
or
in
mov
inc
pop
inc
pop
cmp
aaa
inc
jbe
mov
jbe
dec
cmp
xchg
lods
fcoml
icebp
pusha
pop
mov
mov
sub
sub
xlat
loop
ljmp
data16
jbe
dec
test
aaa
test
scas
aad
in
into
mov
mov
sub
lods
xor
fwait
mov
mov
cmpsl
mov
push
stc
mov
or
lock
int
xchg
sub
dec
jmp
out
fbstp
std
mov
in
jno
xor
sbb
add
in
push
xchg
mov
cmp
pop
xchg
rcrl
dec
mov
orb
imul
cs
aad
std
scas
xchg
clc
pop
push
daa
mov
and
imul
orl
cmpsl
movsl
ror
in
test
jo
jae
mov
out
push
in
or
aam
inc
cmpsl
shll
sub
cmp
clc
xchg
stos
xchg
arpl
xchg
xchg
ja
pop
ss
clc
jnp
or
pop
outsb
xchg
push
mov
cmpsb
lock
mov
jo
sub
pop
inc
stos
stos
inc
insl
cmp
add
popf
aad
sbb
out
xchg
mov
and
imul
and
test
sbbb
outsl
cmp
cmp
test
inc
push
int
jge
push
es
mov
sbbb
insb
adc
shl
cmp
orb
mov
mov
sbb
lcall
loop
mov
jno
xor
js
in
push
mov
iret
and
and
shll
jae
loope
lret
xchg
leave
loopne
stc
fstl
and
jp
and
stos
movsl
jmp
jge
sbb
lahf
aad
cmp
cmc
ljmp
imul
sub
fwait
subl
jnp
stos
stos
cmpsl
rcrl
xor
cmp
jo
and
inc
xchg
in
popa
fwait
dec
mov
push
and
lods
dec
mov
mov
scas
js
cwtl
mov
or
iret
daa
jecxz
aam
cltd
lcall
insl
cmpsl
stc
outsb
pop
in
orl
jle
push
sbb
or
fwait
inc
ss
mov
xor
push
xlat
mov
jnp
sbbb
popa
sbb
and
sub
xor
sbb
sub
push
push
adc
cmp
mov
jno
cmp
icebp
dec
lahf
shll
and
xchg
and
lods
dec
and
cwtl
andb
andb
adc
xlat
rolb
js
andb
sbb
fxtract
ljmp
stos
addl
cmp
retw
dec
std
frstpm(287
shl
add
mov
xchg
insb
mov
sbb
std
ja
and
into
js
fldenv
aas
in
cli
dec
subb
psadbw
push
jno
test
movsl
addl
push
inc
push
mov
das
push
movsl
sub
shll
outsb
push
das
push
lods
lods
sbbb
aam
test
push
push
lods
filds
lods
mov
jp
sub
push
and
fldcw
pop
test
outsb
inc
and
ret
das
lahf
in
aas
cmpsl
testb
adc
pop
stc
out
mov
mov
mov
loope
gs
es
xchg
and
call
lahf
test
mul
mov
xor
shrb
popf
xchg
cmp
xor
movsl
in
inc
jne
add
icebp
shr
jb
sub
sub
sub
adc
mov
in
lret
lods
repz
test
call
mov
andl
outsl
imul
jecxz
adc
mov
push
stc
ret
jecxz
stos
test
adc
test
sub
mov
enter
loopne
test
jecxz
mov
loope
pop
ja
pop
lds
jno
jbe
lcall
and
shl
push
jp
fwait
inc
mov
iret
push
cli
jmp
sahf
into
fwait
and
fisttpl
add
xchg
pop
fwait
xchg
ss
int
inc
and
ror
sbb
jmp
lds
xor
iret
es
jmp
in
mov
jmp
adc
cmp
data16
push
mov
cmc
call
sub
push
xchg
jmp
mov
fwait
adc
outsb
and
mov
aad
xchg
mov
pop
mov
es
sbb
ljmp
mov
stos
jecxz
lods
lret
and
or
sub
push
lds
popf
xchg
icebp
sbb
movsl
call
inc
fistps
loope
sub
cwtl
xchg
mov
adc
stc
and
arpl
inc
aad
fsubs
dec
sub
clc
scas
insb
lods
xor
ja
inc
xchg
insl
xchg
push
jmp
pop
sub
inc
inc
lock
fnstenv
testl
mov
aad
push
out
xchg
mov
mov
enter
mov
cs
push
orl
dec
shrl
mov
iret
xor
pop
mov
test
or
fldt
lods
popa
imul
fcom
int
imul
mov
rorl
clc
xor
cmp
fadds
mov
fwait
push
inc
mov
mov
xor
xchg
pop
call
dec
nop
pop
test
aad
aam
cmp
int
pop
nop
out
inc
add
ret
cmp
sti
in
add
cmpsl
ficoms
xchg
lea
popa
into
daa
stos
adc
lahf
ror
sub
fmuls
jno
and
cmp
and
inc
addb
clc
sub
and
aad
sub
cld
and
insb
repz
fcmovne
xchg
fnstcw
push
xor
daa
pop
cmp
jnp
leave
fwait
movsl
sub
shl
cmp
out
push
pop
fwait
cltd
sub
stc
iret
xchg
cmp
int3
mov
push
in
xchg
dec
xlat
and
xchg
rolb
pop
xchg
pop
sub
leave
aaa
push
scas
jmp
cltd
shrl
xlat
cmp
test
out
leave
sub
pop
pop
cmp
shll
gs
and
leave
out
and
sbb
imul
unpcklps
mov
lahf
popf
test
mov
xchg
pop
in
or
xchg
mov
and
iret
lea
and
jl
jmp
test
hlt
mov
xor
int
jb
mov
cmpsl
scas
jne
xlat
data16
sub
lret
leave
add
sub
jle
sbb
aaa
cmp
fcomps
jmp
fcoml
sub
xchg
mov
jmp
lahf
sub
cs
mov
shr
lcall
and
pop
dec
pop
das
adc
jno
or
fsubp
mov
cmp
xlat
sub
outsb
or
ret
lahf
in
ror
clc
sbbl
orb
add
lods
pushf
std
scas
and
mov
clc
mov
imul
push
out
aad
mov
popf
aaa
jmp
jecxz
mov
mov
xor
lods
ret
mov
into
and
xchg
xor
iret
fldl2t
xor
inc
leave
xchg
inc
pop
fwait
ja
push
iret
inc
ret
cmc
add
loop
pop
and
push
in
sub
stc
pushf
or
popf
fcmovne
ret
jl
and
ror
lods
test
add
cs
cmp
xchg
mov
and
or
fst
cmc
test
out
iret
cmp
jmp
inc
lock
cmp
jb
ror
jno
movsl
cmc
loopne
jecxz
sub
stos
pusha
aad
fwait
cmpl
dec
jmp
pop
aad
pop
cmp
mov
in
dec
or
leave
jmp
xchg
cli
cmp
sahf
xchg
clc
jge
aad
shl
fnstcw
jmp
pushf
int3
cmp
push
xor
or
out
mov
add
mov
adc
aaa
lods
sub
cltd
movsl
cmpsl
sub
aam
mov
mov
test
sub
dec
ret
es
dec
imul
test
lea
or
iret
rcll
jmp
sbb
call
enter
inc
imul
pusha
sub
jno
xchg
xchg
jecxz
imul
fcomps
push
jne
sub
add
loope
mov
adc
lcall
xchg
cmpsl
test
or
mov
add
mov
outsb
mov
xchg
xchg
fisttps
mov
cmp
jmp
out
push
mov
lret
mov
test
test
ret
or
pop
leave
lcall
cli
int
pop
cwtl
sbb
std
xchg
pop
xlat
aaa
lcall
jns
es
jb
sub
lds
jne
shrl
xlat
lods
and
daa
lods
sub
iret
out
and
xchg
lods
mov
in
add
mov
iret
scas
push
stc
xchg
lea
idivb
int
xlat
leave
sub
std
xchg
and
nop
dec
xchg
jns
inc
movsb
jne
mov
inc
mov
pop
stos
pushf
pop
arpl
out
popf
repnz
cwtl
push
imul
sub
adcb
arpl
fisttps
sbb
mov
mov
out
loope
add
hlt
shrl
or
dec
mov
movl
mov
int
sbb
imul
sbb
inc
sub
dec
fs
jne
fildll
sbb
test
mov
cs
sub
mov
fwait
out
int
int
mov
xor
push
jge
push
xor
stos
xchg
cmp
push
das
mov
push
insl
fucom
push
fwait
cmc
popa
push
push
cmpsl
jge
push
add
out
and
sub
push
mov
push
pop
sbb
push
fs
lahf
int
add
sbb
pop
push
subb
rcll
cwtl
xor
in
fcmovb
jecxz
scas
push
lods
leave
sbb
leave
lods
cmp
xor
push
mov
and
aas
or
and
into
push
cmp
movsl
rcll
stos
dec
iret
call
push
hlt
aad
stc
icebp
mov
sub
test
icebp
jno
imul
mov
out
mov
or
daa
int
std
add
pop
sbb
sti
and
loope
fld
js
cmp
clc
leave
pop
push
stc
xor
enter
sub
shrl
xchg
cmpsl
add
xchg
int3
mov
sub
mov
xchg
xorl
outsb
cmpl
push
push
push
lahf
and
mov
or
xchg
repnz
clc
jo
xchg
in
out
fildll
and
test
sti
fbld
mov
and
repnz
mov
test
iret
arpl
sbb
imul
je
sub
and
je
aaa
xchg
lods
lds
roll
push
add
adcl
sub
push
dec
and
lods
mov
xchg
add
xchg
cli
pop
pop
inc
out
push
xchg
std
pop
movsl
leave
jmp
aad
daa
fsts
mov
iret
dec
add
popf
cs
xlat
push
inc
mov
and
jmp
jbe
lods
cmp
pop
push
jae
int
sbb
negl
mov
insb
out
mov
mov
fldln2
lds
rcr
add
rolb
pusha
or
enter
mov
add
adc
push
cmp
jg
cmp
in
mov
xchg
leave
test
push
movsl
cmc
repnz
xlat
push
push
lea
jge
ror
mov
adc
cmp
dec
mov
pop
inc
fistpll
mov
fwait
int
sbb
shll
xchg
push
xchg
aas
rcrb
or
xchg
xchg
sub
cwtl
out
lods
mov
insb
clc
xor
lcall
test
mov
mov
xchg
lock
sahf
inc
test
mov
dec
das
jl
add
roll
xlat
cs
movsb
xchg
mov
sbbl
jmp
fstps
mov
into
lds
shrb
faddl
jnp
mov
fs
ja
stos
pop
scas
mov
es
push
jmp
push
push
test
push
out
cmp
lret
mov
push
out
ret
cmp
stc
mov
jb
lahf
pop
or
adc
cmp
xchg
cmp
in
cmp
es
cmp
cs
dec
cli
ja
mov
pushf
add
mov
scas
cltd
scas
xor
data16
sbb
adc
out
rcrl
pop
pop
and
inc
aad
dec
scas
cmp
jge
and
loopne
imul
sub
imul
and
jne
pop
test
pop
aad
add
scas
mov
cltd
ret
and
stos
aaa
scas
int
xor
mov
inc
arpl
pop
jmp
dec
ss
sbb
xchg
lods
push
pushl
int3
lods
pop
mov
lcall
insb
xchg
cvtdq2ps
scas
dec
je
push
mov
cmp
push
sub
inc
jecxz
iret
jl
mov
sub
data16
push
cmp
out
stos
stc
scas
setae
mov
push
mov
mov
mov
adc
test
lret
xchg
jp
fs
lcall
mov
mov
int
mov
ret
pushf
xor
int3
int
incl
shll
dec
cmpl
leave
fucom
fxch
dec
call
jecxz
push
sub
adc
mov
dec
sub
dec
and
mov
mov
fwait
lock
inc
hlt
stc
out
mov
shrb
lret
mov
pop
sub
jns
shr
loope
es
sbb
in
aam
in
aam
mov
cltd
mov
fwait
lea
mov
lcall
dec
xchg
push
pop
shll
jle
imul
mov
sahf
daa
sub
mov
mov
lret
popf
cmpsl
pop
inc
push
outsl
ja
fwait
xchg
and
rcl
lea
xchg
aad
cmpl
xor
nop
mov
mov
sub
push
cmpsl
pop
or
xchg
movl
jb
sbb
in
in
lea
jge
enter
sub
cmpsl
mov
xchg
or
xor
pop
dec
subb
js
xchg
and
jo
lock
xchg
xchg
imul
data16
xchg
in
mov
mov
scas
mov
xchg
int3
cmpsl
pop
or
test
sbb
add
iret
mov
jmp
xchg
xorb
in
jecxz
shl
dec
iret
popf
and
popf
mov
iret
pop
mov
inc
je
push
jge
sbb
adc
push
push
lahf
loope
mov
stos
sbb
stc
fwait
cmp
push
xor
xchg
push
mov
mov
jo
in
flds
cmp
rcrl
test
mov
jns
mov
sub
leave
inc
fnsaves
mov
or
pop
shrl
mov
pop
mov
mov
mov
inc
clc
inc
scas
mov
int
sub
sub
jecxz
es
fidivl
xchg
sbb
fmuls
xor
mov
iret
imul
jo
xchg
push
fwait
add
out
and
lea
pop
inc
lret
cmp
fnstcw
imul
add
test
mov
and
subl
orb
or
iret
decl
add
inc
filds
inc
sub
lahf
sub
xchg
mov
mov
leave
push
jg
and
sub
rcr
mov
sub
add
or
roll
cmpsl
stos
jg
les
mov
and
mov
pop
xchg
test
xchg
out
inc
imul
pop
pop
jb
sbb
stc
mov
std
mov
mov
ss
push
adcl
xchg
xchg
inc
xor
imul
cmp
lods
fnsetpm(287
fidivs
mov
mov
popf
push
xor
shl
add
orl
xchg
shl
ja
cltd
iret
jmp
test
rcll
testl
cwtl
or
sbb
mov
gs
sbbb
popa
test
xchg
xor
pop
and
stos
pop
mov
adc
iret
mov
sbb
and
pushf
pop
mov
cmp
popf
xlat
sahf
scas
das
lds
xor
xchg
test
cwtl
sub
dec
add
mov
cmpsl
push
loope
mov
ds
jbe
gs
jnp
and
mov
in
push
shl
jmp
loope
movsl
popf
sbb
pushl
inc
mov
je
leave
in
adc
scas
ret
popf
pop
cld
sbb
nop
lcall
out
mov
inc
stos
stc
jne
rcll
lods
jmp
fwait
mov
imul
ss
es
xor
test
jmp
adc
fistpll
xchg
into
jp
mov
jne
lret
push
stc
cmp
push
jmp
jmp
xor
mov
shll
lods
xchg
test
push
lea
push
xchg
pop
test
xchg
lods
mov
xlat
int
xchg
cmp
mov
cmpb
or
lds
mov
loopne
mov
cmpsl
test
sub
pop
xchg
lret
cmp
stos
lret
out
or
scas
in
cmp
lea
mov
sbb
aaa
push
xchg
cmpsl
test
mov
insb
adc
shrb
cmp
in
jle
sub
pop
push
fstpt
aad
daa
xchg
pop
lea
mov
xor
xlat
ficoms
test
in
fbld
or
xor
dec
cltd
stc
or
fdivl
imul
mov
lahf
test
mov
cmp
jmp
iret
rcrl
mov
data16
test
pop
inc
sub
ja
inc
pop
mov
outsb
ja
outsb
in
xchg
fwait
mov
jno
out
dec
or
nop
xchg
xlat
mov
int
out
cwtl
scas
jmp
mov
in
and
in
test
aam
std
popf
loop
mov
cs
fabs
jno
mov
jecxz
xchg
push
cmp
lods
xchg
lret
dec
cli
orl
popf
std
lods
mov
leave
cmp
test
adc
jmp
add
imul
xchg
cli
test
jmp
je
jns
jbe
sub
out
data16
ds
xchg
or
fldcw
cltd
iret
cwtl
xchg
adc
scas
pop
movsl
leave
xchg
or
cs
js
pop
mov
cmp
scas
xchg
movsl
cltd
mov
inc
nop
mov
mov
add
fwait
xchg
in
mov
pop
imul
inc
sbb
sub
inc
scas
push
add
mov
jg
inc
and
jmp
cltd
fwait
add
push
cmp
inc
jmp
xor
shrl
test
popf
inc
xchg
mov
lahf
mov
jmp
mov
cmp
sub
and
mov
popa
sub
cmp
shl
sub
push
loope
clc
addr16
notb
or
stos
in
mov
loope
scas
mov
push
jae
cmp
test
cltd
das
shll
out
leave
push
mov
cs
jbe
xchg
call
adc
popf
mov
pop
in
sub
sbb
xchg
lret
sub
lcall
fst
inc
cs
movsl
mov
cltd
xor
fwait
mov
sub
rorl
rcr
fldl
sbb
lds
shll
or
mov
add
jmp
xchg
loop
push
mov
aas
mov
xchg
dec
iret
sub
xchg
andl
sub
jne
cltd
lea
leave
mov
scas
imul
fiadds
push
mov
xchg
mov
es
pop
shll
dec
repz
iret
mov
popf
jns
cs
inc
xor
rol
xchg
lahf
add
fldl
xchg
fwait
cmp
shlb
jecxz
sub
enter
push
dec
adc
or
leave
push
mov
xchg
lea
shll
sub
shrl
dec
xchg
cs
or
lea
mov
push
stc
pop
pop
jbe
and
xor
int
popa
cmp
xlat
scas
sarl
jecxz
int
sub
sub
cmp
cmp
xor
pop
outsb
xchg
leave
clc
xchg
out
iret
sbb
cmc
sahf
push
test
or
in
add
sub
adc
rorl
xchg
daa
lcall
sbb
cltd
xchg
sbb
pop
dec
subb
fdiv
test
xor
cmp
sti
push
add
loope
insl
shl
popf
jmp
test
push
repnz
push
iret
xchg
sub
jne
pop
mov
and
lret
pop
dec
adc
push
xor
mov
mov
and
das
stc
int
fiadds
movsl
xchg
loope
rolb
mov
push
in
pop
test
xor
mov
es
out
clc
mov
fwait
mov
out
lods
and
mov
arpl
mov
mov
outsl
mov
xchg
in
lea
sarl
sub
jl
xlat
mov
sahf
xchg
movsl
sysret
movl
scas
lret
cmpsl
fnstcw
fwait
pop
jno
sarl
jbe
lods
test
xlat
in
xchg
cmp
and
leave
pmaddwd
test
cmc
or
mov
sub
sub
stos
iret
xchg
cltd
test
lds
fisttpl
push
popa
xlat
addb
nop
inc
mov
cmp
mov
jecxz
xchg
pop
cmp
or
lds
cli
lahf
in
mov
xor
lea
test
es
mov
scas
rcrb
lods
xor
imul
int
aad
pop
ja
xor
psraw
test
xchg
cmc
pop
cmp
xor
mov
repnz
in
in
loope
pusha
insl
mov
push
jno
shr
pop
sbb
lods
nop
adc
fldenv
jmp
xor
test
adc
add
cltd
sub
shl
leave
out
mov
pop
out
dec
push
pop
call
popa
pop
sbb
leave
in
pop
pop
push
add
mov
push
add
and
scas
leave
and
mov
ja
outsb
ret
ja
rolb
xchg
sub
xchg
xchg
jne
fildll
cld
cmp
imul
jnp
cmp
gs
lahf
loope
jmp
dec
add
mov
scas
ja
sub
aam
sbb
aam
adc
and
sub
hlt
imul
test
lock
dec
push
adc
cmp
leave
mov
mov
out
repnz
rorl
popf
cs
or
or
sub
xchg
cmp
pop
and
cltd
popf
jmp
mov
pop
mov
push
push
xchg
shrl
mov
loop
xchg
insl
shr
cmp
cmp
ja
dec
xor
mov
jg
push
call
cmc
cld
fwait
ja
sub
mov
cmp
and
roll
test
jae
sub
lahf
stos
inc
ja
cmpsl
loope
fsubrs
mov
jg
mov
inc
movsl
and
cmpsb
sysret
fildll
and
cmpsl
sub
repz
in
sub
jmp
test
mov
es
cmpsl
sti
xchg
sbb
or
insb
mov
mov
sbbl
xchg
out
popf
push
out
xor
sarl
cmp
and
mull
pop
sub
pop
subl
sub
mov
dec
push
add
inc
out
dec
inc
cmc
push
stc
iret
push
repnz
mov
test
je
cltd
arpl
pushf
push
iret
and
pushf
cmp
inc
sub
sub
mov
mov
fsts
push
cmpsb
in
xchg
iret
add
cmp
fimuls
mov
pop
insb
adc
jno
sbb
or
in
icebp
adc
fistpl
sbb
or
xchg
sub
int3
aam
cmp
stos
xor
stc
shr
orb
jno
fsubl
push
or
and
xlat
sub
loopne
xor
fistpl
mov
jle
aad
fdivrl
out
and
jns
xor
mov
sbb
shll
and
imul
cmp
mov
lret
push
adc
sahf
cltd
dec
es
cmc
cmpl
fstpl
wrmsr
mov
jmp
in
mov
mov
je
loope
cmp
xchg
fisttpl
sbb
sbb
andl
sahf
mov
push
fbld
mov
scas
mov
push
mov
push
shlb
push
fistpll
xor
ret
xor
jns
js
mov
lret
push
jmp
stc
sub
adc
shll
popa
add
mov
dec
stos
and
adc
leave
push
xchg
es
loop
or
mov
xchg
cmp
in
mov
stos
shll
dec
pop
imulb
dec
adc
xor
sub
movaps
rcr
lods
aad
xchg
mov
sbb
adc
popf
cmpsl
iret
xchg
xlat
test
xchg
pop
roll
jmp
cmp
pop
xor
arpl
jno
sbb
mov
pop
mov
sbb
pop
dec
sbb
or
lods
mov
fcoml
push
mov
shll
push
pop
sub
jmp
adc
fisubl
xor
imul
and
jmp
repnz
stos
lds
test
mov
scas
inc
jne
data16
stos
sub
addr16
add
fstp
clc
rorl
and
sub
andb
lahf
sub
test
test
movsl
sub
sbb
xchg
mov
ret
pop
popa
mov
mov
xchg
xor
jecxz
ds
icebp
sub
cltd
push
test
in
scas
fmull
stos
fcomi
outsl
shll
int
jae
cs
push
mov
and
clc
nop
xchg
xchg
fld
cmp
or
push
fwait
cmp
jo
pop
out
orps
mov
sbb
fldl
adc
in
stos
and
xchg
int
cmpsl
adcb
or
fwait
es
js
lahf
out
jp,pn
aad
pop
mov
mov
dec
in
mov
jmp
lret
les
in
and
lea
jmp
cltd
sub
jns
aas
dec
sbb
notl
popf
cltd
xor
lret
stc
or
lds
scas
aam
dec
in
xchg
loopne
iret
shl
insl
sub
lds
xor
cmpsl
int3
mov
mov
imul
filds
es
jg
and
loopne
lcall
fisubl
sarl
xor
sbb
lcall
out
xchg
movsl
and
xchg
iret
mov
pop
leave
jmp
add
and
sbb
xor
pop
pop
xchg
mov
cmpb
sbb
jp
dec
mov
or
gs
loope
or
xchg
subb
pop
cmp
lods
adc
negb
jecxz
fwait
lahf
or
mov
dec
xchg
mov
into
jbe
lcall
mov
adc
imul
leave
mov
lret
rcll
rclb
xchg
scas
lea
in
jno
aam
je
outsb
xor
int
xchg
sbb
in
dec
ja
scas
or
ds
sbb
cltd
mov
push
aad
arpl
roll
sbb
jmp
leave
inc
in
lock
xlat
imul
inc
and
adc
jecxz
push
mov
pop
xchg
lods
push
insl
xor
test
lret
decb
xchg
and
push
roll
popf
mov
or
push
cmc
andl
int
scas
adc
jne
fistpl
std
xlat
ret
cmp
and
imul
mov
aaa
das
and
mov
je
pop
adcl
xchg
js
mov
scas
mov
cwtl
and
jno
rcrl
sub
jne
ret
movsl
out
pop
push
and
iret
scas
rorl
test
in
xchg
imul
in
xlat
push
xchg
out
int
lods
or
leave
repz
mov
xchg
lahf
inc
frstor
cmp
ret
jae
rcrl
je
lcall
je
xlat
mov
push
cltd
fisttpl
cs
mov
fldt
lds
jb
shlb
add
mov
lcall
sub
or
bound
xor
xchg
movsl
stc
out
cmp
push
push
mov
sub
in
stos
fstp
cmpsb
pop
jnp
pop
loope
jmp
adc
inc
in
lcall
xchg
popf
dec
stos
js
mov
adcb
and
dec
in
xchg
mov
into
ss
lock
jne
arpl
pop
xchg
or
out
iret
adc
ficoms
mov
stos
push
cmp
and
ja
fs
push
pmulhw
xor
and
mov
mov
and
cwtl
fwait
mov
in
xchg
lret
inc
icebp
pop
adc
inc
sbb
jecxz
or
push
mov
scas
pop
jecxz
cmp
bound
out
cmp
stc
and
mov
push
in
mov
mov
rorl
xchg
mov
ficomps
js
test
aad
mov
fs
sbb
push
out
inc
popa
pop
lea
fists
lds
xchg
test
out
fdivl
cmp
subl
and
fcoms
int3
aaa
xchg
mov
mov
stos
sub
iret
loope
fadd
popf
sub
adc
shll
fildl
inc
inc
ret
in
loopne
push
mov
in
inc
inc
arpl
scas
pop
sbb
lods
es
mov
fistps
fwait
jg
mov
cmc
add
cmc
pop
scas
inc
stos
sub
ljmp
inc
es
leave
pop
adc
cmp
int
lds
sub
rcll
int3
addl
xchg
lret
jecxz
jle
dec
mov
test
sub
dec
or
lods
out
cmpsl
cmp
cltd
frstor
loope
xchg
xchg
xor
fwait
in
das
or
out
push
cmp
push
pop
pusha
inc
pop
test
or
xchg
push
and
movsl
test
xchg
sbb
or
or
loope
stos
pop
shr
sbb
mov
lea
fadds
cmpsl
movsl
mov
mov
test
gs
popf
and
jae
sbbl
shl
sarb
out
mov
mov
in
std
sub
int
push
mov
pop
sub
test
daa
and
fidivrs
rcr
shlb
in
mov
out
mov
mov
push
ffreep
stc
imul
vpshlb
loope
pmulhw
cmp
mov
pop
dec
add
adc
push
push
inc
lods
dec
mov
movsl
add
sbb
mov
sub
xchg
mov
cltd
test
popf
xor
in
and
cs
iret
fldt
fnstcw
mov
das
mov
pop
pop
xor
cs
fwait
add
fldcw
sub
call
xchg
mov
jmp
jl
dec
or
or
pop
loop
jecxz
out
sub
mov
rcll
or
scas
and
mov
sub
xchg
aad
rorb
cld
adc
push
daa
jmp
sub
mov
inc
popf
movl
imul
jno
jecxz
inc
cli
cmp
aam
sub
in
stc
mov
cmc
sub
cmp
movsl
jb
insb
in
arpl
jge
and
dec
push
iret
mov
inc
lahf
push
notb
jmp
jmp
dec
arpl
xchg
pop
icebp
lea
push
xor
popf
dec
mov
pushf
mov
mov
fs
cltd
in
mov
imul
jmp
xchg
cmpsb
and
jae
cmpsb
adc
rorl
sub
call
fldt
cmp
push
xor
lods
hlt
sbb
adc
mov
push
jecxz
cmp
mov
jns
movsl
or
jmp
cwtl
es
fsubl
inc
rcl
push
push
in
adc
xchg
add
xchg
fldt
xchg
mov
pop
mov
xor
rcrl
ljmp
lahf
lea
and
mov
sarl
cmp
mov
mov
lods
ret
jecxz
rorl
and
push
jmp
push
mov
mov
add
sbbb
sarl
lods
sub
jmp
popl
aas
and
shl
rclb
mov
mov
mov
inc
sub
or
out
sub
dec
lea
and
loopne
cmp
das
xchg
out
inc
sbb
aad
shll
mov
sbb
cmpsl
cwtl
adc
push
inc
pop
pusha
imul
flds
movsl
enter
lock
pop
stos
xor
xchg
andb
xor
movsl
pop
xchg
mov
test
ljmp
pop
push
jecxz
cltd
mov
push
pop
stc
incl
repnz
xchg
push
insb
cmp
or
aad
imul
lahf
dec
or
gs
pushf
fsubrl
push
sbb
out
or
test
xchg
das
cmp
test
and
mov
xchg
mov
js
lret
sub
daa
scas
jl
test
pushf
mov
inc
xchg
jae
xor
push
add
imul
cmp
fcoml
jecxz
lret
mov
fldl2t
call
push
je
dec
rorl
iret
lods
mov
imul
mov
adc
sub
test
js
pop
popf
pop
jp
mov
out
enter
or
mov
xchg
xchg
sub
xchg
lds
stos
adc
out
imul
stc
in
pop
add
sbb
add
and
lret
stos
jno
int
in
jb
sahf
popf
test
shr
out
or
repz
sub
aad
and
fndisi(8087
add
cmpb
test
xchg
ja
fbld
add
and
jb
cmp
popf
inc
stos
int3
cmpsl
aam
mov
pop
sub
lcall
xchg
test
inc
sbb
cmp
pop
movsl
lea
fadds
or
mov
addl
sbb
jne
or
xchg
pop
les
in
and
or
rolb
mov
sub
push
test
add
in
ljmp
jecxz
fwait
loopne,pn
mov
loope
lret
mov
dec
aad
dec
jo
stos
fbld
or
fld1
gs
cmp
fimuls
push
push
arpl
vpaddsw
push
scas
test
add
loop
mov
sbb
fwait
sub
mov
mov
mov
adc
jmp
push
sar
mov
mov
imul
push
insl
call
xchg
cmc
sbb
sub
adc
arpl
rcrl
cmc
adcb
test
dec
stos
cltd
or
push
fdiv
sbb
sub
in
sbb
jge
jmp
pusha
ret
lahf
cmc
jb
shr
mov
xchg
lds
std
push
shrl
leave
jne
orl
test
pop
ficompl
lea
mov
or
cmpsb
jno
xor
ss
cltd
push
push
inc
sbbl
or
pop
adc
pusha
dec
jge
test
icebp
sub
imul
cmp
bound
ja
push
lods
or
clc
cmpsl
cvtdq2ps
xor
sbb
fmull
sub
loopne
xchg
jmp
pop
adc
in
fistpl
shll
pop
sbb
test
adcb
mov
outsb
iret
or
dec
mov
test
lahf
jmp
or
fcoml
cmp
arpl
cmpsb
sub
or
push
cs
sub
fistpl
cmpsl
adcl
dec
mov
mov
vshufpd
jne
scas
sub
pop
test
in
popf
daa
mov
daa
sahf
xor
xor
jmp
sahf
mov
test
fcoml
andb
mov
cmp
out
movsl
and
xor
sub
popf
xchg
lret
rcrl
ss
inc
in
imul
sub
mov
xchg
jecxz
les
shr
inc
js
push
lret
xlat
push
mov
xor
xor
cmp
or
stc
dec
enter
icebp
jge
outsb
ret
adc
in
loopne
popf
sub
enter
fwait
cs
pushf
hlt
leave
sbb
fisttpll
icebp
or
jne
test
es
in
pop
leave
xchg
xlat
dec
es
jecxz
mov
lahf
js
cltd
rcrl
pop
push
xchg
iret
and
or
sub
xlat
int3
repnz
dec
xchg
in
iret
sub
push
add
lds
sub
in
xchg
pop
cmp
adc
push
lret
cs
mov
mov
int3
mov
add
or
stos
fcmovnb
fcomp
lcall
sub
ret
or
out
loope
outsb
sbbb
rcr
or
pusha
jp
push
lds
xchg
push
stos
lret
push
mov
scas
fwait
cmc
sub
fbld
and
or
jmp
stos
sub
das
loope
jae
popa
mov
cwtl
call
aas
shrl
syscall
test
lods
xchg
cmp
std
mov
test
popf
add
roll
lods
xor
push
mov
jle
outsl
dec
cmp
cmp
flds
or
mov
insl
add
sbbb
lds
in
int
xchg
or
adc
pop
xchg
roll
les
mov
and
aad
lea
sahf
es
ret
popa
jge
mov
andl
mov
test
or
add
sub
jmp
popf
lahf
popf
out
pop
stc
out
roll
adc
lret
iret
imul
xor
push
mov
pop
push
pop
in
fsts
adc
testl
mov
cmpsl
xchg
cmp
sub
sub
daa
imul
lods
data16
xchg
js
popf
es
loopne
scas
inc
call
dec
call
aad
mov
or
cltd
mov
pushl
scas
cmp
ret
push
adc
mov
mov
or
add
push
push
lds
push
popf
and
xchg
pusha
fists
psubsw
out
push
fabs
ret
das
ror
lods
sbb
popa
lds
fldenv
cmp
daa
xchg
fucom
test
cmp
popa
mov
in
mov
cmpsl
into
sbb
mov
mov
movl
rclb
cmp
pop
lods
loope
push
jne
fisubl
mov
xor
or
fstl
push
mov
xchg
adc
orb
popa
int
sti
mov
xorb
arpl
aaa
jg
xlat
pop
mov
xchg
test
icebp
cmp
and
mov
xlat
sti
cmp
popa
jmp
push
call
hlt
loope
jl
test
stos
stos
lock
xor
jecxz
je
popf
pop
xor
pop
adc
or
and
lcall
clc
fs
and
mov
xchg
lret
cmpsl
clc
stc
sbbl
sbb
inc
xchg
cmpl
cltd
lret
in
aam
std
stc
pop
push
dec
mov
fwait
int
xchg
pusha
mull
mov
js
iret
cmpsl
in
push
inc
cs
pop
sbb
push
xchg
ficompl
mov
cmp
adc
shrl
popf
test
add
cmpsl
dec
pop
jo
mov
leave
test
inc
paddusw
pop
cmp
xlat
rcl
mov
mov
aad
mov
rcll
push
insl
cmp
movsl
xor
out
cmp
sarl
sub
inc
mov
loopne
adc
ja
jge
int
push
enter
popf
jmp
sub
xchg
or
lea
and
inc
lahf
shll
frstor
cmp
movsl
mov
aad
cltd
cmp
mov
shl
imul
lahf
fwait
adc
fs
iret
sub
cmp
mov
push
mov
test
jnp
mov
or
push
and
fldt
and
in
int
jecxz
fwait
popf
orl
xor
push
popf
and
jmp
sbb
and
pop
pop
stos
adc
pop
mov
sbb
in
std
ret
aad
fistpl
mov
popa
stc
popf
jecxz
mov
out
fcmovnu
cs
sbb
xlat
cmp
je
pusha
xor
imul
push
test
inc
sbb
push
sub
loope
andl
lods
jns
in
in
test
ret
pop
pop
adc
lahf
decl
xchg
cmpsl
cmp
scas
sub
inc
ret
roll
xchg
push
in
dec
sbb
loope
cmpsl
mov
sbb
xchg
aas
ja
rorl
push
jmp
rcl
push
ret
lcall
xchg
inc
fidivrs
add
mov
cmpsl
in
sub
push
lret
ficoml
xor
mov
cmpsb
js
rcrl
lret
test
and
movsl
inc
leave
out
push
or
orl
add
arpl
bswap
fnstsw
mov
mov
xlat
scas
sub
nop
mov
imul
rcrb
sbb
jo
test
sbb
fwait
iret
lods
movsl
in
xchg
arpl
push
cld
sub
dec
sub
mov
subl
lahf
push
lock
push
imul
pop
add
push
add
jne
es
sub
xlat
pop
sbb
push
and
cmpsl
out
rcrl
lahf
lea
je
cmp
js
sub
push
jno
mov
adc
pop
cmp
adc
jo
js
fucomip
popf
cs
mov
in
test
sbbl
lods
ss
jmp
popa
sub
lret
push
imul
out
movsl
xchg
es
or
in
inc
imul
jae
jno
aas
inc
fcomip
inc
imul
ljmp
mov
xlat
out
out
sbb
out
icebp
roll
xor
in
es
pop
mov
push
adc
test
xor
dec
xchg
jmp
cmp
sub
pop
cs
out
adcl
test
out
pushf
xor
or
negb
fxch
sbb
inc
inc
push
push
cwtl
mov
add
pop
inc
add
sub
ret
addb
lods
jo
add
adc
inc
pop
cltd
inc
outsb
int
mov
decl
pop
adcl
and
test
lds
in
aaa
mov
lea
mov
xchg
das
and
mov
lods
flds
push
lret
lds
fwait
push
xor
shrl
adc
hlt
xchg
fnstcw
lahf
es
xor
ror
in
or
lret
push
int
xchg
gs
out
cmp
mulb
in
jb
jmp
fwait
add
lods
cmpsl
jge
in
mov
xchg
adc
xchg
sub
shlb
out
adc
mov
push
mov
mov
push
push
mov
test
push
pop
mov
xor
or
cmp
cmp
mov
xchg
dec
jg
shr
adcl
pop
test
aad
inc
jg
add
dec
imul
xchg
jmp
bound
or
fisttps
push
popf
jmp
iret
jp
aam
shl
cltd
lods
xor
popf
test
mov
lret
mov
lahf
out
or
pop
scas
xchg
mov
dec
and
test
lret
fildll
lea
movsb
jo
ja
xlat
lahf
xchg
mov
fists
xor
jmp
popa
push
clc
fwait
int
and
xchg
stos
sub
cmp
sub
stc
inc
stc
mov
leave
daa
stos
cltd
mov
xchg
test
jmp
jbe
xorb
ljmp
sub
xchg
iret
mov
or
rol
ss
and
outsb
sub
mov
cmp
shl
aad
add
in
mov
and
sar
popf
scas
imul
jns
xorb
xchg
xchg
in
cltd
test
fwait
lret
or
push
fxch
mov
popf
test
sub
push
jbe
cmp
test
add
lods
sub
or
jmp
sbb
out
stos
rcll
popl
in
les
popf
mov
fistps
dec
and
mov
sbb
flds
mov
fdiv
clc
fwait
rorl
xchg
sub
jo
cwtl
mov
hlt
popf
mov
test
or
aad
iret
pop
ljmp
jmp
lea
mov
xor
sbb
mov
sbb
mov
repz
dec
and
mov
fdivp
xorb
sbb
mov
sar
inc
xor
pop
sbb
cmpsl
sbb
dec
inc
push
ja
insl
lods
pushf
add
mov
cmp
xchg
push
fbld
andb
test
xchg
mov
adc
fldl
popa
mov
lahf
imul
jbe
lods
xor
out
imul
mov
ss
cs
xor
mov
xchg
shll
lea
jns
jno
jb
push
sub
repz
sbb
xlat
mov
out
flds
jg
push
push
mov
dec
popa
pop
shrl
xchg
sub
mov
mull
call
sbb
fucomi
add
cmp
or
hlt
int3
rorb
adc
sub
mov
aam
pop
ret
xchg
lahf
movsl
push
in
out
mov
xchg
bound
mov
iret
xchg
xchg
ret
sub
jp
cld
and
fstpl
cmpsl
mov
aad
dec
rorb
and
fs
pop
pop
sbb
dec
jecxz
pop
push
scas
mov
and
mov
add
jecxz
pop
mov
lea
sbb
sub
sbb
in
mov
dec
fwait
mov
aad
adc
pop
loope
mov
movsl
sub
pop
jb
in
leave
in
push
inc
lret
jne
mov
bound
and
xor
xchg
in
cltd
adc
je
leave
iret
mov
inc
aad
and
jmp
lret
sub
and
popf
mov
jae
aaa
std
xchg
mov
mov
mov
xchg
fstpt
in
movsl
mov
fwait
leave
test
xchg
sbb
daa
and
mov
jmp
cwtl
adc
adc
lret
pop
mov
pop
lds
enter
out
imul
sbb
fs
movsl
lahf
add
cmp
imul
jno
mov
loope
fwait
subl
test
inc
sti
stos
push
lods
mov
shrl
jmp
es
xchg
mov
andl
jno
xchg
in
xor
adc
fldt
fldenv
mov
cs
cltd
scas
sbb
push
setnp
popf
in
fisttpll
iret
js
push
mov
mov
cs
mov
xchg
stos
test
adc
sbb
and
aaa
mov
mov
xchg
test
jb
ds
push
stc
scas
sub
jno
in
and
test
mov
or
bound
or
mov
andl
out
or
xchg
push
movsl
push
and
int
aam
imul
mov
cs
popf
and
and
and
cmpsl
xchg
pop
or
pop
push
iret
mov
call
fs
push
push
sbb
lods
mov
mov
scas
hlt
cmc
sbbb
lret
xchg
xchg
adcb
add
inc
dec
pop
shrl
and
jecxz
shll
pop
cmp
xchg
sbb
cmp
fiadds
nop
cmp
fisubl
int
add
cmp
jecxz
int
ret
das
aad
mov
sub
sbb
rcrb
or
sub
test
lds
mov
cmp
push
pop
imull
ljmp
imul
popa
cltd
in
or
cmp
movl
iret
mov
scas
inc
sub
add
and
shlb
cltd
cwtl
lds
sub
xchg
mov
jecxz
push
lods
xor
add
pop
test
sub
shll
pop
pop
xor
adcl
xor
xchg
negb
inc
pop
lods
cmova
out
iret
dec
loopne
push
sub
xor
pop
push
filds
imul
mov
in
out
cmp
push
fnstenv
mov
xchg
adc
test
mov
movsl
stc
in
jnp
loop
stos
xchg
or
decl
out
jecxz
push
popf
lods
in
fadd
ret
shll
cld
hlt
cs
adc
xchg
outsl
repnz
cmp
leave
sub
out
lret
push
call
lea
fstpt
iret
movsl
xchg
add
or
icebp
dec
ret
xchg
dec
popf
dec
notl
test
push
dec
xchg
je
pop
adc
and
shll
mov
sub
sub
inc
inc
cmp
pop
test
shll
dec
sub
mov
cmc
mov
lods
pop
in
or
jmp
jmp
subl
push
iret
rcrb
jmp
jmp
test
xchg
clc
sub
test
add
dec
mov
andl
shl
sbb
sub
sbb
sub
xchg
push
inc
pop
popf
jmp
fs
mov
lcall
jmp
out
adc
xor
stc
xchg
sbb
push
jcxz
outsb
fildl
test
add
dec
xlat
pop
loope
xchg
mov
sahf
in
stc
push
mov
add
outsb
mov
stos
fidivs
jmp
xchg
shll
imul
and
into
and
cmp
stc
inc
shrb
mov
out
in
jae
mov
mov
and
or
and
add
arpl
push
xorl
loopne
into
jne
cmp
es
test
sub
out
movsl
inc
lds
fildl
pop
jne
sub
enter
pop
push
dec
in
xlat
xor
mov
cmp
iret
mov
loope
xlat
mov
xchg
int3
dec
or
push
mov
adc
sub
test
imul
cmpsl
pop
xchg
add
sub
cs
xor
adc
and
shrl
sub
cmpl
int
roll
movsl
xchg
cmpsb
sub
shlb
int
or
or
push
xchg
mov
and
mov
pusha
xchg
roll
inc
test
sbb
cmp
mov
imul
sti
push
sub
sub
leave
mov
stos
clc
adcl
movsl
in
aad
sbb
leave
rolb
rcr
jmp
sub
and
mov
andl
mov
divb
xchg
mov
push
fwait
leave
mov
lods
xchg
xor
or
iret
xchg
or
lret
std
and
jmp
filds
dec
inc
testb
fucom
jecxz
xchg
push
dec
cmpsl
dec
mov
mov
and
push
popa
movsl
imul
sbbb
inc
aad
sbb
dec
sub
cmc
sbb
daa
out
sub
xchg
push
add
and
jg
aaa
ja
fwait
mov
and
lods
popf
and
in
pop
fistps
ss
add
jmp
mov
idiv
iret
cmp
jmp
pop
xor
scas
dec
cmpsb
mov
sub
lock
insb
movsl
or
mov
cmp
or
test
mov
fcos
push
iret
lcall
aad
fcomps
sub
fldl
jecxz
ljmp
jmp
imul
and
addr16
add
clc
movsl
in
xchg
imul
daa
dec
mov
xor
cmc
fiadds
lret
cmp
cmp
test
adc
test
dec
insl
popa
and
ret
pop
ffree
push
mov
sub
jne
pop
lretw
fldcw
mov
pop
sub
and
movsl
repnz
or
scas
jae
mov
shrl
sbb
jne
scas
mov
stos
mov
cmp
movsb
jae
adc
mov
jg
fcmovnb
and
jne
ret
ds
sbb
daa
mov
clc
jmp
das
mov
stos
iret
sbb
inc
sbb
xlat
pop
loope
xchg
pop
push
inc
mov
jmp
adc
test
outsb
popa
es
pop
adc
inc
orl
movsl
pusha
movsl
mov
jmp
out
jns
or
out
lret
dec
or
popf
adc
insl
adc
out
cmp
push
imul
sarl
int3
popf
lahf
int
sub
lods
add
mov
loopne
cmp
pop
xchg
scas
pop
imul
cs
pop
or
push
xchg
jmp
sahf
pop
mov
enter
ret
xchg
mov
sbb
outsl
push
xlat
test
inc
fsubl
mov
leave
aad
sub
push
xor
xchg
mov
rcr
jle
mov
dec
scas
pop
fldenv
arpl
cmp
loope
imul
sar
cs
and
cmp
mov
pop
xchg
cmp
cmp
and
xchg
sbb
lds
aad
jge
inc
xor
out
xor
aam
int3
test
scas
adc
fsts
imul
test
mov
dec
pop
or
aad
int
and
cs
xchg
cwtd
pop
stos
mov
and
inc
out
pop
inc
fidivs
popa
test
cltd
sub
xor
pop
fwait
jae
push
mov
popa
jmp
mov
stc
or
lcall
sbb
iret
cltd
pop
lahf
jns
jmp
fldcw
cwtl
cmc
out
scas
mov
inc
jae
inc
popa
add
mov
lret
addl
mov
adc
mov
popf
stos
or
sbb
fldt
inc
pop
xchg
orl
push
je
mov
int
push
pop
ret
cltd
cltd
jmp
stc
mov
rorl
stc
pop
cmp
and
jae
ds
leave
scas
xchg
lods
xchg
pop
add
mov
and
mov
push
loopne
sub
jbe
es
out
xchg
inc
adc
int
push
push
jg
pop
cmp
clts
xlat
in
push
cmp
sbb
push
sub
xor
add
cmp
dec
mov
rolb
mov
or
pop
push
or
inc
or
push
dec
sbb
inc
fstl
xor
cs
mov
test
lret
jecxz
xchg
lods
sub
sub
cmp
cmpsb
in
cs
int
jmp
sbb
aaa
or
stos
adc
xchg
fwait
loope
pushf
pop
push
out
or
stc
negb
cltd
lret
call
cmpsl
movsl
mov
dec
xchg
test
iret
push
aaa
out
stos
rcr
mov
rcll
jmp
inc
iret
xor
pop
xchg
scas
or
leave
fwait
mov
mov
in
mov
loope
rolb
sub
mov
enter
pop
outsb
loopne
push
jmp
mov
jecxz
add
cmp
xor
push
xlat
lock
mov
inc
stc
adc
mov
sub
out
inc
dec
stc
mov
enter
xchg
pop
jecxz
rorb
outsl
rcll
daa
mov
push
xlat
hlt
mov
stc
inc
and
cmp
sbb
cmp
lea
xor
sub
mov
jne
fldenv
adc
negb
iret
loope
cmpsl
sub
sbb
pop
mov
stos
push
out
sub
sbb
test
jo
cli
jmp
inc
std
fadds
popa
lahf
mov
mov
push
cmp
dec
sub
mov
sahf
sbb
push
stc
nop
jmp
push
mov
out
jl
mov
jecxz
mov
es
sub
in
daa
imul
cli
xlat
movsl
jne
xor
pop
xchg
scas
lcall
shrl
cmp
cld
in
addr16
leave
jno
shlb
cmp
aad
push
cmpsl
out
xchg
cld
negb
mov
jecxz
outsb
arpl
and
jl
pop
and
fs
jle
jge
jbe
fistpll
pushf
clc
ss
sub
repz
xchg
adc
or
leave
adc
shrl
ret
pop
popf
mov
push
sub
in
stos
andl
stos
ret
xchg
lods
out
cmp
fwait
lahf
inc
rcll
add
stos
insl
loop
sti
adc
dec
out
xor
jne
and
stc
xchg
xchg
cmp
mov
subb
or
adcl
rorb
cmp
push
call
push
push
lea
sub
in
push
inc
mov
pop
sbb
cmp
mov
xchg
mov
fistps
cmc
in
lea
fnstenv
insb
sbb
sub
sub
imul
sub
and
repnz
jae
lahf
adcl
add
movsl
sub
cs
lret
xlat
pop
test
aad
in
mov
mov
cmp
mov
leave
test
jge
movsl
jb
cmp
rcr
pop
arpl
jae
mov
adc
push
mov
hlt
in
pop
fwait
cmp
add
cmpsl
fyl2xp1
xchg
cmp
es
sub
jb
xchg
mov
xchg
and
out
ret
pop
inc
orl
push
lret
and
je
stc
test
adc
loopne
popf
shrb
xchg
rorl
sub
cmp
pusha
mov
shrl
lds
jmp
and
dec
insb
push
mov
mov
sbb
and
popa
xchg
xor
mov
sbb
aad
push
loope
xor
ret
lea
bts
rcrl
leave
inc
loope
push
fcoms
mov
shrl
test
pop
sub
hlt
sbb
in
or
test
mov
cmp
and
cmp
ds
addr16
adc
cmc
in
mov
arpl
and
push
mov
adc
xchg
fdiv
movsl
and
ja
les
aaa
cmp
xchg
lahf
xchg
test
in
sub
ror
aad
mov
stc
cltd
fnsave
jmp
stos
push
xchg
dec
xchg
xor
roll
add
lea
adc
adcb
xor
jp
ljmp
cmp
sbb
bound
dec
arpl
ror
mov
pop
cmp
mov
popf
xlat
push
inc
in
xor
psrlw
and
jle
mov
iret
pop
and
xchg
in
lahf
js,pn
roll
pop
xchg
mov
popa
out
adc
in
loope
mov
mov
push
movsl
jmp
mov
and
pop
daa
cwtl
sti
stc
or
bound
rcll
cmp
loope
lret
sub
notl
fstl
daa
hlt
pusha
loope
testl
stc
iret
cmp
mov
inc
mov
cmpsl
iret
push
aad
repnz
dec
fbstp
fsubrs
jae
sub
sub
ljmp
shll
pop
sub
jo
mov
rolb
and
aad
in
inc
sub
stc
out
jno
int
pop
mov
jbe
repnz
or
dec
add
pop
jmp
push
xor
sub
cmpl
push
lods
push
leave
or
inc
fistpll
inc
clc
icebp
fxch
test
aam
push
mov
push
xlat
mov
push
push
or
and
rorl
mov
bound
adc
rcl
pop
mov
sar
call
pop
out
mov
scas
leave
mov
mov
sbb
adc
or
stos
or
xchg
popf
jecxz
mov
fstpt
imul
dec
cmp
idiv
lock
push
mov
fnsave
sub
in
aad
test
aas
fldl2t
inc
adc
pop
and
addb
mov
xchg
mov
out
and
add
lds
insb
xchg
sbb
jecxz
adc
adc
popa
rcll
mov
paddsw
pop
out
dec
imul
jmp
cmpb
cmp
fldt
xchg
inc
incl
jmp
stc
mov
xchg
sahf
mov
lds
test
imul
xchg
lods
int
push
cmp
inc
adc
in
mov
insl
xlat
dec
lock
adc
pop
fstl
cmp
mov
inc
xchg
popa
lret
lds
aam
ss
mov
ret
popf
fsubl
bound
mov
inc
inc
stos
cld
or
das
inc
mov
xchg
pop
dec
fimuls
xor
sbb
jno
stc
cltd
xchg
pusha
lods
sub
and
fs
jae
xchg
loope
or
cs
movsl
leave
dec
mov
lds
lock
cmc
xchg
sub
xchg
rcrl
dec
add
xchg
test
mov
add
in
cltd
ror
fwait
iret
and
imul
cmp
cltd
fldt
or
xchg
stc
daa
sub
xor
test
cltd
loopne
cmp
shlb
or
xchg
jmp
xor
sub
jl
pop
aad
xlat
cmpsl
sbbb
jae
test
aas
mov
lcall
stos
mov
push
xor
mov
test
jg
sbb
subl
les
mov
mov
mov
rorl
and
int
lret
sub
cmp
cmp
into
dec
jo
mov
jmp
shll
push
jmp
adc
popf
push
xchg
push
mov
stc
fdiv
scas
bound
dec
cmpsl
jae
jbe
push
ljmp
xor
test
mov
movsl
jecxz
fcmovbe
andl
or
inc
repz
es
inc
dec
mov
test
mov
mov
fwait
mov
fcoms
leave
pop
xor
inc
or
mov
push
or
movsl
mov
test
add
xor
adc
femms
popf
xchg
pop
cmp
cwtl
sbb
lea
nop
add
iret
leave
cli
pop
push
cmp
mov
sahf
and
testl
dec
pop
mov
sbb
xchg
inc
es
out
push
dec
popa
sub
dec
out
jae
inc
cmpsl
push
mov
stc
pushf
dec
sbb
jno
push
ret
call
popf
mov
mov
call
cltd
lea
mov
aad
in
xlat
add
fistl
push
inc
inc
sbb
or
cmp
mov
lods
mov
push
fmuls
add
cmp
or
xlat
mov
dec
mov
fistpl
jnp
and
sub
add
fxch
jmp
lret
push
inc
lock
test
out
daa
add
aas
into
pushf
push
xor
sub
shlb
xlat
mov
out
xchg
jmp
out
mov
jecxz
xchg
lahf
lret
or
and
jg
pop
add
xor
pop
adc
pop
ljmp
add
xlat
jecxz,pn
imul
imul
adc
lods
or
cmp
call
inc
icebp
and
adc
rcrl
clc
lea
cmp
dec
add
fwait
cmp
cmp
mov
xor
mov
in
mov
shl
jb
imul
push
lret
xchg
stos
mov
aad
imul
cmpsl
mov
in
fbld
aas
popf
hlt
pop
lock
icebp
test
arpl
mov
sub
and
cmp
rcrl
sbb
jge
in
and
jns
outsl
js
push
lods
ret
or
movsl
push
das
test
xor
int
lahf
push
aam
push
xchg
cltd
in
popf
jmp
sbb
sbb
cmpsl
cmc
xchg
xor
mov
mov
in
out
dec
lahf
cs
ja
pop
std
inc
push
cmp
imul
and
sahf
pop
and
sarl
test
ss
outsb
fidivs
add
xchg
jl
scas
pop
jo
arpl
stc
mov
cwtl
jmp
xchg
andl
dec
das
repnz
xlat
mov
mov
orb
loopne
mov
ret
inc
sti
and
mov
and
mov
adc
shll
sbb
pushl
lahf
push
leave
jo
jne
mov
or
mov
inc
xchg
ljmp
mov
aad
pop
cmp
mov
fnstenv
and
in
cltd
inc
lods
insb
out
xchg
mov
jmp
lock
pop
movsl
cltd
in
adc
xlat
fisttpl
sub
scas
pop
push
pop
cmpsl
aad
mov
lods
jecxz
in
add
into
or
add
movsl
shr
lret
fwait
mov
out
sbb
in
jge
scas
subl
sti
sub
push
adcl
movsl
cmp
xor
test
cmp
and
aam
std
in
cld
inc
mov
into
test
fs
sbb
pop
push
loope
add
mov
mov
jg
sub
call
stos
mov
int3
pop
xchg
jmp
subl
imul
ror
repz
sbb
stc
mov
lds
xchg
cmpb
stc
push
flds
inc
loop
fstps
les
stc
in
adcb
push
xchg
push
ja
jecxz
addb
scas
in
xchg
cs
mov
fcmovu
mov
int
pop
xlat
sub
ret
mov
pop
adc
xor
in
fldcw
mov
pop
out
fdivrs
fsubl
adc
stos
mov
fldenv
xchg
sbb
and
inc
mov
jmp
jo
pop
mov
or
xchg
mov
jmp
xchg
ret
in
fnclex
mov
mov
sub
fs
dec
aam
rorl
fistps
leave
jbe
xor
andb
cmc
mov
or
movsl
sub
sbb
push
mov
leave
and
sbb
or
sub
test
xor
js
pop
out
std
jmp
arpl
scas
sub
sbbb
ficoml
adc
jecxz
sub
lea
paddsw
jmp
cltd
nop
xchg
xor
inc
scas
cmp
leave
iret
stc
lahf
lock
test
mov
cmp
mov
loopne
xchg
xor
fwait
xchg
enter
or
mov
xor
out
movsl
les
mov
in
ret
mov
shll
jne
or
xchg
loop
clc
jecxz
mov
fcmovnb
sub
js
adc
mov
push
fsubl
adc
stos
and
push
lea
sar
sbb
test
rcl
popa
aas
stos
rolb
faddp
into
lds
cmp
rcrl
shll
lret
xlat
xorl
xchg
iret
xor
rorl
pop
pop
out
ret
inc
dec
jne
xor
xchg
adc
iret
in
addr16
je
mov
in
xlat
and
push
add
lds
sbbb
jb
ljmp
int
mov
fwait
in
mov
aad
xor
je
addr16
addr16
jmp
pop
adc
cmp
insl
shrl
and
mov
sub
rol
xor
lahf
mov
movsl
popf
jo
add
adc
cld
dec
in
cmp
mov
addr16
xchg
std
ficompl
shrl
cmp
pop
int3
imul
cmpsl
push
pop
xchg
in
sub
leave
ja
xchg
lahf
or
rcl
cltd
add
jl
pop
rcr
adc
out
insl
xchg
pop
stos
xchg
sub
push
fwait
movsl
mov
adc
mov
rorl
mov
xlat
data16
sbb
sbbl
jecxz
mov
scas
pop
add
mov
mov
jmp
adc
xchg
push
pop
call
pop
out
xchg
andl
fcomp
repz
mov
lret
push
fcmovne
les
fcoms
xchg
xor
in
in
or
jmp
mov
loope
mov
aad
in
sar
pop
mov
adc
xchg
jmp
imul
add
cmp
sub
cmpl
call
rcrl
xchg
loope
insb
stos
cmp
iret
lret
mov
add
clc
pushl
fisubrs
lret
cmpsl
lahf
mov
stc
push
xor
push
mov
mov
int
mov
mov
stos
in
adc
cmpsl
iret
add
dec
xchg
sti
stos
xchg
pop
imul
cmpsl
xor
sbb
sub
mov
xor
int
lea
insl
das
fs
inc
test
adc
mov
dec
int
xchg
clc
cltd
pop
dec
cmp
bound
jne
loope
sub
outsb
inc
xlat
and
sahf
loopne
cli
and
aam
mov
pop
aad
jge
xchg
push
push
sub
pop
out
in
lds
fst
dec
pushf
movups
rcrl
sub
loope
jmp
or
mov
mov
xor
ficomps
or
jmp
add
add
mov
pop
xor
push
cmp
in
xchg
in
daa
mov
daa
test
xchg
adc
xlat
lret
push
mov
jae
lcall
cmp
cmp
dec
lods
xor
subb
fisubrs
leave
inc
mov
jmp
inc
popf
sub
push
lds
repnz
push
ret
test
test
or
cmp
xchg
cmp
aad
inc
daa
inc
ljmp
imul
jno
push
sub
jmp
xchg
fchs
or
out
mov
shr
push
sbb
cmp
mov
andl
testb
popf
call
and
cmp
inc
cmp
sub
jnp
cwtl
les
sar
lahf
adc
movsl
fbstp
ja
push
out
xchg
cltd
mov
cmp
dec
popa
xchg
xlat
scas
js
jmp
loope
or
mov
in
roll
out
and
xchg
int3
mov
fstpt
mov
mov
cs
adcb
pop
xchg
lds
sub
dec
lahf
fbstp
popa
push
sub
shr
lret
mov
test
jmp
dec
cmp
push
popa
xor
subb
stc
pop
adc
mov
dec
pop
sbb
or
fneni(8087
fnstsw
adcl
enter
inc
fcmovnb
mov
les
add
ljmp
xchg
push
mov
fwait
rorb
sub
and
leave
sbbl
fstl
sbb
decb
lods
pop
mov
in
lahf
lds
dec
sub
iret
sbbl
mov
icebp
in
enter
cmc
or
sbb
mov
gs
sub
inc
sbb
push
fldl
or
les
jns
or
or
mov
call
popa
cmp
fistpl
dec
nop
incl
scas
stc
xchg
in
cmpl
loope
xchg
xchg
rclb
and
sub
cmp
imul
xchg
lahf
inc
test
stc
push
xchg
imul
xor
sarl
lahf
mov
aaa
sub
lret
sub
cmp
push
inc
xchg
jmp
pop
in
inc
fwait
sub
arpl
cmp
cmpsl
xchg
fwait
sbbl
sub
mov
sbb
sub
dec
into
pcmpeqb
in
mov
test
mov
shll
or
lods
enter
daa
aas
fldenv
aad
mov
lret
clc
movsb
mov
jmp
inc
mov
jo
ljmp
mov
or
clc
ret
cmpsb
xchg
cs
sbbb
mov
push
lret
cmp
leave
mov
add
and
ror
test
mov
sub
out
pop
cmp
dec
sahf
flds
gs
cltd
cmpsb
mov
lods
xchg
cmc
pusha
fnstsw
shr
sub
int
cmp
aad
xchg
pop
movsl
xlat
push
lods
in
imul
jne
adc
ss
int
mov
leave
sbbl
and
fnstsw
fisubrs
scas
ds
pop
andb
ret
and
lea
push
jns
movsl
push
mov
out
mov
pop
and
cmp
xchg
leave
psubsb
jo
ret
insl
test
jle
aad
clc
mov
xchg
loope
lahf
inc
dec
dec
mov
negl
dec
pop
pusha
aas
lods
lds
fstpl
dec
movsl
ljmp
int
mov
imul
mov
lea
stc
pop
or
mov
mov
aam
test
jp
es
pop
dec
adc
in
pop
jbe
std
lods
test
leave
lds
push
and
pop
cltd
and
push
fst
sub
popf
mov
add
mov
xor
inc
adc
push
stc
aad
pop
dec
ret
cltd
xchg
repnz
ret
and
mov
rcrl
cwtl
stos
loope
inc
xor
jge
mov
sub
mov
cmp
sbb
push
cltd
sbb
lret
loopne
mov
and
cmp
pop
dec
insb
pop
push
add
inc
sbb
loope
jns
loop
sub
cmc
pop
stos
or
out
xchg
lahf
icebp
mov
aas
cmp
pop
sbb
fistps
mov
and
xchg
test
push
lret
iret
pop
sar
push
cmp
sub
sahf
in
push
pop
push
sub
mov
mov
test
aaa
xchg
mov
roll
mov
adc
push
sub
jne
popf
fwait
out
test
mov
aas
fidivs
fstl
cmc
ljmp
pop
jmp
enter
mov
ror
stc
xor
fwait
mov
mov
inc
popf
pop
cmp
dec
out
sub
leave
jmp
mov
sti
xchg
imul
std
aad
loop
mov
fisttps
sub
fsubl
in
popf
lods
add
insl
popf
test
sub
push
mov
test
push
cmp
test
xlat
jg
stos
fistps
mov
fwait
push
mov
leave
fwait
sub
mov
insl
mov
mov
shll
nop
ja
or
in
and
jo
jle
and
cmc
lods
mov
adc
imul
in
in
and
int
mov
test
push
mov
ret
xchg
jmp
js
dec
adcb
inc
sub
mov
shll
jmp
adc
mov
stos
dec
test
and
sbbb
fistpl
fbld
out
xchg
xchg
mov
push
jl
dec
ret
int
insl
shll
push
fwait
mov
xor
push
mov
ffreep
fisttpl
xchg
push
inc
addb
jns
xchg
push
out
mov
xchg
xchg
xchg
inc
cmp
xchg
loopne
pop
cs
aad
push
subl
jnp
jns
stc
jmp
loope
pushf
test
xchg
lods
push
leave
sub
adc
cmp
sbb
in
shll
and
jmp
lods
xchg
sbb
in
mov
mov
xor
mov
jecxz
adc
stc
and
cmp
lods
adc
mov
mov
push
jne
jbe
subl
imul
orb
adc
or
test
cmc
leave
and
sub
lcall
pop
xchg
or
push
cmp
test
mov
loope
xchg
dec
into
inc
loopne
jns
out
lds
adc
mov
cs
data16
lds
sub
movsl
jmp
addr16
push
movntps
insl
jg
jmp
loopne
addl
pop
lret
movsl
ss
int3
in
jecxz
nop
sbb
rol
lret
test
out
dec
pop
sarl
xchg
call
test
lahf
mov
xchg
icebp
sub
test
or
lcall
rol
mov
adc
jmp
inc
mov
out
mov
dec
jo
out
inc
ret
jecxz
cmp
xor
mov
jmp
mov
mov
add
in
jno
push
test
dec
sub
mov
pop
gs
xchg
xlat
mov
xchg
xchg
cmp
push
cmpb
jge
xchg
mov
sub
and
test
in
rolb
xlat
ret
sub
cmp
roll
ret
scas
iret
sub
inc
pop
out
out
mov
jo
inc
jge
leave
frstor
adc
jecxz
xor
shll
pop
mov
imul
rorb
mov
shrl
mov
test
enter
lods
dec
pop
popf
rclb
jmp
fcoml
fidivs
lret
sub
test
pop
lock
ror
mov
icebp
xchg
mov
pop
push
insl
sub
lock
sub
iret
cmc
mov
fwait
lea
push
jno
popa
loope
inc
scas
cmp
iret
pop
in
mov
aas
loope
cltd
pop
push
inc
scas
imul
sub
fdivr
in
and
push
xchg
dec
adc
jp
sbb
popa
sub
adc
fildll
mov
test
rcr
mov
loope
loopne
and
andb
xchg
and
mov
test
in
mov
jo
in
push
popf
lret
pop
lahf
roll
icebp
dec
nop
xlat
rcl
sub
loopne
out
adcb
mov
and
mov
scas
adc
pop
cltd
jge
cld
mov
jl
scas
andb
mov
or
cmp
insb
fldcw
mov
jmp
in
mov
jo
xchg
into
sub
icebp
jecxz
out
xor
and
imul
dec
jmp
arpl
mov
popf
xchg
data16
lods
mov
add
fistpl
sbb
xor
pop
or
ss
xor
jne
in
lods
ret
lods
cmp
jae
aad
insb
push
sbb
mov
out
int
mov
lret
test
mov
stc
test
sbbl
in
inc
and
and
dec
shll
rolb
aaa
stos
push
xor
cs
out
sub
jmp
mov
in
xchg
mov
aam
cmpsl
lods
adc
mov
jb
cmp
imul
pop
loopne
fistps
daa
xchg
pop
int
scas
repz
inc
sar
xchg
popf
pop
mov
sbb
in
leave
cmpb
push
mov
iret
mov
or
xlat
mov
es
mov
in
icebp
mov
xchg
jmp
clc
and
fwait
clc
andb
push
mov
shlb
popa
mov
mov
andl
mov
lds
rcll
loop
sub
mov
in
xchg
push
dec
xor
inc
out
lods
lret
mov
cmp
cs
cltd
mov
push
xor
fldt
mov
sbb
stc
rcll
sar
add
inc
shr
pop
mov
xor
sbbb
adc
add
jmp
loope
orl
mov
xlat
rcl
movsl
cmp
lahf
stos
sarl
int
cmc
mov
scas
cmp
pop
mov
in
push
jne
sub
jmp
cmp
sarl
xchg
sub
push
aad
sub
jbe
test
xlat
sub
jmp
push
pop
bound
movsl
cmp
and
or
popf
and
nop
icebp
pop
emms
out
and
mov
inc
stc
scas
cwtl
cmpsl
and
fwait
push
mov
cmp
jmp
dec
jmp
into
lea
out
xchg
sub
popa
sub
jmp
ja
push
dec
push
in
jmp
mov
scas
push
fistpl
insb
test
iret
lahf
subl
mov
sub
lea
mov
mov
dec
stc
stc
push
cs
int
out
mov
mov
jne
xorl
stos
xchg
fldt
pop
sub
push
scas
xchg
fstpt
in
sahf
adc
test
ss
adc
sbb
adc
xor
mov
bound
pop
dec
outsl
pop
loopne
sub
add
xchg
bound
ret
mov
adcl
stc
cs
enter
inc
push
and
popf
pop
mov
lret
mov
lcall
add
out
mov
mov
inc
sub
test
mov
xchg
mov
test
psrlq
scas
fwait
dec
and
rorl
pop
push
clc
repz
fstl
xchg
lret
shll
imul
out
inc
adcl
sub
stc
test
cltd
aad
stc
mov
mov
pop
cmp
or
into
mov
push
in
mov
data16
les
js
iret
and
aad
scas
pop
and
sbb
shrl
mov
out
sbb
jecxz
loop
sti
or
and
sbb
gs
jg
mov
fwait
test
sbb
cltd
mov
int
cmp
mov
test
adc
sub
in
flds
cmp
sub
popa
jle
pop
fldlg2
xor
push
pop
and
pop
cs
test
adc
mov
fisttpl
add
lahf
xlat
cmp
lods
popf
aad
rcrl
sbb
pop
in
stos
test
pop
pop
std
movsl
adcl
push
mov
imul
pop
adc
loope
js
lahf
insl
shll
mov
add
fwait
mov
nopl
cmp
cmp
aad
mov
mov
leave
push
mov
xchg
cmpsb
inc
xor
inc
es
enter
loope
scas
out
stc
cmpsl
adc
notb
mov
fstpt
sbb
out
xchg
pop
jecxz
inc
lea
popf
rcll
xor
xor
xchg
push
int3
in
mov
sub
daa
test
mov
aas
mov
xchg
clc
sbb
cmpsl
pop
iret
lahf
sub
cs
xorl
shll
xor
sub
cmp
sub
roll
xchg
jmp
xor
int3
mov
cmpsl
adc
dec
leave
mov
lock
add
or
roll
pop
cmp
xchg
jbe
and
dec
in
cltd
cmpsb
or
xorb
or
cmp
test
mov
fsubrs
fucomi
ror
cmp
pop
lahf
iret
mov
mov
xlat
movsl
inc
cs
cltd
pusha
in
pushf
or
subl
mov
mov
popf
decl
and
test
xchg
bound
pop
test
lcall
test
dec
popa
ret
pop
mov
push
into
cli
leave
adc
add
mov
popl
sbb
jp
test
clc
cs
out
dec
mov
xor
jne
repz
push
mov
pop
iret
test
cmp
inc
in
mov
lds
sbb
and
lea
out
pop
lahf
test
rcl
pop
jmp
stos
je
xchg
les
xlat
pop
jbe
rcrb
aam
jb
aad
sub
push
xor
mov
in
subl
pop
or
mov
fsubrp
scas
pop
push
sbb
int
shrl
nop
bound
add
push
lcall
in
popf
es
test
xchg
push
sub
xchg
fimuls
add
and
cmp
sbb
loope
not
out
xchg
cmp
push
lea
push
in
xor
cltd
fs
add
out
cs
inc
lods
fucomp
sbb
pop
movsl
mov
inc
ret
aam
cmp
imul
mov
mov
lea
std
mov
mov
ret
mov
lcall
lret
pop
test
adc
xor
mov
xor
lret
push
roll
adc
rclb
stc
shlb
pop
lahf
sub
inc
xchg
add
inc
xchg
fcoml
leave
cmp
lods
stc
in
arpl
mov
fwait
adc
jmp
or
xor
and
sub
sbb
aas
vcvtps2dq
in
setnp
shll
imul
cs
loopne
in
cmp
fs
push
test
xor
adcb
fxch
fwait
mov
xchg
lret
mov
cmp
lea
sbb
sbb
dec
cltd
mov
iret
lret
sub
popf
jecxz
jecxz
jecxz
cmp
mov
adc
adc
push
scas
adc
mov
pmovmskb
mov
xchg
dec
add
mov
sbb
int
push
jl
pop
mov
jne
xlat
mov
stc
push
jmp
stos
adc
adc
xchg
xor
inc
daa
iret
js
stc
andl
in
call
push
lahf
and
int
xchg
jbe
xchg
mov
push
cmpsl
icebp
inc
jnp
test
ret
sbb
pxor
fstl
sub
es
mov
push
mov
ficoml
xchg
repz
lret
push
jne
mov
push
lcall
cmpsb
xor
in
mov
int
adc
pop
jge
xchg
xchg
imulb
rcll
aas
iret
or
cltd
mov
sub
xchg
adc
filds
push
decb
adc
aas
pop
leave
int
sbbl
sub
mov
jne
lahf
in
jl
jecxz
lret
popa
int
pop
adc
dec
mov
popf
imul
shr
negb
out
lret
push
cmp
mov
sahf
stos
sarb
push
xchg
mov
out
popf
cmp
int
cs
movsl
xchg
into
mov
push
add
xchg
fmull
rcr
aaa
jmp
lods
cmp
iret
xor
in
mov
pop
filds
out
fwait
in
rcrl
cmpsl
mov
adcl
push
or
scas
aad
pop
in
sub
movsl
jae
push
leave
jmp
loope
push
roll
and
or
stc
loop
sub
sub
inc
mov
andl
mov
cmp
or
xchg
mov
cmp
sarl
stos
push
xchg
sub
sub
mov
pop
cld
in
lret
cmpsl
pusha
lods
sub
cltd
jmp
push
test
insl
popl
inc
cmp
fisubrs
les
xchg
rol
stos
pop
gs
repnz
nop
sub
test
pop
ss
cmpsl
lods
aas
ja
mov
popf
test
loop
sub
xchg
bound
das
cmpl
subb
lret
inc
int
jb
or
sub
sub
sbb
xchg
stos
xchg
mov
roll
fprem
int
out
and
jecxz
sbb
stc
push
subb
sub
lea
cmpsl
sub
cmpsl
stc
scas
fidivs
jnp
sub
shrb
mov
adc
cmp
xor
mov
mov
cs
sarl
xchg
xor
push
inc
mov
dec
jecxz
imul
jae
scas
adcb
jne
test
fsubs
das
lret
test
push
in
xchg
dec
fs
jmp
out
insl
enter
lods
sbb
xor
cli
push
in
call
push
xor
pop
mov
xlat
adc
fwait
in
push
aaa
pop
in
popf
and
push
int
in
jge
cmp
insl
or
mov
in
add
pop
cs
push
stos
push
or
test
aam
push
add
jbe
in
loope
and
popf
fidivl
bound
push
dec
sub
mov
mov
in
in
scas
xor
xchg
jae
pop
adc
iret
lret
popf
test
fldenv
incl
rorl
stc
jmp
fcmovnb
push
jg
cmp
xor
add
lods
xchg
addb
cwtl
and
and
shlb
mov
fistpll
es
int3
lods
aad
cmc
or
push
out
mov
mov
cmpsl
test
push
sub
xor
cmp
adcl
dec
ds
lahf
xchg
add
jecxz
jmp
cmp
adc
xchg
lds
es
test
lods
lods
cmp
mov
mov
and
sbb
cmpsl
cmpsb
pop
incb
fsts
and
popf
in
mov
movsl
fwait
push
adc
add
sbb
push
adc
pop
sub
mov
mov
jl
in
xchg
mov
cmpsl
test
lods
leave
push
or
lret
jecxz
jg
loopne
sbb
stos
sahf
jnp
lock
lret
push
test
cmp
mov
hlt
aad
mov
push
out
inc
mov
pop
xchg
js,pn
ja
lock
fistl
es
test
push
push
mov
jge
mov
mov
mov
pop
xchg
mov
scas
fisttpll
jmp
mov
loope
xchg
lret
test
push
xchg
xchg
nop
sbb
sub
mov
push
add
mov
roll
gs
sbbb
lea
in
fisttpl
ds
nop
or
mov
adc
mov
out
insl
add
addl
jmp
enter
push
and
dec
jne
cmp
in
aaa
scas
push
mov
daa
and
cs
popf
leave
lret
mov
iret
loop
or
xor
cmp
or
iret
mov
notb
cltd
aad
pop
xchg
fwait
sbb
in
out
roll
imul
xor
scas
cmp
repz
sub
stc
xor
push
mov
xchg
inc
mov
mov
jmp
fistl
pop
mov
stos
cltd
int3
scas
xchg
and
lods
scas
addl
ret
adc
mov
repnz
cmp
in
ret
push
pop
test
adc
xor
mov
xchg
cltd
adc
xchg
and
jg
or
out
jmp
mov
inc
adc
jge
cmp
push
pop
cld
mov
mov
test
lods
stc
xchg
shll
xchg
dec
jecxz
rcrb
xchg
xchg
add
pop
nop
jmp
jmp
sub
clc
dec
mov
lahf
fnsave
ret
fildll
add
popa
sub
loope
jecxz
mov
add
pop
lods
pop
xchg
cmp
lods
cwtl
xor
std
ja
out
lds
mov
mov
cmp
dec
cmpsl
fimuls
adcb
adc
stc
mov
mov
cs
in
cmp
cmp
in
mov
and
leave
or
xchg
orl
scas
mov
rcrl
cmpl
jecxz
or
jmp
scas
adc
icebp
adcl
sbbb
xchg
mov
aad
cmp
sub
cmpsb
xchg
imul
sbb
pop
jmp
add
in
push
or
jecxz
cltd
test
fwait
lret
test
pusha
cmp
in
push
jl
loope
ljmp
jb
popf
and
andl
jg
stos
pop
xor
jg
test
push
xchg
xchg
fwait
lds
pop
loope
lea
daa
mov
sub
push
scas
in
jecxz
push
aad
sar
cmp
iret
imul
mov
in
stc
dec
pop
jbe,pt
sbb
call
imul
xor
jmp
test
aad
int
mov
fistpl
cmp
cmp
inc
add
es
cltd
mov
fistps
xlat
sbb
or
test
adc
rcrl
scas
bound
popa
inc
pop
push
test
inc
lds
xor
rcrl
mov
or
loope
mov
xchg
mov
mov
cmp
and
out
lret
sub
xlat
jne
lahf
fnstcw
push
xor
rol
jne,pn
mov
stc
out
hlt
into
rol
test
stc
imul
in
or
xchg
cwtl
xchg
mov
lods
xchg
add
xor
out
fistl
outsb
imul
jp
and
add
popf
mov
lahf
cmp
cmp
lea
jmp
clc
sbb
and
add
and
test
xor
insl
iret
cmp
stc
arpl
adc
add
jae
xchg
fwait
orl
mov
sub
cmp
inc
xor
add
pop
jmp
adc
sub
popf
mov
iret
lret
mov
jp
add
mov
mov
adc
cwtl
push
dec
mov
xchg
sti
mov
enter
push
out
imul
fldt
push
adc
pop
out
iret
jl
dec
mov
push
test
jae
xlat
mov
mov
dec
mov
jbe,pn
fxch
or
sbb
rcrl
repnz
add
fwait
sbb
mov
fwait
pop
and
pop
inc
cmc
jno
xchg
jge,pn
jecxz
add
and
jmp
mov
adc
add
xchg
push
data16
and
pop
mov
add
out
cmp
jae
fists
lds
or
jb
add
fistps
leave
in
and
or
fdivl
push
fists
movsl
add
adc
xor
xchg
dec
and
aas
shlb
add
into
cs
movsl
jo
inc
inc
adc
cmovnp
es
xchg
dec
add
test
fucom
and
cltd
sub
push
mov
lret
pop
fwait
aaa
inc
loope
sub
test
mov
cmp
out
xor
push
mov
in
xchg
and
jp
cmc
sub
sub
lret
cs
es
subb
mov
xchg
push
sahf
adc
fistpl
fxch
pop
lea
loope
and
popa
add
xchg
ss
lret
dec
xchg
loope
mov
stc
aas
iret
sub
mov
and
inc
jmp
scas
add
mov
lret
xor
jne
test
jge
cmp
aaa
iret
and
fxch
mov
leave
andl
xchg
add
or
mov
push
sub
push
daa
sbb
imul
mov
scas
sbbb
mov
lret
mulb
mov
iret
enter
jge
int
rclb
sub
int
fstpl
addr16
xchg
mov
test
imul
lods
cmpsl
mov
inc
lahf
push
sub
inc
jmp
out
andb
and
or
nop
in
adc
or
push
mov
lahf
fnstsw
cmp
xchg
fldcw
insl
xor
data16
jae
jmp
insl
and
xchg
nop
add
jae
insb
into
and
cs
mov
int
cmp
mov
into
mov
add
popf
es
nop
sbb
pop
xor
addr16
pop
ficoml
pop
fldenv
adc
in
or
loope
mov
mov
loopne
cmp
mov
xchg
xorl
xchg
roll
xchg
insb
stos
mov
ret
add
pop
jmp
popf
mov
xor
xchg
fildll
cltd
add
lahf
sbb
sbb
jecxz
xorl
add
add
testl
or
int
mov
scas
lea
mov
ret
les
sub
adc
push
call
shlb
subl
ds
sub
subl
and
xchg
add
dec
loope
in
sbb
imul
lds
cmp
sub
xlat
jno
movsl
xor
mov
shll
fucomi
jmp
not
ficoms
iret
jne
fldcw
inc
cmp
xlat
call
dec
in
push
and
xlat
xor
sub
movsl
imul
sub
aaa
cmpsl
push
lea
xchg
add
dec
pop
popa
popf
pop
dec
sub
dec
inc
dec
scas
int
push
out
or
in
repz
loop
mov
xchg
mov
pop
aas
popf
into
mov
scas
cmp
xchg
lea
jmp
xor
cmp
fmul
dec
loope
stos
ja
xchg
subl
pop
inc
xor
xchg
xchg
mov
leave
popf
dec
pop
mov
adcl
test
jecxz
and
roll
mov
xchg
push
pop
lea
sub
insl
lahf
daa
lret
inc
cltd
test
push
bound
in
jecxz
cmpsl
int
ds
rcll
cmp
pop
shr
push
mov
lahf
jb
jbe
mov
nop
xor
jl
das
push
cmpsl
mov
scas
cmp
xchg
stos
push
shrb
mov
adc
loopne
cmc
or
popf
cmp
jmp
mov
js
test
mov
xchg
leave
mov
movsl
ljmp
sahf
fadd
and
imul
adc
xchg
mov
in
sub
mov
int
lea
decl
scas
sarl
or
xchg
test
jae
out
outsb
cmp
mov
gs
push
rclb
mov
jne
enter
adc
popf
out
adcb
lea
xchg
dec
mov
push
or
loope
test
pop
jne
es
insl
lret
in
cmp
inc
cmp
test
int
xchg
ror
aas
pop
in
sub
clc
mov
pop
jae
xchg
lret
in
push
mov
xor
mov
mov
fdivr
imul
movb
movsl
cmp
aad
adc
mov
cmp
sub
cmc
fnstsw
iret
sub
xchg
xchg
dec
pop
lods
sbb
mov
sbb
popa
xchg
pop
scas
fwait
adc
mov
xor
jns
test
outsl
mov
icebp
push
nop
pop
push
sbb
sahf
lahf
xchg
out
cs
int
sub
mov
pop
pop
xlat
imulb
dec
sbb
imul
fwait
xchg
and
xchg
subb
and
fldcw
or
lret
clc
movsl
and
mov
ljmp
xchg
adcl
mov
leave
popf
add
call
pop
jns
sub
push
imul
mov
sbb
sbb
inc
jmp
fsts
dec
inc
movsl
sub
mov
mov
lahf
movsb
cs
lea
rcr
adc
aad
enter
sub
sbb
sub
pusha
aaa
imul
push
or
sub
es
push
push
mov
iret
jecxz,pn
pop
mov
sub
test
dec
cmp
xchg
in
mov
shrb
mov
jmp
imul
js
popf
rorl
sub
popf
iret
pop
xchg
sub
xchg
cmc
pushf
sub
outsl
mov
mov
loopne
mov
daa
mov
jmp
add
mov
fadd
and
fcoml
cs
popf
leave
inc
xor
sbbl
sub
aad
push
jp
stc
xchg
adc
mov
add
mov
subl
mov
aaa
andb
lods
icebp
stos
xor
lds
cmpsb
or
sub
mov
ret
shll
cmp
sub
mov
cmp
and
out
in
or
xor
nop
or
in
iret
cld
popf
fldt
fmull
push
dec
cmpsl
pop
stc
roll
and
mov
fisttpl
mov
iret
and
cmc
test
xor
pop
inc
loopne
in
ja
pop
loop
ret
mov
aam
test
daa
iret
xor
leave
cmp
or
xor
sub
xor
inc
or
cmpsl
push
dec
add
add
lods
iret
push
xchg
lahf
in
das
leave
xchg
in
lds
and
popa
mov
fisubrs
pop
mov
mov
lahf
fsubrs
mov
sub
sbb
iret
jne
and
jmp
in
aad
stc
ja
lods
xchg
jmp
imul
jae
je
scas
xor
aas
adc
lahf
jecxz
push
xchg
rcrl
aad
sbb
daa
sub
sbb
cmp
iret
and
stos
mov
popf
xchg
nop
lea
mov
sub
test
sub
and
xchg
xlat
aas
add
mov
cmp
sub
pop
fwait
shrl
lea
mov
sarl
movsl
fildl
inc
or
iret
aad
xor
dec
xchg
cwtl
scas
mov
push
daa
aam
lahf
jmp
cmpsb
out
mov
xor
imul
mov
in
push
mov
cwtl
mov
add
repnz
in
lahf
mov
cmp
pop
pop
or
ret
fwait
cmpsl
movsl
or
mov
js
xlat
jecxz
adc
test
pop
lea
sub
push
xor
or
imul
lds
popf
fucomp
cmpsl
push
xlat
xlat
in
add
xor
scas
mov
mov
test
into
sub
xor
testb
sub
out
pop
loop
pop
xor
push
test
popf
pusha
push
scas
pop
stc
int
sbb
adc
mov
aad
xchg
stc
jae
pusha
push
mov
test
in
sub
jp
test
xchg
clc
lods
int
jecxz
and
movsl
popf
es
lret
sub
ficomps
mov
adc
scas
jae
sbb
loope
mov
mov
je
lods
and
test
dec
sbb
pop
mov
pop
fiaddl
bound
xchg
ficoml
sub
mov
decl
xchg
lds
pop
dec
mov
and
int
popa
xchg
andl
lea
popa
adc
imul
push
xor
fsts
fsubrs
push
std
pop
fidivs
std
xchg
sbb
les
sub
movsl
lods
sbb
test
lahf
loope
in
leave
xorb
lret
dec
push
iret
mov
lock
in
xor
stos
fld
lahf
xchg
cmp
cs
mov
jmp
pop
imul
mov
lds
cmp
movsl
es
in
jge
mov
stos
js
xchg
test
push
lock
dec
or
mov
daa
push
stos
mov
cvttps2pi
shll
je
mov
xchg
cmp
mov
mov
stos
pop
xor
jmp
fildl
cmp
cwtl
pop
std
xor
sub
cmpsl
xor
push
dec
loope
test
sbb
shrl
cmpsl
iret
push
or
scas
loope
int
jmp
sub
dec
mov
es
dec
in
pop
mov
push
xchg
pop
in
inc
in
pop
pop
cs
add
mov
in
popf
mov
out
fistps
mov
adc
lods
shrl
cmpsb
inc
scas
loopne
movsl
in
dec
mov
cmp
insl
mov
icebp
enter
and
sti
xor
cmp
leave
mov
iret
in
aad
lcall
push
mov
cmpsb
sub
aad
in
int
and
mov
sub
lcall
sbb
imul
push
sahf
cwtl
fwait
aad
test
jge
and
mov
pop
mov
ret
xchg
sahf
dec
aas
jno
xchg
pop
lea
lahf
loope
pop
push
adc
adc
mov
xor
movsl
mov
es
popf
stc
sbb
jmp
lahf
and
mov
shll
es
cmpsl
fstp
xor
aam
cmp
sub
shl
lods
inc
out
dec
sbb
dec
push
rolb
test
imul
adc
cmp
in
test
orl
leave
adcb
movsl
cmp
lret
roll
xchg
push
xchg
cmpl
xchg
sub
jg
sub
arpl
adc
hlt
adc
lahf
fwait
jne
lea
xor
xor
je
jl
test
jne
test
and
sbbl
push
cmp
iret
inc
out
aas
ret
test
or
xorl
ror
sub
movsl
aad
cmp
sub
sub
vpavgw
xchg
push
xchg
dec
cmp
add
leave
jmp
xor
cmp
sub
bts
dec
pop
mov
int
shl
adc
lahf
fstps
inc
lods
xlat
pop
or
xchg
stos
lcall
out
loopne
push
sub
xlat
sbb
stc
lea
pop
inc
mov
movsl
xacquire
jmp
pop
mov
mov
sbb
xchg
mov
mov
pop
cmp
sub
mov
lret
xchg
es
inc
dec
aas
fidivl
popf
lahf
add
cmpsb
out
dec
cld
leave
or
lods
aaa
inc
int
out
xchg
cltd
jmp
jns
sub
jl
lcall
test
insl
xchg
popf
scas
xchg
cs
pop
jecxz
hlt
arpl
xchg
lahf
pop
push
stos
jmp
rol
sub
inc
jecxz
cmpsl
mov
sbb
adc
ret
lods
xchg
add
stc
pop
sub
push
push
in
pop
fwait
xchg
cmp
popa
jne
xchg
jecxz
mov
mov
stos
cmp
mov
push
jmp
add
pop
lods
push
imul
and
sbb
xchg
into
pop
mov
pop
out
stos
loope
sub
loop
cmp
mov
cs
inc
stc
fsubrl
or
pushf
xchg
lods
mov
sbb
rcl
fwait
lretw
pop
push
mov
sarl
sub
xchg
fildll
dec
mov
mov
push
roll
iret
xchg
leave
lods
cs
ds
je
movsl
rcll
in
ja
nop
sbb
pop
pmovmskb
stc
ret
int3
xchg
leave
lea
js
pushl
push
cmpsl
mov
lea
fists
sub
dec
mov
adc
xchg
sub
imul
int3
sub
lret
pop
stos
in
jmp
mov
ret
xlat
push
xchg
sti
sbb
frstor
pop
add
mov
aad
or
rcr
push
daa
sub
sbb
mov
xor
scas
pop
cmc
xchg
aad
push
ret
xor
lods
iret
cwtl
mov
pop
cmp
xor
mov
lret
ret
mov
sub
shrl
sub
or
in
popl
nop
pop
popf
loope
scas
sub
loope
push
inc
push
in
pop
jne
cwtl
insb
in
lret
cmp
out
inc
daa
xchg
fstp
xchg
and
xlat
lds
cmovbe
iret
xor
cwtl
stos
push
mov
lahf
xor
sarl
fwait
xchg
std
rcrb
cs
out
insb
andl
fmul
add
cmp
add
je
dec
mov
iret
mov
jecxz
adc
cli
cmp
lea
cld
mov
mov
repnz
lahf
mov
pop
add
test
mov
xchg
lds
test
mov
in
mov
push
mov
xchg
cmp
scas
fildl
fs
or
xlat
aad
and
jmp
mov
pop
aad
pop
das
jnp
psubsw
mov
xor
adc
jmp
sub
cmc
aas
cmpsl
sbb
js
aad
out
jne
insl
jl
popf
js
xchg
mov
test
push
cmpsb
fcomp
and
inc
in
mov
loope
aad
lods
insb
repz
mov
loope
decb
out
mov
in
jo
addl
pop
fwait
push
arpl
adc
xchg
push
inc
or
xor
shrl
push
xchg
int
imul
add
in
jmp
out
xlat
insb
add
or
or
xchg
lret
in
sbb
rcrl
or
frstor
out
test
inc
aad
mov
rorl
fwait
es
jmp
sub
fdivrs
xor
xchg
mov
push
imulb
and
scas
push
mov
fisttpl
jne
lahf
lods
and
clc
and
mov
dec
test
push
mov
add
sahf
faddl
and
sti
sti
sub
stos
lret
mov
test
jae
add
fldcw
movb
fdivl
mov
sub
sub
lea
leave
cs
jmp
in
jns
in
pinsrw
das
lret
sub
mov
sub
test
pop
sub
dec
shrl
adc
jecxz
mov
popf
xchg
push
cmp
out
rcrl
test
jo
or
roll
push
xlat
xor
iret
lock
cmp
mov
sub
stc
add
xor
bnd
negl
sub
lds
out
test
aad
jmp
lods
mov
sti
cmp
or
aas
ret
mov
test
fsubr
movsl
popa
fst
jmp
imul
dec
rorl
jge
sbb
sub
in
jnp
push
mov
in
call
push
lret
lea
or
cltd
daa
es
out
lds
mov
sbb
xchg
jecxz
imul
lea
xlat
mov
dec
push
pop
or
push
mov
iret
call
add
hlt
stc
test
lock
mov
fcomip
nop
and
xchg
in
jae
xchg
loope
dec
jmp
es
sub
inc
push
xorb
loopne
adc
out
subl
mov
test
jbe
in
scas
in
dec
mov
add
test
cmp
sub
mov
pop
push
xchg
sbb
lret
and
in
leave
je
mov
outsb
xchg
lret
pop
fnstsw
int3
loope
inc
or
cmc
jbe
sahf
nop
filds
cltd
xchg
xchg
rcrb
adc
cltd
mov
in
lret
sbb
loopne
pop
aad
lods
lea
xchg
adc
mov
cmp
mov
in
jae
and
movsl
mov
setns
xor
iret
mov
mov
das
js
xor
pop
cmp
filds
and
adc
std
js
mov
push
bound
lods
fndisi(8087
jo
stos
ret
scas
in
xchg
lret
call
lret
pop
adc
mov
cs
aad
andl
lcall
inc
push
lret
test
shll
sub
mov
in
ds
mov
int
xchg
sub
pop
mov
addr16
int3
jnp
jo
stc
sub
fcomip
sub
pop
or
mov
mov
fsts
jnp
lods
mov
iret
add
sub
add
lds
sbb
cmc
sub
pop
out
sub
lea
loopne
sbb
fnstenv
in
ja
sahf
rcrl
mov
cltd
test
push
clc
icebp
aad
incl
pop
xchg
scas
lods
and
out
lret
sub
inc
cmpl
mov
test
xor
and
sub
dec
lea
iret
aam
mov
pop
test
stc
std
push
jb
xchg
andl
mov
loope
xor
pusha
or
push
out
hlt
ss
sbb
das
cltd
xor
fwait
iret
dec
in
inc
lds
les
cmp
xchg
dec
rcrl
in
test
xchg
push
push
jmp
xchg
and
ss
xchg
pop
mov
and
mov
in
rolb
xorb
adc
jecxz
add
lret
dec
or
iret
xchg
test
mov
pop
sbb
movsl
loope
fnstenv
test
pop
sub
stc
mov
mov
aaa
mov
mov
lods
xor
add
mov
adc
scas
mov
cmc
push
adc
lret
out
mov
or
inc
orb
das
and
xchg
lea
mov
fstpl
add
dec
jno
push
xchg
adc
fld
mov
cltd
aad
stc
xchg
mov
imul
ret
xchg
or
in
imul
gs
scas
add
js
addl
or
pop
mov
ja
fwait
repnz
daa
xchg
out
and
xchg
lahf
sub
clc
dec
lret
xchg
cs
mov
xchg
mov
dec
popf
cli
test
insb
mov
inc
xchg
repnz
sub
int
and
cwtl
in
sub
loope
pusha
aaa
fwait
xchg
inc
stc
sub
and
in
adc
sbb
movsl
out
jns
cmpsb
sub
adc
pusha
cmpsb
jae
lock
sub
mov
or
mov
xlat
scas
out
mov
popf
sub
lods
sbbl
sbb
mov
xor
mov
jmp
repnz
push
sti
cs
xchg
arpl
adc
cmp
out
push
jmp
fstps
jae
sub
push
stc
fists
adc
pop
sub
mov
lret
push
in
popf
sbb
jmp
arpl
sbbl
loope
rorl
and
dec
and
stos
popf
mov
sub
ret
iret
push
xchg
pushf
test
pop
push
xchg
add
scas
adc
daa
in
adc
or
lahf
sbb
out
mov
es
mov
bound
cs
aaa
psrlq
shll
icebp
mov
int
push
inc
cmp
adc
fldenv
ss
insl
lods
mov
bound
push
iret
outsl
int
mov
rcrl
std
push
out
cld
xchg
xlat
push
sarb
fstpl
or
stc
cmc
insl
cs
call
loopne
lcall
movl
fdivrl
cmp
test
or
mov
cmp
jl
iret
xchg
insb
mov
scas
mov
leave
ss
ret
and
lods
ja
mov
mov
pop
mov
xchg
inc
fwait
pop
mov
adc
mov
stos
sbb
mov
cmpb
and
iret
sub
in
and
ret
lea
sbb
add
iret
scas
mov
and
mov
arpl
movsl
or
sub
push
mov
stos
add
cmp
ret
mov
cs
mov
leave
cmc
xchg
rcll
mov
rcll
mov
pop
jno
inc
add
in
mov
iret
ret
shll
test
jo
mov
jns
sub
dec
popa
fsts
lods
ret
sbb
mov
incl
and
fwait
es
inc
dec
test
lock
and
pop
stos
lahf
xlat
nop
lds
jae
int
sbb
lods
mov
std
fstpt
mov
xchg
cs
mov
in
loope
cmp
sub
xchg
mov
sub
rorb
in
out
in
xchg
mov
cmp
fistpl
jno
push
je
jmp
mov
fst
jb
push
or
bswap
out
xorl
int3
cs
shrl
xchg
push
xchg
sbb
cli
add
ret
mov
pop
stc
lret
out
popa
test
and
or
push
leave
jmp
mov
jl
popf
fistps
fldt
loope
push
xchg
push
movsl
lods
xchg
lret
roll
shll
nop
xchg
and
dec
pop
shr
call
adc
xchg
mov
std
sub
aas
test
test
js
iret
movsl
cmpsl
push
push
popf
insl
mov
test
sub
shrl
iret
mov
popa
cld
xchg
daa
int
push
lods
cmpsl
fadds
popf
lcall
int3
repz
cs
or
cmp
and
push
pop
popf
in
push
xchg
cmp
popa
int
cs
loopnew
dec
jp
aad
cmp
rclb
int3
add
push
pop
and
or
aad
iret
jl
inc
popf
icebp
lock
xchg
cmpsl
dec
push
int
fbld
inc
mov
pop
lret
shl
popa
jo
cmovl
roll
sub
jmp
mov
mov
imul
in
xchg
mov
in
xchg
fwait
cmp
sarl
jecxz
lea
test
iret
js
mov
ret
mov
inc
ja
push
cwtl
cmp
or
or
add
sub
inc
sub
xor
clc
adc
jmp
roll
frstor
mov
inc
and
and
pop
shr
lcall
mov
test
inc
in
mov
filds
les
out
and
jge
cmp
mov
xlat
repnz
dec
scas
pop
mov
psadbw
xor
xchg
jbe
mov
psubusw
cmpsl
in
in
mov
mov
lahf
push
sub
cmc
and
lret
stos
movsl
and
mov
pop
lds
xor
in
mov
fstpt
pop
cmp
sbbl
inc
mov
dec
shrl
push
and
mov
rcl
fnstcw
cld
or
roll
lods
rcrl
stos
xchg
xor
int
aam
lods
jg
mov
repnz
fists
sub
mov
popf
mov
mov
nop
inc
mov
sbb
sub
test
addb
inc
jb
xchg
scas
and
pop
xchg
push
mov
jecxz
xchg
daa
leave
add
or
test
mov
xchg
orb
shl
mov
lds
aad
shll
dec
push
out
xor
mov
xchg
and
lods
fwait
mov
push
ror
leave
mov
xorl
xchg
imul
loope
lret
dec
sbbl
aad
ret
cmp
dec
lcall
or
arpl
sub
sbb
pop
aaa
mov
cltd
test
mov
scas
les
ljmp
in
sbb
sub
push
jmp
es
out
mov
sub
mov
jne
std
pop
cmp
sub
cmpb
fwait
shlb
push
or
mov
sub
fninit
stc
testl
sbb
gs
scas
inc
sbb
lcall
insl
xorb
pop
fldenv
sub
dec
in
add
or
jmp
sbb
jecxz
mov
loope
pop
dec
xchg
and
ror
and
orl
cmpsl
mov
loope
xor
fisubl
fstps
jecxz
or
jmp
cmpl
out
es
dec
sub
pop
push
adc
and
pop
mov
nop
adc
xchg
aam
aas
xor
xchg
push
lods
xlat
stc
aad
ret
lcall
out
pop
mov
loop
sbb
inc
fisttps
adcb
test
movsb
imul
cmp
xchg
or
stc
lret
xorl
inc
out
xchg
xchg
stc
push
in
out
push
lret
test
arpl
jge
xchg
cltd
inc
or
cmc
jne
fwait
pop
dec
loope
aad
pusha
popf
and
xchg
popw
add
sbb
jecxz
into
mov
mov
lahf
leave
adcl
cmp
mov
lcall
outsb
add
in
mov
cmp
pop
rolb
mov
mov
clc
dec
xlat
jne
cmpsl
pop
mov
mov
fstps
jb
add
mov
xor
dec
insl
xchg
in
cmp
push
pop
das
xor
ss
push
add
mov
lahf
mov
pop
adc
in
lods
or
lret
xor
adc
pop
dec
es
stos
jne
leave
mov
cwtl
mov
xchg
lahf
scas
icebp
or
and
and
xchg
cmp
sub
xchg
xor
jae
nop
jne
xor
mov
xchg
cld
or
lret
scas
xchg
cmc
pop
subl
sbb
popf
test
and
xor
fildll
jb
add
add
lret
pop
mov
or
jmp
mov
and
insb
dec
xor
sahf
push
in
into
imul
lods
int3
xchg
sarb
out
mov
stos
jmp
sbb
js
decl
push
jmp
xchg
lret
lea
adc
mov
xchg
fisubrs
fsubs
andb
arpl
mov
add
cs
in
roll
xor
inc
js
cmp
shrl
sub
xor
add
or
leave
push
sub
lahf
jbe
in
dec
call
lds
jns
in
js
lods
cmp
xor
psubusw
cmp
movsl
fcmovnb
leave
xchg
adc
fwait
mov
adc
pop
lds
out
xor
lods
xchg
pop
jle
test
xor
xlat
push
xchg
push
jmp
lds
cmp
lret
fstpl
in
and
xor
mov
cmpsl
adc
mov
mov
out
lods
shr
sbb
add
and
jmp
pop
cmp
pop
fsub
in
mov
std
mov
subl
fimull
int3
enter
xor
loope
jne
xor
aad
pop
shll
or
push
stc
jecxz
jge
leave
cmp
ftst
in
filds
push
loopne
jmp
mov
dec
es
pop
fwait
stos
lret
jns
call
notl
xor
loop
aam
subl
data16
sub
sub
mov
ret
xchg
lret
popf
sub
insb
ds
mov
ret
and
or
stc
lods
sbb
arpl
jno
mov
push
lret
popf
out
jo
rclb
dec
stc
sub
lods
jg
and
mov
sarl
mov
jae
push
xchg
mov
sbb
xchg
loope
mov
pusha
mov
jecxz
mov
fistl
test
xchg
lahf
in
lea
sub
int
jne
fldt
dec
cmp
push
imul
xor
test
xchg
cli
mov
mov
and
popa
popf
sbb
xor
dec
sbb
mov
cmp
fldcw
test
dec
xchg
sub
lds
fldcw
mov
xchg
fbld
popf
ja
shll
jne
bound
push
idivl
mov
lds
fucom
roll
int
push
fimuls
shrb
push
loop
js
shll
sub
insl
les
push
jmp
sub
push
jno
movsl
pop
xchg
push
cmp
xchg
xchg
pop
dec
xor
adc
loope
mov
and
ret
fisubs
sbb
jb
shrl
lea
mov
decb
test
xlat
nop
lea
or
lret
add
cmp
in
in
mov
aaa
inc
test
xchg
mov
out
xchg
vpunpckhqdq
sub
and
cmp
mov
mov
and
rcll
fdivrl
push
loope
roll
mov
sbbl
out
cmpsl
std
fisttpll
add
xor
mov
repz
mov
scas
fisttps
and
insl
faddl
test
jb
dec
and
pop
mov
mov
iret
mov
loop
loopne
dec
jnp
ss
cmpl
test
mov
imul
jno
inc
add
jmp
push
arpl
cmp
cmc
stos
stc
sub
xlat
into
das
mov
mov
adc
stos
mov
xchg
sub
push
adc
adc
cmp
inc
mov
sahf
test
aas
and
sar
cltd
nop
decl
cltd
or
xchg
out
cs
jne
scas
popf
int
bswap
and
cwtl
ucomiss
cmp
jmp
scas
xchg
ljmp
jb
cmpsb
push
xchg
out
and
push
mov
mov
dec
das
cs
sub
xorb
ret
test
subl
or
nop
push
cmp
es
lcall
mov
lods
mov
stos
push
and
xchg
popf
lds
arpl
mov
lods
aad
cmp
leave
xor
pop
popa
aad
jp
sbb
mov
fildl
adc
push
fwait
lods
mov
sub
insl
pop
xchg
xchg
sub
push
out
repnz
es
test
jmp
enter
push
cmpsl
orb
in
pushf
pop
sub
aad
out
ret
jne
in
es
or
jg
xor
inc
add
fsubs
scas
push
sbb
mov
mov
pop
jb
jmp
in
shll
pop
std
lds
jnp
cwtl
inc
ret
je
faddl
inc
fwait
lret
mov
lahf
jecxz
mov
pop
mov
in
mov
mov
adc
xchg
int
adc
mov
and
pushf
orb
push
push
mov
lods
rol
aad
in
dec
inc
int
fnstenv
jbe
popf
jecxz
adc
sub
iret
dec
loopne
jmp
cmpsl
cld
out
stc
xlat
mov
lret
xchg
fwait
cmpb
xchg
and
rcr
imul
movsl
jl
ss
es
repnz
fildll
lods
xlat
push
test
into
xor
iret
out
sub
jmp
popf
mov
leave
jge
pop
cmpsl
loopne
ss
inc
sub
mov
mov
mov
xchg
daa
sbbb
lret
pop
adc
ret
mov
mov
flds
imul
adcl
in
in
cltd
ret
js
popf
inc
call
mov
jmp
cmp
es
xchg
mov
push
imul
shlb
leave
lods
cmpsl
push
iret
sti
rol
xlat
jne
mov
test
sbb
loope
mov
stc
in
aad
mov
mov
and
mov
mov
popf
in
lahf
js
push
jbe
mov
pop
stos
pop
test
sub
mov
xchg
js
out
cmp
sbb
xchg
pop
insl
int
jg
movl
in
cmp
jecxz
fwait
mov
outsb
pop
les
or
lahf
mov
out
xchg
lret
and
mov
inc
aam
xchg
jmp
aad
xchg
sub
and
xorb
test
das
nop
inc
shl
out
ja
popf
mov
in
pop
fwait
xchg
loope
adc
clc
sub
cmp
pushf
sbb
popf
leave
push
aam
pop
mov
call
lods
scas
das
mov
cmc
pop
ret
repz
push
dec
cmp
push
pushf
dec
insl
jne
iret
cmpsb
in
bound
mov
in
cmp
scas
rcll
loope
sub
push
lret
push
sub
int
xor
leave
mov
aas
mov
xchg
xchg
mov
jecxz
aaa
in
movsl
mov
lret
lds
das
cltd
in
mov
push
lds
lret
inc
mov
iret
sbb
popf
adc
stos
push
cld
xlat
into
push
lcall
adcl
nop
xor
dec
sarl
aad
push
iret
mov
sbb
in
dec
movsl
fucomp
mov
js
lahf
stc
fbld
sbb
mov
push
inc
xchg
sbb
add
mov
push
iret
vphsubbw
lds
sub
dec
mov
in
in
mov
cmp
or
jb
pusha
in
enter
push
movsl
cltd
arpl
add
xchg
xchg
xor
push
jmp
in
test
mov
mov
push
rorb
enter
test
roll
lret
lret
pusha
jge
aaa
rcll
iret
and
adc
popa
and
sub
pop
sbb
hlt
pop
push
push
sub
dec
pop
inc
add
sub
or
imul
call
iret
and
xchg
nop
shl
xchg
sub
sbb
lahf
in
push
xchg
movsl
dec
je
mov
lea
sub
or
xchg
jecxz
fsubs
push
sbb
stos
add
and
scas
jmp
push
lea
mov
test
ror
test
imul
jge
xor
sub
rcll
popf
cltd
out
cmpsl
iret
sbb
hlt
lret
jb
xor
lret
inc
scas
xlat
in
shr
lea
push
daa
js
cmpsl
sub
mov
mov
out
scas
xchg
push
repz
sub
xchg
and
lcall
cltd
xchg
jmp
test
shrl
jge
stos
clc
pop
test
movsl
cmp
xchg
adc
cmp
scas
xor
xchg
rclb
xchg
in
mov
mov
pop
xorb
jmp
push
das
jecxz
popf
push
mov
mov
xlat
loopne
mov
xor
add
pop
xchg
cmp
xchg
jmp
leave
lock
sub
popa
out
jecxz
imul
xor
sub
repz
sub
xchg
testl
dec
dec
daa
xchg
rcrl
movsl
aad
dec
js
xchg
iret
ja
cmp
add
cmp
sbb
mov
es
xor
add
push
xchg
dec
mov
or
shrl
aad
int
fwait
xor
stos
mov
aam
outsb
pusha
jl
and
mov
dec
in
cmc
cwtl
mov
sub
xchg
xchg
frstor
orl
mov
lret
cmp
out
shl
jmp
cmp
sub
push
push
rorb
xor
daa
lea
cmp
lahf
cmpsl
and
dec
shll
lcall
lods
jns
mov
das
sub
mov
mov
jle
negb
lret
add
movsl
adc
ss
jl
xor
jb
loop
xchg
int
pop
fldl
lahf
push
jne
gs
jmp
jno
stos
mov
and
scas
xchg
sbbb
push
fwait
leave
inc
sub
pop
in
mov
enter
stc
xchg
enter
and
pop
or
rcr
stc
orl
or
hlt
adc
pop
fcoms
add
icebp
xchg
rcrl
jne
cmp
ljmp
fisttpl
xchg
fwait
xchg
and
pop
adc
repz
mov
iret
xchg
dec
mov
and
push
cmpsl
out
movsl
pop
xchg
sbb
iret
lods
mov
ss
jbe
imul
sub
leave
sub
pop
xor
or
mov
pusha
mov
repz
rcrl
cltd
mov
popa
in
pop
sbb
push
mov
cmp
lds
lahf
xchg
out
add
and
notb
mov
cmp
in
testl
or
xchg
mov
mov
xor
pop
adc
ss
pop
cmc
pop
add
shlb
aad
fwait
cmpsb
daa
cmp
ret
mov
and
in
sbb
xor
ret
adcb
sbb
sub
adc
jno
fisttpl
pop
or
aad
lcall
pop
adc
movsl
out
fs
jbe
imul
cltd
enter
lods
lea
out
adc
add
sbb
mov
shrl
pop
popa
mov
jae
les
arpl
xor
dec
lret
mov
jne
fildll
out
sbb
mov
push
fisubrs
test
lret
iret
in
pop
mov
roll
inc
in
inc
popa
fildll
fistl
fwait
sbb
iret
loope
add
xor
or
fwait
div
jbe
call
jne
in
ret
cmp
jnp
loope
jae
lea
loope
sub
cmc
xor
jnp
pop
filds
test
lds
arpl
xor
fs
sbbl
or
xchg
or
or
mov
call
lods
nop
bswap
fldt
sub
sub
sbb
sbb
xor
in
dec
arpl
lret
lret
mov
jb
adc
xlat
sub
or
test
ret
jge
jecxz
adc
or
in
mov
add
mov
ret
cmp
jns
fimull
sub
sub
mov
leave
lcall
xchg
mov
adc
dec
lods
vpackssdw
or
repz
fyl2xp1
test
inc
sbb
ffreep
push
sbb
sbb
dec
dec
ja
js
cmc
xor
xor
cmp
psubb
aad
push
fxam
es
bound
leave
cmp
fistpl
sbb
jl
std
fistps
cs
roll
lods
xchg
cs
mov
push
inc
adc
in
cltd
leave
sbb
mov
jmp
sub
xchg
xchg
push
and
jno
adc
test
loope
and
dec
sub
sbb
inc
xor
dec
mov
mov
enter
jmp
add
lock
mov
loopne
or
push
mov
into
mov
fwait
sbb
test
aad
subl
cmp
arpl
sub
test
in
cs
rcpps
mov
sarl
or
aad
mov
scas
jmp
insb
inc
sbb
enter
cmp
mov
push
xchg
mov
mov
in
mov
cmp
scas
add
call
mov
mov
pop
xchg
adc
cltd
mov
aad
cs
add
or
xor
test
sbb
rol
xor
lods
es
mov
push
int
addl
test
mov
push
std
lret
adc
std
scas
xlat
adc
fsts
rcrl
sbb
movsl
and
testb
out
xor
scas
lret
xchg
aad
adc
cwtl
clc
push
jno
test
ds
iret
lods
push
cmp
push
cltd
push
adcl
jmp
add
adc
int3
jge
clc
cltd
int
or
leave
xchg
sub
lds
sbb
rcl
jecxz
out
adc
mov
cli
lods
xor
xorl
pop
jae
mov
fmull
mov
cmp
push
mov
mov
pop
iret
loopne
dec
cwtl
pop
loope
sub
mov
and
sub
sbb
xlat
imul
aad
pop
push
int
in
mov
cltd
sub
es
mov
jl
cmc
mov
subl
xchg
mov
jmp
out
xchg
ja
or
ror
jecxz
stc
iret
xor
stos
test
popf
in
xchg
sbb
leave
mov
lods
scas
popa
mov
dec
iret
jmp
push
cmpsl
fstpl
das
and
out
clc
out
jmp
dec
test
add
fwait
xchg
loope
inc
cmpsl
iret
inc
xor
pop
orb
pop
pop
lods
xlat
inc
jmp
push
clc
sub
ljmp
mov
lahf
scas
test
mov
xchg
sti
fwait
sbb
pop
sbb
adc
mov
push
flds
mov
push
subl
and
mov
cmp
lahf
mov
adc
and
jno
mov
mov
fsts
iret
mov
lds
movsl
xchg
sub
and
xorl
mov
jns
in
mov
inc
add
daa
clc
mov
add
jmp
xchg
adc
cmp
fcompl
inc
jecxz
call
xor
and
test
mov
fistpll
pop
shrl
mov
mov
rcrl
daa
or
stc
lcall
xor
insl
mov
push
adc
lea
mov
sbb
lea
shrl
inc
test
pop
mov
rorl
xchg
and
rclb
push
leave
les
push
sbb
mov
dec
filds
cmpsl
inc
jae
rcrl
sbb
xchg
fistpll
ss
loope
sub
or
xchg
in
push
mov
test
out
sub
xchg
lret
ja
push
adc
test
in
jne
mov
sbb
jne
popf
scas
ds
and
mov
iret
leave
daa
lahf
jmp
loope
inc
xor
mov
xchg
es
mov
loope
adc
ja
jno
lcall
mov
cs
test
and
pop
scas
out
mov
in
incb
inc
icebp
cs
mov
sbbl
fidivs
push
cmpb
lahf
cmp
das
ret
or
xchg
mov
mov
inc
or
adc
pop
jecxz
adc
cmp
xlat
leave
into
mov
xor
xor
ja
cwtl
testl
cmp
jno
cmp
rorl
cmpsl
sub
cmp
scas
ret
cmp
mov
movsl
and
aad
pop
cmp
push
sbb
lahf
movsl
xchg
jmp
aas
test
loope
sub
jmp
sbb
inc
in
imul
fcomp
test
ja
ljmp
js
test
jmp
subb
stos
test
lds
push
sub
xor
mov
enter
fcomp
pop
xor
mov
sub
lahf
dec
jb
pop
cmp
jmp
nop
add
xchg
pop
xchg
mov
sarl
lret
adc
jbe
and
or
xlat
andl
jecxz
arpl
adc
in
fsubrs
xchg
or
rorl
sbb
and
fwait
js
stos
movsl
mov
scas
mov
pusha
xchg
test
in
pushf
lea
imul
dec
int
out
subl
test
test
and
mov
aad
jl
std
mov
iret
int
mov
dec
cs
imul
scas
daa
arpl
mov
test
adc
insb
xlat
stos
fnstenv
jmp
pop
jno
arpl
imul
jmp
scas
fwait
jne
xlat
imul
xchg
rcll
sbb
lret
mov
sbb
jmp
dec
jno
lock
xor
inc
sbb
fldcw
add
fxch
xchg
cltd
jecxz
jnp
aam
jno
mov
js
sub
fstl
fwait
shl
mov
andb
fisttps
scas
sub
and
mov
jno
rcr
jge
lea
popf
jecxz
movsb
jecxz
leave
cltd
xchg
push
faddl
and
xor
int3
inc
push
mov
sub
lcall
adc
incl
mov
out
int3
lret
in
in
inc
mov
inc
fadd
cltd
pop
aas
js
out
xchg
mov
adcb
nop
cld
mov
lahf
int3
jno
mov
dec
pusha
adcb
rcl
add
push
out
xchg
iret
fsubrs
loopne
hlt
mov
adc
lret
xchg
scas
popf
push
pop
dec
cmpsl
cmpsb
pop
jecxz
rorl
das
scas
mov
pop
es
jae
push
icebp
xor
or
sar
pop
mov
popf
fwait
in
cmp
gs
loopne
iret
popf
fldt
popf
insb
imul
mov
cmpsl
add
mov
push
pop
iret
fcoml
xlat
imul
movsl
imul
push
pop
push
lea
test
pop
mov
lds
or
mov
hlt
iret
push
in
mov
add
ret
les
mov
fimuls
in
out
and
adc
mov
mov
push
rol
int3
pop
and
mov
or
xor
and
aad
sbb
xor
jp
negl
inc
into
loopne
jl
and
movsl
ficoml
xchg
jno
sub
inc
call
xlat
out
in
sub
mov
sub
stos
fs
out
aad
scas
bound
lea
imul
in
lods
or
push
mov
lock
mov
cmpl
mov
jmp
cmc
jbe
xor
cltd
cmp
inc
rcrl
leave
cltd
cmpsl
sub
or
mov
push
clc
test
stos
mov
add
xchg
test
xchg
xchg
sbb
es
iret
pop
mov
dec
fildll
fwait
sub
cs
lahf
mov
popf
jecxz
cli
push
lods
dec
jge
les
mov
mov
lret
lahf
hlt
sbb
mov
push
leave
cmp
stos
mov
xor
xor
and
je
push
mov
sub
dec
movsl
pop
sbb
pop
adc
or
and
mov
scas
test
push
cmc
scas
test
out
stc
arpl
leave
jno
sbb
xlat
push
mov
jmp
sbb
scas
sbb
sbb
or
or
jns
cmc
push
push
jmp
cmpl
js
push
cmpsl
icebp
and
sahf
dec
mov
je
sbb
lods
mov
adc
xor
cmp
out
sub
in
xor
out
mov
hlt
es
jle
stos
pop
fldt
out
cmp
into
lret
and
data16
or
vaddss
das
flds
sub
fcmovb
pusha
subb
mov
sub
mov
sub
shrb
xchg
fidivrl
ret
sub
clc
mov
and
dec
and
leave
inc
rcrb
pop
shrl
in
cs
out
lret
es
sarb
dec
lahf
iret
xor
inc
cmp
jo
mov
into
cltd
repnz
outsb
mov
add
push
or
fistpll
push
pop
and
cwtl
dec
pop
adc
sbb
add
imul
adc
push
movsl
aad
dec
iret
cltd
iret
negb
int
jo
xchg
ja
iret
dec
repnz
aad
fisttpll
xchg
adcl
and
dec
ret
iret
mov
aad
pushf
pusha
int
lds
push
pop
or
pusha
popf
and
xor
xchg
jmp
rcrl
movsl
shr
mov
psubw
stos
xchg
leave
int3
lret
les
push
inc
mov
add
push
inc
jnp
dec
inc
popf
add
mov
ror
push
aaa
call
lds
loopne,pn
inc
scas
filds
cltd
push
pop
jmp
fdivs
in
xchg
andl
cmp
sub
leave
lcall
movsl
subb
mov
out
mov
sbb
out
xchg
ret
cmc
stos
dec
cli
xor
sti
cld
ss
fbld
push
push
add
jo
and
inc
or
ja
fldt
xchg
and
fwait
cmpsl
pusha
cwtl
pop
call
repz
mov
nop
je
mov
mov
inc
jmp
adc
fcmovnbe
add
stc
push
sbb
xor
pop
mov
pusha
cs
or
fistl
hlt
dec
scas
or
iret
scas
iret
pushf
test
and
shl
pop
pop
test
adc
mov
xchg
scas
cltd
jns
adc
cltd
das
jl
insb
test
iret
adc
xchg
push
in
dec
xchg
int
mov
xor
int
lcall
add
iret
jecxz
mov
stc
cltd
test
sbb
aad
cli
pop
xchg
xchg
iret
push
lods
mov
cmpsl
cmc
lret
mov
popf
mov
test
jmp
sbb
loopne
xor
xchg
lods
inc
test
imul
out
xor
cld
inc
pop
push
xchg
push
out
lret
frstor
arpl
ljmp
jge
nop
leave
in
loop
push
pop
cli
dec
insl
movsl
out
mov
rorl
lahf
in
xchg
je
cltd
lock
cmp
aad
jnp
mov
xchg
pop
mov
dec
xchg
cs
xchg
jmp
inc
lds
xchg
sub
fwait
loope
iret
jb
lock
clc
push
lahf
mov
jno
je
inc
scas
inc
cltd
or
sbb
insl
mov
mov
push
push
mov
stc
aam
pop
cmp
cwtl
cmc
jns
dec
rclb
inc
mov
fwait
rcl
jge
fldt
cmp
mov
lahf
cs
cltd
rcrl
mov
sbb
es
int
jmp
add
xchg
cmpb
ret
popa
cmpsl
sbb
pop
jne
icebp
hlt
adc
shl
push
popf
arpl
imul
lret
jno
enter
int
movsl
in
push
lds
ljmp
in
jb
in
or
xchg
xchg
mov
sub
fistpll
inc
fldenv
sub
test
cmp
and
inc
sub
imul
in
std
and
stc
mov
jmp
xchg
lods
and
lods
ret
emms
iret
cmp
mov
shrb
and
fistps
imul
push
inc
int
and
sub
lea
rorl
push
jmp
sub
fstl
mov
sub
hlt
add
cmp
sub
stos
mov
inc
or
lret
mov
sub
push
xor
loope
aaa
cmp
mov
xchg
mov
inc
in
popf
pop
xchg
xlat
xor
ja
cltd
mov
inc
pop
jecxz
xor
lods
sub
lret
test
ret
cmpsl
iret
mov
inc
mov
cs
push
es
sbb
cmp
jae
mov
fimull
ljmp
cltd
nop
repnz
adc
mov
test
push
and
pop
fwait
sub
cmp
sbb
filds
mov
pop
inc
xlat
mov
adc
inc
fsubrs
xchg
orl
ret
sub
adc
mov
in
mov
cmp
inc
ss
test
mov
jecxz
fistpll
xchg
xchg
push
leave
mov
add
lods
cs
cltd
lret
ret
push
cmp
inc
shrb
add
es
xchg
iret
xor
xlat
pop
imul
lock
mov
and
inc
leave
subb
rcl
popf
loope
mov
aaa
scas
fwait
cs
mov
mov
jne
cmpsl
std
xchg
aad
es
fldl
cs
in
jmp
pop
adc
stc
out
lahf
or
popf
popl
mov
xchg
in
xlat
cmp
inc
scas
xchg
push
aad
fsubrl
cmc
sub
cmpsl
xchg
xor
mov
rcrl
cltd
mov
enter
in
or
xchg
mov
cmc
push
jmp
test
mov
decl
jmp
lods
popf
sbb
inc
xchg
jecxz
mov
cmp
ret
lret
and
sbb
movsl
in
mov
adc
xorl
lea
or
ret
pop
cmp
xchg
scas
add
ja
mov
pop
das
pop
scas
pop
sub
add
xchg
and
stc
cmp
lret
icebp
fidivrs
adc
orb
hlt
push
xchg
sarl
and
or
stc
push
cmpsl
popl
aaa
fwait
xor
fld
sub
es
sahf
inc
frstor
popf
push
adc
mov
and
fnstsw
and
jmp
scas
lods
jb
mov
adc
xor
xor
xor
mov
adcl
mov
lahf
test
mov
les
mov
and
in
or
mov
cmc
mov
cmp
sub
push
push
sub
fistps
stc
add
andl
in
leave
loop
in
dec
arpl
mov
adc
sbb
in
jne
or
push
or
jmp
lods
cld
dec
xchg
add
cmp
fucomip
fidivrl
jmp
mov
iret
mov
fistpl
inc
ret
imul
pop
jno
inc
clc
lret
lods
std
stc
ja
aad
rcll
fnstcw
mov
mov
mov
in
jl
mov
pop
xlat
mov
sub
mov
push
popf
leave
gs
insl
ds
jmp
shlb
dec
pushf
or
in
iret
aad
scas
fdivp
push
mov
push
adc
pop
sbb
cmp
add
fldenv
int3
stc
xchg
in
sub
xor
xchg
cmp
xor
popf
enter
cltd
push
lds
pop
imul
ss
jns
inc
and
nop
or
arpl
cmp
iret
js
adcb
test
pop
jmp
mov
cltd
shl
std
adc
and
out
and
ljmp
into
cmp
fisttpll
popf
xor
adc
and
es
subb
test
popf
jnp
iret
pop
xchg
or
lds
popf
leave
lahf
fcmovnb
aaa
int3
sub
sub
lcall
ffreep
sub
xchg
mov
cmp
sub
enter
pop
mov
pop
in
and
add
xchg
lcall
push
sub
loop
add
add
xchg
stos
insb
movsl
mov
xor
lods
sub
adc
loope
es
shr
sub
lock
cmp
outsl
xchg
shll
dec
outsl
push
pop
movsb
int
aad
cmpl
testb
jne
rcr
cs
pop
add
or
scas
int3
test
dec
shll
psraw
cmpsl
xchg
jnp
lret
aad
push
inc
and
xchg
movl
sub
xor
inc
or
mov
test
sub
sbb
sub
mov
lahf
mov
mov
sbbb
xchg
out
repnz
fstps
stc
in
push
out
popf
push
iret
scas
lahf
xor
pop
fsub
mov
inc
popf
adcl
sub
stos
stc
int
test
out
lea
bound
fsts
lock
mov
notl
pop
scas
cld
in
sbb
push
and
aad
sbb
repnz
and
test
jecxz
shl
or
xor
out
push
xchg
cmp
movsl
fnstsw
sbb
push
xchg
mov
cmp
lret
scas
push
adc
scas
cld
xor
es
iret
xchg
enter
pushf
xor
mov
xchg
dec
and
mov
rorl
leave
in
dec
xor
cmp
je
sbb
es
ds
and
adc
int
leave
mov
movl
into
jmp
ror
push
test
test
adc
mov
jmp
int
cwtl
icebp
popf
sarl
loop
popf
mov
mov
ret
or
sub
mov
xchg
push
xor
shrl
nop
ds
jmp
xchg
lret
mov
int3
sbb
adc
negb
es
or
push
andb
mov
popa
dec
or
dec
ret
sbb
fstl
in
cmp
and
in
mov
sbb
movsb
mov
fists
xlat
pop
in
ljmp
cs
dec
stc
and
mov
lret
jmp
adc
loope
inc
xorl
pop
aaa
xchg
sub
ret
mov
pop
popf
xchg
in
leave
nop
pop
push
dec
leave
sub
xor
and
aam
and
jecxz
pop
cmp
jl
iret
scas
mov
xchg
push
fs
lods
mov
mov
in
lret
xchg
int3
and
push
fstps
dec
jecxz
aam
aaa
mov
pop
incl
lret
mov
xchg
and
ja
mov
int
out
mov
cs
mov
fistpl
fdivrl
lea
cmpl
aad
and
adc
xlat
jmp
stc
in
and
lahf
cmp
mov
loope
leave
sbb
and
loope
jne
push
ret
jecxz
jno
push
dec
scas
cmp
inc
daa
data16
cs
mov
loopne
sub
inc
popf
movsl
das
or
xchg
xor
fucomi
popa
mov
clc
pop
stc
push
push
push
push
pop
daa
inc
inc
lods
mov
in
loope
stc
aaa
jmp
lea
in
int3
xchg
in
call
cmp
outsb
add
addl
outsb
sub
sbb
jae
jecxz
popf
in
loopne
in
cmp
xchg
leave
shrd
push
cltd
lcall
or
jmp
fsubl
mov
int
push
stos
shll
shll
lret
cmp
mov
jne
ror
es
in
push
sahf
xchg
sbb
aad
aad
out
xlat
xchg
pop
shrl
insl
pop
test
call
mov
add
leave
and
inc
stos
jmp
sar
jb
rcl
xchg
loope
xor
shrl
clc
rcrl
das
jmp
das
jmp
pop
adc
add
xchg
cmp
iret
fcom
stc
xbegin
lahf
push
loope
pop
cld
in
xchg
sub
js
adc
mov
iret
or
int
popf
cltd
and
mov
cmp
test
scas
andb
fisubrl
movsl
call
jge
stos
xlat
cmp
cmp
aad
jecxz
subl
lret
add
xchg
mov
xorl
nop
ja
sub
dec
and
xchg
pop
add
data16
sarl
loopne
popa
xchg
sbb
rcrl
add
cld
mov
rolb
jmp
lea
push
mov
test
nop
and
inc
push
in
pop
rorl
iret
pushl
mov
out
dec
mov
das
adc
cs
cmp
idivb
pop
lods
cmp
xchg
jne
leave
out
lahf
sbb
js
and
mov
rorl
and
std
lods
xchg
mov
test
in
and
arpl
popf
push
lret
cmp
ss
mov
jno
sub
push
aad
aaa
shlb
test
mov
sub
in
ret
and
mov
fisubl
rcll
test
sbb
pop
fwait
test
jmp
ficomps
mov
sub
loope
and
pop
addl
ret
xchg
movsl
stc
ficoml
mov
mov
cmpsl
lahf
mov
dec
out
push
in
inc
popf
mov
sbb
inc
in
mov
in
test
enter
xlat
inc
sub
fwait
xchg
pusha
les
shll
cmc
stos
lret
adc
jmp
andl
sbb
test
stos
mov
das
mov
notb
mov
aaa
sub
push
jmp
xchg
mov
jne
mov
push
ds
push
arpl
xchg
movsl
fstl
imul
cs
add
pop
sbb
xchg
fbstp
cmp
cs
shll
mov
mov
xor
dec
imul
mov
fmul
sub
out
test
iret
fcomps
ret
mov
loope
xchg
and
shrb
sub
test
daa
jns
int
push
push
out
pop
fwait
aam
test
aam
xchg
lret
pop
roll
mov
scas
push
push
iret
in
fldl
mov
push
das
xchg
andl
test
push
mov
sub
jg
popf
stc
mov
out
ffreep
pop
lea
or
in
aad
test
loope
and
out
es
popf
sub
mov
mov
fwait
xchg
jge
mov
leave
add
xor
xchg
cmpsl
rorl
sub
and
push
movsl
shll
out
jle
cwtl
cmpsl
in
xchg
jmp
and
loop
jl
add
push
and
cltd
dec
roll
pushf
mov
pop
ss
out
dec
cmp
lahf
xor
pusha
cltd
lds
jb
xor
pop
push
xor
ret
es
inc
pop
mov
int
test
gs
push
mov
shll
lahf
or
lds
sbb
ffree
push
test
and
sub
call
stos
xchg
jno
mov
gs
loop
mov
inc
xor
pop
fnstcw
cs
pop
xchg
jmp
mov
mov
sbb
mov
mov
or
xlat
sbb
xor
sub
aad
sub
add
xchg
push
rorl
aas
lock
jmp
divl
sub
xchg
movsl
cltd
adc
lds
in
iret
fadds
sub
mov
popl
rcr
jmp
iret
in
out
scas
pop
and
outsl
sub
cmpsl
inc
fldpi
je
test
in
xchg
push
and
inc
out
out
jo
lret
test
inc
mov
mov
sub
test
popa
cmp
push
or
leave
mov
lahf
mov
pop
in
test
popf
jnp
pop
insl
out
jne
mov
rol
andl
orl
cmc
enter
stos
xchg
inc
loopne
adc
sub
stos
sbb
dec
mov
jbe
lods
in
sbb
rcll
mov
jno
mov
lahf
cli
stos
fcmovu
sub
and
pop
xchg
in
add
das
cwtl
inc
aam
mov
push
mov
pop
xchg
pop
sub
stc
or
stos
lock
jno
jecxz
popa
mov
inc
ja
or
xor
stos
fnstsw
leave
lret
das
test
into
sub
ret
adc
cmp
aam
cmpsb
fadds
repz
mov
sub
testb
addl
popa
scas
mov
xchg
popf
lea
test
sub
clc
add
pop
xchg
add
popa
sbb
jne
in
fldenv
shrl
in
test
dec
cmp
test
cmp
xchg
inc
shll
out
jne
push
lcall
rol
sub
push
xor
mov
pop
cmpsl
data16
leave
inc
xchg
in
movsl
xchg
sub
cmpsb
aad
pop
dec
push
push
ds
cmpsb
cmp
insb
icebp
mov
leave
lds
movsb
jecxz
scas
rorb
xlat
int
jo
mov
std
pushf
adc
es
xchg
popf
aad
lods
xchg
jb
nop
mov
jmp
cltd
cmpb
popf
pop
popa
in
sarl
fldt
and
xchg
clc
xor
xor
fcmovne
popf
pop
mov
add
imul
sbb
rcrl
inc
cmpb
xchg
fnstsw
ljmp
leave
ficoms
sahf
push
pop
mov
sub
cmpsb
loope
js
fsts
dec
sub
or
fcompl
mov
mov
ret
mov
push
lea
mov
push
xchg
stos
adc
dec
pop
roll
rcrl
adc
mov
imul
in
xchg
iret
inc
in
test
fstl
push
xor
jecxz
movsl
stos
push
rorl
sbb
adc
frstor
adcl
xor
or
mov
inc
sbb
iret
xchg
pop
push
flds
xchg
xchg
in
inc
into
test
push
mov
popf
mov
cltd
pop
pop
xchg
and
movsl
es
inc
mov
and
pop
cmpsl
in
pop
clc
outsl
lret
popf
mov
cmc
imul
sbb
lea
dec
sbb
mov
enter
bound
cmp
popf
mov
mov
call
adc
push
cmp
mov
lahf
shrl
movl
mov
insl
push
orb
pop
lods
mov
loope
fwait
cmc
test
mov
pop
fnsave
or
testb
xchg
jmp
cmp
push
loope
jne
in
rcrl
mov
push
jl
xchg
or
lahf
iret
fstps
in
addl
xchg
test
pusha
test
inc
dec
imull
inc
pushf
popf
mov
sub
and
int
leave
popf
mov
fst
lcall
test
mov
push
dec
mov
mov
push
xor
cs
iret
and
inc
xchg
xchg
or
shll
lahf
fwait
xchg
xor
fbstp
popf
add
rol
rcl
aas
out
sbb
leave
lahf
adc
in
jo
cmp
mov
movsl
xchg
cmp
stos
fldcw
mov
rcrl
aad
repnz
rcrb
fstps
cmp
mov
xchg
cmc
mov
dec
and
fnstenv
or
es
xor
xor
push
scas
clc
cmp
in
jb
sub
stc
fstl
adcl
jmp
test
pop
popf
lret
jge
jo
subb
sub
fwait
shrb
and
push
and
out
mov
sbb
sub
fmull
lock
mov
xor
inc
xchg
dec
fisttpl
rclb
mov
jns
ret
lahf
lods
jecxz
andl
out
cmpsb
mov
fiaddl
sub
in
lret
cmp
enter
pop
int
aad
cltd
sbb
scas
das
mov
pop
dec
popf
inc
dec
or
js
mov
adcl
mov
pop
imul
mov
or
test
inc
jge,pn
sbbl
xorl
sub
hlt
xchg
fnstcw
lea
test
jb
cwtl
jbe
add
cmp
inc
and
sbb
sbb
sub
push
adc
sbb
mov
popa
lds
stos
repz
xor
int
mov
popl
aad
jmp
mov
sub
popa
addl
in
and
mov
push
enter
and
decl
cmp
cmpl
sub
mov
jmp
in
cmp
fcomi
filds
imul
jmp
loope
push
insl
and
fnsave
lret
mov
push
xchg
clc
cmpsl
jmp
call
in
daa
xor
adc
sbb
stos
jl
rcrl
sbb
sbb
cmpsl
mov
cmc
inc
int
out
imul
sub
push
lahf
ret
xchg
sbb
xlat
stc
sbb
dec
stc
mov
sub
in
aad
loopne
mov
xlat
popl
outsl
je
inc
mov
and
cmpsl
fcompl
lahf
ror
and
stos
cwtl
cmp
leave
je
popa
lret
or
scas
xlat
xor
pop
pop
xchg
stc
lahf
jecxz
pop
fwait
popf
and
js
sub
cltd
fsts
aad
cmpsl
mov
and
imul
add
lods
test
xor
fwait
int3
lods
and
mov
inc
mov
push
mov
xor
xor
icebp
mov
iret
fcomp
dec
mov
xlat
in
call
or
outsb
xchg
int3
xchg
mov
aaa
sbb
loope
add
scas
xchg
lret
cmp
icebp
mov
xor
int
lahf
stc
repz
jne
test
ljmp
pusha
sbb
cmp
xchg
fsts
inc
scas
lods
test
dec
call
cld
fsubrs
bound
int
rcll
mov
int3
mov
xor
iret
pop
fldt
push
fs
mov
mov
add
pop
out
mov
mov
add
push
andb
inc
test
push
aad
stos
iret
adc
imul
mov
jmp
lret
scas
mov
rcrb
sub
pop
into
and
sbb
lods
in
mov
lea
pop
mov
jmp
imul
inc
shlb
aad
xchg
andl
lret
xlat
leave
push
sbb
cmc
jle
scas
dec
mov
loope
sub
dec
jno
or
fucomip
in
xchg
sub
xor
loope
stos
push
dec
test
xor
aam
sbb
lea
hlt
jb
stc
adc
out
mov
or
xchg
call
push
in
pop
sbb
pop
jmp
cmpsb
js
frstpm(287
movsl
roll
nop
pop
repz
loope
fcoms
popf
leave
fmuls
sub
andl
mov
fbld
mov
stc
dec
sub
cmp
pusha
popf
test
fnstsw
flds
dec
push
fs
daa
dec
inc
rcrl
lds
adc
movsl
sub
pop
vpshaw
sub
out
inc
cmp
and
popf
scas
or
mov
popl
in
lahf
push
xchg
jl
mov
sbb
mov
leave
mov
sub
or
mov
imul
mov
les
rcll
mov
cs
movsl
test
addr16
xchg
in
popf
int
and
iret
mov
in
dec
cld
shrl
das
loope
in
decl
cmc
inc
xor
or
lea
mov
fimull
js
call
orb
mov
popf
or
cltd
in
sbb
xchg
js
jecxz
xchg
dec
sbb
mov
or
dec
and
lds
loop
clc
xor
jmp
inc
sbb
das
out
mov
int3
mov
vphaddudq
sub
in
jmp
fxch
lods
xchg
and
popf
xchg
adc
lahf
xchg
fmull
scas
scas
pop
stc
mov
xchg
dec
into
test
arpl
mov
push
out
jecxz
jmp
xor
fnsave
and
jae
sbb
cld
pop
dec
xchg
fmul
ficomps
mov
lahf
cltd
out
movsl
lret
push
in
pop
ficoms
aam
nop
fwait
leave
mov
lahf
lods
in
lock
popa
mov
mov
nop
adc
scas
xchg
sbb
repnz
inc
test
lea
orl
xchg
cltd
test
jne
xlat
sub
lods
sub
shr
loop
nop
cmp
and
test
roll
jp
fadds
das
lds
add
add
scas
mov
test
xor
js
pop
sbb
in
or
dec
fs
jae
inc
push
xchg
jge
aad
out
scas
aaa
mov
mov
cli
test
xchg
jmp
jmp
stos
loopne
mov
mov
fildl
cmc
jno
leave
inc
pop
sbb
or
mov
movsl
cmp
fistpll
mov
xor
iret
push
push
inc
aas
dec
and
cltd
orl
cmp
xchg
leave
lahf
jp
jne,pn
popf
into
adc
add
push
xor
inc
in
xchg
insb
sbb
sub
roll
out
mov
jne
xchg
out
dec
in
sbb
out
xor
popf
mov
out
push
ss
mov
sbb
pop
xchg
fbld
push
iret
add
clc
mov
cmp
jmp
mov
test
scas
in
inc
xor
sbb
aad
imul
out
cmp
mov
cmpsl
das
cs
icebp
test
movsl
in
ljmp
inc
loope
mov
xchg
add
cmp
popf
test
jne
leave
mov
in
sbb
stc
push
mov
add
filds
shrl
mov
lret
movsb
add
or
popf
sbb
jbe
and
pop
or
xchg
mov
cltd
push
lea
iret
es
xor
sub
inc
push
aad
and
cmp
xor
ret
fldt
push
int
pop
adc
push
mov
stos
cmpl
pop
dec
mov
incl
push
pop
leave
xlat
fwait
sbb
ror
imul
xchg
fnstsw
andl
mov
inc
cmpsb
fcmovnu
in
xchg
sbb
lret
arpl
xchg
dec
in
aad
push
mov
fs
xor
xchg
pop
cmp
cmp
popf
cmp
incl
xor
sbbl
lock
sub
add
dec
xchg
fldenv
aaa
in
movsl
rcrl
clc
int
inc
test
loope
insl
fistpl
int
stc
aad
xchg
and
xchg
mov
test
push
fnstenv
popa
mov
pop
cvtpi2ps
scas
mov
cltd
cmp
push
fildl
es
adc
nop
add
adc
dec
push
lds
sbb
scas
repz
nop
dec
imul
jmp
mov
sub
test
and
xor
rcrl
inc
adc
aam
stc
dec
sub
imul
jecxz
insl
fnstcw
xor
cmc
mov
add
xchg
scas
loopne
mov
xchg
cs
xlat
push
popf
cmp
imul
inc
adcl
mov
shll
fisttps
adc
mov
sbbl
jmp
fnstenv
lods
push
loope
pop
insb
or
xlat
out
cmp
or
iret
lahf
cmpb
or
in
xchg
cwtl
sub
pusha
loope
int
lock
push
xchg
cli
stc
push
cmpsl
mov
inc
or
movsl
mov
xchg
out
test
lret
roll
aad
mov
mov
frstor
iret
dec
stos
adc
mov
lret
scas
xor
dec
aam
aam
bound
mov
mov
notb
xor
xor
pop
insb
stc
test
push
xchg
mov
sub
jmp
xor
rclb
iret
mov
mov
xor
mov
mov
sub
imul
push
repnz
lahf
inc
pop
mov
sub
push
jno
iret
jmp
mov
xchg
and
in
ror
iret
mov
enter
sahf
aad
or
cmp
mov
shl
sbbb
ja
cmpsl
test
ljmp
jae
ljmp
fwait
rcrl
adc
js
xor
pop
sbb
iret
jne
pop
test
push
jle
inc
stc
clc
dec
in
stc
fistpl
jge
repnz
iret
movsl
sbb
xchg
sbb
mov
gs
sbb
inc
aad
add
and
rcl
mov
lea
xchg
jecxz
push
in
xor
lret
sbb
das
testl
rorl
nop
leave
leave
push
mov
scas
push
pop
add
out
push
pop
mov
out
icebp
stc
enter
out
cltd
out
ja
rcl
gs
pop
adcl
in
lds
int
mov
lds
aad
aas
popf
ret
inc
mov
mov
mov
pop
adc
int
jb
adc
iret
test
in
cmp
xchg
pop
adc
sub
inc
ret
mov
and
iret
xchg
mov
xchg
jecxz
and
mov
shrl
adc
pop
aad
in
es
push
jmp
sub
push
addb
scas
sbb
pop
faddl
add
shr
cltd
loope
aad
xchg
std
lret
sub
lea
loope
mov
stc
cmc
adc
inc
jmp
out
cmpl
test
stos
rcrl
push
fucomip
cmpb
in
loope
dec
push
mov
cmp
test
cmpsl
xlat
and
repnz
and
adc
and
mov
out
cmp
sub
aad
clc
or
popf
jge
cs
and
hlt
leave
cmc
iret
sub
in
mov
xchg
jle
int
mov
and
test
shl
popf
int
fimuls
pop
fldenv
or
sub
lret
pop
popa
mov
inc
orl
subl
imul
cltd
cmpsl
popf
push
pop
add
mov
mov
xlat
push
cmp
stos
daa
or
xchg
loope
xchg
inc
stos
loopne
jns
sub
bound
cli
out
mov
mov
addl
lea
adc
push
inc
sar
dec
xchg
inc
iret
scas
jmp
out
xchg
mov
sub
test
and
iret
lods
test
int3
or
cmp
data16
cld
test
mov
lret
in
jne
cltd
mov
iret
loope
mov
mov
mov
ss
cmp
pop
clc
enter
rcl
mov
aas
loopne
rcrb
xchg
movsl
lret
cmc
loop
push
mov
roll
lea
jge
mov
and
fstpt
cmpb
cmp
andl
inc
xor
test
mov
push
inc
scas
add
fwait
pop
inc
fdivs
fistpll
push
std
int
adc
xchg
fldl
mov
scas
xchg
lods
leave
mov
stc
xchg
sub
rcll
in
test
movsl
fucomip
test
lock
xchg
lahf
dec
xor
jmp
xchg
scas
adc
mov
mov
jne
push
push
iret
rcll
inc
mov
sbb
test
daa
shll
push
addb
fmull
shr
pop
lret
sub
inc
jmp
or
and
out
jae
js
mov
add
loope
or
out
add
movsl
xor
repz
movsl
pusha
rorl
ds
pop
popf
bnd
cwtl
push
sar
icebp
gs
mov
sub
leave
lds
pushf
cmp
daa
pop
xchg
sbb
iret
in
add
mov
xor
jmp
mov
push
test
sub
or
mov
out
cli
push
lret
sub
rcll
icebp
sbb
cs
jmp
pop
sub
or
popa
inc
arpl
mov
mov
imul
mov
jg
in
and
loope
lock
inc
pop
lea
ja
loope
jmp
incb
jnp
adcl
repnz
aad
and
fwait
sub
scas
adcb
sbb
cmpsl
lahf
es
xchg
jmp
push
jmp
add
push
push
fst
fisubrs
inc
jecxz
inc
mov
cmp
pusha
adc
js
xchg
and
add
movsl
vorps
push
adc
lods
xor
popa
xchg
adc
stc
imul
sahf
out
sarb
shll
sbb
int
mov
lods
sbb
aaa
mov
cmp
in
gs
lret
xchg
and
out
mov
shll
clc
jae
aad
xor
xchg
push
or
and
cmp
or
in
mov
lods
aad
mov
popf
jl
sarl
test
cld
inc
popl
push
dec
xor
aas
jecxz
mov
stc
iret
adc
xchg
stos
sbb
leave
add
jmp
sub
mov
pop
or
lds
popf
jecxz
or
lods
in
mov
aas
and
add
mov
shrl
int
aam
jmp
fmul
out
sub
xchg
iret
mov
decl
dec
pop
cli
xchg
iret
rorl
push
push
push
call
cld
xchg
cmc
xchg
int
inc
out
xchg
leave
sbb
arpl
jmp
jnp
adcb
ret
loope
out
mov
inc
mov
mov
jmp
aad
push
xchg
mov
dec
out
cmpsl
push
jno
dec
or
cmp
test
jne
jecxz
jne
lea
push
jno
push
rcll
out
addb
xchg
fisttps
mov
cs
mov
add
xchg
push
icebp
sub
aad
ficoml
mov
mov
mov
stos
cmp
push
ret
leave
pop
sbb
pop
push
mov
mov
test
in
push
stc
aaa
dec
popf
fcmovnb
stos
xchg
movsl
mov
sub
loope
or
rorb
push
out
fbstp
xor
insl
orl
push
adc
push
pop
push
fcos
incw
cli
pop
mov
sbbl
or
fistpll
in
xchg
arpl
cltd
push
jg
and
inc
mov
mov
flds
jno
mov
jo
mov
pop
cmp
inc
pop
jno
test
mov
or
rcl
adc
out
std
in
fmull
fwait
imul
ds
clc
scas
notl
cmp
pop
xchg
cmp
fidivl
aas
mov
xchg
xchg
in
es
movsl
dec
pushl
lcall
dec
xchg
loope
repz
idivl
xor
scas
xchg
and
mov
lret
ret
cmp
clc
stos
roll
test
dec
dec
aaa
sbb
shrl
jmp
pop
jge
add
mov
jb
jo
or
lahf
dec
mov
lock
or
movsl
popf
xchg
xor
pop
sub
fists
cltd
jge
jecxz
sbb
test
adc
stos
and
xor
cwtl
sub
xchg
test
and
xchg
rcll
subb
lret
enter
movsl
jg
cmc
xlat
iret
mov
mov
cltd
lods
lds
push
inc
daa
dec
fidivs
xlat
std
ljmp
pop
mov
cmpsl
cmp
cmpl
out
and
xor
addb
push
cltd
test
add
xchg
xor
push
in
jecxz
enter
aad
sub
lahf
dec
adc
cmp
push
popf
shlb
arpl
lds
loope
adc
adc
xchg
mov
fisttpl
in
pop
in
out
clc
xlat
rcll
inc
cs
shl
mov
scas
xchg
adcl
or
fisttpll
lret
mov
lea
sub
add
cmc
inc
lret
sub
or
out
fildll
in
xchg
jnp
lzcnt
out
js
rcr
xchg
sbbb
xchg
and
xchg
shrl
loopne
int
sub
jle
mov
shr
mov
imul
mov
mov
lret
and
inc
dec
jge
out
add
mov
push
cmp
sub
shr
cmpsb
jnp
jb
aaa
je
mov
repz
test
leave
or
lods
loope
popa
popf
push
imul
xchg
pop
ffreep
cmp
jmp
loope
jno
cltd
iret
dec
ja
xchg
lahf
es
bound
mov
loopne
lret
negb
aad
dec
xor
push
xchg
scas
bound
inc
icebp
and
mov
xor
and
dec
xchg
and
jge
shll
cmp
inc
lds
lcall
xor
mov
pop
lock
not
stos
sub
into
dec
mov
or
sub
gs
pop
pop
das
mov
and
insb
mov
mov
xlat
mov
fiaddl
popf
aad
filds
stc
inc
leave
xchg
and
and
test
insl
cmpsl
xchg
lcall
hlt
jmp
rcll
sub
pop
push
sbb
adc
lock
adc
jnp
and
xlat
push
fwait
sub
xor
jecxz
lock
add
scas
shl
pop
inc
xchg
cmpsl
cmp
lea
push
fwait
adc
out
popf
scas
leave
mov
movsb
mov
and
js
sub
inc
scas
dec
scas
ja
mov
sub
inc
movsl
mov
pusha
adc
daa
cmp
je
and
int
lea
ficoml
shll
adcl
xchg
dec
cmc
ret
mov
shr
mov
scas
out
sub
sbb
ljmp
adc
sub
sbb
cltd
es
jge
int
daa
iret
in
mov
aad
jae
jmp
inc
mov
test
mov
mov
push
arpl
and
push
sbb
xor
es
xor
or
addr16
xorb
add
sub
push
jb
cmp
mov
leave
lods
xchg
adc
out
xor
repz
mov
popf
push
sbb
mov
push
fstpl
std
out
mov
test
or
in
xchg
and
or
iret
testl
popf
mov
and
shlb
fistl
cltd
xchg
cmp
stc
stos
int
out
sbb
mov
scas
mov
xlat
cmp
mov
xchg
lds
jmp
push
dec
pop
inc
jo
sbb
cmpsl
aad
fwait
mov
mov
or
stos
pop
rcll
sub
cs
xorl
mov
loope
push
scas
and
and
insl
rolb
test
insl
roll
cmpsl
inc
push
mov
sub
adc
data16
pop
cltd
xchg
lea
nop
mov
test
fidivrl
lods
cmp
xchg
pop
adc
out
sub
fidivl
shrb
fwait
adc
popf
add
loopne
mov
xchg
mov
rorl
iret
shl
int3
hlt
in
mov
stc
movsl
clc
mov
fstp
pop
sbb
and
push
sti
sub
lcall
sub
fs
movsl
mov
pop
pushf
or
jmp
ret
or
add
test
stos
popf
xchg
aad
jae
xor
lods
jo
clc
imul
sbb
sub
fxch
stos
fdivs
aad
jecxz
lds
and
insl
cmc
inc
scas
push
stos
sub
cmp
test
mov
xchg
xor
sub
and
jge
fstpl
cs
xchg
fucomip
pop
jne
popl
test
gs
popa
shl
cli
js
out
insb
lods
xchg
adc
sub
and
jg
popf
sub
imul
ret
cmc
adc
imul
adc
xchg
in
and
sub
popf
mov
das
out
daa
jecxz
mov
xor
cmpsl
sub
adc
aas
fwait
bound
xchg
in
cmpb
xor
push
hlt
enter
fcom
shrb
shrb
ljmp
dec
stos
fwait
stos
adc
lods
test
mov
popf
stc
pusha
popa
out
push
jae
xchg
out
xchg
jae
rcll
out
test
jecxz
cwtl
mov
std
movsl
xlat
mov
adc
lea
sbb
cmovg
stc
fwait
aad
sarl
test
mov
jg
out
test
int
arpl
and
or
cpuid
shrl
popf
jne
lret
adc
stc
es
xchg
test
jno
adc
lahf
xchg
mov
cmpsb
aad
pop
fucomi
push
adc
xchg
iret
sub
mov
das
push
mov
jp
out
adcl
mov
mov
daa
mov
fwait
lods
adc
stos
adc
test
sub
rcll
outsb
shlb
xor
inc
or
lahf
jge
iret
xchg
pop
out
add
mov
sub
cmc
test
lea
aad
shl
mov
mov
adc
icebp
enter
xchg
in
nop
push
nop
mov
inc
iret
mov
mov
cmp
mov
push
xchg
fisttpll
adc
aad
into
xor
pop
push
rcll
les
add
outsl
fists
stos
mov
inc
frstor
dec
fwait
xchg
mov
mov
mov
loope
out
rcl
cmp
popf
mov
cltd
mov
lods
stos
or
clc
and
test
xlat
fwait
push
js
sub
cwtl
nop
inc
jae
movsl
pop
jnp
aad
pop
mov
mov
push
les
pop
cmp
int
adc
shll
test
imul
std
iret
adc
mov
out
mov
mov
jne
fistpl
cltd
stos
repz
and
mov
push
stc
mov
test
xor
inc
cs
cmp
loope
insl
rorl
jmp
mov
mov
sub
mov
fcomps
insl
xor
sbb
stc
push
test
cld
pop
pop
call
and
push
sub
sub
ss
sbb
lods
cmp
mov
xchg
dec
xchg
push
mov
lcall
mov
mov
push
inc
es
filds
lea
xchg
and
xchg
and
jns
dec
je
mov
sub
and
sbb
push
decl
int3
jne
imul
sub
lods
push
xor
lret
mov
in
int
jae
or
testl
add
xlat
cmpsb
adc
cs
cwtl
mov
jmp
mov
insl
jmp
test
xor
sub
xchg
fsts
out
imul
invd
mov
pop
fndisi(8087
adc
call
cmp
or
cs
and
cmc
xchg
push
push
fldcw
iret
stc
hlt
test
sbb
inc
xchg
jl
adc
loope
mov
cltd
movsl
sbb
push
adc
mov
stos
sbb
adc
cmp
gs
xchg
jg
lea
xor
mov
iret
xchg
jecxz
call
xchg
rol
popa
push
psadbw
lahf
xchg
mov
cs
push
cwtl
ljmp
xchg
mov
inc
mov
std
or
jne
aad
xor
push
xor
xchg
stc
enter
cmp
enter
dec
hlt
sub
test
cltd
in
fsubrs
xor
xchg
fistpl
push
pop
mov
push
pop
push
cmp
cltd
mov
sub
in
test
sbb
push
and
sti
leave
adc
out
fildl
clc
cmp
inc
in
stc
popa
xor
xchg
clc
fcmovnu
add
bound
xor
bnd
clc
std
mov
xchg
shl
adc
stc
scas
popa
mov
pop
bt
cs
cltd
out
jl
iret
mov
mov
and
jecxz
rclb
iret
wrmsr
jbe
mov
das
je
nop
pandn
cmp
mov
in
fnstcw
xor
mov
fistl
inc
add
push
push
dec
mov
imul
in
jge
xchg
lea
lock
add
lcall
sbb
or
jecxz
out
pop
lock
push
nop
leave
mov
fwait
sbb
pop
sub
xchg
add
jmp
out
push
xchg
ja
or
orl
rorl
mov
in
iret
insb
adc
leave
xor
mov
and
out
push
or
adc
push
out
mov
mov
xchg
and
rcrl
mov
in
pop
mov
testb
jmp
in
add
xchg
in
pop
ljmp
cmpsl
jo
arpl
sbb
aam
repnz
repz
mov
inc
stos
sub
jne
shl
ja
xchg
out
or
pop
pop
popf
or
int
andl
jecxz
aas
and
xor
getsec
shll
xchg
in
and
scas
test
mov
mov
mov
pop
subl
in
or
es
into
xchg
adc
popa
dec
jge
push
adc
xor
scas
aad
xlat
dec
xchg
push
or
cmp
ret
int3
aam
clc
dec
mov
stos
fdivp
lcall
or
fwait
adc
movl
lods
popf
cmpsl
aas
shll
jmp
inc
jle
jl
loope
and
fistpll
sbbb
pop
fwait
jecxz
lods
push
sub
sbb
sub
ds
popf
xor
cmpsb
test
out
loope
iret
mov
xor
dec
sbb
sahf
cmpsl
cltd
out
mov
dec
rcrb
and
mov
clc
mov
cmpsb
cmp
jp
mov
ffree
cltd
ds
or
lods
dec
mov
jne
xchg
icebp
leave
loopne
jg
fistpl
cmp
and
cmp
clc
mov
mov
shr
loope
movsl
std
sub
aad
iret
inc
and
andl
je
pop
add
outsb
mov
dec
imul
cmp
push
aad
jb
xchg
imul
out
movlps
jmp
and
and
lea
hlt
fdivrs
xorb
fildll
jb
sub
push
sub
pop
popf
xchg
xlat
xchg
mov
iret
repz
stc
sub
sub
pop
rcll
cld
add
ret
or
and
jmp
mov
lods
aam
fsubrl
leave
aas
adc
loope
lret
loop
jmp
or
mov
sbb
sbb
jae
int
inc
push
leave
shl
inc
and
mov
dec
sbb
cmp
in
xchg
xchg
xor
sub
jne
test
iret
push
fisubrs
push
cmp
jecxz
aaa
pop
cltd
int
cmp
push
push
aas
lods
inc
xlat
loope
push
xor
cltd
xor
es
mov
mov
fcmovnb
jae
movsl
iret
enter
shl
and
or
sbb
or
or
cltd
lods
test
shll
fwait
les
sub
sub
sub
push
iret
pop
daa
xchg
jmp
movsl
aaa
out
es
int
stos
incl
lret
aad
cmp
fldenv
inc
subb
pop
stos
dec
into
mov
or
mov
sub
cmp
addl
jo
or
in
clc
test
jecxz
int
xchg
mov
andb
jg
shr
orb
mov
jmp
ret
enter
daa
imul
mov
scas
dec
rcr
aad
xchg
pop
mov
cmp
movsb
dec
icebp
aam
adc
push
sbb
xor
arpl
mov
sysenter
sub
xor
aas
test
xchg
scas
es
and
stc
es
subl
leave
sbb
push
mov
je
rcr
cld
xor
mov
lahf
cmp
push
inc
cmp
cmpsb
scas
push
test
mov
xchg
fisubrs
ja
jmp
xor
sbb
cmpsb
daa
cmp
stc
inc
push
xchg
js
in
lods
cmpsb
mov
lret
or
in
sbb
jge
fnstenv
cmp
cmp
and
scas
in
mov
cltd
test
dec
pop
push
adc
leave
xchg
ret
movsl
lret
jecxz
ficoml
stos
imul
lods
dec
out
push
xchg
xor
push
enter
cmpsl
bound
push
seta
dec
dec
loopne
sbb
jmp
test
lods
jo
xchg
aas
icebp
dec
fstpt
cmp
and
fadd
adc
test
lea
ret
in
adc
or
xor
dec
push
jne
mov
stc
push
lret
ret
aad
fisubl
rcll
and
jnp
shll
leave
sub
xlat
mov
jnp
mov
cld
pop
jbe
mov
lods
repz
lret
add
subl
test
scas
xchg
push
push
rolb
xchg
jne
out
jne
cmp
iret
and
adc
popf
cmp
or
lret
scas
fistpl
fstps
hlt
pop
jo
andl
aam
pop
adc
lea
adc
mov
mov
push
xchg
or
jne
lret
xchg
sub
mov
popf
inc
stos
shl
adc
mov
push
in
int
shll
ja
in
ss
cmp
imul
in
pop
push
cs
inc
fstps
int3
jno
xor
push
addl
sub
lahf
pop
movsl
pusha
aad
sbb
ja
out
sbb
cmp
pop
xchg
in
add
or
icebp
xlat
aas
mov
jg
loope
xchg
adcb
jnp
or
pop
stos
xlat
push
add
xchg
iret
lret
pop
pushf
xlat
es
dec
push
iret
movsl
cltd
scas
pop
dec
jno
int3
jmp
mov
hlt
sub
and
fld
scas
test
adc
and
sub
mov
jmp
mov
rcrl
rcl
cmc
add
std
push
test
test
int
rcrl
adc
adc
std
pop
sub
mov
lds
push
int
push
leave
dec
jecxz
jge
fwait
sub
mov
lret
and
lock
jp
pop
rclb
out
fistpl
sbb
lock
jmp
jno
mov
js
lds
pop
add
push
and
jnp
lret
push
adcl
pop
push
cmpsl
pop
cs
mov
popf
cmp
fs
insl
xchg
fidivs
xor
rcll
ss
mov
es
adc
mov
popa
adc
ss
add
stos
leave
cs
leave
adc
mov
ret
test
int
fadd
dec
push
push
jg
mov
scas
adc
xor
push
ja
repz
repnz
stos
lea
mov
fucomi
aam
test
add
cmpsl
push
xchg
sub
xor
jecxz
movsl
fdivl
cmc
lods
cmpsl
jl
jbe
mov
xchg
mov
cmc
add
daa
push
jae
int
xor
or
es
inc
sub
push
sub
push
in
rcll
xchg
pop
mov
cmpsl
jne
iret
cmp
sar
test
mov
test
push
nop
stos
cmp
shll
scas
std
int
psrlw
fistl
daa
pop
cltd
dec
jbe
leave
call
les
movsl
mov
scas
jecxz
cmpsl
cwtl
out
frstor
jmp
xchg
sbb
push
and
mov
out
mov
xorl
xchg
aad
and
sarl
les
repnz
rcrl
int
cmpsl
or
aas
mov
cmc
mov
mov
cmp
push
ljmp
jno
pop
iret
mov
pop
cmp
out
rcll
addr16
sbb
sub
or
mov
sahf
ret
fdivs
pop
scas
leave
rol
mov
iret
push
add
aaa
mov
fstpt
ror
mov
push
pop
adc
or
xchg
jmp
popf
sub
vmovss
test
mov
fisubrs
mov
cli
inc
mov
mov
sub
jne
fnsave
and
pop
test
inc
inc
fs
cmp
mov
mov
add
lret
and
addb
inc
mov
lahf
fldl
sbb
notl
outsl
adc
add
and
dec
in
or
sarw
int
inc
call
sub
in
aad
xor
sub
and
cmp
loopne
cwtl
xlat
cmc
iret
movsl
lods
scas
jmp
fstpl
leave
in
sub
mov
enter
sahf
lock
mov
xor
jecxz
xor
adc
mov
movsl
std
cltd
popf
stc
rolb
fistps
test
repz
pop
cmpsl
jno
adc
jmp
shl
in
dec
ss
leave
les
dec
jle
ds
mov
jmp
lret
push
out
cmpsl
aam
sbb
scas
stc
idiv
ja
int3
xlat
xor
fwait
cmp
shr
sbb
stc
jo
pop
fmuls
test
mov
adcl
movsb
imul
and
inc
mov
loopne
lods
adc
stos
push
xor
popa
flds
mov
hlt
cmp
pushf
jne
loopne
inc
xor
and
pop
sub
scas
pop
add
and
or
jae
test
sub
dec
push
pop
sahf
imul
fs
daa
shl
cmpsl
js
out
fistps
mov
jmp
iret
mov
lds
movsl
pop
push
sub
testb
pop
icebp
inc
inc
pop
or
cmp
out
test
es
push
ret
mov
mov
push
pop
leave
xlat
xor
mov
pop
ret
mov
xchg
movl
fcompl
loope
jno
fs
pop
push
jne
inc
jecxz
add
mov
inc
xor
mov
cmp
adc
inc
cmp
sub
mov
shrb
test
sub
mov
fs
or
aad
cli
xchg
andl
leave
loope
xor
stc
and
xlat
popf
test
push
andl
mov
xchg
mov
cwtl
pop
imul
sub
fimuls
sub
sub
push
mov
sbbl
out
push
popf
jmp
clc
dec
testb
ja
dec
and
pop
pop
mov
mov
cmp
in
cs
cltd
lods
fisubl
push
fisttpl
idiv
cs
sbb
out
jecxz
mov
jae
cmp
inc
frstor
and
or
add
fsubrs
and
dec
cwtl
xchg
lods
aad
insl
in
cltd
lcall
sbb
xor
jno
and
aas
push
imul
les
stos
cmp
scas
push
mov
movsl
cmp
inc
stc
daa
mov
shll
jg
andb
push
int
mov
sbb
cmp
add
hlt
das
dec
jo
daa
cmp
sub
mov
mov
adc
pop
jnp
and
sbb
or
shl
lret
in
push
push
dec
push
lock
xorb
fstpt
stos
test
mov
jmp
rcl
pop
leave
in
popf
xchg
mov
call
in
aas
shll
jb
xor
sub
mov
pop
and
dec
loope
push
mov
jl
lahf
cwtl
jnp
sub
in
insb
flds
clc
xchg
xchg
sub
mov
lds
in
out
popf
sub
fldt
pop
lret
cmpb
fwait
es
stos
subl
push
movsl
dec
sbb
and
or
mov
jecxz
cs
xorl
fidivrs
decl
lret
cmp
insb
lcall
fadd
mov
data16
out
shrb
das
aad
scas
cmpsl
mov
xchg
in
adc
jbe
fwait
sub
fsubrs
dec
sbb
lret
mov
mov
shrl
addl
xchg
fucom
or
jmp
imul
out
sbb
out
or
xchg
stc
leave
xchg
or
test
in
pop
cltd
in
cwtl
dec
jns
pop
mov
xchg
cs
mov
mov
adc
stos
sbb
lds
sub
xchg
mov
inc
lahf
cmpsl
xchg
aaa
cmp
in
jmp
mov
cmp
xchg
mov
in
stc
jecxz
sbbl
mov
fists
cmc
sub
xchg
pop
fcompl
adc
das
pop
rcll
or
das
jmp
std
ret
and
movsl
imul
mov
cmpsl
test
and
stc
jmp
lea
sub
int
in
mov
nop
es
mov
mov
sarb
cmpsl
ja
xchg
pushl
mov
cwtl
mov
fwait
and
ret
movsb
lods
xchg
xchg
xchg
lods
xorb
xor
pmuludq
sub
out
xchg
sub
and
cmp
imul
iret
sbb
or
add
or
sbb
inc
mov
lret
leave
dec
pushf
rorl
loope
pop
cmp
pusha
lods
mov
xchg
jmp
insl
push
fwait
ret
into
cmp
lret
pop
shr
rcl
adc
jns
clc
dec
xor
jge
sbbl
repnz
xchg
cmpsl
in
or
int3
test
fwait
push
das
or
xchg
cmp
mov
xchg
movsl
enter
sub
jmp
mov
xchg
mov
out
pop
inc
stc
xor
inc
aad
dec
or
mov
push
jecxz
mov
cmc
fwait
rcrl
mov
dec
xchg
int
test
push
sub
sub
and
in
imul
xchg
xchg
mov
fwait
sub
xchg
lahf
orb
inc
out
out
in
scas
add
cmp
pop
push
push
sbb
push
inc
cs
fdivl
mov
fisubrl
icebp
mov
xchg
imul
fldl
and
jae
xor
push
fcom
out
lods
cmpsb
jmp
in
fbstp
repz
jae
inc
xchg
test
xchg
inc
sbb
test
shr
cmp
xor
adcb
push
fildl
mov
mov
push
pusha
in
clc
lods
mov
int
sbb
sarb
pop
and
xchg
mov
sbb
fwait
pusha
aaa
stc
in
cltd
mov
inc
movsl
lea
jecxz
mov
sub
cmp
adc
int
ds
cmp
addr16
sub
popf
out
inc
loope
and
xor
sub
outsb
sbb
or
lock
cltd
xchg
xor
jno
mov
lret
cmp
stc
es
jmp
or
loope
lods
xchg
roll
jmp
jecxz
xchg
icebp
cmp
sub
and
cltd
lods
loope
mov
cmp
sti
es
inc
sub
int
subl
inc
frstor
lea
xchg
outsb
xlat
insl
gs
jmp
xorl
xor
mov
lret
aam
aad
loop
inc
jns
sbb
sub
adc
aas
inc
add
xlat
sarl
decl
xor
adc
loope
shll
fwait
or
xchg
cltd
sub
repz
mov
jns
mov
mov
jne
inc
mov
std
pop
test
pop
sub
dec
and
jmp
in
cmp
aam
enter
add
es
mov
in
roll
mov
movl
sub
jb
lea
jno
lret
push
inc
sbb
jmp
sbb
mov
movl
add
fildll
dec
movsl
xchg
mov
dec
cltd
sbb
mov
aad
push
ja
jmp
rcr
lods
or
cs
test
lret
and
jns
pop
cltd
adc
es
xchg
xor
shll
clc
sti
out
cmpsb
push
inc
xchg
cmp
push
xchg
out
xchg
arpl
push
insl
aaa
sbb
fcompl
pop
dec
popf
leave
cs
xor
lea
orb
repnz
mov
sub
insl
out
divb
in
dec
dec
shll
inc
test
lea
js
push
cltd
xlat
int
dec
fsubrl
pop
push
popa
jge
shrb
cmpsl
int
imul
addb
fnstenv
push
dec
sub
mov
test
push
leave
popf
xor
and
push
adc
pop
loopne
rcl
iret
pop
fistpl
mov
and
add
adc
mov
inc
push
les
std
out
in
scas
stos
das
test
out
sub
pop
and
cmp
jmp
push
jbe
ss
cs
inc
push
sbb
lods
stc
push
add
add
or
lret
clc
adc
xchg
lahf
jg
cltd
cltd
push
mov
hlt
je
cmp
fdivs
and
sbb
fwait
popf
std
out
sub
aad
jmp
aad
andl
xlat
sbb
jmp
pushf
add
jnp
popa
inc
adc
leave
mov
popa
adc
dec
fwait
mov
mov
cli
int
lahf
dec
test
test
popa
mov
pop
or
mov
test
shl
add
adcl
mov
fsubr
sub
or
push
adc
mov
sbb
lods
stc
fbstp
in
mov
sbb
das
daa
jg
lock
adc
push
rorl
in
iret
loope
cmpl
xor
aad
add
lret
mov
int
and
shrl
test
shll
xchg
movsl
adc
push
out
add
subb
add
test
cld
stos
mov
jmp
xor
call
cmc
adc
stc
lahf
xchg
loopne
sub
jb
cli
mov
lods
lea
sub
xchg
rorb
lret
mov
mov
jecxz
cmp
out
jle
pop
fildl
jbe
leave
mov
pop
jge
xchg
cs
fwait
loope
sub
sbb
mov
xchg
cmp
pushf
adc
imul
mov
lds
xor
sub
jl
in
or
xchg
xchg
icebp
inc
or
mov
xchg
push
xor
mov
xchg
push
aad
mov
out
mov
mov
fsubr
scas
inc
and
sbb
add
pop
jp
mov
enter
lods
movsl
mov
mov
dec
mov
xor
pop
popf
xchg
push
ja,pn
pop
push
inc
xor
leave
cmp
ret
xor
push
in
cmp
cltd
mov
fstps
movsb
popa
ja
cmp
clc
inc
jmp
sub
dec
mov
adc
sbb
xchg
cmpsl
shll
pushf
fildl
nop
jmp
imul
fsubs
stos
std
mov
das
cmp
shll
lahf
imul
mov
imul
cmpsl
mov
jl
mov
repnz
les
es
loop
sub
fcmovnbe
sti
and
andb
out
lods
insl
repnz
int
push
sub
mull
leave
xchg
dec
mov
les
pop
cltd
and
push
xchg
dec
test
mov
lods
shl
stc
loope
xchg
sub
fwait
in
mov
imul
test
mov
movsl
in
fwait
pop
xchg
in
pop
rcrb
mov
or
mov
testl
insl
pop
xor
addr16
dec
mov
or
xor
aas
lods
push
stc
adc
and
push
dec
pop
ret
in
pop
bound
and
test
sub
ds
xor
lahf
jmp
out
sbb
adc
pop
push
ljmp
jnp
mov
cmp
pop
adc
test
mov
lods
mov
test
sbb
icebp
orl
cmp
lahf
int3
cmpsl
daa
pop
test
rolb
xor
int
movsl
or
mov
and
imul
mov
in
push
xor
dec
jmp
mov
fstpl
dec
movsl
aam
mov
push
sahf
inc
lods
scas
mov
enter
xchg
and
xlat
sub
jbe
addb
ret
rorl
fucom
leave
xchg
fwait
cmp
add
lds
xchg
lret
pop
loopne
push
or
stos
out
call
lock
push
pop
mov
mov
xchg
in
lret
nop
inc
mov
fidivrs
orb
sbb
and
push
or
sbb
movsl
and
sub
jl
in
jne
jecxz
stc
cltd
stos
pushl
mov
sub
pop
lods
aas
cs
lret
xchg
xor
push
sub
cmp
in
cltd
and
cmc
mov
jmp
mov
push
movsl
or
sub
cmpl
cmc
jbe
pop
inc
int3
pop
out
scas
testb
es
add
shrl
mov
aad
cld
mov
dec
aad
in
loopne
jae
mov
loopne
sbb
ffreep
psubusw
loope
pushf
icebp
dec
pop
fwait
cltd
xchg
lea
fnstenv
in
mov
into
xor
stos
push
pop
movsb
jmp
fdivrl
test
dec
and
push
xchg
roll
sub
cmpsl
imul
ret
push
shrl
mov
sub
shll
out
in
aaa
xlat
jmp
lret
jmp
test
data16
into
mov
out
popf
adc
js
jmp
pop
push
aad
aas
xlat
mov
lahf
aas
std
loope
insl
sub
mov
cmpsl
lods
pop
mov
iret
fbstp
loope
shrb
or
stos
movsl
xchg
aaa
lahf
xchg
rorl
cmp
test
leave
sub
xchg
bound
mov
mov
add
imul
and
xchg
sbb
add
iret
out
push
das
fld
jl
clc
sub
mov
sub
sbb
pop
dec
movsb
push
cmp
roll
jl
fwait
loope
int3
clc
xchg
aad
lahf
jge
iret
xor
add
jmp
push
xor
push
xchg
inc
out
xor
jno
sarl
das
mov
xchg
cmp
push
xchg
dec
lods
mov
or
out
pop
sub
mov
daa
push
insl
test
xchg
test
sub
xchg
in
stc
adc
jae
push
test
loopne
cs
pop
jbe,pn
lret
cwtl
into
xor
les
inc
pop
stos
roll
popf
push
push
jecxz
fists
xchg
fldt
sbbl
lret
push
and
rcr
jmp
loope
rcr
mov
and
adcb
popf
faddl
cli
push
fst
pop
xlat
cmp
ss
std
loope
xchg
shll
fildl
rolb
mov
in
xchg
inc
sub
mov
jecxz
mov
or
negl
stc
or
jmp
adc
enter
push
movsl
xchg
or
sub
shrl
popf
push
cmpsl
es
shr
imul
inc
xchg
sbb
popf
or
and
add
cmp
in
imul
jmp
push
jecxz
insb
lock
cwtl
or
aaa
ror
and
xor
inc
sub
aaa
out
fwait
mov
mov
push
xor
xchg
cmp
jge
test
mov
mov
ds
xchg
test
lahf
mov
andl
faddp
mov
in
push
push
lahf
test
inc
inc
out
fiaddl
popa
out
lea
mov
xchg
mov
imul
out
dec
cmpsb
mov
lods
ds
jb
outsl
fwait
jmp
test
cltd
stos
cmp
aad
push
xchg
in
stos
sub
rclb
jae
int
movsl
call
inc
lock
lret
aad
jecxz
push
xor
push
cltd
mov
movsb
jne
rcrl
push
popf
in
inc
jmp
xchg
jbe
aad
xor
xchg
test
pop
test
mov
mov
mov
jmp
aaa
fyl2xp1
sub
nop
mov
mov
ret
mov
xor
mov
and
xchg
ds
and
or
or
or
es
fildl
push
lret
pop
inc
xchg
cltd
data16
imul
xor
sub
lret
jmp
xchg
mov
popf
stos
fidivs
test
shl
inc
test
ss
arpl
adc
xchg
mov
mov
rcrb
xchg
push
cli
call
push
push
test
decl
ret
sar
and
lods
enter
xchg
idivl
and
lds
imul
fsubl
pop
leave
or
aam
or
fcoms
xchg
sarl
jo
insl
jle
jl
pop
movsl
mov
lods
xchg
mull
sbb
or
aad
cmc
sub
jmp
jecxz
cmp
imul
sub
jmp
add
push
jno
or
ror
add
sub
jecxz
xor
int
jno
sub
lds
and
fisttpl
inc
lea
dec
mov
xchg
out
sub
jg
stos
cmc
shl
loopne
clc
daa
pop
mov
and
or
int
jmp
sbb
test
xchg
xchg
clc
pop
rcll
sub
pop
jmp
sub
fsts
cmp
imul
sbb
push
jmp
mov
cmc
cmc
shll
insb
arpl
xchg
in
xlat
aam
les
or
sub
mov
fabs
loop
cmpb
popf
inc
mov
stos
leave
cmp
in
imul
cltd
mov
aaa
stos
aad
out
test
rolb
int3
lods
mov
mov
cmpsl
lret
push
sub
mov
cmp
leave
and
lods
sub
adc
scas
arpl
sahf
cmp
lock
loope
imul
out
push
fnstsw
nop
mov
push
lea
roll
mov
mov
jecxz
xchg
jbe
icebp
sub
push
xchg
inc
add
das
andl
loopne
lcall
int
sbb
dec
vmovapd
xchg
cltd
mov
push
fldenv
aaa
test
adc
mov
lahf
in
out
pop
stc
xchg
sub
pop
xlat
mov
fs
imulb
cmc
and
xor
mov
and
fadd
leave
aaa
cmpsl
stc
mov
add
cli
adc
jb
lret
mov
fxch
jb
xlat
ss
shr
lds
push
fcoms
push
dec
xchg
push
add
rcrl
cli
loope,pn
in
jecxz
sub
and
fwait
add
xchg
xchg
xchg
pop
sub
addl
sbb
sub
push
rorb
sub
lcall
sbb
or
jns
push
sbb
cmp
xchg
andl
out
xlat
fstp
test
push
loopne
je
movsl
mov
lods
mov
jmp
pop
fwait
cmp
and
xchg
cmp
xchg
int
sub
and
adc
popf
in
daa
int3
cs
lds
dec
out
in
icebp
xchg
dec
pop
mov
test
mov
mov
lahf
scas
xor
in
nop
and
movsl
lds
xor
lods
xchg
inc
xlat
mov
in
nop
cmp
leave
lahf
loope
bswap
jmp
sub
xor
mov
rorl
cs
xchg
push
jo
in
lea
xchg
push
mov
mov
jecxz
jmp
pop
push
jae
stc
xor
aaa
fcmovnb
loope
sub
shl
scas
iret
mov
sub
xchg
shlb
lods
dec
cld
lret
and
stos
js
in
push
xor
adc
fstpt
pop
mov
shl
jmp
cwtl
aaa
ret
out
iret
xchg
movsl
lods
in
jns
inc
push
fildl
mov
cli
sub
rcrl
or
fxch
jmp
fs
test
mov
imul
add
cld
push
loop
mov
sbb
cmp
in
mov
xor
pop
stc
test
les
dec
ds
pushf
stc
mov
cmc
xchg
cmpsb
fdiv
mov
cs
in
cmpsb
in
bound
and
mov
imul
pushf
lea
and
cwtl
and
adc
stos
fcomps
cmp
lret
sbb
mov
out
test
loopne
arpl
fstpl
mov
mov
aas
and
adc
lds
push
fbld
and
jne
sbb
imul
mov
xlat
push
in
jge
sahf
xor
pop
outsl
lret
mov
jb
jl
pop
jecxz
inc
jae
cmc
lret
xorl
test
or
shrl
mov
fwait
pop
jg
mov
and
mov
sub
jge
test
int
mov
xor
stc
sti
test
leave
andb
in
aad
stc
push
cmp
out
mov
xchg
in
sub
popf
rcr
iret
xor
roll
aam
imul
push
cltd
mov
jo
arpl
jne
jmp
aad
sti
cs
cmpsb
jmp
jmp
sti
inc
xchg
xor
cmp
lret
rolb
pop
fbld
rclb
sub
lea
incl
mov
adcb
fistps
add
ljmp
cli
jno
fwait
in
cmp
add
pop
lea
xchg
cmc
inc
in
push
inc
and
repz
and
cwtl
subb
mov
dec
subb
sub
clc
leave
int
dec
cmp
es
pop
push
sbb
push
leave
xchg
lock
int
lea
stos
mov
xor
cmpsl
inc
mov
mov
mov
aam
sahf
mov
mov
and
clc
add
xchg
popf
sub
adc
scas
pop
and
in
jmp
mov
lahf
xlat
cs
rorl
jecxz
or
lea
cmpsl
xchg
push
dec
je
xchg
pop
aas
sbb
leave
push
adc
test
std
mov
sub
lret
add
in
add
xchg
mov
fildll
andl
daa
adc
into
cmp
fcom
xor
push
and
enter
iret
adc
sub
cmp
and
cmp
pop
icebp
addb
jmp
mov
std
daa
sbb
stc
add
or
lods
scas
fucomp
sub
cmp
cmp
cld
push
xor
and
pop
or
ret
fisubs
das
pop
int
clc
mov
in
sbb
pop
push
mov
aaa
fucomp
and
or
xchg
adc
fbld
push
xchg
shrl
mov
fwait
pop
cli
movsl
cmp
shll
jo
out
pusha
sbb
xchg
negl
push
and
jae
jmp
out
sbb
arpl
cltd
ret
pop
sub
clc
inc
mov
jno
fldenv
or
xor
shll
cmc
sub
addb
dec
sarl
jno
cmp
sub
leave
iret
xorl
xorl
mov
test
mov
mov
and
xchg
std
test
dec
mov
popa
sub
adc
loop
pop
mov
cmp
and
leave
mov
mov
jmp
xchg
rorl
in
mov
cmp
xlat
push
lods
lret
arpl
adc
in
cmp
es
push
mov
imul
jecxz
test
lret
jl
cmp
mov
repnz
add
xor
ljmp
iret
int
dec
and
and
pop
mov
fistpl
repz
insl
enter
cs
cmpsl
rorb
pop
push
sub
test
and
out
lret
aam
cmpsl
cltd
pop
xlat
mov
hlt
push
push
lods
fistps
call
pushf
fimuls
aad
mov
xchg
or
xor
call
repz
test
daa
cmpsl
test
cmp
in
dec
fcmovu
call
out
push
test
sarb
cmp
mov
and
clc
flds
fists
mov
ret
push
sub
xlat
xor
sub
pusha
rcrb
aad
imul
fwait
cmc
lock
pop
lea
xchg
mov
fildl
xchg
pop
std
mov
or
or
cmpb
fwait
jmp
clc
xor
popf
ret
iret
roll
fldcw
mov
lds
test
push
xchg
fsubrs
movsl
into
aas
testb
imul
push
sar
cmp
in
xor
ficompl
ret
mov
lds
xchg
int
adc
xchg
loopne
push
pop
push
mov
filds
mov
out
dec
mov
push
test
iret
xchg
push
push
cmpsl
fisubrs
sahf
cmp
ret
lahf
pop
and
sahf
rcll
dec
xchg
push
jo
pop
mov
fs
sub
test
shll
fcompl
lea
movups
and
imul
jecxz
xchg
setns
xor
add
mov
sarl
in
sbb
mov
fstl
dec
bound
pop
sbb
sbb
push
sub
push
adc
or
fists
pop
xor
rcrb
jecxz
mov
xchg
xchg
lcall
test
in
rcll
pop
sub
xchg
mov
test
stc
pop
dec
roll
popf
sub
imul
subl
adc
cmc
inc
mov
imul
mov
and
arpl
dec
rcll
adc
push
push
out
bound
jo
push
ja
addl
or
xchg
aad
cs
mov
jecxz
cmc
mov
fsubrl
add
fidivs
xchg
test
shrl
push
out
lcall
inc
xchg
ret
rcll
push
lods
push
sub
and
pop
xor
push
and
cltd
sub
lcall
xchg
leave
xor
pop
movsb
add
jno
xor
mov
or
xor
addl
sbb
cltd
jmp
in
xchg
add
sbbb
mov
sbb
imul
xlat
leave
js
shrl
pop
pop
xchg
push
mov
ret
add
ret
or
fadds
mov
xchg
inc
add
mov
sub
loopne
sub
sub
fistl
and
or
imul
add
shrl
movsl
iret
frstor
cmp
mov
imul
lea
dec
xchg
xor
cmp
jmp
insl
mov
leave
in
and
hlt
lahf
adc
out
fisttpll
aad
cmpb
in
sub
jb
jge
pop
mov
mov
shll
test
and
scas
in
mov
stc
sbb
xor
pop
sbb
inc
lds
pop
decl
sub
stos
mov
ja
test
mov
adcl
add
lret
sub
loopne
mov
lcall
test
mov
adc
cmp
lods
mov
fildl
xchg
adcb
repz
ss
mov
popf
loope
in
xlat
mov
jnp
adc
inc
test
in
sub
js
in
test
xor
mov
xchg
iret
mov
stc
popf
push
jno
mov
test
cmp
ss
sbb
mov
jb
sbb
fisttpl
sbb
int
xorl
mov
cmp
inc
cld
add
jmp
xor
inc
std
outsb
jbe
push
pop
or
xchg
lods
out
cltd
mov
int
mov
sub
int3
dec
jmp
rorb
xlat
xchg
inc
cwtl
jg
cmp
cli
mov
popf
cltd
push
rcll
aad
jmp
mov
leave
xchg
scas
fstl
add
imul
adcl
xchg
shr
in
shll
inc
mov
and
loop
sarl
pop
loope
in
sbb
test
testb
sbb
or
xor
cmc
arpl
xchg
pop
xchg
xchg
sub
dec
and
std
fldcw
push
stos
popa
nop
jae
xchg
jmp
daa
test
out
icebp
cmpsl
dec
or
and
mov
out
mov
leave
fisubl
or
lods
lea
int
rorl
out
add
movsl
push
pop
in
std
jmp
rorl
jmp
out
sbb
add
xor
lea
mov
cmp
loope
jmp
rcrb
cmpsl
das
lahf
inc
push
leave
aam
clc
jmp
fdivp
ret
fwait
cmp
test
mov
aad
lds
jmp
lock
adc
out
mov
movsb
xchg
cmp
rcrl
sub
rol
fnstenv
cmp
repz
pop
push
xlat
lods
cmpsl
int3
movsl
jne
fnsave
cmp
out
test
ss
cmp
and
ja
adc
popf
stos
add
sbb
xor
gs
call
stos
ret
insb
insl
mov
adc
pop
adc
mov
jl
in
mov
add
or
loope
ret
int
mov
cmp
xstore-rng
cmpsl
sbb
fmul
lahf
lret
xchg
in
cmp
xchg
roll
ja
icebp
out
jmp
mov
in
imul
pop
cmp
jmp
shrl
out
sbb
stc
xchg
aad
fucomp
aad
mov
cltd
dec
xchg
imul
aaa
rcl
stos
jmp
in
sbb
cltd
fisttpll
and
popa
leave
sbb
pop
push
daa
scas
inc
or
adc
adc
sarl
inc
xchg
fstps
or
mov
jp
push
xor
iret
sub
mov
sub
mov
mov
repz
loope
mov
cmp
loopne
mov
out
pop
xor
cmp
or
cmp
es
lods
aad
push
int3
add
out
adc
sub
push
sbb
mov
xchg
leave
cs
popf
lahf
popf
sbb
test
aam
sub
movsl
push
cmpsl
popa
andnps
xchg
dec
sub
ret
fstps
xchg
iret
sbb
es
push
xor
adc
fwait
push
lea
aam
stc
ret
pop
ss
popa
out
mov
adc
xorl
test
popf
popf
scas
sub
add
push
fxch
mov
xor
jae
cmp
fildll
ja
frstor
mov
lods
popf
sub
hlt
lret
roll
mov
mov
mov
add
add
xchg
test
cltd
in
add
push
in
lret
dec
loope
loopne
or
stc
clc
cmp
dec
fcmovnb
dec
add
mov
xorb
mov
loope
xchg
in
ror
in
int
sub
mov
std
cmp
imul
adc
lea
push
push
cmp
xlat
fwait
lahf
movsl
fstp
into
les
fldcw
in
nop
or
pop
add
pop
cmp
std
jecxz
mov
push
mov
decl
rclb
fildll
in
pop
imul
xor
push
sahf
andps
cmp
scas
lret
bound
cmpb
cmp
cmp
out
cltd
movsl
fsubs
scas
mov
fstl
sub
fwait
ret
int
pop
sbb
jecxz
lds
push
add
subb
jmp
xor
xor
mov
or
xor
orps
mov
scas
sbb
cltd
fistpl
in
adc
aam
lock
in
leave
xor
sbb
ds
mov
mov
xlat
pushl
jmp
iret
xchg
loope
subl
imul
sbbl
rcr
movsl
in
mov
and
loop
loop
aam
add
cs
aad
xchg
fisttpl
xchg
mov
push
inc
popf
jecxz
imul
pop
lahf
and
jge
aam
pop
push
test
mov
mov
test
pop
push
mov
sub
sub
iret
xlat
aaa
inc
ror
mov
out
loope
roll
xor
pop
cmp
fdivr
int
out
xchg
mov
lahf
sbb
xchg
pop
decl
push
mov
aad
lret
xorb
bswap
push
orl
mov
test
sbb
mov
pop
scas
lahf
add
sub
jecxz
movsl
out
lea
test
lods
test
adc
sbb
imul
loopne
xor
scas
adc
inc
stos
or
loope
iret
xor
fnsave
lds
xlat
in
push
lahf
and
ds
ret
aad
or
cs
mov
add
imul
xchg
lds
or
sub
nop
mov
jns
lds
mov
stos
and
mov
nop
sub
sub
and
int
rol
repnz
fnsave
test
lret
cmpsl
push
pop
movsb
fistpl
aas
test
push
mov
pop
fwait
pop
ret
xchg
fxam
add
and
push
xchg
aad
popf
das
push
mov
in
cmp
sbb
mov
out
lods
xchg
nop
decb
push
mov
push
pop
test
rorl
lret
pop
and
push
xchg
cmp
fwait
ss
sub
sbb
repnz
jb
push
adc
cs
int3
push
mov
jmp
add
loopne
imul
adc
das
nop
pop
lods
sbb
call
insw
adc
mov
push
jecxz
dec
xchg
push
mov
xchg
xor
adc
cmpl
jo
cmp
jg
cmp
pop
mov
rorl
mov
ret
fimuls
push
test
leave
dec
sbb
mov
mov
stos
shl
daa
mov
xchg
das
or
sbb
repnz
aad
jno
mov
lds
insb
mov
pop
lods
lahf
cmpsl
xchg
push
cmp
or
jmp
iret
loopne
leave
popf
xor
adc
sarl
xchg
lds
popf
cmp
in
push
sub
push
inc
std
ret
mov
imul
adc
pop
xchg
jae
xchg
xor
mov
push
pop
xchg
rcrl
ret
test
cmp
mov
fsubl
jno
bswap
sub
sub
or
sti
sbb
xchg
xor
lret
test
xchg
cmp
sahf
and
sub
sub
arpl
cmp
lea
mov
jle
loope
push
xchg
mov
mov
pop
xchg
iret
and
cs
cmc
sbb
lret
cmp
xchg
fcmovnb
out
repnz
xchg
std
jmp
or
scas
mov
sub
insl
push
std
jmp
and
sbbl
test
pop
test
sub
aam
inc
jmp
mulb
pop
sti
lods
in
inc
jmp
fidivrl
push
jmp
sub
xchg
fldt
loopne
movl
add
mov
fistpl
cmovle
cs
fstps
cmp
sub
push
in
cmp
aad
sar
es
imul
out
xchg
push
cmc
cltd
cltd
es
leave
arpl
fwait
push
push
mov
cmc
cs
ret
push
les
sub
jae
jmp
sub
push
mov
aaa
cs
xchg
mov
mov
xchg
imul
imul
test
xchg
mov
inc
lds
jo
or
cmpl
xor
xor
mov
dec
and
jge
adc
cltd
rclb
mov
xor
and
jbe
repz
push
adc
and
adc
or
fadd
mov
test
push
and
movsl
cmp
sub
stos
loope
fldt
xor
xchg
inc
aaa
cmc
cmpsl
lea
and
xchg
mov
iret
mov
cmp
outsb
out
fbld
adc
pop
xor
xchg
test
dec
int
sbb
clc
les
scas
or
out
inc
add
lds
sbb
filds
lret
out
mov
and
int
xchg
pop
loopne
and
shll
shll
imul
lcall
lret
fsubrl
test
pop
leave
xchg
lods
aad
test
out
vpsraw
mov
sarl
xchg
adc
scas
jnp
es
test
aaa
pop
int
in
xchg
mov
ret
lods
pop
subb
roll
xchg
pop
movsl
imulb
jmp
or
lods
push
jo
cmpsb
jmp
loope
cmc
push
test
add
jge
cmpsl
sbb
cmp
out
push
call
dec
cmc
stc
mov
lea
pop
push
loope
lds
movsl
ret
xorl
movsl
aaa
or
mov
in
es
movsl
cmc
sahf
iret
pop
ret
xchg
and
pop
es
xor
mov
add
shrl
shll
cs
jge
popf
jecxz
adc
adc
jae
push
dec
inc
or
andl
inc
stos
aad
xchg
sub
xlat
imul
cmp
and
into
int
iret
sbb
pop
mov
nop
faddl
in
test
ftst
testb
xchg
cmp
rorb
ret
fnsave
mov
or
mov
sbb
movsl
or
movsl
and
mov
mov
fstps
lahf
mov
lods
rcl
cmp
aam
mov
push
mov
push
sbb
lret
mov
stc
js
loopne
pop
mov
xchg
cld
mov
cmpsb
in
clc
add
std
xor
shll
iret
cmp
repz
xchg
mov
sub
push
or
inc
int
lock
shlb
ds
mov
cmpsl
ret
or
mov
sub
std
cs
pop
scas
jge
pop
ds
insb
pushf
mov
xor
out
js
pop
js
jecxz
testl
adcl
add
andb
popf
mov
jecxz
test
les
sub
cmpsl
xlat
dec
pusha
add
loop
jns
iret
inc
jne
iret
inc
cmpsl
sub
pop
pop
lret
loope
push
lahf
mov
or
stc
out
sub
clc
aas
mov
stc
in
or
ror
leave
cltd
leave
enter
mov
out
mov
push
mov
xchg
xchg
cmp
shlb
lock
sbb
cltd
lea
add
fldl2e
pop
shll
mov
lods
cmp
cmc
int
xchg
xlat
mov
xorl
xchg
cmpsl
push
xor
and
cltd
js
xchg
ds
xor
add
subl
sub
cmp
xlat
fildl
fildl
inc
mov
movsl
sub
cwtl
bound
ds
scas
jno
pop
push
jne
cmp
out
outsl
insl
cmp
clc
sub
xchg
into
js
andl
xor
and
sub
xor
mov
fmulp
ss
cmp
stc
popa
bound
lods
xchg
pop
sahf
pusha
cmp
lds
lods
add
loope
stc
and
jbe
arpl
pop
aad
mov
adc
ret
rcr
iret
out
push
movsl
xchg
cmp
leave
jmp
stos
pop
or
xor
adc
in
adc
iret
adc
lret
stos
scas
inc
popf
sbbl
jp
or
es
sbb
inc
into
push
in
jg
test
cld
jmp
mov
leave
xor
mov
cmp
test
mov
pop
and
shlb
xchg
push
mov
lahf
ret
mov
shl
jmp
popa
fcomps
scas
mov
imul
mov
cs
loop
mov
out
cli
stos
mov
in
push
push
adc
test
mov
xchg
jg,pn
mov
mov
pop
int
lahf
popf
cltd
push
fdivrl
rcll
sbb
loope
aaa
imul
push
jge
fcmovnbe
jmp
or
cltd
leave
or
test
push
fisttpll
xor
adc
xor
test
das
mov
dec
xor
iret
mov
and
pop
or
fs
enter
push
fiadds
jp
lds
push
mov
leave
dec
xlat
sub
mov
repnz
mov
xchg
rcr
cmp
ffreep
nop
cmp
mul
lods
aad
sub
in
testb
fstp
loop
rol
inc
xor
arpl
jns
or
test
mov
call
popl
iret
pop
sti
or
xchg
pop
in
mov
mov
cmp
and
sbb
or
lds
out
cmpsl
movsl
sbb
fwait
orl
loope
push
sub
pop
jge
mov
test
jecxz
add
shll
clc
in
cmc
pop
lea
xor
pop
push
repz
adc
pop
dec
lods
pop
out
or
xchg
pushl
sub
into
rorb
mov
popf
clc
push
xchg
test
stos
lret
aam
popf
in
sbbl
jns
shll
dec
cmp
push
je
imul
sub
lds
pop
stc
cmp
sub
xchg
mov
shll
stos
movsl
sub
cmp
shlb
inc
iret
xchg
dec
aad
les
pop
pop
adc
cmp
mov
popl
fwait
xchg
mov
and
mov
xchg
push
out
js
daa
in
xchg
mov
iret
sbb
add
mov
sub
icebp
pushf
iret
mov
add
out
lods
mov
aad
lahf
sbb
or
pop
or
xchg
pop
psubsw
stc
es
jmp
out
adc
subl
rolb
mov
std
shll
mov
aad
pop
in
mov
fsts
faddl
xchg
imul
aad
test
imul
ja
les
ret
pop
inc
sub
xchg
jmp
mov
cs
stc
pop
test
or
dec
adc
jmp
cwtl
fnsave
jmp
orl
lahf
into
lds
xchg
and
sub
dec
pop
xchg
icebp
out
dec
enter
xor
ss
leave
call
fistps
popf
out
push
cmpsl
mov
sub
push
xor
addr16
jle
or
xchg
mov
cwtl
cmpb
jg
adcb
fcoms
aad
stos
daa
push
icebp
sub
mov
test
mov
lea
mov
in
pop
scas
xlat
push
xchg
hlt
fimuls
aad
cmp
hlt
sub
jmp
mov
xlat
cmp
movsl
mov
jmp
add
jl
std
lods
cmp
jne
inc
loop
notl
add
fcmove
and
push
xchg
lcall
xor
adc
push
dec
jmp
mov
mov
mov
mov
pop
inc
das
mov
xchg
orb
iret
push
mov
and
test
push
jecxz
push
dec
fisttps
ljmp
sub
and
push
and
push
fwait
repz
or
test
icebp
ret
pop
popl
push
hlt
sub
sahf
lea
fisubrl
sub
call
in
rorl
out
aam
jmp
jmp
popl
xchg
outsl
lahf
mov
stc
xor
test
mov
aad
or
xchg
clc
test
jmp
xchg
test
loop
and
iret
out
lret
push
cmp
xchg
stos
push
lcall
int
mov
shrl
test
pop
cli
adc
cmpsl
sub
cltd
mov
stc
jecxz
jmp
lea
test
mov
mov
std
out
sub
iret
sbb
imul
jbe
xchg
xor
push
or
stos
dec
scas
cltd
daa
iret
es
out
test
jmp
insl
pop
nop
add
int3
mov
mov
out
sub
orl
sub
xchg
repz
mov
out
push
xchg
adc
xor
dec
iret
sbb
fld
arpl
mov
sub
cmp
dec
jmp
jmp
cwtl
hlt
sbb
sub
xchg
sub
mov
iret
fmuls
es
jno
dec
jmp
push
mov
rol
jae
and
in
pop
xor
pop
call
inc
leave
sub
xor
orb
mov
pop
fidivrs
mov
and
fldt
xchg
lea
lods
mov
add
sub
repz
nop
pop
add
fistl
adc
movsl
push
fstpl
cmp
fstps
rol
pop
popf
mov
test
push
and
xor
gs
fwait
rcll
jmp
xchg
xor
mov
imul
popl
loope
stos
or
xchg
test
jmp
lock
adc
and
fildl
shlb
cmp
and
and
adc
pop
lea
xchg
mov
call
lds
push
dec
ja
push
shll
add
push
and
pushf
clc
xor
popf
pop
das
jp
xchg
loop
orb
popf
loope
fcompl
scas
in
sbb
push
and
lret
insb
imul
int
movsl
xchg
aad
add
push
jecxz
subl
jb
scas
popf
stc
out
sti
iret
sbb
ret
mov
in
out
scas
test
gs
cmp
jl
mov
test
jbe
aad
in
cmp
in
std
leave
push
cmp
sub
flds
test
and
mov
addb
jle
push
out
xor
pcmpeqb
xchg
lds
mov
xor
cmpsl
hlt
jge
out
imul
fsubr
repnz
xchg
in
lret
xor
cmc
xchg
popf
mov
jecxz
in
rcrl
movsl
dec
mov
out
lock
sti
fcmovnbe
pop
sti
js
lret
mov
jecxz
ret
movsl
jge
in
xlat
scas
and
push
xor
or
sbb
cmc
int3
sarl
xorl
shrl
sub
lahf
sub
cmp
pop
in
aad
scas
mov
fwait
xchg
cmp
mov
adc
in
xchg
in
xor
js
and
push
sub
sbb
inc
popa
lods
jg
nop
and
push
lahf
mov
sub
shl
arpl
inc
icebp
inc
add
push
movsl
sti
loope
dec
and
inc
popl
xchg
cltd
lea
jo
fldt
jmp
inc
inc
jl
cmp
lock
push
mov
fsubs
mov
test
ds
test
lds
nop
push
popf
push
push
jmp
push
dec
cmp
dec
inc
mov
int
xchg
icebp
lret
loopne
jno
lahf
dec
out
sbb
adc
xchg
in
add
pop
jmp
orb
mov
cmp
sub
call
or
iret
cmp
fistl
movsl
lods
shrl
and
sbb
aad
xor
mov
dec
mov
adc
in
sbb
sbb
dec
xor
and
ss
repz
and
popa
jbe
int
frstor
imul
insb
iret
stos
sbb
out
stc
xor
mov
pusha
push
setno
inc
rep
mov
vpsubw
mov
xor
lea
lret
and
xor
mov
cmc
insl
test
fildll
sbb
sbbl
stos
sbb
adc
mov
and
push
fcomp
cmp
fisubs
push
mov
pop
lahf
in
pop
popf
setne
lods
insb
jge
shll
xchg
or
mov
in
sub
ja
ss
adc
push
mov
aad
pusha
sub
popa
lahf
nop
test
lods
int
roll
inc
mov
es
in
leave
cltd
addb
dec
stc
mov
loope
cmc
mov
xchg
mov
loope
aad
jl
bound
stos
xchg
adc
add
and
stos
xchg
lahf
popa
aam
outsb
call
sbb
push
xchg
in
shrl
fwait
push
shlb
int
int
leave
xor
cmp
hlt
mov
xchg
push
jmp
into
mov
jecxz
pop
out
rcl
jne
stc
push
daa
xlat
adc
fldl2t
sub
push
mov
stc
mov
cmp
aas
mov
sub
pop
jns
push
or
loopne
and
push
lahf
and
test
cs
jmp
or
fistpll
into
hlt
bound
mov
orl
out
movsl
or
sbb
aam
jmp
aad
mov
cmpsl
sbb
ret
adc
sbb
pop
xchg
and
ds
and
movsl
mov
addl
fnstcw
push
sub
xor
ret
mov
cltd
jecxz
imul
out
adc
leave
pusha
shrl
push
mov
push
and
stc
insb
mov
mov
lahf
popf
xchg
jno
xchg
vphadddq
rcll
jecxz
mov
in
das
movsl
faddl
cmp
bnd
add
sub
mov
aad
hlt
jns
in
lock
stc
fwait
jecxz
ret
add
test
pushf
mov
inc
movsl
jns
test
or
xchg
and
jne
filds
int
xchg
xor
pop
add
dec
push
cmp
pop
cmpsl
sub
hlt
out
aad
push
mov
or
xchg
mov
mov
lahf
int3
mov
out
test
push
test
pop
rcrb
and
jne
lds
xor
ret
or
add
scas
cmc
iret
lods
outsb
test
faddl
mov
shll
or
jae
cmpsl
sub
out
inc
gs
mov
sub
fidivrs
ja
cmp
cmpsl
mov
jne
cmp
xchg
pop
adc
mov
push
lea
in
adc
cmp
xchg
in
rolb
fldt
or
es
sub
movsb
jae
mov
mov
mov
cmp
and
push
xchg
jae
and
lds
pop
inc
sbb
and
scas
shl
fcmovne
xor
int
enter
imul
push
pop
xor
sub
push
loop
push
leave
xchg
and
mov
mov
es
lea
sbbl
jle
fcoms
popf
xchg
and
dec
outsl
mov
mov
and
pusha
mov
xchg
pop
cmpsl
xchg
push
or
mov
jmp
or
popf
jecxz
fildl
out
push
cmc
xor
leave
out
mov
fsubrl
cmpsl
out
xor
sbb
fcmovnbe
sbb
popf
sbb
pop
scas
xchg
sbb
jno
lret
mov
xchg
jmp
add
and
jg
fldcw
mov
sarl
int3
insl
jecxz
pop
xor
mov
mov
mov
icebp
mov
and
fstps
dec
and
stos
or
ljmp
es
enter
aas
cs
push
push
fwait
out
mov
fildll
or
out
stos
push
mov
std
xchg
fistpl
mov
adc
push
je
in
arpl
out
push
movsl
adc
mov
mov
push
adc
xchg
and
scas
loope
push
cmp
mov
jmp
jmp
cmp
or
dec
es
mov
scas
shlb
push
lds
scas
jecxz
xchg
vpmaddwd
mov
push
add
cmp
and
rcrl
and
test
xchg
arpl
fistpll
cmp
loopne
inc
add
pop
iret
cmp
js
sub
aam
xchg
mov
les
out
pop
out
aas
test
and
mov
sub
cld
jo
add
add
cmpsl
lret
xchg
sbb
aaa
push
in
xchg
lcall
mov
jmp
idivl
lea
adc
ret
adc
cmpsb
popa
es
xor
mov
xchg
pop
lea
mov
sub
jmp
ret
mov
iret
sbb
sbb
mov
leave
adc
push
hlt
mov
xchg
out
pop
or
xchg
and
mov
jae
icebp
xchg
xlat
enter
mov
out
sub
mov
lods
lea
mov
inc
push
loopne
rcr
xchg
inc
adcl
aaa
insl
cmpsl
loope
or
pop
in
xchg
and
test
lcall
roll
test
js
xchg
sar
mov
adc
xchg
fists
adc
popf
lock
lods
repz
push
adc
mov
mov
sub
cmp
stos
jg
in
mov
sub
scas
mov
shr
mov
pop
xlat
jecxz
fnstenv
lahf
sti
iret
insl
leave
clc
jno
mov
incl
enter
xchg
jecxz
sti
sbb
in
int3
daa
add
test
pop
mov
ds
cmpl
sbb
dec
inc
jo
mov
shrl
xorb
xor
mov
loopne
jno
sub
loop
jb
iret
test
mov
jnp,pn
inc
mov
popf
mov
mov
stos
push
in
add
shll
dec
jecxz,pn
mov
xchg
es
out
in
lods
pop
out
aas
lds
cwtl
xor
cmpl
sbb
lcall
mov
pop
mov
cwtl
dec
cwtl
es
dec
push
mov
mov
adc
push
mov
pop
fucom
popf
add
xchg
add
bound
xchg
xchg
mov
push
inc
pop
sub
leave
movsl
push
push
add
mov
in
andl
push
xlat
lds
sub
mov
leave
xchg
aad
sbb
in
ljmp
imul
in
std
movsl
scas
je
fistpll
lods
sub
fwait
cmpsl
fld
xchg
xchg
or
pop
loope
call
ljmp
scas
jmp
and
lahf
js
call
mov
fisubrs
out
push
stos
ret
jbe
in
loope
imul
and
andl
lahf
mov
push
sub
adc
in
imul
inc
pop
lahf
jbe
lock
mov
or
cmc
es
stc
and
push
aad
popf
lods
and
out
scas
aad
test
imul
lahf
rcll
xchg
sub
insl
pop
xchg
mov
sbb
rcr
fisttps
outsb
push
arpl
sub
aad
fwait
cltd
xor
inc
ret
cs
sub
out
fists
aas
mov
pop
xchg
cmc
flds
mov
inc
stos
lock
std
jecxz
adc
es
xlat
fisubrl
cmpsl
paddusw
movsl
test
and
mov
mov
jno
lea
outsb
mov
out
mov
sub
scas
pop
in
inc
and
mov
sub
loopne
imulb
icebp
adc
test
mov
loope
int
and
insb
jae
cmpb
jae
insl
fdivs
aas
sub
in
and
pop
push
shll
rsm
frstor
stos
int
clc
push
out
aam
ds
pop
lds
sub
orb
in
test
xor
or
cmp
imul
mov
sub
es
into
inc
fwait
cmc
aas
jne
push
popf
pop
sti
cmp
jbe
dec
or
xor
and
inc
movsl
lcall
and
and
cmp
stc
in
lahf
adc
ret
sub
push
fcmovnb
int3
jmp
push
imul
jecxz
cmp
push
aad
cmp
xchg
push
mov
or
jb
cmpl
test
jecxz
sub
or
xchg
cmp
push
jg
aas
lds
xor
shll
pusha
inc
aad
or
mov
lock
sub
inc
jnp
mov
add
stc
xor
cltd
filds
mov
lret
mov
cmp
hlt
popa
ja
fmuls
mov
stos
lods
std
imul
hlt
sahf
insl
roll
int
rol
subb
in
ja
lods
insl
jl
in
mov
test
enter
mov
fldenv
inc
lock
mov
inc
lods
mov
jnp
lds
inc
mov
aad
fcompl
dec
out
movsl
daa
xchg
fsts
mov
test
push
cmp
notb
mov
lods
mov
lcall
call
dec
pop
dec
xchg
int
cld
aad
test
push
dec
xchg
ja
xchg
mov
xchg
lahf
pop
mov
xchg
ss
or
xchg
jmp
sub
xor
mov
lods
sub
mov
movsl
in
sub
xchg
jmp
ja
xor
scas
lds
in
test
jmp
repnz
adcb
mov
movsl
mov
in
sahf
pop
cmp
fnstenv
insb
sub
add
xor
xor
lahf
movsl
fwait
lods
scas
cltd
leave
pop
and
or
xchg
aad
out
dec
add
jg
mov
cmp
fstl
inc
inc
iret
loopne
jne
stos
mov
mov
push
sub
sub
clc
fcmovnb
mov
pop
out
movsl
das
add
push
or
sub
sub
jmp
call
in
fwait
popa
jmp
stos
scas
sub
sub
loope
mov
aad
insl
cmp
lods
divb
xchg
mov
test
sbbl
mov
iret
sub
rolb
push
jae
sub
cmpsl
ret
enter
mov
leave
cmp
dec
inc
cmp
and
pushl
mov
jno
xchg
jmp
sub
test
adc
xlat
cmpsl
pop
pop
mov
aas
push
loope
and
mov
fwait
shrl
jl
cmp
sub
inc
test
int
roll
jecxz
out
xor
lea
stc
leave
aad
fisttpll
enter
inc
xchg
das
orl
push
xchg
stc
mov
push
pushl
add
in
xchg
das
insl
stos
stc
lods
sbb
and
jmp
aaa
vmovapd
aad
iret
loope
xchg
shrl
icebp
sbb
cmp
lahf
aaa
pop
mov
add
and
mov
insb
cmp
aam
xchg
mov
inc
leave
bts
mov
in
xlat
cmpl
jmp
fwait
mov
mov
shr
fs
nop
add
push
ja
subl
repnz
iret
cmp
or
fistps
rorb
mov
push
or
jecxz
test
xchg
mov
dec
ffree
out
jae
in
out
pushf
test
jmp
popf
dec
xchg
jecxz
pop
out
in
imul
in
adc
mov
inc
cltd
rorb
cmp
stc
ljmp
js
adc
cmp
and
push
sti
fstpt
fldcw
lahf
xchg
rorb
jmp
lea
aad
mov
xor
jno
pop
cmp
fdivrl
xchg
aad
mov
cld
inc
in
aaa
test
xchg
cmp
fcmovnu
rcl
leave
jge
leave
test
clc
xchg
cltd
fists
movsl
in
ds
fisubl
and
xor
xchg
xor
inc
and
inc
pop
xor
inc
jmp
out
or
mov
sub
enter
shll
lea
xlat
sbb
hlt
nop
mov
stc
leave
xchg
dec
fwait
xor
jmp
in
cld
and
and
xchg
sub
mov
out
sbb
in
mov
xlat
int
repz
in
fiaddl
jae
add
jmp
sub
fbstp
mov
divb
out
rcll
push
mov
dec
pop
scas
cmp
add
mov
sarl
push
cmp
ljmp
jnp
rol
hlt
push
movsl
fnsave
insl
stos
leave
out
insb
dec
int
add
xchg
ffreep
test
dec
adc
mov
hlt
xorb
ret
cmp
cmpsl
and
fcmovb
xor
aas
aaa
fstpl
add
and
and
popf
lahf
jg
jmp
push
popa
movl
aad
in
test
lcall
stc
fucomip
lds
fdivl
lahf
popf
int
test
out
jno
ja
mov
lret
xor
push
mul
sbb
in
mov
cmp
hlt
sarb
imul
adcb
add
aaa
mov
mov
fld
jae
mov
es
or
leave
stos
xchg
sbb
add
shrl
mov
call
fucom
sub
lea
jl
fs
in
stos
shl
pop
hlt
inc
mov
iret
mov
xchg
stos
pop
xor
inc
push
jne
dec
in
ret
or
add
xlat
and
test
test
adc
fistpl
xchg
popf
or
mov
fwait
out
aad
and
aad
stos
sbb
popf
ror
xchg
nop
in
pop
je
sub
int
popf
stc
subl
int3
cmp
add
mov
jecxz
xor
sub
in
in
out
shl
xchg
daa
xor
lea
cmp
mov
mov
xor
push
lods
mov
ljmp
insl
xor
push
aam
sbbl
xchg
pusha
jmp
mov
pop
int
cltd
inc
popa
test
pop
mov
inc
sub
inc
ret
fnsave
fldl
xlat
in
pop
or
and
sbb
loop
cli
push
add
mov
jmp
nop
and
cmp
mov
fwait
mov
das
mov
in
push
cmp
test
in
lods
cltd
fwait
push
add
cwtl
or
lods
fisubrs
movntps
iret
sbb
xor
imul
jp
pop
and
jo
out
test
incl
outsl
cltd
mov
cmp
sub
xor
in
add
cs
iret
or
cs
mov
mov
ljmp
jmp
xchg
fucomi
loope
xor
push
sbb
mov
mov
and
sahf
aaa
subb
aad
and
xor
jmp
push
mov
pop
or
cltd
lret
mov
fwait
push
fnsave
pop
sub
in
int
sub
mov
leave
ret
in
cmpb
leave
fcmovb
fstpt
jb
clc
xor
test
mov
push
addr16
imul
pop
fucom
aaa
out
lods
loope
std
jmp
inc
stc
mov
bt
stos
lods
cmp
xor
push
jae
jae
jmp
or
loope
lahf
mov
in
sahf
orb
into
shr
cltd
pop
and
lea
mov
add
in
mov
push
mov
xchg
dec
inc
dec
push
addps
mov
mov
test
or
jo
mov
out
xchg
dec
mov
shrl
push
sub
add
inc
fildll
and
cmp
jecxz
and
mov
xchg
sbb
pop
outsl
cmp
scas
push
icebp
stos
pop
sub
xchg
sub
xchg
sbb
rcll
and
fninit
out
adc
jmp
int
mov
loope
mov
aas
fsts
ret
iret
fs
push
int3
sub
fwait
cmp
mov
mov
pushl
push
and
adc
lahf
sarb
stc
push
decl
int
ret
push
shrl
sub
into
sub
jne
mov
loopne
pop
test
push
jns
push
in
add
jmp
sub
lret
out
cltd
out
inc
enter
imul
imul
sti
push
and
mov
fisttpl
adcb
movsl
fwait
pop
push
dec
cmp
lahf
xchg
aaa
lea
mov
popl
popf
mov
push
test
jle
call
lds
scas
and
repnz
cmp
aam
jns
sarl
xchg
sub
adc
test
xor
lods
sub
sbb
fstpl
imul
sub
cltd
pop
jb,pt
test
mov
out
mov
jmp
xchg
ja
cltd
imul
xchg
stc
push
dec
loope
std
subl
mov
pop
cltd
xchg
push
je
rorl
imul
fcomps
cmp
push
lds
icebp
and
movsb
popa
mov
pop
js
mov
mov
jne
es
je
shr
xlat
ret
sbb
in
repz
pop
stos
xorl
out
stos
cltd
mov
mov
pop
push
in
pop
in
out
cltd
je
clc
aas
ret
push
mov
and
ss
mov
lea
add
mov
jmp
inc
jl
xor
shlb
cwtl
inc
sub
and
jno
and
adc
mov
sub
pop
stc
fstpt
loop
popf
pop
and
in
in
adc
fstpl
pop
leave
push
icebp
mov
jmp
pop
nop
and
or
dec
xor
js
lea
and
xchg
std
cmp
pop
and
cmpsl
mov
jno
pop
xchg
lret
pop
add
and
push
int3
xchg
imul
xchg
adc
push
call
test
add
xchg
jb
and
jg
out
sub
xchg
sub
xlat
xchg
fwait
pusha
lds
test
in
fmull
mov
movsl
out
test
sbb
sub
popf
mov
mov
adcb
popf
rcl
loope
fucomip
stc
xchg
adc
mov
shrb
stos
cwtl
jns
push
js
cmpsb
adc
add
add
mov
lods
iret
mov
push
push
pushf
dec
insb
mov
jmp
adcb
jne
fstps
pop
insb
outsb
mov
es
xchg
xchg
jne
or
mov
push
sbb
inc
lahf
pop
adc
add
in
adc
mov
lahf
inc
pusha
lods
lcall
adc
test
xor
enter
test
stc
addr16
jge
int
cld
pop
add
cs
popf
lahf
ds
insb
jmp
lds
loope
fistps
test
sbb
sbbb
lahf
cwtl
mov
sbb
pusha
arpl
xchg
sbb
leave
xor
filds
in
stos
cmp
jno
mov
das
mov
aam
test
sub
dec
mov
pop
cmp
jo
fisttpll
mov
andl
addl
loopne
data16
ds
mov
mov
and
in
in
pop
gs
cltd
popf
push
lods
stc
jecxz
enter
inc
sub
fistps
addr16
lods
or
pop
aas
push
mov
mov
xchg
mov
loope
shrl
pusha
ds
mov
jmp
mov
push
fwait
ret
jae
cmp
stos
cmpsl
pop
stc
sub
subl
popf
loope
sbb
sbb
test
and
xor
imul
js
mov
ss
push
mov
cwtl
xchg
stos
ljmp
and
out
cmpsl
xlat
scas
out
xchg
out
out
scas
cmpsl
aad
out
iret
sub
sbb
cmc
xor
stc
shll
push
and
pusha
out
adc
lods
ss
cltd
fistpll
sub
lahf
or
lea
mov
cs
aas
filds
lahf
call
in
rorb
xchg
daa
cmp
jecxz
out
mov
int
and
jecxz
push
rcr
iret
mov
xchg
jmp
scas
xor
sub
ret
push
jge
xor
lret
in
iret
stos
mov
subl
fwait
xor
into
lock
cmp
mov
dec
lret
add
fisttpl
pop
aad
jmp
lcall
mov
pop
and
ret
lods
pop
mov
xor
adc
popf
mov
jecxz
jbe
xor
inc
lret
loope
movsl
mov
jno
leave
cmp
cmp
dec
xor
mov
leave
sbb
out
cs
pop
mov
fldt
xchg
scas
clc
in
cs
sub
pop
cmp
aad
jb
popa
xlat
out
in
xor
jmp
loope
test
jmp
and
sub
lds
mov
fwait
dec
mov
mov
dec
xor
pop
jb
es
mov
and
cmp
add
mov
xor
in
movb
adc
mov
jns
nop
sbb
jmp
pop
sbb
sbb
xor
psrlq
lahf
leave
pop
fs
test
mov
js
lahf
loopne
aaa
fwait
ret
loope
xchg
stc
orl
xchg
lret
sub
vpsrlq
push
adc
les
cltd
sahf
mov
fsubr
scas
das
mov
loope
mov
lea
and
and
jge
nop
fistl
xor
test
aaa
stos
jmp
xchg
fistps
fildll
jnp
dec
nop
mov
mov
mov
jecxz
ret
lret
pop
jmp
cmp
sbb
push
adc
out
jns
scas
sub
stos
fcmovnu
xor
popa
xchg
xchg
in
xor
adc
movsl
stc
ret
ljmp
fcmove
xchg
cmpsl
cmp
and
adc
mov
pop
jg
push
leave
jmp
inc
cmp
scas
mov
push
pop
jecxz
ss
out
mov
sub
xchg
mov
fcmovnb
pushw
loopne
fmuls
out
xchg
stc
add
dec
jp
cld
xchg
jmp
xlat
xor
xchg
mov
lret
mov
loopne
mov
push
pop
out
arpl
pop
cs
jle
loopne
cmpsb
mov
sub
mov
sub
in
iret
rorl
and
cmp
fsubrl
popa
insb
aas
mov
ss
popf
sub
popf
mov
ret
sub
fistl
popa
inc
iret
aam
scas
lds
xchg
cs
jge
outsb
shrl
mov
fidivs
dec
sub
shrb
out
mov
sub
ljmp
mov
lea
gs
stc
mov
rorl
jle
jmp
mov
adc
sub
cmp
test
es
out
icebp
push
mul
sub
out
mov
dec
fldl
in
es
lret
push
xchg
xor
in
add
stos
mov
xchg
out
test
stc
aam
dec
mov
mov
sub
cmp
fnstsw
sahf
aad
or
cmpsl
xchg
mov
xchg
lret
inc
cmp
or
xchg
lods
add
andb
jecxz
mov
cltd
fisubl
lods
mov
xchg
and
add
std
and
push
imul
sub
mov
fwait
push
pop
mov
xor
movsl
adc
int
or
xchg
fwait
test
cmp
push
sbbb
imul
jne
movsl
fstl
xchg
mov
adc
lahf
pop
daa
test
mov
pop
dec
push
adc
pop
hlt
mov
cltd
filds
negl
sub
sbb
dec
push
loopne
sbb
sbb
or
dec
xchg
mov
xor
std
xor
dec
rcrl
mov
or
leave
mov
mov
lods
fildll
out
mov
cmpsl
and
int
loope
mov
rorb
mov
lods
sahf
js
cmp
les
imul
in
testl
push
in
xchg
or
mov
orl
cwtl
je
pop
jo
rcrl
shll
dec
cmp
xchg
fwait
sub
mov
and
xor
movsb
in
fnstcw
inc
das
iret
add
subl
ss
xor
in
xchg
cmp
jmp
cli
insb
pop
xor
cmp
repz
xlat
and
cmp
aad
fnstenv
cmp
rcr
les
push
test
mov
xor
outsb
stc
cmp
out
adc
and
lds
jmp
imul
xchg
loope
adc
pop
push
mov
shll
arpl
and
inc
xor
jae
jecxz
pop
loope
iret
or
test
mov
add
push
xchg
popf
mov
filds
leave
outsb
sbb
pop
xchg
sbb
hlt
mov
int3
or
xor
out
loopne
add
lods
cmp
mov
push
ljmp
insb
scas
xchg
es
add
test
cmp
test
fstps
add
pop
add
insl
mov
popf
les
pushl
inc
hlt
psubusw
clc
xor
cs
je,pn
sub
inc
mov
cmp
fistpl
jne
loop
fucom
test
sbb
int3
popa
iret
and
hlt
and
cmp
and
lret
repz
subl
shlb
ret
jne
sub
mov
xchg
add
ja
outsb
cmpsl
adc
cltd
lock
and
xchg
and
loope
das
nop
inc
cmp
popf
push
cmp
xor
loopne
loopne
lods
jg
jmp
add
inc
stc
push
clc
mov
in
xchg
lock
sbb
test
and
ret
sub
cmp
rcr
int
stos
push
mov
in
push
lock
xchg
mov
jne
scas
fcom
pop
out
in
aam
pxor
cs
ljmp
test
mov
out
pop
or
xchg
cs
dec
push
movsbl
jmp
cmp
fistl
mov
movsl
dec
ret
mov
sbb
mov
js
xchg
dec
in
aad
lods
call
in
cmpsl
cmpb
int
push
sub
jne
scas
xchg
and
lock
out
out
pop
pop
addr16
in
imul
mov
cltd
and
and
dec
ret
fucomi
dec
clc
sbb
mov
fstps
xchg
rcrl
ja
xor
les
imul
xchg
xchg
push
xor
xchg
dec
add
and
imul
xorl
lret
lods
popa
stos
sub
jb
and
movsl
mov
test
xchg
lock
add
adc
xor
out
pop
fcmovb
fwait
adc
movsb
ret
aas
and
dec
lahf
fildl
inc
cmp
lods
andl
pop
loop
das
sub
sub
iret
mov
das
inc
mov
and
push
adc
cmpsl
push
in
pop
loopne
imul
jbe
jmp
push
les
cmc
shr
cmc
mov
rcl
aaa
xchg
iret
cmpsl
scas
mov
in
mov
sub
or
jae
shrb
arpl
pop
cmpl
cmp
jecxz
scas
insb
and
or
out
gs
xor
sbb
js
loope
jnp
sub
mov
movsl
xor
lret
cs
lret
popl
push
push
lods
cltd
daa
pop
or
xchg
pop
movsl
clc
sarl
hlt
fsubs
xchg
repnz
cmp
xchg
push
cmp
dec
in
loope
stc
mov
cmp
and
mov
out
xchg
leave
mov
add
lret
shr
mov
fcmovnbe
mov
sbb
adc
mov
push
push
sar
lahf
pop
xchg
sub
std
mov
adc
into
dec
sbb
out
cmc
pop
xchg
std
stos
and
shlb
xor
in
flds
xor
arpl
add
jmp
notb
xchg
cltd
sub
leave
shlb
xchg
insl
mov
ja
insb
orl
in
or
mov
push
xlat
xchg
mov
xchg
mov
sub
shr
pop
loope
subl
jmp
fwait
cltd
inc
cmp
inc
inc
mov
sbb
outsb
ljmp
insl
push
clc
inc
and
sbb
nop
pop
mov
fxam
leave
rorb
jo
add
jge
das
popa
nop
sbb
mov
mov
and
jmp
pop
mov
inc
mov
leave
pusha
sbb
sub
cmp
call
pop
mov
xchg
add
fidivs
subb
lret
jno
pop
subl
cmp
test
push
test
fdivs
test
xor
pop
iret
jmp
imul
sbb
outsb
movsl
aas
mov
push
xchg
sbb
jmp
insl
xchg
dec
sub
jecxz
int
or
cmp
test
shrl
fnstcw
xchg
xor
cltd
xchg
popf
or
int
pop
push
imul
push
sbb
inc
imul
xlat
sub
lea
add
andl
or
xchg
xor
repnz
jecxz
cmc
ret
fwait
icebp
out
add
push
movsl
sbb
xchg
enter
mov
aad
iret
dec
xorb
cs
test
sbb
jmp
rdtsc
cmp
xchg
imul
mov
sbb
and
sbb
or
fsts
add
loop
mov
push
mov
cbtw
add
push
int3
push
push
adc
sbb
cmp
or
xchg
lahf
fwait
jmp
xor
inc
mov
lock
mov
push
aas
push
fwait
lahf
jle
lods
arpl
popa
aad
mov
push
or
popf
dec
int3
daa
xor
out
xorb
push
lahf
in
fwait
aad
mov
lock
xchg
out
push
mov
lods
sub
mov
loope
dec
int
out
fcmovne
fwait
loopne
adc
xchg
mov
sbb
dec
jne
push
in
xor
popf
jmp
std
lock
ficompl
iret
dec
popa
jecxz
sbb
lahf
xchg
mov
sub
cmp
rcl
loopne
sub
out
into
add
mov
cltd
popf
cs
test
js
sub
sbbl
js
lds
std
scas
jg
dec
jecxz
fistps
cs
fbstp
aas
aam
popf
jmp
imul
or
dec
xor
lret
stos
xorl
pop
in
xchg
aad
andl
flds
dec
cmpsb
in
jecxz
pop
xchg
call
rorl
dec
xchg
loope
popf
aad
scas
mov
mov
stc
cmp
push
cs
add
mov
iret
xor
cmp
mov
add
xor
sbb
and
mov
fstps
cmp
mov
imul
jmp
sub
test
std
rorl
lods
lret
test
les
sbb
scas
mov
lds
pop
xchg
cmpsl
lods
out
outsl
jmp
shrl
sarl
aas
cmpsl
stc
push
xchg
jl
int3
ret
adc
push
stos
cmp
mov
in
test
scas
lea
mov
fmul
int
iret
imul
push
xchg
imul
and
or
mov
push
es
sub
in
add
push
sbb
jnp
ds
fcomip
adc
das
xchg
test
xor
mov
fxch
scas
xor
imul
stos
notb
daa
push
in
out
jle
test
fdiv
popl
cmp
shrl
ret
shrl
adc
jmp
sub
mov
mov
jne
shll
mov
je
xchg
in
inc
xchg
lds
dec
mov
or
push
cmp
jbe
out
addb
test
sbbl
loope
lret
mov
test
xchg
xchg
in
imul
push
adc
lds
out
sub
mov
enter
subl
pusha
test
sbb
add
lods
mov
dec
mov
lret
iret
jp
xchg
fimull
leave
loope
pop
push
daa
jecxz
les
fwait
lea
mov
mov
out
and
sbb
xchg
pop
pause
int3
lret
sub
in
sbb
div
movsl
fisttpl
mov
lock
cmp
stc
imul
pop
lds
in
push
mov
aam
std
mov
add
fwait
outsb
adcb
push
sub
aad
ja
pop
jne
leave
popa
int
dec
mov
dec
repnz
mov
push
and
jge
xor
loopne
push
int3
aam
xchg
test
in
add
fldl
adc
dec
dec
in
fisttpl
mov
pushf
leave
cmc
lods
loope
test
jge
movsl
mov
iret
mov
cmp
stc
sbb
fisubl
in
inc
subb
push
xchg
int
out
pusha
xor
mov
scas
lret
pop
push
lds
mov
sbb
test
xchg
mov
scas
jns
fcoms
add
cmp
mov
stc
and
sbb
imul
cmp
jmp
jl
in
sub
cwtl
xchg
push
cmpsl
jl
lods
lock
bound
sub
or
cmp
push
sbb
push
push
incl
stos
sbb
loope
cmp
mov
push
xor
cltd
leave
mov
xchg
sbbl
stc
lret
push
xor
sub
mov
mov
xor
or
stos
jecxz
jnp
lds
push
jno
mov
stos
fistps
push
inc
xchg
inc
or
sub
jecxz
mov
stc
adcb
mov
mov
cmp
insb
lea
orl
push
je
enter
mov
movsl
aas
bound
and
xchg
loope
adcl
roll
jmp
mov
in
xorl
movsl
popf
das
and
sbb
jp
pusha
cli
dec
lea
int
lods
sub
pushf
adc
sbb
cli
mov
incl
cli
inc
test
fbld
fwait
orb
in
push
mov
xchg
and
dec
fistl
xchg
push
adc
mov
out
js
mov
mov
icebp
lods
sub
leave
xor
and
xchg
nop
bound
pop
lcall
pop
sub
loope
sub
fildl
sub
ss
aam
push
subl
cltd
mov
cwtl
stos
add
push
jne
xlat
cmp
rorl
out
add
stos
test
dec
mov
js
xor
mov
rcrl
xchg
lea
popa
out
cwtl
mov
imul
mov
add
vpshlw
in
frstor
fcmovnb
rcll
cmp
mov
xchg
mov
mov
fildll
popf
cmp
mov
out
shll
adc
cs
testl
jmp
leave
jno
inc
push
lea
loope
bound
or
sub
add
icebp
and
movsl
xchg
fwait
cmc
rorl
xchg
int3
xchg
aad
dec
imul
popa
xor
sbb
or
aad
lret
cmpsl
popf
push
test
iret
push
xlat
clc
stos
popl
inc
pop
jmp
jecxz
fmull
daa
ror
in
xor
dec
movsl
mov
cwtl
cs
fwait
pop
sbbb
lds
and
cld
push
mov
mov
add
cmp
ret
sub
imul
popf
sub
inc
add
std
cltd
mov
sbb
and
int3
ds
in
mov
dec
and
mov
nop
mov
fildll
arpl
push
or
dec
popa
pushaw
js
aam
jmp
shrl
adc
iret
xchg
sub
cmp
jecxz
mov
push
fimuls
cli
or
cltd
push
inc
popf
mov
aad
fstps
cltd
cltd
or
jecxz
imul
and
pop
test
lahf
lods
xlat
cmp
mov
and
gs
aas
int
call
cs
popf
fistps
lret
frstor
or
sahf
ja
mov
test
test
out
and
popa
cmp
enter
mov
add
nop
fcoms
aas
insb
mov
in
jge
iret
mov
ret
mov
sarl
jecxz
mov
mov
push
sub
xchg
mov
dec
sti
cld
dec
jmp
hlt
xchg
mov
popf
lds
cltd
and
lea
loope
imul
mov
mov
mov
push
add
aad
fnstcw
cmpsl
xchg
sti
sbb
xlat
fistl
inc
lret
mov
loope
shlb
popl
aad
push
pusha
push
xchg
cmpsl
leave
push
or
xchg
mov
push
mov
test
stos
xor
adc
mov
es
mov
ret
sbb
ret
imul
add
mov
pop
insb
stos
sub
lret
fs
mov
sub
xchg
xor
push
mov
mov
and
and
fmul
leave
out
sub
lcall
ret
dec
adc
data16
imul
nop
dec
mov
and
pop
jne
in
and
sbb
jns
jmp
mov
in
dec
sbb
or
ficoms
fbld
in
cmpsb
dec
out
xchg
xchg
jmp
pop
cmp
xchg
and
mov
loope
dec
mov
fisttpll
imul
dec
stc
aad
xorl
aaa
sub
xor
fcmovnu
loope
repz
incl
adc
stc
xor
mov
mov
shr
movsl
dec
push
ja
test
aad
cmp
sub
xchg
fsubrl
fsubl
mov
fnstcw
stos
add
lret
test
je
xchg
lahf
ret
mov
popf
sub
aaa
lret
fildl
rcrl
aaa
and
and
fsub
xchg
faddp
push
cltd
sub
cmp
xor
pop
arpl
cltd
xor
int3
xor
cmc
dec
and
push
lods
mov
shl
mov
ss
stc
and
push
and
insl
and
push
out
inc
xorb
int
xlat
sbb
dec
jmp
repnz
pop
outsb
push
fcompl
inc
pop
shll
insb
std
inc
mov
and
pop
xchg
push
mov
push
in
icebp
loop
adcb
shl
jmp
cmpsb
xchg
in
lds
cs
cmp
fcmove
repz
mov
out
inc
cmp
sub
rcrb
sub
lods
mov
xchg
popf
pushf
shrl
in
mov
xchg
pop
adc
aad
xor
sub
sub
jecxz
xlat
aad
lahf
stc
push
sarb
enter
lods
popf
test
fbstp
sbb
jb
in
mov
popf
in
ret
cmc
inc
ret
cwtd
mov
xor
iret
and
sbb
xor
adc
cmpsb
cmp
adc
test
mov
fstps
aam
sbb
test
and
imul
cmpb
and
ljmp
lods
inc
arpl
out
ja
inc
mov
orl
cmp
stc
cltd
sub
shrl
xor
mov
testb
fstpt
ja
enter
inc
mov
xchg
sub
stc
xchg
or
in
cmc
jge
sub
test
mov
lahf
xor
stos
in
insl
inc
pop
test
cs
cmp
and
sub
shl
aam
out
test
test
and
es
aad
test
mov
sub
push
mov
push
xchg
into
aad
and
mov
sbb
xchg
xchg
push
cwtl
repnz
xchg
orl
das
jmp
sbb
pop
popf
xlat
loope
add
leave
cmp
test
mov
mov
daa
cltd
cmpsl
pusha
daa
push
addl
das
popf
cmp
sbb
test
aas
mov
jge
mov
data16
or
cmp
pusha
iret
es
rcl
lock
imul
lods
sub
jmp
and
push
jo
jge
mov
movsl
sub
pop
jmp
cmp
xchg
rcrl
jo
and
pop
pop
cwtl
cltd
data16
sbb
es
mov
mov
add
scas
xchg
popf
sub
es
lret
and
xlat
mov
jecxz
sub
iret
test
xchg
adc
lahf
sub
movsl
xchg
dec
dec
cmpsl
and
fcom
movaps
loope
or
cltd
push
cmc
and
cmp
cs
fcmovb
mov
sarl
adcb
incl
lods
scas
xlat
ds
mov
lret
mov
cmp
iret
aas
arpl
jno
and
rcll
popf
mov
lahf
clc
sub
fwait
es
sub
and
pushf
leave
ret
xchg
or
inc
cmpsl
adcb
inc
cmp
pop
shll
jne
sub
mov
aad
and
sub
fwait
lods
out
xchg
mov
xchg
dec
in
ja
sbb
jmp
add
mov
xor
mov
or
xchg
sub
loope
std
mov
cmp
roll
lods
push
sbb
stos
lock
mov
adc
or
lds
icebp
xor
aaa
cmp
mov
dec
jge
fnsave
xchg
iret
jmp
sub
dec
or
test
int
sub
inc
xchg
and
ror
mov
repz
addl
cmp
xor
push
arpl
iret
xchg
stc
push
daa
call
sub
adc
or
pop
sub
xor
dec
push
adc
dec
and
int3
icebp
and
in
mov
pop
jecxz
jne
shll
push
test
stos
outsl
mov
loope
mov
lods
xor
fimull
add
stos
push
mov
lcall
dec
add
fnstsw
pop
movsb
cmp
push
jno
repz
sbb
addl
mov
push
aaa
nop
xlat
rcl
fwait
lcall
or
jmp
imul
clc
stos
out
mov
lahf
lret
sbb
push
xchg
sub
popf
sub
sub
fidivrl
add
mov
cmp
aad
jae
leave
out
lods
andb
cmc
cmpsl
xchg
movaps
pushf
lret
lock
and
xchg
scas
jmp
icebp
cmp
fistl
ljmp
dec
ds
add
roll
xchg
insl
test
mov
out
call
or
adc
lahf
mov
and
sbb
pop
lcall
imul
iret
mov
scas
or
fbstp
aad
out
mov
push
mov
call
jmp
leave
jl
iret
lret
sub
jno
fwait
pop
mov
aad
popf
xchg
or
and
mov
xor
xor
movsl
xor
cmp
enter
inc
or
jb
fwait
orl
jae
mov
insb
es
shrl
add
insl
out
pop
out
mov
xchg
add
mov
jecxz
and
loop
not
aad
mov
mov
cmp
sbb
cmpsl
fldt
movsl
pop
jcxz
in
in
mov
ss
adc
pop
mov
add
mov
pop
sub
xchg
fldcw
dec
xor
fistpll
test
mov
cmc
and
jge
lret
mov
push
mov
outsl
jno
lods
push
icebp
lea
je
imul
mov
mov
cmp
popf
lret
sub
sub
mov
cmp
lds
fucom
data16
sub
or
jecxz
xchg
push
mov
cmp
test
dec
shll
xor
lret
test
ljmp
push
jmp
and
pushf
xor
sbb
xor
pop
and
stos
mov
push
xor
fisttpll
lods
jmp
hlt
in
imul
pop
inc
loope
jb
int
mov
cld
xor
adc
fisttps
push
fists
jl
cltd
subl
mov
ret
xchg
leave
sbb
xchg
je
rcl
mov
lods
lahf
mov
mov
call
in
lret
jne
cltd
ja
in
fstps
call
lret
mov
cmpsl
popf
xchg
push
in
push
scas
pushf
leave
xchg
js
mov
in
lock
cltd
loopne
inc
iret
out
shlb
pop
cs
in
or
repnz
ficomps
and
iret
decl
in
cmp
sub
leave
into
dec
insb
clc
in
ror
lahf
cmp
mov
sub
ret
mov
inc
aas
or
push
xchg
insb
shrb
jmp
icebp
jno
mov
pop
rolb
add
aad
mov
fsubl
or
lret
loop
jne
jb
cwtl
cltd
mov
xor
scas
fwait
nop
insb
nop
lock
rcrl
xlat
add
adc
pop
or
repz
popw
sbbl
jmp
push
push
jne
int3
cmpsl
fdivr
sbb
std
lahf
imul
dec
pusha
or
iret
loope
cmp
dec
ljmp
leave
incb
cmpsb
adc
inc
test
xor
mov
push
lods
shlb
ss
pop
pop
sbb
sbb
sbb
cmp
mov
cmc
inc
fistl
mov
in
out
fmull
es
stc
daa
cmpsl
jb
jae
xchg
adc
loopne
stc
shll
xchg
xchg
dec
jmp
mov
mov
mov
adc
push
out
cmp
xlat
in
es
out
pop
xchg
lret
jne
lods
enter
xchg
jl
adc
mov
stos
iret
icebp
loopne
pop
xchg
xchg
leave
jmp
shl
aad
or
hlt
sub
pop
imul
lahf
loope
rclb
test
les
test
dec
lds
divb
sbb
sbb
mov
sub
xchg
and
sbb
dec
ficomps
dec
imul
stos
mov
mov
cmp
push
filds
sbb
test
push
pop
scas
lea
mov
mov
cltd
and
cmp
push
cmp
sub
xor
std
mov
sbb
sbb
sahf
inc
insb
mov
sub
ljmp
aaa
ds
jecxz
xor
sahf
dec
sarl
jne
xchg
movsl
cs
hlt
test
decl
ss
popf
sub
popf
shrl
adc
in
test
lds
jae
jbe
out
mov
xor
push
or
adc
dec
xchg
jg
and
jno
lret
loop
lock
cltd
and
mov
and
jnp
xorb
dec
test
or
fldl
jmp
mov
out
daa
xor
fwait
mov
and
shr
jb
jp
es
loopne
in
lea
jbe
lret
push
sahf
jecxz
cmpsl
and
in
stos
icebp
push
or
lock
nop
aad
cwtl
mov
test
xchg
push
fld
jne
sub
mov
mov
mov
enter
dec
pop
pop
and
cmp
stc
ret
js
fistpl
and
adcb
and
ror
cltd
mov
jmp
mov
mov
xor
movsl
cmp
jmp
aaa
adc
mov
in
cmp
repz
popa
sub
aam
loope
flds
or
add
sub
jo
pop
mov
lret
lea
ja
scas
push
jne
xor
cld
cltd
leave
test
xchg
mov
es
lahf
inc
push
movsl
aad
stc
nop
jmp
lock
lret
lahf
js
push
loope
xchg
xchg
out
cmp
mov
mov
int
stos
aaa
push
sub
lahf
rorl
enter
lahf
cs
in
mov
rcr
out
int3
jecxz
lcall
in
cltd
les
mov
xchg
rcl
movsl
stos
sbb
shl
std
scas
ljmp
add
lcall
cld
and
inc
push
lret
iret
mov
cld
mov
or
addb
jge
repz
mov
dec
adc
lahf
in
test
fwait
and
fldenv
jge
lcall
stc
fisttpll
sahf
loope
cmp
ss
inc
rcrl
loopne
pop
and
aam
and
xchg
or
sub
and
jne
stc
jae
mov
inc
cwtl
add
xchg
xor
pop
roll
mov
cmp
lret
scas
xchg
clc
andl
push
xchg
mov
mov
and
int
sahf
rcl
je
gs
pmulhw
and
mov
jne
push
cs
and
xchg
mov
ret
daa
jno
repnz
lret
jne
sub
mov
sbb
dec
sbb
dec
int3
leave
aas
sbb
sub
sub
insb
or
push
xor
jecxz
jl
cmc
lret
lods
mov
in
ret
das
ret
shrl
orl
mov
cld
lea
xchg
jb
testl
xchg
mov
or
out
xlat
js
movsl
out
cmp
pop
and
out
and
jne
popa
lahf
js
mov
dec
cmp
out
jg
mov
sti
push
mov
test
nop
push
out
fdivrl
and
sub
mov
mov
xchg
rcll
test
fsubrl
lock
test
mov
add
scas
cmp
clc
push
test
rorb
test
stc
adc
in
mov
in
mov
mov
popa
repz
jmp
insl
cmp
iret
leave
sub
loope
mov
or
xchg
mov
mov
sub
bound
movsl
xor
mov
fcomp
jbe
sbb
movsb
push
mov
pushl
jae
pusha
popf
mov
xchg
mov
lahf
xor
sub
xchg
ss
mov
mov
mov
mov
sbb
pop
mov
loop
pop
das
mov
in
sub
clc
mov
test
out
push
mov
xchg
out
pop
loope
sbb
push
repz
or
lahf
sarl
mov
daa
mov
push
popf
lds
lods
clc
jnp
xchg
sub
push
andb
push
int
scas
push
andl
iret
cmp
popa
cmpl
lods
dec
adc
mov
fnstcw
outsl
push
sbb
stc
xchg
loope
sub
gs
xchg
push
cmp
scas
lods
pushf
int
sub
lds
push
aad
lahf
stc
jnp
mov
mov
enter
ret
loop
cmc
push
and
push
test
mov
mov
xchg
fwait
testb
cs
orl
loope
or
stc
mov
das
sbb
popl
jmp
fwait
stos
popa
jmp
popa
sub
pop
in
and
adc
roll
xchg
and
fisttpl
addl
out
mov
inc
add
stc
test
jbe
cmp
add
iret
pop
rorl
out
int
xchg
hlt
dec
mov
jbe
movsl
lds
movsl
mov
and
pop
mov
into
fcmove
popf
cmpsl
cmp
aad
sub
adc
xor
sbb
xor
lret
daa
sbb
adc
xchg
mov
shrb
adcb
and
std
out
inc
xor
fnsave
pop
lret
cwtl
movsl
xor
xchg
and
in
dec
cmp
loope
xchg
jmp
mov
fwait
mov
add
inc
lods
and
jne
roll
call
mov
test
xchg
shl
fcmovu
push
js
fcmovne
stc
sub
cmp
jmp
dec
mov
fidivs
mulb
fstpl
fwait
cmc
popf
jecxz
inc
pop
loopne
nop
addb
xlat
xlat
clc
lods
fnstsw
shll
cmc
mov
xchg
test
in
add
xor
shl
scas
inc
test
and
cmp
xor
mov
imul
sub
sbb
pop
out
ret
push
add
iret
xchg
stc
aad
sub
lret
test
imulb
or
lret
xor
mov
xchg
call
jns
xor
aas
pop
xchg
xchg
push
insl
mov
cmp
jge
xchg
enter
or
lahf
xor
fsts
push
stos
fnstcw
and
add
jb
xor
lods
inc
inc
test
and
rcl
push
out
pop
and
push
lea
push
mov
mov
sbb
sahf
ror
stc
cli
inc
loop
push
imul
fstps
insb
cmpsl
out
and
inc
mov
mov
lret
push
cmpsl
cmpsb
jns
test
mov
dec
lods
mov
cmpsl
ret
lea
dec
test
lds
mov
cmpsb
or
ret
mov
mov
fs
xor
adc
push
imul
mov
pop
in
push
in
mov
cld
jns
jge
cmp
sarl
icebp
test
add
add
les
jbe
push
in
in
loop
scas
mov
mov
int
cmp
pop
out
leave
rorb
xchg
cmpsl
cltd
movsl
negl
sbb
aaa
pop
fists
sub
ficoml
jno
jmp
cli
xor
call
ret
mov
jae
sbb
sub
sub
push
stc
leave
mov
cmp
sti
loope
cmp
lahf
test
dec
fadds
fsts
cmpsl
xchg
sub
and
sbb
lock
or
mov
inc
lea
push
das
movsl
aam
inc
mov
lods
stc
push
imul
test
lods
xchg
push
push
xchg
test
mov
popa
mov
push
and
fstl
popa
cmp
out
fstl
and
daa
shrl
sbb
xor
push
popa
insl
sbb
test
adc
mov
pop
out
mov
lds
and
mov
subl
push
or
test
out
shrb
into
pusha
test
mov
mov
test
rcll
sbb
aad
sbb
xor
enter
and
js
inc
adcl
mov
fildl
cmp
xchg
icebp
fbstp
jb
cltd
jge
and
cmpsl
xchg
sbb
add
mov
test
push
fwait
pop
subb
aam
leave
mov
test
ljmp
pop
in
jno
loope
push
lods
and
xor
iret
fildll
xlat
mov
loope
aad
int
xchg
pop
in
cltd
cmp
xlat
xchg
iret
sbb
mov
xchg
fcomip
or
cmp
int3
dec
mov
adc
and
jg
jle
mov
sub
movsl
in
add
mov
es
sbb
lcall
movsl
aaa
loope
es
fldl
hlt
icebp
popf
add
dec
pusha
daa
push
xchg
adc
popf
and
lret
dec
daa
xchg
in
add
mov
loope
sub
or
test
ret
iret
xchg
scas
or
jmp
fs
pushf
lret
inc
cs
dec
inc
aad
lret
xchg
test
xchg
popa
iret
test
ja
push
shl
push
test
daa
mov
jbe
frstor
xchg
loope
out
fwait
imul
sub
addr16
cmpsl
jo
loopne
mov
and
bound
push
push
sub
mov
pop
ja
cmp
mulb
sahf
cmpsl
int
cli
stc
orl
push
popf
dec
clc
pop
fmuls
fisubrl
js
and
test
add
mov
lret
test
mov
and
xchg
xchg
cwtl
lods
xor
fists
push
sbb
jle
jmp
in
xor
xchg
jp
hlt
cs
std
insl
addl
in
cs
test
mov
test
leave
addb
jns
pop
int
aaa
inc
sub
out
pop
test
and
int
or
cmp
ds
rclb
sub
fdivrl
mov
ret
cmp
lret
sarl
inc
pop
dec
sbb
lods
mov
test
pop
out
repz
and
and
cmp
push
push
mov
cmp
fs
mov
fxch
enter
jle
mov
loopne
lock
in
sub
cmp
fwait
movsl
fcmovnu
mov
push
dec
cltd
stos
mov
mov
sub
push
push
iret
sarl
leave
jne
jecxz
cmp
push
cmc
push
lret
jmp
inc
ljmp
pop
out
aad
imul
dec
mov
sub
mov
fldt
daa
adc
fwait
and
xor
aaa
clc
in
push
or
xor
subl
popf
lods
stc
pop
jae
mov
lods
js
jp
ja
sub
loope
or
xchg
mov
lsl
and
push
cmp
xchg
ffreep
stc
jecxz
cltd
fistl
mov
sub
dec
jbe
push
scas
sub
adc
stos
cmp
jg
ret
rorb
add
add
inc
in
inc
cmpsl
fisubrs
or
test
cltd
jmp
mov
xor
das
mov
repz
ret
int3
lahf
in
sub
xchg
ja
rclb
cs
fiadds
sub
mov
sbb
jae
popf
lret
icebp
test
stc
notb
fldl
stos
jmp
in
jecxz
push
andl
mov
fstpt
nop
add
nop
cmc
sbb
js
ja
rorl
stos
adc
sbb
cltd
ror
push
std
clc
mov
lock
sub
in
sub
sbb
mov
cmp
jmp
fwait
mov
or
ret
int
mov
fwait
push
cmp
mov
fsubs
inc
test
cwtl
dec
mov
out
mov
out
es
js
aas
xchg
and
or
sub
popf
sbb
inc
push
fyl2xp1
mov
out
std
push
lock
shll
lds
lret
int
adc
in
rorl
popf
xchg
iret
pop
loope
jb
xchg
cmp
daa
add
cmp
cmpsl
pusha
jge
repz
push
adc
test
jmp
movsb
pop
cmp
cld
fistl
xor
dec
scas
or
loopne
loop
mov
mov
push
cmp
mov
stos
and
xchg
es
inc
mov
in
lahf
test
jge
scas
f2xm1
sub
and
popa
pop
add
xchg
jecxz
push
int
std
pop
shr
iret
hlt
orl
rcll
dec
and
imul
test
int
les
xor
xchg
loop
cltd
adc
push
jecxz
repnz
fwait
sub
adc
cmp
and
jne
fildll
xor
xchg
dec
ror
lock
mov
sbb
aas
push
inc
add
adc
inc
xchg
loopne
jle
jl
cmp
fildll
out
mov
cmp
lods
sbbl
inc
loope,pn
ja
arpl
xlat
popf
testl
filds
cmp
xchg
or
decl
xchg
lahf
js
fistpl
les
add
stc
frstor
cmp
cmc
lods
cmp
cmp
in
ret
xor
int
mov
rorl
mov
cmp
shlb
xchg
pop
movsb
lahf
mov
test
pop
pop
and
lds
sbbb
sbb
out
sbb
jmp
xor
icebp
push
loopne
sub
jecxz
jmp
dec
xlat
orb
sbb
out
add
xchg
pop
cmp
out
and
push
lret
mov
mov
mov
jb
push
mov
mov
sub
jbe
mov
repnz
pop
in
insb
lods
ss
xchg
fwait
pop
mov
pop
shrl
cmp
pop
add
sub
lcall
fs
fstp
inc
xlat
out
in
jb
in
mov
nop
mov
shll
jo
jge
popf
frstor
test
in
lods
movsl
jp
rcll
cmp
aas
xchg
loope
nop
cmp
lods
lea
and
cmpsl
cmp
popf
cltd
and
std
subl
in
jnp
xlat
push
enter
in
cmp
push
sub
or
sub
dec
mov
lds
popl
sbbl
imul
mov
fldcw
gs
xlat
jmp
fldcw
movsl
inc
test
imul
xor
iret
pop
out
cli
xchg
daa
push
mov
xchg
pop
add
aad
movsb
fcomps
cltd
test
popf
pop
mov
movsl
cmp
cs
cmp
sbbl
add
and
daa
scas
push
and
dec
jns
mov
adc
iret
pop
lahf
add
ret
das
sbbb
imul
mov
push
test
stos
mov
pop
fwait
andb
jmp
push
xchg
les
push
pop
xchg
xlat
or
aad
out
mov
xor
push
jg
xor
xchg
test
dec
repnz
xchg
in
push
out
jl
sbb
filds
popf
call
es
cmpsl
out
inc
loope
iret
movsl
sub
or
flds
mov
jp
mov
mov
cmp
and
jbe
sub
or
int
and
test
sub
mov
mov
xchg
shll
sub
inc
outsb
pushf
in
insl
shl
xchg
jmp
mov
dec
shrl
sbb
leave
in
jne
in
jne
sub
mov
imul
das
scas
push
das
jmp
cmc
adc
call
inc
xchg
cmp
movsb
mov
add
in
cmp
int3
jge
cmp
in
leave
fmulp
push
cmc
mov
xchg
ret
or
lods
push
cs
lahf
cmp
movsl
xchg
dec
test
sbbl
pop
mov
or
cmpsl
ret
xor
cmp
adc
orl
stos
or
aad
pop
push
cmpsl
cltd
push
std
lret
mov
xor
adc
mov
cwtl
and
stc
or
push
leave
movsl
mov
subl
pop
mov
push
pop
gs
lds
push
push
iret
xchg
in
sbb
or
out
movsb
loope
jge
push
aad
sbbb
mov
pushf
and
or
shll
in
inc
and
sbb
push
aas
cmp
xchg
cmp
sbb
sbb
loopne
loope
loope
or
mov
in
ss
leave
ret
or
imul
ja
push
rcrl
adc
cltd
fists
stc
and
mov
or
xlat
cmc
sub
addl
roll
aad
pop
adc
mov
filds
test
jg
xchg
sbb
pop
jp
clc
mov
xchg
out
in
jne
scas
repz
xchg
xlat
je
test
sub
out
jmp
jb
pop
scas
in
rorl
mov
enter
or
inc
pop
mov
adc
pop
rcrl
loope
imul
and
sub
andb
fstpt
xchg
shrl
test
fldcw
add
js
xchg
cmpsl
int
xchg
pop
repnz
pop
jge
xlat
adc
pop
cmc
loop
pop
cmp
cs
inc
in
sub
dec
inc
imul
rcl
dec
sub
iret
popf
xor
test
cmp
push
xchg
xchg
aad
bound
sub
js
sub
mov
ret
add
push
xchg
or
out
push
cmp
lods
ret
aaa
pop
xchg
jmp
sub
mov
lret
shrl
mov
out
or
lret
lods
and
mov
ss
push
push
xchg
ret
lret
mov
push
leave
pop
add
loope
sbb
xor
fstpt
test
mov
jecxz
test
cmp
sti
adcb
xchg
cld
pop
xchg
aad
and
sbb
sub
out
xor
leave
fs
iret
inc
mov
mov
sub
lret
cmc
jecxz
ret
xchg
inc
aad
xor
mov
sub
lret
mov
call
es
insl
ljmp
xor
test
mov
jb
lods
hlt
movsb
hlt
cmpsb
bound
cmp
jecxz
movsl
lahf
popf
iret
jmp
inc
mov
cmp
fldt
pop
inc
bound
hlt
rorl
in
in
imul
arpl
cmp
orb
pop
mov
sub
in
xchg
or
cmp
mov
lret
lods
sub
nop
adc
rcll
call
sub
adc
loope
mov
xchg
cs
dec
hlt
test
flds
decl
pop
mov
lret
std
pop
xorl
mov
test
ja
rcll
mov
xchg
jmp
push
jno
push
ret
fwait
inc
stc
fldt
lahf
scas
aam
xor
inc
in
xor
lret
int
sub
aam
lahf
fisttpl
out
lock
and
daa
push
js,pn
xchg
repnz
sti
int
push
mov
mov
mov
add
cmp
or
adc
pop
push
adc
sbb
sbb
or
mov
icebp
and
into
stos
push
lahf
adc
adc
or
xchg
scas
pop
adc
sbb
movl
cmp
cli
shl
roll
add
cmpsl
lahf
icebp
push
sub
xlat
mov
les
cmp
xor
aas
stos
push
test
rcl
jo
jecxz
sarl
out
gs
jg
test
cltd
pop
jmp
sub
inc
aad
into
int
jne
adc
roll
and
cs
xor
adc
or
je
fisubrl
packuswb
xlat
incl
inc
push
popa
sub
enter
xchg
aad
loope
jno
lea
mov
sub
ja
xchg
sbbl
jmp
jge
lock
test
fsubs
and
scas
and
or
stc
xchg
and
and
sahf
sub
movsl
cmp
es
push
int
adc
imulb
iret
out
add
sub
movsl
int
rcr
mov
stc
vpandn
mov
ljmp
add
lea
lret
cltd
int3
decl
call
sbb
jmp
test
adc
jmp
sbbb
sbb
daa
stos
scas
lahf
call
in
cmp
idivl
adc
insb
push
icebp
pop
inc
xor
mov
push
mov
lret
aas
ret
cs
sub
daa
int
pop
dec
imul
fwait
aad
pop
mov
stos
fldpi
in
or
fs
xlat
push
rcrb
js
fwait
xor
in
call
popf
insb
in
insl
xlat
cmp
popf
jno
sub
imul
inc
xchg
dec
test
jmp
or
rcll
pop
cwtl
daa
xchg
cmp
cs
sub
push
or
push
rcl
imul
sub
popf
xlat
jmp
sub
frstor
cmc
fiadds
jmp
int3
aaa
sahf
xlat
int
fnstenv
enter
scas
aam
pop
and
loop
xchg
mov
iret
sarl
loope
negb
inc
std
and
xor
ret
jge
fstl
cmp
hlt
out
adc
rorl
adc
test
rorl
int3
popf
jecxz
push
out
fcoml
mov
test
cltd
inc
ja
int
mov
xchg
jecxz
xchg
lea
or
sbb
add
mov
cld
sbb
ds
aad
cld
rorl
test
or
xchg
mov
xor
xor
fistps
scas
sbb
insb
in
dec
nop
jne
cmpsl
stc
lahf
cmc
mov
jle
out
inc
iret
jmp
pushf
popf
ja
fistpl
jmp
ljmp
aad
sub
aam
lea
cs
sbb
sub
sarb
aaa
dec
test
cltd
cmp
shll
test
cmc
add
sbb
pop
out
xchg
or
sub
mov
test
subl
out
cmpsb
and
out
sub
bnd
movsb
add
aad
and
jecxz
in
mov
xor
ja
icebp
popf
sahf
cmp
sbb
test
popf
xchg
lahf
dec
sahf
pop
add
fmull
jnp
aad
cltd
inc
xor
cmp
iret
jnp
xchg
push
into
sub
push
das
popf
mov
cmp
std
mov
or
iret
and
mov
xchg
mov
lods
outsb
pop
fidivs
add
pop
mov
sbb
mov
mov
cmp
jecxz
test
stc
popf
js
mov
cmp
inc
inc
pop
movl
jge
mov
adcb
ja
mov
iret
lock
std
fwait
add
mov
mov
in
mov
mov
gs
imul
icebp
mov
push
sub
lods
stc
sub
jno
lahf
stc
fstl
repnz
dec
arpl
leave
test
adc
lods
mov
cld
addb
orb
inc
lea
daa
lea
in
data16
shll
ljmp
out
mov
in
xor
ror
test
fstpl
cmc
and
xchg
xor
xchg
movsl
mov
popf
jecxz
sbb
shl
and
mov
popa
mov
or
cli
lock
push
daa
dec
pushw
scas
sub
cs
fistps
mov
test
lea
jmp
in
sub
loope
iret
cmpsl
xor
cmp
incl
jl
push
arpl
mov
mov
aaa
xchg
mov
loope
lea
sub
sub
sbb
jl
lods
pushf
lods
jo
popa
test
dec
and
or
and
jecxz
fucomi
pop
stos
andl
sub
inc
cmp
ljmp
xchg
add
test
std
movsb
fwait
push
cmpsb
lret
cmpsb
lea
int3
lds
in
push
stos
lahf
int
addb
subl
lahf
xor
pop
int
bound
jmp
out
mov
movsl
jecxz
test
fstpl
inc
xchg
or
xor
lds
inc
xlat
dec
xor
test
in
mov
mov
sub
push
sub
pushf
int3
daa
cmc
nop
cmp
aad
pop
mov
in
inc
jmp
adc
insb
pop
and
in
sahf
lds
xchg
in
ljmp
jmp
popa
lods
aad
and
and
int3
dec
cmp
adcb
or
sbbl
cmp
fwait
jmp
outsb
loope
sub
pop
scas
adc
iret
lds
xchg
inc
mov
rolb
xchg
mov
cmp
adc
mov
lahf
xchg
sub
xor
fadd
push
push
imul
push
mov
mov
mov
stc
xchg
cmp
xchg
sti
stos
jb
fnstcw
ljmp
mov
insb
xlat
mov
cmp
out
mov
xor
cs
xorb
jns
loop
in
jp
shrd
cmpsl
mov
pop
cltd
aam
lock
jle
and
sub
pushf
mov
loope
push
cmp
notl
push
sub
test
inc
push
mov
jecxz
cmp
aam
fwait
sub
jo
insl
cltd
jae,pn
sbbb
test
loopne
xor
sbb
popf
jmp
pop
mov
or
jmp
inc
cmc
stos
jecxz
jecxz
imul
or
lds
fists
xlat
jmp
cmp
sti
jb
movsl
sbb
cmpb
mov
cmp
notl
sbb
cmp
lds
mov
jl
addr16
cmp
cmpsl
sbbb
cmp
flds
das
lock
mov
ficoml
fsub
dec
cmp
ret
cld
int
cmc
cltd
xchg
sbb
push
mov
ss
push
aad
icebp
jge
loope
fwait
jmp
cltd
ljmp
cmpsb
loopne
sahf
inc
mov
scas
lods
and
out
mov
or
enter
lea
fwait
dec
push
cli
cmpsb
dec
call
int
in
xchg
fnstcw
js
in
and
shll
xor
scas
dec
mov
mov
sbb
lods
dec
or
fcoms
or
xor
push
jecxz
loop
mov
sbb
ljmp
sbb
mov
sub
stos
fwait
jmp
adc
mov
xchg
cwtl
push
or
push
and
test
push
aad
loope
jae
aas
pop
shl
scas
adc
xor
out
jmp
mov
xchg
add
fnstcw
loope
jecxz
xor
mov
mov
cmp
mov
jne
test
out
insl
cmp
fwait
dec
dec
mov
mov
adc
cs
sbb
test
and
jb
rcr
lret
cwtl
pop
roll
vhsubpd
call
xor
sub
xlat
in
or
leave
mov
pop
add
mov
in
scas
jnp
cmp
jne
xchg
sti
cs
or
jae
test
xchg
and
sub
xchg
stc
mov
lret
stos
jmp
cmp
mov
insb
ror
ja
pop
cltd
mov
lods
cmp
sub
or
frstor
js
xchg
stc
cmp
mov
enter
test
lods
dec
aaa
fstpt
xor
pop
mov
and
dec
sti
pop
sahf
xchg
sbb
jne
out
leave
sbb
lret
push
xor
cmp
sub
fldenv
enter
pop
fwait
out
cli
out
jecxz
adcb
adcl
addr16
lcall
pop
mov
fcmove
or
in
aad
dec
pushf
inc
lds
rcll
jecxz
xlat
xchg
popf
iret
jno
jmp
mov
lea
xor
test
xor
sub
adc
lret
leave
jmp
dec
rcll
inc
xchg
mov
jecxz
xchg
mov
cmp
popf
sub
pop
fldt
lds
icebp
decl
cltd
stos
mov
sbb
subb
or
push
fsubrl
subl
rcll
das
inc
xchg
cmp
or
xchg
pushf
and
out
mov
stos
lret
scas
sbb
call
stc
popf
filds
and
js
mov
imul
cltd
pop
mov
rorl
mov
push
mov
popa
lret
imul
jne
popa
xchg
and
sub
pusha
nop
imul
push
pop
dec
inc
dec
outsl
jne
shll
inc
test
iret
add
call
xchg
or
and
xor
leave
mov
lods
lds
and
push
sub
cmp
mov
cs
mov
stos
cmp
or
jp
and
inc
stc
xchg
mov
leave
push
pop
jb
sbb
lretw
cmc
testb
push
add
cs
xchg
sub
insb
orl
orb
lahf
fnsave
mov
sub
pop
lods
lahf
cmp
imul
mov
mov
std
inc
repz
inc
xchg
and
xchg
cmc
pop
ret
ficompl
add
jnp
or
shr
stc
fistpl
dec
lea
xchg
test
shlb
mov
xchg
aam
scas
bound
xchg
scas
int
loope
pop
sarl
xlat
test
fstp
and
xor
lods
test
aad
dec
test
das
mov
cmp
xlat
movl
jg
lahf
inc
push
out
rolb
ja
mov
aas
xchg
fdivr
jbe
pop
aad
or
out
jecxz
cs
jne
js
es
stos
mov
xlat
mov
sbb
cmpsl
lods
int3
in
cmp
lret
push
pop
lea
leave
fldcw
scas
push
add
jne
out
loope
test
mov
xor
xlat
and
loope
add
and
mov
pop
test
enter
shrb
shrl
sti
lahf
mov
sub
iret
cltd
sbb
insl
ret
push
fbld
fcomi
inc
mov
iret
je
xchg
repnz
mov
aaa
pop
dec
or
xchg
enter
adc
cltd
jns
xorb
inc
in
in
jge
jecxz
jecxz
add
movsl
mov
es
iret
sub
rolb
movl
add
out
jmp
cmc
push
loope
push
cmp
in
xor
cltd
movsl
xchg
leave
cs
in
mov
lea
jno
xor
sub
orl
cmp
and
mov
shrl
ficoml
mov
sub
jno
fistl
mov
lds
in
shlb
mov
and
popw
scas
lods
fwait
jno
adc
xor
mov
loope
mov
cltd
in
leave
arpl
enter
shll
add
ljmp
leave
or
popf
lods
sbb
push
fists
jo
add
and
mov
scas
push
inc
int
or
sarl
mov
sub
inc
pop
jmp
cmpsl
add
jae
sub
setnp
js
sub
sub
aaa
stos
mov
sbb
or
sbb
jnp
imul
inc
xor
orl
and
jbe
ret
cmp
inc
cmp
loope
psubsw
cwtl
nop
fsts
insb
sbb
push
cmpsb
in
aam
out
xchg
pop
adc
mov
push
cwtl
mov
out
rolb
fmuls
es
test
sbb
fildl
in
fucomip
sti
add
test
mov
lods
add
addl
andb
and
and
daa
inc
stc
int
add
idivl
dec
negl
shrl
xchg
mov
fiadds
jecxz
xor
and
test
inc
and
push
sti
in
sbb
mov
movsl
lret
in
sub
cltd
ret
dec
mov
out
popf
sub
imul
add
mov
mov
pusha
xchg
or
iret
call
in
clc
inc
lret
xchg
in
cmp
jp
xchg
sub
jmp
aad
in
sub
test
aad
std
cmpsl
xor
adcl
jne
iret
fcmovu
fnstsw
push
mov
rcll
push
inc
xchg
fwait
mov
and
loope
in
cmp
fwait
je
cmp
xor
in
cmp
sbb
adc
data16
aad
cmpsl
jecxz
fwait
sbb
xor
sbb
xchg
and
and
mov
popa
sub
sub
aad
sarl
xor
push
mov
cmp
cmp
lods
pop
ss
ja
aad
jp
lods
sub
push
sarl
xchg
das
movsl
stc
iret
movsl
push
jecxz
mov
test
or
and
lret
sarl
test
sti
mov
pop
dec
or
popf
stc
vpsubb
sub
js
int
popf
aam
out
fucomp
roll
loope
ficoms
cmc
and
test
cs
xchg
fnsave
and
call
in
mov
fldcw
arpl
or
sbb
leave
and
fstpl
pop
mov
lods
cwtl
mov
or
xchg
in
mov
xchg
stos
aad
xchg
es
lods
popf
into
cmp
dec
fistpll
jmp
push
stos
xlat
sub
sub
sub
roll
outsb
fwait
iret
stc
sub
mov
movsb
jno
xchg
jmp
cs
mov
cmp
out
stc
xor
popf
lods
cmp
lcall
jne
xlat
into
sub
and
testb
push
adc
scas
push
sbb
mov
mov
lahf
into
subl
js
loope
mov
cltd
sbb
jne
jge
lret
aad
fadd
xchg
popf
sahf
mov
or
sbb
xchg
jecxz
dec
jecxz
xchg
and
aas
and
xchg
fisttps
and
xchg
test
orb
adc
cmpb
push
movsl
sub
cld
push
or
in
push
lock
ret
inc
mov
mov
mov
imul
int3
es
jne
add
or
into
aaa
add
cltd
aam
jl
int3
sub
adc
pop
xchg
lahf
cltd
mov
add
stc
aad
mov
lds
dec
mov
mov
clc
mov
loope
sub
in
movsb
and
lea
js
xor
and
insb
jae
in
imul
mov
movsl
cltd
xor
cwtl
movsb
add
or
leave
les
ljmp
mov
adc
jne
xchg
fwait
stc
pop
xchg
cbtw
lret
aas
jle
sub
push
sub
mov
push
pop
or
pusha
dec
sbb
fwait
adc
push
loopne
popf
fbstp
mov
adc
mov
shlb
and
roll
pop
aad
cmp
xor
loope
sbb
pop
inc
repz
jae
fldpi
xor
enter
cld
cmc
mov
sarl
xchg
xchg
fcmovnu
sub
push
adc
xchg
jae
mov
out
lds
sub
adc
xor
insl
lahf
sbb
mov
cwtl
dec
xchg
cmpsl
lods
xlat
mov
sbb
fstpl
cmpsl
mov
jecxz
lods
and
lods
mov
sub
xchg
dec
dec
mulb
inc
out
aad
push
in
push
adc
test
mov
stc
mov
iret
in
xor
fs
insl
xlat
leave
lea
cltd
test
mov
lds
dec
mov
push
sahf
aad
dec
sbb
shll
aas
mov
cmpsl
mov
xchg
and
cmpsb
push
cmp
sbb
and
adc
scas
in
lahf
shlb
scas
stc
scas
xchg
mov
hlt
sub
add
mov
pop
int
fsubs
cs
imul
lods
mov
loope
mov
stos
in
aad
mov
fwait
xchg
sbb
mov
in
std
pop
cltd
xchg
sbb
cmp
jno
fs
xor
sbb
test
xor
pop
jo
push
xchg
clc
push
iret
mov
aad
xchg
sbb
pop
mov
je
ffree
jnp
xchg
pop
or
lahf
shrl
outsb
popf
scas
cmp
and
push
lret
into
fisubl
test
mov
outsb
in
or
mov
xor
test
mov
fwait
add
mov
shl
xchg
sbbb
mov
jmp
mov
shlb
popf
sub
int
int
sbbl
rcl
in
fcmove
add
push
push
cld
mov
int
and
push
push
arpl
xchg
mov
cmpsl
mov
fwait
jb
dec
sub
inc
push
notl
cmp
or
loop
idivl
in
mov
lea
jno
cmp
dec
sbb
lds
fbstp
jge
shr
pop
in
adc
nop
jmp
aam
pop
xlat
sub
xor
jg
cmp
push
inc
push
xchg
mov
clc
pushf
sub
fwait
imul
inc
lret
mov
fbld
aad
mov
popf
push
pushf
mov
jecxz
push
dec
movsl
cmp
push
iret
lods
rcll
scas
out
mov
xor
sar
rclb
mov
in
mov
in
push
fistps
rdmsr
jae
mov
xor
jno
in
sarl
out
push
dec
pop
daa
stc
and
fstpl
mov
fcomip
pop
mov
popf
call
fldenv
repnz
sarl
rcll
sub
imul
test
push
test
adc
cwtl
sbb
pushl
frstpm(287
frstor
cs
enter
stc
mov
stos
xlat
jmp
loop
or
outsb
lods
sbb
xchg
mov
xchg
and
iret
sub
jne
mov
icebp
pusha
fs
pop
jecxz
adc
mov
mov
lret
ds
nop
mov
imul
pop
mov
and
loopne
scas
in
jecxz
test
pop
fnstcw
pop
xor
sbb
movsl
push
fistpll
cmc
xor
mov
fst
xchg
xchg
test
fstps
pop
xor
outsl
test
enter
jb
push
push
sbb
sub
shll
sbb
je
sbb
iret
inc
xchg
adc
loope
xchg
mov
out
fwait
fwait
and
mov
mov
adc
mov
xor
jne
sub
mov
dec
jbe
jbe
or
mov
lds
rep
sub
ret
shl
popf
sub
adc
push
in
mov
cltd
ja
fwait
stc
movsl
sbb
flds
or
xlat
cltd
lods
cmp
mov
sub
leave
clc
or
jmp
cmp
lahf
adc
mov
fisubl
lea
mov
jne
jecxz
sub
in
inc
sbb
scas
cmpsl
or
sub
es
sub
xchg
fldenv
dec
mov
xchg
lods
popf
adcb
push
aam
dec
sub
sbb
sbb
test
adc
cmp
in
psubusw
dec
xchg
shlb
test
sub
js
cmp
and
fists
fsubrl
dec
stos
fst
imul
mov
sub
xchg
aad
and
inc
or
sub
in
fldpi
sub
pop
scas
pop
and
dec
idiv
push
andl
sub
add
mov
cmp
popf
xchg
adc
xchg
stc
lret
mov
mov
xchg
jne
andl
iret
rorl
mov
icebp
hlt
jno
test
xchg
inc
dec
pushf
sub
test
cmp
test
jbe
rcrb
jne
ret
cltd
xlat
in
mov
andl
xor
or
gs
gs
push
xchg
fadds
lds
lods
bound
in
js
inc
mov
add
mov
push
xor
arpl
lods
in
jg
adc
lret
stc
movsl
daa
sbb
xchg
xchg
daa
cltd
subl
rol
enter
inc
mov
sub
out
lret
mov
fwait
mov
xor
enter
pop
mov
out
and
add
mov
shrl
aas
push
fisubs
mov
xlat
and
arpl
sub
nop
push
stc
push
jmp
scas
stc
sbb
dec
fst
rolb
xchg
or
subl
jmp
lods
mov
sbb
mov
imul
aaa
fnstsw
push
lret
add
cmp
mov
test
sub
xor
movsl
push
mov
jecxz
xor
xchg
push
jle
push
xor
inc
stc
lahf
iret
add
cs
jge
xlat
add
pop
adc
or
repz
push
int3
add
test
mov
imul
rcrl
in
xor
aas
rclb
adc
test
das
in
push
xchg
ret
lret
mov
leave
lret
test
xor
mov
lods
popf
movsb
dec
mov
in
popf
dec
ret
fxtract
out
dec
shrl
mov
xchg
lods
xor
shlb
dec
cli
arpl
pop
or
xchg
jmp
scas
add
xor
jmp
pop
jne
and
idivl
jge
cmp
mov
test
mov
lods
mov
into
sub
fmul
shll
test
shrb
mov
stc
dec
sbb
cmp
insl
or
xchg
jno
mov
stc
rcll
or
push
mov
in
push
daa
shll
out
mov
std
jmp
sahf
test
fstl
mov
hlt
test
fidivrs
push
cmp
filds
inc
vmovsd
adc
loop
jle
es
cmp
xor
test
pop
mov
out
bound
and
xlat
test
add
inc
outsb
cs
inc
or
stos
mov
stos
divb
rorl
push
cmp
xor
xchg
in
inc
ffree
or
xchg
sub
test
stc
xchg
repz
das
push
imul
fndisi(8087
ret
popa
sub
fcmovbe
inc
imul
loopne
insl
fisttpl
sub
lahf
sub
int
sbb
fwait
test
inc
mov
cltd
shr
in
jmp
jmp
in
in
xchg
pop
jnp
jno
vpcmpgtd
jge
andl
loope
inc
je
xchg
lods
addb
inc
sbb
pop
loope
jecxz
push
fucom
test
xor
lahf
and
adc
sbb
fisttpl
or
jmp
insb
arpl
fneni(8087
add
adc
aam
pop
xchg
stos
cltd
orb
stc
xor
sub
xor
ret
fcoml
cmpsl
jge
mov
out
scas
std
add
in
or
mov
or
ss
movsl
hlt
mov
testb
push
fabs
push
pop
mov
clc
pop
fidivrs
lds
adc
ljmp
cmp
jp
cmp
fsubs
jecxz
int
cmp
test
pop
shrl
stos
mov
mov
adc
xchg
out
orl
jecxz
nop
jmp
clc
aam
shll
wrmsr
sub
xor
add
addl
xchg
lcall
fldt
pop
xchg
mov
std
out
in
mov
popf
lds
ret
adc
and
jnp
test
and
imul
lds
sbb
or
mov
fwait
aad
pop
addb
jmp
cmpsl
mov
out
lcall
loope,pn
dec
mov
cmp
jmp
dec
fnsave
pop
js
cmpsl
xchg
popa
ror
es
and
xor
test
flds
in
in
gs
and
out
dec
push
cmc
and
sti
jmp
cmp
mov
cmp
les
cmp
imul
xor
or
mov
popa
in
imul
pusha
or
xor
add
stos
lds
fistpll
mov
xchg
dec
popf
ret
fistpl
xchg
rorl
mov
cld
adc
cmc
and
es
aad
or
aas
orl
daa
out
inc
push
xchg
scas
mov
jmp
out
je
adc
in
add
and
lods
mov
push
sub
mov
fmulp
add
xchg
repnz
cmp
xchg
push
or
out
std
loope
xor
xor
lods
cs
jne
jle
test
jl
or
repnz
iret
shrl
in
and
mov
and
cmp
jge
xlat
push
loopne
imul
stos
data16
xchg
adcb
push
mov
lea
in
lods
leave
fstp
xchg
xchg
mov
or
or
inc
popf
iret
sub
mov
xchg
or
jns
call
cli
fcmovnu
or
subl
and
and
cmc
fisubrs
push
jmp
jns
xchg
lahf
test
pop
cltd
pop
or
dec
mov
iret
push
jecxz
loope
sahf
pop
and
lods
iret
sbb
mov
outsb
mov
ret
fisubs
incl
rcrl
jp
mov
ret
xlat
scas
mov
adc
cltd
in
sarl
push
adc
and
cld
xorb
mov
rorl
cltd
rcll
loope
xor
mov
dec
jecxz
sub
mov
fistpll
out
pop
loope
ror
rcl
and
out
pop
in
xchg
es
nop
push
arpl
mov
and
or
loope
dec
insl
test
jae
xchg
push
movsl
loopne
inc
adc
pop
sbb
mov
fcompl
cmp
icebp
jmp
mov
push
ds
rcr
dec
xor
fistpl
popf
jnp
adc
cmp
sub
mov
fwait
sbb
mov
mov
mov
movsl
mov
filds
mov
push
sbb
pop
notl
dec
bound
repnz
lret
movsb
icebp
push
movsl
test
xchg
or
rcl
fistpll
arpl
cmp
pop
jmp
mov
mov
mov
in
mov
jmp
out
push
ja
mov
test
add
lods
subb
into
adc
add
adc
pop
mov
push
lcall
and
jmp
push
mov
jmp
paddq
sub
aas
mov
in
cmpsl
pop
mov
push
mov
cmp
lock
and
mov
adc
sub
push
test
jge
je
xor
or
or
jmp
mov
pusha
sbb
out
inc
in
push
pop
in
andl
iret
popa
xchg
popa
pop
or
fildl
mov
sar
cmp
stos
push
das
cmp
mov
xor
insb
test
out
int
xlat
cmp
xor
xchg
scas
push
test
clc
iret
roll
lahf
out
xchg
lret
mov
mov
fxch
cltd
popf
jmp
push
hlt
cmpsl
and
fcoml
cltd
lret
sbb
je
call
push
mov
push
insl
bound
int
rol
fiadds
xor
sub
adcl
jne
xlat
jbe
es
cmpsl
xchg
popa
push
loope
arpl
rcrl
adc
and
mov
fwait
clc
cs
movsl
jmp
out
movsb
add
leave
inc
jmp
test
or
aad
jmp
mov
insb
xchg
xchg
cmc
jge
stc
popf
outsb
jecxz
mov
adc
imul
mov
mov
push
mov
sarl
lcall
iret
pop
pop
mov
push
xchg
iret
gs
out
or
xor
rcrb
jp,pn
xchg
lcall
lods
stc
sbb
adc
push
jecxz
jne
fbstp
lahf
push
pop
xchg
lea
stc
loope
mov
out
ret
or
fbstp
repz
rcrb
xor
lock
pop
xchg
fildl
xor
ret
ds
xlat
arpl
iret
loope
ja
rcll
stc
adc
popf
jmp
roll
cltd
or
push
pop
dec
push
hlt
clc
xchg
movsl
loope
push
rorl
adc
jmp
jmp
cltd
adc
fcmovne
iret
rolb
add
out
cmp
sarl
aas
lds
outsb
or
test
jmp
bound
adc
movsb
sub
sbbl
mov
testl
push
rcll
push
xchg
lock
fidivrs
xchg
sub
mov
cltd
in
or
sub
xchg
push
xor
or
xchg
sub
or
sbb
ficoms
iret
xchg
push
orb
mov
popa
sbbl
into
mov
and
push
jno
cs
aad
movsl
lahf
adc
push
push
aad
pop
jmp
sbb
popf
mov
or
jl
leave
xor
stos
cmp
repnz
in
fwait
jae
dec
push
faddl
jecxz
jb
mov
lahf
jne
cmp
mov
xchg
mov
fnsave
scas
sbb
mov
jbe
rcr
pop
mov
push
pop
add
andb
xor
fnsave
or
and
sub
adc
lock
lock
fidivs
fwait
sub
test
ljmp
lods
movsl
mov
cmp
or
and
jecxz
or
lock
sub
mov
sbb
es
aam
aad
fwait
popa
ret
test
popa
xchg
popa
add
jmp
pop
ljmp
fbld
xchg
clc
cmp
xchg
jne
in
pop
sarb
fsub
xchg
stc
std
test
sbbl
loope
or
push
imul
push
inc
negl
test
add
sub
mov
cmp
scas
push
xchg
adc
mov
test
cmp
fcmovnu
out
inc
aas
call
fmul
mov
jmp
sub
adc
cmpl
insl
fldl
movsl
movsb
in
js
sarb
pushf
js
ror
sbb
addl
dec
int3
lret
out
cmpb
aaa
xchg
ret
jmp
in
xchg
sub
pop
in
les
and
xor
sub
clc
lahf
fnstsw
jns
out
fabs
out
leave
pop
sbb
sub
sbb
xchg
fs
sbb
test
jns
adc
xchg
popf
aas
mov
cltd
int
int
and
loopne
fstpl
shll
mov
lcall
cmp
fwait
cmp
pop
in
fldl
mov
adc
fldt
mov
leave
jmp
cmpsl
test
sbb
sbb
dec
and
je
iret
mov
pop
xchg
mov
icebp
sarb
jmp
fbld
roll
add
testb
sbb
jno
cs
push
aad
aad
divl
cmp
addl
push
xchg
mov
loope
mov
lea
xchg
scas
roll
ret
push
sub
cmpl
xor
scas
add
jae
aaa
lea
sbb
and
cmp
dec
fst
mov
and
jns
pop
cs
cmp
mov
ja
dec
jge
loope
insl
and
xchg
mov
lods
inc
in
jae
shll
out
sbb
js
movsl
xor
jmp
push
fwait
push
cltd
and
test
xchg
ret
scas
jecxz
scas
or
sbbb
cmpsl
and
jno
cltd
les
popf
cmp
jae
lahf
es
adc
cmp
mov
and
and
mov
aad
adc
fmull
mulb
in
cmp
arpl
mov
and
xchg
cmp
fldcw
sub
mov
sbb
out
xchg
xchg
mov
push
outsb
or
leave
sub
mov
adcl
jb
adc
nop
scas
data16
push
in
clc
popf
jne
lods
sub
mov
cwtl
mov
imul
push
test
imul
stos
pop
aad
sbb
leave
cmp
and
jmp
lcall
flds
push
mov
push
out
mov
cmp
sbb
shr
xor
leave
dec
dec
cmp
sbb
pop
daa
in
fstl
xchg
in
lock
movsl
jmp
xlat
cs
and
xchg
mov
sub
arpl
inc
adc
repz
push
xlat
movsl
mov
loope
popf
cmpsl
aad
stos
pop
test
inc
ret
mov
xchg
aas
pop
sbb
das
add
mov
loope
jmp
or
xchg
lret
jne
mov
sub
sub
mov
mov
cmp
push
clc
mov
xchg
sub
and
faddl
enter
and
lds
pop
xlat
sbb
lret
in
into
out
cmpsl
and
sarb
pop
adcl
push
lods
jmp
aam
aaa
insl
lcall
mov
aad
imul
int
lahf
cmp
or
inc
cld
andb
rcll
jb
cmp
dec
clc
mov
stos
sub
sbb
cltd
xchg
popf
xchg
jge
fs
test
in
sub
sahf
jo
pop
mov
xchg
mov
test
movsl
push
int
aad
fisttpll
jo
loop
or
popl
jecxz
aad
in
pop
rcrl
mov
push
jle
push
out
lds
in
rcrl
xlat
enter
fsubrs
dec
in
jmp
in
mov
xchg
mov
out
push
rcrl
mov
inc
sub
test
int3
leave
xchg
filds
and
fisttpll
sbb
or
and
jg
fwait
test
stos
and
mov
jbe
pushf
fsubs
mov
jge
lret
out
les
sbb
jo
stc
sub
and
jno
mov
and
es
loope
sbb
movsl
mov
ret
and
fsts
inc
lods
and
in
inc
int
add
shrb
lret
ja
fwait
jecxz
add
lea
rcll
xlat
and
test
cmp
fcoms
in
mov
pop
push
adcl
lahf
cmp
out
cmp
test
fwait
stos
cmpl
mov
or
sbb
out
mov
jb
cli
push
jecxz
and
xlat
cmc
clc
fwait
sbb
lret
popf
ljmp
or
jmp
sub
pop
adc
lods
fists
mov
out
insl
jne
mov
frstor
pop
xor
lea
dec
orl
push
add
push
outsb
jns
dec
jae
subl
in
aad
xchg
sub
movsl
frstor
leave
scas
pop
insb
shrb
popa
add
jo
push
adc
pushl
push
mov
jecxz
sbb
push
or
jae
aaa
ret
popf
lods
shrl
xor
out
popa
adc
aad
jne
test
cltd
rol
xchg
and
or
adc
cmp
fstl
shll
xor
pop
into
push
jbe
sub
gs
cmpsl
add
popf
std
out
lods
test
xchg
fucomip
xor
jmp
sbb
out
shrl
push
xchg
dec
loope
and
jne
ja
cmpsl
mov
inc
fistpl
xor
and
ror
movsl
scas
cs
imull
jmp
or
inc
pop
jae
dec
in
aad
leave
loope
mov
pop
subl
rcrl
data16
pop
out
repz
mov
mov
inc
ret
hlt
mov
in
or
loope
sbb
cmp
sub
jno
popf
in
cmp
and
cs
ret
fldt
test
mov
jmp
jecxz
dec
test
cmpb
sub
xor
stos
mov
push
test
pop
dec
lock
jb
test
cli
aad
cmp
out
fmull
ror
ja
movsl
pop
iret
jno
xor
mov
or
and
bound
cmpb
mov
dec
push
push
inc
xor
xchg
add
fldt
fistps
lods
and
fucomp
stc
subb
adc
out
sub
xchg
mov
leave
xchg
push
or
les
lret
xchg
es
int3
mov
fs
jge
mov
mov
les
lahf
jne
fwait
popf
xchg
js
repnz
incl
pop
sub
or
mov
push
int
repz
sub
fists
lret
ret
mov
fcmovu
or
test
lock
leave
imul
jmp
or
test
pop
lock
push
and
add
adc
cmp
iret
sub
sub
jae
cmp
xchg
sub
scas
popf
adcl
sub
mov
fwait
lret
lods
mov
mov
cltd
stos
filds
push
jp
ficompl
pop
test
lods
aad
add
and
aad
cmp
push
rcrb
fmuls
add
int
fmuls
cmpsb
sbb
adc
shl
scas
std
push
imul
pop
cmp
or
mov
jne
leave
push
push
mov
mov
and
xor
sub
nop
mov
inc
imul
mov
mov
ja,pt
xchg
jle
movsb
outsb
out
inc
jp
stos
ret
leave
mov
scas
ljmp
xchg
and
mov
xchg
sbb
mov
and
leave
shll
fldcw
shrl
xchg
mov
pop
fisttpl
imul
das
xor
pop
add
cltd
cmp
add
mov
les
inc
pop
clc
and
frstor
ss
sub
iret
hlt
mov
and
xor
popa
add
in
jne
sub
cs
scas
test
lahf
adc
sub
decl
andl
add
jnp
mov
out
xchg
gs
std
cmp
mov
dec
cmp
movsb
es
in
or
ror
sub
add
xchg
mov
jecxz
fstpl
dec
or
sub
out
int
test
in
cmp
outsb
mov
jmp
in
mov
and
cwtl
jge
dec
mov
rolb
orb
into
aad
in
cmc
iret
xchg
mov
sub
jmp
inc
cmp
push
sub
cwtl
out
xchg
sub
test
cmp
push
xor
mov
pop
cmp
movsl
iret
movl
jl
mov
cmc
xlat
fcmovnb
xor
popf
int
mov
push
loopne
ljmp
es
je
mov
pop
out
sub
mov
popl
sub
adc
mov
mov
pop
jecxz
pop
sbb
arpl
movsl
cs
out
sub
in
mov
fs
cs
or
fildl
or
popf
dec
outsl
and
movsl
scas
iret
loope
push
int
in
cmp
out
mov
scas
xchg
nop
sub
xchg
mov
ret
cmp
xor
adc
roll
and
xchg
sub
dec
aam
lret
jne
in
sub
and
cmp
ja
dec
dec
adc
iret
repnz
daa
loope
in
inc
stc
add
xchg
cmpsl
ror
test
mov
popf
xchg
lahf
sbbl
je
daa
inc
jle
inc
fcomi
adc
orl
mov
decl
mov
lea
lea
imul
pop
mov
bnd
add
fisttpll
movsl
cmp
hlt
popa
daa
dec
jae
sub
andb
push
rcll
dec
in
adc
rcrl
or
iret
scas
stc
jmp
addl
es
xchg
lds
push
arpl
xchg
xor
jnp
shrl
inc
nop
push
mov
ret
rcrb
fucomip
inc
push
and
mov
mov
xchg
dec
cmp
pop
mov
adc
aaa
mov
pop
mov
sub
cmp
push
aad
add
adc
sahf
mov
popf
cs
ret
mov
push
and
cld
jmp
mov
sbb
popf
test
sub
dec
es
pop
adcb
rcll
shlb
stc
cmp
int3
movsb
mov
xchg
push
push
mov
mov
js
dec
fldl2t
mov
leave
out
inc
mov
movsl
ret
stc
xchg
xor
cltd
ja
lods
sub
into
cs
jae
or
xchg
popf
fisttps
jmp
jmp
xlat
mov
pop
ja
and
xor
or
into
iret
out
jb
fs
push
mov
sbb
mov
pop
xchg
in
add
lods
lret
iret
lods
iret
add
cltd
xchg
callw
lahf
xchg
and
iret
jecxz
inc
or
pop
mov
inc
std
leave
cltd
and
fwait
out
mov
xchg
aas
add
jmp
int
inc
out
xorb
in
aad
fld
cmc
sub
inc
xor
jge
dec
rorl
lods
leave
xchg
xlat
fidivs
push
xchg
pop
jg
lea
stc
aad
jne
leave
in
mov
cmp
cs
inc
xchg
lret
xor
lock
and
and
jp
dec
push
std
lock
sub
push
jbe
xchg
add
inc
cltd
lret
mov
gs
leave
cmp
mov
mov
dec
aad
and
lahf
mov
jmp
lods
xchg
jmp
mov
in
lea
test
pop
int
aam
jo
fmull
rcll
fisttpll
jg
iret
cmc
lret
mov
popf
imul
adc
in
or
inc
mov
out
loopne
clc
pop
fxam
frstor
in
xor
pushl
int
lea
mov
add
aad
xchg
shll
mov
pop
movl
iret
lods
fnstcw
push
lea
stos
lods
sub
mov
aaa
fwait
shll
shrl
les
dec
add
or
xchg
clc
add
lock
sbb
rcll
cs
mov
or
push
mov
out
mov
xor
cmp
jne
imul
jecxz
mov
push
loope
jmp
inc
sub
mov
or
push
popf
in
loopne
cmpb
sbb
adc
pop
jp
mov
lock
stos
fmul
push
rolb
popf
lret
jae
filds
sub
xchg
lds
out
popa
dec
dec
mov
sbb
add
sub
mov
mov
mov
jae
popf
fcmovnbe
fildll
imul
mov
popa
arpl
jg
mov
jne,pn
movsl
xlat
stc
aam
rcll
in
orb
mov
jecxz
mov
mov
shl
mov
fxch
and
mov
push
repz
test
fwait
cmpsl
enter
xlat
or
xchg
cmp
xchg
stos
dec
leave
cmpl
cmpsl
int
and
lds
ror
push
in
xor
test
iret
pusha
nop
mov
into
popf
cmpsl
xchg
pop
adc
sub
aad
movsb
dec
std
das
sub
mov
mov
lahf
aam
iret
and
inc
scas
jecxz
mov
repz
test
test
mov
pop
pop
add
cmp
shr
sub
mov
dec
ljmp
add
inc
xchg
shlb
mov
xchg
mov
lret
movsl
jmp
mov
cwtl
xchg
lock
les
adc
xchg
ret
nop
mov
dec
mov
push
aas
in
lahf
mov
in
shrl
iret
xorl
pop
stos
add
call
or
mov
addb
fstp
fidivs
mov
shl
sub
stc
nop
mov
push
push
xchg
loope
fmull
push
xrelease
jbe
xlat
inc
push
clc
sbb
stc
clc
xchg
push
fwait
and
bound
dec
rorl
inc
fwait
scas
cmpsl
test
pop
test
lds
fistps
aaa
mov
jmp
pushf
in
cmp
mov
fldenv
psrlq
out
pop
sub
popf
fisttpl
loopne
aad
xchg
stos
inc
jns
js
sbbb
xchg
out
sbb
ss
xchg
imul
aam
aas
int
mov
mov
cmp
jbe
cmpsb
shl
fcmovne
test
push
mov
pop
sbb
stos
push
pop
lds
sub
int
or
das
mov
fsubl
lret
insl
sbb
int3
adc
or
leave
es
clc
lret
lea
push
mov
cmpsb
xchg
xor
fwait
cmp
mov
sub
xchg
ret
sbb
cltd
out
in
lret
mov
push
in
xchg
ljmp
rcr
rol
test
xlat
fwait
jl
iret
dec
iret
cmp
cmp
arpl
stc
xchg
pop
movsl
out
mov
test
cmp
xchg
mov
loope
inc
sub
mov
rcr
xor
jns
int
pop
lds
inc
adc
das
jo
push
popf
pop
add
mov
sub
aad
cmp
out
daa
inc
dec
int
dec
insl
in
arpl
sub
fisubrs
rorl
adc
dec
es
popf
dec
arpl
mov
popl
mov
sub
loope
xchg
cmc
and
sub
pop
sbb
out
xlat
push
test
lahf
stc
push
in
fxch
lea
sub
aad
lret
fists
push
xchg
in
std
lds
mov
sub
ja
adc
mov
push
xchg
and
decb
cld
out
inc
fcomp
or
cltd
popf
sub
fwait
rcr
test
popa
popf
out
lods
es
popa
enter
in
leave
and
xchg
jne
cs
ss
or
xchg
sbb
mov
lahf
rorl
cmp
jecxz
ret
cmp
lea
add
pushf
out
and
and
mov
jg
int
jne
lds
movsl
stos
sub
xchg
shll
and
fwait
cs
push
sbb
jge
popf
insb
cltd
jae
outsb
leave
insl
sbb
stc
mov
rorb
fwait
jmp
test
mov
orl
lea
cmp
sbb
shll
inc
lods
mov
mov
mov
xchg
cwtl
adc
cmpsb
inc
jmp
xor
into
das
popa
cmp
mov
cmp
add
xchg
cwtl
mov
out
sbb
repnz
jmp
scas
mov
outsb
mov
test
das
sbb
leave
sbb
es
adc
cs
dec
and
xor
aad
leave
iret
fnstsw
imul
sbb
mov
xchg
lods
idivl
hlt
mov
xchg
popf
cmp
adc
in
test
daa
xchg
inc
xchg
cwtl
mov
int
push
js
pop
clc
arpl
ljmp
stc
test
or
movsl
and
mov
fcompl
pop
pop
jmp
or
push
push
in
movsl
hlt
pop
mov
mov
scas
imul
add
pop
sub
test
mov
and
mov
popf
aas
fmuls
ja
in
sub
int3
sbb
out
sub
mov
adc
sub
pop
fisubrl
out
jg
fisttpl
scas
add
addl
lods
inc
push
out
aaa
in
jmp
xchg
inc
dec
jge
cmp
sub
push
sbbb
sbb
call
mov
jmp
fucom
rcl
ss
sar
xor
fsubrl
dec
xchg
push
std
mov
leave
jmp
scas
scas
test
cmp
js
lods
xlat
and
push
add
add
mov
push
std
mov
or
dec
cltd
jbe
leave
jmp
mov
mov
fcmovnu
xor
pop
iret
sub
bswap
test
push
jmp
pop
sub
pop
inc
push
xchg
xchg
mov
xchg
sbb
lret
jecxz
dec
faddl
mov
scas
iret
shl
rolb
loope
aas
cmpsl
and
movsl
fstpl
inc
lahf
push
mov
cmp
xlat
movsl
add
in
aad
xchg
push
loope
and
pop
lea
into
xrstors
fbld
adc
les
imul
fbld
nop
push
in
enter
mov
and
jecxz
ljmp
and
and
xlat
mov
rcrb
orb
sub
mov
pop
sbb
mov
adc
sbb
test
fistps
int3
test
cmp
xchg
sub
cmp
aad
movsl
stos
stc
repnz
add
dec
mov
aaa
ljmp
cmp
call
cmpb
jne
int3
adcb
mov
popa
fs
sub
mov
xchg
cmpsl
push
push
jae
repnz
scas
jae
rorl
iret
xlat
pusha
or
in
ja
or
inc
std
mov
mov
jmp
and
lahf
cwtl
mov
movsb
xchg
pop
add
mov
stc
movlps
fwait
xlat
out
mov
mov
inc
cmp
or
fnstenv
mov
pop
push
lods
add
shrl
mov
inc
lea
divb
scas
mov
test
lret
stc
mov
lods
dec
xor
rorb
jl
mov
insl
cltd
mov
ss
pop
lret
or
loop
inc
pop
fistps
out
fwait
dec
jl
mov
jp
push
call
loopne
adc
popf
mov
lret
stos
dec
test
getsec
inc
lret
xchg
in
push
push
loopne
loope
stc
imul
jmp
cmpsl
xchg
mov
jge
mov
mov
push
aad
test
xchg
xchg
stc
jmp
or
cmp
test
std
js
cltd
cltd
js
rcl
int
fcompl
test
xchg
jmp
inc
and
int
xchg
in
cmp
popf
and
enter
pop
iret
sbbl
test
lea
ret
lahf
jbe
roll
sahf
sbb
aas
fldlg2
push
inc
cmp
test
mov
stc
pop
sub
aad
out
ror
mov
xlat
pushl
ret
int
xchg
pop
xchg
mov
dec
xchg
add
and
mov
insb
shl
mov
sub
popf
cmp
sub
cmc
hlt
lahf
popf
xchg
fwait
and
leave
scas
cmpb
cmc
loopne
in
or
lds
gs
xchg
ret
pop
fwait
sahf
loopne
xchg
imul
lds
rcrb
mov
inc
filds
sbb
xchg
mov
jg
insb
shlw
push
out
cltd
lret
js
lds
mov
adc
test
std
cmpsl
call
pushf
fnstcw
mov
in
cmp
sbb
in
mov
movl
pushf
push
and
in
stc
lea
jne
sub
mov
xchg
sub
mov
dec
and
xchg
iret
mov
stc
sbb
adc
cmpl
xor
xlat
pop
popf
mov
dec
loope
jne
rcll
adc
sub
push
imul
mov
iret
dec
push
fucomi
shll
jle
xchg
aam
mov
sub
rcrl
int
lcall
enter
popf
cs
adc
lret
adc
sub
xchg
cltd
repnz
mov
jmp
mov
jo
mov
lods
sub
jecxz
fdivrl
adc
jbe
pop
sbb
xchg
cli
pop
cmp
mov
ja
xchg
int
inc
iret
loope
jno
cmp
mov
and
lea
xchg
jbe
dec
rcrl
orl
ja
scas
mov
add
or
mov
shrl
test
and
xor
jl
xchg
sarl
mov
and
and
push
mov
xchg
cmp
popf
sbbl
iret
push
mov
sti
filds
adc
xchg
rorl
push
jmp
cwtl
iret
int
test
jge
xchg
addr16
test
cmp
je
mov
int
stos
jmp
sub
fidivs
loopne
pop
int
mov
loope
popa
push
popf
add
in
sub
fxch
jge
fs
enter
sbb
imul
test
xlat
xor
stos
mov
jmp
popf
es
mov
add
pushf
lret
jp
in
xchg
inc
filds
leave
fstpt
clc
imul
and
inc
popf
bound
inc
sub
scas
push
jae
dec
or
lea
mov
mov
jmp
std
pop
cmp
test
push
mov
xchg
and
add
mov
in
cmp
popf
sub
movsl
xchg
repnz
je
cmp
cmp
xchg
in
je
or
cmpsl
mov
enter
lea
inc
test
loope
testb
inc
jg
xchg
sbb
xchg
inc
das
lds
int
pop
sbb
or
imul
xor
fildl
lods
mov
push
stos
and
pop
jge
add
in
xchg
lods
out
rcll
pop
popf
sub
mov
gs
sbb
cltd
hlt
inc
pop
test
add
andb
xchg
mov
mov
xor
pop
sbb
lcall
jecxz
lea
and
mov
loope,pn
jecxz
aaa
fildl
mov
fdivs
xchg
cltd
loope
fcmovnb
inc
dec
dec
iret
jbe
mov
insb
sbb
adc
xchg
xchg
add
lahf
xlat
leave
int
mov
in
mov
and
xor
adc
xlat
lahf
push
dec
shrl
sub
cmp
mov
rolb
lea
cld
mov
inc
ret
jge
test
aad
mov
sbb
ss
sbb
or
xor
scas
adc
xor
cmc
ret
jmp
cltd
cltd
enter
pop
lret
xchg
in
fmull
xor
push
inc
lea
or
xor
ror
je
pop
out
clc
mov
xchg
popf
jecxz
mov
dec
test
lds
pop
sub
fwait
pop
fistps
cmc
push
int
lret
jmp
cmpsl
push
pop
sub
adc
in
xor
cs
loope
stos
gs
pop
or
sbb
cmp
ret
mov
nop
call
jmp
lods
mov
movl
out
test
cmp
lds
rcrw
pop
pop
aad
push
test
push
lods
shll
and
adcl
fsubs
sub
cmp
xlat
xchg
mov
sub
push
cmpsl
mov
fisttps
nop
int3
daa
test
mov
lahf
sub
int
push
std
fwait
repz
inc
or
fstps
lock
out
fs
xor
cvtpi2ps
scas
xchg
test
fwait
cltd
fs
push
pop
f2xm1
test
std
sub
sahf
int
testb
mov
not
out
orl
sub
rol
push
sub
sub
sub
sub
ds
popf
or
xlat
out
xchg
jmp
mov
sub
imul
addl
adc
stos
sub
imul
dec
xchg
sub
push
and
jae
outsb
jmp
and
push
or
xchg
mov
out
addb
leave
js
push
bound
mov
dec
mov
sbb
scas
ret
cmc
int
inc
mov
test
cmp
lret
cmp
pushf
xchg
xchg
mov
and
sub
leave
adc
pushf
iret
jb
addps
xchg
sbb
enter
popa
jmp
xchg
mov
cmc
mov
push
xor
int
repnz
cmp
ss
lahf
and
cmc
jg
sbb
out
sbb
mov
cmpsb
sbb
dec
movsb
mov
pop
inc
lea
xchg
mov
test
cmpsb
repz
in
add
sbb
rcrl
ror
xchg
sbb
cmpsl
and
jecxz
and
stc
fmull
insb
imul
js
in
sbb
lahf
push
fdivs
popa
xor
loop
imul
mov
add
enter
adcl
jns
gs
inc
pop
push
int
popa
jmp
push
cmp
stos
and
cmpsl
lock
sti
fistpll
jbe
pop
scas
and
jb
cs
cltd
test
ja
jecxz
push
lods
push
jp
stos
ss
cs
pop
xchg
mov
push
mov
arpl
lds
out
xor
add
pop
cld
pop
sub
xchg
stc
leave
xchg
call
dec
std
in
lock
adc
scas
fisttpll
loope
out
sbb
fwait
stos
cs
sbb
bound
adc
pop
leave
popl
mov
push
cs
jmp
ss
inc
int
jmp
dec
mov
imul
scas
sbb
pop
mov
mov
hlt
jge
jmp
cwtl
adc
jne
rcrl
mov
lahf
pushf
mov
dec
mov
in
mov
add
int3
cmp
add
sahf
subb
xchg
xor
fisttpl
pop
xchg
stc
cmp
aad
and
int
jl
test
int3
out
mov
decl
push
or
test
push
nop
fisttpll
push
and
adc
jb
fnstcw
push
leave
lret
es
pop
lds
sub
iret
and
push
pop
std
ljmp
mov
jmp
das
ffree
dec
sub
test
js
stc
in
mov
xchg
leave
xchg
lret
mov
mov
in
leave
and
shr
aas
pop
int3
xlat
test
std
movl
loope
cmc
mov
dec
inc
and
popf
int
icebp
sbb
adc
adc
pop
fistl
rcrl
vpaddsw
pop
clc
xchg
lahf
push
and
xor
dec
mov
mov
mov
fstl
mov
out
fstpt
dec
aad
mov
pop
jge
std
mov
iret
aas
adc
xadd
ret
cs
mov
popf
ds
fwait
and
mov
push
sbb
pop
dec
mov
insl
pop
fwait
scas
or
lds
test
mov
xchg
shrl
mov
dec
dec
leave
push
shrb
dec
dec
push
mov
stos
add
aad
sbb
repz
and
sbbb
js
iret
stos
out
mov
mov
pop
mov
xlat
xchg
fmulp
sahf
xor
scas
and
push
call
mov
shrl
xchg
cmp
fwait
nop
push
push
xorl
faddl
not
insb
fwait
or
test
mov
and
adc
test
pop
jmp
sbbl
add
popf
sub
cmp
mov
rcl
lret
cmc
pusha
leave
test
into
xchg
or
ret
cmpl
stc
scas
sub
scas
mov
jmp
mov
dec
mov
jmp
sub
xchg
jmp
mov
stc
sub
loope
leave
in
and
sub
and
xchg
out
aaa
push
and
loope
mov
insb
jmp
test
loop
mov
iret
cmp
fwait
sbb
xor
cltd
fstp
loopne
or
pop
and
xor
and
cmp
xor
scas
jmp
fcompl
test
pop
andl
xchg
jmp
xchg
sbb
jmp
sbb
jmp
out
ret
jg
pop
and
and
xor
xor
push
cmpsb
xchg
cwtl
lds
scas
sbb
fsub
xchg
lret
jbe
mov
cmp
nop
xchg
xchg
dec
addr16
jb
loope
xchg
inc
lahf
imulb
lock
sub
jbe
ljmp
ss
stc
out
fcoms
push
add
fadds
in
jge
adc
jmp
mov
push
roll
cmp
cmp
pop
pop
xorl
mov
or
testb
inc
add
cltd
cmp
and
cmp
cmp
out
in
daa
mov
repz
movsl
push
das
push
nop
popa
mov
lret
add
fstp
push
sub
mov
cmpsl
stc
push
jecxz
jl
das
imul
stc
leave
stos
xor
inc
xchg
int
cmp
mov
push
int3
movsl
mov
cmp
shll
mov
ret
jo
jae
add
xorl
sub
test
aam
hlt
movsb
aaa
add
push
fnstsw
jecxz
lea
imul
hlt
jns
dec
mov
or
mov
arpl
cmpsb
orl
sub
ljmp
cmp
out
ror
or
and
mov
imul
test
xchg
inc
xchg
cmp
dec
imul
xchg
enter
fwait
push
movsl
xchg
ljmp
stos
sbb
and
jae
imul
mov
xchg
lahf
test
aad
push
and
out
mov
out
movsb
sbb
movsl
shrl
iret
add
push
sub
fists
cltd
movsb
inc
filds
jge
in
xor
push
cld
lret
orb
leave
or
xor
and
mov
cmp
xor
test
subl
imul
leave
and
lcall
mov
aad
and
popf
adcl
and
test
leave
sbb
sbb
loopne
imul
mov
iret
fcmovbe
fsubr
out
rclb
push
xor
test
sbb
push
subl
or
xchg
popa
test
jno
iret
popf
test
mov
sbb
sbb
or
les
addb
xchg
pop
inc
mov
inc
repz
subb
mov
jbe
mov
sbb
shrb
jae
inc
cwtl
mov
push
leave
out
mov
or
lods
fwait
push
fwait
pop
pop
dec
stc
mov
mov
and
inc
mov
dec
sbb
lods
mov
jecxz
sahf
in
mov
aaa
inc
sub
lds
push
fs
popa
lret
cmpsl
xor
clc
stos
rol
mov
movsl
mov
stc
aas
push
sbb
jmp
lahf
and
pop
pop
popa
xchg
adc
cli
sub
cwtl
cmp
fistpl
movl
popf
sar
popa
xlat
push
jmp
stc
pusha
xchg
inc
leave
lret
das
dec
mov
and
popa
and
lret
adc
data16
cmp
xor
xchg
int
push
iret
mov
xchg
jecxz
cmp
xorb
jge
or
lahf
fisttps
out
fwait
shl
xchg
aam
imul
push
mov
sarl
mov
adc
lahf
imul
xchg
sub
es
out
in
mov
adc
leave
xlat
mov
jae
mov
arpl
ret
daa
aas
shll
test
test
imul
in
push
or
scas
xlat
stc
mov
mov
rorb
out
int
or
popf
pop
mov
pop
lret
adc
sub
loope
adc
mov
xchg
lret
test
xor
mov
pop
sub
ret
lahf
movsl
int
sarb
mov
sbb
push
call
xchg
icebp
pusha
adc
mov
es
push
push
aad
pop
popf
sub
push
xchg
cwtl
movsl
push
sahf
leave
adc
loop
lret
scas
and
pop
inc
cltd
xchg
inc
lds
test
sub
js
cmp
and
iret
cmpl
xchg
in
mov
push
flds
rcrl
scas
dec
movsb
sbb
fsubp
sub
cmpsl
orl
mov
or
int
mov
leave
scas
mov
movsl
xchg
ja
mov
in
in
loope
xchg
add
rcr
sbb
cmp
orl
ss
int
insb
jns
lds
test
in
xlat
sahf
mov
mov
fincstp
in
cmp
cmp
push
pop
ljmp
es
loope
push
inc
jmp
xor
sub
and
loopne
pop
and
mov
jmp
es
adc
fnsave
rcll
cwtl
adc
cwtl
mov
psubusw
and
in
iret
push
sahf
inc
sub
pop
fbstp
pushf
mov
mov
flds
inc
cmpsl
sub
cs
lret
stos
pop
in
mov
jmp
xchg
loope
push
and
dec
rcl
jb
scas
sbb
cmpsl
call
xchg
lahf
out
lret
leave
mov
movsb
or
push
popf
int
sarl
dec
in
mov
jo
leave
jae
std
rcrl
movsl
sub
xor
inc
jp
xchg
insb
adc
fldcw
xchg
fisttpl
imul
nop
mov
aad
xchg
jbe
aas
push
in
adc
jmp
popf
stc
or
cmp
mov
out
inc
fnstcw
sbb
or
pop
frstor
fisubl
jo
lret
add
mov
test
sub
cs
aad
pusha
mov
xchg
out
mov
in
cmp
scas
dec
dec
adc
xchg
push
seto
mov
sub
mov
cmp
add
stc
adc
and
and
rcr
pop
or
leave
mov
inc
inc
icebp
or
xchg
add
aad
mov
xor
stos
sti
xchg
test
cmp
les
push
xlat
jecxz
hlt
lahf
in
pop
pop
stos
popa
shrb
iret
mov
idiv
mov
mov
jmp
cmp
dec
jbe
lods
testl
fcmovne
xor
xor
cmc
push
in
loopne
stos
fsts
xor
fmull
xchg
jmp
and
and
pop
mov
rcll
int
mov
shlb
les
adc
nop
frstor
xchg
sub
push
lahf
cmp
movsl
push
inc
lahf
lcall
test
shrl
push
xchg
adc
out
cmpsl
aam
or
lret
sub
stc
ret
fwait
xor
add
jp
in
ljmp
xchg
leave
test
imul
jecxz
jmp
mov
daa
dec
or
in
in
add
fnstenv
xchg
mov
popf
rcll
adc
jl
sbb
jmp
xchg
out
inc
lahf
mov
push
testl
push
ds
sbb
mov
cmp
add
shrl
movsl
sub
in
es
pop
flds
cmpsb
imul
test
dec
pop
movsl
cmp
hlt
jne
in
xchg
arpl
push
dec
sub
scas
ss
mov
enter
stc
in
nop
hlt
add
in
or
or
xor
scas
xchg
mov
xchg
or
aad
into
jmp
movsl
mov
out
scas
fs
jae
shl
add
popf
std
xchg
jmp
cmp
ficoms
add
pop
shrl
push
xchg
mov
adc
xchg
xor
int
out
add
jo
push
nop
mov
out
or
xor
xchg
lahf
push
shrl
xchg
sbb
cmpsb
push
cmp
adc
loope
or
lret
int3
mov
sbb
adc
sar
clc
stos
cltd
frstor
std
pop
inc
mov
loope
insl
stos
inc
mov
mov
aad
xlat
fldl
popf
ret
fildll
mov
imul
sub
cltd
and
imul
or
mov
pop
fsubl
pop
aas
lds
push
incb
cmp
leave
cmp
inc
ret
add
out
call
in
aaa
subl
jno
popa
sub
pop
sbb
in
pop
push
out
test
sbb
xor
sbb
adc
sbb
adc
leave
xor
push
mov
movsb
pop
shlb
scas
cmpsl
enter
mov
xor
inc
xor
xlat
inc
mov
xchg
loopne
int
mov
stos
cmp
stos
in
out
mov
or
test
sub
mov
mov
push
push
imul
insl
add
test
or
xor
xchg
call
rolb
loope
inc
pop
movsl
in
out
push
push
pop
sbb
popa
pop
push
cli
cltd
jo
adc
and
cli
and
push
cli
bound
and
mov
and
lcall
clc
subl
pop
pop
xchg
mov
xchg
dec
sbb
mov
or
sub
lea
insb
mov
mov
sbb
and
mov
mov
pop
insb
mov
and
gs
pop
test
add
jno
mov
out
sub
jecxz
xchg
add
pop
fwait
pop
rcr
add
or
jmp
pop
cmp
or
test
inc
push
lds
iret
add
push
popa
cmp
int3
in
iret
rcl
sbb
insb
fwait
jge
cwtl
push
iret
and
cltd
mov
inc
in
adcb
ret
lret
push
adcb
xor
lods
inc
mov
lods
cmpb
addb
cmp
adcb
shlb
flds
jecxz,pn
sub
sbb
xorb
sbbb
sarl
cmp
sbbb
inc
nop
mov
and
popa
adcb
insl
mov
les
cmp
cmpb
addb
cmp
xor
push
push
cmp
subb
cmp
jecxz
sub
sbb
addb
sbbb
sarl
cmp
xorb
inc
shll
dec
mov
inc
ret
pop
aad
fldenv
dec
in
pop
push
rolb
popf
add
in
xchg
loope
push
push
fldenv
in
test
ret
cld
xorb
addl
fucom
xlat
scas
aaa
cs
xchg
lds
jmp
or
out
iret
cmp
lret
ss
fbld
jb
ljmp
mov
mov
subl
pop
lds
and
sbb
xchg
gs
mov
lret
cmp
jmp
lods
sub
xor
mov
ja
xor
mov
mov
xchg
or
lds
xchg
or
sub
cmp
pop
inc
inc
pushf
pop
insl
lahf
jb
pop
mov
rclb
aaa
push
mov
leave
stos
xor
pop
shrl
pusha
mov
xchg
pop
in
fxch
pusha
add
shrl
mov
lods
mov
ja
dec
movsl
rorl
rcr
and
data16
dec
subb
add
clc
sar
div
test
xchg
in
and
mov
or
ja
xchg
iret
sub
mov
lds
and
inc
shl
add
fidivrl
sbbb
rorb
vphaddubq
and
mov
lods
push
jbe
mov
nop
cwtl
data16
or
test
mov
stc
push
lds
js
cltd
jne
and
mov
clc
sbb
lds
je
and
adc
movsb
jnp
jno
xchg
stc
xor
loope
cmpsl
js
lods
rcr
pop
rcrl
pop
inc
push
mov
fnop
sub
dec
mov
pop
add
pop
subb
cmp
xor
pushf
xor
std
test
xor
dec
icebp
jo
xlat
fiadds
mov
lds
loope
dec
push
jp
cmp
pop
lods
movsl
mov
inc
aam
and
sarb
data16
dec
and
cs
cmpb
clc
dec
stos
pop
sarb
icebp
lods
cmpb
jo
push
loop
rclb
inc
les
push
shl
rcrb
sbb
pop
rorb
sub
sbb
je
fistpll
ret
in
shr
andb
pop
inc
pop
fyl2x
std
push
sarb
stos
rcl
sti
std
dec
push
dec
push
sahf
scas
jno
jle
xchg
push
icebp
sti
inc
jo
add
sahf
jbe
nop
and
cmpb
mov
lea
fidivs
xchg
subb
dec
inc
rol
mov
fsts
xchg
dec
pop
sub
sub
lods
fstl
movsl
cmpsl
lahf
mov
adc
iret
mov
xlat
jecxz
mov
into
dec
jecxz
mov
lods
xchg
jbe
in
add
sarl
ret
daa
mov
xor
gs
mov
ss
movsl
push
add
es
call
and
stos
xchg
iret
lods
jmp
add
lock
xor
in
add
push
icebp
jae
loope
push
xor
mov
sub
jge
cmpsl
leave
fnstenv
jl
push
push
mov
dec
cs
dec
mov
and
push
movsl
rolb
jne
or
mov
lea
sub
ds
xchg
xor
sub
xchg
rol
jle
insb
inc
in
mov
insb
fadd
inc
add
mov
fsub
sbbl
dec
mov
test
xlat
dec
lock
cwtl
inc
and
push
aad
dec
dec
sub
sub
lods
loope
cmpsl
pusha
mov
dec
pushf
movsl
shll
mov
dec
mov
ss
rorb
sbb
jge
jge
jg
pop
fisttpl
mov
andb
pop
stos
cmc
lea
iret
push
xor
push
imul
lods
jmp
mov
mov
sbbb
test
sbb
xchg
lods
mov
shlb
pushf
push
insl
loope
scas
and
das
push
mov
dec
insl
nop
mov
jmp
adc
insl
pusha
scas
add
test
lods
push
dec
cmpsl
cmp
mov
ret
insl
dec
scas
cmp
ret
cmpsl
icebp
mov
movsl
sarb
insl
mov
stos
arpl
lods
mov
arpl
mov
mov
insl
loope
test
lods
shlb
add
movsl
sahf
pop
pushf
push
insl
loope
scas
sub
lods
add
cmpsl
push
dec
mov
mov
mov
cltd
insl
cwtl
mov
inc
mov
sub
mov
int3
scas
mov
mov
scas
pop
mov
test
lods
lods
lods
decl
fiaddl
push
inc
mov
mov
mov
out
inc
subl
fwait
push
mov
movsl
cmpsl
sbb
insl
jl
rorl
out
mov
and
repnz
cmp
fucomp
lods
pop
rcr
inc
fstl
fsts
lds
rcll
push
inc
leave
push
inc
cmc
push
inc
cltd
push
in
inc
push
or
pusha
test
inc
arpl
or
jo
loope
stos
rorb
pusha
jns
stos
popa
jmp
adc
in
stos
add
orb
bound
inc
aas
in
jp
jmp
aam
fcompl
std
jp
sub
mov
mov
jp
sub
test
data16
inc
mov
jp
sub
pop
lcall
jge
arpl
notb
push
sbb
in
sti
pop
jmp
sbb
scas
dec
inc
sub
push
ds
cmp
pushf
xchg
dec
mov
mov
test
pushf
shrb
and
push
das
lcall
mov
sbb
push
or
cmp
jno
movsl
arpl
movsl
shlb
jge
cltd
pop
sbb
push
push
xor
xor
sbb
movsl
xchg
test
movsl
ret
mov
stos
sbb
xchg
ficoml
jae
pop
push
xor
fists
fdivs
sbb
push
add
push
push
aas
scas
add
scas
push
dec
scas
cmp
subl
loope
push
mov
xchg
pop
fwait
clc
fbstp
fcmovb
fs
adc
scas
inc
adc
adc
inc
mov
fsubs
mov
dec
cmpsl
ds
push
dec
cmpsl
cmp
push
cmp
push
cld
add
add
cli
int
call
arpl
loope
inc
repnz
mov
and
sbb
xchg
inc
out
lock
push
sub
loopne
outsb
test
leave
icebp
std
mov
shlb
cmpsl
stos
shrl
lods
out
enter
in
adc
in
sub
pop
mov
addl
cmp
push
sarb
cs
add
icebp
and
lods
pop
decl
push
scas
data16
int3
jmp
test
arpl
fadd
lods
ljmp
xor
scas
push
push
sub
scas
sbb
push
test
and
insl
mov
sbb
mov
mov
aad
dec
lods
rorl
outsb
push
cmp
pusha
scas
add
mov
ds
push
and
fs
add
push
sbb
lock
int
push
out
test
jge
or
pop
rorl
add
push
clc
es
clc
dec
or
out
ret
inc
or
adcl
push
jmp
inc
mov
inc
cs
mov
repz
mov
leave
movsl
movsl
dec
lods
xchg
mov
rolb
inc
pop
adc
sti
ss
lret
xlat
lea
push
cwtl
repz
adc
jecxz
mov
push
dec
lea
pop
ljmp
and
lcall
sub
inc
pop
mov
inc
sub
lods
or
adc
movsl
push
mov
scas
inc
fucomp
stos
dec
xor
sbb
cltd
shlb
stc
inc
je
mov
dec
mov
dec
mov
ds
fsubl
dec
jge
fnsave
lods
jmp
cmc
pop
roll
mov
test
push
movsl
sub
loopne
sub
inc
xchg
add
test
sbb
or
jb
sbb
jmp
aad
lahf
xor
pop
cmp
xchg
rorl
mov
jo
in
mov
pop
xchg
push
cltd
bound
sti
xchg
xor
sub
mov
jecxz
jmp
loop
cltd
pushf
cmpsl
inc
scas
pop
lods
push
xchg
sti
lock
mov
jmp
or
icebp
xor
ljmp
loope
inc
adc
mov
loopne
stos
push
bound
pop
stos
pop
lods
cmpsb
fisubrl
xchg
sbb
add
mov
scas
push
das
jmp
enter
adc
scas
test
outsb
mov
mov
lret
movsl
mov
or
inc
insl
rcr
pop
jl
addb
cmpb
pop
rcll
call
jmp
inc
movsl
pop
cld
fimuls
xchg
or
xchg
push
mov
xchg
push
adc
loopne
fstps
movsl
insb
test
daa
sbb
jg
mov
js
insl
std
in
inc
mov
stos
movsl
test
push
cmp
xor
jno
xchg
clc
mov
cmpsl
lcall
mov
cmp
jmp
sub
movsl
jns
mov
jns
popf
cwtl
xchg
ret
mov
sbb
cmp
stos
lea
fisttpll
in
imul
xchg
fnsave
imull
lcall
or
push
repz
bound
xchg
movsb
inc
cli
add
push
test
or
sbb
xchg
push
add
pop
pop
mov
movsb
inc
xor
aad
loop
lahf
adc
lods
push
js
xor
cmpsl
jmp
jecxz
mov
add
lock
lcall
test
adc
sub
movsl
inc
add
in
sub
or
bound
and
mov
xchg
lods
mov
sbb
lods
rolb
dec
pop
popf
lds
sbb
test
call
cmp
movsl
push
push
vpxor
mov
inc
popa
js
xchg
fcomps
sub
xlat
or
push
jmp
adc
in
mov
or
push
jne
lods
pop
cmpl
pop
xor
nop
adc
test
in
jmp
movsl
ss
push
aaa
cmp
movsl
movsl
fiaddl
mov
dec
sub
cld
fsubp
dec
dec
adc
mov
jnp
lcall
or
js
pusha
push
ret
pop
dec
mov
cmpsl
mov
jmp
mov
sbb
out
vmwrite
mov
mov
push
push
lods
shlb
and
and
push
ds
adc
inc
mov
movsl
push
js
mov
inc
or
inc
mov
cmc
cs
ljmp
dec
adc
addb
pop
dec
int3
fwait
or
sbb
mov
pop
inc
sbb
movsl
fsts
test
xchg
pushf
inc
imul
stos
inc
inc
jecxz
dec
pop
scas
lea
sub
stos
cmpsb
out
dec
xor
aaa
and
xchg
cltd
leavew
mov
movsl
mov
sbb
mov
incl
mov
sbb
sbb
outsb
stos
sub
mov
pop
test
and
push
mov
clc
mov
loope
sti
push
adc
in
mov
cmp
roll
les
jns
in
mov
mov
les
xlat
rcl
in
push
insb
mov
hlt
jge
mov
pop
inc
sub
push
stos
xor
inc
mov
jmp
or
fstpt
std
pop
lea
pushf
lods
cs
pop
jno
mov
outsl
cmp
sbb
ljmp
lcall
xchg
xlat
and
xor
data16
pop
lea
cli
xchg
lods
mov
sub
mov
fs
cs
outsl
loopne
insb
xchg
sub
mov
mov
mov
leave
mov
scas
inc
mov
xchg
aad
mov
jmp
mov
dec
pop
add
push
les
out
dec
arpl
pop
mov
jmp
sbb
loopne
cltd
inc
dec
sub
mov
fldt
cmp
das
jmp
mov
pop
int3
lcall
std
ret
sub
mov
shlb
adc
push
gs
jae
lds
rep
jmp
lods
or
sub
leave
xor
ficompl
in
stc
pop
or
shrb
xchg
push
out
enter
loopne
sbb
jge
stos
jle
in
fcmovnbe
ret
enter
mov
jl
enter
gs
movsl
movsl
xchg
fwait
xchg
sub
loopne
dec
mov
xlat
insl
fs
dec
mov
fistps
rol
aam
in
lods
pop
jmp
push
mov
addr16
mov
aam
adc
sub
aam
dec
lods
or
aam
adc
leave
sbb
push
daa
push
xor
mov
movsl
cmp
xchg
out
int
fst
fimuls
aam
adc
das
jne
pop
push
push
xchg
outsl
lds
aam
pop
hlt
out
int3
movsb
cwtl
jge
mov
shr
adc
andl
lods
push
adc
push
mov
adc
fildl
and
ja
sbb
call
mov
imul
add
inc
std
int3
shr
gs
cmp
lds
enter
out
mov
sub
pop
loop
lods
cmp
std
cmp
push
mov
fs
cmp
mov
mov
pusha
loop
mov
sub
mov
inc
jmp
test
xchg
cmpsl
bound
sarb
cmp
sbb
mov
sbb
cmp
fnsave
lods
mov
add
dec
mov
mov
xchg
push
sbb
mov
cmpsl
jp
inc
or
rorl
mov
sbb
rcl
mov
bound
dec
cmp
movsl
fisttpll
orb
pusha
dec
shlb
adc
xchg
addr16
mov
jne
jns
pop
adc
inc
call
shll
mov
push
fdivs
sub
sub
cmp
xchg
mov
enter
mov
and
or
sub
jl
test
mov
test
pop
adc
mov
xchg
aad
sub
lods
js
lods
mov
rclb
cwtl
mov
adc
scas
cltd
call
incl
cld
sub
clc
in
push
sub
sbb
movsb
movsb
cmp
sub
push
sub
sti
aaa
insb
cmpsl
arpl
pushf
sub
pop
mov
popa
mull
sbb
sbb
loope
mov
push
mov
mov
out
or
cmp
mov
dec
in
loope
xchg
mov
data16
jle
xchg
imul
mov
repz
aad
cmpsl
sbb
pop
cmp
xchg
mov
mov
dec
mov
jle
fisttpl
pushf
movsl
icebp
fistl
insl
mov
cmp
mov
loopne
repnz
sti
mov
cmovl
push
shl
and
add
scas
sub
fiaddl
stos
jo
js
and
add
loope
popa
adc
out
int3
insb
cmpsb
fildll
pop
xchg
insl
pop
mov
cmp
mov
test
popa
mov
push
aam
jle
inc
andb
insl
mov
nop
je
push
jmp
fdivs
add
xchg
stc
rol
cmp
stos
push
test
mov
push
cmp
mov
daa
int
add
jbe
push
mov
adc
aaa
outsb
cmpsl
push
jne
pop
les
orl
popf
xlat
insb
les
adc
data16
lock
mov
arpl
divb
sti
jb
cs
and
fdivs
xchg
lea
jns
call
xchg
sub
or
xchg
jl
rolb
cltd
rcrb
mov
and
fnstsw
out
dec
dec
loop
cmpl
test
adcb
mov
repz
mov
repz
rcrl
in
insl
mov
adc
std
stc
insl
movsl
sub
xor
icebp
mov
imul
aas
or
push
cmp
das
loop
dec
mov
adc
push
xlat
das
loope
push
sbb
rorl
in
leave
cmp
mov
ror
pusha
shrl
insl
sti
std
xchg
in
das
inc
mov
or
das
imul
stc
push
adc
sbb
cmp
icebp
cmp
mov
movsl
addr16
shl
xor
sub
mov
mov
std
xor
sub
push
xchg
pop
and
lods
mov
jle
sbb
sbb
inc
push
popa
pop
push
push
mov
mov
arpl
inc
lods
call
cmpsl
cmpsb
lods
xor
add
xlat
test
sub
xchg
out
into
inc
fs
add
add
dec
mov
xchg
push
repz
xor
in
mov
jno
repz
lret
icebp
in
push
scas
incl
mov
sbb
push
push
adc
enter
jmp
pop
xchg
cwtl
mov
mov
loopne
icebp
mov
xor
add
idiv
inc
xchg
inc
movsb
mov
pusha
or
pop
xor
pop
jmp
filds
cmp
mov
clc
mov
lahf
pop
pop
cld
cmp
nop
lods
into
nop
js
shll
mov
push
cmp
add
inc
loope
and
shl
lea
shll
bound
and
dec
bound
mov
fwait
mov
mov
sub
and
push
cmp
sti
inc
das
sub
inc
hlt
test
das
or
xchg
ret
mov
movsb
push
imul
xchg
mov
test
mov
shlb
adc
xchg
iret
adc
ds
fstl
mov
sub
cmp
fisubrl
push
je
cltd
lods
pushf
daa
inc
mov
std
pop
dec
stc
test
jp
iret
mov
pushf
hlt
push
nop
adc
cmp
push
cwtl
push
xchg
adc
loopne
nop
test
stos
adc
mov
lods
popa
call
js
add
inc
mov
cmp
cmp
mov
cmp
xor
dec
xor
subb
and
lret
flds
adc
push
push
lods
loopne
or
cli
xchg
jb
sysret
shll
cmp
cmp
movsl
pop
leave
inc
mov
inc
push
pop
jmp
xchg
xor
out
push
lods
push
lahf
or
jo
pushf
add
stos
xor
cmp
push
call
sbb
out
pop
jge
lds
dec
lods
mov
fstpl
js
lods
es
bound
dec
fstps
vmovdqa
sub
fnstenv
sbb
xor
fnstenv
mov
mov
pop
or
ret
int
pushf
push
mov
cmp
or
sub
lea
or
mov
adc
mov
lods
xchg
movsl
sbb
es
mov
std
fldl2t
and
adcl
inc
xorb
icebp
js
or
xor
inc
aad
mov
sbb
dec
andl
inc
enter
das
scas
pop
sbb
pop
dec
ja
clc
std
ret
data16
sbb
pop
lcall
fwait
xchg
insl
movsl
insb
add
fs
mov
int
roll
rcll
jmp
xchg
imul
sti
pop
loopne
test
sbb
add
pxor
aas
push
pop
adc
push
test
scas
inc
lcall
incb
jnp
pmovmskb
negl
bound
mov
arpl
add
mov
inc
clc
pushw
popfw
mov
inc
pushf
jmp
outsb
xchg
xchg
mov
clc
xchg
addr16
xchg
mov
inc
add
icebp
dec
ljmp
bound
pop
sub
jne
arpl
sbb
ret
adc
sub
inc
and
adc
mulb
imul
mov
test
mov
push
jmp
cmp
shr
or
add
lahf
or
add
jmp
xchg
btc
pushf
adc
bt
mov
inc
dec
sub
cmc
mov
bt
push
jmp
rcl
mov
or
call
dec
inc
xlat
fstp
mov
mov
xor
loopne
jmp
clc
pop
mov
std
cli
stc
lock
ret
or
dec
fs
sahf
out
stos
cmp
lcall
mov
inc
mov
call
outsl
xor
aaa
out
mov
dec
dec
arpl
mov
sub
std
std
cmp
daa
sub
psubw
mov
out
hlt
stos
stc
fldt
shlb
xchg
outsl
lods
sahf
clc
pop
mov
mov
jnp
test
subl
popa
jno
fs
xchg
dec
jle
outsl
sbb
mov
lcall
push
dec
es
das
and
in
dec
jmp
stc
into
pop
push
das
add
add
inc
or
mov
and
mov
int3
pop
fs
js
dec
cmp
pop
cmp
and
xor
cmp
dec
fadds
loope
popa
inc
jb
jle
inc
add
popf
push
lcall
push
dec
and
enter
xchg
push
mov
test
add
loopne
not
lods
jmp
lea
ja
dec
jmp
add
add
iret
jmp
sarl
cmp
inc
das
and
adc
mov
mov
dec
jnp
xchg
adc
inc
lds
sbb
and
pushf
adc
dec
scas
pop
lahf
cmp
daa
xchg
mov
loope
jge
stc
repz
pop
pushf
mov
lea
je
lea
jmp
dec
inc
in
push
mov
sbb
or
out
inc
inc
adc
lahf
imul
mov
inc
jp
fcomp
sti
movl
inc
movsb
push
dec
dec
dec
ja
xor
cmp
push
scas
xchg
xchg
sbb
pop
xor
mov
lret
iret
sbb
mov
pop
sub
adc
out
push
or
lcall
inc
inc
shl
mov
jg
lcall
mov
push
aaa
mov
mov
fwait
and
adc
imul
fs
jne
btr
btr
jmp
push
stc
cmp
pusha
push
call
jmp
lea
jbe
bts
ror
shld
sub
cmc
lea
mov
bswap
ror
rol
mov
shl
adc
sbb
xchg
add
clc
shr
cmc
not
mov
pusha
sar
sub
rcr
add
lea
mov
push
mov
not
setne
lods
pushl
mov
rol
pushf
xor
pushf
pushf
pushl
inc
bt
clc
movw
pushf
ror
lea
jne
push
push
dec
jmp
cmp
cmc
mov
pushf
test
call
ret
les
xorb
xchg
and
iret
daa
ja
or
cmp
xchg
add
mov
inc
xchg
cmp
or
in
or
mov
sub
pop
int
pop
test
sub
dec
mov
mov
cltd
cmp
jno
mov
aaa
jno
insb
outsl
jmp
ja
inc
scas
add
jmp
into
add
rcll
jmp
rorb
xchg
add
add
pushf
jmp
xchg
cmc
aaa
mov
or
pushf
mov
call
rcr
btr
test
mov
cmp
and
push
add
lea
pushf
pushf
test
stc
add
call
es
mov
imul
dec
movsl
lea
jae
outsb
adc
ja
jno
outsl
adc
xor
movsl
xlat
imul
ja
jge
adc
clc
push
jmp
lock
gs
adc
faddl
jmp
dec
inc
inc
pushf
not
setb
jmp
pushf
movl
jmp
pushf
lea
jne
call
push
jmp
out
jp
push
jecxz
lods
mov
xchg
out
out
mov
insl
jle
jecxz
pop
out
jge
cmpsl
bound
mov
push
fwait
jge
pop
nop
lret
push
scas
fisttpl
pop
jl
inc
sub
incl
test
inc
xor
cmp
leave
mov
push
mov
dec
inc
mov
xlat
movsl
mov
xor
push
xor
and
mov
jl
pop
jb
sub
mov
jo
push
stos
sbb
and
les
inc
and
push
in
scas
cltd
jmp
dec
push
push
push
clc
add
out
fnsetpm(287
cmpsl
rclb
adcb
cwtl
mov
xchg
lods
push
ljmp
jno
adc
rorl
inc
rcll
sbb
dec
les
jle
xchg
out
lret
push
sahf
popf
pushl
or
dec
and
pop
addb
mov
push
imul
push
jb
pop
push
xchg
dec
sbb
cmc
out
fs
mov
jle
iret
jle
pop
out
mov
sahf
rcr
iret
adc
pop
test
pop
pop
fists
pop
jp
pop
and
jno
add
mov
leave
add
push
in
ds
xor
push
mov
cli
aas
mov
xor
hlt
xor
fimull
lods
ss
shr
popf
lock
push
pusha
movl
jmp
lea
jbe
neg
inc
push
adc
mov
sar
not
add
sbb
adc
rol
mov
shr
rol
movb
shld
add
bts
shld
ror
movl
mov
mov
sub
call
pusha
pushl
movl
pushf
pushf
lea
jmp
pusha
movb
lea
call
pushf
lea
jae
pushf
lea
jae
pushf
stc
xor
mov
pushf
lea
call
call
lea
call
push
jmp
lea
jbe
jmp
pusha
pusha
movl
lea
jo
pushf
movl
push
pushf
movb
pusha
lea
jmp
jmp
call
lcall
sarb
pop
movsl
fsub
cmp
leave
adc
fdiv
sbb
push
test
call
pusha
cmp
mov
jle
push
mov
iret
es
mov
mov
lret
outsl
cmpl
mov
lds
mov
xchg
jae
add
inc
stos
and
cli
sbb
popl
test
xlat
cmc
sar
es
imul
int
decb
movsb
jnp
xchg
xchg
push
insb
rcll
push
jecxz
xchg
pop
je
sar
ja
cmp
popf
test
aaa
fildl
adc
mov
in
lcall
or
scas
pop
mov
push
fs
cmp
lcall
push
cmp
pop
xchg
imul
cld
jle
pop
fmuls
iret
inc
iret
pop
mov
jne
insb
mov
dec
mov
inc
xor
ljmp
dec
mov
scas
lods
push
outsb
das
movsl
leave
lret
dec
mov
sub
lret
repnz
test
gs
pusha
std
cli
mov
repz
sub
sbb
dec
mov
add
and
add
pusha
cmc
movb
jmp
inc
push
push
mov
movw
lea
jmp
test
cmp
pushf
lea
je
pushf
mov
lea
jmp
movw
cmpb
call
lea
ja
inc
inc
inc
jmp
stc
test
call
pusha
jmp
sahf
add
aaa
mov
adcb
jmp
out
or
imul
pop
push
rol
popa
or
xor
stos
xchg
cmc
cltd
int
movsl
cmc
add
jle
adc
sbb
aaa
xor
lods
push
enter
imul
sbb
inc
iret
fidivl
negl
inc
xchg
int
or
xchg
xchg
fisubl
shrb
adcl
enter
cwtl
push
or
movsl
cmp
xor
adc
gs
xchg
jnp
in
jne
test
and
and
push
orb
pop
mov
push
mov
ret
cmp
jno
mov
ljmp
mov
daa
int
cli
jg
dec
ds
stos
ds
sbb
or
lret
or
popa
lret
btc
das
stos
mov
in
inc
out
je
jg
out
js
lret
xchg
adc
jg
xchg
dec
lret
jbe
les
add
add
xor
dec
dec
fisubrs
xchg
aas
cmpsl
fwait
xchg
gs
or
out
jp
add
fs
call
xor
pushf
inc
jmp
adc
mov
pop
scas
lahf
jle
add
mov
add
xchg
mov
out
out
cmp
out
inc
mov
inc
fmuls
or
sub
aam
dec
jg
add
mov
push
adc
lock
pop
nop
fisubs
aad
fidivl
imul
push
jo
movsl
sbb
mov
mov
mov
test
popa
stos
nopl
or
scas
mov
aaa
loope
cmpsl
dec
fdivs
and
mov
int
fisttpll
pop
inc
pop
cmpb
or
jnp
xchg
mov
cmp
push
or
add
scas
outsl
popf
push
and
mov
sub
sbb
bound
jge
sub
push
mov
ret
sbb
jmp
adc
cwtl
test
imul
popf
cmpsb
aad
nop
jge
or
lret
enter
gs
xchg
push
out
mov
scas
aas
scas
rolb
hlt
or
and
sbb
push
cmpsl
test
addl
mov
outsl
jmp
lret
adc
ljmp
call
mov
insl
or
test
or
and
scas
clc
sub
pop
mov
push
dec
and
lds
int
pop
rolb
call
dec
jns
push
aad
or
pop
gs
add
inc
sbb
sbb
sbb
or
gs
lea
dec
daa
adc
mov
popf
pusha
lahf
aaa
pop
push
mov
and
int3
jp
sub
aas
and
in
fsub
mov
repnz
leave
popf
lock
jg
iret
sbb
inc
outsl
xchg
inc
dec
jge
popa
push
sbb
lcall
inc
lock
push
mov
push
lds
inc
push
inc
xor
or
or
addr16
insl
sub
test
test
adc
leave
cwtl
scas
lods
xor
fstl
mov
rcrb
pop
push
or
and
in
shrl
pushf
mov
push
shrl
lahf
stos
gs
imul
adc
jp
mov
sub
sbb
jb
scas
inc
dec
add
mov
adc
push
sub
popa
and
rorb
arpl
lods
ja
out
inc
sub
popf
popa
popf
lret
jo
gs
in
test
jg
outsl
mov
cmc
into
sub
adc
xchg
adc
pop
add
xor
adc
jge
shlb
mov
in
outsl
pop
jge
cmc
dec
mov
lcall
jo
sbb
out
xor
pushf
pop
inc
xchg
jne
test
cmp
mov
enter
outsl
push
push
cmpsl
daa
pusha
mov
mov
adc
mov
gs
push
inc
or
xchg
pop
gs
outsl
mov
dec
test
mov
jne
aad
orb
in
mov
jmp
bound
scas
add
mov
or
scas
movsl
lea
in
pop
cmc
imul
adc
lea
xor
jne
push
adc
lea
sbb
sbb
imul
inc
xchg
adc
jl
jo
pusha
dec
xchg
jmp
jo
adc
outsl
das
jg
mov
je
add
dec
sub
lahf
push
popf
sbb
adc
mov
daa
scas
call
add
jo
shlb
popf
addr16
rclb
pop
aas
sbb
stos
andb
loop
push
pop
jge
xchg
call
jge
in
outsl
add
aas
mov
cmc
inc
lods
rorl
leave
fsubr
or
xchg
or
pusha
js
xor
outsl
outsb
fstl
fldl
jo
pop
dec
lock
fldl
outsl
addl
sub
and
lahf
add
dec
mov
aaa
jl
insl
sbb
or
pop
mov
adc
loopne
jnp
rcrb
sarb
leave
icebp
xor
cli
out
loopne
enter
push
add
jne
loop
js
in
pop
lds
int
in
in
mov
sbb
int
sbb
outsb
jo
mov
pusha
popl
add
into
sbb
fisttpll
fiaddl
aad
pop
aad
rorb
adc
sbb
pop
flds
add
adc
xor
pop
jge
dec
sbb
loopne
pop
int
adc
out
outsl
outsb
pop
push
mov
orl
in
or
iret
movsl
xchg
ja
jo
addb
fildll
unpckhps
or
call
add
and
mov
or
incl
aad
jne
sbb
lds
clc
sub
jo
dec
jge
mov
or
into
sbb
inc
or
inc
push
int3
shlb
mov
int3
subb
mov
dec
lcall
mov
stos
shlb
fdivs
das
leave
das
mov
fs
push
jno
mov
in
lea
adc
fmuls
movsl
ret
jg
scas
sbb
orb
mov
sbb
lea
dec
xor
dec
jo
jl
mov
int
add
or
push
jne
dec
jne
dec
aam
cmp
sahf
jg
push
call
push
fsubs
jp
sarb
dec
mov
into
sbb
inc
or
dec
xor
push
dec
jge
dec
pushf
mov
jge
stos
mov
rolb
insb
fnstsw
sbb
jge
aam
or
rclb
and
and
or
aad
pop
movsl
rcr
and
rcr
nop
push
std
insl
hlt
adc
add
mov
mov
jo
das
es
aad
inc
adc
lock
int3
aas
out
mov
std
adc
insl
outsl
mov
mov
pop
adc
xchg
dec
sbb
int
sbb
sbb
dec
aad
in
movsl
pop
mov
adc
test
jne
dec
subl
and
or
fcom
push
movsl
jmp
adc
sub
pop
fwait
sbb
addr16
les
jb
inc
shlb
sub
outsl
popf
add
into
int
loopne
push
js
cmc
cwtl
insb
outsl
in
iret
mov
lods
mov
gs
outsl
aas
insb
xchg
cmc
mov
push
int
cmp
pop
inc
sub
xchg
into
lods
popf
or
aad
add
js
in
test
movsl
dec
pop
dec
lds
jp
dec
sub
outsl
jnp
push
lret
sbb
jne
das
xchg
jo
pop
mov
adc
xadd
or
movl
insl
insb
xor
dec
inc
insl
add
int3
inc
sub
das
cmovb
cmp
jns
xor
xchg
pop
pop
enter
pop
jge
pop
shll
mov
data16
sbb
sbbb
jge,pn
jns
jg
insl
cmpps
cmp
dec
adc
dec
mov
mov
lods
xor
dec
pusha
mov
push
inc
inc
or
js
cltd
js
pop
dec
cli
insl
push
inc
pusha
inc
sub
sub
jg
mov
call
cmp
test
inc
jp
ljmp
addr16
or
arpl
xchg
cwtl
fists
xchg
sub
in
cmpsb
gs
lea
lock
jp
inc
push
outsl
test
insb
outsl
and
mov
xor
cwtl
xchg
loopne
scas
insl
icebp
and
shlb
mov
mov
in
std
cld
cmp
rcrb
pusha
daa
jo
and
cmc
jl
clc
outsl
sub
mov
inc
mov
int
gs
and
cmp
lret
daa
outsl
or
lea
sbb
inc
int
or
test
int
stc
lret
das
adc
xchg
decl
mov
add
mov
clc
insb
adc
adcb
std
nop
sbb
out
in
lahf
push
sarb
pop
inc
test
lods
ss
mov
rclb
shll
outsb
je
sti
pushf
andl
jb
int3
pusha
sub
sub
xchg
sbb
addb
dec
mov
adc
pusha
adc
lcall
dec
jg
popf
mov
addb
cwtl
adc
xor
fwait
inc
test
bound
daa
or
lea
lods
test
fnsave
mov
imul
mov
iret
pop
sub
mov
mov
in
or
jnp
leave
mov
lds
push
pusha
fsubrl
adc
cwtl
fiadds
push
lea
sbbb
aas
iret
lret
mov
mov
mov
shl
jne
pop
rcl
int
and
fsubs
pop
lret
frstor
add
out
in
add
pushf
daa
jo
mov
jge
pop
and
popf
hlt
jmp
test
adc
jne
outsl
in
outsb
scas
mov
jg
ja
xchg
xlat
adc
pop
sbbb
out
test
call
push
cmp
add
mov
fcmovnu
cmpsl
ror
adc
push
popa
sbb
inc
lods
xchg
pop
lea
xor
sar
cmp
pop
or
and
int3
xor
enter
mov
std
int3
cwtl
cmp
sahf
mov
lods
jmp
cmp
adc
pop
adc
subl
sbb
sbb
pop
jp
adc
add
loopne
pop
insl
mov
or
jge
movsl
enter
pop
sbb
nop
sub
imul
nop
inc
lock
xchg
jge
inc
in
daa
fs
mov
fidivrl
subb
fwait
das
inc
popf
push
mov
pop
xorl
lret
das
stos
dec
jg
mov
int
and
sbb
or
daa
mov
mov
call
cmp
outsl
fwait
lea
lock
push
pop
sbb
outsb
add
jg
sbb
and
shll
ror
inc
pop
xchg
mov
dec
push
imul
stos
dec
jg
dec
pop
int
mov
int
nop
loope
mov
pop
jge
xor
add
sbb
imul
outsl
nop
pop
xchg
out
loopne
lea
popf
xor
inc
pusha
lds
push
sbb
pusha
cld
scas
movsl
sbb
iret
mov
dec
subl
add
mov
and
imul
sbb
mov
daa
in
test
or
sbb
or
lds
mov
mov
ljmp
dec
mov
fdivrs
push
sbbl
push
sbb
dec
sbbl
stos
sbb
ds
push
sbbl
cmp
test
pop
mov
xchg
push
pop
movsl
inc
orb
add
pop
mov
inc
rolb
out
or
or
imul
mov
dec
test
cmp
push
stc
ret
enter
lock
mov
sub
add
sbb
sbb
pop
loopne
cmp
mov
jo
dec
cmpsb
aam
push
add
pop
fmuls
fsubrs
lea
sbb
filds
aaa
mov
inc
fs
stc
pop
lods
adcb
pop
or
pop
add
ja
aaa
adc
xchg
jns
cltd
je
or
sbb
dec
imul
adc
cmp
push
jnp
mov
scas
push
cmpsl
roll
test
xor
xor
pop
or
mov
mov
loopne
mov
test
xchg
and
out
mov
arpl
hlt
dec
pop
je
sub
mov
push
xchg
jbe
mov
and
sbb
mov
bound
je
jns
cmp
push
mov
sbb
pop
mov
popf
xchg
cmc
movq
pop
js
inc
mov
inc
fildll
adc
pop
das
push
lods
insl
jnp
dec
add
imul
out
nop
insb
aam
pushf
movsl
and
enter
inc
push
lds
scas
or
loope
cmc
pusha
xor
dec
rclb
dec
and
dec
or
leave
cmp
scas
jo
jg
negb
dec
or
cmp
std
push
int
rcrb
dec
fadds
fmuls
das
sub
imul
lcall
inc
dec
dec
lcall
xchg
stos
push
test
push
popf
jae
leave
scas
aad
std
daa
cli
inc
jp
clc
dec
cmp
sub
popf
ljmp
or
gs
push
imul
gs
bswap
popf
data16
pushl
stc
popf
lods
or
lock
mov
add
inc
xor
insl
in
insl
insb
adc
insl
aad
repz
mov
in
add
mov
insb
addr16
xor
jge
loopne
outsl
mov
dec
pop
lods
dec
lea
and
mov
aad
cmp
dec
pusha
test
push
adc
lea
sbb
imul
or
movsl
lea
sub
nop
rorl
push
or
or
sbb
dec
pop
enter
movsl
or
clc
lds
lods
leave
aas
lea
mov
pusha
xchg
and
jg
rolb
adc
cwtl
enter
gs
roll
jae
xor
clc
fimull
lods
bswap
outsl
dec
fmull
cmp
scas
add
lgs
clc
and
imul
pusha
pop
xor
and
ljmp
fstpl
jp
sbb
jge
dec
data16
js
aad
xchg
sbb
cld
mov
daa
mov
sbb
gs
dec
stc
add
adc
loop
sbb
ret
inc
mov
and
int3
clc
fidivrl
pop
popa
gs
or
sub
inc
sbb
arpl
and
sbb
out
sbb
xchg
sbb
jne
mov
jge
add
add
sbb
and
dec
in
mov
dec
aad
adc
xchg
sub
int3
sbb
add
adc
push
jle
ret
sbb
lds
inc
jmp
rcrb
mov
mov
cli
dec
xchg
sahf
test
inc
aas
mov
or
sub
aad
cmp
leave
dec
out
jge
add
cmc
adc
dec
sbb
sub
lock
push
fiaddl
test
lret
jb
and
mov
cltd
movsb
aas
fidivl
ffreep
iret
jne
jl
in
movsl
jecxz
mov
lock
sbb
call
cmp
and
cmpb
dec
push
pop
inc
mov
jb
int
shrb
mov
pop
lds
add
pop
add
dec
jne
or
or
inc
out
enter
mov
test
lds
inc
cltd
and
mov
das
mov
pop
gs
inc
pop
js
scas
cmp
jp
mov
inc
mov
rorb
mov
mov
pushf
iret
lea
push
adc
jg
inc
pop
inc
jmp
imul
pop
aad
mov
pop
sahf
daa
imul
shlb
inc
test
iret
push
push
fldl
cmpl
jne
leave
and
mov
loopne
jg
daa
xchg
cmp
cmc
lea
jne
jne
mov
lods
xchg
add
mov
insl
sbb
mov
jge
sbb
cmpl
insl
adc
sbb
mov
pop
lds
mov
insl
mov
sbb
minps
adc
outsl
and
mov
inc
loopne
test
lea
mov
or
loopne
jnp
clc
dec
rcrb
push
mov
shr
in
in
nop
or
int
mov
or
mov
xor
frstor
lock
mov
sarl
sbb
sub
push
cmc
jg
dec
clc
push
enter
fldcw
lods
dec
xor
sbb
clc
lcall
fcomps
add
xchg
or
daa
lods
lahf
pop
sub
inc
aad
pop
sub
jne
sbb
les
lods
sbb
test
std
mov
das
int
loope
lods
aas
aaa
out
dec
loopne
rep
push
cmc
imul
fwait
pop
in
rclb
jbe
dec
jecxz
mov
aas
movsw
lock
roll
cmp
stc
jg
pop
orl
and
mov
or
es
mov
adc
cwtl
dec
cmp
clc
movl
ss
jg
or
dec
add
movsl
ds
ja
test
mov
movsl
sbb
jne
outsb
add
int
fisubrl
lret
imul
rcrb
mov
sbb
sbb
xchg
adc
test
adc
movsl
jo
mov
out
rcrb
xchg
jge
mov
sbbl
ja
nop
mov
and
dec
add
xchg
sbbl
mov
sub
sbb
insl
add
sub
sbb
dec
pop
call
mov
inc
push
and
add
mov
clc
xor
mov
lock
sub
cmp
sub
in
pop
shl
call
sub
or
adc
lods
in
loopne
ja
fadd
sarb
cmpsl
std
test
cmp
inc
andb
pop
cwtl
dec
add
pusha
push
daa
jne
cli
lcall
repz
lea
pop
jo
int
int
pop
inc
test
push
dec
js
pusha
test
nop
imul
and
icebp
dec
cmp
std
fstpl
inc
imul
push
dec
mov
and
inc
dec
movsl
lea
xor
ljmp
sbb
js
pop
push
dec
cwtl
lea
enter
or
jne
pop
push
dec
test
imul
push
dec
nop
xchg
in
lret
sbb
stc
push
sub
xchg
leave
sbb
lds
fwait
cmpb
pop
sbb
test
push
dec
push
mov
dec
enter
add
stc
outsl
and
add
scas
or
xchg
leave
repz
jecxz
fnstsw
jge
mov
mov
push
adc
jns
sbb
lds
insl
testl
mov
inc
xchg
sbb
int
fists
add
add
sub
pushl
jo
or
rorl
mov
pop
adc
lcall
sub
aaa
adc
adc
mov
adc
movsl
mov
in
adc
adc
jnp
adc
rcll
adc
ficoml
adc
addr16
pushf
inc
dec
sbb
dec
lock
mov
scas
mov
jmp
sub
dec
test
dec
and
gs
shrb
out
jge
adc
dec
or
sub
adc
movsl
les
inc
push
mov
dec
mov
dec
mov
pop
inc
or
push
adc
dec
add
rclb
sarb
repz
mov
in
dec
push
mov
les
je
sbb
mov
in
test
pop
mov
mov
les
sbb
push
lds
leave
dec
lahf
popf
in
sub
inc
dec
or
xor
int
inc
dec
imul
or
fstpl
sbb
lods
test
shlb
sub
xchg
gs
cmp
es
fdivrs
std
sbbl
gs
daa
rcll
add
sub
lahf
pusha
fcomp
in
add
clc
lea
inc
or
adc
jp
test
lcall
xchg
lcall
or
cmc
jo
popf
cltd
je
xchg
clc
xchg
xchg
dec
xchg
cmp
insl
sub
int
pop
out
dec
rcr
sub
inc
in
cltd
int
cwtl
cmp
dec
xchg
rolb
mov
int3
xor
push
dec
test
mov
cmpb
xor
test
xor
in
pop
or
test
insl
test
and
xchg
add
nop
cwtl
lahf
add
or
dec
std
lahf
add
mov
aas
dec
add
jmp
add
les
xchg
aad
insl
jnp
cmpsb
lock
pop
xchg
pop
cmp
xor
insb
call
lods
int
adc
out
daa
hlt
insb
cli
and
loopne
out
push
pop
std
sbb
popf
inc
loopne
lret
pmulhw
comiss
imul
pop
and
sub
or
repz
sbb
scas
mov
or
or
push
or
mov
ret
imul
js
mov
jo
loopne
xchg
jo
xchg
cwtl
sub
popf
gs
and
js
in
das
cltd
mov
inc
inc
mov
push
sbb
lcall
pop
cmp
jge
cltd
mov
pop
aad
xchg
push
jg
dec
fidivs
inc
sbb
test
push
aad
or
aad
xchg
cmp
loopne
inc
cmc
leave
cwtl
xchg
sbbb
jmp
xchg
sbb
sub
cmpl
jb
sbb
mov
xor
jb
test
and
mov
daa
nop
daa
sti
push
in
subl
mov
sbb
in
cmc
push
pop
std
add
dec
insl
fiadds
insl
nop
xchg
inc
cwtl
mov
dec
inc
sbb
mov
outsl
xchg
mov
or
or
scas
and
imul
xchg
scas
das
arpl
mov
in
or
popf
popf
js
pusha
sbb
jg
jg
insl
ficoml
cwtl
dec
add
cltd
ljmp
pop
sub
jge
jp
lods
fldl
jne
mov
shrb
push
int
aad
inc
or
jo
ficoms
xor
pop
pop
clc
jp
mov
jp
jge
lock
cmp
pop
clc
jmp
or
jne
pop
pop
dec
push
mov
push
stos
lea
lock
jg
pop
xchg
test
inc
in
pop
add
dec
js
jge
sbb
or
push
pushf
mov
jge
dec
push
pop
lods
ljmp
daa
pop
rcll
jnp
or
add
in
insb
lods
out
shr
dec
rcrb
fadds
pop
dec
pop
test
test
inc
lea
push
sbb
test
or
push
lea
cmp
test
rorb
shlb
or
lea
test
push
dec
adc
imul
or
in
aad
sbb
test
push
jnp
outsl
mov
in
int
cmp
dec
pusha
test
xchg
lea
imul
fdivrs
imul
pop
lods
lahf
adc
mov
rcrb
aad
adc
test
adc
jge
pop
mov
int
pop
cwtl
test
push
dec
aas
jne
insl
imul
cmc
dec
aad
inc
sbb
push
imul
jne
lea
sbb
test
push
dec
push
mov
dec
loopne
jnp
fimull
dec
lea
lds
test
push
dec
js
pusha
nop
sbb
jne
or
clc
dec
leave
daa
pop
sbb
pop
push
dec
lea
imul
push
dec
mov
shrb
dec
sbb
lods
push
dec
in
xchg
sti
lahf
test
test
incb
lock
mov
int
std
xlat
cmp
pop
cmp
or
mov
sbbb
cmpsl
adc
sbb
gs
jae
rcl
roll
cmp
test
lds
fmuls
int3
cmp
js
xchg
or
aad
movsl
push
add
xlat
push
adc
pop
sbb
sub
pushf
push
inc
xchg
mov
inc
in
jno
sbb
xor
shlb
dec
mov
dec
dec
test
dec
dec
or
lds
pop
dec
nop
lar
mov
cmp
mov
jge
outsl
push
jecxz
lock
mov
push
add
jnp
lods
into
push
sbb
data16
test
leave
jo
adc
lock
fwait
jne
outsl
and
jae
outsl
inc
cmpsl
sbb
dec
mov
cmc
les
scas
jge
mov
int3
adc
out
mov
shlb
shrb
test
inc
fmuls
aas
pop
add
int3
lea
or
cmp
xor
int3
call
out
pop
jo
pop
lods
aad
jne
cmp
dec
shr
jbe
cmpsb
inc
jo
out
leave
std
pop
mov
ret
lds
lahf
cmpl
decl
mov
jo
subb
cltd
fwait
inc
push
incb
pusha
pop
test
pop
nop
adc
nop
pushf
bound
push
fistl
jae
inc
cli
aad
in
xor
jmp
nop
xchg
jns
outsl
jmp
push
sub
enter
fs
aas
sbb
shl
das
leave
lods
ja
std
sbb
jne
jne
jmp
push
gs
or
mov
loopne
pop
cwtl
and
fdivrp
dec
sbb
loope
shrl
ret
std
pop
lds
repnz
dec
pop
pusha
pop
std
sbb
rorb
mov
sti
dec
cmc
cltd
inc
daa
stos
int
pusha
stos
pop
rcrb
stos
jg
pop
mov
pusha
push
fldl
sbb
fwait
or
add
jae
int
mov
adc
scas
adc
popf
xor
loopne
popf
mov
or
sub
rclb
pop
xor
add
sub
std
imul
into
cli
jo
inc
repz
push
and
xchg
dec
xrelease
shrl
dec
outsb
lea
mov
jae
stos
imul
dec
and
mov
shrl
dec
lea
sbb
imul
stc
add
fwait
xchg
mov
das
or
lea
lods
outsl
mov
dec
adc
out
aas
mov
rcrl
and
pop
shr
add
inc
insl
dec
mov
subl
subl
je
out
jae
lahf
add
push
adc
mov
sub
adc
mov
shlb
inc
insl
jge
sbb
in
push
adc
test
lahf
in
insl
sti
imul
aas
sbb
mov
or
insl
std
imul
cltd
stc
scas
enter
movsl
mov
lea
push
sub
aas
testl
int
or
mov
sbb
shll
sti
das
dec
enter
mov
sbb
leave
shlb
pop
cli
pop
dec
pop
int3
aas
pusha
ret
pusha
xchg
stos
in
stos
outsl
push
dec
pop
xor
popf
addb
mov
nop
adc
insb
mov
in
cltd
stos
dec
and
mov
shl
adc
test
sbb
inc
leave
insl
in
or
lahf
out
pop
sbb
lock
xor
fldt
popa
jne
or
mov
cmc
xor
scas
xor
push
xchg
clc
sbb
aas
add
xor
xor
add
pop
push
insb
jp
jg
jg
mov
icebp
jp
inc
fwait
sbb
inc
adc
jno
repnz
jo
xchg
mov
or
xchg
lock
jno
fsubrs
sbb
adc
or
dec
or
inc
push
dec
or
cmp
mov
add
cmc
dec
xchg
addl
in
sbb
sub
in
pop
cmc
mov
orl
push
sub
mov
xchg
lds
js
out
fimuls
xor
inc
mov
dec
test
test
cmc
nop
inc
das
pushf
test
fstl
bswap
daa
repz
cmc
mov
sbb
jo
jmp
lea
jge
cwtl
std
push
std
scas
movsl
sbb
jge
lods
push
dec
aad
std
rcl
aad
adc
jne
movsl
pusha
sbb
push
sbb
insl
out
jmp
and
push
lock
insl
scas
and
pop
incl
stc
pushf
int
outsl
popa
insl
mov
call
addr16
pop
mov
xor
add
jg
pop
daa
imul
inc
ds
sub
inc
add
pop
pop
int3
jge
fsubr
mov
add
outsl
mov
inc
mov
sbbl
sbb
push
jb
divb
out
and
and
cmpsb
pop
mov
xchg
adc
push
mov
inc
xor
fwait
aaa
xorl
pop
aaa
pop
dec
out
mov
cmp
andl
pop
mov
jecxz
cmpsl
sarb
incl
adc
add
xchg
add
arpl
stc
or
mov
int3
push
mov
inc
push
dec
dec
lea
sbb
adc
jp
adc
adc
test
pop
cmp
cmpb
stos
imul
push
cli
jg
sub
int
popf
insl
mov
pushf
addr16
or
sbbl
mov
push
ror
in
pop
rcl
lret
mov
fstpl
cs
fadd
aad
push
pop
rcr
sbb
push
call
test
or
xchg
fdivs
insb
ret
push
dec
pop
sbb
mov
add
daa
pop
push
in
mov
and
push
jge
imul
add
xchg
bound
or
push
in
mov
les
xchg
jns,pt
lods
test
mov
jge
push
loop
adc
push
push
adc
pshufw
leave
cwtl
arpl
cmc
sbb
jne
pop
test
int3
mov
dec
or
mov
mov
lea
push
in
lret
nop
mov
mov
bound
mov
lahf
xchg
xchg
and
xor
leave
fxch
idivl
addr16
cmc
adc
scas
mov
test
in
shrb
stos
daa
jg
mov
aaa
andb
popa
rclb
or
mov
pop
mov
xchg
adc
mov
daa
fbstp
jp
mov
test
inc
pop
push
cmpl
aad
into
fnstenv
lods
mov
jg
cmp
popa
ss
cmp
cltd
into
loopne
dec
sub
mov
mov
jmp
fisubs
scas
stos
or
and
dec
aam
mov
data16
mov
inc
mov
add
xchg
push
stos
pop
cmp
inc
mov
xor
test
ja
pop
jecxz
paddb
mov
dec
add
add
jg
lahf
sbb
iret
aad
xor
dec
ror
subb
xchg
aaa
into
inc
ja
inc
frstor
jl
aad
aad
and
inc
hlt
test
sbb
stos
test
adc
ffree
shr
mov
test
sub
inc
pop
mov
mov
jns
adc
pop
push
lahf
cmp
mov
ljmp
and
pop
mov
cbtw
in
lods
aaa
xor
test
dec
jae
jb
ud2
push
and
lds
sub
aaa
cli
xor
jecxz
push
inc
cmp
or
ja
je
xchg
aaa
cltd
adc
mov
movsb
js
addl
cmovl
lods
adc
mov
push
push
ret
jg
scas
pop
adc
faddl
mov
lods
insb
test
idivl
dec
dec
int
pop
movsl
sub
sub
jmp
jno
push
je
fadds
js
xchg
imul
mov
sbb
test
mov
inc
or
ret
movsb
mov
lds
outsl
jmp
adc
fnstenv
test
cltd
add
jne
jbe
pusha
push
int
xchg
insl
out
pop
pop
lea
pushf
xor
pop
jb
add
inc
and
sar
popf
sar
or
inc
aad
sub
into
or
es
loop
mov
dec
ret
incl
aas
sbb
push
and
fstps
inc
call
add
ljmp
lahf
aas
aas
fsubp
and
js
cmp
insb
call
mov
mov
popf
outsl
lahf
or
add
push
aas
into
and
leave
adc
push
xor
popa
and
orb
insl
lcall
in
insl
fdivrs
outsl
rolb
out
mov
adcb
sbb
sub
cmp
addr16
push
daa
cwtl
xchg
orb
adc
cmp
imul
std
mov
popf
inc
and
rcrl
insb
popf
or
inc
xchg
xor
incl
lods
lcall
mov
adc
add
out
gs
imul
adc
rorl
or
dec
js
sub
sub
cmp
popf
xchg
cmc
or
inc
std
shr
mov
sbb
outsl
mov
dec
gs
scas
dec
and
jae
stos
test
lea
pushw
add
dec
push
xlat
popf
lods
gs
daa
sbb
aad
jne
insl
jne
sub
xor
pop
aad
adc
inc
add
dec
mov
ss
cmc
stos
adc
mov
in
jp
icebp
loope
or
or
xchg
aas
daa
cmc
inc
jo
rorb
loope
sbb
sbbl
push
aas
into
ss
sbb
push
ficoml
cltd
insl
adc
mov
push
lods
movsl
insl
dec
add
lods
loope
insl
movsl
cmova
movsl
inc
adc
push
fstpl
xor
jge
and
fadds
or
xchg
fisttpll
or
jecxz
lods
les
lds
shrl
dec
in
loop
frstor
mov
jl
xchg
inc
aad
repz
xor
loopne
jne
pop
lret
ficompl
adc
mov
insl
iret
ret
ja
loope
adc
mov
or
or
nop
lds
movb
xor
mov
and
pushf
or
xchg
shr
call
push
lea
rolb
mov
pop
out
daa
sahf
xchg
lods
sbb
or
push
popf
je
nop
add
or
jno
nop
and
sbb
sub
adc
stos
std
in
test
mov
scas
adc
adc
inc
jl
adc
adc
push
mov
sub
sub
arpl
push
add
add
jae
xchg
ror
and
pop
lea
rorl
test
ljmp
popa
mov
lock
inc
jge
int
push
bswap
and
cli
pop
jecxz
push
jo
pop
pop
mov
xor
orb
rcrb
lds
and
pop
sub
rorb
in
cmp
sbb
push
push
mov
mov
pop
das
xor
gs
adc
jmp
inc
inc
and
xor
mulb
or
cmp
mov
test
sbb
sbb
aaa
sbb
dec
test
sbb
adcb
stos
lods
lods
insl
push
insl
ret
fisttps
sub
xchg
aaa
dec
jnp
cmp
sbb
outsl
pop
inc
inc
jg
fdivr
xchg
pusha
or
ds
fsubrs
fsubs
jmp
orl
pop
aaa
test
cmp
out
icebp
inc
lods
enter
out
xchg
movsl
in
mov
fbld
mov
adc
or
ja
gs
or
cli
gs
lods
jno
push
add
adc
pop
aad
pop
adc
dec
add
push
lock
lcall
cwtl
cwtl
lods
jae
inc
in
popf
nop
outsl
add
xchg
aam
test
and
or
mov
inc
frstor
lahf
push
mov
jmp
insl
inc
gs
adc
outsl
fstpl
inc
rolb
mov
aas
pop
jne
sub
in
das
pusha
xor
sbb
pop
ljmp
or
dec
test
pusha
or
sub
ss
mov
xchg
inc
insb
adc
test
add
jge
adc
xor
lods
mov
or
rorb
mov
dec
in
mov
or
mov
mov
or
or
arpl
scas
icebp
adc
insl
dec
mov
shrb
cmp
or
sub
mov
in
inc
xchg
dec
sti
adcb
inc
or
push
sub
in
push
enter
insl
push
mov
sub
mov
inc
popf
dec
or
loopne
movsb
loopne
pusha
xlat
orb
sub
push
jne
stos
jae
adc
shrl
pop
lea
and
stos
pop
popa
xor
nop
adc
or
loope
mov
jae
cli
pop
fwait
jo
or
sbbb
sbb
sbbl
add
fadds
cmp
or
xchg
inc
cmc
and
movaps
pop
icebp
push
mov
xor
xor
frstor
pop
adc
mov
fwait
mov
and
shll
std
or
sbb
mov
dec
xchg
and
js
and
mov
sbb
pusha
pushf
xor
mov
pop
jae
addr16
inc
mov
fstpl
inc
test
cmp
push
cmp
inc
nop
nop
sbb
mov
or
or
xlat
nop
cmp
jb
clc
addl
rolb
nop
nop
lret
mov
fs
call
int
jg
mov
jne
or
clc
adc
mov
fcoms
sahf
add
cmp
sub
lock
mov
mov
in
clc
xor
cmp
mov
xchg
lcall
shll
jo
mov
int
jno
jbe
adc
dec
int
pop
fmuls
jnp
stos
in
mov
std
push
sbb
lods
push
or
test
pop
and
int3
xchg
adc
xchg
xchg
mov
push
sub
and
negb
lods
mov
push
out
enter
add
jo
lods
decl
push
and
mul
call
mov
das
or
outsl
popf
dec
aad
add
movsl
lret
pop
loopne
inc
int3
or
mov
in
int
mov
xor
mov
dec
icebp
roll
xorl
mov
mov
adc
mov
cmp
fadds
lret
ficoml
add
add
gs
push
scas
andb
cmp
mov
dec
outsl
pop
inc
sub
pop
imul
adc
test
insl
mov
std
lock
or
outsl
cwtl
arpl
xchg
rolb
dec
dec
and
pop
inc
int
insl
dec
add
mov
leave
int
xor
adc
stos
loopne
jge
push
or
adc
jns
int
icebp
cwtl
sub
in
adc
sahf
out
clc
andb
fcomps
sub
adc
nop
stc
out
fstl
rclb
push
pop
xchg
and
in
xchg
sbb
inc
mov
pop
push
and
sub
push
pop
das
unpcklps
sbb
movsl
mov
push
inc
sbb
sbb
or
sbb
in
dec
sbb
add
rcrb
lds
push
nop
jo
gs
pop
mov
push
xchg
gs
cmpsl
sub
mov
push
or
sub
gs
stos
adc
pop
cmpsb
lea
add
dec
mov
jo
sahf
pop
or
addr16
xchg
cmc
ljmp
or
jne
cmpb
cmp
lahf
nop
push
xchg
call
and
cmp
nop
not
add
rorb
nopl
xor
inc
jne
mov
xchg
daa
aas
inc
push
cmc
cli
loopne
test
mov
int
or
sub
inc
call
sub
aas
mov
lea
and
fnsave
cli
jo
mov
shlb
sub
movsb
jns
insl
adc
rcrl
insl
xchg
subl
cltd
sbb
in
stc
mov
mov
adc
insl
xor
add
cmp
ljmp
movsl
push
sbb
add
imul
in
lods
les
sbb
das
in
insl
or
js
or
adc
push
int
or
push
lcall
add
xor
dec
push
pop
fsub
xchg
int
adc
fcoms
xchg
mov
popa
insl
inc
lock
mov
push
and
mov
pop
sbb
mov
insl
jnp
add
out
inc
std
sti
cli
lea
popf
inc
call
xor
xchg
adc
cmp
int3
xor
popa
lock
shrb
xchg
bound
adc
inc
jbe
aaa
sbb
jmp
push
std
xor
and
cmpl
add
stos
imul
adc
add
mov
jo
sbb
and
adc
mov
jne
mov
jo
dec
fistl
fbstp
addr16
lock
jl
jmp
mov
jl
mov
adc
jo
adc
adc
shrl
ja
pop
mov
mov
cwtl
sub
jle
enter
sbb
sub
and
test
mov
repz
or
adc
shr
jns
xchg
popf
jp
adc
andb
dec
addr16
pop
mov
pop
mov
xor
jne
inc
aaa
test
inc
lea
in
outsl
shl
sub
pop
xor
pop
mov
jmp
mov
nop
jne
movsl
imul
cmp
mov
bound
mov
lock
jg
inc
lds
inc
je
add
subb
movsb
clc
dec
jge
je
add
adc
sbb
dec
sbb
cmp
dec
add
sub
sbb
xorb
sbb
std
mov
mov
popa
sub
inc
popa
shrl
js
icebp
orb
lods
js
dec
cmp
adc
imul
subb
and
jo
lock
sbb
cwtl
adc
push
sahf
clc
dec
arpl
shlb
pop
jno
dec
and
ljmp
adc
pop
aas
aam
test
paddb
popf
inc
add
or
nop
in
dec
ror
jnp
js
jge
push
or
pop
rorb
sbb
popa
adc
dec
mov
lret
dec
lea
jbe
scas
imul
arpl
lea
ds
imul
pop
test
dec
dec
loop
and
pusha
std
inc
or
mov
int3
add
in
fs
popf
lock
adc
pusha
dec
inc
cmp
mov
aas
sub
mov
sbb
jge
inc
cmc
lea
dec
add
mov
int3
jo
cmc
int
je
sub
int
lock
pushf
sar
negb
test
popf
aad
push
test
sbb
push
and
cmp
cmc
dec
xor
adc
pop
orb
nop
pusha
push
inc
cmc
and
push
sub
insl
dec
jp
mov
jecxz
pop
pop
xor
pusha
dec
and
jp
aad
nop
fwait
int
loopne
popf
aad
mov
add
pop
cmc
insl
add
sbb
fdivs
lods
dec
pop
insl
dec
adc
inc
adc
inc
sub
subb
add
fldl
mov
sbb
sbb
dec
sub
sbb
in
dec
test
dec
cmp
in
test
push
mov
jbe
or
bound
insl
or
scas
cmpl
ror
push
mov
out
fmuls
push
inc
jge
inc
xor
cmc
or
inc
in
mov
lea
adc
or
mov
adc
or
xlat
add
fisubrl
in
cmp
test
adc
inc
mov
cltd
scas
call
nop
movsl
mov
aad
push
mov
in
sar
push
das
popa
daa
sarb
aas
movsl
dec
insl
sub
xchg
mov
and
mov
or
rcrl
dec
gs
fldt
outsl
std
pop
cmc
pop
ss
rcrl
jb
nop
sbb
das
jne
cmp
cmp
sub
out
das
lea
fwait
les
shl
int
pop
xor
movsl
sbb
push
imul
mov
movsl
mov
pop
pop
lods
arpl
inc
pop
push
lods
sahf
xor
stc
icebp
clc
int3
insl
repnz
leave
cmpb
sarb
sbb
test
shl
or
jge
cwtl
jp
outsl
leave
push
dec
jnp
mov
push
push
jne
dec
jp
hlt
pop
scas
jg
mov
stos
jne
scas
lcall
stc
add
stos
outsl
inc
dec
pop
dec
pop
lock
jmp
popf
leave
sbb
inc
orb
dec
fisubl
cmc
jb
fldl
mov
out
push
sarb
imul
fdivrs
lahf
ss
aam
scas
push
pop
mov
data16
jnp
sub
jg
jge
mov
fnsave
add
mov
or
scas
insb
mov
adc
xchg
test
or
xor
addl
lcall
in
lea
push
or
out
shl
pop
dec
inc
sbb
push
std
aas
call
sbb
sub
movsl
push
out
nop
sbb
test
xchg
or
enter
inc
gs
pop
sbbl
lods
pop
pop
stos
insl
clc
pop
out
inc
js
in
std
dec
outsl
int3
dec
pop
icebp
xor
outsl
mov
sbb
insl
stos
addr16
dec
daa
cwtl
icebp
popf
sub
icebp
popf
out
imul
stos
jg
out
jnp
cmpsb
enter
dec
lods
and
lds
add
jge
fldl
add
push
push
call
test
inc
pop
mov
das
in
dec
sub
std
fsubs
sbb
lods
cmp
int
mov
ljmp
call
inc
sbb
inc
popf
ljmp
movsl
stc
idivl
pop
adc
jb
in
and
mov
pop
mov
stos
std
int
dec
dec
clc
rorb
sub
jno
fdivs
scas
in
sbb
call
mov
inc
out
jno
lds
andb
pushf
jo
int
mov
int3
std
sbb
push
mov
inc
inc
addl
lock
and
sarb
adc
sub
int
loopne
int3
or
mov
insl
outsb
sbb
sub
and
mov
call
sub
mov
pop
sbb
js
lock
cmp
shlb
sub
jae
dec
jne
outsl
enter
rol
sub
jno
cmp
jl
jne
in
dec
nop
daa
test
pop
mov
dec
fucomi
in
lret
inc
adc
aam
cmp
mov
mov
std
fsubs
mov
jo
enter
inc
scas
lock
fwait
cwtl
and
imul
jno
adc
gs
dec
pushw
pop
dec
mov
out
sbb
dec
dec
mov
dec
lea
jle
push
imul
mov
inc
stc
mov
or
push
and
pop
and
push
std
scas
rclb
or
pop
in
stc
arpl
sub
fwait
int
dec
inc
popf
in
cwtl
aas
push
orl
daa
xor
insb
cwtl
rolb
lret
inc
dec
aam
aad
cli
das
leave
popf
mov
push
jge
lods
mov
mov
adc
pop
mov
movsl
pop
daa
add
adc
pop
push
enter
inc
call
jecxz
pop
int
dec
mov
jg
inc
fsubs
sub
daa
lcall
mov
adc
xchg
inc
cmc
sub
jo
pushf
js
test
fadds
pusha
cmc
and
popf
pusha
dec
outsb
cmc
sbb
pusha
xchg
add
jmp
mov
inc
cmp
xchg
loopne
add
in
mov
mov
mov
imul
jge
fcoms
das
cmpb
inc
and
dec
xor
inc
ds
fimuls
dec
test
mov
dec
xchg
mov
sub
pushf
cwtl
outsb
lret
pop
lea
mov
jg
jge
pop
dec
add
mov
mov
xchg
dec
ret
pushl
lods
shrb
das
ret
fst
xor
adc
mov
sub
popa
mov
movsl
dec
mov
daa
int3
sti
sbb
add
addr16
adc
xor
mov
dec
sub
push
aas
test
jge
sbb
inc
pop
add
rcll
cmp
test
adc
test
bound
or
and
movsl
adc
or
or
pop
loopne
lea
push
cmp
mov
cmp
fwait
push
pop
lods
ljmp
loopne
dec
and
adc
stc
add
cwtl
sub
jo
iret
sbb
movsl
xor
iret
enter
dec
mov
mov
outsl
push
iret
pop
mov
sbb
mov
add
roll
movsl
or
iret
xor
test
mov
mov
inc
mov
push
jge
sbb
sbb
nop
nop
jnp
jne
test
addl
cmc
xchg
mov
mov
daa
sub
mov
fucomip
lock
sub
cmc
test
popf
add
pop
jmp
mov
mov
daa
stos
add
movsl
dec
mov
mov
and
jge
mov
int
notb
lock
and
rorb
sub
mov
fsubrs
fsubr
test
jmp
push
test
pusha
xchg
and
pop
sbb
inc
sbb
pop
dec
in
aaa
jg
jne
jge
mov
sub
gs
or
mov
test
aad
jns
inc
mov
push
or
aad
inc
cmc
int
sub
mov
lea
pop
mov
mov
xor
add
push
fdivs
cmc
push
sub
jne
std
loope
push
or
cmp
dec
test
cwtl
loopne
jo
push
cltd
pop
rcrb
in
ss
adc
insl
daa
inc
jne
cmovge
cmp
enter
pop
sub
gs
subl
sbb
das
repz
dec
shrb
mov
daa
inc
jne
push
mov
daa
mov
dec
test
mov
inc
adc
nop
mov
xchg
aam
aad
movsl
mov
popf
pop
loopne
or
in
bound
adc
popf
rol
fists
rol
sub
outsl
jg
iret
popa
adcl
fists
and
inc
add
in
lea
roll
xchg
pop
nop
in
add
jmp
mov
adc
jns
roll
adc
fwait
pop
cmp
and
mov
lds
ret
jecxz
sub
test
mov
mov
adc
lahf
mov
sub
cwtl
mov
iret
sub
push
mov
xlat
push
and
stc
inc
adc
int
jecxz
shll
jmp
push
dec
cs
ror
es
sub
cli
pop
dec
cmove
mov
and
add
cmovbe
adc
adc
nop
cwtl
popf
aaa
and
sti
cli
push
sbb
add
cmp
cmpsb
push
and
mov
cli
fwait
jb
sahf
dec
xor
addr16
clc
aad
xchg
pop
xor
mov
cmp
aaa
xchg
push
stos
jp
xchg
outsl
cmpsb
aad
std
pop
jg
out
outsb
or
aad
leave
adc
xor
mov
test
sbb
jle
aaa
xchg
sarb
ret
pop
push
divps
jne
ror
sbb
movsb
mov
mov
iret
mov
in
call
lds
pop
imul
into
jo
cmp
cmp
sub
int3
gs
sub
push
mov
cmp
adc
mov
stos
sub
sub
inc
iret
iret
xlat
jne
jne
pop
bound
loop
negb
shll
cmp
aas
and
aam
and
int
sar
aas
mov
movsl
sbb
imulb
sbb
outsb
aaa
sbb
or
adc
daa
inc
xchg
mov
dec
aas
lea
mov
mov
bound
bound
push
mov
je
subl
stos
dec
shrb
insl
out
seto
stos
jecxz
add
dec
outsb
popf
or
pop
sti
std
insl
in
fistps
lods
sub
incl
dec
lds
sub
iret
pop
ror
inc
sbb
inc
inc
jmp
mov
bound
and
popf
iret
jns
cmp
int
mov
or
xchg
and
push
jmp
roll
sbb
lcall
int
pop
sbb
jg
aad
or
call
push
in
in
mov
sub
popf
jmp
jecxz
sub
or
sub
lcall
pop
movsl
movsl
mov
jg
mov
movsl
adc
pop
leave
jp
cs
lret
bound
lds
adc
lcall
sub
movsb
adc
push
cltd
in
jns
stos
test
mov
jmp
pop
aaa
pop
hlt
push
inc
lret
out
add
xor
incl
adc
push
ja
loop
xchg
push
inc
jmp
or
sbb
icebp
dec
add
or
pusha
aaa
andl
scas
aas
inc
aaa
jbe
outsl
ja
fwait
push
jmp
adcl
sbb
scas
dec
lahf
or
aam
sub
jb
mov
jecxz
xchg
in
cmp
cmp
xor
les
lret
les
jge
frstor
sbb
sbb
imul
mov
sbb
pop
cld
mov
cli
incl
fnstcw
loop
sub
sub
lret
dec
stos
pushf
dec
jo
cmc
js
mov
mov
inc
insl
fstl
pop
sub
mov
insl
inc
mov
popa
leave
je
bound
xchg
aad
ja
xchg
ret
dec
pop
pop
xor
pop
in
pop
inc
dec
or
pusha
dec
mov
das
inc
cwtl
jb
loopne
rdpmc
cvttps2pi
dec
popf
movsb
dec
fiadds
add
aad
sub
imul
test
movsl
outsl
push
dec
adc
movsl
xor
movsb
mov
std
jge
cmp
movsb
mov
fbstp
push
sahf
mov
mov
pop
mov
and
mov
sbb
mov
dec
movsl
sbb
jno
mov
movsl
adc
jbe
mov
pop
or
gs
and
vmread
or
mov
mov
inc
sub
add
or
cld
cmc
fs
sbb
movsl
lods
movsl
in
sub
or
jne
aas
sub
push
and
mov
mov
scas
shrb
leave
xchg
int
dec
adc
jo
js
adc
or
into
adc
popl
dec
sbb
sbb
cmpl
xchg
daa
bound
adc
pop
dec
mov
xchg
jmp
dec
fistl
fimull
xor
xchg
mov
push
push
dec
popa
cwtl
push
insl
adc
sti
xor
and
xchg
shl
cmc
in
jp
jns
jge
adc
ret
lock
mov
inc
pop
pop
ret
and
jmp
and
fs
jne
dec
cmc
sub
out
cmp
pextrw
pop
sbb
leave
add
pop
jge
or
xor
pop
popa
or
gs
mov
aaa
adc
pop
out
lea
jnp
adc
push
leave
jmp
je
mov
jg
aad
jle
cmp
mov
xor
outsb
fnstenv
sub
inc
ja
cwtl
and
aas
mov
pop
xor
sahf
mov
sbb
or
sarl
leave
iret
sub
add
test
fs
inc
js
or
inc
pop
ret
jge
sub
jmp
sarb
fadd
mov
stos
push
test
jmp
push
popf
jne
je
std
xchg
stos
and
imul
cmpsl
sbb
nop
insl
int
andl
stos
lahf
fidivrl
or
inc
mov
xchg
scas
clc
out
insl
and
sbb
adc
add
test
aad
ja
gs
ret
add
cmp
jl
test
rep
nop
lods
addr16
insl
mov
xor
lods
lret
insb
and
xchg
push
inc
cwtl
jno
xchg
mov
dec
fs
cmp
enter
fcoml
mov
mov
dec
xchg
pop
adc
jbe
xchg
dec
rclb
inc
shrb
std
leave
adc
pop
add
aad
sbb
sbb
sbb
mov
add
lods
adc
dec
sub
or
out
dec
or
je
inc
mov
imul
and
dec
sub
cmc
insb
pop
xor
pusha
and
inc
jp
bound
in
pop
data16
shrb
jge
jnp
mov
clc
lds
test
rcll
mov
test
test
mov
inc
adc
rcrb
inc
fadds
dec
mov
sbb
adc
jp
fbstp
adc
js
enter
out
pop
int
es
pop
js
aas
mov
mov
es
sbb
pop
pop
xchg
loop
js
xchg
dec
xchg
scas
or
jmp
and
fucomip
inc
inc
in
ljmp
cltd
cmpl
lds
pusha
lret
inc
xchg
lahf
jl
out
sbbb
int3
test
lea
fistpl
shrl
inc
std
stc
xchg
idiv
add
xchg
pop
loop
outsl
std
dec
int
ds
fstpl
mov
movl
adc
jmp
push
aad
jmp
xlat
push
loope
invd
pop
cmp
inc
jge
pop
mov
jecxz
jmp
push
xchg
mov
pusha
enter
dec
or
jmp
enter
mov
lods
in
and
jo
mov
xchg
int3
mov
cli
cs
mov
lea
dec
js
cmpl
imul
xor
sarl
jmp
inc
add
jns
pusha
nop
mov
sbbl
scas
pop
jns
test
insl
out
test
sarb
nop
std
inc
add
ret
int
fisttps
test
mov
dec
mov
into
ja
ret
test
jo
js
in
lods
mov
fdivs
loopne
push
dec
add
aas
enter
pop
bswap
push
sub
pop
push
in
adc
clc
dec
enter
call
cs
insb
lret
leave
dec
inc
test
das
movsl
and
insb
adc
mov
nop
inc
test
lods
lock
jnp
push
popf
sbb
xchg
orl
pop
cs
in
sbb
adc
mov
jb
inc
int
xchg
xchg
sbb
test
gs
cmp
xchg
std
jmp
test
lea
test
push
push
in
mov
jb
in
jp
inc
jns
push
xchg
add
mov
or
movsl
cld
and
mov
testl
and
les
rorl
scas
in
sub
lods
mov
adc
ret
outsb
mov
icebp
or
call
in
int3
das
mov
adc
stc
xor
or
inc
and
test
leave
in
mov
adc
rorb
xchg
pusha
mov
xor
movsl
cmp
push
or
dec
int
lret
inc
pushf
xlat
mov
aad
adc
xchg
xchg
sub
xlat
push
iret
fs
jo
clc
add
addl
push
sub
mov
jbe
mov
xchg
jp
popf
jge
adc
jb
adc
mov
cwtl
lods
in
push
shlb
addb
mov
inc
or
mov
lahf
jne
push
or
push
test
or
in
add
rorl
in
call
inc
fbld
pop
in
cld
cmp
xlat
addr16
or
sarb
std
xchg
mov
xchg
test
es
pop
inc
int
clc
inc
pop
mov
jbe
sahf
lcall
jno
adc
cmp
das
or
clc
cmp
push
pop
xchg
jl
vminpd
ljmp
xchg
jl
cmc
xchg
in
push
mov
imul
aaa
jns
pop
in
jmp
sub
push
add
ja
and
outsl
sub
jne
pop
mov
jne
mov
popa
leave
sub
push
mov
imul
iret
push
movsl
mov
sbb
mov
or
nop
pop
jbe
dec
add
cs
pop
aaa
pop
cmp
xchg
xchg
int
xchg
popaw
rorb
bound
xor
in
cmc
in
daa
jmp
loope
pushf
dec
lock
hlt
hlt
rcr
ss
cmc
enter
inc
sysexit
or
lea
xchg
ret
adc
mov
or
or
dec
cmc
or
cltd
imul
subl
cmp
sbb
pop
pop
sbb
jns
iret
jmp
add
popf
or
mov
movsl
mov
push
in
sbb
push
xchg
shrl
push
push
adc
inc
ret
mov
push
movsl
sbb
out
cmp
adc
test
imul
cltd
enter
mov
add
dec
in
in
sbb
gs
das
imul
jbe
add
and
pop
repnz
cmp
repz
mov
or
push
cmp
fmull
sub
stc
xchg
dec
pop
xchg
lock
xchg
jecxz
sub
in
add
dec
or
mov
and
lds
test
xor
jo
or
jo
push
or
inc
and
incb
inc
mov
stos
jg
out
mov
in
jne
pop
ds
repz
cmp
xor
push
dec
or
mov
sti
inc
cmp
fbld
mov
leave
adc
out
dec
js
mov
adc
cwtl
js
mov
sub
jns
jmp
das
push
sbb
pop
or
dec
mov
or
add
movsl
ss
mov
jmp
or
and
gs
mov
mov
jl
and
or
cmc
aaa
jl
mov
cwtl
sub
outsb
movsb
dec
rdtsc
or
in
jae
ficoml
pop
movsl
xlat
pop
ret
insl
shlb
int
shll
and
xor
outsb
pop
cmpsb
pop
or
aam
and
pop
xchg
xchg
push
iret
mov
jne
mov
mov
hlt
mov
and
orl
cmpsl
aaa
dec
cltd
in
fcoml
ljmp
mov
push
or
and
ja
lea
cmp
test
leave
sahf
lcall
stos
or
mov
out
arpl
or
les
push
push
in
lds
sub
fstp
cmp
inc
imul
fnstsw
les
xchg
push
lret
adc
or
ja
jne
popa
in
mov
shlb
push
das
and
clc
jne
dec
push
cmp
xor
push
popa
roll
inc
js
aam
inc
jno
cmp
subb
lcall
in
loop
leave
mov
test
add
xor
push
repz
and
pop
sub
xor
push
daa
popf
adc
jns
in
fcomps
mov
test
push
mov
lds
adc
int
insl
jne
adc
or
aad
scas
adc
sbb
inc
clc
pop
std
jne
inc
xchg
jl
pop
lods
pop
leave
les
shlb
xchg
jecxz
xor
pop
cwtl
movsl
dec
and
js
and
cltd
leave
lea
pop
xchg
lods
cltd
adcl
jns
jl
cmc
pop
xor
std
xchg
pop
leave
fistpl
daa
jo
push
iret
jmp
mov
add
xchg
xchg
mov
mov
adc
mov
popa
movsb
mov
icebp
enterw
lock
pop
inc
insl
pop
lods
cli
adc
cmp
jp
cmp
push
sbb
and
push
out
or
aad
lcall
xor
inc
test
or
enter
xorl
fildl
aaa
fninit
cmc
inc
xchg
mov
pop
movsb
sti
sbb
mov
test
mov
mov
sub
xchg
jmp
cs
dec
push
jge
nop
sbb
pop
cmpsl
std
insl
pop
rolb
jmp
xchg
or
jne
popa
nop
xor
inc
xchg
popf
in
cli
xchg
sti
adc
sbb
cld
xchg
mov
mov
mov
icebp
mov
jne
cwtl
dec
js
in
ds
lds
inc
jo
shlb
or
pop
aad
test
sahf
add
and
dec
imul
push
jmp
or
das
bound
jo
and
mov
popf
scas
dec
dec
enter
adc
xchg
jecxz
dec
in
arpl
mov
cmp
nop
lods
mov
test
push
mov
cwtl
lds
mov
pop
pop
inc
orl
insb
jns
inc
jge
add
lods
fs
dec
add
mov
lds
ljmp
addb
mov
sub
cs
adc
outsl
mov
mov
popf
fcmove
insl
push
addl
mov
adc
dec
sarb
sub
mov
rcl
sbb
mov
mov
dec
lea
scas
mov
inc
fsub
jge
jge
cs
ljmp
shlb
cmp
mov
sub
mov
or
cmc
jo
aad
mov
ljmp
push
sbb
dec
push
fists
inc
push
inc
xchg
mov
or
sub
jae
pop
addb
pop
movaps
jge
mov
or
aad
fisubs
fadds
test
mov
out
cmp
popa
adc
pop
sub
lds
sub
test
jecxz
popf
fisttps
jmp
sbb
dec
daa
sub
popf
xor
insl
or
or
pop
jne
lcall
enter
iret
in
cmp
mov
lea
in
fs
movsb
das
pop
sbb
jge
sbbb
arpl
mov
pop
mov
roll
fistpl
cmp
lahf
and
in
mov
loopne
jb
mov
cmp
nop
jo
xorl
adc
mov
mov
test
ja
dec
inc
nop
ror
movsl
mov
mov
rcr
push
jmp
out
adc
and
nop
xorb
dec
mov
mov
hlt
cli
mov
test
in
sarb
insl
mov
loopne
std
dec
int
dec
jge
sahf
out
pushw
xchg
lahf
lcall
cvtdq2ps
in
cltd
test
aaa
cwtl
jp
dec
insb
cmp
loope
sub
dec
push
jb
popa
insl
mov
aaa
xlat
or
xor
mov
repz
test
ss
add
lods
dec
jmp
call
movsl
scas
mov
mov
sub
sub
pop
xor
mov
add
rep
movsl
mov
aad
jmp
insb
mov
xchg
les
pushw
mov
loope
cmp
inc
call
xchg
mov
int
pop
push
mov
mov
push
inc
mov
xor
inc
imul
in
push
sbb
xchg
cmp
clc
lcall
lods
mov
mov
aaa
mov
cmp
mov
push
sub
or
iret
adc
stos
sbbl
mov
sbb
notl
pop
mov
push
cmpb
cs
xchg
clc
mov
cwtl
jle
or
stos
fisubrl
jb
out
gs
lods
cli
add
pop
decb
fildl
sub
cmc
loop
or
popf
cs
adc
aam
aaa
push
pop
dec
push
addr16
cmc
mov
pop
aaa
std
xchg
in
push
sbb
test
push
into
lahf
cmp
pop
dec
outsb
jecxz
gs
scas
mov
aaa
cwtl
mov
jne
sbb
xor
adc
std
mov
sbb
add
icebp
aaa
stos
mov
sbb
fimull
lock
xorl
hlt
push
inc
psubsw
jbe
roll
pop
fdivrs
lcall
sub
mov
sbb
jecxz
ret
das
mov
jmp
fwait
mov
int
mov
adc
jne
movsl
mov
mov
push
clc
or
mov
test
dec
xor
xor
test
imul
xchg
xchg
das
rcrl
loope
push
in
dec
jmp
decb
or
xorb
or
push
sarw
jecxz
rcll
add
xchg
xchg
pushf
pushf
mov
cmp
test
jecxz
dec
dec
sbb
aad
xchg
push
clc
popa
pop
push
inc
js
xchg
sub
movsb
cmp
add
pop
xchg
jge
scas
dec
jmp
adc
jno
inc
or
xchg
jmp
jo
pushf
xchg
lea
stc
or
and
xchg
dec
pop
aad
or
jecxz
loope
sbb
in
add
push
sbbl
cmp
das
bound
in
pop
in
lods
xor
adc
jmp
push
das
loope
aas
push
test
gs
sti
or
icebp
cmp
dec
cmc
pop
sysexit
pusha
xchg
sub
jmp
push
mov
popf
push
dec
add
lds
push
xchg
sub
pop
adc
jno
or
and
insb
movsb
insl
shlb
pop
jns
sbb
or
mov
cltd
nop
fists
in
jecxz
jge
rcr
fs
loop
add
idivl
mov
inc
inc
sbb
mov
mov
ss
or
add
jmp
sub
or
stos
push
sbb
lods
mov
movsl
ret
cwtl
push
mov
bound
push
gs
in
lret
dec
push
jle
mov
dec
sbb
or
push
xchg
cwtl
popf
packssdw
fwait
ds
xor
sbb
pop
jbe
pop
fbstp
inc
or
or
xchg
aaa
in
sti
pop
out
push
leave
pop
test
sub
pop
push
sub
xlat
xor
test
ljmp
sbb
adc
adc
xchg
insl
jne
addr16
imul
aad
jmp
std
bound
iretw
loope
adc
jae
xor
xor
loope
sub
mov
jmp
cmpl
inc
cmp
push
sbb
repz
push
imul
or
adc
idivl
clc
icebp
cmp
aas
cmp
mov
adc
push
mov
loopne
in
sub
jns
out
sbb
push
mov
xor
mov
adc
dec
adc
lds
jne
mov
xlat
mov
add
mov
pusha
push
in
orb
cmc
lds
xor
and
dec
stc
jecxz
sbb
lods
mov
dec
bound
test
pushf
pop
pop
jmp
out
in
and
movsl
jl
dec
push
jge
es
add
sbb
jge
nop
push
lea
xchg
loope
push
rorl
adc
adc
jbe
clc
pop
xor
ret
pop
loope
adc
or
cmpsb
mov
inc
sub
fstl
call
xchg
push
in
gs
or
aad
xor
stos
lahf
mov
inc
aaa
mov
mov
aaa
orb
pop
push
shrb
rorb
add
movsb
scas
add
cltd
xchg
mov
shll
mov
jno
mov
sub
nop
jl
jle
jo
mov
jne
scas
xor
insl
std
sub
fcomps
jae
dec
aaa
cmp
ret
jg
add
add
pop
cmp
adcb
mov
jp
mov
or
das
xor
inc
mov
dec
xrelease
std
imul
lea
dec
jmp
imul
rcll
mov
movsl
mov
inc
out
cmp
ret
xchg
ficoml
subb
lods
mov
inc
dec
test
sub
movsl
fwait
lahf
insl
ret
iret
xchg
lret
jle
lds
pop
adc
iret
sahf
out
lret
jle
push
test
inc
aad
sub
and
or
ret
fwait
cmp
inc
mov
orb
lahf
adcb
imul
sbb
repz
or
jl
or
in
and
stc
cmpsb
insl
fwait
xchg
inc
fisttps
cmp
cmp
jno
imul
rol
insl
gs
popa
pushf
mov
or
mov
inc
sbb
cmc
sti
cmovne
lret
movsl
icebp
mov
movsl
jge
mov
add
or
roll
repnz
test
pop
inc
gs
jo
ret
jmp
sbb
xchg
jae
cmp
fsubrs
add
leave
inc
jo
fistps
pop
jns
mov
push
sarb
fwait
push
pushf
or
jge
jmp
sub
mov
mov
sbb
fnsave
cmc
mov
jne
mov
arpl
cltd
cmp
in
gs
inc
xchg
or
jne
xchg
outsb
sahf
cwtl
sahf
add
mull
xchg
jle
cltd
movsl
lret
clc
mov
push
cmpl
ds
call
dec
insl
pop
or
sbb
jge
mov
xchg
ret
inc
lahf
aaa
xchg
jns
pop
jno
dec
rorl
jmp
dec
dec
out
imul
gs
mov
test
fcoml
popf
or
mov
or
gs
nop
addl
adcl
pusha
mov
push
movsl
inc
std
fs
int3
mov
jp
mov
movsl
in
mov
push
jge
and
scas
mov
imul
mov
push
mov
or
lahf
stos
pop
sub
lcall
cld
lds
lods
sbb
pop
fnstsw
movsl
mov
int3
add
jns
test
add
xchg
push
shrb
adc
sbb
imul
cltd
add
sbb
adc
popa
rorb
stos
adc
movl
in
fnsave
add
mov
fistps
addr16
vpaddsw
icebp
push
aas
nop
cmpsl
xchg
pop
ljmp
testb
scas
xchg
pop
negb
ds
mov
xchg
cmpsl
in
inc
mov
scas
aad
xchg
in
mov
fldenv
pop
stos
call
push
bound
jne
dec
inc
mov
xchg
sub
cmp
xchg
pop
mov
push
xchg
adc
pop
or
xor
leave
xor
or
push
ds
cmp
sub
adc
movsl
test
js
jmp
add
pop
call
push
sbb
popa
imul
sub
dec
in
seto
ret
aaa
pop
xchg
leave
out
jmp
lods
inc
lret
pop
push
int
and
cli
pop
aas
lds
shll
cs
add
lods
inc
sub
mov
dec
insb
in
or
cs
add
aad
jp
mov
xchg
and
pusha
push
pop
lods
sub
fnstsw
add
jns
mov
fldl
push
in
bound
pusha
in
sbb
leave
in
dec
add
fcomps
dec
pop
sub
cwtl
push
cmc
aad
and
xchg
fistpl
push
sbb
sbb
push
aad
mov
push
repz
sbb
or
adc
fdivs
lahf
fucomp
mov
inc
adc
push
jmp
adc
jo
pop
aad
xchg
fistl
std
dec
or
adc
push
inc
xor
dec
dec
mov
fisttpl
test
inc
imul
in
inc
pop
inc
test
mov
popf
add
xchg
sbb
or
in
jns
pop
rclb
mov
loope
jno
hlt
movsb
inc
pop
loopne
jo
mov
clc
in
sbb
cltd
and
pop
xchg
loopne
sti
adc
test
test
repz
jg
pop
lds
pop
lds
shr
adc
jmp
imul
push
mov
cmp
add
adc
loopne
in
inc
add
out
loope
cltd
cwtl
popf
or
shlb
lds
outsl
js
pop
jmp
sbb
or
adc
push
jecxz
ret
scas
call
cmp
pop
xor
mov
je
pushf
jmp
daa
adc
mov
stos
add
call
aam
pusha
test
pusha
stos
lds
mov
jge
sti
sbb
inc
jmp
cmp
pop
sbb
inc
fimull
gs
test
loope
dec
insl
imul
in
int3
jo
or
aas
pusha
int3
mov
enter
lahf
mov
sbb
std
insl
out
jecxz
push
inc
xchg
test
addr16
dec
dec
push
adc
sub
imul
mov
pushf
jmp
sbb
adc
push
mov
sbb
imul
adc
jle
mov
sti
adc
dec
sub
mov
or
push
cmc
rclb
popf
lods
add
in
xchg
mov
mov
aad
movsl
push
pop
ds
push
cmp
adc
jne
mov
in
pop
scas
out
inc
mov
push
mov
xchg
jo
fsubs
mov
insl
repnz
dec
iret
sbb
sti
sbb
push
rcrl
jmp
lods
push
pop
popf
adc
xchg
jbe
out
repz
icebp
aad
xchg
pusha
adc
jecxz
pop
call
cmc
mov
jmp
call
lahf
ds
xor
pop
sub
or
aad
loopne
push
and
lods
lcall
or
adc
jne
inc
sbb
xchg
mov
mov
push
xchg
fistpl
frstor
mov
jmp
imul
and
shll
in
test
lahf
inc
test
adc
gs
pop
xor
pusha
or
scas
insl
cmp
and
mov
mov
cmpsb
jo
nop
gs
add
mov
xchg
pusha
loope
in
adc
mov
dec
sbb
das
add
or
out
mov
and
and
push
dec
add
or
inc
mov
sbb
fucomp
jmp
cmp
retw
cmp
jae
or
out
adc
aad
in
inc
ds
and
sbb
inc
std
push
rcrb
jp
leave
sbb
pop
push
repz
bound
xchg
movd
jb
es
sbb
imul
sbb
mov
adc
mov
lret
sbb
int
push
adc
mov
je
or
nop
mov
insl
or
popa
jecxz
xor
jge
or
psrlw
loope
lds
jmp
adc
pop
cmp
call
push
mov
or
xchg
icebp
lods
xchg
aam
int
xchg
inc
std
jae
pop
inc
ret
mov
cmp
rorl
pop
lods
xchg
push
sbb
cwtl
inc
dec
xlat
out
add
aad
clc
std
mov
sbb
xchg
push
mov
std
in
fisttpl
cmp
inc
xchg
outsl
mov
negl
push
pop
enter
out
add
out
dec
inc
adc
cmpsl
insl
incb
pop
incl
adc
or
inc
inc
xchg
xchg
out
add
jge
pop
mov
xor
sbb
aaa
lret
fstpl
mov
gs
and
add
lret
dec
or
mov
cltd
xor
dec
popf
or
sbb
pop
push
in
icebp
adc
sub
cmp
sbb
data16
push
push
push
mov
cli
push
adc
testl
adc
ds
pop
adc
in
pop
inc
sbb
fcoms
push
repz
rcr
sbb
ljmp
sub
imul
movsl
and
enter
loope
cmp
or
fstl
pop
enter
inc
lcall
movsl
inc
xchg
adc
popf
sub
dec
fisttpl
cmp
fs
lds
shll
adc
in
jle
mov
sbb
lea
inc
inc
insl
int
jge
xchg
std
xchg
mov
call
cwtl
sub
icebp
mov
push
push
int
fisubs
nop
push
pusha
popf
mov
jge
or
in
pop
lret
xor
test
dec
adc
push
pop
add
and
mov
sub
test
dec
pop
sbb
or
mov
or
mov
mov
mov
lcall
enter
insl
aas
ss
popa
add
cmc
xchg
inc
repz
cwtl
push
cs
insl
mov
sti
sbb
pop
lods
push
aas
sub
cwtl
adc
mov
test
pop
sahf
jo
sub
test
leave
fwait
mov
push
fmuls
hlt
push
xchg
sbb
ret
adc
fucomi
gs
inc
sbb
sbb
jle
sbb
data16
pop
mov
add
pusha
jne
and
aad
bound
lods
pop
sar
insl
lea
sarb
mov
lds
pop
movsl
jne
cmpsl
insl
fs
add
or
and
lcall
fs
out
dec
mov
data16
push
orb
sub
pop
pop
cmp
mov
mov
push
or
push
out
sub
dec
popf
push
fwait
leave
in
mov
ret
dec
fistpl
sub
mov
push
in
adc
ss
ret
xlat
dec
mov
mov
fs
adc
dec
dec
pop
insl
dec
mov
ret
mov
vpunpckhdq
sahf
das
call
sbb
into
in
jecxz
nop
pop
loope
aam
adc
jmp
test
insl
jmp
call
push
push
sti
imul
jge
int
out
mov
add
adc
mov
mov
adc
lock
sbb
incl
icebp
jne
rolb
ljmp
icebp
es
jmp
std
stc
xor
pushf
cmp
jg
dec
push
int
or
cli
xchg
push
dec
adc
jns
or
cmp
mov
pop
in
insl
arpl
mov
cmc
iret
inc
cmp
out
loope
std
mov
sbb
sbb
dec
sti
sbb
pop
sbb
or
pop
mov
jecxz
das
push
movsb
sbb
cmp
xchg
xchg
addr16
cmp
jne
call
inc
dec
dec
insl
xor
push
insl
adc
addr16
push
mov
adc
dec
aam
ret
lret
lea
jns
inc
aad
or
fwait
dec
mov
cmp
pusha
push
adc
cmp
mov
mov
dec
pop
cmp
mov
inc
cltd
sbb
sbb
adc
cld
sbb
jo
or
repnz
aad
out
or
loope
sbb
xchg
inc
cmp
gs
jb
push
inc
int3
mov
addr16
das
or
leave
xor
in
pop
push
sub
xor
mov
cmp
pop
orb
fildl
je
cmp
pop
sub
icebp
add
jmp
cmc
imul
dec
and
and
sbb
dec
or
dec
pusha
inc
mov
or
dec
cmp
enter
inc
push
dec
xorb
js
fst
or
jp
mulb
push
rcrb
push
xchg
ret
and
xor
popf
fidivrl
imul
lods
int
mov
and
shrb
mov
loopne
mov
inc
jge
or
fstp
ret
jbe
pop
xchg
mov
add
insl
adc
or
leave
pop
mov
xchg
shrl
sbb
sti
dec
jge
and
in
sub
sub
aas
mov
jl
push
rorl
gs
jns
insl
or
sub
or
popf
and
repz
inc
jmp
call
mov
and
ja
rorb
lahf
sub
test
dec
int
icebp
pushf
dec
lret
lods
cmp
adc
cmpsl
xchg
inc
hlt
mov
adc
fisubrl
inc
inc
cmp
mov
pop
xor
lods
push
out
out
inc
inc
shlb
xor
aad
jecxz
inc
ljmp
movsl
lock
jge
outsl
add
movsl
ret
xor
xchg
sbb
iret
jp
and
lahf
dec
mov
push
std
popa
cld
lods
adc
frstor
in
sub
aad
in
rorl
push
repz
push
sub
jbe
and
and
cmp
es
mov
dec
fsubp
int
sub
mov
sbb
dec
aaa
inc
xchg
mov
pop
jmp
or
mov
cmp
shll
aas
jecxz
loopne
push
push
xor
daa
mov
enter
fcomps
in
mov
lds
inc
pop
mov
xchg
dec
daa
sbb
inc
and
daa
sbb
icebp
and
adc
xchg
and
and
mov
test
inc
shll
push
imul
pop
gs
adc
sub
loopne
pop
or
or
xchg
mov
or
incl
dec
insl
or
push
and
gs
enter
pushf
int
and
fs
pop
lock
ds
int
inc
push
sbb
outsb
add
pop
sbb
or
icebp
repnz
sbb
sbb
mov
sbb
cmp
loopne
lahf
ds
pop
mov
and
sbb
pop
es
sarb
push
mov
or
mov
daa
adc
ret
sbb
aaa
xchg
adc
out
ss
add
inc
scas
addb
inc
scas
loopne
push
or
jne
jecxz
shrl
pop
mov
cmc
insl
pop
mov
popa
jecxz
inc
or
and
dec
xchg
pop
insb
je
inc
aas
jge
movl
andl
shl
mov
and
ss
lods
mov
and
in
xchg
push
hlt
loope
popa
negl
sar
xchg
jmp
test
daa
and
sub
cmp
orb
adc
jge
bound
cmp
scas
sbb
xchg
arpl
sub
xor
mov
mov
sbb
ljmp
push
add
jg
loope
adc
inc
dec
test
mov
inc
add
xorl
orl
jne
scas
testb
call
flds
push
push
lcall
or
ss
push
inc
inc
popf
pop
ret
inc
add
nop
or
adc
arpl
or
mov
add
insl
mov
mov
mov
pop
xchg
daa
in
pusha
ret
or
mov
jecxz
jbe
xchg
shr
mov
xchg
fbld
scas
fisttps
gs
leave
jae
call
push
popa
lods
xchg
xchg
imul
or
cltd
dec
xchg
mov
pop
cs
cmc
cmpb
xchg
lock
xor
clc
stos
push
sbb
sbb
test
inc
fldl
adc
add
push
and
iret
jnp
loopne
sbb
aad
jg
push
and
cmp
imul
add
push
enter
inc
xchg
lret
nop
jne
cmp
lds
mov
pop
jae
push
inc
movsl
in
add
lock
xchg
out
popf
mov
iret
add
imul
fscale
xchg
sahf
imul
or
and
push
bnd
cltd
sbb
leave
push
add
lret
fimuls
mov
push
call
pop
out
mov
loopne
xchg
pushw
sbb
stos
fbstp
add
sub
sub
popf
xchg
xor
test
mov
pop
lahf
push
pop
daa
imul
mov
lahf
pushf
call
movsl
int
jne
mov
xor
dec
imul
mov
test
cmc
xor
lret
lock
mov
or
jge
lds
jg
mov
js
pusha
pop
inc
mov
push
dec
popf
iret
adc
or
sbb
arpl
shl
cmc
sub
pop
insl
sbb
mov
add
mov
aad
int
enter
mov
insl
pop
test
mov
inc
jne
jmp
or
push
jge
mov
jmp
mov
aad
idiv
vunpcklpd
pop
jmp
inc
inc
cltd
or
push
or
sbb
or
sbb
lret
add
pop
das
mov
ja
jo
or
stc
add
pop
push
daa
insl
mov
aad
jp
arpl
push
js
js
pop
aad
pop
and
jae
enter
stos
xchg
adc
mov
cmp
mov
inc
mov
jns
test
nop
popa
int
add
pop
gs
pop
test
jle
mov
add
ds
fwait
aad
inc
mov
gs
cmc
inc
add
sbb
xchg
lret
dec
sbb
movsl
mov
insl
mov
js
inc
mov
cmp
push
call
mov
mov
popf
or
mov
inc
mov
pop
push
adc
and
jne
xor
pop
push
scas
jmp
aad
pop
test
adc
push
or
adc
mov
and
js
mov
mov
sbb
lea
dec
popf
aad
gs
cmp
lret
mov
inc
fistps
cwtl
lret
push
cmp
xor
test
gs
inc
and
inc
jmp
xor
or
or
das
mov
dec
sub
gs
inc
imul
adc
jecxz
xor
popf
in
sub
jg
or
pop
push
test
loop
lds
js
setl
ret
clc
add
test
insl
xchg
dec
icebp
cwtl
sub
nopl
ja
sbb
cmp
add
jle
and
arpl
add
or
sbb
arpl
mov
or
adc
rcll
in
sbb
mov
cmp
cs
mov
test
sbb
jb
push
outsl
leave
push
cmp
mov
or
push
in
inc
push
jne
cltd
stos
aad
pop
rolb
push
sbb
cmc
mov
fsts
in
sarb
std
inc
inc
aaa
mov
idivl
popl
mov
lds
dec
out
insl
jnp
test
adc
nop
jp
popa
xchg
push
push
mov
xlat
pop
xchg
cmpb
jl
cmp
shlb
add
cmp
cmp
loop
or
xchg
jg
fsubs
cmp
lods
out
mov
nop
rcl
push
sbbb
mov
neg
cmp
loopne
inc
sbb
add
jo
xor
aam
bnd
pusha
popa
test
cmp
out
add
mull
jb
xchg
adc
aaa
sub
and
mov
xor
aam
sar
pusha
or
inc
cmp
leave
notb
push
xchg
add
ja
cmpsb
cltd
add
scas
jmp
pop
add
aam
rorb
push
sbb
rcrl
pop
outsl
test
mov
pop
lods
dec
mov
adc
les
aaa
call
imul
mov
sahf
repnz
sbb
xor
int3
and
cmpsl
les
jne
push
filds
jp
push
push
or
rcll
pop
js
and
cs
xor
cmp
mov
mov
xor
sti
outsb
fstpt
jbe
mov
cmp
xchg
into
adc
leave
inc
outsl
aaa
imul
mov
dec
mov
or
mov
dec
sub
jne
roll
and
andb
push
stos
ret
sub
outsl
movsl
je
daa
sub
and
imul
cmp
push
jmp
cmp
pop
aas
test
and
mov
jge
icebp
movsl
in
lret
and
cmp
or
idivl
ficomps
or
mov
jae
pop
sub
cmp
mov
daa
clc
cmp
jne
loope
ret
call
loop
jne
mov
cmp
subb
jne
test
pusha
call
mov
enter
int3
iret
stc
dec
or
and
sbb
aaa
or
add
push
mov
mov
sbb
jge
mov
pop
fnsave
inc
cmp
cmp
stos
sbb
stos
add
loope
adc
call
mov
mov
imul
stos
add
pop
adc
insb
movsl
mov
mov
pushl
divl
inc
sub
cmpsl
push
test
or
xchg
or
jno
outsl
syscall
xor
imul
in
lods
jge
mov
or
int
xchg
add
aad
adc
jnp
js
cli
flds
mov
iret
jnp
mov
lods
repnz
aad
jns
fcomps
cmp
loopne
push
lea
inc
add
push
test
push
mov
stos
jge
add
sub
ja
mov
ss
jbe
mov
pop
psubsb
sbb
insl
test
xchg
sahf
scas
and
mov
and
and
stos
mov
or
sti
add
in
sarl
mov
seto
add
mov
pop
rorl
mov
jge
pop
jae
pop
push
movsb
jno
pop
fisubs
push
cmovge
daa
out
cmp
add
fadds
hlt
xchg
xor
stc
imul
cmp
fadd
aam
xlat
leave
pop
dec
xor
dec
or
psadbw
and
add
imul
sbb
lea
mov
jmp
orb
pop
sbb
pushf
lods
mov
movsb
rolb
pop
xor
rcl
in
insb
mov
sbb
sahf
dec
movsl
fidivs
cmpb
adc
movsb
out
push
shrb
std
or
mov
cmp
and
sub
mov
or
ljmp
movsl
out
adc
cwtl
ljmp
cwtl
mov
movsb
dec
nop
mov
fmull
setno
add
aad
add
mov
out
clc
lock
cli
rorb
in
pop
in
cwtl
or
nop
mov
xchg
pop
sub
add
leave
add
mov
mov
or
mov
nop
xor
jmp
repnz
dec
sbb
or
ss
mov
push
mov
and
imul
mov
mov
or
adc
inc
push
jne
jg
push
repnz
xchg
push
push
sbb
mov
jecxz
xor
push
mov
lds
dec
notb
add
pop
imul
out
sbb
imul
dec
fdivr
adc
jl
jno
xor
adc
inc
stc
sub
lds
adc
mov
push
adc
xor
aas
pop
ss
dec
fcoms
jg
pop
mov
test
adc
mov
enter
adc
jne
pop
or
mov
bound
inc
test
jg
or
movsb
outsl
cmp
rcrl
aad
xchg
push
push
scas
mov
lods
adc
into
pop
cmp
sbb
xchg
sarb
or
imul
scas
sub
mov
push
adc
pop
inc
jge
jno
pop
repnz
mov
xchg
lea
jg
pop
push
dec
insl
xchg
sub
daa
in
or
xchg
or
imulb
dec
mov
fstpl
inc
pop
inc
add
inc
nop
rcl
ja
imul
adc
xor
mov
xchg
push
sbb
in
mov
add
loopne
pop
or
inc
dec
aam
adc
cmp
out
sbb
dec
mov
dec
dec
gs
imul
and
mov
dec
mov
push
mov
sub
lea
fs
pop
mov
fsubrl
mov
inc
mov
dec
movsl
mov
mov
jne
xchg
test
push
orb
movswl
dec
add
mov
dec
jae
add
lods
call
add
jg
mov
stos
add
imul
sbb
popf
rorb
dec
dec
aad
mov
jmp
scas
xchg
sbb
sub
jge
dec
cltd
sbb
pop
mov
pop
scas
mov
pop
sbb
or
push
sbb
test
enter
pop
jo
dec
push
data16
xor
mov
nop
enter
or
jecxz
nop
dec
lahf
or
add
or
aad
inc
dec
push
popf
mov
in
cmovnp
jecxz
leave
aaa
mov
mov
inc
mov
nop
in
mov
lds
outsl
pop
add
cmpsb
mov
sbb
adc
dec
jl
lds
out
or
dec
push
sbb
or
or
stos
sbb
lahf
inc
xor
mov
add
add
je
push
lea
lods
inc
or
punpckhwd
movsl
pop
inc
std
lea
dec
sub
or
outsl
or
xlat
sub
lock
or
mov
sbb
int3
dec
pushf
pop
push
in
mov
push
movsl
inc
mov
nop
add
pushf
adc
dec
or
add
adc
push
ja
out
xchg
mov
mov
aam
xchg
or
ss
inc
leave
mulb
sbb
push
push
add
cwtl
lods
add
pop
pop
add
jge
loop
mov
mov
pushf
sarb
jo
in
adc
bound
dec
jmp
dec
scas
daa
add
push
stos
or
shlb
pop
xor
cmp
dec
out
pop
in
lods
inc
sub
daa
in
in
cmp
pushl
mov
ja
add
mov
jae
pop
jecxz
aam
pop
add
cmc
gs
or
test
repz
fcompl
mov
icebp
dec
push
push
jne
repz
and
dec
xchg
fcoms
ffreep
das
adc
pop
sbb
jg
cwtl
das
into
in
or
fwait
sbbl
adc
sbb
xchg
xor
data16
or
adc
push
popf
mov
cmc
or
dec
mov
fnstsw
inc
dec
aaa
int3
pusha
lret
sbb
jo
or
fcmovb
in
adc
insl
js
lock
bound
das
mov
sbb
xchg
outsl
jb
fisttpll
pop
fwait
test
add
imul
leave
cltd
scas
call
pop
filds
cmpsl
lahf
cmpsl
add
and
sbb
xchg
jb
jnp
lea
add
xchg
test
int
add
adc
and
mov
inc
add
xchg
rcl
mov
jge
movsl
mov
test
push
mov
test
sbb
xchg
push
leave
js
outsl
stos
fimuls
in
jmp
sbb
lahf
inc
lahf
mov
dec
pop
sbb
add
mov
pop
inc
cmc
mov
call
add
sbb
pop
inc
decb
or
push
or
add
sbb
add
and
ret
fisubs
pop
adc
xchg
add
popa
xchg
sub
addr16
or
je
imul
rcr
pop
sub
insl
rcll
cmc
jo
xor
add
or
in
add
cmp
syscall
pushf
or
add
add
mov
or
jp
xor
aaa
imul
iret
aaa
add
insl
test
add
addr16
stos
leave
sub
inc
cmp
mov
jg
inc
inc
inc
inc
pop
pop
aaa
lods
cmpsl
mov
mov
lea
cltd
cmc
out
out
loope
in
stc
lret
int
pop
rol
mov
aaa
sub
cmp
adc
add
aaa
or
sbb
outsb
jo
fs
pushw
dec
dec
push
inc
aaa
inc
inc
dec
pop
pop
lods
scas
mov
mov
mov
addb
out
lock
out
cli
cld
aaa
lret
rol
enter
sub
sub
and
test
cld
push
inc
call
out
pop
add
test
outsl
lea
out
imul
sub
aaa
add
aaa
out
dec
stos
jmp
ljmp
sub
test
addr16
mov
ret
pop
in
mov
aad
mov
aaa
into
xchg
test
aaa
adcb
dec
cld
push
sbb
cmpsl
or
inc
pop
or
xchg
cwtl
cld
clc
xchg
add
dec
or
pushf
xor
and
fsubs
jecxz
outsl
sbbl
cmp
adc
jl
roll
inc
les
frstor
sub
dec
lock
dec
or
loop
aaa
sbb
aad
add
fidivl
pop
sub
jno
daa
add
cmpsl
jnp
ret
mov
push
dec
fimull
stos
hlt
jne
aam
aas
mov
mov
in
inc
push
out
cmovl
push
sbb
mov
jne
adc
aad
mov
jge
icebp
adc
inc
mov
dec
aaa
out
lret
in
xor
ljmp
mov
aaa
mov
and
rclb
sub
dec
repnz
inc
cmpb
ret
mov
ret
adc
inc
daa
clc
int3
mov
sub
push
js
mov
icebp
aaa
push
lahf
test
mov
adc
pusha
adc
sahf
pop
jmp
aaa
std
das
cwtl
xor
xor
sbb
inc
pmulhuw
push
inc
mov
mov
fstpt
es
or
sahf
xchg
out
inc
aaa
dec
jl
ds
popa
aaa
in
mov
pop
jge
outsl
test
dec
add
fcoms
sub
enter
fdivrp
sbb
mov
aaa
sti
adc
out
lfs
jno
pusha
hlt
xor
test
aaa
dec
mov
jp
mov
mov
fldt
fwait
aaa
in
mov
sub
mov
shlb
fcoml
push
sub
sub
adc
mov
aam
dec
fbstp
cmpsl
mov
aaa
leave
push
dec
roll
pop
mov
mov
aaa
cmp
test
xchg
negl
xchg
inc
icebp
sub
add
jno
xor
repnz
or
push
mov
int
jp
and
aaa
mov
insl
ds
fmull
data16
ss
fdivrs
jecxz
cwtl
cmc
mov
aaa
insl
data16
dec
fdivrs
sub
cli
cmpb
aaa
pop
cmp
popa
movsl
repz
mov
and
add
push
xchg
and
sub
fimuls
into
add
int3
adc
jle
adc
aaa
and
fildll
dec
daa
inc
fnsave
je
jb
ljmp
fs
jmp
call
pushf
mov
aaa
xor
mov
inc
or
repnz
jmp
push
ss
push
jb
fists
loopne
leave
test
cmp
mov
mov
xchg
push
sar
push
aaa
or
and
lds
scas
mov
cmp
mov
mov
mov
in
mov
daa
idivl
pop
mov
lds
dec
movsb
shll
std
push
aaa
and
js
aaa
adc
jg
pop
subb
lods
add
cmp
insl
subl
nop
xlat
add
push
and
rcrl
push
xor
loop
sub
or
add
jge
or
cmp
dec
sti
dec
arpl
adc
int
ds
mov
adc
adc
cmp
sbb
mov
repz
scas
mov
ss
pusha
push
adc
inc
mov
or
aas
movsb
int3
add
aaa
loopne
fadds
cmpb
test
cmp
stos
ja
test
sbb
lret
mov
adc
push
testl
call
mov
ja
adc
jg
or
js
lock
add
inc
aaa
mov
sarl
and
dec
mov
xchg
cmp
repz
jecxz
dec
ds
dec
in
stos
pop
mov
lret
jle
leave
cmp
mov
xor
pop
in
mov
fcomip
std
xchg
sub
fsubl
pop
push
and
mov
jge
clc
mov
clc
pop
mov
jl
push
dec
popf
fadds
outsb
xchg
out
and
sub
andb
movb
xchg
jg
std
add
lret
ds
fstl
aaa
sbb
shll
push
scas
mov
or
movsb
sti
cmp
daa
add
add
adc
aas
cmpsl
adc
repz
iret
xor
fisubs
jne
fnsave
lods
lock
add
or
aam
and
std
inc
cwtl
nop
add
sub
add
jne
mov
adc
pop
cmc
sub
mov
mov
cld
mov
clc
fistpl
fwait
push
gs
cmc
mov
push
mov
mov
pop
inc
jl
jne
dec
or
int3
enter
sbb
test
pop
inc
test
daa
or
cmpsb
nop
push
or
aas
xor
repz
pop
add
aaa
aam
inc
xchg
fcmovne
ja
aaa
cmp
in
pop
cmp
pop
and
cmp
cmpb
aaa
jns
pop
aas
addr16
jle
popa
sbb
inc
aaa
je
inc
nop
push
lret
mov
cmp
push
jno
cmp
outsl
in
xchg
in
pop
aaa
jp
push
push
jecxz
sarb
mov
mov
or
movsb
adc
push
das
fmuls
pop
pop
outsb
aaa
dec
mov
popa
mul
adc
or
jb
or
test
cmc
fildl
adc
int
jo
aam
pop
jbe
or
add
xchg
lret
adc
aaa
in
sub
pop
aaa
push
pop
daa
jmp
loop
out
push
aam
cli
cmpsl
add
cmpsb
lcall
mov
test
pop
push
cmp
mov
mov
fisubs
arpl
xor
aaa
in
out
stc
mov
call
sti
lcall
pop
lahf
aaa
jg
lock
adc
lret
daa
pop
into
xor
int
pop
test
pop
aaa
fcoms
out
lret
and
test
add
mov
or
adc
aaa
add
data16
mov
inc
daa
repz
lret
adc
imul
inc
jle
cli
idiv
lds
jbe
or
das
mov
dec
cmpl
int3
mov
mov
ret
adc
sbbl
fidivl
mov
mov
cmp
ss
jae
mov
and
icebp
push
xchg
push
loopne
arpl
sub
pop
aaa
mov
adc
push
jo
test
mov
movsb
insb
popf
fdivl
stc
fsts
cmpsl
nop
popa
aaa
scas
mov
sbbl
jmp
js
add
aaa
cmp
out
add
mov
fidivrs
ljmp
inc
ss
jecxz
insb
pop
fbld
push
pminub
stc
mov
cltd
cld
aaa
dec
inc
ss
jp
adc
dec
xchg
mov
mov
test
aaa
lret
fadd
sub
in
mov
add
stos
jmp
idivb
cmp
pop
mov
or
xchg
inc
xlat
sbb
clc
lcall
sbb
or
test
pop
or
pop
mov
js
pop
push
adc
insl
push
loopne
enter
sub
test
adc
ss
movsl
leave
mov
sbb
aas
adc
xchg
dec
xor
cmovge
mov
pop
xchg
pop
xchg
sbb
add
xor
outsl
sarb
push
lods
jne
jae
loopne
mov
xchg
jg
or
in
aad
inc
or
xor
stos
add
dec
popa
xor
fistps
mov
xchg
or
or
pop
ret
jle
popa
and
cmp
cmp
xor
jns
add
push
cwtl
adc
pop
cmpsb
enter
jno
xchg
mov
adc
rolb
xlat
cmp
in
jno
mov
lret
rcr
push
aam
sub
dec
inc
dec
add
int3
dec
dec
add
mov
pop
and
sbb
jg
test
sbb
leave
insl
or
out
sub
inc
add
imul
adc
push
or
or
cmpsb
enter
jg
sbb
rcrl
push
insl
adcl
dec
sbb
add
sbb
cmpsb
enter
jg
sbb
adc
dec
pop
lea
xlat
cmp
inc
jbe
rcr
adc
cwtl
repnz
lea
sbb
inc
or
das
dec
insl
sbb
pop
jne
mov
mov
test
mov
pop
clc
out
cmp
jno
rorb
pop
jmp
pop
push
pushf
mov
or
add
sbb
cmp
fsubp
test
int3
imul
push
outsl
popa
int3
xchg
outsl
popa
add
push
adc
ljmp
shlb
stc
decl
nop
jg
dec
jg
or
jns
sbb
jns
cmp
add
movsl
or
mov
std
lcall
mov
jge
enter
jge
ja
ja
std
jmp
jno
dec
xchg
sbb
lods
int3
jae
adc
ljmp
addl
mov
dec
mov
or
add
lds
push
lret
add
or
imul
jge
sbb
add
mov
cmpl
repz
xor
arpl
daa
and
repnz
mov
inc
lret
fwait
jle
aaa
adc
fdivs
es
inc
mov
xchg
mov
insb
call
shll
out
mov
lds
jne
push
fdivs
ljmp
sarl
arpl
aaa
cmpsl
das
lea
les
aaa
jle
push
sarl
call
dec
je
lea
xlat
jae
aaa
sub
xchg
mov
dec
aas
mov
or
int3
shrl
xor
jae
clc
in
shlb
imul
add
dec
dec
popf
xor
scas
or
and
call
add
pop
fnstenv
cmp
or
lea
sbb
mov
or
fstp
fisubrs
in
mov
addr16
orb
aas
jns
jl
mov
cmp
mov
aaa
icebp
arpl
xor
dec
aaa
xor
loop
movsb
aaa
mov
lahf
pop
outsl
jp
mov
add
nop
sbb
sbb
mov
into
aaa
mov
decb
aaa
rclb
mov
aaa
xor
cmp
aaa
popf
loop
pop
push
xchg
jbe
inc
shr
mov
cmpsb
in
ljmp
mov
inc
sub
add
sti
jmp
mov
popf
mov
test
insb
sti
mov
push
aaa
loop
pop
or
sbb
iret
std
push
mov
out
fidivs
or
mov
xor
jmp
sbb
cmpsb
outsb
sarb
adc
test
inc
decl
mov
aam
aaa
pop
jecxz
cmpsb
cwtl
dec
rclb
mov
idivb
cmp
imul
int
dec
pop
popa
inc
add
lea
xchg
cmc
arpl
or
stc
cs
inc
adc
dec
js
pop
shufps
mov
or
pop
test
push
adc
addr16
or
outsl
add
outsl
jmp
cmp
scas
push
imul
pop
aas
mov
xor
das
cmpsb
ret
push
push
rolb
pop
mov
dec
das
mov
insb
lods
xor
mov
pop
push
xor
rcrl
dec
or
je
in
addl
inc
add
add
popf
bound
sbb
dec
adcb
bound
lcall
pop
scas
bound
jbe
and
lahf
jbe
and
or
daa
add
jo
mov
addr16
mov
mov
xchg
xor
or
inc
pop
pop
mov
scas
xor
loopne
out
xchg
pusha
clc
push
xchg
adc
adc
mov
mov
enter
lds
inc
xchg
inc
pop
dec
push
adc
mov
inc
int3
shrd
pop
imul
and
daa
xchg
cwtl
jns
add
daa
outsl
dec
std
mov
cvtps2pi
leave
out
dec
sbb
xor
add
mov
jge
scas
xchg
cmp
stc
inc
pop
jnp
fwait
aam
cmpsb
add
inc
sbb
ret
push
movsl
mov
imul
rclb
add
int
dec
insb
add
jmp
std
lods
sti
int
mov
insb
pop
jno
lea
dec
add
ja
mov
pop
lds
lahf
adc
pop
scas
rolb
cmp
aas
test
enter
adc
sub
xlat
push
cmp
call
mov
dec
add
addr16
pop
xchg
leave
dec
out
jo
inc
add
xchg
push
mov
mov
sub
sub
push
or
in
stc
dec
rep
mov
outsl
add
movsl
sbb
dec
or
in
aam
movsb
repz
in
mov
dec
mov
or
cmp
sti
repz
pop
cmp
sbb
push
repz
or
inc
outsb
mov
mov
and
dec
push
pop
mov
icebp
jge
add
add
sbb
scas
pop
sti
sbb
push
arpl
dec
mov
add
icebp
add
pop
pop
addl
in
inc
imul
in
out
cmpsb
xchg
add
hlt
sbb
adc
jbe
std
pop
loope
xchg
adc
test
movsb
mov
or
subl
cwtl
cld
adc
xor
cld
sbbb
jne
stc
and
sub
into
adc
cli
ret
xchg
or
dec
pop
pushw
xchg
shlb
shrb
mov
mov
into
mov
fdivrs
dec
test
lds
fildl
cmpsb
movsb
xchg
inc
and
js
out
xlat
ja
inc
xor
loope
sub
fsubrl
mov
push
dec
xorb
cmc
test
push
adc
dec
cmc
mov
dec
mov
bound
push
gs
shlb
mov
xchg
xchg
shlb
xlat
aaa
sub
push
xor
inc
jne
adc
ljmp
popa
jbe
jb
pop
lds
sub
push
add
clc
cli
add
call
push
outsl
jg
xor
int3
pop
imul
add
mov
adc
mov
dec
mov
or
clc
push
aad
push
xor
fcmovb
rorb
shl
sub
sub
repnz
pushf
shrl
pop
test
push
cmp
fisttpll
push
lahf
leave
js
adc
and
cmp
imul
shrl
or
outsl
push
dec
dec
pop
or
aad
mov
popf
jbe
imul
or
lds
mov
in
dec
pop
xor
pop
in
mov
imul
sbb
in
fmuls
dec
leave
add
xchg
out
and
dec
inc
cmp
jp
xorl
fnstcw
mov
mov
pop
adc
rcll
or
or
adc
add
out
stos
test
popa
xchg
mov
xor
mov
mov
cmp
jbe
imul
cmpsb
dec
adc
popa
dec
pusha
leave
das
mov
add
test
and
sub
adc
push
inc
sub
addl
daa
int3
jg
call
fstps
cmpsl
fs
das
xor
adc
rolb
xor
add
std
ljmp
jb
dec
push
add
notb
jecxz
inc
in
jg
in
or
lret
xchg
hlt
mov
xchg
xchg
add
popw
add
ret
aad
das
dec
xchg
mov
test
nop
hlt
leave
scas
mov
outsb
outsl
inc
aad
push
xchg
sub
aad
out
mov
and
loope
ljmp
popa
pusha
inc
push
jmp
dec
das
pop
cmp
dec
push
das
pop
pop
out
popf
lret
aad
inc
dec
push
xchg
add
pop
sbb
outsl
add
dec
xchg
test
cmp
add
lods
dec
movl
add
mov
add
loope
sub
int
mov
fs
stc
lods
dec
lds
stc
inc
sub
or
je
push
add
loope
rcrb
add
jo
mov
add
loope
dec
push
sahf
std
jmp
andl
icebp
mov
loope
test
insb
lods
or
xchg
sbb
inc
xchg
lods
push
pop
mov
lods
iretw
sarl
decl
adc
jg
js
call
negl
pop
or
jbe
lea
jb
cmp
fistpll
scas
fildl
outsl
add
out
mov
nop
add
mov
insl
imul
aam
inc
mov
adc
rcrl
add
mull
stc
push
push
ss
xor
and
lcall
mov
jecxz
dec
xor
add
js
mov
test
lea
movsl
test
or
cmpsl
jne
mov
mov
adc
add
shll
dec
or
mov
push
fiadds
sub
push
out
sarb
addr16
or
ret
adc
adc
test
xchg
out
dec
mov
cmc
adc
sub
cmpsb
sub
mov
push
mov
mov
or
sub
push
sarb
lcall
xor
or
pushf
loope
adc
push
mov
call
jb
add
clc
inc
lret
mov
add
cltd
test
jo
fwait
add
mov
dec
aam
pop
mov
in
mov
loopne
imul
in
lcall
jns
or
jmp
lods
add
sbb
jo
cmc
and
mov
inc
loopne
das
dec
arpl
adc
imul
mov
testb
js
add
outsl
cmc
mov
call
pop
xchg
in
rcll
xchg
ficoms
mov
push
xor
xchg
pop
sub
insl
bound
into
loope
mov
ret
cltd
pop
rcrb
pop
mov
in
leave
pop
jno
jecxz
sbb
mov
rorl
push
out
jnp
push
pop
inc
xchg
push
add
jo
push
out
xchg
orb
dec
adc
jmp
dec
dec
push
cli
cmp
nop
jecxz
add
add
das
dec
cli
adc
sub
addb
dec
lret
les
leave
je
inc
add
mov
jmp
inc
adc
mov
cmc
dec
rclb
out
ds
push
inc
lock
int3
ja
mov
data16
shrl
bound
dec
aaa
fsub
insb
orb
mov
in
pusha
dec
mov
aaa
push
pop
mov
mov
jo
jb
push
or
jns
fildll
aaa
add
dec
dec
mov
adc
cmpl
nop
mov
pop
push
adc
js
jne
cmp
lods
leave
inc
jmp
dec
ja
int3
pop
aaa
push
jae
inc
shll
xlat
cmp
mov
mov
fnstsw
cltd
jle
cmpsb
lock
mov
aaa
loope
lods
rcrb
arpl
mov
insb
cmp
push
mov
outsb
adc
fisttpll
pop
popa
push
inc
cwtl
jnp
or
enterw
les
lods
jl
pop
pop
mov
in
cmp
aaa
sahf
jge
int3
test
adc
cmp
notl
pop
sub
or
add
aam
and
inc
les
movsb
sbb
int
lea
mov
pop
cmp
adc
mov
test
aaa
cli
dec
jp
jge
stos
aaa
cmp
inc
mov
push
sbb
sar
xchg
movsb
je
lods
mov
fwait
aaa
jbe
cli
hlt
sti
repz
aaa
mov
cmc
cmp
mov
nop
jbe
add
insl
icebp
aas
repnz
or
loope
xor
adc
xchg
out
jle
push
loopne
aad
aaa
mov
inc
jp
shrb
repnz
push
jle
js
pop
add
jae
xor
aas
ss
mov
mov
mov
aaa
rcrl
fisubrl
addb
aaa
jo
fucomi
sub
jp
shll
inc
lcall
iret
cld
or
rcr
jns
mov
cmp
jge
and
and
mov
adcl
repz
cltd
fucom
xor
add
lock
pop
nop
push
insl
aaa
or
fwait
dec
push
push
mov
aaa
xor
sti
cwtl
shlb
xchg
mov
cmp
int3
in
aaa
hlt
call
mov
aaa
popl
push
aaa
sub
lods
test
sbb
jp
int3
inc
test
out
aaa
xor
sub
mov
int3
mov
in
jns
les
inc
mov
pop
daa
cmp
fwait
add
rorb
push
mov
push
popa
clc
pop
outsl
movntps
sbb
aaa
adc
push
jg
in
aam
jno
scas
push
mov
dec
cld
idiv
sub
iret
aam
aaa
xchg
dec
scas
push
or
add
push
mov
loope
lds
add
mov
daa
push
cmpb
imul
scas
xchg
mov
adc
or
rcrb
shl
aaa
and
dec
ds
or
sub
mov
dec
xlat
mov
adc
xor
aaa
fnstenv
or
aaa
mov
inc
daa
jle
xchg
push
aaa
rcll
lods
fistps
aad
sbb
mov
add
aas
dec
jl
js
sarl
aaa
adc
mov
sub
mov
mov
jecxz
rcrl
arpl
and
shlb
xchg
rorl
test
mov
push
loope
clc
jno
or
fldl
pxor
xor
and
jecxz
aaa
fcoml
or
pop
bound
insb
lods
ret
out
ret
fbstp
and
lret
fs
in
lea
jmp
aam
stc
push
sub
sbb
js
or
mov
sbb
adc
stc
mov
add
loope
sti
jns
cwtl
adc
sti
mov
push
inc
mov
dec
cmovne
outsl
pop
les
dec
cmp
mov
jne
xor
mov
xor
sub
adc
push
rolb
xlat
cmp
dec
loopne
pop
pop
insb
hlt
js
mov
test
arpl
add
enter
test
arpl
xor
ss
mov
inc
mov
outsl
xchg
pushf
testb
add
mov
add
mov
fidivrl
sbb
addr16
xor
dec
add
sbb
adc
iret
int
dec
jne
repz
dec
and
and
push
sbb
fdivp
or
rolb
fwait
xor
ss
fwait
and
xchg
and
test
mov
push
int3
xor
arpl
rolb
and
rorb
sub
rep
div
lock
add
pop
xor
add
addl
mov
and
enter
inc
jmp
mov
lods
rorb
sbb
push
sbb
mov
dec
push
jecxz
mov
mov
push
sbb
ds
ds
jnp
and
add
repz
aas
push
adc
roll
xor
sub
add
test
xor
add
enter
clc
cmpsl
ja
push
arpl
push
call
loope
mov
or
inc
sbb
int
jne
pop
aad
lret
ss
sti
or
outsl
inc
jge
movsl
or
pop
push
mov
jae
sbb
xor
and
xor
mov
adc
sbb
mov
ds
adc
push
adc
stos
and
sub
push
xchg
lea
jg
sbb
mov
xor
pop
ljmp
es
aad
lret
mov
gs
jns
mov
test
lcall
int3
rcrb
push
leave
mov
mov
push
mov
ljmp
sub
jl
mov
outsl
adc
in
scas
adc
ret
pop
addr16
add
mov
adc
roll
pushl
or
add
or
test
jp
sbb
std
loope
pop
outsl
mov
jg
mov
or
xlat
mov
mov
test
xor
stos
out
sbb
lret
push
stos
or
icebp
adc
mov
xchg
xorb
fidivs
xor
jle
inc
js
and
aad
setnp
mov
xchg
aaa
test
loope
int
push
cmc
or
xchg
jns
test
shlb
cmpsl
divl
pop
aaa
orl
fildll
push
mov
scas
dec
and
aaa
movsl
stc
lds
dec
mov
lret
xchg
mov
mov
or
mov
sbb
adc
pop
pop
lahf
inc
icebp
das
cltd
cmp
aaa
push
jnp
nop
notl
insb
add
repz
aas
into
sub
mov
ds
inc
jnp
push
aaa
addr16
out
lret
repnz
jle
xor
test
loope
mov
iret
dec
pop
and
sub
aaa
ds
fs
lret
mov
mov
aaa
jmp
xorb
sbb
repnz
push
nop
fwait
xor
jmp
mov
xor
jle
mov
xchg
loope
jnp
incb
shrb
aaa
in
int
dec
and
aaa
pop
aam
mov
cmp
xchg
fs
jno
out
cmpsl
xchg
stos
sub
outsl
daa
push
cltd
mov
adc
sbb
lahf
or
push
mov
inc
push
lock
aaa
xchg
fs
adc
mov
or
xchg
int3
jb
jecxz
das
fdivr
inc
clc
rcr
add
sbb
icebp
in
aaa
xor
sarl
and
pop
test
movsb
fbld
push
jno
add
cmpsb
jle
aaa
mov
or
scas
sub
xor
aaa
pause
add
mov
and
mov
ds
jb
adc
scas
aad
push
loop
fisubrs
push
jae
aaa
push
ljmp
aaa
mov
into
outsl
or
cmp
add
aaa
out
or
and
inc
mov
loop
mov
hlt
inc
scas
cwtl
jne
add
lock
mov
and
fldenv
fstpl
sub
inc
dec
aad
lahf
mov
dec
addr16
rcl
int3
popa
aaa
jbe
mov
fistpl
movsl
inc
mov
stc
fwait
jbe
cmpl
loope
xchg
or
mov
push
ja
xchg
xchg
inc
xchg
shll
lret
xchg
mov
out
cs
lcall
push
loope
xchg
lahf
adc
xor
mov
cmp
jbe
jae
mov
repnz
pop
iret
aaa
imul
jl
cmpl
mov
xchg
dec
std
test
cmc
push
fildl
aaa
leave
adc
lcall
pop
out
test
mov
push
jg
enter
pop
aaa
lods
mov
jecxz
int
popf
aaa
xor
mov
aam
popa
mov
leave
iret
jne
stos
pop
es
jle
cwtl
xor
xor
fdivrs
pop
pop
stos
add
aaa
ret
pop
repz
lods
idivb
std
enter
xchg
lods
fcoml
aaa
sub
or
gs
jge
or
pop
dec
sbb
mov
in
movsl
icebp
and
daa
mov
into
mov
test
mov
xchg
imul
aaa
sub
daa
ret
cmp
scas
and
xor
aaa
lret
mov
or
xor
aaa
iret
in
addb
cmp
mov
repz
fcomps
shl
mov
add
rcll
sub
xlat
and
hlt
and
popa
aaa
frstor
imul
je
pop
jnp
aaa
and
daa
jp
inc
push
add
dec
aaa
lods
xlat
and
fs
es
cmp
or
aaa
outsb
or
push
addr16
ja
jns
mov
and
sbb
or
lret
sbb
aaa
stc
lea
scas
in
push
aaa
xlat
les
xchg
pop
shlb
push
inc
pop
leave
fldt
fidivs
add
and
add
jne
repz
mov
xor
ja
ds
mov
test
js
lods
out
aaa
int3
in
loop
jle
pop
aaa
cld
cmp
pushl
es
lods
push
add
jecxz
cmp
mov
shll
lds
aaa
inc
fdivs
daa
add
call
fisubs
jns
inc
lds
imul
int3
fbstp
shll
rcrb
pop
push
daa
pop
nop
data16
cmp
aaa
sbb
repz
push
adc
pop
lret
lret
xor
outsb
dec
adc
inc
cmp
clc
push
imul
xor
mov
ja
int3
adc
xor
mov
test
shll
mov
sti
lahf
mov
sbb
ret
pop
xor
or
mov
xlat
push
or
test
or
in
fdivs
sar
push
sub
dec
repz
and
push
aaa
pop
rclb
pushf
aaa
xor
into
loope
out
lret
adc
mov
insb
xchg
xlat
aaa
imul
or
test
mov
push
inc
push
sub
adc
lret
lret
xchg
xchg
and
divb
cmpb
pop
aaa
fnstenv
testl
pushf
int3
push
aaa
xor
dec
ret
and
sub
mov
mov
jbe
and
cmp
aaa
cmp
adcb
pop
adc
std
sti
jne
push
mov
add
jne
js
mov
outsl
dec
bound
gs
mov
cmpsb
test
or
pop
imul
dec
aaa
fdivr
sbb
negb
adc
insl
mov
fsubl
and
gs
cmp
rcrb
aaa
adc
into
adc
xchg
pop
adcb
or
jnp
repz
lods
push
ja
jl
orl
pushl
mov
push
sub
inc
popf
sbb
push
xchg
add
imul
pop
pusha
xchg
push
xor
popfw
adc
or
cld
roll
mov
int
jae
mov
lea
sub
fs
shl
dec
in
xor
aaa
cmp
out
je
imul
dec
addl
jne
insl
sbb
sbb
andl
mov
lea
add
xor
shlb
ficomps
imul
shl
test
fidivrs
mov
int3
scas
xor
cmp
adc
imul
adcb
jae
sub
clc
adc
stc
outsl
test
pop
and
adc
inc
into
jecxz
cmpsl
aaa
repz
stc
fsubl
daa
mov
test
adc
mov
jl
xlat
sbb
and
pop
push
popa
xor
xor
ficoms
dec
out
xor
pop
xchg
and
fsubrl
stc
hlt
nop
call
int
clc
icebp
notl
test
or
or
and
aaa
add
push
inc
xor
andl
mov
ds
jae
sub
and
jne
gs
leave
std
gs
aaa
fs
adc
loope
aaa
fdiv
adc
and
jno
frstor
rcrl
aaa
mov
int3
pop
imul
mov
scas
out
jbe
shlb
xchg
out
pushf
mov
aaa
dec
adc
cli
push
movsb
std
aaa
popa
sub
inc
stos
pop
pop
xor
jbe
mov
sub
xorb
imul
cmpsb
push
xchg
sub
aaa
and
ror
add
nop
sbb
adc
inc
mov
sub
icebp
aaa
clc
dec
and
add
sub
imul
xchg
xchg
fidivl
imul
inc
stos
fwait
inc
mov
xor
iret
or
js
sbb
push
js
sti
mov
scas
aaa
mov
push
sub
adc
add
cs
nop
aaa
roll
enter
fs
cmpsl
xor
aaa
jp
neg
jecxz
out
mov
jo
sbb
adc
jmp
mov
aaa
outsb
loopne
fcmovnbe
in
scas
pop
aaa
mov
and
in
xchg
dec
aaa
sub
lahf
aaa
pusha
adc
fdivr
mov
pminsw
loop
bound
sub
xchg
mov
or
jae
jbe
hlt
aaa
scas
mov
sub
pop
repnz
aaa
fcmove
lret
inc
aaa
sahf
cmp
push
xlat
outsl
les
fisttps
cmpsb
add
mov
sbb
xchg
aaa
xor
and
push
aaa
mov
adc
aaa
out
push
sbb
aaa
inc
and
mov
stos
cmpb
mov
fwait
sub
xorl
mov
stc
ja
and
daa
cmp
xchg
mov
fwait
aaa
test
stc
aaa
inc
mov
insl
jmp
nop
in
dec
pusha
aaa
repz
sbb
and
cmp
mov
nop
fs
mov
sub
mov
xorl
xchg
jns
xchg
imul
out
test
out
push
rcll
dec
pop
shr
mov
int3
cwtl
test
dec
cmp
ds
cmp
and
cld
push
xorb
fdivs
mov
sub
ja
jecxz
or
jne
mov
or
xchg
add
hlt
pushf
div
es
pop
or
dec
jmp
cmp
lods
add
testb
cmpsl
daa
mov
inc
dec
xor
adc
lods
jnp
cld
nop
aaa
fdivr
mov
lods
movsl
idiv
cmp
inc
sub
scas
lcall
sub
inc
xchg
daa
adc
mov
addr16
push
test
jnp
xchg
aam
lods
rclb
mov
popa
jmp
jne
outsb
aaa
decl
jae
push
andb
push
cld
push
dec
aaa
cltd
add
aaa
sub
push
inc
mov
push
aaa
inc
mov
loope
jno
dec
test
mov
cmp
leave
push
scas
lahf
stos
sbb
mov
cmp
mov
mov
ss
fistps
aaa
cmpsl
fs
stos
lret
clts
sbb
mov
push
xchg
aaa
scas
mov
dec
mov
movswl
mov
adc
lret
fsubs
mov
and
int3
cs
inc
aaa
or
cltd
lahf
inc
leave
imul
xchg
xlat
popf
loopne
sbb
or
daa
aam
mov
mov
mov
test
pop
int3
mov
add
xchg
adcl
fwait
sub
lcall
or
cmpsl
jl
sbb
aam
pop
add
inc
cmp
aaa
xor
aas
mov
aaa
adc
inc
xchg
jl
inc
inc
aaa
mov
bound
and
inc
sbb
into
jp
imul
adc
add
int
imul
xchg
cmpsb
jae
jne
fimuls
aas
iret
or
jnp
aas
adc
mov
add
push
aaa
daa
sub
fadds
test
lods
out
aaa
leave
aam
insb
in
mov
bsf
dec
shl
pop
push
nop
les
jl
mov
lcall
sub
and
sbb
lret
pop
adc
xchg
jmp
mov
dec
aaa
push
jp
stos
lcall
push
sbb
mov
mov
aaa
sbb
push
cld
jmp
mov
and
push
loopne
cmp
jl
mov
xor
lcall
aaa
shrb
adc
es
push
inc
inc
daa
mov
outsb
in
cmp
iret
lret
sbb
icebp
mov
int3
lods
pand
add
fs
aaa
inc
pusha
icebp
std
scas
stos
subl
and
xlat
fs
sub
sahf
jbe
sub
jnp
pop
fidivl
mov
sbb
mov
in
call
adc
mov
xchg
js
movsb
aaa
and
fwait
cs
idiv
js
repnz
or
pop
ja
cmp
ret
outsl
xor
clc
or
add
testl
push
push
and
cwtl
psubq
mov
ds
ss
negl
orl
fwait
mov
test
inc
shr
fiadds
adc
mov
mov
xor
aaa
mov
decb
aaa
mov
push
xchg
dec
mov
aaa
adc
dec
std
or
mov
stos
fldl2t
test
cwtl
test
in
lcall
aaa
pop
dec
fs
pop
push
imul
cwtl
push
add
fists
outsb
fisubrl
in
loope
pop
test
les
push
or
pandn
scas
call
cwtl
outsl
leave
xchg
mov
cmp
in
push
sbb
sub
and
idivl
clc
ss
orb
sub
fwait
xor
cld
mov
lret
loope
bound
mulb
mov
stos
aaa
test
dec
scas
insb
mov
es
pop
push
fmull
icebp
dec
mov
adc
sub
aam
aaa
mov
mov
out
jge
fwait
adc
test
outsl
aad
xchg
xchg
das
jae
aaa
loopne
pop
aas
sub
ror
pusha
adc
xor
add
lret
cmp
xchg
push
jae
xor
out
jnp
push
jno
cltd
leave
mov
push
sub
cli
outsl
jb
push
repz
aaa
cltd
ficoms
cmovnp
jmp
sub
sbb
add
aaa
cs
and
cmpsl
sbb
aaa
dec
or
cmpsb
aaa
jb
sub
jl
imul
xor
aaa
adc
rep
add
fistpll
out
cmp
or
push
sarb
adc
and
stc
mov
sbb
cmp
mov
bnd
repz
or
sbb
outsb
or
adc
call
mov
dec
lock
push
mov
inc
in
leave
ljmp
add
jno
in
mov
inc
arpl
sbb
sbb
outsb
sahf
inc
gs
aas
divl
xchg
cmp
iret
jecxz
aas
leave
push
xor
clc
mov
sub
das
fstpt
mov
xor
cld
adc
sahf
js
jl
push
addr16
lods
test
push
xchg
add
call
jns
ret
loop
pop
aam
fdivs
mov
jae
inc
fcoms
pop
jno
les
fwait
push
cmc
insl
pop
fstpl
ds
lods
stos
clc
mov
adc
sti
andl
sub
out
sub
fcmovne
aam
inc
xor
stc
adc
sbb
push
mov
mov
cmp
aaa
push
loope
test
cwtl
jne
adc
out
cmp
cltd
sub
rcrb
pop
cld
mov
pop
lret
push
das
or
xchg
add
inc
mov
xchg
dec
decl
sub
scas
shrb
xorb
rcl
stc
adcl
rcrb
loopne
lea
mov
push
aaa
push
and
pop
mov
jmp
lahf
lods
adc
repnz
jns
dec
pusha
mov
mov
int3
add
ret
inc
xchg
test
psubb
loopne
sbb
nop
outsl
adc
test
clc
fbstp
push
mulb
sub
mov
and
shlb
lods
jecxz
sub
fldcw
cli
hlt
mov
dec
push
xchg
adc
pop
pusha
sarl
sub
ja
jne
jbe
pop
pop
fsubs
test
mov
xor
jecxz
and
cmpsl
mov
divl
xor
cmc
jge
lcall
pop
in
dec
jge
insl
je
sbb
ret
daa
jg
adc
mov
aaa
push
push
out
popa
push
cmpsl
pop
inc
dec
xor
cmp
xchg
aam
cmp
dec
or
xchg
mov
sub
mov
jne
xchg
dec
shrb
ret
mov
xor
aaa
dec
fidivs
test
in
mov
test
mov
jl
addr16
sub
adc
scas
test
jge
enter
cmp
das
mov
call
or
push
cs
cli
testb
jp
paddq
adc
mov
ret
sub
or
fwait
clc
add
jl
aaa
push
inc
decl
ds
aaa
ljmp
in
paddw
xchg
fwait
inc
cli
inc
enter
fistl
test
push
dec
pop
sti
and
rcrb
inc
push
pusha
add
mov
in
movsl
sbb
aaa
movsb
xor
push
test
dec
nop
aaa
cmp
cmpsl
repnz
sarl
jle
jmp
lret
imul
inc
aaa
test
insb
test
dec
shll
sbb
sahf
xchg
lea
push
mov
push
aad
mov
add
xor
rcl
aad
daa
lods
aaa
lea
insb
lahf
jns
aaa
xor
test
aaa
and
bound
je
sub
mul
adc
mov
int3
push
add
ja
stc
push
mov
jae
or
push
aaa
scas
sti
mov
xchg
lock
aaa
mov
movsb
adc
sub
sub
mov
cmovs
adc
dec
add
xchg
in
mov
pop
push
or
push
xchg
xor
lds
mov
mov
push
sub
dec
dec
adc
add
inc
and
jbe
sbb
mov
mov
scas
push
sbb
dec
cmp
add
cltd
xor
outsl
mov
push
jb
dec
dec
jbe
jecxz
movsl
inc
sbb
aaa
test
jns
imul
push
stos
push
repz
lock
and
out
imul
lret
bound
das
shr
test
repnz
imul
cmp
sbb
bound
and
jecxz
xchg
xor
fdivs
push
push
dec
and
imul
jne
mov
je
lods
xchg
dec
pop
or
cld
mov
mov
pop
mov
es
dec
rdmsr
faddl
test
pushf
xor
repnz
adc
jle
imul
pop
pop
inc
movsb
mov
mov
adc
cmp
mov
push
and
add
insb
xchg
inc
push
pop
in
jecxz
sbb
mov
pop
pop
outsl
pop
incl
rorb
stc
inc
pop
in
dec
push
adc
sbb
dec
or
aaa
mov
or
pop
or
mov
aad
clc
or
add
test
mov
and
mov
inc
gs
sub
and
shrb
mov
ficomps
mov
mov
jnp
jge
pop
orl
cmp
and
in
sbbb
imul
cmpsl
std
nop
add
sbb
sahf
lahf
and
dec
or
mov
mov
or
jne
inc
xor
and
addr16
imul
sbb
out
pushf
int
cltd
xchg
pop
xchg
and
xor
ficompl
sbb
imul
mov
dec
into
ss
mov
mov
out
jne
jge
inc
divb
xchg
pop
repnz
mov
jb
inc
fidivl
adc
inc
out
ret
pop
add
sahf
xchg
sub
cmp
sti
lcall
sbb
outsl
ljmp
adc
dec
aas
mov
or
pop
and
push
popa
shl
jge
lea
cmpsb
and
sub
mov
mov
jnp
das
fcmove
sbb
mov
pop
movsl
imul
dec
js
adc
insb
dec
imul
mov
stos
pop
stc
jg
out
mov
pop
cwtl
daa
xchg
cld
out
adcl
inc
insl
movsl
mov
cmp
adc
aaa
stos
mov
push
movsb
xchg
adc
movsl
adc
inc
sub
jge
scas
nop
mov
cmc
stos
aaa
cwtl
ficomps
rcrb
shlb
and
adc
imul
popa
jb
mov
hlt
popa
icebp
mov
mov
pop
addr16
andb
cld
popa
insb
or
sti
or
pop
out
push
mov
shrl
imul
cmp
inc
dec
adc
dec
inc
pop
sbb
sub
lret
xchg
aad
sbb
out
or
pop
push
jno
scas
sti
pusha
push
push
sar
outsl
es
pop
imull
or
ja
lret
mov
mov
in
xlat
and
adc
xlat
lea
xchg
jecxz
das
sbb
adc
dec
jbe
shlb
sbb
mov
adc
mov
add
pop
cmp
jae
add
sbb
xchg
or
and
push
decl
adc
sub
mov
ds
or
add
fwait
arpl
mov
or
and
push
popaw
pop
add
add
add
dec
test
jbe
xchg
pop
adc
mov
xor
and
add
adc
xchg
pop
push
xchg
adc
jns
adc
or
sbb
cmp
dec
sbb
sub
in
pop
mov
fmul
pop
fsubrl
loope
in
pop
popa
pextrw
mov
dec
xchg
mov
mov
ret
add
movhps
arpl
mov
out
or
adc
int
pop
cld
arpl
dec
xchg
lea
sub
xor
add
xchg
or
icebp
mov
mov
xchg
mov
fistl
insl
push
mov
insl
jecxz
or
jo
dec
adc
adc
ss
adc
inc
pop
repz
jmp
sub
add
int3
sbb
inc
repz
mov
test
sti
mov
sti
mov
pop
or
out
enter
int3
ljmp
mov
xchg
jb
out
xchg
xchg
imulb
pop
lcall
mov
dec
and
or
jo
add
adc
lret
pop
orl
xchg
cmp
xor
aas
xchg
mov
sub
mov
jmp
mov
mov
int
dec
dec
lods
aad
mov
cli
cmpsb
shll
mov
pop
in
sbb
inc
mov
in
outsl
aad
or
add
pop
ror
test
inc
ja
dec
mov
add
insl
pop
mov
mov
push
lcall
pushf
xchg
jne
popa
mov
in
mov
test
sbb
sbb
lret
dec
in
ficoml
mov
cwtl
dec
out
cld
jne
cs
mov
mov
mov
xor
push
mov
dec
mov
mov
imul
flds
dec
jno
sbb
pop
xchg
out
mov
aam
pop
lcall
and
push
sbb
mov
lea
dec
clc
loop
or
cmp
addb
pop
decl
outsl
mov
push
clc
or
ja
scas
adc
loope
add
add
or
pushf
xchg
pop
insl
mov
repnz
and
inc
addb
or
imul
jge
repz
sbb
mov
mov
mov
mov
mov
std
add
inc
dec
jns
stos
cltd
scas
icebp
stc
jecxz
sti
ss
inc
out
insl
ja
mov
cmp
insl
shr
repnz
leave
bound
sbb
repz
xor
clc
adc
orl
jmp
push
movsb
repnz
shlb
outsl
push
ja
and
pop
lahf
std
call
push
adc
add
push
pop
lods
push
cld
adcb
imul
mov
and
call
outsl
das
cltd
int3
adc
ljmp
and
add
je
xchg
cmp
movntq
call
rcl
jno
sub
inc
adc
movsb
aam
cli
aaa
sbb
popf
xor
lods
shl
mov
lds
aaa
adc
insl
inc
jle
add
and
in
ss
clc
scas
push
sbb
ljmp
pop
fcoms
mov
lahf
addb
aaa
sub
out
daa
fnstcw
push
jp
mov
sbb
aaa
lock
data16
stos
fists
dec
mul
or
adc
jb
popa
dec
pop
xacquire
mov
andnps
cmpl
cmpsb
mov
cmp
insb
adc
decb
jecxz
shlb
hlt
stos
pop
sub
in
insb
test
icebp
sbb
lahf
or
iret
jge
push
phaddsw
mov
inc
scas
int3
and
mov
daa
jnp
fsubs
mov
pop
xchg
dec
cmp
sub
xor
sbb
repnz
jbe
aaa
sbb
lcall
push
aas
adc
inc
inc
jle
mov
adc
inc
jp
add
aad
push
aaa
sbb
push
push
push
aaa
pop
dec
testl
inc
mov
mov
cs
pop
mov
fadds
aaa
sbb
imul
mov
xchg
jmp
sbb
repz
jno
sub
lret
cmp
lret
dec
push
fstpt
aaa
scas
inc
xchg
dec
lahf
inc
jg
or
loope
mov
mov
pop
loopne
mov
sbb
sbb
mov
fstpt
lods
imul
sbb
mov
and
ret
call
inc
out
xlat
ficompl
xor
adc
fdivs
les
mov
data16
or
outsl
shl
mov
mov
iret
aad
repz
pop
aaa
mov
pop
mov
sahf
jo
mov
and
push
hlt
inc
testb
aas
sbbl
cmpsl
or
add
xchg
sub
daa
cmp
sbb
adc
xor
inc
push
sbb
dec
lea
loop
ja
aas
xchg
xchg
in
sbb
aas
repnz
pop
sbb
lock
sbb
pop
lds
test
and
pushf
pop
andl
mov
cmp
pop
clc
sub
jle
pop
jb
popa
mov
or
and
inc
cmp
das
cmp
addr16
jbe
ss
js
aad
or
add
imul
mov
xchg
addl
jl
int
xchg
add
aaa
popf
ror
sbb
int
in
sbb
inc
adc
dec
inc
subb
xchg
scas
imul
insl
ljmp
jno
out
loope
popa
popa
clc
fs
movsb
pop
imul
test
loope
dec
fwait
mov
adc
xchg
cmpsb
mov
test
fisubrs
lods
aad
mov
popf
test
mov
int3
lock
fs
xchg
sub
imul
pop
mov
test
xor
dec
sbb
pop
dec
xchg
pop
imul
push
sbb
aad
adc
sahf
push
xchg
adc
pusha
fs
cmc
sbb
insl
dec
inc
arpl
ja
inc
out
push
shll
ret
outsl
jae
insl
adc
out
cs
or
lods
jno
xchg
fisubs
cmp
sti
out
xor
mov
popf
jmp
in
mov
mov
or
dec
or
and
xchg
jmp
insl
cmc
mov
add
pop
pmaddwd
std
mov
pop
mov
test
add
scas
adc
vunpckhps
bound
enter
test
cmp
aad
pop
scas
add
mov
xchg
fmulp
lods
in
jle
mov
mov
shrd
cmp
mov
in
stc
jae
scas
out
cmp
pop
adc
adc
jp
incb
or
sbb
cmp
stos
pop
lret
pop
nop
mov
or
lock
aaa
sbb
pop
mov
and
int3
aaa
mov
incl
cmp
stos
scas
mov
clc
addr16
sub
fsubl
movsb
aaa
mov
dec
cld
icebp
dec
divb
dec
sub
shll
movzbl
scas
les
add
inc
push
push
push
jmp
aaa
lret
xchg
cmp
and
aaa
loope
rcll
cwtl
cmpsl
adc
aam
cmp
adc
cmpsb
mov
sbb
test
jno
push
fbstp
sbb
jl
adcb
inc
mov
cmp
cmpsb
pop
lret
out
out
aaa
xchg
stc
xor
aas
adc
push
loope
lret
popa
je
adc
xor
fwait
dec
jl
xor
ljmp
jns
imul
aaa
test
fdivrs
out
or
loopne
aaa
roll
sub
lret
inc
sub
aam
and
push
sbb
adc
push
aaa
sbb
jne
aaa
push
repnz
lret
mov
aaa
lds
addr16
aaa
das
sbb
repnz
xchg
das
mov
arpl
int
push
push
aad
fbstp
aaa
nop
xchg
aas
jg
lret
pusha
mov
mov
xor
in
stos
ja
mov
cmp
pop
sbb
sub
or
popf
jmp
aaa
out
lret
xor
test
ds
cmp
and
cmp
mov
mov
daa
notb
aaa
cld
movsl
fsubs
push
dec
push
jo
add
jnp
rclb
adcb
adc
int3
sbb
inc
orl
in
fadds
aaa
sub
cmp
sbb
xor
mov
or
dec
or
aad
or
sub
in
fadds
jae
hlt
dec
mov
xchg
cs
loop
adc
aaa
fistpl
rcl
aaa
inc
cmpsb
rcrl
xor
lea
sub
aas
pop
mov
pop
fbstp
cld
adc
add
push
fdivl
fs
mov
adc
loop
sti
in
out
or
test
imul
sbbl
ret
ds
sub
add
adc
test
aaa
push
jl
mov
push
xchg
fwait
aaa
push
arpl
dec
out
push
jmp
mov
pushf
mov
ret
dec
xlat
fsubrl
dec
cli
cltd
pop
aaa
movsl
xchg
repz
aaa
daa
or
jle
sbbl
cmc
call
shrl
punpckhdq
inc
aas
cmp
enter
mov
aaa
sti
xor
mov
xchg
or
repnz
pusha
pop
push
sbb
jge
leave
iret
bnd
hlt
mov
push
xchg
adc
and
rcll
aas
jno
loope
pop
inc
cmp
insb
jnp
push
out
adc
mov
inc
bound
aaa
subb
inc
fidivrs
and
xchg
je
cmc
adc
jo
push
or
js
pop
aam
push
testb
lds
push
popa
lea
das
leave
pop
mov
or
popf
xor
or
push
fisubl
adc
and
cmp
jge
add
test
add
out
push
js
ror
rolb
xor
les
scas
mov
and
push
mov
in
adc
dec
outsb
and
aaa
lret
mov
into
pushf
sub
pop
jecxz
xchg
cld
aaa
cmp
ret
ss
dec
aas
push
in
dec
mov
orb
sbb
fnstenv
jmp
nop
cmc
mov
loope
outsl
jns
aaa
les
ljmp
fimull
xorb
lock
mov
imul
inc
dec
mov
loope
aaa
mov
sbb
inc
jnp
dec
adc
rcl
stc
mov
aad
lcall
aas
fdivs
xchg
push
mov
push
mov
pop
jno
fsts
pavgb
mov
cwtl
lock
lods
pop
mov
jge
pop
cmpsb
mov
loop
sbb
push
adc
xchg
js
push
mov
les
xchg
pop
repnz
movsb
adc
shl
mov
mov
out
shlb
add
fcompl
aaa
inc
nop
aad
lahf
pop
popf
xchg
aaa
stc
dec
add
push
rorb
int
mov
out
aaa
xor
icebp
add
shll
lret
pop
das
jbe
fnstenv
jns
cmp
cld
xchg
ja
mov
lcall
jg
iret
lock
outsb
ret
pop
ds
inc
mov
inc
into
roll
adc
js
add
mov
jae
mov
cmp
cmp
les
ss
push
dec
mov
xchg
loope
jb
mov
loopne
aaa
std
andl
push
popa
dec
ret
aaa
pusha
mov
notb
aas
cmp
ucomiss
fsub
mov
mov
pop
icebp
aaa
sbb
sbb
pop
popl
pusha
aad
jo
jle
dec
fs
int
test
add
jecxz
movsb
test
jns
cli
aam
xor
xor
push
push
inc
movsb
or
add
mov
cmpsl
cmp
clc
add
mov
aaa
or
out
cmp
mov
jnp
xor
add
pop
aaa
imull
pop
or
mov
mov
sarb
cmp
jl
bsr
inc
repz
and
fadd
out
xchg
mov
sbb
fadds
aaa
mov
mov
sti
aas
test
in
inc
incl
mov
cmp
jg
add
shlb
sbb
sti
inc
or
cmpsl
or
testb
daa
adc
jmp
sub
mov
mov
push
aaa
inc
fbstp
fsubrs
idivl
clc
adc
enter
lahf
mov
mov
push
or
inc
jo
sti
lret
add
mov
push
les
aaa
xchg
xor
mov
fisubl
les
adc
inc
stc
jns
mov
in
mov
pop
or
dec
add
add
aaa
inc
jae
sub
aad
push
clc
push
mov
int
in
jl
roll
aaa
xchg
pop
rcrb
jecxz
mov
loope
push
xlat
aaa
leave
cmp
add
loop
mov
aas
mov
inc
aaa
mov
inc
jg
xor
fdivp
add
repz
inc
jo
es
aaa
loopne
sub
ret
divl
xor
jne
fs
inc
pop
test
inc
mov
inc
js
or
mov
pusha
aaa
ja
sbb
in
aaa
ret
out
dec
add
aaa
hlt
testl
aad
cmpsb
mov
test
aaa
mov
std
push
aaa
pop
je
cmp
out
cmp
aaa
shlb
shrb
or
in
push
push
cs
mov
aaa
iret
sub
push
repz
or
add
cmp
outsl
mov
and
mov
ljmp
pop
ja
into
aas
test
ss
pop
lods
pusha
cs
stos
aaa
adc
fistpl
dec
iret
or
mov
imul
notb
mov
push
jmp
pop
jbe
sbb
fcom
push
inc
jne
cli
aaa
jnp
push
ret
push
jl
sub
cmp
aaa
sti
dec
inc
cmp
cld
sbb
out
xlat
jbe
fcoml
aaa
icebp
jae
pusha
and
mov
aad
repz
outsb
sti
cmp
cmpsb
add
mov
or
jnp
and
dec
filds
or
add
xchg
xor
gs
popf
or
inc
dec
push
fwait
mov
out
sbb
adc
sub
pop
and
or
or
mov
out
xor
insl
popa
cmpsl
dec
and
outsl
fmull
inc
add
adc
ljmp
shlb
push
loope
push
sub
cld
fisubs
mov
out
insl
xchg
scas
xchg
lock
int
mov
in
or
add
outsl
or
push
aas
xlat
and
cmp
movsl
xchg
push
push
xor
cmp
add
sbbb
push
lret
stc
and
mov
mov
clc
and
xor
popa
inc
jnp
or
jp
daa
fwait
push
push
popf
jle
fsubl
sub
sub
stc
je
lret
xor
cwtl
pop
aam
mov
xor
add
mov
or
add
xlat
cmp
dec
fadds
adc
sbbl
push
test
inc
inc
inc
adc
add
cmpsb
dec
and
dec
dec
dec
mov
dec
js
fidivrs
mov
xor
sbb
cmovno
ss
pop
mov
fwait
stos
xchg
push
xor
pop
dec
mov
mov
aad
add
pop
mov
mov
xchg
push
pop
pushf
add
out
mov
add
adc
lcall
push
pop
ret
adc
in
repz
outsb
jge
sahf
xchg
mov
int
aam
aam
pop
cmc
out
push
jnp
ljmp
add
pop
pop
or
out
fcoms
lock
sbb
nop
push
inc
mov
test
pop
or
cltd
sbb
adc
cmpsb
dec
xchg
pop
or
jge
jnp
xchg
rclb
xchg
pop
push
dec
jp
jne
add
shl
mov
rorl
jecxz
data16
es
cmp
aaa
test
mov
stos
xor
lcall
jle
dec
sbb
sbb
scas
inc
jl
enter
mov
pop
lock
pop
in
jp
adc
jbe
rcrl
cmpsb
or
movsl
pop
lods
mov
mov
cltd
fisubrl
xchg
enter
pop
lods
daa
frstor
sub
and
add
lods
jl
pop
scas
enter
or
cwtl
sbb
imul
sbb
adc
clc
flds
imul
sub
or
sbb
lods
mov
out
dec
and
or
sbb
imul
sbb
dec
or
sub
xor
push
adc
jnp
lods
mov
aaa
mov
push
mov
out
dec
insb
aad
mov
sbb
sub
mov
sub
mov
adc
and
sbb
lods
fs
cmpsb
mov
push
and
js
xchg
or
sbb
decl
aaa
or
mov
and
adc
mov
daa
cmp
mull
xchg
stos
push
nop
adc
movb
fisubl
mov
cmp
or
push
pushf
and
aaa
ffreep
jo
fwait
cmpps
cmc
fprem1
jnp
pop
mov
ds
xchg
push
dec
or
jecxz
jg
sbb
aam
aaa
jbe
insb
aaa
std
cmp
aaa
xchg
pop
pop
jg
jo
jge
shll
adc
sub
push
es
sub
mov
dec
sbb
and
or
jb
sbb
jne
inc
incl
push
inc
cmp
inc
bound
dec
aaa
mov
mov
xor
sbb
xchg
adc
stc
fs
pop
or
dec
fnstcw
jge,pn
push
aaa
jb
jbe
insl
stos
mov
aaa
lods
push
out
lea
aaa
jmp
push
daa
mov
sub
inc
stos
js
out
mov
fwait
enter
out
xchg
in
pusha
jl
mov
hlt
movsl
into
mov
aaa
insb
fadd
lds
inc
aaa
out
sub
aaa
push
push
jp
add
jmp
aaa
sbb
pop
fdivrl
mov
lahf
divl
cmp
rorl
and
or
aaa
jl
stos
jp
jecxz
push
aaa
lods
lahf
dec
and
push
pusha
xor
mov
fstpt
ret
nop
xor
aaa
pop
mull
xor
cs
aaa
and
xchg
xchg
loopne
mov
push
aaa
cli
add
cld
inc
or
and
dec
mov
mov
add
dec
mov
popa
bound
push
jle
cli
aaa
ret
push
xor
and
sbb
ds
sub
les
das
adc
shlb
sar
push
push
aaa
mov
fnstenv
mov
aam
or
lods
mov
fcoml
rcrb
int3
hlt
cmp
aaa
push
add
and
insb
mov
jl
inc
dec
mov
push
mov
aaa
shl
daa
mov
mov
fdivs
xlat
adc
ds
sub
aaa
dec
pop
call
mov
jnp
mov
data16
es
ja
adc
xor
lcall
xchg
in
movhps
mov
push
jge
sti
fstpt
cs
or
pop
pop
inc
dec
mov
nop
mov
aaa
pusha
cmp
loopne
adc
push
imul
std
pcmpeqd
mov
out
xor
clc
push
arpl
xchg
adc
xor
hlt
or
xchg
repz
mov
test
inc
stos
jle
add
fbld
aaa
pop
jns
lea
das
enter
fwait
call
mov
jp
in
mov
aaa
sbb
mov
icebp
lds
mov
lahf
sub
jno
xchg
lea
shrb
sbb
mov
sbb
push
pop
std
data16
aaa
jbe
mov
adc
cmpsl
add
jmp
mov
cmc
inc
add
repnz
xchg
nop
mov
dec
aaa
scas
je
in
add
pop
das
cld
icebp
cli
adc
adc
mov
shlb
inc
sub
xchg
jns
pop
neg
mov
out
mov
rclb
sti
ds
adc
adc
std
fnstsw
jo
inc
lcallw
pusha
push
lods
ficoms
cs
pop
call
and
cmp
aaa
xchg
sbbl
outsl
sahf
sub
mov
aaa
mov
sub
scas
les
js
imulb
fbstp
lea
rcr
ss
sbb
aaa
cli
jl
insb
ds
das
cmp
popf
dec
call
aaa
push
dec
mov
std
arpl
mov
fldenv
aaa
fmulp
mov
adc
mov
fmuls
mov
mov
sbb
mov
jbe
adc
xor
loope
fisttpl
fisubl
das
jns
mov
xor
int3
out
bound
fisttpl
mov
imul
into
pop
dec
shl
cmc
mov
jns
cmp
das
and
iret
mov
fmuls
or
xlat
jne
jae
fidivrs
push
mov
aaa
into
sub
fsubl
std
call
sub
dec
aas
leave
adc
jnp
and
notb
pop
cmpsb
aaa
pop
stc
fbstp
xchg
adc
xchg
cmc
insb
rorl
enter
push
hlt
pop
sub
iret
add
jns
fsubs
mov
testl
sbb
ds
rsm
insl
push
jne
jno
mov
xor
pop
or
cmpsl
fmull
sub
mov
imul
aas
mov
int3
push
outsl
sub
sti
enter
sub
test
push
pop
shll
addr16
and
sub
adc
testl
rclb
call
nop
rcll
cmp
push
aaa
jno
fadd
mov
push
xor
jns
fwait
movsb
test
jp
dec
pop
mov
int
xchg
test
jno
and
lret
jmp
cmc
mov
cmp
stc
incb
mov
mov
pop
and
arpl
jnp
cmp
push
inc
out
adc
inc
xor
out
and
mov
mov
xchg
aam
inc
repz
jns
sub
or
mov
xchg
test
out
mov
add
push
mov
sub
mov
andl
fisttpll
sub
xchg
out
fidivrs
testb
cmpsb
mov
test
cwtl
sub
sbb
add
push
xor
aas
js
mov
aaa
mov
lcall
outsl
xchg
adc
add
sbb
xor
jmp
hlt
adc
jecxz
mov
out
mov
sahf
lods
push
pop
mov
mov
lds
xor
add
frstor
test
mov
insb
mov
mov
outsb
arpl
dec
cwtl
push
popa
xor
addb
inc
sets
insl
stos
mov
cmp
scas
cmpsb
scas
or
push
jnp
js
mov
or
das
dec
in
test
testb
es
dec
push
adc
add
pop
xlat
cmp
push
lods
sbb
shl
dec
adcl
lea
cmp
dec
push
rcrb
pop
adc
push
mov
in
mov
pop
nop
mov
andb
sbb
movsb
lcall
test
add
cmc
scas
xor
push
add
and
pop
or
mov
mov
mov
mov
adc
int
jmp
cld
and
xor
mov
mov
and
push
scas
sbb
mov
xchg
hlt
mov
jge
mov
lcall
jns
icebp
inc
cmc
rolb
adc
xchg
hlt
xchg
jne
out
in
pop
or
jl
mov
mov
cmpsl
or
push
int
movsl
lods
adc
mov
test
xor
xchg
mov
mov
scas
mov
in
or
test
dec
int3
add
lds
dec
ja
shrb
adc
sbb
enter
repnz
xor
push
xor
or
outsl
lret
add
cmp
idivb
push
fs
fs
pop
jge
adc
or
sub
out
push
dec
push
bound
rorb
mov
add
fadds
sub
sub
jmp
cmpsb
in
adc
adc
cld
cltd
add
test
sub
xchg
mov
sub
test
stc
push
and
jb
adc
push
pop
stos
dec
scas
stc
in
adc
cwtl
in
les
aad
pop
int
ror
adc
pop
pop
or
fwait
js
and
or
jb
subb
in
or
idivb
add
pop
or
push
mov
mov
insb
dec
ds
adc
stc
jo
int
inc
out
push
rorb
or
push
adc
dec
xchg
or
addr16
int
mov
dec
jb
or
shr
push
mov
bound
popf
adc
or
fwait
adc
sbb
and
notb
jmp
outsl
push
mov
dec
push
pop
cli
fadds
aas
rcll
adcb
shll
pop
inc
push
or
mov
xor
pop
aaa
loop
mov
pop
jbe
lea
push
imul
pop
mov
sbb
lret
out
lcall
lods
js
sub
mov
push
out
out
cmpsl
fs
dec
dec
push
or
das
adc
xor
out
dec
adc
xchg
insl
mov
or
outsl
dec
imul
jle
mov
leave
sub
xor
lcall
lods
push
mov
xchg
movsb
push
mov
repnz
add
nop
cvtdq2ps
cmp
push
xchg
mov
fnstcw
cmpsb
and
in
push
rolb
xlat
cmp
addr16
das
daa
mov
or
sub
test
cmp
adc
ds
dec
das
mov
fcom
sub
sbbb
imul
test
mov
test
das
cli
daa
imul
cmpsb
enter
es
jns
mov
fwait
call
jg
fisubrl
fisttpll
and
gs
das
inc
xor
pop
xor
cmp
sbb
rcrl
mov
dec
and
test
add
adc
test
push
adc
adc
ljmp
cmp
outsb
test
sbb
cltd
scas
dec
pop
call
pop
xchg
shrb
adc
inc
andl
insl
adc
and
or
sub
iret
and
outsb
lds
push
jmp
int3
in
xor
or
addl
inc
xchg
dec
jae
cwtl
jno
add
insl
cli
xorl
dec
sbb
adc
push
ja
sahf
adc
cmc
pop
add
and
sahf
mov
filds
or
call
sbb
push
movsl
mov
sbbl
mov
xor
pop
call
insl
sub
sub
pop
out
jns
jmp
jb
int
test
addb
ss
daa
out
fbstp
mov
inc
push
add
xchg
sbb
test
sbb
and
test
test
inc
insb
int3
out
or
ja
push
jle
or
pop
imul
xchg
sub
insl
or
mov
or
rcrl
cltd
enter
push
sti
outsl
lock
adc
aad
jl
sub
movsl
addl
adc
mov
arpl
shrl
hlt
in
adc
or
rclb
pop
add
mov
pop
imul
mov
adcl
out
bound
xor
cmp
sbb
sbb
add
dec
pop
jge
jmp
aas
aaa
dec
pop
push
mov
dec
pop
xchg
fcoms
push
sbb
or
dec
dec
mov
adc
xchg
mov
outsl
daa
int3
jg
cmp
mov
dec
out
pop
xchg
psubsb
in
je
in
sbb
inc
add
adc
out
jl
mov
sbb
adc
adc
mov
mov
ds
dec
popa
out
sbb
mov
out
xor
xchg
ret
int3
jg
jae
adc
pushf
jmp
xchg
sub
adc
push
mov
dec
push
add
cmpsb
enter
jg
jae
outsl
rcrl
rolb
dec
cmp
mov
adc
out
imul
dec
les
sbb
add
lea
cmp
mov
lea
insl
mov
sub
rcll
jb
adc
xlat
shll
ret
and
es
jmp
dec
fstl
jo
mov
or
test
mov
fldcw
pop
adc
fistpll
add
int
jg
adc
cli
add
ror
jg
jo
test
enter
std
decl
nop
jnp
dec
jnp
sub
mov
or
mov
lods
add
adc
dec
jge
jno
enter
sbbb
leave
int3
jae
sbb
sbbb
iret
jge
jne
int3
jne
or
or
mov
stc
lcall
repz
dec
mov
mov
adc
sbb
lods
dec
mov
inc
add
mov
pop
mul
lea
mov
pop
dec
dec
add
inc
jecxz
add
inc
inc
loope
lds
cmp
xlat
mov
dec
dec
outsl
dec
pop
mov
das
or
jbe
js
push
roll
inc
inc
add
lds
aam
call
jg
xor
push
xor
orl
mov
subl
es
daa
das
adc
icebp
pop
mov
int3
pop
mov
stos
dec
pop
scas
imul
orl
sbb
popa
mov
mov
push
leave
aad
mov
mov
pop
pop
aad
add
cmp
pop
or
das
inc
outsl
cs
pop
dec
sbb
movsb
pop
xor
fcoms
stos
add
jle
jge
xlat
mov
ja
dec
icebp
jno
xor
mov
xor
movsl
insb
lahf
in
int
jbe
dec
pop
shl
pop
movsl
xor
cmp
popf
faddl
xor
jne
mov
imul
adc
movsb
dec
pushf
stos
pop
mov
aas
sbb
inc
xor
adc
arpl
test
sub
jb
mov
dec
pop
xchg
mov
push
mov
xor
and
sub
gs
jmp
lods
imul
jle
bound
lods
pop
lock
mov
inc
lret
push
push
cmpsb
enter
push
mov
ss
dec
mov
xchg
lea
addl
xor
push
mov
xor
mov
rcrb
xlat
cmp
hlt
jg
sbb
shl
movsb
sbb
iret
lea
rorl
outsl
sbb
rcrl
loop
testb
cwtl
adcb
xor
movsb
push
xchg
hlt
in
dec
mov
mov
sbb
add
es
jmp
lret
outsb
faddl
xlat
out
nop
test
xchg
mov
or
mov
test
pop
cld
lea
xchg
cmp
cmpsb
cmp
aad
push
inc
add
cld
add
mov
dec
jno
sbb
xchg
cld
xchg
pop
mov
mov
add
fcoml
pop
inc
push
pop
xchg
in
push
fcompl
imul
adc
mov
call
ret
adc
in
push
fcompl
arpl
add
lock
cltd
movsl
in
frstpm(287
xor
repz
mov
lods
sbb
stc
add
push
iret
pushf
push
push
adc
pop
scas
mov
in
add
or
xchg
test
jnp
test
push
dec
or
mov
test
fsubrs
lcall
mov
fucom
outsl
xchg
out
cmp
sbb
jne
out
cmp
cmp
addr16
sub
lock
pop
addr16
xor
lods
dec
xchg
rcrb
insb
add
cmp
jo
ret
arpl
add
ficoml
and
add
mov
add
shrb
mov
mov
sub
and
jno
mov
and
cmp
ret
mov
icebp
repnz
jp
out
lahf
rol
roll
shrl
sbb
jg
aad
mov
push
xchg
jge,pt
imul
dec
push
fs
outsl
mov
mov
test
sbb
xor
psllq
dec
dec
or
jae
pop
mov
or
inc
jmp
jbe
insl
outsl
stos
pop
add
adc
pop
adc
jns
sbb
cmc
imul
or
adc
fisubrl
or
out
out
out
jne
push
iret
or
aad
inc
jg
jno
jne
fimull
out
jno
lahf
imul
sbb
pop
push
lret
jae
jnp
mov
xchg
pop
dec
loop
or
add
test
pop
or
add
dec
jns
jno
pop
imul
push
pop
ret
arpl
mov
cmpsl
pop
cmpsl
add
xor
inc
inc
jecxz
pop
out
repz
imul
mov
insl
xchg
pusha
outsb
and
inc
xor
cmpb
mov
rclb
cltd
fisubs
fsubr
dec
mov
insl
adc
outsl
jno
jae
or
xor
adc
popa
imul
lahf
or
loop
jl
pop
outsl
arpl
dec
pop
pop
jbe
xor
imul
xchg
push
in
mov
test
mov
pop
dec
pop
mov
or
mov
nop
jg
or
pop
out
ja
dec
in
mov
stos
inc
data16
inc
imul
jae
cmp
outsl
pop
arpl
inc
out
jmp
pop
mov
inc
outsb
sub
insb
scas
adc
sar
pop
pop
pop
outsl
pop
arpl
es
push
jg
scas
inc
insl
push
in
pop
xor
pusha
push
push
cmp
push
push
jae
inc
pop
cmpsl
dec
jnp
pop
or
and
fmull
xchg
jmp
ror
push
shrl
sbb
sub
inc
rorl
mov
stc
mov
mov
fwait
out
mov
mov
xor
sbb
and
or
or
testb
adc
add
int
push
add
mov
push
in
sbb
inc
push
jae
dec
sbb
int3
pop
jno
jno
int
dec
pop
nop
or
mov
cltd
mov
dec
add
mov
or
ds
sbb
mov
lret
xchg
add
jno
jns
mov
pusha
push
lret
push
or
sbb
mov
xchg
test
js
inc
imul
xchg
pop
jge
push
xchg
jmp
pop
adc
or
lret
push
push
cmp
mov
pop
imul
popf
cmp
or
in
or
imul
fisttpl
dec
and
outsl
add
insb
push
stos
adc
pop
lds
mov
rolb
ret
lods
sbb
mov
mov
sub
add
mov
mov
adc
mov
mov
adc
lock
or
popf
mov
cmp
hlt
lcall
pushf
mov
jns
lock
mov
cltd
movsl
dec
sbb
das
test
add
test
or
cmpsl
movsl
push
test
js
or
shlb
stc
mov
rcll
test
jecxz
sbb
inc
nop
add
les
movsl
and
sub
mov
xchg
sbb
int
inc
pop
aaa
inc
bound
out
ds
cli
add
lds
shlb
in
push
xchg
add
dec
inc
jbe
outsl
ja
cwtl
mov
das
jl
imul
mul
icebp
imul
lret
jne
jns
pop
inc
cmp
fcompl
clc
in
or
and
rcrl
out
shll
jns
aaa
jmp
ror
in
xlat
add
cmc
faddl
and
dec
add
lahf
fdivl
xchg
dec
insl
insl
add
cs
leave
fstps
jmp
xor
mov
or
test
lcall
mov
inc
mov
xchg
ss
adc
or
jno
or
mov
movsl
cmp
dec
sbb
add
data16
adc
fdivs
or
mov
aas
mov
sbb
adc
jmp
xchg
dec
aad
sub
add
mov
jmp
lret
sub
aad
pop
enter
pop
xchg
dec
jne
pop
xchg
shr
movsl
pop
fisttpl
das
test
int
icebp
lock
adc
rcll
sbb
stc
pop
mov
aas
ss
or
movsb
out
sub
cltd
push
mov
jae
sbb
adc
leave
iret
lods
and
or
push
inc
jb
arpl
shll
inc
pushf
cmp
pusha
jge
stos
or
dec
jno
ret
imul
dec
pop
loopne
adc
shl
add
dec
or
cmpsb
xor
out
push
and
cmp
lock
mov
shr
lret
add
mov
pop
jle
dec
and
aaa
inc
sahf
sub
push
aaa
cmp
adc
into
mov
mov
sahf
xor
xor
aaa
ss
or
jl
adc
dec
imul
loope
outsb
sbb
jg
aas
xchg
mov
xor
pop
and
push
cld
aaa
out
jbe
sub
inc
mov
fucom
pusha
push
into
gs
in
pushf
jae
jp
xchg
xlat
sarb
and
out
add
mov
cli
aas
inc
daa
aaa
or
stos
fcomi
jne
cltd
aaa
mov
in
mov
arpl
jbe
aaa
orl
jo
lock
inc
mov
subl
movsb
push
popa
jno
fisttpll
xchg
mov
jbe
adc
aaa
mov
or
dec
fadd
inc
aaa
lret
xchg
jl
dec
jno,pn
xchg
mov
sbb
mov
cltd
xlat
out
jmp
in
pop
and
inc
repz
outsl
jp
xor
mov
mov
addr16
test
es
mov
lock
aaa
rcr
push
and
addr16
cmc
movsb
mov
mov
jo
aaa
dec
pop
mov
hlt
jne
push
jno
mov
mov
daa
out
out
push
dec
jl
jo
sub
nop
xor
mov
sahf
in
lret
xchg
int3
fnsave
test
mov
std
aaa
mov
inc
repnz
sbb
xchg
lock
or
rclb
add
xor
mov
psubq
loope
mov
pusha
aam
lods
roll
adc
push
ljmp
aaa
test
mov
sbb
jne
fcmovb
fwait
cmp
arpl
dec
popf
js
jbe
js
add
daa
shll
aaa
cmp
push
loop
enter
outsl
pusha
aaa
mov
sub
mov
sub
xchg
sbb
jbe
rcr
ja
push
aaa
fisttpl
fld
aaa
push
je
in
or
cmp
aaa
arpl
dec
push
aaa
lods
sub
mov
add
xchg
movsb
mov
test
cld
sub
mov
test
data16
cmpsb
mov
jmp
mov
sub
enter
test
cs
imul
ljmp
add
sub
aaa
imul
test
inc
jbe
pop
ret
aas
lret
addr16
hlt
push
cmpsb
shrb
pop
shlb
ja
adc
test
repnz
dec
xor
cmp
clc
jbe
push
ror
and
dec
pop
mulb
jae
push
test
flds
pushf
add
mov
adc
popa
movsl
inc
rol
jecxz
les
pop
cwtl
add
xchg
lds
pop
aaa
add
push
sbb
stos
mov
loopne
cvtps2pi
repz
enter
add
xlat
aaa
pop
push
dec
xor
bound
loope
cmp
dec
dec
jns
lods
push
adc
pop
push
jecxz
lods
insl
out
xchg
mov
sbb
js
jp
adc
daa
fistps
inc
lahf
mov
mov
lret
mov
mov
jmp
loop
daa
scas
and
aaa
daa
fidivrl
fsub
shll
outsb
es
mov
mov
cld
xchg
push
push
push
cmpsl
imul
aaa
loop
lahf
es
pop
jg
aaa
stc
movsl
push
cmp
fdivrl
inc
subl
push
aad
mull
subl
lods
fmul
stc
adc
mov
sbb
iret
rorb
cltd
aaa
shlb
xchg
lods
test
aaa
adc
jae
mov
in
inc
or
adc
pop
in
aaa
push
and
jnp
adc
mov
std
xor
mov
test
ror
push
sbb
stc
mov
or
cmovge
test
or
mov
lock
adc
int3
aaa
xchg
xchg
sahf
jecxz
mull
xor
or
jl
lahf
jnp
cmpsb
aaa
cmpl
inc
or
sub
mov
aaa
shlb
jae
or
cmpsl
rcrb
xchg
outsl
sub
fadds
xor
shrb
inc
in
xor
push
cmp
mov
aaa
or
inc
cmp
xchg
sub
or
push
dec
and
aaa
repz
mov
stos
mov
xor
pop
fnstenv
icebp
jno
in
sbb
jnp
jge
andb
test
pop
cltd
ds
mov
jle
movsb
sub
repnz
push
mov
ret
pop
push
sbb
ss
mov
dec
inc
add
notb
pop
or
test
inc
or
mov
add
adc
sub
fcomps
cmpl
in
fs
aaa
movsl
jmp
inc
inc
aaa
stc
daa
adc
fmul
aaa
shlb
ja
or
mov
ficompl
decb
rcrb
push
bound
pushf
add
dec
mov
add
jge
push
cmp
mov
aas
ret
sub
mov
mov
xorl
int3
inc
push
loopne
mov
inc
cli
filds
repz
icebp
add
in
sbb
pop
mov
mov
aaa
movsb
xor
orl
push
and
xchg
shll
push
les
repnz
out
enter
pop
pop
test
mov
ds
add
dec
adc
fadd
clc
aaa
push
ss
mov
cli
fcmove
jl
aam
inc
xchg
iret
rcr
xor
dec
mov
sub
cmc
jns
les
push
movsb
fistpl
mov
aaa
and
dec
fcoms
pop
mov
les
lods
jno
shl
push
xor
loop
cmp
and
pop
lahf
mov
add
ja
divb
mov
pop
xlat
lcall
xor
jno
ss
jae
pop
fadds
push
aaa
xor
push
sub
dec
insb
or
das
mov
jne
sti
push
dec
loope
aad
jp
divb
es
stos
xchg
sub
xor
add
bnd
mov
testb
aaa
mov
into
or
iret
daa
decb
add
mov
mov
or
mov
dec
push
es
mov
lods
btc
arpl
or
popa
sti
popa
push
push
pop
pop
jecxz
lods
cmp
xchg
or
sbb
jecxz
pop
std
bound
addr16
adc
or
mov
cli
mov
or
cli
scas
mov
fadds
push
pop
sub
pop
cmc
dec
fildll
aad
mov
in
shl
movsl
or
jle
int3
scas
ja
hlt
loope
jecxz
sub
push
cmp
in
sub
bound
cs
in
pop
divb
push
pop
movsb
sbb
test
cmc
lea
and
repz
std
sub
sbb
orb
pop
mov
sbb
aas
or
adc
dec
sbb
xor
mov
pop
je
xor
sub
in
out
mov
shlb
insl
pop
dec
sbb
fwait
out
pop
mov
stc
clc
fdivr
lret
jg
icebp
sub
not
cwtl
jg
pop
mov
aam
mov
rol
sub
repnz
lock
jge
fdivrs
jge
pop
lods
dec
insl
adc
and
popa
fmull
xlat
cmp
mov
mov
adc
nop
pop
mov
mov
mov
cltd
sarb
or
jne
mov
jno
stos
dec
sahf
lods
sbbl
xor
cmp
dec
loop
jmp
in
test
mov
xchg
xchg
cmpsb
mov
mov
cltd
psubq
jp
call
scas
or
lock
lcall
jnp
dec
mov
repnz
mov
dec
jns
mov
sbb
sub
or
mov
inc
outsl
mov
adc
xchg
in
arpl
mov
lods
popa
mov
and
add
rcrl
scas
cmp
fsubrs
cmc
adc
dec
in
int3
bound
shlb
xor
sub
clc
mov
rorb
cwtl
inc
pop
cmc
ds
sahf
cwtl
adcb
pop
adc
jmp
inc
pop
loop
sbb
adc
ds
and
mov
jne
dec
mov
ret
dec
adc
test
mov
pop
sbb
push
pop
out
daa
imul
popa
jo
cmpsl
mov
dec
imul
or
sub
scas
repnz
repz
mov
push
push
fidivrl
stos
lcall
pop
push
or
outsl
push
cmpsb
dec
insl
shr
aad
call
add
pcmpgtw
xchg
popa
sub
fadds
pop
lcall
jno
adc
adc
cmpl
or
adc
inc
pop
adc
xchg
outsl
dec
dec
pop
adc
and
int3
adc
mov
mov
mov
scas
xor
mov
mov
out
mov
orl
and
or
adc
dec
fwait
cmp
jl
ret
mov
inc
jl
je
pop
std
outsb
or
sbb
mov
in
xchg
cmovge
xchg
xor
shlb
adc
clc
stos
popf
mov
adc
aad
arpl
jo
cmpl
push
mov
xor
sbb
push
packsswb
outsb
sub
adcb
adc
cmp
stos
add
rclb
in
mov
pop
push
mov
pop
fiadds
jb
push
dec
or
je
maskmovq
mull
mov
jne
pop
enter
add
out
stos
test
xchg
dec
mov
mov
into
int
sbb
push
and
add
imul
test
cmpsb
lods
dec
js
xchg
dec
sub
adc
mov
dec
lods
sbb
lds
dec
mov
mov
sub
out
pop
imul
sbb
addr16
aas
or
mov
cs
and
mov
adc
jnp
or
and
pusha
adcl
mov
mov
js
inc
loopne
mov
pop
push
adc
add
ss
jns
inc
and
xchg
lret
mov
adc
inc
pop
loop
in
hlt
mov
icebp
or
pushf
rorb
inc
nop
add
or
out
mov
mov
xchg
lods
add
mov
pop
fstps
in
jnp
mov
je
push
adc
hlt
test
pop
sbb
aad
test
test
pcmpgtb
andl
mov
fimull
xor
xchg
jecxz
adc
sbb
aam
shlb
mov
ror
test
adc
add
or
pop
fs
out
das
jg
sbb
cltd
or
inc
push
cmpsb
enter
adc
js
inc
imul
js
inc
pop
adc
pusha
or
nop
addr16
xchg
pop
xchg
lea
imul
pop
mov
or
shl
xchg
sub
adc
stos
jg
mov
sti
mov
cmp
movsl
outsl
or
xor
std
add
xor
inc
icebp
sbb
sub
pushf
loop
xor
pop
mov
dec
fcomps
pop
or
test
imul
sbb
data16
xchg
sbb
jb
decb
inc
stos
sbb
pusha
rcr
arpl
adc
cmp
aas
stos
pusha
das
adc
mov
adc
js
inc
pop
inc
fiadds
in
shll
fst
daa
sub
das
aaa
mov
dec
jecxz
add
int3
sti
lahf
push
or
repnz
insb
pop
mov
mov
loop
push
fbstp
daa
aaa
push
sub
adc
add
fmuls
lahf
push
into
sub
mov
les
addl
stc
out
int3
mov
push
sahf
iret
ret
fstps
push
pop
popa
xchg
aaa
mov
repz
mov
sub
mov
pushf
adc
ficompl
daa
mov
aaa
or
notl
or
pop
mov
daa
cmp
xchg
stos
lea
xlat
xchg
adc
cli
adc
lret
aaa
es
push
add
rol
inc
xchg
sub
push
aaa
cmc
movsb
test
test
cmp
stc
adc
fidivrl
rorl
inc
push
outsl
push
push
repz
sahf
push
enter
mov
xlat
xchg
push
cmpb
aaa
ss
gs
aas
bound
xchg
test
shlb
inc
and
jbe
popa
aaa
icebp
dec
lock
jmp
dec
in
ja
xor
add
adc
inc
dec
jne
push
loop
arpl
jno
stos
shrl
outsl
cmp
jecxz
fcoml
push
sub
lahf
out
clc
mov
mov
jmp
sub
jno
inc
sbb
add
sarb
cld
aaa
outsb
arpl
bound
lahf
mov
inc
rorb
xchg
push
mov
sbb
sar
fistpl
les
jl
mov
xlat
mov
mov
loope
inc
adc
sbbb
bound
lds
int
int3
or
adcb
jbe
lods
xchg
aaa
sub
pop
flds
xor
rcr
mov
jle
enter
mov
cmp
push
cmp
mov
jmp
mov
or
aaa
inc
mov
iret
lret
or
push
fabs
jl
je
and
aaa
mov
add
hlt
aaa
notl
jbe
xchg
mov
sbb
or
test
aaa
pushf
fwait
adc
mov
sbb
push
dec
nop
aaa
inc
xchg
lods
adc
xchg
jnp
cmp
jge
neg
dec
test
outsl
mov
lods
out
push
test
lahf
cmpsl
pop
sub
push
punpcklwd
jns
sbb
cld
push
lea
dec
hlt
pop
dec
dec
arpl
jmp
mov
ljmp
paddq
pop
adcl
dec
inc
das
les
dec
jne
cwtl
jg
addr16
mov
jae
int
rcl
out
out
repz
mov
imul
lahf
jbe
rcrl
adc
add
jno
fcompl
aam
sbb
scas
pop
aas
or
test
test
ret
shlb
cmp
mov
mov
mov
dec
cmpsb
xchg
inc
hlt
mov
loop
push
das
adc
xchg
out
fdivs
pop
addr16
inc
aaa
dec
popa
and
arpl
ret
mov
or
cmp
ja
push
mov
adc
aad
fsubs
and
xor
rcrl
fisubs
fwait
or
ljmp
popa
xchg
pop
aaa
adc
mov
lds
std
mov
adc
stos
fldenv
mov
xor
sarb
xchg
inc
mov
aaa
out
pop
push
cs
lea
out
xor
daa
xchg
std
icebp
cmp
jl
out
ja
xchg
sarl
lock
das
test
loope
loopne
pop
fimuls
out
lds
iret
push
mov
cmp
sahf
test
fistl
mov
cmp
hlt
add
push
inc
lret
mov
jecxz
xor
fadd
jle
aaa
fcompl
mov
jno
sahf
pop
add
mov
ror
xchg
mov
movsb
jne
scas
cmp
aaa
imul
stos
mov
cmpsb
mov
jle
ss
or
dec
sub
jae
cli
fimull
cwtl
std
fsubl
pusha
scas
xchg
adc
lahf
jp
js
pop
imul
loope
push
mov
shll
cmp
shlb
jbe
adc
in
pop
decb
ss
fldenv
mov
aaa
add
fisubl
in
inc
lahf
xchg
aaa
push
xor
movsl
shlb
aam
inc
dec
sub
jbe
or
mov
repz
stos
aaa
out
xchg
pop
adc
lret
ds
xor
mov
sti
sbb
xchg
out
and
aaa
sub
lods
pop
push
xchg
aaa
sub
inc
pop
aaa
inc
cmpsl
daa
out
int3
ss
js
outsl
fnsave
mov
jp
push
aaa
push
mov
mov
or
clc
stc
mov
aad
sub
pusha
mov
add
std
push
push
or
mov
or
sub
mov
jae
clc
lods
or
lods
sarb
daa
push
aaa
in
sbb
out
rcll
xor
jbe
xchg
and
dec
or
mov
dec
sbbl
mov
mov
inc
or
negb
mov
dec
fcom
sbb
push
arpl
xchg
add
jne
loopne
cltd
shrl
fmull
and
fidivrs
sbbl
add
cmp
mov
aaa
push
add
xlat
mov
xor
jns
into
fwait
test
test
sbb
jl
mov
or
loop
notb
jg
nopl
push
vmovlpd
insb
cmp
ret
mov
jge
add
inc
in
pop
adc
and
mov
push
cli
push
into
les
scas
sub
mov
pop
add
push
sti
mov
mov
xor
push
mov
aaa
scas
mov
shll
inc
cmpsb
or
push
repz
add
push
dec
daa
cmp
aaa
inc
xchg
aam
aas
jnp
aaa
sub
nop
jns
and
mov
jmp
leave
cs
and
and
inc
ficoml
cmp
aaa
pop
sub
cld
nop
insb
pop
out
aas
mov
rolb
imul
xor
dec
dec
cld
shll
cld
pop
aad
push
aaa
or
sti
fcmovne
xchg
mov
jp
or
clc
frstor
mov
aaa
and
ret
pushf
insb
je
pop
xchg
jne
movsl
cmc
pop
push
sbb
pop
adc
pop
sbb
rcr
iret
or
pop
xor
mov
jne
xor
and
push
mov
divl
aaa
adcb
add
mov
mov
aaa
jno
and
or
out
scas
shl
repnz
test
int
mov
les
mov
or
add
lret
push
mov
test
cmp
inc
sbb
in
scas
rcr
aas
jno
cli
push
aaa
sub
push
pop
xchg
rclb
jge
mov
mov
mov
icebp
orb
pop
mov
push
daa
mov
in
jno
lods
sbb
testb
test
aaa
mov
cmpsl
dec
leave
add
add
xchg
jae
fildl
inc
sub
into
stc
cmpsb
out
shlb
push
push
push
jns
xlat
aaa
lret
in
jbe
in
dec
out
xor
mov
add
add
in
mov
jge
push
aaa
je
pop
jb
data16
xor
enter
mov
sbb
ftst
loope
pop
mov
cli
div
cmp
fsubp
cltd
mov
pushl
cmpsb
lods
test
cwtl
ficompl
xchg
mov
pop
shlb
push
es
and
or
push
fbstp
aaa
and
inc
aaa
push
xor
movsb
fisubrs
sti
std
sbb
sub
and
add
pop
or
pcmpeqw
daa
jae
inc
cwtl
ds
or
cld
mov
in
push
icebp
adc
lfs
push
rcrl
mov
loopne
ja
inc
aas
mov
cmpsb
arpl
scas
or
xchg
dec
sbb
shlb
cmp
sbb
ds
les
cmpsl
mov
xor
xchg
in
inc
aas
mov
test
loope
sti
aaa
jb
add
mov
popf
ret
rcll
arpl
push
xor
je,pt
push
fistpl
xchg
jmp
or
sbb
xlat
adc
leave
mov
mov
push
jb
xor
dec
hlt
cs
cmp
mov
cwtl
rcl
rcr
mov
cs
stc
mov
lcall
mov
lock
vmwrite
cmp
rcrb
xchg
or
cmp
pop
xor
inc
lds
lods
sub
into
test
loope
mov
xlat
repnz
ljmp
daa
cmpl
cmp
aaa
jle
mov
mov
std
lods
adc
mov
pop
repz
stc
out
jmp
decb
outsl
repnz
fmuls
cmc
push
mov
cld
sarb
jle
fidivs
pop
sti
out
je
lds
or
jae
jmp
cmp
push
scas
std
cmc
addr16
dec
into
repz
pop
in
fidivrl
push
mov
mov
es
adc
out
pushf
sbb
sbb
bound
aaa
out
push
inc
pop
push
sbb
aaa
shl
mov
clc
mov
and
out
imul
mov
mov
repnz
lcall
mov
fcom
movsb
aaa
pop
scas
cmp
cwtl
inc
cli
outsl
mov
nop
es
jae
adc
not
int3
ret
mov
cpuid
jo
and
and
jns
aaa
cmpb
aaa
cltd
scas
xchg
inc
dec
mov
inc
aaa
lret
fwait
or
pushf
pop
aaa
pop
pop
sbb
arpl
push
aaa
jns
test
xchg
xchg
jmpw
dec
pop
jne
xor
jne
cmp
in
repnz
cmp
aaa
jle
pop
cmp
nop
jl
mov
push
clc
ret
clc
xchg
in
test
pusha
fstps
aaa
fnsetpm(287
rclb
inc
jns
aaa
pushf
scas
cmp
dec
loope
xchg
aaa
call
or
jecxz
addr16
xchg
inc
enter
mov
adcl
pop
fdivl
or
mull
das
enter
jp
and
scas
mov
mov
sarl
in
testb
aaa
dec
out
adc
xchg
ss
adc
mov
mov
push
int3
leave
jge
out
rorl
cmpsb
aas
ffreep
aaa
repnz
test
add
ret
jno
cld
dec
mov
push
and
xchg
pop
call
flds
out
xchg
xor
decb
cmp
js
sahf
or
fwait
sbb
dec
pushf
test
mov
jmp
aaa
mov
add
mov
aas
fmuls
clc
fs
int3
or
loope
andl
in
push
jne
pop
dec
repnz
cvtdq2ps
mov
test
sub
mov
sbb
daa
inc
hlt
sbb
jge
aam
aaa
mov
push
mov
repnz
xor
or
cmp
sti
dec
jae
shrl
cmp
popa
mov
hlt
aaa
and
in
and
or
addr16
dec
pop
cmp
outsl
mov
dec
popa
xchg
fcoms
fmuls
jno
dec
repnz
fwait
test
add
pop
aas
inc
xchg
int3
jbe
ja
xor
mov
mov
int3
xorl
xchg
dec
or
aaa
nop
outsb
stc
addr16
mov
adc
sub
push
stos
push
add
enter
addr16
jge
loop
mov
add
loopne
aaa
idiv
andb
push
int3
or
add
lcall
pop
sub
aaa
clc
mov
aas
cmpl
or
lock
inc
xchg
sti
pop
sub
aaa
add
rolb
inc
imul
insl
sarl
test
decl
call
add
loopne
mov
repz
mov
aaa
shll
mov
mov
add
jb
jmp
js
xorl
repnz
jne
add
gs
aad
dec
in
adc
jbe
xor
icebp
aas
test
stos
xor
dec
adc
ss
sub
jno
ret
clc
mov
mov
scas
sti
mov
jns
insl
mov
fcmovu
add
push
mov
xchg
xor
aaa
adc
ss
xorl
andb
aaa
fwait
dec
nopl
inc
aaa
xlat
cltd
add
test
sub
subb
clc
mov
jp
inc
lds
in
aaa
loope
dec
je
ret
aaa
and
push
sub
scas
aaa
mov
nop
adc
mov
sub
mov
daa
sub
repnz
test
push
pop
fdivl
cli
dec
mov
sub
push
xor
pusha
mov
ljmp
sub
sbb
bound
ret
movsb
adc
sbb
adc
push
in
fnstenv
aaa
mov
mov
neg
flds
fwait
sub
dec
sahf
bound
cmp
or
xorl
dec
mov
aam
mov
cwtl
test
aaa
movsb
pop
pop
xchg
fadds
sbb
lods
ljmp
adc
push
jle
cs
aaa
iret
movsl
jb
repz
outsl
xor
lret
mov
push
sbb
aaa
mov
mov
push
ja
fsubs
mov
adcb
lods
and
dec
fs
pause
arpl
cmp
jle
shr
icebp
cld
hlt
or
aad
push
pop
aaa
test
sub
roll
fdivs
and
test
push
fnstenv
cld
inc
stos
xor
shrl
shlb
popa
cmp
ret
push
mov
mov
pop
sbb
icebp
adc
mov
insl
out
in
sbb
jge
or
or
push
daa
sbb
popa
popf
xorl
dec
stc
out
daa
jnp
data16
xchg
int3
push
push
jbe
aas
pop
lret
aaa
fnstsw
mov
addr16
and
cltd
add
jne
xor
dec
and
dec
aaa
push
jg
sub
jle
sub
insb
pop
inc
test
aaa
xchg
sbb
mov
insl
cmp
mov
lcall
xlat
leave
pop
insb
jno
sub
cld
lock
jno
xor
pop
sub
dec
lods
std
loopne
or
or
xchg
hlt
mov
arpl
mov
loope
mov
xorl
inc
jp
sti
test
and
mov
inc
push
sti
dec
ss
add
cmp
push
loopne
dec
mov
fdivp
dec
pop
push
push
iret
inc
mov
aam
in
push
mov
std
or
adc
lods
rolb
cld
jg
sbb
sub
inc
dec
mov
mov
jmp
mov
sub
sahf
pop
mov
or
xchg
pop
and
mov
push
push
cmc
aaa
cmp
mov
ja
adc
dec
cmp
dec
sub
push
aaa
repz
cwtl
and
mov
or
sti
jae
pop
mov
inc
incb
sbb
test
ret
push
xchg
lock
aaa
push
shr
mov
orl
push
inc
inc
rol
mov
out
cmpb
je
mov
loop
es
ljmp
sbb
test
in
aaa
push
aam
pop
inc
jae
or
inc
aaa
mov
movsb
ret
aaa
inc
mov
pop
mov
xchg
cmp
je
jg
mov
outsb
aaa
out
shl
int
mov
cmpb
mov
dec
fldcw
outsw
mov
inc
mov
adc
xchg
mov
enter
or
inc
stc
mov
fnstcw
repz
icebp
imul
ja
push
inc
push
shr
lret
int3
testl
fxch
out
sahf
ret
pop
pusha
aaa
dec
adc
sbb
in
add
roll
mov
mov
hlt
test
out
shll
enter
cmp
dec
adc
inc
aaa
sub
movsb
mov
lock
or
insb
in
stc
fcmovne
pop
outsl
push
dec
cmp
and
stos
fdivrs
mov
shrb
jbe
dec
sub
add
notl
nop
clc
leave
loop
sub
push
xor
pop
hlt
stc
mov
xchg
int3
enter
and
mov
lahf
sub
in
arpl
push
aaa
mov
divb
sbb
cmp
cmc
jns
mov
sahf
dec
sub
push
aas
inc
fdivs
cmp
push
das
pop
aaa
call
or
xchg
test
pop
aaa
dec
adc
sbb
aaa
add
ljmp
fnstsw
mov
xchg
enter
jns
add
push
cmpl
ds
or
fistpll
cld
mov
mov
std
adc
hlt
cs
aaa
leave
scas
adcb
pop
popf
in
es
cmp
cmpsl
or
call
outsl
mov
aas
pop
fdivs
jl
adc
out
xor
mov
stos
pop
dec
aaa
sub
pop
xlat
aad
dec
in
xchg
fs
sub
and
aaa
movsb
daa
jecxz
xlat
arpl
into
or
and
test
js
inc
lcall
test
addl
addr16
or
mov
leave
int
arpl
lret
mov
bswap
and
sti
nop
pop
das
inc
out
mov
ds
jno
fs
mov
adc
aaa
dec
std
push
sahf
scas
js
xchg
inc
cli
or
fistpl
pop
aaa
sbb
mov
or
aas
aad
inc
push
fsubrl
aaa
je
loop
pop
xchg
dec
xorb
pushw
and
mull
aaa
cmpsb
pop
cmpsl
mov
aaa
dec
jecxz
lds
mov
cmpsb
sbb
movsb
dec
ret
and
jne
sub
test
out
push
or
call
sub
push
pop
inc
push
mov
idivb
movsb
aaa
cmc
ljmp
es
aaa
mov
mov
sub
nop
sub
daa
add
scas
mov
push
dec
push
in
mov
aaa
jmp
in
xor
pop
mov
imul
mov
xchg
jae
loopne
gs
nop
iret
rcl
stc
aaa
jp
sbb
imul
or
xor
or
push
push
or
push
clc
ret
mov
outsl
xchg
jg
sub
ret
fwait
cmp
aaa
mov
xchg
adc
xchg
imul
clc
ss
jmp
les
lods
jbe
xchg
inc
dec
aaa
or
out
fsubrl
and
sub
aaa
jmp
lods
cs
or
dec
andl
negb
sub
mov
rorb
outsl
cmp
or
lea
imul
mov
mov
hlt
cmp
pop
and
mov
repz
outsl
mov
pop
xor
mov
push
push
int3
push
sbb
hlt
pop
stos
cmp
mov
out
fnstcw
int
fs
push
aam
adc
mov
push
mov
dec
lahf
pop
jne
insl
push
dec
sub
aad
aaa
test
fwait
lock
inc
sub
xor
cmc
push
jae
sub
es
cmp
cmpsl
xchg
aaa
in
lds
repz
jnp
xchg
movsb
pop
xchg
mov
mov
aaa
jbe
movntps
pop
mov
nop
fcom
jge
cmpsl
push
rcl
aaa
mov
cmc
xlat
cwtl
sub
sub
scas
or
mov
xchg
lods
and
jnp
test
in
add
popa
jge
mov
mov
xlat
inc
lret
lods
sahf
lahf
dec
lock
or
fdivr
pop
mov
cld
insb
cmc
out
cltd
aaa
add
xchg
mov
cmp
mov
je
sub
add
data16
lock
dec
lcall
dec
fistpll
popa
add
jle
add
mov
inc
lock
mov
xchg
or
adc
sbb
cmp
fldt
add
pushf
aaa
pop
inc
jmp
daa
std
inc
hlt
add
into
push
cwtl
aas
iret
shr
inc
mov
push
ja
xlat
push
loopne
push
aaa
push
fs
dec
mov
mov
mov
fwait
into
notb
or
jbe
xlat
inc
xchg
sub
and
pop
xor
pushf
xchg
aam
aaa
das
cmp
sti
fs
jb
lahf
inc
shrl
outsl
jne
out
or
aaa
mov
mov
add
or
xchg
ds
pop
xchg
mov
jge
pop
lods
cmp
xchg
adc
cmpsb
aaa
adcb
sub
sbb
sbb
xchg
mov
push
sub
xchg
cwtl
mov
xchg
push
mov
cmp
xlat
fwait
in
sbb
inc
scas
sti
adc
stc
icebp
iret
jl
aaa
leave
add
rolb
mov
sub
mov
jne
inc
mov
aaa
dec
aas
xchg
mov
add
cmp
adc
clc
lahf
out
xchg
pusha
fisttps
inc
fnsave
inc
daa
jle
inc
repz
hlt
mov
test
stc
sub
aad
fstps
data16
in
cmp
jne
jl
add
inc
pop
xor
scas
jb
jge
andl
xchg
inc
rol
clc
push
dec
loopne
aad
inc
mov
aaa
mov
mov
cmp
xchg
mov
xor
in
cmp
dec
popa
fwait
sahf
jecxz
adc
cmp
push
test
aaa
out
test
aaa
push
xchg
sub
aaa
out
mov
inc
aaa
pop
xor
lret
jns
add
jne
nop
push
xchg
daa
movsb
or
pop
pop
mov
lds
push
movsl
xor
in
or
notb
int3
sbb
aaa
je
add
inc
sbb
dec
xchg
pop
shll
aaa
mov
mov
pop
aaa
mov
es
sub
mov
je
js
pop
inc
adc
outsl
rorl
popf
xchg
add
jecxz
out
lcall
ficoml
stos
xchg
scas
aaa
cwtl
mov
fwait
pop
mov
out
test
loope
cmc
adc
pop
orl
sbb
popa
mov
int3
ja
xor
fcoms
outsl
psubd
lea
push
push
fdivs
test
cmp
xchg
nop
shlb
sahf
dec
cmp
lock
scas
mov
mov
mov
push
jge
cwtl
or
scas
shr
push
cltd
adc
ljmp
ds
lock
cs
movsl
sahf
cwtl
ljmp
outsl
out
test
adc
bts
push
imul
xor
cli
int
fisubrs
sarl
xchg
sarb
enter
push
fdivs
ja
popf
imul
inc
pop
ffreep
cmp
inc
sbb
sub
add
les
jbe
lahf
pop
adc
cwtl
outsl
mov
xchg
cmp
out
push
inc
or
mov
or
faddl
sbb
std
sbb
mov
and
inc
loope
cmpsb
mov
add
js
dec
xor
cli
jbe
int3
inc
popa
add
pushf
mov
int3
cmp
add
leave
mov
or
fmuls
adc
add
cmp
imul
subb
lods
mov
pop
adc
pop
imul
sbb
sbb
scas
sub
or
mov
imul
xchg
xor
sub
out
sub
push
and
cmc
add
and
sub
sub
mov
rorb
fwait
pop
scas
dec
cmp
insl
inc
xchg
aaa
jnp
and
prefetcht0
mov
push
and
js
ror
xchg
dec
xor
xor
aaa
hlt
jnp
xor
push
je
aaa
outsb
xlat
pop
lds
ja
jle
lahf
inc
add
hlt
fwait
mov
xlat
lret
addl
push
inc
and
ljmp
adc
sub
adc
pop
fdivl
cmp
jae
mov
sbb
mov
or
cmpsl
mov
or
sub
mov
mov
push
jecxz
sub
sub
aas
dec
neg
push
mov
jp
xor
mov
repz
mov
dec
sahf
cmp
inc
movsl
cmp
enter
daa
out
inc
jb
xchg
aaa
addl
psubw
je
out
mov
mov
jmp
repnz
jp,pt
mov
popl
aaa
int
xor
fcompl
adc
lcall
outsl
mov
test
movq
daa
lock
pusha
mov
mov
mov
or
push
aaa
pop
push
loopne
inc
mov
call
lret
add
pop
or
out
aaa
xor
pop
repnz
lea
mov
pusha
push
mov
add
mov
fstpl
mov
push
or
incb
and
aaa
movsb
test
adc
aaa
addr16
mov
lea
push
test
std
pop
aaa
jmp
fcoms
push
fistpll
int3
clc
xchg
xchg
add
out
fcom
push
test
or
fdiv
add
cmp
mov
push
lahf
sub
mov
push
leave
push
pop
xchg
aaa
sbb
gs
clc
cmp
mov
icebp
dec
sub
lret
or
xlat
mov
aas
dec
aaa
xor
adc
xchg
cmpsb
mov
lock
popf
dec
aaa
dec
sbb
push
push
inc
cmpsb
cltd
outsl
sbb
dec
xor
jbe
and
cmp
xchg
push
je
nop
lds
cs
jp
aaa
adc
mov
aaa
movsl
fcoml
adc
shl
mov
scas
mov
and
xchg
aaa
xor
shll
bound
sub
push
aad
dec
cli
push
fisttpll
mov
es
push
mov
mov
clc
sub
adc
lods
ja
mov
repz
sti
out
cmpsb
adc
aaa
nop
stc
out
push
push
dec
cvttps2pi
xor
leave
aaa
sub
in
mov
dec
mov
cmp
push
xlat
loopne
and
aaa
fdivs
mov
fisubs
cmc
nop
sub
movsl
xor
cld
mov
dec
pop
xchg
inc
aaa
iret
pop
insb
lods
sub
aaa
mov
insl
jl
out
dec
aaa
jp
inc
xor
dec
sub
fiaddl
adc
fsubr
mov
je
aaa
inc
fdivl
mov
mov
xlat
push
xor
push
loopne
and
inc
push
aaa
ss
xchg
mov
psubd
andb
fnsave
loop
pop
aas
sub
and
sarl
mov
mov
jae
stc
cmp
dec
add
cmp
fbstp
dec
cmp
sahf
aaa
and
nop
pop
fcmovne
notb
pop
in
addr16
and
fsubrs
xor
shll
pop
es
in
in
lods
fwait
aaa
jb
fsubrl
cld
movsb
mov
cmp
cmpsl
pushf
mov
in
scas
aaa
xor
pop
mov
push
ret
aaa
mov
push
lods
push
in
sti
lock
fildll
add
das
adc
cmc
aaa
test
pop
add
or
push
pop
add
jns
adc
dec
movsb
xorl
icebp
dec
ja
sahf
adc
test
and
push
push
mov
adc
fsts
sbb
pop
cs
insl
pushf
pop
dec
aaa
mov
pop
call
inc
mov
test
arpl
into
addr16
and
push
shlb
aaa
daa
das
mov
push
cmpsb
lock
inc
insb
aaa
mov
mov
adc
popf
into
fildl
inc
test
sbb
mov
nop
inc
jl
push
fsubrl
push
inc
inc
pushf
inc
xor
sti
cli
out
shlb
pop
inc
in
aaa
pop
cmp
push
xor
and
push
inc
in
daa
ja
mov
xchg
aas
inc
out
je
in
aaa
dec
mov
sahf
xor
or
rorl
aaa
xlat
sbb
jg
mulb
aad
aaa
test
dec
mov
or
sbb
sbb
add
out
imul
xchg
dec
cmc
inc
adc
mov
dec
out
mov
pop
shl
mov
sub
loop
addr16
xchg
hlt
jnp
insl
cwtl
enter
scas
mov
movsl
test
sbb
inc
and
popa
push
push
loopne
fs
emms
xchg
fimuls
rcl
push
mov
pop
and
cmp
inc
rclb
dec
cs
or
mov
lods
aad
pop
scas
push
push
nop
test
fdivs
sub
rcrl
or
mov
shr
jge
scas
push
test
add
popa
mov
sbb
mov
push
or
mov
fmuls
mov
imul
dec
and
jns
jne
test
push
or
mov
in
lock
push
xorl
sbb
mov
stos
icebp
push
mull
lret
aaa
scas
mov
mov
movsb
lock
stos
sbbb
pop
dec
xor
cmp
pop
pop
fimuls
repz
mov
gs
enter
cmpsb
dec
lcall
mov
outsb
loopne
fsubl
fnstsw
aad
and
add
test
xor
scas
in
in
adc
cmpsl
add
push
xor
or
adc
pop
fistl
scas
and
pop
or
xor
in
xor
mov
jnp
xlat
fs
rcr
int
repz
outsl
or
into
gs
inc
cmp
out
js
adc
imul
dec
dec
jne
arpl
jp
stos
adc
sub
cwtl
outsl
arpl
es
jecxz
jno
xchg
scas
rolb
ljmp
out
daa
test
dec
xchg
push
inc
add
mov
and
dec
pop
dec
push
xor
or
and
mov
jecxz
ret
fdivs
es
ja
cld
les
mov
xchg
adc
sbb
test
lcall
aaa
xchg
add
xchg
inc
mov
and
add
dec
jnp
push
out
aad
lcall
push
pop
call
in
enter
out
mov
jecxz
mov
out
aaa
aas
adc
and
std
fcmovb
scas
inc
fildll
aaa
int3
jg,pn
dec
sub
insl
std
push
aam
aaa
mov
insl
pop
cmc
daa
icebp
into
inc
loopne
jge
fidivrs
addr16
jae
cli
aaa
fistpll
ss
push
lret
mov
daa
sti
addl
int3
xchg
mov
add
mov
aaa
jle
jbe
sub
sbb
outsl
xchg
xor
mov
mov
in
xor
and
cmp
aaa
or
push
nop
pop
and
in
popf
and
into
mov
hlt
in
gs
xlat
mov
addr16
aaa
dec
adc
jl
cmpsb
aaa
lret
addl
add
aaa
and
lret
pusha
notl
jae
or
mov
sbb
aam
sub
push
add
call
lret
int3
adc
shll
mov
mov
rcrb
mov
jl
cmp
jp
stc
adc
aaa
outsb
adc
dec
pusha
ljmp
pop
inc
hlt
add
fcoms
frstor
push
icebp
stos
mov
int3
into
push
sub
in
aad
insl
insb
hlt
pop
aas
or
lds
test
mov
push
pop
sbbl
aam
cmp
cmp
pop
xchg
out
ror
ja
pop
outsl
inc
jne
into
gs
add
and
push
jge
adc
ret
cmp
stos
mov
sbb
mov
rorb
cmp
mov
jnp
or
dec
into
pop
inc
call
das
or
pop
xchg
cwtl
inc
mov
sub
outsb
rorb
xlat
cmp
rorl
mov
mov
mov
fwait
sbb
adc
test
jg
enter
fsts
lret
cmp
icebp
sub
inc
sbb
insb
jecxz
fisubl
xor
xchg
add
sbb
xor
sti
sub
dec
gs
fdivs
mov
outsl
scas
mov
cmp
jno
and
aaa
or
adc
mov
add
inc
mov
xor
scas
and
cmp
sbbl
rolb
push
aaa
stos
test
lods
pop
out
sub
push
push
push
insb
mov
cmp
negl
insl
fnsave
das
mov
jo
mov
inc
jae
aaa
in
movsb
cwtl
mov
stos
test
push
cmp
or
inc
cwtl
adc
aas
leave
fdivs
xchg
mov
pushl
cld
dec
in
lock
ja
pop
stos
cmp
insl
mov
mov
mov
sti
lds
push
push
cmp
sbb
test
xlat
add
subl
xchg
pop
jno
xor
popa
and
jge
in
mov
repnz
adc
xor
or
test
sub
push
xchg
ss
push
push
aaa
inc
push
push
xor
pop
fsubl
sub
sbb
in
xlat
rcrl
xchg
pop
sti
add
mov
mov
push
mov
rorb
inc
sbb
adc
mov
cmpb
aaa
mov
sbb
aaa
out
and
jo
xor
fidivl
jne
sbb
pop
divl
lea
outsb
sub
xchg
jb
loopne
fneni(8087
stos
aaa
fnstcw
sbb
jbe
aaa
mov
sub
shlb
xorb
adc
jmp
enter
les
push
sbb
aaa
jns
fwait
movb
or
adc
inc
mov
repnz
shld
push
aam
fildl
lret
out
or
sbb
aaa
lcall
fwait
aaa
jnp
mov
dec
aaa
cltd
pop
pop
sub
fisttps
or
es
xchg
sbb
std
xchg
fcoms
dec
sbb
add
and
adc
paddsb
sub
xchg
stos
cwtl
stos
push
and
dec
pusha
lea
in
or
adc
pushf
mov
loopne
in
adcl
out
stos
dec
mov
cmpsb
sbbb
mov
test
xor
lock
xchg
sbb
into
ficoms
inc
adcb
mov
pop
call
or
inc
pop
outsl
xlat
int3
lods
jg
add
lret
data16
das
std
jne
push
adc
add
sqrtps
test
inc
xor
cmpsl
cmpb
ss
jg
or
iret
cmp
mov
imul
js
inc
or
cmp
arpl
in
pop
xor
fmul
xchg
cmp
popf
mov
mov
notb
std
push
xor
cmp
push
sbb
push
sub
adc
in
fdivrl
push
cltd
mov
add
popa
xchg
sbb
scas
xchg
fldcw
ds
mov
test
dec
xchg
cmc
fs
hlt
mov
gs
mov
jnp
lea
sbb
imulb
and
imul
and
sbb
mov
xchg
mov
seto
lret
or
adc
jns
xchg
or
lret
xchg
les
pop
or
imul
jl
lahf
inc
mov
das
dec
cmc
pop
add
sbb
imul
xchg
sbb
pop
or
mov
push
test
hlt
fst
jl
imul
inc
pop
jbe
xchg
add
pop
fldt
jns
jg
vcvtsi2sdl
xchg
hlt
rol
outsl
andl
xchg
pop
push
mov
xor
in
leave
jle
mov
ljmp
repz
push
dec
clc
fisubs
lods
aaa
adc
test
xchg
jnp
sub
nop
pop
sub
jne
xchg
daa
test
fwait
dec
aas
fld
push
inc
jp
adc
scas
and
aad
sahf
lock
mov
aad
mov
lds
jp
cli
mov
das
or
pop
push
or
mov
js
enter
lods
lret
inc
movsl
adcb
jo
out
das
or
pop
adcb
test
test
or
and
popa
mov
dec
jno
out
lods
shlb
in
cwtl
sub
in
sbb
adcl
dec
nop
in
push
cmp
aas
jb
lods
sbb
not
pop
xlat
cmp
mov
xor
or
fbstp
or
loope
dec
sub
mov
movsl
loopne
outsl
sbb
mov
std
inc
outsb
mov
dec
scas
int
lret
in
add
mov
adc
movsl
pop
adc
pop
dec
sbb
jle
sbb
inc
or
xor
fwait
ret
xchg
push
mov
int3
out
lea
add
aad
adc
inc
add
sbb
data16
push
xchg
sbb
decb
andl
and
inc
fmuls
in
int
xlat
cmp
mov
or
test
cmpl
xlat
dec
popa
rcrl
fwait
pop
mulb
movsb
mov
xchg
pusha
inc
in
add
mov
cmp
or
or
lods
sbbl
add
movsbl
movsl
push
jmp
jge
stos
inc
sti
push
loope
jb
ds
ljmp
add
or
aas
cmp
jecxz
lcall
push
xor
push
loope
lods
lret
jns
xor
nop
int
dec
and
cmp
mov
repnz
out
btc
xchg
mov
sbb
jg
les
push
mov
push
inc
f2xm1
outsl
stos
push
mov
sub
inc
aad
pop
cltd
adc
or
adc
mov
mov
mov
dec
sbb
test
out
sbb
data16
ds
cmpsl
fidivl
ljmp
mov
jmp
jns
inc
inc
inc
and
dec
pop
stc
dec
push
push
inc
mov
push
lock
push
pop
scas
outsb
or
cmpsb
add
or
cwtl
push
in
in
sbbb
dec
adc
mov
movsb
xchg
inc
insb
or
outsl
or
jg
pop
movsl
xchg
adc
les
mov
rcrb
adc
sbb
adcb
mov
outsb
cmpl
sub
xor
sub
cmp
pop
pop
test
imul
dec
insl
mov
shrl
enter
sbb
cmpsb
fcompl
xchg
and
jb
test
jno
out
lret
and
test
dec
xchg
dec
xor
aad
sbb
push
mov
xor
add
cs
lea
addr16
shl
inc
mov
cmp
test
add
nop
les
mov
stos
adcb
sahf
cmp
cwtl
test
or
jge
mov
mov
cmpsb
mov
loopne
add
cmpsb
fcmovbe
push
pop
mov
cmp
cmpsb
enter
test
jg
sbb
sbb
enter
jg
ds
adc
lods
inc
and
js
cmp
in
sbbl
dec
stos
mov
adc
or
dec
or
adc
pop
xlat
cmp
jns
and
shrl
jne
sbb
sub
test
inc
daa
addr16
movsb
sub
pop
mov
je
out
mov
mov
xor
add
or
stc
movsl
int3
jg
mov
hlt
mov
jecxz
addl
clc
pop
std
dec
sub
fs
aas
insb
pop
adc
adc
adc
shrb
enter
in
jg
mov
mov
test
mov
sbb
mov
sub
adc
xchg
out
test
test
int
or
test
sbb
dec
or
fistl
mov
mov
cmc
xchg
sbb
fsts
push
adc
lds
inc
in
xchg
cmpsb
mov
lds
mov
xchg
call
fwait
cmpsb
cmp
mov
mov
test
mov
and
jae
push
lret
inc
dec
push
inc
jno
mov
jmp
stos
push
pop
iret
cltd
faddl
ja
inc
mov
jno
sbb
sbb
adc
outsl
add
add
stc
add
cltd
adc
dec
pop
aam
xchg
lock
fwait
pop
pop
and
mov
or
jno
dec
jb
out
inc
or
cmp
mov
into
rorb
dec
jge
test
lret
outsb
aad
inc
mov
mov
inc
fcompl
inc
ret
or
les
or
cmp
cltd
add
outsl
add
add
inc
popf
shl
inc
or
popa
mov
movb
das
mov
mov
pop
ljmp
sahf
pusha
outsl
or
mov
rolb
jns
sbb
xor
fstpl
adc
loop
or
cmp
mov
les
inc
nop
push
inc
negl
add
sbb
inc
push
or
mov
inc
sbb
scas
jnp
push
outsl
mov
and
pop
lock
add
inc
push
sbb
outsl
dec
jns
sub
mov
and
jne
add
negb
jg
inc
outsl
mov
pushf
inc
ficoms
aad
cwtl
xchg
add
in
mov
inc
dec
xor
mov
bound
or
fdivs
lea
inc
std
sub
sbb
pop
or
pushf
stos
jne
pop
mov
in
dec
addr16
sbb
xchg
popa
or
or
loope
dec
mov
popa
movsl
mov
xchg
cmp
jbe
js
lods
nop
mov
lahf
push
int
add
add
add
mov
dec
fcomps
dec
lea
mov
jne
out
shll
test
nop
movsl
adc
xor
fsub
in
mov
das
mov
mov
dec
pop
sbb
or
ds
aaa
or
dec
and
cld
add
das
mov
and
mov
adcl
rcrb
or
push
insl
sbbl
ucomiss
in
pusha
sbb
mov
pop
push
mov
cmc
stc
jns
sbb
cmp
ss
std
in
add
pop
sbb
mov
ret
add
setno
push
adc
rcll
sbb
and
js
aaa
mov
adc
sub
push
sbb
adc
adc
pop
push
xor
out
das
cmovge
dec
or
adcl
dec
sbb
push
mov
dec
je
outsl
pop
cmpsb
add
inc
pop
adc
orb
dec
int
inc
pop
adc
pop
dec
jl
es
mov
push
xchg
std
pop
xchg
sbb
inc
addl
and
mov
sti
dec
add
inc
int3
stc
mov
cmp
sub
jge
decl
lahf
sbb
push
push
inc
push
adc
and
in
test
dec
movsl
jecxz
aaa
in
test
cli
jmp
push
dec
out
cmp
imul
mov
cmp
das
cwtl
pop
mov
loope
sbb
mov
jbe
jge
xor
int3
adc
xor
dec
cmp
sub
jno
push
xchg
xchg
inc
jo
sbb
cmp
outsb
test
adc
insb
out
adc
cmp
sub
mov
or
mov
mov
jecxz
xchg
ljmp
enter
mov
or
adc
test
data16
xor
loope
pop
xlat
cmp
fwait
in
scas
je
orl
mov
std
mov
fwait
out
fisttpll
imul
das
adc
adc
or
adc
into
mov
mov
add
cld
pop
sahf
ljmp
adc
or
xchg
xchg
in
cli
pusha
mov
xor
daa
adc
mov
sbb
call
mov
enter
inc
lods
adc
fcomps
outsl
loop
push
mov
or
pusha
jmp
insl
idivb
cmp
aad
jmp
in
xor
imul
sbb
ljmp
aaa
enter
pop
adc
inc
lods
dec
repz
icebp
bound
int3
int3
scas
mov
or
push
or
sub
fwait
pusha
push
test
inc
fcoml
mov
fucomp
jg
scas
gs
data16
dec
mov
or
fmuls
out
adcb
lret
xchg
mov
icebp
push
sahf
inc
jne
imul
add
push
jne
mov
xchg
hlt
or
test
cwtl
fisttpll
add
or
js
xor
pop
push
lock
push
inc
imul
jne
cwtl
push
test
popf
mov
jne
xchg
xchg
or
bnd
addl
dec
sbb
cwtl
imul
popa
dec
outsl
shrb
sbb
mov
xchg
les
fistl
inc
fmull
and
push
pushf
call
aas
mov
in
jne
inc
dec
or
std
jmp
add
dec
movsl
rcrl
mov
pop
cmp
ja
lret
cmp
jae
testb
push
test
inc
outsl
jne
faddl
lods
fsubrl
jb
dec
dec
rcrl
sub
xlat
cmp
jle
dec
das
dec
outsl
mov
dec
jl
dec
xlat
cmp
and
mov
shl
adc
lea
cmp
dec
sbb
shl
adcl
cmp
pop
sub
je
sub
jnp
dec
push
cmp
adc
sub
adc
xor
inc
adc
insb
shrb
cmp
push
imul
dec
mov
pop
imul
xor
adc
xlat
imul
sub
cmp
pop
cmp
pop
lods
imul
aaa
adc
pop
cmpsb
int3
imul
arpl
add
xchg
push
add
pop
adc
lock
sbb
and
push
aam
pop
jmp
xor
adc
insb
push
and
popa
jge
cmp
xor
mov
mov
movsb
arpl
cmp
jp
test
mov
mov
cmp
cwtl
test
jns
imul
pop
pop
sub
mov
in
mov
and
dec
in
out
lods
or
add
leave
out
aaa
or
mov
pusha
cmpsb
xchg
sahf
jmp
push
dec
stos
pop
xchg
adc
out
xchg
adc
test
jne
mov
adc
scas
adc
pop
sbb
mov
dec
notb
or
jecxz
inc
test
fcoms
push
sbb
push
dec
cmpsl
imul
pop
and
or
aad
pop
xchg
pop
xlat
inc
inc
lea
sbb
push
ja
fiaddl
inc
dec
mov
adc
pop
push
and
fstps
loop
mov
or
mov
push
add
push
int
cmp
insl
cs
ljmp
xchg
adc
cmp
lea
in
mov
add
dec
mov
incl
loop
jne
inc
xchg
sbb
sbb
sahf
push
inc
jne
faddl
aad
ds
movsl
fiadds
mov
mov
ficoms
dec
xor
inc
les
rcrl
repz
lods
sub
das
adcl
push
adc
ja
dec
dec
dec
jl
xorb
jge
enter
jg
sbb
rcrl
mov
cmp
dec
or
ret
ds
insl
int3
pop
jg
inc
xor
cmp
xlat
cmp
ss
cmpsl
cltd
sub
cli
lods
aad
or
test
movsb
mov
mov
dec
lea
pop
push
loop
fmull
add
pop
and
sub
mov
dec
add
dec
int
xor
cltd
fstpl
sbbl
sbb
dec
mov
push
adc
test
out
lea
pop
adc
fwait
add
dec
xchg
or
xchg
add
mov
dec
sbbb
cmp
rolb
lcall
scas
imul
pop
add
jns
das
mov
xlat
cmp
adc
fimuls
imul
jae
jo
mov
aam
jecxz
das
dec
fldenv
outsb
nop
adc
movsb
shlb
mov
sub
gs
subl
pop
outsl
sbb
sbb
mov
jg
lret
stc
insl
test
syscall
add
call
sbb
lea
imul
movsb
jmp
lods
lret
ror
outsl
jecxz
dec
jns
pusha
jbe
imul
shr
fisubs
sbb
mov
aaa
iret
lret
enter
xor
pop
test
leave
mov
mov
loope
scas
fsubl
add
pop
lret
pop
sub
fbld
sbb
aaa
test
xchg
inc
or
stos
mov
icebp
adc
sti
pop
pop
cli
rclb
loopne
pusha
fidivs
imul
sub
sbb
inc
dec
xchg
add
add
adc
hlt
js
cli
fst
aaa
xor
cwtl
xchg
ss
mov
add
sbb
fsubrl
mov
aaa
mov
fwait
xor
add
mov
mov
sub
adc
push
aaa
sti
add
adc
aaa
fs
test
dec
sub
jbe
push
add
ret
aaa
push
xchg
xor
jl
loopne
int3
fwait
aaa
mov
mov
xor
jne
insb
call
adc
call
divl
insl
pop
leave
jbe
leave
aaa
jp
pop
jo
pushf
in
ret
adc
or
push
call
xor
addr16
mov
xchg
pandn
sahf
lods
or
insl
cld
outsl
xlat
ret
dec
jne
mov
mov
pushf
inc
sahf
daa
addr16
pop
aaa
inc
shrl
insb
sahf
mov
aaa
les
jbe
aam
ret
aaa
mov
stos
xchg
mov
cld
aaa
fildll
lods
cmpsb
mov
cli
cltd
cmp
aaa
sub
and
mov
push
push
lock
mov
jl
mov
lods
push
cmpsl
xchg
cwtl
cmpsb
push
test
aaa
js
lea
aad
ja
loope
mov
repz
aaa
daa
or
and
daa
mov
adc
jge
dec
xchg
test
mov
inc
loope
aaa
int3
scas
sub
push
and
andnps
mov
test
inc
jbe
xor
adc
scas
push
aaa
nop
push
jae
cmpsb
xor
mov
cmpsl
aaa
cmp
mov
cld
dec
cmp
sub
aaa
push
lock
mov
pop
imul
adc
test
aaa
and
sbb
repnz
rcrl
or
lahf
dec
scas
xchg
and
pop
movsb
aaa
xchg
dec
push
aaa
jnp
xchg
fs
divb
aad
sub
jecxz
pop
aaa
lret
clc
dec
jns
orb
cmpsb
cld
aas
push
pop
mov
dec
loope
inc
cwtl
and
mov
push
jbe
xor
pop
adc
mov
data16
cmpsl
xor
dec
lahf
js
test
adc
stc
xchg
filds
imul
sahf
insb
xchg
aam
jl
jo
push
cmpsb
enter
in
les
rol
mov
in
sbb
cwtl
mov
aaa
lds
pop
sti
or
lods
mov
cmpsl
ljmp
jp
cmpsl
frstor
sahf
sbb
pushf
xchg
icebp
mov
pushf
mov
daa
stos
hlt
mov
cmp
push
mov
inc
push
test
insb
test
sub
xor
imul
wbinvd
pop
dec
outsl
jnp
ror
jge
xchg
jnp
add
and
sbb
mov
cmp
cmp
outsl
add
clc
out
jnp
or
sahf
adc
gs
les
lock
lret
loop
loope
enter
or
in
xchg
rolb
push
sahf
pop
mov
jecxz
jl
pop
push
scas
jno
cmp
fwait
push
add
rclb
jge
push
lods
sub
rcrb
adc
xor
lods
jae
xor
adc
sti
adc
push
imul
sbbl
clc
std
push
loopne
or
cmp
sbb
push
jmp
mov
adc
or
hlt
sbb
fcmovnb
adc
lret
cmp
dec
outsl
adc
lret
punpckhwd
cwtl
push
dec
push
shll
xorl
data16
add
adc
aam
mov
mov
mov
mov
xchg
mov
mov
nop
mov
jne
sub
arpl
cltd
sbb
popa
movsb
mov
fnstcw
fistpl
ficoms
adc
fcmovnbe
in
mov
testb
sbb
ds
push
inc
shlb
movsl
mov
mov
rclb
add
mov
lods
adc
inc
fnstsw
push
lea
cmp
aaa
adc
pop
adc
mov
imul
adc
pop
aam
cmp
cmp
adc
imul
cltd
inc
jl
xor
jo
add
pop
push
inc
mov
mov
sub
ds
out
rcpps
hlt
mov
sub
in
adc
fs
mov
adc
xchg
loope
adc
xor
imul
mov
jno
mov
mov
in
jo
in
int
dec
add
orb
mov
jg
jno
enter
xchg
outsl
jno
enter
int
sti
roll
jne
int
sbb
pop
jnp
dec
dec
add
pop
add
cmp
rclb
pushf
test
pop
movsl
sub
add
out
rorl
inc
cmp
pop
pop
pop
sub
cmp
push
and
sub
pop
mov
and
test
aaa
popa
add
sbb
ds
pop
mov
test
or
out
xor
enter
or
arpl
insl
cmp
pcmpgtw
jo
jg
pop
call
fists
cmp
call
pop
mov
lcall
xor
sub
jmp
out
xor
enter
and
lea
sub
dec
mov
call
mov
lcall
in
mov
adc
mov
fsubs
stc
cmp
subb
test
pop
adc
dec
fstpt
rclb
add
leave
test
lret
bound
das
mov
lea
sbb
fbld
adc
dec
es
pop
dec
popf
lea
or
out
test
inc
inc
clc
jns
mov
xchg
fiadds
push
in
jg
inc
pop
mov
test
nop
nop
or
das
gs
in
inc
jle
fs
push
xchg
test
ret
inc
mov
add
call
ficoms
xchg
jg
mov
out
mov
orl
cmc
test
pop
inc
push
test
shll
lds
add
out
jle
jmp
pop
lods
mov
cmp
adc
mov
lret
in
dec
push
lea
stos
imul
sbb
rcll
bound
in
mov
daa
fldcw
sub
xor
sub
int
ret
sub
push
cmp
stos
int
cmc
sub
or
push
lret
jb
or
in
dec
adc
or
pop
xchg
mov
cmpsl
jne
scas
adc
adc
or
imul
push
mov
mov
xchg
push
gs
push
pop
test
call
bound
int
pop
pop
xor
sbb
int
cs
imul
arpl
adc
or
int3
sbb
mov
mov
cmp
adc
roll
icebp
or
aas
dec
in
test
jbe
mov
push
sbb
rolb
inc
and
scas
sbb
shrb
pop
scas
sahf
sbb
cld
push
daa
mov
movq
push
add
mov
jo
push
fildll
mov
push
repnz
sbb
adc
or
int3
mov
shrb
lods
outsl
inc
pushf
jg
push
pushf
jg
add
cwtl
test
adc
mov
adc
adc
or
sub
test
or
iret
adc
dec
stos
lea
mov
test
add
mov
mov
push
adc
push
xorb
mov
dec
mov
sbb
mov
lea
cmp
outsl
jge
jg
sbb
xchg
fcomps
mov
mov
mov
ja
mov
add
rorl
out
add
and
shlb
mov
jo
sbbl
lret
or
push
mov
mov
test
stos
mov
mov
in
mov
stos
or
or
adc
aaa
movsb
dec
pushf
stos
pop
mov
aas
adc
push
scas
mov
aaa
cmp
scas
sub
xchg
cmpsb
mov
imul
pusha
repz
jg
in
popa
adc
popa
dec
dec
or
outsl
cmpsb
pop
xor
adc
imul
mov
inc
push
cmpsb
fmull
push
shlb
arpl
push
enter
and
sbb
adc
test
adc
test
xlat
cmp
mov
popa
mov
sbb
cmpsb
enter
inc
dec
push
rcrb
sbbb
addr16
mov
xchg
out
cmpsb
enter
popa
inc
mov
and
cltd
lret
sbb
mov
mov
xchg
cld
decl
shl
pop
adc
sub
jnp
adc
rcrl
pop
sbbl
pop
dec
or
cwtl
adc
mov
dec
psrlq
xchg
outsl
cmpsb
add
push
lea
enter
lret
pusha
dec
orl
add
mov
adc
outsl
decl
mov
xor
xchg
adc
xchg
shr
adc
mov
mov
or
pop
pop
fisubrl
xchg
add
sbb
xor
push
adc
in
les
add
in
out
mov
int
int
inc
ljmp
out
sbb
cmp
pop
add
ljmp
sbb
sbb
dec
lods
add
pop
daa
pop
adc
add
jmp
add
out
out
add
or
test
dec
pop
test
sbb
sbb
pop
pop
xchg
pop
adc
or
dec
pop
xchg
inc
or
pop
or
jmp
push
adc
cltd
add
popf
repnz
mov
cmpsb
idivl
int
cltd
and
push
adc
jl
rclw
jno
or
dec
pop
cs
shll
outsl
pop
imul
inc
ss
dec
or
subb
aas
dec
adc
orl
push
leave
sub
mov
lret
int
cmp
ret
aad
divl
dec
xchg
fcoms
mov
mov
mov
xor
in
jg
jno
push
mov
cltd
jl
pop
inc
shrl
or
sbb
xchg
sub
or
xor
push
inc
sti
ss
setbe
scas
sbbl
mov
orl
sbb
pushf
dec
ss
adc
mov
ljmp
sub
shll
ss
add
in
movsb
jo
jae
repz
adc
insl
mov
sbb
sahf
mov
xchg
adc
adc
dec
mov
adc
dec
addb
mov
adc
out
pop
in
sbb
negl
mov
dec
lods
in
out
jmp
sahf
xor
sbb
outsl
jl
dec
out
inc
sbb
subb
pusha
out
sbb
sbb
addb
sbb
push
pop
fmuls
sbb
aam
test
push
cltd
xor
mov
aaa
fcoms
xor
jge
sarl
adc
and
aad
adc
pop
cli
add
pop
pop
cs
arpl
cmp
or
fwait
sahf
popa
xchg
jne
or
andb
or
lret
push
outsl
or
add
lcall
jo
mov
inc
jbe
out
fucomp
and
in
add
popa
dec
pop
mov
jl
dec
pop
addr16
or
mov
pop
imul
dec
imul
pop
das
inc
loopne
fcoml
jp
pop
jnp
or
in
jno
inc
je
add
inc
je
sbb
dec
add
sbb
adc
jmp
add
jmp
add
or
push
outsl
push
imul
push
imul
ja
repz
jnp
fnsave
lcall
pop
mov
shlb
pop
fiadds
pop
mov
sbb
adc
jecxz
cmpsb
inc
jl
dec
push
add
in
cmpsb
sub
jae
add
sbb
mov
jne
mov
or
cmp
mov
lock
mov
mov
popf
jbe
icebp
inc
cld
dec
fwait
enter
xchg
jg
lea
xchg
pop
aam
dec
imul
cwtl
lods
sbbl
xchg
cli
aaa
push
sbb
test
lds
push
xor
or
pop
lahf
jge
repz
repnz
adc
cmp
pop
aaa
cld
in
sub
scas
cmp
push
add
pop
jne
dec
test
mov
xorb
xor
sub
scas
dec
sub
push
lea
ljmpw
jg
xchg
ffreep
xchg
insl
xchg
lods
sbb
mov
out
sub
add
lcall
std
sbb
dec
xchg
cmpsb
add
add
inc
sub
test
push
aad
jmp
push
test
cmc
lods
adc
ror
ja
xchg
lds
cs
enter
jecxz
pop
es
cmpb
popa
rcrl
iret
or
lahf
sub
adc
cmc
xchg
icebp
sbb
fst
push
or
stc
mov
mov
ljmp
push
and
andb
xchg
test
add
push
xor
lock
xchg
jl
aam
adc
test
in
cmp
or
sub
lret
aam
addr16
mov
imul
cmpsb
bound
es
jnp
movhps
testl
insl
add
sbb
std
jbe
xor
xor
fidivs
jbe
imul
repnz
inc
adc
jge
cmpsb
push
ja
mov
outsl
push
mov
out
iret
imul
sub
test
addr16
jmp
sub
ljmp
fmul
sub
lret
cmpsl
popa
dec
lods
push
inc
aaa
lea
int
mov
aaa
mov
sub
and
sub
push
loopne
bound
aaa
mov
loope
and
add
inc
movsb
test
les
aaa
mov
push
inc
or
outsl
xchg
rolb
jo
add
cmpsl
push
push
dec
scas
imul
dec
imul
or
xor
mov
aaa
jle
dec
leave
lret
insb
push
sub
mov
lods
sub
test
add
inc
cmpsl
mov
add
arpl
movntq
push
orl
xchg
jo
xchg
push
cmp
aaa
test
xchg
and
enter
cld
xlat
stos
out
cmp
in
xchg
mov
mov
xor
das
xchg
jae
test
inc
xchg
fdivs
ret
xor
popa
xchg
xchg
inc
loopne
neg
mov
lock
mov
ret
adc
push
in
mov
xchg
fmuls
aaa
mov
cmpsl
fs
pop
outsl
xorl
cmc
pop
mov
aaa
pop
into
arpl
stos
push
loopne
lret
aam
das
dec
lea
out
sarl
push
cmp
adc
gs
repnz
xor
sbb
sub
addl
jecxz
icebp
aam
adc
and
mov
and
mov
stos
and
cmp
std
sub
cmp
push
sahf
mov
aaa
jmp
and
lea
aaa
fwait
push
push
cmp
aaa
cs
mov
jnp
sahf
add
jae
cmp
xchg
xchg
fdivrs
fldt
fistpll
sub
add
push
mov
mov
das
and
and
push
fisubl
and
xlat
mov
push
and
mov
cmp
test
shl
clc
outsb
inc
mov
lea
arpl
mov
push
and
or
add
out
mov
sahf
ret
inc
xor
aaa
fs
mov
aaa
lahf
push
xorb
std
jnp
lods
and
scas
adcb
adc
adc
pop
push
lods
push
shrl
les
ret
or
jns
cmpsb
jno
aam
mov
loope
add
mov
movsl
scas
fidivl
movsb
and
sub
daa
sub
jno
loope
xchg
pop
cmpsl
iret
or
cmpsb
mov
loopne
cmp
jno,pn
loop
push
lea
inc
mov
mov
push
add
in
sub
cmp
or
mov
sti
aaa
push
sub
xor
ficoml
aaa
mov
inc
adc
push
mov
xchg
aaa
cld
les
das
sti
fcmovnbe
rolb
test
cli
ss
aaa
addr16
xchg
or
into
loope
mov
mov
cmp
cmp
xor
aaa
stos
in
fsubrs
sti
jp
jmp
cmp
int3
stc
aaa
add
out
imul
nop
aas
mov
pop
inc
adcl
mov
xchg
sub
test
outsl
jp
std
lret
call
clc
jmp
hlt
inc
notl
insb
adc
rorl
mov
rorl
dec
shlb
pusha
scas
repnz
mov
add
push
push
aaa
mov
mov
je
add
scas
fidivl
push
shll
js
cmp
ja
fwait
das
or
popa
push
cli
into
enter
aaa
mov
scas
je
aaa
iret
xchg
xchg
aaa
jbe
es
ror
sub
jp
and
in
pop
lods
and
popf
dec
add
push
pusha
repnz
jno
push
out
aaa
mov
sbbl
aaa
outsb
cmc
and
aaa
int
test
bound
aaa
mull
adcl
sub
or
jno
aaa
push
xlat
jp
movsb
scas
and
mov
sahf
jno
clc
fdivrs
negb
mov
mov
fiadds
jb
shl
xchg
xchg
push
push
and
std
enter
imull
cmp
push
mov
aaa
and
xchg
clc
lock
aaa
je
lods
movsb
push
mov
pop
cmp
out
inc
mov
cmp
insl
das
aaa
mov
fsubrl
shlb
jae
push
xchg
mov
pop
aaa
adc
sti
mov
fmuls
in
popf
aaa
jbe
adc
outsl
aaa
sub
cmp
ss
loop
mov
pop
cld
mov
xchg
adc
cli
das
mov
mov
mov
cmp
aaa
sub
push
inc
mov
cmp
dec
sti
mov
repnz
cmc
cli
lods
add
sub
pop
or
jns
popa
movlps
rol
add
lret
loopne
add
cli
mov
ds
shr
and
jge
cmp
mov
push
adc
out
xor
pusha
fidivl
jb
mov
movsl
add
push
or
mov
jb
aas
stos
xchg
std
xchg
aaa
add
mov
jno
push
inc
aaa
sub
xor
jge
cltd
movsb
mov
fisttpll
jne
psrlq
call
aaa
fldenv
ret
xchg
stos
mov
cmp
mov
sbb
enter
in
mov
jns
imul
scas
add
mov
pop
stos
loopne
mov
aaa
xor
jne
jge
data16
test
daa
xor
out
lock
sub
jne
dec
mov
adc
pushf
pop
and
jle
jno
or
frstpm(287
cwtl
mov
push
andb
sub
sub
shrl
js
mov
adc
cmp
xor
add
mov
hlt
ljmp
xchg
push
xchg
xor
cmp
mov
push
cmp
inc
aaa
neg
pop
movsl
clc
movsb
pushf
in
fwait
cld
in
sbb
js
xor
aaa
roll
mov
test
aaa
nop
inc
push
xchg
stos
sahf
aaa
and
mov
xchg
jl
push
call
aaa
int3
jle
cmp
ds
stc
fcoml
sub
add
enter
push
dec
or
mov
cmp
dec
sbbb
es
push
pop
jne
insl
or
scas
nop
mov
imul
push
mov
movsl
loop
cmp
aam
insl
jmp
iret
mov
das
sub
in
adc
mov
cli
icebp
jae
negb
add
sbb
cmp
jns
xchg
data16
cs
push
icebp
aas
push
dec
bound
aaa
xor
cmc
into
mov
and
xlat
iret
mov
int
movsb
mov
jge
fnsave
cmp
imulb
or
stc
fmul
bnd
pop
xor
or
xor
dec
mov
rcll
and
lahf
fcoml
aaa
ss
ret
add
cmp
push
hlt
lds
and
aam
mov
xor
xor
dec
mov
push
aaa
sbb
jb
xor
ja
mov
mov
ret
xchg
inc
xchg
aaa
fwait
inc
pusha
aam
jle
xchg
shll
push
test
sub
scas
out
mov
sbb
xchg
cmp
out
mov
dec
jecxz
aaa
inc
imul
mov
mov
repz
mov
aad
inc
xor
push
xorl
pop
ja
jno
push
mov
cmp
ljmp
out
pop
sub
mov
adc
xor
ss
push
and
or
xlat
add
clc
test
xchg
aaa
push
daa
cmp
xor
mov
jb
push
lret
paddd
jmp
aas
xor
or
pop
pop
push
aaa
inc
in
cmp
fwait
push
aaa
xor
push
test
add
mov
repz
vmovhps
aaa
dec
test
scas
mov
aaa
xor
xor
loopne
aaa
aad
and
or
lcall
mov
xor
cmp
aaa
call
lcall
push
xor
aaa
mov
adc
aaa
dec
cmp
adc
push
andl
mov
pcmpeqd
filds
and
jb
xor
out
push
out
sbb
daa
add
xchg
cwtl
jp
js
out
mov
push
loope
das
aas
in
jl
pop
mov
aaa
hlt
mov
sub
xchg
cs
push
jle
addr16
clc
and
xor
aas
cmovns
jge
daa
or
push
aaa
xchg
and
mov
stos
push
iret
inc
adc
ss
add
outsb
cmp
fsubl
addb
push
aaa
xchg
and
punpckldq
mov
scas
outsb
and
les
aaa
sarl
icebp
and
in
sub
mov
adc
xchg
clc
scas
sbbb
cwtl
or
fdivl
lock
sti
sarl
jmp
xor
sub
loopne
jb
imul
cld
test
in
ret
inc
dec
in
xor
sbb
mov
in
aaa
cmp
in
stos
aaa
mov
xchg
pop
js
and
fwait
push
js
in
cmpsb
ss
aaa
pop
jb
push
roll
sbb
faddl
arpl
add
aaa
scas
sub
mov
out
mov
idivb
ljmp
jge
cmp
addr16
or
in
pop
xchg
fcoms
xlat
aas
js
movsb
xor
std
cld
jbe
pop
jge
pop
arpl
pop
cs
mov
mov
push
xor
fistps
adc
jp
repz
mov
daa
push
aaa
int
iret
divb
lods
mov
das
hlt
add
sbb
inc
xchg
lds
popa
loope
add
cld
test
jae
push
scas
aaa
das
cs
jnp
and
aaa
pop
aas
cld
enter
adc
adc
lcall
aam
or
mov
pusha
aaa
jnp
gs
popf
xor
or
jbe,pt
cld
mov
cs
out
out
cmp
xchg
sbb
aaa
rorl
add
inc
and
fdivl
cmp
test
fs
xchg
adc
pop
adc
push
jmp
xchg
loop
lods
fdivs
int3
cli
aaa
sub
jmp
inc
push
aaa
into
mov
in
aaa
dec
lods
or
jnp
dec
ss
pop
pop
rcrl
adc
mov
mov
lods
jne
ret
out
mov
cmp
dec
aaa
in
mov
loopne
aaa
shll
jae
out
or
test
fldcw
cmp
jno
mov
sbb
mul
stos
int3
sub
loopne
fs
cmp
xchg
out
mov
loop
xor
pop
inc
pop
aaa
fistl
xchg
and
cmc
outsb
adc
jp
xchg
and
aaa
add
insl
jo
adc
jno
mov
lret
mov
imul
jb
xlat
sahf
sbb
mov
mov
aaa
and
mov
aaa
cmp
xchg
repz
dec
and
cltd
es
movsb
cmp
imul
adc
cmp
mov
aaa
test
mull
jg
xor
push
mov
inc
fnstenv
inc
int
into
icebp
aaa
mov
xchg
in
xchg
lds
xchg
mov
addb
add
mov
lret
and
push
dec
outsb
aaa
fbstp
xchg
enter
shlb
shll
fdivl
repnz
xlat
sarl
mov
aaa
stos
lea
dec
out
mov
jno
push
leave
xchg
fcoml
stc
xor
add
or
imul
add
andl
adc
es
clc
cmp
sbb
xor
es
jecxz
or
sahf
frstor
mov
sbb
xor
shll
into
add
adc
scas
push
fstpl
push
and
inc
or
aaa
pushf
and
pusha
jae
lret
dec
xorl
stc
mov
aaa
xchg
xor
aaa
in
mov
sbb
movsl
inc
decb
jge
std
aaa
in
jno
xchg
ret
in
shll
adc
mov
xchg
inc
in
push
lret
shll
jl
xchg
test
or
jge
in
xor
or
jp
mov
aaa
ficoms
pop
icebp
rcll
jo
fs
mov
shrb
jno
scas
mov
dec
xchg
aaa
daa
repz
loop
mov
pushf
aaa
scas
imul
faddl
mov
in
movsb
add
scas
pop
or
fsubrs
mov
cmp
cli
lret
push
pop
jg
pop
or
les
stc
testl
sbb
mov
pop
push
and
mov
lds
das
push
mov
pop
lods
xor
std
fcmovu
aaa
repz
ffreep
xlat
aaa
sbb
jnp
fs
xor
lahf
ja,pn
das
loopne
xor
or
or
aaa
sbb
int
std
or
and
jae
mov
fidivl
mov
cmc
sbb
insl
jb
mov
rcrb
repz
adc
lods
pop
test
lahf
aaa
jne
test
xchg
xlat
in
loopne
aaa
xchg
cmpsb
shlb
ret
aam
cmp
xchg
mov
in
xor
ficompl
jmp
lods
sbb
stc
jg
and
pusha
rcll
das
xor
xchg
cmp
lods
mov
mov
sbb
pop
jg
aaa
ja
add
loopne
jp
jb
add
push
fidivl
pushf
xor
and
scas
loop
aad
sub
mov
cmc
cmpsb
jae
pop
inc
fdivrl
sub
push
jb
int3
inc
ret
pop
dec
popf
repnz
mov
lds
or
cmpsl
js
adcl
mov
icebp
fdivp
aaa
push
dec
mov
mov
add
sbb
in
push
mov
in
mov
push
aaa
xor
and
inc
mov
je
lock
xchg
push
adc
mov
jp
fidivs
pop
cbtw
lds
dec
sahf
ss
xor
add
loope
mov
repz
push
jp
call
aaa
cld
icebp
mov
rclb
ja
cmp
or
mov
jbe
aaa
mul
addl
call
mov
stos
mov
iret
shrb
cmp
cli
mov
push
lock
pushf
mov
cvtps2pi
scas
imul
push
out
mov
jp
in
das
mov
imul
sub
pop
mov
push
mov
aaa
jnp
mov
xchg
in
and
mov
pop
adc
cwtl
call
aaa
out
cs
test
mov
fisubl
mov
int3
cmp
sub
in
aaa
fistpll
daa
sbb
aaa
mov
adc
jl
cltd
jae
sub
xor
inc
loopne
scas
jo
sahf
push
hlt
inc
aaa
das
call
rcll
repnz
dec
mov
scas
mov
lret
cmp
je
xor
jae
aas
mov
lcall
sbb
or
cmp
adc
inc
aaa
test
mov
scas
cmp
adc
pop
mov
sub
imul
repz
mov
out
pusha
mov
lods
shll
icebp
aaa
adc
ljmp
add
xchg
std
test
mov
jp
adc
adc
repnz
in
sbb
xor
inc
aaa
sub
pop
decl
push
rolb
adc
daa
aaa
int
fimull
adc
xor
xchg
bound
cmc
inc
inc
in
aaa
out
ret
cld
gs
pop
call
push
mov
and
xor
add
fldt
movsb
mov
nop
adc
mov
mov
pushf
mov
ds
mov
adc
in
xor
addr16
sti
xor
ror
mov
and
hlt
les
or
pop
jmp
jno
push
cmp
xor
add
cs
sub
movl
sbb
flds
shlb
mov
adc
and
inc
dec
pop
sahf
popa
mov
mov
sub
push
aaa
hlt
jne
test
dec
mov
pop
fldl
sahf
aaa
test
xor
aaa
addl
scas
push
or
sub
xlat
and
popa
xor
mov
cmovle
fcomps
scas
aaa
add
push
pushl
cld
or
loop
cs
and
pop
repz
aam
aaa
adc
out
xchg
lock
pop
mov
xchg
in
cmp
jle
xchg
pop
adc
sbb
dec
cmp
clc
divb
dec
jae
xchg
scas
test
stos
aaa
jns
lcall
sub
sarb
gs
push
add
fisubrs
or
cmp
stc
push
fmuls
mov
sbb
fbstp
mov
pop
in
jle
cld
in
icebp
aaa
loope
jnp
and
jl
inc
aaa
mov
leave
aad
int
sbb
sbb
xchg
sub
pop
cmp
pop
ja
mov
lahf
cmp
lods
xor
fcomps
mov
push
mov
jmp
cmpxchg
lret
or
daa
and
cmc
rcrl
push
mov
aaa
out
in
aas
mov
xor
cmp
adc
xor
push
mov
aaa
mov
jecxz
mov
out
push
mov
rolb
push
add
xchg
ljmp
pusha
aaa
mov
xor
xchg
dec
jb
loop
imul
jnp
in
mov
inc
push
push
add
jb
sbb
comiss
subl
pop
adc
add
and
ucomiss
nop
int
xchg
xor
cmp
pop
bound
mov
and
jno
scas
test
mov
sbb
push
xchg
dec
mov
roll
jp
into
popa
imul
cld
xchg
mov
mov
xor
ljmp
insb
lret
aas
sub
cli
mov
push
cmp
mov
sbb
cmp
loopne
fcomp
add
cmp
pop
gs
and
shlb
lods
hlt
pop
add
jle
pop
scas
pcmpeqw
mov
inc
xor
jecxz
stos
add
mov
mov
xchg
ss
in
cmp
jle
movsl
iret
aaa
pop
inc
test
aaa
jp
sbb
and
mov
cli
dec
loopne
jp
cmpsb
aad
in
in
aaa
gs
packuswb
aaa
icebp
cld
pop
and
adc
mov
jae
pop
shll
inc
push
scas
and
call
in
ss
clc
aaa
add
mov
inc
aas
jns
arpl
mov
movsb
pop
dec
aaa
daa
in
out
inc
push
and
out
mov
jno
shlb
and
stos
xor
lods
xchg
ss
pop
cmp
in
test
jno
xchg
shrl
movsb
xor
aaa
xchg
or
cli
aaa
mov
mov
xor
jo
mov
mov
pop
cmp
jno
movsb
adcl
fnstsw
push
sti
fidivl
in
ret
fneni(8087
push
aaa
mov
lock
or
aaa
sub
xor
sub
mov
out
aam
aaa
push
sti
fistpl
aaa
mov
xchg
and
jae
ljmp
push
mov
cld
icebp
clc
pop
cmp
hlt
pop
out
ljmp
add
loop
xor
pusha
in
pop
mov
ret
mov
jae
leave
xchg
cltd
imul
cltd
cmp
dec
mov
cs
fsub
jno
shll
jge
lock
and
lret
xchg
pop
es
jns
aaa
sbbl
jae
in
fsubl
adc
movsb
cmpsb
iret
arpl
cmp
mov
in
jecxz
jbe
mov
cmp
sarb
hlt
cmpsb
cs
xchg
xorl
add
mov
shrl
inc
cld
pop
in
and
fs
jbe
mov
sub
dec
das
add
or
xchg
xor
cmc
mov
loop
out
popa
test
aaa
pop
pusha
push
add
aaa
push
cmp
out
jecxz
xor
xchg
shll
dec
mov
imul
and
and
test
stos
lcall
xchg
mov
into
pop
xor
mov
adc
aaa
fdivp
cmc
adc
pop
roll
jne
fmul
fnsave
and
cmp
adc
mov
xlat
pop
add
loopne
mov
ljmp
xor
out
adc
xchg
in
std
and
add
mov
inc
push
xchg
mov
xchg
push
aas
mulb
das
sub
mov
jb
mov
fwait
jge
cmp
mov
xor
mov
mov
cmp
daa
shrl
push
and
gs
hlt
fs
cmp
fadd
inc
xor
push
dec
fwait
push
jne
pop
pushf
cld
xchg
gs
ss
pushf
lret
adc
mov
push
inc
xchg
lcall
adc
nop
neg
hlt
movsl
pop
cltd
and
ret
sbb
inc
aaa
push
cmp
push
jbe
and
cmp
out
mov
ss
cmp
cli
jns
cmp
hlt
fimuls
mov
shrl
and
aaa
inc
cmp
mov
or
xor
pop
push
or
xor
aaa
xchg
stos
jae
ss
movb
aad
push
test
mov
cmp
leave
test
xchg
cmp
mov
in
and
push
jg
aaa
adc
cmp
aaa
xor
aam
sbb
jo
jae
fstpt
std
cmc
stos
or
int
fstl
call
clc
inc
ret
xor
mov
mov
sub
cmp
or
inc
das
psrld
mov
jne
scas
or
scas
lock
sahf
in
js
xchg
mov
xchg
mov
les
rclb
jbe
xchg
and
lret
and
out
fidivrl
jno
je
scas
add
es
and
jle
into
xchg
icebp
or
cmp
daa
es
cmpsb
add
in
loope
push
repz
aaa
pop
and
jle
mov
xor
cmpsl
mov
mov
push
cmp
ss
std
mov
xor
hlt
sti
dec
loop
wbinvd
mov
cmp
mov
xchg
pop
pop
inc
out
fidivrs
pop
aaa
test
push
incb
pop
or
test
jl
xor
shlb
ret
das
xor
sub
cld
add
cmp
push
jecxz
call
aaa
dec
shlb
dec
or
inc
cmp
xor
cmpsl
aaa
das
mov
aaa
mov
je
jne
out
cli
cwtl
xor
hlt
movsb
xchg
fisubl
xor
inc
out
cmp
jbe
and
sbb
mov
push
daa
inc
aaa
jg
sub
jns
jmp
mov
xor
jb
mov
es
jno
dec
imul
mov
inc
pmullw
or
fs
and
inc
add
adc
mov
dec
mov
pop
pop
jno
cmpl
sub
jne
sbb
inc
lcall
push
inc
xchg
imul
or
add
test
fstl
jmp
mov
jp
ljmp
imul
aad
add
or
lods
mov
add
pop
or
jno
mov
pop
or
push
add
out
or
xor
mov
xor
or
sub
fldl
mov
adc
and
mov
mov
shll
push
lret
jo
inc
jmp
in
out
fisttpll
ret
in
popf
insl
mov
and
push
jmp
gs
cs
mov
mov
lds
jge
imul
xchg
lahf
lea
add
sub
jb
xchg
imul
xor
mov
jmp
addr16
insl
iret
dec
pop
iret
and
cmp
cli
int
mov
ss
push
sbbl
lahf
xlat
ret
lahf
jne
pop
mov
and
in
xchg
movb
imul
mov
iret
fnsave
cmp
out
adc
xor
popf
andl
arpl
ret
jnp
cmp
dec
ret
dec
pop
or
addb
pop
xchg
mov
test
loope
pop
push
add
leave
ret
mov
lock
outsl
push
mov
xor
sbb
aad
jl
cs
mov
lahf
mov
out
sbb
mov
lahf
sbb
pop
lds
jp
inc
lahf
movsl
add
inc
gs
fs
leave
add
bswap
sbb
scas
stos
js
xchg
clc
stos
or
scas
push
add
mov
into
insb
dec
dec
sbb
subb
adc
push
int
rorl
leave
push
push
jne
xchg
push
lds
inc
sbb
daa
inc
push
fidivrl
je
or
add
mov
xor
lds
outsl
aad
push
nop
shrl
push
push
iret
fisubs
sub
aad
scas
out
push
xchg
push
jge
mov
lret
fcmovnb
xor
lods
mov
mov
int
imul
aad
mov
lds
push
xchg
in
lret
mov
push
mov
sbb
aad
jg
iret
jne
frstor
xchg
jg
arpl
or
fisttpl
push
call
pushf
stos
enter
movsl
pop
imul
cmpl
rol
fistpl
mov
rcrl
jmp
ja
aad
jp
or
aad
ret
pop
lods
mov
sub
jg
cmp
lock
insl
cmc
dec
inc
movsl
sahf
fists
in
fimull
aam
out
addr16
fisttpl
mov
jne
push
iret
into
adc
push
cmp
mov
push
lods
mov
mov
ds
scas
leave
sub
sarb
mov
shrl
mov
inc
ja
jne
and
jne
adc
data16
mov
test
test
cmpsl
mov
push
xchg
xchg
jb
sbb
in
das
imulb
stos
cmpsl
push
dec
std
jns
lods
stos
mov
or
cmpsl
test
test
icebp
dec
aad
jne
loop
jae
stos
dec
sbb
inc
ds
push
cmp
insl
ja
test
fsubrs
cmp
dec
mov
mov
mov
jl
mov
mov
jo
test
insl
cmp
dec
cmp
in
addr16
adc
in
das
sub
pushl
ficompl
insl
mov
jl
add
mov
aad
add
sarl
bound
mov
fnsave
or
mov
xchg
pop
xor
adc
mov
xchg
ror
sbb
cmp
jge
add
mov
mov
pop
mov
pop
rcl
mov
or
pop
loope
fisubs
fiadds
adc
fucom
daa
rcll
and
xor
xchg
sbb
aam
xchg
or
das
or
mov
adc
inc
pop
int
rcl
insb
loopne
cltd
inc
mov
pushf
push
jecxz,pn
pop
aam
pop
mov
push
sbb
fistps
add
push
xchg
lock
mov
pop
cmp
insl
pop
stos
inc
in
arpl
repz
rcll
xchg
rcl
sbb
stos
adc
and
push
jne
add
jbe
sahf
std
stos
iret
push
ljmp
inc
rcll
aaa
add
or
sbb
pop
sbb
loop
adc
aad
mov
fdivr
mov
xor
jae,pt
pop
and
dec
dec
add
clc
in
add
test
mov
popa
iret
dec
stos
arpl
sub
aaa
gs
push
mov
fdivs
inc
lods
sub
jg
ljmp
or
insb
dec
aaa
in
xchg
inc
shrb
sub
aaa
push
xor
dec
scas
mov
out
into
pop
movsl
shrl
hlt
out
push
add
xchg
mov
push
add
mov
push
add
xchg
lret
or
sbb
dec
imul
imul
insl
sub
push
jmp
pop
inc
stos
dec
pop
jnp
or
sarl
fldenv
lea
sub
cmpsl
jg
mov
sbb
push
outsb
sub
and
mov
or
mov
inc
fsubl
push
fiadds
jecxz
shll
in
in
lds
or
test
call
lahf
fistpll
sbb
jp
mov
pop
aaa
mov
sbb
pop
sbb
fbstp
pop
cmp
mov
out
aaa
jns
mov
fidivs
jecxz
dec
inc
jp
sub
jae
pop
into
or
jmp
mov
cmp
aaa
jo
dec
sub
or
sbb
test
push
pusha
pop
add
fnstenv
test
xchg
cmp
sarl
push
jne
addr16
mov
mov
into
xor
mov
fwait
scas
test
sti
xor
aaa
mov
jecxz
scas
mov
insb
je
out
lods
fs
xchg
dec
mov
outsl
test
and
jle
mov
popa
in
jl
aaa
fwait
inc
pusha
or
aam
ds
js
cmc
adc
ret
aaa
sub
push
cmp
pop
cmp
mov
popa
add
fildl
arpl
js
inc
jb
xchg
int3
sahf
jmp
mov
push
out
ret
dec
adc
push
fidivs
enter
leave
pop
push
stos
inc
scas
in
cwtl
mov
sti
imul
in
fmuls
jnp
push
xchg
pop
aaa
dec
sbb
int3
mov
push
sbb
push
enter
adc
dec
pop
addr16
mov
push
aaa
cmp
sbb
js
pop
jae
icebp
lcall
and
add
jmp
jecxz
loope
add
xor
sub
insl
addb
out
sbb
mov
ljmp
mov
pop
push
xlat
aas
popa
adc
mov
lock
pop
mov
into
jne
aaa
cmp
and
dec
adc
repnz
aaa
mov
test
pushl
add
pop
pop
in
sti
data16
mov
sub
dec
sahf
mov
dec
data16
iret
imul
dec
sti
mov
movsb
or
pop
enter
les
and
aaa
faddl
cli
add
mov
movl
imul
or
negb
loopne
jge
fistpl
dec
scas
pop
aaa
sbb
inc
inc
xchg
cli
aaa
repz
dec
dec
fidivl
bound
mov
mul
cmpsb
lcall
popf
in
jle
mov
mov
and
lock
jg
aaa
cmp
xor
fwait
daa
push
shll
push
jb
mov
sub
fisttpl
leave
adc
mov
push
cmp
pusha
lods
decb
and
sub
and
scas
into
and
push
aaa
inc
sub
imul
xchg
cld
inc
adc
or
out
test
xchg
push
push
adc
dec
insb
cmp
rorl
cmpsl
js
lret
xchg
orl
dec
pop
mov
add
push
pop
stos
pusha
aaa
rolb
or
mov
pusha
inc
js
push
jbe
mov
adc
insb
repnz
jno
or
jp
ja
and
out
notb
or
loop
push
test
ljmp
ds
aaa
cmpsb
inc
or
xchg
iret
aaa
fwait
sbb
or
add
inc
mov
rol
cmp
push
icebp
dec
test
aaa
jbe
dec
ja
idivl
pop
xchg
and
inc
adc
mov
movsb
inc
stos
aaa
cltd
ljmp
or
sub
aaa
hlt
push
mov
mov
shr
add
cmpsb
aam
movsb
in
dec
rcrl
push
mov
pop
enter
and
repnz
xchg
jp
leave
pop
add
dec
xchg
out
xchg
int
push
aaa
rcr
jge
push
dec
insb
aaa
fwait
pop
test
aaa
clc
adc
push
cltd
icebp
out
aaa
les
or
inc
lea
mov
sbb
xor
inc
aaa
xor
mov
fildll
mov
push
test
and
scas
sbb
stc
mov
faddl
pop
call
pop
mov
movsb
dec
popa
and
aaa
pusha
or
push
jge
jne
aaa
sub
leave
in
shlb
iret
hlt
das
cmp
out
mov
or
loope
cmp
xlat
ss
aaa
mov
bound
cmp
ficompl
jg
cmp
enter
jg
mov
ds
xchg
cmpsb
aaa
call
and
xchg
push
out
and
jl
iret
push
mov
xor
jmp
xchg
fs
adc
cmpsl
int3
loopne
mov
xor
sub
push
mov
pop
test
sbb
aaa
sbb
jae
or
xor
aaa
repz
lods
jnp
adc
aaa
xor
mov
subb
loop
int
shll
mov
jno
ja
loopne
fwait
data16
push
mov
movsb
dec
xlat
pop
aaa
add
rclb
xor
jecxz
sbb
movsb
fildl
sub
pop
lock
inc
cmp
movsl
xlat
push
mov
pop
xorl
jmp
addr16
popa
js
je
in
pushf
das
fcomp
aaa
jo
nop
mov
aas
pop
aaa
addl
xchg
adc
dec
mov
insl
sbb
aaa
mov
mov
aaa
push
or
fstps
xor
repz
test
jecxz
mov
setg
cmpsl
sub
pop
aas
xchg
inc
xor
xchg
dec
dec
mov
add
cmp
aaa
or
adc
dec
cld
aaa
mov
in
adc
add
insl
push
insb
add
sti
aaa
adc
mov
inc
aaa
mov
and
aaa
xorb
mov
jb
xchg
sbb
js
pop
adc
lods
and
std
mov
aaa
stos
adc
add
fs
into
insb
cmpsl
jae
shlb
and
in
mov
xor
mov
arpl
aaa
and
sti
aam
imul
mov
je
das
inc
mov
ret
into
xchg
sbb
push
push
xorl
fwait
in
mov
mov
dec
aaa
nop
jg
mov
rcr
and
lods
jge
and
inc
aam
aaa
rclb
sbb
outsb
and
xchg
cmp
xchg
fdivrs
mov
les
bound
pop
adc
pushf
nop
pop
or
add
cmp
jne
cwtl
ss
cld
rcl
dec
push
test
in
pop
or
in
or
mov
mov
adc
push
adc
aas
mov
aaa
out
add
neg
aaa
sub
ret
mov
jbe
test
sub
dec
push
push
adc
int
popa
cmp
pop
add
xor
cmp
mov
cmpsb
aaa
mov
xorb
inc
xor
and
jg
ds
aas
out
lock
es
cmpb
jno
jmp
mov
rorl
inc
in
pop
aaa
xchg
xor
repz
add
fiadds
ja
fstl
aaa
and
out
test
push
or
cmp
sahf
pop
jno
lret
les
popa
shll
pusha
cmpsl
iret
scas
sub
mov
test
aaa
fs
jno
jb
sub
xorl
mov
shrb
dec
aaa
idivb
mov
aaa
movsb
addr16
inc
test
xor
push
jmp
adc
stos
js
mov
sti
aaa
dec
aad
adc
cmpsb
mov
and
jle
xchg
dec
leave
push
inc
jb
sub
mov
xchg
hlt
les
sub
movsb
ds
data16
aam
fchs
dec
lods
aad
inc
test
aaa
pusha
sbb
jo
adc
sub
mov
lods
arpl
les
inc
fdivrp
mov
and
xchg
jmp
push
push
pop
and
xchg
fldenv
mov
mov
ficompl
mov
mov
cmp
sbb
mov
inc
jns
dec
dec
pop
jge
gs
pand
xchg
sbbl
pop
sub
into
jnp
out
icebp
aaa
mov
ja
orl
sbb
cmc
sub
fstl
jne
and
pop
sbb
repz
jl
push
fcoml
cmpsl
rol
dec
push
cld
cmp
aaa
jmp
inc
push
mov
das
sub
les
or
mov
aaa
and
adc
outsl
sbb
or
ja
data16
jb
mov
subl
pop
stc
push
in
out
or
gs
iret
addl
mov
mov
aaa
xchg
xor
cmp
testl
push
dec
outsl
loop
nop
cli
jmp
and
scas
or
push
pushf
push
mov
or
cltd
and
jecxz
and
mov
aaa
fndisi(8087
inc
and
mov
add
push
cld
out
lahf
aaa
insl
and
or
or
pushf
sahf
sbb
mov
jnp
xchg
mov
cmc
fcom
popa
sub
aaa
and
add
xchg
test
addr16
jno
adc
mov
add
inc
or
cmp
jno
or
push
jmp
icebp
mov
shrl
aas
aaa
and
and
imul
insb
and
pop
lret
cmc
sti
push
push
jb
aaa
out
cmp
sub
fcom
popf
rorb
add
mov
pop
popa
hlt
in
sub
loope
aaa
jnp
sub
into
add
aaa
mov
fimuls
imul
aam
sbb
push
cs
pop
and
cmp
aaa
adc
push
xorl
inc
loop
sbb
mov
rep
mov
fwait
dec
mov
sti
jge
ficompl
ficomps
pop
mov
jle
push
test
ja
fucomi
jno
pushf
mov
movsl
ja
mov
pusha
xchg
shr
aaa
xchg
pop
add
aaa
lds
inc
je
in
clc
add
sbb
ss
or
fimuls
repz
in
mov
shll
idiv
or
mov
addr16
mov
and
out
insb
sub
loopne
aaa
aas
test
cltd
shlb
aaa
push
ret
cld
popf
and
aaa
xchg
or
in
or
inc
loope
pop
mov
push
popa
sub
xor
mov
insb
test
nop
adc
fdivl
and
inc
xor
adc
cltd
jne
inc
lea
popf
dec
or
nop
out
rorb
mov
fwait
and
xchg
out
aaa
loopne
aad
mov
fdivs
pushf
adc
shrl
push
ljmp
not
les
jp
pop
xchg
aaa
pop
and
and
fwait
cmpsl
add
sahf
jecxz
pop
imul
test
daa
dec
addr16
and
insl
mov
in
jae
sub
push
lods
sti
aaa
or
pop
jo
push
sbb
and
pop
sahf
fimuls
jb
aad
aam
xchg
mov
sbb
adc
movsb
and
int
mov
lahf
insb
pop
xchg
mov
adc
stc
data16
imul
xchg
imull
lods
or
ret
cld
insl
mov
shll
fistpl
dec
push
aaa
and
pop
into
test
ror
aaa
fcomps
loope
out
xor
add
adc
orl
sub
andl
call
rcll
es
loopne
aaa
jmp
mov
test
shrl
xchg
adc
das
jmp
dec
mov
nop
sbb
loope
cli
mov
filds
iret
jb
mov
mov
xchg
jp
and
aaa
movsl
ret
sbb
paddsw
jmp
cwtl
cmp
cmpsb
or
cmc
mov
les
push
scas
mov
push
xlat
pop
mov
cmpsb
dec
jne
adc
inc
aaa
sbb
sti
ja
mov
aas
test
pop
cmpsl
aaa
xchg
je
and
adc
repz
jecxz
arpl
mov
hlt
cmp
lods
outsb
sub
xor
mov
in
add
aaa
out
pop
sbb
daa
pop
push
mov
mov
mov
push
je
fidivl
pop
daa
bound
andb
cmp
and
sahf
outsb
inc
aaa
push
lcall
aaa
mov
dec
lods
push
add
inc
psubsb
stc
and
outsb
push
fisttps
lcall
mov
jg
daa
or
lcall
xor
cmp
pusha
sub
xchg
lock
push
cmpsl
test
push
lahf
sub
dec
sbb
push
jo
je
mov
lea
adc
xchg
mov
mov
sbb
imul
and
cld
push
les
xchg
mov
in
adc
aaa
ljmp
clc
aaa
daa
pop
idivb
aaa
jno
lcall
jp
add
mov
loop
push
pop
sbb
mov
aaa
or
lock
mov
inc
std
cmp
inc
je
mov
out
out
adc
fcompl
into
das
das
jbe
mov
je
leave
ret
mov
jge
shrb
insb
add
pop
aad
js
add
out
or
shl
psllw
insb
flds
adc
clc
xorl
add
lock
sbb
mov
in
das
jns
es
out
outsl
out
cmp
aaa
adc
fnstenv
lea
loopne
or
add
repnz
in
cltd
aaa
jmp
sub
movsl
xchg
jno
add
xchg
repnz
mov
add
pop
mov
out
add
outsb
les
leave
mov
out
test
fdivr
aaa
sahf
in
xchg
loopne
mov
sbb
lods
pop
fxch
jmp
das
cmp
sbb
push
adc
ss
push
pop
jne
subb
aaa
pop
outsl
cltd
sahf
dec
xchg
pop
mov
xchg
jge
cld
pushf
andl
mov
push
insl
outsl
aaa
xchg
fs
lock
sub
ds
pop
out
pop
or
jns
add
testl
ss
push
xchg
cs
jae
bound
or
mov
sbb
jl
call
and
xchg
fimuls
fwait
xchg
sbb
xlat
mov
adc
aaa
mov
jle
mov
add
jo
xor
dec
cltd
outsl
sub
and
aaa
mov
shll
xor
popa
mov
pop
scas
aaa
cli
out
and
gs
out
in
das
out
mov
cwtl
aaa
mov
push
out
dec
hlt
add
imull
mov
aaa
out
add
xor
and
aaa
ret
mov
push
rolb
lods
xchg
aaa
adc
test
pop
int3
add
mov
sbb
movsl
jbe
cmp
cwtl
inc
mov
aaa
add
sbb
ss
int3
aaa
imulb
xor
rolb
pop
aaa
out
aas
mov
aaa
mov
mov
aaa
mov
and
xor
sarb
cld
sbb
mov
lret
mov
push
aaa
and
cmp
inc
aas
lods
ja
push
clc
ljmp
sub
test
aaa
ja
test
and
and
add
mov
outsl
aad
jno
cmp
add
test
cltd
jae
out
add
or
cmp
ss
xchg
leave
pop
clc
in
aaa
dec
jl
jb
mov
imull
std
aaa
fcom
rcl
pop
jle
movsb
aaa
ret
add
sbb
lods
cmp
js
dec
testb
mov
ret
mov
fimuls
adc
into
or
xchg
lret
mov
imul
fsubs
mov
popa
adc
mov
lcall
and
rcr
cmp
je
pop
xlat
int
shlb
xor
rolb
xchg
jge
hlt
ljmp
iret
aaa
aam
cmp
aaa
push
and
cld
fnsave
out
ja
nop
ret
enter
cmp
repz
test
repnz
cwtl
ss
cmc
push
jno
imul
xchg
fisubrs
pop
jecxz
sbb
mov
arpl
sub
mov
mov
mov
loop
aaa
jbe
out
icebp
push
mov
xorps
xchg
shlb
mov
mov
dec
pop
test
xor
push
aaa
mov
add
adc
negl
pop
xor
ja
jge
aaa
inc
les
and
adc
push
xchg
pop
mov
adc
inc
mov
insl
repz
push
push
xor
push
and
fstl
bound
cltd
adc
mov
psllq
call
xlat
iret
aaa
lods
test
jecxz
inc
test
out
andb
bound
out
jmp
mov
bswap
adc
cmp
push
daa
insb
lods
aaa
cmp
int3
ds
aaa
int
rclb
lahf
mov
dec
sti
ds
cmpsl
aaa
mov
lret
insl
adc
cmpl
or
mov
jbe
jbe
stos
xchg
lret
pop
enter
jmp
imul
add
mov
notl
outsb
sarb
mov
jp
cltd
pushf
cmp
jae
mov
fimull
mov
stc
aaa
adc
insl
fdivl
dec
mov
fstpt
lret
imul
pop
mov
imul
cmpsb
fs
es
adc
in
pop
jne
cmc
mov
jns
lock
push
pop
andl
int
arpl
aaa
mov
rcrl
ds
sub
mov
out
sbb
sub
push
sbb
add
xor
mov
rol
sbb
mov
rolb
pop
icebp
or
cmp
addb
inc
imul
adc
mov
sarl
pushf
sarl
aaa
sub
sarb
sbb
add
adc
add
pop
cmpsb
inc
mov
xchg
imul
fstpt
imul
insb
orl
lods
push
daa
aaa
fisubs
adc
mov
pop
push
dec
insb
dec
inc
push
lock
popf
mov
inc
inc
jbe
mov
lods
cmp
xchg
out
sbb
mov
xchg
rcr
inc
mov
sub
and
movsb
mov
shl
push
scas
aaa
jl
sbb
test
fsubl
ja
ss
xor
les
sub
aas
mov
call
push
cmpsb
movsl
mov
aaa
lds
out
sbb
mov
stos
aaa
iret
sbb
aam
aaa
ret
lret
push
decb
loopne
xchg
xlat
xchg
insb
fsub
pop
sub
out
lahf
aaa
ret
in
xchg
popf
dec
lea
aas
dec
mov
push
push
outsb
xor
test
aaa
adc
test
mov
xchg
aad
aaa
sbb
pusha
push
stos
scas
dec
push
aaa
mov
mov
and
xor
aaa
xlat
idiv
push
adc
aaa
cmpl
mov
sbbl
mov
aaa
dec
mov
aaa
popa
dec
cmp
xchg
stos
mov
mov
cld
xor
mov
ss
push
mov
sarl
mov
test
jmp
xchg
jns
pop
int
xchg
xchg
pmaxsw
jle
ja
enter
fidivrs
xorl
cmpl
pop
inc
push
add
xor
enter
inc
and
mov
sbb
cmp
pop
je
xchg
push
pop
pop
jg
pop
mov
cmp
dec
jae
and
add
ret
add
adc
lods
jae
push
inc
sbb
sub
mov
fprem
movsb
jo
inc
mov
loopne
cmp
adc
jl
stos
out
adc
dec
or
jle
cmp
jae
sbb
and
xchg
inc
mov
scas
aaa
icebp
pop
mov
jnp
mov
js
stos
inc
mulb
mov
aaa
or
rcrl
adc
mov
and
jge
push
xorb
inc
pop
push
inc
les
push
sub
pop
aaa
sbb
lcall
add
scas
fildl
xor
leave
js
stos
add
aaa
je
inc
call
aaa
and
mov
cmpsb
add
lret
sbb
ss
xor
xchg
divl
loopne
cli
jne
shrb
hlt
je
pop
jmp
fstpt
ljmp
gs
aad
push
aaa
andl
xor
pop
push
pusha
or
stos
lds
xchg
scas
aaa
pop
sahf
cli
push
adc
jge
sub
mov
adc
cli
mov
hlt
adc
add
fmuls
push
xchg
aas
or
adc
or
shll
dec
pop
mov
push
dec
aaa
mov
cld
xor
mov
aaa
push
ss
jo
push
add
dec
loop
jmp
mov
hlt
pop
or
lcall
out
sbb
xchg
cmp
cltd
ret
loopne
fidivl
xor
jecxz
or
je
mov
movsb
nop
mov
xchg
testl
mov
mov
fimull
and
aaa
mov
push
inc
sbb
movsl
je
pusha
pop
cmpl
mov
sbb
aaa
pop
mov
jns
push
stos
xchg
stos
cmpsl
xchg
adc
sub
fcompl
ljmp
cmp
cwtl
cmp
adc
cmpsl
lock
cmp
mov
or
sbb
fstl
or
ss
aaa
pop
mov
ffree
aaa
cs
scas
add
fxch
aaa
mov
mov
push
imul
mov
lret
add
inc
mov
xchg
jne
and
inc
adc
fnstenv
dec
mov
sub
scas
mov
mov
lock
mov
bound
and
icebp
cld
cmpsl
les
inc
sub
loopne
push
pushf
fsubrs
mov
imul
dec
jbe
out
xchg
cwtl
unpckhps
jp
les
push
push
jnp
jne
fst
push
bts
fwait
mov
lods
enter
clc
mov
es
sub
out
cli
nop
adc
sub
pop
clc
loopne
xchg
loope
adc
mov
mov
out
inc
cli
dec
jne
out
xchg
jecxz
dec
and
and
std
cmp
xor
insb
cmp
mov
jae
repnz
push
jns
adc
pop
xchg
popa
pop
dec
add
fldt
repnz
ds
testl
lods
push
aaa
sub
bnd
outsl
mov
dec
test
js
fadds
mov
push
aaa
repz
xchg
inc
decl
mov
aaa
xchg
lods
dec
arpl
aaa
adc
movsb
andb
aaa
aam
adc
shll
mov
lds
dec
daa
sbb
clc
das
jno
aaa
test
mov
stos
psrlq
std
sbbl
loopne
fs
aam
jge
arpl
negl
add
jle
ss
cmp
ficompl
xlat
inc
push
inc
ds
rcll
in
sti
aaa
mov
xchg
fadds
aaa
xchg
int
jmp
aaa
xor
repz
test
cmp
adc
scas
xor
or
aaa
int3
mov
push
aaa
pop
aam
xchg
and
fs
aaa
out
jge
or
jle
push
jge
divl
cmc
insb
and
fwait
jle
fildll
pop
sahf
fucomp
push
adc
movsl
or
jmp
notl
addr16
xchg
clc
cli
mov
push
test
and
and
inc
mov
push
add
xchg
xlat
mov
cmp
mov
scas
mov
std
mov
aaa
inc
sahf
xor
rorl
popf
lods
inc
mov
jmp
dec
movsb
or
int
push
xchg
outsl
out
mov
cmpsl
pop
aaa
dec
loope
int3
cs
mov
shl
push
mov
mov
inc
mov
mov
lahf
inc
push
js
pushf
arpl
cmc
lods
aaa
enter
aas
pop
mov
sub
and
sub
aaa
jno
test
into
stos
fs
fisubl
je
cli
cmp
in
push
loopne
push
aaa
sbb
fyl2xp1
pop
pushf
xchg
shrb
adc
dec
cmc
or
cs
sub
inc
fnstsw
xchg
add
adc
insb
xchg
out
mov
cmp
in
mov
dec
xchg
add
stc
mov
cmp
mov
fisubrs
aam
xlat
pushf
ja
jl
cmp
repnz
lock
test
mov
jb
sbb
leave
mov
cmp
push
insl
ret
sarb
wrmsr
fadds
cmp
out
mov
leave
js
dec
lock
aaa
adc
in
xorl
loop
push
mov
inc
psubw
lahf
aaa
test
pop
mov
xlat
fdivl
aad
mov
dec
dec
mov
add
lea
jmp
cmp
mov
pusha
mov
mov
add
add
dec
mov
mov
icebp
xor
pop
dec
aad
sub
mov
mov
sbb
jnp
addr16
aaa
sbb
fwait
pop
add
aaa
mov
jne
inc
addl
jne
mov
lret
sub
pop
aaa
mov
mov
out
sbb
insl
aaa
and
xor
cld
xor
mov
and
loopne
insl
jle
xchg
insb
sub
dec
mov
in
test
js
sti
lahf
or
jecxz
popa
mov
mov
and
repz
push
aam
xor
cld
add
in
add
cmpsl
ss
aam
mov
mov
xchg
sahf
inc
adc
int3
mov
stos
jo
inc
aaa
addr16
sub
mov
pop
jb
push
jl
aaa
into
sbbb
aaa
scas
xchg
imul
dec
enter
pusha
pop
dec
pmulhuw
mov
jmp
and
mov
data16
movsb
aaa
ja
rorl
cmp
out
pop
xchg
xor
sbb
or
mov
xor
clc
sub
in
adc
notl
shr
push
dec
pop
mov
nop
pop
cmpsb
aaa
add
adc
cmp
lahf
sub
or
xchg
aaa
add
addr16
sub
jl
mov
mov
es
xor
aaa
mov
xlat
inc
sti
or
jmp
dec
fists
aaa
lods
or
fcoml
sub
inc
cmc
cmp
aaa
and
sbb
fs
mov
repnz
aam
je
in
mov
aaa
ss
mov
xchg
jno
lret
inc
stos
jae
push
inc
clc
xchg
jl
cwtl
or
pop
out
rclb
iret
pop
sub
xchg
aaa
in
cmp
xchg
aaa
out
stos
cmp
idivl
lods
xor
aas
inc
jne
outsl
adc
adc
cmc
lea
add
stos
divl
cmp
lds
xchg
mov
jl
mov
dec
push
aaa
cmpl
lcall
pusha
pushf
aaa
push
inc
mov
fistps
int3
in
lahf
aaa
gs
mov
push
mov
loop
jnp
inc
arpl
lahf
imul
push
or
add
jge
lret
inc
cwtl
push
shll
das
outsl
ja
xorl
aaa
rcrb
adc
lods
xlat
es
aaa
jae
je
push
jl
or
aaa
into
mov
xchg
cltd
push
sahf
aaa
push
add
cld
daa
xor
in
jo
adcb
mov
adc
and
cmp
in
roll
imul
or
testl
pcmpeqd
push
mov
out
add
push
lahf
loope
inc
stos
stc
xor
mov
push
xchg
aaa
int3
xor
mov
stos
test
fnstsw
lods
mov
push
insb
inc
inc
jae
add
sub
js
mov
sub
adc
faddl
mov
int3
iret
pop
in
xor
aaa
sahf
ja
adc
icebp
and
pop
mov
imull
jns
outsl
or
sub
aaa
sub
sbb
xor
lahf
push
aaa
movsb
xchg
sbb
mul
push
nop
sbb
and
cmp
aas
jno
fidivl
mov
sti
inc
push
pop
mov
loop
aaa
aad
push
ja
outsb
pop
add
imul
adc
mov
add
pushf
and
mov
cmpsl
push
aaa
in
into
pop
xchg
jl
cwtl
shlb
mov
cs
mov
mov
dec
add
mov
outsb
pop
lock
stc
arpl
xor
pop
aaa
das
repnz
lret
popa
jno
sbb
add
pusha
arpl
cmp
mov
mov
dec
aaa
pusha
mov
es
dec
aaa
sbb
jbe
sub
int
sub
mov
arpl
pop
push
popa
iret
cmp
aaa
xor
and
adc
jb
lret
xor
aaa
je
adcb
lcall
inc
add
out
outsb
js
gs
leave
aaa
adc
xchg
cmp
mov
mov
and
sub
test
aaa
movsb
mov
mov
xor
pop
inc
insl
xorl
jecxz
dec
cmpsl
xor
fsts
cli
adc
lret
mov
in
and
in
imul
popf
mov
jbe
cmp
aaa
scas
faddl
repnz
pop
or
xor
jno
clc
mov
adc
imull
mov
push
pop
or
popa
mov
aaa
fisubrs
inc
aaa
jl
adc
stc
inc
mov
aaa
test
iret
adc
lret
loop
test
test
xchg
aaa
pop
add
into
aaa
shl
lret
add
fldcw
roll
mov
add
mov
aaa
pop
adcl
loop
pop
int
imul
lds
or
mov
push
sub
aas
cmp
jp
ror
insb
test
aaa
mov
adcl
xchg
inc
xor
cs
sbb
xor
push
lret
xchg
jne
mov
fxch
aaa
sub
les
inc
aaa
add
jno
mov
lcall
push
sbb
lret
out
mov
stos
or
movsl
sub
ret
pop
and
notb
inc
adc
aaa
mov
jecxz
outsl
repnz
pop
fldenv
ret
fwait
divb
dec
or
mov
mov
aaa
lds
outsb
pop
xchg
out
mov
xchg
mov
fdivl
sbb
cmp
sub
hlt
cmp
clc
aaa
xor
cltd
sub
adc
push
mov
mov
lret
mov
aaa
and
mov
mov
cmp
xchg
mov
clc
out
aaa
mov
mov
inc
lar
movsl
fcomp
mov
fadd
lock
insl
in
nop
gs
jg
pop
pop
and
in
cmp
adc
mov
mov
mov
int
divb
call
xor
outsb
es
das
mov
incb
pop
pop
inc
rorb
imul
push
ret
mov
ds
mov
js
out
bound
aaa
daa
cmp
dec
push
sbb
xchg
add
or
in
aaa
xor
adc
sti
mov
lcall
cmp
push
popa
mov
arpl
orps
jp
and
push
dec
test
jbe
jge
add
int3
rcrl
test
jae
mov
popf
push
aaa
mov
jmp
jl
mov
or
in
std
or
mov
mov
xchg
xor
sbb
sub
rcr
pop
ss
insl
mov
loopne
adc
fimuls
pusha
cmp
xor
aaa
mov
sub
cmp
push
cmp
fstpt
popa
cmpsl
in
cs
dec
arpl
je
aaa
add
inc
repnz
hlt
xchg
push
fmul
sub
sarl
mov
push
adcl
bound
in
aas
xchg
pusha
aaa
mov
push
enter
aaa
xor
hlt
rolb
icebp
aam
adc
lock
xchg
sahf
pusha
clc
call
aaa
fs
insl
fldt
mov
int
outsb
aaa
push
xchg
dec
xchg
movsb
aaa
cmp
or
aaa
dec
xchg
pop
lods
pop
pop
lods
aaa
pop
fisttps
aad
mov
fnsave
in
aam
test
jg
lret
sub
push
mov
scas
int
cli
mov
clc
aaa
xor
imul
aam
jp
arpl
movsb
push
aaa
xchg
fidivs
xor
rol
jge
and
mov
adc
aaa
inc
repnz
bound
jp
jmp
enter
fdivl
mov
mov
call
inc
add
and
test
and
fistpll
das
movl
xor
mov
inc
sub
stos
or
pop
test
shl
or
xor
fcoml
stos
xchg
fldenv
enter
adc
scas
ja
gs
je
xchg
xchg
imul
aaa
fs
ret
rcr
or
and
push
dec
iret
fsubrs
push
cmp
stos
pop
fs
xor
cmpsl
adc
inc
daa
cmp
shl
mov
mov
cmpsl
in
sbb
fiadds
pusha
aaa
out
xchg
mov
ja
push
je
mov
repz
mov
insl
push
xchg
cli
mov
out
idiv
pusha
int
stos
setl
sub
mov
push
shlb
or
mov
push
xchg
mov
aaa
xchg
ds
aad
sub
lock
xor
adc
dec
jmp
cmp
das
mov
das
in
fidivs
push
xchg
clc
cwtl
sub
insb
mov
sub
xor
sub
mov
mov
xor
addr16
test
data16
push
xchg
outsl
xchg
das
arpl
rcpps
sub
sbb
popa
aaa
in
imul
cvtps2pi
or
aas
popf
or
out
mov
xor
sbb
rcrb
leave
mov
add
xor
cmp
mov
cwtl
fisubrl
mov
xchg
ljmp
cmpsl
adc
jmp
or
scas
test
aas
add
mov
iret
adc
jne
jne
cmp
hlt
cmp
ja
aaa
daa
insb
lods
mov
aaa
out
pusha
jae,pt
aaa
and
mov
push
in
sahf
aaa
xchg
lahf
sti
mov
adc
stc
lods
cmc
or
mov
sbb
mov
js
clc
cmp
or
call
adcb
lock
ss
pop
aaa
add
aam
aaa
mov
xlat
pop
xchg
mov
cmpsl
jge
pop
or
das
dec
mov
push
sahf
cmp
aaa
and
cld
repz
jmp
cmpsb
push
out
xlat
xchg
aaa
rcrb
decb
sub
pop
jae
sub
cltd
ja
cmp
fnsave
leave
fsubrl
jecxz
out
pop
or
jne
xlat
lods
lock
push
xor
mov
shll
pop
mov
pop
xor
jnp
imul
lds
popa
movb
sub
xchg
mov
aaa
jecxz
dec
js
out
test
into
clc
dec
add
fcom
mov
es
daa
je
push
cmp
xchg
mov
adc
push
sahf
aam
icebp
cmp
pop
cmp
fsubl
mov
es
dec
cmp
mov
mov
cltd
dec
fnstsw
aaa
xchg
pop
cs
ljmp
xlat
xchg
xchg
sti
pop
aaa
dec
pop
movsl
push
lds
and
push
repz
inc
sub
imul
rcrb
shll
cmp
add
ficoms
mov
push
cmpsl
mov
das
adc
push
cli
xchg
rorb
cld
and
add
mov
dec
mov
sarl
xchg
ljmp
outsl
bound
mov
fxam
shlb
scas
lock
mov
aaa
scas
pop
ret
and
lods
sbb
fdivs
sbb
out
fimull
mov
mov
dec
or
out
mov
and
aaa
pop
and
mov
jle
sbb
adc
dec
adc
jae
idivb
push
aas
js
mov
test
inc
push
cld
sub
neg
adc
or
pop
xlat
aaa
mov
outsb
rcr
adc
mov
inc
cmp
aaa
ljmp
dec
aaa
pop
add
sbbl
shlb
add
loope
dec
test
fimuls
iret
xchg
loop
inc
dec
dec
out
sarb
repnz
shl
aaa
es
xor
add
sbb
add
das
sub
sbb
je
mov
cli
aaa
jg
in
mov
jge
je
imul
mov
loope
lret
cmp
jge
mov
jo
stc
lds
jbe
pop
aaa
sbb
negl
aaa
iret
out
pushf
ljmp
adc
xlat
aaa
les
add
dec
push
jae
sbb
adc
arpl
mov
xchg
mov
cmp
cmpb
fwait
out
adc
xor
mov
int
sbb
jge,pn
dec
aaa
pop
in
jle
cmp
gs
dec
rolb
push
pop
mov
fsub
aaa
push
xchg
mov
es
dec
std
pushl
imul
adc
scas
aaa
fistpl
mov
loop
jecxz
mov
aas
test
into
xchg
mov
mov
insl
cmp
mov
out
inc
sub
aaa
pop
or
adc
data16
cmp
cmp
negl
dec
lcall
adc
pop
sbb
je
lcall
fisubrl
pop
into
aaa
sub
xchg
xchg
repnz
aaa
loopne
xchg
sbb
aas
add
or
das
inc
xchg
mov
sti
lcall
push
xchg
std
push
jge
lret
lods
or
mov
or
sub
jmp
sarl
fnsave
sti
xchg
ja
fwait
adc
or
aaa
sbbl
mov
lods
enter
int3
push
shrl
and
aam
shl
aaa
lahf
lret
inc
insb
insl
jge
cld
cltd
aaa
mov
inc
shlb
aaa
jb
movsb
jge
xlat
mov
sub
xchg
pushf
lods
push
bswap
inc
sub
int3
pop
aaa
cmp
xor
imul
adc
repz
mov
cli
mov
jbe
enter
push
aaa
ljmp
jg
push
fistl
or
sub
and
add
cmp
scas
ds
sarl
push
fwait
sbb
lret
cmc
imul
sbb
pop
jbe
out
je
mov
aaa
ret
mov
mov
or
into
and
push
insb
hlt
aaa
add
cmp
aaa
aas
bound
cmp
inc
and
and
aaa
loope
int
jp
fs
sub
out
sbb
jno
aaa
push
push
outsb
lahf
push
push
dec
clc
aaa
mov
imul
aaa
xor
sbb
push
bound
aaa
sahf
aam
push
jns
mov
sub
dec
xchg
pop
cmc
and
and
fs
dec
scas
cmpsb
cmpl
sbb
jmp
mov
repnz
jnp
push
ja
push
mov
ret
out
fwait
lret
mov
cmpsl
call
popf
roll
fsubp
xchg
pop
imul
cmpl
popa
cmp
inc
insl
test
mov
mov
adc
aaa
lcall
mov
out
shlb
add
cmp
nop
adc
mov
add
mov
add
cli
aaa
and
gs
aaa
pushf
std
xor
les
adc
in
sbb
aaa
and
push
clc
sbb
outsb
cltd
or
out
js
sub
cmp
inc
jle
push
and
sub
insl
dec
jb
divb
and
cmpsl
lahf
pop
aaa
sub
cs
cs
aaa
insl
insb
daa
test
aaa
sub
sub
int3
aad
adc
stos
aaa
imul
cmpsb
sub
icebp
sbb
jg
inc
pop
fdivp
add
mov
sahf
mov
sub
test
aaa
in
clc
cmp
ss
and
sub
lods
aaa
cmp
jbe
xchg
aaa
shrb
movsb
aaa
mov
inc
cli
push
stc
gs
cwtl
adc
push
xchg
mov
aaa
jo
mov
in
cmp
sub
inc
ljmp
sbb
aaa
cmp
testl
cmp
push
les
cli
movsb
jl
cmc
imul
aaa
xchg
dec
mov
dec
aaa
fincstp
lods
movsl
cmp
inc
inc
aaa
dec
out
mov
js
bound
aaa
stos
shl
aam
into
sub
inc
lods
in
lock
out
scas
out
aas
mov
sbb
add
loopne
push
fdivs
ds
std
fwait
push
aaa
movsb
dec
sti
loopne
add
fwait
jnp
xchg
fadds
aaa
test
push
push
or
mov
lret
inc
xor
lods
out
adc
inc
adc
inc
pop
pop
cmp
jns
and
push
dec
dec
iret
dec
jmp
mov
mov
sub
mov
push
push
aaa
enter
inc
jl
adcl
fidivl
cmp
rcrb
test
fdiv
shrl
jmp
out
mov
aaa
pop
clc
cld
jbe
mov
push
repz
cmp
add
cmpsl
movsl
push
pop
scas
jl
mov
dec
aaa
rclb
dec
pushf
aaa
xor
imul
in
jmp
ljmp
mov
out
lahf
sub
or
mov
loopne
cmc
xor
aaa
shlb
mov
ja
cli
fs
push
cwtl
adc
add
pop
aaa
mov
in
gs
jne
andb
cmp
jnp
xlat
pop
push
aaa
in
dec
sub
cmpsb
hlt
jg
mov
push
int3
mov
push
push
jno
aaa
iret
ficompl
nop
xchg
gs
out
rolb
adc
fwait
imul
aaa
sti
lahf
xlat
cmpsb
push
jl
in
pushf
repnz
out
aaa
es
aaa
jbe
dec
and
das
xor
push
push
pop
xor
or
cmp
push
mov
sub
aaa
push
sarl
and
push
aaa
out
sbb
fstl
mov
int3
pop
mov
dec
fidivrl
dec
or
mov
aaa
sbb
ret
sbb
dec
jne,pt
pop
add
hlt
aaa
fcompl
stc
pop
addr16
or
sub
jne
xchg
mov
and
ds
pop
inc
inc
in
pop
aaa
adc
insl
lods
test
sarb
push
sub
insb
es
sbb
push
jns
xchg
dec
jo
pop
ss
popa
mov
adc
ret
cmpsb
jae
push
iret
dec
dec
inc
mov
fmul
jnp
fidivs
cmp
adc
mov
sti
push
out
aad
lcall
push
test
adc
ffreep
aaa
cmp
bound
in
jmp
pop
aaa
sub
aad
adc
and
rol
fs
or
xchg
xor
aaa
das
in
or
test
jecxz
xor
xchg
push
jnp
ss
mulb
jmp
add
aad
pop
add
repz
mov
lret
push
dec
test
cmp
not
mov
and
ret
or
movsl
jl
out
sbb
cwtl
xchg
xor
sahf
push
int
mov
xchg
cltd
stos
cmp
adc
cli
mov
sub
nop
pop
aad
pop
sarl
imul
loopne
imul
jne
in
aaa
push
inc
dec
mov
mov
inc
shr
xor
hlt
in
imul
std
imul
and
mov
xchg
add
mov
int
cmp
sti
aaa
ret
dec
pop
popf
outsl
out
and
aaa
pusha
out
xchg
mov
jbe
shll
xlat
hlt
loopne
ret
cmc
pop
add
and
dec
jecxz
dec
inc
fisubs
lock
push
cmpsb
xor
sub
mov
jne
mov
sbb
mov
adc
xor
out
mov
add
push
and
mov
leave
ret
insb
xchg
mov
ja
lcall
dec
xor
test
cmp
aaa
jb
rcll
orb
stos
push
push
jge
mov
mov
push
arpl
lret
xchg
aaa
data16
sbb
es
in
jb
lds
shll
mov
sub
clc
mov
aaa
fcomps
pop
dec
aas
test
aaa
mov
jbe
xor
mov
iret
mov
adc
aaa
dec
insl
inc
push
push
pop
notb
lods
xorl
pop
push
in
lock
jb
hlt
ret
cld
mov
pop
cmp
xorl
mov
xchg
jns
int
fs
xchg
imul
aaa
cld
jb
jae
cmp
cmp
les
inc
sub
aaa
das
inc
je
psubsw
sbb
aaa
jecxz
cmp
cs
mov
shrl
cmc
aaa
push
push
cmpb
inc
aaa
mov
loope
sub
cmpsl
aaa
notl
xchg
push
push
test
sbbb
aaa
andl
popf
mov
xchg
insb
js
aaa
jge
fsts
xor
xchg
std
les
push
aad
or
lret
push
cmpsl
je
insl
sbb
aaa
insb
push
in
xor
mov
and
cmp
mov
fmull
test
push
cmpsl
outsl
adc
xchg
aam
jbe
ret
aaa
sub
dec
mov
lahf
jecxz
jns
xchg
push
rcll
aaa
fiadds
jbe
in
inc
fwait
aaa
daa
icebp
xor
adc
mov
shll
aaa
mov
adc
out
adc
push
test
js
cmp
fisubrs
mov
xor
in
std
popa
lock
mov
sub
arpl
aaa
movsb
xchg
mov
jge
mov
add
xlat
fcomps
scas
mov
pop
scas
aaa
xor
in
and
cmp
aaa
imul
outsb
aaa
cli
xchg
xor
les
mov
call
jbe
sbb
push
push
pop
jge
push
adcl
xchg
lcall
mov
stos
cs
and
subps
adc
clc
out
pop
push
inc
add
out
xorb
inc
sbb
aaa
loopne
and
xchg
aaa
call
jl
or
inc
aaa
fnstcw
and
dec
pop
test
mov
aaa
xchg
divb
mov
xlat
inc
outsb
inc
test
pushf
aaa
pop
enter
test
add
adc
push
in
xchg
idivb
aaa
repnz
sub
pop
les
dec
bound
inc
aaa
jo
into
cltd
lret
add
mov
mov
aaa
mov
pusha
nop
scas
mov
sub
fsubrp
xor
xor
in
femms
out
pusha
and
les
adc
add
insb
imul
mov
sub
es
into
icebp
jl
or
and
nop
xor
cmp
dec
test
xchg
insl
cmp
or
sub
cld
mov
or
cltd
das
enter
xchg
daa
or
xor
iret
and
aaa
fisttpl
rolb
pop
aaa
sub
sub
xor
sbb
inc
sub
je
mov
lcall
push
or
mov
mov
clc
aaa
push
pop
add
mov
aas
ss
cmpsb
mov
movsl
enter
sub
inc
mov
sub
xchg
aaa
and
mov
mov
inc
cmpsb
pop
or
icebp
adc
jno
in
or
outsb
sbb
cmp
sub
cmp
outsl
and
xor
aaa
cwtl
cld
cli
gs
dec
adc
mov
jp
add
adc
push
movsl
mov
aaa
cmp
jl
sbb
test
mov
inc
lods
pop
inc
fs
arpl
xlat
sub
sbbb
insl
mov
out
stc
je
out
int3
xchg
aaa
aas
jmp
fildl
add
sbb
mov
sahf
xchg
scas
inc
pop
pop
push
sub
mov
pop
xchg
sbb
mov
adc
rorb
aaa
cltd
daa
and
lahf
push
aam
cmp
or
mov
ss
cmpsb
xchg
jb
xor
aaa
pop
les
cmp
and
push
cltd
leave
cmp
es
or
xchg
mov
roll
or
in
movl
sub
fldl
mov
data16
inc
aaa
xchg
pop
in
push
jb
in
pop
dec
test
ret
test
jmp
lods
mov
aaa
pop
hlt
sahf
inc
incb
push
cmp
sub
fsts
loop
rcrl
hlt
xchg
mov
data16
leave
add
adc
jp
jne
aaa
lods
sub
push
xchg
jnp
adc
push
rcll
sub
cmp
in
adc
call
push
cmpsb
pop
stos
test
pop
sahf
out
cli
xchg
dec
mov
movsl
js
xchg
inc
arpl
aad
sti
adcl
cltd
scas
mov
jl
sbb
cmp
aaa
outsb
and
lds
mov
setns
or
sbb
add
fdivrl
cmp
das
xchg
iret
aaa
ret
add
sub
rorb
jmp
mov
jne
mov
push
xchg
loope
jle
mov
int3
sub
ss
or
and
call
and
cmp
pop
mov
mov
inc
inc
aaa
jmp
fsubrl
aaa
out
mov
lcall
pop
jo
xchg
xchg
mov
mov
sub
aaa
inc
in
incb
cmpsl
sti
push
pop
mov
jae
mov
xor
movsb
sbb
aaa
sahf
ja
add
xchg
aaa
inc
push
dec
cltd
sbb
jge
aaa
popa
and
jp
ret
aaa
jle
je
add
aad
mov
pop
inc
fnsave
jp
inc
fcompl
sub
aaa
xor
jle
xchg
addb
popf
cmp
pop
ja
fcomps
adc
inc
add
mov
decb
aaa
pop
add
mov
je
pop
and
cmp
xchg
movsb
aas
push
in
sti
or
lods
frstor
fsub
mov
pop
mov
imul
dec
movsl
push
adc
leave
testb
push
pusha
std
aaa
add
cmpsb
aaa
in
push
sar
mov
pop
mov
mov
adc
xlat
adc
jecxz
or
and
add
push
push
out
lods
inc
cmp
sub
or
aaa
or
imul
fcompl
sbb
fildll
jbe
inc
out
popf
ljmp
ret
inc
hlt
mov
loopne
mov
cmp
mov
inc
pop
adc
into
lods
push
mov
xchg
sbb
aaa
shlb
jge
jecxz
adc
mov
mov
push
mov
sub
inc
dec
mov
lahf
pushl
xchg
push
jle
aam
shlb
mov
popa
fdiv
jb
pop
mov
add
adc
int
inc
xorb
mov
aaa
ljmp
imul
jb
aaa
push
lods
repnz
aaa
xor
sbb
jno
adc
xchg
add
div
sarl
aaa
fdivrl
scas
sahf
seto
push
adc
test
jnp
ss
nop
push
divb
addr16
out
aaa
mov
daa
cltd
xorl
shrl
sub
aaa
xchg
rcrl
insb
inc
je
fdivrs
aaa
scas
bound
mov
fsubrl
int
js
aaa
cmp
xor
xchg
and
cwtl
in
mov
nop
or
ja
in
pop
leave
sbb
mov
sbb
test
aaa
jb
and
andl
mov
adc
test
xchg
and
aaa
mov
mov
inc
cmp
jns
push
js
mov
aaa
inc
jl
mov
insl
or
aaa
out
cmp
nop
popa
lods
sbb
movsb
jno
subb
fwait
daa
popf
push
jge
xor
aaa
fnstenv
mov
jl
xor
mov
out
in
sbb
scas
aaa
out
ficoms
or
inc
test
and
ja
call
mov
and
scas
aaa
adc
pop
cli
clc
subb
inc
lret
iret
sub
aad
xlat
subl
add
ret
jnp
push
cmp
sub
cli
mov
aaa
xchg
xchg
or
cwtl
sub
shll
aaa
inc
adc
cltd
test
js
stc
lock
pop
xor
jbe
aaa
xor
aas
aad
sub
pop
mov
jp
cmp
sbb
scas
in
cs
pop
fisubl
pop
add
inc
call
and
gs
sub
pop
dec
or
xchg
xchg
xchg
sarl
orps
mov
cli
and
es
xlat
aaa
movsb
cmpsb
lds
sbb
ss
out
cmp
stos
loope
mov
negb
cmp
cmpsb
nop
hlt
jns
aam
push
mov
into
aaa
or
sahf
sub
dec
insl
ja
out
jecxz
inc
iret
and
jl
xchg
jle
sar
aaa
cmp
sbb
mov
cltd
or
iret
add
clc
outsl
decl
mov
and
mov
mov
sub
and
aaa
icebp
pushf
jmp
jno
push
lods
les
mov
call
add
push
out
cmpsb
stos
imul
sbb
fdivrs
xor
and
aaa
cmp
mov
lods
add
stos
in
sbb
push
lods
adc
jp
sub
shlb
ja
arpl
mov
in
inc
jae
in
mov
mov
ja
xor
shll
jmp
mov
jecxz
fs
jp
aaa
cmp
pop
sahf
xchg
mov
leave
scas
jb
mov
aaa
cmp
outsb
cmpsl
mov
fsub
aad
lcall
aad
jp
int
dec
push
adc
add
add
testl
and
mov
push
aad
cmc
inc
jge
add
add
xchg
jne
or
xor
imul
jno,pt
cld
cmpsb
aaa
xor
push
in
add
xorb
and
pop
test
inc
roll
fiadds
rorb
enter
test
daa
addb
push
add
jg
push
test
das
sub
dec
push
mov
lds
push
aaa
bound
mov
loopne
inc
cmc
icebp
imul
mov
add
dec
push
lret
or
pop
js
xor
cmp
sbb
aaa
gs
sub
jb
ljmp
sbb
or
dec
mov
jbe
push
addr16
sub
mov
mov
sahf
xor
hlt
aam
xchg
push
aaa
sbbb
xchg
or
lret
dec
into
sahf
in
cmpsb
adc
jle
jmp
lods
cltd
or
jbe
or
dec
xchg
call
mov
iret
movsl
dec
inc
cmp
mov
int
lcall
sti
sub
pop
subb
je
sbb
lret
add
dec
mov
sub
pop
or
or
out
dec
mov
ret
dec
testl
js
call
or
setne
rclb
out
inc
fmuls
movsb
xchg
mov
loope
adc
push
and
push
insl
fsubs
inc
push
pushf
aaa
sub
les
jne
adc
jp
and
data16
clc
sti
fdivl
and
push
cmpsb
sub
in
aaa
mov
insl
or
or
inc
push
pop
xor
mov
sbb
sub
stos
pop
xor
ret
int3
cld
aaa
lock
mov
in
int3
fs
psrad
in
pop
sub
iret
testb
loopne
pop
adc
jne
pop
adcl
sbb
mov
xabort
jae
aaa
add
ljmp
push
ja
pop
and
sti
gs
dec
add
cld
lret
stos
inc
jne
xchg
out
jge
add
aaa
jno
loope
or
aaa
sub
in
jns
ja
pop
aaa
and
push
sbb
adcb
inc
pop
addr16
aaa
mov
iret
fdiv
inc
xchg
inc
out
jb
mov
pusha
mov
test
mov
aad
pop
or
sub
mov
aas
repz
out
in
mov
sbb
sbb
fcmovu
cmp
or
mov
movsl
lret
pop
cmp
xor
add
jecxz
mov
fbld
mov
pop
insl
mov
lods
jno
movsl
sbb
inc
cld
xchg
mov
xchg
mov
inc
aam
jno
adc
add
add
jbe
pop
daa
and
jl
clc
fwait
mov
mov
pop
pop
aaa
sti
sub
jno
adc
adc
mov
inc
mov
sarl
shll
add
sarl
pop
int3
pushf
sub
aaa
arpl
and
or
xor
loopne
or
jnp
jne
sub
and
aaa
mov
ret
aaa
mov
cmpsl
fistpl
cli
push
sbb
aaa
lods
pop
dec
mov
or
aaa
xchg
fisttpl
push
jo
sti
mov
aaa
and
pop
sbb
andl
inc
cmc
inc
pop
push
push
adc
inc
mov
sub
add
aaa
testl
ficompl
lret
andl
rcr
jo
lret
out
inc
add
test
mov
push
lea
dec
cwtl
lret
aam
aaa
pop
and
inc
mov
add
lods
jbe
aaa
xorb
fsubs
pop
xchg
add
aaa
into
xchg
and
stos
push
sahf
inc
cmove
lock
mov
sbb
int3
cmc
push
mov
cli
inc
aaa
and
std
mov
mov
add
mov
mov
mov
aaa
xchg
movsl
out
inc
sub
int
jnp
rorb
push
lahf
dec
js
and
jge
aaa
test
fimull
xor
mov
add
shlb
out
sub
ljmp
pop
dec
fmuls
pop
ss
mov
lret
aaa
ja
in
push
scas
lcall
test
nop
aaa
and
repz
idivb
loop
jns
out
sub
sub
aaa
mov
arpl
faddl
pop
pop
imul
pop
cmp
test
adc
addr16
xchg
push
popf
xorl
dec
cmpsb
xchg
aas
add
add
in
fidivs
pop
mov
ret
lret
ret
mov
nop
mov
aaa
fwait
mov
bound
mov
in
or
test
xchg
dec
fidivl
repz
cmp
or
mov
lret
fnsave
clc
jmp
or
stc
pushf
add
mov
sub
aaa
int
std
push
dec
cmp
cs
push
pop
jmp
shlb
adc
in
or
inc
jge
jg
loope
pmaddwd
sub
fistpll
out
ret
shll
lea
stos
mov
aaa
loopne
push
adc
mov
out
sbb
aas
cmp
shll
inc
es
shl
addr16
cltd
xchg
lret
lcall
out
push
cwtl
stc
cwtl
or
loopne
movsl
pop
adc
jno
push
fs
cmp
xor
jl
add
shrb
mov
rcll
push
mov
cmp
xchg
add
aaa
ss
movsb
or
and
adc
mov
movl
jno
push
addl
int
lds
shlb
rcr
negl
into
test
shlb
cmpl
icebp
call
test
ja
nop
jbe
cmc
push
xchg
outsl
daa
and
jle
pop
xchg
aaa
xor
aas
push
cld
and
enter
inc
cmpsl
lret
hlt
idivb
loopne
sarb
in
clc
adc
xor
pop
test
push
cmp
and
or
or
xchg
mov
pop
fisubl
dec
push
sbb
mov
cmp
jno,pn
fdivrs
mov
outsb
xchg
aaa
ffreep
adc
ds
xor
sub
aaa
shrb
xor
mov
cwtl
mov
fldl
xchg
bound
xor
push
mov
daa
adc
lods
inc
bound
fnsave
push
test
aaa
xchg
insl
push
test
pop
fcmovb
pop
xchg
in
aaa
fdivrl
dec
roll
xchg
cmpsb
and
data16
fidivrs
xor
fnstenv
ljmp
xorb
subl
call
aaa
inc
push
dec
enter
aaa
pushf
dec
stos
neg
xor
in
aaa
xor
pusha
sbb
psubsw
xchg
aaa
pop
push
ja
xor
mov
mov
inc
jmp
insb
push
cmc
in
les
psubq
jo
pusha
push
xchg
dec
inc
inc
pushf
cmc
pop
pop
popa
insl
mov
jl
lahf
jmp
xor
mov
cmp
movsb
ret
aaa
cltd
lods
out
xchg
in
test
adc
and
shlb
test
pushf
aas
cli
mov
xchg
inc
mov
addr16
nop
and
aam
jge
sti
outsb
pusha
and
shll
aaa
in
mov
insb
test
divl
pop
test
or
push
aaa
daa
push
ret
ret
sub
mov
mov
lret
mov
nop
mov
jp
xchg
aaa
test
mov
xchg
sub
mov
scas
or
int3
add
sbb
mov
arpl
in
stc
cmp
jns
shrb
push
out
inc
pop
mov
std
mov
lcall
mov
and
cli
inc
clc
fstl
inc
jbe
rcrb
push
test
and
jge
ret
fistpl
mov
push
popa
pop
enter
ja
cmp
ret
aaa
fs
in
jl
mov
ja
add
push
loopne
pop
fs
data16
inc
je
jg
pop
xchg
sahf
aaa
adcl
int
fisttpll
bound
or
push
ja
movsl
cmpsl
aaa
jns
mov
cmp
and
sahf
in
aam
pop
adc
sub
les
and
jno
jo
pop
aaa
dec
pushf
jmp
ljmp
ficoms
ss
lea
adc
lcall
mov
fmuls
mov
ds
das
data16
xor
mov
mov
jae
cmp
push
aas
aaa
fs
into
mov
call
je
cmp
sarb
test
adc
sbb
lret
mov
aaa
sub
dec
and
push
cmp
int3
xor
in
push
test
icebp
sti
jg
mov
inc
lret
dec
and
stos
aaa
js
shll
cmp
ss
mov
jge
mov
xchg
aad
xor
xchg
pop
push
jmp
adc
cmp
mov
adc
pop
mov
dec
outsl
aaa
repz
adc
xorl
jb
and
aaa
push
fisttpl
in
adc
push
mov
sbb
xor
add
add
fstpt
hlt
out
ss
mov
orl
pop
mov
add
jle
pop
mov
movsb
jl
stc
xchg
xchg
inc
cmp
add
jae
push
push
fsub
and
jge
ljmp
out
add
nopl
lret
mov
not
push
fsubrs
adc
out
cmp
xor
fucom
xcrypt-cfb
cmpsl
mov
je
loopne
vmread
lock
mov
fwait
xorl
mov
popa
in
clc
xorb
setg
add
xor
in
dec
push
pop
cltd
aaa
cmp
rcrb
aaa
dec
push
in
shll
inc
or
mov
aaa
in
imul
aas
loopne
mov
imul
fld
sub
out
cwtl
xchg
add
cmp
xlat
jl
jno
ljmp
pop
pushf
shlb
xchg
aaa
dec
push
mov
jecxz
enter
jle
dec
lahf
push
rcrl
or
add
push
outsl
xchg
mov
sahf
dec
xor
ret
loopne
and
cmp
fdiv
dec
lret
adc
sbb
jmp
cmp
mov
fwait
and
in
loope
sbb
pusha
shl
popa
repnz
test
pop
maxps
aas
iret
inc
inc
push
adc
aaa
cwtl
and
sub
jg
cs
jp
xchg
out
sub
adc
pop
pusha
ffreep
sub
cmc
sbb
mov
cmpsl
lahf
pushf
orb
test
aad
mov
pusha
enter
stos
cltd
adc
je
push
into
out
jmp
add
ds
negl
pop
mov
add
cmp
shll
jmp
std
addl
shl
stos
insl
sub
rorl
adc
stc
pop
jge
push
add
pop
dec
sub
insl
fdivrs
jae
sub
nop
pop
dec
sbb
or
enter
cs
sbb
jo
inc
sarb
inc
rcr
ds
aaa
test
paddsw
scas
icebp
je
sub
nop
xlat
aaa
subb
sub
fldcw
aaa
dec
and
xor
xchg
lret
fdiv
adcb
pop
cmovge
jae
test
cmpsl
push
push
pop
xlat
and
aaa
stos
xchg
mov
push
adc
aam
push
sub
push
lea
insb
jl
popa
inc
jns
xor
jbe
push
frstor
je
inc
mov
push
add
jmp
mov
cmc
ljmp
and
jno
loop
mov
jnp
cmp
cld
fcompl
pushf
adc
aas
cltd
subl
inc
cmp
es
fidivs
lds
or
mov
or
or
mov
pop
jae
fstpl
xchg
xchg
insb
xor
inc
cmp
cld
push
pop
cmpsb
mov
mov
std
xor
aaa
test
add
pop
push
push
dec
cltd
fidivs
cmpsb
stos
cmp
jge
cmpxchg
add
cmpsl
imul
ficompl
fwait
dec
sbb
mov
and
aas
mov
dec
outsb
icebp
stc
jo
sahf
pop
jmp
mov
aaa
or
cs
push
or
jns
pop
pusha
out
dec
adc
dec
adc
inc
cmc
cli
js
lods
jne
ret
aaa
aad
mov
inc
test
aam
adc
lahf
adc
outsl
aaa
push
testb
sub
cmp
in
xchg
mov
xor
add
xchg
std
insl
fisubs
repnz
lds
dec
sub
ret
cmc
xchg
push
out
aaa
mov
cmp
jno
and
mov
jl
fbstp
mov
call
mov
or
mov
in
rcrl
int
mov
dec
mov
adc
dec
cwtl
or
pop
sbb
lret
adc
or
add
xlat
mov
imul
or
jno
cmp
scas
mov
fs
ljmp
jmp
lds
jecxz
push
mov
jnp
test
pop
sbb
jl
jmp
scas
add
daa
inc
sub
xchg
add
mov
ljmp
push
mov
and
roll
pop
adc
inc
push
cwtl
jne
int3
loope
inc
xchg
aas
aaa
lret
jecxz
xlat
sub
adcl
xchg
inc
mov
cmpsb
xchg
and
push
cs
sub
lods
push
jne
pop
daa
lcall
mov
push
enter
cmp
sbb
aaa
mov
les
aaa
push
negl
aaa
aas
stos
mov
inc
cmp
mov
pushl
sub
mov
pop
and
cmpl
mov
movsb
pop
rcl
cmp
mov
ret
or
out
pop
movsl
sbb
dec
mov
mov
lret
xor
mov
dec
adc
cltd
call
jb
sub
cld
xchg
mov
mov
lret
aad
mov
and
int3
cmpsl
imul
push
push
mov
pop
xchg
mov
adc
rcrl
pop
aam
mov
dec
cmp
testl
ret
ret
add
xchg
mov
push
out
jns
mov
xchg
sub
jge
inc
aaa
push
inc
and
aaa
std
call
fcomip
aaa
mov
mov
mov
jbe
and
xchg
loop
aaa
push
inc
mov
or
ss
mov
lret
aaa
jo
push
or
cs
mov
aas
mov
sbb
sti
aaa
adc
in
int3
or
push
icebp
xchg
pop
inc
clc
aad
movntps
fdiv
sub
pop
mov
cmp
aam
add
jg
mov
dec
xchg
or
lret
xchg
xorb
pop
jmp
adc
and
imul
popf
lret
mov
aaa
and
dec
xor
pop
imul
mov
out
cmovl
jb
fdivs
pushf
cmp
ljmp
out
sbb
cmp
stos
adc
pop
pop
mov
inc
aad
aaa
lret
or
xchg
inc
sub
shlb
fidivl
sub
xchg
sbb
mov
aaa
cs
mov
sbb
mov
mov
cmp
js
xor
aaa
fcoms
fs
ljmp
pop
adc
sub
or
push
sarl
lods
aaa
pushf
popa
lcall
sbb
adc
dec
aaa
mov
mov
orb
lret
push
xchg
mov
mov
mov
mov
pop
jbe
jle
or
fbld
lret
ja
pop
mov
aaa
loope
lcall
push
mov
mov
out
cmp
popa
loop
sub
aaa
lcall
sbb
outsl
mov
and
and
push
push
cmp
xlat
fwait
push
aaa
dec
adc
imul
out
in
aad
insl
xor
aaa
sub
mov
aaa
inc
inc
in
ret
xchg
out
je
shlb
stc
and
sbb
mov
mov
dec
aaa
psubsb
xchg
inc
mov
lret
mov
inc
fdivrs
aam
mov
mov
adc
int3
prefetch
call
fwait
push
or
testl
add
aaa
mov
out
pushf
imul
xchg
mov
pop
es
rclb
test
call
cmpps
je
int
ja
hlt
jecxz
mov
shlb
shr
lods
mov
jge
cld
js
scas
or
imul
ret
mov
add
bound
cmpsl
cwtl
test
inc
mov
inc
aaa
jb
rorb
sbb
mov
scas
jae
cltd
aaa
mov
cmp
hlt
push
addr16
movsb
mov
sti
jb
pop
leave
dec
pop
and
adc
mov
sub
mov
popa
aas
ds
push
lods
mov
aaa
enter
jg
or
stc
aas
or
xchg
cmp
rorb
or
mov
cwtl
push
inc
add
xor
mov
mov
add
outsb
pusha
xchg
icebp
aaa
push
ljmp
aaa
jbe
into
push
repz
data16
adc
iret
aaa
mov
and
leave
clc
or
in
jle
fidivs
ljmp
push
aaa
or
add
hlt
out
stos
xchg
jge
push
or
insb
subb
rorb
and
add
idivb
mov
xor
push
out
test
rcr
sub
xchg
cmp
jl
inc
pusha
adc
cmp
jmp
sub
xor
or
inc
ja
sti
std
sub
jno
negb
fcoms
cli
or
jb
pop
cmp
cmp
sbb
mov
xchg
fs
add
cmp
sbbb
dec
aaa
jae
sub
adc
mov
mov
lcall
and
int
push
or
clc
jno
std
inc
adc
repnz
repz
xlat
xchg
cld
andb
insb
adc
aaa
clc
pop
inc
add
gs
fbstp
imul
pop
insb
aaa
cmpsb
adc
loop
outsb
jo
sti
and
sarl
adc
lcall
cmp
icebp
mov
fdivrl
lret
movsb
sar
test
aaa
imul
adc
sub
cmp
and
movsb
cmp
lods
add
iret
mov
xchg
cwtl
rcll
pop
or
imul
sbb
pop
and
leave
fs
lahf
cltd
pusha
outsb
mov
dec
shlb
ja
incl
je
aaa
call
cmp
in
sub
movsl
fadds
aaa
jno
or
es
cmp
sahf
pop
mov
push
push
and
fisubs
ja
or
outsl
sub
and
aaa
repnz
xchg
aas
add
aaa
adc
mov
ss
push
sub
adc
sbbl
xchg
jmp
roll
sbb
pop
jge
nop
mov
dec
jp
stos
repz
movsl
into
js
and
lods
aaa
mov
shrl
pop
pop
outsl
inc
pop
mov
negb
jae
mov
push
daa
shlb
mov
mov
je
jg
mov
int
aaa
popf
imull
test
aaa
push
sbb
jb
pop
popf
sub
sbb
xchg
xchg
enter
pop
adc
imul
shlb
popf
js
pop
call
adc
cmpsb
daa
ret
fwait
pop
mov
and
pop
icebp
imul
adc
mov
repz
mov
add
mov
in
or
lods
sub
push
xor
sti
mov
mov
mov
nop
in
or
sub
fsubs
fidivl
dec
mov
or
hlt
test
and
dec
adc
stc
outsl
loop
jecxz
divb
dec
mov
pop
sub
mov
out
cmp
xchg
xchg
aaa
xor
rcll
aam
xor
repz
dec
lods
adc
test
mov
rcr
xlat
mov
sbb
inc
cltd
in
cmp
shrd
flds
shrb
or
inc
inc
dec
ds
insb
or
fdivr
xchg
xor
loopne
loop
jl
dec
rcll
das
enter
cli
sub
adc
inc
or
out
mov
andl
in
mov
sahf
inc
aaa
inc
pop
dec
mov
insb
aaa
jle
mov
sbb
ja
cli
jg
adc
popf
push
mov
pop
sti
xchg
pop
cmpsb
push
adc
push
leave
fcomps
jge
push
jns
bound
mov
movsb
setl
inc
lock
bswap
push
jmp
cmp
shl
xchg
pop
add
pop
adc
lea
lret
aaa
aas
or
sub
jnp
aam
shl
jne
cmc
movsb
data16
xor
loopne
xchg
divl
inc
scas
jno
nop
shlb
adc
insb
xchg
iret
mov
add
cmpsb
in
out
jmp
mov
ljmp
aaa
jo
mov
mov
loope
cmpsl
xchg
bound
and
outsb
add
pushf
enter
loope
fwait
jg
lock
dec
or
pop
sub
inc
push
jmp
and
loope
arpl
aaa
fsubr
add
dec
adc
lock
test
shl
das
add
testl
jmp
cmp
call
pop
xchg
xorl
inc
test
inc
mov
pop
mov
aaa
into
das
faddl
jbe
sahf
shlb
mov
aaa
stc
xchg
repnz
cltd
pxor
mov
loopne
cmp
lods
fwait
popa
int3
add
mov
addr16
sbb
fcmovu
pop
ss
ss
jbe
xchg
fdivrs
arpl
cmc
cmp
jae
rcll
out
adc
aaa
pop
cmp
add
jbe
mov
dec
lds
xchg
out
scas
jmp
shlb
sbb
test
aaa
or
or
push
aaa
repnz
data16
mov
aaa
push
leave
lret
add
cwtl
fbstp
push
mov
sbb
aaa
stos
pop
or
addr16
pop
aaa
inc
mov
std
shlb
scas
in
pop
aas
out
mov
push
rorl
aaa
xchg
je
inc
push
sub
loop
jge
test
aas
sub
add
mov
stos
push
lahf
fnsave
popf
xlat
aaa
mov
jle
xor
sub
arpl
xchg
int3
aaa
mov
fstpt
pop
pop
mov
dec
dec
lods
dec
sub
into
sahf
ss
or
repnz
stc
add
fidivrl
dec
cmp
pop
dec
shl
sub
mov
out
mov
add
pop
jno
sti
call
pop
out
repz
jne
cmpsl
inc
cltd
and
mov
cmp
add
movsb
mov
jne
and
imul
aaa
ja
loop
jle
frstor
dec
stc
scas
decl
sub
dec
inc
dec
xor
out
xchg
dec
pop
xchg
pop
mov
push
mov
sub
cmp
aaa
ljmp
pop
insl
add
bound
jge
jno
cmpsl
outsl
clc
cmp
push
adcl
jp
pop
rclb
sti
mov
adc
je
lds
xchg
mov
jae
negl
mov
jnp
loop
ds
ret
inc
repz
push
clc
mov
int
dec
or
rcrb
jne
cmp
cmpsb
jle
mov
pop
dec
or
mov
mov
imull
mov
mov
xor
jno
aas
cmp
adc
addb
fadds
mov
mov
hlt
and
jne
or
and
into
mov
loopne
xchg
inc
xorl
sub
test
and
sbb
lret
adc
shlb
mov
movsb
cmp
sbb
xor
or
sbb
aaa
addr16
add
mov
jmp
les
ljmp
push
adc
adc
subw
aaa
sarl
jbe
repnz
push
dec
insb
lcall
or
bound
adc
les
enter
leave
roll
and
dec
je
fstpt
mov
dec
or
popf
in
in
push
cmp
aaa
ret
daa
xor
add
data16
aam
jbe
xchg
js
aaa
sti
in
dec
inc
sbb
or
cmp
fstpt
repnz
sti
push
adc
aaa
dec
cmpsl
stos
rclb
sahf
out
movsl
ljmp
shll
movntq
popf
add
sub
aaa
sbb
pop
push
rorb
fadds
js
mov
sub
movl
daa
neg
ret
mov
mov
das
push
add
or
jmp
mov
nop
inc
mov
mov
push
mov
adc
inc
shll
vcvtps2dq
mov
je
out
test
sbb
js
or
inc
idivb
dec
test
mov
dec
bnd
jmp
add
out
cmp
or
xchg
add
pextrw
mov
into
sub
aad
and
ds
jne
cwtl
xchg
imul
in
inc
in
xor
repz
lods
cmp
dec
outsb
shll
xchg
aas
push
cmc
mov
imul
repz
pop
clc
inc
cmp
dec
xor
pop
mov
inc
add
test
adc
xorl
mov
ffreep
sub
pop
cmpsl
arpl
clc
mov
ja
loopne
call
mov
test
shrl
js
dec
out
enter
mov
mov
jnp
mov
xor
add
adc
jae
aas
jno
cmp
sarl
push
js
xlat
mov
xchg
insl
sbb
jmp
or
add
sub
or
addb
out
call
popa
aaa
fsubrs
or
jg
aaa
mov
xor
pop
ss
aaa
and
es
cs
aaa
jl
cmp
sbb
or
pop
insl
sti
je
aaa
pop
cmpsb
repnz
cmp
mov
jno
pop
cmc
mov
pop
aas
aaa
mov
jo
scas
aaa
lcall
sub
stc
xchg
imull
adc
nop
shr
aaa
bnd
and
les
or
xchg
mov
push
std
inc
movsb
aaa
push
sbbl
add
aaa
imul
addr16
mov
aaa
loop
rcr
aam
mov
in
dec
popf
mov
fwait
test
dec
stc
fdiv
adc
rolb
ja
hlt
xchg
loopne
inc
pop
clc
mov
mov
mov
aaa
fcomi
sub
dec
adc
int
fcompl
cmc
xorl
sub
stos
addr16
aaa
scas
stc
repnz
adcl
mov
outsl
aaa
cwtl
push
scas
fcoms
mov
mov
adc
clc
outsb
jae
call
mov
ret
pop
inc
mov
xchg
dec
xchg
fsub
gs
sub
pop
in
pusha
inc
lea
mov
aaa
fsubrl
cmp
jbe
pslld
jne
mov
mov
cmp
or
jno
je
outsb
jecxz
fldz
rcr
ds
shll
sti
pop
fxch
filds
aad
mov
cmpsl
fcomps
pusha
sbb
popa
in
ss
jl
aas
push
outsl
xor
out
mov
lret
jne
ret
loopne
or
inc
test
movsl
movsb
xorl
jecxz
aam
ja
dec
xor
mov
aad
aaa
fmull
and
xor
insb
lock
aas
and
mov
repnz
insb
std
rclb
cmc
lock
rorl
ret
aaa
xor
test
sub
fistpl
fadd
jp
aaa
inc
mov
sub
jge
mov
cmovne
stos
sbb
in
adc
mov
imul
aaa
dec
das
inc
xchg
push
sti
aaa
arpl
rcll
bound
popf
subl
jle
aaa
jo
add
mov
mov
mov
fdivrs
aaa
shll
hlt
pushf
push
pop
scas
and
dec
ja
add
mov
sub
and
iret
mov
cmpsb
aaa
fnstenv
lahf
mov
mov
jmp
sub
pusha
push
xor
dec
in
jne
sbb
aas
or
repnz
add
in
repnz
jmp
or
cmp
ret
mov
mov
in
iret
jl
imul
pop
mov
inc
mov
add
in
mov
sbb
push
cmp
in
add
outsb
ss
pop
rcrb
mov
rcrb
or
lods
sub
xchg
shlb
pop
ja
ficoms
xor
cmp
hlt
dec
imul
xor
mov
bound
outsl
scas
aaa
pop
nop
jge
sub
sbb
shrb
xchg
stos
mov
decl
in
jne
shr
xchg
cmpsb
mov
adc
xlat
jle
sbb
or
aaa
sub
cmp
pop
dec
or
aad
pushf
rcrl
outsl
incl
jno
hlt
nop
push
es
sbb
stos
and
add
dec
das
call
out
mov
rcrl
aaa
fisubs
lahf
decl
pop
outsb
aad
adc
push
aaa
into
call
cli
pop
cmp
xor
adc
xchg
sahf
dec
jno
stc
mov
lcall
xor
aaa
sbb
cmp
or
jae
xchg
inc
or
xchg
add
andl
push
into
push
sarl
mov
pop
aaa
mov
bound
fcmovbe
aaa
add
enter
lahf
xchg
jmp
or
popf
in
lods
aaa
pop
jno
mov
inc
add
xor
and
xchg
aaa
mov
loope
xchg
aaa
inc
ja
imul
xor
jge
rorb
mov
dec
inc
cmp
push
daa
sub
aaa
test
push
and
aaa
jno
fs
mov
mov
notl
adc
jae
aaa
aas
xchg
pop
xchg
pop
lock
add
sbb
sbb
xchg
adc
xchg
aaa
and
mov
pop
cltd
sahf
xchg
jbe
mov
movsl
adc
cmp
ret
cmp
rdpmc
add
add
rcrb
mov
subl
mov
mov
rorb
ret
inc
in
cmpl
jbe
mov
mov
repnz
adc
aam
lock
and
inc
adcl
xchg
aaa
mov
cli
pop
mov
imul
aaa
adc
in
and
jo
aaa
xorl
test
and
inc
inc
push
push
aaa
pop
stos
int3
std
sbb
push
test
iret
dec
jns
dec
sub
sti
sbbb
add
hlt
popf
outsl
aaa
inc
xor
cmpsb
lock
xchg
in
pop
lods
bound
aaa
cmp
bnd
pop
inc
aaa
cmp
pop
cmp
inc
mov
aaa
and
fwait
lods
mov
data16
lret
pop
divb
jnp
jmp
call
sub
mov
mov
call
ljmp
pop
imul
xchg
cmp
loopne
mov
jl
add
dec
and
sbb
jno
mov
xchg
sub
jge
sahf
aaa
std
outsl
out
repz
push
aaa
or
add
ficoms
aaa
rcl
jb
fldenv
orl
sbbb
cmp
nop
xchg
lcall
dec
aam
aaa
mov
arpl
mov
jno
stc
and
pop
icebp
imul
xorb
inc
mov
fisttps
xor
fstpt
and
cmpb
xchg
dec
pop
mov
lahf
aaa
inc
pop
les
aaa
jl
inc
cld
and
push
pushl
stos
adc
sub
xor
inc
loope
ror
pop
rcrl
call
aam
enter
pushf
cwtl
shl
jo
ja
mov
mov
repnz
cli
mov
out
cmp
cmc
pusha
push
repnz
fdivl
inc
icebp
mov
insb
aaa
or
jnp
dec
mov
mov
out
aaa
cmp
mov
aas
insb
aaa
outsl
xor
xchg
pop
lcall
enter
adc
addr16
adc
xlat
push
aaa
cmpsb
sbb
divl
movsl
push
mov
and
cs
push
cmp
repnz
addr16
xorb
and
mov
aaa
xor
jle
push
push
sahf
loopne
dec
mov
shlb
in
cmp
xor
mov
je
sub
aaa
lret
pop
jmp
add
and
psllq
xlat
fisttpl
mov
repnz
nop
or
or
xchg
jne
jns
dec
push
out
cmp
hlt
sarb
sbb
mov
fdivs
mov
out
fs
mov
xchg
mov
mov
pop
repnz
sub
or
add
inc
aaa
push
pop
push
lahf
ds
mov
sbb
aaa
sti
push
lret
mov
cmp
push
sub
setle
inc
ljmp
and
mov
jae
adc
pop
cmp
xor
push
loop
lods
and
cmp
mov
or
pushf
mov
aaa
cwtl
incb
pop
ja
sbb
xchg
lahf
insl
adc
aaa
adc
mov
dec
mov
sub
aaa
cmpsb
push
xor
cld
clc
add
or
jnp
mov
sbb
sbb
adc
lods
aaa
das
mov
lret
cs
sbb
pop
aaa
sub
fiaddl
sub
icebp
pop
mov
data16
push
aaa
xchg
pop
out
fdivrs
xchg
fwait
inc
pop
scas
js
or
aam
or
fistpll
aaa
sub
pop
fsub
cltd
sbb
inc
or
or
xchg
loop
cmp
inc
add
movsl
stos
aaa
and
in
ret
js
or
push
and
bound
cmovnp
jecxz
clc
sub
sub
jmp
icebp
and
jbe
int
sbb
cs
mov
mov
push
aaa
out
test
aas
movsb
mov
push
or
lock
xchg
xor
mov
mov
test
fidivrl
idivl
cmc
pop
aaa
jmp
shll
push
fdivr
inc
rclb
cmp
jecxz
push
sbb
insb
xchg
or
fmuls
filds
mov
clc
jmp
stos
fildl
and
rol
add
mov
xorl
ret
das
rcrl
enter
xor
mov
cmpsb
jmp
xchg
add
cmp
inc
stos
aaa
cmc
les
fs
cmp
cmp
pop
mov
fwait
jecxz
push
mov
push
sbb
loopne
pop
cli
and
shlb
aaa
mov
inc
mov
into
dec
sub
xchg
js
int
out
enter
sti
sahf
aaa
jge
lcall
sarb
adc
out
xchg
pop
mov
out
daa
mov
addl
xchg
adc
aaa
inc
jnp
push
pop
nop
xor
dec
insb
push
xchg
pop
and
push
pop
mov
aaa
in
in
jns
pop
mov
aaa
pusha
aam
and
imul
push
mov
cmpsl
xchg
pop
jae
mov
testl
out
insl
mov
adc
jb
int3
aaa
mov
push
aaa
sahf
sbb
inc
mov
jno
jno
lds
mov
mov
xor
lods
arpl
and
fldenv
pop
out
cmpl
mov
add
enter
jp
fbstp
ficompl
push
loop
mov
mov
rclb
aaa
xchg
cmpsb
lea
pop
repz
in
enter
pusha
dec
movsl
jo
cmp
sbb
rclb
mov
add
fdivr
fwait
mov
aaa
movsb
fimull
or
loop
mov
dec
mov
mov
jmp
aaa
nop
xchg
shll
xchg
cmpps
in
sbb
pop
sub
fmull
or
mov
mov
rcll
mov
daa
aaa
cmp
sti
xor
sbb
int3
daa
aaa
sbb
or
test
aaa
int
jg
mov
fldl
xor
sub
aaa
ljmp
aaa
test
push
push
aaa
xchg
imull
and
imul
pop
sub
pop
aaa
fwait
cmpsl
std
sbb
push
add
xor
rdmsr
cmp
je
in
aad
fnstcw
shlb
inc
insb
mov
loope
fs
ja
mov
cmp
or
nop
jno
mov
insb
pushf
cmp
repz
mov
fnstenv
shrb
ss
sub
mov
aaa
lock
ja
mov
push
aaa
cmp
and
aaa
pop
scas
test
out
aam
sub
adc
sbb
jle
test
cmp
sub
aaa
in
cmpl
ficoml
jge
pop
cmp
addr16
mov
clc
bound
in
mov
lock
ss
sbb
adc
cld
in
ds
push
or
aaa
insl
fidivl
pop
cmp
xor
add
push
xchg
jmp
push
cmpsb
or
scas
ret
movl
add
mov
cld
xor
std
xchg
jge
or
push
test
repz
xchg
cmp
lret
cmpsb
sar
adc
les
sub
dec
sub
sub
lods
aaa
adc
rcll
clc
or
test
out
jns
cmp
in
sarb
dec
mov
push
cmpsb
mov
in
mov
cmp
xchg
aaa
xchg
mov
xorl
sti
shll
aaa
push
sahf
cmpsb
movsl
jb
sbb
aaa
orb
test
fildll
adc
push
movsb
xchg
cs
sbb
arpl
xchg
cmp
hlt
loopne
aam
lahf
jge
aaa
nop
add
lret
aaa
add
inc
das
mov
loope
or
aas
cmp
stos
ja
adc
stc
in
lock
mov
cmpsb
aaa
sub
cmp
imull
cmp
aaa
cmp
dec
movq
insl
leave
jle
mov
lea
stos
dec
mov
dec
xchg
aad
aaa
aas
cmpsb
xchg
rclb
cmpl
roll
xor
ljmp
aad
push
cmp
add
inc
mov
repnz
ja
out
dec
add
jne
push
shlb
mov
xchg
add
push
sahf
jno
bound
cmp
aaa
into
and
test
rolb
stos
fucom
jae
sub
add
mov
push
mov
aaa
xor
xor
jnp
mov
xchg
mov
fadd
lea
aad
pop
loope
sub
getsec
inc
dec
cltd
shrl
fs
repnz
iret
les
mov
faddp
test
sub
std
push
es
dec
test
gs
movups
test
pop
cmpsb
jne
pop
jns
inc
andb
add
loop
cmp
in
mov
pop
dec
push
insb
lds
add
push
jg
scas
dec
adc
or
aaa
pushf
pop
lods
movsb
sub
insb
cmc
or
adc
pop
or
add
push
cmc
xchg
push
mov
add
pop
into
hlt
movsl
fldenv
push
add
xchg
or
call
xor
push
add
xorb
movsl
rcpps
dec
out
pop
cmp
push
inc
mov
jae
and
aaa
cmp
jne
or
ror
call
inc
ja
bound
xchg
xor
push
aaa
test
mov
repz
jnp
mov
aas
rclb
mov
sub
add
jb
lret
xor
dec
shlb
pop
sbb
xor
pop
mov
pop
xor
pop
mov
dec
int3
rcr
mov
dec
mov
cmp
inc
leave
mov
mov
pop
stos
sbb
xor
xor
jge
add
or
in
addb
mov
movsbl
xchg
lahf
push
jmp
clc
mov
pop
hlt
push
and
adc
mov
inc
in
mov
dec
cmp
mov
nop
stos
shld
add
xor
adc
and
lahf
jle
mull
xchg
mov
aaa
xorb
jmp
xor
add
cwtl
jge
adc
sub
lahf
lret
push
mov
mov
cmp
lahf
or
test
mov
out
and
push
sub
adc
push
shll
int3
insb
pop
ja
sub
mov
mov
jle
sbb
rcr
cmp
add
or
fadds
sbb
in
sub
aaa
test
movsb
xchg
rcl
ret
aas
mov
aad
mov
xchg
or
pop
sub
psadbw
push
mov
das
xchg
push
or
sbbl
cmc
mov
shl
ficoms
cmp
add
pop
aas
add
js
sbb
and
mov
sbb
xor
cmp
call
cli
stc
pop
pop
inc
mov
js
int
mov
movsl
shrb
sub
imul
in
push
mov
aam
add
cli
rclb
push
cmc
cmpsl
and
sahf
mov
aaa
aam
adc
cwtl
xor
add
leave
rcrl
xchg
out
xchg
mov
out
dec
jne
pop
push
pusha
aaa
adc
movsl
mov
repz
xor
repnz
cmc
add
adc
and
mov
push
fistpll
movl
fsub
mov
in
nop
jbe
or
push
add
sub
rorl
clc
mov
or
aam
push
jno
xorl
or
sahf
stc
mov
popw
cs
pop
dec
adc
sub
mov
pushf
push
pop
aaa
dec
or
xchg
pop
arpl
shl
pop
xchg
mov
push
push
xor
mov
or
jge
dec
adcl
shll
jns
das
ja
push
xchg
cmp
shlb
aaa
nop
stos
ljmp
push
aas
mov
lcall
adc
das
mov
pop
scas
icebp
inc
lea
int3
or
mov
cmp
mov
in
lahf
aaa
ljmp
loopne
jae
push
and
sub
xchg
pop
cli
in
push
stos
push
and
xlat
xor
aas
xor
mov
lcall
dec
int
fdivl
cmp
rcrb
aaa
mov
test
and
fsubrl
jmp
out
mov
adc
push
lock
dec
dec
pop
sub
lret
movsb
sbb
add
jmp
mov
inc
pop
in
icebp
aaa
nop
push
or
jle
pop
aam
push
add
stc
dec
cmp
ss
ljmp
inc
mov
loopne
push
add
fstpt
pop
cmp
mov
out
jle
sub
xor
xchg
stos
nop
sti
mov
xchg
jmp
setnp
xchg
fdivl
pop
pop
sbbb
or
sbb
xor
cs
xor
mov
aam
aaa
in
push
mov
sub
das
ja
mov
cmp
adc
or
mov
cmpsb
adc
and
hlt
jb
mov
ret
or
add
lock
sarl
fnsave
xor
sub
adc
es
pop
pop
aaa
mov
jmp
or
cmpsl
mov
lds
aaa
mov
xchg
addl
mov
mov
or
dec
and
nop
cmp
loopne
jno
idivb
xchg
les
mov
loop
mov
jge
out
push
push
invd
aaa
or
scas
divb
dec
push
ljmp
jo
in
pop
movsb
pop
sub
fistpll
ficoml
loop
cmp
xor
aaa
push
fnstcw
lea
fcmovnb
lahf
scas
test
adc
pop
xor
jb
ret
loopne
testl
xchg
add
adc
aam
push
inc
cs
fnstenv
push
pop
mov
dec
iret
fcmovb
push
sub
and
mov
and
aaa
pop
mov
lret
iret
push
pop
lock
call
arpl
sahf
ja
add
enter
aaa
add
push
in
imul
out
dec
adc
add
lods
clc
mov
retw
imul
arpl
push
clc
pop
dec
mov
xor
push
fimull
and
mov
mov
jbe
mov
aaa
xchg
movsb
sahf
adc
les
mov
mov
in
lret
push
aaa
mov
jae
das
ja
dec
outsb
cmp
mov
aaa
mov
sbb
lods
cmp
cmp
inc
std
mov
cmpsb
sub
popf
aam
mov
test
aaa
aad
scas
inc
aaa
imulb
out
add
aaa
cli
mov
jl
sbb
and
sbb
cmc
add
cmp
aaa
adc
test
mov
inc
loopne
xorl
data16
fwait
ja
sbb
xchg
add
add
add
daa
push
sub
aaa
outsl
movsb
cmp
aas
test
aaa
repnz
out
fstp
xchg
aaa
rcrb
and
inc
cli
xor
dec
cmpsb
mov
push
sbb
in
xchg
inc
iret
aaa
test
aam
aaa
xlat
cs
fs
jmp
stc
iret
xchg
mov
test
sub
or
jl
leave
adc
test
aaa
lret
add
gs
and
aaa
sub
shrb
jbe
mov
xchg
jns
xor
movsl
sbb
aaa
mov
xor
cltd
aaa
mov
fcompl
adc
pop
fs
lahf
adc
ret
or
test
ds
lcall
pop
or
inc
stos
shlb
data16
push
outsb
adc
cmp
movzbl
pop
ror
mov
lods
jg
aaa
mov
rcrb
pop
sub
aam
mov
add
outsl
sbbb
call
out
dec
test
cmp
lods
fsubrl
in
daa
pop
jae
out
aaa
push
scas
insb
out
stos
inc
pop
aaa
xchg
add
jp
mov
add
xor
dec
lcall
das
stc
jecxz
jl
adc
jno
dec
dec
aaa
pop
push
pop
dec
xchg
cmpsl
aaa
out
cmp
icebp
imul
aaa
xchg
cli
adc
lcall
imul
aaa
sub
sub
xor
ret
and
stos
sub
sar
or
repnz
mov
cmpsb
cmp
int
ja
out
je
out
out
jmp
fldcw
cwtl
pushf
or
push
pop
es
push
test
icebp
bound
addr16
inc
mov
sbb
cltd
jl
jecxz
dec
sbb
mov
aaa
out
pop
fbld
stos
xor
mov
aaa
shr
dec
add
mov
shll
pushf
inc
popf
fwait
adc
gs
aad
mov
mov
and
in
jne
mov
gs
sbb
insb
push
aam
jo
add
stos
push
xor
sbb
or
aaa
imull
sub
lods
decl
les
dec
cs
lods
jae
add
into
icebp
data16
mov
rol
pusha
push
mov
pop
mov
push
aad
in
xchg
dec
jl
xchg
xchg
out
aaa
adc
clc
in
mov
dec
inc
scas
jnp
fdivrl
jg
or
stos
lcall
jae
ror
mov
jns
mov
inc
pop
jge
jmp
rorb
ss
pop
mov
jle
into
sub
mov
aas
dec
jge
sahf
aaa
push
js
sub
cmp
lret
and
xor
data16
jb
jmp
add
mov
aaa
cld
cmp
aaa
repnz
jmp
arpl
adc
xchg
lret
mov
add
cmpsb
rol
jo
xor
mov
jne
aam
xchg
dec
into
lea
sbb
sbb
imul
push
inc
addl
das
ss
xlat
xor
cli
stc
aam
aaa
addl
test
aaa
movsl
in
sub
sbb
pop
or
fisubs
mov
int3
adc
pop
insb
jne
inc
in
push
stos
jmp
gs
pop
clc
xchg
negb
aaa
mov
and
aaa
jle
mov
iret
jno,pn
arpl
or
xchg
push
aaa
fwait
adc
pop
pusha
aas
cmp
add
fildl
sub
lock
nop
or
jle
cmpsb
xor
rclb
jae
mov
out
notl
inc
cmpsl
push
nop
mov
das
aaa
imul
jmp
aas
sahf
fcom
sub
cld
js
int3
sub
dec
imul
aaa
test
fwait
pop
push
jmp
dec
loopne
popf
cmp
enter
mov
push
sti
aaa
sahf
pop
cmpsb
jno
ret
cmpxchg
in
push
pusha
clc
mov
mov
ficoml
xor
aaa
rcrb
in
incb
test
aaa
iret
push
and
and
testb
jle
jnp
add
testl
push
sub
fnstsw
fnstcw
in
nop
in
mov
lahf
pop
push
push
ret
sub
add
sub
add
add
loop
in
aaa
push
mov
fnstcw
sub
aaa
pop
xchg
and
mov
aaa
jecxz
add
sahf
mov
insl
aam
shr
cmp
popf
cmp
cld
cli
mov
inc
stc
js
leave
enter
fwait
sbb
jne
jmp
cmc
adc
jno
mov
xchg
pop
mov
and
cs
or
pcmpgtw
enter
and
js
dec
jl
or
aaa
dec
push
jno
loop
std
inc
cmp
sbb
mov
lret
gs
loopne
inc
movsb
daa
lock
fistps
sbb
ret
mov
sub
cmp
aaa
xor
pusha
cmp
pop
mov
cmp
cld
aam
sahf
pop
aaa
adc
and
inc
jb
shll
jne
xchg
dec
mov
aaa
xlat
and
in
sub
daa
xor
jge
das
xchg
fmul
pop
sub
insl
sbb
cltd
adc
add
jle
or
or
cmc
or
lods
mov
sarl
add
movsl
bound
ficomps
xchg
cld
test
pop
xor
cmpsb
ret
sbb
mov
aaa
lret
push
out
out
pop
mov
aaa
cmp
or
adc
pusha
popa
xchg
mull
repz
mov
fldenv
mov
sbb
ficoml
into
cmpsl
fbld
cmp
cmp
xor
ja
loope
mov
imul
int
inc
jg
mov
lock
cmpsb
arpl
decb
push
lahf
mov
leave
ja
dec
shll
cmp
mov
xor
lock
xor
fs
fildll
xchg
push
aam
xchg
loopne
mov
leave
out
aad
jb
ficomps
push
setbe
aaa
into
mov
aam
or
xor
shlb
ja
mov
jmp
fs
lcall
push
ljmp
fdivrs
mov
aad
adc
jae
int3
push
sbbl
pop
add
aaa
cwtl
into
push
hlt
add
loope
dec
int
out
mov
add
in
sub
aam
mov
aaa
andl
outsl
nop
cmp
aaa
outsb
js
cmp
aaa
out
lahf
jae
xchg
out
sub
ja
sub
push
int3
bound
test
sub
daa
mov
push
aaa
sbb
add
push
jno
adc
add
sbb
ja
aam
sbb
jo
add
cs
mov
xor
ja
xchg
xor
adc
mov
mov
test
aaa
adc
data16
push
inc
mov
lds
add
andb
daa
fsub
das
leave
test
std
add
outsl
in
pop
cmpsl
jae
mov
in
lods
aaa
pushf
shlb
cmp
xor
aaa
cmp
repz
jmp
lahf
push
xchg
add
roll
xor
and
fldcw
test
enterw
jae
and
out
mov
in
jbe
aaa
inc
lds
cmp
daa
xor
dec
arpl
push
mov
jmp
mov
mov
xchg
mov
je
sub
aaa
jge
sbb
add
adc
aaa
dec
lock
lods
adc
mov
bound
xchg
into
rcl
push
daa
pop
fcomps
aaa
ret
movsb
mov
jmp
aaa
mov
mov
push
aaa
ror
in
sub
lret
sub
cwtl
fiadds
push
loopne
xchg
pextrw
add
stos
lret
and
aaa
test
or
ljmp
lock
cld
notb
and
inc
xorl
dec
mov
divb
aas
xor
jno
cmpsb
inc
pcmpgtd
cmp
jns
popf
pop
pop
imul
lahf
gs
adc
clc
and
sub
fsubs
repz
repnz
mov
xchg
jb
jae
mov
mov
sub
cmp
lret
in
and
je
stos
out
cmp
or
adc
insb
jl
clc
dec
in
aaa
lods
cmp
jne
enter
adc
cmpsb
shll
mov
enter
add
in
getsec
sub
pushf
cmp
dec
cmp
aaa
xlat
fnstsw
rol
sahf
dec
fsubl
lods
cmc
movsb
fcoms
inc
aaa
jge
rcr
jns
int3
stc
pop
mov
mov
aaa
daa
xchg
pop
dec
mov
hlt
pushf
push
stos
cmpsb
sbb
jae
mov
sbb
es
pop
xchg
and
shl
mov
adc
inc
iret
dec
aaa
push
sub
cmp
cld
jp
aaa
pop
sub
push
aaa
jmp
cli
and
out
and
aaa
adc
int
aaa
mov
push
stc
out
or
pop
add
call
nop
cmp
aaa
sysret
repnz
add
mov
push
lidtl
inc
ret
cwtl
fstpt
into
mov
int3
ljmp
movsl
out
cmp
cmp
aam
mov
gs
pushf
mov
pop
inc
aaa
hlt
push
out
iret
scas
mov
inc
ror
lret
loop
lock
fs
jb
sub
in
out
and
pop
unpckhps
jp
leave
fisttpll
mov
roll
jge
lret
lahf
aaa
sbb
enter
xor
jge
adc
fisttpl
lcall
jne
and
adc
sbb
xor
imul
cs
ret
add
xchg
push
imul
xlat
pop
and
aaa
xchg
and
inc
mov
aaa
fs
mov
mov
adc
dec
loopne
push
sbb
xor
cmp
or
je
aaa
adc
les
adc
sahf
fwait
ds
dec
scas
movsl
pop
fbld
mov
xchg
push
hlt
xor
mov
fidivs
pusha
js
and
popa
mov
sub
xchg
cmpsl
aaa
mov
ret
fnstcw
aaa
cli
mov
scas
sbb
sbb
pop
xchg
rcrb
sub
jae
aaa
mov
mov
lock
cltd
jmp
sub
add
lods
hlt
popa
xchg
stos
sbb
shll
jl
mov
push
pop
pop
cmp
push
repz
push
sub
dec
test
xor
xlat
pusha
inc
pop
dec
mov
or
cmp
call
push
pop
pop
cmp
movsb
inc
adc
dec
mov
pop
ucomiss
xchg
push
shrb
movsl
push
lahf
out
icebp
in
sbb
jnp
cmp
sahf
dec
hlt
cli
adc
imul
aaa
insl
and
int3
mov
dec
iret
aas
in
cmc
xchg
fiadds
sub
repnz
fsubs
mov
into
jp
out
sbb
mov
loop
jno,pt
inc
mov
jnp
fwait
out
sbb
inc
mov
cmp
mov
out
mov
cmp
shrb
pusha
mov
movsl
cld
test
loopne
pop
mov
pop
add
or
adc
jg
icebp
aaa
dec
fcomps
test
push
test
mov
jb
cmpsb
xor
add
dec
fs
add
fistpll
fcoml
cmp
ret
or
cmp
fwait
aaa
mov
into
pop
cmc
aaa
lods
cli
sbb
add
inc
or
aad
dec
pop
jns
mov
enter
int
pop
imul
cmp
pop
cmp
or
mov
sub
pop
mov
mov
adc
aaa
aad
fisubl
or
inc
mov
cmc
xchg
push
add
ljmp
mov
in
nop
cmpsb
scas
lret
mov
mov
cmp
xor
aaa
in
jmp
es
mov
xchg
int3
xchg
mov
imul
cmp
movsb
jl
int
dec
and
jge
sbb
or
or
cmpb
cld
xchg
mov
jmp
xchg
mov
sti
sahf
inc
or
arpl
bound
ficompl
movsb
add
cmpsl
aaa
jmp
lcall
aaa
cli
inc
fdivrs
cmc
push
cmp
add
lahf
push
cs
dec
cmp
sub
aaa
xchg
cwtl
add
or
aaa
or
pop
cmp
popf
lds
icebp
push
cs
mov
pop
testl
dec
lcall
in
sub
ja
int
xchg
imul
stc
loope
pop
movb
push
dec
mov
scas
xchg
aaa
push
fld
inc
jb
mov
test
test
aaa
inc
dec
adc
push
and
push
jo
scas
popf
les
cmpsb
repnz
stc
jmp
insb
daa
lret
aaa
jnp
dec
in
rep
test
aaa
add
mov
or
mov
pop
fisubl
push
aaa
stc
lret
pop
dec
xchg
mov
loopne
xlat
dec
aad
popf
aaa
rcr
test
lds
and
xor
cld
and
pop
popf
add
sub
mov
sub
add
push
mov
iret
add
nop
jb
int
push
insl
aaa
push
cld
pop
push
ljmp
int3
in
adcl
or
sub
jae
fmul
mov
and
aas
xor
aaa
les
sbb
adc
pop
jnp
push
cmpsb
cmp
push
jmp
pop
je
insb
aaa
push
les
xor
nop
mov
sbb
mov
aaa
push
lock
or
xchg
test
or
mov
pop
iret
fnstsw
loop
push
or
add
daa
das
sub
in
fs
scas
mov
pop
cmp
adc
adcl
or
popf
rorb
pop
insb
jnp
ss
aaa
mov
pop
lods
xor
repnz
imul
adc
aaa
sub
mov
lea
mov
pop
in
inc
push
outsb
aaa
or
imul
mov
lea
out
jge
out
mov
jne
lcall
in
cld
movsb
testl
test
inc
lcall
push
mov
orl
add
icebp
pop
das
rorb
mov
pop
loopne
and
ret
sti
inc
int
cmpsb
or
fldenv
icebp
into
mov
sbb
mov
cmpsb
pop
int
jae
jecxz
pop
insl
gs
mov
aaa
lea
cltd
pushf
sti
in
aaa
stos
out
xchg
jecxz
adc
mov
pop
cmp
addr16
jns
adc
cmp
lahf
fdivr
rclb
hlt
jg
movsb
sbb
jbe
outsb
cli
aaa
xchg
insl
jp
popf
xchg
aaa
std
xchg
pop
je
add
fiadds
cwtl
xchg
call
test
mov
xchg
dec
fs
adc
lods
addr16
pop
hlt
cmp
roll
cwtl
lock
test
or
pop
xor
dec
int3
aaa
clc
push
cmp
push
jmp
push
and
inc
fstpt
or
dec
in
cld
and
jecxz
sub
lahf
or
sarb
mov
ja
aas
adc
sub
test
jecxz
out
sbb
outsl
adc
inc
push
xorb
aaa
and
add
xor
adc
leave
adc
mov
mov
aam
pop
not
fs
cmpsb
subw
aaa
sbb
repz
cmp
das
aaa
imul
pop
jae
test
nop
scas
repz
mov
outsl
mov
aaa
xor
rcl
pop
add
aaa
in
out
out
lret
sub
std
adc
das
loop
dec
push
xchg
enter
int3
push
inc
popf
sub
mov
adc
lock
jl
data16
setnp
je
mov
clc
pop
aaa
leave
sbb
jbe
test
in
mov
jecxz
imul
aaa
fistpll
xor
adc
je
jns
pop
flds
aaa
jae
mov
arpl
or
sub
xchg
ret
add
pusha
inc
sub
clc
jle
mov
shlb
data16
cmp
pop
sub
and
ja
fisttpl
or
add
dec
pop
mov
lret
insl
aaa
int3
cmp
mov
aaa
sti
fildl
shll
aaa
add
or
test
pop
aaa
jae
ret
xor
mov
adc
pop
mov
jmp
fwait
lahf
xor
aaa
loop
cmpsl
std
pop
mov
test
mov
aas
or
inc
into
mov
sub
insb
xlat
aaa
scas
pop
fimull
out
mov
jg
mov
jne
in
add
pop
pop
outsb
movsb
xor
fcomp
es
pop
cmp
pop
mov
inc
push
jge
in
clc
in
mov
dec
push
xor
imulb
arpl
inc
sub
mov
jmp
add
lret
xor
mov
cmc
pop
test
mov
clc
or
jae
lcall
inc
negl
adc
pandn
and
clc
sub
loop
outsl
fsubrp
les
or
cltd
xor
mov
pushf
idiv
mov
sbb
mov
fcmovnbe
jl
mov
fidivl
xorl
push
inc
adc
loope
bound
push
sbb
into
fisubl
mov
xchg
insb
in
les
in
jne
adc
stos
nop
xor
call
cmp
mov
sbb
push
inc
cwtl
stos
push
aaa
sbb
or
lcall
cmp
jo
notl
jae
ss
push
push
aaa
loope
dec
jae
int
cli
jns
and
pusha
xchg
dec
fmul
jecxz
mov
adc
sub
aaa
sub
xchg
repnz
aaa
cmp
iret
movsb
in
cltd
add
jbe
data16
movsl
inc
test
popf
sbb
lahf
xor
aaa
dec
add
cmp
rcr
icebp
lret
call
dec
mov
mov
dec
cmpsb
cli
loopne
sbb
aaa
ja
cltd
fstpt
int
lahf
adc
push
mov
add
mov
dec
pop
mov
jno
loopne
lea
mov
sarb
sbb
aaa
insl
out
sbbl
mov
jbe
mov
aaa
lcall
mov
dec
or
sbb
clc
dec
mov
test
pop
jno
lret
mov
jns
in
ss
aaa
adc
jl
jmp
test
xor
mov
mov
xchg
aaa
pop
les
fmul
cltd
add
mov
mov
mov
in
add
into
lock
cmp
sbb
xchg
jmp
mov
ss
xor
add
mov
jae
in
jne
hlt
punpckhbw
push
ss
xor
sbb
insl
cli
nop
int
or
sbb
push
into
das
and
lods
je
adc
lds
movsl
push
inc
sbb
xchg
sahf
cs
and
jae
xor
sub
inc
xor
cwtl
hlt
movsl
fstpt
adc
mov
xchg
sbb
cmpsl
jmp
sub
insl
pusha
or
inc
sub
push
or
das
lock
aaa
dec
mov
add
iret
dec
cmp
sbb
jge
mov
xor
add
sbb
ljmp
and
ja
xchg
jbe
lods
test
push
js
dec
add
mov
out
leave
pop
out
jbe
aam
mov
mov
test
jae
pop
adc
mov
push
fisubs
test
sbb
cmpsb
out
outsl
aaa
xlat
xchg
testb
aam
jge
mov
inc
sub
lods
xor
xlat
cmp
out
test
sub
xor
aaa
int
cmpsl
in
fnstcw
xchg
fldt
aaa
mov
scas
mov
add
pop
cmp
aaa
dec
xchg
mov
cmp
inc
cmp
adcl
aaa
xchg
imul
lahf
aaa
mov
scas
add
int3
jne
xchg
in
cmp
je
sarb
fnstsw
mov
or
fs
and
mov
mov
cmc
dec
sub
lcall
cs
mov
movsb
and
inc
add
sub
aaa
icebp
sub
fsubrs
or
dec
js
cmp
xchg
dec
stos
ret
movsl
int3
sub
or
jecxz
cmc
lds
pop
ja
in
fadds
rclb
push
iret
das
out
aaa
and
aaa
mov
jge
xor
mov
std
in
push
sbbb
enter
jnp
adc
lea
add
out
arpl
sbb
pop
bound
test
jae
mov
popf
cmp
movsb
fdivl
add
mov
sub
push
aaa
subl
dec
push
les
push
call
ds
mov
xlat
push
aaa
cld
out
ss
fdivp
imul
outsb
xchg
mov
aaa
inc
inc
mov
jmp
add
jg
adc
fistpl
jl
aaa
stos
fldcw
push
aaa
and
imul
js
or
add
push
ficoms
cmpb
cwtl
test
aaa
jnp
nop
enter
sub
jno
mov
mov
hlt
aaa
ds
adc
add
push
shr
jge
pop
pop
cmp
dec
loope
insb
pop
jo
sbb
loopne
push
aaa
movsl
xchg
sub
cmpl
aaa
mov
popf
in
fcomps
popl
imul
inc
lahf
sar
aaa
rcrl
jg
aas
lea
in
and
arpl
xchg
push
iret
fdivrl
cmp
rclb
xchg
push
sysret
jb
or
or
negl
pop
arpl
mov
push
fs
call
shrl
hlt
addr16
fwait
cmpsl
ja
mov
daa
jnp
sbb
arpl
fcompl
insb
jnp
push
jle
jno
scas
gs
push
adc
mov
stos
lock
test
xchg
mov
inc
or
and
jmp
jae
xor
cmp
mov
sahf
xlat
sbb
mov
pusha
jmp
and
pop
loope
push
sbb
rolb
xchg
push
mov
add
getsec
lcall
mov
movsl
inc
pusha
cmp
outsb
mov
int3
aaa
jae
mov
or
shrb
loopne
mov
dec
adc
pop
aaa
loop
xchg
orl
mov
fcoms
std
push
das
aaa
cltd
sub
cmp
aaa
mov
and
dec
aaa
inc
iret
lods
es
aas
mov
ss
aam
push
mov
xchg
inc
ljmp
inc
scas
iret
push
popf
sbbl
mov
bound
aaa
xchg
lock
or
out
stc
loopne
cltd
test
aaa
fwait
mov
xlat
divl
lds
mov
dec
mov
mov
insb
roll
repnz
or
cmpsb
mov
sbb
sti
sub
les
xorb
inc
aaa
lock
add
xchg
aaa
pop
add
cs
pop
aaa
add
int3
repnz
aam
int
leave
js
push
jne
clc
stos
stos
rcrl
aas
xlat
inc
test
add
cld
insb
loope
add
repnz
loopne
jno
cmpsl
addr16
xchg
lahf
inc
dec
aad
enter
pop
lret
aam
aaa
xor
dec
xchg
mov
mov
data16
and
loopne
mov
test
clc
inc
nop
inc
mov
xchg
add
cmp
add
adc
push
hlt
mov
int
mov
daa
adc
add
cmp
pop
and
or
loope
dec
aaa
mov
movsb
jb
adc
cs
cmp
and
int
inc
shlb
sbb
mov
repnz
sti
clc
cld
cld
pop
mov
int3
or
push
adcb
push
ret
sub
ja
mov
das
ret
test
js
mov
sarl
xchg
in
cld
fstpt
aaa
ret
pusha
lret
mov
aaa
inc
aad
sbb
aaa
das
cmpsl
insl
sub
out
movsl
loop
lods
or
push
out
push
std
lret
andb
not
out
movsb
aaa
jle
cli
sbb
xchg
pop
adc
aaa
cmpsb
jmp
ljmp
push
ret
cmc
out
mov
adc
in
fisubrs
scas
add
mov
aam
aaa
adc
int
ret
add
lret
daa
in
adc
std
sub
mov
or
clc
icebp
movsb
fxch
cmp
jo
mov
push
dec
inc
in
leave
or
fwait
sbb
mov
clc
mov
mov
sub
clc
hlt
sub
mov
fistpll
ss
or
je
inc
mov
mov
mov
aaa
mov
inc
push
ja
add
cmc
pop
loope
cmp
aaa
sbb
test
aaa
int
push
lcall
jge
sub
into
paddq
pop
pusha
popf
cmpsl
fiaddl
xor
fucom
push
jl
dec
mov
js
cmc
hlt
jne
mov
into
lock
jno
repnz
lock
lods
ljmp
and
aad
in
aaa
out
in
mov
sub
call
cmpsb
xchg
cmpsl
lcall
aaa
inc
movsb
test
adc
cmpsb
mov
js
data16
pop
mov
ret
cs
aaa
xchg
in
xchg
and
xchg
jecxz
shrb
and
shll
cld
imul
loopne
add
mov
ja
mov
add
outsl
cmp
mov
push
mov
stc
cld
mov
inc
lcall
cmp
aaa
jmp
fdivs
pop
movsb
test
std
loope
mov
cmp
jbe
aaa
adc
sbb
aas
mov
cmpsl
lret
jae
sahf
aam
iret
cmp
outsl
cmpl
push
js
xor
aaa
pop
loope
jmp
aaa
into
loopne
enter
sti
movsl
notb
mov
imul
xchg
pop
sub
xor
add
adc
xor
js
int3
dec
aaa
and
jle
push
adc
fnstcw
cmc
fsubrl
cmpsb
aaa
push
sbb
roll
xchg
aaa
push
sahf
pop
data16
mov
ljmp
fbstp
dec
xchg
into
movsl
mov
xchg
ret
sbb
aaa
or
dec
sub
add
cltd
mov
mov
aam
add
or
lcall
pop
mov
out
js
push
fiadds
and
inc
cmpsl
cmc
fistps
cmpb
sub
aaa
push
jbe
push
fdiv
ret
out
in
shll
xor
inc
aaa
mov
lret
fldt
and
or
push
sahf
ja
loope
ficomps
cltd
jns
jbe
xor
pop
push
aaa
cmp
push
shl
cmp
daa
fildl
jo
sti
mov
mov
mov
mov
int
aaa
fsubs
imul
ljmp
lcall
icebp
je
mov
fwait
lahf
add
js
jge
adc
push
in
push
mov
adc
xchg
cmp
pop
sbbl
insb
stos
xchg
dec
js
cmp
xlat
and
js
xchg
pop
mov
adc
sbb
cmc
cld
jmp
add
inc
mov
mov
sbb
loopne
inc
aaa
repnz
inc
cmpsb
shl
cmpb
and
push
mov
cmp
insl
cli
cmp
xchg
addb
jo
repnz
out
aaa
clc
pop
fbld
popf
cmc
xchg
and
shll
add
lods
push
ja
cmovbe
sub
jmp
push
mov
aaa
scas
dec
cmp
fwait
aaa
aad
cmpsb
cmpsl
xor
push
push
cmp
aaa
mov
mov
fnstenv
xchg
push
dec
inc
sbb
sbb
clc
movsb
in
lret
pop
fdivs
and
or
insl
push
clc
loop
pop
ja
push
push
sub
cmpxchg
xor
pop
fs
lods
out
dec
xchg
fcoms
addl
adc
xchg
adc
xlat
popf
xrelease
fiadds
outsb
add
shr
push
idivb
std
push
imul
or
jp
aad
push
lret
aaa
lea
jecxz
or
sub
daa
or
rcr
or
std
shrb
push
push
mov
mov
aaa
ret
or
pop
xchg
outsl
aaa
ljmp
addr16
ja
shrl
rcrb
scas
jbe
or
daa
aaa
push
sub
into
mov
mov
aaa
div
scas
sarb
mov
push
aam
clc
lods
sti
mov
aaa
push
push
ja
mov
pop
cmp
fnsave
lods
gs
mov
out
pop
inc
sub
pop
aas
jg
aaa
sub
aaa
xor
call
mov
jl
mov
or
mov
in
mov
repnz
fdivrl
sbb
xor
cmp
dec
dec
and
push
jae
in
fiaddl
xchg
mov
je
test
jmp
lods
and
cli
push
aaa
sub
inc
shlb
int3
fisttps
aaa
cmp
mov
repnz
stos
lahf
ja
fwait
sub
adc
add
sub
adc
aam
inc
cmc
jge
sahf
sti
loope
nop
cmpsb
jecxz
shll
mov
shlb
testl
sbb
andb
aam
shlb
push
pusha
roll
jge
prefetchnta
int3
lock
jo
imul
mov
xor
sbb
inc
sti
arpl
pusha
aaa
inc
inc
or
jmp
and
add
cs
aaa
pop
popf
outsl
push
das
test
jbe
cmpsb
cmp
negb
add
xchg
sbb
jmp
xor
xor
stos
aaa
mov
lret
aaa
movsl
scas
das
ljmp
jnp
adc
mov
fs
adc
jge
rcll
cmp
mov
clc
push
push
mov
jl
inc
or
dec
je
and
jbe
pop
aaa
cs
hlt
add
lds
inc
fisubrl
aaa
mov
fwait
pop
mov
aaa
xchg
mulb
loopne
mov
arpl
out
call
data16
xchg
pop
push
xor
cmp
movsb
ret
jae
lods
jmp
out
ljmp
sbb
mov
test
push
inc
and
and
fsub
aaa
clc
dec
test
jp
adc
or
js
lahf
clc
pop
adc
mov
clc
dec
inc
loopne
aas
mov
jecxz
ljmp
or
jbe
mov
rcr
push
fiadds
ja
cli
mov
xchg
mov
xor
xchg
fistpl
ret
les
ficomps
add
or
into
sbb
loop
aaa
and
fdivrs
scas
cmpsb
mov
mov
pop
cmp
push
xchg
shr
dec
lahf
aaa
dec
ja,pn
mov
cld
sbb
jl
or
aaa
not
addr16
mov
iret
xor
stos
outsb
xchg
xchg
mov
mov
lret
jp,pn
mov
cmpsb
and
mov
andb
scas
jle
or
push
push
aaa
jg
pop
js
add
dec
aaa
sahf
jmp
je
pop
push
aaa
pop
jmp
stos
xor
pop
aaa
rorb
shll
hlt
pop
jl
and
push
sub
mov
fcomps
pop
mov
loopne
pop
push
loopne
in
fdivrl
pop
insl
fldt
cmpsb
es
mov
mov
cltd
mov
push
mov
std
aaa
leave
in
insb
ss
into
sti
sub
jnp
out
push
jns
push
jmp
notl
mov
pop
aaa
insl
das
jne
movsl
gs
aaa
inc
dec
fidivl
inc
mov
xor
mov
xlat
arpl
loop
loopne
mov
push
fdivl
shll
js
sub
inc
add
daa
pop
mov
xor
mov
aaa
jl
dec
push
or
int
aaa
add
jne
cmp
arpl
lcall
bound
mov
jge
xchg
scas
cwtl
mov
lods
mov
lret
lret
aaa
fstps
bound
sbb
mov
sti
enter
or
pop
aas
test
das
xchg
mov
add
test
shlb
jne
mov
rdpmc
jno
jle
mov
aas
push
int
cmc
xchg
in
mov
inc
push
xor
aaa
xor
jg
repz
or
or
pop
enter
pop
insb
jle
pop
xchg
mov
iret
lds
and
jl
lret
inc
inc
aaa
pop
or
sub
aas
xchg
aam
dec
scas
std
mov
lret
aaa
jge
scas
pop
push
or
push
mov
rcrb
aaa
dec
jne
ja
aas
push
lock
inc
shll
aaa
iret
divb
dec
add
or
xor
push
lock
jmp
lods
subb
aaa
cmpsb
sbb
cmp
mov
sub
sbb
repz
or
js
sysenter
sub
mov
out
shll
inc
ss
shl
repnz
cmp
pop
out
add
cmp
xor
dec
push
and
jecxz
jge
call
jno
popf
mov
sbb
mov
xorl
jecxz
mov
sbb
aaa
cli
scas
scas
test
inc
mov
flds
sbb
mov
aaa
mov
sahf
xchg
add
inc
sbb
pop
std
aaa
sbb
movl
pop
dec
push
scas
out
mov
ficoml
mov
mov
ljmp
stos
push
add
mov
jg
loop
loope
imul
mov
f2xm1
aaa
leave
mov
loope
out
mov
ret
add
push
cmpsl
mov
mov
xor
js
sub
movsl
inc
sbb
pop
fmull
out
shll
sub
sub
pop
pmaxsw
ret
mov
inc
int3
insb
stc
fldcw
out
aaa
clc
or
and
imul
ds
and
sub
mov
add
scas
adc
pop
mov
out
or
lock
mov
jecxz
fwait
lods
enter
ror
fbld
pop
je
mov
dec
jne
lock
loop
or
ftst
je
movsl
test
faddp
or
arpl
sbb
in
pop
out
xchg
push
inc
or
or
xchg
sbb
and
in
cli
repnz
sub
sbb
xlat
cmp
mov
dec
adc
mov
into
cltd
jno
sub
sub
std
push
test
adc
mov
clc
shlb
cmp
pop
rcll
dec
psubsb
sub
popf
js
int3
cmc
pushf
test
push
push
or
mov
mov
xor
outsb
mov
rcrb
aaa
jp
xchg
stos
push
les
loopne
push
xchg
xor
aaa
in
or
loop
gs
and
pop
mov
sbb
fildll
xor
arpl
jle
pop
lods
pop
inc
jecxz
aaa
dec
or
subl
aaa
gs
sbb
js
aaa
and
dec
push
aaa
sbbl
cmp
mov
xor
daa
divb
cs
clc
and
mov
in
stos
movsb
mov
mov
jno
push
imul
sarl
jno
adc
cmp
cmp
clc
inc
xchg
int
jl
lds
jecxz
cld
aaa
loop
call
insb
aaa
fcmovnb
cltd
and
lds
push
aaa
divl
and
xlat
mov
mov
adc
test
inc
dec
push
call
mov
inc
aaa
and
push
fiaddl
insb
add
sbb
cmp
push
mulps
icebp
cmp
mov
fnstenv
jne
loope
mov
adc
sbb
and
shrb
cmp
shll
cmpsb
and
inc
fiadds
jl
add
jmp
lcall
fs
adc
sub
mov
mov
test
jecxz
aaa
fcoms
jo
daa
lret
aaa
sub
bound
sar
addr16
add
mov
add
sahf
ret
pop
movsl
sub
sarb
into
divb
mov
mull
mov
mov
rcrb
aaa
or
aam
cmp
aaa
insl
pop
pop
outsb
xchg
sti
pop
ljmp
jbe
enter
stos
out
xor
jno
xor
dec
mov
mov
daa
ds
repz
xor
cmp
jns
aaa
pop
cmp
push
filds
push
aam
mov
mov
sub
test
xchg
shl
sub
aaa
sti
orl
ror
nop
pop
aaa
movmskps
pop
xor
push
ja
fists
sbb
add
ret
aam
add
mov
push
bndstx
les
arpl
aaa
loope
out
and
cmp
xor
and
enter
dec
xchg
jp
int3
mov
cs
jmp
pop
xchg
in
iret
test
cmp
xor
ret
rolb
xor
pop
push
mov
lds
adc
pop
push
push
cmp
ret
pop
sbb
sub
addr16
in
mov
push
daa
mov
inc
fidivl
push
pop
aaa
ret
sarl
subb
sub
out
inc
aaa
dec
mov
xchg
fisubrl
mov
add
cs
xor
aaa
mov
cli
xor
aaa
outsb
mov
mov
inc
fsubl
mov
pusha
sub
les
scas
push
fimuls
stos
aad
loop
or
lock
in
popf
ljmp
movsb
pop
jle
pop
les
stc
lahf
aaa
js
or
mov
xchg
loope
push
aam
aaa
mov
mov
mov
push
pop
dec
adc
mov
test
dec
in
lods
test
add
movsb
aaa
sti
mov
add
repnz
jnp
sub
aaa
sub
push
aad
push
aaa
xorl
outsl
cltd
mov
test
aaa
cli
in
xchg
mov
test
aaa
dec
mov
mov
mov
mov
inc
jecxz
cmp
sti
divb
stos
sbb
inc
xor
sbb
je
mov
sahf
das
add
aaa
out
call
sbb
in
dec
mov
in
aaa
repz
push
push
pop
and
loop
push
add
push
push
cmpsb
icebp
lret
or
cli
sbb
dec
call
inc
mov
aaa
fs
sub
xchg
pop
pop
outsb
mov
psubw
mov
mov
jno
xchg
ret
aaa
cltd
pop
nop
cmp
inc
adc
ja
mov
aas
add
sar
insl
sub
mov
frstor
mov
dec
iret
lods
ficoms
push
dec
pop
movl
mov
sub
test
cwtl
dec
mov
sahf
inc
mov
jns
loop
adcl
push
movsb
push
aaa
test
aam
inc
jecxz
aaa
call
and
xor
test
jno
inc
aaa
xchg
jb
dec
mov
add
aaa
mov
xchg
dec
enter
negl
cmp
adc
int
mov
icebp
push
ja
mov
out
adc
inc
jp
sub
movsb
and
ja
cs
ror
fwait
clc
and
xchg
daa
stos
lock
mov
add
pop
in
aas
dec
inc
adc
mov
outsl
inc
into
push
pop
xor
inc
fidivs
aaa
or
push
outsb
jbe
movsb
sarl
mov
mov
gs
repz
inc
insl
int3
aaa
mov
push
sub
mov
fs
jnp
and
into
ljmp
js
ja
sbb
gs
aaa
je
divb
cmp
jbe
cmp
pop
stc
aaa
sub
mov
xor
or
xor
xlat
daa
mov
add
add
xorl
push
and
aaa
cs
sbb
mov
and
mov
cmp
jle
jecxz
push
cmp
mov
pop
scas
stos
lret
add
adc
insb
je
mov
std
push
mov
cmp
cmp
jmp
adc
icebp
sbb
out
pop
test
aaa
fists
mov
stos
jbe
dec
out
mov
aaa
mov
adc
aas
les
repz
and
call
xor
aaa
mov
fmul
or
ja
or
hlt
sbb
sbb
jo
fstps
fmul
in
dec
pop
lcall
mov
lock
mov
sarb
test
ljmp
add
mov
sti
mov
test
icebp
mov
xlat
iret
pop
scas
mov
out
popa
cmp
mov
mov
idiv
gs
movaps
adc
jno
aaa
jmp
push
mov
aaa
loop
inc
xor
xchg
ss
mov
cs
cwtl
add
cmpsb
xorb
mov
loop
xor
sbb
dec
lock
lret
inc
or
mov
nop
std
and
fisttpll
fcmovb
je
fs
ret
mull
aaa
orl
push
or
dec
push
daa
popa
jmp
in
pop
stc
xor
xor
mov
es
pushf
aaa
push
pop
cmp
sub
std
mov
inc
jno
cmp
pop
and
fbstp
mov
in
xor
jmp
aad
pop
imul
jmp
mov
and
into
mov
shll
out
add
cltd
add
aaa
sub
jp
inc
les
sub
mov
and
adc
push
xor
aaa
jge
movsb
hlt
lcall
aaa
mov
scas
pop
adc
nop
in
enter
imull
testl
jmp
subb
scas
aaa
ljmp
subl
cmpsb
xchg
gs
bound
mov
into
lods
clc
mov
or
dec
dec
mov
sub
mov
xlat
aaa
ret
es
loopne
cmp
xor
iret
xchg
test
fadds
dec
xchg
arpl
jnp
aaa
push
cli
jle
or
xlat
push
aaa
pop
rcll
add
dec
inc
dec
pop
jno
xlat
lcall
stos
cmp
aaa
mov
js
ficompl
adc
arpl
aaa
mov
fistpll
sbb
cmp
insl
sub
and
and
cwtl
getsec
push
cmc
pop
fndisi(8087
stc
stos
adc
jne
xchg
test
mov
jmp
pusha
xchg
mov
push
push
cli
fidivrl
inc
pop
scas
ud1
push
jl
fcoml
push
out
orl
sub
popf
mov
jge
push
int3
jp,pt
xchg
cmp
std
mov
jmp
xorb
aaa
jo
bound
aaa
pop
lods
outsb
es
push
aam
iret
aaa
adc
mov
shll
mov
jl
clc
decb
mov
mov
inc
aaa
lods
scas
imul
inc
nopl
jmp
push
ja
xor
jle
cmp
sti
in
aaa
mov
add
and
mov
pop
dec
xor
sbb
ret
push
aam
xor
jecxz
sti
ss
movhps
aam
out
aaa
in
and
fldenv
cmpsl
aaa
push
fiadds
movsl
xor
sub
xor
mov
mov
push
xchg
js
inc
daa
aaa
and
fwait
jmp
std
ficoms
add
sbb
xor
fdivs
mov
sub
leave
pop
jbe
xlat
and
xchg
aaa
lods
imul
idiv
cmp
pop
aaa
push
sbb
stos
or
rorb
test
ficompl
stc
nop
fnstsw
aaa
loop
andb
out
aam
loope
xchg
push
lahf
cs
aaa
and
add
sets
mull
inc
sbb
daa
inc
sub
fstl
jge
push
inc
mov
es
mov
aaa
test
inc
loop
push
outsb
aaa
pop
pusha
inc
push
pop
xchg
or
adc
idiv
insb
jne
pop
fisubs
test
or
mov
xchg
lea
loop
stos
mov
negb
xchg
sahf
cli
adc
push
mov
les
aam
cmpsb
jmp
mov
sbb
dec
cld
mov
aaa
jnp
dec
or
cmpsl
insb
pop
jg
aaa
or
leave
inc
xor
and
and
jl
xchg
aaa
cmpsb
mov
adc
dec
repz
inc
aaa
in
inc
mov
push
or
xchg
fsubs
aaa
jmp
aas
ds
cmp
push
aam
int
or
mov
lcall
stos
fistps
loope
aaa
or
lea
dec
ficoms
pop
jle
cld
daa
leave
aaa
loopne
loope
mov
inc
aaa
dec
or
pop
push
jbe
aaa
xor
jno
call
xchg
test
cmpsb
dec
cli
sub
mov
cld
aaa
loopne
mov
jo
mov
mov
lahf
mov
xor
fs
pop
add
out
pop
pop
repz
pop
aaa
xchg
xchg
cs
dec
xor
aaa
pop
es
jnp
addr16
mov
jg
adc
dec
scas
or
in
sbb
xchg
mov
fstpt
push
inc
ss
push
fdivs
out
and
shl
mov
lahf
aam
xchg
cmp
call
sub
xor
aaa
test
or
sub
inc
cld
pop
lods
movsb
mov
mov
aaa
cmp
test
push
addr16
cwtl
je
into
shlb
and
mov
jno
jl
in
std
aaa
das
jns
pop
nop
ffree
lret
push
inc
lds
dec
lahf
fs
aaa
pop
or
mov
cs
push
aaa
insb
lods
inc
cmp
mov
jns
je
sub
sub
mov
lods
mov
lds
cmp
inc
hlt
imull
aaa
dec
test
and
ja
sahf
popa
adcl
cli
shlb
xlat
cmp
lret
aam
push
inc
mov
jg
aaa
jbe
sub
pop
pop
pop
cs
aaa
jl
pushf
xlat
jge
xchg
adc
cmp
xchg
cmp
pop
ds
cmp
rcl
aaa
test
es
inc
push
imull
cmp
popf
jmp
aaa
int
add
fs
mov
inc
sbb
dec
add
iret
jns
adc
imul
aaa
cmp
inc
in
aaa
mov
jecxz
test
dec
in
lgs
inc
sbb
sahf
mov
stos
call
jl
loope
dec
aas
clc
sbb
aaa
jno
and
jmp
sbb
das
mov
mov
into
negl
inc
mov
push
mov
jecxz
xchg
iret
mov
mov
xor
lcall
dec
mov
pop
movsl
sbb
push
mov
aaa
or
aam
aaa
add
sahf
aaa
adcl
sub
aaa
jbe
in
mov
push
fistpll
jnp
aad
dec
jge
inc
aaa
cmp
cmpl
sub
ss
aaa
inc
mov
popf
push
lret
std
inc
cmp
movsl
das
mov
data16
xchg
insb
adc
mov
mov
push
dec
in
inc
xor
clc
xor
cwtl
fwait
cmp
stc
and
lods
das
andl
les
lahf
or
jl
inc
or
pop
stos
aaa
jp
inc
iret
push
xchg
mov
fcoml
clc
fildll
jecxz
rol
add
jno
xchg
pop
out
adc
fwait
fisubs
mov
dec
fidivrl
and
mov
mov
outsb
aaa
popf
sbb
sub
int3
in
mov
fsubr
jns
outsb
mov
movsl
inc
jecxz
in
imul
adc
aaa
adc
aam
xlat
mov
jl
ficomps
in
bound
mov
aad
xor
pop
dec
aaa
add
gs
les
imul
loopne
jnp
notl
lods
adc
aaa
xchg
inc
xor
aaa
push
mov
aam
mov
aad
mov
mov
sbb
xlat
cmp
sub
andb
adc
or
shll
movsb
mov
fcmovne
aaa
or
fmul
aaa
sarb
push
jnp
stos
mov
mov
test
adc
or
mov
cs
int
or
and
aaa
or
push
stc
das
ret
outsl
xor
sub
insl
mov
fcoms
or
testl
or
test
cltd
dec
daa
cmp
aaa
shl
frstor
in
xchg
pop
aaa
xchg
and
inc
mov
xchg
aaa
or
sub
divl
aas
sbb
xor
mov
sbb
mov
add
or
dec
repnz
ja
mov
outsb
add
dec
aam
nop
clc
jp
push
aaa
push
out
sbb
and
negl
aaa
outsb
xor
mov
sbb
push
mov
andl
test
jnp
pop
movsb
xor
scas
lods
mov
cmp
pop
push
push
data16
add
xchg
icebp
lcall
pop
aaa
cltd
sub
and
mov
jae
loopne
addl
clc
cs
mov
aaa
aas
mov
icebp
or
in
pop
rorl
lret
sbb
aam
pop
pop
mov
add
sbb
cmp
rol
cmpsb
jno
aam
out
scas
sub
aaa
pop
popf
ja
fsubl
adc
sub
push
adc
arpl
jae
jb
shr
push
sub
dec
and
ret
in
pusha
and
or
sbb
call
mov
jno
push
jecxz
aad
push
shrb
fidivl
mov
pop
jae
fidivs
rcr
sbb
leave
dec
std
adc
pop
insb
and
mov
arpl
xchg
fldt
frstor
aaa
push
dec
fstps
je
jno
dec
dec
hlt
push
nop
ss
xchg
mov
push
xchg
fs
aaa
xor
pop
cmp
stos
pop
jno
cmp
cmp
push
jb
js
xor
mov
push
xorb
jmp
dec
push
jle
sbb
notb
jne
mov
arpl
mov
dec
push
sbb
and
mov
clc
stos
es
test
fistl
push
ret
lock
aad
cmp
fcoml
xchg
cs
jl
xchg
repz
addr16
loop
out
fs
add
inc
test
cmp
test
adc
ss
mov
sarb
mov
add
add
dec
cmpsb
cmp
and
in
insb
js
clc
push
rol
and
xchg
inc
int
and
out
add
push
xlat
frstor
outsb
pop
add
lods
push
sbb
lds
stos
inc
pop
comiss
out
sub
and
popf
aaa
or
daa
cmp
aaa
and
sti
wrmsr
and
aam
mov
and
xor
add
shlb
scas
sbb
mov
aas
shll
xchg
lret
xchg
xchg
and
sub
aaa
scas
repz
push
mov
cld
and
aam
sub
inc
test
paddusb
jne
adc
in
enter
cltd
inc
pop
xor
xor
das
hlt
add
scas
xchg
imul
sbb
bnd
fs
inc
cmpsl
mov
inc
inc
je
cli
cmp
jmp
adc
aaa
sub
xchg
push
push
aaa
lds
jbe
sbb
jecxz
aaa
xchg
xlat
int3
or
ljmp
fsubl
stos
pop
dec
fdivs
lock
push
rorl
bound
addr16
ljmp
push
jmp
enter
xor
mov
jge
nop
adc
adcb
xor
js
iret
inc
loop
paddsw
bound
adc
cmp
int
cmp
fdivrs
mov
stos
mov
cmp
sub
out
mul
xchg
aad
fs
push
das
or
pop
cwtl
push
add
loopne
mov
and
stc
aaa
or
dec
mov
fcomip
aad
icebp
rcrl
inc
repnz
push
cmp
pop
or
mov
in
push
daa
xor
adc
mov
aaa
sub
shl
xchg
mov
adc
sarl
jns
mov
adc
das
jge
add
div
fwait
xchg
data16
cmp
mov
movsl
push
shlb
cltd
pop
mov
or
lods
cmp
sub
orl
dec
pop
cmp
inc
cld
push
cmovge
cmc
pop
ss
jp
cmpsl
and
xchg
cmpb
cmc
sub
shlw
mov
jae
and
push
movsb
sahf
or
inc
sbb
xchg
pop
lea
aaa
push
pusha
scas
and
push
xor
sub
cmp
add
aaa
aam
adcb
imul
jmp
xchg
hlt
mov
mov
sub
test
shlb
ror
inc
xchg
lods
jmp
scas
out
fs
mov
jl
cmp
nop
mov
aaa
mov
push
and
aaa
stos
arpl
aaa
jp
into
mov
add
cmp
in
dec
or
mov
shlb
push
jp
pop
mov
aaa
loopne
mov
dec
lcall
xor
aaa
out
lock
inc
loope
imul
fnstsw
xor
mov
pop
je
dec
xor
test
lret
cmp
movsb
and
clc
mov
aaa
adc
dec
aaa
pusha
xor
inc
mov
fdivl
jecxz
sbb
jge
cmpsb
das
pop
and
push
push
mov
jb
inc
or
jecxz
aas
pop
xor
push
xor
aaa
mov
mov
stos
sbb
push
cmpsb
cmp
out
xchg
aaa
inc
xchg
mov
xor
fldcw
adc
cld
inc
clc
aam
ljmp
imul
in
sub
pop
fs
aaa
and
cmp
mov
xor
inc
xchg
pop
and
addb
lock
inc
test
loop
movsl
out
jne
push
arpl
imul
cmc
adc
xchg
es
push
aaa
repnz
inc
xor
mov
mov
das
and
or
jg
mov
incb
jmp
stos
jmp
sub
loopne
aaa
in
ss
aad
aaa
cmpsb
cmpsl
sub
ficompl
rclb
mov
fmuls
mov
inc
sbb
pop
dec
xchg
mov
aaa
adc
push
aaa
push
dec
pop
fbstp
in
aad
mov
mov
inc
sub
int3
movsl
cmp
lret
jnp
aaa
jno
shll
xorb
sub
fdiv
mov
stos
test
aaa
jb
out
jne
push
push
fnstenv
sarl
pop
loope
popf
adc
stos
mov
cmpsl
xor
jg
xor
mov
dec
mov
xchg
adc
cmp
mov
jno
mov
test
fmuls
aas
lods
enter
mov
sub
shrb
out
or
pop
mov
stc
push
aaa
or
aaa
fcompl
nop
fs
cli
aaa
call
inc
aad
aaa
mov
mov
test
sub
pop
and
aaa
jmp
and
lret
inc
imul
pop
xchg
unpcklps
es
stos
aam
lahf
mov
cwtl
push
leave
rcr
mov
adc
and
cld
mov
outsl
aaa
shlb
in
push
sub
stc
cmp
aaa
ss
cmpsb
cmp
or
sbb
cltd
mov
push
push
mov
movsl
das
xor
mov
pop
mov
pop
test
jbe
inc
cmovnp
cwtl
fisttpl
cmp
mov
mov
lahf
fnstenv
push
pop
movsb
aaa
mov
daa
xchg
jp
jb
sub
cmp
shlb
aad
mov
xchg
out
ret
lds
add
sub
cltd
mov
sbb
out
aaa
cmc
stos
xchg
push
jnp
int
aaa
adc
jmp
stos
jge
bound
or
pop
xor
lret
das
mov
sbb
pusha
jno
pop
push
dec
dec
ljmp
aaa
mov
lret
roll
std
xchg
daa
aaa
xchg
mov
lods
icebp
adc
cs
aaa
mov
jp
cmp
inc
sahf
add
repz
sub
mov
hlt
ret
lret
popa
mov
add
cmpsb
add
and
into
dec
pop
xor
mov
add
dec
loopne
sbbb
in
and
aaa
cmp
mov
lods
cmp
cmpsb
repz
ja
mov
cmp
mov
push
rsm
mov
ss
jbe
test
add
je
repnz
push
aaa
lods
fwait
cmpsl
mov
jnp
enter
cs
aas
adc
jae
sbb
mov
xchg
in
add
outsl
or
dec
add
add
les
fdiv
pop
loopne
and
xor
pop
mov
cmp
add
adc
repnz
aam
rclb
gs
cmp
push
and
mov
popf
pop
out
push
mov
cmp
nop
lahf
xchg
aaa
jg
jo
inc
adc
int
popa
idivb
push
leave
aaa
lock
test
dec
out
xor
call
cltd
sub
mov
aaa
mov
icebp
sub
add
mov
pop
jp
or
dec
fwait
xchg
cmp
mov
sahf
mov
shll
aaa
xchg
and
mov
add
xchg
fidivs
aam
repnz
pop
movsb
aaa
and
pop
push
cmp
push
mov
nop
sbb
inc
es
std
xchg
or
nop
stc
and
out
cmp
aaa
roll
in
lret
aam
shlb
test
sub
lcall
dec
test
cmp
popf
adc
fstpl
lret
cmp
adc
dec
jnp
lods
aaa
aas
xchg
lcall
push
adc
int
mov
push
adc
mov
sbb
sbbb
sbb
test
js
dec
push
dec
xchg
or
add
aaa
push
mov
aas
xor
mov
mov
mov
je
or
pop
mov
ja
push
imul
or
bound
je
mov
shlb
cmp
push
jbe
mov
xchg
inc
movsb
add
jmp
push
sbb
dec
inc
mov
imul
aad
es
sbb
jb
mov
outsl
jg
inc
push
xchg
and
cmp
bound
push
frstor
push
dec
aaa
sub
mov
hlt
sti
jle
ds
aaa
lock
cmpsb
or
aaa
adc
dec
outsl
fs
stos
aaa
pusha
mov
pushf
mov
ret
inc
mov
and
push
aad
lret
clc
xchg
pmulhw
cmp
ffree
mov
sbb
lods
mov
ds
pop
pop
mov
aaa
sub
mov
and
add
inc
xchg
jmp
aam
cmp
mov
sbb
mov
out
cmp
aaa
pop
cmp
xor
ds
mov
fadds
fucomp
test
pop
shlb
adc
mov
and
andb
adc
fwait
imul
sbb
call
inc
bound
aaa
sbb
pop
dec
divb
mov
sbbl
shll
aaa
aam
dec
pop
pop
sub
aaa
push
cmp
aaa
js
push
mov
aaa
xchg
insb
je
fs
mov
adc
iret
loopne
cwtl
call
mov
pop
not
cmpsb
vrsqrtps
aas
incb
sub
sub
cmp
dec
sbbb
aaa
pop
or
pop
push
js
shlb
dec
shrl
repnz
xor
sbb
mov
push
inc
sarl
pandn
jmp
aaa
xchg
push
adc
repnz
fwait
out
jmp
rorl
fwait
adc
enter
ja
repz
mov
stc
das
aaa
xchg
mov
push
aaa
pop
xorb
dec
add
pop
aaa
stc
dec
pop
sbb
inc
or
cmp
jne
pushf
je,pt
mov
jno
cmpsb
mov
sbb
cli
cmc
movl
push
sub
fwait
sbb
mov
inc
push
or
adc
and
ss
imulb
fwait
aaa
cmp
popa
loop
aaa
push
jp
jb
lcall
enter
or
xchg
cmp
add
push
cmp
add
pop
into
jbe
mov
or
dec
push
call
fwait
adc
jb
popf
in
xchg
int3
xchg
cmc
insb
fs
aaa
mov
std
mov
aaa
shrl
imul
sahf
push
xor
sub
sete
loopne
in
aam
mov
js
xchg
dec
mov
push
xlat
dec
and
sub
stc
xor
push
dec
aaa
imul
mov
mov
adc
mov
lret
cmp
inc
sbb
insb
sub
xchg
inc
sbb
in
das
or
aaa
jge
jg
xchg
fwait
mov
aaa
mov
xchg
mov
icebp
daa
dec
cwtl
add
lock
jnp
pop
hlt
js
jb
and
aaa
sti
inc
ljmp
shrl
push
daa
je
dec
add
dec
int
enter
pop
stos
cmpsl
jmp
push
aaa
pop
xchg
dec
scas
add
pop
mov
cmp
xchg
les
ds
scas
mov
xor
xchg
fwait
jecxz
push
fs
mov
repz
insl
add
or
dec
xchg
mov
ret
jp
aaa
stos
aam
pop
push
push
xor
mov
loop
std
push
dec
jnp
fisubrl
mov
pop
fwait
and
push
inc
adc
cmpsb
sub
loopne
int3
mov
mov
ret
lods
mov
lock
dec
inc
push
xor
mov
je
mov
and
aaa
ss
lret
cmpsb
pop
popf
pop
cmpb
fbld
and
push
aaa
pop
dec
lret
iret
loope
cmp
mov
jb
cmpsb
mov
inc
jle
rol
es
and
into
inc
jmp
inc
xor
cmp
cmpsl
adc
jno
jl
sub
aaa
xchg
add
aaa
push
jne
add
outsl
das
aas
sbb
test
xor
arpl
punpckhbw
fs
or
loopne
and
xchg
xorl
aaa
xchg
ret
xor
nop
cmpb
aaa
fstps
out
dec
cltd
cmp
cmpl
arpl
xor
es
and
mov
or
js
int3
mov
in
aaa
movsl
fsub
repz
mov
icebp
test
cmp
mov
sub
and
cmp
push
mov
aaa
mov
push
inc
ds
add
imul
jbe
loope
std
xor
in
cli
mov
aaa
repz
dec
sub
jne
cmpsb
test
jle
mov
cwtl
mov
mov
sub
xchg
dec
jb
jne
imul
inc
aas
movl
scas
cmp
mov
push
data16
out
push
ds
jno
adc
ja
jecxz
lret
aaa
xor
push
in
add
aad
lret
mov
inc
bound
fisttps
mov
add
aaa
cmpsl
xchg
push
cmp
aaa
sahf
rorb
mov
cmpsl
dec
mov
cmpb
loopne
mov
add
push
loope
add
pop
add
mov
pop
das
add
jp
lcall
adc
aaa
test
lds
lods
andl
xor
pop
shl
aaa
xlat
movsl
iret
repz
out
cmp
mov
add
notl
cmc
xorl
std
mov
ret
push
jae
and
xchg
popa
mov
or
cwtl
fs
enter
and
or
mov
mulb
mov
inc
ds
sub
aaa
inc
ljmp
es
out
mov
pop
sub
subb
cmp
push
daa
and
enter
sbb
cli
or
mov
lods
cmp
and
mov
lock
sar
repnz
mov
dec
ret
loopne
adc
aad
push
adc
add
and
aaa
mov
mov
int3
adc
rolb
lahf
jge
sbb
mov
and
out
adc
cmp
mov
jmp
mov
into
mov
cld
daa
fcmovnu
cmpps
mov
and
mov
mov
jl
push
popf
test
rcr
mov
sub
adc
jno
inc
jne
rcrb
push
pop
push
push
cmp
insl
cs
pop
pop
and
adc
scas
jns
jo
xlat
mov
out
push
test
rclb
pop
and
or
push
or
push
mov
jb
rcll
subl
xor
mov
dec
aaa
fidivs
sti
scas
push
jbe
aaa
push
jg
xchg
pop
mov
jno
push
lods
mov
xchg
or
xor
idivb
xor
push
dec
adc
or
or
insb
repnz
aaa
sbbl
es
not
dec
push
sbb
adc
jbe
push
and
pop
and
repnz
push
je
inc
adc
fbstp
xchg
nop
cmp
pop
int
xchg
rdmsr
mov
dec
aas
jae
add
mov
test
movsb
outsl
aaa
pop
pop
cmp
xor
aaa
ss
cwtl
sti
aas
repnz
mov
add
nop
mov
call
popf
test
aam
lea
xchg
bswap
scas
sahf
mov
xchg
aad
imul
std
inc
pop
xchg
and
jno
aaa
int3
in
cmpl
and
cmpsb
mov
xchg
aaa
inc
mov
inc
and
dec
int3
addb
data16
imul
ret
mov
arpl
sub
push
mov
shl
mov
adc
into
jne
jne
pusha
test
adc
lds
mov
adc
dec
xchg
dec
adc
pop
aaa
add
in
cltd
pop
neg
inc
add
mov
pop
hlt
push
es
adc
inc
xor
pop
leave
xor
aas
aaa
nop
cmp
es
sub
jb
test
lret
in
repz
push
and
mov
jae
aaa
imull
xchg
ret
mov
sti
jns
stos
xchg
xor
aaa
enter
mov
xor
outsb
mov
pand
jne
test
cmp
jl
adc
push
cmp
fcoml
fisttps
adc
pop
cmpsb
pop
jne
and
jp
push
sbb
cmp
pop
aaa
rclb
sbb
jb
aaa
add
pusha
test
sub
aaa
inc
idiv
xchg
pop
repz
test
cmp
shlb
and
loop
insl
push
negl
pusha
pop
dec
xlat
aaa
inc
rcl
in
cld
jge
sbb
pop
cmp
arpl
js
movsl
shl
inc
inc
push
mov
push
mov
xor
aaa
data16
or
inc
mov
or
in
loop
dec
cmpsl
jecxz
or
xchg
aaa
movsb
icebp
ret
jg
cwtl
shll
cli
lcall
jno
push
xlat
mov
lret
pusha
pop
dec
xchg
aaa
ljmp
push
sub
loopne
ret
movsl
inc
fs
aaa
pop
cmp
xchg
adc
lods
mov
push
xor
xchg
dec
adc
dec
mov
aaa
shrl
pushf
adc
mov
adc
and
sub
popa
mov
jne
pop
aaa
mov
sub
aam
mov
dec
repz
adc
getsec
xor
sbb
mov
push
jnp
xchg
sbb
adc
jb
movsb
dec
and
es
aam
jbe
call
push
stos
je
mov
aaa
dec
mov
lret
mov
inc
lcall
into
aaa
int
leave
fisttpl
jle
aaa
dec
xorl
inc
jo
mov
add
push
inc
or
and
aad
shlb
jg
xchg
andl
cmp
fmuls
mov
mov
cmp
cli
mov
mov
sub
jg
std
inc
arpl
mov
pusha
je
adc
lcall
stos
addr16
and
int3
pop
cmpsl
or
jae
int
cmp
fwait
stc
xchg
cmc
inc
pop
rclb
mov
shrb
setbe
push
add
addr16
cmp
push
in
sub
rcll
aaa
out
mov
inc
pushf
aaa
ljmp
jns
pop
mov
aad
ror
jle
sbb
jmp
pop
push
test
dec
fmul
aaa
push
jp
sub
orl
push
pop
add
cmp
inc
loop
mov
cmpsb
push
test
sub
aaa
imul
sti
aaa
popa
dec
ljmp
mov
jge
dec
dec
xor
les
pop
cmp
aaa
pop
lods
jl
bound
mov
ljmp
je
pop
xor
or
and
sti
test
mov
loope
dec
add
in
add
add
cmp
mov
mov
mov
adc
enter
or
mov
cmp
fidivl
shll
insl
ret
cs
inc
cmp
push
sub
or
mov
xchg
xor
sahf
push
aaa
jp
jl
pushf
add
aaa
push
sub
js
dec
pop
and
adc
mov
cwtl
sbb
out
cmp
movsb
xlat
xorb
dec
lret
call
jge
cmp
pop
push
xchg
cmp
adc
mov
sbb
inc
lea
ss
mov
aaa
idiv
aam
jbe
xlat
insb
aaa
pop
push
fsubrs
pop
jmp
aaa
pop
pop
cmpsl
insl
aam
or
rol
aaa
icebp
inc
push
and
push
mov
jmp
popf
pop
sub
xchg
adc
fwait
adc
insl
shll
dec
xor
inc
bnd
aaa
mov
sbb
add
rorb
push
push
xchg
mov
aaa
es
mov
stc
sbb
pop
imul
imul
or
lods
jmp
test
xchg
xchg
aaa
push
mov
or
sbb
pop
fst
mov
clc
mov
inc
xchg
push
fnstcw
xchg
push
xor
xlat
std
and
aaa
mov
lods
sbb
push
aaa
jbe
xchg
sub
stc
lcall
sub
push
aaa
repnz
cmpsb
pop
mov
inc
sbb
nop
clc
lret
aaa
inc
jl
mov
aaa
gs
mov
aaa
into
aad
pop
pop
lods
in
aaa
inc
pop
adc
jmp
das
enter
push
inc
dec
js
sub
cs
pavgw
xchg
inc
pop
movsl
adc
frstor
jno
mov
jge
mov
add
aaa
rorb
jbe
pop
sub
aaa
iret
sub
and
aaa
and
rolb
xchg
mov
into
cmc
add
test
xorl
ret
jle
imul
xlat
jns
sahf
sysret
incl
cmc
mov
pop
imul
inc
mov
cmpl
sbb
fwait
popa
pop
std
popf
jg
movaps
das
jae
out
mov
fsubl
int
xor
pop
jge
dec
sahf
or
mov
pop
and
loope
mov
sub
shlb
adc
mov
scas
aaa
add
aam
enter
into
fmull
aaa
sub
or
gs
out
cli
aaa
mov
inc
cmpsb
aaa
flds
cmpsl
push
pop
mov
or
and
mov
or
aaa
loop
push
popa
je
xchg
mov
fmulp
jle
pop
mov
loope
scas
sti
outsb
jae
mov
cmp
and
cwtl
dec
hlt
aaa
sti
stc
or
or
jbe
mov
sysret
lods
das
in
jecxz
inc
inc
aaa
lds
or
aaa
cmc
push
in
ja
jno
inc
aaa
pop
fsubrs
dec
shll
push
push
ja
aaa
aas
data16
les
sti
call
clc
jg
add
pop
cmp
les
push
push
push
pop
mov
sti
aaa
aas
daa
pop
adc
jbe
jecxz
dec
dec
sbb
mov
add
mov
push
xchg
push
aaa
sub
cmp
aaa
cwtl
enter
jg
sbb
xor
icebp
or
cltd
push
mov
sbb
jo
ss
sahf
arpl
into
xor
aaa
inc
mov
mov
mov
aaa
xchg
daa
adc
scas
mov
or
in
add
xor
outsb
add
mov
pop
sbb
dec
into
sbb
jge
shr
mov
fdivr
aaa
or
cmpsl
repnz
out
inc
jno
push
jb
lds
dec
int3
into
ficoml
push
jno
jae
fdivl
ss
jno
xor
test
pop
fcoml
push
aad
cmp
jge
mov
cmp
ljmp
stos
lock
adc
xor
loopne
mov
xchg
lret
cmc
sub
mov
stos
mov
adc
xor
in
aaa
es
lds
in
arpl
sub
xchg
jb
aaa
push
cmp
loop
mov
test
aaa
fs
movsl
push
push
in
cmp
fdivrp
jno
aaa
call
mov
shlb
sub
ss
cmpsb
aaa
inc
imul
mov
mov
shll
flds
and
mov
ret
sbb
and
inc
adcb
aaa
sbb
cmpsb
and
and
and
xchg
clc
mov
cli
mov
push
and
into
sti
push
aaa
jmp
mov
dec
cmp
pop
xchg
repnz
outsl
out
pusha
push
cmp
mov
js
mov
push
les
aaa
cs
and
sti
sahf
push
mov
sub
imul
divl
fldl
inc
push
xor
adc
sub
lahf
mov
cmp
xchg
pushl
mov
add
repz
jb
xchg
inc
fcmovnbe
cmp
adcl
movl
cwtl
out
mov
dec
outsl
jp
imul
mov
xchg
test
push
test
push
es
dec
sbb
aaa
loop
sbb
fdiv
scas
aaa
nop
push
ror
in
iret
jge
aaa
pop
jmp
dec
add
pop
push
jo
shlb
fcompl
dec
push
movl
xor
pop
pop
aaa
lahf
push
push
sbb
lcall
sahf
mov
cwtl
xor
mov
outsb
vhsubpd
pop
mov
jp
ja
mov
add
ret
xor
icebp
test
inc
cltd
loope
cmp
into
pop
mov
inc
mov
pop
movb
fisubl
imul
lret
xchg
stos
sub
fs
xlat
lret
and
or
sbb
test
xchg
aaa
nop
sbb
add
dec
add
pop
mov
aaa
xchg
mov
shlb
and
arpl
lret
push
insb
insl
aaa
sbb
iret
and
adc
loope
inc
or
rorb
xchg
mov
mov
add
fnstenv
pop
push
cli
aas
inc
cmp
xchg
jno
cs
fwait
mov
mov
ret
xor
inc
xor
pop
in
pop
jae
pop
pop
xchg
xchg
cmp
lods
rcrb
mov
data16
add
aam
iret
test
fsubrs
mov
push
out
aaa
adc
notl
outsb
test
push
pop
mov
dec
stos
mov
clc
lds
push
sti
shlb
cmp
rcrl
data16
pop
ret
call
pop
push
in
cmp
jnp
pop
mov
adc
in
aaa
or
dec
insb
pop
aaa
gs
lcall
nop
jge
xchg
push
js
pop
jae
cmpsb
mov
and
lods
inc
adc
pushf
shlb
xchg
leave
inc
add
lock
sub
jno
jae
push
ja
out
js
inc
adc
jmp
enter
xor
cmp
push
mov
jl
pop
add
stc
pop
cmp
repz
mov
aaa
and
js
cld
pushf
imul
popf
or
mov
rcrb
jecxz
mov
push
aaa
test
cmc
add
dec
bound
add
roll
or
xchg
adc
cmp
sub
insl
xor
cmc
fs
add
mul
lret
sub
mov
pop
aad
ss
movsb
mov
aaa
aad
popa
jle
shll
popf
xchg
inc
cli
fdivrl
sti
push
aaa
mov
stos
xchg
mov
imull
and
pop
dec
adc
mov
mov
repz
cmp
xchg
aas
fidivrl
cwtl
sub
inc
or
fcmovne
pop
je
les
fisttps
jecxz
clc
popa
add
addr16
push
std
es
or
fcom
push
aaa
xlat
add
mov
mov
dec
pusha
and
sahf
int3
mov
pop
add
lret
dec
or
xor
outsb
cld
fldcw
xchg
inc
dec
sub
pop
enter
ss
cltd
bound
in
aaa
mov
jmp
cmp
and
xor
aaa
bound
pop
and
jl
rcll
in
test
add
mov
pop
dec
out
es
sbb
loope
psraw
mov
popf
inc
push
aaa
sahf
movsb
loopne
mov
ljmp
lret
test
in
add
sbb
add
jnp
test
mov
lahf
add
cmp
xchg
xchg
shlb
ds
xlat
loope
shrb
and
aaa
pop
ljmp
sub
mov
sbb
insl
sbbl
aaa
in
and
call
adc
fs
jne
popa
insb
lcall
data16
or
xchg
and
test
sub
xlat
movsb
shrb
aaa
adc
dec
push
mov
daa
lds
dec
mov
mov
add
jbe
fadd
subl
add
adc
enter
out
cld
aaa
adc
inc
add
aaa
cmp
push
and
mov
enter
std
out
aaa
fs
pushl
jmp
decb
xor
mov
xchg
out
les
out
aaa
nop
jb
pop
xchg
imul
cmpsl
mov
dec
rolb
fnstsw
xchg
aas
sub
xlat
aaa
pusha
dec
test
push
or
les
fsubr
clc
lods
sbb
cmp
cmp
das
xchg
ret
std
push
inc
aaa
jno
mov
mov
incl
ret
mov
aas
adc
aam
sbbl
fsubl
aaa
sub
lds
aaa
add
test
cmp
cmp
aaa
mov
call
and
mov
out
outsb
xor
mov
bound
adc
and
out
sub
mov
sub
arpl
sarl
jg
jmp
dec
aad
add
test
mov
aaa
ret
pop
inc
aam
xor
or
pop
mov
dec
xlat
fldenv
add
cli
pop
lods
test
inc
andb
jo
push
rcrb
aaa
insl
sahf
imul
rcr
popf
lret
in
pop
xchg
and
scas
fnstsw
jecxz
not
int3
imul
das
aaa
imul
dec
or
xorl
ds
aam
stos
jnp
cmp
xor
push
push
scas
lea
mov
insb
loope
fcomps
mov
dec
shrb
lock
inc
jb
sbb
inc
mov
jbe
xchg
sub
adc
dec
hlt
jnp
dec
mov
pop
pop
mov
ret
or
iret
lods
aam
mov
mov
inc
bound
mov
and
hlt
rorb
xor
xlat
rcrl
aaa
cmpsb
or
dec
fwait
xchg
shrb
jns
adc
inc
mov
pop
xchg
inc
call
pop
mov
mov
mov
push
aaa
lds
mov
lcall
hlt
push
gs
jl
jo
cmp
mov
test
cld
mov
inc
xchg
aaa
push
and
ljmp
adc
dec
jl
jge
popf
shl
int3
sub
and
into
lret
std
sahf
mov
mov
inc
out
xchg
lock
sarb
subb
sub
pop
sbbl
aaa
jmp
ja
rorl
adc
push
imul
aaa
fidivrs
jg
lahf
aaa
xor
movsl
outsl
adcl
mov
ds
data16
mov
push
sbb
xor
imul
mov
add
aaa
mov
bound
ljmp
xor
insl
in
pop
sub
aaa
cmp
mov
push
and
ja
shl
aaa
or
pop
rorb
imul
test
gs
sub
and
adc
cltd
sti
or
aad
aaa
mov
lods
cmp
pop
addr16
nop
lret
adc
adc
mov
push
adc
jae
xor
testb
and
xor
inc
addl
cmp
xor
cmpsb
movsb
ret
icebp
bswap
dec
and
add
rcl
pop
fisttpll
cs
aas
daa
jae
push
rolb
cs
jg
inc
test
mov
in
xor
std
xchg
mov
divl
mov
rol
push
xchg
push
leave
in
aaa
xor
pop
inc
mov
dec
ss
xor
push
mov
jmp
ljmp
dec
mov
mov
push
cmpb
pop
outsb
adc
and
sti
add
xor
imul
inc
dec
mov
xor
mov
aaa
subb
push
or
loope
aaa
scas
scas
repz
xchg
mov
xchg
insl
sub
aaa
mov
in
aad
and
test
sub
ja
stos
lods
push
mov
dec
xor
mov
ret
popa
jg
dec
lods
or
test
lret
out
jecxz
jb
lcall
and
psubusw
mov
data16
cmpsb
and
push
sbb
scas
jmp
adc
sarb
pop
or
adc
push
in
andl
mov
mov
mov
mov
dec
movsl
sti
aaa
mov
sahf
aaa
dec
testl
aaa
sub
and
das
aas
push
aaa
or
jmp
adc
mov
fldt
jmp
and
or
movsl
ror
ja
xchg
rcrl
push
stos
or
cwtl
add
inc
pop
sub
clc
pop
movl
mov
fiadds
test
cmc
insl
xchg
cli
mov
repnz
jo
daa
mov
mov
push
std
setns
orb
mov
daa
or
and
xchg
scas
cs
adc
mov
sahf
mov
outsl
jge
aaa
fmull
lahf
add
insl
aaa
pop
push
cmpsb
sub
std
cmp
sbb
add
aaa
xchg
mov
cld
je
aaa
dec
stos
mov
subl
shlb
or
aaa
test
stos
dec
mov
sub
sub
add
inc
jne
das
aaa
mov
pop
push
movsl
popf
outsb
lods
add
clc
test
jge
sbb
sbb
aaa
lods
adc
ja
sbb
mov
add
pushf
les
divb
shll
pusha
mov
mov
je
les
add
and
pop
insl
pop
jne
or
fsubs
btc
int
xor
inc
dec
pop
dec
xchg
sbb
pop
test
rep
xchg
aaa
ljmp
xchg
loop
jmp
cmp
stc
aas
pop
aaa
and
pop
aaa
cmp
mov
jg
xlat
and
pusha
inc
xor
daa
mov
cld
cmpsl
mov
pop
mov
or
sub
aaa
adc
cmp
sub
mov
test
cmpsb
mov
icebp
sub
sub
aaa
jmp
mov
dec
and
int3
cmp
mov
je
sbb
lret
rolb
mov
dec
adc
jae
cmp
stc
aaa
dec
aas
mov
cmp
ds
lock
cmp
push
lcall
cli
out
sub
aaa
lds
mov
popa
fldl
jne
pop
or
push
or
jns
aaa
xor
jo
sub
aaa
scas
sahf
movsb
mov
nop
pusha
test
lods
cmpsl
sub
std
mov
scas
add
aaa
pop
scas
sbb
ret
rcr
and
xor
or
test
js
xor
clc
sahf
cmc
inc
in
aaa
les
lcall
push
pop
xchg
sahf
daa
int
dec
push
inc
jp
pop
les
aaa
cli
jno
jecxz
pop
mov
aaa
mov
in
mov
sbb
push
loope
pop
jp
mov
arpl
push
rcrl
mov
cmpl
xchg
leave
jb
jno
push
pusha
jbe
cmp
out
and
jae
pop
cld
mov
or
inc
fld1
jo
aaa
mov
lea
push
mov
testl
mov
pop
test
js
push
stos
lds
lods
jo
cmp
push
jb
sbb
xchg
shl
jge
sbb
mov
adc
adc
or
lock
mov
test
daa
js
add
add
in
mov
push
das
bound
jae
and
rolb
lods
cmp
aad
outsb
mov
repnz
pop
mov
fimull
fsubp
aaa
les
out
or
adc
dec
push
cmc
pop
xchg
aaa
in
adc
sti
jb
and
hlt
divb
clc
push
aaa
pop
add
xchg
mov
dec
adc
xchg
ret
fstp
lret
mov
sbb
xchg
aaa
out
mov
pop
jno
adcb
push
ja
cmp
mov
out
and
dec
aaa
mov
das
jne
aaa
leave
xchg
cmpsb
lds
aaa
add
dec
ljmp
js
lods
aas
push
mov
ret
pop
fmull
mov
pusha
out
lahf
loope
xor
cmp
inc
sahf
les
aam
dec
cmp
and
push
inc
and
adc
mov
mov
xchg
aaa
inc
andl
mov
xor
pop
daa
push
loopne
insb
imul
add
sar
lds
test
daa
cmp
add
xchg
adcb
out
clc
imul
push
jmp
jmp
out
aas
lret
data16
inc
mov
cmp
in
shrl
pop
mov
cmp
fxch
inc
hlt
and
aaa
add
loop
xchg
sub
sub
fs
popa
iret
ja
push
cmp
clc
repnz
xchg
or
pop
mov
pop
aaa
movsl
push
jbe
out
add
mov
aas
loope
xchg
test
adc
pop
aaa
imulb
movsl
mov
and
int
or
call
sbb
mov
and
cltd
stc
jg
mov
iret
xor
cmp
push
or
aaa
sbb
jecxz
push
test
lret
outsl
adc
xor
mov
dec
mov
adc
insl
mov
inc
popa
jo
js
lock
sahf
call
scas
xor
and
movsl
sbb
aaa
xchg
sbb
je
imull
mov
add
cli
aaa
jnp
ror
xchg
out
jns
inc
fidivl
push
dec
mov
mov
xchg
xorl
inc
aaa
test
scas
or
mov
aaa
mov
pop
adc
lcall
int
aaa
sbb
xchg
add
test
ffreep
fs
clc
push
fsts
icebp
ror
cwtl
insb
cmpsl
sbb
loopne
aaa
jnp
jl
subl
adc
pop
adc
into
push
enter
fdivl
out
outsb
cli
jle
xlat
es
in
sub
cld
or
pushf
inc
scas
and
dec
jmp
mov
sahf
aam
stos
aaa
mov
cld
pop
xchg
mov
aaa
pop
out
in
enter
aaa
pop
and
iret
dec
cmp
xadd
lcall
pop
pop
push
add
aaa
adc
mov
out
repnz
adc
mov
rclb
aaa
cmp
shrl
mov
lds
enter
fs
sahf
mov
inc
push
push
test
popf
jbe
imul
fdivr
shl
stos
sub
shlb
jbe
mov
cmpsb
push
mov
mov
push
rcrb
icebp
daa
sahf
cwtl
rcrl
ficoms
sub
mov
pop
jle
insl
in
loop
imul
roll
and
pop
lods
ds
ret
leave
test
mov
push
inc
aaa
mov
or
loop
jge
cmp
jno
aas
push
xchg
inc
aam
repnz
or
sub
out
adc
push
or
js
xchg
cwtl
cld
add
mov
mov
cmp
fdivrl
shlb
aaa
push
scas
into
aam
bound
or
idiv
lahf
shlb
mov
pop
or
pop
popa
sti
mov
lret
jns
pop
and
cwtl
or
pushf
test
jno
les
or
dec
aaa
andb
popa
bound
mov
lock
enter
divb
push
test
or
pop
xor
mov
jno
adc
xchg
mov
xor
call
add
scas
pop
adc
shlb
ret
or
popa
mov
cmp
add
mulb
jae
mov
dec
scas
and
loop
stos
add
add
nop
ret
pop
movl
imul
and
push
filds
stc
aaa
lods
mov
dec
pop
or
add
fcomps
xchg
cltd
data16
outsb
fstpl
xchg
lods
push
jmp
pop
pop
imul
add
or
sub
aaa
leave
cltd
lods
sbb
pop
inc
fcoml
std
je
mov
aaa
sub
jo
lcall
stos
add
ja
push
fimull
loop
adc
lahf
cmp
aad
or
xchg
jmp
add
adc
sbbb
lock
aaa
jb
pop
out
sbb
xchg
and
mov
fdivrs
lcall
xchg
pop
sub
fmull
stos
cmpsb
sub
data16
in
push
out
popa
clc
cmp
dec
aaa
notl
icebp
cld
aaa
xor
aam
movsbl
and
xor
aaa
xor
mov
add
push
xor
push
js
pop
lods
ja
aaa
outsl
in
lock
push
sub
xor
pop
fimull
inc
mov
bound
push
les
fisubl
mov
and
ja
mov
filds
outsb
out
test
xor
cmc
add
pop
aaa
pop
scas
jnp
outsl
jb
jmp
leave
push
xlat
mov
pusha
jg
and
pop
icebp
and
aaa
and
dec
sbb
mov
mov
data16
sti
inc
mov
ja
sub
mov
pop
aaa
adc
daa
mov
jns
aaa
add
mov
aaa
xchg
shlb
xchg
ret
jne
test
lret
push
into
imul
add
cmp
iret
sub
lret
aaa
xlat
cli
and
lock
cmp
or
pop
std
inc
mov
push
fnstcw
movsl
in
and
pop
int3
add
xor
and
xorl
sbb
and
and
mov
ds
leave
aaa
std
pop
aas
cmp
ret
sbb
div
adc
jne
shll
mov
push
and
imul
jb
mov
xor
sbb
push
in
sub
aaa
pop
pop
xor
and
lret
scas
sub
sub
sbb
xchg
das
fdivrl
mov
loop
popa
es
sti
dec
aaa
int
xor
fwait
mov
jno
inc
sub
mov
scas
rcr
aaa
add
movsb
add
sbb
add
and
bnd
testl
cmp
mov
mov
xor
pop
jno
sbb
mov
insb
popa
aaa
push
lret
lret
nop
in
aaa
mov
inc
sarl
fnstenv
cmp
mov
mov
push
lea
out
in
cld
xorl
stc
mov
test
or
pop
rol
xchg
popa
and
cmp
xor
aaa
cli
fwait
jle
lret
cmpsb
aaa
aam
nop
lcall
aaa
sti
push
xchg
popl
outsb
cld
das
out
mov
jle
mov
aaa
je
lods
cltd
dec
out
add
add
sbb
mov
cli
mov
icebp
xchg
in
cld
cmp
jl
aaa
cmp
jo
inc
aam
or
lahf
dec
mov
outsl
cwtl
and
lock
fistps
fnsave
cmp
mov
xor
pop
sub
cmp
cmp
aaa
sbb
jns
inc
xor
sbb
test
aaa
sub
pop
stos
xorl
mov
repnz
je
and
imul
add
and
repz
push
stos
pop
icebp
or
jne
movsl
aaa
scas
sub
pop
int
xchg
or
adc
adc
rorb
or
aad
aaa
les
fwait
movsb
aaa
jg
or
adc
pop
sbb
push
mov
aaa
mov
xor
insl
mov
inc
xchg
and
enter
mov
mov
or
adc
pusha
lock
lcall
int
mov
in
mov
mov
test
cmp
cs
sarb
xchg
out
sti
mov
mov
cli
lret
stos
mov
ss
fistps
rol
aaa
sub
xchg
jp
rcrb
aaa
jo
mov
xchg
aaa
cmpsb
bound
addl
and
test
ja
jl
aam
adc
dec
jne
mov
scas
test
add
orl
and
push
ds
movsb
jne
stos
aam
stos
add
mov
cmp
jg
aaa
in
sti
dec
cmp
out
insl
mov
dec
outsb
jmp
insl
sub
lret
mov
push
add
push
mov
sub
loop
stos
cmpsl
mov
mov
cmp
add
test
aaa
sub
outsb
shr
int3
adc
ffreep
stc
lcall
xchg
js
sub
fimull
cs
xor
filds
and
test
loope
out
aaa
pop
nop
adc
repnz
fmuls
mov
xor
lds
add
imul
frstor
sub
lods
in
nop
push
pop
divl
out
pop
jno
cmc
xchg
loope
jno
and
and
pandn
into
clc
adc
ds
pop
and
cmp
ss
into
arpl
and
aaa
adc
adc
xor
inc
cld
stos
clc
pop
add
cmp
insb
jl
mov
cltd
lock
fstps
mov
adc
je
call
notb
pop
add
arpl
lds
sti
pop
lcall
xchg
imul
inc
stos
in
adc
sahf
in
cs
xor
test
cli
add
inc
repnz
addr16
out
imul
aaa
ljmp
iret
jge
fnstcw
push
int3
divl
mov
loop
sti
call
ja
jb
movsb
push
aaa
scas
and
and
stc
lret
ret
xlat
xor
xor
in
pop
sbb
add
jg
pop
inc
shll
inc
sub
aad
jno
cli
xor
mov
aaa
cmc
div
xor
roll
repz
cld
lods
aaa
pop
adc
mov
lods
stos
adc
mov
pop
jne
mov
and
sti
int
xchg
call
push
ja
adc
out
out
jl
cmpsb
sub
cltd
jns
imul
adc
test
ret
aaa
cmc
les
cmp
pop
push
and
jle,pt
mov
cmc
notb
lods
inc
insl
cmp
adcb
aam
xor
mov
pop
stos
push
sbbl
loop
lods
mov
aaa
sub
mov
mov
aaa
shrl
imul
jbe
cld
cmp
xchg
xchg
ret
iret
cmp
and
adc
and
dec
push
aaa
imul
mov
sub
cwtl
pop
add
je
dec
xorl
aaa
pop
mov
rcrb
insl
fdivrp
mov
out
popa
push
pop
dec
jle
push
push
mov
aaa
add
ficompl
lret
aaa
push
adc
cli
stos
xchg
lock
sub
pop
inc
flds
inc
dec
in
aaa
xor
jns
xchg
cmpsb
cmp
out
pop
rcl
push
add
mov
ret
aaa
lds
ds
pop
sub
arpl
and
stos
pushl
lahf
pop
mov
loopne
adc
jmp
inc
popa
leave
or
pop
test
shlb
or
ljmp
arpl
ds
push
ja
test
lock
push
xchg
aaa
mov
imul
xchg
in
add
mov
fidivrl
push
aaa
cmp
push
shll
cmpsb
rolb
aaa
jg
cs
push
jmp
mov
fs
in
mov
cmp
dec
aas
adc
pop
sub
mov
imul
js
dec
cmp
test
jo
lock
sbb
inc
jbe
or
rcll
hlt
lock
jae
jp
scas
lock
mov
mov
in
and
push
mov
insl
outsl
cmp
ljmp
aaa
ss
jno
andb
shl
lret
mov
iret
jnp
popf
in
xor
lock
aaa
gs
lds
js
insl
push
sbb
aaa
adc
mov
aaa
pushf
hlt
loop
sbb
add
dec
jecxz
movsl
pusha
adc
call
sbb
leave
aaa
inc
in
mov
jmp
ret
xor
mov
adc
int3
es
inc
mov
ret
mov
popa
xor
add
sub
dec
mov
test
lock
inc
push
aam
mov
xor
sbb
divb
and
mov
movsb
aaa
shlb
loop
push
std
or
add
fwait
arpl
aaa
adc
bound
mov
push
idiv
jmp
push
pop
ret
mov
pop
or
das
cmpsl
sub
ds
nop
cmp
push
inc
dec
or
lods
aaa
adc
jnp
mul
sbb
flds
fidivs
scas
sbb
lahf
into
test
mov
out
adc
inc
jo
or
mov
sar
mov
mov
xchg
or
arpl
pop
aaa
push
or
sbb
mov
xchg
aaa
hlt
pop
xchg
inc
adc
dec
je
daa
jno
pop
lcall
out
pop
adc
subb
das
mov
das
call
sub
aaa
arpl
lods
ss
shrl
pop
aaa
mov
cwtl
jnp
push
jae
pop
cld
sub
mov
fcomps
cmpsl
sub
inc
cmp
loopne
pop
jge
aad
xor
jg
push
pop
inc
cwtl
dec
or
or
sub
push
cmp
pinsrw
fadd
mov
into
add
movsb
ret
lea
pop
sub
call
add
pop
nop
inc
cmp
aaa
and
mov
fwait
push
les
cltd
adc
sub
inc
fcoms
xchg
fwait
or
leave
bound
sbb
dec
sbb
out
mul
mov
pop
ja
pop
jecxz
int
push
sub
aaa
icebp
push
or
cmpsl
lock
test
sub
mov
ss
add
mov
sub
leave
out
aaa
jmp
cld
and
add
mov
cvtpi2ps
pop
dec
lds
iret
out
inc
xbegin
xor
fmul
xorb
int3
mov
xchg
pusha
cs
xor
cmp
repnz
dec
inc
decl
pop
add
aaa
sbb
adc
movsb
cs
cli
lock
test
add
mov
push
into
test
pop
push
push
lcall
test
push
inc
outsl
sbb
lock
in
aaa
push
inc
sub
iret
dec
pop
adc
mov
lcall
aaa
out
call
sub
adc
and
or
mov
aaa
adc
sub
addr16
lret
loope
cld
mov
push
test
fcomip
inc
mov
jno
daa
enter
fdivr
aaa
popf
add
sub
out
lahf
or
dec
inc
xchg
das
fwait
jmp
push
dec
jno
sub
arpl
cltd
fmull
fistpll
sbb
aaa
pop
sbb
xor
ret
mov
mov
outsl
and
sbb
aaa
mov
pop
out
inc
mov
sbb
pop
shlb
stos
aaa
jo
or
xor
xor
sub
je
and
xor
adc
lock
out
push
dec
pop
xor
movsl
aaa
adc
xlat
lds
cmpl
mov
rcrl
adc
push
iret
add
movsl
fstps
loopne
aaa
out
xlat
pop
push
sahf
out
data16
xorl
test
or
adc
in
xor
lods
scas
pcmpgtb
aad
aaa
lret
lea
inc
adc
fisttps
cmp
cmc
mov
rolb
sub
or
or
je
pop
divl
lcall
pusha
cmpsl
fisttpl
int
add
fcomps
ss
das
mov
stc
aaa
pushf
lods
bound
loope
xchg
jb
scas
push
pop
insb
pop
sub
test
nop
in
lock
jne
cli
xor
pop
push
neg
jb
pop
pop
mov
jnp
dec
sub
lock
ret
repnz
insb
in
js
push
xor
adc
sbb
jns
aaa
sub
popf
push
roll
jno
cmp
xchg
aaa
jge
mov
push
aaa
push
cmpsb
add
sbb
jmp
lea
aaa
mov
cmp
aaa
xchg
mov
xchg
rcll
xchg
dec
pop
lds
mov
ja
sub
les
push
inc
mov
ljmp
sti
je
pop
push
aaa
mov
ljmp
push
popa
jae
mov
sub
in
gs
mov
scas
out
xorl
rcl
mov
leave
cwtl
aam
aaa
clc
movsb
arpl
in
add
mov
adc
xchg
negl
aad
test
or
in
mov
xchg
inc
push
jp
push
enter
aad
stos
cs
adc
xchg
sub
mov
lods
pop
das
nop
divl
negb
sbb
and
test
jb
sbb
or
mov
xor
aaa
shl
cmpsb
outsl
mov
bound
into
or
int
lea
enter
fidivrl
push
pop
fsubrs
sub
les
pop
adc
pushf
inc
adc
pop
cltd
or
mov
clc
push
out
jns
std
fldenv
icebp
aaa
inc
popa
jge
scas
xchg
lods
xor
arpl
out
in
xchg
cli
in
pop
mov
loopne
jo
lods
aaa
repnz
xchg
js
fnstenv
mov
sub
lahf
pop
mov
insb
and
test
into
stos
cmp
pop
das
bound
outsb
jns
int3
call
divl
repz
push
pop
mov
mov
insb
sbb
out
xor
push
push
mov
xlat
xchg
mov
dec
mov
cpuid
pop
cmc
aad
call
adc
mov
sar
call
push
mov
xlat
sar
std
adc
lods
and
jg
stos
dec
std
cmp
rclb
inc
pop
xchg
loopne
cmp
mov
icebp
mov
dec
aaa
adc
ds
adc
xchg
in
aaa
push
sahf
popf
ror
and
dec
enter
hlt
outsb
ss
or
jecxz
clc
je
aaa
test
movsb
loop
fwait
lcall
ror
sub
ds
aaa
out
jg
fistl
xchg
lods
adc
dec
aam
aaa
add
out
xor
sub
cmpxchg
dec
cmp
jne
es
aaa
dec
outsb
sub
mov
cmp
aaa
stos
mov
jnp
popf
in
ret
insl
mul
sbb
lahf
je
push
inc
cltd
fnstenv
mov
mov
addr16
test
xchg
xchg
mov
imul
inc
or
cmp
sbb
sub
notl
stc
inc
repz
fmulp
enter
xor
lret
mov
xchg
nop
ja
push
sub
popa
pop
rcl
stos
fs
mov
call
cmp
inc
dec
scas
int
xchg
out
mov
sub
cmpsb
add
aaa
push
push
xchg
mov
jmp
dec
and
scas
add
pop
mov
sahf
out
fcmovnu
lock
inc
mov
adc
test
cmp
shlb
sahf
ret
cmp
sbb
jae
add
jle
insl
rcr
cwtl
aaa
adc
mov
jno
sub
jno
mov
cmpsb
mov
int
mov
push
stos
push
xchg
mov
aaa
popf
cltd
lcall
fbstp
jp
or
bound
roll
outsb
aaa
mov
aaa
fsqrt
addr16
call
inc
mov
mov
or
aaa
cmp
je
mov
mov
cmp
aas
xchg
out
pop
cli
jb
adc
add
pop
push
test
daa
mov
movsb
mov
cwtl
pop
sub
aaa
in
lret
inc
ja
pop
inc
aaa
push
dec
cmp
pop
xchg
push
add
aaa
insb
and
inc
inc
lcall
stos
inc
and
add
fdivrp
scas
dec
lret
mov
cmp
aaa
outsl
repz
mov
adc
jbe
por
pop
mov
outsl
mov
leave
gs
outsb
xchg
shrl
pop
xor
shrl
and
mov
mov
aaa
fsub
loope
inc
ss
adc
gs
fisttpl
aaa
rclb
jle
mov
call
mov
push
adc
jne
add
dec
and
mov
sbb
aam
sbb
mov
lock
leave
sbb
pop
sub
in
sahf
aaa
out
mov
push
mov
in
pushf
xchg
lcall
pusha
sub
fs
adc
dec
jnp
cmc
aaa
add
loope
xlat
wbinvd
adc
mov
inc
fdiv
test
aaa
xchg
imulb
loop
sbb
or
lahf
pop
rolb
or
pop
or
sahf
adc
add
sub
test
aas
lods
daa
mov
push
sbb
inc
pop
fdivs
xchg
shlb
and
and
dec
outsl
out
repnz
pop
jmp
pushf
mov
hlt
jg
test
repz
pop
popa
in
aaa
mov
cmp
arpl
or
ja
adc
sti
jne
movsb
adc
pop
aaa
int3
gs
cltd
lahf
sahf
sub
sub
pop
cmpsl
popa
ljmp
push
hlt
inc
mov
inc
jo
cld
movsb
dec
or
xchg
or
fcmove
lahf
fdivrs
add
adc
aaa
ret
ja
sbb
dec
stc
mov
jmp
out
nop
and
pop
sbb
push
inc
in
nop
sbb
add
in
sbb
mov
add
and
or
cmp
and
movb
push
into
adc
push
imul
inc
lcall
jno
jae
adc
sahf
mov
xchg
add
cli
shlb
out
int
mov
mov
iret
je
xchg
pinsrw
imul
xchg
ret
cmp
inc
es
aaa
xor
in
jmp
pop
jecxz
or
add
jg
push
sbb
dec
subb
jp
cld
in
mov
sahf
sbb
getsec
mov
mov
sbb
sub
adc
fcompl
aaa
repz
and
subb
inc
mov
xlat
jle
and
cmp
inc
mov
rcrl
push
stos
outsb
data16
or
lret
icebp
popf
xchg
cmc
push
sub
add
xchg
and
or
sarb
push
popa
jge
sbb
cmp
jne
ja
aaa
mov
stos
xchg
aad
aaa
jno
sub
inc
add
jecxz
test
mov
sbb
outsl
xchg
out
xchg
pop
js
mov
insb
xor
repnz
sti
aaa
adc
mov
mov
je
cld
addr16
in
loop
jge
mov
cmp
repnz
addr16
roll
pop
filds
jl
jp
mov
call
cld
push
mov
divb
pop
jb
push
test
aaa
cld
mov
insb
aaa
inc
ficompl
pop
aaa
sub
push
mov
loope
aaa
mov
dec
sub
daa
or
sub
mov
dec
mov
or
fldcw
pop
out
aas
shrl
push
roll
ror
out
test
adc
aaa
shrb
ret
sahf
int
fidivl
in
or
mov
das
aaa
xchg
add
repz
and
movsb
stc
sbb
fiaddl
in
xor
popa
aaa
in
inc
cltd
movsl
jno
shll
mov
jbe
jae
aaa
adc
test
or
adc
and
pop
in
int
movsb
add
xchg
int3
lret
jmp
mov
out
movsl
pop
lods
xchg
push
ret
jl
lss
inc
cld
sub
aaa
ljmp
push
jge
stc
jno
adc
aaa
lds
movsl
fisubs
xor
int3
jnp
mov
mov
jmp
push
fdivrs
js
ja
push
into
or
adcb
or
add
test
push
aaa
addr16
push
aas
or
mov
ficomps
xchg
xor
aaa
mov
or
out
xchg
dec
adc
and
xlat
mov
and
push
fcmovnbe
aas
adc
cmp
pop
add
call
aaa
or
sti
fwait
cmp
cmpsl
or
in
lcall
inc
aaa
jmp
mov
fdivs
xor
aaa
aad
adc
lods
rcrb
mov
inc
mov
mov
mov
test
je
jb
cmpsb
sub
aaa
daa
cmp
test
cli
sti
push
sub
mov
adc
shrb
mov
xor
push
call
test
test
mov
add
in
sbb
sub
cmp
pop
aaa
inc
mov
rcl
mov
adc
mov
push
gs
aaa
shlb
or
lcall
sbb
mov
cmpsb
jmp
mov
or
imul
aam
dec
repz
mov
fisttpll
push
push
das
mov
movsb
imul
pop
cmp
pop
incb
fdivrs
sub
lret
aaa
sbb
les
sub
int3
ret
cmc
or
and
std
out
jno
inc
aaa
mov
es
iret
stos
gs
cmp
ret
and
loopne
aaa
mov
jbe
mov
push
in
nop
sub
and
cs
fmul
inc
aaa
dec
adc
test
xor
sti
mov
pop
hlt
xchg
and
mov
insl
fidivs
cs
xchg
sub
cwtl
pop
lock
aaa
mov
and
fmull
cmp
jp
aad
aaa
mov
xchg
mov
lds
repz
or
push
ljmp
mov
mov
sahf
adcl
pop
imul
lock
push
or
ljmp
int
add
mov
xor
jns
sbb
shlb
addr16
test
mov
bndldx
cwtl
iret
stc
out
aaa
cmp
and
jno
mov
jne
pushf
out
jmp
pop
scas
shrl
or
push
aaa
test
stc
add
out
sbbb
out
lret
loop
aam
mov
jle
and
cmp
cli
xchg
test
shrl
push
imul
adc
inc
popf
sbb
ret
aam
jb
dec
jge
mov
repz
mov
cwtl
pop
aad
adc
add
push
push
push
lods
fidivs
fs
in
xchg
sbb
pop
or
add
xor
fwait
repnz
and
adc
fisttpll
push
adc
orb
sarb
jmp
adc
mov
xlat
sbb
pusha
js
pop
out
cmp
clc
aaa
fstps
aaa
jmp
dec
jb
dec
or
into
cmp
les
pop
xchg
outsb
rcl
pop
add
dec
aaa
xchg
mov
xchg
lret
or
xchg
jb
aam
cmp
mov
mov
add
decl
fwait
sahf
add
imul
in
clc
aas
push
xchg
aaa
push
fbld
hlt
mov
cmp
movq
jae
js
mov
in
outsl
push
js
xchg
push
ja
mov
sub
and
aaa
push
loopne
xchg
subl
mov
aaa
sarl
cmp
mov
sub
or
dec
fdivrs
test
bound
mov
fxch
dec
lcall
inc
addr16
mov
mov
mov
dec
mov
movsb
jbe
xchg
dec
imul
filds
outsl
aaa
cwtl
dec
add
sub
aaa
cltd
and
jle
cmp
jnp
xor
or
fsubl
inc
inc
xchg
lea
mov
loop
mov
add
push
test
push
fsubrs
mov
out
or
cmp
inc
mov
lods
cli
movsb
das
hlt
push
mov
ret
jl
ret
aaa
in
lahf
jb
insb
push
pop
pop
sbb
push
cmc
ja
inc
dec
push
rcl
mov
mov
jno
xor
mov
imul
popf
jp
mov
mov
jae
jb
and
adc
lret
cmp
addr16
fmuls
std
jmp
mov
add
sbb
pushf
xchg
aaa
push
div
daa
lret
aaa
jns
icebp
shrl
and
shr
cmpsl
ja
cs
pop
push
inc
pop
sbb
test
mov
cmpsb
mov
push
lahf
xor
push
clc
test
bound
repz
pop
aaa
icebp
daa
and
pop
outsb
cmp
cmp
aaa
mov
int
std
or
pop
jg
and
aaa
dec
sbb
in
addr16
adc
in
jae
jne
mov
mov
aaa
xchg
out
mov
cs
jne
mov
aaa
adc
int
or
adcb
scas
stos
into
mov
jecxz
out
sub
aaa
fbstp
into
sarb
aaa
mov
cli
cmp
jne
dec
and
pusha
cmp
dec
add
adc
xor
xor
push
jp
frstor
es
out
leave
aaa
rolb
or
xchg
mov
neg
xchg
in
aaa
mov
mov
sbb
mov
and
xchg
xchg
gs
mov
pop
lcall
push
shr
push
jl
cmp
pop
pop
xor
jl
hlt
cmp
push
repnz
jns
pop
dec
in
adc
jno
mov
push
in
jo
push
jne
and
push
not
scas
add
popa
nop
hlt
jns
mov
dec
js
insl
adc
xchg
popa
or
aaa
les
es
jle
lret
xchg
call
int
rcl
mov
imul
mov
fisttpll
mov
add
scas
pop
push
fs
push
jae
lock
shrb
fmull
cwtl
mov
iret
call
shll
mov
andl
and
or
lods
fdiv
fidivl
dec
mov
mov
repnz
adc
scas
mov
test
imul
inc
xor
sbb
sar
inc
inc
movsb
sahf
sub
xchg
mov
loopne
push
xchg
mov
mov
ret
mov
sub
nop
clc
jns
test
pop
shlb
cmpsl
cld
js
aaa
loop
mov
outsb
push
test
xor
in
std
and
aaa
test
add
loopne
push
ds
mov
popa
cmp
mov
test
mov
ljmp
mov
popa
adc
inc
pop
jae
xlat
mov
sub
call
lret
adc
pop
loope
cmp
test
pop
and
in
jns
adc
mov
sub
aaa
xor
sub
cld
inc
or
out
xor
dec
test
aaa
jno
add
xor
aaa
xor
push
jb
movsb
testb
mov
mov
aaa
jno
jbe
test
and
adc
repnz
mov
xchg
cmpsb
adc
test
adc
insl
add
call
aaa
push
sub
mov
jecxz
pop
pop
cmp
test
stos
stc
nop
repnz
push
aad
add
push
pop
mov
test
mov
sub
fnsave
out
mov
aaa
inc
leave
inc
lods
js
adc
cmp
xchg
aad
aaa
shlb
cmp
rcrb
or
xor
add
mov
fsts
jae
aad
out
mov
mov
sbb
mov
adc
aaa
addr16
sahf
inc
push
insl
sub
add
push
aaa
dec
test
pop
cwtl
add
mov
jo
pop
movsb
push
aaa
cmpsl
mov
fidivl
jno
add
shrb
push
out
fwait
aaa
mov
movsl
mov
push
je
adc
pop
jge
ljmp
pop
jne
pusha
dec
popf
mov
sti
imul
shrb
movsl
adc
mov
sbb
cwtl
pop
daa
dec
add
mov
out
pop
push
aaa
pushf
inc
lods
hlt
cmp
in
ret
aaa
xchg
mov
loope
sub
xchg
lock
test
aas
push
addr16
mov
aaa
iret
imul
inc
jmp
shrl
mov
outsb
or
je
stos
cmpl
cmpsb
aam
aaa
mov
cmc
decl
cmp
hlt
aaa
push
xchg
xchg
pop
lret
mov
call
aaa
and
xlat
aaa
xchg
sub
lcall
lret
fldcw
xchg
aaa
dec
gs
sbb
inc
stos
pop
push
clc
movsl
cmp
push
shlb
xchg
test
jae
push
inc
mov
les
int3
mov
cmpsb
push
jmp
jl
mov
lret
xchg
mov
aaa
in
jae
popf
and
pmuludq
shlb
fistl
arpl
out
pop
popf
mov
push
scas
cltd
dec
cmp
pop
out
arpl
inc
in
orb
xchg
movsb
rorb
add
xchg
adc
mov
pop
or
lods
adc
mov
push
adc
inc
jecxz
add
imul
adc
or
insb
stos
jns
test
rcr
pushf
push
inc
xchg
and
or
and
mov
inc
pusha
aaa
nop
dec
push
int3
adc
insl
aaa
or
mov
jae
aas
mov
rcll
mov
fdivrl
xor
test
xor
mov
frstor
test
mov
hlt
xchg
lods
and
or
mov
dec
or
push
inc
data16
xchg
repnz
pmulhw
es
lahf
popa
cmpsl
out
std
test
inc
xor
mov
test
cs
frstor
ds
stos
shll
aaa
hlt
repnz
push
dec
mov
aaa
mov
dec
pop
outsl
aaa
push
jl
sbb
arpl
cmpsb
aaa
cli
xchg
xlat
test
and
mov
cmpb
jns
sub
xor
push
cld
gs
mov
aaa
jo
in
repz
pop
xchg
xchg
and
cwtl
dec
jg
or
jbe
sub
out
dec
xor
lods
add
aaa
arpl
lock
or
into
nop
loopne
jb
cmpsb
imul
xchg
addr16
mov
sbb
aam
mov
mov
and
in
stos
mov
pusha
xlat
mov
insb
fwait
cmp
mov
add
aaa
mov
nop
xchg
int3
aaa
loopne
fdivp
sti
mulb
aaa
movsb
push
pushf
or
out
cmc
leave
fiadds
and
mov
mov
movsb
fsubrs
out
or
cmpsb
fildll
out
push
cmc
lock
jns
idivb
arpl
xchg
jg
pop
int
hlt
adc
lcall
inc
gs
stos
push
cmp
xchg
sbb
aaa
sbb
iret
fdivs
les
pop
cmc
jne
int
insl
mov
lahf
cmpsl
adc
orps
fidivrl
ja
out
divl
adc
fidivs
cmpsb
addr16
fidivl
sahf
loopne
rolb
dec
inc
mov
lds
aaa
xchg
mov
add
adc
mov
rcrb
inc
dec
push
xchg
push
cmpsl
cmp
packuswb
and
mov
movsb
nop
aam
mov
xchg
popa
sbb
out
jae
adc
stos
xor
lahf
daa
ss
aaa
mov
ds
int3
aaa
inc
movsl
xchg
push
bound
ja
cmp
cltd
fnstcw
in
mov
jle
iret
sub
jl
push
outsb
imul
adc
pop
lds
div
sahf
pop
cmp
mov
fldl
leave
pop
xchg
mov
push
and
and
arpl
aam
inc
dec
aaa
jns
add
in
inc
clc
dec
adc
adc
sub
out
aas
push
cmp
or
fdivl
stos
push
dec
and
fwait
mov
push
insl
test
addr16
cmp
pushf
jmp
ljmp
inc
adc
sbb
into
jne
dec
lock
ljmp
fstps
dec
aaa
pop
xor
movsb
outsl
imul
adc
lock
pcmpgtd
mov
xchg
sarb
push
pop
jmp
test
add
jnp
out
xlat
mov
aaa
jge
ret
mov
psadbw
inc
mov
and
jmp
insb
je
mov
shll
dec
das
mov
adc
aad
cmp
mov
jnp
ret
mov
cmp
fs
arpl
add
xchg
or
cmp
aaa
nop
xor
loop
fwait
aaa
mov
cmp
aaa
cld
jnp
and
sub
adc
call
mov
das
cltd
sbb
mov
aaa
es
std
jbe
lahf
xchg
xor
subl
and
push
pop
jp
mov
stc
sbb
aas
ficoml
lret
jns
cmp
ja
aaa
mov
push
jae
movups
imul
sbb
jno
pusha
sbb
jp
mov
out
pop
sub
or
dec
aaa
fisttps
cmp
xor
xor
sub
sub
imul
call
cmp
and
push
shl
repz
fwait
test
jecxz
mov
and
jecxz
movsb
xchg
rcrl
add
test
adc
dec
stos
daa
sbb
arpl
inc
aaa
inc
or
cld
aaa
xchg
push
js
loopne
aam
aaa
dec
andl
aaa
adc
loope
push
pusha
fsubrs
test
add
in
sbb
addr16
cmp
adc
push
imul
mov
adc
aaa
lahf
addr16
sub
pop
add
xor
fistps
mov
neg
shrl
out
ljmp
sub
push
psadbw
fcomps
cmp
and
push
add
mov
push
bound
dec
testl
xor
scas
adc
fidivs
call
lcall
aam
inc
and
lret
movsb
add
inc
jg
sub
enter
push
dec
sub
sub
inc
js
jmp
vmwrite
ss
loope
mov
aaa
lcall
aas
aas
out
popa
call
ret
mov
dec
push
call
lea
add
mov
ljmp
and
out
addr16
sbb
adc
stc
pushf
aaa
jbe
adc
add
in
mov
pop
jmp
loop
xchg
pop
loope
aaa
es
cmp
imul
aaa
out
mov
adc
movsb
push
aaa
std
xchg
int3
xchg
and
ror
movl
jge
test
xchg
jo
pop
cmp
xor
pop
inc
aaa
ja
push
ret
je
lahf
aad
push
mov
cmpsb
mov
aaa
ss
sarb
sub
xchg
test
lcall
rcl
mov
incl
ret
fs
in
adc
aaa
inc
pushf
in
lahf
fwait
jnp
hlt
ja
sbb
push
std
fidivl
cmpsb
pop
ds
loopne
test
ja
pop
cmp
iret
cwtl
shll
aaa
or
mov
sbb
jge
inc
pop
aad
imul
js
cmp
out
insb
or
lea
inc
ds
aaa
lds
stc
mov
add
movsb
xchg
adc
mov
push
lods
mov
jmp
cmp
daa
jp
cmp
jb
inc
xchg
jmp
mov
mov
mov
inc
pop
sub
fcmovb
cmp
bound
ret
aaa
adc
rolb
mov
adc
push
and
inc
push
movsb
aaa
sbb
cmpsl
mov
in
adc
mov
fnstsw
aaa
iret
ret
lds
aaa
lods
mov
sbb
mov
int
mov
mov
dec
cmp
cltd
aas
lret
leave
fstps
adc
cmc
ljmp
lods
cwtl
or
aaa
popf
inc
mov
cmc
in
lea
mov
add
imulb
xor
mov
test
and
shr
lret
into
popa
cmovp
sbb
dec
adc
dec
mov
cs
in
mov
ja
outsl
xchg
std
pop
popa
insl
sbb
out
cmp
mov
testb
or
mov
add
xor
das
jge
cmp
xlat
jle
insb
mov
mov
push
imul
push
adc
sbb
xor
sbb
dec
daa
mov
stos
aaa
add
sbb
mov
dec
aaa
data16
ss
sub
ret
jns
add
adc
jbe
arpl
adc
push
mov
insl
jnp
jbe
and
aaa
xchg
test
sub
lods
push
mov
adc
pop
in
stos
mov
incb
mov
call
stos
aaa
jle
sbb
mov
pop
mov
dec
mov
lds
loop
out
and
icebp
aaa
lret
add
pop
bound
aaa
lahf
push
arpl
adc
or
jg
jae
loop
shlb
mov
xchg
out
ret
ja
ds
xchg
aaa
dec
pop
std
xor
mov
mov
inc
inc
imul
sbbl
jb
xchg
xor
lret
inc
clc
and
aaa
xor
mov
aaa
fcmovu
mov
aaa
adcb
dec
fisttps
jae
out
add
flds
mov
testl
aad
jg
jle
xor
mov
add
addr16
orl
add
dec
lods
aad
pop
int
aaa
cmp
call
fidivs
or
xchg
lea
cmp
addr16
xchg
movsl
lock
or
out
rcr
enter
cmovle
in
mov
mov
xchg
clc
repz
inc
shrl
and
imul
sub
aaa
pop
loop
cvtdq2ps
xor
mov
loope
mov
lock
adc
xchg
leave
and
push
pop
aaa
dec
dec
jecxz
insl
add
ss
pop
ja
xchg
xchg
shll
aaa
add
test
aaa
out
sbb
pop
pop
ds
adc
cmpsl
and
cmp
scas
pusha
iret
outsb
aaa
sub
ret
inc
mov
add
push
pop
fwait
or
or
cmp
cmp
mov
std
dec
add
outsb
xchg
dec
cmp
scas
decb
in
sub
ss
pxor
or
sub
aaa
jo
loope
mov
and
in
add
decb
or
aaa
pop
xor
and
dec
xchg
aaa
jb
mov
jle
xor
roll
mov
add
cmp
aaa
jge
out
lods
cmp
loopne
aaa
dec
mov
call
aaa
sbb
mov
ja
push
inc
aaa
sub
lock
push
mov
xor
out
hlt
mov
mov
add
and
and
ljmp
xchg
xchg
negb
push
xlat
mov
orl
and
aam
aaa
sub
xor
inc
mov
or
sbb
aaa
lods
out
pop
cmp
mov
mov
fnstenv
aas
mov
lds
fs
lock
in
pushl
jmp
mov
push
adc
dec
mov
xchg
mov
mov
jne
push
repz
jo
xor
add
adc
inc
in
insl
aaa
push
pop
cmp
sbb
scas
mov
hlt
das
inc
mov
aaa
lea
xchg
or
cltd
cmp
fbstp
daa
dec
dec
out
cmp
xchg
aaa
rclb
cmp
or
jl
gs
movsl
aam
aaa
lret
leave
test
ret
jmp
bound
in
dec
out
cmp
or
inc
cmp
and
or
lcall
sbb
insb
pushf
adc
fidivrs
xor
idivb
jle
aaa
cmpsb
sub
getsec
test
adc
aaa
push
mov
mov
sub
jecxz
mov
orb
es
push
int3
jne
add
dec
pop
fisubrs
aaa
movsb
push
cmp
adc
aaa
loop
jge
and
aaa
aaa
fcmove
arpl
clc
aaa
fwait
shlb
mov
xchg
aaa
pusha
push
and
in
jnp
cmpsb
dec
stc
sub
scas
sbb
push
jne
cmp
test
jl
mov
cmc
adc
xor
jp
out
xchg
push
aaa
mov
xor
xlat
cwtl
aaa
dec
scas
xor
aaa
popa
lods
push
jp
mov
test
aaa
pop
sbb
pop
mov
sti
aaa
jne
cmp
mov
aaa
and
cmpsb
divl
jno
add
sub
add
push
mov
sti
add
mov
mov
out
sub
jnp
lock
push
and
sti
pop
mov
aaa
cmp
xchg
mov
decb
ds
lret
fwait
dec
les
clc
in
fstl
mov
gs
cmp
lret
xlat
sub
sahf
test
lcall
dec
lea
fs
and
addr16
add
aaa
mov
or
es
arpl
aaa
out
insb
daa
shlb
xor
shl
jbe
aaa
mov
mov
mov
push
push
ss
stos
xor
aaa
inc
in
xchg
in
iret
mov
adc
xchg
or
pop
clc
add
jno
sahf
xchg
add
jmp
push
mov
pop
ror
je
scas
xchg
add
mov
mov
data16
push
out
push
fstp
leave
jns
enter
mov
inc
xchg
mov
mov
inc
aaa
test
into
mov
mov
sbb
test
loope
fldcw
inc
jecxz
sub
cmp
push
iret
and
xchg
scas
cmp
inc
or
jnp
cs
aaa
jmp
sbbl
mov
hlt
cmp
pushf
inc
jns
jge
mov
ljmp
cmp
aam
sbb
xchg
lret
lcall
lcall
cmpl
test
jnp
adc
mov
aaa
xor
mov
dec
inc
add
push
shll
int
into
aaa
mov
ror
mov
xchg
jne
test
aaa
js
ljmp
and
mov
pop
lock
inc
and
sub
dec
mov
pop
shlb
insl
in
pop
sub
bnd
sbb
inc
xchg
aaa
push
cwtl
mov
or
xor
mov
sbb
pop
mov
or
and
popf
cmp
lret
out
out
arpl
xchg
repnz
je
mov
jb
or
arpl
insb
out
pop
insl
mov
or
in
sbb
cli
and
cmpsl
sub
jmp
and
test
clc
stos
int3
pop
aaa
ss
subl
test
xchg
lret
xlat
aaa
dec
push
inc
pop
lahf
outsl
divl
ja
addl
lds
loope
mov
cmpsb
sbb
shl
push
repz
sti
add
xor
lods
adc
rorb
adc
test
push
jl
loopne
test
aaa
cmp
xlat
pop
sub
cmp
sbb
in
add
jne
adc
sub
or
pop
iret
sbb
aaa
mov
sub
jbe
mov
adc
add
jmp
incl
test
cmp
mov
dec
or
add
inc
jge
push
testb
xchg
sub
aaa
ss
and
pop
dec
in
mov
push
shlb
aaa
mov
f2xm1
insl
in
mov
sti
hlt
push
push
aaa
push
cmc
lret
arpl
mov
pop
or
clc
in
out
pop
aaa
inc
cmpsl
pop
sub
loope
aaa
and
jns
fs
aaa
cltd
mov
aam
push
imul
push
repz
mov
sbb
jno
inc
inc
pop
sbb
mov
test
es
aaa
icebp
push
dec
mov
aaa
rcrl
push
mov
mov
add
pop
add
dec
cltd
aaa
lahf
jle
or
nop
xor
aam
mov
sub
and
xor
adc
xchg
and
fldt
stc
aaa
scas
ljmp
repz
cmc
sbbb
shlb
repnz
lds
mov
and
aam
fcoml
pushf
pop
out
inc
adcb
push
cmp
xchg
aad
sub
fcoms
cmp
sub
int3
mov
fs
popf
mov
adc
push
dec
or
mov
adc
inc
lods
jge
jl
mov
lcall
add
es
or
movsb
leave
xchg
jns
test
aaa
jno
mov
jae
cmpsb
aaa
ficomps
icebp
cmpsw
inc
or
scas
or
mov
sbb
push
clc
lock
int
add
aas
adc
mov
push
cmp
cwtl
repnz
insl
inc
jae
dec
es
bound
mov
aaa
push
jae
das
fwait
xor
sarl
mov
dec
or
jbe
cmpsl
push
pop
addr16
aaa
ljmp
fnstenv
xor
repz
adc
cld
push
cmp
inc
pushf
js
cwtl
shlb
sub
mov
mov
ss
pop
add
in
shlb
mov
ficomps
cmp
pop
mov
test
inc
lahf
pop
mov
jae
es
and
push
cmp
ds
and
inc
dec
cmp
fs
aaa
hlt
fiadds
cmpsl
loope
sub
std
cmc
mov
aam
sarb
push
aaa
mov
fisubl
arpl
lock
xor
adc
repz
dec
jns
add
in
jae
xchg
xchg
loope,pn
mov
and
xor
jge
mov
clc
lds
sub
push
ljmp
lret
fists
cmp
out
pop
aaa
stos
pop
out
pop
dec
insb
lahf
aaa
sbb
pushf
and
aaa
aad
call
fwait
aaa
sub
movb
push
aaa
push
cmp
or
sub
or
outsb
or
sbb
lret
je
popa
jae
fstpt
aaa
sub
adc
aaa
jge
repz
mov
paddq
cmc
fs
pop
xlat
sbbl
fdivl
sub
sub
aaa
xor
mov
push
lea
setae
shlb
xchg
clc
and
leave
ret
cld
mov
mov
mov
insl
mov
loop
fsubs
outsb
aam
negl
repnz
pop
pop
aaa
push
or
xchg
sbb
dec
inc
xlat
ficoml
sbb
std
and
jg
mov
leave
mov
aaa
ret
xchg
pop
mov
dec
jl
in
sub
ja
ret
rcrb
in
addr16
push
sub
or
lods
ds
sub
mov
push
lahf
clc
jns
aaa
repz
imul
mov
mov
or
add
jl
jns
adc
ret
icebp
mov
sbb
and
fld
xor
aam
ja
loop
out
jecxz
push
aas
divl
pop
mov
push
inc
aaa
cli
lock
pop
out
add
or
push
cmp
inc
cmp
xchg
dec
stos
into
pop
adc
getsec
mov
aaa
push
xchg
dec
icebp
cltd
les
hlt
js
aaa
repnz
mov
aaa
in
jp
dec
in
mov
aaa
xchg
sbb
mov
fadds
shll
mov
cmp
sbb
es
pop
cmp
or
dec
mov
adc
inc
sarb
outsb
aaa
mov
call
cmp
mov
sub
xorl
negb
adc
cli
lods
and
data16
xchg
int
xor
jle
xlat
and
add
inc
fs
sbb
lret
mov
cmpl
mov
and
and
mov
cmp
mov
push
lds
sub
xchg
aaa
pop
inc
or
sahf
mov
jecxz
xchg
jg
daa
sub
adc
scas
dec
pop
clc
xchg
xchg
mov
aaa
adc
repnz
push
pop
adc
adc
into
out
or
sub
and
or
xor
aaa
nop
les
filds
add
pop
out
adc
jecxz
pop
sub
scas
sar
mov
loope
mov
lahf
outsl
iret
arpl
popf
adc
adc
js
fmuls
enter
jo
mov
btr
lods
jmp
xchg
bound
hlt
push
movnti
fistpl
movsl
pop
cmpsb
cmc
test
pop
xor
scas
jns
ds
call
stos
testl
loopne
dec
cwtl
pop
shlb
inc
push
dec
jno
shll
mov
xchg
cmp
aaa
dec
push
fstl
ds
popa
mov
das
aaa
pop
pop
or
stc
aaa
xor
insl
inc
aam
cltd
mov
or
fucomi
sbb
sbb
cmp
push
fs
sub
or
push
push
mov
mov
mov
loop
jge
or
cwtl
adc
movzwl
loop
enter
sub
imul
inc
xorb
jo
xchg
aaa
in
jmp
xor
loopne
aam
aaa
cmp
shll
push
cld
imul
aaa
fwait
xchg
sbb
or
pop
jo
pop
cmc
mov
jp
jnp
mov
les
pop
adc
mov
push
pop
jne
cmp
jo
bswap
jp
setne
nop
pusha
and
into
xorl
out
pop
movsb
cwtl
clc
call
cld
aaa
inc
mov
aaa
stos
and
scas
test
push
stos
aaa
mov
daa
ficoml
xor
ljmp
mov
decl
mov
aaa
fs
sbb
aaa
fbld
push
xchg
aaa
add
jae
mov
jbe
add
cmp
mov
repnz
aam
dec
sbb
gs
cwtl
inc
mov
out
cli
and
mov
jne
mov
daa
jae
pop
ds
scas
aaa
ficoms
lcall
lods
movsb
addb
test
cmp
jns
ret
and
lock
push
sbb
dec
scas
mov
aaa
pop
sarb
add
int3
pushf
fdivs
stos
popf
cmp
or
jl
ficoml
mov
lock
out
or
loop
ss
push
stos
adc
or
inc
mov
push
into
add
pop
cmc
jecxz
pop
add
hlt
xor
leave
cmp
sub
fwait
je
aaa
lahf
shrb
fs
aaa
mov
inc
cltd
sbb
lret
and
mov
lcall
push
cmp
je
inc
f2xm1
cmp
aaa
mov
xchg
add
or
loope
arpl
jns
es
aaa
push
and
and
mov
mov
mov
mov
xchg
in
xlat
std
mov
mov
das
out
loopne
dec
adc
add
scas
xchg
mov
out
sub
push
mov
cmpsl
aaa
cmp
aaa
xor
mov
lods
dec
mov
xchg
or
mov
pop
mov
int3
cmp
sti
sub
std
push
loopne
aaa
fpatan
adc
call
test
movsb
or
cmp
mov
cmc
add
cmp
xlat
mov
jge
cli
jle
push
mov
icebp
or
mov
movsl
jg
and
aaa
xchg
lret
movsb
mov
pop
lods
arpl
cmp
push
and
pop
arpl
movsb
pop
mov
jnp
and
clc
repz
xchg
sbb
clc
aaa
mov
das
mov
xchg
out
dec
cmp
lods
incb
cli
cmp
gs
pop
push
push
cmp
in
sbbb
call
lea
jne
repz
xlat
xor
push
aaa
repnz
cmpsb
mov
push
les
aam
aaa
icebp
xorl
xchg
lods
sbb
push
rol
inc
jg
mov
cwtl
cmc
addr16
pop
push
sub
aaa
fwait
jns
and
jge
pop
mov
mov
adc
outsb
mov
rcrl
sbb
mov
xchg
pop
cs
mov
aaa
jnp
jecxz
ss
push
cli
cs
push
and
je
sahf
inc
sbb
sub
xchg
pop
data16
enter
into
aaa
dec
and
popf
pusha
jle
ss
or
inc
imul
aaa
or
push
jae
or
and
cltd
mov
add
aaa
test
jbe
mov
cmp
or
shll
pop
pop
mov
pop
sbb
out
mov
jmp
sub
sub
inc
mov
dec
cwtl
cs
es
ja
inc
scas
cmp
in
xchg
ja
aam
cmp
sub
pop
scas
push
aaa
popa
mov
mov
rcr
enter
push
cmp
div
mov
sbb
rolb
or
mov
push
dec
aaa
sub
mov
sub
cmp
pop
cs
mov
add
loopne
orps
cwtl
aad
popa
adc
push
sub
mov
pop
sub
xor
jno
ds
cmp
xchg
push
int3
lds
lcall
mov
adc
arpl
lock
pop
xlat
and
repz
aaa
sarl
mov
scas
jle
push
jnp
xchg
cmp
clc
aaa
jnp
xor
jbe
mov
sbb
mov
insl
and
jne
mov
cli
mov
enter
test
inc
pop
inc
mov
cmp
int
mov
sbb
ret
jnp
cmp
mov
out
fdivp
test
ss
sti
aaa
sbb
bound
cmp
and
imul
jnp
aaa
out
rcll
dec
mov
xchg
adc
xchg
stos
adc
push
adc
jnp
shl
push
inc
not
mov
lret
push
nop
ljmp
insl
jae
aaa
push
mov
push
and
inc
inc
aaa
bound
into
mov
out
mov
cltd
loop
mov
jne
cmp
add
aaa
aad
stos
mov
mov
shll
es
ret
sbb
lds
pop
xor
or
inc
inc
aaa
mov
mov
sti
or
ret
pushf
mov
aaa
sub
sbb
aaa
inc
je
punpcklwd
fwait
movsbl
pop
jge
cmp
jno
aaa
cli
push
and
ud2
cmpsl
ja
xchg
pop
notl
mov
fldenv
es
sub
das
out
mov
out
adc
lea
int
aaa
lds
lahf
out
sub
es
push
test
int3
mov
in
or
addl
aaa
inc
xor
outsb
inc
push
jns
aaa
loop
mov
out
testb
ret
cld
xor
and
mov
sti
test
mov
out
lahf
shlb
loopne
adc
sbb
sbb
mov
imul
adc
aaa
daa
out
mov
imul
hlt
aaa
sbb
and
aam
shlb
mulb
mov
ja
jmp
inc
out
pop
mov
in
add
mov
bound
ss
cmp
std
add
inc
push
adc
pop
stos
jne
lret
push
aaa
push
das
mov
imul
aaa
and
loopne
adc
cld
fcoms
pop
adc
pusha
aaa
jo
pop
fisubrl
dec
aaa
addr16
shl
add
aaa
jae
mov
xchg
pop
jl
lock
ds
aaa
pushf
ret
lods
mov
jmp
xchg
mov
call
lods
outsl
js
pop
repz
xor
jnp
mov
test
add
fwait
xlat
sub
or
addr16
xor
in
mov
cmc
ss
xchg
pop
mov
adc
xchg
xor
aaa
push
push
mov
adc
in
js
aaa
out
pop
and
or
out
jmp
enter
stos
ds
push
ja
out
mov
add
sbb
xorb
jbe
bound
pop
aaa
mov
daa
addb
jl
test
je
pop
ret
aaa
sbb
push
in
push
imul
cmpsb
push
in
sarw
mov
mov
pop
dec
nop
aaa
sbb
sbb
adc
inc
aam
xchg
mov
imul
enter
imul
dec
aaa
sbb
aaa
sbb
pop
scas
rcrb
in
bswap
divl
mov
cmc
fdivr
cmc
and
aas
jns
pop
cmp
int
ucomiss
adc
out
nop
in
xorb
push
jbe
inc
xchg
mov
mov
mov
mov
loope
push
inc
inc
jne
jne
adc
pushf
sarl
and
mov
pop
xchg
nop
inc
shrb
insb
push
fstps
sbb
jge
je
xchg
ss
adc
sub
mov
xchg
mov
int
imul
pop
mov
pop
mov
xlat
ljmp
enter
imul
aad
add
sahf
and
cmpsb
adc
lcall
sbb
mov
mov
mov
divb
notl
jg
mov
cmp
cwtl
mov
loope
fxch
mov
es
enter
out
xchg
test
bound
add
ja
pusha
imul
int3
adc
fstps
ljmp
shlb
xor
scas
mov
cmp
es
mov
cmp
push
mov
adc
fimuls
dec
aaa
cmp
stos
sbb
popl
iret
and
cli
icebp
scas
push
pop
cmp
fwait
push
xor
sti
in
jo
and
aaa
out
roll
insb
inc
ja
fldpi
aaa
out
mov
fmull
or
loopne
cmp
aad
sub
push
shlb
push
dec
mov
aaa
add
dec
mov
ja
jecxz
addr16
popf
and
aaa
mov
mov
aaa
inc
mov
inc
rorl
xchg
push
jb
jnp
leave
fidivrs
or
incl
cltd
inc
into
mov
lea
dec
sub
and
and
push
pop
push
aam
cmp
sub
dec
lret
aaa
cld
andb
stos
aaa
ret
and
test
lock
push
pop
push
pop
inc
aaa
out
movsl
cmpsl
pop
cmp
aaa
xchg
scas
mov
aaa
mov
xchg
xor
mov
lret
push
cmp
jmp
popa
dec
rcrl
add
push
into
lods
aaa
das
ficoml
mov
dec
push
daa
popf
mov
dec
outsb
fucom
aaa
in
iret
pop
sub
xchg
loop
sbb
jo
or
in
mov
adc
inc
mov
or
scas
xchg
aad
adc
adc
pop
dec
push
test
loopne
adc
aaa
mov
es
xor
loop
rclb
dec
shrl
mov
aaa
mov
sbb
xchg
cltd
mov
pop
xchg
sbb
pop
repnz
cltd
in
xor
sub
outsb
push
mov
sahf
pop
and
push
jecxz
out
or
inc
in
pushl
mov
push
stc
xor
add
push
xorl
leave
adc
jle
sbb
out
xchg
xchg
aaa
mov
push
xor
and
pop
aaa
cmpsb
add
rol
popf
fdivrl
sarl
imul
push
cltd
pop
mov
or
add
into
js
mov
out
push
xchg
pop
subl
jle
stos
cmp
mov
sbb
es
mov
adc
aaa
stos
cmp
addr16
loop
cmp
sbb
adc
and
mov
hlt
mov
push
pop
dec
rol
clc
aad
push
dec
in
aaa
adc
insl
popa
or
lahf
js
loope
add
aaa
jmp
icebp
push
push
push
lret
scas
xchg
inc
mov
lods
inc
pushf
aas
mov
inc
cmp
xor
je
sbb
iret
pop
cmp
aaa
aas
xchg
xchg
jge
jecxz
add
mov
aaa
sbb
sbb
out
ds
out
lahf
inc
jmp
aaa
jecxz
sarl
aaa
inc
sbb
hlt
cs
sbb
fbld
seta
repnz
mov
add
push
or
mov
aaa
mov
jo
cld
cmp
lods
cmp
aad
xor
ret
shll
stos
cmp
aaa
mov
bound
push
in
loopne
adc
call
mov
jmp
scas
jecxz
inc
arpl
add
fstps
cli
test
ja
jae
or
mov
sbb
pop
fists
stc
js
aam
aaa
in
cmp
sbb
fmuls
inc
aaa
mov
xor
daa
mov
sbb
aaa
lcall
add
sbb
andps
imul
aaa
jl
shl
and
and
mov
es
mov
mov
cmp
out
ljmp
cmpsl
pop
cmp
dec
or
jbe
mov
fmull
movsl
jmp
cmp
xor
movsl
pop
cmp
dec
cmp
push
repz
jbe
cmpsl
xchg
in
mov
adc
sbb
cmp
jns
adc
dec
jno
add
jb
cmp
sub
inc
mov
push
push
mov
rolb
mov
cmp
pop
jae
pusha
add
pushf
aaa
pop
call
xor
sub
addb
cmp
ss
mov
push
pop
fdivrl
aas
cs
pop
xor
shlb
dec
pop
add
pushf
jecxz
pop
aaa
xchg
cmpsb
decb
inc
aas
mov
or
sub
mov
xor
cmc
mov
push
pop
fucomp
in
mov
jg
jno
leave
pop
mov
pop
and
unpckhps
fmull
out
add
mov
mov
push
xchg
aaa
dec
shl
push
fstl
into
mov
push
jae
notl
inc
push
ss
ficomps
addb
pushl
jae
aam
les
aaa
je
jnp
mov
in
cmp
sahf
push
paddusw
push
add
scas
lock
aaa
int
mov
aaa
cltd
and
das
fnstcw
shlb
dec
fnsave
aam
and
shlb
out
les
cmp
aaa
pop
scas
jle
aad
out
xorb
or
lods
pop
lret
rcr
fidivrl
cmp
inc
sbb
adc
aaa
shlb
insb
aaa
fidivl
call
sub
sbb
dec
mov
add
aaa
xchg
repz
mov
neg
fdivs
loopne
pop
cli
dec
les
mov
jge
mov
mov
enter
stos
push
aaa
jno
mov
test
sub
shll
add
clc
sbb
xor
inc
aaa
inc
mov
fildll
test
stc
jg
xor
dec
mov
lods
aaa
dec
adc
aaa
mov
inc
mov
rorb
mov
aaa
pop
xor
insb
xchg
je
lcall
xor
int3
jno
cmpsb
out
movsl
pop
sub
add
in
xchg
das
aaa
or
jecxz
push
idivb
mov
dec
xor
clc
icebp
inc
sub
test
push
or
pop
cmp
lods
aaa
dec
dec
gs
test
mov
pop
les
or
insb
mov
dec
dec
in
pop
mov
mov
repz
sarl
dec
shlb
aaa
sub
pushf
nop
data16
adc
or
mov
aaa
aam
repz
jle
aaa
movsb
sbb
ret
fwait
or
jge
pop
pop
test
xchg
lret
insb
addr16
dec
decl
in
sub
mov
cwtl
xchg
roll
movsb
cmpsl
rcr
aaa
mov
scas
and
jbe
outsl
add
imul
repz
pop
lret
loopne
add
cld
push
inc
aad
xor
jl
add
mov
enter
inc
cmc
insb
dec
xchg
and
mov
xchg
xor
divl
and
cmp
adc
ja
xorl
mov
pop
test
pop
mov
xchg
mov
and
pop
xchg
out
mov
push
sub
or
pop
cwtl
cltd
mov
jne
es
adc
push
sub
xchg
inc
sbb
fisubs
test
jge
jbe
mov
sti
and
cli
and
mov
mov
xor
inc
xchg
dec
lahf
sti
out
aaa
push
push
out
pop
push
nop
test
mov
icebp
pop
mov
xchg
lahf
inc
adc
js
jg
outsl
sub
sgdtl
inc
sbb
clc
xchg
aaa
mov
or
sbb
test
sti
cmp
push
pop
jl
or
mov
fcmovnu
cwtl
xchg
into
jb
dec
pop
mov
aad
sbbb
inc
dec
mov
lds
or
and
mov
pop
dec
sbb
add
push
shll
adc
push
push
sbb
repnz
xchg
xor
fidivrl
aaa
fdiv
push
sti
lods
push
fnstenv
add
jne
pop
out
adc
jl
xlat
clc
in
lds
mov
mov
cltd
cwtl
les
addr16
xchg
xor
stc
movsl
mov
arpl
sub
mov
ja
jbe
dec
sub
mov
and
mov
mov
ds
mov
fidivrs
jge
aam
mov
add
xchg
push
push
ja
jne
fwait
or
adcl
aaa
add
sbb
or
in
inc
push
cmp
adc
jmp
cmp
rcrl
xorb
pop
xor
jns
jae
aaa
or
roll
aaa
cmp
sarb
aad
xor
out
inc
insb
popf
jne,pt
adc
cwtl
std
cmpsb
add
jno
loop
mov
cmp
mov
xchg
aaa
sbb
call
in
mov
movsb
mov
and
popf
ret
sti
xchg
nop
in
imul
aaa
fadd
js
mov
dec
add
cmp
cmpb
mov
jmp
stos
or
aaa
insl
jecxz
stc
cli
mov
cmp
jns
incl
add
das
jo
xchg
push
js
jg
xor
xchg
mul
pushf
mov
sbb
cli
xlat
fadd
aaa
pop
icebp
pop
jnp
mov
inc
aaa
repnz
sbb
aaa
test
lret
das
mov
sbb
sbb
hlt
jb
jo
decb
sbb
sub
mov
sahf
punpcklbw
mov
icebp
lahf
aas
in
aaa
into
das
xor
xchg
es
rcr
arpl
push
cmp
adc
movsl
scas
lock
ja
sbb
pop
aaa
pushf
inc
fwait
dec
fs
lret
int3
sub
jmp
mov
or
sub
subl
nop
loopne
pusha
pop
add
aaa
dec
decb
test
xchg
cmp
and
inc
cmp
sub
loopne,pt
pop
pop
ss
imul
pop
popa
sarb
popf
jo
lds
dec
adc
mov
addb
dec
lret
aam
rclb
push
and
mov
lahf
iret
les
js
dec
sub
mov
aaa
shlb
int3
gs
inc
scas
shrb
add
xchg
adc
popf
loop
incb
adc
aaa
in
jge
mov
sbb
sahf
mov
lcall
aas
adc
jecxz
mov
fwait
aaa
mov
ljmp
adc
jb
aam
xorb
cli
cmpsl
loop
mov
cmp
or
mov
mov
adc
addr16
aam
sbb
dec
mov
push
dec
push
dec
sti
pop
xor
rclb
out
sahf
jno
dec
pusha
aaa
in
jle
test
aaa
ffreep
push
sub
in
stos
aaa
and
out
test
nop
adc
lods
pop
dec
insl
sbb
sbb
leave
push
jle
aam
pop
aaa
sbb
ret
movsb
mov
push
add
inc
movaps
add
aaa
fistpll
std
lea
es
jb
add
adcl
fstps
aaa
mov
stos
js
push
mov
lahf
jns
adc
inc
cwtl
ljmp
cmp
pop
imul
test
add
fdivs
in
hlt
imul
lret
es
push
mov
aaa
inc
stos
jne
jno
mov
bound
sti
rcll
or
ret
into
push
dec
in
xchg
shrl
shlb
aad
xchg
jnp
lea
pop
in
inc
mov
stos
jle
loopne
popl
insb
lcall
sysret
in
imul
stos
scas
push
sbb
rolb
aaa
cmp
adc
ret
xorb
sbb
in
jbe
jmp
push
aaa
daa
inc
mov
pop
mov
aaa
lret
sahf
jae
out
shll
movsl
pop
pop
dec
lds
enter
add
bnd
fisubs
stos
cs
aaa
mov
sahf
push
mov
xlat
aad
and
mov
mov
scas
or
test
xor
imul
repnz
inc
into
xchg
inc
pop
sti
cmpsb
mov
push
aaa
cwtl
mov
add
aaa
jmp
lods
inc
scas
or
and
aaa
addr16
out
mov
jge
in
mov
inc
inc
xchg
out
adc
pushf
aaa
add
mov
sahf
adc
fs
xor
test
ljmp
sti
out
jp
push
aaa
pop
or
mov
xor
xchg
aaa
pop
das
xchg
xchg
bound
xchg
mov
mov
idiv
jno
shl
jge
int3
rcll
fs
jle
lret
mov
aaa
lcall
movsb
aaa
int3
loopne
sbb
xchg
xchg
jmp
add
jl
cmc
or
jmp
mov
add
sub
cmp
enter
cmpsl
sbb
add
aaa
pop
js
and
or
pop
lahf
mov
aaa
mov
push
aaa
push
adc
inc
jmp
jmp
mov
cmp
sub
cmp
or
and
scas
out
dec
mov
lcall
mov
lods
aaa
cmp
aam
jb
sub
mov
inc
inc
dec
roll
xchg
or
lods
or
in
cmp
mov
test
cmp
aaa
ds
sar
pop
sub
add
pop
xchg
mov
push
mov
out
test
or
mov
rcrb
mov
aaa
push
add
sub
aaa
pop
flds
testl
orl
cmp
repz
mov
adc
jno
push
mov
jbe
das
stos
adc
shrb
xor
push
popf
xchg
pop
fwait
dec
das
test
bswap
cmpsb
mov
shlb
cmp
addl
outsl
and
and
and
or
and
dec
sbb
add
add
adc
cmp
das
mov
test
aaa
xchg
fucomi
sar
lret
aaa
mov
push
xor
push
mov
mov
js
das
cmp
daa
popa
inc
dec
mov
or
aaa
pop
test
scas
imul
aaa
les
loope
lods
sub
inc
aaa
xchg
cld
mov
shlb
xor
loopne
and
scas
cmpsl
aaa
in
jge
in
cmpsb
mov
jo
dec
test
out
push
xchg
xchg
inc
xorb
push
ffree
nop
std
add
popf
int
imul
xor
pop
jb
xorb
int
jnp
lahf
push
add
jns
dec
adc
or
mov
jno
push
or
mov
aam
and
mov
jnp
test
cmove
jl
push
or
mov
sbb
and
aaa
icebp
inc
shlb
shrl
std
lods
imul
out
out
inc
in
cmc
les
stos
ljmp
jno
loop
xor
and
pushf
and
xlat
mov
and
shrl
cli
rcr
jecxz
in
rcll
pop
push
jge
test
adc
lds
xor
jbe
jle
xlat
cmpsb
hlt
movsb
mov
lahf
stos
sbb
test
mov
imul
mov
clc
cwtl
adc
sub
xchg
incb
ds
es
mov
out
xor
aaa
lds
jnp
add
daa
inc
mov
dec
push
jo
loope
pop
aaa
xchg
cld
xor
push
pop
ss
addr16
fstpl
ret
scas
aaa
stos
pusha
lock
mov
insb
aaa
outsb
dec
mov
in
aas
bound
aaa
addr16
loope
dec
xlat
pop
mov
mov
xchg
je
jmp
stc
cmp
es
pop
xchg
or
sub
adc
jne
jmp
out
mov
lock
and
ja
and
mov
push
jle
dec
jmp
rcrl
js
jmp
out
imul
xchg
test
jecxz
test
jae
aaa
pop
in
nop
aam
stos
jb
xchg
sub
mov
cmp
cmpsl
hlt
jns
mov
out
aaa
xchg
adc
out
xor
pop
sbbl
add
mov
push
rorl
test
adc
add
in
loope
jno
jecxz
insl
lret
test
and
add
cmp
mov
nop
daa
lods
cmp
stc
or
xchg
fbld
mov
xor
sti
decb
jle
mov
clc
cmp
es
rolb
push
sub
les
jg
jp
pop
and
push
pop
test
or
jmp
stc
or
in
adc
and
cmp
adc
rorl
lret
mov
aaa
movsl
rolb
int
adc
cmc
aaa
push
mov
movsl
andb
xchg
lods
inc
aaa
mov
mov
test
mov
and
popf
push
sub
mov
xchg
pop
lods
mov
insl
pushl
sub
aaa
cwtl
faddp
mov
dec
mov
push
jbe
fdivs
push
adc
out
and
sbb
in
mov
sahf
call
cli
mov
cmp
aaa
inc
dec
sub
xchg
and
fisubrs
cmp
push
aaa
or
dec
jns
sbb
rorb
into
sbb
dec
aaa
insl
lock
or
inc
shll
pop
mov
sbb
mov
js
sti
rorl
adc
insb
and
arpl
sbb
aaa
gs
fisttps
mov
aas
aaa
aam
cmp
cli
xchg
add
aam
or
sub
lret
mov
and
aaa
fxch
pop
mov
aaa
loope
out
xchg
rcrb
aaa
inc
dec
pusha
lahf
aad
jo
sub
mov
in
mov
and
scas
shl
int3
stc
mov
sbb
inc
bound
orl
mov
sarb
and
add
inc
stc
lahf
cmp
jge
movl
push
aaa
mov
sub
pop
adc
aaa
outsb
xor
jb
out
pop
aaa
sti
sub
mov
int3
fldcw
ds
clc
cli
leave
jle
shll
add
push
pop
aaa
dec
jmp
repz
std
push
mov
rolb
or
arpl
sbb
add
cmc
testl
sarb
lea
lret
orl
mov
sbb
or
cmp
rol
dec
xchg
stc
ret
or
ljmp
mov
lea
adc
fs
mov
loop
movsb
push
mov
dec
cmp
outsl
inc
lahf
popf
jne
aad
bound
out
xchg
pop
sub
jno
cmp
call
clc
or
add
mov
sbb
xchg
xchg
pop
daa
sub
aaa
push
sbb
mov
sub
pop
cmp
cwtl
jae
mov
cmc
cwtl
jmp
fsubrs
movsb
int3
cld
pushl
idivb
push
aaa
inc
mov
xchg
sbb
mov
mulb
xlat
out
add
inc
aaa
mov
dec
test
leave
out
xchg
icebp
jg
mov
sbb
mov
jnp
outsb
xchg
jge,pn
mov
scas
pop
test
pop
lea
iret
mov
cltd
and
aas
ja
and
cmp
ret
cmp
push
jge
xor
dec
lock
xchg
dec
mov
or
push
fsubl
jg
leave
inc
aaa
mov
jne
loop
lret
mov
aas
and
cmp
pop
push
scas
mov
call
mov
push
rcll
or
pusha
sub
push
ret
mov
testl
lock
in
add
push
push
adc
jb
cmp
hlt
repz
rcll
test
je
lret
add
gs
shll
or
or
mov
jae
fwait
mov
cmp
addr16
dec
mov
adc
fdivl
in
dec
mov
cmp
and
mov
mov
and
mov
mov
cmp
xchg
movsb
mov
je
inc
cli
sub
in
mov
sahf
addl
out
insl
jnp
js
xchg
test
cli
aaa
mov
call
pop
mov
aam
sbb
stc
imul
dec
sahf
mov
xchg
lods
stos
insb
pop
cmp
movsl
inc
pop
dec
lds
loop
sub
jnp
jae
sarb
xlat
dec
dec
roll
enter
lret
hlt
stos
jl
inc
sub
inc
add
cli
clc
add
arpl
sub
and
test
addr16
fmull
add
and
sarb
or
sub
ljmp
lcall
js
add
daa
push
aaa
jmp
sbb
aam
aaa
cmpsl
mov
mov
cmp
inc
mov
mov
ljmp
loope
adc
aaa
mov
inc
lret
dec
fcmovb
dec
es
cltd
pop
jns
xchg
aas
cmp
push
std
push
mov
cmp
adc
cmp
cmpsl
outsb
xchg
inc
inc
pop
or
sbb
in
test
aaa
xchg
xchg
mov
lcall
outsb
sub
mov
js
inc
adc
jl
jg
clc
add
daa
aaa
subb
test
cmpsl
mov
push
outsl
shrb
push
push
mov
hlt
pusha
dec
push
clc
aas
xor
mov
lods
mov
adc
jbe
pop
test
adc
js
mov
xchg
aaa
int3
sti
dec
push
cmp
cmp
je
mov
xchg
int3
push
cmp
mov
or
test
loope
aaa
lret
mov
aaa
inc
fdivl
adc
inc
dec
cmpsb
test
jg
inc
cs
push
dec
faddl
push
pushfw
aaa
adc
jge
mov
add
stos
cld
rorl
bound
lcall
push
sbb
loopne
ficoms
add
pop
mov
sbb
popf
xor
mov
les
inc
aaa
mov
hlt
jmp
pop
push
inc
mov
mov
and
sub
in
imul
or
rol
mov
cld
aaa
imul
add
add
adc
stos
cmp
shlb
enter
dec
jmp
jmp
mov
jno
lods
out
jne
sbb
test
add
stos
adc
push
adc
cmp
iret
lahf
aaa
lret
out
push
dec
in
imul
movsb
jbe
xlat
xor
into
jle
mov
mov
and
aaa
imul
add
adc
leave
js
cmp
shl
hlt
xor
adc
int
mov
jnp
dec
fdivp
fsubrl
aaa
xor
outsb
cli
ds
aaa
test
cld
movsl
aaa
fnstcw
adc
ja
out
aaa
fildl
fwait
cmp
gs
push
sarb
sbb
int
push
cli
aaa
jge
cld
push
jne
xor
mov
ja
aam
jl
mov
hlt
pushf
js
les
xor
jecxz
inc
sti
push
ret
aaa
xor
sub
mov
clc
std
pop
ficompl
cmp
int
aaa
dec
addl
or
pop
jle
outsb
sub
mov
adc
xor
mov
repnz
pop
mov
ljmp
aaa
push
sub
mov
imul
aaa
lret
iret
or
inc
sbb
stc
sbb
adc
cmp
adc
aaa
xor
cmp
int
and
add
sbb
jge
jne
fimuls
movb
fs
aaa
jno
push
xor
push
mov
mov
sub
push
sub
and
push
jb
sahf
mov
fs
mov
out
adc
inc
cmpsb
popa
clc
xchg
out
hlt
sub
xchg
clc
jo
mov
xchg
jbe
pop
lods
loop
pop
aaa
jmp
sub
xor
mov
and
mov
aaa
dec
sbb
nop
jg
and
aaa
mov
ficomps
aaa
sarb
inc
sub
mov
arpl
inc
mov
aaa
mov
jg
cmpl
out
aaa
mov
seta
mov
ljmp
add
js
push
pusha
jae
and
arpl
mov
cli
int3
dec
aaa
pop
cld
fisubrs
push
cmp
xor
cwtl
cmp
pushf
mov
aaa
sub
sbb
and
jl
out
inc
ja
add
shll
or
mov
mov
sbb
mov
xchg
aaa
cmpsl
mov
int3
loopne
stos
jge
lret
sub
lahf
js
cs
jp
jb
or
adc
or
mov
push
mov
lods
leave
fcompp
repz
aaa
jo
data16
adc
xor
lcall
movsl
imul
shl
popf
mov
repnz
lcall
xor
mov
push
scas
sldt
adc
test
cmp
mov
arpl
jle
fnstenv
cmpsl
inc
push
and
or
sub
mov
sbb
repz
pop
inc
push
sbb
lock
aaa
int
mov
sub
xlat
loope
cmc
aaa
int3
ljmp
and
pop
hlt
lods
push
mov
push
aaa
push
mov
enter
mov
out
ret
or
xor
mov
nop
push
dec
inc
push
shll
sub
shlb
in
jmp
xor
outsb
imul
aaa
andl
sti
rcll
lods
mov
xchg
insl
sub
aaa
sub
sbb
xchg
cmp
dec
ss
jbe
dec
aaa
mov
cmp
lret
incb
dec
xor
enter
xlat
mov
clc
sbb
mov
push
mov
xchg
aaa
imul
mov
aaa
add
sub
sub
imul
xchg
je
push
aaa
xchg
pop
sub
mov
pushf
das
aaa
jl
sub
jecxz
fcompl
incb
adcl
lret
cmp
aas
push
xchg
mov
jge
and
fs
push
rcl
test
data16
lods
clc
add
mov
push
ds
add
or
mov
xchg
aaa
loope
cli
mov
sti
pop
or
lret
lret
fmul
dec
div
add
sbb
test
xchg
cmp
mov
lcall
push
add
mov
icebp
aaa
jle
xchg
push
mov
fildll
pushf
jns
hlt
xor
mov
movsb
add
adc
mov
mov
or
fcom
test
in
outsl
sub
ret
inc
or
inc
or
fimuls
jge
xor
or
testl
out
outsl
out
cmp
leave
inc
divb
mov
stos
cli
aas
xlat
aaa
mov
jb
js
lret
fs
push
mov
sbb
daa
rolb
aaa
mov
imul
mov
movsl
pop
sbb
data16
sub
arpl
popf
or
push
inc
fwait
shlb
inc
dec
fnsave
or
ja
pop
in
imul
fsubs
add
pop
jno
push
movsb
js
btrl
and
lods
push
xchg
mov
aaa
or
dec
jb
mov
push
aaa
inc
add
in
push
roll
push
stos
push
push
pop
cmp
pop
pop
mov
dec
xor
push
sarl
mov
inc
int3
sub
ret
andb
or
lock
into
dec
xor
mov
aaa
test
jl
xor
xlat
fildll
mov
std
cwtl
std
or
aaa
sub
pop
cmp
jb
mov
scas
pop
cmc
dec
fldt
pop
sti
int3
fsubl
or
daa
clc
jl
add
ror
inc
cs
mov
pop
int
aaa
jg
jo
xchg
enter
pop
mov
lods
pop
mov
add
repnz
cmp
aas
mov
aaa
pop
ds
cmpl
cmp
or
jo
aad
sbb
mov
mov
ret
scas
ja
outsb
mov
in
aaa
rcr
push
lock
imul
jecxz
pop
xchg
mov
test
lea
mov
sbb
js
stos
cmp
aaa
testl
pushf
dec
popa
test
xor
mov
jg
mov
xor
aaa
push
inc
leave
pop
setl
push
enter
pop
mov
sti
mov
aaa
sbb
cli
jge
adcl
jecxz
out
aaa
mov
ljmp
enter
and
outsb
ror
sub
fisttpl
push
xchg
jae
push
daa
ret
aaa
mov
cmpsl
out
lods
adcl
xor
adc
adc
mov
dec
sahf
aaa
adc
adc
mov
aaa
aad
cld
scas
pop
movsb
mov
aaa
push
push
jnp
rclb
filds
loope
aaa
cmp
sar
add
loope
mov
dec
movsl
push
cmp
fsubrl
pop
cmc
test
scas
jne
cmp
sbb
add
push
and
xor
cld
popa
hlt
test
mov
push
aaa
xchg
pusha
ret
pop
mov
aam
aaa
hlt
gs
inc
out
mov
repz
ja
inc
rcr
ret
adc
pop
mov
sub
dec
dec
loopne
push
aaa
inc
pop
loope
lahf
inc
jo
aaa
sbb
mov
into
movsb
xchg
aaa
xlat
fsubl
addr16
in
add
decl
repnz
pop
fisubs
xor
jb
mov
daa
sub
aaa
popa
cmp
xchg
mov
push
or
sahf
rorb
mov
imul
jmp
add
or
adc
mov
lock
or
sbb
lods
in
mov
in
aaa
rcl
shrl
scas
cli
mov
push
xor
xchg
dec
sub
sub
fnstenv
loop
sahf
fdiv
andl
jp
leave
aaa
mov
cmp
lods
clc
cmp
mov
cmpsb
adc
dec
inc
call
pop
scas
jmp
ljmp
cwtl
cmpsl
scas
aaa
rcrl
cmp
xchg
in
fsub
aaa
inc
popl
lahf
cwtl
in
aaa
sbb
test
xlat
add
xchg
mov
push
ja
mov
aaa
adc
dec
out
sbb
jl
gs
popf
or
or
stos
sub
pushf
repnz
mov
mov
sbb
in
cmp
sub
les
dec
aad
xchg
out
mov
addr16
es
test
andl
cltd
push
cmp
or
aaa
dec
outsb
inc
cmpsb
pop
pop
xor
int3
fbstp
sbb
jmp
dec
aaa
xchg
mov
mov
aaa
and
cmp
sub
fs
cmp
out
push
inc
or
lock
loop
mov
cld
mov
and
and
shlb
loop
inc
push
loope
aam
aaa
scas
outsb
stc
and
repnz
pop
cmp
nop
push
mov
or
and
lret
xchg
js
loop
xchg
or
aaa
jno
stos
scas
mov
rcr
cmc
jnp
inc
or
aaa
mov
push
mov
adc
xchg
jge
jl
ds
add
cmp
aaa
sbb
xchg
mov
addb
icebp
rorl
dec
mov
pushf
aaa
mov
xor
add
inc
adc
sub
add
lock
aaa
hlt
in
rclb
add
adc
cmp
sub
cltd
pop
sub
mov
fcmovne
sub
adc
or
mov
cli
pop
mov
enter
imul
mov
dec
movsl
xor
or
add
push
jne
adc
jge
inc
outsl
cmp
jne
pcmpeqw
or
inc
insl
bound
mov
xchg
psubd
loope
add
or
mov
pop
xor
dec
add
out
inc
rcll
mov
outsl
fdivrs
adc
cwtl
dec
and
pop
dec
fdivrs
addl
mov
cwtl
dec
mov
jecxz
xor
mov
jmp
daa
or
jg
sbb
mov
test
adc
mov
enter
mov
and
adc
dec
add
pop
inc
pop
mov
ja
jg
add
lcall
pop
mov
mov
mov
cmovns
or
leave
pusha
sbb
stos
add
in
push
adc
pop
imul
add
sbb
lock
sahf
xchg
mov
jnp
pop
adc
fildll
xor
add
stos
arpl
ret
outsl
pop
lea
scas
or
popa
shrl
cs
imulb
loop
pop
mov
inc
frstor
into
mov
push
jge
or
mov
push
mov
lods
imul
ret
mov
cmc
mov
test
mov
enter
mov
pop
or
imul
stos
ficomps
ffree
push
outsl
test
push
enter
sbb
pop
adc
jge
inc
dec
jne
adc
dec
insl
pop
ret
lods
pop
push
lods
cs
leave
adc
mov
push
out
repz
or
push
xchg
outsl
es
pop
clc
fwait
sbb
xchg
lods
xchg
adc
sub
iret
adc
adc
pop
scas
iret
push
lods
mov
mov
add
add
add
mov
enter
and
cmp
lds
je
ficoml
bsr
int3
aam
or
mov
int3
push
fisttpl
stos
and
adc
dec
mov
scas
inc
or
cmp
xchg
mov
mov
push
add
in
push
cmpsb
in
sub
pop
xorl
push
pushf
adc
push
mov
scas
inc
or
dec
sti
pop
ud0
pop
add
std
ret
je
pop
mov
lcall
in
sbb
fisttpl
xchg
mov
outsb
orl
push
add
out
mov
mov
jle
push
push
dec
pop
jmp
dec
iret
ror
pop
cmc
or
scas
and
mov
inc
mov
outsl
add
dec
jmp
cmc
pop
jp
add
adc
sbb
mov
adc
stc
sbb
scas
stos
test
pop
add
aad
leave
cltd
into
lea
pop
pop
inc
loope
dec
jno
or
imul
int
fucom
mov
in
adcl
notl
lods
fidivl
cwtl
mov
xor
in
sbb
insb
hlt
xor
mov
mov
or
icebp
xorb
pushf
jae
jne
enter
icebp
popa
loope
xchg
mov
cmpsl
sbb
jns
add
mov
mov
in
mov
daa
mov
cmp
dec
jae
leave
push
adc
or
cmp
adc
xor
cmp
mov
adc
and
xlat
aad
jns
jne
enter
aad
jge
int
xlat
dec
sti
adc
clc
es
in
maxps
or
jne
leave
mov
adc
enter
dec
jne
daa
cmc
inc
clc
push
fcmovb
xchg
movsl
adc
into
subb
rorb
rep
cmpsl
or
leave
pop
inc
dec
mov
pop
or
out
xor
xor
leave
imul
ss
leave
pop
xlat
adc
in
push
sub
and
pushf
sti
push
or
mov
add
add
jne
sbb
jns
adc
cwtl
dec
push
push
mov
out
loopne
outsl
add
stos
rorb
mov
adc
inc
sbb
hlt
test
imul
adc
dec
or
leave
repnz
imul
nop
jne
movb
iret
push
inc
enter
xchg
xor
mov
dec
outsl
add
sbb
movsl
sub
pushf
rolb
add
aad
movsl
rcrb
adc
or
sub
nop
leave
sub
pop
imul
ljmp
dec
inc
adc
test
in
ss
or
lret
sahf
cmp
dec
sbb
xor
push
add
adcl
orl
sbb
mov
lret
test
push
mov
in
dec
sahf
dec
dec
sahf
inc
std
imul
mulb
sbb
mov
add
jne
adc
pop
jbe
sub
or
loopne
xchg
sbb
lret
xchg
xlat
rolb
sbb
jbe
add
adc
imul
jb
lret
call
lcall
popa
push
add
cmpsl
inc
jbe,pt
movsl
mov
pop
or
stos
jne
ljmp
ret
cmp
in
test
or
js
ja
daa
jl
lcall
jb
dec
jge
lcall
adc
jp
adc
adc
cmpsb
popf
xchg
or
roll
ljmp
testb
mov
movsl
out
add
dec
dec
lods
stc
add
ret
out
int
popa
dec
cvtps2pi
mov
pop
add
dec
lods
lret
cmp
inc
push
jmp
addr16
insl
nop
push
xchg
insl
push
imul
das
jl
sub
dec
add
mov
lds
inc
add
pop
movsl
pop
mov
inc
push
faddl
push
in
imul
les
add
push
sti
and
pushf
adc
sub
or
jno
arpl
or
or
xchg
or
mov
popf
mov
add
dec
xor
cwtl
rdpmc
jg
mov
sar
mov
jo
xchg
jne
xchg
or
fstpl
mov
mov
add
mov
jge
lods
adc
setp
sbb
add
cmc
cmp
stc
sub
cmp
push
dec
or
push
imul
pop
inc
adc
ds
sbb
or
dec
mov
pop
mov
sbb
sbb
cmpsl
lods
add
mov
add
ljmp
cwtl
out
adc
or
into
xchg
fucom
jmp
cmp
out
push
nop
dec
inc
push
int
add
std
subb
mov
in
stos
sbb
movsl
ret
mov
or
jns
imul
sbb
das
mov
inc
movsl
fcomps
ret
push
dec
pop
or
and
xor
xor
mov
lods
orl
movsl
ss
clc
jge
leave
jg
insl
dec
dec
or
mov
mov
test
sub
jge
test
lds
adc
or
mov
mov
or
jo
mov
popf
pop
pop
xlat
lahf
cmc
cmp
clc
mov
jmp
cmp
mov
insl
pop
mov
outsl
cmp
mov
aaa
rcr
stc
cmp
inc
int3
jae
aaa
dec
rorb
icebp
mov
std
sub
in
push
outsl
pop
nop
sub
xchg
mov
lret
jae
xor
sub
push
outsl
imul
lds
adc
push
nop
mov
fimull
cwtl
mov
sub
adc
push
mov
pusha
cmp
popf
jno
outsb
mov
das
push
xchg
mov
adc
jnp
adc
mov
test
imul
cmp
inc
lods
adc
stc
jle
ret
add
or
push
jg
or
mov
popf
mov
push
fisttpll
sbb
imul
test
jo
or
addr16
jnp
pop
lea
and
gs
or
push
icebp
mov
jp
gs
divps
and
mov
cmp
sbb
xor
jo
sbb
push
adc
enter
insl
jnp
test
lods
mov
jmp
cmp
test
inc
pop
icebp
test
mov
in
dec
call
insl
jnp
test
jecxz
pavgw
test
sbb
xchg
lret
push
int
pop
popa
mov
cmc
sbbb
jge
mov
add
lret
gs
inc
popf
in
push
push
push
adc
cltd
push
add
lods
push
or
imul
call
pusha
test
push
arpl
adcb
inc
push
sbb
mov
push
pop
jns
mov
push
push
or
dec
fstl
xor
or
mov
popf
movsb
pop
popf
cmp
pop
or
xor
add
sbb
mov
jno
sbb
pop
sbb
repnz
dec
mov
lds
ret
jg
jge
insl
sub
mov
cld
add
dec
cmp
pushl
xor
fnstenv
fdivrs
jg
jge
push
or
pop
push
fcomps
in
repz
loope
jb
jge
dec
adc
jne
mov
out
imul
xor
lods
add
mov
inc
push
pop
sbb
push
imul
xchg
sbb
and
test
int
ret
jae
mov
test
movsl
hlt
jne
push
adc
fbstp
sarb
mov
in
out
adc
mov
add
adc
inc
xchg
outsl
mov
jne
pop
in
clc
push
push
std
and
movsl
mov
enter
sbb
pop
in
outsl
sbb
and
jnp
fcomp
stos
pop
sysret
int
mov
xchg
xchg
pop
stos
vshufps
popf
mov
xchg
xchg
std
mov
andb
frstor
xchg
jne
sbbb
sub
paddq
aad
or
movsl
ret
mov
jnp
or
add
cmpsb
outsl
hlt
dec
push
cwtl
pop
test
mov
dec
dec
inc
sub
aad
subb
or
sbb
nop
arpl
scas
mov
test
out
push
fwait
sub
rorl
push
mov
pop
jnp
cmc
xor
imul
mov
aad
leave
in
push
lret
xor
mov
mov
jne
jnp
xchg
sub
mov
pop
sbb
mov
cmp
ja
inc
push
cmp
bound
bound
add
popa
dec
pop
inc
cli
sbb
arpl
mov
addr16
aas
and
jge
js
in
jo
xor
dec
std
pop
out
in
insl
pop
adc
dec
jge
inc
jnp
mov
shrb
lret
xchg
cmc
loopne
push
aas
adcb
sub
icebp
sbb
inc
mov
shrb
jecxz
mov
pop
push
addr16
stos
test
push
in
fsubrl
and
or
test
mov
fcomi
jge
lods
inc
inc
test
lods
adc
dec
test
andl
cmp
mov
sbb
xchg
fists
loopne
mov
dec
pushf
adc
dec
add
dec
lds
orl
test
adc
outsl
shl
mov
cmpsl
movsl
test
adc
test
lds
sahf
imul
push
nop
jmp
sbb
inc
aas
gs
or
xchg
sbb
das
imul
push
or
mov
movsb
pop
rcrb
or
adc
sar
sbb
call
das
scas
ljmp
mov
xchg
clc
jge
and
sbb
test
adc
fwait
mov
popa
rolb
adc
in
lcall
outsl
rorb
adc
mov
dec
lds
rolb
sbb
dec
jecxz
or
mov
pop
fwait
mov
pop
rcll
mov
push
std
sbb
adc
das
movsl
jnp
jg
lods
sub
pop
push
jmp
imul
das
subps
push
mov
rorb
jp
push
rcrb
cmp
hlt
dec
jnp
mov
cmp
mov
test
sub
push
movsl
sub
dec
das
xchg
xchg
jne
and
in
scas
sbb
jbe
sub
mov
in
insb
gs
xchg
in
sub
loop
push
push
or
loope
push
cwtl
int3
xor
ror
pop
stos
jnp
inc
xchg
lods
ja
in
popf
cmp
jge
fwait
xor
sbb
or
dec
nop
aas
sbb
pop
lea
jno
aad
adc
out
sub
sub
xor
setb
xor
sub
aas
jmp
dec
jne
push
mov
imul
push
jg
cli
aad
lods
adc
ret
sub
adc
dec
stos
pop
sbb
adc
jge
movb
loope
or
dec
dec
mov
jnp
std
push
dec
pop
sub
addb
dec
adc
mov
mov
mov
mov
cmp
or
jo
loopne
xor
gs
push
push
sbb
mov
mov
jmp
add
pop
rep
jp
jns
icebp
iret
data16
xor
in
cmp
push
xorl
jle
subl
test
aad
clc
mov
int
pop
les
or
sbb
and
popf
pop
mov
pop
enter
movb
ficoml
lret
and
fstps
stos
stos
fwait
int
lods
jle
nop
push
dec
pop
xor
or
insl
sub
mov
mov
xor
shll
mov
pusha
nop
test
sub
xchg
push
jae
add
jo
ljmp
or
sub
and
out
ds
popf
popa
lea
jmp
pop
mov
icebp
adc
xchg
push
cwtl
dec
push
icebp
mov
ret
xchg
push
or
or
clc
cmp
stos
sbb
movsl
and
pusha
inc
outsl
cmc
or
mov
pop
jns
push
aad
push
in
enter
cli
loopne
in
movsl
push
lahf
dec
std
pushf
push
inc
xchg
inc
xor
sub
mov
xchg
xchg
sub
fldt
or
fistps
lret
fldenv
jne
adc
adc
fiadds
xor
or
pop
jns
scas
pushf
lret
adc
dec
sub
lock
cmpsl
test
inc
popf
movsb
aad
or
ret
lods
mov
cld
dec
xchg
ljmp
aaa
mov
adc
or
add
addl
fcmovne
sub
test
mov
and
sbb
in
sub
push
pop
sub
sub
add
rcr
cmp
hlt
repnz
push
mov
js
sbb
call
dec
idivb
shrl
fcmovne
cli
dec
jmp
popa
popf
add
sbb
clc
xchg
fucomi
dec
add
test
mov
mov
push
jno
movsl
mov
mov
push
add
gs
aaa
pop
jnp
jae
inc
cmp
adc
int
or
add
mov
subb
imul
or
lds
int
pop
jnp
adc
xchg
adc
out
or
pop
dec
jnp
stc
loop
lods
adc
fimull
jge
sub
push
test
sbb
jle
test
jno
imul
cmp
mov
fldt
inc
jnp
rcr
in
punpckhwd
out
adc
or
dec
cmp
jnp
lds
mov
loopne
sbb
sbb
jo
or
and
mov
mov
xchg
dec
push
scas
sbb
jno
ss
cmp
gs
add
sbb
dec
pop
jnp
push
test
out
in
mov
aaa
add
cmpb
mov
add
adc
pop
mov
addb
incl
stc
aas
or
clc
in
addb
jp
loop
addb
jno
sbb
loope
mov
add
pop
sub
pop
shlb
or
cmp
mov
xchg
test
pop
mov
xor
mov
andl
lods
fisubrs
rcll
popf
jp
mov
xor
cmpsl
adc
insl
outsl
or
push
cwtl
mov
adc
dec
inc
adc
popa
out
xor
adc
lds
adc
maxps
jb
in
jno
push
stos
mov
in
jp
lds
in
addr16
jl
in
xchg
sti
frstor
stos
add
adc
xchg
adc
popf
sub
ss
cmp
jae
cli
addr16
gs
adc
out
test
daa
popa
in
jo
or
gs
dec
fisubrs
xchg
jnp
fistps
inc
and
jno
popf
dec
push
inc
pop
xchg
aas
mov
imul
adc
mov
pop
sti
cmpsb
dec
ja
inc
mov
cmp
push
fldt
cld
cmc
sub
popf
arpl
xor
mov
dec
daa
setg
rcr
or
lret
dec
filds
les
adc
sar
mov
pop
xor
stos
ret
int
arpl
lret
mov
insl
jb
sub
xchg
mov
popa
or
push
dec
sbb
push
xor
add
sbb
shll
das
in
stos
xor
jne
pop
cmp
inc
pop
dec
add
pop
xlat
jnp
movsl
fs
inc
mov
pop
jns
cmc
lods
pop
push
and
dec
test
adc
and
xor
jge
sbb
sbb
das
stos
int
dec
push
cld
mov
stos
adc
cmp
rcrb
or
test
jne
lea
adc
add
jmp
mov
or
push
sbb
and
popa
shlb
sub
xchg
pop
jno
loop
aad
xchg
out
int
sub
scas
dec
jle
push
shrb
push
subl
stos
loope
push
bound
push
lds
rcl
jno
pop
jp
insl
push
int
push
aaa
sub
mov
mov
or
js
xchg
xlat
mov
shrb
dec
xchg
ss
add
mov
fnstenvs
mov
popf
push
jne
mov
mov
clc
pop
jge
rolb
or
popf
adc
nop
insb
in
cli
mov
cwtl
adcb
int3
jne
pop
sbb
jge
int
rolb
and
clc
lcall
and
out
xor
ja
cmp
repnz
dec
stos
mov
push
int
cmp
jns
mov
cmp
in
lds
test
dec
sbb
aas
or
dec
cmpsl
push
push
outsl
gs
rclb
aas
aad
shlb
int
ja
mov
icebp
xchg
pop
inc
aas
roll
fstl
or
repz
adc
lret
pop
and
imul
cld
in
nop
icebp
mov
test
fiaddl
jg
nop
or
mov
cmc
adc
sub
neg
gs
add
xchg
nop
lea
je
pop
inc
scas
cwtl
push
pop
fucomp
lea
or
and
test
pop
inc
sbb
adc
adc
lret
inc
int
dec
jnp
cltd
pop
bound
dec
cli
jge
les
jle
push
adc
insl
int3
fistl
inc
add
and
rol
lahf
int
push
jge
sub
jecxz
lods
mov
adc
add
in
lds
aas
dec
icebp
dec
mov
and
in
jmp
dec
cmpsl
and
mov
push
jbe
push
aad
gs
nop
xchg
mov
gs
jnp
ljmp
enter
mov
insl
adc
in
sbb
sti
pop
test
enter
cmc
es
and
push
push
mov
sub
dec
ja
insl
and
repz
bound
or
fsub
or
incl
xchg
lds
or
lcall
fstps
mov
std
movsl
in
in
push
inc
pop
push
in
push
sub
int
das
inc
push
jmp
xor
mov
fwait
in
jge
ds
shlb
cmp
pop
add
adc
jno
or
mov
adcl
mov
pushf
jp
fildll
inc
fldl
sbb
stc
sub
aad
sub
jo
inc
scas
stc
cmp
dec
gs
push
fbstp
push
sbb
imul
sbb
insl
cli
sub
pop
dec
push
mov
rcl
sahf
jmp
int
pop
sub
or
outsl
clc
jno
xor
mov
outsl
inc
cmp
nop
dec
mov
sub
rsqrtps
push
aad
fwait
rorb
clc
loopne
jge
sub
sbb
push
add
adc
pop
push
enter
in
cmp
xor
dec
rclb
scas
das
mov
push
jl
inc
jnp
lcall
out
jnp
fs
leave
jmp
std
in
mov
mov
cmc
mov
lds
sbb
sti
xchg
sbb
addr16
add
icebp
inc
ja
jg
cmp
mov
popa
sbb
xor
xor
xchg
movsl
sar
int
sarl
inc
dec
dec
push
mov
jmp
movsl
mov
adc
inc
jb
add
shlb
add
faddl
pop
es
jge
sbb
xchg
cmp
test
or
adc
pushf
pop
mov
lcall
cmpsl
es
jo
add
add
insl
mov
sahf
insl
lea
push
push
cmc
insb
adc
xchg
divl
out
shlb
xchg
ljmp
xor
pmaddwd
push
shll
push
mov
ljmp
xor
inc
imul
mov
in
repz
cld
xor
jno
sarl
add
push
rolb
xchg
ds
dec
lds
inc
cmp
xor
mov
cmp
xchg
dec
test
cmp
or
push
mov
mov
or
mov
test
andb
outsb
jo
and
sub
add
out
lock
daa
ret
fwait
loope
or
push
jnp
arpl
xchg
inc
adc
cmp
imul
xchg
inc
in
lds
enter
or
std
mov
int3
jge
addl
lods
jno
data16
cmp
push
std
pop
or
push
mov
pop
fmuls
lods
cmp
scas
inc
jnp
mov
mov
jae
rorb
shlb
rcl
xorl
or
adc
rorb
fstl
cmp
int3
xor
cmpsb
adc
mov
mov
cmp
xchg
das
xchg
push
pop
arpl
int
sbb
add
ds
add
inc
xchg
adc
imul
enter
pop
jge
jo
lcall
dec
lds
int
and
dec
fstl
sub
jge
out
pop
arpl
enter
stos
rcll
xor
cmp
pusha
insl
xchg
shlb
std
xchg
inc
lods
ficoml
push
insb
outsl
lods
jne
pop
pusha
dec
inc
leave
push
aad
lods
loope
mov
outsl
mov
dec
mov
adc
sbb
lcall
adc
sbb
fsubrs
lret
mov
sbb
lea
xchg
mov
sbb
insb
mov
loope
xlat
aam
jns
lods
mov
jo
sub
sarb
pop
dec
cs
outsb
enter
jge
push
jle
das
add
or
sbbl
cmp
mov
xor
xor
sbb
dec
out
addr16
lahf
sub
lea
mov
mov
cwtl
dec
lods
pop
inc
push
xchg
xchg
cmc
stc
push
mov
jmp
and
outsl
icebp
push
fstpt
out
cmp
gs
xchg
outsl
aas
xchg
or
push
pop
test
in
shrl
dec
cld
jne
aad
xchg
and
pop
dec
sub
fwait
jmp
das
or
xor
dec
test
fs
cmpsb
std
rol
nop
pop
sbb
pop
xchg
mov
inc
cmp
mov
jno
push
je
jl
jecxz
stc
mov
pop
lahf
inc
imul
sbb
arpl
movsl
mov
push
addr16
shll
jns
fidivrs
sbb
sub
jge
outsb
rcr
cmp
gs
jo
add
mov
mov
stos
mov
fldenv
jbe
jmp
rclb
adcb
sbb
dec
call
inc
out
call
dec
jns
add
inc
rcll
pop
jge
lret
rcr
mov
out
xchg
ret
xor
and
addr16
xchg
clc
xor
xchg
push
cltd
ret
or
mov
cmp
inc
dec
mov
jne
rcrb
btrl
aad
jbe
jge
mov
add
pop
std
sbb
jge
arpl
jle
fcompl
cmpsb
push
xor
or
repz
icebp
out
negl
push
mov
xchg
mov
cmp
and
jp
and
push
sarl
xchg
push
insl
xor
lcall
adc
enter
mov
imul
or
rcrl
test
sbb
and
mov
pusha
jno
push
int
or
or
fwait
jno
or
and
and
adc
or
popa
sub
jge
jo
daa
mov
shrl
les
sbb
out
cmc
fstl
mov
xor
xor
jmp
pop
dec
dec
add
lds
push
sub
push
push
push
sub
xchg
adcb
stos
mov
pop
xchg
or
icebp
jo
jo
lods
sbb
pushf
shll
or
and
loopne
movsb
lods
adc
xchg
lea
dec
dec
cmp
jbe
sub
scas
pop
lods
push
popa
mov
jg
pop
add
xorl
arpl
cwtl
repz
mov
dec
or
dec
adc
gs
push
insl
dec
add
or
js
ljmp
bound
mov
repnz
mov
pop
outsl
mov
mov
lds
rorl
push
mov
jns
test
cmp
mov
pop
popa
mov
jp
sub
lds
lods
int
imul
lret
inc
inc
adc
rcrb
lea
incl
push
daa
fiadds
dec
adc
xchg
movsb
add
or
je
adc
test
rol
xlat
sti
dec
test
add
and
dec
cmc
xchg
stos
mov
icebp
mov
mov
sub
pop
hlt
add
mov
fisttps
fistps
pop
loop
nop
cmpsl
into
loop
aad
pop
mov
mov
fidivl
insb
inc
adc
ficompl
cmp
popf
addr16
inc
imul
hlt
ljmp
sti
adc
test
stos
pop
jne
pop
pop
lcall
push
xlat
mov
inc
call
popf
lea
clc
insb
rclb
sbb
jne
adcl
inc
ds
push
push
xchg
scas
in
and
jno
pop
sbb
test
fldl
jb
xchg
jns
dec
gs
outsl
add
cwtl
mov
mov
pop
jno
jnp
rsqrtps
lret
jge
sbb
addr16
jno
pop
daa
dec
and
in
xchg
loopne
gs
cli
sub
sbb
ja
cmpsl
lea
lods
orl
mov
pop
sbb
adcb
push
add
out
sub
adc
cltd
add
jnp
outsl
out
sbb
insl
add
jne
mov
xlat
test
inc
mov
push
sahf
adc
sbb
movsl
daa
adc
test
lods
icebp
je
fs
inc
xchg
push
jno
flds
adc
mov
sbb
jae
push
out
pop
push
jg
test
cmp
gs
pop
xchg
int
cld
sbb
mov
and
mov
orb
dec
insb
dec
popa
xchg
adc
or
jnp
pop
or
lahf
mov
inc
cmc
add
mov
jns
aas
cmc
push
sbb
sub
cmpsl
dec
and
xchg
push
mov
sbb
dec
gs
insl
jno
data16
std
scas
mov
pop
or
jmp
xlat
or
inc
mov
insw
fstl
lock
rorl
fnstenv
cmp
mov
xchg
ss
jge
imul
insl
lahf
sub
frstor
nop
xchg
inc
jge
test
fwait
out
cmc
push
das
cmp
std
popf
dec
lds
or
cmpsb
lock
in
jbe
test
push
pop
lea
or
lcall
stos
pop
mov
into
jp
xchg
adc
inc
lds
inc
mov
add
lods
pop
and
and
nop
int
mov
pop
daa
hlt
inc
cli
shl
call
aam
add
imul
fbld
ret
jno
outsb
or
inc
jo
cmpxchg
and
idivl
dec
inc
or
nop
xor
movsb
arpl
jnp
mov
pop
addl
int
or
pop
and
int
test
inc
adcl
repz
lods
dec
cmp
or
mov
clc
stc
pop
xor
popa
xchg
movsl
add
push
sbb
jg
out
mov
xchg
leave
mov
shl
jmp
xor
xchg
inc
adc
jmp
xchg
mov
in
sbb
jne
and
cmp
jp
pusha
mov
daa
sarb
cmpsl
jo
adcb
stc
cmp
mov
jns
cmpsb
daa
in
out
into
jmp
fucomp
outsl
lret
jno
add
pop
into
dec
ljmp
movsb
push
adc
adc
or
pop
cvtps2pd
pop
aas
dec
cli
outsl
cmc
mov
inc
dec
nop
xlat
jns
popa
into
mov
icebp
push
jecxz
fcomp
mov
ljmp
movsl
push
jo
mov
shrb
cld
jl
imul
adc
dec
pop
aad
or
dec
test
icebp
nop
insl
insl
pop
ret
or
bound
gs
sbb
fwait
pop
daa
mov
mov
mov
cwtl
mov
push
icebp
add
cmc
nop
sbb
mov
jecxz
adc
je
mov
call
icebp
add
cmc
test
pop
pop
std
inc
out
push
xchg
inc
sti
add
mov
stos
sub
loopne
popf
movsb
add
int
scas
shl
pop
loope
movsl
sbb
or
mov
sbb
shlb
dec
sbb
mov
stc
insl
jmp
dec
daa
push
mov
call
sub
imul
xchg
imul
pop
or
ror
nop
xor
jne
pop
cmp
pop
ret
inc
dec
jp
fsubrs
add
dec
imulb
lods
xchg
icebp
and
dec
imul
pop
or
xor
addr16
jmp
lret
xor
jns
fnsave
pop
lcall
subl
js
enter
xor
call
mov
aam
sbb
lds
pop
cmp
add
or
mov
cmpsb
outsb
imul
aas
sbb
fwait
std
stos
sti
mov
popa
and
pop
aad
test
or
rcr
cld
movsl
push
mov
cmp
lret
xchg
aas
fs
mov
shl
paddusw
push
aam
mov
int
pop
mov
jne
adc
xor
dec
xchg
push
push
push
int
add
imul
cmp
lahf
xor
insb
push
inc
mov
jl
and
fwait
adc
movsb
cmpsl
dec
xchg
xchg
enter
mov
sbb
push
sbb
int
je
or
call
js
aaa
pusha
punpckldq
mov
aas
addb
inc
push
dec
xor
sub
test
xor
mov
ja
or
xor
out
cmc
push
outsb
mov
lods
dec
cmpsl
jne
insl
or
das
clc
xchg
idivb
xchg
cmpsl
jno
sbb
mov
daa
push
test
fistps
jnp
jns
das
xor
mov
hlt
xchg
adc
imul
cwtl
or
repz
mov
or
in
insl
and
adc
add
das
in
dec
adc
imul
xor
dec
adc
sub
xor
xor
outsb
dec
out
and
mov
fwait
push
ds
gs
in
sti
pushf
mov
aas
fiadds
cwtl
jl
lods
and
bound
ljmp
call
xlat
xchg
movl
inc
mov
or
arpl
loop
pusha
xor
ret
and
jmp
jbe
imul
or
push
cltd
jno
repnz
outsl
dec
or
imul
pop
movsl
xor
dec
jge
push
sbb
or
mov
cmp
ret
adc
inc
add
sbb
add
mov
xor
pop
sub
mov
and
fcomip
scas
sub
lret
out
lods
sbb
lret
repz
outsb
sbb
test
sbbl
sub
repnz
adc
popf
or
lds
jmp
loope
adc
xlat
jno
cmc
jg
faddl
jge
loope
data16
pop
xorl
mov
cmp
jnp
inc
sbb
mov
jg
or
pop
jne
mov
add
adc
jp
jb
dec
add
rcrb
mov
insl
sbb
add
out
nop
push
dec
inc
mov
or
outsl
aas
pop
push
or
adc
or
js
in
jge
add
sbb
xchg
aad
sbb
jbe
sbb
xor
mov
adc
mov
inc
popa
pushf
and
orb
jne
or
gs
nop
xor
int
loop
pop
sub
ss
das
add
nop
mov
adc
mov
or
test
sahf
vcvtsd2si
loope
sbb
push
mov
jbe
jl
inc
sbb
xor
fstps
jbe
or
cmc
xchg
jns
aas
loopne
cmc
add
push
cmpsb
adc
shlb
clc
inc
hlt
sbb
das
mov
and
mov
sub
jge
in
scas
pusha
in
aas
stos
lods
xlat
movsl
inc
jmp
enter
das
cltd
test
inc
stos
cmpsb
outsl
cmc
scas
pop
sbb
or
inc
cmp
lret
lds
icebp
jo
dec
jge
mov
sbb
mov
adc
or
imul
pop
jns
into
mov
movsl
push
in
mov
xlat
movsl
and
movaps
cli
sub
ljmp
enter
in
sbb
cld
add
shrb
mov
nop
sub
imul
adc
inc
jp
cwtl
sub
xor
stc
or
nop
imul
mov
test
in
xchg
enter
push
inc
repz
pop
test
call
and
xchg
jl
sub
sti
xor
jne
add
cmp
jp
jae
jg
cmp
outsb
xchg
adc
outsl
push
aas
dec
fwait
imul
jmp
xor
and
sbb
aas
lds
std
mov
ret
fldl
pop
mov
push
dec
aaa
xchg
daa
xchg
mov
push
test
sbb
fs
adc
stos
imul
sub
or
nop
test
lahf
stc
test
jns
jno
iret
inc
fisttpll
or
insl
and
in
xchg
inc
xchg
arpl
lods
hlt
aam
add
inc
scas
push
jl
or
mov
or
aas
push
push
add
dec
jge
cmpsb
mov
pop
or
dec
sbb
fsubs
xorl
cmp
push
mov
ficompl
das
mov
jge
lahf
aas
sbb
sahf
push
inc
std
ret
push
gs
outsw
pusha
cld
push
inc
scas
mov
mov
push
mov
and
movsl
in
clc
rclb
xchg
fucom
das
inc
sub
add
ss
das
add
scas
or
imul
cmpsb
daa
aam
sub
cmp
aas
es
insl
cltd
test
rorl
jecxz
setno
enter
jge
adc
jne
xor
in
cmp
xor
inc
xchg
shl
addl
xor
xchg
inc
adc
adc
jge
imul
sbb
or
push
in
jecxz
adc
test
mov
aaa
adc
dec
xor
push
pop
fs
sub
pop
imul
cmc
hlt
dec
inc
push
insl
mov
fwait
nop
sarl
fistl
or
inc
sbb
out
out
shlb
xor
xchg
sbb
insb
shrl
sbb
fisubrs
push
pop
pop
fadds
aas
div
nop
push
ret
test
jge
jl
adc
jns
das
mov
mov
movsl
and
inc
repz
mov
dec
arpl
or
mov
inc
lods
pop
jg
mov
inc
hlt
push
mov
aad
sti
loope
xor
aam
mov
cmpsb
jmp
add
adc
adc
das
xchg
cli
add
xchg
stc
sub
out
mov
test
dec
fists
in
insb
push
lods
insb
xchg
dec
sbb
movsl
movsb
std
xchg
adc
xchg
xor
stc
movsb
mov
loopne
jmp
adc
nop
cmp
insb
pop
push
int
sbb
out
xchg
stos
cmpsb
bnd
mov
imul
add
jae
lea
fisubs
xchg
arpl
sub
dec
sub
cmpsb
shlb
jge
int
mov
gs
adc
fdiv
pop
inc
and
xchg
jp
int
cmp
mov
mov
dec
movsl
push
sub
insb
pop
mov
cmpsb
jl
cmp
shll
dec
sub
mov
mov
add
adc
mov
lea
mov
inc
mov
mov
outsl
daa
insl
nop
in
scas
mov
stos
mov
mov
fucom
das
inc
cmp
test
mov
imul
dec
lea
mov
push
je
dec
mov
roll
test
scas
popf
gs
mov
or
mov
xlat
cld
fidivrl
xlat
lahf
push
mov
or
sbb
sub
jo
bound
and
xor
cmp
pop
out
ss
jne
mov
in
mov
push
popa
adc
shrd
aas
dec
cli
mov
jns
dec
cmpsl
fwait
sbb
nopl
or
movsl
adc
jno
faddl
cmp
jae
enter
mov
mov
xor
adc
jb
cli
sbb
in
dec
nop
inc
pop
xor
lods
inc
sbbb
adcl
popa
and
std
scas
inc
int
test
filds
and
addr16
insb
out
jecxz
mov
push
inc
mov
pop
sub
mov
cmp
sbb
pop
dec
out
sbb
test
xchg
push
cmpsb
mov
icebp
sub
loopne
dec
mov
push
test
add
add
xor
cltd
test
mov
lcall
pop
pop
sbb
int
pop
or
imul
push
push
test
enter
push
pop
xchg
in
loope
jae
stc
mov
test
mov
add
dec
aad
call
test
pop
lods
sbb
push
add
stc
mov
negl
mov
pop
xchg
lods
bound
mov
daa
cmpsl
cltd
inc
loop
cmp
sub
std
xor
cwtl
mov
fstpl
aam
inc
stos
cs
sub
mov
xchg
roll
call
fildl
mov
adc
pushf
inc
jl
cmc
test
or
call
cmp
and
sub
push
push
push
test
les
mov
add
add
mov
das
dec
xchg
or
or
push
dec
sbb
inc
cmp
popa
shll
cmp
push
xor
fnstcw
popf
and
stos
and
push
push
mov
mov
loop
push
lock
std
int3
movsl
jecxz
inc
jecxz
popf
inc
inc
in
cmp
xchg
or
scas
or
or
or
aad
pop
test
lds
sub
lods
fs
or
outsb
pop
and
int
xor
pushf
mov
sub
movsl
mov
jne
mov
jne
data16
add
pop
popf
insb
xor
daa
fstps
jg
add
inc
mov
movsl
fcoms
sub
ficoml
loop
ret
fmuls
sub
cltd
mov
movsl
rep
je
hlt
xor
inc
jb
add
or
cld
xchg
pop
in
xchg
inc
inc
and
cmovg
add
mov
pop
adc
push
pop
add
cmp
jnp
xchg
mov
xchg
fidivrs
push
loopne
jbe
enter
and
lds
leave
fwait
lret
shlb
das
call
push
pop
movsl
jecxz
dec
sbb
lea
push
adc
jne
mov
je
inc
mov
jmp
jne
sbb
mov
sub
jmp
outsl
imul
pusha
pop
divl
lea
enter
jns
mov
and
decl
pop
jne
lods
and
adc
sub
xor
das
xor
test
das
push
jge
lret
dec
mov
sub
cmc
fwait
in
shr
mov
jge
out
int
push
fists
fs
jmp
xchg
jbe
push
std
add
sbb
outsl
or
test
sbb
push
int
loopne
sbb
daa
sub
in
cmp
fwait
enter
mov
xor
sub
adc
fwait
lret
sbb
jmp
stos
imulb
orl
jge
add
sub
js
cmc
pop
shrl
test
xchg
int
push
lds
ret
lret
fisttpll
das
in
rorb
xchg
add
call
xchg
sub
mov
das
inc
incl
xor
test
dec
ds
mov
pop
adc
icebp
mov
jge
add
mov
push
xor
jg
xor
mov
nop
imul
inc
ror
icebp
xchg
pop
mov
inc
cld
mov
out
in
adc
lods
sub
mov
mov
mov
out
and
popa
mov
cmp
data16
adc
rcr
pop
xchg
cld
jbe
xchg
pop
sub
xchg
xor
lret
out
cmpsl
jg
xor
loopne
icebp
int
jmp
mov
into
lods
sbb
xor
xchg
adc
sbb
ss
xchg
icebp
inc
jp
mov
xchg
sub
sub
fmul
insb
pop
or
leave
xor
lret
push
int
dec
insl
mov
je
xor
popa
pushf
fsts
jle
inc
push
push
popa
or
rep
cmp
xchg
pusha
mov
jb
inc
pop
mov
leave
mov
test
cwtl
movsl
iret
popa
cmc
scas
int
mov
cltd
dec
daa
stc
cli
pop
dec
cmp
mov
icebp
jo
rcrl
cs
sub
mov
fcmovne
xor
jle
cmpsb
or
int
shlb
sub
and
inc
ss
shll
pop
or
mulb
lock
out
and
mov
dec
xor
jns
add
mov
add
in
aas
xchg
pop
dec
mov
push
in
push
lahf
aad
repz
lea
or
or
add
xor
jge
clc
lea
xchg
ret
inc
mov
int
jmp
and
cmp
pop
push
test
std
dec
pop
in
lea
mov
cmc
clc
sbb
fnstcw
add
aaa
pop
push
popa
cli
xchg
mov
mov
sarl
shrb
lcall
outsl
orb
and
mov
add
push
fiadds
outsb
push
push
movsb
adc
cmp
dec
fsubrl
xchg
add
sub
fcmovnu
xor
pop
cs
and
int
dec
jne
xchg
imul
scas
pop
test
jg
add
pop
loop
push
clc
pop
sub
lds
sbb
imul
pop
icebp
mov
mov
push
cmp
mov
movsl
jb
js
jbe
adcb
and
inc
pop
loope
jnp
mov
pop
mov
out
frstor
orl
or
lea
fdivl
movsl
testb
lods
jmp
cmp
aas
xchg
std
rcrl
sbb
mov
xor
mov
repz
imull
je
movsl
mov
popa
roll
xchg
jo
imul
lods
cmp
sbb
adc
fwait
test
dec
jne
out
sbbl
xchg
xchg
cwtl
inc
adc
rcr
dec
fstpl
data16
cmpsl
sbbl
std
stc
lds
mov
lods
sub
mov
xor
adc
or
jmp
mov
aas
mov
incl
sbb
imul
pop
icebp
ret
sbb
popf
hlt
lret
lods
outsl
cmp
jns
dec
pop
jns
xchg
jno
mov
lods
add
jno
loop
push
scas
imul
pop
pop
adc
in
or
adc
imul
loopne
sahf
aas
in
or
inc
insl
frstor
cmpsl
mov
ret
iret
mov
dec
rorl
xor
fisttpl
push
xchg
inc
fwait
leave
sbb
add
outsl
or
and
lods
cmp
and
lods
nop
frstor
mov
mov
mov
pusha
mov
mov
push
xor
jp
cmc
push
fwait
nop
add
loopne
push
enter
lahf
je
jo
fisubs
fidivrl
dec
lds
push
insb
mov
inc
push
sub
das
cmpsb
nop
imul
aad
in
mov
push
jbe
or
xchg
adc
daa
data16
pop
or
pop
jge
or
int
test
mov
rorb
orb
ja
or
xor
mov
cmp
test
js
xor
inc
ud0
mov
xor
sub
les
or
mov
push
xchg
enter
add
or
add
dec
jmp
push
mov
and
xchg
rcr
in
cltd
sbb
push
jg
inc
pop
hlt
clc
add
dec
xor
divb
pusha
orl
dec
repz
vmovaps
int3
aaa
insb
shl
lods
mov
dec
sbb
inc
cltd
dec
imul
sbb
push
dec
aad
cmc
ljmp
in
cmpsl
pop
pop
inc
xchg
pop
push
jmp
add
or
shrl
frstor
jns
out
lcall
xchg
aas
xchg
enter
loope
sbb
ss
shlb
mov
pop
jbe
jecxz
ss
pop
pop
mov
dec
push
jmp
jno
in
adc
arpl
subl
cmpl
movsl
push
inc
arpl
pop
inc
jmp
push
xor
int
mov
mov
jecxz
cmp
push
inc
repz
movsb
push
mov
lea
mov
jo
sti
sbb
cwtl
push
push
movsl
rcr
repz
or
xor
pop
dec
rol
cmpsl
sbb
adc
xchg
pushl
das
sahf
cltd
cmpsl
popf
in
icebp
pop
icebp
pop
sub
add
jno
pop
push
mov
call
dec
or
xor
out
inc
mov
das
push
movsl
test
push
mov
dec
sub
mov
jge
mov
mov
stos
mov
into
dec
inc
jnp
adc
sbb
inc
subb
imul
mov
mov
mov
cmpsl
cmp
ret
jg
in
sbb
add
popa
addl
mov
cld
cmp
test
cmp
icebp
adc
jecxz
pop
cs
xor
orl
inc
jae
je
int
mov
inc
sbb
fiaddl
dec
push
and
push
leave
mov
aad
mov
push
test
and
in
xchg
cmc
fs
mov
jnp
fwait
sar
int
outsl
fisttpll
mov
or
das
add
add
push
stc
je
loope
test
xchg
in
pop
shlb
mov
inc
sti
sub
push
cmp
lret
adc
inc
imul
hlt
jb
int
out
out
std
adc
mov
imul
hlt
in
loopne
xchg
mov
inc
xchg
add
sub
rclb
add
adc
inc
dec
sbb
imul
dec
out
xlat
ret
lea
packsswb
sbb
dec
in
int
test
ljmp
adc
inc
adc
add
int
and
adc
add
rclb
push
push
ja
mov
xchg
mov
lea
int
and
int
push
test
or
sbb
je
mov
pop
insl
fsubrl
push
cltd
pop
mov
jge
push
mov
out
add
popf
sbb
test
xchg
pop
xor
add
imul
icebp
or
jge
mov
and
sbb
arpl
lds
rorl
nop
loope
js
in
and
arpl
jle
sub
push
pop
pop
loop
es
sbb
cmp
daa
adc
sub
ror
insl
pop
mov
das
sub
or
sub
xor
fs
pop
or
icebp
adc
int
cmc
or
ret
leave
dec
or
mov
or
xchg
in
dec
lea
dec
xor
lea
jns
mov
pop
test
add
subb
in
xorb
cld
xor
inc
xorl
in
decl
std
mov
inc
push
xchg
lea
loope
xor
mov
xor
xor
adc
fldenv
sti
das
lods
jno
jmp
imul
dec
roll
jge
fcoml
mov
push
lods
std
fdivrp
shrl
or
scas
scas
adc
cltd
inc
iret
xchg
daa
imul
push
popa
xor
jae
cwtl
push
adc
lods
inc
pop
leave
jecxz
in
xlat
mov
jp
dec
lods
dec
nop
aas
xchg
gs
rcrb
jge
push
inc
int
sbb
test
cmp
mov
pop
mov
xchg
xor
xchg
inc
mov
cld
shlb
das
sarl
pop
push
push
mov
and
dec
push
std
jb
mov
outsb
repz
in
pop
push
adc
cltd
add
inc
in
xchg
sti
mov
lods
fucomip
xchg
int3
int
in
mov
xchg
cwtl
std
adc
cmpsl
jo
adc
fistpl
imul
push
push
cmp
out
add
aad
lds
xor
add
dec
inc
shll
stc
mov
into
loopne
inc
std
adc
stc
jne
mov
or
mov
inc
xchg
add
pop
adc
inc
sbb
in
xchg
fwait
lea
negb
daa
test
loop
push
jne
mov
imul
sbb
pop
mov
push
or
ds
sti
push
and
test
shrl
lods
jg
pop
pop
imul
shlb
xchg
jo
movsl
dec
add
lea
fsts
xchg
aad
outsb
inc
pop
sbb
push
add
xchg
in
insl
and
loop
dec
gs
test
push
lret
push
xchg
xchg
adc
adc
push
lahf
and
jge
dec
lods
sarb
jo
dec
int
sbb
mov
imul
dec
dec
adc
movsl
ret
push
ret
or
in
fidivl
popf
dec
add
jnp
sbb
psrld
and
or
or
rorl
sub
xor
pop
insl
inc
add
dec
jne
sub
repnz
out
add
push
out
xchg
mov
adc
jecxz
mov
gs
push
icebp
dec
inc
pushf
sub
dec
mov
sbbb
out
cmpl
mov
xor
lcall
imul
pop
dec
dec
jne
lret
lock
pop
insl
sti
mov
xor
lods
adc
loopne
out
aas
xor
pop
test
jl
popa
icebp
push
push
nop
push
push
lods
enter
sub
mov
push
add
sub
jmp
fnstsw
rcrl
pop
lods
jno
iret
int3
xor
add
mov
loope
adc
vmovapd
mov
mov
xlat
dec
pop
sub
cmp
lahf
pop
sub
fsts
sub
in
aad
adc
sbb
mov
fsts
xchg
fwait
or
sub
cmp
aam
mov
xchg
sbb
add
lods
adc
gs
or
adc
inc
or
and
mov
mov
mov
pop
or
dec
test
jge
adc
jns
insl
cmpsb
movsb
mov
dec
clc
dec
out
ret
mov
xchg
int
push
lods
aam
inc
fldenv
movsb
push
dec
pop
jne
jge
xor
pusha
loopne
shll
mov
add
nop
gs
inc
add
es
call
jno
or
loope
and
sti
push
leave
iret
popf
adc
inc
mov
iret
shlb
das
jecxz
aad
jg
adc
xchg
cmp
les
dec
sub
sub
in
ja
push
pop
jo
ficomps
addb
sub
or
push
outsl
or
in
push
pop
fildll
je
clc
dec
icebp
sbb
jmp
and
mov
movsl
mov
aad
jbe
cmp
adc
jl
imul
insl
jne
dec
jle
stos
mov
popa
jnp
daa
adc
repz
mov
jns
sub
sbb
scas
adc
sarb
pop
into
push
and
les
jns
jge
arpl
aas
mov
dec
ss
sub
pop
jp
dec
mov
popf
inc
jnp
xlat
cmp
adc
mov
xor
lgs
push
iret
in
sub
mov
dec
mov
fldt
xor
dec
or
js
adc
push
push
movsl
int3
push
movsl
test
and
xor
pop
stc
adc
and
push
cmpsb
popf
cltd
aam
inc
inc
std
or
inc
jge
es
pop
jno
dec
lea
sarl
xor
pusha
shr
gs
sti
std
flds
gs
aad
lret
pop
shlb
inc
pop
pop
in
aad
dec
pop
fstpl
jmp
mov
fisttpl
jge
push
mov
add
subl
dec
test
cs
ss
shrl
sbb
dec
add
cmp
adc
dec
inc
pop
insl
mov
movsb
mov
cmpb
int3
leave
xorb
sysenter
dec
adcb
jmp
loopne
pop
cmp
insl
rorb
jbe
cmpl
insl
xchg
punpcklwd
mov
js
sbb
test
lods
outsl
icebp
or
pop
int3
or
mov
dec
adc
and
js
mov
outsl
movsb
or
or
dec
push
int
dec
daa
or
std
adc
inc
dec
dec
or
mov
rclb
xor
clc
xorl
hlt
add
push
xchg
insl
je
popa
leave
dec
cmp
int
inc
dec
insl
jg
add
pop
jno
cs
xor
lds
cs
lds
mov
mov
or
mov
roll
rcr
ret
ret
in
push
dec
jae
rcl
insl
in
jge
imul
movsl
rcr
std
xchg
xor
cmp
pop
mov
sbb
negl
mov
popf
jmp
ret
xchg
movsb
call
lods
test
fs
jno
mov
and
sbb
or
cmp
test
imul
adc
in
repz
xor
stos
xchg
ds
jns
xor
and
lds
movsl
mov
dec
sub
ss
loope
cmp
ficomps
xchg
dec
or
fimuls
mov
pop
push
nop
sbb
add
nop
mov
add
push
nop
or
push
push
nop
and
push
push
mov
xor
pushf
xor
xor
lret
push
inc
pusha
dec
and
lret
mov
lea
mov
outsl
lret
jge
mov
cmp
imul
lret
and
out
jno
das
add
inc
and
add
shlb
gs
adc
cwtl
scas
jmp
outsl
mov
scas
xchg
pop
pushf
gs
adc
mov
adc
bound
outsl
jecxz
negl
and
pop
movb
leave
leave
outsl
stos
sbb
shrw
lods
or
mov
lock
sub
jl
add
mulb
mull
push
std
out
mov
test
loopne
lods
aad
jmp
fs
push
or
mov
and
cmp
jg
pushf
pop
andl
xchg
addb
lods
dec
mov
add
popf
pop
popa
xchg
push
ja
testl
inc
or
adc
mov
popl
lret
pop
cmpsb
cmp
ret
int3
mov
mov
pusha
mov
or
je
push
insl
insl
add
add
mov
lods
sar
add
sub
int
dec
test
int
dec
ss
loope,pt
dec
push
fsubl
dec
sub
sbb
stos
dec
pop
jnp
scas
test
out
sbbl
imul
fs
lea
leave
in
dec
fstl
sbb
mov
sbb
dec
mov
pop
inc
clc
outsb
xor
stc
sub
popa
jmp
into
icebp
pop
pop
mov
and
lea
sbb
lea
xchg
inc
cltd
scas
mov
data16
mov
repz
fistl
and
movsl
ja
xchg
dec
lds
xchg
orl
adc
cli
adc
das
ja
ss
mov
ret
inc
jno
sbb
adc
push
std
mov
repnz
movsl
xchg
add
movsl
lods
in
sbb
and
shll
leave
xchg
decl
adc
mov
sbbw
cmp
cltd
mov
mov
in
test
pop
mov
arpl
adc
add
add
cli
aam
inc
pusha
sti
addr16
out
adc
jecxz
sub
mov
inc
push
imul
insl
or
ret
add
movntq
out
pushf
push
and
pop
sbb
push
sbb
fistl
mov
pcmpeqw
mul
fs
dec
cmp
pop
aad
out
mov
pop
test
and
cmp
sbbl
das
mov
sbb
mov
lds
pop
insl
pop
pop
mov
cmp
popa
pushf
popf
pop
sti
inc
or
imul
dec
imul
mov
jge
pusha
sbb
dec
repz
cmpsb
jae
xchg
out
jne
rolb
mov
xchg
dec
fmul
mov
cmpl
mov
movsl
adc
bnd
gs
rolb
stos
sbb
jo
cwtl
or
mov
cmp
lcall
loopne
jo
pusha
pop
lds
sbb
push
mov
fwait
jnp
insl
push
enter
adc
mov
scas
loop
outsb
mov
add
stos
mov
je
int
inc
adc
clc
adc
push
push
pop
dec
imul
int
or
arpl
mov
lret
sbb
ljmp
imul
pop
push
cs
call
out
sbb
sbb
and
mov
das
lods
add
repz
stos
inc
in
adc
sub
les
mov
xchg
enter
cmp
and
push
shl
mov
pushf
js
stos
test
mov
xor
movsl
jecxz
inc
js
jne
fcmovnbe
cmp
add
call
or
cwtl
nop
jge
ds
pop
sti
cmp
pop
leave
movsb
fldl
fmull
sbb
and
in
daa
std
pop
lds
xchg
lea
in
cmc
add
out
sub
pop
cvtps2pd
mov
jno
dec
lcall
lds
pop
arpl
sbb
rolb
cltd
out
push
jmp
cltd
push
inc
test
fs
sbbl
jne
jnp
popf
mov
loopne
adc
outsl
mov
jne
fstpl
gs
or
cmc
and
pop
inc
and
xor
flds
dec
jnp
mov
xchg
icebp
mov
mov
outsl
push
dec
and
jmp
mov
cmp
rep
pop
dec
and
jecxz
js
aad
jne
xor
or
icebp
adc
mov
inc
jl
push
push
gs
into
repz
fs
jb
bound
xchg
popa
insl
or
adc
int
jne
lods
sbb
jmp
or
add
dec
mov
pop
pusha
and
lods
sbb
inc
inc
or
popa
pusha
dec
out
mov
je
leave
and
push
inc
dec
cmc
lods
fnstsw
push
cli
std
fistps
sbb
aad
int
push
adc
xor
sub
aad
dec
arpl
jge
xchg
cltd
lock
dec
leave
inc
xor
xchg
hlt
pop
movsl
andnps
inc
inc
sub
push
test
fs
xchg
cltd
cmp
push
int3
movsl
jnp
shrd
fstpl
pop
pop
dec
jne
add
ljmp
gs
mov
sub
mov
inc
pop
and
call
int
movsl
adc
push
sahf
enter
movntps
ss
inc
cmp
adc
jbe
sub
jno
xor
or
push
sbb
dec
mov
add
xchg
int
test
mov
dec
jmp
cli
pop
sti
jmp
xor
add
dec
push
stc
ror
adc
outsb
imul
and
ljmp
scas
push
les
jge
xchg
fcomip
inc
jno
ss
in
mov
out
jno
jno
movsl
sbb
lcall
jns
in
in
rorb
or
outsl
outsl
lds
movsl
adc
mov
fstl
pop
nop
fidivrs
jl
and
dec
or
call
aas
pop
in
fistl
adc
inc
pop
inc
push
jo
cmp
ret
push
pop
inc
jns
mov
mov
imul
jge
pop
push
pusha
adc
insl
je
xchg
mov
mov
mov
std
idivl
pop
in
in
dec
cmp
sbb
dec
into
mov
pusha
popl
shl
fidivl
jge
sbb
outsl
arpl
mov
mov
outsl
mov
pop
mov
ss
sub
xor
sbb
adc
sbb
iret
sub
sbb
dec
or
dec
mov
xchg
arpl
pop
jge
loope
sbb
push
xor
idiv
jne
aad
inc
sysenter
cmp
lods
cmp
cmpb
mov
aad
out
xlat
and
popa
adc
pop
ficoml
rcll
pop
jnp
mov
mov
mov
cmp
sub
push
xor
and
lea
xchg
scas
aad
ljmp
cmpsl
cmp
mov
lret
cwtl
or
pop
inc
das
lods
aad
test
fisubrs
add
cli
fisubrs
std
loope
orb
push
mov
sahf
sub
sbb
dec
jne
call
pushf
or
mov
sbb
cmp
cmpsl
shll
loope
ds
or
fwait
mov
dec
sti
inc
ret
nop
or
std
mov
aas
jne
add
aas
inc
enter
or
imul
insl
bound
ds
inc
lcall
sbb
mov
lret
leave
and
ds
pop
fstpt
dec
addr16
stc
push
out
sbb
mov
imul
inc
jo
xchg
shrd
pop
loope
imul
add
ss
lret
xor
xor
cmp
xchg
dec
push
scas
aaa
mov
push
dec
sbb
mov
aad
cmpl
mov
push
xchg
into
inc
lods
cs
mov
cmc
xor
pop
mov
mov
cltd
out
add
add
outsl
lods
sbb
aam
xor
xchg
sbb
mov
sub
cmp
jle
mov
xchg
in
insl
mov
fmull
adc
or
pop
movsb
mov
popa
insl
packssdw
vpsubb
jbe
mov
daa
mov
jb
mov
adc
fst
das
lds
add
fwait
dec
pop
jg
sbb
pop
int
pop
dec
adc
sbb
add
inc
dec
outsl
jg
sbb
imul
sbb
dec
addr16
or
sbb
jns
mov
scas
out
cmpsl
sbb
test
mov
out
mov
fnsave
and
mov
dec
pop
jge
pop
mov
add
cmp
xchg
int3
outsb
pop
inc
aam
imul
into
iret
sbbb
inc
je
stc
fldl
test
and
xorl
jecxz
push
inc
pop
nop
add
jne
clc
push
adc
or
inc
push
call
inc
adc
inc
push
inc
mov
adc
daa
or
xor
jge
in
roll
int
push
test
mov
pop
mov
xchg
stc
push
or
mov
lods
int3
dec
push
hlt
add
cltd
pmuludq
inc
in
jge
mov
lods
pop
jg
xor
dec
movsl
mov
or
cmc
test
and
xchg
test
or
and
clc
jg
xor
test
adc
jns
sbb
lock
into
or
dec
xchg
int
jecxz
jp
pop
loopne
adc
mov
jge
jb
sbb
in
test
and
ret
xor
idivb
jae
fstpl
in
sbb
xchg
movsb
addr16
sbb
sub
pop
xor
ret
int
jge
fsubl
xchg
jmp
xchg
push
clc
insl
push
fisttps
xacquire
fstpl
andb
cmp
adc
dec
aad
lods
or
cmpb
push
hlt
and
and
push
iret
cwtl
loopne
xchg
jns
cmpl
jmp
cli
mov
adc
arpl
push
jb
lods
das
add
adc
lods
push
xor
jle
sahf
cmpb
mov
jne
mov
xorb
jno
xor
dec
adc
or
add
test
mov
pop
push
in
dec
inc
out
shrb
std
fstl
popf
das
pop
push
mov
pop
es
sub
movsb
and
fwait
jecxz
shlb
cltd
adc
push
test
jg
fistpl
inc
add
and
dec
imul
xor
cld
ret
push
shrl
in
inc
add
mov
int
dec
daa
js
jns
add
add
xchg
add
mov
or
enter
push
add
or
mov
push
dec
inc
stos
xor
fisttpll
leave
adc
sbb
sbb
jo
inc
mov
jo
aad
push
popf
movsl
push
inc
js
add
in
leave
push
int
shlb
mov
js
leave
jb
cwtl
and
andl
jl
out
xlat
leave
adc
stos
and
std
or
inc
sub
jb
dec
dec
rcl
mov
fs
mov
leave
dec
mov
out
lods
jo
or
dec
in
lahf
cs
inc
mov
inc
fisttpll
arpl
js
adc
iret
push
popf
jno
setb
jge
movsl
in
lret
clc
push
dec
outsb
pop
das
fwait
scas
jne
je
test
insl
nop
jecxz
adc
in
test
add
jne
mov
mov
adc
jnp
int
push
mov
adc
mov
int
notl
sub
or
sbb
inc
pop
pushf
in
xchg
mov
add
outsb
aaa
leave
add
and
mov
dec
shlb
sbb
xor
loope
enter
data16
fstps
mov
inc
aam
adc
and
and
mov
or
mov
popf
call
stc
lods
sub
adc
xchg
pop
pop
sbb
inc
stc
sub
outsl
pusha
jmp
xchg
cmp
dec
or
fcomp
fwait
mov
lods
popa
movsl
adc
or
and
mov
std
imul
adc
push
mov
lret
fwait
scas
xchg
mov
test
cmp
xchg
test
jge
icebp
vpsubsb
inc
nopl
pop
loopne
cmp
push
cmp
cltd
mov
outsl
rcrl
sbb
imul
lock
and
sbb
or
mov
dec
test
cmpb
imul
insl
lcall
jg
rcrb
sub
sbb
test
cs
jmp
shr
out
fistps
add
adc
xchg
or
es
xchg
out
fstl
lea
aas
xchg
pop
rclb
sbb
xor
popf
ljmp
adc
cmp
mov
or
call
add
cmc
lret
das
aad
mov
mov
cwtl
sbb
js
imul
dec
insl
xor
test
ret
lds
lret
lods
dec
add
push
lods
lahf
outsb
mov
pop
leave
je
addl
cmpsl
call
add
clc
seta
int
xchg
pop
jne
cmp
fistps
and
fldcw
jg
movsl
cltd
lcall
mov
movsb
adc
xchg
xchg
insb
js
mov
in
cmpsl
jmp
dec
repz
fdivrl
dec
test
xchg
mov
xlat
je
ja
lcall
das
and
aad
fsubrl
jge
outsb
pop
jg
and
push
mov
dec
or
subb
rcrl
icebp
lret
ret
or
rsqrtps
xchg
enter
mov
negb
sbb
insl
ss
leave
pop
lods
leave
test
xor
scas
dec
xchg
mov
cltd
shlb
or
sti
sbb
ds
mov
jb
ret
inc
jge
enter
pop
in
sti
adc
repnz
adc
jge
addr16
outsb
mov
test
mov
neg
jge
pop
dec
sbb
mov
ss
rsqrtps
adc
popa
or
dec
or
xchg
hlt
push
cmp
sbb
sub
nop
cmc
add
cmp
push
push
leave
loope
out
dec
insl
jno
cmp
mov
add
jmp
adc
xor
push
adcl
jge
enter
xchg
data16
stc
cltd
inc
mov
hlt
into
aad
insb
mov
popf
insl
into
mov
add
cmp
lds
push
loopne
dec
jge
cld
fcompl
stos
xchg
leave
es
inc
sbb
mov
enter
outsl
sbb
ret
mov
inc
mov
imul
test
shr
insl
pushf
inc
cmpsl
mov
add
in
dec
out
adc
test
jp
fildl
imul
out
scas
call
sbb
in
mov
and
aam
mov
hlt
mov
push
shl
addr16
mov
lea
mov
push
imul
pop
mov
jge
std
faddl
dec
cmp
lret
mov
lds
xlat
movsb
mov
inc
lds
push
in
add
push
shll
jo
mov
inc
xor
and
dec
std
mov
popf
lcall
xchg
test
popl
gs
push
icebp
mov
out
dec
mov
or
adc
cmc
int
fcomps
scas
int
cs
test
ss
fiadds
loop
ror
addl
shlb
test
call
cmova
sbb
jp
mov
shrl
mov
lahf
dec
loopne
fists
sbb
push
push
mov
xchg
pop
cmp
cwtl
enter
xchg
cmp
fistl
sbb
cmp
mov
stc
adc
fstpl
stos
sbb
sbb
test
sub
cmp
lea
inc
adc
push
xchg
mov
iret
in
fs
cmp
outsl
scas
jmp
jmp
cmc
dec
mov
jno
insl
push
faddp
inc
inc
sarl
leave
and
call
mov
or
out
jbe
jl
outsb
cltd
xor
orb
nop
ja
or
adc
xchg
dec
adc
sbb
ror
orl
dec
test
pop
dec
push
insb
add
stos
pop
gs
das
aas
lcall
sbb
sub
mov
adc
xor
stc
mov
or
xchg
sbb
pop
je
insb
andb
mov
xor
mov
arpl
cmp
scas
add
jnp
xor
mov
xor
jecxz
icebp
call
adc
mov
lea
ret
mov
xchg
outsb
daa
mov
bound
mov
loope
pushf
dec
leave
lcall
adc
outsl
std
fxch
movsb
in
fnsave
test
xor
jge
pop
inc
popa
rcrl
mov
mov
sub
fisubl
mov
cld
dec
arpl
and
out
ret
mov
cmp
test
push
jno
dec
push
scas
insl
pop
inc
jns
inc
and
dec
mov
xchg
aad
lods
in
xchg
sub
xchg
in
pop
sbb
adc
mov
push
cmp
push
adc
int
adc
adc
fidivs
push
sub
lock
and
mov
cltd
addr16
in
lret
ds
xor
movsl
pop
mov
xor
lcall
rorb
adc
add
adc
push
fdivrs
mov
jge
mov
rcr
xor
xchg
inc
movsb
push
out
jne
addr16
incb
mov
std
mov
dec
fldl
jnp
iret
mov
out
pop
outsb
add
outsl
mov
pop
rcrb
and
shlb
fstpt
and
inc
cmpb
popf
xchg
ficomps
ret
test
sbb
and
lods
or
add
adc
rorl
sahf
test
popf
pop
inc
push
pop
and
or
xchg
dec
inc
jae
inc
sub
push
in
clc
inc
mov
mov
sbb
lcall
icebp
addl
or
sbbl
movsl
outsb
mov
lea
inc
sub
pop
loop
inc
icebp
mov
enter
outsl
inc
push
or
adc
das
xchg
fcoms
or
lds
insb
jne
push
dec
jno
push
cwtl
out
sbb
mov
cli
or
jnp
mov
sarb
sbb
jge
sti
jl
imul
pop
fists
rcrl
lcall
out
inc
popa
outsl
cmpsl
aas
dec
jmp
lahf
sti
in
xor
addl
or
inc
dec
addr16
add
mov
inc
dec
mov
mov
push
pop
or
cmp
icebp
pop
sbb
roll
mov
push
lods
lcall
xlat
pop
push
add
clc
hlt
cmp
adc
out
push
sbb
aad
jo
or
mov
adc
in
addr16
scas
adc
adc
or
cmp
add
addl
mov
add
xor
dec
inc
fcoml
lret
mov
out
lods
fmul
aas
xchg
push
imul
rorb
mov
pop
std
mov
movsl
outsl
push
adc
fmull
mov
enter
mov
xchg
or
adc
mov
enter
push
ss
movsl
add
sbb
adc
test
pop
in
pop
add
mov
push
out
push
sbb
lea
mov
xchg
and
lods
inc
inc
pop
mov
imul
sbb
xchg
add
lds
arpl
clc
mov
push
js
inc
test
cli
shrb
push
inc
push
or
sbb
aam
mov
sub
imul
sbb
jne
ljmp
leave
xchg
stos
aas
pop
cld
sahf
add
loop
cmc
adc
push
sub
cmp
sub
movsl
data16
adc
das
fidivs
xor
or
cmpsl
je
inc
mov
test
aam
fwait
lret
in
add
mov
data16
xlat
dec
data16
jnp
test
stos
jge
add
jmp
push
test
out
mov
les
adcb
adc
mov
hlt
jae
jge
mov
int3
sbb
add
xlat
mov
loope
icebp
mov
push
inc
fcmovnu
int
xor
push
icebp
xor
jns
push
cmp
shr
pop
or
in
js
mov
fbstp
notl
and
sbb
inc
or
or
outsl
fcoml
outsl
ja
add
sbb
inc
or
ret
dec
test
adc
cwtl
cmpsl
fidivs
dec
test
jge
fisubrs
pop
jno
push
pop
out
in
mov
gs
sarb
fnstsw
int
pop
sahf
cvttps2pi
and
inc
stc
and
sbb
data16
cmp
scas
mov
std
and
sti
out
adc
cmp
inc
add
aad
es
sub
adc
push
dec
mov
rcrb
hlt
xor
fcomi
add
or
sbb
mov
inc
lret
leave
jb
iret
repnz
iret
popf
into
sbb
in
fcompl
xchg
and
ja
lea
movsl
or
adc
add
stc
or
jb
ljmp
adc
or
cli
pop
adc
imul
jmp
ficoms
mov
cmp
loopne
or
sub
loope
push
shl
rcr
jp
cmpsb
or
mov
jecxz
cltd
adc
stos
mov
stos
or
sbb
in
repnz
mov
inc
adc
sbb
cmpl
aad
inc
ret
leave
xchg
insl
in
je
jae
lea
xchg
jnp
xchg
aaa
lods
ja
jne
mov
rcrl
dec
adc
add
fdivrs
adc
add
pop
pop
mov
push
xchg
ds
shl
nop
mov
xor
dec
sbb
cli
out
shrl
pop
dec
std
adc
adc
icebp
mov
xchg
push
xor
shl
push
adc
push
sbb
int
lea
stc
test
mov
arpl
sbb
dec
jnp
stos
pop
loop
push
subb
sub
rol
mov
push
jne
hlt
notl
dec
jno
sbb
jno
sub
or
mov
mull
outsb
mov
inc
mov
mov
adc
push
add
adc
adc
test
mov
scas
mov
adc
xor
aas
sub
adc
and
imul
mov
test
fwait
xor
adc
mov
lock
jecxz
cltd
sbb
jae
test
es
movsl
mov
pop
inc
inc
mov
mov
push
mov
sub
cmp
fwait
pop
jmp
pop
and
aam
push
lods
cmc
pop
cwtl
pop
add
inc
dec
fstl
cmpsb
cmp
imulb
movsl
and
pop
xchg
out
lcall
jmp
aam
jb
ss
xchg
loopne
or
popa
or
push
add
and
adc
and
dec
cmpsl
push
inc
out
lcall
jne
or
out
lock
adc
mov
dec
nop
dec
test
sbb
dec
mov
movl
lahf
pop
andb
lret
sbb
lea
push
inc
or
push
fadd
sahf
sbb
lahf
outsb
mov
xchg
inc
sbb
fbstp
leave
inc
mov
cltd
cmp
or
sbb
mov
jnp
out
scas
leave
lods
mov
ror
bswap
ja
repz
sahf
loope
sbb
cs
or
out
sub
pop
or
dec
fs
pusha
loopne
sub
jns
adc
xor
xchg
fiaddl
mov
xor
dec
stos
adc
add
in
adc
sub
in
inc
inc
cltd
nop
adc
mov
dec
cld
rolb
repz
insl
je
lods
jns
lcall
inc
fcoms
mov
sub
incb
mov
popa
pop
inc
jmp
pop
jmp
and
cmp
xchg
mov
mov
and
dec
nop
lods
rorl
or
nop
in
std
cmc
and
inc
popa
cmpsl
inc
pop
jmp
and
sub
movsl
jge
sbb
loope
es
jns
call
adc
cli
xor
movsl
imul
iret
push
xor
jl
cli
or
inc
and
fistps
push
je
jne
xor
cltd
loopne
in
mov
inc
xor
clc
push
mov
aad
xlat
mov
lods
fcompl
nop
add
cld
or
invd
movsl
ret
sbb
loop
dec
lcall
sti
imul
std
pop
aas
movups
lea
test
sbb
mov
mov
xor
inc
push
lea
cvtps2pi
vmovntps
in
popf
mov
sub
or
scas
xchg
xor
das
rcr
shrl
fldt
test
pop
or
repnz
lods
or
loope
pop
das
jae
popa
add
gs
mov
gs
test
icebp
rol
mov
jg
lds
enter
adc
insl
out
insl
cli
xchg
pop
push
lds
orb
dec
das
imul
aam
negl
push
or
xchg
pop
or
inc
mov
enter
mov
sub
inc
mov
enter
mov
mov
inc
xor
and
lea
bound
stos
mov
xchg
int3
inc
or
ret
mov
iret
insb
adcl
jno
or
test
fs
data16
lock
sbb
jecxz
js
xor
outsl
jp
mov
jge
or
mov
pop
jg
inc
lahf
les
lds
mov
fbstp
loope
or
and
call
into
dec
jg
push
or
adc
jmp
dec
push
cli
and
nop
leave
test
movl
xor
ljmp
data16
popf
insl
stc
imul
int
movsb
xor
aaa
shl
jge
or
in
xor
sbb
aas
xor
adc
and
lock
jp
push
mov
cmpl
mov
mov
std
jo
mov
inc
in
jmp
add
xchg
inc
sbb
xor
shlb
ja
pop
fwait
or
dec
xor
imul
icebp
xor
jb
xchg
fucomi
daa
fnstenv
lcall
mov
ret
sbb
daa
loopne
jl
adc
push
stos
sbb
dec
push
lcall
stos
fwait
or
cmp
nop
aaa
xchg
or
lods
jmp
sbb
cs
rcrb
leave
mov
push
mov
outsb
inc
enter
jl
jb
jne
bound
in
adc
add
hlt
xor
cmp
ja
jno
inc
mov
cmp
clc
imul
je
push
cmc
sti
sbb
add
or
dec
sub
pop
jno
adc
adc
aam
sub
mov
inc
jge
cmpps
add
push
cwtl
inc
das
int
stos
lea
lock
add
dec
pop
fs
or
fwait
loope
adc
jl
enter
outsl
cltd
lods
add
sbb
loope
imul
aas
sbb
adc
in
rcrb
pop
cltd
push
or
dec
jne
aad
push
lea
dec
adc
icebp
mov
in
push
dec
push
or
push
int3
xchg
cmp
lret
mov
push
ljmp
inc
jne
bound
pushf
fisttps
or
add
sarb
imul
pop
cmp
sbb
sub
jge
paddq
pop
mov
cmp
lods
sub
nop
and
in
enter
lret
mov
pushf
jge
and
sbb
and
cmp
xchg
fs
sbb
and
dec
js
int
adc
test
pop
test
xchg
dec
mov
je
mov
jno
sti
ret
int
sbb
out
sbb
addb
dec
dec
add
bswap
stc
and
add
dec
push
mov
xchg
divl
push
aad
mov
inc
icebp
or
scas
xor
dec
jbe
and
pushl
jp
insl
cld
leave
mov
bnd
jbe
stos
leave
jno
lea
jb
lods
test
xchg
sub
nop
inc
fisttps
adc
mov
fstps
pop
add
inc
sbb
mov
lea
sub
push
dec
add
lret
inc
icebp
imul
dec
addr16
inc
mov
mov
notl
push
pop
or
rcrb
data16
adc
jecxz
test
sti
dec
mov
fmulp
movsl
inc
cmp
sbb
lods
aam
sar
pop
xchg
or
jg
lahf
add
mov
or
mov
outsl
in
and
adc
fwait
adc
or
adc
popa
sarl
jne
aad
imul
test
pop
scas
fnsave
leave
or
mov
inc
fldl
insl
inc
xor
call
imul
les
mov
je
mov
inc
cmp
and
jmp
mov
jecxz
je
dec
andb
adc
icebp
xchg
jnp
test
sbb
pop
fimuls
enter
mov
dec
arpl
mov
push
leave
js
jmp
stc
fdivs
adc
aas
mov
mov
push
dec
jmp
rclb
add
cmp
dec
pop
fs
loopne
add
fisttpl
movsl
rcll
and
adc
sbb
push
rcl
adc
repz
stos
inc
in
out
mov
jecxz
inc
pushf
inc
mov
dec
insl
xor
sbb
int
cmc
frstor
jp
mov
jb
and
call
mov
push
add
push
xlat
in
inc
stc
enter
cmp
pop
xchg
insb
test
stc
fisubrs
imul
fisttpll
decl
mov
add
mov
insb
add
or
pop
sbb
jge
aad
cmp
dec
ret
cmc
scas
jge
push
cmpl
inc
dec
pop
cmp
jae
jno
insb
jmp
fimuls
or
ret
psubusb
inc
push
or
jmp
jge
add
cmp
pop
and
std
loope
js
add
push
lea
sub
add
adc
add
shl
aad
fnsave
dec
mov
cmp
pop
out
ret
sbb
mov
test
xor
loopne
rolb
and
mov
add
fs
pop
fs
repz
or
pop
add
orl
mov
push
cmc
jo
inc
add
pop
stc
daa
fwait
jge
repnz
popf
pop
add
push
dec
add
imul
dec
inc
fiadds
sub
fmulp
out
ljmp
cmp
mov
push
dec
mov
lret
int3
jge
in
add
adc
pop
or
xchg
cmpsl
jmp
adc
cltd
popa
stos
push
ljmp
push
jle
sub
mov
leave
dec
xchg
test
sbb
and
call
mov
fiadds
leave
jnp
and
mov
push
stos
pop
jnp
in
sbb
sbb
imul
sbb
stos
dec
imul
inc
push
das
loope
mov
cmpsb
pop
loop
pop
or
inc
pop
fld
mov
add
in
or
xor
cmp
outsb
xchg
ficoml
dec
inc
cltd
and
xchg
jge
or
sti
cmpb
out
nop
arpl
add
pop
inc
movsl
aad
or
sbb
pop
add
pop
push
sub
js
and
int3
mov
rcl
dec
jecxz
push
test
repz
ljmp
dec
int
sub
xchg
cmp
pop
inc
aas
cmp
in
or
popa
lods
sub
xchg
ss
jp
push
mov
xor
pop
and
jp
push
jl
cmp
push
dec
jge
test
cltd
stc
cld
out
jge
or
jne
mov
pop
add
lods
dec
mov
js
xchg
add
jno
pop
movsl
cmpsl
cmp
sti
aad
dec
adc
add
icebp
adc
sub
pop
dec
or
jp
pop
sbb
xor
push
jecxz
adc
push
mov
enter
mov
int
sbb
dec
sub
dec
pushf
and
push
pop
push
xor
pop
push
xchg
dec
jns
dec
sbb
data16
adc
imul
dec
mov
int
lds
jnp
mov
aad
jb
mov
push
dec
lock
pop
pop
dec
cmp
shlb
das
es
mov
or
cwtl
arpl
push
push
pop
jns
dec
add
add
cmp
sbb
or
pop
sbb
dec
adc
sbb
adc
mov
jns
imul
insl
mov
in
mov
and
popa
sbb
test
mov
in
out
push
sbb
mov
jg
sbb
mov
lea
mov
orl
lahf
sbb
test
mov
xchg
out
xchg
pop
sub
and
sarb
sbb
xchg
loopne
adc
cmp
xor
dec
sbb
cmp
lea
or
sbb
sbb
and
jns
or
scas
adc
mov
insl
pop
mov
xor
das
mov
jo
add
outsl
bound
add
in
lea
push
mov
lds
add
xchg
sbb
sti
das
xor
rolb
or
mov
add
pop
xchg
aas
jmp
xchg
sub
xchg
mov
mov
push
mov
fimuls
negl
mov
aad
lods
and
pop
enter
lods
push
int
mov
adc
sbb
add
lea
dec
add
insl
cmp
stos
push
or
push
cmp
mov
add
cmp
sub
mov
xchg
popf
mov
push
dec
test
xor
push
adc
mov
dec
cmpsb
aam
mov
dec
hlt
fwait
or
push
daa
pop
fs
cmp
inc
mov
shrl
or
es
dec
stos
sbb
sarb
movsl
inc
lods
fldl
sub
xor
jns
sub
cmp
mov
inc
cmp
or
leave
inc
out
cmp
fwait
test
sub
mov
or
ret
repnz
mov
popf
repz
lcall
push
ljmp
xchg
pop
jno
and
ljmp
cltd
add
pop
jge
adc
sbb
or
mov
cmp
cwtl
lret
ret
jnp
mov
adcl
lea
add
cmp
fwait
and
cmp
push
popf
out
push
jb
add
xchg
rcrb
or
adc
lret
sub
js
cmc
out
fimuls
mov
aad
add
dec
int3
push
imul
pop
fstpt
or
orb
std
mov
dec
or
addb
bsr
mov
int3
push
mov
xchg
jae
mov
jo
adc
sahf
lcall
sub
mov
pop
pop
sub
dec
mov
mov
hlt
sub
test
les
dec
aam
jmp
xor
push
dec
push
out
and
lds
adc
in
ds
push
inc
movsl
xchg
xchg
adc
xchg
orb
xchg
pop
xchg
or
pop
fisttpl
inc
dec
imul
imul
sub
out
cmpsl
lea
xchg
popa
fwait
add
mov
add
or
mov
xor
or
and
cmpl
das
imul
inc
jecxz
jne
cmpsl
sbb
inc
dec
aad
sbb
jae
sbb
add
mov
leave
shl
add
aad
mov
pop
mov
imul
test
outsl
push
mov
dec
adc
push
mov
test
ret
fisttpl
inc
aad
pusha
push
and
aad
test
ret
mov
xor
pop
or
out
xchg
pop
pushf
mov
subl
sub
or
mov
nop
mov
lods
pop
test
bound
std
lea
add
iret
clc
jge
add
sbb
es
mov
push
adc
cmp
and
dec
cwtl
lea
jno
sub
pop
inc
or
popa
out
pop
sbb
filds
sbb
adc
pop
push
in
insl
out
scas
lea
lds
adc
pop
jbe
jmp
sbb
mov
sbb
test
pop
xor
mov
popf
xchg
aad
adc
sbb
mov
mov
test
notl
pop
rorl
push
arpl
in
dec
or
in
cmp
xchg
jnp
adc
int3
add
pop
aaa
movsl
xor
adc
movsl
or
push
loope
cmp
and
sub
les
fildl
adc
adc
cli
dec
sub
mov
sbb
adc
sbb
scas
in
pop
jno
lods
leave
sbb
mov
mov
sbb
stos
push
ss
in
adc
in
inc
dec
fidivs
in
in
or
jg
repz
or
jns
jnp
xchg
xchg
or
popa
xchg
out
rorb
cmpsl
scas
pop
leave
jge,pn
popf
jge
aad
mov
xor
xchg
or
xchg
popf
push
pop
mov
and
clc
clc
jns
sub
lcall
jge
pop
mov
adc
std
xlat
jnp
adc
orl
insl
jp
cmpsb
in
loop
add
push
xorps
pusha
cmp
cmc
outsl
xchg
xchg
pop
pusha
lcall
sbb
cmp
and
mov
sub
lods
push
sbb
rcrl
push
mov
jl
loop
mov
cld
and
lods
aas
sar
lods
fidivs
mov
mov
adc
leave
imul
inc
pop
push
xor
movsl
ja
or
sub
ss
xchg
jge
punpckhwd
push
mov
xchg
mov
dec
movsl
test
das
data16
adc
out
xor
or
out
fwait
push
fcoms
inc
shll
imul
xchg
xor
cwtl
imul
rol
push
and
push
nop
dec
movsb
in
pop
daa
add
mov
and
sbb
mov
fldcw
rorb
push
clc
jno
jae
js
add
add
leave
fistps
lret
push
mov
sub
ds
mov
add
push
sub
mov
sbb
scas
lahf
xchg
push
fisubrs
ror
or
or
test
mov
pop
jg
xor
adc
pop
sbb
adc
adc
and
jb
daa
jb
movsl
stc
push
mov
aam
add
jge
mov
jns
push
adc
adc
inc
lods
cmpsl
mov
int3
mov
xchg
fildll
sbb
mov
sub
popf
leave
mov
je
dec
pop
inc
fadd
mov
push
out
sti
xor
das
adc
fcmovnbe
jmp
sbb
movsl
mull
js
add
mov
fwait
int
jne
ret
mov
fidivl
out
cmp
mov
loopne
mov
cmp
pop
adc
or
in
aas
xor
mov
push
push
pop
inc
pop
out
sbb
dec
mov
jmp
sbb
imul
jns
cld
xor
xchg
pusha
mov
xor
or
aaa
and
shrl
sub
or
pushf
push
inc
in
repz
out
cmp
cld
into
icebp
icebp
lock
in
inc
add
daa
xor
daa
mov
jne
xchg
popf
mov
adc
ffreep
movsl
jne
pop
out
mov
enter
xchg
xchg
mov
xchg
push
or
outsl
lea
mov
lahf
mov
adc
in
test
add
and
daa
and
adc
rolb
loopne
dec
gs
jns
jge
hlt
bnd
push
lds
shll
xlat
mov
jge
int
dec
mov
add
or
adc
pop
push
xor
dec
gs
xchg
jnp
lea
dec
push
sbb
push
pop
xor
es
ss
fmuls
xchg
xor
clc
sbb
xlat
inc
dec
or
popa
aad
sub
push
sbb
loop
sub
std
adc
sarl
nop
jge
or
jae
cld
push
orb
jecxz
add
add
add
out
int
gs
in
jno
add
aad
movsl
and
addr16
cmp
inc
xor
xchg
std
dec
out
in
cli
inc
scas
mov
iret
push
orb
rorl
dec
std
mov
dec
imul
adc
add
mov
dec
imul
push
dec
inc
xchg
add
sub
or
mov
xor
insl
add
adc
mov
ljmp
imul
mov
imul
dec
loopne
or
ffree
mov
add
loope
popa
inc
std
dec
mov
test
sti
gs
lods
sub
fistl
outsb
push
std
xor
test
xchg
push
pop
dec
pop
cltd
mov
inc
imul
xor
lock
jge
test
mov
iret
lret
jo
xor
push
adc
nop
jns
test
jg
inc
jo
incl
and
ss
fld
xlat
int
in
movsb
xchg
mov
sbb
mov
icebp
mov
in
cmp
fiaddl
adc
test
xchg
data16
popa
aas
pop
add
nop
add
sub
jbe
pop
popa
int
sahf
push
mov
inc
mov
push
cmp
inc
push
jecxz
cmc
shlb
pop
mov
push
lahf
jo
test
adc
jmp
enter
mov
sub
xor
test
or
inc
pop
lods
roll
dec
and
dec
lea
jecxz
mov
pushl
data16
nop
push
pop
out
dec
lds
xor
push
out
call
inc
pop
idivl
nop
add
sbb
insl
in
pop
sti
daa
mov
insl
jecxz
push
sbb
pop
or
adc
jne
pop
push
jge
popa
mov
fnstcw
sbb
fidivrs
or
xlat
in
mov
rcrl
inc
jnp
dec
jns
cmp
mov
popa
orl
orl
iret
mov
xor
sub
push
test
push
lcall
add
or
jecxz
orb
aas
stos
in
test
mov
sbb
push
jge
sbb
insb
mov
scas
test
je
mov
add
push
inc
push
push
mov
jecxz
pusha
and
dec
or
pusha
cmp
lcall
sub
aad
mov
mov
or
xor
pushf
adc
mov
int3
xor
fbstp
aad
cmp
lods
mov
sahf
cmp
dec
pop
push
dec
mov
es
push
cwtl
test
add
loope
push
int
mov
dec
insl
xor
test
jmp
scas
arpl
std
mov
enter
mov
lods
push
lods
xchg
pop
enter
add
lods
add
cld
sbb
jne
push
inc
enter
xor
je
fstp
push
inc
hlt
sub
arpl
sbb
fidivs
inc
push
adc
int3
sbb
pop
jnp
pop
inc
push
popf
push
roll
repz
sub
inc
lahf
xchg
mov
lret
fwait
mov
sbb
adc
or
jl
lcall
lods
and
push
inc
pop
sbb
mov
inc
mov
stc
fwait
pushf
mov
dec
pusha
fs
inc
lcall
dec
jno
int
dec
inc
in
std
ret
mov
mov
ret
mov
xchg
or
sub
and
jle
add
stc
arpl
adc
inc
fistpl
dec
or
addl
shr
push
cmpl
jg
pop
cmp
push
lret
mov
fcmovu
ljmp
movsl
xchg
outsl
shlb
inc
js
or
dec
lahf
sbb
pop
adc
jne
cmp
outsb
sub
adc
sub
mov
cmp
dec
adc
sub
and
or
imul
fs
and
sub
inc
in
and
adc
or
cmc
xor
popf
xchg
sub
mov
psadbw
mov
or
clc
and
sbb
push
cmp
out
push
dec
js
jne
xchg
jno
mov
mov
dec
add
pop
std
stos
inc
xor
adc
imul
mov
or
pop
loop
adc
or
adc
inc
jb
in
jns
int
rcl
push
fmull
jno
jo
pop
imul
imul
mov
dec
mov
adc
outsl
enter
sbb
lods
pop
add
in
or
or
dec
adc
mov
mov
dec
dec
and
inc
inc
ss
add
mov
sub
xor
aad
stos
dec
jns
push
or
sar
fistpl
add
fs
loop
pushf
dec
jp
jp
pop
sbb
add
outsb
xchg
sbb
sar
xor
xchg
and
inc
and
xlat
test
addr16
mov
stos
imul
movsl
sbb
bound
insb
movsl
xchg
xchg
dec
nop
sbb
in
pop
jbe
std
lea
mov
and
test
cmp
inc
sbb
sbb
imul
jge
or
jne
imul
xor
das
xor
jo
out
aad
or
lea
gs
in
and
or
outsl
or
mov
mov
cmc
add
test
cmp
push
cmpsb
push
sub
lds
gs
js
and
push
dec
mov
cld
push
push
in
or
sbb
shrl
jnp
out
test
outsb
test
jecxz
sbb
add
push
dec
cli
out
fs
sub
movsl
mov
fneni(8087
mov
ss
ror
and
fs
mov
bound
int
add
add
dec
out
mov
and
call
sbb
adc
jb
adc
push
mov
or
lods
cltd
dec
add
lcall
int
stc
fldcw
dec
xchg
sbb
mov
in
sbb
fnstenv
insl
nop
adc
lods
icebp
jg
add
lds
pop
into
pop
adc
pop
push
in
mov
xlat
add
or
cltd
push
inc
stos
por
movb
fs
push
adc
jnp
gs
movsl
repz
jmp
lret
or
js
or
shll
mov
je
adc
xor
aaa
pop
inc
or
xchg
int3
outsl
cmc
jecxz
fldl
mov
dec
inc
sub
movsl
movsl
das
push
mov
mov
test
inc
in
jae
dec
dec
jno
pop
fucom
xor
jmp
in
cmp
mov
mov
push
int3
lcall
pop
cmp
or
xchg
lcall
inc
sbb
sub
xor
loopne
add
enter
jb
or
outsl
call
lret
dec
dec
fbld
jl
mov
inc
sub
pop
dec
insl
sbb
add
sbb
sbb
int
test
nop
sub
lds
std
lock
rorl
repz
sbb
and
arpl
adc
mov
popl
out
cmp
cmp
cmp
mov
idivl
xchg
test
fwait
gs
sub
adc
xchg
cmc
pop
mov
sub
cltd
aaa
or
sbb
pop
sub
adc
pop
mov
popf
in
fidivl
pop
std
add
stc
mov
add
cwtl
pop
inc
call
jg
loop
sub
sub
inc
lods
add
hlt
dec
jmp
dec
cmpsb
arpl
xchg
std
stc
or
mov
jne
les
push
xor
mov
sbb
or
push
movb
jae
pop
xorb
cmp
icebp
jns
cmp
jo
test
mov
aad
rcll
insb
mov
mov
nop
mov
lea
arpl
pop
loope
int3
cmpsb
xor
imul
jmp
cmp
rol
push
test
in
lahf
push
or
sar
xor
jne
ret
push
mov
xor
enter
test
insb
loopne
fwait
mov
lods
or
xor
mov
pop
lea
mov
mov
jl
repz
push
mov
ss
lahf
inc
iret
pusha
add
add
rcl
mov
mov
pusha
xor
gs
or
faddl
lods
pop
dec
popf
outsl
std
or
pop
cmp
in
jl
adc
cmp
fwait
pop
push
aad
xor
mov
mov
dec
dec
pop
push
loopne
lods
stc
and
loope
cmp
mov
scas
mov
dec
pop
imul
mov
xchg
loopne
add
rcll
in
fistl
add
adc
push
sbb
cmpsl
cmpsb
hlt
xor
inc
lret
xorl
rcrb
shll
inc
cmc
xchg
imul
adc
and
or
mov
inc
sub
dec
jb
sahf
and
mov
sbb
test
sbb
mov
addr16
mov
sbb
loopne
clc
std
xchg
arpl
or
adc
fstpt
inc
repnz
add
fisttpll
test
mov
xor
jns
and
mov
insl
dec
jg
sbb
sbb
out
fwait
leave
jl
xor
lret
mov
insb
mov
in
cmpsb
loopne
popl
lret
imul
cmpsl
in
imull
sbb
inc
ja
cmp
or
xchg
cltd
or
fwait
icebp
xchg
lods
mov
orl
push
icebp
scas
and
push
lods
dec
loope
cli
hlt
lods
leave
jge
adc
dec
rclb
test
imul
xchg
call
lret
sti
jne
push
stc
sbb
test
xchg
push
outsb
daa
and
pushf
inc
fidivl
cmp
mov
cmp
outsb
call
sbb
and
xchg
mov
lds
test
add
jno
dec
mov
mov
sbb
xchg
outsl
mov
pop
out
lock
dec
xor
movsl
lds
push
sub
push
shlb
je
mov
dec
dec
pop
mov
fldlg2
fs
in
jne
ds
jno,pt
test
mov
jo
faddl
mov
arpl
int
shl
fldt
jbe
xor
jg
enter
add
sbb
pop
mov
xchg
mov
cmp
vpslld
mov
aad
aad
pop
sub
mov
insl
push
leave
or
les
cmp
mov
sub
jbe
mov
outsl
push
jnp
std
scas
push
sbb
xchg
inc
add
xchg
pop
inc
dec
aad
aad
push
fstpt
jge
pop
lret
xchg
pushf
rcll
or
push
dec
push
cmp
sbb
dec
hlt
and
cli
jo
subb
ja
inc
fisubl
mov
orb
xchg
ss
jge,pn
push
adc
addr16
sbb
hlt
fiadds
loope
movsl
jnp
fistpll
lods
push
ss
cmpsl
sbb
lret
ja
inc
sbb
popa
inc
xchg
jno
cmp
jg
bndstx
or
call
sub
arpl
rorb
and
xchg
mov
or
imul
dec
test
jae
ss
mov
xor
pop
and
pop
push
movsl
stos
jno
dec
mov
imul
dec
fs
popa
push
rorb
mov
aad
cmp
in
loopne
dec
mov
out
or
xor
daa
xor
mov
cwtl
cmpsl
mov
lock
add
loop
mov
enter
pop
mov
and
mov
shl
test
daa
sbb
xchg
gs
lods
test
sub
xor
imul
lret
mov
xor
std
test
mov
push
fstpl
sbb
insb
xchg
scas
repnz
int3
xchg
fnstsw
gs
shlb
enter
inc
aam
fdivl
jno
dec
xchg
push
sub
aam
dec
lock
cld
add
pop
xchg
mov
in
sti
mov
in
mov
movsl
cmp
cmp
loope
mov
mov
and
mov
or
aas
leave
arpl
lea
and
xchg
pop
loope
or
jmp
insb
popf
bound
or
mov
pop
sbb
enter
jg
cwtl
adcl
add
cmpsl
push
divl
lds
int
sub
lret
jns
cmpsb
daa
jmp
popf
lret
rol
cmpsl
xor
je
stos
loop
and
rolb
pop
fsubrl
jecxz
or
pusha
cmc
or
mov
push
cmp
int
enter
movsb
jne
fidivl
dec
into
cld
es
pop
ret
or
sbb
lret
xchg
mov
fwait
or
or
movsl
adc
movl
aad
adc
or
push
pop
pop
in
and
sub
gs
xorl
mov
out
cld
adc
cltd
aad
or
insl
cs
adc
imul
lods
cltd
rclb
loop
shrl
nop
lret
fsubrl
cmp
jmp
cmpsl
adcl
mov
push
imul
xchg
dec
test
les
sahf
xor
cmp
dec
sahf
fisttpll
sbb
lahf
jle
mov
scas
repz
mov
push
orl
xchg
imul
jbe
mov
icebp
test
fildll
ja
adcb
sub
les
mov
inc
or
lcall
or
pop
cmpsl
dec
and
imul
mov
inc
fists
mov
xor
inc
inc
cltd
pop
jns
add
inc
mov
and
xchg
stos
or
nop
mov
fstl
xor
stc
and
enter
test
mov
nop
and
add
fucomp
enter
cwtl
and
outsl
or
in
pushf
sub
loope
sub
mov
push
sub
movsl
pop
xor
sbb
xchg
hlt
lret
and
or
push
icebp
fiadds
inc
jmp
xchg
aad
pop
mov
or
mov
aaa
jmp
ficomps
adc
or
rorl
add
repnz
or
add
add
sub
rcrl
add
pop
jno
xlat
out
outsl
pop
or
sti
mov
lret
aaa
mov
imul
add
pop
or
jl
popf
adc
je
icebp
lds
push
cmc
xor
in
jecxz
out
adc
dec
sbb
inc
jns
jecxz
nop
push
mov
sbb
shlb
imul
inc
and
orl
test
movsl
jno
icebp
test
lods
mov
std
or
mov
jne
mov
inc
push
leave
or
iret
jne
adc
lret
frstor
inc
cmpsl
jne
loopne
push
and
shrl
sbbb
mov
sub
xor
aas
xor
sahf
gs
push
mov
and
fiaddl
je
dec
loope
dec
arpl
inc
push
jo
inc
leave
xchg
aam
push
push
sub
dec
movsl
ljmp
xlat
adc
rcll
adc
mov
fistl
xchg
inc
jne
into
jno
in
or
adc
ja
mov
lea
data16
mov
daa
xchg
insb
xor
xlat
lock
lea
sub
fnsave
inc
rorl
in
icebp
pop
xchg
jnp
mov
ret
sbb
sbb
test
inc
and
repz
addr16
arpl
insl
xchg
fsubr
int
clc
add
mov
dec
cmp
nop
pop
leave
mov
push
movsb
cmp
adc
cmpb
or
pop
out
mov
stc
mov
lcall
add
dec
aad
or
pop
test
pop
out
mov
or
sub
into
das
outsb
mov
aas
inc
seto
push
xchg
xor
loope
sub
test
test
out
lret
jns
xor
pop
stos
dec
push
xor
mov
mov
sbb
jecxz
dec
cmpsb
in
push
fcomi
insl
movsb
inc
lds
and
repz
lods
push
pop
int3
mov
push
neg
mov
cld
inc
push
in
iret
jge
jns
in
out
xchg
testl
gs
jae
iret
pop
movsl
push
insl
push
jb
sahf
gs
aas
pop
add
pop
cmpsl
pop
cmp
in
sub
stc
pop
jns
mov
dec
xchg
lret
xor
ret
int
icebp
mov
dec
insb
clc
xchg
xchg
shrl
inc
imul
mov
jne
cltd
xchg
adc
push
and
ret
out
mov
dec
or
sbb
mov
bnd
xchg
push
enter
adc
addr16
xor
xor
inc
sbb
add
mov
sbb
lret
out
or
rclb
inc
cmp
fistpl
dec
int
in
mov
bound
xchg
leave
jns
and
xor
push
inc
adc
pop
mov
imul
jmp
push
push
adc
lds
push
adc
cmpsb
lods
push
jno
mov
pusha
mov
fwait
or
mov
add
push
dec
xchg
push
enter
fsubrl
inc
mov
and
sbb
mov
imul
push
imul
pop
sub
out
xchg
mov
mov
xor
aas
or
mov
aas
mov
sbb
inc
aas
js
xor
test
insb
pop
add
mov
add
insb
shlb
sub
arpl
mov
jbe
and
push
and
mov
mov
xor
mov
or
cmpsl
arpl
dec
xlat
icebp
dec
jns
xor
mov
xchg
jo
mov
mov
popa
cld
icebp
jns
std
lcall
lds
push
xor
lods
outsl
fdivr
lods
data16
std
aad
cmp
or
icebp
int3
adc
movsl
jge
cmp
fisttpl
into
outsl
pop
adc
rcll
sbb
mov
mov
rcl
pop
and
das
out
mov
sbb
jmp
and
dec
mov
pop
iretw
addb
or
lea
test
pop
pushf
jmp
dec
dec
cmp
jo
lea
adc
test
cwtl
daa
mov
xchg
test
xchg
cmpl
lock
fdivrs
push
push
stc
inc
xor
mov
pop
push
push
pop
xor
cmp
inc
test
cltd
imul
sbb
test
mov
ficomps
repz
add
scas
xchg
test
push
pop
js
jo
xlat
add
and
mov
out
push
dec
xor
scas
add
xchg
pop
pop
mov
jge
dec
sbb
cmp
bound
jle
mov
jg
xchg
add
sub
pop
aam
jno
sbbb
bound
mov
and
adc
lcall
or
fsubrs
pop
push
mov
mov
in
add
outsb
or
push
loope
inc
fstl
jne
insl
pusha
adc
mov
call
adc
or
add
lock
int
pop
rolb
lea
sbb
js
sbbb
adc
mov
pop
mov
in
movsl
lea
pop
push
insl
out
mov
inc
imul
mov
imul
sbb
add
inc
xchg
insb
and
loopne
inc
xchg
in
mov
add
call
cmp
mov
aam
shll
mov
or
nop
inc
adc
or
outsl
jo
int3
dec
adc
or
int
int
adc
imul
inc
sub
xlat
leave
icebp
mov
inc
mov
nop
mov
sub
sub
sbb
shrb
sbbb
push
mov
test
mov
orl
clc
push
mov
sub
aad
sub
inc
xchg
aad
notl
inc
fildl
xchg
push
stos
mov
and
inc
int3
xor
push
jle
adc
xor
xchg
or
nop
fldenv
aam
mov
inc
jo
imul
pop
push
push
mov
lds
pop
sub
aas
lds
mov
xorb
jb
add
sbb
int
cmpsb
dec
cltd
sarl
clc
cmpsb
and
das
sbb
jb
adc
push
mov
push
dec
mov
inc
fwait
bound
lods
xchg
aas
mov
inc
out
jnp
xor
jge
insl
fnstsw
test
dec
sbb
and
out
je
dec
leave
pop
enter
out
and
jge
in
or
sub
cmp
repz
pop
sub
lcall
iret
xchg
push
xor
test
data16
jl
bound
jge
adc
cmp
jp
pop
in
imul
jge
icebp
or
das
inc
add
aas
cmc
jb
mov
sub
jo
fdivp
sbb
test
jb
hlt
jg
pop
push
hlt
hlt
lea
adc
test
jno
cld
jl
popf
push
test
mov
mov
pop
add
and
add
cmp
sbb
out
xor
pop
cmp
cwtl
in
push
xchg
cmc
shlb
mov
jns
mov
cld
adc
test
xor
cmpsl
addr16
cmp
cmp
popf
jecxz
push
sub
mov
sub
scas
int
mov
mov
cmp
insl
and
mov
or
or
mov
or
jg
stos
add
adc
std
mov
xor
or
ret
mov
aas
pop
sub
cmp
or
mov
rcll
sarb
and
test
add
aad
add
mov
lcall
adc
mov
mov
or
adc
pop
mov
test
test
mov
push
jmp
imul
jbe
jg
outsl
mov
movsl
repnz
imul
lock
and
inc
cmp
pop
out
shl
pop
sub
mov
dec
das
ror
aam
or
mov
push
lcall
mov
mov
xor
pop
pop
leave
outsl
inc
ret
es
fidivrl
arpl
scas
mov
scas
int
arpl
test
cmp
repnz
inc
lds
push
dec
and
fwait
sbb
inc
out
add
sbb
sbb
test
adc
push
lods
mov
jno
les
mov
fwait
mov
es
cmp
jge
or
inc
mov
pop
or
jnp
dec
jno
inc
mov
fucomi
jmp
test
add
or
cmc
jg
push
in
or
push
lods
in
mov
mov
push
ss
scas
push
or
mov
insl
pop
pop
das
lds
inc
in
cwtl
fucomp
mov
or
cli
in
sti
shlb
leave
xor
mov
movsb
cmc
adc
or
jmp
lods
mov
xor
dec
sbb
lahf
mov
mov
ds
inc
hlt
cmc
ret
popf
add
xor
int
sub
push
int
push
imulb
outsl
ss
lods
daa
lds
imul
ret
loope
mov
pop
jg
imul
sbb
sahf
insl
inc
outsb
les
sbb
out
ret
addr16
test
mov
popa
push
cmpsl
cmp
add
pushl
mov
sub
add
int3
sbb
pop
shl
ljmp
lds
xchg
xchg
movhps
add
inc
lcall
outsl
daa
or
cmp
add
or
shl
xchg
adc
inc
lahf
jae
sub
in
aam
lea
mov
dec
pop
icebp
sub
rorb
mov
or
aad
xorl
and
or
push
decl
sbb
add
out
push
dec
mov
sahf
int
fidivs
lds
loopne
lock
out
or
pop
cli
pop
ds
cli
cli
mov
and
out
push
call
pushf
popf
jge
mov
andl
std
sbb
xchg
push
bound
int
xor
incl
or
pop
sub
sahf
mov
dec
push
aas
lock
outsl
es
into
outsl
lea
adc
pop
shlb
popa
or
ds
xor
cmp
stos
lea
push
jno
mov
lods
add
test
or
sbb
es
pop
and
or
pop
hlt
inc
aas
adcl
add
dec
jno
fcmovne
mov
je
mov
imul
adc
push
clc
lahf
inc
adc
jecxz
faddp
mov
sub
pushf
mov
iret
fucomp
inc
fdecstp
mov
push
sbb
lahf
inc
cmp
je
push
sti
adc
cmc
add
loopne
hlt
in
cmovne
fnstsw
cmp
mov
dec
sbb
test
enter
lock
and
adc
popf
dec
das
mov
xor
mov
mov
jmp
lds
sub
pop
cmp
jl
push
jmp
lods
xchg
scas
push
lods
pop
xor
mov
adc
jmp
jne
cmp
cwtl
xor
pop
xlat
cmpl
pop
adc
adc
xor
xchg
xchg
mov
daa
mov
int
jo
xor
insl
mov
inc
stc
imul
cltd
lock
popa
rcrb
adc
push
push
or
pusha
stos
nop
icebp
adc
xor
add
or
xorl
xchg
push
jmp
add
jae
sbb
sbb
and
aad
lods
loope
xchg
in
shlb
shlb
enter
and
test
insb
push
xchg
inc
jmp
sbb
test
sbb
xchg
call
fwait
mov
enter
pop
or
int
ret
pop
cmpsl
jns
pop
mov
pop
xchg
sbb
gs
jmp
push
inc
mov
mov
adc
outsl
rcr
into
pushf
xchg
pop
cld
enter
lcall
xor
cltd
push
push
inc
push
inc
jb
sahf
lea
push
nop
sbb
adc
insl
test
mov
pop
in
inc
mov
nop
insl
fisttps
dec
mov
std
inc
dec
jl
es
mov
jo
pop
mov
inc
pop
inc
ficomps
push
in
fbstp
fwait
jae
popa
addr16
lahf
repnz
or
inc
std
in
cmp
insl
lock
cmc
sbb
or
xchg
daa
sub
mov
mov
and
movsb
mov
sbb
push
stc
mov
cvtdq2ps
hlt
out
inc
fs
jb
imul
iret
dec
fxch
or
lods
imul
or
mov
cmpsl
sbb
sbb
sub
test
les
pop
das
and
jb
enter
movsl
cmp
dec
pop
arpl
or
pop
sbb
aam
dec
data16
mov
lahf
jb
jns
mull
cli
std
pop
mov
sbb
pop
aas
out
fs
pop
mov
repz
and
sbb
fwait
or
imul
out
pop
xchg
jnp
xchg
inc
or
inc
add
xchg
outsl
jo
add
xchg
jne
mov
or
sub
pop
aam
ja
sub
add
and
inc
rclb
jmp
arpl
jge
xor
sub
cs
dec
in
jno
mov
inc
or
dec
loope
mov
dec
xchg
or
mov
js
sbb
je
mov
pop
pop
loopne
dec
push
jl
ss
inc
jle
inc
das
or
imul
aam
out
pop
movsl
in
jae
adc
jb
dec
inc
out
in
imul
or
mov
mov
adc
das
mov
cmc
adc
mov
dec
mov
in
or
add
xchg
xchg
mov
adc
lret
dec
xlat
or
mov
jle
sbb
or
jl
shrl
inc
jno
ds
orl
cmp
lea
sbb
inc
sbb
or
lds
and
insl
popa
das
xchg
pop
mov
flds
or
add
fisttpl
mov
sub
mov
dec
xlat
adc
filds
ss
aad
push
mov
sub
dec
or
jb
add
popf
ss
dec
mov
adc
repz
fsubrl
pop
shlb
dec
sub
adc
cltd
dec
pop
mov
leave
test
jb
dec
push
test
repz
stos
pop
dec
inc
scas
sarb
dec
out
mov
add
sub
lds
or
mov
mov
test
enter
pop
mov
jge
rcrb
lret
or
fldcw
mov
loope
jno
jo
pop
dec
pop
dec
push
inc
or
jnp
add
sub
pop
fildl
push
jg
into
cmc
fstpl
jnp
test
or
pop
mov
insb
pop
sahf
push
outsl
gs
cmp
idivb
enter
xor
sbb
or
sbb
adc
add
and
pushf
hlt
jg
xor
jbe
cmc
xlat
xor
or
or
xor
icebp
add
push
ret
adc
jmp
movsl
test
es
xor
pop
leave
add
mov
sti
cmp
stc
jecxz
and
test
inc
adc
xor
mov
mov
sbb
inc
or
in
lock
fstpl
jbe
push
push
es
xchg
and
test
popf
aam
ret
ds
dec
jmp
dec
cmpsl
add
scas
lahf
cmp
and
gs
add
adc
aad
cmp
imul
outsl
aas
or
add
xchg
movsb
cs
std
inc
cli
in
in
or
sbb
pusha
cmp
rcll
jmp
popl
stos
inc
movsl
fimuls
nop
sub
jmp
icebp
lret
fmuls
xchg
xlat
xor
push
pop
je
imul
or
scas
popa
add
addr16
adc
push
adc
cmp
jge
cmpsl
nop
int
dec
mov
imul
fmul
or
pop
cmp
imul
cmp
jo
cmpl
xor
mov
fisubs
mov
mov
jg
mov
roll
jecxz
jne
in
shrl
jge
xchg
jle
das
daa
push
js
jnp
jo
insb
and
lcall
lahf
movsb
inc
xchg
addl
push
sbb
mov
adc
fwait
in
sub
xchg
or
jae
notb
adc
xor
sar
icebp
add
mov
unpcklps
push
dec
fwait
shl
inc
fwait
adc
jmp
sbb
mov
and
in
icebp
adc
aam
mov
js
inc
fdiv
jp
push
into
mov
sub
push
dec
in
mov
or
cmp
faddl
sbb
jns
in
into
lds
pop
or
sub
push
data16
rcll
sbb
sub
in
xor
mov
or
in
cmp
call
imul
pop
inc
clc
out
stos
jns
int
dec
call
cmpsl
int3
loop
aam
ljmp
or
adc
inc
push
loop
mov
sbb
pop
push
mov
xchg
jmp
push
popa
outsb
push
inc
loop
mov
cmp
call
outsb
xor
clc
sbb
data16
sub
ret
ja
jecxz
es
out
test
data16
test
inc
sbb
add
xchg
loope
adc
add
sbb
nop
sub
in
cmp
adc
adc
adc
mov
gs
cmp
sbb
xor
push
xor
loope
shlb
pop
jge
imul
movsb
icebp
xor
push
int
jno
outsb
sbb
jae
mov
pop
insl
leave
push
jae
dec
in
jno
xchg
dec
fdivrl
fs
imul
dec
insb
outsl
jbe
push
scas
pop
mov
jg
sbb
jno
stos
jne
xlat
imul
loope
lret
mov
inc
fldcw
sbb
jno
jge
movntps
adc
inc
mov
sub
fstps
roll
or
imul
dec
sbb
aad
inc
out
xchg
sbb
jg
fistpl
or
mov
cmpb
mov
repz
icebp
jecxz
adc
pop
xor
inc
cmp
lods
icebp
mov
enter
icebp
testb
inc
test
mov
ror
mov
iret
movsb
shl
popf
data16
jb
out
subb
lcall
fwait
int3
jns
enter
xchg
imul
cmpsb
sub
xchg
jnp
fisttps
pop
inc
mov
out
push
ficoms
int3
add
and
xor
or
sbb
or
dec
addl
scas
pop
add
adc
cmc
mov
outsb
aaa
mov
cmc
sbb
stc
ficoml
lahf
outsb
mov
hlt
insl
inc
and
out
fidivrs
int
sub
rolb
dec
push
pusha
imul
jbe
pop
aad
adc
fwait
int3
je
add
mov
sbb
cmp
dec
das
imul
js
clc
add
or
dec
xor
pusha
in
mov
inc
add
frstor
push
lods
push
add
es
lcall
test
add
add
jnp
dec
pand
xor
pop
lods
push
push
mov
add
push
inc
cs
xchg
push
andb
lcall
icebp
jmp
add
or
outsl
dec
add
add
lods
xchg
cmpsl
xchg
outsl
jne
mov
cmp
cmpsb
nop
xchg
mov
dec
nop
dec
pop
les
out
iret
std
or
repz
cs
jne
inc
jmp
addr16
adc
add
inc
cmpsb
mov
and
in
or
lds
push
pop
jno
jp
int
scas
int3
and
xor
or
sub
and
xchg
orb
inc
or
mov
aad
mov
cwtl
jge
jmp
push
enter
add
rclb
subl
jno
xor
push
fcoml
adc
aad
push
fildl
mov
pop
stc
lret
jmp
mov
adc
lret
push
jne
cmpsb
insb
lods
or
mov
adc
sbb
jae
in
pop
add
lcall
loopne
in
sbb
pop
decl
fisttpll
and
xchg
mov
lds
cwtl
mov
or
dec
or
pop
jg
add
ret
cmpsb
inc
iret
or
sahf
pop
xor
in
pop
test
mov
inc
adc
mov
or
cmp
aad
mov
hlt
int3
test
sahf
pop
pop
icebp
aaa
sub
dec
jne
dec
mov
movsl
mov
scas
xchg
imul
lahf
aad
dec
xor
inc
cmp
cltd
push
mov
gs
mov
dec
jns
or
imul
inc
lock
xorl
mov
imul
pop
lret
sarb
movsl
insl
xor
arpl
aaa
rsqrtps
cmpsb
cwtl
lods
xchg
repz
jge
or
in
gs
cmp
test
sub
sub
sbb
jb
pop
xor
sub
jne
mov
jnp
cmp
and
test
inc
pop
int3
ret
or
dec
sub
scas
or
sub
and
xchg
sti
mov
and
stc
and
push
and
pop
mov
jno
sbb
adc
enter
xor
mov
bound
jbe
iret
push
outsl
mov
push
inc
loop
xchg
int
xchg
or
jmp
push
jp
or
adc
xor
mov
xor
lock
shlb
dec
inc
bound
lods
mov
mov
cmc
lahf
push
andb
les
inc
inc
lcall
push
imul
or
sbb
rcll
cltd
xor
rorl
outsl
sbb
stos
dec
adc
add
loop
mov
test
or
enter
les
fnstcw
and
rolb
cmc
inc
popf
decl
and
xlat
cltd
pop
push
mov
addr16
test
xor
popa
adc
cld
daa
inc
or
arpl
in
lahf
outsl
push
dec
ja
into
nop
jne
popf
sarb
cwtl
xchg
sub
nop
ud1
cli
jge
xchg
xor
pop
xchg
jae
jmp
ds
adc
scas
mov
test
xchg
addl
sbbl
mov
bound
mov
cli
xor
lcall
cwtl
fwait
or
daa
in
frstor
cmp
ficomps
push
sub
gs
dec
mov
lahf
mov
add
lcall
mov
jp
mov
mov
std
inc
out
xor
pop
lock
mov
pop
in
aad
int
iret
sbb
or
add
aas
adc
js
pop
jno
dec
xchg
insb
imul
jmp
dec
sub
fdivs
mov
test
lret
aad
popf
cmp
lret
inc
pop
push
or
push
jno
imul
pop
sbb
mov
adc
inc
aam
in
arpl
imul
mov
mov
xor
jmp
xchg
inc
lcall
orl
scas
jl
adc
enter
or
pop
mov
pushf
in
xchg
into
xchg
xlat
subb
popf
test
js
dec
or
dec
pop
xor
mov
andb
push
mov
aam
cld
mov
pop
adc
jno
test
aad
rorb
mov
xor
pusha
jle
adc
inc
jg
sub
jmp
repz
mov
sti
popf
cmpsl
add
jno
or
les
add
js
dec
mov
dec
mov
pop
dec
fdivs
rcrb
subl
cmp
inc
xchg
loop
push
and
js
test
popa
notl
pop
dec
push
mov
jne
test
xchg
cwtl
vpextrw
xchg
adc
bound
pop
push
jo
lret
dec
clc
scas
test
and
js
add
lahf
fstpl
mov
pop
imul
mov
lea
lds
xchg
cmp
pop
movsb
push
int
notb
pop
scas
xor
cmp
or
subl
add
out
punpcklbw
stc
js
ds
mov
xchg
xchg
jmp
mov
mov
cmp
ljmp
sbb
push
cwtl
dec
mov
and
out
push
stc
std
loopne
rcrb
addb
fcmovnbe
lods
fs
movl
mov
enter
popf
sbb
mov
inc
cmpsl
loop
sub
stos
dec
cmc
add
xor
jnp
scas
inc
mov
xchg
sbb
daa
or
arpl
fnstsw
or
dec
hlt
insl
mov
sub
out
adc
mov
push
add
lret
push
dec
dec
adc
popa
push
leave
jecxz
sbb
xor
pop
push
loopne
push
pop
jo
lods
cli
std
adc
jb
push
mov
mov
mov
into
add
in
add
adc
ja
mov
xor
mov
or
lock
mov
adc
loopne
popa
call
jl
imul
mov
or
js
orl
nop
push
jge
push
mov
or
add
js
test
ljmp
xor
daa
mov
popf
lods
insb
inc
pop
jecxz
iret
cmpb
xor
es
int3
xor
dec
jo
sbb
or
mov
fstpt
or
lds
xchg
push
mov
jl
lods
mov
add
and
mov
and
adc
xor
push
hlt
adc
mov
movsl
mov
dec
hlt
js
mov
addr16
test
or
dec
or
xchg
dec
lds
scas
out
adc
mov
jnp,pn
jne
mov
xor
test
push
shlb
cwtl
jns
sub
ficompl
sbb
in
inc
jne
mov
test
cltd
adc
hlt
fdivrl
sub
nop
xchg
dec
sub
sbb
stc
pusha
fldcw
stos
mov
push
xor
mov
shl
mov
jnp
pop
adc
mov
popf
inc
push
pop
int
add
add
js
jo
sahf
xor
subb
xchg
cltd
fsubl
sahf
jge
pop
jno
pop
and
jnp
and
or
mov
inc
mov
push
ss
enter
mov
add
mov
lea
jo
xlat
shrb
test
das
xor
adc
scas
xor
xchg
dec
adc
imul
lea
lock
and
inc
mov
jecxz
push
push
dec
in
inc
xchg
outsl
xchg
xorb
stc
lea
cwtl
in
pop
arpl
jae
jge
dec
gs
or
pushf
sub
mov
and
movsl
pop
int
shrl
inc
sub
repz
ds
jge
in
adc
aad
push
mov
outsb
stos
insl
pop
fldt
jnp
cwtl
cmp
pop
mov
jl
cmp
cmp
add
or
sahf
mov
aad
cmp
xor
adc
xchg
pusha
flds
pop
inc
push
lds
js
jmp
dec
repnz
je
insl
insl
jno
adc
mov
adcl
mov
adc
jno
imul
mov
lock
dec
adc
jae
movsb
std
add
je
inc
subb
in
cld
or
push
jp
add
pop
jo
dec
xchg
cmpsb
sub
dec
jbe
dec
sbb
in
movsb
inc
or
insb
add
pop
or
mov
dec
xor
iret
movsb
jne
mov
mov
jge
xchg
dec
xchg
icebp
inc
mov
adc
lds
jge
push
shll
add
icebp
das
or
xchg
enter
fldenv
jns
scas
push
cmp
jne
mov
or
sbbb
pop
sbb
movb
js
add
outsl
fs
and
cmp
push
dec
popa
push
inc
or
fs
and
lods
mov
xlat
ss
add
cmpsl
adc
jmp
fdivrs
xorps
or
mov
cwtl
nop
movaps
leave
mov
repz
jge
jo
jge
addl
add
aas
pop
sub
test
mov
push
pop
fwait
mov
and
gs
adc
jae
xchg
out
ret
mov
mov
outsl
rsqrtps
jae
shl
jmp
cmpsl
sub
inc
mov
insb
dec
add
mov
sbb
sbb
inc
insl
jno
outsb
aad
in
js
push
pusha
cli
cmp
dec
jecxz
lods
push
scas
std
dec
lahf
push
aas
ffree
jb
jns
xor
ret
fadds
out
jo
scas
mov
int
mov
shld
insl
mov
das
inc
cmp
leave
cltd
or
jp
or
cmp
call
or
mov
xchg
or
mov
pop
sbb
pop
inc
sbb
pop
jae
ret
or
aas
aad
nop
aad
aaa
mov
sub
inc
aad
add
cli
jl
lods
mov
daa
clc
les
adc
and
or
mov
js
inc
push
frstor
popf
clc
pop
out
push
add
out
cmp
and
cwtl
in
loope
stos
leave
mov
mov
jne
xor
mov
mov
out
inc
testb
shll
in
pop
sub
repz
ret
pusha
or
xor
int
loop
popf
cltd
aad
and
cmp
jns
dec
repnz
out
nop
ficomps
icebp
cmp
fwait
push
or
adc
or
jge
fwait
or
in
in
imul
outsl
xchg
lret
inc
in
pop
test
xor
scas
cli
push
dec
jae
dec
bound
stc
shlb
add
iret
lds
mov
in
pop
fcomip
daa
lods
mov
shr
loopne
jmp
ret
dec
or
jmp
and
ret
or
into
cltd
jne
repz
pop
cmp
mov
cmovge
pop
fildl
jecxz
pop
out
sbbl
lods
xorb
popf
or
and
lahf
ja
mov
mov
cmpb
pop
sti
lahf
xor
add
shrl
rolb
pop
cwtl
xor
call
rorb
pop
je
ficompl
push
insb
daa
outsb
out
movsl
xorb
pop
or
in
mov
push
mov
add
and
punpcklwd
cmpl
pop
dec
add
push
mov
jl
insl
dec
stc
lods
fstpt
sbb
jg
sbb
pop
xlat
cmp
mov
aas
int3
pop
adc
mov
pop
test
lahf
cmp
aad
pop
jle
das
in
mov
or
fsubrp
inc
imul
push
dec
push
scas
imul
mov
jno
pop
jb
push
xchg
mov
mov
jns
mov
rclb
rcr
aad
test
sub
push
lock
push
xor
push
pop
push
dec
push
mov
fcoml
push
pop
mov
push
addl
mov
mov
jmp
push
nop
dec
or
add
xchg
insb
add
stos
insb
pusha
or
divl
mov
gs
sub
push
mov
sub
or
es
mov
or
pop
orb
sbb
daa
imul
ss
loop
call
arpl
dec
sbb
jo
icebp
mov
or
dec
insl
test
add
mov
jmp
in
sbb
jae
lret
mov
fsubr
adcl
imul
test
out
aam
lea
sti
cwtl
test
or
push
mov
jge
or
dec
push
int
pop
mov
dec
mov
mov
add
cmp
nop
mov
jo
pushf
and
int
or
and
ds
gs
mov
imul
mov
inc
pop
lds
dec
push
lahf
or
xchg
push
mov
cmpsl
pop
cmp
jno
or
add
aaa
inc
outsb
mov
stc
daa
push
cld
push
fnstsw
mov
test
push
hlt
or
jne
pop
add
xchg
inc
aas
xchg
repz
fsts
or
or
and
jg
call
cmp
or
push
jle
cld
sbb
test
sub
xor
test
mov
loope
jae
sub
lret
dec
test
lds
jp
test
inc
movsl
sahf
das
push
popf
xchg
gs
adc
adc
aad
jp
enter
call
inc
mov
out
test
mov
outsl
jne
mov
mov
or
adc
imul
push
mov
pop
das
and
xor
adc
inc
gs
or
inc
sbb
jne
or
add
push
jo
adc
movsb
das
fdivr
nop
mov
mov
or
lahf
jne
popf
aaa
and
test
pop
xchg
inc
insl
pop
aam
cmp
scas
jecxz
and
mov
dec
adc
sub
xor
xor
js
sbb
mov
adc
mov
scas
imul
sub
and
or
fdivrs
sbb
or
dec
adc
aam
aam
lods
adc
imul
arpl
adc
ret
add
outsl
nop
inc
sarl
sbb
or
adc
nop
mov
test
aad
test
rcrb
dec
popf
icebp
adc
fmul
gs
loopne
idivl
jecxz
popf
mov
mov
mov
lahf
sbb
popa
sub
clc
jne
mov
sbb
pop
scas
pusha
call
push
in
and
movsl
jb
sbb
gs
jo
call
imul
sub
in
sbb
ljmp
test
or
pop
pop
pusha
hlt
shlb
stos
add
es
sbb
push
shlb
pusha
aas
lcall
jno
sti
pop
push
sub
mov
add
mov
test
sub
test
aas
mov
test
jmp
in
adc
out
pop
cmp
enter
sbb
lret
pop
mov
jno
mov
mov
push
cmp
enter
leave
sbb
inc
shll
xor
lods
mov
imul
jo
pop
lea
xchg
adc
pop
test
sti
std
cmp
pop
push
iret
sub
stc
jbe
or
dec
dec
lret
nop
xchg
mov
sti
js
stc
hlt
cmpsl
mov
in
shll
cld
and
xchg
pushf
cmpsb
rorl
int
ds
push
ret
jae
aad
js
bswap
xchg
pop
dec
test
xor
inc
adc
popa
lcall
arpl
clc
push
inc
loop
inc
jno
and
push
jmp
rcl
mov
pusha
xchg
cmp
cmp
xchg
int
mov
mov
lahf
popf
and
cld
rorl
nop
or
pusha
in
ret
call
adc
fnstcw
fld
cmc
jmp
add
test
inc
sub
push
xor
push
jne
mov
lods
shl
push
sbb
pop
loop
imul
sub
cltd
ja
idivb
stos
mov
out
jmp
inc
outsb
inc
lret
inc
push
jmp
mov
rdseed
xor
adc
cmp
out
or
cltd
in
out
fwait
outsl
push
sub
ror
dec
mov
cld
mov
fdivs
test
ds
arpl
mov
popf
addl
xchg
popf
hlt
pop
add
test
push
dec
sub
fsubl
cmpsb
icebp
cmpsb
pusha
mov
mov
sub
stos
out
int
pop
mov
mov
mov
daa
stos
pop
push
aas
xchg
pop
les
adc
jge
push
jne
ljmp
xor
add
stc
fists
mov
lea
push
sbb
data16
in
int
mov
sarl
daa
mov
in
pop
mov
pop
dec
adc
adc
push
push
inc
loope
lcall
lahf
es
out
jns
adc
insl
mov
or
bound
or
sti
gs
mov
mov
test
inc
inc
pop
pop
pop
or
xchg
mov
mov
push
scas
jae
xor
mov
in
cmpsb
lock
sti
test
inc
sbbb
mov
jp
jne
lea
mov
lea
testb
sbb
or
inc
inc
shr
add
pusha
das
ds
fwait
arpl
popf
and
xor
out
dec
jne
std
xor
or
xor
jg
inc
pop
inc
cmc
xor
out
mov
cmp
adc
ret
in
je
insl
ljmp
addb
or
xor
adc
out
or
adc
mov
icebp
mov
stos
sbb
hlt
dec
int
sbb
ja
test
call
addr16
decl
sti
xchg
inc
mov
adc
das
int
aam
sahf
jl
adc
mov
nop
pop
fnsave
add
jae
sbb
add
jbe
and
sbb
out
inc
rcrl
inc
inc
stc
insb
call
shl
mov
sti
lret
xor
leave
sbb
int
das
fwait
outsl
cmp
subb
and
js
cmc
push
jno
jge
inc
out
int
lods
pop
popa
jp
fnstenv
sti
loope
out
jno
sti
push
stos
xchg
push
push
dec
lret
sahf
mov
mov
sbb
jl
pop
les
inc
aas
or
into
sub
notb
out
mov
adc
insl
mov
push
enter
mov
pop
inc
shl
lcall
push
lock
call
daa
xchg
cpuid
mov
cmp
mov
popf
ljmp
jns
mov
pop
sub
flds
bnd
popf
loope
sti
mov
pop
es
nop
xor
add
les
fs
pop
sub
jge
adc
sbb
test
and
jo
jb
scas
xchg
dec
jecxz
sbb
xor
push
fs
leave
out
les
fmul
add
and
test
mov
jnp
out
sbb
jge
xor
xchg
faddl
mov
inc
push
xor
xchg
imul
mov
jnp
dec
in
push
jmp
ds
lods
fsubrl
mov
dec
adc
lods
shrl
push
adc
or
imul
jl
es
sbb
dec
jge
lea
or
xchg
sti
xchg
insl
fidivrl
daa
test
addb
jb
lret
or
push
imul
fistps
dec
aas
les
cmp
or
and
push
inc
out
add
xor
or
xor
or
dec
sbb
push
add
aas
mov
call
xchg
sbb
aas
aam
fnsave
nop
in
adc
xchg
daa
std
add
and
xor
or
mov
push
nop
jle
inc
or
jbe
adc
pop
pushf
xchg
enter
xorl
xor
or
jns
inc
out
imul
ja
out
mov
mov
jbe
aad
cmpsb
aas
arpl
out
jo
cmp
xor
ss
cwtl
jmp
aam
mov
shrb
mov
inc
pop
xor
mov
add
fbld
mov
dec
inc
popf
mov
adc
mov
push
iret
cmp
adc
or
add
incb
mov
scas
inc
add
scas
cmp
imul
mov
icebp
test
push
add
aas
pop
cs
adc
cmp
test
add
fdivs
jge
sub
jns
enter
add
fstpt
or
fadd
aam
ds
and
cmpsl
lahf
xor
inc
push
orl
push
xchg
shr
in
rcrl
ljmp
cld
iret
inc
and
and
or
aas
out
dec
xchg
movups
aam
adc
adc
and
inc
adc
xor
imul
insl
cwtl
fbstp
mov
je
outsl
inc
cwtl
pop
ret
and
and
fldcw
push
out
xchg
jne
xlat
insb
out
js
aam
xor
repnz
sahf
pop
pop
rorl
int
sahf
mov
jge
in
ret
jmp
dec
push
sub
je
or
in
fimull
jbe
pop
pop
das
sub
xchg
jb
sti
mov
xor
ret
int
push
push
fcmovnu
jg
fdivp
mov
shrl
lea
rcll
rolb
out
pop
cmpsb
mov
mov
inc
outsb
inc
fildl
roll
std
add
in
setnp
pop
loope
in
mov
pushf
in
inc
hlt
rcr
dec
jne
and
mov
mov
push
sbb
test
add
movsl
add
adc
jl
adc
insb
jno
int
popa
fmull
icebp
jnp
arpl
cmovle
in
fwait
syscall
inc
pop
call
or
mov
mulb
sub
maxps
jge
cmp
sub
xor
inc
jge
and
mov
mov
or
ljmp
pop
mov
cli
jne
pop
lret
xor
xchg
clc
popf
mov
cwtl
filds
loopne
das
push
mov
fildll
sbb
adcb
out
push
sub
pusha
pop
mov
outsb
pusha
scas
movsl
inc
arpl
pop
inc
les
inc
dec
add
xchg
jge
mov
cmp
push
and
xchg
mov
mov
or
pop
push
sbb
fmull
int
cmc
jge
mov
cmp
rorl
test
push
pop
add
adc
mov
pop
icebp
pop
xchg
and
popf
xor
fsubl
loopne
movsl
outsl
or
lea
pop
xor
pop
mov
iret
mov
inc
add
repnz
and
js
adc
in
adc
scas
push
push
maskmovq
notl
or
and
fsubr
les
inc
cld
push
xchg
enter
sbb
jb
sub
sub
int3
mov
outsl
mov
sub
test
cmovg
dec
push
std
push
xchg
and
loop
ja
jnp
or
cmp
lea
or
or
xchg
dec
mov
pop
jmp
and
inc
mov
cmp
test
inc
push
jge
mov
xor
mov
push
cmpsl
cmp
rcrb
pop
fdivs
js
loopne
std
and
push
mov
les
lods
sbb
jle
jl
mov
jg
add
ret
lds
cli
call
cli
add
test
ja
inc
dec
in
test
mov
fs
pop
lea
loop
sub
mov
andl
fldt
bound
sbb
mov
cmp
xor
jno
mov
mov
cld
insl
dec
or
shl
nop
mov
filds
cltd
daa
aas
je
lock
in
dec
lahf
hlt
idivl
pop
pop
not
sub
xor
sbb
pop
adc
addb
dec
add
xor
mov
xor
inc
xor
xor
xor
jl
xchg
push
movsl
nop
xchg
push
aas
mov
daa
and
adc
loope
mov
shr
insl
pusha
ljmp
fcmovnb
icebp
shlb
inc
inc
in
and
inc
inc
and
lea
sbb
dec
pop
vpsrld
dec
or
or
cli
out
mov
popa
test
daa
fcomps
repnz
hlt
repz
dec
or
stos
negb
insl
lret
fisubrs
pop
ja
sbb
cmp
movsl
addr16
sbb
jno
inc
mov
imul
mov
mov
inc
mov
mov
aas
jg
cmp
imul
pop
lahf
xchg
jmp
test
add
and
movsl
fdivrl
push
stc
out
adcl
inc
mov
cmp
sti
lods
mov
xchg
sbb
xor
mul
xor
mov
lods
fldcw
int
push
lods
and
push
jno
inc
aas
fs
cmp
int3
in
sbb
xchg
pusha
mov
jbe
adc
lea
xor
pusha
fnsave
adc
jge
fwait
in
lds
adc
imul
cmpsl
ja
cmp
fwait
cmp
adc
sahf
add
frstor
jg
mov
and
inc
dec
insl
lock
adc
ss
dec
xchg
xchg
sarl
add
std
add
mov
adc
push
cmp
out
ret
xor
xchg
push
jo
dec
aad
sbb
cld
adc
nop
jge
push
xor
lahf
dec
pop
mov
mov
mov
mov
dec
popf
or
jo
dec
sbb
inc
test
and
mov
jne
and
sbb
pop
sahf
movsb
and
aad
rorl
or
test
push
dec
int
dec
mov
leave
aam
fnstsw
outsl
fisubl
adc
in
fmulp
mov
add
idivb
andl
pop
mov
insl
or
jmp
adc
dec
test
or
imul
adc
mov
pusha
and
dec
mov
fwait
dec
dec
data16
insl
cmpl
sbb
mov
mov
mov
jl
or
push
jmp
jge
out
idiv
inc
lock
push
adc
andb
adc
jo
mov
xor
pop
xchg
pop
outsb
gs
pop
adc
test
sbb
imul
in
fsubl
adc
lea
cmp
mov
mov
popf
gs
dec
punpckhbw
loop
mov
dec
jbe
cmp
sbb
cs
movsb
test
je
mov
mov
pop
xor
jns
test
dec
and
mov
insl
xor
push
mov
mov
adc
adc
test
sti
xor
scas
mov
idivb
mov
movsl
out
mov
dec
xor
adc
popa
iret
push
pshufw
xor
mov
clc
in
test
cmpsb
adc
adc
rcr
insl
jp
movsl
sbb
movsl
cld
push
popa
dec
inc
mov
imul
cwtl
xor
popa
loop
sbb
jp
xchg
dec
adc
aad
leave
cltd
mov
test
push
roll
invd
pop
in
fildll
push
inc
push
mov
inc
cld
add
in
or
pop
jl
adc
cli
xor
jg
shl
xorl
cs
fs
jbe
dec
shrb
push
xchg
mov
sbb
sub
jmp
data16
gs
dec
jb
mov
loope
mov
jns
cmpsl
sbb
jbe
dec
jmp
in
jo
adc
fstpt
pushf
in
roll
sbb
xchg
outsl
dec
popf
mov
sub
inc
pop
and
push
pop
and
fldt
aas
addl
sbb
push
nop
test
subb
dec
add
sbb
add
push
dec
xor
inc
cmp
xchg
adc
lods
dec
cli
dec
adc
in
jns
inc
pop
fs
or
shl
ud0
xor
dec
int
xor
mov
jg
sbb
scas
sub
mov
pop
and
and
xchg
mov
scas
and
leave
xchg
xchg
adc
xor
stc
mov
adc
outsl
add
insl
and
aas
mov
push
cmp
sub
mov
outsl
inc
scas
cwtl
daa
enter
cmp
imul
and
int
cmp
mov
pop
pop
stc
int3
mov
jp
cmp
inc
aad
and
cmc
test
jbe
push
sub
lea
inc
jno
ja
dec
fdivs
inc
iret
clc
sub
test
pushf
dec
nop
fbld
mov
mov
jo
ffree
int
cwtl
in
xlat
aam
push
inc
clc
sbb
stos
pusha
in
dec
fldl
adc
mov
and
sub
and
arpl
in
call
dec
jo
or
clc
outsl
lea
mov
shrb
imulb
stos
insb
mov
jle
dec
add
xor
addr16
jns
popa
mov
aad
mov
loope
lahf
mov
xlat
fucomp
int
mov
and
pop
fnstcw
cmp
mov
push
sbb
icebp
push
adc
push
lahf
dec
xchg
mov
popl
stos
jne
mov
lds
ss
sbb
xor
out
mov
pcmpgtw
and
ficoms
nop
sbb
cltd
push
inc
sbb
mov
test
vmread
in
sahf
loopne
and
mov
test
mov
in
jp
sub
shll
bound
inc
cmp
and
stc
cmp
cmc
dec
pop
xchg
lea
add
clc
dec
cwtl
mov
pop
sbb
pushf
xor
pop
sahf
jecxz
dec
jecxz
xor
stos
mov
mov
and
test
imul
imul
sub
push
ficomps
aam
insl
fs
loop
mov
mov
and
pop
or
or
inc
mov
mov
jge
std
add
ret
xchg
inc
sub
faddl
mov
mov
testb
popf
jnp
repz
or
lahf
loope
imul
mov
inc
repz
sub
jne
iret
and
xor
cld
push
out
adc
or
sub
add
jge
and
xchg
shl
icebp
sbb
in
insl
stc
and
mov
pop
cmp
sti
into
in
lret
push
mov
ljmp
jmp
sbb
jno
repz
sbb
out
jae
in
bound
fstps
lds
cmp
mov
aam
out
inc
fmuls
int
test
ret
movsl
test
mov
xchg
push
movsl
inc
sbb
mov
push
add
push
add
pop
xor
arpl
pop
push
cmpsb
fstpl
shl
mov
jge
jecxz
rcr
inc
xchg
test
jmp
mov
cmpl
ljmp
push
add
ret
sbbb
test
adc
xchg
cli
dec
jg
loope
jb
loopne
in
sbbl
call
addl
adc
leave
insl
or
mov
ret
je
or
or
jge
dec
imul
inc
es
pop
mov
incb
filds
mov
aaa
imul
insl
mov
fmuls
jno
movsl
repz
test
loopne
cmp
les
out
enter
les
scas
inc
setb
or
jge
scas
outsl
rolb
adc
mov
pop
arpl
add
shlb
scas
dec
testl
cld
dec
pop
fnstsw
in
out
push
fildll
movsb
push
jle
and
inc
push
xchg
leave
jnp
gs
jl
repz
mov
jbe
sbb
aad
push
sbb
and
into
inc
outsb
mov
std
jbe
aas
push
in
cmpsb
ds
test
dec
xor
enter
sbb
jns
scas
testl
inc
hlt
add
mov
scas
add
stc
mov
inc
enter
jge
cltd
jnp
sbb
std
popa
mov
mov
adc
adc
mov
aad
mov
movsl
repnz
in
push
sbb
dec
fwait
sbb
out
pop
lret
outsl
cmpsb
xchg
insb
mov
jge
sbb
pop
jge
nop
cmp
push
pop
push
stc
sbb
jnp
mov
and
xchg
mov
cmpsb
xor
leave
push
sbb
out
pop
lret
mov
loop
dec
adc
push
jae
insl
xor
std
int
movsl
cmpsl
mov
xor
imul
in
call
cmpsl
adc
or
and
or
das
xchg
xor
mov
in
lods
inc
cmpsl
cmp
xchg
inc
arpl
inc
in
imul
cwtl
popa
cli
shrl
mov
adc
int
test
mov
rcr
imul
gs
mov
mov
inc
aas
and
mov
or
outsl
fwait
adc
movsl
sub
adc
test
repnz
or
gs
clc
pop
jno
cwtl
dec
mov
sar
pop
arpl
js
dec
sbb
lea
push
adc
xchg
outsl
test
push
addr16
jno
adc
mov
fidivs
dec
sbbb
int3
test
mov
movsb
adc
int
stc
loope
imul
mov
repz
int
adc
pop
imul
adc
or
pop
movsl
mov
xchg
jns
pop
add
fstpl
sbb
mov
or
hlt
adc
nop
jnp
xchg
or
and
mov
mov
jmp
call
call
inc
cld
mov
repnz
or
pusha
int
imul
stos
adc
sbb
push
stos
in
js
sub
jnp
push
push
xlat
pusha
sbb
test
push
inc
cmp
and
sub
jns
in
out
mov
mov
sub
push
out
add
add
stc
adc
jmp
mov
or
mov
sbb
test
pushf
test
pop
or
cmp
mov
mov
cmp
push
adc
in
sti
in
lea
pop
sahf
push
or
adc
lods
popf
out
fdivs
add
rcr
lock
lods
pushf
fldl
in
jp
xor
mov
mov
sbb
clc
imul
lea
aad
cmc
imul
lret
pop
lret
cmp
pop
adc
ss
push
popa
aam
js
mov
imul
mov
mov
sar
push
les
pop
jbe
lods
mov
xchg
sbbl
jbe
dec
pop
xchg
pop
push
cs
repnz
dec
or
lea
cmp
sbb
mov
movsl
mov
lea
aad
mov
dec
add
jbe
pop
push
aas
pop
sub
jge
or
lds
int
xchg
cwtl
and
adc
cmpsl
lods
sbb
pop
int3
repz
es
test
dec
rcrl
add
mov
and
stos
xchg
push
mov
sbb
mov
jle
leave
push
dec
jge
std
js
movsl
pop
push
imul
inc
stc
or
fstpt
ljmp
movsl
stos
ss
sbb
movsl
es
fadd
xor
ds
int3
mov
inc
or
push
push
lcall
mov
enter
xor
mov
js
in
or
stc
int
mov
xor
test
or
jge
fwait
add
mov
movsl
add
dec
xor
xchg
shl
ror
or
add
xchg
sarl
popa
or
idivb
sbb
or
inc
ja
cwtl
jge
jg
jb
and
lds
cld
mov
aad
adc
ds
jno
call
pushf
xor
xchg
mov
mov
fldl
adc
movsl
or
lea
jmp
push
adc
push
sbb
jmp
add
pop
add
rcrb
dec
xchg
and
add
mov
cmp
lds
xchg
lahf
lcall
imul
sbb
cmp
pop
lock
cmp
rcl
cmp
mov
outsb
push
lret
mov
and
jg
mov
cmpsb
nop
insb
frstor
xor
sti
xchg
pop
lock
jne
and
in
push
in
mov
adc
xor
cmp
jne
jns
pop
xchg
insl
dec
adc
pop
push
xor
jecxz
daa
stos
popf
clc
popf
pop
inc
shll
pop
inc
cwtl
bound
inc
pusha
or
out
lahf
mov
xor
push
stc
xchg
stos
notl
pop
cmp
or
jg
jne
fcoml
fwait
jns
dec
cmp
jb
es
sbb
sbb
cmp
add
lea
jge
inc
mov
aas
xor
popa
cmp
cmp
pop
rolb
add
mov
or
mov
mov
sti
inc
and
inc
hlt
jae
dec
add
dec
dec
add
and
lcall
mov
mov
sub
scas
fcoms
and
pop
mov
lods
in
mov
push
mov
test
cwtl
ss
dec
mov
jp
cwtl
ds
loopne
sahf
dec
fisttps
bound
into
adc
sub
dec
push
shll
movsl
mov
dec
rcrb
movb
test
xchg
jbe
mov
out
jmp
jno
js
lea
or
sub
mov
mov
dec
mov
lea
iret
shll
xorl
adc
jne
repz
pushf
add
jne
add
daa
das
xlat
rorb
jo
add
mov
jl
pop
in
pop
test
repz
adc
or
adc
or
frstor
jnp
fwait
pop
dec
pop
pop
sub
sub
flds
jno
add
dec
xor
mov
bound
lahf
daa
or
or
popa
jne
jp
sbb
daa
xchg
aas
cmp
lret
das
sbb
sbb
mov
lcall
imul
inc
mov
cmp
add
lds
outsb
sbb
je
mov
xlat
push
outsb
push
jno
jle
or
shll
aas
fsubrp
sbb
dec
jecxz
test
cltd
jns
mov
mov
and
outsb
insb
xor
rorb
sub
cmpb
cmp
add
inc
cmc
dec
cld
repz
mov
inc
lock
inc
adc
inc
pop
insl
adc
pusha
test
lods
add
mov
stc
or
shr
cmove
adc
sbb
push
sbbb
or
daa
mov
js
sbb
imul
xchg
das
cltd
cs
xor
rorb
dec
in
mov
mov
outsl
mov
push
pop
jp
dec
inc
cmp
mov
icebp
xchg
aam
xlat
mov
jno
paddusb
or
xchg
popa
push
dec
shrb
and
adc
xchg
popa
sbb
jnp
jge
mov
imul
lea
cltd
addr16
loope
mov
iret
sti
push
xchg
aam
stc
sbb
jne
jno
add
sbb
xor
mov
shl
sbb
orb
pop
imul
xor
add
dec
jmp
icebp
xchg
push
lahf
pop
popf
scas
add
mov
add
xor
sbb
and
sti
jp
or
add
fistpl
inc
int
dec
movsl
dec
and
sbb
xchg
in
dec
unpckhps
inc
mov
add
gs
xor
push
or
fistpll
nop
lret
xchg
xor
or
jo
gs
push
add
push
mov
jp
mov
test
int
lea
hlt
dec
xchg
dec
jno
cmc
popw
inc
and
mov
mov
push
repz
add
sahf
mov
pop
or
sbb
repz
loope
pushf
lock
cmc
mov
fiadds
jge
jecxz
xor
add
mov
and
jge
fnstcw
inc
clc
jns
gs
sbb
lock
dec
in
insl
adc
push
and
xchg
jge
add
lea
jo
adc
jns,pn
rolb
dec
sbb
mov
push
cld
xor
divb
dec
nop
jge
popa
mov
cmp
sub
int
loope
test
mov
out
lahf
xor
dec
and
and
fstpt
test
xor
pop
sbb
dec
jo
pop
pusha
xchg
call
add
mov
xor
shrl
fmul
aaa
mov
in
sub
in
gs
cmc
int
pop
sbb
aad
and
daa
sbb
imul
adc
cli
lds
pop
xor
sbb
ds
in
pusha
leave
sbb
repnz
sti
add
sub
sbb
dec
xor
aad
ret
not
stos
data16
popa
pop
aad
dec
adc
mov
mov
fcoml
lods
push
out
push
iret
mov
sub
stos
loop
push
test
popf
push
stos
xchg
addr16
xor
lcall
or
daa
xor
lock
xchg
push
xor
mov
int
mov
push
xor
inc
and
mov
fmull
cmc
rorb
jno
lcall
adc
enter
sub
mov
mov
mov
jecxz
pushf
and
cs
push
mov
ljmp
jno
and
cmp
jge
add
fisttpll
inc
into
cmpsb
add
pop
adc
jg
mov
add
nop
jge
pop
push
jae
fisubs
adcl
mov
or
pop
arpl
scas
xlat
add
test
cmp
sbb
dec
and
out
cmp
jle
ficoms
mov
mov
sbb
mov
mov
mov
push
dec
inc
mov
xchg
adc
add
rorl
adc
jg
sbb
call
sub
xor
xor
xlat
out
mov
adc
jp
leave
popf
repz
inc
cmp
stc
xorb
lock
pcmpgtb
dec
popf
mov
clc
jb
lods
push
xor
xor
xor
xor
sub
pushf
jl
pop
push
testl
sub
mov
jge
adc
pop
jno
mov
mov
pop
pop
rcrb
leave
add
cmc
popf
or
aad
xchg
popf
jge
adc
mov
or
gs
mov
movsl
push
mov
mov
shlb
xor
cltd
mov
call
scas
ds
push
enter
push
inc
out
jne
mov
mov
rep
pop
inc
ret
add
or
adc
inc
cmp
out
insb
add
rolb
sub
ss
fnstcw
inc
shlb
shll
cli
jnp
scas
push
outsl
cmp
push
push
pop
xor
in
cld
jge
outsb
pop
adc
jne
mov
mov
arpl
bound
mov
int
push
insl
pop
ss
mov
cmp
fdivrl
jecxz
popa
pop
jb
mov
pushf
mov
lods
inc
insl
xchg
inc
jo
pop
sbb
stos
add
mov
cs
outsl
jb
lds
pop
les
rorl
push
dec
call
jbe
mov
sbb
lcall
or
out
push
imul
adc
xchg
jnp
mov
inc
loop
sbb
sub
xchg
jmp
pop
mov
fs
push
push
cwtl
xchg
dec
sub
shlb
pop
js
or
adc
vpunpckldq
imul
pop
pop
add
pushf
inc
icebp
dec
out
xor
push
in
loopne
pop
sbb
or
cmpb
dec
in
lahf
jo
sbb
out
dec
inc
lea
adc
sbb
or
inc
cmp
jp
rcll
nop
or
xor
repnz
ficoml
push
nop
imul
call
test
scas
and
inc
add
add
push
dec
inc
push
aad
push
xchg
scas
daa
xchg
inc
shll
mov
lcall
dec
fiaddl
js
add
pop
mov
pop
pop
aam
adc
xchg
or
adcb
data16
paddusw
cld
and
int
xor
and
add
dec
jne
imul
repz
mov
std
or
pop
mov
sub
cmp
lock
pop
test
lcall
out
lods
mov
or
push
fldcw
adc
or
imul
shll
out
lret
sub
xor
enter
lret
lahf
and
shll
dec
int
push
insl
dec
add
or
psrad
out
pop
dec
pop
xor
lcall
mov
stos
psubq
gs
push
pop
or
jns
dec
repnz
xchg
mov
in
add
add
aas
or
stos
dec
rolb
push
adc
lods
bound
dec
jnp
dec
push
arpl
adc
pop
outsl
cmp
jb
in
leave
or
sub
cli
adc
sahf
xchg
cltd
adc
gs
leave
pop
or
cmpsl
mov
or
fisubs
jmp
rcrl
xchg
icebp
push
in
push
or
shrl
int
into
fcomps
mov
test
int
sarb
jno
mov
add
jg
std
add
shlb
push
or
pop
cmpsl
adc
mov
test
cmp
xor
pop
ret
add
mov
sbb
andl
lcall
sbb
cmp
sbb
mov
adc
loop
fdivp
dec
sub
scas
dec
leave
sbb
mov
leave
push
scas
or
add
add
jae
mov
loopne
jnp
sbb
cltd
xor
pushf
mov
xor
and
cmpsl
cld
popa
mov
lahf
lret
or
jne
jnp
adc
mov
dec
dec
adc
or
outsb
cs
add
dec
or
std
movsw
push
adc
es
push
loope
cmp
cmp
jge
pop
nop
pusha
lods
fsubrs
or
das
sbb
setnp
pop
pop
stos
fmull
xchg
movsb
push
dec
mov
xor
jmp
in
aad
sti
add
push
sub
push
mov
pusha
or
out
int
push
jl
out
ror
notl
lods
cwtl
mov
dec
and
xor
sbbb
lcall
popa
pop
addb
pop
mov
mov
mov
outsb
bound
inc
cmpsl
mov
xorb
add
sub
adc
sbb
adc
loope
xor
les
push
xor
mov
mov
cmp
ret
sub
adc
push
lcall
pop
add
sbb
loope
push
loope
push
pop
clc
adc
and
sub
adc
sbb
mov
jns
jmp
ficompl
xor
mov
pop
xchg
loope
sbb
aad
push
out
call
cld
sbb
add
int3
pop
mov
push
or
imul
add
xchg
sbb
test
sbb
loope
enter
insl
dec
addl
xorb
mov
shrl
push
inc
testl
add
inc
pop
mov
push
dec
add
sub
add
dec
cmp
notl
pop
jp
jae
movsl
jno
jecxz
dec
cld
adc
xchg
inc
or
lods
cld
jns
jg
jno
jp
sub
dec
dec
jp
aad
dec
push
mov
pop
jp
jb
leave
jp
addr16
mov
popa
int3
sub
out
mov
push
mov
xchg
mov
sub
lret
ja
pop
test
xor
imul
aaa
fisubrs
cmc
cmpsb
icebp
loopne
sti
fadds
and
jge
adc
or
sub
hlt
jns
mov
jp
or
mov
push
mov
jo
push
dec
and
xchg
mov
add
ja
popa
lea
mul
inc
push
out
inc
sbb
fstpt
popf
popf
mov
sub
lea
test
mov
or
jb
scas
sub
mov
pop
aas
adc
jno
setno
cmpb
call
sbb
insl
sti
add
icebp
inc
mov
je
and
jnp
jl
xor
adc
out
cmc
sbb
cmc
sbb
and
sarb
loopne
xlat
mov
mov
xor
cld
pop
jno
jno
jbe
fisubrs
or
sbb
jecxz
imul
out
pop
mov
sub
add
adc
sub
jge
add
dec
cmp
mov
cmp
add
sub
loopne
xor
cli
adc
jnp
jns
lret
test
mov
xor
adc
or
int
movsl
int
fdivl
lcall
xchg
dec
pop
jae
lcall
mov
push
loop
xchg
inc
jge
cmc
stos
or
or
scas
adc
stos
outsl
lock
or
jge
jge
cltd
jnp
imul
xchg
nop
sbb
test
push
adc
mov
inc
les
in
loopne
jmp
jnp
movups
sbb
dec
lods
cmp
add
or
insl
add
shlb
lcall
add
dec
sbb
pop
adc
add
popf
sbb
dec
xchg
arpl
jg
aad
in
sbb
xor
in
lods
adc
inc
and
movsl
mov
pop
aaa
int
mov
jge
xor
dec
std
arpl
or
jae
iret
adc
ja
popl
add
fadds
xchg
add
cmp
sbb
lods
xchg
xor
aad
lds
jg
insl
xor
enter
jnp
leave
scas
jge
dec
iret
inc
lea
inc
inc
outsl
imul
sti
adc
fmuls
rcrb
xor
jmp
test
rorl
test
pop
xchg
popa
jge
or
test
xor
add
pop
stc
ret
or
std
jbe
lcall
fisttpl
je
nop
imul
clc
sbb
js
mov
and
xor
mov
inc
and
jne
in
xor
inc
inc
bnd
and
add
incl
inc
popf
and
sub
xor
adc
jne
xchg
add
add
fdivrs
ret
je
xchg
call
outsl
push
dec
xchg
daa
add
test
mov
call
icebp
and
test
insl
or
inc
mov
outsl
push
or
and
mov
stos
mov
sbbb
and
dec
jo
popf
mov
call
mov
fsubp
popf
jnp
popf
xchg
and
and
mov
jo
insl
sub
and
jnp
dec
insl
hlt
dec
icebp
push
jle
nop
fwait
sub
sarl
insl
sub
in
int
adc
imul
xor
jmp
pop
nop
xor
mov
sub
sub
sbb
shrb
out
jnp
andb
popa
sbbl
or
xchg
xor
mov
mov
cmp
orl
or
mov
imul
pop
je
mov
cmp
outsb
rcll
dec
ret
cmp
sbb
mov
dec
push
or
imul
je
pop
adc
out
adc
inc
daa
push
push
insl
add
jmp
dec
mov
sbb
add
je
dec
loopne
and
adc
int
xchg
icebp
or
jnp
xchg
shrl
aad
push
je
mov
gs
mov
jne
adc
jnp
cltd
inc
mov
or
subb
popf
inc
inc
inc
pop
fs
xchg
mov
xchg
int
aad
das
add
push
popf
ja
inc
pop
scas
xor
fwait
sub
aad
xchg
inc
mov
rcrb
test
out
mov
fnsave
insl
les
pop
inc
dec
pavgw
mov
push
adc
bound
jb
inc
repnz
push
push
sahf
jge
pop
subl
mov
cmpb
fdivs
push
mov
or
cmc
call
cs
cmc
mov
sbb
mov
int
mov
dec
insl
out
orb
in
xchg
insl
push
inc
lahf
xor
inc
movsl
std
movsl
xchg
mov
sahf
push
int
xor
inc
popf
push
sub
out
inc
das
lcall
cmp
ds
sbb
filds
or
sbb
lds
jmp
cmp
je
pop
or
dec
dec
and
and
or
adc
adc
sbb
stos
xchg
or
push
fildl
and
ljmp
and
orl
add
call
cltd
ficoms
call
dec
call
push
mov
pop
rclb
cmp
in
mov
mov
imul
ljmp
mov
push
pop
call
push
clc
add
or
outsl
dec
cltd
rorl
mov
jl
pop
cli
pop
push
pop
nop
sbb
sbb
rdtsc
imul
and
add
pop
lds
cltd
jecxz
sub
mov
sub
push
dec
sbb
dec
fstpt
test
mov
insb
push
jecxz
jns
call
hlt
xchg
sbb
adc
adc
adc
sub
add
ret
es
sbb
test
es
shrl
ss
adc
in
lds
push
cmpsb
out
mov
scas
cmpsl
dec
cmp
data16
imul
xchg
mov
jmp
adc
xchg
mov
adc
test
inc
pop
sbb
sbb
out
lea
je
int
and
stos
repz
and
imul
test
nop
jge
or
adc
pop
sbb
mov
or
sbb
rcll
outsl
inc
inc
icebp
sub
jecxz
push
popf
lods
push
lret
mov
repz
das
xor
add
cld
out
and
repnz
dec
add
inc
add
imul
fisttpl
xorb
pusha
cmp
lods
xor
cmp
outsl
push
lock
mov
mov
pop
test
cmpsb
ror
or
popf
es
pop
nop
adc
dec
cltd
insb
mov
insl
mov
cs
nop
imul
leave
into
clc
cld
leave
test
mov
out
and
mov
mov
inc
popf
divl
clc
push
divl
sti
stos
nop
push
add
imul
std
lods
mov
pushf
popf
loope
aad
mov
mov
add
add
repnz
das
mov
loope
sbb
out
movsl
cmp
mov
jnp
mov
shrb
mov
insb
mov
pop
sbb
inc
fwait
out
sub
sahf
mov
add
jo
jo
sti
insl
cli
stos
push
pop
stos
adc
jnp
int
xchg
dec
inc
xor
mov
ss
or
or
dec
gs
int
jg
pop
jne
sbb
and
pop
sub
jne
es
aad
test
imul
lret
jmp
cmp
adc
mov
btc
lds
lret
hlt
jl
jge
push
jo
out
into
es
mov
sub
pop
movsl
dec
dec
jecxz
jl
mov
and
xchg
inc
jg
mov
das
sarb
dec
shll
jmp
or
icebp
mov
or
fwait
add
fdivl
and
xchg
sbb
test
mov
or
mov
sub
add
mov
ljmp
cmp
and
outsb
cld
lods
push
mov
fwait
pop
leave
add
and
negl
test
sti
andb
loope
ss
sti
cmpsb
pop
sub
mov
push
xchg
movsl
push
sbb
lret
ds
xor
inc
test
in
or
shlb
xor
and
or
int3
sub
stos
adc
pop
cmpsl
shlb
pop
jge
jge
cmp
leave
nop
xchg
jge
dec
mov
jae
jns
mov
dec
sti
test
xor
insb
mov
lods
cmp
push
ret
dec
add
and
in
jnp
push
ljmp
lock
adc
ja
insl
mov
pop
jge
jmp
insl
sbbb
enter
rcrb
xchg
push
stos
dec
sbb
or
sarl
aas
call
mov
in
ss
sbb
movsb
pop
jnp
mov
or
cwtl
mov
or
or
in
daa
push
int
int3
mov
int
ss
push
arpl
xchg
movsl
sbbb
int3
aas
mov
imul
pop
cmp
loop
out
push
into
lods
xchg
push
out
dec
inc
cmp
lods
mov
test
lods
cli
add
lds
inc
mov
in
mov
push
xchg
mov
rcll
pop
rolb
daa
rclb
jge
imul
lods
int3
cmpsl
aam
and
add
fs
jnp
or
pop
mov
lods
loope
cwtl
mov
ja
sbb
arpl
cmpsl
add
jbe
sbb
int
lods
std
pop
decl
xor
leave
jnp
or
outsl
and
push
xchg
jo
mov
adc
and
sbb
jecxz
pop
aas
js
add
fwait
xor
shlb
push
sbb
dec
fisubrs
mov
fcomp
add
pop
daa
jno
jmp
add
fidivrs
and
jp
rorb
fstpl
orb
xor
fdivl
dec
scas
roll
jecxz
stos
mov
xchg
aad
push
push
es
stc
stc
mov
imul
add
test
or
mov
loop
cmc
xchg
js
lcall
out
loopne
clc
stos
loope
out
xchg
jne
adc
sub
xor
adc
mov
lods
mov
pop
jne
pop
xchg
add
jg
call
aaa
popa
or
cwtl
mov
cli
sub
sub
mov
push
inc
out
jae
lahf
enter
jne
js
sub
xchg
pcmpeqd
lock
mov
mov
add
and
mov
int3
or
lcall
pushf
sti
xchg
mov
inc
mov
xchg
mov
sub
jnp
mov
clc
gs
add
fbstp
cmp
dec
jne
aas
int
in
dec
xor
test
std
and
test
sub
sbb
pop
es
xchg
hlt
test
fsubrl
roll
jbe
mov
addb
pop
mov
adc
int
fstp
xchg
pop
and
iret
test
mov
pop
insl
or
inc
imul
jl
fs
push
outsb
ret
scas
xchg
mov
pop
sub
fldt
testb
nop
pop
out
cmc
insl
mov
sub
cmpb
mov
jge
pop
or
pop
fldt
xchg
sbb
out
cmpsl
pop
aad
mov
cmpsl
cld
mov
adc
std
dec
jge
add
inc
outsb
popa
or
bound
insl
mov
mov
or
addr16
or
or
xchg
loope
mov
fists
mov
adc
enter
rcll
repz
mov
pop
add
cmp
mov
leave
sbb
loop
je
fcomip
iret
cmpb
loop
dec
pop
lds
negb
mov
push
shrl
pop
out
adc
and
mov
insb
push
test
inc
imul
cld
imul
mov
nop
add
in
jecxz
aas
dec
outsl
dec
mov
inc
fists
pop
addr16
leave
rolb
inc
jbe
mov
cmpsl
cmpsl
and
push
sti
sbb
imul
gs
inc
adc
pop
mov
add
pop
sub
push
adc
dec
pop
add
dec
pop
or
fwait
in
pop
icebp
jge
test
cltd
leave
jae
mov
sub
test
movsl
sbb
daa
add
dec
seto
xchg
lods
mov
adc
xor
mov
sub
sub
mov
movsl
sub
mov
mov
xchg
jo
fdivr
xchg
fcomp
ret
mov
imul
sahf
repnz
jne
inc
test
jne
mov
mov
lea
mov
push
imul
add
adc
int
test
cltd
int
roll
aaa
jae
adc
pop
and
out
pop
incl
std
push
rcll
adc
push
fistps
push
jne
mov
mov
cmp
pop
ds
jno
sbb
sbb
mov
pop
andps
outsl
lods
add
test
xor
add
add
popl
dec
pop
cmp
pop
dec
icebp
popa
xchg
mov
jo
das
in
imul
jge
adc
mov
icebp
repz
pop
pop
test
mov
pop
lds
test
addr16
jp
or
loope
xor
mov
xor
push
dec
pusha
inc
aad
aad
arpl
sbb
adc
out
dec
mov
rcll
sub
adc
pop
jg
hlt
push
xor
jg
mov
mov
dec
jge
lods
add
rorb
mov
dec
add
fidivl
pushf
xor
rclb
add
test
xchg
dec
or
jge
jnp
pop
lods
sub
sub
sbb
fistpll
mov
mov
jge
cli
clc
xchg
sbb
sub
mov
add
imul
loope
in
push
neg
jae
ss
popa
add
jo
mov
imul
mov
ss
jge
jnp
out
ss
addl
xor
mov
cs
mov
ds
push
lock
pop
test
or
jmp
shll
dec
mov
mov
inc
adc
stos
push
mov
pop
xor
sbb
push
sbb
nop
mov
out
fsubrs
loopne
xchg
incl
fwait
sti
imul
int
jge
in
dec
mov
mov
loopne
inc
nop
mov
xor
outsl
sbb
pop
jo
nop
xchg
dec
in
enter
lods
mov
in
insl
mov
scas
bound
add
bound
jecxz
in
mov
mov
push
push
pop
dec
mov
mov
ds
popaw
sbb
push
fs
lahf
adc
scas
pop
sbb
test
sahf
aad
xor
jnp
adc
jnp
mov
jb
in
in
jno
data16
aad
xchg
inc
sbb
add
pop
jmp
outsb
movsl
nop
enter
fldenv
pop
in
fistps
push
pop
enter
and
das
sub
clc
cmp
or
pop
int
push
das
lea
jge
add
cmp
imul
std
ss
xor
cmp
pusha
pop
es
jge
add
push
lahf
es
lret
inc
stc
or
in
fsubl
icebp
enter
cltd
cmp
jge
gs
testb
inc
dec
or
sbb
pop
ljmp
imul
xor
repnz
imul
aam
pop
add
and
insl
int
movsl
or
inc
lret
aam
cmovl
movsb
out
sbb
jmp
jns
sbb
insl
sub
lret
dec
subl
inc
fdivrl
icebp
dec
mov
jmp
lods
subl
mov
sub
cli
xchg
mov
cmp
mov
cmp
xor
out
mov
add
mov
mov
mov
jns
xor
xchg
mov
out
mov
mov
adc
daa
mov
lds
popa
xchg
add
add
popa
sbb
cmp
and
inc
add
scas
mov
divl
decl
cmc
out
popa
push
jg
ret
cmp
fwait
mov
fnstcw
out
in
cli
sub
mov
js
inc
out
jnp
aam
aam
lcall
ja
pop
dec
inc
xlat
pop
jl
mov
inc
mov
pop
dec
push
sub
int3
imul
sbb
mov
sti
push
adc
jo
movb
mov
scas
jno
ja
fiadds
leave
or
pop
add
cltd
push
mov
sbb
insl
xchg
bound
sbb
sbb
imul
pop
jmp
jl
imul
adc
lds
popf
inc
push
lea
dec
pushf
cmpl
xor
inc
repnz
aas
scas
inc
adc
imull
sbb
lahf
popa
loop
mov
mov
lds
cltd
mov
adc
push
jl
mov
xlat
mov
cmp
sbb
jmp
push
jae
data16
push
inc
add
sub
pop
js
sbb
popa
scas
and
lea
leave
sub
mov
imul
imul
cmp
repz
decl
cmp
pop
and
jnp
aaa
push
sbb
mov
rcl
pop
or
cs
push
ja
dec
test
popf
jno
pop
cs
add
inc
cmp
adc
dec
jno
push
aad
add
xor
das
cmp
sarb
comiss
or
add
insl
add
push
movsb
in
add
sbb
cmp
sbb
mov
test
std
add
pop
dec
popf
mov
sbb
test
ljmp
pop
std
sbb
sbb
cmp
add
clc
les
xchg
inc
aam
data16
lret
mov
in
mov
lcall
out
dec
adc
movsl
push
cmp
sbb
dec
mov
mov
xor
adc
add
dec
lea
xor
shlb
loopne
dec
add
mov
mov
push
leave
out
call
and
sub
mov
push
pop
pop
cmp
data16
dec
imul
sub
loope
js
and
and
mov
mov
cli
int3
sbb
jp
add
mov
adc
popa
cmp
sbb
or
xchg
inc
and
packssdw
push
faddl
adc
imul
xchg
jle
add
inc
pop
ficompl
inc
mov
jnp
jge
sub
adc
insl
stc
add
lea
outsb
ja
pop
dec
pop
or
sti
mov
inc
call
inc
or
decl
jno
adc
sbb
push
sub
jno
std
loope
in
sbb
and
sub
add
xor
imul
sahf
or
pop
push
or
outsb
mov
mov
and
xchg
xor
xor
movsb
lahf
in
push
les
fstl
das
and
xchg
adc
imul
movsl
ja
mov
hlt
cli
xchg
pop
jmp
push
xchg
cli
jecxz
outsb
push
in
test
jnp
mov
mov
out
cli
pop
jae
in
sahf
or
fs
ljmp
xor
or
cmpsb
or
cmp
aas
mov
cmp
in
xor
or
in
sub
sub
mov
dec
mov
jge
inc
dec
rolb
movsb
mov
out
sbb
jl
mov
idivl
push
add
or
lds
insb
cmp
pop
pop
ljmp
ds
in
rep
das
mov
jbe
in
xchg
lret
lea
in
sbb
lea
add
and
push
mov
int3
jae
insl
cwtl
test
out
or
push
test
and
mov
and
cltd
mov
cmpsb
pop
cltd
dec
inc
mov
insl
xorl
cld
cmp
mov
xorb
mov
mov
adc
aam
fwait
lods
sbb
sbb
or
jp
jecxz
cmp
psubd
pop
or
imul
pop
filds
icebp
dec
or
cmpb
insl
lret
fildll
pop
ffreep
out
mov
jge
mov
mov
repnz
fsts
and
or
pop
adc
mov
jmp
or
pop
js
xor
movsl
pcmpeqw
sub
cmp
push
mov
xchg
sbb
cld
add
cmc
sbb
scas
push
pop
push
push
jmp
adc
xchg
adc
or
bound
aad
sbb
jge
jno
pop
ror
jge
cmpsl
pusha
jg
jns
cmpsb
xor
dec
mov
pusha
or
ud2
or
out
in
xchg
aas
mov
adc
nopl
and
fidivrs
mov
int
sub
dec
jne
cld
fwait
mov
jne
cmp
pop
pop
inc
into
aam
fwait
orl
or
pop
movzwl
add
sbb
dec
int
xor
pop
push
daa
inc
add
lea
jbe
shl
std
push
mov
enter
jne
or
sbb
addr16
ret
inc
dec
sbb
add
lock
jne
dec
add
fisubl
lret
lds
add
scas
imul
push
jne
jo
scas
dec
sbb
mov
arpl
imul
stos
pusha
pop
stos
or
les
pop
mov
jmp
aas
or
push
pushl
pop
dec
add
jmp
stc
mov
pop
sub
pop
add
sbb
ficoml
lds
ja
in
and
sub
lahf
jae
mov
pop
jge
mov
imul
fsubrs
jecxz
out
push
push
mov
pop
insl
sub
lcall
push
aas
addl
inc
subl
iret
les
outsb
push
xchg
imul
mov
jo
xor
dec
leave
test
shlb
and
insl
mov
aam
shll
push
scas
cmp
movsl
mov
pop
jge
add
pop
mov
and
xchg
insl
mov
lcall
ficompl
pop
dec
mov
mov
fnstcw
inc
in
shlb
lahf
loope
xor
add
pop
scas
jbe
ds
stos
js
jae
call
insl
testb
xchg
enter
jp
int
test
fcoms
cld
ja
add
xchg
fldl
xchg
int3
pop
jbe
ljmp
clc
xchg
adc
inc
subl
pusha
xor
movsl
lods
cli
lds
and
dec
imul
mov
movsl
add
imul
xor
stc
in
js
jbe
scas
mov
xchg
pop
cld
rorb
inc
sub
fbstp
stos
fwait
inc
das
xor
sarl
or
jg
mov
scas
xchg
mov
xchg
fmuls
andl
cmp
lea
mov
inc
dec
test
daa
popf
add
mov
cmp
mov
pop
xor
push
addl
popf
cwtl
adc
sbb
stos
popf
cmpb
shrb
adc
xlat
insl
push
sub
lds
nop
pop
test
cmpsl
in
inc
push
dec
xor
ljmp
int
mul
cmc
and
cmp
popf
sbb
pop
rorb
leave
add
xor
mov
adc
add
fstps
or
mov
in
lea
test
lds
cmpl
cmpsl
outsb
in
leave
pop
mov
pop
mov
sbb
push
mov
dec
jnp
cmp
lret
aad
add
cmp
sbb
inc
aad
mov
and
aas
jo
shlb
dec
out
daa
jmp
aas
rcll
jne
imul
pop
ljmp
jne
stos
ljmp
adc
sub
jo
xor
lods
lea
add
xchg
test
idivb
jae
scas
das
adc
imul
scas
inc
add
xchg
ljmp
inc
xor
sbb
mov
mov
jne
in
jge
add
jle
xor
lds
dec
in
jno
dec
xchg
push
jno
hlt
cmp
pop
ret
lea
cli
add
sbb
je
dec
lds
xchg
out
dec
cld
mov
and
cs
fmul
lds
das
push
dec
lahf
imul
add
loope
out
inc
sub
jno
pop
xor
cltd
sbb
stc
and
jne
mov
dec
das
xchg
dec
lods
dec
aam
mov
mov
aad
fadds
fdivs
adc
addr16
sbb
movsl
leave
add
jmp
enter
testb
sbb
push
jge
rorb
add
sbb
pop
pop
push
xchg
sbb
mov
inc
mov
sbb
pop
lods
popf
xor
mov
mov
xchg
mov
push
xor
out
rolb
and
repz
jb
xchg
inc
loop
int3
add
out
test
adc
push
mov
aam
jne
jne
sub
sbb
pop
mov
imul
jmp
cli
or
mov
call
inc
xchg
ss
pushf
mov
lods
je
mov
jne
mov
mov
inc
lods
sbb
mov
add
daa
pop
pushf
popa
imul
dec
lret
or
mov
or
mov
das
fucom
jmp
add
ljmp
enter
and
cltd
rclb
inc
mov
cmp
cmpsb
lods
orl
cmc
adc
jb
pop
add
xlat
add
dec
dec
int
dec
adc
popf
sbb
test
cwtl
lret
adc
int
dec
cltd
inc
xor
out
xchg
add
mov
incl
dec
push
adc
out
cmp
mov
cwtl
ljmp
xor
sbb
scas
es
gs
lret
bound
adc
jo
daa
adc
dec
callw
add
int3
sub
and
inc
mov
adc
jbe
jo
dec
divb
push
nop
leave
call
pop
mov
push
dec
test
sti
test
popf
icebp
xor
xor
mov
xor
sub
andl
pop
adc
nop
fwait
test
test
push
divl
pop
movsb
or
adc
rcl
ds
enter
cmp
dec
je
int
enter
sbb
and
dec
push
int
dec
adc
xor
adc
insl
add
jnp
dec
jg
xor
or
mov
movsl
mov
push
or
adc
stos
popa
enter
daa
or
fwait
incl
stos
mov
mov
jmp
inc
or
inc
mov
outsl
and
loopne
scas
fmull
cmp
fwait
mov
dec
pop
or
aas
push
adc
adc
mov
xor
jg
ud2
adc
mov
inc
adc
jo
packssdw
adc
lods
cmp
scas
mov
dec
adc
mov
aaa
mov
push
mov
adc
add
adc
sub
int
dec
in
add
jnp
js
cmpsb
shll
push
push
lods
pop
dec
ja
add
lods
or
imul
mov
popa
sbb
movsl
int3
adc
sbb
xor
push
jnp
pop
cmp
sub
add
mov
or
and
xchg
mov
mov
push
shrb
mov
mov
cld
jnp
addr16
and
jbe
clc
nop
jge
add
sub
jge
and
andl
add
int
pop
mov
sbb
nop
cld
jg
cmp
xorb
mov
lods
cs
pop
xchg
pop
sbb
mov
popa
das
test
mov
sbb
xchg
popa
mov
or
sahf
popa
das
mov
test
sub
iret
pop
pop
dec
in
push
adc
dec
xchg
mov
push
aad
in
mov
repz
cmp
lock
aad
popa
lds
inc
cld
inc
push
int
sub
outsl
loope
fbstp
push
mov
mov
mov
bound
clc
shrb
cmp
lods
sbb
add
lea
xor
ljmp
add
pop
and
add
cmpsb
adc
js
subps
inc
lahf
and
dec
arpl
movsl
orb
pop
das
push
jno
push
and
sahf
les
fcoms
imul
arpl
lods
lcall
fs
add
jo
pop
int3
test
sub
xlat
mov
inc
lods
test
push
lahf
repz
add
xchg
std
shl
lds
dec
adc
add
cmp
enter
imul
add
push
jnp
call
push
jg
enter
lods
cmpsl
ljmp
pop
fbstp
cmove
dec
cltd
sub
adc
pop
lret
sub
das
push
adcb
inc
int
dec
icebp
or
sub
sub
addb
icebp
and
arpl
orb
add
pop
sbb
shl
jle
adc
lds
mov
push
push
pop
repnz
mov
ja
or
cmp
je
hlt
xchg
pusha
fldt
les
add
repz
mov
sbb
sbbl
xchg
push
lea
enter
fstpt
outsb
xchg
int
inc
and
orl
fs
pop
jbe
dec
popa
outsl
fs
clc
loop
sarl
cmpsb
dec
lods
outsl
mov
jne
jge
adc
lock
cmpsl
mov
xchg
fucomp
out
shl
pop
inc
xor
shrb
dec
xchg
jne
or
pop
xlat
sbb
or
xor
pop
add
pusha
pop
mov
pop
pop
stos
popa
int
mov
mov
adc
ds
mov
insl
push
mov
jae
sbb
inc
mov
mov
into
pop
mov
mov
imul
pop
lods
rcr
push
pop
orb
pop
leave
fdivl
jb
ret
aas
jae
das
pop
out
sarl
fwait
xor
jno
pop
mulb
push
std
xorl
xchg
and
dec
mov
mov
imul
cmpsl
sbb
jae
mov
bound
popl
sub
xor
sbb
andb
mov
mov
lea
mov
or
rcll
adc
lds
or
stos
out
lea
lret
scas
jne
pop
inc
imul
movl
push
push
sub
mov
adc
pop
or
outsl
in
cmp
test
push
in
fbld
test
xchg
dec
imul
jmp
jae
xchg
iret
dec
imul
dec
lahf
clc
je
jno
jmp
mov
xor
and
xor
fwait
sub
subb
jle
pop
mul
xor
les
test
paddusw
fstpt
fstpl
and
mov
sbb
or
mov
add
mov
jae
add
out
dec
ss
int
lea
sbb
std
daa
nop
loopne
call
mov
inc
nop
sbb
mov
inc
lds
rorb
xchg
dec
lock
std
shll
aad
pop
add
sub
jae,pn
mov
push
nop
dec
jge
jp
ss
in
sbb
cmpsb
dec
dec
mov
dec
xor
adc
sbb
inc
std
adc
sti
sbb
aam
std
jbe
int
jl
xlat
jno
xor
jecxz
and
mov
mov
aam
dec
mov
sbb
rorl
sbb
inc
adc
mov
mov
in
or
mov
adc
out
sahf
mov
fistpl
popa
mov
roll
insl
fwait
add
movsb
hlt
pop
push
call
fisttps
test
imul
jns
mov
xor
jo
add
push
dec
or
scas
out
push
sbb
mov
dec
mov
pop
pop
bound
dec
lcall
aam
lds
mov
adc
push
mov
mov
and
fcomip
add
mov
mov
adc
xor
xor
pushf
or
xorl
mov
int
and
sub
sbb
inc
aad
jge
adc
and
sbb
lods
fidivl
push
add
dec
aad
inc
xor
icebp
sbb
xor
lea
jge
or
push
stos
sbb
push
sbb
arpl
jno
mov
popa
mul
idivb
pop
inc
push
jecxz
adc
or
mov
arpl
jns
sbb
repnz
ret
cmp
inc
cmp
fistpl
and
std
pop
orl
pop
sbbl
popf
fstps
add
or
sti
dec
fs
inc
adc
insl
inc
xchg
add
outsl
push
sbb
cmc
jno
les
push
mov
pop
sti
pop
loopne
outsb
push
inc
xchg
sbb
adc
insb
sti
xchg
andl
push
gs
add
rcll
fldl
jno
sub
dec
inc
into
adc
cmp
divb
cmpl
insl
pop
in
gs
ljmp
cmpsb
out
jge
xor
int
jo
sub
pop
arpl
inc
add
aad
pop
orb
nop
add
xor
mov
push
jno
sub
sub
add
sbb
pop
lret
adc
jge
pushl
and
push
cli
cmp
dec
mov
dec
mov
xorb
mov
fdivrl
mov
idivl
inc
sarl
push
xor
daa
addr16
addr16
mov
shr
pop
push
repz
leave
in
xchg
sbb
push
push
insb
mov
mov
in
call
inc
jp
fs
xchg
push
arpl
ror
orb
adc
pop
cs
or
outsl
jno
push
and
in
je
add
or
or
push
icebp
mov
jecxz
clc
ss
aas
push
and
stos
xchg
adc
arpl
insb
push
push
and
ss
and
push
les
sar
jmp
gs
ljmp
mov
cmp
mov
lods
das
ret
ret
push
pop
minps
and
int3
add
testb
sbb
jno
pop
dec
sbb
fnstenv
dec
sub
fsubrl
pop
jg
sbb
push
or
sub
fsubl
xor
push
das
test
stos
cmc
nop
xor
dec
fisttpll
xchg
sbb
gs
movsb
push
fists
jns
jmp
push
or
pusha
and
test
sarb
ljmp
lods
lock
pushf
sbb
add
mov
data16
sbb
dec
jne
pop
pushf
or
xor
push
ret
inc
or
pop
jmp
jbe
insl
cmpb
je
lock
cmpb
cs
mov
sarl
test
jp
in
inc
xor
xor
pop
xor
jmp
cmp
setle
jno
dec
addr16
mov
mov
jmp
push
mov
jae
lcall
outsb
jb
xchg
push
sbb
mov
sub
cmpsb
popf
add
adc
pop
xchg
push
push
xor
xchg
cmp
add
dec
adc
and
xor
push
lds
das
mov
shrb
mov
testl
pop
addr16
test
lock
out
or
dec
or
negb
dec
lahf
cmp
sbb
push
jl
bound
mov
stos
mov
loope
sarb
xor
stos
cli
or
imul
xchg
fimull
sbb
cltd
cmp
movsl
dec
push
fistpll
and
outsb
enter
mov
movsl
ja
sbb
int
cli
insb
add
test
push
mov
in
test
ret
jecxz
sbb
fildl
pop
bswap
xor
mov
push
loop
aam
xchg
sub
xchg
xchg
inc
fs
inc
xorb
mov
mov
or
push
fstpl
push
add
and
sub
std
aam
pop
fsubrp
addr16
ret
sbb
pusha
sbb
aas
jnp
mov
rorb
mov
mov
and
and
testl
mov
mov
hlt
cld
insl
mov
enter
xor
push
scas
jecxz
sbb
push
imul
test
jbe
mov
push
fnstsw
add
sub
clc
filds
fwait
insl
and
sub
das
fcomps
xor
and
jbe
out
loope
xchg
imul
leave
adc
outsl
xchg
inc
jmp
insl
sub
mov
ja
dec
pusha
add
or
and
outsl
inc
hlt
dec
mov
movsl
adc
or
dec
pop
add
or
sbb
xor
and
shlb
or
int3
dec
pusha
add
or
and
outsl
inc
hlt
dec
mov
adc
or
mov
add
or
sbb
lret
lods
adc
mov
mov
shlb
sbb
xchg
hlt
dec
mov
pop
adc
or
dec
popf
add
or
pop
dec
cmpsl
outsl
jge
dec
mov
mov
hlt
dec
daa
and
popa
inc
mov
pusha
or
add
and
nop
test
adc
outsl
jne
mov
pop
or
add
sbb
cmp
adc
addl
popa
inc
mov
dec
rol
pusha
or
add
and
nop
test
adc
outsl
jne
mov
pop
or
imul
js
and
popa
inc
mov
dec
rol
pusha
or
imul
mov
int
std
outsl
jne
mov
mov
popf
add
sbb
popf
es
mov
and
sbb
or
outsl
jne
mov
and
roll
fisttpll
nop
test
outsl
jne
mov
sbb
andl
dec
rolb
outsl
jne
mov
and
out
add
fisttpll
nop
test
outsl
mov
stc
push
xchg
pop
xor
xlat
rcr
xchg
movsb
cltd
push
pop
dec
ss
divl
out
sbb
popl
dec
scas
sbb
dec
inc
jae
outsl
sbb
pcmpeqw
lret
or
add
or
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
arpl
data16
xor
popa
mov
scas
popa
push
popa
dec
popa
jae
outsl
popa
adc
imul
lret
imul
xchg
sbb
push
sbb
jbe
push
push
sbb
sbb
sbb
add
std
clc
inc
xor
add
je
jno
insb
sbb
mov
idivw
pop
cmp
sbb
loopne
add
sub
cmp
test
pop
and
pop
cli
pop
out
lcall
repz
and
xchg
mov
and
int
add
adc
test
loop
inc
lahf
mov
xor
or
ja
aad
mov
out
inc
or
adc
imul
pop
lcall
mov
movsl
sbb
cmp
inc
sbb
je
lret
inc
aad
and
push
aam
aas
lods
mov
inc
or
aas
imul
insl
cmp
push
cltd
adc
sbb
pop
dec
or
mov
dec
or
cmp
sbb
in
popa
imul
sti
imul
pop
push
addr16
or
sti
lret
subl
or
jns
or
xor
imul
xor
roll
jbe
xchg
stos
mov
cmc
outsl
bound
xor
mov
stc
loope
inc
insl
pop
jbe
pushf
ret
mov
pop
cmp
push
mov
cmp
lea
pop
clc
insl
and
dec
cmp
jle
pop
sub
sbb
popf
xchg
jo
add
arpl
sub
and
sbb
push
cwtl
pop
and
cmp
xor
ds
dec
xchg
mov
sbb
and
or
sahf
in
cmp
int
test
push
dec
shl
aam
and
push
test
pop
pop
jge
sbb
push
icebp
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
sub
sub
pusha
icebp
leave
cmp
sub
inc
push
shl
dec
cmp
mov
sub
dec
cmp
xchg
push
push
push
shl
dec
cmp
mov
sub
inc
push
rolb
push
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
push
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
daa
push
push
icebp
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
sub
dec
and
xchg
push
push
push
shl
dec
cmp
mov
sub
cmp
inc
lret
sbbl
jl
sub
xor
mov
outsl
dec
lock
hlt
dec
mov
sub
adcl
jo
and
adc
or
imul
call
lea
imul
adc
roll
insl
shrl
shlb
inc
lock
mov
addl
jo
decl
mov
int
outsl
jne
mov
dec
rorb
or
insl
dec
xchg
mov
cmp
das
aas
dec
and
jno
dec
lods
adc
add
mov
dec
push
mov
cmp
adc
outsl
jne
mov
int
in
or
add
lods
or
nop
test
loope
lret
rclb
or
push
sub
or
nop
test
stc
or
outsl
jne
mov
dec
int
in
or
add
lods
or
nop
test
xchg
jbe
rclb
rclb
dec
inc
outsl
nop
hlt
dec
mov
iret
adc
or
dec
xor
or
in
dec
lea
or
dec
insl
add
leave
inc
das
cmp
mov
shlb
ljmp
nop
mov
adcw
jo
out
or
outsl
jne
mov
int
in
or
imul
adc
nop
das
cltd
daa
mov
dec
adc
lea
dec
mov
mov
xchg
adc
or
dec
in
add
or
push
imul
shrl
xor
adc
lea
dec
cmpsl
outsl
push
hlt
dec
mov
test
adcl
sbb
sub
xchg
and
fnstenv
xchg
inc
dec
mov
scas
push
inc
dec
dec
jae
outsl
adc
or
add
or
add
or
add
or
add
xor
fcomip
mov
cmpsb
pop
pop
pop
inc
pop
jp
popw
sbb
push
pop
cmp
es
fistps
ret
pop
lcall
jecxz
lahf
pop
sbbl
pop
mov
pop
jg
arpl
pop
sbb
cmp
dec
ficompl
cli
inc
out
adc
xor
seto
nop
lret
nop
ljmp
nop
stos
nop
push
nop
dec
nop
jbe
push
push
nop
or
rcll
out
nop
xchg
nop
mov
pop
dec
nop
xor
sbb
in
aas
lea
outsl
jbe
push
cmp
pop
ficompl
pop
cli
pop
out
lcall
pop
pop
pop
inc
jae
push
icebp
jmp
lds
frstor
aas
adc
js
rcrl
daa
lea
decb
and
pop
mov
cltd
mov
inc
in
fwait
push
in
scas
mov
xchg
inc
in
and
xor
sahf
and
pop
dec
int
imul
adc
insl
lods
sbb
mov
pop
lret
cmp
movsl
and
sbb
jmp
xchg
and
mov
sub
adc
test
cli
cmp
clc
insl
mov
js
mov
mov
data16
fidivs
cmp
cmc
and
or
xlat
cld
jno
adc
push
stc
mov
push
pop
js
sub
insb
push
repz
inc
pop
push
shl
mov
cmp
xor
popa
mov
movsb
mov
mov
sub
inc
jl
lret
adc
xchg
insb
dec
adc
sub
xor
add
in
xchg
adc
mov
push
insl
and
repnz
inc
je
sub
imul
shll
mov
jae
enter
cmp
mov
dec
test
lods
adc
sub
push
imul
out
fsubrl
xchg
adc
pop
pop
or
or
fs
icebp
dec
mov
lods
inc
rcl
jae
andb
add
enter
adc
pop
aas
sbb
test
div
inc
icebp
sti
nop
aas
add
mov
ss
shrl
or
xchg
push
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
push
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
cmp
cmp
mov
sub
inc
push
shl
dec
cmp
mov
sub
dec
cmp
arpl
mov
sub
inc
push
shl
dec
cmp
mov
sub
inc
push
rolb
push
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
push
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
and
cmp
mov
sub
inc
mov
xor
inc
int
pop
or
scas
pop
add
dec
stos
mov
xor
fwait
mov
cmp
dec
sbb
pop
scas
fmul
jge
adc
sbb
rep
pusha
ljmpw
test
push
imulb
adc
mov
push
popa
rcr
mov
imulb
add
push
mov
loopne
icebp
enter
push
inc
inc
icebp
lahf
xor
nop
push
scas
test
jns
fstl
jo
sbb
jmp
gs
pop
idivb
test
scas
out
test
mov
sahf
rorb
mov
leave
push
mov
in
test
insl
push
stc
mov
inc
rcl
jno
adc
xchg
jp
adc
cmpsl
lods
push
movsb
filds
adc
mov
fwait
and
outsb
into
jno
jle
cld
gs
xchg
add
mov
pop
sub
jge
sub
adc
sbb
mov
sbb
mov
jne
mov
faddl
dec
rsqrtps
in
or
aam
dec
enter
ja
cmpsl
mov
sbb
ljmp
mov
aas
inc
sub
push
lock
lock
pushf
or
xchg
push
xor
xchg
pop
push
sbb
outsb
xchg
flds
jge
adc
sub
dec
sbb
sbb
sarl
push
mov
adc
mov
sub
and
dec
cmp
jmp
dec
push
addr16
icebp
push
xchg
mov
jmp
in
sbb
cs
adc
nop
loopne
insl
xchg
shr
pop
xor
std
test
add
mov
push
dec
orb
loop
arpl
je
scas
or
sbb
sbb
and
outsl
rsqrtps
xor
jmp
in
outsb
dec
dec
mov
enter
fdivrl
lds
xchg
enter
push
and
dec
pop
insl
lods
das
test
add
xor
data16
and
jno
mov
insb
leave
fisttpl
test
or
add
pop
sub
shl
push
ss
jo
call
out
insl
jmp
xchg
add
fstpl
jb
pop
jnp
test
dec
mov
lods
out
enter
neg
push
into
andl
bound
pop
scas
cmp
rcrb
inc
outsl
test
inc
int
stos
jae
mov
aad
sbb
je
xchg
push
in
push
push
incb
gs
add
mov
orb
out
sub
sbb
insl
jp
push
icebp
inc
jno
push
sbb
out
add
in
xor
dec
mov
sub
rcrl
mov
jge
pop
cmp
and
jle
cs
lret
popa
insl
dec
sub
adc
mov
or
imul
fstpt
stos
bound
out
into
ss
jae
clc
pop
lea
in
nop
es
aam
cld
sti
test
call
nop
jno
ret
xor
pop
lret
leave
cmpl
test
stos
jo
add
gs
jnp
add
sarl
das
cmp
dec
xor
sarl
pop
jbe
and
lods
movlps
xchg
xor
xor
fadds
mov
icebp
enter
jg
pop
mov
ds
adc
rolb
enter
std
and
or
outsl
xchg
imul
test
cmp
rcr
xlat
cmc
loope
push
subl
mov
adc
daa
add
enter
and
jns
cmp
add
jo
cvttps2pi
fsubl
stos
mov
or
add
cmp
adc
dec
or
mov
jne
jne
sub
test
idivl
testb
add
mov
imul
dec
mov
inc
js
cmc
imul
push
dec
popf
mov
call
imul
fisubl
cmp
xchg
push
scas
or
in
add
pop
fincstp
insl
xlat
frstor
sbb
adc
sbb
mov
lods
sub
icebp
mov
aas
loop
or
push
repz
aad
push
hlt
push
or
mov
inc
or
pop
out
mov
lcall
inc
iret
test
test
ret
xchg
popa
int
inc
dec
das
jle
stos
push
cmc
movsl
xor
mov
sbb
nop
mov
into
sbb
gs
outsb
fnstsw
push
and
sub
hlt
mov
inc
push
mov
movsb
pop
mov
cwtl
add
push
int
or
movsb
jnp
mov
mov
dec
pop
orl
add
clc
fcomi
and
daa
pop
sub
or
pop
sbb
test
pop
cmp
leave
stc
loopne
test
js
xchg
push
xor
cmp
or
ljmp
sbb
push
sub
sbb
test
in
mov
mov
out
cmp
jno
sbb
sbb
jge
bound
inc
or
xor
xor
jne
inc
int
jge
aad
mov
sub
add
cmpb
in
sbb
js
sbb
imul
rcll
movl
sbb
cmp
imul
fadds
scas
test
in
adc
pop
pushf
add
cmpsl
xchg
mov
and
loopne
or
or
imul
dec
mov
mov
movsl
int
pop
jnp
pop
pop
sbb
mov
cltd
sbb
cmpl
or
movsb
adc
repnz
jmp
inc
arpl
test
out
imul
lods
minps
test
dec
inc
out
dec
sub
jae
xor
dec
mov
or
push
ds
add
imul
mov
dec
ss
ret
pop
inc
pop
mov
xor
cmc
enterw
jns
adc
inc
jbe
je
sub
cmp
cld
adc
int3
in
test
mov
insl
mov
in
in
cltd
lret
add
add
pop
xchg
push
std
icebp
test
mov
jne
imul
jno
sub
add
adc
pop
sub
lret
enter
rorb
sbb
das
test
popf
push
jns
push
jge
or
mov
or
sbb
cvtdq2ps
pop
pop
imul
cmp
adc
clc
push
mov
dec
fcmovnu
jno
push
int
adc
push
sbb
xor
mov
add
cmp
imul
inc
ja
lret
roll
scas
or
dec
das
mov
add
add
lock
xor
ret
inc
leave
addr16
fwait
dec
sbb
cmp
sbb
cltd
mov
and
movsl
jge
sbb
cmp
insb
push
mov
sbb
sbb
dec
mov
lods
lods
gs
stc
sbb
add
push
or
das
inc
jl
mov
xchg
dec
ljmp
fisttpll
mov
lods
and
testb
mov
aad
mov
sbb
push
and
dec
xor
lock
imul
xchg
std
mov
mov
mov
pop
push
pusha
push
lcall
push
push
dec
nop
data16
and
gs
ljmp
sbbl
test
xchg
mov
xlat
cwtl
fpatan
lock
int
mov
or
dec
dec
and
fcomi
mov
repz
rol
rcl
push
vpandn
mov
cli
dec
cmpsl
fwait
mov
mov
and
adc
outsl
inc
pop
pop
sbb
outsb
mov
ss
inc
test
fwait
xor
push
xor
rcrb
mov
repnz
aas
lcall
test
stc
xchg
sub
or
add
jns
xchg
out
xchg
mov
push
jmp
ss
js
ds
loop
mov
or
cmpsl
ret
scas
lea
and
ds
adc
rcrb
pusha
or
movsl
xchg
pop
or
aad
or
and
or
stos
adc
repz
mov
xchg
mov
out
arpl
add
popf
add
sbb
add
fmull
and
or
mov
add
ret
dec
mov
adc
inc
mov
pushf
dec
mov
ds
and
mov
or
in
add
arpl
adc
cwtl
add
popa
test
dec
dec
mov
mov
dec
mov
shlb
jne
or
fucom
xor
cmp
arpl
out
dec
mov
sbb
addl
stos
and
cwtl
inc
adc
push
insb
mov
jge
int
sbb
inc
dec
and
xchg
sbb
aam
xor
aam
icebp
push
int
xor
into
bound
pop
jbe
mov
mov
sbb
mov
xor
popa
add
addl
cmp
scas
addr16
pop
push
jecxz
cmp
xor
notl
cmp
inc
call
inc
push
mov
pusha
jge
pop
jle
inc
jecxz
pusha
and
cmp
sbb
out
inc
int
push
fcoml
sbb
test
fstpl
enter
jno
mov
out
cmp
jo
lods
sbb
mov
sbb
out
inc
mov
in
xchg
dec
addb
jo
fs
cmpl
rcrl
ljmp
adc
xchg
push
pop
in
shll
popa
cwtl
cwtl
stc
sub
aad
pop
les
and
icebp
mov
das
mov
fwait
movsl
adc
lret
sbb
xor
xchg
add
lock
test
stos
pusha
clc
aad
sbb
sarb
int
and
scas
stos
scas
fldcw
insl
fildl
cmc
loopne
dec
lret
pop
scas
mov
subl
sbb
lock
adc
jae
fistpl
jns
pop
push
repz
add
adc
lret
int3
loopne
sbb
pop
jne
repz
lock
outsl
lahf
add
cltd
adc
and
movsb
pop
dec
inc
mov
popa
out
cmp
rcl
dec
inc
je
insb
mov
addr16
xor
pop
fs
subl
and
pop
cmp
fadds
cmp
movsb
or
xor
add
jmp
sub
lods
imul
in
adc
ds
pop
mov
and
pop
inc
push
movsl
xor
popa
xchg
cmc
push
bound
movsl
rcrl
data16
add
std
push
or
ficomps
outsb
pop
pushf
in
push
adc
mov
ret
test
xchg
mov
dec
mov
mov
jg
or
add
jnp
sbb
cwtl
or
dec
fmuls
sub
insb
mov
xchg
lods
stc
inc
mov
adc
int
jnp
mov
sbb
in
or
inc
out
cmp
cmp
lret
cli
jo
jp
pop
jnp
scas
lcall
push
testb
imul
push
mul
inc
imul
imul
or
adc
ss
jne
out
mov
mov
out
pop
insl
dec
mov
mov
mov
mov
push
lea
frstor
jnp
pop
in
jge
sbb
or
mov
dec
shlb
pop
and
inc
mov
inc
jecxz
out
pop
pop
jno
or
rorb
pop
outsl
sbb
clc
fadds
add
outsl
int
jns
pop
fists
bound
inc
add
movsw
add
ss
xor
pop
lret
scas
mov
xchg
add
pushf
addl
imul
pushf
adc
jne
adc
pop
adc
mov
or
out
arpl
subb
jns
adc
jne
cltd
mov
adc
mov
pop
movsl
popaw
cmp
push
add
push
add
lock
movsb
mov
xchg
add
add
jne
adc
sub
sbb
jle
mov
lret
stc
push
mov
mov
nop
adc
inc
mov
sub
sbb
fcoml
jl
push
pop
in
daa
add
jb
cwtl
add
sbbl
mov
push
nop
jns
stos
sbb
pusha
sbb
mov
xchg
outsl
js
enter
or
xchg
mov
rorb
mov
jge
mov
sbb
xor
cli
rcl
cmp
bound
push
rcll
xor
div
rcll
imul
fwait
xchg
lret
loope
push
lods
sbb
arpl
or
push
xchg
mov
or
sbb
cmpsb
fs
iret
adc
shll
insl
cmpps
in
movsl
xor
cmc
or
dec
xchg
fwait
sbb
das
fmull
ror
inc
cmpsl
sub
mov
inc
jecxz
inc
pop
pusha
inc
add
dec
addr16
cld
or
dec
rcll
psrlq
out
imul
pop
cmp
push
nop
mov
sub
outsl
insl
mov
or
hlt
ficompl
daa
pop
cmp
add
mov
addr16
jno
stc
add
mov
mov
dec
adc
push
add
jbe
mov
lds
stos
aad
jg
pop
rclb
or
fstl
lcall
pop
jnp
dec
jge
dec
test
cld
rep
popl
jne
dec
and
imul
icebp
push
ds
mov
and
ljmp
inc
mov
jge
mov
xchg
std
int
xchg
cs
aas
xor
inc
mov
faddl
pop
push
sbb
dec
mov
cwtl
aad
inc
movsb
xchg
inc
sbb
add
inc
adc
and
int
add
or
push
cmpxchg
push
mov
dec
pop
sbb
fldcw
imul
fwait
les
push
jg
adc
int
mov
sub
int
push
rep
add
jae
scas
sbb
jge
movsb
xor
push
jle
mov
sbb
mov
inc
cli
and
andb
sbb
push
movsb
mov
fsts
inc
sub
fwait
ret
sub
mov
mov
cmp
mov
mov
push
xor
sbb
sbb
adc
dec
ss
xchg
jge
xchg
dec
cmp
sbb
cmpb
xor
jge
or
pop
je
mov
fdivrs
mov
and
inc
fstl
adc
lret
sub
add
arpl
and
pop
test
mov
xchg
sub
psubw
dec
push
add
add
dec
data16
cmovnp
add
mov
jne
mov
or
or
and
sub
mov
stos
aad
orl
cmp
add
adc
lea
sbb
and
dec
shrb
sbb
int3
hlt
mov
dec
adc
pop
imul
adc
or
adc
dec
or
mov
push
loopne
add
inc
or
mov
dec
mov
in
scas
jns
insl
jge
imul
outsl
daa
jnp
adc
sbb
sbb
mov
dec
cmp
xorl
xchg
inc
dec
insb
sbb
or
xlat
or
arpl
mov
mov
mov
push
cmp
in
dec
add
mov
and
insl
pop
and
fnsave
pop
adc
and
cmpsl
lret
bound
and
sti
pop
jns
bound
inc
jae
sbb
xor
jecxz
and
pop
sub
rorb
sbb
dec
imul
push
xchg
lods
mov
or
subb
lret
int3
jp
jge
add
cmpsb
jo
lods
pop
dec
outsb
add
into
push
push
jb
jl
inc
add
sbb
and
outsl
and
add
inc
sub
jle
out
mov
mov
fldl
pop
xor
adcb
inc
add
pop
rclb
add
dec
jb
cmc
add
into
add
sbb
dec
lods
ret
dec
push
add
inc
movsl
pop
mov
or
sbb
adc
leave
xor
sbb
push
sbb
cmpsb
adc
int3
repnz
or
add
sbb
js
ljmp
nop
mov
pushf
cltd
mov
cmpb
orb
jmp
xchg
popf
dec
dec
pop
jbe
lods
dec
mov
lods
pop
mov
lods
dec
adc
mov
lret
sbb
scas
sbb
dec
outsl
adc
imul
sbb
push
lea
hlt
mov
mov
xchg
fistl
push
mov
dec
adc
sbb
add
inc
dec
or
push
sbb
add
sbb
inc
adc
out
or
std
subl
or
mov
adc
pop
lea
add
aaa
inc
xchg
add
sbb
inc
dec
adc
adc
pop
adc
sbb
mov
mov
pop
lea
test
daa
mov
adc
pop
movsl
out
cmp
lret
rcrb
in
ja
dec
les
jecxz
pop
mov
push
adc
lock
adc
scas
or
ds
or
std
ds
cmp
cld
sbb
sbb
test
and
push
mov
mov
pop
pusha
outsl
imul
int3
pop
jecxz
in
cwtl
sbb
pop
das
rcll
addb
adc
mov
pop
sbb
dec
sub
fcmovnb
arpl
mov
dec
or
insl
fidivl
add
test
mov
aad
dec
or
loop
sub
sbb
dec
mov
loope
arpl
ret
pop
sbb
xor
sub
mov
push
jge
dec
cmp
push
push
pop
dec
insl
jno
add
jo
xchg
mov
push
inc
adc
jb
xor
je
in
data16
dec
fcmovnu
fsubrs
cltd
and
std
das
in
push
and
add
push
mov
mov
mov
movsl
jge
push
or
nop
pop
add
push
inc
leave
xchg
cmp
xor
xor
push
jmp
jae
mov
test
ret
pop
in
or
daa
stc
lret
xor
aas
frstor
scas
inc
pop
es
dec
outsl
sbb
cmp
enter
enter
jg
dec
imul
in
lods
shlb
nop
pushl
ds
xor
xchg
enter
mov
mov
sub
pushf
ds
mov
shlb
and
test
add
clc
push
test
iret
mov
test
cmp
insb
lods
add
xor
insl
sbbb
subb
int3
sub
sub
lds
mov
fdivr
ja
test
mov
xor
outsl
mov
sbb
aas
mov
pop
leave
sbb
pop
shlb
outsb
push
mov
in
add
xchg
dec
test
cmp
ss
pop
or
pop
out
testl
enter
out
dec
adc
mov
jne
mov
shrl
sbb
lods
test
sub
rorb
dec
dec
or
lahf
rcr
mov
das
fdivp
fucom
mov
dec
xchg
ret
sub
in
pushf
lods
mov
lea
popf
add
jmp
inc
mov
fwait
dec
subb
pop
jne
adc
mov
bound
insl
pushl
jno
inc
xchg
adc
arpl
mov
mov
addr16
shrb
imul
mov
pop
jno
add
dec
fcompl
test
dec
and
mov
jge
test
outsb
pop
jb
call
jne
jnp
xchg
jnp
xchg
insl
cmp
fwait
imul
gs
inc
xchg
nop
jns
int3
push
sbb
jg
xor
imul
mov
push
repnz
sbb
push
addl
inc
lahf
insl
outsl
mov
insl
and
jbe
push
or
cli
jp
pop
dec
inc
inc
mov
sqrtps
or
nop
test
sbb
push
addr16
fwait
sub
pop
dec
outsb
or
jne
and
clc
clc
pop
add
fisubrl
das
jmp
pop
test
pop
xchg
imul
push
lods
sub
inc
pop
insb
movsl
adc
bound
sbb
pop
xor
push
sub
movsl
pop
insl
cmpsl
and
imul
add
jg
sbb
lahf
mov
and
jp
int3
mov
inc
popf
cwtl
rorb
cvtps2pd
mov
movsb
ja
inc
jge
rcrb
fwait
popa
repz
mov
cmp
sbb
movsl
dec
push
jge
sbb
sti
pop
inc
add
adc
xor
std
arpl
movsl
inc
ffree
in
aad
in
sub
jnp
ljmp
cwtl
repz
dec
mov
insl
sbb
mov
add
js
sbbb
test
push
push
nop
adc
test
sarb
inc
outsl
testl
add
mov
or
or
call
andl
push
adc
mov
mov
and
push
cltd
push
push
or
sbb
lods
mov
sbb
xor
dec
push
xchg
cmp
stos
insl
and
mov
daa
aad
sbb
mov
push
nop
add
cltd
dec
outsl
fimull
outsl
cmp
add
jno
mov
int3
jno
dec
popf
pop
repz
fldl
inc
sarl
and
scas
in
insl
mov
mov
dec
sbb
test
rcl
sub
test
test
jl
or
mov
lret
or
add
fwait
adc
in
adc
outsb
fdivrl
adc
cmp
nop
in
mov
sbb
scas
imul
out
push
pop
sub
ret
sub
lea
xchg
xor
lret
inc
add
and
xchg
or
add
sbb
xchg
and
xor
icebp
xchg
sub
adc
testb
inc
pop
outsb
dec
mov
mov
inc
jmp
mov
pop
sbb
ja
dec
jecxz
dec
pop
out
add
nop
dec
add
mov
push
jne
cs
inc
cwtl
mov
in
aam
jno
mov
test
mov
ljmp
mov
popa
shll
jp
fs
rdtsc
xchg
inc
out
icebp
add
cwtl
jge
sbb
aad
mov
add
pushf
mov
jbe
jp
adc
adc
pop
dec
and
xchg
mov
xchg
popa
add
xor
add
adc
rorb
or
sbb
cmpsl
cs
xor
and
add
es
cltd
out
dec
pusha
sbb
sub
imul
mov
insl
movsl
dec
dec
mov
sbb
test
sbb
pop
add
push
jne
mov
outsl
adc
icebp
pop
xchg
add
add
addr16
jecxz
int3
adcb
add
loopne
mov
repz
dec
jbe
mov
jae
test
adc
mov
out
imul
inc
js
stos
out
jmp
inc
mov
jmp
fistpll
repz
inc
stc
outsl
inc
adc
jb
rorb
add
fcoms
outsl
sub
dec
out
adc
inc
mov
lea
and
xor
insl
or
cmp
popf
pop
arpl
mov
mov
inc
out
aas
lods
sbb
test
sub
cmp
add
cmpsb
sbb
xchg
sbb
dec
jns
push
and
stos
adc
and
mov
in
clc
inc
adcl
sub
out
cmp
out
xor
pop
mov
outsl
pop
mov
pop
test
sahf
and
sub
push
lcall
icebp
nop
nop
or
int
pop
cmpsl
cmc
jae
or
xor
inc
adc
pop
imul
fistpll
pop
jb
pop
inc
jecxz
loope
mov
jne
jne
add
mov
loope
stos
or
in
xlat
sbb
in
push
int
add
xchg
xor
pusha
mov
adc
xchg
outsl
call
mov
jns
xorb
sbb
xor
xchg
xchg
jmp
sub
jge
sbb
aam
sbb
xchg
subb
rclb
popa
pop
movsl
fwait
mov
mov
stc
cltd
pop
or
ljmp
adc
jne
push
outsl
push
insl
imul
add
insl
jge
sbb
addr16
mov
cmp
nop
arpl
in
dec
push
push
jo
ljmp
scas
daa
jo
in
mov
adc
jo
mov
jo
mov
add
adc
sbb
cld
mov
sbb
sbb
sbb
mov
rcrb
mov
sbb
push
push
mov
shr
daa
and
cmp
lret
cli
daa
and
xor
and
and
lea
mov
jge
jge
or
lods
addr16
or
sub
addr16
jge
or
mov
es
ja
jno
fisubrl
or
or
shlb
adc
sbb
xor
negb
adc
mov
es
jae
jne
fisubrl
push
lds
sbb
sub
cmp
out
adc
std
inc
aad
dec
push
dec
jo
sbb
lock
out
xchg
lock
sub
xor
push
jle
push
add
fwait
mov
adc
imul
adc
mov
loopne
dec
mov
mov
pop
push
into
lret
mov
mov
jge
aam
dec
add
jge
cmpsl
mov
sbb
pop
jno
sbb
or
sbb
mov
lret
pop
add
wbinvd
mov
jecxz
jg
sbb
shlb
sbb
dec
sbb
xchg
incl
adc
sbb
jg
jnp
jge
pop
gs
add
faddp
dec
sbb
add
or
or
jg
or
inc
jg
jge
sbb
pop
adc
dec
mov
dec
sbb
repnz
xchg
mov
sbb
push
jge
or
or
dec
lret
inc
adc
mov
adcb
popa
nop
push
inc
push
jg
jbe
jns
cmp
adc
jge
push
pop
push
dec
jge
inc
jne
loope
loopne
add
jns
movl
or
pop
jae
mov
mov
mov
and
mov
cmpl
and
adc
fisttpll
dec
mov
pop
add
push
jge
jmp
adc
jno
add
cmpsl
mov
pop
xlat
mov
fadds
js
frstor
mov
jge
inc
int
pop
adc
jg
adc
mov
adc
jne
cli
dec
jp
pop
movb
push
lea
sahf
xor
jne
imul
dec
adc
lret
add
cmpsb
imul
testl
xchg
inc
fwait
imul
js
adc
mov
cwtl
test
arpl
xor
jne
clc
xor
mov
adc
std
mov
aam
or
jecxz
fiadds
lahf
and
lods
js
sbb
sbb
es
and
xor
jle
dec
pop
stc
imul
sbb
pop
sbb
add
dec
iret
in
add
lret
add
lahf
add
imul
sahf
adc
jno
mov
adc
adc
movsl
ja
sbb
xor
gs
or
sti
adc
stc
pop
sbb
add
and
in
test
mulb
lahf
sar
mov
add
mov
mov
xchg
insl
hlt
dec
orb
dec
push
sbb
inc
das
pop
push
fiadds
xchg
sbbb
xchg
xchg
sub
sbb
int3
mov
push
and
xchg
int
dec
cmp
mov
cmpsb
hlt
imul
lods
jge
ror
or
sbb
sbb
pusha
cmp
adc
movsb
xor
dec
sbb
inc
in
idivb
dec
cwtl
mov
push
lret
ret
dec
mov
aad
jne
sbb
fimull
push
icebp
xor
mov
in
push
movsl
insl
sbb
cmp
fs
xlat
sbb
pop
sbb
jmp
lds
cmp
nop
sub
push
cmpsb
lds
pop
cmpsb
das
or
in
hlt
lret
cmp
or
cs
rcl
xlat
or
std
mov
test
sbb
xchg
fabs
jp
out
cmpsl
jbe
push
ss
cmp
or
inc
test
mov
adc
ror
ss
add
mov
pop
lods
adc
inc
jno
notl
cltd
inc
insl
repz
clc
in
pop
fmulp
xchg
nop
cli
call
test
jno
inc
mov
mov
add
test
int3
mov
or
xchg
cmp
int
mov
test
sbb
jmp
jge
push
mov
dec
fisttpll
adc
test
mov
jge
adc
mov
nop
icebp
outsb
push
outsl
int
xor
icebp
mov
xor
pop
mov
mov
pop
inc
adc
cmp
call
das
call
adc
lds
xchg
test
sbb
push
cmp
int
cmc
test
push
mov
fwait
push
mov
inc
bound
xchg
int
ss
out
add
lcall
pop
push
push
cmpsl
mov
std
xor
adc
pop
stc
and
xor
push
dec
mov
fwait
cmp
adc
pop
mov
insl
add
icebp
test
stos
and
pop
loopne
loopne
mov
xor
lock
xor
jns
icebp
test
les
sub
lcall
repnz
enter
fisubs
ret
xchg
stc
test
unpckhps
jne
movsl
jb
loope
nop
sub
jge
fcomps
mov
imul
xchg
sarb
mov
cmc
mov
sahf
xcrypt-ecb
cmpsl
int
pop
adc
lahf
add
push
ret
pop
adc
adc
mov
dec
and
into
shrl
ret
sbb
push
mov
sbb
ss
push
sbb
sarb
xor
daa
lods
cwtl
add
ret
scas
push
cli
mov
dec
mov
push
adc
movsb
push
daa
cltd
pop
inc
outsl
rolb
jo
test
sub
jo
pop
test
pusha
fiaddl
fnsave
xor
or
pop
jo
aad
into
push
insb
xchg
push
leave
repz
dec
mov
jge
ss
outsb
mov
das
or
std
repz
and
in
or
movsl
xlat
test
ss
fsubr
call
scas
adc
dec
imul
in
adc
sub
mov
adc
and
or
mov
xchg
mov
jo
movsl
mov
inc
push
pop
add
test
in
test
dec
jge
push
mov
xor
mov
push
enter
int3
jge
sub
rol
dec
add
inc
lods
jo
loopne
adc
xor
mov
or
inc
xor
test
mov
mov
sub
cmp
das
in
pushf
mov
add
std
das
jg
adc
sbb
std
jo
sbb
fisubs
pop
dec
adc
xor
jmp
inc
rep
iret
in
xchg
cli
adc
and
add
out
cltd
out
sti
pop
and
js
sbb
sub
sbb
fildl
sbb
cld
popa
leave
ss
in
and
add
imul
xchg
cmp
call
inc
int
jns
test
std
notl
pop
cmp
pop
loopne
cvtpi2ps
jecxz
xchg
jno
dec
gs
addr16
iret
cwtl
rsqrtps
xor
xor
pop
test
cmc
jge
fistpll
jns
cmc
jecxz
cwtl
lds
insl
xchg
xchg
add
mov
cmp
lret
and
adc
adc
loop
cmpsb
leave
addb
scas
push
add
nop
lcall
dec
insb
or
out
push
loopne
sbb
pop
sbb
nop
fucomp
xor
dec
jb
inc
lahf
pop
jbe
roll
pop
loopne
adc
adc
add
mov
jbe
adc
mov
sub
punpckhwd
dec
pop
ds
cmp
jae
mov
bound
mov
sub
lahf
jno
in
jns
imul
stc
cmpb
int
dec
push
and
and
jg
mov
mov
add
mov
pop
jns
pop
mov
dec
lods
mov
mov
imul
mov
mov
adc
dec
imul
movsb
add
insb
adc
shr
cmc
mov
jno
adc
ds
repz
imul
fwait
ljmp
pop
jl
out
ja
mov
enter
fs
mov
aas
into
lea
push
mov
minps
dec
mov
inc
push
adc
int3
jecxz
popf
nop
add
insb
das
push
mov
or
pusha
push
movsl
push
imul
int
pop
jge
gs
sbb
int
fisubrs
shlb
popa
pop
fwait
jo
test
adc
or
add
xor
adc
xchg
adc
popf
test
test
aad
jge
outsl
jne
icebp
mov
in
and
mov
shlb
sbb
outsl
xor
andl
inc
rorb
sbb
ja
inc
pop
mov
ja
inc
sbb
aas
xor
jbe
and
add
rcll
add
leave
adc
adc
xchg
push
dec
mov
lea
mov
pop
stos
and
adc
stos
outsb
fsubl
and
adc
jg
dec
and
push
fcoml
and
nop
test
outsl
jne
mov
dec
jge
lea
popa
inc
inc
loop
and
mov
clc
cmp
push
outsb
lret
push
adc
cmp
loope
inc
adc
popa
inc
mov
dec
std
rorb
ja
pop
inc
iret
adc
or
nop
repz
hlt
dec
cmp
xchg
pop
lods
and
jg
dec
and
test
lock
std
push
fcoml
and
jg
dec
and
rorb
cmpl
cmc
fdivr
cmpsb
clc
jne
lods
lret
and
sub
sbb
sub
hlt
cmp
mov
or
stos
mov
dec
iret
cmp
adc
mov
sub
arpl
mov
push
dec
push
cmp
sbb
sub
arpl
mov
iret
push
dec
aad
aad
add
cmp
sbb
sub
arpl
ffreep
roll
rcl
push
dec
push
cmp
sbb
sub
arpl
rclb
rcll
cmp
mov
icebp
mov
and
sub
fldl
rol
push
dec
sarl
lret
sbb
rorb
add
int
scas
rorl
imul
lret
lds
push
add
sub
arpl
cs
dec
xor
sub
mov
dec
arpl
scas
rorb
inc
push
dec
aad
rcrl
mov
icebp
mov
sub
arpl
xor
sub
shrb
dec
sbb
shlb
mov
or
mov
sub
xchg
std
cli
xchg
sbb
adc
int
cmp
pop
cwtl
pop
dec
adc
jmp
out
cmp
divl
mov
std
pop
popf
fwait
mov
sub
mov
imul
test
adc
jnp
call
jnp
leave
dec
leave
add
sbb
packsswb
mov
into
xchg
lcall
int
fstl
inc
in
or
repnz
xchg
sti
je
dec
mov
aas
dec
add
xchg
imul
mov
inc
mov
jnp
dec
adc
sahf
cmp
repz
pusha
jmp
fcmovu
cmp
mov
dec
mov
mov
fs
cmp
sbb
xchg
pop
fwait
lock
pop
ja
mov
xor
lds
movsl
clc
imul
mov
outsl
cli
ljmp
inc
movsl
or
daa
sub
add
xor
push
nop
adc
repz
jp
sbbb
dec
mov
and
xchg
mov
mov
adc
test
mov
adc
shr
pop
mov
rorl
pop
xchg
int
pop
pop
jae
cmp
sub
aas
dec
push
pop
xor
pop
ret
push
test
not
jge
enter
test
rcll
nop
rcll
adc
mov
mov
adc
outsl
jmp
arpl
fnstsw
xchg
add
adc
hlt
dec
sub
repnz
add
pop
push
or
pop
dec
pop
sbb
xor
push
test
aas
jbe
enter
xor
or
or
sbb
iret
insb
sub
addr16
xchg
insb
shlb
cmpb
paddw
daa
fwait
inc
sahf
adc
sub
int
jge
xor
aad
dec
fcoms
add
ja
xchg
cmc
mov
pop
leave
mov
add
imul
cmp
arpl
repnz
inc
insl
lock
sbb
sbb
push
cmpsb
jmp
push
cmp
sahf
mov
inc
je
sbb
pop
andb
sbbb
lds
dec
cmp
and
sub
inc
popa
mov
stos
sahf
mov
push
bound
jle
mov
iret
push
add
jg
add
test
out
stos
outsl
shll
sbb
ficomps
outsl
sbb
sti
dec
outsl
jge
xchg
or
imul
sbb
xchg
xor
mov
and
dec
jbe
fistpl
mov
fld
cltd
push
pop
mov
sbb
push
lret
test
and
mov
pop
push
push
callw
nop
clc
inc
sbb
mov
xor
out
out
mov
stos
adc
arpl
sarb
insb
js
mov
jne
and
sbb
insb
jle
test
cmp
nop
inc
jg
vpunpcklqdq
adc
sbb
jne
jmp
insb
or
mov
mov
adc
pop
jbe
aaa
stos
mov
jns
mov
xlat
frstor
scas
imul
pop
add
in
fmull
es
mov
mov
dec
hlt
cwtl
int3
out
or
xor
fcmovne
add
sbb
add
push
fadd
iret
sbb
arpl
jge
xor
fimuls
dec
adc
dec
std
pushf
xchg
call
adc
jge
push
data16
insb
push
das
outsl
dec
insl
nop
gs
sbb
or
add
insb
cwtl
sub
ja
in
insb
fs
and
push
mov
aas
mov
push
test
cmp
call
jle
das
cmp
int3
outsl
and
nop
imul
test
lret
xchg
pop
pop
mov
mov
jnp
jae
inc
je
dec
push
add
add
inc
not
call
cld
jns
mov
leave
std
or
mov
popa
push
mov
orl
pop
xor
lods
popl
cmp
adc
push
lahf
pop
lods
das
pop
push
daa
push
ljmp
xor
and
and
arpl
out
mov
inc
lock
push
dec
enter
mov
sbb
jnp
adc
and
es
sub
test
jge
ljmp
mov
loop
xor
fisttps
dec
fsubrp
jge
in
push
sbb
xor
outsl
rcr
add
shlb
mov
imul
pop
int
inc
add
xor
stos
dec
or
push
add
sbb
imul
push
gs
mov
ljmp
incl
push
shrl
push
inc
add
shl
movsb
lds
das
mov
clc
pop
sbb
insl
mov
pop
push
push
xor
outsb
ret
cmp
cmp
push
fwait
pop
lret
inc
insl
faddl
mov
pop
scas
sbb
cmpl
xor
adc
pop
pushf
stos
sbb
lods
das
and
mov
cwtl
push
sbb
or
adc
pop
sub
pop
adc
or
inc
ret
pop
sub
pop
outsl
sub
out
cmp
daa
cmp
inc
notb
mov
jbe
into
cs
test
pop
mov
jo
add
xchg
jmpw
jge
pop
sbb
inc
shl
fisubrl
cmpsl
or
loope
sub
inc
or
pop
jno
pop
mov
xchg
cmp
push
push
pop
testl
sbb
pop
cmp
or
jmp
testl
inc
sub
scas
fwait
lods
sub
in
cli
pop
arpl
mov
push
adc
dec
cmp
adc
inc
mov
pusha
js
lea
lds
lods
xchg
sbb
rep
lret
lods
stos
add
xorb
imulb
push
xchg
mov
sbb
call
pusha
insl
pop
jno
adc
xor
and
rclb
fwait
movsl
jge
push
ret
mov
inc
add
push
pop
int
mov
js
push
or
add
out
stos
push
je
std
mov
aad
popa
sbb
jg
or
in
std
pushf
loope
stos
mov
shrl
lea
popf
js
addl
inc
shlb
aad
int
pop
pop
in
mov
repnz
lds
lock
jbe
icebp
xor
lcall
push
or
imul
fisubs
clc
dec
mov
cmp
lret
outsl
cmp
lds
push
test
jne
lods
xchg
dec
dec
lds
lcall
and
lds
mov
sti
incl
insl
mov
sbb
inc
or
pop
in
jp
pusha
orl
ficoml
fisttpl
dec
add
xchg
jno
inc
xor
sub
lds
das
xor
sbb
mov
pop
test
enter
insl
cli
adc
push
mov
rcl
test
nop
fwait
and
andb
insl
or
pop
int
dec
xchg
std
pop
push
sbb
inc
dec
ds
jge
js
sbb
call
mov
push
push
out
or
dec
iret
mov
shrl
arpl
es
shrb
sub
adc
or
test
cmp
jge
push
push
mov
cmp
push
mov
cmp
fldl
push
sahf
mov
mov
iret
outsl
ret
mov
cmp
jge
push
push
sahf
mov
lcall
or
pop
add
mov
fnsave
inc
movsl
scas
fs
cli
inc
add
mov
mov
addr16
jl
push
sbb
clc
jge
pop
test
push
inc
jecxz
jmp
outsb
gs
lds
movsb
sub
cwtl
mov
mov
nop
loopne
stc
add
in
in
int
mov
test
mov
mov
xor
mov
inc
cmp
std
dec
movsl
jne
enter
inc
push
gs
jbe
jb
jge
inc
pop
jle
cmovp
bound
lret
mov
mov
mov
adc
xchg
xor
and
lds
sub
jg
add
jo
lock
dec
lret
sbb
das
add
jne
es
aam
xchg
mov
jae
daa
push
js
cmp
dec
xchg
notb
pop
enter
test
add
cltd
xor
rcll
cmpl
ja
or
sbb
add
lods
lods
sub
jb
rcrb
inc
pop
cmpsl
or
arpl
adc
clc
sbb
mov
cmpsl
out
push
iret
mov
dec
push
in
sub
sbb
roll
shrb
jecxz
mov
mov
jge
add
ljmp
out
aas
std
mov
sub
sbb
rcr
insb
sahf
into
sbb
xchg
sub
pop
xchg
insl
int3
inc
jge
mov
aas
popf
insb
and
sbb
sub
jge
pop
stc
scas
mov
in
cs
mov
jmp
jno
pop
dec
testl
adc
loopne
adc
mov
test
adc
pop
lods
sub
mov
sbb
cmp
inc
pop
push
daa
insl
in
sbb
xor
dec
mov
fdivl
test
int3
sbb
or
pop
add
pushf
mov
xchg
imul
clc
or
test
push
mov
jp
mov
cs
lock
push
dec
xor
inc
popa
mov
and
ds
addl
mov
ret
pusha
cld
or
and
add
pop
out
lds
pop
sbb
stos
adc
test
add
push
inc
add
push
mov
icebp
mov
sub
arpl
fcmove
or
cmp
jge
add
pop
mov
insl
hlt
dec
sbb
cmp
nop
test
mov
dec
cmc
rorb
inc
insl
sub
or
nop
xchg
adc
jge
scas
xchg
xchg
out
xor
xchg
jns
xor
repnz
inc
sub
cli
sti
cld
sub
jae
xor
enter
push
cwtl
xor
and
mov
sub
add
or
sub
in
adc
lds
jl
xchg
jns
push
and
inc
jne
jno
adc
xor
cmp
subb
mov
gs
jge
outsl
cld
enter
test
adc
fsubl
lds
andps
fwait
jge
pmulhuw
push
mov
sub
inc
or
popf
bndstx
lock
sbb
jge
mov
cmp
lock
dec
pop
lea
sbb
imul
push
dec
push
lea
push
adc
sub
jl
inc
prefetch
aad
xor
leave
add
div
cmp
divl
inc
aas
andl
mov
adc
fcomps
sbb
dec
mov
imul
or
hlt
jo
gs
repnz
ret
bound
pop
jo
punpckldq
mov
and
movsb
pop
add
add
orl
jnp
mov
testl
and
mov
jbe
clc
nop
imul
mov
inc
adc
int
pop
mov
sbb
xchg
popa
mov
jmp
popa
cwtl
js
xor
popa
das
mov
mov
push
cs
push
movsl
xchg
pop
sbb
xchg
jnp
sbb
sti
pop
lcall
pushf
mov
sbb
dec
pop
sahf
lds
aad
test
out
jecxz
jo
andl
push
outsl
or
push
dec
mov
mov
push
imul
dec
sub
or
test
mov
lret
rorl
pop
je
mov
hlt
jmp
or
jg
stos
xor
xchg
push
mov
js
or
notb
rclb
mov
dec
into
mov
lea
mov
adc
scas
data16
push
lods
lcall
and
fucomi
mov
adc
jo
xor
mov
fucomi
xor
pop
push
shl
loope
aas
inc
jmp
mov
push
jge
pop
add
leave
adc
mov
jns
xor
movsl
mov
dec
sbb
addb
push
cmp
loopne
adc
jb
fadds
cltd
jmp
jl
mov
ljmp
pop
push
sbb
push
jns
xchg
pop
sub
enter
mov
add
aam
mov
ret
adc
mov
test
fstps
insb
cmpsl
or
jnp
int3
mov
lods
roll
imul
mov
adc
imul
mov
jno
adc
rolb
sbb
jge
add
xchg
xchg
cmp
inc
scas
mov
int3
out
movl
jp
jge
mov
flds
mov
fs
add
cmc
in
xlat
lods
dec
cmp
imul
sbb
pop
add
add
repnz
arpl
add
jnp
push
test
xchg
cmp
mov
pop
push
mov
adc
adc
jo
xchg
mov
dec
jnp
sub
in
imul
dec
in
push
xor
out
sub
test
std
int3
fsubs
pop
add
data16
leave
push
icebp
cli
popa
outsl
push
mov
adc
xchg
cmp
add
add
mov
lock
incb
insl
sbb
cmp
or
push
pop
aam
sbb
jecxz
adc
xor
pop
loopne
jbe
sbb
adc
sbb
in
sub
popa
adc
xor
xchg
hlt
lds
mov
sbb
or
enter
dec
dec
inc
and
fxtract
add
out
fstpt
shrb
js
imul
enter
dec
sub
add
fdiv
add
pop
or
lahf
jb
test
adc
movsl
es
sbb
clc
out
or
mov
fcoms
xlat
inc
mov
scas
sbb
sbb
int3
adc
nop
shlb
jmp
adc
into
or
xchg
push
sbb
repnz
popfw
xchg
pop
jno
sbb
imul
add
adc
loop
lahf
mov
inc
jl
je
push
sahf
mov
mov
icebp
ficompl
pop
pop
ficomps
dec
loop
xor
sbb
roll
les
dec
jl
adc
repnz
add
mov
push
cmp
add
lds
pop
es
jge
leave
xor
js
mov
in
arpl
cmc
test
shrl
jl
dec
inc
sbb
pop
or
pop
adc
aam
or
stc
out
shl
cmp
in
pop
stos
in
xor
adc
dec
dec
jecxz
mov
push
mov
fdivs
add
sub
sbbl
ja
adc
sbb
movsl
sub
jge
jmp
adc
aad
or
aaa
nop
pop
sub
es
bound
mov
inc
jno
ret
xchg
jg
add
call
cmp
dec
fnsave
jnp
and
repnz
outsb
add
sahf
adc
adc
cmp
mov
fsts
sbb
sbb
adc
add
xlat
mov
add
js
add
jnp
movsl
mov
lret
inc
adc
jae
adc
test
sbb
lcall
jg
mov
mov
mov
add
dec
and
scas
mov
sub
add
data16
adc
lods
rcll
dec
dec
xchg
es
ret
xor
push
cmp
sbb
xor
cltd
adc
push
popf
es
mov
rcrl
lgs
scas
es
adc
int3
or
cli
sbb
adc
push
add
nop
and
xor
cs
out
pop
adc
or
ret
ret
add
sbb
xcrypt-ecb
sub
pop
inc
test
lahf
dec
xlat
dec
add
cmp
xchg
pusha
sub
icebp
mov
or
int3
call
leave
cmp
inc
cmpsl
lods
outsl
movsb
mulb
mov
in
movsl
ret
sbb
lret
or
adc
pusha
imul
cmp
aad
aad
outsl
shrb
fnstsw
add
sub
cli
pcmpeqw
test
cli
mov
movsl
outsl
ds
lods
cmc
in
push
gs
lea
jb
sbb
mov
xor
aad
push
push
cwtl
mov
xchg
jmp
adc
push
insl
leave
daa
xor
mov
push
call
mov
scas
adc
dec
dec
cmp
insl
sub
mov
lds
sbb
insl
shrl
test
hlt
dec
addl
rolb
daa
xor
xchg
and
add
ja
pop
out
dec
insl
test
hlt
dec
xchg
dec
cmp
push
or
hlt
dec
xchg
lds
shrl
test
fldl
jbe
dec
mov
push
dec
cmpsb
stos
inc
daa
or
loope
pop
call
mov
xor
xchg
insl
int3
inc
dec
pushf
int
push
or
outsb
sbb
insl
shrl
lds
hlt
dec
icebp
test
movsl
inc
insl
sub
jp
gs
push
sub
bnd
mov
and
testb
fsubs
roll
ja
push
adc
scas
mov
outsb
clc
mov
sub
lret
pop
sub
movsl
outsl
push
inc
fstpl
jmp
insl
sub
mov
push
das
daa
cmp
ljmp
call
mov
or
insl
shrl
dec
lahf
clc
testb
fsubs
lret
add
ja
inc
insl
int
or
int
movsl
outsl
mov
jecxz
inc
adc
insl
scas
insl
daa
cmp
adc
push
inc
adc
arpl
insl
int3
dec
dec
outsl
js
dec
rolb
ja
push
fs
aad
jle
nop
test
outsl
jne
mov
dec
rolb
and
adc
iret
pop
and
subb
dec
mov
push
dec
adc
or
inc
test
test
inc
or
outsl
es
add
and
cmp
rorb
adc
imul
nop
cltd
or
sub
or
mov
outsl
jne
mov
movsl
rorb
xchg
insl
int3
push
fmuls
jl
push
js
and
lds
push
hlt
dec
inc
dec
pmaddwd
jge
push
add
and
sub
xlat
in
movsb
lods
movsb
fs
and
sub
out
jmp
cli
out
out
lcall
pop
insl
inc
jp
xchg
insl
push
cmp
es
insl
ret
out
jecxz
lahf
insl
cmpl
inc
sbb
arpl
pusha
cmp
scas
scas
mov
scas
scas
push
scas
dec
scas
jae
outsl
scas
adc
sub
dec
lret
dec
ljmp
dec
stos
dec
push
dec
dec
dec
jbe
push
push
dec
or
push
mov
sbb
jp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pusha
pop
arpl
pop
add
inc
and
gs
xor
daa
push
xor
in
and
sub
sub
test
movsl
cmp
add
shr
enter
fmuls
push
aas
lds
in
pop
cmp
arpl
iret
rcr
imul
mov
clc
mov
xor
enter
int
add
mov
cmpsb
jo
dec
shll
push
jecxz
mov
cld
popl
add
out
mov
loopne
mov
add
scas
adc
movsl
and
insl
cltd
data16
or
pop
pop
sub
add
int
lret
and
cli
or
push
adc
in
push
pop
cli
jg
dec
or
jecxz
outsl
in
and
std
sbb
fs
mov
sub
pop
inc
pop
inc
je
add
pusha
mov
aad
lret
loope
call
inc
aad
sbb
or
push
jge
cmpsl
mov
loopne
dec
sbb
sbb
in
into
cmpsl
adcl
mov
out
xchg
pop
fildl
push
add
ret
mov
xchg
or
aad
negl
pop
dec
mov
hlt
xchg
mov
imull
aas
pop
jns
or
cwtl
adc
push
cmpsl
cmp
sbb
ficompl
enter
dec
adc
push
adc
in
mov
outsb
and
or
lds
nop
jle
iret
cmpsl
cmp
lock
or
sar
std
and
jae
test
inc
mov
pop
fistl
ret
push
adc
xor
or
push
cmp
pushf
lods
ja
shlb
mov
cmp
sbb
fistpl
nop
mov
xor
mov
sub
dec
mov
or
daa
mov
mov
imull
inc
test
fmull
jle
test
lds
insl
jns
aam
adc
nop
adc
insl
mov
loope
dec
lds
adc
mov
jl
lahf
or
lds
dec
movsb
dec
das
jne
arpl
or
jno
cmpsl
aas
cmpl
dec
pop
int
sbb
dec
dec
cwtl
ljmp
imul
test
fs
cld
sub
out
out
insb
outsl
loopne
scas
mov
jno
les
imul
mov
inc
insl
inc
jmp
or
mov
and
push
add
mov
jns
jno
in
pop
nop
lods
fsubr
xor
add
adc
lds
sbb
sbb
lods
jmp
xor
imul
pusha
test
push
sbb
mov
mov
scas
cmp
pop
ret
int
cmp
and
cmc
dec
js
aad
lret
pop
popf
and
imul
adc
popa
jmp
mov
test
lds
int
xor
imul
je
cs
add
adc
push
pop
das
imul
sbb
test
mov
lds
lea
cmp
inc
shll
in
ja
cmc
pop
add
push
jmp
cmp
cmpsl
idivl
sbb
sub
enter
mov
aaa
push
dec
or
sub
lds
movsl
push
and
nop
daa
popf
enter
mov
dec
dec
test
or
test
dec
inc
test
add
push
icebp
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
sub
dec
cmp
xchg
push
push
push
shl
dec
cmp
mov
sub
inc
push
rolb
push
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
push
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
test
cmp
loopne
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
and
cmp
mov
sub
inc
push
shl
dec
cmp
mov
sub
dec
and
arpl
mov
sub
ss
sbb
les
sti
fnsave
js
mov
jb
pusha
push
mov
lahf
xchg
adc
je
imul
dec
mov
jne
jge
sbb
push
adc
mov
xor
mov
cld
xchg
sarl
mov
sub
jge
outsb
dec
push
jne
mov
cmpsb
dec
outsb
leave
iret
in
xchg
dec
sub
jge
dec
lret
cmp
push
sub
stos
jmp
inc
mov
fwait
cli
ljmp
cltd
lahf
mov
scas
add
outsb
fnstsw
jmp
mov
dec
jo
dec
out
cmp
mov
cld
cltd
and
push
adc
jne
bound
imul
push
dec
js
andb
imul
stos
dec
and
pop
enter
sbb
mov
dec
sbb
subl
imul
sbb
lock
out
cmpsl
pop
xchg
pushf
jmp
mov
mov
rcrl
dec
insl
pop
fcmovbe
mov
addr16
sbb
enter
or
leave
arpl
inc
pop
icebp
push
xchg
leave
push
fnstenv
xor
cmp
or
adc
imul
add
inc
mov
mov
xchg
filds
cmp
lods
jmp
mov
jns
or
sub
mov
mov
xchg
adc
daa
push
jne
add
jg
ret
int
xchg
adc
inc
lods
add
sarb
mov
into
inc
sbb
inc
xchg
imul
mov
pop
jne
jge
jge
gs
icebp
jno
out
jae,pt
shrb
jne
sbb
roll
pop
dec
cmp
lret
movsl
mov
pop
movsl
sbb
stc
xchg
xchg
int3
fs
inc
loope
jge
pop
negl
dec
jmp
icebp
lret
fs
push
and
popa
push
xor
mov
push
cltd
pop
pop
call
mov
mov
xchg
and
mov
stos
insb
sbb
in
inc
test
jae
pop
cmpsl
in
mov
sbb
push
rorb
mov
mov
test
ja
pop
mov
add
shlb
mov
inc
xor
loop
xchg
sbb
pushf
dec
pop
pop
das
idivl
and
inc
xor
outsl
xor
lds
inc
dec
inc
out
icebp
scas
loop
addl
lods
popf
cmpsl
mov
enter
sbb
icebp
mov
dec
adc
loope
dec
add
lahf
wbinvd
adc
mov
jno
jnp
mov
pop
nop
jne
nop
imul
sbb
outsl
jnp
insl
cltd
movsl
inc
jle
addb
xchg
outsl
mov
sub
nopl
push
push
sub
dec
adc
sbb
adc
test
sub
adc
xor
adc
jecxz
inc
imulb
pushf
inc
sarb
inc
std
add
jo
int
inc
outsl
add
adc
int
ss
push
flds
pop
sub
cmc
cld
lcall
sbb
adc
bsf
rdmsr
nop
outsl
mov
rdmsr
rclb
sbb
cmp
aas
push
and
mov
rcrb
stos
mov
leave
test
push
daa
sbb
mov
pop
in
sub
cmp
sbb
adc
cmp
dec
call
mov
pop
push
lods
push
pop
adc
popa
std
dec
push
popa
sbb
push
dec
sbb
sub
popa
adc
pop
test
push
nop
adc
jecxz,pt
cli
outsb
std
mov
enter
in
pmullw
int
mov
inc
in
jge
out
or
sub
jnp
inc
movsl
fnsave
jp
jne
pop
nop
mov
popf
dec
adc
test
jne
jecxz
pusha
out
dec
and
xchg
cmpsl
out
sbb
jmp
cmp
orl
fnsave
cmp
mov
pop
lods
outsl
add
adc
jno
or
sbb
adc
int3
jae
sbb
jno
adcl
dec
adcl
movq
outsl
xlat
imul
imul
jae
insl
mov
or
arpl
mov
in
adc
das
and
adc
jnp
or
and
or
add
xchg
xchg
outsl
jne
or
imul
rcll
xchg
cwtl
imul
xchg
cmp
imul
cmp
imul
xchg
ljmp
imul
pop
adcb
rol
imul
xchg
and
mov
ror
imul
xchg
dec
imul
imul
jp
xchg
imul
jle
insl
imul
jp
xchg
adc
jp
xchg
adc
jp
xchg
push
imul
or
and
jge
xchg
lea
ja
add
fstl
adc
aas
and
dec
xchg
gs
add
dec
add
mov
adc
and
out
daa
je
xor
xor
in
aad
sub
stos
arpl
test
or
shlb
cmp
imul
pusha
sub
lcall
ret
test
inc
cmp
adc
test
ficoml
jmp
int
inc
jp
vmwrite
loope
xchg
imul
cmpsl
add
aad
push
jl
cmpsl
cltd
outsl
or
mov
add
loopne
sbb
push
adc
addl
jns
pop
test
adcl
add
dec
jae
add
cmp
dec
add
cmp
and
lea
test
sbb
jae
out
sbb
outsl
dec
sbb
and
push
cmpsl
or
cmp
adc
or
mov
add
sbb
pusha
outsl
scas
push
in
mov
test
inc
pusha
outsl
jle
in
add
insb
adc
mov
pop
xchg
push
outsl
loope
or
adc
cli
sbb
jmp
lea
adc
dec
call
mov
dec
pop
xchg
les
adcl
mov
push
pop
loop
push
cli
add
stc
xchg
lods
pop
cmpsl
or
fcmove
pop
jae
or
or
mov
add
add
xor
dec
sbb
popf
pop
adc
clc
mov
add
imul
imul
cld
js
dec
iret
jb
xlat
adc
sarb
movsl
ret
arpl
ljmp
mov
push
push
inc
cmpsb
pop
xchg
hlt
fwait
xor
dec
cmc
adc
dec
sbb
mov
adcl
ficoms
cmpsb
add
dec
fdivl
push
dec
add
dec
add
or
mov
loopne
adc
push
cli
adc
daa
inc
dec
jae
lods
or
nop
jae
outsl
dec
lea
pop
das
dec
add
imul
dec
outsw
xor
inc
loope
imul
or
lahf
adc
insb
imul
fdivrs
addr16
ljmp
add
imul
mov
lock
xor
dec
xor
dec
setne
testl
js
xor
mov
loopne
adc
jae
add
jno
mov
xchg
dec
outsl
dec
add
or
jmp
adc
mov
dec
mov
cmp
out
dec
add
lock
pop
xor
and
xchg
cli
or
add
jae
sbb
jae
mov
mov
cwtl
jae
sub
out
xchg
test
or
adc
cmp
adcl
sub
xor
adc
shll
gs
mov
mov
pop
add
pop
das
jge
and
lds
das
dec
loope
pop
call
jne
bound
sub
adc
dec
shr
dec
lods
mov
adc
fistpl
clc
jle
lcall
mov
sbb
pop
mov
test
and
sbb
dec
out
clc
and
and
sahf
dec
leave
movsl
jnp
ss
cli
or
sti
mov
xchg
test
inc
mov
movsl
rorl
or
scas
or
pop
icebp
aad
or
je
das
bound
leave
mov
cmpsl
inc
cmp
sbb
popf
int3
or
inc
inc
push
xchg
fmuls
and
sub
inc
or
rcrb
mov
fmuls
mov
notb
cmp
popa
mov
scas
movsl
mov
into
push
cltd
popa
pop
pushf
mov
and
cld
cmpsl
aad
xchg
lret
xchg
inc
shr
popf
mov
jge
std
and
mov
push
and
xor
std
jno
movsl
ljmp
mov
push
pop
popf
mov
addl
mov
mov
adc
pop
roll
or
mov
sub
or
or
sbb
push
nop
or
xor
movsb
jmp
in
adc
or
test
xchg
adc
pop
or
jo
sbbl
jnp
sub
arpl
pusha
or
add
call
out
leave
inc
push
inc
inc
mov
sbb
sbb
aam
mov
add
rcrb
es
xchg
sbb
add
test
push
or
fnstsw
xchg
xchg
dec
test
sbb
dec
adc
xor
xchg
nop
sub
leave
sbb
adc
mov
gs
es
inc
je
xchg
shrb
dec
jbe
pop
rorb
push
sbb
lret
test
inc
negb
cmp
cmp
popa
ret
add
sbb
mov
push
cmpsb
xor
mov
lret
jmp
pop
jno
sahf
sbb
or
fistpl
repnz
jmp
arpl
adc
push
shl
pop
push
mov
jns
outsl
fwait
sbb
pop
arpl
lods
cmp
int3
mov
mov
ret
inc
repz
repnz
ret
jns
nop
pop
push
in
pop
add
js
or
mov
hlt
iret
outsl
cmc
scas
aad
mov
pop
pop
jl
adc
push
out
xchg
ljmp
mov
les
clc
dec
mov
xchg
mov
add
cli
dec
adc
sbb
sbb
push
in
fistl
test
sbb
jge
lods
fstpl
jns
aas
out
mov
add
jg
lahf
ret
pop
adc
outsl
sbb
or
sbb
sbb
jp
and
adcl
xchg
sbb
fsts
out
inc
jo
xor
repz
or
outsb
lods
dec
sub
adc
test
sbb
or
fwait
lea
cltd
in
ljmp
cmpl
xor
xor
scas
ja
add
dec
pop
xchg
pop
xchg
jmp
mov
xchg
scas
pop
add
popf
cld
adc
or
lahf
dec
inc
in
popf
mov
out
dec
into
out
popa
clts
pop
leave
decb
fstpl
icebp
push
xchg
sbb
loope
incl
and
mov
mov
es
xor
pop
mov
popf
jge
sbb
cld
push
ret
pop
pop
jge
nop
lds
adc
jae
aad
adc
rclb
mov
pop
or
jns
bound
outsl
add
das
dec
dec
or
repz
dec
outsl
xchg
adc
out
push
cli
dec
or
jmp
out
in
mov
repz
repz
add
adc
add
jg
in
adc
xchg
add
xor
jns
aad
test
mov
shll
dec
cltd
dec
push
ret
sbb
out
jnp
rcll
add
out
cs
sbb
cs
nop
jecxz
addl
jno
sbb
stos
xchg
adc
and
sti
out
push
sbb
adc
mov
push
mov
mov
dec
push
loope
popa
sbb
daa
push
lea
xor
xchg
ljmp
outsl
lds
add
adc
add
rol
inc
dec
dec
adcl
test
nop
movl
inc
gs
repz
repnz
and
mov
adc
addr16
sbb
xchg
das
negb
pop
xchg
lcall
scas
jo
aas
mov
sti
jo
add
fnstsw
repz
add
pop
test
jp
icebp
jne
test
stc
movsb
in
cltd
fwait
push
sbb
xchg
clc
and
icebp
pop
enter
lods
cmc
push
clc
adc
add
mov
push
sub
jns
jo
cli
cmp
xor
and
lods
pop
fmuls
or
mov
aas
push
sbb
pop
movsl
repz
scas
testl
xchg
cltd
mov
mov
in
pushf
aad
jge
add
in
adc
xchg
dec
lea
movsb
movsl
loopne
dec
jle
inc
pushf
and
lcall
hlt
cli
iret
dec
mov
dec
adc
add
xchg
push
sbb
popf
jl
mov
outsb
sarb
mov
or
data16
cltd
cmp
in
and
hlt
dec
stc
sub
fmull
inc
jne
xchg
mov
jg
xor
push
mov
mov
or
pop
rclb
inc
add
jo
push
adc
in
test
mov
repz
lret
inc
popa
inc
push
pop
sbb
jo
aad
aam
testl
pop
in
fisubrl
or
add
mov
ljmp
jns
pop
jae
outsb
out
pop
adc
inc
cwtl
push
jno
push
cmp
jno
or
pop
sbb
outsb
and
or
xor
or
lods
jge
sbb
add
or
fs
inc
imul
mov
mov
dec
xor
popf
push
lea
dec
lock
mov
xor
cmp
ds
inc
jge
jg
vandnps
adc
jne
push
mov
outsl
inc
fdivs
loope
clc
or
mov
push
hlt
dec
sbbl
cmp
aad
incb
cmc
hlt
dec
jmp
insl
dec
mov
lea
xorl
mov
jle
adc
clc
ja
dec
cwtl
sub
mov
js
or
mov
outsl
dec
aad
cmc
hlt
dec
adcl
adc
jne
push
mov
outsl
fdivrs
mov
clc
outsl
jl
push
js
and
mov
dec
and
mov
sub
lret
pop
sub
xor
insl
or
dec
or
or
xchg
mov
outsl
cmp
loope
jmp
aad
fdivs
rorb
sbb
js
sub
mov
aad
sub
scas
sbb
jge
push
push
mov
es
push
clc
int3
stos
xchg
mov
pop
lcall
adc
rolb
outsl
mov
lahf
push
sbb
insl
shrl
push
xchg
push
hlt
dec
sub
ja
inc
cmp
int3
mov
mov
push
dec
daa
and
arpl
or
rolb
insl
hlt
dec
mov
mov
xorl
mov
add
fdivs
add
clc
outsl
dec
cwtl
push
hlt
dec
sbbl
rorb
sub
aad
ret
clc
mov
outsl
int
cs
mov
nop
test
jne
push
dec
cmp
mov
xor
or
rolb
ja
push
adc
dec
mov
inc
test
cltd
xchg
inc
int
or
inc
and
mov
lods
fs
movsb
and
loope
jmp
cmp
xor
cmp
jmp
aad
dec
addl
inc
xchg
arpl
out
add
pop
or
popl
pop
cltd
pop
lret
cmp
nop
mov
adc
mov
stos
imul
push
push
imul
imul
imul
mov
scas
test
dec
test
js
xor
decl
push
pop
push
mov
sbb
arpl
pop
pop
add
cmp
and
sbb
sbb
sbb
cmpsb
inc
pop
inc
inc
imul
aad
cmp
jg
cwtl
mov
mov
sub
cmp
cmp
cmp
cmp
adc
xor
lcall
js
int3
xor
cmc
cmp
jg
leave
push
dec
iret
cmp
sbb
dec
std
adc
ficoms
push
dec
cmp
sbb
sub
sbb
rcl
shlb
ds
arpl
rol
cs
xor
cmp
sbb
sub
sbb
lcall
jmp
push
xor
sbb
add
popf
sub
addr16
mov
mov
ret
xor
pop
and
push
sub
xor
jge
sbb
outsl
fst
pop
cld
aas
leave
pop
gs
adc
lret
repz
mov
cmc
and
movb
push
xchg
and
clc
insl
and
insl
orl
shll
jmp
or
aad
inc
xor
mov
int
ss
mov
cmc
and
mov
mov
xor
dec
or
jnp
and
in
shl
dec
fnstsw
iret
sbb
pop
dec
hlt
inc
or
fnstcw
aad
mov
test
push
adc
dec
aas
mov
fldcw
or
clc
jno
xlat
les
jnp
adc
std
jae
xor
sbb
sqrtps
sub
sbb
or
pop
pop
or
es
test
xchg
mov
jnp
xchg
jg
in
lea
scas
in
addr16
xchg
lcall
fimull
push
pop
cmp
pop
ret
mov
adc
mov
jo
out
inc
inc
jno
jb
cmp
scas
adcl
add
add
test
leave
jnp
in
lret
incb
cmp
jp
push
adc
andl
out
sbb
gs
pop
cli
push
icebp
out
mov
ds
push
push
dec
pushf
xchg
dec
or
add
test
or
test
adc
adc
dec
das
push
lret
mov
loope
or
jmp
mov
negl
inc
lcall
lock
add
pop
adc
adc
mov
lret
cld
test
sub
cmp
pop
lcall
ficoms
fistl
in
popa
pop
gs
jne
pop
or
fsubs
loopne
lcall
dec
jns
gs
pop
dec
cmp
adc
inc
in
inc
mov
push
leave
lea
and
mov
or
imul
dec
enter
xor
mov
sbb
push
sbb
scas
andb
lret
sarb
lea
jmp
mov
mov
bnd
sub
xor
lds
xchg
icebp
mov
push
aad
jne
add
jns
xor
and
push
xor
mov
or
push
xor
gs
lea
sub
lea
fidivl
int
add
inc
ljmp
mov
out
push
mov
cmp
lds
cmpl
jns
add
mov
lds
clc
and
jnp
int
adc
insl
fstps
adc
cmc
int
ljmp
add
sub
jmp
pop
out
adc
mov
in
mov
inc
test
ficomps
lock
add
imul
add
cld
pusha
dec
xchg
sbb
enter
pop
jnp
cltd
std
test
mulb
shlb
test
push
dec
aad
int
xor
and
ja
pop
aad
sbb
in
xchg
jg
dec
insl
js
jl
add
adc
xor
daa
nop
out
push
int
pop
aam
lds
and
aad
cmc
dec
xchg
popf
mov
push
sbb
adc
xor
push
icebp
dec
cmp
mov
sub
inc
push
shl
dec
cmp
mov
sub
dec
aas
fisubl
mov
sub
inc
push
shl
dec
cmp
mov
sub
inc
push
rolb
pop
xlat
mov
or
arpl
push
push
shl
dec
cmp
mov
sub
inc
sbb
arpl
push
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
xchg
in
push
outsl
inc
push
shl
dec
cmp
mov
sub
inc
push
shl
dec
cmp
push
xor
nop
repz
cmp
mov
sub
inc
push
shl
dec
out
pop
imul
cmc
aam
mov
jnp
mov
stc
mov
jmp
dec
mov
rsqrtps
lret
or
fcomps
dec
std
jnp
insl
jns
push
lea
xchg
cld
das
xchg
gs
push
or
movsl
or
out
xchg
mov
inc
stos
xchg
mov
adc
outsb
pop
fldt
les
dec
sbb
xchg
sahf
add
mov
push
mov
aad
test
xor
test
gs
imul
sbb
sbb
inc
pop
jne
aas
xor
insl
aas
in
sbb
push
adc
sbb
jle
jmp
jne
mov
je
push
bound
popa
sbb
in
mov
into
out
aad
jns
jg
insl
inc
test
mov
mov
jge
insb
mov
mov
adc
stc
adc
popa
push
xchg
mov
mov
test
adc
inc
inc
fisubrs
xlat
adc
movsl
mov
and
xchg
lret
ret
inc
adc
fcomps
and
call
nop
sbb
movsl
cmpsl
push
add
or
add
push
jbe
mov
pop
lds
jno
lods
push
push
dec
lods
lock
js
mov
aad
jecxz
in
ljmp
mov
mov
cmp
test
pushl
mov
fs
xor
jmp
ljmp
adc
ljmp
mov
mov
lds
aas
sbb
das
adc
jge
sbb
mov
xor
pushf
inc
testb
pop
jbe
cmp
repz
adc
cltd
add
inc
xchg
insl
das
pop
cwtl
add
cld
test
insb
mov
test
xchg
dec
cs
rol
mov
int
cmp
imul
mov
aad
enter
or
lods
add
mov
sbb
rcll
outsb
mov
mov
push
cmp
fwait
cmp
outsb
pop
jne
test
pop
int3
xchg
cmpsl
dec
popf
dec
mov
mov
stc
adc
xchg
jae
dec
cltd
xor
adc
nop
xchg
cmp
jp
xor
sbb
in
lds
dec
jmp
or
or
out
sbb
jmp
jmp
jb
dec
negl
icebp
mov
int3
pop
insl
test
mov
or
cmpsb
mov
lock
mov
outsl
aad
adc
in
enter
jo
jmp
test
jecxz
xor
and
xor
dec
sarl
ficoms
adc
in
fs
mov
nop
pop
orl
imul
inc
adc
lods
stc
orl
mov
out
test
lods
mov
movsl
sbb
ss
and
cmp
jmp
sbb
roll
dec
push
push
shl
mov
aas
sbb
add
inc
pop
mov
cmp
dec
mov
pop
sub
mov
outsl
out
push
pop
mov
sub
dec
sbb
jecxz
adc
out
sbb
add
shll
lahf
test
jmp
xlat
pop
jp
pop
add
adc
jge
adc
inc
ds
cwtl
cmp
mov
addr16
pavgw
ret
es
stc
or
cmp
or
sti
mov
jne
pop
push
dec
inc
lods
jg
jne
mov
mov
push
outsl
ljmp
mov
xchg
mov
and
loopne
push
sbb
adc
popa
sbb
mov
imul
push
push
pop
shrl
dec
decl
das
inc
mov
lods
sub
or
imul
iret
cmpsb
test
jmp
call
pop
dec
push
test
sub
add
push
pop
test
cmp
test
cmpsb
imul
ljmp
lret
insb
pop
in
js
push
scas
dec
nop
cmc
mov
push
xchg
mov
mov
in
pusha
mov
push
movsl
addr16
mov
add
sub
lods
cmp
xchg
mull
lret
add
jge
stos
faddl
mov
inc
xor
sbb
ds
test
push
out
fnstsw
clc
push
ret
sti
push
andl
and
cmp
test
int
ficomps
or
popf
frstor
mov
pusha
mov
mov
push
sub
inc
imul
fstl
je
bound
dec
mov
cmpsb
cwtl
cld
or
mov
mov
jns
xor
inc
inc
dec
iret
icebp
dec
out
arpl
int
arpl
xchg
outsl
or
or
cmp
jmp
dec
jg
scas
icebp
jl
adc
jnp
movsb
xchg
sbb
loopne
les
cmpsl
int3
mov
mov
sub
das
aam
rclb
or
jno
or
pop
les
arpl
mov
aas
orl
outsb
cmp
cmpl
jns
mov
das
inc
push
cmp
jg
cmp
aam
adc
ds
jge
inc
or
daa
movlps
inc
js
ljmp
nop
bound
sub
push
mov
daa
lret
adc
sbb
inc
out
jb
flds
ja
sub
cmp
add
enter
fwait
test
push
loop
sbb
mov
jg
pop
das
daa
mov
xchg
lea
pop
pop
adc
or
pop
sti
repnz
shlb
adc
and
lods
popfw
insl
cltd
call
out
int
add
xor
popf
mov
or
out
into
test
adc
test
xor
test
xor
pop
scas
or
mov
nop
add
pop
jno
push
sbb
test
popa
jno
xor
mov
cmp
mov
xchg
mov
mov
cmp
dec
mov
xor
mov
loope
add
pop
dec
lods
test
arpl
push
lret
pop
mov
pop
imull
cmp
test
out
loopne,pt
inc
adc
mov
shll
das
inc
cwtl
dec
cmpb
sbb
cmp
push
or
in
mov
in
or
out
roll
adc
mov
ffree
sub
jae
and
xchg
imul
cmpsl
push
push
push
jmp
pop
test
stc
xchg
cmc
addr16
jns
dec
mov
pxor
out
dec
fistl
nop
pop
pop
mov
lea
insl
xor
mov
xor
sub
cmp
or
sub
push
test
inc
mov
sub
lds
add
sub
cmp
adc
mov
dec
iret
mov
inc
or
fwait
mov
dec
jb
mov
inc
inc
lods
cltd
dec
shl
mov
cmp
in
adcl
cmp
xchg
ja
lcall
add
scas
cld
jg
lods
and
push
mov
xchg
xchg
pushl
dec
dec
xchg
ss
pop
sub
ja
xchg
arpl
icebp
es
xorl
mov
nop
add
add
cmp
sbb
cmp
mov
jmp
push
xchg
dec
fwait
cmp
fsubr
addr16
mov
pop
pop
cs
xchg
and
ficoml
ss
sbb
lods
ss
cmp
adc
pop
pop
pop
cmp
adc
jle
mov
adc
out
or
adc
fidivl
shr
mov
jecxz
sub
dec
out
mul
loope
mov
cli
in
push
inc
shl
adc
fld1
mov
std
cmp
xlat
pop
mov
dec
mov
dec
movsl
sbb
sub
fucom
sbb
adc
in
jne
adcb
pop
sbb
add
imul
roll
cmp
icebp
pop
outsl
std
xorl
mov
jge
sbb
mov
arpl
in
dec
jns
leave
enter
jns
or
pop
or
sti
push
sarb
jns
inc
cmpsl
enter
jns
insl
or
cmp
pop
jns
mov
sbb
stos
push
or
cmp
sbb
pop
out
mov
test
mov
mov
mov
adc
dec
mov
bound
enter
xor
sub
jb
scas
aam
or
lods
push
das
dec
mov
or
in
test
test
xchg
jno
xor
sub
cmpsb
std
outsl
stc
ret
in
ja
cmp
mov
jl
adc
int
sub
cltd
xor
adc
enter
jl
sbb
pop
iret
popf
dec
jb
and
mov
pop
call
mov
js
test
push
jge
jmp
dec
inc
add
inc
js
std
and
pop
mov
pushl
mov
pusha
or
sub
dec
adc
push
dec
cltd
std
mov
in
inc
fnstcw
adc
jge
push
insl
imul
pushf
rcrb
shlb
stc
jbe
sub
xchg
and
fdivl
push
sti
xor
int
inc
xchg
data16
lock
add
or
rcr
add
test
andl
aad
jo
push
subl
mov
cmc
lcall
addr16
pop
adc
dec
mov
push
aas
decl
mov
imul
fdivs
push
outsl
or
mov
fwait
sbb
repz
shl
jo
dec
adcb
mov
adc
sub
jge
push
sbb
rclb
hlt
and
imul
mov
shlb
enter
push
insb
pusha
cs
cltd
mov
jp
pop
sub
jmp
push
in
cmp
or
push
das
sbb
fsubr
and
cmp
sbb
xchg
xor
pop
in
hlt
mov
adc
mov
in
sub
mov
or
sbb
fnstsw
xor
and
and
adc
enter
jne
ja
or
xor
and
or
jne
mov
or
popf
gs
or
adc
adcl
pop
shl
inc
pop
mov
je
xlat
push
xor
call
scas
arpl
adc
inc
mov
lea
mov
imul
lods
fnstenv
mov
popa
jle
fwait
mov
mov
in
out
inc
cmpsl
mov
jnp
cmpsl
dec
in
jp
std
adc
jp
out
cltd
inc
cmpsl
out
cltd
fisubl
stc
mov
adc
jp
jecxz
ret
ds
insb
and
cmpsl
mov
out
inc
jno
add
test
push
popf
cmpsl
mov
nop
leave
rcrl
xlat
bound
pop
nop
stos
jae
aam
into
nop
xor
push
shrb
inc
bound
lret
jnp
or
sub
mov
mov
dec
nop
montmul
cmpsb
inc
ffree
jge
add
xor
std
jg
pop
mov
add
pop
loope
adcb
or
push
and
lea
insl
inc
adc
call
popf
mov
add
cwtl
dec
mov
add
cmp
repz
mov
test
lea
repz
mov
inc
pusha
xor
daa
lods
jbe
jge
lods
xorl
mov
sbb
js
sahf
jge
push
adc
jno
jge
in
mov
aas
aam
push
inc
mov
mov
push
jb
addl
add
adc
and
mov
mov
push
or
xchg
dec
dec
orb
or
sub
dec
fs
hlt
mov
movsb
loop
xchg
mov
push
iret
adc
loope
cmpsl
gs
ljmp
testl
lcall
mov
data16
clc
xor
mov
cmp
stc
mov
xchg
dec
lcall
xchg
fsqrt
mov
orl
mov
jno
lea
mov
push
mov
cmpsl
xlat
dec
pop
mov
call
add
sub
mov
lret
jae
stos
add
jae
push
mov
movsl
fnsave
cmpsl
icebp
rcr
mov
xchg
scas
mov
adc
aas
sbb
pop
fcos
xchg
fldt
pop
fists
mov
lea
pop
dec
add
adc
in
rcl
push
dec
sub
or
jge
rolb
in
shr
testl
shlb
mov
cmp
inc
or
sub
push
jg
cwtl
addr16
jno
adc
imul
js
loope
fdivl
inc
testl
in
out
mov
or
mov
enter
inc
inc
add
popf
mov
jg
cmp
cmpl
movsl
mov
xor
push
das
rcrb
sbb
mov
aaa
mov
js
ds
lcall
sbb
jp
and
fiadds
add
fisubrs
jl
xor
test
imul
cwtl
in
add
in
mov
inc
insl
repnz
or
lcall
push
cmp
roll
xor
orl
pop
cmp
mov
lea
int
adc
adc
gs
mov
jae
add
int
mov
shrb
jl
fsubl
js
cmp
jns
mov
dec
xor
cmp
fidivrs
adc
and
jbe
sbb
push
jne
sub
imul
test
lds
pop
inc
addr16
in
arpl
dec
arpl
adc
and
aad
lea
inc
cmpsb
nop
ret
xor
push
dec
popf
int
rorl
cmpsb
ss
pusha
ds
xchg
inc
dec
rorb
inc
and
xchg
fsts
cmpsb
cli
and
inc
rorb
loope
int
xchg
lret
mov
adc
dec
out
out
mov
in
js
sbb
inc
cmpsb
cltd
addl
outsl
rorw
add
mov
jnp
mov
fisttps
mov
fidivl
sub
jno
gs
inc
add
sub
mov
inc
mov
js
jb
add
ja
cmp
dec
sub
fnstenv
dec
fs
syscall
xchg
dec
xchg
dec
addr16
mov
xor
cmp
jo
fld
pusha
xor
jmp
lret
cmp
add
inc
cmp
fwait
ret
fstpl
pop
and
jns
fmul
jmp
xchg
int3
mov
xor
fs
push
stos
sbb
add
xchg
cmp
aad
adc
push
jmp
shll
push
or
xor
sbb
ja
lahf
popf
mov
or
adc
stos
subb
and
movsl
push
xchg
mov
adc
sub
je
xchg
fcoms
lods
in
lods
or
in
ljmp
mov
and
xchg
dec
and
outsb
sbb
mov
les
scas
inc
pop
sub
cs
mov
mov
sbb
cwtl
sbb
outsb
popa
in
andb
jp
cmp
ret
mov
jae
cs
push
lock
sbb
mov
xchg
mov
push
xchg
push
mov
cmc
or
fnsave
test
insl
add
ret
popf
fs
inc
mov
insl
adc
or
scas
daa
hlt
add
pop
xor
cmp
xor
sub
adc
rclb
je
and
inc
xor
in
inc
arpl
push
fdivs
push
mov
mov
push
pop
jmp
mov
leave
jns
addr16
xor
adc
xchg
push
add
or
push
addr16
adc
jo
mov
mov
dec
ret
or
inc
lahf
dec
out
shrl
addb
imul
bound
add
xor
lods
testl
int3
push
pop
subl
add
add
fistps
int
int3
gs
or
pop
xlat
pop
mov
lahf
push
aad
and
ss
int
or
xchg
imul
jmp
movsl
sbb
addr16
mov
push
leave
sbb
sbb
inc
sbb
or
inc
or
sbb
lods
popa
jne
movsl
pop
inc
jg
pop
cltd
addb
inc
nop
sbb
push
add
adc
inc
push
gs
mov
xor
inc
imul
mov
mov
gs
mov
popa
inc
gs
movsl
scas
add
sbb
push
leave
movsl
cli
lods
jb
mov
andb
xchg
dec
adc
int
dec
nop
pop
arpl
arpl
fiadds
in
dec
push
fildll
ljmp
imul
mov
movsl
xor
or
or
mov
test
jo
cld
adc
test
jb
mov
out
test
fstpt
lcall
adc
jmp
test
popf
ljmp
mov
sbb
cmpsl
roll
lds
add
xor
popa
mov
adc
sbb
cli
lds
or
or
arpl
jne
lods
jb
lds
push
nop
or
and
lods
mov
cmp
adc
outsl
fs
inc
popa
sub
or
out
add
popa
xchg
daa
xchg
dec
dec
lret
bts
movsl
pop
insl
fdivrl
popf
mov
xchg
lods
sbb
push
or
jne
mov
inc
pop
add
test
adc
pop
iret
out
adc
add
or
jns
mov
daa
jae
pop
xor
mov
pop
dec
in
add
mov
movl
cmp
mov
out
inc
je
je
dec
insb
mov
dec
pop
jno
hlt
test
adc
fwait
jne
or
jmp
ficoml
jge
ss
lods
jnp
out
mov
hlt
pop
in
adc
out
pushf
fstps
cmpb
jnp
jae
sbb
cmp
into
int
xchg
jl
push
inc
inc
test
ss
fldenv
mov
in
push
mov
mov
adc
stos
int3
adc
psubusw
les
mov
dec
xorb
push
or
loope
addr16
mov
hlt
insl
sahf
mov
mov
sub
or
loopne
mov
test
mov
jg
pop
push
xor
sarl
enter
sub
mov
mov
mov
pop
add
jae
or
into
adc
lds
loope
mov
adc
inc
jbe
lods
add
ja
vandnps
in
dec
clc
ja
dec
loopne
test
out
xchg
add
iret
jmp
mov
xor
dec
push
addr16
add
inc
mov
add
out
int3
dec
mov
add
mov
imul
inc
lock
rolb
pop
sub
jae
test
daa
xor
enter
push
sbb
add
std
xchg
dec
cld
sbb
push
sbb
insb
push
ljmp
jne
adc
sub
lds
or
xchg
sbb
repnz
loopne
adc
pop
fs
gs
add
ret
xchg
subl
push
rcrb
dec
sti
pop
jne
push
std
aas
jo
dec
aad
orb
insb
movsl
push
mov
fisubrs
dec
insb
adc
sub
jp
outsl
insl
push
adc
pop
inc
lea
cmp
pop
dec
add
insl
mov
xor
test
push
cli
cmc
rorl
rol
adcb
mov
adc
or
push
adc
add
inc
aaa
pushf
sub
movsl
push
imul
lret
sbb
push
jp
pop
fwait
imul
pop
jo
fs
sbb
outsl
push
ud2
jmp
outsl
loope
jecxz
add
sbb
imul
adc
mov
je
cld
outsl
in
fsubs
sbb
jge
pop
repz
inc
dec
lea
sbb
imul
outsl
int
pop
roll
lea
or
daa
mov
in
add
daa
xchg
movsl
sbb
xorb
mov
cld
out
add
flds
aaa
rorl
pop
xchg
push
and
cmp
or
push
orb
dec
xor
push
push
js
adc
fisttpll
xchg
dec
sbb
xchg
pop
inc
dec
fiaddl
arpl
lret
cmp
lcall
adc
sbb
test
scas
mov
mov
and
enter
cmc
shll
fimull
pop
push
movsb
inc
dec
lea
xchg
mov
sbbl
xor
add
cld
fwait
add
add
mov
add
pushl
ror
push
movb
inc
stc
cmc
pushw
popfw
pushf
call
dec
test
clc
cmp
jmp
jmp
pop
mov
jnp
fdivrl
jp
pop
adc
adc
mulb
dec
or
jne
call
jb
mov
adc
test
or
sub
outsb
mov
xor
sub
mov
int
cwtl
orb
jae
testl
add
je
sbb
inc
and
pop
pusha
mov
push
lea
jmp
cmp
mov
sbbb
std
or
ja
jbe
mov
cmovp
xlat
push
fs
inc
xchg
adc
push
mov
fidivrs
out
mov
ljmp
clc
inc
negl
outsb
pop
shlb
fdivr
adcb
jns
je
cwtl
xchg
out
inc
fisubrl
repz
cwtl
repnz
loope
sarl
jns
pop
sbb
loopne
out
fnstsw
jns
jp
inc
mov
fucomi
outsb
jmp
push
jmp
pusha
add
pushf
or
movb
lea
je
jmp
inc
jmp
lea
mov
pushf
mov
movw
pushl
seto
mov
mov
movsbw
bswap
mov
pusha
mov
call
test
xor
mov
jmp
pushf
lea
jae
call
pusha
pushf
pushl
ret
lods
pushf
neg
pushf
lea
je
rol
jmp
cmc
ror
call
pusha
call
pushf
push
lea
jne
test
btc
cmc
shrd
mov
cmp
or
jmp
call
lea
jb
call
xchg
lea
mov
pushf
pushl
popl
pusha
pushf
mov
pop
mov
call
push
bt
sub
pusha
test
mov
cmc
pushl
popl
pushf
call
insl
out
mov
inc
xchg
pop
push
fdiv
loope
cmp
loopne
jbe
jle
jno
mov
jno
outsl
loopne
xor
je
pop
sub
jno
rcll
add
mov
dec
xchg
lds
sbb
mov
test
mov
roll
cmp
sarl
jae
mov
mov
dec
and
rcl
cmc
mov
cmp
test
call
call
dec
mov
jb
stos
jecxz
cli
and
in
daa
movsb
outsl
add
push
or
test
push
jle
jne
dec
dec
in
mov
cmp
mov
rcrb
cmpsb
daa
sbb
stos
call
bswap
mov
movb
movb
pushf
push
lea
jmp
add
movb
test
cmp
jmp
pushf
call
add
pushf
movw
cmp
cmc
mov
pushf
cmp
test
call
cli
repnz
xchg
jns
or
inc
test
add
fs
mov
nop
xchg
mov
shr
jns
cmp
sub
pop
cltd
int
outsb
mov
ss
mov
test
sub
cmpsl
add
inc
js
je
jb
arpl
jae
call
out
adc
in
push
mov
imul
cmp
outsb
inc
outsb
xchg
xchg
dec
ret
push
rolb
sub
inc
jo
jae
fnstsw
gs
loope
nop
jnp
mov
in
mov
sti
cld
pop
push
insb
hlt
iret
push
int3
or
mov
shrb
jnp
aam
add
test
xchg
into
outsb
mov
add
cltd
ljmp
add
sub
and
xor
push
lods
int3
popf
insl
cs
hlt
inc
xlat
fucomi
mov
xor
popf
test
push
fwait
ja
cmp
push
cmp
cmp
movsw
sub
es
cmp
iret
sbb
int3
cmp
lahf
mov
pop
aam
push
pop
pop
addb
xchg
adc
ss
sbb
push
add
mov
cs
lods
jbe
jmp
mov
lea
ja
clc
test
clc
add
stc
or
push
movl
pushl
pushf
lea
je
clc
test
test
cmp
call
hlt
jbe
cmp
push
sbb
mov
rol
pop
xchg
xor
add
int3
inc
in
ret
imul
loop
nop
rcl
aas
jp
dec
gs
andl
mov
xchg
iret
dec
push
cld
shlb
lahf
mov
popf
inc
add
loope
nop
jb
xor
ret
ss
cmc
adc
xchg
fstl
xor
sub
or
xor
or
jmp
jbe
xor
pop
je
leave
push
inc
cltd
inc
mov
dec
xchg
cmpsb
dec
adc
push
outsb
fistl
jp
sti
xor
movsb
cld
stc
mov
aad
ret
or
sarb
test
je
mov
mov
cld
pop
cmpsl
repnz
leave
add
mov
cmpsb
jmp
jb
or
xor
rcrb
test
mov
ret
or
sub
fs
dec
outsb
sub
fwait
add
test
xchg
mov
adc
test
daa
or
xor
pushf
cwtl
jns
mov
xor
outsl
out
int
in
pop
lods
jbe
adc
mov
pop
enter
mov
incb
pop
add
xchg
cmpsb
insb
popa
sbbl
sbb
int3
jmp
add
pop
idivb
dec
aad
cwtl
mov
data16
mov
push
and
xor
jae
lods
jge
mov
jne
faddl
jmp
bound
adc
or
test
inc
dec
int3
push
bnd
dec
and
xchg
neg
pop
mov
jae
jnp
pushl
pusha
push
lea
call
pusha
lea
jmp
mov
lea
call
stc
bt
cmp
call
lea
je
cmp
or
push
jmp
lea
ja
mov
call
pushf
lea
je
pusha
push
mov
jmp
ficoms
push
mov
mov
mov
aaa
notb
sub
xchg
rcrl
lock
fists
inc
push
mov
xchg
and
jae
setae
in
ja
shlb
jae
dec
cmpsb
repnz
sub
mov
pop
arpl
pop
sarb
jnp
test
out
scas
mov
addb
lea
sub
cwtl
and
xchg
ja
int3
jnp
mov
xor
jge
jmp
add
cmp
ret
push
stos
ss
icebp
or
and
or
pop
inc
adc
push
dec
leave
add
mov
xchg
xor
in
inc
push
je
jo
pop
in
fwait
or
sbb
or
nop
les
leave
cmc
dec
fisubrs
mov
inc
fnsave
fs
inc
stos
mov
jae
rcrl
fdivr
and
adc
stos
xchg
or
mov
and
sub
push
loop
cltd
xchg
push
pop
inc
in
dec
mov
xchg
jmp
test
and
dec
and
jmp
mov
jmp
jle
pop
jnp
push
int
sbb
mov
dec
or
and
inc
mov
mov
add
dec
adc
ja
and
cmp
mov
cmp
lret
movl
scas
sbb
outsb
loopne
or
insb
cmp
push
sbb
push
or
pop
jae
cmp
mov
xchg
jne
jno
popf
rclb
mov
sahf
cmc
sbb
add
movsbl
call
jnp
sbb
adc
sub
and
and
push
pop
and
and
push
push
daa
pop
mov
jmp
pushl
lea
je
lea
lea
jmp
call
mov
pushf
movl
call
movb
mov
pushf
jmp
lea
jb
stc
cmp
pusha
lea
ja
ror
cmp
adc
add
shl
mov
pusha
bt
cmp
lea
ja
pusha
lea
jb
pusha
cmp
movb
pusha
jmp
bswap
lea
pusha
call
push
jmp
movl
pushl
pusha
mov
pushf
lea
jmp
mov
fst
push
repz
push
mov
stc
dec
les
outsb
pop
stc
les
sub
xchg
cmp
iret
push
ja
mov
mov
sti
sub
lea
mov
jno
jnp
shlb
pop
inc
lret
push
sarl
push
testl
sbb
xchg
cmp
mov
xor
pusha
ret
sub
cltd
imul
mov
in
mov
imull
sub
movsl
sbb
sub
xchg
ds
jnp
jmp
jmp
and
fsubrl
call
pusha
movl
pushf
jmp
mov
not
lea
pusha
jmp
iret
xchg
inc
jmp
mov
cmp
addr16
lret
aam
sbb
fs
fimull
enter
cmc
mov
int
and
outsl
sub
or
push
sbb
and
pop
outsb
out
xchg
xchg
cmpsb
adc
rcr
sar
mov
mov
sbb
cltd
push
and
xchg
repz
mov
jae
dec
das
and
shlb
xchg
sub
jmp
sahf
jmp
pusha
pushf
lea
call
jmp
push
pushl
lea
call
push
sub
pushf
pushf
pushl
pushl
lea
jne
call
cmc
clc
call
cmp
clc
or
pusha
lea
jne
cmp
mov
and
mov
pusha
pushf
test
or
call
push
aad
xor
lret
nop
push
dec
push
in
std
mov
sbb
mov
pop
add
sbb
popf
lahf
cmp
fs
and
mov
and
mov
daa
int
daa
mov
pop
iret
shr
pop
leave
loope
mov
imul
addr16
and
adc
out
xorl
ror
jmp
dec
loop
ja
gs
xchg
aas
fs
cs
je
bound
adc
popa
rcrb
and
popa
cltd
call
mov
je
outsl
aas
pop
dec
adc
imul
in
ret
mov
push
jge
scas
jo
in
push
out
fldl2e
dec
jmp
sbb
imul
dec
lret
movsl
or
in
push
test
pop
cld
cltd
test
xchg
fidivrs
push
mov
xor
sub
mov
mov
add
js
dec
jmp
stos
faddp
cmp
test
inc
dec
jmp
pop
in
iret
jle
adc
in
mov
mov
jmp
push
das
add
xor
xchg
sbb
faddp
push
loop
mov
push
xchg
rolb
insb
cmp
pushf
mov
xor
or
and
test
mov
push
dec
xor
fucomip
bound
dec
cmp
and
cmc
loopne
mov
push
mov
sbb
sbb
shr
add
mov
data16
jae
dec
mov
pushf
lea
jmp
pusha
movb
pushf
lea
je
pushf
mov
movb
call
pusha
sub
insl
call
mov
fsubr
add
popf
sarl
pop
filds
add
sbbb
pop
or
addl
sarl
mov
add
outsl
aaa
push
pop
jns
pusha
pop
xchg
test
and
stos
and
sbb
outsb
sbb
sub
jmp
and
test
jo
mov
aam
pushf
cmp
int3
aaa
sbb
imul
test
xchg
out
not
xchg
add
les
jae
mov
add
sub
add
add
and
pop
add
pop
add
or
add
add
add
sbb
xor
mov
add
pushf
dec
stc
test
stc
clc
cmp
seta
lahf
lahf
lea
lahf
not
mov
jmp
call
inc
pushf
movb
adc
pushf
pushf
mov
pushl
ret
jmp
lea
jb
stc
call
add
and
ljmp
icebp
jns
lea
loope
addr16
inc
nop
mov
push
inc
icebp
cmpl
cli
test
test
idiv
pop
lds
loop
rcrl
int3
xor
clc
cmp
sahf
mov
stc
test
call
mov
call
inc
inc
inc
inc
cmp
rol
dec
push
xchg
add
jno
shld
inc
mov
ror
cmc
neg
mov
cmp
push
movsbl
dec
mov
push
jmp
jmp
scas
adc
xchg
sub
xor
test
adc
push
xchg
and
fidivrs
jl
adcb
orb
sbb
xchg
arpl
mov
push
les
stos
pop
bound
shll
xchg
jp
out
in
mov
and
cmp
loop
and
sbb
xor
sbb
inc
int3
loop
inc
jp
inc
dec
mov
mov
icebp
lock
mov
sub
or
sub
pop
add
enter
and
add
dec
int
out
ljmp
ret
ja
mov
push
jmp
jmp
lea
call
push
pushf
push
pushl
adc
pusha
lea
call
push
pusha
lea
jb
pushf
push
pushl
ret
lea
call
pusha
pusha
lea
jne
push
call
lea
je
movsbw
not
mov
mov
pusha
pop
lea
call
mov
lea
call
jmp
lods
jmp
add
mov
cmp
push
movsl
xchg
lcall
test
lcall
mov
gs
mulb
cmp
sub
sbb
xor
ud1
lock
cmpsb
xor
inc
ret
and
cltd
and
divb
jae
scas
push
out
iret
outsb
scas
mov
stos
dec
xlat
sub
cmp
inc
push
dec
sub
sbb
inc
test
push
cmp
or
pop
ss
mov
movl
jae
int3
and
arpl
jp
cmp
fistps
or
test
dec
lret
lret
mov
pop
and
pushf
push
shll
hlt
mov
in
enter
addb
out
vmovhlps
out
in
repnz
push
in
movsl
push
lods
dec
cmpsl
out
sbbb
arpl
aad
addl
cmc
jmp
movsb
pushl
pushl
popl
pushl
push
pushl
ret
dec
bt
clc
clc
push
cmp
movzbw
call
inc
pusha
mov
call
mov
sub
gs
insb
pop
in
mov
xchg
scas
push
addr16
in
or
test
pusha
add
pop
stc
rcrb
mov
cmp
mov
out
clc
fimull
sti
out
push
cltd
in
xchg
and
sub
pop
mov
add
jno
test
pop
out
orb
in
mov
outsb
jo
mov
cmc
cli
push
mov
sub
dec
std
bound
cmp
or
leave
dec
in
pop
mov
pop
or
fcoms
ds
lock
sub
jmp
pop
mov
pusha
stos
push
pushf
pushl
lea
jmp
pushf
lea
jne
add
bswap
jmp
pushf
pusha
pusha
mov
not
push
lods
pushl
push
rol
bt
call
movzwl
lea
movsbw
lea
call
pusha
pusha
push
movl
jmp
sbb
and
add
mov
repnz
std
inc
cltd
dec
in
sbb
loope
inc
pusha
push
loop
mov
lahf
das
iret
outsb
mov
xorl
mov
push
cmp
je
inc
sbb
mov
jl
mov
fs
pop
lods
push
push
mov
addr16
sbb
test
xchg
mov
rcll
shl
aad
push
pop
xchg
jmp
cmp
fildll
mov
mov
xchg
scas
add
mov
ret
sub
icebp
inc
xchg
mov
mov
adc
jb
pop
inc
sub
lret
pusha
sbb
cmp
cmp
mov
push
add
sbb
fsubl
sub
jae
or
clc
pushf
clc
cmp
push
movb
pushf
lea
jb
call
mov
movw
lea
jne
call
movw
stos
pushf
pushl
lea
jmp
in
push
movl
call
jmp
mov
call
push
pushl
popl
pushf
push
push
push
pushl
ret
shr
lea
pop
mov
sar
add
push
jmp
call
movzbw
mov
xchg
pushf
pusha
pop
mov
lea
mov
mov
pusha
mov
pushf
mov
pusha
call
popf
cpuid
nop
call
mov
bt
push
stc
test
test
call
or
jmp
pusha
call
inc
mov
incl
pop
xor
rol
rclb
shl
jae
jle
movsl
and
movsb
ljmp
fwait
and
rcr
test
andl
clc
stos
pop
rorl
add
mov
jecxz
pop
xchg
jle
out
andb
ljmp
jmp
lods
popa
fcomp
mov
mov
xor
movsb
cmpsb
sbb
js
mov
mov
lret
pop
jno
sbb
shll
lods
pop
loope
jl
popf
xor
xor
jae
inc
cwtl
pusha
cmc
stc
cmp
mov
lea
jae
pusha
pusha
movb
pushf
lea
jmp
pushf
push
lea
jns
pushl
pushf
pushf
mov
pushf
pushl
ret
lea
jae
cmc
cmp
pushf
lea
jae
test
pusha
pushf
pushf
cmp
push
movw
push
lea
ja
not
inc
not
inc
shr
push
rol
ror
xchg
cmc
neg
movsbl
pushf
mov
setp
mov
cmp
xchg
movsbw
neg
clc
neg
mov
cmp
stc
sub
push
rep
pop
mov
pushf
push
pushl
push
lea
jmp
lea
jne
pushf
pushl
push
mov
pusha
lea
jmp
lea
je
cmp
pushf
add
pushf
cmp
pushl
pushl
pushf
lea
jb
pushf
push
cmp
push
lea
jae
pushf
pushf
movl
lea
jmp
setp
lea
lea
call
out
sbb
fidivs
and
ret
dec
lahf
iret
aas
into
mov
mov
shll
push
inc
adc
es
mov
in
and
mov
fisubl
ljmp
js
pop
cmpsl
lods
mov
pop
jne
xor
and
jg
mov
xor
sub
mov
daa
xchg
mov
cmpsl
pushl
lcall
and
orl
dec
push
pop
xor
pop
and
icebp
idivl
add
push
aad
mov
xor
push
out
gs
and
rcr
xchg
int3
sub
xchg
xorb
add
in
movsl
sub
cmp
aam
push
addr16
inc
nop
mov
jbe
dec
mov
fdivrs
cmp
mov
xor
and
inc
hlt
xor
sub
jae
pop
imul
fnstsw
aas
insl
push
jmp
aad
adc
push
lea
jae
push
call
ret
out
inc
addr16
adc
lea
cmpsl
xchg
push
adc
jae
fdivl
push
pop
fsts
call
in
in
repnz
inc
pushf
loope
imul
cmp
lods
push
std
sub
jae
mov
shl
xchg
push
leave
jecxz
inc
pop
int3
je
out
mov
xchg
push
dec
push
mov
or
test
xor
pop
sbb
mov
adc
jo
mov
mov
push
mov
jp
mov
ret
fsub
movsl
jle
aam
and
imul
fldl
xchg
in
xor
xchg
adc
dec
adc
ret
jmp
inc
pop
cmpsl
push
pusha
add
push
out
dec
int
sub
popf
xchg
outsl
clc
mov
xor
cltd
add
xor
cmpsl
add
mov
test
adc
push
scas
or
nop
cmpsb
mov
and
aaa
sub
movsb
xor
repz
jno
fidivl
rorb
dec
xor
ficoms
jne
or
mov
rclb
pop
pop
rolb
push
sbb
ljmp
leave
jne
pop
xchg
repz
mov
imul
dec
ret
mov
inc
and
out
sar
aas
or
dec
jge
test
testb
xchg
pop
mov
pop
pushf
pushl
lea
jmp
sub
add
call
lea
jbe
bsr
neg
mov
add
shr
cmc
add
xchg
bsf
adc
shld
mov
pushf
push
sbb
add
movsbw
clc
test
movl
sbb
mov
pusha
cmp
movl
jmp
movb
movb
mov
lea
je
lea
bsr
ja
add
adc
mov
jmp
movl
jmp
int3
popf
ja
pushf
mov
pushl
movl
pushf
pushf
lea
ja
push
pusha
lea
jmp
jne
gs
xor
fs
insb
add
xor
movzwl
pusha
not
pusha
call
pushf
pusha
lea
call
push
call
movl
pushf
pushf
pushf
lea
jmp
jmp
call
pushf
lea
jae
stc
pushf
pusha
stc
cmp
push
pushf
lea
ja
call
pusha
movl
movb
jmp
cmpb
pushf
lea
jne
lea
and
cmc
mov
cmc
pusha
add
stc
test
pusha
movzwl
inc
mov
clc
push
add
cmc
jmp
movl
push
movl
movb
mov
pushl
popl
mov
pushl
ret
push
lea
jb
cmp
cmpb
push
pushf
lea
jne
add
mov
test
cmp
call
cmp
jmp
lea
call
cmc
cmp
pusha
pusha
jmp
cld
les
or
out
add
dec
pop
push
rol
cwtl
imul
xor
mov
test
aad
mov
hlt
jle
popf
sbbl
jbe
mov
add
cmp
std
push
rcll
arpl
xchg
pop
adc
jae
push
add
and
cmp
add
call
ds
ljmp
incb
mov
push
or
je
jmp
inc
nop
xchg
ret
rcr
loope
and
inc
sub
inc
cmpsl
addl
mov
fstpt
sub
enter
cmp
test
pusha
mov
mov
push
mov
pushf
pushl
ret
and
mov
mov
in
int3
pop
or
lods
aad
fstpt
dec
shlb
js
adc
js
jno
aaa
push
push
je
mov
mov
aam
fisttpl
mov
les
jbe
add
sub
insw
add
and
std
cs
cmp
push
cmpsb
inc
adc
jmp
mov
fs
je
stc
pushf
pusha
add
pushf
test
test
cmp
cmp
pushl
lea
jb
cmp
bt
cmp
jmp
adc
mov
mov
mov
pushf
pushl
ret
jmp
mov
fs
cwtl
mov
and
ja
mov
inc
mov
sti
push
imul
or
pop
gs
cmp
sti
mov
xor
push
js
jae
notb
or
leave
add
adc
xor
fdivs
and
pop
sub
out
int3
fimull
inc
push
scas
into
push
pop
fs
icebp
dec
roll
jbe
iret
push
rcr
insb
cs
fldcw
adc
add
pop
or
outsl
adc
mov
sbb
dec
add
adc
and
ficoml
shll
mov
push
fisttps
pop
jns
add
js
mov
lahf
cs
sub
push
in
xor
lcall
jns
stos
push
inc
jno
adc
jmp
stos
mov
push
mov
movsb
sub
jae
inc
idivb
add
and
push
lea
je
call
ror
pusha
call
pushl
pushl
pusha
mov
pusha
call
cmp
rcr
lea
xor
movsbw
pop
movzbw
mov
pop
pushf
pusha
pop
bswap
mov
not
call
lea
je
pusha
call
or
inc
ja
fistpl
faddl
mov
leave
pop
scas
enter
and
out
xchg
out
push
fcoms
xchg
or
inc
stos
int
pop
loop
jo
addr16
pusha
sbb
mov
sub
xor
test
xchg
inc
repz
dec
cmpsb
inc
in
xchg
push
fdivrs
sarl
mov
xor
mov
fs
xchg
test
and
es
xchg
mov
rcrl
jg
pushf
out
jp
inc
fdivrs
jae
fmuls
jb
pusha
push
bt
jmp
fld1
jl
adc
add
sub
mov
mov
cltd
fildll
or
sub
js
cmp
sub
dec
push
sub
dec
movsb
pop
mov
mov
jmp
mov
testb
rorl
cmp
dec
cmpsl
push
lahf
mov
mov
jbe
push
sbb
add
pop
call
into
dec
rcrl
add
jmp
dec
mov
call
jnp
jne
jp
not
seta
pushfw
sbb
ror
call
jmp
push
lea
jae
pushf
pusha
pushf
pushf
lea
jmp
mov
not
setle
mov
jmp
lea
ja
call
pusha
movl
pushf
pusha
lea
jmp
inc
jmp
setbe
pushfw
popw
rcr
pusha
mov
mov
mov
test
pushl
bt
neg
call
movb
jmp
xchg
cld
xor
add
clc
test
cmovs
sub
and
pushw
loop
sbb
dec
xchg
jnp
inc
and
mov
sbb
cmpsb
xlat
data16
arpl
push
add
mov
jno
in
xchg
jmp
or
out
add
call
and
divb
xor
out
push
es
mov
pop
mov
sub
scas
inc
mov
cwtl
dec
sbb
inc
dec
lcall
ficompl
pop
imul
adc
dec
sbb
enter
pushf
jo
cmpsb
dec
dec
pushf
push
xor
out
pop
arpl
aam
sub
loopne
push
mov
pop
mov
add
push
aam
cld
dec
psraw
es
inc
jb
jmp
in
jmp
add
add
sub
add
add
and
pop
add
pop
add
or
add
add
add
add
mov
pushf
mov
movzbw
pop
mov
mov
mov
pushf
bswap
mov
bswap
pop
movzbw
mov
mov
pusha
push
pushf
pushl
ret
cmp
jmp
xor
add
stos
cmp
mov
std
ljmp
inc
fwait
jp
push
adc
mov
ja
sbb
dec
inc
xor
es
popf
mov
cmpl
inc
dec
lods
cmp
loope
fidivs
mov
xchg
dec
jne
setb
call
pushf
lea
je
jmp
push
add
aaa
jne
sti
inc
sbb
stos
icebp
add
jo,pn
lfs
jbe
ljmp
icebp
loopne
shlb
pop
or
scas
mov
es
imul
sbb
imul
stos
test
not
imul
nop
and
lret
popf
sbb
aam
sbb
adc
mov
test
cmp
pop
test
insl
fstpt
mov
lret
jmp
jmp
cmp
add
cmp
bound
call
icebp
cmpsl
inc
fisubs
inc
inc
fadds
sub
push
jmp
mov
bswap
pop
movl
not
pushf
lea
call
clc
test
pusha
cmp
lea
jae
pusha
mov
pushf
lea
jae
push
clc
cmp
pusha
lea
jae
pushf
lea
ja
inc
call
dec
mov
shr
sets
push
pushf
rol
xchg
or
xchg
push
bsr
sbb
push
bt
xchg
test
push
rol
mov
stc
rcl
mov
lea
or
mov
clc
pusha
bt
bt
or
movb
pusha
jmp
pusha
pushf
inc
call
sub
adc
xchg
push
repnz
xchg
and
push
or
ss
aas
ljmp
aam
jg
push
add
popa
jnp
add
pop
cmp
fstpt
stos
inc
ret
aas
mov
ret
filds
loope
loope
push
sub
sbb
xchg
mov
mov
loopne
gs
xor
push
leave
sar
shl
gs
cs
inc
lock
call
and
dec
aas
push
inc
movb
xchg
mov
jne
rcl
je
leave
fsincos
cltd
nop
mov
pop
mov
pop
repz
loopne
lods
cltd
sub
jb
sbb
xor
jmp
jnp
sbb
xchg
aaa
cli
les
fcoml
mov
dec
xchg
xor
inc
xchg
arpl
cli
outsl
sarb
sub
inc
sub
popf
aad
das
push
or
inc
mov
add
jl
mov
sahf
enter
sti
shlb
js
jmp
mov
repnz
arpl
sbb
lods
adc
pusha
jo
aam
inc
test
xorb
adc
pop
jb
out
fnsave
jmp
cmp
repz
or
jnp
outsl
jno
int
dec
dec
inc
pop
inc
insb
mov
pop
jmp
ret
fsubl
sbb
leave
push
cwtl
lods
test
jmp
mov
andl
hlt
adc
sub
jg
popf
sti
pop
pop
xchg
mov
lret
push
rorb
xchg
inc
fidivs
fisttpll
mov
in
sti
dec
pop
pop
push
sub
or
pop
jge
pop
dec
mov
fcoms
jp
sub
add
pop
xor
lret
mov
aam
jmp
push
repz
inc
and
jae
xorl
adc
out
sbb
lret
int3
addr16
mov
and
mov
inc
sub
call
xlat
jge
pop
cmp
mov
pop
jo
mov
xchg
pop
std
mov
push
mov
mov
mov
addb
sbb
pop
imul
rolb
mov
mov
pusha
mov
mov
mov
mov
dec
adc
pusha
into
scas
add
lock
ret
pusha
js
pop
scas
pop
in
lods
push
xorl
in
arpl
ljmp
pop
cld
ja
sti
leave
iret
push
jae
js
imul
cli
cmp
jbe
mov
sbb
js
sub
xchg
adc
sub
sub
test
hlt
cld
movb
sti
or
outsl
rcll
decl
add
dec
cltd
cs
in
xor
dec
scas
stc
xchg
out
mov
repnz
fwait
dec
mov
test
testl
lret
mov
jmp
scas
mov
cmp
mov
cwtl
stc
push
xor
pop
out
mov
mov
leave
and
push
mov
out
mov
fs
sub
inc
sbb
dec
pop
dec
addr16
add
sbb
pop
cli
insb
out
push
ljmp
push
stc
mov
add
sbb
pusha
mov
das
mov
iret
movsl
push
out
iret
in
and
jb
enter
sub
jl
dec
icebp
cmpsl
push
leave
xlat
cmpsb
dec
cmp
pop
inc
push
mov
sub
and
andl
push
int
jae
out
fcoms
push
outsl
imul
aam
fldt
xchg
bound
movl
mulb
sbb
stos
nop
mov
add
imul
mov
cmp
push
push
and
jg
jnp
jg
push
lret
mov
jge
fcmove
hlt
dec
cmpsb
jl
dec
pop
lret
mov
adc
inc
jmp
adc
jmp
arpl
cli
jnp
and
popf
out
push
mov
jns
out
push
je
cmp
nop
or
push
in
shll
jp
mov
push
sbb
add
xchg
push
vpmovsqd
arpl
jge
repnz
mov
fiadds
dec
leave
aas
inc
mov
push
scas
cs
xor
cmc
jo
sbb
cwtl
xlat
xchg
fwait
ja
aad
mov
mov
sub
std
roll
push
in
fnstcw
xor
sbb
mov
dec
adc
add
xor
adc
dec
jge
or
mov
cs
inc
cli
cmp
in
mov
cmc
addr16
ds
dec
and
stc
test
jge
or
cs
fimuls
test
mov
dec
stos
and
sti
dec
leave
mov
sbb
cmp
lahf
cmp
lahf
repz
outsl
test
mov
mov
lret
push
pop
add
cs
xchg
ficomps
lahf
cmp
xchg
add
jmp
cmp
es
ret
sub
ret
pop
imul
lods
test
push
jmp
daa
mov
loop
add
enter
pop
mov
scas
xchg
pop
xchg
mov
mov
aas
aad
mov
mov
mov
inc
mov
jmp
add
loop
aad
sbb
jnp
imul
pushf
mov
dec
sbbl
mov
xchg
or
mov
inc
jmp
shl
push
repnz
int
mov
xor
repz
nop
dec
aaa
cmp
and
sub
test
and
lock
shr
and
jns
and
push
lock
add
pop
push
jnp
fwait
push
xchg
mov
pop
xor
adc
sbbb
jno
cmp
lock
leave
mov
cli
cmp
setp
imul
fildll
aad
jne
add
push
jb
repnz
fldcw
and
sti
rorw
loop
fisttpl
or
and
adcl
in
lret
mov
mov
pop
shrl
xchg
iret
mov
jbe
cwtl
std
js
dec
adc
add
aam
sub
xchg
fidivl
repnz
repnz
dec
jns
and
inc
fwait
adc
inc
inc
out
adc
imul
jns
jecxz
fs
fwait
cmp
adc
add
sbb
push
jae
aaa
cmp
pop
jo
jns
cmp
enter
push
pusha
fnstcw
dec
cmp
cmpsl
adc
jbe
cmpsl
repnz
push
mov
mov
dec
mov
iret
push
out
enter
inc
xchg
or
je
popa
xlat
icebp
in
ljmp
fistpl
mov
or
cmp
ds
out
push
cmpsl
sbb
add
mov
mov
je
push
mov
add
mulb
and
adc
inc
cmpsl
arpl
aad
pop
pop
lret
dec
arpl
adc
cli
nop
jns
jne
leave
sbb
mov
mov
or
push
and
push
push
hlt
lock
mov
pusha
push
add
pop
push
push
es
pusha
cmc
mov
hlt
sbb
hlt
pop
pop
loop
and
or
popa
and
out
gs
push
inc
out
ja
test
push
inc
mov
dec
call
pop
sbb
sbb
gs
nop
inc
xchg
inc
pop
mov
push
jge
push
mov
subl
xlat
lcall
sub
int3
sub
pop
sub
pop
push
inc
lds
in
popf
add
push
fsts
lret
dec
add
mov
icebp
or
pop
rorb
stos
inc
lret
inc
gs
daa
mov
xor
sub
mov
lcall
xchg
dec
dec
loope
pop
and
idiv
cmp
imul
nop
inc
sub
pmaxsw
adc
and
inc
add
pop
jb
adc
or
icebp
xchg
pusha
mov
bt
pushl
stc
call
mov
push
push
dec
pusha
fmulp
pusha
cmp
scas
push
out
fwait
aaa
out
mov
jo
mov
dec
adc
std
jmp
lods
cmc
add
mov
lret
mov
dec
stos
out
dec
in
jo
push
jb
outsl
pop
aam
sub
pop
pop
mov
nop
push
xor
and
inc
jl
add
pop
sbb
mov
jb
sbbl
pusha
fidivrs
popa
imul
mov
fwait
popa
or
pop
adc
pop
or
mov
jmp
pop
movl
jmp
ss
sbb
jbe
mov
iret
arpl
fcomip
jg
mov
push
clc
lock
xor
or
loop
sub
or
and
popf
scas
pop
cltd
fidivrs
movsl
pop
int3
sub
push
and
loope
mov
add
push
ss
push
int
sbbb
push
roll
lds
out
inc
cld
rcrl
or
iret
sub
jmp
clc
mov
add
fwait
in
mov
mov
divb
cmp
inc
nop
insb
cmpsb
cwtl
cmc
jbe
rol
pop
inc
fld1
imul
bound
ret
jnp
std
push
sarl
and
mov
dec
sbb
push
fimull
loope
into
and
mov
jg
in
and
sub
ljmp
sbb
rcll
and
jmp
mov
xor
add
sti
mov
fadds
push
xchg
lcall
out
add
pop
out
push
add
out
lods
jo
ja
jbe
in
push
rolb
cli
inc
dec
mov
filds
icebp
outsb
jne
or
mov
mov
lds
and
adc
divl
jmp
add
inc
jmp
call
insl
in
cmp
or
ret
jecxz
int
or
xchg
and
arpl
push
xor
aad
cmp
fnstcw
push
dec
movsl
xchg
cli
jg
test
out
pop
scas
mov
pop
aam
add
lret
inc
cltd
lods
lea
ljmp
adc
fisttpl
and
sub
inc
xchg
leave
ds
jbe
pop
es
pop
push
push
fldenv
out
pusha
movsl
divl
jle
mov
mov
push
mov
push
not
mov
mov
pusha
movb
pushl
ret
mov
bt
xchg
rol
rcr
mov
call
call
add
add
jmp
lea
je
cmp
add
push
cmp
push
mov
cmp
jmp
add
push
add
shl
sbb
jge,pt
xchg
lds
cmp
cmp
inc
in
fwait
daa
stos
arpl
ja
out
adc
mov
aam
mov
scas
jmp
sti
leave
pop
iret
lret
insl
rcl
fsubl
mov
out
sub
cmpsl
adc
push
test
push
mull
fisubrl
fdivl
mov
mov
mov
xor
mov
xchg
xor
mov
subb
jecxz
mov
pop
cli
pop
jmp
jbe
popf
mov
xorb
or
roll
scas
xchg
shlb
mov
or
push
outsl
das
ret
mov
or
gs
push
jmp
in
imul
mov
mov
mov
or
cwtl
int
sbb
jae
push
or
cli
in
inc
das
add
mov
loop
push
mov
push
in
mov
scas
loop
jle
mov
fxsave
loop
outsl
lret
test
int3
push
mov
jmp
rorl
or
and
repnz
shll
push
adcb
pop
or
mov
sub
lahf
or
lds
and
aam
imul
std
fmull
jo
mov
adc
cmp
pushf
and
cltd
push
mov
and
aas
sub
enter
movsb
add
out
xorl
aad
inc
mov
fdivl
xor
sub
adc
das
cmpl
cmpsb
jmp
sub
xchg
sub
cmp
pushf
lds
jmp
xbegin
stc
bts
mov
cmc
shl
add
bswap
movl
bsf
stc
cmc
setns
mov
stc
stc
cmp
pusha
push
lea
jbe
neg
sub
jmp
jmp
call
xchg
aad
out
scas
mov
ja
pop
cmp
in
loop
stos
pop
sub
or
cmp
test
call
arpl
lahf
adc
jns
mov
pop
shlb
inc
lret
aas
add
mov
rcl
dec
popf
cmp
dec
or
jp
push
and
stc
bound
mov
aam
in
jmp
xchg
call
xchg
push
mov
add
jnp
mov
movl
pushf
pushf
push
lea
jmp
lea
jae
pushf
stc
cmc
pusha
cmp
pusha
lea
ja
jmp
pushl
popl
pushf
pushl
ret
pop
mov
aad
cmpsl
test
pusha
jns
sub
insl
mov
cmpsb
jge
push
js
daa
dec
stc
xor
mov
in
pushf
sub
xchg
or
jns
ljmp
adc
pop
shll
sub
pop
outsb
jb
out
mov
stos
dec
push
cli
ret
sbb
or
inc
mov
xchg
jecxz
adc
nop
shr
mov
push
sub
push
inc
jp
jecxz
stos
mov
or
jmp
clc
push
jmp
mov
imul
jmp
push
dec
jnp
roll
sbb
sti
jae
stc
icebp
push
xlat
mov
and
fildl
pop
jno
std
je
jmp
xchg
sub
cmovp
push
stc
scas
xor
jae
arpl
enter
push
push
or
ret
fildl
inc
dec
jnp
bound
pop
outsb
and
jecxz
cmp
leave
std
fsubl
sarl
into
sar
pushf
js
add
mov
out
iret
fdivl
mov
push
in
jl
dec
lcall
stc
stos
push
lods
out
mov
pop
pop
lahf
mov
fldenv
cmpsl
and
outsb
les
out
adc
xorb
cltd
jno
std
ficoms
aas
cs
xchg
xor
push
icebp
pop
lret
mov
call
jmp
scas
jmp
push
out
jg
es
add
pop
jg
call
es
add
jmp
es
imul
es
adc
fsubrp
adc
ljmp
xor
pushl
jno
adc
aas
or
jns
insl
pop
loop
fcomps
or
insl
pop
loop
idiv
insl
fs
lcall
insl
sbb
data16
std
call
insl
insl
frstor
into
repz
out
decl
pop
inc
jmp
imul
inc
ret
pop
adc
mov
dec
es
mov
cmp
jg
es
jne
frstor
adc
jg
es
xchg
mov
popf
or
insl
sbb
xor
inc
es
shlb
shl
out
lcall
es
test
popa
icebp
cmpb
insl
aad
mov
sahf
mov
out
pushl
es
cmp
sbb
es
fstp
and
or
je
call
es
in
fnstsw
mov
out
repz
add
sub
out
lcall
es
jge
lret
pop
jmp
outsl
es
inc
mov
aam
cmpsl
out
repz
jmp
insl
pop
aam
movsl
mov
cmc
es
push
scas
std
out
arpl
decl
int
ja
imul
es
jno
fistps
incl
in
enter
out
jmp
es
adc
mov
jg
and
xchg
ljmp
loopne
outsb
out
call
insl
ror
lods
lret
repz
es
insl
loop
inc
xorb
out
jmp
insl
gs
pop
cwtl
scas
std
pushl
insl
popf
loope
hlt
cmp
out
jmp
insl
and
lods
xor
jg
es
cltd
shlb
sub
js
decl
es
cmc
enter
mov
jmp
jno
stos
xorl
es
insl
loopne
daa
jb
pop
out
call
es
sub
std
incl
incl
out
sbb
mov
stc
pusha
neg
stc
jmp
lea
jne
setg
lahf
mov
pushf
pusha
pusha
mov
lea
jmp
pusha
pushf
movl
jmp
push
ss
xlat
or
mov
mov
jae
lahf
inc
aaa
std
ds
xor
mov
lret
stos
sbb
mov
adc
jecxz
aaa
and
mov
mov
jno
adc
popa
movsb
es
cmpsl
loop
mov
fidivs
rorb
rcll
aam
mov
fisubl
sbb
jns
dec
push
iret
adc
in
push
stc
or
fisubrl
jns
push
lods
and
mov
xor
pop
test
jnp
out
jp
fmuls
mov
imull
sub
mov
mov
test
push
pop
xchg
jno
mov
aad
imul
ja
pop
add
and
adc
ja
cmc
shr
call
cmpb
cmc
loopne
sub
jbe
and
lea
add
add
and
jae
shl
ja
cmc
mov
push
jnp
xchg
out
push
pop
adc
fisttpll
ds
xor
xor
lret
pop
or
mov
pop
clc
xchg
inc
sub
arpl
fisttpl
aad
cmp
sahf
jl
push
lret
int3
jnp
gs
imul
jne
jecxz
mov
sbb
cmp
pop
iret
icebp
jo
cmp
aaa
popa
mov
cltd
pop
cs
fisubs
xchg
call
or
sub
pop
repnz
rcrb
aas
pop
add
sub
mov
lods
cmp
sub
jae
dec
pop
push
les
xchg
push
loop
test
sub
jae
sub
jmp
fildl
inc
ja
aas
xlat
push
mov
mov
scas
rorb
pop
jecxz
loope
add
dec
jo
addr16
mov
jne
add
mov
ret
int3
cwtl
mov
mov
push
in
fnstsw
push
add
mov
in
into
sar
std
iret
sbb
inc
or
std
mov
xchg
ljmp
mov
add
cwtl
adc
sub
pop
cmp
sbb
inc
dec
inc
movsl
fcomp
sbb
test
sub
pop
shll
or
ss
data16
fldl
xorl
jb
insb
sbb
rcrb
test
idiv
lock
repz
ret
addl
test
sahf
inc
inc
fsubp
xchg
sub
cmc
xchg
sub
mov
push
or
scas
fiaddl
fldt
repz
sahf
dec
xchg
pusha
and
mov
push
movsb
xchg
xor
sahf
inc
out
pop
test
mov
sbb
xchg
cmp
xchg
fcmovu
push
or
cmp
jno
push
or
aaa
inc
jo
in
das
subl
inc
jae
add
push
cmp
xlat
faddp
loope
sub
mov
jp
push
add
sbb
inc
cltd
aam
loope
repz
push
inc
inc
ja
push
cmpsb
jl
shrb
mov
pop
ds
fistps
andb
mov
push
aas
xor
push
lcall
in
es
mov
mov
xchg
and
jb
call
mov
sbb
or
stos
cwtl
mov
out
cwtl
cmp
mov
daa
das
bound
pop
inc
js
mov
cmp
pop
imul
jae
pop
outsb
xchg
pusha
pusha
pushf
lea
call
pusha
pushl
pushf
push
lea
jmp
jmp
movb
mov
call
inc
pushf
pushf
jmp
sbb
ret
xor
xchg
push
fwait
dec
inc
mov
sbb
ud0
push
pop
mov
inc
xor
fs
rcr
rcl
int
icebp
cmp
push
repz
or
and
jmp
pop
xchg
xor
lret
roll
sub
aas
jmp
shr
adc
out
xlat
arpl
fwait
cmp
xchg
notb
pop
xchg
xchg
scas
jbe
dec
aam
nop
push
pop
dec
and
roll
ljmp
rcll
pop
dec
cld
into
or
mov
pop
xchg
inc
aas
setae
enter
cbtw
inc
orb
cli
jmp
and
pop
daa
shrb
add
pop
repz
fistps
push
xor
cmp
ljmp
sbb
dec
jmp
mov
cmp
lcall
out
fisubrs
xor
jae
jo
add
cld
sub
adc
add
pop
mov
dec
sbb
test
inc
inc
xchg
sub
ss
repnz
sub
inc
sub
in
sbbb
data16
xchg
and
mov
jno
cld
dec
fnstsw
jp
pop
push
repz
arpl
fiadds
rol
cmc
stc
xor
cmp
call
push
test
add
push
ror
jmp
sub
xchg
add
mov
lods
push
sub
dec
imul
dec
inc
nop
mov
jmp
xor
inc
sub
add
shrb
cmpl
dec
mov
add
push
cmp
jmp
pop
call
in
in
mov
push
jbe
inc
aad
movsb
xchg
faddl
icebp
cmp
aad
shll
ret
cwtl
pop
or
xchg
push
jge
mov
pop
sbb
imul
xchg
inc
add
xor
pushl
ret
pushf
clc
or
pusha
lea
jbe
je
lea
call
xchg
bts
mov
push
cmc
jmp
cmpsb
or
pop
cmc
fldcw
xlat
jle
stc
ficoml
mov
dec
pop
xor
mov
pop
fsts
sbb
cmpsb
jo
iret
scas
and
cmp
ljmp
insb
pop
loopne
sbb
pop
xchg
ret
jmp
dec
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cmc
je
call
push
pusha
call
imul
gs
xor
cs
insb
add
andl
cmp
cmp
cmc
test
cmp
push
pusha
jmp
xor
pop
pop
mov
mov
push
mov
inc
mov
fisttpll
adc
push
pop
cmpsl
and
jle
insb
dec
cli
test
jb
xor
lret
mov
out
push
xlat
push
mov
stos
mov
pop
sub
mov
sbb
fldlg2
stos
mov
fildl
test
cmc
dec
ficoml
jae
xchg
inc
iret
mov
call
jmp
movl
push
movl
push
pushf
lea
jmp
and
mov
mov
push
shl
dec
lahf
push
xchg
or
inc
nop
test
enter
mov
xor
sub
add
adc
xor
jmp
push
adc
mov
ds
aad
add
and
jl
ror
idivl
nop
lock
and
push
or
gs
cmc
sbb
in
inc
push
idivl
and
mov
sbb
popl
pop
les
scas
add
dec
movsl
stos
fiaddl
jl
ss
out
sahf
arpl
jg
ja
cmovbe
out
bnd
inc
fistpll
cltd
clc
mov
gs
in
jb
push
push
stos
pop
fmul
or
sub
ja
das
out
jno
repz
rol
jmp
mov
aad
push
fucomp
xlat
inc
add
lock
cmp
xor
mov
das
add
loope
pop
cwtl
outsl
das
push
push
xchg
movsb
push
push
loopne
jns
enter
mov
enter
mov
fcmovbe
mov
ds
jmp
and
pop
in
adc
add
popf
insb
das
adc
jns
lods
std
or
push
mov
xchg
je
inc
nop
insl
popf
sbb
mov
ret
xchg
pop
test
xchg
push
inc
sbb
sbb
mov
push
mov
je
call
pop
addb
fdivs
or
int3
cmp
pop
xchg
jmp
dec
pusha
lea
jb
clc
cmp
pusha
pushf
pushf
jmp
lea
jne
jg
pushf
lea
call
pushf
push
push
lea
jmp
add
add
push
sbb
add
add
add
add
add
inc
sbb
add
inc
sbb
add
add
dec
sbb
xchg
into
mov
shlb
lods
pop
xchg
out
lahf
push
mov
clc
dec
int3
xchg
leave
dec
pop
jbe
pushf
add
jae
sbb
cmpsb
jp
jb
dec
sbb
cmp
sarl
mov
insl
add
mov
mov
pop
dec
gs
lods
cmp
inc
ret
mov
push
stos
lea
mov
dec
push
mov
sbb
fstps
ja
pushf
leave
sbb
int
imul
push
test
test
and
xchg
loope
xchg
cmp
daa
xchg
cs
ljmp
outsl
push
lret
jnp
arpl
sahf
pop
cld
mov
add
pusha
pushf
outsl
jp
test
loope
jne
aaa
lock
mov
push
xchg
dec
xchg
mov
cltd
mov
adc
xor
popf
or
fisubrs
and
xor
pop
dec
repnz
push
add
push
sbb
ret
push
imul
test
and
push
sub
xchg
inc
mov
decl
push
mov
pop
mov
xchg
gs
xchg
orb
out
or
inc
sub
push
pusha
mov
xor
cltd
popl
in
iret
xlat
int
pop
fcoms
and
in
pop
inc
mov
adc
add
aas
mov
jae
jp
imul
mov
negl
xor
mov
inc
xor
lcall
jnp
jle
inc
int
pusha
push
jecxz
sbb
mov
and
jmp
and
dec
std
dec
pop
inc
adc
inc
ret
mov
push
aas
jg
enter
jmp
push
sbb
cmc
push
fmull
fidivrs
jno
insb
mov
repnz
push
inc
test
fwait
ret
ficoml
add
ja
xor
fcmove
hlt
sbb
cmpsb
insl
fisttps
xor
mov
jo
sub
imul
inc
and
push
lds
cld
jo
scas
int
jnp
mov
xchg
pop
xor
sbb
mov
shr
xchg
mov
jle
xor
lret
push
fdivp
and
lea
or
or
lcall
lods
pushf
clc
dec
dec
xchg
movsl
ljmp
push
repz
mov
and
adc
lahf
jg
or
roll
pop
cmp
cmpsl
inc
pop
jmp
xor
mov
dec
and
sub
mov
fmull
dec
ds
sub
xchg
mov
xlat
imul
mov
inc
jp
and
ljmp
mov
imul
pop
add
repnz
dec
lret
push
aaa
push
lock
cmc
lret
adc
mov
adc
jns
xor
jnp
add
pushl
add
fcompl
test
out
pusha
insl
andl
stos
shll
sbb
outsl
aad
jne
mov
es
mov
push
xor
xchg
mov
mov
or
std
lods
push
frstor
mov
scas
je
out
sbb
lea
add
es
sub
aam
xchg
jno
cltd
into
lret
loopne
flds
xchg
nop
stos
enter
inc
add
aam
sbb
repnz
mov
or
pop
fstps
nop
push
dec
and
pushf
push
out
loop
addr16
loope
out
fistps
leave
xchg
dec
inc
call
inc
or
nop
add
jo
fwait
inc
sub
inc
push
sbb
adc
ljmp
xchg
popa
shrl
insl
arpl
mov
push
jge
mov
data16
pop
cmc
jmp
fisttpl
mov
sub
popa
fadd
call
cmpsb
loope
pop
add
and
mov
push
out
sub
rcrb
sub
inc
dec
mov
jae
mov
mov
leave
out
scas
xor
sub
push
repnz
test
xor
and
int
fcomps
add
pop
mov
or
shlb
out
lea
mov
and
cmp
and
xchg
lods
cmc
es
mov
cli
imul
addr16
call
jb
fcoml
inc
pop
call
xor
movsb
add
aam
fimuls
btc
dec
xchg
mov
xlat
cmpsb
push
push
inc
cmp
shlb
outsl
pop
xor
pop
or
fucom
mov
les
mov
cmpsl
push
rorl
add
hlt
es
add
pop
xor
mov
adc
mov
mov
cmp
or
cld
lret
push
add
mov
xor
int3
subb
fyl2x
and
jp
leave
lds
or
les
mov
or
xchg
adc
repz
nop
mov
iret
in
std
jb
fdivs
enter
ja
xlat
and
loop
arpl
jl
sbb
test
dec
fsubl
ret
iret
or
cmpsl
cmp
add
pop
into
xor
jecxz
adc
dec
inc
ret
ret
cld
out
push
add
mov
gs
mov
faddl
dec
nop
and
dec
mov
push
jp
out
mov
cmpsb
jle
mov
lock
adcb
jb
push
and
or
push
push
push
movsb
mov
mov
lahf
iret
clc
cltd
mov
mov
stos
test
add
iret
and
adc
mov
cmc
pop
in
adc
sub
pop
and
lock
cmpsl
mov
lods
pop
xor
movsb
push
or
dec
ffreep
cmp
fwait
int
xor
cmpsb
mov
int3
and
inc
sub
sbb
cwtl
adc
dec
popa
aad
or
rcrl
test
add
adc
lods
jnp
subb
inc
push
gs
mov
pop
lret
cmp
outsb
pop
out
sub
sub
icebp
cmpsl
sbb
ret
ror
push
fdivrs
loopne
ficoms
and
xchg
popf
out
xor
pusha
into
pushf
aad
pop
mov
jae
mov
xlat
mov
mov
mov
arpl
outsb
cmp
test
sbb
sbb
xchg
fsubrl
iret
xchg
inc
lahf
jae
lahf
cmpsl
mov
sub
adc
lea
sub
loope
add
movsb
jmp
mov
xlat
add
xchg
and
jg
mov
clc
cld
mov
movsl
dec
add
loopne
sub
lods
enter
and
or
movsb
outsl
inc
into
dec
add
dec
push
push
dec
sbb
cld
int3
sub
and
and
inc
push
es
dec
lret
pushf
test
dec
mov
inc
jns
inc
xlat
outsl
stos
jge
nop
repz
cmc
fstpt
rcrl
and
dec
push
or
jle
mov
mov
leave
mov
jbe
clc
jmp
sbb
hlt
jno
fwait
enter
mov
test
cmp
idivb
scas
clc
pusha
add
leave
sbb
cld
fldcw
mov
mov
mov
dec
cmp
xchg
negl
xlat
aad
or
cmp
call
dec
push
add
cmc
imul
pusha
insb
popf
adc
bound
imul
stos
cmp
pusha
pop
pop
lods
add
inc
sub
int3
mov
je
icebp
loope
mov
divl
xlat
dec
adc
sbb
pop
aam
outsl
fsubs
push
mov
insb
fnstsw
push
lcall
mov
xchg
mov
lock
xlat
add
in
fistpl
push
sbb
sbb
enter
out
test
pop
dec
mov
scas
xor
roll
js
mov
stc
pop
inc
fstpt
add
fistps
xchg
adc
jns
pusha
std
sbb
xchg
xor
movsl
dec
fwait
mov
mov
ret
sub
jecxz
xchg
dec
aad
mov
movsl
popf
lods
mov
mov
mov
fisttpll
add
outsb
out
fsubs
fcom
inc
cmp
mov
test
pusha
aaa
jge
fs
filds
sbb
pusha
or
fidivl
dec
loopne
lahf
cmp
sbb
dec
push
repz
push
adc
imul
mov
movsl
jp
les
dec
faddl
inc
jae
push
mov
addb
js,pt
arpl
sahf
mov
cltd
inc
cmp
lcall
push
pop
cmp
cmp
addb
push
and
lock
inc
or
icebp
insl
mov
ret
push
icebp
mov
mov
rorb
btr
je
pop
xor
aaa
pop
ss
out
xor
mov
ret
push
stos
rorl
ret
or
jb
leave
adc
sub
fists
shrl
incl
test
push
in
std
into
stos
xchg
add
out
dec
std
outsl
mov
popf
out
ficomps
lret
jne
inc
adc
xor
sbb
dec
cmp
je
pop
leave
cld
pop
das
xchg
fs
sbb
mov
scas
repz
jo
ret
pop
pop
ret
and
sbb
ret
pop
mov
xlat
push
in
add
cltd
arpl
cmp
push
in
push
mov
mov
movsb
adc
nop
pop
push
mov
lock
cld
outsl
lret
xchg
dec
in
sarl
int
out
mov
je
enter
xor
pop
or
push
enter
jnp
add
sub
mov
ljmp
imul
push
ljmp
dec
jmp
xorl
inc
mov
jno
imul
lods
pop
je
xor
push
fldcw
xor
push
repz
pushf
inc
inc
lahf
and
inc
insb
sbb
mov
push
pop
je
popf
cmp
xor
insb
loopne
push
ss
lret
push
xor
test
push
push
push
jmp
mov
sarl
push
jmp
cmp
push
jp
inc
add
ja
xor
and
bound
push
rolb
cmpsb
daa
cmc
add
pop
lahf
push
aam
shrb
arpl
jge
inc
in
mov
insb
das
stos
inc
mov
in
ja
adc
hlt
hlt
push
mov
roll
adc
sub
adc
pop
mov
cwtl
dec
in
add
pusha
add
sti
push
stc
aas
gs
lods
jo
ljmp
test
sbb
lea
fsubs
pop
xor
push
inc
mov
xchg
pop
hlt
inc
pop
and
and
pushw
and
mov
repz
sub
rorl
push
xor
lcall
sub
sub
ss
sbb
test
fs
pop
jns
add
call
stos
mov
xor
and
test
in
mov
cwtl
xor
and
fdiv
jno
pop
dec
pushf
icebp
notl
cltd
mov
xor
xchg
dec
mov
test
fcmove
imul
lock
add
lea
es
std
pop
mov
fstps
das
pop
iret
mov
mov
jo
or
cmp
jae
jns
scas
lea
ja
jmp
call
add
push
clc
call
cmc
call
jl
cmp
push
jne
or
loopne
lock
sbb
fisubs
xchg
pop
mov
mov
mov
les
jle
fcomps
das
adc
dec
leave
sub
je
enter
pop
mov
xor
jae
push
or
je
bsf
clc
xor
clc
aaa
sar
mov
dec
lea
dec
mov
cmp
rcr
shr
stc
shl
mov
push
mov
cmc
pusha
or
mov
jmp
movl
pusha
movw
lea
jmp
nop
fldt
pop
xor
daa
lock
je
pushf
iret
rorb
pop
sbb
inc
sarl
add
enter
inc
into
stos
xor
add
icebp
cmc
lahf
test
psubq
push
sbb
pop
and
inc
int3
inc
add
lret
mov
adc
and
cmp
mov
mov
and
adc
js
mov
mov
movsb
ret
jmp
nop
scas
iret
sbb
mov
adc
inc
stos
pushf
add
cltd
shlb
mov
xor
xchg
addr16
jns
mov
dec
loopne
cwtl
scas
insb
push
pop
data16
cmp
cmp
arpl
inc
or
scas
movsb
repz
rcrb
mov
scas
sbb
pushf
idivl
mov
insl
push
pop
pop
sub
cmpl
or
mov
repnz
divb
mov
cmp
addr16
les
aaa
pop
movsl
push
adc
fxch
int3
sbbb
or
jno
sub
mov
mov
inc
push
pop
test
mov
movsl
call
rorb
push
mov
sbb
dec
dec
rclb
mov
xchg
shlb
push
pop
mov
test
orl
or
mov
jnp
add
imul
add
mov
in
movsl
add
aad
lds
shl
inc
imulb
jecxz
or
inc
jno
mov
mov
xchg
inc
cmp
adc
sbb
leave
mov
jae
icebp
movsl
add
dec
gs
popa
addr16
outsl
js
add
mov
cli
inc
fldl
cmpsl
add
ficompl
jb
icebp
fisubrs
cli
jmp
jg
shlb
loop
aad
mov
js
cld
cld
mov
pop
cmc
outsl
shrl
and
fnstsw
add
in
shl
xchg
shll
dec
mov
inc
sbb
sub
cwtl
mov
jae
nop
pushf
add
jg
fistpll
int
or
cltd
add
test
out
icebp
and
adc
ljmpw
imulb
jno
test
popa
addr16
pop
into
cmp
sub
mov
add
xchg
std
cmp
mov
in
test
mov
shr
jae
adc
scas
cmc
dec
subl
cmp
aaa
daa
dec
nop
fimuls
push
add
mov
lock
and
addb
mov
pop
shl
scas
aam
imul
xor
fs
or
pop
daa
pop
push
jns
outsl
mov
in
imul
xor
cli
adc
jmp
ljmp
cmp
xor
in
jge
xchg
je
xor
addr16
xchg
xchg
outsl
mov
inc
ret
sbbb
scas
ficoms
mov
subl
mov
les
out
adcl
test
adc
fidivrs
insl
adc
ret
jmp
out
add
dec
outsl
arpl
inc
jb
gs
push
pushf
pusha
inc
pushf
jmp
pusha
mov
pushf
pushl
jmp
jmp
add
add
sbb
add
add
add
xor
add
sbb
add
add
add
sbb
add
sbb
add
ljmp
add
call
jmp
add
jmp
pushf
pusha
pushf
call
aaa
pop
icebp
aas
mov
inc
mov
cmpsb
ja
xchg
cmovle
jbe
and
gs
jp
and
out
dec
stos
adc
out
inc
sub
cld
jp
xchg
xor
pusha
or
inc
sub
subb
or
sub
pop
mov
in
pushf
pusha
lea
je
pusha
pusha
call
movw
call
adc
sbb
jg
fwait
loop
jbe
mov
mov
outsl
out
ja
jmp
pop
pushf
and
sub
pop
lret
inc
xchg
sbb
cmpsb
dec
cli
jl
dec
mov
or
push
jns
pushf
dec
cmp
sbb
fwait
mulb
xor
inc
push
fs
out
mov
aas
lods
cwtl
cmp
clc
xor
lahf
or
xchg
mov
inc
ficompl
out
mov
std
push
pop
stc
test
out
add
jno
enter
mov
movsl
sub
data16
rcll
pop
int3
xchg
movsl
xor
pop
mov
push
push
lcall
push
add
dec
mov
jne
loope
sub
pop
xchg
pop
xchg
cmc
out
pop
js
fldl
cmc
cmc
std
scas
fstl
nop
leave
int3
xchg
ds
in
mov
lret
cld
shrl
cwtl
ret
adc
cmpsl
inc
fucomip
jae
sbb
clc
push
jmp
jmp
iret
mov
push
jns
sub
and
ss
cmp
inc
inc
xchg
daa
fidivs
ret
rolb
mov
sub
xor
das
cmp
xchg
jp
sbb
fxch
jge
in
ja
lock
jp
jns
scas
adc
inc
jp
jae
mov
mov
pushf
pusha
lea
jmp
cmpb
call
push
jmp
xchg
shl
clc
bswap
shl
mov
rcr
setp
bt
mov
stc
pushf
cmc
mov
jmp
pushl
mov
movb
pushf
pushl
ret
lea
jbe
pushf
lea
je
pushf
adc
movb
pushf
push
lea
jmp
lea
not
jmp
pushf
jmp
pushf
push
movb
movl
pushl
pushf
push
push
lea
jmp
jmp
btr
mov
pusha
test
pushf
shl
jmp
mov
lea
call
cmp
cmp
push
lea
jnp
pushf
lea
jae
call
lea
jne
btr
mov
push
bt
movb
add
push
bt
mov
movzwl
adc
bts
mov
test
add
call
dec
pusha
gs
loope
push
lret
inc
addr16
push
lea
pop
jns
fidivl
mov
xchg
dec
outsb
pop
sub
test
push
xlat
xchg
cmp
push
inc
mul
sub
test
fwait
inc
inc
lods
inc
add
shl
out
inc
lret
daa
jo
mov
or
sti
ds
outsb
fsubrs
addb
into
fdivrs
mov
inc
inc
out
mov
add
fldcw
movsb
imull
mov
imul
add
and
jae
jmp
lret
lea
jbe
or
mov
bsf
sbb
xadd
add
movzbw
pusha
ror
adc
mov
shld
clc
call
adc
or
mov
adc
aad
fnsave
ret
stos
es
sbb
and
mov
dec
aas
rorb
or
lods
xchg
dec
cmp
shlb
xchg
sbb
push
jns
cmp
pop
xchg
pop
push
pop
jl
fs
je
cmp
clc
add
stc
push
movb
test
cmp
push
mov
lea
jb
clc
cmp
bt
cmp
push
pushf
call
shl
mov
inc
pop
aaa
xchg
inc
cmp
ljmp
mov
cmp
jp
sti
dec
cmpsb
pop
inc
mov
push
cwtl
pop
ljmp
loopne
xchg
popa
js
sub
inc
sbb
pop
pop
aad
into
sub
out
mov
ficompl
pop
fs
fisttpll
into
lods
aad
sub
pushf
xor
icebp
push
jb
ror
dec
push
mov
add
test
ret
cmp
in
outsl
pop
stos
jno
mov
pop
out
sub
cmp
lods
sbb
ja
inc
call
push
addr16
jns
cmp
xchg
into
das
adc
enter
cmp
cmp
fildll
xchg
adc
mov
mov
ds
mov
adc
test
lds
xchg
sbb
data16
test
pushf
mov
cmp
js
and
xor
mov
std
aaa
cs
xchg
ds
fsubrl
nop
dec
testb
xchg
arpl
sbb
add
loopne
pop
sub
push
rclb
ja
scas
sbb
add
test
movsl
es
dec
imull
fistl
out
pop
mov
sbb
cmpsl
adc
xchg
call
shr
clc
imul
andb
adc
mov
lcall
pop
adc
aas
xor
inc
jg
pop
enter
xor
jae
outsb
lds
push
cwtl
push
btc
test
shld
mov
clc
test
push
call
lea
jb
stc
clc
cmp
push
pushf
pushf
lea
jae
push
pusha
pusha
lea
jmp
call
jmp
mov
jmp
not
mov
pushf
pushf
push
lea
jmp
cmp
push
call
cmp
push
jmp
inc
movb
stc
clc
pushf
shr
push
jmp
cmp
pusha
call
bt
neg
call
lea
jne
call
push
pushf
movl
movb
pushf
push
lea
jmp
adc
stc
ret
lcall
cmp
sti
aam
xor
add
scas
ror
mov
movsb
mov
push
adc
dec
sub
cmc
jno
mov
cmpsb
loopne
jp
inc
mov
pop
in
int3
xor
daa
test
mov
fsub
stos
outsb
inc
cmp
push
lea
jle
jecxz
jae
jo
rolb
jle
loope
cmpsl
loope
xchg
push
push
jmp
in
xchg
xchg
dec
cmp
xor
arpl
push
fiadds
sub
lret
push
mov
or
mov
sti
inc
add
xlat
inc
xchg
push
cmc
inc
pop
rorb
test
inc
movl
cmc
jae
mov
pop
aaa
movsl
xchg
leave
int3
nop
adc
out
call
push
xchg
fsubrs
or
popf
xchg
jmp
push
dec
mov
cmp
daa
jo
adc
outsb
aaa
pop
mov
cmpsl
enter
fadd
das
mov
insl
pop
push
xor
xchg
test
out
mov
mov
add
movsl
xchg
sti
jae
ljmp
nop
leave
mul
ss
sbb
stos
or
stos
data16
dec
push
jmp
sub
dec
pop
sti
shll
jmp
mov
pop
sbbl
mov
lea
mov
mov
add
outsl
loopne
pop
inc
addr16
aaa
lret
dec
repnz
xor
inc
xchg
inc
cmp
repnz
mov
mov
xchg
inc
sub
sahf
sbb
cvtps2pi
push
test
outsl
test
sub
push
push
std
cmp
sti
push
pop
jmp
iret
cmp
pushf
call
shr
sbb
movzbw
mov
cmc
stc
pushf
and
cmc
add
pushf
pushf
pushf
lea
jmp
push
mov
pushf
push
pushl
call
call
push
pushf
lea
rcr
sub
test
add
dec
push
movsbw
bts
push
lea
cmc
push
mov
movsbw
sar
xor
mov
movsbl
lea
jmp
mov
clc
add
and
pushf
cmp
bswap
shr
and
adc
shl
mov
bsr
cmp
stc
add
pushf
mov
lea
jmp
lods
lock
inc
fidivs
cmp
in
push
aas
add
fadds
cmp
sbb
aad
pushf
sub
sub
push
mov
or
test
insb
push
pop
ficomps
test
jg
subb
jb
xchg
mov
jecxz
add
mov
loope
lahf
and
sbb
iret
sub
sbbb
xchg
pop
rorb
mov
scas
cmp
sbb
pop
mov
movsb
imul
cltd
cmp
movl
inc
adc
or
loope
fyl2xp1
call
mov
ljmp
xor
dec
cmovo
fldenv
cmp
sbb
into
pop
cmp
jb
cmp
inc
arpl
stc
cwtl
fiadds
dec
call
aas
mov
lret
rcrl
add
adc
rcll
sbb
movsb
rclb
fwait
dec
lods
xchg
setg
jmp
ficoms
push
xor
or
lahf
movl
jmp
pusha
pusha
lea
movzwl
jmp
push
jmp
bswap
pushf
lahf
or
mov
and
stc
setns
bswap
mov
and
daa
sub
sbb
push
mov
btc
jmp
call
test
cmp
mov
movw
push
jmp
sub
mov
clc
cmp
stc
cmpb
jmp
push
call
in
inc
addb
cmpsb
add
mov
sti
or
mov
cwtl
imul
pop
js
mov
stc
jns
inc
mov
push
xor
add
push
arpl
jmp
adc
jns
imul
aas
cld
fstpt
popa
iret
xchg
xor
xor
adc
jmp
aam
mov
call
call
mov
push
lods
pushf
rol
pushf
test
cmp
xor
push
push
mov
push
inc
pushf
stc
ror
call
call
imul
mov
movl
call
arpl
ret
fadds
ljmp
sbb
jle
packuswb
mov
mov
jnp
xor
mov
dec
cmp
push
inc
sub
fstps
arpl
pop
mov
lods
mov
cmp
pop
push
jmp
cmp
das
jmp
xchg
ljmp
mov
punpckhwd
mov
jg
fnsave
les
addr16
leave
aam
xchg
dec
push
add
mov
jp
fidivrs
dec
mov
imul
call
mov
int3
in
add
push
lret
aaa
push
xlat
in
dec
mov
inc
sub
push
es
mov
aaa
in
dec
sbb
cmp
add
or
shl
or
pop
leave
dec
inc
xor
aad
arpl
movsb
sbb
sub
dec
flds
mov
fs
loope,pn
out
pop
js
adc
movsb
pop
inc
and
jmp
jl
lret
add
or
std
mov
mov
cmp
sub
dec
inc
dec
lret
cli
or
dec
std
jb
dec
mov
push
test
data16
shl
jmp
popf
sbb
sti
popa
lret
jle
mov
dec
or
sub
dec
pop
rcl
or
sbb
pop
mov
sti
movsb
xor
jae
outsl
and
mov
call
call
jmp
mov
movl
movb
movl
movl
push
push
lea
jmp
push
mov
mov
jmp
fwait
imul
adc
add
inc
mov
icebp
push
in
mov
cmp
jg
ja
je
cmp
sub
mov
push
push
push
mov
movsb
add
imul
dec
rclb
xchg
add
aas
jmp
mov
popa
or
outsb
or
pop
or
sbb
jno
add
xchg
hlt
sbbb
movsl
ds
mov
jmp
mov
cld
xchg
mov
and
lahf
outsb
cmp
lea
fldt
stos
mov
arpl
cmp
xorl
hlt
outsb
enter
jae
pop
adc
fs
cmc
mov
lods
pusha
jbe
test
jnp
xchg
scas
out
jno
and
xor
mov
inc
and
shll
inc
sub
repnz
out
pop
sbb
enter
stos
mov
dec
fsubs
lea
jmp
imul
add
lret
mov
ret
pop
xor
mov
out
aaa
rolb
mov
cmp
call
push
push
jecxz
sbb
test
inc
mov
add
out
cwtl
dec
lods
cmpsl
icebp
data16
add
out
adc
loopne
call
add
push
mov
data16
mov
out
xchg
inc
in
sbb
push
jns
push
sub
jae
loope
pop
bt
test
sub
push
lea
jg
inc
jmp
jmp
jmp
call
fldl
push
and
aad
es
leave
push
or
mov
adc
inc
push
add
pop
dec
or
lods
cmp
cwtl
ror
cltd
mov
call
mov
sub
sub
jg,pn
movsl
xor
pop
jb
jecxz
add
push
call
bt
pusha
clc
or
pushl
lea
je
bswap
pusha
mov
bswap
movsbl
pushf
lea
push
xchg
lea
movsbw
not
pushl
popl
pop
movsbw
pushf
mov
jmp
xor
jmp
push
or
in
mov
insl
mov
sarl
mov
scas
aam
add
adc
sbb
or
shld
cmp
xor
or
push
lcall
and
mov
jge
popa
cwtl
cmp
xor
or
adc
sbb
or
push
mov
testb
pop
int
mov
fisubrl
sbb
inc
test
lds
ds
xchg
test
int
sbb
and
xor
push
pop
in
sub
add
fidivrl
insb
mov
sbb
and
into
xor
bswap
sub
adc
xor
push
or
nop
aaa
mov
insl
and
or
syscall
push
adc
xor
cwtl
push
lcall
sbb
lods
cmc
js
sbb
and
jae
lret
lret
enter
inc
loopne
aaa
xorl
pop
call
sbb
xchg
sub
cwtl
mov
gs
or
xchg
enter
or
aaa
lcall
push
daa
mov
push
loop
loope
mov
pushf
sbb
test
mov
push
test
ljmp
jbe
sbb
movsl
inc
and
enter
or
scas
xor
aam
adc
out
push
and
push
orb
xor
cwtl
addb
mov
xor
call
cmp
je
sbb
std
mov
mov
gs
sub
fcoms
pop
mov
mov
loopne
push
dec
movsl
lea
jmp
add
popf
scas
sbb
jo
push
pop
fnstsw
clc
ljmp
fisttpll
insb
mov
dec
xor
clc
call
mov
vmovlhps
pop
or
or
xor
pop
imul
or
enter
xor
inc
test
jne
sub
cmc
test
movsl
push
cmc
lock
repnz
mov
pop
std
stc
shrb
aaa
or
push
dec
mov
mov
inc
dec
pop
mov
notl
adc
xchg
mov
imul
loop
adc
ret
pop
cmp
lds
dec
subl
mov
or
sub
xchg
addb
insl
adc
out
rclb
in
ja
pop
cmc
movsb
push
shrb
mov
in
and
add
ficoms
sbb
sbb
dec
lods
push
cmp
sbb
out
imul
jmp
int
xchg
or
or
sbb
aaa
push
fdiv
push
or
xchg
lea
mov
pop
cmp
imul
inc
pop
test
sahf
cwtl
repnz
mov
mov
mov
xchg
cmp
or
jge
cmc
in
mov
lahf
jmp
or
or
jp
je
sarl
or
push
cwtl
mov
loop
mov
loope
cmp
cli
outsl
adc
int
adc
pop
adc
icebp
cmpsl
scas
mov
pop
push
stos
jg
push
jb
adc
fidivrl
orl
cli
bound
mov
jmp
xor
mov
insl
jecxz
sub
aam
popa
pop
jg
pop
mov
cmp
adc
or
int
outsb
fimull
dec
push
sbb
scas
and
mov
add
mov
add
xchg
add
out
sub
int3
jne
pushf
cmc
mov
mov
mov
xchg
xor
ljmp
adc
mov
dec
aas
scas
xor
cmp
insb
xor
and
in
ds
sub
in
mov
lds
ret
mov
sbb
in
std
js
adc
push
lahf
inc
fs
xchg
cwtl
xchg
outsl
xchg
loope
jmp
pushf
adc
adc
mov
cmpsl
cmp
lds
jp
sbb
xchg
adc
mov
ja
pop
add
xor
cmp
popa
ljmp
pop
xor
jne
lahf
popa
push
pop
cmc
movsl
pop
dec
xchg
imul
scas
loope
or
or
lods
aaa
icebp
jmp
scas
ja
push
sbb
push
hlt
in
mov
and
aam
out
pop
jne
bt
out
movsl
mov
mov
cwtl
test
mov
je
add
xor
inc
int3
pop
mov
mov
ljmp
sbb
and
mov
addb
mov
cs
xor
dec
ja
xchg
xchg
jno
lds
sbb
jg
mov
add
popa
jge
scas
test
incl
in
lahf
aam
cltd
dec
xor
dec
bnd
imul
popf
sub
ret
adc
loope,pt
or
pop
ljmp
fsub
mov
xchg
mov
push
loopne
xor
cmp
sub
xchg
ret
or
or
sbb
pop
filds
psraw
repz
loope
mov
fidivrl
xchg
enter
push
push
into
pop
xchg
subb
adc
in
loope
mov
mov
add
loop
cltd
push
mov
push
bound
mov
inc
jp
cmpsl
pop
sbb
es
push
jns
ficompl
sbb
cmc
repz
or
lret
lea
lods
dec
cli
pop
imul
push
mov
and
dec
jo
xchg
or
sahf
pop
mov
stos
push
sbb
inc
jg
or
data16
in
jmp
popa
mov
sbb
sbb
enter
jns
movsl
or
mov
push
dec
pop
imul
jae
fsubrs
add
cmc
sbb
xor
xchg
sbb
aaa
and
pushf
push
int
add
out
rorl
add
sbbb
jnp
orl
cmp
leave
dec
cmp
xchg
adc
xlat
pop
sub
enter
ret
mov
js
insb
dec
or
cmc
xchg
fidivrl
lcall
mov
out
rcll
mov
push
xchg
out
fisubl
add
xchg
add
insb
jns
adc
imul
cmpsl
jmp
or
dec
sti
test
jae
lcall
faddl
dec
out
and
cmp
filds
inc
loope
and
adcb
sbb
adc
mov
int3
dec
into
addr16
pop
sbb
jg
mov
subl
lods
je
pushf
push
orl
xchg
sub
or
mov
andb
shll
cmp
push
fisubrl
inc
js
sbb
into
notb
pop
xchg
dec
lods
push
inc
adc
lret
int
mov
and
pop
outsl
pushf
subb
rolb
mov
or
push
inc
daa
xor
dec
nop
sub
mov
add
incb
or
mov
cmp
cwtl
pop
pop
imul
lcall
pop
cmc
xor
or
mov
sti
inc
mov
or
mov
lock
popa
xchg
jne
inc
mov
js
mov
out
sub
pop
xchg
out
mov
add
mov
push
movsb
jo
fisttpll
aam
mov
mov
fisubrl
mov
inc
pop
popa
add
in
cltd
daa
subl
cmp
insl
add
push
int3
mov
pop
out
test
mov
mov
cwtl
push
insl
insl
stc
popf
cmp
push
add
cmp
outsb
xchg
jae
mov
je
sti
subb
fists
psubb
mov
pop
ljmp
inc
or
or
xchg
sti
pushf
aaa
push
or
adc
call
dec
imul
gs
and
or
ljmp
enter
push
stos
dec
mov
outsl
sub
cmp
jne
cltd
lds
mov
xor
xchg
aam
pop
lahf
mov
scas
xchg
jge
fadds
inc
xorl
adc
mov
mov
or
xchg
adc
movsl
xor
xchg
sub
mov
pop
outsb
ret
mov
ja
jne
imul
adc
in
and
out
pop
pop
jne
aam
cmp
arpl
punpckhbw
pusha
sbb
mov
add
mov
xchg
das
and
in
dec
dec
sahf
lods
jp
aaa
ret
les
ficompl
pop
pop
dec
ficompl
mov
xor
lds
and
lahf
test
sub
jmp
inc
pop
pop
enter
or
inc
in
mov
push
or
add
push
push
or
pop
mull
loop
ss
dec
jno
or
imul
sub
add
dec
fdivrl
add
lcall
pop
and
cmp
push
lock
xor
ljmp
nop
cmc
adc
cs
popa
xor
or
jmp
and
pop
mov
adc
sub
pop
inc
cs
jmp
sbb
test
popf
and
mov
sbb
sub
sbb
adcb
and
pop
dec
mov
sbb
sub
add
mov
dec
test
enter
in
fildll
add
orl
add
rorb
insl
idivb
cmp
loopne
or
or
out
push
jne
sub
rorb
inc
jg
imul
mov
jbe
cmp
imul
cmpsb
call
jns
push
dec
inc
xchg
sbb
push
adc
fiadds
xchg
push
xchg
lret
fdivl
in
or
call
sbb
and
loopne
push
lret
pop
and
sbb
adc
cwtl
mov
pop
add
cli
add
sub
outsl
xor
subb
jne
inc
push
aaa
push
pop
fimull
xor
and
add
scas
xchg
aas
enter
xor
adc
push
jle
or
jmp
sti
cmpsl
jge
mov
adc
cwtl
lret
inc
and
enter
arpl
andl
sti
fsubr
or
xor
in
or
pop
roll
cmc
fisttpll
push
enter
stc
jecxz
js
mov
dec
ret
scas
nop
jge
jle
push
sbbb
pop
movsl
hlt
icebp
filds
add
aaa
mov
cmp
or
ja
add
ljmp
mov
jmp
xbegin
xor
call
pop
dec
loope
cltd
xor
adc
lds
aam
fsubl
addl
xchg
inc
jnp
loope
lret
inc
jns
cs
inc
or
mov
dec
decb
push
xorl
das
add
arpl
push
ja
xor
ficompl
mov
arpl
sub
xchg
push
dec
cmpsl
mov
dec
mov
pusha
cli
push
in
xor
ja
xor
test
in
inc
sbb
sbb
sbb
loopne
test
and
das
cmp
or
mov
mov
cmp
mov
add
push
xchg
movsl
cli
movd
and
int
outsl
sbb
mov
mov
into
arpl
leave
cmp
or
sbb
lock
adc
popf
mov
in
mov
pushf
clc
into
cwtl
cld
pop
in
xchg
cmp
xchg
xchg
gs
addl
sbb
loope
push
xorb
mov
jle
leave
push
or
popf
xorb
xorl
fsubrl
cmpsb
and
jge
cltd
in
or
dec
push
leave
sbb
sub
cltd
sub
pop
in
sbb
mov
pop
cmc
mov
int3
enter
gs
ljmp
ret
mov
sahf
loopne
nop
jecxz
adc
dec
pop
sbb
lcall
adc
ror
xor
adcl
xchg
in
add
jns
cmpsl
mov
cmp
pop
sub
loopne
in
mov
mov
mov
rcl
jmp
lcall
nop
sub
dec
inc
fldenv
out
or
test
or
and
test
loopne
sbb
dec
insb
xchg
data16
data16
push
jl
cmp
ret
push
aaa
cmp
shr
outsl
test
push
sbb
pushf
add
repnz
sub
daa
test
jecxz
sbbb
nop
aad
jl
mov
fimull
test
ror
js
or
and
psubb
out
enter
sub
cs
inc
test
mov
mov
cmc
sarl
pop
adc
cmp
mov
or
jecxz
sti
pop
add
aas
cli
cmp
jb
in
mov
xor
xchg
sub
fists
and
xchg
and
adc
mov
sbb
sar
xlat
add
xchg
or
inc
ret
cli
add
sbb
in
clc
jno
cwtl
fs
js
outsl
fsubs
pop
test
in
data16
outsb
add
xchg
jge
out
mov
aaa
cmpsb
aas
mov
fiaddl
in
push
jp
popa
xchg
scas
push
sub
jmp
xchg
mov
orl
roll
fwait
daa
in
rorb
movsb
mov
subb
iret
pop
in
lods
sbb
mov
es
loop
fwait
mov
rcrl
xor
ja
or
cmc
movsb
ret
leave
faddl
cmpsb
inc
scas
in
inc
cmp
gs
movsb
leave
inc
imul
adc
jecxz
sub
and
and
rcll
sbb
pop
mov
out
dec
lcall
jp
enter
movlps
fadd
call
ret
rcrb
jge
loop
push
jle
les
psadbw
mull
movsl
fnstenv
cmp
dec
xor
mov
mov
xor
lods
mov
rorb
mov
aas
repnz
iret
shlb
ret
mov
or
pop
sbb
xchg
or
mov
jno
dec
add
jbe
movsb
mov
sti
xorb
cmp
stc
lds
push
push
js
cmpsb
outsl
and
mov
push
jns
inc
mov
inc
daa
jp
ljmp
in
jge
insb
lock
push
aas
enter
mov
xchg
jmp
cltd
gs
int3
dec
pop
xchg
addl
paddb
inc
sbb
aas
ljmp
pop
jg
es
bound
or
enter
addb
lds
in
mov
orl
cmpb
mov
pusha
daa
imul
sti
aaa
mov
and
inc
pop
cmc
mov
in
mov
dec
add
test
xor
xchg
enter
jle
cmc
lods
rorb
jnp
imul
jecxz
adc
cmc
cmp
sar
lahf
jge
adc
inc
push
xchg
je
iret
ficoml
sahf
pop
imul
stos
xor
sti
mov
push
mov
pop
adc
in
lods
mov
dec
cmovne
cmp
mov
adc
or
data16
nop
decb
into
fsubrs
adc
popa
dec
sbb
cmp
jnp
cmc
fiaddl
pusha
or
daa
or
jg
mov
ficompl
push
imul
repz
enter
push
mov
rol
push
pushl
push
push
push
mov
cmp
es
fmuls
stos
cmp
out
das
xchg
jmp
adc
jmp
stos
clc
jp
imul
inc
push
sub
inc
or
jbe
mov
pop
orl
or
scas
cld
adc
iret
nop
das
mov
fstl
sahf
cmc
push
cmp
lods
sub
outsl
jle
cs
mov
xor
ficoml
or
mov
std
out
das
and
fisubl
xchg
jnp
inc
cmc
loopne
test
push
das
dec
cltd
jge
das
dec
cmp
adc
js
mov
inc
enter
sbb
adc
in
aam
sti
adc
movsl
mov
xchg
inc
adc
mov
mov
lds
cmp
mov
pop
push
xorb
or
mov
insb
adc
lock
or
mov
cmp
fcoms
test
adc
bound
cmp
xchg
mov
in
fs
lods
inc
cmp
and
inc
ds
in
push
ret
stos
loop
or
out
xorb
push
in
pop
cltd
add
xchg
mov
push
jb
enter
test
cmp
aaa
sub
mov
push
enter
lds
orb
mov
nop
xchg
arpl
and
push
fidivrl
sub
push
popl
xor
sarl
ret
pop
in
movl
and
inc
fimull
cmp
mov
or
hlt
js
scas
adc
pushf
int3
jnp
shrl
in
cwtl
test
pop
jo
push
jno
add
mov
mov
cmc
push
dec
lds
mov
arpl
or
pop
fidivrl
cmpsl
stos
xchg
sub
push
push
lea
js
int3
pop
sti
cmp
add
stc
lahf
push
sarl
or
adc
mov
cmp
jp
clc
lds
lcall
jmp
scas
sub
dec
lock
cmp
cmc
adc
mov
loopne
jp
stos
xor
dec
test
mov
xchg
test
xchg
lds
int3
xchg
call
mov
cmpsb
js
dec
mov
loopne
ror
inc
shrl
xchg
sbb
mov
in
sub
or
aas
shr
or
popa
jne
aad
sti
arpl
dec
cld
addb
test
add
shl
xor
cmc
add
sbb
mov
daa
in
and
inc
mov
iret
xor
rcl
pushf
push
insl
add
movsl
fs
jecxz
cli
daa
ficompl
je
xchg
enter
xchg
lret
inc
add
ss
add
out
sti
int
mov
fidivrl
jnp
int
jecxz
out
ja
xchg
push
inc
mov
cmc
xlat
xchg
fcmovb
xchg
insb
mov
mov
fsub
in
jge
inc
lcall
xchg
mov
xchg
add
jmp
cmpsl
jns
mov
pop
andl
daa
scas
das
test
mov
push
adcl
movsb
imul
mov
insl
ret
mov
std
data16
fidivrl
je
cld
dec
dec
sub
mov
xchg
lods
add
mov
cmp
jecxz
sbb
xor
aas
sti
cmp
push
loope
cmp
push
or
cwtl
add
and
inc
jae
pop
push
lcall
stos
jo
and
out
adc
mov
mov
popf
sbbb
sub
inc
cmp
aaa
or
xor
sub
or
das
mov
push
cmp
cs
mov
inc
ds
enter
imul
roll
test
les
dec
push
cli
mov
push
stc
in
inc
test
jne
mov
pop
xchg
ds
insl
les
jno
cli
and
push
nop
inc
mov
mov
cmc
test
imul
lea
mov
push
imul
imul
inc
xchg
sbb
lds
dec
repnz
push
and
jno
and
or
pop
cmp
dec
mov
mov
pop
mov
enter
xor
sahf
xor
pop
in
cpuid
ss
cmp
orb
and
enter
js
adc
push
fs
dec
jbe
pop
adc
fidivrl
jg
inc
mov
push
push
lock
out
jne
xchg
xchg
xchg
pop
fstpt
fincstp
mov
call
jle
push
or
fisubrl
rol
xchg
lods
loopne
or
cmp
and
mov
inc
sbb
push
xor
and
fdivs
jg
jmp
lcall
mov
pop
addl
inc
push
sbb
scas
arpl
xchg
gs
je
sbb
scas
fucomi
add
cmc
adc
add
mov
aad
jge
es
pop
dec
mov
ljmp
push
in
bound
push
jbe
cmc
mov
loope
push
mov
inc
mov
pop
mov
out
push
arpl
lret
ss
adc
dec
and
ds
mov
insl
inc
cltd
or
insl
sbb
leave
push
roll
lods
sbb
sbb
lcall
mov
subl
cmpb
dec
gs
movsl
push
jl
imul
mov
call
int3
jns
mov
push
adc
dec
lods
adc
mov
imul
lea
shlb
jns
inc
or
sbb
pop
imul
fdivl
dec
inc
lock
subb
mov
pop
mov
mov
loopne
sti
inc
pop
dec
mov
imul
sbb
mov
std
flds
fmuls
adcl
adc
lahf
stos
and
lea
cmp
xchg
cmc
pushl
in
das
cmpsl
aas
outsl
adc
push
sbb
xchg
fadds
popf
aaa
mov
outsb
push
add
jge
pop
mov
mov
dec
lea
add
in
iret
int
jmp
jne
loopne
xor
sbb
mov
dec
int
in
outsb
inc
lods
test
mov
adc
nop
push
cs
mov
jo
lods
dec
test
xchg
mov
js
pop
lods
dec
jo
cmpb
jae
and
cltd
add
add
ficoml
cwtl
adc
xchg
lret
add
sbb
jecxz
test
mov
lret
sub
movsl
inc
repnz
fadds
xchg
push
bound
mov
or
xchg
cmpsb
pop
inc
lds
mov
or
decl
pop
lret
lods
movsl
sub
xor
test
xchg
popa
push
cmp
clc
cmpsb
fiaddl
pop
shll
xor
jnp
dec
fxch
mov
pop
or
cmp
dec
push
test
add
adc
daa
mov
adc
in
pop
mov
xchg
out
repnz
adc
push
sbb
cmp
sbb
and
lock
inc
rcrb
xchg
fisubl
faddl
jns
in
adc
repnz
inc
adc
pop
aad
sahf
dec
mov
cli
jae
xchg
fimull
dec
or
xor
clc
push
add
pop
shr
sbb
mov
arpl
int3
fwait
call
pop
xor
iret
cmp
add
push
cmp
shl
mov
push
sub
lcall
push
cwtl
adc
lret
test
enter
fwait
outsl
adc
cmp
sbb
push
popa
sbb
lods
int
push
scas
mov
sar
inc
in
add
push
lahf
in
fmull
mov
pushf
jne
mov
cwtl
sti
ret
cwtl
ret
or
les
sub
and
jne
mov
in
clc
aad
mov
cwtl
or
xchg
lret
subb
mov
sub
lahf
mov
rclb
faddl
jg
ficoml
mov
out
lods
and
lret
in
sbb
cli
test
out
and
inc
enter
lahf
rolb
sbb
inc
lahf
pop
repnz
xchg
test
insb
pop
mov
sbb
jge
mov
mov
insl
fisttpll
pop
inc
sbb
mov
lds
add
mov
xlat
insl
dec
rorl
lahf
jne
mov
addr16
mov
mov
test
test
pmaddwd
mov
inc
ds
dec
and
scas
inc
repnz
fcmovu
cmp
dec
repz
dec
subb
dec
add
adc
aam
and
rcr
fiaddl
xchg
ret
push
mov
xor
cmc
pop
or
push
sub
insl
cmp
into
push
movsl
mov
dec
xchg
or
addb
push
mov
adc
sbb
fsub
bound
jb
pop
scas
in
or
dec
ret
jne
cmp
and
adc
mov
mov
xchg
daa
movsl
repz
jmp
or
int3
inc
jle
cmp
dec
mov
push
dec
and
or
sub
lret
clc
mov
lock
stc
imul
inc
ret
pop
pop
push
lret
cmp
sub
lea
mov
sbb
gs
adcb
xchg
enter
scas
cld
cmp
sub
fiaddl
clc
lea
popf
or
dec
sbb
mov
mov
aaa
fistps
enter
ror
lahf
pop
test
sbb
nop
cwtl
pop
mov
cmp
movl
and
xlat
icebp
push
sub
mov
addr16
jo
popa
add
sbb
mov
ljmp
addb
mov
call
cmp
sbb
out
xor
das
mov
cmovb
insb
inc
cmp
cmc
mov
fdivrs
leave
add
cmp
imul
cltd
add
fwait
and
xor
sbb
push
iret
push
inc
mov
fimull
add
enter
insl
and
filds
loope
data16
sbb
ljmp
test
call
xorl
xchg
cmc
jbe
pusha
adc
jge
roll
cmp
enter
mov
nop
fimull
and
xor
daa
loope
push
cmp
jbe
adc
lods
jo
cmp
xorb
mov
icebp
jge
fsubl
icebp
jg
rclb
adc
cmc
adc
jne
dec
aaa
test
insb
std
jle
push
test
dec
sbb
orb
cmp
je
pop
inc
daa
mov
xchg
pop
enter
xchg
lcall
out
test
subl
call
mov
mov
pop
or
aam
push
lds
das
scas
dec
cltd
movsb
jmp
hlt
push
stos
test
imul
out
mov
dec
mov
or
scas
imul
scas
jle
test
inc
add
lods
enter
loope
cwtl
pushf
jle
sbb
fisttps
enter
mov
loope
jmp
scas
ret
out
mov
or
pop
cltd
call
mov
and
enter
and
pop
sbb
pop
cs
add
ja
bound
int
or
les
sub
movb
jmp
push
mov
aaa
mov
xor
xor
adcb
mov
popf
dec
mov
pop
lods
jmp
xchg
iret
loop
cmc
fidivrs
add
push
popf
jmp
xor
loope
xchg
dec
mov
push
or
repnz
cmp
insb
mov
mov
push
sub
push
lahf
call
lods
mov
sarl
add
lds
dec
data16
stc
push
rcrb
into
insb
xchg
fadds
hlt
adc
or
andb
sbb
add
int3
out
clc
movb
xor
loopne
jp
xor
cs
jecxz
insl
push
dec
jmp
xchg
xadd
add
mov
mov
aaa
mov
ljmp
or
dec
std
popf
pop
cli
flds
xchg
ficoml
test
xor
add
push
sub
loopne
sub
pop
pop
fisubs
imul
pusha
int
xchg
out
sbb
jge
xchg
ficoml
notl
lods
les
lahf
push
jge
cmp
in
mov
sbb
dec
dec
cltd
push
out
movb
jnp
cmpsb
and
push
les
fs
mov
push
daa
mov
fstl
mov
shlb
sub
jnp
cmp
pop
xchg
cltd
dec
sbb
das
gs
pop
push
dec
cmp
in
in
test
scas
adc
add
testb
jnp
inc
jmp
or
test
cmp
test
xchg
or
mov
gs
adc
arpl
add
xor
pop
fildll
dec
or
and
lods
aad
inc
jnp
inc
push
mov
or
out
sub
or
dec
lea
insl
repz
jne
enter
lds
or
inc
jno
rcrl
imul
dec
dec
jne
adc
jne
adc
adc
aaa
loope
mov
dec
cli
mov
jns
mov
lea
sbb
push
stos
add
lds
test
ljmp
jo
js
subb
adc
scas
adc
sub
mov
je
dec
cwtl
mov
jb
int
adc
repz
dec
adc
push
lods
in
gs
in
and
push
adc
jns
or
and
pop
adc
sbb
adc
or
adc
aam
pusha
cmp
mov
sbbl
mov
lock
iret
mov
adc
dec
or
xchg
dec
std
inc
insl
pusha
aad
clc
shlb
cwtl
fnstcw
insl
pop
sbb
adc
push
lahf
sbb
test
sbb
add
adc
pop
dec
imul
nop
lods
test
or
jne
and
push
int
adc
dec
xor
nop
push
push
dec
rcrb
mov
inc
or
in
jo
jbe
int
dec
mov
insb
or
xorb
mov
sub
sti
xlat
inc
flds
pop
mov
push
das
lds
push
dec
mov
xchg
xchg
dec
mov
xchg
or
fisubl
test
arpl
jge
xchg
sub
add
or
aad
and
roll
rol
nop
push
clc
cmc
insl
cmpsl
popa
out
push
cmpb
fmull
push
fcmovnu
adc
arpl
jle
or
lret
nopl
fcomps
add
and
mov
jno
gs
or
iret
pop
fidivrl
pop
push
nop
push
call
pop
bound
or
and
lea
dec
dec
lea
arpl
mov
adc
mov
add
sub
pop
cltd
or
jbe
stc
jecxz
gs
cmc
into
or
mov
adc
in
push
inc
jg
xor
and
jne
cmp
je
mov
out
aas
adc
push
adc
mov
test
push
fildll
jb
hlt
in
mov
mov
pop
and
insl
enter
inc
cmc
data16
inc
xorb
loope
lock
xchg
push
ficoml
add
cmc
in
enter
popl
sub
ficomps
daa
lds
push
daa
shrl
jmp
repnz
cmc
adc
in
and
out
imul
jl
or
aad
stos
mov
dec
imul
sahf
inc
adc
mov
add
in
sub
or
popa
pop
jmp
icebp
dec
inc
xchg
sub
sti
cmc
mov
int
mov
jne,pt
adc
mulb
fwait
cmp
negb
adc
arpl
test
in
xchg
adc
scas
fdivrl
rorb
out
mov
xchg
in
and
rcrb
and
stos
adc
je
and
lds
or
stc
mov
negb
outsb
add
cmp
testl
rcrb
mov
test
inc
mov
cld
popa
xchg
in
call
rolb
cwtl
aaa
dec
add
mov
in
sarl
and
and
daa
mov
jmp
jmp
icebp
mov
out
ret
pop
cld
jbe
xor
adc
enter
sub
push
lahf
icebp
xor
mov
gs
out
icebp
push
xor
sbb
cmpsl
mov
jle
rcll
stos
int
cmp
stc
jae
adc
idiv
icebp
xor
out
loope
in
popf
cmp
jbe
push
adcb
js
shrl
sbb
mov
lcall
pop
cli
call
sbb
sbb
call
cmpsl
mov
mov
adcb
int3
hlt
pslld
repnz
fldl
add
jp
fdivr
pushw
lods
pop
enter
out
sahf
in
test
jbe
sub
adc
imulb
aas
xor
into
push
je
aad
enter
in
inc
mov
add
lods
mov
fcmovbe
sbb
push
jb
movsl
hlt
adc
mov
inc
mov
cmpsl
mov
adc
pop
inc
fsubrl
cmp
pushfw
push
jecxz
mov
sbb
jae
mov
aam
fiaddl
out
mov
inc
imul
or
add
enter
ds
scas
ss
rorl
sbb
cmc
imul
pop
addl
cmp
mov
add
mov
pop
mov
outsl
jno
push
mov
mov
daa
fwait
mov
loopne
xchg
nop
cmp
mov
or
fwait
adc
mov
mov
jle
inc
jg
mov
pop
jge
jb
fucomp
leave
jns
in
mov
or
scas
dec
jge
aam
in
rclb
xchg
push
sbb
hlt
xor
out
pushl
daa
rcrl
mov
bound
stc
repnz
dec
lods
push
cmp
out
aam
sub
dec
jb
out
or
xor
insb
daa
sub
and
hlt
push
nop
push
in
pop
and
jne
inc
iret
lods
mov
enter
jns
mov
add
xor
sub
lock
and
inc
add
repnz
bound
cmp
jge
cltd
sti
arpl
aaa
rcrb
adc
aad
cltd
sub
fsts
cmp
fimull
xor
movsl
testb
stos
hlt
sub
lods
or
insb
sub
test
add
loopne
add
and
stos
popa
in
lahf
lds
dec
push
cmc
icebp
fwait
sbb
std
mov
mov
aam
mov
fcoms
jnp
add
cmpl
cmp
mov
cmp
push
pop
adc
in
popa
loop
mov
dec
lret
test
aam
enter
fistps
sub
pop
or
dec
into
jl
push
jo
out
lds
ds
pop
mov
xor
out
insb
mov
pusha
subb
rorb
inc
in
arpl
push
jp
xchg
enter
scas
mov
jmp
negb
in
test
addr16
rcrl
test
sbb
rep
fdivrl
adc
push
or
or
aas
mov
or
jecxz
xchg
insb
jp
mov
hlt
int3
push
pop
fiaddl
adc
lds
call
jmp
sbb
cmp
out
sbb
data16
out
pusha
mov
cmc
mov
pop
adc
push
jbe
mov
sbb
mov
shl
test
js
bound
jmp
jge
insb
outsb
mov
punpckhwd
pop
pushf
jo
pop
adc
sub
loop
int3
test
xor
daa
cvttps2pi
pop
lods
popa
mov
push
cltd
sub
jae
add
mov
inc
fisubl
mov
push
mov
pop
outsb
push
loopne
adc
xchg
push
sbb
ror
add
cmpb
in
pextrw
xor
out
push
cmpsb
pushf
jl
adc
and
pushf
or
or
adc
pop
roll
fsts
aam
mov
xadd
aas
mov
popf
imul
sbb
movsb
jo
popf
adcb
outsb
scas
sbbb
and
or
fwait
scas
lock
sub
inc
cmp
and
leave
mov
test
testl
and
lods
mov
insb
enter
es
adc
and
lock
insl
mov
sbbl
mov
enter
imul
mov
fiaddl
pop
mov
jl
cmp
aam
jmp
add
outsb
cmpsl
imul
or
mov
movlps
mov
mov
mov
mov
xchg
lea
xor
repz
pop
xor
aam
xor
into
inc
push
int3
xchg
stos
popf
cmp
mov
add
enter
lcall
shrb
rorb
call
or
test
or
sbb
xor
fwait
mov
xchg
dec
push
fisubrl
or
lock
inc
dec
inc
mov
pop
add
cld
les
and
cmp
lea
negl
xchg
inc
test
lahf
push
iret
mov
lods
cmp
jle
aaa
cmp
and
xor
push
lea
xor
sahf
add
or
in
sbb
and
mov
or
divl
icebp
and
and
jmp
loope
std
jae
push
sbb
pop
add
sbb
lods
imul
dec
insl
adc
or
mov
gs
push
cmp
or
loopne
nop
out
sbb
pop
jnp
jmp
popf
jp
subl
mov
push
nop
pop
in
xor
mov
gs
movsb
and
sbb
das
out
xchg
jae
jg
out
add
xchg
xchg
test
sbb
adc
and
lds
lahf
jnp
aam
adc
loop
mov
popf
aad
sbb
pushf
cmp
pop
mov
cmpsl
add
and
add
xchg
pop
xchg
mov
in
jecxz
mov
fs
out
inc
jne
std
push
int
push
inc
aas
sub
sbb
inc
fidivl
cmp
loope
imul
nop
cld
cmp
adc
in
mov
cmp
cmp
cwtl
lock
pop
in
addr16
ss
movsl
xchg
adc
cmpsl
sub
stos
aad
fimull
pop
insb
mov
adc
sub
pop
fidivl
jmp
cmpsl
sub
or
lds
sub
mov
xchg
xor
out
xchg
cmp
std
daa
enter
mov
ret
ds
pushf
adc
lcall
xchg
push
daa
adc
fldt
add
loopne
adc
sbb
fldenv
notl
mov
daa
enter
pop
fidivrl
sar
xlat
shll
cwtl
enter
out
inc
cs
mov
add
aam
mov
enter
lods
push
sub
mov
mov
xchg
or
sbbl
pop
ja
fwait
insl
or
clc
mov
shrl
cmpsl
popa
stc
mov
orb
lds
cmpsb
iret
lahf
mov
mov
call
insb
adc
sub
mov
lods
add
xor
add
or
cmp
popa
xor
push
rcrl
aaa
mov
pop
lahf
lcall
jnp
and
dec
out
jno
into
or
jne
insl
sub
popa
jmp
push
sub
push
sbb
test
xor
repz
imul
loopne
movsl
and
or
pusha
push
mov
xchg
mov
lret
mov
test
pop
rclb
jb
pusha
ret
xchg
repnz
iret
ficoml
mov
lcall
in
dec
push
incl
mov
adc
pop
test
push
add
fidivl
lds
incl
enter
in
xchg
jae
cli
mov
sbb
push
mov
adc
mov
add
in
stc
dec
bound
daa
orb
scas
xchg
push
sub
mov
aaa
and
lds
mov
jno
push
imul
hlt
adc
into
arpl
fidivrl
sbb
xor
cmc
sbb
mov
int3
pop
mov
push
dec
adc
lods
lds
jo
orb
scas
mov
aaa
mov
test
loop
adc
xchg
mov
cmp
rcrl
and
xchg
dec
pushf
or
mov
popa
cmpsb
mov
jmp
cmpsb
dec
in
movsb
lea
or
fdivl
mov
cmpsl
aaa
lds
mov
mov
jmp
sbb
and
push
test
mov
dec
jno
dec
cmp
aas
enter
cmova
repz
sbb
dec
adc
or
ljmp
and
out
cmp
test
rcll
xchg
arpl
add
cld
das
pop
test
andl
cltd
mov
int
sbb
mov
jnp
push
ss
imul
mov
out
aaa
mov
xchg
shrl
out
lcall
test
pop
sarb
icebp
lahf
les
jmp
push
xchg
in
imul
mov
adc
sbb
stc
fadd
cltd
xor
add
loop
push
fidivrl
aaa
pusha
cmp
jae
setne
imul
mov
ljmp
cmc
pop
outsl
sub
mov
mov
out
std
scas
outsb
push
inc
and
movsb
ljmp
add
sub
dec
mov
xor
mov
add
lds
int
gs
test
inc
dec
push
mov
push
pop
dec
lods
lahf
sub
dec
pop
out
mov
pop
xchg
xchg
aas
pop
xchg
push
sbb
adc
and
add
addr16
sbb
jb
cmp
insb
mov
xchg
and
call
stos
clc
or
mov
fiaddl
inc
lret
add
int
add
xor
loope
roll
cmc
fmulp
jmp
inc
mov
cmp
lock
mov
pop
inc
bound
mov
lahf
and
arpl
sbb
hlt
pop
rcrl
xchg
shll
vpunpcklwd
mov
mov
and
jne
inc
xlat
inc
mov
add
daa
je
loop
pusha
pmulhuw
subb
add
lret
pushf
mov
inc
add
push
testb
fcoms
push
or
dec
repz
addb
sbb
fidivrl
adc
or
mov
out
lods
adc
lret
shr
adc
cmc
outsb
into
add
mov
enter
aas
and
adc
loope
push
or
push
and
cltd
daa
lahf
daa
insl
adc
pop
orl
pop
stos
popf
lods
lds
stc
pop
adc
int
dec
jle
pop
adc
dec
daa
inc
mov
scas
stc
int3
ljmp
enter
jmp
mov
mov
mov
test
dec
mov
jl
and
lcall
inc
cmc
jecxz
data16
aad
scas
jmp
and
push
int
iret
jno
cmp
fwait
aaa
enter
sbb
jmp
xor
cmp
mov
jne
int
cli
cmp
cmpb
push
cld
add
icebp
enter
stos
mov
push
je
pop
jno
pop
xor
sub
in
mov
sub
out
xor
aam
mov
add
insl
adc
mov
aas
mov
inc
movsl
test
scas
jmp
js
cmpb
icebp
fisttps
popa
addl
into
ret
jl
xchg
mov
les
cmp
push
push
mov
push
push
pop
fstps
mov
cltd
jns
pusha
pop
fs
clc
mov
add
je,pn
jmp
add
xor
sbb
gs
in
add
cwtl
or
das
subb
stos
mov
movsb
mov
fidivl
jb
lahf
push
pop
fs
test
xchg
xchg
pop
jecxz
cld
das
pop
mov
lcall
sub
lcall
mov
pop
jecxz
or
mov
pop
xchg
jne
call
mov
mov
add
mov
inc
adc
fisubl
cltd
push
jmp
repz
jbe
enter
cltd
inc
pop
lahf
int
mov
push
subb
int3
roll
xchg
mov
cmp
daa
fiaddl
pop
mov
push
cmc
mov
addr16
sub
shrl
nop
pop
adc
les
adc
shll
lahf
daa
mov
clc
add
nop
fs
mov
jg
jbe
or
repz
nop
sbbb
mov
pop
cld
lcall
adc
jg
insl
leave
push
pop
or
out
fs
push
arpl
sbb
lcall
lds
bound
cmc
dec
cwtl
movsl
fadds
xor
loope
leave
ljmp
scas
movsl
cwtl
data16
cmp
push
pop
mov
lods
adc
in
adc
cmpsb
andl
daa
rorb
cmpsb
xlat
gs
rclb
push
mov
js
adc
insb
sbb
pop
dec
imul
cs
mov
lods
int
shl
push
lock
xchg
adcb
out
in
or
insb
loopne
add
pop
add
push
pop
or
sbbl
pop
arpl
fcom
orl
lds
xchg
ljmp
out
pop
ret
mov
sbb
jg
daa
lds
nop
sub
dec
stos
rep
out
adcb
sarb
arpl
pop
in
push
add
loope
stos
jle
ret
pop
data16
xchg
lods
xchg
mov
push
mov
or
jecxz
mov
loop
mov
sbb
add
int
inc
jnp
test
mov
xchg
or
pop
mov
inc
push
push
fldenv
jle
aam
adc
xchg
loop
pop
jmp
insl
push
add
daa
enter
push
jo
sbb
insl
leave
out
je
xchg
pop
mov
nop
xchg
mov
hlt
js
xchg
in
or
push
decl
pop
test
loope
pop
imul
movsb
dec
test
xchg
and
inc
rcr
sbb
pop
push
in
mov
adc
inc
dec
push
in
xchg
jo
push
adc
xorb
pusha
pop
xchg
sbb
aaa
adc
pop
mov
pop
and
cmp
mov
or
js
repz
clc
cwtl
cli
shll
scas
adc
xchg
add
das
add
faddp
inc
push
sub
ficompl
ljmp
xchg
inc
sti
jl
call
fwait
pop
lods
sahf
pop
lcall
jno
mov
cmp
push
mov
pusha
mov
ljmp
push
sbb
xchg
and
jge
test
mov
cmp
sub
sub
sti
clc
xor
mov
leave
push
jecxz
pop
enter
and
imul
and
mov
cmc
in
xchg
test
mov
jb
inc
push
mov
mov
or
div
push
sbb
jge
inc
std
push
iret
push
scas
or
jbe
mov
enter
ljmp
mov
jb
pop
adc
sbb
inc
cmc
into
add
pop
pop
mov
mov
sbb
push
jg
out
addr16
aam
sub
push
out
xor
mov
push
aaa
xor
jecxz
outsl
rcr
es
popf
mov
and
pop
xchg
dec
push
add
sbb
add
arpl
xor
jb
add
fpatan
adc
push
sbb
in
adc
lock
lock
and
lahf
xchg
lcall
sbb
pusha
clc
xchg
jo
outsb
sarl
sub
dec
dec
cltd
clc
xchg
data16
and
inc
sahf
add
inc
lea
lds
cmp
push
dec
das
add
jmp
or
xlat
lcall
mov
rolb
push
xchg
fcmovnb
ljmp
js
and
lcall
push
pop
cmpsl
jne
jbe
out
inc
add
imul
mov
outsl
xchg
push
dec
inc
xchg
daa
int3
push
add
lcall
or
xchg
sub
into
sub
inc
xchg
mov
lcall
mov
inc
enter
jp
hlt
sbb
cld
and
bound
les
xchg
mov
rcrb
sbb
enter
enter
and
inc
loop
lods
add
mov
add
rclb
fidivrl
icebp
pop
jmp
loopne
xchg
pop
xor
mov
jg
mov
dec
add
daa
cmp
lock
and
pop
in
into
pop
imul
pushf
fldenv
int
sub
jb
aaa
call
fidivs
add
enter
int3
dec
filds
pop
fsub
insb
dec
cmp
adc
cmp
jp
gs
fisubl
cmp
aas
rcrb
adc
outsl
mov
sub
adc
jne
push
std
stc
mov
adc
cmp
xchg
in
aas
imul
fwait
call
xor
lods
inc
mov
and
scas
or
ja
jge
jo
fcoml
pop
cli
mov
std
push
movl
repnz
push
cmp
insb
lahf
mov
lcall
inc
fwait
or
xchg
or
loopne
sub
int3
test
mov
and
dec
push
push
lret
sub
add
lock
pop
push
inc
cmp
cmc
mov
je
enter
loope
aaa
and
icebp
cwtl
or
xchg
mov
outsb
add
mov
pmaddwd
mov
call
push
test
and
adc
lcall
adc
lods
adc
mov
sbb
ret
lods
adc
mov
pop
sbb
and
cmp
mov
add
push
adc
mov
mov
fcompl
sub
push
pop
cli
fstl
sbb
orb
cmp
and
dec
pusha
iret
push
pop
sub
xchg
xchg
loop
fbstp
xchg
test
scas
rcrb
popa
dec
movsb
cmc
xchg
mov
jbe
lahf
push
std
sub
lret
stos
inc
lahf
mov
fiaddl
or
out
add
jl
fwait
jle
adcl
and
shl
notl
pop
sbb
repnz
fmuls
xor
daa
fidivrl
call
mov
xchg
loopne
cmc
add
test
or
mov
repz
andb
int
shr
pop
add
popa
daa
enter
outsl
out
mov
int3
add
enter
cmovge
push
fdivrs
push
test
fldcw
test
push
std
repz
adc
das
rcrl
mov
adc
lock
faddl
dec
out
fdiv
adc
and
pop
mov
push
fldl
dec
outsb
mov
jl
pop
in
push
lock
push
cli
sub
insb
cmp
notl
xchg
mov
lret
push
into
push
aaa
xchg
or
dec
mov
pop
into
mov
adc
sbb
and
xor
notb
sub
or
mov
mov
mov
roll
cmp
inc
jno
loopne
jbe
xchg
sbb
add
repz
enter
ret
mov
and
jge
pop
leave
in
enter
jp
adcb
jmp
add
sbb
orb
dec
daa
out
push
or
mov
inc
push
cmc
xchg
xor
jo
lcall
loope
ss
add
out
push
psubsw
mov
inc
fidivrl
adc
in
mov
mov
iret
or
int3
pop
in
cmc
std
or
dec
push
cwtl
in
loope
subl
mov
add
cwtl
cmc
mov
lds
jmp
repnz
or
iret
aas
xchg
aad
mov
jge
ret
xor
pop
sbb
or
fdivrs
lret
jmp
setle
in
iret
push
add
shl
hlt
cmp
or
xchg
lock
les
xor
rdpmc
mov
inc
or
cmp
daa
dec
scas
mov
lods
add
add
cltd
clc
in
jb
addb
outsl
xchg
push
sub
std
xchg
cmpsl
adc
cmpsb
mov
pop
cltd
loopne
add
inc
and
call
xor
cwtl
loop
dec
insl
pop
sbb
cwtl
psubsb
push
or
enter
aas
mov
and
sti
stos
push
ror
es
imul
jecxz
movsb
or
loopne
add
imul
jo
std
orl
push
int3
cmp
pop
pop
xchg
aas
out
mov
in
gs
add
cmp
adc
jns
addl
ficoml
mov
mov
jnp
dec
cld
mov
mov
push
test
imul
fnstenv
sbb
jle
fisttpll
sti
mov
xchg
push
pushf
mov
fisubrl
bound
or
fimull
xchg
lea
add
nop
xchg
jmp
mov
pop
call
repnz
inc
cltd
les
fs
mov
aam
add
cmp
adc
mov
jecxz
jbe
cmpsb
dec
pusha
arpl
cltd
fiaddl
fsub
in
xchg
rolb
scas
adc
xchg
nop
jge
shll
sub
sbb
out
mov
push
jb
xor
ds
lahf
or
cmc
adc
fs
stc
psraw
addr16
mov
pop
out
enter
mov
pop
or
dec
lds
loop
movsb
andl
xor
cmp
dec
stos
xor
fldcw
pop
test
lcall
dec
cwtl
cmp
daa
lods
mov
mov
cmp
imul
xchg
mov
push
dec
mov
sub
cld
jne
sbb
clc
mov
and
hlt
jb
xor
xor
mov
insl
movsb
nop
test
testb
insb
test
xor
inc
je
test
mov
test
sbb
add
jge
imul
push
xchg
dec
inc
xor
out
les
fdivr
add
sbb
jo
mov
push
shl
mov
cmp
xor
inc
push
jge
xorl
call
jo
sbb
add
fwait
pop
pusha
inc
clc
cld
mov
jae
ljmp
or
mov
out
hlt
mov
pop
adc
testl
jb
pop
and
lret
pop
mul
in
mov
sbb
lea
cmp
and
fdivs
jbe
xchg
bound
lea
xchg
mov
lods
pop
add
jge
cmp
xor
push
push
cmp
pop
outsl
inc
cmp
js
cmc
mov
bound
dec
mov
adc
nop
lret
mov
ret
jge
addl
dec
and
enter
jns
jbe
pop
cmp
push
cmpsl
mov
popf
push
gs
lea
mov
sbb
mov
adc
in
or
pop
and
mov
xor
cmp
pop
insb
cs
inc
lcall
adc
shlb
adc
dec
dec
fadds
sarl
mov
adc
filds
fwait
add
imul
clc
ljmp
test
add
mov
or
or
sub
jle
adc
jne
lds
adc
sbb
movntps
push
xor
cmp
mov
pop
fistl
cmp
stc
enter
dec
mov
fwait
out
movsl
xor
cmp
clc
fisubl
push
jmp
cs
ret
inc
or
aam
fisubrs
test
fwait
imul
fs
fistpl
xchg
inc
mov
pop
movsb
int
sbb
adcb
ret
jb
pop
pop
add
push
enter
push
pop
and
in
int
jnp
add
sahf
adc
btr
mov
push
mov
cmp
jae
pop
fmull
cld
cltd
jb
popf
mov
fdivr
jmp
xor
adc
das
cwtl
cwtl
bound
inc
lods
ljmp
or
add
xchg
out
cltd
push
jno
daa
and
call
pushf
adc
mov
ss
stos
pinsrw
pop
mov
mov
rclb
movsl
aas
mov
pop
and
dec
ljmp
in
push
sbb
sbb
push
fsubrs
xchg
daa
mov
push
xchg
sub
inc
aaa
imul
sbb
aad
dec
cmp
and
or
push
xchg
cmp
daa
repz
push
sub
pop
jb
cmp
xchg
outsl
adc
xchg
pop
shr
inc
scas
push
pop
xor
or
loopne
pushw
lods
or
fs
imul
push
loop
int3
push
jne
sbb
leave
fidivl
or
fwait
dec
dec
ds
dec
sbb
in
lds
rolb
pop
ret
sbb
or
negb
rorb
and
pop
ljmp
sbb
fisubrl
lahf
jns
push
cmc
cmp
into
ficompl
movsb
lahf
test
enter
jg
test
add
and
test
and
inc
loop
dec
or
enter
std
jmp
sar
mov
or
mov
sub
cmp
xchg
or
mov
cmc
pop
sub
mov
sbb
sbb
shrb
or
inc
and
add
lds
pop
test
and
cmp
sbb
cmp
les
xchg
out
call
popa
jns
movntps
or
repnz
enter
insb
cmp
adc
loop
and
nop
inc
xor
daa
sbb
sub
push
ds
leave
dec
movsl
sub
dec
rclb
rcrl
insb
shl
adc
pop
int3
pop
xchg
cmp
and
or
lods
or
mov
mov
out
filds
xor
insl
or
add
lock
push
cmp
and
lock
xorl
int3
clc
lock
mov
repz
out
mov
jae
andb
in
arpl
pop
push
or
or
inc
push
enter
sub
lcall
dec
pop
cmc
mov
scas
or
xchg
aad
and
std
or
hlt
adc
nop
das
cmp
sbb
pop
in
hlt
icebp
aad
jns
lods
scas
inc
ss
jg
scas
pop
xchg
data16
adc
ss
dec
jno
xorl
lret
scas
test
orb
xor
sub
out
sbb
fwait
fs
scas
mov
push
lea
push
jae
pop
aas
adc
call
jo
dec
ss
lods
pop
fwait
les
loopne
pop
xor
pop
sub
xchg
lds
loop
dec
fdivrs
inc
pop
sbb
xor
out
sub
aaa
or
lret
inc
mov
lahf
mov
xor
loopne
or
imul
fidivl
lock
sbb
pop
adcb
imul
push
or
out
mov
fsubrp
cld
cmp
pop
arpl
lcall
or
mov
cwtl
fcompl
push
and
inc
das
mov
std
xchg
inc
push
sbb
jle
lea
lea
jae
int
mov
pop
add
icebp
jl
loope
int
outsb
cmp
nop
inc
cmp
mov
push
add
xchg
sbb
sbb
sti
or
pop
inc
fildll
cmc
mov
and
decl
outsl
push
mov
in
shrl
jge
insb
enter
xchg
mov
pusha
aaa
or
mov
adc
mov
test
mov
and
insl
push
jge
lock
imul
and
and
mov
or
ficoms
mulb
pop
js
mov
movsb
lcall
testb
pusha
lret
jnp
test
pusha
repnz
dec
jge
mov
popa
sarl
sbb
xor
jo
aas
incl
outsl
ret
push
xchg
cmc
and
ret
fwait
cmp
dec
add
xor
testl
push
sbb
nop
ret
pop
or
cwtl
push
aad
jbe
mov
xor
fisttpll
gs
dec
ja
in
ror
push
jecxz
jne
mov
int3
pop
dec
mov
pop
pop
add
mov
add
popf
enter
pop
or
and
push
jne
test
pushfw
mov
add
movsl
mov
mov
xchg
loope
push
jp
test
mov
mov
and
lock
daa
xchg
jae
xor
add
xchg
out
mov
or
ficoml
jg
mov
adc
hlt
mov
mov
or
sbb
jno
ljmp
lds
sbb
movsb
sub
xchg
iret
test
insl
inc
movsb
inc
dec
pop
add
ss
cmp
mov
repnz
fldt
inc
or
jecxz
cld
sahf
aaa
lods
sub
sub
xchg
movsl
xchg
pushf
cmp
loop
or
je
ljmp
pop
mov
fdivl
pop
fistl
pop
int3
xchg
pop
pushf
lods
and
add
push
mov
movsl
and
pushf
in
xor
sub
loopne
fs
adc
lds
addl
add
insb
xchg
dec
mov
out
jl
dec
ljmp
xor
mov
cmp
fdivl
stc
or
shrl
nop
and
sub
ficoms
aad
jecxz
xor
maxps
pop
lahf
xorb
arpl
xchg
popa
xor
lret
shrb
adcl
pop
sbb
xchg
repz
mov
cs
imul
dec
jnp
loopne
mov
clc
push
jo
jl
insl
in
cmp
in
jne
and
adc
popf
ljmp
addr16
filds
xor
mov
fwait
lods
mov
dec
cmc
jge
dec
rcr
adc
pushl
sbb
or
ss
lock
int3
ret
sbb
lds
daa
out
xor
push
fwait
cmpb
test
lcall
jl
inc
mov
pushaw
adc
adc
cmpl
arpl
push
mov
in
jno
push
sbb
cmp
push
les
jmp
sbbl
xchg
push
inc
jns
enter
jbe
shl
xchg
inc
inc
add
adc
jb
enter
loop
add
adc
xchg
sub
xchg
adc
sub
adc
inc
add
xchg
ret
mov
fcmovu
mov
aam
lret
cltd
mov
aaa
cmp
lea
xor
inc
inc
push
cmp
mov
in
les
movsl
cmp
xchg
dec
jp
movsb
jg
sbb
mov
lock
cmp
dec
xchg
insl
pop
fnstcw
and
je
add
frstor
in
int
popf
cli
push
pop
pop
or
daa
jmp
mov
mov
je
xor
enter
and
cmp
jno
cmc
sub
xchg
cmp
daa
pop
mov
aas
push
pop
je
pop
out
out
xchg
jge
aam
pop
jns
outsl
xchg
out
pop
es
jns
mov
jg
scas
jne
inc
push
jne
rorl
mov
enter
ficomps
dec
push
movsl
xor
pop
sbb
enter
push
lahf
mov
hlt
ret
popf
pop
push
or
pushl
loopne
push
fdivl
mov
mov
xchg
sbb
cmp
arpl
jbe
test
repz
lret
jg
push
mov
xor
dec
adc
jne
mov
cmp
pop
pushf
or
or
popa
pop
xor
dec
rcrb
bound
outsb
insb
ss
xlat
and
clc
or
xlat
sbb
or
xor
fwait
pop
pusha
cmp
stos
js
imul
sub
push
fmull
jne
shlb
push
pusha
xchg
mov
das
inc
lds
pop
mov
outsb
and
or
push
sub
cmc
out
out
fisttpl
add
sbb
jle
jmp
rcrl
jecxz
in
lcall
in
mov
mov
push
add
loopne
inc
dec
out
sbb
lods
sub
push
std
pop
pop
cmp
test
add
xsha256
cmpsb
xchg
fwait
dec
pop
insl
enter
push
inc
out
scas
inc
aas
popa
mov
cmpsl
push
test
pop
mov
outsb
aam
cltd
mov
stc
dec
mov
dec
inc
push
push
cld
insb
shlb
popf
mov
in
xor
adc
add
and
bound
pop
mov
mov
arpl
sbb
sub
lahf
adc
jnp
add
test
pop
mov
xchg
jbe
cmp
inc
add
nop
sbb
xchg
adcb
js
or
inc
rolb
stc
lcall
add
lds
fistpll
imul
pushf
mov
inc
mov
es
and
rclb
xchg
sub
sbb
mov
adc
outsl
inc
push
and
or
loopne
in
outsl
and
and
xchg
jmp
inc
mov
aam
lea
rcrb
pop
lahf
push
or
les
lcall
daa
insb
push
fmuls
mov
mov
inc
or
push
dec
int
mov
lret
push
add
cli
adc
int3
or
cmp
enter
dec
inc
gs
pop
pop
pop
mov
mov
cmpsb
add
mov
jg
and
xor
xlat
cwtl
mov
mov
mov
pop
xor
mov
cli
push
or
and
add
popf
in
dec
jne
in
xor
sbb
enter
xchg
inc
and
or
sub
sbb
and
inc
imul
mov
aaa
sbb
mov
stos
test
jne
add
dec
lcall
scas
clc
cmpsl
add
cmp
sbb
mov
mov
xchg
mov
mov
and
push
add
sub
or
sbb
int
push
fsub
lret
pop
fists
loope
lds
sbb
sahf
inc
add
add
test
pop
dec
pop
fdivl
push
aas
adc
and
mov
nop
enter
jne,pt
testb
fsubrs
push
adc
jns
in
add
inc
lret
xchg
inc
xchg
xor
aam
enter
cmc
test
mov
cwtl
cltd
and
mov
sbb
jle
cmp
and
sbb
and
xchg
dec
in
sti
call
mov
rorb
jbe
ficoms
scas
add
outsl
lret
mov
aaa
cltd
js
lret
push
dec
jmp
iret
sbb
xor
shrl
cld
mov
ds
ljmp
push
mov
outsl
inc
pop
in
int3
mov
cmp
lcall
pushf
sbb
adc
fs
push
divl
lret
fcomps
adc
into
rolb
jno
ds
sbb
add
leave
lcall
in
jne
mov
push
inc
aad
ss
mov
fiaddl
aaa
mov
jmp
into
fisttpl
aas
cld
test
jmp
shrl
lods
mov
xlat
cmp
pop
je
std
pop
cmc
jbe
sbb
dec
scas
pop
jl
xor
push
or
jge
dec
incl
or
sbb
and
mov
and
call
pop
imul
sbb
xor
jno
dec
mov
fimull
push
lock
lret
mov
push
daa
icebp
mov
mov
mov
or
enter
out
je
add
mov
inc
popa
cmp
repz
push
movsl
nop
xor
daa
lds
jns
test
push
mov
movsl
cmp
imul
gs
pop
sti
push
insb
and
or
setge
out
jbe
loopne
mov
sarb
adc
xor
ror
push
cmpsb
outsb
push
shrl
and
push
adc
ds
and
ss
bound
jmp
out
push
or
lret
or
fucomip
rol
lea
jl
pop
popa
ret
sub
mov
insl
mov
jnp
arpl
and
mov
lds
decb
bswap
adc
in
mov
xchg
pop
imul
imul
scas
aas
in
mov
icebp
rdpmc
mov
mov
cmp
mov
bound
mov
pop
dec
repnz
in
inc
adc
setp
or
pop
insb
int3
inc
daa
arpl
or
ficoml
add
std
add
call
lahf
and
and
or
aas
fwait
cmp
cmpsb
or
pushf
inc
mov
rclb
adc
sbb
mov
inc
shlb
pop
int
daa
in
pop
fmuls
decb
xchg
fmuls
mov
mov
lcall
push
fcmove
dec
bound
inc
repz
movsl
mov
pop
lods
scas
sub
stc
mov
fisttps
fsubl
sbb
cmp
aaa
push
jo
mov
lods
arpl
addl
xchg
jnp
loop
jae
dec
arpl
ljmp
loope
iret
inc
lret
adc
popf
call
push
or
sbb
movsb
sub
jno
rorl
sub
ja
mov
mov
xchg
and
pop
popa
lret
mov
jge
outsb
aaa
mov
mov
test
imul
mov
daa
and
aas
dec
xorb
popa
cwtl
xchg
lock
pop
inc
cmp
pop
inc
cmp
addr16
sahf
xor
lahf
pop
stos
cmpsl
andl
xchg
dec
sbb
loop
cmp
fcmovnb
push
insb
jmp
pop
imul
dec
nop
jbe
or
or
push
sbb
xchg
jb
rclb
dec
cwtl
sub
lret
js
jecxz
cmc
out
mov
fistps
dec
fsubp
iret
or
mov
in
lds
or
aam
arpl
lahf
icebp
das
mov
jb
dec
mov
add
stos
add
ljmp
xor
and
adc
enter
test
xlat
cmp
in
sarb
rcrl
and
jge
mull
loope
sub
push
dec
imul
mov
mov
in
mov
sbb
inc
cmpsb
adc
pop
out
daa
aad
lds
inc
add
mov
das
js
imul
cwtl
repnz
mov
pushf
cmp
push
push
push
inc
inc
data16
lcall
jne
pop
cmp
in
arpl
icebp
les
pop
cmp
inc
enter
cwtl
call
add
mov
xlat
xor
fidivs
fs
fsubs
sub
add
test
das
and
in
daa
inc
fmuls
pusha
incl
push
mov
loope
std
push
cmp
test
call
pushf
loop
cmp
or
cltd
xchg
jns
lods
jmp
out
mov
inc
cli
cmp
cltd
shl
scas
mov
notb
sub
jge
clc
aam
bound
and
lds
xchg
adc
pop
xchg
cmpsl
cmp
pop
push
cli
loope
js
jp
push
xor
xchg
push
aaa
and
mov
adc
pop
mov
fidivrs
add
xchg
sub
mov
lcall
insb
mov
xchg
mov
dec
inc
fmull
dec
mov
and
mov
mov
imul
jb
inc
nop
arpl
pop
jmp
outsb
jmp
loopne
and
cmp
inc
xchg
or
mov
roll
dec
adc
xor
sbb
sbb
adc
mov
adc
leave
add
sub
xor
xchg
jae
movsl
lds
jne
and
cld
sbb
inc
or
jne
js
mov
jne
jne
xor
lods
lahf
adc
bound
gs
repnz
adc
adc
jl
adc
pop
sub
xchg
add
and
addr16
push
adc
inc
adc
jmp
adc
loopne
mov
ret
adc
dec
sbb
aaa
jg
unpckhps
sub
cmp
sbb
pushf
inc
mov
add
cmpsb
adc
add
dec
mov
sbb
jne
pusha
dec
adc
ljmp
xchg
add
stos
or
mov
inc
dec
adc
push
lods
add
sbb
js
sub
adc
js
dec
mov
cmc
mov
xchg
pop
adc
jo
cmpsl
cwtl
xchg
inc
mov
enter
dec
push
dec
adc
movsl
loopnew
jl
test
enter
aad
cwtl
aaa
xlat
sbb
adc
inc
movsl
jne
sbb
jne
sahf
mov
jl
imul
adc
movsl
addr16
jl
lods
pop
or
xchg
in
movsl
push
enter
sbb
sbbb
add
pop
sub
dec
in
mov
pop
jne
and
aad
sub
cwtl
mov
test
andl
pop
jne
jne
dec
js
add
mov
imul
daa
ljmp
xchg
add
pusha
in
test
inc
adcb
push
sarb
loopne
cmp
in
jb
mov
adc
enter
sbb
sbb
int
adc
dec
fsts
clc
cli
mov
fildll
hlt
fidivl
sbb
xor
or
cmp
sub
movsl
in
push
sbb
or
pusha
mov
test
cmp
out
loop
push
push
inc
fwait
jmp
mov
clc
cmp
lret
push
pop
ljmp
ret
jo
loope
bound
add
inc
inc
adc
scas
cmp
lcall
js
sti
or
inc
fisttpl
bound
pop
xchg
test
aad
mov
cmp
fdivs
sbb
cmp
out
adc
pop
xor
test
xchg
cmp
adc
push
nop
mov
inc
cmp
fidivrl
sbb
nop
ficompl
push
jecxz
cmp
fisubl
pop
aas
add
sbb
aas
jl
in
mov
jg
hlt
data16
sbb
push
lret
and
push
xchg
inc
pushf
call
xchg
or
ja
xchg
fyl2xp1
dec
lods
cmp
popf
dec
ret
push
cli
cmp
inc
call
ret
cmc
jecxz
loopne
popa
mov
cmp
xor
data16
mov
cmp
jae
inc
and
into
mov
loop
aaa
cmp
into
cmpsl
bound
add
pushf
inc
cli
sbb
mov
adc
pusha
mov
imul
and
cwtl
xchg
test
inc
pushf
xchg
or
cmc
cmp
adc
add
mov
pop
popa
cmp
jecxz
lcall
sub
inc
sbb
stos
out
aas
cs
inc
lret
mov
ss
sbb
imul
mov
pop
mov
test
inc
xlat
mov
sbb
scas
adc
enter
or
loope
cli
push
sbb
shlb
mov
mov
cmp
sbb
xchg
xor
paddq
daa
ficoml
mov
fwait
xor
xchg
cwtl
xor
or
call
fcoms
mov
push
popa
jp
add
mov
lret
jl
dec
mov
add
mov
sbb
xchg
and
enter
jle
sbb
fsubr
stos
sarl
flds
lcall
adc
in
cmp
fsubrs
cmp
loope
in
xchg
mov
jne
enter
fs
xor
push
push
stc
popa
inc
cld
sarb
dec
cmp
pusha
lds
adc
arpl
jle
std
loop
jns
cmc
jg
jb
sbb
dec
or
pop
enter
stc
sub
sbb
inc
hlt
sbb
jmp
pushf
fisttpl
faddl
into
adc
addr16
cmp
cltd
mov
addr16
add
sub
or
repnz
es
scas
pop
pusha
les
out
fcomps
adc
cmpl
test
push
in
lods
jb
fimuls
sbb
loope
enter
mov
nop
lret
and
divb
rorb
cmp
sbb
call
ss
dec
gs
mov
outsb
jne
inc
cmp
push
add
and
mov
add
mov
lds
out
jmp
mov
push
imul
mov
push
adc
vmwrite
dec
pop
fsts
or
out
push
data16
cltd
mov
add
lds
cmp
das
lahf
sbb
sub
aam
iret
jb
xchg
sbb
or
das
push
xchg
pop
and
mov
jecxz
aad
mov
push
and
out
cmc
fiadds
add
fwait
data16
jb
aas
sbb
jmp
or
sarl
mov
mov
jle
mov
xor
daa
jg
xor
mov
jp
aam
and
mov
popa
push
lahf
insl
test
add
xor
test
pop
or
mov
pusha
ret
sbb
inc
cld
mov
adc
imul
ficoml
out
mov
stos
inc
insl
aam
sti
std
daa
lahf
lods
aad
push
mov
mov
cmp
daa
xor
mov
cltd
sbb
std
sbb
cmp
sub
out
push
repz
push
andl
dec
or
bound
jo
and
test
dec
cmp
mov
cld
pop
sub
cs
or
les
cmpsb
mov
frstor
int
mov
add
imul
pop
or
xchg
shll
aas
pop
sahf
daa
mov
and
loope
fcompl
je
or
inc
add
adc
out
and
subl
lds
sbb
pop
pop
loopne
test
lcall
scas
cmp
loope
int
je
adcb
mov
push
mov
loope
pop
icebp
mov
enter
push
dec
out
push
add
int
or
sub
cltd
loopne
fwait
xor
push
push
xchg
aas
gs
shrl
lds
lahf
mov
push
fsts
mov
add
orl
inc
mov
inc
cmp
pop
or
cmc
inc
loope
or
imul
pop
les
testl
out
int
call
lds
or
lcall
lea
int3
xor
loop
pop
inc
adc
faddl
jge
fisubrs
adc
jmp
repz
shlb
jle
mov
in
push
mov
and
sub
push
divb
mov
and
or
jo
lods
sub
or
push
cmp
jno
inc
ds
cmc
mov
mov
pop
outsb
push
imul
dec
outsb
jns
sbb
mov
cmc
mov
push
aad
sbbl
in
cld
jne
fs
in
cmp
jmp
push
iret
cmpsl
mov
in
imul
aad
adc
sub
lds
mov
sub
xchg
sbb
sahf
cli
xchg
push
xlat
xor
clc
dec
xchg
and
out
stc
mov
xchg
fadds
shrl
mov
gs
cmc
mov
ds
mov
xchg
into
mov
icebp
orb
xchg
int3
or
out
out
sbb
imulb
inc
inc
hlt
adc
popf
movsl
stc
or
add
fmul
ljmp
sub
sbb
gs
jno
shlb
rcrb
push
mov
enter
es
aas
dec
jmp
sbb
dec
cmp
sbb
pop
call
push
rcr
sub
mov
dec
punpckhwd
mov
sub
dec
cld
sbb
pushf
xor
xor
add
push
fimuls
aaa
cmp
ljmp
mov
push
cmpsl
int
je
jmp
add
int
inc
adc
les
cld
xor
xor
in
adcb
das
inc
cmpsb
cmp
xor
nop
sbb
adc
aad
mov
in
adc
das
mov
lods
push
push
sub
sbb
sti
je
jecxz
cmpl
xchg
add
inc
mov
shlb
and
divb
sbb
pop
out
adc
out
jge
adc
inc
repz
aas
push
aam
add
mov
jb
pop
or
jmp
test
dec
jl
shl
push
pop
repz
movsl
push
sbb
or
bound
jecxz
adc
push
iret
ret
repnz
or
or
mov
and
adc
ja
arpl
pop
shlb
sti
iret
lcall
push
mov
xor
mov
xchg
jecxz
pop
leave
jmp
in
xchg
lds
adc
shll
mov
mov
cmp
mov
les
sub
and
dec
dec
and
mov
sbb
or
push
mov
test
test
lea
fimull
xchg
xchg
sbb
dec
cmp
adc
nop
movsl
ljmp
jmp
test
movb
sub
adc
cwtl
test
cmpsl
mov
push
xchg
sahf
mov
xchg
fnstcw
dec
call
fs
xchg
int
shrb
push
mov
or
ljmp
or
mov
mov
test
cmpsl
push
push
cmp
mov
outsl
push
das
bound
push
int3
sbb
xor
roll
add
add
in
xchg
cmpsb
in
push
mov
push
and
and
gs
add
sbbb
repnz
jp
fcomps
out
loop
adc
enter
aas
mov
dec
inc
icebp
daa
inc
sahf
and
mov
pop
xchg
les
push
test
and
jbe
xchg
xchg
rorl
pusha
fiadds
sbb
push
stc
pop
clc
popf
push
adc
pop
in
and
das
xchg
fwait
ret
aas
fidivl
xor
mov
sbb
cmc
ss
pop
xorb
sub
cli
mov
and
push
faddl
pop
imul
xchg
lret
movsl
out
stos
jo
enter
xor
fisubrl
mov
cmc
lds
pop
mov
mov
nop
push
imul
mov
pop
xor
pop
movsl
add
sub
int
cwtl
in
inc
xor
xchg
dec
mov
mov
sbbl
incb
fwait
jnp
or
test
sbb
and
mov
inc
mov
cmpsl
adc
lods
bound
cwtl
cmpl
mov
sbb
mov
test
cmpsl
mov
adc
aas
mov
add
outsl
pop
mov
lret
jp
or
hlt
pop
loop
dec
addb
gs
in
pop
pop
ficomps
inc
pop
fsubrs
cmpsl
jae
mov
test
jl
jp
cmp
ljmp
push
add
cmc
xchg
jne
faddl
cltd
mov
jbe
rorb
arpl
daa
push
insb
arpl
inc
andb
adc
xor
out
or
pusha
xor
dec
jbe
aas
daa
mov
jb
push
popa
push
push
inc
push
shl
shrb
in
push
imul
jne
push
pop
enter
pop
xor
loopne
mov
or
cmpsb
mov
int3
nopl
sar
sbbb
lods
mov
or
lea
add
aam
or
inc
je
inc
mov
hlt
hlt
push
pop
xchg
aas
adc
lock
cmp
in
ja
sbb
aaa
and
imul
cwtl
gs
inc
xor
cwtl
addr16
jge
enter
jne
shrl
test
gs
js
fldenv
cmp
iret
ret
ficompl
adc
idivb
test
out
loopne
lret
lcall
dec
inc
ljmp
adc
mov
push
mov
add
cmp
mov
sbb
xchg
sbb
push
hlt
or
dec
ss
pop
rcll
mov
xor
mov
bound
mov
xchg
adc
dec
cltd
stc
pop
sti
insb
in
pop
jmp
lahf
mov
sti
inc
daa
mov
mov
push
imul
fistps
jecxz
repz
shlb
adc
or
pusha
stc
adc
out
or
mov
jbe
mov
ficompl
mov
dec
cmp
mov
rcrb
inc
int3
or
mov
or
jbe
pop
inc
adcb
bound
pop
inc
enter
add
hlt
push
shlb
mov
sbb
gs
cmp
jns
push
jae
das
or
push
repnz
scas
mov
insl
out
dec
loop
pop
pushf
sub
push
adc
movb
test
pop
xchg
test
dec
xor
fwait
out
xchg
xchg
icebp
mov
movsl
divl
adc
hlt
xchg
cli
js
fisubl
lock
mov
jecxz
mov
sbb
jns
mov
call
sub
nop
clc
sbb
clc
scas
mov
enter
mov
cmc
pop
or
and
mov
add
cmp
fwait
int
outsb
shr
bound
inc
inc
push
lea
jg
cli
out
and
push
clc
jmp
scas
mov
inc
aas
sbbl
stos
pop
outsb
repz
inc
lea
cli
mov
cmpsb
xchg
push
insb
jne
xchg
aam
jge
enter
inc
adc
xor
pop
test
out
jge
icebp
mov
or
xchg
lcall
mov
or
repnz
cmpsb
stc
xor
jg
sbb
and
outsb
mov
movlps
lahf
pushf
xchg
jno
mulb
or
xchg
push
xor
add
lods
das
sar
sti
and
adc
push
adc
push
pop
sbb
jge
pcmpeqw
fsubl
push
push
mov
add
ds
ret
nop
enter
pop
push
inc
repnz
in
pop
cmc
xchg
push
inc
pop
loope
addr16
pop
loop
pusha
addr16
mov
repnz
rcrl
call
jno
jp
mov
nop
jmp
and
push
insl
call
cmpl
dec
fsubs
add
sbb
mov
xor
adc
pop
adc
leavew
inc
inc
insb
pop
in
clc
nop
stos
mov
cld
sbb
sub
mov
ljmp
mov
sbb
add
pop
jne
cld
das
fstps
lret
pop
testl
adc
sub
out
arpl
fdivp
push
in
lds
cmp
and
mov
xchg
mov
js
in
and
or
sti
push
arpl
js
adc
lret
test
or
mov
lahf
dec
popa
insb
sub
cmp
mov
lret
jb
outsb
daa
cmp
aam
cmpsb
clc
sbb
adc
mov
or
cmpb
push
sbb
dec
loopne
scas
and
enter
cmp
js
je
mov
dec
bound
cmc
fisubrs
mov
lahf
ds
lret
cmpsb
cmp
cmp
mov
and
cmp
out
xor
push
jle
test
push
or
loopne
pop
les
cmp
cmc
and
in
cltd
stos
dec
rcpps
jecxz
les
sti
push
dec
jne
mov
lea
pop
fucompp
hlt
mov
sbb
jmp
push
ret
mov
jmp
pop
xchg
out
dec
mov
fidivl
lods
iret
dec
mov
inc
das
cmp
sbbb
int3
adc
cmp
sbb
pop
mov
jbe
fisttps
lock
or
cmpsb
rorb
jb
int3
xor
push
pop
into
sbb
or
movsl
cmp
data16
add
push
int3
jbe
orb
pop
ljmp
mov
xor
and
aas
add
test
mov
fs
fstps
int
imul
mov
adc
adc
data16
pop
and
pop
xchg
pop
jg
jp
in
and
out
jecxz
mov
add
lock
stos
cmp
popf
jb
jbe
int
dec
sahf
jns
sbb
imul
addr16
xchg
pop
aam
cmp
outsl
push
movsb
sbb
adc
lock
pop
cmp
cmp
sub
mov
pmaddwd
cmp
push
in
loope
xchg
and
je
adc
daa
popa
add
inc
push
inc
icebp
out
data16
bswap
sub
pushf
insb
push
jnp
adc
and
inc
or
stos
out
sbb
sbb
jne
push
loopne
add
jno
ljmp
inc
add
sbb
imulb
and
lods
aad
data16
pop
mov
mov
clc
pop
push
mov
test
xchg
cmp
ljmp
mov
ja
in
mov
icebp
add
jecxz
fwait
mov
jne
push
and
sub
fidivrl
sub
mov
pop
popf
jmp
push
lds
pop
lcall
insb
xor
rol
icebp
or
clc
add
jo
mov
add
push
add
cli
cmp
jne
inc
jbe
cmc
test
cmc
add
fidivl
pop
sbb
rcll
loopne
imul
xchg
jecxz
call
inc
repz
and
cmp
fs
lods
lea
mov
rorb
or
lds
and
xor
sub
push
loop
adc
xor
cmc
and
bound
arpl
leave
movsl
adc
pop
and
cmp
sub
sarb
xor
xor
stc
mov
jne
ret
cli
cmpb
xchg
add
in
fdivrl
pop
pextrw
cmp
aas
vpcmpeqw
lock
pop
hlt
mov
or
enter
bound
and
ret
mov
stos
jmp
gs
or
sbb
jo
xor
mov
xchg
into
cmp
adc
ficompl
pop
mov
scas
mov
jae
pushf
inc
mov
daa
mov
cltd
dec
sahf
in
xchg
popl
scas
cmp
xor
rcll
sbb
xor
rclb
adc
loopne
fcmovne
mov
test
mov
stos
icebp
mov
lret
jo
imul
test
push
loope
sbb
fld1
cmp
repz
leave
adc
lock
cmp
stos
push
jmp
cmpb
push
imul
cli
enter
shrl
loope
imul
repz
dec
jne
loope
fimull
mov
rcrb
fsubrs
mov
imul
movsw
and
push
sbb
popa
int3
lods
in
mov
addr16
mov
dec
imull
push
movq
lds
movsl
jnp
mov
or
xchg
dec
sub
and
cwtl
arpl
gs
insl
dec
sbb
dec
enter
jmp
mov
and
mov
cmp
dec
mov
sub
test
sbb
sub
and
inc
xor
or
test
imull
sbb
pop
sti
insb
dec
pop
out
ds
cltd
jmp
dec
and
mov
adc
cmp
fwait
and
inc
daa
or
jmp
cmpl
sarl
pushf
mov
or
adc
cmc
test
xchg
mov
out
dec
in
and
ljmp
xchg
inc
add
mov
je
filds
cwtl
shrl
inc
rorb
sbb
pop
gs
fbld
int3
mov
imull
daa
arpl
enter
outsb
popa
sbb
imul
fsubr
dec
mov
cmc
clc
nop
lret
add
adc
ljmp
lock
ds
pop
gs
mov
enter
pop
sbb
and
mov
insb
and
dec
push
cmc
ficompl
out
mov
sbb
xorl
push
xchg
mov
or
push
mov
sbb
pop
jmp
shrl
dec
inc
pop
lods
mov
pop
xchg
movsl
enter
jmp
icebp
lret
jle
rcll
out
inc
fs
push
jmp
rcr
ljmp
out
inc
xor
or
mov
inc
in
movsl
sbb
dec
movsl
add
rcll
jbe
dec
push
pop
gs
pop
mov
cmp
outsl
out
cli
in
aaa
in
adc
sub
lea
sub
lahf
mov
jbe
jp
test
push
imul
daa
xor
inc
cli
int
add
sar
movsl
mov
cmpsb
jbe
fstl
xlat
pop
lock
mov
rcrb
lds
out
mov
repz
popa
xor
popa
mov
mov
lea
imul
gs
iret
dec
out
loope
lea
enter
imul
fisubl
jmp
pop
daa
enter
fdivrl
or
imul
or
pop
int
lock
jg
sbb
lret
push
xchg
adc
bound
push
mov
xor
mov
inc
sbb
cmp
dec
cmpsb
ss
mov
sub
mov
int
push
adc
fiaddl
push
adc
sub
arpl
loope
pop
pop
cli
lret
cltd
mull
int
mov
imul
fimull
pusha
roll
inc
cmp
mov
sbb
in
scas
ja
lret
mov
cmp
and
sbbb
fs
pop
mov
aam
rcr
mov
sub
xchg
lods
clc
aas
mov
out
xchg
out
sbb
adc
fadds
cmpsl
fdivrl
dec
fsubrs
push
movsb
sub
clc
jae
outsb
test
push
repnz
stc
mov
xchg
lds
arpl
mov
mov
in
push
xor
add
push
and
mov
ret
popf
in
or
enter
inc
mov
xor
adc
call
in
aaa
lds
cmp
sbb
push
in
aas
cltd
icebp
sbb
cmp
insb
inc
fisttps
fwait
add
test
push
and
or
in
mov
sub
fisttpll
and
imul
push
and
add
stos
or
cli
xchg
or
scas
ficomps
mov
cli
jb
or
imul
lds
les
push
sbb
gs
jb
outsb
mov
jne
xor
mov
sbb
inc
mov
xor
int
lcall
stos
jnp
add
push
jbe
aaa
pop
int
mov
sti
mov
ljmp
jecxz
xchg
cmp
add
nop
stos
fsub
mov
sbb
mov
dec
rolb
cmp
xchg
lcall
call
iret
enter
jp
mov
add
negl
jmp
push
xchg
jg
insl
fisubrl
cmc
inc
enter
out
mov
lds
loope
push
mov
or
cmp
clc
scas
sub
fsubr
xor
pushf
mov
iret
ret
loope
sahf
mov
cmp
out
push
jge
sti
cmc
fcoms
sbb
pop
cmp
sbb
leave
jbe
mov
sub
shlb
dec
int3
dec
aas
sbb
mov
pop
pop
outsb
dec
int3
xchg
xor
rol
push
imul
lret
mov
mov
cmp
imul
int
data16
xor
jecxz
mov
push
arpl
ja
into
cmpsl
sbb
lds
fcmovne
lcall
cmp
adc
pop
call
mov
into
sbb
mov
or
test
jae
xchg
mov
je
sbb
add
sub
and
xchg
push
out
dec
add
movsb
dec
mov
int
adc
mov
dec
repnz
pushf
shlb
test
out
enter
int
mov
jb
in
clc
pop
jle
or
pop
and
adc
jb
xchg
cld
cmp
into
or
and
jp
lcall
jp
gs
sbb
or
nop
adc
iret
popa
cwtl
aaa
lods
stc
adc
mov
jnp
fnstcw
adc
jne
cld
and
pop
pop
sbb
testl
sti
call
mov
inc
push
imul
pop
pop
cltd
scas
inc
sub
testb
push
xchg
mov
enter
pusha
mov
or
mov
lea
dec
fdivrs
sbb
sbb
inc
inc
and
scas
sub
icebp
or
xor
inc
adc
jno
push
add
mov
mov
push
stc
aad
outsl
mov
nop
jo
pop
push
sarl
stos
pop
mov
fsubrs
pop
mov
mov
fildll
pop
jg
cmp
and
movsl
jne
or
rorl
pop
pop
push
fidivl
ljmp
sub
adc
pop
xor
cmp
mov
cwtl
and
sub
xchg
and
out
push
and
cmp
stc
loope
cmp
cld
in
iret
loop
xchg
jb
enter
inc
cmp
in
daa
adc
shl
mov
js
in
add
mov
jmp
inc
xchg
in
sarl
push
and
mov
or
daa
mov
mov
jo
out
cld
cmc
push
pusha
divb
xchg
jo
ret
outsl
rclb
mov
popa
pusha
insb
fadds
cmc
imul
add
mov
mov
pop
test
xchg
push
mov
cld
loopne
daa
popf
int
or
addb
pop
sub
and
pop
xchg
jge
imul
fildl
push
mov
sub
jnp
inc
lods
popf
pop
or
inc
jno
loope
cmc
jnp
fisubrl
mov
lods
and
sahf
add
adc
sbb
enter
clc
daa
and
mov
in
push
pop
pop
and
and
stos
out
xor
inc
xor
adc
test
pop
and
and
xchg
fnstsw
mov
div
push
push
int3
xchg
loopne
call
push
mov
mov
mov
or
cmpsl
insb
jmp
mov
enter
push
dec
xor
jne
out
aas
call
xchg
lea
sbb
lcall
sbb
push
movsl
pop
daa
mov
enter
or
or
in
dec
dec
sbb
cwtl
cmpsb
rcl
or
fisubl
push
ret
sub
inc
daa
cmc
repz
push
fistps
packssdw
mov
jmp
enter
int3
incb
rorl
dec
inc
gs
nop
add
push
lcall
jmp
or
aaa
xchg
jge
pop
mov
aad
and
mov
mov
out
ljmp
inc
repz
mov
push
outsb
fimull
fcoml
das
push
mov
push
out
or
fisubl
mov
add
andb
inc
mov
adc
lods
adc
xchg
repz
js
fdivs
cmp
and
not
ja
sub
je
out
xchg
lret
lock
inc
daa
leave
pop
mov
stc
mov
add
mov
out
fdiv
enter
adc
popf
jmp
nop
mov
sub
xchg
repnz
mov
pop
test
insb
cmc
pop
rcrb
iret
or
pop
add
out
add
adc
pop
dec
cmpsl
out
insb
insl
in
and
shrb
push
cmpsb
mov
push
cmpsl
jp
sbb
mov
fisttpl
nop
nop
inc
or
jmp
xor
out
adc
in
ret
lods
push
shlb
mov
and
lock
xor
lock
repnz
jmp
push
lods
stos
inc
mov
shlb
xor
adc
insb
mov
vcvtpd2ps
jno
fmull
scas
sahf
les
cmp
aaa
sbb
add
add
enter
je
push
cli
enter
sbb
jbe
mov
cmp
and
mov
inc
mov
or
add
cmp
out
jmp
mov
call
xchg
cmc
cmp
rcrb
adc
movsb
or
js
sbb
out
pop
repz
jp
movhps
jmp
lea
dec
rcrb
lret
cmp
cmp
adc
pop
bound
fbstp
fisubrs
cli
shll
loopne
adc
in
jno
cmp
sbb
adc
inc
xchg
fs
add
dec
cmp
push
aas
fisubrs
lods
sub
lahf
sbb
adc
pop
cltd
push
movsb
jl
out
sub
lods
call
mov
mov
std
cmp
mov
xchg
xor
fs
cmpsb
xchg
ljmp
adc
int3
add
popa
rcrb
add
bound
pop
and
xor
call
inc
jb
lahf
and
jbe
sbb
and
adc
adc
fisubl
mov
ss
loope
clc
dec
or
mov
cwtl
xlat
cmp
enter
lret
daa
fisubl
xor
movsl
or
mov
gs
sbb
iret
xchg
sbb
inc
push
leave
fcmove
push
adc
in
sarb
pop
aaa
or
aam
xchg
adc
sub
adc
mov
data16
pop
adcb
test
or
xchg
cmpsb
push
lock
xchg
pop
movsl
push
notl
mov
enter
cmpsl
loop
popa
fwait
shlb
repnz
xchg
or
mov
in
es
jmp
jne
add
pop
movsl
fdivrl
mov
cmp
pop
loope
pushf
out
int
dec
lods
cmpsl
stos
jge
lahf
aad
stos
or
rcrb
sti
jecxz
aad
sub
in
data16
mov
nop
imul
stos
inc
inc
lret
shlb
aas
xlat
xchg
or
add
iret
test
pop
push
mov
mov
xlat
fidivl
lods
int3
cmp
cli
xchg
lret
xchg
lea
dec
dec
dec
and
vmovss
adc
inc
je
push
jmp
in
outsl
inc
lds
hlt
push
lcall
lods
jmp
pop
roll
insl
fwait
std
cmpsb
pop
clc
xor
mov
je
mov
adc
jne
cwtl
mov
push
jle
lods
xchg
out
enter
and
mov
xchg
cmp
and
mov
pop
mov
and
mov
clc
and
popf
mov
xor
or
cmp
mov
push
mov
lcall
or
movsb
and
aas
icebp
pop
testb
or
rcrb
or
cmp
out
dec
in
lret
fs
dec
xchg
sub
sti
fildl
push
push
orl
jmp
jno
sbb
loop
jge
pop
cwtl
lock
lock
int
dec
sti
imul
and
shr
jg
ds
adc
or
dec
ja
lods
cli
mov
sbb
cmp
into
addr16
push
cmc
hlt
daa
or
xor
push
test
and
add
lahf
scas
xor
xchg
repz
jne
daa
enter
cwtl
sbb
shrl
cmp
movlps
xchg
xchg
sbb
shl
mov
or
fists
lds
and
adc
movsl
mov
jno
jno
call
fmul
cmp
push
pop
in
sub
pop
and
movsl
mov
inc
xchg
repz
mov
mov
daa
mov
adc
mov
lahf
fidivl
add
adc
das
jl
aas
clc
jp
andb
sbb
jns
out
lds
xor
adc
mov
xor
or
push
enter
fsubs
add
sub
daa
outsb
cmp
push
xor
dec
mov
xor
dec
mov
lcall
aam
shrb
mov
aas
dec
ffree
imul
cmp
lcall
sbb
sub
cmp
pop
and
clc
sub
push
mov
xor
or
scas
scas
mov
mov
or
adc
lock
mov
ficompl
or
enter
and
mov
pop
dec
loope
pop
sub
sarb
push
aaa
mov
call
dec
inc
scas
xor
jns
shll
scas
jmp
sarl
in
loopne
icebp
lahf
lds
or
and
xlat
je
stc
push
jb
stos
fisubl
and
jmp
dec
mov
jecxz
shlb
inc
sub
hlt
sbb
push
inc
ljmp
insl
xor
fs
pop
pusha
pop
sti
jne
push
pushl
or
mov
enter
cmp
push
popa
add
fnstsw
and
adc
adc
in
test
scas
xchg
enter
int
fiaddl
adc
cs
mov
dec
shl
cmp
mov
lods
cmp
fisubrs
sahf
ss
inc
lock
xchg
mov
fmull
jp
cmc
pop
inc
scas
sbb
dec
inc
jmp
incl
lahf
jno
mov
fidivs
mov
inc
movsl
adc
scas
inc
repnz
in
gs
lret
mov
push
leave
add
bound
test
cltd
xor
mov
jne
adc
xchg
pop
mov
gs
sub
pop
adc
add
cwtl
cmp
mov
add
lcall
sub
or
lods
push
mov
out
or
dec
jmp
and
stos
mov
pop
insl
sbb
in
sbb
and
pusha
mov
mov
inc
cmpsl
mov
lret
push
add
rcrl
mov
popl
jne
imul
push
cmpsl
sbb
js
imul
sbb
call
lea
add
mov
outsl
movsl
mov
test
movsl
sbb
inc
insb
xchg
mov
mov
rclb
lods
lea
mov
das
mov
mov
aaa
sub
iret
pop
mov
lahf
dec
pop
sbb
test
lods
mov
dec
pop
shlb
or
mov
popf
jmp
inc
mov
shrb
add
adc
cmpl
gs
in
adc
js
gs
adc
add
adc
sbb
pop
push
pop
aaa
lahf
insl
lock
test
push
popf
adc
inc
xchg
and
or
stos
fmuls
jg
in
movsl
jmp
jl
imul
mov
adc
pop
sbb
js
adc
out
sbb
mov
add
loop
xor
test
pop
outsl
sub
test
dec
adcl
adc
xchg
movsl
xchg
aaa
xchg
mov
int
lods
jp
mov
int3
fs
pop
imul
in
or
test
sbb
loope
sbb
sti
dec
mov
and
mov
enter
and
mov
pextrw
push
data16
inc
inc
icebp
inc
iret
adc
add
das
inc
fstps
lret
cmpsl
dec
xorb
mov
adc
xor
pop
push
js
mov
stc
jo
mov
and
scas
subb
adc
imul
lcall
add
cmpb
clc
xchg
cmp
sub
mov
and
pextrw
jo
pcmpeqw
sbb
ljmp
out
and
out
adc
add
sbb
adc
pusha
push
sbb
xor
mov
pop
mov
adc
push
pop
mov
dec
sbb
loop
fs
enter
cltd
mov
cwtl
lret
mov
add
je
cmp
outsl
or
mov
adc
adc
das
in
pop
ljmp
mov
ficompl
sbb
enter
jae
mov
sbb
mov
loop
push
rolb
jle
enter
and
push
dec
aam
imul
daa
pop
xor
loop
cmp
fidivs
xchg
dec
cmp
push
pushf
mulb
mov
adc
inc
sbb
and
out
adc
in
and
jge
sbb
push
cmp
mov
mov
insl
jp
sarb
fwait
lcall
xor
fdivrs
ret
aas
push
cltd
iret
cmp
xor
push
cmc
out
sub
ljmp
test
jle
jnp
dec
fisttpl
ret
xor
or
add
ss
aad
enter
push
js
cmp
sub
mov
sbb
xor
inc
call
jo
sbb
bndstx
push
fbld
and
adc
mov
fs
adc
fchs
dec
sahf
loope
stc
inc
adc
call
test
pop
cmc
ret
or
fbld
cmp
popf
mov
repz
adc
popf
stc
shlb
rcl
fsts
enter
mov
inc
cmp
mov
or
jp
xchg
roll
fiaddl
stos
daa
aam
push
push
psubsw
in
lcall
or
or
enter
mov
cmp
pop
xchg
bound
adc
lcall
lods
sub
imul
xchg
sub
cmp
stc
insl
sbb
out
sbb
mov
xor
arpl
int3
add
repnz
pop
pop
mov
add
lcall
nop
inc
sbb
push
jnp
lods
or
sbb
cmpsb
push
ds
ja
inc
and
jne
and
stc
add
pop
rorb
xchg
push
push
iret
add
push
popf
mov
jmp
test
lds
fistps
mov
fcoml
movsl
insl
xor
les
cld
jmp
lds
mov
mov
iret
xchg
jge
pop
xchg
mov
or
out
aas
or
sub
js
test
enter
sahf
addb
sub
sbb
inc
repz
hlt
dec
lret
lea
movsl
sti
xchg
or
xchg
lods
nop
or
out
mov
dec
cmpsl
icebp
push
clc
xchg
sahf
sti
inc
jg
cmpsl
pop
fsts
push
hlt
sbb
inc
imul
and
mov
jl
test
aam
mov
inc
pop
movb
cld
cmp
add
fisubrl
xor
pop
out
aad
cs
or
ja
push
daa
xor
jecxz
pop
ljmp
adc
and
dec
ljmp
lods
sbb
push
push
or
aad
jle
or
out
push
push
sbb
into
mov
mov
mov
dec
inc
inc
out
sbb
or
pop
imul
rcrl
cmp
xor
movsb
out
add
imul
sbb
pop
pushf
mov
mov
popa
push
jns
aas
lds
mov
mov
loopne
lcall
cmpsl
push
mov
lret
mov
cmp
aaa
add
sbb
in
push
clc
sub
xor
pop
popf
mov
in
push
or
imul
insb
or
mov
cmpb
stos
lods
adc
adc
dec
pop
sbb
shll
mov
lds
add
enter
jne
dec
shr
mov
repz
je
pop
or
cmp
mov
icebp
pop
imul
jge
mov
inc
test
mov
popa
jl
adc
daa
add
pop
mov
mov
or
fldl
push
outsl
push
loope
ljmp
mov
pushf
or
mov
mov
inc
psubd
jb
mov
mov
or
rorb
adc
scas
add
test
or
lcall
pop
and
mov
pop
leave
ficoml
mov
add
and
pop
push
pop
xor
repnz
sbb
mov
aad
jne
inc
xchg
outsl
xchg
shlb
mov
add
or
mov
roll
lods
mov
rclb
stc
dec
sbb
jo
xchg
in
pop
and
mov
enter
mov
mov
aad
jne
sbb
adc
pop
push
lock
mov
movsl
xchg
lock
jle
and
or
or
daa
shrl
xchg
add
js
enter
fs
mov
fnsave
in
mov
inc
or
aas
shrb
aaa
lds
out
adc
adc
inc
mov
sub
adc
mov
pop
adc
and
lock
mov
fsubl
fistl
jne
cmpsb
cmp
pop
mov
push
pop
int
push
cmp
int
xchg
jecxz
jo
inc
pop
pextrw
mov
jmp
mov
lahf
pop
clc
in
xchg
and
cmpsb
pop
lea
arpl
fdivr
and
xor
rorl
push
ja
ss
inc
enter
jecxz
mov
push
sbb
in
xchg
call
out
gs
mov
and
pop
les
pop
repnz
aas
orb
movsb
inc
or
imul
push
sbb
sub
out
loope
out
pop
jp
mov
push
outsb
imul
nop
jo,pn
fidivrl
fiaddl
xor
or
out
outsl
cmp
scas
push
dec
pushf
out
fdivrl
xor
cmp
xor
dec
imul
movsl
das
cmc
mov
xchg
dec
pop
xchg
push
js
and
int
iret
gs
loopne
mov
arpl
cmpsl
scas
jecxz
push
test
and
sbb
lcall
push
xorb
add
inc
lds
push
add
cmp
clc
pop
inc
adc
das
stc
jb
jecxz
mov
mov
sbb
pop
xor
popf
xor
es
in
ds
mov
jmp
shrl
iret
repz
add
mov
and
sub
and
lds
push
lock
or
xor
gs
xchg
scas
xchg
xor
adc
jmp
fcompl
pop
add
nop
js
dec
fdivp
rorl
cmc
or
pop
popa
jecxz
mov
loope
inc
in
sar
repz
ljmp
mov
rcl
aas
jmp
mov
sti
xchg
push
std
stc
outsb
cmp
push
jp
cmc
push
or
push
pushl
sub
pop
add
and
daa
sbb
add
or
sbb
loop
jb
int3
add
or
mov
cmp
and
xor
ret
mov
gs
lods
pop
xchg
xchg
jbe
insb
pop
and
jl
dec
adc
loop
jbe
mov
sbb
daa
inc
fs
fisubrl
aaa
arpl
cmp
repz
sub
mov
add
xor
and
or
out
cmp
mov
cld
repz
int3
xchg
sbb
sbb
pop
adc
cwtl
jo
clc
mov
adc
push
inc
mov
cmp
xor
or
push
dec
jecxz
push
icebp
and
notb
ja
ret
popa
imul
repnz
xor
test
or
stos
cmp
sbb
lds
cmp
imul
xchg
mov
jb
aas
mov
fdivs
add
sub
pop
sub
and
jmp
testl
movsb
mov
jge
add
mov
ret
cmp
fdivr
cmc
mov
xchg
imul
mov
adc
in
jne
lods
mov
divl
push
enter
pop
adc
cmp
push
loopne
aam
and
adc
mov
jo
into
loop
push
jne
cmpsl
loop
inc
sbb
mov
jge
movsl
fwait
add
pop
sbb
mov
adc
add
cmp
or
xchg
mov
mov
xchg
adc
and
jecxz
cmc
jne
push
fdivl
fimuls
aas
clc
pop
sbb
cmp
lods
sub
lret
cmp
fidivl
in
ffree
leave
ljmp
sbb
ss
adc
mov
scas
rcrb
adc
xchg
add
mov
enter
jo
dec
inc
std
pop
cmpsl
loop
and
or
call
mov
pop
push
jecxz
loop
outsl
mov
adc
xchg
sbb
sbb
out
and
jecxz
mov
xchg
stos
jne
sti
inc
push
xchg
xor
std
or
cmpsb
cli
add
cmp
or
xor
cmpsb
cmp
scas
test
cltd
mov
mov
push
push
adc
imull
lret
pop
mov
subl
and
aas
flds
lret
scas
nop
insb
js
mov
add
jae
push
lcall
mov
inc
gs
icebp
repnz
fisubrl
cmp
adc
lods
and
push
stos
lods
aas
add
popa
out
push
insl
or
sub
cli
mov
pop
jb
cmp
or
cmpsb
in
pop
push
in
outsb
aam
data16
push
push
data16
mov
mov
pop
icebp
lret
mov
movsb
insl
push
sbb
nop
jnp
mov
aas
mov
lea
jle
call
test
jb
stos
xchg
mov
inc
inc
lret
mov
fisubrl
pop
ret
xor
lods
loope
jecxz
out
cmp
jne
js
mov
int
stc
push
enter
jb
mov
sub
jecxz
movsl
xor
mov
fs
sub
insl
mov
imul
ljmp
sbb
movsb
int3
scas
inc
cmc
cwtl
sbb
pop
std
lahf
add
jmp
insb
inc
insb
push
out
inc
pop
arpl
imul
and
in
mov
sbb
out
cmp
sub
sbb
jb
inc
and
add
call
test
xchg
or
fidivl
das
sbb
popf
cmp
icebp
mov
jne
movsl
sub
insl
clc
cwtl
inc
or
out
addr16
imul
std
dec
sti
mov
sbb
push
mov
mov
pop
testl
cmpsb
xchg
and
or
push
xlat
test
bound
and
aas
inc
or
push
outsb
in
jne
test
jecxz
lcall
aam
add
gs
inc
mov
mov
add
or
lds
mov
mov
mov
dec
jg
arpl
sub
inc
or
js
mov
mov
dec
jbe
lcall
imul
sub
adc
mov
push
jmp
fnsave
test
sbb
sub
add
inc
lods
or
mov
jg
sub
movsl
pushf
inc
pop
pop
addr16
movsl
mov
fisubs
dec
mov
sti
lahf
enter
and
fcmovne
or
and
hlt
adc
xadd
lds
test
jle
push
mov
sbb
jmp
xchg
adcb
cmp
sbb
push
loop
jecxz
jmp
jle
add
xchg
subb
pop
cmp
insl
in
jo
es
add
cmp
xor
enter
adc
add
fsubs
xchg
fsubrl
pop
cld
xor
mov
push
mov
mov
jns
inc
push
fildl
push
xchg
lds
in
push
xor
dec
inc
and
fcmovnbe
or
push
movsb
in
jne
fnstcw
or
movl
icebp
hlt
imul
aam
lea
popa
addr16
fucomi
lret
fs
nop
mov
pop
imul
xchg
outsb
cwtl
iret
inc
bound
shll
mov
or
push
cli
jne
jnp
test
add
sbb
dec
jb
cmp
xchg
into
clc
mov
cltd
lcall
mov
or
rorb
cmpsb
leave
es
mov
jge
out
mov
mov
xor
ret
xor
popa
or
cmp
sti
push
sti
aaa
lock
xor
mov
push
mov
arpl
enter
jmp
add
xor
mov
lds
arpl
test
or
or
cmp
sub
lds
or
xor
sbb
hlt
sub
movsl
mov
lods
adc
test
mov
mov
in
repz
mov
push
xchg
adc
pop
out
mov
stos
rcrb
mov
or
cli
ss
outsb
adcb
fmull
dec
enter
aam
and
outsb
sub
adc
push
inc
xor
mov
daa
bound
bound
push
mov
xchg
push
adc
rcll
inc
jmp
mov
push
adc
pop
xchg
mov
and
in
lods
add
out
dec
sbb
and
add
sub
pop
outsl
pop
dec
or
lods
je
xor
pop
lret
incl
lret
cwtl
adc
loope
mov
inc
pop
add
adc
or
adc
or
jo
mov
subb
test
pop
popf
adc
or
inc
outsl
jo
adc
cmc
jne
loopne
cmp
push
or
fldl
lds
dec
insl
sbb
repnz
test
or
lods
pop
scas
and
jl
stos
nop
mov
js
ret
scas
or
adc
dec
in
lods
sub
mov
or
pop
add
jne
mov
imul
in
add
mov
pop
je
xchg
jmp
mov
pop
mov
dec
test
mov
stos
sbb
adc
inc
syscall
std
imul
jnp
mov
dec
adc
or
aad
sbb
or
dec
xchg
pop
clc
inc
enter
shrb
cmpb
pop
dec
jge
enter
dec
lahf
aad
insl
push
mov
inc
aad
jne
cmp
mov
vucomisd
gs
mov
adc
test
cmp
jl
inc
nop
cmp
push
lea
push
and
mov
inc
lea
cmp
std
push
aaa
or
sbb
fistps
cmp
jne
daa
dec
or
xor
cmc
std
andl
rcrb
andl
mov
jmp
and
lea
cli
sbb
sbb
inc
daa
add
jecxz
mov
dec
xchg
ret
test
loop
mov
xor
leave
outsl
ljmp
inc
ja
loop
stos
or
xorb
mov
pop
xchg
push
pop
dec
enter
jl
xor
insb
gs
dec
pusha
dec
xor
aas
or
push
repnz
dec
xchg
xchg
push
orb
pop
gs
ficoml
mov
stos
lcall
dec
sub
cmpl
pop
and
lea
push
pop
mov
inc
or
push
jp
in
mov
jb
mov
popa
pusha
orb
mov
loop
nop
pop
adc
fisttpll
sbb
inc
xor
sbb
or
dec
and
ret
cmp
lock
inc
pop
push
or
mov
jle
inc
cs
inc
dec
js
jbe
sub
or
fidivrl
xorb
cmc
inc
dec
pop
andb
lcall
cmpl
cmpsl
sbb
xchg
adc
dec
mov
cwtl
in
or
and
daa
sub
push
data16
bswap
hlt
sbb
es
cmp
ss
dec
fisubl
mov
mov
shlb
sahf
cli
push
jae
dec
mov
sub
out
ljmp
test
outsb
dec
inc
sub
int3
adc
add
pusha
dec
repnz
mov
adc
push
add
loope
in
xchg
sbbb
and
popa
mov
mov
enter
push
aad
fdiv
fisubrl
in
xlat
ljmp
jnp
mov
or
hlt
xor
cld
add
mov
lret
mov
sbb
enter
adc
jl
mov
sub
cmc
enter
jbe
daa
divb
mov
push
push
cmpsb
stos
cmp
push
test
jae
js
popa
cmp
movsl
mov
push
dec
cmp
dec
ficompl
adc
out
pop
adc
add
push
add
enter
popa
fcmovb
leave
pop
sub
lahf
dec
push
xchg
inc
jae
push
sbb
outsb
adc
cmp
xchg
or
xchg
pop
pop
or
jecxz
cltd
jmp
and
lahf
push
aas
stos
push
cmc
inc
adc
mov
stos
or
jecxz
mov
push
fidivrl
inc
xchg
cltd
fidivrl
or
out
xor
in
out
fiadds
pop
icebp
push
test
les
rcr
lods
sub
lret
jle
nop
sub
int3
lds
inc
test
ljmp
out
adc
fldl2t
popl
inc
ficoms
repz
mov
mov
cwtl
test
cltd
sbb
cmpsl
inc
pop
test
sti
mov
push
repz
scas
cwtl
pop
jecxz
test
pop
popf
leave
stc
test
test
clc
scas
clc
icebp
mov
mov
enter
nop
jge
mov
mov
outsb
sub
sbb
xor
loope
inc
rdtsc
lds
push
sbb
add
mov
aas
cmc
int
iret
mov
enter
xor
jne
stos
pop
sbb
movsb
sti
jnp
mov
lea
inc
dec
out
leave
push
push
imul
stc
movsb
pop
ja
mov
enter
jns
jecxz
jecxz
lds
sub
in
or
imulb
in
hlt
lea
fidivrs
cmp
and
mov
pop
and
scas
stc
jae
lret
sbb
xor
loop
dec
repz
repnz
cmpsl
add
sahf
hlt
push
inc
fcomip
test
pop
mov
lret
inc
roll
insb
test
daa
sbb
xchg
cmp
cmp
mov
out
mov
jno
repz
xchg
in
sbb
or
loopne
push
int3
jne
mov
pop
cmpsl
pminsw
insb
lock
push
mov
xor
xchg
mov
pop
mov
inc
leave
fstpt
int3
arpl
or
push
xchg
rol
or
add
lret
scas
loopne
mov
in
or
les
imul
pusha
in
in
loop
enter
jle
and
in
repz
iret
aam
lcall
imul
pop
pop
sbbb
lahf
jo
push
mov
int3
jmp
push
mov
mov
dec
mov
std
xor
pop
in
enter
rorl
mov
aad
cltd
pop
loopne
dec
jecxz
pushf
andl
iret
arpl
push
add
popf
inc
xchg
xor
inc
mov
mov
out
or
loope
sbbb
xchg
ljmp
mov
add
nop
loopne
mov
jg
aaa
in
push
sbb
dec
cmp
sbb
enter
lret
inc
jl
fcomi
push
setae
xchg
outsb
insl
xor
cwtl
mov
mov
sub
cmp
sbb
ficoml
ja
out
pop
cs
cltd
lods
into
sbb
cmp
loope
adc
and
outsb
out
insb
lods
imulb
xor
fcmovb
or
stc
push
lods
cmc
xor
mov
adc
cwtl
jmp
scas
cmp
pushf
in
sub
lds
js
insb
outsb
jp
imul
adc
fs
add
lds
pop
negl
jae
shlb
sub
mov
jg
ja
mov
out
pusha
adc
aaa
jmp
lcall
data16
insl
jle
je
fcomps
div
jbe
jns
aad
jne
sub
mov
mov
pop
or
mov
jmp
cmp
cwtl
and
dec
cmpsl
and
xchg
bound
ds
cmpsl
das
pusha
out
lcall
dec
lock
sub
into
pop
data16
cmpsb
and
sub
inc
adc
pop
add
pop
cmpsb
psubb
pushf
addr16
shrb
movsl
xchg
or
jnp
enter
data16
mov
and
push
cwtl
cld
cmp
mov
pushf
push
ficompl
lea
filds
lock
xchg
adc
std
or
ficoms
sbb
leave
adc
cltd
add
sub
xchg
cs
je
add
add
cmp
sub
xchg
inc
inc
xchg
pop
cmp
sub
jp
mov
jnp
mov
jb
fsubr
sub
pop
add
repz
cmp
popa
pushf
dec
add
sti
repnz
cmp
ljmp
cmc
daa
cmpsb
loopne
call
out
addr16
jle
stos
push
pop
mov
mov
dec
es
icebp
mov
add
lds
xor
pop
jb
syscall
adc
adc
daa
xchg
xor
or
pusha
xchg
adc
out
xor
adc
daa
out
cmp
push
jmp
orl
testb
sbb
pop
icebp
movsl
cwtl
adc
pop
pop
cmp
mull
jle
sub
xchg
out
inc
jo
jnp
pop
inc
sti
xor
pop
mov
ljmp
push
shl
sbb
sbb
aam
mov
nop
jp
movsl
mov
xchg
adc
add
cmc
out
jno
faddl
pop
test
popa
pop
cmp
inc
jmp
mov
shrl
enter
mov
dec
out
loopne
movsl
out
out
sbbb
mov
push
aam
mov
adc
andb
repz
popl
neg
test
in
push
push
movsl
das
mov
inc
loope
faddp
xchg
or
and
rcll
enter
mov
mov
pop
adc
mov
dec
inc
in
sub
xchg
mov
sub
out
pusha
mov
dec
rclb
pmaxsw
mov
push
xchg
pusha
stc
cmp
daa
hlt
fildll
shrw
scas
dec
cmp
sbb
std
lods
fistpll
sbb
jnp
xchg
in
enter
das
inc
cltd
lret
add
sub
imul
fdivrs
adc
push
stos
faddl
sti
xor
gs
or
pusha
and
jmp
mov
stc
cmpsb
mov
fsts
cmp
xor
ret
sbb
lahf
pop
fistpl
pop
dec
and
outsb
sahf
enter
ss
sbbl
sbb
leave
daa
sub
cmp
ss
sbbb
rorl
lahf
insl
push
popf
dec
or
pushf
lret
cmp
lds
and
imul
fs
mov
xchg
mov
jns
mov
jbe
or
std
ret
outsb
nop
sbb
cwtl
cmp
vpunpcklwd
ds
cli
clc
stos
fsubs
nop
jmp
inc
aam
xchg
ficoml
and
std
int
fs
xchg
lds
jge
pop
gs
mov
stc
loopne
fs
mov
sbb
fimuls
lods
mov
addw
mov
pop
pop
nop
shlb
push
testl
repz
fiadds
xchg
sbb
pushf
and
cmp
xchg
pop
xchg
shll
enter
scas
mov
js
sbb
push
test
mov
div
mov
xor
mov
mov
out
fimull
imul
enter
mov
xchg
push
in
adc
aad
push
aaa
lds
bound
pop
mov
adc
pop
out
aas
dec
sub
mov
icebp
or
fisubl
adc
and
dec
jne
fnsave
pop
nopl
ljmp
pop
sarl
jecxz
daa
pop
iret
push
adc
roll
or
dec
lds
dec
mov
ljmp
andb
out
aas
cs
iret
and
rorl
pop
insl
rcrb
inc
dec
sbb
push
ds
sbb
jne
jne
mov
push
add
push
dec
popf
adc
sbb
jl
daa
loope
jp
lods
ss
test
xchg
rclb
ficoml
in
mov
sbb
daa
clc
pushf
pop
ljmp
fsubr
inc
pop
push
fstpt
popa
inc
cmp
lock
das
and
insl
enter
inc
lock
push
cwtl
xor
gs
push
pop
xchg
pminub
mov
clc
adc
and
out
clc
fisubl
popf
clc
das
push
aad
sub
dec
jo
clc
push
mov
ljmp
mov
jg
inc
mov
fsubrs
in
jge
insb
inc
aam
jae
adc
or
push
xor
clc
out
xorl
rcrl
imul
dec
fs
out
insb
jo
push
sbb
int3
xchg
lea
fwait
xchg
loopne
data16
push
jne
test
adc
and
in
clc
imull
mov
insb
sub
xchg
cmp
les
das
mov
fwait
movb
add
xor
std
xor
mov
xchg
pop
hlt
imul
movsb
fwait
movsl
xchg
cltd
mov
scas
mov
popa
pop
mov
call
inc
inc
add
lods
jmp
js
mov
pop
and
xchg
mov
push
mov
fdiv
mov
mov
enter
pop
mov
aam
mov
dec
insl
insb
out
mov
sbb
cltd
mov
mov
mov
fwait
int
inc
scas
clc
push
jecxz
fisubrs
sub
mov
fs
push
cmp
daa
pop
cli
cmc
leave
mov
dec
push
sub
add
lods
mov
and
xorb
rolb
jns
mov
ds
pop
bswap
cmp
inc
sbb
pop
imul
or
insl
loope
jne
fimuls
push
mov
xor
mov
xlat
xor
sarb
xchg
mov
dec
xchg
dec
add
xor
test
or
inc
or
mov
je
xabort
imul
testb
pop
mov
sub
adc
cmp
cmp
loope
lcall
push
sub
gs
xchg
xor
mov
and
inc
mov
adc
and
in
mov
cmp
aaa
aam
mov
push
pop
pop
insb
mov
ret
sub
jns
pushf
mov
stc
cwtl
jb
or
sbb
and
mov
sahf
mov
repz
sbb
or
jo
sbb
dec
jg
mov
in
mov
dec
fimull
lods
adc
add
in
out
inc
ljmp
and
pop
es
cmp
fwait
adc
pusha
pop
push
cmp
pushf
sbb
movsl
and
data16
iret
or
rcll
pusha
enter
sub
into
cli
or
and
pop
inc
cltd
cli
scas
push
sbb
inc
and
in
cmpsb
aas
jno
insl
sbbb
movsl
lcall
fcmove
imul
dec
pop
mov
xchg
dec
out
mull
incb
mov
xor
pop
xor
push
mov
in
cmpsl
inc
imul
cmp
nop
cmp
popf
lahf
test
sbb
insb
divb
jns
sub
out
pop
mov
inc
push
sub
dec
inc
dec
xor
imul
jmp
mov
inc
data16
lret
xchg
ret
dec
leave
mov
add
mov
jno
test
nop
mov
insb
sbb
jecxz
pop
inc
xor
int3
jne
aaa
lds
cmp
push
movsl
stos
xor
and
dec
ljmp
pop
out
mov
jns
push
loope
adc
packsswb
xchg
fxch
je
popa
adc
mov
shlb
sbb
sbb
and
imul
adc
mov
cmc
pop
inc
cmp
and
push
xchg
imul
movsl
add
and
call
sbb
in
sbbb
cmc
xchg
mov
xchg
mov
enter
scas
xchg
inc
stos
test
or
fwait
outsb
imul
scas
sub
pop
sbb
add
ficompl
mov
clc
inc
sbb
enter
cmpsb
or
and
arpl
js
and
push
jp
add
testb
pop
adc
rolb
adc
and
pop
mov
mov
push
xchg
adc
sbbl
adc
daa
fmull
shrl
ljmp
cmpsb
pop
push
jmp
fldcw
pop
xorb
dec
push
xor
mov
xchg
rclb
inc
push
nop
fidivrs
insl
jbe
arpl
push
inc
push
add
xor
lock
adc
rcrl
enter
mov
mov
cmp
jl
jno
stc
or
mov
enter
pusha
test
adc
or
lods
sub
or
fs
jp
inc
or
push
icebp
aam
mov
jo
push
add
stos
std
jb
dec
enter
insl
shll
or
ds
mov
ret
adc
cmp
mov
aas
mov
popf
xchg
mov
mov
push
mov
imul
or
pop
pop
pop
std
fsubrp
subb
out
sahf
and
idivb
push
or
xor
sbb
and
clc
sbb
aas
mov
mov
stos
arpl
mull
les
add
scas
push
adc
jb
cmp
repnz
jae
addb
sbb
push
addl
or
addr16
aas
adc
add
repnz
sbb
enter
push
lea
jg
xor
ret
mov
les
mov
call
fwait
jl
mov
movl
data16
call
dec
ret
add
and
in
push
push
mov
push
xchg
mov
in
xor
and
jne
pop
mov
sbb
adc
adc
push
mov
shrl
call
outsl
dec
push
enter
iret
mov
sbb
int3
cmp
sti
adc
mov
test
icebp
adcb
cwtl
shr
lds
orb
jge
call
add
imul
out
test
aaa
adc
mov
dec
sahf
cmp
inc
push
insb
mov
int
sbb
xor
lahf
pushf
add
in
fdivrl
inc
cwtl
sbb
or
fsub
mov
adc
div
icebp
dec
mov
cmp
lahf
ljmp
mov
push
mov
adc
ss
dec
xchg
inc
test
inc
xor
pop
adc
aaa
or
test
mov
or
je
dec
mov
subb
pop
inc
push
xor
das
push
lahf
and
call
mov
mov
out
bound
cmp
adc
or
daa
mov
mov
fbstp
lds
adc
add
repz
pop
xor
imul
into
pop
test
leave
enter
adc
mov
inc
mov
cmp
fwait
shlb
neg
dec
repz
sbb
clc
sahf
inc
push
mov
insl
sbb
xchg
loopne
leave
roll
or
lock
fldcw
stos
daa
mov
inc
push
icebp
pop
jne
rclb
adc
sahf
push
scas
sub
enter
push
sbb
pop
mov
fisubrl
fldt
or
add
add
enter
cli
rcrl
call
and
test
cmpsb
icebp
mov
cld
int
or
xor
nop
jmp
test
and
lea
dec
cmp
pop
mov
push
test
testb
inc
or
push
cltd
aas
into
mov
stos
push
mov
loope
dec
xchg
mov
adc
cli
ds
jp
adc
cltd
out
data16
cwtl
push
repz
and
pop
cmp
cmp
adc
pop
xchg
repnz
sub
mov
mov
hlt
add
sbb
movsl
adc
xor
inc
adc
sbb
or
movsl
nop
int
jl
jle
inc
pop
adc
push
lods
loop
sbb
mov
pop
cld
cmp
xor
lods
cmp
cli
or
push
push
inc
lods
int3
je
loopne
add
pusha
adc
cltd
or
xchg
xchg
ss
cli
fs
jmp
popa
sbb
inc
aam
inc
je
lds
std
fimull
jae
popa
and
mov
in
imul
ljmp
mov
mov
pop
leave
mov
loope
mov
movsl
in
xchg
call
jne
cmc
cwtl
shl
cmp
mov
insl
add
aad
push
bound
and
fimuls
fimull
xor
pop
adc
sbb
or
jo
popf
out
cwtl
cld
mov
and
mov
subb
push
xchg
and
scas
cmp
sahf
mov
push
push
enter
sbb
cld
jne
mov
stc
bound
shlb
jns
or
mov
fmul
lret
inc
add
mov
and
or
test
and
loop
jmp
leave
fwait
addr16
cmp
xor
mov
or
and
cwtl
cmc
cmp
std
int
repz
sbbl
pop
jg
frstor
push
xor
cmc
aad
iret
out
sbb
jmp
shlb
mov
and
add
mov
repz
inc
adc
cli
std
sub
or
xor
and
jmp
cmp
enter
stc
or
sbb
xor
xor
cmp
das
jbe
add
xor
cmc
sub
sbb
lock
jb
aas
jmp
into
xchg
stc
mov
insl
negl
lds
imul
addr16
and
push
xchg
test
pop
insb
mov
dec
or
imul
test
clc
fwait
xchg
sub
shlb
test
push
negl
int3
data16
pop
mov
mov
inc
out
mov
mov
sub
sbb
sbb
dec
cli
fnstenv
in
cmp
ljmp
xor
insb
mov
adc
inc
dec
sbb
int3
inc
pop
or
sub
ljmp
lds
enter
push
pop
imul
iret
xor
pop
xchg
inc
adc
push
jl
sbb
cmc
cmp
xchg
lcall
mov
pop
es
rorb
lret
mov
push
fidivl
fdivs
cmpsb
int3
mov
or
push
or
int
cli
cmc
sbb
js
bswap
lret
sahf
xor
cwtl
mov
mov
xchg
mov
push
test
outsl
dec
leave
and
xchg
xor
aad
sbb
jmp
pop
add
xchg
cmp
mov
mov
stc
sub
fadds
mov
insb
insb
out
cli
loope
sbb
ror
imul
in
jne
cmpsb
inc
cmpsl
pop
pop
aam
jmp
inc
dec
add
cltd
mov
xor
xchg
sub
xchg
nop
jmp
test
inc
clc
add
jmp
es
mov
pusha
daa
insb
or
les
or
or
sbb
fcmove
cwtl
mov
dec
scas
and
mov
mov
jp
adc
ret
cwtl
lret
aam
add
pop
mov
adc
das
add
cmpsl
mov
mov
int
xor
add
enter
cmp
pop
fdivp
mov
pop
push
cmc
scas
mov
aaa
into
xchg
test
movsl
xchg
subb
cli
aam
add
push
imul
add
lahf
loop
js
nop
out
xor
out
lret
xor
xchg
and
daa
cmp
movsb
int3
jecxz
enter
adc
fisubs
push
loop
xor
push
push
fmull
inc
loopne
dec
xchg
inc
xchg
jecxz
or
add
push
nop
xchg
mov
mov
pusha
cmp
or
mov
push
sub
out
pop
out
fcmovb
lods
inc
fistl
mov
xor
xchg
repnz
repnz
subl
and
inc
loope
add
jmp
push
adc
or
sbb
test
push
fscale
decl
or
data16
gs
lods
shll
cltd
push
push
in
cli
fldt
shlb
stos
xor
ficoml
test
lret
push
add
mov
sbb
gs
repz
push
or
mov
push
xchg
sbb
fisubrl
push
pusha
dec
dec
enter
dec
mov
loop
lods
inc
stos
rcll
scas
push
rclb
inc
int3
out
shll
ja
inc
cmp
jecxz
push
int
cwtl
sbb
cwtl
mov
pusha
mov
enter
movsb
lret
mov
cmp
shlb
aas
rorb
mov
add
das
push
ja
mov
inc
push
cmp
mov
jns
aaa
sbb
sub
cmpsb
or
jo
cmp
cmpsb
std
addl
xchg
or
mov
adc
jle
dec
jge
inc
bound
mov
cs
mov
sbb
and
cmp
or
fs
enter
mov
fldenv
pop
int3
loopne
fs
or
cmp
mov
or
sti
mov
dec
enter
ljmp
push
and
mov
jmp
repz
mov
mov
lods
jl
xor
in
or
daa
cwtl
jg
fistpl
xor
mov
push
pop
xor
movlps
lock
dec
push
sub
or
cmc
out
loope
in
xchg
cmp
cmp
scas
icebp
out
dec
testl
sbb
push
sub
pop
call
pop
sbb
nop
scas
xchg
les
jno
test
enter
mov
or
mov
inc
add
popf
jl
movl
enter
pop
mov
clc
in
rcrl
xchg
loop
mov
imul
jb
push
add
imul
mov
rcrl
mov
into
insb
adc
cld
push
lret
out
pop
aas
out
mov
xlat
adc
cmc
loop
popa
lahf
clc
xchg
imul
pop
push
sbb
push
lcall
inc
lds
or
xchg
push
mov
pop
mov
and
mov
jge
mov
sbb
mov
iret
aaa
adc
sbb
pusha
jmp
adc
and
jmp
inc
daa
push
mov
and
mov
mov
imul
fwait
jecxz
jb
and
enter
in
sahf
and
dec
sub
and
cmp
and
and
lods
push
mov
push
iret
insl
add
icebp
mov
jmp
popa
mov
cmpsl
shlb
out
lock
push
dec
inc
in
fisttps
pop
loop
add
lea
stc
inc
mov
adc
mov
dec
insl
lods
push
jmp
out
adc
cmp
dec
out
enter
jb
gs
pop
and
xchg
out
imul
and
or
scas
jno
in
adc
cmp
movsb
cmp
lret
mov
sbb
xchg
or
das
jge
or
push
cmpsb
sub
mov
or
cwtl
and
push
jbe
pusha
mov
cld
push
call
xor
std
out
sbb
lock
push
clc
sbb
and
sbb
push
xor
popa
add
scas
mov
inc
aas
or
pop
jecxz
dec
loopne
mov
xchg
mov
sbb
push
cmp
add
sub
adc
or
mov
dec
lods
mov
mov
sub
sub
xor
add
mov
imul
dec
into
lds
gs
les
repz
fisubrl
les
inc
popa
leave
mov
or
lcall
adc
enter
orb
aas
adcb
les
xchg
xor
icebp
or
bound
fimuls
push
bound
inc
or
mov
and
cli
cmp
loopne
sti
out
sub
push
push
icebp
push
iret
enter
aas
test
dec
or
xchg
xor
mov
push
inc
cmp
pushf
aas
repz
lods
jp
test
push
push
pop
xor
inc
gs
shrb
add
cmp
adc
push
rorl
imul
imul
xchg
dec
hlt
inc
dec
lds
or
rclb
filds
adcb
cwtl
lock
sbb
or
mov
pop
or
jmp
test
icebp
enter
jg
sbb
pop
test
jmp
xchg
push
sbb
push
or
xchg
xor
add
cmc
js
or
loop
sub
adc
call
jb
mov
xchg
xchg
sub
adc
stc
stos
xchg
xchg
and
enter
les
inc
adc
sbb
loopne
cltd
jmp
hlt
pop
jnp
mov
leave
lds
test
xchg
into
pusha
adc
cmp
dec
int
gs
xor
out
mov
lock
fs
and
movsl
xor
lods
jnp
and
mov
or
jmp
jns
lahf
aad
or
call
mov
in
int3
iret
bound
xchg
push
sarb
mov
jo
adcb
mov
cmp
sbb
ret
enter
cmpsb
sub
popa
cmp
ret
and
fidivrs
sub
mov
cmp
in
mov
dec
movsb
lcall
inc
or
mov
and
dec
loop
push
inc
nop
sub
jne
inc
or
stos
push
add
stc
aaa
mov
stc
mov
xchg
mov
shll
cmp
lds
pop
movsb
sbb
enter
cs
shl
xor
cwtl
push
or
arpl
push
mov
cwtl
pop
inc
sbb
and
xchg
imul
xchg
add
dec
sbb
push
jmp
adc
lock
pop
dec
rcl
mov
nop
add
cmp
xor
sbb
es
mov
or
sbb
push
cmp
in
cli
fldcw
pop
and
inc
cmp
aas
ficompl
in
idivl
sbb
or
and
or
and
mov
dec
or
and
and
and
test
lret
imul
mov
or
iret
inc
adc
lea
jne
js
out
in
pop
push
pop
and
sbb
and
adc
lcall
sub
cmp
xchg
push
push
xchg
ja
xor
iret
or
leave
jne
mov
pop
and
popf
mov
pusha
clc
andl
jmp
jl
pop
out
cmpsb
clc
ljmp
cs
stos
sbb
adc
les
pop
lock
ret
adc
jmp
mov
ds
clc
mov
pextrw
sub
push
jb
xchg
insl
shlb
stc
popa
shlb
fdivp
divb
push
lock
sbb
mov
mov
dec
lea
mov
cltd
push
add
arpl
mov
cld
int3
cmp
adc
xor
outsb
mov
mov
push
mov
minps
pop
and
pop
or
bound
ss
mov
adc
push
jbe
jbe
pop
push
mov
sbb
insb
mov
fwait
mov
incb
pop
lods
or
push
push
and
clc
xchg
iret
dec
push
mov
aad
fiaddl
jnp
sbb
xchg
or
imul
enter
out
mov
jp
ss
dec
add
out
insb
in
mov
pushl
mov
sub
mov
xchg
test
push
mov
movsl
cmc
jl
inc
jmp
sbb
out
repz
mov
xor
jecxz
jmp
sub
push
sub
mov
add
jno
mov
in
sbb
push
nop
es
sbb
mov
pusha
mov
fistps
lds
pop
xchg
sub
enter
xlat
jb
pusha
xor
mov
add
scas
daa
xor
test
mov
mov
cmp
mov
shl
jmp
arpl
inc
inc
in
add
jge
cmpb
enter
popf
jmp
imul
pop
pop
es
xor
fsub
mov
push
data16
and
sub
ja
ljmp
mov
cvtps2pi
addr16
xchg
cmpsl
movl
rcl
xchg
and
call
jl
aaa
adc
cmp
fcmovb
fsub
bound
sti
push
ljmp
in
pop
or
adc
inc
mov
ficompl
imul
in
jecxz
test
dec
dec
enter
mov
outsb
xchg
add
cld
mov
mov
mov
imul
xchg
orb
push
lds
insl
xchg
call
cmp
test
mov
push
daa
fnstenv
iret
clc
mov
mov
adc
lcall
sbb
xor
cmp
or
or
jl
and
or
enter
pop
stc
clc
int3
push
arpl
icebp
push
dec
push
mov
add
jne
adc
xor
or
in
cmpsb
push
xor
push
pop
jmpw
cmc
and
pop
enter
lahf
in
jbe
xor
aad
cmp
or
or
roll
loopne
lret
out
aas
cmp
pop
leave
push
cmc
outsl
adc
in
mov
xorl
or
dec
cmp
mov
jne
cmp
mov
pushf
mull
pop
les
and
repz
js
sub
jp
test
pop
pop
mov
ficoml
insb
adc
and
out
pop
clc
sbb
addb
cmp
pop
ret
imul
in
push
lcall
dec
mov
outsl
inc
xor
pop
xchg
iret
into
pop
repz
mov
sbb
test
fcoms
mov
mov
out
jmp
data16
xlat
dec
enter
ss
pop
and
out
aam
sbb
xchg
in
or
cmc
pop
inc
out
dec
adc
int3
fimuls
cmp
sub
int3
jecxz
out
xchg
mov
push
xor
loop
sub
sbb
pop
or
in
cmp
xchg
ljmp
imul
cmpl
adc
dec
jecxz
shr
fsubr
fidivl
cli
in
mov
cmp
mov
mov
enter
adc
in
out
and
or
lods
pop
or
call
adcl
inc
mov
or
pop
adc
div
cmp
roll
lcall
cmp
push
aad
or
fimull
adc
mov
and
dec
and
ret
push
push
mov
enter
fs
push
daa
aam
lods
xor
js
fdiv
jmp
mov
adc
mov
sbb
sbb
out
in
push
mov
or
loope
or
push
sbb
nop
jp
pop
xor
cs
cltd
fstps
in
jmp
mov
lods
test
mov
and
jmp
out
xchg
and
rcrl
cmp
push
fwait
cmc
sub
mov
aad
ljmp
sbb
lcall
movsl
xlat
sbb
adc
xchg
out
lods
out
and
mov
inc
sti
stc
mov
xor
enter
or
mov
addr16
pusha
je
shrl
fnstcw
cwtl
imul
mov
fsubrs
dec
jnp
dec
jp
sbb
pop
mov
mov
and
js
sbb
ljmp
je
sbb
add
jmp
cmp
inc
xchg
add
cli
movsl
jns
shlb
enter
mov
cmp
ja
jbe
rcll
add
sbb
xchg
stos
xchg
mov
shl
push
call
hlt
jecxz
fbld
lea
and
or
pop
inc
or
iret
cld
dec
arpl
add
adc
outsb
mov
out
mov
xchg
ficoml
cmp
not
mov
data16
stc
xor
fisubs
dec
into
mov
push
lods
mov
mov
cltd
insb
dec
jae
and
xchg
cmpsb
aaa
or
inc
call
scas
ret
cwtl
das
imul
fnstcw
sbb
aam
cmp
cmp
in
mov
or
adc
in
jmp
push
mov
xor
and
scas
pop
pop
in
in
and
pushf
mov
sbb
push
pop
lea
mov
insl
add
ds
sbb
in
sub
inc
fadds
inc
outsb
int3
pop
jne
jge
leave
jp
push
cmc
ss
cltd
repz
mov
mov
fstp
sub
fnstcw
test
sahf
xchg
cmc
pop
les
cld
and
dec
mov
into
push
sbb
les
push
adc
xor
xchg
xlat
cmp
push
out
lcall
stc
cmp
test
pop
and
inc
and
push
adc
xor
sub
mov
lds
out
cmc
imul
cwtl
jp
add
call
loop
data16
mov
fwait
dec
mov
mov
aas
mov
and
je
and
jmp
xor
aas
inc
adc
xchg
gs
enter
lret
shlb
add
jo
inc
loop
xor
mov
mov
cmpsb
fistpll
icebp
cmc
or
test
sub
sub
call
adc
mov
pop
imul
xchg
js
pop
popf
lcall
gs
push
enter
xor
xchg
add
adc
testl
adc
out
enter
mov
and
xor
popf
stos
pop
xchg
add
mov
in
in
data16
cmp
push
hlt
xchg
pop
sti
adcb
ret
in
fwait
and
cwtl
mov
aam
xor
jns
lock
xchg
dec
sbb
pusha
or
inc
cmp
pop
xchg
pop
add
das
pop
xchg
aaa
daa
adc
sbb
aad
pop
push
mov
pop
arpl
test
subb
pop
mov
dec
adc
push
out
dec
inc
and
push
arpl
push
or
imul
mov
push
negb
mov
int3
mov
fisubs
cmc
jo
mov
pop
jbe
jno
fnsave
push
popf
inc
idivl
dec
and
sbb
ret
xchg
and
or
ror
imul
mov
dec
gs
xor
outsl
sahf
enter
push
push
adc
rcl
sub
or
enter
xchg
push
loop
and
sub
shrl
mov
imul
sbb
or
xor
rorl
insb
add
inc
push
mov
pop
pop
stos
fsubr
aam
cmp
dec
das
insb
inc
fcom
or
or
call
mov
pop
push
test
sbb
add
adc
mov
hlt
gs
push
xchg
out
call
dec
cmp
lahf
jmp
dec
push
jo
lock
ret
je
je
inc
imul
and
dec
and
jecxz
xor
mov
push
movsb
jecxz
and
mov
decl
jo
enter
sti
mov
cmp
or
push
or
and
cmp
or
xchg
jne
or
sbb
cmp
xor
add
fimull
jne
sbb
jb
loope
pop
and
cmp
arpl
sbb
inc
lock
push
in
jecxz
sub
pop
pusha
jbe
jno
data16
loopne
outsb
adc
mov
or
movl
adc
cmp
insb
and
push
movsl
das
cmp
clc
loopne
imul
aad
enter
jmp
mov
ror
sub
sbb
leave
mov
hlt
fmuls
int3
sar
repnz
mov
daa
dec
lret
in
dec
ret
and
xor
inc
xchg
inc
lret
inc
enter
movsl
and
lods
test
inc
sti
pop
and
push
shll
xchg
cmpsb
and
test
in
or
in
mov
inc
inc
mov
popa
dec
inc
enter
cmp
lock
xor
add
dec
lcall
dec
mov
mov
mov
out
outsl
clc
or
and
and
pop
cmc
stc
cmp
and
xchg
jp
cmp
adc
jbe
mov
call
xchg
jae
jno
xorps
loopne
sbb
ljmp
mov
stos
dec
add
xor
sbb
lret
sbb
enter
mov
inc
adc
push
add
data16
std
test
loop
pop
inc
mov
cmpsb
sbb
jne
sbb
shrb
jge
test
xchg
cmp
pushf
dec
mov
inc
add
sbb
movsl
jp
movsl
or
sahf
sbb
repnz
cmp
sub
stc
or
hlt
lods
adc
jge
shrl
adc
inc
loope
adc
add
pop
xor
mov
jecxz
pop
and
xor
or
dec
adc
push
jae
dec
gs
addr16
or
adc
aad
dec
dec
mov
dec
lea
xor
adc
dec
adc
pop
lea
mov
aad
and
lods
dec
clc
adc
dec
je
inc
mov
push
daa
or
add
pop
popf
dec
jne
pusha
nop
ljmp
xor
addr16
sbbb
loope
sbb
or
pop
das
pop
out
test
pop
call
dec
or
scas
gs
cli
hlt
cmc
pop
jno
dec
test
jne
push
aas
jne
pusha
mov
test
sbb
aas
test
test
pop
xchg
in
aaa
lock
sub
push
scas
hlt
mov
mov
or
adc
lea
push
rol
push
insl
lahf
call
in
aaa
jl
imul
or
jo
lahf
sarb
xchg
dec
xchg
pop
fstpl
call
rcrl
daa
int
nop
add
dec
mov
leave
call
dec
test
adc
aaa
lods
cmp
add
add
shrl
fwait
push
arpl
adc
push
pop
cwtl
das
imul
scas
aaa
adc
enter
inc
jmp
loopne
cmpsl
cmc
xchg
jp
enter
dec
jne
sub
and
stc
jo
addb
xchg
and
mov
ljmp
lods
and
mov
sub
clc
lds
mov
xchg
add
test
mov
test
rcrl
cwtl
outsb
pop
icebp
sbb
cmc
mov
mov
jne
out
lds
adc
jmp
pusha
imulb
xchg
nop
cmp
arpl
cmpsb
dec
test
xor
fsubrs
sub
es
fidivrl
push
sbb
mov
pop
fadd
xchg
pop
arpl
and
insl
xchg
add
ficomps
dec
jp
fwait
mov
pop
dec
mov
ficomps
dec
insl
movsl
and
in
cmp
inc
psubb
jne
enter
fs
inc
sub
push
cmp
mov
pushf
jmp
inc
inc
or
in
or
loope
mov
enter
mov
cltd
sbb
or
mov
sub
push
scas
ficoml
xor
daa
xor
inc
fwait
or
ficoml
and
inc
and
pusha
in
inc
jne
inc
testb
lret
ret
jnp
cld
inc
enter
mov
push
aam
xchg
xor
inc
mov
xor
add
adcb
inc
lock
lock
push
add
inc
or
sbb
das
movsb
test
xor
inc
daa
hlt
push
loopne
or
test
jne
repz
cmp
aad
imul
push
mov
pop
add
dec
popa
enter
cmp
xchg
sub
cmp
shll
lds
bound
fstpt
fdiv
add
mov
lds
pop
aam
movsl
out
xor
cmp
sbb
xorl
cmp
inc
and
or
cmp
and
xchg
mov
sbb
out
adc
and
cmp
enter
or
inc
sub
add
or
jae
mov
mov
lods
fiaddl
xor
ficoml
imul
push
push
mov
dec
jmp
mov
adc
repnz
pusha
dec
push
stos
insl
in
push
sub
xor
inc
comiss
inc
loop
lock
dec
sub
aas
aam
aaa
or
jecxz
xor
or
test
adc
xchg
cmp
test
call
dec
mov
scas
inc
sbb
sub
dec
shll
add
jge
cmc
or
adc
push
xor
pusha
in
pop
clc
enter
sbb
cwtl
pop
dec
call
inc
push
fcoms
mov
sbb
enter
cmp
andb
jecxz
loope
icebp
daa
push
push
or
outsl
test
call
inc
jecxz
mov
or
mov
mov
loopne
jge
ret
add
insl
cmp
push
movsl
loopne
jo
enter
mov
lcall
xchg
dec
push
imul
or
adc
mov
and
dec
cmp
xchg
sarl
mov
mov
cmpsb
ss
push
lea
outsl
popa
mov
fdivs
daa
aas
cmp
sbb
popf
aad
mov
push
add
pop
ret
add
ficoms
xchg
fcmovu
fwait
movntps
sbb
pop
outsl
int3
and
rorb
mov
lock
fstl
or
jbe
and
mov
or
push
lea
or
pop
outsl
loop
and
adc
call
cld
sbb
jge
jp
inc
jmp
pop
dec
or
sub
lret
jb
fwait
xlat
stos
cmp
aas
test
adc
push
enter
adc
mov
or
pop
jb
and
add
xchg
mov
jmp
popf
fisubrs
aad
clc
and
mov
call
pop
sarb
mov
addr16
jmp
insl
inc
lret
mov
mov
sub
ds
xchg
jecxz
cmpsb
ds
push
hlt
mov
fistps
inc
cmc
out
filds
enter
aam
insb
cmc
cltd
das
mov
ret
mov
adc
fbstp
push
mov
push
mov
hlt
lods
mov
mov
shlb
aam
gs
stc
xor
inc
cmc
in
mov
ficoml
lcall
jecxz
or
jae
sub
out
add
mov
cli
sub
xchg
inc
push
cmp
fs
adc
fisubrl
lods
lcall
daa
test
aaa
adc
sti
sbb
mov
cmp
lock
push
ds
enter
insb
inc
repnz
scas
mov
push
shl
testl
lcall
int
xorb
pop
mov
mov
fcompl
imul
dec
popf
pushf
adc
ror
lods
imul
adc
lcall
push
or
fildll
loop
and
lods
test
ss
xchg
sbb
mov
fsubrs
jb
cmp
pop
jne
movsl
cli
cmp
cmc
mov
fsts
test
nop
cmp
lods
mov
inc
sub
jge
stos
add
mov
imul
mov
adc
jne
ljmp
bound
xchg
enter
dec
fwait
mov
out
mov
daa
test
dec
test
mov
sub
aaa
or
stos
lcall
inc
lret
sbb
and
ljmp
push
lock
jnp
push
enter
ljmp
jmp
cmp
test
or
lock
xor
int3
sbb
fistl
in
xchg
mov
lds
notb
stc
testl
dec
rcrb
scas
out
inc
push
out
fildl
push
lret
cwtl
xchg
sarb
in
ret
pushf
push
repnz
cwtl
mov
and
shr
push
movsb
fsubrp
loop
cmpl
add
pop
iret
stos
xor
cmp
dec
or
scas
std
loope
aaa
mov
stos
into
and
fnop
shrb
push
sub
fwait
xorb
pop
lods
mov
sqrtps
push
lcall
push
out
scas
arpl
or
mov
adc
fimuls
cmp
pop
in
push
inc
sti
cmpsb
std
add
je
out
inc
fisubrl
xor
enter
mov
xchg
xchg
cmp
pop
mov
cmc
and
sub
xor
sbb
xor
scas
clc
sarb
or
adc
lcall
leave
adc
in
add
dec
ljmp
test
cmp
mov
je
mov
push
lahf
inc
out
loope
ds
sub
mov
xchg
or
pop
popa
scas
in
call
push
pop
sbb
rolb
pop
or
mov
cmp
aam
clc
pop
enter
movsb
sahf
xchg
xor
fidivrl
fsub
pop
push
xchg
jecxz
lea
cli
add
test
movsl
fsub
mov
lds
inc
btc
fstl
test
jle
popf
push
pop
dec
push
aam
cmp
popa
sbb
jo
mov
cmpsb
dec
or
shll
jecxz
mov
repnz
pop
adc
in
in
or
xchg
cmpsb
clc
lahf
sbb
sbb
outsl
jbe
daa
pop
stos
cmc
addb
les
sbb
jmp
cs
mov
inc
aaa
mov
loope
scas
adc
daa
sub
mov
in
cmp
jne
mov
shl
andb
rcrb
xor
mov
lea
cs
repnz
and
popa
xchg
sub
ficoml
enter
push
lahf
pop
insl
mov
sbb
in
cmpsb
in
mov
jmp
in
dec
cmc
into
mov
dec
aas
push
pop
loop
adc
dec
hlt
push
mov
aas
or
sbb
mov
daa
adcb
lahf
cwtl
adc
outsb
sti
gs
xchg
sbb
sbb
ljmp
test
sbb
mov
lahf
push
add
and
lea
xchg
ljmp
mov
outsb
lds
add
mov
and
dec
js
cmp
add
in
test
mov
enter
out
aaa
das
sahf
daa
and
xorb
xlat
sub
ljmp
mov
wrmsr
dec
mov
add
fldenv
inc
lock
rorb
sub
add
xor
or
sub
pop
iret
xor
jne
inc
fwait
out
call
loope
les
xchg
push
enter
cli
cmpsl
mov
pop
or
mov
stc
xor
call
inc
cld
inc
enter
stc
ret
call
fcompl
rcrb
xchg
cmp
mov
lahf
dec
sbb
sahf
jno
jle
ss
shll
sti
insb
sbb
mov
ret
add
adc
push
pop
dec
mov
add
cs
in
xchg
fwait
rclb
pop
inc
pop
nop
out
subl
test
lahf
cmc
pop
insb
inc
and
mov
adc
mov
or
inc
mov
lds
ss
addr16
lcall
mov
add
loope
pop
xchg
inc
out
mov
pusha
inc
jle
push
and
lods
inc
cmp
aas
mov
shrl
nop
pop
pusha
inc
push
movb
lret
outsb
enter
sub
mov
test
outsb
sub
aaa
jb
test
mov
rclb
fidivs
fwait
aad
or
push
sub
loop
dec
sbb
adc
adc
ffreep
bndstx
mov
push
iret
outsb
sub
push
pop
fcmovu
bound
fldl
cmpsb
popa
adc
fisubrl
enter
push
mov
ljmp
ficompl
fistl
stc
psubq
es
pop
mov
jbe
outsl
fisubrl
inc
adc
fs
jecxz
push
ret
lds
mov
pop
jge
jne
mov
das
std
adc
or
and
std
out
test
inc
jb
sbb
cmpsb
mul
push
jp
mov
test
out
dec
xchg
xchg
push
lds
mov
pop
push
out
jg
push
add
add
incl
cmpsb
lahf
inc
leave
adc
fcmovbe
fdivrl
or
jae
ret
out
iret
or
ficomps
jne
jge
imul
push
adc
lea
scas
and
xchg
js
in
mov
or
test
push
bnd
lret
push
cli
pop
push
nop
mov
push
pop
dec
aas
cmp
sbb
pop
inc
loope
adc
jae
mov
pushf
add
movb
stc
out
xchg
and
sub
shlb
jecxz
pop
xchg
pop
mov
jmp
gs
sti
pop
and
loopne
push
adc
test
mov
pop
xchg
inc
popl
fidivrl
add
sub
sbb
push
sbb
jecxz
jle
int
ret
int
test
dec
cld
mov
inc
xor
out
pop
stc
addr16
test
mov
aaa
pop
sub
pop
repz
pextrw
add
or
cmp
add
push
enter
and
add
leave
sub
in
dec
popa
and
push
data16
rcr
mov
in
cmpsl
jnp
cli
aaa
jne
inc
cld
cmp
sub
cmp
push
pop
cmpsb
stos
fldenv
jno
lods
mov
sbb
test
mov
and
sahf
pop
lock
in
in
lods
inc
mov
inc
repz
mov
mov
shll
das
mov
insl
iret
andl
cmpsl
sbb
je
xchg
addb
add
ficompl
mov
pop
push
xor
imul
fidivl
mov
pop
out
clc
jne
and
cli
sub
mov
in
jg
fisubl
aas
xor
jns
lods
les
adc
jbe
sub
jae
pop
cli
and
data16
int3
bound
les
and
cmp
aam
enter
xor
lods
test
or
in
jge
push
sbb
or
pop
aam
enter
sbb
push
xor
jmp
fsubl
cmp
push
mov
pop
std
xchg
pop
push
lea
dec
mov
lds
xchg
hlt
leave
loopne
mov
stc
test
cwtl
mov
mov
inc
and
cltd
pop
push
inc
sbb
test
enter
fldt
push
icebp
enter
jne
mov
cmp
daa
addl
dec
fs
add
loop
cmp
xchg
enter
or
pop
jmp
xchg
mov
ljmp
imul
stos
nop
inc
sub
std
pop
shlb
add
das
jmp
jne
jmp
sbb
add
cmp
enter
push
hlt
fildll
out
jmp
jmp
ficompl
insb
ss
call
pop
jo
loope
repnz
in
les
lds
pop
cltd
mov
sbb
mov
mov
nop
cld
fucomip
jmp
pop
cmp
addl
mov
xchg
mov
pop
les
mov
in
in
mov
int
pop
out
dec
adc
movsl
adc
les
sbb
inc
pop
xchg
fildll
and
adc
daa
sub
daa
cld
jbe
test
and
stos
mov
add
cwtl
int3
enter
call
fdivrs
mov
ljmp
and
pop
shll
push
xchg
add
in
or
sbb
mov
adc
mov
or
jg
mov
pop
pop
mov
popf
gs
scas
dec
sti
cli
mov
cmc
jmp
inc
mov
fnstsw
pop
cmp
or
xlat
pop
cmc
lock
inc
repnz
inc
hlt
dec
add
int3
jmp
cs
mov
pop
dec
or
push
add
pop
mov
adc
sub
sbb
xchg
sbb
and
repz
stos
xor
xor
mov
js
jle
mov
in
lds
mov
ljmp
test
jo
xchg
cwtl
and
nop
cmpsb
das
pusha
or
mov
sarb
xchg
dec
sub
mov
adc
jno
loope
test
dec
adc
adc
cmp
shrb
jle
out
dec
push
int3
notl
adc
lahf
xor
or
jp
fidivs
sahf
pop
add
dec
test
add
leave
imul
cmc
jecxz
push
cmp
pop
adc
add
repnz
mov
loop
pop
jnp
in
test
and
or
pop
push
xchg
sbb
fldenv
movsl
ljmp
int3
xchg
xchg
or
inc
cmp
repz
cs
insl
aas
rorl
fnsave
xchg
test
and
sti
cmpsl
cmpsb
roll
add
jae
imul
insl
imul
xchg
aam
lods
dec
dec
sbb
popf
pop
inc
add
inc
jg
jl
xchg
add
push
cmc
sub
shl
xchg
mov
pop
adc
ss
or
pushf
xchg
jle
in
aas
xchg
mov
jle
ret
adc
lret
scas
sbb
sbb
jge
sub
sbb
rorl
cmp
dec
loopne
sbb
cmc
enter
inc
pushw
dec
nop
cwtl
rolb
gs
dec
cltd
daa
out
in
sub
mov
in
mov
inc
scas
int
xchg
push
sbb
dec
and
xchg
push
inc
repz
sbb
jp
xlat
push
push
xchg
imul
std
insb
add
push
mov
inc
orb
adc
jmp
mov
or
mov
sarb
loop
and
and
sbb
pop
adc
sub
push
jb
jno
fiaddl
inc
push
stos
mov
adc
fstp
push
inc
mov
inc
aam
cmp
in
xchg
cs
enter
popf
mov
push
lds
popa
jbe
shr
into
adc
mov
mov
jno
xor
jle
pop
aas
cmc
sbb
popf
cmc
push
pop
enter
rorl
nop
or
popf
cmp
out
fwait
mov
pop
es
and
enter
gs
jge
insl
and
xorb
cmpsl
icebp
out
movsb
out
jne
mov
dec
leave
rcll
adc
dec
imul
addr16
mov
fimuls
push
add
pop
or
jecxz
enter
inc
test
and
and
adc
inc
inc
jbe
scas
ss
subb
shlb
daa
data16
jl
imul
jb
mov
fisubl
popl
ss
dec
mov
loope
pop
adc
sarl
loope
dec
xchg
or
mov
jbe
push
sub
les
push
dec
incl
dec
or
call
add
adc
out
adc
rolb
nop
add
iret
adc
add
cmp
into
nop
add
mov
popf
insl
incb
cmp
pop
push
rclb
jmp
das
mov
push
sub
adc
in
outsb
adc
dec
inc
mov
mov
addb
and
lods
outsl
scas
adc
cmp
jmp
cli
dec
lods
fistl
jp
rcrb
jl
imul
lods
add
gs
or
cmp
inc
clc
add
lods
add
add
imul
test
jmp
addr16
or
jl
test
xchg
sub
popf
add
mov
clc
std
test
jne
arpl
or
push
mov
jl
add
mov
iret
loopne
movapd
lahf
xchg
lahf
gs
popf
and
dec
inc
or
daa
jo
mov
push
jmp
imul
xchg
dec
push
push
mov
cs
outsb
in
jne
sbb
jne
in
inc
inc
cwtl
pop
jne
and
jne
jge
jne
call
dec
adc
aad
cwtl
sub
sbb
push
jmp
jne
mull
gs
adc
push
mov
lahf
adc
lea
adc
nop
dec
dec
cmc
imul
mov
jo
jl
sbb
or
test
sbb
jl
popf
push
xor
scas
dec
xchg
jne
insb
pop
sbb
push
lods
xchg
pop
mov
sbb
pop
test
dec
popf
mov
xchg
sub
shlb
shll
ficoml
insb
cmc
mov
cmpsl
xchg
subl
mov
or
mov
int3
sbb
dec
and
mov
fisubl
dec
cmp
aaa
and
inc
jnp
lock
imul
xchg
clc
jle
pushf
mov
push
fstl
scas
fimuls
nop
mov
mov
inc
inc
adc
and
jae
xchg
lahf
inc
or
mov
xor
inc
and
cmp
jle
out
loopne
enter
fsub
iret
imul
cmp
add
rcrl
mov
and
or
enter
pop
cltd
cmp
mov
jp
and
sub
inc
into
in
pushf
mov
or
jns
and
enter
inc
std
sub
xor
sbbb
jbe
adc
cmc
cmp
xor
repz
enter
jne
jbe
mov
test
and
push
ret
cmp
or
jno
xchg
cltd
push
daa
cltd
sahf
testl
xchg
enter
lcall
ds
cmpsb
das
sub
xor
insl
jmp
out
jg
scas
inc
jo
cmp
enter
decl
jb
push
cmpsb
pop
scas
loopne
adc
test
in
inc
mov
out
lret
push
enter
or
push
jo
in
xor
mov
enter
and
jns
cmp
sub
or
pop
sub
shr
pop
enter
sahf
add
xchg
sbb
ljmp
mov
out
popf
jmp
imul
xorl
xchg
sbb
jo
jbe
rorl
je
or
inc
fcom
das
cmpsb
decl
inc
add
jmp
adc
lcall
xlat
xchg
adc
addr16
xor
lock
inc
xchg
nop
mov
sub
mov
int3
and
test
push
insb
cltd
add
aaa
mov
lea
push
daa
iret
incl
cmp
dec
mov
jbe
call
mov
adc
aam
and
lods
xor
mov
or
xchg
rcll
pop
cli
xchg
sbb
jae
ss
cmp
cmp
push
lcall
cmp
lds
jecxz
adc
hlt
fmul
xchg
xor
into
arpl
push
cli
out
jp
mov
pop
jmp
arpl
aaa
mov
xchg
and
or
sti
test
sbb
movsl
dec
test
mov
fnstsw
push
mov
fcmove
adc
mov
in
enter
fwait
cmp
fadd
add
aam
ja
outsb
push
clc
cmp
or
cmc
aam
and
pop
cwtl
sub
cs
icebp
push
ljmp
push
and
cwtl
jb
mov
mov
sbb
mov
leave
in
inc
or
clc
int
leave
sahf
leave
in
mov
jmp
xlat
jge
xlat
push
leave
xlat
roll
insb
in
sbb
dec
jb
mov
and
cmpsl
pop
cmc
test
jmp
int3
pop
std
mov
lods
clc
rolb
out
push
or
push
fsubs
jecxz
in
aam
xchg
stos
daa
enter
mov
fiadds
stos
popl
fsub
iret
cmpb
in
faddl
xor
adc
lods
and
lock
jo
mov
pop
pop
fwait
in
scas
jmp
enter
cld
pop
adcb
shlb
addl
cmpsl
mov
jmp
dec
bound
cmpl
nop
stos
or
test
mov
lods
inc
mov
cmp
cmp
ljmp
icebp
xchg
inc
lret
cmp
xor
aaa
and
xor
cmc
ficompl
bound
and
rcrb
push
fistl
int
je
push
ds
out
insb
dec
jmp
in
and
inc
sbb
inc
daa
andb
lahf
pop
mov
bound
sbb
or
push
sub
inc
pop
int
push
sti
jmp
fcomip
mov
mov
gs
inc
mov
pop
adc
or
mov
lea
cmp
xchg
sub
aas
std
insb
mov
xchg
out
stc
push
cwtl
pop
inc
daa
mov
cmc
add
mov
push
mov
adc
jg
mov
or
push
pop
shr
fs
jbe
jo
rclb
pop
aas
imul
inc
xor
push
lret
cmp
roll
insb
mov
outsb
xchg
roll
push
ret
cmp
push
xchg
int
repz
xorl
mov
adc
sub
xchg
iret
inc
sbb
push
ljmp
and
and
pop
dec
adc
out
xor
ret
cmp
xor
stc
sub
dec
adc
mov
mov
adc
pop
mov
jo
jmp
mov
ds
pop
lret
aam
lds
mov
sbb
mov
in
jo
xchg
rcrb
popf
std
cmp
push
pop
jb
scas
pop
mov
test
cltd
inc
loope
mov
pop
jecxz
dec
sbb
inc
mov
and
out
test
out
insb
mov
dec
mov
push
mov
mov
leave
lret
lds
imul
or
xchg
sti
sub
sub
mov
fisubs
bound
gs
xor
in
jmp
jns
lods
movsb
dec
inc
nop
test
xchg
lock
or
cmp
dec
leave
lret
addr16
in
adc
es
cmp
loopne
test
pop
jmp
nop
ja
mov
sub
dec
add
icebp
test
cmp
movsl
enter
pop
jne
in
clc
repz
jge
cmc
and
daa
push
scas
daa
mov
aam
adc
cmpsl
scas
or
repz
sti
stos
inc
xor
out
in
enter
dec
lret
xchg
sbb
rcrl
mov
cmpsb
cmp
mov
andl
inc
je
sbb
pop
xor
xor
lea
and
dec
or
in
jbe
xchg
or
mov
adc
adc
add
imul
add
xor
test
mov
xchg
in
imul
push
add
les
test
push
enter
daa
mov
mov
fdivl
arpl
pop
mov
sub
jae
pop
mov
mov
sub
lret
aas
imul
push
pop
add
adc
inc
xchg
frstor
js
lds
test
sbb
gs
gs
or
adc
cwtl
insb
scas
mov
fildl
jecxz
push
mov
inc
daa
clc
cwtl
jbe
ficoms
dec
fcoml
decb
shl
cmp
pop
in
mov
das
mov
stos
test
cmc
enter
push
jno
aam
or
cmp
aad
jo
sbb
cmp
mov
mov
inc
ficompl
pop
mov
or
ret
inc
sbb
pop
jbe
push
push
xor
cs
test
inc
inc
pushf
or
jg
jne
jp
stos
jp
add
mov
gs
shrl
push
imul
int3
fildl
in
jmp
leave
sti
inc
lods
dec
push
or
jbe
mov
xchg
sub
pusha
jg
repnz
in
dec
or
iret
leave
xor
jg
orb
push
cmp
xor
xchg
sbb
xor
sbb
das
cmovns
in
lods
rorb
stc
add
filds
push
mov
sbb
testb
mov
pop
popf
xchg
lods
push
mov
cwtl
lods
data16
and
sbb
pop
cwtl
push
sub
fsubs
scas
adcb
in
insb
or
int
jae
inc
ret
xchg
add
fidivl
repz
dec
fistpl
test
ja
outsb
cmp
xor
cmc
xor
lock
popf
arpl
fiadds
cmp
jo
testb
cmp
fadds
loopne
cmp
imul
mov
test
in
xor
mov
mov
sti
xchg
div
in
push
push
in
and
int
shlb
mov
adc
sbb
fwait
push
jmp
adc
dec
push
ficoms
js
cmp
adc
lahf
pop
call
ret
mov
leave
mov
fisubrs
xor
imul
xor
iret
fidivrl
test
xchg
mov
jmp
aas
jbe
inc
xor
xchg
data16
les
cmpsb
pop
cmc
movsl
xchg
daa
sbb
inc
inc
push
pop
or
subl
adc
cmpsb
enter
mov
fstpt
and
das
jne
jbe
bound
pushf
fsubrl
aam
out
xchg
enter
mov
movsb
mov
add
popf
lahf
push
mov
sub
shr
or
enter
lds
sbb
stc
or
shl
fcmovbe
out
out
inc
scas
ja
and
pop
repnz
ss
and
pop
jmp
mov
pop
cmp
mov
aas
mov
xchg
shl
mov
cmp
rorb
xor
ret
repz
pop
and
ds
mov
mov
dec
int
sub
lahf
test
inc
out
fstpl
xchg
ljmp
iret
add
cmp
movsb
push
roll
push
fcmovne
cmpsb
adc
xchg
ja
movsb
iret
pushf
test
add
int3
or
clc
push
aas
lret
lock
lahf
cmpsl
inc
js
out
jle
xor
cmpsl
lds
andl
push
mov
imul
jmp
mov
cli
adc
cmp
pusha
cmpsb
or
test
repz
cmp
js
aam
mov
rcrb
in
xchg
cmp
push
sbb
insl
sbb
or
insb
mov
jp
push
lea
aas
aam
loop
mov
xor
mov
or
mov
repnz
lods
ds
outsl
in
fs
ret
scas
push
mov
outsl
nop
add
inc
or
lea
mov
mov
or
inc
adc
loopne
add
adc
rcrb
or
sbb
inc
jmp
cltd
adc
cmp
pop
rcrb
gs
jne
fisttps
pusha
push
imul
adc
lea
lock
dec
adc
inc
lods
push
sub
push
add
add
dec
jae
gs
add
cmp
mov
push
pop
or
add
test
inc
adc
fcoms
shlb
adc
sbb
roll
fstl
push
pop
mov
lea
cld
xor
daa
mov
lds
inc
in
sbb
dec
lock
or
insl
cmp
jge
sbb
adc
jne
or
call
sbb
in
mov
shrl
add
test
out
adc
xchg
jns
jmp
dec
mov
mov
mov
xor
push
nop
pop
mov
adc
inc
add
and
inc
adc
mov
gs
adc
fisttpll
add
push
ja
lahf
xor
adc
jne
add
rcr
push
fstpl
or
pop
or
imul
lret
dec
clc
in
inc
add
jne
push
jne
push
mov
xchg
insb
pop
insb
insl
insb
pusha
add
jg
mov
in
sbb
mov
or
lea
loopne
push
jp
or
pop
movsl
dec
jo
fisttpll
test
adc
adc
movsl
movsl
fnsave
cmp
adc
test
adc
call
push
pop
inc
adc
cltd
dec
test
jne
adc
out
xchg
push
pop
push
test
imul
jnp
dec
gs
mov
js
add
or
sbb
cmpsb
add
mov
mov
movsl
sbb
xchg
adcl
cs
aaa
or
cmp
adc
es
pextrw
xchg
clc
sub
xchg
jmp
or
mov
subb
or
dec
mov
jno
out
jecxz
ds
es
pop
sahf
divb
mov
xchg
gs
gs
mov
clc
sahf
rcl
or
in
lret
enter
scas
cltd
push
xchg
and
sub
pop
mov
bound
nop
pop
lds
mov
jne
sbb
inc
imul
pop
out
out
out
mov
inc
inc
cmc
cmpsb
jns
add
add
xor
cmc
pusha
loop
shrl
lea
iret
push
repnz
int
aam
pop
xchg
cmpb
mov
loope
xor
repz
or
inc
mov
sub
lods
push
push
fcomi
test
imul
lea
loopne
xchg
scas
xor
ljmp
enter
lds
js
push
mov
je
xlat
mov
out
or
les
int
adc
cmp
adc
test
adc
adc
push
cmp
loope
fistpl
mov
popa
push
stos
lea
nop
jne
enter
notl
jle
mov
jg
cmc
inc
inc
out
mov
aas
in
clc
loope
fcompl
xchg
sbb
jne
xor
xor
jl
jle
in
or
lds
call
and
or
adc
pop
mov
or
pop
and
lret
mov
xchg
jne
mov
rorl
and
pop
cmc
loope
idivl
or
fwait
movsb
aaa
adc
cmp
insl
xor
inc
fimuls
pop
aaa
xchg
mov
hlt
adc
jle
inc
pushf
cmp
out
jl
test
and
outsb
or
pop
xchg
rorb
scas
shlb
lock
xchg
or
scas
add
loop
test
das
xchg
sub
or
inc
xor
pushf
sbb
rorl
jne
sbb
ljmp
rorl
mov
fildl
les
imul
jge
pop
xchg
pop
xchg
inc
test
lds
int3
xchg
mul
cmp
mov
mov
push
jno
mov
lds
or
incl
adc
adc
out
and
xor
pop
mov
aam
jbe
out
in
les
push
add
push
nop
xchg
divb
mov
cmp
ficoms
push
sub
mov
inc
addr16
fcmovnu
xor
aaa
push
jmp
out
add
jne
pop
fnstcw
imull
in
mov
and
daa
cmc
jecxz
addb
outsb
jno
sahf
out
aas
outsb
mov
in
out
fadd
mov
or
in
loop
or
loope
jae
sbb
dec
cwtl
add
int3
punpcklwd
push
add
dec
jne
subl
cmp
popa
cmp
xor
sub
lret
push
popa
inc
and
repnz
xor
lds
and
jmp
lcall
mov
dec
cmc
push
fsubs
dec
cmp
adc
or
leave
mov
xchg
mov
pop
inc
montmul
cmpsb
xorl
shlb
mov
add
fptan
in
jmp
push
dec
pop
push
or
pop
repz
sub
cmp
popf
dec
pop
insb
add
pop
enter
gs
les
cmp
fildl
or
icebp
lahf
js
xchg
int3
inc
inc
mov
pushf
mov
or
mov
sub
negb
int3
sbb
clts
jp
std
loope
xlat
gs
into
shlb
cli
dec
mov
and
shrb
add
dec
jle
jp
enter
sub
shlb
out
inc
xchg
fidivl
and
scas
pusha
jg
and
sub
cmpsb
push
pop
add
sbb
and
xchg
aas
push
icebp
mov
imul
sbb
loop
dec
lret
jecxz
imull
cmp
nop
fistpl
pop
jp
ljmp
jne
test
cmp
inc
jb
jmp
imul
fcompl
cmpsl
mov
jge
xor
dec
push
daa
fldl
leave
jmp
sub
jns
mov
mov
mov
andb
scas
xchg
or
push
daa
inc
mov
iret
out
and
jmp
and
or
out
les
mov
adc
fs
lea
icebp
dec
sbb
fisubl
mov
ja
jecxz
mov
mov
mov
subb
shlb
data16
cmp
lea
mov
cmp
test
mov
dec
xchg
or
pop
mov
mov
pop
xlat
dec
decl
fmul
ja
mov
cmp
lods
rclb
jno
arpl
sbb
out
mov
lock
xchg
test
jge
inc
fmul
fistpll
mov
into
adc
cmp
insb
mov
push
shll
or
fisubs
sbb
scas
fcomps
pop
out
and
repnz
aad
std
scas
inc
js
sbb
loopne
cmc
out
lds
or
hlt
push
icebp
adc
add
pop
add
adc
ja
jne
inc
lds
mov
in
movsl
lret
test
rol
sahf
repnz
mov
out
pop
or
daa
fidivrl
into
xor
mov
sbb
or
jge
push
pop
inc
in
cmp
lods
imul
jge
inc
cs
loopne
cs
adc
nop
int3
cmc
cmc
add
negb
adcb
jno
mov
mov
sub
and
movsb
clc
cltd
push
pop
pop
sub
jle
mov
cmc
mov
or
call
inc
inc
arpl
les
dec
xor
je
xchg
lea
push
mov
pop
dec
pop
lds
stos
mov
insb
clc
or
shl
loope
mov
pop
cmp
mov
and
dec
add
xchg
sbb
test
out
and
fcomps
in
in
jae
pop
ljmp
cmp
in
or
mov
out
push
insl
pop
fcoms
daa
inc
scas
pop
xchg
dec
xchg
mov
mov
adc
mov
cmc
mov
mov
repnz
push
inc
aaa
insl
nop
hlt
movsl
mov
add
mov
sbb
sbb
lahf
xchg
cld
repz
sbb
push
and
js
pushf
idivl
rolb
in
mov
xchg
sbb
add
jp
pop
jne
dec
imul
add
cltd
jg
xchg
aaa
stos
or
push
add
popf
mov
ja
pop
out
pop
jmp
dec
dec
loope
ss
xor
pop
popa
cmc
sbb
imul
cwtl
mov
mov
jmp
push
xchg
inc
add
imul
lret
jmp
popa
mov
cmc
inc
dec
xor
or
notl
and
mov
ror
lcall
mov
xchg
push
pop
mov
lock
mov
subb
pop
jno
shlb
dec
adc
pop
mov
mov
lds
mull
cmp
push
mov
xor
scas
into
aas
and
fcoms
lret
ret
sbb
push
into
cmp
cld
xchg
mov
fcmovbe
sbb
daa
dec
adc
pop
xlat
scas
jae
shrl
lret
add
mov
cmp
testb
aas
enter
imul
mov
jne
xor
daa
movsl
xchg
and
mov
ret
inc
and
std
insb
notb
push
fxch
pop
push
or
and
mov
andb
les
cmpsl
loopne
xchg
push
lahf
sahf
out
enter
cmp
int3
or
shl
lock
cwtl
inc
lds
dec
sub
fisubl
adc
out
icebp
pusha
xchg
add
aam
cmpsb
outsl
loopne
sub
in
jb
in
nop
outsl
aam
scas
mov
ret
sahf
xorl
cmp
push
test
sub
xchg
fadds
clc
lods
xor
push
popf
mov
mov
pop
enter
cmc
ss
fidivrl
mov
pushf
testl
sbb
cwtl
dec
jo
stos
sub
jl
inc
jecxz
ljmp
ljmp
cmc
pop
lds
push
in
cmp
repnz
pop
into
cltd
lods
cmp
mov
adc
sub
xchg
in
in
std
pop
shl
push
dec
enter
fcmovu
fwait
xchg
mov
loop
inc
outsl
repnz
arpl
mov
pusha
add
jecxz
pop
xor
int
dec
sbb
enter
push
in
push
enter
daa
gs
xchg
or
and
xchg
test
sub
or
enter
test
xchg
int
rolb
pop
arpl
cmp
mov
mov
mov
loop
fwait
sbb
sahf
adc
test
inc
or
jmp
push
daa
dec
lods
sbb
outsl
mov
sbb
negb
mov
or
pop
loope
add
pop
sahf
lret
xor
add
push
sbb
pop
pop
mov
cltd
and
cld
ds
les
cmp
dec
repz
jmp
xchg
jbe
mov
rcl
leave
push
loope
leave
dec
or
cs
mov
loope
xchg
push
xor
and
rorb
sbb
loopne
inc
sub
xor
test
lock
xchg
int3
cli
sti
addb
lret
std
hlt
imul
xor
cmp
push
lods
pop
daa
adc
xor
insl
es
sbb
mov
lods
mov
and
enter
loop
shll
mov
xchg
cltd
and
lds
xchg
mov
repz
rcrl
push
aas
cld
je
push
pop
imul
pop
add
pop
gs
pop
sbb
scas
xchg
int
cmpsb
loope
xchg
movsb
in
aad
jnp
shlb
arpl
and
test
movsb
or
mov
lcall
in
movsl
stc
test
mov
je
nop
mov
add
nop
pop
mov
xor
cmp
into
fdivs
and
xchg
mov
lea
stc
xchg
xchg
add
mov
xchg
jns
add
int
mov
dec
lahf
out
daa
jg
aam
movsb
jne
jl
sbbb
inc
hlt
dec
insb
pushf
nop
dec
cmp
mov
push
mov
pop
add
jne
sarb
inc
aas
cmc
testb
xlat
std
add
nop
or
in
das
addr16
aas
in
mov
xchg
pop
scas
in
push
cmp
je
mov
lahf
xlat
scas
inc
lods
xchg
aas
fistpl
pextrw
adc
subb
test
xchg
lods
int
push
sub
hlt
push
sbb
std
sbb
lea
and
mov
cld
test
in
std
nop
popa
sahf
jmp
sbb
add
dec
sbb
mov
push
inc
repnz
out
ljmp
lea
out
popf
int3
push
daa
add
in
add
dec
out
cmpsb
in
adc
lahf
xor
leave
stc
out
fldcw
add
stos
dec
add
mov
inc
notb
lock
and
xchg
or
or
out
xchg
push
aad
sbb
les
fists
sub
bound
mov
jge
clc
sub
and
adc
mov
inc
or
pop
mov
fwait
mov
cld
push
mov
jo
cmp
sub
cwtl
mov
adc
icebp
cmp
fnstsw
inc
imul
repz
imul
fwait
dec
and
lret
nop
push
lds
mov
jp
insl
cltd
adc
jp
pop
pop
in
out
scas
bound
cltd
movsb
sub
mov
inc
sbb
add
ss
aad
push
push
enter
out
pop
inc
lahf
sub
push
add
test
lock
lock
mov
popf
inc
movsl
cmc
mov
ss
push
enter
js
inc
ljmp
enter
adc
inc
mov
les
nop
repnz
int
push
push
lods
dec
stos
inc
xor
sub
mov
xchg
and
loop
jecxz
mov
cmc
inc
mov
lcall
test
nop
sbb
mov
xchg
cli
mov
adc
and
mov
inc
sbb
testl
mov
ljmp
in
jg
out
sub
mov
inc
sbb
ja
imul
jg
add
cltd
test
or
and
lahf
outsl
fmul
xor
mov
js
fidivrl
inc
inc
in
pop
sub
fwait
inc
hlt
nop
subb
xchg
add
push
adc
in
fsts
jnp
xor
lea
nopl
imul
mov
lret
in
push
and
into
push
inc
shl
les
jnp
inc
sahf
shll
leave
iret
inc
sbb
mov
push
xchg
jns
int
lgdtl
push
enter
inc
cltd
or
mov
fisttpl
sbb
or
push
sbb
lcall
call
dec
or
aas
stc
and
jl
jb
in
pop
xorb
jno
rorb
iret
jge
aas
cltd
std
pop
cwtl
cld
lahf
daa
pop
push
movsl
rcrb
sub
push
add
outsl
add
pop
pop
lcall
pop
imul
test
in
push
repnz
emms
fcmove
fsubl
add
push
fisttpl
ljmp
enter
jb
mov
cld
mov
sub
sbb
pop
adc
cmp
xor
scas
sbb
pop
mov
pop
jb
nop
jbe
mov
ljmp
or
test
popf
fmull
xor
test
xchg
stc
in
adc
xorl
scas
mov
aad
mov
add
adc
mov
jnp
hlt
nop
push
testl
pop
xchg
sbb
das
jg
add
lret
mov
or
adc
adc
imul
xor
push
mov
out
dec
and
inc
mov
mov
or
imul
js
out
push
das
fisttpl
jge
xor
insl
subb
push
mov
cwtl
fwait
xchg
repz
subb
mov
xchg
lcall
lahf
jle
flds
shrb
sbb
pop
or
or
fldt
dec
mov
fstpl
data16
sbb
xchg
push
stos
in
push
ss
mov
jo
push
jmp
lods
xor
pusha
aaa
cmp
mov
xor
pop
or
enter
jg
cmp
rorb
imul
cmp
out
js
lds
dec
or
xor
aam
push
fsubr
push
xor
jns
test
push
jo
in
mov
call
push
in
sbb
jge
aas
mov
inc
jae
dec
or
test
adc
add
fs
mov
imul
pop
adc
lods
fbstp
push
mov
dec
mov
fiaddl
mov
daa
adc
insb
adc
ror
movsl
mov
and
mov
ret
and
sub
inc
inc
lods
andnps
jne
mov
aaa
nop
imul
cmp
jmp
push
push
dec
mov
mov
fadd
in
push
popa
fsubrp
xor
jecxz
into
jge
nop
xor
out
xor
mov
jge
cmpsl
jg
imul
dec
adc
sub
rorl
or
notl
popa
mov
js
inc
das
mov
push
push
lcall
outsb
inc
psubsb
imul
dec
ss
cmp
out
xchg
inc
icebp
pop
ret
and
or
movsb
mov
pop
sbb
mov
pop
sub
fstps
xchg
jne
xor
push
aad
dec
xor
dec
notl
mull
rorb
cmp
pop
cmp
pop
enter
bound
and
ret
js
popf
enter
or
cmp
bound
add
xchg
repnz
lds
mov
mov
or
subb
jle
popa
es
sbb
repz
adc
push
cltd
push
cmpsl
mov
sahf
orl
adc
xor
int3
sbb
sub
and
int
lcall
ss
rcr
jbe
fwait
push
mov
push
int
scas
sbb
imul
jmp
push
pop
out
xchg
sbb
sbbb
ss
out
mov
mov
xchg
and
dec
aas
insl
mov
and
pop
cmp
test
outsb
xchg
jne
jge
shll
imul
stos
mov
loop
test
pusha
bnd
inc
adc
imul
pop
dec
iret
std
mov
add
sub
fisubrs
jmp
jg
cld
imul
inc
out
xor
test
add
and
fs
cli
das
repnz
sbb
sti
popa
sbb
mov
sub
and
sbb
ror
push
mov
call
rorb
inc
shll
cmp
fisubl
stos
sub
xchg
nopl
sbb
add
lds
add
sub
jecxz
les
hlt
push
push
jnp
lret
clc
in
adc
jmp
cs
popa
enter
cld
cmp
adc
jmp
adc
xorl
fs
adc
shlb
sbb
fidivrl
mov
dec
aas
and
mov
sahf
pop
je
sbbb
imul
push
cmp
shl
cmc
xchg
inc
lret
and
repnz
les
jg
cmp
pop
xchg
loope
mov
or
add
xchg
out
push
push
test
icebp
adc
mov
xor
aam
test
inc
loop
cmp
popf
cmp
sub
jbe
push
int
push
fisubl
adc
adc
call
pop
sub
pop
push
testl
fmul
loope
inc
lcall
in
loope
in
pop
dec
lds
sbb
mov
xor
mov
lea
fiaddl
pop
pushf
and
cmp
mov
cmp
mov
out
sub
mov
sub
fs
jae
mov
popa
insl
in
clc
mov
push
ret
sbb
push
mov
aaa
xor
enter
dec
loopne
test
hlt
data16
mov
xor
movsl
fwait
and
lock
mov
mov
pop
adc
mov
enter
arpl
leave
mov
adc
inc
repz
and
xor
aaa
fiaddl
loopne
in
test
int3
add
insb
inc
or
xor
call
inc
mov
in
lods
popa
xor
dec
adcb
outsl
cmp
dec
movsb
push
cmp
mov
scas
mov
and
mov
xchg
int
in
add
cmp
add
lods
mov
and
add
fs
fiadds
mov
decl
int3
loopne
mov
mov
fisubs
cmp
sub
les
sahf
inc
xchg
add
lds
pushf
xor
cmp
jge
pop
cli
test
lock
pop
xchg
xchg
fimull
in
or
ds
xchg
dec
and
cwtl
dec
pop
lods
sub
cmp
xchg
enter
and
test
jno
sbb
outsb
fcomip
jmp
mov
gs
mov
add
ret
mov
mov
or
imul
cmpb
xor
dec
imul
in
xor
daa
xchg
dec
jmp
les
in
jne
fmull
add
cmp
pop
scas
sbb
jg
scas
mov
jl
loope
mov
test
cmp
pop
push
out
add
cmp
inc
mov
fdivrs
dec
ret
loopne
enter
and
gs
adc
test
lret
xor
lods
inc
repnz
mov
add
adc
aad
daa
xorb
add
dec
push
arpl
or
mov
popa
dec
int3
adc
fimuls
and
outsb
sbb
dec
lds
sbb
rclb
xchg
lods
xchg
sbbb
inc
hlt
in
fxch
andl
and
popf
roll
shll
push
int
cmpsb
pop
jno
push
lcall
in
jns
fidivs
notb
dec
pop
jae
cmp
jecxz
movsl
push
or
jne
xor
add
lods
les
loope
fildl
adc
ret
cmp
daa
ss
leave
in
in
jle
add
lahf
adc
cmc
in
jbe
lret
mov
pushf
lods
aaa
jno
jg
imul
loope
nop
push
mov
jmp
inc
dec
in
addl
cmp
dec
je
in
rcll
adc
mov
insl
or
std
into
push
daa
adc
out
or
mov
and
out
test
inc
cs
test
test
int3
insb
mov
enter
push
ja
test
mov
xor
dec
mov
arpl
mov
test
mov
push
adc
pop
inc
cmp
mov
in
mov
cltd
adc
mov
jo
dec
popa
fnstcw
mov
jo
pushf
push
jge
pop
sbb
inc
add
aam
lret
data16
jnp
lds
es
mov
enter
icebp
pop
lahf
or
xchg
ljmp
dec
pop
aas
inc
inc
sbb
pop
repz
xchg
cmpb
cwtl
test
in
dec
or
stos
or
adc
out
cld
dec
dec
cmp
lds
jl
sbb
cmc
pop
cs
jmp
add
in
sub
sti
cmp
sub
inc
ljmp
add
ds
xor
mull
dec
andb
sbb
pop
or
mov
cmpl
aaa
mov
cmp
fidivl
das
xchg
push
scas
call
fildl
mov
fwait
mov
in
gs
inc
shlb
mov
and
and
and
out
dec
stc
sub
dec
test
aaa
lds
cli
insb
inc
inc
fidivl
jns
and
xchg
in
iret
mov
sbb
add
lret
shlb
add
and
cwtl
or
psubsb
enter
or
ficoml
xor
rcrb
xor
ss
sti
sub
fiaddl
or
repnz
mov
jge
mov
xor
daa
lcall
data16
lods
add
mov
lods
sarl
pop
sub
push
in
xchg
test
movsl
icebp
pop
dec
sbb
js
dec
cmp
insb
gs
mov
jge
arpl
int
aad
mov
mov
cmpsl
jbe
sbb
nop
xor
adc
push
movsl
add
bound
out
rclb
fnsave
push
test
fs
jg
inc
or
inc
shlb
pop
pop
popa
dec
push
scas
pop
daa
repnz
sbb
or
idivl
pop
fwait
mov
adc
cmp
adc
push
jae
cmp
sub
adc
pop
insl
test
sub
inc
jmp
mov
pop
imul
leave
push
mov
fnstenv
sahf
ja
xchg
push
popf
rol
add
mov
test
sub
mov
enter
testl
fucomp
pop
dec
mov
adc
xchg
adc
popa
fstl
pop
js
add
mov
or
jnp
lods
jo
mov
dec
lds
xchg
mov
test
jmp
jno
cmp
sbb
repnz
add
jg
movsl
adc
es
adc
test
sbb
aad
push
mov
adc
dec
dec
fucomip
xlat
xchg
jg
dec
jne
lods
test
push
dec
enter
in
jge
dec
inc
adc
pop
and
sarl
pop
int3
shrl
cmp
cli
add
pop
and
jne
adc
lods
aad
fnsave
adc
push
int
mov
lea
add
movsl
cwtl
clc
push
sbb
adc
aad
adc
push
icebp
pusha
rorb
pop
int3
or
sbb
xlat
xchg
lods
add
insl
sbb
mov
sbb
mov
dec
dec
mov
aas
add
pop
cwtl
xor
loopne
or
jbe
jp
andnps
sbb
jge
das
jl
pop
mov
add
add
enter
sbb
rclb
xor
insl
pusha
and
adc
dec
inc
jo
or
aas
pusha
jl
or
roll
dec
fsubrs
and
test
add
or
fnstsw
fldl
mov
mov
rcll
inc
adc
lods
insl
outsb
adc
loope
lds
mov
aam
mov
lds
pop
inc
std
adc
add
jo
cwtl
jne
xchg
dec
or
mov
mov
dec
push
jne
pusha
sub
adc
dec
out
movsl
add
pop
sbb
int3
shlb
mov
pusha
enter
mov
fnsave
lret
lods
push
or
call
lea
jne
adcb
pop
inc
js
lds
fucom
imull
test
mov
jo
clc
pop
mov
fistps
imul
sub
or
cld
cmp
out
xorb
aam
push
imul
pop
test
rol
cld
push
pop
inc
mov
stos
mov
cwtl
arpl
andb
shl
dec
pop
xor
or
dec
bnd
in
mov
sub
fmull
rolb
out
enter
pop
xor
jg
ficompl
nop
jb
fstps
jnp
push
int
dec
test
mov
mov
data16
push
mov
mov
dec
sbb
sbb
enter
mov
call
movsl
lcall
push
pop
mov
inc
mov
inc
push
repnz
mov
add
dec
xchg
pop
mov
jl
in
out
dec
sub
pop
sar
loop
or
cmp
push
lds
movsl
push
call
aam
jae
push
stos
xor
pop
push
andl
push
lret
ret
xor
aaa
xor
push
push
push
mov
aad
mov
and
jecxz
cmp
mov
xorb
iret
cmp
loopne
pop
adc
pop
icebp
xchg
mov
lahf
ret
into
shll
lock
movsb
loopne
dec
iret
rclb
adc
cmc
pop
imul
repz
sub
pushl
push
iret
add
clc
add
bound
adc
aaa
adc
repz
in
aaa
lds
icebp
cmp
push
dec
stos
out
into
or
or
std
jmp
xchg
and
inc
xor
add
ljmp
mov
or
inc
repnz
sbb
mov
fisttpll
nop
xchg
xor
imul
test
xchg
into
mov
jp
push
imul
and
lds
cmp
push
daa
mov
sub
mov
loope
stos
sbb
mov
enter
pop
push
xor
sbb
xchg
aas
inc
fldt
enter
cli
mov
push
mov
movsb
mov
xchg
cmp
dec
aaa
adc
sbb
sbb
or
hlt
out
push
lret
mov
cmp
cld
les
insb
aas
notl
mov
inc
enter
lds
aad
call
or
enter
loop
mov
xor
popf
push
imul
lods
pop
insb
and
cmpsb
js
adcb
mov
out
sub
testb
scas
inc
inc
das
dec
out
mov
sbb
std
mov
xor
jecxz
pop
fisubrl
mov
sbb
jne
stc
mov
mov
sbbb
cmc
xchg
stos
push
sbb
dec
and
lds
pshufb
adc
mov
jne
xorb
mov
out
pop
imul
or
pop
adc
push
and
mov
sub
nop
mov
popa
cmp
add
dec
clc
out
iret
pop
ljmp
xchg
push
ljmp
aas
xor
icebp
add
ja
sbb
repz
xchg
movsl
xor
das
adc
mov
inc
cmp
data16
sbb
pop
pop
push
jecxz
push
add
dec
pusha
in
jmp
cmp
mov
or
out
inc
and
mov
add
pop
ret
ljmp
inc
loope
xor
and
xchg
mov
subl
fbld
fists
es
or
imul
push
and
jp
or
fimull
lahf
repz
jecxz
push
add
pusha
es
mov
sub
mov
insb
out
add
fstl
pusha
jns
mov
test
lods
fists
xor
lret
push
in
inc
aam
repz
insl
cmp
test
mov
mov
iret
leave
jmp
fcompl
jnp
mov
pextrw
add
jge
mov
mov
inc
adc
xor
jmp
sub
or
pop
mov
loop
jecxz
jbe
int
andb
push
enter
mov
outsb
ficoml
fwait
shlb
pop
and
je
add
adc
pop
clc
pusha
inc
into
ss
push
ljmp
adc
popa
insl
mov
mov
das
daa
dec
ljmp
incl
insb
mov
jne
cmc
lds
sub
loopne
addb
out
in
cmp
hlt
sahf
and
sub
cmp
xor
adc
jns
and
add
jo
dec
mov
lock
mov
mov
out
sub
add
or
rolb
and
pop
insb
sbb
xchg
bound
jg
rorb
test
imul
sbb
mov
sarb
pop
xchg
movsl
mov
dec
pop
ja
adc
out
jmp
add
jne
lds
nop
adcl
jge
add
fwait
sub
test
pop
std
jae
in
fwait
icebp
fisubs
mov
test
pop
mov
xchg
mov
sti
mov
add
sbb
jmp
and
pop
or
pop
sub
into
pop
sub
jae
flds
mov
enter
and
or
fcoms
cwtl
xor
mov
adc
and
push
xchg
fdivl
pop
push
jne
enter
sbb
xchg
enter
mov
lea
lods
ficompl
lahf
js
push
pop
test
push
in
push
cwtl
daa
lcall
jecxz
cmp
jmp
fs
mov
jecxz
test
enter
ss
jl
xchg
bound
mov
adc
dec
push
lds
sbb
pop
mov
repz
cmp
push
pusha
loopne
mov
adc
outsl
sbb
dec
enter
ljmp
mov
dec
xchg
jle
pop
sar
std
fisttps
sbb
add
sti
ret
lea
inc
jecxz
faddl
inc
idiv
das
sbb
push
xchg
xchg
pop
adc
cmpsl
fwait
mov
adc
xor
mov
test
pop
movsl
fisubrs
je
and
jecxz
pop
or
xor
aaa
cmp
pushf
cmp
mov
andl
fmul
or
adc
test
leave
adc
add
jo
out
push
mov
stos
lods
xchg
mov
and
add
mov
or
in
push
imul
or
pop
pusha
mov
mov
sbb
dec
loope
mov
outsl
jl
sbb
inc
mov
out
pop
xchg
movsl
mov
sbb
lods
adc
and
mov
cmp
mov
xor
cmpsl
sub
loope
inc
cmp
pop
fmuls
or
imul
push
out
insl
xor
dec
popf
sbb
xchg
ret
leave
add
add
enter
add
cmp
mov
xchg
lds
xchg
popa
mov
adcb
dec
jmp
pop
in
dec
sbb
mov
mov
lods
pushf
jmp
cmc
icebp
ljmp
or
sub
je
ret
cmp
test
ljmp
mov
les
popf
add
daa
popf
imul
test
repnz
sbb
jnp
dec
sub
enter
lods
push
jne
fiaddl
xor
dec
mov
mov
mov
sbb
dec
sbb
push
sbb
mov
test
sbb
xor
cld
jns
xchg
push
cmp
icebp
imul
je
lret
dec
in
pop
cmpsb
adc
push
inc
lret
sub
jg
sbb
cmp
mov
out
rclb
fnstsw
add
inc
lods
xchg
ljmp
mov
pop
cmc
adc
fdivr
inc
dec
pop
mov
sbb
aaa
push
cmpsb
dec
inc
mov
mov
mov
les
mov
fiaddl
out
imulb
xchg
imul
cmc
shlb
push
leave
xchg
stc
xor
int3
lock
fsubl
addr16
cmp
daa
pusha
mov
jge
js
nop
cmpsb
pop
lock
dec
mov
out
mov
ficomps
pop
cmpsl
jne
push
and
sub
gs
in
lret
pop
xor
add
or
test
test
mov
scas
xchg
shll
sbb
aad
sbb
test
call
sbb
test
add
lock
mov
push
xchg
xchg
ds
enter
bound
jmp
popf
in
xchg
insb
pop
adc
add
mov
jecxz
cmp
pop
lcall
fcmovnu
xor
dec
mov
lock
mov
xchg
push
test
nop
lods
xchg
cmp
pop
std
sub
cmp
mov
ss
cmp
sbb
outsb
inc
pop
push
and
repz
xchg
jl
stc
and
cli
xor
mov
mov
and
rcl
in
fidivl
inc
daa
hlt
in
sbb
out
arpl
mov
dec
mov
out
sbb
mov
push
add
daa
outsb
pop
inc
jb
adc
cs
sub
ss
mov
xchg
call
inc
loopne
sbb
andl
dec
out
in
pop
push
inc
test
mov
lds
cld
scas
pop
sbb
cmpsl
mov
cmc
mov
sbb
daa
push
shl
pushf
in
cmp
icebp
fdivrl
inc
test
fidivrs
movb
push
push
dec
pop
mov
jge
mov
xor
or
inc
repnz
jge
fcmovbe
cltd
ds
sahf
sbbb
and
cmc
lret
loope
dec
xchg
fs
mov
add
daa
jo
pminub
icebp
nop
pusha
cmp
push
js
push
mov
in
repz
js
mov
aad
adc
cmp
or
lock
adc
imul
test
repnz
sahf
sbb
adc
pop
add
xor
add
imul
jmp
sarl
out
mov
int
dec
push
test
out
add
fs
push
jp
pop
out
adcb
sub
lds
push
pop
mov
cs
stc
negb
call
lret
arpl
or
test
out
lahf
xchg
lahf
sbb
fidivl
or
rorl
shrb
or
jns
rorb
push
ljmp
mov
out
icebp
cmp
imul
add
jbe
sbb
repnz
add
shl
adc
push
dec
jg
ds
in
add
mov
mov
les
adc
cltd
xchg
imul
test
out
sti
pop
addr16
sub
cmp
dec
mov
cmp
daa
enter
xchg
ljmp
imul
add
fimull
xchg
dec
rclb
dec
sub
mov
fiadds
aaa
arpl
lock
sbb
sbbl
jg
xchg
js
xor
lods
insb
icebp
shll
dec
or
daa
push
add
jecxz
outsl
push
jmp
sub
sub
lds
push
es
cltd
add
mov
fldcw
lea
add
xor
cmp
popa
sbb
popa
push
inc
popf
inc
inc
and
dec
and
xchg
fwait
lahf
lcall
jge
lcall
fdivl
cmc
mov
lods
int
cwtl
in
cmp
cmp
fcompl
jg
les
or
mov
insb
fisubrl
pop
jne
loope
adc
or
dec
aaa
push
enter
mov
bound
movsl
lds
inc
or
enter
sub
bnd
jecxz
sub
dec
sbb
mov
sub
insb
imul
out
fisubs
mov
jecxz
or
ds
adc
icebp
or
and
mov
or
push
into
popa
sbb
xor
ja
mov
xchg
pop
fwait
inc
into
imul
mov
xchg
pop
xlat
loope
jmp
repz
jb
aad
pop
lahf
sbb
imul
dec
xchg
arpl
into
addl
js
out
inc
pop
jne
add
or
test
fistpll
in
data16
rorl
aas
adc
and
mov
pop
outsl
cmp
imul
adc
aam
and
xor
mov
pop
cmpb
or
or
add
xchg
fiaddl
std
mov
nop
hlt
stc
sbb
popf
jge
adcb
mov
xor
sbb
xchg
or
enter
add
cmpsl
xor
xabort
test
and
xor
ja
test
xor
pop
cmpsb
push
jns
inc
and
aaa
xchg
frstor
enter
cmc
jmp
test
cmp
or
in
mov
pop
xor
fisubl
std
sti
xor
mov
xchg
stos
cmp
xor
mov
adc
mov
scas
in
pop
add
pop
repz
arpl
call
comiss
dec
mov
scas
mov
dec
es
in
push
xor
ss
xchg
arpl
cmp
addr16
add
cmp
fldl
loopne
add
xor
cmp
mov
imul
sbb
cmovge
add
mov
xorl
es
jb
jmp
xor
out
and
push
jne
fidivl
mov
enter
sub
add
inc
hlt
addb
jne
cmp
push
xchg
fadds
sbb
enter
call
pop
insb
adc
sub
mov
mov
test
cwtl
out
sub
imul
mov
cmp
sbb
jl
out
aaa
lret
daa
in
enter
in
lcall
clc
lds
xchg
std
pop
loopne
add
or
mov
add
xor
fisubl
cwtl
sub
enter
or
out
xchg
mov
dec
sbb
sahf
lods
lahf
loop
out
std
xchg
js
hlt
cmp
dec
adc
outsb
imul
popa
scas
insl
loopne
or
testb
xchg
idivl
imul
mov
sbb
pop
mov
sbb
add
clc
or
add
and
out
test
test
dec
cmp
sbb
int3
dec
cmp
jecxz
outsb
or
sbb
push
test
pop
out
imul
movsl
and
adc
xor
scas
push
jecxz
and
pop
mov
lds
aam
pop
inc
call
pop
clc
es
or
push
shl
jmp
mov
jge
repz
jo
xor
shr
mov
pusha
and
into
ficompl
cmp
loopne
and
test
add
out
pop
mov
adc
int3
inc
sub
popa
enter
inc
xorl
and
test
inc
cmp
pop
push
sub
adc
clc
sub
adc
pusha
fisubl
jg
sbb
jo
ss
push
push
lds
loope
or
shll
sub
in
mov
sar
lds
and
jae
nop
mov
movsl
push
movl
fidivl
or
clc
push
or
lds
mov
mov
aam
inc
imul
fiaddl
dec
jmp
sbb
pop
adc
js
loopne
mov
movsb
fs
popl
pop
cltd
stos
inc
lret
push
inc
lahf
dec
xchg
lods
mov
addb
inc
lcall
add
mov
or
add
add
arpl
out
icebp
hlt
mov
fs
inc
notb
in
cwtl
sbb
shl
in
adc
out
stc
mov
pop
iret
add
ja
loopne
ja
push
fmull
jmp
out
jecxz
lds
cmp
pop
xchg
inc
pop
and
pop
pop
int3
gs
lods
or
adc
push
mulb
pop
cmp
ja
push
jae
inc
aam
outsb
int
sub
fwait
cmp
and
imul
jp
lods
pop
in
sahf
mov
aam
add
lds
push
movsl
xchg
pop
loope
movsl
in
xchg
cld
es
xchg
lods
out
loope
rcll
dec
cmpsb
lret
mov
add
and
push
ficoms
inc
ja
ret
sbb
in
scas
push
js
ds
fstps
cmp
cmpsl
movsbl
or
cwtl
scas
sub
or
inc
sti
or
push
jl
or
faddl
add
push
inc
leave
lret
hlt
call
lock
cmp
ret
adcl
pop
jae
shll
and
cmp
inc
cmc
sub
fwait
jecxz
pop
or
xchg
mov
sbb
repz
pop
mov
imul
mov
cmc
adc
loope
pop
in
xor
xor
jne
out
das
or
jo
bswap
loop
xor
push
cld
cmp
lds
cwtl
cmp
adc
xchg
mov
xchg
pop
int
aam
scas
repnz
mov
cmp
lea
adc
jb
loopnew
arpl
xchg
xchg
mov
cltd
loop
pop
xor
adc
xchg
pop
addr16
inc
and
push
dec
test
mov
loope
mov
sub
sbb
data16
xor
mov
mov
lcall
or
pushf
sbb
daa
push
cmp
popf
or
lcall
xor
je
out
mov
test
ficoms
add
jne
xchg
mov
push
mov
push
imul
cmpsl
imul
out
jge
aad
cltd
adc
fnstsw
popf
call
jl
and
lea
jne
lods
fistl
dec
sbb
lods
mov
mov
sbb
xchg
xor
push
jl
test
lret
fdivs
jmp
sarb
pop
das
mov
and
mov
jb
add
incb
mov
js
jbe
shl
or
mov
fsubl
push
ss
fsubl
fcompl
jecxz
pop
push
call
inc
sbb
cmc
int
mov
sub
add
fadd
jmp
jge
sub
mov
xchg
add
fadds
mov
outsl
pop
int3
stc
xchg
push
push
inc
or
add
mov
pop
enter
push
enter
pop
cmp
push
std
hlt
mov
cwtl
idivb
push
inc
push
sbb
mov
mov
cltd
or
fcmovbe
incl
fwait
and
xor
sub
adc
adc
dec
mov
xor
or
icebp
in
movb
jne
wbinvd
jb
mov
lret
xchg
cli
xor
pop
adc
adc
pushf
and
xchg
cld
pop
cmpsl
pop
in
xor
xor
push
repnz
pop
mov
dec
das
xor
mov
jne
daa
dec
push
lods
xor
dec
dec
aam
cltd
outsl
enter
xchg
insb
out
or
cmc
arpl
mov
cmpsl
adc
test
outsb
sti
fprem1
ret
insl
ficoml
cld
jne
sahf
daa
pop
test
adc
mov
xor
sti
popf
ret
out
pop
out
add
fidivrs
sub
jbe
mov
cwtl
out
stos
in
int3
push
cs
push
push
mov
cmp
cltd
leave
cmp
pop
aaa
mov
sub
xor
jno
lgs
push
jecxz
popf
fdiv
pop
enter
or
in
adc
fbstp
and
and
jae
xchg
sbb
mov
mov
pop
loopne
fisubl
lcall
jle
push
je
xor
stos
add
mov
and
ficompl
int3
out
mov
add
scas
call
sahf
push
shll
xchg
ss
inc
stc
cmp
lahf
pop
mov
sbb
out
sub
das
pop
out
push
or
mov
jecxz
mov
pop
imul
aam
sbb
jecxz
lds
sbb
mov
movsb
mov
jecxz
aaa
jbe
sub
fisubl
sbb
popf
push
xchg
jecxz
sarb
movsl
data16
mov
or
in
mov
insl
cmp
jmp
jge
lret
test
pop
add
adc
fdivrl
add
xor
pop
setns
cmp
popl
rcr
push
mov
jmp
add
mov
decb
push
cmp
loop
mov
in
pop
push
pop
jno
scas
xor
jne
popf
std
les
gs
loopne
cwtl
adc
sub
push
ljmp
sahf
jb
jg
repnz
imul
in
js
cltd
jb
xchg
sbb
inc
in
push
pop
push
sub
push
inc
jmp
add
inc
cmpsl
push
cmovae
xor
addr16
or
jae
push
xor
mov
lret
in
dec
mul
cmc
aaa
mov
test
or
aam
inc
les
imul
mov
test
loope
fcomip
sbb
xchg
movsl
and
lret
scas
enter
testl
sub
pextrw
sub
pop
scas
cmp
cltd
mov
aam
lcall
mov
out
loope
sub
lods
push
mov
enter
xor
adc
out
cmc
push
jne
cltd
fmull
xchg
in
pop
jo
lcall
cmp
add
es
add
inc
pop
push
movsl
dec
sbb
pop
sub
or
cmp
mov
fadds
xchg
test
cmc
add
testb
enter
add
and
mov
inc
or
add
sbb
jne
push
test
mov
leave
mov
sub
or
imul
lret
xlat
adc
ret
movsb
push
push
ficoml
cmp
sub
add
ret
sti
jns
or
mov
jle
add
and
xchg
dec
mov
jns
shll
jmp
lds
popa
test
jmp
ljmp
jle
push
pop
movlps
adc
mov
inc
push
iret
rep
xor
jb
push
pop
push
imul
sbb
xchg
push
inc
int
int3
mov
xchg
outsl
push
adc
loopne
cs
popa
shlb
and
ds
mov
int3
outsb
inc
pop
xor
jb
add
subl
icebp
dec
cmp
or
sbbl
add
adc
imulb
fdivrs
test
adc
mov
jb
loopne
jns
jmp
repnz
neg
mov
add
jge
and
xchg
sti
pop
sbb
ds
cmp
cmc
enter
push
xor
jmp
cmpsb
jmp
movsl
adc
lds
adc
loopne
hlt
adc
lds
dec
iret
not
push
mov
pop
enter
xchg
mov
cmpsb
fildll
int3
and
cmpsl
mov
mov
mov
add
push
dec
adc
fisubl
xchg
mov
aam
scas
cli
and
mov
das
loopne
sbb
nop
inc
cmp
insl
cmp
or
in
nop
adc
fisubrl
cmpsl
push
lds
scas
mov
dec
jae
pop
inc
negb
mov
pusha
xchg
pop
repz
cltd
movsl
mov
inc
insl
andl
sbb
mov
mov
insb
or
test
shlb
cltd
add
cwtl
js
test
enter
xchg
pop
outsl
lahf
jnp
mov
fcmovnu
jne
lret
bound
xchg
jae
shl
or
push
push
cltd
mov
stos
lahf
push
push
in
popa
call
dec
xchg
sti
clc
pop
add
xor
adc
cmp
dec
lods
lret
out
pop
sbb
nop
shll
cmc
lods
ljmp
inc
ret
in
fdivs
rorl
in
stos
jmp
push
stos
xor
add
push
jae
aam
cltd
scas
pavgw
div
rclb
cmp
scas
pop
gs
mov
out
gs
idivb
add
icebp
cmp
lds
push
jle
jp
sbb
daa
aam
or
dec
add
out
dec
into
push
adc
in
fdiv
pop
mov
lods
mov
pop
inc
aad
popa
scas
mov
movsl
and
loopne
mov
ljmp
and
add
pop
add
push
sbb
stc
xor
or
cwtl
and
mov
add
mov
inc
in
mov
and
dec
in
mull
push
mov
mov
popa
clc
inc
mov
scas
xchg
mov
mov
mov
imul
sbb
xchg
and
mov
daa
add
mov
repz
or
mov
inc
aaa
add
enter
or
rolb
push
and
fwait
jne
or
lds
repz
xchg
ds
insb
bound
jge
pop
mov
and
sbb
lea
rcl
sbb
cltd
jmp
call
fisttps
out
mov
imul
in
rcr
dec
int
es
fmul
push
out
lds
jle
call
push
shlb
mov
jp
leave
mov
jecxz
and
sti
mov
xchg
mov
mov
cli
popa
or
cs
gs
cmp
imul
mov
pop
sahf
lods
cmp
sub
aaa
ret
xor
out
inc
push
jmp
mov
mov
enter
cwtl
xor
or
leave
and
cmp
pop
outsl
dec
mov
clc
and
xchg
in
mov
or
xorb
pop
mov
dec
ret
pop
icebp
mov
xchg
leave
sub
fdivrs
roll
cmp
xor
xchg
daa
pop
or
in
cmp
aam
push
or
inc
scas
pushf
in
or
ficompl
pushf
inc
xchg
fnstenv
cmp
pop
enter
icebp
cmp
lcall
pop
cld
bswap
xchg
clc
push
shrb
fs
enter
lds
popa
outsb
fildll
sub
orb
add
popf
ret
js
mov
push
sbb
gs
in
sub
cwtl
xor
sti
daa
je
mov
xor
rorl
cmp
aas
cmc
sbb
sahf
mov
aad
pop
cmc
push
imul
or
ja
fidivrl
pop
push
sbb
dec
inc
jbe
xchg
mov
sub
mov
mov
adc
jno
scas
mov
push
pop
pushf
mov
aam
jmp
and
sub
xchg
insb
push
subb
fdivrs
push
jmp
or
mov
lret
aas
dec
lahf
inc
xchg
or
fsubs
xor
std
fstpl
mov
and
in
lds
sub
lcall
adc
add
jg
add
sub
jle
or
jnp
insb
rcrl
mov
outsb
decl
ror
jns
xor
shrb
inc
rcll
out
in
lock
ficompl
leave
jecxz
daa
sbb
pusha
push
mov
jmp
cltd
jae
lret
in
mov
push
enter
icebp
insb
cmp
mov
add
sbb
cltd
jmp
mov
jns
sub
imul
cmc
pop
in
cmp
pop
hlt
push
pop
lret
xchg
push
int
sbb
add
sbb
das
and
push
ror
ja
test
jmp
push
sti
cmp
arpl
dec
cmp
sbb
or
ficoml
mov
jns
cmc
lds
pop
mov
sbb
popf
sbb
mov
enter
dec
call
push
fiaddl
stos
push
push
push
pop
mov
or
xchg
sub
outsb
sbb
outsb
movsl
ljmp
xor
or
and
xchg
rol
push
inc
mov
adc
clc
xor
pop
push
add
int
jle
pop
lcall
in
add
add
mov
pusha
push
push
adc
mov
dec
std
and
repz
loopne
js
push
lods
lds
aas
cmp
sbb
xchg
xlat
bound
push
in
inc
lret
into
jnp
cmc
push
mov
dec
pusha
push
jg
outsl
jne
int
addl
cmp
fs
jbe
enter
inc
inc
or
outsb
mov
mov
cmp
and
jo
daa
out
decb
in
lods
add
ficoml
jecxz
xor
jg
xchg
jmp
lret
hlt
xor
push
test
xchg
mov
push
cld
cmc
push
mov
mov
xchg
ss
push
or
repz
sub
cwtl
loopne
adcb
lcall
inc
lea
int
mov
jno
or
xchg
mov
push
pop
pop
ja
cmc
push
enter
cmpsb
push
lret
out
sbb
imul
in
add
pushf
popf
jge
fdivr
xor
lds
mov
cwtl
aaa
mov
aam
pop
cltd
push
inc
mov
xchg
jmp
jo
pusha
adc
cmp
mov
add
mov
sub
in
movsl
jmp
sub
push
and
lods
xchg
jecxz
dec
imul
mov
xchg
mov
ljmp
mov
icebp
subb
cmp
int3
fwait
sbb
imul
mov
xor
and
inc
xor
inc
ss
fcomps
stos
and
addr16
dec
lret
int
sbb
mov
jb
std
cmp
daa
and
pop
cmp
je
std
pop
daa
or
pop
cmp
xchg
adc
in
mov
cmp
cwtl
in
std
mov
xchg
enter
out
mov
lahf
xchg
xor
sub
movsb
addr16
hlt
or
rcrb
cld
sti
xor
cmpl
inc
in
or
xchg
out
mov
cli
jecxz
jmp
sbb
test
cmp
dec
lea
loope
mov
xorl
lcall
jnp
subb
enter
cmp
sub
push
sbb
insb
push
cltd
ficoml
fcomps
mov
addr16
push
sbb
xor
test
loope
pop
test
enter
lock
hlt
adc
cmp
aam
dec
js
push
movsl
xchg
clc
pop
andb
ficoml
sti
or
lea
test
outsl
loope
jg
mov
sbb
inc
inc
mov
gs
daa
sbb
ficoml
bound
lds
scas
xchg
stos
mov
enter
mov
andl
test
sbb
xor
test
repnz
xchg
icebp
mov
lret
sbb
pop
cmp
js
adc
xchg
addr16
pop
cmp
sti
pop
lret
rcrl
cmp
mov
mov
mov
cmp
mov
ss
enter
cmpsb
insb
mov
ficoml
xchg
jne
outsl
xchg
lcall
push
les
aam
or
or
je
mov
add
fwait
rorl
jmp
nop
inc
repnz
mov
loop
lods
rol
jb
mov
mov
adc
cmp
and
jl
in
fidivs
adc
sbb
inc
out
xchg
iret
cld
sbb
fidivs
repz
das
cli
xchg
lea
mov
adc
rol
inc
and
mov
nop
fcmovb
dec
imul
cmp
push
daa
xchg
add
fcomps
pop
loopne
insb
xchg
xchg
out
push
scas
add
pop
fsts
push
inc
in
mov
push
cmp
pop
mov
dec
lds
and
xor
lea
insb
xchg
loope
xchg
inc
xchg
hlt
out
scas
pop
xchg
cmp
xchg
enter
enter
dec
pop
jl
fidivrl
mov
in
inc
addb
mov
xor
mov
adc
and
orl
push
mov
gs
fwait
inc
in
mov
mov
popw
cwtl
outsb
and
lock
adc
or
pop
lods
shlb
xor
shrb
xor
cmpb
mov
mov
inc
jmpw
pop
inc
or
sub
lds
lds
loopne
sub
fcomps
out
push
fidivrl
cmp
mov
lods
and
xchg
fisttps
fcoms
imul
push
aad
jb
movsl
daa
js
and
test
push
shlb
push
pop
cmc
imul
aas
inc
and
xrelease
dec
jp
push
cwtl
jnp
adc
clc
adc
in
cmp
dec
scas
and
movlps
add
xchg
adc
movsl
cmp
push
mov
push
pusha
mov
xchg
scas
mov
and
lods
mov
cli
sbbl
mov
addr16
jb
hlt
mov
negb
lea
pushf
push
call
cmp
lds
out
pop
daa
lods
and
and
repnz
sarl
xor
cwtl
lahf
scas
es
ret
bound
cmp
mov
insb
mov
aad
lret
xchg
fwait
mov
xchg
add
sub
roll
jecxz
out
mov
add
or
mov
push
jae
push
sbb
dec
cmp
jno
insl
or
inc
jne
xor
cvtpi2ps
scas
lret
mov
dec
cmp
sbb
outsl
hlt
in
fildl
into
imul
pop
bound
xchg
pop
lds
testl
inc
ror
sbb
add
mov
and
loop
andb
sti
and
sahf
fwait
sub
mov
sbb
jb
dec
mov
js
cli
pop
xor
push
jmp
lea
enter
sbb
pusha
fidivrl
les
imul
xor
lds
mov
movb
lret
push
testl
xor
std
mov
fimull
mov
pop
or
fiadds
mov
adc
leave
test
stc
fnstsw
inc
mov
lds
popa
out
mov
adc
inc
xchg
out
jns
in
stos
cwtl
scas
mov
pop
leave
int
in
mov
push
enter
int3
or
clc
dec
cld
cmpl
addb
pop
bound
loope
xor
ljmp
lock
push
lret
jne
movsl
ljmp
pop
jg
jo
push
call
mov
int3
pop
cmc
enter
test
ficoml
add
das
or
jne
outsb
mov
pop
into
nop
or
jo
ret
and
inc
repnz
rcr
mov
pop
inc
or
pop
paddsb
sub
lock
mov
pop
and
push
int
sbb
sbb
loope
push
insl
push
mov
lds
test
dec
stos
inc
arpl
cmp
aaa
test
call
je
push
xor
pop
xchg
jge
test
popf
sub
loopne
bound
dec
fisttpl
gs
dec
cwtl
insb
sbb
or
inc
pop
out
hlt
lret
xchg
adc
xchg
mov
pop
enter
and
mov
mov
inc
push
fdiv
push
aaa
int3
punpckhbw
addb
cli
loope
lret
imul
jae
or
dec
inc
outsl
and
cmp
push
push
je
sbbl
lret
daa
fists
es
daa
add
nop
xor
stos
scas
xor
push
cmpb
movsb
mov
pop
stc
or
cltd
jmp
nop
popf
fwait
in
xchg
cmp
xor
adc
pop
xor
in
dec
fcoms
aam
cmp
test
sub
add
mov
pop
rcrb
xor
inc
icebp
mov
or
jbe
negb
sub
hlt
jb
sahf
les
fadds
sbbb
es
add
icebp
dec
mov
fisttpl
dec
mov
mov
jp
jge
pusha
add
adc
and
jecxz
mov
lock
int
rclb
movsb
lahf
xor
sbb
aaa
mov
rclb
lods
out
call
push
popf
outsb
mov
adc
jmp
push
xor
enter
rcrl
dec
xor
mov
rcr
mov
sbb
hlt
cmpsb
mov
ss
cld
push
test
sahf
pushf
repz
jbe
test
mov
inc
inc
lock
sahf
std
in
les
data16
test
mov
pop
pusha
movsl
in
aam
mov
jae
gs
mov
jns
cli
jbe
clc
and
aaa
mov
loopne
dec
jb
in
daa
and
stos
imul
or
mov
lock
roll
cmc
jmp
sub
test
test
dec
pop
sbb
inc
pop
lret
or
sbb
mov
mov
adc
pop
adc
in
bound
mov
or
mov
cltd
push
dec
adc
cwtl
enter
push
jecxz
add
scas
test
pop
xchg
sahf
cs
pop
sbb
sub
jge
and
pop
cld
cmc
aam
xor
cmp
int3
lods
jb
jns
cmc
push
fstps
sbb
in
imul
repnz
pop
sahf
fdivrs
or
out
test
sti
cmp
sub
fwait
cmp
iret
loopne
push
or
or
in
sbb
int3
push
inc
enter
daa
xchg
cmp
push
cmp
iret
ljmp
adc
in
aam
xor
dec
pop
mov
cmp
lret
imul
daa
add
loop
sbb
aad
adc
sbb
inc
scas
xchg
mov
sub
ljmp
gs
cmpsb
test
adc
je
pextrw
pusha
fst
xchg
sub
insl
cmpsb
dec
ds
test
cmp
cmp
arpl
and
fcmovu
arpl
lods
push
call
enter
movsl
imul
push
xor
adc
push
cwtl
out
xor
add
lods
sbb
or
in
push
pop
mov
clc
adc
dec
adc
inc
push
pop
inc
loopne
or
cmp
ficompl
adc
daa
inc
call
andb
shll
xorb
lock
test
clc
jne
pushl
xchg
imul
jmp
popa
fistpll
mov
adc
dec
daa
sti
adc
gs
sub
icebp
adc
lds
in
jbe
fcoml
mov
mov
sbb
cmp
jge
shrl
mov
stc
in
inc
sbb
xor
mov
cmp
lcall
pop
adc
or
mov
mov
int3
inc
xor
and
ficoml
iret
xchg
nop
fwait
add
jne
mov
movsb
add
clc
std
scas
sarb
call
rclb
test
repz
rclb
std
es
xor
pushf
sub
leave
cmc
outsb
jnp
clc
int3
add
pop
or
mov
loop
inc
xchg
adc
cld
jecxz
dec
and
negl
test
insl
mov
mov
pop
xor
xchg
xor
xchg
scas
std
sbb
mov
in
adc
sub
jb
ret
in
test
das
mov
mov
pop
xchg
jbe
push
or
xor
or
inc
lret
or
rcl
ret
sbb
enter
sahf
gs
mov
flds
push
lcall
icebp
add
cmpsb
outsb
aam
shrl
insb
imul
push
loop
xchg
and
fldcw
cmp
dec
lds
lods
insb
divl
mov
or
sbb
insl
cmp
std
out
gs
cmp
loopne
mov
lds
out
xchg
sub
or
inc
in
inc
and
push
jl
pop
cli
insb
sub
jle
pop
push
int3
dec
pop
mov
aam
push
test
mov
add
hlt
pop
or
push
cmp
and
daa
rcrb
jecxz
test
imul
fmull
push
iret
and
shlb
xor
push
jmp
sub
xchg
fimull
inc
mov
into
flds
cltd
mov
jbe
cli
pop
xchg
xchg
aas
mov
jl
jbe
fisubrl
mov
pushf
inc
mov
js
adc
sub
mov
inc
mov
pushf
mov
outsb
pop
inc
mov
adc
sub
jbe
popf
daa
jg
repnz
pop
push
das
int
scas
insb
stc
push
or
push
inc
sbb
jecxz
pop
shlb
mov
ss
xlat
repz
xor
xchg
sbbl
adc
fsubr
call
add
add
cld
hlt
sahf
cltd
data16
mov
adc
enter
insb
push
dec
push
pop
cmc
sbb
pop
push
pop
pusha
ss
xchg
mov
mov
lods
dec
cwtl
sub
mov
mov
mov
xor
cmp
inc
leave
popa
adc
mov
add
popf
or
or
inc
decl
cmp
gs
mov
jne
or
ds
and
dec
cmpl
movsl
mov
mov
hlt
scas
lret
adc
int3
shll
inc
ret
sub
add
push
mov
sub
sub
jb
lahf
insl
dec
lahf
mov
lods
add
mov
mov
aad
inc
pop
sub
mov
test
dec
mov
call
mov
xchg
gs
and
insl
jno
mov
adc
and
ljmp
or
fisttpll
cmp
and
popf
jmp
cmp
cmpsl
popa
mov
fsubs
adc
aas
xchg
lea
jl
mov
and
sub
pop
pop
mov
pop
addr16
jl
lods
xchg
add
jg
movsl
xchg
xchg
mov
sbb
fidivrl
cmp
mov
daa
enter
test
cmp
or
lods
std
mov
popa
aaa
dec
sbb
mov
int
jg
stc
sbb
outsb
inc
adcl
push
cmp
int
adc
roll
sbb
or
xchg
pop
inc
pusha
pushf
mov
cmpsl
gs
add
inc
mov
sar
int
jo
mov
insl
dec
test
rcrl
dec
aaa
jmp
dec
xor
js
adc
mov
lahf
sbb
xor
mov
dec
or
lds
dec
aas
cltd
daa
dec
and
push
or
mov
xchg
pop
addr16
outsb
add
mov
dec
mov
dec
je
daa
ljmp
ljmp
movsb
fcoms
xor
cltd
xor
jne
mov
mov
rcl
jmp
dec
xchg
les
push
rorb
das
sub
enter
push
mov
xor
jb
icebp
inc
decl
jns
ficoml
xchg
repnz
push
jne
lds
push
xor
scas
test
xchg
mov
scas
jne
lret
enter
pop
lcall
js
xor
dec
mov
mov
sbb
ljmp
inc
icebp
and
stc
add
loopne
das
out
in
push
lcall
stos
orb
push
pop
movzbl
out
inc
repnz
in
fildll
int3
insl
icebp
je
bound
enter
nop
inc
imul
test
mov
push
repnz
jmp
xor
cmp
das
cmp
ja
pop
add
jne
push
enter
mov
xor
sub
cmp
mov
xchg
jbe
loop
ret
xchg
into
mov
gs
insl
cmc
out
jecxz
push
jo
sbb
pop
insl
into
inc
dec
xchg
icebp
imul
lods
ret
popa
or
and
scas
movsl
lds
imul
cmc
cwtl
out
or
xchg
mov
push
enter
mov
push
sub
xchg
push
mov
adc
cmc
into
mov
iret
out
pop
mov
call
xorl
xchg
xchg
lea
pop
mov
mov
enter
jmp
imul
lods
sub
cmpsb
hlt
fucomi
xchg
or
adc
clc
int3
or
ret
das
xor
jne
xor
jne
mov
and
cmp
cmc
es
push
loopne
in
adc
cli
aam
or
call
movsb
xor
sbb
loope
leave
pop
pop
sub
dec
pop
clc
mov
leave
mov
out
cmp
fwait
mov
ret
inc
lahf
das
inc
loope
rorb
xor
negb
jecxz
mov
lock
std
jg
and
mov
mov
xor
nop
loopne
jecxz
sub
push
into
sbb
add
stos
inc
mov
and
mov
sbb
fdivl
xchg
cmp
dec
push
add
dec
cmp
lret
das
outsl
mov
xchg
cld
loopne
test
inc
mov
ss
or
sub
fsubrs
inc
dec
in
dec
stos
xor
push
aam
cs
inc
lret
jne
ret
and
push
adc
cmp
stos
out
xor
add
mov
mov
add
add
mov
add
inc
sbb
or
daa
xchg
in
pop
add
mov
call
or
pop
pop
push
pushf
jg
inc
add
imul
jecxz
or
test
pop
xor
ficoml
pushf
xor
xor
mov
pop
adc
push
pop
addl
lock
push
rcrl
sub
jmp
push
fs
int
pop
scas
lret
dec
inc
call
loop
sbb
ljmp
mov
or
aas
jg
mov
pop
cmp
mov
inc
cmpsb
fwait
nop
adc
jnp
loope
and
or
adc
mov
dec
mov
ss
insb
shl
imul
enter
or
mov
fmul
sbb
scas
js
sbb
test
movsl
fsub
jo
popf
movsl
aaa
add
jecxz
cmp
jo
fidivl
call
popa
pop
mov
cs
push
cmp
fsub
jae
adcl
mov
push
jle
cmp
pop
mov
test
inc
adc
mov
in
or
outsb
nop
push
inc
imul
es
test
cmp
cmpsl
iret
add
add
cwtl
cld
sbb
fmull
mov
ret
arpl
sbb
cmp
pop
insb
lods
xor
loop
inc
arpl
scas
mov
test
pop
ljmp
jl
rep
push
sbb
mov
cmpsb
out
or
and
in
aas
mov
loop
or
and
fwait
cmp
dec
pop
cmpsl
sarl
mov
push
jnp
pop
pop
or
inc
and
int
sti
mov
repnz
test
in
test
rorb
and
outsb
pop
js
clc
mov
iret
mov
mov
pop
push
fcmovbe
fstpl
jmp
add
mov
ret
cmc
or
in
ficompl
push
bound
cmp
and
cwtl
movsl
cld
in
jle
cmp
out
mov
es
xor
push
jne
add
cld
xor
in
ret
push
in
xchg
clc
popa
inc
mov
sub
dec
dec
push
and
adc
int3
push
rcll
jbe
push
imul
xor
adc
jecxz
or
enter
push
adc
adc
in
add
shrl
daa
or
fimuls
pop
mov
ficompl
rolb
adc
nop
inc
mov
jg
cmc
stc
lock
sbb
jg,pt
lods
flds
dec
lock
insl
pop
push
subb
adc
lods
ss
pop
out
gs
jmp
andb
jecxz
cltd
add
pop
movsl
outsb
daa
jecxz
insl
fiaddl
xor
lcall
pop
daa
sbb
lods
inc
and
bound
xorb
out
mov
imul
pop
imul
mov
mov
add
xor
mov
stc
insl
push
xchg
add
adc
dec
aam
inc
cmpsl
add
outsl
das
mov
ret
int
or
mov
pop
imul
int
mov
shll
mov
cmp
pop
mov
test
push
test
fldt
mov
gs
and
cmp
add
outsb
and
mov
fistl
sub
into
add
aaa
xor
cmp
mulb
mov
or
lcall
int
incl
add
mov
sbb
add
adc
add
cmc
test
sbb
sbb
daa
xlat
cmp
repz
dec
lret
add
aaa
jge
jl
mov
ret
bound
sbb
pop
rcl
cmpsl
mov
enter
xor
xor
jbe
mov
cmp
cmp
popf
ss
xchg
adc
sbb
push
lods
dec
imul
sub
sbb
test
sub
clc
cwtl
push
pop
mov
iret
sbb
adc
add
mov
xchg
fidivs
mov
lods
enter
sub
add
jno
mov
sub
dec
sbb
push
fdivrl
imul
mov
push
jbe
cmpsb
mov
jo
inc
leave
push
cmp
stos
and
mov
mov
inc
lea
pusha
push
pop
aas
mov
dec
push
mov
mov
pop
add
cmp
outsl
jbe
sbb
lods
dec
loope
xchg
mov
imul
fisttpll
je
mov
lcall
sbb
inc
or
test
cmp
or
ja
jb
adc
test
push
in
dec
mov
stc
cli
test
mov
pop
imul
dec
xchg
xchg
mov
mov
lds
outsl
mov
js
aaa
call
adcl
adc
xchg
lods
sbb
stc
sbb
mov
aaa
pop
out
or
sarb
and
aas
lods
add
pushl
test
arpl
je
fmuls
ja
enter
cmp
cs
stc
jg
adc
pop
pop
sti
in
jmp
sbb
shll
dec
lcall
xor
scas
loop
test
dec
cmp
cmp
sub
add
or
adc
dec
sbb
jle
push
stc
mov
sub
cmp
add
test
dec
push
lock
mov
add
jl
mov
pusha
cmp
jecxz
push
add
stc
cmp
dec
sub
movsl
xchg
fldt
add
jno
cmp
int
imul
clc
negl
jg
inc
mov
sub
leave
data16
std
push
aas
movsb
jnp
movzbl
incb
jmp
insl
pusha
dec
xchg
mov
bswap
inc
rorb
add
or
das
and
dec
adc
add
jmp
jb
cmp
ret
xor
sbb
repnz
add
loopne
cmc
imul
idivb
xchg
dec
sahf
add
mov
test
cmp
mov
xor
adc
sub
mov
mov
out
ja
lret
jp
ss
pop
ffree
test
sarb
jnp
jae
adc
jnp
test
jmp
lcall
sbb
mov
out
sbb
call
lods
jg
dec
out
test
test
data16
sbb
sub
xchg
in
jno
inc
je
sub
aaa
mov
adc
sub
push
pop
sub
sbb
test
or
mov
sbb
and
fwait
sub
mov
dec
and
mov
inc
fmuls
outsl
dec
in
adc
dec
mov
aam
arpl
cmp
or
jecxz
jo
leave
pop
mov
decl
mov
ss
lds
mov
sti
cmp
jge
pop
shll
push
xchg
add
test
jne
sbb
mov
scas
repz
loop
dec
cmpsl
mov
pop
daa
adc
stos
or
xor
js
shrb
pop
test
push
ss
pop
psllw
add
sti
test
adc
sub
cmp
popa
sbb
inc
pop
mov
das
out
daa
out
inc
test
test
rcll
hlt
imul
cld
cmc
pop
das
adc
mov
mov
stos
jne
imul
jne
cmp
cmp
sbb
add
stc
inc
and
dec
push
leave
mov
and
adcl
cmp
sbb
mov
add
lock
imul
jne
test
cmpsl
lcall
jg
sub
je
adc
clc
push
outsl
sub
dec
cmp
mov
adc
mov
pop
inc
push
xchg
inc
jne
and
inc
add
into
icebp
mov
add
push
arpl
insb
sbb
nop
add
je
mov
push
jne
pop
mov
inc
dec
jge
repz
test
mov
aaa
mov
rcll
mov
mov
sbb
mov
lea
pop
aaa
test
mov
fdivr
icebp
ss
add
enter
push
mov
mov
cli
adc
jp
jg
stos
pop
mov
adc
call
inc
mov
rcrl
push
rolb
jg
xorb
shlb
add
imul
jecxz
or
mov
xchg
test
jne
mulb
daa
dec
dec
dec
les
cmp
sub
stc
imul
sub
jo
pop
lods
and
dec
mov
out
jg
movsl
jne
pop
mov
bound
popa
aas
mov
jne
les
xor
movsl
jg
xor
movsl
jnp
test
mov
mov
loopne
and
cmp
arpl
fisttps
rcrl
and
push
ret
decl
sbb
lcall
dec
xchg
sbb
or
mov
fidivl
jecxz
jae
ror
gs
push
inc
insb
arpl
push
imul
das
out
jmp
cmp
and
cmpsl
in
sub
inc
test
sarb
dec
stos
sbb
and
cmpsb
adc
or
add
sbb
pop
mov
jo
aaa
pop
imul
test
in
out
out
pop
push
dec
pop
inc
shrb
xor
je
add
or
jmp
push
cmp
ljmp
sbb
outsl
cmp
cmp
popf
stc
in
sub
dec
xor
dec
aam
fs
test
dec
and
add
push
mov
sbb
pop
and
mov
sbb
nop
test
aas
mov
sub
stc
push
pop
or
dec
adc
daa
std
lea
popa
mov
gs
pop
jge
and
ljmp
popf
je
icebp
xor
je
je
cmp
mov
aaa
inc
or
addr16
inc
or
shlb
sbb
jb
out
jl
mov
and
test
sbb
stc
cmc
push
lods
dec
lret
mov
mov
inc
cmp
hlt
jl
pop
and
clc
inc
jg
mov
xor
dec
push
add
test
xchg
push
dec
add
daa
xor
dec
lahf
sub
add
jno
cmp
xor
push
daa
dec
data16
cmp
inc
and
lahf
dec
ret
shlb
or
lods
xor
sbb
xchg
dec
fisubs
ljmp
dec
xor
cmp
ljmp
push
adc
aam
cmp
push
inc
cmp
aas
cmp
sbb
push
sub
sbb
mov
sbb
shl
imul
js
fucom
sub
mov
or
cmp
pop
jle
imul
popf
dec
mov
dec
push
mov
dec
sbb
xlat
je
jge
sub
jg
out
lret
sarb
mov
jmp
test
cmp
jg
jne
add
stc
lea
test
add
aas
iret
jb
rcrb
xor
mov
jae
and
or
aas
xchg
adc
cmp
push
jg
mov
mov
push
repnz
dec
aas
jg
xchg
lret
ss
out
mov
or
push
fldcw
out
add
cs
dec
cmpl
mov
icebp
test
mov
xor
rorb
mov
xor
push
mov
ret
jnp
out
sbb
leave
shl
mov
push
push
dec
ret
xchg
imul
or
cmp
inc
cmp
push
daa
lcall
dec
push
adc
outsb
add
mov
and
fistpll
gs
jne
imul
mov
cmp
fsubl
leave
adc
pop
in
std
jno
and
lret
movsl
imul
das
and
and
lea
mov
stos
dec
push
push
add
mov
adc
ljmp
cmp
inc
push
mov
and
jnp
arpl
add
test
mov
rclb
and
mov
int3
xor
mov
clc
and
out
clc
and
mov
ret
mov
jmp
arpl
pop
dec
add
leave
add
mov
xchg
mov
gs
lock
dec
sti
pop
cmp
movsl
fcomps
aas
pop
loopne
inc
mov
icebp
aad
movsl
inc
fnsave
sbb
test
sbb
mov
or
cmp
or
stos
add
xor
push
cmp
aaa
mov
or
push
push
mov
int
and
adc
inc
adc
jno
pusha
js
mov
pop
jae
add
ds
stos
lcall
test
into
add
inc
adc
xchg
cmp
xchg
dec
shll
rcrl
xchg
sbb
aas
xor
add
cwtl
int
test
aas
std
dec
mov
push
mov
jg
push
xor
in
sbb
sbb
mov
cltd
cmp
mov
push
mov
mov
dec
jo
dec
add
iret
fwait
xor
sub
xlat
loopne
jg
dec
int3
mov
mov
test
xor
sti
dec
adc
aad
push
test
and
out
sbb
fdivl
inc
xorb
xchg
lahf
and
lahf
test
cmp
dec
scas
push
cmp
punpckhwd
pop
fst
mov
cmp
mov
dec
dec
dec
orl
xor
sbb
xor
aas
sbb
or
xor
sbb
sbb
divl
cmp
ljmp
in
and
xchg
and
mov
xchg
push
sbbl
lea
add
push
ficoms
dec
xchg
daa
cmp
sbb
lahf
lods
int
add
fisttpll
mov
xor
lret
fimuls
clc
mov
das
mov
std
push
xchg
xchg
arpl
pushf
sbb
mov
stos
rcr
imul
sbb
push
mov
int3
pop
icebp
aas
push
jno
mov
dec
cmp
filds
jle
repnz
sub
popa
sahf
adc
xor
xor
daa
inc
faddl
jns
push
dec
fisttpl
and
or
mov
int
push
jno
xor
iret
insl
inc
push
mov
push
mov
push
sbb
mov
imul
sub
cmp
ror
jl
cmpsl
mov
or
mov
aad
stc
and
xchg
sti
cmp
dec
jne
imul
jae
fmull
push
scas
lret
sbb
adc
movsl
lret
or
decl
int
lds
cmp
aam
dec
pop
inc
lahf
and
xchg
dec
xor
inc
or
xor
add
imul
insl
dec
dec
inc
mov
and
cmp
jecxz
inc
aaa
mov
cmp
mov
inc
jge
pop
push
or
dec
jecxz
das
cli
mov
sub
and
push
xor
sbb
push
mov
pop
jecxz
out
cmp
shlb
xchg
xchg
xchg
mov
xchg
xchg
dec
jecxz
xor
inc
imul
push
ret
fimull
sbb
mov
lock
int3
imul
ljmp
inc
mov
xor
in
cmp
push
data16
xor
out
jb
dec
dec
dec
jmp
fisttpll
sbb
je
mov
out
dec
add
flds
push
mov
pop
dec
dec
jmp
lds
pop
mov
inc
dec
fs
sahf
pop
mov
arpl
sbb
sub
add
jno
std
cmp
or
push
scas
xchg
imul
outsl
je
mov
aad
bswap
shll
or
cmp
hlt
xchg
xchg
jl
les
push
dec
pop
mov
imul
outsl
test
inc
and
pop
in
sbbl
pop
jnp
ret
push
xchg
dec
ds
xor
adc
xorl
xor
aas
add
aaa
mov
xor
inc
ret
push
mov
jg
pop
and
sbb
dec
or
fstpt
iret
cmp
adc
sub
fisubrs
sbb
xor
pop
insb
lds
test
testb
add
pop
fistpll
pop
imul
sti
push
xor
divb
aaa
test
and
mov
cli
push
stos
fwait
cmp
mov
or
jne
insb
clc
filds
cmp
dec
cmc
stc
movsb
lea
fldcw
int
ljmp
ret
mov
mov
sbb
dec
add
pop
fdivrl
cli
push
xor
rorl
xor
aaa
adc
xor
sbb
imul
cmp
mov
imul
je
ss
into
adc
xlat
icebp
leave
cmp
cmp
mov
std
mov
cmpsb
rcll
popa
push
cltd
sbb
cmc
push
xchg
inc
hlt
mov
inc
imul
ss
divl
and
daa
pop
dec
roll
loop
add
hlt
je
xor
bound
mov
mov
aaa
and
and
xchg
jmp
inc
rol
rcr
aas
cmp
pusha
sub
xor
outsb
aam
cmpb
xor
inc
cmp
repz
mov
push
push
imul
ss
adc
inc
xor
in
faddl
cmp
jg
fiaddl
inc
jg
jge
imul
sbb
jno
xor
std
dec
lds
daa
insl
lods
mov
xchg
imul
inc
sub
aaa
dec
cmp
mov
and
je
dec
mov
mov
cmp
ss
aaa
pop
sub
insb
sahf
sub
mov
push
ds
dec
cmpsl
sub
ss
dec
ficomps
aad
cmp
sub
ret
rorb
mov
notl
lret
jns
xchg
cmp
clc
cmp
sbb
mov
sbb
dec
xor
cmp
cmp
jle
stc
inc
adc
jne
push
rcll
pop
pop
mov
aaa
rorb
cmp
aas
and
fiaddl
cmp
mov
adc
jg
add
dec
orl
lahf
sbb
pop
cmp
mov
push
pushf
push
sahf
sbb
cmp
sbb
add
in
cmc
std
roll
pmaxsw
idiv
rclb
out
mov
mov
jmp
pop
pop
cmp
or
test
aad
cmp
decb
fidivrs
xor
imul
xchg
xorb
adc
cmp
pop
jnp
out
fldl
xor
jge
fidivrl
jbe
xchg
sub
test
aad
add
pop
testb
cmp
mov
xor
pop
call
push
pop
or
jecxz
sbb
cmp
jge
mov
and
xchg
mov
loope
aaa
xor
sbb
lcall
iret
xchg
in
dec
cwtl
divb
push
adc
mov
gs
lds
inc
cs
enter
xchg
cmpsb
sti
test
sbb
adc
subb
jne
jbe
and
xchg
mov
movsl
mov
dec
xchg
sbb
adc
add
stos
sbb
cmp
movsl
pop
lds
ja
fcmove
cs
or
movsb
cli
mov
cmc
push
jle
lods
inc
std
inc
cmp
repz
jg
cltd
dec
cmp
push
push
in
push
test
add
xchg
pop
cli
fs
mov
insl
dec
xor
pusha
fcmovb
jmp
push
adcb
movsl
fisubrl
and
or
xchg
mov
in
push
push
push
cmp
cmpsb
sbb
add
fdivr
mov
dec
mov
das
pop
jmp
push
aas
inc
cmp
jbe
movsb
add
rcrb
jbe
or
mov
js
inc
dec
cli
jb
inc
shll
sti
clc
movsl
std
sub
pop
jg
xlat
pop
pop
imul
cmp
insl
cmp
and
jo
pop
jle
in
adc
test
movsl
cltd
mov
sbb
pop
lea
pop
testl
mov
xchg
mov
mov
dec
ja
cmp
push
sbb
stos
inc
cmp
iret
jle
ja
daa
and
je
add
fistpl
sub
dec
push
aaa
lret
inc
lock
xchg
aaa
jne
and
loope
sub
loop
aaa
lcall
nop
setge
dec
movsb
mov
scas
aaa
addb
xor
idivb
pop
fs
cmp
out
mov
icebp
stos
pusha
mov
aaa
and
mov
pop
add
popa
push
pop
dec
cs
or
cld
leave
sti
mov
and
lahf
inc
cmpsl
sub
mov
test
pop
aam
aaa
mov
repnz
jle
inc
adc
push
aaa
jge
adc
shll
in
cmc
cmp
pop
aaa
jp
fmuls
xchg
jg
or
dec
add
ds
imul
or
out
pop
imul
jno
add
mov
mov
aaa
ror
and
adc
shl
push
divb
adc
dec
in
out
inc
aaa
fs
add
sub
popf
push
aaa
std
fcoml
in
mov
xchg
inc
fxch
dec
das
aaa
mov
in
test
lahf
add
xor
mov
popa
push
test
loopne
aaa
leave
cwtl
sub
in
mov
out
mov
inc
scas
fcomi
sub
or
iret
arpl
jo
jle
ljmp
or
fwait
mov
sti
loope
aaa
ds
push
insl
mov
test
sbb
js
push
fwait
movsl
push
ja
jne
dec
aaa
out
jno
jmp
add
stos
mov
mov
jl
xchg
je
sbb
out
ds
stc
mov
push
xor
pop
pop
mov
scas
sub
ds
outsb
in
dec
or
fcmovnu
aaa
int3
ljmp
insb
inc
xor
out
jl
sub
jae
mov
cld
inc
or
js
lret
xlat
ss
push
fsts
mov
xor
sub
cmp
stos
outsb
aas
aaa
gs
push
bnd
iret
mov
hlt
in
add
cld
mov
sbb
movsl
aaa
jmp
cmc
inc
xor
icebp
jl,pn
mov
mov
or
lret
ljmp
rcrl
inc
pop
or
push
mov
xchg
outsb
inc
or
lods
mov
push
xchg
ret
aaa
inc
test
loop
aaa
cmp
dec
mov
and
push
aaa
mov
push
ljmp
lret
hlt
or
js
mov
xor
fildll
aaa
imul
cmp
jle
mov
jmp
addr16
mov
push
sbb
push
jp
call
popf
inc
aaa
mov
mov
xor
sti
mov
lret
dec
ja
dec
insb
mov
jl
es
daa
or
aaa
repz
jae
cmp
inc
cs
inc
inc
mov
push
cmp
fdivs
push
jmp
movsb
jae,pt
outsl
jge
pop
idivl
aaa
push
cmp
fcoms
add
mov
adc
lock
jne
out
movsb
mov
sbb
pop
jmp
aaa
pop
xor
std
add
dec
aaa
popa
and
mov
aaa
inc
lcall
aaa
add
rcl
aaa
push
push
std
shrb
adc
jmp
imul
jge
and
jle
cld
lods
push
ficompl
push
dec
popa
dec
js
add
aaa
inc
dec
aam
lcall
push
xor
mov
aaa
mov
stos
in
adc
test
fsubrp
or
cs
mov
test
je
push
lret
les
or
imul
and
mov
sub
sub
sbb
and
mov
jge
lret
aaa
call
and
inc
cwtl
sbb
fisttps
or
mov
hlt
ficoms
adc
mov
ret
dec
aaa
pop
outsb
insl
pushf
lcall
sbb
sahf
mov
sarl
aaa
fistpl
aaa
jne
in
iret
adc
push
mov
fnstenv
add
mov
inc
add
popl
ljmp
sbb
dec
sub
aaa
jmp
arpl
fimull
daa
or
inc
xchg
mov
fwait
stc
cmp
push
xlat
jae
jle
insl
inc
clc
aas
aas
in
nop
sbb
and
in
inc
aaa
mov
sbb
icebp
jo
cmp
bound
mov
sbb
or
xchg
mov
pop
pop
test
repnz
nopl
dec
das
fdivs
xor
and
je
scas
xor
mov
push
cmp
adc
insb
gs
mov
stos
cmp
or
sub
aaa
pop
xchg
pop
sbb
std
cs
out
jno
lock
in
cmp
cmp
aaa
push
mov
push
dec
aaa
es
push
aad
mov
imul
or
add
rol
arpl
out
jnp
imulb
mov
mov
add
add
js
pop
mov
jl
cmp
sub
cmp
push
pop
jns
dec
cmp
cmp
sub
sbb
sahf
dec
pop
pop
jg
popa
insl
mov
ret
loope
mov
aas
xchg
cmp
and
scas
fld
sahf
push
setg
sbb
cmp
dec
fwait
pop
sub
sti
sarb
mov
jg
std
aaa
pop
adc
mov
sbb
adc
movd
jns
mov
fadds
cld
mov
xor
js
aaa
and
push
and
rcrl
loopne
aaa
std
addl
mov
xor
jle
aaa
push
cmpsb
adc
ret
mov
pop
loope
or
add
jno
cltd
test
mov
mov
adc
aam
stos
imul
or
rclb
jnp
or
std
aaa
xchg
or
sbb
jmp
jb
cmp
pop
jo
cmp
mov
loop
mov
sub
aas
adc
pop
or
sti
stos
call
aaa
and
mov
cld
add
mov
or
in
cmp
or
or
mov
movsb
in
and
fidivs
mov
mov
lods
movsl
sub
or
sti
js
aaa
pop
cmp
push
int3
jno
or
jl
fs
push
aaa
int
sub
add
mov
aaa
xlat
push
xor
pop
xchg
cmp
lods
jl
mov
aaa
imul
jle
incb
scas
addl
aaa
jp
lret
mov
aaa
cld
inc
mov
aaa
add
and
outsl
bound
xchg
sub
addl
sub
aam
xchg
lret
das
dec
jmp
mov
adc
aaa
test
pushf
mov
aaa
xor
insl
std
stc
ja
fisttpll
aaa
ss
aam
push
sbb
aaa
inc
je
sub
divl
js
dec
jne
mov
xchg
aaa
icebp
jge
repnz
cs
mov
mov
adc
outsb
in
pop
imul
pop
leave
push
dec
rcr
ja
sbb
lea
call
clc
inc
xor
jge
or
out
fstpl
dec
or
out
cmp
mov
divl
imul
push
fs
outsb
cmpsb
mov
repz
in
cmp
jge
pop
lods
ss
jno
out
dec
aaa
push
mov
movsl
test
mov
repz
ds
das
xor
aaa
test
ljmp
pop
mov
push
jo
xor
fstpl
jae
outsl
popf
iret
aaa
mov
and
pop
mov
scas
repnz
sbbl
mov
imul
jno
insb
popf
add
fwait
mov
mov
xor
stos
cmp
aaa
orl
cmp
aaa
xchg
add
test
aad
cmp
push
sbb
das
aaa
xchg
jns
mov
stos
in
fimull
aaa
or
lret
pop
adcl
or
pop
stc
aas
push
mov
mov
pop
test
test
xchg
mov
jmp
aad
mov
sbb
rcr
negb
jno
int
clc
pop
and
adc
jl
cmpsl
pushf
gs
sbb
push
fwait
mov
xchg
push
sub
aaa
pop
mov
clc
add
adc
aaa
dec
imul
adc
or
js,pn
leave
insb
aas
loop
jle
mov
and
jae
ja
mov
int
xor
jmp
fistpl
stc
push
adc
jns
sbb
addr16
jnp
jp
xchg
dec
and
cli
dec
sub
ss
insl
sarb
xor
or
jp
push
data16
push
adc
popf
fucomp
aaa
xchg
pop
sub
sbb
or
sarl
fs
lret
enter
ja
dec
clc
jo
cmp
jae
shl
adc
cld
movb
pop
shll
mov
movsl
sti
mov
outsl
aaa
sbb
push
sbb
jo
mov
ret
adc
in
leave
push
mov
aaa
cmc
ds
ss
or
shrl
sbbb
mov
xchg
sbb
cmp
test
lock
aaa
orl
fistpl
mov
lahf
xchg
or
and
xor
addl
daa
call
fdivs
shll
and
cmp
enter
mov
pop
aaa
mov
ds
imul
sub
aaa
sbb
movsb
gs
fs
pop
add
mov
sbb
mov
mov
mov
add
in
xor
mov
pop
ficoml
loopne
jno
push
sub
mov
aaa
add
mov
arpl
inc
or
mov
adc
aaa
outsb
xchg
stc
adc
adc
int3
mov
into
adc
cli
dec
aad
pop
adc
decl
das
xchg
jp
pop
mov
cmp
mov
mov
and
aaa
and
sbb
insb
idivb
fmuls
mov
xor
in
fiaddl
sub
cs
xchg
lcall
sbb
mov
cli
xor
sub
mov
mov
and
fidivl
adc
add
jmp
loop
aaa
xchg
adc
stos
cs
jmp
jecxz
add
cmp
push
stos
outsb
or
pop
inc
push
iret
enter
push
ljmp
or
sbb
jle
inc
jne
insb
stos
xchg
add
push
xchg
andb
inc
shl
or
or
sub
add
mov
test
pop
fiaddl
nopl
fistps
jle
fstpl
test
jp
pop
jno
cmp
sbb
mov
jns
mov
sub
dec
dec
adc
mov
pushf
aam
je
inc
test
xchg
jne
jno
pop
inc
inc
arpl
lods
mov
outsl
movsb
xchg
sub
push
mov
mov
jle
mov
iret
enter
test
jo
adc
xchg
fisubl
mov
xor
sti
int3
adc
sbb
es
add
cmpsb
or
xchg
test
outsb
mov
adc
repz
repz
cmc
push
pop
mov
mov
sbb
push
sub
and
cli
es
push
je
or
jmp
sbb
repnz
pop
adc
sbbb
nop
enter
push
mov
mov
push
inc
scas
loope
jge
mov
add
sub
mov
mov
hlt
sbb
mov
mov
or
sbb
add
scas
adc
enter
pop
mov
fcomp
mov
out
in
xchg
and
cli
test
sahf
xchg
hlt
mov
imul
add
pushf
and
cmpsl
xchg
lea
sahf
fiaddl
insb
orb
dec
test
sti
daa
ret
pop
sahf
xchg
pop
sbb
mov
mov
out
sub
inc
sbbb
sub
addr16
addb
stos
mov
leave
imul
pop
jno
lcall
push
aad
pusha
lret
pop
lock
xor
cmp
bound
sub
packssdw
cli
xchg
das
lock
rorb
shlb
cmp
mov
mov
mov
cmp
adc
dec
sbb
lock
arpl
cmp
lret
and
xor
das
mov
adc
mov
mov
or
xor
inc
jg
loop
jmp
addr16
popf
push
sub
popa
pop
jo
outsb
rcrl
stos
enter
sbb
or
push
push
aad
hlt
adc
mov
cmc
mov
fwait
xchg
imul
in
xor
inc
imul
sahf
adc
adc
test
into
push
insl
arpl
inc
icebp
movlps
enter
inc
cmp
push
mov
mov
dec
mov
adc
pop
pop
mov
sub
lret
call
decb
loope
les
push
mov
sbb
imul
inc
je
mov
inc
fs
dec
push
mov
inc
sbb
fs
push
insb
jg
inc
xor
xor
jmp
pop
or
fisubrs
xor
push
imul
in
cwtl
lods
xor
nop
into
inc
push
jge
les
sbb
imul
sbb
lods
pusha
movb
cmp
negl
nop
pop
test
addb
adc
mov
mov
enter
pop
fiaddl
cld
push
stos
aas
not
dec
call
or
sub
sahf
fidivl
inc
test
ret
xchg
xchg
xchg
outsb
pop
cltd
dec
cmp
int
call
jmp
pop
ljmp
jl
es
pop
dec
lahf
push
jae
xchg
jl
test
push
jnp
push
outsl
mov
mov
stc
imul
punpcklwd
test
jl
mov
cmp
bswap
in
mov
hlt
popf
mov
sbb
adc
ret
sahf
mov
js
pop
insb
adc
loop
dec
scas
aaa
push
jmp
cmp
mov
dec
push
cltd
lea
in
nop
adc
daa
les
in
or
sbb
mov
adc
jbe
das
pop
scas
pop
inc
outsb
imul
daa
xchg
sahf
xor
push
lea
cmc
jo
or
push
vaddsubps
imull
jb
sub
mov
out
inc
ror
call
push
adc
enter
sbb
mov
adc
shl
adc
loope
popf
adc
in
xor
jno
mov
push
mov
aaa
adc
in
pop
icebp
mov
xchg
cwtl
mov
lret
sbb
sbbl
mov
sbb
cmpsl
subb
ss
or
mov
enter
sbb
inc
mov
fdivrl
cltd
jl
sbb
out
lds
mov
test
lock
out
sbb
jne
jmp
mov
test
and
ljmp
inc
bound
lock
inc
ficoml
dec
stos
mov
scas
inc
cwtl
jno
pop
fdivp
push
and
jnp
cli
fnstenv
inc
dec
push
arpl
mov
cmp
pop
mov
mov
and
call
in
int3
and
xchg
sbb
imul
fidivrl
lret
sbb
inc
idivl
jp
xchg
mov
movsb
pop
adc
lods
cltd
and
mov
icebp
aas
aaa
enter
test
mov
pop
popf
imul
rolb
out
push
inc
sarl
enter
jmp
jecxz
loope
jle
xchg
pop
nop
and
out
cmc
push
lds
fsts
sub
push
inc
or
outsb
mov
xlat
pop
push
enter
cwtl
data16
mov
aaa
cmpsb
cmp
sub
repz
xchg
jae
dec
ja
pop
arpl
pop
push
mov
scas
add
ss
or
jg
pop
xchg
xor
jb
mov
pop
or
shr
add
enter
aaa
and
jo
mov
imul
and
pop
packsswb
jno
sbb
fcmove
xchg
test
jp
addps
lahf
sbb
mov
lods
cmp
std
fsubl
jbe
xchg
sbb
xor
and
push
aaa
push
std
mov
mov
test
mov
adc
adc
xlat
add
aaa
pop
jbe
add
ret
aam
xor
popf
push
cmp
les
rolb
arpl
mov
ret
push
cld
insb
dec
xchg
inc
and
aaa
mov
and
and
mov
xor
inc
pop
aaa
into
jnp
add
ret
aaa
loop
movsl
xor
and
add
repz
fildl
mov
sub
aaa
xchg
push
js
add
mov
popa
cmp
add
mov
out
fdivp
jle
xchg
sbb
mov
and
mov
add
pop
push
pop
or
in
xchg
mov
sbb
cmp
cmpb
aaa
mov
sbb
aaa
outsb
xchg
mov
dec
dec
aaa
add
add
lcall
loop
incb
mov
aaa
mov
int
aaa
and
jb
cmpsb
test
dec
or
adc
mov
adc
outsb
mov
stos
jno
mov
out
jecxz
out
aaa
mov
jnp
mov
pop
aas
jg
sbb
insl
rep
xor
xor
enter
ljmp
scas
aaa
jbe
testb
sbb
ja
mov
aad
call
test
pop
sub
mov
rolb
push
sbb
scas
fmul
orl
sbb
fcomi
dec
push
icebp
imul
mov
dec
ss
pop
adc
ja
sbb
jl
sub
hlt
dec
js
leave
push
aaa
mov
test
insl
dec
pop
not
popa
mov
out
in
cmp
inc
ljmp
aaa
andb
je
jecxz
cli
xor
push
hlt
or
adc
jg
int
push
aaa
daa
filds
js
add
aaa
fucom
inc
dec
sbb
sub
cmpsl
mov
andb
jp
aaa
sar
sahf
mov
adc
push
mov
imul
testl
arpl
repz
xor
es
cli
movsb
fwait
add
cmpsb
mov
int3
orl
loopne
adc
int
jno
adc
adc
add
mov
shll
outsb
aaa
sbbl
sub
pop
or
mov
xor
jno
xchg
popa
adc
sub
add
pop
mov
pop
jno
jne
xchg
ss
push
push
xor
aaa
mov
xchg
mov
std
fistpl
in
dec
lret
unpckhps
mov
mov
leave
add
fimull
or
out
mov
cwtd
aad
cli
add
jl
ds
xchg
inc
pop
aad
or
or
cmp
loopne
mov
ucomiss
mov
cmp
inc
mov
dec
cmpsl
adc
shll
aam
mov
add
jl
jnp
pop
xor
push
aaa
sbb
xor
sub
aaa
mov
cmp
xor
iret
jle
adc
xchg
std
dec
aaa
mov
lret
mov
sets
test
push
sbb
or
ljmp
cmp
xchg
movsb
sub
jnp
int3
lods
inc
rcr
and
aaa
jle
dec
shl
rdmsr
ja
cmp
jecxz
xor
jl
sbb
add
inc
aaa
xchg
adc
sbb
int3
outsl
ss
sbb
cmc
sub
xor
mov
add
push
cmp
fstpl
shll
sbb
xchg
xchg
add
pop
sbb
popa
mov
or
imul
test
mov
icebp
movsl
jecxz
aas
jne
xchg
mov
ja
or
pusha
sahf
fcmove
out
ret
popa
shll
lods
cmc
scas
jne
adc
test
sub
mov
push
iret
and
jne
or
mov
adc
mov
lds
jne
leave
ficompl
aaa
test
lds
movsb
inc
dec
fldl
test
dec
sub
fsubl
out
leave
insl
xchg
out
xor
adc
das
outsb
lret
lret
jns
lahf
movd
add
or
lods
ficoms
sti
inc
les
dec
dec
push
cmc
mov
add
ficoml
mov
dec
int
add
fwait
lret
pop
cmp
jbe
add
popa
sub
cli
xor
jnp
fiaddl
adc
inc
bsr
push
rcll
or
cwtl
cmp
push
add
subl
loop
test
pop
xlat
fiadds
pop
fisubl
or
nopl
push
lcall
cld
and
in
ret
add
mov
loope
mov
cmc
imul
pop
mov
mov
jae
mov
mov
divl
lods
pop
sub
aaa
bound
inc
lahf
and
orl
or
fcomp
fimuls
lds
jecxz
pop
enter
jle
pusha
into
pop
pop
add
add
mov
or
inc
push
jecxz
push
sbb
sbb
inc
adc
cmc
cmp
cltd
push
cwtl
aam
mov
push
push
xor
sbb
test
jmp
stc
pop
sub
test
lds
xchg
call
jmp
adc
jo
dec
xchg
xlat
push
sbb
lcall
xchg
pop
sbb
cmp
push
rcl
sbb
and
inc
push
add
loop
lahf
mov
mov
aaa
cli
adc
or
popf
fwait
mov
fimull
cmp
inc
adc
mov
addr16
jo
mov
add
fistl
push
psllq
dec
push
xor
pop
xchg
push
in
cmp
and
jne
jl
mov
in
sbbl
or
fdivrl
mov
mov
rorl
dec
mov
lock
xor
push
iret
ja
lret
jl
xlat
jne
adc
xchg
loope
test
pop
add
push
sbb
cmp
adc
and
xlat
add
aaa
movsb
cmp
mov
or
sarl
xchg
mov
cmpsl
cltd
push
pop
sub
and
push
jne
ficompl
add
push
loopne
mov
std
jno
mov
loope
adc
scas
cli
xlat
push
cltd
data16
addl
jb
sbb
pop
push
dec
mov
inc
push
or
inc
fdivrs
scas
hlt
mov
cmpsb
movsb
pop
adc
xor
das
cmp
lcall
jmp
insl
outsb
out
daa
iret
sub
mov
fs
sbb
jmp
xchg
imul
push
push
jmp
and
pop
sbb
pop
imul
aam
daa
inc
fisttps
push
stos
int3
cltd
xor
lret
insl
lds
into
cmp
mov
aaa
sub
dec
gs
sbb
jge
xchg
lods
aas
and
xchg
cmpsb
sbb
dec
aad
add
mov
insl
jge
cli
adc
add
dec
fcmove
xor
push
or
mov
enter
pop
adc
and
sti
cltd
cli
out
sti
push
lock
adc
es
int3
cmp
fisubrl
pop
pop
and
or
scas
pop
pop
pop
cmp
mov
fsubs
lea
movsb
jecxz
mov
fimull
sub
mov
std
lahf
or
pop
imul
pop
jno
xchg
movsb
inc
push
pop
popf
mov
insl
orb
pop
jo
fistpll
or
pop
or
test
dec
xor
push
popa
inc
jbe
mov
fadds
cltd
fmull
lock
push
jae
movsl
push
jecxz
cmp
jge
test
jno
push
mov
adc
or
cmp
mov
xor
sbb
adc
mov
es
lds
int3
jnp
stc
mov
inc
pop
stos
pop
pop
gs
jecxz
jno
mov
in
clc
dec
aaa
loopne
lcall
jg
idivb
adc
or
aaa
dec
scas
fsubs
mov
dec
incl
je
sbb
mov
xor
out
into
movsb
fdiv
enter
pop
mov
repnz
rcrl
int3
fdivrl
cs
testb
fimuls
inc
adc
xor
call
scas
xchg
sbb
scas
adc
aaa
and
loopne
dec
mov
loop
lahf
cmc
mov
push
dec
flds
nop
cmpsb
daa
shlb
pushf
or
mov
mov
pop
pop
popf
sub
mov
jno
dec
or
adc
ficoms
mov
test
dec
mov
dec
dec
cmp
das
imul
call
dec
cmc
and
cmp
dec
movsb
mov
imul
rcll
mov
pusha
repnz
test
scas
mov
mov
cmp
ret
sbb
or
daa
popf
jae
stos
cmp
daa
xchg
or
or
jnp
and
mov
dec
mov
insl
sub
cmc
xchg
mov
push
mov
scas
cmp
push
mov
jns
sbb
int3
mov
mov
and
rcr
mov
rclb
js
rcll
pop
push
mov
neg
aas
aaa
mov
xchg
test
repnz
mov
orl
inc
ja
cmpsb
dec
lcall
test
pop
adc
mov
mov
push
pusha
gs
jmp
ret
push
adc
cmp
mov
rorb
jmp
adc
divb
arpl
xchg
jns
nop
xchg
or
test
push
testl
jbe
ds
sub
push
sbb
push
rcrb
imul
mov
addr16
xor
dec
fisttpll
cmc
add
push
fisttpll
scas
daa
sti
xchg
pop
add
mov
bound
out
xchg
cli
mov
mov
insl
shl
mov
cmp
inc
call
xchg
leave
and
xor
clc
xchg
aas
push
mov
enter
loop
pop
mov
mov
lret
leave
cmc
fsub
add
jne
or
lock
mov
mov
xor
mov
fiaddl
aaa
lods
ljmp
mov
lds
and
fidivrl
lea
push
lods
sti
mov
add
cmc
loopne
mov
dec
inc
fisubl
adc
mov
cmp
insb
inc
xor
aaa
add
sbb
imul
outsl
inc
sub
jae
inc
mov
cmpsb
adc
lods
mov
xchg
leave
mov
enter
fisubl
inc
mov
sbb
rorl
and
fisubs
or
inc
andb
movsl
xchg
mov
scas
outsl
xchg
pop
and
xor
lcall
or
enter
sbb
jb
lds
inc
mov
and
fidivl
pushf
in
or
stc
sbb
fdivs
mov
ficoml
daa
loopne
in
je
inc
test
push
add
fisubs
enter
lds
sbbl
icebp
sbb
mov
add
data16
hlt
cmp
mov
xor
and
mov
pusha
jno
jmp
cmp
mov
add
mov
movsb
push
push
add
xor
jecxz
pop
lcall
sub
daa
pop
mov
movsl
xorl
arpl
xor
xchg
call
nop
inc
dec
mov
jne
sbb
lcall
jecxz
ficoms
cs
inc
cld
data16
jb
xlat
fwait
mov
lahf
push
add
jb
in
stos
repz
hlt
sub
mov
lahf
fwait
cmc
fstp
pmulhw
jo
mov
sbb
push
sbb
dec
lds
push
mov
test
in
jno
xchg
js
shll
cmp
lods
fwait
cmp
faddp
imul
xor
cld
xchg
cmp
adc
mov
jo
js
stc
cmc
xchg
and
xchg
xchg
popa
pop
adc
stos
nop
sar
cwtl
or
popa
jmp
out
jbe
dec
jb
sub
jecxz
or
stos
mov
pop
stos
xor
dec
add
cmp
push
cmc
orl
xchg
adc
add
ret
jb
mov
xchg
rclb
pop
cmp
enter
mov
je
xchg
in
imul
data16
mov
out
adc
idivl
jmp
mov
enter
push
lods
les
inc
fisubs
nop
push
iret
out
sti
in
cmc
mov
sbb
pushf
push
ljmp
jae
insb
cmp
sbb
dec
cmpsb
adc
mov
sbb
add
adc
mov
and
sarl
sbb
and
sar
mov
lea
fildll
xor
mov
data16
add
push
jae
mov
popa
fidivl
or
push
into
and
aaa
fcoml
mov
lcall
das
cmp
daa
pop
push
inc
push
cmp
cmpsb
lods
jns
call
mov
in
add
sub
out
pop
xor
movsl
mov
mov
and
loopne
mov
adc
int
push
dec
cmp
cmc
rcrb
fcomps
pop
loopne
sbb
jno
adc
aaa
mov
shlb
xor
bt
jmp
icebp
adc
push
lock
adc
jb
mov
in
ror
dec
mov
aas
mov
sub
bound
mov
jo
cmp
push
mov
mov
loopne
jge
mov
leave
push
aam
aaa
cld
fldenv
inc
push
out
or
aad
pop
scas
loop
je
out
lcall
aaa
sub
dec
gs
ja
xor
jae
mov
lret
ds
rcll
jp
xor
cs
loop
out
pushw
clc
fld
add
cwtl
mov
mov
clc
jecxz
aaa
in
leave
test
ljmp
jo
sar
xchg
or
cmc
nop
call
fs
pop
jb
or
loope
push
lahf
shrl
mov
and
mov
mov
call
std
aaa
xchg
dec
jae
test
xor
xchg
add
mov
pop
dec
and
push
call
sub
mov
aaa
pop
xchg
mov
inc
mov
lret
jp
aaa
pop
push
jo
pusha
sub
shll
jge
ja
mov
push
aaa
sbb
cmpsl
ja
lea
jle
test
adc
insl
and
sub
xchg
popf
mulb
aaa
jge
jnp,pt
mov
dec
aaa
fisubrl
add
xor
mov
aaa
imul
aas
mov
dec
adc
jne
js
adc
adc
cmove
pop
int
sbb
aaa
pop
xchg
lock
js
lret
xchg
clc
test
fs
out
dec
repz
cli
push
das
aaa
gs
and
add
icebp
cmp
push
dec
sbb
in
ljmp
aad
adc
jmp
push
inc
jg
incb
pop
xorb
cld
insb
iret
lret
imul
mov
and
call
and
push
cmc
lods
xchg
cmp
gs
mov
mov
scas
sbb
jp
add
pusha
fists
mov
jge
cmp
cmpsb
xlat
push
add
adc
das
push
out
jg
aaa
mov
js
push
aaa
gs
testb
jle
adc
xlat
aaa
dec
and
cmpsl
jno
test
pop
mov
lock
adc
or
jge
and
dec
and
roll
xchg
scas
jmp
test
aaa
loop
out
cli
cmp
int
dec
xchg
and
mov
and
out
dec
addr16
aaa
ret
pop
repnz
outsl
sahf
or
push
pop
movsb
stos
sbb
in
and
sbb
mov
and
out
sub
mov
push
sbb
or
inc
pop
pop
out
in
mov
add
sub
mov
sti
fs
mov
test
sbb
aaa
push
mov
xorl
bnd
scas
adc
mov
add
mov
popa
add
sbb
cs
ret
xchg
or
es
aaa
int
jo
xchg
aas
int
xchg
cmp
pop
xor
cld
xchg
add
aaa
sbb
sub
sub
movsb
loope
ss
shlb
loopne
fbld
push
shll
xor
mov
arpl
lahf
mov
aaa
jbe
and
scas
sbb
sub
aaa
push
lock
mov
sub
push
push
xor
inc
aaa
mov
dec
fdivl
aad
mov
insl
sti
decb
aaa
aas
cmc
mov
std
je
inc
aaa
in
cmovb
and
mov
cmpsb
xor
das
js
mov
or
not
sbbl
adc
aaa
adc
add
icebp
scas
lea
sbb
push
mov
dec
mov
sbb
jge
mov
aaa
lret
xor
push
cmp
cmc
lea
aaa
jno
ds
inc
mov
sti
cmpl
cld
dec
test
xor
dec
push
aaa
pop
inc
or
aaa
aad
sub
adc
mov
popa
out
add
int
push
int3
sbb
lock
insl
adc
add
sahf
popa
jb
fcoms
mov
scas
xlat
fdivs
mov
ja
cld
adc
jl
xor
nop
aaa
inc
dec
or
adc
inc
cmc
imulb
mov
adc
lock
mov
insl
aaa
mov
push
jae
sbb
andl
xor
out
test
fsubs
sahf
jecxz
sub
adc
cli
out
gs
imul
sti
sbb
dec
dec
fdiv
push
inc
psrlq
stc
adc
or
and
mov
scas
push
dec
adc
mov
cli
mov
xchg
in
or
rcll
bound
enter
mov
xchg
shrl
jge
aaa
stc
data16
sti
add
arpl
lret
jl
stos
xor
aaa
adc
lock
xchg
rorl
aaa
out
jbe
imul
fsubs
lods
loopne
jns
jnp
mov
add
dec
adc
jae
adc
push
scas
cwtl
clc
imul
and
hlt
daa
push
push
aaa
xchg
in
loopne
sahf
outsb
ds
jne
in
fimull
jp
add
and
cmpsl
add
jle
mov
or
jno
push
or
or
adc
out
sub
aaa
push
loopne
pop
dec
sub
or
jecxz
mov
push
in
addr16
js
out
mov
hlt
push
jge
cmp
mov
adc
aaa
pop
xchg
ret
arpl
mov
ss
mov
dec
int
aaa
mov
lods
jns
sbb
or
out
jae
aaa
mov
insb
mov
xchg
pop
jae
leave
lock
and
negb
fildl
in
aaa
pusha
mov
test
aaa
jno
add
mov
xor
daa
xchg
mov
inc
aaa
pop
stc
add
int3
lahf
aaa
in
or
and
dec
stos
stc
cmp
bound
push
movsl
subl
sub
mov
xchg
out
pop
adc
jge
sbb
decb
or
test
mov
in
mov
popf
jmp
inc
or
aad
sbb
xchg
je
aas
mov
lret
mov
addl
clc
sarb
jbe
ljmp
sub
adc
pushf
pop
push
test
jmp
cmp
jne
sbb
aaa
repz
mov
cmpsl
insb
dec
push
repnz
cmp
aas
pop
xchg
jmp
xchg
mov
or
push
jnp
rcl
sub
xchg
aaa
mov
jbe
leave
aaa
cmpsb
bound
jb
sbb
aaa
les
dec
inc
xchg
add
aaa
adc
popa
addb
shll
aaa
mov
sub
aaa
incl
cli
movsl
pop
ret
sub
and
mov
push
dec
push
das
jle
inc
and
or
adcl
mov
add
aaa
mov
or
sti
push
mov
sub
in
movsb
loop
ss
divl
lock
push
sbb
aam
jle
bound
push
aaa
push
mov
nop
pushf
cmovae
out
call
pop
inc
idivl
cmp
enter
shll
aaa
cmc
or
js
mov
sar
std
js
shrl
xor
int
jbe
xorl
int3
cmp
xor
push
mov
mov
into
test
ret
sub
aaa
mov
insb
mov
popf
jge
aaa
mov
mov
inc
movsb
adc
mov
ds
adc
mov
cmp
int3
inc
fiaddl
mov
or
mov
push
add
jl
and
pop
das
inc
psrlw
lods
jbe
inc
cmp
loop
mov
cmp
jp
jne
sbb
rorb
roll
test
std
aaa
jb
lcall
mov
pop
inc
scas
aaa
enter
in
pop
sbbl
push
repz
les
xadd
lock
jg
cmp
cwtl
loopne
sbb
jnp
fwait
enter
stc
mov
mov
lds
or
xchg
xchg
and
aas
xor
sbb
andb
loop
shll
ljmp
icebp
xlat
xchg
in
aas
xor
repz
and
lahf
and
pop
pop
inc
mov
maskmovq
cs
movsb
call
mov
sbb
daa
add
out
inc
and
mov
arpl
pushf
out
imul
mov
jnp
movsb
aad
push
pop
xor
lods
adc
mull
adc
in
mov
xchg
cmc
and
push
repz
mov
push
sbb
insb
push
test
mov
cmp
outsb
push
cmc
lds
mov
and
into
or
fmull
pop
push
fisubl
enter
outsl
ljmp
cmc
jecxz
into
nop
enter
dec
pushf
popf
jns
enter
jecxz
lds
pop
inc
dec
mov
inc
jle
mov
imul
loop
pop
bound
test
add
loope
jno
mov
repz
call
sub
sub
imul
cmp
clc
add
inc
enter
mov
mov
into
das
pop
xchg
dec
mov
jecxz
lahf
fwait
or
bound
adcb
aaa
mov
bound
mov
test
fisttpll
cli
cmp
repz
out
in
xor
daa
loopne
outsl
stc
dec
fmuls
jb
pop
popf
push
or
test
lea
mov
and
or
test
mov
or
pop
dec
shrl
xchg
lods
jle
jmp
ret
adc
cs
jns
xor
inc
mov
xchg
test
cli
pop
imul
test
aam
leave
loop
lea
mov
mov
inc
les
mov
and
mov
push
int3
lods
xchg
leave
jb
dec
or
data16
pop
dec
inc
ja
movsl
and
rorl
pop
mov
cmp
pop
mov
or
push
test
aad
pop
sbb
repz
adc
icebp
or
push
sbb
xchg
movaps
mov
fnstenv
mov
jecxz
mov
int3
std
sub
stos
or
outsb
filds
imul
mov
insb
sbb
mov
ret
sub
xchg
orl
push
popa
imul
sub
cld
inc
std
xor
or
pop
xchg
mov
iret
push
add
mov
call
jns
push
sbb
fcom
das
jb
cmp
cmp
inc
jne
stc
icebp
adc
sbb
xchg
sbb
xlat
and
push
mov
pop
sub
cmp
sbb
les
jno
and
push
dec
inc
scas
inc
cmp
sub
push
js
xor
outsb
lahf
jae
jmp
and
lcall
push
outsl
in
rol
fdivrs
lahf
mov
xlat
xorl
sbb
pop
out
inc
inc
push
icebp
mov
sub
pop
cmp
cli
xor
out
in
ret
aam
xlat
out
orl
fmulp
mov
int3
inc
cmp
cmp
mov
aaa
fidivl
cwtl
loope
out
cmp
aas
div
insb
nop/reserved
or
xchg
xlat
mov
enter
mov
mov
push
rorl
fiaddl
and
cltd
incb
aam
push
shrl
xchg
push
rorb
sub
shrd
and
add
insl
or
in
lcall
add
mov
in
inc
sbb
les
into
enter
and
icebp
jecxz
out
sbb
sbb
imull
mov
sahf
sbb
jne
cmp
push
and
mov
mov
lock
inc
dec
imul
inc
imul
das
aas
pop
push
xor
or
fiaddl
xchg
pop
push
cmc
ficomps
syscall
xchg
fsubs
jge
inc
push
xchg
fcmove
shlb
mov
out
cmpsb
lods
into
aad
gs
fcmovu
cmp
mov
and
lcall
fildll
mov
jmp
mov
orb
push
mov
or
push
cmpsb
sbb
and
pop
mov
stos
mov
je
fwait
pushf
or
sub
into
or
scas
loopne
rcl
enter
adc
test
xchg
inc
sub
lods
push
xchg
fdivs
push
push
cwtl
insb
int
int3
or
lahf
ret
xorb
xlat
push
int
aaa
mov
jp
arpl
sbb
aaa
and
pusha
xor
xor
cmp
dec
lds
lock
in
aaa
dec
addr16
addl
push
push
or
loope
mov
jge
loopne
jno
push
aaa
lods
cmp
loop
add
inc
or
insb
cmp
jge
in
mov
push
aaa
jecxz
ret
shlb
cmp
xchg
addr16
test
unpckhps
add
jecxz
outsb
ss
std
mov
aad
ret
cmp
dec
or
mov
addr16
outsb
fs
int3
add
dec
je
or
mov
mov
mov
inc
nop
xchg
adc
aaa
subb
xchg
or
insb
cmc
cmp
aaa
xor
mov
push
dec
leave
mov
arpl
cmp
push
xor
inc
jp
push
xchg
dec
xchg
mov
jmp
aaa
add
hlt
push
addr16
insb
inc
aaa
xchg
mov
pop
outsw
stos
or
mov
test
lods
inc
adc
or
mov
ja
lock
adc
fldcw
push
cmp
dec
mov
pop
pop
fildll
or
push
mov
sub
pop
push
add
cltd
pop
sub
out
mov
enter
cltd
jbe
js
scas
aam
xchg
sbb
dec
xchg
or
insl
cwtl
fadds
or
push
in
xchg
int3
inc
mov
sub
cmp
cmc
fadds
jge
repnz
add
push
out
mov
mov
mov
cmp
xchg
mov
test
inc
arpl
adc
push
aas
pop
cltd
sub
cltd
cwtl
dec
sbb
lock
incl
adc
cld
dec
adc
add
jmp
or
adc
or
adc
aaa
ret
mov
add
or
adc
mov
mov
js
cmp
pop
rcrb
lret
arpl
add
jge
xchg
inc
cmp
in
addl
cltd
sbb
add
aaa
repnz
addr16
adcl
push
aam
bound
iret
mov
inc
or
and
add
xchg
mov
push
mov
push
dec
jl
inc
arpl
sbbl
xchg
sub
mov
dec
or
add
push
shlb
sbb
ret
xchg
xchg
adc
in
xchg
repnz
out
call
adc
push
shrb
stos
lret
or
ret
popa
dec
lea
inc
pop
int3
adc
pushf
test
lods
mov
arpl
mov
adc
inc
mov
mov
mov
and
mov
add
mov
cmpsb
inc
arpl
or
mov
std
xchg
int
pxor
mov
iret
mov
js
aaa
fdivp
pop
sub
mov
repnz
aaa
mov
or
and
test
nop
sbb
fmuls
jge
call
inc
test
ljmp
xchg
outsl
pop
icebp
adc
and
dec
aaa
mov
lds
aaa
cs
nop
fistl
and
jb
pop
adc
mov
sub
add
aam
mov
pop
jno
aaa
hlt
or
adc
jo
in
fs
outsl
or
adc
out
lret
das
xchg
pop
jo
add
inc
push
dec
fs
enter
mov
pushf
mov
push
cmp
ret
shr
daa
aaa
popf
push
loopne
movsl
fbstp
jle
sbbl
test
adc
push
cld
cmp
enter
or
dec
icebp
lds
fidivs
dec
jns
inc
mov
jne
cmp
std
mov
cwtl
sub
fnstenv
or
daa
and
lcall
cmp
or
mov
sub
negb
mov
jne
repnz
ja
imul
dec
aam
add
xchg
push
clc
fildl
insl
daa
jb
bound
popa
fildll
cltd
clc
and
mov
lret
rorl
xor
es
or
sbb
xor
cwtl
xor
loop
loopne
mov
jne
icebp
adc
mov
shlb
adc
mov
xchg
add
mov
aad
push
aaa
and
sub
das
adc
fwait
push
cmp
xor
mov
or
mov
sti
out
mov
push
jle
movsl
sar
clc
out
add
test
mov
xchg
jcxz
imul
aaa
xchg
loopne
stos
fldcw
adc
rcl
aaa
out
hlt
push
or
mov
cmp
daa
xor
aaa
adc
js
add
pusha
shlb
ljmp
dec
jmp
dec
add
or
sub
mov
jae
enter
push
aaa
cmp
lods
decb
xor
imul
xor
arpl
aad
adc
jmp
sahf
add
mov
shll
cltd
aaa
inc
inc
lret
xchg
inc
loopne
mov
aad
dec
enter
push
out
and
pushf
aad
out
push
aaa
mov
lds
or
xchg
fnstsw
js
mov
add
xchg
aad
sub
xchg
adc
jb
cmc
jmp
rol
or
mov
inc
sub
or
call
lret
xor
or
movb
add
mov
pop
jle
movsl
out
dec
hlt
aaa
mov
add
adc
sub
test
cmp
aaa
lds
mov
pop
or
push
cmp
jns
cmp
mov
sub
push
or
inc
inc
clc
lds
lahf
push
or
aaa
pop
jmp
or
popf
fwait
dec
aaa
cmp
test
add
cltd
sar
out
push
add
ss
xlat
and
mov
or
adc
cltd
movsl
jl
out
add
aaa
mov
aam
push
or
aaa
and
test
rcrl
fnstsw
mov
cmovo
fstps
dec
dec
adc
aaa
imul
in
mov
inc
xor
xor
mov
jbe
fdivrs
pop
push
aaa
mov
jmp
xchg
xor
rorl
cwtl
jno
js
dec
dec
aad
sbb
mov
jae
or
jg
subb
mov
xor
jp
lds
cld
hlt
xchg
aaa
pop
add
mov
sbb
daa
xchg
aaa
xor
loopne
push
pop
iret
jle
mov
imul
cmp
sub
sbb
push
push
adc
cmp
adc
push
xchg
or
jns
xchg
aad
jne
aaa
inc
jmp
pop
in
ret
cmp
les
ljmp
lret
aaa
mov
and
mov
pop
dec
lea
cmp
mov
dec
out
jb
jae
stos
aaa
jmp
scas
or
aam
cmp
mov
fistpl
adc
in
xchg
insl
mov
inc
or
inc
ljmp
aam
add
xchg
out
loopne
pushf
aaa
xor
or
call
js
pushf
hlt
test
mov
aaa
ds
cli
sub
pop
xchg
pop
vmwrite
hlt
lret
xor
scas
ret
movsl
shll
adc
outsb
or
push
xor
sub
aaa
or
adc
loopne
mov
mov
or
insl
cmc
dec
in
add
mov
mov
sub
popf
add
loopne
enter
aaa
mov
or
popf
push
imul
test
stos
push
ljmp
lret
orb
out
adc
popa
jne
jmp
imul
add
aaa
daa
data16
std
mov
and
mov
sub
test
xchg
dec
lahf
cmc
roll
ja
push
test
push
jecxz
das
push
test
aam
sbb
pushf
sbb
into
dec
sahf
aaa
pop
or
scas
jnp
xchg
cltd
xlat
mov
add
jecxz
test
jne
test
imul
iret
jno
inc
mov
and
sbb
mov
outsb
pop
aaa
mov
xchg
jb
adc
add
xchg
add
aaa
or
or
scas
aaa
lahf
xchg
rorl
jno
aad
rorl
dec
inc
mov
mov
push
push
std
push
lret
mov
adc
push
push
inc
divb
or
add
or
xorl
xor
setg
aaa
push
addr16
mov
pop
push
inc
aaa
or
out
cltd
cwtl
cmp
mov
mov
and
outsl
adc
sbb
inc
cmc
dec
jmp
or
sub
sbb
mov
aaa
mov
mov
dec
scas
jnp
mov
and
cmp
adc
jae
sahf
aaa
and
aam
pop
int3
std
mov
mov
aaa
inc
mov
cmp
imul
dec
ret
sub
xchg
push
lret
xor
enter
mov
ljmp
cmpsb
loop
into
jo
or
call
adc
jecxz
lods
shlb
inc
je
pop
jmp
movsb
sbb
dec
aaa
pop
xchg
push
jns
jne
push
std
mov
cmp
shll
mov
or
mov
jo
cmp
stos
or
pop
les
add
imul
aaa
inc
sbb
cmp
jne
popa
out
mov
push
scas
mov
sub
fwait
push
aaa
and
loopne
scas
das
mov
loop
movsb
xchg
cmp
pop
lods
push
hlt
adc
aaa
sub
cmp
inc
sub
xor
adc
daa
mov
cmc
jb
cmc
dec
jecxz
imul
stc
dec
imulb
dec
dec
aaa
mov
mov
nop
push
int3
aam
mov
or
scas
xchg
mov
add
gs
mov
xchg
jne
dec
aaa
orl
frstor
aam
or
aaa
cs
adc
clc
jp
jnp
lock
mov
jne
push
xor
lret
fcoms
jl
or
or
shll
std
fdivl
fimuls
or
inc
cmc
dec
mov
aaa
rcrb
aaa
adc
in
aad
sub
cmp
xchg
inc
jns
lcall
sub
aaa
mov
fisttpll
mov
shlb
out
cmc
and
cmp
stc
mov
lahf
cmp
or
pop
insb
outsb
test
mov
add
xor
push
sahf
mov
xor
xchg
pop
cmc
push
loopne
mov
shrl
cmp
push
push
dec
aaa
call
push
sbb
shlb
and
loope
or
fisubs
xchg
xor
inc
cmp
insb
or
and
sbb
xchg
mov
and
push
cmp
dec
add
sbb
or
xlat
xchg
adc
mov
mov
adc
jo
sub
arpl
cltd
xchg
addl
push
xchg
pop
or
sub
cltd
bsf
push
dec
pop
or
shl
mov
stos
push
mov
mov
mov
insb
mov
mov
jb
push
jns
cmp
imul
adc
lods
outsl
mov
jne
sbb
jbe
xor
sub
jge
mov
add
mov
xor
mov
jne
fwait
lods
sbb
sbb
out
mov
movsl
xlat
mov
mov
mov
sbb
lock
mov
test
add
gs
shrb
sub
or
rcll
syscall
aad
or
jge
mov
push
jp
jo
push
insl
or
add
mov
inc
sbb
or
pop
mov
ret
test
pop
js
jo
push
mov
jp
push
mov
stos
mov
popf
push
loopne
pop
popf
adc
stos
ss
sub
mov
inc
or
mov
scas
sub
push
mov
jno
mov
push
push
aaa
cmp
adc
mov
adc
adc
mov
movsl
sbb
mov
dec
test
in
cmp
test
xor
mov
sub
lret
gs
stos
sub
jge
mov
or
movsl
dec
imul
fldcw
stos
mov
adc
mov
adc
shrb
push
mov
jle
xlat
mov
mov
jne
adc
sbb
in
push
push
inc
jge
mov
je
push
std
xchg
repnz
inc
add
pop
dec
lods
mov
mov
cmc
sbb
mov
aad
test
adc
mov
aas
pop
mov
cmpsl
inc
dec
test
adc
sbb
popl
xor
xchg
js
sbb
jo
lods
push
push
mov
aad
mov
lahf
movsl
loopne
mov
cmp
lods
sub
les
sarl
jb
ja
push
xchg
dec
sahf
mov
and
clc
pop
cwtl
push
scas
inc
test
test
test
add
mov
or
mov
mov
mov
inc
ret
clc
dec
inc
jge
cmpsl
test
add
mov
stc
mov
sub
xchg
in
repz
int
lds
lret
xor
clc
cmp
push
pushf
and
bt
mov
sub
xor
bsf
lea
push
add
pusha
bts
sbb
mov
call
stc
call
call
pop
pushf
call
mov
pushf
mov
pushf
setl
setbe
not
lods
pushf
bt
rol
cmc
xor
jmp
test
mov
bswap
neg
mov
clc
stc
cmp
movb
pushf
call
call
and
adc
mov
pusha
jmp
and
data16
imul
out
fs
push
insb
cmp
pop
jle
es
xchg
mov
jno
call
and
decl
test
bswap
add
lea
sub
pusha
jmp
push
lock
std
std
mov
out
ret
jbe
popf
das
ret
ret
sub
pushf
mov
pop
cmp
xor
enter
jge
sbb
popa
test
dec
or
aam
push
lds
ljmp
cmpsl
test
jle
xchg
icebp
add
inc
inc
push
sub
xchg
push
scas
movsb
xchg
enter
mov
fadds
orb
jmp
sbb
inc
je
xchg
lea
jmp
incl
add
adc
push
testl
fsubp
mov
ds
inc
mov
or
iret
cmp
push
sbb
inc
sub
or
mov
stos
pop
jno
or
enter
stos
jbe
cmpsl
xchg
jns
enter
clc
dec
pop
lea
je
jmp
jo
movl
push
jb
or
imul
movsl
adc
mov
mov
xchg
dec
push
mov
xlat
mov
push
pusha
inc
sub
adc
das
je
pop
and
repz
inc
dec
loop
out
imul
jle
push
or
jmp
cmp
push
sub
add
inc
lock
jmp
movb
call
add
adc
sub
push
mov
adc
imul
or
jae
pop
fwait
cmp
inc
out
xchg
pop
sub
fsubr
ror
push
and
fs
pop
shlb
add
repnz
sub
dec
imul
sbb
sahf
leave
fildl
popf
push
aaa
les
clc
pushf
mov
and
xchg
push
sub
pop
xlat
xor
add
mov
pop
fnstsw
mov
jne
mov
imul
cmpsb
divl
jno
dec
fildll
mov
cmp
jo
ljmp
dec
shrb
xchg
and
push
pusha
xchg
scas
jb
xor
and
fistpl
stos
add
cli
lret
adc
jnp
aas
xlat
mov
dec
lret
cs
mov
aad
push
cmc
movsb
adc
lea
cli
add
jle
in
xchg
mov
ss
pushf
mov
data16
jnp
inc
clc
fucomip
and
cmp
fs
jecxz
cmp
xor
outsb
fdiv
inc
bswap
addr16
sbb
repz
pop
lea
mov
pushl
pushf
lea
jmp
pusha
movzwl
movzbw
add
mov
pushf
add
bt
mov
bt
mov
push
cmc
push
test
jmp
cmc
stc
add
clc
jmp
pusha
movl
push
mov
lea
jmp
clc
add
stc
movzwl
cmp
mov
call
mov
mov
cmc
jge
loope
sarl
inc
pusha
shl
xchg
xchg
dec
push
xchg
inc
push
insb
das
cmp
mov
cwtl
in
pop
call
mov
shrb
sarb
stos
mov
lret
and
vpcmpeqd
aam
jl
hlt
lods
dec
lcall
pop
xor
into
test
cmp
mov
lahf
jmp
push
jnp
xchg
or
data16
jecxz,pn
dec
and
jmp
inc
dec
cltd
sub
sub
sub
lods
add
hlt
adc
mov
pop
testl
add
cmp
imul
dec
shll
imul
add
rorl
mov
push
inc
push
ljmp
push
repnz
stos
popa
in
aas
xor
push
scas
int
sbb
nop
adc
pop
add
adc
jbe
ljmp
xchg
xchg
das
cmpxchg
dec
cltd
and
icebp
mov
rcl
scas
and
fstpt
in
sub
push
fldcw
xor
mov
andl
inc
and
jb
in
cwtl
scas
int
dec
xchg
push
inc
mov
shl
dec
cmp
jl
lahf
movsl
jmp
aam
push
sbb
cwtl
sub
lods
xchg
inc
lcall
enter
push
repz
dec
add
jno
inc
cmc
mov
lock
jmp
ljmp
repnz
cld
mov
pop
repz
mov
dec
std
mov
add
xchg
dec
clc
adc
in
stc
mov
pop
sbb
lahf
push
mov
push
mov
mov
mov
insl
inc
cli
sti
std
repnz
lret
sub
arpl
inc
pop
and
cmp
push
fldenv
mov
addr16
add
inc
push
mov
jl
push
ror
and
dec
cmc
jbe
out
push
lds
xor
mov
arpl
jo
jmp
sub
test
mov
shlb
sahf
int
xorl
scas
fsubrp
sub
loop
mov
stos
sbb
sahf
xchg
mulb
jo
mov
rcll
mov
cmp
les
dec
outsb
hlt
push
inc
nop
pushf
push
adc
cmc
xor
mov
inc
fstps
sub
sub
mov
stos
xchg
and
mov
ds
jg
push
mov
rorb
pushf
imul
bt
bt
add
pushf
lea
jmp
adc
lea
push
pushf
pushl
ret
nop
jl
ss
add
fiaddl
test
xchg
mov
imul
lock
mov
outsb
inc
out
pop
dec
mov
inc
sbb
xchg
jecxz
data16
lahf
add
loopne
les
add
sub
sti
or
sarb
gs
add
dec
daa
inc
jl
lea
dec
cld
sub
ret
shrb
cwtl
cltd
pop
insb
rclb
mov
mov
jns
cs
xor
testb
in
test
push
cmp
jb
cwtl
add
popa
pop
into
mov
or
aad
pop
fimuls
mov
mov
nop
push
pusha
jb
adc
enter
adc
fiadds
mov
xchg
xlat
imul
adc
cmpl
pushf
loop
shll
fmuls
lcall
cmpsb
lods
cmp
push
cmc
xor
adc
xchg
into
xchg
daa
inc
inc
pop
int3
lock
lods
sub
push
rcll
push
popf
cmp
dec
xor
test
cmp
popf
sahf
mov
lret
or
jno
insl
out
sbb
out
or
jmp
pop
bt
clc
clc
rol
push
xor
clc
cmp
add
jmp
stos
xchg
and
and
enter
pop
arpl
cmp
inc
lahf
daa
rorl
hlt
jo
add
push
jb
xor
push
out
stos
lods
incb
rorl
adc
and
xor
iret
jg
aaa
push
gs
iret
loope
inc
pushf
test
and
shll
jmp
scas
xchg
mov
xor
loop
test
adc
fsts
les
js
jns
mov
cwtl
int3
push
mov
cltd
dec
int
test
fmulp
inc
in
pop
xchg
and
pop
test
xorl
xor
in
das
mov
loopne
jo,pt
push
repz
ds
jnp
jae
mov
gs
xchg
dec
bswap
daa
stos
dec
or
stc
xchg
loope
pop
or
jae
mov
jle
push
leave
aam
fsts
jo
shll
sub
xchg
mov
sarb
dec
aad
hlt
aad
movsl
sahf
add
ss
push
ss
out
or
enter
fwait
mov
xchg
aaa
xor
jle
call
std
jle
aaa
mov
imul
mov
into
aas
jmp
mov
add
push
out
ds
icebp
sbb
pop
outsl
add
lret
insl
roll
je
stos
inc
imul
movsl
inc
jle
js
xor
and
mov
jno
loop
out
inc
inc
lea
setno
inc
xor
jmp
mov
sub
pusha
jmp
movl
push
pushl
popl
movb
mov
movl
pushl
ret
jmp
pushf
jmp
cmpb
pusha
push
lea
jne
rol
mov
mov
push
pusha
stc
test
add
test
push
cmc
pushl
movzwl
lea
shr
cmp
shl
mov
jmp
call
add
pop
push
and
adc
push
adc
push
daa
push
adc
push
push
and
adc
push
sbb
adc
push
sbb
push
and
pop
push
adc
push
adc
sbb
sbb
and
and
push
push
and
ror
push
sub
movsbl
not
push
shrd
lea
lea
push
jmp
leave
cld
mov
sub
adc
loope
fs
or
movsb
pop
shlb
xchg
cmp
fmuls
adc
cmp
mov
scas
add
les
arpl
mov
outsb
inc
mov
and
cmp
jne
cmp
xchg
imul
mov
gs
aas
fs
push
daa
or
popa
repz
divl
inc
int
sbb
xchg
mov
inc
fwait
sbb
pop
jmp
das
pop
das
pop
adc
xchg
movsl
xor
and
jl
cmpsl
mov
into
fcomps
cmp
xchg
out
push
in
std
xlat
movsl
loope
mov
cwtl
cmpsb
xchg
movsl
push
xchg
xchg
push
ret
jecxz
ljmp
and
push
dec
and
in
mov
sub
cmp
or
cmp
fsubrp
adc
or
adc
mov
in
gs
jmp
dec
pushl
adc
mov
pushf
pushf
mov
lea
jmp
bound
cmp
sti
notl
xchg
mov
outsb
push
jne
lcall
sbb
jge
mov
jmp
cli
xor
push
out
out
push
mov
pushf
pop
cmpsb
or
pop
lret
xchg
adc
jge
jg
ss
idivb
popa
lret
sbb
addr16
je
push
in
std
in
cmp
adc
xchg
fmul
cmp
std
out
mov
shr
addb
sbb
jne
mov
js
testb
js
jecxz
xchg
adc
jno
ds
sub
ret
fists
aam
mov
jmp
sub
call
clc
cmp
pushf
pusha
push
call
sbb
sar
mov
rcl
mov
pushf
add
adc
movsbl
shr
pusha
mov
lea
sub
shrd
add
bswap
movzbl
jmp
cmp
daa
scas
outsb
mov
cwtl
dec
fldenv
js
je
sti
add
pop
shll
pushf
popf
addb
les
sbb
lods
inc
lods
setae
lds
and
int
adc
shrb
xor
sahf
and
inc
bound
repnz
add
xchg
pop
inc
in
arpl
pop
and
int3
adc
lret
cmpsb
mov
dec
hlt
inc
aad
or
dec
out
insb
mov
dec
mov
and
clc
pushf
xchg
xchg
movsb
xor
cmp
jmp
jo
mov
loope
call
sbb
push
aaa
mov
pop
clc
pushf
xchg
in
popf
mov
outsb
aaa
mov
push
rcll
rorb
ret
outsl
xchg
push
das
inc
arpl
mov
mov
test
les
in
mov
imul
push
test
lea
jae
stc
clc
xor
call
cld
inc
outsb
mov
jge
aas
sbb
sti
add
out
pushf
jg
push
mov
xchg
clc
inc
nop
je
js
mov
jnp
inc
mov
leave
pop
sbb
nop
fidivl
ss
mov
inc
sarl
repnz
or
add
fwait
jmp
clc
mov
jmp
adc
scas
jmp
outsl
or
sub
push
inc
stos
mov
stos
xorl
add
gs
xchg
sbb
sub
inc
fistpl
sub
mov
arpl
inc
xchg
push
mov
mov
mov
inc
push
dec
cld
jmp
cmpsb
dec
test
bt
cmc
xor
cmc
ror
pushf
cmc
test
mov
bt
cmp
clc
add
jmp
sub
add
jg
clc
cmp
pushf
call
pushf
push
movl
mov
pusha
lea
jmp
test
add
sbb
movl
cmp
bsf
mov
jmp
adc
pusha
jmp
in
mov
mov
jl
push
xchg
push
popa
ss
xorb
cld
pop
pushl
nop
dec
addl
add
pushf
sbb
enter
insl
outsb
lds
mov
or
mov
mov
inc
leave
add
push
xchg
inc
mov
ljmp
dec
outsl
in
loope
inc
loopne
xchg
mov
sub
xor
and
cmp
das
test
fwait
xlat
inc
dec
movsl
push
je
adc
xchg
cmp
jge
fs
insb
ljmp
loop
mov
jle
or
sbb
adc
and
jge
mov
andb
push
mov
push
cwtl
fstpl
jb
cmp
jle
mov
inc
mov
das
sub
cmpxchg
dec
cmp
test
lcall
and
test
repnz
test
mov
jno
leave
jge
movb
pushf
lea
call
call
jmp
pushf
pushl
movl
pusha
mov
movb
movl
pusha
lea
jmp
lea
jae
pusha
add
call
cmp
into
xchg
sub
rorb
out
ljmp
shll
movsl
push
fistpl
es
repnz
push
setg
jl
pop
cmp
mov
dec
xchg
jmp
inc
lea
je
shr
stc
push
pushl
add
lea
call
daa
xlat
mov
inc
mov
and
push
sub
mov
push
sub
xlat
mov
dec
arpl
cmp
pop
leave
roll
aas
cmp
cmp
mov
push
divl
mov
ret
pop
cli
sbb
sbb
sub
sub
jae
int3
rcr
sbb
dec
cmp
movsl
push
xor
movsb
enter
add
test
pop
enter
mov
sub
xchg
ss
lahf
adc
xlat
pushf
mov
lcall
inc
stos
pop
push
sub
cmp
xor
jno
js
mov
pop
das
mov
jg
mov
inc
dec
dec
xor
pop
fmull
mov
sbb
jl
int3
jmp
pop
or
scas
mov
pop
fstps
cmpsb
mov
fmuls
xchg
in
sub
add
add
addr16
or
add
push
jmp
mov
mov
lea
jbe
sbb
sub
sub
ror
mov
shr
stc
shrd
inc
mov
dec
stc
push
add
xchg
pusha
shr
btr
mov
test
or
sbb
add
lea
movsbw
movw
mov
pushf
call
and
pushf
cwtl
push
pop
add
les
ljmp
fsubrl
popa
sbb
pop
jp
cmp
pop
ja
pop
push
movsb
addr16
xlat
aaa
gs
xor
hlt
mov
sub
pop
xchg
out
inc
or
shrl
jno
dec
add
xor
cmp
test
lret
push
sbbb
sub
aas
popa
xor
dec
in
out
jno
and
nop
call
inc
not
not
clc
xchg
pushf
mov
inc
pushf
shl
bt
mov
test
push
xchg
or
mov
movw
stc
movl
pushf
sub
push
movb
mov
rep
call
pushf
movl
jmp
pusha
push
mov
lahf
push
movl
pushf
lea
push
call
pop
movsb
fdivrl
or
outsb
clc
cld
icebp
lods
fldcw
sub
jecxz
add
pop
aam
and
dec
fbstp
rcll
std
jns
arpl
mov
lock
cs
mov
and
in
lret
sahf
dec
and
lods
sahf
jae
ja
jb
inc
insb
enter
push
iret
xor
lods
idivb
je
aaa
sub
rcrl
daa
xchg
pop
inc
clc
cmpsl
adc
mov
jno
xchg
in
rorl
push
clc
or
pusha
push
push
pushl
lea
jne
movsbw
bsf
mov
bt
or
push
jmp
pop
mov
stc
dec
mov
and
sub
and
inc
xor
lea
jmp
pushf
call
outsb
test
cli
mov
jbe
fs
mov
aas
faddp
jg
jae
aaa
pushf
mov
enter
fwait
jge
xchg
sbb
mov
roll
cltd
or
adc
dec
jae
push
add
add
addr16
rol
inc
int
std
data16
cpuid
in
gs
mov
xchg
cli
cwtl
dec
jbe
pop
pop
aaa
sbb
push
jno
add
xlat
bound
push
shrl
rorb
jmp
jmp
fcoml
xor
data16
or
pop
mov
stc
pop
mov
pop
push
dec
outsb
mov
repz
dec
scas
inc
fsub
arpl
xchg
add
std
das
data16
add
mov
decl
mov
movsb
loop
dec
cmp
mov
pusha
inc
insl
shll
inc
sub
fcomi
pusha
lcall
fiadds
fwait
pop
stc
jge
mov
jns
aad
push
jmp
add
lock
push
jbe
sub
test
push
mov
pop
mov
mov
divb
scas
and
outsb
mov
mov
out
cwtl
lcall
jo
push
addr16
push
jl
jl
sbb
pusha
mov
inc
pushf
mov
mov
push
mov
scas
arpl
mov
xor
pop
in
sbb
aaa
sbb
out
jmp
xchg
inc
frndint
inc
iret
mov
rcl
imul
push
jno
lret
movsbw
mov
push
movsbw
not
mov
mov
lahf
mov
bswap
lea
pushf
jmp
movl
pushf
pusha
movb
lea
jmp
cmp
movb
mov
movw
lea
jae
pusha
pusha
pushl
pushl
lea
jmp
and
lds
mov
popf
mov
ds
and
loopne
add
pop
pop
sub
pop
mov
push
lods
pop
dec
rcrl
lret
bound
pop
js
andb
mov
xchg
inc
mov
mov
or
into
inc
cld
mov
call
lea
test
imul
das
xor
inc
and
je
dec
sbb
dec
je
mov
aam
or
or
mov
sub
jmp
xchg
outsl
jle
jo
mov
cli
hlt
idivl
inc
ljmp
call
pop
add
lret
inc
adc
cwtl
xchg
cltd
in
xchg
jge
mov
leave
inc
mov
mov
roll
callw
inc
sub
outsl
pushl
aad
or
stos
xchg
and
dec
aam
shll
test
mov
jno
addr16
pusha
pushl
mov
lea
je
cmc
add
pusha
push
lea
jmp
pushf
call
orb
xchg
add
scas
add
jae
ds
jg
jmp
jae
out
mov
lock
jecxz
xor
inc
sub
mov
leave
pop
inc
lcall
pop
clc
scas
lods
insl
scas
dec
or
push
into
and
jno
mov
jmp
jne
pusha
aad
cwtl
xor
call
call
bt
ror
call
mov
call
cli
mov
je
cltd
push
movsl
decb
sub
aam
cmp
or
mov
mov
and
ljmp
je
dec
push
mov
aas
lods
push
sub
mov
lcall
sub
enter
cmp
push
aaa
mov
bswap
cmp
mov
xor
mov
jmp
pop
rep
call
lods
lock
aam
xchg
cmp
xchg
out
cmp
add
pushw
xor
lds
imul
loopne
jb
add
scas
sbb
jecxz
mov
push
or
jns
ljmp
mov
fsubp
xchg
add
movsb
scas
mov
push
hlt
int3
mov
cmp
sub
sahf
fwait
mov
pop
jp
or
mov
iret
sub
adc
icebp
dec
scas
sbb
xchg
les
aad
clc
cmc
push
xor
test
ljmp
push
or
inc
test
inc
pop
xchg
xor
shr
cmpb
sub
xor
inc
push
jnp
cmp
pop
xor
xchg
cmp
repnz
mov
inc
dec
sahf
das
push
jge
jg
sahf
ret
xchg
adc
pop
pop
xchg
adc
xor
cmp
add
popf
mov
xchg
mov
fs
and
push
arpl
ficoms
enter
lcall
cwtl
bound
popa
and
cli
dec
add
inc
xchg
lods
sahf
nop
xor
mov
jge
add
rorl
sbb
pop
and
and
or
xor
mov
cmp
pop
inc
ret
xor
jno
pop
rcll
cmc
pushf
rol
bt
cmp
xor
call
mov
aad
sbb
push
adc
ret
bound
xlat
push
pop
and
das
push
aaa
push
pop
stc
sbb
lea
jge
cmpsb
xor
popa
xor
pop
rclb
scas
inc
leave
jno
push
adc
push
push
rolb
adc
adc
insb
rol
call
jno
sbb
push
jnp
das
aas
popl
push
fxch
in
mov
lret
push
and
cmp
loope
adc
xor
clc
sub
std
clc
ss
adc
fidivrl
sbb
add
push
fdivl
mov
inc
bnd
iret
fisttpll
js
mov
mov
pop
rolb
clc
js
scas
inc
out
es
push
lods
or
mov
xor
jp
data16
enter
aas
out
push
add
fstpl
ds
jmp
scas
bsf
shrd
cmp
xchg
jmp
add
push
movb
ror
movw
inc
cmp
std
pushw
popfw
pushf
inc
jmp
inc
push
movb
lea
jmp
mov
inc
mov
pushl
mov
movb
bt
movb
sub
pushl
pushf
rep
jmp
mov
movl
movb
lea
jmp
call
pushl
movl
pusha
lea
jmp
jne
btc
rcr
mov
test
add
pusha
movzwl
bswap
lea
bt
or
mov
clc
add
call
jmp
inc
stc
rol
call
jmp
jmp
sahf
inc
pop
or
and
inc
cmpsl
cmp
sbb
stos
cmpsb
pop
mov
mov
mov
inc
data16
cli
mov
sahf
pop
rcr
inc
xchg
xchg
jecxz
cltd
mov
and
lock
hlt
movsb
sub
in
ret
inc
adc
sti
pop
mov
and
xchg
mov
and
ror
mov
divb
or
pushf
fstpl
insb
mov
cmpsl
andl
xor
into
fnstsw
sub
push
daa
jmp
jmp
decl
mov
test
cmpb
or
stc
cmp
adc
or
mov
jl
fsubrs
aas
adc
pop
mov
jnp
push
pushf
outsl
or
mov
inc
mov
sub
subl
mov
addr16
mov
pop
jmp
stos
xor
dec
push
or
out
push
xchg
jle
cs
inc
mov
pop
sti
mov
aam
xor
push
insl
insb
mov
mov
dec
test
sub
mov
out
sbb
sub
cmp
xchg
scas
out
fcomps
test
shl
push
loop
orl
push
pop
scas
call
sbb
push
sub
push
xor
sub
fimull
lcall
push
cmc
cwtl
pop
call
outsl
in
sar
push
test
push
lock
test
scas
rorb
mov
adc
cli
add
mov
pop
cmp
push
jns
sarb
je
gs
or
jmp
push
ljmp
daa
mov
cmpsb
mov
and
push
cmp
jmp
fcompl
movsb
or
push
mov
shrb
stos
push
mov
xor
cmpsb
mov
mov
test
loop
xor
mov
and
jmp
push
gs
mov
mov
test
insb
xor
cld
mov
mov
aaa
fs
sti
cli
lcall
ds
or
add
and
and
rorl
mov
mov
es
mov
les
jp
inc
hlt
xchg
jno
inc
clc
xchg
pusha
jmp
lea
movl
movb
sets
lea
jmp
lea
jae
jmp
clc
cmc
clc
add
jb
push
mov
lea
je
pusha
cmp
add
pusha
lea
jmp
pop
push
out
lcall
fiadds
xchg
jb
push
mov
sti
or
test
jge
hlt
push
sbb
ljmp
stc
xchg
cwtl
mov
mov
cmp
xor
sub
xor
jg
mov
xor
sbb
mov
cld
xchg
xor
in
insl
outsb
push
and
test
sbb
inc
iret
mov
out
pop
add
xchg
xchg
jns
mov
je
xor
jl
mov
push
clc
push
inc
mov
push
ds
movb
jmp
cmp
push
cmpsb
push
xor
mov
add
xor
test
sbb
xchg
xor
sub
pop
lods
cwtl
push
mov
lcall
ljmp
ficoms
jle
jg
wbinvd
and
or
pop
lods
stc
pusha
sbb
test
fidivs
xor
and
sub
je
cmp
sub
dec
inc
sub
mov
sub
jmp
jle
jmp
ret
pop
inc
jne
leave
aaa
mov
dec
daa
push
out
jmp
rol
and
lea
jae
dec
shrd
movsbl
mov
dec
shld
mov
pusha
mov
pusha
pushl
mov
cmc
xor
mov
push
pushf
repnz
jmp
add
aad
xor
mov
mov
inc
mov
fs
cmp
and
adc
push
mov
jbe
cs
jg
xchg
mov
in
sub
fiadds
test
cli
adc
fwait
outsb
adc
mov
adc
repz
in
in
xchg
test
dec
mov
cmc
sub
pusha
and
pop
out
adc
ret
add
jns
push
adc
add
test
fstl
fs
cmp
cmpsl
in
cs
or
push
push
sub
push
jo
push
xchg
daa
rolb
cmp
push
iret
cmp
push
mov
pop
inc
xchg
cs
fwait
sub
rclb
lret
movsb
cs
daa
lods
sbb
sub
mov
pop
dec
test
js
xchg
sub
adc
sub
pop
sub
xchg
pop
or
push
jmp
repz
call
jmp
pusha
not
movb
not
mov
setne
bswap
lea
jmp
sub
aad
dec
push
inc
jno
std
pop
and
dec
sub
mov
and
add
cmp
cmp
jnp
push
jl
inc
ljmp
fldl
idiv
adc
adc
cmp
aaa
xchg
add
push
jns
into
fmull
xchg
in
outsl
add
pop
adc
push
or
repnz
adc
mov
dec
adc
idivb
fdivr
jecxz
stc
push
adc
and
lcall
pop
imul
out
ret
adc
jmp
push
push
cmpsb
xor
incl
xor
cmp
leave
imul
sub
and
jg
cmp
sbb
ds
arpl
mov
push
add
cld
and
cmp
sti
mov
scas
in
lods
aas
add
pop
jmp
test
sub
gs
jo
scas
pushf
adc
pushf
or
mov
lcall
jbe
movsb
lods
lds
cmp
stos
xor
push
out
add
mov
adc
and
fwait
lret
mov
sbb
jo
and
lds
aad
cltd
repz
mov
div
push
aaa
loopne
adc
loope
push
movsb
mov
pop
mov
hlt
or
lret
jl
inc
mov
xchg
xor
pop
repz
call
mov
sub
jno
mov
sub
incl
push
mov
dec
inc
or
gs
xor
shrl
mov
lods
dec
sarb
sbb
icebp
push
js
scas
jo
aas
outsb
mov
test
inc
sbb
adc
sbb
xchg
xor
sahf
jp
addps
jecxz
jmp
mov
cli
decl
and
jae
push
cmc
sub
mov
movw
lea
call
call
pop
ljmp
popf
aad
ss
std
out
push
or
nop
mov
std
dec
jl
shl
arpl
mov
test
sbb
sub
movsb
outsl
xor
push
add
xor
into
sbb
repz
test
repz
jmp
and
sub
js
xchg
in
in
add
scas
sbbl
adc
xlat
mov
jo
into
mov
loope
outsb
addl
xorl
loop
push
pop
push
out
imulb
fs
xor
movl
and
lea
call
pushf
mov
jmp
pushf
adc
pusha
movb
mov
pushf
lea
jmp
call
push
dec
cltd
sub
push
cltd
cmc
popf
lock
iret
hlt
push
sbb
aad
or
stos
inc
push
pop
lods
xor
mull
cmp
and
lcall
sub
test
xbegin
arpl
movsb
fldt
lcall
test
scas
sbb
xchg
jmp
es
rcrb
jb
pop
or
fwait
int3
mov
popa
or
xchg
stc
sbb
ret
mov
mov
imulb
out
arpl
ret
push
outsl
aaa
mov
into
outsl
int3
mov
das
pop
pusha
loop
jle
mov
cmp
adc
std
xor
cli
and
cmp
xor
popl
mov
fsubr
mov
push
jne
leave
sbb
flds
mov
sbb
pusha
pusha
movl
jmp
adc
scas
mov
mov
test
xchg
pop
loopne
pop
sbb
loopne
lcall
lds
addl
mov
mov
pop
sbb
sub
mov
ja
sub
mov
scas
pop
in
mov
fsubr
jno
cmp
mov
adc
ljmp
jmp
xor
call
imul
cld
enter
jnp
popf
mov
inc
mov
mov
pop
jns
and
jg
das
gs
sbb
mov
pop
xlat
ss
mov
orl
loopne
adc
rclb
cmp
into
xchg
push
xlat
cmpb
in
in
scas
mov
aad
in
xchg
rcrl
fsubl
mov
js
movsb
and
roll
cmp
xchg
cli
push
pop
adc
out
les
es
fdiv
and
andl
push
fcomip
pushf
pop
stc
push
cmpsl
or
imul
pop
sarl
js
outsb
inc
aas
ret
xor
ficoml
outsb
sbb
xor
sub
push
dec
les
clc
sbb
sub
add
leave
aaa
sub
nop
cmp
faddl
xchg
mov
stos
add
xorl
fdivl
clc
push
and
fdivrl
push
shll
mov
enter
andb
lahf
lea
lret
lret
mov
sub
aas
jns
gs
push
xor
test
dec
jmp
loop
lea
call
push
movb
mov
pusha
lea
jae
bt
pushf
sub
push
pusha
movw
lea
call
pusha
pushf
lea
jae
pushf
mov
inc
not
inc
not
mov
pushl
jmp
jmp
jmp
call
out
mov
mov
ds
lret
and
lret
je
inc
jmp
mov
pop
jg
mov
movd
add
inc
sub
pusha
lods
stos
dec
lahf
cmp
pusha
shrl
movsl
mov
sbb
jmp
std
movzbw
lea
jmp
movl
pushf
pusha
push
lea
jmp
pusha
pusha
call
call
call
jmp
lea
jb
pusha
mov
movw
pushf
pushl
ret
sub
call
add
out
mov
xchg
sub
dec
out
inc
mov
dec
mov
stos
lret
out
inc
sub
mov
movb
cmp
lahf
sub
push
mov
add
sub
jno
sbb
jno
jnp
iret
pushl
lea
ja
rcr
sub
bswap
lea
add
bsf
pushf
add
mov
adc
bt
or
dec
mov
stc
push
pushl
cmp
repnz
pushf
mov
push
lea
jne
mov
call
movl
push
pushf
pusha
push
lea
jmp
movl
jmp
inc
jmp
add
add
jmp
sub
aad
aad
movsl
iret
push
iret
mov
out
ja
dec
pop
pop
sub
jge
lods
jno
xchg
aaa
adc
xlat
pop
jb
fadd
and
dec
push
mov
and
int
ljmp
jmp
inc
inc
lret
test
es
jb
xor
rorb
or
fldt
pop
je
mov
cs
pop
adc
fs
pop
mov
jne
stos
test
ret
dec
jmp
das
push
movl
jmp
mov
push
aad
mov
xchg
push
fstl
pop
push
inc
movsl
jae
pop
fsub
adcb
fs
sub
cmc
xchg
aaa
cld
and
or
mov
pop
mov
sahf
les
fld1
and
call
add
inc
leave
pusha
mov
mov
xor
arpl
rol
sbbb
pop
je
fwait
pop
adc
pop
xor
pop
jo
gs
frstor
jmp
sar
and
inc
and
lcall
add
jmp
movb
dec
stc
test
cmp
mov
lea
not
lahf
mov
jmp
lock
or
xor
out
subb
repz
lcall
scas
add
pop
and
adc
rcll
cltd
call
in
aam
iret
lret
std
aaa
stos
loope
lods
fcmovnu
stc
push
mov
pop
into
add
mov
movsl
dec
lret
pusha
daa
jae
insb
push
aaa
movsl
and
jne
lcall
addb
mov
mov
mov
loope
in
leave
dec
icebp
xchg
jmp
imul
jmp
jno
call
jmp
mov
cmc
cmp
pushl
push
call
mov
aas
test
inc
sahf
imulb
mov
and
push
xor
pop
dec
sbb
negl
cmp
sub
inc
pop
push
push
dec
in
enter
cwtl
js
sti
sahf
test
leave
sub
or
ja
test
ss
adc
enter
xchg
imulb
hlt
dec
jno
out
sub
xor
iret
vpcomw
and
out
std
jmp
sahf
pushf
mov
jmp
pushfw
popw
not
not
setb
mov
jmp
pop
push
ljmp
mov
outsl
out
ret
idivl
jnp
pop
into
mov
popa
jmp
pushf
les
cmc
stc
sbb
jno
ret
xchg
aaa
push
cmpsb
int3
jae
cmp
in
lods
scas
lods
fistpll
lock
mov
pop
jmp
sub
movsb
pushf
pushf
bswap
not
mov
pushl
pushl
push
pushf
lea
jmp
pushf
jmp
jmp
lods
sub
pusha
neg
stc
pushf
rol
not
rol
test
pushl
setp
shr
xor
mov
seta
adc
add
clc
ror
sets
not
inc
pushf
jmp
pushf
lea
jne
not
call
call
test
iret
popa
cs
ret
outsb
mov
xor
mov
xchg
ja
xor
mov
sub
xor
sbb
adc
lret
insl
xchg
or
fwait
daa
jle
lea
jno
call
cmc
stc
sub
push
jmp
lea
je
jmp
jmp
bt
clc
ror
jmp
dec
push
cs
pop
pop
or
adc
cmp
ja
insb
mov
pop
jo
mov
sub
lahf
mov
ja
ja
stc
in
mov
pop
cmp
aas
stc
dec
cmp
int3
jnp
mov
pop
mov
fwait
daa
jle
push
mov
lea
call
pushl
movl
pushf
mov
pusha
movl
pushf
pushf
pushf
push
lea
jmp
jl
sti
mov
pop
mov
sub
fisubrl
ror
bound
sbb
or
mov
mov
inc
mov
sbb
xor
add
movsl
loopne
push
mov
push
lret
stos
out
dec
jge
or
adc
repz
xchg
test
repnz
push
add
cmp
imul
test
cs
mov
cltd
jno
nop
push
xchg
pusha
dec
cmp
shl
jmp
lea
ja
call
adc
ret
and
ljmp
sub
cli
andb
in
nop
scas
inc
add
repz
mov
inc
sub
dec
push
daa
sti
pop
mov
sbb
inc
xor
pop
mov
sbb
mov
pusha
mov
cmc
jmp
push
lock
std
std
mov
xchg
gs
ret
ret
jae
mov
jge
imul
add
ss
pop
pop
cld
lods
jge
mov
dec
ds
aam
pop
iret
add
call
cwtl
out
test
push
insl
cltd
inc
cmpl
add
xchg
push
cmpsb
test
push
enter
enter
roll
sbb
push
and
and
pop
push
pop
push
and
sub
and
push
and
push
adc
sbb
push
push
and
adc
push
sbb
adc
push
sbb
push
and
pop
push
adc
push
adc
sbb
sbb
and
and
push
push
and
aam
add
js
adcl
mov
test
ds
bound
inc
nop
dec
push
inc
push
test
shlb
test
mov
sbb
popa
xchg
ja
sbb
leave
popf
repz
psrld
nop
dec
test
and
fcoms
jmp
mov
mov
pushf
push
jmp
lock
mov
test
repz
inc
ret
push
das
and
adc
frstor
jo
push
in
rorl
loopne
adc
push
inc
cli
movsb
sar
gs
call
shl
clc
repnz
int
in
loopne
pop
mov
mov
mov
inc
jns
jb
es
xchg
sub
and
scas
push
mov
push
jge
sti
insl
into
push
xchg
and
pop
mov
and
lret
jg
adc
or
int3
xor
ja
cmp
into
mov
das
adcb
iret
jbe
push
mov
int
scas
sub
jmp
and
pop
in
stos
es
ret
push
xchg
das
xchg
mov
inc
insl
addl
int3
pop
mov
lret
shr
jbe
ret
out
out
icebp
push
jmp
aas
or
shrl
sub
mov
shl
fldl
pop
pushf
clc
popf
scas
pop
mov
sahf
cld
cmp
inc
inc
mov
sti
inc
fcoms
pushf
push
pop
jp
int3
xor
aas
add
repz
sub
jmp
and
stc
neg
lea
jle
cmc
cmc
stc
rol
call
call
pop
ficompl
in
rcrb
sbb
push
outsb
jno,pn
add
mov
push
enter
int
popa
loope
sub
out
int3
jnp
daa
xchg
add
aad
mov
lock
fidivrl
rcll
and
sub
inc
nop
addb
int3
test
clc
jl
fmulp
sbb
lods
bswap
add
mov
mov
enter
jb
out
fildl
and
adc
push
xchg
bound
adc
ret
fidivrs
cmp
popf
movsb
popa
nop
push
sub
daa
sub
mov
outsb
pop
repz
nop
jle
rolb
in
sbb
out
or
fstp
outsb
xor
repz
inc
mov
pop
mov
test
cwtl
jmp
shrl
filds
mov
fnstenv
mov
enter
xor
xchg
sub
sbb
ja
aaa
orl
repz
loope
lret
test
in
out
mov
pop
daa
dec
mov
cwtl
xor
pop
into
push
rol
pop
lods
xor
xor
or
add
test
filds
fstpt
fs
fsubrs
mov
sbb
mov
scas
jae
negb
jo
imul
and
stos
xchg
daa
call
shll
xchg
lods
fistpll
pop
sti
mov
add
dec
mov
xchg
arpl
rorl
fdivrl
inc
shl
outsb
lcall
mov
mov
cmp
adc
mov
aam
mov
sub
dec
mov
sar
pop
sbb
ja
jo
cmp
je
loop
lods
mov
jo,pt
jno
sbb
jmp
popa
mov
stc
xchg
xchg
and
inc
repz
shll
loopne
test
fstl
lds
bound
test
into
ret
mov
and
rcll
xor
testb
sbbb
fcoml
xchg
inc
aad
dec
cltd
sub
setae
or
xlat
aam
sub
out
adc
fsubs
xlat
sub
sbb
sub
cltd
scas
mov
adc
sbbb
dec
mov
pushl
xor
clc
jmp
jmp
call
pusha
or
movb
call
inc
mov
pusha
pusha
inc
not
pushf
not
mov
lea
call
mov
pushf
pushf
test
pusha
jmp
mov
xchg
movsbw
pop
lea
pushl
popl
call
pop
push
dec
sbb
loope
or
cltd
mov
jb
jb
popf
jbe
mov
pop
pop
add
into
inc
cmpb
int
jmp
inc
add
data16
in
hlt
pop
shlb
jb
popa
sbb
sbb
cltd
fcomp
bound
ljmp
cmp
mov
xchg
xor
sub
lret
inc
jo
jl
mov
jo
dec
pop
dec
daa
popf
cwtl
pop
xchg
add
push
pop
jecxz
outsb
shr
push
stc
or
mov
jl
rcrb
pushl
push
xor
pop
repz
jb
dec
ds
daa
pushf
cmpsl
leave
sbb
cltd
std
and
mov
and
or
shlb
xchg
pop
inc
mov
pop
xchg
dec
dec
inc
in
dec
daa
fwait
jecxz
mov
imul
mov
arpl
das
mov
aad
jmp
sarb
fistps
movsl
push
andb
int3
lods
dec
and
sbb
lcall
rorl
push
js
mov
popf
jns
aas
pop
lahf
bound
add
pop
and
pop
rolb
repnz
add
jg
cwtl
ja
inc
pop
mov
mov
adc
ret
mov
lods
or
xor
xchg
out
or
dec
sbb
ret
mov
shll
cld
pop
cmp
push
mov
dec
jecxz
push
mov
xor
repz
enter
rorl
sbb
ljmp
aam
jbe
pop
fildl
ds
push
pop
imul
les
out
mov
mov
jns
mov
test
mov
out
adc
sbb
jl
ret
sbb
out
mov
test
dec
sbb
mov
cmp
push
sbb
dec
lahf
adc
insl
insb
inc
ret
shrb
jp
gs
mov
mov
jno
js
mov
jg
pushf
mov
mov
mov
movzbl
pop
push
mov
movb
pushl
ret
jnp
pushf
movl
push
movw
lea
jmp
mov
seto
push
cwtl
pushf
lea
lea
mov
jmp
jg
pusha
pusha
xchg
push
mov
pushf
mov
dec
cmp
push
call
pop
mov
lea
xchg
movsb
add
enter
cmpsl
xchg
stos
jnp
cmp
sub
xlat
adc
test
adcl
inc
push
push
xor
popf
inc
jne
ljmp
push
sub
int3
or
stos
je
dec
pop
lret
ficomps
icebp
or
outsl
lcall
sbb
insb
lret
outsb
outsl
sbbb
adc
push
je
push
sub
sti
std
lock
jmp
jae
add
fs
imul
add
cmp
add
mov
xor
dec
nop
push
popf
jb
mov
loopne
nop
mov
mov
sbb
mov
inc
sub
aas
xor
jae
aaa
repnz
out
ja
mov
jo
outsl
inc
cld
mulb
mov
cmc
cmp
add
clc
mov
bt
mov
pusha
pushl
clc
test
cmp
push
call
mov
cmp
fnstcw
and
dec
in
out
mov
dec
sbb
movsb
lds
scas
ljmp
and
into
andb
mov
pop
or
in
add
sub
mov
insl
fistpll
pop
mov
ja
cmpsl
lahf
lret
adc
mov
lods
push
mov
jp
sahf
push
hlt
js
or
sahf
test
test
push
repz
xchg
fldl
pop
inc
push
out
ljmp
and
push
cltd
or
stos
mov
cld
mov
or
sbb
xchg
and
or
cli
cmp
or
add
pop
sbb
push
jmp
sub
pushl
lea
jae
call
movzbw
movl
movzbw
jmp
lea
ja
jmp
pushl
pushf
lea
ja
push
pusha
jmp
mov
mov
sbbb
int3
adc
push
mov
sub
jle
cli
mov
mov
testl
pop
aas
dec
sub
adc
sbb
mov
js
or
sbb
and
dec
pushf
push
mov
jp
aam
mov
lock
cwtl
push
pop
fxch
jl
mov
mov
mov
fsub
mov
sub
mov
mov
jo
pusha
movsb
ss
push
fildll
push
inc
inc
and
int3
lds
fisubrl
inc
scas
lea
sbb
test
ja
xchg
inc
mov
xlat
mov
aam
pop
into
hlt
orb
fwait
loopne
filds
push
das
pop
mov
and
fistl
or
gs
adc
fldl
pop
xor
inc
testb
out
mov
jecxz
add
sbb
push
cltd
ja
cmpsl
outsb
xor
xor
jmp
xor
int3
mov
ret
ss
aam
mov
pop
sub
out
mov
sub
mov
movsb
sub
mov
mov
dec
js
arpl
dec
loop
das
and
imul
lret
sub
xor
pop
mov
jecxz
outsl
inc
jl
js
inc
jmp
fwait
jmp
iret
out
jns
jmp
call
int
jp
shl
stos
inc
pop
out
push
inc
jno
testl
xchg
sarl
xor
sub
cmp
mov
jnp
inc
adc
cld
out
pop
pop
icebp
push
add
fucomip
jno
sbb
xchg
and
sub
adc
not
mov
call
mov
pusha
movw
mov
mov
lea
jmp
pushf
movl
push
movw
jmp
not
mov
push
pushl
lea
jmp
xor
push
cmp
inc
and
cmpsb
ret
jne
leave
xchg
loopne,pn
cmp
fildll
ja
mov
lock
mov
add
xchg
add
mov
push
cs
push
pop
sub
jno
mov
jae
clc
cmp
jmp
push
and
add
fwait
aas
pop
cmc
lret
adc
mov
cs
xchg
add
lds
rol
adc
sbb
in
sub
pop
scas
push
in
jb
sub
jp
mov
inc
sub
pop
xlat
or
cmp
jmp
bound
dec
jnp
cmp
xchg
cmp
push
pop
xchg
out
pop
dec
out
lahf
iret
xchg
shl
stos
lret
push
in
loopne
dec
out
push
movsb
jne
fisttps
sahf
and
jmp
mov
xchg
dec
fnstsw
push
cltd
sahf
scas
sbb
xchg
cmpsb
cmc
aam
addr16
fmuls
push
ret
and
fisubrs
icebp
push
mov
cmp
dec
sti
loop
push
mov
mov
xor
inc
cltd
test
shlb
stc
add
mov
cmp
fsubrl
addr16
imul
sbbl
fidivrs
aad
imul
lcall
cli
sbb
cmp
test
call
rcrb
jo
test
cltd
inc
inc
xchg
loope
xchg
daa
pushf
pop
jmp
mov
jae
pusha
lea
jmp
call
ror
call
jmp
mov
inc
xchg
sti
enter
fisubl
js
cltd
std
loope
repnz
sbb
pop
and
outsl
dec
stc
inc
out
add
cmpsb
dec
sarl
mov
mov
or
inc
notb
adc
inc
xchg
push
or
shll
sbb
sbb
jae
cwtl
scas
jecxz
mov
mov
mov
jnp
mov
mov
mov
loop
inc
and
mov
clc
popa
inc
scas
movsb
outsl
or
jp
test
sub
insb
and
mov
pushf
sahf
dec
push
mov
and
mov
and
jmp
pop
push
cltd
push
mov
ljmp
int3
ja
mov
mov
push
inc
nop
dec
rol
dec
cmp
pop
mov
inc
sub
jg
sub
xor
lret
out
cld
movsb
mov
fnsave
pop
pop
aas
stc
lcall
mov
cmp
nop
fadds
inc
push
leave
in
mov
cmpsb
cli
xchg
sub
loopne
inc
cmc
lods
daa
fcomip
jp
push
xchg
lea
inc
push
out
outsl
mov
mov
shrl
cmpsl
or
inc
loope
mov
adc
mov
andl
xchg
ret
dec
sbb
cltd
cmpsl
xchg
xor
fsubr
adc
mulb
int
cmp
jno
insb
ret
mov
pushf
rorb
shrb
add
add
fdivp
fucompp
mov
std
decl
test
mov
cmp
mov
cmc
cmp
pushf
lea
ja
not
push
mov
setl
mov
jmp
push
push
jmp
call
pushl
pushf
lea
je
call
push
pushf
movl
mov
pusha
movl
movl
pushl
pushf
pushl
pushf
lea
jmp
lea
pushf
movb
movl
pushl
push
pushl
popl
push
pushf
movb
pushl
ret
movl
movw
mov
lea
jmp
movw
movl
pusha
pusha
pushl
pushf
lea
jmp
pushf
lea
je
test
add
pushf
pushl
jmp
sbb
adc
aas
xchg
daa
pop
loop
or
scas
fwait
and
mull
adc
jbe
mov
outsb
into
cmp
pop
inc
add
js
cmp
popa
das
pop
adcb
ud2
sub
in
pop
cmc
dec
cmp
loopne
sub
cmc
inc
xor
fistps
adc
or
push
cmc
xor
stc
push
fucomi
sub
das
lds
mov
adc
push
fimull
push
push
adc
daa
loop
jno
and
or
push
cs
sub
xor
sub
sub
xchg
mov
xchg
or
jge
xlat
popa
xchg
push
xchg
dec
ret
cmp
jae
xchg
hlt
dec
dec
xchg
aaa
mov
jge
xchg
and
lcall
test
pop
pop
xchg
aaa
clc
je,pn
fiaddl
cmpl
cmp
lcall
stc
sti
into
mov
ss
sbb
insb
std
sub
nop
gs
loope
ljmp
xchg
mov
rolb
ret
push
xchg
test
pushf
ror
movb
push
pushf
inc
jmp
dec
je
and
ss
mov
loop
das
aas
ret
jp
addr16
pop
pop
popf
pop
mov
mov
mov
call
push
cmp
push
addl
inc
mov
sub
xor
test
cmovns
or
into
or
les
into
subl
sbb
xchg
dec
fs
or
cmp
ss
cmp
cmpsl
out
repnz
mov
xchg
cmp
ja
add
jg
insb
sbb
dec
mov
sahf
jae
sbb
stos
jmp
xchg
lods
cmpsl
out
je
stos
or
jp
mov
push
push
xlat
scas
sbb
push
jno
test
and
xor
bnd
lret
mov
sbb
je
jae
adc
cmp
push
sbb
insl
rclb
or
int3
lock
je
mov
sub
bound
xchg
rclb
rcll
adc
sbb
inc
addr16
xchg
adc
and
sub
mov
dec
data16
fucompp
jno
cmp
and
pushf
movl
jmp
mov
shr
pushf
call
cmp
pushf
lea
jne
pushf
jmp
pusha
pusha
mov
push
pushf
pusha
lea
jmp
cmpb
pushf
pusha
lea
jne
bsr
bt
cmc
mov
clc
clc
cmc
add
pushf
bt
jmp
sub
mov
cltd
lahf
repnz
xor
xchg
movsb
sub
imul
out
pusha
xchg
cmpsl
scas
xlat
call
mov
xor
push
stos
push
push
jno
cld
out
xlat
je
insl
cmpsl
ret
mov
and
outsb
dec
rcrl
mov
lcall
cmp
sub
mov
mov
adc
lret
xchg
int3
shrb
out
fs
push
outsb
xchg
inc
inc
fdivl
and
jno
push
pop
cmc
bound
leave
ret
mov
dec
push
cmp
arpl
fidivrl
js
jg
fmul
pushf
inc
mov
insb
mov
repz
jne
pop
sub
cwtd
lods
je
xchg
adc
fwait
add
pop
loopne
test
test
jmp
in
mov
dec
sar
inc
movsbw
mov
cmp
bt
push
add
bt
bt
call
add
inc
gs
outsl
fs
gs
imul
add
mov
shl
inc
lea
mov
stc
clc
pushf
cmp
pushf
pushf
call
cmp
pusha
pusha
cmp
push
movb
pushf
pushf
lea
jae
pusha
mov
pusha
lea
jmp
pusha
jmp
lea
jb
call
pushf
lea
je
sets
mov
adc
cmc
neg
add
mov
cmp
adc
or
mov
stc
test
pusha
lea
jl
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
bt
add
jmp
call
mov
or
gs
out
int
and
mov
jp
les
pop
xor
stos
mov
cmpl
test
cmp
fdivrs
xchg
or
in
mov
or
jg
pop
rorb
test
bound
ficoms
ss
mov
je
or
cmp
negl
inc
cmc
arpl
xor
mov
lods
mov
filds
xlat
call
das
int
leave
lret
push
rol
call
int
jno
stc
das
cltd
sub
cmp
shr
jno
adc
inc
mov
ds
les
scas
outsb
inc
iret
sbb
ret
push
leave
lret
cmp
or
cmp
iret
cwtl
out
xchg
mov
test
and
add
insb
icebp
and
add
xchg
adc
mov
addl
mov
fildll
inc
cmp
hlt
fyl2xp1
xchg
mov
mov
push
adc
or
es
dec
mulb
ja
ret
cs
movl
test
sub
ss
jb
and
cmpsb
out
stc
xchg
fcomp
xchg
nop
xor
push
clc
cmpsl
adc
out
xchg
mov
sub
in
mov
inc
push
add
adc
shl
cmp
into
jge
loope
jmp
fisubrs
mov
in
inc
arpl
sti
stc
cmpsl
xchg
sbb
or
pushf
mov
mov
or
and
ror
sahf
lea
cld
fs
outsb
cmp
jmp
mov
mov
jg
dec
cmpsl
mov
jnp
or
lea
dec
pushf
mov
adc
ss
jl
xchg
xchg
cmp
in
mov
inc
aam
push
push
dec
xchg
cld
jge
je
test
nop
filds
insb
dec
iret
push
lcall
aad
fwait
xor
rolb
push
bswap
in
jecxz
test
fdivl
push
xchg
fistps
jmp
stos
jp
adc
add
mov
mov
jge
pop
lret
insb
daa
frstor
jmp
aam
add
lret
pushl
push
pushl
popl
movl
pushf
pushf
pushl
ret
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
mov
hlt
jmp
call
mov
push
xchg
cwtl
pushf
not
movl
pop
movsbw
pusha
not
lea
mov
movl
movb
call
cmp
call
jmp
mov
push
shrb
stos
sbb
inc
inc
pop
dec
or
fisubs
imul
sub
and
lahf
xchg
mov
or
repz
aad
jmp
sbb
pushf
in
ljmp
xchg
sub
call
push
cmc
loop
jb
sbb
cmp
mov
mov
xlat
xor
jmp
mov
xor
fldenv
jne
sub
adcl
sahf
lock
push
mov
andl
in
decl
mov
add
repnz
cmp
frstor
mov
mov
sub
xor
cmp
mov
and
sbb
stc
adc
mov
ds
sbb
sub
jne
xchg
fwait
cmp
lret
shlb
mov
inc
cwtl
sbb
and
xor
and
cmp
cmp
call
ljmp
adc
jnp
nop
cli
stos
inc
repz
push
vmwrite
insb
adc
out
mov
arpl
or
push
cli
pop
out
push
leave
add
sbbl
push
sbb
mov
insb
cmp
stc
lcall
jg
mov
push
scas
rclb
lock
lret
inc
mov
jno
add
fldenv
jmp
fwait
xor
fsub
insb
mov
lock
mov
inc
fiaddl
call
mov
pusha
stos
je
inc
sbb
subb
sub
add
add
lds
fisubrl
dec
nop
cmp
jecxz
mov
loopne
es
sbb
sub
sub
je
insl
push
clc
jecxz
data16
add
shll
in
push
mov
inc
loope
add
cltd
jb
sub
sub
ljmp
movsl
pop
fistps
inc
pusha
xor
adc
shll
ret
add
cmp
popf
xor
pop
jnp
stos
jmp
arpl
test
in
lcall
cmc
cmp
pusha
pushf
mov
lea
ja
pusha
stc
call
add
cli
adcb
lcall
ljmp
sbb
sbb
das
cmpb
dec
adc
cmp
rorb
mov
sbb
or
xchg
xorb
leave
outsl
mov
add
jno
xor
fmuls
mov
push
movsl
push
mov
fsubl
sbb
add
jp
enter
lcall
xchg
in
mov
lret
inc
mov
jmp
inc
xor
mov
int3
out
inc
test
fsubrs
mov
xor
aam
and
mov
ja
jmp
and
xchg
ret
call
call
add
lea
dec
mov
bt
pusha
shr
jmp
push
call
jmp
dec
mov
pushf
call
adc
andb
adc
ret
repz
or
and
pushf
dec
add
sahf
imul
cmc
mov
xor
test
push
jo
movsb
dec
lock
rep
imul
out
movsl
and
hlt
or
pop
adc
lea
push
xchg
mov
cmp
push
pop
fisttpl
jnp
pop
icebp
nop
stc
fdivrl
aad
in
mov
sbb
aas
inc
das
or
test
rolb
fdivrl
pop
adc
loop
adc
cmc
mov
popf
adc
add
rclb
rorb
std
jmp
mov
loope
ret
and
neg
mov
push
movb
pushf
add
sub
je
pusha
mov
stc
shld
push
mov
stc
call
mov
test
test
sub
pushf
pushf
lea
jg
rep
jmp
lret
cli
out
repnz
cmp
mov
sub
and
cmc
pop
mov
sub
aad
dec
pop
outsb
popf
sub
lahf
or
and
cmpb
cld
testl
int3
aad
mov
mov
hlt
push
fmulp
cmp
dec
fcomps
adc
cmpsl
lret
je
push
mov
repz
push
jbe
aaa
jmp
pop
mov
dec
outsb
jns
cld
gs
push
push
pop
inc
sbb
ror
sti
aaa
test
dec
mov
or
lahf
mov
pop
mov
test
xchg
test
adc
sub
pop
fcoms
fwait
pusha
mov
fcomps
mov
add
sbb
pop
stos
push
mull
sbb
ret
popa
bound
mov
xor
mov
push
xchg
add
push
sbb
push
ret
jb
add
cmp
repz
mov
shrb
push
in
jno
test
jae
sarl
xor
loop
sub
pop
adc
xchg
test
ja
ret
inc
or
out
jb
sarl
daa
insl
aas
sub
jmp
add
adc
mov
xor
and
ret
fsubrs
pop
pop
add
push
js
nop
push
ja
stc
sbb
loop
outsb
ret
jns
jno
push
and
mov
mov
arpl
lea
jmp
pop
dec
xor
lret
and
inc
pop
into
sbb
lods
ds
jecxz
sbb
and
inc
scas
dec
mov
fcomps
inc
add
mov
loopne
pop
nop
push
jmp
xchg
push
ss
xor
mov
jmp
inc
jmp
lret
xlat
push
aad
mov
xchg
pop
inc
test
lea
mov
mov
imul
sbb
jns,pt
cwtl
data16
ljmp
xchg
push
mov
arpl
push
popf
cmpsb
mov
rorb
addl
push
dec
mov
je
sub
sub
sti
jecxz
movsb
stc
xor
cli
mov
incl
sbb
add
jae
into
mov
outsb
les
lahf
aad
clc
adc
or
hlt
jno
std
fidivl
sbb
sub
popf
mov
inc
mov
ja
mov
mov
stc
pushf
bt
push
or
call
call
jmp
mov
cmc
stc
bt
test
add
clc
jmp
dec
pushl
cmc
stc
cmp
bswap
lea
mov
not
movzbw
sets
mov
pushf
lea
ja
pushf
push
pusha
lea
jb
stc
jge
clc
cmpb
jmp
lea
jne
push
mov
pusha
push
mov
call
cmp
call
xor
pusha
add
bt
push
ror
pushf
inc
jmp
jae
push
lods
adc
call
ret
jb
push
push
mov
arpl
ss
mov
wbinvd
mov
inc
mov
inc
adc
fisubrs
jmp
cmp
mov
std
stc
mov
test
xor
mov
icebp
cwtd
notb
sub
and
popf
cmc
je
pop
jmp
shll
push
clc
bt
push
and
pusha
add
push
mov
movb
pushf
lea
jmp
pushf
mov
jmp
cmp
bt
add
pusha
pusha
push
push
lea
jmp
mov
push
jmp
push
movb
mov
push
lea
jmp
cmp
mov
push
cmc
movb
add
push
pushf
pushf
lea
jmp
mov
call
mov
jmp
push
mov
pusha
lea
jmp
dec
pushl
push
push
movb
lea
jmp
cmp
push
sub
pushl
mov
call
mov
jp
push
pushf
popl
pushf
pusha
pushl
popl
pushl
push
pushf
pushf
lea
jmp
jmp
push
pushf
push
call
mov
pushf
pushf
movb
lea
jmp
pushf
popl
pusha
pushl
popl
mov
lea
jmp
jmp
mov
mov
push
push
mov
lea
jmp
add
or
rcr
btr
sbb
xor
lea
rcr
cmp
test
movsbw
mov
test
cmp
shl
cmp
shr
cmc
ja
stc
or
pushf
movw
xor
call
neg
cmp
cmp
mov
call
pusha
mov
push
pushf
movb
lea
jmp
pushf
popl
mov
pushl
popl
mov
pushf
pushf
push
lea
jmp
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
sub
pushf
lea
jle
pushf
movb
mov
push
lea
jmp
lea
jne
shl
xorb
lea
pop
push
pusha
pushl
lea
jmp
pushf
pushl
mov
pushf
mov
pusha
lea
jmp
not
bt
pushf
test
call
movb
movb
mov
call
pushf
sar
pusha
movzbl
pusha
pushf
xor
pushl
sub
bt
xor
pushf
not
cmc
cmp
stc
xor
mov
call
pushf
mov
push
pushl
jmp
rol
clc
cltd
movsbl
rdtsc
clc
sub
call
pushl
mov
movw
lea
jmp
pushf
popl
push
pushf
jmp
shl
aas
mov
pusha
mov
pushl
add
call
btr
not
xor
inc
jae
shl
add
neg
and
xor
neg
bts
and
bsr
mov
clc
stc
add
push
pushl
mov
movw
pushf
pushf
pushf
lea
jmp
jmp
movw
movl
mov
mov
call
ror
mov
jmp
not
pushf
mov
pusha
mov
pushf
pushf
mov
mov
pushl
ret
pushf
xchg
jmp
mov
pushl
movb
lea
jmp
btr
pushf
shl
xor
cmc
setne
push
not
movzbw
sub
add
lea
add
bsr
mov
xor
neg
bsr
xor
rcr
dec
sbb
xor
movzbl
cmp
test
test
mov
stc
cmp
push
stc
or
jmp
mov
pushl
lea
jne
mov
mov
jmp
dec
pushl
add
stc
bt
bt
pushf
lea
mov
cwtl
stc
call
cmp
cmpl
mov
mov
pusha
movb
movb
mov
mov
jmp
add
pushf
lea
jmp
bt
stc
add
mov
jmp
cmp
mov
cmp
add
pusha
pushf
lea
jmp
pop
pop
shr
pop
bsr
rcr
movzbw
pop
shl
pop
cmc
std
add
popf
jmp
aad
rcl
bswap
mov
test
call
pushf
pushf
pushl
popl
pushl
mov
push
mov
lea
jmp
pushf
popl
mov
pushl
popl
movb
movb
mov
mov
lea
jmp
jmp
jmp
btc
bsr
mov
bsf
mov
push
add
pusha
mov
pusha
mov
movb
lea
jmp
movb
xor
push
cmc
pusha
not
push
sub
push
bt
clc
xor
test
clc
stc
stc
xor
stc
cbtw
bt
cwtl
push
test
mov
sub
test
add
movw
pushf
call
pusha
pushf
dec
pushf
xchg
pushf
mov
movl
push
dec
bt
add
cmc
lea
call
neg
aaa
bsr
mov
cmp
cmp
clc
stc
sub
cmp
cmc
cmc
add
call
shl
rcr
ror
neg
mov
push
add
pushf
mov
jmp
jmp
pusha
jmp
add
mov
pushf
push
lea
jmp
dec
mov
not
add
mov
push
mov
push
mov
pusha
mov
mov
lea
jmp
bswap
stc
add
movw
call
movsbw
rcr
mov
shl
pusha
mov
pusha
sub
cmc
mul
push
pushf
call
mov
pusha
mov
movb
pushf
pushf
pushf
lea
jmp
pushl
popl
pushf
test
btc
movl
sbb
mov
add
mov
xadd
neg
btr
lea
pushf
xchg
xor
mov
sub
add
cmp
lea
pushl
shrd
pusha
shl
sub
xchg
rcr
cmp
mov
rcl
mov
jmp
pushf
jmp
call
call
jmp
stc
test
add
pushf
pushf
pusha
movl
lea
jmp
pushf
call
call
bswap
adc
bts
mov
call
call
pushl
call
pusha
jmp
mov
pushf
mov
pushf
popl
pushl
movl
push
pushf
pushl
popl
pushf
pushf
mov
lea
jmp
push
bswap
push
mov
dec
mov
cmp
call
call
rol
sub
shl
xor
bsf
xor
not
bt
xor
pusha
jmp
pusha
call
pushf
mov
mov
mov
lea
jmp
daa
call
xchg
mov
jmp
pushl
popl
mov
pushl
pushf
lea
jmp
movw
jmp
xadd
push
rcl
mov
shld
sar
stc
mov
bt
pushl
call
call
jmp
mov
clc
add
jmp
call
btc
bts
btr
mov
clc
add
pusha
lea
jl
pushf
pushf
pusha
jmp
bswap
movzbw
push
pushf
mov
mov
lea
jns
pushf
lea
cpuid
cmc
pusha
sub
pushl
jmp
pushf
mov
pushf
pusha
pushf
lea
jmp
btc
bt
cmc
mov
not
dec
mov
mov
test
sub
call
mov
jmp
push
pusha
mov
call
sub
call
not
push
pushf
sub
bt
pushf
and
pushl
jmp
mov
mov
pusha
movl
lea
jmp
test
jmp
pusha
push
mov
mov
mov
jmp
pusha
push
add
cmp
pushf
push
shld
movl
mov
pushf
pushf
popl
jmp
pusha
pushf
mov
mov
lea
jmp
pushf
popl
pushl
pushl
popl
push
push
mov
mov
lea
jmp
mov
push
movb
lea
jmp
lea
jns
dec
push
test
mov
movb
cmp
call
jmp
movsbl
clc
xor
pusha
mov
ror
pop
rcl
and
sbb
pop
or
pop
cltd
pop
call
push
call
bt
bsf
not
mov
jmp
mov
movw
pushl
ret
mov
push
push
pushf
lea
jmp
shr
movzbw
mov
and
neg
cmc
mov
jmp
lea
jns
pushf
mov
jmp
call
test
not
mov
bt
mov
setno
rcl
dec
setbe
mov
test
pusha
bt
add
cmp
call
bt
adc
mov
mov
test
add
lea
jnp
push
mov
pushf
lea
jmp
pushl
popl
mov
pusha
lea
jmp
shrd
xor
shl
shl
lea
add
movzbl
adc
sub
stc
neg
neg
sub
push
sub
and
call
pushf
mov
push
mov
jmp
clc
add
pusha
call
jmp
dec
call
shld
mov
shl
mov
bt
clc
jmp
test
clc
sub
pushf
bt
cmp
cmp
sub
call
push
mov
call
jmp
sub
sub
sbb
push
movzbl
test
bt
xor
clc
cmp
sub
call
mov
call
bswap
mov
pusha
mov
movw
pushf
mov
mov
push
movw
movw
lea
jmp
mov
pushl
mov
pushl
jmp
mov
not
daa
aad
mov
btc
adc
shrd
sete
mov
jmp
jmp
mov
call
pusha
pusha
jmp
dec
ror
neg
stc
or
add
neg
rcl
stc
mov
cmc
mov
add
pusha
call
pushf
popl
pusha
pushl
popl
push
mov
pushf
push
lea
jmp
rdtsc
mov
cltd
mov
movsbw
seta
not
mov
mov
pushf
divl
lea
jp
mov
pushf
push
jmp
pushf
pushl
xchg
pushf
movb
call
clc
stc
test
cmp
shl
push
mov
call
push
call
pusha
dec
movb
xchg
jmp
sub
test
stc
test
clc
cmpl
call
aaa
dec
lea
pusha
stc
call
rep
sub
sar
inc
bsr
mov
sub
bt
mov
bt
cmp
test
push
pushl
popf
pushf
movb
pushf
mov
lea
jmp
call
pushf
mov
movsbw
lea
pusha
pushf
mov
lea
movsbw
repz
xor
push
rcl
push
and
or
shr
mov
push
btc
not
inc
clc
push
rol
or
push
shl
neg
btr
cmc
push
bsf
and
call
mov
jmp
pusha
xchg
movsbw
pop
call
call
cmc
stc
or
pusha
cmc
push
call
pusha
push
pusha
pushf
lea
cpuid
cmc
call
call
not
jmp
pushl
decl
pushf
call
call
dec
cmc
cmc
clc
cmc
add
pushl
push
mov
pushf
movl
lea
jmp
mov
pusha
movb
push
pushl
ret
mov
mov
movw
movb
lea
jmp
mov
add
push
mov
pushf
movw
pushl
lea
jmp
mov
pushl
lea
jmp
cmp
test
sub
jmp
call
push
push
mov
mov
call
pushf
popl
pushf
call
call
pusha
mov
push
pusha
call
pusha
pushl
popl
pushf
pushf
lea
jmp
call
shl
pusha
mov
neg
mov
mov
cmc
test
sub
pushl
test
shr
push
mov
pushf
call
jmp
push
mov
pushl
push
mov
pushf
push
mov
push
lea
jmp
mov
push
push
pushf
popl
jmp
call
push
pusha
shld
adc
mov
cmp
add
pusha
pushf
mov
lea
jmp
call
movzbl
xorb
lea
movzbw
pushf
setl
mov
pusha
pushf
lea
jmp
lea
jae
pushf
mov
pushf
pushf
popl
call
pushf
mov
push
push
lea
jmp
pushf
push
mov
std
push
push
cld
jmp
and
shl
neg
pushf
mov
or
bsr
call
push
call
sub
call
push
push
mov
lea
jne
adc
inc
or
bts
xorb
lea
pop
pushf
lea
jmp
sub
jmp
mov
pushl
popl
pushl
mov
pushf
pushf
lea
jmp
jmp
call
sub
pushf
add
pusha
call
pusha
add
pushf
call
pushf
dec
stc
stc
bswap
movw
bt
pushf
add
call
mov
pusha
jmp
jmp
pusha
pushf
popl
pusha
call
add
add
cmp
lea
jp
push
pusha
lea
ja
shl
mov
movzbw
pusha
rcr
lea
inc
cmp
sub
btc
adc
lea
pusha
bt
ror
ror
and
xor
adc
sub
movsbw
mov
not
mov
bswap
pushf
jmp
mov
jmp
pusha
pusha
pushl
pushf
mov
mov
pushf
mov
pushf
lea
jmp
pushf
and
pusha
clc
clc
push
cmp
jmp
pusha
mov
pushf
pushl
mov
pusha
lea
jmp
xor
clc
bswap
movzbl
shr
shrd
stc
cmc
xor
or
pushf
call
mov
decl
pushf
lea
jne
pusha
lea
ja
mov
pushf
pusha
pushf
lea
jmp
jmp
setg
cmc
mov
cmp
add
mov
not
mov
push
movb
pushf
pushl
mov
push
movb
movb
pushf
lea
jmp
mov
lea
jne
btc
mov
pushf
bt
and
clc
push
stc
test
cmp
lea
jbe
pushf
push
movb
lea
jne
jmp
jmp
movb
mov
pushf
jmp
push
test
add
clc
pushl
popf
push
mov
lea
jmp
setl
aad
mov
not
mov
clc
jmp
cwtl
shl
daa
mov
sub
sar
sub
adc
mov
jnp
stc
add
pushf
mov
movw
movb
pusha
lea
jmp
pusha
lea
je
clc
pushf
sub
pushf
bt
clc
cmc
xchg
cmc
cmc
mov
bt
cmp
pusha
pushf
sub
jmp
pushf
lea
jbe
mov
pushf
pushf
mov
pushf
lea
jmp
cmp
clc
shl
mov
dec
shr
ror
sbb
mov
bt
pushf
sub
cmp
pushf
bt
shr
call
stc
bt
jmp
lea
inc
pushf
mov
bt
movb
jmp
btc
xchg
neg
add
rol
mov
bsr
clc
not
bswap
add
bsr
cmc
push
rcl
not
shr
rol
xor
bt
rol
pushf
sar
push
lea
pusha
movzbw
add
movsbw
movsbl
push
movzbw
movzbl
dec
not
setl
push
mov
pushf
pushf
push
pushl
dec
jmp
pusha
and
mov
mov
jmp
jmp
and
pushf
cmp
test
cmp
push
movb
jmp
mov
pushf
pushf
lea
jmp
jmp
mov
pushf
mov
movb
lea
jmp
push
cmp
add
pushf
pushf
pusha
push
mov
movb
pushf
push
movb
lea
jmp
push
mov
pushf
pushl
push
lea
jmp
push
mov
pusha
push
movw
mov
lea
jmp
stc
add
mov
cmp
cmc
not
mov
stc
jmp
dec
dec
pop
add
pop
pop
add
pop
add
dec
pop
add
inc
pop
add
pop
add
push
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
push
pop
add
pop
add
pop
add
pop
add
inc
pop
add
pop
add
pop
add
inc
pop
add
pop
add
pop
add
pop
pop
add
pop
add
pop
pop
add
pop
add
pop
pop
add
pop
add
pop
pop
add
push
pop
add
inc
pop
add
push
pop
add
inc
pop
add
pop
add
pop
pop
add
inc
pop
add
inc
pop
add
pop
pop
add
inc
pop
add
pop
add
inc
pop
add
push
pop
add
dec
pop
add
pop
pop
add
inc
pop
add
pop
pop
add
dec
pop
add
pop
add
pop
add
pop
pop
add
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
push
pop
add
pop
pop
add
dec
pop
add
add
pop
pop
add
dec
pop
add
aas
pop
add
pop
pop
add
pop
add
dec
pop
add
dec
pop
add
pop
add
inc
pop
add
dec
pop
add
pop
add
dec
pop
add
pop
pop
add
pop
pop
add
pop
add
pop
add
pop
add
inc
pop
add
pop
add
pop
add
pop
add
pop
pop
add
pop
add
pop
add
pop
add
push
pop
add
pop
add
inc
pop
add
pop
add
pop
add
pop
add
dec
pop
add
pop
add
dec
pop
add
pop
pop
add
pop
add
inc
pop
add
pop
add
pop
add
pop
add
push
pop
add
pop
add
inc
pop
add
inc
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
inc
pop
add
dec
pop
add
push
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
push
pop
add
pop
pop
add
pop
add
pop
pop
add
dec
pop
add
pop
pop
add
dec
pop
add
inc
pop
add
inc
pop
add
pop
pop
add
pop
add
pop
add
push
pop
add
inc
pop
add
pop
add
inc
pop
add
pop
add
ds
add
pop
add
inc
pop
add
push
pop
add
inc
pop
add
inc
pop
add
dec
pop
add
pop
add
inc
pop
add
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
pop
pop
add
pop
pop
add
pop
add
inc
pop
add
pop
add
pop
add
pop
add
push
pop
add
pop
add
dec
pop
add
pop
add
dec
pop
add
ds
add
aas
pop
add
pop
add
pop
add
pop
pop
add
pop
pop
add
dec
pop
add
dec
pop
add
pop
add
inc
pop
add
dec
pop
add
aas
pop
add
pop
add
pop
add
pop
add
pop
add
dec
pop
add
pop
add
ds
add
ds
add
dec
pop
add
pop
add
pop
pop
add
dec
pop
add
pop
add
pop
pop
add
pop
pop
add
push
pop
add
pop
pop
add
pop
add
pop
add
pop
pop
add
pop
add
pop
pop
add
inc
pop
add
dec
pop
add
push
pop
add
dec
pop
add
pop
add
pop
add
pop
pop
add
pop
add
aas
pop
add
pop
pop
add
pop
add
pop
add
inc
pop
add
pop
add
dec
pop
add
pop
add
push
pop
add
pop
add
pop
add
pop
add
dec
pop
add
push
pop
add
inc
pop
add
pop
add
inc
pop
add
pop
add
loopne
add
lcall
and
pusha
pushl
lea
jmp
call
push
lea
ja
mov
movzbw
setp
mov
add
movsbw
lea
sub
xadd
test
sub
shr
lea
bsf
and
pusha
sub
not
push
movzbw
movsbl
mov
bswap
push
pusha
pushf
popl
cld
xchg
pushf
pushf
mov
pop
movsbw
std
lea
std
pushl
pushl
push
mov
bswap
cld
mov
pushl
push
pushf
cld
movw
pushf
pushf
pushl
rep
shl
add
mov
pop
rcr
mov
std
pushl
popf
pushf
push
movl
movb
lea
jmp
movzbl
mov
push
lea
jnp
cmp
test
bswap
clc
pusha
add
jmp
pushf
popl
call
call
jmp
mov
lea
jle
pushf
pushf
lea
mov
mov
jmp
jmp
call
clc
sub
jb
stc
push
pusha
shl
jmp
jmp
mov
cmc
xchg
cmc
cmc
bt
add
pusha
jmp
pushl
popl
push
push
push
lea
jmp
call
xchg
bts
rcr
mov
test
rcl
stc
not
mov
pushf
add
pusha
mov
pusha
lea
jmp
bt
add
pusha
jmp
pushf
pusha
push
div
pushf
mov
push
jmp
bsf
sbb
lea
mov
jmp
jmp
lea
jne
adc
mov
bt
pushf
jmp
call
stc
cwtl
pushf
sub
jmp
push
lea
jbe
pushf
pushf
mov
pusha
movb
pushl
popl
movb
mov
pushf
lea
jmp
mov
movb
lea
jmp
shl
jmp
clc
mov
stc
pusha
clc
add
pushf
pushf
push
lea
jmp
call
jmp
mov
push
pushf
popl
pushf
jmp
mov
movb
lea
jmp
lea
stc
shr
aad
mov
bts
mov
stc
add
pusha
call
movb
call
mov
sub
jmp
push
call
mov
jmp
mov
pusha
add
movw
lea
jmp
pusha
pushl
not
stc
jmp
bt
add
clc
call
mov
pushf
cwtl
mov
mov
pushf
push
push
mov
pushf
call
add
btr
lea
neg
mov
btc
cmc
mov
mov
add
mov
jmp
not
lea
jmp
sub
call
pushf
popl
movw
pushl
mov
pushl
popl
mov
lea
jmp
stc
pushf
cmp
not
call
push
lea
jne
adc
sub
movsbw
xorb
movzbw
setnp
call
pushf
mov
call
jmp
sub
call
call
push
pushl
popl
push
mov
pushf
mov
lea
jmp
pushf
jmp
pushl
popl
movb
movw
lea
jmp
cmp
btr
mov
jmp
mov
pushf
jmp
pushf
pushf
popl
mov
pushf
pushl
call
cmp
clc
cmc
bswap
bt
bt
add
cmc
pushf
add
pusha
mov
movb
pusha
bswap
call
mov
movb
push
lea
jmp
push
pusha
mov
mov
movb
movb
lea
jmp
mov
mov
lea
jmp
movb
jmp
rdtsc
rcr
mov
bsf
rol
mov
cmp
jmp
pushf
mov
pushf
mov
pusha
lea
jmp
cmp
shr
pusha
mov
pushf
call
cmp
sub
cmc
cmp
cmp
xor
stc
xor
push
jmp
xor
mov
inc
jmp
pushf
pusha
pushl
popl
movw
pushf
movw
lea
jmp
btc
bt
movsbw
mov
pusha
test
push
call
inc
mov
movzbl
pusha
add
jmp
push
pushf
jmp
pushl
pushf
inc
jmp
pushf
mov
pushf
movb
pushf
pushf
lea
jmp
jmp
push
pushl
popl
pushl
push
pushl
push
lea
jmp
pusha
pushf
lea
jne
push
pushf
lea
jmp
or
cmc
movzbl
cmp
call
pushf
lea
pusha
pushl
mov
pushf
lea
jmp
mov
mov
call
call
pushf
popl
jmp
pushl
mov
pushf
jmp
pushf
cmc
rol
movb
push
dec
test
test
cmc
cmc
neg
mov
add
cmp
mov
stc
sub
pushl
pushf
pushf
pushf
mov
pushl
pushf
call
jmp
push
dec
bt
stc
test
mov
clc
stc
push
cmp
sub
pushf
pushf
mov
movb
mov
mov
mov
lea
jmp
push
and
neg
mov
pusha
pushf
clc
bt
add
push
mov
mov
mov
lea
jmp
test
stc
xchg
stc
call
mov
movl
movw
movl
lea
jmp
lea
jne
bt
sub
pushf
pushf
xchg
pushf
pushf
call
bswap
mov
call
cmp
sub
lea
jae
mov
pushf
mov
movb
lea
jmp
pusha
mov
pushf
pushf
popl
pusha
pushl
popl
pushl
pushf
movb
mov
lea
jmp
mov
pushf
lea
jne
push
mov
pushf
pushf
pusha
pushf
lea
jmp
and
pusha
jmp
lea
jb
dec
jmp
call
sbb
sar
jmp
shrd
call
call
call
test
pushl
jl
clc
add
clc
test
clc
cmp
popf
pusha
lea
jmp
dec
jmp
shld
mov
dec
stc
sbb
mov
stc
stc
sub
stc
call
rcl
neg
btr
cmp
mov
call
movzww
jmp
mov
movb
mov
lea
jmp
movsbw
test
neg
mov
stc
stc
pushf
cmp
add
push
pushf
movw
pushf
lea
jmp
jmp
sub
pusha
push
mov
pushf
lea
jmp
call
mov
pushf
call
mov
push
lea
jmp
call
jmp
ror
pushf
mov
adc
add
rcr
rcl
cmc
rol
dec
jmp
pushf
sub
rol
notl
das
bts
btr
pusha
mov
bt
pushf
test
clc
sub
clc
cmc
clc
and
movb
push
pushf
popl
pushl
movb
pushf
pushl
popl
mov
pushl
mov
pushf
lea
jmp
cmp
mov
rol
setge
add
not
shl
adc
rol
neg
add
movzbw
and
ror
adc
clc
shrd
mov
pushf
add
pushl
pusha
push
mov
mov
pushf
pushf
pushf
lea
jmp
pushl
popl
pushf
push
lea
jmp
