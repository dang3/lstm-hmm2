inc
das
sub
xor
adc
dec
jg
icebp
pop
fidivrl
mov
sbb
dec
adc
mov
mov
lods
popf
pop
std
shrb
fcoms
cltd
ficoml
shl
ret
mov
cmc
ret
rolb
es
add
xchg
jno
mov
loopne
aaa
addr16
adc
nop
lock
loopne
lret
push
imul
imul
shrb
andb
xchg
aad
xchg
xor
pop
xchg
lea
decl
fcomps
jae
mov
orl
pushf
int
cmp
aam
ficoms
movsb
mov
call
mov
das
clc
inc
mov
repz
cmp
mov
stos
leave
dec
jns
mov
mov
out
jg
dec
xchg
mov
scas
xchg
jl
jp
or
mov
push
sbb
fs
je
pop
leave
xchg
lret
add
or
jbe
jnp
pop
inc
jo
lods
inc
cli
sub
jmp
das
pop
icebp
in
or
dec
loop
lret
xchg
insb
mov
xchg
in
cmpsb
lahf
lods
xor
in
jg
push
ss
cmp
push
cmp
iret
out
lret
scas
mov
jae
sbb
cmpsl
stos
mov
ljmp
mov
mov
xlat
mov
push
sbb
jmp
dec
pusha
jno
loopne
mov
jno
aam
dec
mov
or
scas
repz
xchg
enter
std
call
mov
mov
stc
ja
pop
sti
mov
xchg
dec
or
adc
ds
icebp
xor
push
int3
bound
or
mov
dec
cwtl
loop
test
push
mov
lods
scas
mov
lods
cli
fcmovu
push
aaa
cmp
das
mov
lahf
jno
cmp
scas
jmp
xchg
cmp
ja
test
insl
call
mov
leave
test
inc
xchg
stc
pushf
pushf
lea
jne
bswap
lea
movb
movsbw
push
lahf
js
not
lea
push
push
mov
movl
mov
pushf
mov
movb
push
pusha
pushl
ret
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
inc
and
std
cmpsl
inc
pop
pusha
call
sbb
mov
jmp
fldcw
arpl
loope
inc
decl
mov
rolb
inc
mov
lea
inc
mov
mov
push
scas
jo
icebp
push
push
loopne
mov
test
insb
xor
fldcw
dec
out
sub
xor
pop
mul
jbe
mov
cmp
mov
fwait
cmp
xchg
xchg
dec
int
popa
sub
add
scas
dec
out
cmp
outsb
scas
scas
push
adc
outsl
push
inc
xchg
lret
fldt
pop
adc
and
pop
push
jecxz
ret
fcmovnu
repz
dec
dec
cmpl
xor
into
bswap
xchg
and
jne
lea
je
bt
cmc
cmp
jmp
inc
adc
xchg
and
mov
inc
sbb
shl
not
mov
pushf
xchg
adc
rcl
mov
push
pusha
push
sub
lea
ja
pusha
pusha
rep
push
pushl
mov
pushf
mov
movl
movb
lea
jmp
lea
jne
pusha
lea
jmp
not
pop
adc
in
push
push
sbb
mov
adc
aam
push
push
out
jl
mov
and
out
xor
ret
pop
mov
xchg
or
mov
push
pop
cmpsl
shrb
xor
xchg
jnp
cwtl
data16
sahf
mov
mov
pop
and
jae
sub
push
mov
movsl
cmp
jmp
fisubs
mov
xchg
lret
rorb
cmp
pop
mov
imul
xchg
dec
inc
mov
dec
call
push
mov
lea
call
push
lea
jmp
and
fnstsw
lahf
into
bound
int
lret
xchg
dec
add
xchg
dec
and
es
cmp
add
loopne
pop
or
adc
int3
aad
jecxz
mov
mov
popf
xchg
in
mov
outsl
or
aaa
pushf
stos
or
pop
std
push
pop
dec
pop
clc
sbb
sub
ret
lds
fnstsw
mov
aad
xor
mov
or
icebp
jmp
pop
xor
sbbl
lcall
cmpsb
fimull
dec
pop
pop
or
test
test
push
adc
test
or
dec
inc
hlt
jecxz
cwtl
cli
clc
js
cmp
dec
insb
cwtl
in
pop
lahf
arpl
ds
ficompl
push
pop
or
mov
or
addr16
xchg
out
push
dec
std
inc
repz
lcall
xlat
xchg
enter
jmp
lods
pusha
movb
jmp
seta
and
rol
mov
call
jecxz
ret
cmp
scas
data16
gs
jno
data16
pop
pop
xchg
test
js
xor
xchg
pop
mov
js
dec
or
int3
repz
lahf
xchg
sub
stos
xor
xor
outsb
sahf
imul
fisubs
test
hlt
jp
mov
jg
cmp
fimull
mov
outsl
repnz
enter
xor
imul
out
add
insl
rolb
lret
cltd
lret
scas
and
jb
ja
adc
sbb
lods
mov
int3
js
movsb
mul
pushf
ds
xor
or
jb
in
les
xchg
adc
in
call
mov
adc
in
dec
sbb
divl
fsts
add
bswap
fnstsw
pusha
pop
jp
lcall
mov
xchg
arpl
fbld
mov
sub
sbb
push
push
stos
loope
insl
push
jg
xor
les
lret
add
divl
outsl
mov
inc
sbb
sbb
jne
mov
or
int
jle
adc
jbe
scas
mov
mov
mov
sub
in
popa
or
adc
sbb
mov
out
pop
scas
and
fsubrl
jns
fistpll
fwait
int
pop
lds
jno
std
insb
insl
out
addb
cmp
rcrb
mov
fidivrl
pop
cwtl
xchg
push
pop
test
adc
ret
sub
fistpll
mov
rcrb
rcr
jge
aad
lret
adc
ret
stc
lods
jmp
xchg
enter
pop
out
or
xor
push
or
push
jp
sbb
cltd
dec
cwtl
cmpsb
lods
std
adc
jno
enter
jb
cmp
cmp
ds
or
xchg
jecxz
dec
sbb
dec
arpl
scas
jno
cmp
mov
adc
adc
adc
xchg
imul
cmp
lahf
pop
shrl
or
xchg
jbe
lods
or
push
push
inc
jle
push
mov
xlat
xchg
stos
sbb
call
dec
lods
sub
jl
pop
inc
aas
adc
push
movsb
icebp
cmp
push
pop
js
imul
pop
ja
sub
adc
cmp
aaa
loopne
dec
mov
fisttpll
mov
int
mov
mov
loop
orl
cwtl
xchg
testl
mov
xchg
pushl
sub
mov
out
lret
cld
test
or
jno
xchg
jbe
lcall
pop
mov
pop
cwtl
or
sub
lcall
aas
or
sahf
inc
sub
test
cwtl
fiadds
into
pop
rclb
loopne
bound
add
or
mov
inc
and
clc
lcall
rorb
pop
sbb
loope
andb
add
fwait
mov
or
outsl
or
insb
push
sub
sub
sub
aam
pop
inc
dec
cmpl
insb
push
ds
stos
or
lods
dec
or
mov
insb
roll
fdivr
pop
sub
imulb
rcrb
out
insl
faddl
mov
pop
dec
scas
jno
push
cmc
sahf
xchg
or
loope
xor
or
cmp
rorl
sbb
mov
xlat
addr16
mov
pop
mov
mov
push
or
fisubrs
dec
push
or
pop
add
sti
movsl
inc
dec
or
movsl
orb
scas
out
fcompl
cmp
std
lea
aas
add
sbb
sub
lahf
or
imul
or
enter
or
inc
data16
pop
shl
inc
or
xchg
inc
sbb
movsb
xor
push
lret
cmp
dec
das
sub
mov
in
les
inc
or
fnstenv
aad
sarl
in
imul
pop
mov
cmp
loope
push
fadds
sbb
fdivl
movsl
mov
adc
mov
sub
insb
lret
jge
test
lods
lds
outsl
cmp
add
rcrb
sub
cli
jg
xchg
mov
por
jmp
mov
jb
fsts
clc
pop
xor
adcb
xchg
insb
leave
sub
movsl
push
testb
out
mov
cmp
add
pop
adc
shlb
push
mov
dec
or
sub
sub
pop
push
movsl
mov
add
popa
add
or
xchg
lret
cli
or
ds
aad
sub
movsl
in
enter
xchg
sbb
out
dec
scas
xchg
or
add
or
jecxz
lock
aas
lods
lods
jl
and
inc
or
fsubrs
int
test
or
cmc
andps
mov
dec
loopne
xchg
ret
ds
mov
or
dec
push
or
pop
inc
scas
int
mov
push
cmc
idivb
xor
call
lods
fcompl
mov
xchg
or
fstpt
pop
or
cli
cld
jae
test
mov
fildl
popf
nop
sub
lds
insl
adc
in
or
loopne
in
jne
adcb
xor
insb
adc
adc
push
in
mov
das
sbb
out
push
jb
pop
cmpsb
flds
push
or
or
mov
xor
adc
aad
cld
test
sbb
or
adc
mov
jae
xlat
adc
int3
daa
dec
push
push
mov
cltd
push
fldenv
cmp
add
jbe
imul
pushf
mov
inc
pusha
jns
sub
into
ficoms
cmpsb
pop
lret
ss
xchg
cltd
or
std
inc
addb
mov
and
mov
dec
jl
fs
divl
mov
jns
push
sbb
or
mov
adc
lods
push
out
or
adc
cmpsl
fsts
sub
imul
sti
aam
es
nop
xor
in
inc
pop
sbb
int
add
mov
or
or
mov
sub
cmpsl
rcll
push
xor
es
ffree
rorl
jb
sub
cmc
ljmp
enter
les
pushf
jl
movsl
pop
inc
or
jno
rorb
push
into
outsl
cmp
lea
je
lock
cmp
stos
pop
or
dec
xor
or
and
push
cmp
call
lahf
or
imul
xchg
adc
dec
lcall
xor
pop
aas
sub
and
punpckhbw
adc
repz
dec
jmp
push
int3
ljmp
out
pop
or
insb
scas
mov
sub
iret
faddl
lcall
fcmovb
xchg
or
push
icebp
cs
lds
loope
add
ret
out
adc
inc
insl
xchg
push
movsb
fiadds
adc
test
leave
or
push
pop
outsb
or
inc
fildl
pop
jecxz
cmp
adc
mov
or
rcl
dec
rorb
insl
nop
inc
dec
inc
adc
bound
pop
push
mov
push
push
test
sbb
aam
daa
or
lcall
jp
or
cmp
int
sbb
push
lds
or
and
test
loopne
das
into
lahf
sub
ret
mov
cmp
aad
push
test
movzbl
sub
rolb
or
jns
or
jbe
mov
in
push
out
leave
dec
jge
xchg
ss
mov
or
inc
ja
or
js
push
or
mov
and
shl
in
cmp
pop
pop
loopne
jno
add
or
jg
inc
dec
or
add
test
ss
and
js
dec
int
sub
inc
sbb
sbb
fiaddl
and
dec
sub
sub
cmp
loop
mov
in
adc
dec
or
and
popl
bound
nopl
test
inc
rorb
sub
or
rorl
mov
or
loop
pop
mov
ds
xchg
pop
and
lea
and
int3
pop
jne
cmc
cli
scas
sbb
mov
xchg
dec
sub
cmp
addb
or
jp
adc
stos
sahf
cwtl
pop
push
in
cmp
push
xchg
enter
in
ds
popf
cmp
stos
add
push
or
shll
dec
mov
push
and
in
push
lods
ljmp
or
in
les
adc
ljmp
pop
or
ljmp
or
sti
sub
or
stos
enter
dec
sti
sub
or
test
dec
sti
sub
or
test
mov
or
cmpsl
enter
inc
sti
daa
lret
out
cli
cmpsb
enter
inc
sti
es
in
enter
inc
sti
and
add
cli
movsb
enter
inc
sti
and
adc
jecxz
ret
test
inc
mov
add
cli
loopne
rolb
mov
mov
xchg
enter
dec
sti
sub
jmp
cli
and
addb
mov
add
cli
repnz
dec
add
lret
gs
cli
and
incl
xchg
mov
je
jb
iret
jb
sbb
cli
inc
enter
popf
sti
fcmovne
stc
mov
cli
adc
outsl
sti
int
sub
sti
jmp
mov
enter
cmp
mov
add
xlat
cld
lahf
pusha
fidivrs
xchg
jg
mov
mov
push
lea
in
sub
sbb
or
daa
inc
mov
cs
sahf
adc
frstor
cmp
dec
movsb
jg
das
loopne
sub
lcall
and
mov
inc
add
arpl
outsb
xor
inc
cmp
and
dec
sub
sahf
loop
pop
pop
jne
movsl
pop
test
cmpb
bound
xchg
mov
jmp
push
sahf
adc
ljmp
arpl
pop
leave
fwait
sub
fsubrs
insb
dec
pushf
inc
cmp
imull
add
cmpsl
sbb
lahf
push
jns
imul
popf
rcr
andl
mov
mov
pop
lret
mov
out
push
pop
lods
dec
sbb
std
in
test
xchg
mov
pushf
mov
jle
jns
aas
scas
inc
lds
dec
call
leave
jle
mov
mov
xchg
jmp
les
sar
cmp
std
shrl
mov
inc
mov
push
mov
or
ret
enter
lret
dec
test
mov
cmpsb
cwtl
ljmp
inc
aaa
pop
pop
subl
cld
inc
or
mov
push
test
xor
xor
cmpsb
std
rorb
pop
out
fs
xchg
lret
push
lret
mov
add
aas
inc
pop
in
xchg
sbb
pop
push
sub
pusha
or
mov
mov
test
lods
mov
xchg
test
leave
fcmovb
out
mov
jle
addr16
dec
push
fsubl
sbb
inc
shr
add
repz
mov
inc
adc
cwtl
pop
mov
ret
repnz
pop
mov
xor
lea
jp
adc
dec
out
call
out
ret
stos
ret
ret
ds
jmp
das
sbb
inc
aas
mov
test
mov
fs
repnz
cmpb
or
or
cwtl
or
out
xchg
ljmp
add
sub
xchg
jo
in
pop
mov
adc
jmp
cwtl
fs
out
mov
or
test
or
sbb
cmc
lret
sbb
cmc
mov
stos
jmp
ret
cli
test
or
sbb
xchg
stos
rorl
std
outsl
inc
sbb
adc
sbb
lea
ljmp
int3
movsl
xchg
cmp
add
or
insb
sbb
in
andl
add
int
in
popf
mov
or
mov
aas
sub
cmpsb
std
cmp
into
in
push
sbb
mov
dec
or
les
aaa
adc
cmpsb
xchg
out
inc
cmp
cmp
mov
xchg
mov
or
jae
aad
adc
push
cmp
cltd
xor
pop
lret
or
mov
sbb
cmc
int3
pushl
xchg
add
aad
add
adc
xchg
out
je
ss
repz
sbb
adc
out
clc
jmp
push
in
aam
sti
inc
adc
cld
add
dec
push
adc
or
mov
xchg
out
stc
call
xchg
in
filds
movsb
out
movsl
xchg
mov
and
out
dec
dec
sbb
mov
pop
lds
mov
push
outsl
dec
xchg
arpl
inc
les
xor
push
movsb
and
pop
jne
xor
mov
outsb
cmpsl
or
pop
xchg
mov
inc
dec
shlb
ret
inc
pusha
out
out
xor
cmp
xchg
enter
out
in
or
xor
mov
data16
fwait
pop
xchg
aas
in
sbbb
es
out
sbb
push
xchg
int3
icebp
xor
test
faddl
aas
adc
sbb
test
inc
in
iret
movsb
out
xor
pop
and
fs
or
notb
aaa
adc
sbb
push
mov
adc
call
or
adc
mov
mov
js
xlat
jae
pop
inc
or
cmc
popf
xchg
adc
sbb
adc
movsl
in
push
add
cmpsl
adc
pop
jecxz
scas
add
mov
cmpsl
push
fs
or
jmp
jecxz
adc
in
int
jae
dec
xchg
cli
nop
xchg
movsb
push
sbb
jno
jecxz
les
push
aad
or
popf
or
call
les
pop
jne
cmp
or
add
test
sbb
xor
sbb
push
ret
inc
dec
jecxz
loope
push
sub
or
sti
addl
sbb
jp
adc
dec
insl
adc
sbb
pop
inc
sbb
pop
ljmp
hlt
sbb
ret
push
add
adc
or
aam
push
add
fst
push
rorb
dec
xchg
pop
xor
inc
clc
in
mov
lods
mov
mov
outsl
sub
scas
xor
sbb
inc
in
into
out
cmp
js
icebp
scas
stos
adc
pop
ret
outsl
stos
add
into
or
mov
lret
push
in
add
jp
fwait
das
ret
notb
xchg
ja
dec
in
fs
les
push
inc
cmp
dec
cmp
into
out
and
mov
push
test
outsl
aam
add
jl
pushl
push
arpl
mov
jae
or
ss
xor
lret
insb
mov
fistpl
cld
test
notl
pusha
jg
sub
hlt
sbb
aaa
mov
outsb
sub
jl
xchg
insl
lret
pusha
nop
push
mov
js
les
sahf
dec
pop
aas
add
icebp
out
xchg
iret
cmp
fs
jne
push
adc
dec
and
push
loopne
out
xlat
cwtl
push
fstl
xchg
xchg
push
hlt
and
add
decl
iret
dec
in
imull
fcmovb
mov
loope
mov
in
and
push
shl
push
push
mov
clc
mov
out
fdivl
mov
loope
in
sbb
aas
mov
or
lock
sub
scas
or
sbb
fldl
push
iret
adc
push
sub
sbb
pop
les
add
sbb
psubsb
cmp
or
add
loopne
xchg
adc
lds
mov
fisttps
shl
sbbb
mov
mov
mov
aaa
dec
fs
and
and
fistps
inc
mov
inc
jge
es
inc
xor
pop
leave
and
mov
and
mov
lods
jmp
cmpsb
pop
es
test
push
fdivrl
daa
fwait
daa
lods
jne
lock
jmp
xor
test
inc
or
pop
inc
push
gs
or
xor
push
jno
mov
cmp
mov
jns
jne
call
push
lea
daa
ljmp
xor
sbb
popf
into
lods
fldl
divb
add
inc
or
push
roll
inc
xchg
sub
fxch
sbb
add
cmpb
and
dec
in
fidivs
or
push
es
xor
loopne
sub
adc
inc
sub
les
pop
or
add
and
pop
dec
dec
mov
inc
jecxz
dec
sahf
mov
lret
fisubs
movsb
addr16
rorb
and
aaa
push
adc
int3
mov
and
adc
push
int
sbb
mov
mov
cmc
pop
sbb
ss
xchg
mov
fwait
pushf
outsb
or
and
inc
pop
ror
in
mov
sub
popf
or
push
in
addb
or
sbb
add
push
xor
adc
xor
xchg
fisttps
and
dec
inc
imul
mov
test
aam
int3
insb
cmpsl
cli
mov
test
push
lods
ljmp
or
out
mov
dec
jmp
leave
popf
subb
push
jecxz
iret
leave
cwtl
pop
jle
enter
or
xchg
xchg
pushf
add
in
dec
sbb
jecxz
cmpl
call
in
and
add
pop
mov
rcrb
int3
int3
mov
sbb
setg
movsb
adc
and
pushf
add
cli
arpl
adc
jg
aam
in
add
mov
inc
cmp
fdivrp
add
or
fiadds
pop
dec
aad
cltd
mov
pusha
add
inc
test
sti
pop
arpl
or
adc
in
push
adc
addl
jl
adc
fidivrs
lcall
sbb
sbb
stc
xchg
or
in
jle
loopne
sbb
adc
jle
add
push
add
jmp
xchg
cmpsb
pop
decl
test
or
fwait
cld
sub
jmp
push
leave
test
cvtps2pi
sbb
mov
in
jle
jmp
inc
push
sub
decl
int3
push
sub
fwait
test
enter
cmp
sahf
ljmp
jle
in
dec
or
adc
inc
or
or
sti
imul
insl
insl
and
adcb
mov
sbb
adc
std
cmpsb
adc
scas
mov
inc
push
pushf
or
add
inc
ds
add
fmulp
inc
aam
dec
dec
sbb
mov
scas
jecxz
iret
sbb
cmp
mov
test
and
or
insb
mov
xchg
dec
add
cmp
leave
mov
pop
ljmp
push
push
add
mov
mov
in
test
and
andl
jmp
adc
push
sbb
adc
out
sbb
inc
cmpsb
inc
fs
or
mov
insb
in
aam
adc
jmp
mov
add
pop
ficompl
shll
lcall
rcl
dec
or
xor
lea
push
das
out
jmp
repz
mov
add
or
sub
repnz
in
in
hlt
adc
sub
scas
js
adc
aam
lock
adc
and
mov
rcrl
adc
dec
add
dec
mov
sti
jmp
cmp
sub
cmp
mov
or
std
or
mov
cli
or
mov
or
mov
int
pop
cmpsb
sub
bswap
jl
jle
push
sub
push
lea
inc
dec
mov
jp
xrelease
add
add
mov
xor
inc
sbb
mov
test
enter
mov
adc
stos
mov
sahf
test
mov
cld
mov
imul
push
addr16
stos
dec
sbb
imul
add
lods
adc
int3
dec
jle
jg
dec
movsb
scas
fmulp
push
mov
mov
or
rcrb
sub
dec
stos
enter
mov
sub
scas
inc
adc
movsl
hlt
jle
in
cld
dec
pop
jne
inc
or
test
jle
insb
adc
mov
mov
pop
scas
mov
mov
loopne
add
shrl
adc
bound
call
adc
cmpsb
mov
mov
dec
fimull
mov
jle
clc
sbbl
cld
stos
mov
adc
dec
in
dec
not
enter
fmull
lahf
lods
mov
sti
inc
fs
out
and
or
mov
push
call
sbb
or
mov
andb
sbbl
les
sbb
jbe
jae
add
stos
add
out
sbb
mov
sbbb
jnp
jb
jnp
adc
and
mov
or
mov
clc
mov
sarl
stos
ljmp
mov
frstor
jg
push
and
in
nop
jle,pn
xchg
mov
add
xchg
pop
out
mov
mov
jecxz
add
std
sbb
imul
dec
or
decb
rcr
mov
add
mov
or
test
inc
or
ljmp
mov
sahf
sub
imul
fs
mov
sbb
jmp
popl
fstpt
mov
xchg
enter
add
mov
lds
push
ds
cmpsb
adc
inc
sub
test
or
xchg
dec
mov
sti
dec
add
adc
xchg
clc
add
test
imul
mov
pop
pop
mov
leave
dec
mov
orb
andb
add
pusha
jnp
mov
aaa
pusha
and
les
sbb
notl
scas
or
sbb
jbe
add
adcl
mov
xlat
pop
mov
add
pop
sahf
pop
jg
inc
mov
sub
mov
imul
cli
mov
pushf
cs
pop
out
or
fwait
inc
mov
add
xchg
xor
das
or
push
add
mov
sub
mov
arpl
in
lret
mov
sbb
imul
jle
test
sti
add
es
fbstp
jnp
mov
mov
mov
push
sub
insb
lret
clc
sub
jge
mov
or
push
push
cli
add
or
fs
inc
mov
lods
push
jnp
mov
lea
hlt
or
js
popf
int3
pushf
cmp
nop
in
add
push
test
mov
mov
loope
in
jnp
cmpl
in
push
mov
adc
cld
arpl
aas
les
popf
ss
dec
mov
jl
pop
cmp
lea
sub
lods
sbb
stos
add
test
push
add
xchg
sub
js
adc
or
fldt
jno
or
popf
xchg
xchg
test
test
sub
arpl
jnp
add
enter
add
lcall
add
nop
popf
scas
fisttpl
and
nop
mov
pop
stos
sti
inc
dec
dec
mov
add
stc
lret
sub
dec
imul
mov
cmc
add
adc
repz
push
loop
popf
cmpsb
and
pop
data16
in
and
call
mov
mov
int
cmpl
mov
sbb
inc
adc
or
dec
je
test
dec
cmpsb
push
add
imul
shr
mov
or
mov
lret
gs
in
and
or
imul
xor
adc
aas
jne
stos
mov
pop
stos
xchg
test
xchg
pusha
sbb
jmp
adc
or
in
push
xchg
and
fs
bound
test
cwtl
daa
cli
enter
dec
mov
mov
insl
insb
jle
popa
sub
jmp
daa
sti
imul
jp
test
loop
push
xchg
mov
icebp
loope
frstor
in
adc
jecxz
clc
mov
add
sahf
fnstcw
mov
add
lea
xchg
push
arpl
dec
cld
icebp
sbb
jb
lret
or
or
adc
in
fcmovnb
pop
mov
rcl
adc
aaa
inc
adc
mov
push
xchg
sbb
mov
stc
stc
fcmovb
mov
call
mov
in
mov
jmp
dec
stos
pushf
sti
es
or
test
add
std
add
lds
clc
dec
fsubr
cmp
mov
dec
sub
dec
fistpl
dec
ljmp
push
imul
in
scas
movsb
lret
sub
lret
add
leave
add
xor
add
aad
lret
xchg
imul
cli
mov
fsts
adc
fildl
rcll
or
adc
jne
mov
jb
repnz
jle
rep
scas
ret
sub
dec
mov
nop
push
or
imul
mov
jnp
add
repz
imul
and
repnz
mov
lcall
dec
addl
cld
inc
sbb
mov
add
and
or
pusha
inc
mov
mov
sub
mov
out
add
cmc
ret
or
sub
adc
lods
mov
shrl
ret
clc
popl
xchg
addr16
add
inc
or
pop
movsl
fdiv
in
jle
lret
jb
sub
ljmp
loope
push
icebp
mov
les
cmp
fiaddl
aam
inc
in
rcrb
lret
jle
sub
into
cmpsl
push
mov
repnz
imul
dec
call
into
xchg
subl
or
ja
lds
mov
push
arpl
sbb
call
mov
call
mov
pop
or
lcall
xor
lret
ds
and
push
push
loopne
jae
test
jmp
cmp
inc
dec
fiaddl
scas
int3
cmpsb
adc
loope
dec
mov
lds
arpl
jle
mov
lcall
lds
jns
test
jle
push
xchg
sbb
cmp
mov
jnp
add
int3
adc
or
fsubs
sbb
leave
leave
mov
mov
insb
fdivp
push
in
add
int3
rcr
inc
xchg
outsl
in
add
or
adc
loopne
or
add
adc
fcompl
push
jns
or
test
popf
or
adc
ret
jmp
or
xchg
stos
pop
xchg
mov
insl
call
or
add
sbb
inc
adc
and
movsl
sbb
xchg
or
mov
mov
shrb
movsb
mov
sbb
sbb
mov
sbb
xlat
sahf
imul
sbb
jge
dec
loope
and
lods
andb
mov
add
addr16
cld
fadd
sbb
call
pusha
mov
jle
add
push
loope
lret
sub
xchg
sub
movb
fcompl
inc
aam
and
loop
push
or
ljmp
mov
icebp
mov
xlat
sarl
mov
dec
mov
clc
lret
jb
push
mov
adc
in
mov
insb
fs
sub
mov
mov
adc
dec
pop
mov
mov
jle
xchg
jecxz
shlb
push
add
stos
clc
psllq
std
pop
cltd
adc
lret
pop
fdivrp
jecxz
jno
mov
cmpsb
repz
pop
in
movsl
or
sbb
add
sbb
hlt
lret
push
lods
movsl
pop
test
outsb
je
mov
adc
test
cld
loop
pop
cli
or
add
dec
addl
out
stos
or
orb
inc
insb
repz
and
adc
adcb
loope
test
jecxz
flds
dec
sub
push
ljmp
lods
int
and
or
inc
out
add
mov
jge
and
dec
enter
loop
xchg
imul
adc
cli
or
or
xchg
fistpl
ror
and
mov
out
jecxz
inc
std
dec
jbe
lea
cli
cltd
sub
fs
sbb
push
test
sahf
cli
adcb
hlt
lods
and
test
in
fsubl
imul
into
ljmp
test
stos
stc
xchg
xor
rolb
ficoms
push
pop
mov
and
dec
rorl
fistpl
nop
xchg
or
inc
xchg
mov
or
sbb
sub
lret
ljmp
adc
or
mov
sbb
int
mov
mov
inc
and
push
out
cwtl
dec
mov
xor
add
xchg
or
mov
imul
sbb
dec
sti
add
mov
jne
iret
lds
aaa
mov
mov
loopne
lcall
lods
pop
pop
add
sub
lahf
pcmpgtd
mov
popa
adc
sub
jle
pop
roll
movsl
xchg
fs
sub
ljmp
inc
jge
sbb
pop
or
scas
add
push
mov
pop
lods
in
xchg
mov
xchg
dec
xorl
hlt
adc
int3
mov
leave
pop
andl
lret
jle
out
test
sub
inc
mov
mov
push
xchg
lcall
out
dec
push
mov
cs
ljmp
es
into
arpl
in
imul
shll
gs
push
jl
pop
mov
movsl
call
pusha
sbb
iret
sbb
push
nop
inc
cmpsb
xor
sub
mov
daa
mov
gs
pop
dec
shlb
mov
dec
adc
aam
outsl
fsts
or
lods
jmp
stos
pop
call
fwait
scas
lret
jp
pushf
sbb
notb
sub
rolb
out
test
fpatan
inc
lods
sbb
rorb
loope
push
or
jle
cli
jo
or
mov
imul
sub
add
mov
pop
mov
movsb
out
outsl
enter
enter
mov
cli
cmpsl
shl
jmp
inc
mov
pop
cmpsl
pushf
jmp
rcrl
adc
scas
sbb
int3
sbb
insl
es
inc
call
or
sbb
jle
inc
gs
mov
push
aad
inc
or
jbe
sub
push
xchg
lds
push
xchg
mov
test
pushf
and
hlt
sti
inc
add
add
jle
mov
sub
adc
hlt
push
mov
push
in
cld
cld
sahf
adc
test
nop
mov
mov
fimuls
xor
cld
int3
scas
jae
std
sub
dec
or
insl
dec
stc
lret
lea
fucomi
ds
sbbb
mov
sti
lods
push
ljmp
mov
jg
lock
repnz
adc
cs
lret
lahf
jae
fisubs
inc
sbb
push
and
int3
push
imul
sbb
add
add
pusha
mov
xor
repnz
pop
sti
mov
stos
cmp
in
inc
cmpsl
hlt
mov
mov
insl
stos
test
cwtl
pop
pop
popf
adc
loope
repz
lock
add
imul
cmpsb
dec
out
jmp
jl
pop
test
push
sbb
sahf
jmp
gs
mov
adc
adcb
fisubrl
movsl
lods
jl
mov
push
inc
add
pop
or
pop
jle
scas
push
xlat
sti
inc
lret
sub
pushf
sbb
xchg
pushf
mov
sbb
aaa
mov
push
je
or
movsl
aam
push
lcall
add
inc
push
add
xchg
lods
hlt
push
mov
repz
sbb
jp
movsl
add
lret
in
mov
int
xor
mov
sbb
movsb
or
add
mov
pop
outsb
in
sbb
ret
sub
loopne
adc
xor
mov
sub
add
fstps
std
jge
push
call
sub
mov
arpl
lds
or
gs
ficompl
pushf
xchg
sti
data16
fisttpl
scas
and
sub
shll
adc
and
stos
sub
fwait
cmp
mov
stc
or
mov
pop
ss
inc
jle
hlt
or
push
sar
cmpsl
insl
push
xchg
pop
lea
xchg
fwait
or
ljmp
ror
clc
jle
sub
imul
cmp
lret
or
popf
ljmp
and
mov
pop
push
sti
adc
add
or
and
das
call
jl
adc
adc
sbb
insb
out
or
add
fnstenv
jnp
scas
in
lret
push
dec
cld
movsl
hlt
imul
je
mov
mov
addr16
xlat
rcr
push
sub
and
int
iret
pushf
pop
pushf
mov
popf
or
mov
insl
add
outsb
add
adc
and
mov
lea
add
mov
or
push
jl
inc
adc
dec
sahf
dec
mov
fistpl
sbb
inc
scas
mov
int3
sahf
push
call
mov
loop
imul
in
xor
sbb
in
jmp
mov
or
jo
ret
sub
loopne
fisubrs
xchg
and
out
js
adc
cmp
push
lret
bound
add
adc
or
insl
mov
sbb
lret
mov
lods
push
movsl
dec
fstpl
push
or
fcompl
and
xor
jge
mov
mov
or
out
lods
js
mov
addr16
pushf
mov
mov
and
xor
or
xchg
sbb
test
es
jmp
test
dec
sbb
movsb
inc
in
mov
pop
mov
aaa
lret
push
xor
les
xchg
dec
mov
shrl
pop
sbb
loope
add
inc
shll
mov
sub
orb
enter
or
pop
inc
nop
sti
aad
sub
popa
enter
mov
popa
enter
mov
popa
enter
mov
test
lods
pminub
fs
test
out
sbb
xchg
mov
and
popf
sbb
pop
mov
fistpl
pop
xchg
mov
cwtl
cltd
sbb
insl
nop
or
mov
icebp
inc
fistl
inc
movswl
loop
or
sbb
daa
stc
push
jmp
adcb
inc
shll
dec
stc
fwait
or
cwtl
jmp
pop
out
pusha
sbb
mull
xchg
das
aaa
jecxz
inc
rcrl
sbb
enter
sti
mov
sub
enter
mov
int3
or
out
lret
sbb
or
xchg
imul
add
subl
push
sbb
bound
pushf
nop
in
mov
jmp
and
repz
in
mov
mov
or
in
sti
jle
cld
or
aaa
pop
stos
or
adc
push
mov
pop
cmpsl
fisttpl
cmp
insb
sbb
scas
adc
sbb
and
mov
js
out
int3
fwait
out
in
movsl
out
pushf
sbb
cmp
stos
mov
pop
inc
pop
sahf
jmp
xor
lret
outsl
mov
and
test
dec
imul
stos
sbb
sub
mov
jle
mov
mov
adc
inc
in
inc
loopne
inc
sub
shrb
cld
or
mov
pop
mov
push
jne
stos
clc
xchg
sbb
or
out
push
adc
mov
pop
rorb
out
jmp
jmp
ret
int3
mov
mov
sbb
adc
add
movsl
insb
jnp
inc
aam
push
mov
dec
pop
xor
pushf
mov
insb
jmp
scas
jmp
jecxz
lods
add
cmp
jbe
pop
add
andb
aaa
mov
ss
mov
dec
mov
dec
ret
sbb
scas
mov
and
jle
cmp
fs
jmp
int3
lods
lods
cld
jge
pop
adc
mov
sub
insl
sbb
dec
xor
in
xor
enter
jno
movsl
scas
or
pushl
sahf
cmpsb
lods
push
fmuls
es
scas
aaa
mov
cmpsb
sbb
push
pop
daa
ljmp
popf
scas
push
cmpsb
jbe
cmc
sbb
adc
mov
push
xor
dec
pop
sbb
adc
adc
orb
aam
lret
les
icebp
repnz
rep
loop
stos
jle
outsl
stos
adc
or
lret
xor
test
in
mov
xor
push
adc
mov
lock
mov
push
sub
scas
fisttpll
push
outsl
push
adcl
les
adc
das
setno
sub
lods
xor
adc
enter
xchg
dec
sbb
scas
add
push
ja
dec
sub
out
jmp
adc
xchg
or
mov
lcall
mov
stc
cmpsb
data16
sub
push
adcb
stos
sbb
cld
stos
lret
in
jle
or
and
fsubrl
movlps
loopne
int3
mov
enter
push
adc
into
in
lods
pusha
or
imul
jg
add
mov
cmp
sbb
or
sti
mov
mov
pop
fisubrl
xchg
loopne
xor
scas
pop
pop
negl
sub
lds
jecxz
repnz
cmp
loop
repz
push
cld
out
les
in
sbb
mov
mov
jg
add
add
sarl
pop
in
jle
push
xchg
cld
mov
jle
mov
xchg
aaa
out
sub
imul
sti
xor
jmp
or
jl
jmp
mov
sub
cld
int
jle
fisubrs
adc
es
push
ret
call
in
loop
dec
out
lea
adc
mov
hlt
dec
fwait
in
test
sbb
mov
hlt
push
lret
es
cmpsb
jp
lea
into
inc
fisttps
push
mov
jle
hlt
int
ret
mov
lods
mov
pop
movsl
pop
mov
mov
mov
dec
or
cs
adcl
jle
fdivrl
jnp
adc
mov
xchg
call
loope
jbe
fsubrl
sbb
mov
sti
roll
mov
dec
stos
add
lcall
pop
das
xorb
xor
lock
mov
sbb
push
imul
add
sti
in
movsl
push
push
mov
push
xor
mov
in
mov
dec
cs
call
lods
mov
jle
fldcw
out
scas
jnp
adc
sub
xchg
push
ftst
out
decb
cld
nop
sti
inc
cwtl
mov
jle
xor
dec
push
mov
adc
ss
test
sbb
lcall
incl
mov
movsl
dec
jle
fldt
add
sbb
sub
dec
hlt
adc
mov
fcmovu
dec
addr16
outsl
jmp
mov
loop
push
insl
or
ret
and
or
inc
call
lcall
fmull
mov
lods
or
lds
and
mov
decb
xchg
imul
mov
sub
add
sbb
loop
sub
pop
subl
lds
sbb
jmp
add
sub
aad
in
jmp
add
or
fbld
mov
stos
mov
dec
mov
sbbl
dec
sub
loop
add
in
adc
push
jecxz
fisttps
sub
insb
test
pop
mov
leave
daa
inc
mov
sub
dec
sub
sbb
ret
mov
out
and
test
sbb
hlt
push
sub
sub
push
les
mov
add
dec
mov
adc
jl
clc
les
adc
mov
mov
add
dec
stos
xor
mov
add
ljmp
clc
sub
enter
push
xchg
mov
mov
mov
outsl
push
call
mov
enter
adc
sub
movsl
sahf
mov
push
push
dec
ret
lret
mov
sub
out
sub
xchg
into
inc
int
adc
lea
mov
popf
iret
test
loop
dec
cli
stos
lcall
mov
push
cmpsl
orb
subl
pop
cli
pushf
movsl
pop
and
movsl
push
les
and
sub
stos
xor
sbb
mov
push
jle
and
and
insb
repnz
cs
sbb
cmpsl
repz
pop
inc
push
sub
inc
mov
xor
adc
add
imul
ret
loopne
push
in
loopne
sub
in
dec
xor
sbb
push
aad
sbb
sbbl
jle
push
fldl
inc
push
roll
and
add
arpl
sbb
stc
pop
fcomps
icebp
rorb
lds
dec
outsl
leave
fisttps
fsubl
sbb
adc
jno
lcall
mov
mov
stos
jge
pushf
aam
cmp
dec
push
int3
push
mov
jmp
aad
daa
sbb
popf
aaa
lret
scas
daa
out
imul
adc
repz
pop
push
push
inc
or
xchg
push
out
stos
sti
lret
inc
jmp
lea
repnz
mov
lea
cmc
testb
std
pop
or
leave
movsl
imul
stc
adc
push
shrb
cld
push
mov
imul
sbb
inc
pop
popa
stos
sti
add
cmp
loop
or
lcall
or
add
inc
out
lock
or
lea
add
sbb
or
inc
jle
xchg
pop
rcl
int
out
push
pop
jge
push
enter
pop
mov
insb
inc
mov
mov
mov
loop
lock
xor
in
cmpsb
mov
mov
add
movsb
lret
push
fisttps
faddl
mov
or
dec
mov
aad
mov
lods
sbb
push
jno
std
aam
or
sbb
divl
shr
testl
test
lar
sahf
stos
sbb
sub
outsb
mov
lea
xor
icebp
punpckhdq
movsb
dec
das
sub
addr16
shll
push
into
call
jge
inc
int3
fsubl
mov
insb
adc
xchg
and
ja
jnp
mov
xchg
or
mov
scas
enter
inc
movsb
fists
mov
push
jle
lods
jmp
mov
push
fxch
iret
cs
add
inc
mov
xchg
inc
faddl
mov
lea
dec
scas
imul
mov
mov
fisttpll
mov
jge
pop
xchg
mov
jns
push
add
add
lret
xchg
mov
cmpsb
mov
or
push
dec
clc
fsubr
sbb
mov
data16
mov
add
pop
sbb
cli
xchg
inc
pop
outsb
pop
arpl
mov
cmc
jne
dec
mov
mov
aam
ret
test
xchg
fs
movb
stos
cld
insl
lea
sti
popf
mov
push
adc
fmuls
mov
cld
jbe
sbb
mov
imul
cld
out
add
scas
ret
xchg
pop
mov
and
cld
ret
dec
sahf
sub
inc
ficompl
cmp
sbb
xor
les
mov
xchg
sub
inc
cli
sti
xchg
add
xlat
movsb
ret
fwait
mov
jp
mov
stos
outsl
sub
inc
push
js
in
and
jle
les
loope
mov
aam
lret
sub
mov
sbbl
lods
call
xor
scas
lea
add
jmp
mov
push
add
lock
adc
mov
xchg
std
or
jnp
push
mov
test
movsb
int
das
or
fldl
ffree
xchg
movsl
js
sahf
lret
popa
call
cmp
je
mov
dec
sbb
movsl
in
pop
insb
lret
or
lea
sbb
jle
pop
and
jns
and
push
sub
into
fimuls
add
xchg
insb
push
adc
cmpsl
hlt
dec
movsb
aam
testb
jmp
insb
and
or
in
mov
adc
imul
sbb
enter
or
sbb
sub
pushf
lods
sbb
dec
or
enter
out
adc
pop
test
cmp
pop
pop
mov
stos
xor
dec
push
mov
lock
adc
movsl
loope
int
mov
adc
mov
in
leave
in
mov
mov
in
cmc
mov
pop
stos
inc
outsb
xor
les
mov
insb
inc
hlt
xor
or
sbb
std
sub
mov
jmp
sbb
lea
dec
stc
cld
negl
sbb
pop
movsl
jge
out
rolb
out
fcompl
jg
loop
out
or
dec
out
or
sahf
mov
push
dec
and
stos
hlt
push
and
cmp
sub
cs
dec
les
dec
mov
ds
int3
movsl
dec
arpl
int3
std
xor
jb
idiv
movb
das
mov
push
add
cmc
pop
ffreep
mov
push
pushf
addl
push
ret
inc
rolb
add
dec
sbb
jae
leave
xor
aad
stc
fstps
xchg
out
mov
mov
jle
push
sti
gs
mov
fsubl
in
mov
jmp
test
and
nop
mov
add
lods
xchg
mov
call
lods
cmp
adc
out
loope
sub
push
pop
repnz
cmpsl
mov
inc
cmp
add
add
jnp
cld
xchg
mov
in
test
lret
lret
in
stc
nop
jmp
mov
sub
shr
mov
ficomps
pop
dec
mov
pop
dec
scas
jmp
loopne
xchg
or
sub
or
lods
cs
int3
push
lret
or
fisttpl
stos
pushf
mov
pop
sub
mov
scas
cs
inc
mov
push
mov
out
repz
jl
fdiv
add
mov
cmp
add
adc
scas
adc
mov
add
dec
mov
add
add
push
mov
adc
jmp
pop
jmp
sbb
mov
scas
adc
or
fisttps
scas
push
xchg
adc
cmp
dec
out
lret
repnz
push
movsl
sti
lahf
repz
mov
cmp
add
add
xorb
repz
out
jmp
and
sahf
mov
add
inc
mov
dec
sub
clc
mov
xchg
dec
sub
lret
dec
clc
add
les
lret
inc
or
pop
arpl
lret
mov
stos
mov
aam
fldl
or
pop
pop
cmp
jnp
iret
pop
push
sbb
and
stos
sahf
push
jl
scas
push
stc
jns
loop
mov
sbb
call
les
test
xchg
rcrl
xchg
fistpl
movsl
jg
cmpsb
inc
int
jne
jmp
aaa
xor
movsl
dec
mov
xchg
test
mov
sahf
scas
dec
or
sarb
dec
mov
mov
rcl
orb
mov
andl
cwtl
lret
rol
bound
loope
mov
gs
push
loop
pushf
je
jne
jl
and
xchg
fildll
adc
addr16
lock
cwtl
lock
xchg
cmp
sub
lret
push
enter
es
mov
jg
ret
fisttpl
or
pushf
add
movsb
jp
jnp
mov
mov
pop
mov
add
sub
rcl
mov
mov
arpl
mov
andb
data16
inc
xchg
or
add
dec
stos
inc
adcb
add
mov
add
fldenv
mov
dec
add
xchg
xchg
lea
lret
cmpb
insb
test
dec
out
cmpb
mov
jle
shl
stos
stos
ret
mov
or
cltd
add
imul
dec
movsb
or
mov
inc
inc
pop
movb
cltd
int
sti
jb
leave
inc
stos
jnp
sbb
insl
fsubl
push
pop
lret
test
aam
fnstsw
pop
cmp
lahf
sbb
mov
mov
dec
cmpsb
push
test
mov
xchg
inc
mov
leave
movsb
push
data16
or
xor
cmp
loopne
add
dec
lcall
scas
clc
inc
jle
xchg
mov
xor
sub
xchg
daa
jp
fisubrs
into
out
in
mov
or
clc
adc
arpl
shlb
ljmp
fs
gs
sbb
mov
push
adc
clc
in
in
scas
enter
xchg
int3
mov
fndisi(8087
xor
or
int3
mov
jge
mov
xor
and
loope
sub
cmp
ret
xchg
mov
or
mov
push
das
fidivs
mov
fs
inc
arpl
scas
les
daa
add
cmp
add
adc
mov
movsl
xor
pop
jp
fmull
cld
adc
es
pushf
xchg
aaa
fs
scas
stos
sti
inc
dec
mov
scas
pop
ficoms
movsb
sahf
inc
mov
repnz
repnz
xchg
mov
mov
movsl
cs
dec
dec
imul
lcall
cli
cmpsb
nop
aad
mov
xlat
pusha
adc
std
fiadds
push
inc
inc
xchg
ljmp
adc
lret
mov
mov
insl
xor
nop
add
sahf
cltd
sbbb
xchg
jle
or
scas
dec
jnp
ret
push
pop
adc
mov
daa
out
jg
sub
filds
fiadds
cld
xchg
imul
mov
pop
scas
pop
test
and
imulb
repnz
lret
add
and
adc
out
nop
hlt
dec
inc
inc
cmpsb
ret
cld
adc
pop
mov
imul
mov
fisttps
xchg
inc
mov
scas
loopne
jp
clc
popf
cwtl
test
repnz
out
cmpl
fcomps
sbb
jecxz
mov
or
sahf
mov
test
cmpsl
jge
iret
xchg
mov
mov
push
pop
test
int
ret
mov
dec
mul
pushf
sub
mov
out
adc
add
add
enter
pop
and
dec
and
mov
mov
stos
jbe
or
jle
sbb
stos
jne
sbb
loopne
loope
fnstsw
push
mov
out
and
enter
adc
out
xchg
jmp
xor
jns
popa
rclb
jl
dec
cmpsb
xchg
lret
call
lods
bound
fisubl
fisttpll
mov
pop
sti
int
sbb
sub
fisttpll
out
pop
push
ljmp
sub
cmp
iret
int3
push
mov
fildl
cld
std
mov
lahf
repnz
mov
sub
dec
test
mov
sbb
cmpsb
popa
jmp
popf
scas
aas
mov
mov
dec
add
mov
push
inc
jp
icebp
enter
inc
lods
int
or
xchg
fxtract
push
insl
or
jg
repnz
pop
jns
cld
sahf
jnp
in
cld
in
add
ds
mov
shll
sub
aam
int3
sub
in
cwtl
jnp
sub
ret
or
sbb
cmpsl
insl
pop
movsl
hlt
clc
push
pop
sbb
xchg
call
mov
insl
jl
mov
int3
adc
fs
test
mov
repnz
xlat
pop
adc
or
mov
xchg
lea
jmp
js
adc
sahf
test
add
add
jmp
lret
mov
cli
mov
lea
add
mov
jg
sbb
adc
arpl
sbb
xchg
adc
xchg
jmp
mov
pushf
adc
pushf
adc
sbb
adc
cwtl
cli
xchg
enter
xchg
sti
xor
and
jae
lods
or
or
enter
adc
push
xor
int3
lds
adc
dec
or
test
nop
aaa
imul
ljmp
dec
pop
es
js
dec
sbb
lret
sbb
add
in
loope
fwait
int3
les
adc
lods
or
pop
inc
add
adc
dec
hlt
pop
sbb
fwait
cmp
sbb
in
aaa
les
int3
sbb
mov
mov
scas
scas
push
ret
inc
sbb
sbb
sbb
mov
ficompl
aad
movsl
push
pop
scas
jnp
sub
pusha
mov
jnp
insb
sahf
cltd
into
out
decl
or
sub
push
inc
push
sub
push
xchg
cld
into
xchg
test
xchg
repz
xchg
lret
pop
adc
fisttpll
adc
xchg
scas
push
bt
mov
cmp
push
or
cld
test
lds
fldenv
sub
sub
adc
into
imul
push
ljmp
adc
cmp
scas
sarl
mov
repz
cmp
sub
out
hlt
add
inc
ss
lret
or
or
mov
sbb
fimuls
ds
rclb
push
adc
adc
imul
xor
mov
sbb
shr
sti
les
dec
into
jmp
cmp
rorb
xchg
mov
das
xor
sub
sahf
test
jns
pusha
psrad
outsb
mov
pop
fucomp
jmp
jb
lret
sbb
int3
repnz
insl
dec
cwtl
add
sub
mov
pop
leave
test
stc
mov
or
adc
ljmp
stc
andl
out
sub
sbb
sbb
movq
lods
bnd
incl
pop
in
inc
fldpi
mov
sbb
call
cmpsl
call
pop
cmpsb
or
aam
or
test
jmp
cmpl
xchg
popa
pop
pop
push
xchg
cmpsb
test
fldt
cltd
or
popa
push
inc
and
xchg
in
xlat
add
clc
test
stos
loope
or
push
mov
or
lret
add
pusha
sub
test
js
or
jge
mov
mov
add
and
and
dec
test
mov
cs
mov
or
test
cwtl
lret
push
lock
stos
sub
jl
in
int
rolb
jmp
lret
push
add
cli
lcall
xlat
test
xchg
sti
adc
dec
enter
or
cli
enter
sar
lret
fildl
cli
push
enter
int3
jg
fucomip
xchg
add
rorb
enter
xchg
sti
adc
adc
lahf
ljmp
sti
inc
lret
add
cli
pop
enter
sti
rorl
stc
xchg
or
lret
push
fiaddl
or
shlb
andl
in
dec
add
aaa
add
xor
lcall
push
ret
pop
rcll
shr
in
std
mov
in
mov
or
or
cltd
pushf
mov
lock
inc
movsb
and
lods
test
arpl
les
sbb
push
push
lret
sbb
loopne
jg
sahf
pop
pop
fcomip
pop
push
xor
add
jl
mov
or
mov
lret
dec
jle
add
add
in
jg
fbld
push
ret
mov
repnz
subb
ficomps
pop
fbstp
sahf
test
mov
leave
lods
movsb
ret
xchg
in
and
daa
in
sub
jae
mov
add
in
push
fidivrs
push
mov
mov
pop
adc
add
fsubl
add
mov
jg
js
jge
mov
or
data16
adc
dec
mov
pop
mov
adc
pop
push
xchg
dec
and
cltd
and
insl
xlat
enter
pop
or
push
mov
out
mov
lret
xchg
out
aas
and
jnp
push
ja
push
xchg
arpl
clc
lds
xchg
adc
cmp
cmpsl
sub
ret
and
cmp
or
lret
popa
sub
mov
jb
lds
es
int3
insb
test
push
dec
lock
dec
inc
mov
jbe
in
test
mov
sbb
push
movsb
dec
sarb
mov
out
lcall
add
cs
pop
pop
or
cmpsl
push
jg
xor
in
jle
or
cmpsb
mov
push
nop
dec
adcb
sbb
jg
or
js
mov
add
mov
jmp
lds
xchg
pop
or
arpl
jmp
lods
xor
popf
sub
cltd
or
sti
test
es
shlb
es
pop
pop
fimuls
stos
and
push
in
or
insl
jle
call
or
or
in
out
cmp
arpl
pusha
fdivrl
ret
bound
stos
sbb
add
add
orl
mov
test
add
add
in
sub
test
addb
mov
insb
xchg
out
cmpb
arpl
aas
sbb
mov
sbb
in
mov
or
mov
in
push
sub
cmpsb
in
and
adc
fcomp
or
cmp
pop
xchg
mov
aam
repz
cltd
inc
or
adc
orb
add
inc
add
shl
sbb
loope
push
out
add
outsb
sti
inc
in
arpl
aad
ret
lods
cmp
sub
cmp
int3
sbb
mov
mov
sub
mov
sbb
sub
ffreep
sbb
cmp
fwait
fs
popa
fincstp
andb
mov
mov
xchg
fptan
push
int
std
repnz
mov
in
aad
fdivr
xchg
push
mov
mov
popa
fnstcw
arpl
dec
mov
mov
movsb
movsb
pop
add
frstor
pop
cmp
or
inc
sbb
cmpb
cmp
cs
and
in
pop
int3
and
cmp
xor
fwait
push
int
popf
mov
js
sti
test
mov
dec
in
jno
add
mov
out
mov
stc
xchg
loop
cltd
sub
pop
inc
cmp
jecxz
nop
fwait
adc
clc
enter
jecxz
sbb
push
das
sbb
rorl
dec
test
lock
bound
sbb
jnp
sbb
in
ds
faddl
repnz
fisubl
pop
sbb
in
and
andb
int3
cmp
adc
pop
popa
int
es
std
push
insb
dec
or
daa
imul
orb
pop
cld
dec
in
inc
insl
xor
inc
inc
dec
sbbl
push
cwtl
jns
add
adc
insb
mov
mov
fwait
xor
mov
mov
xchg
or
int3
pop
push
mov
inc
mov
mov
sub
hlt
fwait
push
sbb
daa
push
stc
adcb
add
pop
inc
leave
test
out
lret
and
mov
fcom
inc
rolb
sahf
scas
pop
iret
ds
insb
adc
mov
pop
xchg
mov
shlb
or
std
jb
dec
dec
fs
inc
lret
ja
dec
dec
shlb
dec
pop
push
add
stc
pop
pop
leave
add
adc
andb
cmpsl
pop
roll
push
xchg
call
jmp
stos
loopne
ljmp
sbb
mov
pop
jmp
fs
inc
or
adcb
or
or
or
int3
pop
dec
jmp
mov
cli
and
fiadds
mov
hlt
add
cli
mov
das
or
test
call
int3
hlt
lods
out
cwtl
test
mov
lret
push
stos
push
mov
imul
adc
loop
into
and
add
div
jg
movsb
arpl
and
lahf
or
pusha
mov
pop
shrb
sarb
sahf
jmp
sbb
or
lahf
mov
jb
loopne
popa
lds
fbld
push
cmpsb
movsb
imul
repz
clc
add
into
pop
sub
pop
int
cld
jo
aam
xorb
mov
cmp
movsl
xlat
out
cmp
out
std
jg
or
xchg
jle
fiaddl
push
jge
xlat
and
add
lret
and
les
fcomip
int3
call
cmp
mov
mov
bound
addl
mov
test
lea
inc
stos
add
cli
jecxz
loopne
fsubs
sbbl
mov
testb
adc
mov
aaa
add
inc
pop
scas
rcrl
sarl
out
fsubrs
or
jnp
adc
int3
inc
cltd
mov
incl
cli
test
rorb
rolb
mov
enter
mov
leave
ljmp
add
cli
popf
enter
std
sti
or
cli
add
sub
push
mov
cltd
xchg
or
or
mov
insb
dec
out
stos
mov
imul
pop
dec
movsb
cmp
std
cli
sub
ficoml
jp
inc
cs
int3
mov
cwtl
movsb
mov
fdivr
lcall
or
js
cld
or
adc
jmp
mov
adc
cld
dec
sahf
popf
or
cmp
and
push
call
loopne
jo
adc
mov
clc
inc
lret
loop
jmp
roll
adc
movb
adc
in
lods
out
movsb
sahf
or
mov
mov
out
js
bound
and
mov
in
lcall
or
mov
pusha
lods
or
mov
add
cli
imul
test
sub
mov
or
jmp
lret
pop
mov
or
sub
rorl
mov
add
ljmp
fisubs
pop
or
add
or
dec
mov
ficoms
sbb
pusha
fadd
or
sti
out
pop
stc
or
sbbl
cmp
or
rorb
sub
mov
les
fmull
stos
pop
jl
xor
int3
push
les
int3
sbb
xor
int3
loope
stos
mov
test
je
out
cli
sahf
inc
orl
mov
in
jmp
push
xchg
mov
push
jmp
mov
add
cli
adc
nop
test
adc
cli
sbb
cltd
test
lcall
add
cli
sbb
sahf
sti
dec
add
addl
test
test
xchg
or
mov
adcb
adc
mov
stc
loope
js
loop
sub
inc
stc
push
xchg
xchg
sbb
and
push
ret
lret
pop
xorl
add
xchg
sbb
lcall
or
movsl
lret
push
add
stc
jbe
xchg
lret
ljmp
pop
mov
xchg
mov
pop
test
or
loop
jmp
mov
in
das
xlat
lods
xor
dec
sbb
or
add
or
in
lahf
enter
or
pusha
out
pop
icebp
sbb
lods
add
or
adc
nop
adc
or
pop
pusha
xor
mov
or
lods
cmp
or
cmpsb
and
mov
push
and
inc
call
or
sub
mov
dec
dec
lret
in
xchg
shl
and
mov
xchg
int3
mov
lock
fcomip
aas
hlt
and
jns
jg
mov
cltd
imul
pop
adc
adc
xchg
imul
or
stc
movsb
jecxz
mov
fwait
mov
aad
pop
jmp
out
std
pop
rcrb
mov
mov
mov
mov
ret
lock
in
sbbl
jno
sti
aas
js
and
ds
push
dec
loop
cmp
jb
ffreep
bound
and
ret
inc
shr
addl
test
out
xchg
lea
mov
ret
lds
inc
in
pop
punpckldq
mov
or
and
mov
jns
pusha
loop
in
test
and
and
dec
int3
aad
stc
aam
stc
popa
sahf
jecxz
outsb
movsb
popl
or
outsl
add
popf
add
std
adcb
out
fldl2t
lahf
xchg
pop
or
cwtl
jl
and
xchg
xchg
add
pop
sahf
mov
adc
addl
or
call
sahf
adc
std
and
inc
sbb
mov
mov
sbb
mov
fildll
push
int3
mov
fcmovb
test
ss
sbb
or
xchg
sbb
add
sbb
cwtl
sub
int3
mov
push
out
jecxz
mov
leave
stos
int3
jae
shrl
sub
ds
mov
int3
cmp
ljmp
lock
mov
cs
or
add
lods
or
aam
int3
add
in
add
pop
aas
mov
incl
mov
dec
std
insl
add
push
xchg
call
push
and
sbb
iret
mov
sbb
sbb
sahf
xor
cmp
and
mov
fisttpl
inc
push
lcall
push
mov
in
lret
mov
cmovs
movsl
lea
sbb
repz
lea
in
in
jmp
test
es
xor
xor
xor
cs
xor
xor
mov
and
lock
out
cvtdq2ps
pop
adc
mov
rcrb
mov
leave
aaa
popa
cmp
in
mov
xor
xor
xor
repz
icebp
pop
lock
out
pop
out
sbb
jp
jae
icebp
in
adc
paddsw
insl
push
sub
fimuls
sahf
or
push
in
inc
popf
mov
pop
mov
pop
xchg
pop
outsl
pop
in
pop
sub
jns
imul
cmp
sub
sbb
cmp
push
jmp
and
xor
xor
sub
repz
lock
in
xor
xchg
movsb
icebp
jle
jl
adc
xchg
in
push
in
into
lods
cld
movsl
imul
repnz
mov
cvttps2pi
gs
jns
imul
cmp
insb
inc
or
inc
and
pop
inc
dec
nop
cmp
sub
and
dec
ffreep
in
jns
xchg
insb
pop
fimuls
sahf
inc
pop
lds
ret
fucom
popf
add
pop
jl
cli
pop
stc
pop
clc
pop
negb
pop
xchg
pop
rcrl
pop
out
mov
test
dec
sarb
sub
cmp
cmp
mov
or
and
and
cmp
cmp
xor
xor
pop
jl
and
xor
xor
inc
out
xor
lock
xor
pop
out
mov
push
call
ljmp
mov
adc
data16
push
xor
inc
fimuls
add
mov
mov
dec
aad
push
out
push
push
lret
in
jmp
push
loopne
lahf
popf
pop
pop
mov
pop
aaa
pop
jbe
jne
je
adc
mov
lds
mov
mov
scas
mov
scas
push
scas
xchg
push
movsl
out
and
add
pop
push
xchg
cmc
repz
iret
lea
or
test
push
sbb
and
sbb
lods
dec
push
mov
pop
mov
or
xchg
pop
sti
xchg
add
xor
fwait
xor
xor
or
pop
mov
mov
mov
scas
ja
xchg
scas
push
scas
xchg
scas
adc
scas
xchg
scas
adc
leave
and
or
push
in
xchg
cmp
ficoml
cwtl
add
fmull
cmp
jns
sbb
mov
inc
outsl
sub
mov
scas
mov
scas
mov
scas
cwtl
scas
test
filds
test
int3
in
or
sbbl
pop
or
jo
sbb
nop
call
clts
mov
mov
pop
loope
ror
jnp
mov
movsl
inc
push
pop
jae
mov
mov
leave
test
mov
mov
mov
mov
scas
adc
insb
gs
jo
pop
mov
mov
mov
mov
scas
fldt
ljmp
popl
in
jle
pushf
movsl
jo
fisubl
notl
out
repz
mov
in
adc
lret
test
mov
dec
loop
dec
cmpsb
nop
movsb
push
mov
mov
rclb
xor
push
or
dec
repnz
loop
fucomip
sti
out
lock
cs
or
insl
adc
push
fimuls
out
int3
ret
sub
and
cmp
push
out
mov
dec
repz
repnz
lock
jge
push
in
femms
mov
orb
sbb
add
orb
mov
jp
mov
jb
xchg
lea
lea
lea
lea
movl
popf
je
adc
pop
pop
minps
adc
mov
cmp
cmp
cmp
fiaddl
pop
xchg
pop
aad
jmp
add
mov
pop
in
lcall
adc
adc
xchg
cmovp
cmpsb
ret
add
movsl
cmpb
xchg
popa
adc
and
xchg
push
add
mov
xchg
repz
mov
les
mov
xchg
inc
pop
sbbb
pushf
mov
cmpsb
lcall
or
cwtl
leave
sub
test
add
pushl
sahf
xor
cs
je
mov
scas
sbb
cltd
scas
sbb
xchg
scas
pop
into
xchg
out
lds
in
adc
xchg
in
adc
xchg
in
adc
xchg
in
adc
nop
in
adc
in
paddsw
aam
inc
mov
or
into
xchg
mov
xchg
push
mov
sub
xor
nop
cmp
lret
in
ds
loope
or
mov
mov
adc
mov
mov
fisubl
lret
add
xor
mov
in
mov
xchg
mov
dec
jnp
rolb
xchg
inc
lret
jmp
ljmp
addl
xor
mov
mov
mov
jno
mov
int3
mov
mov
addr16
or
adc
cli
jg
call
cmpsl
andl
out
adc
clc
jg
fisttpl
or
push
or
std
or
sbb
sbb
scas
sbb
cmpsl
ljmp
leave
sbb
incl
inc
in
movl
xor
dec
es
jmp
or
or
adc
popl
test
adc
jmp
sbb
incl
or
jmp
xor
or
mov
and
notl
mov
cmpb
add
bound
cmp
int3
bound
daa
push
or
aaa
int3
mov
jmp
dec
cwtl
lret
sub
into
nop
sub
push
mov
aas
mov
push
inc
daa
out
sti
insb
cmp
sub
cld
testb
xor
call
push
xchg
insb
ss
sti
fs
cwtl
and
jo
xchg
inc
pushf
mov
jmp
mov
mov
aam
sbb
mov
in
dec
out
jmp
add
mov
nop
mov
add
sbb
jb
or
jp
les
test
inc
nop
fstpl
cs
loop
push
sbb
dec
pop
jo
adc
enter
sub
or
cltd
xchg
sub
out
cmp
enter
and
jle
das
sahf
dec
push
sbb
add
dec
jle
xor
loope
test
push
sbb
adc
sbb
sbb
fdivp
pop
ds
pop
or
scas
or
pop
les
xchg
sbb
mov
xchg
sti
cli
jmp
pop
add
stos
mov
and
mov
cmc
cmc
add
scas
mov
mov
mov
adc
call
inc
push
roll
ja
icebp
mov
add
cld
sti
pusha
sldt
subb
in
mov
dec
jg
in
sahf
mov
dec
sub
out
sti
add
sub
call
lods
hlt
mov
fs
enter
pop
test
mov
lods
mov
or
lret
xor
cld
cmc
fnstsw
push
xor
scas
arpl
add
fldt
repz
out
movsb
ss
and
das
int3
and
adc
loop
and
arpl
in
mov
jecxz
insb
daa
aaa
sub
fsubs
pop
shlb
in
icebp
in
sub
pusha
add
add
orb
mov
lods
lret
sti
xlat
out
xlat
fwait
mov
mov
into
sbb
add
or
or
stc
subl
add
xchg
sbb
sub
lcall
add
loop
enterw
adc
mov
inc
ret
xchg
adc
subl
mov
lods
fs
adc
jge
clc
fbld
mov
fidivl
cmpb
dec
fisttps
add
mov
icebp
ret
enter
sbb
jo
out
mov
in
ret
inc
xlat
pushf
nop
mov
mov
or
inc
adc
adc
adc
inc
test
add
ret
push
sahf
test
in
xor
push
and
cmp
jnp
les
inc
mov
sbb
xor
cmpsl
incb
mov
iret
mov
mov
loopne
aam
xor
sub
jbe
sbb
iretw
nop
dec
add
xchg
sub
in
cmpsl
mov
mov
insl
out
xor
add
push
jnp
test
jle
xchg
int3
dec
mov
jle
sbb
mov
stos
adc
mov
mov
bound
stos
mov
out
clc
or
cmp
add
xchg
mov
cmc
aam
lods
repnz
ljmp
test
adc
cmovp
inc
cs
inc
jp
std
lahf
rol
push
inc
test
lods
test
cli
fnstcw
ljmp
stc
pop
test
inc
xchg
mov
movsl
sub
int
adc
enterw
scas
add
fsub
insl
cmpsb
les
cmp
pop
loopne
sub
sbb
pop
push
mov
pop
cmp
int3
add
jo
push
les
mov
shl
seta
lret
lret
insb
jl
arpl
loop
lret
lea
and
outsb
sbb
hlt
out
imul
sub
ret
mov
mov
lods
mov
sbb
mov
lods
mov
or
lods
loope
sbb
loope
push
mov
mov
adc
int3
sbb
mov
or
mov
bound
cmc
push
cwtl
push
mov
aas
xchg
test
mov
ret
jnp
or
jns,pn
push
xchg
and
pop
fdivp
lret
pop
jp
lods
scas
dec
adc
jle
sub
call
fisubrs
push
ret
dec
fadds
xor
je
mov
inc
or
push
lret
imul
dec
adcl
pop
cld
dec
mov
inc
adc
lret
and
xor
out
sub
pop
mov
iret
in
js
ret
xchg
out
xor
or
sub
orl
mov
clc
pop
loopne
jecxz
push
and
shlb
loope
lcall
sub
in
sub
sbb
or
loopne
mov
mov
add
push
sbb
add
jns
fmuls
jecxz
clc
xchg
cmpsb
stc
out
inc
adc
scas
int3
outsl
adc
fiaddl
sub
insb
cltd
mov
add
xchg
cmp
ja
lahf
mov
fs
mov
popa
push
push
aad
mov
and
in
sbb
sub
sbb
pushf
loopne
add
mov
cmpsb
ljmp
or
test
inc
dec
into
ljmpw
test
js
lret
or
pushf
pop
push
add
mov
push
ljmp
or
test
cmp
add
inc
ljmp
mov
and
fdivrs
stc
dec
cmp
or
fs
ficoms
jmp
enter
mov
pop
push
cmc
insb
adc
pusha
dec
out
popa
std
lret
cld
ljmp
adc
jl
jge
mov
push
out
dec
dec
inc
test
in
rorb
push
test
andl
mov
dec
push
pusha
scas
jo
add
mov
sbb
pop
xor
fcoms
mov
bswap
outsl
andb
pminsw
test
jo
stos
notb
lds
fstl
fld
loope
lret
pop
pusha
test
test
call
dec
cmp
shrb
imul
mov
jge
dec
inc
mov
dec
sbb
mov
jge
icebp
dec
mov
mov
dec
movsb
mov
les
add
dec
jge
imul
repz
sub
loop
sti
stos
adc
bound
mov
cmp
xchg
lea
jbe
ret
push
movsl
mulb
dec
in
push
in
sub
jl
and
loope
leave
stos
sbb
in
mov
mov
imul
push
xchg
and
cmc
and
pop
pushf
mov
int3
push
mov
into
jl
pop
inc
test
das
subb
add
adc
sub
lret
fs
mov
and
fldt
jl
repz
sub
mov
out
fdivrs
and
fcompl
mov
add
fdivrl
mov
sbb
or
jmp
fistpl
sub
mov
add
mov
fiaddl
and
xchg
das
lahf
outsl
repz
dec
pop
push
ljmp
pop
cltd
and
gs
sub
call
int
and
or
xchg
andb
orl
fisubs
sbb
in
ficoml
jge
xor
jecxz
rcrb
movsl
lods
sahf
push
or
cmp
mov
les
inc
add
and
adc
or
data16
test
pop
pop
aad
dec
cld
movsl
in
sub
adc
cmpsb
pop
stos
and
or
leave
push
fst
push
stos
pushf
and
cmp
into
jno
mov
or
rorb
lret
popf
sub
or
or
adcb
test
ud2
pop
dec
mov
mov
mov
das
leave
sub
and
add
repnz
lret
rorb
nop
or
call
jecxz
pop
and
jle
int
xchg
mov
and
mov
icebp
cmpsb
cli
or
dec
fistl
les
aam
sbbl
test
sbb
pop
mov
int
test
ljmp
push
push
sub
xor
rclb
sti
jbe
xchg
push
lods
inc
pop
pop
sbb
shl
outsl
lret
fcmovnu
inc
addb
adc
xor
out
subb
mov
stos
movsb
in
aas
loopne
jnp
ret
popa
call
sbb
in
or
fnstsw
out
shrl
repnz
add
aaa
testl
pop
stos
sbb
int
cmp
stos
fldt
cmp
lahf
mov
test
nop
les
div
add
fnstcw
or
sbb
or
fldlg2
cltd
mov
pop
jecxz
and
fisttps
mov
cmp
std
nop
sub
inc
dec
mov
in
cltd
repnz
insb
idivl
inc
or
cmp
hlt
shrl
int3
into
adc
jbe
sti
sub
mov
icebp
mov
call
shl
leave
or
lods
aad
mov
and
sub
xor
mov
sbb
mov
xchg
pusha
sbb
dec
xchg
dec
in
sahf
int3
mov
sbb
sub
in
imul
pushf
pop
inc
cmpsl
dec
mov
or
xor
stos
cmpsl
std
adcl
outsl
ljmp
arpl
dec
jl
arpl
cwtl
arpl
insb
out
into
xor
or
add
repnz
adc
gs
jp
aas
add
shlb
les
pop
pusha
mov
pop
pop
pop
or
lods
les
mov
jns
and
lods
xchg
lea
ret
push
push
repz
xor
jl
mov
pop
add
mov
icebp
push
scas
lret
inc
adc
jae
movsl
inc
cmp
ljmp
aas
push
sub
adcl
jo
out
jae
or
fidivrl
cmp
nop
rol
je
mov
repnz
sub
pop
test
das
or
subl
iret
ljmp
push
subl
jno
call
nop
cmp
ret
sub
cmpsl
test
or
cmc
inc
call
out
inc
xchg
dec
or
mov
cmp
inc
call
jecxz
popa
push
and
ljmp
out
jp
dec
or
add
cmp
add
movsb
inc
sbb
inc
add
fwait
jo
ret
subl
push
jmp
test
outsb
and
and
push
and
mov
nop
call
cmp
shl
sbb
icebp
and
aam
lock
adc
inc
inc
or
mov
incl
sti
adc
enter
inc
lock
les
imul
or
xor
loop
xor
adc
test
xor
adc
movsb
sbb
fs
add
shr
cwtl
jmp
mov
or
insb
cmpsb
hlt
rcll
dec
xchg
mov
test
aam
lock
push
dec
or
loop
jecxz
mov
test
movsb
pop
clc
add
sti
sti
lret
mov
jae
int3
bound
sub
push
push
movsb
push
ljmp
or
mov
movsb
inc
pop
and
pushf
fwait
movsb
inc
call
gs
mov
adc
out
mov
mov
push
push
jl
loopne
sub
pop
jb
aam
les
sub
ror
push
dec
call
aad
push
loopne
cli
dec
xchg
incl
mov
mov
in
pushf
pusha
xchg
push
aad
in
push
int
mov
pop
in
call
gs
mov
aad
adc
dec
loope
add
jl
jmp
es
sbb
mov
xchg
add
mov
sbb
fistpl
test
rclb
mov
call
and
or
and
out
icebp
and
mulb
sub
and
icebp
pushf
sub
test
inc
out
arpl
cli
lret
inc
stc
ljmp
sbb
jle
in
pop
sub
sarb
mov
push
idivl
ss
inc
loopne
xor
xchg
inc
gs
test
sbb
adc
push
cmp
mov
rorb
imul
lea
test
push
test
sbb
xchg
dec
fsubs
icebp
test
mov
adc
push
test
mov
aam
jae
sbb
push
andnps
dec
jb
fld
movsl
rorb
and
movsl
mov
xchg
pusha
movsl
daa
xchg
or
ss
shlb
loopne
jae
push
lds
push
fcmovb
mov
into
bound
test
lret
cmpsl
adc
dec
shl
inc
xchg
mov
push
psrlw
mov
xchg
mov
in
push
mov
cmpsl
or
rcrb
mov
in
jae
or
in
or
in
lret
push
adc
iret
and
lock
mov
lret
inc
or
and
pushf
cltd
push
in
aas
dec
ljmp
in
adc
dec
je
lea
je
stos
mov
movsb
xchg
pop
mov
std
mov
xchg
xor
clc
jae
and
or
es
sub
cmc
es
xchg
jnp
lea
sbb
adc
lret
push
repz
jl
ret
xchg
jge
xchg
bound
mov
sbb
push
push
mov
dec
pushf
dec
xlat
add
packuswb
je
imul
setg
fisttpl
fs
mov
in
xor
les
push
mov
icebp
test
stc
mov
lret
inc
outsl
rcr
mov
fmuls
loope
and
sbb
or
mov
jg
ja
mov
sub
data16
add
xchg
lret
jnp
insb
outsb
and
adc
call
adc
pop
clc
mov
sub
mov
mov
push
push
push
mov
jb
pop
fisubs
insb
inc
push
test
jbe
pop
sbb
retw
adc
gs
stc
in
mov
aam
adc
cs
adc
pop
sub
call
mov
push
xchg
sub
push
or
or
or
cltd
lret
aas
scas
roll
call
icebp
push
add
out
jecxz
stos
push
mov
sub
sbb
mov
aam
sbb
mov
insl
mov
and
loope
cmp
insb
pop
bound
in
andl
xchg
jmp
out
sub
lods
in
sbb
add
adc
dec
loope
sub
aad
cwtl
or
mov
mov
mov
sti
in
xor
out
push
mov
cmp
arpl
or
popa
mov
adc
push
cli
mov
aas
int3
mov
call
mov
movsl
mov
call
movsl
lret
pop
jl
push
adc
test
push
pushf
cmp
add
mov
fisubrs
push
mov
iret
jp
cmp
pop
push
scas
outsl
pop
je
or
jb
dec
sbb
imul
jg
mov
sbb
or
dec
lret
cs
add
push
mov
sbb
inc
lcall
push
rcr
enter
adc
movsb
ljmp
sbb
mull
adc
test
imul
lods
lret
insb
jg
lock
lret
out
aas
pop
fisubs
mov
push
icebp
mov
test
jl
out
sahf
jns
movsl
or
out
out
mov
stos
add
cmp
or
pop
out
sub
sti
push
rorb
out
pushf
test
out
call
pushf
or
or
sub
push
leave
sub
rcrb
dec
sub
mov
sub
inc
popa
mov
nop
test
ljmp
lret
mov
aad
mov
insb
sbb
push
test
cli
or
mov
adc
xchg
cltd
mov
ljmp
sbb
in
lret
mov
jg
out
stos
in
sahf
insb
bound
or
call
fsubrs
in
xchg
in
add
daa
jg
sub
test
aam
push
imul
jmp
daa
xchg
ljmp
mov
daa
cmp
inc
insb
cmp
bound
mov
aam
enter
ret
jns
adcb
test
sbb
fwait
jl
cli
loopne
mov
add
cs
inc
inc
sub
and
ljmp
sbb
aad
inc
sbb
mov
pop
inc
cli
sub
mov
or
jl
xchg
dec
sub
fildl
out
shrb
out
out
mov
and
lods
add
jecxz
shrl
addr16
out
adc
jp
addr16
adc
pop
in
xchg
or
fbld
xchg
sub
inc
push
xchg
in
adc
and
adc
rol
movsl
shrl
cmp
shlb
adc
push
fstl
adc
std
jmp
push
or
nop
fisubrl
push
popa
out
xchg
int3
xchg
in
xor
loope
imul
rclb
mov
fcmovbe
cmp
adc
lret
or
add
fisttpl
xchg
mov
push
or
sbb
andl
sbb
icebp
and
cmp
mov
cmp
cmc
cmpsl
inc
test
cmpsl
aam
push
xchg
cmpsl
and
les
or
nop
test
mov
out
xor
ljmp
pushf
xor
jg
cwtl
daa
cltd
loopne
mov
lret
push
mov
sbb
or
and
andb
dec
xchg
in
mov
inc
fbld
or
jl
call
mov
mov
aas
sti
mov
mov
jmp
xchg
or
out
out
xchg
xchg
lock
cltd
ret
and
shlb
or
ret
mov
stos
fldenv
repz
mov
out
cld
jge
out
jbe
mov
gs
cmc
or
lret
xor
pusha
cs
inc
js
adc
call
test
in
arpl
add
lods
jnp
mov
mov
sbb
inc
stos
scas
js
mov
jmp
jge
movsl
mov
mov
push
jl
xchg
and
lods
add
loop
adc
testb
loope
jle
cmpsl
adc
test
pop
out
pop
stos
call
adc
pop
push
mov
xchg
andb
or
into
fwait
cmp
or
sbb
lods
test
or
mov
les
mov
pminub
rol
xor
fcomps
inc
jge
enter
add
or
sub
sub
add
test
loope
scas
jecxz
mov
arpl
sbb
dec
sti
lods
xor
cmpsb
lret
pushf
call
fadds
cmp
cmpsb
xchg
add
mov
add
jns
dec
jns
popf
jb
push
test
mov
adc
dec
jmp
push
push
and
int3
cs
out
adc
js
lds
pushf
or
push
push
push
lcall
les
ljmp
xorl
mov
or
or
cmp
ljmp
pop
push
add
xor
rclb
sbb
dec
in
fucomi
shlb
add
out
imul
sub
gs
daa
sbb
loop
mov
sub
or
lds
mov
je
sub
dec
roll
inc
push
jl
xchg
lret
test
cltd
test
repnz
fs
fadd
or
mov
into
or
and
into
bound
lock
ret
add
dec
rolb
mov
adc
data16
mov
cmc
cmpsb
mov
cwtl
mov
sbb
test
fsubrs
mov
adc
xchg
mov
cli
sbb
out
daa
cwtl
sub
dec
std
addr16
and
mov
sbb
fs
insl
and
or
sbb
daa
mov
test
adc
mov
dec
cld
mov
jecxz
repz
pop
dec
movsl
or
movsb
xchg
in
in
cld
sub
or
aaa
pushf
sti
jl
mov
pusha
addr16
add
mov
enter
lret
in
jl
pop
adc
push
lahf
xor
pushf
push
lods
aam
insl
outsb
inc
scas
insl
sub
fs
notl
mov
mov
pushf
or
test
mov
sbbb
mov
shl
ja
mov
scas
sub
scas
cmp
adc
mov
shr
xchg
adc
inc
inc
call
add
movb
xchg
adc
add
jge
xor
or
push
add
arpl
pop
push
push
fcomi
mov
inc
fcoml
xor
movsb
fidivs
or
dec
js
testl
aas
adc
decl
adc
adc
add
cli
push
movsb
or
out
push
or
adc
jmp
or
cmp
dec
int
xchg
pop
addr16
sbb
sub
sub
cmpsb
mov
sub
mov
xchg
gs
jo
add
mov
add
jecxz
subl
fmuls
outsl
lods
ljmp
mov
loope
adc
inc
inc
and
popa
and
stc
ljmp
add
lea
dec
pop
push
jle
fs
push
mov
jno
test
movsl
ljmp
mov
cld
in
cmp
adc
ljmp
sti
mov
pop
scas
or
sub
ljmp
inc
negb
dec
sbb
jbe
cld
or
cmpsl
mov
mov
out
and
int3
sbb
imul
fldt
jle
lret
into
inc
xchg
xchg
in
out
push
cmpsl
test
jg
dec
inc
mov
lock
sub
ret
inc
shrb
std
sbb
jl
jg
cmp
jle
inc
popf
test
mov
xchg
ljmp
or
push
adc
test
xchg
sbb
inc
inc
pop
xchg
rcrl
jnp
repnz
adc
ret
xchg
xchg
data16
shrl
push
scas
lcall
pop
imul
inc
jo
setno
and
std
leave
movsl
ljmp
xor
getsec
cmpsl
enter
xchg
roll
and
xchg
push
sbb
orb
rolb
or
cli
lahf
dec
aaa
cmpsl
movsl
call
jmp
dec
shrb
mov
popf
stc
loope
in
jp
aam
or
jae
nop
ret
ljmp
incb
rolb
testb
dec
xchg
and
fucomp
data16
in
xchg
call
cmp
lock
shrl
mov
je
mov
dec
sysexit
push
out
mov
adcb
pop
dec
push
daa
stos
out
jbe
inc
call
dec
sub
test
mov
mov
stos
loop
mov
sbbl
cmpsl
cmp
or
imul
adc
in
shll
mov
clc
dec
dec
dec
xchg
imul
lods
push
push
lea
stos
add
push
cmpsl
fwait
movsl
test
out
push
mov
mov
dec
push
stos
push
mov
into
in
jmp
mov
mov
jno
mov
adc
decb
movsb
stos
notb
stos
jg
sub
xchg
sti
shlb
repnz
lret
jecxz
inc
xchg
push
ret
xor
cmp
adc
outsb
lret
out
orb
or
push
lret
push
lods
push
aam
lret
cmpsb
js
les
push
lcall
out
sarl
loop
imul
sub
pop
shr
ljmp
ljmp
and
sar
movsl
repnz
lret
jg
sbb
mov
mov
cmpsl
call
ljmp
push
in
dec
sub
or
les
pop
jmp
or
loop
test
xchg
movsb
jns
or
js
rcrb
inc
inc
loopne
mov
xchg
mov
push
cli
cmp
inc
pop
pushf
insl
sub
movsl
inc
lret
addb
fcmove
or
ss
movsl
lods
stos
jmp
push
std
mov
test
aam
sub
aad
ret
pop
inc
ljmp
sbb
jg
test
ljmp
out
dec
sub
das
pop
sbb
sbb
scas
dec
sbb
out
inc
mov
insb
mov
dec
mull
dec
rorl
add
inc
cmc
mov
cmp
push
sub
stos
shll
and
fcmovb
ljmp
ljmp
sbb
in
mov
adc
xchg
ljmp
sbb
aaa
xchg
pushf
les
imul
imul
push
stos
mov
rolb
ljmp
or
mov
dec
and
inc
mov
enter
out
xchg
clc
lock
jecxz
pushf
push
mov
push
and
and
dec
push
mov
sub
cmpsb
sarb
or
sub
push
pop
stos
add
sub
ret
ret
aam
lret
adc
orb
fcoms
mov
cmpsb
pushf
cmpsb
dec
sahf
lret
dec
push
adc
xrelease
jecxz
xchg
movsl
mov
mov
call
xchg
into
stos
cwtl
iret
shrl
mov
mov
repz
outsl
adc
xchg
iret
out
outsb
dec
imul
inc
mov
jl
nop
fdivr
pop
mov
repnz
loop
int3
add
xchg
inc
call
jl
call
ss
or
adcl
cs
lret
mov
sar
out
jp
test
push
test
not
ficoml
not
inc
xchg
xchg
jecxz
das
out
in
xchg
out
test
enter
les
test
mov
flds
jl
aaa
cmpsl
inc
xchg
enter
popa
int
pop
push
stos
jmp
inc
jg
call
cmp
sbb
arpl
and
cmp
into
or
jns
inc
sbb
xchg
xchg
adc
push
mov
adc
or
dec
bound
xchg
fisubrs
dec
aaa
cmpsb
js
test
jbe
mov
js
mov
in
push
aas
mov
adc
sub
out
sub
aaa
and
push
jge
or
push
jge
movsb
or
inc
or
cmp
mov
adc
std
paddq
mov
rorb
call
cmp
pop
sub
mov
pusha
shlb
and
xchg
and
jl
sub
ljmp
sbb
aaa
pushf
mov
xor
lea
push
enter
sti
xchg
jle
inc
inc
push
mov
lods
dec
sbb
dec
mov
incb
lcall
data16
daa
dec
adc
sub
push
push
loope
clc
add
or
mov
fcmovu
sub
pop
out
mov
and
out
xchg
sub
or
pop
sti
cmp
addl
and
add
xchg
dec
dec
aas
push
or
adc
mov
loop
xchg
daa
sbb
dec
jae
in
jb
je
mov
cmp
icebp
sub
daa
and
and
nop
stos
inc
cmpsb
icebp
enter
nop
jecxz
adc
sub
and
cmpb
xlat
ds
mov
sahf
inc
addr16
out
jae
adc
out
fcmovne
ret
and
int3
movsl
cmp
std
sbb
cmp
loop
add
xchg
loop
or
lret
cmp
and
aad
ds
xor
jne
lret
arpl
daa
jle
jle
mov
inc
daa
les
movsb
inc
rorb
xchg
shrb
push
mov
js
xor
lcall
loopne
adc
and
adc
add
stos
lea
inc
fsubl
sub
imul
inc
mov
xor
stos
and
push
mov
pop
pop
cmp
fwait
sbbb
sbb
pop
movsb
lcall
xchg
les
or
adc
ds
sub
cmp
es
mov
mov
jns
sbb
sar
and
ret
xlat
sbb
mov
pop
dec
jp
cmp
adc
sub
enter
es
or
nop
push
mov
cwtl
in
cmp
stc
and
out
int3
call
gs
popf
adc
dec
lret
addb
mov
mov
clc
cmp
fcmove
sbb
or
ljmp
inc
movsb
rolb
mov
mov
in
out
cld
imul
xchg
cli
inc
lods
dec
ret
int3
or
sbb
inc
xchg
jmp
pop
dec
sbb
in
imul
rcrl
cmp
mov
in
pop
jmp
mov
lea
mov
or
and
bound
pop
and
adc
sbb
pop
mov
mov
xchg
sub
mov
shrb
int3
sahf
in
and
xor
stc
mov
lret
loop
adc
test
dec
or
stos
repz
inc
add
sbb
cmp
enter
mov
repz
adc
sarb
inc
cmc
push
stos
nop
add
loopne
lret
ficompl
sbbl
jmp
sbb
cld
cld
rorl
cld
daa
sahf
sub
pushf
pushf
and
sahf
lea
pusha
int3
add
in
add
pushf
lock
mov
add
push
data16
cmc
in
ror
daa
jle
loope
jnp
sub
aam
adc
xor
es
jle
cmpsb
adc
dec
mov
mov
iret
mov
hlt
inc
pop
sbb
push
mov
fs
mov
or
insb
add
out
adc
shlb
leave
mov
inc
mov
add
or
sub
repz
mov
jne
dec
inc
mov
movsl
sub
sbb
nop
inc
cmpsb
or
idivl
dec
test
jb
gs
cmp
add
dec
jle
cmp
dec
lret
fidivl
je
lcall
xchg
fidivrs
loop
pop
cwtl
lret
fs
sbb
in
mov
inc
add
inc
enter
mov
icebp
mov
jmp
std
adc
and
orl
ja
or
out
mov
icebp
das
in
or
or
or
push
pop
mov
sub
fcoml
add
inc
sbb
addb
mov
das
ss
xchg
cld
movsl
dec
out
xor
adc
loopne
dec
push
mov
aaa
addr16
ret
or
inc
xchg
push
inc
dec
adc
cli
adc
pop
pop
in
add
or
cltd
aam
inc
test
into
mov
cmp
xchg
repz
jecxz
test
movsl
cvtps2pd
imul
stos
imul
mov
cmpsl
push
and
mov
push
adc
stc
cmpsb
aam
inc
and
cs
push
and
pop
add
rcrb
push
mov
in
mov
fiaddl
and
sbb
push
test
movsl
xor
mov
cmp
dec
je
adc
fmull
ror
or
mov
fmul
hlt
and
cmpsl
push
lods
fwait
adc
add
ret
inc
into
addr16
test
xchg
pop
test
or
ret
add
stos
or
rcrb
jnp
test
mov
fisttpl
cvtps2pd
and
xor
or
or
fsubrs
popa
sti
xlat
add
cli
xor
sbb
ret
mov
add
or
lret
sbb
lods
les
cmpsb
mov
add
out
test
ret
or
hlt
mov
mov
inc
pop
lods
push
popf
dec
sti
pop
pop
int3
scas
mov
orl
cwtl
mov
cmp
out
pusha
inc
out
mov
jge
mov
lods
mov
cmp
mov
out
xor
inc
popa
jl
mov
cs
pop
xchg
xor
mov
test
mov
sub
mov
stos
jno
shll
insl
xor
lods
into
outsb
insb
adc
call
scas
dec
fs
or
mov
shlb
jg
jmp
sbb
xchg
test
or
je
scas
cmpsl
pop
fisttpl
sbb
add
dec
pushf
cmp
inc
jnp
aaa
jmp
adc
sub
call
or
push
jmp
sub
push
xor
out
pop
add
add
push
mov
pushf
aaa
or
sbb
sbb
cmp
fnstsw
sub
out
or
pop
or
iret
dec
fnsetpm(287
add
out
mov
lret
scas
lcall
lcall
add
sti
hlt
lret
sbb
decb
les
in
pop
hlt
in
divb
or
xchg
mov
andl
fmull
ljmp
adc
shrb
push
mov
orb
mov
or
adc
adc
push
mov
cmpsb
leave
out
js
cmp
cli
fstl
inc
rcl
ljmp
xor
jmp
xor
stos
pop
adc
adc
inc
mov
fldenv
push
ffree
jle
fcompl
scas
in
sbb
pop
mov
clc
mov
pop
stos
inc
or
and
jmp
sahf
inc
movsb
gs
jl
ljmp
stos
jno
push
sbb
jl
dec
mov
int3
mov
inc
dec
dec
sbb
and
jno
in
test
orb
or
mov
stos
insb
or
xor
sbb
sti
js
jb
mov
dec
xchg
lahf
jge
jno
imul
int
mov
xlat
xor
loop
jg
or
leave
jmp
stos
jl
fdivrp
push
pop
sahf
fnclex
dec
rcrb
mov
jmp
jmp
loop
jecxz
xchg
out
cmp
lods
enter
xor
inc
jp
jmp
pusha
jp
cmp
inc
cli
movsb
call
pop
add
mov
mov
out
xchg
push
or
mov
add
cmp
jnp
sahf
pop
out
mov
pop
andl
jmp
jmp
adcl
lcall
xchg
mov
mov
sbb
adc
xchg
and
insb
fisttpl
sbb
ljmp
in
mov
pushf
daa
sahf
test
xor
mov
push
mov
push
jle
enter
and
ljmp
into
adc
pushf
dec
into
and
adc
cld
xor
std
xor
mov
push
out
imul
inc
and
outsb
or
mov
lret
lea
movsl
sahf
andb
and
frstor
sub
sub
inc
ret
dec
and
inc
out
jnp
adcb
fidivrl
out
call
and
push
in
mov
push
pop
repz
inc
pop
enter
in
mov
sbb
aad
sahf
adc
int
sbb
inc
jl
repnz
push
mov
lods
mov
in
adc
xchg
pop
insb
push
mov
fildl
lret
sub
pop
imul
out
or
or
das
inc
mov
cli
out
mov
scas
lret
lods
sub
sbb
add
mov
or
outsb
stos
int3
pushf
add
ljmp
xor
adc
and
pushf
add
outsl
hlt
mov
shrl
pop
stc
addb
or
push
push
lock
mov
shrb
push
movsl
scas
lods
mov
fisubl
xor
and
cmpsl
jno
add
mov
adc
cmpsb
pop
repz
icebp
mov
pop
mov
mov
mov
sub
rcrl
cwtl
jnp
push
xchg
addr16
loopne
ljmp
cld
pop
or
sub
sbb
lods
adc
mov
xchg
mov
loop
popa
or
int3
cltd
xchg
in
push
pop
cwtl
sbb
call
ss
add
inc
and
xor
cmp
cmp
cmpsb
shl
or
sbb
mov
push
sub
sysret
lret
pop
and
and
mov
movsl
push
jge
std
mov
insb
push
jae
push
cmc
cmp
pushf
insl
or
sub
push
mov
fwait
out
popf
add
mov
insb
nop
xor
sub
inc
lea
sub
or
sub
adc
adc
popf
icebp
mov
or
scas
cmpsl
enter
lret
insb
mov
in
cmp
mov
mov
out
gs
int
lea
insl
lret
ret
cmpsl
pop
call
insb
pop
push
jnp
or
jle
mov
stos
rcrb
cmp
aam
in
call
lea
mov
dec
inc
push
pop
mov
mov
or
sahf
bound
into
pop
mov
sub
test
lret
js
icebp
adcl
cwtl
mov
or
ljmp
add
push
mov
ljmp
lret
ret
imul
or
call
push
imul
add
push
cs
testl
call
enter
add
sub
pop
lcall
adc
add
arpl
out
enter
inc
daa
popa
out
shl
adc
hlt
hlt
adc
in
sbb
add
sub
cli
popf
mov
mov
jmp
pop
sbb
mov
pop
ljmp
ret
mov
rcll
test
inc
sbb
int3
dec
sub
fucomi
adc
add
xchg
mov
pusha
and
sub
movsb
gs
pushf
cs
fistps
xor
push
leave
cld
mov
push
fmuls
cwtl
push
inc
or
mov
or
ja
lods
unpcklps
dec
mov
dec
sbb
jp
jbe
ljmp
mov
ljmp
jnp
mov
adc
add
add
dec
lcall
dec
add
mov
mov
mov
add
sbb
push
in
mov
adc
pop
orl
push
jnp
mov
cmp
addb
dec
enter
clc
mov
sbb
or
sbb
cmpsb
repz
ret
jno
push
xchg
data16
lcall
mov
aad
and
stos
sbb
cld
xchg
test
mov
test
scas
imul
int3
sub
nop
inc
mov
jb
push
pop
add
loopne
mov
sti
dec
pop
pop
fwait
adc
rcl
adcl
fstl
push
push
cmc
push
push
pop
push
jae
jns
inc
jg
mov
hlt
mov
adc
int3
pop
xlat
lret
loopne
dec
insb
leave
add
sbb
imul
arpl
dec
shlb
mov
icebp
sti
add
fisttps
aam
cmp
cmpsb
jg
aad
ljmp
jl
jle
cltd
out
or
sbb
add
jecxz
movsl
mov
cmp
sub
test
in
clc
push
add
out
jno
scas
aaa
cltd
fsubr
in
cmpsl
xchg
xor
pop
cs
ljmp
cmp
jmp
pop
insb
sbb
mov
and
fdivr
xchg
pop
lret
test
stos
xchg
enter
sub
cmp
repnz
popa
jle
mov
sub
inc
clc
jns
push
sbb
mov
dec
jl
scas
icebp
fcoml
dec
inc
jno
push
aam
movsb
int
loopne
add
fadds
sahf
mov
movsl
in
ljmp
loopne
sub
mov
lds
mov
inc
lods
pusha
cmp
inc
push
jbe
loope
jle
jnp
aad
loop
and
push
inc
pop
das
sbb
sub
in
push
call
adc
lds
loop
add
pusha
mov
add
pop
lcall
mov
jmp
xchg
imul
mov
sti
mov
jns
bound
and
cmp
mull
cld
push
sahf
xor
or
xchg
add
jle
stc
out
stc
adc
int3
hlt
push
jmp
test
js
in
jb
or
insb
into
and
sbb
and
lods
push
fidivrs
popa
or
int
int3
fmulp
mov
ret
inc
cmp
mov
sbb
outsl
inc
xchg
dec
push
fcomip
outsb
dec
cmp
pop
push
xchg
add
dec
mov
ja
mov
movsl
add
in
xchg
incl
fimuls
sbb
inc
aas
test
and
ljmp
aas
adc
decb
call
mov
or
out
out
nop
mov
mov
in
pop
int3
mov
adc
loopne
inc
loopne
popf
imul
hlt
mov
push
aam
adc
leave
stos
mov
fisubl
bound
add
or
movsb
jmp
mov
insl
dec
cmpsl
inc
inc
mov
jnp
in
movsl
repnz
imul
adc
loopne
imul
mov
std
test
fxch
inc
or
pop
ret
pop
pop
cmpsl
push
sub
pop
jns
stc
sbb
lds
stos
icebp
and
lea
push
adc
cli
and
mov
lahf
sub
les
push
sub
mov
lods
xchg
subl
mov
inc
lret
in
adc
add
pop
and
je
mov
movsl
dec
sahf
or
and
lea
pusha
push
cwtl
push
lcall
adc
mov
and
neg
int3
insl
dec
call
cmpsb
adc
jle
scas
sub
cli
push
stc
aam
xor
nop
mov
sbb
inc
hlt
jo
dec
movsb
popa
js
imul
movsb
inc
popa
pshufw
add
pop
or
nop
add
adc
and
aam
cmp
mov
inc
xor
popa
rcrb
add
inc
xchg
adc
pushf
or
or
fidivl
mov
arpl
cld
out
in
push
jl
loop
or
aas
xchg
push
js
mov
stc
cmpl
dec
sub
or
sub
js
or
loopne
ss
pop
in
and
lds
repz
sbb
std
mov
jecxz
fs
mov
int3
bound
les
sbb
xchg
jmp
popa
xchg
jp
mov
sbb
movsl
push
jle
cmc
in
stos
jmp
sahf
test
sti
mov
je
or
int
enter
or
adc
jge
movsl
cmpsl
scas
insl
add
push
loop
adc
or
jecxz
dec
jl
pop
mov
rclb
cwtl
push
fildll
xor
or
or
dec
jnp
mov
xlat
in
mov
mov
xchg
hlt
sub
mov
lcall
dec
fwait
pop
inc
pop
add
push
loop
ficomps
xor
outsl
cmpsl
mov
mov
and
ljmp
mov
cwtl
loope
or
out
pop
cmpsl
movsl
adc
pushf
scas
mulb
lods
lods
insl
clc
shrb
mov
or
inc
lods
sti
fcoml
in
pop
stos
mov
push
in
shrb
mov
jecxz
push
outsb
ret
iret
stc
push
iret
les
testl
mov
and
in
std
and
movsb
cld
test
add
xchg
xchg
clc
mov
iret
out
add
push
out
jle
rcrl
push
xchg
sub
xor
cs
subb
lret
ja
cmp
sahf
outsb
pop
ds
cmpb
push
push
repnz
dec
push
mov
sbb
mov
and
and
mov
inc
push
xchg
add
fs
xchg
dec
xchg
lahf
or
or
adc
cli
inc
cmp
inc
dec
sti
adc
push
sbb
ljmp
add
fisubrl
or
fisttpl
mov
shrb
mov
js
loop
imul
fstl
ljmp
test
cltd
sbb
les
mov
leave
push
lret
int3
lds
in
xchg
sub
jmp
lahf
repnz
dec
push
out
and
leave
ss
push
dec
hlt
xorl
mov
mov
repnz
orb
sub
mov
xor
and
test
pop
mov
jge
lea
in
jo
gs
add
add
lods
jecxz
sub
ds
aaa
cmc
jnp
jl
push
clc
or
push
call
add
imul
insl
xor
daa
add
mov
in
sub
into
addb
inc
jmp
in
sub
add
adc
inc
dec
clc
inc
or
xor
imul
pop
add
sub
mov
xchg
fisubrl
lret
gs
inc
ret
out
ljmp
push
and
je
sbb
bound
cmc
movsb
test
ljmp
push
cmpsl
and
xchg
fists
testl
and
or
cmp
outsl
xchg
enter
cwtl
cmp
sti
add
mov
movsl
pop
mov
and
or
insl
fwait
mov
or
fidivrs
fsubrl
test
pop
mov
ficomps
movsl
xchg
inc
mov
mov
leave
stos
rcrb
cmp
pop
pop
mov
es
inc
cmpsb
dec
add
sub
or
lock
mov
dec
stos
mov
sub
adc
push
lret
push
push
adc
add
add
cli
lcall
int
ss
sbb
into
aad
jns
and
inc
enter
andl
pop
mov
pop
sub
push
ret
jecxz
imul
lock
adc
lds
and
adc
std
dec
push
movsl
adc
mov
push
out
inc
int3
hlt
lock
loope
and
je
push
sbb
sub
aam
in
ja
fwait
les
call
cmp
pop
lds
fisubs
in
inc
les
mov
add
mov
xor
or
xchg
xchg
push
inc
jne
xor
xlat
xchg
dec
call
mov
jle
rclb
mov
adc
cmpsb
xchg
ret
jo
or
loop
mov
pushf
jno
push
in
adc
mov
daa
les
jmp
xchg
sbb
pop
add
loop
cmp
adc
roll
out
es
sti
push
adc
mov
lcall
lods
pop
mov
mov
add
cld
and
mov
cmp
fs
aas
jmp
mov
or
push
adc
adc
roll
test
loopne
sub
jnp
pop
adc
je
push
dec
cmp
ret
inc
dec
mov
fs
add
add
hlt
mov
xlat
or
sarb
adc
imul
and
adc
fcmovbe
rcrb
sbb
and
pop
xor
fs
mov
aas
xchg
or
clc
adc
jmp
pop
test
repz
xchg
in
mov
and
mov
gs
or
cwtl
mov
sbb
adc
arpl
jmp
sbb
stc
xor
sbb
add
addl
sti
arpl
jecxz
cmp
int
sbb
mov
icebp
or
fcmovnbe
dec
adc
or
adc
loope
push
jge
pop
movsb
out
mov
imul
lret
std
fldenv
inc
mov
or
das
in
fmull
pop
mov
pop
mov
push
inc
adc
jmp
or
push
xchg
xchg
push
in
test
inc
add
add
subl
subb
and
jns
xlat
sahf
add
mov
ljmp
std
or
mov
mov
in
sti
subl
xchg
adc
popa
mov
xor
mov
jecxz
lahf
insb
mov
mov
add
inc
imul
ret
sarl
jl
xor
mov
data16
lcall
insb
jnp
or
jmp
or
leave
fwait
add
lahf
and
mov
ret
mov
dec
lcall
test
mov
cmp
cs
lahf
pop
pop
test
xchg
xchg
les
add
pop
cwtl
fs
mov
sbb
add
ficomps
enter
aam
test
nop
into
jmp
adc
and
pop
mov
mov
inc
pop
cmp
mov
cmp
call
or
out
stos
push
hlt
mov
sub
rorb
jp
or
xchg
fldt
stos
xchg
mov
cmovo
sbb
inc
pusha
inc
push
cmp
pop
movsb
test
mov
add
mov
jmp
add
in
add
xchg
orb
loop
dec
or
sti
or
cmp
xor
outsl
and
imul
xchg
cwtl
dec
imul
int3
mov
mov
ret
shlb
xor
fs
imul
pop
jl
out
insb
xchg
xchg
rcl
ja
mov
jne
push
mov
sbb
js
push
jae
mov
ljmp
std
add
repnz
mov
lret
adc
mov
js
or
nop
arpl
aas
cld
aam
adc
stos
xchg
jbe
pop
jl
jmp
sub
rorb
add
fldt
jl
push
imulb
je
push
xchg
adc
push
lock
add
jne
bound
dec
pop
add
in
dec
cmp
ljmp
daa
hlt
pop
xchg
ljmp
pop
jg
inc
out
decl
or
lcall
add
dec
dec
stos
outsl
sbb
incl
pop
scas
clc
or
int3
dec
ljmp
sahf
pop
mov
jae
xchg
inc
push
add
stos
mov
in
lret
and
mov
leave
insl
pop
add
jnp
sbb
loop
inc
std
pushaw
les
cmp
jecxz
dec
lret
mov
repz
mov
add
imul
jmp
pusha
or
or
pop
xor
ja
or
and
inc
jg
jl
add
shlb
mov
or
jp
dec
or
mov
and
test
xor
lret
inc
popf
js
mov
out
mov
imul
cs
mov
sahf
test
cmpsb
fidivl
aaa
xor
adc
ret
stos
jnp
adc
scas
jp
je
xchg
fs
jnp
orl
mov
pop
addr16
shrb
mov
sbb
cmpsb
rclb
insb
cld
pop
or
jno
out
jg
sbb
push
mov
mov
inc
decl
cld
lock
dec
hlt
adc
stos
fwait
add
mov
push
push
fwait
push
cs
dec
test
or
xchg
fdivrl
push
pop
loop
dec
in
lods
adc
lahf
idiv
sub
mov
xrelease
test
add
pop
push
inc
dec
push
or
mov
xchg
sbb
call
push
inc
push
insb
cmpsb
mov
push
sbb
push
lods
sahf
mov
in
mov
add
sub
sarb
fsts
nop
jmp
test
out
adc
test
xor
xchg
das
adc
stos
ret
xor
adc
les
jecxz
mov
shlb
cmp
cwtl
jecxz
adc
add
push
or
mov
dec
add
or
jns
and
jno
fwait
adc
jp
sbb
fcompl
aad
aas
cmp
cmpsl
repnz
xor
dec
fsubrs
orl
lock
enter
insb
jl
xcrypt-cfb
cmpsl
arpl
loop
jle
inc
ljmp
pop
mov
jp
call
or
cmp
add
adc
mov
or
fadd
lcall
fwait
jl
jns
mov
out
and
push
inc
stos
int3
sti
shl
loop
add
scas
cmp
xchg
pushf
roll
fdivrs
jnp
adc
pushf
fsubrl
sub
mov
fwait
lret
sti
pop
test
lret
jbe
hlt
lods
jb
jne
push
jb
out
push
mov
sbb
jmp
jge
push
cmpsb
lret
test
jb
pushf
push
adcb
out
pop
and
loopne
movsl
mov
pop
pop
mov
in
mov
lret
push
test
stos
sahf
dec
rcll
jmp
pop
jp
testl
mov
inc
adc
sbb
scas
mov
ljmp
pminsw
arpl
add
fcompl
push
nop
adc
adcb
inc
out
rolb
add
insb
mov
push
jp
cmp
inc
add
sti
les
or
pop
iret
stc
lcall
enter
push
subb
test
das
leave
nop
adc
ss
test
in
test
stos
cmpsb
repz
dec
mov
xchg
ret
jecxz
xchg
pushf
lods
incb
sbb
cwtl
and
inc
les
pop
aad
ja
inc
je
call
inc
add
pop
mov
cmpsb
inc
je
jmp
xchg
and
push
push
stos
jnp
je
bound
mov
popa
rcr
iret
sbb
mov
icebp
pop
shlb
movsb
sub
movsb
rcrb
xor
pushf
cmc
add
rcll
sub
popf
incb
jae
sahf
adc
repz
clc
in
arpl
in
ja
jecxz
adc
addr16
int3
sub
test
scas
in
sub
mov
imul
push
lret
scas
mov
jnp
adc
or
paddw
mov
lock
add
lret
out
shr
ljmp
push
pop
orl
cwtl
test
insb
bound
sbb
cli
pop
dec
les
or
lcall
lock
clc
and
sbb
ficompl
pop
pop
pop
pop
xchg
sub
mulb
xchg
sti
pop
xchg
jnp
movsb
lret
enter
jge
sbb
cli
cli
inc
orb
pusha
rcrb
sti
cmp
ret
lcall
xor
mov
lcall
les
stos
jmp
in
imul
cltd
add
adc
inc
ja
ljmp
inc
push
cmp
mov
dec
sub
hlt
jmp
pop
cld
lret
push
add
sbb
imul
out
addb
mov
mov
aam
ret
lahf
mov
ret
xor
push
js
adc
jl
jl
push
sbb
scas
adc
add
bound
jnp
jle
push
adc
xchg
lods
dec
push
cs
push
fisttpll
mov
inc
in
out
fidivrl
inc
add
loopne
mov
cmpl
inc
add
or
push
cmpsb
rcl
sub
fwait
pop
and
dec
nop
ret
fiadds
into
jg
jp
add
aas
pop
cld
fs
popf
les
out
jns
sub
cmp
inc
pop
sti
add
testb
into
aam
fistps
mov
loop
ret
addr16
jne
mov
inc
mov
leave
inc
aad
rcrb
xchg
stos
sbb
cmpsl
pusha
hlt
imul
or
js
in
push
adc
out
and
push
fmull
or
adc
inc
cmpsl
jmp
ret
cmpsb
ss
insb
rorl
aaa
add
jno
or
adc
xchg
xchg
insb
mov
and
aas
nop
sbb
xor
cltd
and
and
dec
jmp
xchg
mov
inc
cli
aas
enter
push
sti
dec
ljmp
add
cli
fxch
sbb
or
decb
rcrl
jnp
test
ret
push
in
pop
inc
hlt
pop
jmp
or
cmpsl
cld
sub
jg
hlt
movsl
popf
adc
in
push
mov
lcall
inc
ds
je
movsl
dec
mov
inc
les
mov
icebp
push
mov
cmpsb
subb
add
pop
pusha
popf
es
sub
stos
dec
push
into
xchg
xor
inc
mov
jbe
adc
xchg
sbb
sub
imul
shrb
jns
sbb
add
mov
lods
mov
add
test
mov
int3
out
dec
or
sbb
push
pushl
sti
sahf
sbb
pushf
rcrl
je
adc
call
or
sub
std
adc
pop
mov
testb
add
xchg
in
outsb
sub
imul
xor
hlt
adc
push
mov
adc
mov
sbb
lods
cs
test
insb
ljmp
jbe
xchg
adc
mov
cld
lock
adc
adc
or
pop
inc
test
clc
imul
push
push
popf
or
sub
sub
add
rorl
call
xchg
idivb
insl
inc
xor
adc
mov
and
adc
mov
pop
push
add
sub
ljmp
lahf
cmp
ret
popf
sbb
mov
dec
cltd
xchg
test
inc
pop
dec
lock
mov
xchg
loop
push
sarb
or
movsl
cmc
jb
mov
stos
scas
sub
dec
xor
cmc
adc
mov
push
ret
in
out
sbb
fidivs
test
imul
and
sub
and
adc
sub
dec
mov
xor
adc
mov
push
fwait
pop
test
pop
mov
cmpsl
orl
popa
addr16
mov
push
xchg
ljmp
jns
add
xor
add
dec
shrl
jmp
add
stc
sub
sub
jg
pushl
push
xor
test
lret
pushf
aaa
dec
xor
jmp
push
mov
pop
movsb
inc
cmp
mov
mov
jmp
lds
mov
xchg
leave
jnp
rcrl
jne
jecxz
sub
jecxz
xor
scas
inc
inc
bound
repnz
dec
lahf
divb
push
cwtl
imul
or
call
add
jnp
xchg
pop
aaa
sti
or
jno
mov
les
pop
lret
xchg
js
in
test
insb
adc
lea
pop
stc
cmp
call
notb
xchg
pop
jecxz
push
jl
das
push
sbb
jl
lods
or
inc
test
insb
jecxz
sbb
or
pop
movsb
jbe
pop
mov
add
sub
dec
lock
shlb
sbb
call
or
hlt
push
mov
les
cli
adc
add
mov
setb
aam
enter
cmp
scas
roll
dec
adc
pop
in
sbb
adc
push
cwtl
and
add
add
cmp
mov
lcall
stos
out
or
mov
in
int
aaa
sbb
pushf
pop
movb
ja
fiadds
xor
clc
cmpsb
mov
sbb
lds
shlb
dec
adc
dec
inc
xor
or
in
in
push
das
xchg
jb
jns
andb
loope
xchg
mov
mov
movsl
fiadds
pop
mov
loop
sub
aam
pop
bound
insl
shlb
adc
jle
sbb
xor
or
inc
pop
ljmp
xchg
or
test
fucomp
pop
lds
jbe
push
jbe
or
rorl
or
aam
js
mov
adc
cmp
jp
aaa
addl
nop
icebp
rcr
je
pop
fldl
sub
out
jmp
cmp
hlt
inc
xor
mov
js
xchg
aam
fucomip
or
cwtl
fiaddl
mov
dec
outsb
pop
int3
inc
data16
adcb
mov
add
std
push
int3
inc
and
xchg
mov
nop
mov
cmpsl
cwtl
xchg
ljmp
mov
adc
push
lret
cli
add
add
decl
test
mov
pop
fbld
fisubl
mov
push
inc
and
je
shrb
and
sahf
pop
or
mov
or
movsl
loop
lret
lret
push
xor
roll
subb
mov
or
adc
filds
jge
adc
cmpsl
push
inc
outsl
mov
stc
rcl
cmp
lods
adc
fmul
jno
xor
inc
call
es
ljmp
or
jl
mov
movsl
lret
in
or
mov
xchg
cld
push
pop
add
lret
cmp
pop
xlat
insl
xlat
or
sbbb
jecxz
lea
push
mov
test
loope
call
int3
fwait
sub
hlt
stc
pop
or
mov
dec
aaa
adc
xchg
lock
cli
sbb
stc
js
dec
jecxz
or
jno
ja
adc
outsl
scas
insb
push
xor
and
cmp
enter
cltd
outsl
in
jge
add
xchg
or
rclb
scas
in
movsl
ror
add
repz
nop
scas
push
call
mov
fsubr
fwait
sub
cvtpi2ps
lods
repnz
aam
xor
mov
mov
cmp
pusha
sbb
dec
xchg
mov
subl
sub
xor
mov
dec
push
stos
fisttps
enter
bound
popa
fisttpl
mov
or
pop
pop
int
mull
push
mov
push
in
adc
stc
push
addr16
adc
add
inc
add
and
add
inc
pop
sbb
int
pop
dec
dec
lock
insl
dec
ror
sahf
or
inc
push
jecxz
sti
shlb
call
sti
lret
add
shll
sbb
gs
adc
jo
xchg
cmp
es
mov
cmc
gs
ret
pop
icebp
sbbb
faddl
fcomps
xchg
inc
je
xchg
mov
push
rol
lcall
icebp
jmp
or
arpl
pop
loop
add
loop
mov
and
xor
ret
sbb
lret
mov
mov
inc
ss
adc
lret
inc
pop
sbb
xor
icebp
sarb
xchg
inc
jge
enter
push
mov
or
and
enter
jl
lods
jb
in
dec
popf
into
in
or
dec
int3
mov
or
int
dec
call
mov
ficomps
lret
sub
lret
ds
insb
adc
push
pop
jle
jmp
test
pop
inc
test
and
adc
adc
ja
int3
out
shrl
in
int3
outsb
in
and
or
add
jl
in
addr16
sub
out
adc
mov
xchg
shr
stc
or
stc
add
pop
lret
sbb
push
push
sub
scas
mov
mov
cmpsl
mov
add
stos
jmp
or
aam
or
push
dec
cmpsl
adc
out
popf
sub
int3
add
or
mov
cmpsb
cwtl
idivl
pop
mov
loop
les
inc
add
mov
gs
xor
sub
adc
loop
mov
mov
dec
cwtl
pop
jne
dec
adc
mov
sbb
dec
xchg
in
scas
pop
in
int
int3
icebp
dec
sub
ja
add
or
pop
in
mov
jb
mov
push
test
fcoml
cwtl
fisubs
in
adc
mov
les
add
clc
inc
out
push
decl
insb
cmp
stos
or
pop
ret
pop
loopne
xchg
cmp
sbb
movsb
pop
mov
adc
or
jne
mov
test
jno
add
dec
sbb
shr
xchg
and
sbb
ja
jp
jns
or
jns
lret
mov
xor
insl
shr
inc
mov
and
daa
ret
lret
sbb
push
sub
pop
add
push
mov
xchg
out
add
mov
cmp
push
nop
xchg
mov
or
fs
mov
in
adc
popf
sub
pop
xchg
jns
movb
cli
sbb
test
test
pop
nop
xor
xchg
push
fidivs
inc
pop
lar
mov
insb
xchg
js
pushf
fdivs
adc
jmp
sbb
test
insb
andb
inc
xchg
mov
ret
xchg
test
sbb
and
cltd
add
mov
outsl
lcall
xchg
nop
lock
in
sub
sbb
fs
dec
sbb
stc
popl
or
mov
sub
fs
fisttps
repnz
xor
sub
dec
mov
loop
cltd
fdivrs
mov
into
lock
hlt
mov
and
movsl
adc
outsl
pop
imull
stos
xchg
dec
test
aas
xor
sub
loopne
daa
cmpsb
push
loope
lret
sub
cmpsl
into
test
and
hlt
inc
call
xchg
jae
adc
push
jae
lods
adc
mov
mov
subb
bnd
clc
xlat
lcall
or
lcall
dec
mov
lds
sbb
mov
adc
test
jecxz
lock
repz
test
out
insb
inc
std
cmp
ret
into
enter
mov
repnz
adc
push
in
push
cmp
out
stc
xor
fisubrl
dec
sbb
mov
scas
into
xor
pop
sub
jb
jle
mov
sbb
mov
stos
sar
mov
imul
scas
addr16
dec
dec
addr16
dec
cmp
jmp
mov
dec
cmp
int
aad
arpl
xchg
mov
je
xchg
mov
call
add
aad
daa
popf
or
mov
or
stos
ljmp
std
xor
mov
icebp
push
sahf
testl
fmuls
mov
loope
mov
das
push
iret
outsl
mov
ljmp
pop
mov
daa
mov
sbb
inc
cs
pop
jmp
mov
adc
inc
and
ret
lds
add
lret
xchg
ret
pop
aas
fnsave
pop
and
mov
or
push
adc
pusha
out
cmc
and
add
das
dec
cli
add
push
push
pop
push
pop
jmp
xchg
sti
jge
inc
pushf
je
mov
xchg
int3
pop
dec
or
pop
and
and
xor
inc
mov
mov
or
adc
test
xchg
lret
aad
xchg
jns
loop
inc
sti
inc
and
nop
ret
add
subl
add
aas
mov
cmp
andl
mov
and
pop
pop
sti
gs
decl
adc
test
inc
jl
dec
mov
das
jge
fstpt
aam
lods
mov
and
lods
mov
xor
sbb
mov
and
mov
and
shlb
or
mov
fsubrl
push
push
sub
pop
cli
sbb
fisubs
sbb
mov
icebp
orl
decb
test
mov
aam
xchg
sub
mov
mov
lods
mov
pop
lcall
aas
icebp
or
xchg
add
mov
mov
fadds
mov
push
lret
js
fwait
pop
sub
jecxz
adc
mov
inc
pushf
pop
cmpsb
rcrl
xchg
sbb
fwait
int
fs
add
fadds
stos
in
jns
sti
bound
test
gs
ljmp
aam
mov
mov
int3
decb
push
dec
adc
add
cmpsl
mov
cwtl
rcll
add
and
push
sub
add
pop
outsl
fimull
std
and
jl
inc
add
mov
out
imull
call
sbb
clc
xchg
or
cmp
mov
mov
add
mov
les
repnz
or
ljmp
jecxz
add
sub
and
and
and
es
adc
fsts
mov
sub
mov
pop
and
repnz
cmp
out
aam
out
outsl
jns
xor
ljmp
inc
stos
loop
add
repnz
call
lret
test
bound
icebp
xor
imul
xchg
lods
es
sar
leave
popf
andl
cmp
push
or
lret
clc
push
sti
jg
xchg
inc
add
addr16
pop
sbb
adc
xchg
pop
inc
les
xchg
movsb
loop
mov
enter
inc
add
adc
fldl2e
ds
and
xchg
ficoml
fidivl
mov
jle
and
mov
movsl
shl
cmp
or
xchg
adc
jns
dec
lret
mov
addr16
jp
pop
subl
xchg
push
pop
ret
jno
fmuls
lods
cmp
mov
sti
and
rorl
fdivs
adc
outsb
mov
cmp
add
add
add
in
lods
leave
add
lods
aas
loope
cli
les
cmpsb
inc
int3
shrb
jge
mov
pushf
lcall
inc
add
adc
inc
fidivrl
mov
add
js
mov
mov
inc
testl
sahf
mov
xor
sti
movsl
add
pushf
lds
lret
popa
mov
dec
or
mov
nop
jp
or
ds
aaa
cmc
mov
stos
inc
sub
daa
jmp
cmp
fistl
cmp
int3
cmp
dec
sarl
push
test
lret
mov
and
sbb
or
sbb
sbb
out
cmp
and
repz
pop
ja
nop
cmp
add
in
lret
dec
adc
and
pop
cwtl
cmp
sbb
into
sbb
jnp
lcall
sub
fwait
jns
adc
mov
aaa
xchg
add
rclb
nop
fadds
mov
or
cli
sbb
jne
shrl
sbb
icebp
cld
inc
lret
repnz
rorl
cli
cmp
aaa
test
dec
jg
jecxz
jnp
cltd
mov
cmpsl
sbb
rorb
out
push
xchg
dec
or
fs
mov
push
sbb
inc
inc
add
ljmp
sub
lret
test
cmpsb
scas
leave
cmp
pop
sbb
cmp
add
insl
insb
movsb
dec
sub
cmpsb
test
les
and
and
inc
sbb
std
sbb
subb
lret
ret
sbb
test
pusha
sbb
xor
xchg
sbb
sbb
sbb
cwtl
sub
sbb
xchg
sub
pop
xchg
pushf
inc
int3
jmp
adc
cli
jmp
enter
js
push
lret
lods
test
popa
enter
stc
sti
ja
hlt
mov
out
cli
insl
or
push
inc
int3
add
jp
add
decl
mov
mov
mov
xchg
xor
fwait
les
mov
pop
lcall
and
mov
hlt
andb
sbb
sub
xchg
xchg
cltd
xor
inc
xchg
cmp
xor
call
adc
push
dec
fld
popf
push
sbb
jbe
xor
out
add
lret
int3
sti
popf
xor
mov
push
daa
pushf
adc
or
mov
jbe
xchg
sbb
add
cltd
push
or
rcll
lret
insl
adc
or
les
ljmp
int3
bound
imul
lret
xchg
xor
jbe
out
inc
mov
push
test
inc
xor
pop
xchg
daa
xor
adc
pop
adc
sarl
adc
sahf
in
cmpsl
dec
mov
push
mov
xchg
mov
cmpsb
xchg
cmp
pop
fimull
inc
jnp
xchg
jp
sbb
in
in
fidivs
int3
mov
cmp
lcall
aam
push
xchg
inc
pop
jne
or
add
jnp
mov
inc
std
sbb
pop
test
rorl
push
rcrl
push
inc
ss
cli
inc
sub
in
stos
sahf
push
mov
clc
xor
dec
out
mov
jnp
stos
lret
into
enter
test
popa
inc
add
adc
mov
mov
out
lods
mov
mov
mov
mov
orl
xor
fsubr
mov
jecxz
ret
dec
sahf
sbb
nop
fadd
iret
popa
sub
jge
cmpsl
inc
aam
xchg
jmp
pop
push
jl
jnp
addb
mov
fbstp
and
xchg
or
adc
sarl
leave
popf
cwtl
xor
or
mov
cmp
rclb
xchg
loopne
adc
jnp
test
lret
sbb
sti
inc
push
push
and
cmp
and
pop
mov
lock
cmp
inc
xchg
popf
nop
pushf
movsl
jp
xchg
pop
les
ret
sbb
fcoml
incb
ret
and
sub
jmp
ret
mov
ficompl
xchg
out
mov
xor
xor
xchg
inc
loope
or
adc
bound
inc
xchg
pushf
fnsave
push
pop
pop
call
enter
fwait
jbe
xor
mov
adcb
rcrb
or
lcall
mov
sub
bound
xchg
inc
adc
insb
xchg
jmp
sti
add
orl
jmp
stc
sub
mov
adc
ficoml
in
mov
addr16
sbb
aad
mov
jecxz
fs
into
stos
and
ficoms
mov
iret
stos
sti
and
or
call
arpl
pushf
or
push
xchg
push
fwait
add
mov
pop
push
loopne
jmp
cmp
jno
cmpsl
je
cmp
sub
mov
repnz
movsl
into
cmp
or
dec
sub
or
sti
xchg
push
rcrl
xchg
push
pop
pusha
inc
mov
jmp
or
out
imul
xchg
test
ljmp
out
xchg
mov
and
int
xor
repz
call
dec
mov
test
jnp
popf
stc
inc
imul
or
test
add
and
out
cmp
daa
adc
mov
popa
cmp
xor
or
repnz
das
repz
aaa
call
fnsave
adc
mov
into
out
jbe
adc
mov
aaa
loope
and
add
pop
mov
mov
and
jle
push
es
out
loop
mov
push
movsl
out
sub
aaa
std
pop
sbb
mov
movsl
int
cmp
mov
repz
clc
fcomi
inc
hlt
sbb
xchg
jp
insb
aaa
sbb
ret
addb
enter
inc
or
and
js
mov
push
mov
add
out
test
add
mov
push
sti
cmpl
in
dec
fwait
std
lea
xchg
js
pop
sahf
lods
sbb
iret
xor
movsl
push
inc
call
repz
push
addb
rcr
cmp
sahf
and
cmpb
mov
inc
mov
add
dec
add
out
mov
push
inc
lock
dec
shr
push
adc
icebp
lahf
popa
add
lea
daa
ret
iret
lret
cmp
rorb
push
or
and
mov
outsb
cmp
jp
add
and
or
jle
add
and
cmpsb
outsl
sbb
add
mov
adc
lret
adc
in
jge
mov
jle
arpl
lret
movsl
in
std
addl
jo
inc
imul
sub
jmp
inc
mov
inc
subb
and
inc
add
imulw
adc
fldlg2
and
cmp
popa
ds
ret
or
push
loop
cli
mov
popf
in
les
sbb
push
mov
mov
hlt
stc
cs
or
mov
jp
xor
add
xchg
scas
sbb
add
sti
cltd
sub
adc
xor
lock
test
push
dec
mov
enter
mov
xchg
ficompl
movsb
out
cmpsb
inc
cld
or
in
dec
test
lret
out
jg
int3
mov
jae
sahf
mov
jle
ss
testl
xlat
rorb
mov
in
push
xlat
xchg
adcb
sbb
ret
pop
xchg
mov
icebp
mov
cmpsl
ficoml
test
enter
shlb
cmpsl
push
inc
ret
xchg
inc
cmp
out
push
out
loope
sub
and
dec
pop
sbb
sbb
cmp
adc
add
dec
lret
hlt
incl
ljmp
shr
cld
or
ja
subb
neg
lods
mov
mov
pop
jp
mov
mov
in
push
fildll
inc
mov
in
test
repz
nop
jns
jno
out
lret
aam
add
jl
lret
in
mov
push
in
filds
adcb
xchg
subl
loopne
insb
loop
in
in
push
jle
xchg
xor
lods
adc
sbb
mov
out
out
mov
push
test
mov
add
add
lock
fadd
xchg
imul
mov
shr
cli
mov
test
cmp
push
call
xchg
pop
test
xor
test
sub
aaa
push
xchg
inc
inc
insb
sahf
fmuls
stos
pop
pop
xchg
xor
mov
sbbb
scas
bound
mov
lret
or
pop
push
rep
ljmp
inc
movsl
push
jge
jg
stc
pushf
mov
loop
inc
jg
adc
pop
cmpsl
jecxz
push
push
fucomi
testl
movsb
stos
lds
fs
push
cmp
loope
cmpsl
xchg
and
jmp
out
or
scas
mov
fstpt
adc
test
ljmp
je
add
push
jne
les
jbe
dec
stos
nop
repnz
mov
insb
mov
sbb
scas
adc
adc
push
inc
pop
mov
jmp
addl
cwtl
xor
add
push
insb
adc
xchg
xor
mov
add
adc
orl
adc
pop
adc
inc
sub
sbbl
rclb
cmp
jge
jge
in
push
dec
adc
push
xorb
mov
into
pop
mov
je
xchg
mov
lret
mov
add
adc
addb
push
fadds
xchg
incl
popa
and
sbb
out
add
int3
cmp
in
loope
dec
or
mov
lahf
xchg
add
xchg
jns
lock
mov
add
dec
add
push
sub
jl
mov
outsl
addr16
ret
data16
push
mov
cmp
adcl
idivb
js
rorl
mov
stc
shll
mov
xorl
ret
sti
or
testl
pop
fildll
inc
iret
jecxz
xorl
jnp
cmp
sbb
lahf
je
sbb
jne
call
subb
mov
test
xor
sbb
clc
sbb
sbb
sbb
les
rorb
movsl
jae
push
mov
mov
insl
paddq
in
cs
cmp
andb
mov
and
lret
xchg
add
stos
add
out
test
or
fildl
push
jge
test
call
pushf
mov
js
pop
xor
xchg
lock
push
cwtl
mov
aad
or
popa
out
mov
mov
movsb
mov
push
outsl
jg
scas
out
stc
out
dec
movsb
mov
xchg
int3
add
fs
int3
sub
mov
int3
imul
outsb
nop
js
mov
xchg
mov
int
or
push
ljmp
push
adc
ror
mov
add
sub
and
add
icebp
test
inc
mov
or
sbb
cmp
sbb
ret
enter
ret
std
js
ljmp
in
addr16
or
ds
sub
sub
in
sub
or
fucomip
int3
inc
mov
ja
cwtl
xor
outsl
dec
clc
fstpl
add
sub
in
adc
mov
popf
add
insb
add
and
pop
in
aam
push
add
dec
bswap
mov
lret
ret
jne
cli
jbe
jo
xchg
or
dec
cmpsl
out
jp
xor
nop
sub
movsl
dec
jge
push
push
inc
adc
push
mov
xor
sbb
xor
push
enter
mov
lcall
add
and
or
adc
daa
or
inc
jecxz
mov
popa
mov
adc
fmull
add
push
fildl
add
sbb
xchg
scas
ljmp
insb
movb
inc
add
xor
jb
cs
cmpb
out
andb
test
fwait
les
insb
mov
stos
jb
rcll
push
call
int3
cs
repnz
fxtract
adc
lods
adc
popf
push
cs
lret
ljmp
insb
jb
sub
popf
mov
test
jo,pn
lret
fs
ja
scas
add
mov
test
jmp
sub
push
stos
orb
sub
mov
jmp
movl
mov
or
jp
aas
std
mov
pop
add
add
mov
sub
jecxz
adc
insb
adc
test
mov
popf
je
cmc
mov
push
sub
and
bnd
ljmp
adc
jmp
sub
xchg
test
mov
into
or
cmp
or
mov
pusha
add
xchg
lret
cmp
dec
sbb
notl
mov
dec
mov
popf
mov
or
pop
cmc
jns
or
jnp
adc
pop
leave
sub
outsl
jno
mov
sub
loop
sub
sub
sub
push
jle
sub
jnp
inc
dec
call
dec
out
cmp
push
xchg
mov
push
or
dec
dec
inc
scas
lret
inc
ja
into
or
sub
mov
loopne
scas
ror
gs
sti
or
push
stos
cmp
xor
push
dec
and
std
sbb
jnp
arpl
fildl
cmc
fsubrp
pop
mov
gs
adc
sbb
pop
push
push
mov
pop
jl
inc
adcl
mov
ret
inc
inc
fsubrl
cmp
cmc
sub
jns
push
sbb
scas
rorl
cmp
sbb
insb
add
jl
add
test
loop
cmp
stc
jb
sbb
or
jae
jg
pop
cmp
in
lahf
fimull
adc
dec
adc
xchg
testb
leave
imul
insl
loopne
lea
cmp
std
push
lcall
cltd
ds
mov
mov
and
dec
pop
xchg
sbb
lcall
or
and
mov
dec
cld
jns
jno
pop
push
inc
adcl
lcall
jo
cmp
insb
cmp
or
pop
xchg
test
mov
loop
lds
imul
addb
add
cli
into
ret
rorb
es
ds
and
push
xchg
lea
add
push
fs
popf
lret
les
cmpsl
pop
loop
fdivr
jmp
cli
jmp
enter
lahf
push
add
les
or
and
dec
add
or
int3
xchg
dec
mov
add
adc
mov
add
mov
iret
stc
popa
jbe
jp
in
push
clc
mov
push
stos
pop
push
adcb
or
ficompl
jl
push
xchg
iret
cmp
pop
inc
jecxz
jp
pop
pop
lret
notl
xchg
mov
scas
rcl
sbb
mov
pop
sahf
aaa
adc
push
pop
call
int
sbb
shlb
pop
push
xchg
iret
jmp
dec
sbb
and
ficompl
lret
xor
dec
fmul
mov
pushf
enter
js
fstps
fadds
add
jp
pop
aam
lcall
loope
shrl
out
bound
or
adc
sub
cld
int3
bound
cmp
push
mov
pusha
xor
adc
xor
sbb
shll
jecxz
outsb
dec
adc
ret
mov
or
ret
movsb
test
sbb
jo
adc
or
bnd
mov
insb
fwait
mov
and
push
mov
into
dec
xchg
mov
scas
sub
or
adc
or
add
or
iret
cmc
add
add
jno
adc
loope
mov
adc
aaa
push
sbbb
daa
pop
subb
xchg
ja
jp
add
ds
hlt
out
mov
movsl
mull
hlt
aaa
lods
adc
cld
pop
mov
or
mov
jmp
fsubrp
out
lcall
pop
roll
pushf
adc
jp
out
orb
aam
or
push
push
and
push
add
adc
jno
mov
divb
into
jbe
dec
inc
or
cmp
outsl
scas
test
push
sub
or
cmp
jge
mov
xlat
test
or
xor
int3
repz
pop
inc
test
sbb
mov
iret
cmp
adcl
nop
or
dec
adc
cmp
xor
das
jg
xchg
jb
mov
xor
stos
sahf
sub
mov
adc
shll
mov
or
cs
cmpsl
add
or
clc
and
inc
popf
pop
insb
jns
mov
fisttpll
shrl
lods
xor
add
or
sbb
or
jae
repnz
dec
stc
adc
sbb
test
bound
cmp
sbb
dec
jo
sti
mov
dec
loopne
out
lret
imul
cwtl
add
and
add
push
fsubrl
insl
xchg
or
daa
mov
mov
dec
or
push
mov
inc
jnp
pop
or
mov
mov
jmp
and
cltd
inc
add
rolb
out
subb
mov
pushf
or
mov
mov
pop
dec
in
adcb
addr16
sub
jns
or
sahf
inc
cmp
pusha
cmp
sbb
loop
push
call
inc
sbb
loop
pop
add
bound
mov
fnsave
decl
inc
mov
inc
out
xchg
push
jae
push
sub
sub
add
jp
mov
mov
dec
mov
push
insl
sub
popf
pop
mov
in
lahf
aam
es
sahf
sbb
movsl
adcb
repnz
xchg
inc
xchg
add
and
add
mov
sbb
lahf
adc
cmp
cmpl
mov
ret
mov
add
mov
pusha
pop
mov
popa
sbb
push
adc
xor
fwait
popa
in
mov
mov
dec
sbb
add
cli
lods
mov
cmp
push
call
or
add
in
and
inc
out
sub
sarb
and
ja
add
sahf
push
cltd
jg
les
nop
jmp
outsb
dec
notl
sub
jmp
inc
notl
jbe
addr16
out
adc
cmpsb
int3
adc
dec
adc
jecxz
add
loop
incb
jl
adc
jnp
push
loopne
adc
sbb
inc
xchg
rorl
cli
add
add
out
roll
aam
add
repz
pushf
jns
add
das
push
adc
repz
or
or
in
push
and
int
lcall
push
mov
xchg
or
cmovle
xchg
or
in
mov
popa
fwait
or
push
push
jge
cmc
mov
pop
data16
movsl
lods
movsb
cmp
insb
adc
sbb
cli
jmp
xor
outsl
cli
lret
jnp
mov
fadds
clc
rcrb
std
rsqrtps
adc
mul
inc
add
jle
xchg
push
xchg
xchg
mov
repz
sbb
sbb
dec
cltd
sbbb
lcall
adc
jl
cmp
or
mov
and
cmp
mov
fsubr
jmp
adc
sbbl
movsl
scas
mov
and
in
pop
cwtl
int3
int3
adc
and
or
inc
lods
sbb
jne
movsb
sub
ret
jns
fs
jmp
add
ficoms
in
push
popf
aaa
push
sbb
jno
divb
pop
aam
fadd
sub
sbb
mov
add
sbbb
push
and
ret
xchg
push
adc
fyl2xp1
inc
mov
sub
sbb
andb
push
pop
dec
xor
mov
pushf
mov
sbb
mov
jp
popf
push
xchg
and
inc
push
mov
dec
ds
sub
fdivr
ficoms
into
imul
lods
stos
and
or
jmp
sub
sbbb
in
movsl
push
lods
push
mov
and
rsm
popa
and
es
rclb
mov
test
and
pushf
sbb
negl
bound
rcrl
mov
mov
aam
xchg
icebp
and
ret
adc
stc
jmp
lret
inc
add
cli
call
jp
sbb
sbb
aam
aaa
es
add
call
jp
das
jge
sub
pushf
xor
jg
add
xor
xchg
enter
hlt
sti
repz
xchg
jne
stos
sahf
inc
adc
xor
add
xor
js
sti
inc
sahf
sti
dec
ret
and
jne
sub
add
pop
test
cmpb
or
call
mov
add
inc
or
inc
push
insb
sub
dec
sbb
jp
bound
adc
sahf
test
js
cltd
enter
loop
aam
lcall
call
sbb
test
fidivrl
sub
jmp
dec
test
mov
repnz
insb
cmpsb
ret
or
shr
cmp
hlt
rcr
dec
dec
mov
in
fstps
add
loop
decb
mov
test
cltd
or
xchg
add
les
jl
enter
push
or
fcoms
add
or
icebp
sub
repz
scas
ficoms
push
nop
dec
inc
mov
cmp
test
scas
aas
lret
cli
shrb
mov
or
mov
sbb
sbb
faddl
jmp
mov
out
sub
pop
lret
push
je
sbbb
xchg
js
adc
cmp
fnstcw
fdivr
pop
mov
and
pusha
mov
cmp
sub
jmp
gs
test
test
imul
xchg
inc
sbb
or
inc
shll
pop
cmpsb
es
fwait
cmpsl
dec
or
push
or
and
lret
mov
cmp
xchg
aad
or
push
test
in
sti
stos
or
fstps
scas
insb
dec
inc
xor
mov
add
lcall
cli
pop
xchg
in
pop
push
hlt
inc
fwait
adc
pop
pop
or
mov
xchg
mov
repz
add
dec
inc
pushf
mov
cmpsb
mov
in
or
js
mov
stos
and
jge
and
inc
movl
daa
loop
sbb
in
inc
mov
addr16
adc
addb
or
jmp
test
adc
xor
mov
xlat
push
inc
cmp
mov
inc
ja
or
xchg
hlt
mov
outsb
icebp
add
cmp
lahf
inc
dec
cld
sbb
out
repz
repnz
aam
mov
arpl
in
mov
cli
mov
in
dec
out
test
sub
out
or
inc
je
cmp
add
jp
adc
add
dec
or
daa
mov
cmp
xor
jmp
test
add
cmp
add
dec
cli
addr16
jle
sbb
add
adc
adc
sarb
adc
loopne
mov
popf
int
add
jecxz
popf
jnp
ss
test
cmp
ss
sbbl
and
push
and
lea
adc
fimull
mov
nop
popf
push
jns
dec
xchg
ljmp
mov
outsl
mov
adc
adc
mov
mov
lret
arpl
add
mov
push
dec
popf
pop
mov
mov
std
lcall
lcall
fcom
mov
aas
xor
test
inc
inc
insb
jg
sti
addr16
cli
lods
mov
add
in
arpl
mov
testb
test
rcrb
int3
fiaddl
shlb
insb
bound
jae
xchg
shrl
pop
mov
subl
pop
add
lods
adc
fs
ljmp
xchg
imul
shrl
cmpsl
add
and
inc
and
mov
add
lret
into
aas
cmp
lret
adc
lcall
scas
cld
sub
or
xchg
xchg
jnp
jmp
mov
add
jns
push
lret
push
sbb
mov
jl
iret
data16
lcall
add
stos
adc
andl
dec
cmc
jns
or
loop
push
cli
addr16
ljmp
jecxz
lcall
shlb
imul
ja
loop
inc
fimuls
ret
mov
in
cmp
dec
or
xorb
sub
inc
inc
mov
push
push
and
sbb
sahf
add
adc
jae
daa
into
xchg
xor
ret
lahf
in
adcl
in
jle
sub
imul
stos
inc
jle
mov
xor
shrb
movsb
or
test
or
lea
push
and
clc
xlat
and
push
or
mov
or
popa
xchg
stos
mov
mov
fsubrl
push
adc
lcall
js
add
add
and
add
loopne
pop
into
sbb
pushf
ffreep
mov
pop
call
pop
dec
jnp
add
insb
lcall
pusha
sbb
dec
pop
in
jmp
movsl
xor
cld
mov
pop
je
stos
pop
subl
ror
xlat
jmp
jecxz
pop
loopne
in
pushf
jecxz
punpckhbw
adc
imulb
add
or
movsb
xor
and
push
popf
ss
shr
inc
cmpb
jp
sbb
cmp
or
and
lret
repz
pop
adc
or
fldln2
lret
xchg
cli
add
adcl
cmp
loop
repz
mov
popa
test
repnz
pop
int3
and
dec
xchg
adc
out
lret
push
lret
or
xor
pop
jecxz
ja
xchg
sbb
xor
idivb
sti
mov
decb
push
test
pop
loopne
add
in
push
cld
out
sbb
loope
jle
cs
mov
jb
sub
mov
push
sub
sbb
sbb
sbb
lret
mov
push
out
sbbb
adc
sub
fnstsw
dec
lds
add
adc
dec
pop
in
sti
and
int3
lock
shr
xor
fs
jns
addr16
jns
fldcw
bound
outsb
push
dec
and
fdivs
jnp
push
ret
xor
les
out
lods
in
fldcw
and
in
mov
cmp
inc
add
cmp
pop
cmp
insb
imul
les
in
cmp
pop
xchg
jo
fwait
movsb
or
call
sbb
andl
push
pop
sbb
adc
fs
sub
fdivrs
cmp
loopne
add
cwtl
imul
loop
mov
mov
and
pop
push
add
push
jp
mov
ret
sub
mov
or
pop
xchg
call
ljmp
rcrb
mov
sub
sahf
jge
ljmp
rorb
enter
rclb
mov
cmp
xchg
insl
and
xchg
test
mov
mov
cmp
sbb
and
xor
fs
inc
add
sub
or
pushf
mov
jmp
dec
cmpl
jp
dec
call
and
mov
cs
sub
mov
js
xchg
cmp
sub
cmp
das
or
sbb
xchg
xlat
jno
test
inc
inc
add
icebp
sbb
fstpl
dec
mov
and
andb
addl
shrb
lahf
inc
sbb
or
movsb
notb
or
push
mov
pop
imul
push
push
enter
stos
add
pop
mov
jne
xor
out
sti
inc
addb
insb
lock
lcall
jge
sub
stc
lret
lods
push
cli
ror
popf
push
jp
sbb
mov
loopne
dec
mov
lea
notl
mov
pop
lret
push
add
xchg
add
add
inc
mov
mov
pushf
adc
sbb
test
xchg
push
adc
push
loope
test
add
and
mov
or
lret
xor
mov
mov
sti
ret
and
ss
pop
lods
fwait
in
mov
aas
ret
cmp
int3
hlt
jecxz
insb
aam
push
xor
in
sarl
lea
push
bound
inc
mov
or
pop
call
iret
mov
jne
jg
jl
jg
cmp
cmp
enter
test
leave
lcall
sub
test
fcoml
sarl
cmp
add
mov
lods
cld
push
das
mov
les
lret
lods
xchg
pop
rcrb
lcall
pop
test
pop
or
ret
dec
in
sub
testl
lods
mov
add
fmuls
add
fs
lret
ret
sbb
mov
dec
fwait
lea
push
push
push
xchg
pop
insb
insb
adc
xchg
loopne
jle
out
xchg
sub
inc
mov
xchg
jle
ss
or
in
lret
mov
call
or
js
inc
jno
loopne
mov
mov
inc
dec
pop
sbb
adc
aaa
pushf
adc
call
pusha
insl
loop
cmpsl
pushf
mov
pop
fimuls
fimull
es
add
jle
mov
js
jb
testl
lret
test
mov
loopne
adc
fwait
push
call
out
fidivl
mov
insb
iret
cld
xchg
ljmp
pop
lods
data16
fistpll
sub
cmp
int
and
stos
in
jmp
test
mov
inc
dec
rol
cwtl
pop
mov
jecxz
add
lcall
test
or
ss
insl
xchg
add
sbb
or
cmp
jb
rcrl
test
push
call
out
test
push
pushf
imul
pop
repz
fs
in
rcrb
stc
pop
pop
inc
mov
adc
mov
xchg
rcrb
popa
inc
add
and
adc
fdivrl
fs
addb
imul
or
mov
or
sbb
les
mov
add
push
dec
xchg
pop
jecxz
cwtl
call
shr
das
cmp
mov
mov
ds
ljmp
loope
mov
pop
mov
rorl
dec
pop
pop
rcr
adc
mov
lods
push
xchg
sub
cmp
push
repnz
mov
iret
and
pop
pop
lock
mov
push
fstpt
mov
adc
lcall
ljmp
or
pop
shl
sbb
sub
in
push
out
pop
lcall
jae
aam
fs
add
imul
xor
inc
sahf
mov
out
in
push
loope
add
lods
sar
jl
mov
xor
add
lods
xchg
lret
addl
pop
mov
fidivl
and
jns
in
ljmp
or
pushf
mov
add
pop
and
mov
jle
mov
sub
ds
cmp
sbb
jnp
lret
and
jg
loopne
fsubrs
add
mov
push
lret
addr16
cwtl
add
jmp
jmp
lcall
aam
rep
xchg
cmp
loopne
cmp
iret
lret
out
ljmp
pop
jp
subl
adc
rorl
scas
out
pushf
and
pop
dec
inc
pop
adc
popf
push
gs
or
add
pop
and
mov
aam
ret
jl
sub
js
in
lock
jnp
in
pop
stos
xor
repnz
xor
decl
addr16
mov
cmp
jns
sbb
xor
aam
jl
or
clc
sti
and
inc
clc
shrb
cmp
push
insb
ja
dec
push
jbe
daa
call
dec
sub
ds
xlat
mov
fwait
ror
inc
pop
xchg
adc
push
addr16
sub
dec
or
sbb
inc
jne
adc
lret
jne
pushf
and
jne
jle
mov
pop
fidivrl
movsl
adc
mov
mov
xor
or
mov
es
and
xchg
imulb
dec
and
or
push
mov
inc
add
sub
test
sub
jp
adc
std
inc
xchg
inc
sti
mov
mov
sub
and
into
sbb
hlt
movsb
les
adc
add
lods
loop
or
jp
inc
push
sub
jnp
mov
jmp
xor
mov
push
test
into
pop
mov
mov
leave
jp
sub
sbb
adc
inc
dec
inc
add
pop
enter
ja
in
movsb
xchg
les
add
add
inc
adc
sbb
out
repz
cmc
adc
adc
push
es
adc
inc
test
sbb
push
sti
sbb
test
and
mov
mov
jle
fisttpll
inc
dec
jl
stos
adc
or
push
adcl
ret
and
xchg
std
stos
shl
cld
out
or
ret
test
push
mov
sub
stos
mov
pushf
xchg
dec
fisubs
cmpsb
aam
adc
mov
and
xchg
fcoml
icebp
and
addr16
out
pop
movl
fwait
insl
sbb
sbb
xchg
call
xor
fcomps
and
call
inc
pop
fistpl
idivb
or
jbe
call
mov
in
mov
inc
adc
ret
jnp
xchg
pop
call
xor
add
enter
mov
into
mov
out
stos
push
push
cwtl
dec
fld
ljmp
and
popa
push
sub
es
jbe
adc
jg
daa
inc
incl
jae
fistpll
cltd
outsl
les
adc
cltd
adc
and
ja
dec
pop
sahf
sub
adc
pop
insb
cld
pop
ret
stos
and
mov
jmp
push
scas
fnstsw
xchg
ficompl
mov
gs
scas
pushf
test
add
pop
movsb
cwtl
lods
ljmp
fldt
cwtl
rclb
loop
or
sbb
adc
adc
pop
pop
mov
xchg
pop
inc
inc
push
shr
or
jnp
fsincos
outsb
dec
adc
or
push
in
push
test
pop
or
add
inc
int3
sahf
inc
mov
fcoml
jns
les
add
in
mov
into
shrl
mov
arpl
jle
sbb
pop
fildl
aaa
popf
and
xsaves
or
or
xchg
sbbl
in
lret
pushf
mov
pop
rep
sbbl
movsb
dec
call
cmp
pushf
and
push
dec
stos
sbb
lcall
loope
sub
cmp
mov
ljmp
les
inc
notb
pushf
test
mov
dec
add
movsl
jnp
fmuls
ss
incl
cltd
dec
xchg
add
rclb
push
push
fwait
call
cltd
call
insl
xchg
pop
push
add
shl
loop
aam
xchg
sub
stc
inc
les
xchg
xchg
jnp
fstpl
hlt
cmp
test
mov
sti
mov
xor
cmpsb
loope
xor
cli
insb
add
pop
in
dec
pop
movsl
call
mov
into
and
sbb
rolb
mov
nop
into
cmp
sahf
sub
jp
cmp
or
ljmp
push
mov
popf
insl
arpl
jecxz
arpl
xchg
push
mov
xchg
xor
adc
xor
les
add
xor
and
test
mov
sbb
inc
enter
pop
mov
jb
pop
add
in
inc
movsl
scas
popf
dec
xchg
mov
sbb
mov
xor
xor
mov
out
pushf
aad
addr16
sub
push
mov
cmpsb
mov
sbbb
jecxz
xchg
movsl
xor
scas
mov
loopne
insb
jecxz
push
orl
popf
lret
and
add
pop
xchg
insb
sbb
fldenv
imul
mov
fwait
jmp
push
or
cmpsl
mov
push
xchg
jmp
jg
sbb
int
aas
out
lcall
mov
loope
imul
inc
mov
jo
add
fisubs
mov
sub
sbb
ret
iret
subb
adc
fwait
dec
loopne
mov
hlt
xchg
movsl
adc
sbb
andb
or
adc
mov
sub
pop
loop
xchg
jle
mov
insl
fldt
nop
aam
jle
fs
scas
popf
iret
dec
jbe
xlat
fwait
push
aam
repz
mov
fwait
lret
add
jmp
mov
das
sbb
movsl
dec
push
test
and
andb
xor
add
push
inc
cmp
pop
cmp
push
jbe
sub
jle
and
popa
das
xchg
push
loop
cmpb
push
pop
lret
arpl
sbb
loope
sub
push
rorb
aam
dec
inc
and
lea
inc
movsb
shr
stc
and
inc
and
pushf
lret
and
push
sub
dec
repnz
sbb
jns
sbb
lods
outsb
or
adc
jmp
push
test
arpl
frstor
movsb
out
stos
cmp
and
pushf
clc
lcall
xend
jbe
mov
adc
push
sub
push
sbb
out
shrl
dec
pushf
int3
imul
inc
fwait
test
push
pop
mov
cmpsb
repz
mov
or
xchg
jno
adcb
call
inc
xor
sub
out
lods
xlat
add
mov
stos
or
dec
xor
insb
les
enter
mov
popa
or
xchg
pushf
addb
call
add
add
mov
add
test
enter
or
stos
enter
pop
add
mov
enter
push
lret
sub
frstor
popf
or
out
push
jmp
and
add
in
mov
pop
or
mov
sbb
add
xlat
jge
sbb
cmpsl
jp
orl
cmpsb
sahf
cs
mov
adc
ljmp
add
dec
std
xchg
mov
mov
mov
popf
sub
adc
cmp
xchg
in
test
mov
push
sbb
cmpl
mov
repnz
xor
add
and
and
mov
mov
add
add
mov
add
mov
xlat
mov
fdivl
mov
jbe
mov
ljmp
push
cltd
into
dec
ss
xor
mov
mov
jbe
sbb
xlat
sub
call
jle
insl
loopne
cmp
icebp
inc
lods
sbb
mov
and
or
daa
nop
mov
stos
pop
mov
std
pop
sbb
iret
add
xchg
es
or
mov
movsb
mov
inc
fmuls
jmp
and
or
pop
push
int3
mov
lock
aas
call
hlt
adcb
lock
test
inc
add
leave
mov
out
push
dec
jb
enter
or
hlt
mov
push
xchg
mov
mov
mov
xchg
insb
popf
icebp
pop
sbb
test
mov
insb
mov
adc
and
repz
sbb
push
cmpl
adcb
push
xchg
insb
mov
mov
mov
stc
push
mov
fsubrs
jge
aam
and
mov
mov
test
call
pop
inc
dec
out
or
and
dec
mov
mov
and
push
adc
movsl
aas
lods
mov
mov
and
jbe
lods
adc
mov
sbb
cmp
cli
cwtl
push
in
std
test
mov
cli
and
dec
pop
cmp
mov
pop
arpl
lahf
idivl
lods
les
xchg
in
push
mov
and
shll
inc
shlb
lcall
xchg
popf
xchg
out
in
push
xor
pop
movsb
inc
test
mov
mov
ret
mov
movsl
scas
lcall
mov
xlat
clc
ror
sbb
repz
or
lock
out
push
icebp
ljmp
fisubrl
pop
sbbb
mov
xor
loop
ret
jnp
mov
leave
pop
xchg
in
icebp
push
aam
mov
mov
cli
jmp
pop
sub
and
sbb
xor
and
mov
sbb
and
mov
inc
jmp
cmpsl
jb
rolb
mov
add
out
aam
decb
dec
cmp
dec
pop
xchg
or
cltd
pop
ljmp
mov
ret
rolb
inc
pop
setle
negl
arpl
lret
in
aam
out
sbb
aam
cmp
xchg
lods
dec
ljmp
sbbb
inc
cwtl
sbb
mov
lock
add
sahf
sbb
push
mov
inc
add
jmp
mov
outsl
lods
jmp
jbe
mov
mov
jmp
push
in
adc
je
fildl
dec
pop
hlt
lret
inc
mov
or
dec
ja
sub
hlt
adc
adc
cld
push
shrb
xchg
or
ret
mov
add
mov
addr16
test
adc
popa
sbb
popf
sti
addr16
mov
dec
and
and
fmuls
push
stos
dec
push
sbb
lods
cmpsl
mov
mov
fdivs
out
imul
mov
stc
loopne
aam
lahf
es
popf
int3
out
adc
or
insl
in
jge
insb
jne
or
enter
in
sub
xchg
jp
mov
cltd
mov
stos
add
bound
pop
in
push
pop
mov
aaa
jg
inc
xchg
mov
add
and
xchg
adc
and
mov
dec
imul
clc
inc
add
mov
xchg
inc
in
fmull
or
xchg
pop
add
je
stos
and
inc
adc
ret
cli
je
imul
das
sbb
nop
mov
push
jle
cmp
aas
scas
sub
iret
push
insb
dec
sbb
jmp
notl
cmp
gs
and
rcrb
add
push
pushf
andl
sub
xor
inc
cmp
loopne
mov
push
xor
push
clc
add
test
jmp
add
inc
adc
scas
dec
std
mov
pop
push
loope
add
insb
call
pop
inc
xchg
push
and
xor
jecxz
pop
pusha
ficoml
push
scas
addr16
cli
test
inc
adcb
adc
ret
fadds
push
enter
or
lret
mov
sub
cwtl
stc
leave
scas
jmp
push
sahf
lret
pop
clc
xorl
jmp
jmp
sbb
push
mov
pop
xchg
repnz
lcall
aas
loop
xchg
inc
push
or
lock
mov
push
sbb
add
sti
add
dec
mov
push
ss
cmp
jecxz
mov
hlt
inc
jg
add
test
notl
mov
xchg
adc
mov
test
pop
inc
int3
add
cmp
ds
std
popa
lahf
lret
sti
ror
cld
pop
daa
addb
in
push
movsb
insl
gs
sub
cmp
add
adc
cli
mov
or
fidivrs
push
enter
fldt
and
inc
fisttpl
cmp
sbb
dec
fsubrs
sbb
pop
xor
add
enter
lds
sub
cmpsl
nop
mov
js
or
int3
test
repz
test
fstpt
sbb
fs
fs
push
add
sbb
fwait
ret
cli
imul
enter
cwtl
mov
pop
les
dec
push
enter
imul
adc
lcall
enter
mov
pushf
ljmp
cmp
dec
adc
mov
or
mov
push
enter
int
lea
insb
fs
mov
mov
test
or
cmp
or
enter
test
enter
mov
xchg
inc
sbb
sbb
test
add
ret
test
ljmp
aam
push
or
fildl
pushf
and
popa
addb
cmpl
add
sahf
enter
or
fwait
movsb
pushf
call
sbb
imul
sbb
cwtl
or
fwait
adcb
call
adc
ljmp
call
adc
or
pushf
les
shrb
push
test
or
ljmp
lret
mov
test
rorb
or
pushf
les
test
ljmp
add
pop
test
orl
adc
ja
add
adc
test
insl
or
pushf
mov
lcall
in
ljmp
adc
add
add
cmpsb
loope
call
fwait
sbb
rcrb
xor
gs
int3
nop
or
lahf
adc
sahf
gs
and
movsb
out
mov
push
decb
sbb
lret
repnz
mov
adc
pop
mov
sub
jle
xchg
and
movsb
jmp
or
hlt
mov
sbb
sbb
cmp
jmp
inc
mov
out
out
sbb
jb
jno
inc
xchg
movb
ficoml
in
outsl
push
out
mov
xchg
adc
cmp
inc
mov
nop
dec
adc
adc
inc
push
mov
out
inc
jb
xlat
mov
cli
jl
rcr
es
hlt
popf
test
jnp
ss
mov
mov
shr
cmc
dec
mov
mov
fcmovnb
and
pmulhuw
stos
pop
ficomps
mov
cld
hlt
push
xor
cwtl
mov
push
pop
push
or
leave
lahf
stos
ljmp
lods
jnp
add
sub
and
stos
enter
sar
and
lcall
xchg
and
test
cmpsb
mov
in
imul
mov
fwait
mov
mov
test
addl
inc
loop
pushf
out
mov
sub
inc
cmpsb
test
test
negb
and
push
sbb
mov
sbb
add
mov
sbb
add
cld
pop
add
lcall
mov
cmc
mov
mov
sahf
ja
jge
cmpsl
scas
test
sahf
pop
dec
sarl
les
in
incb
test
nop
cwtl
mov
sub
sahf
mov
sbb
repnz
adc
sub
sahf
ljmp
les
les
xchg
inc
filds
dec
mov
sub
jnp
dec
xor
push
out
push
pop
push
les
mov
or
mov
inc
stc
push
bound
stos
lahf
nop
out
adc
pop
cld
bound
push
mov
jg
mov
ret
adc
xor
adc
cld
fwait
add
push
int
dec
daa
pop
adc
mulb
pop
clc
std
add
arpl
push
sbb
jo
shlb
sub
call
aam
xchg
sbb
mov
test
jmp
movsl
rorb
fimull
arpl
sub
adc
adc
ss
add
push
dec
insb
adc
or
mov
es
lock
std
xor
inc
sub
bound
mov
pushf
scas
mov
adc
mov
jg
mov
aad
sub
sti
or
shr
cmp
jnp
subl
enter
push
xorb
dec
sbb
cmp
dec
lds
scas
cli
clc
pop
jg
mov
mov
lock
mov
pop
stc
cmpsl
or
pop
lret
mov
lret
addl
popf
dec
fcmovne
jo
int3
mov
mov
dec
lret
xchg
and
pop
or
inc
add
adc
test
and
in
inc
pop
add
xchg
sbbl
fucom
pusha
je
lods
and
sub
inc
add
imul
mov
out
mov
loop
adc
cmp
mov
and
ret
and
outsl
sub
repz
push
lods
push
xchg
jae
inc
fistpll
and
or
out
or
sti
adc
push
sub
movsb
lods
movsb
or
aad
inc
mov
ret
mov
add
insb
jb
scas
cmp
lret
sbb
mov
push
arpl
and
pop
popf
repz
adc
test
daa
mov
push
dec
cwtl
inc
push
lods
xor
cmpsl
in
fnstsw
jae
fwait
mov
inc
cmpsb
int
cld
cmpsb
mov
test
sbb
sti
pop
fs
sub
mov
add
mov
loop
push
cmp
mov
enter
cmp
adcl
clc
in
orl
adc
mov
push
mov
roll
sahf
movsl
adc
stc
push
cmc
int
fdiv
mov
cmp
adc
aaa
enter
sarb
insb
and
sbb
mov
popf
push
les
jnp
mov
sbb
pop
push
pushf
cmp
sbb
mov
int
ss
sbb
cltd
insb
sub
fstps
rorl
mov
aam
jns
sub
push
loopne
sub
dec
fcoml
enter
or
daa
std
or
or
xor
out
ljmp
or
movsl
xchg
cmc
adcl
mov
dec
fdivrl
loop
cld
in
mov
shrb
pop
negb
aam
add
test
or
dec
jmp
movsb
repnz
xchg
fisttps
call
test
fsubl
mov
in
mov
add
ljmp
adc
enter
rol
sub
mov
add
jns
and
xchg
xor
repz
shll
mov
jp
cld
pop
int3
cld
in
movsb
out
cmpsl
jbe
pusha
jns
sub
sbb
mov
test
sbb
xor
js
les
mov
adc
jno
call
pop
or
fistpl
or
mov
shlb
shll
adc
cmp
js
test
push
outsb
jecxz
xorl
xchg
test
sub
sbb
lret
loop
mov
sbb
or
mull
and
mov
mov
inc
popf
data16
add
xlat
call
add
out
data16
cmp
fadds
stos
jg
push
sub
bound
push
aam
daa
hlt
jl
adc
dec
popf
out
push
fdiv
loope
mov
aad
adc
add
dec
cmpsl
cmp
inc
or
jne
or
lods
add
jnp
lcall
loop
push
out
pop
add
add
in
mov
das
adc
push
cmpsb
dec
and
cs
cmp
adcb
sahf
jle
or
lfs
fsubrs
xchg
seto
test
mov
leave
adc
sub
adc
jb
push
pop
or
adc
outsb
xchg
inc
xlat
add
int3
jns
ret
mov
in
dec
aam
or
mov
scas
xor
inc
and
insl
pop
rorl
stos
jge
push
pop
orb
dec
cmpb
test
iret
mov
call
lea
mov
push
stos
in
sbb
xor
inc
pop
roll
or
lret
sbb
mov
ds
mov
sti
mov
lods
xor
pop
imul
ljmp
mov
movsl
aam
or
dec
push
mov
sbb
or
mov
adc
mov
testb
lret
mov
cltd
sbb
stc
fldl
repz
divl
movsl
sub
test
movsb
movsl
mov
xchg
or
sbb
sub
xchg
jecxz
or
pop
iret
pop
test
mov
add
in
sti
inc
push
mov
lds
jnp
jp
outsl
dec
mov
mov
fistpll
sub
scas
mov
mov
push
or
es
test
into
sub
mov
fyl2x
scas
lea
and
xlat
sbb
mov
or
jae
ud2
pop
push
mov
scas
or
stos
cmpsl
dec
add
aam
xor
das
jb
xchg
pop
iret
shlb
jb
test
jecxz
hlt
inc
sbb
stos
mov
cmp
sub
or
je
mov
ret
or
adc
je
daa
and
push
out
mov
adc
xchg
push
sbb
cmpsl
or
enter
les
sbbb
mov
in
out
or
push
mov
mov
loop
jg
mov
sbb
xchg
fwait
popf
les
mov
pop
inc
cmp
mov
cmpsb
cmp
psraw
lcall
mov
aad
mov
movsb
je
fcompl
insl
aad
icebp
or
mov
roll
add
xchg
data16
mov
xchg
mov
push
in
or
ds
cmp
call
loope
jne
jno
stc
xchg
add
mov
fwait
add
mov
ret
pushf
jecxz
push
sbb
sbb
std
testb
je
cmpsl
jae
jecxz
bound
inc
add
mov
inc
sbb
ljmp
push
jnp
hlt
or
bound
into
call
inc
enter
adc
pop
adc
push
and
sub
or
push
aas
movsb
fldenv
inc
in
xchg
xor
jns
xchg
lret
out
in
aam
pop
rolb
mov
mov
xlat
es
cmpsl
or
pusha
mov
lock
add
mov
decb
cmp
hlt
adc
push
inc
dec
mov
ret
mov
xchg
xchg
add
hlt
xchg
and
pop
sub
sbb
pop
sub
mov
clc
aad
add
xor
loopne
pusha
mov
movsl
std
push
rcrb
sub
mov
dec
shlb
in
je
xchg
les
ss
and
jge
and
mov
addr16
xor
dec
adcb
cli
xchg
andl
outsb
dec
mov
lods
push
xchg
and
test
cmpsb
mov
inc
sbb
mov
in
imul
or
ret
mov
sbb
jnp
dec
push
pop
sbb
xchg
sub
test
jns
push
call
pop
pop
mov
in
or
scas
scas
pop
hlt
std
loop
popf
jno
or
pop
icebp
test
xchg
outsl
mov
ret
es
out
fidivl
pop
jae
xchg
jne
push
xlat
ret
xor
test
das
sti
dec
call
add
sbb
lods
retw
inc
das
shrl
aad
lods
sbb
subl
dec
loopne
sub
add
pusha
push
mov
int
jle
or
or
pop
jns
inc
test
sub
mov
or
loop
or
jg
mov
dec
test
sub
push
aaa
or
test
loop
leave
test
push
fwait
push
lret
sti
orl
int3
fs
add
mov
and
mov
or
mov
or
xlat
pop
jo
dec
lods
enter
jae
sbb
adc
xlat
and
mov
inc
leave
into
int3
push
nop
mov
adc
cmc
add
popf
push
inc
push
roll
ret
mov
pop
mov
adc
xchg
dec
out
aad
mov
outsl
sub
sub
fucomi
mov
lret
out
or
push
js
jg
pop
loop
cmp
lret
pop
test
xor
fs
or
add
das
sub
out
outsb
je
push
hlt
mov
mov
mov
cmp
nop
add
push
mov
andb
movsb
xchg
les
jp
sarl
mov
idivb
jbe
jae
sub
sti
xor
mov
add
scas
mov
push
in
mov
ds
jl
out
pop
and
fs
sub
inc
pusha
push
test
dec
or
das
andl
mov
pop
or
rorl
fxch
out
dec
or
xchg
fcmovnb
scas
cs
sahf
sub
or
adc
adc
mov
dec
and
inc
leave
add
adc
and
or
sub
call
lahf
jmp
push
mov
movsl
hlt
mov
or
stos
lret
jecxz
add
rorb
fstpl
in
jno
mov
cli
jo
sti
cltd
cs
add
or
and
scas
xchg
mov
les
daa
mov
and
sbb
arpl
out
or
pusha
out
or
jnp,pt
cmp
adc
nop
mov
cmpsb
dec
mov
lock
dec
decl
mov
je
in
shrd
fwait
pop
lret
scas
pop
or
mov
mov
pusha
lods
or
sahf
mov
das
jg
lcall
scas
arpl
mov
jecxz
pop
and
cmpsb
outsl
bound
sub
and
iret
xchg
cmp
into
xor
or
insl
mov
outsb
ss
jns
lret
cmp
inc
aam
scas
int3
push
repz
shrb
ret
fildll
add
sti
ret
or
int
je
lods
sti
jge
outsl
dec
mov
int3
sti
aaa
sbb
gs
pop
pop
dec
jmp
adc
mov
lret
pop
sbb
and
shll
sti
jmp
adc
loop
and
sub
repnz
jnp
jo
push
lea
inc
push
inc
add
cld
addr16
dec
sub
call
ja
mov
arpl
daa
loop
cmp
add
push
outsl
insl
in
fs
or
sub
sub
sub
or
mov
ret
sbb
inc
mov
push
push
adc
mov
xchg
pop
adc
lret
adc
cmp
xchg
mov
add
repnz
test
loope
and
cmp
adc
fcoml
push
insl
pop
sbb
rclb
repnz
sub
and
sar
sahf
addb
push
into
insl
inc
xchg
pop
sar
mov
push
push
pop
nop
cmp
sbb
xor
pop
addr16
ja
sahf
mov
pop
and
mov
sbb
fadds
cmp
int3
add
jns
mov
mov
pop
popa
sbb
sub
add
cs
outsl
ds
sub
sbb
movsb
mov
adc
enter
cmp
sbb
jle
loopne
mov
xchg
mov
or
scas
mov
cmp
or
data16
cvtdq2ps
andl
cld
push
xchg
sub
and
push
nop
rol
mov
pusha
loop
or
lret
ss
adc
in
add
ret
addr16
push
adc
insb
lea
inc
xchg
add
dec
inc
nop
xor
lcall
out
hlt
imul
mov
push
xor
mov
mov
int3
mov
cwtl
sbb
cmp
cmp
cwtl
jecxz
ret
cmpsb
sti
xor
or
adc
lcall
iret
aas
int3
mov
adc
inc
pushf
mov
xchg
fwait
scas
sub
jnp
or
fmull
loope
inc
or
call
xchg
lock
mov
jne
push
adc
pop
xchg
fisubrl
xchg
daa
shrb
unpcklps
adc
clc
jae
movsb
or
loope
and
sub
xchg
shlb
std
fmull
jnp
xchg
orb
push
or
fwait
mov
je
stos
sub
mov
cmp
movsl
adc
pop
insl
cmpsb
test
mov
cmpsb
stc
inc
pop
add
sub
or
testl
enter
add
fcom
jl
add
push
ficompl
pop
xlat
sbb
in
push
add
lods
add
mov
jle
pusha
mov
or
test
or
aaa
or
outsl
pop
mov
jne
jg
pushf
pop
mov
pop
je
out
addr16
lret
push
jne
dec
icebp
mov
or
inc
ficomps
xor
imul
jge
adc
mov
xchg
jne
add
and
sbb
mov
pop
adc
cmp
or
inc
and
and
stos
pop
movsl
or
xchg
pop
mov
int3
push
sti
decl
push
or
test
add
cmc
int3
movsb
scas
or
pop
push
sbb
mov
sbb
adc
push
hlt
sbb
loope
pop
sbb
inc
xchg
cmpsl
insb
xchg
popl
mov
loopne
pop
or
ja
pop
sbb
or
mov
cmp
mov
repnz
ret
adc
pushf
fwait
cld
fcoml
in
jmp
cli
call
or
icebp
xor
jnp
or
sub
mov
sbb
pop
or
mov
movsl
xor
lods
xchg
push
sub
xchg
xchg
lcall
call
mov
test
pop
adc
adc
fisttpll
hlt
adc
push
aam
push
push
mov
stos
cmp
or
std
push
or
cmp
pop
cmpl
test
dec
add
sbbb
sbb
or
jmp
mov
or
adc
add
addl
fistpl
dec
inc
call
call
sbb
cli
cltd
sbb
ljmp
mov
mov
dec
adc
movsb
xchg
call
adc
pop
xchg
in
loop
stos
xchg
xor
nop
popf
pop
out
add
sti
push
enter
or
dec
or
rcll
lret
dec
call
mov
or
lret
xor
sub
jp
call
fwait
mov
or
jp
dec
call
xchg
or
adcb
arpl
xor
dec
jb
jle
filds
movsb
stos
cmp
and
insb
adc
in
push
int3
sbb
pop
ss
sbb
mov
mov
mov
xchg
jge
call
jecxz
add
in
incl
dec
ljmp
xchg
push
cmp
cltd
test
jmp
jecxz
adc
sub
adc
push
hlt
push
push
inc
jns
or
rcrl
out
xchg
xchg
ljmp
adc
mov
adc
hlt
inc
fimull
mov
mov
xor
sub
dec
test
jle
enter
mov
and
into
js
mov
aas
add
push
jl
or
popf
pop
ret
mov
dec
aad
mov
into
arpl
push
cmp
stos
rol
dec
sub
inc
jmp
movsb
or
lret
addb
mov
mov
pushf
and
test
sbb
mov
notb
and
adc
imul
adc
xlat
icebp
xor
add
rcll
inc
jg
sbb
inc
test
cli
stos
adc
cmp
lret
in
mov
mov
add
or
sbb
dec
ljmp
or
push
mov
insl
push
or
dec
or
adc
shll
mov
clc
stos
test
xchg
clc
mov
push
movsb
ljmp
in
mov
or
mov
sbb
add
or
push
adc
out
int3
sbb
and
inc
mov
push
lea
adc
sbb
pop
jns
shlb
add
pop
fsubrs
mov
lock
mov
jg
stos
or
add
andl
mov
lea
sahf
adc
mov
xchg
lods
jl
iret
mov
xchg
adc
call
push
in
mov
mov
ds
pop
shl
jp
ljmp
inc
ret
xor
or
insl
ds
pop
or
mov
dec
call
push
cmp
mov
lods
fwait
movsb
fisubrl
shll
mov
jnp
mov
das
jmp
lods
cmpsl
jnp
in
shll
adc
xor
adc
sbb
mov
mov
jbe
shlb
int
loop
add
jmp
cmp
call
lret
out
xor
lret
push
test
pop
and
aad
insb
outsl
ja
sti
cli
dec
daa
inc
loope
xchg
adc
scas
rcl
push
inc
or
adc
dec
lret
out
add
test
sbb
mov
into
add
push
imul
xchg
mov
push
test
inc
sete
adc
out
lock
fadd
daa
xchg
jo
mov
in
fidivrs
xor
or
out
mov
stc
and
ret
cmpb
add
or
out
dec
cli
fildl
inc
fnstcw
les
push
out
inc
pop
les
dec
add
mov
add
dec
and
jle
mov
cmc
clc
ljmp
ffreep
leave
dec
andl
mov
stos
push
add
mov
sub
lock
mov
sahf
pusha
loope
push
mov
lock
sti
xor
and
ljmp
fbld
sub
fistpll
pop
inc
andl
jbe
push
ljmp
jmp
mov
xor
xchg
mov
rorl
ret
jae
sbb
sub
daa
sahf
out
aam
movsb
sbb
xchg
sub
adc
jnp
sti
and
mov
fs
push
orl
dec
call
mov
jle
mov
imul
xor
imul
clc
test
jns
pop
and
cmp
or
das
xchg
jbe
pop
xor
test
and
and
adcl
or
outsl
insl
xor
add
pop
adc
adc
mov
xchg
jno
test
outsl
mov
add
adcb
fadds
rclb
lds
movsb
mov
shll
addr16
ret
push
ja
mov
nop
push
pushf
pop
push
and
enter
push
sub
ljmp
sub
data16
fnstenv
popf
enter
fldl2e
sbb
sub
enter
cli
lret
push
sarb
and
adcl
mov
push
pushf
ljmp
and
add
inc
in
movsb
hlt
adc
ret
pop
stos
xor
adc
add
cmp
fisttpl
add
lret
mov
xchg
popa
stc
push
fistl
and
jmp
hlt
mov
addr16
dec
inc
xor
ret
stos
jne
mov
jae
call
fstpt
mov
test
fucomp
ss
lret
push
mov
enter
jnp
jne
add
nop
sbb
jnp
jl
and
dec
repz
inc
dec
test
jmp
jmp
mov
addl
es
dec
insb
pushf
das
out
sub
cli
imul
mov
add
xchg
xor
xchg
pop
jp
arpl
mov
jecxz
out
cwtl
lock
ds
dec
add
loop
pop
loope
mov
je
jmp
sub
mov
dec
or
fs
enter
inc
cmpsl
pusha
and
cmp
pop
insb
mov
add
pushf
jecxz
movsl
mov
lea
dec
out
clc
loop
lock
rcrl
jnp
jl
mov
sub
dec
and
sti
sub
dec
or
push
mov
mov
inc
insb
dec
and
lret
sub
out
or
pop
sbb
add
lret
and
ret
cltd
jl
bound
sahf
arpl
jno
mov
test
les
loope
add
xchg
fistps
fwait
xor
sbb
push
fidivrs
out
push
add
aaa
dec
cmp
mov
or
stos
sbb
mov
js
or
inc
jle
mov
jae
fsubr
icebp
lods
adcl
lret
les
jmp
neg
out
loop
lret
xchg
out
mov
or
loop
push
or
les
cwtl
sbb
xchg
xchg
dec
enter
jmp
mov
mov
rclb
inc
or
movsb
push
lret
test
xchg
pushf
stos
pop
cmpsb
mov
daa
xor
jo
sahf
cmp
cmp
psllq
dec
inc
fs
fisttps
ret
adc
lcall
adc
add
push
jmp
sub
mov
push
or
sti
sti
cmpsl
jnp
lahf
dec
repz
push
cmp
mov
sbb
xor
hlt
scas
or
push
pop
cwtl
imul
or
mov
cld
mov
imul
adc
jnp
in
pop
or
pushf
jge
out
stc
push
ljmp
cmpsb
xchg
cmp
or
add
out
push
or
mov
inc
ja
mov
orl
pushf
push
mov
cltd
out
sbb
dec
jmp
in
lcall
push
cmc
dec
in
repz
jo
call
sarb
sahf
push
inc
xchg
arpl
xor
movsl
adc
cld
scas
push
or
aaa
enter
das
stos
jnp
lahf
fs
mov
outsl
scas
imul
push
cltd
xchg
pushf
ret
adc
or
ja
cmp
mov
mov
xchg
jp
cli
xor
jb
fldl
jl
cwtl
fistpl
mov
addl
dec
or
jecxz
mov
movsl
lret
stc
inc
lret
cli
jg
push
int
and
push
lret
xor
cli
mov
xchg
mov
ljmp
es
lcall
inc
xor
sub
xchg
inc
je
lods
pop
dec
lret
stos
mov
imull
dec
sahf
das
shlb
loop
mov
xor
jmp
add
scas
subl
xor
mov
call
lret
repz
mov
xor
in
or
inc
sbb
cli
jmp
jmp
cmp
jp
ja
mov
sbb
sbb
movsl
stos
leave
or
and
jmp
lods
test
jmp
test
sti
or
mov
stc
jmp
jmp
test
lret
mov
lret
jbe
or
xor
icebp
cli
out
cmovbe
cmp
jmp
dec
cli
inc
ljmp
cli
xchg
or
sbb
je
lods
lcall
daa
sti
mov
stc
sub
push
cmpsl
jp
decb
fwait
fwait
mov
xorl
lret
mov
int3
out
lret
and
inc
pushl
loope
cmpsb
and
jp
popa
rorl
pop
fiadds
push
mov
push
or
mov
mov
jmp
adc
add
xor
cmp
add
mov
lret
pop
outsb
dec
test
mov
subb
ret
jmp
ret
push
xor
outsl
pushf
mov
mov
sbbl
push
icebp
mov
or
out
or
out
inc
in
movsl
cltd
or
mov
jo
inc
inc
xorl
sbb
or
inc
popa
lock
mov
add
xor
push
jle
into
iret
pop
mov
lods
lret
adc
push
leave
cmp
shlb
xchg
leave
xor
mov
dec
pop
fdivs
sbbb
inc
and
ret
mov
repnz
mov
add
push
das
mov
lock
lea
packuswb
cmp
push
mov
ds
adc
jmp
adc
and
nop
aam
xor
push
lret
dec
subl
jg
push
nop
jp
daa
push
fldt
xor
adcl
ljmp
sbb
mov
adc
push
sub
out
or
popl
test
aam
andb
cmovge
sub
outsl
pop
push
in
pop
adc
mov
enter
xorb
clc
aam
xchg
shl
dec
imul
and
jne
and
pop
in
or
mov
push
leave
xor
stos
pop
jnp
cltd
lea
lahf
int3
inc
inc
mov
inc
inc
pop
std
cmp
xchg
xchg
and
xchg
lock
inc
insb
inc
jle
lea
cld
and
dec
sbb
mov
test
mov
add
es
ja
popf
cmp
sahf
mov
pop
repz
aam
stc
sbb
xor
xchg
cmp
sbb
and
in
xor
add
pop
lcall
mov
inc
jo
lods
int
lret
add
adc
fwait
in
push
mov
std
insl
jmp
adcb
pop
movsl
cs
test
popa
mov
shll
xor
popf
and
aaa
out
repnz
daa
test
jnp
fdivl
dec
xchg
mov
or
cmpl
xchg
xchg
js
push
add
or
push
mov
lods
data16
ret
pop
icebp
cmp
addb
nop
adc
clc
mov
sub
jnp
mov
test
adc
insb
in
test
jle
xlat
call
addr16
leave
addr16
pop
jp
adc
xchg
push
push
mov
jne
jne
and
xchg
cmp
imul
push
test
setp
loope
add
lret
cld
xchg
push
jecxz
nop
daa
loope
sbb
pop
xchg
lret
inc
dec
enter
sub
sahf
sub
mov
cmp
dec
adc
adc
jns
inc
xor
xchg
xor
xchg
jecxz
mov
rolb
movl
mov
dec
pop
dec
or
mov
pop
cmc
and
andb
mov
adc
cmp
xchg
add
jp
lea
cmp
test
popf
sbb
pushf
imul
mov
imul
sub
push
test
dec
stos
mov
mov
adc
mov
mov
repnz
mov
cmpsl
push
jns
je
mov
sub
pop
adc
jmp
add
sub
movsb
xchg
dec
push
push
cmp
push
adc
call
inc
cwtl
filds
in
inc
test
loop
mov
adc
invd
das
and
in
xchg
sub
call
adc
dec
iret
or
shr
cmpsb
fs
inc
pop
sbb
cwtl
testb
cmpsl
lcall
enter
les
pop
pusha
cmpsb
hlt
push
sbbb
mov
pfrcp
aaa
dec
ss
adc
sbbb
and
jnp
lods
fcoml
push
andb
call
jp
lods
sti
mov
or
scas
imul
cli
shrl
gs
sahf
insb
inc
ret
add
push
push
push
cmpsl
push
mov
pushf
bound
and
daa
mov
js
cwtl
lret
mov
push
gs
add
mov
xor
ret
imul
add
in
sub
out
in
lret
lcall
adcl
outsb
or
addr16
bound
or
rcl
repz
xor
adc
add
repnz
dec
movsl
mov
xchg
mov
mov
pop
xchg
notl
repz
jmp
push
add
pushf
test
pushf
adcb
sbb
ret
insb
mov
in
inc
and
sub
fs
and
arpl
test
test
add
sti
jmp
lahf
lret
adc
lcall
cmp
fbstp
orl
stos
mov
and
movsl
jne
lret
aaa
xchg
xchg
or
test
test
push
in
cmpsl
outsb
test
xchg
ror
jbe
or
lret
dec
ffreep
xchg
jl
mov
xor
out
inc
sub
stos
mov
mov
xlat
dec
jnp
and
hlt
ret
in
jl
stos
inc
cmc
int
dec
dec
out
cmp
sti
push
popl
pop
push
divb
aas
cmp
add
pop
popf
nop
mov
dec
inc
test
push
lret
pop
cwtl
sbb
or
psignw
mov
fs
lods
mov
xchg
pushf
popl
xchg
aaa
cmc
enter
shll
pop
sbb
or
or
call
dec
jle
and
and
scas
rcll
and
jmp
popf
inc
jecxz
and
out
push
rolb
test
jmp
and
sub
push
lods
cmp
push
addl
addb
jmp
push
fldt
stos
dec
mov
dec
jb
mov
jle
xchg
sbbb
dec
push
scas
mov
sbb
dec
mov
int3
adc
stos
jecxz
or
adc
les
cmp
sbb
nop
push
inc
mov
cmp
cs
int
jns
out
or
sub
or
dec
adc
pop
push
loope
pop
pop
in
add
xchg
jge
mov
xlat
lret
pop
loop
xchg
jmp
lret
xor
and
repz
push
in
jnp
cli
jne
je
pop
sbb
mov
xchg
loop
adc
cmpsb
inc
dec
test
push
std
imul
and
inc
jnp
ret
lret
stos
adc
insb
sahf
icebp
or
setp
test
pop
dec
jg
sbb
adc
mov
sbb
xchg
fs
mov
sub
push
push
mov
cmp
mov
sub
mov
and
or
fistpll
mov
and
mov
out
add
je
jecxz
inc
je
fimull
movsl
pop
mov
adc
dec
mov
lock
bound
sbb
int3
jb
xor
rol
or
jge
std
daa
add
movsl
cs
xchg
lret
mov
adc
mov
fisttpl
rorl
test
push
and
jl
and
in
or
jns
sahf
and
jbe
cmpsb
dec
or
loop
or
add
daa
or
or
cmpl
inc
and
xchg
sti
sub
xchg
in
xchg
add
adc
dec
and
sub
cmc
mov
int3
int3
jnp
cmp
mov
lcall
add
in
test
ljmp
test
xchg
shl
cmp
orl
out
popa
pop
lea
push
cmc
inc
sub
les
xchg
test
mov
adc
jl
call
lahf
xchg
cmpsl
rcll
sar
data16
add
mov
mov
movsl
and
or
pop
xchg
aaa
aam
xor
mov
push
icebp
pop
and
xor
sti
xchg
bound
dec
clc
mov
mov
dec
into
stc
lods
lds
dec
fdivs
ror
inc
insb
xchg
loope
jne
sub
imul
inc
out
add
dec
cmpsl
mov
insb
stc
lods
shlb
in
or
xchg
xchg
scas
push
cli
or
subl
mov
mov
mov
ret
adc
sub
sbb
or
sbb
cmp
cmp
loopne
xchg
adc
xor
leave
mov
repz
add
jmp
jl,pt
sbb
fistl
out
or
sbb
sbb
adc
sbb
dec
mov
or
xchg
sti
int
gs
or
insb
xchg
push
adcl
mov
jae
push
pop
cmpsl
enter
test
pop
mov
mov
loopne
loope
cld
jns
int3
jge
and
mov
lcall
int3
hlt
das
lods
cmpsl
rol
inc
decl
mov
in
xchg
sbb
adc
jb
ja
arpl
cmp
inc
ret
imul
mov
test
inc
xchg
test
in
dec
test
pop
sti
sbb
inc
mov
mov
or
cmp
popf
pop
test
cmp
in
inc
push
adc
jl
movsl
out
jg
ret
sahf
xor
repz
out
insb
pop
mov
sub
cmp
pop
inc
movsb
xchg
subb
sti
mov
push
clc
push
sbb
scas
xchg
sbb
into
push
jmp
xchg
add
mov
inc
popa
je
fistpll
mov
dec
cwtl
test
pushf
jns
pop
pushf
adc
out
xchg
je
je
add
stos
sub
loopne
xor
push
xchg
xchg
ficoml
jmp
cmc
in
pop
push
adc
cmc
sbb
ss
loop
cmp
mov
jmp
push
mov
push
mov
or
mov
ds
out
gs
or
pop
jl
call
sbb
mov
pop
sahf
loope
mov
jecxz
popf
pusha
in
push
mov
jnp
cmpl
jecxz
outsb
lahf
xchg
imul
or
subl
cmpsl
adc
push
xlat
cmp
sti
pop
popf
dec
out
and
fimull
pop
mov
call
repz
aad
push
sbb
pop
fbld
lcall
inc
call
popa
xchg
xchg
add
xchg
xchg
cld
cmp
fiadds
xchg
inc
les
testb
orb
jp
imul
std
mov
sbb
push
xor
daa
hlt
in
fmull
add
bound
mov
sbbl
fs
fbld
inc
jle
sub
adc
add
xchg
fwait
daa
push
jnp
ds
inc
mov
arpl
call
jle
out
rcl
scas
mov
or
aam
or
outsb
mov
and
sahf
orb
hlt
vpshld
jg
add
adc
cmpl
jb
pop
sti
mov
sti
mov
inc
negl
inc
mov
pop
cmp
mov
cwtl
adcl
iret
decl
divb
add
adc
outsb
xor
jg
adcl
imul
outsl
mov
and
popa
mov
movsb
mov
mov
or
je
push
and
jp
inc
dec
enter
sahf
insb
jmp
pushf
jnp
in
scas
or
std
mov
jb
aaa
repnz
out
pushf
movsl
test
jnp
stos
les
addb
das
sbb
sbb
test
in
gs
or
jmp
mov
or
inc
mov
cmp
mov
lcall
and
shl
push
aaa
fnstcw
mov
enter
imul
add
repnz
mov
insb
add
add
fidivrl
add
push
repnz
push
mov
addl
sbb
fdivrp
mov
out
sub
cltd
push
sub
push
mov
outsl
test
jge
jmp
out
scas
mov
lea
dec
jo
pop
xchg
add
dec
outsl
inc
push
dec
sub
mov
lods
mov
mov
and
out
sarb
clc
pushf
sbb
dec
jmp
sahf
xchg
cmp
fsubl
push
insl
loop
push
in
adc
iret
cltd
loop
sub
and
ss
cmp
pop
lods
ds
in
insl
psrad
pop
or
mov
xchg
xor
jne
mov
aaa
inc
icebp
ja
mov
iret
fidivs
xor
adc
xchg
mov
jecxz
fnstenv
daa
shld
arpl
xor
dec
push
inc
xchg
mov
pop
fildll
out
inc
push
and
xchg
fwait
je
repnz
iret
xor
icebp
ret
xor
sbb
movb
data16
lock
xchg
pusha
mov
cli
push
shr
sarb
lock
inc
xor
add
inc
sbb
fdivrs
loop
loopne
inc
cli
test
inc
sti
data16
test
pop
imul
lock
mov
mov
imul
loope
lods
mov
jnp
js
out
xor
mov
fcmovne
adc
mov
sub
popf
in
ljmp
cmp
ror
sbb
iret
rorb
or
dec
jne
out
sbb
cld
jecxz
push
xor
push
mov
push
mov
or
ucomiss
fidivl
mov
cmp
popa
out
sbb
xlat
adc
jle
imul
cmpsb
rolb
in
inc
test
stos
jnp
in
jmp
jl
das
mov
int3
jnp
add
pushf
jle
inc
les
add
fistpll
mov
stos
movsl
lods
test
jmp
mov
mulb
cmpsb
jmp
mull
mov
cmp
enter
lret
mov
lcall
sub
cltd
pop
jmp
bound
shrb
or
dec
add
test
stos
movsl
mov
xchg
xchg
mov
adc
push
pop
stc
je
out
xchg
xchg
enter
dec
sti
ret
jb
sub
pop
adcl
lods
test
pmaxsw
pop
or
aam
pop
jnp
ds
pushf
cmp
pushf
inc
ss
les
or
inc
fs
inc
push
xchg
and
jle
clc
push
adc
mov
loop
jg
inc
cwtl
lahf
pop
loop
add
add
mov
fildl
mov
inc
sbbl
popf
mov
hlt
iret
int3
imul
popa
sti
int3
mov
scas
mov
daa
mov
fidivrl
jnp
or
repnz
out
sub
jge
loop
sti
jmp
mov
mov
xchg
cmp
mov
insl
push
mov
popf
xlat
inc
fwait
popa
stc
xor
ss
out
mov
sub
jle
xor
inc
fldl
inc
inc
inc
fcompl
ret
iret
xor
es
cmp
outsl
aam
inc
sbb
nop
push
inc
jbe
mov
pop
fcompl
ret
test
or
stos
testw
adc
push
jecxz
pop
dec
aaa
xor
xor
seta
pop
xchg
sti
xchg
sahf
xor
push
fwait
jp
and
sbb
xchg
cmp
jne
fnstcw
jb
adc
sbb
in
push
or
sahf
cmpsb
clc
xchg
jp
or
mov
mov
sub
fisttpl
mov
and
leave
mov
adcb
add
movups
mov
out
sub
std
jnp
adc
fnstsw
fwait
add
loope
xchg
ror
loop
out
jmp
stc
inc
test
cli
lock
test
jne
leave
test
mov
movsl
in
sbb
or
dec
inc
out
cmp
push
or
in
jne
cmp
aaa
xorl
jmp
mov
cmpsl
leave
arpl
into
and
or
sub
fsub
dec
pop
push
ffreep
push
jge
sbb
jmp
jle
mov
push
add
or
jge
cwtl
mov
fdivrl
scas
sub
push
enter
icebp
or
push
add
mov
outsb
inc
test
mov
mov
inc
into
seto
pushf
cmpl
dec
cmp
or
sub
xchg
and
adc
push
aam
sbb
sahf
jmp
and
jl
mov
push
sbb
add
pop
rolb
jnp
jo
xchg
ret
scas
inc
sahf
loopne
add
in
ret
lret
jae
inc
cwtl
dec
dec
jo
jb
jmp
add
insb
outsl
jle
fsub
test
bound
std
fwait
test
lods
scas
lcall
shrl
and
cmp
scas
test
adc
jmp
push
mov
mov
sti
pop
xchg
ja
jns
fsub
adc
and
in
rorb
out
lret
mov
adc
xchg
cmp
sub
movsb
lret
jnp
jmp
rclb
and
push
sub
imul
outsb
mov
pop
cmpsl
push
lods
add
into
sahf
subl
mov
push
inc
outsb
cmp
xor
push
xor
jecxz
mov
aad
subl
jns
lock
mov
mov
sarb
inc
sub
mov
cmp
mov
es
lret
adc
push
or
lds
cmp
cld
loop
in
or
sbb
and
sar
sub
mov
pop
sbb
outsl
add
xchg
dec
and
cmpsl
je
push
sti
mov
sbb
or
jmp
or
mov
and
mov
ljmp
jbe
lahf
add
loop
add
in
popf
bound
cmpsb
cs
mov
dec
cmpsl
shrb
stos
enter
lret
or
or
sbb
sub
test
call
pop
or
add
adc
xor
push
pop
sbb
into
decb
bound
ljmp
cs
test
cli
loope
xor
rcl
gs
fisttpl
das
fimuls
mov
popf
in
cmp
sub
push
or
dec
mov
inc
into
mov
add
push
mov
jno
in
sahf
xchg
mov
ret
frstor
push
iret
adcl
mov
fwait
fs
movsl
fwait
lds
xchg
pop
adc
sbb
btc
xchg
mov
mov
scas
cmpsl
xchg
rol
das
or
mov
cld
fbstp
inc
rorb
mov
lea
and
jb
cmpsb
scas
xchg
inc
jmp
or
lret
dec
add
stc
aam
adc
hlt
test
mul
push
ret
es
pushf
arpl
adc
data16
addr16
push
fxch
mov
xor
inc
pushf
lods
test
jecxz
sbb
shrb
shlb
aaa
rolb
cltd
cli
fwait
rol
movsl
cmc
adc
jp
lods
xchg
jmp
fwait
inc
mov
pushf
cs
mov
jnp
xchg
jle
movsl
repz
fldt
fstpl
lods
xchg
xchg
lock
movsb
sbb
xchg
scas
pop
mov
iret
pop
loope
mov
mov
out
push
xchg
cmpsl
add
or
nop
fidivrl
mov
or
dec
or
nop
rorb
adc
mov
lods
pop
jmp
and
nop
jbe
fisttpl
adc
in
pushf
pop
pop
mov
xchg
rep
jns
mov
add
movsb
add
cmp
je
das
mov
pop
lods
fs
jnp
lret
xchg
fldl
pop
mov
and
push
mov
dec
xchg
sub
sbb
mov
adc
sub
inc
sti
lret
cmp
cmpsl
cmp
in
je
sub
lea
repnz
sbb
lea
mov
add
shrb
in
pop
xor
or
andb
dec
les
sbb
lock
lods
outsl
in
mov
push
xchg
sbbb
and
jle
lret
fsubrs
add
add
push
inc
cld
sbb
mov
xor
test
or
rorb
mov
cmc
lcall
pusha
shll
fsubrl
jae
or
inc
jnp
pop
stc
imul
push
ret
mov
add
sbbl
mov
stos
les
mov
sbbl
movsb
add
pop
cmp
xor
inc
scas
mov
jmp
aaa
mov
mov
inc
fisubs
into
cs
icebp
add
aaa
mov
or
xchg
loope
stc
test
lea
dec
sahf
imul
pop
stos
mov
adc
std
mov
mov
sub
mov
sbb
and
rolb
xchg
push
push
mov
mov
add
push
or
mov
cmp
xor
cs
pop
xlat
lret
les
sub
inc
jae
pop
xchg
pop
jb
mov
cmp
ja
outsb
mov
adc
xchg
mov
dec
stos
sahf
push
inc
mov
mov
cwtl
mov
mov
xchg
add
les
bound
addr16
mov
dec
popa
mov
lcall
jb
stc
enter
jmp
scas
adc
sbb
cmp
int
clc
push
mov
or
repz
sub
bswap
xlat
repz
xchg
fs
call
jae
in
inc
xchg
mov
int
mov
insb
lds
je
pop
mov
push
and
mov
xlat
pop
xor
imul
les
mov
xchg
jmp
out
or
jle
incb
mov
inc
sub
cli
fisubl
or
jle
mov
pop
mov
in
xor
mov
clc
adc
jo
aad
push
ret
adc
jns
std
sbb
nop
mov
lret
dec
test
add
push
add
dec
or
xor
inc
push
lret
push
sti
push
insl
cmpsb
fbld
out
lret
loope
add
jmp
sub
int
and
rcl
cmp
jnp
insl
mov
jp
popa
dec
inc
push
push
pop
push
pop
and
cmp
insb
xchg
popf
adc
add
arpl
test
cmp
mov
scas
loope
push
or
repnz
xchg
test
sub
test
rolb
sbb
jmp
mov
add
jp
xchg
cmpsb
jmp
iret
dec
in
add
cmp
ja
pop
jb
push
in
cmpsl
sbb
add
xchg
dec
and
sub
add
adc
or
add
movsl
popa
or
and
pop
jp
out
test
dec
add
or
inc
ror
sub
xchg
jb
mov
mov
and
cmc
inc
repz
pop
or
pop
xor
sbb
add
ds
sbb
push
add
fdiv
adc
dec
dec
mov
test
mov
enter
push
adc
sbb
shrb
mov
sub
dec
bound
cmp
sub
or
bound
mov
adc
adc
cmc
fimull
rorb
std
push
pop
pop
jns
xor
or
stc
lret
pop
xchg
call
hlt
adcb
sbb
dec
mov
jmp
fmuls
mov
or
fcompl
jbe
data16
leave
mov
or
je
xchg
hlt
cmp
pop
jge
popf
fnstcw
ljmp
mov
fisubrl
into
mov
leave
add
sti
lds
pop
cwtl
out
inc
int3
jle
jns
loop
lret
cmpsl
hlt
xchg
dec
push
in
or
or
mov
push
sub
adc
mov
cltd
mov
popf
test
inc
push
call
mov
call
je
in
pusha
mov
in
testl
fisubl
fcmovnb
or
leave
scas
jno
bound
mov
cli
push
ret
fisubrl
add
gs
movsw
enter
fiaddl
mov
or
add
add
jne
push
dec
mov
ds
jl
add
dec
xchg
std
test
adc
cs
sub
dec
adc
add
out
add
jb
xchg
scas
add
adc
loope
cmp
sub
add
xchg
or
jge
stc
xchg
sub
mov
clc
inc
cmp
mov
cmpsl
mov
bound
cvtpi2ps
inc
ja
mov
arpl
cmp
icebp
hlt
xor
lahf
sarb
inc
add
mov
stos
sub
inc
jmp
sti
pop
lret
jg
fwait
test
sti
aad
lea
cmp
cwtl
xor
mov
popf
lahf
jle
sbb
fstpt
ss
enter
ret
xchg
pop
or
rorl
scas
mov
jb
sub
scas
xchg
jb
add
adc
inc
ss
jno
push
cmp
xchg
loop,pn
inc
adc
adcb
mov
lods
pop
ja
sub
mov
testb
inc
lods
inc
mov
xchg
inc
lcall
sub
push
call
adc
adcl
lret
ljmp
sbb
out
mov
test
mov
mov
outsb
jp
cwtl
insl
out
add
add
xor
mov
or
cld
pop
insb
mov
xchg
jmp
and
xchg
jb
jmp
stc
fdivr
or
or
jge
pop
lcall
pusha
mov
sub
jge
push
inc
sbb
xor
ret
and
sahf
xor
dec
or
sub
add
xchg
aad
or
xor
inc
ja
add
mov
movsb
call
mov
aam
stc
cs
jl
jge
mov
push
out
mov
lds
add
and
in
enter
loope
inc
fs
out
addl
sbb
out
and
push
aam
pop
in
cmp
popa
push
jecxz
xchg
roll
fmull
dec
lcall
aad
fidivl
outsl
gs
pop
insb
dec
lret
xchg
add
cmpb
add
adc
lods
push
out
xchg
ret
add
adc
arpl
xlat
and
out
daa
dec
inc
xor
ja
pcmpeqd
jge
or
lock
pop
jbe
test
dec
test
hlt
add
outsb
fcomps
adc
testl
add
dec
lcall
jl
jge
add
scas
jmp
or
jecxz
mov
repnz
mov
push
mov
mov
inc
enter
mov
test
test
sub
fstl
out
jae
add
ds
aam
adc
inc
je
insl
ljmp
ror
jmp
xor
sub
pop
lods
mov
sub
das
in
in
pop
or
dec
inc
push
add
add
cli
lcall
or
cmp
sbb
inc
add
and
int3
sbb
push
mov
push
xor
pop
jb
loopne
mov
cmp
andb
jg
lcall
test
test
sbb
or
inc
jmp
rcrb
or
add
insl
mov
adc
jmp
adc
pop
dec
dec
ret
sub
add
data16
sti
sbb
or
adc
cmp
fldcw
inc
cmp
xchg
push
mov
mov
cmp
or
call
adc
pop
std
sbbl
jp
jg
test
mov
xchg
mov
jg
das
shlb
gs
mov
mov
fcomip
lods
imul
out
and
and
and
add
cld
in
stc
dec
insb
sub
lods
push
mov
test
pushf
ret
shlb
arpl
and
jae
dec
xchg
lret
adc
push
pop
outsb
repz
pop
push
or
pop
pop
push
jmp
or
sbb
xchg
sahf
jne
inc
mov
mov
cwtl
leave
pop
sbb
add
xchg
into
mov
or
enter
ret
sub
pop
insb
ja
cmpsl
test
pop
mov
add
jl
jle
insl
pop
in
and
ret
cwtl
mov
ret
andb
fcom
dec
push
mov
ljmp
out
test
lcall
push
les
xchg
or
push
or
adc
sbb
mov
push
lret
cmp
cmp
fwait
cmp
cmp
inc
loop
pop
stos
adc
sub
add
cmpsl
lock
inc
cmp
cmpb
jbe
enter
or
sub
adcb
and
mov
fildl
fwait
and
pop
inc
inc
push
mov
inc
into
scas
cmp
stos
mov
jns
in
sahf
or
push
jle
jl
scas
xchg
mov
push
cmp
xchg
dec
jmp
rorl
cld
sub
and
jmp
rorb
and
mov
mov
mov
xlat
cld
leave
addl
dec
or
std
rclb
pop
jbe
or
pop
add
enter
movsl
repnz
mov
push
decl
sbb
sti
mov
lret
add
mov
and
out
and
mov
imul
add
dec
cmp
nop
cwtl
int
adc
lcall
cmp
mov
ret
mov
cmp
dec
sbb
or
sti
out
xchg
int
mov
mov
rcll
xchg
push
jge
cmc
lret
xchg
push
add
iret
mov
sti
fld
test
pop
enter
mov
imul
xor
pop
lret
push
sbb
enter
xor
jb
push
test
inc
cmc
ds
cmc
sti
xchg
leave
adc
mov
jge
push
js
mov
andl
and
test
std
pushf
cmp
or
pushf
cmp
adc
int3
add
scas
shrb
out
out
sbb
in
adc
cli
cwtl
or
fldcw
mov
pushf
cs
test
or
cli
test
mov
sbbl
popf
aaa
mov
call
xor
stos
call
mov
les
mov
cmp
lods
push
mov
sbb
mov
sub
jp
movsl
mov
scas
add
sbb
xor
lcall
subb
test
dec
mov
adc
jl
aad
jp
cmp
mov
xchg
loop
in
jp
cmp
test
mov
sahf
cmc
ljmp
cwtl
fs
repnz
inc
adc
loope
dec
call
scas
dec
call
lcall
mov
pop
and
decb
cltd
pushf
movsb
dec
sbb
test
stos
jle
mov
pop
rcrb
jnp
sti
mov
mov
lods
add
pop
stc
or
jbe
sti
jmp
dec
push
or
jge
sbb
negl
mov
dec
sub
push
dec
lock
test
and
xor
xchg
jmp
lret
repnz
add
aas
cmp
jnp
sbb
jne
movsl
scas
insb
repnz
in
mov
mov
inc
cwtl
pop
push
arpl
pushfw
movsl
adc
inc
or
addr16
inc
shrl
jmp
sahf
xchg
les
add
push
xor
or
jno
enter
xor
out
insb
jae
inc
cwtl
xor
push
fists
jmp
and
cmpsl
xor
lret
mov
or
mov
sti
sbb
scas
imul
shll
cmpsl
xor
in
repnz
insl
add
adc
fsubrs
push
add
jmp
jge
inc
add
aam
jg
add
dec
jns
fs
mov
sti
ret
or
jnp
int3
adc
sti
and
cmp
fmul
adc
and
ret
int3
jle
xor
sarl
add
or
xchg
clc
xchg
xchg
loop
scas
xor
pushf
mov
rcrl
jg
add
pop
movsb
mov
jmp
lods
adc
pushw
int
fldt
push
and
cmp
sbb
bound
cld
out
daa
cwtl
in
arpl
mov
mov
call
pusha
sbb
in
sbb
mov
pop
out
in
lret
scas
data16
orb
or
mov
lock
sti
or
adc
cli
aad
outsl
push
fld
bound
sub
ds
js
shlb
leave
xor
adc
loopne
lods
mov
test
or
lods
subl
jne
jg
cli
push
call
jne
fs
or
mov
jp
movsl
cs
cld
push
push
mov
push
push
or
cwtl
sbb
add
pop
xor
push
push
fsub
rorl
mov
sbb
jl
test
pop
adc
test
andl
das
fwait
test
lret
adc
stc
fwait
sub
sub
cmpsb
pop
imul
mov
inc
dec
movsl
mov
hlt
push
loop
pop
mov
dec
jle
out
dec
xchg
add
sub
out
call
mov
fmuls
xchg
mov
mov
push
jbe
bound
pusha
inc
cmp
xchg
mov
push
or
mov
das
cld
adc
lods
mov
or
loope
mov
jne
out
fucomp
mov
enter
add
mov
movsl
inc
xchg
imul
pushf
repz
repnz
out
inc
ds
xchg
add
lock
test
out
or
adc
jl
jge
jne
mov
mov
cs
cmp
pop
insb
adc
addr16
out
cs
nop
test
jno
and
out
popf
push
dec
fcompl
in
cmp
or
shlb
scas
pushf
adc
lret
push
mov
inc
sti
xor
push
mov
clc
sub
outsl
es
cmp
out
iret
pop
lock
iret
mov
mov
mov
or
lret
xlat
data16
adcb
sub
pop
lods
out
dec
lods
jl
push
int3
mov
add
jne
sbb
inc
fs
aad
fcoml
jnp
xchg
xor
jp
in
les
sbb
stos
pushf
aam
stos
leave
xor
push
leave
or
jns
ret
insb
out
lods
int3
loopne
lret
ljmp
jp
or
xchg
repz
xchg
inc
cmc
js
enter
xor
adc
clc
movsb
ret
pop
push
movsl
jmp
sahf
jle
mov
out
cmp
int3
ret
mov
scas
lods
sbb
jle
jbe
push
inc
scas
dec
dec
iret
mov
add
add
push
shrl
test
mov
addr16
jmp
out
cmpsb
movsl
sbb
jp
in
mov
std
xchg
sbb
push
and
cmp
in
jg
lds
or
or
daa
mov
bound
add
mov
shr
add
fwait
or
jl
sub
jl
out
popa
fildll
les
out
add
push
push
in
push
ja
add
jns
aas
inc
sub
test
jg
pushf
ret
adcl
call
movsl
xchg
sti
add
sbb
loop
stos
call
ror
cmp
push
jge
icebp
add
push
popf
rorb
jg
jns
xlat
jecxz
or
sub
mov
or
mov
loope
cmp
inc
and
pop
loope
pop
or
ret
jnp
mov
scas
xchg
clc
rorb
ror
fldenv
in
fisttpl
jae
xchg
pushf
pop
out
add
das
push
mov
push
adc
jno
dec
outsl
xorl
sahf
loopne
aad
mov
or
ljmp
or
rclb
fdivl
sub
add
or
cli
fcmove
xchg
test
sbb
adc
xchg
into
popf
orl
jecxz
jmp
sub
test
mov
fadd
jle
add
out
push
jmp
adc
jp
rorl
or
loop
sub
dec
enter
aad
add
xor
and
jg
pop
push
cld
loop
push
sbb
fwait
lods
or
or
add
popf
sub
mov
repz
adc
xchg
or
xor
mov
inc
int
or
js
or
or
inc
lret
cli
dec
enter
dec
cmp
in
cli
enter
xchg
stos
pop
push
or
pop
ficomps
push
mov
popf
inc
das
ja
pop
add
dec
jne
add
mov
inc
inc
or
add
pop
loop
xchg
fwait
scas
jecxz
mov
frstor
mov
xor
or
int3
push
inc
mov
js
xchg
xor
adc
xchg
xchg
dec
xchg
cmpsb
inc
add
or
in
jg
mov
in
pop
stc
dec
push
or
sub
add
sbb
fwait
inc
adc
jns
or
adc
icebp
xchg
dec
imul
pop
push
add
decb
mov
add
pushf
fcomip
dec
and
test
popa
js
insl
and
mov
psrlq
sbb
insl
inc
popf
mov
fisubrs
xor
jo
add
addb
jg
inc
mov
pushf
movsb
movsl
call
mov
pop
fimuls
push
ret
sbb
lods
mov
cmpsb
aad
lock
loopne
cmp
ror
in
popl
pop
jnp
bound
fcmovnbe
rcl
inc
sbb
fwait
pop
data16
dec
xchg
loop
int3
sbbb
dec
dec
xchg
and
daa
lcall
push
sbb
sub
xor
inc
jbe
int
xchg
or
mov
loope
add
cmp
in
lods
xchg
cld
lret
in
and
or
sub
pop
mov
ret
ret
push
cmp
sub
xor
out
adcb
cmp
add
jl
jg
sbb
pop
call
cmpsb
imul
sbbb
cmp
mov
movsl
call
adc
pop
movsb
popa
fwait
imul
fsubl
add
mov
adc
xor
mov
or
jbe
xor
dec
jge
stos
pop
enter
mov
inc
lods
dec
xchg
sbb
mov
arpl
scas
out
push
inc
pop
enter
lahf
pop
jne
sbb
enter
mov
loope
pop
and
xor
mov
pop
and
add
in
xor
sub
sbb
in
mov
call
dec
pop
out
adc
lock
nop
scas
sbb
icebp
rcrb
int
cwtl
adc
pop
jle
jbe
loop
push
sbb
and
cltd
and
add
mov
ret
imul
lcall
xor
sub
push
xchg
jnp
psubusw
outsl
mov
sbb
pop
sbb
lock
push
mov
jno
adc
mov
ret
sbb
sbb
sbb
mov
mov
leave
pusha
lret
ja
push
cmp
loope
sub
test
enter
jge
loope
fwait
and
icebp
mov
divl
mov
jnp
sub
mov
add
or
out
testl
inc
and
pop
add
add
ret
lods
xchg
rolb
enter
pop
jg
cs
jp
inc
lods
imull
xor
test
sti
loop
adc
jns
dec
jecxz
and
in
adc
cwtl
outsl
lds
or
mov
adc
fs
jb
cld
repz
mov
dec
jle
push
add
jbe
out
cld
push
aad
mov
stos
popa
and
lea
inc
mov
adc
ss
ret
xlat
stos
xor
or
repz
mov
test
or
or
flds
push
jmp
jb
mov
mov
or
imul
outsl
mov
sti
nop
in
in
adc
sbb
or
loopne
les
jno
call
add
cs
dec
sbb
mov
int3
push
subb
or
call
test
sbb
test
adc
int3
xor
jp
mov
pushf
lods
push
sahf
jecxz
push
add
jb
cmpsb
in
insb
in
jg
imul
adc
test
shl
add
sub
adc
add
or
dec
scas
sub
or
insb
xchg
call
test
call
jg
or
sub
fcmove
les
mov
movsl
pop
popa
into
cmp
incl
dec
jns
jmp
idivl
ret
mov
cli
cmp
scas
sub
sub
sbb
mov
jo
sub
cmpsb
stc
adc
dec
repnz
leave
testl
or
ljmp
mov
call
push
dec
add
ljmp
adc
or
mov
loop
inc
mov
in
sub
add
lret
add
or
xchg
stos
push
mov
or
fnstcw
jo
into
adc
xchg
mov
movsb
pop
ret
jmp
test
andl
test
pop
xchg
loop
fsubrl
cmpsb
pusha
mov
inc
adc
dec
jns
jmp
jo
mov
jno
xchg
les
xlat
xchg
pusha
mov
hlt
mov
mov
mov
add
repnz
mov
sahf
ljmp
cld
xchg
das
rcl
xchg
pop
enter
xchg
mov
push
pop
es
fldpi
std
pop
and
pop
test
popa
out
inc
lret
sub
inc
inc
mov
test
push
jo
lret
xchg
mov
or
adc
cld
mov
cmpl
jnp
cmpsl
mov
dec
or
push
lret
scas
in
outsl
xor
imul
ret
incl
jecxz
repz
sub
in
jg
lret
xor
jmp
cld
xor
dec
jmp
mov
sub
add
add
mov
mov
xor
adc
out
ja
cmp
or
insl
leave
jne
lea
les
jg
push
rorb
xchg
imul
sub
add
sbb
pand
or
xchg
sub
sub
out
int3
dec
outsb
les
mov
loopne
pop
dec
cmp
scas
push
mov
in
repz
mov
sub
add
sbb
push
cwtl
or
dec
xchg
push
imull
mull
loop
add
cmpsb
add
xchg
mov
test
push
push
xchg
dec
mov
jno
cmp
and
imul
lods
lea
fildll
push
js
push
fisubrs
inc
aad
and
jnp
mov
inc
inc
add
adcb
lods
fidivl
add
pop
cmp
dec
add
cs
add
jnp
fwait
movsb
jne
add
jmp
xchg
fnstcw
jl
and
popa
dec
sbb
or
adc
mov
push
enter
popa
jmp
adc
insl
sub
stos
push
daa
enter
sbb
lea
sbb
data16
add
ret
gs
cli
lock
add
adc
data16
mov
pop
push
sub
jle
dec
mov
test
jmp
adc
mov
ficomps
or
popf
pop
stos
addr16
xlat
pusha
xlat
sbb
inc
jb
xchg
pushf
xor
jnp
inc
jae
icebp
sbb
jb
mov
sub
test
in
movsl
xor
and
xchg
enter
cli
outsl
and
inc
jp
mov
pop
sub
inc
ljmp
mov
sub
lcall
inc
loope
xor
add
sub
popa
stos
cmpsl
loop
ljmp
cmc
or
movsl
mov
outsb
dec
and
jns
lret
jae
js
push
sbb
pop
rclb
pop
mov
sti
out
xchg
or
aas
pop
les
sbb
ljmp
cmp
push
jge
pop
xchg
jl
or
imul
inc
adc
sub
and
lret
subl
jb
cld
pop
imul
lahf
or
xchg
xchg
paddusw
scas
outsl
insl
push
in
sub
push
add
cmp
fsubl
mov
test
add
lahf
dec
adc
pop
pop
jp
inc
inc
test
xor
test
and
lea
dec
sub
ret
jmp
push
sahf
aad
mov
stc
add
sbb
cwtl
and
cli
mov
testl
mov
fldcw
adc
iret
dec
pusha
jmp
packssdw
lret
and
cli
mov
leave
dec
enter
jle
jnp
mov
mov
mov
scas
or
enter
divb
sti
xchg
lret
adc
inc
insl
jmp
negl
adc
mov
mov
adc
sbb
insb
stos
inc
add
stc
test
jb
lahf
popa
dec
mov
add
lret
sbb
popf
or
mov
lock
sahf
and
inc
cmpb
add
add
xchg
xchg
leave
push
mov
jne
out
add
sbb
clc
and
pusha
jg
jb
and
test
push
dec
sbb
xchg
cmpsb
js
cmp
lret
or
and
pop
cli
pusha
rcrb
adc
pop
sbb
imul
mov
test
scas
lret
add
pop
and
clc
repnz
dec
sbb
sahf
movsb
xchg
fcoms
ljmp
out
cmp
jmp
lret
pop
add
cli
push
enter
lea
cli
mov
mov
adc
jo
int
add
lret
mov
icebp
xor
mov
ret
das
icebp
inc
mov
aad
mov
cmpsb
add
mov
push
pop
adc
cmp
sbb
cmp
mov
or
xchg
sbb
adc
in
aaa
bound
and
or
in
shl
mov
stos
enter
cmpb
lret
ds
and
int
add
arpl
stc
jle
icebp
hlt
les
daa
stos
add
jmp
dec
xlat
mov
inc
insb
jns
sub
call
cmp
jo
sbb
xchg
orb
sbb
and
sub
jne
in
add
loopne
sti
jge
adc
sbb
mov
xor
pop
pop
aam
mov
jne
lret
adc
xlat
push
jecxz
cmp
sbb
mov
ljmp
outsb
les
jp
dec
call
push
push
inc
adc
test
xchg
jmp
test
pop
stos
inc
sub
fstl
call
jp
jno
icebp
xchg
icebp
cmp
stos
pop
cmp
adc
xlat
dec
sbb
pop
sahf
jns
out
pop
movsb
inc
sahf
push
add
ficoml
cmpsl
push
mov
int
pop
data16
fucomi
movsb
stos
call
loope
mov
add
sbb
xchg
cld
xchg
xchg
cmp
push
pushf
jne
jbe
pop
or
fidivl
enter
add
mov
jl
and
or
and
mov
jg
jp
dec
xchg
sbb
mov
call
xlat
pushl
lret
dec
sub
dec
cmpsl
mov
addr16
or
imul
or
cmp
jne
negl
adc
mov
cmp
sbb
call
decb
push
insb
adc
jns
dec
insb
xor
ljmp
jbe
or
out
lret
jns
scas
xchg
cmc
idivb
jb
or
adc
adc
orl
leave
cli
sub
adc
movsb
jb,pn
sbb
inc
and
fwait
lret
xlat
stc
ficompl
sahf
dec
adc
pop
jae
sub
add
xchg
push
rorb
add
lret
xchg
pushl
int
rcrb
lret
sub
mov
loop
add
je
mov
in
imul
loopne
add
leave
jge
push
daa
mov
mov
daa
pop
shl
in
outsl
aam
insl
pusha
jle
mov
sti
movsl
call
pop
out
pop
xchg
imul
js
push
adc
orb
mov
sbb
fistl
sbb
rcll
or
pop
adc
adcb
xchg
mov
mov
sub
sub
mov
mov
or
cmc
movsl
push
mov
jno
or
xchg
mov
dec
stos
jb
xor
mov
cmp
and
xor
dec
outsl
sub
lods
lahf
cli
or
movsb
imul
xchg
js
cmpsl
movsl
outsb
jg
add
sahf
lret
aam
cmp
orl
lret
xlat
add
das
mov
mov
sub
stc
cmp
dec
mov
sbb
or
push
out
jl
or
fldl2t
sbb
sub
mov
mov
movsl
stos
fdivrp
jne
cmp
or
adc
shll
cmpsb
mov
jmp
xchg
mov
sbb
jle
mov
aam
jl
inc
adc
xor
pop
sbb
sub
sub
fisttpll
out
cmp
std
shll
in
inc
pop
testb
or
rclb
jl
pop
xor
mov
or
or
shl
add
ja
dec
mov
out
and
icebp
mov
flds
add
popf
mov
push
gs
jo
jle
mov
mov
into
insb
cmpsl
fstl
scas
cwtl
out
push
sbb
adc
sbb
pop
sti
loope
std
ret
jp
jmp
imul
movsl
jnp
jecxz
xor
ljmp
push
lock
mov
mov
std
ret
mov
adc
sahf
idivb
mov
adc
xlat
lods
mov
or
xchg
mov
pop
and
jecxz
and
jmp
adc
mov
sbb
sub
add
sbb
cltd
jne
or
inc
loop
dec
cmpsb
repnz
cli
add
ficompl
fdivs
jl
les
les
or
sub
add
das
mov
adc
lods
cltd
inc
mov
rcll
movsl
xchg
sbb
adc
add
ret
mov
ret
sti
xchg
hlt
addr16
sahf
outsb
cmp
call
adc
aas
mov
jnp
mov
sbb
sub
je
or
add
jmp
lods
pop
imul
icebp
cld
aas
adc
imul
int
jle
add
mov
std
mov
insb
or
fwait
add
mov
lods
out
pushf
sbb
cmpsb
sar
jg
int3
add
xchg
mov
sbb
or
and
pushf
aad
test
adc
adcl
mov
sub
stc
push
jle
mov
addr16
cwtl
dec
fwait
int
mov
push
in
push
mov
cmp
jo
push
lock
or
sahf
dec
movsb
sbb
bound
mov
in
push
cwtl
lds
mov
daa
ffree
xor
dec
hlt
in
int3
aas
push
and
loop
cwtl
xchg
and
insl
jp
mov
or
jns
pop
add
call
into
mov
jge
mov
add
adc
cli
or
xor
xor
enter
adc
fs
lret
sub
mov
mov
lret
cmp
lret
push
std
jecxz
pushf
cld
push
mov
clc
inc
or
ja
push
ja
dec
fbstp
adc
and
jl
and
ss
sbb
cli
lret
cmpsl
lea
mov
and
rcrb
mov
call
pushf
jmp
jg
stc
pushf
and
dec
xor
dec
mov
or
mov
mov
gs
sbb
and
adc
pop
and
loope
adc
pop
push
adc
sub
pop
xchg
mov
dec
mov
scas
mov
pushf
xchg
cmp
cmpb
xchg
sbb
mov
addb
mov
push
ja
divl
jle
ljmp
and
fs
and
lret
inc
bnd
pop
loop
xchg
and
mov
andb
int
inc
jmp
subl
mov
xor
xchg
rorb
mov
and
clc
fsubs
sbb
pop
mov
jg
adc
jbe
sbb
xor
and
shr
mov
pop
cmc
aam
mov
mov
lods
sbb
xor
ret
push
int
mov
xlat
sub
cmp
jmp
mov
push
cmc
sahf
pop
inc
lcall
fstps
imul
sahf
mov
push
push
push
dec
or
add
xor
les
or
mov
xchg
pusha
cmp
test
out
cltd
ficoml
add
lahf
jle
repnz
cltd
xchg
inc
inc
push
lods
jno
cltd
outsb
rclb
enter
xchg
push
out
loopne
xchg
les
or
lods
iret
mov
cld
imul
out
test
pop
lret
mov
imul
adc
lahf
add
xchg
jnp
lds
ljmp
mov
repnz
popf
ret
sbb
loop
sti
popa
add
jbe
xchg
ljmp
test
xor
cli
mov
xchg
hlt
idivl
bound
lahf
mov
fwait
ret
orb
sti
pop
cld
cld
out
loope
enter
add
or
out
movsb
sarl
sub
xor
mov
das
or
mov
sbb
punpcklwd
repnz
pop
push
pop
mov
mov
mov
pop
jecxz
lahf
iret
xchg
dec
or
jge
or
inc
xor
cs
mov
leave
scas
adc
add
push
fstps
mov
or
das
and
adc
lret
sbb
insb
sbb
add
push
mov
iret
lret
mov
mov
xlat
shrb
nop
sbb
dec
popa
xor
cmp
in
sbb
mov
or
leave
iret
and
ret
dec
mov
ljmp
popf
out
jb
fwait
add
add
loop
pusha
pushf
xchg
add
jge
testl
fildl
ret
les
xchg
pop
push
mov
adc
or
insb
mov
dec
stos
sub
sub
inc
cld
dec
sub
clc
in
fisubrs
test
stos
or
icebp
mov
out
cmp
lret
test
dec
rorb
fldenv
dec
sbb
pop
sbb
push
sub
out
cmp
lods
push
std
dec
imul
rcrb
mov
test
jle
pushf
fidivs
daa
jae
pop
xchg
aaa
test
and
mov
les
outsb
xor
pop
and
stos
dec
pop
jle
xor
inc
and
pop
shl
cs
insl
lods
jp
xor
or
mov
or
or
loop
jbe
push
lret
cmpsb
mov
daa
xlat
xchg
push
xchg
into
repz
inc
or
push
outsb
mov
jle
int
adc
lret
mov
jne
push
mov
adc
scas
loopne
jbe
mov
or
in
add
movsl
scas
mov
jo
pop
stos
push
and
jp
mov
fdivp
and
adc
jl
movsl
addb
cvttps2pi
rcl
int3
xchg
or
sub
ljmp
fimull
inc
test
std
dec
jle
jne
adc
lret
out
testb
sahf
dec
sqrtps
mov
das
mov
mov
mov
push
cmp
movsb
and
sub
bound
call
bound
dec
sbbb
xor
push
stos
jle
cmp
in
xchg
mov
sahf
aaa
adc
xchg
daa
popf
pop
daa
push
ret
movsb
scas
ja
aas
cld
fwait
adc
bound
ret
int
lock
shl
test
add
xor
mov
lds
rol
aaa
sub
repz
lcall
fs
inc
inc
jae
insb
sub
into
push
xchg
pop
pop
mov
jb
xlat
sbb
sub
ret
inc
mov
cmp
xchg
sub
pushf
stc
outsl
dec
or
or
push
xchg
rol
mov
aas
jecxz
lahf
stos
adc
ss
jbe
flds
in
icebp
dec
inc
repnz
incb
mov
cmpsl
mov
jne
insl
orb
pushf
shl
iret
adc
inc
lock
and
ret
test
cli
mov
cwtl
divb
das
loopne
adc
mov
in
dec
lock
sbb
xchg
mov
xchg
subl
inc
adc
insb
add
or
int
dec
jle
xchg
les
out
jno
lea
dec
outsb
cld
ljmp
mov
iret
jns
lret
fistps
lock
insb
nop
imul
cmc
ljmp
pop
mov
adc
mov
sub
jae
lds
sub
fwait
or
testl
ja
jle
inc
xchg
lods
mov
dec
jl
push
adcb
pop
lret
test
adc
mov
pop
pop
filds
sbb
dec
xlat
mov
lock
jb
test
jl
mov
mov
dec
sub
int3
jge
mov
mov
popf
mov
scas
sub
xor
pushf
mov
inc
xchg
pop
cmpsb
push
adcb
push
or
mov
out
or
daa
scas
inc
mov
stos
movsl
seto
fwait
xlat
fimuls
add
sahf
jge
ljmp
mov
or
push
and
mov
add
lret
cmp
rcll
sti
or
or
mov
inc
jbe
test
and
or
and
inc
xor
sbb
std
sbb
sbb
xchg
ss
xor
nop
mov
xchg
jge
ret
pop
adc
xchg
push
xor
sub
inc
cmp
mov
in
lret
pop
jns
insl
ja
popa
inc
jb
cmp
jo
mov
dec
push
inc
test
mov
mov
add
or
shlb
push
repnz
xchg
mov
push
mov
add
mov
adcb
jno
fwait
sub
test
addr16
or
dec
aad
xor
ss
pusha
xorb
push
lahf
imul
add
in
pop
sbb
push
push
imul
movsl
cs
sub
mov
inc
mov
outsb
add
shrb
push
and
push
lret
inc
in
out
ror
and
jecxz,pn
adc
xlat
mov
cli
icebp
mov
ja
pop
dec
and
js
cmp
sbb
test
nop
sub
push
mov
nop
sbb
push
fldcw
bound
lret
cmpsb
jbe
jge
sahf
lock
lock
sbb
adc
lahf
out
mov
loop
cwtl
sbb
imul
fiaddl
mov
or
cli
or
and
cltd
sbb
or
aad
jl
cmp
sub
aad
popa
adc
add
sbb
push
jnp
sub
in
pop
or
mov
jge
ret
add
test
and
or
and
shr
lret
inc
or
clc
cmp
sbb
mov
fwait
push
xor
sbb
test
inc
cmp
out
jne
jg
aaa
xorb
cltd
xchg
adc
repz
and
xchg
je
push
ja
cmp
scas
push
add
lea
push
jnp
mov
inc
inc
movsb
cld
cs
iret
out
addr16
es
sub
stos
sub
mov
popf
and
pop
push
lret
out
mov
xchg
bound
in
xchg
mov
mov
or
dec
pushf
push
mov
lret
inc
cwtl
cltd
mov
dec
imul
inc
nop
call
leave
inc
std
lods
out
mov
ja
add
pop
stos
popa
mov
adc
pop
rcrb
push
inc
stc
test
fs
in
dec
in
cmpsl
push
negb
cmc
pop
pop
les
inc
sub
sarb
jg
jge
jmp
into
lret
inc
repz
xlat
dec
pop
ljmp
xor
inc
sbb
pusha
fstpl
in
inc
fsubrl
push
fs
fwait
test
xor
addr16
pop
icebp
jmp
cmp
inc
popa
rcl
fs
cwtl
lret
outsb
pop
stos
xchg
shrb
push
or
add
fldenv
ja
dec
or
test
xchg
in
mov
jmp
faddl
xlat
ret
std
xorl
pushf
xchg
in
fs
sbb
movsl
je
add
xchg
out
mov
cmp
ss
or
sti
pop
push
cmc
aaa
je
aam
sbb
add
dec
les
or
inc
xchg
jge
mov
lret
jbe
sbb
and
pop
sarl
mov
or
xchg
and
jl
inc
cmpb
orl
mov
popa
or
jnp
sub
ja
aad
cli
aas
fiadds
out
aaa
bound
fdivrl
or
mov
lock
sarb
test
sub
pop
jne
mov
stos
sahf
popf
aam
push
outsl
out
stos
mov
mov
jge
push
insb
and
movsb
mov
cmp
mov
jb
cmpl
test
or
aas
push
mov
gs
fmuls
add
sti
movsl
lods
add
enter
mov
sbb
in
nop
sahf
insb
adc
dec
mov
jne
pop
mov
sbb
mov
xor
daa
xor
dec
sti
cmp
push
cs
sub
xchg
mov
xor
xchg
and
mov
in
aaa
ret
jne
mov
adc
pop
mov
pop
xor
sbb
ljmp
test
xor
test
add
adc
sbb
xor
orb
xlat
aad
sub
call
inc
rolb
popl
push
sub
ss
pop
les
icebp
stc
mov
pop
lahf
jnp
imul
lcall
jle
pop
ja
mov
sbb
pop
hlt
es
lods
mov
xlat
mov
fdivrl
cmp
mov
lea
cmp
push
js
mov
and
or
mov
cmp
aam
cmp
sub
mov
or
push
addb
testl
loop
std
mov
ljmp
loop
stos
add
or
mov
orb
or
rcrl
cmc
inc
mov
outsb
lds
mov
xchg
sub
mov
dec
sti
addb
testl
sahf
pop
inc
popa
outsb
in
nop
mov
dec
loop
sti
and
scas
repz
scas
loopne
xor
mov
or
mov
adc
xor
push
scas
sahf
pop
jnp
add
popa
mov
mov
cmpb
test
push
add
hlt
dec
notb
inc
sti
inc
or
push
stc
lods
xchg
jle
sub
stc
xchg
mov
pop
cmp
jmp
lds
xor
mov
sub
lret
call
xchg
mov
sub
mov
mov
fiadds
sahf
sub
loop
or
enter
outsb
test
bnd
pop
insb
out
repnz
cmpsl
adc
jne
nop
pushf
bound
mov
mov
insl
stos
lret
xchg
pop
rorl
inc
adc
scas
sbb
or
xchg
fwait
push
pop
mov
negl
dec
sub
dec
ffreep
adc
je
mov
mov
sbb
mov
iret
test
les
sbb
xor
aam
jle
jno
push
mov
sbb
popa
ret
and
pushf
insl
mov
jnp
outsl
sub
and
cmp
sbb
sbb
arpl
xor
movsb
mov
lds
addb
negl
js
jns
insb
pop
or
aad
stos
addb
cwtl
sbb
enter
or
push
mov
xchg
dec
repz
pop
bound
lret
cli
fcomi
int3
cmpsl
pop
or
pop
dec
mov
sub
add
push
adc
jge
add
adc
lret
outsl
sbb
movl
mov
arpl
jl
add
mov
leave
ljmp
in
xchg
out
jecxz
in
mov
adc
add
clc
pusha
xchg
pusha
sbb
jmp
jl
ret
mov
loop
sbb
enter
in
mov
movsb
add
mov
inc
mov
cmp
je
clc
mov
pop
mov
jl
arpl
xchg
mov
loop
fwait
mov
popf
jo
adc
or
test
jp
jne
dec
mov
jp
mov
or
clc
jmp
nop
jnp
in
jmp
sbb
lret
add
call
cli
or
stos
mov
ret
or
xchg
mov
ret
mov
out
int3
jmp
es
sub
sub
aad
lods
sub
mov
and
popl
sbb
push
out
insl
bound
jmp
loope
sub
jg
fwait
loop
mov
lods
mov
mov
mov
sub
rol
icebp
punpcklwd
inc
inc
cmp
enter
fidivrl
rorl
push
pop
add
movb
xchg
int
hlt
pushf
sbb
insb
xor
stos
mov
das
roll
inc
rorl
fimull
int3
xor
sub
pop
stos
in
lret
cmpsb
inc
dec
adc
mov
or
and
mov
shlb
leave
push
mov
mov
fmuls
and
mul
add
jo
das
mov
sub
dec
out
cmp
test
enter
das
mov
out
loop
jl
decl
jl
add
enter
shlb
adc
int
sbb
fiaddl
sbb
pop
popf
insb
aam
in
test
out
pop
dec
aaa
repz
mov
mov
hlt
or
cmp
leave
test
scas
inc
inc
mov
or
flds
mov
insl
out
mov
aaa
in
fmuls
mov
sbb
lods
adc
int3
mov
std
mov
jp
out
mov
clc
push
movsl
mov
ret
fistps
mov
icebp
inc
mov
mov
out
jecxz
fdivrs
jnp
jp
mov
hlt
xor
xchg
pop
jns
pop
clc
movsl
dec
or
mov
cmp
cld
or
xchg
arpl
sbb
jmp
leave
subl
push
inc
fstps
hlt
out
filds
add
xchg
push
adc
out
inc
das
cld
xor
jecxz
sbb
pushf
cmp
cs
mov
jmp
fucomp
stos
push
into
repz
paddsw
repz
cmp
ret
cmpsl
cmpsb
ret
enter
mov
out
mov
inc
push
mov
pop
leave
cmpb
jmp
add
enter
stos
inc
ret
sbb
push
movsb
and
add
xchg
andb
test
push
cltd
jp
inc
adc
fwait
cmp
or
subl
push
push
lea
loop
push
add
rorb
mov
lds
adc
fwait
inc
mov
pop
dec
push
lods
mov
in
xchg
and
test
fidivs
jno
add
cmp
jnp
int3
out
in
push
pop
aaa
jl
lods
sbb
sahf
pop
sub
xchg
ja
add
pop
push
sub
pop
mov
jmp
push
sub
popa
push
nop
sub
mov
fstps
ret
test
ret
mov
push
into
sti
push
ljmp
loop
adc
xchg
adc
jle
dec
xchg
call
dec
ds
lcall
cmp
mov
inc
mov
xchg
cld
xchg
mov
je
jecxz
push
lret
sub
outsb
jecxz
idivl
scas
or
inc
lods
dec
jecxz
xchg
es
push
pop
lahf
gs
dec
sahf
ret
stos
dec
in
fs
sbb
or
mov
int
es
int3
xchg
pop
repnz
iret
ret
sub
andb
sti
lods
pop
ds
aad
cmc
fcmove
cmc
xor
sub
xchg
insb
sti
aam
xlat
and
sub
or
adc
int
push
lods
add
sti
push
adc
ljmp
shlb
cmc
loop
sbb
xchg
adc
sub
mov
es
shlb
test
jmp
or
jns
daa
push
out
mov
imulb
or
mov
stc
mov
in
add
sub
lret
pushf
stc
mov
jb
add
mov
and
shll
outsb
inc
call
adc
stos
push
adcb
sub
and
sti
and
lock
sub
pop
in
les
fwait
in
mov
fsub
aaa
xchg
mov
jecxz
jo
lods
scas
lret
add
add
push
test
out
mov
cli
mov
push
out
or
xchg
mov
mov
push
rolb
cwtl
add
mov
js
fisttpll
cmp
mov
add
jne
fmull
test
rcr
xlat
push
mov
xchg
xlat
leave
sub
push
sbb
test
mov
xchg
rorl
ja
out
add
push
mov
stos
fcom
jle
ficompl
cwtl
test
test
push
mov
mov
jle
and
mov
in
ljmp
push
add
cmp
sub
jo
jmp
lcall
enter
jle
ss
imull
push
adc
inc
int
xor
fmuls
mov
shl
movsl
push
fs
push
mov
mov
adc
jmp
add
dec
pop
addr16
mov
jne
cmp
adc
adc
xchg
popf
js
jae
cmp
out
add
lock
ss
jg
inc
pushf
or
fucomi
mov
lret
inc
insl
out
outsb
in
inc
push
in
jno
mov
out
rorb
and
push
cmp
adc
cs
out
fistpll
and
sbb
jp
or
xor
adc
ja
pop
mov
rorb
clc
adc
push
sbb
xchg
mov
jns
faddl
xchg
icebp
fcoml
sub
ret
add
cmp
inc
push
sbb
sub
lea
sub
movb
test
subb
call
push
sti
ljmp
cmp
call
pop
ja
and
shlb
fs
mov
gs
sbb
lods
sbb
lret
fstl
shrl
ret
xor
add
lret
int3
push
adc
inc
daa
xchg
adc
fsubrl
cld
mov
mov
daa
xchg
sti
xchg
mov
or
mov
cmp
int3
mov
dec
ds
mov
cmpsl
cli
andl
or
jae
adc
fcmovb
dec
lret
push
mov
mov
stos
and
jecxz
or
mov
sti
popf
add
pop
dec
inc
push
fld
cmp
xor
fldenv
arpl
test
insl
int3
fsubl
and
push
xor
rdpmc
adc
loop
xor
pop
xchg
outsb
xchg
fucomp
icebp
shll
aas
cmpsl
dec
cld
dec
sbb
ljmp
insb
adc
lahf
xchg
in
pop
test
jbe
dec
in
test
mov
addl
mov
adc
hlt
sti
xorb
icebp
fsts
inc
dec
jae
cmpsl
iret
gs
sti
xor
mov
mov
push
add
mov
pop
mov
ret
cli
roll
js
ds
lods
xor
dec
push
cmp
mulb
pop
sahf
stos
inc
push
sub
sarl
rorb
mov
mov
lret
sub
inc
add
je
add
xchg
sbb
mov
bound
mov
adc
xor
loopne
adc
loop
mov
mov
sbb
clc
adc
mov
add
out
sbb
sbb
popa
add
sub
repnz
or
ds
jmp
enter
push
dec
cmp
repz
sbb
sub
sbb
mov
pop
sbb
inc
clc
mov
outsl
scas
inc
adc
int3
cmp
inc
ret
gs
add
repz
int
sarb
rol
fistpl
stos
xor
add
dec
addr16
fsubr
add
fmul
add
loop
lcall
inc
das
data16
mov
das
or
cmp
jb
int3
loope
inc
in
mov
bound
mov
adc
leave
popa
mov
call
and
or
add
or
sub
cmp
sub
and
or
arpl
out
dec
daa
push
xchg
dec
cwtl
xchg
in
dec
xor
inc
mov
mov
aad
sbb
dec
scas
or
sbb
dec
lret
sub
enter
mov
mov
add
xor
pop
mov
sarb
jmp
and
sub
cld
hlt
pop
test
int
cmp
adc
inc
mov
lods
xchg
in
lock
arpl
or
push
or
add
and
cmp
mov
jns
adc
mov
mov
pop
jge
sub
pop
or
or
mov
push
daa
push
enter
add
adc
adc
jnp
pop
or
mov
xor
push
insl
roll
jbe
jl
or
add
aad
and
adc
repz
popl
pop
inc
arpl
out
dec
xor
xchg
imul
sbbl
cmp
cvtps2pi
scas
xor
mov
mov
orl
mov
add
mov
loop
bound
sti
loop
push
insl
lds
test
adc
mov
out
repnz
xchg
es
and
pop
and
leave
hlt
rorb
aad
xor
adc
push
adc
add
aas
leave
ljmp
out
fs
cmp
inc
lock
add
and
fisttpll
popf
outsb
inc
cmpsl
jle
jmp
add
pop
push
mov
popa
jl
insb
out
xadd
loopne
or
jge
jge
in
ds
jmp
sahf
inc
icebp
xlat
stos
add
or
and
mov
cmp
or
jmp
call
add
pop
arpl
jge
and
xchg
out
pop
jns
push
cld
or
or
pop
jle
gs
xchg
scas
mov
call
mov
in
xchg
mov
fs
xchg
scas
dec
mov
adc
xchg
mov
in
sbb
sarb
sbb
fistpl
jmp
lods
pop
push
dec
cld
fnstcw
movsl
lret
test
mov
xchg
jmp
mov
or
cld
adc
mov
je
aam
stos
adc
adc
push
mov
or
sbb
jns
mov
into
mov
jns
xchg
dec
pushf
sahf
mov
or
stos
cmp
xchg
mov
fwait
pop
cwtl
jo
cli
add
or
mov
or
shrb
xor
adc
jae
or
icebp
and
xchg
sti
mov
sahf
cmpsb
js
add
imul
pop
imul
inc
cmpsl
mov
mov
loop
inc
stc
or
mov
notl
and
mov
jo
add
mov
clc
xchg
add
pop
fdivl
negl
add
or
pop
cwtl
pop
or
ljmp
lock
jnp
shl
mov
pop
out
mov
imul
clc
sbb
adc
mov
jmp
lea
roll
pop
rcll
fbld
cwtl
jge
jne
push
add
adc
in
mov
in
xor
sti
clc
push
ret
arpl
popl
and
ret
scas
cwtl
fbld
insb
out
xchg
jp
push
or
imul
jno
sbb
push
sbb
mov
xor
rcrb
lret
stos
mov
add
fdivp
push
in
pop
fwait
jge
jge
stos
in
les
mov
mov
xor
dec
stc
cmpsl
mov
sbb
sub
inc
iret
sub
test
movsb
push
dec
movsl
xor
mov
push
cmpsb
dec
and
cs
stos
xchg
add
leave
push
and
and
mulb
jae
inc
inc
lret
mov
adc
scas
ret
aad
pop
lret
jle
mov
and
stos
int3
jb
inc
movsb
clc
repz
add
icebp
scas
jecxz
sbb
jmp
pop
nop
inc
cld
out
loop
mov
lcall
outsb
gs
test
add
lahf
es
out
inc
mov
loop
fistpll
imul
jmp
fbstp
dec
cld
push
push
push
or
dec
call
cmp
sbb
es
jle
sub
jne
scas
xchg
sti
aas
xor
jge
jge
les
or
sbbb
inc
pop
sub
in
scas
lret
cmp
jge
jns
xchg
mov
jmp
lret
mov
ljmp
sti
add
pop
test
sub
push
imulb
sub
rcr
sub
out
cmpsl
scas
outsl
bound
sub
loop
dec
cli
cmp
sub
ds
out
shr
ljmp
add
adc
add
mov
lods
mov
push
sbb
lret
imul
adc
ja
sub
mov
iret
stc
or
fiadds
ret
iret
push
movsl
in
jecxz
xchg
add
testb
sub
dec
or
push
or
lret
inc
add
and
adc
adc
adc
out
punpckhwd
add
and
adc
adc
lret
sub
adc
xchg
sub
popa
lea
out
adc
inc
xor
sbb
push
into
movsl
dec
stc
cmpsb
aam
and
push
dec
subl
out
push
icebp
push
add
jl
cwtl
lock
xchg
jle
scas
lods
and
lret
push
addr16
ret
jne
jno
or
inc
icebp
and
or
test
fcomps
adc
dec
or
dec
enter
pop
bound
fs
mov
pop
mov
mov
sbb
sbb
adc
pop
sbb
xchg
mov
loopne
icebp
in
cli
cltd
adc
push
repz
in
push
pop
je
and
adc
subl
jne
mov
mov
xchg
mov
ljmp
adc
aas
jb
cld
ss
aaa
repz
or
or
jg
mov
enter
add
xor
testl
jl
jl
mov
inc
in
arpl
movsl
in
or
sbb
xorl
sbb
fsubr
add
mov
xchg
mov
rcll
push
arpl
je
xchg
mov
sbb
mov
int3
pop
sti
jnp
pusha
movsl
fmuls
cli
xchg
push
addr16
and
add
jb
stos
xor
ljmp
adc
int3
sub
adc
jmp
push
icebp
mov
fwait
js
sub
loop
rorb
jb
stos
cmp
add
xor
jge
cmpsl
sub
add
and
mov
push
or
loope
adc
ret
pop
mov
pop
add
idiv
test
dec
les
leave
sbb
mov
jecxz
shll
aas
jnp
test
dec
aad
and
fisttps
vminps
int
push
sub
lahf
add
and
into
mov
test
inc
addr16
loop
push
mov
mov
stc
mov
inc
jl
sahf
mov
cmp
pop
cld
ds
loope
or
loop,pt
dec
movsl
insb
sbb
jns
scas
incl
and
dec
inc
into
loope
mov
out
push
add
xor
nop
test
adc
cmpsb
dec
mov
inc
sbb
cmp
cli
lock
lods
movb
mov
enter
sub
adc
mov
pushf
repz
inc
sbbl
fsubrp
lret
in
hlt
aam
xor
cld
xor
aam
adc
xor
dec
pop
add
cmpsb
sahf
or
mov
gs
or
lds
and
inc
dec
stos
stc
fsubrp
push
stos
iret
xchg
sbb
scas
push
add
mov
shlb
movb
stos
mov
sub
leave
or
cmp
aam
jle
xchg
scas
fucomip
je
push
fs
add
inc
repnz
or
pop
xchg
add
inc
add
test
aaa
rcrl
adc
dec
leave
pop
xor
sarl
push
lods
in
imul
add
mov
test
jae
icebp
mov
sub
enter
mov
and
xor
and
push
ss
inc
mov
js
mov
inc
popa
push
push
ret
sbb
aad
mov
adcl
shlb
cltd
or
jp
sub
daa
xchg
inc
push
push
sub
movsl
push
jle
rcrb
shlb
test
cmp
stos
mov
cmp
je
mov
test
out
jl
xchg
xor
mov
sahf
int
insl
cli
fadds
push
inc
scas
pusha
mov
jmp
adc
bound
test
xor
add
cmp
jnp
sarl
ja
inc
push
fisttps
adc
cmpsb
popa
rcrl
cli
das
movsl
xor
nop
sub
mov
in
push
in
push
inc
and
sbb
mov
mov
sub
arpl
add
daa
nop
hlt
popa
push
dec
xchg
stos
in
popf
jle
cmp
mov
jecxz
das
stos
add
mov
inc
inc
scas
or
cmc
clc
lods
test
ds
sbb
or
push
pop
das
push
mov
scas
add
sbb
adc
adc
inc
sbb
fisttpl
popf
jle
push
fs
cmp
add
adc
add
mov
add
or
mov
cmp
sarl
mov
lods
pop
dec
sti
in
scas
into
lock
sarl
push
push
push
adc
jmp
lock
insb
ret
outsb
sub
xchg
mov
inc
jge
jg
jecxz
fs
in
add
test
stos
test
leave
mov
lock
pop
aam
inc
push
repnz
sbb
pop
into
or
fidivrs
xchg
sti
int3
mov
mov
mov
mov
sub
sarl
push
mov
rcll
pop
ret
xor
mov
and
pop
popf
sub
pop
jge
mov
mov
cmp
xchg
sbb
add
pop
icebp
mov
movsl
xor
xor
add
cs
pop
shll
add
jge
icebp
dec
loopne
mov
inc
mov
call
xchg
cmp
cmpsb
push
add
mov
pop
cltd
dec
lea
or
and
lret
loope
leave
test
popa
lods
leave
or
testb
adc
ljmp
ret
jecxz
outsb
push
pop
cld
xchg
imul
cltd
cmp
scas
add
add
pushf
arpl
cli
push
xchg
ficompl
ds
and
jmp
sti
orb
adc
sub
inc
xchg
daa
push
cmpsl
xor
addl
daa
and
jmp
sarl
test
inc
add
jl
adc
dec
sbb
xchg
push
leave
adc
popa
ds
xchg
add
loop
clc
or
adc
test
cmpsl
push
push
sub
mov
mov
cmpsl
mov
ljmp
jnp
mov
int3
sub
pop
mov
sti
add
scas
insb
xor
les
popf
loop
and
enter
mov
cli
xlat
fiaddl
popf
cmpsl
hlt
ss
popf
ror
mov
pushl
adc
sbb
adc
mov
or
mov
add
add
inc
sti
cmpb
ret
sub
popa
jno
or
ljmp
les
dec
ljmp
and
mov
mov
mov
aad
adcb
pop
call
dec
hlt
xor
lahf
pop
or
cmp
pop
add
sbb
push
jo
sbb
ds
sahf
sub
cmpl
adc
add
push
or
push
test
mov
jns
lods
sbb
test
int3
fwait
insb
outsw
ss
dec
js
in
mov
dec
inc
push
or
dec
out
mov
sbb
inc
cmp
sbb
rcrb
cmc
nop
and
add
aam
mov
jns
aas
lea
cmp
insb
mov
xor
imul
jge
adc
lret
pop
dec
xor
fwait
addr16
cwtl
aas
push
scas
push
das
jne
movsl
popf
stos
inc
movsl
into
aam
xchg
dec
sahf
dec
test
dec
sti
cmp
push
shl
or
cmp
cltd
ds
and
les
dec
pop
inc
fmul
shlb
daa
jns
out
test
lret
or
insb
xchg
add
test
sub
cld
stos
in
push
hlt
rolb
pop
dec
ror
dec
dec
dec
jge
out
leave
test
mov
cs
nop
out
xor
ret
aam
xchg
and
xor
aaa
test
sbb
xchg
mov
xchg
xchg
add
sbbb
mov
leave
or
test
rcll
icebp
je
mov
sbb
adc
dec
cmp
add
jmp
sti
mov
add
ja
jp
js
movsb
add
fldt
dec
test
repz
dec
add
mov
mov
test
or
jmp
or
cmp
sbb
movsb
mov
subl
fildl
dec
enter
pop
inc
ret
out
inc
xlat
mov
ja
movsb
mov
test
mov
mov
xchg
lcall
test
or
push
sub
cmp
jo
or
pop
push
sbb
add
sahf
cmp
dec
stos
add
mov
cmp
clc
cs
lods
repnz
xchg
ficompl
test
mov
add
xchg
stos
push
push
call
and
insb
pushf
subl
sahf
lret
mov
xchg
mov
nop
stos
lods
mov
in
adcb
xchg
pop
les
and
adc
mov
or
sbb
mov
xchg
adc
pop
inc
lcall
in
mov
mov
fwait
aaa
outsl
shll
pop
mov
incl
mov
pushf
pop
dec
xchg
fcomi
ret
out
sahf
lods
inc
lret
or
lret
ljmp
test
jg
or
andb
inc
or
sbb
inc
cld
and
stos
and
pop
int3
push
mov
lods
movsb
push
stos
movsb
lret
enter
enter
enter
and
push
inc
add
dec
sti
leave
sbb
jl
sub
or
inc
mov
and
cmpsl
lods
addr16
xchg
into
cmp
dec
adc
shrl
dec
or
push
jne
lret
inc
pushf
in
and
repz
mov
int3
test
inc
jnp
add
or
add
scas
in
inc
int3
jnp
mov
or
or
xlat
in
aad
push
xchg
jle
mov
aam
andl
add
mov
sahf
mov
sbb
mov
bound
mov
mov
test
cmpl
js
jmp
outsb
jmp
fldenv
jp,pt
dec
orl
jg
jbe
insl
mov
fistpl
out
imul
mov
jp
lock
fs
aaa
jmp
pop
bound
mov
and
inc
rcrb
sbb
fcmovnb
cld
popl
in
call
push
mov
mov
in
or
test
cld
sub
fisubs
xchg
mov
test
push
mov
adc
insl
mov
adc
into
cwtl
shl
mov
fldcw
roll
scas
cmp
xchg
mov
cmpsb
jbe
out
and
push
ja
mov
add
popa
lret
or
sbb
add
into
xor
dec
mov
xor
add
mov
lcall
pop
aas
or
addr16
shrb
mov
aad
pop
xchg
xlat
pop
sbb
mov
test
mov
ror
jo
imul
sbb
cmp
cwtl
sahf
in
ds
mov
or
shr
jae
jae
adc
or
stc
fbstp
jne
fsubs
inc
stc
jbe
pop
or
xor
push
or
cmp
cmp
sub
popa
mov
lods
bound
jle
add
xor
dec
mov
cmp
adc
aam
jecxz
jle
pop
test
outsl
out
cmp
and
les
pop
dec
jmp
push
fistpl
pop
sbb
mov
fwait
dec
out
jmp
or
dec
arpl
pop
mov
and
xor
push
inc
cmp
fdivl
add
clc
cld
ret
cld
dec
xchg
xchg
cmp
jnp
push
loopne
scas
mov
test
pop
or
add
jecxz
adc
hlt
cmpsl
shlb
push
jg
lret
or
arpl
sub
cli
jbe
and
movsl
or
jnp
add
push
arpl
cmp
jl
xchg
sbb
stc
mov
push
int3
or
jns
and
sub
lods
mov
push
lahf
jns
mov
repnz
ret
lret
mov
aam
push
fdivrl
mov
cli
les
inc
sub
sub
mov
xchg
stc
dec
and
addl
lret
inc
pop
cltd
arpl
and
cmp
mov
jmp
adc
sahf
mov
xchg
jp
cmp
cld
mov
inc
jmp
movsb
popa
add
inc
insl
adc
xchg
outsb
add
inc
push
xor
and
insb
mov
jp
ret
fadds
xchg
scas
mov
sub
testl
dec
out
cmpsb
mov
dec
loop
ljmp
mov
scas
lock
iret
std
jmp
xchg
cs
add
sbb
jp
hlt
add
add
adc
das
mov
scas
stc
mov
mov
js
adc
adc
or
repnz
nop
pusha
and
aad
in
mov
and
sub
addb
popf
out
loopne
sbb
add
pop
adc
fucomi
inc
out
dec
or
add
mov
xchg
or
test
int
jle
in
addr16
dec
sbb
pop
fidivrs
or
inc
lods
jle
test
dec
inc
xlat
lret
mov
xchg
ds
adc
fmull
loop
dec
cli
sbbb
or
sti
hlt
hlt
sahf
fs
add
push
mov
stos
out
jnp
inc
into
imulb
mov
ret
jo
push
and
hlt
adc
mov
stos
stos
mov
js
sbb
add
mov
xchg
add
mov
inc
jns
loop
inc
add
in
addb
add
cmp
scas
add
inc
xchg
jecxz
add
xchg
idivb
cmp
pushf
fwait
icebp
jns
bswap
cmp
mov
movsl
push
lea
jne
les
push
jnp
add
dec
mov
outsb
enter
pop
xchg
leave
jl
and
lret
imul
cmp
cs
mov
scas
hlt
adcb
ret
jnp
inc
xchg
inc
push
neg
push
popa
pop
in
cmp
hlt
fs
dec
cltd
pop
mov
ficoms
mov
mov
inc
movsl
adc
pop
pushf
sub
popa
and
or
stos
inc
pop
jns
cmpl
jg
jns
xor
cmpsb
hlt
fs
stc
cmpsl
adc
ret
roll
stos
loope,pn
sbb
gs
dec
das
mov
addb
cmp
inc
push
shlb
cmpsb
mov
insl
dec
adc
jmp
lea
loope
pop
add
mov
sub
fnsave
cmp
adc
mov
mov
insl
mov
int3
dec
mov
jno
pop
jmp
jmp
lcall
add
loopne
insl
jp
sub
call
xor
fsubl
loopne
test
add
pavgw
jne
jae
xor
sbb
data16
jp
sti
adc
sbb
adc
and
aad
push
and
imul
ljmp
addl
hlt
roll
jle
mov
iret
xor
or
lods
popf
aam
test
add
sbb
lods
movsl
push
addr16
pop
cmp
and
cmp
mov
mov
push
cmpsb
jae
xchg
aam
cld
lea
fnstcw
pop
push
xchg
loop
lret
fwait
test
jp
enter
pop
adc
fdivr
lods
movd
stos
xchg
adc
adc
repz
lock
dec
mov
or
icebp
mov
add
add
or
lods
mov
enter
pop
out
mov
sbb
xchg
in
repz
hlt
mov
jl
mov
leave
rcll
jo
mov
dec
je
xlat
aaa
push
or
add
or
sbb
xor
adc
or
in
test
fwait
mov
mov
and
push
andb
stos
rolb
jnp
dec
xchg
or
mov
jmp
jmp
mov
or
add
mov
pushf
pop
add
push
or
mov
adc
mov
add
sbb
loopne
add
add
pop
ret
pop
lcall
adc
aad
cmp
lock
imul
mov
push
inc
adc
sub
sahf
or
and
cwtl
lret
sti
ret
imul
ret
ljmp
mov
inc
adc
xor
loop
sarl
add
lret
incb
add
pop
mov
scas
insl
pop
add
push
loope
xor
add
mov
inc
cmp
sysret
jge
dec
cmp
call
lahf
cld
popfw
lods
sub
or
cmpsb
dec
xor
mov
ficoms
fcmovb
nopl
cmp
sti
mov
movsl
push
lret
xchg
mov
and
mov
in
les
or
les
inc
jo
push
ds
jmp
mov
test
pop
push
cwtl
or
fdivs
push
xchg
add
adc
adc
pop
inc
insl
fldt
and
push
rolb
or
lods
icebp
in
mov
or
cs
add
sbb
add
loopne
adc
cmp
addr16
or
push
cwtl
stos
cmp
ja
lods
sbb
out
aaa
inc
add
and
mov
push
sub
and
sbb
add
pusha
cmp
rorl
cld
arpl
in
inc
sti
jp
ret
inc
fcmovnb
cmpsb
loope
sbb
add
dec
ret
stc
test
or
popf
sub
mov
fstpt
arpl
push
les
jg
mov
sbb
sub
adc
mov
inc
aam
mov
sub
add
ret
stos
add
addr16
lret
out
add
or
bound
test
in
call
and
jecxz
or
cmpl
mov
bnd
xchg
test
adc
popf
int3
lods
shlb
mov
dec
fistps
xor
out
inc
push
ja
das
adc
sbb
stos
push
adc
iret
and
and
scas
pop
xchg
lret
cmc
add
pop
dec
push
mov
repz
jle
or
xchg
gs
nop
pop
xchg
pmaxub
mov
sahf
insl
push
sub
dec
adc
in
call
pop
les
popf
into
scas
inc
cmp
sbb
mov
add
add
xor
shl
in
lods
mov
je,pt
js
aaa
popa
cmp
jp
mov
or
push
add
dec
outsb
cmpsl
call
dec
pop
in
mov
cmp
pop
outsb
rcl
jge
mov
cmp
mov
and
mov
stos
popa
xchg
fdiv
fldl
xchg
fbld
dec
mov
lods
ret
pop
movsl
push
incl
int
lcall
into
jbe
sbb
inc
or
inc
sub
mov
int3
jmp
outsb
or
fs
sbb
mov
adc
mov
icebp
cmp
push
mov
add
adc
or
lods
mov
stos
dec
push
mov
add
lods
in
mov
jle
cmc
pop
sbb
rolw
je
xchg
sub
mov
cmp
pop
or
cmp
cmpl
cmp
mov
jbe
ret
flds
imul
or
xchg
fwait
or
xchg
dec
jle
mov
pushf
test
mov
add
push
out
shlb
mov
test
arpl
nop
mov
push
scas
enter
push
mov
cli
xor
push
rorl
dec
fadds
test
or
sub
roll
insl
cmpsb
je
les
lock
int
clc
call
cmp
imul
push
pop
les
inc
data16
cmp
insb
leave
jmp
dec
mov
adc
movsl
sbb
js
inc
and
mov
hlt
shrb
cltd
add
jnp
sbb
jae
test
lret
push
sbb
or
jp
xchg
fildll
nop
add
test
repz
jmp
add
movsl
cmp
mov
fwait
sti
push
jmp
dec
sub
adc
pop
movsl
lret
lahf
repnz
ret
xlat
movsl
fdivl
scas
mov
loop
adc
or
mov
push
mov
repz
add
sahf
sahf
roll
out
jb
jno
mov
pop
stos
ja
lds
scas
mov
pop
sbb
jge
stos
fcoml
insl
stos
mov
out
pop
inc
cmp
xchg
fucomi
xor
lods
push
pop
les
add
and
pop
ljmp
mov
aam
out
ss
xchg
rorb
push
fdivs
fwait
mov
xchg
cmc
aaa
data16
lahf
push
adc
add
push
xor
adc
mov
fcmovnbe
out
mov
jmp
sbb
subl
out
push
int
pop
loope
aad
push
push
loopne
push
stos
sbb
fisubrs
ret
loopne
sarb
xchg
dec
xchg
outsb
scas
mov
cmp
leave
jl
mov
xchg
push
xor
nop
jae
push
faddl
or
add
bound
xchg
lret
nop
jmp
test
mov
enter
int3
or
sub
test
inc
js
lcall
int3
mov
mov
ds
mov
bound
adc
pop
jnp
xchg
mov
inc
sbb
fwait
test
movsl
xorl
mov
jmp
jl
dec
mov
jmp
lret
stos
adc
cmpsl
repnz
mov
inc
sub
dec
jmp
pop
ja
jbe
pop
mov
js
cmpl
mov
mov
xor
nop
xchg
ljmp
insb
std
push
mov
or
sbb
icebp
subb
mov
mov
rol
xchg
xor
cmp
and
iret
enter
rolb
sti
fwait
inc
inc
cld
dec
movsl
hlt
cmp
pop
jbe
test
rolb
push
xor
inc
or
dec
shl
lret
and
in
jg
and
in
jbe
sub
dec
int
inc
jno
xchg
or
pop
add
imul
les
movsl
pop
subb
insb
or
inc
shl
iret
rolb
sbb
mov
add
mov
add
pusha
int3
neg
into
inc
mov
pop
je
jmp
out
pop
sbb
pop
sbb
movsb
add
adc
mov
xchg
cmp
push
ja
sbb
in
cmp
sbb
xchg
and
cwtl
or
pop
xor
ljmp
adc
stos
inc
xorb
call
xor
pop
adc
mov
pop
mov
adc
inc
inc
push
in
dec
inc
test
xchg
pop
inc
or
out
movd
rorl
aam
mov
push
lret
lahf
into
sub
outsb
pop
inc
inc
sub
mov
or
cmp
cld
out
xchg
and
sbb
cltd
into
data16
push
pop
scas
adc
stos
out
cs
ja
xchg
lret
enter
iret
mov
ret
cmp
out
and
dec
jge
push
movntq
ljmp
cmpsl
out
jp
lcall
das
jl
arpl
cmpsb
push
push
jo
enter
shlb
les
sbb
repz
pushf
aam
inc
sbb
cs
test
popf
mov
xchg
addb
mov
push
orb
ss
jg
pushf
out
pop
dec
and
cmpsl
mov
cwtl
cmpsl
xchg
push
and
pop
mov
pop
inc
ret
icebp
jbe
fstl
insb
mov
add
scas
loopne
filds
and
mov
rcrl
stc
imul
xlat
std
and
inc
loopne
push
sbb
popa
add
jnp
fndisi(8087
add
sbb
or
add
test
sbb
push
lods
fwait
bound
mov
mov
leave
and
pop
inc
mov
mov
out
mov
mov
push
sub
add
jo
fsts
add
daa
adc
xor
xchg
inc
mov
jns
ret
and
test
popa
sbb
xor
sbb
addr16
mov
mov
cld
jg
pusha
xchg
sub
test
sbb
cmp
inc
ja
or
or
push
fistpll
idivl
ljmp
adc
gs
xchg
outsl
jp
pop
cmp
or
sbb
mov
jecxz
loope
push
test
lcall
iret
jns
std
divl
rorb
sbb
mov
fwait
das
adc
add
adc
in
movsl
pop
in
jbe
add
push
imul
cmp
dec
jmp
fidivrl
test
fdiv
sub
add
xor
sub
add
sti
pop
movsl
inc
sub
push
add
pop
mov
gs
loop
mov
je
xor
aam
insl
inc
add
addr16
and
cli
adc
mov
inc
subl
push
push
cmpl
arpl
dec
add
push
lds
pop
and
enter
pop
pop
or
adc
idivb
mov
adc
decl
jp
out
xor
lock
in
mov
or
adc
inc
mov
or
xchg
sub
mov
cld
push
cmp
inc
add
cwtl
lret
and
or
out
sub
bound
and
iret
jge
int3
jl
pop
addr16
pop
push
xchg
rol
iret
or
pop
jmp
and
mov
adc
jecxz
mov
ds
push
add
popf
cmpsb
mov
cmpsl
mov
in
scas
xchg
mov
cmp
dec
sahf
cmpsb
mov
push
bound
ret
subb
enter
insl
add
js
lret
mov
movsl
mov
dec
sete
sbb
jge
or
xchg
lds
xchg
mov
dec
int3
xchg
xchg
out
or
movsl
cmp
test
jmp
mov
idiv
mov
test
sbb
jno
stos
mov
dec
jmp
insl
or
adc
and
mov
add
push
lcall
aas
cmp
mov
dec
cli
sub
cltd
call
or
xchg
xor
scas
cmpb
rcrb
jbe
leave
inc
add
addb
out
push
mulb
jg
addb
pushf
cmp
xchg
stos
addb
mov
xlat
add
loop
mov
cmpsl
int
push
loopne
cltd
popa
pop
xor
sbb
std
jns
push
push
and
fidivrl
mov
out
mov
inc
lahf
dec
adc
lahf
fwait
and
adc
or
or
sub
popa
mov
ret
mov
fisubrl
stos
shl
test
add
sub
scas
ret
xor
das
lcall
andl
adc
fadds
inc
ret
sti
cmpsl
mov
int
pusha
sub
mov
sub
jl
fisttpl
daa
in
push
jle
mov
push
adc
or
push
cmp
mov
pop
pop
leave
js
push
add
pop
stos
push
movsl
mov
xor
dec
leave
xor
adc
stc
into
cmc
ja
iret
xchg
clc
sub
insl
xchg
mov
sbb
cli
push
pop
lods
ja
jb
jl
push
inc
sahf
addr16
xchg
loope
cld
aaa
xor
les
ds
imul
jl
or
mov
mov
scas
int3
sub
push
mov
add
mov
std
cld
fsub
add
add
gs
dec
aam
sbb
pop
adc
mull
icebp
pop
fildl
lcall
test
repz
sbb
int3
repnz
cmp
inc
leave
stc
xchg
add
xor
inc
mov
clc
orb
adc
mov
add
add
push
pusha
pop
and
out
iret
push
or
xlat
jg
jne
outsl
sahf
loop
ret
idivl
cmp
cmpsl
int
das
cs
addr16
push
or
xlat
or
in
push
xchg
inc
or
repnz
fidivrs
and
xchg
jbe
sub
movlps
add
sub
ret
clc
dec
test
jae
jmp
sti
add
lods
or
orl
mov
mov
adc
int
sub
mov
mov
push
call
cmp
daa
push
cmpsb
test
add
out
jns
xchg
and
addr16
repz
or
stos
mov
sbbl
subb
dec
add
rcll
pop
imul
dec
adc
clc
dec
mov
stos
push
xor
lret
pop
or
push
inc
aad
sbb
adc
jle
je
movsl
je
mov
jle
repnz
push
push
dec
lcall
lret
ljmp
cmpsl
sbb
ljmp
cmp
ret
hlt
fwait
mov
push
inc
push
adc
shll
xchg
jmp
ror
incl
aam
mov
adc
hlt
pop
jb
bound
dec
jp
add
jg
addl
shlb
stc
in
adc
in
inc
in
xor
roll
rep
dec
imul
or
mov
xchg
mov
pop
sbb
jnp
ret
sbb
xchg
dec
lds
xchg
inc
aaa
mov
mov
in
lret
push
cmp
mov
int
xchg
scas
ds
jns
jmp
sbb
fldl
ret
or
in
aas
add
or
repnz
lock
cmpsl
stos
xchg
repnz
mov
orb
ret
adc
inc
mov
add
xchg
ret
mov
cmp
loopne
or
enter
add
mov
in
pushf
out
int3
mov
inc
and
mov
sahf
sub
xchg
mov
or
pop
inc
add
push
mov
add
mov
mov
in
fmull
jp
lcall
ds
inc
lea
test
test
dec
repnz
mov
popa
mov
or
call
cmp
orl
pop
cmp
scas
cmc
out
mov
add
pop
fstpt
leave
jle
mov
xlat
les
pop
sub
cltd
adc
mov
out
mov
orb
fwait
mov
mov
mov
ret
cli
test
dec
cmp
or
and
and
pop
cwtl
movsb
inc
sbb
jle
and
ret
mov
ds
push
mov
add
sub
sarb
insb
dec
lcall
lods
lods
insl
or
or
sbb
dec
mov
mov
inc
or
dec
add
push
bound
sub
or
repz
repz
call
mov
and
mov
std
es
inc
popa
xchg
adc
pop
jbe
js
cmpsb
push
inc
mov
pusha
or
jbe
subb
pop
mov
mov
addr16
push
xor
stos
adc
adc
or
jns
sub
test
fadds
fcmove
mov
sti
jo
movsl
inc
in
out
push
clc
xchg
push
lcall
adc
inc
add
pop
jb
shlb
fsubl
insb
loop
bound
mov
cmpb
xor
mov
lods
cltd
dec
pop
fs
cmp
mov
adc
hlt
loopne
popa
jo
mov
outsl
jecxz
jnp
and
push
inc
cmp
aad
outsb
mov
mov
add
scas
add
loop
inc
add
sti
ljmp
addr16
xor
adc
dec
dec
or
push
les
in
leave
adc
icebp
stos
push
ds
xchg
push
sahf
daa
stos
sub
lahf
lret
enter
pop
mov
pop
imul
sub
or
dec
mov
test
int
add
adc
je
aaa
scas
lds
movsb
xchg
jne
dec
loop
int3
int3
sub
mov
hlt
insl
mov
add
test
sbb
cli
clc
dec
inc
push
mov
popa
repnz
fisubl
or
inc
sub
loopne
mov
xchg
sbb
jle
adc
sub
mov
iret
lea
xchg
jns
jl
stos
ret
test
in
sub
lcall
sbb
stc
insb
inc
pop
aad
rorb
mov
push
mov
mov
fwait
iret
int3
pop
fistps
mov
in
mov
cmpsb
inc
mov
cwtl
pop
push
mov
mov
sbb
xchg
out
into
in
cmpsb
orl
dec
sahf
fsubrl
mov
fcoms
out
jle
fcmovu
int3
sahf
or
ljmp
sub
add
dec
mov
scas
enter
pop
or
rcl
push
sti
test
push
dec
pop
fnstsw
or
sub
add
fwait
add
jmp
mov
imul
add
sub
movsl
lret
fs
sar
pusha
dec
add
out
jnp
fsubrl
mov
arpl
sbb
lods
mov
mov
cmp
mov
sub
les
pop
mov
jmp
movsl
aam
xor
ja
jns
test
divps
xchg
mov
pop
shlb
lock
or
pop
lea
add
jns
scas
cmpsb
push
test
std
and
test
test
jne
or
cld
lock
inc
fsubs
cmp
iret
out
sbb
mov
or
insb
push
and
rcl
cmpb
in
shrb
lret
scas
push
sbb
addl
fnstcw
inc
sahf
dec
lahf
cld
push
inc
rolb
sbb
jnp
adc
in
jle
sbb
xchg
push
cli
xchg
ror
mov
into
jg
aas
ljmp
jle
xor
or
mov
leave
clc
test
adc
add
push
and
popf
daa
dec
adc
aaa
inc
adc
fnclex
pushf
mov
inc
fisubl
pop
mov
mov
mov
mov
sub
or
and
lcall
jecxz
cmc
add
add
out
stos
dec
lret
test
dec
sahf
enter
enter
jae
fisubs
aad
sbb
or
leave
jmp
fucomp
pop
mov
xor
mov
cmp
insl
lods
leave
iret
lret
mov
pop
movsl
push
mov
dec
jle
mov
cltd
push
sti
mov
popa
push
xchg
ret
jmp
in
add
pop
out
fdivs
sbb
ret
shll
pop
movb
orl
mov
push
sub
out
cli
sar
mov
test
dec
jle
cmp
mov
out
ret
aas
add
add
add
clc
jae
cmc
lret
js
jmp
int3
fimuls
add
adc
mov
push
sbb
pop
jmp
lret
dec
jle
xor
inc
push
call
adc
lock
sub
scas
or
popf
hlt
dec
outsb
fcmovb
sahf
das
adc
jnp
mov
into
repnz
pop
test
jl
jnp
inc
xlat
enter
cmp
push
mov
mov
lods
hlt
sub
mov
sbb
mov
fs
fnsave
dec
outsb
jle
sti
rcrb
scas
inc
mov
adc
es
mov
fidivl
out
mov
sar
inc
mov
std
fsubl
or
mov
filds
mov
cmp
pop
cmpsl
adc
jno
popa
out
push
adc
fldt
orl
mov
adc
arpl
sbb
mov
sti
or
inc
inc
mov
mov
mov
dec
out
pop
lock
adc
add
call
and
cmp
sti
mov
push
xor
movsl
dec
out
loopne
cmpsl
push
fistl
mov
add
cltd
pop
push
inc
das
or
insl
sub
aas
mov
mov
add
data16
inc
cmp
lcall
or
dec
mov
lods
lret
xor
inc
push
jmp
mov
mov
mov
add
dec
cs
push
jmp
inc
mov
mov
fsubrs
pop
or
ret
test
cmp
cmp
or
hlt
or
imul
lds
aad
shll
jecxz
jmp
cmpl
xchg
loope
inc
addr16
lods
imull
cs
sub
add
xchg
out
js
subb
movsl
bound
jnp
andb
xor
mov
adc
lods
sub
int
sbb
inc
in
jge
int3
dec
or
sti
mov
sbb
loop
mov
inc
cld
mov
ljmp
sub
or
mov
sub
adc
les
mov
enter
or
cmp
sub
xorb
mov
movsb
in
call
in
or
test
imul
cmpsb
dec
mov
or
mov
mov
jge
data16
xchg
add
sub
inc
xchg
bound
xor
mov
sti
sbb
ja
push
adc
pop
pop
jnp
adc
or
ret
lods
add
lret
jle
imul
int3
adc
testl
insb
adc
out
xor
cli
or
add
es
scas
testb
dec
push
mov
scas
xor
jns
dec
ret
adc
push
dec
stc
sahf
jg
xor
test
add
xor
mov
lcall
sbb
mov
ret
hlt
mov
imul
lods
sti
or
sti
cmpsb
xchg
insb
test
adc
push
sbb
mov
mov
dec
repnz
jge
in
adc
dec
data16
jns
jmp
add
or
pop
cld
aad
and
sub
sahf
fidivrs
mov
int3
mov
out
mov
push
lea
cmp
and
daa
mov
and
cmp
mov
xlat
fdivrl
pop
loop
sbb
test
inc
les
pop
imul
adc
pop
mov
out
inc
mov
sub
pusha
cltd
mov
or
pop
mov
sbb
xor
adc
xchg
jmp
xchg
insb
cmp
fiadds
or
dec
mov
or
jmp
orl
sub
leave
jmp
push
push
and
inc
fimuls
fstpt
ljmp
jg
inc
pop
or
or
and
cli
mov
ds
aam
adc
lock
mov
or
inc
por
fsubl
les
mov
dec
call
out
mov
push
inc
lods
ds
fwait
cwtl
xlat
ret
mov
fdivl
add
ss
add
cmpsb
lods
jb
mov
lock
push
jno
sar
pushf
mov
cld
cmp
je
push
dec
adc
call
push
adc
pop
lcall
je
xor
adc
test
sti
ljmp
lret
sbb
add
or
xchg
sbbl
sbb
inc
cmp
cltd
inc
test
andb
jae
add
mov
call
ret
push
ja
js
fists
inc
mov
mov
imul
pusha
jg
adc
sub
or
ss
in
jl
fs
dec
aaa
jb
mov
xor
or
insl
mov
sbb
sar
ds
mov
je
bound
mov
repnz
rorb
add
bound
mov
insb
aas
mov
cmp
pushf
test
sbb
lcall
incl
lcall
orb
fwait
push
xchg
bound
mov
jmp
ror
ret
jnp
or
cmp
jnp
lea
scas
shl
cs
push
jg
add
je
sbbb
stos
or
out
pop
inc
sub
sbb
ficoml
sahf
inc
sbb
popf
fbstp
andl
push
into
sbb
les
jnp
or
rolb
mov
inc
xchg
rcrb
jg
xchg
clc
call
sbb
les
add
loope
cmpb
and
stos
mov
dec
sbb
or
lods
sti
lret
adc
mov
ljmp
sub
and
dec
rolb
pop
clc
daa
cmp
or
or
pop
leave
jnp
loop
ret
xchg
inc
add
mov
mov
push
adc
sahf
sbb
lock
cmp
aas
or
adc
orl
clc
pop
fwait
add
int3
movsl
or
adc
xchg
sbb
lret
inc
cmp
dec
jg
mov
movsb
lock
arpl
rclb
jnp
sbb
aam
inc
aas
sbb
jp
mov
cmp
ret
mov
jp
out
lds
stc
jmp
inc
sti
mov
sbb
mov
test
cmpsl
xor
out
filds
pop
and
int3
sbb
cmp
mov
out
mov
fcoms
bound
xchg
pop
mov
jp
stc
adc
data16
jnp
cwtl
dec
in
or
inc
lods
adc
int3
jp
xchg
push
dec
sub
nop
ret
shlb
sub
lret
mov
out
sub
in
and
icebp
movsl
push
pop
mov
jae
cmp
sbb
fwait
out
pusha
iret
lcall
mov
outsl
cmpsl
andb
add
push
and
xor
inc
adc
push
lods
sti
andb
icebp
push
lods
jg
cmp
jecxz
int3
jl
xor
jno
stos
inc
bound
push
xor
mov
adc
ret
addr16
test
xor
add
popf
inc
jbe
and
andl
lret
lea
xor
aam
add
or
iret
inc
xlat
adc
adc
das
jnp
cvtpi2ps
xchg
imul
imul
loopne
push
fsubrl
dec
shll
add
in
sbb
fwait
ss
xor
sti
aam
in
in
hlt
call
inc
jae
call
roll
pop
jmp
mov
add
mov
mov
aam
mov
fxch
add
and
je
mov
in
femms
popf
adc
test
dec
or
add
enter
mov
jle
inc
xchg
clc
jp
mov
push
or
or
sbb
mov
idivb
mov
divb
insb
jnp
ljmp
jbe
rclb
push
and
test
xor
insb
std
out
pop
testb
jo
jle
mov
jae
enter
or
xor
dec
mov
sti
sub
jmp
mov
xor
jnp
sbb
int
sub
roll
popf
gs
cmp
lock
repnz
xchg
test
out
imul
lods
in
les
repz
repz
sub
xor
sti
sbb
or
rcr
ss
rolb
pop
pop
repz
out
mov
and
inc
mov
fcmovb
inc
xor
mov
mov
sbb
sub
push
fwait
or
jnp
push
call
mov
adc
ret
stc
test
bound
xchg
mov
and
dec
pop
call
cli
adc
je
mov
push
pop
fnstenv
adc
in
cld
mov
test
sti
pop
sub
shlb
or
jmp
fistl
scas
pop
sbb
adc
jle
icebp
and
push
dec
mov
inc
adc
aam
adc
inc
dec
sub
pop
sub
add
push
gs
cmp
pusha
cli
sub
fcmovnb
xchg
inc
pop
and
sub
or
cmpsl
adc
call
adc
adc
sub
neg
mov
outsl
test
lret
push
inc
cmp
jg
or
cld
rol
sbb
cmpsl
adc
ja
pop
rorb
jo
js
aam
push
gs
scas
xor
repz
ror
dec
cmpsl
pop
iret
or
mov
hlt
jns
mov
dec
cmp
sbb
loop
add
sahf
pop
adc
sbb
sbb
popa
mov
lea
and
jecxz
inc
in
dec
or
xchg
pop
jnp
xchg
faddl
and
stos
xchg
es
pop
fimull
or
pop
scas
sbb
xchg
mov
and
mov
jne
push
lods
nop
mov
jp
rolb
js
and
imul
or
dec
inc
pop
je
cmp
lea
les
popf
jns
test
bound
mov
dec
stc
dec
add
adc
cld
cmpsl
rcll
sbb
ret
or
push
xchg
call
jl
add
xchg
popf
mov
jmp
popa
mov
jno
fnstcw
js
sbb
ja
cli
scas
push
lahf
inc
stc
xor
pop
mov
mov
jecxz
mov
xor
loop
fmuls
in
xchg
aaa
xchg
inc
lds
scas
mov
imul
jg
push
push
add
jecxz
dec
ljmp
pop
push
mov
pop
xchg
or
jecxz
gs
push
dec
test
lea
mov
bound
cmc
adc
int3
cmp
jg
gs
rolb
cmp
adc
inc
arpl
push
lods
rcr
fiadds
gs
insb
cmc
cmpsl
stos
jnp
or
mov
pop
add
mov
pop
enter
push
mov
mov
ret
add
sbbl
mov
stos
xchg
lret
ret
lret
pop
cmp
jno
lea
and
lcall
mov
cmp
push
and
mov
cmpsl
sahf
or
push
or
pop
dec
bound
dec
adc
mov
fbld
dec
ss
icebp
inc
frstor
clc
adc
aaa
adc
test
adc
pop
mov
call
repz
insl
nop
push
cmp
add
xchg
icebp
mov
stos
inc
loopne
sahf
popa
inc
xor
xchg
mov
jmp
insl
int3
cli
addl
jne
aam
aas
add
in
and
or
mov
out
push
aad
dec
ret
jg
xchg
xor
into
loopne
jo
in
cmp
test
mov
fs
mov
and
adcb
push
into
test
adc
scas
push
scas
stc
js
out
jo
movb
sbb
push
jmp
inc
or
rcrb
mov
mov
cmp
repnz
lock
fst
jnp
popa
xchg
xor
sbb
push
cld
addb
jnp
mov
mov
add
mov
int3
test
aam
sub
cltd
jns
sahf
int3
push
mov
shl
scas
fst
push
inc
xchg
push
fcompl
dec
or
mov
sub
jns
mulb
and
dec
std
lock
scas
loop
test
cmc
mov
sub
jle
movl
fsubrs
leave
call
mov
subb
mov
rcrb
cmp
test
aaa
movb
inc
cltd
push
aam
mov
xchg
loope
jns
adc
test
pop
daa
adc
jecxz
jb
xchg
in
jae
mov
les
and
or
scas
out
arpl
sub
bound
xchg
dec
sbb
lods
pushf
xchg
xchg
and
pop
stos
out
jmp
inc
inc
lea
out
out
add
sti
adc
xchg
jge
out
lds
push
mov
lahf
add
jno
pusha
push
andb
inc
into
inc
xor
rolb
adc
int
repnz
scas
mov
jno
xchg
dec
mov
shll
inc
and
and
mov
xchg
cmp
in
and
dec
orl
lret
xchg
cmpsl
fs
je
mov
sti
xchg
sbb
popa
sbb
cs
adc
sbb
push
test
inc
inc
pop
mov
addl
jl
ret
inc
aas
stos
mov
add
addr16
shll
sbb
jne
in
mov
iret
jle
or
mov
mov
je
shr
loop
and
in
lret
jle
cld
jecxz
mov
inc
mov
inc
cwtl
insl
arpl
std
js
adc
aaa
dec
sub
dec
cmc
shrl
sub
mov
pusha
sbb
jmp
test
mov
pop
dec
ja
or
add
fildl
sti
or
jnp
enter
scas
push
push
lahf
add
mov
push
ja
add
fmull
xchg
cwtl
cli
orl
fucomi
push
add
mov
add
mov
adc
lods
fsubrl
in
inc
mov
pop
or
popa
sub
adc
fildl
scas
push
test
mov
inc
and
dec
or
in
insl
mov
iret
daa
and
xchg
js
loop,pt
in
cmp
fnstenv
jns
sbb
cmp
adc
pusha
xchg
sub
mov
xchg
xchg
pop
xchg
fwait
jle
dec
adc
adc
cs
add
xor
sbb
sub
jle
cmp
push
sti
loop
mov
insl
pop
das
mov
int
or
aaa
or
jl
and
jle
aas
xchg
mov
xchg
mov
lods
cmp
jne
mov
setnp
sub
inc
test
mov
stos
push
aas
ffreep
sub
nop
mov
and
adc
xor
enter
rorl
out
into
loope
insb
xchg
xchg
subl
cwtl
inc
mov
bound
or
orl
pop
leave
dec
and
stos
cmpsl
leave
ficomps
add
inc
adc
pusha
or
les
out
add
fidivs
and
or
dec
add
xchg
fimuls
cld
mov
in
or
jle
xchg
xlat
inc
mov
mov
pop
fwait
mov
hlt
in
insb
fnstenv
xor
adc
andl
push
fistpll
fidivs
xchg
dec
clc
adc
loop
cwtl
or
dec
out
scas
sbb
bnd
mov
mov
loop
jmp
movsl
in
or
jp
out
roll
and
add
cwtl
sub
jns
push
adc
roll
leave
or
testb
add
imul
out
xlat
xor
scas
popf
dec
push
lea
cmpsb
imul
cli
inc
test
cmp
mov
jns
xchg
fisubl
dec
rorb
and
cvtdq2ps
jmp
or
push
pop
xchg
pop
lahf
pop
sbb
mov
out
je
add
sbb
orb
and
push
cmp
fstpl
dec
pushf
dec
or
xchg
nop
jmpw
mov
unpcklps
lock
iret
mov
pop
lret
mov
dec
cli
jmp
xchg
or
mov
cmp
ret
ret
add
in
or
sahf
xor
dec
push
dec
add
cmpb
or
mov
or
mov
dec
mov
lcall
and
mov
push
push
rol
in
int
orb
mov
jnp
daa
or
jae
mov
sbb
enter
inc
add
mov
out
int3
add
loop
cmc
fs
outsb
inc
jge
sub
add
inc
pop
andb
sbb
out
int
or
popl
insb
inc
cmpsl
or
imul
pusha
add
dec
dec
test
enter
inc
mov
mov
pop
mov
insb
mov
sub
shrl
jle
adc
das
pop
stos
popl
jne
loop
fisttps
out
and
xchg
or
cmpb
loop
cmp
add
add
les
dec
add
and
or
das
cmp
scas
mov
dec
jge
push
inc
mov
xchg
or
inc
xchg
push
jmp
sti
add
jmp
inc
sti
inc
inc
add
add
mov
jno
lret
xor
bnd
push
add
mov
add
add
inc
xlat
xchg
push
sbb
mov
call
das
jp
cltd
push
cs
mov
sbb
mov
xchg
cld
sub
adc
std
js
cmp
push
aaa
add
icebp
pop
sub
rorb
enter
movsb
and
popf
gs
adc
xchg
or
push
fistps
add
lret
aad
mov
xchg
ret
bound
pop
or
test
imul
lcall
std
cmp
addr16
mov
les
out
subl
push
push
cmp
aam
repnz
xor
or
jno
mov
pop
fsts
lock
pop
and
icebp
inc
mov
add
test
je
scas
and
xor
ret
insl
mov
aas
add
jg
js
loop
sbb
add
mov
lret
lcall
sbb
andb
sahf
sbb
stos
inc
clc
jno
jae
pop
and
mov
sub
adc
es
mov
mov
loop
xchg
ficompl
jg
pusha
rcrb
inc
mov
jecxz
xchg
sbbb
iret
sbb
test
sub
dec
dec
scas
push
mov
mov
cli
mov
adc
inc
or
hlt
mov
push
ret
add
pushf
add
hlt
mov
loop
inc
loop
xchg
lahf
adcl
cmpb
pop
mov
adc
and
push
jo
ret
fwait
popa
inc
jns
mov
in
and
sbb
and
clc
sahf
add
call
add
popf
sti
xlat
and
xchg
js
mov
pop
cmpsl
mov
cs
and
ret
jno
adc
jp
lret
mov
mov
cli
jns
xchg
lret
ficoms
mov
and
lahf
or
mov
mov
mov
adc
in
xchg
in
insl
push
sarb
xor
mov
push
loopne
adc
shlb
pop
xchg
and
fstl
orl
add
mov
adc
jl
jle
shll
push
cmp
push
dec
ret
adc
mov
xchg
jmp
sti
add
orb
adc
test
or
xchg
push
lret
lods
mov
insl
negb
push
add
add
lock
in
mov
adc
stc
lret
sbb
icebp
mov
jmp
js
lds
add
push
lods
fcmovb
lock
mov
pop
mov
inc
shll
inc
hlt
add
mov
xorl
rorb
ss
mov
or
popf
and
sahf
stos
filds
mov
fisubrs
adc
inc
out
movsl
xor
mov
sub
loopne
mov
out
aam
in
subl
jno
mov
or
lods
loope
scas
nop
sahf
hlt
mov
loope
inc
jl
jnp,pt
outsb
notb
lods
jnp
mov
sbb
outsb
ja
insb
dec
ljmp
in
cmp
ljmp
insl
adc
mov
adc
adc
or
lret
test
adc
adcb
cmpsb
outsl
arpl
sti
or
dec
jne
scas
dec
mov
or
fmul
or
xor
lods
mov
lock
fldt
mov
in
jmp
and
lods
jle
push
outsb
sahf
inc
cli
or
inc
call
aas
test
xor
sbb
scas
sarb
arpl
or
jbe
int
ret
inc
and
cmp
lods
insb
jle
add
lret
lret
sub
xor
repnz
push
jnp
mov
push
out
daa
push
sbb
push
iret
lods
xchg
xor
adc
dec
jp
cld
out
fldt
jnp
sbb
xchg
mov
or
cltd
rcrb
push
or
cmp
inc
scas
inc
movsb
cmp
inc
add
mov
xchg
sbb
or
imul
into
sub
pusha
jmp
out
fs
fsubrp
cmp
xchg
daa
lods
and
mov
push
or
bound
nop
stos
xor
outsb
int
mov
or
add
jmp
and
int3
out
sbb
and
push
je
inc
pop
or
into
xchg
push
out
cmpsl
or
in
negb
out
inc
add
or
jg
jmp
fwait
mov
pop
lods
fisttpl
insb
sbb
dec
mov
arpl
jmp
add
mov
sub
js
icebp
loop
mov
popa
sub
pop
repnz
int3
pop
test
test
nop
jl
lds
loop
and
inc
jns
sbb
mov
inc
push
enter
push
mov
fcmovnb
jo
es
and
decl
push
xor
imul
or
dec
cmp
jmp
test
and
and
adc
inc
in
inc
or
xchg
in
das
lods
in
jle
mov
loop
in
mov
jecxz
out
mov
in
jle
daa
pshufw
loop
iret
out
sbb
das
lods
sahf
mov
call
adc
imul
js
or
lahf
das
jl
jmp
dec
or
pop
das
fs
fwait
cmp
ret
mov
leave
pop
js
mov
testb
stos
adc
sti
cmpsb
mov
mov
adc
pop
repz
lea
cli
add
jl
add
mov
xchg
std
sbb
lret
sub
push
scas
pop
mov
lret
imul
or
adc
add
cmpsb
rolb
sub
push
or
inc
leave
sub
movsl
jge
arpl
xchg
adc
hlt
daa
lock
out
mov
mov
dec
xchg
mov
xchg
jo
or
fisubrs
dec
popf
mov
xor
or
lret
push
add
adc
jle
mov
xchg
cmp
jo
mov
movsl
lods
sti
jge
cmp
dec
dec
bound
xchg
or
add
or
jb
cli
add
fldenv
inc
xchg
sbb
mov
in
lret
sub
mov
ja
inc
int
push
jne
js
js
shl
scas
or
mov
push
in
dec
cmp
cmp
dec
mov
in
nop
div
lret
jle
dec
xchg
dec
lods
cmp
push
cmp
dec
pop
aam
lods
jl
push
mov
or
pop
loope
push
push
movsb
dec
mov
lods
sti
dec
adc
outsl
inc
and
adc
mov
lods
mov
adc
and
mov
ret
and
adc
or
call
les
jns
mov
adc
test
mov
jmp
pop
fucomi
decl
mov
cmp
cli
les
insl
mov
and
cli
sub
loope
test
xchg
call
add
imul
int3
add
xor
mov
cmp
cmp
sub
lock
inc
shlb
pop
add
in
shrl
pop
popf
fstpt
mov
jne
add
mov
lods
or
xchg
xor
add
xlat
mov
mov
in
mov
pushf
icebp
iret
mov
pop
pop
int3
jno
not
xor
adc
add
cld
jmp
xchg
push
push
push
or
cmp
lcall
sbb
lock
lret
sub
xorb
in
sbb
jle
les
push
mov
aaa
loop
fdivrs
repz
pusha
sbb
or
sub
dec
sti
cwtl
mov
mov
pop
xchg
dec
daa
and
cmp
inc
push
test
es
push
gs
shll
sbb
adc
lock
add
push
mov
push
xor
in
mov
jno
jnp
mov
bound
mov
inc
xlat
shrb
jb
dec
enter
je
ret
jmp
pop
ljmp
int3
in
push
lret
sub
lret
loopne
aaa
ret
hlt
xchg
or
dec
out
push
cmp
mov
insl
movsl
mov
popf
sub
mov
mov
xchg
push
shrl
or
push
cmp
jge
or
cwtl
lods
or
mov
int
lods
sbb
nop
int3
pushf
fs
push
scas
ds
movsl
insl
in
stc
int
js
pop
dec
inc
or
add
pop
sti
mov
scas
jge
scas
dec
jo
cmp
push
xor
and
imul
int
cs
jecxz
xchg
inc
cmp
cwtl
lods
loopne
fmulp
cmp
sbb
mov
movsb
cmp
sarl
jns
dec
dec
jmp
dec
iret
sbb
mov
cmp
cmp
sti
hlt
int3
push
imul
xchg
pushf
mov
lea
xchg
lret
jns
mov
or
sub
mov
test
dec
mov
scas
inc
mov
add
shl
adc
jb
xlat
ret
shl
cmpsb
xchg
mov
ret
es
cli
jp
je
mov
jo
mov
and
pushf
pushf
push
push
push
pop
mov
enter
add
jg
orb
inc
jne
incl
or
addr16
repz
xchg
pop
gs
cmpl
mov
jmp
mov
pop
and
xchg
mov
push
sub
shlb
test
xlat
lods
or
and
hlt
cmpsl
xchg
lea
pop
dec
add
sub
cmpb
stos
pop
push
shl
sahf
cld
mov
inc
out
add
scas
jmp
lret
inc
xor
jge
pop
in
out
loop
dec
cwtl
cmp
loope
dec
or
push
pop
fisubrl
sbbb
gs
sub
or
jno
add
ja
sahf
sub
call
adc
mov
or
mov
cmp
or
inc
in
push
scas
jmp
out
pop
or
cmpsb
shrb
stos
fwait
or
push
out
jnp
push
test
loop
cmp
jg
movsb
add
scas
mov
cmp
xchg
mov
ja
mov
xchg
add
data16
add
push
lret
mov
ds
mov
sub
sub
sub
loope
xor
pushf
xchg
scas
sbb
dec
popa
or
add
call
fcoms
sti
les
or
int3
xchg
icebp
loope
mov
fwait
call
sub
mov
mov
and
daa
insl
enter
dec
mov
inc
stos
push
nop
jecxz
mov
mov
jno
sti
int
inc
jle
and
pop
push
add
cmc
or
lcall
sub
xchg
sub
in
or
mov
insb
icebp
cmp
inc
ja
lahf
sbb
xor
nop
icebp
add
or
ljmp
fildl
rorl
or
icebp
mov
pushf
xor
stos
movsb
int3
fstl
loop
add
sbb
inc
mov
fnsave
push
shll
jmp
sbb
xchg
addr16
add
daa
movsl
pusha
jb
pop
cld
aam
das
lea
fidivs
inc
scas
mov
jmp
cs
sbb
rcll
jmp
cmp
or
cmp
cltd
jnp
pop
sbb
xor
sub
jecxz
and
jo
dec
jns
mov
cmovo
sti
ds
mov
push
sbb
mov
mov
dec
jl,pn
or
jmp
faddp
and
jl
cld
mov
addr16
pop
das
jbe
mov
cmpsl
adc
lret
inc
fnstsw
xlat
jb
orl
daa
mov
mov
sti
sub
xchg
adc
sub
iret
sub
sbb
sahf
cmpsl
les
and
cmp
leave
cmp
sub
rcr
adc
and
sbb
pop
inc
mov
outsb
jno
fidivrs
xor
outsb
xlat
inc
adc
cwtl
fisubrl
scas
sub
sbb
cmpsl
add
pop
cmp
xchg
jp
fwait
lahf
scas
sbb
push
sti
xchg
mov
xor
sbb
aam
adc
add
repz
cmp
sub
sbb
lods
xor
sub
or
fisttpl
add
mov
lods
pop
inc
dec
lods
jecxz
nop
dec
jnp
imul
ss
shl
sbb
add
add
or
sbb
inc
or
add
or
dec
cmpsl
out
nop
iret
cmp
movsl
scas
xor
dec
scas
leave
shr
add
pop
aas
out
dec
hlt
sub
punpckldq
dec
and
push
add
dec
pop
xor
inc
lock
sbb
repz
in
hlt
leave
or
fisubs
stos
sub
sbb
xor
xorl
sub
add
in
adc
stos
mov
sar
mov
repnz
sbb
cmpl
jbe
or
adc
andl
test
repz
imul
cmp
sbbl
insl
cld
inc
cmpsb
stos
adc
xchg
shl
push
enter
cwtl
fs
mov
popf
inc
jnp
dec
jg
or
fs
lods
ret
stos
push
push
insb
or
movsl
push
dec
mov
mov
fsincos
or
dec
mov
mov
or
lods
inc
lretw
pop
cwtl
je
sbb
pushf
and
pop
jecxz
mov
cmpsb
mov
inc
rolb
bound
dec
push
out
sbb
pop
mov
fildl
fdivl
dec
mov
cli
mov
mov
sub
das
cs
movsl
rol
pop
stos
sub
push
aam
iret
nop
rcrl
adc
clc
stos
adc
das
rolb
xor
hlt
fdivrl
stos
dec
push
outsl
inc
in
repnz
movsl
jnp
movsl
aad
adc
xchg
fisubl
arpl
push
and
mov
ljmp
mov
sub
pop
arpl
mov
addr16
bound
call
or
sub
jle
sbb
xor
jl
fisttpl
sbb
jg
nop
fcompl
addb
and
xor
push
or
stos
ja
mov
fsubs
cmp
pop
daa
fcmovu
xor
fldl
fdivrs
sbb
inc
jb
fcoms
out
jmp
jl
int
cs
xchg
data16
insb
in
cltd
in
dec
sub
adc
mov
popa
enter
inc
pop
adc
adc
ljmp
or
xchg
and
add
or
xchg
cmp
movsb
andb
fldcw
fimull
decl
pop
mov
dec
stos
adc
mov
xor
dec
sub
stos
arpl
adc
or
mov
or
or
xchg
dec
test
icebp
or
dec
add
je
push
push
int3
add
shlb
int
mov
js
call
jecxz
call
xorl
add
lcall
mov
dec
and
es
lds
mov
add
or
les
pushf
clc
test
test
pop
bound
mov
cmp
add
sbb
fwait
sbbb
lcall
push
insb
sbb
sti
fwait
sti
or
mov
push
add
rsm
dec
mov
or
cld
push
arpl
adcb
jnp
mov
mov
and
inc
or
jl
mov
fisttpll
xchg
insl
and
mov
gs
jmp
adc
out
sbb
stos
aas
ror
dec
shrb
imul
mov
dec
sahf
lds
dec
jnp
cmpl
hlt
xor
mov
ret
sub
mov
sbb
jae
lret
pop
insb
psubq
or
adc
mov
loope
jnp
xchg
mov
arpl
ss
loop
in
xchg
add
mov
fnsave
adc
mov
test
add
inc
or
or
dec
adc
mov
enter
jge
or
data16
orb
or
sbb
lcall
sub
or
mov
lods
iret
mov
mov
cmpsb
test
enter
add
push
sub
test
cld
and
out
jl
push
push
adc
sar
loop
test
repnz
roll
cld
adc
or
insl
rcrl
sub
or
movsl
or
in
ss
stos
dec
mov
or
or
fsubl
jge
xchg
pusha
or
dec
movsb
adc
adc
fdivr
std
arpl
push
into
fsubs
adc
jg
ret
sti
loop
imul
mov
lcall
sub
pop
mov
shl
lcall
mov
xor
cmpsb
aam
xor
addr16
int3
add
adc
cmp
xor
or
add
pop
test
call
filds
loop
repnz
mov
lock
adc
dec
inc
mov
movb
mov
mov
sbb
jmp
cwtl
xor
aas
add
xchg
sub
push
in
push
js
repnz
pop
push
inc
dec
mov
xchg
in
incb
or
repnz
add
adc
call
insb
xlat
pop
mov
push
ficompl
mov
out
mov
xchg
and
enter
lds
in
pop
xorb
push
roll
mov
test
push
scas
pop
aas
inc
push
in
mov
push
push
je
mov
aaa
jle
sahf
and
hlt
jle
movsl
lods
call
or
or
or
shll
jo,pt
pop
stos
fcompl
shrb
js
inc
sbb
xchg
test
fimuls
push
sti
dec
sub
inc
xor
std
ss
xor
and
cmp
or
movsb
mov
dec
push
xor
lods
push
mov
adc
dec
pop
mov
xchg
dec
push
out
dec
mov
test
inc
adc
add
inc
and
nop
inc
mov
jmp
fs
ficoms
loop
fs
pop
outsb
icebp
in
in
sub
sbb
or
pop
sbb
push
lcall
mov
mov
sbb
mov
dec
popa
and
leave
cmpsl
sub
negl
inc
addr16
or
int3
or
push
fld
or
je
pop
mov
test
in
sbb
daa
sahf
fs
pop
mov
int
xchg
aad
insl
sbb
sbb
jns
mov
in
push
cmp
dec
push
or
ljmp
jae
rcr
ret
sbb
cmpsb
sub
inc
sbb
pcmpgtb
and
lcall
pop
stos
jnp
out
pop
orb
mov
sub
hlt
mov
hlt
fs
jo
popa
and
add
cld
xchg
and
int
cwtl
les
adc
or
sti
lods
lds
shll
inc
out
jle
jg
sub
cli
sub
add
mov
sbbb
mov
cli
in
xor
inc
loop
inc
sbbb
cmp
mov
dec
or
mov
dec
fildll
lret
cmp
inc
lock
cs
scas
add
movsl
adc
in
in
sbb
xor
mov
sbb
insb
fcomi
mov
xchg
and
or
jmp
std
xor
ljmp
dec
aaa
movsl
rol
test
mov
sbb
dec
add
gs
dec
or
add
mov
sahf
pop
pop
mov
mov
mov
adc
add
push
ds
jo
jnp
add
and
leave
js
jb
push
call
or
jne
pusha
jbe
inc
jl
movb
add
fucomi
movsl
xchg
test
imul
lds
pop
and
xchg
sub
ljmp
jae
adc
fcomi
jb
cmp
xor
fsubl
stos
rcrl
shlb
dec
cmpl
adc
adc
aas
cmp
shl
insb
jg
jmp
and
imul
inc
and
stos
mov
ficoms
cmp
mov
adc
pop
pop
sti
xchg
adc
push
adc
cmp
xchg
mov
pushf
rolb
jle
jbe
sub
jae
inc
adc
cmp
es
jbe
sar
cmp
and
push
int
in
js
popf
cmp
test
stos
mov
les
movsl
jae
jo
data16
cwtl
mov
sub
adc
paddusw
sbb
and
sar
inc
pop
cmp
push
sub
sub
arpl
adc
add
jle
dec
or
subl
mov
or
pop
test
sahf
sub
sti
ljmp
mov
mov
cmpsl
pop
loopne
mov
sub
cmpsl
adcl
mov
inc
sub
sahf
sti
ljmp
cld
data16
adc
and
mov
leave
pop
xchg
mov
loopne
bound
out
popa
mov
jle
cmpsl
push
push
and
fstpt
insb
or
cwtl
adc
jno
pop
or
popa
pop
stc
dec
mov
cld
jecxz
xor
add
adc
popa
jg
jmp
insl
cmc
outsb
dec
mov
in
cltd
out
sub
movsb
hlt
lods
sti
xor
mov
mov
sbb
jne
in
sub
out
sub
and
imul
aam
pusha
jnp
or
pop
shrl
lds
add
insb
cld
pop
fiaddl
xchg
sti
cli
xchg
pushf
jae
inc
ret
jg
fldenv
add
mov
cld
out
jnp
xchg
movsl
mov
and
lret
shlb
shl
fistpll
jbe
movsl
cwtl
fldl
pop
cwtl
or
push
add
add
jnp
stos
mov
cmp
lret
jg
ds
pop
popf
add
sub
subl
mov
push
sub
dec
shl
loope
push
sub
push
out
cwtl
pop
nop
int3
mov
ljmp
daa
pop
imull
clc
pop
fisubs
enter
scas
or
int3
pop
mov
lock
inc
mov
mov
jp
fistps
or
out
clc
xor
add
jnp
adc
fwait
lock
mov
xchg
push
rcll
sti
jg
hlt
outsl
xchg
mov
mov
call
mov
sti
mov
mov
repz
cs
mov
cltd
mov
daa
aas
fs
push
mov
add
add
pop
sahf
inc
mov
fcmovnb
sbb
mov
push
mov
dec
outsb
out
mov
daa
sub
xorl
aam
mov
sti
add
sbb
add
rorl
lea
pop
inc
inc
push
or
cmp
xchg
jle
cmpsl
mov
movsb
add
in
lcall
scas
mov
cmpsl
and
ret
xlat
les
and
aad
inc
in
dec
imul
jge
int3
lods
xor
sbb
lock
ja
pop
sbb
mov
inc
dec
popf
adc
push
mov
adc
adc
push
mov
jecxz
pop
jo
repz
dec
or
sarb
cmp
sub
jp
add
dec
faddl
in
jb
sti
lret
sbb
inc
add
and
into
jp
mov
fimull
jle
test
jae
loop
or
push
jmp
or
push
xchg
lods
sub
lods
in
or
or
sbb
clc
mov
or
push
sti
stos
popf
int3
add
in
ljmp
dec
add
adc
fildl
cmp
out
test
shr
push
scas
xchg
mov
mov
add
sbb
jle
fsubrl
cwtl
push
mov
imul
fldt
push
lahf
add
dec
inc
aas
sbb
jne
dec
push
dec
addr16
cmpsl
dec
mov
fs
out
test
out
jg
xchg
cld
lock
pop
in
jg
mov
fwait
pushf
dec
push
mov
push
mov
push
ljmp
cs
or
adcl
pushf
push
add
popa
mov
and
out
movsb
or
movsb
jnp
inc
dec
inc
push
fildll
jnp
nop
test
stos
push
adc
mov
sub
fsts
sub
hlt
clc
lcall
sti
and
or
in
mov
lods
push
dec
sar
mov
push
js
imul
jns
data16
mov
jb
movsl
adc
xor
jge
mov
push
rol
ret
mov
cmp
jmp
mov
repz
enter
xchg
fmull
aam
cmpsb
sbb
cmp
aam
inc
loope
clc
sub
aam
pop
loope
adc
negl
cmc
mov
orl
frstor
mov
stos
jb
mov
ficoml
cmp
addr16
jae
loopne
shrb
mov
lret
cmp
int3
lock
out
add
into
push
aad
jns
lcall
bound
sub
int
js
les
mov
pop
lds
jl
outsl
pop
pop
imul
jbe
aam
fs
ljmp
mov
or
cmc
testb
scas
push
mov
sub
js
fbstp
push
push
cmpsl
stos
pusha
ljmp
sbb
sbb
les
daa
mov
push
mov
mov
movsb
jle
test
lods
iret
jnp
fs
or
adc
pop
dec
daa
rcl
in
mov
subl
mov
jmp
or
scas
jne
popf
popf
out
sahf
push
jl
ror
cli
or
inc
jnp
addb
jae
mov
rcll
inc
adc
fcoml
je
lea
outsb
pop
fwait
movsb
fmul
xor
inc
ss
push
movsl
test
movsb
mov
sub
ss
inc
mov
cmp
sub
test
sbb
mov
jno
lret
jb
lock
xor
pop
mov
sub
jns
inc
sbb
loopne
xor
push
out
in
inc
cmp
cmp
fucomi
jns
scas
push
in
mov
sbb
popf
add
add
and
test
popf
jns
or
push
enter
ja,pt
inc
movb
xor
and
movsl
sub
pushf
int3
movsl
jae
ja
xchg
in
int3
stos
push
popl
rorl
test
rol
shrl
popf
sbb
sub
ljmp
push
sub
mov
mov
mov
je
mov
jp
mov
hlt
push
repz
or
mov
inc
sti
push
sbb
mov
or
xchg
mov
mov
adcb
bound
lret
jecxz
cld
xor
and
pop
mov
jl
adc
sbb
outsl
lret
out
pop
jns,pn
mov
jle
iret
faddl
jmp
and
loopne
test
mov
push
and
ficompl
mov
lods
jae
mov
xchg
lret
xchg
pop
add
or
sti
inc
add
in
push
lcall
call
push
out
dec
mov
push
or
pop
arpl
mov
fldcw
movsl
repnz
dec
sti
into
jecxz
push
xor
jl
pop
cmpb
cmpsl
jae
push
inc
test
cmpsl
sti
dec
fistps
aas
inc
adc
in
decl
out
mov
sti
out
hlt
inc
mov
ret
inc
sub
rol
mov
xor
aam
cmpsl
mov
cwtl
cltd
inc
sbb
push
ret
or
sbb
sub
xor
fnsave
ljmp
xor
addl
adc
sbb
inc
test
js
orb
jl
sub
fwait
pop
or
outsl
pop
loope
push
sbb
les
xor
subb
mov
or
xor
push
mov
or
xchg
mov
inc
add
inc
iret
testb
and
popf
lret
inc
inc
lds
call
movsl
lods
loop
or
in
add
xchg
movsb
rcr
fwait
hlt
mov
das
inc
lods
repz
movsb
push
movsb
lcall
xor
int
xor
xchg
enter
push
ficompl
mov
jne
add
cmc
flds
dec
ret
inc
ljmp
sahf
lret
daa
data16
rcr
lahf
and
test
xchg
xor
sbb
pop
shrb
cwtl
movsl
mov
xchg
and
inc
ret
push
or
cld
mov
mov
or
add
adc
xor
into
sbb
je
inc
xlat
push
ljmp
pop
repnz
mov
or
sub
pushf
fsubr
dec
add
dec
mov
movsb
jmp
aaa
or
dec
aam
and
dec
rclb
and
jno
nopl
xchg
or
sbbb
push
cld
loop
cmp
push
push
pop
push
jae
shrb
movsl
daa
adc
mov
dec
int3
or
inc
push
insl
sub
ret
jge
add
sub
push
pop
cmp
cmp
sahf
jns
mov
jmp
mov
dec
fsub
xor
daa
sbb
jno
cmpsl
push
add
mov
mull
push
cmc
stos
adc
sbb
jge
add
popa
xor
inc
adc
jne
xchg
fs
jae
xchg
xor
lret
subl
lahf
test
jge
fdivs
push
dec
imul
mov
loop
cmp
out
out
lcall
popf
jns
jo
fisubl
in
sbb
das
push
in
xchg
push
add
sahf
or
stos
ret
mov
pusha
aaa
push
push
lea
arpl
adc
xchg
cld
push
hlt
mov
adc
aam
repz
jno
ljmp
mov
sti
test
les
xchg
test
fistl
jp
and
popa
pop
in
lods
cld
jne
daa
ss
adc
loopne
mov
mov
push
mov
imul
addb
jmp
inc
pushf
add
mov
sbb
into
or
and
fistl
jg
push
dec
push
sbb
bound
les
xor
aam
inc
jmp
push
inc
hlt
mov
jne
rorb
jbe
popa
mov
decl
mov
cmp
xchg
ret
mov
sbb
lea
pop
or
or
mov
in
add
mov
or
outsb
cmpl
add
jl
adc
mov
and
int
int3
add
out
push
ror
stos
setge
mov
lret
xlat
sahf
mov
shlb
fsubrl
mov
push
adc
mov
aam
mov
xor
add
xor
xchg
or
mov
ret
sub
into
mov
int3
loopne
lods
sub
fs
push
bound
push
mov
mov
out
sahf
mov
sbb
fs
stc
sar
test
outsb
push
dec
pop
mov
add
mov
mov
rclb
sbb
ja
mov
jecxz
push
and
sub
lret
mov
jmp
add
and
jne
pop
mov
testb
inc
insb
jns
enter
out
fnstenv
sbbl
stc
in
push
inc
popa
sti
mull
int3
push
mov
inc
adc
or
insl
js
add
lahf
fiaddl
sbb
les
pusha
adc
or
lret
pop
scas
pop
mov
jae
daa
xchg
and
mov
cmc
adc
and
and
call
imull
mov
or
and
in
jno
push
ss
inc
add
sbb
mov
in
sar
jmp
ret
mov
pop
add
adc
js
mov
int
mov
fwait
and
aam
pop
ret
dec
fwait
jg
clc
jge
les
jo
ljmp
orb
movsb
fsubr
add
xchg
adc
pop
jmp
mov
jo
xchg
xchg
sub
jmp
ret
out
arpl
or
mov
lret
dec
lret
push
cmp
ret
sub
int3
jb
jae
inc
int
movsb
mov
inc
out
mov
cmpsl
mov
enter
stc
test
nop
pushf
enter
scas
fisubs
lret
mov
mov
and
aam
mov
or
mov
mov
or
xchg
cli
sbb
jle
scas
insb
out
ret
shlb
sbb
lcall
iret
jnp
test
fs
mov
jecxz
fwait
cmp
add
dec
movb
mov
add
cli
mov
out
test
mov
push
sbb
dec
icebp
mov
mov
xchg
and
jle
shrl
imul
or
jnp
in
jp
icebp
mov
enter
xor
mov
mov
aas
dec
add
xchg
mov
ds
rclb
sbbb
xchg
xchg
mov
add
movsl
out
cmp
dec
jmp
loopne
inc
xchg
xor
sahf
push
sbb
jge
cmp
mov
les
push
movsl
lret
movsl
lods
inc
push
or
jmp
adc
and
or
lods
and
pop
mov
xchg
xor
shr
push
mov
in
or
cmc
or
movsb
or
cmp
mov
fcom
add
inc
clc
das
daa
aam
inc
cs
test
pusha
sbb
mov
arpl
sarb
cld
sub
mov
fdivrl
shl
movsl
movsb
cmp
mov
sub
sub
sbb
int
mov
push
mov
mov
or
orl
gs
mov
popf
lret
std
jmp
jmp
fsubl
lret
pop
adc
mov
sbb
lea
ja
repz
inc
outsb
icebp
xchg
out
or
mov
mov
test
and
int3
aas
popf
adc
push
and
dec
sub
insl
mov
stos
jge
imul
aad
inc
sub
add
or
add
adc
xor
mov
dec
lea
and
xchg
pushf
fstpt
out
or
mov
or
in
lods
and
bound
mov
mov
mov
int
movsb
dec
jns
push
loopne
dec
andb
inc
sub
icebp
push
adc
in
mov
pop
fmul
out
push
outsb
pop
lret
out
imul
adc
mov
sbb
add
loope
jmp
pop
add
adc
idivb
add
in
in
or
mov
pop
pop
ljmp
jno
add
lea
test
mov
popa
lea
popa
in
add
imul
out
pop
loop
aaa
mov
mov
push
inc
xor
or
inc
sbb
add
push
gs
dec
in
sahf
or
aam
adc
imul
mov
imull
gs
xchg
cwtl
push
cmp
rcrl
sbb
subl
pushf
ja
cmp
adc
ret
mov
inc
or
xchg
mov
aad
sub
mov
rcrb
mov
jp
mov
mov
jnp
cmp
loop
mov
jnp
xchg
or
push
cwtl
jo
cwtl
mov
call
push
pop
lret
fwait
xor
pushf
mov
jns
aas
xchg
add
loope
inc
sbb
inc
mov
movsl
dec
repnz
inc
add
xlat
loope
lcall
xchg
push
daa
inc
int
or
jge
adc
daa
sbb
dec
jecxz
std
cmpsl
xchg
and
jo
rcrb
mov
lret
cltd
cmp
push
jle
push
mov
add
mov
fdiv
lods
fdivrl
imull
or
lahf
punpckldq
and
pop
aam
mov
ds
shrb
mov
sub
into
jmp
insl
xor
daa
push
add
shr
add
inc
cs
mov
lock
dec
imul
and
scas
icebp
pop
int
mov
dec
xlat
mov
jnp
add
test
add
dec
stos
test
push
dec
psubd
pusha
add
les
jno
sbb
bound
adc
mov
mov
call
lods
jl
repz
xchg
sarl
sub
stc
inc
push
jp
jl
or
popfw
pop
bound
rcrl
cmp
shlw
sti
outsl
or
inc
push
lods
cmp
std
inc
pop
jmp
mov
or
shlb
ret
rcll
cld
in
sbb
mov
addr16
sbb
aaa
mov
push
mov
and
nop
jbe
jp
mov
fstps
jg
push
pop
cwtl
sub
pop
popl
jns
mov
mov
xlat
dec
adc
jnp
popf
fwait
xor
decb
mov
popf
push
orb
or
add
dec
xor
jnp
add
or
daa
into
adc
imul
xor
aam
adc
lds
mov
mov
or
xchg
fisubrs
mov
add
clc
sbb
xor
mov
repnz
fs
nop
push
push
mov
nop
or
fnsave
adc
mov
mov
sbb
loop
mov
and
adc
divb
dec
out
div
out
bound
lock
cld
cwtl
mov
les
mov
push
or
movsl
adc
dec
cmpsb
adc
add
push
mov
std
mov
and
jmp
cld
lret
loop
arpl
clc
out
les
jmp
loop
repnz
push
ss
fisttpl
lret
mov
xchg
pop
ret
out
xchg
mov
push
call
mov
lea
gs
mov
dec
sub
mov
jle
out
pop
loop
sub
mov
shrb
mov
aaa
mov
push
sub
pop
sub
pop
and
hlt
icebp
lock
jnp
inc
sbb
test
or
xchg
in
inc
mov
sub
into
pushf
fs
mov
pop
decb
sbbl
pushf
mov
popl
mov
ja
test
and
sbb
scas
lret
push
les
xor
lods
sahf
imul
fwait
lea
add
and
lcall
and
imul
mov
pop
push
add
or
lret
ljmp
adc
les
repz
cmp
push
test
jmp
push
xchg
pushf
mov
out
dec
or
adc
or
mov
xchg
nop
lods
xchg
out
loop
mov
mov
sub
gs
movsb
jg
dec
adc
out
dec
or
adc
mov
dec
sbb
push
hlt
stos
adc
fwait
popf
js
stos
lret
or
mov
loopne
jmp
je
push
mov
jle
test
in
in
mov
jns
cmp
xchg
jae
mov
add
insb
les
jp
adc
or
test
cwtl
or
pushf
lcall
ljmp
or
int3
out
inc
mov
cwtl
dec
pushf
jnp
inc
sbb
add
lock
out
push
aad
mov
or
jl
out
push
dec
jl
pop
adc
call
jp
jl
inc
adc
or
adc
sub
xchg
cmpsl
adc
adc
adc
push
in
call
lock
movb
movb
or
hlt
adc
or
cld
test
adc
mov
enter
cli
orl
sbb
sbb
in
pop
or
fistps
adc
jl
dec
adc
push
push
imul
mov
decl
or
adc
call
mov
cwtl
mov
mov
or
cld
add
leave
mov
pusha
push
dec
ljmp
add
sbb
or
dec
pop
mov
lea
mov
xchg
sub
mov
call
and
sub
add
add
or
add
ljmp
or
test
xchg
fisubrs
or
dec
fistpl
or
or
lods
pusha
faddl
js
cwtl
or
shlb
add
inc
ss
or
fmuls
bswap
hlt
inc
cmp
or
ret
ret
adc
es
or
adc
or
in
mov
les
add
inc
es
subl
pop
lahf
insb
inc
aas
inc
or
inc
or
sbb
out
mov
das
sbb
lods
test
cmpl
dec
ret
sarb
mov
lret
adc
push
or
mov
jo
lret
int3
das
sbbb
test
xchg
lret
xchg
lcall
mov
sahf
lret
sbb
mov
ficompl
int3
je
div
loop
add
dec
ficoms
lret
sub
fs
pop
lods
adc
mov
js
or
mov
push
hlt
das
push
addb
dec
jnp
bound
mov
pop
fmul
jmp
add
lret
movsb
or
test
mov
mov
fimuls
shrb
mov
lcall
ret
inc
sahf
cmp
fadds
xchg
push
in
mov
outsl
sbb
or
xchg
or
jmp
sahf
mov
lret
iret
sbb
testl
mov
outsl
insl
data16
mov
and
mov
cmp
add
lret
inc
nop
dec
mov
leave
call
mov
sahf
jp
or
js
push
inc
fisubrl
in
out
dec
mov
jl
mov
je
movsb
cmp
lret
cs
jecxz
icebp
mov
mov
bound
inc
aas
out
ljmp
stc
ljmp
mov
out
sub
leave
sbb
pushf
mov
mov
scas
shlb
pop
lea
cltd
push
enter
arpl
mov
add
test
leave
addb
sbb
cmp
and
mov
and
dec
xchg
rcll
mov
adc
ud1
push
dec
and
bound
or
inc
mov
pop
inc
add
adc
test
dec
scas
xor
fcmovnbe
or
mov
add
jl
xchg
aaa
xchg
xor
xchg
mov
pop
jecxz
xlat
ficoml
push
fcomip
cmp
sub
pop
sti
out
jle
sub
and
push
into
add
js
mov
mov
pop
mov
push
out
inc
andl
jp
icebp
rorl
lods
jecxz
lock
ja
dec
daa
and
cmpsb
mov
dec
lea
ja
and
lea
rcrb
les
ds
or
lret
dec
jle
paddd
ljmp
add
insb
popf
cmc
xor
rol
imul
in
cmp
xchg
je
adcl
and
xchg
fisttps
fmull
pop
int3
mov
or
lcall
ja,pn
add
or
push
mov
pop
cs
add
stos
pushf
mov
sub
icebp
bound
cli
jp
insl
into
mov
outsl
inc
out
push
hlt
xorb
movsl
sub
cmp
aas
roll
insl
dec
das
nop
xlat
les
pop
rcll
loope
lret
out
add
aad
pop
or
mov
sarb
in
xchg
add
jnp
ds
pop
sbb
repnz
shll
mov
je
fs
out
fcompl
sti
fldt
mov
push
xchg
sub
or
adc
stc
push
enter
scas
or
aaa
pop
leave
daa
sbb
push
or
pop
adc
adc
xchg
jne
add
xor
inc
pop
ret
pusha
std
nop
or
or
xchg
mov
cmp
rcrb
adc
popf
rorb
loop
jle
jmp
scas
push
cmp
pop
jmp
sub
test
push
xchg
xchg
test
jo
cmovp
stos
sub
jno
dec
loop
lods
outsb
jg
mov
add
pop
scas
lret
inc
bound
rolb
sbb
sar
mov
pushf
adc
lahf
repnz
jl
cwtl
imull
dec
in
dec
insl
push
or
sub
dec
pop
add
jle
push
ficomps
add
les
repnz
sub
movsb
mov
inc
aam
hlt
mov
fstpl
daa
push
movsl
aas
loope
dec
fldenv
ret
fwait
movsl
icebp
cmp
or
cltd
jmp
fs
adc
sub
jnp
pop
jmp
xchg
sbb
cli
rolb
lret
insb
ret
pop
int3
jnp
jecxz
and
lret
mov
mov
add
inc
push
add
add
or
cld
xor
inc
adc
xchg
xchg
or
out
andl
fidivrs
xchg
fiaddl
in
dec
cmp
sbb
lcall
stos
test
or
leave
add
cmp
icebp
inc
outsb
stos
call
mov
mov
or
mov
push
mov
test
cmpsl
cli
inc
popf
dec
adc
cmp
imul
mov
scas
pushl
cmp
pusha
sbb
mov
add
mov
mov
mov
cmc
add
adcb
rol
dec
jle
pushf
repz
sahf
mov
add
test
sub
pop
or
test
stc
and
loop
popf
push
and
sbb
mov
sub
push
mov
cmp
out
fcmove
dec
stos
and
orl
add
lods
sti
movsb
mov
fdivrs
jle
dec
dec
or
cmc
test
aaa
inc
and
jle
ja
jmp
sarb
cli
call
mov
mov
mov
daa
leave
dec
fisttps
out
mov
jo
xchg
fs
pop
dec
jbe
or
adc
pop
cmp
mov
push
xchg
leave
cwtl
fildll
add
enter
push
dec
stos
fsubs
mov
or
sti
sub
cmp
testl
jne
push
rcrb
jo
inc
mov
out
cmp
mov
xor
sbb
out
fs
inc
or
push
mov
dec
ljmp
imul
xchg
push
push
sub
lods
fistl
jne
dec
lock
xor
lahf
push
pop
jae
jb
or
ja
insl
aad
mov
int
cmp
mov
je
or
sbb
add
insb
xchg
xchg
or
jns
xchg
mov
lahf
cmp
mov
or
sbb
test
mov
orb
loopne
mov
adc
mov
pop
fildl
inc
orb
inc
inc
xor
xorl
mov
int3
dec
popf
lret
lods
in
pop
dec
push
movsb
sub
xchg
dec
xor
fnstsw
cmp
mov
push
fimull
enter
aam
jl
hlt
clc
testl
add
movsl
data16
scas
sbb
in
movsb
icebp
in
and
xor
inc
movsb
xchg
and
iret
inc
stos
and
mov
sbbl
std
xchg
add
or
xchg
pop
mov
add
addb
cld
xchg
or
or
fnstcw
xor
ds
inc
das
movsl
cmc
loopne
lods
addb
mov
sub
or
mov
or
pop
adc
xorl
mov
jnp
aam
mov
pop
jg
dec
sti
pop
lret
test
push
pop
pop
sub
cmp
iret
cmp
dec
push
xchg
mov
cmpsb
je
pop
aam
push
mov
pop
mov
add
adc
mov
ljmp
push
mov
movsl
pop
adc
pushf
int
loopne
push
enter
ret
pop
int3
aaa
sahf
dec
cmp
dec
xchg
sbb
hlt
adc
lock
pop
fistpl
sti
in
jp
push
loop
and
jb
shrl
jle
inc
xchg
jbe
add
sub
pop
sub
or
ja
gs
mov
push
cltd
test
mov
lret
lods
jle
imul
cs
insb
sbb
xchg
xchg
push
jp
inc
scas
dec
push
cmp
aas
jmp
ljmp
lds
arpl
xchg
jecxz
and
xor
in
jle
pop
movsl
jne
cvtpi2ps
add
jle
fldl
pop
jae
mov
aas
or
push
pop
loop
mov
push
in
rorb
bound
lods
xlat
fidivs
xor
repnz
sbb
adc
cmp
aas
mov
or
adc
cs
sbbl
sbb
jns
jbe
inc
scas
lret
fisubrl
mov
leave
sbb
and
xor
fisttps
sub
sbb
sub
je
or
dec
loopne
jmp
das
pop
dec
icebp
dec
inc
mov
lock
and
jle
mov
xorb
out
lret
out
stos
xchg
adc
dec
xchg
fdivr
mov
dec
cld
jnp
xchg
and
movsl
fsubs
and
mov
or
sbb
xor
scas
mov
cwtl
loope
push
adc
push
insl
sahf
imulb
insl
push
lds
xchg
push
add
add
sub
in
xchg
aam
lret
dec
rorb
dec
fcomip
and
inc
test
andl
je
loop
cmp
shlb
shll
mov
test
ljmp
ret
xor
add
ljmp
iret
stos
hlt
in
out
mov
cmpsb
adc
mov
xlat
shll
imul
adc
lea
insl
lods
loope
sti
inc
mov
or
and
add
push
xchg
and
js
mov
xchg
mov
movsb
xchg
lcall
in
dec
xlat
fiaddl
push
inc
lahf
lret
mov
nop
mov
pop
ret
fidivrs
push
jp
sbb
sub
int
call
push
cmp
loope
test
jg
mov
or
dec
in
and
andl
nop
pushf
repnz
dec
shrb
or
cld
cli
sahf
and
xor
bound
mov
mov
test
inc
cmp
cmp
xchg
sbb
pop
sub
adc
aas
xchg
xlat
daa
popf
std
adc
xchg
sub
cmc
aaa
sub
adc
outsb
cmp
jp
sub
mov
movsl
pop
cmpsl
jmp
pop
xor
add
sub
sbb
loop
push
call
fdivrs
adc
sub
mov
push
mov
or
jg
mov
stos
dec
shlb
nop
lea
mov
in
sbb
push
xlat
inc
xchg
test
mov
imul
sahf
or
push
jno
fstpt
jp
popa
js
mov
sahf
mov
add
cli
inc
mov
ret
add
sbb
xor
mov
sbb
subb
pop
sub
lret
mov
push
mov
nop
loop
cmpsl
xchg
and
push
push
or
subb
out
and
mov
push
lods
jo
xlat
test
int3
jg
ret
and
and
mov
test
lret
ljmp
cmpsb
repz
sbb
xchg
pop
cmpb
dec
mov
add
jle
enter
int
out
or
testb
jg
loope
popf
adc
cmp
mov
cmpsl
sub
ja
jb
xor
mov
or
in
ret
and
jp
into
or
bound
ljmp
mov
mov
xor
inc
jle
mov
add
fcompl
das
mov
test
mov
pop
push
aaa
mov
orb
sub
bnd
pusha
faddl
pop
mov
int
mov
out
xchg
jp
stos
mov
rcrb
in
js
or
ja
stos
push
xor
or
lret
in
pop
mov
mov
js
loopne
push
ljmp
sub
pusha
repnz
ds
lret
xlat
fistps
adc
push
xor
lret
mov
or
mov
or
dec
or
test
sti
or
outsl
stos
scas
bound
ja
pop
popf
mov
lock
dec
in
out
mov
loop
cmpsl
push
in
ret
pop
fucomip
mov
out
outsl
cmpsl
inc
inc
cs
inc
notl
adc
add
or
mov
inc
sti
or
mov
and
xchg
popl
es
push
inc
scas
pushf
out
popf
lods
les
push
pop
dec
inc
test
int3
enter
aam
rolb
imul
jp
imul
mov
push
notl
sbb
cmp
test
mov
sub
cmpsl
daa
subb
jmp
icebp
add
jno
add
sbb
xchg
ja
addr16
lcall
into
cmp
iret
pusha
or
jnp
or
je
mov
xorb
or
paddusw
into
add
jecxz
sbb
jmp
addl
xchg
in
sti
xorl
fadd
outsb
xchg
mov
out
pop
add
loop
dec
pop
leave
aam
or
shrl
sahf
jno
pop
mov
adc
rol
aad
imul
lods
js
outsb
add
mov
xchg
push
lds
stos
sbb
cli
test
inc
out
jle
subb
idiv
sahf
cld
sti
mov
sbb
out
sahf
call
lret
add
pop
fcomps
add
fsubs
lcall
pop
shlb
jl
in
iret
cs
jae
or
inc
dec
test
inc
mov
and
lcall
cwtl
jle
xchg
movsl
popf
push
sbb
lods
pushf
or
mov
rcrb
hlt
dec
loop
out
outsb
rcr
xchg
or
or
jle
or
jmp
rorl
cs
repnz
jecxz
and
dec
mov
mov
sub
je
in
sub
sbb
hlt
lret
int3
push
cmp
daa
or
dec
in
divb
adc
flds
outsl
or
add
sbb
clc
sahf
dec
jbe
pusha
cmp
xchg
sub
and
xchg
int
ss
frstor
inc
jb
notl
and
xchg
aam
aaa
lods
mov
xor
inc
orl
sbb
push
loop
imul
add
popf
stos
enter
jne
ret
sbb
call
xchg
movsl
aam
nop
inc
dec
pop
add
sub
dec
mov
test
jmp
pop
and
cmpsb
cwtl
out
adc
loope
clc
adc
and
repnz
outsl
dec
sub
icebp
adc
add
cmp
dec
push
adc
leave
inc
movsb
push
out
or
addr16
lcall
or
xor
loope
jns
xor
dec
add
sti
or
and
jmp
inc
mov
jp
sbb
mov
jecxz
enter
mov
data16
xchg
mov
add
daa
push
mov
inc
push
int3
push
push
mov
mov
or
aam
mov
mov
movl
mov
mov
adc
sbb
pop
aam
sub
mov
dec
cwtl
and
push
pushf
jnp
mov
dec
sbb
scas
test
xor
jg
je
adc
or
mov
lods
sbb
sub
inc
dec
test
dec
and
enter
test
imul
les
mov
xchg
jo
sti
out
int3
xchg
dec
and
fwait
sbbb
stos
cli
push
fadds
adc
test
daa
sti
or
les
sbb
jg
sub
mov
loopne
jno
js
add
outsl
add
sti
xchg
pushf
bound
xchg
lock
into
push
fdivs
push
push
push
xor
sbb
fwait
cmp
sbb
outsb
adc
xchg
dec
xchg
lret
xchg
xchg
dec
push
sbb
vphaddubq
popf
xor
add
pusha
loop
xchg
mov
test
sbb
sub
lcall
sub
jnp
lcall
stos
jl
sahf
dec
sti
movsb
cli
add
stos
mov
scas
push
sub
sti
popa
in
addr16
aaa
inc
inc
daa
fisubrs
push
lcall
jbe
pop
shlb
imul
xchg
jle
mov
enter
cli
sub
push
and
xchg
push
pop
mov
ljmp
xchg
push
movsb
adc
mov
jns
add
lods
and
cli
jmp
add
leave
mov
push
rclb
jp
mov
sub
mov
fnstsw
test
lret
roll
movb
xchg
or
sub
xor
jns
push
aas
loop
lods
mov
mov
inc
int
cmp
sbb
fwait
leave
xor
adc
or
dec
icebp
pop
inc
aaa
enter
sbb
sub
fwait
and
loop
jmp
or
ret
sbb
mov
testl
loop
sbb
mov
xchg
fstp
xchg
jmp
fs
inc
dec
idiv
pop
mov
push
xchg
mov
lret
push
jne
leave
dec
cmp
cli
add
mov
inc
inc
cltd
ds
push
js
lret
insb
add
mov
sti
jg
insl
movb
orl
cli
xor
daa
sbb
loop
push
jg
adc
loope
cmp
mov
adc
sti
in
repnz
test
and
cltd
int3
jmp
je
sti
or
or
mov
pop
ret
stos
add
xor
rorl
mov
test
pop
or
dec
mov
imul
fdivr
icebp
push
icebp
xchg
imul
adc
scas
pusha
jp
jl
fldl
xchg
out
lcall
sub
stos
shl
jb
or
jg
scas
insl
mov
cld
hlt
push
add
inc
xlat
xor
and
bound
sub
adc
shlb
sahf
pop
pop
test
sub
mov
stos
adc
sub
insb
loopne
sub
sub
out
inc
shl
decl
popf
sub
pushf
je
enter
dec
add
xor
push
and
xchg
push
adc
mov
lea
mov
pop
aam
cmp
adc
inc
icebp
fcompp
dec
sbb
ret
add
movsl
and
mov
out
icebp
jg
inc
mov
dec
lods
push
dec
jnp
inc
mov
mov
adc
jl
xor
adc
dec
sti
jg
xchg
test
popf
sbb
push
push
lahf
adc
sub
xor
aam
ja
cmpsb
fs
testl
pop
mov
sub
fistpll
xor
xchg
fwait
and
iret
sub
mov
or
les
inc
loop
orb
jl
lods
int
jno
xchg
inc
jb
xchg
jb
push
jae
or
into
iret
cltd
jbe
cmp
xchg
sbb
inc
xchg
popf
cld
adc
adc
add
add
and
inc
mov
add
and
add
fmuls
lret
xor
stos
movsl
push
xchg
rclb
xchg
sahf
mov
xor
arpl
cmpsl
sub
shrl
scas
ret
add
push
sub
sub
mov
add
cld
inc
call
mov
mov
jo
lret
jb
push
cmpsl
in
lods
push
ret
loope
clc
add
add
mov
sbb
out
jp
mov
loope
pushf
cmpsb
in
inc
and
push
fisubl
xchg
popl
ret
xchg
out
loope
lcall
enter
test
ret
jle
adcb
dec
pushf
into
pop
stos
and
sbb
dec
jmp
out
call
push
movsb
lret
mov
pusha
cli
addl
add
jae
int3
dec
loop
jle
xor
ret
nop
add
mov
add
les
int3
push
movsl
hlt
dec
and
jge
loopne
jnp
jp
mov
test
rolb
movsb
in
enter
adc
out
pop
mov
pop
inc
ffree
adc
shl
and
lds
pusha
icebp
sbb
xchg
enter
les
or
ljmp
cmp
das
outsb
push
fldt
add
cmc
ret
insb
dec
jo
test
stos
and
test
lea
nop
xor
mov
hlt
das
push
arpl
push
dec
inc
fidivrs
sahf
add
je
add
pop
mov
mov
adc
ret
test
test
mov
xchg
je
inc
or
xor
cld
xchg
pop
adc
test
int3
les
jl
xor
bound
dec
or
test
or
mov
push
and
sbb
cwtl
xchg
add
or
mov
daa
xor
xchg
adc
jns
cmpsb
loopne
cmpsl
test
int3
insb
aad
pop
inc
dec
out
ja
addl
arpl
in
popa
jmp
xor
movb
test
or
nop
mov
add
xchg
jno
ret
dec
int
jl
popf
movsl
rcll
sub
sti
adcb
rorl
nop
push
stos
sub
fistpl
pop
xchg
sbb
sub
pusha
sub
into
xchg
mov
adc
leave
or
dec
gs
and
call
inc
inc
xor
in
enter
sbb
cmp
push
test
add
or
adc
test
pop
lea
pop
add
clc
push
jb
loopne
dec
jb
jl
adc
loop
cmp
sbb
and
xlat
test
stos
add
lahf
stc
adc
xchg
adc
xchg
push
lcall
les
xor
push
lock
dec
inc
pop
jnp
fwait
inc
lret
pop
test
pop
push
adc
stos
fldcw
mov
ret
xlat
not
imul
and
popa
fstpt
push
mov
or
mov
iret
or
lret
cmp
test
ret
aas
mov
xchg
es
cmpb
lods
and
fdivrs
sti
push
fdivs
sub
sbb
hlt
mov
mov
xchg
enter
or
add
repz
cltd
enter
xor
fldcw
cmp
ja
xchg
push
ret
mov
push
adc
shll
jbe
sbb
or
add
pusha
xor
inc
add
add
sub
dec
fadd
movsb
mov
or
inc
loop
push
and
cwtl
pushf
mov
push
enter
or
add
add
xor
movsl
ficompl
jo
ret
dec
sbb
xor
cmp
cmp
jns
pop
test
sub
shlb
cmpsb
mov
call
sti
outsl
add
sbb
xor
adc
imul
add
xchg
dec
add
push
dec
mov
into
jmp
xchg
xchg
scas
mov
enter
push
jnp
rcrl
loop
shrd
or
dec
add
jne
xor
scas
test
addr16
orb
popf
sub
cmc
or
pop
add
js
cwtl
movsl
jno
or
jnp
cli
test
and
lock
dec
aad
fisttps
add
push
push
aam
push
rcrb
cmp
repnz
sti
mov
bound
notb
aad
sub
dec
sahf
inc
cmp
and
adc
loope
sti
xchg
pushf
in
lret
dec
loopne
das
xor
inc
adc
adc
inc
jle
add
loope
add
arpl
pop
pop
add
adc
jecxz
jno
xchg
pop
and
roll
inc
enter
sti
jle
in
add
repnz
js
or
mov
andb
push
in
jle
push
sub
pushf
lcall
sbb
scas
xchg
out
imul
mov
les
jmp
or
mov
xchg
push
aad
push
stos
add
test
lcall
test
sbbb
aaa
fwait
cmpsb
sbb
fwait
jnp
out
adc
add
adc
test
hlt
scas
sub
jbe
mov
aam
mov
add
ret
add
imul
mov
xlat
repz
mov
pop
sbb
out
cmp
add
pop
xor
out
sub
rol
dec
mov
in
ljmp
je
or
scas
mov
lcall
jp
cltd
jno
pushf
cmpsl
jge
lock
faddl
mov
pop
add
push
orb
mov
pop
popa
rep
xor
arpl
loop
pop
jbe
sarl
jl
mov
jne
add
xchg
jge
sahf
xchg
and
sbb
jne
mov
out
andb
imul
es
lods
insb
jl
jge
cmp
ret
jo
xchg
jnp
sub
out
inc
fdiv
jmp
movsl
je
xchg
or
int3
stos
bound
pop
or
out
mov
sbb
addr16
lret
mov
sti
shl
test
insb
repz
xchg
stc
push
cld
repz
sbb
inc
stos
xor
in
cmc
mov
or
stc
adc
push
test
jmp
push
fisubs
les
adc
mov
nop
add
fwait
jne
add
addr16
fwait
bound
mov
push
pushf
test
mov
mov
push
dec
test
push
mov
pushf
sub
imul
lea
ds
add
push
jmp
fs
leave
call
jns
hlt
test
fwait
das
dec
or
adc
out
daa
pushf
bound
mov
add
push
inc
add
or
iret
repnz
add
xor
insl
pop
or
jecxz
pop
std
and
sahf
rcll
in
adc
fimull
adc
outsb
shr
or
loope
dec
mov
test
mov
lea
mov
and
mov
pusha
mov
pop
and
mov
movsl
inc
jp
andb
push
call
mov
ret
dec
test
cmp
inc
aam
add
and
inc
movsl
lods
push
adc
daa
les
or
adc
dec
jbe
negb
leave
das
jne
push
dec
jecxz
lret
sti
or
pop
mov
js
or
adc
int3
xor
jge
inc
orb
aas
andl
mov
lsl
addb
dec
aam
in
push
pushf
and
mov
frstor
mov
sahf
jmp
adc
int
add
into
push
mov
pushf
sub
push
xor
xchg
mov
in
stos
adc
jo
mov
inc
add
push
jecxz
adc
in
xchg
test
lea
mov
push
jge
cs
add
push
push
shll
push
jmp
inc
lahf
shlb
pop
inc
sbb
mov
mov
leave
lods
push
inc
add
dec
xor
daa
dec
add
mov
jg
in
cmpl
popa
fiadds
rclb
leave
cmp
inc
je
mov
icebp
lcall
mov
sbb
mov
mov
jne
adc
add
cmpsl
stos
fsubs
sbb
and
add
mov
dec
mov
insb
aam
or
sub
pop
xchg
adc
popf
sti
pop
jecxz
loop
shl
test
or
xchg
jecxz
mov
pop
adc
xor
dec
hlt
lods
adc
mov
mov
push
lock
mov
ja
lods
fildll
repz
xor
cmp
sbb
push
push
mov
push
movl
adc
inc
movsl
xchg
jb
cmpsl
adc
jecxz
scas
adc
push
push
fs
lea
pop
shl
jecxz
ret
lret
jae
cmp
jae
push
clc
and
add
mov
mov
ljmp
cmp
mov
mov
jne
adc
xor
ret
loope
xlat
test
xchg
mov
out
inc
xorl
lds
adc
jns
dec
adc
fisubrl
jmp
mov
xchg
jns
mov
jg
daa
adc
adc
das
or
inc
sub
or
xor
jp
int
xor
adc
into
jg
sti
sbbl
xchg
xchg
jmp
dec
or
sti
and
push
in
inc
sahf
addr16
jnp
addr16
ds
and
pop
pop
mov
jl
mov
repz
insl
fs
sbb
pop
mov
int3
inc
mov
mov
pop
and
jmp
fsubr
icebp
scas
cmc
adc
test
or
movsl
je
lret
jnp
jmp
lret
icebp
and
jmp
sahf
ljmp
rolb
jb
inc
stos
mov
les
les
xchg
sti
test
js
imul
xor
iret
add
cmpl
sbb
jmp
dec
jb
out
lret
rcrb
andl
mov
add
sbb
in
cmp
lcall
jle
popa
mov
mov
testb
pop
push
pusha
shlb
in
lea
jns
push
pusha
or
pop
mov
pushf
or
push
push
iret
lret
sbb
jne
mov
in
add
aam
aaa
mov
jle
lret
imul
pop
pop
mov
inc
repz
push
add
jbe
xor
dec
in
add
sub
ficoml
add
pop
ljmp
push
ret
jbe
mov
out
xor
pop
mov
inc
mov
outsl
jae
fs
sub
mov
mov
jp
and
stos
dec
lds
mov
dec
inc
cwtl
add
inc
jno
int
dec
sahf
ret
test
dec
ljmp
loop
sub
or
add
xchg
push
and
dec
fcoms
pop
fisttps
fidivrl
sbb
rcll
sti
or
sbb
jno
or
in
sbb
fwait
les
ret
xchg
pop
lods
sub
test
lea
or
add
mov
out
incl
pop
mov
imul
fnstsw
xchg
test
aaa
icebp
xchg
gs
add
xor
aaa
pushf
pop
pop
xchg
mov
cmp
nop
push
sub
es
gs
les
shl
or
aam
ljmp
in
dec
sub
stc
ret
cmp
dec
jmp
inc
xchg
or
add
push
orl
out
repnz
enter
or
jecxz
push
pop
push
adc
jne
mov
mov
jbe
sti
or
hlt
loop
fld
xchg
or
das
mov
cwtl
rcrb
cli
stos
sbb
stos
lcall
inc
sbb
mov
mov
fdivrl
rorb
jnp
or
lock
inc
mov
fstps
sbb
mov
sub
stc
jg
pop
sub
les
push
scas
into
pop
sbb
or
in
mov
xor
jle
dec
cmp
lret
aad
xor
addl
decl
add
or
sbb
fwait
jecxz
pop
notb
bound
in
xchg
jp
ja
out
sbb
addr16
enter
push
call
add
movsl
rorb
mov
int3
fildl
jnp
bound
sbb
dec
cmc
test
sahf
inc
jge
outsl
mov
mov
mov
xchg
arpl
dec
jge
fsub
out
sahf
pop
je
sub
enter
pop
loop
pop
loop
jae
pop
jmp
or
jg
xor
adc
jmp
rcrl
jnp
sub
stos
push
sti
lds
mov
jbe
push
daa
adc
rcrb
stc
add
aad
adc
fldenv
xchg
mov
and
or
jo
cwtl
adc
xor
test
jl
xchg
addr16
pop
orb
push
mov
pop
insl
jecxz
xchg
lods
fsubl
adc
xchg
mov
mov
cs
ds
cmp
imul
mov
test
and
cs
jp
icebp
lret
sub
or
xchg
jp
sbb
imul
and
loopne
lods
add
push
lahf
sub
sbb
into
ljmp
lea
rcr
rorb
cmp
shlb
add
mov
jns
repz
and
pop
fwait
and
faddl
andb
sbb
icebp
loop
mov
or
adc
add
pop
pushf
pop
cli
xor
neg
xchg
lods
notb
add
cs
mov
cmp
xor
pop
jp
adc
int
bound
cld
iret
popf
stos
sti
or
fisttpll
cmpsl
mov
sti
adc
sbb
fsubs
mov
mov
sbb
push
adc
sarb
pushf
add
mov
and
push
and
out
outsb
leave
ret
cltd
scas
mov
loop
test
adc
sbb
pop
pop
add
sub
or
movsb
repnz
mov
jo
or
pushf
xchg
out
jecxz
bnd
add
sub
nop
jno
dec
dec
out
ljmp
stos
push
jp
sti
in
dec
dec
cmp
je
mov
jecxz
insb
test
cmp
jge
jno
lcall
int3
sti
leave
adc
inc
dec
inc
cmpb
fcomps
xchg
cs
in
mov
ret
push
add
ljmp
and
mov
leave
jg
pop
insb
shl
mov
sbb
loopne
cltd
add
mov
hlt
jge
sbb
in
rolb
mov
cmp
jnp
cwtl
dec
inc
mov
sbb
jne
pushf
loopne
scas
test
push
mov
xorl
into
dec
arpl
inc
sub
adc
or
jno
inc
les
push
add
movsl
add
shrl
aam
or
imul
and
popf
nop
push
ljmp
xchg
inc
das
fwait
test
add
fcomi
cmp
cmc
les
add
sbb
push
jecxz
xchg
or
push
fs
cmc
testb
test
mov
movsl
pop
out
mov
mov
and
movups
sbb
sbb
sbb
lods
loop
push
add
and
jge
add
mov
imul
sti
dec
add
daa
inc
into
mov
enter
sbb
xchg
cmpl
add
sti
adc
popf
jnp
jnp
add
je
cmp
cli
pop
or
repz
xchg
stos
ret
int3
test
xlat
xchg
popa
int
xchg
imul
jbe
nop
mov
leave
or
insb
xor
in
mov
mov
mov
cmc
push
push
jle
mov
mov
adc
and
loope
pop
arpl
cld
in
adc
lahf
std
mov
fs
lds
adc
or
jo
pop
adc
xor
fistpl
stos
push
lods
dec
adc
sahf
pushf
lret
ret
out
aam
sub
push
bound
sbb
inc
jb
scas
test
jmp
push
rcl
ss
and
or
or
push
fs
xchg
jno
les
add
adc
test
xchg
sub
ds
mov
inc
imul
test
fistpll
orl
ja
or
xor
ret
mov
lods
mov
jmp
js
and
xor
push
xchg
inc
pop
mov
jl
and
clc
cmp
xchg
or
inc
and
fisubs
adc
cmpsl
cltd
jg
pop
sbb
mov
aad
adc
popa
aam
sbb
adc
cmpsb
pop
mov
jo
and
stos
xor
xchg
call
dec
add
mov
cld
insl
jmp
jl
add
jg
roll
dec
aad
lock
test
mov
enter
lds
add
adc
jne
mov
mov
or
lods
in
sahf
loope
lods
xrelease
repnz
mov
cmc
mov
push
jo
daa
push
or
hlt
jl
add
outsl
push
cmp
or
arpl
cmp
iret
rcr
cmp
and
arpl
cmpsb
hlt
inc
sub
data16
jbe
pop
test
sub
pushf
stos
pop
frstor
loop
cs
add
jp
mov
mov
cmpl
adc
cmp
adc
in
adc
mov
lret
iret
outsl
push
lods
pop
popa
cld
adc
push
ja
or
dec
mov
cmpsb
and
mov
mov
jb
mov
pop
or
add
in
pop
cmp
icebp
gs
push
lds
call
dec
inc
sbb
or
pop
pop
lea
dec
sbbl
rcrl
add
andl
lock
adc
scas
and
inc
popa
or
xchg
lds
fnstcw
mov
dec
hlt
test
outsb
test
arpl
pushf
iret
negl
ljmp
ljmp
mov
insb
adc
int
dec
repz
cmp
jne
test
sahf
and
mov
lret
in
out
dec
lods
lods
int
insb
dec
push
xchg
lret
dec
jmp
mov
in
jnp,pn
sub
enter
jmp
sub
or
cmp
lods
lret
sub
rol
cld
daa
daa
popa
jmp
cmp
mov
jg
xchg
cmpsl
rcll
or
loopne
push
xchg
imul
sar
xorb
inc
add
movsl
popf
cmp
pop
call
jae
xor
and
pop
jo
add
lcall
enter
push
pop
jmp
adc
cmc
pop
inc
cmp
adc
dec
pop
bound
fnsetpm(287
jb
int
out
jmp
push
fs
mov
or
pop
addr16
or
hlt
jge
jp
add
jge
sbb
xchg
jg
inc
mov
loop
push
sbb
inc
dec
pusha
adc
add
hlt
arpl
adcl
outsl
fs
pop
ds
call
dec
fiaddl
shlb
mov
pop
push
loope
gs
into
sbb
or
jmp
xor
jge
cli
jmp
call
cmp
cmpb
pusha
gs
inc
sub
rorl
jno
adc
push
lret
das
js
daa
push
data16
add
jle
into
mov
ficomps
out
jo
enter
mov
inc
add
adc
or
aam
sahf
push
sti
sbb
movaps
jno
xor
stos
ret
incl
aam
repnz
adc
test
push
out
mov
add
imul
push
jle
push
xor
jno
mov
mov
out
or
shrl
sbbl
rcrl
test
or
cmp
sbb
mov
enter
fmul
sahf
or
ljmp
cmp
subl
mov
pop
fadd
daa
imul
jg
xor
pop
mov
test
lods
aam
mov
out
mov
push
in
xorl
jns
mov
jns
lds
pop
inc
mov
shrl
mov
mov
data16
popf
scas
es
and
jmp
pop
jge
jno
fs
loop
xor
loopne
pop
je
mov
test
mov
adc
repnz
push
sbbl
enter
in
imul
fiadds
mov
dec
dec
in
cmpsl
and
das
fisubs
push
mov
cmpl
fwait
pop
jnp
add
fs
loop
mov
xor
jp
jle
aaa
je
push
shlb
sbb
lods
divb
andl
mov
cmc
ret
lret
aad
fld
push
add
or
lcall
xchg
xchg
les
in
sub
adc
repz
pushf
add
in
inc
fwait
adc
sbb
repnz
push
mov
and
xchg
mov
and
jo
sub
leave
mov
mov
push
pop
inc
bound
daa
in
jbe
mulb
dec
cmp
jmp
jae
imull
push
adc
cmp
xor
sbb
lret
fs
repz
jle
mov
or
push
pop
mov
sub
and
arpl
out
je
adc
sbbb
inc
loopne
mov
adc
add
xor
sub
in
pop
pop
pop
lcall
dec
flds
mov
adc
cmp
xor
adc
imul
jle
imulb
or
cmp
and
cltd
pop
sbb
neg
mulb
bound
dec
pop
push
lods
ret
inc
lea
dec
rolb
mov
stc
aas
add
cld
mov
movsb
add
enter
and
inc
push
fisttpl
mov
lret
sbb
rorb
call
test
insb
movsb
icebp
daa
mov
mov
inc
pop
mov
loop
push
sarb
mov
and
sbb
test
xor
insb
fcomps
push
lods
ss
je
int3
adc
rcl
xchg
lods
adc
cmpsl
xor
decb
xlat
push
sbb
mov
into
jbe
adc
mov
inc
xchg
mov
es
mov
pop
sti
lret
or
hlt
and
and
jecxz
nop
cmp
mov
sahf
popf
cwtl
or
adc
xchg
lcall
jge
pop
push
add
mov
adc
sbb
mov
pop
je
pop
or
sti
add
mov
fmull
stc
cmpsb
mov
add
fwait
sti
dec
scas
ret
mov
rcl
out
add
sbb
cmp
jecxz
add
loopne
sti
lods
dec
push
xchg
mov
sbb
or
mov
dec
xor
call
add
mov
xchg
jle
testl
mov
ret
fcomps
call
jmp
dec
ljmp
and
or
fcoml
dec
cmp
push
or
sub
fisttps
push
inc
or
jae
je
inc
call
pop
scas
fs
adc
add
decb
fldl
sub
sub
icebp
mov
std
imul
add
enter
mov
mov
mov
shlb
fildll
sub
sub
lods
or
scas
in
and
dec
mov
inc
xor
orl
mov
jmp
int
aaa
jmp
subl
int3
ret
daa
je
cmc
hlt
clc
push
push
dec
ret
jecxz
jne
push
adc
adc
jae
sbb
in
adc
mov
lret
jmp
dec
call
push
enter
jns
add
sbb
pop
inc
popa
xor
jmp
mov
mov
sar
js
push
mov
sbb
mov
and
dec
arpl
add
jo
ljmp
popa
mov
sub
jp
xchg
mov
lret
scas
inc
push
int
stc
jno
fimuls
fidivrs
ficoml
fwait
sbb
sub
pop
mov
dec
ljmp
filds
jmp
add
xchg
addl
inc
inc
sbb
aaa
and
sbb
aad
daa
test
bnd
adc
jge
jecxz
cmp
mov
push
push
sahf
mov
inc
xor
jge
les
xor
popf
fbstp
mov
add
push
dec
bound
inc
push
and
fldz
enter
repz
push
cmc
xor
int3
jno
lds
insb
adc
mov
rcll
decb
cmpsb
add
or
push
nop
scas
mov
das
sti
or
in
std
rcll
scas
insl
add
dec
ficoml
lods
push
mov
repz
xchg
aad
or
ror
aam
ljmp
rcll
xchg
lret
dec
mov
cld
or
lods
mov
inc
sub
mov
sub
adc
imul
iret
xchg
inc
test
ss
mov
dec
sub
cmc
stc
cmp
out
mov
mov
push
push
jecxz
int3
in
inc
add
pop
add
sbbb
mov
push
lea
stc
and
test
adc
xchg
sti
aaa
mov
pusha
xor
and
lods
in
fistpl
loope
stos
pop
stc
jnp
xchg
mov
xchg
xlat
and
je
idivl
ret
out
dec
aas
add
daa
outsb
push
mov
mov
mov
data16
sub
into
iret
mov
ret
repz
pop
mov
dec
int3
add
enter
adc
dec
mov
or
lock
mov
lods
movb
or
jecxz
push
out
loop
or
js
or
in
cltd
mov
jle
xchg
imul
sub
loop
scas
mov
cmp
rorb
sahf
push
aad
or
mov
mov
add
shlb
cmpsb
enter
imul
or
cmpl
push
shlb
dec
scas
shrb
ljmp
pop
sub
test
test
movsl
repnz
shrl
mov
mov
test
ficoml
sub
pushf
test
xchg
mov
loopne
mov
test
ss
out
ljmp
data16
add
test
dec
sub
in
pop
cmp
pusha
lret
lods
xor
mov
jo
xchg
cmp
lret
test
adc
mov
jae
jecxz
mov
int3
jle
cli
stos
aam
movsb
xchg
jo
or
in
pop
or
sbb
dec
ret
ret
out
imull
in
stos
mov
jnp
lods
scas
fldcw
push
roll
xchg
fmuls
inc
scas
sbb
ret
xor
cwtl
incb
fmull
inc
pop
sahf
jo
pop
jmp
push
pop
push
mov
push
push
out
cmpsb
and
iret
dec
stos
push
push
jmp
jecxz
cmc
xchg
lea
stc
dec
pop
fs
out
add
pusha
jno
and
jge
and
jns
aaa
push
mov
out
shll
and
cmc
cmp
hlt
inc
adc
xchg
cwtl
pop
xchg
pop
sub
mov
mov
mov
fstpt
pushf
push
adcl
add
jno
dec
les
jo
stos
subb
icebp
in
roll
adc
add
leave
push
push
imul
fimull
push
lahf
lret
mov
popa
xor
int3
out
xchg
mov
and
pop
pop
loop
lea
sar
pop
xor
lahf
ret
call
into
or
cmpsl
lods
xchg
adc
subl
imul
adc
out
imul
xchg
ret
rcrb
cmp
scas
and
xor
loope
enter
add
mov
xchg
iret
mov
add
xor
pop
push
push
push
in
cld
push
xchg
loop
mov
jns
lret
mov
dec
popf
das
fs
fcoml
and
cmp
mov
test
mov
jl
or
popa
xchg
sub
mov
leave
sbb
sahf
repz
or
pushf
lcall
jnp
mov
ret
aad
or
movsl
ss
leave
jae
or
sub
aam
xchg
mov
jo
gs
pop
jb
add
fldl2e
push
loop
cmp
pop
pop
add
jecxz
add
sub
ficomps
dec
ss
pop
inc
and
xchg
mov
lds
push
adc
inc
outsb
jne
sbb
mov
stos
fucomip
or
add
in
mov
mov
icebp
mov
mov
sub
movsl
int3
inc
xchg
int3
insb
mov
adc
cmp
cmpl
lcall
insb
test
in
pop
fs
jmp
adc
lahf
add
dec
sahf
xor
xchg
mov
lret
cmp
mov
loope
cmp
test
test
inc
sar
mov
adc
lcall
sub
mov
dec
dec
lcall
inc
mov
or
pusha
cmp
clc
xchg
into
hlt
mov
xchg
outsb
fldenv
sbbb
and
adc
and
inc
in
cli
sahf
popf
push
jg
sbb
adc
or
pop
fimull
and
sbb
scas
adcl
sbb
and
lret
mov
xchg
jns
loope
mov
sti
int3
dec
test
add
testb
sbb
icebp
pop
mov
push
pop
mov
jne
int
mov
test
cmp
push
xchg
test
jmp
int
sbb
adc
popf
or
or
pushf
xor
int
enter
in
xchg
jbe
and
fsub
inc
les
int
bnd
xchg
inc
imul
outsb
test
inc
fimuls
inc
sbb
pop
fadd
or
insb
repz
cmpsb
fsubs
push
js
mov
cmp
addr16
sbb
xchg
cmp
daa
pop
push
hlt
jne
adc
add
jecxz
mov
call
xchg
rolb
addr16
hlt
add
pop
sbb
add
pop
sti
mov
push
das
pop
xchg
jecxz
cmp
dec
insl
or
movsb
jp
mov
pop
push
jo
xchg
inc
loopne
mov
ds
shrl
xchg
push
arpl
lret
push
in
adc
pushf
lea
stc
xor
je
or
fistpll
out
cltd
nop
shll
add
in
in
inc
dec
cld
sub
xchg
cmc
add
test
rorl
ljmp
mov
pushf
outsb
jns
xchg
jmp
pop
movsb
mov
or
mov
jge
orl
xor
into
and
dec
cmp
xor
icebp
push
mov
das
jno
cltd
sub
ret
inc
or
ret
hlt
cwtl
cltd
jg
inc
ljmp
add
ja
push
int3
jg
mov
enter
sub
in
insb
aas
xor
ret
mov
scas
sub
xchg
test
cmp
inc
sbb
mov
pop
pop
cmp
and
into
leave
addr16
push
mov
lods
loope
test
or
ja
mov
orl
jle
shl
or
loope
lea
insl
jmp
jmp
out
sbb
lret
sahf
lahf
ja
xchg
out
outsl
push
scas
pop
je
pop
fisubs
add
adc
xchg
cmpsl
xor
xor
jl
mov
mov
ret
loop
stos
pop
outsl
sbb
mov
sub
mov
mov
scas
or
push
inc
pop
incl
adc
pop
loope
dec
out
jecxz
mov
pop
mov
dec
decl
stc
add
sarb
fidivl
jg
jecxz
mov
aaa
test
pusha
ret
push
inc
push
fs
fnstenv
jb
jl
mov
sti
dec
aam
jb
js
jns
inc
das
fs
inc
loope
ret
stos
xor
dec
jecxz
dec
sarb
mov
lret
mulb
adc
add
loop
lock
sahf
repz
mov
bound
mov
push
and
addr16
mov
and
adc
sti
pushf
inc
loope
cmc
sub
cmp
adc
add
xor
xchg
jp
adc
mul
add
jmp
push
lock
addr16
arpl
outsb
shrb
loop
mov
sbb
and
insb
pop
sahf
sub
inc
out
sub
and
xchg
xor
sbb
xchg
sti
sub
ja
cli
mov
cld
cli
out
int3
cmp
sbb
sbb
mov
icebp
mov
add
pushf
sub
dec
in
jns
dec
out
mov
xchg
pop
cli
jp
push
sub
mov
dec
adc
subb
scas
repz
fwait
sbb
lret
scas
sbb
aam
cli
outsl
or
stos
adc
adc
sahf
sbb
fs
mov
sub
lcall
push
adc
lret
in
dec
dec
pusha
push
jmp
and
sbbl
pop
xchg
and
pop
scas
jmp
and
les
xchg
pop
out
inc
sbb
sub
popa
inc
cmp
btsl
ds
out
sti
cwtl
outsb
xor
lcall
sahf
pop
xchg
cmp
xlat
lcall
divb
jae
aas
call
fiaddl
push
push
dec
pop
aam
adc
sbb
aad
push
sahf
sub
mov
mov
nop
fdiv
lret
hlt
xchg
inc
movsl
adc
sahf
mov
popf
int
jb
xchg
rcl
mov
adc
inc
inc
rolb
ja
or
xor
mov
shlb
lret
jo
in
sbbl
loop
mov
pop
js
cmp
add
pop
lds
dec
and
mov
adc
xchg
jnp
mov
pop
jmp
xchg
jge
mov
add
test
xchg
push
lahf
nop
jmp
mov
add
mov
fs
sbb
int
shrb
in
popa
pop
push
rcrb
andl
imul
adc
sbb
xchg
rcrb
and
movsl
dec
das
popf
shlb
adc
jge
dec
mov
xor
movsb
pop
xor
outsl
cltd
shrb
xlat
jmp
or
mov
or
fs
int3
push
or
pushf
and
ret
sub
mov
xchg
pop
or
sub
adc
mov
xchg
fcoml
lret
xor
ljmp
mov
inc
addr16
jecxz
and
bnd
mov
push
aas
add
and
dec
add
xor
in
call
fucom
mov
adc
in
sahf
ds
scas
rorb
fwait
push
or
and
jne
fwait
jns
inc
jns
incb
xchg
imull
out
push
movsb
push
test
inc
jp
fiaddl
js
adc
xor
int
mov
lea
add
stos
mov
out
rep
subl
aam
sbb
psubusw
outsb
call
mov
cmp
call
cmc
movsb
jmp
sbb
sub
and
xor
adc
adc
imul
push
xchg
nop
or
insb
hlt
or
out
inc
sub
jb
pop
cmp
add
popa
jns
fidivrl
and
shlb
ret
dec
rcr
mov
xchg
xor
or
lea
hlt
and
in
sub
xlat
in
xor
and
scas
or
lds
jge,pn
fucompp
adc
andl
jne
mov
test
gs
mov
ss
dec
movsl
notb
mov
fistpll
inc
mov
enter
cmc
mov
xchg
std
subb
adc
out
loope
pop
add
jns
jo
sub
jne
outsb
mov
or
stos
andb
ss
mov
push
jecxz
loop
daa
ljmp
cmp
lcall
sbb
lds
add
sahf
mov
mov
ret
sub
jo
sbb
and
dec
test
das
mov
call
mov
sub
push
fiaddl
inc
sbb
jmp
jle
jmp
xor
push
dec
stc
or
out
mov
jecxz
daa
cli
xchg
orb
push
ljmp
dec
push
sti
or
incl
inc
movsl
in
jecxz
fs
into
dec
add
add
mov
inc
jmp
jmp
data16
sbb
fdivrs
add
mov
xchg
mov
repz
xchg
imul
inc
inc
and
mov
aad
in
das
jle
dec
adcl
fisubl
fcompl
fsts
bound
pop
push
je
mov
push
test
or
pop
or
push
sbb
mov
scas
inc
adc
adc
pop
repnz
or
mov
pop
sbb
mov
mov
movsb
cmp
movl
ja
pushf
jnp
cmp
popf
pop
pop
pop
mov
sub
dec
pop
mov
dec
bound
test
inc
test
adcb
and
pop
scas
xchg
stos
xchg
mov
movsb
in
mov
push
xchg
insb
add
and
hlt
repz
mov
mul
push
mov
hlt
sahf
adc
movsl
cmp
inc
push
dec
ficoml
pop
cltd
sub
jne
loope
out
test
add
fcomps
pop
ret
stos
scas
or
pop
imul
loop
icebp
shlb
icebp
in
xchg
lahf
aam
in
jbe
inc
icebp
sti
icebp
int
imulb
push
and
loop
and
xchg
mov
cmp
cltd
push
cmpsl
mov
dec
jp
sar
pop
cltd
add
sbb
enter
mov
jle
pop
jmp
adc
sub
lods
push
fisubs
mov
adc
test
adc
mov
mov
sbb
or
inc
xor
dec
or
add
aas
ja
mov
inc
mov
adc
or
pop
dec
scas
xchg
repz
test
ljmp
and
bound
rorl
sbb
adc
cwtl
inc
int3
rcrb
pusha
and
mov
xor
inc
add
mov
lods
sbb
nop
or
jbe
or
stos
xor
repnz
movsl
mov
fsubrs
mov
lret
fs
inc
or
push
pusha
lret
call
ret
adc
add
fdivl
push
mov
out
sub
andl
insb
add
and
lods
mov
or
pushf
dec
inc
shll
or
pop
ret
mov
push
and
popa
xchg
cmpb
pop
std
hlt
in
or
ret
jnp
fstpl
imul
shrb
sub
outsb
lret
and
insb
sub
inc
or
xchg
and
cs
mov
ficoml
repnz
lret
lods
xor
lret
inc
lret
imul
or
fisttps
mov
movsb
cmpsl
out
scas
outsl
mov
inc
dec
xchg
test
or
ja
cmp
jp
lods
or
mov
adcl
or
xchg
xchg
mov
cwtl
jmp
stos
jnp
icebp
arpl
cwtl
iret
push
inc
cmp
repz
push
roll
sbb
adc
pcmpeqb
push
js
fwait
mov
mov
clc
and
ret
enter
xor
jno
push
out
pop
mov
stos
pusha
push
test
add
mov
bound
rol
add
loop
dec
daa
ret
pop
jno
andl
push
sbb
mov
imul
ficomps
imul
cmc
es
cs
insl
adc
inc
sbb
push
pop
mov
lods
push
loop
mov
bound
jp
test
movsb
test
into
jl
inc
rorb
mov
fucomip
push
xor
fistpll
add
push
loope
xor
gs
sub
xchg
aam
stos
rorl
not
fstl
jae
stc
xchg
inc
adc
adc
out
add
mov
sbb
out
jl
fldcw
or
sbb
xchg
cmp
cmpsl
or
fstp
pop
mov
pop
sbb
or
je
sbb
pop
orb
sub
insl
hlt
push
xchg
in
or
enter
push
push
aas
xchg
mov
sbb
adc
mov
mov
or
aam
inc
cwtl
and
stos
push
jmp
push
repz
jge
cmp
dec
lods
out
ljmp
loop
mov
xor
leave
test
or
fidivs
subb
nop
data16
hlt
mov
int3
cmpsl
xchg
stos
fwait
es
and
add
mov
ljmp
mov
sbb
mov
dec
xchg
div
adc
test
rorb
aam
lcall
jge
fwait
imul
test
lods
in
imul
sub
int3
adc
jmp
inc
fildl
sub
lcall
mov
pavgw
pusha
add
push
adc
mov
enter
inc
adc
add
movsb
lock
ds
add
push
test
insb
out
pop
leave
insl
sub
inc
rclb
push
jecxz
sub
fiaddl
xchg
sub
ret
dec
mov
mov
movsl
insb
enter
pop
and
fists
pop
push
push
mov
les
in
or
popf
out
push
fwait
xchg
dec
mov
mov
js
outsb
pop
sbb
and
stos
and
les
mov
int
sbb
in
sbb
aad
enter
enter
enter
enter
enter
enter
stos
adc
lock
xchg
out
int
out
or
jnp
or
jmp
fsubr
clc
sub
sub
sbb
mov
shl
inc
push
xchg
push
push
push
movzbl
pop
mov
mov
add
lahf
outsb
pop
or
pop
shrb
mov
ret
dec
mov
out
in
in
push
out
and
movsl
aaa
and
push
and
aam
pop
xor
xchg
lret
scas
pop
jmp
and
hlt
call
push
ret
sbb
sub
clc
add
pop
pop
xchg
dec
sti
add
imul
jbe
dec
ds
or
stos
cmp
out
stc
cmp
jmp
in
mov
adc
cmp
sub
cwtl
add
pop
xlat
nop
sub
push
mov
aaa
adc
lods
cli
adc
js
jo
jne
lahf
mov
sbb
fs
lret
pop
xor
popf
aaa
adc
sub
cmp
stos
sub
jnp
pop
int
sbb
in
jnp
jmp
xchg
sbb
jle
in
int3
hlt
dec
lods
adc
cs
dec
addr16
mov
out
or
in
and
or
scas
scas
insb
aad
in
dec
xchg
add
sub
mov
sub
les
mov
repz
and
cli
jle
jo
jnp
out
pop
pop
lods
ficompl
add
imul
xchg
or
jns
sbb
mov
lret
mov
jmp
mov
inc
dec
or
or
sub
and
lret
out
pusha
in
pop
js
das
push
sbb
xchg
adc
jno
sbb
or
aas
adc
popf
adc
subl
push
dec
ret
aam
add
pushf
mov
inc
jle
out
int3
in
popa
adc
aad
aad
and
fdivl
cmpsb
popf
add
mov
fdiv
out
push
fcoms
jle
iret
sub
lret
push
mov
xchg
pushl
jle
popa
fcompl
cld
sti
mov
cmpsb
or
test
rolb
les
rcrl
in
cli
mov
mov
xchg
pop
es
sub
shrb
movsl
into
add
jnp
stos
stos
adc
pop
cmpsb
aaa
insl
andb
push
sbb
push
pusha
loope
cld
pop
movsb
fs
mov
adc
push
test
inc
and
subb
inc
sbb
repz
pop
or
aam
test
cmp
scas
mov
dec
dec
cmp
add
or
shll
insb
sub
lret
call
push
xchg
mov
or
rolb
xor
jp
imulb
ud1
push
movsl
stos
push
mov
lea
clc
sub
push
jnp
ret
add
in
cld
aad
sahf
sub
lahf
jno
jle
rorb
orb
jmp
ret
inc
xchg
xchg
bound
mov
fcoms
push
daa
sbb
pop
pop
mov
mov
sbbl
cli
in
inc
cmp
sbb
int3
mov
shll
mov
sub
jnp
and
and
ffreep
dec
sub
add
call
and
nop
enter
loopne
mov
and
cltd
sub
or
dec
leave
push
pop
adc
mov
mov
stos
jnp
iret
mov
roll
add
xor
ret
jns
ret
or
fldt
mov
daa
push
or
daa
popf
fisubl
xchg
ret
cmp
js
adc
mov
pusha
and
ljmp
mov
mov
mov
sub
jns
xchg
in
test
sub
lret
sub
add
in
jle
test
bound
adc
aas
jns
std
or
or
call
sti
daa
inc
dec
inc
je
scas
lea
sarb
cmp
inc
sti
sbb
iret
lcall
or
push
pop
or
push
call
pop
add
sub
icebp
push
jecxz
mov
sahf
dec
mov
xchg
xchg
movsb
mov
push
mov
xor
sbb
das
cld
ds
fs
sbb
xchg
mov
scas
mov
jecxz
lcall
orb
push
movsl
pop
sbb
push
jge
cmp
or
data16
ja
into
in
lret
xchg
xlat
call
ret
shl
pushf
push
push
mov
mov
mov
nop
in
les
inc
cmp
test
bound
push
fcom
std
out
mov
je
movsl
or
push
adc
pop
pop
test
xchg
mov
or
jmp
xchg
test
adc
in
xchg
jg
pushf
add
dec
mov
faddl
pop
insb
mov
shll
sub
int
andb
push
jmp
loop
ret
lea
xchg
mov
pop
adc
sbb
inc
sahf
pop
fsubl
ficoml
out
jmp
mov
test
xchg
and
adcl
fwait
out
aam
aam
jecxz
add
clc
jl
cmpl
or
xchg
push
movsl
std
roll
jne
cmp
xchg
mov
dec
jnp
push
leave
ja
out
dec
ds
push
mov
sbb
mov
sub
jge
out
dec
test
shlb
ret
icebp
rcr
fcomps
int3
insl
jnp
fnstenv
cwtl
xchg
xchg
lock
bound
int
lods
inc
dec
aam
enter
hlt
xor
sub
mov
xlat
xchg
outsl
shlb
addr16
add
je
in
cmp
push
sbb
sbb
lret
shlb
ficompl
lea
xlat
adc
mov
mov
lods
lock
or
xchg
in
sbb
xchg
mov
loope,pn
andl
inc
mov
lods
add
int3
subl
jp
mov
int3
sbbl
cli
lods
movsl
xor
dec
jb
cmp
xchg
sti
movsb
daa
jnp
push
push
arpl
mov
ret
jb
sbb
jl
ljmp
insb
int
fdivrs
bound
cmpl
sahf
adc
and
pop
sub
xchg
mov
adcb
lds
rcrl
pop
pop
fucompp
fcomps
mov
lret
mov
mov
jg
hlt
sbb
or
xor
lret
int
imul
add
outsb
add
incb
aaa
adc
cmp
mov
das
push
insl
or
jmp
cmp
inc
movsl
scas
mov
xchg
cld
mov
or
mov
int
stc
scas
inc
jne
in
mov
adcb
ljmp
mov
lcall
pop
fsts
gs
enter
test
or
cmp
fdivrl
mov
iret
idivb
out
lock
testl
xchg
sub
arpl
sahf
sub
lcall
mov
ret
mov
mov
scas
inc
movsl
ret
adc
adc
cli
aam
repnz
sbb
pop
mov
stos
shlb
sbb
add
or
int3
mov
movsb
fdiv
fdivrs
ljmp
ds
in
imul
cs
xchg
aam
push
scas
mov
push
out
out
cmc
adc
inc
mov
xchg
cltd
or
inc
mov
out
faddl
jnp
das
cmp
mov
fcoml
in
pushf
dec
mov
adc
lret
lea
sti
dec
jno
test
dec
dec
push
adc
mov
lcall
adc
aas
lahf
mov
outsb
dec
lret
jno
stos
jl
sti
out
add
mov
or
jle
pop
stc
xchg
lea
addr16
sub
iret
sbbb
lock
stos
dec
ficoml
daa
sbb
add
popf
test
shlb
bsf
lret
cmp
push
sbbl
scas
or
sbb
pop
cwtl
sub
aaa
adc
dec
mov
popa
sbb
or
fistpl
bound
lods
jo
push
xchg
fnstsw
add
sub
ficoml
or
dec
jne
in
ret
fildll
xlat
mov
mov
and
jnp
push
xor
dec
mov
inc
arpl
sub
push
sub
fsubl
adc
xor
subl
std
or
add
ljmp
cltd
lods
stos
or
icebp
or
adc
dec
jns
or
mov
adc
ret
add
or
xlat
pusha
in
jb
ret
push
xor
mov
push
inc
ljmp
fs
mov
rcr
inc
pop
stos
xchg
rol
jge
outsb
jecxz
xchg
fwait
or
shrd
jno
cmp
pop
mov
dec
dec
movl
xorb
push
jg
fistps
test
loopne
movsl
in
out
ret
test
fcmove
push
ja
add
add
repz
leave
pop
pop
jo
cltd
cmpsl
dec
mov
fs
sbb
push
fimull
pop
test
sub
or
adc
dec
outsl
sbb
lock
or
mov
pop
stos
out
mov
test
xorb
adc
aad
sub
or
and
push
pushf
pop
sbb
in
mov
mov
popf
in
or
jecxz
inc
mov
sub
sti
bound
push
dec
pusha
dec
decb
sub
cwtl
sub
adc
imul
xor
xor
cwtl
add
jnp
xchg
les
push
rcl
les
shrb
ljmp
or
sbb
roll
jg
xchg
imul
std
cmpsb
cmp
jle
inc
and
test
sahf
xchg
add
enter
iret
stos
test
adc
sahf
lret
mov
adc
mov
dec
jecxz
jnp
subb
inc
sub
xchg
push
and
ds
out
in
cmp
sti
inc
push
add
shrl
mov
in
clc
daa
mov
mov
add
jp
dec
sub
outsl
out
adc
lock
pop
pop
xor
xor
fmul
fs
xor
cmp
out
sbb
rorb
fmuls
jns
adc
leave
xchg
lock
inc
call
out
dec
add
arpl
sub
add
enter
and
pop
mov
fidivl
or
fadds
and
pop
push
popf
jnp
jae
in
test
sbb
popf
inc
into
pop
sbb
cmpsl
xor
push
mov
inc
into
xlat
clc
jp
inc
insb
stos
adc
mov
mov
iret
lret
clc
mov
in
inc
addl
xor
testb
pop
adc
mov
mov
test
jns
or
lret
cwtl
out
dec
fsubs
or
scas
pop
lock
aas
aam
loope
scas
aam
insb
push
pop
hlt
adc
out
xchg
fcomps
es
arpl
sbb
dec
push
fldpi
stc
xor
jg
ret
adc
add
int
lahf
or
jge
cmp
in
cltd
inc
sti
shrl
cmpsl
mov
cltd
ss
scas
xchg
in
es
or
push
xor
inc
sub
xor
xlat
es
adc
sbb
loope
jo
fiadds
jnp
or
xchg
push
and
jl
gs
mov
ljmp
adc
shl
and
out
pop
jmp
out
jno
enter
out
inc
jmp
lds
pop
xor
andl
jg
push
or
rorb
or
xchg
outsb
ficoml
jmp
mov
sahf
fstp
lret
fs
pop
mov
ficomps
fsubrl
ret
adc
or
scas
movsb
fcmove
adc
sbb
mov
mov
or
fwait
lock
sti
xor
cmpsl
adc
adc
mov
les
add
jns
mov
cwtl
mov
into
mov
jge
fs
movsl
mov
inc
adc
fldt
pushf
dec
lcall
call
inc
out
stos
mov
out
add
inc
mov
in
inc
cmp
scas
jbe
sti
xor
sarl
out
mov
sub
pop
fwait
insl
stos
in
push
push
fmuls
cltd
testb
mov
sub
sti
pop
fisttps
xor
mov
lret
test
jle
push
xor
mov
push
repz
das
lret
dec
dec
push
fcompl
jle
xchg
mov
sahf
mov
imul
lods
inc
mov
mov
xor
or
mov
mov
imul
dec
jo
xor
pop
jae
cmpsl
push
mov
loope
js
or
pop
out
mov
and
and
mov
sub
push
jge
enter
int
scas
int3
inc
mov
les
mov
imul
shll
sbb
in
sub
dec
sti
mov
imul
mov
sub
dec
movsl
xchg
push
cmp
fwait
mov
push
data16
cmpsb
and
add
sub
test
xchg
mov
cmovns
test
ljmp
test
push
call
push
and
jmp
sub
dec
and
sub
and
pop
xchg
sub
xchg
xchg
out
push
sub
in
inc
cmp
mov
sbb
imul
mov
imul
cwtl
sbb
sahf
lods
mov
mov
xor
imul
hlt
adc
jl
jmp
or
stos
lret
sbb
int3
ds
pop
pop
scas
jmp
js
repz
or
xchg
mov
lods
fisubrs
repz
mov
movsb
and
popa
incl
int3
mov
mov
inc
ja
jecxz
jp
movsb
jmp
sti
sbb
test
lahf
add
aad
outsb
mov
or
or
loop
jmp
mov
dec
inc
push
mov
mov
cld
inc
jle
adc
jl
sub
stos
add
hlt
ret
mov
xchg
or
sti
sahf
dec
arpl
mov
pop
call
mov
inc
jns
insl
sub
xor
int3
add
fwait
les
call
mov
sbb
lret
sbb
fistl
sub
add
cld
sbb
mov
push
and
ja
jno
pop
inc
imul
xlat
cli
inc
mov
mov
mov
dec
or
dec
rcll
dec
int3
hlt
int3
sahf
jmp
mov
mov
jle
add
dec
fdivr
aas
test
sahf
dec
test
ficomps
dec
mov
in
inc
mov
jmp
enter
mov
sbb
popf
xchg
hlt
clc
dec
bound
pop
sbb
xor
fdiv
or
cs
jle
int
enter
dec
mov
mov
int
xor
test
mov
jecxz
mov
cmpsl
icebp
test
or
mov
push
ret
or
test
mov
inc
mov
or
sbb
push
xchg
and
aas
jmp
sbb
jle
cmp
or
adc
sbb
testb
xchg
xchg
xchg
cmpsl
mov
pop
mov
push
hlt
cld
mov
je
xchg
inc
sti
loop
roll
mov
test
sub
cmpsl
fdivs
jbe
call
xchg
jb
jbe
sub
push
jb
jmp
popa
ret
cli
bound
ffreep
pop
sbb
loopne
xlat
cli
jmp
out
or
jp
or
int
or
sub
mov
push
and
ljmp
pushf
repnz
insl
mov
mulb
xor
mov
mov
jle
xchg
enter
xchg
mov
sub
and
adc
sub
aaa
mov
int3
sub
scas
pop
in
out
aam
aas
scas
adc
nop
xchg
testl
xchg
jmp
inc
mov
ret
ljmp
cmp
in
movsb
repnz
test
rorl
mov
jl
jle
popf
jae
or
sub
ffree
xchg
stos
fwait
out
dec
sub
dec
out
or
loop
loopne
add
cmp
sbb
push
ss
nop
inc
mov
jae
pop
xchg
into
jmp
ljmp
cmp
jp
xchg
stos
jge
icebp
mov
xchg
inc
das
pop
mov
dec
cmc
dec
and
das
lds
sbb
ficomps
movsb
add
sbb
cli
cltd
sub
fimuls
movd
pop
mov
push
mov
mov
add
sbb
movsb
addb
lret
push
xor
jae
in
mov
inc
leave
inc
or
in
inc
or
das
insb
dec
mov
push
xor
lret
int
aam
and
in
sbb
jmp
shlb
fisttps
in
or
ds
jp,pn
cmp
out
cwtl
mov
cs
xor
xchg
and
add
push
sahf
sub
cmp
jnp
in
and
loop
and
pusha
insl
or
sub
inc
aad
fadds
pop
sbbl
sti
pusha
les
pushf
mov
shlb
mov
aam
pop
cli
xchg
mov
fs
mov
push
fisttpl
bound
jbe
cmp
call
inc
inc
jnp
pushf
or
add
mov
outsl
hlt
stos
sahf
daa
addl
mov
add
mov
cmp
add
fisttps
into
pushf
cmp
jp
cmp
and
adc
test
ficompl
test
cmc
push
pop
xor
pop
test
jecxz
jnp
or
pop
scas
in
ret
xor
sti
fcmovne
and
inc
xor
mov
fldt
js
and
jp
sbb
xlat
add
push
and
jecxz
popa
aaa
add
add
pop
outsl
dec
inc
popf
cmp
int
js
aam
lods
imull
inc
lret
mov
ret
mov
mov
addl
loop
pop
outsl
jnp
mov
ss
daa
lahf
out
mov
adc
adc
scas
lcall
inc
push
push
and
push
test
xchg
dec
scas
lret
test
sti
inc
push
scas
dec
push
xchg
cmp
orb
inc
fs
movsb
fisubl
call
xchg
xchg
lods
xchg
push
loop
addr16
mov
sbb
aas
int3
sbb
aad
mov
cli
loop
loope
mov
bound
movsb
and
jg
setnp
iret
pop
xchg
push
pop
movb
add
add
dec
xchg
fisubl
cmp
or
xchg
loop
inc
movsb
gs
mov
inc
sti
mov
les
xor
ret
mov
in
pop
add
test
cmp
fisttpll
jno
mov
mov
sbb
sbb
loope
sub
add
sub
xchg
adc
loop
push
push
enter
mov
nop
or
loop
sub
cmp
xor
ss
push
and
inc
les
lcall
cmp
in
pushf
jbe
dec
je
dec
icebp
push
jmp
xor
popf
popf
out
into
lock
insl
movsl
adc
mov
mov
jle
push
adc
fs
xor
cmpsl
xor
dec
add
fisubrs
loop
xchg
sbb
test
in
out
fldcw
mov
mov
jmp
ret
push
sbb
sbbl
pop
xchg
and
jbe
test
pop
jmp
lods
sub
lods
push
or
cmp
pop
xor
in
mov
xchg
xor
xchg
or
sbb
popa
push
stos
jmp
mov
ljmp
mov
jmp
sub
mov
sbb
testb
movsl
xor
add
sti
dec
jg
inc
mov
stos
mov
adc
add
jb
subb
or
push
or
sti
test
aaa
ret
push
mov
sub
sti
jbe
push
insb
or
testb
out
arpl
jg
jge
test
mov
stos
add
out
and
cmp
test
jno
mov
pop
push
in
gs
sti
jle
ret
out
cwtd
cmpsl
xlat
enter
push
loop
lea
push
cwtl
dec
fs
addl
xchg
mov
out
subb
sub
cmp
inc
imul
out
into
lea
xabort
ja
sbb
and
mov
mov
xchg
sub
mov
jle
ret
inc
negb
mov
inc
mov
pop
test
pop
dec
mov
xchg
ret
push
cld
adc
push
mov
dec
das
jecxz
outsb
movsb
cmp
rorl
add
add
mov
xchg
dec
lods
fwait
iret
or
popa
pop
push
rcrb
int3
sbb
insl
mov
mov
mov
pop
cli
or
lods
inc
add
mov
cmp
fs
outsl
int3
mov
ret
jecxz
addr16
mov
jle
outsl
dec
addb
sahf
mov
sti
adc
push
sahf
aaa
jne
js
or
ret
movsl
cs
dec
clc
push
dec
xor
loop
sbb
out
leave
mov
dec
sub
bound
xor
pop
ret
cmpsl
fwait
insl
mov
sti
sub
mov
clc
pop
das
or
add
ljmp
pop
test
in
mov
or
xchg
es
mov
andl
stos
shlb
push
push
mov
andb
shlb
add
scas
cmpsl
pushf
aam
out
xchg
in
fs
shlb
jbe
or
scas
mov
add
les
je
ljmp
mov
jnp
int3
push
out
push
add
dec
sti
inc
filds
mov
jnp
and
sti
sub
ljmp
andb
push
sahf
mov
add
or
int
out
inc
out
addr16
loopne
push
jle
scas
or
js
xchg
xchg
inc
mov
push
mov
mov
popf
inc
jl
insb
mov
dec
xorb
inc
jle
dec
mov
out
dec
mov
clc
mov
cli
and
arpl
jns
enter
in
insb
jo
mov
jo
outsl
testb
test
push
dec
mov
jge
sbb
dec
push
outsl
cmpsb
push
fwait
int
cmp
sti
or
jns
or
jg
cmpsl
lea
fcompl
add
add
mov
or
jg
iret
stos
out
test
out
jecxz
pusha
adc
xor
xchg
sahf
add
jb
mov
dec
or
fmull
xchg
jge
pop
sar
shl
out
mov
mov
mov
adc
psllw
aaa
imul
inc
lods
and
push
scas
pop
adcb
push
pusha
loop
sub
pop
mov
jg
mov
inc
pop
cmp
loop
push
scas
test
add
scas
add
or
call
add
cmpb
xchg
and
nop
outsb
sbb
aam
adc
and
add
cltd
xchg
movsl
xor
lods
ljmp
add
sbb
outsl
mov
adc
and
shrl
hlt
or
sub
and
lds
pop
aas
scas
mov
and
xchg
scas
andb
adc
inc
test
cli
sbb
daa
loope
inc
and
pushf
test
xchg
jg
push
sbb
icebp
adc
sbb
out
xor
stc
xor
adc
jmp
loope
inc
sub
inc
add
dec
push
add
arpl
push
sti
jecxz
sbb
mov
insl
aaa
pop
out
jg
adc
xor
decl
dec
icebp
sub
push
rcrl
aad
lock
xlat
adc
mov
mov
ret
aam
sub
pop
addr16
pop
insl
mov
xchg
rolb
dec
repnz
and
aam
xor
or
lret
pop
lods
push
pop
clc
jns
int3
movsb
xchg
mov
out
xchg
mov
inc
xor
inc
xor
cwtl
mov
or
xchg
jo
aad
jns
push
mov
daa
ret
lret
sbb
les
mov
shl
loop
pusha
fmull
mov
fsubs
cmp
cmc
fucomi
daa
or
or
jge
ret
jp
dec
mov
sub
xrelease
lcall
movsb
test
mov
idivl
into
mov
dec
sbbb
jns
push
pushf
fcmove
repnz
ljmp
loopne
sub
in
lods
add
inc
aas
adc
popa
dec
movl
xchg
adc
pop
sub
mov
xchg
outsl
cwtl
fcomps
mov
and
shl
dec
outsb
push
std
dec
in
cmp
rcrb
add
loope
out
or
hlt
lcall
into
mov
sbb
ljmp
mov
flds
push
popf
lock
cwtl
cltd
sbb
mov
and
push
push
xchg
inc
inc
cmc
ljmp
or
pop
sti
or
mov
pop
popf
jno
inc
sbb
aaa
add
mov
int
inc
ds
xlat
jp
and
mov
jle
test
out
nop
push
lea
loope
lret
push
lcall
in
stos
lret
pop
call
xchg
aam
mov
arpl
in
pop
add
test
aam
scas
cli
mov
jp
xlat
mov
scas
mov
mov
nop
mov
test
dec
mov
xor
adc
cmp
sub
push
mov
lret
lods
pusha
faddl
popa
lea
fs
ja
loop
inc
jno
lret
data16
jecxz
mov
fsubs
pusha
xchg
pop
lods
fwait
test
ret
mov
mov
call
mov
loope
add
push
sbb
ret
test
mov
dec
mov
and
test
iret
leave
lods
es
inc
int3
sbb
xor
inc
xorb
call
or
mov
push
pop
cmp
bound
fmull
sub
mov
cld
daa
repnz
sti
int3
and
inc
cli
shll
jp
pop
push
jns
cmpsl
xchg
xor
sti
pusha
int3
or
test
inc
repz
mov
fcmovne
sti
add
add
inc
test
and
mov
lds
aaa
mov
or
push
cmpsl
adc
loop
adc
xchg
xchg
add
push
lcall
mov
test
cltd
dec
sub
in
lds
out
aas
outsl
arpl
sbb
pop
int3
mov
xchg
sub
or
lahf
sahf
xchg
jmp
jle
cwtl
xor
pushf
movsl
in
aam
pop
pusha
shlb
cmp
cmc
icebp
aam
in
pusha
je
mov
icebp
inc
inc
cmp
popl
adc
mov
pop
jmp
arpl
xchg
fs
arpl
cmc
cltd
stc
inc
cmp
xchg
mov
push
sbb
and
mov
dec
ficoml
jns
lock
fdivrp
add
addb
add
and
push
pop
shl
clc
aam
movsb
push
repnz
inc
lods
out
adc
cmpsl
push
jnp
dec
out
out
iret
mov
or
sti
test
cld
les
pop
jmp
xor
enter
test
add
arpl
repnz
lret
push
xchg
sbb
pop
adc
sti
ljmp
lea
aaa
or
outsb
stos
out
and
mov
lock
jae
sub
add
or
mov
push
dec
aas
ficoms
inc
adc
adc
lea
push
dec
jne
repz
lock
mov
xorb
mov
and
jbe
or
ret
insb
movsl
jbe
mov
out
or
dec
and
add
sbb
in
and
ljmp
push
adc
and
jmp
bound
insb
pop
adc
shll
mov
adcl
xor
sbb
andb
mov
mov
xchg
lock
cmpsb
inc
mov
mov
outsl
add
bound
icebp
adc
jge
daa
mov
mov
pop
or
inc
add
jge
pusha
adc
inc
sbb
jle
rcr
add
mov
jo
or
les
jle
cmp
ljmp
jge
scas
ja
sub
call
fwait
leave
xchg
sub
test
xor
je
rorb
frstor
push
into
mov
daa
sbb
test
popa
aaa
paddusb
adc
ljmp
mov
sbb
incl
cmpsb
sarb
mov
push
inc
repz
xchg
pop
jle
inc
fnstenv
push
jo
test
jae
mov
adc
adc
iret
mov
jae
pop
outsb
adc
xchg
sti
ss
push
fs
dec
ret
in
jge
ds
ret
inc
daa
push
mov
sbb
ss
adc
cmpsl
je
scas
fisttps
jle
sar
fdivrl
mov
insl
xor
aad
divb
seto
mov
xchg
dec
jle
adc
push
cmpl
jle
mov
pop
js
mov
scas
fimull
in
inc
fdivl
data16
or
ljmp
je
test
mov
pop
sub
inc
adc
sahf
fsubr
imul
cltd
int3
push
jo
js
iret
aad
bound
pop
and
andb
call
sbbl
shll
mov
or
aas
push
mov
dec
leave
inc
notl
mov
sub
add
dec
inc
out
adc
sbb
push
dec
sub
mov
bound
cli
ljmp
xchg
loop
or
outsb
pand
lret
xchg
stc
jg
movsl
sti
inc
sahf
dec
inc
inc
pop
sti
dec
dec
mov
in
int
cwtl
sbb
int3
lret
and
pusha
add
jns
enter
ljmp
rcr
out
ljmp
or
negl
cltd
pop
fdivr
fidivl
adc
cmp
add
pop
or
cltd
sbb
dec
nop
sahf
scas
xchg
lock
xchg
mov
push
sti
andl
inc
xor
out
js
pusha
adc
add
push
out
into
test
dec
xchg
idivl
xchg
mov
push
insl
test
push
cli
sub
aam
aam
or
push
mov
shl
imul
xchg
in
sarb
sub
or
ret
andl
popa
push
jmp
sub
jp
in
bound
popa
push
mov
mov
dec
iret
sub
cmp
push
hlt
in
cmpsl
dec
in
push
push
and
add
jmp
cwtl
push
cwtl
inc
lret
jl
iret
xlat
in
inc
push
int3
lcall
add
add
fwait
add
lods
jb
xor
test
std
sbb
in
int
and
sbb
std
jnp
sbbb
or
push
ljmp
xchg
xor
dec
add
test
xchg
xchg
fadds
dec
sub
lahf
out
sbb
jl
and
and
adcb
push
xchg
mov
in
in
sbbb
sub
cmp
and
lods
adc
out
sbb
push
rorl
sub
jl
hlt
fnsave
sbb
call
jmp
pop
add
push
cmp
stos
inc
aas
aas
arpl
imul
mov
int3
sbb
or
or
idivl
iret
cmpsb
inc
mov
sub
cmpsb
adc
jg
repnz
add
fadd
adc
rorl
sbb
fistpll
out
aad
jae
mov
inc
push
shrd
mov
rorl
jnp
and
dec
adc
popf
or
push
mov
icebp
mov
hlt
leave
sub
mov
arpl
mov
xor
dec
adc
stc
xchg
imulb
xor
lret
sub
repnz
push
push
add
ljmp
daa
icebp
sbb
pop
gs
pop
cmp
fildll
sbb
lret
dec
out
xor
addr16
jmp
add
ljmp
mov
aaa
sub
leave
call
ret
cmp
lock
shlw
ss
inc
fs
iret
stos
insl
cmp
cmp
mov
sti
movsl
cli
cmp
fucomi
sbb
outsl
add
inc
push
pop
xor
push
sub
sbb
andl
adc
sbb
rorb
or
fs
out
shrl
add
mov
int3
xor
add
mull
aas
aaa
lds
lahf
jle
sub
cli
add
loop
imul
lcall
xchg
mov
nop
sub
jo
jl
popf
dec
scas
mov
xor
mov
xchg
inc
or
inc
mov
jl
jne
fstpl
mov
mov
inc
ret
call
out
popa
outsl
dec
in
incb
mov
add
stos
adc
inc
cmp
pop
sar
adc
push
dec
adc
popa
or
mov
jnp
jp
sub
mov
int3
xchg
sti
mov
daa
jl
add
andb
and
cld
xchg
ret
cmpsl
fbstp
mov
or
in
adc
cwtl
mov
mov
mov
dec
adc
rolb
mov
loop
dec
icebp
addb
add
or
inc
add
sub
lods
js
inc
and
inc
stc
push
cmp
mov
jo
cmpsl
mov
adc
dec
dec
jp
test
mov
add
jno
mov
std
sbbl
fcmovnb
hlt
int3
and
popa
dec
push
cmp
dec
mov
and
sti
stc
fisubrs
adc
xor
pop
pop
rcrb
setne
push
insb
push
cli
out
sbb
mov
mov
es
into
xor
sub
mov
iret
pop
cmpsb
test
mov
inc
mov
pop
das
sbb
cli
cmp
xchg
pushf
mov
lock
test
add
push
jecxz
add
repnz
scas
mov
pop
xor
xor
jle
stc
rcr
repz
add
in
lea
fisubrl
in
mov
xor
mov
bound
push
xchg
sbb
and
and
and
ljmp
xor
xchg
or
and
and
add
adc
cltd
and
cmc
ret
ret
popf
pop
and
adc
dec
and
inc
into
aaa
mov
pop
les
lcall
lods
adc
das
adc
test
test
sbb
orl
jg
int3
movsb
sub
mov
std
subl
mov
sub
or
add
imul
inc
mov
and
sahf
mov
loope
dec
sti
inc
mov
xor
mov
add
in
jp
sbb
pop
rolb
scas
in
pushaw
dec
sbbb
push
mov
adc
pusha
mov
mov
leave
ret
dec
andb
cmpsb
lock
or
mov
or
mov
lcall
shr
sti
push
les
scas
enter
xor
adc
xor
lods
int3
and
dec
sub
sub
and
jp
sahf
sub
insb
push
dec
mov
lods
iret
loop
mov
mov
xlat
rol
mov
mov
adc
sub
mov
in
push
call
clc
push
int3
dec
add
pop
adc
cmpsb
adc
ljmp
mov
cmp
push
mov
pushf
mov
sbb
pop
mov
adc
or
aad
add
adc
push
xchg
adc
out
bound
and
popa
inc
or
adc
sub
fs
lods
pop
xor
xchg
cmp
sbb
ja
ljmp
sbb
movsb
sbb
cmp
mov
or
pop
ljmp
sahf
pop
jg
cmpb
jb
mov
daa
jnp
in
aam
push
pop
mov
dec
ret
inc
enter
cmpl
adc
mov
xor
or
mov
test
aas
clc
xchg
daa
jle
pop
push
adc
adc
sti
push
ret
std
xor
imul
or
mov
iret
mov
pop
jmp
adc
push
ret
aaa
push
repz
inc
and
jle
aad
cmp
pop
out
dec
cld
mov
cmc
inc
sbb
pushf
in
mov
call
cmc
call
or
aam
mov
or
mov
dec
push
in
movsl
mov
mov
popf
pop
push
jmp
rcll
mov
enter
or
fsubs
ljmp
test
xchg
sbb
jb
pop
jp
sub
shll
mov
dec
aas
ret
shrb
shl
add
hlt
mov
es
out
fdivl
or
mov
inc
aas
jmp
movsb
std
dec
xchg
push
xchg
inc
mov
jb
fsubr
adc
insl
lcall
je
decl
in
ret
xor
inc
lret
push
daa
push
lods
ret
das
inc
or
fcoml
add
jl
cmc
scas
mov
adc
push
cmp
stos
sub
pop
adc
inc
and
adc
mov
inc
adc
sbb
sub
or
pop
rcll
in
sbb
stos
jb
sbb
fisubs
scas
popa
popf
and
jmp
out
sbb
sub
es
shl
arpl
pop
les
insb
jne
sbb
repz
test
repz
lret
push
and
loope
xor
sbb
movsl
jmp
int3
add
mov
fwait
andb
cwtl
jmp
movsb
sbb
pop
mov
sahf
lret
sub
push
cwtl
test
lret
or
adc
xchg
or
test
arpl
adc
push
add
cmpsb
add
std
xor
in
jmp
mov
lods
sub
aad
or
mov
repz
je
mov
mov
and
or
daa
cli
add
lods
call
rcr
xor
jmp
xor
addb
repnz
rcrb
inc
rcrl
push
inc
xor
jecxz
xchg
std
add
ret
push
ja
mov
mov
jge,pn
jp
mov
jmp
icebp
icebp
jmp
lahf
mov
aaa
cwtl
sub
out
or
sub
arpl
imul
or
sahf
add
or
pop
add
fwait
pusha
xchg
in
ficomps
sti
int3
mov
fwait
subl
cmp
int3
cld
cmp
cmp
repnz
pop
lods
into
sti
clc
cwtl
in
lcall
add
lods
mov
jl
lea
stc
rorb
pusha
push
and
xor
fs
pop
xchg
stc
lret
pop
ljmp
enter
add
aas
fadds
shll
xor
inc
movsl
jno
sbb
xchg
addr16
xchg
add
pop
std
mov
cmp
mov
addr16
cld
sbb
les
je
xor
push
cmc
test
sti
sti
int
mov
cmpl
cmp
cmp
out
aas
rorl
add
xchg
data16
iret
sahf
aam
inc
xchg
imul
loope
push
incl
pushf
xchg
push
jg
movsb
pushw
popf
mov
dec
fadd
adc
scas
jle
mov
xchg
out
sahf
lret
add
jle
dec
xor
cmp
or
pusha
xchg
or
add
int3
aam
adc
jge
mov
pop
xor
daa
adc
cmp
addr16
stos
jg
fcmovb
cmp
dec
into
repz
jp
sbb
pushf
cli
sub
daa
or
insb
ss
mov
sub
pop
or
mov
scas
loope
cmpb
ror
inc
sbb
or
xchg
test
in
or
xor
push
dec
daa
xchg
outsl
int
adc
loop
cmc
popa
jmp
sahf
inc
jno
shll
int3
fs
aad
jl
notb
movsl
dec
into
inc
sahf
insb
cld
xchg
xchg
outsb
lcall
jbe
aaa
jle
sub
in
xor
pminub
aad
adc
fsubp
inc
in
adc
xor
add
jl
int3
or
cli
adcb
pusha
lret
leave
fnsave
das
inc
sub
enter
or
sbb
testl
add
mov
sbb
stos
adc
leave
jb
jnp
or
cwtl
fcmovnb
outsl
jb
mov
pusha
adc
jp
lret
sbb
mov
and
loop
and
test
sti
cmpsl
js
shll
aas
je
push
int3
and
mov
inc
and
xchg
mov
sbb
test
dec
scas
mov
out
test
outsb
daa
jb
xorb
and
and
addb
out
xlat
dec
outsb
push
dec
stc
enter
out
adc
xor
lret
js
fmulp
push
or
dec
loop
andb
inc
inc
adc
andb
mov
or
addr16
adc
cs
push
add
arpl
mov
xor
dec
jnp
jne
xor
int3
shll
jns
mov
rolb
int
scas
je
add
dec
sbbb
pushf
add
sbb
mov
xchg
rolb
sbb
int3
pushf
mov
loop
ret
and
test
in
push
enter
add
test
mov
jno
dec
jne
xchg
dec
xchg
xchg
push
xchg
lcall
and
inc
jns
pop
outsb
mov
insl
push
fs
mov
mov
inc
xchg
mov
xchg
lods
mov
adc
adc
sbb
cld
ret
sti
adc
fs
enter
fisttps
and
aad
mov
cmpsb
sbb
mov
xor
push
loopne
push
loop
and
fnstcw
push
dec
into
mov
divl
inc
sbb
sbb
add
dec
or
push
clc
jge
cli
pop
or
inc
das
test
jbe
adc
mov
lds
xor
repnz
add
cwtl
nop
fiaddl
inc
iret
or
jl
aad
test
or
outsl
imul
pop
ret
addb
loop
mov
mov
stos
jnp
sub
xchg
sbb
add
inc
pusha
xchg
adc
imul
add
xchg
pusha
xchg
out
repnz
loope
sub
pop
add
loopne
ds
jns
aaa
dec
add
mov
int3
mov
mov
rolb
and
adc
adc
push
data16
and
or
push
push
pop
pop
or
stos
call
imul
sti
mov
inc
aaa
shll
outsb
add
adc
sbb
mov
jmp
sub
dec
or
mov
push
cmp
imul
mov
cld
or
mov
test
sahf
or
jle
pop
insb
loopne
jmp
push
dec
adc
ja
or
scas
fcoms
mov
mov
dec
hlt
mov
sbb
enter
rolb
sub
out
xor
sub
out
mov
arpl
movsb
push
jecxz
loop
movsl
jmp
cmpsb
mov
jmp
push
cs
and
imul
cltd
fisttpl
adc
lods
mov
dec
mov
cmpsl
into
add
movsb
sahf
jmp
mov
cli
mov
add
loop
adc
aaa
test
mov
jb
rcrb
mov
mov
cwtl
ljmp
add
adc
sub
pop
repz
push
repnz
push
cmp
dec
call
xor
lcall
aaa
testl
test
jb
bnd
jmp
cmpsb
mov
loope
mov
daa
das
xchg
daa
mov
cmp
test
in
outsb
in
or
mov
add
mov
or
cmp
jp
shrl
inc
xchg
addr16
sub
xchg
stc
pop
cwtl
or
sti
add
mov
pushf
stc
stos
in
push
inc
out
std
enter
orb
sbb
xchg
js
mov
push
insb
roll
adc
or
out
lret
push
jae
int3
lds
lea
jnp
ljmp
add
lods
pop
fsubs
sti
test
push
fidivl
sbb
les
lret
sbb
mov
or
push
xor
les
ss
scas
and
aam
xor
cli
movsb
popa
cmp
je
ret
dec
cli
or
inc
les
enter
cli
loopne
scas
lret
jmp
stc
lcall
sti
pop
in
adc
jmp
mov
adc
mov
push
out
xor
icebp
int3
daa
inc
sub
in
xor
push
mov
test
stc
frstor
bnd
roll
pusha
mov
adc
sub
pop
sbb
mov
and
pop
jmp
fs
jmp
adc
sti
in
add
xor
ljmp
inc
ds
lods
push
call
mov
add
roll
add
mov
hlt
jp
sbb
out
sbb
gs
vcomisd
mov
xor
jnp
mov
sub
pop
xchg
sub
lods
shll
fisttpll
aad
or
popf
cmp
or
enter
jle
push
rol
and
cmpsl
xor
cs
push
dec
js
loope
inc
xor
lea
dec
and
or
mov
or
dec
mov
inc
add
xor
add
in
fs
cld
xlat
pop
fwait
test
xchg
jg
mov
pop
int3
jae
in
arpl
cmpsl
lods
or
jp
pop
sbb
lods
repnz
lods
sti
sbb
pop
and
inc
bt
lret
lret
sbb
dec
dec
jecxz
les
jmp
ljmp
stos
in
inc
sub
jmp
add
sbb
stos
fs
in
sbb
push
add
push
scas
mov
push
sbb
stos
bound
andl
jnp
pop
cmpsl
lods
iret
pop
loop
add
scas
sub
ror
sti
fsubr
add
add
lret
mov
jns
int3
arpl
xchg
sbb
jbe
xor
add
lret
xchg
or
test
inc
add
and
inc
addb
push
fisttpll
in
or
jge
cmpsl
icebp
dec
add
int3
add
cmp
movsl
or
inc
test
lret
push
mov
dec
jne
test
fstpt
ror
mov
pop
mov
adc
xchg
ds
fsubp
pusha
push
fiaddl
ret
lods
jae
sbb
add
jnp
mov
inc
sub
mov
inc
sahf
pop
lret
xor
sbb
stos
stos
call
pop
int3
insb
sub
jecxz
xchg
xor
xchg
jg
in
fs
adc
mov
hlt
adc
test
jbe
int3
sub
mov
mov
pop
pop
stos
cmp
inc
add
mov
frstpm(287
push
mov
add
stos
or
rolb
inc
or
cmp
loop
push
in
fiadds
mov
ljmp
push
cmpsb
lcall
cld
or
inc
jecxz
mov
cmpsb
jbe
pop
and
les
adc
roll
mov
inc
repnz
jecxz
mov
pushf
mov
lret
jnp
or
cltd
rcll
pop
or
cwtl
pop
lock
sub
add
jl
nop
pop
sbb
cli
ljmp
inc
aam
or
or
mov
cld
xor
pop
aas
xorl
adc
out
push
add
xorl
lea
inc
test
add
sub
nop
jns
sub
sbbb
shr
inc
or
repz
inc
mov
sub
push
add
mov
enter
test
testl
mov
rcl
cld
rorb
movsb
ror
repnz
or
jecxz
in
mov
lret
adc
scas
popa
in
lahf
cwtl
lret
loope
pushf
add
daa
or
fisubl
lcall
add
adcb
test
adc
ret
rorb
adc
cmpsl
pop
add
pop
push
lahf
sti
add
lds
stos
pop
add
gs
push
clc
fs
push
add
dec
ret
xor
int3
sbb
pop
pop
ds
pop
int3
mov
test
add
cmc
int
or
scas
fs
mov
imul
aaa
ret
iret
loop
mov
imul
mov
pop
lds
adc
cld
popf
imul
add
arpl
jns
jp
mov
aad
pushf
inc
sbb
out
aaa
repz
repz
loop
sbb
dec
mov
hlt
jnp
jecxz
andl
cmp
mov
xor
sub
dec
orb
mov
jle
dec
int3
in
mov
aam
scas
mov
int3
xor
movsl
add
pop
xorb
lret
add
mov
ds
add
enter
mov
sti
fisubrs
sub
add
cld
inc
fsubp
test
pop
mov
mov
jmp
mov
mov
fistl
add
xchg
push
jmp
scas
imul
mov
cli
pop
ret
xchg
and
xchg
pop
add
cwtl
adc
push
jp
dec
or
mov
mov
repz
jae
mov
add
repnz
cmpsl
mov
out
add
lods
adc
xlat
add
or
pop
xor
orl
icebp
xorb
stos
gs
lea
arpl
push
mov
xchg
sbb
sub
jg
mov
hlt
pop
add
iret
int3
lds
movsl
cld
mov
scas
insb
roll
mov
scas
lds
mov
ljmp
cmp
sahf
and
push
ret
leave
aam
cmpsl
rcrl
shrl
popf
cli
sub
mov
mov
cmc
imul
jbe
dec
sbb
pushf
sbbb
sbb
xchg
fsts
sahf
mov
pop
test
aaa
les
xchg
dec
or
add
int3
jns
cltd
push
les
push
sub
inc
mov
sbb
jmp
mov
mov
pop
pushf
cmpsb
sub
xor
pop
xchg
jp
and
or
repz
mov
ds
cmp
in
les
push
fwait
jo
out
mov
repnz
jge
testl
or
xor
lock
pushf
pop
rcll
xchg
xor
stos
and
loope
mov
adc
in
lds
lahf
fisttps
push
daa
cmp
bound
jp
inc
enter
scas
aad
xchg
mov
push
adc
imul
sti
or
ffreep
popa
mov
sbbl
sar
push
ja
sbb
mov
insl
fldenv
sbb
cmpsl
arpl
dec
daa
mov
shrl
sahf
ret
lret
mov
fisubs
push
xchg
mov
mov
dec
loop
xchg
repnz
push
push
jle
adc
mov
cmp
int3
out
inc
fiadds
stos
cmc
mov
sti
ret
push
jae
out
les
xor
xchg
or
add
movsl
ror
pop
imul
push
mov
pop
inc
dec
mov
adc
and
cli
stos
add
xor
or
cld
fwait
lods
fcomps
inc
adc
mov
pop
insb
ljmp
add
adc
or
mov
push
mov
mov
int
fcom
outsb
xchg
pop
ss
or
cmp
mov
inc
adc
xor
or
hlt
lock
rolb
push
pop
sub
sti
xor
in
mov
mov
mov
cmc
or
repz
mov
bound
fst
jmp
mov
add
add
add
inc
jg
mov
add
pop
cmpsl
cmp
xor
adc
jle
adc
mov
and
mov
insl
jbe
cli
jmp
jmp
add
or
imul
cmpsb
dec
jnp
sahf
out
imul
mov
jno
fs
mov
shrb
bound
cli
pop
jg
adc
mov
or
shlb
dec
lcall
xchg
jmp
fcoml
xchg
out
mov
out
in
imul
xchg
sbb
pop
sub
rolb
mov
les
sbb
mov
mov
dec
push
aaa
or
fwait
jmp
es
cmp
mov
mov
int
lds
push
xor
jnp,pt
push
cmpsb
loop
out
std
movsb
pop
call
aaa
lret
fdivrs
neg
outsl
jnp
xor
inc
xchg
add
loope
dec
fs
adc
pop
jle
adc
movsl
and
in
sub
imul
jnp
or
mov
std
ds
push
sbb
sub
xor
mov
sahf
aas
and
outsl
pop
es
pop
int3
lahf
cmp
mov
sbb
loope
mov
js
loopne
stos
fld
in
jle
mov
add
repnz
scas
dec
mov
add
mov
xor
bound
cmp
fwait
pop
in
mov
jmp
mov
pop
mov
or
mov
jns
movl
mov
add
cld
mov
pop
or
pop
cmpsl
aam
add
daa
lret
pop
mov
stos
inc
pop
mov
xor
ret
sbb
jmp
ljmp
inc
jne
jmp
out
in
jg
in
out
mov
adc
mov
mov
and
jnp
test
mov
mov
scas
loop,pt
push
mov
pop
cwtl
sbb
pop
mov
jno
mov
mov
jae
and
and
jnp
cli
inc
adc
test
or
mov
mov
cwtl
add
cmc
lcall
mov
cwtl
mulb
cmpb
or
cld
lods
and
jl
shll
enter
fimull
insb
rcll
push
mov
mov
mov
mov
mov
div
push
mov
push
pop
fimuls
sti
aam
xor
jmp
scas
add
lea
cmpsl
sbb
adc
sahf
mov
jge
aaa
add
jecxz
stos
inc
or
dec
lods
or
pop
faddl
bound
shrb
add
loop
jb
xchg
fisubrl
adc
inc
push
enter
or
jecxz
int3
cli
add
mov
jns
addr16
stos
dec
test
pop
and
ss
cld
repz
popa
adc
mov
and
or
xchg
pop
fs
aam
mov
pop
add
gs
insb
pop
sub
jmp
scas
jb
add
add
les
pop
movsl
inc
mov
test
movsb
mov
cwtl
mov
pop
lret
jecxz
les
mov
inc
sbbl
sti
scas
shlb
or
add
repz
or
pushl
icebp
sub
and
jae
dec
mov
sbb
lret
mov
sahf
lret
inc
fsub
add
mov
mov
jle
jecxz
and
sbb
rcrb
addr16
stos
push
jnp
dec
fldt
cmp
mov
test
ret
mov
call
test
mov
lods
push
dec
add
add
inc
push
andl
imul
xchg
push
xchg
loopne
cli
movsl
aam
or
sahf
lods
add
dec
ljmp
sub
sti
xchg
sbb
pushf
and
jecxz
mov
push
cmc
push
rolb
arpl
fs
bound
lret
mov
ret
push
or
or
imul
ret
pop
imull
js
xorb
das
fwait
pop
inc
dec
gs
sbb
xchg
jnp
pop
addr16
popf
pop
inc
mov
in
stos
fisubrs
inc
dec
repnz
loop
sahf
test
inc
shlb
mov
icebp
lret
cwtl
dec
out
sti
xor
fs
pushf
xor
shrb
shrb
jnp
mov
fs
adc
jnp
cli
pusha
movb
jecxz
into
inc
jbe
or
movsb
jg
repnz
mov
mov
xchg
lahf
in
mov
movsl
gs
popf
inc
mov
adc
loop
adc
jmp
sti
fdivr
nop
and
push
dec
pop
test
cwtl
jp
shrl
xor
xchg
ja
sbb
pop
add
jmp
jnp
sub
sbb
lods
sti
sti
add
clc
out
jmp
xchg
rolb
sub
adc
mov
scas
mov
cltd
pushf
xchg
cmpsb
mov
adcb
push
and
inc
test
mov
aas
lret
or
enter
cmpsb
out
add
jmp
roll
dec
mov
shrb
insb
int
or
add
xor
add
repz
int3
mov
cli
xchg
bound
pop
xchg
push
icebp
sbb
sub
dec
mov
xlat
push
dec
clc
dec
jmp
adc
push
push
cmpsl
and
jge
jnp
ret
jne
or
jge
mov
pop
orl
sbb
cmp
xor
aad
aaa
and
call
cld
xchg
and
xchg
pop
enter
pop
adc
pop
gs
hlt
iret
inc
fnstcw
mov
adc
les
popf
add
jecxz
vpperm
push
call
fs
push
jmp
mov
nop
test
mov
cmpsl
mov
sub
add
dec
add
lret
sub
movsl
out
popf
mov
push
and
in
push
jnp
or
jae
push
lret
xchg
clc
test
jnp
xchg
jge
loop
movb
xchg
hlt
sub
or
adc
xor
fs
gs
xchg
push
xor
js
popa
push
test
sbb
dec
fdivrl
adc
add
mov
loop
sbb
push
add
sbb
bound
fcomp
dec
sbb
aaa
movsb
loopne
fmull
inc
push
in
fwait
add
adc
insl
mov
adc
loop
add
mov
ljmp
add
arpl
pop
les
into
stos
add
jnp
mov
ljmp
nop
mov
push
pop
movsb
or
jnp
sbb
fidivl
inc
dec
mov
mov
sub
push
sub
fiaddl
into
lods
ud2
test
jmp
xchg
popl
cmp
pushf
bound
loopne
sti
imul
cmp
test
mov
and
out
mov
test
jmp
int3
movb
lahf
or
add
sbb
add
mov
bound
jle
push
jg
scas
pop
aas
jae
loopne
or
jbe
pusha
fwait
ret
loope
stos
xchg
stos
pop
nop
pop
mov
jl
sub
cli
jnp
cmp
mov
ficompl
rol
hlt
enter
mov
pop
mov
fdivrl
adc
xchg
loope
jmp
scas
add
xchg
adc
pop
fucom
jnp
iret
xchg
out
pop
aad
ret
push
cmp
aaa
jl
loope
add
jle
sub
std
pushf
inc
xlat
adc
sbb
xorb
stos
mov
outsl
adc
xchg
sbb
adc
andl
push
out
test
sbb
daa
add
popa
test
push
inc
mov
sahf
clc
or
push
inc
stos
xchg
sub
xorl
cli
out
jno
pop
rclb
int3
mov
stos
and
mov
dec
adc
in
int3
cmpsl
in
into
push
mov
in
xor
lods
mov
aaa
xchg
mov
push
imul
inc
lea
jae
into
leave
lcall
fwait
mov
jns
push
mov
popa
mov
push
cmp
stc
mov
push
into
iret
mov
adc
sub
or
dec
mov
aam
lods
imulb
stos
hlt
mov
lods
dec
add
sub
push
cwtl
mov
adc
dec
sub
inc
lods
xor
or
mov
jae
adc
cmovge
xor
xor
mov
mov
ucomiss
es
ret
mov
out
jnp
sub
xor
mov
stos
mov
sub
shrl
adc
jno
xchg
jne
shrd
xor
scas
lret
stos
adc
jg
shrl
cltd
cltd
in
sbb
and
out
pushf
addl
outsb
fs
hlt
das
or
adc
inc
test
mov
repz
je
movsl
xchg
cmp
sbb
ljmp
mov
imul
je
inc
pop
les
or
inc
ljmp
test
in
ljmp
xchg
fucom
icebp
mov
add
mov
add
in
xchg
sub
sbb
into
or
xor
sbb
repz
hlt
test
popf
pushf
add
sub
inc
mov
pop
mov
add
or
mov
mov
pop
std
rorl
push
xor
add
adc
popf
cmpsb
pop
out
xor
add
mov
into
enter
lahf
or
enter
icebp
sti
adc
push
enter
sbb
mov
xlat
mov
lds
imul
pop
movsb
std
pop
or
cld
ljmp
add
pusha
fisubs
xor
or
or
xchg
jecxz
adc
xlat
or
inc
iret
xor
jae
insb
push
hlt
or
jmp
dec
or
adc
test
xchg
orb
scas
test
jne
mov
adc
sub
adc
test
cmc
sahf
orl
or
cld
dec
mov
cmc
hlt
and
nop
scas
pop
jne
or
or
das
lret
push
adc
std
fdiv
test
cltd
lods
popa
or
push
iret
mov
test
test
sub
aam
stos
roll
jae
pop
inc
addl
int3
or
in
adc
lods
add
pop
pop
insl
pop
adc
jbe
ljmp
push
in
jae
lret
popf
repz
scas
roll
adc
mov
outsb
adc
repz
or
in
les
shll
lods
xor
movsl
push
jae
call
pop
mov
icebp
leave
in
sbb
pusha
add
int
or
cmc
push
sub
es
sub
jmp
jae
lcall
xchg
cmp
jb
or
mov
lret
cmc
pushf
jae
scas
icebp
pop
lods
lcall
xor
lock
iret
test
or
icebp
lcall
out
mov
repz
pop
pop
adc
jmp
data16
xor
push
mov
int3
jmp
in
lcall
test
icebp
int3
pop
and
mov
lret
pop
fwait
test
stc
lods
jp
pop
add
dec
fildl
adc
dec
pop
add
add
adcl
cwtl
int3
stos
in
sub
clc
cwtl
mov
adc
adc
pop
sbbl
cld
dec
cmp
in
sbb
add
mov
mov
sub
sti
ljmp
loopne
pop
loopne
lods
pushf
or
add
nop
mov
testl
push
add
add
jbe
or
incl
iret
push
add
jg
mov
cmpsb
rcr
cmp
jge
inc
push
mov
push
mov
push
add
sub
add
push
xor
push
dec
insl
cmpsb
lods
lcall
mov
xchg
xor
cld
jmp
addb
cmpsb
sbb
add
inc
push
push
pop
mov
or
push
in
shlb
aad
xchg
in
mov
sub
jb
jo
sti
xor
stos
jl
das
xchg
test
insl
xor
aam
iret
test
loope
add
loop
pop
int3
push
outsl
sub
sub
add
ljmp
adc
pop
xchg
add
push
icebp
in
cmp
mov
enter
inc
stos
les
add
mov
jmp
adc
test
mov
xor
sbb
push
or
andb
test
mov
cmpsb
lcall
enter
out
leave
jmp
dec
mov
mov
xchg
lock
les
popf
out
xchg
cmp
sub
ljmp
fildl
dec
fdivrs
mov
test
or
sub
jno
mov
and
jb
icebp
dec
cmpsl
fwait
stos
add
enter
mov
dec
mov
or
mov
ljmp
in
add
xchg
mov
mov
aas
popa
andb
and
pop
add
cmp
add
das
sub
shll
clc
in
and
popa
inc
mov
mov
repnz
pushf
jl
enter
adc
sbb
add
add
pop
sbb
pop
cltd
int3
jle
test
or
adc
xchg
mov
push
xchg
push
mov
mov
cltd
adc
icebp
mov
insb
add
xorb
ja
cltd
int3
clc
ljmp
add
sub
inc
push
jle
pop
pop
xchg
add
mov
pop
das
mov
lock
sub
add
lds
cltd
or
mov
or
mov
in
add
cltd
mov
ss
movsb
xchg
in
cltd
cli
mov
in
sub
adc
mov
outsl
push
pop
add
jl
xchg
mov
add
inc
sub
pop
xor
cmp
mov
jb
mov
push
stos
push
jne
out
cmpsb
mov
fisubs
sub
dec
mov
jl
cmc
or
push
adc
repnz
or
jmp
sti
leave
mov
mov
test
xor
xchg
lcall
dec
test
sub
test
and
mov
or
xchg
aad
sub
pop
xchg
xchg
aam
and
sbb
or
xchg
pop
lods
sub
jnp
stos
into
fucomi
sbb
mov
or
or
or
xor
adc
ficoms
cmp
addr16
lock
xchg
xor
xor
mov
cmpsl
pop
jecxz
sub
into
rolb
jge
lods
mov
adc
adc
add
cmp
pop
clc
loopne
aas
dec
cmpl
cmp
sub
mov
cli
sbb
xorb
push
xor
dec
mov
pop
xor
test
sub
imul
faddl
add
imul
xor
xchg
mov
push
adc
xor
and
cli
fwait
add
mov
sbb
out
mov
test
movsl
mov
add
jae
jo
jmp
jmp
mov
jne
mov
add
hlt
int
jae
mov
stos
loope
mov
or
mov
jb
outsb
insl
js
and
outsb
push
sbb
xor
xor
stos
xchg
push
sub
cvtps2pi
mov
out
jnp
and
push
std
lcall
or
dec
pop
and
and
lcall
cld
mov
jnp
aas
mov
ret
sub
sti
daa
jl
cmp
jnp
jbe
dec
xor
or
in
sub
or
pop
ja
add
sahf
or
add
inc
cmp
cs
xchg
imul
mov
mov
loope
decb
inc
add
inc
and
in
and
mov
mov
out
cwtl
pop
jmp
cld
les
mov
repnz
dec
es
sahf
xor
adc
out
bound
call
aad
int3
or
test
xchg
loop
lret
jp
out
sysret
jp
dec
movsl
adc
add
daa
les
sbb
dec
repnz
test
addr16
adc
cmpsl
sub
imul
rclb
out
adc
outsb
or
add
das
mov
jns
dec
dec
cld
hlt
pushf
clc
clc
lds
and
sbb
in
push
mov
int3
sbb
lcall
movsl
sub
fisttpl
cmpsl
stos
clc
sbb
mov
loope
mov
lds
jle
mov
lret
cmpsb
rol
xchg
mov
call
or
pop
pop
test
pop
sbb
popf
outsl
inc
in
sub
sbb
movsl
aaa
push
lods
adc
mov
test
ret
xchg
and
icebp
sbb
and
int3
jl
mov
insl
and
or
insl
pusha
enter
int3
push
mov
cmovb
loop
fwait
sbb
add
leave
xchg
jno
push
ss
jae
add
icebp
arpl
add
pop
dec
sub
jl
pop
cltd
lret
sbb
sahf
imul
jge
adc
inc
mov
pop
imul
fisubl
sbb
flds
jns
icebp
and
into
sbb
cmpsl
iret
jl
repz
push
mov
adc
sub
cltd
into
adc
pop
jnp
dec
push
sub
stos
cmp
int3
adc
cld
sbb
cmc
add
icebp
aam
ds
test
nop
out
xchg
pop
adc
inc
cmp
sbb
pop
add
leave
xchg
loop
icebp
adc
jmp
add
xchg
fmuls
push
inc
ret
int3
xchg
add
jp
std
add
xchg
adc
in
ret
adcl
xchg
icebp
or
fwait
leave
pop
jmp
pop
fdivrs
sub
adc
pop
es
dec
jge
jmp
xchg
adc
loopne
pusha
int3
and
cmpsl
hlt
jmp
std
or
mull
data16
mov
pop
sysret
stc
cs
xor
stc
pushf
sbb
popa
inc
xchg
mov
les
xchg
loopne
pop
xchg
movd
sbb
sub
add
es
mov
mov
jne
dec
push
lock
mov
add
xchg
xchg
sbb
ror
mov
bound
sahf
decl
sahf
and
cmp
push
inc
push
mov
push
or
subb
xchg
or
cwtl
push
adc
cltd
or
cmp
mov
pop
loope
sti
xchg
sbb
mov
mov
mov
fcmovnbe
mov
cltd
xchg
test
pop
pop
imul
inc
dec
sub
jo
sbb
int3
inc
inc
lea
adc
out
dec
xlat
mov
and
enter
stos
push
and
cmp
nop
sbb
mov
push
dec
gs
popf
mov
repnz
dec
aam
sahf
and
out
dec
hlt
popf
dec
xor
xchg
dec
jbe
cld
sbb
ret
dec
xchg
pop
xchg
or
outsl
push
in
cmpsl
insb
aam
lods
jle
divl
clc
add
sti
sub
inc
adc
lret
jp
or
rcrb
add
mov
fimull
sub
pop
xchg
mov
xor
cmp
cmp
mov
nop
movsb
cmp
test
scas
cwtl
iret
loop
mov
mov
jg
fs
in
lods
jno
aam
xlat
out
in
xchg
insl
xor
and
sbb
add
jmp
dec
pop
or
xchg
add
jle
push
mov
push
scas
sti
hlt
or
sbbl
lcall
push
movsb
pop
and
in
ret
out
and
sbb
loop
xlat
push
adc
jl
imul
mov
fdivrp
or
dec
nop
push
fs
pop
pushf
push
push
mov
xchg
mov
push
inc
or
mov
cmpsb
jmp
xlat
jmp
mov
sbb
shr
or
call
hlt
xor
adc
push
inc
jl
inc
fidivs
repnz
sbb
xchg
cld
cmp
enter
lea
sahf
add
adcl
test
add
mov
lods
nop
xchg
fmulp
enter
xchg
es
push
in
fwait
test
mov
mov
add
testl
jne
adc
cmc
mov
gs
cmp
in
test
mov
adc
sbb
cmpsl
dec
and
enter
or
lods
mov
imul
mov
adc
ljmp
inc
or
add
cli
ljmp
or
lcall
lret
or
movsl
cmp
add
push
test
into
pushf
stc
or
stos
mov
stos
pop
scas
sti
inc
and
sbb
or
or
dec
pop
sahf
lock
lahf
push
cmp
fadds
adc
daa
xor
pop
jns
pop
lret
int3
lods
sbb
add
enter
ret
mov
fsubrs
movsb
gs
fs
lret
sbb
in
test
mov
pop
movsb
sar
or
pop
movsb
add
test
pop
pop
movsb
inc
movsl
push
call
xchg
andb
jecxz
lock
or
in
jge
or
test
cwtl
sbb
xchg
shr
enter
ret
cmp
adc
in
lret
cmp
call
aas
xor
or
faddl
decl
add
inc
xchg
add
enter
ljmp
add
lret
fnstsw
loope
rclb
adc
cmp
sub
dec
push
mov
mov
pusha
push
addr16
int3
jnp
mov
rcr
jmp
adc
sbb
icebp
stos
mov
loop
js
adc
pop
xor
inc
mov
cld
mov
ret
sbbl
xchg
pop
jbe
in
inc
popa
aaa
add
mov
stos
cltd
mov
mov
out
movsl
cltd
sbb
sub
mov
lea
sub
in
roll
jl
mov
dec
popa
cmp
and
or
pop
stos
aaa
lods
popa
push
andb
insl
pop
dec
mov
sub
movsb
aaa
xchg
jne
sbb
mov
mov
inc
leave
enter
dec
movsb
xchg
sbb
fs
mov
lahf
xchg
rcrb
dec
ret
mov
mov
loop
cmp
mov
pop
push
addb
sbb
pop
lods
add
loope
stos
push
xchg
or
cli
sub
cld
or
mov
ljmp
lock
jne
idiv
stos
cmp
in
stos
lret
sub
into
sbb
iret
dec
push
adc
sbb
std
mov
mov
mov
adc
ror
push
xor
mov
cmc
jl
or
stos
mov
scas
xchg
sub
xchg
jle
mov
mov
sti
movsl
sbb
pop
nop
jns
pop
pop
mov
lret
xchg
into
aaa
xor
movsb
lds
cmp
dec
leave
fidivs
inc
call
in
addr16
adc
das
sbb
inc
jp
dec
cmp
stos
cmpb
lahf
and
fnstenv
and
in
mov
cmp
sbb
repz
mov
pop
hlt
and
lret
mov
push
jge
mov
mov
addb
mov
pusha
test
mov
sbb
nop
mov
movsl
in
mov
xchg
iret
sahf
cmp
aas
pop
cmp
adc
aas
push
jecxz
xlat
mov
adc
cmp
mov
mov
inc
add
cld
hlt
cwtl
inc
repnz
cmp
sbb
cli
or
orb
outsl
mov
add
in
push
xchg
jl
bswap
jnp
or
test
rclb
push
test
lret
xor
repnz
lret
sbb
les
pushf
les
mov
cmpl
lea
jl
push
mov
inc
lret
pop
inc
pop
dec
out
add
xchg
pop
mulb
jmp
stos
sub
out
out
sub
adc
inc
pop
repz
jg
ficompl
mov
aad
xor
ret
sub
in
cmp
insl
fisubs
mov
fs
mov
xor
sbb
mov
daa
and
xlat
xor
lock
int3
aam
inc
mov
jnp
dec
add
xchg
test
mov
jno
xlat
sbb
push
or
cmp
ss
mov
das
xchg
movsl
mov
aas
test
jbe
loopne
jle
cmpsl
sbb
pop
push
lea
jno
cli
inc
in
stos
push
dec
icebp
xchg
icebp
add
into
add
repz
add
nop
pop
addr16
mov
jle
mov
movsb
cli
loop
sub
mov
mov
sub
mov
jb
add
fxtract
add
xlat
pop
add
mov
adc
inc
sub
loop
adc
mov
aaa
pop
xchg
test
or
mov
adc
outsl
lods
stos
ljmp
fcom
mov
pop
adc
ret
mov
pop
xchg
inc
mov
cli
adc
cmp
jno
or
movsb
lock
loop
dec
cwtl
das
rclb
cmp
adc
stc
jb
adc
adcb
jle
repz
add
out
fwait
call
rclb
ret
xchg
sub
push
nop
mov
in
mov
les
inc
pop
push
cmp
lcall
pand
cmp
std
mov
cmp
pop
ret
inc
out
mov
popl
ja
lahf
or
gs
enter
out
push
aad
add
adc
adc
bound
jbe
daa
mov
negb
js
adc
sub
loop
jl
xor
xchg
dec
scas
dec
imul
aad
xor
fucomip
lcall
and
adc
mov
xchg
push
xchg
mov
push
pop
stc
add
pop
stc
loop
pop
add
dec
and
pushf
and
mov
inc
push
and
mov
jle
enter
inc
pop
lds
test
sub
ret
rcr
mov
les
enter
test
push
mov
and
jmp
mov
cmp
push
cwtl
jecxz
mov
or
mov
sub
fcoms
sahf
insb
pop
add
out
inc
xor
push
push
test
addr16
out
aam
movsb
fs
call
add
call
jns
pop
cmp
pop
mov
lea
int
loopne,pn
push
and
int3
cmp
enter
leave
cmc
lret
hlt
jb
xchg
icebp
mov
push
jmp
add
dec
mov
fcmovb
lods
xlat
mov
movsb
pop
shr
std
mov
cmpsl
dec
movsl
or
sub
stos
mov
mov
and
push
daa
cmpb
xchg
imul
clc
orl
sbb
stos
fistpll
jge
or
cmp
aam
mov
push
in
xor
mov
popf
inc
mov
dec
nop
xchg
filds
bound
addr16
loope
jmp
inc
pop
jge
inc
sahf
test
popf
test
lcall
push
and
pushf
ret
xor
xor
ds
pop
pop
test
ret
adcb
jnp
mov
sbb
imul
sbb
dec
mov
push
and
scas
imul
vpsubw
xchg
dec
gs
jecxz
cli
sub
std
adc
adc
add
dec
jl
test
sbb
divb
popf
inc
sahf
xchg
push
popf
ficoms
cmpsl
lret
push
pop
xor
mov
sti
pop
xchg
outsl
push
mov
pushl
lret
stc
add
gs
stos
imul
inc
es
lcall
jmp
xor
xor
inc
sub
sub
inc
lret
cwtl
mov
push
out
call
clc
push
mov
fimuls
fisttps
loope
xchg
jp
rcrl
mov
sti
loope
jmp
sub
push
or
and
mov
adc
add
ljmp
mov
fdivr
mov
ljmp
popa
aam
mov
sbb
daa
mov
mov
insb
scas
add
inc
enter
add
ret
enter
lcall
or
fstp
inc
test
sti
daa
adc
stos
ss
jl
lcall
test
mov
bound
push
mov
cmp
jg
loopne
pop
lret
lret
stos
pop
xchg
pop
mov
mov
fcomps
imul
push
mov
int3
pop
sub
popa
decb
add
or
xor
jl
ljmp
lret
and
outsb
leave
mov
dec
and
jae
call
and
pushf
add
mov
jp
push
cltd
cmp
adc
setbe
loopne,pt
pop
sub
adc
push
mov
adc
xchg
xchg
dec
inc
adc
adc
aas
jnp
xchg
xor
sub
add
loope
jmp
enter
or
ja
aad
pop
mov
into
cli
adc
enter
mov
add
adc
sbb
or
dec
lods
sub
sti
gs
and
sbb
mov
repz
lahf
lods
or
mov
or
inc
ljmp
jg
enter
add
or
pusha
call
lcall
movb
or
and
test
test
or
jmp
push
mov
xor
xchg
sbb
jp
push
stos
cmp
js
xor
dec
inc
sti
dec
cld
roll
or
mov
in
enter
pop
aaa
add
loop
add
out
or
cmc
pop
sti
mov
cli
cmp
adc
ret
xchg
add
bound
les
adc
jge
mov
jb
mov
arpl
test
addb
mulb
lods
mov
fcmovnu
sbbb
sti
or
cs
lea
arpl
or
ret
ljmp
jecxz
fisttps
dec
movsb
cmp
and
lret
and
push
push
sbb
dec
fisttpll
movsl
jne
fwait
mov
xor
mov
xlat
icebp
js
int
fmulp
xor
mov
mov
int3
mov
add
jmp
or
test
addl
rclb
mov
lods
add
or
push
jbe
jg
and
repz
clc
mov
push
stc
jbe
in
adc
out
popa
jo
xchg
adc
icebp
insl
dec
sbb
in
cwtl
inc
rdpmc
mov
or
fnsave
rorl
inc
mov
jecxz
and
popa
adcl
xchg
xor
outsl
lods
stc
adc
cbtw
popa
enter
and
sahf
test
fldt
jne
push
shl
cltd
ja
jp
repnz
add
shll
mov
inc
ret
fs
lahf
xchg
push
js
mov
sub
mov
ret
insb
adc
in
pop
lahf
jecxz
test
sbb
aaa
cld
inc
pop
out
lods
pop
lods
nop
pop
sub
dec
int
inc
or
xor
out
mov
jmp
cmp
push
arpl
pop
mov
xlat
orb
sub
xor
and
add
inc
lods
mov
sub
adc
jo
scas
out
movsl
and
mov
jmp
stos
jl
jno
aaa
lcall
lret
pop
jno
add
xchg
cwtl
pop
movsb
xchg
dec
es
enter
out
dec
jecxz
call
mov
jecxz
adc
movsl
lcall
mov
and
test
sbb
mov
or
aas
xchg
push
sbb
adc
add
mov
ja
mov
shlb
aaa
out
jo
ja
mov
adc
and
ljmp
call
scas
and
mov
add
lock
jmp
jno
add
iret
push
cmp
pop
push
pop
xor
jnp
fwait
inc
xor
enter
add
cmp
xor
test
push
mov
ret
ret
lea
cmc
pop
movups
inc
or
int3
or
jno
xor
movsb
int3
mov
xor
xor
inc
push
mov
loopne
dec
sub
sub
xchg
xchg
or
mov
xor
sub
stos
ret
call
add
sbb
pop
orb
incb
lods
imul
mov
out
dec
add
andl
pop
inc
xor
mov
cs
andl
and
xchg
out
lods
movsb
xlat
call
popa
out
loopne
daa
mov
in
inc
jg
sarl
loop
inc
jl
ret
push
sti
mov
sbb
add
pop
idivb
sub
scas
sbb
inc
and
mov
jmp
popa
mov
jecxz
push
or
inc
ja
mov
pusha
or
or
outsl
adc
adc
add
hlt
jb
xor
loop
mov
decl
hlt
xchg
pop
push
fdivrs
imul
xchg
xor
push
dec
mov
xchg
mov
lods
shll
fiadds
outsb
sbb
js
ds
or
stos
cwtl
jge
cwtl
ret
fs
jl
jp
into
iret
mov
mov
repz
cmpsb
sti
adc
mov
inc
test
dec
out
cmp
arpl
mov
ret
outsl
iret
cmc
and
mov
jno
push
mov
add
orl
gs
push
lcall
mov
jge
ret
mov
fsubs
movsb
inc
push
xlat
sbb
xchg
mov
outsl
cmpsl
pop
mov
push
fs
ret
lahf
cmp
pop
dec
sub
adc
push
int3
outsb
push
dec
in
lret
and
mov
mov
out
imul
pop
add
lret
nopl
loop
mov
xor
cmp
xlat
mov
mov
rclb
push
adc
ds
push
ret
sub
sub
test
lret
sbb
sbb
inc
xor
inc
aam
mov
les
test
mov
test
add
cmp
jl
sahf
leave
sub
push
sti
repz
ret
and
cwtl
xchg
addr16
cmc
fcompl
xchg
sub
popl
cli
dec
adc
cli
push
in
sub
jp
into
in
or
jp
xchg
lea
lcall
test
fsincos
pop
mov
ficomps
lcall
lds
lcall
fsubr
lods
out
push
push
lcall
hlt
or
adc
jmp
jno
pop
fnsave
adc
cld
adc
aaa
push
push
sub
push
lods
adc
popf
out
movsb
cld
ljmp
dec
rcrl
inc
dec
push
data16
rorb
pop
outsb
sahf
sub
enter
ljmp
aaa
mov
add
insl
jns
insb
jge
sahf
fidivl
cwtl
mov
aad
cwtl
lods
push
int
lds
xor
repz
adc
les
adc
cs
jbe
popa
push
int
jae
adcb
mov
and
dec
stc
sahf
aaa
out
pusha
add
and
jb
jae
or
out
jmp
inc
add
xchg
xor
subl
aaa
inc
lcall
xor
cmp
push
inc
dec
enter
sub
pop
xchg
ret
enter
cmp
or
push
xchg
loopne
cs
cs
pop
lods
push
mov
pop
jnp
pop
hlt
xor
aam
fidivs
mov
inc
test
into
gs
pop
jecxz
imulb
in
xchg
and
and
and
test
je
loope
pushf
ret
pop
xchg
cmp
test
pop
xchg
mov
arpl
sub
arpl
hlt
and
scas
mov
lods
mov
mov
mov
aas
hlt
mov
jg
or
sub
incl
add
inc
outsl
pop
rol
cmpsl
jb
jg
or
out
call
sahf
mov
add
lahf
xchg
push
test
andb
les
push
shlb
aas
loope
add
mov
mov
mov
jb
out
dec
out
test
cmp
lea
fildll
test
adc
xchg
loop
sub
sbb
push
jae
stc
or
fwait
mov
pop
test
cs
ret
sub
adc
out
sub
pop
push
mov
add
xor
adc
outsb
mov
xchg
pop
ja
jge
jge
jmp
dec
cwtl
iret
cmp
aaa
lcall
call
je
mov
cwtl
loop
cmp
bound
scas
mov
pop
pop
jb
shl
shll
add
or
push
add
jns
stos
sbb
fldcw
jns
add
sbb
mov
scas
and
push
pop
jmp
movsb
and
stos
sar
mov
xlat
lea
xchg
out
or
mov
or
xchg
stos
cwtl
sub
jp
or
cmp
xor
popf
inc
testl
jns
sti
stos
lret
adc
cltd
sub
dec
leave
test
sbb
fs
xchg
and
stos
jnp
cmpb
jno
icebp
xor
cmpsb
fimull
sbb
mov
push
je
dec
es
inc
aad
test
test
mov
stc
push
ds
jne
mov
pop
mov
or
aad
mov
sub
std
repnz
data16
add
sbb
adc
repz
fsubl
add
sbb
push
rolb
fistpll
lret
jno
mov
inc
lods
sbbb
repnz
loop
sbb
iret
enter
add
mov
pushf
stc
in
stos
fdivr
push
insb
sub
push
and
jnp
jg
cmc
mov
sub
jg
mov
aam
cmp
lea
push
loope
adc
or
outsb
je
or
jmp
loopne
mov
addr16
sti
divl
in
jno
sub
adc
in
or
jno
movsb
mov
movsb
push
or
inc
mov
jle
push
xlat
stc
test
add
scas
dec
or
or
mov
popf
push
mov
mov
jns
insb
inc
push
rorb
xor
testl
jle
popa
inc
adc
fs
sbb
lods
jecxz
loope
loop
enter
sub
pop
lock
pop
daa
jnp
outsb
imul
pop
or
stos
xor
xchg
sbb
jae
and
sbb
xorb
aam
mov
add
xchg
sbb
mov
sub
lahf
and
aas
or
push
outsl
loop
in
cmpsb
jnp
add
imul
ret
mov
arpl
imull
lret
mov
mov
scas
sbb
add
push
mov
es
movsl
je
push
les
mov
into
fs
jge
popf
lds
lds
inc
subl
cli
mov
fldt
sbb
and
dec
xor
lret
stos
mov
mov
and
movsl
hlt
mov
cmp
cmpsb
scas
dec
mov
rcrb
jle
jnp
in
cvttps2pi
in
and
lcall
movsl
jae
imul
rorb
sbb
scas
aaa
mov
icebp
test
ds
adc
jne
xor
scas
push
jne
sbb
sub
test
and
lahf
mov
sub
popa
ret
push
xchg
or
dec
push
stos
mov
fiaddl
sub
addr16
push
jg
lret
dec
mov
int3
mov
insb
mov
cs
shll
mov
popf
jno
lahf
mov
push
cmpsb
xchg
or
sub
cmp
pop
pushf
ja
cmp
fmulp
movsl
icebp
push
jo
fs
aad
push
jb
mov
in
int
sbb
ret
pop
xchg
push
dec
imul
xor
xchg
fldt
test
sti
xchg
iret
sub
lea
mov
jns
jg
stos
ret
fisttps
sub
pop
add
aaa
pop
imul
dec
sbb
repz
push
out
mov
mov
rorl
push
inc
mov
pop
xchg
sub
ljmp
push
fnstsw
lret
sub
inc
xor
or
add
push
out
inc
test
sub
cwtl
xlat
fisubrs
dec
mov
aad
stos
inc
stos
jae
jl
sbb
outsb
jnp
sub
xchg
cltd
dec
or
cmp
pop
cmpsl
test
push
jge
push
push
test
cli
push
enter
stos
sbb
inc
xchg
jns
xchg
and
mov
mov
pop
sahf
xor
js
mov
and
addb
mov
andb
flds
cmpb
add
xor
add
jp
fs
mov
call
push
stos
jg
adc
xor
call
in
fstps
mov
adc
jl
push
add
in
push
or
inc
mov
push
adc
cld
ret
lret
inc
add
lret
and
in
ja
loop
adc
mov
psubw
clc
or
sti
addr16
jb
push
pop
xchg
cmp
mov
stc
mov
js
push
dec
andb
push
js
push
or
mov
inc
push
call
adc
pushl
add
into
push
pop
mov
addr16
mov
movsb
sbb
adc
xchg
ja
fnstcw
aam
rorb
lds
rorb
sbbl
sahf
enter
repnz
and
mov
mov
lds
test
in
xor
fwait
sbb
scas
rolb
jnp
sub
in
mov
sbb
and
pop
daa
aam
pusha
bound
add
aam
and
mov
lret
adc
out
stc
inc
or
bound
xchg
ss
jb
lret
fst
es
mov
fldenv
out
mov
add
popf
jle
ret
cmp
push
lods
jge
or
xchg
and
sbb
fistps
fists
ror
jb
daa
xor
lcall
pop
cmpsl
adc
adc
cmpsb
adc
in
cmp
add
lea
lds
int3
int
bound
push
cli
test
dec
sbb
mov
inc
or
sbb
or
mov
movsb
dec
jmp
int
inc
or
or
sub
adc
stos
pushf
or
pop
adc
push
mov
mov
test
mov
and
push
push
lods
les
mov
das
mov
outsb
inc
xchg
pop
mov
pop
fldl
cmc
sti
push
push
pop
addb
rorl
sbb
add
jmp
push
mov
scas
out
xchg
dec
xchg
jle
add
and
dec
jnp
dec
enter
ret
mov
mov
outsl
adc
fnsave
das
and
jp
out
jg
repnz
sti
sti
inc
sub
mov
xchg
ret
sahf
xor
test
jae
mov
popf
iret
mov
icebp
icebp
xchg
xchg
ror
das
scas
dec
pushf
mov
dec
push
ret
add
nop
insb
js
ss
sbb
sub
sarl
inc
jl
mov
int3
xchg
lcall
fwait
js
pop
pop
in
push
mov
insb
ret
in
add
in
das
cli
pop
add
std
push
jb
and
sub
inc
mov
insl
mov
lock
mov
add
int3
popa
loop
pop
push
xchg
adc
sub
adc
mov
inc
enter
lret
jno
fidivs
cmpsl
es
shlb
out
jns
sub
xchg
fstpt
ficomps
lods
fsub
inc
xchg
fsubrs
sbbb
mov
push
mov
pop
mov
or
or
and
mov
jo
sub
test
movsl
int
dec
loope
ja
jmp
mov
cmc
gs
jnp
inc
push
bound
sbb
push
movsb
in
pusha
lods
scas
xchg
mov
andb
cld
push
xchg
mov
sbb
xchg
mov
mov
clc
gs
push
loopne
mov
stc
ret
xchg
fsubp
stos
gs
lcall
mov
jbe
mov
jo
sub
and
scas
loop
lcall
mov
mov
sar
imul
in
or
inc
push
xor
rolb
stos
mov
movsb
test
sti
cli
lahf
in
sub
or
or
int3
lcall
addl
icebp
sbb
push
add
les
push
movsl
repnz
inc
xchg
movsb
dec
ret
lock
nop
sarb
cli
inc
inc
das
test
pop
les
inc
pop
or
jge
mov
lds
mov
jnp
pushf
icebp
imul
mov
scas
mov
cmp
not
and
scas
push
test
adc
pop
arpl
call
lods
ret
sub
or
notl
xchg
xor
sti
prefetch
mov
enter
adc
add
test
rcrb
mov
push
int3
push
add
aas
ret
lret
pushf
or
shr
push
int
add
and
push
and
mov
pop
mov
lcall
sbb
jl
sbb
stos
jecxz
rcrl
mov
sbb
pop
testb
mov
cmp
ja
push
arpl
pop
xor
inc
insb
push
lahf
xchg
inc
push
xor
jl
int3
test
pushf
jae
add
imulb
mov
adc
outsl
rcrb
mov
mov
cltd
lods
cld
decb
sub
addr16
test
enter
mov
dec
test
add
sbb
xchg
mov
mov
scas
inc
sahf
sahf
addr16
adc
mov
aas
repnz
lret
dec
stos
popa
mov
pop
lds
fists
popl
subb
mov
in
mov
loope
pushf
xchg
int3
push
fdiv
mov
in
cmp
add
test
jmp
iret
fisubl
lods
sar
mov
cmc
xchg
repz
dec
ljmp
gs
dec
add
push
xor
add
or
and
jnp
pop
lcall
push
stc
ret
clc
mov
or
inc
fisubl
rcl
repz
push
jbe
xorl
bound
pop
stos
cmpl
mov
lret
js
cli
in
mov
ss
dec
ljmp
jge
hlt
rol
jb
or
inc
lds
hlt
into
or
pop
inc
mov
fistpl
or
sahf
jo
lret
cmpsb
out
shlb
jp
sub
sbb
fidivrs
js
roll
adc
outsb
aaa
pop
in
sahf
pop
pop
cmp
arpl
or
hlt
and
cwtl
mov
pop
sti
or
insl
aam
sub
fdivrs
inc
mov
sahf
xchg
aaa
adc
lcall
sub
cmp
sbbb
ljmp
out
sub
sub
fmul
jmp
je
dec
mov
mov
mov
mov
mov
adc
fcoml
sbb
xchg
movsl
lret
xchg
incl
adcb
jmp
mov
or
jnp
mov
jg
fisttpl
stos
push
in
aas
xor
cs
mov
cwtl
jmp
xor
and
je
jns
int3
aad
fisttps
fidivl
aaa
add
adc
dec
rcrl
cmp
pop
stos
imul
shl
jle
xchg
dec
insl
dec
sub
iret
jmp
and
xchg
into
shlb
insl
sahf
add
repz
fldl
insl
xchg
gs
loope
sbbl
mov
or
clc
adcb
mov
mov
fdivrs
push
dec
enter
inc
orl
or
test
ret
adc
add
out
fidivrl
cld
movsl
pop
dec
inc
scas
outsb
addr16
mov
les
pop
aaa
or
mov
mov
dec
jbe
movsb
or
jl
scas
es
dec
adc
add
lods
movsb
scas
bnd
inc
xchg
and
stos
jl
jno
aam
pop
stc
jae
mov
inc
push
or
stos
cli
inc
andb
push
xor
xchg
out
dec
call
or
jecxz
scas
mov
jno
sub
inc
and
jg
jmp
scas
daa
add
mov
jmp
inc
imul
sti
sbb
pop
xchg
and
sbb
add
das
dec
cmp
xchg
add
cmp
sti
mov
mov
mov
sahf
lret
or
sbb
testb
loop
adc
out
inc
pop
or
add
jb
mov
pop
pusha
jle
or
adc
jp
mov
push
lds
dec
mov
cmpsl
jmp
cmpsl
inc
test
cmpsb
das
outsb
add
out
jne
adc
mov
fisttpl
andl
scas
les
mov
sarb
insb
mov
lret
add
addb
jmp
mov
mov
fmuls
ss
jge
fiadds
outsb
ret
adc
fsts
mov
stos
adc
adc
repz
mov
inc
jns
fsubl
in
or
dec
mov
inc
out
cld
leave
popf
cmpsl
repnz
int
fidivrl
inc
js
sahf
xor
imul
notb
mov
jge
lret
add
test
jmp
rcr
negl
loope
sti
in
pop
sarl
or
sarb
out
and
sbb
adc
hlt
adc
pushf
push
sbb
jno
sarb
xor
dec
loope
inc
and
and
mov
sbb
int
dec
and
mov
sub
ja
in
inc
insl
dec
add
out
xor
add
cmpsb
jge
les
sub
fst
dec
test
push
jle,pt
xor
cmp
fimuls
orb
lret
pop
daa
testl
jae
aad
sub
mov
sub
and
loop
sub
sbb
movsb
out
leave
dec
les
jmp
mov
inc
sbb
cmp
loope
pusha
jle
cwtl
out
add
sub
xor
andb
js
enter
fstl
stos
in
sahf
dec
sub
outsl
mov
mov
and
orb
ljmp
or
testb
lret
sbb
scas
mov
pop
mov
sub
addr16
fadd
push
xor
inc
mov
test
frstor
and
lcall
push
add
dec
mov
in
cmpsb
mov
sbb
loope
push
inc
lds
sti
movsl
insl
push
cs
adc
add
adc
and
or
or
fwait
and
hlt
lods
push
les
mov
xchg
and
sahf
in
jp,pn
and
dec
je
dec
sub
xchg
aam
sub
ss
ret
ret
fcomps
frstor
popf
iret
adc
sbbl
sahf
inc
je
push
mov
push
subl
hlt
ja
lret
push
sub
ljmp
push
push
xchg
jne
sbb
mov
in
jnp
xchg
in
out
lcall
scas
push
mov
icebp
xchg
leave
push
ds
mov
sub
aaa
mov
sti
pop
test
test
into
in
xchg
call
mov
sbb
scas
enter
mov
repnz
out
stc
shlb
add
je
loop
sub
adc
dec
and
pop
sub
mov
lret
adc
mov
adc
sub
jmp
mov
icebp
lods
rcl
and
mull
ja
frstor
arpl
pusha
pop
fwait
idivb
lret
roll
filds
xchg
cltd
push
fldcw
add
popf
jne
repnz
inc
mov
jb
ret
mov
dec
xchg
and
ret
fsubl
mov
dec
xchg
cmp
test
movl
inc
sub
fcomps
pop
adc
sub
mov
cmp
clc
in
jge
xchg
jbe
dec
data16
add
add
lret
mov
sbb
or
jno
xchg
cld
mov
pop
popf
popa
jo
add
dec
mov
pop
pop
or
jae
adc
xchg
sti
sti
inc
rclb
push
int3
mov
fisttps
ret
fisubrl
or
mov
loopne
lods
inc
int
push
in
test
add
sahf
and
mov
cltd
imul
in
inc
and
push
sbb
mov
je
adc
ficoml
aad
add
sbb
inc
add
xor
inc
or
lret
cld
insb
sahf
insb
fisubrs
sbb
inc
subl
loop
or
or
add
adc
call
and
arpl
xchg
pop
pop
stos
jmp
sbb
sti
xchg
or
pop
fwait
stos
mov
cwtl
pop
fbstp
insb
scas
int3
mov
jae
xchg
xchg
leave
inc
sbb
ss
dec
jne
les
ficomps
pop
push
adc
jns
xchg
pop
call
popl
popa
in
xchg
and
xchg
push
sahf
jle
fdivs
clc
add
hlt
in
aas
xchg
hlt
jl
call
sbb
adc
xor
lret
inc
jp
mov
push
sbb
pushf
xchg
mov
cmc
xchg
jmp
aas
imul
sti
mov
fisubs
mov
sub
sub
lods
cmc
dec
dec
fiaddl
add
cld
xchg
clc
ret
int3
testl
mov
mov
sub
xor
jmp
pop
add
sti
mov
test
or
push
xchg
aam
jecxz
adc
jp
outsl
fwait
addr16
enter
mov
imul
sub
mov
out
ljmp
js
lahf
mov
xchg
xchg
ret
in
adc
push
pop
inc
push
fidivrl
xchg
les
push
xor
xchg
or
pop
lock
andb
push
jmp
sahf
jl
dec
mov
aas
jns
and
and
bound
adc
xchg
mov
repnz
dec
inc
stos
mov
cmp
xor
and
mov
pop
and
push
add
add
dec
and
mov
mov
mov
fsubrl
std
iret
xchg
xor
icebp
mov
jne
enter
outsb
add
pop
aam
cwtl
in
imul
pop
fidivrl
jmp
adcb
in
sub
lods
xchg
and
aam
lret
aaa
ficompl
xchg
les
cmp
inc
sbb
repnz
adc
shll
add
icebp
imul
daa
push
cmc
xchg
mov
outsb
xchg
fcoml
sbb
mov
fucomip
add
sub
hlt
mov
mov
jle
push
cwtl
repz
and
push
loop
out
test
mov
mov
pushf
les
call
dec
mov
fninit
jl
adc
adc
mov
jnp
jl
inc
adc
inc
jb
jl
sub
xlat
jl
popf
ljmp
shr
xor
movsl
mov
mov
dec
jmp
sbb
fimull
lock
xor
jl
xor
sbb
sbb
ljmp
cmp
sbb
in
pop
adc
lret
mov
cmp
scas
repz
js
add
sbb
jl
imul
and
xchg
or
mov
loop
rorb
xchg
adc
inc
xchg
je
sub
xor
int3
push
or
repnz
mov
dec
adc
jns
mov
mov
jecxz
mov
lods
push
adc
jns
int
or
and
aaa
enter
pop
fstps
or
lcall
dec
pop
cmpl
inc
jns
lret
mov
pop
mov
ljmp
test
stos
sub
push
ret
call
loop
inc
jmp
incl
test
std
and
lahf
jge
aad
pushf
enter
orb
mov
mov
lahf
repz
insl
pusha
divl
mov
loopne
mov
push
mov
pop
mov
stos
das
es
mov
dec
inc
inc
in
sbb
sahf
dec
mov
push
adc
ss
inc
pop
jbe
sbb
dec
jo
or
mov
rol
ss
shlb
mov
gs
inc
mov
lea
sub
mov
fs
sbb
dec
dec
and
ja
adc
dec
inc
dec
add
xorb
push
rcr
or
dec
mov
sbb
push
mov
dec
pop
and
add
cmpsl
or
xchg
test
mov
or
nop
adc
aaa
sub
sbb
dec
and
dec
loope
pop
decl
call
sub
sysexit
cmp
cmpsb
pop
test
call
sahf
test
xchg
push
in
fcmovnb
mov
int3
pushf
shlb
push
imul
push
adc
jmp
fbld
adc
adc
mov
adc
bsr
rclb
test
ret
outsl
insb
cmpsb
xchg
pushf
out
xor
mov
jo
test
test
adc
inc
jmp
pop
cli
jmp
enter
hlt
in
cmpsl
push
ret
push
lods
cmp
cmp
mov
sub
sahf
pusha
ljmp
cltd
shrb
or
out
push
mov
mov
dec
sahf
cmpsl
lods
adc
pop
or
test
or
inc
stos
stos
sbb
mov
pop
sahf
push
and
stos
test
fistps
rorb
enter
test
loope
add
test
data16
loop
mov
cmp
or
stc
daa
sub
int3
sbb
int
iret
cmpsl
cltd
decl
or
scas
leave
lds
dec
stc
or
sub
movsb
mov
or
dec
inc
dec
es
frstor
mov
adc
ss
dec
mov
dec
icebp
movb
out
pusha
orl
mov
and
and
sbb
adc
popa
adc
add
jg
adc
sahf
movsl
xchg
mov
mov
int3
rorb
scas
sub
clc
in
loope
call
lcall
ret
jecxz
out
sub
ja
adc
pusha
adc
mulb
js
cmp
fstps
mov
pop
cld
inc
add
sub
mov
mov
inc
fcoml
or
popf
negb
or
and
sbb
adc
jecxz
es
push
int3
dec
adc
mov
rcl
in
jae
xor
and
jle
mov
adc
sub
test
sbb
xchg
jecxz
inc
xchg
aam
inc
popa
nop
cld
xchg
xchg
xchg
mov
add
push
leave
mov
addb
loopne
pop
dec
pop
les
xor
fwait
out
sti
sbb
fsubr
or
push
in
jnp
test
mov
push
jle
fldt
test
inc
sbbb
iret
out
nop
cwtl
and
outsb
sahf
inc
outsb
data16
lods
mov
jecxz
ret
je
push
lea
mov
inc
fcmovb
xor
jle
xchg
test
pushf
insb
jae
dec
push
mov
popa
mov
sub
mov
insb
int3
sub
arpl
xchg
add
jecxz
lcall
outsb
cmpsb
push
js
pushf
fildl
xchg
ffreep
test
push
cwtl
add
aam
dec
add
lods
mov
insb
adc
cs
into
lcall
mov
test
stos
and
and
inc
xor
or
pusha
aaa
jne
clc
adc
fmull
lods
mov
mov
mov
jle
testl
aad
imull
leave
ds
jge
addl
jmp
or
sub
sbb
sub
leave
outsb
dec
jecxz
imul
add
push
push
add
in
jae
ret
sbb
and
pmaxub
dec
dec
pop
sub
imul
inc
mov
adc
mov
lods
lods
push
cmpsl
push
sti
jae
int
push
push
adc
repnz
fsubrs
ret
test
gs
mov
add
lods
iret
add
sbb
sahf
or
std
popf
ret
sbb
subl
lea
ljmp
jg
cmp
pop
inc
aad
adc
or
cmpb
subb
movsb
xchg
or
ds
or
mov
xchg
int3
hlt
sub
es
dec
ljmp
mov
mov
movsl
xor
lods
pop
movsb
mov
mov
imul
mov
stos
aad
dec
add
sbbl
sub
pop
or
mov
les
xor
movb
repz
adc
add
ds
cld
in
ret
data16
add
movsl
sub
jge
cmc
scas
imul
ret
inc
cmp
iret
pop
sbb
inc
or
adc
lods
cmpb
movsl
sbb
adc
add
xchg
jecxz
pop
mov
mov
test
add
lahf
repz
cld
or
fbld
mov
jl
mov
sub
jae
enter
data16
sub
push
mov
cmc
das
and
enter
int
hlt
pusha
or
add
loop
clc
cmp
andb
test
push
popf
mov
add
je
mov
add
pop
or
mov
add
cs
loope
adc
push
or
int3
mov
add
pop
add
pushf
pop
sub
mov
insl
int
pop
cmp
mov
xor
ljmp
shrb
test
inc
xor
xchg
bound
sbb
je
sti
push
stos
pusha
push
les
sub
icebp
jae
lret
xor
daa
jmp
and
mov
aaa
xor
add
mov
int
push
std
and
push
cli
mov
xchg
add
insb
outsb
ret
or
xchg
shrb
rorb
mov
out
mov
add
fsubrs
outsb
ljmp
mov
mov
lods
test
and
cmp
pop
ret
push
mov
or
fwait
mov
dec
xlat
sbb
mov
daa
cmp
lods
jge
jnp
ficoml
les
pop
out
xor
xchg
std
xor
lret
lds
jge
setl
add
int3
stos
mov
xchg
add
rorl
or
cmc
call
mov
push
jae
xchg
pop
push
jns
or
or
lods
scas
cli
nopl
mov
or
xchg
sti
lret
fimull
scas
xchg
sub
repz
mov
adc
cmp
or
jle
jae
push
dec
pop
xchg
inc
inc
subb
mov
mov
mov
movsl
mov
sbb
push
cld
pop
mov
adc
mov
rcrb
fdiv
les
jbe
push
sahf
rclb
xchg
push
test
clc
adc
or
cmp
pop
mov
jns
repz
dec
std
jo
sbbb
sub
cmc
mov
cmpsb
mov
mov
arpl
daa
and
push
mov
cld
push
cmp
out
add
pop
or
lea
fadd
cmp
dec
out
loope
or
or
adc
mov
cli
or
push
jle
dec
cmpsb
push
mov
and
push
adc
inc
in
cmpsb
and
adc
jg
psubq
out
mov
push
add
add
js,pn
sbb
ja
popl
pop
les
and
cltd
xchg
cmp
fistpl
movb
rcll
pushf
push
gs
or
push
enter
rclb
and
sub
sub
cmp
mov
sub
xor
pop
push
imul
xchg
sub
iret
mov
sahf
insb
lea
push
sbb
nop
xlat
push
or
push
fs
jg
cltd
mov
stos
jp
mov
pusha
jge
xor
dec
adc
popf
inc
cli
or
or
in
mov
hlt
dec
movsl
or
mov
or
loopne
sahf
dec
aas
cwtl
je
sub
sub
dec
add
addr16
lods
testb
inc
sub
lret
out
scas
les
jo
into
inc
stos
fsubr
out
subb
push
mov
adc
mov
sbb
std
jle
push
mov
lcall
fldt
gs
jl
pop
dec
add
test
add
ljmp
cmpsb
jle
jae
mov
sub
cmp
les
popa
adc
pop
or
cld
fistpll
int3
add
jno
std
pushf
push
mov
ret
xorl
adc
mov
mov
sti
sbb
shl
sbb
sbb
in
popf
out
mov
dec
xchg
mov
inc
stc
pop
sahf
call
or
add
or
jge
xor
adcb
outsl
in
popf
iret
add
inc
icebp
jg
inc
inc
or
adc
sub
rorb
jo
push
lahf
mov
pop
jle
sarl
test
push
jl
or
push
sbb
jbe
pop
test
xlat
stos
pop
shlb
movntps
jmp
lods
hlt
and
cld
cltd
dec
test
cli
mov
lahf
pop
xor
nop
clc
movsl
les
fldt
sub
add
and
fisubl
jae
int
pand
mov
rol
cmp
push
daa
fisttpl
lds
jno
sbb
jecxz
rolb
mov
pop
or
call
adc
lods
mov
mov
and
or
push
jp
or
mov
sub
mov
adc
push
mov
test
or
mov
inc
daa
dec
enter
xchg
push
xor
lods
adc
stc
xchg
lds
and
mov
repnz
sub
lods
subb
cli
out
addr16
addr16
adc
pop
lock
sub
stos
test
loope
out
or
cwtl
add
fsubs
jl
pop
lods
jne
mov
xchg
ficoms
out
popa
std
sbb
pop
ret
sbb
add
aam
out
dec
cmpsl
stos
jle
into
push
or
jmp
lods
iret
mov
sti
jg
inc
add
jl
outsl
test
rcrl
sbb
xchg
push
mov
mov
or
xor
jle
test
push
mov
sub
dec
pop
cli
les
sub
cli
movsl
sub
pusha
fiaddl
bound
dec
mov
sub
fidivrl
add
in
scas
inc
fistl
filds
pop
xlat
xlat
fsub
sub
add
mov
xchg
or
add
mov
in
lea
adc
stos
dec
jl
cli
rolb
mov
addr16
and
test
aad
jmp
mov
and
hlt
xchg
push
sbb
mov
mov
cmpsl
roll
inc
movsb
and
sub
sti
dec
xchg
fiadds
or
out
push
sub
dec
jnp
jl
movups
lahf
jl
inc
sbb
inc
dec
push
popf
add
lret
sub
pop
scas
dec
mov
lret
orl
jae
cmp
movsl
xlat
or
cli
adc
mov
fwait
sub
push
int3
and
out
mov
mov
lret
adc
inc
les
sti
pop
pop
ret
out
repz
in
sbb
inc
or
cli
out
daa
fs
xchg
sbb
stos
loope
dec
call
mov
dec
addr16
lcall
sbb
out
mov
sbb
lds
adc
testb
mov
pop
stc
adc
sub
fimull
pop
jae
dec
les
pop
dec
repz
sbb
and
adc
call
test
lret
jecxz
loop
lcall
xchg
jmp
sti
inc
push
call
pop
in
pop
xor
dec
es
lret
in
add
lret
stos
mov
dec
push
in
jnp
dec
sub
fbld
add
mov
in
dec
sahf
xchg
test
cmc
fstl
mov
cmpsl
push
insb
insb
sbb
andps
lahf
in
sbb
mov
cmc
popf
dec
inc
add
sti
pop
mov
or
xchg
ficoml
dec
inc
xor
orl
sbb
in
add
insb
ret
jecxz
cmpl
bound
jle
sti
mov
mov
push
inc
pushf
pop
int3
out
cmp
push
sbb
int3
jl
pop
mov
lods
adc
out
into
lds
cli
adc
sub
iret
xchg
scas
nop
inc
mov
in
cmp
xor
int3
aas
daa
or
dec
jecxz
or
sub
sarl
mov
cli
adc
jecxz
sub
mov
mov
sti
sub
or
mov
dec
pop
dec
dec
or
sub
or
ljmp
aad
movsl
aam
ss
inc
or
sub
addr16
lret
adc
cltd
jnp
lret
dec
or
xor
bound
ljmp
pop
rcl
scas
mov
lods
fistl
int3
js
jmp
cmp
mov
in
cmp
pop
jne
adc
cmp
shl
sti
in
and
in
or
loop
jp
or
mov
xchg
mov
icebp
mull
or
addb
sti
sbb
cltd
lahf
sub
fbld
rep
push
or
mov
gs
or
add
sbbb
ret
jle
xor
fisubl
js
or
int3
sbb
adc
enter
vpcmpgtd
outsb
lods
arpl
inc
mov
dec
and
sub
dec
movsl
bnd
fsubl
repz
stos
test
icebp
sub
fistpl
and
jmp
or
in
into
stos
out
test
or
inc
lods
movsb
pop
jae
daa
jmp
stos
or
movsl
sub
sahf
rep
in
xchg
stos
rcrl
cli
add
out
mov
out
in
in
and
lret
and
push
fldl
daa
mov
xor
repz
and
or
adc
fildl
stc
jl
jnp
push
sub
fs
mov
sbb
les
mov
in
lods
lock
inc
sti
pop
mov
fcmovnu
xor
add
repz
shld
jmp
sub
mov
mov
hlt
mov
xchg
sbb
out
and
movsb
aad
stc
or
pop
sbb
dec
in
fmull
frstor
pusha
add
es
inc
inc
lock
jle
mov
int
test
dec
lods
out
inc
xchg
rorl
sbb
pop
loope
into
sbb
jne
clc
mov
sar
add
fcmovnbe
sub
in
inc
mov
cwtl
adc
pop
insl
or
stos
sub
mov
jmp
cltd
daa
addr16
scas
sub
mov
add
mov
daa
nop
test
or
push
testl
push
mov
adc
cmp
sub
cmpsb
fmuls
loope
fistpll
cmpsb
lods
add
in
pop
mov
xchg
mov
push
and
mov
jl
push
pop
enter
daa
test
mov
fs
sti
and
pushf
pop
mov
in
fs
stos
in
aad
stos
mov
cli
mov
inc
add
ret
fbstp
and
pop
fisttpll
xchg
mov
xchg
loope
push
in
jl
add
mov
jl
lods
jnp
out
or
fldl
inc
clc
mov
or
jle
push
xchg
push
je
jle
popl
pop
pushf
xchg
mov
pop
or
in
push
add
cmp
aas
mov
lahf
jle
insl
js
jl
adc
sti
outsl
and
push
push
add
mov
dec
mov
mov
fs
pop
loopne
popf
push
cmp
cmpsl
repnz
clc
out
sahf
pop
push
adc
jnp
sahf
int3
ret
or
stos
xchg
xor
inc
xchg
sbb
pop
pop
mov
mov
in
sub
mulb
or
sub
in
ds
xchg
ret
mov
mov
and
add
fisubl
sahf
sub
and
repz
sub
into
addb
mov
mov
sub
cmp
push
sbb
addb
lret
repnz
sbb
repz
ds
mov
or
in
fisttpl
mov
ret
orl
inc
hlt
push
lods
and
add
ljmp
and
mov
sbb
sbb
inc
rcr
pushf
stc
or
hlt
mov
sub
rolb
dec
or
xchg
add
rcrb
cltd
bnd
mov
dec
insl
or
scas
dec
enter
and
pushf
xor
out
pushf
mov
jbe
push
push
add
inc
adc
incl
sti
push
std
add
int3
popf
jmp
jmp
and
call
das
jns
push
out
in
jl
add
lret
roll
scas
cmp
stos
outsb
mov
xor
mov
sbb
rorl
or
jns
add
stos
push
ljmp
lock
push
test
lds
sbb
jl
pop
push
ret
sar
rcl
and
push
addb
inc
ret
int3
sbb
movsb
pop
popf
jecxz
mov
inc
insl
jecxz
sahf
cli
pushf
or
popf
cmp
sbb
loope
mov
sub
cmp
jp
int3
push
mov
rcrl
inc
insb
add
mov
bnd
inc
mov
pop
idiv
je
push
fdivs
pop
das
addr16
loopne
sti
dec
mov
adc
fwait
test
add
ja
jae
nop
je
sbb
push
mov
mov
aam
call
sub
jns
iret
mov
adc
adc
je
mov
leave
cld
jmp
movsl
scas
jle
adc
adcb
xchg
lds
lret
sbb
mov
sbb
mov
imul
sti
pushf
call
add
mov
jnp
mov
in
pop
in
sti
inc
xchg
test
ret
stos
add
xchg
es
test
test
xlat
sub
mov
sbb
repz
outsl
popa
in
cmp
ret
nop
fisubl
adc
push
adc
addr16
movsb
adc
mov
jle
pop
mov
jge
or
inc
rolb
daa
xchg
and
sub
dec
and
cmp
cmp
repnz
sub
clc
cmp
repz
ja
std
adc
pop
imul
cs
pop
jb
add
inc
sahf
push
in
insb
call
addl
xor
stos
push
or
lret
sahf
outsb
mov
cmp
lcall
aam
xchg
adc
scas
sub
stos
add
push
paddsw
pop
xchg
data16
jnp
inc
loop
sbb
cmp
movb
pop
int3
cld
sub
in
xchg
inc
ret
xlat
test
sahf
jno
scas
mov
jl
add
int
xchg
adc
sti
rorl
and
aaa
and
xchg
sti
ljmp
pop
insl
cli
pop
scas
cmp
lret
sub
in
or
or
stos
push
ss
mov
test
inc
mov
dec
sbb
add
xchg
jmp
jns
mov
fs
pop
out
pushf
jnp
pop
push
cmpb
fimull
jne
dec
jle
mov
lds
movsb
add
and
fcmovbe
sti
sbb
inc
movsl
mov
xchg
dec
push
cwtl
fprem
mov
sahf
or
and
mov
mov
fwait
push
cwtl
jl
pop
pop
scas
sti
mov
push
leave
prefetchnta
sub
or
rorb
mov
sbb
icebp
inc
dec
adc
mov
dec
fmuls
mov
movsb
mov
fidivs
push
cmpsb
mov
aaa
mov
add
rclb
out
das
or
cmc
lods
lods
dec
sti
in
mov
ret
jle
dec
movsl
insl
fsubp
loope
cmpl
pop
sbb
xlat
adc
adc
pop
les
lods
into
daa
insb
mov
lock
out
sbb
or
std
or
add
pop
sbb
pusha
push
js
mov
xor
xor
pusha
dec
pop
iret
test
or
or
ficomps
add
xchg
inc
mov
mov
sub
or
mov
cmpsb
fimuls
sbb
sahf
sub
loope
daa
hlt
aad
loopne
sbb
mov
mov
test
push
daa
sub
out
fwait
xchg
mov
cld
hlt
stos
in
cmp
inc
mov
dec
cld
dec
popf
sub
sub
fstps
mov
cmp
jle
in
dec
sahf
pop
mov
inc
inc
mov
mov
inc
mov
push
jo
xor
push
sub
int3
cwtl
loope
clc
inc
or
xchg
or
ret
adc
std
stc
stos
or
stos
mov
xchg
inc
mov
lea
sbb
mov
mov
ljmp
adc
push
dec
inc
jno
shlb
out
jnp
pop
fwait
xchg
sbb
hlt
sbb
cld
ds
call
cmpsl
xchg
add
pop
ja
jns
lods
out
or
movsl
sub
ds
popa
lea
add
dec
pop
push
cwtl
or
jp
dec
iret
or
lds
cli
icebp
pop
arpl
or
push
hlt
pushf
sub
mov
mov
adc
cmc
push
mov
or
insb
sti
lret
leave
pushf
std
jb
std
std
int3
notl
mov
mov
lods
mov
xchg
xchg
xchg
xchg
stos
ja
pop
add
out
sti
inc
inc
xchg
inc
push
jp
pop
fisttpll
or
push
arpl
dec
cltd
dec
fdivl
aad
inc
rorl
or
popl
mov
popf
jle
ret
or
adc
jnp
xlat
or
loopne
movsl
leave
js
add
test
push
cld
add
scas
rclb
ds
sub
xor
mov
lods
xor
lcall
pop
and
mov
push
mov
dec
aad
adc
push
dec
lret
sub
test
jnp
add
jb
ret
cmc
sub
fldt
mov
cmp
or
xchg
adc
test
inc
jle
and
sbb
ljmp
sahf
mov
call
aas
in
or
pushf
ret
adc
cmp
cwtl
mov
out
lret
mov
subl
fldcw
shll
xchg
add
inc
inc
test
dec
mov
mov
sub
lods
rol
xor
cmp
scas
or
dec
xchg
sub
mov
loope
mov
fnsave
xchg
dec
add
ds
add
push
imul
popf
rorb
or
cmp
cmp
push
aaa
jl
sbb
sbb
lods
pusha
mov
test
or
ret
sarb
jnp
ljmp
dec
lea
js
push
lods
je
jle
stos
push
repnz
push
pop
aad
test
test
add
out
mov
mov
ficoml
orb
cld
or
std
scas
pop
mov
add
aas
cmpl
cmp
std
add
mov
mov
jge
lock
xor
movsl
xor
sub
ret
mov
sub
bound
icebp
pop
and
repz
pop
dec
sbb
or
in
push
mov
jl
and
mov
in
push
cli
inc
add
sub
mov
repnz
lods
sbb
cmp
pushl
imul
movsl
add
mov
les
mov
push
sbb
add
mov
int3
cld
xchg
jmp
stos
dec
mov
clc
add
incl
inc
jbe
pop
les
cmp
inc
cs
mov
gs
push
or
cmp
push
gs
loope
lea
stos
xor
pop
xchg
pop
adc
jo
movsl
scas
cmp
loopne
icebp
sti
in
pusha
mov
pop
addb
mov
xchg
push
mov
or
nop
pushf
pushf
add
js
daa
xchg
and
jns
out
or
movsb
jle
mov
push
int
and
dec
or
scas
or
loop
std
subb
mov
dec
cwtl
cmp
lods
js
inc
lods
inc
je
lods
popf
lret
push
push
sub
test
xchg
pop
jmp
jnp
jmp
orl
sbb
mov
xchg
xor
mov
out
push
fsubl
add
dec
popa
in
or
add
xor
loopne
mov
std
or
enter
addl
inc
jnp
xchg
cmp
icebp
enter
leave
mov
mov
sbb
in
loop
or
cli
xchg
mov
or
jge
or
jmp
pop
cmp
pop
pop
pusha
ljmp
dec
mov
pop
lds
decb
sbb
cmpsb
or
mov
mov
fisttps
cmc
or
in
adc
orb
add
sahf
incb
cmp
sub
repz
sbb
subl
insb
push
pop
subl
loop
leave
insl
ror
sbb
jmp
daa
adc
mov
inc
jg
or
sti
pop
lret
leave
mov
mov
cmp
adc
or
scas
dec
popa
mov
inc
push
mov
sbb
bound
stos
iret
jnp
xchg
add
bnd
sub
sub
lcall
dec
les
pop
pop
in
loop
mov
in
fstp
mov
mov
lret
in
test
aaa
jg
out
and
enter
mov
pop
es
aaa
add
push
in
rolb
mov
inc
aad
les
stos
pop
test
addr16
inc
mov
inc
pushf
mov
lahf
test
fdivrl
jp
jle
lock
or
cmc
stc
mov
or
sbb
ss
inc
ret
adc
xchg
push
cld
aam
js
and
fwait
test
xchg
push
lea
int
pop
outsb
cmp
sti
add
mov
jg
int3
fsubrl
mov
loop
cmc
or
enter
cmp
adc
and
clc
gs
mov
loop
call
stos
les
jl
cwtl
xchg
dec
imul
push
sahf
test
gs
and
lret
or
mov
jg
cmp
mov
daa
scas
je
mov
rcr
sti
push
xchg
aaa
add
inc
adc
dec
sub
add
or
xchg
ret
in
xchg
rorl
jecxz
pop
pop
adc
popa
je
cmp
clc
aad
ret
rol
or
inc
push
aam
ss
lret
enter
test
cmp
jecxz
push
loop
inc
into
cmp
rcrb
shrb
rcll
xchg
mov
add
pop
add
ljmp
faddl
loope
ret
sub
add
addl
int
jp
jg
inc
cmpsl
aam
pop
sbb
scas
data16
sbb
lea
cld
call
mov
pop
push
mov
shl
pop
out
cmpsl
sbb
dec
cmp
mov
cs
inc
xchg
mov
xchg
mov
cmp
cmpsl
add
stos
repnz
movl
or
sbb
add
cmp
movsl
enter
or
pop
xor
ds
stos
fcomps
out
mov
sbb
or
enter
loop
int3
xor
pop
enter
pop
adc
sahf
out
inc
push
enter
mov
fisttpll
stc
adc
mov
scas
or
jbe
rorb
xor
jnp
mov
add
movsb
mov
and
fsubs
xchg
push
ret
or
xchg
jmp
in
stos
adc
aam
pop
mov
and
fists
xchg
jnp
xorps
cmp
pop
or
stos
and
pop
push
jecxz
pop
mov
mov
mov
dec
popa
mov
mov
sbb
sbb
ret
jns
inc
ret
add
xchg
xchg
test
test
adcb
loop
push
sbb
icebp
jecxz
stc
enter
mov
xor
or
mov
in
cmpsl
xor
jp
mov
shlb
in
pushf
push
sbb
sahf
enter
cltd
jmp
or
sti
arpl
or
xchg
decl
add
or
sub
xchg
pop
adc
push
lcall
mov
sbb
xor
jnp
aas
int3
and
sti
jno
scas
daa
mov
movsl
enter
popf
add
test
pop
xchg
mov
out
fnop
mov
dec
leave
or
int3
inc
jns
pop
into
das
add
push
in
stc
fisttpl
cmp
leave
jge
dec
stos
scas
push
xchg
adc
inc
jg
and
lcall
fwait
into
mov
mov
or
test
mov
cmp
xchg
add
insb
pop
sbb
movl
jle
xchg
in
cmp
leave
cmpsb
repz
xchg
sbb
and
cld
pop
cmpsl
push
movsl
or
or
out
aaa
jecxz
sahf
sahf
mov
fs
or
cmp
jle
lcall
test
mov
popa
sahf
add
ss
popa
pop
roll
pushf
jnp
or
je
stos
movsl
scas
orl
ja
ret
cmp
test
aaa
push
dec
shlb
hlt
inc
xchg
fstps
pop
push
mov
lods
fimuls
fisubrs
aam
les
lea
test
test
in
pop
ds
cmp
add
push
gs
mov
pushf
ret
repz
in
and
pop
loop
fadds
lret
push
sbbl
fadds
add
add
push
mov
lods
loope
in
sub
icebp
xchg
add
jecxz
sti
ficompl
test
and
pop
dec
call
add
sub
arpl
in
jb
mov
jb
add
fscale
movsl
int
lods
faddl
push
jno
loop
and
arpl
inc
ret
pop
call
aaa
dec
outsl
imulb
daa
xchg
cmp
sub
pop
rcrb
je
mov
mov
loope
sbb
and
inc
mov
mov
xchg
std
lods
xchg
and
aam
or
adc
push
stc
mov
test
fwait
pop
dec
pop
mov
dec
stc
cmpsb
cwtl
xor
je
inc
lds
iret
cmp
bound
and
sti
add
add
shlb
xchg
jle
movsb
lret
lcall
outsl
pusha
sti
xchg
orl
mov
mov
mov
in
mov
aam
aam
stc
or
mov
mov
push
adc
mov
mov
loopne
push
lds
mov
and
dec
outsb
rcrb
mov
jnp
lock
push
outsb
xchg
pop
rorl
imul
cs
add
stos
and
sbb
out
mov
push
sbb
decb
jle
outsb
cmp
outsb
sbb
popf
lcall
mov
in
stos
cmp
lahf
inc
xchg
cmp
dec
mov
adc
push
adc
scas
enter
mov
jo
pop
pop
clc
popf
test
sti
xchg
call
xchg
jbe
push
stc
lret
stos
fldt
add
adc
sahf
add
mov
stos
cli
lock
mov
stos
jae
mov
std
in
dec
inc
repz
cwtl
lret
pop
push
jb
pop
add
lock
jnp
xchg
sbb
sbb
lcall
test
outsb
enter
push
int
pop
mov
inc
or
lret
lret
js
insb
jb
lret
test
test
push
or
ss
sbb
mov
in
xchg
loope
adc
pop
xchg
js
repz
or
or
test
loop
movsl
into
movsb
mov
jmp
adc
xchg
xchg
mov
mov
loop
or
xor
sbb
orb
daa
jge
push
push
int3
mov
mov
neg
hlt
pop
cltd
aad
shrl
sbb
sbb
lahf
addb
mov
ljmp
and
push
push
inc
lret
or
jnp
addr16
mov
testl
hlt
adc
xchg
enter
mov
test
mov
inc
ss
mov
xor
jnp
mov
repz
or
pop
inc
pop
lret
mov
xor
fcoms
dec
movsl
adc
add
pop
cmp
xor
push
or
mov
or
popf
adc
or
pusha
xchg
iret
pop
bound
pop
popf
test
in
fs
stos
scas
xchg
pop
movsl
mov
jge
sub
push
inc
pop
in
add
mov
push
or
inc
ret
cs
pop
nop
gs
fsts
and
subl
mov
add
jp
fcmove
ljmp
iret
out
loop
aad
rcrl
xchg
out
mov
jb
fs
nop
in
push
or
mov
mov
xlat
adc
pushl
fwait
clc
imul
into
mov
mov
adc
dec
sbb
mov
mov
lods
push
mov
fsubl
sti
pop
ds
inc
les
push
int
jbe
cmp
mov
lock
sub
and
pop
rcrb
popa
out
push
sahf
arpl
mov
xchg
in
not
mov
pop
jecxz
int3
lret
push
out
loopne
cmp
ret
popf
in
or
fdiv
mov
lcall
sbb
lahf
popf
jbe
adc
cmp
or
mov
fnstsw
cmp
jmp
and
shl
fistps
inc
scas
cmpsl
daa
pop
icebp
nop
cmp
mov
xchg
pop
clc
mov
fildll
in
arpl
aam
sub
inc
fs
cmpsb
inc
shrb
sub
mov
cmp
pop
dec
std
movsb
mov
les
mov
add
ret
popf
xor
mov
shll
or
call
xchg
pop
shl
rcrw
sub
jmp
and
add
mov
xchg
push
fmull
inc
dec
mov
adc
pop
lcall
push
dec
jmp
push
fwait
les
repz
jle
xchg
arpl
push
pusha
or
or
sti
pop
mov
mov
sbb
mov
lcall
or
xchg
mov
adc
sbbb
mov
sbbl
pop
test
sti
mov
xor
xor
jg
push
scas
add
fstps
mov
jb
icebp
clc
adc
xor
adc
dec
mov
xlat
sub
insb
aam
scas
and
fiaddl
sbb
dec
repnz
pop
orl
mov
pop
mov
pop
lahf
stc
pop
ja
dec
inc
stos
mov
rclb
inc
jmp
push
pop
cmpsl
and
push
rolb
call
aaa
addl
sbb
fidivs
sub
mov
add
out
mov
or
mov
clc
mov
gs
jle
cmp
lds
in
add
in
add
mov
jmp
test
mov
mov
insl
mov
cmp
iret
test
shrb
jo
outsl
imul
or
or
inc
clc
pop
call
jbe
cmp
ret
fstpt
loopew
movsb
cmc
inc
movl
call
sarb
sbb
xchg
add
mov
pushf
mov
push
clc
cli
inc
lret
push
int3
sub
or
sahf
cmp
sbb
enter
mov
push
mov
notb
in
int3
xor
insb
sbb
int3
xor
lock
shl
in
pop
cmp
ret
sbb
push
movsb
cmp
loop
test
in
inc
loope
jecxz
iret
jmp
popa
dec
faddl
out
mov
sub
xor
cmc
lahf
push
push
stos
cmp
es
cs
in
sbb
cmp
test
jle
pop
fwait
ljmp
push
pop
sbb
dec
jl
mov
jo
and
fstpl
xchg
ja
js
into
int
xchg
xor
jns
lret
fstpl
adcb
sbb
jnp
pop
sub
insl
outsl
mov
shrb
inc
daa
ss
cld
pop
push
insb
arpl
mov
roll
int
mov
sub
push
jle
or
mov
ljmp
stos
cmpsl
inc
in
fsubrp
mov
mov
sti
sbb
rcl
jle
push
jmp
xchg
or
lret
dec
push
and
add
mov
pushf
add
out
testl
popa
inc
lret
sub
push
lret
push
jg
or
gs
fs
repz
stc
out
mov
lret
into
ljmp
popa
or
or
stos
or
into
aas
aas
jmp
push
mov
pop
jg
inc
aam
ss
sarl
addl
cmp
and
out
aam
in
pop
pop
sub
xor
dec
or
mov
hlt
fs
sti
inc
in
sti
add
add
stc
or
xchg
add
sbb
fmull
xchg
adc
outsl
mov
sub
fcoml
dec
pop
jg
imul
pop
add
adc
flds
cmp
cmc
addl
xor
sbbb
stos
int3
push
sub
dec
jo
or
insl
inc
pop
daa
xchg
sub
jnp
les
xchg
dec
push
lods
sbb
adc
and
mov
fimuls
pop
and
jne
jnp
fwait
lcall
cmpsb
iret
ljmp
push
xchg
scas
or
arpl
inc
call
mov
das
ret
xor
or
or
cmpsl
and
push
mov
pop
add
xor
sub
mov
fs
cmc
xchg
std
pushf
movsb
cltd
call
jb
sti
push
jmp
pushf
xor
xchg
ja
xchg
xchg
sarb
sub
ret
pusha
sub
xchg
sahf
orb
cmp
and
push
out
push
fs
jg
cmpsb
subb
fisttpll
adc
push
fstpt
cmp
andb
pushf
xorb
add
shrb
pop
push
jle
bound
dec
mov
and
or
pop
add
insb
fsubrs
jae
add
xor
lods
cli
aam
fnstenv
inc
add
or
fldenv
ljmp
cmp
sub
push
cltd
cmp
sbb
xchg
jbe
xchg
dec
daa
pop
test
insl
shl
icebp
push
mov
mov
jmp
nop
sub
adc
aam
fdivrl
dec
mov
int
in
jnp
mov
imul
dec
pop
or
pop
test
cmp
imul
cld
inc
les
scas
lcall
fildl
jg
push
pushf
lods
shrb
push
into
sahf
cmpsl
pop
lret
add
push
jle
sub
jg
mov
stos
lret
nop
dec
movsl
dec
sahf
pand
cmpl
jnp
jnp
add
test
jmp
lcall
stos
add
jmp
mov
cs
nop
sub
pop
in
and
xchg
pop
enter
jno
pop
sub
xor
mov
cmpsl
sub
sbb
outsb
adc
mov
sub
es
xchg
cli
add
insb
imul
mov
inc
adc
int3
addr16
pop
shrb
push
mov
mov
add
add
push
sbb
fucomi
les
push
stc
sub
xchg
xchg
ret
or
inc
pushf
xlat
mov
sub
and
into
sbb
pop
clc
jbe
loopne
fs
and
addb
mov
insb
fimull
scas
insl
jmp
mov
jnp
adc
ficoml
test
mov
jbe
xchg
cmpsb
inc
mov
add
sub
push
mov
cmp
mov
rclb
cld
stos
scas
sti
mov
jge
mov
or
iret
sub
sbb
dec
and
sahf
inc
lahf
sahf
and
je
insl
insb
rclb
xchg
rorb
dec
fwait
arpl
test
scas
lret
cltd
aas
or
mov
lcall
jge
outsl
sub
adc
stc
or
pop
mov
and
in
jns
movsb
or
pop
sbb
adc
xor
dec
xor
cmc
test
test
jns
movsl
int3
pop
add
fwait
loope
sub
ret
mov
sahf
inc
imul
es
mov
stos
outsb
in
sti
push
in
inc
out
cmp
movsb
scas
cmpsb
jb
xor
test
stos
lds
clc
and
orb
cld
xchg
andb
cmpsl
xor
test
ljmp
repz
sub
push
sbb
mov
sbb
mov
lret
test
mov
pop
call
std
sbb
lret
icebp
and
in
inc
jmp
push
and
in
lcall
inc
out
dec
cwtl
xchg
test
subb
jbe
mov
arpl
fisubl
dec
dec
int3
pop
jge
into
add
jl
popf
dec
shlb
test
push
or
in
lods
and
fcmovnb
fwait
daa
jmp
test
xor
fbld
or
jns
lds
xchg
stos
enter
fidivl
mov
jp
ljmp
xor
or
or
sub
or
or
orl
cwtl
aam
sahf
mov
popl
mov
pop
push
std
pop
cmp
and
arpl
lea
aas
jo
inc
pop
add
js
push
or
and
xchg
push
adc
cmp
movsb
rcrb
dec
testl
xchg
sub
inc
out
cmp
popa
daa
inc
lods
sbb
cmpl
cmp
sbb
lret
stos
cmc
test
cwtl
mov
xchg
xor
les
sahf
sub
push
popa
aam
jge
hlt
mov
jl
or
repnz
mov
in
xchg
add
xchg
xlat
cmp
sub
shrb
mov
fnstenv
fdivrl
out
sub
xor
or
pop
fs
pop
xor
add
out
vmread
cmp
incb
xchg
js
mov
andb
mov
pop
or
flds
xor
lods
push
mov
sbb
imul
xchg
adc
dec
into
scas
int3
jecxz
xor
pushf
enter
dec
sub
or
in
out
xchg
nop
xchg
in
add
inc
xchg
and
outsl
push
add
addr16
inc
adc
out
leave
dec
call
dec
call
daa
shl
int3
push
sub
mov
insl
dec
mov
shlb
mov
bound
add
add
call
mov
xchg
aaa
aam
add
iret
out
xchg
jmp
lret
in
add
ret
int
adc
into
or
xchg
stos
push
or
mov
repnz
fwait
xor
xor
cmp
fmulp
mov
std
pop
sub
arpl
andb
pop
inc
into
sahf
add
daa
incl
jmp
xchg
sbb
jne
das
dec
or
pop
cltd
testb
xchg
mov
or
lret
repnz
les
dec
and
dec
ljmp
cmp
mov
pop
cltd
addr16
pop
lods
loop
hlt
push
xor
xor
or
mov
call
mov
pusha
xor
xchg
dec
sub
jnp
mov
mov
pop
pop
xchg
or
sub
popf
popl
pop
les
jmp
and
loop
sti
mov
or
inc
or
aad
mov
pop
pop
mov
sahf
xchg
cmp
inc
popa
loopne
add
or
iret
jo
fucomp
push
mov
cmc
add
mov
scas
mov
ds
test
aam
mov
add
inc
lcall
add
shlb
popf
aad
rorb
shrl
push
cmp
add
js
sub
sahf
dec
dec
sbb
fs
or
add
gs
adc
add
imul
push
enter
outsl
mov
lret
push
jnp
js
int
pushf
xchg
xchg
add
lods
in
mov
push
add
mov
cmp
leave
pop
sbbl
test
xchg
sub
mov
sbb
xchg
movsb
out
sub
push
repz
inc
mov
jp
out
jae
pop
mov
add
call
enter
leave
sahf
jmp
add
mov
xor
enter
or
mov
jno
adc
push
or
shll
jno
xchg
rcrb
jle
lock
jne
mov
jle
aad
jl
scas
mov
shrb
cwtl
xchg
fadds
push
xchg
sub
stos
mov
sbbl
pop
adc
rorl
sti
pop
aas
mov
mov
add
sub
push
mov
addr16
scas
add
sub
jl
push
mov
rorb
mov
aad
shll
fisubrs
bound
lret
int3
rcl
mov
dec
fs
fidivs
aas
mov
xchg
push
mov
ror
or
sub
ret
xchg
je
cmc
insb
in
inc
xor
popl
andl
push
test
lret
mov
sbb
sahf
fcmovnb
xchg
pushf
orb
mov
loop
adc
addl
push
push
pushf
mov
fsub
add
mov
push
or
pop
lods
jmp
or
pop
pop
add
cli
ja
in
fmuls
mov
mov
mov
imul
ret
jl
adc
jp
loopne
add
add
pop
arpl
dec
sti
ret
test
xchg
jnp
arpl
scas
incb
outsl
call
test
mov
andb
xor
xlat
inc
dec
sarb
jo
add
sbb
fiadds
mov
mov
shrl
jle
pop
sub
fcomps
mov
or
jecxz
lahf
iret
mov
cmpsl
mov
mov
pop
mov
test
jle
pop
lahf
dec
lret
or
push
ds
add
pop
mov
ljmp
inc
xchg
out
sbbl
sti
fnsave
xchg
jp
cmp
bound
sbb
into
fnsave
bound
sbb
push
hlt
and
pop
lods
mov
push
pushf
js
aam
mov
pop
mov
ljmp
xlat
sbb
mov
mov
xchg
hlt
cmovb
insb
scas
jmp
lods
sub
in
subl
in
sar
xchg
sub
mov
popf
xor
sahf
movsl
mov
dec
add
sbb
xchg
ret
push
fildl
fadd
sbb
push
cmp
lods
iret
arpl
stc
cmp
or
mov
in
mov
arpl
push
sbb
cmp
pop
in
or
push
xchg
pop
xlat
sbb
push
test
and
repz
sub
pop
or
cld
insl
and
or
lea
or
into
cs
jnp
or
mov
and
mov
xor
mov
jge
pop
mov
or
xchg
inc
das
push
sahf
cmp
jecxz
adc
dec
aam
dec
test
jle
dec
bound
insb
ret
sub
call
mov
ror
jmp
pushf
lret
test
lds
jnp
dec
fwait
imul
sub
and
cmp
add
add
ret
addb
mov
pop
or
adc
cmp
xor
add
add
les
sbb
in
sbb
into
cmp
cmpsl
lods
sahf
pop
sbb
insb
fldl
popa
pushf
push
jle
mov
pushf
lea
push
cmp
push
sub
pop
into
stos
movsl
xchg
xchg
ret
jmp
stos
in
mov
adc
add
mov
dec
sub
xchg
mov
daa
add
push
imul
hlt
mov
push
mov
dec
push
jmp
push
pop
push
add
dec
sub
lahf
ljmp
jne
inc
jae
cs
jo
cmp
mov
mov
sub
adc
pop
sbb
cmp
cmp
mov
shll
inc
jmp
push
aaa
dec
jnp
jp
push
insl
jne
scas
es
enter
dec
pusha
mov
leave
dec
mov
mov
and
or
and
sbb
inc
pop
xrelease
mov
jl
jle
dec
hlt
inc
popf
sub
hlt
inc
xchg
scas
lret
xchg
or
push
cmp
lahf
ret
mov
fsubs
fistps
lret
push
cmp
sbb
xchg
in
add
mov
and
in
inc
xchg
sahf
insb
dec
testl
xchg
xor
movsl
out
jge
sub
inc
pop
pushf
mov
jl
mov
push
lock
shll
and
xor
inc
scas
mov
lret
mov
mov
lock
adc
hlt
mov
sar
sahf
call
xchg
dec
push
cmp
dec
rcrl
repz
jge
cli
ret
sar
push
ljmp
add
and
fcoms
jnp
cmp
out
mov
cmp
out
sbb
push
cmp
mov
fs
sub
test
push
fadd
aad
sti
inc
xor
inc
test
outsl
mov
cmpb
cmp
imul
insb
jl
xor
jle
addr16
jb
bound
and
jnp
xchg
andb
ljmp
xchg
lds
fs
int
into
sub
je
fsubrs
push
and
popa
pushf
mov
push
or
shlb
pop
sbb
movsl
xor
cmp
cmp
incb
in
sti
sahf
inc
jnp
lcall
sub
pmulhuw
xchg
fidivl
adc
add
mov
adc
sub
fbld
imul
movsl
xor
add
js
stos
pop
and
out
mov
xorb
adc
adc
ljmp
sbb
dec
je
xor
push
xchg
mov
push
inc
dec
imul
sub
cmp
xchg
and
hlt
mov
xor
push
and
jl
out
pop
outsb
adc
pop
lcall
push
hlt
sub
cmp
xchg
add
pop
dec
icebp
rorl
lret
cld
dec
stos
gs
loop
xor
add
dec
push
sbb
shll
arpl
mov
fcomps
repz
cld
mov
fmull
loope
gs
pop
pop
mov
aad
jno
mov
sti
fisttps
cmp
sahf
les
dec
jmp
frstor
lods
sbb
mov
add
jae
fimuls
mov
mov
push
pushf
sti
push
xchg
in
sub
shll
mov
addr16
jno
popf
inc
test
and
jns
int
mov
inc
add
pop
or
rclb
incl
ret
repz
inc
js
sbb
movsb
rolb
in
lahf
repz
jbe
es
bsf
rcll
call
cli
dec
in
lock
push
jmp
clc
inc
or
lret
leave
sub
sub
pop
xchg
dec
in
imul
orb
rorb
data16
in
cwtl
add
sti
dec
xor
fadd
mov
sahf
inc
mov
inc
pop
sbb
lea
push
push
push
repnz
cld
push
push
or
and
add
mov
or
sub
sbb
pop
test
jmp
popa
cmc
out
popf
fadd
int
pop
jge
jecxz
shll
xchg
aam
sub
mov
add
add
inc
inc
test
sti
das
lahf
fldt
rcl
sbb
loopne
jnp
push
subl
es
jo
in
imul
nop
cmpsl
pushf
mov
stos
jge
jbe
pop
imul
sbb
cmp
cmpsl
pusha
cmpsl
jle
gs
popa
lret
nop
cmp
push
insl
mov
bound
pusha
dec
push
mov
aad
and
mov
sbb
mov
inc
push
test
pop
lods
aas
or
icebp
xchg
arpl
loope
add
dec
fs
mov
jnp
sbb
push
jp
push
cld
add
mov
cmp
call
push
lret
mov
andl
lds
and
mov
test
pop
hlt
stos
sti
pop
adc
add
cmp
sub
sub
lcall
insl
addr16
push
stc
jg
or
cmp
cli
aad
adc
ja
dec
mov
jmp
fsub
xchg
mov
insb
add
dec
inc
sbb
enter
fldenv
jl
xchg
pop
pop
adc
imul
sarb
cld
sub
jle
in
sbb
lds
rcrl
subl
sbb
dec
sbb
int3
pop
and
ror
cli
xchg
test
pop
xor
ja
mov
mov
stc
stos
imul
scas
inc
dec
scas
push
jnp
inc
jge
aaa
scas
mov
movsl
arpl
adc
in
cli
pop
or
popf
aad
arpl
sbbl
sub
outsb
pop
adc
jnp
or
fsubrs
repz
filds
and
lret
xorl
cmp
mov
pop
into
shrw
in
shll
cmp
cmp
dec
fildl
fimuls
sbb
push
or
inc
lock
mov
mov
or
imul
arpl
jns
and
push
cld
push
push
mov
lahf
mov
pop
pop
andl
mov
add
push
or
movsl
aas
out
sub
jmp
add
and
aad
dec
or
add
mov
push
lods
cmc
mov
outsb
cmp
popa
icebp
add
movsl
adc
mov
sub
pop
add
jle
push
pop
xor
cmp
xchg
sbb
mov
sub
and
sbb
mov
pop
aam
pushf
fisttps
xchg
dec
inc
push
jns
or
cwtl
lahf
pop
lods
ror
lahf
stc
scas
inc
mov
lods
or
movsb
fucomi
in
dec
aam
xchg
and
add
icebp
mov
pushf
test
andl
and
popf
or
pop
call
ret
loop
mov
and
hlt
lods
xor
dec
sarl
ds
jp
push
fcomps
adc
fisubrl
mov
popf
or
xlat
cs
sub
movsl
jp
insb
cmpsb
cmpsl
das
lock
daa
fiaddl
sbb
inc
sbb
inc
sub
dec
fisubrs
test
inc
adc
push
dec
add
inc
call
add
jo
sti
jg
mov
or
ret
rcrb
dec
lds
shrb
dec
aam
jnp
in
cs
inc
ret
call
icebp
xlat
addb
int3
ret
lret
imul
mov
insl
mov
mov
fildl
das
add
pop
fistl
sti
jne
dec
mov
sbb
jns
add
ljmp
sbb
leave
mov
hlt
int
xor
add
jge
inc
sahf
inc
outsb
pop
cmpsb
shlb
ljmp
sbb
add
arpl
or
cltd
fndisi(8087
sub
pop
subl
call
xchg
or
push
inc
int3
nop
fisubrs
and
inc
push
rcrb
js
fimull
test
ljmp
mov
repz
loope
das
fcmovb
or
sti
scas
push
inc
hlt
out
sarl
test
test
repz
stc
loope
outsb
inc
jecxz
movsl
rolb
cli
pop
maskmovq
notl
sub
sub
sbb
and
inc
or
add
xchg
repz
ss
cmpsl
cmpsb
sbb
or
add
sub
dec
sub
push
mov
and
pushf
jb
lods
aas
xchg
mov
arpl
stos
or
mov
jge
cmpsb
mov
add
fisubs
lret
jle
mov
fwait
insb
xchg
inc
inc
les
jl
and
inc
push
fists
jns
mov
adc
arpl
inc
ret
inc
jl
movsl
aam
out
dec
int3
and
inc
xor
je
sarb
sbb
xlat
loope
mov
hlt
enter
push
incl
scas
cmc
ljmp
loope
test
sub
jge
or
insb
cli
hlt
add
jae
xchg
sahf
shlb
jmp
movsl
inc
mov
xchg
js
and
push
js
add
push
out
cltd
je
pop
iret
insb
clc
js
in
icebp
sub
decl
out
bound
xchg
data16
fisubl
call
lret
xor
mov
or
int3
jle
and
mov
adcl
inc
push
sahf
aas
sub
lret
scas
dec
fwait
scas
inc
mov
movsl
adc
or
cmpb
jecxz
add
inc
lds
xchg
stos
popf
xor
lret
sti
dec
xor
cmp
push
inc
sti
mov
lret
or
mov
mov
fidivl
or
ss
pop
jmp
inc
push
ljmp
push
push
lcall
lcall
sbb
lret
mov
sbb
aad
stos
arpl
insb
jnp
mov
pop
shl
hlt
lods
push
mov
pop
dec
lcall
adc
cld
xor
add
pop
or
mov
cli
out
leave
add
nop
mov
subl
cmp
pop
and
pop
repnz
outsl
cld
rcll
push
lret
sbb
pandn
xchg
add
xchg
push
xchg
or
sbb
sub
sbb
lcall
ds
xor
dec
push
pop
mov
sti
in
mov
jle
pop
jp
imul
xchg
pop
mov
inc
outsb
pop
out
pop
cmpsl
bt
mov
test
mov
arpl
cmp
out
shll
fisttpl
lods
jp
test
scas
jbe
movsl
adc
lods
push
lea
insl
mov
sub
sub
into
lods
loope
mov
sub
pop
sub
push
sub
xchg
lret
xchg
repz
je
int
shrl
shl
mov
push
inc
sub
rcrl
mov
je
xor
or
and
pop
pop
inc
xchg
and
stos
icebp
mov
mov
test
jl
pop
dec
fucomi
in
sbb
sbb
dec
xor
in
cmp
ror
pop
xchg
sub
jl
push
inc
hlt
mov
or
fwait
sbb
push
jae
fimull
inc
or
mov
and
int3
insl
insb
adc
jns
or
test
les
xchg
push
cli
pop
in
mov
sti
add
xchg
je
out
xchg
in
addr16
leave
orl
push
or
push
or
adc
xchg
dec
lea
add
sub
fwait
mov
push
jns
push
and
out
push
cmpsb
insb
enter
call
mov
jbe
aam
or
add
xor
stc
or
lret
cmpsl
fisubrs
mov
sbb
pushl
push
push
mov
push
dec
out
orl
ljmp
test
mov
mov
or
mov
sub
orb
fwait
or
lds
aaa
ljmp
inc
or
or
mov
fs
or
add
das
inc
xchg
jg
or
inc
leave
mov
adc
subb
ljmp
adc
mov
std
or
mov
or
sahf
jl
fldl
xor
add
xchg
in
xchg
cwtl
stc
std
xchg
jmp
adc
sahf
add
pop
lcall
shlb
inc
or
insb
lret
stos
xchg
jnp
movsl
pop
inc
mov
addl
push
sbb
lods
push
fs
cmp
leave
pop
or
std
cmp
scas
sub
and
xor
add
in
mov
jge
jle
enter
xor
pusha
roll
icebp
add
lock
lret
insl
movsl
scas
dec
dec
mov
pop
lahf
mov
add
sti
or
pop
loop
jbe
jmp
sub
cmpsl
push
ret
outsb
inc
sbb
add
outsl
rolb
dec
or
mov
pop
push
xchg
scas
or
test
stos
ret
xchg
mov
push
in
repnz
iret
sub
cmpsb
rorb
mov
xchg
fsubl
stos
add
or
movsb
lcall
in
scas
adc
cmp
ja
lret
pop
sub
mov
not
sbb
dec
or
adc
add
jnp
inc
lods
iret
inc
jmp
out
clc
and
or
outsb
subl
dec
mov
mov
add
fwait
ret
fidivrl
sbb
fwait
cmpsl
or
dec
fs
in
sahf
and
mov
js
sbb
fistpl
or
mov
lods
test
lret
lcall
es
sub
add
pusha
mov
int
int3
inc
inc
stos
inc
push
mov
ret
jg
inc
add
loop
push
scas
jne
stc
adc
cs
and
dec
mov
cld
add
xor
jno
inc
pop
inc
or
dec
in
ret
inc
pop
jp
cli
adcb
lret
sbb
imul
sub
sti
fsubrs
addb
push
in
cmc
push
jo
cmp
test
int3
mov
mov
mov
mov
cmp
lods
das
sbbb
jl
mov
stos
push
in
insl
lret
call
sub
jl
xor
inc
ljmp
lret
sub
fistpll
shr
xor
fadds
fs
mov
int3
outsb
dec
out
mov
fisubrl
sub
pushw
stos
dec
sti
jno
dec
or
mov
dec
mov
orb
sub
inc
daa
test
or
int3
fidivrl
cmp
icebp
lods
lret
cli
sar
ret
aas
mov
inc
test
sbb
in
adc
or
shlb
add
pop
mov
sub
mov
call
mov
and
lods
lret
and
aaa
js
sub
push
hlt
dec
and
sti
inc
fildl
cld
lods
dec
xchg
lods
jmp
cltd
mov
mov
adc
mov
shrl
or
cs
mov
dec
lods
mov
and
aad
cmp
sub
icebp
xchg
cmp
in
mov
loope
jns
mov
push
es
sbb
or
inc
push
adcl
mov
inc
inc
pop
adc
sub
ficoml
int3
outsb
jne
test
ror
lsl
xorl
insl
das
add
mov
jnp
add
icebp
imul
les
lds
lods
mov
int
pop
popf
aad
push
idivb
stc
jne
jne
faddl
mov
aam
inc
fwait
and
movsl
inc
stc
push
push
sbb
inc
mov
push
add
lret
sub
push
loop
pop
mov
or
scas
dec
lahf
out
fwait
test
daa
add
xchg
out
out
sbb
pop
pushf
clc
test
in
mov
add
jmp
mov
repnz
jle
sbb
movsl
dec
sahf
push
jp
int
movsb
jo
pop
or
jbe
inc
or
loopne
dec
sub
sub
sbb
mov
or
adc
fisubl
push
mov
pop
test
push
jae
cmp
sub
xor
pop
pop
shr
mov
xchg
stos
jl
pop
lds
lahf
dec
adc
in
hlt
iret
pop
dec
shrb
pop
arpl
mov
js
sub
jl
popf
ds
ret
std
sti
aad
jmp
mov
dec
inc
push
cmp
test
loope
enter
pop
jl
lcall
add
sub
sub
dec
push
push
mov
jp
or
lods
cmp
enter
ss
repz
add
inc
push
fistpll
movsb
scas
cmc
mov
fisttpl
push
int3
shll
insb
mov
xlat
or
mov
mov
sbb
mov
xchg
adc
fildl
sub
dec
mov
sbb
lret
dec
xchg
sahf
ljmp
hlt
xlat
inc
movsl
and
sarb
adcl
pushf
in
popl
cltd
jl
xchg
and
xchg
stos
jne
inc
lock
into
mov
mov
lods
jecxz
insl
dec
sub
cwtl
ds
leave
daa
outsb
jnp
mov
hlt
mov
popa
mov
push
xchg
insl
in
int3
loop
xor
jb
iret
into
pop
or
scas
scas
sbb
adc
fs
dec
shlb
inc
mov
adc
xchg
pop
adc
jo
adc
sub
adc
sti
pushf
xlat
mov
ds
pop
mov
jnp
sbb
mov
mov
shlb
push
xor
push
push
loop
push
leave
movsb
jg
cwtl
xor
paddsb
outsl
or
je
out
in
cmc
inc
xchg
lret
pusha
enter
xchg
push
repz
add
mov
out
aaa
xor
mov
add
mov
daa
lahf
incb
lods
dec
subl
jmp
dec
push
lret
dec
inc
sub
jg
movsl
adc
bound
test
test
pop
mov
add
xor
fnstcw
cwtl
rcrb
jge
int
push
cmpsl
bnd
sub
shrb
rorl
xorl
in
dec
repnz
jge
mov
idivb
cmp
and
sbb
sti
scas
xchg
sbb
push
dec
mov
xchg
pop
mov
xor
inc
or
mov
rcrl
jge
pusha
scas
aaa
daa
xchg
mov
cli
push
scas
movsl
and
insb
pop
cmp
jnp
lret
push
dec
pop
xchg
mov
and
and
pop
jns
or
ljmp
push
jns
mov
ret
pop
push
popa
addr16
fidivs
jae
mov
call
pop
fadds
push
sbb
mov
add
popf
iret
sbb
cld
rorb
cmc
xchg
je
cli
scas
push
int3
jbe
scas
mov
adc
push
pop
les
lret
jns
daa
mov
ret
mov
sbb
incl
mov
push
test
cmp
mov
cli
mov
pusha
jecxz
or
mov
in
addr16
push
adc
pop
lret
insb
mov
arpl
xor
daa
sub
sti
jg
jle
xchg
pusha
mov
popf
fwait
xor
or
sbb
mov
jmp
movsl
dec
push
xor
push
jae
in
movsb
arpl
inc
adc
fsubrs
cs
subl
test
lods
push
ljmp
outsl
aas
cli
dec
arpl
fidivl
mov
add
mov
or
pop
mov
addl
add
mov
outsl
sbb
stc
imul
imul
dec
cli
jg
fcmovbe
mov
int3
mov
sahf
movsl
jge
dec
xor
int3
cwtl
dec
aas
jno
shll
gs
jl
sbb
jle
repz
insl
xchg
ljmp
loop
cmp
sub
mov
mov
jle
jo
sahf
lea
aas
or
pop
pusha
cmp
lret
lods
mov
pop
sub
xchg
lds
adc
dec
or
int3
mov
dec
js
out
or
clc
pop
cltd
sbb
sahf
mov
push
jmp
xor
cmpsl
loope
push
fisttpl
mov
movsb
jl
mov
add
or
cld
lds
pop
inc
or
hlt
mov
int
pop
sub
outsb
and
bound
mov
adcl
dec
out
push
movsl
lret
fwait
xor
rol
jecxz
insb
stos
popa
inc
push
cmp
or
ret
imul
cmpsb
notb
out
or
ret
aad
sbb
sbbb
jg
rolb
xchg
and
or
sub
add
sub
stos
dec
add
int
jnp
inc
and
lds
lods
jae
sti
bound
insb
ss
das
dec
popa
sbbl
xor
int3
sti
or
out
int3
test
insb
mov
adc
mov
cwtl
jae
f2xm1
sahf
or
cmp
outsl
or
jle
mov
fists
mov
add
movsl
incl
sub
jl
dec
xchg
xchg
aad
fdivrl
sbb
or
inc
dec
mov
inc
test
cmp
or
stos
int3
sbb
cmp
inc
popa
jmp
cmc
imul
jbe
sbb
repnz
sbb
xchg
pop
pusha
or
xchg
mov
push
sub
jae
dec
cmpb
xor
cld
fnstenv
inc
pop
xchg
mov
inc
mov
std
mov
mov
cwtl
mov
adc
bound
inc
lret
enter
jmp
scas
pop
stos
inc
shrb
sbb
push
or
shrb
sti
aaa
rcl
inc
xor
sbb
or
mov
add
hlt
and
xchg
or
fldt
mov
repnz
cmp
xchg
popf
mov
adc
repz
cmp
lahf
inc
sub
rcrb
fsubrs
cmp
push
push
add
or
xor
faddl
shlb
movsl
mov
add
inc
mov
xchg
xchg
scas
rol
push
push
mov
xchg
sti
xchg
lock
mov
scas
adc
push
insl
inc
imul
popf
mov
cld
fcompl
jecxz
rcl
lock
dec
cli
push
inc
inc
mov
jb
jnp
andl
out
ds
jge
xchg
dec
cmpsl
jl
mov
ret
cs
dec
aam
sahf
insb
cmp
lds
out
jecxz
xor
cmp
xor
cmp
les
fldt
pop
sahf
add
outsl
jle
in
mov
add
push
jl
pop
rcrb
push
popa
cmp
pop
imull
push
dec
sbb
sbb
cs
in
mov
or
sbb
in
fsubrl
addb
jge
sbb
mov
fistpl
push
cli
addl
inc
cmp
fsqrt
cmp
movsl
call
and
mov
cmp
jle
in
jnp
add
into
add
or
incb
insb
adc
cli
or
shlb
sbb
push
insb
fucomi
dec
fldl
xor
pop
test
add
sbb
jge
fcoms
popf
orl
clc
or
xchg
mov
mov
aas
xchg
rorl
mov
xchg
pop
dec
sub
push
dec
out
jmp
mov
scas
adc
in
aaa
dec
sub
xor
pop
scas
les
fsubrl
inc
les
pushf
addr16
mov
or
gs
xchg
pop
mov
cwtl
in
and
xchg
movsl
shll
mov
mov
sahf
or
jecxz
scas
push
jecxz
jo
sub
adc
lock
test
daa
int
mov
fisttps
enter
mov
rorl
sbb
jbe
sbb
sub
fidivrl
sahf
lret
les
and
sub
int3
mov
xchg
jecxz
roll
rclb
cld
fs
mov
out
push
jns
dec
sub
rorl
gs
mov
push
jne
clc
jg
int
add
std
mov
jb
mov
insl
jne
lock
jnp
test
lods
movsl
xor
ret
xorl
insb
jne
sub
cmc
lods
lret
arpl
sbb
jmp
mov
push
add
or
xor
sub
fisttps
xchg
cld
loop
adc
mov
pop
jp
int3
dec
or
adc
or
pushw
xchg
add
sahf
mov
popa
pop
sbb
jmp
jb
stos
bound
fwait
mov
mov
ljmp
notb
out
into
das
les
and
add
and
cmp
fisubrs
sahf
leave
out
loop,pt
fiaddl
xor
push
jecxz
sbb
add
and
mov
add
or
icebp
add
cmpsb
push
and
pusha
xchg
mov
pop
je
mov
pop
lds
inc
fiadds
mov
pop
movsl
movaps
pop
in
and
add
dec
test
jbe
int3
and
adcl
repnz
movsb
outsl
sbb
inc
fdivs
arpl
fsubrs
nop
jns
add
int
adc
cmp
cld
cli
sub
mov
xlat
mov
andl
fucomi
pop
mov
lret
inc
jle
cmp
movsl
out
out
fiaddl
stos
loopne
jle
mov
push
shrb
jnp
jg
in
xor
or
mov
in
xchg
sbb
mov
scas
movb
lret
ret
test
or
shlb
xbegin
adc
xor
adc
add
in
or
cltd
mov
iret
push
shr
add
dec
xchg
add
test
sbb
dec
add
in
adc
jb
pop
and
sti
push
daa
ret
mov
enter
scas
shl
jb
add
fnstsw
or
clc
add
imul
add
lret
shl
mov
jp
inc
fsubr
push
jno
adc
inc
mov
pop
mov
std
sub
xchg
imul
pop
rorb
jno
out
or
inc
push
adc
pop
shlb
xchg
sbb
jns
ficomps
inc
addr16
movsl
icebp
fidivl
inc
dec
daa
mov
sbb
cmp
dec
jmp
imul
popf
xchg
xor
jo
and
lahf
stos
nop
push
lret
clc
mov
ljmp
adc
loope
fisubrl
loop
es
in
cmpsb
dec
and
push
movsl
je
shl
rorb
and
cli
and
call
pop
push
mov
out
mov
jmp
jnp
sub
jle
push
int
insb
mov
xor
mov
cmp
sbb
rsqrtps
scas
mov
scas
ret
insb
fcoms
ret
sbb
movsl
mov
pusha
xorb
aaa
out
mov
dec
std
xor
jl
scas
sub
add
cmpsb
repnz
hlt
push
cmp
adc
mov
std
inc
or
outsb
fidivl
popf
dec
ja
jp
jnp
jle
scas
outsl
daa
sti
or
loop
test
push
rorl
shl
fs
lods
push
inc
shlb
in
mov
or
inc
mov
sub
mov
ja
xchg
mov
test
dec
pop
call
jmp
pop
and
push
sarb
add
jbe
inc
ret
or
add
int
dec
jnp
out
cmp
lea
out
flds
mov
inc
sahf
pusha
das
inc
shl
mov
loopne
xchg
cld
hlt
ret
add
mov
mov
add
je
xlat
into
jmp
inc
stc
sbb
dec
dec
out
pop
sub
or
xchg
xchg
or
sub
fildl
pusha
insb
dec
inc
cld
dec
insb
inc
pop
xor
and
lret
rorl
jnp
sub
dec
jb
and
fcompl
inc
gs
push
jmp
and
lock
xchg
xlat
xchg
mov
mov
add
lods
je
imul
mov
shll
add
in
cmc
pop
jnp
jmp
fmuls
mov
iret
nop
bound
push
ljmp
push
mov
shrl
cmpsb
outsl
ja
xor
and
call
cmp
and
or
add
loope
aam
je
push
test
sbb
add
sti
pop
cmp
inc
pop
jnp
lcall
add
pop
test
bound
or
cmp
push
mov
mov
pushf
pop
insl
mov
pop
pop
push
int3
imulb
in
pop
xchg
xchg
test
xchg
jmp
scas
or
adc
cltd
jns
sub
jnp
imul
arpl
sub
sahf
lret
pop
adc
push
push
in
shrl
test
xchg
mov
pop
sbb
pusha
sub
inc
adc
movd
sbb
and
mov
cmp
out
add
scas
or
shll
out
hlt
rorl
jecxz
in
push
mov
std
add
adc
lods
add
jp
or
dec
add
mov
outsb
dec
bound
shlb
and
sbb
mov
mov
icebp
inc
into
out
dec
popa
flds
movhps
xchg
pop
ret
ds
pop
int3
subl
or
and
sbb
adc
lods
lods
roll
jno
or
popa
sbb
inc
add
iret
jle
push
push
xchg
jmp
jns
das
stos
or
sarb
loopne
and
cmpsl
or
and
lcall
pushl
jecxz
add
mov
pop
lret
jecxz
std
dec
lock
cmp
and
jbe
les
add
out
mov
xchg
jecxz
nop
mov
repz
call
repnz
mov
xchg
jb
mov
inc
clc
adc
adc
addr16
jmp
xor
pop
or
jge
mov
loopne
scas
imul
and
sti
popf
pop
ret
xchg
sub
loope
or
ds
inc
and
notb
jl
push
dec
jnp
scas
inc
out
dec
test
cmp
enter
sub
push
cltd
dec
and
pop
xor
inc
push
pop
push
mov
adc
or
lods
roll
xor
int3
popf
out
push
sbb
daa
mov
sub
sbb
adc
mov
or
add
popf
cmp
jle
andb
mov
es
in
sub
mov
xor
cmp
xchg
pop
call
jecxz
clc
or
cli
rol
mov
testl
jnp
xchg
cmp
jl
jno
cmpsl
mov
xor
xlat
fwait
push
test
push
lret
cmpsb
fstl
imul
add
fiadds
lods
out
mov
negl
push
push
cli
lds
cmp
xchg
and
sub
add
ret
push
dec
cmp
stc
stos
push
jbe
mov
or
repz
int
lock
sbb
js
cmp
out
repz
enter
sti
push
fwait
xor
jle
out
leave
bound
mov
dec
push
add
in
jnp
int
adc
mov
jmp
sbb
out
push
dec
add
mov
sbbb
enter
in
in
mov
cmpsl
shll
xchg
ljmp
mov
xchg
mov
inc
pop
pop
jnp
test
outsl
xorb
pushf
and
adc
movsl
jle
addr16
lods
push
in
jle
pop
xor
mov
scas
xchg
arpl
push
sbb
sahf
dec
scas
sub
or
mov
add
test
push
mov
jl
or
pop
push
int
cmp
mov
daa
pop
fdiv
test
mov
sub
jo
mov
and
adc
inc
lret
ret
arpl
jmp
int3
repnz
dec
and
xor
add
loopne
das
adc
jnp
mov
jp
das
adcl
or
sti
or
fistpl
rorb
sbb
xchg
pop
sahf
jle
push
and
pop
mov
or
shl
lds
sub
mov
lcall
fs
insb
pop
shlb
cli
and
sub
pop
or
scas
test
cld
daa
popl
push
les
and
xor
add
loop
add
sbb
and
hlt
push
sbb
mov
push
js
aas
in
inc
mov
mov
test
mov
enter
or
movsb
les
xchg
dec
popl
stc
mov
sub
push
or
fiaddl
cmp
and
testl
daa
dec
sar
cwtl
dec
adc
out
cmp
inc
sti
out
pusha
mov
sti
stc
insb
sub
xchg
push
les
jnp
daa
jmp
push
lods
cmpsl
inc
ud2
pop
dec
mov
xor
out
jg
aam
test
or
je
dec
or
inc
xor
test
xor
orl
dec
cmpsl
scas
cwtl
sbb
lret
aad
inc
ficompl
mov
sub
xor
xchg
imul
jb
nop
dec
pop
xchg
ficomps
aad
mov
cli
data16
fcmovbe
addb
aaa
cvtpi2ps
pusha
leave
push
mov
add
test
or
and
loope
lret
sub
pop
dec
daa
or
test
mov
inc
sbb
mov
in
adc
jl
or
xlat
loope
mov
lret
lods
or
jno
mov
call
sub
mov
iret
mov
in
inc
ljmp
dec
mov
pop
jmp
pop
loop
insb
cmpsl
test
and
int3
mov
fbstp
ja
daa
add
jno
dec
pop
adc
xor
jae
inc
xorl
add
daa
mov
ds
dec
popa
aam
mov
or
icebp
ds
mov
mov
sbb
stos
cs
and
leave
out
adc
fcoms
cltd
sar
sub
fisttps
outsb
lods
dec
ret
cwtl
ret
je
or
loope
ret
cmpsb
dec
mov
clc
fdivrs
pop
ret
leave
add
hlt
sub
stc
cmp
sbb
jmp
test
and
mov
xor
xchg
xor
inc
inc
cmp
mov
and
sub
lret
cmp
or
mov
insb
cld
inc
mov
mov
dec
sbb
mov
and
fcomps
push
or
lods
xchg
sbb
dec
in
add
or
or
out
cmp
mov
xor
dec
mov
ror
adc
add
dec
and
push
or
arpl
jno
dec
cmpsb
divb
mov
mov
pop
xor
mov
out
mov
fcoml
adc
inc
xchg
fs
dec
and
xchg
mov
sbb
adc
push
cwtl
xchg
adc
add
jno
negl
mov
or
mov
jecxz
jp
mov
dec
or
adc
add
cwtl
testl
add
rcll
pop
and
cltd
outsb
iret
das
sti
sbb
sti
lret
mov
aam
pop
add
rcrl
mov
jmp
loop
jnp
lds
sbb
movsl
cld
xor
xchg
imul
out
xor
stos
shr
mov
push
mov
push
sub
push
stos
or
and
or
js
sbb
push
push
pop
addr16
ret
sarb
xor
add
or
lods
push
sbb
in
and
xchg
push
pop
mov
in
jecxz
popf
aad
pop
ja
into
or
icebp
sbb
inc
ret
ret
ljmp
mov
add
jmp
lret
or
pop
stos
xchg
and
xchg
xchg
mov
das
outsl
fs
ret
lret
or
mov
subb
sub
in
arpl
sti
jae
push
pop
jae
pop
dec
rorb
push
jno
sbb
ficoml
lods
orb
sbb
lcall
lcall
cmc
stc
mov
stc
or
ljmp
popf
insl
jno
cld
sub
cmpsb
mov
dec
mov
pop
jmp
daa
repnz
jmp
mov
mov
addb
or
bound
fcmovbe
popf
scas
faddl
add
sti
jecxz
std
loopne
dec
adc
sbb
popa
scas
sbb
cltd
leave
stos
insl
aam
push
jmp
cmp
mov
hlt
pop
mov
push
dec
mov
outsb
lahf
leave
push
push
ret
xchg
xchg
pop
je,pn
lods
or
test
iret
imull
mov
cmpl
dec
mov
mov
xchg
adc
mov
loopne
scas
adc
sti
loop
lret
xchg
sbb
adc
or
ret
leave
fcoms
inc
roll
into
ljmp
cmp
add
cmpsl
xchg
jmp
enter
sbb
js
xchg
and
stos
mov
xor
add
add
jae
sbb
in
daa
cmp
add
cmpsl
dec
pop
loop
cmp
jecxz
test
and
sub
ja
xchg
or
cmp
nop
movb
ljmp
sbb
orl
int3
mov
out
xchg
stos
add
shll
xchg
or
jno
orl
call
mov
in
out
mov
pop
push
ret
and
loope
inc
or
inc
test
or
icebp
push
dec
add
insl
jp
add
rclb
xor
and
rorb
xor
shl
lock
mov
mov
adc
or
pushf
add
pop
mov
repnz
mov
mov
sar
mov
stc
mov
pusha
mov
push
cmpsb
sbb
js
sbb
or
xchg
lods
call
push
in
mov
mov
add
add
jmp
pusha
inc
int3
or
int
jbe
lock
mov
sub
mov
mov
iret
mov
insl
cs
je
mov
pushf
fadds
fsts
test
jns
push
aam
mov
pandn
mov
ficomps
xor
pop
movsb
pop
pop
inc
mov
pop
sbbb
sub
or
cld
mov
jns
sbb
xchg
les
loope
loope
test
or
inc
lret
add
pop
orl
xchg
pop
mov
push
sub
jmp
pop
inc
add
dec
add
mov
sbb
mov
pop
dec
pop
call
or
mov
lock
repz
dec
mov
and
rcl
inc
or
fnstsw
or
aam
call
cmpsb
lock
jno
loope
or
ljmp
pop
dec
in
mov
test
outsb
ss
mov
add
or
lods
in
add
sbb
mov
ret
dec
mov
sub
cmp
ljmp
jmp
xchg
loope
call
clc
es
js
enter
or
jbe
or
mov
out
xchg
imul
jge
sbb
mov
es
add
xchg
add
or
mov
push
movsb
scas
mov
sbb
ret
dec
gs
sbb
and
fsub
add
inc
imul
test
and
inc
push
mov
icebp
inc
call
jge
mov
jb
scas
add
mov
xchg
cli
inc
xor
fstps
mov
xchg
mov
xor
mov
or
rcr
inc
mov
inc
hlt
in
subl
ret
jne
inc
jb
ret
inc
clc
adc
js
mov
jecxz
pop
sbb
or
sub
push
movsl
mov
in
and
test
imul
fsub
mov
or
adc
mov
and
xchg
mov
hlt
int3
adc
leave
repnz
lret
insb
adc
fisubs
jp
xor
adc
sbb
int
jmp
ja
xor
add
adc
jl
dec
roll
xor
or
cwtl
or
sbb
mov
addr16
ret
iret
jmp
add
xchg
divb
xchg
add
adcl
orl
dec
int
leave
sub
adc
iret
stc
ret
jmp
pop
pushf
push
mov
test
test
xor
jb
inc
mov
lea
jp
mov
leave
jge
sbb
sub
adc
lret
loopne
dec
add
cmp
pusha
xorl
and
mov
dec
sub
std
ljmp
add
out
xchg
cli
jmp
repnz
add
mov
adc
mov
jle
ss
adc
xor
dec
and
pop
paddq
mov
repnz
pop
add
dec
mov
iret
ret
push
in
repnz
ret
sub
inc
xor
mov
outsl
cmp
fs
pop
xchg
fisubrl
push
mov
in
sub
pop
outsb
jle
or
jg
lret
mov
or
pop
or
sbb
fists
in
andb
sbb
cmpsl
daa
mov
push
mov
pushf
ljmp
in
push
mov
in
ficompl
or
pop
or
pop
sbb
push
insb
cmp
xchg
mov
sti
or
or
jmp
int3
and
push
addr16
xor
sbb
cmp
dec
andb
adc
and
call
push
andb
add
mov
loopne
mov
das
arpl
or
cs
scas
mov
call
or
xor
mov
inc
pusha
movb
ret
mov
ljmp
lret
dec
jl
adc
jo
sbb
int3
jge
shrb
les
push
pop
out
daa
sub
arpl
das
cwtl
or
lcall
inc
dec
sbb
jno
cmp
jno
dec
xor
cmp
jno
sub
cmp
clc
add
jmp
stos
push
cmpsb
aam
ljmp
mov
rorb
out
loopne
stc
fmull
add
push
mov
add
test
pusha
lcall
cmp
mov
or
mov
cmp
or
loop
add
aas
ror
pop
bound
dec
jnp
xchg
and
add
fstpl
sub
jno
jae
lret
mov
int3
mov
mov
add
test
outsb
mov
sbb
std
sub
stc
dec
pop
add
or
lahf
lcall
into
lcall
lret
cmp
rorb
push
and
jb
shl
push
subl
fbld
add
mov
sub
cltd
mov
lods
sbb
add
mov
ret
lahf
mov
lret
testb
mov
or
aam
add
sbb
sti
xchg
rcrl
add
sub
call
lods
loopne
fstpl
stos
cmpb
mov
enter
cmpsb
nop
push
and
loope
cwtl
dec
and
mov
adc
push
movsl
lods
insl
addr16
addr16
ljmp
xor
popf
pop
pop
loop
inc
in
sbb
xchg
into
call
ficompl
sub
xchg
add
lahf
mov
sub
int
out
outsb
jae
cmpsl
enter
push
stos
clc
pop
js
aas
inc
pop
push
fildl
sbb
aam
stos
jbe
and
ret
mov
aaa
and
cmpsl
sub
mov
add
lret
and
jmp
adc
faddl
mov
lret
lods
pop
fistpl
mov
lret
mov
inc
add
jecxz
dec
mov
fs
jmp
sub
lret
jb
shrl
xlat
jbe
cmpsl
aaa
push
cmp
ret
adc
xor
jmp
mov
mulb
filds
push
pushf
les
out
cwtl
mov
add
mov
xchg
mov
loope
jo
inc
test
lahf
dec
imul
and
mov
jmp
mov
add
sahf
fs
stc
add
mov
int
push
ret
sahf
test
nop
lock
jl
jns
pop
ss
mov
add
insb
mov
xchg
shrl
xchg
xor
mov
lods
into
popf
adc
or
mov
stc
xchg
lret
test
lods
icebp
mov
sahf
or
insb
test
sub
shrl
push
aad
xor
enter
push
lcall
push
pop
xchg
mov
incb
xchg
sub
insl
cmp
mov
or
sub
xchg
or
es
xor
dec
cmpsl
shll
jl
std
push
dec
pushf
sbb
inc
je
xchg
push
adc
dec
and
pusha
ss
adc
or
mov
jle
imul
jp
and
aad
negb
mov
add
fldl
cs
mov
sub
ucomiss
push
adc
inc
aad
fisubrs
pop
hlt
dec
das
mov
jle
jge
push
pop
jecxz
call
ljmp
xor
xchg
ljmp
and
cmp
mov
sti
push
movsl
clc
ret
inc
jmp
nop
daa
lcall
cld
call
out
lea
pushf
sub
add
xchg
daa
lret
inc
xchg
push
in
mov
outsb
mov
sub
jne
fisttpl
xorb
call
aas
sbb
mov
stos
sub
jns
ljmp
jg
ret
aas
or
fs
xchg
add
push
or
inc
shr
push
fmull
mov
sbb
push
jecxz
dec
push
push
lods
adc
cli
mov
sbbb
xchg
xchg
call
adc
leave
sahf
xchg
pop
xchg
xchg
pop
pusha
sub
or
jnp
sarb
mov
jnp
cli
adc
mov
call
cs
xchg
stos
in
xchg
das
sbb
push
lods
loopne
jnp
in
addb
cmc
fucomp
outsb
pop
or
dec
repz
mov
inc
push
inc
loop
pop
fadds
repz
and
mov
inc
xor
mov
into
in
ljmp
sahf
inc
add
add
pop
cld
lret
mov
xorl
gs
cmp
inc
mov
int3
loop
mov
sarb
cmc
jp
ljmp
loop
sub
inc
fcoms
or
and
loopne
add
pandn
xchg
and
add
imul
adc
add
lret
shlb
mov
mov
insl
bound
dec
and
pop
in
inc
push
in
lret
jmp
ret
andb
xlat
popa
jp
dec
adc
mov
jl
stos
sti
repz
fdivs
outsb
mov
lahf
jle
cmp
push
out
cmp
adc
jl
jge
push
cmp
mov
notl
lods
jnp
in
repnz
in
mov
jle
shlb
adc
pushw
in
and
hlt
adc
xchg
xchg
test
sarl
shlb
jle
sti
adc
das
pop
pop
adc
sahf
inc
mov
in
inc
fisubrl
xlat
movl
call
or
pop
inc
orb
adc
and
js
bswap
cmpl
xchg
xor
xchg
ret
and
pop
call
push
pushf
mov
cld
shl
sub
lods
wbinvd
in
mov
outsb
cmpsb
fiadds
leave
adc
addl
sahf
sahf
xor
ss
fbld
mov
xorl
cmp
in
sub
subps
jmp
pop
std
in
and
ss
push
lods
sbb
and
cmpl
shrb
bound
in
out
gs
lods
and
nop
popa
movsl
add
mov
imul
sub
test
mov
aad
int3
jle
fidivrs
mov
int
or
pop
outsb
jae
cld
xchg
mov
dec
leave
cmp
inc
push
out
and
or
stos
add
push
push
cmp
sahf
lods
xchg
pop
xor
mov
dec
fistl
or
adc
stos
cltd
adc
lock
xchg
mov
push
xchg
js
ret
mov
jae
adc
aaa
jp
dec
dec
in
lea
mov
lahf
push
pop
mov
push
add
mov
insl
xchg
loope
std
aad
lea
daa
push
dec
and
xor
jno
mov
ja
pushf
jmp
decb
xchg
dec
int
mov
add
orl
sub
pop
mov
out
int3
mov
fwait
je
enter
jp
push
ret
rclb
pop
xchg
xchg
push
mov
mov
jne
dec
aaa
push
cltd
mov
lea
push
cli
push
scas
mov
or
xchg
cmpsb
lret
push
stc
pusha
mov
cmpsl
xchg
je
jno
pop
sbb
jo
mov
repz
lcall
mov
std
xchg
mov
loop
xchg
je
aaa
je
xlat
pop
int
test
mov
lret
in
pop
mov
out
in
pusha
adc
std
pop
rolb
fcoms
sub
fbstp
pushf
outsb
lods
pop
adc
pushf
sub
inc
or
or
imul
add
into
test
xchg
add
ret
insb
add
jle
in
lahf
push
inc
outsl
ds
jle
mov
mov
mov
or
push
or
scas
outsb
pop
pop
adc
aam
and
in
nop
daa
adc
out
lds
push
mov
scas
subl
int3
and
jp
cmp
icebp
orl
jbe
ljmp
ss
call
sbb
bound
imul
inc
ret
jnp
loopne
lret
lret
inc
and
fdivrs
shrb
push
loop
loopne
adc
add
roll
loop
mov
cmp
jns
lret
add
xchg
jne
int
insl
insb
scas
cmp
sub
in
sbb
jle
add
sub
insb
cmp
int3
push
insb
mov
mov
adc
mov
jb
fst
arpl
xchg
incl
push
adc
mov
mov
inc
in
inc
mov
or
arpl
cmp
cli
jp
out
mov
mov
call
mov
mov
repnz
aaa
aad
or
push
sahf
xchg
push
les
jg
cmp
repz
cwtl
aas
or
mov
or
and
push
nop
or
mov
pop
daa
or
dec
push
xchg
add
add
decb
or
or
loop
fwait
add
push
push
test
aaa
mov
jg
pop
mov
fcomps
jge
mov
push
mov
repnz
push
cmc
aaa
addr16
ret
call
insl
in
inc
jecxz
lods
jg
mov
dec
cld
ss
pop
and
mov
cli
sbb
or
mov
imul
mov
loopne
add
or
mov
insb
lahf
adc
aas
arpl
pop
enter
fidivs
andl
jl
mov
rorb
or
in
push
cmp
mov
sbbl
or
jmp
mov
jmp
cmp
aam
cmpsl
adc
pop
or
into
lret
wbinvd
jbe
sbb
xor
xchg
mov
xchg
adc
xchg
or
les
mov
movups
inc
mov
mov
inc
mov
mov
adc
cmp
test
mov
xchg
sbb
pop
stos
imul
add
jno
leave
aas
or
pop
in
fwait
sti
dec
sub
xchg
mov
test
cmp
fldenv
mov
addw
pop
sti
and
push
inc
mov
jb
mov
pop
jmp
and
and
cltd
mov
ret
or
inc
or
and
les
pop
xchg
pop
sub
stc
sti
arpl
movsb
not
mov
ja
xchg
cmp
dec
jmp
in
int3
ret
out
or
outsb
mov
and
push
xchg
cmp
xchg
mov
inc
int3
mov
popf
lea
inc
ljmp
xchg
jle
in
inc
push
add
dec
pop
in
jns
loope
jle
leave
mov
push
cmp
insb
or
mov
mov
sub
sbb
sub
sbb
pop
cmpsl
dec
add
xchg
xchg
cs
push
pop
xchg
movnti
test
lcall
adc
mov
sub
sbb
scas
and
pop
and
jb
hlt
ljmp
or
hlt
pop
daa
loop
or
jnp
inc
and
inc
and
push
adc
mov
aad
push
add
inc
fs
xor
or
aam
add
sbb
add
jne
call
bound
stos
push
and
scas
dec
jne
cmp
xchg
std
dec
or
jmp
stos
mov
test
xchg
sbb
enter
xchg
mov
cltd
jecxz
mov
call
or
iret
jl
mov
in
mov
out
ret
sahf
jbe
sbb
sahf
stos
repz
inc
les
scas
int3
xor
adc
jle
xchg
mov
push
pop
fadds
bound
cmp
imul
jne
jl
dec
mov
inc
ljmp
push
mov
test
test
mov
jg
movb
das
in
les
sub
pop
or
stos
adc
fwait
inc
adc
arpl
sub
adc
or
adc
adc
push
cli
and
pushf
push
loop
movl
hlt
int
inc
lcall
ret
ds
adc
adc
dec
inc
ss
jne
xor
addl
faddl
stos
out
add
sbb
sbb
and
and
test
jmp
pop
insb
jge
mov
and
xor
mov
fsub
adc
dec
mov
out
out
orl
imul
xchg
lret
sbb
add
stc
pushf
jg
mov
jge
jo
add
movsb
les
cld
push
dec
leave
stos
sbb
xorl
xchg
sti
jo
insl
enter
andb
adc
fistps
push
mov
cmp
sbb
jecxz
xor
sti
mov
sbb
mov
popa
xchg
pop
cltd
dec
fwait
mov
xchg
in
inc
icebp
push
js
xchg
add
aas
adc
jnp
movsl
jnp
daa
dec
shrb
out
pmulhuw
xor
stc
fisttpl
mov
jnp
jl
xor
inc
dec
in
xchg
or
cmpsl
or
popf
adc
mov
ljmp
dec
roll
push
lods
inc
xchg
int3
hlt
das
int3
and
and
mov
ja
sub
inc
jnp
push
push
inc
xchg
mov
inc
pop
jb
adc
mov
or
jp
push
cmp
push
add
rorl
mov
lret
sub
into
enter
xor
fbld
std
insl
cmpsl
loop
or
stc
cmc
or
pusha
and
sbbb
cli
adc
movsb
sahf
gs
cmp
outsl
stc
sub
mov
mov
mov
and
jl
push
das
push
pop
pop
clc
mov
gs
bnd
dec
cmp
cmp
mov
aam
jnp
cmpsb
add
add
push
add
ljmp
js
daa
imul
sub
xor
cmpsl
add
add
pop
shrl
add
dec
repz
cmp
cli
jmp
dec
pop
andb
add
loope
adc
jle
fisubs
and
pop
adc
cmpsb
ds
mov
adc
adc
test
xor
add
aas
inc
mov
lret
dec
cmpsb
movsb
or
inc
movq
push
shll
lods
push
rorb
push
inc
das
sub
and
jl
push
enter
stos
add
pop
icebp
mov
js
cmp
in
mov
push
daa
jl
xor
shlb
add
inc
mov
sub
adc
or
add
jl
mov
push
and
pop
cmp
add
out
mov
mov
gs
ljmp
add
int
sub
jle
ret
rolb
cltd
sbb
sbb
xchg
test
rclb
cmpsb
push
xor
data16
jae
test
sub
std
push
jle
mov
xchg
sbb
mov
popa
in
popf
xor
mov
ficompl
xchg
push
inc
sbb
cmpsl
nop
in
inc
popa
or
or
cwtl
xor
lods
aam
test
pop
jne
shll
mov
imul
adc
jl
scas
enter
adc
add
jle
scas
mov
stos
scas
lret
sbb
out
insb
scas
pop
jmp
mov
xor
add
inc
or
decl
push
loopne
rorb
inc
jp
add
pop
filds
dec
push
sub
mov
pushf
mov
sub
pop
add
add
ret
mov
mov
orl
mov
cwtl
les
xor
mov
sbb
mov
jnp
xchg
xorl
or
adc
mov
movsb
xor
mov
popf
aad
daa
or
inc
lods
inc
ret
push
cmp
in
push
int3
adc
shll
inc
mov
pop
popa
mov
mov
sub
sbb
enter
or
in
out
pop
mov
cmpsl
rorb
shr
push
aad
dec
lock
add
adc
mov
push
inc
lds
or
cmp
or
out
decl
push
push
repz
dec
pushf
jo
in
aam
inc
test
enter
mov
and
inc
ret
add
out
test
lods
jae
cmp
jmp
push
dec
mov
pop
add
or
fcmovb
push
jae
push
xlat
adc
rcrl
fildl
test
ljmp
and
jo
cs
bound
cmc
movsb
or
mov
mov
jb
jne
or
pushf
mov
popf
adc
jg
lcall
jl
jl
scas
jae
insl
xchg
add
sub
xlat
xchg
lcall
shlb
sbb
mov
shlb
faddp
or
jo
sub
test
in
andb
sbb
imul
stos
inc
inc
jecxz
jg
push
cmp
mov
popa
jmp
test
adc
test
jns
int3
mov
sub
cmc
adc
xor
sbb
sti
jnp
mov
mov
scas
js
mov
stos
or
jmp
ds
and
jmp
test
sbb
stos
push
add
cmp
sbb
pop
pop
lods
cmp
pop
sub
push
pop
sti
push
mov
or
test
repz
loope
xlat
push
jp
ret
xor
fisubrs
or
jmp
push
push
mov
cld
sub
test
add
mov
push
fsub
mov
sub
mov
in
jge
mov
les
pop
jmp
pop
aaa
dec
fdivrl
and
dec
add
xor
push
mov
test
mov
lret
jnp
jle
lret
push
sub
clc
pop
jns
and
mov
mov
outsl
add
pop
dec
icebp
imul
dec
jl
loopne
mov
dec
pushf
add
jae
int3
push
add
loop
frstor
hlt
adc
sub
ds
push
pop
lds
or
cmpsl
stc
sub
lahf
or
push
jbe
cmp
jle
jnp
aad
loop
inc
push
arpl
das
xor
jge
js
mov
jle
push
add
and
add
mov
call
sahf
mov
mov
mov
jmp
xchg
jg
mov
mov
popa
mov
lea
dec
cmp
mov
jbe
sbb
addb
or
fiadds
mov
cmpsl
push
mov
hlt
jl
or
push
jmp
push
jl
in
inc
sub
and
adc
sbb
adc
jns
cld
ds
or
outsb
sbb
out
and
pusha
ficompl
mov
cmp
mov
sahf
sbb
sub
adc
loopne
aaa
dec
and
loope
stos
adc
adc
fpatan
push
sti
leave
stos
xor
dec
movsb
cmpsl
pop
filds
inc
or
jbe
adc
pusha
nop
sub
pusha
inc
mov
icebp
fdivs
mov
pop
sub
or
fldcw
inc
fwait
xor
mov
add
or
pop
gs
mov
inc
mov
shrl
jle
inc
xchg
les
repz
sub
lret
scas
repnz
mov
xor
push
sbb
scas
into
xor
and
loop
mov
fisttps
lods
push
cld
popl
mov
adc
sbb
mov
test
lahf
movsb
pop
mov
xchg
call
jl
imul
scas
add
mov
or
insl
sub
aad
es
xchg
sub
rolb
xchg
and
add
lret
pop
or
sbb
fdivrs
lret
aam
adc
sub
xor
inc
jmp
cli
or
jae
fistpll
pop
mov
out
push
add
cmpsl
inc
adc
add
in
out
fistps
push
inc
inc
jle
push
ficoml
mov
xchg
or
jg
je
and
clc
inc
outsl
sbb
xlat
xchg
mov
mov
pop
mov
or
sti
in
fs
mov
int3
scas
jbe
jbe
cmpsl
sysexit
test
rorb
mov
sahf
pop
add
mov
sub
pop
xlat
dec
loop
imul
test
add
cmpsl
xor
pop
dec
xchg
aas
mov
int
xor
lahf
dec
int3
scas
aaa
push
jb
jp
and
or
mov
ret
and
xor
fisubs
rcl
or
das
enter
ret
or
in
mov
movsb
xchg
jle
mov
outsl
fmull
ret
enter
adcl
mov
adc
in
or
out
fmull
add
std
or
call
bound
orl
and
xlat
xchg
dec
cmp
or
jbe
out
lds
test
cld
in
lds
and
imul
js
clc
mov
popa
ss
out
push
scas
dec
pop
inc
movsb
or
add
and
out
clc
jg
test
stc
mov
sbb
inc
mov
lds
sti
lea
stos
jg
mov
icebp
pop
add
jg
jmp
push
loopne
dec
pop
popf
shlb
adc
in
pop
inc
punpcklbw
jbe
sub
mov
or
jg
sti
pop
add
loopne
fwait
and
jno
test
arpl
insl
inc
sahf
mov
lcall
mov
mov
cli
insl
pop
mov
imul
test
leave
sti
mov
inc
adc
and
cmpb
mov
ja
and
sub
shr
add
fwait
mov
ret
cli
inc
out
or
cmpsl
mov
repnz
dec
and
aam
sbb
dec
or
adc
jp
jae
adcb
cmpsl
outsb
scas
mov
pop
mov
out
add
mov
int
sub
and
call
fsts
sti
sub
push
cmpsl
aad
mov
ss
inc
dec
orb
mov
push
daa
out
sti
dec
scas
inc
jecxz
jne
cmpsl
mov
pop
xor
ds
and
out
enter
sub
cwtl
sub
movsb
ljmp
dec
loope
adc
in
jno
cmp
inc
dec
shlb
enter
rolb
jmp
or
mov
cli
jmp
enter
dec
mov
jmp
or
and
int3
add
adc
mov
sub
cmp
sub
add
adc
dec
jge
add
adc
mov
scas
inc
add
mov
aad
insl
mov
jns
adc
mov
shrb
cmpsb
aam
jle
clc
jg
lods
sbb
cmp
cltd
sti
data16
clc
add
add
fadds
push
jge
fcmovnb
test
add
xor
pop
imul
data16
push
arpl
inc
outsl
mov
jp
mov
push
cld
in
cmp
cltd
jp
test
hlt
popa
add
mov
mov
mov
int
jecxz
enter
mov
inc
loop
pusha
sub
cld
dec
and
aas
push
cmp
add
movhps
sbb
cmpsl
mov
loopne
dec
inc
xor
mov
lods
mov
lret
cltd
ljmp
mov
xor
cli
mov
fnstsw
les
or
stos
mov
xlat
popl
sbb
fmul
mov
or
sbb
lds
test
mov
je
hlt
scas
stos
cmp
inc
popa
sub
ljmp
mov
rclb
or
imul
ljmp
push
lods
pop
fs
dec
mov
iret
insb
sbb
mov
lret
subb
or
jmp
adc
sbb
jl
jmp
add
subl
incb
ror
mov
cli
xlat
mov
jo
xchg
mov
sub
loop
or
sti
mov
mov
outsl
mov
pop
dec
lret
stos
or
fildl
cmpsb
rorl
and
cmovs
xor
hlt
out
test
lock
pop
add
sub
flds
xchg
adcl
sub
es
mov
mov
inc
lret
add
arpl
or
mov
mov
add
ja
mov
add
popf
ret
inc
popa
xchg
std
ret
jmp
lahf
fildll
sar
je
xchg
outsb
pop
lea
ljmp
xor
aam
pop
mov
pushf
ret
shrb
sahf
mov
outsl
mov
mov
lret
dec
inc
ret
enter
test
xchg
or
mov
xchg
inc
push
dec
xchg
pop
dec
leave
sti
lret
push
repz
sbb
fwait
lret
inc
mov
into
int3
jmp
sahf
dec
push
dec
stos
je
jmp
add
or
dec
imul
or
mov
bnd
ret
and
mov
xchg
loop
mov
out
adc
mov
jecxz
cmp
inc
nop
sbb
lods
je
jl
jmp
rclb
xor
or
imull
sbb
dec
lret
loop
jns
xchg
and
outsl
fistl
mov
mov
cwtl
sti
in
or
cmpsb
add
rol
adc
push
orb
adc
pop
pusha
and
push
mov
sarl
out
and
inc
adc
or
fwait
scas
push
inc
jp
mov
lea
inc
xor
xchg
mov
or
push
stos
sbb
pop
jge
pop
xchg
movsl
push
aaa
jae
jb
daa
out
dec
dec
sti
jle
jecxz
sahf
lds
in
in
add
add
pop
mov
imul
cmp
xchg
push
mov
test
jge
pusha
jle
js
out
ds
xor
dec
lcall
enter
cwtl
cmp
inc
hlt
in
ret
add
mov
cmc
sti
fs
mov
add
add
add
bound
rorb
movsb
js
loop
mov
bound
stc
mov
mov
int3
dec
testl
jp
mov
jl
adc
cmp
shll
outsb
cmpsb
mov
movsb
mov
inc
jae
adc
or
add
mov
jecxz
enter
pop
sub
dec
scas
sub
push
and
outsl
call
pushf
leave
daa
mov
and
negb
jl
bound
inc
mov
add
loop
call
test
cld
or
ljmp
mov
into
cs
inc
ds
gs
lds
sub
mov
mov
les
or
ficompl
adc
sbb
test
sub
clc
sarl
ror
in
inc
xchg
call
icebp
gs
jle
sub
cmpsb
dec
lret
inc
arpl
cmp
in
sbb
xchg
and
jg
xchg
incb
dec
jp
mov
pop
xor
push
addr16
rol
enter
ds
int3
imul
insl
fbld
ss
sbb
popf
mov
push
mov
cmp
lods
ds
inc
int3
ljmp
adc
mov
dec
lods
cld
repz
orb
add
pop
jnp
in
xor
mov
cmpb
mov
rolb
aam
sub
enter
jne
push
addr16
cmpsb
and
lods
jns
out
sti
cld
lahf
xor
mov
or
push
jle
loope
test
xor
out
leave
sahf
mov
mov
cmc
dec
mov
ficomps
pushf
sti
imul
jmp
scas
dec
fwait
mov
fadds
xorb
movsb
sub
fs
das
and
test
shrl
stos
pop
sbb
mov
fisttpl
pop
pushf
push
shrb
or
pop
cmc
push
fdivs
jl
mov
aaa
or
gs
jmp
andb
add
out
lret
push
int3
insl
fildl
or
stos
in
cmpsb
int
lret
insb
ror
sub
js
iret
js
aas
enter
mov
sub
xchg
cs
pop
test
sahf
jecxz
sbb
xor
pop
sarl
mov
cld
shl
mov
movsl
adc
jmp
or
add
arpl
fs
subb
test
push
cmp
jge
subl
or
mov
out
gs
imul
ljmp
stc
addr16
push
test
lods
mov
sbb
add
pushf
aad
mov
or
cli
fucomp
ljmp
jmp
loop
jmp
mov
add
sub
in
push
xor
int3
lea
sbb
sbb
or
push
lret
or
xchg
add
sbb
or
push
sti
in
lods
inc
dec
add
jp
mov
push
sbb
dec
leave
inc
mov
push
cmpsl
repnz
pop
movsb
sbb
mov
imul
cld
ret
xor
hlt
xchg
add
ret
jns
clc
jns
mov
loop
repz
push
inc
cmp
inc
int
hlt
adc
adc
rcrl
and
mov
roll
xchg
lret
rclb
jle
and
repz
iret
repnz
hlt
test
ret
rorl
stos
loop
in
stc
clc
adcl
dec
pop
lret
lods
jle
push
push
je
cld
scas
lret
cmc
and
pop
jne
stos
into
aaa
sbb
insb
and
test
scas
les
mov
repnz
bound
sbb
insl
cmp
sbb
shrl
mov
jp
push
cs
sub
sti
or
aad
jmp
clc
mov
sbb
scas
outsb
subb
inc
pop
jl
inc
sbb
dec
in
inc
sti
add
leave
cmp
fs
iret
mov
loopne
or
imul
sub
adc
arpl
jle
xchg
daa
jg
outsb
mov
nop
insb
daa
add
push
nop
stos
aaa
xchg
lods
xor
movsb
mov
jne
and
test
cmpb
inc
inc
mov
hlt
daa
stos
shll
adc
sub
push
lods
jg
mov
xor
imul
xchg
mov
imul
pop
or
int3
jle
dec
inc
fisubs
push
repz
and
inc
and
andb
pop
jg
add
push
dec
imul
aad
inc
sub
ljmp
xorb
sbb
cli
xor
lahf
jbe
lret
subb
mov
mov
gs
dec
andl
std
clc
pop
sbb
lahf
adc
bound
pop
mov
inc
fs
scas
xlat
inc
adcl
in
push
push
xor
sarb
and
mov
inc
mov
jbe
ret
addl
and
dec
stc
and
xor
mov
call
fildl
enter
daa
bound
sbb
inc
scas
dec
fidivrl
push
or
das
xchg
dec
mov
cmp
dec
repnz
sub
js
mov
aam
push
pusha
mov
negl
xchg
adc
lock
imul
cltd
push
push
fsub
and
cmpsl
stos
cmp
jns
aas
mov
out
scas
dec
jb
icebp
add
sub
outsb
test
or
cli
test
or
add
test
ret
cli
mov
push
add
sbb
xchg
lahf
jmp
push
or
test
int3
xchg
in
or
dec
adc
or
adc
das
jl
popa
mov
add
push
jmp
int3
mov
or
add
mov
pop
sahf
je
loop
jns
xchg
sbb
mov
out
add
pop
pop
push
loopne
or
inc
xchg
orl
les
xchg
testl
loope
mov
add
cmpsl
hlt
stc
xchg
addr16
cwtl
rclb
sti
cmpsb
push
or
pop
test
cs
out
popa
loopne
or
in
add
in
sub
inc
fs
push
cmp
push
xchg
shl
cmp
pop
xlat
arpl
insl
loop
jnp
stos
ds
in
out
lods
in
scas
dec
xor
stos
push
lret
insl
ret
test
addr16
push
ss
mov
es
jg
jecxz
mov
pop
mov
popf
pushf
add
xor
inc
jnp
dec
jae
fcmovnb
mov
ds
clc
or
orl
loop
sbb
lret
lock
movl
imul
stos
test
jg
mov
fwait
lea
add
enter
mov
loopne
adc
mov
cmpsl
insl
inc
xchg
dec
popf
mov
pop
int3
cmp
lcall
out
out
adcl
outsl
jns
ret
lret
pop
sbb
ljmp
inc
les
mov
jp
push
shl
push
inc
movsb
lods
mov
in
fmuls
add
xchg
dec
inc
and
sti
int3
sub
lret
add
enter
lods
sbb
sti
dec
imul
mov
xchg
cmp
add
rolb
movsb
lea
dec
mov
xor
js
sahf
fistps
cmovge
push
nop
ds
loop
jecxz
and
sti
int3
jmp
js
addr16
mov
push
les
add
shr
mov
and
jb
fdivrs
shll
sub
add
repnz
mov
inc
repnz
ret
mov
mov
mov
out
lahf
in
in
imul
mov
and
js
int3
push
pop
les
xor
add
mov
ja
notl
pusha
sbb
push
pop
xlat
or
in
test
adc
icebp
ret
mov
orb
mov
push
mov
orb
int3
adc
int3
and
push
add
out
loop
adc
push
jae
push
adc
push
cmp
lret
enter
insb
subb
mov
sub
in
testl
data16
add
inc
dec
test
call
rorl
les
packsswb
hlt
mov
test
xor
mov
xchg
and
repnz
xor
xchg
cmc
sub
jne
cmp
xor
push
adc
aad
shrb
push
into
enter
out
dec
or
add
xchg
movl
loopne
out
push
mov
ret
cmp
insb
xor
jg
scas
das
or
mov
inc
jmp
call
sbb
jae
mov
stc
sub
int
loopne
xor
cmp
sub
int3
dec
enter
gs
lcall
lds
pushf
ret
pop
add
out
in
or
cwtl
sub
xchg
in
sub
xchg
lea
add
xchg
int
xchg
imul
mov
cld
add
or
fwait
inc
or
add
add
sar
cs
clc
push
add
popf
cwtl
cmpsl
ret
sbb
orl
dec
add
call
xchg
out
adc
pushf
cmpsb
adc
cmpsb
xchg
pushf
adc
sub
pushf
xchg
inc
dec
push
mov
je
mov
mov
xchg
or
repz
cli
data16
sub
movsb
nopl
mov
enter
test
ljmp
xchg
sub
or
fisttpl
stos
add
push
or
inc
dec
stc
mov
sahf
lock
xlat
imul
or
rorb
xor
sub
stos
sbb
int3
aad
mov
adc
mov
aam
adc
out
or
or
bound
pop
ret
or
or
pop
add
mov
mov
fs
lret
push
paddb
sti
jns
out
pop
or
xchg
inc
outsb
stc
inc
pop
dec
fwait
movsb
xchg
add
sbb
push
enter
mov
lret
scas
decb
lret
enter
scas
mov
ja
push
and
addr16
jle
sbb
adc
stos
or
les
pop
insb
and
outsl
adc
push
mov
ret
pop
mov
dec
add
pop
das
adc
mov
mov
sbb
inc
fs
jmp
cmp
ljmp
dec
gs
inc
lret
dec
nop
daa
mov
jle
xchg
scas
or
inc
cli
xchg
push
lods
xchg
mov
data16
mov
subb
mov
rcll
testl
jbe
test
dec
lret
sti
repnz
or
dec
mov
rorl
cld
das
push
mov
bound
hlt
int3
mov
loop
ret
sub
add
mov
xchg
push
out
lret
xchg
int3
rolb
pop
in
ret
repnz
shl
push
add
cs
iret
rolb
mov
fs
add
or
fidivrl
mov
mov
mov
sbb
lods
mov
ret
or
sbb
or
mov
ret
lods
dec
leave
test
jnp
or
insb
push
js
fcomps
sub
inc
outsl
ret
out
adc
xchg
or
psrad
push
jp
je
imul
iret
xor
xor
adc
xchg
add
or
loop
cmp
or
outsl
aas
cmp
xchg
adc
mov
lock
pop
push
enter
lock
lods
ret
cs
loop
sbb
jg
lods
mov
and
cmc
jb
test
testb
inc
das
xchg
jnp
rolb
repz
xor
xchg
rorb
xor
and
loop
int3
stos
jl
ret
pop
adc
je
mov
pop
sahf
sub
lret
cmpsl
repz
push
outsb
mov
add
lret
lods
cmc
hlt
mov
xchg
mov
dec
hlt
jge
sbb
jecxz
sbb
mov
lret
scas
pusha
sub
push
lret
fsubrl
dec
xchg
or
mov
lret
pushf
inc
addr16
jb
es
jnp
mov
movsb
nop
aas
popf
sub
lds
xchg
cs
add
mov
mov
dec
push
ficompl
pushf
lcall
adc
cmc
sbb
jecxz
mov
andl
orb
sub
movsb
and
or
lcall
push
ja
insb
in
mov
mov
cs
xchg
int3
or
xor
jo
idivl
dec
xchg
shl
mull
cmp
in
movsb
xorl
mov
call
pop
inc
and
adc
push
jecxz
mov
pushf
and
pop
jg
or
hlt
sbb
movl
enter
hlt
repnz
ret
test
call
inc
inc
add
or
push
inc
aam
dec
mov
fiadds
or
pop
fimull
loope
mov
push
inc
stos
mov
ljmp
sbb
sbbl
stos
and
xlat
and
addr16
mov
pop
movsb
repnz
jbe
dec
inc
inc
xchg
test
or
pusha
add
test
cmpsb
jae
mov
add
neg
jecxz
aas
andl
and
sub
imul
xor
inc
inc
popf
xor
dec
int
std
mov
pop
popf
push
mov
inc
mov
ljmp
and
test
addl
push
pop
pop
pusha
cvtdq2ps
call
fwait
and
adc
nop
xchg
fisubrs
jno
mov
jnp
sbb
imul
aas
ret
dec
hlt
je
bound
loop
push
dec
and
out
mov
sub
mov
ret
shrb
mov
clc
imull
sub
call
mov
inc
adc
cli
dec
bound
cmp
or
into
cs
movsb
and
cwtl
push
ficompl
sahf
mov
push
dec
rorb
inc
xchg
rcl
and
lcall
test
stc
adc
push
bound
pop
mov
mov
scas
out
inc
ds
pminsw
lea
bound
sbbl
pop
and
das
push
push
nop
and
cmp
lret
mov
mov
aad
or
jo
psrld
test
xchg
fimuls
inc
push
movb
inc
pusha
add
add
cmpsb
inc
ret
dec
in
in
push
or
adc
push
dec
cmp
add
adc
pop
inc
mov
call
mov
aad
inc
push
nop
pop
lret
lea
push
test
jae
sbb
sbb
test
test
or
add
mov
and
rorb
add
ljmp
icebp
mov
xchg
js
dec
mov
cmp
or
dec
lods
stc
mov
ljmp
lods
jns
cld
xor
mov
cmpsl
adc
jmp
stc
imul
mov
inc
or
mov
pop
imul
jne,pn
jo
lods
int3
sahf
add
xor
sti
lea
je
cwtl
xchg
mov
ret
test
repz
out
and
jecxz
movsl
lea
rorl
mov
test
fisttps
add
jnp
mov
mov
shlb
daa
jg
lea
cli
mov
mov
and
mull
sahf
or
push
cmpl
pop
in
mov
jae
push
xchg
sbb
dec
inc
mov
push
or
loop
call
js
fwait
pusha
or
add
pop
pop
jns
mov
inc
andb
jb
sbb
pop
fcoml
mov
mov
add
mov
clc
lods
or
pop
bnd
and
add
mov
jmp
dec
xor
xchg
test
daa
daa
cmpsl
cli
adc
jecxz
mov
jno
add
shl
insl
incl
sti
mov
cltd
lahf
popf
mov
xchg
and
and
mov
in
push
pop
mov
enter
lock
and
lret
add
fmul
fisubl
flds
inc
or
int3
test
xchg
adc
cmpsb
adc
dec
jecxz
test
mov
sti
rcrb
mov
int3
fildl
dec
sub
hlt
mov
inc
and
mov
in
bound
in
lcall
addr16
mov
cmp
jb
dec
mov
mov
add
push
dec
popf
cmp
pop
xchg
das
cmp
in
xchg
clc
xchg
jb
pop
adc
rol
cmp
or
sub
or
push
inc
xchg
enter
push
sbb
add
mov
xchg
pop
jne
cmp
or
std
mov
lcall
jnp
arpl
and
or
aaa
jmp
movsb
or
xor
sti
mov
xor
xchg
test
stc
mov
inc
sub
loopne
mov
and
mov
xor
dec
sub
inc
hlt
imul
adc
sub
jecxz
and
push
push
xchg
addr16
mov
and
or
jne
mov
leave
mov
xor
sar
cmp
movsl
jbe
lahf
insb
mov
test
push
adc
fbstp
dec
mov
push
adc
sbb
fnclex
in
in
pushf
sarb
cs
add
sbb
ret
add
mov
add
lods
add
push
ret
mov
loop
sbb
add
mov
sub
or
and
pop
dec
fwait
sub
add
mov
scas
out
in
popf
xor
or
add
jno
les
add
into
loopne
pop
mov
add
mov
inc
mov
add
sub
or
add
fsub
adcb
dec
lcall
push
mov
neg
sbb
pop
or
mov
int3
dec
dec
xchg
int3
rorb
in
push
or
jl
aaa
xchg
fmulp
xor
xchg
notb
les
test
cmpsl
hlt
and
jmp
lret
xchg
push
repnz
mov
and
cmp
sub
leave
stos
call
mov
ret
fwait
stc
xchg
mov
and
jnp
sbb
mov
ret
ret
imul
fadds
pop
and
icebp
cmpsl
dec
fsts
and
test
sbb
test
inc
mov
pop
cmpb
call
mov
and
clc
movl
loop
mov
mov
mov
sbb
cmp
leave
inc
mov
into
int3
push
add
mov
or
fldenv
push
mov
inc
mov
jnp
push
out
inc
mov
call
jnp
fisubl
mov
inc
js
lret
test
and
adc
cmc
cmpsl
ret
clc
cmp
lcall
dec
add
push
cmp
mov
xchg
add
push
mov
insl
and
or
dec
inc
or
jecxz
out
inc
cli
shr
dec
adc
mov
addr16
mov
inc
sub
or
or
inc
fwait
mov
daa
jmp
in
pop
fidivl
repnz
jl
cmp
lcall
cli
push
or
mov
adc
push
xor
sub
insb
out
jbe
out
adc
mov
sub
dec
xchg
and
jmp
mov
or
sahf
dec
pop
cmp
pop
fldl2e
sbb
loop
mov
xor
lret
movsl
adc
cli
sub
pop
out
aam
push
or
mov
dec
rcl
shrb
mov
dec
or
movsl
int3
mov
in
ret
mul
jmp
mov
stc
add
lods
repnz
rcrl
pusha
jns
mov
in
mov
icebp
and
mov
in
andl
enter
add
cwtl
cmp
add
and
call
sbb
mov
pushf
aaa
jnp
and
adc
jmp
mov
stos
sub
icebp
sub
inc
jo
mov
mov
jne
mov
je
cmc
aam
dec
mov
jp
stos
lahf
pop
adc
out
mov
adc
jbe
sarb
dec
jnp
lret
ss
jl
push
push
push
call
pop
sbb
cmpsl
ret
repnz
push
mov
or
out
data16
jg
clc
jb
dec
call
mov
sbb
ljmp
loop
std
iret
sbb
mov
out
add
dec
test
loop
in
fs
sub
push
fldcw
mov
mov
leave
cmpsl
adc
and
cmp
movsl
xor
out
cmpb
mov
sarb
push
fidivrs
in
aad
push
jp
inc
mov
pop
cmpsl
or
xchg
bswap
je
mov
iret
adc
mov
push
or
sahf
xchg
leave
dec
inc
into
fsubr
sti
dec
insl
pop
jle
inc
std
mov
dec
inc
jecxz
in
push
pushf
test
test
jle
adc
jge
pop
inc
inc
stc
mov
sahf
lea
clts
sahf
jae
mov
into
into
js
jle
test
mov
pop
in
movsl
scas
jnp
ljmp
imull
sub
aas
push
out
mov
outsl
int3
ret
add
push
ljmp
aaa
call
xchg
das
dec
test
lea
xor
ss
jl
pop
test
cmpsb
mov
inc
fwait
xor
and
dec
lahf
inc
and
xchg
movaps
sub
pusha
inc
loop
and
jle
xchg
fs
push
sahf
push
fcompl
cmpsl
jae
enter
push
mov
sti
das
pushf
pop
or
movsl
in
imul
cltd
scas
movsb
aad
adc
adc
movsb
repz
and
dec
pop
enter
inc
sbb
mov
pop
sbb
int
jle
ret
jmp
xor
call
push
daa
push
leave
in
sti
sub
xchg
imul
or
add
lods
jae
popa
imul
inc
cli
xchg
hlt
xor
inc
adc
andnps
addr16
or
je
mov
xchg
sti
lcall
pop
shl
out
ljmp
cmp
push
xchg
jnp
sub
push
push
add
add
inc
fldt
inc
call
out
and
xchg
pop
add
into
mov
stos
jge
popa
jmp
mov
mov
pop
push
jge
outsb
divl
cvtps2pi
push
xchg
push
imul
add
jne
scas
xabort
sbb
and
mov
add
mov
pop
sti
or
lret
mov
adcl
scas
mov
pop
adc
cmp
add
ret
push
adc
xchg
dec
lea
lahf
aas
sub
jmp
je
scas
leave
cmp
and
mov
and
add
push
jnp
stc
loope
jle
add
pop
jno
and
sbb
cmpsb
insb
or
fcomps
cs
or
sub
push
and
jl
push
fstpt
inc
insb
movsl
dec
sub
ljmp
push
xor
arpl
stc
mov
dec
leave
or
sbb
mov
sti
inc
lea
jecxz
inc
lret
sub
pusha
lea
push
mov
xor
mov
pop
lcall
add
sub
sub
dec
sub
mov
mov
dec
sbb
inc
jl
add
ds
aas
insb
loope
enter
jmp
and
push
fists
stc
inc
orl
xor
sub
or
push
push
mov
stos
or
cld
out
xor
lret
sbb
mov
clc
nop
mov
dec
lods
xchg
imul
xor
inc
dec
pushf
mov
adc
in
add
xlat
pushf
adc
jmp
xchg
or
inc
xchg
imul
pop
pop
fimull
lock
push
fdivl
sub
push
pop
cmpsb
pop
or
out
adc
dec
stc
or
xor
icebp
adc
loop
mov
cld
push
push
jl
pop
or
inc
mov
pop
push
loope
sbb
sarb
mov
sub
sub
or
loope
xor
fcomi
xlat
sub
dec
or
sub
sub
mov
jnp
push
or
in
setle
mov
jbe
insb
sub
jl
fucomp
sysenter
pop
sub
adc
call
xor
cs
sti
out
sbbb
sti
in
xchg
enter
repnz
cmpsb
add
and
jmp
inc
and
jle
in
push
sahf
mov
lods
inc
pop
int3
mov
leave
scas
inc
adc
mov
add
xor
push
pop
movsl
cwtl
arpl
scas
fwait
movsl
lea
xchg
dec
hlt
push
insb
add
xchg
pop
inc
sub
scas
das
stos
cmpsl
or
add
lret
xor
or
scas
enter
mov
inc
lret
lret
cmovno
push
movsb
xchg
stc
cmp
push
loope
inc
mov
add
insb
lret
sbb
call
sbb
lret
lea
stos
inc
jb
mov
add
and
cmp
jg
mov
or
xchg
cmpsb
mov
lock
jmp
out
aam
cli
mov
add
xor
jmp
pop
mov
adc
sbb
lcall
adc
inc
or
sbb
add
insl
inc
into
mov
sahf
in
mov
psllq
sbb
xchg
or
dec
jmp
dec
ljmp
lret
ljmp
repz
js
stc
subl
nop
test
test
in
std
adc
jle
fld
mov
jmp
mov
add
lret
push
idivb
lea
jne
into
popa
dec
and
into
cmpsb
dec
and
into
jmp
and
ret
aad
int
push
add
fmulp
gs
push
shlb
loop
test
mov
mov
sub
shrl
xchg
or
cmp
mov
lret
addb
cmp
xor
or
lret
xchg
push
mov
loop
mov
inc
sbb
xchg
and
mov
mov
mov
or
mov
loopne
xchg
in
clc
adc
js
mov
mov
or
insb
sub
jo
popa
lss
lret
mov
xchg
fsubrs
rol
push
loope
xor
xlat
or
arpl
loope
leave
popf
movsb
out
pop
pop
adc
jnp
add
hlt
daa
sub
mov
push
or
lods
add
or
mov
mov
ljmp
or
dec
stos
jne
mov
push
and
push
sub
mov
stc
mov
push
push
subl
push
in
pop
ljmp
or
lcall
test
les
add
into
mov
je
jne
inc
test
jne
xchg
gs
in
aaa
sbb
or
imul
xor
arpl
sub
out
movsl
add
mov
cwtl
push
ss
int
movsl
lods
sahf
pop
mulb
pop
jmp
lods
and
push
popa
lret
sahf
and
xchg
ljmp
jl
or
add
dec
les
loope
or
call
enter
jb
stc
scas
pop
sti
loop
and
mov
or
int3
in
insb
mov
lcall
call
test
scas
inc
and
lods
lods
jle
mov
sbb
pop
test
mov
movsb
xchg
cmovl
adc
ljmp
push
les
xchg
sub
test
insb
adc
mov
stc
scas
sub
dec
fs
jge
or
jbe
push
sahf
sub
jb
xchg
add
or
jp
scas
imul
orb
adc
mov
call
cmpsl
adc
pop
orb
aas
adc
sbb
mov
movsl
push
sahf
sarl
inc
add
mov
sub
mov
dec
cmpl
in
in
movsb
mov
pop
jnp
mov
int3
aas
add
cmovno
or
mov
add
inc
addr16
pop
xchg
fcmovu
rolb
fnstsw
lock
std
sahf
add
sub
mov
insb
mov
jle
cltd
lods
add
out
leave
ret
jns
subb
add
or
cs
add
mov
push
pop
cli
pop
ds
jp
out
fcmovne
mov
xchg
shrl
push
sbb
sbb
add
test
fsubr
add
stos
lahf
or
hlt
mov
and
cmp
pop
pop
jecxz
loop,pt
outsb
xchg
pop
test
fwait
jge
add
add
dec
or
test
testb
sub
dec
repz
or
lods
incl
jl
mov
jecxz
inc
mov
push
ret
jns
fwait
and
jle
dec
or
test
adc
jo
popf
sbb
or
pop
dec
enter
push
or
xor
xorb
adc
test
inc
das
jl
jne
ljmp
sub
out
or
and
jne
pop
add
popf
insl
lock
daa
jg
and
pop
out
dec
in
mov
in
inc
pop
or
add
xor
sub
mov
mov
sbb
aaa
int3
dec
jl
jnp
int3
adc
inc
fcomps
add
dec
jns
call
sub
imul
jno
fs
mov
mov
jns
adc
pop
jp
shl
test
pop
sti
adc
pop
shlb
std
subb
cmp
popa
leave
enter
xchg
add
loope
adc
and
arpl
test
sub
je
jb
ljmp
push
mov
leave
adc
ret
mov
gs
imul
mov
movsl
pop
test
and
stos
enter
aad
or
inc
xor
xchg
cmc
lret
xchg
imul
jne
add
mov
xor
stos
xchg
cmpsb
out
scas
mov
sub
add
leave
loope
inc
addr16
dec
lock
pop
inc
in
adc
sub
shr
movsb
cmpsl
cld
dec
push
jb
add
push
or
addr16
shrb
xor
push
mov
lods
aam
adc
cmp
lods
and
add
jne
out
push
int
sub
mov
inc
inc
mov
fisttpll
xor
cmpsb
dec
jmp
sub
sbb
push
cmp
fildl
sub
js
pop
cmp
cltd
push
mov
jecxz
pusha
dec
sbb
mov
or
lret
int3
mov
mov
arpl
sub
xchg
mov
mov
stos
add
je
pop
mov
loope
mov
test
xor
pop
or
mov
xorl
scas
mov
cmp
mov
or
mov
or
and
int3
fldcw
stc
filds
adc
pop
pop
jnp
xchg
test
adc
mov
inc
cld
or
int3
sahf
clc
sbb
dec
jmp
imul
and
ret
in
lret
sub
add
push
idiv
dec
dec
push
jne
sbb
loopne
in
icebp
pop
loopne
frndint
shr
iret
push
xchg
add
mov
mov
les
out
and
mov
cmp
sbb
fdivrl
fisttpll
jle
in
cmpsb
push
hlt
pop
xchg
imul
jmp
jbe
adcl
rorb
push
subl
in
gs
mov
scas
les
push
clc
or
stos
jle
stos
jno
pop
push
dec
cli
fidivl
xchg
loop
or
xchg
pop
shl
push
insl
in
fcmove
sahf
outsl
js
add
sbb
sbb
inc
decb
or
jne
aam
adc
sahf
adc
xchg
fstpt
test
cs
sub
mov
pop
add
pushf
jae
push
out
pop
dec
mov
adc
dec
fstps
icebp
adc
jo
jno
xchg
push
sub
hlt
push
dec
test
pushf
repz
pop
test
loop
fstpt
mov
imulb
sub
xchg
imul
orl
mov
aas
repz
push
inc
mov
mov
sbb
adc
inc
out
mov
adc
dec
fs
inc
push
test
insb
sbb
pop
inc
mov
sub
fs
add
loope
mov
mov
divb
fs
push
add
out
cmp
and
stos
inc
mov
adc
cmp
loope
or
repnz
test
dec
sahf
pushw
fcmovne
les
ret
xlat
pop
cwtl
scas
and
lret
pushf
mov
or
jbe
clc
pop
and
xchg
pusha
sarl
test
mov
fcomi
in
or
or
fwait
mov
lret
xchg
pop
js
imul
adc
mov
lahf
cltd
hlt
pop
fnsave
jno
clc
add
iret
mov
inc
sub
mov
sti
rorl
dec
jle
mov
add
and
mov
and
mov
decl
add
inc
repz
or
add
lcall
jle
adc
sub
call
test
test
stos
adc
cli
popf
fldt
ret
xchg
cmp
pop
addb
dec
and
and
dec
cld
int3
jmp
mov
or
jmp
sub
fdivp
leave
jecxz
fisttpl
push
ffreep
jge
or
iret
sbb
xor
cs
out
jge
js
mov
ss
bound
mov
lret
sti
call
xchg
adcb
rcrl
outsb
sbb
adc
pushf
gs
jle
xor
loope
cli
sahf
stos
mov
mov
dec
cli
sbb
xchg
in
into
mov
outsb
call
call
push
jl
adc
dec
fildll
push
fisubl
hlt
dec
mov
push
popa
or
sbb
repnz
rolb
mov
dec
mov
add
insb
hlt
in
add
jns
jl
add
leave
popa
pushf
adc
movsb
lods
adc
pop
inc
push
pop
dec
pop
out
popf
dec
in
or
inc
mov
and
jb
test
dec
cmpsl
mov
adcl
data16
sahf
mov
test
adc
adc
shlb
loop
dec
addl
inc
push
sub
pushf
inc
cld
cmp
sub
loope
mov
cmp
pop
adc
movsl
xor
pop
pop
sub
sbb
jle
and
mov
push
dec
or
push
in
lods
popf
out
xchg
ljmp
and
sub
lods
mov
rolb
cmc
stos
sub
dec
add
cmp
mov
jecxz
leave
and
adc
push
idiv
jns
lock
rcr
aas
inc
mov
cmp
xchg
insl
test
dec
inc
push
popf
push
xor
fisttpl
mov
lea
pop
cwtl
test
ftst
mov
mov
mov
and
data16
cmpb
cli
push
pusha
xor
xlat
sbb
fldenv
fnstcw
jnp
in
pusha
lock
fmuls
loopne
adc
in
pusha
add
fstpl
js
lods
fdivr
mov
add
pushf
addb
std
xchg
pushf
adc
or
mov
xchg
ret
movswl
lea
cvttps2pi
push
ret
pop
or
xor
sbbl
xchg
jne
xchg
inc
jnp
add
insb
sub
ret
dec
jmp
push
mov
add
adc
jmp
int
xor
xchg
xchg
adcb
cli
clc
mov
pop
add
mov
jne
inc
arpl
test
dec
mov
dec
or
mov
and
insb
or
fbstp
pop
pop
lcall
sti
mov
mov
lahf
or
icebp
or
lahf
mov
xchg
test
fsts
jle
dec
lea
stos
insb
adc
inc
lods
jnp
push
in
mov
insb
movsl
add
pop
scas
les
mov
push
arpl
pop
add
mov
sti
out
mov
mov
mov
mov
push
sti
cmc
xor
inc
scas
pop
pop
int
add
hlt
adc
popa
cmp
jle
sbb
dec
inc
pusha
outsb
lret
pusha
xchg
jmp
int3
xor
and
sub
add
mov
stc
lds
sbb
mov
xlat
sub
icebp
or
mov
xchg
fstl
jns
mov
mov
add
add
sbb
adc
cmp
mov
jl
or
imul
std
mov
mov
jno
pop
or
mov
mov
pop
call
fucomip
into
mov
aad
loopew
inc
and
or
add
or
sub
dec
and
setp
xlat
jmp
fisttpl
lods
inc
scas
ror
sub
sbb
and
ret
decl
jno
add
inc
add
popa
popa
dec
les
in
cmp
and
jns
es
dec
insb
addr16
cmpsl
jle
fmull
cmpsb
mov
test
loopne
lcall
sub
lds
mov
scas
xor
int3
cs
outsb
cmpb
jg
loope
loop
cmp
push
rcl
sti
fimull
push
stc
nop
outsl
ja
sbb
out
jnp
mov
mov
frstor
scas
cmpsl
sub
lods
adc
icebp
hlt
lea
ss
push
adc
inc
jb
fidivrs
leave
shrl
js
fucomip
dec
mov
negb
lret
xor
cmp
stos
adc
mov
jmp
cs
mov
loop
dec
in
orb
lods
cwtl
lret
push
lock
xchg
xchg
cmp
pusha
dec
and
pop
out
sti
sbb
jmp
lcall
ret
loope
inc
les
jg
sbb
mov
pushf
adc
jle
jle
shlb
sti
bound
inc
add
stos
fisttpl
pushf
test
mov
in
js
inc
in
bound
outsl
lds
xor
loope
inc
and
add
adc
dec
mov
out
or
decb
jg
xchg
faddl
data16
shrb
mov
std
out
imul
adc
je
dec
faddl
sahf
and
sbb
pop
pushf
sub
cwtl
stos
lds
cwtl
je
push
mov
mov
sub
daa
pop
xchg
mov
jge
scas
or
sbb
rcr
xchg
stos
fs
insl
iret
imul
xchg
xor
ss
sbb
dec
test
pushw
adc
sbb
or
inc
mov
jbe
mov
dec
call
lret
ljmp
popf
bound
shrd
mov
dec
mov
jmp
sub
push
addr16
out
and
push
add
loope
or
xchg
mov
mov
jno
in
push
stos
jne
leave
ret
and
or
adc
mov
mov
or
mov
jns
mov
push
and
ljmp
imulb
mov
mov
scas
repz
repnz
adc
stos
add
sub
push
lret
jb
push
lods
mov
fimuls
loop
push
or
sub
loope
in
inc
jmp
mov
sarl
mov
loop
pop
jl
and
aaa
push
loop
dec
enter
or
mov
shrb
test
push
xchg
jg
mov
adc
scas
mov
sbb
jmp
or
cli
mov
xchg
test
dec
test
int
or
andl
cmc
inc
or
inc
hlt
shl
lods
push
movsb
repnz
fcmovne
push
sub
xlat
mov
pop
jle
jp
ss
jl
out
js
hlt
insl
or
imul
loopne
jl
mov
push
and
xchg
add
sbb
repnz
xchg
lds
imul
jg
lret
cld
xor
popa
xchg
dec
push
jnp
and
adc
pushf
les
sbb
and
fwait
cmp
cli
jmp
cmpsb
in
mov
jmp
test
pop
cmc
sub
cmp
add
aad
btc
push
mov
mov
cmp
add
mov
out
add
add
add
adc
sbb
pop
mov
fistpl
pop
xchg
mov
cwtl
cltd
sbb
insl
nop
jmp
or
icebp
fiaddl
lcall
js
ljmp
rclb
push
jmp
test
movsl
adc
lcall
stc
jmp
dec
dec
das
inc
pop
ret
rcrl
or
dec
xchg
mov
aaa
fisubrl
xor
jmp
lret
lcall
testl
or
test
mov
test
cwtl
add
aad
sbb
or
imul
adc
ljmp
and
data16
cmpsl
adc
dec
in
mov
dec
or
lods
aam
add
mov
mov
pushf
testb
sahf
ljmp
mov
dec
lods
addr16
cs
xor
xor
sti
inc
sbb
test
adc
or
jg
sti
or
adc
js
xlat
add
push
jmp
int
mov
scas
int3
add
sbb
inc
mov
rcr
push
imul
dec
inc
lock
dec
sahf
in
dec
inc
or
add
fimuls
mov
int
in
jmp
or
adc
lock
mov
push
in
mov
jecxz
pop
ds
pop
loope
adc
jl
ss
loop
pushf
test
addr16
xor
xor
rcll
add
lock
loope
clc
loop
fstpl
add
lret
mov
out
mov
in
or
adc
xchg
leave
and
lahf
out
cmpsl
add
popa
ss
cmpb
or
jle
pop
bound
int
xor
test
xchg
mov
stos
sub
inc
addr16
jle
dec
sti
shlb
jecxz
les
inc
insb
addr16
mov
shrl
cmp
repz
xchg
cmpsb
test
xchg
mov
cmp
jp
sbb
add
xchg
push
rolb
and
push
jns
jb
iret
mov
push
mov
mov
adcl
inc
hlt
push
cld
adc
cwtl
or
dec
loop
mov
sahf
imul
sti
gs
mov
xchg
inc
mov
aam
lret
sub
loope
rorl
inc
jg
jae
int
sbb
xor
aaa
aad
dec
xchg
pop
mov
push
cmpsb
aam
dec
pushl
idiv
in
sub
sahf
push
pushf
shlb
jecxz
es
aam
mov
push
sahf
scas
or
loop
push
inc
or
mov
dec
inc
lret
lret
push
sub
add
mov
xlat
jl
cwtl
cmp
inc
mov
xchg
push
sbb
ret
scas
mov
push
fwait
pop
aas
add
sbb
adc
xor
out
sub
imul
jmp
mov
inc
out
jno
dec
in
jge
adc
lret
mov
shlb
inc
sbb
jnp
adc
imul
sbb
stc
fsts
adc
adc
add
stos
adcb
xchg
repnz
lret
data16
cmp
fistps
shll
inc
jl
or
enter
mov
dec
adc
push
lret
mov
sub
inc
sub
mov
mov
movsb
mov
movsl
pop
pushfw
imul
clc
lret
xchg
mov
mov
mov
pop
add
dec
pushf
pop
mov
shll
sub
scas
je
iret
pushf
lods
roll
sbb
sarb
push
scas
daa
adc
pop
mov
imul
addr16
scas
mov
fistpll
and
rol
inc
daa
mov
add
daa
clc
adc
lods
pop
popa
mov
call
xor
lcall
push
cld
ja
adc
out
jmp
data16
adc
jmp
adc
nopl
jge
repz
pop
xchg
push
push
leave
stc
mov
test
ljmp
iret
lds
cld
orb
push
sub
jns
jnp
adc
mov
cmp
cmp
int
sbb
adc
add
gs
fdivl
add
push
sbb
cmc
add
movsl
sub
hlt
ds
fdiv
push
adc
subb
jg
daa
jl
mov
add
int3
lahf
icebp
jg
test
ret
pop
adc
andl
or
add
xchg
in
scas
sub
xchg
add
loope
imul
into
xlat
int3
in
mov
aaa
gs
movsl
pushf
sub
ljmp
test
cmpsl
jbe
mov
int3
xlat
lock
add
scas
push
sbb
insb
mov
lret
inc
mov
enter
lods
loope
addr16
cmp
and
push
loope
add
imul
enter
push
mov
clc
xorl
arpl
popf
test
frstor
or
or
and
mov
imul
stos
adc
mov
lret
sub
cmp
adc
or
incl
inc
mov
test
and
ss
in
mov
push
cld
int3
mov
or
in
add
add
mov
adc
or
mov
test
or
sbb
lret
aas
sbb
inc
popa
jmp
sahf
scas
jno
adc
jmp
dec
les
lods
loop
xchg
or
add
test
enter
or
sahf
test
pop
cmp
or
jg
ds
out
sahf
mov
add
fisubrs
rcr
test
in
sbb
dec
xor
clc
sub
push
adc
xchg
gs
sbb
lret
jle
outsb
or
and
ljmp
sub
nop
sahf
in
jg
sub
adc
mov
or
test
xor
fcmovnbe
mov
cmp
push
shrb
addr16
shl
push
cmpsl
or
sub
push
sti
inc
jmp
add
cmpsl
push
mov
pop
add
dec
sahf
cmpsb
movsl
leave
cs
or
push
int3
cmpsl
adc
or
mov
sbb
scas
mov
mov
das
xchg
or
xor
or
pusha
mov
fwait
js
push
fwait
in
jne
xchg
pop
push
negl
addb
out
jge
dec
push
repnz
aam
inc
sbb
push
ds
dec
repnz
repz
loop
sbb
and
mov
mov
xchg
lret
xor
cmp
adc
inc
sub
push
jl
mov
sahf
jle
push
sub
mov
inc
addr16
shrb
loope
les
ret
push
sub
xchg
pushf
sub
add
xchg
mov
dec
cmpsb
jge
enter
xchg
scas
pop
andl
les
jmp
cwtl
inc
mov
cs
and
or
insl
mov
sub
sahf
sub
lea
data16
jle
adc
pushf
and
inc
push
mov
mov
dec
sarl
dec
insl
out
dec
or
or
adc
jnp
sub
insb
lods
jmp
fs
je
cmp
insl
mov
or
jg,pn
out
jmp
scas
sub
mov
cmpsl
mov
aad
movsb
rorb
leave
sub
jge
xchg
sub
mov
movsb
dec
mov
mov
roll
test
xor
in
lods
shlb
jl
inc
pop
xor
bound
fsubrs
dec
popf
int3
mov
push
mov
in
dec
lods
fildl
hlt
test
scas
inc
mov
dec
mov
inc
ret
add
jle
enter
mov
stc
mov
xchg
cltd
xor
cmpsl
aam
clc
test
jl
outsl
sbb
ffreep
stc
addr16
imul
dec
sub
cli
dec
jg
mov
adc
cmp
data16
or
xor
or
scas
sub
mov
cwtl
inc
jmp
add
dec
or
or
mov
call
sahf
push
mov
loope
adc
stos
adc
mov
mov
jecxz
fisubl
push
adc
nop
shl
mov
mov
push
les
pop
movsb
inc
dec
cmpsb
int3
mov
sbbb
and
mov
scas
andl
lds
jecxz
jle
and
test
stos
jecxz
sahf
sub
jnp
std
adc
push
outsl
insb
in
dec
pop
insb
cmc
cwtl
cmpsl
adc
xor
andb
adc
push
dec
adc
or
sub
stos
aaa
push
out
ret
arpl
fldl
mov
push
xchg
mov
mov
pop
icebp
bound
or
dec
mov
fnsave
or
cmpl
adc
xchg
and
orb
xor
cmp
dec
adc
sub
and
sub
adc
sub
js
or
add
lgdtl
sub
cltd
jmp
adc
add
inc
pushf
add
mov
sub
mov
enter
or
rolb
lret
add
jmp
enter
or
adc
pop
sbb
lea
push
stc
jmp
sahf
or
adc
ret
lcall
xchg
mov
enter
or
mov
push
imul
or
ljmp
movsb
outsl
inc
mov
and
cmp
sub
sbb
dec
repnz
add
loopne
push
inc
pusha
mov
loop
xor
stc
jg
jnp
jmp
mov
and
fs
or
push
sbbb
out
in
out
cmpsl
test
dec
mov
mov
ret
or
sbb
icebp
push
xchg
mull
sahf
jmp
mov
pop
and
inc
push
push
mov
pop
push
push
inc
divb
outsb
or
test
loope
cmpsl
and
hlt
and
int
xchg
into
icebp
int3
adc
push
imul
inc
lea
sahf
fisubl
stos
int
adc
xor
sub
or
pop
subb
ds
jecxz
ret
cmpsl
dec
mov
rcr
sti
xchg
adc
sti
add
xor
add
push
pop
pusha
fcmovbe
les
ror
lods
pop
lret
arpl
xchg
rclb
aaa
mov
int3
inc
adc
sarl
mov
aas
mov
cmp
outsb
and
hlt
pop
hlt
les
mov
and
adc
mov
inc
and
xor
imul
and
mov
notl
js
insb
pop
jae
cmpsb
in
movsb
inc
mov
mov
insl
xchg
out
fs
push
add
dec
clc
push
pop
stos
cmpb
xchg
cld
mov
inc
inc
cmp
dec
dec
mov
mov
dec
adc
das
fsubs
insl
ja
mov
sti
insb
xchg
es
insl
lret
fucom
movsl
in
adc
fs
int
or
mov
jle
inc
add
push
adc
adc
sbbb
mov
leave
pop
pop
cld
outsl
in
mov
ds
stos
xor
test
not
or
fisttpl
sub
inc
and
add
pop
dec
mov
fs
lock
and
push
cmp
adc
shlb
cwtl
pop
inc
loopne
scas
cmp
sub
inc
or
and
jns
or
outsb
test
iret
xchg
imul
adc
and
xchg
mov
shll
mov
mov
sub
mov
dec
movsl
mov
test
and
mov
ret
test
sbb
mov
arpl
inc
or
test
mov
cmp
out
iret
ja
push
movsl
and
adc
xchg
decb
cwtl
and
sub
jle
and
or
and
push
jg
push
sbb
ljmp
stos
pushf
adc
movsl
cmp
pushf
cmc
cmpsb
xor
incl
mov
daa
sbb
and
aad
or
xchg
or
mov
fsubr
fbld
fisttpll
sub
cmpsb
xchg
mov
mov
push
mov
cld
ficoml
pop
or
xlat
jns
enter
js
xchg
rcr
mov
push
test
test
sti
push
or
sti
ror
aam
mov
adc
push
adc
jl
fisubl
out
imul
mov
or
sub
lahf
lods
xor
xor
lods
and
xchg
iret
or
push
or
into
add
mov
cmpsl
jl
mov
repz
sti
and
xchg
mov
out
loope
lds
dec
gs
add
sub
cmpsl
insb
jo
jmp
add
jnp
sbb
mov
ljmp
test
fistpll
lods
lcall
add
xor
aas
or
insb
out
xlat
ret
daa
jecxz
testb
sbb
fists
or
pop
jecxz
cmpsl
test
stos
loope
mov
rorl
clc
lods
repnz
dec
in
stc
xor
jae
mov
jmp
mov
enter
in
loope
inc
call
jge
add
push
loope
sbb
clc
lret
sti
sti
or
ds
push
push
aam
loope
push
inc
pmulhuw
inc
mov
dec
mov
in
insb
popa
mov
in
movsb
call
fildll
cmp
sub
dec
mov
ljmp
loopne
add
adc
movsl
xor
loope
adc
adc
int3
rol
leave
movsl
cs
pop
call
mov
mov
dec
repz
mov
dec
adc
cmp
in
sbb
in
or
lret
insb
adc
inc
out
ds
movsb
fildl
sti
stos
popa
xchg
scas
push
xchg
inc
push
inc
popf
sbb
movsb
lea
adc
jp
jmp
add
mov
stc
jg
pop
mov
sbb
mov
es
sub
mov
push
fmull
sbb
scas
ja
lret
ljmp
adc
cli
lods
les
mov
mov
jne
in
jbe
lods
scas
mul
jmp
inc
mov
xchg
out
mov
mov
add
and
and
lret
or
push
xchg
mov
sbb
aam
and
lret
xchg
adc
movsl
xchg
or
aam
adc
inc
xor
sbb
push
hlt
scas
mov
xchg
dec
stos
adc
lods
sbb
xor
or
pop
aam
loope
imul
adc
mov
sub
mov
mov
into
or
adc
fimull
mov
mov
pushf
js
cli
sub
scas
stos
pop
loop
aaa
ret
cli
dec
mov
loopne
sahf
inc
or
mov
scas
mov
stos
lcall
mov
mov
outsl
mov
jge
jle
push
sahf
cmp
jge
rolb
andl
jp
jle
in
mov
fwait
leave
jns
das
and
jmp
lea
or
int3
sub
cmovs
iret
mov
cwtl
mov
call
fimull
pop
xchg
mov
stos
ljmp
movsb
mov
and
inc
insl
and
pop
sbb
pop
imul
pop
cmp
mov
lcall
push
popf
inc
push
and
sti
gs
and
or
out
test
arpl
cmp
xchg
hlt
add
decb
stos
rorl
mov
add
out
xchg
sbb
adc
push
adc
ljmp
mov
sahf
sub
cwtl
inc
and
mov
sbb
mov
sbb
jmp
pushf
mov
cmpsl
mov
inc
push
push
fidivrs
adc
push
inc
into
lods
sti
and
push
xchg
test
repz
mov
adc
dec
nop
jo
leave
lret
mov
add
mov
jno
xchg
ja
pushf
mov
xlat
dec
xor
fs
ds
xchg
cmpl
push
ror
bound
es
jmp
leave
hlt
insb
rolb
xchg
or
negb
jnp
in
addr16
mov
lea
push
sbb
scas
jmp
fwait
rorl
inc
sbb
int
xchg
int
sbbb
inc
enter
rclb
adc
push
sbb
out
jmp
sub
test
imull
push
test
and
and
inc
stos
test
and
stos
and
or
cli
sub
flds
lds
sub
inc
and
clc
sbb
in
repz
lea
sahf
inc
add
mov
fbld
adc
dec
scas
adc
dec
sbb
int3
lea
cmpsl
dec
jbe
sub
adc
fwait
js
mov
inc
lret
pushf
sbb
cmp
cmp
inc
pop
sahf
jmp
mov
fisttpl
push
faddp
movl
sub
jle
jno
lret
mov
inc
fadds
rcl
dec
or
cmp
jne
pop
scas
das
out
ss
cld
or
push
mov
out
pop
adc
clc
stos
and
inc
fwait
clc
inc
mov
and
cld
mov
les
and
movsl
in
mov
xlat
dec
mov
mov
mov
pop
insb
mov
aaa
imul
mov
sub
push
outsb
jmp
shrl
adc
adc
enter
mov
and
jle
inc
in
mov
lods
cld
jge
pop
int3
sbb
or
cmpsb
adc
test
mov
push
mov
or
testb
cmp
ss
mov
push
inc
sub
adc
int3
dec
push
jns
cmp
sbb
mov
dec
sti
clc
push
nopl
enter
inc
add
mov
stos
push
or
mov
imul
pusha
daa
loopne
add
outsb
mov
pusha
pop
sahf
mov
in
mov
enter
ds
mull
jmp
loopne
sub
mov
lret
divl
sbb
add
add
ret
jne
stos
or
pop
inc
mov
cmpsl
outsb
xor
push
ret
dec
add
sub
aam
jecxz
stos
les
sbb
pop
loope
mov
push
jne
cmc
mov
add
repz
hlt
out
int3
lods
aam
pushf
adc
cltd
fidivl
dec
xchg
dec
dec
cli
sbb
sbb
imul
hlt
lock
in
sahf
ljmp
jmp
or
adc
rcrl
dec
xchg
mov
cwtl
jecxz
adc
fwait
add
repz
aas
xchg
call
inc
les
fildll
lods
push
sti
enter
lcall
jne
sahf
mov
inc
adc
std
fiaddl
mov
daa
cld
scas
nop
or
push
push
pop
in
pop
enter
push
orb
jp
jno
sahf
dec
mov
clc
mov
scas
js
push
mov
cwtl
repz
dec
cmpsb
mov
mov
and
sub
mov
add
mov
xor
and
sti
fwait
cmc
or
dec
mov
xor
cmpsl
mov
gs
fcoml
std
push
lods
into
mov
push
or
setge
sub
add
mov
roll
push
mov
mov
aad
lods
lock
pop
adc
dec
fildll
unpckhps
jle
xorl
dec
fistps
jge
dec
add
dec
sub
cmpsl
mov
push
push
xchg
movsb
sbb
addr16
lcall
loop
dec
sbb
or
pmaxsw
fimull
mov
mov
sbb
loope
pop
mov
mov
stos
loope
imul
daa
cld
test
addr16
sub
add
in
sahf
adc
add
mov
add
xchg
fs
std
daa
repnz
call
push
cs
adc
scas
mov
sti
clc
inc
sub
pusha
mov
xchg
adc
jnp
arpl
fucomi
adc
aaa
mov
xor
cld
aad
lcall
add
stos
push
movb
cmp
js
sub
xlat
ficompl
fdivrs
movsl
cld
jne
sahf
xchg
pop
sbb
push
movsl
or
bound
lret
or
add
add
in
out
movsl
xchg
or
pop
dec
mov
hlt
mov
push
rolb
sbb
push
cwtl
push
cmp
pop
cltd
call
shl
dec
add
mov
pop
and
add
mov
les
mov
xchg
decl
push
enter
int3
in
push
mov
sub
inc
jne
daa
out
fwait
int3
test
cmpsb
lea
faddl
bound
jle
imul
dec
pop
sub
jmp
ja
or
clc
out
stos
leave
add
mov
cmp
adc
sub
imul
lods
in
mov
sub
mov
rorb
ljmp
xor
push
fidivl
and
in
xchg
mov
inc
add
sub
add
lock
insb
imul
add
jl
dec
or
adc
mov
in
lret
push
dec
cld
movsl
hlt
imul
shrb
xor
cmc
fistl
sub
inc
mov
int
pop
and
and
jecxz
xchg
fmulp
mov
insl
add
outsb
add
adc
dec
in
sbb
ljmp
xorl
mov
stos
dec
and
pusha
rcrb
adc
inc
int3
sahf
mov
or
cmc
scas
mov
sbb
sbb
xor
xchg
dec
and
rol
out
adc
mov
xor
ret
sbb
loopne
loopne
lret
fnstsw
dec
loope
jns
out
ret
scas
adc
cmp
inc
fimull
xchg
sahf
lods
jle
mov
jno
insl
or
sti
mov
adc
pop
cmp
loope
mov
mov
sti
mov
jl
cmp
leave
addb
ret
or
incl
lds
inc
mov
add
adc
cmp
jnp
js
clc
test
ret
or
imul
pop
mov
scas
xchg
cmpsl
dec
mov
inc
popf
mov
fisttps
and
or
shrb
xor
lock
sub
aam
addr16
mov
mov
ret
jl
mov
les
jl
jg
into
and
add
jo
jge
into
or
dec
xor
pop
fwait
inc
repz
ljmp
test
cmp
jo
jecxz
int3
ljmp
sub
push
cwtl
insl
sti
add
sbb
leave
adc
adc
hlt
pusha
pushf
lds
add
int
movsl
movsbl
inc
aam
mov
nop
push
inc
mov
or
mov
or
sbb
cli
fcompl
jle
inc
sbb
add
jne
mov
xchg
or
xor
jge
push
cwtl
mov
adc
fst
gs
pushf
fcompl
hlt
mov
or
xchg
add
sub
or
repz
loop
inc
sub
lret
cmpsb
dec
stos
jl
pop
adcl
adc
cmp
andb
or
adc
xor
xor
push
lods
les
cld
mov
xchg
jmp
or
stos
and
jle
pushf
pushf
inc
movsb
xor
mov
mov
mov
xchg
jle
jl
movsb
sub
add
dec
add
outsl
inc
add
fs
sub
rcll
xchg
push
xchg
mov
enter
test
dec
sbb
jp
std
lret
sub
aaa
movsb
xchg
xlat
jmp
cmp
xchg
rcll
in
fidivrs
adcb
popf
inc
les
pop
std
sbb
call
mov
sub
push
jae
xor
xor
mov
stos
sub
mov
dec
cld
movsb
dec
xchg
mov
out
xchg
sti
dec
push
sbb
aad
mov
cmpsb
add
sahf
lret
gs
in
and
xorl
jnp
dec
cmp
mov
fsubl
or
inc
test
movsl
scas
sti
mov
and
or
in
bound
shlb
fs
int
fdivrs
ret
ljmp
mov
fdivr
jle
popa
sub
shlb
imul
jp
adc
andb
push
lods
sbb
jp
xchg
les
int3
sbb
in
clc
nop
stc
cltd
jge
out
mov
fidivrl
push
jge
or
mov
arpl
pop
push
push
fdivl
push
lret
or
mov
push
fcmovnb
pop
mov
rcl
adc
aaa
inc
adc
mov
push
xlat
cmp
sub
sbb
call
and
mov
ljmp
sub
or
fildl
in
add
sub
lods
add
js
dec
xlat
mov
call
imul
in
scas
movsb
lret
sub
lret
add
leave
and
gs
fsubr
out
mov
sbb
sahf
inc
lods
add
enter
cli
dec
mov
fists
dec
xchg
lods
push
out
or
jne
sbb
fdiv
lret
pop
inc
addl
xchg
hlt
in
or
imul
mov
jnp
mov
pop
xchg
ljmp
sub
jmp
mov
lret
dec
movsb
sti
add
fcom
cmp
sbb
ret
jo
out
lret
add
and
test
pusha
inc
mov
mov
sub
mov
out
add
cmc
ret
or
sub
adc
lods
mov
add
mov
clc
test
mulb
xchg
aas
sbb
mov
mov
jle
lret
push
mov
or
scas
dec
lret
out
movsl
lods
or
iret
fucomi
mov
ljmp
jl
jecxz
test
mov
sub
dec
or
lret
in
add
into
xchg
hlt
and
add
or
rcrl
jb
cli
movsl
scas
push
ja
cmpsb
test
mov
ficoms
test
bound
inc
inc
outsl
arpl
nop
cltd
rol
or
xor
cmp
mov
pop
mov
xchg
xor
lret
add
sub
xor
push
fs
xor
xor
stos
bound
test
rcll
adc
aas
add
ficomps
xor
stos
test
cld
or
mov
xchg
imul
dec
jns
test
jle
push
xchg
xor
jnp
add
int3
adc
or
fildll
pushf
adc
and
mov
xchg
ljmp
out
in
lret
xchg
pop
jl
xchg
outsl
enter
aad
push
mov
lcall
faddl
jnp
call
lds
lds
mov
push
in
or
mov
les
mov
movsb
xchg
leave
pop
scas
jecxz
roll
sbb
xchg
push
mov
cwtl
movsb
pop
and
in
push
sahf
inc
mov
xor
mov
pop
sbb
popa
adc
sub
in
int3
inc
sbb
scas
clc
test
mov
inc
outsl
data16
xlat
sahf
imul
in
push
xchg
call
jbe
jge
dec
loope
and
fiadds
push
cmp
rcl
rcrb
rclb
and
adc
into
jae
jle
add
add
or
out
fs
mov
xchg
repz
mov
inc
mov
jge
jle
lcall
jbe
push
pop
add
mov
jnp
mov
or
sub
daa
aam
mov
jne
xchg
add
movsb
movsl
and
push
adc
in
mov
insb
fs
sub
mov
mov
clc
mov
mov
jo
xchg
test
mov
mov
call
or
clc
add
jnp
aas
and
lds
xchg
loope
or
or
fsubrl
cmpsl
push
jne
adc
leave
mov
in
hlt
push
lods
movsl
pop
test
and
inc
enter
imul
sti
pop
insl
fnstenv
inc
adc
jecxz
stc
mov
addl
mov
out
add
mov
mov
call
add
pop
out
leave
flds
popa
sub
push
ljmp
lods
int
daa
xchg
fnsave
jne
in
xor
jmp
fldt
imul
dec
enter
loop
xchg
imul
sub
or
pusha
pop
lods
or
xchg
scas
mov
out
fisttpl
test
std
rcl
pop
or
lods
mov
stos
adc
aas
ss
ret
adc
sarb
notl
adcb
femms
fs
xchg
cmp
dec
pop
or
cmc
dec
sub
movsl
cmp
ljmp
jle
ret
push
pop
xor
or
cmpsb
add
mov
stc
mov
cmp
fcoml
pop
enter
addb
cmc
pop
lret
xlat
inc
push
dec
xor
jle
xchg
imul
inc
xor
sub
pushf
repz
and
movsl
outsb
push
dec
or
sahf
imul
mov
mov
outsb
in
imul
fs
xchg
xor
pop
aas
int
sub
in
fucomi
add
dec
orb
lock
into
or
ficoms
mov
fwait
xchg
adc
test
mov
xchg
cld
push
ret
addl
adc
pop
test
cmp
or
inc
mov
inc
leave
inc
lret
or
repnz
dec
sub
jl
in
das
shl
addr16
into
repz
adc
loope
ret
inc
sub
push
jmp
orb
pop
bound
subb
mov
jns
cwtl
sbb
push
insb
sbb
faddl
lods
xor
stc
pop
int3
xor
cmp
dec
push
sub
jnp
in
sti
arpl
mov
xchg
jl
mov
mov
mov
lret
xadd
pop
jmp
jl,pn
mov
or
xor
fs
push
in
inc
stos
test
insb
cs
or
imulb
mov
add
es
dec
shll
movsb
lret
pop
jnp
jnp
mov
dec
insl
cmp
adc
shrl
fmulp
ret
and
inc
std
push
loopne
push
add
scas
mov
dec
sahf
leave
movsl
inc
or
adc
dec
out
mov
dec
push
cld
pop
sbb
sub
and
fwait
sub
xlat
and
adc
pop
dec
and
int3
stos
icebp
nop
fcompl
test
sub
sbb
pop
sub
adc
pop
mov
sbb
cmpsl
pusha
ucomiss
scas
sub
in
ficompl
fwait
sub
mov
fisubrs
mov
or
call
fisttpl
aam
xor
sub
ja
jl
inc
dec
enter
add
movntps
popf
dec
clc
mov
enter
inc
fistl
or
outsb
xchg
movsb
mov
xchg
mov
jecxz
test
ss
insl
jp
stc
fcompl
or
imul
xchg
inc
mov
movl
xlat
or
popa
enter
pop
stos
or
or
leave
cmc
lret
test
adc
mov
cs
ljmp
nop
lock
jl
sbb
jle
icebp
fdivp
mov
scas
imul
outsl
out
iret
push
repz
ja
std
outsl
nop
hlt
dec
es
addr16
mov
push
out
ljmp
cmp
pop
inc
insl
sbb
mov
lea
inc
incb
adc
cmc
or
mov
scas
test
testl
pop
fisttpl
dec
mov
icebp
outsl
jecxz
mov
mov
jle
lret
lcall
sub
sbb
push
jecxz
inc
movsb
xor
cmpsl
dec
dec
icebp
dec
adc
sbb
add
xorl
roll
mov
xlat
ret
lret
mov
xor
xor
ret
cmpsl
aaa
mov
js
adc
gs
rcl
mov
aas
fstpt
jno
mov
xchg
shld
adc
or
rcr
xchg
sahf
imul
fdivr
sbb
push
int
sbb
inc
jns
jl
mov
or
sbb
mov
and
mov
or
fbstp
fisttpll
jle
inc
mov
int
mov
mov
scas
mov
iret
stos
adc
out
inc
pop
mov
mov
sti
jp
sbb
xchg
lods
lock
nop
in
out
adc
sub
xor
push
adc
adc
mov
and
cmpsl
add
test
std
cltd
jo
insl
sub
jb
and
nop
mov
xchg
cmp
fnsave
mov
xchg
push
dec
sti
jb
inc
int
sub
mov
shlb
xchg
fisttps
add
arpl
hlt
in
xchg
insb
cwtl
test
out
addr16
jmp
loopne
imul
stos
or
add
cmp
ret
cmp
icebp
jge
pop
or
mov
imul
jge
ds
mov
jg
lods
xchg
scas
dec
mov
lods
jae
icebp
pop
jne
std
enter
xchg
lock
adc
sub
shlb
mov
cmp
dec
icebp
jg
mov
xchg
shlb
aaa
sub
dec
cmpsb
sub
repz
push
mov
mov
xchg
jno
test
fcoml
lret
dec
mov
adc
dec
sub
stos
hlt
lock
mov
shrl
lret
cmp
rol
cmp
test
in
ljmp
fld
ror
pop
into
fwait
sub
mov
push
fsubr
ret
mov
test
adc
clc
jg
ret
stc
cmpsb
dec
mov
push
ret
and
sahf
gs
and
or
fmuls
test
aam
mov
pusha
add
outsl
push
movb
mov
call
mov
out
test
xor
mov
int3
xchg
pop
and
aaa
adc
rclb
fisttpl
out
fs
test
cmc
in
stos
sub
xchg
fidivl
incb
ds
cmp
ficomps
cmp
in
inc
inc
jle
out
repnz
in
sbb
test
dec
icebp
leave
add
cwtl
or
mov
aaa
imul
pop
pop
test
fldt
sbb
scas
ds
dec
dec
mov
pusha
xchg
jno
ror
mov
and
movsb
push
mov
sarl
pusha
sub
imul
dec
icebp
mov
adcb
jae
sub
jmp
pop
xchg
push
dec
sbb
pusha
jle
mov
mov
adc
mov
ja
sub
mov
cli
pusha
mov
xchg
mov
add
sbb
jle
out
aam
mov
xchg
inc
mov
sub
clc
push
in
adc
push
jge
decl
jae
sti
cli
dec
mov
adc
mov
adc
sub
or
push
pop
or
adc
xor
sub
pusha
adc
pop
fwait
das
or
jg
sbb
and
enter
cmp
lods
xchg
jno
test
ljmp
dec
add
std
xor
rcrb
lahf
iret
xchg
orb
push
outsb
inc
pop
pop
mov
push
and
pop
icebp
stos
mov
into
push
sbb
sti
clc
outsl
cmp
add
lret
int3
mov
mov
inc
cli
aas
mov
push
dec
insl
lret
test
push
and
fwait
pop
add
int3
repnz
mov
mov
orb
mov
inc
flds
dec
sub
out
icebp
cmpsb
inc
lods
sub
hlt
out
lods
test
mov
or
dec
sub
inc
push
sub
test
mov
sbb
and
aad
or
std
cs
or
push
or
pop
out
loopne
sub
sahf
xchg
loopne
sub
mov
cvtps2pd
xor
mov
ljmp
lret
mov
cmp
lock
gs
pop
inc
enter
scas
leave
mov
outsb
stos
arpl
sub
sbb
cld
mov
sub
gs
cltd
shrb
inc
testb
fldt
add
inc
mov
mov
imul
add
add
add
adc
jge
test
ljmp
stos
lea
jle
xor
jo
mov
add
dec
dec
push
stos
aam
lods
les
das
pushf
add
lcall
loopne
lock
icebp
dec
dec
jmp
adc
in
dec
dec
jo
shlb
lods
sbb
add
pop
jl
call
jmp
stos
test
dec
out
lret
rcrl
cmp
shll
push
sub
out
sub
mov
dec
xor
or
pushf
pop
in
sub
or
xor
out
rcrl
adc
dec
jmp
mov
mov
leave
lods
out
fs
movsb
insl
sub
shlb
or
or
outsb
adc
xchg
xchg
and
ficompl
pop
test
adc
sbb
cld
in
fwait
adc
xchg
or
push
or
aam
mov
mov
mov
dec
in
xchg
scas
aas
js
push
inc
mov
or
sbb
repnz
and
call
cld
rorl
push
loop
sbb
les
push
mov
fwait
or
aaa
adc
fidivl
pop
or
jecxz
imul
push
es
push
mov
add
mov
xchg
jbe
insl
push
push
cwtl
inc
jge
inc
inc
fwait
cmpsl
out
andb
shr
in
sub
inc
inc
sar
push
lods
mov
or
hlt
pushf
add
inc
jns
clc
lret
pop
das
mov
arpl
int3
xchg
or
movsb
add
xor
or
or
aaa
hlt
sbb
insl
push
ret
fucomip
xchg
pop
fldt
jp
sub
and
out
and
andl
repnz
sahf
sub
mov
and
inc
add
imul
sbb
or
aam
adc
mov
mov
cmp
fiaddl
mov
xchg
ja
mov
inc
inc
push
test
adc
ret
or
loope
popf
and
stos
pop
mov
adc
jmp
mov
sbb
rcll
movsl
xchg
jnp
sahf
dec
out
push
or
cmp
popf
outsl
call
xchg
movsl
data16
insb
scas
dec
aad
xor
in
sub
fcomps
test
ljmp
mov
jno
sti
pop
arpl
adc
mov
sub
adc
dec
aas
lock
jge
mov
dec
shll
orb
push
cmp
imul
cwtl
in
lahf
stos
cmp
mov
loope
adc
mov
popa
mov
cwtl
addr16
mov
inc
mov
mov
out
jle
mov
repz
sahf
dec
sub
arpl
and
addr16
arpl
dec
sbb
push
repnz
rorb
mov
leave
or
scas
xor
repz
das
pushf
mov
nop
shrb
shl
fcomps
test
mov
sub
mov
or
cld
dec
cli
dec
movl
mov
xchg
push
xchg
dec
shrb
add
jns
dec
mov
test
loope
arpl
lcall
and
push
push
mov
adc
fidivrl
jmp
sub
jecxz
xchg
jbe
data16
js
out
xchg
adc
sahf
in
scas
fs
cld
xchg
mov
pushf
jns
pop
push
sahf
mov
and
into
dec
sbb
lods
dec
pop
push
data16
es
popf
adc
repnz
inc
mov
gs
pop
in
iret
js
mov
roll
jb
mov
push
push
cmp
mov
call
int3
push
jl
mov
jne
lods
add
and
xlat
loopne
jle
sbb
or
jne
arpl
dec
imul
dec
sti
jl
cmpsb
out
cltd
mov
addl
or
scas
lret
ja
mov
outsl
xor
fcoml
or
xchg
xchg
mov
jae
xor
xchg
jmp
or
pop
dec
or
cmp
dec
mov
sti
jno
ljmp
leave
lea
imul
jne
sub
sbb
fwait
inc
enter
xchg
mov
int
inc
les
movsb
bound
and
and
cltd
leave
fucomi
mov
mov
rcll
push
shrl
lods
int
mov
xchg
mov
fists
sub
pop
gs
sub
rclb
mov
cwtl
adc
dec
mov
push
pushf
push
add
mov
mov
jmp
mov
aaa
lods
adc
out
data16
dec
imull
lods
push
in
mov
and
cmp
data16
sbb
and
sub
icebp
inc
popf
xlat
adc
imul
mov
rorb
icebp
xchg
add
or
adc
jnp
pusha
cmpsb
or
mov
push
jnp
std
pushf
jb
pop
jle
jo
aas
je
ljmp
push
lret
mov
inc
fiadds
jne
pop
test
lcall
fcompl
leave
jge
les
in
and
sbb
add
sbbl
jae
outsl
push
ret
stos
test
xlat
ljmp
mov
stos
or
cltd
push
div
out
pop
in
test
pop
loopne
dec
leave
inc
test
fadds
pop
es
jmp
lds
mov
dec
mov
loop
dec
adc
sbb
push
fcoml
das
insl
mov
dec
inc
aam
insl
mov
pop
and
sbb
fistpl
pushf
roll
enter
mov
cwtl
movsb
shll
rorl
inc
insl
stos
les
clc
push
add
les
mov
and
out
inc
fs
lret
leave
mov
adcb
sub
inc
sbb
and
push
or
adcb
or
push
xchg
xchg
inc
loop
or
pushf
jae
cwtl
sbb
decl
cmp
lods
ret
pushf
and
push
call
fisttpl
xchg
jae
test
jae
push
push
cwtl
outsl
mov
xchg
sub
sub
dec
inc
out
push
stos
les
clc
push
add
inc
outsb
mov
int
xchg
push
inc
fs
leave
push
cwtl
xorb
push
pop
inc
mov
mov
inc
lcall
sbb
push
cwtl
enter
mov
xchg
cmp
sub
movsl
int
pop
sub
or
jp
jmp
in
cmpsb
xor
mov
imul
cmpsb
adc
xor
movsl
clc
daa
xchg
mov
adc
cmp
mov
adc
adc
subl
fdivs
lahf
imul
les
inc
jg
xchg
mov
xchg
ljmp
into
xor
leave
sub
xchg
les
push
and
jb
push
rol
dec
out
jbe
sub
popf
pop
call
dec
cmp
popf
pop
les
addr16
dec
adc
sahf
test
insl
out
dec
sub
mov
mov
out
inc
cs
mov
lods
fcompl
jl
aas
cli
mov
into
sbb
setl
call
enter
sub
jmp
lret
or
dec
arpl
hlt
inc
jl
add
mov
adc
mov
mov
insb
cmpsl
adc
inc
xchg
lret
jnp
sub
negl
fimull
mov
jl
leave
pop
and
inc
das
mov
fst
or
mov
add
or
insb
aad
mov
cli
fsubrs
aam
test
jle
into
dec
orb
jae
mov
out
add
sbb
push
cld
push
inc
orl
test
daa
jle
jb
js
imul
out
in
jle
test
fisttpll
orb
or
sahf
dec
pop
stos
dec
lret
sbbl
pop
push
jge
xor
xchg
sahf
test
in
pushf
ret
xchg
call
outsb
mov
and
or
sub
mov
adcl
outsl
jno
hlt
mov
mov
lds
sti
or
std
dec
testl
and
push
pop
dec
shll
stos
jle
inc
std
xchg
sbb
dec
daa
or
mov
gs
jmp
in
clc
mov
mov
scas
or
aam
fdivl
or
jo
ret
push
xchg
mov
outsb
cli
outsb
lea
dec
rcl
ja
xchg
loop
adc
cld
and
scas
dec
into
jns
mov
pop
jbe
jmp
pushf
testl
jmp
mov
push
add
cmpsl
cld
loop
data16
or
or
les
push
out
imul
mov
int3
xchg
stc
mov
mov
fsubl
inc
jle
es
inc
mov
push
xchg
jle
and
dec
mov
cmp
shlb
cli
mov
cmp
jmp
jne
xchg
cmp
and
dec
adc
dec
dec
inc
push
mov
fwait
inc
push
add
fiaddl
ds
mov
mov
xchg
ss
cmp
in
ss
push
cmp
test
es
cmp
lret
inc
aaa
inc
push
push
dec
and
arpl
imul
out
dec
xor
mov
das
sahf
inc
ljmp
inc
bound
adc
cmp
loope
xchg
lods
int3
adc
adc
addb
mov
jmp
and
lods
inc
pop
xchg
stos
adc
scas
outsb
ds
cmp
out
mov
ss
cmpsb
push
cs
imul
add
clc
jb
cmp
sub
push
imul
push
xchg
sbb
cmp
bound
jne
insb
daa
int
insb
inc
shlb
xor
sti
mov
push
test
sahf
mov
sti
push
xchg
es
test
inc
cmpsl
call
fsubr
inc
cli
pop
adc
jno
sbbb
adc
xchg
jnp
test
adc
stos
mov
test
inc
scas
adc
hlt
or
int3
add
adc
xchg
inc
and
test
mov
lock
jnp
jle
sbb
adc
jbe
cmc
insb
rclb
out
sub
sub
pop
mov
negb
sub
add
cmp
lret
adc
dec
lea
lret
in
rolb
mov
adc
outsl
outsl
or
roll
sub
stc
ljmp
add
jne
insl
and
push
fisttpl
sbbb
xor
insb
sbb
cmp
imul
pushf
push
sbb
and
mov
mov
xchg
sub
or
xor
and
pop
imul
add
push
ljmp
jecxz
xor
and
sub
xor
mov
cltd
mov
repnz
xchg
sbb
scas
out
sbb
jp
sti
ficomps
scas
mov
daa
aad
and
movsl
mov
mov
icebp
test
leave
out
dec
and
lret
dec
cwtl
or
insl
adc
add
or
ljmp
and
loopne
scas
insb
and
clc
push
mov
stc
lock
repnz
lock
cmpsb
xor
fimuls
and
inc
jmp
push
and
aam
imul
sbb
js
ret
add
and
cs
inc
sahf
push
lret
in
cltd
sub
jg
pop
sbb
mov
inc
sbb
xor
rep
ds
adc
inc
adc
mov
add
mov
jecxz
adc
sub
ret
cld
inc
sub
sahf
or
rorl
lock
or
test
jne
sti
or
mov
jne
ljmp
or
in
or
test
mov
aad
ficompl
clc
mov
sub
rorb
ja
dec
mov
ljmp
pushf
imul
mov
sub
repz
or
movups
and
or
aam
cltd
enter
test
mov
mov
dec
fs
push
jl
jge
lods
dec
fistl
call
or
add
fisubrl
movsl
xor
sub
out
cmp
mov
js
push
mov
mov
or
pop
into
add
mov
faddl
in
rclb
in
cmp
push
or
inc
cmp
jne
data16
cmp
aam
mov
ret
je
and
gs
out
jae
les
les
sbb
movsl
inc
or
insb
loope
mov
push
sbb
fisubs
xchg
and
mov
scas
jb
dec
orb
mov
adc
jg
rcrl
call
js
push
or
and
dec
movb
cmp
mov
movsb
push
loopne
cmp
sub
sub
cmp
mov
dec
sbb
dec
lret
mov
lahf
mov
pop
out
in
clc
out
int3
push
mov
insl
orl
and
dec
sahf
ret
sbb
add
ret
in
filds
xchg
dec
loop
repnz
hlt
lods
insl
dec
mov
dec
aaa
pop
jae
sub
or
cli
out
adc
test
jmp
pop
sbb
sahf
int
lret
push
xchg
addr16
add
rcll
dec
in
in
xchg
adc
movsl
insb
aaa
sahf
bound
out
ds
mov
fbld
add
test
js
mov
lods
inc
push
push
jmp
aad
scas
leave
cmp
push
daa
js
adc
mov
xchg
lds
sub
adc
mov
scas
inc
or
repz
or
in
cli
and
and
and
push
adc
sahf
jecxz
pop
mov
sti
fdivs
pop
pop
enter
mov
ret
cmp
stos
or
inc
popa
pop
sub
cli
leave
adc
inc
daa
add
or
pop
xchg
dec
ret
enter
adc
and
pop
dec
nop
adc
adc
sti
jge
sarl
mov
imul
fbld
lret
popf
bound
sbbl
icebp
aas
xchg
fs
fldenv
or
cwtl
pop
les
xchg
xchg
xchg
push
fcmovb
lea
mov
mov
jns
adc
std
or
stos
adc
cld
and
mov
lods
mov
std
imul
dec
adc
add
mov
push
xchg
jle
pop
mov
mov
stc
jb
lds
js
mov
lods
mov
jle
mov
stc
mov
add
jb
or
dec
sub
mov
cmp
ret
cwtl
mov
dec
ret
sbb
lret
sbbb
mov
lds
nop
hlt
jg
out
lods
test
sub
or
nop
pushf
shlb
rorb
jg
and
dec
and
jl
cmpsb
or
pop
mov
jmp
or
pop
inc
jle
cmpsl
adc
xor
mov
jp
push
pop
add
inc
jp
or
inc
inc
or
fadds
int
int
dec
int
fdivs
lret
pop
or
and
mov
and
arpl
jnp
scas
sub
leave
stc
sub
xchg
stos
and
push
and
divl
xor
mov
xorb
add
or
loop
call
fwait
sarb
in
imul
xor
and
and
into
in
jbe
lret
stos
in
imul
xor
mov
shrl
je
lea
outsb
dec
rolb
loop
je
sub
jecxz
pop
xor
sarb
in
repnz
out
inc
scas
jno
or
insb
out
int3
jbe
adc
fs
add
cmp
and
and
sbb
aam
in
add
fbld
pop
or
in
scas
stos
cmpsb
out
pop
negb
and
fcomps
and
or
dec
enter
lret
scas
sub
inc
mov
sahf
mov
lods
fidivrs
jge
fdivrs
jno
xchg
das
mov
xorl
cld
cwtl
mov
scas
inc
add
add
int3
rol
cmp
sbb
stos
sub
jmp
xor
out
or
cmpsl
cmp
push
and
dec
inc
adc
sub
lahf
je
loopne
mov
fsubrl
in
fadd
adc
push
cld
sub
inc
jae
test
inc
mov
dec
imul
insl
jbe
data16
insb
xchg
mov
lretw
pop
lock
out
pushf
or
call
int3
adc
iret
mov
lret
lret
orl
inc
bound
std
push
xchg
sbb
adc
ljmp
aam
inc
mov
inc
mov
test
push
or
pop
pop
mov
out
les
adc
inc
add
adc
stos
hlt
add
xor
pop
xor
cmp
sub
jmp
jp
sub
mov
and
repz
push
jp
cmpb
mov
sbb
cmpsb
or
loope
insb
and
pop
mov
in
mov
sbbl
dec
cli
push
imul
jecxz
push
pop
cltd
iret
mov
or
sahf
outsb
arpl
scas
les
daa
mov
stos
mov
or
add
mov
popa
nop
jp
and
jnp
test
add
sub
aas
xlat
mov
scas
pop
ficoms
test
dec
rolb
into
test
sub
cs
mov
dec
imul
lret
push
cmp
cmpsb
mov
mov
jnp
pusha
adc
int
and
xchg
inc
or
xchg
xchg
adc
lret
mov
adc
sahf
xchg
inc
mov
push
add
sahf
cltd
sbb
or
dec
inc
jnp
stos
add
int3
fwait
aad
cmp
jecxz
or
gs
push
out
jg
push
ljmp
pop
mov
or
popa
movsb
popf
xchg
and
sub
mov
insb
add
push
fidivl
scas
movsl
pop
ret
cwtl
mov
jbe
push
push
sub
push
xchg
cld
into
xchg
test
xchg
repz
xor
ja
jo
rcrb
loope
movsl
push
setnp
cli
gs
subb
push
in
mov
jbe
orb
dec
ja
in
in
aam
push
ja
movsb
or
call
or
jns
pop
inc
mov
bound
pop
lret
ljmp
adc
lock
and
add
mov
out
adc
jl
test
jmp
push
mov
popa
jne
jmp
adc
adcl
scas
mov
test
sub
inc
std
mov
pop
push
scas
sbb
or
scas
add
test
mov
or
enter
cli
stos
or
jg
fisttpll
pop
pop
test
mov
movsl
jge
lods
add
adc
xorl
in
and
push
dec
popf
mov
or
pushf
mov
imul
imul
int
mov
sub
sbb
sbb
ret
ret
mov
lods
add
adc
and
shrl
jmp
test
in
sbb
lea
std
sub
das
sub
xor
repz
adc
in
test
fsincos
add
push
mov
lea
cmpsb
dec
mov
pop
bound
push
sub
test
adc
sub
int
ret
mov
mov
mov
jle
or
push
dec
mov
jmp
mov
or
ds
dec
jmp
or
int
nop
adc
push
xchg
icebp
call
fisttps
lods
jl
mov
scas
adc
sti
shll
and
stos
ret
cmpsl
out
sbb
mov
or
cmpsl
jle
push
inc
outsb
or
push
imul
add
sti
in
movsl
push
push
mov
push
xor
mov
in
mov
dec
cs
call
lods
mov
jle
cld
mov
imul
cmp
lret
sti
inc
mov
pop
cmp
xor
popf
mov
iret
imul
add
add
jne
lcall
mov
dec
jle
fcmovnu
or
loop
arpl
dec
hlt
jmp
jge
fmull
add
or
imull
test
sbb
inc
sbb
aad
iret
ret
pushf
cmc
lahf
subl
test
jmp
sti
pop
bound
pop
js
ret
fsubrs
ljmp
dec
cmc
sbb
add
mov
jl
sub
gs
mov
or
sub
lds
dec
cwtl
sbb
roll
sbb
dec
add
movsb
stos
push
lea
jmp
push
mov
loope
and
and
stos
mov
mov
add
xor
xchg
lea
cmpl
cmpsl
das
pop
sub
loop
add
fcompl
fstpt
int
add
movsl
add
sbb
xchg
jae
js
xchg
dec
inc
rcrb
push
out
sahf
and
test
addr16
jo
mov
aad
or
jge
add
stos
jb
mov
in
test
adc
pop
dec
mov
sub
insb
outsb
clc
ret
inc
sbb
test
outsl
test
add
clc
insl
daa
sub
mov
mov
lea
cmpsb
fidivs
ljmp
adc
inc
push
insb
jnp
push
xchg
cmp
movsb
adc
je
scas
outsl
or
dec
loop
orb
adc
sti
xchg
nop
jl
mov
sahf
mov
loope
fadd
in
sahf
mov
mov
pop
mov
cmpsl
out
imul
sbb
lea
and
mov
aad
lcall
decl
sbbb
pop
or
pop
cli
pushf
movsl
cmp
movsl
test
add
push
sub
stos
xor
sbb
mov
push
jle
and
and
lock
mov
dec
sbb
cmpsl
arpl
out
inc
pop
push
dec
int
sahf
mov
mov
in
ret
mov
cltd
int3
loopne
sub
in
xchg
sub
mov
mov
sbbl
sub
jne
int3
arpl
shll
mov
pop
test
loope
inc
jmp
leave
addr16
pop
mov
lds
movsb
cmc
std
push
outsl
jae
or
push
ds
mov
xlat
stos
popf
out
or
ret
inc
enter
pop
adcb
add
jge
out
cmpl
lock
pusha
push
push
mov
cmpsl
jmp
stos
fcomps
lea
js
fsubrl
inc
adc
sub
jnp
push
pop
inc
rcrb
xchg
push
sbb
jo
in
lea
jle
repnz
in
fsubrl
mov
std
or
leave
movsl
subl
test
fsubr
sub
lcall
push
les
fs
inc
cltd
push
mov
sti
add
adc
subl
sahf
sti
ret
xchg
add
insl
lret
fists
sbb
out
ds
inc
mov
sti
inc
lock
mov
popa
cmpsb
mov
push
leave
mov
loopne
pop
pop
ror
rolb
inc
or
push
fisubs
mov
daa
js
mov
sbb
incb
in
rclb
mov
add
movsb
sti
mov
push
fildll
in
stos
pop
mov
add
in
ret
mov
lods
sbb
push
jno
std
lods
call
fwait
arpl
data16
pop
shr
add
jle
cmp
lods
movsl
int
test
scas
sub
outsb
jno
lea
xor
pand
in
add
xor
adc
test
loop
and
addr16
adc
mov
mov
pop
inc
and
push
in
inc
ret
mov
outsl
mov
pop
xchg
adc
mov
adc
mov
inc
in
jle
jmp
mov
fstps
iret
cs
add
inc
xorl
sub
sub
cmpsl
loop
iret
mov
sub
jl
mov
jecxz
popa
sbb
fwait
jecxz
lods
scas
aad
shll
xchg
cmpl
mov
cmp
test
pop
lret
mov
loope
mov
cld
add
xchg
mov
push
jnp
in
ror
call
mov
or
sub
and
cmp
jmp
dec
cmp
or
jge
psubb
inc
adc
mov
sub
out
out
push
lods
sbb
sub
xchg
bound
sbb
mov
add
sub
add
xor
push
fdiv
pop
inc
xor
mov
cltd
add
pushf
arpl
js
aad
add
bound
shll
ret
push
idivl
mov
push
out
and
xor
sub
imul
jbe
cwtl
mov
js
rorl
dec
out
test
mov
push
sbb
push
cli
push
jle
mov
enter
jle
and
jo
ljmp
dec
xchg
jg
inc
dec
mov
xchg
dec
fstpl
or
push
add
push
xor
mov
outsl
push
sub
sti
rclb
iret
add
push
pushf
les
add
jmp
std
dec
shlb
cld
orl
push
mov
xchg
inc
stos
sub
dec
mov
pop
jmp
or
cmp
mov
aam
addr16
repnz
daa
sub
mov
add
scas
test
aaa
or
push
subl
mov
pop
mov
mov
insb
scas
push
dec
clc
lret
pop
test
jmp
or
jnp
mov
mov
xchg
xor
clc
outsl
cmc
fucomip
xor
shrl
sub
ret
in
bnd
sub
cld
insl
xor
and
and
and
out
push
xchg
in
or
pop
mov
push
pop
test
scas
xchg
ds
jae
aad
pop
and
stos
sahf
sub
lock
mov
out
pop
call
add
fnstcw
cmc
call
xchg
pop
xlat
call
cli
imul
mov
cmp
pop
mov
xchg
out
push
fidivrl
add
and
aad
in
je
arpl
lods
xor
fnstsw
jl
lods
fidivl
xchg
pushf
out
xchg
add
pop
test
add
imul
scas
pop
mov
mov
fisubrl
and
cmp
or
sbb
in
popf
roll
sbb
pusha
das
mov
aad
xor
js
sahf
lret
pop
xchg
subl
sub
or
cwtl
dec
sbb
in
pop
insb
lret
mov
movsb
cs
adc
sbb
jle
pushf
and
out
jns
cld
push
cmc
pop
mov
ret
stos
icebp
dec
repnz
add
dec
cmp
inc
orb
push
test
ds
xor
and
cmp
cmpsl
add
out
mov
inc
adc
push
adc
push
dec
ljmp
push
ljmp
lret
jle
sub
inc
dec
sub
outsl
int
cwtl
dec
jbe
out
mov
pop
xor
push
pop
xchg
loopne
cmp
mov
or
and
cmpsb
adc
pop
bswap
mov
push
push
mov
popf
leave
in
mov
mov
rcrb
pop
ja
inc
outsb
xor
les
idiv
push
dec
ficoms
dec
inc
cld
inc
add
pop
orb
push
je
pinsrw
mov
jmp
push
enter
and
stc
cld
push
mov
jge
cli
inc
inc
into
sbb
sahf
push
out
movsb
jg
sti
imul
sub
jb
out
or
and
loopne
mov
push
mov
mov
scas
adc
adc
scas
sub
cmpsl
js,pn
or
dec
or
ds
jmp
int3
push
insl
fbld
push
fsubrl
xlat
mov
xor
in
andl
inc
cmc
in
mov
ljmp
jnp
pop
rorl
cmc
cmp
insb
mov
pushf
mov
push
dec
dec
sbb
add
stc
dec
cltd
pushf
ljmp
push
out
cmp
lea
sti
fidivl
sbb
movsl
adc
mov
insb
movsl
scas
lahf
into
mov
sti
jle
dec
and
fdivp
fadds
lods
addr16
sbb
fcomps
jne
push
xchg
nop
lods
cmp
sbb
pop
movb
sbb
cmpsl
mov
orb
or
sti
xchg
or
sti
mov
and
lret
sub
jnp
mov
jl
lock
int3
std
add
lcall
ljmp
shlb
shrb
fldt
inc
gs
push
mov
inc
sub
dec
jmp
jnp
or
fldt
mov
pop
mov
sbb
movsb
inc
scas
cs
mov
jmp
movsb
enter
xchg
in
sbb
fdivr
pop
cmp
subb
push
dec
cs
add
pop
aaa
mov
add
add
push
mov
adc
xchg
jmp
pop
jmp
sbb
mov
scas
adc
or
fisttps
scas
push
xchg
adc
cmp
dec
out
lret
repnz
adc
repz
sub
inc
out
inc
mov
or
popa
rorl
mov
or
popf
xor
pop
inc
lret
cmpsl
sub
sbb
in
sub
leave
add
int3
xchg
sbb
ljmp
pop
jle
and
fildl
mov
cmpsl
test
xchg
xchg
stc
push
dec
incl
movsl
sbb
and
movsb
mov
mov
rorl
rorb
sbb
inc
dec
movsb
movb
cltd
int
push
in
inc
sbb
add
jbe
faddl
sti
enter
lret
test
jmp
aam
test
fs
les
jnp
popa
inc
jl
sbb
hlt
arpl
lea
leave
ret
jae
pop
fs
stc
cmp
adc
test
mov
mov
sub
and
push
cmp
mov
in
or
mov
bound
out
bound
pop
inc
xchg
dec
in
add
or
mov
push
clc
xchg
pushf
xor
hlt
repnz
jb
dec
mov
cli
or
fwait
or
lock
lock
call
dec
adc
inc
sub
xor
xchg
mov
xchg
movsb
push
orl
cmpsl
and
mov
push
inc
cmp
out
push
jae
ljmp
sub
sbb
out
fiaddl
add
inc
out
push
ljmp
dec
adc
adc
xchg
and
jecxz
cmp
dec
or
add
incb
inc
pop
and
out
jmp
mov
lcall
mov
std
int3
std
mov
sbb
les
sub
fldt
jnp
cmpsb
inc
cs
imul
in
adc
and
adc
or
push
cld
sub
hlt
out
dec
and
out
in
push
or
xchg
ror
add
ljmp
stos
jmp
mov
lock
test
notl
jmp
or
xor
leave
dec
inc
jle
mov
dec
inc
push
cmp
insl
cmc
enter
mov
adc
ret
inc
cmc
adc
and
xor
loop
push
bound
inc
pop
jmp
test
pop
jecxz
cmp
and
lret
xor
ljmp
cltd
inc
or
data16
pushl
jg
or
or
mov
fmul
pop
push
repnz
stos
pop
sub
in
jle
inc
dec
out
insb
enter
sub
fcmovne
hlt
jns
repz
in
adcl
dec
push
inc
jl
loopne
imul
push
add
adc
adc
mov
mov
lods
aam
xchg
insl
gs
pop
sbb
data16
push
dec
jns
in
sbb
cld
data16
and
cmp
jl
or
addr16
pop
pop
enter
jge
pop
enter
scas
out
and
jmp
je
push
int3
sarb
lods
lods
adc
or
loope
icebp
inc
por
add
pop
mov
test
int
or
sbb
ret
and
aam
sub
nop
and
xor
out
iret
aaa
mov
out
clc
add
lret
pusha
flds
xor
mov
loop,pt
mov
repz
lods
mov
test
add
insb
popa
adc
adc
cmp
dec
adc
mov
jp
jmp
adc
jmp
ja
imul
or
adc
cld
jle
xchg
mov
pop
sahf
dec
enter
and
push
jl
imul
mov
test
in
and
mov
sub
loope
subl
fbstp
test
xor
dec
call
fcom
adc
pop
mov
in
ja
sub
scas
test
jae
leave
loop
jmp
nop
xchg
sti
and
rolb
mov
add
sub
pushf
cmp
sahf
sbb
iret
pop
mov
ljmp
scas
mull
sbb
jl
out
add
ret
in
jmp
in
or
insb
fucomip
dec
push
or
gs
sbb
add
add
mov
movsl
leave
or
scas
in
inc
sahf
call
pusha
mov
subb
sbb
popf
push
in
outsl
into
sub
sub
lret
cmpsb
ror
lret
sahf
imul
stos
xchg
pop
popf
pop
popa
dec
adc
shrl
lods
outsb
nop
scas
dec
add
popf
stos
jle
ds
into
fadds
jmp
dec
jp
cmc
cs
jne
mov
or
cmp
stos
jbe
jmp
xchg
cwtl
stc
mov
sti
test
cmp
int3
jns
cmp
and
xor
dec
js
inc
dec
fwait
adc
imul
or
jo
lcall
popa
xchg
lods
mov
scas
aaa
aaa
cmpsl
shrl
jb
pushf
sahf
sbb
jle
xchg
jmp
call
cld
push
adc
cmpsb
jge
mov
mov
lds
xor
ret
cwtl
scas
mov
or
mov
ficoml
fs
mov
mov
pcmpgtw
mov
aad
inc
mov
inc
and
add
lret
ss
pop
js
in
dec
xor
sahf
lret
mov
loop
rcl
and
frstor
test
les
movsl
outsl
daa
mov
out
lods
movsb
pop
sub
push
xchg
loopne
jnp
mov
repnz
or
mov
adc
xchg
iret
or
jne
aam
pop
fs
rcrb
adc
pusha
mov
push
shll
jnp
aas
jecxz
nop
popf
lods
rorl
or
sub
or
test
stos
xchg
cmp
aad
dec
mov
fsubr
fistl
mov
int3
shr
sbb
cmp
jns
addr16
or
and
mov
fsub
jne
call
nop
pop
stos
jmp
adc
inc
rorl
xor
xchg
mov
mov
mov
cmpsb
dec
dec
and
or
jle
les
cld
mov
xor
jl
addb
in
mov
lea
inc
dec
test
dec
xlat
ret
loop
fstl
lret
lret
call
xlat
ret
jo
pop
push
or
pop
adc
cmp
jp
icebp
jmp
mov
gs
imul
enter
ret
push
pop
xor
mov
sub
inc
inc
outsb
scas
add
ss
sub
data16
sbb
in
scas
rorl
addr16
adc
bound
pop
andl
lret
das
lea
cli
test
push
or
pop
push
lcall
inc
ljmp
lock
jecxz
pop
xor
cli
mov
call
js
push
orb
dec
dec
sub
lods
xlat
mov
adc
in
pop
popa
inc
clc
lea
mov
xlat
mov
test
mov
jo
push
shrl
lods
lret
mov
push
sbb
fmul
dec
xchg
adc
mov
and
clc
sbbl
aam
adcl
xchg
pop
mov
dec
inc
imul
adc
xor
je
lret
adc
daa
add
jle
nopl
es
testl
xchg
inc
cmpsl
adc
add
mov
add
jp
mov
dec
and
movsl
sbb
sti
lret
add
or
mov
sub
dec
sti
dec
dec
repz
icebp
popf
not
push
add
mov
dec
loope
jmpw
orl
aad
mov
push
cmp
xchg
add
cmpsb
dec
hlt
movb
lcall
xlat
jl
pop
pop
imul
and
scas
stos
xchg
cltd
popw
adc
jno
pop
inc
movsl
loop
popf
fwait
mov
jg
loop
mov
in
and
jp
sbb
mov
push
pushf
add
or
lret
fdivs
push
out
neg
imul
jle
jmp
bound
cmpsl
bound
into
iret
test
push
add
adc
cmp
mov
aam
pop
leave
inc
jns
adc
enter
hlt
outsl
or
lock
sub
jne
and
lcall
mov
sbb
and
dec
pop
push
mov
push
cld
pop
or
add
mov
or
lret
je
int
xor
xchg
in
mov
add
in
cwtl
xor
fidivrs
mov
jmp
cwtl
fwait
ret
dec
fistpll
repz
ljmp
aaa
push
stos
inc
int3
ss
rcll
adc
sub
call
inc
and
fimuls
ds
fstl
push
push
and
jle
jecxz
xor
mov
lods
xchg
fcompl
sub
mov
xchg
dec
push
jmp
push
xor
cmp
mov
bound
sub
stos
pop
mov
push
jns
psrad
call
out
pop
cmp
inc
mov
xor
sahf
pop
leave
fmulp
nop
and
mov
jo
sub
push
movsb
loop
or
data16
fsubs
pushl
les
mov
mov
gs
add
adc
mov
xchg
pop
pop
cld
ret
xchg
xchg
pushf
sbb
mov
mov
pushf
adc
lock
test
jo
jbe
inc
iret
pop
mov
xor
mov
inc
lds
or
push
mov
mov
pop
dec
addr16
fbstp
lret
add
dec
sbb
out
or
jmp
out
mov
add
lcall
adc
dec
adc
mov
in
stc
dec
adc
inc
insb
iret
rorl
or
mov
ds
loop
ljmp
lods
inc
cmp
dec
lock
inc
out
cmpb
jecxz
lret
xchg
scas
push
andb
adc
jnp
std
subb
inc
adc
scas
sub
enter
sub
lret
jg
es
or
out
imul
xor
push
arpl
fmull
xchg
adc
mov
mov
fcmove
ror
addr16
adc
push
mov
ljmp
lods
test
sbb
aas
mov
arpl
push
sub
in
orl
pusha
in
dec
aas
fcoml
inc
mov
ret
mov
cli
into
jbe
or
test
lcall
in
in
into
imul
popf
daa
or
cli
cmp
movl
or
pop
mov
push
mov
fistps
and
xchg
adc
orl
out
call
xchg
pop
or
pop
add
mov
in
mov
jnp
test
outsb
addr16
jle
sbb
stos
enter
add
dec
jle
bound
sbb
cmp
push
cli
sbb
pop
bound
lods
daa
jne
push
jne
mov
pop
rcr
cmpsl
jmp
mov
pop
ret
dec
fists
add
call
sub
and
sbb
adc
mov
andl
insb
mov
lret
movl
dec
jne
mov
into
mov
or
jl
outsb
sub
dec
pusha
cmp
jle
insb
pushf
pop
inc
sbb
dec
xchg
xchg
or
js
sub
pop
jae
test
adc
jl
or
sbb
clc
jnp
xchg
cwtl
dec
insb
stc
xchg
lods
sbb
push
xchg
xchg
dec
xchg
lcall
push
sti
adc
add
lea
shlb
out
ret
lds
ljmp
xor
out
stos
pop
cmpsl
mov
push
mov
xlat
push
xchg
ljmp
sahf
mov
and
int
out
xchg
pop
cmp
dec
imul
nop
sbb
sbb
cmp
stos
xor
push
jmp
stc
leave
and
mov
test
mov
dec
in
scas
ljmp
push
lods
pop
sahf
or
leave
inc
inc
inc
pop
add
add
mov
nop
ret
push
in
mov
arpl
movsl
imul
loopne
inc
mov
insl
in
fs
mov
mov
or
lcall
je
adc
cltd
pop
jmp
popf
mov
fdivrs
popa
cmp
inc
and
dec
cmp
dec
sub
bound
sahf
and
loopne
pop
mov
gs
sub
and
repnz
scas
or
ss
fcoml
ds
dec
xcrypt-ecb
cmpsl
into
inc
mov
jmp
mov
negb
jle
int
add
mov
scas
mov
in
mov
lods
jecxz
xchg
fcmove
int3
adc
mov
mov
jnp
test
dec
leave
mov
andb
dec
pop
mov
add
dec
popa
adc
in
lods
dec
subl
cmpsb
mov
repnz
add
xor
jle
mov
ficompl
push
repnz
orb
xchg
data16
jnp
add
jo
jmp
ja
popa
daa
push
sti
lret
xchg
lods
or
pop
sub
push
adc
orl
lods
fs
aad
or
imul
mov
or
xchg
cmp
fdivrs
lret
add
je
in
adc
jle
dec
push
mov
lret
out
jge
aas
aad
in
inc
out
out
xorl
and
jp
iret
lcall
sbb
imul
fisubrl
bound
dec
dec
cmp
inc
jge
inc
loope
inc
xchg
mov
nopl
sbb
push
jge
mov
push
push
ror
jge
jb
adc
fst
pushf
add
ljmp
leave
in
mov
mov
xlat
mov
nop
inc
sbbl
mov
outsl
add
mov
arpl
pop
imul
aam
sub
pop
sahf
and
lds
repnz
lret
sbb
scas
sub
jnp
xor
inc
sub
repnz
sub
mov
test
mov
add
sub
inc
push
or
in
orl
int3
cs
fwait
inc
lds
mov
push
pushf
adc
jle
out
rclb
pop
or
xchg
pop
rcll
insb
enter
or
inc
shrb
push
pop
push
inc
xor
dec
jns
add
xchg
iret
lock
or
cmp
sbb
ss
or
add
push
cmp
push
adc
push
pop
push
pop
cs
aas
std
test
jp
jmp
inc
add
cmpsl
scas
pop
xor
xchg
jne
insb
jmp
sub
clc
imul
inc
js
flds
ficompl
or
push
pop
inc
pop
out
jge
and
popf
rcll
mov
jecxz
es
push
int3
pop
dec
sub
jmp
insl
or
ret
push
push
jge
inc
lret
sub
jecxz
scas
sbb
popf
xchg
data16
sub
and
int
ss
clc
dec
adc
das
insb
repnz
popf
outsb
mov
cmpsb
adc
jb
adc
push
int3
or
mov
pop
mov
call
or
or
daa
or
sarb
fdivp
out
xor
inc
xchg
jp
in
dec
sahf
lret
dec
mov
mov
dec
push
sub
stos
mov
xchg
cmp
decl
jle
pop
lret
fmulp
mov
xor
mov
mov
scas
rorb
sbb
call
out
xchg
dec
push
movsl
mov
iret
inc
or
lret
dec
clc
mov
andb
das
nop
int3
ja
adc
cmp
xchg
or
or
stos
jle
mov
xor
into
ljmp
or
lret
and
jmp
jl
or
jl
push
orb
icebp
test
add
add
jmp
mov
flds
push
sbb
mov
shr
movsl
mov
aaa
dec
data16
scas
mov
push
out
and
inc
mov
lret
dec
jo
push
cmp
popa
jo
mov
clc
jne
fcoms
push
mov
clc
mov
or
nop
add
inc
aad
jl
fsubl
sbb
popa
ficomps
mov
mov
bnd
mov
jp
xchg
add
lahf
mov
clc
mov
rclb
xchg
cmp
inc
add
lcall
fbld
pushf
or
add
add
jp
mov
xor
pop
inc
pusha
fwait
ss
xchg
loopne
lods
repz
pop
fnsave
pop
jns
pop
jbe
jge
mov
lcall
inc
xchg
cmp
or
daa
add
jnp
inc
xchg
push
mov
xchg
repnz
mov
dec
inc
mov
psubb
mov
loopne
adc
jmp
les
daa
loopne
add
les
push
xor
mov
adc
xor
or
scas
and
mov
jbe
sub
enter
inc
jo
xchg
push
jmp
mov
int3
or
inc
adc
cwtl
and
push
xlat
repz
movsl
dec
stos
mov
lods
repnz
punpckldq
sbb
and
lret
adc
dec
daa
imul
add
sahf
jbe
sub
ljmp
mov
out
aad
lea
in
out
outsl
int3
inc
loopne
iret
dec
push
sbb
mov
nop
lret
leave
push
jl
and
mov
push
adc
or
inc
sub
insb
inc
sub
push
aam
mov
ljmp
imul
subb
call
and
add
mov
or
insl
xchg
dec
test
or
push
cmp
int3
or
mov
packssdw
xchg
inc
mov
imul
dec
sti
push
inc
sahf
sbb
sbb
bound
and
dec
sahf
test
or
lret
add
adc
lret
sahf
imul
add
mov
and
lret
jae
mov
pushl
cli
push
inc
js
xor
les
lods
clc
int3
dec
sbb
ljmp
push
inc
shl
test
adc
stos
ret
in
lret
dec
jnp
stos
out
or
mov
inc
adc
clc
sub
int3
fisttps
aas
gs
leave
lcallw
jg
rolb
jmp
and
pusha
jnp
lcall
or
inc
inc
jne
and
mov
mov
mov
mov
mov
jno
jbe
adc
push
sbb
mov
andb
mov
sahf
sub
lds
lods
inc
es
das
mov
popa
push
and
call
adc
daa
lret
cmpsl
call
mov
or
cs
push
mov
jo
xor
xchg
mov
cmpsb
fsubrs
pushf
xchg
mov
mov
sub
jne
aad
mov
cli
inc
cmp
lcall
xor
mov
in
andl
mov
insb
repz
cli
or
and
xchg
rorl
imul
loop
sbb
ljmp
imul
pop
test
test
mov
mov
arpl
addl
sbb
in
insb
rorl
sti
add
inc
nop
sub
or
stos
ret
inc
pushf
xor
xor
scas
les
or
mov
jge
scas
jno
int3
mov
mov
or
aas
pop
insb
ror
test
jecxz
dec
test
inc
adc
adc
lods
inc
insl
lret
repz
rcrl
leave
cmp
dec
mov
or
jp
add
daa
clc
das
mov
dec
dec
lock
dec
mov
jle
sub
xchg
mov
jns
popa
mov
cltd
leave
das
xor
pusha
push
fs
or
inc
sti
rcr
movsl
mov
leave
mov
push
mov
pop
xchg
popa
scas
jns
stos
lgs
mov
jne
rol
xchg
movsb
pop
dec
pop
hlt
push
pop
in
mov
pushf
mov
push
dec
int
fisttpl
push
movsl
bound
sub
aam
push
cmp
repz
scas
lret
dec
fimull
cwtl
iret
or
push
xchg
popf
add
clc
loopne
cli
or
or
sti
cmp
mov
sub
test
lods
add
jge
in
jle
cmpsl
les
inc
xlat
orl
push
insl
sbb
pop
mov
bound
ret
int
mov
or
dec
fsub
imull
int3
aad
imul
in
stos
inc
stc
push
or
xchg
sbb
loopne
add
or
sub
adc
rclb
sahf
add
xchg
cwtl
ljmp
mov
leave
mov
or
clc
mov
jbe
and
xchg
call
lret
cli
mov
push
inc
xor
push
jecxz
inc
insl
mull
and
shll
adc
cmpsb
adc
cmp
jbe
add
sarb
push
stos
pop
add
loope
stos
add
and
lods
and
add
scas
stos
int3
mov
or
or
inc
loop
xchg
xchg
cld
mov
mov
cs
push
jne
cli
jp
inc
jnp
lock
ljmp
push
cwtl
xor
vpcmpeqb
test
inc
cmp
lret
push
lret
scas
arpl
aas
and
push
or
loop
test
fldt
into
mov
or
cmp
cs
jnp
fcomp
mov
rcll
and
and
or
popf
loope
or
imul
scas
or
lret
out
pop
rorb
sahf
jg
and
jle
dec
stos
popf
das
lds
mov
dec
pop
inc
in
rol
out
leave
mov
jbe
fwait
aas
add
mov
sub
clc
or
lock
push
movsl
xor
jge
in
dec
stos
pop
stos
sbb
and
aas
xor
test
jmp
loopne
js
sub
neg
shrb
mov
sti
and
pushf
test
int
stos
push
movsl
push
xlat
mov
shl
pop
stos
stc
loope
cmp
sub
sub
jae
int
sub
mov
shr
sarb
jle
inc
mov
sub
jnp
mov
insl
sub
test
jecxz
dec
sub
leave
pop
or
insb
or
push
and
arpl
jnp
mov
inc
sub
bound
adc
inc
push
mov
in
cmpsb
push
in
test
xchg
lret
lods
jmp
xor
js
add
dec
mov
mov
stc
xchg
pusha
adc
jnp
lods
lods
inc
rcr
xchg
int3
fcomps
mov
mov
aam
call
jo
push
add
inc
addr16
add
xchg
add
push
add
inc
cld
sub
scas
mov
lret
shlb
inc
adcb
push
pop
sti
mov
jle
lret
mov
int3
add
sub
imul
in
shlb
or
jge
mov
pop
mov
mov
lods
rcr
mov
mov
push
shll
ljmp
sub
rorl
mov
push
push
mov
test
stos
fldl
sub
js
push
jle
inc
jp
adc
jle
sbb
jle
push
int3
fistps
das
xchg
xchg
stos
mov
shrb
jb
mov
out
std
adc
mov
xchg
out
jnp
mov
outsb
icebp
fidivrl
fsubrp
dec
daa
cmp
xchg
or
es
scas
pusha
and
pop
mov
loope
lret
sahf
mov
testl
sbb
int3
mov
out
hlt
lret
mov
or
enter
fcomps
in
movsb
dec
or
push
sub
or
imul
test
call
and
shrl
xchg
xchg
insl
or
cwtl
mov
sbb
popf
xor
movsl
sub
ret
sub
pop
mov
pop
stos
mov
lods
es
fsubr
ret
sub
mov
lods
mov
adcb
push
cmp
pop
lea
fsubrp
jne
jecxz
add
xchg
cmp
or
or
xor
add
jb
pop
pop
jns
fsubl
cmp
jg
subb
shlb
sub
insb
push
sbb
cld
fisttpl
rcll
jge
mov
popl
dec
pop
outsl
insl
xor
sub
fucomi
lahf
dec
sti
dec
addr16
mov
sbb
sbb
or
out
pop
clc
lcall
popf
lret
adc
adcb
jne
arpl
scas
outsb
dec
mov
sub
jno
cwtl
add
lock
nop
push
sahf
scas
incb
jns
xchg
jns
and
loope
mov
or
cmp
push
lea
inc
je
shrb
sti
insb
call
push
adc
shrl
movsb
jnp
addb
aam
inc
shll
pop
ror
cmpsb
in
sub
les
sub
xorb
xor
lret
icebp
push
mov
cmp
xor
insb
push
sahf
stos
cmp
jecxz
or
dec
test
scas
or
xchg
test
pop
mov
dec
dec
xchg
add
inc
mov
scas
andb
out
pop
push
push
or
roll
add
shlb
sub
insb
pop
lds
sub
lret
stos
cld
xor
adc
stos
out
xor
add
cmpsb
sub
add
add
sti
outsb
daa
or
ret
hlt
mov
add
outsl
out
sbb
dec
cmp
mov
mov
sub
dec
xchg
mov
rclb
push
sbb
add
mov
call
loop
add
sbb
xchg
iret
in
mov
lret
dec
sbb
push
jl
or
inc
xchg
mov
popa
adc
nop
jnp
pushf
sbb
insb
pushf
push
fwait
lcall
dec
insb
dec
or
push
cltd
call
addr16
mov
lock
cmpsb
mov
out
fldcw
pushf
inc
dec
or
aaa
stc
xchg
or
inc
pop
add
push
js
xor
jnp
push
mov
adc
subl
xchg
sub
call
mov
sbb
push
notb
push
in
mov
xchg
xor
add
jge
clc
data16
ret
adc
pop
and
in
stos
movsl
xor
adc
sbb
pushf
push
push
inc
mov
cmp
xchg
xchg
push
imul
shlb
xor
je
dec
movsl
jmp
in
and
aaa
jnp
hlt
fiaddl
aaa
loop
jmp
cltd
mov
fmulp
inc
shl
push
popa
cmp
lds
lea
and
fimuls
xor
sbb
out
push
push
out
pop
inc
jns
pop
movsb
or
sbb
sbb
shr
mov
bnd
jmp
mov
xchg
fmull
lods
adc
ret
xchg
or
mov
or
addb
jl
adc
mov
orl
pushf
cmp
mov
mov
jecxz
sahf
lret
fstl
jecxz
loopne
xchg
mov
sarl
out
pop
jne
adc
mov
mov
lods
sahf
addr16
sbb
xchg
push
pop
inc
fwait
shll
call
lcall
movb
sbb
out
lcall
adc
pushf
jp
jns
jbe
mov
or
lods
fisubrl
sub
add
or
inc
rcrl
jbe
pop
rorl
cmp
adc
nop
or
add
nop
or
lret
xor
insb
or
and
xor
roll
jmp
or
ds
jb
inc
shrl
lret
in
sub
out
subb
mov
push
dec
cmp
sbb
cmpsl
inc
sahf
dec
test
dec
push
test
mov
add
or
aad
lret
cmp
pop
adc
fmuls
pop
ret
ret
int
dec
xchg
lret
addr16
xchg
pop
out
ret
sub
sti
int3
or
fs
lret
mov
pop
les
cmp
and
cmp
fisttpl
or
jmp
orl
add
lcall
xor
push
in
ljmp
ss
mov
add
and
ja
stos
push
pminsw
mov
pop
sbb
adc
mov
cltd
stos
and
imull
out
aam
test
mov
xor
ja
iret
mov
scas
add
addr16
mov
ljmp
cmc
lcall
lret
out
add
inc
arpl
loopne
outsl
leave
xor
jae
adc
dec
mov
test
mov
or
cmpb
adc
insb
mov
sbb
pop
sti
out
stos
out
lret
out
dec
mov
faddl
and
push
add
jle
jle
scas
hlt
lds
jbe
sub
mov
push
xchg
inc
mov
xor
sbb
cmp
and
pop
sbb
xchg
pop
push
test
mov
pop
popf
sbb
jbe
rorl
sbb
mov
cmp
loop
jmp
ljmp
push
inc
push
addr16
pop
push
sub
mov
in
or
mov
dec
popf
lods
dec
lods
mov
add
call
nop
jle
pop
js
testb
jnp
pop
es
jmp
adc
or
psubusw
sti
notb
or
push
test
adc
or
mov
gs
xchg
pop
popa
and
and
stc
test
pop
les
stos
xorb
sub
inc
gs
mov
adc
in
push
ss
jge
adc
jnp
bound
aam
push
out
lods
scas
jbe
fimuls
js
inc
lret
mov
nop
cmp
cmp
arpl
adc
decb
int3
inc
push
in
fcmovb
popl
ljmp
inc
addb
add
sbb
and
clc
enter
add
lret
pop
add
aaa
daa
xchg
lret
push
fisubrs
sub
lock
test
fildl
fprem
inc
and
inc
jecxz
jp
inc
and
loop
js
ss
rcr
jp
and
mov
rol
push
int3
or
pop
mov
inc
les
xor
cli
sub
sbb
add
inc
jnp
pop
jae
inc
mov
xchg
push
inc
jb
mov
xchg
push
push
fdivr
lret
jae
mov
adc
stos
test
adc
popa
dec
pop
xor
xor
dec
inc
mov
int3
scas
sub
repnz
pop
lds
es
push
shrb
xchg
inc
lahf
btc
mov
mov
xor
ljmpw
arpl
imul
insb
arpl
sub
xor
xchg
int
pusha
mov
imul
fidivs
in
test
ret
dec
xor
xchg
xchg
sub
hlt
int3
dec
test
mov
aaa
mov
mov
cwtl
or
fsub
or
sti
jle
and
outsl
sahf
push
adc
add
add
sub
jmp
push
loope
jb
pusha
push
les
lcall
lret
movsl
mov
add
enter
push
lds
mov
or
pushf
dec
es
cmp
stos
sub
adc
mov
cmp
sti
pusha
push
dec
seta
inc
ret
lods
out
ljmp
mov
sbb
xor
jae
push
xchg
push
lock
ret
test
adc
dec
or
bswap
pushf
jnp
xlat
adc
sub
adc
dec
out
push
mov
fucomi
imul
mov
xchg
loop
unpcklps
fadd
cmpsl
shrl
inc
sub
popf
xchg
repnz
test
pop
aam
dec
dec
and
nop
rolb
jno
movsb
inc
daa
in
test
jge
fcoml
shrl
mov
xchg
mov
push
sbb
or
sub
fsubrs
push
or
or
push
dec
mov
loop
sti
lret
pusha
enter
add
cltd
sbb
jae
ret
and
js
xchg
repz
add
pop
shrb
adc
cwtl
pop
mov
dec
or
scas
add
js
xor
syscall
sub
sti
sub
fbld
jbe
rorl
xchg
jbe
jmp
les
bound
je
sbb
enter
fdiv
fildl
ds
lds
cmp
add
popf
add
sbb
lods
imul
mov
insb
lret
inc
cmp
and
push
xor
fdivrl
add
dec
negl
xlat
cld
xchg
dec
mov
enter
cmpsl
add
mov
sub
pop
sub
bound
mov
loope
fisubl
lahf
and
add
mov
sbb
mov
xor
xchg
movsl
ds
aam
sub
hlt
test
lret
xor
or
sub
in
jnp
mov
data16
in
int3
scas
inc
push
lods
imul
loope
scas
jle
mov
repz
jge
fcompl
add
stos
mov
sub
mov
test
insb
scas
out
sbb
dec
jle
sbb
aad
aaa
scas
dec
loop
dec
push
les
int3
push
and
fcomps
or
ds
mov
fisubl
clc
mov
loop
int3
sbb
cmpsl
cltd
pop
sti
jo
mov
dec
cmp
bound
fcoml
sbb
dec
jno
insl
adc
sbb
imul
test
or
sub
rorl
xor
or
lods
xchg
add
lock
adc
sbb
cwtl
dec
pusha
adc
jl
in
cltd
xchg
aaa
dec
ret
pop
or
mov
out
pop
loop
mov
lock
push
add
fimull
jbe
adc
hlt
xchg
popf
daa
cmpsb
repz
push
add
in
mov
xchg
addr16
jle
faddp
insb
push
iret
fucom
mov
cld
sahf
scas
repnz
and
push
add
mov
repz
xchg
cmp
aam
adc
adc
sbb
sbb
ret
setp
mov
decl
push
or
jbe
movb
popf
push
jb
mov
or
sub
or
push
or
dec
pop
push
or
sub
in
sbb
push
mov
das
popl
ret
mov
das
sbb
sahf
call
pusha
dec
mov
ljmp
pop
xor
imul
scas
fstpt
mov
ret
adc
mov
addr16
adcb
cld
cmp
push
fidivrs
in
dec
testl
jb
jmp
pop
sarb
sbb
pop
fildl
jo
inc
rclb
pushf
lret
sub
inc
or
ja
inc
adc
imul
scas
leave
les
test
jmp
add
into
cmp
fnstcw
scas
subb
mov
insb
stos
imul
pop
cmp
push
mov
les
fisubl
push
inc
push
lea
mov
ss
cld
jns
inc
lds
jmp
insb
or
mov
dec
sub
inc
and
xor
inc
jg
sti
mov
hlt
movhps
clc
xchg
mov
xchg
add
call
sti
inc
add
dec
mov
mov
cmp
jmp
xor
sub
mov
jne
jo
stos
stos
xor
pop
push
sub
pop
scas
cmp
pop
ljmp
sti
dec
or
sbb
dec
xchg
push
dec
sbb
add
and
sub
in
aam
cld
sub
pop
in
movsl
xor
insb
in
cmp
fcmovne
hlt
sub
sahf
xchg
dec
outsl
in
addr16
rcl
frstor
and
cmpsb
inc
sbb
mov
movl
aaa
ficomps
sub
loopne
add
test
mov
sub
cmp
inc
out
test
or
pop
imul
dec
jle
cmpsb
xchg
stos
out
dec
pop
pop
xor
shl
lock
pop
add
inc
into
pop
mov
out
stos
push
sti
imul
inc
cmc
add
or
shr
das
stos
movsl
aam
test
stos
test
mov
pop
loop
aaa
add
vmread
movsl
popa
mov
mov
mov
testl
aaa
push
jns
sub
les
pop
jle
rolb
jnp
and
xchg
inc
adc
fs
sti
movsb
lret
mov
lods
shlb
in
insl
sub
lods
scas
mov
inc
sub
jl
orb
pop
mov
gs
insl
je
jne
xor
lret
jne
adc
addr16
insb
adc
xchg
add
aas
in
test
inc
jl
and
or
add
cli
xor
adc
dec
lods
insb
das
and
cmp
scas
lahf
mov
add
mov
sarb
shl
push
leave
add
pop
push
mov
or
in
lods
mov
out
dec
daa
lahf
inc
adc
fstl
xor
mov
push
jno
daa
sub
scas
cmpsl
add
cmp
inc
cmp
fs
jl
add
mov
sub
test
or
fs
in
pusha
repnz
clc
pop
out
aas
mov
add
imul
sub
sub
aam
mov
or
adc
rorl
cmp
pusha
dec
in
inc
or
bound
lahf
repz
in
outsl
xchg
fs
hlt
dec
sbb
into
mov
xor
cwtl
xchg
ret
shlb
roll
imul
and
inc
cli
jmp
dec
dec
push
or
sbb
test
jne
push
out
out
scas
jge
xchg
push
cmp
and
int
fmull
adcl
push
testl
insb
mov
jle
push
pushf
int3
sub
push
cld
push
test
and
pop
and
adc
and
loop
add
hlt
pushf
jle
and
mov
icebp
cmp
or
cmp
add
sti
fistl
outsl
nop
ret
jmp
mov
fucomip
sub
sbb
dec
push
cmp
and
add
adc
add
fisubrs
out
aas
dec
or
out
in
lods
mov
sbb
sbb
sbbb
push
xchg
push
mov
pop
jle
rorl
sub
sbb
nop
mov
sarl
repz
ja
mov
pushf
and
xchg
nop
dec
inc
add
pop
dec
aad
add
nop
rorl
xor
movsb
inc
gs
mov
stos
and
dec
push
repz
mov
cmp
int
xor
mov
scas
add
jle
aad
mov
mov
in
inc
dec
stos
scas
cmpsl
cmovno
pop
pop
mov
dec
clc
sub
push
lods
sti
jle
int
in
icebp
dec
das
stos
pop
xor
sbb
mov
nop
fsub
andps
and
out
arpl
or
mov
adc
hlt
xor
lea
out
ror
cmc
jae
pushf
cmp
jns
int3
dec
pop
mov
arpl
jle
inc
leave
lret
or
in
jae
int3
adc
dec
pop
push
je
loope
stos
lret
lods
ljmp
rolb
in
dec
mov
mov
xchg
cmpsb
in
lret
mov
lcall
ret
loopne
iret
cltd
inc
daa
lock
push
cmp
inc
dec
inc
sub
out
test
jle
les
xchg
rclb
imul
pop
pop
mov
out
ret
inc
rorl
outsl
push
mov
mov
push
mov
mov
stos
xor
dec
dec
sbb
movsl
movb
nop
dec
dec
dec
clc
icebp
scas
pop
inc
cs
sub
testb
add
push
jns
mov
out
sbb
in
push
sahf
mov
mov
repnz
sub
push
mov
sub
inc
and
mov
test
stos
sahf
sub
cld
test
jo
push
sarb
mov
insb
orb
mov
insl
sarb
in
mov
mov
push
pop
and
mov
leave
push
subl
adc
sbb
lret
jno
int
stc
ljmp
add
inc
pop
addb
push
mov
mov
sub
js
add
or
jge
sahf
stos
and
dec
mov
mov
xchg
pop
pop
jmp
sub
mov
jmp
loope
mov
filds
inc
movsl
imul
hlt
mov
decb
push
mov
xor
mov
adc
and
stos
add
subl
lret
dec
or
addl
mov
roll
xlat
sub
push
cmp
dec
mov
adc
test
xlat
stos
test
mov
jecxz
xchg
sti
mov
xor
inc
test
dec
addr16
popf
jge
imul
sub
andb
addb
jnp
push
or
add
test
stc
subl
inc
xchg
in
cld
sub
cmp
cltd
sbb
adc
cmp
imul
sub
out
cltd
or
insb
mov
lcall
lret
out
pushf
cli
sub
lock
nop
pushf
ds
xchg
test
inc
pop
push
ljmp
icebp
scas
sub
cli
psubb
mov
ficoml
iret
dec
sbb
sbb
clc
add
fwait
roll
out
sbb
in
sub
pop
lcall
out
sti
addr16
push
push
jmp
adc
add
jle
xor
cwtl
out
add
hlt
sub
dec
aam
loope
pop
push
xor
mov
xor
add
sahf
jns
xchg
ss
adcl
adc
mov
push
cmpsl
aam
push
test
sub
repnz
repz
arpl
sub
enter
sbb
pop
fs
mov
or
dec
ret
mov
mov
mov
sub
repz
psubb
cmp
fstps
scas
pop
or
xchg
in
insb
movsl
add
popf
dec
add
loope
scas
ror
movsl
push
in
add
adc
popf
mov
xchg
dec
push
fadds
sahf
inc
sar
push
sub
sbb
loopne
fs
adc
movsl
les
jno
fwait
mov
inc
cmpsl
sti
bound
pop
js
sbb
call
push
ds
rolb
movsl
add
or
hlt
fidivl
gs
adc
cmc
je
cmpsl
dec
xor
mov
mov
xor
enter
daa
xchg
xor
push
rcl
stos
and
jns
adc
dec
outsb
fwait
out
dec
pushf
test
ds
adcb
test
or
mov
mov
mov
scas
or
scas
pop
mov
mov
mov
addb
out
pop
mov
out
or
cmpsl
lea
push
sahf
jmp
repnz
inc
mov
or
mov
cwtl
test
mov
es
clc
fiadds
or
nop
sub
or
lret
xchg
push
mov
fs
pop
or
fdivrs
sbb
dec
in
in
push
imul
inc
sahf
test
movsl
daa
xchg
js
leave
push
dec
xlat
jl
jle
add
int3
push
jmp
in
push
fildll
out
jge
mov
adc
int
jecxz
or
xchg
cmp
or
pop
test
or
sub
fs
in
and
add
inc
ror
ljmp
jg
push
dec
jno
adc
xchg
xor
out
movsl
dec
addr16
loopne
fisttps
xchg
imul
add
push
nop
jno
frstor
mov
xchg
rep
inc
mov
mov
nop
test
jp
cmp
push
jb
test
scas
popf
cmp
inc
rorb
adc
sub
cmc
lret
jnp
inc
in
pop
mov
popa
sbb
cmpsb
pop
xor
mov
inc
je
dec
jno
sbb
mov
add
je
fsubl
mov
scas
scas
add
inc
push
pop
sbb
mov
sahf
mov
mov
shrl
scas
mov
push
or
repz
mov
stos
popf
mov
loopne
add
jo
push
cmp
in
scas
jmp
lret
dec
jbe
ja
pop
stos
loope
mov
movsb
xor
jne
cmovge
sarl
test
add
push
movsb
lcall
xor
sahf
rcll
popa
mov
cli
loop
cmp
out
dec
or
xor
pop
stos
lds
imul
pop
mov
cmp
or
push
js
mov
and
sahf
lods
cmpsl
jle
hlt
push
sub
outsb
xchg
sub
in
and
cmpl
or
subl
pusha
loop
cmpsb
add
ja
add
popa
adc
jge
mov
jmp
sbbb
popa
popf
aaa
ljmp
jl
mov
into
mov
aam
daa
pop
or
ficoml
xchg
aam
cmpl
dec
sbb
les
push
adc
sbb
mov
insb
idiv
lret
sbb
les
test
jb
pop
sbb
or
fcompl
dec
jmp
mov
in
cld
xor
push
subl
push
mov
cli
xchg
pop
in
inc
add
xorl
cmpsb
pop
stos
pop
clc
inc
or
or
hlt
sub
call
inc
xorb
pop
sbb
mov
add
inc
inc
push
ret
lds
shll
xchg
ljmp
dec
mov
dec
mov
add
sub
or
and
mov
add
lcall
adc
push
int
je
dec
pop
or
and
out
inc
cltd
cmpsl
adc
inc
dec
loop
ret
mov
lret
xchg
insb
push
add
add
add
gs
mov
dec
stos
pop
mov
mov
push
fistl
sbb
xchg
add
imul
dec
pop
leave
int3
adc
sti
mov
jl
test
mov
sbb
adc
mov
mov
mov
jno
jl
mov
cmp
adc
mov
mov
fidivrl
insl
sahf
dec
int3
add
shrl
nop
and
mov
daa
hlt
test
push
outsb
out
imul
rol
mov
movsb
jmp
enter
inc
int3
adc
inc
add
jne
icebp
orb
xchg
insb
xor
lret
movsb
adc
mov
inc
sar
mov
addr16
adc
out
fcompl
mov
loop
inc
dec
inc
in
dec
lret
rorb
sbbl
jl
mov
inc
test
and
sbb
push
incb
test
xchg
mov
sbb
or
leave
or
cmpsb
adc
fildl
xchg
idivl
mov
jmp
lret
scas
or
mov
ror
adc
mov
ror
and
gs
add
xlat
fsubrs
movsl
sahf
bound
cwtl
sub
in
js
lea
cmp
xchg
imul
je
sub
pop
sbb
mov
adc
loop
dec
add
sub
fistpl
lret
mov
mov
mov
ljmp
fwait
mov
or
xchg
fs
enter
insl
fldcw
repnz
or
out
add
insb
mov
xor
xchg
sub
push
mov
or
stos
out
mov
pop
inc
shrb
sbb
jne
dec
sbb
js
cmpsl
cs
lcall
fdivrl
and
cmc
gs
movsl
pop
out
test
ds
mov
adc
sbbl
mov
push
mov
adc
sbb
lret
or
jno
push
fimuls
fisttps
in
data16
sbb
jl
aad
push
or
or
hlt
lds
idivb
pop
popa
and
fnstcw
cmp
sub
cwtl
mov
test
add
lcall
adc
cmpsb
loopne
xor
adc
in
iret
mov
and
add
test
test
pmulhw
aaa
in
or
pop
ret
std
lahf
dec
jmp
or
shrl
mov
xchg
movsl
lods
jle
push
popaw
jg
imul
jecxz
aas
mov
mov
call
test
or
pushf
movsb
sahf
and
ljmp
mov
lock
jae
call
sbb
in
push
jle
les
dec
mov
loopne
hlt
pop
adc
sbb
out
cmpsb
xchg
test
mov
mov
push
idivb
adc
sbb
xchg
push
fistpl
scas
fldl
or
mov
jecxz
pop
mov
mov
arpl
stos
pushf
dec
hlt
out
xchg
push
mov
mov
and
test
push
scas
push
pushf
cli
scas
aaa
jb
lret
xchg
mov
cmp
outsl
lret
jae
ljmp
out
sub
xor
stos
das
jno
movsl
stos
dec
das
stos
push
xchg
xor
movsb
mov
or
mov
xor
cwtl
int3
insb
addr16
jecxz
icebp
add
dec
stc
mov
and
outsl
inc
pop
mov
sbb
sub
insb
sbb
scas
add
add
fucompp
ret
les
dec
cmp
hlt
sarl
ss
aas
inc
test
push
push
jns
push
push
divl
jmp
fmull
pop
ret
push
lret
pusha
pop
mov
into
rep
loop
sti
push
pop
repnz
jle
stos
adc
add
pop
mov
inc
or
mov
jo
mov
lret
subl
js
jp
lcall
ljmp
or
in
fldl
es
mov
xchg
sahf
xchg
fidivrs
in
or
pop
stos
xchg
jae
sbb
sbb
test
mov
adc
mov
ss
mov
outsb
xor
jmp
inc
jle
pushf
mov
push
push
test
adc
pop
inc
add
jae
sub
lock
xchg
pop
int3
scas
out
sbb
stc
enter
sbb
add
leave
daa
and
fldenv
mov
movsb
xchg
jmp
int3
enter
shlb
mov
pushf
xchg
sub
mov
in
scas
sbb
mov
adc
mov
dec
jge
fisubl
adc
and
add
mov
pop
sahf
add
mov
mov
imul
mov
jp
inc
in
xor
dec
fidivrl
xor
enter
xchg
les
push
enter
rcl
push
rol
lds
jmp
pop
les
or
test
rolb
add
or
inc
cwtl
rol
je
dec
mov
pop
or
pop
mov
jno
and
subb
cltd
or
sbb
repz
jecxz
xchg
inc
push
add
xchg
or
ljmp
ljmp
data16
dec
xchg
or
xor
xchg
cmp
xor
pop
dec
mov
lods
pop
cmp
inc
mov
aaa
sub
sub
dec
loope
lret
in
daa
ret
adc
add
pop
call
in
jmp
dec
dec
or
dec
pop
pop
inc
lods
or
push
sbb
push
jo
xor
add
aaa
bsf
adc
add
push
les
and
mov
stos
cmp
and
sahf
mov
in
and
in
and
jg
jnp
cwtl
add
adc
mov
or
mov
lock
add
les
or
stos
or
add
pop
xlat
pop
insl
mov
rorl
das
dec
mov
into
andb
nop
icebp
mov
es
pop
std
lret
enter
xor
out
or
sbb
lahf
outsb
dec
insb
mov
sub
hlt
enter
cmp
inc
test
cmp
shrl
xchg
or
mov
test
pop
add
les
fists
adc
filds
cld
andb
cmpb
and
add
xor
subl
xlat
mov
rolb
or
lret
add
add
add
mov
test
gs
lcall
or
jbe
dec
jecxz
xchg
push
out
fistps
adc
jb
repz
xor
sbb
and
xchg
xor
jnp
xchg
scas
js
push
mov
and
xchg
and
xorl
adc
cmp
adc
jnp
sti
push
les
sbb
xchg
loop
icebp
or
bndstx
jne
adc
xor
fsubrs
jmp
daa
and
or
iret
add
jecxz
sub
lcall
jmp
jns
sub
adc
inc
jae
add
sub
ret
jp
push
fidivs
jecxz
popa
fsubs
inc
dec
push
xorb
fadds
pop
ficoms
dec
add
lahf
cmp
jp
loope
or
jbe
xchg
lahf
push
popa
ljmp
push
subb
ja
dec
in
movb
adc
inc
dec
js
in
push
mov
dec
and
mov
push
or
in
xchg
hlt
stos
mov
ss
sti
and
jp
jge
test
inc
cmp
mov
sub
or
mov
lcall
gs
and
stc
jl
add
pop
gs
addl
sub
xchg
adc
or
mov
cmp
add
add
ds
lcall
out
inc
push
aas
xor
push
lock
and
ret
adc
sbb
add
or
push
stos
xchg
mov
inc
mov
sub
jle
jle
call
inc
aad
and
push
pop
sub
adcb
out
iret
insl
xor
push
xor
cmpsl
adc
repz
adc
scas
dec
sub
cmpsl
xor
enter
add
adc
adc
inc
or
jbe
fidivrs
fmuls
imull
scas
or
push
mov
mov
popf
jns
mov
bswap
fnstenv
mov
mov
nop
jmp
adc
mov
sub
or
mov
div
mov
xlat
mov
mov
pop
jmp
push
cmpsl
negl
jo
daa
jo
push
iret
in
movsl
movsl
ds
popf
stos
jnp
roll
and
mov
jnp
mov
cwtl
add
aaa
insl
dec
and
ja
movsl
sbb
jge
mov
xlat
sub
adc
scas
or
mov
add
or
jb
ror
aas
lods
fimull
sbb
leave
inc
out
test
cmp
sbb
pop
movsb
mov
dec
fidivl
stos
or
sbb
in
mov
int3
push
jne
repnz
fisttpll
or
scas
cmpsl
and
or
xchg
popf
ficoml
cwtl
or
stos
jl
push
xchg
scas
jae
fs
clc
cmp
dec
ljmp
andb
jmp
dec
fxch
sub
test
sbb
loope
xor
hlt
mov
sbb
outsl
or
mov
pushf
xchg
cmp
cmc
mov
mov
les
push
pop
iret
mov
jnp
rolb
xor
ror
ret
adc
pushf
scas
xchg
xor
pushf
stc
out
aaa
pushf
dec
jecxz
xor
cli
adc
gs
addr16
aam
or
pop
les
js
in
mulb
in
adc
lcall
sahf
movsl
out
or
ficomps
mov
sti
cmp
fimull
mov
aam
jnp
leave
lcall
mov
adc
cmp
adc
insl
cmpsb
movsb
dec
cltd
mov
adc
and
stos
adc
fs
dec
ss
mov
add
pushl
add
cmpsl
mov
ljmp
test
mov
inc
lock
leave
call
in
add
bound
pop
cs
ljmp
icebp
mov
cmp
xchg
ret
cmpsl
push
dec
push
jbe
adc
fwait
test
mov
je
dec
loope
cmpsb
push
push
xor
mov
mov
ret
dec
mov
inc
mov
int3
jb
mov
cmc
adc
loop
pop
sbb
add
ret
dec
loope
mov
sbb
shlb
adc
xor
pop
or
shll
and
into
rcrl
add
xchg
mov
enter
clc
ljmp
jle
fcmovne
out
adc
testl
stc
inc
lcall
popl
cmpsl
add
aad
adc
cltd
jnp
push
pop
push
shr
inc
mov
xlat
jb
dec
in
aam
xor
out
in
decb
out
and
inc
xchg
jge
test
fmulp
mov
gs
cwtl
add
or
cwtl
dec
ja
xor
push
push
xor
mov
jmp
mov
dec
jnp
jecxz
xlat
pop
lds
ljmp
pop
adc
jl
cmp
daa
ja
or
pushf
pop
cltd
pop
test
repnz
push
cmpsb
shlb
iret
lea
and
jbe
inc
mov
scas
sahf
add
sbb
test
dec
sahf
test
arpl
in
xor
lds
scas
in
adc
lret
les
repnz
aaa
nop
mov
ret
xor
fs
daa
mov
subb
ret
fnstsw
sbb
lcall
scas
ja
stos
fstpt
and
ret
aad
dec
iret
mov
pop
jnp
sbb
push
adc
sbb
or
data16
fisubl
cmp
out
pop
jle
call
sbb
pop
ljmp
insl
and
mov
mov
or
or
mov
scas
les
bound
sbb
push
and
mov
mov
mov
xchg
mov
and
mov
xchg
jecxz
test
les
cmpsb
mov
aas
xchg
pop
cmp
xchg
test
sbb
sbb
mov
test
and
pop
stc
fiadds
mov
cld
sti
add
neg
jge
lea
int
mov
sbb
dec
jl
xchg
jecxz
cli
inc
dec
and
out
xchg
or
les
shlb
test
icebp
inc
out
sub
cmp
pop
jnp
push
dec
xchg
enter
xor
lahf
mov
mov
fldt
pushf
fstpl
sub
scas
dec
call
or
in
cmp
js
sbb
adc
shlb
and
sbb
lods
adcb
cwtl
or
cmp
call
sbbb
add
fdivr
xchg
xlat
dec
cmp
shlb
mov
adc
mov
lods
scas
aad
mov
les
aam
xchg
inc
add
pop
mov
jge
sbb
dec
stos
pop
dec
xchg
jnp
push
cmc
mov
lret
negl
imul
xor
cld
sub
call
xor
fwait
outsb
in
pushf
sbb
dec
dec
loope
repnz
mov
dec
sarb
stc
mov
dec
outsb
out
lahf
mov
das
nop
jo
mov
sbb
cmc
push
mov
adc
mov
or
dec
test
sub
jae
daa
test
movb
outsb
fcomi
adc
or
adc
out
jmp
jl
or
mov
enter
or
fwait
les
call
sbb
pushf
inc
jl
sbb
jno
icebp
ret
push
scas
add
repz
and
jl
sub
xchg
andl
and
mov
popa
call
push
ljmp
mov
aam
pop
into
xor
xor
push
jmp
addb
push
mov
rol
add
add
pop
loop
mov
test
xchg
sub
and
adc
or
dec
int3
jnp
mov
lret
hlt
xchg
xchg
or
sbb
and
inc
inc
outsl
test
lods
popa
cmpsl
aas
arpl
add
mov
xlat
subl
insb
sub
jp
sti
jp
cli
adc
in
nop
es
sarb
push
sub
jge
dec
arpl
jae
negl
rcr
orl
xorl
js
dec
in
cmp
pop
sub
icebp
test
ljmp
repnz
xor
mov
mov
in
mov
add
cmp
dec
dec
loopne
mov
or
lods
sub
mov
mov
cmpsb
mov
test
jl
cld
leave
sahf
inc
in
mov
mov
stos
sub
fimuls
mov
push
hlt
insl
sub
mov
js
mov
mov
outsl
andb
dec
mov
mov
daa
inc
movsl
add
movsl
mov
in
std
jl
dec
aam
hlt
cmc
dec
jle
addr16
enter
cld
clc
fwait
mov
pop
sarb
jge
andb
sbb
adc
ret
stc
dec
dec
das
addb
sti
adc
data16
sarb
leave
push
movsb
cmc
add
xor
ret
in
pop
int3
or
xlat
addr16
mov
jnp
sub
push
out
xchg
or
imul
fs
mov
movsl
scas
test
dec
sub
lock
lahf
push
dec
rcl
inc
jle
and
loop
scas
out
outsb
inc
xor
push
test
mov
and
js
jecxz
fbstp
xchg
or
lea
dec
cmp
or
push
icebp
jmp
push
sbb
int
bound
sbb
test
mov
clc
mov
push
cmpsl
adc
clc
dec
sahf
test
lock
dec
sti
mov
jae
andl
jnp
movsb
cmp
sbb
rorl
hlt
or
cmp
cmp
pushf
shlb
push
jmp
mov
add
pusha
push
sbb
sarb
push
dec
inc
scas
aas
mov
pop
cmpsb
ret
jl
shll
push
das
call
add
pop
push
sub
cli
xor
xor
dec
dec
jnp
in
add
movsb
mov
mov
pusha
test
gs
sbb
pop
in
xchg
aas
iret
xchg
or
mov
popa
mov
out
inc
push
dec
mov
stc
fwait
pop
mov
movsl
fnstcw
hlt
sub
push
mov
lock
jo
repz
popa
mov
sbb
mov
imul
xchg
sub
pop
mov
aaa
mov
enter
mov
dec
loop
data16
pop
xchg
xchg
call
and
sub
xchg
lret
xor
add
ret
push
sti
test
mov
rcrl
sub
insl
stos
in
jle
push
comiss
mul
inc
jge
data16
inc
cmc
cmp
jnp
sti
dec
in
push
or
pop
jmp
test
inc
adc
paddusb
jecxz
sar
imul
xchg
dec
or
outsl
add
push
mov
addr16
or
js
adc
jno
lds
outsl
daa
call
dec
pop
xchg
add
mov
adc
xor
test
cmove
fwait
sahf
addr16
jecxz
lret
inc
inc
or
dec
pop
test
leave
mov
aam
stos
jb
dec
mov
nop
sbb
data16
shlb
mov
xchg
fnstcw
and
addb
inc
adc
popf
data16
pop
shlb
dec
inc
jne
rcrl
dec
inc
push
dec
or
mov
xchg
inc
jle
test
mov
outsb
ss
jmp
stos
insl
arpl
push
sti
add
jns
xchg
fnsave
mov
sbb
mov
inc
pop
gs
jns
xor
cmp
rorb
mov
lcall
lcall
gs
adc
shrb
mov
add
add
mov
sahf
call
sub
cwtl
stos
stos
pop
push
aam
add
add
je
adc
ja
cs
iret
stos
sub
mov
lds
mov
ret
test
dec
loop
fxtract
or
fstl
xchg
dec
push
add
bound
loop
xchg
addr16
jb
into
push
or
btc
imul
lds
cmc
pop
add
in
push
push
pop
scas
push
sti
sti
inc
and
stc
ret
ja
fldt
jnp
xchg
fs
mov
xor
add
add
lret
add
repz
es
in
add
push
sub
inc
mov
in
sahf
pop
out
mov
imul
adc
pop
in
fnsave
js
ds
es
mov
cltd
dec
mov
sbb
mov
std
mov
mov
pop
imull
push
mov
and
mov
inc
fildl
dec
outsl
or
dec
add
sti
and
enter
repz
mov
inc
stos
lds
and
sbb
repnz
mov
lds
or
ret
fistl
sbb
jae
aad
or
sbb
pop
adc
pusha
inc
xchg
filds
add
and
xlat
push
imul
jmp
mov
mov
test
add
test
stos
or
cmpl
push
add
cmp
adc
jno
sti
dec
push
arpl
cmp
inc
aas
fs
andb
xor
daa
inc
jp
testl
cmpsb
ss
push
pop
sahf
les
sub
jle
int3
add
int
pop
test
add
mov
sub
roll
out
cmpsl
mov
push
in
lds
or
dec
inc
outsb
inc
mov
aas
hlt
nop
lods
sub
or
jne
adc
jo
mov
or
pushf
loopne
and
mov
xchg
sub
or
sbb
push
mov
loop
fildl
or
or
jecxz
clc
cld
fisttpl
rol
pop
add
add
stos
call
popf
pushf
cmpsb
scas
xor
inc
jecxz
cmc
ret
lods
sbb
xchg
cmp
int3
lcall
adc
jmp
cmc
cmp
mov
and
push
or
push
pop
adc
dec
add
lret
decb
or
stc
stos
scas
xor
into
lret
inc
hlt
fiaddl
mov
sub
jle
loope
lret
add
pop
daa
jne
js
sub
and
pop
ficoml
xorb
mov
insl
sti
rorl
inc
cmpsb
shlb
into
push
add
cmp
cmpl
mov
mov
dec
fadd
push
dec
or
enter
cwtl
inc
out
cmp
lcall
push
sub
in
inc
int3
out
jns
in
or
or
add
inc
jns
mov
popa
xor
out
sub
mov
pop
add
aaa
stos
pushf
sbb
sbb
lods
inc
dec
cwtl
adc
les
mov
pop
stos
fs
pop
ret
mov
scas
andb
lds
lahf
jg
xor
das
sub
test
test
adc
jmp
mov
decl
sbb
push
push
lcall
repnz
sub
push
out
push
cmp
lcall
cmp
add
and
push
push
inc
lcall
push
or
pop
or
pop
sbb
lods
lock
sub
push
lret
test
inc
xchg
nop
daa
sbb
xchg
jae
mov
adc
fsubs
and
mov
dec
jno
xchg
xchg
sahf
mov
iret
sbb
fnstenv
mov
aam
adc
and
stc
mov
pop
mov
lret
out
out
jle
int
cld
dec
icebp
data16
add
mov
and
and
adc
pushf
lahf
sbb
call
stos
sbb
int
and
sub
cmp
ljmp
fldt
sub
mov
add
mov
xchg
orb
xlat
cmpsl
sbb
add
clc
dec
or
jo
mov
jp
pop
nop
in
adc
inc
xlat
ret
sete
dec
jmp
xchg
mov
hlt
fldl
lcall
cmp
aam
adc
mov
movsl
add
xor
orb
sub
lret
push
jnp
cwtl
add
mov
dec
add
aad
lret
loop
push
loopne
negb
jb
dec
and
outsl
sbb
test
pop
hlt
adc
imul
add
pop
push
adc
sub
icebp
out
push
inc
pop
mov
mov
mov
xchg
call
cld
mov
sbbb
sub
lahf
adc
inc
sbbb
fists
add
mov
adcb
inc
sub
xor
inc
and
pop
pushf
ret
cwtl
shr
mov
lret
sbb
imul
or
pushf
pop
test
cmp
aad
loopne
add
sahf
dec
int
fwait
inc
mov
mov
movb
sbb
nop
lret
sbb
movsb
in
jmp
xchg
add
mov
sbb
clc
xchg
imul
sarl
dec
mov
rcrb
aaa
ret
jb
mov
add
sub
inc
mov
ret
ljmp
jmp
xor
ret
pop
leave
mov
adc
xor
xchg
mov
iret
adcl
sahf
add
mov
notb
xor
scas
leave
xchg
dec
xchg
sti
pop
scas
cli
bound
jge
icebp
inc
sbb
adc
adc
and
cld
jbe
add
jle
pop
or
cli
mov
jns
inc
xchg
mov
or
sub
sub
mov
add
or
les
dec
sahf
imulb
cmp
dec
stos
pop
aas
mov
xchg
mov
mov
fsubl
dec
lcall
cmovb
sub
add
sbb
mov
ret
or
or
push
cmpl
sub
dec
pushf
cmp
cmp
out
iret
sub
loope
in
enter
jmp
mov
lahf
sahf
ror
inc
sahf
add
mov
push
mov
mov
in
xor
sbb
arpl
lret
or
push
dec
adc
imul
jp
mov
xorl
hlt
mov
sub
lret
sbb
cmp
sti
pop
imul
jb
mov
push
jae
fmuls
and
call
outsl
dec
mov
inc
sub
mov
pushf
fsubl
out
es
sarb
icebp
inc
xchg
leave
mov
mov
pop
dec
and
test
cld
psrad
lret
mov
add
pop
int3
jecxz
dec
pslld
mov
mov
hlt
or
mov
add
sub
mov
pop
or
ret
sub
adc
enter
loope
and
or
jne
or
into
sbb
idivb
shrl
loop
fisubrl
data16
sti
xchg
movsl
xchg
mov
insl
jo
jg
gs
push
pop
subb
jno
pop
jns
ret
xlat
push
std
or
lods
in
insb
xchg
lcall
jmp
sub
sub
enter
adc
test
add
pop
lock
push
es
pop
sub
cwtl
call
mov
in
lret
ja
mov
or
inc
or
mov
ret
or
data16
bound
adc
pop
jb
inc
mov
or
fcompl
mov
in
or
sub
lret
cltd
popa
call
ss
cmp
and
or
cmp
push
dec
push
jns
inc
cmp
movsl
cs
repnz
stos
rorb
cmpsl
loop
push
enter
or
mov
test
adc
pushf
loopne
aam
mov
sets
ljmp
popl
mov
test
jg
cmpsl
lret
inc
sti
in
and
lds
inc
adc
add
adc
and
mov
mov
ss
cmpsl
aaa
test
add
subb
jge
xchg
lcall
inc
cmp
imul
call
sahf
add
inc
or
xchg
fsubr
jmp
clc
aaa
jl
mov
call
and
dec
push
aas
lods
lret
inc
pop
repnz
in
pusha
cld
jp
in
jns
sahf
lret
or
sti
mov
jle
pop
repnz
sub
mov
mov
lcall
in
int3
movsl
setle
fcomps
cmpsl
js
dec
lea
outsl
push
xchg
fisubs
jmp
in
and
adc
sbb
popa
sub
mov
adc
jp
add
sub
jo
mov
mov
int3
dec
movsb
test
leave
mov
dec
and
inc
cmp
cli
add
mov
mov
mov
jecxz
sbb
imul
cli
lret
add
out
enter
cmc
pushf
mov
dec
dec
adc
mov
mov
popa
scas
mov
inc
mov
inc
rcll
push
or
sbb
aad
jl
jnp
xchg
adc
add
addr16
out
rcl
fmul
xorl
test
lret
sub
jmp
add
shlb
lret
sti
insb
add
movb
dec
inc
mov
aam
les
or
inc
shrb
cmp
pop
cltd
mov
cmp
repnz
push
out
add
cmp
pop
cmc
enter
sbb
int
jle
lret
pop
movsl
mov
mov
xchg
push
lahf
xor
jne
push
adc
mov
xor
add
pop
push
dec
inc
mov
and
adc
pop
mov
loop
push
sub
sahf
leave
push
je
xor
insl
call
ds
addr16
sti
jecxz
dec
add
or
loope
cmp
sub
out
insl
lret
ljmp
scas
js
sub
xor
inc
sbb
int3
pop
fimull
xchg
cli
decl
divb
cmc
dec
push
or
arpl
aaa
sbbb
fistpl
scas
push
dec
mov
add
leave
cmp
sahf
shll
sub
push
fdivrl
loop
xchg
fadds
xchg
stos
test
daa
nop
es
and
cltd
pop
ja
lret
out
push
orl
shrl
fs
ljmp
add
scas
and
arpl
mov
mov
out
lcall
lahf
and
stos
stc
test
jnp
and
jbe
sti
enter
nop
fs
aas
push
and
dec
enter
push
mov
insl
mov
ret
jle
lret
mov
jg
adc
push
sbb
sub
sub
sbb
cmpsl
jmp
setge
add
sub
or
or
or
push
sbb
or
sbb
ljmp
add
cmp
push
jnp
or
adc
test
mov
or
xchg
mov
mov
jle
rcrb
fisubrl
mov
dec
fsubs
out
jne
rorl
sbb
push
sub
push
add
and
dec
ja
and
in
int3
rcr
in
insl
jmp
mov
add
or
jp
test
les
out
add
arpl
cmc
cmp
cwtl
test
test
adc
add
ret
push
xchg
mov
ror
fmuls
dec
push
mov
sbb
xor
dec
loopne
jne
adcl
gs
cld
mov
cmp
loope
imul
sti
or
and
int
sbb
setle
add
inc
mov
in
or
mov
dec
inc
jl
or
xor
addr16
jecxz
jmp
mov
xchg
movsl
push
lcall
aam
and
and
pop
and
jecxz
outsb
loop
test
push
pop
dec
stos
movsl
inc
dec
jle
xchg
cli
add
push
or
push
mov
ret
in
pop
outsl
repz
out
popa
sbb
out
add
sahf
subb
pushf
std
inc
aad
pop
or
lret
pop
into
std
decl
les
pop
mov
jle
enter
xlat
inc
aad
xchg
push
or
out
inc
xchg
lds
aad
mov
bound
mov
inc
cs
inc
stc
loope
pushf
popa
xlat
add
ret
inc
push
push
pop
pop
sub
sti
mov
mov
icebp
push
lahf
popf
add
mov
xchg
add
adc
jle
cmp
mov
xchg
pop
mov
add
cmpl
imul
js
push
enter
into
rcll
xchg
dec
nop
sub
mov
dec
push
stos
aam
fnsave
loopne
and
lcall
xor
stos
or
adc
dec
cmp
inc
testl
inc
pushf
shll
jno
xchg
or
mov
jo
inc
repnz
cmp
ret
add
jl
xchg
cltd
push
mov
lock
ljmp
mov
fsubrl
dec
into
clc
punpckhwd
sbb
sub
or
add
fnstsw
push
mov
inc
pop
in
mov
sbb
jae
aas
mov
sbb
outsb
sub
sbb
mov
daa
push
and
xchg
fstps
mov
adc
add
push
cmpsl
sub
xchg
cwtl
dec
frstor
sti
and
std
out
xor
xchg
pop
movsl
mov
cmpsl
lods
repz
inc
jae
mov
dec
mov
pop
ds
inc
mov
jmp
push
inc
mov
or
adc
xchg
roll
insl
fsubr
mov
pop
push
xor
dec
or
mov
popa
adc
jne
insl
xchg
mov
add
pop
cltd
inc
or
cs
jbe
and
cwtl
push
out
add
mov
daa
push
push
mov
add
daa
mov
and
icebp
filds
mov
inc
int3
cltd
repz
test
insb
dec
lahf
add
ret
adc
cmpsl
xchg
call
test
fsubl
mov
pop
inc
mov
scas
stos
mov
mov
in
push
outsl
movsb
mov
xchg
sti
lahf
repnz
lds
adc
mov
lcall
out
xchg
xchg
je
sub
mov
test
xchg
push
out
addr16
daa
imul
cs
xor
sub
mull
add
icebp
pop
add
mov
cltd
push
fstps
adc
sub
adc
add
addr16
out
or
sub
mov
pop
mov
idiv
inc
std
icebp
inc
sbb
adc
mov
sbb
lret
or
loop
cwtl
inc
sub
push
or
pop
or
inc
inc
shll
fdivs
rcl
jns
inc
jge
mov
jmp
xchg
mov
mov
scas
push
or
dec
jp
xor
mov
xor
pop
mov
popf
daa
sbb
sub
arpl
xlat
fcmove
scas
call
inc
jno
xchg
xor
pop
in
dec
mov
sub
mov
push
sub
add
notl
cmp
cmpsl
xchg
jmp
adc
adc
in
test
pop
rcrb
rcrl
lret
jmp
sbb
movsl
cli
mov
jecxz
and
stos
popf
xor
jmp
adc
add
pop
jmp
and
mov
mov
jle
repz
subb
push
in
in
std
mov
inc
and
rclb
roll
lret
pusha
sub
adc
outsb
mov
test
scas
sti
push
jecxz
mov
ret
sbb
xor
xchg
mov
cmp
ficoml
push
dec
sbb
fwait
ja
jl
adc
pop
pop
jl
jp
mov
sbb
inc
fisubl
stos
mov
push
xchg
or
push
dec
adc
dec
sbb
popa
stos
mov
loopne
cmc
cmp
push
sub
pop
sbb
repz
sub
rorl
adc
push
fldl
filds
mov
out
push
or
lret
mov
mov
gs
mov
add
data16
xor
xchg
mov
andb
mov
or
js
pop
add
stos
dec
clc
adc
xchg
fdivs
jno
add
push
mov
adc
jge
mov
wbinvd
mov
mov
inc
iret
shlb
push
xchg
dec
jnp
inc
rolb
or
mov
sbb
jecxz
loop
push
dec
pusha
sbb
inc
inc
push
push
inc
xchg
rcl
int
jbe
loopne
push
aas
mov
rorl
fsubrs
jne
mov
dec
push
jecxz
mov
add
sbb
aaa
mov
or
fisttpl
hlt
jo
imul
in
nop
or
mov
add
lcall
dec
add
jne
in
sahf
imul
fwait
jne
xor
jns
and
shlb
adc
jp
pop
mov
sub
daa
lods
xchg
les
sbb
imull
sub
xor
mov
movsl
lods
adc
push
sbb
mov
mov
daa
mov
mov
enter
mov
jae
jnp
subl
push
sbb
dec
push
js
ljmp
jecxz
push
mov
jg
in
imulb
xorb
cld
lods
pop
mov
or
and
push
repz
ljmp
inc
aas
lea
or
lret
and
stos
psrad
ret
stc
in
lret
mov
sbb
dec
lret
inc
adc
psraw
cwtl
push
imul
mov
or
add
jl
lds
lods
lahf
inc
cmpl
and
adc
xchg
mov
mov
adc
mov
pusha
aaa
loop
sub
or
movsb
or
sub
or
add
sbb
js
popf
cld
ret
or
sub
mov
stos
loope
sahf
xchg
scas
dec
icebp
std
cmp
add
mov
mov
aam
orb
sbb
stos
pop
scas
in
sti
jmp
xchg
sub
xchg
mov
add
dec
bound
imulb
mov
inc
add
push
movsb
loop
inc
mov
negl
mov
enter
leave
addr16
leave
or
stc
lea
adc
mov
or
loope
fwait
lret
mov
mov
xchg
daa
add
add
sub
push
adc
xchg
xlat
aam
in
adc
pop
inc
insl
out
lods
mov
imul
adc
add
add
lods
jl
push
stos
repz
popa
sbb
adc
nop
mov
mov
xchg
sub
inc
das
pop
dec
mov
mov
add
or
in
push
test
ret
lods
xchg
insl
sti
sbb
ficoml
cltd
pop
adc
mov
xor
scas
inc
pop
inc
mov
fstl
roll
mov
cmpsl
popa
sbb
repz
xchg
or
add
sub
sub
or
cmpsl
jecxz
inc
cmp
js
stos
lret
or
or
mov
pop
test
sbb
cli
out
rol
sahf
pop
out
sti
out
rorl
lret
cwtl
or
or
mov
mov
lcall
out
cli
mov
sub
scas
and
test
cmc
cmpb
outsl
sub
call
rorb
mov
xlat
jmp
clc
jmp
and
add
pushf
dec
loope
sub
and
mov
aaa
dec
mov
add
scas
ret
into
ret
loope
sbb
das
add
clc
scas
ds
sarb
sub
js
enter
cs
pop
test
mov
push
cmp
cmp
push
xor
jle
sti
fdivr
mov
or
std
repz
jnp
in
je
and
cmp
mov
repz
jno
mov
xor
jmp
or
adc
xor
mov
xor
mov
add
dec
cli
dec
test
sbb
test
sti
ror
mov
enter
xchg
sti
mov
mov
test
jmp
sti
dec
mov
sbbl
cwtl
or
shr
mov
inc
js
rcr
imul
js
into
in
aam
mov
cmc
or
or
ds
ret
or
data16
outsb
lds
sub
movsb
sub
ret
es
adc
stos
mov
sub
das
sti
sbb
pop
pushf
push
loop
lea
or
inc
jmp
ret
and
cmpsl
mov
es
inc
pushf
pop
jg
sbb
pop
sahf
imul
popa
mov
xchg
pushf
jae
xchg
stos
xchg
fsubrl
jge
xchg
jp
xor
in
inc
dec
aaa
leave
fists
inc
lcall
pop
and
cmp
adc
mov
daa
cltd
insb
inc
add
fdivr
mov
repz
xchg
repz
sub
mov
cltd
xor
push
push
ret
aaa
xchg
jbe
in
js
cmp
cmp
ss
add
pop
xchg
stos
pop
mov
mov
add
sub
mov
loope
dec
stos
daa
sub
cmovae
sarb
and
or
mov
mov
mov
cld
jp
dec
inc
pop
mov
popf
insb
pop
or
jmp
hlt
pop
sub
dec
jp
xchg
jnp
sbb
or
daa
insl
xorl
test
sub
push
mov
fisubrs
or
loopne
inc
mov
mov
stos
xchg
test
jns
fs
jp
adc
inc
xor
adc
adc
cltd
and
shrb
lret
out
cmp
sub
in
test
imul
enter
std
ret
movsb
in
xchg
inc
xchg
mov
sbb
jb
decl
mov
adc
or
xchg
sti
push
pop
mov
lret
cmp
or
and
xchg
mov
scas
ret
dec
xchg
aam
ret
jp
ja
dec
xchg
roll
or
pop
cmp
or
inc
push
sahf
cmp
adc
mov
add
insl
add
add
mov
loope
loope
cmp
es
daa
cld
jmp
xor
or
jmp
sbb
ljmp
push
add
rcl
adc
pushf
push
dec
mov
adc
scas
ss
sub
inc
cmp
mov
stos
movsb
das
pushf
filds
push
push
mov
jmp
mov
mov
inc
inc
ret
add
stos
or
mov
cmp
fmul
cs
aas
xor
in
lods
mov
mov
pop
jge
std
clc
dec
xchg
jle
cwtl
loopne
add
mov
or
loope
mull
inc
scas
or
movsl
push
sbb
in
xchg
jmp
pop
lea
fiaddl
push
or
cld
and
mov
push
jne,pt
dec
push
and
xor
into
aad
lods
jbe
sub
jg,pt
les
add
daa
pop
cmp
in
imul
inc
jle
pop
das
fwait
sbb
dec
stos
add
mov
lret
jae
xlat
sti
inc
xchg
adc
lret
cmpsb
orb
ljmpw
xor
jp
mov
add
sbb
push
mov
cmp
pop
sub
divl
sbb
add
inc
mov
in
pop
lock
pop
adc
out
inc
dec
insb
push
into
cld
sub
into
jb
mov
push
add
sbb
leave
insb
and
add
inc
inc
cwtl
fisttpll
and
loop
jle
inc
xchg
jno
shrl
js
addb
sti
sub
cmp
cltd
dec
sbb
rcrb
mov
pop
scas
xchg
stc
mov
dec
mov
lret
cmc
hlt
faddl
xchg
popf
add
icebp
jle
dec
ret
push
test
xchg
jecxz
imul
aam
cld
enter
lret
push
adc
jecxz
imul
lea
jmp
ret
pushf
lods
out
or
mov
gs
mov
cmp
add
sahf
stos
jo
push
mov
jmp
ds
pusha
in
push
mov
push
or
xchg
mov
xor
adc
sbb
push
mov
sub
cmpsb
inc
mov
decl
lock
popa
pusha
repz
inc
insb
jnp
dec
sbb
movsl
gs
adc
nop
xchg
ljmp
ss
jne
xchg
das
out
add
xor
out
cmp
es
push
cli
ds
shl
pop
and
fcom
jl
movsl
shl
xchg
fwait
sub
mov
outsl
lods
outsl
push
xchg
addr16
cmpl
lods
mov
or
rcr
cmc
dec
fisttpl
jo
push
xlat
outsb
fnstenv
fidivrl
icebp
add
iret
dec
mov
mov
movsb
pop
mov
add
shrb
repz
inc
ficoml
adc
xor
lods
cmpsl
pusha
gs
out
push
or
ret
mov
push
enter
lret
jo
scas
inc
sub
lock
inc
jge
adc
popa
xchg
jns
loope
jmp
popa
inc
lea
push
in
xchg
bound
loop
lret
or
mov
rolb
fwait
sub
mov
out
jge
mov
inc
test
loopne
call
jae
adc
push
mov
rorl
lcall
push
mov
mov
push
aad
rol
lods
mov
pop
scas
mov
cmp
pop
jnp
and
into
arpl
push
inc
or
dec
jecxz
jecxz
pushf
and
sub
test
push
shl
add
mov
pop
rol
jp
negl
dec
lahf
js
cmpl
ret
jns
jne
xorb
push
mov
xor
push
push
lret
mov
cld
pop
scas
push
dec
lea
je
dec
scas
jo
push
in
mov
sbbb
pushf
test
iret
rcll
int3
xchg
imul
or
mov
mov
jno
sahf
or
or
mov
in
sbb
or
adc
xchg
arpl
loop
pop
add
dec
mov
mov
and
push
push
add
adc
inc
mov
dec
sbb
cwtl
data16
loop
shrl
lret
scas
addr16
mov
add
imul
lret
dec
mov
in
jge
imul
aam
xor
push
bound
cltd
mov
lods
add
jle
dec
cmpsl
dec
movsl
sbb
ret
jge
or
push
sub
movsl
ficoml
popf
adc
jle
es
and
dec
popa
mov
or
dec
dec
mov
mov
xchg
push
push
sti
adc
dec
cmp
std
icebp
sahf
data16
es
xchg
sub
movsl
xor
and
in
lds
cmp
nop
or
shrl
push
and
fmuls
test
push
adc
shrl
sub
repz
cmp
imul
dec
sbb
dec
js
jno
jp
gs
jp
jne
dec
inc
lret
mov
movsb
xchg
leave
lods
jge
movsb
or
test
sub
ror
in
adc
call
les
sahf
dec
testb
inc
inc
xorb
dec
xor
sbb
sub
or
jl
sub
and
stos
mov
das
add
adc
inc
sti
enter
push
les
sub
and
pop
dec
sub
push
jmp
int3
ds
adc
dec
popa
mov
jmp
bound
xor
or
or
negl
dec
jnp
scas
add
ja
mov
pop
lds
inc
and
sbb
imul
mov
or
rorl
sbb
add
jnp
out
push
pop
sub
jbe
imul
add
in
jmp
or
out
inc
jmp
add
cmpsb
mov
sub
or
fwait
sahf
ss
pusha
cwtl
ds
imul
push
dec
sub
mov
pop
filds
les
mov
push
jnp
mov
push
xor
daa
out
sub
subl
cmpsb
xchg
sub
inc
mov
jp
push
or
in
mov
adc
ljmp
sbb
inc
stos
es
or
leave
je
jmp
jae
inc
mov
inc
cmc
mov
adcw
sbb
sbb
test
stos
add
aaa
inc
push
test
xor
push
pop
adcl
imull
push
jge
mov
push
test
mulb
fimull
mov
and
out
dec
jmp
out
jmp
scas
imul
xor
push
or
inc
cld
push
shlb
loope
jecxz
xchg
daa
and
add
xchg
mov
int3
mov
sub
pop
xchg
or
dec
adc
repz
or
out
in
xchg
push
sub
mov
andl
xor
and
setbe
in
lods
cmpsb
adc
test
mov
ljmp
int3
pop
call
or
dec
xchg
xor
cmp
nop
int3
and
test
arpl
dec
lahf
adc
mov
int3
push
add
jno
in
mov
js
pop
cmp
mov
iret
and
call
cmove
and
sahf
mov
xchg
in
add
sub
das
add
push
add
imul
enter
cmp
adc
or
push
les
mov
mov
hlt
stos
mov
pop
in
repz
hlt
or
jge
and
push
or
imul
xlat
or
loope
out
mov
add
fbld
or
adc
imul
js
pop
lret
mov
pusha
hlt
dec
push
test
movsl
shl
mov
push
mov
call
or
mov
aaa
nop
mov
sti
mov
stc
insb
gs
adc
sub
xchg
js
stc
imul
daa
cmp
loopne
xlat
js
add
pop
js
inc
stos
mov
sti
dec
inc
stc
dec
aad
mov
jno
aad
js
mov
fdivl
xchg
in
dec
fwait
xorb
in
repz
addr16
xor
and
adc
stos
mov
fwait
clc
sbb
fstp
jno
js
sub
jmp
lods
jg
cmpl
or
jns
stc
cli
or
into
xchg
fsubl
xchg
enter
add
in
stos
xor
repnz
leave
cmp
dec
push
movsb
mov
or
inc
xchg
nop
fisubrl
pop
adc
ljmp
orb
push
leave
lret
fistpl
loope
xchg
add
sub
inc
sbb
subb
sub
push
pop
sub
cmp
popf
mov
inc
sub
xchg
lret
xchg
jne
lret
fs
lcall
mov
loopne
mov
les
les
sbb
push
mov
in
push
mov
fsub
fmuls
test
fiaddl
rol
push
lcall
fs
dec
ljmp
or
mov
cmp
pop
jb
add
iret
sub
push
sub
ret
ljmp
sahf
cli
subb
lds
jle
loope
fimuls
loop
mov
push
cs
stos
pop
adc
int3
ret
cld
jno
mov
fsts
out
insl
pop
push
cmc
dec
sub
outsb
add
repnz
jmp
xor
push
dec
dec
mov
pop
mov
xchg
cld
push
push
fsts
ljmp
dec
push
sbb
xchg
cli
movsb
push
repz
fsubr
repz
xor
icebp
mov
fisttpl
nop
add
dec
xor
sub
aaa
jle
popf
mov
or
push
stc
mov
push
xlat
aam
sbb
xor
add
popa
adc
cmpsl
push
enter
adc
mov
test
push
andb
mov
sub
mov
jo
push
fcompl
dec
sbb
movsl
jne
stos
sahf
das
sbb
adc
push
mov
cltd
clc
push
popf
fmull
scas
ljmp
fs
mov
sbb
dec
pop
pop
mov
std
stos
pushf
push
adc
fdivr
mov
mov
xor
test
leave
push
push
popf
lcall
inc
xchg
cmp
sti
cmp
cmc
push
mov
in
jg
movsl
pop
pushf
jle
les
mov
and
ror
xor
jmp
sarl
repz
mov
sbb
and
cwtl
lret
push
outsl
sbb
pop
or
xchg
leave
push
stos
mov
mov
adc
ret
adc
cmpsl
jmp
inc
and
scas
or
fucom
adc
mov
jb
aam
lds
movsl
push
sahf
je
call
ret
int
mov
jge
jle
scas
imul
in
lahf
xchg
pop
adcb
sub
sub
loop
jp
shll
loopne
movsl
xor
outsb
jnp
shrb
push
xor
mov
ss
sahf
inc
lods
mov
inc
lods
int
cmp
cwtl
xchg
mov
pop
mov
daa
jecxz
loope
inc
and
xor
add
lret
add
out
xchg
sbb
popf
xchg
enter
mov
icebp
or
mov
cmpsb
frndint
gs
outsl
mov
loope
rcl
inc
jl
or
add
mov
mov
jmp
icebp
dec
imul
movsl
mov
movsl
sbb
lods
repz
or
lds
aad
mov
nop
push
add
das
mov
lret
loope
or
dec
les
xor
inc
or
sub
mov
out
loop
stos
cmp
xorl
scas
or
addr16
dec
or
xchg
mov
sahf
and
or
add
lds
or
dec
filds
int3
inc
bound
push
fs
sub
or
push
and
pop
ret
adc
inc
inc
sbb
add
fs
lret
repnz
repz
das
jae
jp
ret
xor
add
mov
mov
movsb
dec
fwait
push
xchg
fimull
stos
lret
mov
stos
aaa
fmuls
in
jmp
dec
mov
sahf
leave
scas
push
sub
pop
shll
xchg
xchg
das
push
in
je
movsb
fsubr
push
in
test
imul
or
mov
outsl
in
aam
jle
mov
cmp
mov
leave
ret
pop
mov
les
outsb
sub
inc
jmp
mov
mov
add
outsb
mov
rol
repnz
pop
stos
push
ret
cltd
xchg
sbb
inc
fadds
or
pop
xor
sub
scas
jl
add
lret
cltd
imul
shll
stos
add
mov
and
or
pop
cwtl
dec
dec
movsl
push
adcb
adc
test
or
cld
mov
mov
cld
fidivl
mov
xchg
jecxz
repz
xor
rcrb
sub
mov
rcrl
push
sbb
lret
jae
and
insb
bound
push
jae
cmp
inc
ds
cmp
shlb
ret
notb
jecxz
pop
andb
mov
sbbb
cld
jmp
in
movsl
roll
inc
cli
call
fwait
inc
or
pushf
xchg
jp
daa
orb
dec
or
inc
xor
dec
sahf
lahf
stos
in
out
out
loope
daa
roll
or
ret
dec
aaa
mov
xor
sahf
lretw
or
pop
and
add
in
jmp
pop
lret
xchg
enter
add
jmp
cmp
adc
movsb
lds
movsb
xchg
sbb
loop
icebp
loop
out
or
dec
jne
orb
fwait
inc
lcall
mov
add
or
pop
mov
inc
mov
cmp
mov
sbb
jb
cmp
push
mov
pop
sti
inc
pop
dec
adc
inc
insl
leave
xor
stos
rcl
and
mov
dec
inc
mov
push
es
adc
outsl
ret
fs
jmp
jp
int
xor
mov
sub
jmp
cs
in
pop
xchg
cwtl
repz
add
mov
or
sub
arpl
pop
pop
daa
jmp
fnstsw
orl
addr16
enter
push
xchg
pop
or
mov
mov
das
add
jns
and
adc
imul
mov
leave
jns
adc
sub
ret
and
xor
icebp
dec
mov
cmpsl
push
lea
and
ret
adc
scas
pop
sub
push
repz
movsl
push
add
dec
int
sbb
ljmp
cwtl
leave
jae
jle
cs
xor
adc
loop
aad
cmp
add
sahf
xor
push
or
sti
xor
add
enter
std
lcall
cmpsb
outsl
inc
in
add
add
and
lock
out
jno
test
jp
loopne
pop
inc
inc
mov
pop
in
das
shlb
dec
mov
push
iret
push
fldcw
mov
faddl
std
pop
mov
movsl
outsb
aad
cltd
in
mov
mov
pop
sbb
scas
cmp
movsb
call
fwait
mov
popf
imul
fisubs
mov
add
loopne
adc
adcb
push
sbb
aaa
je
mov
pop
subb
adc
fnclex
mov
inc
or
outsl
repz
push
mov
inc
pushf
stc
in
sbb
sti
jne
cmp
cmp
aad
ja
add
lahf
push
adc
mov
bound
xor
adc
inc
ret
loopne
scas
xchg
sub
or
jmp
mov
daa
xchg
mov
scas
nop
sub
mov
movsb
mov
xor
fneni(8087
lret
sub
jmp
sahf
lea
push
pop
shld
inc
inc
outsb
push
push
mov
nop
cmp
das
push
mov
dec
ret
lcall
mov
test
in
xor
mov
adc
stos
and
xor
add
test
jle
dec
push
jge
sbb
sbb
in
mov
sbbb
add
mov
scas
call
movsb
jecxz
dec
stc
lds
pop
out
insb
fiaddl
add
loop
cmp
das
dec
sbb
repz
pop
pop
and
xchg
dec
je
push
aad
push
ljmp
fwait
ret
insb
sbb
pop
pushf
cmp
pop
jp
addr16
dec
arpl
adc
cmpsl
dec
mov
jle
dec
lret
addr16
sbb
and
in
push
xor
adc
jecxz
or
aaa
jno
xlat
mov
call
in
add
push
cmp
pop
mul
pushf
pop
xor
pop
mov
inc
push
int3
out
jmp
mov
pop
push
adc
cmp
push
and
mov
and
sub
lds
scas
lret
popa
stos
inc
pop
add
add
sahf
aas
dec
inc
push
in
call
dec
add
in
adc
or
adc
or
sub
pop
pop
or
lret
or
adc
fistpll
test
xchg
add
fsubl
xlat
in
fs
mov
shrb
cmpsl
mov
cmp
je
sbb
jnp
pop
daa
add
mov
pop
xchg
in
push
pop
dec
in
ds
mov
out
cmp
jl
mov
or
in
push
sub
mov
adc
adc
adc
ret
mull
cli
cwtl
repnz
cmp
shrb
jnp
pop
pop
fwait
lret
fidivrs
ret
mov
jecxz
sub
push
lock
mov
inc
mov
outsb
mov
mov
in
movsb
test
sbb
sub
pop
aam
sbb
rolb
sti
fidivl
push
ret
adc
inc
outsb
cmpsl
or
aaa
sbb
in
in
sub
or
add
dec
adc
cld
leave
hlt
bound
incb
or
lods
xor
sbb
popl
push
or
stos
sbb
shrl
push
xor
cmpsb
bound
sbb
sahf
inc
gs
push
fstps
sbb
and
adc
cmp
fs
jl
xlat
loop
fsubs
mov
int
adc
dec
sahf
or
jbe
pop
stc
dec
adc
adc
cmc
stos
mov
insb
hlt
loope,pn
daa
pop
mov
lcall
movsb
lcall
cmpsb
dec
or
pop
dec
in
in
out
push
cwtl
gs
movsl
sbb
pop
int3
xorb
sub
adcl
sub
sub
int3
test
dec
pop
jl
mov
pop
sahf
stos
sbb
call
test
fwait
ja
jl
add
dec
dec
scas
inc
mov
or
add
outsl
scas
and
or
movsb
lods
pop
lahf
ds
sahf
pop
pop
dec
pop
xchg
dec
in
fildl
adc
and
xchg
mov
mov
popa
stos
movsl
add
dec
subb
aam
dec
add
psubq
std
push
pop
jmp
scas
push
cmc
ret
jp
insb
loop,pt
fcom
pop
jle
sbb
out
cli
lret
push
pop
cmc
or
xor
imul
mov
ret
enter
dec
ljmp
push
shr
sahf
adc
cli
mov
or
or
daa
or
add
and
loopne
in
popa
sti
sub
jmp
or
fdivr
test
imul
lret
push
das
cmp
out
push
stos
addr16
lods
dec
idivb
pushf
adc
dec
cwtl
mov
arpl
scas
sbb
ljmp
or
pop
xchg
sbb
mov
push
jp
mov
cmp
outsl
push
lret
pop
add
gs
cmp
add
mov
sbb
enter
inc
add
mov
je
in
or
lret
sbb
mov
subb
inc
xor
adc
mov
inc
decb
push
or
pop
hlt
or
inc
cmc
or
mov
idivb
mov
test
lock
inc
sbb
sub
aam
or
loope
mov
test
and
stos
mov
mov
dec
loope
jo
sub
mov
jns
mov
xchg
mov
sahf
loop
mov
enter
xor
in
repnz
mov
push
push
dec
mov
adc
testb
dec
sbbl
pop
xchg
xchg
push
pop
rcrb
add
ja
call
js
fwait
push
cwtl
test
movsb
cmp
movsb
and
mov
cmp
test
lock
pop
les
stos
fwait
xlat
xchg
fdivrs
adc
stos
insl
pusha
fs
mov
xor
sbb
adc
lods
adc
pop
test
jle
xor
std
mov
arpl
fsts
aas
pop
dec
sub
imul
jb
sbb
dec
lods
movsb
mov
jbe
iret
cmpsb
dec
loopne
adc
repz
pop
adc
mov
stos
sub
inc
xchg
mov
and
jl
xor
je
add
pop
cmpsl
sbb
mov
xor
cmp
dec
subb
pop
mov
xor
jo
mov
sbb
pop
cltd
mov
jle
push
add
add
cmpsl
xor
leave
pop
or
call
and
pop
cmp
lds
lods
push
pop
and
ret
scas
or
in
add
enter
pop
jno
test
mov
in
mov
mov
adc
lds
sti
and
or
push
fwait
cmp
lret
aam
jecxz
adc
loope
js
sti
pop
xor
push
test
adc
lea
enter
sub
mov
mov
and
in
xchg
int3
pushf
out
push
jbe
movsb
mov
les
imul
dec
adc
cmp
imul
stos
stc
in
scas
mov
lret
ffree
mov
cld
lds
outsl
xchg
sub
sub
cltd
insl
jecxz
scas
inc
out
cmc
notb
and
dec
movsl
push
clc
std
lret
sti
dec
rcll
mov
mov
loope
add
imul
pop
repz
out
arpl
xor
ret
jge
fldl
iret
jnp
push
push
jp
mov
sbb
aam
insl
int3
inc
cld
cmp
push
and
dec
adc
addr16
cs
test
in
xor
lock
loope,pn
inc
and
nop
or
push
mov
jae
movsb
push
loopne
leave
scas
lods
js
xchg
js
or
int3
mov
dec
or
dec
push
xchg
test
aam
into
iret
xor
mov
ljmp
icebp
aas
mov
in
les
loope
push
mov
roll
mov
int3
in
test
icebp
pop
xchg
cld
loope
test
mov
enter
xchg
cmc
pop
add
add
push
hlt
pop
out
clc
add
mov
ror
int3
mov
xchg
sub
ret
xchg
jns
sub
mull
notl
loop
inc
in
sbb
aam
dec
stos
add
data16
mov
lret
cmpsb
repz
mov
and
xchg
xchg
mov
pop
mov
push
gs
aad
outsb
lcall
fmul
repz
mov
lea
sub
pop
mov
das
repz
repz
movsb
xchg
add
hlt
fsubrs
cltd
mov
adc
add
or
repnz
jge
jb
js
lret
mov
ss
or
stc
enter
cmc
cmpsb
int
sti
jnp
inc
ret
mov
xchg
push
xor
lods
insb
sahf
dec
or
add
addl
or
jmp
popf
sub
inc
xor
pushf
cli
sbb
jg
add
inc
sub
pop
stos
xchg
jne
cmpsl
adc
adc
pop
inc
cmovae
lret
add
xchg
fstpt
lods
push
test
adc
inc
jge
mov
pop
mov
xor
jl
scas
fildl
mov
sbb
mov
xor
idivl
clc
or
or
int
push
test
mov
and
jge
or
lcall
mov
sti
lret
roll
cli
insb
or
add
push
or
adc
push
outsb
sbb
out
sbb
mov
movntps
in
inc
pop
cmp
xor
jne
and
mov
or
sbb
enter
xchg
ror
push
mov
sbb
fs
xchg
pop
add
add
mov
mov
sub
aam
cwtl
negb
pop
mov
dec
hlt
cmc
ret
or
mov
cmp
or
mov
mov
call
mov
pushf
xor
std
ficoms
es
jp
mov
xchg
mov
pushf
jg
mov
int3
rol
sti
pop
mov
add
movsl
mov
xlat
rcll
sbb
jnp
je
sbb
mov
sub
sub
mov
dec
lods
addb
push
ret
sbb
int
mov
xchg
hlt
or
cltd
insb
fadd
adc
test
xchg
inc
lret
sahf
mov
pop
cmpsl
ret
scas
push
mov
stos
mov
shrl
mov
cli
mov
pop
xchg
rorl
lea
lods
enter
cmp
xchg
add
jle
sub
sahf
push
pop
pop
sbb
pop
pop
mov
xchg
dec
xor
xchg
cmp
fsubrs
fadds
rcrl
call
je
pushf
pop
pop
inc
dec
icebp
aaa
fidivrs
lcall
and
jl
sahf
dec
insb
movsb
mov
fisubs
fisttpl
inc
and
and
data16
mov
jp
icebp
in
add
add
repnz
mov
sahf
lcall
insl
sub
add
cwtl
or
push
cmp
cmp
repnz
add
fildl
xor
xchg
cmpl
inc
cmp
add
idiv
imul
mov
imul
ret
xchg
xor
xor
push
pop
and
rcl
mov
call
shrb
pop
ret
leave
sbb
xchg
mov
add
mov
test
sets
es
push
leave
test
addr16
add
push
gs
rcrl
push
fmuls
les
popf
aad
mov
imul
pop
fimull
mov
das
std
loopne
pop
mov
cmp
and
and
insl
push
cmp
dec
in
pop
push
int3
rcr
inc
aas
push
jns
xlat
adc
in
xchg
fstl
addr16
out
jle
push
stc
rcl
mov
jnp
or
jmp
iret
stos
setno
testl
nop
stos
addr16
sub
test
push
icebp
leave
jb
out
xchg
or
repz
mov
ffree
leave
je
repnz
adc
imul
movsl
or
imul
pop
mov
stc
push
loope
add
push
pop
pop
gs
sbb
inc
add
pop
test
mov
jg
loop
movsl
shr
push
test
fistps
in
push
dec
push
jl
dec
sbb
sbb
leave
or
push
sub
xor
adc
cmpsl
jle
incb
xchg
add
data16
lret
push
loopne
mov
push
jns
cmpsb
jecxz
inc
stc
call
mov
pop
ss
mov
leave
xchg
ja
clc
push
jnp
inc
dec
pop
xchg
mov
adc
cmp
outsb
xchg
testb
test
dec
rclb
sub
or
or
movsb
push
xchg
add
loope
stos
xchg
adc
hlt
fucomp
pop
push
dec
call
sbb
inc
orb
test
xchg
outsb
nop
int3
inc
xchg
push
cli
push
mov
fiadds
xchg
test
aaa
inc
icebp
test
test
pop
pop
cmc
mov
call
ljmp
xchg
pop
pop
xor
comiss
adcb
adc
sbb
test
sub
add
mov
pop
je
nop
lds
sbb
add
mov
test
sbb
repz
or
xchg
add
fsubrl
mov
cltd
mov
mov
add
mov
into
or
add
mov
test
inc
push
add
fwait
enter
int3
push
dec
cmp
scas
jae
inc
dec
sbb
push
movsl
adc
imul
aam
sbb
mov
test
add
out
sahf
sub
mov
enter
inc
dec
mov
scas
lcall
mov
shr
add
pop
lods
pop
or
lods
movsl
jl
scas
jno
xor
cmpsb
pop
movsl
dec
lret
int
sbb
dec
sub
scas
addb
sbb
sub
rcrl
imul
ljmp
nop
scas
mov
out
inc
sbb
jno
or
sti
inc
jle
add
call
sub
mov
ja
insl
fnstenv
movsl
jecxz
jp
and
sbb
dec
nop
in
shr
xor
icebp
xchg
sub
subl
mov
adc
push
sub
lods
cli
add
roll
lods
test
sub
ljmp
adc
or
mov
push
mov
mov
sti
add
js
movsb
jb
shlb
jl
sub
xor
cmpsb
ucomiss
pop
int
orl
cmpsb
push
dec
xchg
inc
add
test
jbe
out
stos
add
inc
or
xchg
or
sbb
mov
or
inc
push
mov
jp
cltd
push
les
pop
in
dec
pop
sbb
int3
shrl
stos
movsl
xor
add
out
ret
xchg
cwtl
mul
jnp
or
pusha
jge
or
xchg
dec
enter
pop
jle
jbe
mov
mov
xchg
sbb
jecxz
cmp
addb
cwtl
lcall
aaa
scas
lcall
out
jae
mov
add
adc
lret
push
clc
or
ljmp
js
xor
dec
insl
mov
stos
xchg
movb
out
into
fidivrl
adc
add
xor
xchg
add
xchg
nop
push
cmp
or
mov
mov
int
bound
pop
inc
wbinvd
subl
outsl
sti
dec
push
out
arpl
ds
dec
add
xor
cmpsb
sub
bound
jle
sbb
lods
popa
fisubrl
js
push
out
dec
leave
sub
lods
xchg
jnp
pushf
pop
aas
lret
movsl
lods
ficoms
jnp
push
inc
xor
jmp
mov
ljmp
dec
sub
fs
out
leave
adc
adc
mov
pusha
jecxz
imul
or
movsl
mov
jle
lret
jg
sahf
cmp
in
sbb
test
inc
push
loop
jns
sbb
sbb
pop
xchg
adc
adc
ja
inc
cs
and
rol
mov
cmp
sbb
pop
cmpsl
aam
push
sahf
in
and
outsl
call
cwtl
mov
jle
movsl
aam
sahf
data16
movsl
add
cld
jmp
sub
push
or
mov
imulb
lcall
adc
stc
mov
mov
je
call
imul
lods
xor
fmuls
test
pop
dec
and
out
mov
flds
add
mov
cmp
lret
lods
test
mov
mov
mov
mov
andb
push
jecxz
jnp
lods
hlt
lret
and
xlat
imul
sbb
add
cwtl
mov
shll
bound
int3
inc
xor
fwait
push
mov
pop
repz
xor
insl
fimull
push
lcall
mov
shrl
inc
jae
out
cmpsl
xchg
into
sbb
lods
roll
inc
adc
in
lcall
push
add
push
add
pop
jnp
mov
js
leave
mov
mov
ljmp
cmp
push
popf
test
inc
ja
mov
sbb
test
test
mov
inc
mov
add
lret
xchg
fwait
jp
mov
cmc
shr
pop
ljmp
popl
lods
insb
stos
mov
jmp
adc
mov
mov
add
add
test
sbb
fistpl
push
or
ljmp
jcxz
ljmp
mov
and
xchg
fstpt
mov
and
addr16
icebp
add
daa
popa
arpl
adc
push
inc
and
adc
push
adc
insb
inc
scas
ss
inc
sti
cs
cs
aaa
loop
jns
mov
out
mov
cmp
mov
repz
xchg
repnz
xlat
push
adc
pop
addr16
pop
mov
dec
cmp
push
mov
cs
add
adc
imul
nop
mov
inc
lahf
mov
xchg
mov
add
mov
shrb
rol
notl
das
andb
cs
orb
and
sub
or
inc
jle
dec
inc
push
xchg
stos
and
jbe
lock
leave
adc
or
push
stos
loope
ss
jnp
mov
iret
xchg
and
aaa
jns
dec
inc
mov
loope
stc
cmpsl
hlt
scas
lea
xchg
mov
mov
sar
mov
pop
mov
or
out
dec
lret
pop
xor
movsb
movsb
out
or
mov
jno
int3
pop
loop
hlt
shrb
dec
sar
insb
cwtl
loopne
aaa
call
jecxz
dec
popf
test
adc
call
or
mov
jne
jo
mov
inc
mov
xlat
mov
std
xchg
dec
cmpb
push
ja
adc
insb
adc
in
dec
or
mov
mov
adc
cmp
cltd
dec
and
neg
sub
mov
pop
mov
hlt
shll
jle
add
aam
hlt
mov
ljmp
sub
scas
out
mov
xor
dec
mov
lea
daa
mov
push
lret
int
or
sar
subb
sub
add
mov
and
pop
push
mov
movsl
enter
pop
mov
mov
pop
sar
adc
inc
sahf
push
pop
or
lcall
popf
mov
add
inc
or
ret
call
ja
xchg
mov
in
out
popf
mov
dec
fmull
ret
and
call
cli
mov
add
loop
pop
cmp
pop
insb
scas
subb
fucomp
daa
ds
nop
add
scas
lret
imul
mov
inc
or
lret
stos
fxch
jns
int3
add
adc
push
lds
sbb
sub
je
sahf
stos
in
mov
cli
add
iret
sbb
icebp
mov
fistpl
incb
ret
sub
adc
lods
lods
xor
jl
push
jle
inc
xchg
push
testl
insb
lods
in
jle
xchg
cmp
jbe
mov
or
or
sub
out
nop
mov
lret
dec
jecxz
cmpsl
test
ret
in
outsb
imull
int
or
push
adc
adc
mov
lods
gs
in
or
add
mov
outsb
sbb
xor
xchg
add
mov
jo
dec
bound
cmpsb
dec
movsl
mov
xor
add
inc
adc
mov
scas
lret
pushf
lods
sbb
push
jae
scas
sti
popa
mov
stos
and
movsb
jno
inc
cmp
pop
dec
mov
and
xchg
in
stos
lock
or
or
mov
pop
mov
gs
jnp
insl
pusha
mov
cmp
loope
aas
xchg
dec
mov
out
insb
sbb
jle
and
jg
pop
das
es
mov
inc
mov
push
cmp
adc
adc
xchg
xor
das
pop
mov
rep
mov
rep
jmp
sti
push
xchg
adc
dec
pop
pop
xlat
sbb
push
cmp
das
lods
sub
or
fcoml
push
mov
pushf
ret
fistl
mov
jg
push
cmp
outsl
hlt
outsb
jle
adc
inc
sbb
mov
sahf
jbe
lcall
inc
addr16
roll
rcll
mov
jp
pop
das
mov
movsl
dec
int
in
xchg
je
add
call
aaa
xor
sbb
test
jg
popa
mov
xor
movsb
lret
mov
mov
loope
imul
sbb
pop
rcrl
xlat
pop
call
int
cmp
pop
xor
or
or
pop
cwtl
and
or
mov
or
cmp
sti
sbb
mov
xchg
sti
push
ret
testl
repnz
lret
scas
out
push
fiadds
stos
dec
push
icebp
lret
jnp
in
and
ljmp
insl
sahf
dec
popf
cmp
rorl
xchg
adc
inc
test
and
stos
jle
in
and
fidivl
jecxz
insb
out
jns
pop
add
mov
mov
jle
mov
push
js
neg
shll
aam
test
sti
lret
ljmp
xchg
xchg
addr16
cmp
imul
mov
push
or
jmp
inc
sbb
cmpsl
cltd
mov
or
inc
stos
xlat
out
or
dec
clc
pop
shrb
fsubs
scas
cmpsl
repnz
mov
aam
jge
lret
push
add
jbe
ficompl
fdivrp
adc
imul
xchg
mov
out
test
push
pop
or
sbb
sahf
shll
stc
push
in
test
popf
mov
test
push
roll
inc
jmp
adc
dec
mov
movsl
mov
jge
pop
cs
mov
xor
lods
adc
hlt
xlat
sbb
aas
movsb
ret
add
ret
stos
std
fwait
ljmp
aas
fisttpl
imul
daa
movhps
popf
adc
push
scas
aam
shrb
xor
jge
scas
js
cmc
pop
int
and
push
mov
jnp
movsl
lea
iret
sbb
xor
rolb
mov
cmp
repz
pushf
xchg
add
stos
fdivrs
lcall
les
cwtl
xchg
clc
loope
lret
pop
push
or
cld
aaa
sahf
stos
daa
dec
int
pop
rcr
dec
shlb
leave
std
loop
dec
and
test
inc
or
xchg
aaa
lock
push
mov
sti
jmp
and
mov
xchg
add
fisubs
mov
lcall
in
ret
add
sar
dec
dec
mov
mov
outsb
imulb
lret
pop
out
push
mov
mov
inc
or
add
or
fwait
movsb
push
ret
test
les
jl
fcomps
push
or
popf
lods
cmp
pushf
ja
xchg
out
addb
shrl
aas
ficompl
adc
push
adc
cmp
insb
dec
mov
sub
dec
data16
lcall
lret
je
or
imul
adc
iret
mov
add
xor
int3
pushf
and
ss
shrb
mov
xor
in
fadd
dec
call
pusha
rcrl
ljmp
xor
rclb
jne
repnz
stc
in
popa
scas
jns
fiadds
dec
mov
sub
mov
sub
mov
pop
add
orb
dec
adc
flds
xor
fadds
push
push
add
or
mov
push
cltd
out
stos
scas
lods
push
cld
rclb
test
call
stos
and
rclb
mov
loopne
nop
ja
fcmovbe
mov
add
jne
cmp
jle
pop
jle
pop
add
push
adc
sbb
jo
mov
sbb
mov
jg
or
lret
in
push
lods
xchg
inc
cmp
add
cli
pushf
xor
xlat
mov
lcall
sub
int3
mov
sbb
jmp
xchg
or
jno
orb
xchg
mov
push
in
cltd
mov
mov
jp
stos
stos
lea
out
inc
fdivrl
pop
pop
inc
push
fstp
mov
aad
cmp
jne
mov
jle
std
out
add
pusha
xor
das
mov
test
sub
aaa
lret
mov
roll
pop
or
stc
jge,pn
lods
leave
stos
mov
lar
loopne
loopne
add
clc
mov
in
inc
and
dec
cmp
push
xor
and
push
repz
divl
adc
std
pop
arpl
mov
mov
mov
rorl
out
loop
mov
sti
sbb
popa
mov
mov
aad
xor
sti
mov
addb
mov
dec
in
mov
mov
out
lcall
inc
xchg
jmp
jmp
mov
fsubrl
sub
icebp
inc
jl
xchg
gs
push
push
stos
test
adc
mov
jge
mov
add
int3
repz
push
mov
sbb
and
sub
xor
pop
add
repnz
push
add
add
repz
push
sub
bound
inc
and
cmpsl
jecxz
clc
shl
jb
imul
testl
clc
mov
push
in
je
jns
popa
dec
mov
mov
xchg
stos
jmp
add
push
push
and
enter
adc
aas
shrl
sbb
mov
jns
test
gs
inc
and
nop
push
or
jae
pop
sub
or
push
outsl
bound
sbb
in
dec
leave
fscale
aam
mov
das
fadds
ret
dec
cli
xchg
adc
rcl
aad
sbb
pop
scas
and
jae
out
jg
test
push
movsl
je
lret
mov
mov
or
adc
jecxz
aas
or
inc
mov
or
fmull
pop
test
ja
add
mov
mov
jl
cmp
andl
xlat
pop
in
dec
dec
jle
iret
mov
adc
icebp
lods
jmp
xchg
call
sub
test
repz
ljmp
fnstenv
adc
jbe
cmc
push
inc
test
and
jns
or
add
and
test
std
or
icebp
add
insl
cmp
adc
mov
sahf
add
push
nop
push
mov
loop
icebp
inc
jo
mov
push
flds
mov
push
enter
das
imul
test
int
pop
fdiv
in
adc
push
mov
mov
add
and
inc
dec
or
pusha
data16
sub
lret
mov
pushf
popa
xor
insl
and
xchg
pusha
mov
js
xchg
add
add
les
fcom
mov
stos
sub
fwait
daa
or
pop
testl
add
test
sub
ss
fsubs
or
leave
cld
sub
fiadds
ss
dec
call
ja
call
adc
lret
sbb
xor
add
jno
jb
arpl
std
and
call
dec
fcoms
adc
mov
nop
and
or
sub
cmpsb
loopne
loope
xor
mov
orb
xchg
pop
jmp
inc
test
mov
popf
sbb
add
pop
fwait
mov
mov
xchg
call
sbb
es
mov
mov
jae
fisttps
dec
or
push
inc
aas
addr16
daa
out
popf
jae
bound
imul
mov
leave
lea
loop
jecxz
or
pop
pushf
adc
iret
push
scas
mov
inc
xchg
leave
or
bound
jp
jp
jecxz
mov
cwtl
pop
call
dec
filds
sbb
push
iret
inc
fwait
pushf
jne
sbb
aad
inc
insb
sbb
push
add
pop
pop
pop
sbb
imul
mov
ret
xchg
jl
aad
lret
add
mov
mov
inc
cmp
push
push
popa
add
jp
xchg
stos
repz
xchg
xchg
inc
call
push
popa
lahf
mov
aad
xchg
jl
test
xchg
sub
jb
mov
inc
popa
call
or
sti
popf
loope
sub
inc
sbb
add
cli
call
adc
cld
or
pushf
les
add
dec
cmpsb
mov
or
movsl
dec
fs
lock
lods
xor
dec
push
or
icebp
pop
sbb
ja
ljmp
rolb
mov
inc
inc
adc
add
mov
add
pop
les
or
sbb
add
loope
inc
mov
bnd
mov
aad
cmpsl
enter
dec
sbb
push
ljmp
daa
jmp
data16
pushf
jo
movb
pop
es
xsavec
fistl
dec
sbb
adc
movsb
inc
cmc
into
pusha
clc
jp
lahf
dec
mov
adc
imul
ss
or
push
shrl
fwait
out
bound
loop
sbb
and
call
sbb
xchg
and
push
or
or
inc
inc
jmp
fstl
push
insl
xchg
pop
sbb
add
mov
insb
add
jmp
sub
push
test
xchg
filds
cmpsb
adc
mov
jb
or
daa
test
cmc
push
ljmp
xchg
jg
cwtl
mov
push
sbb
out
or
push
lods
or
jns
repnz
mov
sarl
xchg
mov
mov
cli
test
sub
xchg
add
out
test
out
or
sub
pop
aam
pusha
inc
out
jmp
sub
or
cld
test
or
lret
push
mov
mov
fldt
xor
es
dec
lret
mov
pushf
mov
or
dec
or
sbb
adc
dec
call
xor
les
stc
jl
adc
out
out
push
push
out
fs
push
cmp
sbb
jmp
das
inc
fmul
add
sbb
call
in
sbb
mov
sbb
push
fildll
lret
ret
and
mov
sub
lret
mov
sub
repnz
mov
rep
lea
xchg
repz
loope
insl
mov
dec
notb
ljmp
mov
or
sbb
adc
dec
or
sub
sub
fnclex
mov
or
or
test
loop
xor
cmp
sbb
les
mov
mov
leave
lcall
or
in
test
push
int3
stos
call
repnz
test
sbb
push
pop
adc
jg
inc
outsl
iret
jmp
mov
clc
jb
gs
rol
or
adc
sarl
fwait
aas
or
aad
mov
orb
shl
aaa
xchg
or
pushf
inc
mov
test
xor
cmpsb
sub
and
mov
mov
cli
push
lret
sub
push
sub
add
push
cmpsb
scas
out
lret
jecxz
dec
sti
mov
incb
sub
rolb
push
jmp
lret
push
sti
aad
ds
out
add
push
std
mov
insl
cmp
sub
push
mov
ds
std
push
jp
loop
xchg
push
sar
dec
ljmp
jno
add
mov
dec
pop
inc
add
aas
shlb
cmp
insl
xchg
les
mov
aaa
aam
out
popa
mov
cltd
lret
rcrl
mov
lods
stos
adc
dec
cmpsb
mov
cmp
sti
roll
ljmp
aaa
push
insl
imul
les
sub
mov
xor
daa
or
in
mov
fstpt
ljmp
pop
ficompl
ds
add
lods
mov
ffreep
adc
lret
ja
stos
or
mov
xor
aas
mov
or
xlat
lret
and
jns,pn
mov
lods
dec
or
add
popf
mov
cmp
bound
cld
cmp
mov
xor
cld
mov
xor
jg
jmp
jle
jno
ret
loop
or
jp
repz
je
mov
nop
sbb
lods
fdivrl
jbe
mov
or
pop
dec
or
insl
jge
jp
dec
jns
insb
mov
xchg
lds
test
or
aam
sbb
popf
scas
jmp
sub
inc
je
fisttpl
mov
hlt
adc
add
dec
mov
push
scas
enter
adc
stos
or
jmp
pop
test
stc
fidivs
jg
adc
and
int
pop
sub
xchg
int3
sub
lods
jae
mov
lock
lods
push
fstpt
fdivrp
inc
adc
xchg
sub
dec
jnp
lahf
in
fbld
sbb
add
lcall
loope
mov
mov
mov
sbb
aam
popa
xor
adc
sub
ss
sbb
divb
imul
jns
enter
dec
aad
ret
push
sub
sti
pop
inc
push
push
push
leave
popf
and
jnp
jmp
lods
mov
ja
add
sbb
les
stos
pop
mov
inc
lret
mov
je
adc
mov
pop
mov
aad
jge
inc
fmul
mov
gs
add
ljmp
notb
sahf
cmp
jl
loop
xchg
sti
rolb
mov
add
rcl
mov
rorl
call
lods
push
out
and
bound
jecxz
push
mov
jo
sub
jnp
sahf
mov
in
xchg
shrb
or
xor
jle
and
adc
inc
popf
lock
and
dec
mov
add
icebp
and
xor
fs
outsb
or
test
sbb
out
mov
dec
jbe
cmp
xchg
cmp
pop
in
ret
cmp
mov
push
rorb
jecxz
or
cmpsb
inc
nop
mov
int3
out
cmpsl
and
xchg
out
test
test
add
cwtl
mov
pop
add
sbb
adc
jmp
scas
and
cltd
xchg
in
push
sarb
addr16
sub
xor
adc
cltd
fimull
add
repz
sbb
adc
add
mov
cld
aam
movsl
cmp
into
xchg
jno
shlb
and
sti
and
push
push
test
bswap
inc
add
ret
out
mov
or
xor
cwtl
jns
bound
daa
adc
mov
xchg
cltd
sar
jl
cmc
out
lret
out
fs
inc
mov
imul
andb
fwait
jbe
int
xchg
xchg
dec
fdivr
and
jecxz
sti
adc
loop
in
mov
xchg
imul
jmp
into
loopne
repz
jp
jmp
and
jo
cmp
lret
fadds
dec
idivl
add
data16
gs
pop
lcall
repz
push
hlt
insb
sbb
inc
push
daa
or
mov
in
sub
jge
and
mov
std
in
adc
sahf
dec
xchg
mov
cmp
pop
imul
adc
pop
cmp
adc
scas
notl
outsb
fimull
or
lock
cwtl
cmp
std
add
lcall
sbb
sub
push
sbb
out
ret
mov
aam
inc
cmpsl
adc
sbb
pushf
or
push
fstpt
mov
inc
dec
xchg
ljmp
and
in
rcrb
sbb
jnp
fsubrs
push
imul
cmp
add
xor
xchg
sbb
ret
stos
pop
mov
inc
lcall
mov
push
push
pop
jecxz
mov
or
dec
daa
dec
add
inc
or
sbb
es
in
imul
call
xorb
xor
or
aaa
fisubrs
in
lods
mov
mov
lcall
aaa
cmp
push
push
inc
dec
add
adc
or
jno
cld
int
sahf
cmp
popf
lock
les
test
or
pop
les
enter
lds
xchg
mov
adc
or
jne
cs
stc
clc
sbb
add
addr16
inc
sbb
cmp
shlb
mov
adc
push
xor
jecxz
pop
mov
inc
adc
outsb
mov
aad
mov
lret
pop
xchg
enter
aad
push
adc
adc
jp
js
pop
callw
sbb
sbb
daa
out
pop
popa
add
testb
add
mov
shrl
mov
test
mov
orl
and
loope
int3
testl
insb
sbb
cmp
test
out
outsl
call
mov
lret
sub
cmp
repnz
or
jp
sub
into
insl
aam
popf
out
pop
lods
mov
aas
aam
sub
hlt
dec
mov
repnz
cmpsl
lods
std
mov
and
movsl
adc
sti
xor
cmp
push
fldcw
add
xchg
mov
adc
xchg
aaa
push
lods
dec
mov
sbb
pop
in
test
push
lods
mov
dec
dec
or
fistl
jmp
lods
push
sub
enter
xchg
stos
lea
lcall
mov
mov
cmp
xor
mov
repz
mulb
int
fsubr
popf
sbb
aam
popa
test
xor
pop
push
test
and
mov
jg
sarl
jl
jnp
subl
dec
or
test
xchg
fcoml
mov
mov
mov
jge
adc
cmp
mov
aam
std
push
js
push
mov
shll
fs
adc
inc
cmc
adc
sub
sbb
xchg
fistl
in
or
sbb
sarb
testb
test
sbbl
or
push
cmp
sbb
daa
int3
insl
lret
rorl
jns
push
rorb
jno
lock
mov
cmp
aam
movsl
into
gs
sbb
dec
add
daa
movsb
sahf
call
in
mov
aaa
fcoml
dec
flds
fcomip
jns
stos
mov
sbb
mov
inc
sti
cmp
xchg
subb
add
sbb
mov
push
mov
sahf
es
sub
mov
imull
lret
popa
mov
push
mov
pop
loope
push
mov
push
or
xchg
shrl
mov
lcall
pop
cmp
ljmp
pop
dec
push
mov
lea
push
repnz
dec
fiaddl
xchg
adc
in
pop
fs
jle
dec
dec
xchg
mov
pop
sti
pop
add
jle
popa
lea
ljmp
push
stos
shr
leave
and
sarl
xchg
sub
push
jmp
jnp
pop
or
lea
mov
cmp
xchg
clc
jg
cmp
and
jo
test
clc
mov
push
or
mov
mov
ret
enter
subl
jmp
test
xchg
lret
imul
mov
lret
dec
sbb
ljmp
cmp
add
cltd
jns
inc
jle
scas
pop
xor
imul
xchg
jmp
push
inc
movntq
add
mov
loop
pop
out
mov
test
or
ficomps
cmpsb
fdivl
push
lea
mov
mov
mov
dec
adc
lods
insb
cmpsb
popf
adc
iret
scas
sbb
mov
inc
call
sbb
inc
gs
imul
imul
rcrb
push
sub
mov
push
sbb
dec
bound
popa
test
or
push
xchg
add
add
xor
push
popf
lods
enter
mov
lahf
inc
popa
notl
push
push
adc
ss
sbb
jne
leave
mov
adc
inc
add
or
jg
add
aaa
push
int
aad
mov
enter
cld
mov
roll
mov
or
loop
lea
outsb
nop
loopne
add
mov
dec
push
add
enter
int3
add
lods
loop
call
add
shrb
sahf
dec
pushf
in
push
sbb
xor
lods
fistl
dec
or
sar
inc
cmpb
stos
sub
pop
mov
test
mov
adc
andl
add
add
dec
adc
mov
add
inc
add
mov
mov
add
lret
or
ds
pop
lods
mov
mov
dec
lret
mov
adc
add
dec
test
sub
add
inc
out
mov
jle
bound
cmp
stos
leave
pushf
inc
arpl
or
inc
stos
adc
aam
jmp
inc
sub
fsubl
cmpsb
aam
cmp
jecxz
fucomp
ficompl
mov
lods
inc
push
sbb
mov
xchg
ds
adc
adc
inc
and
int3
stos
sub
xchg
shlb
lret
out
sub
leave
mov
fsubrp
inc
nop
add
leave
or
push
or
push
lret
push
mov
mov
lds
mov
dec
jns
stos
mov
cmp
dec
push
xchg
mov
xchg
mov
mov
mov
stos
sbb
out
sub
jp
push
pusha
xchg
stos
incl
js
hlt
mov
adc
adc
ret
mov
repnz
nop
pop
and
fwait
xchg
movsb
lcall
cmp
push
test
nop
sub
scas
mov
adc
inc
ja
ret
das
loopne
fs
mov
pop
inc
adc
scas
iret
pop
les
jg
hlt
mov
and
cltd
enter
inc
adc
push
leave
push
sbb
sub
xchg
and
adc
jnp
in
scas
rcl
sbb
in
int
pop
xchg
pop
gs
push
jg
mov
sub
sbb
adc
xchg
leave
insl
push
in
lahf
loopne
dec
mov
dec
std
adc
aaa
push
js
add
or
imul
mov
sbb
dec
dec
fildl
pop
mov
in
sub
imul
ficoml
mov
out
push
fucom
or
inc
dec
movsb
add
or
pop
or
cmp
popl
or
mov
test
sub
pop
sbb
push
sbb
pop
pop
nop
addb
jno
cmp
cwtl
popf
popa
cmp
dec
lock
pop
lgs
fwait
xor
sbb
fidivs
sbb
sbb
xchg
lret
push
pop
or
cli
andb
ja
dec
movb
sbb
fs
testb
test
adc
int3
mov
loopne
cli
sbb
push
mov
clc
or
or
js
add
out
adc
test
lcall
push
fs
or
jnp
push
inc
sarl
fsubrs
fs
mov
addr16
push
out
push
mov
pop
filds
and
icebp
gs
mov
cs
and
xor
ljmp
pop
sbb
inc
mov
inc
pop
in
add
xchg
clc
imul
xor
or
pushf
mov
pop
insl
mov
mov
mov
je
loop
mov
pop
loope
or
add
mov
loop
cmp
test
int
bound
xchg
ljmp
sbb
cltd
mov
lcall
fistl
sbb
or
int3
jns
pushf
or
xchg
or
or
adc
inc
xchg
sbb
or
adc
lahf
dec
inc
loop
sbb
or
dec
bound
sbb
icebp
sbb
decl
fldln2
pop
sbb
lret
add
dec
mov
adc
in
into
push
jle
add
or
inc
sub
in
or
fst
and
sbb
pop
sbb
wbinvd
sub
pop
pushf
cmp
adc
mov
xchg
aam
aad
add
test
jmp
mov
fcomps
adc
pop
push
call
adc
out
add
hlt
aad
sub
subb
sub
lret
int3
xlat
testb
ljmp
push
nop
in
les
or
sahf
fistl
outsb
xchg
mov
or
stos
popa
sahf
andl
mov
sbb
lea
adc
add
mov
lret
lods
add
aas
mov
lret
mov
pop
and
add
pop
add
enter
xor
or
pushf
movsb
xchg
jl
mov
mov
arpl
sub
ljmp
inc
mov
pop
push
cli
or
cmp
push
call
cmp
arpl
out
adc
in
loope
sub
enter
push
jl
pop
jo
or
sbb
or
jae
add
pushf
xor
jg
fcoml
mov
aam
mov
or
sbb
into
out
or
clc
sub
cli
adc
xchg
call
lcall
xchg
add
sbb
and
ret
add
lds
add
jns
mov
adc
adc
pop
xchg
dec
cmpsl
pop
adc
loope
ret
movsl
call
jp
adc
sub
incb
dec
dec
clc
test
or
cmp
adc
out
mov
or
adc
or
xchg
adc
xor
cld
gs
ret
add
in
or
pushf
call
out
cmp
pushf
les
fwait
add
test
xchg
add
call
or
push
cmpsl
jecxz
sbb
xor
in
push
or
pop
rcll
dec
mov
mov
stos
dec
negl
out
or
jl
or
pop
cmpsl
push
ret
push
pop
mov
and
push
jne
out
hlt
ret
insl
lret
enter
lods
inc
and
pop
adc
push
test
call
pushf
or
or
sahf
cli
stos
or
out
sub
xchg
sub
repz
in
pop
inc
test
divb
rorb
test
add
or
dec
incb
add
lock
add
inc
cmp
hlt
enter
dec
adc
test
test
outsb
mov
fcomps
enter
outsb
movl
push
cmp
or
or
pop
imul
aas
daa
add
or
cltd
mov
jmp
xchg
adc
sbb
call
inc
inc
inc
cltd
lret
enter
ret
bound
inc
lock
xchg
mov
add
dec
sbb
pop
xlat
push
add
ret
les
pop
or
or
push
out
or
out
add
das
or
push
pop
sbb
xchg
mov
mov
or
add
pop
out
cld
call
cmp
int3
sbb
or
rcrl
in
add
pop
or
inc
dec
adc
sbb
loopne
test
call
testl
dec
mov
sub
out
or
adc
sbb
mov
mov
bound
fisttpl
icebp
les
orb
clc
inc
jl
add
enter
adc
mov
and
dec
xchg
or
jl
adc
dec
es
xor
rorb
test
int
or
pop
in
or
add
fisttpl
sbbl
les
sbb
test
or
adc
or
fnsetpm(287
push
rorl
mov
std
test
dec
mov
test
pop
call
ljmp
fcomps
cltd
or
fcoms
or
add
popf
enter
mov
dec
call
nop
fiaddl
mov
call
xchg
ljmp
stos
or
xchg
imul
or
or
sub
test
test
les
enter
xchg
ljmp
out
or
mov
cmp
arpl
test
mov
jl
lcall
loop
or
jl
sbb
loop
cmp
dec
adc
call
xchg
or
stos
loop
jmp
inc
arpl
test
cmpsl
push
dec
or
sbb
loop
or
jl
sbbl
add
jl
sahf
sbb
loop
or
jl
pop
fcoml
or
push
or
ret
inc
int3
dec
call
push
adcb
mov
adc
call
mov
inc
xchg
inc
add
mov
xor
in
push
lahf
xchg
sbb
mov
xor
adc
mov
push
adc
mov
push
sbb
enter
dec
cwtl
sbb
jnp
ja
add
mov
call
ljmp
push
inc
add
jno
pushf
or
pop
std
loop
add
pop
adcl
adc
push
pop
inc
ja
or
or
push
jmp
inc
cmp
adc
push
ljmp
enter
sbb
jle
sub
jp
sbb
or
pushf
or
xchg
enter
dec
inc
in
cltd
or
inc
xchg
dec
cmp
subl
icebp
sbb
cmp
push
lods
dec
outsb
ret
pushf
lods
cmpsb
shrb
data16
jo
add
xchg
and
test
sbb
mov
and
test
cli
cmp
sbb
test
and
push
sbb
pop
and
rolb
popa
loop
add
stos
loop
adc
inc
pop
mov
mov
inc
add
jl
cltd
sub
lret
fsubrl
sbb
or
sbb
or
testl
andb
or
cmp
pushf
adc
inc
or
pop
ret
xchg
faddp
xchg
xor
out
sbb
pop
and
xchg
movsb
subb
and
daa
xchg
addr16
pushf
ljmp
fidivl
or
jmp
jnp
jo
loope
dec
fs
xor
shlb
push
cmp
xchg
sbb
int3
adc
or
or
add
ljmp
repnz
push
mov
mov
enter
xchg
stos
rorb
mov
movsb
lock
cli
les
mov
push
push
sbb
scas
sbb
out
sbb
mov
add
push
pop
adc
sbb
sbb
add
repnz
or
icebp
fistl
adc
or
adc
pop
xchg
push
pusha
sbb
or
rorb
or
sbb
add
push
imul
push
daa
add
push
pushf
or
add
ljmp
andb
adc
sti
pop
stos
mov
and
movsb
fcoml
inc
in
add
subb
lcall
std
sbb
and
shrl
sub
test
repnz
movsb
in
insl
shr
mov
pop
mov
add
ret
sbb
rolb
push
inc
jne
push
adc
sbb
test
pop
jl
or
xchg
clc
adc
sbb
add
xor
inc
lret
icebp
add
insl
pop
invd
lea
cltd
js
test
movsl
jns
or
or
lods
or
daa
lea
add
ds
lods
or
outsl
subl
or
les
jecxz
xchg
stos
adc
sub
out
or
loop
int3
sbbb
cs
ds
movsl
subl
sbb
jbe
popa
add
pop
test
add
jmp
or
cmp
mov
pop
ds
les
enter
call
xchg
adc
test
xchg
inc
sub
lret
into
lret
pop
movsl
fidivs
add
testl
or
cs
sbb
jmp
mov
dec
lea
stos
int
clc
mov
in
dec
xchg
enter
lds
ret
and
pop
in
dec
inc
cmpsb
sbb
sbb
dec
sub
cli
mov
lds
ljmp
push
into
adc
sub
test
or
or
pop
into
adc
xchg
mov
dec
lods
xchg
adc
jo
sbb
fldcw
or
sub
sub
cmc
sub
aaa
jp
or
or
or
les
fistpl
or
cmp
inc
call
add
or
or
or
add
stos
dec
test
sbb
in
fwait
mov
or
dec
ljmp
sbb
lret
cmp
add
sbb
or
insb
xchg
out
or
mov
popa
adc
cltd
ljmp
in
add
cmc
insl
in
add
mov
in
pushf
les
xchg
decl
or
sti
dec
movsl
jns
test
dec
or
mov
test
out
stos
mov
or
add
push
in
psubsb
int3
adc
fcmovne
pop
movsl
xchg
sbb
js
lods
cmp
fldcw
cmpb
pop
sbb
mov
pop
or
xchg
or
pushf
add
or
cmpsb
pop
call
mov
cmpsb
or
add
sbb
add
int3
adc
int
std
xchg
loop
jmp
hlt
or
pushf
out
or
or
idivl
sbb
dec
aas
jp
add
inc
cmp
adc
push
enter
sbb
ret
ljmp
or
pushf
mov
or
dec
fwait
aas
jmp
push
jl
pcmpgtb
or
adc
mov
or
cmp
les
int
bound
les
call
sub
adc
lea
out
dec
add
stos
cmp
pushf
pushf
scas
mov
lea
pop
testl
dec
pop
enter
or
mov
sbb
call
out
or
inc
jmp
dec
sbb
pushf
cwtl
stos
xchg
enter
dec
push
stos
or
add
or
jbe
stos
or
lds
xor
stos
or
xchg
jbe
pop
les
gs
gs
aam
sub
mov
xchg
xchg
cs
or
testb
or
xchg
cs
or
xchg
mov
xchg
loopne
clc
mov
sbb
lahf
addl
mov
sub
or
insl
and
ljmp
sub
test
inc
xchg
mov
int3
cmpsl
pop
orb
or
sbb
loop
or
jl
aam
int
xchg
ljmp
fcoms
ljmp
movsb
adc
test
or
adc
stos
jl
add
aas
xorb
add
adc
addr16
sbb
inc
xlat
sbb
bound
jb
scas
call
stos
or
fisttpl
call
pop
les
bound
pushaw
or
sbb
cmp
shl
push
add
aam
dec
out
loop
add
test
sbb
pop
call
sub
push
clc
push
sbb
call
fs
or
enter
or
sbb
push
test
call
push
inc
sbb
jg
negl
imul
aas
movsl
call
inc
pop
les
cmp
stc
mov
enter
iret
sub
dec
out
mov
cmp
lret
mov
mov
in
lcall
cmp
sbb
insl
sbb
adc
dec
ljmp
jno
or
pushf
lret
sbb
sub
test
xchg
sbb
pop
test
mov
stos
push
imul
in
stos
sbb
in
inc
dec
push
adcb
adc
xchg
arpl
and
std
gs
cmp
inc
sahf
js
movsb
jno
mov
mov
xor
enter
sub
dec
lret
in
ljmp
jbe
lcall
adc
sbb
stc
adc
ror
add
pop
les
or
orb
negl
or
les
repnz
add
or
clc
pop
push
or
cmp
sbb
clc
loopw
fsts
push
out
dec
or
sarl
push
cmp
push
ljmp
and
add
push
sbb
stos
bound
jle
sub
pop
sub
movntq
or
sbb
cmpsl
adc
sbb
in
adc
jp
out
rcrl
pop
xchg
sbb
pop
sbb
les
add
adc
inc
push
pop
xchg
cmp
sbb
jmp
sbb
or
pop
jg
or
adc
ljmp
fs
mov
pop
call
or
addr16
cmpsl
or
or
or
inc
pop
and
inc
dec
hlt
les
call
pushf
push
fwait
fs
enter
bound
mov
adc
xchg
push
push
stc
mov
fcoms
test
daa
repz
daa
sbb
push
out
add
cmp
pop
dec
jp
add
pop
andl
add
fsubrs
pop
jmp
xlat
pop
stc
sub
insl
int3
add
in
mul
or
mov
leave
jmp
or
jl
xchg
fmulp
jp
add
leave
lods
and
jmp
or
or
sti
push
inc
imul
pop
or
push
mov
jmp
mov
adc
or
pop
inc
or
imul
lahf
icebp
push
into
mov
jae
stc
call
or
push
leave
mov
ja
decl
xlat
sbb
adc
inc
add
adc
pop
or
add
lret
pop
pop
int3
or
ljmp
xlat
lods
adc
fmull
add
jae
mov
aad
push
or
pop
imul
or
test
cmp
adc
ljmp
enter
pop
or
inc
jp
adc
pop
test
fs
adc
push
adc
push
lret
enter
std
test
fmull
or
push
arpl
imul
cli
or
test
enter
push
leave
or
enter
inc
out
push
or
clc
jns
stos
push
sti
dec
push
and
les
dec
imul
imull
push
or
push
enter
hlt
call
pop
fisttpl
push
add
sub
fistpl
sub
xchg
inc
fildl
sbb
int
adc
call
sub
add
test
sbb
call
jl
sbb
and
sbb
cmp
into
test
js
or
or
add
or
or
adc
or
sbb
pushf
pop
push
daa
mov
fwait
enter
push
adc
mov
pop
jl
adc
stos
push
hlt
add
sbb
fdivrs
roll
stc
mov
mov
or
mov
stc
or
or
sbb
push
sbb
dec
sbb
adc
dec
out
clc
sbb
in
sbb
in
or
lret
cwtl
add
cmpsb
mov
test
js
jl
loop
xor
xchg
jnp
push
pop
mov
dec
test
jno
js
lcall
push
pop
mov
insl
leave
and
repnz
inc
cwtl
pushf
loop
add
inc
cwtl
cmp
repnz
inc
js
adc
clc
mov
sub
push
shlb
in
push
sbb
sbb
inc
pop
sahf
adc
mov
push
mov
stos
ljmp
push
fs
sarl
and
jl
sub
or
decl
or
or
or
push
adc
jb
lea
stos
mov
in
aam
push
cwtl
call
cwtl
sbb
mov
pop
rcll
mov
sub
or
or
inc
adc
lcall
cmpsl
enter
es
call
outsb
in
rorb
or
sub
adc
aam
sub
mov
and
adc
pop
movb
ljmp
pop
xchg
invd
call
les
rorb
sbb
add
test
sbb
call
adc
pop
inc
lock
lret
dec
loop
lret
leave
cmp
push
in
add
imul
push
mov
cltd
sbb
adcl
and
mov
and
ret
pop
call
cltd
add
aam
test
xor
lods
sahf
jmp
subl
inc
pushf
fistps
or
inc
push
enter
ficoml
or
add
jmp
or
orl
adc
or
adc
test
enter
sbb
push
ret
mov
daa
push
cld
sbb
pop
fs
push
xchg
test
mov
or
sbb
sbb
ljmp
mov
sbbl
test
into
or
cmp
mov
or
or
pop
adc
add
popa
or
or
push
test
push
test
sbb
or
cmpsb
adc
call
sbb
sbb
aas
inc
mov
or
test
mov
lock
sbb
xchg
pop
push
xor
call
test
sub
mov
call
sar
adc
cmp
sub
hlt
sbb
sbb
push
shlb
sti
inc
sahf
add
inc
les
adc
mov
or
inc
or
cli
mov
sti
lret
push
enter
out
imul
lret
outsb
add
pop
inc
sub
adc
xlat
xacquire
je
cmpsl
lcall
sbb
jp
test
adc
incl
xchg
lods
sbb
mov
test
cwtl
or
mov
push
push
jg
bound
iret
pop
out
and
cmpsl
and
cmp
stos
sbb
and
insl
mov
xor
mov
adc
cmpsb
add
add
mov
mov
aad
stos
jg
sti
sub
xchg
loop
or
pushf
call
lret
call
aaa
mov
fcoms
mov
push
ja
stc
or
in
mov
or
cmpsl
mov
jmp
or
xchg
aaa
mov
jp
mov
push
rclb
jmp
add
test
dec
or
lret
test
jge
sbb
dec
orl
enter
sub
pushf
or
add
loope
or
pushf
les
test
enter
sbb
dec
cltd
fcmovne
or
lret
lret
jo
or
adc
hlt
pop
lret
jg
repz
outsl
inc
leave
cmpsb
jmp
or
jg
idiv
dec
imul
int3
mov
pop
sbb
pop
dec
mov
push
lret
mov
dec
or
mov
push
dec
jecxz
int3
mov
test
pusha
stos
fists
or
push
push
xchg
sbb
popf
mov
dec
adc
enter
mov
fmuls
in
test
push
mov
pop
cli
xchg
sbb
insl
sbb
pop
or
lcall
adc
stc
addb
xchg
popf
and
xchg
js
lcall
dec
adc
test
enter
mov
sbb
imul
lret
pop
pop
push
cmp
push
or
sahf
adc
push
imul
sbb
imul
add
orl
testl
pop
or
fs
adc
push
les
out
sbb
or
mov
inc
mov
add
decl
sbb
adc
sbb
fs
sbb
leave
incb
add
mov
xchg
stc
or
clc
or
fadds
jmp
cld
push
es
or
and
fwait
mov
les
call
insb
imul
cmpsl
movsl
lcall
or
or
cmp
push
pushf
xchg
test
or
sbb
call
add
dec
adc
in
or
fistl
repz
jmp
or
cmp
or
jmp
sub
adc
pop
sahf
pop
popl
aaa
out
test
adc
stos
insl
nop
mov
test
ret
js
mov
mov
fildl
pop
or
or
adc
cmpb
add
aad
int
lcall
xchg
in
sbb
cltd
loopne
push
xchg
or
dec
pop
add
or
movsl
lock
sti
pop
addl
adc
xchg
sar
lret
loopne
in
push
sbb
mov
xchg
pop
sarb
repnz
or
cmpb
lret
stos
jmp
or
jmp
jecxz
ljmp
or
xorl
jmp
decb
sarl
inc
sub
mov
fmull
xchg
lds
test
xor
sbb
clc
mov
stos
call
inc
add
add
cli
mov
enter
jno
cmp
lock
lea
enter
rcll
adc
or
enter
in
nop
jb
or
lret
cwtl
add
cli
sbb
ret
sti
mov
test
or
cli
adc
adc
fwait
mov
add
cli
or
test
dec
inc
ljmp
adc
xlat
lret
fildl
test
mov
add
sbb
shr
dec
enter
sar
adc
add
cli
sbb
pop
test
pop
lock
sbb
cli
ror
test
or
lret
adc
xchg
cli
pop
enter
push
sti
aas
lret
add
stc
inc
testb
dec
in
add
adc
inc
cli
test
dec
test
cld
ror
aam
sbb
cli
pop
enter
sti
or
dec
mov
push
cli
xchg
enter
fmul
fimuls
test
dec
sbb
sar
bswap
xchg
mov
adc
test
aas
mov
add
cli
inc
enter
dec
sti
sbb
pop
push
xor
mov
jmp
test
dec
sti
dec
ljmp
and
test
sbb
fcmove
pop
mov
inc
cli
inc
enter
mov
dec
sub
adc
xchg
enter
xlat
sti
fxch
fisttpl
inc
enter
pop
sti
or
mov
sbb
rclb
dec
icebp
divl
push
lret
sbb
cli
sahf
enter
inc
sti
or
lret
enter
roll
jmp
cli
sbb
inc
sti
inc
lret
repnz
enter
xchg
mov
rorb
jg
clc
jmp
or
jmp
popf
test
jmp
test
dec
enter
lret
cli
pop
enter
cmp
sbb
lcall
sar
ror
dec
mov
mov
enter
ret
ror
repnz
add
cli
adc
push
test
inc
mov
add
cli
pop
enter
push
add
lret
push
add
cli
lcall
lret
lret
jnp
xor
cli
jmp
enter
pop
sti
fwait
lret
inc
add
cli
inc
enter
int
dec
push
mov
add
cli
xchg
enter
sbb
pop
lret
fldl
cli
or
sti
dec
lret
iret
jae
push
add
cli
xchg
enter
fsincos
fwait
lret
jg
sar
or
jno
pop
test
adc
mov
or
test
sbb
xchg
enter
into
sbb
xor
dec
lret
push
add
cli
add
pop
test
sti
push
lret
xchg
add
cli
into
or
adc
mov
cli
jmp
enter
int
int3
adc
push
enter
pushf
sti
sahf
lret
rol
pushf
push
dec
pop
jmp
lret
fwait
add
cli
xchg
enter
btc
xor
push
ljmp
add
pusha
cli
lods
enter
mov
sahf
and
jmp
mov
add
xchg
inc
and
cmpsb
fistps
mov
fsubs
ss
mov
je
mov
inc
mov
mov
xchg
cmp
sbb
jle
pop
add
cli
push
enter
mov
mov
cmp
test
mov
mov
cli
sbb
sti
test
mov
mov
cmp
sbb
cli
test
mov
mov
cmp
lret
cltd
add
cli
pop
enter
clc
sti
fmul
mov
cli
xchg
enter
scas
sbb
stc
cld
stos
lret
mov
cli
gs
cmp
lret
cli
add
cli
xlat
enter
mov
nop
lret
or
mov
leave
cli
daa
enter
loopne
fmulp
pushf
mov
add
cli
jbe
mov
lock
sbb
mov
mov
arpl
and
fs
push
cwtl
sub
loopne
stc
sbbb
jg
scas
xchg
jmp
lods
gs
add
pop
mov
inc
fbstp
popf
dec
movsb
cmp
loopne
aas
sbbb
sub
push
xchg
fbld
std
in
and
sahf
dec
test
orb
test
std
aas
ret
jmp
movsb
loopne
or
fistps
ds
mov
fs
lods
loop
pop
dec
dec
pop
frstor
lcall
mov
mov
bound
sub
loop
fmul
jp
cmp
loope
and
out
and
dec
mov
sahf
sbb
pop
push
test
pop
pop
std
rol
rcrb
cmp
aam
cmpb
jmp
loope
dec
aas
push
inc
inc
adc
inc
push
jb
fxch
jle
lret
pop
shl
xchg
jge
and
les
sti
jle
sbb
es
inc
push
pop
fnstenv
inc
mov
or
call
push
test
testl
pop
js
or
sbbb
movsb
xor
adc
or
dec
xchg
dec
je
add
insl
bound
or
enter
and
pop
popa
lcall
loop
test
call
aas
xor
adc
sbb
xchg
popf
dec
and
cs
cwtl
cli
or
jmp
addr16
cmpb
insb
in
add
or
jle
and
pusha
ljmp
jmp
pop
push
fwait
imul
add
mov
push
mov
ds
mov
jmp
ds
xchg
stos
pushf
divl
insb
lahf
sbb
pop
xor
sub
jp
sbb
sbb
xlat
cltd
sbb
jp,pn
inc
sbb
cmpsb
xchg
out
lods
xor
inc
dec
inc
loopne
and
es
cmp
or
jae
lods
aad
adc
rcrb
pop
es
add
or
cli
stc
mov
sti
in
adc
cli
ljmp
mov
push
out
cs
add
jmp
stc
sbb
jmp
out
clc
adc
adc
rorb
inc
adc
lds
xor
jne
mov
enter
loop
or
test
mov
pop
cwtl
shlb
data16
in
fs
push
int3
lea
in
outsl
mov
es
or
push
out
xchg
xchg
mov
inc
mov
add
out
adc
popf
adc
sbb
jecxz
push
sahf
in
cmp
dec
sub
ja
mov
rolb
fs
in
adc
out
dec
mov
imul
push
jecxz
dec
adc
jecxz
wbinvd
in
pushf
jl
out
adc
les
sub
add
or
add
sbb
jecxz
jmp
in
cmp
sub
adc
shlb
lret
mov
ud0
jbe
dec
jp
mov
pop
sbb
jmp
fwait
jecxz
sbb
bound
add
mov
std
sub
jmp
jecxz
addr16
cmpb
xor
sbb
dec
out
lods
dec
adc
mov
les
test
loope
stos
shr
test
in
mov
or
icebp
in
mov
out
or
mov
push
mov
in
add
dec
fwait
jne
xchg
in
notb
xchg
ja
into
adc
sahf
les
push
mov
mov
dec
mov
movsl
repz
cmp
mov
or
push
or
sbb
sub
hlt
ss
xor
xchg
call
adc
test
notl
pusha
jg
sub
cmp
cs
mov
outsb
sub
dec
frstor
cmpsl
mov
cld
pop
xchg
je
adc
dec
pop
aas
add
icebp
out
mov
fisttps
xchg
push
hlt
xchg
jne
aad
or
fiadds
mov
cmp
mov
daa
jnp
in
in
test
rorl
rolb
dec
and
mov
mov
fdivs
sbb
aas
mov
or
fs
dec
lret
les
add
int3
or
adc
adc
or
dec
call
cmpsb
mov
test
xchg
out
cli
add
mov
ret
sub
in
push
paddd
loopne
mov
movsb
les
jmp
insb
lret
jo
add
insb
mov
push
or
loopne
imul
in
mov
jecxz
adc
in
mov
jmp
mov
jl
popf
push
fisttpll
xchg
or
bound
sub
into
scas
leave
stc
pop
insl
in
sbb
imul
popa
enter
pusha
mov
sub
push
pop
add
mov
dec
and
mov
or
jg
xchg
add
fdivr
lods
or
push
or
lock
movsl
lret
idivb
or
je
sbb
int3
je
fs
rcrb
out
sbb
dec
ret
in
sbb
or
add
into
lret
inc
sub
les
xchg
lret
or
xor
push
xchg
ja
aam
cmp
lock
rcrb
mov
lock
mov
dec
out
jmp
movsl
jl
hlt
cld
sbb
jl
mov
sub
xor
xchg
mov
push
inc
aam
lock
xchg
sbb
in
mov
xchg
aaa
push
push
addr16
aam
outsb
movsb
out
fs
add
movsl
xor
aam
xchg
adc
pop
cmp
mov
adc
sub
jbe
fs
inc
out
inc
orb
cmp
pushf
fwait
or
movsb
push
sbb
aaa
mov
pop
movsb
xchg
jl
sahf
daa
mov
cwtl
jb
push
xor
rorb
out
bound
mov
mov
pop
ss
iret
lds
adc
daa
add
inc
sbb
mov
sahf
rcrb
adc
inc
js
pop
sub
jl
or
xorb
sti
fmull
in
cmpsb
out
test
inc
dec
xor
stos
jle
add
movsb
je
lods
ds
sbbl
or
jmp
inc
or
loope
or
test
or
or
inc
or
or
or
or
or
pop
or
mov
rcll
sbb
cmc
add
icebp
nop
imul
push
jbe
bnd
aaa
xchg
gs
sbb
xchg
dec
sbb
sub
mov
or
movsb
lds
mov
pusha
pop
test
outsl
mov
enter
shll
andl
aas
dec
dec
and
movsb
xchg
adc
xchg
test
inc
movsb
mov
mov
imul
mov
and
in
popf
out
arpl
loopne
stos
sahf
pushf
in
jmp
addr16
les
sbb
mov
adcl
pop
push
or
push
jo
js
les
pop
mov
push
dec
mov
cs
or
repz
xchg
shlb
mov
cmp
mov
in
dec
imul
mov
mov
xor
mov
mov
xor
mov
dec
ss
mov
or
into
push
nop
mov
cmpsb
mov
rorb
clc
fcoms
adc
sub
xor
push
dec
xlat
aam
xchg
das
mov
dec
ss
xor
or
jbe
rcll
sub
adc
mov
add
push
clc
mov
les
jmp
in
shl
and
pop
insl
mov
push
mov
adc
aad
orb
loop
pop
or
adc
insl
mov
repz
xchg
pop
pop
or
jno
bound
jbe
push
aam
sub
mov
push
ret
mov
xor
jbe
movsl
or
mov
or
mov
add
dec
or
sbb
out
add
leave
in
mov
mov
xor
dec
out
gs
dec
push
aaa
push
xchg
pop
les
les
fldl
xchg
inc
ret
out
rcl
jmp
push
lret
pop
cmc
mov
cmc
cs
outsl
jbe
sbb
sbb
adc
push
adc
xchg
repz
or
aam
lcall
aad
or
in
lahf
xchg
or
fucomi
and
sti
sub
xchg
xchg
mov
es
add
out
sub
mov
out
inc
or
xor
mov
mov
add
mov
shll
jg
lods
decl
ja
fists
cld
loop
fdivr
xchg
xchg
sbb
insl
xor
iret
xor
nop
aam
jne
pop
addb
add
div
icebp
sbb
insb
jae
jb
or
pop
sbb
fcmove
mov
adc
or
xchg
repz
lret
xlat
xchg
outsb
lret
cmpsl
movsb
lcall
sub
adc
xchg
sbb
push
fmuls
lret
push
inc
adc
mov
or
gs
dec
andb
aas
xor
mov
sahf
or
test
addb
add
loope
loopne
je
daa
inc
leave
add
adc
dec
dec
dec
aas
jle
in
popf
fistps
sub
loopne
out
mov
mov
andb
iret
test
sbb
fldcw
scas
push
ds
or
pop
inc
jle
andl
adc
popl
mov
or
lods
test
cld
inc
and
mov
enter
fisubs
push
dec
lds
sbb
cmp
xorl
clc
gs
mov
test
lea
and
cmpsb
and
jb
jge
or
inc
jno
aam
loopne
add
pop
int
leave
sahf
stos
mov
imul
jecxz
orb
enter
mov
sarl
jle
aas
adc
ret
or
call
out
mov
in
pop
test
movsb
lea
and
leave
les
push
int
inc
out
fs
cmp
pop
sub
inc
es
movsb
test
das
aam
and
test
mov
adc
arpl
cmp
xchg
mov
jns
jo
jns
sbb
cmp
inc
ret
movsl
hlt
sub
sbb
dec
stos
or
jmp
jmp
call
lds
jmp
lret
cmp
cli
popf
enter
std
sti
push
lret
pop
add
cli
sahf
enter
sti
dec
pop
mov
add
cli
jg
lahf
test
add
and
inc
mov
cmp
enter
add
and
inc
mov
add
clc
sbb
into
and
int3
or
lods
int3
daa
mov
and
sub
xor
lcall
mov
jmp
stos
or
mov
loope
or
dec
enter
sub
jl
or
or
lret
adc
stos
scas
add
call
pop
add
in
leave
insl
test
mov
mov
int3
mov
sbb
enter
inc
lret
dec
int3
je
in
jmp
ret
mov
mov
adc
pop
push
inc
sub
adcl
add
mov
ret
push
lds
repz
inc
les
xor
cmp
test
mov
lahf
push
movsb
in
jo
or
or
sbb
or
push
out
mov
sub
hlt
mov
or
push
dec
adc
inc
cmp
test
sti
mov
sbb
and
insb
out
mov
and
adcb
pop
xchg
int3
test
jae
jp
out
inc
add
sbb
aaa
cwtl
or
mov
push
xchg
nop
mov
mov
bound
adc
and
dec
mov
nop
cmpsb
in
popf
out
or
cmp
push
enter
mov
add
sub
imul
or
lods
mov
and
and
pop
das
add
and
sbb
in
sbb
push
out
xchg
iret
inc
xchg
aam
adc
shlb
add
ss
or
repnz
imul
fidivrs
dec
aaa
ficoms
jne
or
fcomp
sub
sub
inc
arpl
pop
jbe
jnp
jmp
jecxz
lds
mov
jae
xor
out
sub
sbb
lds
out
sub
ss
jmp
jb
lds
repnz
mov
ret
mov
inc
or
arpl
jecxz
xor
add
lods
mov
sub
xor
cs
icebp
jae
push
cmp
rclb
inc
pop
jae
lcall
es
cli
adc
inc
mov
repz
and
pop
daa
test
jae
xchg
mov
stos
les
mov
pop
jmp
mov
and
shlb
xchg
xor
jg
test
iret
cmp
cwtl
mov
je
out
in
xchg
cli
rcr
sub
stc
clc
dec
jmp
dec
sub
mov
clc
dec
jmp
pushf
sbb
out
out
jecxz
jge
push
clc
jnp
push
adcb
jl
loope
dec
test
and
pop
rclb
pop
movsb
pop
sbb
int
sbb
xchg
and
shl
adc
sub
ljmp
push
and
pop
mov
insb
push
cmc
dec
add
mov
or
lds
iret
scas
in
insl
push
rcrl
xchg
mov
adc
mov
mov
mov
adc
and
xchg
xor
adc
jne
push
inc
scas
mov
repnz
xchg
out
aad
xchg
mov
subl
rcll
cmpsb
out
cld
movsl
aad
xchg
cs
ret
mov
adc
leave
lock
push
sbb
mov
cmpsb
cmc
pop
pop
mov
and
sbb
mov
add
shlb
adc
divb
xchg
xor
xor
xchg
repz
xor
adc
shl
cwtl
or
xchg
adc
xor
xchg
repz
out
and
mov
jmp
gs
imul
add
out
xchg
rcrl
sbb
xor
xor
sub
mov
add
push
jg
xor
shrl
pop
xchg
jne
repnz
jmp
test
clc
mov
jmp
stos
lock
mov
enter
dec
or
fucom
loop
cmpsb
dec
in
dec
pusha
mov
push
mov
inc
imul
pop
cld
ds
es
sbbl
loope
cmp
call
subb
jmp
push
cmp
movsb
lods
lret
pop
movsb
pop
adc
mov
sarb
dec
mov
adc
shlb
movsb
inc
sbb
int
and
in
dec
xchg
in
shlb
lret
dec
inc
jb
repnz
jmp
mov
les
xchg
inc
jmp
jp
adc
mov
sbb
inc
ja
mov
cmp
sub
mov
xchg
cmc
jae
mov
and
mov
out
addb
lds
lds
out
sbb
shrb
fwait
loope
inc
adc
ja
mov
out
sub
icebp
aad
inc
cld
push
notl
mov
add
insl
test
enter
addb
out
test
or
and
cmpsb
mov
xchg
sub
or
imul
lea
js
leave
es
cmp
push
out
dec
in
dec
sub
cmp
or
call
jmp
out
addl
fwait
add
nop
pop
popa
mov
xchg
mov
cld
sbb
shl
ss
out
or
mov
vmread
xor
sub
outsb
sbb
lods
adc
adc
fimull
adc
mov
adc
mov
mov
cli
or
jge
mov
push
out
cltd
or
jmp
in
and
mov
cmpsb
lcall
jmp
enter
jb
mov
in
test
sub
or
add
push
inc
rclb
inc
dec
jmp
or
cmp
xchg
add
rorl
jl
aam
xor
int3
in
test
dec
or
ss
call
ljmp
cli
adc
sbb
ljmp
mov
add
or
dec
ljmp
lret
hlt
push
pmaxsw
repnz
xchg
inc
mov
pushl
or
int
call
pop
orl
pop
pop
sbb
out
stos
xchg
call
mov
out
adc
cmp
adc
or
xor
adc
sub
insb
pop
daa
sbb
out
loope
in
lods
int3
sbb
push
or
adc
pop
jmp
sub
test
pusha
lea
push
or
adc
push
in
dec
adc
cmovne
and
rclb
mov
xchg
or
data16
imul
scas
sub
sbb
rolb
sub
pop
punpckhwd
lea
into
jns
lea
push
scas
sbb
in
xor
adc
pop
outsl
jmp
jne
sbb
jmp
adc
stc
add
sbb
cld
mov
enter
out
adc
pushf
pop
dec
stos
int3
imul
or
xchg
sbb
or
sub
push
fs
inc
or
pop
cmp
subb
mov
sbb
popf
and
jecxz
jmp
lret
add
push
sub
cmp
adc
ljmp
dec
xchg
or
stc
jl
pop
lret
jo
rclb
mov
mov
lock
cmp
sbb
test
adc
mov
sbb
test
sub
mov
cltd
lret
pop
or
dec
push
jmp
into
or
and
add
subb
mov
push
lcall
and
adc
mov
cld
sbb
sub
add
pushf
sbb
fiadds
scas
nop
stos
add
decb
inc
fs
cmpsb
sbb
jl
scas
scas
or
adc
sbb
addr16
jnp
xchg
roll
jmp
mov
xchg
and
or
cli
add
adc
fwait
cmp
jmp
es
xchg
ret
and
or
pop
popf
call
inc
mov
adc
pop
in
or
push
push
jmp
or
pcmpgtw
je
inc
rcrb
inc
out
test
ljmp
lret
pop
or
movsl
push
jno
add
adc
lock
sub
cmp
xchg
gs
sub
or
add
in
jbe
mov
adc
mov
and
lds
xchg
adc
test
out
pop
add
and
or
pop
pop
sarb
stos
inc
and
sbb
mov
pop
and
adc
cli
incl
popf
or
or
sbb
sbb
pushf
or
push
int
add
inc
push
sbb
sti
ljmp
adc
push
test
sbb
or
xchg
test
adc
or
inc
enter
pmaxsw
mov
or
add
xchg
pop
add
xchg
loopne
or
lea
sbb
rorb
sub
lea
aam
mov
shrb
out
sbb
add
lea
sbb
add
inc
mov
lea
inc
roll
push
iret
in
or
or
add
sbb
sbb
push
and
sahf
mov
add
adc
push
and
adc
adc
sbb
sbb
adc
inc
xor
ljmp
inc
add
mov
inc
push
insb
test
xchg
push
or
ret
sbb
int3
loopne
dec
and
test
push
jmp
jecxz
ljmp
test
adc
fwait
mov
in
pop
or
jbe
clc
cli
push
ljmp
mov
xchg
or
rorb
push
jmp
mov
mov
popf
push
jge
jmp
call
jne
jmp
ss
mov
adc
lcall
or
adc
insl
mov
xchg
pushf
cmpsl
jmp
aas
stos
add
sbb
xor
or
or
cld
dec
or
lock
call
sarb
xchg
call
mov
adc
or
pop
int3
insl
aam
int3
sub
out
cs
test
adc
pushf
sbb
clc
adc
xchg
mov
add
xchg
mov
jmp
mov
loopne
lret
in
pop
sbb
sbb
and
or
jl
out
xchg
adc
sub
push
or
cmpsb
and
xchg
pop
xchg
mov
mov
add
add
or
or
sbb
and
sbb
jecxz
add
or
adc
mov
or
jne
xor
ret
mov
push
out
xor
push
out
mov
cmpsb
ja
push
cmp
jmp
cmpsb
xchg
sbb
lock
xchg
mov
adcl
xchg
inc
bound
xchg
outsb
ffree
push
sbb
ljmp
jmp
inc
jmp
nop
lock
xchg
out
jp
sbb
adc
push
cmp
int3
jmp
sbb
sub
out
dec
ljmp
mov
dec
in
mov
sbb
or
lods
hlt
sub
pusha
sbb
ljmp
loope
push
add
setns
fs
sbb
or
sbb
int3
dec
add
mov
out
cmpb
insl
cld
pusha
stos
xchg
dec
insl
push
add
adc
add
sbb
mov
or
lahf
ljmp
int3
add
sub
int3
lds
call
push
xchg
ja
xor
out
add
inc
inc
jno
mov
std
cmpsl
inc
int3
sbb
add
jmp
fs
inc
int3
dec
or
add
pop
add
lret
jp
jne
out
adc
int3
xor
pop
sbb
lcall
out
inc
cmpsl
adc
adc
adc
sbb
or
lret
int3
movsl
add
adc
mov
addb
sbb
pop
addl
and
incl
jne
ljmp
add
in
cmc
adc
push
xchg
pop
mov
lds
pop
stos
or
insb
mov
or
push
pusha
sahf
or
sub
mov
sahf
mov
or
jnp
sbb
call
clc
mov
fwait
or
sbbl
call
sbb
jle
cmpsb
testl
or
push
pushf
and
mov
pop
inc
pop
lock
push
add
or
add
jne
adc
repz
jmp
fisttps
mov
or
jmp
fs
sbb
adc
pop
test
push
out
sbb
std
sub
xor
add
adc
ror
test
mov
mov
add
sub
sbb
lods
pop
sbb
lds
jmp
bound
lods
sub
adc
and
int3
daa
or
cmp
jmp
pop
mov
loopne
push
adc
pop
ret
testb
int3
lret
push
or
inc
or
pusha
inc
ljmp
mov
mov
pop
mov
add
cmp
popa
mov
dec
ficoms
orps
jns
lret
or
pop
adc
mov
adc
or
add
mov
sbb
mov
or
ljmp
add
sbb
xlat
daa
adc
pop
jne
outsl
stos
adc
sbb
xchg
add
or
or
stc
pop
adc
jne
popa
jl
aam
scas
xchg
ret
xor
or
adc
lcall
inc
push
les
push
adc
mov
lods
jl
movntq
add
or
imul
push
popa
ret
add
xor
aad
into
loopne
sbb
xchg
lret
mov
test
imul
out
stos
adc
aad
or
add
xchg
bound
ret
mov
fs
dec
je
add
or
cwtl
ficomps
dec
fs
in
sub
ret
out
mov
cmp
sbbl
add
sbb
into
ret
adc
std
subb
nop
pop
test
mov
dec
enter
adc
add
bound
sbb
add
push
dec
jl
fyl2xp1
in
in
cmc
and
sub
test
dec
cmp
sbb
lret
inc
cmpsb
mov
cmp
push
in
repnz
xor
cmc
pop
adc
dec
inc
test
mov
and
add
or
cmc
xor
or
sub
or
mov
mov
fstpl
ret
mov
aam
out
xor
rolb
and
out
test
or
dec
arpl
clc
or
loope
sub
dec
add
or
inc
movsb
mov
adc
js
cli
rcrb
mov
std
mov
ret
xchg
add
ret
pushf
pop
xchg
add
push
or
out
imul
in
xor
cli
pop
adc
ret
jmp
lds
mov
les
in
sbb
fstpt
or
inc
sub
adc
sbb
gs
push
inc
cmp
lret
push
sbb
mov
popl
call
and
mov
leave
pop
sbb
xor
mov
pushf
adc
and
jmp
nop
fisttpl
test
sbb
loop
movsl
or
loop
pop
or
and
push
pop
andb
push
test
sbb
testb
sbb
popa
jns
out
inc
test
fstpt
les
jge
sbb
and
loopne
cli
jmp
clc
add
pop
sbb
nop
and
adc
aam
add
sbb
add
pop
or
stos
lahf
and
rclb
or
lcall
jmp
pop
xchg
mov
sbb
leave
jmp
add
cli
pop
enter
test
sbb
pop
mov
mov
test
xchg
adc
adc
in
enter
mov
sub
push
lds
addr16
pop
sub
sub
push
data16
test
inc
lret
es
sbb
int3
inc
mov
ljmp
xor
sub
in
enter
hlt
sti
cld
lret
dec
lret
push
add
cli
adc
adc
mov
add
les
mov
mov
mov
add
xor
pop
or
dec
mov
pop
add
ds
addr16
lret
push
push
mov
or
call
mov
jg
push
or
dec
sub
test
fwait
jg
or
jmp
pop
sbb
mov
adc
or
testb
dec
psrlq
mov
das
rclb
push
sbb
filds
or
popa
int3
mov
push
bound
repnz
or
mov
scas
sub
add
xchg
or
mov
cmp
xchg
mov
mov
das
sub
sbb
jg
cmpl
or
adc
push
mov
movsl
lods
sub
es
add
push
pushf
test
mov
cmp
ss
nop
mov
mov
xor
xor
or
sbbb
mov
int3
or
push
inc
dec
in
or
jae
insl
fmull
inc
push
pop
cld
or
arpl
enter
rolb
dec
push
call
outsl
imul
push
aas
pop
inc
clc
or
pop
jns
lret
or
push
inc
dec
jmp
repz
insb
je
outsb
fisttpl
inc
push
pop
sti
or
fs
or
push
dec
push
out
out
jmp
jb
or
inc
pop
inc
imul
loope
pusha
jp
and
mov
sub
scas
mov
test
adc
push
enter
mov
adc
cvtpi2ps
push
les
or
or
cmp
test
pop
and
rcll
add
lahf
popf
add
cs
jno
adc
adc
jns
add
push
lds
stos
sbb
and
in
jmp
or
jmp
test
lods
jl
add
push
or
add
incl
out
cmp
add
dec
push
rcrb
negl
mov
lret
or
lds
xchg
pop
or
adc
adc
push
ja
jecxz
push
or
enter
test
mov
pop
ja
sbb
mov
and
sar
pop
cmpb
add
or
cmp
sbb
add
add
push
pop
movsb
dec
xor
and
xchg
insb
xlat
push
sbb
xchg
xchg
sub
xchg
cmp
sbb
pop
cli
push
stc
jecxz
push
popa
or
pop
adc
or
data16
ja
adc
xchg
adc
sbb
pop
notb
push
cltd
mov
in
xchg
sub
rorl
cld
jmp
mov
mov
pop
mov
lods
adc
sahf
test
aad
and
xchg
inc
cmc
call
mov
inc
sbb
jecxz
loope
sbb
aaa
call
or
lret
or
adc
xchg
pop
out
aaa
xor
ficoms
pusha
andb
lods
ss
cmpb
popa
fstps
pushf
in
aas
adc
addb
push
add
stos
or
mov
push
test
sti
sbb
push
flds
in
std
in
add
xchg
inc
add
lea
out
or
dec
mov
cld
mov
movsb
pop
jns
in
popa
orw
pop
pop
mov
lcall
jg
or
out
fwait
cmp
mov
or
imul
lcall
dec
or
or
add
or
out
stos
call
jmp
jmp
test
mov
add
cli
push
je
insl
xchg
cmpsl
cmpsl
sbb
subb
fists
jecxz
lcall
bswap
movsl
test
mov
adc
and
nop
lcall
outsb
sahf
cmp
lcall
fistps
and
inc
out
sub
insb
or
int3
fidivrs
add
sbb
add
xor
pushf
mov
in
sbb
sbbb
pcmpeqb
fisttps
test
out
or
jno
je
out
adc
xor
jg
pusha
mov
push
sbb
ja
call
sub
cmp
stos
inc
test
ret
pop
or
jl
sbb
orb
icebp
outsb
mov
dec
inc
add
and
jg
jns
into
inc
add
in
cld
out
ljmp
test
or
sbb
mov
lret
mov
jmp
ljmp
jne
test
xor
sysexit
xchg
or
out
pop
pop
or
sbb
xchg
dec
and
or
push
lea
fstl
call
lcall
push
add
or
test
and
add
daa
lds
xchg
in
je
jne
loopne
sub
sub
lods
fadds
mov
out
inc
or
jmp
mov
xchg
cmp
lret
add
stc
jae
pop
add
shlb
aam
sbb
inc
sbb
add
push
mov
popf
sbb
test
pop
add
arpl
mov
lahf
lret
int3
into
filds
or
push
push
dec
sahf
test
or
add
adc
dec
sub
xchg
cwtl
adc
cmpsl
aas
orb
push
into
and
adc
adc
sbb
lret
mov
sub
xchg
and
cmp
fwait
add
pop
xchg
aad
jns
or
xchg
sub
or
js
cli
test
xchg
test
fmuls
scas
daa
call
sub
stc
xor
daa
mov
das
inc
cmp
fmul
sbb
pop
push
ja
xor
sbb
jmp
repz
sbb
sbb
shrl
or
sub
imul
add
leave
inc
test
aad
rcrl
daa
or
add
add
adc
test
push
mov
test
mov
jae
adc
dec
jg
jbe
inc
push
inc
mov
mov
jg
loopne
sub
add
jecxz
jne
punpckldq
fsubr
imul
fst
pop
push
xor
fbld
xor
add
lods
and
in
sahf
hlt
jle
test
loopne
or
inc
test
pop
add
in
mov
ret
mov
ret
and
xchg
fldenv
loopne
mov
fs
push
aas
fidivrs
test
pop
push
push
jno
pop
sub
dec
inc
inc
fidivs
rolb
cmpb
lods
aam
mov
sbb
out
repnz
sbb
mov
orl
mov
and
mov
sbb
inc
test
jg
std
fimull
mov
sbb
addl
sub
lcall
out
jmp
mov
call
pop
or
out
push
inc
or
push
fcomps
cmp
push
and
cmp
test
enter
or
sbb
lret
test
dec
pushf
lds
mov
je
mov
mov
imul
mov
dec
cli
or
ret
out
or
jb
push
add
adc
ret
sub
nopl
in
imul
mov
out
mov
add
cmp
add
inc
or
sub
stc
into
rorb
cld
out
sub
int3
fwait
sub
cmp
fstps
sub
cld
sbb
or
push
orl
adc
out
push
or
cmc
adc
add
lods
test
or
lods
or
pop
roll
push
lret
and
push
int
pop
pushf
xchg
popf
dec
mov
pop
jo
or
iret
outsl
sti
pminsw
std
dec
movl
xchg
ljmp
or
adcl
sbb
out
dec
pop
notl
sbb
adc
call
mov
add
test
call
les
gs
or
in
mov
add
or
mov
sub
pop
sub
sub
loope
sti
lods
lret
int3
add
pusha
pop
adc
cmp
sti
mov
enter
fcompl
ljmp
push
jmp
pop
cmpsb
sub
push
in
mov
in
into
or
inc
sub
mov
rcrb
add
jecxz
mov
mov
or
les
adc
and
std
push
std
call
mov
mov
adc
adc
dec
lods
or
or
jl
in
pop
and
xchg
xchg
inc
jge
clc
push
and
insb
pop
sbb
add
add
xchg
jge
add
cli
sbb
cli
faddl
inc
push
jns
mov
cmp
push
xchg
pop
int3
mov
cs
push
out
std
adcl
xchg
mov
adcb
sbb
enter
icebp
xor
adc
in
or
movsb
sub
pop
addb
adc
sub
and
flds
std
add
or
add
nop
push
mov
jae
jg
stos
mov
mov
adc
or
sbb
mov
test
getsec
pop
ficoml
add
mov
add
xchg
mov
or
sahf
pop
rcl
incb
or
es
xchg
fistl
sbb
lret
mov
fwait
mov
fcmovb
push
jg
add
sbb
adc
out
test
lds
aas
jle
cmc
sbb
fcoms
adc
jmp
push
stos
cmpl
xchg
ja
xor
out
push
lods
leave
cmp
mov
sub
test
rcr
cmp
fwait
add
and
mov
fucompp
mov
outsl
stos
cmp
scas
fwait
rorb
sbb
int3
add
in
cmpsb
sbb
arpl
jp
mov
mov
repz
dec
stos
pop
out
push
add
jg
cmp
sbb
add
cmc
pushf
dec
or
daa
enter
push
lock
push
subb
mov
testb
adc
sahf
and
pop
lock
test
sbb
sahf
add
in
adcb
sbb
push
sti
sub
push
fstpl
sub
mov
test
sbb
test
fildl
pusha
adc
movsb
lcall
cld
add
add
or
ret
pop
fimull
mull
mov
pushl
or
add
adc
mov
int3
adc
ja
mov
jecxz
mov
mov
inc
and
rol
es
filds
or
movsb
lds
das
xor
push
inc
std
test
and
adc
jae
mov
sub
or
pushf
or
or
rorb
fisttpl
or
mov
mov
xchg
into
lods
call
cmp
mov
push
lock
pop
subb
jmp
lods
mov
daa
xor
and
cltd
or
sti
test
sti
movsb
mov
int3
xchg
pop
cmc
mov
call
mov
in
and
xchg
or
aas
pusha
jl
decl
mov
dec
das
lret
sbb
into
jle
or
sbb
add
add
orl
mov
test
add
add
pushf
jle
andb
inc
push
inc
lret
addb
mov
mov
cmpb
mov
mov
or
push
or
fmull
or
or
pushf
mov
adc
js
or
xchg
jns
or
or
and
sahf
in
add
addl
jle
xchg
movsb
orb
outsb
inc
outsl
ret
faddl
adc
xor
mov
jnp
dec
imul
lods
add
js
pop
adc
arpl
adc
sbb
inc
pop
out
push
lret
pushf
sbb
sarb
ffree
fbstp
sbb
mov
int
pop
pushf
push
cld
or
or
sbb
popf
lret
cmp
add
mov
add
out
pop
or
ret
rolb
cbtw
int3
push
push
xchg
pushfw
add
sbb
adc
add
jg
outsl
xor
pusha
xchg
pop
push
aad
daa
sub
jno
mov
add
inc
ljmp
and
xorb
pop
xchg
pop
ret
mov
jl
leavew
filds
int3
mov
inc
popf
pop
pop
test
shrl
fs
pop
mov
aad
xchg
and
test
pop
ret
pushl
inc
das
mov
es
pop
push
mul
add
inc
pop
or
push
jbe
insl
jle
out
enter
add
add
cmp
cmp
in
sbb
aam
repz
outsb
das
enter
cmpsl
jge
ret
and
cltd
pop
arpl
sub
jmp
jb
xor
rorb
xchg
ret
ds
xchg
call
in
mov
xchg
mov
stos
xor
adc
jne
inc
adc
mov
mov
fwait
lcall
dec
orb
aam
call
repz
add
cmp
xlat
mov
lret
inc
hlt
and
aas
cli
jmp
inc
xchg
inc
mov
pop
pop
andb
std
sub
fadds
cli
insb
jg
jecxz
cli
and
arpl
and
jmp
test
sbb
or
ficoms
mov
cmpsl
movb
test
mov
sbb
mov
or
and
ret
clc
jnp
hlt
pusha
fcoml
sbb
imul
pop
or
cmp
jmp
ljmp
mov
pusha
rcrb
xchg
ret
push
adc
imul
testb
dec
dec
or
repnz
ljmp
dec
in
add
lods
xor
jno
xchg
mov
pushf
daa
popw
pop
leave
loopne
or
adc
sub
or
es
call
add
mov
lods
lret
push
lods
sub
dec
sub
mov
dec
mov
insb
out
pushf
or
arpl
fsubs
xchg
faddp
mov
push
or
in
xchg
cmpsl
ret
lret
in
add
inc
jnp
or
testb
jg
jae
lret
mov
shl
out
shrb
loopne
in
sub
mov
rcrl
mov
mov
fnstenv
pusha
dec
sub
mov
cmpb
jl
xor
shl
xchg
xor
ljmp
inc
in
add
inc
fwait
movsb
test
mov
jb
sub
test
leave
cmpsl
inc
stos
xor
jmp
add
jnp
push
or
enter
sub
in
mov
test
pop
xor
mov
in
std
or
int3
sub
add
lods
push
push
ret
push
adc
adc
pop
call
xchg
cld
orl
mov
cmp
rolb
push
add
sbbl
je
mov
and
adc
and
cwtl
push
lods
sbb
xorb
test
add
add
add
test
orl
andb
pop
add
pusha
push
and
sbb
or
into
dec
test
add
bound
out
mov
jnp
sbb
test
stc
mov
add
adc
or
test
test
orl
inc
es
pop
add
icebp
add
and
adc
add
add
mov
and
std
int3
test
xor
aam
and
sbb
sbb
mov
inc
add
lret
orl
and
repz
mov
add
sbb
add
test
sbbl
mov
test
jp
push
push
mov
mov
adc
adc
and
aam
loope
cld
test
orl
loope
je
pop
add
cmp
mov
and
cmpsb
pop
sbb
adc
mov
mov
push
add
shll
or
inc
inc
or
push
add
pusha
add
and
adc
sbb
lret
lock
pop
mov
push
jge
sbbl
pop
inc
or
add
test
add
in
hlt
sbbl
add
mov
es
add
aas
xchg
mov
inc
add
push
lahf
sbb
push
test
push
shrl
cmpsb
mov
cmp
pushf
or
ljmp
mov
movsl
add
add
mov
es
adc
and
repz
or
inc
call
or
add
sti
pop
orl
inc
outsl
add
add
test
out
or
fistl
adc
mov
jns
cli
push
xchg
or
sbb
mov
or
and
incb
xor
xchg
lret
sbbl
pusha
sbb
add
push
testb
inc
adc
adc
sbb
or
add
or
sbb
adc
ljmp
cmpsl
sbb
sbb
mov
add
adc
sbb
jns
or
rorb
test
test
orl
aaa
in
mov
or
sub
jns
cli
in
cmpsl
xchg
pop
fcomip
lea
ret
sbb
and
jp
push
xchg
sbb
addps
or
cmp
jns
mov
add
rorl
lcall
push
in
sbb
test
pop
mov
mov
std
int3
test
mov
or
add
pusha
pop
movsl
add
add
popf
add
or
pushf
or
stc
mov
and
xchg
add
cmpb
push
mov
sbb
andb
adcb
mov
nop
aad
incl
add
mov
insb
test
mov
cmp
sti
add
sbb
add
rcrb
cmp
or
xchg
pop
cmp
test
xchg
sbb
jns
sbb
or
xchg
or
call
call
ljmp
add
or
xstore-rng
cmpsl
push
or
jns
int3
mov
pop
add
cmp
stc
push
add
call
add
add
ljmp
and
xchg
mov
or
pop
sbb
cli
sbb
nop
lods
ret
adc
adc
call
mov
adc
or
pop
out
push
sbb
lock
test
jbe
sbb
les
or
or
add
jnp
pop
les
push
push
or
add
push
add
add
or
jbe
ljmp
mov
push
push
mov
inc
push
into
adc
add
mov
or
sub
imul
or
add
fwait
pop
out
dec
mov
dec
cmp
sarl
push
mov
or
push
cli
jmp
hlt
sbb
add
sbb
push
call
call
call
es
sbb
addl
lahf
inc
sbb
test
lock
jb
sbb
adc
sbb
sti
adc
or
sbb
scas
lods
subb
dec
push
sahf
add
pop
jg
jl
mov
add
xchg
mov
cmpsl
incl
out
mov
push
and
out
or
mov
push
ljmp
adc
pcmpeqd
lcall
cltd
lret
pop
or
or
fs
ret
roll
add
or
add
or
pop
test
sti
fisttps
out
or
fcmovu
sti
jns
or
pop
or
mov
sbb
aas
xchg
mov
cli
in
test
std
jae
test
add
xchg
adc
test
or
add
test
out
or
pop
or
sbb
adc
push
call
lock
dec
add
jl
in
pop
sbb
add
xchg
and
or
adc
or
pop
adc
pop
push
iret
stc
or
or
or
mov
rolb
add
or
inc
sti
xor
lret
pop
pop
xchg
inc
or
add
or
push
and
lods
in
rcrb
mov
sbb
sbb
cli
pop
add
push
adc
jmp
mov
dec
or
jecxz
pop
or
cli
add
lods
lret
je
test
loope
mov
add
mov
pop
cmpsl
sbb
rcrl
or
sbb
sbb
dec
inc
adc
adc
ficoms
adc
fisttpl
lock
fld1
enter
fisubs
push
push
sbb
or
or
or
push
dec
adc
fistl
adc
add
mov
push
pop
or
test
lcall
ret
add
cltd
or
movb
in
mov
or
jmp
or
out
aam
mov
jl
pop
mov
je
aam
out
test
sahf
incl
mov
push
movsb
call
push
movsb
sbb
push
movsb
pop
adc
push
movsb
adc
push
movsb
sete
jle
or
adc
sbb
into
add
cli
add
decl
mov
xchg
sbb
sbb
loop
adc
push
and
out
pop
cli
lret
ljmp
adc
dec
adc
je
or
mov
or
dec
inc
ljmp
call
push
add
pusha
add
fisubrs
sbb
sbb
push
pop
jnp,pt
adc
inc
add
adc
orb
adc
hlt
inc
inc
adc
or
sbb
pop
pop
push
test
nop
add
add
inc
mov
adc
out
push
add
pop
lret
xchg
inc
fadds
jmp
push
add
cli
nop
enter
mov
add
aad
mov
sub
daa
out
push
test
inc
sti
lret
mov
enter
pop
sti
dec
lret
sub
cli
or
sbb
xchg
mov
enter
dec
sti
dec
lret
sub
or
push
pop
inc
add
pop
push
mov
inc
dec
jmp
mov
pop
out
or
or
out
or
or
or
out
or
or
test
inc
test
test
test
inc
test
test
test
inc
test
test
test
test
test
incl
dec
inc
test
cli
ljmp
inc
js
or
fstl
dec
add
mov
or
aaa
bound
push
cli
clc
mov
in
sbb
xchg
aam
adc
mov
nop
fs
mov
and
test
loope
orl
adc
inc
add
add
popf
lock
lcall
or
push
dec
test
loope
test
test
test
add
sbb
sti
jge
or
adc
jge
sbb
hlt
shr
dec
test
jge
jno
jge
call
sbbb
dec
mov
je
or
xchg
and
mov
or
repnz
add
add
sar
enter
pop
sti
sub
jle
push
cld
pop
jge
lret
add
cli
mov
push
mov
daa
ljmp
jl
outsb
in
lcall
sbbb
bound
test
push
add
add
fwait
fs
int3
or
or
push
add
xchg
mov
xchg
mov
push
inc
cmp
push
or
adc
or
in
sbb
inc
loop
pusha
sbb
cmp
ljmp
rorb
stc
or
orl
sti
dec
lret
loop
mov
jmp
cli
je
sbb
pop
pop
add
cli
push
movsb
adc
add
pmaxub
push
adc
and
test
cli
mov
push
test
or
add
out
add
decb
roll
sbb
add
push
sbb
int3
test
sbb
je
cmpsb
push
push
xchg
push
add
adc
movntps
cmp
adc
hlt
fsubrl
ret
roll
pop
push
dec
sbb
or
sbb
push
or
repz
test
lcall
sub
mov
test
mov
lret
cli
jmp
sub
add
mov
pop
adc
sbb
scas
push
jl
loope
nopl
mov
mov
xchg
or
xchg
mov
sbb
push
lods
loopne
int3
or
sti
dec
xchg
or
mov
adc
mov
dec
xor
shll
sub
cmpsl
add
add
sarl
je
add
sar
or
sbb
mov
push
and
test
cli
mov
push
nop
sahf
insb
mov
jl
sbb
test
inc
or
add
sbb
add
mov
or
xchg
adc
sbb
adc
sbb
std
add
xchg
icebp
mov
sbb
sbb
stos
jl
sbb
pop
cmpsl
add
push
inc
adc
add
addl
add
add
pusha
jmp
or
sbb
or
pop
add
or
adc
push
add
ja
adcb
scas
pop
sbb
mov
or
or
xchg
or
add
andb
bound
jl
sbb
xchg
add
add
adc
sbb
mov
psubq
adc
push
nop
sbb
push
fwait
test
adc
mov
popa
cmp
rclb
in
sbb
ficoms
int3
xchg
adc
aas
loop
test
pop
loop
xchg
inc
cli
adc
push
add
sub
fildl
sbb
sbb
add
pop
lahf
push
inc
adc
sbb
mov
sbb
mov
int3
inc
pop
or
adc
add
and
cmpsl
add
mov
add
and
xor
gs
sbb
adc
push
ret
adc
push
movsb
call
nop
add
add
test
cli
mov
sbb
lock
or
or
clts
push
push
pop
add
or
or
cmp
add
imul
add
cmpsb
lret
pop
adc
add
inc
sti
inc
sbb
loop
push
adcl
fwait
push
jge
jmp
mov
sbbl
mulps
dec
shrl
adc
dec
test
in
loopne
mov
sub
enter
sbb
push
sbb
movsb
fistl
mov
inc
test
push
fwait
std
jg
push
ds
push
fcompl
sbb
call
enter
cmc
sti
mov
xchg
mov
xor
dec
enter
jo
or
js
or
cmpsl
test
xchg
mov
mov
add
cli
enter
pop
sti
add
out
mov
test
cmp
inc
pop
or
lret
mov
mov
xchg
mov
xchg
mov
xchg
mov
mov
imul
in
or
or
jmp
xchg
mov
xchg
mov
xchg
mov
or
mov
out
shl
out
shl
shlb
fisubs
lcall
add
or
add
out
pop
in
leave
push
adc
jo
test
or
cli
rclb
pop
or
adc
add
cmovns
or
test
std
pop
sub
test
std
ljmp
push
inc
fcmovbe
sbb
add
pop
in
lret
cli
adc
push
repz
idiv
push
shl
out
shl
rclb
push
lret
imul
fwait
push
jecxz
push
sbbb
fwait
push
jle
mov
push
lcall
xchg
movb
stc
push
aam
sbb
sti
insb
lret
mov
cli
lods
enter
in
decl
and
call
loope
add
push
xchg
and
adc
or
sbb
mov
or
adc
notl
xchg
inc
adc
push
jmp
lahf
add
push
lahf
pop
test
fimull
ds
add
or
in
lret
call
orl
pushf
add
cmp
add
pop
fisttpll
incl
or
push
jp
pushf
sbb
push
add
pusha
pop
movb
pop
pop
inc
sbb
adc
adc
test
std
jns
xchg
or
or
aas
out
pop
cli
push
add
and
roll
xor
sti
icebp
or
sbb
adc
push
mov
push
and
test
cli
adc
int3
mov
adc
pop
cmp
stos
or
lock
test
cmp
add
inc
inc
sbb
cli
add
mov
movb
mov
or
sbb
into
add
push
out
pop
aam
sbb
sbb
or
add
adc
adc
cmp
nop
lret
rcrl
rclb
push
stos
dec
or
stc
incb
in
sbb
pushf
test
cmpsl
stc
sbb
sbb
or
fwait
sbb
sbb
sbb
push
fstpl
test
stc
mov
sbb
insb
mov
mov
mov
or
sub
sbb
ljmp
fistps
push
fwait
and
mov
call
inc
and
mov
xchg
movsb
sbb
repnz
sbb
test
mov
mov
or
push
call
lahf
add
repnz
jmp
sbb
pop
jg
mov
mov
repz
pop
or
sbb
lods
dec
pop
pushf
ss
cltd
push
or
or
add
add
sbb
sbb
sbb
int3
lret
ficoml
add
jns
xchg
adc
lret
pop
add
sbb
add
sbb
add
inc
adc
mov
nop
sbb
xchg
fstpt
repnz
pop
pop
mov
sbb
lahf
push
test
fimull
test
sbb
rorb
std
or
pop
enter
into
add
mov
jo
xchg
or
sbb
into
sbb
push
into
adc
es
adc
lgdtl
push
sub
pop
cltd
or
pop
push
sbb
or
aas
and
subl
add
notb
mov
fisttpl
mov
outsb
ds
sbb
rclb
jg
mov
push
and
enter
inc
clc
rclb
cli
dec
or
pop
mov
aad
popa
pop
or
push
jp
sbb
jne
push
pop
jns
add
sbb
jl
pop
clc
mov
adcb
adc
adc
jnp
or
xor
sbb
stos
sbb
call
xor
sbb
mov
xor
sbb
jle
xor
sbb
cli
sbb
cmp
ja
xor
sbb
repz
xor
jo
xor
sbb
in
out
shl
imul
in
out
shlb
add
fcoms
add
in
or
sbb
pop
rcrb
mov
gs
or
adc
nopl
es
fimuls
push
push
jnp
or
notb
cmpsl
sarb
or
add
adc
inc
push
or
fidivrs
or
sbb
mov
pop
cmpsl
pop
sbb
mov
pusha
push
or
pop
adc
push
add
pmulhw
mov
or
inc
test
incb
mov
pop
test
add
jo
xchg
jnp
ficomps
in
lret
lcall
adc
imulb
xor
add
jnp
adc
adc
scas
lret
dec
decb
daa
mov
push
add
inc
test
inc
test
lcall
sbb
test
test
test
test
test
inc
add
add
or
add
cmp
xchg
or
orl
out
mov
sbb
insb
mov
test
adc
pop
or
test
push
rorl
movhps
xchg
add
or
or
pop
adc
push
and
enter
int3
pop
push
inc
stc
mov
or
dec
or
cli
jmp
movsb
xchg
add
pop
mov
rcrl
adc
rcll
adc
std
adc
xchg
lret
or
or
pushf
xlat
aas
test
cli
add
in
cli
add
or
stc
add
or
cmp
cli
pop
xchg
pop
pop
ret
adc
push
and
out
adc
ret
xchg
push
mov
add
stos
fldl2e
jno
cwtl
jecxz
add
add
pop
sub
insb
push
add
sbb
pop
mov
cmpsl
in
leave
pop
adc
nop
add
nop
popf
ficomps
xchg
sbb
ss
inc
add
xchg
in
sub
sub
std
push
sbb
mov
icebp
mov
add
sbb
dec
push
or
add
test
ja
jae
sti
sbb
xchg
stos
pop
ja
popf
test
inc
add
add
or
std
and
test
loope
mov
mov
push
incl
std
cmp
or
jg
test
std
sbb
lcall
test
std
xchg
sub
or
push
adc
pop
xchg
nop
cmp
add
xchg
mov
or
push
movsb
xchg
push
movsb
add
ljmp
dec
sbb
ljmp
adc
sbb
sti
adc
push
pop
cmpsb
push
xchg
mov
pushf
sbb
ljmp
movhps
cwtl
dec
or
pop
shl
adc
add
add
push
pop
movsb
sbb
sbb
sbb
xchg
push
or
fmulp
lret
sub
or
test
add
negb
adc
ljmp
sbb
xchg
enter
inc
adc
push
in
sub
or
mov
arpl
cmp
jnp
pop
mov
mov
add
xchg
test
sbb
ret
add
out
jae
repnz
unpckhps
jo
test
adc
andb
xchg
test
test
test
test
test
test
sub
or
push
or
lret
or
or
add
add
push
fs
mov
sbbl
pop
sbb
pushf
mov
xchg
cwtl
mov
jecxz
or
xor
and
sbb
xchg
and
in
test
jo
gs
ss
or
jge
mov
repnz
pop
or
push
movsb
test
push
and
enter
into
sahf
cmc
sbb
pop
test
std
sbb
or
xchg
jecxz
or
adc
nop
sbb
jmp
mov
push
and
enter
cmc
incb
xchg
add
jns
syscall
mov
and
lahf
popl
fmuls
pop
and
mov
or
sbb
or
push
or
jnp
pop
test
jnp
xchg
cmp
stos
add
stc
or
sbb
mov
punpcklbw
pop
sbb
adc
out
or
or
xchg
call
pop
call
call
call
test
cli
int3
test
std
decl
jne
pushf
into
or
adc
or
mov
add
push
cmpb
arpl
dec
or
mov
and
orb
call
xchg
test
sbb
or
add
sub
sbb
cli
adc
cmp
incl
rcrb
jns
sbb
pop
push
add
call
daa
je
adc
sbb
push
sahf
movsb
sbb
movsb
sbb
adc
cltd
popf
cmpsl
hlt
or
fwait
push
rorl
pushf
push
cli
sub
cltd
mov
clc
leave
shr
cwtl
mov
or
push
or
sbb
mov
xor
mov
push
pop
test
out
std
ret
adc
cli
orb
xor
jmp
add
sbb
cmpsb
sbb
js
cli
fcmovne
sbb
or
push
scas
out
out
jg
adcb
lcall
cltd
or
cmpl
out
test
push
test
and
and
shlb
or
mov
mov
fisttps
pop
jle
mov
shl
call
lahf
add
in
mov
arpl
jg
mov
push
inc
xchg
xlat
in
rcll
popf
and
inc
pop
jo
sbb
rcll
insl
scas
fsubrp
popa
int3
mov
pop
jge
stc
push
std
loopne
or
aas
jno
fidivs
sarb
push
sbb
fsubrs
out
sub
or
mov
loopne
bound
dec
mov
orl
pop
in
gs
je
hlt
out
xor
inc
cld
sti
ret
ret
aaa
shll
push
lock
pop
inc
icebp
jp
inc
jg
jle
push
xor
enter
jg
push
fcomi
hlt
xchg
xor
test
or
add
push
add
pop
cwtl
adc
adc
add
add
sbb
test
and
rorl
cmp
dec
ret
cmp
inc
leave
pop
inc
jecxz
jmp
mov
jl
filds
outsb
inc
dec
dec
aam
xlat
in
jecxz
jo
or
mov
mov
fwait
and
out
pop
mov
mov
es
fnstenv
pop
inc
in
jecxz
rorl
cs
jb
cli
push
push
or
add
loop
arpl
xchg
add
xchg
xchg
inc
dec
dec
xchg
rol
ret
testl
xchg
mov
dec
orl
int3
ret
inc
mov
xor
adc
fisubl
hlt
mov
imul
fmul
jmp
or
or
dec
xor
fsubrl
pop
scas
jg
push
xrelease
mov
and
and
orb
out
cmpsb
inc
xchg
daa
lea
insb
xchg
int3
ds
inc
add
test
fxch
mov
mov
into
fldl
or
outsl
xchg
in
cmp
push
mov
mov
std
ret
xchg
inc
in
push
or
mov
call
push
std
mov
icebp
adc
mov
leave
pop
enter
aam
push
out
add
mov
mov
repz
mov
nop
mov
pop
outsb
jl
fwait
cltd
pop
inc
decl
xchg
fiadds
sub
inc
sbb
pusha
jle
divps
mov
cwtl
rolb
insb
fxch
inc
test
cli
mov
decl
rorl
test
push
cli
or
pop
push
jp
push
lcall
jl
push
movsb
add
gs
and
test
mov
adc
mov
cwtl
fs
mov
jae
jmp
lods
insl
or
fidivs
or
lds
in
xchg
pop
inc
inc
add
in
int
lcall
shl
or
fwait
mov
cmp
les
fistl
sub
ret
mov
fwait
mov
outsl
pop
sahf
mov
dec
cli
cmpsl
test
inc
jg
std
and
or
cltd
aas
jg
adcl
or
ret
inc
in
dec
test
fistps
mov
clc
sbb
or
aas
and
lret
aaa
ss
jp
mov
pop
jecxz
add
sar
or
leave
mov
dec
test
push
push
pushf
jnp
loope
daa
jne
push
or
xchg
int3
xlat
jp
sub
fbld
mov
jae
sbb
add
enter
mov
sbbb
cwtl
mov
sub
sbb
mul
dec
jl
or
lahf
pop
dec
or
cli
pop
inc
aaa
mov
cltd
dec
xor
int
or
nop
enter
mov
je
rcrl
cs
or
adc
pop
loop
fistpll
or
sbbl
fadds
mov
sti
lds
mov
repz
inc
mov
cmp
add
pop
pop
add
pop
je
pop
rclb
icebp
shl
jle
call
pusha
sbb
mov
push
hlt
push
les
push
jb
and
and
popa
adc
sbb
and
pushf
push
push
filds
lock
push
sub
lret
arpl
mov
xlat
sbb
fld
cwtl
xchg
cli
inc
mov
or
or
push
out
leave
shrl
ficompl
and
into
mov
lcall
push
fs
mov
mov
inc
mov
xor
rorb
pop
xor
mov
cwtl
cwtl
mov
loop
fs
out
mov
or
and
sbb
mov
push
cli
sub
pushf
xchg
int3
adc
ret
xorb
addl
dec
mov
filds
aas
add
xchg
mov
movsb
leave
incl
and
nop
sub
adcl
jb
iret
dec
outsl
push
sar
jp
test
push
inc
cmp
mov
aas
jmp
popa
mov
add
pop
push
loop
out
jno
xchg
pushl
jp
pop
push
pop
cmp
filds
subl
aaa
jb
lcall
mov
dec
xchg
jb
inc
mov
imul
add
dec
mov
cltd
mov
dec
add
imul
aaa
add
loopne
push
cwtl
fdivr
fs
push
mov
aas
ret
mov
push
sbb
cmp
cmp
shlb
in
repz
fdivp
pop
xor
test
or
ds
add
jg
mov
xchg
shlb
jecxz
jg
sti
in
pop
pusha
fildl
or
pop
adc
les
inc
daa
pop
sarb
enter
ljmp
in
mov
out
xchg
and
in
dec
xchg
mov
mov
dec
rorl
test
cmpsl
sbb
shl
or
mov
mov
sbb
inc
add
filds
sbb
mov
mov
and
scas
jg
les
jecxz
lret
fs
call
pop
xchg
pop
mov
mov
push
jp
sub
stos
push
mov
mov
or
lods
ret
and
mov
fisubs
adc
std
push
enter
lcall
adc
ret
fcmovb
jg
mov
lret
test
out
cwtl
sbb
xchg
inc
inc
repz
movsl
out
dec
repz
inc
in
int3
inc
lods
aas
leave
out
mov
pop
mov
leave
stos
adc
xchg
pop
or
jecxz
roll
je
xchg
adc
ja
or
cmpsb
dec
test
mov
fists
or
arpl
add
inc
mov
lods
mov
adc
addb
push
jnp
test
sbbl
push
or
or
mov
pop
filds
mul
ret
ret
popa
mov
loop
jp
lret
jle
and
sbb
ror
sarl
lret
cmpsl
add
jmp
xlat
ret
xor
in
out
xchg
shlb
or
stos
fimull
testb
push
push
daa
jnp,pt
lretw
dec
mov
xchg
movb
orb
push
cmc
or
ret
sub
pop
lds
xchg
les
mov
inc
arpl
sbb
push
jecxz
and
jg
mov
in
call
jne
and
push
cmpsl
mov
push
and
sbbl
inc
test
inc
mov
loop
and
mov
mov
dec
in
js
lret
or
jmp
ljmp
fdivrp
mov
mov
sub
mov
lret
repz
fs
xor
cmp
jp
fists
or
pop
sbb
les
repz
or
add
bound
inc
loopne
mov
ja
pop
enter
bound
push
sbb
enter
mov
pop
jnp
daa
popa
flds
pop
inc
ja
or
push
sbbb
movsb
add
mov
inc
jp
pop
std
cmpsl
nop
in
mov
xchg
cmc
adc
push
xchg
inc
rcr
xchg
mov
jl
clc
inc
call
mov
shll
pop
adc
inc
sahf
mov
fisubrl
push
fsubs
clc
inc
lds
pushf
pop
cltd
pop
xlat
xor
dec
les
adc
lret
out
sbb
cmc
dec
loopne
add
add
mov
sarb
sub
lret
inc
cmp
ljmp
fmul
orl
jmp
jae
adc
inc
mov
xchg
mov
mov
mov
sahf
sub
cwtl
dec
or
lret
out
std
mov
mov
add
in
repnz
mov
inc
mov
ret
test
orb
inc
and
xor
pop
push
inc
add
or
arpl
dec
add
int3
mov
cmp
dec
stos
or
loopne
mov
pop
popf
add
mov
mov
mov
pop
fcoms
and
jae
adc
js
mov
or
fadds
fsub
pop
push
cmpsl
and
ret
andb
xchg
std
add
push
xor
mov
push
push
sti
fs
dec
dec
push
mov
mov
and
inc
jl
inc
lret
or
sahf
xchg
shrb
jbe
aad
out
pop
lcall
xlat
dec
loop
idivb
int3
cmpsl
dec
xchg
mov
movsb
test
xor
imul
ficoms
mov
fcmovu
add
les
mov
aam
or
inc
lret
mov
arpl
push
fs
sar
mov
stos
sbb
sbb
enter
jl
pop
jecxz
mov
or
insl
pusha
mov
aad
daa
sub
fbld
push
loop
dec
mov
std
scas
in
test
repnz
mov
sti
lcall
jne
in
jl
std
or
addb
cmc
push
rcrb
sub
sbb
push
xchg
mov
mov
add
incb
stc
jo
pop
mov
and
mov
aad
lret
xchg
orb
aas
sbb
ret
in
sub
and
dec
or
nop
movsb
loope
and
mov
pop
mov
scas
fildl
fwait
jmp
movsb
aad
lret
data16
or
cltd
push
icebp
cmp
and
lret
mov
inc
mov
and
in
inc
jb
add
lea
jp
xchg
stos
testb
mov
adc
pop
mov
and
push
push
movl
imul
xchg
ret
xlat
sub
ret
aas
lret
dec
or
pmullw
lock
cltd
mov
or
mov
add
sahf
outsb
outsb
pop
test
cmc
jb
movl
inc
mov
push
rcr
lret
addr16
push
inc
dec
mov
andb
stc
sbb
sub
outsb
mov
lret
or
jg
int
scas
add
xchg
sub
jecxz
sub
fnstsw
sbb
dec
int
fdivrs
push
addr16
jns
outsl
std
lods
ss
push
add
xlat
ret
jg
jp
push
dec
out
jmp
cltd
push
loop
inc
mov
jp
mov
rcrb
enter
or
xor
lcall
imul
dec
int3
rep
cmp
mov
and
mov
ljmp
packsswb
rorb
lea
xchg
pop
test
jecxz
or
add
push
aaa
push
movsb
jl
in
xor
dec
or
jmp
sti
xchg
ljmp
adc
into
sbb
or
or
push
sub
mov
out
inc
call
test
or
mov
add
pushf
adc
int3
cmpsb
sbb
or
scas
lods
xor
sbb
jmp
mov
fwait
mov
adc
adc
cli
push
enter
call
or
repnz
sbb
sub
loope
ds
xchg
out
mov
ja
or
xor
dec
decb
out
in
loopne
ret
or
pop
mov
or
mov
stos
push
les
imul
loopne
inc
cmpsl
jmp
insb
incl
dec
ljmp
mov
jmp
pop
mov
std
stos
mov
sbb
fwait
add
or
in
push
pop
icebp
xor
jae
add
rolb
or
shlb
mov
xchg
push
jo
in
push
xor
repz
je
or
xor
mov
xlat
clc
add
add
ss
dec
adc
mov
push
out
aam
push
sarb
and
lods
adc
mov
or
jbe
adc
fwait
not
push
mov
jb
out
cmp
orb
iret
or
push
push
or
testb
push
cmp
cwtl
subl
push
or
inc
add
inc
lahf
adc
or
repnz
mov
mov
adc
pushf
add
mov
or
fidivrs
sbb
clc
rcll
xchg
dec
or
mov
push
sub
lods
lock
sub
pop
push
lds
sbb
lds
xor
xchg
push
xchg
roll
sbb
adc
or
mov
or
addb
sub
push
call
into
scas
jns
or
or
in
jp
cli
outsb
mov
mov
or
fwait
sbb
out
in
xchg
inc
jl
adc
je
daa
xchg
out
adc
jl
hlt
outsl
lods
or
ror
or
lea
das
js
lcall
test
or
or
in
inc
js
insl
mov
repz
mov
lcall
cs
add
notb
sahf
test
subb
sahf
ja
rcrb
sahf
ret
pop
xor
in
inc
push
jne
xorl
into
dec
jp
fisubrl
inc
pop
jne
sbb
push
pop
sub
out
cmp
outsb
xchg
sbb
add
orl
das
shll
pop
jg
and
in
jl
sub
test
mull
push
push
adc
lret
or
inc
andb
or
mov
outsb
cmp
cwtl
add
jno
sahf
xchg
out
into
mov
add
bound
sub
mov
ret
inc
andl
pop
sbb
clc
add
or
jbe
scas
and
xor
push
mov
or
cltd
in
stos
mov
mov
add
cs
adc
into
adcb
ja
lcall
mov
push
xchg
into
outsb
lods
or
sub
sahf
push
or
int3
adc
test
mov
int3
sub
fs
inc
mov
or
int3
inc
cmp
sbb
aaa
add
xor
sbb
jbe
pop
ja
jno
jbe
inc
ret
outsl
mov
sbb
lcall
push
outsb
inc
add
or
mov
mov
pop
fidivs
xor
scas
and
sub
and
int3
xor
insl
mov
inc
dec
sub
xorb
jnp
xlat
ljmp
add
jo
or
test
gs
pop
mov
aam
or
int3
add
lock
ds
add
or
xor
xchg
adc
adc
fs
dec
lcall
pushl
ljmp
pop
inc
imul
out
mov
mov
mov
xlat
mov
std
stc
mov
or
xchg
movsb
ret
pop
pop
xchg
fwait
mov
mov
jmp
stc
int3
cs
xor
sub
and
mov
lea
mov
fimuls
xchg
ss
xor
mov
int3
int3
dec
or
pop
jb
jle
and
int3
lcall
xlat
test
add
bound
ds
je
or
outsl
lret
push
cwtl
mov
cs
std
mov
mov
or
mov
test
icebp
mov
insb
mov
pop
int3
push
or
xor
call
or
cmp
sbbb
push
ja
or
ret
scas
sahf
lock
ljmp
push
jmp
test
sub
push
cmp
psllw
movsl
push
pushf
cwtl
and
dec
outsb
mov
mov
mov
iret
outsb
movsl
add
ret
xorb
or
xor
sbb
gs
sbb
lods
mov
jle
sahf
add
cli
pop
enter
push
cmp
int
mov
dec
pop
sbb
dec
cmpl
push
mov
sub
mov
in
xor
ds
insl
mov
add
int3
movlps
or
sbb
daa
jmp
jmp
cmpsb
ljmp
ljmp
loop
incb
jmp
sti
mov
mov
push
jmp
lret
fimuls
push
fisttps
dec
bound
xchg
js
jmp
popf
or
daa
cmc
not
fldenv
jbe
rclb
mov
lods
lods
aad
rcl
xor
in
add
push
sbb
jo
xor
psadbw
rorb
xchg
mov
notb
adc
shl
mov
into
int
je
shl
dec
dec
lcall
push
adc
dec
ds
inc
test
dec
mov
sar
sbb
push
in
xchg
test
mov
adc
dec
cmp
dec
mov
adc
xor
xchg
adc
mov
mov
sbb
cwtl
fmull
inc
or
das
push
nop
and
pop
xchg
ss
loop
fildl
pop
mov
mov
in
test
adc
pop
aam
or
pop
xchg
test
scas
aad
push
push
int3
bnd
xchg
outsl
push
push
sub
inc
leave
sub
js
nop
lret
or
mov
adc
push
xor
out
iret
mov
or
mov
mov
insb
xlat
out
rol
cmc
push
sbb
xor
push
xor
test
push
mov
adc
lret
sbb
sbb
into
fiaddl
lods
int3
pop
mov
and
cmp
ljmp
test
xorb
addb
jg
xor
mov
and
pop
xchg
je
cmp
inc
imul
jns
or
push
lret
sbb
cmpl
ss
out
add
call
sub
add
pop
dec
mov
loope
lret
hlt
xchg
jne
push
and
xlat
mov
and
xor
push
shl
push
sti
or
fisubrl
dec
ljmp
cmp
mov
add
ror
sbb
in
mov
xor
scas
jl
or
push
ss
sbb
jne
flds
sbb
mov
xchg
dec
push
fistl
or
adc
sbb
add
dec
xor
sarl
adcb
rorb
add
lods
ret
hlt
push
les
pushf
lret
adc
inc
dec
ss
push
lret
jl
xor
or
fs
je
fdivrs
mov
jl
mov
int
scas
or
push
mov
xchg
add
sub
cld
inc
sbb
mov
or
mov
ror
int3
test
int3
bound
ret
push
pop
or
mov
add
sbb
dec
orb
xchg
mov
push
aam
repnz
dec
cmp
int
dec
xchg
lds
xor
mov
cltd
mov
xchg
scas
icebp
or
scas
push
scas
mov
jo
into
popf
subb
mov
jg
and
adc
mov
push
cwtl
and
adc
test
push
scas
cmpsl
and
sub
mov
dec
sbb
or
or
iret
cltd
dec
out
mov
clc
inc
mov
xlat
mov
dec
enter
add
rcrb
les
push
je
mov
out
sbb
mov
lods
push
mov
loop
or
les
leave
cmpsb
mov
addl
fisttps
nop
push
repnz
loopne
andb
out
rcrl
and
mov
pop
mov
int3
subl
inc
push
fwait
stos
pusha
inc
or
sub
and
or
and
js
ss
inc
pushf
lea
sahf
xchg
nop
adc
mov
jmp
jge
mov
adc
lock
leave
add
xchg
dec
mov
push
test
sbb
jl
sbb
lret
sub
push
push
mov
dec
test
cltd
mov
rcll
test
rolb
mov
ja
adc
inc
sbb
loope
mov
pop
test
add
xchg
add
xchg
aam
fsubrl
mov
mov
sbb
mov
pop
jp
push
nop
push
xor
dec
xchg
lds
ss
scas
jecxz
dec
and
rcl
daa
xchg
out
clc
add
mov
and
add
pusha
and
mov
add
or
fiadds
dec
out
or
mov
add
pushf
and
jae
dec
mov
ret
or
mov
lret
enter
or
inc
rorb
mov
mov
fmull
mov
push
les
mov
push
or
add
in
sbb
adc
or
jns
sub
shll
adc
int
pop
bound
mov
sahf
mov
in
or
xchg
jmp
xchg
stos
call
or
jmp
xchg
fwait
ljmp
dec
or
inc
mov
jg
enter
int3
mov
mov
cli
jl
faddl
sub
push
or
out
pop
fidivl
testb
in
jb
sbb
xchg
icebp
addr16
cmp
fnsave
pop
addl
mov
add
dec
enter
cmp
lret
loop
test
test
imul
test
sti
sub
xchg
out
or
or
mov
or
mov
rolb
mov
add
cli
leave
sti
test
mov
mov
dec
test
sub
adc
cli
nop
enter
test
xchg
lret
xchg
add
cli
xchg
enter
sub
adc
add
cli
push
enter
cmpsl
sti
pop
lret
xchg
add
cli
sbb
inc
test
pop
mov
enter
cmpsb
sti
sbb
xchg
sbb
inc
test
sbb
mov
add
mov
aas
jno
inc
jle
ds
mov
fisttpll
mov
int3
sub
dec
lret
insb
add
lods
in
sub
dec
imul
je
andl
inc
mov
call
test
jmp
mov
data16
or
in
addr16
xchg
out
or
insb
add
mov
fiadds
loopne
or
test
sub
call
mov
and
or
mov
jl
int3
mov
outsl
stos
fcmovne
dec
add
int3
or
test
lcall
mov
sub
sbb
jmp
lret
lret
fisttpl
int3
push
and
call
jnp
adc
mov
dec
popf
or
cli
cmpsl
adc
nop
out
sub
lds
or
es
call
leave
lret
pop
int3
inc
or
stos
or
test
jmp
insb
jmp
dec
sbb
or
adc
leave
andb
or
int3
int
lcall
pop
sbb
int3
dec
rorl
daa
and
int3
fisttpl
lret
jp
or
insb
inc
or
push
mov
int3
je
or
or
inc
imul
es
lret
dec
sbb
mov
jno
xlat
int3
les
adc
sbb
or
imul
into
or
es
or
call
xchg
test
push
test
inc
jmp
daa
les
or
int3
mov
adc
jmp
int3
test
aam
sbb
cmpsb
fisttpl
std
xchg
mov
xchg
int3
pusha
test
push
int3
inc
rorl
sub
icebp
inc
in
or
es
imul
es
xchg
push
int3
movsl
cwtl
dec
ret
fwait
test
lods
gs
scas
and
test
sbb
test
int3
mov
into
leave
lods
test
push
int3
sbb
vprotb
mov
sbb
and
add
add
jmp
arpl
pushf
mov
add
mov
sbb
std
or
adc
adc
add
addl
dec
arpl
int3
cmpsb
and
sub
mov
sub
xchg
js
sbb
adc
pop
es
jg
shll
push
ret
dec
call
int3
decw
nop
test
sub
mov
bound
inc
ljmp
dec
int3
cmpsb
rorl
into
sub
int3
jmp
mov
adc
xchg
cmpsl
sbbl
inc
lret
imul
or
pop
int3
loopne
jl
orb
sbb
cmpsl
int3
jmp
int3
or
inc
clc
pusha
sbb
inc
addr16
and
inc
cmpsb
mov
add
lret
mov
lahf
ror
cmp
les
cli
or
imul
aas
push
jb
adc
sbb
sar
cli
or
lock
push
jmp
stos
jle
test
aaa
int3
lret
pop
sbb
push
std
cmp
out
int3
andl
adcl
scas
dec
call
es
xchg
int
int3
push
leave
fcmovnb
int3
std
pop
dec
mov
or
pop
push
int3
jnp
jmp
call
fmull
add
ror
pop
int3
les
mov
int3
adc
adc
pop
cmp
lcall
mov
cli
es
xchg
out
and
adc
adc
cli
int3
fistpl
stos
call
lret
or
leave
lahf
int3
test
orb
cmp
sbb
cli
jp
or
fcomp
pop
lret
sub
inc
scas
cmpsb
into
xchg
sbb
cmpsl
jnp
lcall
fmulp
out
cli
sub
push
and
int3
adc
std
es
mov
push
or
repnz
pop
call
cmpsl
imul
mov
rorb
les
cwtl
int3
and
or
pusha
or
int3
clc
clc
sbb
or
int3
xchg
pop
jmp
int3
addb
push
or
lret
call
sbb
int3
daa
sti
out
call
enter
les
xchg
push
int3
jnp
ja
mov
es
in
lret
call
movsl
mov
enter
xchg
int3
inc
mov
insb
pop
or
mov
insb
sub
jmp
xchg
test
or
sbb
int3
xor
nop
sub
out
add
push
mov
insb
out
pop
dec
lcall
imul
test
leave
sub
mov
mov
xchg
ljmp
inc
jmp
jne
mov
int3
cmpsl
in
lret
add
mov
jmp
int3
adc
imul
aam
mov
mov
xchg
cmp
mov
inc
xor
jmp
fwait
adc
repz
mov
shll
btr
cmpsb
int3
sbb
test
mov
inc
dec
adc
shrl
add
sbb
psrld
mov
xchg
or
jb
jb
sub
dec
test
mov
push
sahf
pushf
js
nop
mov
pop
adc
or
mov
leave
mov
jl
mov
sbb
xchg
jmp
stos
adc
andb
enter
or
and
push
subb
or
pop
and
test
xor
mov
jno
lods
call
in
test
or
int3
adc
adc
sbb
test
shlb
int3
call
jl
sbb
int3
sub
sbb
inc
push
int3
push
add
testl
and
or
movsb
shrl
inc
inc
es
sbb
sbb
add
xchg
out
cli
insb
call
push
out
add
les
into
push
out
dec
lret
scas
sbb
jg
imul
ret
cwtl
int3
movsl
call
dec
adc
fwait
cmpsl
cs
int3
nop
leave
cmpsl
fwait
push
sbb
in
or
mov
or
test
jmp
lods
pop
jb
int3
test
nop
cmpsl
xchg
pop
les
into
or
imul
fwait
out
sbb
and
data16
xor
iret
or
sub
int3
test
jmp
mov
or
int3
or
int3
cld
aaa
lret
fldt
int3
inc
jmp
insb
clc
jmp
andb
dec
xor
test
xchg
mov
or
jmp
or
pop
jmp
cmpsb
stos
in
int3
cmpsb
mov
cmpsl
or
int3
leave
dec
jmp
cld
mov
cmpsl
int3
imul
imul
int3
je
or
daa
js
test
movsb
jmp
out
sbb
sbb
cld
dec
rorl
std
inc
lret
push
es
sub
xchg
mov
int3
inc
les
fwait
jmp
add
jmp
cmp
leave
test
inc
int3
lea
jl
mov
test
mov
dec
testl
int3
addl
sbb
jnp
add
jns
sbb
aaa
and
enter
ret
es
test
insl
ret
int3
rorb
push
fcmovnb
int3
and
cld
dec
add
sub
int3
nop
movb
call
cld
faddp
leave
sti
or
or
int3
out
test
aad
and
sub
icebp
inc
repnz
adc
call
imul
int3
call
je
int3
test
icebp
mov
fwait
cmpsb
sbb
icebp
sub
adc
dec
les
xchg
fcmovne
subb
inc
mov
or
loop
xor
mov
int3
pop
lds
jp
es
movsl
cld
or
xchg
mov
add
mov
int3
jmp
int3
sti
data16
in
lret
xchg
inc
int3
movsb
rorl
or
lret
test
or
imul
mov
int3
mov
mov
inc
push
test
int3
dec
sub
sbb
push
call
mov
lock
insb
insb
daa
mov
data16
in
jne
shr
adc
mov
jmp
pop
push
mov
adc
mov
loopne
or
jle
mov
add
enter
mov
sbb
out
cld
xchg
sub
sub
pop
addr16
subl
pop
out
cmpsl
sbbb
test
sub
or
sub
jg
add
dec
es
pop
cltd
fiadds
mov
lret
pushf
outsb
lcall
data16
lret
inc
pop
mov
sbb
test
sub
cmpsl
int3
test
dec
pop
or
pop
inc
or
add
or
and
sub
mov
lret
cmp
ret
adc
or
enter
imul
sub
sub
leave
ljmp
sbb
out
data16
lcall
cmp
cltd
popl
push
push
mov
fwait
push
sbb
push
adc
mov
xchg
in
dec
or
testl
lcall
mov
xchg
sub
mov
out
dec
mov
ljmp
fmull
pop
sub
or
inc
or
or
imul
dec
or
orl
gs
lret
sbb
mov
xchg
or
adc
push
push
out
sarl
mov
test
pop
int3
or
or
or
pop
lahf
add
arpl
jg
outsl
out
aas
adc
leave
ret
mov
sbb
lret
daa
xchg
xchg
int3
addr16
sahf
push
test
xor
leave
or
adc
sub
mov
sub
fsts
mov
jmp
shlb
or
bound
mov
popf
dec
iret
repz
push
jmp
adc
ffreep
or
inc
adc
int3
or
xchg
sbb
add
dec
add
rorb
xlat
mov
push
or
jns
dec
fcompl
cmp
ja
add
push
jmp
call
movb
adc
add
inc
pushf
jecxz
fidivs
cld
dec
pop
mov
or
repz
repz
call
mov
ret
fadds
or
repz
int3
add
fcomp
fistpl
aas
inc
add
frstor
pop
dec
rcll
add
test
stos
sbb
dec
fcoms
dec
push
inc
dec
cwtl
add
dec
sti
or
dec
dec
fwait
pop
push
adc
sbb
popa
sub
add
addr16
adc
push
mov
or
enter
push
mov
lcall
addl
mov
call
in
sub
pushf
dec
or
cmpsl
adc
lret
imul
add
cmp
mov
pushf
rclb
in
mov
xchg
ljmp
or
jmp
push
adc
sbb
inc
sahf
imul
xchg
sbb
add
mov
or
cld
sbb
fwait
addr16
or
sub
inc
loop
pop
shufps
adc
mov
cld
xchg
jmp
lea
cld
adc
add
mov
or
pushf
jmp
cmpsb
insb
mov
add
fistps
push
jp
insb
mov
stos
dec
lret
addb
es
xor
pop
or
jmp
mov
lods
push
pop
icebp
fwait
adc
or
decl
out
int
imul
lahf
cld
push
ja
add
add
or
int3
ficoml
lret
lcall
xchg
imul
loopne
aad
sub
dec
push
mov
call
cld
insb
mov
mov
sub
sbb
sbb
pop
ss
lret
leave
xchg
mov
dec
jmp
pop
mov
sub
or
jecxz
add
xchg
pop
aas
in
fwait
ret
sbb
fstl
roll
add
aam
in
adc
iret
repz
jg
add
dec
stos
test
insb
push
push
xchg
shrl
lock
cld
out
les
movsb
adcb
rcr
movsb
sbb
mov
movb
xchg
test
mov
cmpsb
jle
xchg
or
lret
cwtl
or
mov
jbe
mov
leave
in
push
in
mov
mov
mov
cmpb
xchg
lret
int3
lock
mov
xchg
stos
nop
stos
jmp
test
push
arpl
js
mov
cmpsl
sbb
pop
or
add
adc
lods
nop
pop
mov
sbb
sub
mov
cld
std
pop
dec
or
cmpsb
sub
or
xchg
inc
mov
popf
push
inc
lret
dec
jbe
lret
or
xchg
mov
jmp
sbb
in
pop
scas
fisttpll
das
out
pop
subb
sbb
xchg
mov
push
mov
arpl
lcall
rcrb
test
adc
push
aam
fdivr
sbb
into
rorl
xchg
pop
or
mov
imul
or
adc
push
dec
rcrb
adcb
jl
dec
les
fmuls
frstor
pop
test
jl
mov
pop
dec
mov
dec
out
xchg
pop
cld
cmp
shll
jmp
or
shr
adc
push
nop
sbb
mov
jecxz
mov
imul
jmp
or
data16
add
rcrl
mov
mov
pushf
int3
xchg
or
and
push
mov
mov
pop
mov
sub
pop
clc
cwtl
lods
call
aam
ret
sbb
ret
sbb
dec
or
inc
add
call
inc
mov
push
dec
or
xchg
push
or
mov
jmp
inc
pop
dec
sbb
loope
loop
xchg
xchg
sahf
inc
addl
nop
sub
sub
mov
mov
cwtl
mov
movaps
cld
int3
inc
xlat
ja
pop
lcall
enter
dec
leave
or
rclb
mov
fwait
pop
or
jmp
sbbl
mov
inc
xchg
cmp
or
lcall
cmp
xchg
mov
iret
inc
sbb
fwait
subl
test
test
in
pop
jecxz
add
daa
jnp
push
cmpsl
mov
fcoml
or
add
insb
pop
imul
int
mov
mov
adc
push
addb
mov
lock
add
push
je
lods
push
xchg
cld
ss
or
push
xchg
lcall
pop
sbb
ficompl
dec
xchg
pop
xchg
or
mov
dec
dec
sahf
fmuls
add
movsl
popf
mov
daa
ficompl
ret
xchg
xchg
fiaddl
in
push
leave
lret
mov
je
lret
add
pop
sbb
incl
push
or
int
pop
ror
cld
xchg
sub
mov
hlt
popf
sbb
in
xchg
dec
lods
dec
mov
cwtl
insb
xchg
xchg
enter
mov
mov
sub
and
insb
xchg
push
mov
addl
inc
aad
faddl
addl
adc
adc
sbb
inc
pop
loope
add
sbb
xchg
add
pop
sub
mov
stos
xchg
imul
push
imul
mov
rcrl
mov
fidivs
js
pop
test
sbb
dec
sbb
dec
fcompl
fcmovnbe
jecxz
mov
imul
mov
lock
test
push
inc
imul
rcl
fstps
lret
adc
rclb
cli
mov
nop
sbb
inc
cltd
arpl
in
loop
push
call
mov
add
cltd
loopne
loopne
pop
adc
stos
sub
cmpsl
xchg
mov
sbb
mov
packssdw
cli
aam
jmp
add
pop
xchg
es
add
rolb
in
repnz
fisttpll
mov
ret
dec
imul
pushf
hlt
ret
mov
or
inc
push
int3
dec
xchg
mov
mov
xchg
adc
cltd
shll
push
xlat
stos
pop
jns
fcompl
nop
cld
sbb
out
or
testl
fwait
inc
sbb
push
xchg
out
popf
xchg
dec
adc
fildll
lds
addr16
cmp
xchg
ficompl
xchg
js
insb
fisttpl
or
xchg
add
inc
xchg
dec
push
leave
stos
jmp
xor
int3
pop
or
mov
or
cld
jae
pop
sbb
shll
imul
lahf
cld
sub
flds
push
pop
inc
sbb
sbb
dec
xchg
mov
push
add
in
enter
filds
rclb
stos
cvtpi2ps
int
mov
sbb
fimull
xchg
xchg
lret
push
int3
lcall
insb
call
pop
xlat
pop
rcl
push
dec
xchg
cmpsb
pop
sbb
or
dec
js
in
pop
repnz
jo
push
pop
or
cld
rolb
testl
fwait
push
or
out
pop
or
adc
movsb
add
rcl
or
int3
push
mov
add
pop
xchg
xchg
ret
sbb
test
shl
push
call
aas
sub
adc
sbb
mov
add
inc
mov
int3
ja
lret
mov
xchg
pop
mov
push
mov
pop
roll
aam
dec
gs
add
leave
mov
cwtl
jmp
jmp
insb
jg
fcoml
xchg
leave
or
ret
lret
bound
rcrl
mov
or
test
ret
xchg
dec
push
lret
ret
orb
mov
mov
or
xchg
imul
pop
push
aaa
enter
push
pop
cltd
rol
fnstsw
stos
xchg
adc
push
sbb
mov
aad
push
lret
subl
cmpl
mov
push
push
or
or
cld
fmull
mov
mov
enter
mov
mov
call
sahf
cltd
pop
insb
xor
scas
ja
or
pop
cld
aam
sti
push
cmp
negb
or
out
push
pop
or
pushl
jg
daa
or
xchg
or
sub
loopne
out
dec
ret
pop
or
fmuls
roll
add
addb
loop
call
hlt
push
test
lret
adcb
imul
in
les
pop
sbb
test
lock
push
xchg
fmulp
faddl
push
mov
dec
out
add
test
dec
xchg
add
or
call
cmpl
pop
sbb
out
xchg
inc
xchg
inc
xchg
aam
dec
out
xchg
int3
jbe
dec
mov
mov
jbe
test
out
out
xchg
mov
add
cwtl
int3
fwait
leave
ss
mov
in
xchg
arpl
add
xlat
lods
lcall
mov
sub
cld
ret
fnsave
inc
inc
push
sbb
jmp
add
and
lcall
ret
sub
dec
jmp
int
cltd
je
sub
jg
mov
jecxz
mov
fucomp
shll
popf
leave
dec
mov
jmp
leave
xchg
filds
mov
aad
or
incl
adc
mov
sub
flds
fcmovnbe
pop
pop
sbb
push
addb
ficoml
xor
jnp
pushf
mov
scas
dec
add
or
sub
inc
or
sub
cltd
sbb
addr16
test
push
push
or
mov
sbbb
add
daa
push
hlt
adc
cmc
cltd
popa
pushf
xchg
ret
aam
inc
inc
push
mov
imul
or
pop
dec
dec
sbb
fsubr
lret
out
loopne
mov
imul
sbb
call
les
pushf
sbb
lods
test
push
aaa
fstps
dec
xchg
inc
sub
or
push
rorb
dec
lcall
in
hlt
push
cmpsl
jmp
pushf
mov
mov
loopne
mov
imul
in
jmp
test
mov
cltd
bound
out
xchg
or
nop
fdivrl
dec
pop
lret
or
cmpsl
mov
push
push
pop
fistl
daa
loopne
xor
sbb
or
mov
leave
jne
loope
cltd
add
in
pop
or
mov
xchg
jl
mov
dec
lret
les
or
xchg
ret
pushf
ret
stos
mov
add
and
jg
sub
iret
mov
test
sub
cmp
or
int
lds
arpl
cmp
inc
push
sbb
inc
data16
dec
daa
test
add
push
ret
imul
or
or
or
fwait
dec
jb
stos
lret
and
cltd
dec
push
xchg
test
or
xchg
push
xchg
adc
roll
cld
fistps
push
or
fmull
int3
ud0
mov
faddl
repz
dec
outsb
test
faddl
aam
add
out
inc
out
movb
fsubrl
sbb
cmpsb
xchg
lods
dec
xchg
or
inc
mov
sub
mov
adcl
xchg
rcr
aam
stos
nop
nop
addl
imul
insb
shr
nop
iret
push
or
call
inc
or
sahf
frstor
add
lahf
js
sbb
rorl
insb
lret
mov
dec
cwtl
jmp
cmpsl
xor
adc
mov
or
mov
pop
add
rsqrtps
rolb
sub
push
adc
rcr
or
xchg
push
mov
dec
test
lea
push
push
cmp
mov
xchg
dec
jp
lcall
mov
mov
fcompl
les
idivl
add
popa
push
add
adcl
or
lret
sbb
and
jg
xlat
roll
call
adc
dec
enter
pop
dec
dec
jmp
mov
lret
dec
add
jmp
jb
adc
add
mov
sti
dec
ljmp
les
add
lret
ror
or
cltd
mov
dec
aad
xchg
push
xchg
adc
outsb
aad
sbb
dec
aam
sub
pop
or
mov
push
out
or
pop
addr16
dec
js
pop
push
testl
sbb
shll
cwtl
arpl
test
aam
stos
iret
dec
jmp
out
faddl
bound
iret
cmova
jg
push
sub
mov
mov
popl
sub
sbb
leave
xchg
add
inc
imul
sbb
lcall
sbb
dec
jg
stos
xchg
je
xchg
sar
int3
testl
aam
inc
mov
leave
xchg
push
adc
imul
orb
int3
lret
xlat
pop
decl
mov
fistl
shlb
xchg
or
push
push
dec
imul
lret
mov
xchg
inc
xlat
test
xchg
or
insb
rol
test
dec
fimuls
adc
icebp
inc
lret
cltd
cmp
dec
inc
stos
daa
sbb
fcomps
sub
xchg
add
hlt
pop
mov
push
data16
xchg
or
adc
pop
test
pop
jae
stos
inc
sbb
mov
xchg
jp
mov
inc
cwtl
add
pop
sahf
mov
shrl
push
mov
enter
imul
mov
ret
dec
push
out
push
mov
cld
pop
add
in
out
or
or
cwtl
push
or
fadd
fcoml
cld
rolb
loop
nop
addb
push
adc
add
inc
inc
ja
add
xchg
adc
add
aad
repz
sarl
xchg
dec
sub
jmp
sbb
pushf
push
lock
iret
sub
mov
fdivs
mov
lret
inc
pop
lret
inc
test
bound
push
xchg
popf
fildll
cwtl
sub
lcall
pop
test
mov
test
lock
sbb
shlb
cld
popf
mov
lods
mov
push
shlb
pop
stos
mov
inc
cwtl
lret
inc
sbb
cwtl
sbb
sbb
pop
roll
jg
mov
sub
test
cltd
pop
pusha
mov
adc
xchg
popf
popf
stos
mov
clc
adc
or
pop
fistl
push
mov
fistps
jmp
into
or
sub
cmpsb
sub
jmp
mov
addr16
lcall
or
orl
mov
pop
int3
pushf
ljmp
dec
orl
dec
fildl
jnp
in
popf
push
mov
cwtd
out
shlb
push
sbb
mov
push
add
imul
add
aas
dec
push
imul
mov
xchg
les
jmp
out
ret
xchg
or
push
dec
push
push
imul
es
mov
mov
mov
addb
push
add
sbb
out
ss
mov
loop
lahf
mov
add
dec
imul
rorb
lds
mov
imul
cli
or
mov
or
add
dec
ljmp
push
and
data16
jl
dec
aas
pop
ret
or
mov
jg
or
icebp
ljmp
dec
dec
or
mov
push
lahf
jecxz
shll
push
insl
js
aad
dec
pop
imul
inc
push
imul
imul
jecxz
jmp
lret
pop
mov
test
sub
mov
insb
jp
dec
enter
sub
enter
mov
inc
push
jecxz
aas
fs
xor
imul
gs
xlat
or
push
popf
pop
mov
dec
inc
icebp
imul
jmp
mov
mov
sbb
test
mov
test
push
xchg
pushf
sbb
imul
add
imul
jg
lcall
dec
loop
pushf
imul
add
es
pusha
dec
aad
or
dec
jns
add
dec
sbb
xchg
or
in
les
int3
mov
es
adc
xlat
dec
jmp
xchg
sbb
stos
dec
jmp
subb
in
in
jmp
push
imul
fistl
roll
or
mov
enter
adc
dec
cli
fstpl
negl
jnp
imul
lahf
imul
imul
test
or
jle
pushf
mov
mov
out
stos
inc
into
es
push
pushf
pop
mov
or
dec
mov
sub
jns
mov
jmp
xchg
insl
push
or
mov
in
sub
and
les
call
insl
das
dec
mov
mov
dec
dec
leave
or
repnz
aad
or
inc
dec
rcrb
stos
jge
pop
jmp
insb
test
xchg
and
xchg
fisubs
inc
push
subl
out
mov
fisubrl
jmp
push
xchg
enter
inc
mov
xchg
xchg
xchg
inc
mov
ljmp
es
mov
dec
test
imul
js
or
xchg
or
es
sub
out
cmp
js
xlat
aam
pop
mov
sbb
lret
test
jle
xchg
dec
test
dec
push
int3
sti
leave
int
mov
xchg
or
inc
not
pushf
imul
sub
xor
inc
leave
popf
imul
in
leave
les
imul
mov
fistpll
sahf
rcll
or
pushf
sbb
inc
imul
jmp
mov
inc
imul
clc
imul
inc
pop
push
inc
inc
xchg
jecxz
or
imul
pop
shl
lret
inc
pusha
or
sahf
jg
les
in
xchg
mov
test
inc
fiaddl
push
pop
imul
push
xlat
mov
xchg
enter
or
lock
insl
mov
test
hlt
fwait
or
mov
mov
daa
inc
sbb
shrl
add
out
or
and
leave
fldt
imul
push
xor
aad
testb
mov
dec
arpl
fcmovnb
adc
sti
mov
lretw
pop
ret
mov
stc
rcl
or
testl
out
sub
pushf
mov
inc
in
test
inc
out
add
dec
popf
cli
xchg
pop
jp
and
out
pushf
inc
sahf
lea
xchg
inc
out
dec
dec
stos
enter
ret
imul
rcll
mov
xchg
call
sahf
inc
and
mov
in
or
out
push
pop
mov
mov
inc
push
sahf
or
dec
or
dec
xor
int
je
dec
repz
repnz
mov
cwtl
shlb
add
xchg
sub
repz
sub
ja
inc
cmpsl
mov
dec
in
mov
push
stos
fadd
mov
add
andb
mov
ret
sub
mov
nop
mov
inc
leave
cltd
imul
xchg
push
mov
inc
mov
push
inc
mov
pop
pushf
cmp
pop
cmpsl
es
mov
out
jecxz
aam
jno
jmp
sub
nop
stos
enter
orl
pop
mov
filds
ljmp
ficompl
imul
xchg
push
out
sbb
sub
fcomps
out
inc
push
lods
inc
gs
into
fld
enter
lds
jg
dec
leave
or
or
or
dec
xchg
mov
push
les
inc
xchg
or
sub
xchg
ficoml
clc
dec
stos
js
pop
jp
or
cmpsl
ret
fsts
jns
ret
jecxz
pop
shl
sbb
testb
xchg
fcomps
loop
pushf
mov
scas
pushf
aas
sbb
fisttps
imul
out
xchg
adc
push
mov
scas
shl
xchg
xchg
mov
jp
push
push
test
lea
lret
orb
test
dec
inc
lret
pop
gs
sti
sbbb
shl
xlat
les
les
push
mov
jge
dec
inc
fwait
jno
cmc
sbbl
in
dec
and
xchg
fwait
jbe
clc
xchg
jl
xchg
adc
or
mov
lret
sbb
or
ret
loope
out
inc
xchg
dec
push
jmp
jmpw
mov
add
loopne
add
leave
lea
pop
jne
fistpl
jmp
enter
sti
loopne
jmp
enter
mov
aas
jmp
loop
ss
aaa
dec
and
mov
test
ss
addr16
cld
pop
testl
dec
mov
cld
cmpsb
ds
loop
jmp
lret
fldl
cli
push
enter
add
lahf
mov
sti
sahf
lret
inc
add
cli
dec
rolb
mov
pusha
jp
ret
or
mov
sbb
inc
adc
push
xor
ljmp
sbb
or
and
xchg
popa
push
lea
mov
divb
insl
mov
shll
xchg
ja
out
xor
xor
mov
sbb
shl
xchg
aaa
dec
or
cmp
pop
insb
mov
xchg
xor
xchg
xor
push
dec
xchg
xchg
cwtl
adc
xchg
cmpsl
xchg
mov
or
add
mov
out
ror
sub
repz
rorb
pop
inc
movsl
mov
test
add
ss
stos
enter
xchg
data16
call
add
push
xchg
test
aas
sub
ret
jmp
lds
xchg
enter
push
pop
sti
or
or
or
enter
adc
adc
adc
push
mov
add
cli
sbb
sbb
popf
cli
push
enter
jg
add
orb
enter
add
add
add
cli
or
or
cmp
cli
adc
xchg
test
cltd
mov
add
cli
push
enter
cmp
lret
mov
cli
mov
jmp
test
mov
add
cwtl
lcall
enter
fs
inc
lret
add
jecxz
ret
enter
arpl
inc
lret
add
cli
ret
test
and
rcr
push
xlat
loope
pop
mov
cmc
inc
and
std
push
push
mov
incb
cli
mov
pop
sti
ds
std
add
add
and
in
sub
popf
mov
shlb
cli
popf
mov
sub
inc
int3
addr16
inc
xchg
hlt
ret
cmp
jb
push
cmpsl
mov
popl
movb
mov
lock
test
nop
es
inc
cmp
data16
xchg
cmpsb
adc
in
out
gs
pop
lock
mov
dec
mov
jl
mov
and
sbb
cmp
mov
pop
in
or
pop
and
test
cli
data16
nop
cmpsb
faddp
movsl
in
and
push
sbb
push
sbb
push
sbb
pop
cmp
or
pop
and
test
cli
inc
adc
nop
sbb
in
mov
pop
and
test
cli
inc
adc
nop
sbb
in
mov
pop
and
test
cli
inc
adc
nop
test
adc
mov
div
hlt
addr16
fidivrl
xchg
ffreep
push
les
imul
rcl
jl
ret
pop
sub
inc
adc
xchg
loope
dec
sub
xchg
repnz
dec
mov
mov
dec
test
mull
adc
scas
hlt
dec
push
push
jb
clc
inc
pushf
pop
icebp
or
lds
nop
aas
pop
sub
js
nop
or
xchg
and
aaa
xchg
xchg
mov
cld
push
sbb
test
jmp
decl
daa
bound
enter
and
filds
clc
xor
adc
mov
popf
subl
dec
ljmp
add
cli
xchg
enter
int
pop
lret
sbb
cli
sbb
test
dec
sti
or
mov
enter
into
sti
mov
out
mov
test
adc
dec
lret
outsl
add
cli
scas
pop
sti
iret
lret
out
test
sbb
xor
jo
test
cli
push
enter
sar
mov
lock
adc
cli
xor
xchg
test
sti
jno
popf
mov
enter
mov
icebp
ljmp
add
cli
xchg
enter
jb
fwait
lret
popf
add
cli
add
rolb
adc
mov
push
test
xchg
lret
mov
pop
cli
ror
pushf
test
push
sti
adc
orb
enter
mov
xchg
lret
mov
cltd
into
or
aam
jmp
pop
cli
or
adc
push
lret
jne
sbb
lcall
add
cli
cmc
enter
xchg
sub
push
or
jl
jbe
adc
sti
push
lret
pushf
add
cli
or
sti
or
xchg
mov
xchg
aam
lcall
cmp
mov
adc
inc
or
rclb
cmp
pop
xchg
mov
rcrl
xor
mov
out
pop
push
add
negb
adc
scas
xchg
loopne
and
xor
cmc
insl
out
lods
addr16
outsb
ja
adc
das
cmp
or
fsubr
mov
fimull
or
loopne
cmc
xor
mov
xchg
lods
push
cmc
sub
adc
xchg
int3
mov
out
jb
lret
pusha
xor
xor
cmp
add
xor
add
xchg
xchg
popf
pop
mov
dec
xchg
adc
dec
lcall
dec
or
inc
mov
add
fildl
jmp
leave
mov
in
fs
rorl
clc
mov
or
fistpl
bound
sbb
or
mov
add
push
sub
push
int
xchg
movsb
cwtl
jp
sbb
test
repnz
insb
mov
dec
pusha
mov
les
add
adc
bound
jo
pop
pushf
xor
cmpb
sbb
roll
or
add
ret
xchg
fcom
mov
lret
xchg
mov
scas
mov
setne
cmp
mov
inc
fmull
or
repnz
setb
cwtl
fisttps
inc
outsb
xchg
or
xor
push
ret
lcall
into
dec
nop
in
jge
repnz
js
dec
add
sbbb
adc
out
xchg
and
and
cmp
mov
adc
sbb
add
divb
in
inc
scas
fiadds
sbb
rsm
in
leave
mov
push
mov
mov
out
mov
adc
clc
test
or
or
js
or
jnp
test
test
ret
test
test
repz
dec
add
add
mov
repz
sbb
cltd
or
inc
out
lret
or
add
lfs
xchg
pop
fiaddl
shll
dec
adc
mov
leave
jne
or
jl
sbb
mov
mov
mov
inc
or
xchg
les
push
lcall
fwait
lret
sbb
mov
xchg
outsl
inc
adc
xchg
dec
xchg
pop
fmulp
int3
test
push
adc
push
inc
adc
lret
mov
adc
jmp
fimull
or
dec
call
in
cwtl
push
adc
orl
test
push
repz
dec
push
rcrl
lea
jg
or
ret
xor
jo
mov
xchg
loope
adc
lret
cmc
out
mov
or
not
int
jo
shrb
mov
or
jne
jb
push
loop
filds
add
mov
add
or
cli
xchg
jecxz
adc
push
pushf
fdiv
cwtl
xor
jnp
xchg
adc
je
push
add
lcall
ss
int
ret
mov
mov
xlat
aad
jle
lcall
lahf
jbe
in
fmull
outsl
add
xchg
mov
sti
icebp
xchg
ds
mov
mov
sbb
test
xchg
sbb
jns
xchg
add
jae
pop
stos
mov
dec
stos
jno
cmp
clc
fisubrs
sbb
pushf
iret
sbb
lret
jl
orl
sub
popa
sub
mov
sub
push
das
imul
sbb
stos
xor
sbb
push
fdivs
push
imul
lods
jne
pop
push
mov
lcall
mov
xchg
shlb
addb
mov
mov
sti
or
and
add
loopne
ror
loop
cmp
sahf
shr
pop
mov
enter
adc
adc
add
call
les
xchg
xorl
fimuls
inc
xchg
in
jmp
inc
stos
or
or
repz
xchg
xchg
sbbl
jb
insl
adc
daa
fs
adc
add
mov
mov
addr16
or
or
push
stos
add
mov
cmp
ret
pusha
into
stc
ret
pop
int3
negb
inc
outsl
ljmp
sbb
inc
loop
or
pusha
sbb
ljmp
push
jmp
ljmp
enter
sub
mov
push
ljmp
push
mov
or
lret
or
enter
pop
or
and
adc
sbb
push
sbb
ljmp
scas
notb
in
ja
or
jmp
les
add
ljmp
add
bound
or
pop
pop
add
int3
xchg
dec
mov
or
or
xchg
fwait
or
adc
push
add
pushf
je
aam
ret
or
aam
loop
sub
pop
sahf
or
xchg
mov
cmp
mov
fiaddl
or
adc
les
inc
iret
ss
repnz
or
pop
pop
inc
rorb
xchg
lret
sbb
call
sbb
rcrl
and
add
mov
pop
mov
add
adc
xchg
push
or
xlat
stc
fsubr
or
addr16
dec
out
jge
jg
mov
fs
arpl
lock
jb
or
in
in
orl
jmp
jp
xchg
cli
xchg
enter
lcall
add
cli
add
dec
nop
mov
mov
or
mov
xor
ucomiss
add
js
xchg
in
push
or
mov
push
xor
pop
sbb
or
mov
or
push
mov
push
add
push
or
push
loop
push
or
or
pop
xor
or
dec
out
rcl
or
scas
rcrb
sbb
pop
push
or
add
cwtl
or
inc
push
loope
push
xchg
out
mov
xor
jbe
lret
ja
clc
adc
loopne
cvtdq2ps
jge
mov
push
sbb
mov
or
jmp
inc
mov
fdivs
xchg
cld
xor
jle
mov
adc
mov
mov
nop
out
mov
adc
add
repnz
xchg
or
test
mov
mov
or
repnz
fwait
or
xchg
rorl
sbb
push
mov
sbb
mov
add
add
test
jl
les
cltd
int3
mov
pop
aad
jl
or
jne
mov
or
xlat
call
jp
jno
sarb
push
shlb
daa
incb
repnz
std
pop
xchg
popf
and
mov
arpl
test
mov
test
jno
sarl
fadds
cmp
and
xor
scas
loop
or
imul
pop
out
dec
das
addb
pop
adc
xor
mov
fildl
mov
int3
sbb
dec
or
jmp
fs
push
sub
test
cmp
jbe
xchg
jmp
scas
ljmp
pop
stos
push
sub
cmpsl
sbb
aaa
test
add
sbb
inc
pushl
arpl
fdivrp
or
and
and
and
and
xchg
and
adc
xchg
fistpl
fiadds
push
ds
dec
movsb
or
stc
inc
dec
or
add
fbld
add
shlb
shrb
mov
xchg
adc
inc
les
subb
or
test
mov
std
inc
iret
fstl
mov
cwtl
cmpsl
add
and
test
movsl
or
int
ljmp
and
fistps
mov
jns
xchg
icebp
mov
jg
add
in
cmpsb
inc
add
dec
andl
and
scas
push
mov
testl
loope
sbb
jne
jb
add
dec
stc
out
sbb
jecxz
stc
mov
rorl
and
sbb
outsb
out
in
out
out
cmp
inc
sub
in
dec
or
test
cmp
sbb
xchg
pop
inc
lret
add
les
jge
cld
int3
cltd
gs
mov
pop
xchg
cmpsl
jns
lcall
add
shlb
jb
data16
addb
pop
or
sbb
cmp
xchg
push
ret
cltd
negl
fidivrs
lea
cmp
shlb
sub
push
jnp
xchg
or
mov
or
sti
popa
sub
insl
loope
dec
add
sub
adc
mov
call
xchg
sbb
pop
ljmp
jl
add
int
xchg
popf
ret
fbstp
incb
shld
nop
ret
int
push
mov
sub
ja
fisubl
pop
sbb
sbb
sbb
mov
sbb
mov
or
aam
inc
and
lock
in
int3
dec
sub
add
cli
or
mov
or
or
or
or
and
mov
sahf
std
mov
pusha
and
inc
pop
xor
or
or
push
pop
in
ret
cmpl
lcall
mov
and
dec
loopne
test
out
add
jmp
cli
test
add
pop
lret
or
xor
ret
mov
add
cli
adc
nop
test
xchg
sti
adc
xchg
mov
add
cli
adc
xchg
test
sbb
pop
sbb
sbb
sahf
enter
add
or
mov
add
js
adc
dec
lock
das
popf
add
enter
jmp
sub
mov
or
in
orl
adc
sub
lcall
mov
or
adc
nop
movsb
fiadds
stc
xchg
orl
pop
or
and
out
popf
lcall
ja
sbb
jo
ficoms
jge
or
cld
stc
or
orl
pop
mov
test
pop
pop
or
clc
sbb
cwtl
cli
cmp
sbb
or
push
or
mov
test
std
aas
add
or
js
cld
cmp
lea
sbb
hlt
in
rorl
sbb
or
add
cli
in
push
cmp
fcoms
and
pushf
mov
sbb
loop
xor
roll
adc
jl
mov
push
adc
lds
test
lret
mov
out
or
test
pop
inc
or
fadds
adc
movsl
es
ljmp
add
sti
xchg
stos
daa
repnz
sbbl
jmp
decl
mov
push
sub
std
or
mov
lea
into
cld
sub
jb
dec
mov
mov
sbb
pop
xchg
cmp
cmc
mov
imulb
cmp
mov
or
jmp
and
push
ds
in
mov
out
jmp
insb
or
inc
int3
ljmp
inc
sbb
icebp
sbb
stc
les
lock
mov
ljmp
mov
push
loop
enter
push
fwait
adcb
stos
enter
xchg
sti
dec
lret
imul
lret
insb
add
cli
dec
enter
cltd
sti
or
sbb
stos
enter
sbb
mov
add
cli
ljmp
dec
lret
sub
cli
enter
test
sti
mov
test
mov
inc
rorb
sub
jne
and
or
out
fimull
pop
test
in
cmc
xchg
pop
pop
pop
lret
xor
pop
add
mov
movsb
or
lds
js
int3
dec
cmp
jmp
enter
sbb
pop
lret
add
cli
mov
out
test
add
lret
inc
add
cli
jge
faddl
ror
int3
outsb
mov
call
test
fdivrp
pop
lret
mov
je
ror
iret
test
add
lret
filds
cli
pop
enter
push
sti
dec
lret
imul
lret
cli
inc
enter
cmp
testb
stos
int3
push
or
loope
adc
or
add
pop
adc
or
imul
ret
ret
or
xchg
add
or
sbbb
loope
stos
mov
add
int3
xor
push
and
add
pop
xchg
xchg
or
add
mov
out
aam
in
bound
orl
xchg
mov
sbb
adc
jmp
imul
ljmp
jmp
pop
incb
cmpsl
mov
add
xchg
imul
push
insb
dec
out
stos
mov
imul
pop
dec
movsb
cmp
std
cli
sub
ficoml
mov
lret
sbb
dec
inc
mov
jne
xchg
sti
loope
ds
fcoml
jmp
xchg
loop
jmp
sti
jg
mov
lret
add
sbb
or
or
cmp
pop
inc
adcl
lret
add
dec
mov
xor
xchg
sbb
add
mov
int
pop
mov
mov
loopne
mov
lret
mov
or
xchg
push
jmp
test
clc
outsl
xchg
push
not
mov
wbinvd
prefetch
jmp
popf
fisttps
jo
pop
and
jmp
pop
xor
dec
sub
jnp
aaa
pop
adc
dec
outsl
cld
lret
fdiv
xor
test
xor
fstl
pop
push
adc
and
mov
jl
bound
in
sub
call
popf
les
or
xlat
loop
clc
or
into
out
pushf
or
or
xlat
push
jle
sub
scas
cmp
or
fs
xchg
xor
cli
dec
pop
push
sbb
mov
inc
inc
imul
pop
repz
arpl
les
sub
push
outsl
mov
gs
adc
sub
or
es
insl
mov
or
and
jp
sub
sub
sbb
mov
ret
xchg
push
xchg
mov
gs
xor
xadd
jnp
aas
lret
outsb
or
jmp
ss
or
and
nop
xchg
sub
or
jg
sub
jne
pop
scas
adc
in
fnsave
lcall
rclb
loopne
ljmp
orl
lcall
lods
mov
mov
fnstenv
sqrtps
or
ja
divb
das
js
xchg
hlt
movsl
out
mov
loope
in
pop
mulb
rdmsr
dec
or
fidivrl
pop
test
js
in
sub
cmp
jge
clc
nop
xchg
sbbb
inc
mov
test
ds
gs
mov
adc
repnz
fmull
insl
xor
or
notb
mov
pop
lods
push
push
or
push
stc
jle
or
decb
or
in
cmp
sub
and
js
sbb
or
ret
loope
or
inc
lods
xchg
mov
cmp
mov
jge
adc
pop
xor
and
test
or
pusha
test
insl
in
cmp
dec
lcall
push
rclb
stos
jno
adc
imul
dec
lds
or
mov
cwtl
and
adc
insb
add
cmp
mov
cld
out
jecxz
mov
insb
pop
lods
stc
mov
mov
xor
and
cmp
add
sbb
xchg
mov
insb
pop
loopne
ret
scas
insb
lods
cmpsb
fsubs
dec
out
mov
shrl
out
call
mov
hlt
push
std
cmpsb
hlt
test
or
xchg
mov
or
jl
push
sub
mov
jge
stos
or
pop
push
adc
pushf
push
cmp
and
insb
out
or
insb
and
insb
cmpsl
sub
mov
push
dec
jmp
or
jmp
loop
fimull
or
and
mov
xchg
lret
ret
add
xchg
fscale
out
fsubr
lcall
or
dec
filds
jecxz
sti
sub
mov
or
sub
into
dec
or
mov
leave
popa
mov
inc
out
adc
mov
xchg
add
sbb
jg
aad
sub
addb
insb
inc
aaa
and
call
push
enter
popf
sbb
mov
mov
push
enter
loop
push
push
sub
fs
les
add
sbb
leave
xor
xchg
insb
add
and
addr16
cwtl
cltd
inc
sbb
roll
daa
inc
rol
xchg
pop
aas
inc
inc
push
sub
out
insb
arpl
or
movsb
cmpsb
inc
faddl
or
jae
cltd
int3
data16
aas
stos
fidivrs
pop
movsb
int3
and
mov
add
bound
imul
mov
js
mov
and
cmp
xor
loope
jp
in
idivl
cmpb
add
cmp
mov
lret
sub
push
jmp
es
ljmp
cmp
stos
sahf
imul
xchg
inc
js
inc
inc
cmpsl
call
jle
add
loope
mov
cmpsb
or
sti
ljmp
add
inc
mov
jl
cmp
sti
pop
mov
sub
ficompl
mov
das
ja
mov
pop
stos
adc
cmpsb
call
test
lods
sbb
in
fmull
ljmp
push
mov
dec
cli
sbb
or
add
fwait
in
add
or
out
or
aaa
or
cmp
ljmp
jbe
pop
add
adc
stc
jmp
sub
test
ljmp
push
cli
mov
adc
jle
mov
or
ds
add
std
lret
xor
mov
test
std
or
cli
stos
enter
adc
insb
and
adc
sbb
or
out
rolb
push
stos
int3
xchg
test
or
mov
sbb
cmpsb
mov
ljmp
mov
add
cli
push
enter
dec
test
sbb
push
cld
add
loop
js
gs
add
decl
cli
ljmp
sti
push
lret
adc
cli
adc
jmp
lret
test
enter
add
fs
push
out
ljmp
out
enter
jno
dec
adc
adc
lods
lret
add
call
xchg
div
or
or
jmp
rolb
sub
add
add
sub
pop
movsb
sbb
pop
sub
adc
adc
jmp
or
lea
cmp
pop
and
sub
pop
movsb
dec
sbb
int3
in
sbb
sbb
lea
movsl
or
adc
movntps
cmp
or
sub
pop
movsb
add
ljmp
sbb
sbb
sub
pop
movsb
adc
movaps
call
adc
pop
movsb
pop
into
add
add
mov
pop
sbb
and
xchg
mov
or
call
call
ja
xchg
aaa
push
or
enter
in
aam
mov
add
mov
sbb
ret
xchg
xchg
push
lret
add
add
cmc
setb
cmp
xchg
setl
or
push
jbe
hlt
inc
call
sub
or
or
adc
lcall
adc
adc
adc
adc
or
push
ror
add
add
decl
pushf
mov
out
or
sbb
insb
frstor
jno
int3
int
or
xor
iret
mov
push
or
cltd
adc
or
add
cld
xchg
sub
iret
or
rclb
wbinvd
outsl
ret
xchg
sbb
xchg
xchg
call
insb
xchg
xchg
mov
inc
push
jg
cld
add
call
scas
jecxz
sbb
test
pop
jnp
dec
in
sbb
add
enter
pop
test
or
xchg
enter
mov
sbbb
pusha
add
push
shll
push
bound
push
inc
and
inc
ljmp
mov
and
or
call
stc
sbb
jns
movsl
push
das
lret
int3
mov
dec
cs
or
loopne
push
cmpsb
or
in
dec
inc
xchg
inc
inc
xor
and
add
ret
pop
sub
mov
mov
push
sub
cmp
cmpsl
movsb
mov
out
xor
push
arpl
filds
call
add
xor
test
xor
push
imul
out
pop
xchg
lds
xchg
cmpsb
mov
cmc
and
mov
or
decl
loopne
pop
mov
push
dec
iret
or
pop
cmpsb
aas
xorb
pusha
push
in
icebp
inc
nop
add
inc
push
or
mov
nop
das
pop
dec
ficoms
xor
pop
lcall
fwait
sahf
mov
test
or
jmp
push
addr16
test
int3
dec
mov
or
arpl
or
imul
ja
call
adc
loop
hlt
fcompl
movsb
cli
jmp
enter
cmp
jmp
cli
jp
add
repnz
icebp
int3
insl
cli
jmp
or
cmp
pop
pop
sub
xor
dec
xchg
lods
lea
clc
call
test
jmp
popf
mov
dec
xchg
jo
sub
jmp
fs
jge
subb
add
cli
and
xchg
push
and
in
dec
mov
jmp
stos
mov
insl
or
pop
and
repz
movb
cli
in
lock
mov
push
call
dec
out
mov
adc
les
inc
loopne
jmp
sub
mov
mov
addl
into
adc
jmp
test
inc
and
test
pushf
sbb
jl
sub
mov
jmp
or
test
sub
sbb
xor
sbb
mov
cli
cld
or
dec
push
add
lea
mov
xor
std
in
add
cltd
inc
sub
or
repz
negl
inc
mov
jmp
lods
cld
out
call
sbb
sbb
popf
int3
sbb
sub
or
mov
in
dec
mov
addr16
sti
sub
sti
sub
cmp
subl
imul
test
push
jae
ret
int3
mov
or
mov
shrl
mov
in
adc
push
sbb
sub
imul
sub
or
lods
push
ret
mov
sub
push
cmp
xchg
sbb
gs
shl
add
cltd
mov
ret
inc
add
out
sbb
addb
mov
sbb
inc
cmp
or
nop
adc
into
jno
in
push
inc
and
test
je
es
sbb
pushf
or
or
in
push
add
push
add
or
cs
pusha
add
ret
lcall
cmpsl
add
rorl
test
repnz
push
aaa
add
test
mov
mov
movsb
pop
jb
sbb
loopne
test
mov
or
cld
cs
fadds
jge
cli
add
or
stc
sub
loope
ss
in
icebp
or
xor
add
xchg
aam
mov
mov
wbinvd
inc
jmp
mov
and
dec
sub
adc
cmp
pop
fwait
sbb
mov
fisttps
cli
pop
pushf
adc
or
adc
out
sbb
mov
adc
mov
ret
pand
movl
lret
mov
sbb
dec
cs
repnz
mov
or
les
cltd
aaa
jp
push
sub
mov
out
or
outsb
add
mov
sub
sub
dec
leave
jl
das
sahf
add
ret
add
andb
mov
ss
or
jl
adc
fisttpll
aaa
add
cmpsl
or
into
icebp
shrl
roll
jle
and
cmc
push
sarl
add
pushf
cmp
je
push
and
fmuls
cmpl
fidivrs
add
add
cmp
cmc
xchg
lcall
aad
enter
ds
fisttps
sub
or
movsl
nopl
daa
loop
dec
adc
add
subl
mov
push
sub
mov
xchg
sbb
pop
lods
xor
push
in
pop
xchg
jecxz
adc
stc
or
stos
ss
add
jg
sbb
sbb
add
push
int3
dec
clc
dec
sub
test
movd
add
xchg
add
add
cs
lahf
add
push
inc
repnz
add
mov
out
loope
xchg
les
popf
add
js
test
mov
cld
fcmovne
and
and
or
mov
shl
in
dec
fs
call
ds
in
jbe
cwtl
cmpsb
sub
mov
sarb
jnp
xchg
sahf
or
sub
dec
cmp
sub
dec
and
dec
add
arpl
cmp
clc
sub
sbb
sub
outsb
fisttps
dec
add
fsubrs
mov
sub
icebp
cs
fisttpll
adc
mov
cmc
adc
enter
call
jp
fmull
cli
sbb
fsub
push
dec
xchg
fstpt
dec
bndstx
lcall
aad
fwait
sub
fildl
adc
adc
mov
sub
or
std
and
cld
sub
mov
xchg
adc
xor
loope
out
mov
sub
jmp
pushl
pushl
test
dec
jbe
push
jg
add
jg
add
dec
sbb
lcall
dec
lcall
and
jns
adc
enter
or
lret
push
fwait
cmp
adc
les
xlat
add
cmc
nop
add
imul
jl
es
sub
push
sub
pop
shrl
xor
in
subl
loop
in
jmp
dec
sbb
mov
ljmp
insb
test
roll
and
aaa
les
nop
cmpsl
push
movsb
sbb
mov
sbb
sbbb
fldcw
jnp
enter
jnp
xchg
mov
cltd
jns
mov
out
push
jnp
xorb
lcall
inc
loop
sbb
cmp
adc
rcrb
in
jle
imul
ljmp
es
popf
movsl
stos
ss
sub
lret
and
flds
test
ljmp
lds
lods
out
mov
sub
pop
in
pop
arpl
sub
or
clc
add
repnz
inc
mov
nop
sbbb
cmp
sub
jb
push
clc
insb
adc
cmp
icebp
test
jg
or
pop
mov
or
in
pusha
lods
add
push
and
cltd
call
sbb
std
xchg
sbb
ss
cmp
cmp
loop
mov
das
stc
or
imul
or
add
shl
or
imul
push
xor
lods
mov
xor
aad
or
push
inc
in
out
dec
pop
dec
das
lea
add
ljmp
sahf
repnz
cli
test
mov
add
mov
push
mov
repnz
lcall
ss
shrl
cwtl
test
cmpsb
mov
int3
adc
mov
mov
xor
inc
dec
pop
add
fwait
es
fidivrl
add
and
dec
lods
or
add
jecxz
sub
jne
into
ja
or
fadds
call
add
call
jbe
xchg
ds
jns
arpl
dec
sbb
or
sbb
shrb
inc
lock
adc
in
jmp
mov
add
pop
out
adcb
push
fisubrl
imul
jmp
imul
mov
iret
xchg
mov
jle
jle
jmp
std
fstps
jno
loop
sbb
iret
cmpsl
sbb
push
mov
das
push
dec
mov
add
mov
jb
ds
cmp
je
dec
sub
leave
or
jmp
mov
fmul
in
and
rorl
shrl
or
mov
call
or
int
sbb
xchg
jmp
insl
inc
ret
in
out
inc
enter
cmp
mov
jle
mov
pop
loope
jmp
dec
jg
bnd
mov
or
out
pop
frstor
or
mov
punpcklwd
mov
ret
adc
nop
xchg
or
push
pushf
add
sbb
jmp
testl
pop
test
cli
xchg
popa
sub
pushf
or
addr16
and
enter
inc
cmp
or
and
shrl
cli
push
sbb
jae
leave
push
pusha
loopne
xchg
fistps
cwtl
sahf
pop
repz
xchg
icebp
add
inc
or
pop
cmp
popa
mov
decl
arpl
loop
aad
inc
lret
cmp
cmc
adc
pop
jmp
out
jmp
pop
out
ficomps
call
subl
or
add
inc
mov
arpl
cmpsb
adc
cwtl
inc
pminub
sub
pop
fidivs
or
fimuls
cwtl
and
xchg
and
in
push
ljmp
out
or
adc
ret
adc
mov
imul
in
ret
les
sahf
sub
sub
mov
push
and
add
xchg
test
dec
loope
sub
sbbl
adc
pop
xor
xor
lret
inc
dec
add
cli
add
enter
lret
sbb
test
jle
jmp
lcall
in
sbb
sbb
hlt
sub
fldenv
dec
nop
inc
in
mov
movsb
sbb
fwait
add
pop
repnz
pop
lret
in
dec
or
fs
sbbb
test
mov
mov
add
rclb
or
mov
daa
xor
pusha
jle
fxch
sbb
sbb
addl
stos
nop
lret
fimuls
dec
pop
add
or
lds
lods
pop
sbb
fnsave
and
in
adc
push
fsubrp
add
xchg
test
insb
aas
adc
and
andl
jmp
mov
adc
jmp
into
ljmp
icebp
pop
sarl
js
add
mov
add
fcoml
xchg
out
add
sbb
cld
mov
cld
scas
and
mov
sbb
mov
insb
leave
outsb
js
inc
or
jmp
mov
push
inc
pop
pop
cld
mov
clc
add
dec
in
mov
iret
mov
mov
cmp
sub
sub
sub
lret
push
in
mov
ja
or
test
cltd
in
mov
xchg
repnz
xchg
adc
adc
dec
mov
fs
cmpsb
pop
movsb
lods
mov
jecxz
cli
and
nop
int
and
in
enter
int
jno
dec
add
mov
xchg
mov
mov
push
add
cli
popf
test
push
sbb
or
fs
sahf
push
mov
xorl
add
push
leave
sub
mov
adc
cmp
stos
in
lods
push
sbbb
sub
inc
xor
adc
cltd
mov
lret
mov
js
or
and
mov
xchg
or
std
or
and
dec
pop
les
jo
test
mov
fildl
sbb
sbb
inc
jmp
mov
sbb
jl
loop
and
aas
mov
lods
mov
push
mov
jno
inc
add
or
cltd
enter
pop
lds
jo
mov
call
pop
or
and
repz
add
mov
pushf
ljmp
pusha
test
in
or
or
dec
inc
lds
imul
ja
cltd
outsb
lret
dec
insb
push
test
cmpsb
and
jle
arpl
sbb
cmp
in
pop
bound
scas
lahf
mov
rcrl
lret
js
addb
in
xchg
movsb
arpl
pushw
and
mov
mov
jg
andb
call
sbbb
pop
mov
fbld
and
iret
sub
adc
fstl
std
push
dec
sub
mov
push
pusha
call
call
sub
fists
inc
incl
and
orl
test
add
add
cmp
sbb
cltd
stc
or
sbb
or
jne
xchg
test
jecxz
or
loope
jl
add
mov
loope
out
pop
mov
cld
fldenv
pushf
js
jecxz
or
mov
pop
pop
dec
ret
enter
xchg
xor
mov
mov
mov
jmp
inc
cmp
sbb
mov
dec
push
mov
and
loope
add
add
and
and
sub
dec
movsb
outsb
andl
adc
addl
sbb
stos
add
ret
daa
pop
testb
add
addr16
ret
pop
or
mov
cld
cs
mov
adc
into
mov
ret
insl
int3
sbb
mov
pop
and
adc
movsb
mov
sub
incl
sti
bound
add
cwtl
fimull
mov
dec
insl
inc
out
mov
fcmovb
fcmovnb
movsb
cwtl
scas
lods
fdivrl
jmp
stc
lcall
or
aas
dec
cmp
sbb
addr16
cwtl
mov
dec
cmp
pop
movl
xchg
and
cltd
in
add
repz
add
inc
or
or
lret
loope
add
ficompl
or
fldl
jge
inc
xchg
or
sbb
mov
into
xchg
xor
mov
pop
js
sbb
lahf
jae
les
pop
test
out
xchg
paddb
push
loope
seto
inc
stos
testl
in
hlt
dec
sahf
pop
or
or
and
rorb
jg
lds
icebp
int3
fistps
icebp
sbb
hlt
mov
pushf
fldt
in
xor
stc
pop
ret
pop
xchg
call
arpl
lret
xchg
fsubrs
mov
or
mov
fucomp
add
sbb
test
mov
pop
arpl
mov
add
or
lahf
push
cmp
call
stos
push
adc
fwait
pop
sub
push
jmp
dec
pop
and
pusha
call
push
dec
push
xchg
push
push
adc
dec
aad
push
jbe
sbb
mov
mov
pop
nop
inc
orl
dec
icebp
nop
xchg
cmp
mov
pushf
shrb
sub
insb
inc
in
pop
pusha
int
pop
adc
arpl
pusha
inc
jg
or
imul
loopne
add
testb
push
or
ret
inc
pop
pushf
out
or
test
mov
dec
sbb
xchg
adc
sub
andb
mov
ret
add
decl
dec
mov
mov
cmp
jecxz
cwtl
lret
adc
shl
or
out
sbb
imul
in
es
or
sbb
pop
jg
sbb
dec
pop
pushf
jo
lcall
popa
pop
ret
sub
sbb
arpl
lcall
adc
dec
shrd
fcoml
mov
and
movsb
out
adc
mov
scas
test
xlat
adc
mov
lds
push
inc
jecxz
or
or
out
lods
adc
add
fwait
ja
sbb
sbbb
fmull
inc
inc
hlt
test
pop
xor
sbb
in
or
or
loop
jp
sub
pop
add
cmp
dec
inc
and
pop
dec
lods
or
pusha
mov
mov
imul
pop
rorb
sbb
jg
sahf
sbb
aad
xorb
pop
mov
jg
add
das
mov
cmp
add
test
aam
adc
add
mov
mov
push
call
and
dec
adc
leave
push
sub
clc
int3
or
add
mov
jo
aam
cwtl
dec
add
jmp
mov
adc
out
mov
enter
adc
sbb
stos
fnstsw
cwtl
lret
ret
add
nop
inc
or
fldcw
sub
push
call
or
sbb
fwait
loop
sbb
sbb
pop
sub
inc
mov
popa
cltd
mov
test
cmp
jmp
or
or
fsub
mov
sub
mov
and
sti
int
add
rolb
insl
sbb
aam
jmp
sbb
sbb
rolb
ret
add
cld
jecxz
sar
movsb
cwtl
add
add
fidivrl
mov
ret
mov
xchg
fildl
mov
inc
add
inc
das
mov
mov
popf
or
cmc
mov
xchg
cmp
add
inc
mov
loop
movsl
sahf
adc
in
in
fmuls
add
out
mov
mov
inc
les
xor
mov
sbb
pop
mov
test
mov
or
out
rcrb
push
lcall
add
fsubr
stos
test
test
and
sub
inc
sbb
dec
add
add
cwtl
or
loopne
inc
add
sbb
sbb
test
sub
int3
leave
inc
lcall
sbbl
icebp
pop
or
subb
adc
mov
or
mov
insb
pop
aas
push
sub
adc
sbb
aas
xchg
mov
push
lods
mov
mov
inc
lods
pop
loop
inc
aad
sbb
sub
sar
pop
adc
pop
adc
nop
iret
mov
dec
lret
add
aas
sbbl
sub
out
call
sub
or
loop
testb
add
adc
adc
pushf
mov
fisubrs
sbb
arpl
push
cwtl
adc
je
insb
push
push
sbb
adc
or
rclb
test
lret
and
sbb
xchg
dec
lret
cmc
or
push
add
add
addl
js
sarb
mov
adc
dec
rol
lret
sbb
fistps
sbbb
shl
push
add
rcll
mov
xchg
mov
les
push
mov
jno
lods
ljmp
and
add
dec
mov
fildl
cwtl
cmp
mov
mov
fidivl
sahf
lret
fistl
int
aam
push
dec
jo
adc
cltd
aam
and
cli
dec
lcall
mov
pop
mov
in
pop
js
ret
or
push
pop
cwtl
test
loop
inc
jno
mov
or
in
jp
dec
les
repz
push
jnp
xor
pop
sbb
imul
inc
mov
adc
jo
popf
mov
and
inc
stc
loop
or
mov
sti
sbb
add
add
sbbl
dec
clc
leave
cwtl
pop
add
addl
fistpll
int3
out
or
cmp
stc
pop
add
aad
js
pop
adc
jo
int3
dec
xchg
in
test
add
add
mov
or
dec
mov
int3
mov
pop
rorb
in
shlb
insb
leave
ret
mov
mov
testl
jg
out
xchg
adc
and
hlt
ret
jecxz
enter
sbb
scas
jne
sub
dec
mov
cli
in
fldcw
mov
mov
push
ret
mov
or
pusha
jbe
mov
jecxz
sbb
push
call
mov
lret
in
fiadds
inc
dec
add
add
mov
es
imul
test
decl
sbb
out
data16
cld
bnd
mov
lea
nop
and
sbb
push
xchg
pop
les
dec
movsb
gs
js
add
add
adc
and
jg
inc
add
add
dec
add
and
push
call
repnz
fisubs
int3
mov
sarl
lds
jnp
out
dec
add
pop
test
inc
and
add
jnp
insl
popf
or
in
in
mov
repz
push
adc
mov
jnp
jge
daa
sub
mov
in
mov
dec
xor
cld
out
sub
lods
dec
mov
and
dec
mov
or
sub
xor
mov
mov
cld
lods
push
sub
mov
adc
add
dec
pop
push
lret
bound
xor
out
mov
sub
fs
jge
fistps
push
dec
pop
test
adc
cli
lods
inc
sub
test
mov
cltd
fcoml
mov
sbb
hlt
cmp
xchg
add
inc
das
jne
scas
subl
mov
inc
in
sbb
sub
mov
jno
sbb
adc
loopne
xor
mov
lods
cltd
push
add
adc
mov
jg
adc
pop
xor
lret
hlt
repnz
push
fdivs
stos
or
sub
in
sub
ret
es
cmpsl
mov
cltd
or
dec
imul
jle
push
add
pushf
jb
arpl
or
in
mov
stos
dec
movsb
push
cmpsb
or
jae
or
push
sbb
das
sbb
cmpsb
rclb
or
jmp
lret
lahf
je
ds
jmp
sbb
jp
push
add
add
pop
fistpl
mov
sbb
out
shl
xchg
fucomi
jb
push
arpl
or
nop
fucomi
sbb
arpl
int3
xchg
sbb
cwtl
sahf
pushf
sbb
sbb
xchg
xlat
mov
add
out
dec
mov
adc
lock
mov
enter
dec
roll
sbb
push
cmpsb
inc
decl
in
jmp
or
mov
pop
call
mov
bound
or
outsb
adc
call
or
adc
or
fwait
repnz
adc
or
xchg
or
xchg
push
outsb
and
enter
jmp
test
add
pushf
sbb
adc
or
shl
fwait
into
sbbl
adc
adc
adc
jae
inc
or
push
inc
cltd
les
sbb
add
add
repnz
pushf
rclb
inc
or
sahf
les
add
rclb
sbb
cltd
push
xchg
or
pop
or
incl
push
lods
cwtl
or
decb
roll
mov
mov
and
or
fmull
xchg
loop
loope
int3
sbbl
and
or
or
test
add
add
sbb
les
test
test
sbb
cwtl
inc
xchg
lret
add
xchg
mov
jg
sub
cmpsl
add
sbb
enter
add
mov
fmuls
sti
orl
mov
lret
pop
xchg
insb
gs
add
popf
mov
arpl
mov
repz
cltd
cmp
adc
jmp
mov
inc
fsubs
dec
xchg
adc
sub
dec
xchg
outsb
in
mov
sbbl
mov
or
dec
sbb
sarl
in
cld
rclb
add
pop
jmp
adc
jno
push
xor
adc
pop
jl
int
out
pop
jp
jo
xchg
sbb
and
adc
and
sbb
add
fimuls
mov
js
add
lods
in
rclb
mov
into
add
cmp
jnp
dec
stos
or
push
adc
js
adc
push
sub
lock
mov
sbb
pop
or
or
xchg
xchg
adc
dec
adc
jmp
or
cmp
inc
add
sbb
push
xchg
in
dec
in
dec
adc
movsb
cltd
int3
orps
pop
mov
push
lret
test
out
adc
aad
mov
add
hlt
push
xor
adc
mov
jge
jmp
nop
sub
inc
xchg
or
push
dec
adc
mov
divl
lods
jecxz
lret
test
ss
lret
outsl
out
or
inc
jecxz
jne
mov
out
scas
or
aas
jmp
and
scas
mov
fwait
imul
test
xchg
lret
test
cltd
sbb
jge
in
xor
rolb
or
adcl
addr16
das
leave
jnp
push
ljmp
adc
push
push
loop
adcl
xor
inc
or
adc
adc
lret
dec
mov
dec
adc
test
divl
movsl
enter
je
aad
addb
rcrl
fldcw
inc
lods
cld
lock
jge
or
repnz
test
js
or
mov
sub
xchg
repz
dec
sbb
push
out
sub
lret
adc
pop
sbb
or
aam
push
push
inc
cmp
push
adc
sbb
pop
sub
in
adc
cld
decb
andl
movsb
sub
sti
xor
add
test
cmpsl
add
pop
cmp
push
dec
mov
xchg
adc
lcall
lret
jae
cli
test
ret
adc
mov
filds
shrl
and
sbb
sbb
jmp
bound
add
loope
test
sti
sub
ljmp
inc
dec
mov
pop
and
bound
or
cltd
test
or
out
in
fcmove
test
sti
lock
inc
div
mov
cmpsb
rorl
cmpsb
jmp
fadd
dec
xchg
add
inc
dec
dec
mov
cs
in
sbb
xchg
dec
mov
or
mov
int3
pusha
repz
roll
fcomp
sbb
int3
push
in
imul
shlb
dec
jns
mov
push
jne
xchg
addl
iret
cld
xchg
push
les
pop
sbb
adc
jae
std
stos
xorl
add
mov
test
nopl
inc
aaa
imul
add
out
or
lock
aam
mov
clc
push
int
cltd
pusha
cmp
icebp
in
pop
pop
jmp
cmp
jmp
pusha
mov
imul
pop
dec
mov
jl
push
filds
or
addr16
mov
cmp
or
inc
lret
es
fsubl
push
in
mov
jns
inc
lret
push
mov
cltd
ror
adc
loop
or
outsb
ljmp
or
repnz
add
lcall
or
xlat
and
mov
xchg
mov
and
in
add
cli
aas
jnp
into
in
adc
enter
cwtl
mov
xlat
pop
mov
adc
sub
jmp
insb
int3
and
pop
sbb
les
leave
cli
adc
or
outsl
pop
lcall
out
test
mov
repz
cmp
outsb
or
pop
adc
cmp
insb
jbe
jecxz
cmp
cmp
fldl
addr16
scas
inc
mov
aad
pop
loope
push
loop
jg
out
xchg
call
mov
cli
shr
sub
cmpb
subb
inc
mov
inc
adc
mov
out
jne
and
ja
or
shrl
push
dec
or
mov
or
fisttpl
lret
in
pushf
mov
aaa
jns
popf
push
scas
add
sub
lods
lcall
jl
cmp
idivb
jge
stos
jecxz
dec
push
xchg
jle
pop
xchg
out
jecxz
pop
mov
or
mov
and
scas
mov
pcmpgtw
sbb
int3
mov
xchg
aam
adc
outsb
mov
mov
out
dec
push
xchg
mov
sub
mov
jmp
mul
insb
aad
mov
xchg
cli
push
xor
add
int
mov
daa
mov
leave
addl
fistpl
adc
pop
stos
adc
dec
add
adc
or
pop
dec
out
aam
cli
arpl
js
mov
xchg
cltd
add
cltd
dec
pop
aam
int3
adc
adc
mov
lods
or
aam
or
in
stos
xchg
push
or
mov
out
dec
adc
lds
xchg
out
inc
data16
push
js
add
enter
mov
aas
lret
jl
mov
loopne
mov
mov
cltd
cld
mov
sbb
in
arpl
in
sub
movd
push
push
incl
push
lods
sub
mov
js
adc
out
in
push
xor
movsb
jae
push
cld
out
sub
xor
mov
daa
add
into
xchg
adc
xchg
or
jmp
jnp
mov
ljmp
scas
int3
cld
xchg
push
clc
les
dec
add
pop
or
mov
pop
or
mov
scas
cli
and
xchg
andl
int
stc
cmp
movsl
orl
sub
mov
push
mov
jno
jle
mov
xorb
lock
les
rcrl
inc
and
sbb
mov
aad
mov
lods
sbbb
lret
xor
call
je
out
loopne
mov
mov
lret
movsl
cltd
add
filds
ror
pop
bound
out
andl
mov
icebp
mov
mov
int3
rolb
xlat
insb
invd
imul
mov
adc
adc
int3
cltd
cli
mov
jno
bound
push
lahf
clc
nop
pop
gs
aas
sub
imul
pushf
rcl
aam
test
inc
hlt
rorb
mov
sbb
orl
rcll
dec
rclb
mov
dec
adc
pushf
or
sbb
add
repz
dec
sbb
es
scas
add
mov
je
or
pop
sub
sbb
jmp
insb
test
add
test
or
repnz
add
cmp
cmpsl
adc
mov
dec
in
mov
mov
scas
int
xor
mov
add
mov
outsb
add
dec
into
sar
fwait
ja
dec
mov
xor
out
sbb
lret
scas
sbb
inc
and
add
cli
mov
int
jle
sbb
pusha
incl
repz
push
mov
mov
add
jge
xchg
sbb
push
cmp
jmp
add
jp
loop
leave
push
clc
les
add
inc
enter
rcrl
repz
dec
stc
shr
sbb
inc
jo
idivb
inc
mov
xchg
inc
shl
loopne
push
sbb
add
sbb
loop
jns
mov
or
repz
mov
ret
xlat
sub
scas
jl
cmp
jmp
faddl
lds
pop
in
or
aaa
daa
mov
inc
add
pusha
lock
and
call
jns
fsubrs
push
shlb
shr
jnp
insl
cmp
mov
cwtl
fiadds
hlt
xchg
adc
int
clc
insb
stos
xchg
pushf
outsb
aam
sbb
hlt
xchg
pop
cmc
mov
call
xchg
adc
push
pop
sub
xor
push
xchg
mov
mov
outsb
sahf
das
xchg
cltd
xabort
mov
test
xor
lods
movsb
dec
aam
pop
loopne
adc
call
ror
scas
int3
or
sub
insl
mov
xor
sbb
lods
in
adc
pop
sbbl
inc
push
push
xchg
mov
jle
jb
test
lcall
add
jle
outsb
pop
sbb
or
orl
cld
lods
jmp
dec
popa
das
cld
mov
and
jmp
mov
push
push
fcompl
sbb
sbb
jl
xchg
cltd
loop
xorb
push
mov
orb
dec
pop
push
push
pop
leave
xchg
sbb
mul
lret
sbb
pop
mov
das
mov
pop
hlt
test
stos
out
jno
jae
dec
mov
arpl
cli
dec
bswap
add
sub
movsl
fs
shrb
test
cmpsl
pop
lret
int3
mov
push
mov
movsb
inc
inc
shlb
xchg
into
inc
data16
xchg
adc
sbb
outsb
or
xchg
in
pushf
in
out
mov
roll
aam
xchg
mov
mov
mov
dec
rcll
jge
cmpsl
pushf
out
jae
lcall
dec
jae
mov
sbb
and
out
out
hlt
stos
rclb
and
inc
iret
jo
data16
xchg
push
adc
push
lret
sbb
mov
orps
add
xchg
cltd
ud1
cld
xlat
pop
adc
icebp
daa
shlb
inc
add
cmp
add
repnz
add
xchg
pop
fs
bound
jecxz
sarl
mov
sub
adc
cltd
leave
dec
mov
sub
mov
add
mov
cmp
fucomi
lret
stos
xchg
mov
leave
roll
sbb
push
cli
and
mov
or
push
adc
inc
dec
mov
jmp
dec
cmp
mov
repz
into
arpl
sub
add
pushf
mov
xchg
pop
lods
pushf
in
into
dec
jo
add
or
inc
xor
fldcw
xchg
xor
xlat
out
push
loop
ja
or
mov
lret
cld
sbb
cmpsb
sub
sub
orb
xchg
cli
push
in
loopne
fisubrs
ja
scas
out
lret
xor
sub
xlat
stos
add
cmp
enter
ljmp
sub
dec
sub
les
xor
xor
int
push
ret
mov
sbb
adc
iret
add
sub
fs
imul
push
mov
sbb
dec
sub
mov
mov
cmp
stos
insl
sti
mov
rcl
sbb
xchg
jb
mov
adc
test
lcall
mov
jb
sbb
aad
int
pusha
sti
pushf
mov
pop
xchg
sbb
clc
jnp
ficompl
ret
xchg
ficompl
repz
mov
lret
repnz
in
loop
in
hlt
enter
popf
inc
movsl
jne
ret
in
jno
mov
add
sbb
clts
jnp
push
lahf
sahf
xor
repnz
std
mov
pop
lods
addb
xor
insl
pop
push
fs
add
mov
adc
or
lock
pop
daa
xchg
fcmovnbe
mov
les
dec
cld
pop
dec
cmp
xchg
cld
sbb
cmp
cs
xor
adc
and
adc
add
sub
pop
mov
rclb
or
adc
or
xor
stos
aam
adc
imul
bound
mov
pushf
lods
aad
push
insb
add
fldt
inc
mov
pop
in
xchg
test
xchg
enter
pop
mov
push
repz
or
sbb
mov
xlat
or
pop
cwtl
jnp
jne
sbb
or
cltd
int
je
add
or
repz
in
loope
jecxz
mov
jg
aam
lock
fnstenv
rcl
out
mov
loope
aaa
add
mov
or
hlt
mov
push
rcrl
or
mov
mov
dec
push
arpl
sub
ds
xlat
jmp
adc
mov
mov
jnp
lods
add
ja
sub
cld
mov
inc
sets
sub
inc
call
xor
or
test
adcl
fwait
xchg
out
and
pop
daa
test
mov
inc
daa
mov
and
loop
or
je
add
cmp
jae
mov
xchg
jmp
and
or
push
mov
popa
je
dec
pop
fcmovne
mov
mov
jns
cmp
insb
fadd
sub
enter
fldl
pushf
arpl
faddl
ret
sahf
inc
cli
cmpsb
push
or
mov
outsl
sub
je
jno
add
mov
bound
xorl
insl
loop
mov
jecxz
jp
inc
bound
add
pop
iret
sbb
ret
rorb
jne
or
mov
add
xchg
das
loop
cmp
push
xchg
sbb
aad
or
mov
and
push
loop
stos
sbb
fisttps
sbbb
ss
fcoms
xor
std
add
cltd
xchg
pop
xlat
xor
adc
and
add
mov
stos
cmp
stos
inc
lods
fistpl
in
mov
enter
sbb
jp
or
push
inc
test
sub
in
and
push
dec
mov
pusha
mov
mov
sub
insl
shlb
ret
outsb
inc
out
dec
js
xor
xor
insl
pushf
in
xchg
ljmp
sbb
orl
push
dec
adc
xor
insb
sbb
xchg
sub
add
shl
pop
scas
push
cmpsl
ja
sbb
adc
jmp
push
repz
jp
dec
jno
cltd
push
rolb
sbb
stos
pop
test
sub
pop
out
out
lock
or
shlb
push
jl
sub
repnz
adc
cmp
jmp
ror
mov
fcmovb
ret
mov
ljmp
add
push
jl
cmpsb
sbb
mov
imul
jmp
dec
in
add
stos
mov
cltd
pop
inc
rcrb
sbbl
or
fwait
pop
cmp
mov
cmc
dec
nop
repnz
jge
add
xchg
pop
movsb
adc
add
daa
in
add
fs
pop
sub
adcl
rorl
test
arpl
movl
and
jle
fisttpll
ret
bswap
mov
movsl
sbb
imul
and
xchg
push
pop
jno
sti
jl
add
shrd
das
mov
adc
lods
xchg
inc
data16
pop
xchg
bound
in
lods
mov
mov
out
lret
lds
loop
mov
mov
out
push
add
mov
sbb
sbb
push
out
int
sub
rol
pop
sbb
out
mov
rolb
mov
cltd
add
outsl
in
push
xchg
sub
andb
std
mov
fldt
mov
jg
dec
xchg
stos
cli
mov
je
mov
jns
out
lods
dec
in
or
je
pop
and
iret
jb
sub
mov
or
dec
adc
push
outsb
sbb
push
jo
ss
sarl
cltd
mov
mov
xchg
outsb
insb
scas
mov
sbb
push
xchg
pop
xchg
repnz
push
sub
add
bound
ss
dec
mov
aaa
adc
push
mov
xor
int
jnp
cmpl
sub
stos
in
adc
or
fildl
cmp
mov
fisubl
out
cmpsb
push
cmp
test
mov
insl
test
test
enter
jecxz
or
mov
add
dec
xor
sbb
movsb
orb
pop
xchg
xor
adc
cmpsb
inc
add
jbe
dec
add
jg
lcall
mov
pop
sub
pop
jbe
push
shrl
sub
jo
mov
rcrl
pushf
lahf
sbb
lock
in
jnp
push
cwtl
and
into
xor
dec
add
sbb
push
or
out
mov
fimuls
in
fidivl
shlb
pop
add
dec
sbb
add
test
popa
scas
jmp
xor
into
cmp
pop
clc
stos
test
push
mov
idivb
cmp
pop
insl
iret
fiaddl
add
movsl
scas
jmp
divl
cmp
adc
in
pop
bound
ficoml
lret
push
and
orl
ds
jecxz
sub
cld
fcompl
in
mov
or
lds
push
mov
pop
cli
inc
lds
in
fstpt
push
mov
cs
mov
shrb
inc
loop
test
adc
iret
push
loop
cmp
cmp
stos
sti
int
jne
je
test
jb
or
loopne
or
out
xchg
adc
inc
jecxz
push
jg
les
ja
aaa
or
sbb
adc
mov
addr16
adc
les
adc
negl
push
test
add
aam
adc
pop
add
addr16
lea
mov
dec
add
dec
dec
sbb
xor
sbb
pushf
sbb
outsl
or
fisttpll
and
add
in
rolb
inc
lods
or
cmp
add
shlb
sbb
test
jmp
add
xchg
cmp
repnz
or
subl
js
push
hlt
das
add
or
jle
lods
or
out
push
push
sbb
out
bound
inc
cmp
test
popa
push
mov
cmpsl
enter
sbb
unpcklps
dec
nop
rclb
nop
pop
sub
inc
mov
push
scas
xor
xor
aam
pop
out
xor
push
mov
imul
sarl
imul
add
lea
adc
hlt
shrb
xchg
std
enter
add
cmp
out
adc
hlt
cwtl
jmp
leave
into
pop
or
add
push
dec
aad
jns
jb
icebp
or
jae
lock
mov
sbb
adc
jecxz
mov
rorb
adc
pop
out
rep
stos
popf
fmull
scas
mov
adc
cmp
pop
bound
mov
mov
push
stos
cmpsl
sbb
sbb
cld
push
sahf
mov
addr16
jne
inc
push
adc
push
add
adc
cmp
jb
cmp
or
jl
mov
rcrl
add
mov
dec
mov
fwait
insb
outsb
loope
sub
rclb
cltd
inc
lahf
cmpsl
jmp
movsl
add
jecxz
sub
mov
fwait
add
mov
fildl
rclb
std
sahf
ret
adc
jnp
mov
cmp
loopne
call
jne
leave
cltd
adc
push
jmp
and
cltd
mov
dec
ret
or
das
in
imul
mov
adc
push
mov
cmc
xchg
imulb
push
mov
in
rcr
push
ret
push
les
sbb
stos
leave
sbb
xor
bound
add
aas
xchg
test
repz
jle
push
clc
xor
iret
shlb
js
pop
rorb
pop
sbb
lock
or
dec
sub
inc
push
dec
adc
hlt
push
adcl
jmp
scas
out
ror
movsl
subb
mov
sbb
or
sti
orb
icebp
jecxz
dec
dec
test
aam
mov
bound
jo
fwait
cli
add
or
sbb
fdivrl
enter
sahf
sbb
jb
xchg
and
jne
fmuls
adc
add
repz
fstpl
mov
imul
sbb
push
pop
mov
mov
xchg
mov
outsl
hlt
mov
jmp
ljmp
or
dec
adc
sbb
hlt
cli
or
ds
mov
or
jae
imul
add
mov
fimuls
cwtl
imul
mov
add
stos
sbb
fistps
pusha
decl
push
cmp
cmp
sbb
aaa
jp
sahf
xchg
clc
in
add
inc
lods
sbb
mov
xchg
mov
inc
nop
adc
mov
stos
add
test
jnp
jmp
movsb
or
adcl
lods
and
sub
sub
int3
or
outsl
testl
xchg
push
imul
dec
add
jnp
fdivs
xchg
icebp
movsb
inc
dec
xchg
sub
add
or
jge
inc
or
lret
loop
popa
and
push
addl
jmp
xchg
sub
lahf
push
scas
prefetch
xchg
xchg
imul
jg
arpl
int3
mov
sub
sbb
pop
jmp
or
mov
fmull
inc
lret
or
pop
jle
outsl
or
mov
test
or
xchg
testl
push
shrb
lahf
adc
and
in
dec
movsb
or
mov
imul
lret
or
adc
xor
jae
add
fs
dec
imul
lcall
pushf
mov
aas
gs
xchg
push
jl
jp
enter
popa
bound
je
sub
fdivs
mov
push
insl
push
je
pop
in
popf
stos
dec
add
sub
xor
or
aam
or
sub
popf
adc
jno
aas
call
stc
lret
jns
inc
rcr
xor
push
adc
repz
add
rorb
je
cmc
das
adc
push
cli
inc
xor
clc
repnz
xor
loopne
pop
sub
inc
test
adc
sbb
sbb
mov
adc
popf
sub
les
adc
jmp
or
andl
or
cmp
pop
sub
jmp
adc
pop
clc
dec
les
int
popf
pop
popf
jge
std
jo
or
mov
sub
dec
xor
sub
push
ficoml
pop
and
clc
push
cmp
pop
mov
add
mov
cmpsb
add
repz
sbb
adc
jno
fdivl
or
lds
aam
xor
and
fisubrl
sbb
sbb
dec
mov
adc
out
repz
and
repnz
and
cmp
nop
pop
in
fucomp
dec
je
push
fs
dec
xor
loop
fistps
xchg
testl
adcb
add
dec
or
add
pop
or
outsl
add
jp
fidivrs
mov
cmp
pop
jbe
or
jmp
jns
push
stos
add
lock
js
dec
or
and
add
aad
shr
in
hlt
fsubr
int
jne
pop
mov
mov
mov
call
mov
mov
jp
pop
outsl
fnstcw
shrb
mov
in
or
cmp
sbb
arpl
iret
fcmovu
ja
fisttpll
pop
jae
gs
dec
add
or
repz
call
mov
mov
jmp
or
inc
pop
fcmovbe
xchg
inc
ret
mov
loope
pusha
fstps
in
xchg
stos
mov
mov
mov
mov
and
adc
or
adc
xchg
and
cwtl
lods
sub
je
xor
pop
nop
add
arpl
xchg
mov
push
dec
adc
mov
xchg
incl
out
mov
and
dec
mov
shll
or
rolb
int
adc
push
scas
daa
cmp
sbb
or
mov
movsb
dec
mov
push
or
push
dec
rcr
cmp
rorb
adc
jl
sbb
nop
and
sub
dec
cld
or
pop
out
push
mov
or
in
in
aaa
ds
andb
and
adc
xor
mov
sub
sti
mov
or
js
imull
push
pop
mov
cltd
sbb
sbb
or
push
lea
subb
dec
push
xor
cmpsb
inc
mov
sbb
ja
fisubl
adc
mov
dec
ljmp
lods
dec
sub
lods
xor
and
add
pop
mov
cltd
pop
js
andl
xchg
fstpt
or
das
int3
or
sub
xor
and
inc
add
cld
sub
ljmp
jge
cmc
jo
cli
push
inc
add
popf
and
and
adc
es
cmp
testb
lods
push
add
push
stos
mov
xchg
pop
jmp
repz
adc
test
enter
push
test
jbe
xor
add
add
pop
jno
xchg
into
bound
mov
xor
jb
or
ljmp
pop
lret
orb
inc
imul
popf
ljmp
push
or
addr16
negl
nop
ret
aam
sbb
pop
push
imul
lahf
int3
fisttpl
sbb
xchg
cmp
mov
icebp
or
cmp
adc
xor
mov
dec
cmpsb
dec
add
lds
xchg
ds
out
inc
or
or
or
test
in
push
lret
mov
in
sbb
cs
mov
out
dec
jno
push
clc
mov
or
xchg
decb
shlb
cmpsb
inc
add
or
pop
push
jne
arpl
inc
mov
pop
or
cmpl
int
rclb
xlat
ss
stc
in
loope
clc
sahf
iret
inc
lret
loop
in
and
nop
sub
inc
and
jle
mov
mov
adc
xchg
hlt
xor
pop
out
jmp
cmp
cmpsl
or
or
jno
mov
add
or
rclb
daa
push
or
or
cltd
loopne
inc
xchg
lods
pop
jl
inc
sub
movsb
or
xchg
jle
rcll
mov
push
pop
shl
mov
out
mov
mov
fdiv
loop
add
lods
cmp
cmp
das
fdivl
xchg
or
enter
or
jo
mov
in
jns
mov
push
mov
inc
push
mov
daa
int
adcb
ss
lret
or
dec
xchg
dec
add
jae
cmpsl
roll
scas
sub
lds
lods
cmp
sub
pop
add
repnz
and
cmp
sbb
nop
adc
stos
or
int3
lds
jne
jns
js
pop
gs
je
mov
fidivrl
push
push
popf
or
adc
stos
aas
imul
inc
stos
or
inc
sti
arpl
or
rcrl
js
ja
pusha
and
scas
add
mov
adc
cmp
dec
mov
or
push
jecxz
mov
or
lret
push
stos
xchg
mov
sub
movsb
pusha
mov
int3
imul
pop
jle
add
lea
adc
mov
out
inc
nop
mov
xchg
loop
loopne
or
aaa
inc
and
cmp
lods
push
or
push
repz
inc
push
outsl
in
subl
ret
dec
and
xor
or
pop
mov
stc
arpl
xor
or
outsb
rcrb
ljmp
les
and
pop
out
mov
xor
cmc
mov
push
iret
mov
xor
ss
inc
aam
or
je
sub
lock
sbb
or
test
or
stc
jo
or
xchg
mov
iret
jno
push
sbb
or
mov
jl
das
outsb
sbb
pop
mov
or
dec
imul
loopne
inc
out
xor
idiv
lret
fmul
ja
popf
sub
adc
insb
push
icebp
add
pop
jl
imul
mov
xor
fs
dec
add
jae
jns
jnp
and
test
popl
xorl
dec
xor
sbb
repz
ss
xchg
or
stos
sub
addr16
mov
mov
or
rcll
jp
hlt
mov
dec
or
mov
enter
arpl
mov
out
pop
add
loop
push
dec
inc
push
xchg
sar
mov
adc
sti
icebp
popf
repnz
shlb
or
mov
lods
dec
or
pop
arpl
neg
or
sbb
ja
add
inc
push
sub
shlb
sbb
scas
adc
cwtl
stos
pop
fsubr
fcmovnu
in
xorb
adc
jns
mov
dec
mov
popa
adc
or
fs
insb
dec
pop
mov
or
cs
int3
push
outsb
rorb
push
adc
add
inc
push
testl
jecxz
or
dec
hlt
iret
or
adc
pushf
lds
or
lods
mov
aam
pop
stos
gs
and
or
sub
ja
mov
jno
or
and
aas
loopne
lcall
and
xor
stc
add
negb
int3
mov
out
or
and
xchg
and
arpl
cmpsl
xor
push
rorl
jnp
jmp
cltd
loope
add
or
xchg
adc
pop
outsl
int3
in
pop
jns
adc
lcall
pop
aas
js
mov
outsb
int3
dec
sub
mov
loop
mov
mov
and
je
push
fmuls
fidivrl
pop
and
dec
mov
fistpl
mov
push
int3
cmp
push
or
cmp
push
inc
sbb
dec
dec
mov
imul
mov
ret
bound
sub
lea
sbb
aad
fnstcw
in
mov
addr16
mov
or
sub
xor
push
stos
rorl
aaa
add
add
shrb
cmp
ret
aad
xor
sub
adc
shll
test
inc
or
fisttpll
and
out
add
jns
mov
cltd
shlb
scas
add
in
inc
xchg
lret
add
jo
inc
adc
add
cltd
ret
bound
int3
push
ljmp
insl
adc
jb
enter
mov
or
int3
inc
push
mov
mov
push
or
call
or
in
cmc
lret
xchg
in
xchg
inc
cli
inc
movsl
or
xchg
aam
or
jl
or
mov
add
pusha
mov
pop
mov
mov
jecxz
xchg
mov
cmp
movsb
fcoms
call
or
and
cmp
mov
push
jne
pop
lret
ja
daa
fwait
cs
push
add
jne
ret
or
mov
or
adc
mov
mov
int3
fldenv
adc
mov
pop
out
add
adc
stos
or
popf
xchg
nop
inc
sbb
xchg
stos
mov
xchg
pop
add
test
sahf
or
or
aam
pop
or
mov
sub
call
in
sub
mov
sub
xchg
pop
or
inc
sub
sub
xchg
or
or
pushf
mov
cli
ljmp
sahf
xchg
pushf
or
outsb
cwtl
std
mov
sbb
shlb
decl
out
out
sbb
jb
or
sub
or
sub
out
pop
lcall
fisttpl
decb
push
sbb
xor
sbb
or
add
cld
pop
cwtl
test
push
mov
adc
cld
sub
insl
insl
adc
outsb
lods
lds
adc
imul
scas
adc
jp
xchg
xchg
push
push
sub
inc
ficompl
cmc
pop
lock
or
sub
add
addl
les
int
or
movsb
dec
dec
push
or
test
roll
jmp
jns
scas
push
sbb
sub
push
cld
ljmp
leave
xchg
add
jo
sbb
xor
add
std
xchg
repz
in
call
push
add
fmull
jl
adc
cmc
sbb
in
and
popa
or
inc
addr16
jb
sbb
or
leave
mov
mov
gs
pop
pusha
lock
out
or
adc
or
or
idiv
sub
xchg
fmul
add
outsl
ret
or
sbb
int3
push
or
mov
int3
inc
jmp
lcall
lret
push
adc
inc
stos
or
sbb
divb
fldenv
mov
xchg
and
mov
mov
bound
or
cmp
fldt
sbb
cld
sbb
cmp
cwtl
insb
and
hlt
cmp
adc
in
xchg
mov
lcall
int3
cld
sbb
xor
push
test
popa
lods
outsb
enter
mov
int3
push
or
ljmp
leave
sub
lds
push
xchg
adc
mov
in
mov
aaa
insl
dec
pusha
xacquire
cmp
ud2
and
add
or
stc
jo
adc
inc
les
call
adc
pop
push
sub
nop
or
repnz
hlt
lods
dec
loopne
addb
popa
adc
pushf
ret
fcoml
pop
sbb
inc
std
pop
lahf
dec
mov
mov
mov
int3
or
rcr
ficompl
mov
mov
sub
js
dec
jge
jl
mov
leave
add
dec
cmpsb
inc
or
enter
in
insb
lds
das
lcall
sarb
rcll
ja
fimuls
mov
pop
mov
inc
adcb
insb
mov
push
lods
das
mov
push
fidivl
jl
adc
pop
mov
test
enter
psubb
call
mov
xor
mov
lods
add
xor
outsb
mov
pop
pop
or
loop
inc
mov
mov
or
adc
mov
subl
adc
lret
add
dec
lods
enter
jne
xor
popf
push
push
sbb
or
das
and
or
scas
jl
pushf
dec
out
mov
ret
std
xchg
sti
cltd
hlt
lcall
loope
loopne
mov
or
jo
sbb
mov
jmp
sub
or
xor
int3
loop,pt
pushf
std
es
sbb
pop
mov
adc
in
int3
sub
push
cmp
jbe
in
jl
jne
jnp
insl
adc
xor
push
mov
sub
mov
scas
mov
lods
adc
dec
add
test
mov
pop
adc
pop
mov
mov
or
lcall
sub
fcompl
add
fisubrs
jo
lret
les
jne
mov
sub
dec
xor
flds
leave
jp
stc
cmp
add
int
testl
fsubrs
out
sub
mov
or
sbb
inc
pop
add
add
aaa
push
mov
pop
aam
lods
out
test
mov
xchg
popf
push
add
int
sbb
mov
loop
int3
add
icebp
push
inc
pop
or
jmp
mov
movsb
je
xor
in
imul
sub
ss
jge
mov
inc
jecxz
mov
add
mov
push
sbb
pushf
and
sbb
lret
mov
pusha
add
in
adc
fdivr
aam
pop
test
std
mov
xchg
hlt
sub
in
out
in
repnz
or
sbb
mov
xchg
fdivrl
add
test
xchg
mov
adc
and
cmp
lcall
imul
loope
mov
sub
pop
and
mov
xchg
in
jecxz
repnz
in
pushf
icebp
jns
incb
mov
mul
xchg
jmp
xor
das
cwtl
int3
cmp
add
fstpt
and
push
or
bound
push
inc
popw
or
and
sbb
and
dec
in
xor
int3
ljmp
jp
lret
mov
lods
or
fcoms
shlb
jp
sbb
loope
lods
arpl
lret
adc
mov
pop
and
in
lods
inc
popa
inc
pop
push
jp
fldcw
dec
scas
insb
repnz
mov
sub
les
xor
sub
das
inc
daa
bound
mov
or
stos
xchg
subl
aam
sbb
and
lods
out
sbb
cmp
and
vstmxcsr
or
jge
fbstp
sbb
inc
sbb
rclb
push
test
push
cli
pop
ds
test
lock
pop
daa
lods
pop
inc
cmp
scas
push
fst
or
dec
pushf
rcll
or
rclb
jmp
leave
loope
mov
mov
adc
mov
das
cmp
and
dec
cld
pop
or
stc
outsb
add
mov
xor
add
lods
mov
jge
lret
xchg
bound
add
jae
int3
daa
xor
jg
add
mov
mov
incl
xor
cs
sbb
stos
add
ret
mov
and
pop
ja
in
or
mov
data16
into
xlat
or
add
cmpsb
dec
pop
or
xchg
es
jle
pop
loop
cs
mov
jg
in
push
or
cld
scas
add
mov
mov
popa
mov
addr16
test
add
scas
les
jo
adc
das
scas
in
lods
es
xchg
idivb
sbb
sbb
nop
in
dec
lock
fdivrl
movsl
mov
vxorpd
rolb
loopne
or
add
dec
mov
dec
push
aaa
pop
jp
subl
xchg
pop
add
lcall
fisubrs
sbb
hlt
xlat
jmp
mov
aaa
rolb
sbb
inc
xchg
dec
lret
or
push
cltd
add
test
mov
stos
inc
mov
mov
or
pop
scas
push
mov
pop
in
scas
or
or
xchg
testb
icebp
or
pop
dec
add
and
in
mov
rorl
mov
cmp
lahf
nop
inc
adc
mov
push
addr16
imul
loop
mov
mov
in
pop
mov
out
pop
jl
aaa
sbb
aam
xor
push
lods
push
sti
xchg
cmp
loopne
adc
pop
mov
jns
lret
cmpsl
inc
divb
cmp
in
xchg
pop
jne
add
shlb
in
rorb
xchg
dec
lahf
loopne
sbb
mov
jne
lea
jge
sub
cmp
movd
and
lds
imul
test
popa
sub
xchg
mov
pop
or
jge
jl
adc
jne
mov
js
lcall
and
mov
dec
pop
sbb
xchg
ja
xor
aam
jmp
add
insb
add
mov
cmpsb
sbb
pop
xchg
fwait
jbe
xor
cmp
inc
imul
aam
insb
lcall
jmp
or
cmp
cli
sub
fisubs
xor
adc
idivl
shr
ret
test
pop
lret
mov
arpl
or
pusha
call
jne
fs
aaa
or
push
mov
ss
xchg
out
inc
dec
ret
and
inc
lds
jne
mov
je
sbb
test
mov
popaw
push
jne
and
sbb
out
dec
or
notl
xchg
ret
stc
sub
ljmp
hlt
cli
xchg
loopne
or
inc
mov
sub
bound
jp
add
push
jb
sbb
inc
movsb
sbb
scas
test
xchg
stos
test
dec
nop
or
mov
mov
or
sub
jg
inc
dec
push
stc
xchg
mov
and
call
xchg
cmp
fidivs
cmp
pop
enter
adc
or
pop
mov
pop
mov
fbstp
push
sbb
movsb
push
push
pusha
out
xchg
pop
jl
cmp
add
jecxz,pt
ds
hlt
das
imul
mov
add
movhps
xorl
lock
inc
mov
xchg
and
or
or
lods
cmp
hlt
inc
mov
dec
xor
pop
pop
aaa
sub
adc
adc
rorb
test
or
add
ret
sbbl
cld
test
mov
rcrl
jne
call
mov
or
sub
test
aam
jae
je
imul
es
in
add
or
fisttpll
xlat
leave
mov
jp
mov
mov
mov
mov
xchg
jge
cltd
sub
int3
or
mov
in
clc
cmc
fsubr
fdiv
add
dec
ror
or
mov
dec
imul
adc
pop
or
call
and
and
mov
or
mov
mov
lods
add
movsb
xchg
call
inc
sbb
xchg
push
push
mov
adc
ja
xlat
cmp
ret
clc
xchg
cltd
imul
cmp
mov
notl
insb
stos
add
bound
mov
cwtl
out
adc
sub
movsl
cmp
mov
enter
fnstsw
nop
jl
push
xor
xchg
shrb
insb
dec
arpl
push
jp
inc
gs
fildl
clc
xchg
or
jbe
dec
movsl
or
ret
lods
stc
pop
or
sbb
push
push
jl
loop
sbb
inc
fs
pop
sti
pop
mul
or
mov
lods
inc
sub
inc
and
or
mov
adc
push
in
nop
addr16
scas
fs
xchg
fiaddl
xchg
out
dec
or
fwait
or
push
les
push
pop
sbb
bound
cmp
push
or
in
xchg
les
mov
repnz
push
sub
ds
in
in
sub
cltd
rclb
fstl
pop
inc
js
sbb
mov
mov
test
fstpl
xchg
push
or
in
aam
xchg
mov
das
lret
subb
inc
or
insb
int3
push
jl
clc
cltd
adc
call
push
clc
or
arpl
pop
test
fnsave
or
cmp
jl
and
rorl
cwtl
cmp
sbb
or
arpl
test
dec
sbb
mov
sub
or
shl
push
and
popa
cmp
push
inc
lret
out
push
gs
cmp
xchg
scas
cmp
in
fadds
push
xlat
or
fnstsw
mov
in
or
pushl
push
add
jb
and
je
or
inc
js
lods
or
cmp
jae
sub
fbstp
sub
xor
adc
stos
or
cli
in
push
in
out
dec
imul
lods
mov
adc
jl
cmc
cmp
xchg
mov
lods
or
clc
or
fs
and
and
mov
xchg
adc
sub
jmp
sub
add
out
mov
test
and
or
lds
mov
or
mov
mov
into
sub
stos
xchg
jle
or
pushl
insb
inc
inc
jmp
popa
mov
sbb
jmp
ss
mov
stc
js
dec
fs
test
nop
leave
push
cmp
adc
mov
add
jge
stos
out
cmp
sub
nop
mov
aad
mov
in
in
fcmove
popf
ret
pop
insl
adc
mov
sub
pop
push
data16
add
loop
push
and
les
outsl
ss
repz
insb
out
jle
mov
pop
iret
pop
jns
and
lret
pop
jno
mov
xchg
int
andl
adc
fdivs
loop
andb
mov
jle
in
loopne
stos
mov
mov
adc
repz
out
xor
sbb
and
jge
mov
dec
fs
or
xor
mov
sbb
dec
das
pusha
xchg
rorb
mov
addr16
or
jne
out
movsl
addl
add
or
mov
lds
and
inc
shlb
orb
lds
sub
mov
dec
cmc
jecxz
pop
cli
inc
lcall
dec
lea
sbbl
and
mov
in
scas
or
sbb
xchg
mov
xor
adc
mov
in
pop
or
push
xchg
or
insl
mov
or
in
ret
fimull
xchg
dec
cmp
scas
hlt
pop
pop
repnz
jle
lods
or
mov
bound
push
filds
arpl
pusha
mov
scas
xor
es
or
adc
arpl
pop
inc
stc
add
or
and
adcb
adc
imul
xor
inc
sub
xor
push
jnp
sbb
add
jne
ds
ljmp
ret
xchg
add
xchg
test
rol
jp
dec
in
lds
or
mov
into
xchg
jb
xchg
aad
jns
outsb
popa
lock
push
cmp
inc
mov
xorl
mov
testb
call
mov
and
aad
shlb
and
jecxz
or
clc
jg
imul
sub
pop
pushf
in
jne
xor
mov
stc
test
fs
mov
and
clc
xchg
adc
or
hlt
xorb
jle
xchg
mov
push
pop
or
repnz
fisttpl
addr16
push
bound
cmp
sbb
mov
inc
sbb
repz
in
mov
fisubrs
pop
pmullw
rclb
mov
push
lock
cs
cmp
sti
test
jmp
stos
in
outsl
lea
cmp
or
outsl
xchg
cmp
push
popa
inc
lock
dec
lret
mov
xor
mov
pop
lahf
sbb
dec
out
call
dec
cmc
adc
or
insb
fildll
pop
in
adc
mov
and
sub
ret
imul
or
clc
jno
insl
mulps
mov
pop
pop
smsw
add
int3
and
icebp
or
jno
fsubr
sbb
sub
das
or
dec
int3
or
fs
add
rcll
sub
xchg
loop
mov
xchg
mov
push
jmp
xor
cmpl
dec
test
adc
adc
or
and
or
xor
ljmp
pusha
add
mov
test
loopne
mov
shl
les
xchg
cmc
shrl
push
ss
icebp
jae
inc
or
pop
cs
or
cmpsl
jge
sub
mov
inc
xor
sbb
push
sbb
nop
lcall
lock
sbb
mov
lret
enter
add
inc
lods
cmp
bnd
scas
addl
dec
pop
icebp
push
rolb
xchg
pop
add
or
jge
loope
and
cld
cmp
in
cmp
pushf
mov
mov
jne
in
fucom
pop
insl
into
push
xor
mov
imul
xchg
xor
lods
insl
pop
shrb
stos
and
cmp
mov
out
xchg
or
sbb
or
xchg
dec
pop
int
dec
mov
sub
int
in
jle
fcompl
pusha
cmp
sub
sbb
je
or
fisttpl
stos
icebp
ss
or
push
out
ja
or
pop
pop
stos
testl
ss
adc
sub
mov
xchg
in
mov
mov
bound
adc
repnz
sub
lahf
xor
mov
insl
sbb
push
xchg
xor
xchg
into
sub
jmp
inc
sub
inc
lods
mov
xor
cmp
imul
lds
test
imul
push
dec
sbb
mov
or
jo
pop
movsl
fimull
lods
fwait
mov
xchg
adc
adc
xor
adc
movb
mov
icebp
jle
repz
inc
cmc
or
xchg
arpl
or
mov
xchg
lcall
lock
sbb
imul
push
les
outsb
push
xor
cmp
inc
add
filds
xchg
imul
push
popf
push
adc
into
pop
mov
movsl
pop
mov
pop
or
push
sub
adc
or
loope
xor
jo
sub
lods
mov
cmpsl
cli
mov
cltd
pop
pop
sbb
pop
test
pop
dec
test
rcrb
daa
les
rorb
inc
or
cmp
xchg
jbe
in
adc
mov
in
push
inc
push
or
es
sub
out
mov
repz
roll
fs
xor
jns
pop
xor
mov
xchg
push
ss
cmpsl
es
mov
pop
out
jmp
lahf
pusha
and
xchg
pop
jecxz
adc
in
xchg
mov
sahf
popa
nopl
jne
xlat
jae
jo
or
pop
or
or
mov
leave
sahf
or
xchg
popa
lods
xchg
mov
push
push
fcomps
jae
mov
movsl
adc
repnz
xor
sub
sub
pop
mov
push
ret
in
jbe
sub
mov
mov
sbb
ret
arpl
mov
mov
inc
dec
xchg
call
jp
sub
int
les
jb
enter
lahf
mov
or
outsb
add
bound
mov
mov
outsl
jg
in
mov
cmp
stos
mov
aam
mov
or
popa
sbb
jns
into
das
cld
std
cmp
xor
mov
pop
imul
ljmp
inc
mov
add
ljmp
out
lods
sbb
xor
fisttpll
jne
out
add
sub
cmc
or
push
out
bound
sbb
or
add
test
sub
bswap
pop
xchg
popa
jb
push
insl
or
andb
mov
or
inc
stos
popf
lcall
sub
xor
cmp
cmp
test
push
sti
mov
orb
push
cmp
cmc
push
cltd
test
xchg
dec
sbb
sbb
rclb
bound
popa
into
sbb
and
imul
or
mov
scas
aaa
mov
pop
cs
cmpsb
int3
outsl
sub
push
xor
or
add
mov
xchg
popf
cmc
in
out
push
ret
aaa
ljmp
xor
fstpt
stos
add
outsl
cmp
test
insb
hlt
jbe
scas
sti
dec
jb
and
fisubrs
shlb
ret
cmpsb
or
movsl
scas
shl
sub
cli
push
mov
sahf
jmp
decb
out
clc
sti
aam
cld
push
xor
sbb
mov
sbb
inc
lods
leave
xchg
or
inc
and
hlt
ljmp
add
out
in
mov
fdivrs
and
mov
out
in
adc
in
mov
push
sbb
movsl
or
aas
push
pop
jp
or
stos
add
fwait
push
pop
rorl
lods
mov
or
popf
xlat
add
jb
adc
pop
cld
lock
dec
adc
or
sub
ds
bound
or
or
jg
or
outsl
fdiv
adc
and
das
shrl
inc
pop
jge
pop
ret
in
push
cmc
pop
pop
fwait
repz
sti
jnp
jecxz
dec
movsl
xchg
insl
mov
dec
pop
jbe
pop
or
sub
xor
or
out
repz
or
add
mov
jle
lods
xchg
inc
adc
add
push
mov
add
lea
cmp
mov
or
mov
test
or
aas
inc
xchg
mov
pop
mov
mov
ljmp
lds
mov
inc
pushf
adc
jne
cmp
or
add
cmpl
push
mov
fimull
mov
or
jl
jmp
lods
push
inc
sbb
stos
mov
or
lds
lock
gs
dec
loop
ret
stc
and
add
adc
fs
mov
sbbl
sarb
push
mov
sbb
xchg
mov
or
pop
inc
add
push
adc
push
lods
cmpb
dec
mov
nop
sbb
dec
add
ret
cmp
js
or
xchg
scas
cmpsb
mov
sbb
imul
into
addb
jp
repnz
adc
mov
sub
in
adc
or
lcall
cmpsl
adc
xor
push
jecxz
sahf
lods
adc
and
shrl
pop
push
lahf
test
arpl
xchg
pop
mov
leave
mov
out
and
and
sbb
into
fmulp
daa
or
popf
ds
in
adc
mov
mov
mov
mov
push
inc
aam
push
out
pop
int
or
or
mov
lret
orl
xor
gs
cmpsb
and
dec
pop
adc
cmp
dec
mov
or
sub
mov
fists
out
pop
dec
sub
and
sbb
iret
or
xchg
jge
outsb
or
mov
jo
enter
push
push
pop
je
mov
cli
mov
mov
inc
pop
ss
or
dec
pop
les
or
lods
pop
addb
sbb
inc
sbb
jo
pop
or
xchg
ss
mov
xchg
roll
in
or
movsb
mov
or
test
call
push
xchg
movsl
mov
insb
sar
add
adc
sub
lahf
inc
sbb
push
cmc
or
inc
mov
inc
sbb
xor
jnp
lock
mov
aas
push
cltd
add
jbe
inc
int3
decb
adc
mov
cli
lret
test
cmp
push
and
cwtl
call
and
mov
lods
lock
add
movsb
cmp
cltd
cmp
and
outsl
pop
or
mov
mov
cltd
jno
fisttpl
inc
inc
or
jb
adc
or
push
xor
or
shrb
inc
rcl
std
clc
dec
add
aam
dec
addr16
mov
xchg
fistpl
outsb
inc
xlat
loopne
std
iret
test
ret
insl
push
and
xor
cltd
rcr
jo
imulb
mov
jle
jmp
cs
xor
push
jb
out
mov
mov
mov
dec
adc
add
or
sub
in
leave
inc
scas
clc
in
fbstp
cvtps2pd
fs
xchg
jnp
mov
or
aaa
arpl
or
add
fcomip
sahf
add
push
call
cld
jns
or
dec
fdivs
or
cmp
rorl
mov
xchg
sahf
or
lret
insl
lret
or
pop
loope
inc
mov
or
xchg
add
or
push
fists
cmpsl
fwait
cwtl
xor
outsb
and
jg
mov
or
and
aam
cmpsb
imul
inc
data16
and
sub
jne
inc
add
inc
or
test
dec
or
pop
push
movsb
push
jge
cmpl
cwtl
popa
xorl
fldcw
test
or
cltd
lods
dec
sbb
test
sti
adc
insb
aaa
cld
loope
mov
or
ds
int
pop
add
push
mov
xor
mov
mov
or
into
test
repnz
sbb
xor
daa
aad
ja
sarl
mov
in
mov
cmp
pusha
cmp
into
mov
inc
or
test
inc
inc
jecxz
sub
movsb
dec
adc
or
das
jne
fisubs
insl
mov
outsl
andb
je
cmp
lahf
data16
repz
mov
stc
ss
mov
sub
mov
enter
movsb
negb
or
mov
lods
and
hlt
test
xor
cld
push
stos
xchg
or
fdivr
sbb
data16
mov
dec
mov
or
jnp
int3
shr
outsl
scas
je
fsubp
repnz
sbb
mov
test
mov
clc
mov
or
scas
adc
into
or
dec
pop
mull
or
cwtl
mov
jge
xor
cmp
jle
mov
mov
pop
inc
cld
outsb
cmp
lret
or
mov
jmp
test
sbb
jno
sahf
insl
add
add
ror
or
jno
jg
sub
out
sbb
push
dec
sahf
dec
or
adc
cwtl
orl
or
push
push
dec
out
scas
bound
in
leave
mov
sbb
xor
fcmovnu
adc
xor
or
add
dec
mov
loopne
or
fistps
cmp
xlat
dec
push
or
push
pop
or
stos
or
pusha
out
ds
into
jns
mov
mov
je
test
push
lret
repnz
roll
in
cmp
jb
xchg
int
stos
fdivr
test
pop
negl
cmp
mov
mov
fisubrl
and
inc
jle
lcall
call
std
lds
cli
lea
outsb
sub
pop
or
cmp
aad
insl
or
popf
push
je
or
push
mov
and
jmp
dec
cmc
lds
add
adc
out
or
leave
andl
sub
mov
sbbb
call
mov
jge
test
pop
xor
loopne
stos
imul
or
mov
jns
pop
inc
aas
add
and
iret
rorb
lcall
mov
imul
jmp
sub
sub
jne
pop
fcomps
push
push
xchg
aad
push
add
ja
and
mov
loope
jbe
add
and
pop
add
push
mov
les
sub
rol
cltd
sbb
mov
ljmp
push
inc
jbe
stos
pop
popf
int
enter
leave
sbb
inc
adc
push
bound
xchg
and
fsubs
jno
inc
mov
int
add
add
das
rcrl
or
into
addb
or
xchg
mov
xlat
or
mov
xchg
mov
ror
sbb
cld
fistps
mov
pop
xchg
decl
test
leave
cmp
mov
or
jae
jns
lods
out
clc
xlat
bound
mov
insb
pop
jbe
xor
push
push
enter
lcall
sbb
or
ret
testb
xchg
movsl
or
add
xchg
arpl
incl
or
or
dec
lock
movsb
les
push
jl
daa
sbb
fsubrl
lods
insl
push
adc
jb
call
mov
jge
leave
push
adc
or
js
pop
sub
cmc
sbb
xchg
fisttpll
scas
cmp
testb
mov
pop
or
sahf
sbb
enter
mov
into
jmp
mov
jmp
movsb
xchg
xchg
in
or
or
xchg
out
lret
inc
mov
daa
cmc
fimuls
jg
push
orw
rcll
stos
or
icebp
pop
jno
pushl
pushf
es
push
adc
sub
js
lret
testl
or
pop
subb
pop
sahf
out
or
sahf
push
mov
push
xchg
push
hlt
int
arpl
or
lcall
mov
or
lods
orl
push
inc
inc
lea
insl
js
sbb
mov
jb
inc
fbstp
sahf
or
jb
sti
jo
bound
fldcw
or
cmpsl
ret
sub
fdivl
cmc
adc
shl
ret
and
or
stc
cmp
aam
xchg
jp,pt
nop
lds
pop
push
adc
fisttpl
mov
icebp
sub
clc
dec
pop
or
cmp
ljmp
sbb
mov
adc
mov
add
arpl
push
movsl
cmp
or
push
and
sub
jge
mov
and
or
and
mov
not
dec
push
mov
mov
int3
push
sbb
xor
loopne
in
sub
mov
push
adc
cmovge
mov
pop
mov
iret
xchg
sbb
mov
divps
or
scas
in
pop
jb
add
fsts
adc
pop
or
push
mov
jmp
mov
arpl
or
add
sbb
lods
pop
push
cltd
xchg
inc
adc
nop
xchg
or
jl
push
or
mov
push
lods
pop
stos
cmpsb
fcompl
push
lods
into
or
xchg
cmp
inc
insl
sbb
adcl
stc
insb
leave
mov
mov
jno
xor
mov
mov
aam
or
jg
dec
repz
int
sub
je
adc
pop
sti
movsl
ficoml
adc
cld
push
loopne
shrb
repnz
fs
movsb
or
addr16
pop
cmc
or
cld
xlat
mov
dec
movsb
test
adc
das
or
xchg
xchg
sahf
orb
mov
lods
pop
fcmovnbe
sbb
or
mov
aaa
mov
add
pop
pop
push
add
out
ficompl
sbb
add
lret
in
xchg
inc
cmp
sbb
or
cmp
xchg
add
xchg
lret
push
in
iret
mov
stos
cld
das
cmpsb
data16
or
jl
xorl
mov
clc
pop
adc
icebp
add
push
xor
fsubrp
incb
push
sarb
imul
mov
int3
cld
hlt
ret
jns
test
ds
aas
cmp
sub
lods
sbb
xchg
mov
dec
daa
jae
nop
hlt
idiv
insb
pop
daa
adc
sub
jb
mov
sbb
jns
add
imul
dec
add
lea
fistpl
ss
mov
cld
rolb
jp
cmpsb
mov
cmp
test
inc
push
dec
imul
ljmp
bound
add
dec
mov
cmp
out
inc
adc
lods
int
sbb
ffreep
lcall
rorb
push
mov
ja
add
mov
xor
aas
pop
pop
xor
call
nop
pop
pusha
jbe
or
mov
scas
ret
pop
sbb
xchg
or
je
or
dec
pop
lods
or
enter
adc
xchg
dec
inc
adc
push
cmp
mov
ds
jbe
daa
inc
adc
lcall
and
mov
in
xor
xchg
or
icebp
cmpsb
dec
xor
mov
clc
mov
insb
int
test
and
xchg
lods
jle
in
mov
push
xchg
add
adc
pop
or
adc
setle
lahf
ljmp
sarl
int3
mov
inc
ficompl
mov
sub
pusha
xchg
outsb
fisttpll
sub
xor
repz
inc
mov
adc
sub
push
rcr
inc
xor
pop
push
jl
sbb
mov
mov
sbb
andb
or
xor
mov
or
int3
aam
mov
add
sub
pop
dec
enter
in
cvttps2pi
mov
fists
stos
add
out
or
mov
sarl
sub
stos
iret
jne
sbb
adc
mov
cmpl
frstor
clc
xchg
and
outsb
sbb
inc
sub
jne
dec
xchg
mov
cli
stc
push
xchg
jo
or
push
sbb
or
nop
sub
dec
shlb
or
mov
sahf
xchg
iret
ret
aaa
cmp
adcb
and
sub
jecxz
imul
push
movsb
jle
sub
cmp
aas
adc
es
nop
or
xchg
inc
adc
out
xchg
fs
or
sahf
push
or
into
adc
sub
inc
cmpsl
sub
mov
aam
add
addb
dec
fsubrs
xlat
imul
test
int
mov
out
add
push
int3
popa
test
add
jno
mov
mov
mov
push
icebp
adcb
aaa
popf
int3
mov
mov
fiadds
push
mov
lahf
movsl
lret
sbb
mov
push
or
push
out
jmp
outsl
mov
jecxz
jae
lcall
jb
add
or
push
repnz
pop
or
jl
push
mov
pop
in
adc
dec
push
rorb
fistps
pushf
push
mov
aam
or
and
iret
imull
out
dec
jg
arpl
adc
inc
daa
xor
jae
or
add
sbb
ret
popf
subl
nop
cmp
fiaddl
insl
adc
sbb
stos
je
shrb
and
mov
mov
or
push
andl
xor
sub
sub
or
mov
add
jo
lods
xchg
filds
inc
or
and
or
call
inc
adc
mov
loop
nop
adc
cmp
dec
das
dec
outsl
sarl
testb
rclb
jno
xor
imul
or
and
movsl
aad
sbb
cs
aam
imulb
mov
cmpsl
sub
jp
pop
xchg
xchg
sub
addr16
setge
or
sahf
int
jge
jae
adc
cltd
sbb
or
mov
test
mov
cld
pop
insl
clc
or
pop
hlt
cltd
arpl
je
cmp
mov
cmc
jecxz
into
mov
dec
inc
and
decl
xchg
scas
sbb
or
and
add
idiv
and
mov
adc
dec
shl
popl
in
lods
sbb
adc
adc
jo
icebp
dec
or
sub
mov
aam
dec
mov
inc
mov
or
mov
popf
lret
add
addb
xchg
repz
nop
pop
lods
mov
aas
sbb
shl
shr
jae
fsubrp
cwtl
sub
sbb
inc
xchg
sbb
xchg
pop
repz
or
jnp
int3
out
in
mov
add
repnz
cmp
shrb
rorb
mov
mov
or
inc
mulb
in
or
xor
outsb
test
pop
jae
lods
inc
pushf
addr16
sbb
or
rcrb
adc
fwait
ss
add
fs
jge
xchg
cmpsl
or
rolb
andl
inc
in
test
add
fbstp
repz
cmc
jge
dec
add
or
sbb
fisubs
mov
sub
adc
or
cmc
mov
out
inc
cmpb
or
fsubrl
mov
sbb
or
inc
mov
stos
or
daa
clc
xor
cmp
or
adc
in
cmp
ds
out
or
and
sub
xor
pop
adc
cmp
cmpsb
vmovsldup
imul
sub
pop
pop
pop
int
pop
cli
sahf
aam
out
push
add
loope
jb
or
mov
or
sbb
mov
mov
push
in
add
xchg
dec
mov
cmp
pop
adc
movsl
sti
shll
rcrl
pop
or
sbb
sbb
lcall
ljmp
xlat
cli
pusha
out
js
or
xchg
sarb
nop
cmc
shrl
or
icebp
fstps
or
arpl
mov
cmp
cvttps2pi
mov
je
decb
xor
and
or
imul
sub
aad
popf
fwait
mov
xor
or
dec
mov
cwtl
push
ss
dec
int
sub
ljmp
cmp
cld
push
nop
sub
out
mov
xlat
stos
and
jecxz
xor
jmp
dec
clc
pop
popf
loope
pop
sub
sbb
shrd
jp
pop
loopne
mov
call
fisubrs
fdivs
lds
scas
cmpsb
in
mov
mov
test
sub
fwait
add
add
or
jo
dec
mov
addr16
loope
push
ds
sub
fimuls
jle
add
lds
cli
push
sbbl
popf
addr16
or
pop
lods
lret
cwtl
or
fdivp
lock
mov
push
ret
mov
dec
push
in
cwtl
in
cmovs
adc
fimuls
nop
mov
xlat
and
push
add
or
add
xchg
lods
popa
inc
nop
xchg
sbb
inc
mov
or
push
mov
pop
divb
ss
push
or
inc
sub
imul
pop
mov
mov
out
cmpsl
pop
adc
lcall
xchg
cmp
setg
cs
decl
or
inc
ds
fbstp
repz
xchg
mov
add
and
dec
sub
lods
sbb
repz
jecxz
mov
cli
stos
xchg
cmp
cltd
cmp
inc
mov
sub
sbb
pop
fwait
or
mov
int3
out
push
sti
adc
mov
outsl
cmpsl
dec
fsubl
out
loope
lret
bound
lret
pop
fidivrs
ret
push
sub
mov
sbb
test
jg
arpl
aas
into
jl
or
pop
jno
stos
or
scas
repz
insb
aas
div
cld
loopne
sahf
outsl
push
and
or
sub
cmc
inc
call
arpl
test
dec
sbb
add
push
inc
inc
xor
and
imul
dec
push
mov
das
or
mov
dec
stos
lods
sub
xchg
push
subps
xlat
jg
adc
pushf
lods
insl
loopne
dec
mov
orb
xchg
mov
loopne
xchg
test
mov
or
cli
mov
dec
adc
cmp
loopne
fwait
cltd
sahf
jb
or
mov
push
fimuls
jbe
xchg
or
outsl
mov
ss
pop
xor
arpl
xchg
lea
or
loopne
cmp
push
push
or
push
out
stos
jno
fimuls
clc
insb
mov
sub
das
xchg
or
xor
sub
or
push
dec
pop
inc
or
fmulp
cmp
mov
negb
adc
dec
out
pusha
add
sbb
dec
inc
int3
xlat
push
fs
icebp
sbb
sub
shlb
mov
dec
mov
cld
jmp
jl
lods
adc
sbbl
adc
add
fs
or
das
shrl
jmp
pusha
mov
or
adcb
sub
ds
in
adc
jge
arpl
ret
push
add
or
add
sbb
cmc
sub
push
mov
sti
cwtl
sub
or
mov
mov
into
int3
add
mov
jne
aam
addr16
jnp
leave
rorb
inc
lods
pushf
cmp
bound
into
daa
or
testb
push
and
nop
sub
xlat
sbb
jle
out
jge
jecxz
add
mov
mov
xor
sub
push
mov
or
in
or
out
adc
dec
lock
mov
sbb
test
lahf
or
outsb
test
aad
mov
popa
or
push
cli
aam
or
mov
popf
or
rcll
mov
loopne
lods
dec
lahf
jo
adc
cwtl
daa
cmp
or
lret
lock
inc
test
mov
dec
adc
jmp
insb
popa
push
jle
push
hlt
dec
xchg
ja
aaa
lds
adc
iret
mov
or
jno
adc
popa
rcl
scas
bound
into
insl
mov
dec
sbb
out
cmpsl
push
or
sahf
fcmove
sbb
or
jge
scas
inc
sbb
dec
cmp
xchg
cmc
adcb
mov
repz
push
aam
mov
repnz
sbb
ljmp
insl
mov
dec
jle
jl
rclb
prefetch
pushf
fwait
cmc
aad
fimuls
mov
and
je
ftst
pause
ss
fistpll
inc
mov
or
loop
mov
and
notl
cmpsb
lcall
sub
and
sub
inc
dec
mov
mov
dec
lcall
add
add
std
xor
faddl
int
out
nop
cmp
orb
or
insl
and
mov
add
cltd
jns
js
xchg
sub
notl
push
and
fdivl
cmp
or
dec
cld
in
adc
into
popa
jle
lds
adc
sub
fwait
jbe
les
fdivp
mov
jl
es
xlat
outsb
xchg
or
add
inc
stos
mov
and
hlt
add
ljmp
mov
std
sbb
shlb
shll
mov
xor
and
lods
push
xlat
out
fcoml
int
mov
push
in
mov
jge
adc
add
pop
or
pop
call
mov
or
flds
cmp
and
and
adc
lds
jl
or
sti
xlat
or
mov
mov
nop
or
fsts
sahf
inc
or
hlt
sub
nop
stos
outsl
lods
xchg
or
mov
push
das
arpl
mov
cwtl
mov
jle
pop
outsl
xchg
insb
sbb
int3
pusha
dec
mov
xchg
dec
adc
xor
pop
jle
stos
ret
and
sub
sbb
in
xchg
and
pop
enter
and
jb
mov
stos
out
cmp
cmp
or
mov
cltd
sub
mov
push
sbb
rcl
sub
call
xor
dec
xor
inc
jne
in
jbe
repnz
adc
mov
jle
fldl
mov
xor
adc
or
mov
or
daa
adc
fsubrs
push
mov
icebp
jbe
pop
jo
push
inc
or
or
aam
inc
add
insl
sahf
adc
pop
data16
lock
or
int3
stos
dec
movsl
pusha
fldl
or
pop
sbb
dec
jp
cmpb
lahf
cs
push
repnz
mov
mov
into
push
xchg
out
movsb
sub
imul
adc
xlat
aas
inc
push
adc
mov
insb
cmpsb
sbbl
jns
not
filds
xor
or
lret
pop
mov
xchg
and
sbb
cmp
pop
jmp
pop
and
das
aas
into
outsb
or
popf
repnz
or
lods
js
repz
loop
orb
outsb
ss
cwtl
pusha
push
lret
testl
repnz
fistps
or
jmp
sub
xchg
push
fisubrs
cli
dec
or
adc
repz
push
adc
iret
or
mov
std
push
jae
xorl
fisubs
add
mov
adc
or
sbb
bound
mov
push
cmpsb
jecxz
pop
pop
push
cwtl
movsb
popf
adc
push
sbb
xchg
leave
pop
incb
dec
or
jmp
and
pop
inc
mov
movsb
sbb
or
push
roll
mov
mov
or
fldl2t
test
or
out
daa
rorb
scas
movsl
cmp
or
std
insl
les
test
fwait
or
fisubrs
scas
dec
jne
incl
push
mov
aam
fisttpl
lds
es
rcrl
cmp
or
mov
mov
xor
pop
or
push
pushl
int3
mov
ss
or
lods
inc
mov
lock
testl
insb
xchg
cmp
sbb
rol
subb
es
lods
es
xlat
popa
leave
or
outsb
outsl
or
or
inc
mov
lock
test
or
adcb
or
mov
push
sub
mov
adc
stos
dec
setns
or
lret
push
or
cli
movsl
fisttps
mov
out
in
mov
sub
jecxz
add
xchg
or
fldcw
add
cmp
in
push
fwait
add
mov
jns
lahf
lods
or
and
mov
in
in
sub
or
dec
cmpsl
xor
cld
in
punpcklbw
or
push
sub
insb
mov
xchg
lods
jle
mov
add
lcall
sbb
and
dec
or
push
arpl
jo
subb
icebp
es
fs
shrl
prefetch
lock
sbb
pop
jmp
and
bound
adc
push
daa
ja
sub
cmp
adc
daa
jmp
scas
sub
add
mov
int3
bound
sub
or
movsl
and
roll
sbb
sub
jbe
sbb
jmp
mov
cmp
adc
in
cmc
push
inc
or
movsl
test
mov
push
inc
andb
sbb
push
or
scas
mov
and
ds
sub
lahf
sbb
sub
and
aas
push
or
ret
mov
sahf
dec
loopne
dec
aaa
pop
push
or
adc
insb
adc
test
jo
and
xchg
icebp
pop
jne
mov
dec
std
or
mov
sub
or
jno
cld
mov
loopne
into
stos
or
mov
int
cmp
add
repz
pop
push
pop
cld
int3
das
movsl
push
lret
sbb
or
mov
mov
shrb
cvtdq2ps
or
or
jp
cli
lret
adc
adc
pop
sahf
mov
jmp
jle
stc
sub
jge
fimuls
sub
das
sbb
push
dec
pop
ficompl
jl
sar
mov
xchg
ds
or
adc
enter
lret
jecxz
or
cs
js
or
jmp
push
jo
movsb
inc
call
push
add
jnp
push
sarb
mov
adc
fmull
jl
icebp
js
xor
cld
scas
and
jecxz
add
inc
mov
pop
jp
insl
add
out
shrl
repnz
in
or
push
aas
mov
xchg
or
pop
repz
xchg
add
or
inc
mov
inc
mov
and
or
ja
in
into
or
cwtl
pop
in
xchg
or
or
stos
jae
stos
test
jb
mov
pushf
insl
outsb
jb
xchg
sbb
dec
cmp
dec
hlt
and
out
mov
inc
fs
mov
dec
ljmp
jle
leave
push
sbb
lods
adc
out
gs
mov
adc
inc
insb
sbb
adc
push
in
adc
jmp
mov
in
or
sub
out
outsb
adc
or
cmp
into
or
loop
hlt
mov
data16
out
mov
pop
lahf
add
rep
mov
pushf
out
jge
or
fsubl
dec
mov
sbb
in
push
lds
ficompl
pop
jmp
dec
xlat
cmp
jl
stos
iret
or
stos
or
push
sar
or
pop
add
add
in
imul
adc
push
or
das
dec
inc
jb
test
and
dec
std
mov
lods
adc
sub
ret
jmp
xchg
ffreep
pop
inc
or
pop
sub
sbb
jns
or
or
xchg
or
mov
rorb
mov
insl
pop
mov
in
push
call
dec
dec
mov
movups
roll
cmp
movsb
loope
in
inc
pop
dec
sub
popf
imul
or
dec
test
or
jmp
add
push
ror
push
js
push
scas
lea
and
test
push
jl
sti
sbb
fcomi
or
dec
sbb
lods
lea
adc
push
frstor
add
push
aas
or
jg
xor
pop
pop
adcb
test
lcall
push
or
aas
cmp
mov
jne
mov
adc
je
fwait
sub
fildl
out
or
cmpsb
ret
or
push
popa
lds
dec
dec
aas
into
gs
fists
dec
sub
mov
push
loop
inc
mov
dec
das
push
xor
push
jb
or
fdivrs
repz
mov
iret
xor
dec
insl
lock
or
mov
mov
mov
dec
or
dec
sbb
sub
incb
or
arpl
dec
push
sub
jbe
insb
dec
fnstcw
or
les
or
sets
add
add
test
imul
out
cmpsl
push
pusha
pop
dec
bound
das
nop
cltd
sbb
xor
stos
cld
xchg
nopl
mov
addr16
in
int
ja
lods
mov
lea
test
push
sbb
xor
mov
notb
pop
add
push
or
hlt
adc
aas
or
data16
dec
push
stos
and
or
mov
mov
push
pop
or
push
cmp
gs
jecxz
adc
push
je
imul
push
push
xchg
add
jns
mov
mov
push
in
add
ja
test
jbe
add
gs
mov
xlat
jp
jns
or
inc
je
pop
sbb
xchg
xor
sbb
mov
scas
jmp
daa
push
subb
xchg
mov
adc
dec
divl
inc
lods
xchg
jg
push
push
mov
jne
add
mov
or
sub
rcll
fists
pushf
in
jno
xchg
neg
sub
add
test
insb
hlt
and
mov
adc
add
push
or
jns
movsl
shlb
sbb
inc
and
daa
add
into
adc
fstp
loop
and
mov
mov
jp
add
cmp
test
and
or
cs
sub
pop
lea
or
imul
pop
mov
arpl
in
cld
mov
test
out
sub
push
or
outsl
dec
inc
pop
or
mov
sti
jmp
lret
xorl
inc
add
or
or
das
xor
nop
pop
in
or
pop
xchg
daa
in
out
mov
adc
scas
mov
and
add
lret
dec
dec
ljmp
ffree
add
fildl
dec
in
xlat
movsb
xchg
mov
and
cmp
adc
mov
sub
test
jle
add
push
fistl
pop
adc
cmpsb
sbb
mov
or
sub
dec
arpl
movups
in
push
mov
adcl
add
push
push
icebp
sub
xor
into
sti
or
imul
pop
or
pushf
ret
into
pop
rcrb
or
mov
hlt
decb
pushf
outsb
sbb
mov
popf
loope
jl
scas
shr
add
or
push
fidivrl
push
divl
push
fsubrs
hlt
std
leave
cmp
sbb
sti
mov
sarl
lds
test
dec
mov
push
add
ret
xchg
mov
fdivl
push
movntps
mov
lahf
fisttpll
sahf
lods
push
cs
dec
mov
rolb
lods
xchg
enter
mov
fisttps
rorb
mov
lret
mov
call
or
repnz
or
int3
int
mov
fists
mov
hlt
insb
dec
fimuls
jle
xchg
cmp
loopne
or
dec
lcall
mov
sub
ljmp
xchg
sbb
push
ret
mov
movsl
ja
std
mov
inc
or
mov
mov
sbb
or
daa
loopne
sub
ja
andl
scas
data16
or
ret
test
and
mov
sub
cmpsl
or
test
inc
testl
insb
cmp
mov
mov
sbb
dec
jns
pop
sarb
push
jge
or
and
testb
scas
por
out
movntq
shrl
adc
dec
cmp
test
pop
dec
and
cmp
and
cmp
std
sbb
xchg
jmp
push
push
push
or
test
sbb
and
xlat
or
enter
or
lods
repnz
push
pusha
pop
push
nop
jecxz
iret
lock
or
in
xchg
js
ja
xor
sbb
stc
test
insb
xchg
imul
sub
cmp
in
insl
repnz
sbb
xchg
cmp
or
xor
mov
cmp
and
jmp
mov
mov
ret
ds
jbe
or
cwtl
mov
or
fnstcw
xlat
cmpsb
or
mov
mov
push
add
orl
pop
add
shlb
mov
xchg
cmp
sub
inc
test
aam
and
jmp
sub
inc
rcl
ret
push
stos
movsl
jne
inc
rorl
pop
jnp
pop
pop
mov
int3
adc
leave
stos
rcll
fcoms
sbb
sub
mov
push
and
cmp
xor
lds
jbe
push
in
pop
sbb
cmpl
xchg
cltd
rcl
xchg
outsb
test
cli
fimull
mov
test
sbb
push
clc
adc
adc
and
loop
cs
test
or
inc
xchg
mov
dec
xchg
rcrb
dec
sahf
movsb
or
hlt
xchg
int3
push
or
adc
xor
push
dec
or
jle
sub
xor
push
ja
sub
or
mov
orb
sahf
xchg
sbb
pop
add
int3
pop
fdivp
dec
jge
add
inc
jne
mov
rorl
cmp
je
or
inc
rcrl
pop
dec
scas
fiadds
add
or
xchg
int3
xor
adc
sahf
stos
xor
popa
sub
sub
aad
mov
or
leave
faddp
scas
mov
add
je
cmp
mov
into
add
imul
popa
insl
sbb
jmp
adc
xchg
aam
ret
ljmp
fstps
test
hlt
mov
mov
fmull
inc
std
mov
cld
push
adc
mov
sub
popf
or
push
or
sbb
aaa
add
ret
push
pop
jmp
or
jnp
insl
xchg
or
lret
xchg
mov
mov
xlat
or
out
mov
outsb
mov
adc
pop
adc
in
je
or
jl
jbe
or
add
mov
jecxz
sbb
push
lret
out
call
or
nop
cmp
or
mov
push
xchg
or
decl
xor
or
adc
fisttps
out
out
cmp
in
adc
or
mov
aaa
movsl
or
inc
clc
lret
add
bound
mov
rorb
dec
mov
inc
pop
inc
push
sbb
mov
int3
arpl
outsl
lods
jmp
in
add
sub
hlt
push
fisttps
prefetch
subb
loop
or
sbb
test
sub
int3
xchg
pop
pop
sbb
or
jge
imul
jb
rcrb
cmp
js
imul
jp
iret
hlt
jns
jae
test
mov
pop
mov
and
fwait
pop
sarb
inc
fs
fxch
or
shrl
add
dec
xchg
or
and
stos
mov
fisttpl
or
out
leave
imul
in
or
push
pop
mov
sbb
rorl
xor
push
mov
xchg
mov
xor
xor
and
sub
fcmovu
nop
mov
push
push
iret
or
and
xlat
mov
scas
dec
jno
fsub
or
xor
lods
and
mov
xchg
fiaddl
xlat
sub
int
or
movsb
cmp
repnz
mov
and
jb
data16
out
mov
imul
push
mov
adcl
and
cmp
outsb
testb
lods
imul
cld
loop
mov
bound
mov
xchg
pop
jmp
mov
loope
je
pop
mov
sbb
dec
js
jmp
rorl
jecxz
sbb
and
and
imul
or
fidivrl
and
and
push
xor
adc
or
sti
or
sub
xchg
sbb
insb
lods
dec
gs
test
aaa
lcall
push
stos
cmc
cld
sub
ljmp
or
sbb
sahf
popf
scas
or
nop
dec
repnz
dec
cmp
pushf
or
mov
xchg
or
jb,pn
adc
push
or
xchg
and
gs
push
mov
cli
adc
es
or
sbb
add
cwtl
jmp
subl
adc
xchg
or
aam
stos
adc
mov
or
mov
sub
or
fistpl
inc
nop
sbb
and
push
or
cs
dec
sub
in
pop
sbb
xor
and
or
les
sti
xchg
lods
call
test
fstps
pop
les
test
fisubrs
imul
aaa
int3
mov
sbb
jp
shrb
inc
fdivr
cmp
pop
mov
push
jecxz
push
mov
shlb
sub
addr16
mov
or
sub
out
pop
or
int3
mov
int
adc
adc
jmp
inc
or
xchg
sti
sahf
gs
pushf
xor
cmp
in
out
shrb
loop
pop
ds
or
sub
and
xor
pop
mov
jge
fs
sbb
cmp
xchg
imul
mov
mov
xchg
sub
xchg
mov
cmp
loop
pushf
pop
fucomi
sub
mov
or
insl
xchg
jb
in
mov
push
repnz
xchg
dec
or
sub
add
mov
loope
jg
dec
int3
add
inc
inc
mov
adc
lar
dec
xor
xor
lahf
add
cmp
and
mov
in
pop
dec
inc
lds
inc
mov
lret
pop
ss
fdivs
or
cmpsl
cmp
pop
lret
and
lahf
inc
xchg
jb
or
mov
fmulp
or
mov
flds
mov
adc
push
inc
fcomip
push
lods
mov
int3
sbb
xchg
dec
mov
mov
sbb
mov
ds
mov
lods
push
push
inc
in
aam
in
ds
sub
lods
test
jns
jmp
ret
stos
or
dec
xchg
push
xlat
mov
test
lea
int3
jb
movsl
sbb
sub
mov
inc
or
into
in
jns
sub
pop
mov
cmp
ret
mov
dec
mov
stos
mov
dec
mov
add
out
cmp
sbb
pushf
fisubrl
cmp
sbb
inc
ja
stos
or
in
or
sub
orl
mov
dec
int3
in
mov
sbb
sub
push
sbb
xor
or
add
in
dec
cmp
incl
xchg
or
adc
add
int3
lret
lcall
idivb
outsl
aas
xor
sti
call
pop
cmpsb
repz
in
ja
int3
cmp
dec
scas
sti
or
in
stos
test
and
enter
xchg
loopne
cmp
ds
movsb
mov
mov
push
insl
mov
add
dec
stos
inc
ds
sub
int
inc
lcall
add
adcb
pop
add
outsl
in
adc
mov
cs
popf
mov
repz
xor
jb
dec
test
mov
mov
cmp
sbb
mov
fcmovbe
rorb
mov
adc
fiadds
or
or
pop
mov
shll
or
in
inc
or
imul
pop
sarl
iret
dec
or
xor
sub
or
nop
loop
int
or
pop
cmpsl
mov
das
or
dec
or
stc
pop
lea
sub
mov
add
mov
orb
pop
pusha
and
icebp
add
mov
lea
or
das
mov
or
dec
pop
mov
sub
adc
or
out
xor
pop
push
into
sub
mov
adc
xchg
out
add
bnd
or
aaa
mov
sbb
jae
sub
jbe
in
push
or
and
mov
outsb
lret
fistpl
inc
scas
in
xchg
clc
fidivrs
outsl
jae
push
inc
jnp
mov
pop
or
stos
mov
or
and
sbb
pop
in
outsl
icebp
xor
jmp
mov
gs
pop
cmc
jmp
int3
or
inc
rorl
stos
sub
jmp
int
or
add
jmp
or
lds
in
dec
sahf
aas
xorb
push
shl
sbb
push
xchg
fidivrl
xchg
jmp
or
xor
mov
and
sbb
cwtl
or
out
hlt
out
clc
mov
fstpl
sbb
inc
or
rol
mov
or
mov
and
mov
pop
lods
pop
xchg
pop
mov
or
lds
dec
jle
enter
clc
jecxz
or
pop
inc
pop
ret
dec
sub
loopne
add
nop
or
shlb
add
or
sbb
push
rorl
and
sti
pop
hlt
or
sbb
icebp
mov
dec
cmc
popa
loope
dec
or
dec
ss
jbe
or
mov
out
mov
clc
movsl
mov
jg
xchg
hlt
cmp
mov
in
test
pop
adc
stos
lods
insb
in
mov
aaa
fbld
cli
adc
daa
add
cmp
jbe
mov
xchg
popa
addb
cmpsb
or
fcmovu
cmpsl
xor
pushf
movsl
clc
or
mov
add
int3
cmp
rcl
cs
add
inc
test
pop
sti
mov
or
and
hlt
cmp
mov
mov
xchg
push
jge
ret
push
push
adc
sbb
rol
sahf
jns
pusha
movsl
lods
dec
out
call
mov
or
fists
lds
sub
push
or
cmpl
or
out
dec
or
mov
test
ficoml
or
mov
fs
or
xchg
or
imul
out
fldl
and
or
inc
mov
int
or
push
dec
sub
neg
sbb
pop
rclb
xchg
or
aas
sbbb
leave
inc
pop
push
mov
xor
rorb
in
mov
xchg
xchg
xchg
push
out
adc
movsl
out
jge
or
popf
push
push
lds
adc
push
xorl
ljmp
mov
test
aad
aaa
dec
leave
sub
popl
lods
or
cwtl
jle
mov
jecxz
pushf
push
xor
addr16
and
addb
add
mov
pop
jns
imul
fisubs
add
mov
adc
vmovaps
movsl
jge
fidivs
mov
ret
imul
imul
and
fwait
pop
mov
rcll
cmpsb
or
add
in
pop
or
pop
pop
xor
xchg
and
sbb
cmpsb
jge
cmp
je
adc
jp
inc
ss
insb
mov
mov
push
fstpt
fsub
stc
nop
push
adc
stos
in
arpl
mov
fbld
cmpsl
test
inc
nop
clc
adc
lea
nop
adc
hlt
pop
stc
push
adc
out
jo
test
fisubs
xchg
pop
lea
lret
cmpsb
lds
addl
stos
in
imul
xchg
gs
inc
dec
dec
mov
inc
jge
ja
xor
inc
inc
mov
push
mov
adc
and
xchg
jle
lds
movsl
jns
hlt
gs
dec
lods
in
inc
aas
pop
fidivl
aam
xchg
and
mov
sbb
lods
or
stos
mov
sbb
push
mov
mov
cmovs
pop
outsl
lods
mov
adc
gs
rcll
push
unpckhps
leave
jecxz
mov
icebp
mov
and
int3
jl
sbb
adc
lock
or
sub
inc
and
fidivs
pop
sub
cmp
xchg
add
pushf
aaa
xchg
push
sub
sub
and
and
xor
lock
cmpsb
inc
repz
xlat
mov
cld
int3
xchg
fs
icebp
fdiv
out
xchg
out
iret
push
or
sbbl
push
adc
pop
push
push
sbb
aad
adc
sahf
pop
and
jnp
sbb
in
push
cmp
in
sub
cli
and
cmp
cmp
sub
or
pop
and
and
hlt
sub
mov
out
imul
aaa
in
mov
jno
out
in
das
mov
add
pop
fimull
mov
mov
pop
in
dec
ds
sbb
ljmp
out
jns
imul
sbb
lods
cmpsb
loope
pusha
mov
cltd
xchg
nop
mov
pop
mov
imul
movsl
mov
push
dec
pop
es
test
in
stc
lds
gs
sbb
adc
sbb
outsl
cmp
add
int3
xchg
pop
pop
notb
out
push
cmc
cwtl
push
sub
data16
adc
in
test
and
pop
movsl
jl
rol
lods
jmp
cmpsb
jg
add
fbld
pop
inc
ret
out
mov
mov
mov
adc
inc
leave
es
cmp
push
adc
mov
mov
daa
nop
pop
adc
movsl
ficoml
test
dec
sub
subl
and
pop
inc
push
test
les
sbbb
cld
adc
pop
fimuls
dec
xchg
int3
lahf
out
cmp
cmp
xchg
sub
out
sub
add
int
mov
push
add
sub
add
jbe
test
outsl
sbb
fwait
mov
mov
andb
mov
dec
cmpsb
clc
jecxz
cwtl
mov
push
popa
mov
mov
mov
mov
movq
nop
mov
paddd
push
sahf
sbb
push
arpl
pop
or
lds
push
sbb
add
pop
movsb
xchg
sbb
sbb
dec
sbb
xor
sub
repz
inc
movl
or
cmpl
andl
dec
and
sbb
in
pop
mov
test
add
inc
sub
xchg
dec
xlat
cmpsb
cltd
jns
imul
mov
xchg
rclb
xchg
in
adc
xchg
in
adc
lea
lea
lea
lea
nop
movsb
adc
dec
es
push
fucom
add
pop
xorl
sub
xor
xor
xor
xor
xor
xor
mov
lds
mov
mov
nop
cmp
fldenv
and
xor
xor
repz
fwait
icebp
xlat
adc
fimuls
and
sahf
ja
push
repz
rcrb
mov
and
and
dec
xchg
push
loop
popf
movsb
xchg
movsb
pop
sarb
mov
mov
test
pop
loope
pop
dec
or
pop
adc
sbb
xchg
sub
gs
xchg
and
adc
aas
inc
mov
adc
jns
adc
mov
push
mov
aad
pop
out
inc
rorb
in
jne
inc
sbb
sbb
out
mov
imul
sub
pop
mov
push
ficoml
es
das
ud2
in
lds
lcall
dec
push
movb
mov
je
cmp
lds
in
dec
out
lret
sub
cld
jecxz
adc
push
adc
xchg
mov
aad
arpl
test
or
mov
or
adc
xchg
xor
test
orb
lea
pop
lcall
pop
push
loope
dec
xchg
fistpl
and
lret
and
pop
fwait
xchg
sbb
es
mov
add
inc
jecxz
and
lea
out
loope
es
mov
mov
mov
nop
jg
negb
imul
push
dec
sahf
dec
push
into
mov
xor
mov
insl
inc
sub
gs
sbb
mov
cld
mov
cmpsb
repz
sbbb
nop
cltd
adc
mov
lods
in
lds
sub
jo
push
in
jmp
and
adc
paddb
lret
rcrl
movsb
cmp
aam
pop
aaa
adcb
je
pop
dec
int3
add
pop
pop
xor
int3
cmp
mov
mov
mov
mov
rorb
add
fsub
mov
ret
lds
call
fdiv
xor
test
cmp
in
adc
cltd
out
in
cs
pop
rorl
inc
pop
in
leave
mov
xor
xor
xor
dec
pop
popa
add
sbb
lock
mov
test
adc
mov
jns
imul
nop
popf
adc
popf
fwait
pop
xchg
cmc
or
pushf
sbbb
rorb
inc
in
nop
xlat
adc
sub
sub
call
mov
scas
fmul
fiaddl
pop
pop
scas
cld
add
cmp
lock
adc
ds
xchg
push
push
mov
xor
xchg
xor
aam
inc
jne
xchg
pop
pop
sahf
add
push
add
sbbb
add
pop
or
cwtl
add
jg
out
fadd
les
mov
cwtl
data16
bound
jle
mov
cmp
mov
inc
push
loopne
ficoml
outsb
cmp
in
lds
in
jnp
mulb
or
mov
mov
test
mov
mov
sub
fs
mov
rorb
add
adc
mov
sbb
xchg
jmp
es
or
xlat
cmp
xor
xor
mov
push
sarl
mov
mov
mov
cs
dec
dec
inc
lret
xor
and
sub
inc
sub
mov
mov
jne
xor
popf
or
pop
mov
popf
rcrb
mov
test
mov
jmp
sub
xor
test
add
das
repnz
dec
adc
add
push
inc
mov
out
fcmovu
sbb
nop
fcmovnu
add
cwtl
fstl
jae
icebp
mov
xchg
jns
sub
mov
inc
sub
mov
fdivl
jo
xor
inc
cmc
addl
sbb
add
adcl
in
xchg
int
nop
xchg
cld
xchg
xor
test
cmp
jo
mov
int
in
in
nop
sub
dec
mov
adc
in
test
movsb
in
mov
and
mov
pushf
leave
pop
rorb
out
dec
sbb
jns
fsubr
sbb
aaa
in
ss
xchg
in
hlt
in
xor
push
in
push
in
mov
adc
push
in
outsl
in
dec
in
dec
push
lods
arpl
test
test
addr16
out
sub
les
add
sti
adc
and
std
push
jbe
mov
or
mov
pusha
imul
sbb
iret
xchg
xchg
cld
adc
push
in
lret
out
repz
repnz
sti
lock
adc
fisubrs
test
test
dec
stos
cmpsb
pop
inc
pop
pop
cmp
out
push
cltd
pop
jns
lret
fdiv
add
xor
push
cmp
dec
adc
xor
cmp
push
add
and
inc
xor
xor
mov
mov
in
lcall
in
xchg
in
testb
and
repz
icebp
cmp
out
nop
das
rorb
in
add
mov
jns
imul
cmpsl
cmp
xor
and
popa
xor
mov
sub
add
scas
fldt
jns
cwtl
into
mov
inc
pop
cmc
ret
adc
icebp
cmp
mov
adc
add
stos
sub
and
and
je
pop
mov
lea
cltd
fisubrl
xor
jg
xor
mov
shrb
pop
in
cwtl
in
imul
push
orb
lea
lea
lea
jno
pop
pop
adc
pop
into
arpl
cltd
in
lds
mov
jl
inc
xchg
xchg
mov
add
pop
loop
inc
adc
cmp
fldcw
fists
lds
je
sbb
nop
cltd
jns
imul
ret
inc
lods
pop
movsb
and
aad
scas
xor
add
shrl
pop
push
cmpl
stos
filds
icebp
jmp
lods
push
mov
mov
adc
out
inc
fistps
adc
sub
mov
and
imul
cmp
inc
loop
cmp
push
xchg
add
les
sub
movsl
loopne
mov
pusha
mov
pop
push
mov
repnz
sub
cli
cmp
xor
into
jo
sbb
jo
add
push
clc
popa
call
push
xlat
cmpsb
into
sbb
sub
enter
mov
movsb
push
push
fcmovu
add
push
shlb
push
sub
mov
mov
repnz
stos
cmpsb
out
and
push
rcrl
scas
clc
xchg
sub
bnd
ret
mov
dec
add
stos
es
pop
dec
in
jmp
sahf
and
repz
xor
test
mov
sub
dec
out
in
lds
sbb
and
pop
and
xchg
adc
mov
adc
xchg
out
rclb
daa
cvttps2pi
push
xor
sub
mov
or
cmp
mov
dec
or
or
add
lea
push
shrb
cmp
fiaddl
mov
xor
xor
pop
mov
aas
cmp
mov
jns
sub
int3
test
adc
sahf
jle
pushf
push
gs
out
mov
enter
test
lds
mov
mov
xlat
xchg
or
call
mov
mov
ljmp
xor
mov
add
jae
xchg
data16
movsl
fiaddl
jbe
dec
inc
cli
movsb
mov
in
sbb
iret
fimull
xor
fidivl
int3
push
aam
add
xchg
mov
incl
rcrb
call
adc
inc
and
int3
sbb
daa
pop
add
int
jg
stos
inc
cwtl
loopne
rcrb
xchg
movsl
adc
in
inc
movsl
loopne
sti
daa
cmp
movl
fs
repz
adc
inc
inc
jne
rcrb
xchg
pop
cld
jecxz
and
xchg
sbb
ja
jbe
insb
fwait
push
int3
and
jns
cwtl
mov
jecxz
mov
mov
push
rol
jle
fisubs
inc
in
lds
sbbl
push
test
in
jg
mov
xor
popf
nop
lret
cltd
nop
adc
setae
add
adc
lea
insb
inc
data16
adc
aad
push
scas
loope
mov
xchg
int3
cmp
add
je
mov
scas
push
scas
popf
scas
sbb
stc
in
xor
shl
add
fidivrl
inc
jns
imul
ficompl
lea
lea
lcall
pop
mov
push
scas
xchg
scas
adc
into
xchg
repnz
add
test
inc
movsl
fwait
gs
ficomps
mov
and
or
sahf
jl
pop
add
lcall
fmul
or
cltd
pop
xchg
popa
adcb
sbb
fwait
lret
into
add
push
nop
cltd
nop
lret
adc
add
ss
test
hlt
or
ficoms
mov
adc
xchg
int3
sbb
mov
pop
jl
mov
push
es
or
jmp
push
jl
rclb
xchg
lods
les
lods
movsb
xchg
mov
push
mov
adc
movhps
or
sbb
pop
sbbb
fldl
arpl
add
push
and
inc
sbb
fwait
xor
xor
nop
sbb
scas
pop
scas
xchg
scas
push
scas
xchg
into
adc
cmp
test
sbb
repnz
icebp
sbb
lcall
pop
sub
cmp
cmp
ficoml
adc
and
adc
cltd
fiadds
mov
fidivrl
adc
shrd
pop
aas
sub
push
fldcw
cmp
adc
lds
flds
xor
inc
nop
push
aam
filds
mov
push
sbb
xchg
sub
adc
aam
icebp
dec
mov
inc
int3
mov
imul
jl
jnp
roll
int3
pushf
sbb
dec
xchg
add
dec
out
jecxz
cltd
lock
fsubp
inc
in
mov
dec
mov
mov
xchg
jecxz
add
ds
inc
inc
dec
dec
jb
into
lds
imul
movd
or
add
and
lds
adc
sub
imul
xchg
lcall
aaa
in
or
repnz
icebp
jno
scas
out
or
aad
push
sub
cmp
mov
movsl
lds
push
sbb
in
mov
leave
in
mov
xor
pop
or
sbb
fcomps
fxam
cld
dec
cmp
dec
cmpsb
pop
add
pusha
notl
mov
icebp
adc
xchg
out
adc
xchg
in
adc
xchg
push
pop
and
into
aam
inc
es
lcall
mov
cmp
push
mov
mov
test
jp
lock
ret
sub
subl
test
subb
loope
mov
sbb
pushf
jecxz
les
lcall
add
test
movsb
fisttps
lcall
pusha
push
mov
lock
xchg
nop
add
inc
les
adc
xchg
cmp
cmp
dec
nop
dec
adc
xchg
inc
dec
fs
inc
mov
xor
xor
mov
mov
inc
mov
dec
outsl
cmp
or
test
adc
mov
in
jno
sub
rorl
or
leave
cmpsb
test
mov
inc
testb
daa
sub
movsb
leave
data16
add
inc
fsubp
sahf
xchg
jecxz
enter
add
pop
add
fiaddl
fimuls
insb
push
jmp
push
sarb
clc
pop
xchg
scas
ret
imul
in
out
stos
test
mov
fidivrs
imul
int3
rclb
outsl
lret
cmpsb
mov
or
cmp
xchg
sahf
pop
jo
lods
and
pop
sbb
pop
dec
stos
cmp
mov
or
xchg
mov
inc
popf
rorl
mov
jmp
inc
add
jmp
mov
dec
test
add
sbb
in
jg
in
sahf
in
push
or
dec
sbb
fwait
scas
ret
fcmovbe
push
xor
xchg
repz
fisubs
mov
add
data16
leave
addr16
pop
sbb
mov
popf
fisttpll
lret
pop
xchg
inc
fwait
stos
lret
mov
dec
ljmp
sub
ret
lret
test
rclb
out
jns
pop
mov
int3
inc
push
cltd
call
lods
sahf
call
fdivrs
push
fidivs
mov
dec
sti
lock
pop
add
sahf
push
loopne
insl
pop
movsb
jg
xchg
or
mov
xor
pushf
and
add
std
sahf
mov
push
sub
test
dec
push
pop
sub
xchg
mov
jecxz
add
arpl
je
dec
dec
movb
lds
jp
mov
out
daa
xchg
lds
out
cltd
or
pop
dec
mov
loope
aas
mov
shlb
or
mov
test
push
add
add
je
rorb
cmp
mov
or
xchg
inc
xchg
xor
sbb
jecxz
hlt
icebp
into
adc
fiadds
pop
cmpsb
mov
sbb
jo
adc
es
nop
in
mov
ljmp
jmp
repnz
icebp
push
lock
inc
sub
pushf
xor
push
dec
xchg
inc
and
enter
cmp
cmp
xchg
lock
xchg
inc
xchg
push
mov
or
outsb
pushf
cmpsb
pop
push
inc
movsl
jne
repz
addl
jno
sub
add
ljmp
push
movsl
cmp
in
sbb
push
pop
lret
or
xchg
pop
int3
sbb
hlt
add
sbb
stos
mov
sub
mov
or
pop
insb
mov
jl
fimull
mov
popa
adc
sbb
call
jmp
sbb
add
cld
les
rcl
in
sub
adcb
push
sbb
arpl
and
push
fwait
icebp
testb
fdivr
jecxz
sti
lret
int3
lret
push
or
mov
or
pushf
push
cmpsl
lea
gs
js
ror
dec
pop
popf
inc
test
sbb
dec
xchg
mov
xor
jmp
push
add
stos
ret
dec
mov
mov
push
ficoms
fiaddl
mov
xor
out
push
shrl
pop
xchg
dec
dec
xchg
sbb
dec
movsl
jne
jno
fbld
fidivrl
xchg
pop
out
mov
mov
push
mov
test
rcll
xchg
dec
std
test
add
sbb
lods
xchg
sbb
ret
pop
jne
ret
scas
mov
push
addb
repz
lret
mull
icebp
sub
jmp
push
or
hlt
pop
xor
mov
fmulp
sub
lds
mov
ficoms
iret
lds
dec
or
inc
mov
gs
inc
insl
sub
hlt
push
add
mov
or
out
ja
pop
pop
xor
mov
leave
ja
mov
push
xchg
jecxz,pn
add
pop
mov
rorb
dec
sahf
mov
rcr
sahf
mov
and
xchg
orl
enter
mov
icebp
out
movb
hlt
popf
int
sub
daa
jmp
mov
fisubs
fistpl
adcl
xchg
inc
aam
dec
push
push
in
lcall
cmp
subb
nop
adc
stos
out
stc
cmovo
adc
stos
push
fmul
jmp
sbb
test
in
mov
sub
or
movsl
dec
xchg
cwtl
mov
jns
sub
insb
jg
shl
adc
sbb
add
fdivp
pop
push
and
lret
loope
cmp
bnd
pop
iret
or
xchg
in
cmp
sti
lods
push
xor
into
lds
ret
push
faddl
inc
aad
notb
sbb
jp
xchg
sarl
fcoml
cmpsb
std
mov
mov
pop
das
incb
inc
dec
movsl
cltd
xchg
rcrb
es
movsb
gs
loope
std
incl
add
dec
nop
and
sbb
insb
pop
pop
daa
adc
pop
lcall
pop
lea
ret
imul
sub
bound
enter
mov
inc
icebp
mov
fadds
shl
sbb
xchg
mov
out
in
leave
xchg
popf
push
gs
pop
shrb
lock
mov
hlt
enter
test
sbb
sub
stos
adc
cmc
mov
adc
faddp
sahf
inc
inc
xlat
aam
dec
popf
shll
aam
pop
adc
xchg
lret
inc
or
sbb
jg
loope
fistl
or
push
or
movb
dec
shrl
dec
data16
sbb
or
ficoms
adc
popf
adc
into
adc
xchg
sub
pop
out
fcoms
inc
push
mov
jge
test
adc
cmpsb
inc
aad
sahf
mov
addl
and
push
add
and
stos
pop
lods
into
xchg
loopew
fsubr
xchg
notw
in
es
lret
addb
ds
fnstenv
pop
mov
aam
adc
stos
push
daa
add
sahf
addb
push
lods
lea
lds
and
lds
pop
add
dec
in
mov
ljmp
pusha
xchg
xchg
or
addl
stos
mov
fisttpll
dec
outsb
mov
lret
mov
pushf
or
inc
adcl
movsl
loopne
lock
xchg
jnp
sub
dec
clc
leave
xchg
adcb
lods
enter
inc
pop
pop
repz
dec
popf
cwtl
pop
mov
hlt
sub
iret
mov
adc
sahf
mov
insl
aam
cmp
in
loope
repz
mov
stos
rorb
jecxz
jle
fnstenv
inc
sub
mov
jbe
xchg
mov
mov
popf
push
sub
lods
adc
lret
ficoml
outsl
lock
test
dec
pop
mov
sub
jb
jo
outsb
lock
or
dec
or
xchg
push
push
jg
mov
xor
inc
test
cltd
push
bswap
in
or
hlt
sar
pop
jmp
test
push
fsts
and
pop
stos
or
inc
sbb
addl
sbb
cs
adc
cltd
dec
mov
fnstsw
fldenv
ret
add
pop
push
jp
arpl
dec
add
test
pop
cmp
neg
xlat
aad
pop
dec
adc
or
add
aam
orb
fcoml
add
push
fiadds
insl
lret
inc
popf
lea
stos
mov
cmp
js
or
sub
inc
jecxz
dec
rcrl
fildl
ss
scas
xor
xchg
fs
xchg
mov
lret
iret
imul
jp
rorb
mov
decl
dec
sahf
mov
push
mov
mov
movsb
xchg
into
pop
jecxz
push
test
sbbl
popf
pop
and
fcom
in
shr
das
in
lods
mov
pop
lock
jecxz
sbb
jmp
xchg
loopne
or
xchg
mov
test
shll
stos
fucom
movups
mov
scas
cmpps
pop
outsb
push
xchg
cmpsb
fidivs
in
xchg
sbb
cmp
inc
fimull
inc
sbb
lds
aam
mov
push
addr16
xchg
loope
jmp
sti
adc
pop
cmc
and
stos
or
les
mov
and
cmp
cmp
xchg
not
sbb
push
xchg
cltd
int3
jmp
jmp
call
jecxz
aas
imul
fcmovb
inc
lret
dec
cmp
out
pop
outsb
jbe
rolb
movsl
mov
inc
sbb
pop
or
inc
fstpl
xor
sub
movsl
insl
call
mov
jae
or
fs
push
inc
lds
xchg
test
loopne
or
bound
pop
pop
addl
ret
int3
or
add
daa
push
test
xchg
push
jbe
popf
mov
push
or
jbe
aam
xlat
adc
push
int
or
fimuls
push
test
xor
repz
add
sahf
cmp
cmp
cmp
fwait
adc
lcall
cmp
pop
scas
xchg
into
push
inc
inc
sub
adc
cli
jp
inc
iret
sbb
in
mov
inc
fstpt
stos
inc
inc
pop
or
fs
mov
push
sbbl
lea
or
orl
sete
adc
orl
in
jb
or
rorb
sub
cmp
push
pop
lcall
clc
fst
popf
lock
test
insb
jg
sahf
in
xchg
sbb
jmp
cmc
in
push
lock
push
call
and
sbb
sbb
js
push
mov
pop
rorb
imul
test
sbb
icebp
cmp
add
inc
cmpsl
mov
push
pop
or
ss
sbb
mov
jnp
rcl
and
sub
adc
xchg
push
imul
pop
push
xchg
pop
lds
sub
movsl
sub
cli
jo
mov
mov
ljmp
adc
fidivs
popa
test
push
and
arpl
int
mov
lea
adc
flds
mov
ror
lret
mov
dec
inc
xchg
nop
pop
flds
push
mov
outsb
mov
gs
fcoml
inc
jb
mov
out
sbb
push
xchg
xor
sbb
pop
mov
rclb
jecxz
cmp
lea
cmp
faddl
arpl
mov
adc
mov
in
cmpsl
dec
push
sub
xchg
movsl
inc
pushf
cmp
test
cmp
xchg
addr16
pushf
xchg
rcll
mov
add
dec
push
mov
jl
cltd
jmp
jmp
pop
loopne
push
in
xchg
inc
out
les
decb
dec
dec
xchg
fstpt
jnp
mov
fisubs
pop
loopne
push
in
iret
in
or
imul
add
ljmp
in
sub
dec
pop
sbb
dec
movsl
fwait
in
add
ret
lock
add
pop
mov
mov
cmpsb
repnz
xchg
pop
imul
adc
adc
mov
and
imul
data16
aam
mov
add
sbb
push
inc
mov
call
inc
aaa
jmp
fxtract
add
push
test
push
sub
mov
xchg
add
mov
faddl
and
dec
fcomps
rcrb
adc
adc
ljmp
and
inc
mov
je
lret
dec
push
adc
adc
jnp
mov
loopne
jge
mov
pop
ds
or
stos
lcall
imul
fistpll
lds
insb
pop
mov
test
mov
mov
lret
adc
sbb
fmull
insb
or
and
outsl
or
fisubrs
stos
pop
daa
inc
add
rep
dec
lea
xchg
cmp
or
adcl
xchg
add
xchg
ret
aam
adc
mov
imul
push
dec
aad
sub
jb
push
lds
aam
in
imul
mov
orl
mov
sahf
rcl
in
das
lods
insl
fimull
lock
jmp
test
mov
bnd
popf
cmp
inc
mov
shrl
jp
leave
ror
nop
inc
scas
dec
mov
adc
mov
inc
push
pushf
or
pop
push
add
or
or
pop
addr16
push
adc
in
mov
lds
cmp
cli
adc
pop
jne
iret
add
inc
in
xor
add
pop
inc
les
or
sbb
mov
insb
dec
pop
in
xchg
jmp
jecxz
rcr
push
mov
mov
icebp
inc
push
fimull
pop
sbb
stos
mov
insb
inc
jp
mov
scas
pop
into
jbe
test
push
rorl
ret
sub
leave
pop
add
xchg
adc
or
mov
aad
in
mov
in
pop
movsl
jmp
mov
arpl
dec
jmp
movsl
adc
repnz
out
mov
inc
mov
jp
mov
movq
sub
hlt
xchg
addl
mov
fisubrs
or
nop
and
sbb
sbb
pop
jmp
xchg
frstor
int3
push
xor
nop
add
orl
mov
into
ficoms
jae
pop
dec
sub
jns
dec
mov
mov
pop
add
mov
push
push
sahf
dec
inc
out
dec
loop
out
aad
repnz
mov
jecxz
mov
sub
inc
pusha
pop
push
mov
pop
jecxz
negb
nop
inc
cmp
push
test
gs
inc
jmp
insb
out
sbb
jb
jo
adc
or
pushf
aas
imul
pop
repz
jns
add
adc
pushf
lret
mov
inc
lods
lds
push
cmc
xchg
lods
push
push
hlt
rclb
sub
jne
xor
sbb
cmp
xchg
mov
push
push
adc
pop
cmpsl
push
inc
fldl
fcoml
or
sahf
mov
inc
sbb
cmp
cmp
mov
insb
fisttpll
add
nop
imul
nop
lret
dec
stc
fsts
repnz
push
addl
aas
xor
stos
pop
lock
ja
adc
cltd
mov
cmpsb
test
lock
xchg
imul
mov
repz
pop
inc
mov
fidivl
and
add
lcall
jne
sbb
test
cmp
fdivrs
enter
inc
popl
iret
pop
cmp
jge
pop
repnz
icebp
mov
push
ret
in
lcall
sbb
pop
lock
addb
sbb
movd
andl
out
in
in
mov
and
popf
cmp
repz
xchg
lods
aad
xchg
daa
mov
push
in
pop
lds
movsb
add
sbb
pusha
setae
pop
add
cmp
cmp
cmp
mov
je
mov
repnz
inc
lret
fucomi
orb
jp
dec
cltd
out
repnz
push
sahf
cltd
xchg
sbb
and
sahf
push
pop
push
inc
adc
xchg
fisubrl
in
ds
stos
xchg
mov
push
mov
out
jns
sub
lock
inc
clc
inc
ffree
fadd
sti
sahf
sbb
neg
cmc
push
push
dec
mov
adc
inc
push
adc
jo
scas
lea
jns
sbb
xor
xchg
adc
dec
cmc
lret
sbb
xor
loop
dec
into
es
and
xchg
fcoml
jp
sub
dec
das
jle
push
add
ret
in
jmp
adc
dec
xor
mov
shll
xchg
cmp
push
mov
gs
dec
dec
sti
mov
ud2
out
nop
or
sub
es
rsqrtps
enter
fldenv
cmp
test
aam
orl
aad
push
add
and
aam
adc
lret
test
jnp
inc
fsubp
inc
mov
sbbl
adc
pop
adc
xlat
sbb
mov
aad
jno
scas
push
jmp
test
mov
xchg
sbb
jp
fwait
out
setnp
xchg
lock
lock
cmp
mov
pop
fwait
push
lret
inc
and
inc
add
sub
rclb
or
push
or
sub
and
jp
andl
jecxz
xor
ret
mov
orl
jmp
sahf
xchg
push
stos
popf
sbb
push
push
fcmovbe
into
mov
inc
mov
mov
inc
in
aam
xchg
iret
stos
push
push
lds
repz
add
scas
ficompl
jns
imul
push
and
sub
decl
push
movsl
iret
or
pop
in
inc
fcmovu
in
jl
mov
sbbl
stc
push
in
aam
sbbl
mov
into
push
inc
inc
pop
mov
outsl
pop
dec
dec
nop
stos
adc
cmp
in
and
sbb
xchg
mov
fdivrs
loopne
inc
cmc
repz
lods
addr16
or
subb
add
mov
adc
pop
pop
mov
push
mov
mov
sbb
movsl
and
test
in
ss
xchg
in
shr
shr
shr
outsl
in
test
and
sbb
stc
cmp
sbb
ja
pop
push
repnz
inc
push
sbb
jns
mov
nop
push
push
add
and
loopne
les
fadds
fwait
into
jns
fldt
jb
jo
or
or
sub
sbb
add
daa
xchg
adc
out
lret
add
inc
cld
push
pop
and
jl
movb
jp
mov
dec
adc
nop
inc
adc
jns
mov
lea
sub
pop
lock
adc
pop
dec
mov
sbb
inc
jmp
mov
daa
mov
aam
mov
mov
pop
ja
mov
add
xor
mov
call
sarl
adc
lea
cltd
mov
into
jecxz
imul
cmpsl
bnd
shlb
xorb
insl
jns
rorl
sahf
sbb
sbb
jne
adc
jnp
sarl
in
lock
dec
sub
inc
cli
fildl
adc
popf
call
cmp
fldt
xchg
sbb
mov
subb
mov
cmp
ret
pop
push
in
sti
jg
addr16
jl
dec
xchg
fadd
das
jmp
lds
pop
mov
mov
les
pop
dec
mov
test
mov
adc
in
jmp
and
setbe
orb
out
jecxz
inc
jg
std
dec
jl
sbb
push
push
aad
sbb
and
stos
push
jl
ficoms
push
sahf
adc
subl
outsl
mov
and
test
mov
mov
or
out
in
and
pop
mov
into
xor
adc
insb
mov
ret
aam
mov
inc
sub
fcmove
mov
pop
fldl
fists
sub
mov
test
nop
ret
add
xor
nop
add
lret
cmp
pop
mov
sarb
sub
nop
mov
lsl
sbb
addr16
pushf
fnsave
mov
and
sbb
mov
enter
xor
push
mov
push
xchg
xlat
mov
test
subb
pop
mov
lods
test
repz
xor
xor
or
popa
cli
aad
lock
rolb
xchg
out
jno
test
xor
sahf
inc
jns
adc
sahf
aam
cmp
test
repz
xchg
cmovne
jl
sub
addr16
sbb
sub
adc
mov
xchg
mov
xchg
sub
out
push
loopne
or
push
jbe
shrb
repnz
icebp
jno
aam
clc
popa
in
or
cmpsb
inc
mov
xchg
lret
sbb
addl
stc
jecxz
je
jmp
push
xor
adc
in
stos
inc
addr16
sahf
mov
pushf
jl
into
sbb
ljmp
push
rcrb
into
push
repz
dec
push
jmp
hlt
shr
andb
adc
sub
add
mov
lret
pop
pusha
push
std
sub
pop
and
shll
adc
movsl
rcll
repnz
faddl
add
pop
inc
xchg
sbb
xchg
adc
aaa
xlat
mov
and
push
sub
lret
add
mov
test
test
adc
clc
pop
inc
push
lods
or
and
push
cmp
pop
push
addr16
sbb
adc
nop
ljmp
notl
cmp
and
adc
jle
popf
dec
push
sub
push
int
adc
stos
sub
aad
cmp
cwtl
js
push
jae
sub
into
nop
insl
adc
push
ret
mov
sbb
lea
iret
and
mov
push
dec
nop
dec
xor
add
fmull
pop
push
sub
cmp
lcall
jl
fsubrl
pop
jecxz
xchg
push
pop
mov
into
mov
in
or
pop
fs
inc
and
lea
pop
in
mov
popf
lret
sub
mov
sub
movb
hlt
add
cmp
ss
xchg
jbe
lds
jmp
lods
hlt
dec
dec
inc
mov
loop
jg
dec
sub
sbb
jecxz
daa
pop
stos
faddl
pop
enter
popa
jecxz
xchg
add
mov
mov
sbb
dec
roll
inc
rol
xchg
ret
rolb
pushf
hlt
mov
xchg
rorb
sub
fidivl
inc
addr16
jb
sbb
push
ret
movsl
mov
lock
mov
jmp
jmp
lahf
rclb
add
test
pop
jg
jns
lret
pop
xor
or
leave
js
mov
pushf
sub
scas
inc
fnstcw
movsb
dec
cmpsb
cmpsl
fiaddl
pop
dec
and
cwtl
pop
push
or
cltd
stos
lahf
sbb
pop
jns
pop
mov
movsl
mov
lcall
mov
movsb
dec
gs
repz
icebp
in
sub
negl
xchg
sub
lock
stos
dec
stos
mov
sbb
pushf
sbb
popa
jns
or
jno
and
aas
sub
cmp
cmp
adc
les
fidivrl
xchg
and
add
jecxz
adcb
pop
shrb
clc
push
pop
mov
lds
aam
mov
movsl
or
test
jl
jge
aam
cmp
fstpt
sbb
clc
cmp
ja
adc
mov
test
pop
inc
pop
in
aas
mov
inc
lahf
mov
popf
mov
adc
adc
jbe
mov
sbb
les
mull
arpl
int
clc
push
mov
int3
and
inc
or
jne
xchg
add
cmp
jo
cs
sbb
daa
cmp
pushf
icebp
negb
loopne
jmp
clc
int3
into
push
inc
filds
repnz
popf
lret
lds
sbb
sti
pop
pop
adc
daa
out
loopne
ja
or
push
add
fimuls
xor
inc
lcall
repnz
or
mov
ror
lea
push
inc
rcll
adc
lret
mov
inc
stos
inc
cld
or
sbb
addr16
popf
xor
jl
fsubrl
movsb
bound
xchg
pop
sub
cwtl
push
add
sub
sub
mov
xor
mov
xchg
jmp
outsl
push
or
inc
ds
ficompl
sarl
jg
subl
aaa
stos
int
cmp
rorl
jo
sbb
sub
pop
dec
sub
gs
add
in
push
aas
jmp
inc
push
add
lret
inc
ret
lsl
lret
fimuls
call
cltd
and
fstl
mov
sub
sahf
not
xchg
out
aam
mov
add
mov
inc
push
adcl
cmp
pop
add
sub
jge
sbb
or
inc
mov
in
mov
push
sub
cld
dec
mov
or
test
mov
dec
mov
mov
push
cltd
mov
adc
rcrb
iret
cmp
jmp
nop
sahf
push
dec
or
fwait
test
inc
jp
inc
and
inc
fimuls
sub
dec
je
fmul
push
xchg
mov
mov
inc
lret
stos
xchg
adc
sub
cwtl
loope
popl
pop
sbb
sti
setg
sbb
pop
mov
xchg
cmp
ret
sarb
push
cs
adc
nop
sub
sub
pop
sub
stos
push
xchg
in
aad
sahf
and
dec
addl
inc
xor
adc
in
nop
stos
ficompl
push
dec
inc
xor
dec
mov
hlt
sbb
jns
cltd
cld
xchg
adc
xlat
fistps
aad
push
addr16
add
rolb
push
mov
out
xlat
iret
add
hlt
push
dec
mov
out
push
lret
out
leave
mov
jne
fwait
xchg
movb
inc
lds
inc
and
inc
xor
repz
loopne
inc
xchg
insb
out
xchg
lea
cmovnp
ret
cmp
jmp
mov
xchg
cltd
test
push
and
adc
int3
inc
mov
push
mov
or
rclb
orb
push
xor
repz
mov
sbb
cld
inc
dec
repz
movsl
stos
adc
adc
jb
lret
loop
sbbl
daa
in
ret
movsl
adc
jp
pushf
in
or
sbb
dec
xlat
push
insb
xchg
and
push
nop
into
xchg
pop
pop
sahf
push
stc
sub
dec
cltd
lret
lret
int
push
cltd
in
cmp
xchg
lock
inc
and
mov
inc
test
push
xchg
ret
xchg
push
sub
add
cmp
xchg
call
test
mov
push
add
push
pop
jmp
inc
push
lock
in
add
icebp
pop
lock
mov
orb
cmpsb
call
inc
cli
sbb
movsl
push
xlat
insb
mov
push
stos
lret
push
and
sete
negl
pop
dec
push
bound
adc
pop
sub
dec
js
pop
sbb
add
iret
aad
fsubp
sahf
aam
dec
gs
pminub
mov
pushf
dec
dec
lods
jmp
inc
add
inc
into
les
aam
iret
pop
inc
inc
ret
shll
mov
loopne
mov
add
dec
pop
sbb
mov
imul
ficoml
shrl
cmpps
stc
sbb
fucomp
movb
nop
mov
sub
aad
mov
xchg
out
add
sub
pop
dec
adc
xchg
mov
mov
out
lock
cmpsb
daa
int3
mov
roll
daa
sub
dec
push
xchg
in
movsb
repz
mov
roll
movb
dec
popl
jo
mov
sbb
pushf
lds
xor
fwait
sbb
mov
push
add
mov
dec
insb
xorb
sbb
sub
pushf
popl
mov
xchg
add
pop
cmc
sbb
in
sub
push
pop
mov
push
jns
imul
sbb
in
mov
mov
pop
adc
jecxz
inc
sub
insb
inc
bound
fmul
fidivl
pop
arpl
pop
add
inc
ds
mov
das
xchg
push
push
icebp
stos
push
jne
sahf
xchg
pop
int
pop
jb
push
mov
adc
cmp
adc
xor
sahf
push
jecxz
xchg
and
push
mov
aam
iret
push
cmp
push
push
lods
pop
dec
push
mov
out
xchg
push
dec
sub
mov
and
inc
lret
pop
movsl
push
add
nop
sbb
test
fistpl
mov
and
sub
out
pop
das
mov
cmovge
mov
neg
fsubs
adc
cmpsl
or
out
mov
fcmovu
sbb
cmp
rcll
scas
xchg
icebp
arpl
fstpl
push
loope
lret
add
dec
movlhps
sub
in
sub
fiadds
pop
pop
mov
adc
mov
inc
lret
xchg
or
in
into
ret
add
mov
add
adc
adc
es
or
leavew
add
push
lcall
aas
fadd
jne
enter
push
sub
mov
pop
mov
mov
into
xor
mov
and
jne
call
sbb
jbe
fstps
lret
or
fsubrs
pop
cmp
into
dec
adc
jle
inc
fnstsw
pop
shll
jno
pop
xlat
sbb
mov
out
lcall
or
pop
or
dec
cwtl
ljmp
xchg
pop
ficoml
inc
pop
or
out
stc
add
add
xchg
sub
out
dec
and
ret
add
fidivl
fisubrs
jnp
pushf
jbe
sub
sub
add
bound
adc
pop
ss
test
vaddsubps
cwtl
mov
cmp
clc
xchg
add
mov
aad
int3
lret
inc
lds
fistpl
pop
mov
push
cmpsl
aam
ret
lcall
sbb
push
cmp
stos
mov
mov
lret
rorl
push
addr16
les
in
sti
repz
inc
aam
stos
ds
lcall
inc
adc
pop
rcrb
pop
sub
xor
repz
sbb
aad
imul
shll
or
dec
lods
test
jecxz
lock
inc
out
fs
arpl
pop
adc
pop
fsubs
inc
xchg
insb
insb
gs
sbb
pop
add
popf
and
repz
sbb
cmp
jecxz
xchg
fdiv
stc
cmpsl
sbb
daa
jne
pop
test
shl
sub
jecxz
adcl
ret
dec
stos
sbb
loopne
in
lock
inc
loopne
pushf
in
cmc
cmpsl
sub
in
mov
jmp
negl
sub
push
mov
out
sahf
xchg
lret
orl
mov
mov
push
sahf
jbe
xchg
push
sbb
out
xor
es
fiaddl
mov
out
stos
xchg
rorl
and
fiaddl
pop
outsl
scas
aam
push
add
push
pop
movsl
xlat
xchg
jne
push
cmc
out
icebp
push
stos
jmp
and
call
std
testl
push
rcr
sub
jmp
inc
rcll
clc
flds
inc
xchg
inc
pop
loope
pop
stc
popf
push
lret
mov
add
stos
inc
jns
xchg
and
clc
adc
outsb
mov
addr16
in
lret
aam
jmp
test
cmp
rcrl
sbb
cmp
inc
and
test
ret
cld
aaa
add
gs
cli
repz
jp
push
jecxz
add
jmp
std
icebp
stc
mov
sahf
add
hlt
in
pop
call
add
pop
mov
mov
dec
cmc
fmull
in
cltd
std
shufps
and
or
enter
stos
inc
push
cld
inc
ret
mov
pop
ret
xchg
push
sub
xchg
gs
cmpsb
lods
or
lea
sbb
out
inc
jmp
lret
push
cmp
repnz
ljmp
stos
divl
sbb
aad
dec
xlat
clc
or
movsl
adc
div
sbb
stos
in
lcall
ljmp
nop
xchg
ret
inc
aam
fsub
iret
icebp
mov
push
lret
xchg
jo
mov
pushf
clc
leave
int3
xchg
stc
pop
push
ret
test
cwtl
ja
mov
mov
and
mov
push
inc
addb
in
ljmp
adc
jb
dec
addl
aad
mov
in
lds
mov
aam
push
dec
ret
jp
xchg
adc
outsl
dec
int
push
ror
fcoml
fidivl
fisubrl
pop
shll
mov
into
hlt
push
sub
cmp
or
jae
ret
mov
shll
cli
jl
inc
icebp
sbb
nop
out
gs
and
jbe
sahf
sub
mov
insb
pop
sub
cmp
mov
push
cmpsl
sbb
push
test
and
les
sahf
jne
leave
mov
sahf
sbb
test
inc
lret
add
xchg
push
popa
sbb
and
mov
lea
cmp
adc
xchg
xor
xor
cmovle
lret
rolb
lds
add
adc
push
sbbl
pop
rcrb
fidivrl
lea
pushf
sbb
or
fwait
lock
adc
adc
mov
push
add
jecxz
inc
push
aas
jmp
sbb
sbb
xchg
in
pop
mov
xchg
sbb
ds
fisttpll
inc
scas
dec
sub
push
xchg
adc
sbb
sahf
test
add
rol
clc
sarb
push
xor
repz
sbb
mov
or
cmpb
sbbb
sub
mov
xchg
pop
mov
cwtl
pop
cwtl
enter
pop
push
ficompl
shll
jl
xlat
sbb
and
inc
aam
lock
adc
inc
xchg
mov
in
add
orl
mov
push
mov
pushf
rcrb
sbb
lea
sbb
in
out
sbb
ljmp
xchg
mov
mov
pop
test
xor
lret
sahf
push
cmp
pop
ret
xchg
sbb
in
mov
mov
pushf
sbb
xchg
fisubs
nop
xchg
lcall
popf
push
lcall
and
aas
test
sub
fwait
xchg
daa
or
inc
mov
sahf
and
xchg
lea
or
and
popf
orb
in
adc
or
jecxz
bound
xchg
fmull
xchg
inc
cmp
aam
out
xchg
shrb
pushf
dec
fmul
xchg
pop
lret
test
mov
aad
mov
xchg
add
lds
add
jmp
pushf
orb
xchg
sbb
popl
xchg
cmp
and
dec
inc
dec
les
mov
sbb
push
xchg
mov
outsb
cli
into
andl
xchg
mov
cli
cltd
sbb
jecxz
sbb
xchg
nop
adc
sbb
sub
mov
sbb
adc
lds
cmovg
faddl
pushf
ret
adc
mov
pushf
enter
sahf
mov
xchg
ret
xchg
fmuls
mov
orl
cmp
fmul
push
sub
cwtl
lea
mov
sbb
jg
dec
ret
sbb
cwtl
add
push
ss
shrl
fucomip
pop
or
cmp
push
aaa
mov
sbbb
test
sbb
rcrl
xor
xor
nop
xchg
fwait
push
push
lea
sbb
adc
lea
xor
nop
nop
fwait
pcmpeqd
xchg
enter
scas
jbe
mov
inc
aam
or
push
lret
hlt
test
sub
pushf
mov
adc
xchg
mov
in
adc
nop
cmpsb
andb
lea
sbb
hlt
adc
filds
or
adc
roll
inc
aad
xchg
addr16
pop
adc
adcl
aad
adc
and
push
in
inc
loop
jg
and
dec
pop
xchg
push
jbe
sbb
cwtl
nop
add
push
add
iret
call
fcomps
pop
sbb
scas
pop
xchg
nop
mov
xchg
rorl
lea
push
add
sahf
or
mov
or
mov
xchg
sbb
pop
pop
fsubl
sub
movsl
jmp
sbb
lret
push
xchg
jp
pop
xchg
and
push
add
or
mov
lret
or
dec
pop
sbb
inc
push
mov
add
cmp
mov
xorb
bound
sub
dec
inc
je
mov
into
or
fldl
xor
inc
add
test
je
out
popf
sbb
ror
xchg
add
jmp
pop
xchg
in
xchg
or
mov
pop
mov
or
lock
and
pop
push
and
or
int
pop
adc
push
xor
sbb
add
nop
sbb
setne
push
pop
push
fisttps
and
int
test
or
or
rclb
adc
xchg
ljmp
mov
in
lea
or
mov
or
mov
ret
or
mov
xrelease
add
pop
sub
mov
xorb
fiadds
cmp
addr16
fstl
or
add
mov
adc
sti
test
inc
jg
push
in
in
or
dec
xchg
aam
push
lret
dec
inc
add
inc
xchg
jb
ljmp
testb
dec
dec
mov
into
test
mov
pushf
xor
popf
addb
jle
js
test
enter
dec
cltd
aam
xchg
adc
lea
adc
popf
stos
test
lock
dec
xchg
dec
fwait
cwtl
iret
xchg
iret
inc
dec
mov
fistpl
add
add
adcb
pop
popf
mov
sbb
pop
adc
xchg
repz
nop
pop
inc
adc
xchg
adc
fdiv
iret
adc
inc
popf
or
mov
or
add
pop
stos
rolb
mov
add
xorl
cmp
pop
sbb
loope
pushf
sub
pushf
pop
pop
aaa
pop
inc
sbbl
mov
mov
mov
fiaddl
xchg
jle
adc
pop
pushf
outsl
mov
int3
inc
xchg
jmp
mov
into
test
inc
dec
cltd
push
cmp
push
xchg
sbb
out
mov
cltd
jmp
xchg
negl
inc
ret
inc
sbb
inc
jne
inc
scas
xor
push
jns
dec
sbb
sbb
and
nop
pop
or
pop
mov
xchg
ss
ljmp
and
push
push
mov
push
mov
jmp
stc
fcomps
xchg
sbb
adc
or
or
sub
fiaddl
xor
push
cltd
pop
sbb
fwait
and
dec
lcall
jle
rcr
sbb
cli
fcompl
in
cltd
push
into
sti
sbb
fwait
pop
lahf
mov
out
dec
sub
xchg
sbb
daa
adc
adc
mov
mov
pop
aam
add
adc
mov
pop
pop
aad
push
xchg
fwait
inc
add
pop
sbb
adc
pop
mov
sahf
aam
cwtl
add
cmp
pushf
lcall
sub
rorb
lcall
sbb
mov
add
cmp
mov
push
adc
das
fidivl
test
fwait
jbe
inc
lcall
sbb
mov
push
test
push
pop
int
cltd
dec
dec
adc
inc
adc
or
adc
popa
adc
mov
push
inc
xchg
pop
sbb
sbb
sbb
fsts
jg
push
in
xchg
in
adc
cwtl
pop
fcmovbe
mov
popf
inc
subl
popf
jecxz
mov
mov
add
add
sbb
cltd
subl
jo
jle
aad
adc
adc
cmp
push
aas
mov
cmp
sbb
xchg
std
xchg
inc
add
mov
cmc
rcr
push
into
xor
sub
ficompl
adc
or
rcrb
sub
sti
or
add
adc
xchg
cmpl
push
add
ret
and
lret
js
mov
orb
lcall
push
xchg
mov
loope
or
xchg
inc
fdivs
mov
push
push
pushf
daa
sbb
jmp
pushf
mov
cltd
and
stos
sbb
lea
sub
orb
add
repz
cwtl
xchg
xchg
or
repz
xchg
lret
pop
sti
fwait
loop
lret
lcall
jns
fildl
or
cli
dec
mov
adc
adc
nop
jg
pop
sub
mov
in
or
mov
enter
mov
sahf
adc
sbb
adc
push
lea
adc
adc
add
cwtl
adc
adc
out
ljmp
sbb
or
mov
decl
roll
sbb
fwait
push
lret
cli
int3
add
dec
fcomps
sbb
xchg
lea
sbb
test
sbb
lcall
mov
sahf
push
push
inc
jne
sti
xchg
pushf
loop
sub
ficoml
fsts
xchg
or
add
cltd
lret
lcall
addr16
dec
test
sti
add
sbb
push
push
pop
mov
add
add
aam
cltd
loop
dec
push
fcomps
or
add
andb
pop
or
frstor
ljmp
addl
mov
push
add
mov
xchg
test
xchg
mov
daa
enter
push
popa
push
shll
daa
enter
aas
test
xor
push
mov
xchg
pusha
add
mov
nop
mov
fisttpll
fs
fcoms
xchg
xchg
ficoml
xchg
aam
or
cwtl
pop
popf
xchg
cwtl
cwtl
aad
popa
adc
inc
nop
mov
mov
add
sbb
xchg
sahf
push
mov
popa
or
inc
add
fwait
fwait
pop
xchg
fmul
xchg
repz
popl
or
mov
cmp
lock
cwtl
xchg
mov
mov
mov
pop
mov
lcall
add
push
mov
sbb
xchg
mov
mov
fs
nop
rcrl
sub
repz
cmp
lea
ficomps
and
ret
popf
fmull
xor
pop
xchg
test
xchg
aas
mov
push
mov
xchg
dec
addl
filds
cwtl
xchg
xchg
aam
xchg
push
xchg
inc
adc
xchg
push
jg
add
arpl
mov
filds
mov
adc
pop
insb
push
add
mov
add
out
sbb
call
sbbb
test
popf
out
xchg
cwtl
xchg
xchg
sub
fmuls
sbb
andb
popf
repz
add
ret
stos
orb
adc
ret
cmp
fmull
filds
add
cltd
or
out
lea
pushf
adc
add
filds
adc
xchg
fld
mov
out
into
push
icebp
sbbb
cwtl
and
xchg
repz
sub
add
sub
int
xchg
enter
stos
adc
xchg
test
packsswb
xchg
aam
xchg
out
push
in
mov
fiaddl
mov
push
push
sbb
sbb
lds
mov
inc
orb
lret
addl
sahf
dec
popf
add
lcall
inc
xchg
in
xchg
sahf
adc
adc
add
xchg
adc
xchg
xchg
dec
lret
add
add
adcl
mov
js
popf
pop
push
fwait
push
adc
mov
inc
jg
test
xor
popf
lret
xchg
rcll
movq
inc
mov
push
sarl
sbb
inc
adc
pop
sahf
xchg
add
sahf
in
popf
movb
sbb
aad
orl
mov
adc
xor
sbb
xchg
mov
pause
cwtl
decl
fiadds
les
sahf
and
xchg
aam
xchg
and
push
dec
sbb
mov
cmp
sbb
pop
xlat
popf
aad
ret
fwait
aam
sbb
inc
mov
mov
js
mov
xchg
push
mov
aam
sub
fwait
add
xchg
insb
push
xchg
repnz
mov
lods
or
xchg
aad
cmpb
fwait
movsl
stos
sbbl
xchg
adc
fmull
rolb
push
ljmp
sahf
xchg
xchg
lea
faddl
push
jns
mov
lcall
sarl
sbb
add
pop
lea
test
pusha
push
rclb
pop
push
stos
or
pop
pop
cwtl
sbb
mov
es
push
cmp
push
add
insb
inc
cltd
rclb
sbb
add
push
sub
cmpsb
popf
push
in
adc
ljmp
sbb
pop
lcall
orb
mov
test
test
add
inc
sbb
or
push
fmul
xchg
das
push
mov
pop
push
stos
cltd
jecxz
pop
hlt
inc
adc
jmp
orl
push
add
mov
jecxz
xchg
hlt
enter
push
dec
mov
mov
adc
and
adcb
xchg
cmp
pushf
xchg
xchg
roll
xchg
mov
inc
fwait
lea
mov
addr16
out
mov
xchg
sbb
add
aam
sbb
push
push
movsl
fcoms
jl
pop
jno
enter
push
xchg
push
dec
sub
mov
xchg
mov
into
add
cmp
sbb
adc
dec
addl
lcall
xchg
faddl
xchg
add
jns
ljmp
sbb
xchg
sti
mov
pop
popa
mov
sbb
pop
stos
adc
mov
fwait
cli
pop
fs
sbb
lcall
addb
inc
add
adc
fstpl
push
mov
inc
enter
sbb
cmp
popf
pop
xchg
addl
add
sbbl
aad
and
or
xchg
xchg
add
push
push
arpl
nop
in
pop
sbb
lcall
nop
out
rorb
cmpsl
aam
or
faddl
popf
sbbl
repz
arpl
mov
sbb
push
mov
mov
mov
adc
sbb
or
test
repz
adc
sbb
pop
cltd
lea
sti
adc
or
cmp
cltd
je
sub
nop
and
orb
xchg
mov
cmc
push
roll
aad
xchg
push
ret
add
les
adcl
add
and
sahf
push
lds
les
sbb
mov
mov
enter
enter
rolb
inc
push
inc
inc
or
inc
les
ficompl
sub
mov
fcompl
sub
pushf
jg
pushf
into
fwait
incb
sbb
push
in
or
hlt
xchg
sahf
sbb
test
stos
dec
nop
cwtl
push
mov
repz
push
sbb
ljmp
stc
pop
js
dec
pop
nop
inc
stos
adc
add
mov
call
dec
xchg
setb
mov
out
xlat
mov
mov
push
pop
orb
jns
add
cltd
stos
cwtl
pop
or
je
rcrb
xadd
inc
mov
sub
inc
sbb
or
out
rcll
fwait
add
decl
adc
and
push
cli
aam
mov
pop
mov
fadds
or
push
mov
sub
rcrb
sbb
adcb
dec
xor
push
jp
cmp
adc
jp
dec
add
lds
aad
ret
adc
inc
cmp
cli
fwait
mov
into
pop
adc
movb
fiaddl
push
jmp
push
xchg
cmpsl
jmp
adc
pop
mov
push
dec
adc
fwait
sbb
cli
adc
nop
jmp
mov
adc
mov
ficoml
dec
pop
mov
or
iret
add
adc
adc
fcompl
or
lret
push
test
rclb
dec
mov
sbb
rolb
scas
test
pop
adc
inc
push
sti
out
popf
lret
sbb
mov
add
xchg
push
testb
jg
adc
fs
dec
jns
or
mov
xchg
cmp
iret
sbb
or
pop
jns
inc
sub
add
jecxz
pop
mov
xor
push
xor
daa
nop
push
jp
sarl
push
jp
aam
push
push
jp
xchg
jns
add
jns
cmpl
sahf
inc
lahf
push
pop
jp
pop
jp
fnstcw
pop
jns
orl
mov
sub
nop
push
notl
rcrb
fildl
push
loop
ja
sbb
push
addr16
jmp
repnz
inc
sahf
add
lcall
inc
fists
jns
inc
sahf
mov
cmp
rolb
add
dec
mov
mov
pop
or
addb
pop
test
push
jns
lea
push
or
lret
mov
dec
rorb
int
add
adc
ja
shll
adc
ficoml
dec
pop
or
lds
dec
xlat
and
fsts
ja
fwait
jp
inc
jp
jp
dec
jp
or
leave
push
daa
mov
leave
dec
lea
push
fstpt
mov
sub
mov
jmp
stc
dec
or
xchg
mov
push
dec
fstpl
sbb
sbb
pop
xchg
fcomps
cltd
xchg
sbb
push
xchg
sbb
add
jbe
popf
iret
dec
xchg
jmp
addb
daa
ror
mov
push
jne
or
mov
test
stos
loop
les
jecxz
pcmpeqd
inc
xchg
add
shll
mov
xchg
mov
xchg
inc
fcoms
adc
pushf
xchg
iret
mov
int3
inc
js
mov
jmp
push
lods
lds
inc
fldenv
mov
jno
data16
mov
rcrl
pop
rol
inc
mov
rcrl
jns
dec
jbe
inc
xchg
push
dec
pop
push
test
dec
inc
adc
shlb
dec
inc
jecxz
adc
xchg
dec
push
ja
dec
jbe
int3
pop
dec
js
xchg
inc
push
sbb
add
sbb
mov
mov
out
daa
dec
inc
fmul
mov
popf
fmuls
pop
mov
sbb
clc
int3
and
and
dec
daa
xchg
ret
lea
cwtl
into
and
mov
mov
cmovno
mov
inc
repz
and
xchg
aaa
mov
cmp
dec
test
in
or
decl
xchg
mov
nop
dec
cmp
push
in
into
sub
pop
push
jecxz
adc
shll
dec
inc
stos
sbb
and
iret
rcrl
sub
in
aam
rclb
cmp
xchg
popf
push
mov
je
adc
push
stc
cltd
inc
sub
frstor
adc
fsubl
xchg
xchg
nop
sti
mov
inc
stc
aas
add
rolb
mov
int3
push
shlb
adc
filds
push
adc
xchg
js
adc
nop
aam
rclb
add
xlat
cmp
xchg
stc
push
cmp
jg
aam
jno
lcall
sub
fcomps
je
fcomip
xchg
fsts
adcb
stc
xlat
lahf
mov
pop
push
and
pop
xlat
addb
fidivrl
add
cmp
mov
jl
adc
mov
jnp
inc
jnp
inc
jnp
inc
jnp
inc
jnp
inc
xchg
xchg
mov
fadds
sbb
or
jmp
sbb
lds
addl
pop
test
mov
mov
adc
jne
xchg
jne
enter
stos
or
lret
mov
or
add
dec
ss
mov
mov
push
push
ss
push
lcall
sahf
adc
fwait
repnz
rcrl
push
lahf
push
push
jbe
fsubs
fnstcw
sti
add
jecxz
subb
push
xchg
cli
adc
add
xchg
xchg
fisubrs
xchg
adc
cmp
pop
adc
mov
xchg
sbb
or
xchg
mov
push
ret
clc
int
sti
mov
pushf
dec
xlat
mov
xchg
jg
mov
pop
js
cmp
adc
xchg
std
xchg
rclb
push
mov
xchg
cmp
or
aas
nop
aad
rcll
xchg
ficoml
push
mov
loope
or
sbbb
pop
pusha
fistl
pop
sbbb
xlat
movsl
sbb
lret
or
push
dec
pop
scas
loope
js
inc
aaa
dec
fnsave
lahf
in
lcall
push
popf
test
mov
add
data16
jp
jne
cmp
pusha
adc
cltd
pop
sbbb
lahf
mov
sub
sbb
push
sti
rcrl
rolb
jl
push
les
nop
test
lea
xchg
adc
fs
test
into
or
push
mov
adc
mov
inc
mov
inc
mov
inc
ss
inc
mov
mov
int
pusha
aam
inc
mov
test
cwtl
popf
cwtl
fstp
xor
out
rclb
std
push
xchg
pop
xchg
loope
add
xchg
xchg
into
shll
lret
inc
mov
jo
insl
leave
mov
cmp
test
les
sub
jl
push
mov
testb
push
into
inc
sti
jg
adc
mov
dec
ret
mov
ret
mov
ret
mov
ret
mov
and
dec
insl
mov
rclb
and
push
and
sbb
push
jp
sahf
fisttps
jns
or
popf
jbe
pop
adc
sbb
or
mov
daa
lret
sbb
sbb
ret
jno
jae
pop
xchg
mov
fxch
stc
test
inc
adc
inc
rclb
rclb
rclb
rclb
mov
push
mov
rcl
outsl
inc
xchg
testl
inc
ss
sbb
rcrl
shll
jns
add
iret
mov
lret
add
sbbb
cmp
pop
iret
xchg
mov
nop
cmp
out
inc
dec
roll
xchg
lea
pop
add
push
or
lea
jns
or
ret
in
nop
lahf
push
push
mov
enter
aaa
repz
enter
orl
sbb
ljmp
xchg
adc
push
test
cli
pop
in
push
cmpsl
sbb
sbb
addr16
out
or
pop
sbbb
aad
popa
or
sbb
jb
fmull
or
or
sahf
int3
push
bndstx
test
sbb
and
mov
repz
sbb
adc
or
push
loope
dec
sbb
sbb
sbb
sbb
adcl
or
inc
add
iret
jecxz
or
roll
sbbb
inc
stos
adc
std
add
or
add
add
jecxz
dec
and
lds
push
in
sbb
sti
push
hlt
sbb
xchg
int3
dec
push
popl
das
fcompl
pop
xchg
pusha
xchg
push
enter
shl
dec
pop
std
fucomp
pop
in
fsubr
pop
push
adc
jo
jecxz
xchg
je
dec
fadd
inc
sub
ret
dec
sub
inc
xor
xor
fnsave
pop
xor
xor
xor
fidivl
pop
xor
xor
fdivs
pop
xor
xor
xor
aad
push
xor
xor
xor
shlb
push
xor
xor
shlb
push
xor
xor
into
xor
int
dec
mov
cmp
dec
and
cmp
cmp
xor
xor
xor
lods
sub
xor
vunpckhps
jns
add
adc
add
or
ret
push
xor
cmp
mov
mov
in
or
xchg
jmp
push
pop
aam
jle
push
cmc
data16
xchg
cli
jnp
adc
push
mov
jg
adc
jg
jle
call
jge
xor
adc
rcll
add
pop
xchg
inc
xchg
lods
mov
test
mov
lods
cmpb
fucomp
add
sti
add
popf
add
push
sbb
loope
pop
ljmp
inc
inc
int3
aam
dec
add
mov
int3
loopne
int3
cltd
aaa
mov
lahf
clc
stos
add
repz
jmp
jge
and
jnp
adc
jmp
fisubs
movsb
xor
pop
mov
push
jbe
repnz
adc
dec
xchg
mov
ret
xchg
fsubr
in
sub
mov
xchg
jne
or
fistpll
sbbb
ds
pusha
pop
test
fistps
xor
cmp
xor
clc
inc
daa
je
cmp
inc
xlat
and
scas
repz
add
into
loopne
fisttps
pop
push
xchg
mov
ljmp
or
fidivrs
addr16
es
lods
add
lret
popf
sbb
xor
sbb
loopne
mov
jmp
shll
fstpl
imul
jbe
ret
cmc
popf
in
xor
pop
push
inc
sahf
push
sarl
add
pop
mov
push
dec
mov
cs
xchg
adc
repz
shlb
mov
mov
repnz
mov
xchg
push
mov
lret
sbb
repz
mov
push
aad
fsts
lret
jb,pn
dec
rolb
dec
ss
ljmp
dec
sbb
nop
and
mov
shlb
adc
adc
or
repz
xlat
aam
xchg
dec
mov
cmp
ss
dec
and
adc
xchg
int
scas
int3
jbe
rcll
notb
rorb
aad
xchg
add
clc
add
or
pusha
mov
shrl
cmc
mov
insl
mov
push
adc
mov
aad
xor
loop
pop
or
adc
insl
mov
repz
xchg
pop
pop
or
jno
bound
jbe
push
aam
sub
mov
pop
test
or
xchg
jl
mov
jbe
movsl
or
mov
or
mov
add
dec
or
sbb
out
add
leave
in
mov
mov
xor
dec
out
gs
dec
push
aaa
push
xchg
pop
les
les
fldl
xchg
inc
ret
out
rcl
jmp
push
lret
pop
cmc
mov
cmc
cs
outsl
jbe
sbb
sbb
adc
push
adc
xchg
repz
or
aam
lcall
aad
or
in
rclb
addl
push
sti
in
outsl
xchg
insb
sub
mov
adc
or
movsb
xor
push
xor
testb
mov
repz
push
mov
out
jb
adc
ja
fsts
xor
les
xor
shrb
clc
mov
cmc
nop
pushf
aam
clc
pop
repz
sub
clc
div
icebp
or
jae
push
jb
or
pop
call
les
adc
rclb
ja
out
mov
fidivrs
or
or
adc
xchg
in
cwtl
push
xchg
repz
test
lret
push
inc
adc
xchg
cli
pop
gs
subb
aas
pop
ds
pop
mov
sahf
add
lret
es
or
inc
movsb
mov
mov
aam
je
daa
jnp
add
sbb
dec
xchg
imul
jg
std
inc
aad
out
shlb
pop
into
pop
roll
data16
loopne
jle
pop
lret
mov
adc
outsb
das
add
inc
or
adc
aas
mov
and
xor
or
jo
test
jg
mov
push
or
test
add
jl,pn
or
ds
pop
and
bound
loopne
mov
gs
and
inc
jecxz
xor
rclb
and
add
and
ficomps
call
test
inc
ds
lret
fs
add
adc
sahf
add
cmp
imul
jecxz
loope
in
fistps
mov
mov
adc
clc
sbb
pop
or
xlat
adc
bound
inc
cmpsb
inc
in
pop
test
movsb
lea
and
leave
les
push
int
inc
out
fs
cmp
pop
sbb
cmpsb
or
push
in
jmp
test
mov
lret
out
jecxz
fisubl
add
aad
fidivs
in
jmp
bound
or
sub
push
fs
mov
xchg
or
mov
mov
into
xor
insl
pop
pushf
inc
mov
inc
inc
loop
and
or
popa
aam
arpl
pop
mov
mov
jg
xor
jmp
cmpsl
jmp
iret
xor
jb
cmp
push
out
dec
ffreep
sbb
movsl
enter
pusha
std
rcrb
fimuls
or
sahf
add
loop
xor
andl
xor
add
lods
sbb
out
add
mov
andb
and
xchg
fxch
xor
cltd
xchg
pop
mov
sub
push
adc
aam
sbb
pop
push
jmp
cmp
mov
xor
adc
or
sti
lods
lea
push
fsubs
mov
aas
inc
add
arpl
outsb
push
inc
xor
dec
dec
ret
arpl
pop
fldl
std
push
mov
jle
bound
lahf
ficompl
incl
je
mov
sarb
sub
jmp
movsb
cli
movsl
inc
cmp
imul
shl
push
and
aam
test
fiadds
sbb
ljmp
xchg
incl
adc
mov
push
or
sub
aas
pop
jmp
sbb
mov
out
jns
jle
dec
out
imul
mov
sub
es
and
add
out
jo
sbb
push
jge
and
mov
or
scas
sub
jo
lcall
lea
or
loope
jmp
lods
dec
test
cwtl
dec
xlat
and
or
enter
adc
jmp
pusha
sahf
sbb
mov
xchg
sahf
fstpt
xchg
jb
adc
test
hlt
test
ret
xchg
pop
mov
mov
repz
mov
mov
jno
jmp
test
leave
xor
mov
xchg
xor
xor
aas
je
add
cmpl
or
jmp
lahf
movsb
or
outsl
cwtl
pusha
mov
inc
shl
dec
outsb
into
mov
jg
repz
pop
pushl
add
sbb
fldenv
stos
inc
pop
jmp
inc
push
push
cmc
xchg
pop
push
and
in
mov
ret
dec
or
cmpsb
hlt
mov
inc
in
jmp
jmp
aad
in
sub
dec
dec
or
adc
adc
enter
mov
loop
push
or
addb
pop
bound
inc
int3
mov
pop
ljmp
mov
push
cmp
fs
jb
inc
loope
dec
push
repnz
lret
adc
push
or
orl
sbb
jecxz
push
xchg
sub
int3
sahf
rol
out
mov
test
inc
add
inc
sub
mov
inc
xchg
mov
sub
addl
insb
dec
xlat
mov
mov
mov
hlt
out
sub
or
stos
mov
mov
into
push
popf
in
xor
push
stc
mov
sqrtps
inc
cmp
jecxz
add
sbb
seto
inc
sbb
adc
xchg
cld
js
clc
popf
call
cmp
add
in
int3
jp
push
mov
mov
test
aaa
mov
insb
adc
test
add
sbb
sbb
sbb
aas
inc
fdivl
lret
inc
push
or
inc
pop
loope
mov
cltd
jmp
dec
mov
popf
push
mov
jecxz
mov
aas
arpl
xchg
dec
mov
ret
cmpsb
popf
xchg
inc
lret
or
cmp
inc
mov
pop
hlt
out
enter
xchg
sbb
popf
add
mov
add
pop
imul
adc
pop
xchg
addb
push
iret
push
in
jg
test
loopne
or
jb
mov
lds
adc
sbb
or
push
lds
push
push
aas
test
or
xchg
push
push
sbb
mov
push
mov
or
or
mov
push
incl
sti
in
cmp
test
stos
mov
lret
pop
inc
pushf
sbb
test
jl
jg
movsb
or
dec
or
push
cld
push
sub
out
cmp
addb
or
add
cld
call
sub
adc
cld
push
adc
addr16
sub
ds
sbb
or
fstps
mov
sbb
add
orl
or
add
cmp
mov
mov
in
dec
popf
dec
jno
nop
mov
pop
or
or
loop
prefetcht0
stos
stc
xchg
pushf
mov
add
aam
out
int3
mov
enter
adc
sbb
mov
mov
sub
sbb
in
gs
call
aam
adc
add
push
push
xchg
jg
popf
adc
sbb
sbb
pop
pop
or
mov
cli
lcall
sbb
into
inc
or
add
fs
nop
cmp
mov
les
xchg
sbb
sbb
pop
ljmp
sub
add
pushf
add
popf
sbb
sahf
ret
sbb
push
adc
xchg
stc
sub
into
mov
add
out
dec
je
lret
icebp
pop
inc
sbb
or
mov
enter
decl
push
push
mov
or
sbb
pop
add
sbb
or
lcall
adc
pmulhuw
pop
sbb
rclb
sarl
enter
mov
add
lcall
movsb
and
mov
mov
sbb
push
sbb
mov
mov
in
pusha
jl
lahf
ret
sbb
daa
pop
push
fstpl
add
hlt
add
movb
push
push
sbb
or
jmp
add
adc
dec
aas
xchg
ret
sbb
adc
pop
sti
fwait
and
push
dec
sbb
lods
out
leave
sub
mov
push
fdivl
sbb
adc
repz
enter
add
arpl
cwtl
mov
cmp
dec
pop
enter
arpl
mov
mov
fildl
xor
popf
lock
popf
in
mov
inc
and
pop
stos
je
jg
sbb
mov
pop
and
pop
inc
mov
xlat
push
out
jge
mov
cmc
clc
add
or
aas
cltd
push
or
sub
adc
inc
comiss
stos
stos
rolb
loopne
lea
push
int3
lret
movsb
test
push
pop
sbb
outsb
insb
lcall
pop
jl
idiv
xchg
pop
sbb
ljmp
sbb
movq
cmp
fdiv
cmovle
sahf
push
mov
sbb
hlt
out
orl
lret
jmp
test
add
notb
adc
mov
pop
pop
mov
aam
push
cmp
sbb
test
mov
faddl
orl
or
out
or
rolb
stos
and
lcall
jge
stos
test
pop
inc
in
pop
add
add
cwtl
sbb
xchg
decb
cli
cld
repz
dec
or
inc
add
xchg
mov
adc
adc
adc
add
pop
loopne
add
ret
outsl
rorb
xchg
rcrb
jecxz
fsubl
jecxz
adc
cmp
movb
fldenv
lret
mov
jmp
or
sbb
jl
push
dec
and
dec
sbb
sbb
adc
les
in
xlat
xchg
imul
imul
xor
or
mov
out
mov
xchg
push
xchg
notb
aaa
adc
out
test
sahf
cmp
mov
cmpsl
insb
jnp
in
lods
in
test
push
sub
loopne
std
jle
aas
and
mov
nop
insl
mov
xlat
js
cwtl
popf
lret
jae
push
xchg
clc
mov
and
sbb
mov
mov
aaa
imulb
xor
mov
sub
inc
fsubp
xchg
dec
int3
dec
add
insb
or
push
and
arpl
mov
in
lret
jg
rorl
call
test
or
mov
mov
push
cmp
out
pop
stc
cwtl
jmp
adc
dec
sub
pop
or
subb
or
push
sahf
push
ss
clc
movsb
mov
push
dec
ja
pop
mov
lods
mov
push
mov
adc
lods
sbb
cltd
mov
adc
lods
orl
jb
adc
dec
dec
cmp
push
test
out
push
add
inc
adcl
xchg
mov
movsb
arpl
fs
dec
dec
lock
mov
cmpsb
add
aas
jge
pop
ljmp
cmp
stos
in
jno
xor
push
push
mov
imul
cmp
or
sarb
mov
cmpsb
sarl
mov
movsb
jmp
mov
in
pop
add
xor
sub
popf
xchg
andb
or
lods
mov
sub
xchg
ja
aaa
imul
or
cs
sub
or
mov
ljmp
or
cld
dec
or
les
hlt
shlb
movsb
sub
fisubl
mov
mov
addb
inc
sub
shlb
mov
pushf
mov
jle
scas
inc
sub
jp
xchg
nop
or
jb
outsb
inc
or
pop
push
push
push
or
and
ds
cmp
ss
xor
ljmp
lcall
call
fdivr
in
enter
cld
cli
mov
in
ret
cmpsb
mov
lock
lea
cld
sub
push
aam
jl
mov
inc
sahf
pusha
rcrb
jnp
je
push
mov
lods
sahf
sbb
orl
jp
pop
sub
pop
pop
lahf
or
xor
and
mov
loopne
or
push
outsb
es
or
xchg
insl
sub
or
and
pop
jge
sahf
cmp
sbb
testb
sbb
ds
sub
push
mov
ss
or
dec
iret
jle
or
xchg
shlb
inc
nop
pop
push
mov
pop
push
cs
pop
fwait
or
std
lods
push
mov
pop
cmp
in
es
fdivl
in
xchg
xor
aaa
loop
lea
mov
dec
push
xorb
cmp
mov
or
jno
bound
popa
lods
xor
outsb
popf
cmp
test
or
pop
arpl
jno
in
mov
sbb
sub
or
pop
pop
cmp
jl
int
and
out
mov
outsb
movsl
mov
imul
or
push
xchg
sub
mov
ja
shrl
pop
sub
adc
sub
mov
or
lcall
stos
jl
lahf
repz
das
push
dec
iret
ja
loope
and
aam
push
lret
orb
pop
shlb
sub
mov
sbb
inc
xor
xchg
pop
or
mov
pop
pop
or
sub
mov
or
jae
dec
in
adc
xchg
adc
xor
div
icebp
imul
and
cmp
or
or
testl
insb
xor
jle
rclb
bound
pop
inc
inc
pop
dec
dec
ret
and
daa
mov
mov
or
jp
out
aas
or
pop
fisubrs
dec
or
jecxz
shlb
fisubrs
scas
xlat
popa
or
dec
clc
jnp
sub
arpl
dec
mov
lods
jne
call
in
outsl
aaa
pop
push
repnz
popa
in
scas
xor
xor
add
push
cmp
or
jnp
mov
ljmp
int
mov
pop
mov
mov
ja
out
push
dec
imul
mov
push
data16
adc
sub
negl
or
scas
or
adc
cmp
outsl
mov
jnp
jp
fcmovnu
aaa
adc
push
in
jb
aas
lahf
jne
dec
xor
js
pop
mov
fisubs
popl
popa
push
mov
jmp
dec
ds
sbb
jns
add
imul
mov
mov
divl
outsb
xor
xor
inc
sub
adc
sbb
push
inc
or
shll
jge
inc
push
sub
jb
pop
iret
mov
cmp
sbb
test
dec
cmp
xlat
in
pop
cmp
lods
leave
das
scas
or
jae
xor
in
pusha
sbb
rorl
push
cmc
cmp
lods
xorl
inc
aaa
cmp
cmpsl
ja
or
je
jae
nop
dec
sub
pop
fstl
fwait
add
mov
cmp
mov
xor
jmp
ss
and
pop
lods
xchg
add
insl
dec
mov
push
pushf
or
lea
or
ret
sub
xor
aad
das
dec
sub
dec
sub
sub
orps
mov
fnstcw
or
push
jnp
pop
sbb
call
push
xor
adc
dec
adc
stos
into
shrl
jae
int3
jne
aas
repz
dec
sarb
or
xor
jle
cld
add
lret
cmp
sbb
or
int
lahf
and
dec
cltd
jmp
das
xchg
loop
sub
mov
inc
lock
push
pop
lods
out
dec
xchg
cmp
pop
mov
movb
inc
jg
je
in
mov
push
fs
sbb
jle
movsb
dec
or
and
mov
cmp
sub
cmp
daa
mov
push
ucomiss
xor
pop
inc
or
int
and
xlat
jmp
lahf
imul
adc
je
out
cmp
or
adc
adc
cli
mov
std
int3
pushf
push
add
mov
sbb
or
dec
test
xor
xor
insl
adc
cmp
or
and
push
push
mov
pop
xor
mov
or
mov
adc
sub
aaa
loopne
xchg
mov
mov
or
or
jle
lea
sub
or
cs
aaa
cmp
mov
daa
repnz
aaa
or
xor
mov
pop
insb
jge
lods
pop
cmp
pop
sahf
rcrl
xlat
jno
or
adc
mov
into
in
jmp
lret
cmp
mov
jbe
jl
mov
cmp
dec
adc
inc
pop
xor
pop
mov
pop
or
dec
aad
std
pop
imul
rcrb
adcl
sub
loop,pn
dec
dec
mov
ds
mov
cwtl
sbb
adc
add
or
movsl
push
push
sub
cmp
mov
icebp
cld
cli
jnp
jle
mov
sarl
inc
mov
inc
sbb
mov
pop
fwait
adcl
xlat
sub
mov
or
les
or
mov
repz
in
sub
lahf
lea
jbe
lret
cli
add
ds
push
mov
cs
xor
add
xor
pop
push
or
iret
sub
inc
or
pop
pop
dec
mov
filds
pop
jl
cmpsb
dec
jge
hlt
mov
dec
cmp
mov
push
xchg
pop
rcl
adc
fimull
lods
insb
mov
adc
or
and
sbb
repnz
popa
sub
mov
adc
add
int
pop
in
pop
das
jle
push
pusha
push
adc
mov
adc
cwtl
addr16
inc
or
daa
popa
aaa
fsubrs
cmpsl
push
cmp
and
add
mov
daa
sbb
jb
dec
push
fldcw
and
add
rorb
jecxz
sub
scas
xacquire
jnp
sbb
cmp
or
jp
adc
je
lods
push
into
icebp
int
or
mov
in
push
and
in
inc
stos
mov
dec
cmp
out
adcb
pop
or
mov
add
ss
dec
or
fdivl
dec
lods
add
mov
or
ja
inc
inc
mov
sbb
outsb
or
cmp
mov
daa
repnz
sarl
repz
pavgb
mov
cmpb
sbb
or
mov
jnp
or
aaa
add
push
cmp
cmp
in
insl
inc
data16
mov
or
sbb
sub
cmp
sbb
xchg
and
xor
je
or
or
push
xor
mov
sbb
sub
or
add
loope
add
dec
out
or
pop
mov
bound
cmpsb
mov
loop
inc
scas
popl
push
or
bound
lea
and
cmp
out
or
stc
pop
pop
lds
loopne
ret
add
adc
shrl
push
sbb
or
push
je
and
xchg
push
or
imul
addr16
pop
xor
sbb
sub
shl
xor
outsb
sub
lea
push
js
pop
mov
cmp
mov
sbb
iret
decb
addr16
cmc
in
cmp
outsl
icebp
out
clc
adc
aam
loope
daa
inc
adc
or
mov
xchg
or
cld
cmp
ficoms
cmp
dec
pushl
imul
sbb
dec
jnp
mov
pop
cli
adc
enter
dec
mov
inc
push
dec
xor
repnz
dec
mov
in
push
pusha
idivl
xchg
inc
or
ret
outsb
lods
mov
test
mov
sub
push
jne
or
insl
cld
fimull
outsl
cmpsl
test
dec
xor
fisubs
sbb
or
pop
outsl
pop
sti
or
xor
lahf
or
pop
outsb
jmp
sub
insl
sub
ds
adc
test
mull
inc
ret
mov
pop
mov
movb
fisubs
sub
sub
lods
inc
inc
adc
testb
dec
icebp
inc
or
cwtl
nop
cmc
cld
test
dec
cmp
mov
in
inc
push
sub
imul
or
enter
or
cmp
inc
mov
ja
add
test
sahf
orl
pusha
push
or
push
xchg
inc
cmpsb
sub
sub
std
pop
dec
jg
in
cmp
ror
xchg
sub
ror
lods
adc
lea
inc
add
test
mov
lahf
leave
add
ret
std
scas
mov
adc
and
sahf
inc
out
add
or
test
mov
imul
mov
mov
dec
scas
push
sbb
mov
mov
or
and
push
insl
in
mov
inc
and
or
outsb
mov
and
fmull
les
in
add
loope
cmp
jge
adc
add
push
or
je
xor
and
jae
dec
lods
xchg
lahf
test
pusha
lret
mov
dec
in
or
mov
fstps
xor
enter
jnp
adc
call
xchg
adc
jo
fbld
mov
int3
cmp
mov
sub
outsb
imul
or
rolb
or
mov
inc
in
into
adc
push
jno
ss
inc
outsl
xor
add
mov
mov
pusha
loopne
in
outsl
dec
and
clc
jecxz
jns
pop
mov
mov
pop
and
cld
outsl
add
pop
imul
jae
sub
in
or
mov
xor
shlb
std
push
or
ljmp
pop
cs
inc
aad
xor
dec
sub
stos
lahf
or
sbb
outsl
mov
mov
mov
jmp
sbb
pop
das
pop
push
cmp
adc
sti
mov
sub
jge
sbb
or
mov
iret
cmp
xchg
pop
loope
loopne
pop
sub
xchg
cli
ljmp
insb
add
test
dec
or
adc
mov
inc
subb
cld
mov
outsl
es
inc
adc
xchg
pop
jbe
cmp
inc
xor
cwtl
xor
pop
dec
lds
add
jle
cmc
iret
sbb
aaa
xor
cs
push
into
add
fldl
fisubs
out
popf
lds
mov
iret
outsl
dec
int
or
mov
dec
pop
popf
dec
add
push
out
repnz
cli
pop
cmp
and
fdivs
inc
jle
push
movsb
push
jle
adcb
imul
popf
xor
add
out
sbb
or
aaa
and
imul
in
and
pop
add
nop
mov
cmpsl
mov
dec
test
jbe
xor
out
pop
and
inc
or
aam
scas
mov
lret
xchg
loopne
pusha
mov
or
out
lds
ss
or
insl
ret
or
mov
inc
and
dec
adc
xor
aad
adc
xchg
gs
sbb
hlt
mov
mov
xchg
adc
push
dec
or
jae
mov
ret
jb
sub
cmp
stos
or
fwait
test
mov
dec
mov
mov
stos
sub
inc
sbb
movsl
call
cmpb
xchg
push
jle
or
lods
ja
sub
fwait
dec
push
ret
push
pop
sbb
inc
or
sub
paddusw
mov
or
fists
lds
mov
or
fisubl
cs
sub
push
sbb
or
cmp
mov
int
insl
cmp
dec
stos
pop
sub
daa
jecxz
call
lods
inc
sub
xchg
in
pop
push
adc
in
cltd
sub
mov
add
pop
jno
xchg
push
push
mov
cld
push
pop
fimuls
outsb
mov
sbb
ds
adc
ds
orl
mov
dec
or
mov
push
sbb
orl
pop
outsb
xor
or
inc
pop
mov
int3
add
mov
inc
aam
cltd
or
inc
arpl
mov
jle
jne
das
and
or
fisubs
or
cmp
andl
stos
bound
jge
xchg
add
adcl
mov
and
in
addr16
sahf
jno
fcoml
inc
inc
imul
rorb
bound
iret
adcl
sub
sub
je
in
or
aas
mov
out
or
jne
cmp
mov
pop
push
and
int
sbb
or
sbb
push
push
and
int3
or
sar
jo
push
xchg
or
repnz
lds
pop
mov
cmp
mov
leave
pop
push
pop
dec
sub
cmp
fmull
in
mov
jnp
push
cmpl
or
icebp
dec
loopne
rorl
jb
mov
xor
dec
cli
pop
das
pop
jae
add
inc
rclb
inc
add
mov
pop
mov
cmpsb
push
es
jns
mov
or
dec
test
adc
jg
stc
test
jmp
lods
add
shlb
or
mov
cmpsb
js
bound
cmp
jnp
fwait
jbe
push
and
jne
lret
cmp
rclb
int3
test
rol
incb
or
xchg
jo
and
mov
in
pop
stos
cmpsl
dec
sbb
pop
clc
adc
int3
popa
jmp
add
cmp
bound
mul
aaa
mov
jle
stos
adc
add
sub
push
in
adc
mov
mov
pusha
addl
jo
das
jbe
sbb
or
dec
test
mov
pushf
or
aaa
lea
and
rcll
stos
xor
int
idivb
addr16
lods
xchg
mov
mov
mov
jns
xor
xor
cmpsl
pop
cmp
dec
cmp
xorl
cmp
sub
dec
in
mov
push
lea
sarl
prefetch
ss
push
test
adc
inc
negl
xor
outsl
pop
mov
mov
mov
or
dec
cmp
lea
outsl
dec
add
mov
inc
cmp
push
popf
or
out
fldl
xor
lcall
ja
mov
or
int3
ss
gs
or
jns
xchg
dec
or
popf
lea
or
xlat
pop
or
xchg
inc
xor
jbe
stc
jnp
cs
cmp
xchg
int
clc
pusha
dec
clc
or
cwtl
mov
jg
mov
jns
add
sub
int
data16
sub
xor
lea
scas
dec
cmp
push
movb
or
adc
js
xor
mov
movsl
dec
mov
xor
xor
es
jns
cwtl
inc
inc
jge
or
or
mov
mov
pop
xchg
lret
arpl
movsb
xchg
out
mov
push
sbb
insl
or
mov
push
mov
cmp
xchg
inc
das
js
mov
pop
pop
pop
dec
adc
or
sub
shrl
xlat
jge
in
xchg
mov
adc
sub
sub
jp
sbb
adcl
mov
push
or
idivb
dec
or
mov
cmp
jp
xor
adc
pop
jb
daa
in
push
ss
out
or
or
or
mov
mov
or
test
mov
mov
cltd
cli
aad
mulb
pop
mov
xor
or
push
sbb
pop
int
inc
lret
scas
or
sti
fwait
pushf
jl
add
sbb
in
rorb
dec
mov
and
outsb
inc
push
cmc
fisubs
loope
movsl
sub
push
xchg
or
adc
or
jno
push
imul
outsl
adc
fisubrs
in
icebp
pop
mov
jle
sub
mov
mov
sbb
fisttps
mov
movsb
mov
mov
push
mov
fidivl
flds
add
scas
adc
int
lods
data16
or
in
iret
add
push
pop
adc
xor
in
sarl
jb
sub
test
xchg
mov
or
and
mov
dec
xor
outsb
aas
inc
mov
mov
or
push
aad
mov
xor
push
sbb
ss
sbb
imul
cld
lahf
dec
and
or
mov
xchg
jge
cmp
and
or
and
js
push
mov
push
test
arpl
je
popa
sub
xor
inc
ss
out
sbb
dec
xor
or
dec
imul
ret
mov
mov
adc
mov
or
sarb
inc
mov
leave
pop
nop
inc
and
sarb
ja
pop
xor
mov
xchg
pop
pop
pop
xchg
cmp
xchg
scas
and
fmulp
daa
xchg
sub
lahf
mov
dec
push
cmp
aad
adc
add
pop
jno
inc
xor
movsl
fstl
mov
sbb
mov
lidtl
or
xor
pop
sub
loop
test
xchg
jnp
pop
and
insl
aas
jae
mov
xchg
or
mov
xor
push
and
xor
cmc
push
or
imul
daa
adc
adc
dec
lods
cmc
push
inc
sbb
aaa
or
cmp
or
inc
push
nop
xchg
pop
xor
out
outsl
adc
cmp
xor
and
or
pop
lds
cmc
sub
dec
test
test
cmp
je
lret
adc
mov
in
cmp
loop
and
in
aaa
sar
mov
notl
xor
fcoms
dec
mov
add
add
andb
int
mov
scas
xchg
arpl
mov
lods
and
rorl
repnz
cli
insb
ds
or
sbb
adc
lds
or
addr16
add
daa
inc
int
outsb
mov
inc
or
or
jmp
iret
dec
mov
mov
adc
ds
cs
mulb
add
sbb
jmp
lods
lea
sbb
mov
cmc
je
adc
insl
xor
ja
movsl
ss
adc
addl
or
adc
or
rol
or
mov
popf
adc
in
pop
das
mov
pop
cld
repnz
xchg
mov
adc
xlat
sbb
icebp
iret
pop
jl
cmp
fisttps
jecxz
push
or
and
sbb
dec
leave
fucomi
insl
dec
inc
xchg
adc
xor
dec
xor
pop
imul
xor
icebp
dec
stos
jmp
adc
jb
sbb
pop
jp
gs
dec
and
mov
sub
dec
xchg
adc
push
jg
jge
cmp
pusha
pop
mov
mov
aam
fists
sbb
dec
mov
or
cmc
andl
jmp
int
loop
sub
push
jns
mov
fwait
or
pusha
push
push
push
test
mov
js
jbe
or
and
jg
or
popa
out
mov
out
fnstsw
xorb
imul
aas
shlb
ss
xor
das
jle
into
and
mov
adc
push
push
push
fmull
imul
xor
mov
out
dec
cmp
push
adc
lods
cmpsl
or
adc
ror
inc
inc
mov
and
adc
mov
sub
es
jnp
sti
push
pop
xor
xchg
pop
adc
movsl
and
inc
xchg
lret
rorb
sub
mov
mov
shr
dec
jmp
pushf
jo
sbb
push
mov
or
xor
adc
mov
das
and
push
adc
stos
lea
fistps
dec
mov
inc
aad
shr
jl
inc
or
cmp
mov
gs
mov
lods
out
xor
cltd
push
test
lock
pushf
or
sbb
xchg
cmpl
stos
outsb
addr16
push
push
fistpl
sub
jno
jnp
and
insb
stos
cmp
clc
mov
icebp
or
dec
jno
das
imul
xchg
xor
lock
dec
lcall
shrl
or
cmp
inc
inc
movsb
adc
pop
mov
dec
ret
dec
mov
stos
mov
inc
dec
xchg
push
jge
lock
mov
or
mov
addr16
insb
mov
mov
out
test
imull
mov
in
push
sbb
leave
lods
mov
pop
sbb
mov
lods
sti
or
sub
aaa
or
jmp
sti
out
sti
ja
jno
xchg
in
addr16
sbb
mov
push
lea
es
mov
dec
ds
adc
sub
gs
push
loopne
rolb
adc
dec
sbb
mov
dec
mov
arpl
adc
int
cmp
add
cli
xchg
mov
mov
xchg
or
jge
bound
dec
js
das
cmp
fildll
xor
or
cmp
lock
mov
rcll
sbbb
pusha
rcrl
pop
scas
and
xlat
or
aas
sahf
sbb
or
gs
dec
ja
mov
and
inc
aaa
push
inc
mov
or
lret
xor
cs
fmull
aad
and
fucomp
push
movsb
xlat
hlt
jbe
nop
adc
lods
pop
push
aad
inc
shll
push
ret
mov
xlat
jae
mov
or
clc
sahf
scas
jns
and
jle
jbe
jg
xlat
or
mov
cmp
icebp
and
xchg
xchg
mov
dec
sbb
incl
or
fstpt
xorb
hlt
pop
lret
frstor
sbb
add
stc
jno
xchg
sub
push
push
dec
adc
or
xchg
mov
xor
mov
pusha
or
popa
inc
je
or
cmp
add
dec
push
jle
add
mov
loope
pmullw
or
fisubrl
shll
lret
or
mov
daa
pusha
sub
sub
adc
nop
in
stos
xchg
addr16
adc
mov
inc
outsb
shll
repnz
dec
aaa
fcoml
out
movsb
or
pop
inc
push
in
push
jnp
jge
xor
aas
test
adc
out
inc
std
test
push
or
negb
lahf
dec
cld
pop
dec
inc
pop
xchg
cmpsb
add
xor
outsl
push
bound
cmp
fsubrp
call
add
fwait
dec
and
push
jbe
mov
orl
in
lods
js
push
fisttpl
scas
pop
mov
jne
inc
repz
inc
xor
shll
jl
outsl
push
sbb
xor
push
mov
mov
add
into
sub
mov
adc
push
xlat
sbb
mov
push
lods
sbb
or
xchg
in
flds
mov
pop
in
mov
lds
mov
jno
sti
les
jp
in
pop
rolb
pusha
into
iret
fidivs
mov
push
jns
or
adcb
mov
jl
outsl
add
mov
xchg
repnz
or
test
push
lods
pop
jecxz
jg
xor
or
test
adc
dec
cmp
adc
jbe
or
cmpsb
inc
arpl
in
mov
shlb
jbe
std
or
xor
xchg
xchg
sbb
in
adc
push
mov
cmp
insl
test
lret
inc
mov
cmp
sub
stos
sub
hlt
icebp
push
add
dec
jb
imul
mov
xchg
fmulp
outsl
pushf
fbld
cmp
mov
or
je
mov
mov
repz
clc
sub
sbb
mov
jmp
in
mov
xor
pop
adc
fisubrs
push
loope
jae
or
pop
sbb
popa
int
xor
xor
iret
pop
in
sub
adc
or
push
dec
fnsave
dec
orl
adc
inc
cs
inc
stos
call
ljmp
sub
int
pop
pop
out
test
add
or
xor
mov
std
jle
pop
gs
stc
push
mov
fists
push
es
fnstenv
push
stos
sub
dec
jnp
and
sub
pop
dec
inc
mov
jne
mov
jmp
gs
jnp
cmpl
out
xchg
xchg
push
mov
mov
cmp
cld
iret
push
repz
mov
pop
cs
bound
iret
cmp
mov
xlat
sbb
aaa
in
imul
sbbb
or
adc
int3
sub
mov
fdiv
dec
ret
or
jnp
pop
call
lods
mov
add
aaa
mov
xorb
xchg
jno
pop
lock
in
cmp
int
and
shl
cmp
shll
iret
jo
or
fs
mov
pop
xor
mov
pop
mov
mov
ja
push
or
push
mov
shlb
lahf
jmp
cwtl
insb
jl
jbe
divb
mov
lea
push
dec
test
sub
xchg
mov
pmulhw
and
or
int3
lret
mov
mov
popl
mov
aas
mov
repnz
ret
inc
sbb
or
cltd
subl
sbb
jecxz
xor
push
pop
xchg
or
cwtl
popa
outsb
es
call
inc
shl
xor
aaa
out
mov
prefetch
or
imul
mov
sbb
jge
dec
sarl
mov
fildll
inc
pop
dec
sub
lods
inc
mov
cmp
push
push
lods
cmpl
mov
and
inc
imul
jge,pt
lods
add
divps
repz
repz
fnstsw
dec
lods
es
aaa
movsb
out
jns
pop
movsl
js
adc
adc
lods
psadbw
sbb
or
aas
lret
mov
loope
stc
rcrb
lahf
mov
mov
sbb
xor
xchg
push
or
dec
or
iret
pop
rcrb
jmp
push
push
mov
inc
repz
sbb
xor
or
mov
jp
outsb
test
jle
loopne
inc
out
or
lods
jmp
jp
cmp
or
jae
xchg
pop
or
push
dec
insl
imul
ds
cmp
iret
daa
add
out
xor
cmp
dec
mov
dec
push
or
inc
shr
int3
int
dec
daa
jno
add
xchg
insl
lods
and
sbb
into
pop
stc
outsb
mov
pop
in
add
add
xor
sbb
xchg
test
or
insl
cmp
popf
loope
jns
and
pop
dec
add
inc
or
in
popa
and
das
mov
xchg
cmp
scas
icebp
xor
lods
cld
sti
add
add
pop
dec
testb
dec
or
fstp
cmp
je
rcrb
outsb
rorl
sti
stos
or
pop
in
and
jmp
or
aas
jge
sub
mov
in
cmp
dec
pop
cmp
dec
dec
negb
and
adc
in
or
mov
or
xor
pop
sub
jnp
dec
cmp
xor
jns
add
ds
push
sbb
pop
add
xor
or
popa
xchg
lods
shrl
sbb
mov
in
data16
loopne
xchg
lods
jl
mov
rol
outsb
mov
sti
dec
daa
sbb
xchg
or
inc
inc
dec
clc
or
insl
add
xor
ss
add
inc
repz
stos
jge
add
adc
das
fldenv
pop
sub
mov
gs
push
add
stc
add
push
rorl
icebp
and
jmp
jns
pop
lods
xchg
dec
sbbb
outsb
ret
jne
dec
stos
mov
movsl
adc
in
aam
or
lahf
fnstenv
or
lods
dec
mov
lods
add
cli
sar
sahf
xchg
adc
or
mov
loope
cmc
or
int3
inc
outsb
sub
inc
xor
inc
scas
push
mov
lods
mov
mov
xor
mov
sub
mov
xchg
mov
mov
inc
cld
and
adc
stos
jne
loop
xor
sbb
mov
or
or
ret
jb
mov
jmp
imull
mov
inc
insl
fnstenv
pusha
pop
pop
cli
push
xchg
mov
pop
das
mov
lds
mov
ja
scas
imul
jge
push
mov
stos
in
in
mov
adc
das
inc
dec
enter
mov
les
cltd
push
adc
push
mov
dec
pop
inc
in
lahf
mov
xor
or
mov
sub
and
add
mov
add
adc
lret
push
xor
fwait
dec
gs
cmp
add
in
cmp
into
aaa
bswap
jecxz
and
mov
faddl
mov
xor
xchg
mov
xchg
fimull
xchg
test
adc
lods
jl
ds
aam
or
out
mov
mov
jl
mov
push
xorb
mov
cmp
popf
jecxz
and
aam
cmovo
loopne
or
jp
mov
aad
or
lahf
mov
xor
addr16
notb
sbb
push
out
mov
cmp
inc
cmp
cmp
inc
pop
or
inc
mov
int3
es
rorl
mov
inc
rcll
cltd
lret
cmp
mov
outsl
repz
xorb
add
dec
and
in
mov
sbb
cs
or
scas
sub
addr16
dec
lret
fldcw
dec
sub
jmp
test
outsb
pop
sbb
stc
data16
dec
arpl
lret
stc
fldenv
arpl
mov
pop
movsb
addr16
sub
stc
decl
in
xor
adc
mov
mov
dec
out
mov
lock
repnz
call
in
into
ljmp
or
lret
fildl
out
add
dec
pop
mov
test
leave
pushf
xchg
jp
adc
stos
mov
and
mov
leave
pusha
imul
mov
ret
andb
mov
nop
push
mov
xor
sub
or
jle
cmpsb
jne
pushf
dec
rcl
sbb
ret
or
mov
fildll
cmp
andl
dec
or
movsb
cmp
ret
or
adc
dec
mov
testl
add
insb
mov
sub
out
test
lcall
mov
fimuls
clc
aam
jl
mov
and
jle
pop
and
lds
pop
push
jp
xor
addr16
lret
in
or
jecxz
or
fimuls
andb
jge
lret
aam
pusha
pop
lret
loopne
sahf
jno
and
inc
sbb
lcall
jmp
addr16
in
lret
sub
sub
fcmovnbe
pop
xchg
lret
dec
movntq
loope
clc
daa
daa
add
lea
popa
cli
ljmp
cmp
iret
aas
pushf
or
cld
test
and
fnstcw
lret
jecxz
into
mov
adc
loop
or
stos
jecxz
add
addl
or
add
les
mov
mov
mov
jmp
sub
int3
xor
jge
int
inc
fcmovne
sub
or
stos
fsubl
pop
stos
inc
sub
stc
adcb
adc
jns
jl
hlt
add
add
jmp
lret
ljmp
or
pop
adc
and
or
subb
loopne
aas
mov
inc
scas
sbb
push
dec
call
out
pop
out
adc
lock
cmp
enter
and
or
in
pop
sub
movsb
pusha
add
add
fdivp
mov
mov
or
inc
lret
test
faddp
in
jmp
or
mov
add
adc
sub
sbb
xchg
jns
es
xchg
fimuls
adc
inc
lds
lock
inc
fnstsw
fiadds
and
jno
and
mov
ss
std
aas
pop
xlat
push
into
add
jno
mov
or
sub
mov
add
rol
imul
mov
test
test
jmp
xor
les
xor
test
push
jnp
ja
adc
std
cmpsl
test
xchg
std
test
js
fisttpll
pop
mov
dec
mov
addr16
lret
mov
mov
push
mov
out
xor
inc
pusha
push
lock
mov
rol
pop
cli
mov
lret
and
daa
mov
jl
call
out
test
nop
sahf
sub
lds
ret
jb
cmp
cmpsb
sbb
jecxz
movsb
ss
mov
inc
fistpll
mov
or
movsb
inc
loopne
xor
pop
sub
clc
add
add
das
mov
add
test
arpl
jecxz
adc
cmc
or
aaa
lds
inc
fwait
dec
fdivrp
mov
jp
push
and
test
ja
sub
add
lds
test
daa
jecxz
jecxz
inc
jle
pushl
stos
les
shl
fs
or
push
dec
inc
xchg
xor
int
lods
call
and
repz
jmp
sahf
jl
clc
nop
jo
cmpsl
jo
int3
shl
push
repz
push
out
push
ficomps
fisubrs
mov
out
push
shll
add
cmp
sbb
stc
popf
fisubrs
pop
loopne
push
mov
pop
stos
add
xchg
add
lods
imul
and
sbb
lea
or
adc
fiadds
or
dec
and
inc
fbld
addb
in
insl
sub
xchg
out
pop
or
pop
jmp
out
out
imul
push
dec
or
imul
add
push
jmp
icebp
out
es
jmp
cld
or
in
pop
xchg
add
dec
aas
push
and
movsl
cmp
filds
in
inc
pop
adc
cmc
call
xorb
cli
or
add
or
in
dec
lds
mov
fdivrl
sti
fisubrl
mov
cli
stos
leave
adc
xchg
loope
mov
leave
in
sub
mov
mov
mov
into
push
xchg
xor
or
jb
bound
lret
sbb
dec
inc
outsb
lret
out
push
in
inc
dec
aaa
dec
lret
dec
ss
ret
test
std
mov
pop
pop
in
movsb
pop
call
clc
sbb
cwtl
les
out
test
dec
add
lret
pop
pop
pop
or
lret
mov
out
mov
or
pop
jne
sbb
adc
pop
pop
xor
inc
clc
pop
xor
cmpsb
push
clc
sbb
std
push
lret
rorb
or
sbb
mov
push
add
inc
fcompl
arpl
arpl
pop
scas
mov
xchg
leave
sbb
movsl
movsb
test
es
scas
dec
mov
repnz
insl
mov
fnstcw
adc
push
jge
dec
imul
dec
lcall
pusha
dec
dec
scas
daa
lret
icebp
cmp
sahf
sub
popa
insb
sub
or
and
and
dec
mov
fistpll
pop
int3
or
pop
mov
ficoms
shll
mov
pop
fstpt
inc
sbbb
jbe
push
mov
movsl
les
add
mov
and
sbb
mov
cmp
dec
jmp
sub
in
ds
call
mov
les
mov
or
je
add
orb
ljmp
clc
ljmp
test
sbb
cli
xchg
sub
jg
pop
adc
push
mov
loopne
or
mov
mov
pop
cld
mov
add
lret
or
and
xchg
std
aaa
or
out
in
push
jo
ficoml
addr16
jp
mov
sbb
std
add
mov
in
lret
stc
out
adc
jl
rcl
xchg
sbb
scas
loop
xchg
adc
xchg
mov
or
or
push
outsb
out
sbb
ss
or
mov
mov
or
pushf
out
xor
jo
mov
add
mov
add
mov
in
adc
inc
lret
mov
push
mov
fidivs
and
mov
in
sub
xchg
fmull
pusha
inc
push
inc
pop
ret
das
dec
fisubrl
loop
mov
test
lods
stos
cwtl
orl
and
or
rorb
stos
stos
fwait
or
push
loopne
jmp
aam
push
aad
sbb
mov
jmp
ret
jmp
xchg
inc
loope
hlt
lret
out
push
adc
jmp
push
or
addr16
movb
push
movsl
add
add
push
ret
push
and
fwait
push
loope
inc
add
add
adc
lock
fcomps
mov
jp
fnstcw
mov
loope
xchg
mov
mov
adc
mov
mov
dec
cld
lods
in
jns
sub
imul
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
cmp
fnstcw
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int3
lods
sub
cmp
cmp
xor
xor
jo
xor
xor
and
xor
xor
fdivs
xchg
xor
hlt
xor
xor
stos
and
and
cmp
cmp
xor
xor
xor
xor
fidivs
pop
xor
xor
fdivs
push
xor
xor
mov
adc
lock
mov
repnz
lock
out
add
in
mov
in
fwait
in
fldln2
sbb
push
in
xchg
in
mov
lock
femms
dec
insb
fisubrs
mov
push
vpavgw
ds
pop
pop
pop
pop
pop
pop
jbe
je
jb
jo
dec
dec
int3
dec
mov
add
loope
mov
scas
jns
aaa
scas
adc
out
outsb
sub
jmp
mov
mov
mov
scas
pop
lods
stc
scas
xchg
scas
xor
femms
or
nop
sub
popl
mov
push
fmull
push
rorb
jmp
lds
lds
std
and
aad
xor
ljmp
sub
xor
je
xchg
xchg
scas
stos
dec
enter
loop
fbld
sbb
das
adc
lock
mov
mov
xorl
out
scas
imul
sahf
mov
mov
scas
mov
push
femms
dec
stos
nop
inc
adc
popl
push
push
rorb
lds
in
inc
fldl
and
cmp
loopne
pop
mov
lea
ljmp
pop
gs
inc
xlat
and
sub
dec
pop
xor
cmp
test
movsb
mov
aam
mov
jo
dec
nop
sub
jecxz
mov
push
push
lea
in
lret
movsl
inc
test
gs
mul
inc
dec
andb
and
imul
sub
sarb
cmp
fldt
aaa
and
int
or
cli
mov
adc
mov
mulps
test
mov
dec
rorl
ret
sub
imul
stc
mov
mov
mov
scas
add
mov
adc
sub
outsl
scas
mov
adc
or
in
jg
sbb
xchg
mov
in
mov
add
jle
clc
gs
dec
lods
enter
pop
fdivl
aaa
lods
jno
lret
mov
lcall
nop
arpl
popf
mov
rcrl
notl
cmp
xor
cs
sub
and
adc
push
jecxz
fstl
imul
xor
lods
xchg
out
mov
jns
adc
int3
nop
data16
mov
nop
inc
adc
jns
repnz
xchg
pop
aas
push
fmuls
in
pop
pop
mov
lock
dec
sub
cld
dec
daa
mov
shl
icebp
xor
dec
pop
fisubs
jg
cwtl
mov
imul
mov
mov
cmpsb
imul
repnz
xchg
cmpsl
sahf
pusha
pop
pop
mov
data16
jns
imul
es
and
and
mov
add
cltd
repnz
mov
add
fwait
adc
pop
cmp
lds
sahf
imul
sub
test
repz
repnz
adc
loopne
clc
mov
inc
or
imul
jns
imul
sub
in
repz
fiadds
sahf
ficomps
mov
movsb
lds
sub
test
push
xor
sub
fchs
push
inc
enter
mov
mov
data16
mov
jns
imul
sub
ret
es
xchg
mov
pop
fisubrs
and
loopne
inc
push
stc
repz
loopne,pn
add
repz
adc
repnz
out
popf
mov
stos
jns
imul
sub
in
bound
repz
aam
fisubrs
sahf
sbbl
jns
sub
add
sub
mov
leave
repz
push
rcr
sahf
inc
pop
pop
mov
fs
sub
andl
sub
push
adc
inc
fmulp
sahf
jg
jne
sub
sub
add
and
and
out
outsb
shl
cltd
adc
mov
loop
outsb
repz
fisubl
adc
and
repz
and
fbld
add
cmp
cs
and
cmp
sub
aaa
pop
or
add
sub
pop
dec
sub
in
jmp
faddp
sahf
jp
pmaxub
sub
push
sahf
mov
arpl
jle
inc
jl
lock
inc
mov
inc
nop
mov
push
ljmp
inc
sti
mov
js
mov
popf
call
jge
movsb
clc
pop
in
mov
test
pushf
adc
sbb
in
lahf
dec
jae
pop
inc
fidivrl
pushf
imul
pop
dec
inc
fidivrs
sbb
nop
fists
push
in
cmpsb
dec
fildl
mov
mov
nop
sbb
sub
push
cmp
pop
sbb
sbb
and
ljmp
dec
push
lcall
and
repz
xchg
lds
adc
andl
flds
nop
jb
mov
mov
mov
rcrb
nop
push
in
imul
fbld
fmuls
pop
in
dec
lds
push
cwtl
inc
movsb
xor
push
sbb
pop
leave
nop
mov
aas
dec
adc
ret
dec
adcl
int3
mov
adcl
movsb
clc
aaa
dec
cli
mov
sbb
testb
push
in
mov
movsb
push
xchg
push
nop
frstpm(287
push
in
add
cmc
ret
nop
aam
aad
and
xchg
call
cmp
push
lret
sub
outsb
adc
hlt
and
aam
call
xchg
xchg
fsubp
mov
mov
daa
xor
sub
repz
ss
cmp
xchg
data16
jae
inc
cmp
push
mov
es
adc
call
push
rcr
and
cmp
xchg
jecxz
mov
inc
adc
push
fisubs
adc
cmpl
icebp
jg
out
rcrl
lods
mov
sbb
jno
call
fdivs
fsubp
mov
adc
jne
test
xchg
shlb
mov
cld
lea
push
imul
fisubrs
mov
adc
cmp
out
inc
call
jo
fdivrp
sub
pop
outsl
ljmp
das
fiadds
cmp
out
fimuls
sub
jmp
cmp
outsb
add
push
dec
pop
adc
cs
push
jmp
call
xor
mov
insl
out
aad
mov
mov
xor
aas
xchg
in
iret
call
sub
pusha
sub
and
loope
fcoml
ljmp
dec
pop
dec
adc
imul
push
daa
jb
lret
dec
add
lods
sub
or
in
jmp
in
loope
inc
xor
and
dec
jmp
fwait
cltd
dec
ljmp
stos
enter
mov
or
loop
dec
loopne
mov
or
or
testb
xchg
repnz
or
fcmovu
test
es
adc
inc
and
ror
cmpb
mov
mov
out
push
inc
scas
jle
in
add
jecxz
or
mov
std
fnstsw
xchg
push
sbb
adc
or
xchg
je
xor
adc
rcll
or
push
xor
out
or
cs
in
int
ljmp
lcall
mov
jge
adc
or
loopne
decb
or
jmp
testb
sub
faddl
or
dec
jmpw
inc
subb
mov
sahf
pop
sbb
es
jl
sbb
cwtl
xchg
ss
fisubl
or
inc
push
ss
pop
mov
add
add
sbb
sbb
adcl
push
in
loope
adc
testl
or
aad
dec
ror
int
jg
rorb
ja
jno
or
mov
cmc
jne
mov
lods
shll
pop
jle
or
fsubrp
xchg
dec
or
pop
push
stos
test
jb
outsb
add
ret
in
or
mov
add
aaa
inc
loopne
adc
or
dec
jns
and
jne
sub
insl
mov
adc
dec
mov
lea
push
add
mov
or
insl
imul
out
das
fldl
jle
pop
push
sub
and
in
dec
mov
popf
xchg
icebp
mov
in
dec
jg
ds
pop
fwait
cmp
roll
push
jne
jecxz
adc
or
pop
mov
scas
lds
sbb
ja
push
or
fldenv
push
or
outsb
sbb
jno
aam
xchg
into
imul
nop
sub
or
test
cmp
cmp
cs
push
mov
mov
test
aas
imul
pop
mov
mov
or
push
lds
clc
ja
aad
dec
pop
jb
cmp
or
adc
mov
mov
mov
and
add
in
inc
xchg
aas
lea
mov
jge
test
xchg
dec
pop
subl
daa
decl
pop
xchg
sbb
cs
or
pushl
push
or
loop
or
push
scas
cmp
dec
mov
shrl
sti
das
or
xchg
xchg
push
jne
mov
cmp
jg
lds
cmc
cld
bound
pop
aad
sub
outsl
scas
sti
xchg
test
lret
or
mov
std
jle
push
aam
jmp
inc
jp
xor
or
scas
pop
mov
testb
push
comiss
or
es
rcrb
outsl
cmp
and
mov
nop
mov
dec
and
xchg
push
js
sti
pop
inc
or
inc
or
or
jo
push
cmp
mov
push
imulb
and
xor
cmp
mov
mov
mov
pop
mov
dec
xor
popf
pusha
inc
mov
cmc
in
incl
js
adc
loopne
mov
je
push
stos
push
dec
or
dec
push
test
cmp
cli
or
xor
jnp
into
push
add
xor
and
jo
jecxz
shll
lds
ja
les
xchg
sub
mov
leave
rcll
pop
pop
sub
adc
pop
push
push
in
sbb
lods
bound
repnz
loope
mov
dec
or
ljmp
or
fisttpll
inc
inc
xchg
imul
jo
or
movsl
adc
scas
lret
mov
push
cmp
cmp
cvtdq2ps
adc
cmp
dec
aad
or
cmpl
call
imul
test
cld
bound
xchg
add
xor
add
jecxz
or
push
aam
rorl
mov
test
xlat
inc
mov
ljmp
imull
xor
inc
shl
pop
dec
aaa
imul
stos
mov
in
mov
repnz
xchg
push
or
jo
test
test
jle
or
cmp
ret
xor
mov
loope
nop
dec
imul
outsl
ret
mov
pusha
aaa
jae
sbb
not
fucomip
add
mov
cmp
jno
lea
mov
das
jnp
sbb
add
or
nop
aad
mov
jno
leave
jns
or
fnstenv
jbe
loope
pop
pop
jns
xchg
sub
xor
pop
sbb
or
nop
push
lea
add
add
fld
cmp
movsl
jo
and
das
leave
inc
mov
lds
adc
mov
xchg
iret
xlat
inc
jg
in
pop
mov
dec
adc
push
mov
es
incl
repz
sbb
sbb
jle
push
add
and
in
pop
pop
sbb
int
and
xchg
dec
cmp
outsl
jl
insl
das
sbb
int
pusha
inc
les
ss
jne
xor
mov
push
or
sub
pop
mov
jae
jge
add
lea
fstps
sahf
xchg
inc
or
js
add
dec
shrb
and
xor
mov
pop
mov
in
add
dec
sub
or
mov
in
or
lock
xchg
xchg
dec
pop
mov
adc
or
mov
mov
das
pop
sbb
xlat
rorl
clc
mov
ffreep
bound
adc
sub
insl
jnp
jo
adc
in
xchg
push
xchg
mov
or
jge
pop
xlat
or
fwait
adc
sub
add
les
scas
cmp
xchg
push
push
into
sub
sbb
mov
ret
aaa
xchg
or
pushw
pop
out
in
out
mov
inc
ret
pop
faddl
xor
sub
adcb
mov
pop
int3
add
and
lcall
inc
or
pusha
mov
lds
bound
mov
mov
hlt
in
out
mov
xlat
jo
xchg
adc
or
into
shrb
adc
or
outsl
int
add
insl
and
mov
dec
cmp
movsl
testb
inc
pop
addr16
adc
xor
sbb
mov
pusha
sub
mov
adc
pop
or
jns
aad
stc
or
xor
cwtl
adc
xor
sbb
aad
mov
and
loopne
incl
std
sub
test
or
xchg
xchg
push
movsb
adc
push
roll
sub
lods
lods
xchg
pop
mov
pop
flds
movsb
xchg
jno
jl
or
pop
in
test
imul
inc
outsb
push
cmp
dec
or
test
xchg
or
push
out
mov
sbb
sub
jecxz
jl
in
push
mov
mov
les
lret
jb
mov
lods
int
xor
sub
cmp
or
insl
stos
cs
mov
lods
scas
push
mov
inc
or
jecxz
cmp
and
test
push
or
cmp
inc
cmpsb
push
dec
jge
adc
outsl
or
jp
mulb
insb
mov
pop
andb
icebp
jnp
bound
sbb
add
mov
aaa
push
or
iret
rclb
or
insl
cmp
adc
mov
imul
fnstcw
in
pop
xorl
ja
cltd
negl
rcrb
or
add
mov
mov
pop
in
mov
gs
xchg
or
test
movsl
dec
iret
sub
adc
jp
cmp
pop
mov
mov
pop
jns
mov
or
lea
pop
jne
daa
mov
pop
outsb
pop
sbb
push
or
pop
lea
std
ss
insb
dec
jne
adc
xor
in
scas
xor
mov
std
jns
mov
insl
sbb
cmp
lods
and
mov
jnp
int3
sbb
icebp
cmp
or
lahf
divl
or
das
adc
cmp
je
push
sbb
into
mov
sub
adc
xor
repz
jle
cmpsb
pop
xlat
pop
add
push
or
push
arpl
xor
sbb
push
or
cli
jecxz
push
or
fcmovnbe
or
mov
sti
fdivrs
sbb
repnz
sub
call
mov
add
cs
mov
xor
leave
mov
fisttpl
pop
adc
scas
or
cmp
movsb
sub
and
jno
xor
inc
aas
dec
jnp
dec
cld
push
cmp
mov
hlt
ja
in
mov
sub
imul
cltd
or
movsl
in
pop
sahf
cmp
cmp
cli
pop
andl
sub
push
xchg
jl
sahf
xchg
daa
out
cmc
pop
or
sub
jnp
lods
inc
movsl
xor
testl
mov
insl
stc
xchg
inc
lahf
mov
idivb
jecxz
and
out
push
adc
cmpsl
or
xchg
inc
inc
xor
push
xchg
rorb
or
adc
in
fistps
jg
es
push
or
lret
std
sahf
into
or
xchg
pushf
pop
je
add
and
mov
lds
mov
scas
aaa
and
sub
pusha
mov
push
nop
cld
into
sub
sub
addl
out
aam
or
jnp
inc
adc
pop
dec
jno
or
push
cmc
ud2
or
jmp
xchg
in
add
dec
nop
test
dec
inc
movsb
insl
mov
xor
mov
mov
or
in
pop
in
sbb
jae
lea
sub
xor
out
pop
dec
mov
xor
shll
shrb
lods
cmp
and
or
andb
daa
aas
adc
into
jp
jb
fiaddl
xor
xor
and
or
add
mov
or
push
insl
xor
es
lea
push
in
popf
jg
adc
or
fistl
pop
jmp
iret
aam
cli
pop
xor
ja
pushf
mov
dec
push
imul
or
mulb
jb
xor
mov
es
imul
test
pusha
or
adc
mov
or
stos
add
or
mov
ljmp
mov
mov
movsb
or
in
sbb
pop
dec
xchg
mov
dec
jle
and
xchg
loopne
aaa
jo
xor
popf
dec
rorb
es
gs
cmp
lea
jbe
cmp
jno
pop
stos
jp
add
aaa
adc
sub
or
cmpsl
sbb
jb
and
lahf
repnz
nop
inc
je
sbb
scas
into
fisubrs
ljmp
mov
loopne
cmp
imul
rorl
xchg
fucomip
inc
sbb
sub
add
push
or
xor
in
cwtl
mov
aam
out
sbb
sub
in
ret
mov
sub
je
add
pop
or
out
jmp
int3
cmp
movsb
sub
add
loope
es
fwait
pop
push
out
enter
add
pop
mov
flds
mov
mov
mov
movl
add
insb
aas
pop
sub
sbb
push
mov
inc
cmp
adc
scas
xchg
movsb
hlt
sbb
out
or
jg
out
ficomps
cmc
stos
out
les
adc
lret
add
ss
sbb
fmuls
sub
cmp
adc
mov
int
repz
and
jge
add
dec
imul
xchg
das
sub
test
jno
inc
adc
js
sub
push
mov
aad
loope
xchg
or
jge
mov
or
int3
stc
or
inc
push
push
sbb
cmp
fisttpl
into
xchg
jle
xchg
inc
mov
adc
pop
fucomip
aas
mov
xor
fldt
cmp
ds
roll
fwait
icebp
or
mov
outsl
insl
jp
or
xchg
or
mov
fiadds
jp
push
iret
leave
sbb
pop
or
adc
lret
or
or
movsb
cmp
or
test
lret
dec
inc
push
xchg
pop
mov
filds
inc
sbb
jnp
or
ret
imul
or
shlb
jb
pusha
into
outsb
push
or
or
add
adcl
push
js
or
pop
add
mov
cs
mov
pop
jg
adc
test
dec
stc
pop
dec
cmp
lock
xchg
hlt
pop
loope
and
or
or
loop
mov
mov
cmpsb
adc
clc
or
loopne
das
mov
rcrl
bound
xor
mov
add
or
pop
sbb
js
inc
jnp
mov
adc
fsubl
push
adc
sbb
std
add
popf
insl
push
lds
mov
sbb
or
xlat
out
or
adc
sub
or
mov
adc
fsubs
mov
les
and
lods
or
cmp
lods
or
jg
dec
or
arpl
rorl
loope
iret
or
call
sub
xor
ret
push
inc
cld
and
mov
mov
rorl
or
iret
push
cmp
pop
fld1
add
mov
mov
rorb
test
cwtl
dec
ja
cmp
sub
mov
or
aad
lahf
nop
or
clc
xchg
pop
mov
aas
movsb
mov
or
inc
das
add
jb
pop
lds
int
dec
sbb
push
dec
or
sub
ss
or
in
fimull
rcrb
pop
lods
add
and
sub
sbb
xor
fcmovb
aad
imul
and
aam
and
and
fs
cmp
dec
out
jne
and
jbe
push
or
lahf
pusha
ds
jnp
mov
nop
scas
inc
mov
cltd
cmpsl
or
adc
lods
xchg
repnz
lock
jae
jnp
cmpps
add
or
mov
leave
jnp
add
mov
xor
jmp
pop
xchg
cmp
insb
loop
rolb
gs
push
sub
stc
adc
cltd
sahf
dec
mov
mov
outsl
pminub
fmuls
sbb
mov
lods
inc
dec
jnp
mov
rorl
loop
jecxz
or
aaa
stc
aas
ss
addr16
iret
stos
jmp
mov
xchg
lods
sub
popf
xor
mov
sarl
jmp
or
lret
lea
or
iret
and
je
aas
repz
mov
push
xor
in
lods
sub
jne
mov
cmp
int3
shlb
xchg
and
jg
or
xor
inc
int
lods
stc
xor
push
xchg
aaa
lods
pop
adc
es
aas
imul
and
or
inc
jmp
scas
mov
mov
dec
ret
loope
or
push
lahf
add
mov
fadd
dec
mov
dec
and
push
push
fisubrs
push
sub
out
cmp
adc
pop
sub
dec
pop
cwtl
mov
and
cld
cmp
sbb
jmp
iret
cmp
add
sbb
xor
or
stc
and
inc
or
out
scas
push
mov
test
adc
pop
or
mov
sub
shll
push
adcb
or
or
push
ds
mov
js
add
mov
fisttps
rcrl
in
push
mov
bound
fcoml
dec
or
loopne
or
out
xor
test
imul
sti
or
adc
in
pop
cmpsl
adc
int3
lea
in
fs
dec
sarb
jne
ss
mov
aas
mov
jge
dec
mov
cmp
jge
or
adc
loopne
or
imul
jecxz
cmc
or
pop
mov
adc
inc
fbstp
inc
loopne
out
ja
or
ret
adc
xchg
mov
dec
mov
dec
push
pop
in
mov
inc
pusha
icebp
or
clc
xchg
mov
outsl
mov
ret
mov
sub
xor
push
popa
fs
adc
sub
xchg
jno
mov
adc
les
nop
and
or
andl
cmp
rclb
aaa
or
jbe
insl
je
mov
add
loope
fldcw
jecxz
pop
in
add
adc
test
xchg
xchg
push
movsb
or
lods
push
dec
arpl
xchg
xchg
xor
in
movsb
and
add
repnz
or
shrb
aas
lea
arpl
jbe
into
stos
pop
pop
jge
xchg
jno
popa
bound
dec
aad
mov
push
insb
pop
and
paddb
out
adc
xchg
or
push
mov
insb
fistpl
and
sbb
mov
push
sbb
inc
add
jge
dec
call
out
mov
xlat
scas
adc
pop
inc
mov
inc
add
add
push
sbb
xchg
test
sbb
int
and
inc
jo
subl
mov
push
aaa
outsl
mov
ds
lcall
arpl
clc
fmull
push
push
jae
pop
outsl
mov
push
mov
mov
mov
dec
les
adc
lea
or
out
push
and
adc
jo
and
jne
shlb
repz
das
jno
ds
sub
mov
xor
lds
pop
dec
pop
jno
or
adc
push
movsl
or
into
mov
shll
fwait
pop
cltd
orb
lcall
push
jno
and
pop
jb
test
or
nop
dec
stc
and
lods
pop
lea
push
movsl
mov
or
test
test
aam
or
inc
cltd
mov
and
in
jecxz
or
mov
inc
or
sub
popf
add
inc
mov
mov
lods
imul
pminub
xor
cs
mov
dec
and
mov
inc
or
ljmp
push
or
test
scas
call
das
add
out
jp
in
mov
scas
in
or
bound
adc
sub
inc
lods
jge
test
xor
hlt
or
test
cmc
out
lcall
push
push
push
in
sub
out
daa
cmp
add
sbb
push
add
test
movb
jnp
mov
add
mov
pop
mov
sbb
or
dec
loop
jecxz
or
xchg
sbb
or
pop
cmp
clc
sub
or
fsubr
mov
adc
rcll
mov
pop
xor
outsb
dec
es
pop
imul
inc
daa
jmp
pop
scas
push
xor
test
push
adc
push
or
xor
xchg
jp
and
jb
inc
inc
mov
pop
push
imul
pop
pop
mov
movsb
arpl
std
fnsave
lret
dec
sub
xchg
orl
sub
arpl
test
jns
sbb
ret
or
xchg
inc
xchg
dec
or
pop
cld
dec
fildll
jnp
mov
int3
out
in
add
cmpsb
or
xor
pop
mov
fnstsw
sbb
mov
inc
inc
pusha
inc
push
and
ljmp
sub
xchg
dec
adc
gs
mov
cmp
shr
and
xor
xchg
xchg
sahf
push
sbb
stos
ret
nop
inc
or
inc
dec
adc
pop
or
and
pop
dec
mov
mov
clc
or
add
and
and
mov
jnp
testb
jle
orl
or
and
inc
dec
or
and
jge
or
dec
add
jno
push
test
or
test
fmuls
pop
pop
mov
or
mov
ret
lret
rcll
dec
xchg
in
stc
mov
and
outsl
add
push
gs
sub
inc
jnp
add
lea
push
push
mov
arpl
or
or
ljmp
lods
vandnps
out
pop
aas
addr16
sub
lea
push
rcll
or
jle
shr
popa
icebp
cli
js
sbb
mov
sbbl
jb
scas
and
pusha
pop
xlat
or
jo
xorb
call
adc
xlat
or
push
cld
mov
pop
inc
fstl
iret
fimull
mov
rclb
add
xchg
fstpt
fs
js
xor
jge
and
dec
sbb
jl
mov
iret
aas
mov
repnz
ds
or
addr16
push
hlt
in
dec
xchg
lret
jae
lcall
sahf
repz
cld
xlat
or
pushf
mov
sbb
and
cs
mov
jo
push
aam
loop
push
inc
pusha
sti
mov
fcomps
sbb
loop
les
mov
inc
xor
mov
push
fistl
ficoms
mov
jp
or
movsl
xchg
js
jb
lock
jmp
sbb
aaa
decb
pop
into
jmp
insb
adc
loopne
mov
dec
test
xor
rol
sub
ds
push
aad
cmc
mov
mov
cmpsl
sbb
sbb
cmc
jecxz
lods
push
push
cmpl
cmp
in
pop
or
lods
jo
push
or
pop
pop
ret
mov
fsubrs
clc
nop
lock
jbe
rolb
ret
sbb
xchg
mov
xchg
in
or
or
push
mov
inc
sub
ret
push
aaa
add
xlat
fistpll
and
push
xchg
adc
int
pusha
daa
ss
nop
mov
and
cmp
or
sub
and
jp
xor
jae
shr
cs
sbb
cli
scas
xchg
cmp
leave
out
mov
adc
ss
adc
xchg
pop
dec
jne
xchg
sub
jg
mov
mov
and
mov
sbb
cmp
sub
and
cli
stos
push
sub
sub
mov
xchg
mov
sarl
ljmp
mov
pop
sbb
inc
lds
cmpsl
inc
and
out
inc
divb
adcl
inc
aas
mov
mov
xchg
aaa
popf
mov
loop
xchg
mov
or
dec
mov
mov
sbb
lds
popf
or
fnstcw
push
or
notl
out
andl
pop
sbb
xchg
adc
cs
orb
aaa
inc
adc
loopne
xchg
dec
inc
sbb
push
dec
scas
cmc
or
cmp
xor
or
jae
mov
sub
or
mov
bound
jp
adc
inc
jb
sbb
repnz
pop
addr16
dec
fdivp
loope
push
out
cmpsw
or
repnz
xchg
or
in
dec
movsl
cs
fisttpl
jge
dec
das
cli
sbb
inc
loopne
pop
jge
or
dec
lods
shrl
cltd
icebp
dec
or
xchg
rorb
imul
and
rol
cmp
sbb
hlt
dec
mov
lret
or
jmp
jge
or
pop
mov
loop
cs
fxch
jno
pushf
jecxz
daa
pop
sbbl
mov
jl
and
ret
fcmovnu
dec
insb
xchg
or
xor
aaa
pusha
addr16
shll
or
mov
fiadds
lcall
imul
in
shr
addr16
or
pop
dec
lds
repnz
sysenter
push
insb
dec
iret
das
xchg
sbb
mov
sbbl
jmp
popa
xor
add
jo
cmp
push
push
repnz
sub
dec
div
aam
pusha
fisttpll
movsb
test
sbbb
inc
mov
mov
jns
or
jge
add
int
sub
mov
or
mov
mov
xchg
pop
xchg
adc
pop
mov
adc
or
xor
arpl
adc
or
jmp
or
inc
popa
ud1
xchg
enter
push
cli
sub
sub
mov
daa
bound
imul
ret
and
mov
les
pop
rclb
aam
test
mov
jecxz
pop
adc
or
or
jge
dec
mov
fnstenv
push
ljmp
adc
sub
fcmovbe
int
add
xchg
lcall
cli
aad
adc
or
cmpsl
mov
lods
shll
sub
or
out
jns
sbb
cmp
inc
repnz
mov
cmp
xor
shlb
pop
ss
sub
outsb
jae
xor
insl
cmp
test
js
clc
adc
adc
and
or
mov
sub
lret
xor
sub
cld
push
in
and
jecxz
inc
lods
js
or
mov
in
dec
dec
push
adc
or
mov
pushf
jp
add
add
scas
pop
or
cs
xchg
or
popf
sub
mov
adc
mov
mov
xchg
jne
or
fsubp
mov
or
negb
lret
mov
xchg
push
or
xor
cmpsb
dec
xor
adc
loop
or
cwtl
cmp
jg
pop
fisttpll
or
insb
and
lahf
xor
sub
sub
test
arpl
dec
sbb
jo
pop
xchg
push
mov
aad
ja
rorb
movsl
inc
subb
mov
lahf
lods
enter
mov
jg
xchg
or
lcall
dec
shll
lds
or
fwait
ja
mov
jle
mov
in
xchg
add
outsb
inc
dec
pop
adc
test
or
mov
adc
rcr
push
cmpsl
or
cmp
mov
sub
push
dec
ss
jno
pop
out
lea
divb
ficoml
ds
pop
add
gs
or
aam
aas
mov
fdivrs
xchg
andl
mov
lds
lods
pop
mov
daa
cmovl
sbb
pop
cmc
movsl
xchg
add
cmpl
sub
aam
repnz
pop
sar
mov
das
mov
testb
inc
int
lods
fidivl
xchg
insl
xor
or
data16
sub
movsl
adc
or
cmp
nop
mov
dec
adc
decb
mov
lds
pop
mov
mov
push
sbb
push
adc
mov
jg
dec
arpl
push
jne
xchg
test
jle
mov
repnz
shlb
inc
out
add
push
je
gs
push
push
xchg
lcall
popa
mov
or
xlat
pusha
sti
mov
cmpsl
cmp
adc
int3
cmp
out
mov
sbb
push
aam
in
adc
jmp
dec
test
cwtl
xor
ror
jno
pop
adc
es
or
adc
into
add
dec
jae
jne
insl
adc
push
fadd
sahf
inc
mov
xchg
into
pusha
imul
sub
mov
call
jae
adcl
dec
sub
cltd
jne
sbb
mov
lcall
push
cs
lods
or
and
icebp
jge
nop
loope
ficoms
xor
inc
rorl
or
out
lret
or
arpl
cmp
mov
mov
pop
push
leave
ret
in
or
xor
bound
in
fwait
xlat
or
and
mov
mov
outsl
push
and
cmp
lods
fldenv
mov
dec
and
out
mov
xor
leave
inc
lock
aad
adc
sbb
arpl
loope
sbb
incl
clc
mull
orl
xchg
or
mov
push
cmp
sbb
xor
and
xchg
aas
rorb
dec
push
mov
mov
out
scas
bound
mov
pop
xor
in
xchg
lods
pop
add
or
and
inc
mov
pop
test
cli
dec
and
push
fisttps
add
cmp
incl
or
xor
xchg
in
adc
test
add
dec
pop
jb
dec
sbb
mov
andl
fsubl
inc
push
lods
jbe
mov
pop
jo
or
pop
cmp
movsl
sbb
mov
in
mov
in
xorl
int3
or
adc
aam
add
jge
mov
or
or
pop
jno
add
aaa
daa
cs
adcl
push
or
and
mov
add
repz
or
mov
mov
push
pop
adc
insb
lcall
ret
cmc
pop
dec
or
mov
mov
lret
into
push
or
cs
outsb
or
iret
jae
adc
mov
mov
or
adc
inc
scas
leave
jo
mov
xchg
add
sbb
or
or
xor
in
adc
adc
add
xchg
mov
popf
or
jmp
out
inc
sub
or
ljmp
stos
xchg
gs
imul
ja
dec
sbb
das
mov
adc
cmp
jmp
rclb
cld
or
movsb
push
insb
int
or
test
sub
mov
stc
shlb
sub
movsb
push
add
or
ljmp
jl
rorb
fs
subl
lods
dec
repz
cmp
sub
or
add
addr16
sub
xor
loope
or
popa
push
scas
pop
inc
lods
dec
mov
pop
or
jg
cltd
scas
mov
sbb
shrl
or
push
movzwl
add
sub
pop
test
fwait
or
mov
jle
sti
mov
sbb
sub
stos
imul
gs
adc
jnp
or
rorb
xor
in
cltd
mov
testb
call
in
mov
sub
dec
fdivp
or
mov
in
ds
xor
cmp
or
pop
outsb
insb
mov
pop
inc
shrb
push
clc
scas
or
insb
jge
lea
incb
test
mov
movsl
je
xchg
sbb
ret
sbb
cmp
leave
or
shlb
outsb
or
mov
cmc
xchg
dec
mov
out
or
rorl
xchg
stos
ret
add
mov
in
es
pop
or
hlt
push
gs
or
xchg
mov
mov
test
add
or
cli
sbb
outsl
sbb
dec
int
or
xchg
xchg
dec
aam
imul
lods
clc
and
pop
push
inc
sbb
fwait
xchg
dec
jo
lahf
or
push
mov
sbb
fisubl
mov
push
lds
sub
jns
add
cmpsl
lods
inc
jmp
call
rcrb
fwait
cmp
adc
or
shrb
jecxz
or
sbb
shr
or
sub
cld
rorl
or
and
pop
xchg
inc
xor
sub
jb
cmp
dec
dec
xchg
and
or
push
cmpsl
stos
mov
mov
sahf
ret
dec
sbb
push
lahf
scas
enter
push
cwtl
jmp
push
jo
lods
sbb
ss
push
or
or
pop
push
pop
jle
gs
mov
out
or
sbb
fcmovne
xor
inc
push
mov
sbb
mov
or
jne
sbb
add
sbb
inc
test
push
imul
dec
or
push
mov
dec
dec
imul
sbb
add
sbb
or
and
fcmovu
call
js
sub
or
xor
push
adc
clc
in
repnz
fucom
lahf
out
in
jmp
aaa
fmull
and
xor
dec
pop
jecxz
or
rcl
mov
jb
mov
push
fcmovne
leave
add
xor
lods
out
or
pop
dec
xor
in
adc
sahf
or
loop
xchg
pop
or
add
inc
fimull
mov
inc
int3
popf
inc
and
mov
mov
lcall
mov
or
sbb
adc
iret
gs
outsl
xchg
inc
sub
cmp
jp
add
call
lods
lods
mov
in
test
mov
sub
jmp
lret
push
ja
xor
mov
inc
aas
add
jle
mov
jle
jae
push
mov
lods
std
cmpsl
pop
loope
scas
pop
mov
lahf
mov
in
jbe
cmp
lods
imul
in
sbb
push
inc
das
or
push
xchg
fs
js
push
outsl
hlt
push
pop
push
or
cmp
mov
xchg
jle
adc
pop
or
dec
imul
shll
mov
insb
dec
push
pop
or
or
xchg
fadds
add
pusha
jmp
push
push
cmp
popa
push
icebp
or
inc
data16
add
mov
lock
xchg
sub
push
mov
xor
mov
dec
push
or
and
cmp
ficomps
mov
mov
ret
push
aam
sbb
repz
add
jb
mov
test
repz
or
and
movsl
dec
repnz
or
pop
push
push
lods
cmpsl
int3
or
mov
cmpb
sub
in
add
jae
inc
nop
pop
or
lock
sub
mov
fmull
push
push
or
mov
mov
in
aas
inc
stc
enter
sbb
or
jp
adc
nop
out
adc
or
stos
xchg
repz
sbb
mov
test
js
aad
roll
leave
test
int3
cltd
inc
movsb
lods
nop
pop
adc
lods
mov
outsl
aaa
pop
fmulp
aam
mov
mov
out
and
std
pop
ljmp
inc
divb
sbb
pop
xor
and
leave
fsubrs
cmpsl
jno
cld
mov
add
rcll
sub
jb
aas
jl
test
shlb
sub
sbb
or
cmpsl
dec
les
lcall
add
add
sub
popf
shlb
leave
or
mov
cmpsb
or
mov
out
xlat
add
mov
push
inc
sub
int
mov
lcall
loopne
mov
mov
fbld
iret
orb
or
cmp
xchg
in
adc
aad
lods
push
scas
ds
push
adc
sbb
pushf
sbb
xchg
dec
out
int3
or
or
or
stc
add
jle
and
or
test
popf
lea
lock
pop
and
aam
into
or
mov
or
outsb
jecxz
cmp
bound
insb
sbb
or
fstl
in
xchg
es
ret
in
jmp
cmp
xor
pop
lret
mov
push
std
or
lods
aam
dec
dec
rclb
in
sarl
sub
call
cmp
lret
and
mov
sub
jns
sbb
js
mov
scas
xlat
xchg
dec
mov
jne
aas
push
push
mov
sbb
cmp
xor
into
mov
mov
rcl
orb
cmp
add
hlt
stos
xchg
or
add
or
cmp
into
in
inc
sbb
push
mov
or
mov
fmuls
mov
stos
mov
xchg
ficomps
lods
daa
xor
jo
lds
mov
sub
xchg
push
arpl
outsb
dec
fwait
sti
aam
xchg
xchg
xchg
nop
mov
movsl
cmp
orb
rorl
mov
fwait
js
inc
test
sti
fs
loop
jmp
pop
mov
ret
pop
pop
lock
mov
push
scas
test
jge
mov
or
jnp
ds
or
andb
or
call
lcall
sahf
or
gs
mov
outsb
cmp
add
jmp
xchg
or
stos
lret
ret
leave
or
outsl
icebp
or
das
notl
addb
xor
jno
fdivp
or
fcmovnbe
pop
add
sbb
dec
xor
roll
fists
jne
sub
test
push
and
iret
popf
sti
cmp
dec
cmp
fmuls
daa
or
nop
stos
mov
or
jnp
fdivl
scas
imul
addb
subb
xchg
test
push
rorb
jg
inc
mov
inc
mov
xor
add
cs
push
dec
jle
or
inc
pop
mov
dec
push
cli
and
dec
movsb
in
imul
pop
outsl
xchg
gs
or
mov
or
jno
into
sub
jbe
pop
pop
movsl
and
inc
or
bnd
cmp
dec
inc
lcall
sbb
sub
aad
jge
lods
fwait
adc
and
cwtl
js
bound
inc
or
into
or
je
scas
pop
sub
cmc
jne
adc
mov
adc
add
mov
adc
adc
cli
lcall
or
jae
push
movsl
bound
notb
xor
mov
adc
or
push
loope
or
aas
scas
rcl
popf
push
dec
cmp
pusha
int3
rclb
add
insl
sbb
pop
lcall
roll
jecxz
fucomi
rcll
stos
rclb
pop
in
mov
ss
stc
add
add
sbb
adc
mov
nop
jl
mov
sub
test
inc
adc
push
push
or
aaa
mov
mov
xor
or
les
lcall
sti
add
or
pop
cli
mov
adc
daa
adc
push
push
sbb
push
xor
cmp
or
aam
call
inc
mov
mov
cmpsl
sbb
adc
or
insb
cmp
jge
adc
out
pop
push
jno
addr16
pop
ds
cmp
iret
xchg
dec
mov
fisubl
or
lcall
enter
lret
in
dec
jb
sub
cmpsl
lret
and
mov
ret
and
aaa
push
xor
jno
pop
ss
mov
cmpsb
sbb
lret
leave
add
loop
cmp
scas
pushf
mov
xor
bound
or
outsb
shlb
aaa
mov
xor
jb
xlat
mov
outsl
adc
or
mov
testl
pop
inc
pop
lret
outsb
jg
sbb
cmp
inc
dec
scas
push
in
mov
add
addr16
cmpsl
lahf
jle
mov
push
in
xchg
inc
sub
or
mov
outsb
inc
cli
sti
adcb
add
mov
xor
nop
prefetch
mov
inc
das
xlat
adc
jmp
idivl
cmp
push
pop
sbb
fisttpll
pop
cmp
movsl
sub
leave
push
icebp
cwtl
adc
loop
xchg
sahf
dec
js
ror
rcll
fisttpl
movsb
aas
or
inc
xchg
popa
push
or
dec
add
add
outsl
or
dec
dec
hlt
mov
dec
xor
adc
imul
filds
xchg
jb
outsl
mov
xlat
stc
test
fstps
mov
xchg
popf
cltd
inc
cld
gs
or
mulb
cmpsl
fimuls
push
and
dec
es
repz
inc
push
pop
or
jecxz
bound
or
pushf
mov
pop
mov
cli
or
add
shrb
mov
dec
cli
pop
subl
sahf
or
adc
cmp
push
adc
je
mov
inc
jo
jge
push
out
sbb
mov
xorl
sbb
inc
mulb
jae
adc
gs
lods
adc
jp
and
jge
mov
pop
enter
mov
imul
pushf
mov
mov
cli
cmp
add
gs
repz
sub
mov
ja
cli
rcrb
or
cmp
in
and
sbb
das
or
call
lahf
mov
jbe
jge
or
jle
and
dec
andb
into
loopne
andb
add
scas
inc
or
sub
andl
dec
repnz
fiadds
or
add
jmp
sarb
sbb
negl
jb
test
or
in
mov
sbb
mov
xor
mov
shr
pop
clc
cld
mov
cwtl
sahf
repnz
xor
es
cmp
fcoms
push
or
in
dec
retw
dec
test
ljmp
fisubs
sbb
insl
inc
pop
data16
sub
js
mov
hlt
pop
or
fcomps
insb
ljmp
call
adc
pop
sbb
push
push
mov
cmpsl
nop
sub
and
mov
push
aad
and
pop
outsb
or
insb
pop
jle
or
jg
xchg
out
dec
add
or
sbb
cmp
or
imul
dec
gs
mov
or
negl
stc
xchg
filds
popf
inc
or
dec
mov
idiv
jbe
jecxz
mov
inc
repnz
sarl
popf
sub
mov
or
bound
or
shll
call
jo
arpl
push
aaa
or
iret
dec
fsts
das
rsqrtps
imul
stos
lods
mov
es
dec
mov
test
pop
adc
xchg
or
pop
inc
iret
out
or
xchg
outsl
mov
dec
push
in
pop
aad
mov
sbb
ret
mov
sbb
dec
js
imul
das
dec
movsb
xchg
xorl
jg
jmp
push
or
ss
or
sbb
in
mov
rcrb
adc
and
enter
cld
icebp
jns
in
push
lea
or
dec
pop
xchg
insl
or
mov
test
movsb
push
xchg
sbb
mov
sub
mov
xchg
into
xor
mov
and
pop
lods
fidivs
cmc
cmp
pusha
push
mov
sub
int
scas
decl
call
sbb
scas
cli
or
jp
scas
pop
popf
fmuls
sbb
or
test
int3
dec
xchg
xor
adc
or
mov
sbbb
adc
stos
and
pop
mov
out
mov
sub
jmp
xlat
mull
adc
pop
mov
push
cmp
adc
cwtl
push
es
xor
sbb
popl
sub
fnstcw
xor
in
inc
imul
imul
mov
inc
loop
jmp
sbb
in
ficoms
and
mov
or
sbb
icebp
sbbl
and
into
adc
in
dec
out
push
movsl
sbb
stos
cmp
pop
test
sub
or
iret
pop
gs
sahf
add
fwait
or
and
pop
sub
sub
mov
xchg
or
fisttps
cwtl
loope
push
fidivrl
mov
mov
hlt
mov
adc
push
or
or
mov
aad
cli
xchg
fimuls
xchg
mov
jno
add
or
fimull
dec
ja
loopne
pop
dec
xchg
icebp
or
and
jmp
or
xchg
enter
sub
mov
ret
add
stos
inc
sbb
loope
or
cmpsl
addr16
add
sub
dec
dec
adc
int3
or
fstpl
or
popf
int
inc
loop
aam
pop
or
out
or
pop
xchg
into
rorb
dec
lds
or
int3
hlt
sbb
jmp
and
or
loop
xlat
jecxz
shrl
and
xor
outsb
dec
sbb
jnp
jle
dec
or
rcr
push
or
jae
jo
or
xchg
inc
rcrb
mov
add
mov
pop
inc
push
in
dec
or
or
jle
inc
mov
mov
or
das
cwtl
mov
or
adc
add
dec
jg
lods
orb
sub
sub
in
int3
fs
into
js
rcll
pop
mov
adc
and
dec
jecxz
ficompl
out
lret
mov
cmp
dec
nop
lods
or
repz
or
aam
lret
jg
outsb
fidivs
dec
inc
mov
sbb
cmp
push
andb
pop
shll
movl
cmpsb
lds
pop
mov
loop
repz
add
insl
loopne
push
cmpsb
add
iret
mov
mov
dec
cmp
sbb
or
adc
lahf
testb
mov
in
xor
sbb
mov
or
mov
mov
lods
es
jb
push
push
or
addr16
test
subl
mov
pop
mov
repz
dec
push
mov
or
fimuls
in
xor
stos
rorl
pop
pop
add
add
jmp
out
cld
dec
and
or
adcb
or
ficoml
xchg
add
push
or
cmpsl
sbbl
out
adc
shlb
mov
cs
scas
loope
fnsave
push
ja
sahf
jp
loop
lock
or
cmpsb
fs
push
or
pop
and
dec
push
or
or
daa
fbld
mov
jne
lcall
jmp
fs
jae
fistpll
sbb
lds
in
xchg
or
sbbb
mov
or
repz
clc
cmp
loope
out
or
mov
negl
or
xchg
or
xchg
jns
inc
or
xorl
dec
fiadds
fbld
cmpsb
aaa
xchg
out
sbb
insl
orb
cli
sar
aam
test
cmp
sub
shrb
xchg
or
insb
in
pop
or
xlat
pop
nop
stc
or
xchg
cli
outsl
in
or
mov
repnz
xchg
into
mov
sbb
out
mov
adc
mov
or
pop
pop
dec
mov
fwait
or
movsb
lea
sbb
cli
das
inc
xor
or
enter
or
in
add
jge
cli
or
sub
mov
mov
andb
loope
stos
dec
cmp
arpl
in
insl
imul
in
sub
ss
outsl
movsl
in
mov
mov
pop
lcall
not
jmpw
inc
sub
sbb
xor
sbb
or
pushf
mov
jb
movsb
test
or
sbb
cmp
and
sarl
add
sarb
push
or
test
outsl
iret
lods
nop
imul
je
xor
movb
adc
inc
or
repnz
cmp
sahf
test
xchg
xchg
mov
pop
imul
or
and
aam
cs
pop
mov
testb
dec
fsubr
or
pop
mov
into
stos
and
push
inc
idivb
cli
jg
inc
adc
insl
movsb
jo
cmpsl
mov
cmp
mov
ds
fimull
pusha
lods
fistpl
mov
jbe
or
addr16
iret
in
and
push
jo
movl
loop
or
gs
lods
dec
lock
xchg
imull
inc
mov
or
js
add
lea
sbb
shrb
movsb
sbb
add
adc
jb
sbb
mov
xchg
and
pop
fucom
add
or
filds
je
pop
inc
daa
lods
adc
or
outsb
mov
sbb
and
cmp
push
aaa
sbb
push
dec
cwtl
xor
or
xchg
xchg
cli
out
idivb
push
xchg
nop
or
lret
sahf
or
pop
push
dec
in
sub
fs
xchg
clc
mov
mov
cwtl
sub
fs
mov
cs
mov
mov
lods
inc
insl
add
cmpsl
icebp
add
call
sbb
adc
or
xchg
bound
pop
in
adc
pop
jb
push
sti
xchg
leave
fmull
cmp
mov
arpl
ds
or
cmp
push
lods
movsl
add
xchg
lods
test
loopne
daa
sbb
repz
xor
jbe
roll
cmpsb
movsb
test
lods
push
pop
test
and
fidivrs
xor
pop
xor
repz
push
xchg
mov
or
sbb
data16
nop/reserved
sub
cmp
pop
sub
jnp
addl
testl
or
ja
push
or
xchg
sbb
or
lret
ret
or
mov
bound
cmp
mov
lock
fsubs
mov
imul
call
push
adc
pop
lds
xchg
inc
push
mov
lods
push
add
ds
jecxz
dec
pop
cmp
decl
push
mov
sti
out
jg
stc
inc
push
adc
lea
or
jno
or
imull
mov
stc
movsb
mov
add
xor
and
push
xchg
in
push
push
xorl
lock
mov
or
adc
xchg
push
inc
test
fdivr
mov
cmp
dec
inc
push
xor
xor
pushf
or
mov
lds
sbb
or
aad
pop
jmp
and
out
mov
pop
fsubr
ret
fs
mov
sbb
xchg
clc
or
pop
test
shll
push
push
in
jno
pop
jb
in
adc
or
pop
adc
in
pusha
lahf
repz
dec
or
mov
movsb
or
test
mov
push
push
jecxz
in
adc
dec
imul
and
add
insl
lods
cld
mov
adc
popf
pop
gs
gs
xchg
iret
ds
lret
or
dec
push
outsl
test
and
cmpsb
imul
and
mov
clc
out
or
xor
add
push
inc
mov
sbb
pop
add
or
mov
jo
in
out
or
addb
mov
xchg
cmp
mov
repz
in
pop
into
icebp
das
and
fwait
mov
decb
xchg
fistps
cld
or
or
ss
adc
sti
xchg
inc
outsl
inc
sbb
lahf
lea
rcrl
nop
mov
insl
jl
or
jge
sbb
or
test
dec
sbb
jns
andl
aad
stos
push
sub
jo
add
dec
popa
pop
jae
enter
ret
or
push
dec
in
push
adc
les
xlat
adc
and
add
mov
dec
cmpsl
lods
test
add
or
jle
xor
pusha
mov
fcmovbe
push
scas
pop
std
sub
imul
shrl
add
sbbb
rcrb
mov
ret
dec
sub
fwait
clc
push
call
dec
out
movsl
sbb
in
rol
adc
xchg
sub
jge
adc
mov
loop
add
imul
lret
push
leave
push
clc
data16
loope
xchg
jo
stos
idiv
sub
fcom
ss
mov
cmpsl
shrl
jne
ficomps
shr
mov
repnz
adc
sub
out
sub
add
dec
stos
test
adc
cs
movsb
push
mov
movsl
mov
int
jge
or
push
add
stos
sub
out
in
push
pop
or
fisubrl
fidivrs
sahf
pusha
sbb
or
lret
pop
xchg
and
stc
jae
cmp
xor
ljmp
clc
fcoml
mov
outsl
push
ret
ja
ss
mov
sub
sbbb
inc
mov
rolb
loope
and
call
or
jg
call
inc
fisubs
mov
or
pop
mov
push
inc
faddl
iret
sub
out
scas
gs
sub
pop
cwtl
pop
jns
or
add
and
pop
ds
or
shlb
adc
fsubp
cmpsb
mov
add
or
push
iret
mov
cmp
or
mov
mov
repnz
insb
rcrl
or
mov
push
loope
negl
or
mov
xchg
push
fisttps
lret
xchg
rorb
or
sbb
xchg
loop
push
aaa
testl
cwtl
jp
mov
pop
test
sbb
ljmp
inc
cmpsb
or
aas
pop
cli
nop
imul
daa
test
and
cwtl
lea
cmp
aaa
frstor
sub
cwtl
in
mov
popl
int3
js
rorl
mov
xchg
jae
pop
into
je
or
mov
inc
or
sub
stos
xor
or
or
sbb
or
clc
imul
cmpsl
repnz
jge
mov
dec
adc
pop
sbb
sub
test
je
sub
stc
pop
pop
fdivs
mov
or
sbb
lea
insb
rclb
and
inc
pop
mov
das
test
push
into
pop
mov
nop
push
lods
fiadds
push
ret
stos
mov
lock
lsl
sbb
lret
pop
inc
mov
add
jno
movsl
in
xor
jge
xor
or
sub
pop
inc
ss
push
xchg
mov
call
and
jmp
ja
inc
in
adc
xor
cmpsl
nop
in
int
add
push
xorl
dec
bound
loop
mov
or
roll
je
fadd
jle
adc
in
bound
push
xor
jne
out
mov
ja
test
or
or
mov
or
pop
add
enter
lods
hlt
or
sub
std
xor
daa
or
ret
andb
nop
pop
sbb
or
jle
ss
inc
lds
mov
das
lods
jns
push
int
pop
mov
push
int
lods
loope
stc
or
xor
aaa
stos
or
jp
ret
bound
sub
das
jp
push
inc
jo
pop
pop
rcrl
jmp
mov
or
jns
and
push
rcrb
scas
dec
dec
sub
out
xor
add
pop
adc
aam
sahf
stc
sbb
fadd
xchg
jmp
ret
or
mov
pop
inc
sbbb
fistpll
iret
cmp
sub
dec
jo
jl
or
outsl
lods
pop
push
or
sti
inc
fisttpl
mov
sbb
or
in
shll
jle
out
mov
orl
xor
or
ljmp
xor
or
add
movl
mov
sbb
or
push
es
xor
xchg
sub
mov
sub
es
movsl
mov
or
pop
dec
mov
fcomip
in
mov
mov
mov
sub
mov
xchg
mov
dec
add
and
or
push
mov
aaa
sbb
jb
mov
imul
mov
int
or
sbb
add
cmp
jle
in
and
out
inc
mov
cs
mov
or
jmp
dec
pop
sub
imul
test
fs
add
das
loopne
scas
add
jne
std
push
xor
pop
mov
and
jb
inc
push
mov
mov
ja
push
das
add
xchg
dec
jo
dec
scas
fistpl
aam
jle
lods
push
jae
pop
xor
adc
mov
outsb
mov
es
adc
xchg
test
add
out
fadd
pop
orb
int
mov
or
out
ss
or
jno
sahf
xchg
dec
fs
fistpl
xor
dec
fcomps
clc
jbe
lret
push
cmp
or
push
loope
add
shrl
lahf
sbb
or
in
push
pop
or
inc
movsl
pusha
nop
or
adc
sbbb
xlat
sbb
leave
shrl
sbb
and
in
xlat
or
or
sub
pop
or
xchg
fiadds
pop
sbb
mov
cmp
outsl
mov
or
je
jl
sbb
add
pop
inc
or
repz
or
notb
or
mov
jmp
cmp
mov
add
and
mov
mov
insl
and
iret
cs
mov
lods
scas
in
popf
cmc
xchg
aaa
fisttpll
jecxz
and
or
and
or
rcrb
dec
sub
push
aas
cmp
int3
shrl
rolb
add
or
nop
sbb
outsb
testb
arpl
or
movl
sbb
mov
aam
out
adcb
ret
adc
imul
jno
add
dec
sahf
sbb
or
lcall
arpl
fisttps
xor
shl
or
push
and
sbb
ja
or
dec
add
dec
pop
jae
xchg
and
push
or
jo
cltd
out
cmp
mov
inc
ja
fcompl
inc
movsl
in
add
adc
sbb
into
insb
jle
mov
push
cmp
jo
sub
aad
push
enter
imul
or
or
xor
out
pop
movsl
cmpsb
mov
inc
jmp
jo
lock
inc
jno
sub
out
lret
pop
jnp
jecxz
push
dec
mov
sub
pop
mov
cs
fidivl
into
cmp
in
stos
test
jns
pop
fisttpll
movsl
nop
aaa
xchg
imul
popa
push
jnp
adc
xor
jo
or
in
push
lahf
or
cmpl
int
ret
sahf
jge
or
mov
loop
cmp
and
add
mov
fs
xchg
inc
jnp
clc
jne
icebp
cs
std
or
pop
cli
inc
mov
sbb
or
sub
jp
cmpsl
add
mov
sbb
or
in
mov
es
popf
sbb
je
in
sbb
mov
or
lds
add
repz
mov
aas
inc
xor
aam
loopne
inc
dec
ret
inc
shlb
icebp
sbb
adc
insl
or
lret
nop
leave
or
in
ja
in
mov
mov
mov
rorl
sbb
filds
sbb
in
mov
repz
jg
xor
jae
mov
or
inc
mov
mov
ret
nop
js
or
repz
rolb
pop
sub
in
xchg
lea
or
push
push
dec
or
cwtl
xchg
bound
add
sub
dec
fcompl
shll
popa
or
push
out
stos
pop
lds
or
mov
ret
xor
or
push
addb
icebp
pop
test
jmp
push
or
shll
push
in
jle
std
in
ficoml
das
cmpsl
or
xchg
jb
mov
mov
or
into
jne
sti
cltd
sbb
loope
loop
enter
into
repnz
mov
push
fucomi
stc
jb
jge
jge
dec
add
popa
sbb
ret
and
adc
shrb
outsb
addr16
or
mov
mov
inc
or
mov
or
sbb
in
cs
je
mov
or
repz
test
sbb
jecxz
or
dec
clc
or
les
push
sbb
mov
rorb
xor
add
push
mov
icebp
cmp
aaa
int3
pop
mov
inc
adc
daa
push
outsl
adc
or
dec
and
cmp
adc
popl
gs
sbb
or
aas
pop
in
roll
hlt
fs
xchg
in
mov
movsb
inc
mov
or
int3
add
iret
or
xor
fisttps
lahf
lret
sub
fwait
addb
sub
adc
dec
pop
sub
enter
cmp
and
cs
addl
rclb
or
outsl
daa
rcl
imul
fcoms
leave
jmp
adc
adc
arpl
or
mov
xor
subl
xchg
cmp
or
mov
test
xor
or
add
jge
and
xor
xor
or
jecxz
sub
sarl
pop
sbb
cmp
and
cmp
rep
out
test
push
insl
cltd
test
pop
sbb
outsb
xchg
aam
or
ss
cmp
cmp
push
xchg
int3
outsl
test
pop
mov
pusha
xor
jle
mov
test
das
push
cmp
es
pop
into
push
or
pop
cmp
lret
loope
adc
cwtl
mov
dec
cmc
or
lret
rcl
sub
dec
xchg
and
or
pop
mov
or
push
insl
xchg
addr16
add
and
movsl
lods
std
mov
repnz
cmpsl
leave
hlt
fnsave
mov
or
aad
rcrl
out
pop
rorb
cwtl
mov
pop
push
idivl
jns
outsb
daa
movsb
lret
lods
dec
push
pop
int3
or
pop
cmpsb
orb
push
fidivrs
or
and
lods
clc
or
js
mov
shlb
xor
sbb
inc
mov
mov
stos
popf
sti
outsl
cltd
or
lock
inc
mov
cmp
aaa
and
mov
pop
test
movsl
and
add
xchg
or
arpl
or
out
daa
dec
or
jo
jnp
lods
mov
adc
mov
or
xchg
inc
daa
cmpsb
or
fcmovne
shr
mov
pop
test
clc
mov
mov
inc
das
xchg
pop
lods
jae
mov
fbld
cmc
cmp
or
loope
xchg
outsl
or
jmp
mulb
inc
jb
mov
mov
mov
pop
cmp
inc
pusha
or
push
or
test
jns
mov
push
es
or
mov
scas
fisubrl
mov
loopne
nop
pop
inc
adc
aam
addr16
dec
mov
scas
sub
cmpl
inc
adc
jg
cli
mov
je
jb
xchg
mov
and
jbe
sbb
jmp
fsts
mov
jno
fisttps
lcall
imul
adc
or
aas
xorl
xchg
mov
lret
or
int3
ja
and
or
rcrb
push
sbb
nop
aad
mov
mov
int
out
dec
inc
xchg
or
mov
or
sarl
ljmp
inc
pop
iret
mov
cmc
fcompl
cmp
std
fucom
add
push
insb
inc
xchg
rcrb
aam
or
orl
push
add
rorl
jle
adc
mov
xor
jnp
lahf
fmull
sub
mov
dec
out
dec
push
ja
xor
aad
lods
or
mov
inc
xchg
in
sbb
jns
sub
inc
pop
and
sub
mov
sub
icebp
add
sbb
or
xchg
mov
xchg
popf
fistps
xor
jmp
jbe
dec
or
ret
adc
outsb
or
jle
sbb
cmp
sub
or
fwait
mov
xchg
mov
rclb
add
or
testl
insl
lods
push
aas
xchg
rcll
mov
and
sub
stos
inc
aam
sub
xchg
imul
adc
sub
pop
ss
pushw
sbb
or
aam
clc
outsl
mov
dec
sbb
enter
jbe
adc
or
pop
add
mov
sub
push
xchg
pop
pop
addr16
mov
sub
nop
scas
inc
cmp
fsubrl
jae
popa
jb
in
xchg
or
or
or
push
imul
mov
in
inc
jmp
dec
lret
push
cmp
ljmp
int3
sbb
aad
sbb
pop
repz
mov
fisttpll
cli
sbb
loopne
add
or
sub
fisttpl
movsl
jno
subb
push
cmp
xor
shl
dec
outsl
inc
or
pop
xchg
lret
lahf
imul
mov
fstl
shrl
pop
inc
push
rcrl
imul
xlat
ret
aad
notl
cmp
push
xchg
repnz
mov
or
aas
fcom
ds
xchg
pop
mov
sub
push
sub
xor
push
pop
mov
dec
sbb
pop
xchg
jp
dec
sub
xchg
mov
push
std
push
insb
cld
and
iret
adc
dec
mov
sub
sti
insl
push
pop
pop
inc
stos
fisttps
jnp
mov
add
pusha
dec
subl
or
mov
mov
cmp
xlat
adc
add
add
and
addr16
xor
push
mov
dec
push
gs
das
or
mov
push
repnz
movsb
lahf
or
addb
or
outsl
movsl
arpl
or
pop
xor
add
and
jo
sbb
fsts
inc
mov
dec
cli
or
addl
jp
lea
xor
sub
pushf
jno
fmuls
or
sarb
xor
jno
les
push
inc
rcll
cmp
ret
lods
or
add
fstl
cld
dec
pop
and
xor
imul
mov
call
adc
mov
fmuls
sbb
iret
sbb
and
push
rcl
data16
mov
ljmp
arpl
or
and
or
push
and
xor
xchg
pop
and
push
sub
jbe
clc
xor
incl
imul
movsb
jg
clc
loop
lea
or
and
xorb
loopne
aas
fxam
add
or
sbb
xchg
or
aam
mov
jno
xor
int
or
push
or
push
gs
xchg
sti
ret
or
cmp
aas
lea
lea
push
dec
rorl
jno
fcom
mov
fstps
mov
push
arpl
push
ja
jns
jle
mov
aad
imul
cmp
mov
or
shlb
or
std
cmpsl
clc
xchg
or
into
mov
jnp
and
xor
out
adc
mov
in
lret
and
rcll
aaa
out
enter
or
jnp
mov
or
imul
pop
cwtl
ljmp
in
fldt
std
sahf
repz
pop
lds
or
fdivrs
xlat
cmpsl
jmp
gs
int3
sbb
pushf
in
mov
in
sub
lret
mov
sahf
pop
or
inc
int3
cwtl
sbb
sbbl
sub
or
mov
add
adc
test
cli
inc
add
sbb
rcrl
dec
imul
inc
and
push
mov
xor
pop
outsb
xor
sub
lods
lahf
lds
es
pushl
lods
xor
fiadds
loope
leave
rcrl
ret
fwait
bound
fstpl
les
sbb
mov
rep
sub
aas
int3
movsl
xor
push
jg
dec
sbb
or
or
mov
sbb
lds
outsb
test
icebp
or
lahf
mov
adc
mov
stc
scas
ds
dec
in
imul
test
ds
xor
lret
push
icebp
ds
mov
stc
or
bound
sub
pop
mov
and
and
adc
inc
xlat
sub
ja
int3
mov
or
movsl
or
aam
punpcklwd
fwait
or
xchg
dec
repz
mov
or
je
or
pop
push
movsl
jge
test
add
movsl
add
enter
xlat
push
insb
or
or
ljmp
imul
mov
fimull
inc
cld
inc
sub
lret
jge
jne
cs
adc
stos
sbb
clc
cli
or
dec
pop
fdivl
or
xchg
test
cmp
sub
or
out
jmp
pop
fcmovu
mov
fwait
xor
xchg
or
iret
xor
cmp
adcl
or
xlat
and
scas
mov
or
out
adc
pushf
or
int
movsb
xchg
sub
and
xchg
ret
and
call
jb
sub
xchg
lods
inc
stos
es
cwtl
jae
or
sub
push
mov
rcrl
mov
or
mov
lcall
or
mov
dec
dec
pop
dec
dec
in
movsb
jb
aam
xchg
jle
or
pop
cs
test
jp
sbb
cmc
sub
and
jno
repnz
jo
dec
cli
or
pop
rorb
cmp
mov
add
lods
in
add
mov
and
dec
sub
ds
dec
or
inc
daa
lock
jg
imul
mov
push
test
das
orb
or
pop
jno
js
data16
mov
or
cmc
repz
xchg
mov
mov
inc
ficoml
rcll
dec
push
je
mov
roll
testl
or
push
dec
les
jno
xor
daa
xor
xchg
adc
test
jmp
dec
fiaddl
mov
decb
clc
out
in
push
dec
scas
inc
iret
inc
hlt
jno
cmp
clc
or
aas
popa
rep
or
xor
pop
sbb
or
repz
mov
aam
or
push
das
lods
jno
adc
inc
cmp
adc
or
popf
and
fs
loop
dec
shrb
jne
dec
lds
out
or
call
sbb
xchg
out
aaa
pushf
imul
fisttpll
pop
aad
test
and
sbb
fisubrs
dec
cmpsl
xor
jle
inc
dec
outsl
imul
lret
scas
or
sub
jmp
rorl
cltd
or
jb
inc
dec
insb
mov
xorl
pop
or
push
int3
pop
add
pop
cli
xchg
sub
mov
cmp
xchg
pop
add
lods
in
int
fcmovnu
ffree
xlat
xchg
std
adc
stc
lods
mov
cmpsb
ret
jnp
jle
int
sub
leave
shll
insl
outsl
adc
in
sub
and
or
pop
je
adc
or
cltd
pop
dec
mov
incl
sub
or
jp
xchg
sahf
jmp
js
push
mov
xchg
in
out
jmp
or
jnp
jle
or
pop
adc
and
enter
cmp
test
xchg
mov
hlt
sub
aad
stos
pushl
mov
std
mov
or
repz
mov
sbb
or
dec
fwait
jle
in
sub
mov
ds
sti
lcall
jecxz
aad
jb
or
or
cmp
inc
out
ljmp
sti
mov
add
movsl
or
adc
fildll
lcall
movsl
mov
push
add
inc
movsl
sub
sbb
mov
push
cmp
push
movsl
dec
add
dec
inc
sbb
or
jp
mov
in
mov
cmp
or
fxch
popa
dec
dec
add
xchg
pusha
lret
cmp
cmp
sbb
inc
in
and
lgs
cmp
je
fadds
scas
movsb
jge
fdivrl
mov
cmp
daa
fstl
pop
pop
inc
test
fwait
mov
adc
or
fildl
jae
fld
pushf
sub
in
cmp
lods
xor
sub
jecxz
mov
ljmp
cmp
mov
out
into
xor
xor
cmpsl
or
ds
mov
or
xchg
test
or
cld
popa
cmp
in
cmpl
arpl
dec
mov
mov
pop
ret
out
mov
xor
xor
nop
pop
and
ds
or
or
in
jo
leave
insb
push
lods
or
jb
sahf
js
fcmovnbe
add
xor
or
cmp
cmpsb
or
ss
push
or
std
xchg
das
xor
rcrl
push
sub
mov
loop
add
pop
push
pop
test
shlb
rolb
nop
notl
cmp
rorl
xchg
movsl
sbb
jno
or
cmpsb
push
shrb
sub
inc
fmulp
or
sub
ss
xchg
and
jl
pop
adc
icebp
sub
jle
pop
idivl
sub
insb
sbb
pop
loope
bound
testb
lret
ja
and
pop
push
sbb
push
imul
mov
cmp
clc
mov
pop
push
xchg
jns
add
loope
xor
xor
jns
inc
cmc
dec
aaa
sarb
ds
adc
lods
xchg
or
lret
pop
iret
lods
adc
or
aas
call
or
in
cmp
lods
xorb
xor
or
negl
outsb
lea
dec
lea
in
loope
inc
out
or
mov
sub
jecxz
insl
jp
imul
in
fisubrs
or
mov
mov
inc
push
adc
decb
mov
sbb
and
pop
or
sahf
nop
sub
xor
jg
jno
testl
iret
jmp
mov
fistpll
mov
fsubl
scas
into
movsl
lods
mov
adc
das
sub
dec
adc
lds
xlat
iret
xor
js
adc
or
push
outsl
dec
cwtl
sahf
hlt
das
out
popl
dec
in
adc
fiaddl
sub
mov
imul
mov
arpl
aas
aam
mov
fistpll
je
add
and
outsl
mov
call
pop
pop
dec
sbbb
ljmp
xchg
or
sub
jg
or
mov
loope
sbb
sbb
orl
leave
mul
or
iret
int
jecxz
sti
or
dec
loop
ja
cmp
ret
das
push
mov
lods
fdivrl
arpl
adc
lea
lcall
add
or
push
pop
adc
popf
pop
stos
mov
dec
mov
mov
jg
popf
cwtl
incl
mov
outsl
inc
hlt
pusha
cmc
or
jp
lods
xchg
es
out
push
pop
out
imul
or
mov
inc
mov
pop
mov
cli
or
fs
mov
sbb
jae
jle
push
cmp
mov
jbe
addr16
xchg
or
jge
fimull
add
mov
push
in
lods
out
adcb
negb
mov
shrb
mov
xchg
pop
pop
add
dec
jns
xchg
sub
or
add
unpcklps
in
imul
sub
test
pop
xchg
or
cmp
xor
inc
popa
scas
and
push
pusha
or
pop
dec
test
or
aad
mov
dec
dec
pop
xorb
stos
repz
outsl
or
out
in
mov
cmpsb
aaa
adc
jns
test
lock
sbb
sub
in
test
das
arpl
or
sti
mov
cmp
mov
and
or
testb
loop
dec
mov
in
or
cmpsb
jns
sub
mov
pop
sbb
or
and
scas
or
inc
aaa
fisubrs
ja
jae
xor
stc
or
mov
shlb
mov
dec
jp
or
cmp
push
mov
pusha
scas
in
divb
icebp
adc
xchg
loope
rcrb
jp
push
nop
or
and
repz
sub
push
cmp
pop
in
or
add
xchg
rorb
mov
cmp
adc
adc
jge
cmp
movsl
popa
xor
xor
jno
aaa
add
add
or
ret
iret
or
fidivrl
imul
ja
mov
xchg
sbb
xchg
push
xchg
loop
mov
xchg
cwtl
xchg
adc
std
outsl
dec
test
or
pop
ret
adc
push
sbb
add
mov
push
out
lds
or
enter
or
ss
ret
fildll
pop
push
movsb
loopne
scas
imull
nop
xlat
int3
lds
push
or
jne
jg
push
xchg
aaa
jae
jo
mov
sbb
or
sbb
jle
fsts
lods
inc
out
and
jmp
xchg
adc
xor
sbb
adc
lea
inc
int
adc
into
js
fidivrs
insl
outsl
and
add
in
shll
mov
or
push
loope
cmp
dec
push
addr16
xor
sbb
sti
in
or
mov
and
jecxz
mov
clc
cmp
mov
mov
test
sbb
or
mov
xlat
dec
and
lods
cmpsl
idivb
dec
pop
hlt
push
jbe
stc
or
sub
jo
insb
fadds
mov
or
icebp
dec
jb
push
inc
add
or
inc
mov
jae
addr16
test
cmp
push
in
and
lock
cs
mov
or
mov
push
jmp
ljmp
push
lods
in
test
lods
movsbl
stos
pop
scas
xor
adc
shlb
test
in
daa
call
push
xchg
testb
cmp
ret
adc
inc
xorl
jp
jne
lea
pop
or
into
es
xorl
mov
lahf
dec
push
sarb
nop
dec
adc
data16
jecxz
sbb
lcall
mov
icebp
mov
adc
mov
inc
push
mov
mov
jb
in
inc
dec
pushf
jle
jg
jno
xor
hlt
mov
xchg
cmp
mov
stos
mov
or
ljmp
icebp
repnz
and
sub
dec
loopne
sub
lahf
inc
and
scas
inc
jmp
cmp
movsb
add
adc
dec
sbb
cld
sub
dec
lea
popa
stos
or
insb
shl
or
ja
inc
loopne
cmpsl
div
inc
dec
test
gs
inc
cmp
mov
iret
ds
arpl
pusha
xor
jle
fs
test
adc
sahf
xchg
push
adc
stos
ret
jno
mov
imul
mov
cmpsl
push
dec
xor
test
and
mov
mov
jmp
push
xchg
test
repnz
scas
or
jb,pt
add
sti
or
lea
jns
mov
and
add
adc
jb
mov
add
lods
test
shlb
dec
lret
aas
hlt
stos
subb
mov
or
xor
faddl
sbbb
fimull
sbb
fisttpl
sti
push
pop
orl
jle
push
dec
pop
adc
clc
negl
dec
sbb
cmp
in
mov
push
dec
mov
mov
lods
mov
or
sbb
mov
pushf
and
cmp
or
mov
xor
movsl
xor
imul
add
fidivs
std
es
mov
push
popa
add
lods
fidivrs
lods
or
mov
cmpb
push
or
aam
sbb
or
add
notb
dec
flds
sbb
or
loop
adc
or
gs
mov
mov
sbb
or
jmp
mov
push
jbe
mov
cmp
or
cs
lods
es
lea
or
push
push
jg
pop
das
stos
mov
icebp
mov
pushl
sbb
aaa
add
mov
sbb
movsl
push
in
xchg
je
add
push
add
sbb
mov
mov
xchg
add
and
fs
or
dec
ret
out
lret
push
fnsave
inc
dec
imul
lods
imul
lods
push
adc
mov
pop
lea
or
dec
inc
cmpsl
sbb
gs
ss
push
add
or
push
sbb
or
fstps
sub
pop
loope
mov
inc
sbb
jp
sbb
gs
xor
inc
or
mov
rolb
fscale
mov
testl
sub
jnp
pop
ficoms
imul
int3
or
push
daa
js
out
arpl
fisttpl
push
call
in
and
xor
icebp
lods
imul
or
jnp
imul
test
shlb
mov
bound
jae
cmpsl
adc
mov
xchg
jmp
std
or
fsubrs
mov
mov
mov
or
addl
jbe
movsb
jp
fmull
lret
int3
fucom
int3
shrl
loope
adc
mov
out
das
jno
adc
add
lods
inc
aam
mov
lcall
hlt
sub
pop
scas
jno
insl
mov
arpl
stc
xchg
and
lods
sub
fs
aad
sub
cvttps2pi
cmpsl
push
sti
repz
mov
ret
icebp
mov
and
add
or
dec
inc
pop
push
in
pop
sub
shl
xchg
push
and
adc
or
xor
popf
jne
xor
sbb
push
imul
daa
inc
adc
jno
add
sbb
dec
lahf
adc
or
cmp
cmc
popf
cli
lods
adc
idivl
or
mov
push
inc
das
ret
adc
inc
xchg
push
or
xchg
ljmp
jno
movsl
sbb
inc
sub
cltd
xchg
das
nop
repz
cli
mov
sub
push
imul
jo
pop
in
in
push
mov
mov
xchg
sbb
jecxz
or
inc
dec
or
rolb
iret
mov
xchg
sub
sub
popa
scas
jle
dec
sbb
adc
mov
test
lret
inc
sbb
inc
rorl
gs
pop
cmp
jl
cmc
out
cs
xchg
fldt
push
ss
push
mov
inc
ret
mov
pusha
loope
ret
or
lods
fst
arpl
lret
cli
jge
or
lea
inc
mov
add
lds
lret
imull
jmp
nop
or
xchg
test
lods
hlt
pop
pop
sbb
dec
push
sbb
xlat
jmp
leave
cmp
cmp
outsl
daa
dec
ficoms
push
mov
xchg
or
arpl
and
nop
or
data16
mov
xchg
mov
in
pop
je
sbb
jecxz
push
pusha
or
xor
add
mov
lods
push
lahf
rcrl
xor
inc
jg
in
pop
daa
xchg
mov
push
mov
movsb
add
or
or
bound
scas
or
imul
ja
xchg
scas
jl
jae
pop
fadd
bound
dec
add
cmpsl
jle
movsl
imul
or
outsl
adc
or
jbe
jge
or
adc
imul
test
rclb
sarl
fcmovnbe
jg
push
in
jno
or
lcall
int3
cwtl
pop
in
lret
or
dec
or
vaddss
xchg
mov
mov
xchg
clc
mov
addl
adc
jle
inc
mov
push
or
nop
inc
addr16
xor
orb
push
inc
adc
cld
shll
mov
ret
xchg
testl
std
xchg
cmpsb
icebp
or
lods
lahf
aas
outsl
dec
ja
adc
cmpsb
push
std
pop
or
das
pop
xor
fstps
cmpsb
jp
movsb
and
sbb
and
dec
test
sbb
add
push
nop
push
shrb
in
cli
jl
adc
xchg
cmp
or
nop
shrb
subl
jecxz
and
cltd
int
dec
movsb
sbb
push
sub
pop
leave
or
aad
daa
sub
cltd
or
jnp
cmp
inc
mov
scas
xchg
leave
rorl
sahf
mov
cmp
or
xchg
dec
aaa
stos
or
cmc
pop
xor
sub
mov
xor
xor
add
ret
pop
sbb
fsts
mov
or
pusha
in
test
mov
in
insb
or
aad
fildl
clc
enter
movsb
cmpsl
lods
dec
or
arpl
xchg
imul
mov
ret
pop
jae
mov
or
aas
add
or
ret
push
push
dec
or
sub
nop
inc
jmp
and
and
sub
dec
out
jbe
mov
cmp
xchg
and
or
mov
xor
dec
and
jmp
add
jmp
add
xchg
push
or
loop
jno
sub
mov
mov
adc
push
mov
in
mov
push
fbstp
in
rolb
pop
or
mov
lds
sbb
leave
loope
iret
and
xor
call
or
mov
lahf
insl
xlat
push
add
xor
ljmp
nop
popa
and
outsl
xor
or
fmull
ja
pop
pop
arpl
sbb
push
js
mov
mov
inc
push
lahf
xchg
or
cmp
nop
ss
push
jg
out
or
dec
ljmp
lods
push
push
or
fistpl
and
cmp
inc
mov
scas
pop
int
push
scas
test
in
xchg
gs
jne
sub
cmp
xor
scas
fisttpll
shlb
loopne
jle
or
or
into
je
sub
sub
mov
rol
iret
push
dec
sbb
sti
sbb
int
mov
test
fistl
scas
out
nop
into
xchg
sub
cmp
mov
mov
push
cmp
sub
or
or
std
mov
aad
imul
cmpsb
iret
insb
push
test
pop
sbb
in
inc
imul
movsl
fcmovnu
ja
sub
adc
testl
cmpb
sbb
mov
or
test
cmp
popf
xor
or
jno
mov
push
or
dec
pop
jne,pt
mov
dec
out
shrl
jbe
inc
cmp
mov
loope
lock
mov
shld
push
pop
mov
inc
loopne
aam
addb
daa
xchg
sbb
mov
repz
repnz
xchg
jl
mov
mov
pop
xchg
inc
sub
outsl
iret
dec
and
or
aam
or
or
jno
and
js
mov
or
jns
mov
pop
or
cmp
fcomp
xchg
pop
add
mov
hlt
ds
or
pop
sarb
or
fcmove
pop
inc
add
or
int
xor
aaa
inc
in
mov
adc
sub
or
mov
cli
and
ret
gs
or
jno
xor
and
incl
xlat
jg
rorb
fwait
cwtl
pushf
and
mov
mov
sub
mov
out
movsb
outsb
fstpl
sbb
insl
rorl
lret
jg
xchg
jle
push
or
jb
xchg
push
or
xlat
push
insb
add
mov
or
or
ret
or
fs
in
out
das
in
xchg
xor
shlb
aas
out
dec
dec
mov
jmp
hlt
sbb
xchg
sub
mov
daa
dec
mov
mov
out
nop
cmpsb
adc
or
inc
inc
sub
mov
cli
cmp
es
push
mov
fmull
lahf
ja
sbb
repz
lret
and
adc
rcrl
fnstenv
or
cmp
xor
jne
or
or
add
sub
insb
sti
sahf
add
xchg
adc
mov
mov
fadds
in
movsb
or
loopne
and
dec
gs
je
xlat
jns
into
and
or
inc
mov
xor
je
es
subl
dec
or
or
dec
jmp
clc
fistpl
adc
push
sbb
sbb
shrb
testl
sbb
fmull
dec
or
jno
xor
in
cmp
in
and
xchg
and
jbe
mov
add
movsb
or
dec
or
inc
sbb
mov
cwtl
ja
or
and
adc
adc
xchg
jl
sub
pop
or
repz
into
movsl
or
hlt
in
dec
or
icebp
xchg
cmpsl
pop
dec
adc
xchg
in
inc
push
mov
pusha
outsl
out
out
ss
mov
mov
loop
int3
aam
rorb
ss
adc
mov
pop
sub
push
jp
stc
or
jne
xor
fldcw
ds
aas
in
dec
mov
mov
mov
xor
cmp
or
in
push
call
sub
data16
or
scas
xor
scas
mov
popf
lods
or
mov
dec
into
jno
leave
pop
repz
or
cmc
inc
inc
std
or
ret
lcall
or
sbb
aas
loopne
xor
jge
cwtl
sbb
pop
cld
mov
or
loope
xchg
jb
jmp
xchg
jp
in
pop
icebp
push
rorl
mov
movsl
add
aaa
inc
or
gs
fdivrl
push
push
lahf
mov
mov
test
test
mov
mov
mov
ss
sub
and
insl
cmp
scas
sub
sub
inc
clc
fbld
mov
xchg
sub
pop
adc
test
xchg
or
jbe
cmpsb
or
je
movsb
sub
jmp
in
mov
xlat
addr16
fildll
adcb
sbb
inc
or
inc
and
rorl
mov
ret
push
sbb
out
or
arpl
mov
or
addr16
jne
mov
adc
or
in
je
jnp
icebp
movl
repz
xchg
mov
xor
rclb
or
add
in
jnp
sbb
std
nop
xchg
lret
scas
ds
or
stos
or
or
fmull
xor
xchg
mov
fidivs
pop
dec
enter
movsb
jl
adc
fidivrl
mov
das
or
sarl
push
inc
inc
in
imul
int
pop
js
xor
cli
inc
and
fistpll
repz
neg
adc
push
sub
and
loope
cmc
inc
fdivrl
pop
test
imul
jno
mov
mov
mov
popa
arpl
cmpsb
bound
xchg
sbb
inc
push
inc
loopne
fildll
insl
shll
mov
addl
xchg
xlat
pop
loopne
xchg
or
insl
lds
mov
lods
sbb
xchg
pop
in
sbb
mov
mov
xor
stc
adc
push
or
dec
orb
and
outsb
mov
add
mov
dec
sub
pop
or
sub
pop
repz
out
or
inc
nop
and
pop
mov
lds
sbb
repz
mov
pop
mov
push
loope
fsubrs
jns
pop
pop
sub
mov
mov
mov
inc
sbb
jmp
imul
or
lcall
xchg
lods
lock
mov
out
pop
sub
rcrl
das
cmp
popa
mov
adc
loopne
or
adc
cmp
or
jno
out
and
and
pop
popf
fiaddl
pop
mov
xor
fnstcw
dec
or
or
dec
repnz
insl
shlb
add
sub
xchg
fiaddl
pop
push
es
or
subl
js
mov
dec
jle
or
cmp
mov
push
and
pop
in
jmp
dec
fwait
add
je
and
in
stos
cmpsb
cmp
fsts
arpl
xchg
jns
sbb
dec
fsubrl
in
outsl
imul
adc
add
mov
adc
fstpt
mov
icebp
xor
jo
pop
xor
sub
lods
mov
stc
test
and
data16
fcomps
xchg
ds
xchg
outsl
in
in
das
pop
xchg
or
xchg
and
or
or
adc
dec
jbe
xor
and
lock
add
ds
push
jno
push
or
inc
movsl
xor
inc
xchg
loope
or
xchg
adc
imul
pop
daa
inc
rol
xchg
sbb
pop
or
adc
pusha
push
sti
mov
pop
push
decb
imul
js
xchg
loop
xchg
addr16
popa
sahf
test
and
das
ss
repnz
nop
pop
mov
cs
inc
xchg
add
in
test
lahf
lds
xchg
int3
dec
arpl
sub
sbb
jo
push
xor
mov
or
in
movsl
xor
jbe
mov
jge
sbb
push
xor
jp
or
and
test
loopne
jmp
adc
lods
or
xchg
pop
mov
sahf
pop
mov
cs
xchg
pop
inc
sbb
or
pop
jns
stos
sub
add
add
push
or
mov
pop
add
icebp
inc
stc
or
movsb
xchg
add
mov
rcrl
push
jno
sub
or
push
sbb
and
mov
out
mov
int3
nop
xor
mov
mov
sbb
outsb
cmp
push
or
push
nop
xchg
pop
push
es
sub
lahf
pusha
cmpsl
xor
ficompl
or
test
mov
shrl
or
iret
mov
cmp
imul
mov
jno
sbbb
int
imul
les
stc
adc
xor
jmp
aaa
push
or
outsl
jae
test
in
ss
sub
push
mov
xchg
ds
add
pushf
inc
sbb
aad
or
jb
insb
lods
inc
mov
and
shrl
sbb
dec
fucomip
shlb
sbb
or
xor
mov
jo
or
dec
ds
or
inc
push
sbb
sbb
add
sbb
outsl
in
xor
push
bound
fcmove
add
push
or
sti
leave
pop
mov
or
inc
and
or
jb
push
andl
cmp
dec
xor
xchg
div
push
push
pop
mov
sbb
std
mov
dec
jbe
cltd
jle
arpl
push
fmuls
and
dec
les
cwtl
mov
dec
or
orl
push
pop
or
cmp
mov
sub
pusha
or
adc
shr
cmp
popf
insl
mov
or
sbb
inc
clc
or
mov
sbb
or
xor
addr16
cli
in
call
pushf
add
mov
xor
out
inc
dec
pop
enter
jno
cmc
bswap
roll
popf
and
or
insb
mov
xor
leave
sbb
and
inc
shll
or
iret
xor
or
adc
lock
or
sbb
aas
cmp
adc
in
or
add
test
sbb
push
in
movl
sbb
or
test
imul
outsl
jno
add
mov
dec
xchg
insl
mov
insb
sti
js
rorl
jo
sbb
shlb
mov
mov
sar
pop
or
xchg
push
or
jb
or
push
lods
test
sub
sbb
testb
xchg
fdivl
jge
out
ret
aas
loope
mov
outsb
insb
imul
cmp
dec
cmp
cmp
outsb
stos
and
int
sbb
jl
adc
lock
decb
rcrl
mov
push
or
adc
test
and
dec
and
add
xchg
rorl
mov
pop
imul
push
or
mov
xor
jmp
cli
xor
adc
lds
fsubr
lahf
adc
jnp
dec
jp
or
mov
and
jg
sub
mov
lods
bound
testb
movsl
pop
pop
mov
out
fs
xchg
arpl
stc
lds
or
mov
or
movsl
int3
and
negl
sub
dec
mov
or
and
mov
push
push
insb
pop
cmpsl
fcoml
xchg
or
mov
mov
movsb
addr16
in
mov
adc
xor
cwtl
mov
insb
sub
call
dec
neg
jg
sbb
push
xchg
outsb
mov
bound
sbb
outsl
xor
cmp
scas
pmaddwd
orb
notb
jno
mov
push
imul
or
and
or
or
clc
sbb
fildl
cld
inc
xchg
ror
pop
data16
cmp
add
push
mov
pop
repnz
mov
adc
add
sbb
fincstp
add
sbb
mov
xlat
popf
dec
push
repz
or
movsl
ss
dec
pop
push
inc
or
rcr
aas
or
jb
pop
rorl
xor
mov
in
sbb
mov
mov
or
mov
mov
dec
or
xchg
adc
xchg
sbb
or
dec
lods
xor
daa
mov
cmc
nop
notl
call
test
repnz
dec
enter
dec
mov
notb
shll
jmp
arpl
dec
dec
adc
iret
xor
push
or
cmp
les
in
xor
mov
nop
push
into
xchg
aam
jge
xchg
icebp
jbe
adc
mov
inc
dec
or
stc
sub
or
and
pop
sub
dec
mov
jg
stos
inc
cs
pop
jo
rclb
je
jns
rcll
andb
loop
stos
or
das
xchg
cmp
mov
adc
scas
mov
popa
adcl
mov
insb
add
lret
mov
in
cmp
xor
push
pop
inc
lea
push
and
dec
popa
and
in
xchg
nop
push
cmp
lds
or
add
and
ret
test
nop
int3
dec
es
lock
adc
in
jp
push
xchg
dec
push
or
mov
std
and
push
loope
mov
sbb
or
add
or
or
nop
lds
dec
push
jns
faddp
or
es
inc
xor
adc
rcr
jg
jb
lahf
repnz
mov
aam
push
lock
repz
sub
adc
and
add
int
dec
fsub
not
dec
clc
loop
sahf
adc
dec
stc
imul
fidivrs
lret
je
or
ja
stos
movsl
mov
push
or
popf
jge
stc
adc
icebp
jle
cmpsb
sbb
and
aas
mov
rcrb
sbb
and
sub
andb
imul
in
sbb
or
iret
jle
cwtl
imul
lods
push
fdivs
and
inc
fxam
stos
mov
jecxz
xchg
aad
rorl
sbb
or
xlat
outsl
stos
jg
pop
inc
mov
and
jnp
sub
repz
std
sbb
jmp
push
loop
push
or
cmp
in
ds
lea
mov
xlat
pop
or
repnz
xchg
cmpsb
sbb
icebp
movsl
or
and
jp
jmp
into
shlb
in
xchg
and
insb
popa
ret
scas
mov
xchg
jne
sub
xchg
popa
in
shll
mov
pushf
sti
out
sbb
in
jp
lahf
popa
test
movsb
adc
sbb
push
addr16
mov
jo
inc
iret
sbb
pop
or
mov
inc
or
cmc
mov
mov
arpl
sbb
xchg
aas
test
add
nop
push
pop
dec
popa
mov
dec
or
fsts
dec
sub
nop
adc
loop
or
sub
in
dec
in
or
inc
inc
or
jp
fimull
inc
lret
mov
cmp
cmp
cmc
sub
mov
fcompl
pop
jno
push
sbb
push
neg
into
dec
fbstp
lcall
or
dec
ret
bound
jp
adc
lods
insl
mov
outsb
aaa
scas
imul
repnz
add
push
out
pop
sub
pusha
sbb
sbb
adc
in
add
in
outsb
dec
enter
jp
fiadds
or
sbb
mov
add
or
stos
sbb
jo
imul
xchg
std
mov
mov
and
je
push
mov
repz
xor
mov
push
or
mov
and
int3
pop
mov
mov
sahf
das
fstpt
out
or
xchg
ja
repz
shlb
sub
enter
add
or
icebp
arpl
push
rcl
movq
push
dec
or
cli
xchg
xchg
pusha
add
or
insb
pop
jae
sbb
mov
das
and
mov
jns
mov
push
cld
sahf
inc
lret
test
lds
in
and
and
imul
sub
or
push
adc
dec
dec
cmp
or
pop
jge
or
gs
push
mov
pop
add
cmc
scas
push
inc
xchg
xor
push
out
lcall
dec
cli
mov
xchg
test
aad
cltd
out
sbb
clc
in
jbe
xor
lcall
xchg
dec
leave
cmp
je
cld
in
mov
lahf
mov
sub
repz
jnp
mov
lods
xor
xchg
or
push
lds
cmp
add
jno
or
lcall
mov
mov
imulb
pop
mov
rcll
cltd
je
push
and
insl
dec
inc
push
in
mov
cmpsl
ret
adc
test
cmp
and
lds
addr16
test
rolb
sbb
sahf
xchg
mov
dec
in
pop
gs
fwait
mov
ror
das
and
dec
outsl
sahf
adc
lods
or
in
mov
pop
xchg
add
stos
imul
cli
dec
dec
inc
cmp
sub
push
sahf
dec
and
mov
out
or
mov
mov
inc
mov
or
rcr
loop
sub
lcall
sbb
adc
cmp
xchg
cmc
or
mov
pmaddwd
sbb
fsub
or
or
jbe
sbb
outsl
subl
ss
inc
or
lea
popf
or
lock
or
negl
test
pusha
ffreep
fldt
push
sub
imul
dec
cmc
mov
and
in
and
inc
xlat
mov
js
je
in
sbbl
or
push
cmp
movsl
or
addr16
adc
imul
lods
push
cli
loop
sbb
gs
xchg
xchg
sub
push
outsl
aam
test
insb
cmp
dec
lret
mov
arpl
inc
filds
mov
out
jnp
or
jno
jo
sahf
ret
dec
dec
push
test
or
push
rorl
imul
dec
repnz
add
or
and
inc
into
iret
imul
into
ds
inc
adc
in
in
inc
shlb
mov
loopne
nop
iret
add
xchg
dec
xchg
push
dec
xlat
out
mov
and
jge
push
mov
mov
pushl
ja
xchg
mov
mov
xchg
popf
or
cli
sbb
xlat
mov
cld
mov
shlb
xchg
adc
inc
or
add
ss
cwtl
jnp
scas
movsb
dec
push
int3
add
inc
push
jl
push
xchg
add
dec
push
sbbb
xor
mov
mov
inc
xchg
or
pop
fsubl
std
cmp
add
pusha
scas
std
orl
or
push
pushf
das
ja
call
dec
lea
fwait
stos
fidivl
sbb
lret
insb
or
out
or
fstpl
xlat
in
sub
mov
stos
jae
xor
mov
xchg
out
mov
divl
in
push
mov
xor
mov
or
and
push
dec
aas
or
popa
sbb
hlt
adc
jo
adc
lret
or
xchg
in
orb
adc
int3
jle
mov
sahf
daa
jb
adc
sbb
cmp
or
and
aas
xor
or
std
mov
pop
or
ret
sbb
jns
pushf
sub
fisttps
sbb
push
cmp
add
iret
loop
xchg
outsb
mov
iret
or
fimull
or
shll
adc
sti
jnp
add
jl
and
push
push
in
ret
or
lahf
mov
into
ja
sahf
out
das
gs
mov
cmp
pop
cmc
cmpl
js
or
testl
rcrb
gs
cli
and
daa
ljmp
or
movsl
and
or
sbb
mov
dec
test
mov
push
out
xchg
mov
inc
dec
jg,pt
inc
adc
push
mov
pusha
mov
and
fldcw
cmp
aad
adc
sbb
clc
fcomps
adc
outsw
mov
pop
jbe
popa
mov
or
fsubl
or
movsl
dec
mov
sub
adc
xchg
adc
jle
int
dec
or
cmp
fiaddl
and
pop
loop
sbb
lods
rcr
outsb
fildll
mov
pop
inc
inc
xlat
push
xchg
call
cltd
or
xchg
lods
cmp
mov
adc
out
mov
inc
xor
xor
js
push
lret
adc
fidivrl
addb
scas
mov
stos
push
mov
jne
nop
mov
inc
mov
sub
jl
xchg
dec
pop
pushf
mov
sar
cwtl
dec
in
push
cmp
sbb
je
cmc
dec
inc
outsl
dec
cs
dec
stc
add
shr
cld
cmp
push
mov
nop
out
mov
inc
in
aad
pop
imul
mov
stc
xchg
push
jge,pt
pop
aam
sbb
repnz
je
cwtl
fldt
sbbb
shlb
or
movsl
push
mov
or
or
mov
test
mov
add
fiaddl
in
sub
fmull
stos
adc
cmp
or
mov
je
out
push
aad
sbb
push
push
mov
xor
mov
jae
aas
cmp
xor
mov
adc
out
mov
ds
lahf
sbb
mov
mov
dec
jnp
fldenv
xorb
mov
subb
adc
xor
mov
and
jecxz
or
mov
and
adc
xor
ret
dec
shll
fs
fnstsw
lea
jns
mov
das
mov
or
stos
dec
or
cld
xor
inc
or
mov
xorb
cld
js
jno
rcll
loopne
mov
bound
xchg
cmpsb
popa
in
aaa
pop
push
xchg
pop
in
inc
jno
push
mov
sub
not
aas
xchg
push
dec
scas
cmp
popa
push
rclb
fs
lods
lods
fisttps
pop
cld
add
push
jmp
pushf
sbb
xchg
pop
popf
inc
mov
dec
pushf
cmp
shll
lds
dec
cmp
fdivrs
add
push
aas
cmc
or
mov
sar
or
pop
jmp
test
inc
xlat
mov
mov
cmp
cmc
shll
xchg
sub
pop
push
gs
push
mov
call
lods
test
rclb
int
mov
inc
stos
push
in
leave
fwait
repnz
or
testl
lods
hlt
insl
or
in
mov
or
std
xchg
mov
adc
adc
dec
iret
mov
imul
jbe
mov
sbb
sbb
jne
xor
jp
dec
or
dec
scas
cld
mov
enter
push
sbb
or
sbb
sbb
rcr
jecxz
repz
push
push
xchg
dec
mov
or
dec
shrb
or
xchg
jno
stc
popf
addr16
xchg
xlat
aad
or
push
movsb
enter
or
jo
pop
xor
sub
pop
or
sbb
or
jl
ret
fmuls
cmp
push
push
dec
call
lods
jns
xorl
or
inc
scas
sahf
lods
ret
mov
jae
dec
mov
xchg
or
das
decl
or
jge
sub
push
xor
in
std
sub
sbb
sub
mov
pop
movsl
cmp
jmp
mov
sbb
jno
fs
xor
jne
sbb
pop
sti
icebp
xchg
sub
mov
push
cs
cmp
fisttps
pop
inc
cli
mov
ja
pop
in
jecxz
outsl
test
adc
aam
sar
inc
pusha
enter
inc
movsl
leave
mov
jbe
sbb
scas
nop
or
imulb
sub
mov
pop
sub
mov
push
sbb
or
popf
pop
pop
and
jb
xor
adc
inc
or
imul
and
pop
jl
pushw
or
push
and
xchg
and
scas
mov
inc
mov
mov
outsb
dec
pop
in
fcomp
jne
or
sbb
or
inc
mov
jb
adc
ljmp
imul
pop
dec
lcall
ret
in
inc
lret
in
xor
ja
sub
dec
ds
or
add
testl
dec
push
mov
rcrb
and
xor
cmpsl
fsubl
push
decl
in
mov
and
ds
adc
or
das
mov
stos
xchg
xchg
cmpb
stc
sti
incl
push
mov
clc
push
jecxz
and
loop
gs
negl
dec
dec
jne
cmp
jle
sbb
mov
mov
mov
imul
cmc
out
jno
jne
lret
add
push
clc
shll
outsb
nop
lods
loop
daa
push
adc
inc
mov
fldl
and
inc
mov
xor
imul
add
or
arpl
test
pop
ja
mov
js
mov
adc
push
push
mov
pop
movl
cmp
movsb
inc
mov
or
pop
jnp
or
push
js
leave
sub
ret
in
iret
addr16
in
push
jno
fistl
cltd
add
or
push
in
insb
sbb
lds
sbb
frstor
outsl
mov
pop
mov
dec
mov
xchg
and
sbb
mov
jmp
or
add
or
test
bound
jmp
pop
in
sarl
call
in
dec
jo
in
mov
or
pop
xchg
in
and
mov
adc
or
pop
outsl
out
pop
or
lcall
test
xlat
or
sahf
sbb
int3
loop
adc
fists
and
adc
and
insb
xchg
inc
mov
sbb
dec
mov
push
or
sbb
inc
or
cmp
movsb
push
mov
lahf
dec
push
mov
cmp
xor
mov
into
stos
or
loope
shlb
adc
in
mov
jecxz
mov
or
cltd
sbb
inc
or
hlt
in
rorl
cwtl
push
mov
sbb
ret
fs
sub
add
add
cmpsb
add
or
inc
dec
ss
cmp
xor
inc
out
iret
jnp
hlt
sti
daa
mov
jge
or
push
xor
roll
imul
jbe
push
jge
test
gs
imul
fmuls
cmp
stos
xor
mov
mov
jle
loop
jmp
movsb
pop
mov
stos
inc
jg
jne
cwtl
mov
repz
adc
pop
ficomps
xchg
mov
push
jp
cmpsl
or
push
clc
inc
mov
sub
pop
jge
pop
das
xchg
sbb
sub
mov
and
mov
jae
mov
int3
dec
sub
scas
movsl
mov
jmp
dec
or
jns
in
or
mov
push
mov
lods
and
adc
cmc
test
xchg
and
insb
lods
mov
adc
sbb
sbb
int3
jge
or
jae
mov
jne
fimuls
dec
jg
xchg
in
testb
sub
jl
pop
out
sub
sarb
sbb
and
inc
or
insl
aad
inc
and
in
xor
in
inc
pop
dec
or
add
mov
jno
push
mov
mov
xchg
ds
enter
jge
pop
call
xorl
lahf
sbb
pop
pop
jg
mov
mov
xchg
xchg
lods
sbb
out
ds
jg
xchg
and
xor
pusha
cld
inc
jae
inc
arpl
aam
or
jle
bound
pusha
cs
test
lods
inc
sbb
decb
or
mov
nop
in
dec
xor
or
inc
pop
and
jns
adc
daa
fs
mov
adc
push
and
dec
inc
or
jnp
or
hlt
cmpb
ret
into
arpl
sub
cmc
mov
jo
push
in
push
je
arpl
or
into
gs
int
pop
dec
pop
in
add
je
lahf
insb
add
xor
scas
outsb
pop
or
and
or
mov
add
cli
imul
lcall
int
lock
jae
push
and
sbb
cmp
ret
mov
mov
mov
cmpsl
sbb
push
in
arpl
xor
enter
out
cmp
aam
xchg
pop
js
sbb
movsb
or
insl
xchg
nop
imul
push
icebp
sbb
jle
test
je
stos
addr16
dec
push
fs
sub
sbb
icebp
adc
push
xor
daa
mov
mov
mov
dec
gs
xchg
or
jmp
mov
stc
push
mov
ds
cmp
bound
popa
jne
dec
push
dec
orb
jge
inc
push
jo
or
mov
jmp
push
addb
mov
sbb
mov
out
ja
or
mov
xchg
fsubrl
dec
mov
test
adc
lods
pop
dec
jno
push
out
or
xor
mov
xor
lahf
push
clc
adc
lods
rcrl
les
xor
sbb
mov
aaa
sbb
jle
sub
das
in
into
jecxz
or
cmp
test
sahf
or
ret
push
sub
adc
add
pop
ret
test
dec
cmp
mov
daa
pop
push
pop
or
lret
movsl
or
sbb
lahf
or
rclb
or
xchg
icebp
repnz
daa
lret
das
or
adc
jge
sbb
enter
add
sbb
jecxz
mov
fs
xchg
cmp
mov
mov
je
inc
mov
int
or
cwtl
hlt
and
mov
push
iret
inc
add
push
inc
jbe
lret
cmp
jle
sub
mov
dec
popa
sbb
dec
dec
or
push
lea
inc
or
sarl
inc
es
std
xor
fildl
int
jo
outsb
or
into
mov
sbb
hlt
testl
lea
dec
jge
xchg
mov
mov
pop
sbb
add
popa
dec
in
cmp
adcl
adc
or
data16
in
std
and
ret
cmpsl
aaa
sub
aas
mov
ja
aam
lea
cmp
inc
mov
jge
mov
iret
sub
and
and
jg
adc
xchg
mov
rcr
lods
lds
repnz
in
popf
sub
iret
sbb
sub
xor
inc
clc
jno
bound
lcall
rcr
inc
movl
mov
pop
or
aas
and
rorb
cmpsl
xchg
stc
push
sbb
nop
or
inc
xor
lahf
mov
adc
add
stos
ret
sbb
sub
into
test
repnz
xchg
lods
xchg
inc
fcomp
cmp
sbb
cmc
push
ja
push
mov
sbb
pop
pop
sub
in
cmc
mov
cmp
adc
xchg
into
push
jae
xchg
push
push
or
loope
loopne
or
jne
test
or
and
and
fimull
jb
sbb
or
insb
inc
test
sub
loope
xchg
cs
push
sbb
jo
dec
iret
icebp
in
or
aas
cwtl
in
jb
es
or
push
js
cmp
imul
nop
mov
or
cmpb
xchg
aad
cmp
lds
jae
mov
leave
jno
mov
cmp
nop
inc
adc
rorb
xor
stc
or
idivb
and
sub
je
iret
pop
sub
jae
daa
addl
clc
ficoml
out
paddq
in
pushf
cmpsb
push
mov
and
cmp
pop
jnp
xchg
ss
jmp
jo
mov
in
push
dec
mov
pop
stc
or
dec
pop
fcmovne
or
xchg
inc
mov
sbb
gs
or
incl
xor
lret
inc
decb
xor
mov
and
jmp
dec
cmp
sbb
bound
pop
or
mov
je
rcll
and
or
inc
shlb
outsl
jae
adc
mov
push
or
cmp
pusha
cmp
mov
mov
pop
addr16
sarb
or
lret
ljmp
std
mov
xor
cs
mov
sarl
hlt
or
test
mov
call
pshufw
and
or
in
mov
std
ficoms
loopne
jle
add
int3
popa
clc
jp
xchg
out
iret
addr16
mov
cld
mov
inc
adc
or
xchg
ficoml
mov
xchg
jge
dec
add
in
inc
dec
leave
sub
scas
mov
lods
loop
push
cmp
icebp
or
add
shlb
aam
xor
mov
jp
fldcw
pushf
push
push
ja
inc
sub
cmp
add
add
mov
mov
mov
mov
sub
mov
push
inc
and
aaa
pop
adc
pop
fiadds
mov
test
pop
and
stos
xor
scas
or
adc
pop
or
and
loope
in
fnstsw
add
xor
stos
pop
fisttpll
sbb
sbb
insb
enter
adc
dec
scas
jp
sbb
sahf
in
pop
test
call
addr16
sti
lret
jbe
insb
inc
or
xchg
in
mov
pop
mov
rolb
xchg
jecxz
jg
jnp
lret
or
in
cmp
mov
bound
or
xor
dec
mov
cli
insb
jle
es
sbb
sub
mov
lock
and
mov
test
adc
test
mov
into
inc
ja
inc
mov
add
cmp
pop
mov
les
sub
in
pop
cmp
in
cmp
repnz
sti
in
mov
jl
cmpsl
adc
cld
or
cltd
pop
jge
dec
cmp
push
jno
pop
dec
mov
mov
or
push
jecxz
push
or
fs
push
pop
dec
mov
cmc
jnp
add
sbb
mov
mov
push
testl
dec
add
sub
mov
jb
push
xchg
push
pop
push
or
inc
jo
lret
or
push
stos
and
adc
inc
inc
sbb
inc
mov
or
jle
mov
cmp
add
jl
pop
imulb
sbb
call
or
pop
cmp
pop
in
or
dec
aam
lea
xor
pop
or
inc
nop
imul
dec
cmp
inc
out
pop
fbstp
popf
jg
mov
add
adc
sub
mov
testl
int3
mov
adc
xchg
addr16
pushf
nop
popf
lahf
add
lods
xlat
add
cli
cmp
mov
and
das
mov
rorb
imull
adc
stc
adc
push
outsl
xchg
pmullw
cmp
cmp
dec
sbb
daa
jnp
add
insl
movsl
sub
gs
hlt
push
lds
lock
inc
sub
and
fs
loop
ret
insb
sbb
mov
in
icebp
add
adc
sub
movsb
sbb
sbb
std
arpl
xor
push
push
imul
int
push
rorl
lret
xor
fsubp
in
or
and
pop
xor
sub
ds
lea
lcall
sub
or
add
or
cmp
xchg
push
mov
jnp
std
or
and
or
inc
sbb
stc
add
nop
mov
hlt
pop
mov
lods
cmp
xchg
notb
sbb
stc
pop
adc
arpl
or
data16
or
test
or
in
jmp
icebp
push
sbb
sub
test
or
adc
test
mov
rolb
adc
pop
add
dec
or
fcmovbe
adc
lea
inc
pop
das
mov
into
mov
mov
hlt
shrl
mov
stc
add
pop
call
pushf
mov
inc
xor
dec
lds
in
push
les
nop
cmc
or
or
mov
xor
lods
rcrb
adc
call
mov
pop
lods
mov
xchg
inc
xchg
icebp
adc
inc
loope
push
or
pop
mov
ror
jo
loopne
cmp
xor
stos
pop
les
xor
mov
inc
inc
lods
aad
lods
push
test
jle
pop
testl
lret
in
loope
inc
ss
ljmp
or
jbe
dec
xchg
in
aas
movsl
pop
xor
mov
push
loope
lret
jo
or
fmulp
push
nop
or
jl
bound
push
mov
sbb
leave
aad
xor
add
xchg
aam
jns
push
in
mov
inc
nop
cmp
out
fldcw
xlat
jge
or
xchg
mov
jno
lret
mov
inc
or
dec
jmp
or
push
leave
dec
movsl
lea
fisubs
hlt
aas
mov
jns
sub
or
adc
stos
test
xchg
push
loop
xorl
fwait
shll
adc
mov
and
xchg
dec
outsl
or
int
lcall
jecxz
pop
cltd
les
push
push
subb
push
jnp
call
dec
xor
dec
mov
xor
push
adc
loopne
adc
lret
mov
xchg
dec
jl
cmp
push
sub
xor
ret
adc
mov
sahf
xchg
mov
inc
sarb
mov
dec
sbb
sti
push
or
add
mov
sbb
push
jnp
jmp
sbb
or
das
xorb
jne
dec
or
mov
or
xchg
lret
or
and
lds
xor
mov
das
or
cmpsb
and
sbb
mov
pop
mov
clc
adc
xchg
or
mov
sbb
mov
xchg
loope
pop
or
cmpsb
out
bound
loopne
sbb
adc
pop
or
xor
xchg
or
test
push
test
dec
push
jmp
xchg
pop
or
sbb
into
daa
or
mov
lods
gs
sbb
int3
in
mov
xor
not
stc
or
inc
push
adc
js
gs
mov
aad
push
or
inc
icebp
fsubrs
out
movsl
adc
popf
cwtl
sub
jl
jmp
or
adc
or
rorb
std
sbb
add
imul
movsb
into
sub
test
add
adc
je
mov
cltd
dec
cmp
iret
sbb
sub
fildl
ljmpw
and
sub
notb
inc
xchg
or
xor
mov
mov
loope
sbb
cmp
mov
sub
jb
or
mov
sbb
and
enter
loop
insl
aad
out
out
call
lds
iret
xlat
fstps
out
in
cmpsl
lret
dec
mov
xlat
xchg
sbb
lret
aad
shl
mov
and
or
inc
adc
xor
loop
dec
sbb
in
xor
dec
pop
mov
cmp
jecxz
out
popa
ds
or
xchg
pop
sub
jg
jo
add
cmp
sub
lcallw
aas
or
shl
pop
lods
out
rolb
rcr
mov
jge
pop
or
pushf
or
or
scas
pop
push
sbb
jns
push
movsl
sarb
rcr
sub
or
inc
or
xchg
fistpl
sub
xor
hlt
sub
imul
jge
lods
adc
jne
adc
lahf
idivl
pusha
dec
dec
out
jmp
xor
or
xor
cmpb
inc
fsubl
fisttpl
pop
enter
sbb
adc
mov
or
cmpsl
sub
or
mov
test
cmp
imul
roll
mov
adc
mov
adc
mov
mov
es
iret
rorl
jno
mov
or
xchg
aas
jns
mov
cmp
popf
pop
mov
outsl
adc
cs
insb
mov
ret
jge
repnz
imul
orb
inc
push
das
xchg
daa
mov
mov
std
dec
push
dec
or
nop
jge
cli
or
pop
pop
jmp
std
jne
xor
xchg
or
or
jnp
mov
or
pusha
lcall
push
lods
mov
scas
or
xchg
mov
sbb
in
stos
loop
mov
rorb
or
fidivrs
testb
and
jo
mov
jno
scas
movsl
out
scas
mov
ds
std
or
sub
pop
ret
adc
xor
jl
outsb
mov
mov
add
mov
cmp
mov
fldt
mov
dec
iret
lcall
addr16
inc
adc
inc
mov
mov
xor
lock
pop
into
jae
push
les
and
mov
fisttps
jg
xor
gs
fisttpll
test
mov
gs
loopne
call
adc
mov
xchg
nop
repz
add
test
jge
cmp
mov
negb
sub
cmp
sti
mov
mov
clc
push
cmpsb
insb
rolb
mov
fstp
dec
xchg
sbb
inc
fcompl
cltd
mov
sbb
push
inc
out
loopne
dec
xchg
xchg
clc
shrl
addr16
pop
push
xor
ret
mov
or
inc
inc
mov
sbb
aaa
fcomi
or
mov
jbe
pop
dec
mov
inc
dec
or
fld
imul
lret
fmuls
inc
pop
dec
xchg
lods
jl
and
dec
sub
frstor
icebp
mov
sub
and
push
scas
jnp
in
xchg
popa
xor
xchg
icebp
aad
mov
imul
pop
or
int3
adc
lea
or
call
cmp
or
jp
push
push
dec
adc
dec
mov
dec
add
icebp
in
cmp
shl
pop
add
or
dec
and
or
xor
test
das
ds
in
mov
jl
xchg
clc
push
sub
pop
pop
test
pop
loop
and
adc
push
movsl
cmp
out
or
mov
lods
mov
scas
jno
js
ret
or
mov
pop
mov
notl
push
xor
sub
aad
iret
dec
outsl
sub
mov
jns
or
mov
out
cmp
push
stc
lret
pusha
pop
or
dec
xor
hlt
stos
rorl
push
mov
lods
popa
pop
aad
lret
or
dec
adc
push
ficomps
fists
std
fsubrs
xchg
je
test
sti
add
cltd
lods
sub
icebp
loope,pn
out
ds
orb
mov
rol
or
outsb
fnstcw
cli
push
push
retw
or
neg
inc
inc
sub
in
inc
adc
fwait
push
xchg
sbb
pop
cld
sarl
repnz
xchg
mov
or
lods
push
jp
lock
pop
xor
push
dec
and
xchg
js
pop
mov
pop
xor
lcall
sub
xchg
mov
xchg
mov
jno
fimuls
adc
dec
push
or
out
jle
push
insb
dec
out
mov
fmull
out
outsl
std
lods
mov
pop
cmp
mov
dec
or
in
mov
shll
xchg
jno
or
add
lods
aam
pop
lahf
add
and
int
insb
mov
hlt
scas
push
or
int
push
xchg
in
lods
mov
jo
outsb
jb
mov
and
rcrl
mov
or
xchg
aaa
enter
pop
sbb
xchg
test
jp
add
or
and
mov
mov
jmp
sub
icebp
ss
sahf
add
lods
mov
xchg
dec
stos
pop
or
jo
aad
jp
into
sbb
insl
xlat
jle
or
hlt
fs
cmp
mov
sbb
repz
dec
xor
pop
andl
cmp
ret
jb
mov
jae
test
data16
mov
mov
pop
mov
or
pop
adcl
std
mov
add
mov
sti
or
sarl
pop
dec
or
inc
clc
add
data16
in
push
lret
inc
dec
mov
adc
jno
and
sub
cmp
divl
push
xchg
enter
test
adc
hlt
push
or
mov
rorb
scas
aaa
cli
int3
dec
repnz
test
popf
add
jp
dec
push
dec
adc
lods
xchg
cmp
sbb
imulb
add
push
in
std
cmp
add
xchg
push
sub
cli
dec
inc
orl
insl
and
sahf
aas
cmp
dec
or
stc
adc
pop
outsl
xchg
inc
leave
fmul
out
mov
push
push
add
lahf
into
js
sbb
mov
or
out
fwait
pop
push
jg
adc
out
or
icebp
cmc
ror
dec
push
outsl
call
push
or
popa
sbb
sbb
mov
into
adc
xchg
lock
dec
pop
push
lods
adc
jp
sub
add
sub
inc
inc
lret
aaa
xchg
sub
pop
mov
pop
test
out
sub
adc
cmc
or
into
jne
aad
int
jg
mov
and
and
movsl
mov
flds
testb
jecxz
or
ficompl
or
sbb
dec
or
dec
jno
push
cmc
imul
or
andl
filds
pop
sbb
push
shrl
cld
mov
cli
and
call
or
cs
push
push
or
adc
repnz
pop
sbb
adc
xchg
or
int3
mov
lea
push
stc
loope
scas
sbb
outsl
ds
mov
imul
stos
movzbl
mov
std
lahf
loopne
nop
sarl
fst
stos
in
or
jge
adc
sbb
or
xor
fisttps
mov
nop
jno
xchg
rolb
mov
repz
mov
or
loope
sahf
prefetch
sbb
test
clc
int3
test
or
cmpsb
and
mov
inc
xlat
mov
xchg
pop
cli
adc
sub
adcl
lret
js
fbstp
out
add
cmpsb
outsb
rcrb
in
mov
iret
cmp
adc
add
fnsave
sub
mov
mov
or
inc
jp
cmp
cli
into
outsb
adc
or
fdivl
or
push
shrl
mov
sub
fwait
xchg
or
add
xchg
cld
push
lds
addb
mov
xchg
das
call
inc
adc
jg
dec
out
pop
rorl
push
repz
rorl
in
inc
gs
ja
adc
mov
cmc
jno,pn
rclb
gs
mov
aam
jb
mov
xor
cmp
aad
adc
sbb
or
inc
ficoml
dec
xchg
or
sbb
stos
cmp
pop
lods
and
das
push
push
rep
aas
lea
inc
dec
shr
pop
test
cmpsb
push
out
cmpsl
xchg
aad
lods
push
xchg
and
ss
enter
sbb
js
mov
mov
or
mov
cmpsl
xor
pop
sbb
xchg
or
push
out
lods
dec
mov
sbb
lds
cs
cmp
outsl
xor
scas
dec
test
dec
sbb
or
adc
ret
imul
inc
jnp
popf
add
bound
stos
fsts
testl
push
popf
call
or
lea
or
lcall
jg
inc
xchg
fsubrs
add
jmp
add
shlb
lahf
xchg
stos
pop
dec
cwtl
lret
lret
imul
sbb
add
cmp
out
fs
jle
push
out
dec
mov
jo
pop
ficomps
xor
inc
clc
incb
fistpll
loope,pt
cld
or
stos
pop
data16
sub
sub
sbb
or
mov
sbb
push
fwait
pop
stos
sbb
or
xchg
push
fsubp
int
or
jbe
cmpl
cmp
and
add
mov
dec
das
cmc
mov
add
xchg
add
mov
adc
fisttpl
popf
jmp
mov
sbb
cmc
or
xchg
jnp
or
pop
jp
pop
jmp
shlb
add
jo
jmp
push
jnp
sbb
loopne
aad
sub
mov
sti
adc
dec
sbb
or
in
or
or
adc
cli
je
adc
shlb
fs
sub
fcoml
add
jecxz
test
or
xchg
sahf
xchg
sub
mov
add
int3
in
mov
pop
fimuls
jg
xchg
pop
imul
cmp
outsl
incb
or
stos
mov
les
imul
cwtl
imul
out
int3
cmp
push
aad
cltd
pop
pop
sbb
or
xchg
push
aaa
mov
push
pop
sbb
dec
dec
mov
adc
cmp
fisttpll
mov
or
xchg
push
ss
cmp
jl
scas
sbb
or
xchg
lods
pcmpgtd
ja
loop
inc
inc
adc
mov
cmc
or
jno
pushf
or
push
pop
jg
cmp
mov
cmp
dec
bound
test
xchg
scas
dec
test
lahf
push
mov
cmc
js
inc
and
stos
arpl
adc
sub
mov
mov
push
mov
fwait
xor
scas
mov
pop
cmc
mov
cmpb
lock
stc
jl
mov
dec
in
pop
gs
push
pop
and
imul
or
ds
jle
fsubs
jae
arpl
fwait
not
mov
dec
in
push
add
inc
cmpsb
sbb
or
inc
cmp
std
cwtl
pushfw
incl
sbb
or
inc
push
fwait
jno
sub
inc
sub
ret
or
outsl
xor
mov
sub
xchg
lcall
dec
xchg
mov
lahf
xor
and
xor
xchg
push
or
cmp
mov
add
sub
inc
mov
adc
push
orb
dec
pop
adcl
test
cmpsb
outsl
dec
das
dec
lea
inc
pop
popf
imul
aad
xor
icebp
mov
jne
sub
lods
jno
rcl
sub
std
push
int3
jbe
ja
imul
and
arpl
inc
aas
ja
test
aad
dec
sub
inc
sbb
imul
call
push
insb
push
cld
sbb
jne
repnz
test
dec
push
or
js
mov
xchg
or
mov
pop
or
dec
and
sub
jb
fistpl
pop
dec
inc
add
pop
pop
int
add
adc
pop
std
scas
dec
lods
jge
jae
sbb
push
dec
pop
sar
imul
xchg
sbb
push
lods
xchg
jae
rcrl
decl
sbb
or
mov
ret
pop
add
mov
testb
pop
sub
inc
mov
es
and
dec
mov
fdivrs
xor
push
insl
or
jmp
out
pop
or
pop
ds
push
jnp
mov
rol
mov
dec
inc
add
outsl
daa
xchg
xor
push
xor
std
mov
aas
stos
ficoms
or
mov
out
xchg
inc
push
push
mov
or
fisttps
cmpsb
push
mov
lret
sbb
insb
or
insl
pop
scas
jbe
push
test
inc
mov
pop
cld
aad
xchg
dec
and
data16
cmpsb
dec
test
add
lea
pop
in
aas
jo
or
ds
sub
insb
popa
insb
dec
xor
scas
or
sbb
int3
rcll
loopne
adc
sub
into
imul
or
jmp
mov
pop
syscall
nop
mov
jno
mov
cmpsl
jae
fimull
xor
mov
or
test
std
or
shlb
cli
xchg
or
jae,pt
or
jns
mov
cmpsb
mov
and
dec
aad
mov
adc
pop
or
sub
lods
mov
ja
push
call
add
stc
sbb
popf
or
outsb
mov
xor
mov
xor
aaa
nop
pop
mov
push
in
test
mov
xchg
mov
lds
push
sub
sahf
ret
ja
mov
pop
loope
mov
dec
jmp
xor
out
xor
cltd
hlt
rcll
and
push
add
push
pop
pop
pop
push
or
xor
out
and
pop
cmpb
add
lods
sub
insl
adc
popa
xlat
cs
dec
xor
dec
jno
pop
and
test
mov
fnstenv
ljmp
sub
dec
inc
adc
and
fnsave
or
outsl
adcl
cs
or
sbbl
popf
xor
or
inc
sub
jecxz
and
addb
jl
or
xor
pop
mov
test
int3
mov
iret
adc
inc
movsl
movsl
sub
sub
out
adc
jae
or
lods
jl
es
mov
les
fbstp
cmp
jge
xor
dec
mov
mov
stos
ret
jmp
push
sub
jle
add
mov
push
inc
fcmovne
sbb
roll
icebp
or
test
mov
push
adc
mov
stos
fld
mov
test
or
js
into
mov
mov
mov
aas
add
stc
mov
add
rclb
iret
push
fidivrs
inc
adc
or
insb
aaa
mov
dec
jne
jbe
add
cmc
lds
dec
and
mov
push
cwtl
xchg
sbb
or
leave
cmp
mov
lret
push
or
jo
or
xchg
repz
pop
push
cmp
or
push
andl
jecxz
data16
add
sbb
hlt
jae
scas
push
test
cli
sub
inc
pop
or
push
add
and
inc
sbb
jmp
call
ror
cwtl
addb
cmp
and
or
adc
insb
ljmp
mov
jns
mov
fstps
jmp
jb
repz
fwait
or
pop
jcxz
in
add
aam
pop
test
pop
lods
adc
addr16
movsl
sub
mov
dec
xchg
push
test
cltd
addr16
push
pushf
mov
mov
sbb
out
dec
sub
lods
or
loop
or
enter
or
inc
lahf
or
jge
jecxz
or
daa
cmp
lods
rcr
add
jns
jb
fiaddl
or
mov
xchg
movb
in
insb
jl
or
jne
or
loope
dec
cmp
int
or
rclb
mov
pop
or
imul
in
ljmp
or
xor
push
or
lea
bound
cmp
or
lret
push
or
sahf
push
mov
mov
jnp
mov
or
cli
xchg
or
test
in
imull
cmc
int3
xchg
fs
dec
hlt
clc
mov
mov
sub
sub
or
lahf
jnp
jbe
sti
or
and
outsb
imul
or
cld
mov
je
dec
jnp
adc
xchg
sub
adc
xchg
or
pusha
jle
fmull
fisttpll
jb
add
xor
lods
pop
into
icebp
dec
xchg
bound
dec
imul
cmp
cmp
dec
in
push
inc
mov
adc
repz
out
addb
lret
sbb
or
ljmp
fdiv
and
add
or
xor
test
test
std
push
aam
mov
rorb
dec
or
mov
and
and
int
inc
xor
lea
mov
pusha
jae
and
leave
imul
sub
mov
seta
fimull
mov
hlt
mov
mov
cmc
rcll
jp
sub
hlt
add
or
and
add
jo
aad
cmpsl
mov
add
or
jge
xor
mov
in
cltd
hlt
xchg
ja
sbb
aas
leave
xlat
or
ret
xor
iret
dec
adc
clc
lea
or
shrb
test
cmpsl
jnp
jae
xor
fwait
or
std
jle
dec
in
or
lods
sbb
bound
or
fxch
roll
std
dec
rcrb
or
fcom
fmull
xor
fbstp
das
sbb
sub
pop
or
xchg
mov
dec
mov
out
adc
in
leave
dec
push
xlat
stos
jmp
test
dec
or
cs
or
push
pop
pop
inc
or
pop
daa
imul
mov
sub
pop
or
inc
and
xlat
out
xchg
mov
iret
push
stc
loop
inc
push
xor
jns
lahf
in
rep
inc
jae
mov
mov
cmovnp
pusha
incl
inc
or
mov
mov
pop
sub
cs
cmc
push
sbb
scas
jmp
jecxz
orl
adc
jle
push
into
lock
inc
mov
stos
push
shr
or
cmp
pop
pop
les
mov
or
inc
clc
xchg
stos
jae
add
and
ss
sub
or
cmp
pop
or
or
push
int
add
mov
xchg
sub
xor
subl
inc
cltd
int3
sub
jns
sbb
jmp
lock
out
aaa
ss
or
pop
insb
js
hlt
outsl
fistpl
and
pop
sbb
adcb
mov
std
pusha
or
pop
loop
out
inc
dec
jle
lret
dec
sbb
in
scas
fbstp
insb
cltd
mov
mov
sbb
xchg
outsb
sub
jbe
insl
jb
cmp
icebp
inc
jl
push
add
in
or
sub
xor
or
cmc
and
or
push
or
jne
bound
pop
subl
xor
xchg
mov
fstpl
test
mov
movsb
jmp
repz
cmp
xchg
sbb
movsl
ss
lods
mov
or
jmp
in
bound
sbb
jbe
lods
adc
int3
sub
push
push
dec
insb
rclb
mov
lret
or
xchg
or
fistl
stos
or
stc
cmpsl
add
int
push
fmuls
pushf
add
es
sahf
jb
stos
cmp
dec
push
adc
and
sbb
int3
and
push
int3
cmc
sahf
pop
rcrl
mov
or
sub
cmp
mov
xchg
and
jno
pop
jbe
sub
call
xor
cmp
inc
outsb
or
mov
jno
or
and
in
in
jg
inc
mov
loop
and
adc
pop
and
icebp
out
shrb
sbb
xchg
pop
or
cltd
cmp
add
rorb
call
and
les
add
aam
cld
insb
or
mov
insl
call
dec
push
lods
cmp
das
and
scas
and
jno
fisubl
mov
lea
add
scas
cmp
pop
test
mov
push
pop
test
das
or
bound
lods
icebp
or
xchg
loopne
insl
fidivs
and
push
mov
sub
aad
pop
add
mov
sbb
and
xorb
or
dec
xor
adc
sub
in
ficomps
sub
pop
mov
and
push
push
testl
sbb
cmp
jb
mov
int
inc
enter
add
iret
dec
and
sbb
ds
push
inc
clc
dec
adc
loop
dec
in
adc
adcl
movsb
inc
sti
and
fmul
mov
prefetch
sbb
pop
in
jmp
repnz
push
aaa
outsl
push
movsl
or
mov
pop
inc
or
adc
fisttps
xchg
ss
fdivrs
fildl
jb
into
out
lods
lahf
mov
or
dec
xchg
mov
lock
sbb
enter
popf
sub
add
or
pop
cmp
mov
pop
sub
jecxz
add
or
mov
and
xor
sbb
pop
shll
sub
jge
icebp
or
outsl
dec
fimuls
mov
in
rcrb
fistps
jo
or
arpl
aam
lret
andl
jns
xlat
int3
jecxz
add
xor
jae
and
or
push
cmp
xchg
or
and
fwait
into
prefetchwt1
ja
cmp
add
adc
add
xchg
shll
mov
int3
pop
filds
sahf
in
into
lods
cmp
push
and
dec
push
jle
add
in
stos
jmp
in
pusha
fisubs
das
xor
xor
cmp
dec
add
fsub
sar
and
es
cltd
adc
or
ret
push
testb
adc
xchg
or
cmp
addr16
cmp
outsl
push
aam
mov
rcl
dec
xchg
push
add
fsubrl
mov
fimuls
cwtl
mov
aas
dec
lea
xor
mov
add
stos
fstpl
mov
sbb
dec
rorl
orl
mov
mov
in
sub
pop
fmull
sbb
insl
jecxz
pop
lods
in
xor
outsl
jo
push
jp
test
or
jnp
xor
stos
mov
js
rolb
popf
in
ss
xor
in
push
dec
cs
mov
es
pop
imul
xchg
loop
arpl
psubw
fdivl
loop
jle
xchg
aad
mov
mov
sahf
test
mov
pop
mov
fimull
cmp
arpl
push
xor
sub
xchg
imul
jp
sub
jno
cmpsb
adc
or
iret
or
leave
fcmovbe
push
and
cltd
sub
ss
in
dec
icebp
popl
in
push
mov
xchg
pop
xchg
in
sahf
dec
mov
mov
or
sub
clc
push
or
push
jle
mov
adc
daa
lods
cmp
ficoml
dec
and
sbb
inc
or
addr16
sub
aaa
push
dec
mov
cmpsl
stc
dec
push
sub
sub
adc
mov
cmp
xor
pop
xor
adcb
mov
ret
add
lea
popa
andl
mov
out
or
mov
jbe
jo
fcomps
test
sbb
ret
or
imul
pop
xchg
mov
imul
mov
hlt
adc
xchg
cltd
mov
jno
sbb
or
jbe
mov
mov
jp
rolb
sahf
add
lahf
jp
daa
dec
test
cs
data16
sub
sahf
xor
les
push
mov
push
inc
stos
ficompl
or
movsb
decb
add
ret
add
mov
in
xchg
pop
xchg
movsl
inc
sub
xor
sub
sub
out
iret
add
jecxz
cmp
cld
xchg
jecxz
fdivrs
inc
jns
scas
es
mov
and
lods
xor
jmp
and
or
jns
insb
dec
in
cmp
int3
mov
cmc
mov
out
mov
rorb
shll
shll
pop
shll
dec
cmp
xlat
push
sub
adc
xor
andb
mov
adc
inc
fisttpl
adc
stos
popf
mov
xchg
lret
push
cs
mov
lods
out
xchg
sbb
hlt
aad
mov
or
xchg
cwtl
jg
or
or
mov
call
es
and
nop
in
cmp
push
mov
outsl
cmp
shll
pop
int
popf
jle
or
scas
mov
mov
jge
icebp
sarl
addr16
pop
int
or
inc
dec
mov
or
cmp
inc
sbbb
push
scas
sub
test
data16
or
xchg
cmp
jmp
ljmp
in
adc
sub
cmp
pop
xchg
inc
push
fwait
or
jne
aaa
sahf
out
insl
lret
jle
and
aad
cs
dec
dec
jne
sub
hlt
fs
and
movsb
aad
std
and
sti
mov
jo
or
in
aad
insb
mov
mov
fnstcw
lea
jg
mov
push
pop
rclb
cmpsl
adc
sub
inc
pop
mov
jmp
mov
cmp
flds
push
cmp
or
in
out
int3
cmp
add
out
xor
dec
orl
out
mov
ret
ss
xchg
and
xchg
or
mov
loop
or
aas
dec
or
out
lods
cmc
shlb
or
loopne
or
lds
sarb
xchg
fcoms
or
leave
or
push
or
aaa
cmp
and
xchg
jmp
insb
decl
mov
mov
iret
xor
iret
xchg
mov
mov
or
in
jl
insb
in
sub
mov
sbb
imul
xchg
jo
loop
ljmp
ljmp
cs
sahf
jp
push
xchg
ror
notb
out
inc
adc
js
ret
lret
sub
xchg
popf
add
add
movsb
popf
enter
sbb
stos
test
iret
call
push
xchg
cmp
cld
or
ljmp
shll
aaa
pusha
inc
lods
fildl
jne
push
adc
outsb
adcl
cmp
xchg
orb
in
jmp
or
cmpsl
or
or
and
or
test
sti
mov
mov
fnstenv
sbb
pushf
lods
push
fmuls
jns
or
dec
jmp
cmp
iret
icebp
in
jp
lcall
out
loop
ret
outsb
sub
shlb
jmp
stos
fsubp
mov
incb
mov
xchg
test
cli
fwait
sbb
aad
sets
cmpsl
rep
out
adc
lods
jge
pop
add
dec
lods
jno
adc
add
pop
jns
sub
or
fmuls
or
mov
xor
cltd
add
cmp
js
push
sbb
test
add
cmp
sub
pop
mov
sbb
mov
jae
mov
push
sbb
push
int
addb
xchg
inc
push
cs
or
mov
jecxz
lock
lret
and
rcrb
enter
or
sti
dec
cmp
xor
lret
out
mov
hlt
sub
jp
js
fbld
adc
xchg
int3
loop
push
cld
in
lods
pop
jmp
push
and
cli
out
call
jno
dec
rcll
aam
push
add
mov
mov
dec
adc
rolb
and
mov
lahf
test
dec
jo
lahf
ret
mov
sbb
insb
hlt
xchg
jne
xchg
mov
mov
jg
sbb
ds
arpl
icebp
mov
mov
push
sub
lds
xor
loopne
je
out
repz
push
mov
ss
xor
xorb
pop
push
pop
pop
stc
cmp
add
loop
cmpsl
sbb
aad
xor
cs
icebp
jae
sub
or
mov
sub
in
clc
add
adc
mov
add
pusha
loope
jmp
outsb
adc
loop
push
sbb
adc
mov
dec
inc
repnz
xchg
or
sti
fs
ds
aaa
shlb
es
dec
jle
out
sahf
or
pop
in
dec
push
int3
lds
or
or
stc
loopne
jmp
lret
mov
in
mov
cmpsb
and
mov
inc
out
xchg
or
inc
xlat
out
jmp
mov
pop
jmp
pop
dec
add
adc
sub
repnz
test
xchg
sbb
sub
sbb
mov
xor
jp
or
movups
inc
in
in
aam
lods
stos
pop
cli
cli
imul
out
int3
std
sub
adc
ljmp
enter
jl
sbb
adc
pop
mov
push
jmp
out
sbb
jp
sti
add
or
jmp
jo
or
sub
add
or
fwait
inc
adc
xchg
pop
sub
sub
or
js
push
pop
out
in
ljmp
nop
or
sbb
or
mov
push
imul
rcr
adc
sbb
adc
or
or
sbb
in
sbb
pop
leave
in
mov
jle
pop
leave
ja
aam
stos
int3
push
xor
ud0
and
cmp
out
inc
adc
xchg
push
and
ljmp
test
inc
or
push
sbb
stos
ljmp
or
inc
sub
adcb
sub
push
add
adc
cli
dec
or
add
jmp
int3
push
sahf
sub
gs
out
or
leave
push
add
sbb
testl
push
or
push
out
hlt
mov
cmp
jl
scas
cmp
fistpl
push
dec
push
jmp
sbb
xchg
push
popf
sbb
adc
js
pop
lret
or
loopne
sub
adc
or
out
add
outsl
xor
aam
and
pop
jp
adc
pop
add
mov
cli
pop
adc
in
decl
int3
sbb
push
insl
sub
sbb
bswap
or
inc
pop
or
loopne
sbb
dec
sub
push
adc
in
sbb
sti
add
sbb
adc
in
adc
int3
adc
jmp
push
or
mov
mov
sub
int3
test
or
add
sub
scas
or
adc
inc
push
sbb
mov
rcrb
sbb
cmp
sbb
sbb
ljmp
push
sbb
and
les
fsubl
jnp
or
add
jp
into
cld
xor
adc
and
in
hlt
pushf
sub
nopl
sti
adc
lret
sti
sbb
or
insb
inc
adc
or
add
lcall
adc
pop
cmp
adc
or
pushf
popf
rclb
sbb
add
or
xor
adc
popf
call
fwait
cmp
lcall
add
unpckhps
ja
aam
gs
or
xor
aam
pop
loope
adc
pop
xchg
or
cmp
mov
adc
loope
or
movlps
cmp
sbb
fldcw
or
or
adc
pop
xlat
and
sub
or
xadd
movsl
sbb
adc
stos
add
test
lcall
in
pop
test
lea
jnp
sbb
fucomp
or
push
add
add
or
xchg
insb
fiadds
cmpsl
xchg
sbb
push
push
clc
lcall
inc
sbb
adc
or
movsb
push
lock
adc
sbb
pop
mov
ja
sbb
and
adcb
lret
pop
push
or
in
push
adc
push
clc
add
sbb
in
cmpsl
mov
icebp
pop
adc
sbb
pop
or
mulb
les
mov
or
wbinvd
mov
adc
add
and
xor
push
push
adc
add
add
pop
or
add
scas
push
or
outsb
push
or
or
mov
lret
cwtl
mov
mov
jnp
loop
mov
mov
sbb
pusha
cli
test
xchg
lret
mov
jp
pop
ljmp
scas
test
sbb
popf
adc
insl
call
popf
pop
int3
adc
sbb
repnz
sbb
orl
cs
add
push
insl
hlt
or
or
xchg
mov
loop
adc
arpl
jp
loopne
leave
in
ja
dec
sub
test
sub
cmpsb
stos
push
pop
jae
add
adc
stos
fcoml
sub
xchg
incl
int
pop
pop
call
mov
or
ret
push
adc
movsb
sbb
cltd
or
setbe
out
cli
xchg
pushf
add
jl
and
mov
pop
mov
add
out
rcll
stos
inc
sub
or
add
mov
jle
pushf
in
lret
adc
push
pushf
or
pop
lock
or
add
or
or
mov
paddq
mov
or
cmpsb
pop
ljmp
decl
add
sub
loop
xorb
sbb
hlt
adc
out
or
jne
pop
repnz
adc
rclb
add
fisttpl
pop
pushf
arpl
out
out
or
scas
lods
xlat
lret
jbe
fwait
push
push
pop
out
test
mov
push
cld
sbb
or
xchg
cmpsb
sbb
push
pop
add
out
sbb
push
cmpsb
and
sbb
rolb
adc
inc
sbb
sub
out
dec
ljmp
pop
add
jns
inc
inc
mov
or
ljmp
mov
subb
or
repnz
les
les
jecxz
pop
inc
test
adc
or
jle
subb
pop
inc
push
pop
push
adc
dec
adc
syscall
fs
sub
subb
pop
sbb
les
adc
lahf
or
mov
inc
les
sahf
inc
cmp
add
nop
inc
jg
call
pushf
inc
sbb
sbb
mov
repnz
adc
mulps
push
cmpsb
sbb
add
inc
decl
into
push
out
adc
adc
sahf
or
jns
leave
adc
xchg
sbb
jo
jo
pop
adc
or
sbb
adc
popf
add
or
les
mov
testb
push
jmp
movsl
adc
xchg
sbb
push
adc
add
sbb
xor
in
mov
sbb
xor
sahf
cmp
push
dec
or
adc
dec
mov
push
rcll
mov
sbb
out
lods
add
adc
push
out
and
rorb
loope
outsb
pushf
adc
xchg
inc
fnsave
mov
loopne
pop
lods
mov
jmp
cmc
incl
or
ret
mov
int3
adc
adc
int
and
add
pop
lea
mov
mov
push
adc
pop
mov
into
movsb
sbb
mov
ljmp
add
pop
stos
mov
cmp
push
adc
sub
inc
ljmp
stos
xchg
movntq
add
or
or
stc
push
inc
sbb
call
xchg
add
lea
mov
lret
sbb
xchg
push
adc
mov
setns
push
add
pop
pop
movsb
mov
pop
push
mov
sbb
sbb
mov
adc
push
roll
mov
lret
test
add
inc
test
loopne
add
push
jl
lcall
xchg
arpl
aam
xchg
fistps
add
dec
jbe
or
aam
in
test
inc
sbb
imul
test
insb
in
adc
add
mov
sbb
adc
mov
or
sub
and
adc
cmpsl
push
add
pop
les
or
loopne
push
sbb
and
sbb
add
loop
adc
sub
inc
mov
test
jecxz
sub
dec
or
push
push
sbb
or
or
sbb
test
or
out
jl
add
mov
pop
rcll
popa
ret
mov
orl
enter
adc
aad
or
inc
shl
inc
lcall
sbb
loope
sub
pop
inc
fs
jp
cli
add
call
enter
fimull
or
mov
nop
add
sbb
in
sub
add
mov
cmp
ret
call
popa
test
add
adc
std
add
add
jmp
addl
popa
test
adc
sbb
fyl2xp1
sbb
cmc
and
sub
mov
mov
cmp
jl
push
in
sub
into
inc
cmpsb
mov
cmp
in
sub
in
repnz
sbb
lods
outsl
popf
and
jns
cmp
push
mov
and
xchg
testb
xor
cwtl
and
or
sub
adc
mov
mov
lock
pushf
and
or
rclb
jle
add
adc
loop
ljmp
out
mov
sbb
movsb
rclb
rorb
loop
ljmp
pop
add
rcl
add
cli
mov
adc
nop
mov
mov
dec
ret
inc
adc
add
pop
pop
and
or
jge
pop
mov
or
std
and
inc
pop
and
fcoms
pop
test
or
adc
roll
sub
pop
pop
xor
sar
jmp
or
loopne
sub
lret
add
clc
sbb
jl
lret
pop
add
adc
les
filds
add
mov
or
fwait
and
fwait
jge
pop
fwait
es
fwait
int
loop
nop
mov
sbb
add
jmp
pop
push
pop
movsb
pop
lock
xor
pop
adc
cli
and
sbb
sbb
mov
ljmp
dec
pop
sahf
sbbb
mov
dec
push
out
or
lock
rclb
mov
add
lds
les
dec
ljmp
cmp
stos
mov
clc
aad
pop
sbb
cwtl
or
in
sbb
int3
push
add
out
or
jmp
enter
stos
jns
xchg
leave
jmp
lret
pop
add
cli
enter
mov
sbb
jns
mov
push
mov
ljmp
jmp
mov
add
fimull
xchg
sub
cwtl
dec
cli
jmp
enter
lret
addr16
fwait
sub
sub
xchg
data16
jmp
enter
daa
sti
es
and
int3
mov
or
aam
sub
in
add
cli
lock
in
pushf
test
sti
push
lret
adc
xlat
adc
mov
jecxz
mov
mov
mov
add
xor
pop
or
hlt
mov
pop
add
or
sub
add
or
pushl
fsubrl
es
fwait
pushl
xor
mov
fwait
pop
decl
push
mov
or
add
add
pop
arpl
push
xor
jg
rclb
je
or
fisttps
xor
fldl
mov
push
bound
repnz
mov
cmpsb
sub
sbb
or
movsb
mov
cmp
adc
adc
test
stos
mov
or
add
add
mov
or
adc
push
mov
mov
lods
sub
xor
cs
push
push
pushf
or
mov
and
or
or
mov
scas
test
sub
sbb
sbb
cwtl
or
lahf
mov
cmp
int3
aam
into
dec
or
hlt
out
imul
ficomps
inc
push
pop
cld
in
jnp
arpl
enter
inc
or
lock
fadd
fcmovb
push
or
loopne
loop
or
rol
int
or
repz
insb
or
ret
aad
pop
or
jecxz
std
jl
fs
iret
leave
rorl
push
dec
push
out
jmp
push
xlat
mov
inc
pop
inc
neg
stc
loope
dec
pusha
jp
in
dec
mov
or
jle
sub
add
scas
mov
mov
aam
mov
rcrb
cwtl
adc
push
add
fbld
sbb
adc
pushf
sbb
pusha
inc
test
pop
ljmp
cmp
add
lahf
mov
sbb
pusha
add
adc
or
fs
adc
mov
mov
sbb
mov
call
lret
adc
push
les
test
out
adc
lcall
pop
arpl
or
mov
push
enter
push
mov
adc
sbb
fisubs
lds
je
mov
adc
adc
ja
jecxz
push
or
sahf
popf
mov
rcrb
ljmp
addl
lcall
pop
stc
sbb
pop
pop
cmp
cli
or
cmp
adc
or
sti
std
cmp
lidtl
cmp
add
pop
decb
adc
pop
ja
les
or
push
cs
sarb
jecxz
mov
sbb
or
inc
xor
add
in
mov
xchg
adc
lds
push
fmull
sbb
sbb
add
scas
adc
add
fs
adc
add
pushf
daa
mov
add
lret
incl
jno
jg
jl
mov
test
pop
incl
or
jg
adc
add
adc
mov
pop
push
movsb
add
push
mov
push
test
into
int
adc
lcall
add
cli
lods
test
cli
or
sbb
push
add
or
or
cli
dec
test
sbb
jecxz
xchg
fldl
pop
push
or
jp
adc
jnp
push
cmp
clc
out
lcall
pop
lds
mov
lock
xrelease
orl
in
sub
dec
mov
adc
mov
push
out
sbb
cltd
enter
orl
xchg
jmp
or
aad
or
cltd
add
push
imul
mov
push
mov
mov
pop
mov
lods
adc
sahf
sbb
aad
int3
sub
mov
in
stos
push
decl
add
or
fcomps
dec
mov
ljmp
sarb
loopne
inc
sbb
xchg
insb
fsubrs
fiadds
add
mov
inc
call
mov
add
pop
xchg
jle
gs
hlt
pusha
andb
and
cmpsl
inc
pop
mov
pusha
pop
out
std
movl
ret
xchg
push
ret
sahf
xchg
adc
or
das
int3
push
push
push
fs
mov
pop
ret
xor
jmp
cld
inc
fistpll
stc
ljmp
and
xor
cmp
cmp
fwait
in
adc
or
pcmpeqb
or
push
cmp
and
inc
add
lcall
push
out
add
jae
mov
out
out
stc
mov
add
stc
sub
xchg
jmp
enter
pop
add
push
rorb
mov
orb
sarb
adc
loop
inc
dec
add
nop
incb
and
or
sahf
mov
std
sbb
popf
int3
fistps
lea
popf
addl
out
sub
add
inc
sbb
pusha
stc
sbb
cli
pop
rorl
loop
addb
xchg
lret
adc
sti
imul
jle
jecxz
out
and
cltd
fs
pusha
xchg
add
sbb
lds
sbb
bound
mov
in
sub
xchg
cwtl
lahf
mov
icebp
pushf
arpl
sbb
das
sti
mov
in
enter
cmp
rorb
mov
pop
enter
test
jb
sbb
mov
nop
adc
cld
push
add
mov
push
pop
lock
popa
mov
pop
into
add
pop
rclb
mov
les
movsl
in
or
or
push
and
add
sbb
push
fnstenv
push
sbb
mov
or
in
push
jmp
out
add
sbb
call
push
test
push
sti
sub
and
or
add
popf
push
or
lcall
adc
or
lock
lods
cmpsl
adc
sbb
inc
jp
cli
push
or
in
push
cltd
add
sbb
lcall
and
add
fs
xor
aam
pop
and
or
xchg
ficompl
rclb
ds
cld
sbb
xor
call
pop
cwtl
xchg
mov
or
mov
filds
mov
test
adc
mov
push
add
adc
das
lods
test
fs
mov
sbb
adc
jecxz
daa
push
dec
mov
sub
xchg
and
sub
jnp
fiaddl
shrb
sbb
mov
loopne
jbe
adc
cli
out
mov
sub
fs
dec
shl
jb
or
mov
enter
inc
cmp
fcoml
call
test
xchg
lret
fmul
push
inc
or
sub
xchg
test
nop
movl
mov
or
aas
rclb
js
pop
mov
mov
adc
push
xchg
loope
push
push
in
inc
push
and
adc
ficomps
lret
mov
pop
test
leave
mov
les
jg
loopne
sub
or
and
pop
pusha
lret
inc
imul
mov
jb
push
push
pop
mov
movsb
push
sub
shll
add
push
mov
shl
mov
adc
test
lret
jg
std
or
imul
sbb
add
cmc
lcall
dec
or
xchg
andl
lret
push
mov
fs
sub
add
and
dec
pop
pop
lldt
popl
in
pushf
and
testb
xor
mov
pop
ret
lds
cs
mov
xchg
cwtl
sti
adc
jecxz
movsl
movsb
push
cltd
mov
sub
arpl
mov
lods
inc
inc
test
lahf
nop
jg
lcall
or
int
sbb
xchg
or
stos
push
popl
push
add
in
mov
std
jmp
fistpl
incl
jmp
or
out
adc
popf
mull
jae
jb
aam
ljmp
or
jle
test
cmp
loopne
sahf
loopne
mov
lcall
cmp
test
movsb
in
xor
adc
dec
push
or
pmaddwd
mov
mov
adc
pop
add
rcll
pop
and
jnp
outsb
add
mov
aam
dec
and
jns
mov
cs
pop
add
add
sub
or
push
mov
or
xchg
leave
in
or
inc
test
add
inc
test
fwait
jl
add
mov
daa
enter
out
subb
pop
or
in
sbb
aad
out
or
out
or
push
adc
add
adc
insb
insb
add
movsb
and
sbb
dec
or
ret
xor
mov
lahf
cli
aas
call
unpckhps
out
or
dec
int3
sbb
cmp
cli
or
jmp
xchg
mov
fistpll
and
cmp
pop
add
dec
xor
lret
mov
stc
and
jmp
inc
icebp
or
add
add
lock
filds
sbb
mov
or
out
pop
adc
sbb
and
adc
cltd
dec
xchg
or
pop
movsb
jno
loopne
shl
subl
pop
push
or
nop
pop
xchg
or
repz
movsb
xchg
jbe
inc
aam
or
inc
xor
push
pop
ljmp
repz
adc
xor
and
mov
iret
xor
pop
or
push
cwtl
mov
cltd
adc
and
mov
ljmp
jmp
push
mov
adc
out
les
bound
or
int3
dec
test
jl
mov
and
xchg
pop
inc
loop
clc
sbb
aad
xchg
mov
jge
push
ret
call
mov
add
enter
inc
add
stos
sbb
sbb
pushf
or
mov
mov
std
add
cmp
sub
adc
xchg
ljmp
hlt
sub
push
sbb
inc
cld
mov
icebp
xchg
jns
push
addr16
adc
dec
dec
or
sub
pop
addb
adc
sub
jne
add
in
or
add
push
ret
fdivr
nop
mov
pavgb
cmp
push
push
add
pop
cmp
cli
add
in
sti
decl
and
sub
sbb
cmp
cmp
fchs
push
out
jae
or
out
or
in
in
pop
nop
xchg
or
xchg
xchg
jmp
xor
sbb
pop
sub
push
add
arpl
aas
jle
popl
js
cli
lods
ret
mov
or
imul
inc
or
sbb
test
mov
movsb
xor
rcr
cmp
stc
adc
jo
mov
sbb
xor
test
lret
sub
inc
or
bndldx
mov
out
data16
inc
arpl
arpl
incl
imul
repz
fs
push
subb
mov
add
push
mov
pushf
mov
inc
repz
sub
sub
adc
add
seta
notl
xchg
mov
dec
and
shrb
adc
mov
inc
je
xchg
or
stos
pusha
push
push
lds
leave
mov
out
add
xchg
sti
jnp
es
mov
sbb
daa
movb
rcrb
inc
push
out
test
add
or
xor
push
or
in
add
mov
out
push
out
dec
imul
add
sbb
ljmp
or
fs
mov
push
jo
xor
dec
call
pop
mov
cmp
jbe
je
int3
outsl
sub
enter
daa
add
lret
mov
cld
adc
push
psubw
pop
jmp
lret
cmp
subl
rorb
pop
and
or
pop
mov
out
mov
mov
pop
dec
mov
mov
ja
clc
push
jge
or
add
clc
shrl
iret
imul
xchg
sbb
jmp
mov
mov
or
sbb
scas
ljmp
add
ret
or
or
push
xchg
and
and
mov
push
lcall
inc
jl
je
mov
pop
push
pushf
inc
rorb
mov
sbb
pusha
jp
dec
cmp
out
faddl
out
mov
out
shl
sahf
inc
stc
or
jmp
lret
addl
pop
cmp
test
adcb
dec
cmp
add
int3
pushf
fs
cmp
and
sub
and
loope
fnstenv
test
orb
call
int
mov
shrb
ljmp
jb
clc
add
sub
inc
lea
or
inc
loope
das
jmp
outsb
inc
add
ljmp
ret
cmp
pop
mov
add
sbb
aaa
jg
in
sub
mov
jge
cmc
aas
in
cmpb
cmpsl
int3
adc
and
loop
test
aaa
hlt
mov
inc
mov
mov
push
ret
push
cli
xor
mov
repz
dec
movsb
xor
aas
jge
or
push
inc
std
xchg
sbb
or
inc
jp
js
andb
pop
inc
xchg
popf
add
ljmp
push
in
in
aas
mov
pop
pop
and
jg
int
and
sbb
lods
imul
test
push
inc
sbb
push
cmp
xor
mov
adc
mov
xchg
jmp
sub
lcall
outsl
mov
or
lcall
adc
movsl
insl
xchg
mov
ljmp
push
mov
add
cli
or
data16
inc
sti
add
pop
push
or
loop
sbb
ljmp
add
xchg
stc
call
ljmp
std
pushf
or
dec
mov
inc
lret
dec
andl
or
imul
int3
enter
cli
sbb
inc
sub
push
or
test
add
mov
sbb
outsb
jmp
lret
stos
cld
mov
mov
push
pop
lods
lret
add
xchg
mov
and
xchg
xchg
jmp
leave
mov
fadds
push
lock
cmp
cmp
push
push
lock
fyl2xp1
push
loope
stos
jl
jmp
test
jl
jmp
sub
inc
and
jmp
roll
jmp
test
lods
jmp
add
mov
out
push
in
or
push
out
xor
rol
jmp
adc
out
jmp
inc
or
pushf
mov
jmp
out
mov
mov
adc
pop
sbbb
add
call
cmpxchg8b
or
or
push
dec
sbb
cmp
ljmp
cmpsb
repz
cwtl
enter
icebp
loopne
dec
xor
hlt
xchg
add
pusha
push
xchg
lret
lahf
gs
mov
sub
js
mov
fs
hlt
xchg
pop
loopne
add
adc
lock
push
aas
lahf
or
fmuls
cmp
cmpsb
jns
mov
fisttpll
ror
xchg
imul
or
add
ds
fcmovnu
stos
inc
stos
scas
into
test
adc
or
xchg
test
xchg
nop
in
mov
push
sub
cmp
cwtl
adc
cmp
xchg
dec
cli
jmp
cmpsb
mov
mul
setns
out
imul
jb
imul
inc
add
inc
pop
jmp
cmp
cld
ret
mov
inc
add
or
xchg
sub
std
xchg
lds
mov
add
jo
push
and
push
icebp
or
negb
repnz
shlb
adc
dec
xor
andl
inc
aas
or
shrb
jge
pop
pop
nop
mov
xchg
popl
popf
insl
pop
jns
rolb
push
or
jns
and
sbbl
or
add
rcll
mov
mov
int
mov
pop
cltd
loop
push
dec
enter
cmc
testl
mov
lcall
pop
in
push
mov
cmp
mov
push
or
aas
neg
xchg
mov
lret
popf
add
jmp
cmpsb
lea
mov
pop
mov
movsb
lret
outsb
ljmp
push
frndint
push
mov
in
or
adc
and
pushf
cli
nop
and
or
add
cli
add
sbb
xchg
and
cmp
cli
jmp
out
push
cli
or
addl
sbb
jg
jg
pushf
fwait
mov
mov
sbb
push
pop
or
mov
pusha
sbb
add
or
mov
orl
dec
jmp
imul
or
pushf
pop
lods
incl
mov
out
pop
mov
or
inc
mov
sbb
push
sub
or
cmp
adc
std
lods
or
insb
mov
add
pop
std
push
mov
dec
or
scas
movsb
jmp
ljmp
sub
sbb
sub
pop
mov
and
cmp
push
push
cmp
and
pushf
jg
sbb
aas
pusha
pushf
add
iret
add
shr
loopne
or
ror
adc
mov
in
stos
add
add
add
orb
or
add
add
inc
in
adcb
inc
push
sbb
addb
dec
mov
push
int
imul
jle
push
mov
sbb
in
mov
or
mov
or
mov
sbb
dec
sbb
ret
jae
and
in
ret
mov
add
mov
addb
out
outsb
inc
outsl
ret
cld
xchg
ficoml
sahf
lea
in
rcll
add
imul
mov
push
inc
and
sub
xchg
arpl
in
lret
inc
or
movb
or
sub
std
sub
and
mov
cltd
pop
ds
mov
and
or
es
popf
lret
mov
xlat
cmpsb
inc
out
jg
fbld
out
push
data16
inc
addb
ljmpw
add
test
pop
popf
enter
xchg
rol
jmp
jae
inc
jo
daa
sub
xchg
inc
push
fidivrs
push
mov
mov
pop
adc
add
fsubl
add
mov
add
xchg
jb
enter
pop
jo
or
and
dec
mov
in
sub
outsb
push
lods
push
les
pop
nop
cmpsl
pop
push
in
pop
jb
les
pop
or
sahf
inc
xchg
push
ja
lret
jnp
out
mov
lret
xchg
out
aas
and
lahf
push
arpl
inc
js
add
or
push
test
arpl
jns
adcl
mov
sub
mov
jb
test
shl
jno
fs
sarb
aaa
inc
inc
das
daa
pop
in
xchg
sti
jecxz
pushf
pop
and
xchg
mov
xchg
stos
stos
xor
adc
fmuls
fs
call
cmpsl
test
or
aam
call
repz
add
cmp
in
sbb
cmpsl
inc
dec
and
aas
jmp
out
cwtl
inc
xchg
jnp
out
pop
pop
addb
xchg
lods
sbb
ror
jg
mov
adc
sub
or
mov
xor
sahf
aad
sbb
or
into
or
loopne
or
sub
add
or
or
push
and
pop
or
mov
ds
pop
sbb
sub
xor
popa
push
adc
jmp
xchg
cmpsb
in
mov
insb
js
or
push
clc
add
or
push
mov
or
testb
adc
popl
jmp
pusha
sub
test
lods
jge
ds
mov
or
jbe
add
or
push
mov
sub
lret
and
call
add
add
lods
lret
push
xor
test
insb
sub
je
lret
and
insb
out
pushf
or
pop
adc
and
sbb
or
inc
push
aam
lcall
add
lcall
loop
js
mov
repz
mov
sti
jbe
xchg
add
lods
andb
rolb
or
cwtl
mov
jle
mov
or
pop
arpl
cmpsl
xchg
imul
stos
sub
jg
mov
sbb
andl
mov
add
jmp
test
inc
fsubp
lock
ljmp
jae
out
in
nop
push
imul
test
cmp
push
addr16
xor
jmp
adc
jnp
push
or
lret
or
test
sub
test
pushf
add
sub
push
ljmp
das
add
icebp
mov
xor
ja
pop
adc
cmp
and
adc
scas
or
ljmp
mov
rcrb
fwait
push
adc
sbb
jae
add
test
in
mov
pushf
outsl
pop
xchg
sbb
xor
into
or
inc
int3
add
cmp
loop
dec
rorb
lods
add
lret
jg
adc
sbb
hlt
ror
lret
pushf
mov
add
mov
sbb
mov
repnz
sbb
in
in
mov
and
dec
repnz
rcrb
cmpsl
or
call
adc
pop
movsb
dec
into
sub
sbb
and
sub
pop
movsb
dec
into
sub
sbb
insl
dec
sub
lret
cmp
mov
sub
pop
movsb
or
jmp
test
pop
dec
sbb
int3
cmp
lods
and
sub
pop
ret
sub
mov
pop
jmp
push
cs
push
add
dec
cmp
dec
popf
or
popf
lcall
sbb
in
daa
enter
into
adc
lods
daa
sub
lock
jmp
enter
cmpb
xchg
lret
adcl
pusha
adc
test
mov
mov
inc
adc
int3
sti
add
add
popf
or
or
sbb
ret
push
add
insb
test
mov
add
pextrw
add
test
pop
mov
lahf
test
insb
test
mov
cmp
sbb
lahf
imul
mov
es
push
mov
jg
mov
jns
sbb
jg
test
jg
test
mov
pop
mov
sub
adc
add
pop
into
insb
test
inc
mov
ja
je
jg
adc
mov
pop
dec
add
cld
test
orl
loop
sbb
cmp
test
orl
push
or
sbb
push
add
sub
popf
adc
add
aam
nop
cmp
shufps
adc
or
adc
mov
mov
test
lods
sti
add
push
les
or
nop
popf
and
sbb
pop
or
pusha
add
push
loop
and
icebp
stc
or
nop
sbb
js
adc
test
add
sbb
fcoms
adc
shlb
rorb
ljmp
or
test
orl
mov
cmp
rolb
push
add
sbbl
sbb
and
adc
mov
movsl
add
ficoms
or
sbb
popf
stc
or
add
pop
and
ficoms
xchg
inc
adc
adc
push
jnp
or
orl
sahf
adc
insb
inc
inc
add
add
negb
inc
test
push
sbb
adc
pop
test
mov
add
out
inc
add
sahf
nop
lret
test
mov
or
jns
ljmp
mov
add
push
pop
in
dec
cwtl
sbb
jp
add
pusha
jmp
add
or
sbb
add
push
add
pusha
pop
movsl
add
add
add
add
or
or
pop
jle
or
add
out
xor
repnz
add
push
push
add
sbbl
mov
cmp
adcb
adc
int
adcl
mov
cmp
or
ds
insb
test
cmpsb
mov
nop
cmp
jnp
in
sbb
popf
inc
push
add
test
sbb
lcall
or
adc
add
add
add
int3
jl
orb
dec
ljmp
cli
in
cmpsl
addb
repz
arpl
xchg
sbb
push
cwtl
xchg
sbb
and
mov
lret
test
mov
or
cmp
cmp
adc
mov
or
pop
fs
shrb
mov
sbb
push
negl
in
pop
test
test
mov
jns
push
test
decl
fnstsw
or
add
push
inc
or
add
push
and
adc
out
cmp
add
and
mov
push
dec
or
or
out
or
or
add
and
mov
inc
out
xor
sbb
popf
sub
out
jns
fisttpl
mov
fwait
nop
enter
mov
addl
mov
add
or
push
mov
pop
mov
call
and
or
jmp
add
jge
sbb
or
dec
add
add
add
shrl
mov
jns
mov
mov
sbb
or
adcl
and
mov
or
cmp
scas
clc
mov
mov
pop
addr16
sbb
sbb
add
adc
outsl
add
add
test
stc
mov
cmp
cmp
stc
mov
and
xchg
add
add
push
add
test
add
push
add
pop
and
adc
add
push
or
mov
add
sub
call
stc
adc
sbb
sbb
sbb
mov
mov
sbb
inc
pop
xchg
add
sbb
push
push
mov
test
or
add
add
add
out
addr16
push
push
ja
js
sbbb
adc
sbb
pop
xchg
adc
sbb
add
or
sbb
fwait
lods
ljmp
mov
add
add
push
out
sbb
jns
testl
int3
adcl
mov
into
cmp
or
lea
sti
adc
xchg
or
std
int3
test
stc
mov
inc
add
incb
call
test
mov
add
adc
inc
cld
test
orl
pushf
int3
add
or
pushf
into
insb
test
mov
jns
cli
add
or
out
mov
adc
mov
mov
cld
test
orl
jl
or
pop
jl
cld
test
and
sbb
pop
and
sahf
and
adc
inc
setge
adc
mov
pop
mov
or
paddsw
mov
sahf
or
pop
aam
pop
test
jge
or
sbb
lcall
fs
sub
sbb
int
test
mov
cmp
sbb
lea
add
pushf
push
cmp
int3
test
mov
adc
out
xchg
sbb
cmp
xchg
sub
sbb
int3
adcb
pushf
adc
adc
jnp
sti
or
mov
push
sbb
push
mov
cmp
cmp
sbb
movsb
sbb
or
add
push
fs
adc
cli
push
add
sbb
test
clc
sbb
or
pop
pop
add
mov
lea
jnp
sbb
push
movsb
sbb
push
mov
sti
rorb
cli
adc
adc
sbb
fucomi
adc
repnz
mov
and
pushf
or
aas
test
nop
popl
sbb
mov
adc
xor
inc
fcmovne
inc
lods
ljmp
stos
sbb
fldl
or
push
mov
stc
or
add
sbb
push
jbe
cli
adc
add
adc
or
mov
inc
mov
cmp
cmpsl
add
in
movsl
add
or
or
pop
out
add
sbb
mov
cltd
fwait
aaa
ljmp
inc
jnp
adc
stos
lret
or
call
dec
stos
test
call
mov
shll
push
mov
cli
jmp
cmc
or
sbb
adc
push
movsb
pop
adc
push
movsb
adc
das
xchg
or
jbe
cli
pop
ret
sub
sbb
xor
sbb
call
adc
push
orl
call
xchg
sbb
or
mov
adcl
mov
push
dec
mov
add
add
add
adc
jo
movb
out
test
rcrl
add
dec
or
pop
adc
jo
or
or
dec
loope
pop
xor
sti
mov
test
sbb
sbb
add
xchg
pop
fisttpl
sbb
adc
rorl
adc
out
dec
movsb
or
lods
lret
mov
or
les
add
enter
les
cli
out
shrb
or
movsb
and
add
pusha
pop
loopne
out
stos
ljmp
jp
or
test
cmp
stos
push
add
ja
pusha
pmaxub
or
decl
test
add
enter
into
add
add
cmp
adc
rorb
sbb
or
sub
push
adc
int3
xorb
popf
out
stc
or
orl
pop
or
lret
fs
dec
push
sbb
add
pop
fs
adc
das
inc
add
fs
lock
add
push
add
mov
sbb
lcall
cmp
jne
pop
notb
fs
or
adc
test
jecxz
sbb
cli
int3
out
or
dec
pop
test
lcall
jl
setp
inc
mov
jp
aam
inc
cltd
sbb
rorl
add
or
add
ljmp
out
xchg
pop
jbe
cli
pop
rcll
add
or
pop
std
push
lret
or
cmpsl
mov
push
and
or
incl
pop
jnp
or
push
push
or
xchg
add
lret
cli
incl
or
sbb
lods
ret
xchg
or
aas
test
sbb
xor
sbb
call
cmp
aad
cmp
sbb
adc
or
or
sbb
or
and
stos
sbb
adc
add
fadds
adc
jo
push
pop
in
lret
mov
test
sbb
add
shlb
in
sbb
mov
testb
or
jecxz
cmp
inc
push
or
lock
test
jnp
addb
sbb
sbb
sbb
lock
pop
jmp
or
push
and
mov
add
in
push
add
adc
xor
or
xchg
mov
pop
cli
lret
test
std
adc
lcall
add
adc
lcall
mov
cltd
or
movb
in
lret
lcall
test
cli
lods
test
std
sbb
or
sbb
roll
push
push
and
out
pop
sbbb
enter
adc
adc
sub
fwait
push
test
out
ljmp
movsl
xchg
fiadds
xchg
and
sti
out
icebp
sbb
sbb
mov
cli
sub
xlat
test
sti
jmp
push
mov
add
cli
stos
enter
psubq
dec
mov
mov
sub
leave
enter
ljmp
add
cli
ret
test
push
aas
lret
popf
add
cli
fcmovne
or
leave
mov
enter
imul
popl
cli
int
push
pop
cli
pop
push
or
or
add
sbb
add
mov
pop
out
or
sbb
or
or
or
out
or
or
and
inc
test
pop
out
or
or
or
or
or
out
or
xchg
out
or
out
or
out
or
or
fs
ljmp
inc
js
or
cmp
mov
or
adcb
incb
stos
sbb
enter
push
jp
setbe
dec
fildl
out
mov
push
mov
add
in
or
test
aas
stos
sbb
mov
cmpsl
adc
loope
orl
adc
or
test
push
rorl
or
pop
lcall
pop
pop
or
or
or
or
sbb
xchg
sbb
sbb
lods
or
fsubs
or
fcom
sbb
jl
push
fcoms
sub
or
mov
sbb
out
dec
add
dec
or
mov
dec
mov
or
out
inc
push
out
jmp
add
and
imul
mov
popa
cli
sub
pusha
push
add
ljmp
sti
mov
add
cli
mov
daa
ljmp
push
add
mov
out
sub
inc
mov
mov
cmpsl
adc
pop
mov
push
inc
mov
adc
cmp
pop
inc
test
inc
test
cwtl
test
inc
push
or
adc
mov
inc
push
add
pusha
out
mov
sbb
adc
add
xorb
xor
sbb
out
out
and
or
sub
lahf
add
cli
pop
enter
ret
sbb
add
add
cli
sbb
sbb
add
adc
adc
adc
pop
test
ljmp
xchg
or
add
pop
add
mov
sbb
je
movb
out
xchg
test
rcrl
push
and
mov
push
ret
adc
push
movsb
adc
test
faddl
test
cmp
or
adc
sbb
ret
adc
push
and
enter
into
sbb
sbb
pusha
push
or
mov
add
nop
xor
rcrl
inc
adc
cvtps2pd
test
sbb
or
cmp
push
xchg
pop
pop
test
add
add
sbb
sbb
scas
adc
pop
sbb
jnp
mov
dec
sbb
stc
out
shl
mov
or
xchg
ret
repz
sbb
ja
fcomps
fwait
sahf
call
or
notl
je
ficomps
push
in
mov
lea
sub
cmc
add
lret
pop
adc
cwtl
add
cmpsb
fwait
push
inc
fwait
push
sbbl
data16
decl
lcall
sbb
nop
push
fidivs
cld
mov
roll
loope
pop
stos
xchg
mov
nop
lahf
push
sub
loope
sbb
add
out
add
add
sbb
or
sbb
into
add
sbb
into
push
es
unpcklps
push
out
lret
je
rcr
xchg
adc
mov
add
movsl
mov
or
test
incb
addl
out
dec
add
cmp
lcall
add
out
leave
add
sbb
loope
addl
fcmovnu
jmp
cltd
or
fidivs
into
cvtps2pd
emms
jnp
or
or
pop
movl
inc
in
rorb
ja
shrb
or
mov
add
in
les
and
or
push
sbb
push
jl
inc
push
mov
xchg
pop
jl
sbb
das
int
mov
adc
in
lret
insl
call
sbb
into
lock
test
push
or
pop
adc
add
cmp
adcl
push
lods
movsb
jl
adc
xchg
add
push
mov
loop
sbb
push
cli
mov
test
push
pop
sbbl
adc
rcll
sbb
sbb
and
sbb
andl
or
cmp
sub
leave
pop
roll
or
sbb
sbb
sbb
push
and
enter
in
sub
cmp
xchg
adc
xor
sbb
xchg
call
movsl
les
xchg
daa
test
nop
inc
aas
stos
add
adc
xchg
stos
ret
enter
adc
arpl
cmp
xchg
sbb
out
or
and
or
out
cmpsb
adc
xchg
mov
xchg
push
sbb
stc
stos
mov
test
test
inc
test
adc
inc
test
test
inc
test
cmp
ljmp
cmp
stos
mov
test
loop
test
test
inc
test
sbb
call
cli
pop
enter
mov
xchg
lret
xor
enter
or
adc
out
scas
add
cli
dec
enter
add
sub
daa
enter
push
sti
out
movsb
push
inc
out
inc
xchg
mov
fwait
dec
or
mov
dec
cld
test
cmp
mov
dec
cmc
test
xor
dec
jb
dec
mov
dec
out
test
aam
push
imul
test
or
out
or
mov
mov
xchg
mov
xchg
mov
or
loopne
adc
out
shl
shl
rorb
fisubs
mov
adc
push
and
add
addb
sti
or
movsl
je
or
sbb
std
push
roll
sbb
loope
test
test
test
adc
sbb
mov
aas
call
call
call
test
cli
imul
ficomps
mov
fwait
push
lock
push
mov
dec
cs
int3
xorb
xor
sbb
test
xor
sbb
in
xor
sbb
and
rcrl
sbb
inc
or
stc
push
pop
addl
add
push
cli
enter
insb
sti
adc
mov
push
enter
pop
add
pusha
cmp
dec
push
lcall
pop
pop
or
out
leave
add
add
push
or
movb
in
sub
pop
push
and
enter
out
add
sbb
cli
sbb
adc
lret
inc
push
into
adc
adc
or
cli
lods
xchg
dec
inc
sbb
ljmp
sub
or
mov
in
mov
lock
test
add
or
or
dec
add
decb
sbb
or
sbb
out
pop
adcb
into
mov
adc
mov
test
dec
or
sbb
add
pop
adc
nop
or
mov
pop
rcrb
add
add
adcl
lcall
sbb
or
adc
adc
pusha
rolb
add
addr16
or
add
push
mov
cld
addb
sbb
shlb
cltd
or
add
out
add
pop
jne
fistl
or
add
test
sbb
sbb
push
add
adc
movsb
adc
pop
add
inc
movsb
or
adc
bound
or
sbbl
pushf
out
jmp
enter
rcrb
test
insb
test
push
mov
repz
call
or
in
nop
ljmp
or
test
rcrb
push
add
dec
push
movsb
cmc
adc
dec
xor
adcb
pop
ficoml
cmpsl
sbb
call
rdpmc
sarl
adc
call
add
push
loopne
xchg
enter
add
mov
call
cvtpi2ps
or
mov
adc
mov
or
mov
pop
or
or
mov
cs
or
mov
pop
test
jnp
add
test
jnp
sbb
int3
enter
ljmp
jp
pop
xchg
adc
cli
add
adc
push
call
pop
ljmp
pop
adc
nop
add
mov
or
xchg
and
enter
mov
inc
pop
or
in
mov
xchg
adc
adc
fisubs
push
sub
or
fimuls
add
or
mov
js
push
inc
add
inc
sbb
sbb
pop
in
lret
cli
adc
adc
xchg
or
aas
jmp
pop
in
leave
or
nop
lret
add
clc
push
xchg
adcl
xor
add
add
pop
add
add
xchg
or
mov
test
cli
lahf
inc
int3
xchg
jo
xchg
unpckhps
je
adc
lea
std
sbb
fwait
push
pop
jl
pop
jle
push
xor
addr16
pusha
pop
loopne
addb
adc
ret
add
inc
pop
push
inc
pop
add
adc
xchg
cmp
enter
loope
adc
or
cmpsl
nop
push
sbb
inc
sbb
or
xchg
xchg
adc
jecxz
mov
test
mov
inc
cmpsb
or
cld
lret
test
mov
or
or
or
movsl
cmpsb
adc
xchg
mov
xchg
loopne
pop
or
or
out
fstl
inc
adc
add
or
out
and
incl
or
or
sbb
adc
push
mov
push
and
out
or
clts
adc
fisttpl
call
xor
sti
dec
or
sbb
xchg
test
jmp
jnp
pusha
add
sbb
xchg
sbb
and
push
out
or
push
or
repz
adc
xchg
or
mov
mov
es
or
nop
in
add
push
ret
adc
push
and
test
cli
dec
test
std
sbb
mov
add
cmp
lods
cli
xchg
enter
add
mov
adc
adc
mov
int3
dec
pop
and
lret
push
adc
pushl
sbb
fidivs
sbb
movsb
sbb
inc
sbb
sbbl
stc
or
inc
mov
fimuls
mov
fimuls
xchg
into
fimuls
xchg
into
mov
mov
or
repnz
stc
int3
in
orl
or
add
or
sbb
sbb
mov
adc
or
adc
cli
sbb
sahf
popf
or
or
cli
lods
stos
or
push
or
stos
pushf
add
add
mov
push
loopne
jge
addl
xchg
sahf
mov
rcrl
adc
rcll
or
adc
test
inc
ljmp
push
rcrb
pop
in
mov
sti
sbb
or
incl
lcall
adc
xchg
or
adc
add
cmp
pushl
pop
or
push
or
or
or
in
ljmp
jmp
add
add
add
add
sti
push
push
pop
lcall
ljmp
test
test
sbb
rorb
out
rclb
xor
cmp
ljmp
lahf
add
add
clc
or
test
or
stc
lcall
sbb
add
pop
cmpl
lock
rcrb
test
lock
lret
rcrb
pop
push
sub
jno
add
jo
fs
adc
nop
lsl
int
rorb
es
push
dec
or
pop
add
or
add
push
or
or
rclb
adc
loope
test
fidivs
in
mov
test
pop
mov
jl
or
popa
inc
push
dec
or
or
sbb
or
orb
push
sbb
add
sar
xchg
jmp
mov
js
sti
or
movlhps
mov
xchg
jnp
add
or
in
push
cltd
push
stc
or
adc
adc
cli
add
add
fnsave
sbb
sub
enter
or
stc
or
push
add
int3
mov
orb
sbb
sbb
push
test
sbb
jmp
bound
xchg
push
fldt
adc
or
in
mov
pop
and
out
push
fldt
mov
pop
push
test
mov
movsl
mov
inc
sti
out
loop
orl
orl
jge
or
sbb
mov
add
cli
xchg
enter
test
cli
jb
or
popf
push
or
popf
fwait
push
or
dec
sbb
popf
imul
out
mov
sbb
pop
add
jnp
sbb
in
leave
pop
rcll
adc
jo
xchg
sbb
or
cmpsb
cmp
adc
xchg
ficomps
dec
psllw
pushf
fidivrs
pop
in
push
adc
cmp
repnz
rorb
jne
sbb
lea
pop
add
cli
insb
adc
add
lcall
rcrb
jne
or
rorl
or
cmp
cmpsl
push
or
movaps
test
ret
pop
or
pop
ret
or
dec
inc
push
into
push
dec
inc
add
orl
into
add
pop
into
sahf
dec
inc
adc
sbb
adc
or
pop
test
jnp
xchg
test
jnp
adc
test
dec
or
decb
test
mov
adc
push
xchg
cmp
or
popf
add
or
jno
pop
shrb
test
push
sbb
or
or
mov
xchg
adc
loop
jge
loop
add
aas
or
popf
cmp
fisttpl
push
add
xchg
ljmp
sbb
cmp
add
or
cmp
sbb
sub
adc
sbb
sbb
xor
pushl
cmp
xchg
or
lcall
lods
jp
or
xchg
xchg
push
xchg
testb
out
push
push
or
fwait
push
push
cmp
int3
lret
pop
loope
add
adc
push
pop
and
psubd
sbb
sbb
or
push
push
test
adc
lock
test
gs
sbb
push
push
movsb
sbb
lcall
or
mov
or
push
xchg
xchg
adcb
int3
mov
pop
cmpsl
mov
es
cld
pop
test
adc
test
out
mov
push
cmpl
cmp
or
sub
xlat
cmpsl
push
mov
dec
add
pop
ss
sbb
xchg
jo
test
or
adc
inc
push
into
lea
add
or
inc
sbb
mov
in
mov
loope
test
fsubrp
mov
pop
out
or
or
or
into
push
sbb
push
into
sbb
sbb
nop
test
adc
orb
adc
xor
push
sbb
mov
and
pop
or
or
and
mov
or
test
std
add
incl
popf
dec
inc
or
sbb
add
cwtl
dec
inc
push
into
push
dec
inc
sbb
xchg
dec
inc
adc
adc
bswap
mov
or
decl
jns
sbb
es
lock
sub
add
xchg
mov
jo
test
loope
mov
in
push
sbb
sbb
and
pop
test
stc
push
bound
repnz
xchg
sahf
js
cli
sbb
sbb
or
cltd
sbb
cwtl
add
rorb
xor
lods
lret
call
or
pop
add
and
iret
mov
adc
adc
fimull
pop
push
or
or
push
scas
xor
xor
add
scas
jnp
or
sbb
or
test
cmp
addb
adc
cmp
sbb
push
test
lcall
add
rcll
xchg
sbb
jbe
adc
sbb
cmpsl
cmpsl
adc
sub
mov
sbb
cwtl
cli
in
cmpsl
adc
loope
and
lret
mov
xchg
or
push
cmp
ljmp
ljmp
cwtd
sbb
mov
je
ljmp
adc
push
and
test
cli
movsl
shl
shl
or
sbbl
lods
test
std
pushf
mov
jnp
pop
xchg
sbb
xchg
xchg
adc
int3
mov
add
test
iret
sbb
or
cmp
lret
lea
adcb
or
das
cs
call
mov
sbb
in
or
testb
or
sub
pop
movnti
sbb
std
add
sub
ret
add
cmpxchg
sbb
xor
sti
pop
or
in
out
mov
push
add
and
test
cli
in
cmpsl
incl
loope
mov
push
sub
test
std
sbb
ljmp
lods
push
jnp
adc
push
adc
or
fisttps
xchg
sbb
inc
adc
adc
pop
in
ljmp
dec
subl
inc
pop
or
nopl
add
add
xchg
sarb
enter
sub
add
fimuls
adc
push
sub
ljmp
ss
adc
rorb
or
stos
out
or
sahf
sbb
leave
or
sbb
or
outsb
fwait
push
pop
cmp
add
pop
push
inc
mov
addl
cmp
sbb
or
leave
inc
or
adc
cmovle
xchg
gs
fimull
or
or
popl
push
or
ljmp
movb
movb
in
sub
test
add
pop
clc
ljmp
jbe,pn
sbb
sbb
jmp
adc
insl
aad
stc
adc
mov
inc
pop
or
xchg
xor
push
add
adc
cmp
or
push
push
add
out
add
or
or
outsb
add
lcall
push
and
mov
mov
cli
push
adc
nop
iret
ficomps
in
mov
add
dec
or
stos
cli
or
out
test
addb
lods
enter
ljmp
cmp
dec
or
mov
inc
sbb
out
sbb
push
or
xchg
nop
adc
out
adc
or
out
shrb
aam
int
pusha
add
or
add
call
into
sbb
adc
adc
movsl
sub
or
sub
pop
andl
sbb
or
lahf
inc
stc
pop
aam
lods
es
mov
adc
nop
lods
test
lea
push
jl
add
xchg
lea
adc
add
push
in
stos
adc
and
sbb
or
sbb
sbbl
inc
cmp
mov
int3
jbe
fstpt
pop
sub
xor
pop
and
or
sub
cli
xchg
or
sbb
mov
or
insl
cmpb
or
test
mov
or
test
mov
cs
repnz
adc
mov
lods
xchg
inc
sub
mov
in
inc
or
jno
mov
inc
imull
inc
rcl
cld
or
or
loopne
xchg
pop
jecxz
add
leave
or
subb
or
and
in
push
cwtl
push
sub
mov
movsl
icebp
sub
mov
ret
fldl
scas
or
mov
or
mov
test
mov
add
push
cmpb
or
faddl
in
jl
sub
push
adc
or
in
sahf
pushf
movsb
bound
adc
iret
inc
outsl
add
sbb
test
adcb
mov
push
or
std
loop
cmp
cld
add
das
or
pop
mov
orb
pop
rolb
dec
sub
jmp
inc
mov
add
ljmp
push
sbb
out
xchg
stc
or
jmp
sub
or
or
sti
ror
push
mov
enter
mov
jg
jmp
pop
mov
add
sbb
call
test
push
sti
cwtl
stos
inc
filds
orl
cli
xchg
ret
test
pop
mov
add
cli
push
enter
xchg
sti
adc
int3
push
sti
jmp
mov
sbb
popf
adc
add
ret
test
or
add
or
pop
cli
sbb
xchg
test
sti
nop
lret
int3
adcl
or
pop
lret
in
cli
mov
push
or
ret
out
mov
test
fldcw
add
cli
bswap
dec
or
test
dec
sbb
leave
icebp
in
xchg
lret
adc
enter
popf
sti
aas
lret
addl
or
add
lret
push
add
cli
fxch
sbb
ret
lret
faddl
sti
or
mov
dec
cli
int3
or
lret
enter
sti
pop
lret
popf
add
cli
ror
test
sti
mov
dec
test
jmp
std
jmp
add
cli
sbb
cltd
test
pop
sti
pop
lret
roll
test
mov
adc
fmul
flds
inc
mov
enter
imul
dec
adc
test
xlat
lret
pushf
add
jnp
test
enter
pop
lret
pop
add
cli
ror
mov
dec
mov
rorb
enter
adc
adc
cmova
dec
jmp
mov
add
cli
inc
enter
in
sub
or
cli
stos
enter
mov
pop
lret
mov
cli
int3
enter
dec
sbb
in
cld
clc
stc
ljmp
mov
push
flds
jmp
xchg
rcrl
adc
cli
jmp
in
xchg
jo
ljmp
jmp
sti
sbb
push
enter
dec
add
cli
test
add
add
sti
jg
pop
mov
cltd
cli
xchg
enter
sar
pminsw
int3
leave
mov
add
cli
inc
enter
cmc
pop
jmp
fnstsw
sti
or
inc
cli
mov
mov
dec
dec
test
rorl
fxch
fildl
notb
fmul
lcall
enter
leave
sti
lret
ljmp
add
cli
push
enter
pop
sti
ror
mov
adc
or
mov
mov
sti
nop
lret
adc
enter
fdivrp
ror
mov
add
cli
enter
int3
sbb
mov
ror
xchg
mov
cli
fmul
sbb
inc
mov
sub
in
xlat
sti
push
lret
xchg
add
cli
mov
into
test
dec
lret
jmp
test
sti
push
lret
flds
cli
aad
push
test
into
sbb
stos
cld
dec
lret
inc
add
jp
adc
cltd
imul
adc
cli
iret
enter
dec
fucomip
test
sti
add
orb
enter
xchg
sti
adc
dec
enter
leave
add
cmp
pop
push
push
mov
dec
lea
xchg
lret
pop
add
cli
add
sbb
int
adc
jmp
sti
add
fimuls
push
cmp
ljmp
or
or
enter
adc
or
pop
adc
pop
repnz
pusha
lret
popf
test
sahf
sti
mov
add
cli
mov
push
rcrb
push
pop
add
sbbb
add
cmp
adc
mov
mov
pop
lods
lret
push
add
stc
xchg
jecxz
stc
ljmp
jmp
stos
dec
jmp
sbb
push
or
dec
or
into
subl
mov
or
mov
add
mov
clc
or
jl
adc
mov
xchg
add
and
or
or
cltd
pop
iret
out
jns
push
dec
loop
les
je
cs
inc
cmpsl
stos
mov
in
ds
mov
filds
movsl
mov
inc
dec
or
push
arpl
pop
mov
cmpb
cwtl
jb
mov
push
or
xchg
outsl
lahf
push
or
je
notb
sub
sarl
inc
jmp
jo
sbb
cltd
or
jl
sbb
in
push
inc
cmc
outsb
mov
rorb
push
lcall
xchg
and
pop
cli
push
or
sahf
scas
xchg
push
ja
cld
aad
sar
or
inc
jae
pop
or
cmp
sahf
gs
xchg
rorb
test
addr16
mov
dec
out
stos
in
xor
sub
adc
call
cmp
inc
out
or
stos
arpl
sbb
or
adc
stos
or
add
aas
dec
test
sub
fmuls
out
stos
cmpsl
pop
adc
cwtl
fisttps
cmc
or
ss
inc
pop
mov
add
sbb
mov
hlt
in
sar
imul
jno
lcall
fs
and
add
popw
add
sub
cwtl
push
push
xor
bound
sahf
pop
dec
repnz
je
lods
fldl2e
sub
xor
pop
in
or
push
movsb
sbb
and
int
and
fldt
push
or
inc
icebp
sbb
mov
xchg
or
je
sub
mov
sbbl
push
pop
pop
imul
sbb
scas
inc
adc
push
dec
pop
in
mov
mov
cmp
push
outsl
sub
cmp
cmp
fs
test
or
lods
push
enter
xlat
xchg
and
insb
or
xchg
xor
je
jb
push
sub
push
mov
lea
dec
xchg
clc
icebp
or
or
jns
mov
push
test
sbb
adc
add
or
dec
fsubs
inc
int
jl
pop
out
push
loope
and
lods
out
hlt
orb
push
or
pop
inc
jle
adc
mov
or
push
lcall
cmpsl
xor
or
rorl
or
fnstsw
icebp
sbb
fs
imul
sub
push
xchg
or
mov
or
aaa
mov
adc
add
test
dec
mov
mov
or
fucomip
mov
push
or
testb
insb
bnd
mov
inc
pushl
push
jle
push
cwtl
frstor
insl
push
pop
loop
sbb
or
arpl
xlat
adc
add
and
mov
xor
sahf
enter
hlt
jle
ret
add
sub
pusha
and
xlat
prefetch
or
pop
push
sub
shl
cwtl
test
mov
repnz
xchg
decb
stos
inc
mov
jo
push
xchg
sar
cwtl
lds
into
dec
into
imul
arpl
lods
lret
dec
decl
pop
call
mov
mov
icebp
out
sbb
adc
lock
xlat
xchg
pop
lret
adc
xchg
xchg
sub
test
aas
or
dec
test
or
ret
xor
add
add
movsl
sti
jmp
rolb
or
mov
xchg
ret
dec
sbb
leave
sbb
stos
jl
pop
inc
or
xor
sub
fcompl
jle
push
fimuls
push
jge
sbb
xchg
cmp
push
mov
aaa
imul
add
adc
pushf
jb
sub
pop
movsl
inc
sbb
pop
lods
mov
sub
cwtl
xchg
decl
hlt
adc
or
dec
xchg
mov
and
fcoms
loopne
sub
and
or
inc
sbb
rolb
mov
push
lret
pop
dec
pop
or
sbb
int3
mov
or
or
push
iret
mov
enter
sub
xlat
sbb
cmp
push
xchg
mov
or
xlat
mov
jmp
gs
insl
mov
inc
push
sbb
cmp
and
call
push
addr16
sub
mov
mov
inc
pop
and
in
cmp
adc
sbb
mov
push
dec
ja
pop
in
adc
std
push
sbb
or
mov
loop
or
adc
mov
push
lcall
or
subb
mov
jge
add
or
cmp
out
js
mov
add
pop
or
insb
jp
pop
pop
int
or
pop
sbb
add
push
and
popf
fwait
sbb
test
scas
add
mov
ds
dec
adc
sbb
in
fidivrs
mov
or
fwait
cmp
jg
je
fstl
and
jnp
ja
in
push
fwait
jge
sbb
jo
pop
sbb
loop
dec
xchg
jnp
or
cmp
pop
jo
or
icebp
dec
xchg
popa
mov
aam
cld
push
fbstp
outsb
inc
loopne
or
fimuls
loope
cld
scas
lods
mov
push
stos
icebp
add
mov
int3
sbb
lcall
mov
mov
jns
push
jmp
popa
fsts
mov
sub
push
in
jp
sbb
mov
or
out
pop
sbb
enter
dec
sub
jge
mov
cmp
flds
or
or
out
mov
mov
movsl
ds
adc
inc
fsin
mov
call
pop
adc
mov
mov
adc
ja
or
pop
fisttpl
shlb
adc
dec
dec
or
pop
sbb
enter
xor
inc
movsl
sub
sub
dec
inc
sbb
movb
inc
rorb
repnz
mov
sbbb
jns
fdivp
dec
inc
ret
sub
daa
rolb
push
xchg
mov
sub
pop
jbe
mov
or
or
mov
jns
or
or
aad
arpl
dec
cli
std
mov
mov
in
mov
lock
pop
cld
add
mov
mov
lea
jmp
mov
jo
pop
lcall
push
add
insb
movb
mov
lods
push
pop
xchg
jge
add
push
out
repnz
pop
inc
jge
push
inc
in
sbb
jmp
or
dec
jle
or
jmp
movsl
pop
aam
adc
or
into
push
mov
testl
jbe
in
ja
pop
int3
cmp
notb
pusha
loopne
dec
in
xor
mov
imul
jo
inc
roll
popf
jbe
pop
adc
insb
lret
das
and
cld
dec
orb
adc
daa
pusha
pop
aam
or
and
or
sub
into
or
xchg
xor
int3
adc
iret
loope
xchg
xor
mov
pcmpgtw
out
imul
pop
sub
lret
sti
test
xorl
aas
lods
sub
xchg
sbb
dec
sub
cmp
mov
in
sbb
xlat
push
push
or
sarl
subb
sbb
push
lods
subl
negl
mov
mov
adc
std
add
mov
push
cmp
and
pushf
orb
stos
or
fistpll
adc
inc
and
loope
stos
stc
jmp
jo
or
sbb
or
inc
dec
ljmp
int
or
xchg
sub
imul
xchg
mov
or
jge
jl
dec
cwtl
and
mov
call
addr16
insb
fsubrs
adc
test
test
inc
gs
dec
and
push
xor
mov
call
clc
sbb
aad
add
pop
or
hlt
ss
cmp
pop
in
testb
pushf
aad
and
scas
adc
movsb
or
mov
pop
arpl
xlat
and
sub
mov
das
mov
xchg
jae
or
faddl
fnstenv
lret
add
sbb
daa
int
fsubp
inc
fnstsw
cmp
sbb
in
inc
mov
xor
js
gs
sbb
mov
or
sub
cltd
decl
jmp
or
das
push
mov
mov
lcall
pop
push
stos
popa
icebp
sub
sub
sub
and
les
cwtl
insb
jns
lret
sbb
mov
mov
insb
push
dec
or
push
scas
or
mov
inc
mov
shlb
push
aad
or
xacquire
jle
in
stc
insb
test
js
adc
and
jmp
cmp
sarb
fcoms
stos
iret
or
jle
in
mov
add
xor
dec
dec
pop
jo
mov
repz
out
push
dec
push
or
push
xchg
dec
xchg
mov
jb
or
int
xor
stos
cli
mov
inc
int3
mov
adc
mov
in
iret
xlat
dec
sarl
addr16
decl
in
sti
and
pop
inc
rcll
or
inc
mov
mov
mov
into
xlat
xchg
push
adc
push
pop
enter
enter
dec
call
add
es
adc
mov
mov
addr16
repz
jg
add
push
out
sarb
test
into
data16
xchg
xchg
adc
or
popf
insb
ss
cmp
push
push
or
mov
push
or
xor
xor
and
pop
mov
jp
pop
in
sarl
or
jbe
cltd
pop
or
sub
mov
dec
xor
cmp
fcmovne
das
mov
and
scas
lcall
sub
mov
or
mov
imul
mov
xor
jae
or
in
negb
mov
xchg
and
push
orb
cmp
mov
push
mov
pop
cld
mov
or
mov
sub
adc
insl
pop
xor
mov
or
shr
or
movsb
mov
je
dec
mov
jnp
iret
adc
fdivrp
fiaddl
or
xchg
test
cwtl
adc
movsb
adc
dec
pop
xchg
mov
xchg
pop
mov
mov
push
sbbb
pop
cs
sbb
mov
pop
xchg
xor
or
mov
in
or
add
xor
dec
dec
dec
movsb
or
sbbl
inc
or
add
dec
call
dec
jg
mov
xchg
pop
mulb
jae
pop
or
xchg
pop
cli
xchg
push
je
rorb
std
pop
xor
fsubr
mov
in
push
dec
dec
scas
adc
inc
xor
adc
push
scas
insb
clc
and
jo
or
mov
fstl
pop
int
xchg
orl
cmp
int3
mov
rolb
daa
or
mov
cli
lret
mov
dec
bound
or
push
dec
mov
xchg
cmp
or
fsubl
outsl
xchg
jmp
insb
in
pop
sbb
orl
stos
xchg
cmpsb
rorl
mov
or
and
or
mov
jmp
mov
ja
stos
jnp
xor
sbb
and
inc
sbb
push
sbb
and
jmp
movsb
int3
sub
mov
push
stos
xor
mov
or
mov
lds
popf
mov
mov
cmp
pop
dec
or
jnp
dec
fmull
add
icebp
insl
add
int3
std
push
loope
or
xor
mov
ljmp
sbb
xchg
adc
inc
mov
xor
lds
xor
enter
in
push
mov
imul
or
int3
movsb
mov
lahf
out
addr16
addb
test
add
xchg
adc
pop
sub
dec
cld
jne
add
push
inc
ds
jl
outsb
or
mov
pop
mov
orl
in
sub
sub
sbb
cld
or
mov
lock
mov
aas
sbb
cs
mov
push
ja
add
add
mov
mov
xchg
in
lock
repnz
stos
out
subl
nop
loop
jle
jmp
in
mov
jge
push
decb
inc
sbb
mov
adc
in
addr16
pop
or
sbb
ss
mov
inc
add
frstor
fwait
loope
mov
int3
mov
mov
xor
fnstenv
ds
push
lret
mov
push
xor
or
mov
rcrl
xor
xor
test
mov
mov
stc
fsubr
in
movsl
or
cmp
fildll
stos
fildl
push
mov
dec
inc
cs
xchg
adc
xor
jo
xchg
jnp
in
pop
and
mov
add
push
std
cmp
sahf
sub
data16
loop
jmp
push
adcl
and
pop
xchg
push
pop
xor
divb
out
adc
hlt
sbb
jle
mov
faddl
push
popa
movsl
mov
push
or
rol
lahf
dec
mov
or
orl
dec
pop
imul
sbbl
mov
int
mov
xor
or
push
dec
loope
push
mov
lods
cmp
pusha
adc
sbb
or
in
cmp
stc
movsl
sbb
adc
pop
dec
lret
mov
sbb
xchg
in
adc
sbb
dec
popa
add
mov
pop
gs
inc
and
scas
push
movl
or
pop
clc
or
xchg
push
fstpt
sub
fnsave
mov
pop
push
icebp
or
notb
jb
cmpsb
xchg
adc
or
sbb
ja
xchg
test
addr16
testl
stc
lea
in
cli
clc
or
adc
add
xor
sbb
and
faddl
xchg
or
jbe
js
sahf
out
test
in
nop
sbb
push
cmp
mov
cltd
test
in
mov
push
repnz
inc
xor
pop
sub
or
sub
sub
scas
push
adc
or
mov
or
jb
xor
sbb
or
mov
mov
push
mov
int3
jbe
add
ss
rorb
enter
dec
ljmp
les
inc
je
sarl
adc
addr16
fsubr
lods
int
mov
xor
pop
adc
pop
mov
xchg
inc
orb
repz
or
inc
or
rorl
out
lea
pop
mov
pop
adc
out
or
inc
and
inc
jbe
lcall
cs
pop
fidivrs
pop
xor
sti
or
sbb
sub
mov
cmpsb
pop
ret
jnp
arpl
push
popf
sub
push
cs
mov
sbb
add
jecxz
jo
sub
jl
push
cmp
cs
hlt
mov
add
ja
pop
mov
push
push
movsl
inc
repnz
nop
movsb
sbb
insb
fcmovnbe
xor
repnz
or
ret
xchg
popf
in
pop
push
orl
add
cmp
or
or
outsl
or
fnstsw
jge
adc
sub
addl
jno
rolb
mov
mov
jecxz
pop
cmp
xor
addl
push
pop
insb
cmp
in
mov
or
sbb
jnp
fisubrs
xchg
wbinvd
ret
mov
mov
jb
jno
pop
clc
or
sbb
es
lods
cmp
and
outsb
jp
mull
xchg
lods
pop
in
rcll
push
adc
imul
or
adc
cmp
cmp
out
fimuls
xor
or
pop
sbbl
cmp
sub
nop
or
out
mov
push
sub
outsb
test
and
cltd
dec
test
cmpl
lea
pop
push
stc
or
imul
fimuls
scas
sbb
out
aaa
lcall
mov
add
jge
adc
jmp
and
icebp
pop
push
popa
or
rcl
inc
add
or
cltd
fmuls
pop
cmp
sahf
dec
push
or
and
add
mov
or
mov
es
loope
sbb
setge
adc
ds
xchg
xor
xchg
jnp
lods
sti
mov
sbb
ja
inc
add
fst
mov
cmp
daa
lea
adc
dec
and
int3
jae
add
pop
repz
dec
sub
test
jmp
mov
mov
aaa
fcompl
ljmp
fadds
mov
iret
or
sub
imul
adc
test
in
fadd
mov
mov
or
xor
imulb
push
repnz
fstps
gs
add
inc
cmp
loopne
add
xchg
mov
cmp
int3
xchg
add
sbb
dec
mov
and
or
dec
jb
addl
push
aam
jns
and
or
lds
sub
inc
in
les
in
lea
out
add
int3
adc
nop
or
std
data16
repnz
dec
adc
push
or
dec
mov
jne
sbb
movsb
push
add
dec
std
xchg
pop
push
or
daa
pop
jne
stos
add
fsubl
enter
inc
rorl
ret
pop
mov
sub
push
outsl
imulb
stos
push
or
add
adc
mov
jno
addr16
or
test
int3
push
cmpl
jmp
sbb
mov
add
mov
ds
mov
push
rclb
cmpsb
cmpb
push
mov
in
jb
pop
test
lcall
mov
adcb
iret
mov
or
xchg
jbe
scas
or
and
mov
enter
insb
lret
js
jmp
xchg
mov
fs
shufps
jns
cmp
mov
lret
pop
mov
or
xchg
pop
leave
sti
push
lahf
dec
in
or
out
jno
addr16
mov
orl
xor
push
xlat
cmp
pop
pop
std
mov
mov
mov
xor
or
pop
xchg
mov
mov
lods
das
popl
cmp
or
int3
jb
and
fildll
cld
add
or
xor
mov
push
cwtl
or
lcall
jmp
dec
dec
or
out
stos
aaa
push
or
ret
lea
ss
xor
jle
add
pop
push
adc
inc
or
lds
mov
in
or
repz
fimull
subb
inc
or
leave
mov
or
xchg
in
fwait
cmp
insl
repnz
adc
adc
mov
nop
lods
sub
aad
loope
arpl
mov
cmp
repnz
aad
fisttpll
sbb
data16
sar
push
filds
ret
lret
movsb
dec
clc
emms
jo
in
add
mov
je
xor
or
leave
or
mov
cltd
clc
popa
lret
jne
mov
sbb
es
jmp
pop
or
fs
xchg
pop
in
insb
cmpsl
jnp
inc
cs
pop
push
test
js
cmp
sub
aas
fmuls
sub
push
cltd
lea
jae
or
mov
leave
sub
push
in
int
mov
cltd
outsb
mov
inc
js
jae
jo
je
loope
daa
and
mov
in
testl
or
fiaddl
mov
or
aam
add
adc
sub
adc
xchg
loop
hlt
mov
enter
lahf
mov
std
das
lcall
cmp
xchg
pushw
out
lcall
fwait
je
cmp
mov
dec
test
and
pop
test
cmp
add
inc
mov
cmp
mov
es
add
pop
push
inc
or
inc
loop
cwtl
sub
int3
adc
daa
shl
cs
dec
stos
xor
sbb
or
cmp
adc
js
and
sbb
or
cwtl
hlt
enter
cld
lea
leave
jne
xchg
mov
loop
mov
bound
dec
out
push
or
rolb
add
adc
dec
lods
lds
testb
mov
sbb
pop
and
fdivp
pusha
cmpsb
jmp
js
mov
add
sub
dec
fwait
arpl
sbb
mov
push
popf
dec
inc
jno
scas
jns
mov
adc
dec
ss
inc
push
nop
adc
sahf
arpl
in
mov
pop
decb
add
push
in
dec
mov
lods
jge
add
pop
cmp
hlt
or
pop
sub
fnstsw
or
adc
mov
adc
ds
inc
sub
inc
out
in
gs
fisttpl
or
adc
adc
fimull
mul
rcrb
addl
lods
mov
pop
mov
pop
cmp
xor
pop
adc
cmpsb
pushf
bound
add
xchg
lock
mov
pushf
mov
adc
clc
popf
sub
mov
rcrl
rcr
in
cmc
out
outsb
mov
fwait
cmp
je
icebp
das
out
and
popl
movl
push
or
xchg
push
inc
aam
leave
jecxz
sbb
xchg
addr16
pushf
pop
stos
jle
cwtl
in
nop
outsb
xor
dec
xor
nop
pop
push
iret
std
rcl
dec
sbb
aad
push
pop
int
dec
or
les
shrl
loope
aad
push
pop
push
iret
sub
cld
in
add
shl
push
lods
sbb
in
lcall
orl
out
movsb
inc
xor
arpl
sub
cmp
test
xchg
adc
mov
lret
in
es
jo
mov
nop
mov
jbe
xor
or
mov
add
adc
or
lods
inc
cmp
into
ss
imul
pop
in
in
iret
int
cmpsb
xlat
test
sub
aam
adcb
mov
dec
bnd
sbb
or
adc
sub
mov
pop
aam
or
fists
or
push
cmc
mov
fstps
sbb
pop
out
or
sbb
add
sahf
mov
lods
inc
and
sub
pop
imul
or
push
adc
lret
test
push
or
jb
and
add
mov
out
fimuls
or
add
mov
adc
dec
or
mov
and
int3
dec
notb
test
mov
cs
jbe
gs
into
pop
pop
cmp
adc
lods
ljmp
add
xor
repz
sub
dec
or
cmpsb
jge
mov
mov
es
sbb
cltd
pop
scas
mov
test
sbb
jb
mov
data16
test
aaa
arpl
or
mov
int
clc
pop
jbe
xchg
or
popf
add
notl
inc
in
lret
scas
hlt
xor
lret
cld
or
xchg
cmp
dec
xchg
dec
int3
lds
cmp
add
mov
inc
je
testl
or
or
add
dec
inc
insb
inc
inc
and
decl
add
rclb
into
push
push
xor
sub
and
add
jmp
mov
xor
sbbl
shr
outsl
mov
or
fstpl
fiadds
lds
ss
push
jo
xor
nop
pop
adc
or
outsl
push
ror
addr16
xchg
add
lods
insb
xchg
out
push
sbb
or
adcb
mov
mov
add
test
xchg
movsb
pop
mov
std
sbb
xor
js
push
shlb
pop
xchg
dec
add
cwtl
or
iret
dec
insl
ret
mov
xlat
xchg
cmp
rcrl
mov
sbb
push
inc
or
or
jmp
nop
pop
mov
fcomps
ss
sub
adc
mov
mov
in
sbb
adc
sbb
push
test
sub
lahf
sbb
out
sbb
in
js
movsl
cmp
adcb
cs
cmp
or
xchg
fbstp
out
push
add
faddl
lret
aad
lret
and
cltd
adc
cmpsb
dec
repz
mov
cli
cwtl
aad
lds
sahf
ret
out
lret
aad
dec
lods
les
push
push
xlat
lea
mov
xor
test
aaa
jbe
push
sahf
push
lods
out
dec
mov
or
xor
dec
daa
and
inc
xchg
loop
or
insl
movsl
mov
ret
fs
sbb
imul
subb
xchg
mov
sbb
or
insl
adc
mov
mov
out
jmp
adc
sahf
jno
rclb
sbbb
dec
outsl
cld
and
paddq
aad
inc
lcall
mov
adc
or
fidivs
mov
call
or
mov
in
or
mov
clc
insb
ficoms
das
imul
lods
jmp
bound
pop
dec
stos
or
int
aaa
mov
test
mov
call
jns
jge
push
dec
jp
shll
push
fsubrp
iret
inc
rcrb
or
jp
adcb
or
or
add
int3
xor
jnp
pusha
push
push
push
or
gs
dec
cltd
in
dec
xchg
sub
add
or
aas
push
sub
or
xchg
outsl
loope
aam
outsb
scas
jl
outsl
adc
fwait
inc
in
pop
rorl
js
adc
sub
adc
or
lea
adc
sub
or
mov
or
popf
movsl
ss
out
sbb
jns
push
sbb
sahf
lret
or
test
push
dec
aas
cltd
in
sub
add
adc
and
or
stos
and
scas
jmp
or
pushf
jp
adc
or
adc
std
pop
sub
mov
lcall
xor
lret
popa
jb
int
ljmp
sub
stos
sub
data16
or
mov
ror
subl
pop
pop
call
sub
ds
mov
cmpsb
or
add
xchg
ja
hlt
in
rcrb
inc
pop
ficompl
sub
loop
xchg
jno
inc
orl
pop
mov
int
add
mov
jns
adc
jnp
stc
repnz
js
inc
or
xor
xlat
xor
xlat
cmc
or
stc
js
pop
mov
repz
in
push
ret
sub
je
dec
lcall
pop
push
and
and
adc
fistpl
mov
aas
loop
or
out
add
test
pusha
cmc
pushl
popl
cmc
cmp
pushf
lea
ja
test
mov
pusha
ror
sub
cmp
add
jno
add
ror
lea
rcl
bsr
mov
setge
cmp
mov
stc
pusha
pushf
repnz
pusha
jmp
jge
sbb
mov
adc
xorl
mov
mov
and
movsb
test
inc
adc
jle
cmp
daa
mov
aad
lret
das
cmpsb
cs
ja
push
cmp
cmp
orl
xor
cs
fsubp
lods
mov
jecxz
sti
dec
mov
mov
jg
jp
dec
sub
inc
lock
pusha
and
mov
filds
movsb
jle
enter
mov
xchg
dec
ffreep
cmc
sub
je
divl
mov
fldenv
xchg
or
mov
adc
lods
in
mov
jo
fadd
loop
inc
xchg
mov
adc
daa
inc
mov
aas
adc
leave
pop
cli
jl
repnz
repnz
mov
push
stos
sbb
jns
mov
addr16
sarl
bound
loop
jne
hlt
sub
dec
push
std
mov
lods
hlt
cmp
les
xor
mov
jmp
push
xchg
in
sub
cmpb
mov
mov
stc
js
negb
pushf
sub
push
push
xchg
pop
mov
popf
popl
inc
push
cld
mov
cmp
icebp
arpl
pusha
adc
sbb
and
out
out
pop
or
ja
jge
out
fsts
mov
pop
xchg
or
test
pop
xchg
lds
outsb
das
mov
xor
cmpsl
cld
aas
ljmp
mov
dec
dec
xor
pop
loopne
fbld
adc
push
sub
imull
mov
in
lods
sbb
scas
jle
pusha
push
addr16
and
sub
pushl
inc
xchg
sbb
mov
push
imul
adc
sub
and
mov
add
push
lea
inc
push
cmp
mov
pop
xchg
xchg
add
cmp
fwait
inc
sub
icebp
cmp
lods
out
frstor
add
pop
enter
repz
sbb
jne
sub
lret
sbb
pop
sub
das
jb
xchg
add
mov
loopne
add
lea
dec
stos
dec
mov
fs
dec
add
cmp
or
add
xchg
mov
pusha
pushf
movw
push
pushl
ret
cwtl
out
sub
pop
jp
fistl
fistl
cli
in
das
push
jb
dec
outsl
mov
jl
pop
jg
in
inc
aad
cltd
jno
test
add
xchg
or
enter
xchg
je
jnp
ret
lods
xchg
pop
aam
or
scas
and
daa
pushl
loop
pop
push
lock
test
xchg
jbe
mov
fsubl
ficoms
dec
jl
jge
out
cs
sarl
idiv
sbb
and
repz
mov
loopne
mov
and
aaa
lods
pop
mov
negl
mov
and
loope
insl
xchg
xor
insb
jb
pop
xchg
loop
or
jno
jmp
inc
das
call
rolb
inc
rcrl
sbb
sub
ret
cmp
sbb
inc
incl
movsl
and
sarl
xor
jnp
jae
inc
sbb
add
mov
ror
sub
stc
dec
mov
bswap
movzbl
shld
clc
mov
cmc
push
cmp
cmc
sub
cmp
mov
repnz
pushf
lea
jne
bts
mov
neg
movsbw
sub
bswap
btr
movsbl
pusha
lea
stc
pushf
cmp
sub
pushf
test
stc
call
std
insb
lods
lods
mov
sbb
outsl
xchg
pop
or
mov
stc
cmp
in
mov
and
push
push
adc
fwait
jg
cmpsl
cmp
dec
sbb
mov
inc
mov
inc
dec
and
out
mov
push
adc
das
sbb
pop
test
push
outsl
xlat
movsb
cld
sub
jae
imulb
sub
push
sub
int
lds
cmp
and
sarl
in
pusha
lea
je
bt
cmp
bt
cmp
pusha
pushf
push
call
call
mov
btr
or
btc
shr
cmp
movzbw
mov
pushl
or
call
dec
inc
jp
jbe
xchg
sub
cmp
je
out
jecxz
fstl
inc
lds
cmpsl
dec
mov
cli
dec
test
out
loope
lods
cld
cmp
push
add
cmpsb
jo
and
arpl
sub
cld
dec
and
jnp
inc
sahf
test
cmp
lcall
mov
cmpsb
cmc
and
add
xchg
jg
in
mov
cmp
or
pop
gs
cld
sbbl
pop
sahf
out
fsts
test
out
sarl
pop
mov
push
cs
cli
and
lods
adc
xor
push
mov
ss
dec
mov
iret
xchg
gs
in
sti
mov
mov
dec
mov
loope
jns
insb
aam
sbb
fbld
sub
xor
mov
add
mov
lahf
lret
cmpsl
test
add
pop
mov
xorl
adc
xor
cmp
stos
adc
notb
push
rolb
xor
inc
jne
pop
or
clc
lds
fildll
push
popa
jno
into
stos
cmpsl
int
or
pusha
lea
jne
mov
setno
lahf
lahf
movb
pusha
lea
lahf
call
pushf
pushl
adc
movb
mov
mov
lea
jmp
aaa
arpl
mov
or
orb
repnz
mov
push
jne
fs
dec
push
and
dec
or
cmp
loope
pusha
push
addr16
stos
adc
shlb
mov
sub
js
mov
push
in
dec
lret
xor
push
pop
inc
rcrl
test
jle
cltd
dec
lret
mov
or
mov
sub
inc
mov
cmp
sbb
cmp
in
or
pop
inc
xchg
loop
and
sub
pop
paddq
push
xchg
rcrl
sarl
inc
sbb
and
test
or
push
lahf
rcr
xor
lahf
mov
sbb
sar
not
rcr
add
rcr
rcr
mov
stc
test
pushl
lea
je
pushf
mov
stc
sub
test
cmp
mov
push
jmp
call
ja
push
rolb
ret
ja
pop
lahf
fisttpl
cmp
aaa
mov
adc
ficompl
testl
stc
add
ja
push
xchg
into
push
cld
sub
inc
incl
fcomip
mov
jb
mov
pop
adc
ljmp
cld
mov
cmp
pop
lock
push
jne
mov
dec
aaa
pop
sub
adc
and
inc
cli
push
out
add
int
aaa
insb
sbb
adcl
and
icebp
push
dec
pop
jl
js
outsb
cs
out
or
leave
inc
sub
jno
fs
ja
rorl
fwait
sub
lahf
inc
push
mov
shl
fsubl
xlat
std
lret
or
ret
pusha
sbb
mov
aas
shl
cmp
mov
xchg
ret
inc
iret
divl
jg
loop
sub
popf
add
aas
cmpsl
cmc
mov
lahf
xchg
mov
xchg
loope
jp
mov
out
xor
jge
lods
shr
inc
xchg
push
mov
xor
scas
loop
arpl
ss
adc
lods
dec
in
jle
cwtl
push
sbb
lea
outsb
stos
ljmp
xor
fdivs
cmpsl
int
push
or
jo
cmp
xlat
xchg
popf
mov
loop
aaa
imul
pop
sbb
or
into
mov
push
lcall
scas
xor
cld
add
sub
mov
cmc
ss
and
adc
dec
xchg
shll
test
sti
add
fs
je
push
push
movl
pusha
lea
jmp
add
dec
outsl
popa
fs
imul
add
orb
xchg
int3
add
dec
or
sub
bound
xchg
pop
sub
data16
pusha
sahf
out
test
adc
les
fs
rcl
pop
or
cmp
sarl
adc
cwtl
adc
or
jo
or
sub
jno
jae
insl
lods
loopne
pop
fwait
pop
mov
rcrb
je
dec
jnp
dec
jns
lods
push
inc
std
lods
jmp
mov
sub
sub
xor
mov
cmp
or
sbb
sbb
inc
or
in
xchg
outsb
lret
jle
in
cmp
mov
popa
pushf
push
xchg
int
pop
and
mov
cmpb
call
aaa
sbb
inc
pop
or
jo
push
adc
cwtl
xlat
xchg
push
mov
add
ret
dec
data16
and
aad
cltd
jbe
jl
rcll
idivb
jb
and
jne
pop
lds
mov
or
sbb
cmp
fs
inc
notl
scas
jp
repz
outsl
sub
push
pop
dec
add
push
jmp
jp
ja
adc
ds
or
mov
test
mov
inc
iret
jno
push
hlt
insb
and
xchg
push
cmp
push
xchg
shll
cli
add
add
data16
add
add
adc
add
mov
das
add
add
add
das
add
add
add
add
add
mov
add
and
xor
add
add
cmc
scas
xor
add
add
add
xor
add
add
adc
add
or
add
mov
add
add
add
add
mov
xor
sub
add
add
add
cmc
test
cmp
movw
call
mov
sar
jmp
jmp
lea
jne
jmp
inc
les
jno
out
imul
dec
xchg
pop
lcall
aam
mov
loopne
jmp
inc
je
nop
dec
pop
sbb
sarb
jne
loopne
dec
add
arpl
out
sub
mov
mov
push
mov
testb
jge
out
loope
push
jmp
int3
inc
gs
adc
sbb
bswap
push
dec
add
xchg
shll
pop
mov
jmp
mov
inc
sti
sub
cltd
dec
or
std
ret
testl
in
pusha
sarl
pop
imul
jmp
pop
fists
push
inc
cmc
inc
mov
les
clc
test
mov
cmpsb
repz
xor
or
popf
insb
outsb
dec
dec
xlat
out
jmp
pop
mov
decl
sbb
jg
and
popa
cmc
cmp
sti
mov
sarb
push
push
mov
xor
add
add
stos
loopne
push
fwait
aad
xchg
shll
rcll
xor
xchg
push
push
mov
dec
clc
lea
jo
pusha
pusha
shl
mov
not
pushf
jmp
ret
data16
add
add
adc
add
mov
das
add
add
add
das
add
add
add
add
add
mov
add
and
xor
add
add
cmc
scas
xor
add
add
add
xor
add
add
adc
add
or
add
mov
add
add
add
add
mov
xor
sub
add
add
add
mov
pushf
neg
mov
pushf
clc
sub
stc
pusha
cmc
pushw
popfw
call
jb
cmp
out
xchg
pop
sbb
pop
xchg
fcoms
inc
add
enter
pop
pusha
leave
loope
mov
pop
fdivr
xchg
add
pop
push
adc
leave
pop
cmp
cld
sahf
imul
je
push
sub
xor
addb
add
xchg
mov
push
call
ljmp
pushf
rorb
cli
rol
xor
sub
popf
xlat
or
fcoml
mov
rolb
cs
xchg
mov
adcb
mov
outsb
and
sbb
mov
push
and
test
mov
dec
jne
pop
js
cli
push
xchg
mov
into
mov
jge
pop
scas
in
repnz
cmp
fndisi(8087
pushf
dec
sub
loopne
mov
cmpsb
dec
push
pushf
mov
les
jmp
xor
jp
stc
in
sbb
cmp
inc
add
cmpsb
outsb
push
outsl
into
mov
push
addr16
movsb
fimull
mov
and
adc
loope
add
bsr
movsbw
sar
clc
sub
rcl
shr
adc
shl
mov
shl
dec
shld
sar
add
and
mov
not
bsr
add
jmp
fmuls
or
adcl
aad
inc
add
clc
xor
or
addr16
inc
test
pop
jbe
cmp
fcmovne
cmp
jmp
jle
xchg
adcl
fistl
inc
or
mov
leave
lods
and
imul
mulb
daa
xchg
inc
sbb
mov
andl
push
mov
shl
cli
cmp
or
push
lock
xchg
shll
fdivrs
add
in
repz
adc
xor
add
sti
mov
daa
ljmp
out
stc
add
les
pushf
div
push
sahf
xchg
adc
mov
into
je
inc
sbb
xchg
jbe
icebp
aas
jmp
add
mov
xor
push
add
push
movsl
popa
gs
inc
inc
jecxz
jle
pop
pushf
push
sbb
adc
or
imulb
shrl
mov
and
and
scas
movw
pushl
lea
jmp
cltd
sbb
jmp
outsl
add
jne
xchg
sub
imul
mov
mov
out
fistl
lods
imul
xchg
test
mov
cmpsl
imul
enter
inc
mov
int3
incb
repnz
cmp
popa
sub
bound
xchg
and
aas
sbb
loope
mov
xor
lock
push
sbb
add
push
inc
mov
in
add
push
pusha
lea
ja
inc
stc
sub
sbb
or
pusha
sub
add
mov
or
shl
mov
shr
mov
test
call
mov
pushf
pushf
push
pushf
pushl
ret
repnz
pushf
lea
jne
jmp
jb
aas
cmp
nop
xchg
cmp
roll
dec
add
mov
inc
mov
out
fneni(8087
dec
push
addl
mov
popf
je
cmp
fildll
push
and
dec
push
adc
je
push
inc
dec
pop
fisubrl
pop
adcb
sub
in
outsb
or
rorb
xchg
sbb
pop
scas
in
and
pop
loopne
sbb
test
sub
imul
test
fs
or
test
mov
rolb
or
xchg
jmp
in
inc
push
pusha
add
pusha
mov
clc
push
movzwl
add
shrd
dec
adc
mov
pushl
push
test
add
test
cmp
mov
mov
clc
test
jmp
push
inc
push
inc
push
dec
xor
cs
insb
add
xor
mov
xchg
mov
mov
cmp
std
clc
sub
jmp
imulb
arpl
fldt
sarl
adc
cmpsl
scas
std
les
mov
fisubrl
adc
gs
je
mov
js
and
jmp
out
aad
in
rolb
repnz
cmp
idivb
loopne
dec
adc
repnz
jnp
inc
sbb
aaa
mov
outsb
xor
aam
or
mov
pop
xchg
sbb
pop
pop
in
sub
mov
xor
mov
dec
or
lock
inc
lcall
cwtl
hlt
insb
dec
cmpsb
arpl
push
cmp
shl
mov
test
mov
cmc
cmp
aad
je
pop
and
insl
jne
or
adc
je
lock
ret
mov
pop
xor
push
repz
jne
dec
stc
iret
movsl
ds
fdivrs
movsb
and
sbb
add
or
mov
xchg
shrl
ret
push
add
insb
insl
pop
in
cltd
lcall
movsb
xlat
xchg
dec
add
mov
mov
sti
mov
mov
test
mov
test
mov
sbb
lret
inc
inc
movsl
inc
jo
mov
andb
xor
and
sub
pop
movsb
stos
xor
in
ret
mov
inc
cmovg
xchg
push
or
or
dec
cmpsl
mov
pop
int3
sub
add
cmp
or
jle
add
add
fisubrs
inc
add
mov
sub
sub
ret
xor
call
fs
ja
push
xchg
jo
sbb
mov
lcall
sbb
and
fcoms
loop
dec
jp
inc
jge
sarb
stos
inc
gs
out
inc
cmp
and
ficoml
inc
add
and
pusha
xchg
shrl
pushf
lds
add
add
lods
fistps
jecxz
xor
in
xor
sub
and
std
mov
or
dec
js
in
ds
xchg
cld
enter
mov
xchg
inc
mov
adc
push
cwtl
sub
pop
enter
insl
pusha
or
sub
out
dec
mov
std
js
nop
cmp
cmp
mov
mov
mov
xchg
shrl
add
test
dec
lret
fdivrp
into
pushf
xor
dec
sti
xor
and
mov
push
push
adc
jns
push
pusha
and
add
sub
sbb
fisubl
push
xlat
pop
scas
call
sbb
dec
cmc
push
lret
and
dec
fsubrs
push
sbb
in
ja
dec
cs
fsubl
std
insb
pop
test
cmp
lods
enter
cmp
fimuls
mov
das
mov
push
adc
inc
mov
js
insl
cmpsl
pop
sahf
pop
jmp
shrl
call
xor
jge
jl
push
nop
mov
aas
jge
jae
icebp
jp
sub
mov
adc
fsubr
in
ret
mov
gs
mov
subb
fdivrp
pusha
cmpl
idiv
insb
mov
in
cld
adc
daa
mov
pop
xchg
push
and
cltd
mov
mov
loope
insb
ret
xchg
push
and
add
cmp
pushf
bnd
enter
lcall
push
mov
mov
iret
test
xchg
shrl
sbb
pop
mov
xor
jno
cli
cmp
popa
daa
jecxz
adc
xor
pop
cmpsb
shll
mov
fistl
push
out
dec
js
mov
pusha
jle
pop
vshufps
add
cmp
xor
mov
and
and
out
jne
mul
jae
ret
fs
xchg
xchg
into
dec
push
xor
stos
movsb
jl
jnp
mov
push
fucomi
outsl
std
test
cmc
data16
xor
stos
icebp
mov
shrl
popa
sub
lea
jbe
xadd
sbb
shl
mov
movzbl
add
movzbw
add
mov
call
shrl
adc
pop
jb
push
pop
inc
mov
mov
cmpsb
fwait
jae
aaa
xchg
add
dec
push
xor
push
mov
pop
popa
ss
xchg
mov
adc
cmp
xchg
dec
es
orl
push
xchg
push
cmpsl
mov
push
negb
lods
mov
dec
or
nop
add
bound
xor
mov
daa
push
push
mov
sub
pop
jo
push
movl
call
bound
jl
push
or
lods
in
push
fsubs
xor
popa
mov
scas
or
lret
jg
or
mov
arpl
int3
jle
loopne
fbstp
es
mov
fucomi
pusha
jecxz
daa
mov
or
fdivrl
xor
sub
es
loopne
cmpl
pop
pusha
cli
cld
addr16
mulb
mov
lahf
loopne
out
lods
cmp
push
adc
add
cmc
push
xchg
cmp
test
mov
gs
loop
out
adc
sub
mov
jmp
std
test
test
outsl
imul
dec
and
mov
sbb
mov
test
sbb
sub
dec
arpl
adc
push
cmpsl
int3
xchg
addr16
aaa
mov
mov
imul
cwtl
and
jg
lret
and
hlt
lock
lahf
movntq
out
outsl
jbe
adc
xor
inc
add
mov
icebp
das
mov
push
jno
mov
stc
or
jl
test
adc
rcr
pusha
leave
mov
mov
xor
lahf
in
or
es
adc
imul
cwtl
fildll
out
xor
ret
jl
xorl
sti
fdivs
gs
dec
xor
outsl
xor
iret
aam
les
shrb
out
add
fs
ja
rcr
rol
sub
add
add
cmp
bswap
not
mov
adc
mov
push
repnz
pusha
pushf
movb
lea
jne
push
movsbw
movb
push
call
jmp
push
pushl
cmpb
jmp
icebp
ret
cmpb
dec
bound
imul
push
frstor
movsl
imul
adc
cld
ljmp
adc
in
pop
xchg
ss
scas
xchg
push
adc
fmull
lcall
xchg
xchg
and
fmuls
sbb
pop
test
cmp
fildl
dec
sub
shlb
int3
popf
sub
rorb
mov
lods
stos
outsl
xor
inc
ja
sub
icebp
pusha
call
pusha
mov
mov
pushf
pusha
mov
movb
lea
jmp
sub
xchg
fld
insl
lods
enter
movl
xchg
xlat
ficompl
mov
xor
inc
adc
add
sub
icebp
out
aam
faddp
push
mov
popf
mov
loopne
es
stos
adc
sbb
cmp
add
test
out
fs
pop
inc
shl
adc
jbe
push
mov
jbe
inc
or
cmp
mov
std
loop
sub
mov
jmp
stc
mov
gs
fists
aas
lea
call
push
lea
jo
mov
push
pusha
mov
lea
jmp
neg
cmc
inc
push
mov
pushf
bt
and
clc
pushf
stc
add
push
pushl
lea
jmp
mov
mov
pushf
pushl
ret
push
dec
dec
dec
dec
cs
insb
add
js
mov
adc
jno
rolb
dec
add
outsl
cmp
mov
popa
sub
xchg
shr
adc
lret
mov
imul
inc
add
cld
xorb
push
loopne
faddl
or
je
mov
xor
adc
add
fcomps
gs
cmp
push
push
orl
jp
cwtl
stos
popf
rcll
push
in
pop
data16
orb
repz
xchg
rcll
lahf
loopne
out
mov
and
dec
test
test
lods
xor
mov
mov
mov
repnz
mull
loop
pushf
aad
pop
jns
cmp
sti
sbb
add
sbb
mov
in
sahf
shrl
mov
fmull
pop
jmp
inc
movsb
adc
in
and
jbe
mov
stos
pushf
xor
in
scas
push
pop
mov
jb
sub
pop
mov
ss
shll
movsb
sub
bt
cmp
pusha
call
or
and
mov
jmp
or
jg
fildll
mov
and
or
or
adc
loop
or
lret
jmp
jmp
or
cmp
sbb
test
mov
or
ffree
or
pushf
dec
xadd
cmpsb
test
sbb
inc
cld
add
call
jmp
cli
jmp
or
jmp
sbb
mov
enter
lods
aas
jmp
scas
cwtl
lcall
fldl2e
aaa
test
leave
dec
clc
imul
enter
imull
pop
in
hlt
incb
sbb
out
mov
int3
xchg
les
icebp
int3
or
jmp
stos
push
sbb
imul
push
popa
push
inc
push
in
push
insb
push
sub
dec
push
lods
es
dec
fs
enter
sbb
lods
inc
std
stos
loope
dec
out
xlat
add
sbb
icebp
xor
out
into
or
rcl
or
add
dec
adc
mov
push
jo
in
push
test
pop
sbb
cmp
inc
pop
mov
xlat
add
xchg
dec
std
mov
push
out
aam
push
rclb
jae
iret
or
mov
xchg
xchg
jb
mov
mov
repnz
cmp
scas
rclb
sar
lret
out
pop
cmp
adc
mov
or
sub
not
push
inc
mov
popf
push
mov
or
adcb
jb
out
shl
sbb
ss
lret
mov
or
orl
or
movsb
fs
or
fistps
aas
add
or
jle
mov
ficoms
clc
or
inc
fistpll
ja
sbb
mov
push
and
popa
or
pushf
into
mov
or
nop
adc
or
movl
sub
mov
mov
mov
jp
push
jle
movsl
push
sti
imul
sub
push
push
sbb
inc
sti
push
or
rcll
add
xchg
cmp
mov
mov
xchg
test
or
xchg
lahf
mov
leave
mov
out
mov
mov
stos
into
scas
jns
or
call
or
in
jp
cli
outsb
mov
mov
or
fwait
sbb
xchg
in
push
rep
mov
sbb
in
xchg
std
in
mov
add
lcall
shrb
sti
scas
xor
mov
test
or
scas
daa
lcall
add
sbb
mov
cmpsl
andb
ret
ret
out
pop
xchg
shr
xchg
mov
ljmp
inc
xor
sahf
mov
jno
sahf
mov
jge
in
lahf
push
sarb
out
mov
cs
scas
shr
incb
outsb
out
outsb
fs
mov
into
outsl
pop
add
iret
sbb
add
or
jmp
das
mov
jg
aaa
adc
or
mov
in
mov
jmp
int
sbb
mov
push
cmp
xchg
scas
push
or
pop
loop
cmp
les
shll
xorl
arpl
mov
add
mov
in
aas
test
or
or
rorb
sbb
xchg
clc
or
cmpsl
daa
mov
add
mov
outsl
pusha
cltd
into
sub
addb
nop
sbb
xor
out
xchg
mov
outsb
dec
or
jg
dec
outsb
jmp
int3
repnz
cmpb
push
test
int
xchg
inc
ror
pop
fldt
xchg
int3
ja
lods
pusha
xchg
rcrb
add
dec
popa
outsl
lods
aas
pop
pop
out
mov
or
xchg
loop
or
popa
ss
outsb
aaa
add
or
mov
mov
or
add
scas
xchg
sub
xchg
int3
xor
sti
dec
mov
xchg
or
mov
fdivrl
push
sti
jle
and
dec
dec
mov
mov
fxch
or
or
int3
add
lock
or
pushf
adc
pop
ds
or
pop
push
out
xchg
hlt
stc
hlt
cmpsb
hlt
inc
sub
adc
adc
adc
adc
adc
imul
imul
xlat
push
int3
adc
mov
stc
push
int3
js
test
enter
insl
arpl
mov
pop
mov
jmp
int3
lds
jecxz
xor
sub
sub
insb
xor
sub
dec
mov
or
sub
loope
jne
andb
xor
or
int3
dec
sbb
pop
ljmp
jge
lock
or
lods
icebp
out
sbb
add
out
or
ds
fisttpl
add
cwtl
inc
xchg
cs
xchg
mov
or
mov
test
icebp
jmp
int3
outsl
orl
jno
mov
lcall
rcl
pop
ret
scas
lock
mov
cwtl
mov
push
jmp
jmp
test
or
cmp
int3
jne,pt
add
cmp
iret
lcall
and
sahf
jp
sbb
jns
jo
push
inc
sbb
mov
fsubrs
ficoms
cmp
jmp
cli
mov
vmovhpd
int
mov
jo
subl
cmc
mov
outsl
rcrl
call
cs
in
push
pop
das
sti
insl
sub
dec
mov
pop
cld
add
sbb
psubsb
cmp
or
add
sbb
in
xchg
lahf
jg
add
lcall
in
add
xchg
cmpsb
es
orb
or
out
pop
loopne
fbld
fsubrl
dec
and
lcall
jl
or
cmc
divl
xor
adc
xor
add
adc
xchg
jo
xor
adc
loop
or
or
dec
daa
std
rcrl
xchg
scas
xor
int
je
shl
dec
dec
cmp
or
sbb
adc
dec
repnz
rcrb
incb
adc
push
dec
mov
and
mov
push
outsl
movsl
ss
cmp
cmp
clc
adc
xor
push
xor
mov
mov
mov
inc
or
add
xor
das
push
nop
pop
lds
xchg
ss
adc
xor
xor
push
cwtl
adc
pop
aam
or
sbb
addl
or
xor
repnz
jb
xchg
outsl
push
subl
js
nop
push
add
mov
aam
iret
out
or
out
in
inc
mov
jo
mov
out
shl
je
in
xchg
xor
push
xor
test
push
movsb
shlb
adc
mov
sbb
sahf
jo
xchg
inc
int3
sub
mov
and
or
ds
mov
addb
subb
fstpt
testl
pop
xchg
je
js
cwtl
inc
dec
pop
and
pusha
cmp
int3
incb
jmp
insl
dec
ror
jae
mov
or
or
push
xor
or
movsl
pop
jmp
mov
push
pop
mov
lock
sahf
push
sbb
push
subl
push
lds
push
decl
and
sbb
hlt
xchg
jne
cwtl
rcr
xchg
clc
mov
cmp
test
sahf
sub
jecxz
cmc
or
pop
lret
cmp
inc
adc
mov
and
mov
mov
sbb
in
mov
xor
scas
jl
or
push
ss
sbb
jne
flds
lcall
dec
subl
dec
push
pop
adc
repz
sbb
add
dec
push
mov
aaa
enter
add
add
sbb
add
jbe
or
cmpl
into
sub
test
lret
into
push
sti
ss
pushf
orl
stc
es
jne
xchg
rcrl
ljmp
xor
lret
inc
and
aam
in
mov
push
rolb
test
push
jecxz
jmp
dec
mov
mov
lret
test
in
addl
cmp
clc
dec
jae
or
mov
lods
ss
mov
or
loope
dec
push
xchg
jo
xchg
hlt
out
aam
push
pop
pusha
dec
sub
int
dec
arpl
dec
mov
or
xchg
xor
mov
xor
dec
xor
arpl
in
hlt
pop
pop
add
mov
adc
jmp
cmpb
cmc
popf
dec
and
bswap
mov
push
xchg
and
adc
adc
scas
pop
push
scas
cmpsl
and
sub
mov
dec
cli
jge
leave
daa
or
mov
dec
test
dec
lret
xlat
mov
adc
daa
xlat
mov
dec
adc
sub
out
sub
fadd
adc
push
out
loope
in
lret
sbb
and
jmp
pusha
inc
push
or
add
adc
or
pop
cmpsb
mov
test
or
rorl
nop
push
psrad
adc
sbb
lods
fisttpl
mov
ret
dec
pop
and
mov
push
shrb
xchg
xchg
test
pusha
inc
sub
jmp
and
adc
imul
js
ss
pushf
jnp
std
sahf
xchg
push
xchg
mov
sbb
add
mov
jge
pop
or
leave
add
arpl
inc
dec
je
push
mov
adc
in
jl
out
dec
mov
sub
add
pop
dec
sahf
push
mov
test
cltd
mov
shrl
test
arpl
xchg
or
adc
sbb
pop
ja
or
mov
loope
add
hlt
bound
loopne
adc
subl
cmp
lret
fmull
mov
cmpsb
aas
pop
or
push
imul
dec
inc
push
pop
add
cwtl
mov
xchg
sahf
xchg
loop
inc
rcr
mov
add
mov
outsb
orb
or
and
fcmovu
and
xchg
or
fiadds
dec
fiaddl
dec
inc
or
faddl
pop
pushf
loope
arpl
add
dec
dec
dec
ret
or
or
mov
xchg
inc
loopne
fimull
add
mov
add
mov
push
adcb
pushf
mov
or
or
test
mov
jnp
or
inc
icebp
sub
push
cmp
or
inc
pop
imul
sahf
or
mov
xchg
test
ljmp
cmp
or
cmp
int3
int3
or
or
or
sub
mov
lods
jmp
mov
add
cli
fcmovne
sbb
pop
mov
mov
sub
push
sbb
cmpsb
scas
jmp
out
pop
aam
or
or
push
mov
jb
or
icebp
fdivl
test
aad
int3
ljmp
mov
adc
insb
test
sub
xchg
add
cli
adc
jmp
xchg
lret
sti
adc
stos
mov
imul
mov
enter
lret
lret
cwtl
add
cli
sbb
push
cltd
dec
sti
sbb
sub
sbb
jmp
sbb
test
cli
sbb
dec
sti
push
lret
sahf
add
cli
dec
call
add
test
addb
or
sti
or
mov
or
test
out
add
cmpsl
mov
add
cli
xchg
test
inc
sti
xchg
daa
mov
add
cli
mov
out
or
sti
mov
cmpsb
mov
add
cli
mov
data16
inc
sti
mov
mov
mov
shlb
fistpll
or
sahf
jle
or
std
fldl
mov
sub
dec
or
push
lods
in
lret
dec
imul
je
andl
inc
mov
call
test
jmp
mov
data16
or
in
addr16
xchg
out
or
insb
add
mov
fiadds
loopne
or
test
sub
call
ret
leave
jl
or
mov
push
clc
mov
in
in
sbb
int3
dec
movsb
test
int3
cli
leave
sbb
out
orl
cwtl
int3
mov
jmp
lret
lret
cmpsl
or
std
sub
aad
stos
adc
lcall
or
pop
int3
and
test
sbb
into
sub
enter
sbb
es
call
leave
lret
in
or
stos
rorl
mov
push
insb
jmp
cmpsl
dec
sbb
or
call
jp
or
cmp
mov
test
lds
test
dec
cmpsl
mov
jmp
int3
or
and
or
push
mov
int3
mov
int3
imul
sbb
push
int3
out
pushf
out
sbb
mov
pop
or
int3
stos
test
shlb
test
int3
adc
std
imul
and
adc
add
sbb
int3
call
sbb
imul
lock
clc
jmp
je
lret
or
int3
nop
mov
sub
int3
inc
cmp
out
dec
imul
jo
push
int3
xchg
int3
repnz
inc
cmpsl
or
int3
and
or
es
push
or
cmp
jmp
int3
lds
push
fsubs
int3
movb
sub
inc
push
and
cwtl
int3
pushw
in
sbb
lock
int3
out
or
sub
int3
sub
call
sbb
push
int3
movsb
or
or
cli
sub
sbb
mov
jmp
arpl
aad
mov
test
mov
sbb
nop
or
sbb
int3
sbbl
imul
xchg
or
insb
jmp
imul
dec
xchg
movsb
out
adc
cmpsl
addr16
test
mov
call
fisubrl
sbbb
or
add
and
add
loope
push
int3
shll
or
sub
sub
or
jmp
int3
test
add
xchg
add
inc
cwtl
lret
es
or
int3
leave
loopne
push
cli
mov
sbb
xchg
int3
pusha
orb
push
int3
sub
inc
cmp
sbb
adc
iret
cmpsl
and
cmpsb
mov
fistpll
lret
mov
lahf
lret
fildl
sbb
popf
int3
push
and
cld
pop
sbb
sbb
fisubrs
mov
xchg
dec
into
daa
xchg
int3
out
sbb
push
std
pop
dec
push
out
int3
fnstsw
sub
mul
adc
or
loope
dec
es
inc
popf
leave
out
int3
nop
pop
push
jge
sbb
int3
es
imul
cld
fsubrl
aaa
dec
ret
leave
int3
loope
or
ret
pop
mov
in
sbb
mov
cmp
or
es
loope
mov
sti
mov
test
les
int3
inc
fisttpl
call
or
clc
int3
jnp
or
int3
xchg
or
mov
cmp
sbb
inc
or
fcmovnu
lret
mov
sbb
xor
push
lcall
int3
adc
pop
and
inc
sub
pop
push
or
int3
call
dec
cmp
stc
inc
imul
pop
jl
fstps
lret
mov
fisttpl
in
test
leave
cli
int3
pop
or
mov
dec
pop
inc
mov
jl
sbb
or
int3
mov
sub
jmp
out
sbb
js
lock
rcrb
insb
xchg
negl
daa
mov
test
cmp
inc
sbb
jl
sbb
xchg
push
int3
imul
xchg
sub
call
mov
idivb
stc
mov
insb
or
mov
cmpsb
mov
or
call
test
or
sbb
int3
cmp
sbb
into
inc
in
or
push
add
push
jmp
insb
push
pop
dec
nop
ret
push
enter
insb
call
cmc
sbb
fwait
inc
aad
mov
int3
sbb
xchg
sub
jmp
cmpsl
jne
mov
nop
daa
add
loope
lods
push
pop
add
enter
shl
cmp
imul
sbb
xchg
and
or
jmp
int3
adc
repz
mov
mov
sbb
cmpsb
int3
les
int3
je
mov
xor
adc
sbb
aam
sbb
mov
xchg
or
out
jb
mov
adc
push
test
cmp
push
pushf
sarb
int3
sbb
sbb
rcrb
int3
fwait
icebp
or
xchg
mov
leave
fimuls
dec
movsb
mov
test
sub
jmp
daa
call
sti
addr16
sbb
call
and
int3
or
mov
cmp
sub
jmp
mov
push
imul
test
or
int3
test
in
sbb
int3
jnp
push
int3
test
nop
sub
mov
lcall
mov
int3
lock
sbb
adc
out
imul
orl
imul
sbb
sbb
test
xchg
pop
insb
test
mov
test
jmp
int3
push
or
insl
mov
push
scas
out
mov
imul
sbb
sbb
pop
les
dec
sbb
pop
cs
aaa
int3
sbb
push
push
sbb
in
or
mov
adc
sbb
jmp
pop
lods
pop
or
xchg
sbb
stos
adc
push
and
call
addr16
lea
imul
sub
into
test
inc
cld
imul
aas
in
or
int3
cld
xchg
lret
out
int3
loope
or
push
add
int3
cli
es
int3
pminsw
add
fimuls
jmp
or
jmp
cmpsb
stos
insl
mov
int3
mov
xchg
int3
add
int3
popa
cli
push
mov
cmpsl
int3
inc
or
imul
int3
mov
or
daa
lcall
jmp
int3
adc
inc
les
clc
push
mov
nop
inc
cmpsl
test
mov
sub
repnz
out
int3
loope
lret
jmp
leave
mov
call
cld
or
mov
orb
cld
fimuls
mov
inc
int3
mov
int3
decb
clc
loop
push
out
call
les
xchg
enter
aam
cld
cmc
mov
int3
es
test
outsb
cmpsl
int3
fisttpl
push
out
int3
add
js
rolb
dec
stc
mov
mov
push
stos
movsb
call
cld
mov
leave
mov
mov
outsl
mov
xchg
cmp
sub
jmp
inc
and
shr
lcall
jo
xchg
leave
pushf
pop
movb
orb
xchg
cmp
or
push
xchg
out
mov
je
lds
push
test
imul
inc
int3
adc
mov
movsl
cld
or
xchg
mov
imul
mov
addr16
mov
add
pop
add
xchg
out
int3
je
add
or
or
imul
mov
adc
cli
addr16
sbb
inc
test
mov
int3
es
inc
sub
push
insb
outsb
rorb
sub
cmp
test
lods
sbb
inc
jmp
enter
rorb
adc
xchg
mov
sbb
add
subl
sub
fsubrl
mov
mov
leave
sub
jo
xor
enter
mov
test
dec
sub
sub
addr16
addl
pop
jmp
or
dec
sbb
xchg
or
sub
jg
test
pop
arpl
dec
push
lret
fistps
aam
subl
pop
lret
pushf
push
add
sahf
pop
xlat
sub
movl
pop
sbb
adc
int3
test
dec
push
addb
jbe
jnp
decl
and
and
lret
imul
sbb
imul
in
sub
xchg
leave
ljmp
sbb
jmp
lret
data16
aam
popf
mov
movsb
push
adc
or
shll
push
cmpsb
sbb
test
fsubp
imul
or
pop
or
cmpsl
lcall
sbb
xchg
stos
movl
nop
orl
dec
xchg
mov
ljmp
jmp
lods
imul
imul
pushf
pop
xchg
sbb
adc
mov
loop
dec
lods
sub
or
sub
mov
es
or
mov
push
push
push
cmp
sahf
test
popl
int3
mov
adc
or
fwait
lods
push
add
add
adc
subl
xchg
sub
or
mov
xchg
int3
or
mov
orb
pop
leave
or
dec
or
sub
mov
aad
add
fcomp
jmp
shlb
or
bound
dec
jecxz
rolb
iret
movsl
mov
hlt
adc
cwtl
or
or
int3
mov
sub
push
in
add
dec
test
movsb
rorb
xlat
daa
push
or
jle
dec
lret
sbb
ret
jbe
lods
cwtl
inc
add
call
mov
inc
movsb
pop
add
inc
in
push
and
pop
in
push
sub
or
dec
lret
add
pushf
cli
sbb
lea
out
push
or
leave
fcmovnu
sbb
aas
in
call
pop
rcrl
jmp
insb
jmp
or
out
add
in
imul
push
dec
lret
inc
dec
sbb
ret
or
dec
dec
dec
movb
jl
mov
jg
or
popf
popa
popa
inc
add
lret
adc
mov
ret
xchg
orl
aam
pop
sbbb
in
pop
mov
fs
jmp
lret
sub
xchg
pushf
or
lret
cmpsl
adc
mov
cld
add
loopne
lret
mov
es
adc
mov
cmpsl
add
dec
ljmp
mov
adc
dec
push
adc
sbb
sahf
add
inc
imul
int
sbb
mov
insb
sbb
fwait
addr16
or
sub
and
vmovntps
popf
mov
sahf
xchg
mov
push
sbb
add
mov
pop
mov
shlb
pushf
pop
mov
leave
testb
rcrl
dec
mov
orl
add
jecxz
out
lret
iret
popf
pop
or
add
mov
and
sti
lods
out
mov
fwait
adc
or
out
xchg
int
xchg
or
mov
sbb
add
rorb
ror
ret
xchg
mov
xchg
lcall
mov
cbtw
pop
or
sub
testb
or
fcmovnbe
cld
jg
insb
mov
into
cmpsl
dec
or
sub
mov
cld
pop
rcll
mov
adc
jmp
sbb
ljmp
mov
clc
or
push
in
cmc
fwait
add
in
sbb
push
sbb
shrl
leave
in
xchg
int3
out
aam
jno
imul
sub
mov
int3
push
push
or
stos
add
into
pop
xchg
jno
insb
push
mov
into
lret
cmp
pushf
cld
je
jmp
mov
add
insb
rcr
imul
pop
push
jl
mov
fistl
mov
sbb
rep
aas
lods
adc
xchg
or
lret
or
xchg
sbb
xchg
push
pop
loop
mov
pop
xchg
xchg
add
mov
movl
xlat
add
push
add
and
nop
sub
pusha
mov
sbb
push
fs
lcall
jg
ds
loopne
or
lods
fcoms
fsubrs
xchg
xchg
adc
push
cld
fdivrp
add
dec
orl
or
sbb
mov
popf
lcall
add
pop
xchg
cltd
sbb
out
or
enter
lea
sub
pop
ja
scas
xchg
push
push
andb
lret
jecxz
aad
or
xor
es
pop
lcall
mov
test
adc
and
rcr
sbb
mov
dec
out
xchg
or
mov
jmp
pushf
add
mov
add
sub
pop
adc
mov
sbb
push
sbb
mov
loop
adc
dec
bound
ret
mov
shrl
out
xchg
pop
cld
cmp
shr
jmp
or
sbb
nop
movsb
pop
out
mov
stos
test
pop
dec
imul
jmp
inc
add
or
shr
sbb
mov
sbb
pushf
mov
int3
or
stos
fcmovne
xchg
aam
fistpl
lret
pop
jmp
cmpsb
mov
pop
cwtl
lods
sbb
out
in
and
das
mov
pop
pop
dec
dec
lret
mov
ret
call
mov
and
ficoms
rcrw
sub
dec
shr
mov
xchg
aad
sbb
add
nop
mov
pop
mov
jg
mov
rorb
int3
mov
xlat
push
pop
lcall
and
inc
imul
push
xchg
js
inc
mov
enter
pop
sbb
inc
mov
xchg
jmp
xchg
mov
lret
or
lcall
and
cmpsb
sbb
dec
fwait
imul
or
stos
dec
jmp
cwtl
pop
sub
push
jp
pop
xchg
push
rcl
push
add
lcall
pop
imul
les
inc
jb
ficompl
adc
test
inc
pop
mov
pop
cld
incl
add
push
rcrb
push
xchg
cld
mov
pushf
aam
push
loopne
xchg
inc
rcr
pop
sbb
repz
pop
rorb
test
loop
or
add
push
pusha
arpl
repz
fs
dec
xchg
stos
pop
fisubl
stos
inc
mov
or
mov
pop
insb
add
sbbb
incl
mov
pop
shrb
xchg
lods
jp
adc
sbb
xchg
dec
cld
dec
mov
xchg
add
call
int
pop
mov
adc
iret
dec
lretw
fs
je
sbb
stos
dec
sub
dec
fmull
push
imul
adc
adc
sbb
inc
movsl
xchg
out
sbb
xchg
add
cmc
sbb
mov
pextrw
je
pop
dec
sbb
push
imul
loop
roll
mov
fidivs
test
adc
dec
orl
in
loopne
gs
in
bound
push
fisubl
pop
mov
mov
mov
lcall
test
cltd
inc
dec
imul
sub
aam
test
add
fists
adc
lods
data16
push
jecxz
cltd
sbb
cltd
dec
mov
rcrb
rorl
imul
mov
lret
mov
insb
shrl
sub
faddl
sbb
mov
pushf
subps
adc
jmp
add
dec
pop
test
mov
add
mov
add
and
mov
pop
jg
adc
dec
xor
or
xchg
mov
adc
pushf
xchg
adc
cltd
rol
mov
insb
pop
jns
fsubl
mov
mov
or
pushf
push
inc
sbb
pop
leave
push
lcall
stos
xchg
leave
adc
mov
cmc
xchg
pop
pop
lds
andb
mov
imul
push
fcoms
mov
xchg
inc
shll
imul
lahf
mov
leave
pop
pop
int3
mov
test
add
jge
sbb
enter
sub
mov
pushf
ret
out
fwait
flds
mov
addr16
xchg
sbb
push
lret
roll
sahf
or
test
xchg
fcmovu
push
stos
inc
sub
int
dec
mov
pushf
fimull
dec
aam
or
addr16
ret
int3
imul
call
movsl
bound
test
xchg
cmpsb
add
sahf
fisttps
dec
js
or
pop
adc
outsl
cwtl
add
and
loope
or
addb
jmp
popf
push
fwait
lret
push
mov
push
pop
sbb
adc
xchg
out
adc
mov
sbbb
sbb
push
mov
xchg
es
xchg
jecxz
insb
negl
sbb
in
rorb
in
cmpb
xchg
adc
add
lret
mov
inc
in
cwtl
or
in
ja
lret
data16
push
pushf
xchg
dec
push
sub
and
push
cwtl
iret
imul
fdivrl
hlt
xchg
or
imul
lret
fwait
push
inc
insl
inc
rcrl
mov
lret
xchg
jmp
mov
adcb
int3
leave
or
jmp
sbb
call
and
insl
test
imul
movb
test
sbb
lret
xlat
inc
lods
bswap
test
sbb
aas
addr16
xorl
mov
push
push
push
popf
or
cld
lret
xchg
pop
arpl
lret
enter
push
lret
xchg
mov
pop
sbb
or
aad
cltd
insb
mov
or
fxtract
pop
cld
loopne
test
lcall
call
or
leave
push
or
stos
mov
or
xchg
or
mov
pop
dec
js
or
push
or
addl
xchg
sbb
sbb
in
lret
orb
push
push
push
stos
lods
sub
xchg
dec
sub
jns
push
push
rcr
imul
loopne
insb
rorb
mov
dec
pop
dec
dec
or
test
pop
orb
add
mov
call
add
dec
jmp
sbb
out
rolb
rcl
dec
push
xchg
cld
jbe
dec
loopne
out
push
shll
add
push
mov
add
cwtl
cld
fwait
leave
ss
fistl
in
dec
xchg
mov
in
mov
lods
roll
pop
adc
aas
dec
sub
cld
push
fs
test
jmp
add
sub
rorl
jecxz
push
mov
aad
aas
loope
rolb
dec
jnp
mov
or
fstpl
leave
stos
mov
xchg
xchg
add
aas
lret
mov
mov
sub
rsm
add
flds
pop
addl
addb
fcmovb
or
or
inc
fwait
pushf
fcompl
jle
add
leave
or
jmp
inc
or
mov
ljmp
rorb
test
lahf
or
mov
xlat
sbb
fadd
add
sub
adc
es
cltd
push
pushf
pop
mov
pop
int3
push
jecxz
ljmp
jmp
out
aam
or
pop
or
and
mov
xchg
xchg
mov
lret
out
pop
add
punpckhwd
xchg
leave
les
lock
jmp
call
call
test
sbb
lods
test
push
xor
sub
cmpsl
stos
xchg
insb
mov
out
popf
dec
loope
ret
dec
adc
in
adc
cmpsl
jmp
pushf
lret
popf
fisubrl
push
adc
or
xchg
sub
adc
pop
inc
addl
xor
xchg
stc
je
lret
sahf
xchg
or
ret
xchg
dec
jmp
sub
or
cmpsl
xchg
add
adcl
pop
xchg
xor
stc
sbb
or
mov
sbb
mov
xchg
sbb
sbb
imul
dec
repz
call
call
rorb
mov
ret
sti
mov
or
fcomp
dec
mov
sub
mov
test
mov
addl
lds
stos
mov
cld
test
lret
dec
sbb
leave
inc
jg
dec
cmp
xorl
inc
sub
lcall
or
lret
inc
or
xchg
or
dec
aam
dec
iret
mov
lret
cmpsl
push
pop
cltd
mov
fmuls
add
adc
sbb
pop
ljmp
push
repz
xchg
pop
jmp
or
in
int3
push
jmp
xchg
fisttps
add
jne
inc
orb
pop
inc
fcoml
push
add
jmp
rorl
inc
sbb
stc
xchg
xchg
fisttpll
fmul
stos
xchg
test
xchg
lods
lods
loop
or
mov
gs
imul
xchg
pusha
fchs
pop
insb
nop
into
orl
daa
dec
jg
or
into
mov
iret
or
xchg
cmovs
sbbl
fcompl
aad
mov
jae
data16
sbb
ja
dec
or
push
js
imul
jmp
cmpsl
xor
adc
repnz
xabort
or
mov
or
rsqrtps
rcrb
sbb
lea
rcr
arpl
xchg
lret
testb
xchg
jmp
pop
sbb
nop
jg
loopne
sub
push
and
fmull
ret
dec
adc
xchg
pushf
mov
hlt
sahf
daa
call
popf
notl
mov
push
cwtl
push
dec
xchg
push
or
mov
daa
mov
ror
add
jbe
adc
dec
cli
cwtl
in
push
pushw
adc
stos
lret
sub
mov
filds
mov
roll
shll
mov
sahf
stos
add
in
lret
dec
mov
lahf
popa
dec
or
sbb
aad
sbb
call
mov
push
pop
or
mov
out
or
pop
sbb
shll
orb
lcall
ret
jmp
dec
pop
or
fadds
loopne
stos
jle
mov
push
hlt
sub
test
lcall
push
dec
test
inc
jg
jg
popl
sub
sbb
in
imul
sbb
lcall
sbb
daa
xchg
push
push
jmp
stos
aam
ret
xchg
rcl
roll
cwtl
xchg
sub
and
lret
leave
xchg
mov
push
and
imul
lret
sbb
cmp
je
or
push
aam
imul
pop
or
push
pop
imul
lret
push
mov
sbb
insb
shr
test
dec
in
pop
sub
cld
icebp
jmp
mov
mov
daa
sbb
sahf
pop
movsl
stos
inc
clc
xchg
add
adc
sbb
data16
xchg
dec
pushf
or
mov
add
jp
inc
xchg
push
jmp
fnsetpm(287
fwait
rol
xchg
inc
rorb
sbb
sahf
mov
imul
jmp
push
xlat
cltd
rcrb
test
xlat
xchg
pop
pop
ret
stos
push
out
push
out
mov
push
add
out
or
or
cwtl
or
adc
in
xchg
cld
out
rcrb
nop
xlat
xchg
into
adc
push
xchg
adc
add
cmpsl
inc
inc
mov
dec
shll
add
aad
nop
outsb
rol
jno
xchg
rcrb
xchg
les
decl
ja
jg
fcom
orl
jl
jmp
mov
xchg
mov
adc
inc
xchg
cwtl
cmp
mov
sahf
rcrb
outsb
and
stos
xor
sbb
test
lret
sbb
shlb
adc
rcr
fists
dec
adc
pop
stos
dec
les
add
cwtl
adc
sbb
jp
inc
xchg
dec
push
idivb
mov
orb
mov
or
adc
adc
ficoms
fcompl
xchg
pushf
mov
or
sub
cmpsb
cmp
pushf
out
into
pushf
mov
stos
lcall
or
orl
mov
pop
cld
pushf
ljmp
mov
dec
addr16
inc
rol
in
popf
fiaddl
sbb
fstps
dec
jp
stos
push
add
lock
jmp
imul
add
jl
mov
clc
mov
xchg
clc
dec
and
cmp
enter
pop
lahf
dec
push
pop
dec
mov
lcall
xchg
jno
addb
test
in
sbb
xor
xor
mov
push
jmp
sub
out
punpckhwd
ja
rorl
jno
or
testl
mov
xchg
lret
sahf
push
cmpsb
mull
jl
mov
stos
xchg
dec
movsb
ret
or
jbe
out
sub
jmp
jg
ljmp
mov
dec
out
adcl
rol
pop
insl
ret
and
and
fmuls
dec
faddl
fiadds
dec
mov
mov
lret
fildll
inc
out
aad
out
inc
insb
rcrl
sbb
cmp
inc
ljmp
cmpl
pop
int3
imul
or
xor
bound
ror
out
push
inc
inc
mov
dec
jg
imul
fwait
adc
mov
imul
mov
or
sbb
test
and
pushf
imul
aas
imul
sbb
add
imul
movb
filds
dec
or
cmpsb
mov
lret
mov
dec
jno
mov
dec
inc
clc
add
adc
incl
mov
data16
mov
inc
sahf
ljmp
inc
sbb
fmull
push
imul
subb
or
pushf
pushf
push
add
fs
data16
mov
jo
test
or
stos
mov
push
dec
in
jns
jmp
adc
adc
and
stc
push
xchg
mov
cltd
fsubl
lock
dec
dec
sbb
imul
aad
aam
out
dec
sbb
sti
inc
in
sub
lret
aad
aam
fcomps
cmp
dec
push
sub
inc
xchg
mov
dec
cli
jmp
xchg
popf
insl
orb
jmp
mov
clc
pusha
xchg
enter
call
ds
test
or
dec
mov
testl
test
add
aad
or
mov
fistps
stos
inc
pop
pop
jmp
insb
test
sub
aaa
mov
call
or
imul
sbb
dec
das
stos
xchg
mov
jo
inc
mov
pop
inc
cmpsl
mov
inc
jp
inc
test
testl
testb
leave
imul
pop
test
sub
out
mov
pushf
ret
loopne
pop
mov
add
lret
in
lds
or
lahf
or
dec
test
test
insl
jmp
leave
lds
sbb
dec
or
cmpsl
aaa
add
aam
jmp
sbb
imul
shrb
in
imul
mov
add
jl
and
mov
lods
xchg
push
les
push
mov
inc
imul
inc
jmp
leave
cmp
push
adc
rcrb
mov
fsubr
lret
adc
loopne
or
inc
or
dec
in
in
xchg
test
fmuls
cmpsl
fiaddl
sar
inc
dec
test
bound
push
or
pushf
pop
sub
pop
dec
or
test
sub
adc
enter
mov
inc
sbbl
test
dec
enter
dec
enter
or
dec
sub
leave
mov
sbb
push
pop
or
aad
add
lret
dec
or
fldt
popl
call
mov
pop
push
jmp
orb
mov
xchg
or
addb
cmp
or
dec
inc
add
rcrl
cmp
pop
ret
cmp
ljmp
pushf
pop
cltd
xchg
push
rcll
or
and
xchg
fistpl
mov
sub
movsb
push
and
out
lret
pop
jo
mov
jecxz
adc
cmp
lds
ljmp
test
dec
nop
dec
adc
mov
dec
int3
inc
repz
add
fbstp
xchg
stos
push
sub
xchg
fisubrs
cli
xlat
jbe
inc
xlat
sbb
negb
xchg
push
stos
fsubs
cmc
dec
inc
add
xor
cltd
or
mov
stos
lret
repz
or
mov
cmp
imul
rolb
lret
inc
mov
out
inc
lret
mov
int
push
vpperm
les
imul
daa
sub
aas
sbb
fisubrl
sbb
mov
xchg
arpl
dec
testl
mov
lret
repz
test
or
fstpl
cvtps2pd
xchg
hlt
xchg
sub
fcom
or
iret
mov
or
gs
shr
fldcw
xchg
dec
lds
or
or
xchg
inc
rorb
sbb
sub
xchg
jecxz
iret
jl
adc
fisubl
ret
testb
out
in
rcrb
mov
fwait
cwtl
pop
fcomip
add
pop
dec
cwtl
mov
fwait
arpl
sbb
pushf
fcompl
std
pushf
ss
xchg
pop
or
mov
call
sbb
add
or
push
popf
mov
lret
sbb
mov
test
mov
int3
test
xlat
clc
dec
xchg
or
push
addr16
test
aas
xchg
xchg
push
cwtl
ret
xchg
into
mov
sbb
add
std
fwait
shl
push
jl
frstor
adc
or
ficompl
sti
shr
push
or
out
cmp
data16
into
sub
dec
js
pushf
xchg
lahf
add
shl
or
imul
fistpl
jmp
cli
fistps
test
loopne
jmp
cli
enter
popf
mov
jmp
push
loop
jmp
xor
and
mov
jmp
sbb
or
jle
ds
aaa
lock
or
negl
fs
cmpsb
cmp
mov
ds
loop
jmp
sti
mov
add
cli
dec
mov
dec
loopne
jmp
aas
sahf
sti
or
mov
cli
shlb
fstpl
sub
or
mov
or
imulb
adc
cs
mov
addr16
push
and
pop
push
mov
imulb
int
pusha
mov
xchg
ja
push
xor
xor
popa
rcrb
mov
xchg
aaa
dec
sbb
mov
xor
and
jae
sub
xchg
xchg
cwtl
adc
xchg
jp
mov
mov
add
jmp
fs
outsl
int3
stos
or
clc
rorb
in
movsl
mov
add
jl
clc
mov
sbb
inc
testb
mov
mov
inc
pushf
pushf
jns
test
add
xchg
jmp
lret
push
add
cli
sbb
sbb
sbb
cli
add
add
add
push
enter
or
or
or
test
mov
js
nop
enter
adc
adc
adc
out
enter
sbb
sbb
sbb
push
enter
cmp
lret
pop
add
cli
or
mov
ljmp
mov
enter
popf
sti
jg
orl
or
hlt
in
jmp
enter
fs
inc
lret
add
jecxz
ret
enter
arpl
inc
lret
add
cli
ret
test
and
rcr
push
xlat
loope
pop
mov
cmc
inc
and
std
push
push
mov
incb
cli
mov
pop
sti
ds
std
add
add
and
in
sub
popf
mov
shlb
cli
popf
mov
sub
inc
int3
addr16
inc
xchg
hlt
ret
cmp
movsb
sahf
ficomps
cmpsl
mov
popl
movb
mov
lock
test
nop
es
inc
cmp
data16
xchg
cmpsb
adc
in
out
gs
pop
lock
mov
dec
mov
jl
mov
and
sbb
cmp
mov
pop
in
or
pop
and
test
cli
data16
nop
cmpsb
faddp
movsl
in
and
push
sbb
push
sbb
push
sbb
pop
cmp
or
pop
and
test
cli
inc
adc
nop
sbb
in
mov
pop
and
test
cli
inc
adc
nop
sbb
in
mov
pop
and
test
cli
inc
adc
nop
test
adc
mov
div
hlt
addr16
fidivrl
xchg
ffreep
push
les
imul
inc
aad
jl
ret
pop
sub
inc
adc
xchg
loope
dec
sub
xchg
repnz
dec
mov
mov
dec
test
mull
adc
scas
hlt
dec
push
push
jb
clc
inc
pushf
pop
icebp
or
lds
nop
aas
pop
sub
push
pop
dec
pop
fbld
dec
sub
or
xchg
jmp
mov
popf
ds
ljmp
mov
mov
add
sti
sub
fcomp
andb
rorl
xchg
adc
shlb
add
sub
decl
push
sti
insl
lret
lea
cli
lods
enter
push
sti
in
lret
push
add
cli
cs
sti
dec
ljmp
add
cli
xchg
enter
into
sti
cltd
lret
fwait
add
cli
push
enter
dec
sbb
mov
outsl
lret
popl
cli
scas
enter
sbb
out
lret
adc
cli
xor
push
ror
push
test
jo
xchg
lret
adc
enter
lock
sahf
lret
add
cli
test
push
test
xchg
inc
sbb
ljmp
sti
icebp
lret
adc
cli
xor
addl
mov
mov
unpcklps
rolb
add
xchg
enter
push
sti
fwait
lret
push
add
cli
or
test
sar
mov
repz
ljmp
add
cli
push
enter
cwtl
sti
xchg
lret
mov
mov
call
ljmp
add
cli
test
jne
pop
xchg
sti
mov
mov
mov
cmc
enter
xchg
sti
ss
push
add
cli
jbe
add
mov
or
cli
adc
das
adc
jbe
mov
xchg
aam
lcall
cmp
bsf
mov
lock
push
rolb
xor
rclb
cmp
pop
xchg
mov
rcrl
xor
mov
out
pop
push
add
negb
adc
scas
xchg
pop
or
cmp
insl
out
je
xchg
outsb
jbe
clc
lds
or
dec
outsl
xchg
das
mov
iret
mov
insb
nop
mov
mov
pushf
sub
dec
add
jne
pop
adc
pop
test
lods
push
cmc
push
dec
hlt
adc
xchg
mov
lods
out
jb
mov
pop
mov
xor
dec
xchg
fimuls
push
xor
push
push
hlt
sbb
loope
inc
push
push
pop
sbb
sbb
insl
or
or
adc
rorb
mov
ficoms
or
fistps
cs
lret
lret
mov
fisttpl
mov
adc
cwtl
mov
fisttpl
sbb
out
dec
mov
push
add
xchg
ret
add
push
sbb
push
int
xchg
cmp
cmpsl
cmp
add
xor
inc
xacquire
xor
dec
mov
les
adc
xchg
mov
loop
and
loope
jmp
xchg
add
test
ret
cwtl
or
xchg
jmp
jmp
push
xchg
push
adc
mov
xchg
popa
les
les
push
sbb
cli
mov
adc
add
sarb
push
or
xchg
push
js
out
jecxz
mov
dec
mov
mov
js
ret
fadds
push
test
adc
ret
rclb
inc
cmp
adc
ret
pop
push
aam
divb
faddl
push
aas
ja
or
sbb
mov
dec
rorl
mov
outsl
sbb
fisttpl
lods
adc
les
add
in
ret
mov
or
pop
inc
mov
lds
mov
inc
int3
jne
orl
nop
out
pop
arpl
cltd
xchg
loop
movb
or
inc
xor
mov
clc
loop
dec
sbb
ficompl
sbb
mov
pop
xchg
or
or
mov
or
inc
xchg
mov
out
or
inc
push
xor
pushf
orl
xchg
shll
pop
mov
mov
jo
int3
sbb
push
movsl
adc
jae
sbb
cwtl
stos
or
or
nop
dec
les
mov
cmc
dec
dec
or
inc
sahf
test
shl
lea
pop
cwtl
lcall
jecxz
loope
cltd
je
xchg
mov
dec
cmc
ret
dec
or
mov
in
not
int
rol
ror
jo
mov
pushl
mov
fmuls
mov
sahf
sbb
enter
adc
popa
pushf
insb
cmc
cwtl
xor
leave
mov
aad
mov
insb
fiadds
xchg
aam
push
mov
cwtl
icebp
lea
pop
or
sbb
sti
pop
jg
jle
stos
add
mov
sbb
bnd
inc
mov
add
mov
xchg
popl
sbb
jecxz
inc
pushf
jbe
int3
cmp
cltd
lds
push
rcrl
rcll
xor
stos
pop
jns
cmp
clc
fisubrs
sbb
pushf
iret
sbb
lret
jl
orl
sub
popa
sub
mov
sub
push
das
imul
sbb
stos
xor
sbb
push
fdivs
push
imul
lods
jne
pop
push
mov
lcall
mov
xchg
shlb
addb
mov
mov
sti
or
and
add
loopne
ror
loop
xor
sahf
sub
add
cli
dec
add
mov
add
sti
jae
stos
add
pushf
adc
rorb
xor
outsb
lret
xchg
je
push
cmpsl
or
push
xchg
or
or
stos
xchg
out
in
inc
mov
pop
xchg
addl
flds
into
cwtl
shlb
ss
jmp
test
add
mov
aam
pop
mov
jp
sbb
jg
lds
lds
lcall
int3
neg
sbb
outsl
pop
sub
rolb
bound
or
inc
or
or
pusha
or
lret
or
sahf
or
or
mov
bnd
mov
pcmpeqb
or
adc
cmp
sub
dec
fcoml
xchg
or
adc
or
jmp
or
mov
loope
lret
add
pop
add
sbb
or
pop
sbb
adc
pop
or
enter
adc
push
sbb
add
or
repnz
sbb
add
sub
dec
lret
or
pop
push
add
int3
xchg
dec
mov
or
or
xchg
fwait
or
adc
push
add
pushf
je
aam
ret
or
aam
loop
sub
pop
sahf
or
xchg
mov
cmp
mov
fiaddl
or
adc
les
inc
iret
ss
repnz
or
pop
pop
inc
rorb
xchg
lret
sbb
call
sbb
rcrl
and
add
cmp
loopne
push
sub
add
or
rcll
push
xor
dec
faddl
pusha
addr16
out
jge
jg
pop
nop
adc
dec
add
popf
js
subl
push
mov
subb
xor
faddl
bound
dec
xor
cmp
inc
or
mov
cltd
xchg
push
or
mov
or
xor
and
lea
xchg
dec
jno
jmp
dec
dec
loope
dec
mov
xor
sbb
mov
add
stc
push
add
icebp
push
xchg
nop
sub
jae
adc
lahf
adc
xchg
dec
in
inc
aaa
aas
or
insl
sbb
insl
nop
shr
andl
int3
dec
pop
or
xchg
jno
cwtl
jp
fwait
popf
ljmp
fildl
pop
push
xchg
jae
orb
pop
xor
mov
adc
pushf
jg
sahf
sti
mov
add
xchg
fucomi
sbb
jp
or
testb
lods
sbb
sub
mov
cmpsb
xchg
repz
and
xchg
lahf
mov
and
or
or
or
fcmovnb
cmp
add
lahf
xchg
or
xchg
mov
pop
test
jmp
xor
ljmp
add
adc
mov
rorb
inc
adc
xchg
jmp
cltd
push
xchg
out
ljmp
add
mov
sbb
xchg
jb
loop
aaa
jmp
cltd
cs
sarl
mov
ret
adc
nop
aaa
adc
jbe
lcall
sbb
pop
mov
xor
outsb
lds
insb
andb
or
or
xchg
mov
sub
jnp
out
mov
inc
jb
mov
inc
movsl
clc
dec
jg
popf
inc
dec
call
insb
incl
ret
xor
fst
xor
mov
xchg
in
mov
inc
inc
pop
int3
mov
jbe
push
ss
inc
mov
xchg
mov
xchg
or
push
xlat
jb
gs
and
push
adc
mov
pop
bound
sbb
xor
xchg
aad
push
adc
test
jg
aas
in
push
xchg
xchg
ret
sbb
xor
out
xchg
mov
sahf
aad
push
lahf
das
pavgb
fwait
pop
and
inc
sub
adc
xor
cld
lea
imulb
push
scas
out
lret
adcl
je
jo
sbb
sbb
pusha
add
addr16
add
arpl
cld
fisubs
xor
sahf
xchg
add
lods
test
mov
mov
rolb
or
in
rorl
xor
or
jecxz
nop
or
fildll
ret
fcoml
xor
ljmp
ljmp
ljmp
test
into
xchg
and
sbb
scas
mov
jl
add
xchg
jne
mov
or
aam
fsubrp
mov
outsl
daa
add
xchg
pushf
push
push
je
xchg
fstl
loop
sub
adc
inc
mov
inc
push
repnz
les
add
rorl
leave
mov
push
cmp
aaa
cmp
clc
fwait
xchg
jne
push
xchg
or
mov
or
pop
mov
in
enter
sbb
repnz
faddl
fdivs
shlb
push
scas
les
or
jnp
xchg
dec
inc
fcomps
dec
clc
mov
sbbb
mov
sbb
xor
repnz
sub
test
lret
adc
in
jbe
push
xlat
push
daa
sub
adc
stos
leave
sbb
fisubrs
adc
ret
or
jl
call
mov
mov
sahf
add
add
ret
out
fildl
divl
cs
ret
sbb
sbb
add
es
je
lret
inc
mov
mov
fstps
js
mov
or
fnsave
or
rorb
jno
inc
xchg
mov
cmpl
ror
or
fiaddl
filds
outsl
daa
mov
sbb
je
subl
inc
jae
call
mov
xchg
xchg
inc
pop
in
jmp
jge
adc
sets
mov
add
in
fistl
xor
push
mov
sbb
mov
or
push
push
or
jmp
sbb
sbb
fcomi
sbb
int
fwait
insl
outsl
call
fcoml
xlat
les
negl
adc
lds
cwtl
scas
pop
arpl
nop
mov
call
dec
out
ret
push
nop
aas
or
sahf
lahf
push
xchg
and
data16
mov
xchg
jne
lret
in
push
addl
push
push
into
das
inc
ret
add
mov
jmp
ficoms
dec
xchg
xor
mov
add
bound
iret
in
pop
lds
test
fucomp
lock
sub
sbb
pop
ret
mov
shl
flds
test
call
jmp
in
std
icebp
ljmp
or
add
cmp
xor
or
daa
xchg
pop
or
push
sub
fistps
arpl
inc
xchg
mov
xorb
repnz
sbb
adc
daa
and
mov
sub
add
and
sbb
test
add
cmpsb
jp
dec
jle
in
loopne
mov
and
leave
mov
mov
in
movsb
outsb
adc
jecxz
mov
add
bound
add
rcll
xor
pop
or
pop
cmpsb
xchg
inc
es
in
daa
push
pop
sbb
cmpsb
test
movsb
jmp
add
loopne
mov
fs
xchg
or
and
nop
jbe
add
jmp
mov
jne
push
iret
std
ds
dec
dec
push
in
daa
push
movsb
ret
add
mov
pusha
jo
enter
pop
jle
movsb
inc
push
add
mov
push
pusha
orb
add
popf
test
and
inc
test
ret
sahf
mov
adc
mov
inc
faddp
pop
lret
mov
sahf
mov
pop
inc
inc
cmpsl
les
xchg
jmp
loopne
dec
insl
mov
rorb
sub
out
sub
sbbb
lret
loop
jecxz
out
mov
roll
pop
nop
push
add
rolb
fisttpll
mov
xor
cmp
fists
xchg
fcmovb
jb
xchg
cmp
fmull
dec
test
adc
lea
jmp
push
jl
jmp
shll
cmp
jbe
xchg
jmp
scas
ljmp
pop
out
adc
and
or
sbb
or
mov
mov
aad
insb
jb
or
and
scas
pop
pop
shll
jne
xchg
call
and
inc
push
nop
loop
movsl
sbb
scas
test
cmp
inc
push
add
outsb
stc
pop
lret
or
add
shrb
addr16
mov
xchg
adc
fidivrs
int3
lcall
or
fistpll
sbb
pop
push
and
and
cmpsl
add
and
addb
or
fimuls
dec
fnstsw
jg
and
add
fldt
sahf
mov
daa
sbb
movsl
add
in
cmpsb
inc
add
dec
andl
and
add
std
stc
or
cmp
fbld
jle
and
adc
pop
pop
mov
push
add
fs
cmp
popf
in
cltd
repz
pop
pop
pop
loopne
js
sbb
push
scas
add
pop
mov
daa
sbb
add
fs
mov
cmp
or
int3
arpl
test
fs
adc
roll
add
fsubl
int3
mov
dec
loop
add
push
ret
and
scas
cs
mov
or
bound
loopne
xor
stc
xchg
sbb
push
fidivs
movsb
jecxz
push
es
push
mov
push
add
mov
dec
jecxz
clc
push
jo
inc
or
pop
mov
xchg
lret
add
pop
mov
or
mov
andb
mov
pop
xchg
adc
add
arpl
jle
or
and
adc
jmp
fiadds
push
lods
callw
inc
adc
std
aas
mov
adc
sub
pop
setb
jns
movsb
xchg
mov
mov
test
push
daa
or
and
inc
rclb
fidivs
addr16
cwtl
pslld
adcb
scas
movsb
setbe
sub
int
xorb
or
inc
jmp
pop
je
fs
or
test
jns
and
insl
xor
jge
adc
lahf
jo
lcall
test
std
mov
xchg
std
loope
pop
sbb
cwtl
fstpl
or
cmp
test
pop
pop
add
call
and
adc
enter
jp
cwtl
sbb
jge
cmp
std
sahf
pusha
jnp
or
and
mov
mov
fists
sbb
or
pop
mov
jl
fbstp
add
or
sbb
fbstp
out
dec
push
adc
dec
sub
lret
jle
dec
mov
scas
adc
mov
pop
adc
fiadds
ret
ret
pusha
sahf
push
dec
jmp
inc
std
jns
call
add
and
xchg
arpl
sbb
outsl
dec
add
fisttpll
inc
mov
add
stc
inc
icebp
mov
clc
or
pop
cmp
fcmovb
jbe
mov
ljmp
cmp
clc
adc
xchg
or
inc
punpckldq
pop
cld
xchg
sahf
std
dec
or
adc
add
mov
push
pop
add
inc
sbb
mov
or
adc
or
movl
lds
push
ljmp
ds
fwait
inc
jnp
push
or
inc
and
or
sarl
arpl
aas
dec
test
and
lcall
jo
add
sub
hlt
les
std
inc
mov
adc
js
and
jle
sbb
inc
roll
mov
fcoml
and
loope
jp
mov
jp
sub
or
enter
stos
mov
or
mov
or
mov
pop
or
in
roll
and
jbe
pop
inc
sub
orl
mov
jecxz
int3
mov
adc
push
int
loopne
jmp
add
mov
or
cmp
loopne
aam
test
add
mov
test
add
mov
enter
mov
or
cli
adc
nop
test
xchg
sti
adc
xchg
mov
add
cli
adc
xchg
test
sbb
sbbb
sbb
sbb
add
or
mov
enter
pop
add
into
lods
stc
or
lret
insb
add
cli
dec
enter
mov
or
jmp
mov
jo
xchg
pusha
or
mov
push
or
jo
or
in
mov
pop
xchg
or
and
shl
popf
pusha
jg
or
or
cli
mov
pop
rcrl
or
stc
or
cli
out
pop
orl
push
sbb
jp
sbb
push
or
dec
mov
int3
mov
sbb
lods
sub
fdivr
mov
xchg
push
pop
ret
ljmp
lea
sbb
hlt
mov
adc
cld
ret
test
lcall
push
dec
xor
nop
inc
leave
dec
jo
adc
push
cld
sbb
loop
loop
pop
jmp
inc
loope
and
mov
mov
push
adc
sbb
je
adc
test
mov
pop
into
jnp
or
pop
dec
movsb
cmp
std
cli
sub
ficoml
sbb
push
sahf
adc
adc
mov
adcb
and
lock
popl
inc
mov
adc
or
out
mov
cli
ljmp
test
jmp
mov
add
cli
or
mov
push
addl
adc
lea
xchg
push
call
mov
inc
in
push
sub
xchg
cmp
cmc
jl
lret
imulb
adc
movsb
mov
jmp
and
pusha
push
incl
dec
ss
shrb
ror
jmp
in
inc
add
aam
call
iret
stc
les
lock
mov
pop
mov
mov
lods
addb
mov
xchg
rolb
adcb
enter
xchg
sti
dec
lret
imul
sub
lcall
pushf
mov
sbb
test
push
sti
mov
decl
push
sti
mov
add
ljmp
dec
lret
sub
cli
enter
test
sti
mov
add
mov
stos
das
cmp
xchg
stos
or
cmp
andb
in
push
testl
call
dec
out
or
movsl
xchg
shll
push
dec
lret
rorl
sti
js
xlat
mov
add
cli
xchg
enter
mov
in
lret
leave
mov
movl
fcmove
mov
cli
into
or
xchg
enter
inc
sti
inc
lret
faddl
cli
push
enter
sar
int
dec
jae
dec
mov
add
cli
and
std
test
sti
lret
push
add
sbb
push
ljmp
sti
aas
lret
fadds
cli
hlt
enter
int
lret
xchg
in
dec
andl
or
or
sub
sbbb
push
insl
add
or
or
dec
les
int3
sbb
xor
int3
loope
stos
mov
test
icebp
adc
xchg
cmp
add
rcpps
out
mov
xlat
xlat
xlat
ret
nop
mov
loopne
or
js
into
fs
ret
sbb
mov
test
js
or
ljmp
mov
add
loope
xchg
inc
sbb
push
jge
dec
or
xor
fucom
xchg
mov
sti
xchg
lret
into
orl
daa
adc
arpl
jg
pop
fimull
sti
stos
lret
adc
ljmp
or
or
cmp
lea
cmpsl
int3
add
dec
or
xchg
sbb
sub
mov
or
sbb
xchg
push
inc
jmp
test
dec
outsl
xchg
push
xor
mov
adc
in
jmp
fisttps
adc
insl
push
jmp
pop
xor
dec
insb
jnp
out
pop
or
outsl
cld
in
cmp
fdiv
gs
sub
fstpl
out
or
mov
jl
bound
in
ljmp
adc
push
in
jns
or
movsb
clc
push
pop
or
daa
pushf
cld
dec
in
test
or
xlat
push
push
xchg
mov
inc
xchg
int
scas
cmp
ret
fisttpll
xchg
xor
dec
or
mov
inc
imul
dec
mov
pop
add
add
add
in
pushw
sub
outsl
mov
gs
sbb
mov
psubb
adc
sub
repnz
mov
popa
sti
or
jp
scas
sub
xor
sbb
or
ret
push
jae
mov
in
lods
and
xor
adc
in
and
aas
lret
lfs
rolb
sub
repnz
out
lods
adc
test
and
sbb
or
jg
insb
jne
es
scas
or
fnsave
jb
xor
insl
sbb
loopne
sub
ds
mov
adc
in
arpl
out
ficoml
mov
jae
xor
aaa
adc
lods
in
ja
divb
xor
sarb
loopne
fstl
sub
popf
lret
adc
in
dec
push
fidivrl
test
in
sub
cmp
or
sbbb
inc
mov
in
cmpb
sub
int
or
movsb
out
xchg
or
push
fsubl
call
or
sbb
or
lods
notb
mov
pop
lods
adc
or
jle
mov
lods
lds
adc
sbb
in
cmp
adc
fmull
add
or
test
or
addr16
xchg
sub
cmp
mov
jge
adc
or
cli
test
or
pusha
shrb
dec
aaa
dec
lcall
push
rclb
jno
xchg
lret
lods
and
dec
imul
pop
dec
int3
daa
or
mov
cwtl
and
adc
insb
add
insb
jnp
sbb
cmc
mov
insb
pop
lods
stc
mov
mov
xor
and
cmp
add
or
xchg
mov
insb
pop
loopne
ret
xor
fsubs
mov
bound
adc
sbb
push
neg
dec
sbb
inc
mov
xchg
int3
mov
push
popf
inc
sub
xchg
jge
add
xor
push
mov
call
or
roll
push
xorl
cltd
push
fsubl
cmpsl
or
mov
mov
or
pop
je
or
jmp
lea
xchg
nop
lcall
fwait
stos
clc
jb
and
mov
jmp
and
pushf
dec
jecxz
sti
sub
dec
and
and
nop
inc
jmp
adc
loop
mov
in
mov
adc
loopne
in
sbb
fsubl
mov
sbb
nop
mov
inc
ficoms
and
out
enter
add
mov
mov
push
repnz
mov
adc
fisttpl
out
add
test
jle
lcall
lock
ja
lret
aam
lods
mov
cmp
mov
les
mov
aas
faddl
mov
arpl
movb
inc
adc
or
cmpsb
mov
int3
data16
aas
test
mov
adc
repnz
rep
in
jmp
mov
mov
mov
insb
lahf
cmp
sbb
mov
idiv
imul
cmp
cmp
mov
push
jp
dec
mov
add
and
loop
sbb
push
ljmp
fdivl
cld
mov
inc
or
addb
or
and
enter
movb
ret
mov
xchg
add
jl
cmp
sti
mov
push
fisttpl
fs
sub
lret
in
bound
mov
push
bt
shr
pusha
cmp
movb
push
lea
je
bt
call
bt
neg
pushf
mov
sub
jmp
mov
bswap
lea
movb
mov
call
lea
lea
xor
ss
push
xchg
inc
mov
jecxz
xchg
push
pop
adc
stc
movsl
and
sub
push
fstpl
stc
jg
rcr
or
cs
mov
ret
inc
lcall
mov
pop
jb
cmc
js
cmp
and
push
pop
cwtl
xor
inc
xor
push
mov
outsb
sub
push
stos
sbb
movsb
push
push
push
sbb
pop
adc
mov
shll
repz
aas
lahf
pop
push
push
out
and
pop
or
adc
into
mov
mov
dec
mov
jnp,pn
mov
mov
inc
mov
push
imul
icebp
fisttpll
sbb
mov
and
sar
and
dec
stc
les
push
out
push
cmp
je
mov
sahf
pop
xor
outsb
cmp
adc
hlt
data16
sbb
cmc
mov
sbb
sub
fwait
cmpsb
int
je
or
sbb
sub
xchg
packuswb
aam
je
in
xor
mov
rcl
aaa
mov
mov
lea
jae
clc
mov
clc
rol
cmp
mov
bsr
push
and
mov
pusha
pushf
sub
jmp
adc
mov
sub
cmpsb
lds
divb
in
daa
fsts
repnz
push
insb
dec
pop
lcall
in
jns
jae
shll
orl
push
ja
adc
notl
pop
cld
sbb
mov
inc
or
pop
cmpsb
les
das
and
mov
out
lahf
repz
hlt
add
xor
cmp
outsb
jle
leave
daa
jg
sub
xchg
xchg
pop
pop
test
push
das
inc
jns
cwtl
addr16
shlb
jge
ja
ljmp
rcl
lret
xor
test
lret
add
lea
setbe
movb
movsbl
not
push
pusha
lea
pop
lea
movb
movl
movb
lea
jle
pusha
movb
mov
pusha
pushl
ret
push
sub
imull
sar
push
int3
iret
xchg
or
mov
jmp
add
mov
or
inc
add
je
test
and
cwtl
jnp
jno
mov
xchg
and
dec
inc
clc
stos
push
mov
mov
stc
ficompl
jp
mov
push
adc
and
or
dec
pop
or
dec
push
cmc
lods
mov
lcall
sub
and
leave
js
ja
xchg
rcl
repnz
or
inc
add
int3
or
lods
sbb
sbb
aam
xchg
or
lock
je
pop
or
ljmp
fdivs
fstl
dec
jp
outsb
sub
jae
sub
rcl
movsb
imulb
lods
je
pusha
inc
mov
jmp
ror
mov
call
call
push
pushf
push
lea
je
call
mov
push
adc
lea
mov
cmp
dec
push
inc
inc
addb
rcll
pop
clc
icebp
xor
testb
mov
ret
push
shlb
lret
jge
insl
rorb
std
out
movsb
inc
jl
fdivrl
push
mov
dec
xor
pusha
fsubs
aaa
aad
out
jge
loope
sbb
adc
je
xchg
sub
push
aam
xor
movsb
adc
mov
pop
sbb
sahf
fists
daa
sbb
je
ror
pop
das
push
ret
mov
pushf
test
popf
int
das
pop
adc
pop
aad
adc
ret
pop
inc
addb
inc
xchg
mov
xor
push
xor
add
call
xchg
ror
add
add
and
movsl
xor
inc
aad
inc
add
mov
and
shr
mov
fistpll
push
jl
sub
mov
int
mov
and
dec
mov
popf
fdivrl
enter
adc
inc
xorl
sub
or
lods
ret
push
icebp
out
adc
cmp
xor
mov
int
clc
or
aad
fsts
push
push
inc
call
mov
fsubl
mov
inc
and
jp
xor
les
stc
mov
mov
pop
out
mov
or
out
xlat
mov
sub
repz
and
test
pop
inc
xor
je
mov
pop
cmp
lock
sbb
addb
loopne
adc
scas
divl
rclb
inc
jp
pop
push
ficoml
js
cmp
movsb
leave
inc
add
ss
ljmp
or
mov
mov
mov
js
xchg
movsl
imul
rcrb
xchg
ffree
adc
daa
push
into
mov
fwait
cmp
shll
add
inc
cmp
iret
cld
or
xor
and
pmullw
fmuls
ror
add
dec
outsl
and
mov
inc
jle
icebp
mov
pushf
dec
add
or
and
xchg
nop
add
lds
fistpl
xor
lds
xor
xchg
das
movsb
lds
adc
leave
pop
icebp
xor
sub
out
xor
or
popf
pop
adc
push
mov
xchg
ror
push
movsl
neg
dec
mov
cmp
pusha
jmp
push
lea
movb
pusha
movl
push
call
cs
cltd
sti
popf
mov
sub
sbb
push
cmp
adc
outsb
mov
sub
add
xchg
sbb
or
jnp
orb
pop
enter
int
xchg
stos
sub
or
imul
bound
cmp
cmpsb
inc
mov
add
cmp
push
push
push
sbb
pop
inc
sbb
mov
in
mov
jno
jg
adc
cld
adc
jecxz
out
or
je
into
insb
dec
adc
xchg
pop
inc
mov
icebp
dec
aam
in
jmp
cmpb
adc
lods
adc
int3
push
pop
je
or
xorl
or
imul
add
ret
test
push
sti
adc
sub
ljmp
cmpsb
cmp
add
dec
push
adc
push
push
add
mov
adc
out
das
pop
sub
sub
inc
testl
add
loop
or
or
add
sub
dec
js
insb
adc
in
lret
or
cmp
mov
dec
push
mov
rcll
movb
dec
xchg
shr
into
push
push
pop
push
out
dec
jne
cltd
cwtl
bound
setns
int3
subb
clts
outsb
adc
vpunpckhqdq
mov
mov
into
sub
lret
in
adc
aad
mov
int3
pop
adc
lea
in
mov
cltd
sbb
sub
popa
sbb
dec
jecxz
cld
hlt
leave
lods
clc
adcb
mov
or
dec
pop
ss
stos
mov
pop
test
push
test
test
sbb
push
add
pop
out
es
movsl
dec
nop
int3
push
pop
cld
sbb
lods
nop
mov
dec
hlt
xor
xor
and
or
icebp
mov
hlt
mov
clc
fistpl
lods
sti
in
adc
das
in
imul
into
sub
pop
out
or
sub
inc
xchg
jo
test
imulb
leave
int3
sti
in
mov
lahf
inc
cmc
out
sub
fists
xchg
loop
xlat
push
dec
jae
out
mov
and
add
int
push
add
out
insl
xchg
iret
mov
cmp
pop
testb
shll
sti
fs
cmp
cmp
add
test
sbb
mov
jmp
dec
mov
inc
out
lret
out
test
call
push
int3
sbb
imul
or
ss
into
nop
imul
stos
stos
cmp
adc
in
scas
inc
inc
jne
cli
ret
cld
fldcw
push
and
jmp
xor
mov
ret
jmp
icebp
cmpsl
test
sub
mov
add
mov
mov
sahf
pushf
sub
push
adc
jmp
int
lea
sub
pop
and
mov
aad
jmp
add
jnp
lock
mov
jmp
rorb
jno
pushf
dec
add
mov
hlt
adc
cld
push
add
data16
out
sub
adc
and
repz
or
aad
movsb
lret
mov
out
iret
cmpl
jno
test
out
fldl
mov
adc
rclb
mov
dec
imul
enter
add
add
push
push
fistpll
fbstp
cld
clc
xor
sbb
roll
inc
sbb
or
arpl
sti
in
xchg
jecxz
lock
aam
mov
popa
ljmp
sbb
mov
lret
push
rcr
xchg
lods
inc
lahf
loopne
stc
orl
inc
or
flds
lret
or
cmpl
iret
mov
sub
loop
xchg
add
cltd
loopne
int
loope
out
inc
or
mov
cltd
stc
insl
jp
cld
dec
add
cmp
and
jno
andl
ficoms
jle
adc
jmp
adc
in
aam
outsb
adc
rorb
icebp
andb
or
jne
dec
mov
inc
js
inc
adc
mov
or
sidtl
pop
pop
fsubr
dec
dec
jmp
adc
add
icebp
cld
and
rorb
mov
adc
dec
xlat
jp
cmp
lds
ficoml
cld
mov
sub
dec
or
jae
icebp
cmp
divl
out
hlt
aam
outsl
mov
xor
adc
dec
xchg
stos
sbb
hlt
mov
test
cld
in
sarl
mov
sahf
pushf
xchg
jge
dec
adc
cmp
sti
cltd
jne
mov
adc
mov
je
ret
loop
icebp
jae
jnp
adc
ljmp
push
or
sbb
ljmp
es
and
lret
inc
test
mov
lcall
enter
pop
shlb
adc
enter
sub
out
lea
or
or
popa
neg
add
mov
fcoml
repz
aad
push
sbb
movups
in
mov
cltd
push
pop
ja
pop
mov
or
out
sbb
xchg
int3
jne
jl
add
out
into
sub
int3
or
fwait
adc
mov
or
xlat
addr16
sub
lret
bound
std
mov
jae
mov
mov
or
push
xor
andl
sub
inc
push
add
sti
scas
jle
jnp
push
rolb
ja
push
jmp
outsb
push
out
dec
push
cli
cmpsb
sbb
paddsw
outsb
in
mov
dec
dec
mov
or
push
adc
mov
mov
outsb
in
add
iret
xchg
mov
mov
cmp
fwait
adc
in
addl
push
mov
lret
jae
out
ret
je
xorb
in
jno
inc
out
jl
pop
jle
int3
js
pop
sbb
lret
cltd
repz
push
call
scas
mov
outsl
sbb
adc
mov
push
add
fldl
clts
adc
xchg
sbb
mov
hlt
sub
in
sbb
lock
adc
jo
insb
dec
adc
or
out
and
enter
pop
mov
adc
mov
xchg
sbb
xchg
add
jbe
sub
cmpl
add
repz
iret
lahf
add
int3
in
hlt
add
and
int3
outsb
in
mov
or
inc
rorb
outsl
lods
jecxz
mov
pop
mov
lcall
cmp
in
add
or
out
cli
orb
dec
jb
enter
sti
dec
hlt
sbb
je
jnp
in
xchg
sbbb
popa
daa
out
lods
nop
jl
inc
out
shld
pop
arpl
xchg
push
cli
sbb
in
subl
stos
cmp
mov
sbb
add
xchg
fnstcw
loop
or
adc
mov
xor
mov
int3
enter
sub
lcall
dec
mov
adc
sub
or
adc
xor
sbb
out
aam
bound
sti
movsl
sarb
mov
cmp
cwtl
mov
fstpt
jnp
jno
orb
stc
out
mov
insl
pop
lods
dec
pop
adc
xchg
pop
jmp
fwait
sahf
push
lock
add
out
out
xchg
mov
add
lahf
insl
dec
jae
out
mov
push
call
jecxz
jge
ljmp
cmpsl
push
add
mov
call
scas
les
lret
or
sbb
into
cmp
lret
outsb
shl
cs
icebp
stos
adc
xchg
dec
and
decb
lea
loope
je
xor
aaa
loopne
pop
xchg
sahf
test
lcall
push
out
mov
add
out
mov
out
fs
jl
jl
jecxz
iret
dec
fisttpll
ss
push
jle
sub
ss
cmc
rcrb
aad
xorl
adc
cmpsl
jae
xchg
or
jne
push
je
push
test
or
mov
push
hlt
sahf
jns
aam
cltd
adcb
cs
hlt
outsl
jmp
in
mov
or
outsb
aam
push
adc
nop
and
sti
mov
popa
mov
stos
sub
adc
sub
mov
lret
and
add
mov
jo
hlt
or
sbb
dec
sti
xchg
in
add
cs
lret
xchg
sub
push
jge
repnz
adc
pushw
fisttpl
sbb
int3
cld
lea
or
pop
cmp
add
pop
xchg
adc
xchg
add
mov
fcomps
popa
outsb
cmp
test
insl
sbb
push
adc
push
sbb
adc
pop
inc
stos
ljmp
aad
stc
lcall
hlt
jno
subl
test
jp
pop
test
je
call
jno
sbb
add
sub
pop
or
cs
mov
jno
push
add
sbb
jecxz
adc
mov
out
adc
sti
hlt
sti
cmp
outsb
div
mov
cmp
sbb
dec
push
push
cltd
or
adc
sub
dec
insb
in
ljmp
test
andb
add
out
fdivrp
xchg
or
sub
push
cli
inc
test
cld
or
mov
int3
or
adc
and
mov
add
stos
lock
out
add
cmp
punpckldq
xchg
cwtl
inc
test
mov
sbb
sub
add
add
sbb
adc
xchg
dec
outsb
xchg
add
sbb
pushf
repz
daa
nop
dec
jp
add
fdivs
adc
add
mov
ret
dec
dec
pop
cmc
sub
mov
mov
aam
pop
insb
lods
mov
lcall
sarl
ja
cmp
out
divl
or
movsl
or
js
cmp
inc
mov
nop
pop
mov
ret
sbb
int3
inc
and
out
loope
lea
ret
add
or
fimull
push
das
sbb
test
call
push
sub
stc
adc
pusha
jne
add
jg
scas
sbb
or
cld
pop
add
lret
push
lods
cwtl
lods
test
cli
rcrb
incl
dec
subl
sub
orl
or
ret
push
mov
jo
sbb
pop
inc
jmp
stos
lret
xchg
dec
in
pop
dec
hlt
fisubrl
add
je
shll
push
ret
mov
jmp
xor
int3
insl
sub
jo
cltd
in
xchg
mov
orb
mov
mov
sar
lods
lret
pop
push
jnp
sbb
push
addr16
pop
pop
adc
dec
xor
pusha
jecxz
imul
mov
test
outsb
shrl
je
repz
jb
mov
in
mov
pop
adc
cmp
add
lock
adc
call
imul
cmp
add
adc
iret
adc
push
mov
sbb
cwtl
pop
in
cld
insl
repnz
ret
xor
adc
ljmp
lods
in
icebp
xor
sahf
mov
cmpsb
imul
bound
stos
xor
or
adc
insb
imul
adc
lahf
xor
shrl
adc
add
out
movsb
and
adc
ficoms
test
out
repz
lock
stos
outsb
lret
icebp
imul
je
mov
hlt
ret
stos
fmuls
out
pusha
rorb
jb
or
lods
mov
mov
mov
add
mov
add
adc
jno
loop
mov
jecxz
int3
mov
jmp
mov
pop
mov
jg
mov
push
fstl
mov
dec
cmovl
fadds
and
xchg
in
repnz
into
jb
mov
or
or
stos
push
out
test
fs
in
cmp
fcmove
fidivrl
bnd
sub
add
adc
fcmovb
cld
loopne
test
hlt
jb
cs
adc
cwtl
cmp
adc
adc
mov
push
int
jnp
add
rorl
pop
mov
push
dec
adc
sti
mov
mov
add
ret
mov
xor
mov
mov
dec
cs
jns
add
fisubrl
shll
insl
arpl
sbb
cli
icebp
dec
jns
jle
cmp
or
pusha
call
mov
popa
cmp
mov
dec
mov
adc
stos
jp
adc
test
std
mov
add
sbb
rcll
mov
push
mov
jp
hlt
or
xlat
nop
adc
sub
inc
jne
mov
outsb
imul
fmull
mov
mov
mov
mov
fsubrs
dec
mov
cmp
jns
les
push
xor
into
scas
iret
cli
push
dec
gs
int3
add
das
out
lock
add
in
mov
add
jp
cli
sub
mov
xchg
push
mov
mov
lret
inc
repnz
mov
rcl
pop
pop
jne
adc
dec
sbb
in
dec
rorl
stos
or
incb
add
adc
filds
je
adc
outsl
cltd
in
movb
dec
push
fwait
adc
cltd
sbb
pop
bound
sti
mov
adc
mov
jmp
jbe
add
mov
mov
in
mov
pop
mov
movsb
dec
ficompl
mov
mov
lds
mov
fs
xchg
lods
push
loope
lahf
or
mov
je
or
push
test
orl
sti
mov
mov
xchg
push
xchg
push
faddl
lcall
arpl
ds
lcall
in
dec
sbb
addr16
adc
jno
sbb
add
mov
push
or
int
sub
mov
repz
adc
dec
mov
sub
stos
cmp
xchg
pop
cmp
mov
mov
nop
lret
fwait
pusha
push
sbb
jg
testl
xor
pop
sub
lock
add
das
xchg
int
and
in
jnp
jg
dec
lea
xor
pop
jne
add
inc
ljmp
pushf
loop
dec
xor
push
hlt
sahf
jnp
data16
repz
sub
mov
xor
sbb
je
ljmp
fwait
sbb
decl
jo
mov
cltd
adc
stc
xchg
aas
adc
pusha
jmp
add
aam
adc
pop
sub
xor
cltd
hlt
fwait
sub
fstpl
insl
jle,pn
inc
cmp
inc
cltd
adc
les
sub
xor
out
stos
popf
add
jmp
mov
hlt
arpl
loope
jl
mov
data16
jae
popf
cmpsl
stos
xor
int3
fildl
sbb
and
outsb
sbb
lret
jo
out
push
jmp
jmp
xchg
mov
divb
data16
out
pop
test
les
pop
xchg
push
stc
in
stos
mov
shlb
out
outsb
test
pop
add
mov
lods
jae
loopne
jne
inc
sub
es
lds
add
adc
outsl
stos
mov
jmp
sbb
pop
addr16
in
mov
cwtl
jp
pop
dec
inc
xor
mov
and
out
xchg
pop
mov
testl
sub
jecxz
dec
dec
fcoml
mov
int3
jnp
gs
pop
mov
arpl
jmp
xchg
stos
xchg
sbb
test
into
pop
bound
sub
cmp
pop
aam
jmp
cwtl
dec
in
adc
push
dec
insb
add
jno
push
imul
ffreep
call
test
out
adc
jl
xor
mov
push
pop
stc
or
pop
adc
enter
dec
iret
aam
nop
out
out
xchg
push
out
jecxz
jb
pop
fdivl
sbb
nop
inc
adc
jnp
ja
iret
iret
fbstp
pop
out
or
lahf
not
sti
subl
mov
adc
lods
mov
call
fimull
lock
arpl
pushf
outsl
mov
adc
ret
push
inc
inc
popf
pusha
shrl
jmp
inc
in
jl
pushf
xchg
or
std
adc
or
mov
or
test
ds
pushf
jp
xchg
in
push
mov
enter
push
mov
mov
repz
dec
in
pop
mov
xchg
into
inc
fimull
xor
mov
repnz
pop
lret
jecxz
add
sub
mov
mov
mov
int
xlat
sti
push
in
add
nop
cs
inc
dec
ljmp
inc
xchg
dec
ficoml
imul
xchg
dec
in
add
xchg
or
mov
test
cli
xorl
test
cmpsb
rcrb
int3
clc
cld
jae
cmp
jmp
int3
outsl
sub
decb
mov
adc
jnp
lahf
inc
lcall
mov
ret
push
ficomps
sbb
fldl
add
jb
lods
mov
repnz
mov
xor
xor
mov
fs
xchg
xchg
fdivl
adc
cli
add
rolb
into
pushf
push
add
flds
inc
pop
xor
out
mov
adc
hlt
out
xchg
xor
mov
add
add
bound
ret
scas
aad
sti
mov
and
in
add
es
rorb
push
xor
xchg
out
imul
pushf
pop
test
xchg
push
paddd
adc
out
in
sbb
jecxz
lret
lret
sub
test
jo
fdivrl
iret
jmp
push
out
jmp
popf
push
and
sub
mov
adc
mov
outsb
cli
divl
sub
jb
hlt
in
jno
mov
mov
or
dec
jb
sbb
insb
sti
jmp
mov
inc
scas
mov
or
cmp
ss
fistpll
mov
jmp
or
and
push
test
lret
add
or
jne
push
jl
inc
popf
mov
js
mov
pop
mov
add
sti
sbb
dec
daa
jmp
call
js
inc
loop
bound
jl
in
stc
inc
les
cmp
push
add
sbb
xchg
and
sar
dec
js
jnp
outsb
int3
sbb
add
in
hlt
rep
adc
fcoml
pop
movsl
int3
adc
outsb
repnz
mov
sub
rcr
mov
out
outsb
add
iret
mov
movsb
mov
and
push
out
out
xchg
xchg
mov
in
mov
jl
or
xchg
pop
push
jae
in
inc
jl
out
icebp
nop
mov
add
pop
fiadds
add
add
int3
out
or
in
aam
dec
adc
adc
dec
sbb
out
push
pop
pop
test
mov
adc
pop
cmp
sbb
stos
sbb
or
aaa
std
add
pop
mov
cwtl
into
and
lret
aaa
inc
ret
negb
rolb
cmp
mov
stc
xor
les
ret
cmp
movsb
sbb
push
out
mov
add
ret
fsubp
inc
ret
sbb
mov
in
iret
adc
popf
add
mov
ljmp
je
lods
in
jno
mov
cli
push
cmc
pop
insl
shl
andl
sub
add
stos
xor
and
or
enter
subl
adc
lret
out
push
push
mov
movsb
loope
and
sbb
add
lods
repnz
out
dec
or
mov
adc
mov
ret
push
mov
dec
lods
sbb
cmp
rcr
daa
fisubrl
sbb
sub
insb
push
sub
add
mov
pminub
xchg
adc
mov
dec
jbe
cmp
loop
rorb
jo
jecxz
or
and
ret
jmp
lret
hlt
imulb
cmp
cmp
stc
adc
int3
sub
sti
shlb
cmp
add
jne
fsub
repnz
xor
xchg
jnp
sbb
mov
cli
jmp
out
test
lods
out
nop
setns
add
negb
les
add
sub
ror
jnp
lods
std
sub
push
mov
faddl
and
jo
cmpsl
jne
or
xor
xchg
adc
into
bswap
add
mov
mov
popf
sub
mov
addr16
adc
into
add
add
cld
imul
push
aad
push
push
sti
adc
clc
sub
xchg
adc
sbb
pusha
hlt
dec
or
sbb
scas
or
dec
or
mov
addb
adc
out
push
cwtl
fnstcw
insb
int3
cmpsb
and
adc
movsl
mov
jnp
push
test
inc
cltd
add
aaa
psadbw
rclb
sub
cli
in
sub
inc
and
mov
imul
iret
push
sub
int
mov
lds
mov
jp
popw
cmp
add
adcb
push
mov
push
fisttps
cmpsl
xchg
or
xor
roll
movsb
outsb
or
test
aad
out
jne
in
shl
imul
mov
iret
aaa
lcall
rorl
xor
dec
hlt
jo
sti
std
ret
fisubl
add
sub
imul
daa
inc
sti
jl
out
lcall
sub
mov
lret
jmp
in
cmpl
ljmp
sbb
push
fistpll
mov
pop
xor
xor
adc
movsl
jecxz
add
mov
fnstcw
add
sub
js
cmpsl
pop
mov
sub
adc
cmpsb
xor
push
xchg
mov
es
lahf
or
roll
jnp
in
out
cmp
loope
pop
or
in
sub
popa
hlt
movb
mov
aad
out
testb
stos
push
dec
js
movsl
call
add
sar
addr16
lcall
push
popa
cld
sahf
scas
addr16
adc
je
dec
out
and
lock
inc
and
scas
out
std
andl
stc
dec
xchg
int3
test
cmp
nop
push
and
ret
lea
decb
daa
outsb
loop
arpl
shl
inc
mov
rcl
rolb
push
das
xchg
sahf
stos
ja
out
inc
add
sbb
mov
rolb
dec
fnstcw
push
push
shlb
inc
fs
pushf
shlb
loopw
out
int3
in
add
mov
xorl
std
xchg
mov
out
cmp
je
jb
adc
sbb
insl
sahf
push
rorl
lods
mov
testb
mov
repz
adc
fsubrs
in
pop
mov
add
adc
mov
cmp
mov
pushl
xchg
repz
lock
outsl
mov
pop
shlb
add
gs
add
push
pop
push
mov
jecxz
in
hlt
inc
retw
xor
repnz
inc
movsb
push
aam
int3
adc
negb
mov
aad
arpl
sti
cmp
sbb
andl
decb
imul
add
mov
idiv
dec
mov
push
lretw
jns
add
xchg
push
lods
mov
add
cmpsb
pushf
stos
push
fmull
mov
dec
or
jp
cmp
sub
adc
adc
lahf
je
sbb
fdivrl
sti
testb
xchg
mov
mov
adc
lock
pop
xor
xchg
sbb
mov
jmp
pop
jae
jbe
xlat
sbb
jg
in
ret
int
outsl
sbb
out
mov
imul
mov
xor
push
add
sbb
fs
testl
xchg
mov
pop
addb
xchg
push
int
push
mov
or
adc
pop
or
jl
inc
fwait
lret
mov
jle
xchg
decl
jecxz
or
dec
fcompl
xchg
sbb
leave
mov
sbb
test
jp
cmp
test
sbb
cltd
in
pop
pop
lcall
dec
ret
lds
ret
sbb
cmpb
add
jae
jmp
cmp
mov
stos
ljmp
mov
cmp
lea
add
or
or
incl
adc
pop
clc
sbb
rorl
ret
xor
cltd
or
addl
pushf
adc
xor
cmpsl
fwait
pop
xchg
or
pushf
add
pop
mov
dec
adcl
mov
les
mov
or
or
test
insb
insl
and
mov
lcall
sahf
or
sbb
cmpsl
sbb
cwtl
pushf
mov
xchg
orb
in
jge
mov
xor
rorl
mov
push
xor
push
fiaddl
or
add
call
mov
jle
test
push
or
sar
jae
loope
clc
incl
test
inc
sbb
loop
loope
call
fstps
lea
add
push
sbbb
jg
cltd
fcoml
mov
xchg
mov
push
adc
dec
das
sahf
add
sbb
stos
xchg
sbb
add
adc
jg
or
inc
push
mov
jg
push
addb
out
fwait
repnz
xchg
lcall
fwait
pop
les
lods
pop
int3
js
mov
xchg
and
popa
fisubs
test
pop
aam
or
xor
xchg
outsb
cmpsl
or
jnp
sub
xchg
mov
stos
shlb
mov
or
js
xor
insl
or
pop
lods
jne
sbb
into
testl
sbb
shlb
rcl
mov
jns
push
pushf
sbb
sub
mov
cwtl
xchg
ret
adc
or
push
imul
mul
fistl
sub
nop
adc
shl
jnp
pop
clc
sbb
xchg
cmp
inc
xor
pop
js
jae
inc
or
mov
push
adc
jecxz
adc
or
mov
xchg
setnp
xor
sub
add
jb
dec
inc
hlt
mov
pop
enter
cld
gs
addr16
xchg
inc
stos
cwtl
mov
aad
addr16
ljmp
add
jp
fists
pop
frstor
mov
mov
pop
std
js
fcmovbe
aam
sub
push
push
push
mov
cs
cmp
out
mov
aad
repz
cltd
in
jb,pn
adc
jnp
js
pop
rcrb
xchg
inc
nop
sbb
int
stos
pusha
fwait
sub
in
insl
mov
out
jp
mov
enter
or
icebp
jns
mov
mov
or
lret
sbb
rorb
fdivrl
jl
sub
adc
push
mov
sbb
jg
xchg
in
pop
movsl
cltd
out
cwtl
mov
repnz
orps
mov
xlat
movsb
lock
jp
stos
push
adc
and
sbb
fidivrs
jno
xchg
js
lods
dec
lret
mov
int3
or
addr16
insb
add
xchg
ret
sub
mov
fsubrs
xor
out
push
ficoms
int
popa
adc
adc
test
sub
or
sti
or
add
pop
and
popf
movsb
daa
adc
leave
fsubrl
cmpsl
adc
or
dec
scas
cwtl
inc
ljmp
outsl
adc
mov
inc
incb
or
fidivs
push
cld
cld
adc
andl
jmp
shr
cmc
mov
sub
stos
lock
test
mov
nop
jbe
xchg
fistps
jno
inc
jb
adc
shlb
data16
xor
ja
jmp
adc
out
loope
fiaddl
xchg
push
jp
inc
jae
test
test
jo
enter
cmp
mov
push
mov
or
add
lds
shll
int3
sbb
ret
dec
sbb
enter
xchg
das
add
mov
pop
insl
in
mov
mov
dec
inc
xor
mov
cs
lock
cwtl
push
in
mov
mov
add
or
mov
ja
cld
adc
lock
jne
int3
mov
xchg
pushl
mov
repz
jno
ror
outsl
dec
hlt
out
and
jo
jae
xor
stc
ja
jle
pop
mov
sub
add
dec
fidivrs
adc
push
xchg
movl
jns
push
xchg
mov
cltd
mov
or
mov
sbb
adc
lret
adc
scas
or
dec
daa
adc
inc
inc
mov
inc
fcompl
cld
in
daa
cmp
adc
mov
push
in
dec
sbb
xchg
test
xlat
lret
dec
in
stos
sub
and
movsl
insb
shlb
or
fbstp
repz
addr16
or
loopne
in
pop
mov
sub
in
adc
pushf
cmpsl
outsb
and
jecxz
imul
push
out
stos
and
test
mov
out
mov
outsb
pushf
cld
clc
pop
inc
pushf
testl
xchg
out
test
cmp
inc
jnp
loop
adc
push
rorb
or
fxch
daa
xchg
push
jmp
mov
sbb
cli
jbe
loop
or
adc
or
jp
jns
mov
push
or
jo
lcall
sub
xchg
push
add
call
add
rol
cmp
pop
in
sbb
rcl
mov
in
mov
popf
rorl
cmpsl
enter
scas
test
stos
insb
add
xor
shrl
sbb
and
loop
xchg
adc
pop
or
in
repz
fsubs
sbb
je
mov
pop
jae
mov
in
xchg
add
jbe
inc
cmp
dec
mov
shr
sti
or
pop
pushf
sarl
xchg
sbb
xchg
scas
ja
jecxz
xchg
cli
mov
jo
push
inc
out
stc
in
jmp
inc
and
js
mov
jge
cmpsl
mov
not
or
add
mov
push
mov
sbb
dec
subb
jno
iret
inc
lcall
mov
adc
mov
bnd
jle
out
mov
fwait
out
in
outsb
push
cmp
sbb
outsl
out
inc
cwtl
add
inc
jb
ds
and
clc
or
fadd
popf
inc
inc
outsb
int3
lret
push
or
pushf
cmp
push
mov
notb
test
adc
rorb
movsb
out
push
push
out
dec
mov
dec
push
push
outsb
js
fildl
push
jge
add
mov
mov
add
mov
add
and
gs
stc
mov
ja
daa
jno
or
dec
sbb
out
mov
sti
push
sbb
push
adc
add
out
fstpl
jae
jns
outsb
cmpb
push
add
insb
mov
adc
mov
xchg
jecxz
sti
and
scas
mov
pop
and
jnp
jns
adc
sub
inc
aas
out
int3
lods
cmp
dec
mov
jb
xchg
dec
jmp
push
xor
mov
pop
sub
loop
sub
add
mov
adc
fcmovnbe
sbb
add
lods
les
out
xchg
xchg
jle
mov
or
js
les
sub
into
lock
cmp
lret
mov
lcall
fsts
stc
inc
lret
scas
dec
mov
mov
or
pop
cmp
cmp
sbb
jmp
xor
or
dec
mov
push
inc
or
aas
jmp
in
in
mov
xor
cmp
lahf
mov
test
addr16
lods
or
mov
jmp
mov
and
add
icebp
mov
or
xlat
sbb
lret
or
shlb
test
mov
into
in
sub
fldcw
add
sub
ret
sub
mov
sub
jmp
int3
or
out
test
jmp
dec
nop
sub
push
stc
daa
popa
inc
adc
jmp
sub
adc
mov
nop
cmp
stc
pop
inc
add
dec
jmp
mov
stc
sub
and
mov
mov
jl
mov
fdivs
jbe
add
stc
sbb
sbb
mov
or
mov
mov
lods
movb
or
enter
mov
mov
dec
jmp
dec
xchg
cmp
cwtl
xor
mov
adcl
sbb
dec
sub
jp
or
mov
add
leave
sub
movsb
fidivs
in
test
mov
fsubrl
xchg
cmpsb
mov
lea
add
fwait
mov
insb
stc
dec
arpl
lea
sbbl
aas
push
test
out
xchg
xchg
jmp
lock
push
in
inc
stc
into
std
into
dec
mov
pop
mov
push
lret
call
and
jge
mov
mov
pop
inc
mov
lret
inc
or
jmp
jecxz
cli
stc
jo
nop
int
or
rorl
test
sbb
sub
out
dec
inc
cmp
add
test
insb
sub
and
cltd
fmuls
sub
loopne
jp
scas
or
daa
stc
into
inc
adc
fsubr
or
stos
xlat
jg
mov
pop
mov
add
rorl
leave
sbb
dec
out
sti
dec
push
test
lahf
pop
lods
xchg
or
mov
sub
jge
int3
enter
sub
jne
icebp
mov
or
jp
mov
aam
data16
fadd
call
inc
or
sbb
jmp
dec
sbb
aaa
adc
jmp
mov
mov
lret
dec
pop
sbb
mov
test
xor
mov
jle
pop
adc
repz
or
in
pushf
sub
pop
pop
mov
lods
add
mov
sbb
add
mov
call
mov
mov
pop
mov
jl
test
mov
cltd
vpminub
aam
inc
mov
adc
xchg
lahf
jl
sub
sub
adc
int3
dec
pop
and
add
ja
mov
mov
sahf
iret
out
pop
adc
subl
jo
xchg
int3
bound
shr
std
mov
inc
jne
sub
cld
scas
sub
cmpsb
out
int3
arpl
pop
testl
add
bound
leave
xchg
adc
sbb
jnp
cwtl
das
inc
and
cltd
sti
in
push
aad
sub
push
cli
sub
sbb
add
xor
jns
daa
cmp
sbb
jmp
lods
aas
or
xchg
dec
cltd
hlt
fildl
sbb
mov
test
stos
mov
jo
and
jp
add
jecxz
push
stc
out
sti
jge
push
pushf
push
mov
in
mov
jb
adc
sbbl
lods
mulb
out
test
sbb
sub
das
dec
loop
or
or
icebp
cmp
sub
or
dec
jb
fwait
test
imul
push
imul
mov
jne
adc
dec
int
push
cmp
or
xchg
mov
sub
lret
shld
cld
lods
leave
jb
adc
cmc
adc
push
fcmovb
add
movsl
jne
push
mov
dec
in
sbb
call
xlat
dec
bound
pop
add
adc
fisttpl
in
xchg
and
bound
dec
in
fisttpll
cmp
xor
jae
popa
sbb
out
and
sbb
sbb
clc
jmp
sub
pop
push
aam
cltd
add
and
rorl
dec
aad
test
js
lods
mov
icebp
mov
sti
jl
add
xor
stos
pop
push
out
test
lods
sarb
cli
sbb
or
adc
pushf
scas
ret
or
mov
jo
scas
aam
daa
insb
fcomip
xor
xchg
std
xchg
lods
repnz
jecxz
into
leave
mov
lret
call
or
xor
out
mov
mov
cmpsl
lret
add
dec
bound
xor
or
inc
xchg
je
and
xchg
ficompl
add
cmp
pop
out
push
cli
mov
add
push
fadds
test
sbb
pushfw
jbe
adc
adc
mov
push
in
and
and
or
cmp
or
mov
int3
push
lcall
subb
shlb
aam
or
cmc
stos
rcll
pusha
mov
add
testl
mov
or
adc
stos
inc
push
lds
sbb
lret
xchg
xor
fwait
mov
pop
xlat
mov
out
pop
push
arpl
or
inc
xor
mov
lock
daa
adc
jmp
fnsave
mov
test
add
add
fimull
lgdtl
add
xchg
add
bound
ficoml
or
sbb
mov
clc
sbb
cmc
cmp
adc
fwait
lods
inc
and
mov
xchg
data16
mov
pop
xchg
popf
flds
push
jb
aam
ss
jb
sbb
sub
popa
repnz
mov
add
pop
shrb
or
jge
fimull
or
leave
inc
out
lock
sbb
add
movsl
pop
and
cltd
enter
mov
icebp
repnz
out
out
leave
hlt
xchg
or
dec
in
push
test
push
lret
mov
in
pusha
pop
hlt
xchg
fistps
or
sbb
fidivs
or
and
cmp
hlt
mov
mov
mov
mov
pop
push
data16
inc
fs
adc
test
and
shl
add
add
cmp
movsb
insl
push
mov
adc
pushl
faddl
cmp
push
aad
popa
and
or
out
fwait
stc
sbb
mov
ret
pop
pop
daa
pop
lahf
sub
sbb
pushf
sub
mov
adc
xchg
insl
inc
int3
add
mov
jp
pusha
imul
push
into
pop
mov
cwtl
arpl
insb
add
cmp
fdivr
sbb
pop
add
loope
inc
lods
sub
pushf
xchg
cld
lret
cmp
into
add
mov
cltd
loope
pop
int
bound
mov
adc
clc
cwtl
jl
outsb
loope
jne
decb
adc
xchg
jne
and
inc
jmp
push
jae
iret
add
sbb
cmp
jle
ja
out
scas
les
xor
lock
xchg
mov
cmc
lods
mov
jns
mov
push
sbb
adc
pop
lods
pushf
mov
add
mov
out
lds
sbb
sub
bnd
out
push
jmp
xor
aam
test
dec
orl
sbb
sub
inc
pop
mov
dec
mov
je
or
jp
in
inc
int3
or
inc
sbb
mov
cli
inc
adc
sub
loope
cmpl
jbe
xchg
sbb
stc
test
and
or
fdivrl
cld
ss
pop
or
sbb
mov
imul
adc
pop
pop
adc
xchg
sbb
cltd
lret
loop
or
mov
mov
int
popa
sbb
aam
inc
movb
jno
ret
cld
add
add
movsl
sti
dec
pop
ss
mov
lea
push
into
sbb
ja
hlt
add
xlat
data16
clc
push
in
addb
mov
dec
inc
mov
jg
int3
xchg
addr16
out
lods
cld
fadd
add
sub
int3
jnp
xchg
adc
stc
add
add
out
ret
gs
test
sbb
or
dec
jge
lahf
sbb
adc
pop
or
jno
fstl
jo
adc
jnp
push
cwtl
or
and
lods
mov
push
test
mov
fmuls
or
mov
add
dec
mov
imul
or
or
ljmp
sbb
cmp
jp
cmc
cmp
stc
adc
push
pushf
dec
and
dec
mov
lret
jp
xor
lret
jae
inc
mov
sbb
push
iret
lea
add
sbb
popf
add
insl
fimull
inc
mov
xchg
cmp
ss
push
adc
inc
lods
push
inc
xchg
or
and
or
sbb
cmp
decb
test
insb
addr16
bound
lcall
mov
pop
lret
outsl
les
lods
test
xlat
mov
mov
outsl
in
adc
sahf
sbb
xor
enter
lret
outsb
inc
std
sbb
pop
out
repz
sub
jl
fwait
mov
sbb
orl
sub
cmp
push
sbb
jns
push
addb
xchg
bound
cli
movsl
gs
ficompl
inc
or
les
addr16
xor
add
jno
cmp
sub
in
pop
xchg
push
jle
add
mov
sub
in
xorl
xchg
jbe
enter
or
or
mov
xchg
sahf
decb
addl
add
rcl
xor
adc
fwait
mov
mov
cmpsl
int3
mov
add
add
dec
mov
jg
out
fucomp
jnp
jno
shll
mov
cmc
inc
sbb
and
push
lods
lahf
movsb
lret
xchg
jmp
lret
insl
xchg
imul
cmp
shlb
sbb
pop
pop
sbb
int3
add
in
dec
sbb
xchg
aad
fistpl
mov
movsl
or
sbb
fildll
sub
adc
aad
xor
pop
sbb
leave
xchg
dec
sbb
out
popa
xorb
mov
mov
ja
test
test
mov
dec
sub
adc
test
adc
scas
cmc
and
data16
imul
das
mov
mov
sbb
popf
std
xchg
in
sbb
or
stc
inc
sub
aas
adc
insb
frstor
xchg
push
fiaddl
xchg
cmp
xor
add
pop
pop
repnz
mov
lods
adc
ja
imul
mov
enter
or
mov
mov
inc
mov
popf
sbbl
fcmovnb
push
and
loop
lods
xor
pop
adc
adc
insb
pop
xor
xchg
and
adc
andb
rorb
stos
add
xchg
in
push
or
xchg
lock
ret
test
out
stos
add
or
out
lcall
pop
pop
and
inc
js
cwtl
mov
add
clc
lcall
push
sbb
mov
out
cld
mov
push
dec
cmp
sti
ret
push
add
sbb
and
mov
push
dec
add
add
mov
cmp
push
push
jge
sub
fimuls
add
jbe
pop
inc
inc
cmp
ret
fwait
xchg
aam
mov
cld
mov
add
sbbb
cli
dec
lcall
xchg
push
or
les
aam
loope
test
in
sbb
fidivs
dec
pushf
mov
mov
mov
dec
add
mov
icebp
adc
jmp
out
std
lea
cmpsb
jle
pop
mov
daa
out
aam
cld
ljmp
mov
ds
xchg
or
popa
adc
xchg
jg
fildl
cmp
das
sub
fidivs
inc
stos
pop
insb
loop
add
inc
mov
int
lock
cmp
lods
out
icebp
sub
pop
jecxz
jnp
inc
jne
add
int
fwait
add
dec
dec
in
xchg
loopne
xor
jl
adc
test
pop
outsb
pop
xor
daa
fiadds
add
cmp
imul
leave
push
xchg
lret
aam
lods
push
jno
fisttps
scas
stos
sbb
loopne
pop
sbb
push
repnz
les
adc
int
cltd
call
xchg
cld
adc
mov
add
ror
insb
fsubrs
jno
imul
lds
adc
in
movsb
jb
into
pop
repz
add
int
imulb
xchg
add
inc
or
scas
cwtl
jp
or
sub
push
sub
and
jns
sub
ret
sbb
push
cmp
out
or
xor
xchg
rorl
xchg
sbb
mov
add
std
adc
leave
push
sbb
cli
mov
xchg
imulb
jno
push
mov
sub
daa
push
sub
xchg
xor
inc
lcall
inc
dec
pop
cmp
add
ret
ja
sbb
data16
mov
dec
sub
pop
in
mov
and
or
lret
mov
inc
or
sbb
add
or
mov
mov
or
push
aad
jge
andl
cmpsb
sub
xchg
fwait
push
sahf
es
cmp
ja
inc
mov
sub
repz
adc
in
or
jo
push
inc
mov
sub
xor
cmp
adc
in
rorl
rolb
incl
stos
in
pop
and
orb
arpl
xor
bound
dec
mov
nop
and
xor
sbb
jle
or
add
jge
or
sbb
nop
imul
int3
mov
movsl
les
xor
add
or
aas
and
ret
mov
ss
or
movsb
adc
fmuls
sbb
les
in
push
ret
xor
or
xlat
popf
adc
dec
mov
pop
mov
es
mov
rol
sub
out
or
or
iret
rol
jmp
push
pop
icebp
pop
testl
mov
cmp
int3
or
push
or
pop
inc
sub
inc
sub
call
or
xor
lods
out
sbb
or
inc
fiadds
mov
mov
inc
or
jg
inc
popf
or
sbb
mov
aam
lock
in
add
out
imul
mov
mov
dec
sbbb
sbbl
popf
sub
lds
inc
adc
mov
inc
adc
imul
outsb
cmc
in
out
or
repz
jge
or
or
fisttpl
push
sub
push
movsl
loopne
sub
sbb
xchg
shrb
add
sbb
mov
sti
sbb
or
ret
stc
and
fwait
inc
adc
inc
xchg
mov
mov
icebp
mov
sbb
xorb
lods
dec
ja
adc
in
or
shlb
dec
or
or
mov
inc
pop
insl
or
sbb
or
in
dec
aas
jnp
mov
or
jl
push
int3
sbb
ja
call
push
xchg
repz
mov
lcall
loop
dec
cmp
in
mov
scas
dec
ljmp
mov
lea
sbb
enter
mov
lods
mov
and
or
fdivrs
scas
sbb
xchg
add
add
rorb
xor
or
cmc
and
adc
clc
lret
lea
adc
fsubrp
sub
or
mov
sarb
je
jne
push
or
or
lock
in
loopne
jl
stos
ret
dec
xchg
jp
or
mov
inc
dec
lods
iret
test
adc
in
popf
lahf
jp
inc
mulb
andl
cwtl
inc
sub
lods
add
xor
inc
adc
in
add
jno
pop
mov
adcb
mov
inc
jmp
pop
or
jns
xor
dec
and
in
add
and
dec
imul
sub
inc
cli
decl
sub
mov
inc
push
and
jle
or
jp
cmpsb
sbb
or
jmp
movsl
pop
jnp
data16
mov
cld
out
adc
adc
in
mov
push
or
sub
scas
data16
mul
lahf
adc
xor
or
in
mov
popf
sbb
bnd
jp
sbb
mov
or
leave
ja
insb
push
pop
inc
xor
adc
or
cmp
ja
xchg
jle
cli
xlat
mov
push
and
sub
out
add
je
mov
dec
nop
sub
xor
and
movsb
sbb
sbb
ljmp
jp
jne
clc
test
pop
or
adc
mov
xchg
cmp
push
and
jp
mov
or
push
out
cmpsb
or
jnp
pop
fisubrl
or
insl
movsl
es
loopne
imul
cmp
inc
dec
enter
lret
adc
or
popa
and
iret
cmp
es
push
jno
outsl
cmp
adc
jecxz
rclb
jne
dec
jp
or
std
insl
stc
or
outsl
push
cltd
sbb
fistl
scas
in
sbbb
out
iret
dec
insb
inc
jno
sbb
or
pop
xor
sub
add
fmuls
das
fisubrs
push
adc
and
or
jmp
in
or
and
repz
pushf
imul
sub
push
clc
adc
in
ljmp
or
jne
push
xor
or
xchg
cmpsb
dec
inc
jno
push
das
adc
bound
es
adc
cmpl
int3
or
or
scas
xor
or
insb
sbb
ret
or
inc
cs
or
xor
in
push
add
adc
lods
or
pop
sub
icebp
int3
nop
jnp
xchg
mov
adc
inc
in
cs
cld
xor
or
cmp
mov
stos
sub
and
lret
mov
arpl
fisubs
sub
mov
lea
mov
mov
or
fstps
insl
mov
fwait
call
sbb
push
mov
sarl
pop
lods
jg
repz
or
stos
dec
add
or
inc
adc
out
push
lods
clc
dec
nop
dec
js
or
inc
and
xor
daa
pop
and
xchg
push
test
xor
repz
or
pop
pop
sub
insb
mov
cmp
push
jnp
xchg
or
mov
xchg
jp
jmp
iret
adc
or
bound
icebp
sbb
cmpsl
imulb
mov
xor
inc
lret
daa
and
mov
stos
std
sub
cmp
adc
in
adc
mov
xchg
jbe
or
xchg
ljmp
mov
div
lods
push
leave
xchg
dec
sub
or
fildl
imul
or
cmp
je
in
repnz
fcoml
or
push
push
pop
or
lock
and
jnp
mov
mov
dec
lods
sbb
or
pop
inc
fsubrs
pop
xor
shlb
or
movsb
ljmp
xorl
in
jae
dec
cmp
pushf
sbb
or
repnz
and
mov
or
stos
cli
sub
sub
pop
adc
sbb
ds
stos
fldz
fisttpll
imul
sbb
push
lods
mov
scas
sahf
xchg
mov
adc
scas
sbb
push
ss
insl
lods
insb
in
cwtl
mov
pusha
xor
scas
pop
out
dec
dec
leave
cmpsl
imul
mov
xchg
cwtl
jp
push
ds
mov
adc
mov
mov
jl
xchg
aam
pop
inc
cmp
mov
hlt
xor
adc
imul
fistpll
out
mov
lahf
push
fisttpl
dec
mov
or
mov
fcomps
or
cmp
orb
push
dec
pop
push
aas
daa
enter
xor
iret
sarb
jnp
mov
sahf
or
adc
inc
pusha
sbb
adc
pop
or
inc
sbb
mov
pusha
fs
add
or
cmpsl
sbb
jae
sbb
into
adc
adc
lods
aas
mov
stc
mov
or
mov
fcomip
outsl
incb
aam
xorl
inc
push
pop
outsb
jle
aam
sbb
lret
push
fmuls
test
and
sbb
aam
jnp
xor
pop
jbe
jbe
jmp
add
add
add
lods
es
add
inc
in
mov
ss
add
movsb
aas
inc
xor
xchg
jmp
xchg
fisubl
out
test
sbb
mov
mov
pop
mov
mov
ret
inc
xor
mov
pop
int
xchg
aam
sbb
mov
push
push
and
mov
and
ss
sbb
mov
mov
movl
stos
or
push
jle
adc
popf
popa
xchg
ret
aam
dec
xchg
cltd
xchg
js
jg
fsub
aam
nopl
cmpb
jge
adc
cwtl
mov
lahf
rcl
dec
adc
sbb
outsb
jp
dec
add
mov
inc
inc
push
adc
add
lock
cmp
add
into
test
and
mov
cmp
adc
clc
xchg
in
jmp
or
loopne
mov
push
addl
or
jg
mov
sub
imul
lahf
xchg
xchg
out
mov
add
adc
dec
out
xorl
shl
mov
mov
jbe
rorl
mov
sub
leave
add
inc
dec
int3
dec
es
incb
jge
add
push
sub
loop
pop
cltd
out
and
fcompl
fimull
push
adc
mov
gs
mov
adc
adc
xchg
stos
lods
out
gs
fldcw
insb
sub
mov
fcoml
cltd
adc
sub
jle
adcb
cwtl
sbb
in
in
sti
push
sub
inc
in
mov
rolb
pop
mov
shr
insl
jmp
sub
adc
mov
jecxz
jb
fildll
adcb
test
mov
or
int3
ds
push
cltd
mov
pop
or
xchg
and
sub
lods
and
xchg
jne
jmp
sub
pop
aam
add
in
jg
imul
lds
xor
out
adc
mov
cwtl
test
lret
adc
fstp
xor
push
mov
xor
fidivl
inc
aas
sbb
arpl
int3
sbb
push
mov
dec
lea
mov
out
mov
cmp
adc
jnp
pop
xor
and
mov
or
mov
enter
mov
mov
xor
dec
insb
adc
ret
mov
and
or
nop
mov
scas
daa
mov
lret
jecxz
adcl
add
dec
adc
sub
and
outsl
adc
pop
sbb
or
jne
inc
subb
add
adc
and
mov
xchg
cmp
fwait
push
subl
stos
push
mov
mov
add
data16
fucomp
jecxz
add
sub
into
andb
imul
cmpb
inc
cli
imull
sub
loop
and
ficompl
fsubr
test
push
xchg
lds
lret
in
pop
mov
push
pushf
adc
push
in
and
loope
fcompp
sbb
test
fstps
push
xor
out
rclb
cmp
pop
mov
lret
insb
sbb
add
icebp
cltd
fwait
push
dec
cld
and
ds
loope
push
adc
movsl
int3
xchg
push
adc
rolb
mov
popa
loopne
lods
ret
bound
out
mov
mov
xchg
jno
and
pushf
sti
filds
push
bound
outsb
sbb
sbb
inc
cmp
lods
enter
inc
push
cmpsl
aad
dec
add
aaa
push
jnp
movsb
loop
fst
or
lock
iret
jo
loop
add
mov
cmp
add
cltd
leave
and
pop
ret
jg
mov
xorb
cmp
xchg
data16
fisubl
pushf
cmp
aad
je
sbb
subl
adc
fwait
ds
inc
sbb
jae
or
push
shlb
int3
aad
loop
stos
pop
sub
adc
jbe
ficoml
cmovs
dec
inc
jns
push
mov
ss
fcmovne
les
add
pop
and
or
ret
addl
sub
cwtl
or
sub
test
daa
pop
repz
fdivrl
mov
mov
inc
push
cmp
adc
repnz
xchg
push
jb
pop
lods
loope
mov
es
rorl
rolb
faddl
and
dec
roll
mov
out
or
in
adc
repz
jl
or
cmp
mov
cli
sbb
test
aam
adc
push
mov
add
xlat
test
ret
test
pop
pop
or
jbe
add
mov
pop
push
cs
sub
jns
push
pop
dec
sub
cld
or
cwtl
inc
and
dec
std
mov
in
in
inc
sahf
add
mov
and
idivl
sbb
sub
insb
lahf
push
sbb
das
lock
push
daa
and
leave
push
xor
jp
mov
arpl
or
iret
sub
add
mov
sbb
push
popa
ja
or
fsts
or
daa
cmp
aad
mov
sub
aad
les
aad
imul
pop
imul
sub
add
or
and
xchg
and
jmp
mov
mov
mov
mov
out
cli
xor
dec
mov
icebp
stos
push
ss
aaa
addr16
sub
addr16
popf
add
push
adc
mov
xchg
mov
add
push
pop
sbb
or
jmp
movsl
adc
inc
mov
in
fildll
loop
cmpb
dec
push
out
repz
jl
pushf
repz
or
into
sub
cld
cwtl
pop
or
rcr
or
jmp
cmc
hlt
pop
out
aam
je
cmp
cli
sti
xor
xor
ss
ja
push
xchg
sbb
xor
fstp
enter
out
daa
jl
inc
scas
jmp
adc
jb
dec
jne
mov
enter
lcall
cmp
mov
and
dec
jg
inc
dec
das
jne
in
ret
mov
xor
popf
mov
or
rorl
mov
fwait
xchg
push
or
lods
pusha
sub
insb
in
loope
and
stc
gs
push
sbb
add
mov
ffree
fadds
push
sti
add
fisttpll
aaa
adc
add
xor
repnz
xor
mov
sub
hlt
call
adc
ret
add
mov
xor
xchg
mov
and
test
and
push
in
lds
fdivr
cmc
decl
lds
pop
jnp
shl
mov
adc
sahf
cmp
inc
push
ret
sbb
mov
pusha
jecxz
gs
mov
aam
leave
sub
shl
in
xchg
mov
in
add
push
xorb
cmpsl
mov
xor
cltd
loope
sub
lock
cmp
aam
mov
in
xchg
mov
sbb
or
and
out
jbe
inc
mov
add
mov
jp
call
cld
push
cmovno
mov
dec
push
test
cmpsl
mov
rcll
xchg
add
cmp
and
or
cmp
insb
inc
adc
aam
sub
mov
jge
lahf
pop
and
inc
push
repz
loopne
push
out
lret
lods
icebp
stos
das
add
loope
pop
lea
add
push
sbb
sbb
xchg
push
andb
pop
dec
xor
and
incb
pop
loopne
mov
and
push
fimull
or
dec
fmuls
insl
lcall
adc
cmc
adc
sahf
jg
adc
lahf
in
dec
xor
data16
push
loope
loopne
push
ret
pop
fdivrs
sbb
or
es
in
aad
xchg
push
sbb
or
rep
or
daa
lret
es
push
push
jbe
xor
je
cmp
and
jge
insb
or
das
das
in
sub
cli
in
inc
out
or
jo
pop
imul
or
xchg
ficoms
shll
adc
iret
daa
xchg
int3
icebp
cld
leave
mov
pop
add
xlat
xchg
push
arpl
iret
ret
iret
jmp
rcrb
lret
insl
sub
cli
inc
adc
pop
xchg
outsl
cwtl
sbb
int3
add
lcall
and
mov
fdivr
pop
or
scas
sub
inc
adc
cld
pop
jnp
mov
pop
push
push
fs
ja
jp
mov
in
stos
fcoml
insl
add
cmp
jbe
cmc
addr16
shl
xchg
push
insb
fcoms
pop
scas
cmp
jl
sbb
sbb
rolb
loope
jge
add
xchg
pop
fstpt
mov
je
push
outsb
dec
push
jns
mov
add
lahf
mov
aam
addb
jle
std
pop
sbb
lds
popa
loop
xchg
loop
jo
mov
dec
or
push
jnp
sbb
loope
dec
push
std
sbb
add
pop
pop
and
adc
xor
or
push
test
ja
mov
out
dec
loop
push
jg
cld
aad
icebp
and
jae
aam
jp
and
jg
xchg
cmp
sbb
insl
out
inc
jmp
popf
mov
inc
mov
gs
fbstp
loop
shll
pushf
push
sbb
test
dec
adc
pop
les
shll
aam
fcompl
sti
leave
dec
add
sbb
inc
pop
enter
adc
inc
mov
or
mov
decb
mov
add
cltd
push
lret
cs
icebp
imul
enter
bound
fbstp
sub
sbb
cli
inc
adc
stos
test
or
and
inc
pop
js
fcmovnu
mov
or
xor
in
sbb
mov
das
int3
cmpsb
adc
push
xchg
leave
clc
fdivl
rorb
and
stos
out
shll
outsb
je
sbb
mov
out
shrb
or
lret
int
in
add
leave
mov
loope
shll
jbe
addr16
ret
and
or
lock
mov
inc
sbb
cwtl
cld
idiv
int
pop
xchg
add
insb
jp
add
xchg
push
xor
lret
inc
out
ds
jae
mov
or
dec
mov
lahf
dec
test
ret
jbe
mov
mov
repnz
out
jge
dec
xor
stos
or
mov
bound
mov
inc
adc
cmp
xchg
pop
insl
xor
pop
rolb
fistps
xchg
js
adc
ss
imul
lds
push
mov
sub
jmp
sbb
jns
mov
inc
jo
mov
cmpb
shrl
iret
cmp
push
test
sub
test
xlat
orb
or
or
adc
test
inc
imul
stc
imul
sub
jecxz
adcb
jecxz
pop
shll
xchg
repz
jno
or
sbb
push
dec
inc
loope
rorl
push
aam
sbb
daa
pop
fcomps
icebp
incl
adc
mov
add
mov
int3
pushf
das
push
rorl
stos
adc
pop
push
xor
sarl
or
aad
add
jo
push
inc
push
sbb
cld
icebp
sub
decb
push
mov
sbb
xor
inc
add
adc
sti
or
pusha
shl
int3
jns
add
loopne
inc
aad
mov
sbb
imul
jg
ret
xchg
fcomp
push
mov
or
sbb
xlat
sub
xchg
popf
inc
out
sub
sbb
dec
sub
push
inc
pop
inc
adc
mov
sbb
ja
sbb
leave
sbb
mov
mov
fidivl
cmpsb
negl
pop
or
sub
je
add
sub
lock
xchg
inc
mov
add
or
aad
lea
mov
mov
mov
sbb
lods
fsubrp
xor
call
sub
fists
mov
and
xchg
stc
add
mov
lock
xchg
in
jbe
mov
cmc
divl
daa
sahf
es
scas
inc
mov
int3
mov
sbb
faddl
test
shrb
dec
mov
insb
aam
mov
stos
rcl
ficoms
loope
adc
push
dec
aam
stos
fcmovne
loop
das
pop
cli
mov
sub
push
ljmp
pop
int
adc
sti
mov
lock
jnp
cmp
sbb
push
fwait
and
inc
jae
jg
test
xchg
js
sarb
imul
test
xchg
cmp
repz
hlt
push
lahf
scas
jne
and
mov
popa
xor
test
jns
inc
jb
fists
es
lods
or
add
xchg
int
lea
mov
jo
push
jecxz
pop
jnp
cmpsb
gs
aad
ss
loopne
add
ret
lock
adc
cld
ror
scas
inc
jns
into
cld
mov
jmp
adc
out
prefetch
cltd
cmc
imul
rcr
cmp
xchg
in
lock
sbb
aas
out
mov
xor
dec
lret
xor
mov
or
ljmp
in
dec
fstl
out
fldenv
aam
scas
in
out
movsl
and
outsb
jecxz
sub
xchg
ja
fcomi
or
lods
sbb
push
mov
jge
mov
int3
mov
push
inc
add
leave
ror
add
popa
rcrl
dec
cld
cmc
lret
aad
data16
dec
mov
sahf
ret
mov
mov
inc
addr16
adc
addl
aad
mov
outsl
insb
movsl
sbb
mov
test
int3
or
xchg
push
int
xor
int3
insl
push
mov
in
icebp
adc
push
dec
inc
mov
cmc
lods
dec
adc
sub
test
aaa
cltd
inc
add
mov
lcall
call
sti
icebp
js
mov
and
roll
jp
cmpl
out
addl
sbb
adc
call
jnp
sub
add
push
jne
loope
shl
pop
adc
stos
mov
jno
fmull
mov
jne
fbld
in
in
dec
jnp
inc
adc
insb
aas
cmpsb
push
js
sarb
adc
xor
test
sub
xor
les
loop
or
push
sbb
lods
add
or
lahf
inc
or
imul
adc
mov
loope
add
subb
into
out
es
mov
fimull
cmc
popf
xor
sti
push
daa
cmp
or
out
add
imulb
xchg
mov
sub
lret
scas
jmp
add
in
mov
loopne
adc
test
mov
adc
imul
mov
xor
and
or
mov
imul
add
add
pop
out
cli
loopne
xchg
aaa
insb
and
lret
imul
push
fsubrl
push
fsubs
es
add
loop
mov
test
ret
popa
jb
xchg
outsb
loope
aam
and
rolb
in
lcall
arpl
in
add
adc
loop
ficoml
test
es
int3
mov
outsb
mov
cmp
or
dec
sbb
out
mov
adc
cmp
sarb
or
or
fidivrl
out
push
or
mov
es
cmpsl
dec
sub
sub
add
adc
test
cmpb
lret
fisttpl
xchg
call
or
insb
and
push
add
pop
mov
xor
lcall
mov
or
sbb
lcall
repz
lock
in
outsb
mov
out
nop
test
or
fisttpll
sub
movsb
repz
sbb
lods
es
insb
mov
add
imul
mov
sbb
orb
pop
jg
xor
sub
int3
sti
out
cmp
dec
imul
in
inc
cwtl
sbb
fbstp
lods
sub
or
dec
jecxz
vpor
adc
sbb
hlt
mov
xor
mov
shlb
and
sbb
arpl
scas
mov
lea
or
mov
adc
jmp
loopne
icebp
adc
idivb
decl
xchg
clc
cmc
ret
or
xor
jnp
or
hlt
inc
add
fsubs
pop
fidivs
loop
and
or
fsubs
jne
add
movsb
sbb
xchg
and
flds
mov
lea
mov
or
rorb
pop
sub
pop
andl
or
or
mov
dec
pusha
or
dec
mov
push
sbb
lea
mov
pop
sub
lds
xchg
dec
or
sbb
cmp
inc
adc
das
jo
and
push
push
sbb
adc
adc
sbb
xchg
add
cwtl
cmpsl
mov
out
loope
sub
ljmp
lcall
and
adc
adc
shrb
jnp
jae
test
mov
jo
shr
jne
cltd
adc
loopne
inc
test
xchg
sub
mov
mov
shll
or
adc
sbb
or
mov
insb
mov
and
subl
mov
or
add
pop
sub
sbb
loop
or
sub
lret
adc
pushf
add
mov
lret
mov
lret
bound
repz
push
ret
push
pop
jle
and
sub
push
push
xor
popa
in
add
lcall
imul
pop
lret
popa
and
push
or
aas
fidivl
fstpl
mov
mov
cmp
adc
sbb
add
mov
dec
fucomip
cmpsl
or
push
push
inc
dec
cld
push
mov
lea
xchg
sub
es
out
jmp
add
inc
jne
aas
test
mov
test
out
or
mov
dec
xchg
or
nop
test
lods
into
fisubrl
push
jle
xorb
adc
lods
or
adc
lcall
dec
mov
inc
cs
cmp
pushf
inc
mov
push
push
rorb
mov
adc
addr16
or
or
push
lret
jae
xchg
shlb
adc
or
sbb
or
xchg
sbb
inc
prefetch
or
lock
sub
or
pop
lods
or
jne
sub
das
cli
sbb
add
sub
pop
out
sub
pop
sarl
iret
stos
xchg
call
loopne
insb
pop
jmp
fimull
pop
add
arpl
jb
xor
pop
movsl
repz
or
lds
push
dec
or
test
adc
mov
stc
jmp
inc
shrb
pop
and
push
fdivs
lahf
les
add
in
fisttpl
pop
into
add
or
mov
cmp
stos
add
std
or
aaa
pushf
imul
sbb
mov
test
add
pushf
sbb
movsl
push
popa
jno
fcomps
jmp
mov
sbb
jnp
loop
dec
mov
inc
movsl
mov
adc
ja
ret
mov
xor
imul
jle
add
inc
adc
pop
or
mov
out
popf
lods
movsb
aam
cwtl
xchg
movsl
adc
or
cmpsl
pop
bound
mov
inc
cld
jns
inc
xlat
pop
lods
or
das
pop
sub
and
inc
enter
sti
add
dec
pusha
adc
xor
es
sbb
and
sub
je
adc
lock
push
pop
sub
mov
stos
push
leave
or
rorb
push
repz
ja
adc
jnp
or
cmp
push
mov
or
and
push
fsubs
lahf
cmpsl
outsb
jbe
xor
inc
popa
mov
int3
mov
sti
mov
ficomps
push
dec
push
cmp
mov
pop
cli
dec
cmpsl
or
nop
mov
sbb
in
js
xchg
orb
pop
add
adc
out
xor
arpl
test
jno
test
xor
mov
fsubs
dec
pop
repz
xchg
dec
test
mov
jmp
push
jle
or
pop
dec
mov
out
add
movsl
xchg
mov
cmp
sarb
sbb
cmc
inc
fsubrs
xor
mov
cmp
andb
and
fbstp
jl
in
lcall
icebp
cmpsl
fstps
sahf
ret
adc
or
das
sbb
rorl
xor
add
sbb
adc
lods
fistpll
xchg
adc
sbb
rorb
cltd
movsl
test
or
lods
adc
aas
arpl
jae
mov
or
adc
jge
or
sbb
push
mov
add
lahf
int3
ljmp
and
aad
adc
or
pop
xor
push
sahf
pop
or
jmp
mov
arpl
out
cmp
and
movq
orl
or
sub
sbb
sub
mov
or
fsubrl
push
mov
jo
mov
or
fdivr
or
sbb
xchg
mulb
lahf
push
in
push
jns
pop
dec
xor
or
mov
mov
in
pop
xchg
movsb
or
push
xor
jnp
adc
dec
sub
push
xor
mov
nop
pop
sbb
repnz
add
aam
adc
or
jg
mov
mov
mov
icebp
pop
adcb
mov
mov
fxch
stos
mov
jo
fadds
pop
or
and
mov
adc
aad
mov
sub
or
orl
xor
std
or
daa
jl
test
aaa
aad
stc
sbbl
mov
mov
sar
hlt
data16
mov
loopne
aam
dec
sub
popa
lods
or
or
pop
dec
cs
sub
fistps
sub
sbb
rcll
hlt
scas
adc
ds
or
dec
dec
sub
push
addl
cs
stos
xchg
cmp
jg
frstor
nop
outsl
stos
sub
negl
jmp
lods
cmp
stos
mov
and
jg
mov
sbb
xchg
fwait
aam
out
fdivrs
xor
cmp
es
push
push
sti
mov
lods
lcall
scas
lods
or
mov
cmp
jmp
or
je
add
and
or
or
mov
jge
lods
xchg
imul
iret
js
mov
mov
stos
mov
lret
sti
or
stos
out
sub
push
mov
xchg
dec
or
scas
popf
fwait
mov
inc
nop
imul
ret
lret
jne
dec
xchg
inc
shr
push
sub
jnp
mov
mov
adc
loope
sbb
sbb
xchg
inc
mov
cmp
add
push
pop
dec
xchg
add
inc
add
and
push
sbb
aam
jp
orl
cltd
shrb
int3
or
imul
jmp
lock
lods
xchg
shll
imul
popa
add
fistpl
pop
dec
dec
adc
in
xor
mov
imull
pop
jmp
sbb
addr16
or
push
xchg
les
or
push
dec
mov
addr16
test
insl
inc
and
cmpsb
orl
pop
cs
xchg
mov
stos
pop
rcpps
push
or
cli
addl
sbbb
cwtl
sub
push
jns
jns
sbb
cmp
ret
lods
enter
pop
mov
cli
xchg
popa
mov
test
cltd
int
ret
ficoml
shll
cwtl
push
sbb
push
cmp
add
mov
xchg
xor
cmpsb
pop
insb
xchg
enter
and
mov
mov
jmp
stos
movsl
int
std
dec
fwait
psubsw
or
or
jecxz
cmp
xor
jo
lods
lret
cmpsb
add
jmp
and
out
mov
jl
adc
sbb
add
ret
xchg
sahf
int3
jnp
sbb
cwtl
sub
hlt
add
adc
js
mov
shlb
imul
pop
jp
pop
insb
add
stc
jg
sub
dec
inc
pop
adc
xor
push
out
shlb
sbb
out
mov
sbb
xchg
fadds
add
repz
mov
mov
int3
jmp
adc
por
cmp
in
insl
jecxz
sti
adc
inc
adc
adc
fstpt
ljmp
popf
call
in
out
gs
xor
push
cmp
fildl
aas
shl
cmp
stos
sbb
in
dec
mov
adc
adc
out
aas
jl
aad
push
push
shrl
add
mov
push
inc
xchg
aam
jne
or
outsl
in
mov
aam
fcomps
add
add
or
out
mov
rcrl
sar
lock
adc
sbb
dec
test
fs
out
lret
or
inc
jne
adc
loope
mov
fsubrp
leave
mov
aas
dec
jb
push
clc
mov
daa
lret
mov
es
add
push
mov
sbb
cmp
out
and
imul
sub
cmpsl
inc
imul
dec
repnz
enter
out
adc
xlat
data16
pop
and
cmp
mov
jnp
out
cmovb
shll
pop
bound
loopne
xor
outsl
idivb
xchg
jge
dec
mov
daa
sbbb
mov
test
sar
mov
fdivr
test
sbb
rolb
lret
inc
push
xor
xchg
out
jne
jo
sub
leave
scas
movb
ficoml
cmpsl
dec
js
fisttpl
cmp
outsb
mov
adc
push
mov
pop
xor
jmp
insl
popf
fstp
pop
pusha
mov
jbe
pop
push
imul
loope
jns
sub
jnp
lahf
add
or
mov
pop
fbstp
jge
movb
ficomps
xchg
fucomp
dec
dec
sub
xorb
mov
lods
mov
repz
fcmovne
mov
out
lret
int3
cwtl
outsl
test
jnp
mov
cli
lds
cmp
sbb
mov
jl
jb
add
sahf
push
dec
pop
adc
test
or
filds
shlb
add
js
sbb
cmp
sti
pop
les
add
leave
push
mov
and
dec
lods
orb
mov
in
ficompl
mov
int
xchg
dec
xchg
fidivs
es
xchg
inc
xchg
testl
pop
in
lret
mov
dec
lret
or
in
aad
mov
push
add
cmp
sub
sti
mov
dec
and
mov
and
enter
arpl
lcall
inc
xchg
sbb
or
sub
insb
push
adcl
int3
add
jp
lret
dec
in
repnz
int3
ss
ret
ficoml
or
mov
leave
jle
sbb
sub
push
add
imul
push
pop
fcoml
cltd
inc
ficoms
xlat
cmp
in
pop
pusha
fcomip
loopne
or
cmp
imull
dec
lods
or
out
inc
outsb
aaa
cmp
cmp
push
push
fiadds
jmp
mov
fisttpl
and
mov
cltd
shll
dec
pop
in
ljmp
adc
dec
fsubp
mov
dec
iret
push
les
cltd
add
cli
dec
loope
mov
test
mov
jmp
in
pushf
dec
scas
cmp
or
sub
pop
pop
ret
adc
rorb
ret
add
push
xchg
fiadds
mov
jnp
push
int3
addr16
adc
in
nop
cld
ret
lds
cmp
push
add
pop
jbe
xchg
sti
stos
adc
clc
fimuls
add
dec
sub
ret
add
fwait
cmp
cld
adc
out
aad
stc
ror
xchg
insb
ja
leave
fwait
dec
push
inc
repnz
pop
mov
push
cld
addr16
inc
jmp
dec
mov
add
loop
add
loop
imul
movb
mov
ffreep
mov
je
je
lahf
fs
lret
and
clc
jo
ds
inc
mov
sub
sub
je
cmp
mov
push
and
sbb
int3
adc
cmp
adc
push
sbb
add
add
sbb
push
push
dec
bound
imul
std
popf
cwtl
lret
push
xchg
pop
jmp
setge
xchg
enter
mov
jecxz
flds
sub
adc
addr16
add
pop
std
mov
scas
add
out
inc
push
pop
jle
sub
pushf
lock
push
push
mov
xchg
jg,pn
repnz
push
cmpb
pop
push
imul
mov
js
in
sbb
popl
in
inc
cmc
test
fwait
mov
sbb
adc
sbb
push
bound
cmp
mov
in
pop
sbb
outsb
jb,pt
outsb
mov
pushw
insb
cltd
push
add
les
push
int
enter
insl
sbb
sbb
or
push
inc
cmc
cmp
mov
das
mov
add
fists
int3
sub
jbe
addr16
or
push
enter
adc
es
daa
repnz
cltd
inc
and
push
sbb
xor
push
shll
mov
insl
cwtl
aaa
push
repz
mov
xchg
dec
xor
push
mov
es
sarb
sbb
mov
lcall
fs
dec
fs
pop
fs
pop
dec
jb
or
popa
out
pop
lds
repnz
not
in
xchg
test
lret
cmc
insb
cmp
fwait
fs
mov
or
daa
sbb
rcl
lea
arpl
ret
inc
push
cmpsl
repz
push
test
rorb
adc
jmp
aas
mov
push
pop
pop
add
push
or
out
outsb
push
aas
inc
das
ja
or
daa
daa
or
pop
mov
inc
mov
add
dec
dec
subl
or
ret
jno
or
dec
push
add
mov
faddl
push
ret
cmp
sbb
add
push
sbb
jne
out
jmp
loope
movsl
loop
push
test
das
popa
sub
jbe
cmp
adc
jno
xchg
push
out
fbstp
jo
aam
push
adc
es
fnstenv
je
vpxor
mov
xchg
ret
jl
push
jb
call
addr16
and
jbe
mov
insl
cmpsl
or
xor
stos
xorb
dec
add
les
int3
jnp
les
push
xchg
mov
rcll
xchg
pop
mov
sbb
ds
adc
jecxz
sbb
add
scas
out
dec
and
mov
sub
lods
adc
sbb
clc
ss
xchg
fisubrl
sub
xchg
in
out
xchg
int
inc
repz
mov
pop
add
sbb
inc
inc
adc
mov
push
aad
add
adc
lcall
xchg
add
jb
xchg
adc
orl
rclb
shrb
jge
lock
inc
or
stos
adc
bound
call
xchg
icebp
adc
or
or
sbb
rolb
pop
jb
sbb
sub
hlt
loop
cmp
in
sbb
pop
call
pop
cs
mov
mov
mov
add
imul
add
lds
mov
fcmovu
test
push
sub
sbb
or
mov
mov
adc
adc
or
mov
xorl
int3
pop
xchg
arpl
fcompl
xor
sub
cld
push
inc
int3
add
xchg
jp
dec
test
xor
sbb
and
into
daa
in
mov
lret
ficompl
dec
iret
repnz
and
mov
inc
push
add
test
rol
hlt
aas
rorl
push
mov
push
dec
sbb
mov
push
scas
sub
sbb
inc
rorl
not
xor
jl
and
dec
daa
int3
cmp
push
xchg
sub
mov
repz
rcr
or
leave
lret
add
enter
sti
or
pop
pop
enter
and
ret
pop
test
jnp
adc
pop
mov
mov
fistps
mov
int3
push
cmpl
lock
repnz
xor
jecxz
lods
push
mov
nop
xor
cltd
aad
jl
adc
sti
dec
loop
push
shlb
les
cmp
xor
ss
pop
shl
scas
pop
rolb
int3
add
in
testb
lret
sbb
repnz
jb
shl
and
mov
adc
ja
or
stos
adc
cmc
add
icebp
xchg
int
cmp
mov
loopne
inc
adc
pop
outsl
sbb
fcoml
test
sbb
sahf
pushf
jl
addr16
mov
add
int
inc
lret
mov
xor
add
cmpsl
sarl
mov
xchg
and
adc
push
js
in
ret
bsr
mov
les
or
sahf
sbb
adc
push
cmc
mov
dec
mov
or
loop
mov
inc
insb
cwtl
sbb
aam
pop
add
mov
pop
insb
sti
or
jb
push
leave
pop
ss
and
into
push
aad
daa
jmp
push
cmpsb
jp
sbb
push
push
nop
push
shlb
int3
int
test
arpl
outsb
call
lods
mov
cmp
sub
out
pop
nop
adc
sub
add
mov
xchg
lret
sbb
sarl
xchg
repnz
in
sbb
mov
test
add
add
std
out
sbb
xchg
adc
push
stos
aad
inc
and
call
cs
jecxz
push
and
fmuls
aaa
mov
or
cmc
add
jnp
mov
sbb
mov
fnstenv
orb
int3
cmp
aad
or
mov
mov
dec
jbe
int3
pushl
mov
out
stos
dec
or
mov
inc
pop
jp
cltd
dec
iret
push
lret
call
pop
mov
fnsave
rcr
or
addps
mov
movb
xor
push
out
cmpsl
inc
xor
repz
push
out
jp
sbb
mov
sarb
out
mov
fwait
pop
dec
mov
jle
sub
push
pop
mov
lcall
imul
xor
xor
add
ja
lret
test
js
and
jmp
and
daa
in
sbb
cmp
sbb
in
sub
jne
rcrb
sbb
movsl
adc
mov
pop
addb
stos
jb,pn
addb
arpl
divl
xchg
cld
jne
bound
jp
or
cmp
gs
inc
fs
or
fmull
push
push
pop
in
cmpsl
xchg
mov
jb
mov
hlt
cld
sbb
test
cmp
xor
bound
mov
xor
and
mov
into
adc
xor
adcl
push
popa
stos
xchg
std
mov
and
imul
jb
push
int3
and
imul
scas
or
je
adc
scas
mov
jecxz
clc
dec
test
movl
xlat
and
jno
inc
xchg
arpl
sbb
cmp
fmull
adc
jge
mov
arpl
shrl
push
xlat
sbb
adc
test
ds
adc
fdiv
mov
mov
stos
roll
je
out
sbb
mov
add
sarb
push
lret
sub
mov
scas
shlb
cmpsl
into
mov
leave
cmp
mov
sahf
lahf
sbb
adc
decb
pop
jmp
decb
push
adcb
daa
repnz
mov
inc
or
bound
int
fiadds
cld
pop
or
lcall
outsb
adc
imul
sub
push
push
ret
int
les
insl
cld
or
inc
mov
gs
jns,pt
cmpsb
jnp
xor
mov
mov
mov
cwtl
pop
loop
dec
add
jg
popa
popa
aad
and
xchg
dec
pop
xor
inc
mov
scas
xchg
xor
add
and
js
xchg
xchg
fcompl
sbb
mov
mov
rcrb
fbstp
push
and
fadd
or
inc
adc
jb
jg
mov
push
dec
or
repz
enter
andb
bswap
cmc
jle
mov
add
loop
adc
jp
out
push
into
ss
cld
popf
fs
cmpb
jnp
sub
div
repnz
int3
cmpordps
js
dec
jo
jmp
out
xchg
jl
jnp
fwait
stos
mov
adc
popf
int3
or
orb
jne
sub
andb
sbb
icebp
pop
mov
hlt
jl
push
cmp
lea
jecxz
movsl
fwait
mov
sub
punpcklbw
xorb
mov
mov
pop
mov
cltd
pop
fmul
andl
stos
mov
jno
sahf
loop
xchg
jns
sti
ficoms
ja
imul
push
jae
lcall
js
jne
and
mov
xchg
aas
push
xor
fst
lds
pop
or
out
mov
or
mov
jb
push
and
add
adcl
ret
jg
dec
stos
out
scas
mov
mov
lock
stos
xlat
stos
out
xchg
adc
dec
daa
iret
imul
xorl
mov
ja
cmp
lods
repz
stos
dec
mov
inc
sub
jbe
nop
lds
or
lea
xchg
mov
push
insb
xchg
adc
dec
mov
arpl
std
xchg
aaa
test
popf
or
mov
in
mov
pop
or
outsl
mov
adc
or
popa
or
xchg
and
mov
sbb
je
ss
lret
sbb
arpl
repz
ret
pop
fisttps
std
mov
outsb
aam
es
adc
orl
or
and
cli
jge
in
jmp
lahf
adc
shr
xchg
jb
in
sbb
or
imul
out
imul
jmp
jb
xchg
test
jbe
and
sub
nop
popa
cltd
rcl
sub
iret
pusha
mov
dec
movsb
frstor
push
lcall
or
cmp
push
adc
rcr
adc
lock
adc
add
push
adc
sbb
cmc
stos
fimuls
mov
jg
lock
mov
jge
out
jmp
addr16
and
mov
or
add
repz
sti
lahf
shrb
adc
fstpt
cmp
add
adc
int3
cwtl
icebp
and
jne
jl
mov
add
movsb
pop
lret
cmpsb
xchg
adc
orb
or
and
xor
sbb
inc
aam
in
or
and
dec
mov
inc
repnz
mov
xchg
add
push
push
jg
xor
cli
push
mov
pop
std
xchg
mov
inc
cmc
cmpsl
mov
lods
mov
and
xchg
adc
sahf
mov
outsl
in
push
dec
lahf
imul
rcr
shr
sbb
ss
scas
lret
out
fs
xchg
fisubrs
sbb
out
fsubl
mov
inc
test
or
test
aad
pop
cld
pop
adc
movsb
xorl
lods
or
adc
mov
mov
lock
push
stos
cmpsb
shlb
aaa
add
lahf
stos
testl
leave
lret
adc
mov
in
mov
lahf
jno
out
inc
sbb
dec
rolb
mov
int
in
fidivrs
adc
cltd
lds
cmp
dec
jb
ret
out
int3
mov
add
push
sbb
push
aam
loop
inc
jb
mov
mov
mov
out
mov
mov
sbb
push
xchg
inc
add
inc
xchg
aad
pop
mov
in
flds
sub
sub
xchg
or
pop
sbb
jnp
ja
pop
xlat
popf
jecxz
arpl
xor
icebp
add
pop
mov
jecxz
ficoml
pop
cld
nop
outsb
mov
out
add
stos
cs
cld
mov
ret
aas
loopne
xchg
jmp
push
cmp
inc
into
fs
push
jmp
xor
push
popf
lret
fs
adc
sub
scas
mov
loope
or
mov
add
inc
or
sbbl
mov
adc
in
insb
jmp
std
dec
scas
cmpsb
xchg
mov
repnz
adc
mov
xlat
cbtw
iret
adc
in
xor
test
xchg
jmp
fdivrl
and
int3
pop
push
jno
into
lods
pop
and
push
jbe
pop
icebp
dec
sub
scas
movsb
lret
jge
pop
sub
adc
and
test
ss
mov
sbb
in
push
push
fadds
mov
jp
mov
sbb
push
lods
push
push
or
xchg
lret
imul
push
cmp
mov
or
pop
mov
shrl
mov
fs
pushf
hlt
notl
mov
mov
pop
cmp
jne
mov
and
mov
add
pushf
xchg
movsb
in
jp
sub
repnz
or
and
sbb
add
add
sti
addb
test
push
fmull
cld
lods
inc
sbb
add
or
push
cltd
mov
sbb
sub
jae
fisttpl
jno
inc
jmp
dec
adc
jmp
aam
andb
repz
xor
adc
add
aaa
fcoms
xchg
cmp
mov
jnp
outsb
and
imull
mov
addr16
adc
push
inc
inc
adc
or
push
loopne
dec
bound
dec
mov
aad
xchg
iret
fnstcw
xrelease
or
add
xchg
pop
pop
xlat
test
xchg
or
sahf
insb
inc
loopne
pop
in
in
jge
mov
das
sbbl
shrl
fdivrs
adc
or
scas
ud1
mov
sbb
mov
push
dec
cltd
inc
or
push
mov
add
sti
dec
fs
lret
dec
adc
push
sbb
lods
mov
push
jecxz
test
jmp
lcall
clc
aad
mov
push
ds
cmp
repz
mov
lahf
icebp
pop
mov
mov
stos
mov
mov
adc
inc
mov
pop
jnp
dec
push
fidivrl
sbb
inc
aaa
enter
xchg
mov
cmp
pop
jmp
cmp
or
out
jbe
daa
jecxz
mov
scas
jge
xor
jno
push
or
stc
in
jl
jp
stos
push
out
shl
or
xchg
mov
insb
insb
cs
aam
mov
aaa
rcll
test
in
mov
mov
pop
xor
pop
ljmp
cmc
mov
xorl
jmp
mov
adc
testb
jp
or
sbb
cmp
cmp
push
jne
inc
or
or
ret
jp
pusha
and
outsb
orl
jl
mov
xchg
push
shlb
xchg
mov
cmp
outsl
sub
pop
daa
mov
sub
inc
jge
push
mov
pop
in
jns
decb
push
jl
sub
mov
in
inc
rcrb
call
in
out
push
idivl
dec
imul
inc
std
cmpsl
pop
lret
push
dec
sbb
dec
push
mov
and
and
mov
jecxz
loopne
out
sub
dec
inc
cwtl
ja
mov
or
push
stos
dec
hlt
pop
movsl
xor
or
push
dec
es
xchg
mov
sti
jmp
inc
mov
lret
sub
lds
xlat
clc
outsb
mov
mov
inc
test
lods
pop
iret
cli
jge
jb
out
and
ss
add
aas
cmp
mov
mov
add
fstl
mov
mov
cmpsl
faddl
xchg
pop
and
pop
out
sar
stos
out
ja
dec
testb
adc
or
mov
dec
add
test
mov
aam
and
cmp
ljmp
stos
dec
icebp
push
push
hlt
bound
jl
adc
test
in
ja
je
pop
adc
lret
inc
sarb
sbb
and
and
mov
mov
add
sbb
in
mov
add
pop
das
adc
mov
adc
or
jns
mov
or
inc
cwtl
out
outsl
subb
int
imul
pop
xchg
lfs
insb
mov
rorb
pop
dec
mov
in
aam
sub
popl
inc
aaa
lahf
mov
shrb
lods
sahf
sbb
xchg
cli
in
mov
ds
popa
cmp
sbb
add
aam
push
jbe
push
or
mov
jmp
popa
stos
mov
stc
les
pop
lahf
add
dec
faddl
or
bound
in
in
mov
or
cmp
sbb
pushf
or
lret
scas
mov
pop
js
in
jp
in
addr16
enter
push
jnp
or
stc
add
popa
aas
mov
or
cmp
out
inc
adc
es
mov
out
sbb
stos
sarl
xchg
out
mov
jge
aaa
cmp
out
in
test
or
sbb
xchg
popf
lret
cltd
popl
pop
loope
mov
adc
popf
or
mov
push
cld
dec
mov
hlt
push
je
push
cmp
pop
jmp
push
cmp
jns
inc
xor
ljmp
mov
enter
or
mov
stos
out
jp,pt
jg
sub
cmpsl
sbb
jne
cld
ret
rcr
andl
xor
ret
fldt
fcoml
or
test
notl
and
pushf
jno
sahf
xchg
adc
mov
insb
sbb
mov
push
cmp
xchg
mov
clc
fidivs
mulps
mov
xchg
mov
or
or
mov
notl
call
or
xchg
imul
pop
add
and
jl
push
dec
dec
testb
xor
fwait
bound
rcll
out
js
pop
ret
ret
xchg
xchg
mov
xor
int
rcrl
mov
cmp
psubd
dec
popa
sahf
xor
pop
pushf
test
fdiv
mov
mov
or
adc
mov
int3
lret
out
aad
inc
ret
inc
es
inc
adc
push
out
out
lret
mov
inc
pop
mov
fcomip
xchg
adc
ja
push
and
mov
adc
lds
inc
orb
scas
mov
mov
mov
ja
add
in
cmpsb
adc
imul
leave
ret
add
push
push
adc
xchg
and
mov
pushf
std
push
leave
adc
jge
push
cld
add
or
mov
add
add
sbb
pop
sbb
jp
xor
in
or
and
and
sub
ret
movl
gs
mov
loop
mov
fwait
mov
fildl
pushf
inc
add
scas
pop
xor
inc
cltd
push
std
aam
sbb
mov
clc
adc
orl
add
ljmp
push
mov
outsl
pop
xchg
inc
xchg
push
add
outsb
adc
add
xchg
test
mov
sti
add
ror
lahf
insb
jge
add
fdivs
lret
jle,pt
les
addb
cmp
xlat
test
lret
aam
loopne
adc
cmpsl
push
jnp
out
cmp
fiadds
mov
push
stos
fdivl
sbb
sti
stc
add
dec
adc
xor
addr16
imul
inc
cwtl
fistl
adc
or
and
and
test
iret
int3
jbe
adc
pop
pushf
imul
stos
and
add
add
ss
push
mov
cmp
popa
xor
iret
or
and
mov
add
faddl
dec
mov
mov
lahf
jae
sbb
xchg
int3
out
jp
add
iret
push
cmp
adc
xchg
and
aas
pop
sbb
ljmp
sbb
shl
shrl
xchg
pop
addl
loope
rcll
inc
jmp
pop
mov
stos
and
addr16
xor
sbb
cmp
push
and
cmp
stos
stos
pop
daa
jmp
int
mov
mov
scas
cmpsb
into
in
pop
stos
js
mov
jnp
sub
mov
xchg
cld
or
inc
in
ret
pusha
fsubl
out
xor
dec
pushf
fldl
pop
add
jp
adc
cwtl
adc
xor
ljmp
dec
pop
popa
stc
jmp
and
cmc
aam
cmpsl
push
sbb
mov
lods
shlb
insb
ja
insl
mov
pop
mov
leave
or
dec
push
lret
insb
xor
sbb
ja
mov
lret
out
in
pop
sbbl
adc
pop
jmp
fwait
adc
ja
mov
testl
fbld
lods
inc
les
add
ds
lret
jecxz
add
loope
jg
cmc
jne
in
ja
fstl
add
cmpl
xchg
lret
pop
add
fst
cmpl
ret
cmp
data16
mov
add
divl
adc
inc
out
mov
add
or
ss
pop
push
cltd
cmp
iret
mov
mov
loop
push
movsb
pop
mov
pushf
sub
fs
adc
push
stos
push
and
pop
or
jp
scas
mov
dec
fstpl
push
jmp
ret
push
out
leave
int
adc
in
jns
sub
scas
icebp
std
xlat
or
push
stos
mov
daa
add
adcl
push
pop
sti
lds
push
ljmp
pop
in
ror
dec
push
sub
movsl
out
fcmove
lods
cltd
mov
int3
cmp
mov
inc
sti
mov
sub
call
xchg
and
rcrb
out
iret
ja
std
push
jle
or
repz
add
loop
or
and
arpl
cmp
dec
in
cmp
pop
in
mov
sbb
jl
inc
lods
das
data16
xchg
or
pushf
mov
adc
mov
js
mov
mov
lods
add
icebp
mov
hlt
leave
mov
xchg
hlt
mov
test
add
addb
jge
movl
mov
sub
repnz
dec
sub
aam
pop
ds
jp
fimull
dec
stos
xlat
or
dec
jne
ret
dec
insb
stos
popa
cld
push
insb
inc
xchg
in
icebp
fcomps
shlb
cmp
fadd
xchg
adc
add
push
dec
jns
leave
mov
hlt
sbb
sbb
test
mov
fnstsw
in
shlb
subb
pusha
push
jne
mov
push
jg
gs
test
sbb
cmpsl
or
add
cwtl
ret
add
jp
jmp
push
arpl
jbe
outsl
das
subb
fimuls
jne
pop
cmp
and
pop
push
add
inc
add
mov
jne,pt
adc
xchg
repz
xchg
outsb
ret
jno
mov
shlb
repz
popf
pop
aam
jl
scas
jg
mov
shl
out
pop
adc
fmuls
lahf
sti
pop
mov
stos
add
mov
lret
mov
into
push
insb
out
test
sbb
fwait
shlb
dec
hlt
das
sahf
lods
sbb
ret
scas
cmp
mov
mov
cmp
mov
in
jne
stos
into
loope
and
jb
mov
lods
inc
adc
or
ret
sbb
push
fdivl
pop
sub
js
fucomip
mov
int
out
xchg
je
cmp
adc
rcrb
pop
mov
inc
in
mov
rorb
int3
bound
push
sub
fiaddl
in
mov
dec
cltd
aam
lods
into
sub
mov
inc
aad
push
sbb
mov
movsb
outsb
out
cmpsb
lock
das
dec
sub
repz
add
ficompl
mov
xchg
enter
sti
in
jae
pop
push
arpl
xchg
and
mov
or
insb
mov
or
in
jp
sub
lcall
add
psrad
mov
inc
push
pop
leave
rcr
cli
icebp
sub
xchg
mov
sbbb
movsl
pop
cmp
loop
mov
jg
sahf
inc
xor
ja
sar
ja
mov
pop
enter
data16
adc
mov
sub
xor
add
cwtl
jne
cmp
mov
or
addr16
std
xchg
xchg
pop
pop
mov
jmp
jecxz
test
pop
adc
fcomps
cld
ss
mov
xlat
out
xchg
jecxz
jle
cmp
dec
insb
cwtl
pop
iret
adc
add
push
loopne
fildll
inc
popa
jmp
cmpl
push
push
fstps
popf
jnp
ja
xor
inc
adc
cmp
cmp
jo
ja
inc
fmulp
repz
mov
mov
cmp
mov
or
cmp
nop
and
addr16
notb
dec
xchg
enter
shll
imul
lods
pop
movsb
jb
fsubr
scas
cmovl
add
jp
jmp
jnp
pop
jno
insb
adc
xchg
int3
in
and
inc
sub
jecxz
lret
das
sub
jb
add
addr16
or
xor
pop
push
jl
xchg
mov
inc
adc
mov
add
or
gs
mov
mov
lcall
cmp
or
xchg
dec
adc
cmpsl
push
adc
lahf
addr16
out
pushl
addr16
dec
xchg
jmp
mov
lock
xor
and
cmpb
fistpll
dec
mov
in
xchg
fisttpl
aas
sbb
hlt
mov
push
les
inc
cmp
pop
fcoml
arpl
fisubrl
mov
cmp
enter
pop
call
cmp
jne
push
push
sti
stc
mov
mov
mov
ficoms
inc
adc
movsb
bound
and
sbb
mov
or
bnd
mov
imul
add
lods
xchg
sbb
sbb
dec
jne
frstor
fsubrl
adc
pop
pop
daa
or
int
sub
jge
cs
mov
mov
fnstcw
mov
mov
mov
lcall
sub
or
inc
out
dec
mov
call
fisttpll
sbb
fdivrs
rolb
add
mov
mov
fmull
dec
pusha
push
mov
xchg
push
jmp
test
sar
cmp
stos
sbb
add
pop
and
call
ljmp
loop
mov
sbb
xor
add
mov
roll
sbb
xchg
dec
or
sub
mov
add
orb
imul
popf
pop
popf
sub
sub
jne
out
push
xchg
xor
dec
sbb
jbe
fimull
shl
out
push
mov
enter
repz
js
sahf
mov
popa
pop
xchg
dec
outsb
das
jecxz
sti
mov
push
cmp
or
pop
jp
ret
les
or
fcmovnb
push
mov
outsb
mov
and
nop
rep
push
sub
or
mov
sub
hlt
je
xchg
test
scas
mov
mov
sub
out
or
out
adc
cmpsl
int3
cmc
add
and
std
lock
fchs
pop
daa
test
push
mov
push
in
ss
popf
std
pusha
fucomi
jp
sub
and
cld
mov
inc
dec
popa
adc
xor
addb
and
sahf
xchg
sub
push
lds
push
dec
dec
and
sub
out
ret
sbb
add
push
jae
sbb
cs
inc
and
cmpsl
or
sbb
paddsw
bound
aam
inc
pop
add
jl
ficoml
stos
addr16
icebp
dec
daa
jecxz
inc
mov
fdivrs
vmovss
adc
mov
divb
aaa
aad
sub
fwait
clc
lahf
mov
jo
sbb
mov
mov
int3
js
cld
push
xor
adc
dec
dec
sbb
cmc
sub
out
mov
jne
push
lahf
dec
lods
fdivrl
mov
aad
and
jge
ret
daa
sbb
mov
fstl
mov
scas
lods
dec
inc
sarl
mov
xor
mov
fisubs
or
stc
aam
out
adc
aam
and
mov
and
jo
fidivrs
xchg
add
lods
add
into
out
sti
loop
test
add
mov
insb
test
or
inc
jmp
int3
add
dec
push
add
fidivrl
in
imul
stc
add
sbb
lcall
jmp
outsb
enter
notl
loope
test
jp
adc
mov
in
jns
add
jno
mov
jmp
xor
dec
jl
add
mov
int
mov
mov
jl
rcrb
bound
adc
push
lret
mov
loop
cmpsl
mov
dec
out
int3
dec
xor
subb
add
into
ret
cs
inc
ret
in
dec
dec
movsb
mov
adc
int
inc
leave
push
stc
mov
aam
cli
dec
mov
pusha
cmp
inc
rorl
js
sbb
mov
xor
jbe
into
repz
mov
jns
mov
or
rorb
popa
add
push
adc
mov
or
sbb
dec
add
or
xlat
xchg
xchg
incb
jbe
push
stos
ret
sbb
add
pop
loop
pop
mov
sbb
cmp
lds
sbb
sub
mov
sbb
ficoml
lds
lcall
or
xchg
push
std
inc
pop
shrb
sbb
or
pop
add
fistpll
xchg
outsb
lods
repz
fldl
or
int3
cmp
pushf
pop
adc
lret
cmp
sbb
out
daa
xchg
je
add
xchg
jecxz
add
inc
hlt
sub
and
fiaddl
and
jne
mov
sbb
cltd
jp
pop
or
lods
xor
cmp
sub
xor
dec
cmpb
mov
dec
sbb
push
lock
push
mov
cltd
into
add
ds
mov
pop
aaa
imul
mov
lahf
jmp
or
jo
cmp
jl
ret
push
lret
roll
and
sbb
adc
sarb
adc
stos
jp
xchg
xchg
xchg
mov
dec
inc
mov
lods
mov
in
add
les
add
pushf
mov
pushf
pop
cld
jb
push
insb
mov
jp
push
mov
add
clc
outsb
sbb
or
insl
dec
or
gs
mov
loope
push
sub
sti
xor
add
add
mov
loope
fdivr
jl
inc
push
sub
adc
mov
mov
fildl
fistps
jecxz
mov
or
lret
dec
addb
jle
sub
sarb
dec
mov
push
push
fucomi
out
and
adc
xchg
add
add
add
adc
mov
xor
mov
fiadds
xchg
std
loop
rorb
mov
bound
cvtps2pd
cmp
and
sub
xchg
iret
or
cmp
iret
cmc
cmpb
jg
loope
out
adc
dec
std
sti
aad
insl
mov
cli
movsb
test
icebp
cmp
sbb
sbb
mov
ret
xor
adc
andl
sti
inc
push
ficompl
add
sub
jnp
stc
ja
mov
jne
push
and
jnp
or
int3
leave
jns
sarb
pop
in
call
xchg
stos
test
jl
add
loop
xchg
sbb
mov
jmp
sub
in
jge
nop
insl
mov
adc
jns
fwait
cs
shr
or
xchg
js
jl
push
inc
nop
cld
xchg
mov
mov
pop
adcl
jp
jp
dec
stos
or
dec
xlat
icebp
dec
lret
cmc
js
mov
lea
imul
jmp
in
int3
xchg
les
add
and
add
into
mov
fcmovne
dec
test
sbb
mov
mov
pop
pop
iret
adc
mov
ss
popf
int
rorb
sahf
enter
cmp
add
lods
add
push
imul
int3
ljmp
cmc
icebp
jmp
stos
sub
sahf
and
shll
push
iret
push
rcr
or
mov
stc
xchg
insb
call
outsl
jmp
and
shlb
sbb
cli
mov
adc
fsubp
and
aad
shll
sbb
pop
jne
pop
xor
fsubrl
sarb
rorl
inc
sub
add
pusha
ret
scas
dec
movsl
mov
xor
adc
sbb
test
lods
cwtl
scas
or
adc
inc
xchg
dec
cmpsl
int3
test
cmp
test
imul
testl
sbb
test
inc
out
test
inc
mov
repz
sbb
push
jne
orl
dec
insb
lods
mov
and
push
or
test
dec
mov
dec
jno
loope
sub
jnp
aam
das
subb
xor
mov
loop
out
mov
sbb
imulb
call
jnp
add
adc
in
loop
cwtl
sub
ja
adc
iret
adc
xchg
cwtl
mov
adc
or
adc
xchg
sub
call
mov
xchg
xor
or
or
inc
push
adc
push
dec
add
sub
cltd
adc
sbb
add
xor
add
pusha
fs
outsl
push
into
mov
into
jnp
xor
scas
xor
fcomps
ret
jno
xor
sbb
ljmp
dec
ljmp
lret
inc
inc
jne
sbb
or
inc
add
popa
dec
es
sahf
dec
or
xchg
jnp
push
mov
lds
lret
lcall
xchg
test
dec
cmpl
mov
iret
fidivl
lea
inc
int3
js
call
push
mov
xchg
movsl
rcll
cs
repz
xchg
dec
int3
popf
add
jno
cmp
pop
xchg
inc
ja
adc
cwtl
push
iret
cwtl
int
test
push
dec
cld
add
push
mul
mov
stos
dec
aam
repz
and
out
inc
out
cli
sub
insb
aad
pop
ja
stos
add
in
daa
lea
fistpll
and
icebp
jno
push
pop
and
mov
clc
aam
and
out
fldl
jnp
mov
jne
sbb
dec
mov
adc
push
jp
adc
push
jmp
jmp
mov
adc
inc
adc
xor
popf
or
mov
cld
xchg
adcl
testl
fucomi
aam
ret
or
mov
sbb
rep
add
out
pop
jge
shlb
mov
call
lock
push
jecxz
xchg
stos
dec
jns
jno
mov
stc
leave
cld
cs
adc
and
and
test
pop
mov
dec
xchg
mov
and
out
cld
sbb
popf
mov
loopne
adc
mov
add
xchg
lret
or
addr16
cmp
jae
js
fs
or
pop
cmp
imul
xchg
dec
lds
shll
xchg
out
nop
jecxz
add
lods
dec
test
stc
stos
out
jl
mov
xchg
mov
jne
lret
mov
dec
fstpt
mov
mov
lcall
add
lea
jl
cltd
dec
sbb
or
cltd
sbb
enter
pop
mov
push
insb
out
sub
cli
lods
rcrl
into
cmp
lcall
in
mov
movsb
lods
lahf
xchg
pop
pop
out
adc
or
push
fcoms
daa
sbb
push
pop
sbb
pop
imull
jb
std
fcoms
pop
lods
dec
cwtl
xchg
enter
sub
push
cmp
inc
sbb
sbb
out
cmp
ret
cmpsb
out
inc
test
fstl
test
sbb
fmuls
stos
test
fcomp
push
jge
into
pop
int3
add
loopne
pop
ret
decl
xchg
jle
add
mov
sbb
out
imul
leave
inc
enter
test
jp
sub
pop
cmpsl
mov
dec
in
pop
push
or
mov
xlat
fimull
mov
out
sbb
scas
dec
sub
add
fxch
outsb
add
push
cmp
push
fcmovnbe
out
mov
dec
cmp
mov
je
into
cmp
cmp
daa
lea
incl
xchg
movsl
fisttps
cmp
push
inc
mov
or
stos
adcb
aaa
out
leave
adc
sbb
out
sbb
push
xchg
push
into
dec
inc
push
mov
add
movsb
xchg
sti
rorb
in
pushf
mov
cwtl
mov
xor
leave
sub
adc
mov
in
sbb
ret
push
or
testl
ja
je
iret
iret
inc
adc
loop
sti
pop
cmpl
cltd
push
cmc
inc
inc
pop
loopne
inc
imul
aad
int3
shlb
icebp
sbb
mov
lods
mov
xor
aaa
je
jns,pt
ret
adc
out
pop
or
jl
cmp
or
pop
sub
xor
sahf
pop
stos
loope
jmp
aam
add
sti
jbe
dec
mov
mov
fs
pop
inc
popf
jne
sub
adc
or
cmpb
mov
movsb
clc
inc
cmp
dec
mov
aam
test
mov
mov
ror
subb
mov
pop
lret
orl
dec
popf
mov
pop
add
pop
shrl
jns
inc
push
sub
repz
loope
movsl
js
rorw
add
mov
lods
mov
adc
insb
mov
out
add
xor
jbe
push
pop
mov
aad
popa
cmpsl
sbb
cmc
or
out
jno
int3
or
mov
push
inc
or
repz
inc
mov
cmpl
fwait
out
hlt
pop
jge
push
pop
jo
pop
jl
cs
add
pop
repnz
xchg
cmp
jg
das
mov
rorb
aad
addr16
popf
js
inc
ja
loope
xor
cmc
mov
push
and
in
jle
dec
xor
test
cmp
les
add
ret
hlt
dec
xchg
mov
ljmp
std
les
fldcw
lahf
int3
cs
lods
mov
notl
pop
sub
mov
jmp
loopne
adc
rorl
pop
jl
out
jmp
and
and
add
jecxz
loop
aam
adc
push
jne
pop
mov
or
jns
loop
cltd
push
test
fmul
sub
sbb
xchg
xchg
adc
cmp
mov
add
cmp
mov
jnp
add
sub
imul
mov
ja
lcall
sbb
aaa
faddp
xchg
push
js
enter
jle
ds
mov
mov
int3
xchg
pop
jg
mov
mov
xchg
jle
mov
push
sbb
dec
aad
jb
outsl
into
push
and
stos
out
movsb
fcmovb
or
test
inc
dec
sbb
add
adc
dec
dec
pusha
and
icebp
sub
int
mov
adc
enter
xchg
fidivl
mov
fnstsw
mov
mov
leave
sbbb
pop
xchg
jns
nop
out
and
js
or
lods
out
jecxz,pt
adcl
xchg
dec
sbb
mov
out
cmp
mov
xor
adc
mov
rcrl
rorl
xchg
sub
and
inc
test
push
push
pop
repz
push
mov
xor
mov
or
sub
mov
hlt
pushf
ficoml
adc
stos
bound
fcompl
ret
mov
mov
shrb
mov
cmpb
mov
push
fidivrs
push
repz
xchg
popl
push
fimuls
out
jb
push
mov
hlt
subl
mov
out
sbb
fistpll
xor
fdivrl
sub
xor
jg
xchg
mov
test
jp
fidivrl
data16
and
inc
rorb
push
dec
int3
or
jmp
xchg
mov
jg
cltd
pop
imul
fs
test
popf
int3
dec
add
jmp
rol
outsl
unpcklps
pop
push
xchg
aas
dec
repnz
fdivr
mov
in
mov
js
jg
loope
add
jmp
mov
dec
xorl
mov
or
push
les
rcr
sub
jmp
pushf
xchg
adc
shrl
in
xchg
xlat
sbb
pop
jge
mov
push
xor
push
outsl
pop
sti
xchg
jmp
mul
xchg
in
test
loopne
add
clc
cmp
or
dec
jnp
cwtl
fs
pop
ret
push
imul
sbb
jne
outsl
adc
das
outsb
ss
cli
in
adc
jmp
mov
sarl
int3
popf
add
shlb
jae
or
mov
ds
insl
int3
add
stos
push
dec
gs
adc
mov
dec
out
cld
pushf
mov
arpl
insl
movsl
out
cvtps2pd
lods
mov
lahf
sub
faddl
repnz
sub
xchg
push
push
cmp
sub
hlt
mov
in
les
add
mov
and
or
or
out
daa
lods
int
or
pusha
mov
sbb
insb
out
mov
add
iret
pop
loopne
dec
push
cmpl
or
pop
sbb
xlat
or
inc
mov
lret
fildl
cltd
bound
insb
jge
cs
adc
push
push
ja
fsub
int
mov
mov
or
sub
stos
push
mov
mov
dec
fs
add
dec
sub
dec
inc
add
xchg
lock
xor
insb
xor
cld
push
enter
cltd
loop
fbld
addr16
pop
inc
or
aas
subb
aas
rolb
cwtl
test
dec
adc
dec
cmc
mov
lods
int3
ja
xor
xchg
arpl
bound
cmp
mov
adc
add
les
cmp
cltd
leave
xchg
jg
std
mov
pop
add
into
cli
and
data16
out
jb
add
dec
sub
cli
hlt
cmc
cltd
jno
sub
fidivl
jmp
out
adc
js
inc
stos
pop
aad
cmp
ret
gs
add
mov
adcl
pop
push
push
inc
adc
fmull
ljmp
daa
fdivrs
pop
xchg
sarb
subl
and
nop
push
mov
addr16
add
cmp
cmpsl
stos
int
inc
adc
and
ss
sbb
push
fwait
rcr
add
xchg
cmp
xchg
xchg
adc
cltd
bound
xlat
inc
cmc
sti
cmpsl
les
jns
cwtl
sbb
push
je
aaa
pop
rcrb
jmp
sarl
sub
mov
pop
pop
xchg
inc
mov
or
jecxz
dec
cmp
xchg
inc
out
lret
int3
dec
enter
les
out
stos
cmc
push
xchg
mov
lods
out
fistpll
push
jg
pop
jl
mov
dec
adc
enter
lods
faddl
dec
int3
fldenv
add
dec
push
lahf
fisttpll
les
push
sbb
imul
dec
sub
testl
add
add
test
sti
xor
mov
add
add
mov
xor
mov
or
stos
sbb
pop
cwtl
out
stos
add
pop
push
in
movsb
sbb
add
cmp
mulb
push
icebp
cltd
mov
hlt
push
add
mov
fs
and
lret
push
dec
out
xlat
fcoml
lea
inc
mov
stos
sbb
jg
cmc
repz
xchg
or
jno
cltd
jae
add
je
push
and
dec
out
jle
jp
xor
mov
jno
push
sbb
gs
push
popa
fwait
push
insl
in
mov
mov
ja
jmp
pop
and
sub
sbb
xchg
nop
adc
jl
or
mov
sbb
roll
int3
fildl
cld
mov
sbb
inc
call
stos
or
mov
mov
cmp
mov
mov
orb
daa
in
sbbb
pop
mov
or
jmp
dec
jns
sbb
jne
sbb
cltd
adc
sbb
and
sahf
jae
mov
or
sub
lahf
pop
stos
xchg
cltd
xchg
xor
insb
ret
adc
mov
sbb
jmp
mov
loop
cwtl
add
add
call
lret
lds
mov
test
loop
stos
imul
mov
cmp
cmp
cmp
loopne
jl
adc
idivl
stos
inc
leave
mov
sbb
xchg
repnz
add
jb
lock
lret
lock
xchg
push
lcall
adc
jbe
dec
mov
cmp
pop
cs
sbb
pop
add
xchg
mov
pusha
enter
jle
dec
jmp
lock
mov
arpl
or
pop
out
out
mov
ljmp
aaa
jns
pop
js
sub
pop
shl
loop
ret
addr16
lods
stos
es
sbb
loope
imul
icebp
mov
adc
gs
mov
cmp
movsl
in
inc
mov
mov
jle
jmp
sub
jae
stc
sbb
mov
sub
xchg
sbb
inc
sub
cmp
aad
sub
push
push
fwait
incl
dec
pop
loop
sbb
ss
out
pop
mov
jg
push
add
rcrb
xchg
dec
adc
mov
sbb
jle
dec
mov
ret
pop
cltd
or
inc
pop
loope
sub
into
ss
or
adc
inc
pop
and
cmc
sahf
sbb
push
pop
mov
pop
loop
cmp
push
adc
nop
les
push
pop
bound
ja
sbb
adc
jbe
int3
jne
dec
add
push
lds
sub
ret
nop
jno
jns
cmp
pop
movsb
cwtl
sti
int3
jnp
scas
xchg
xchg
hlt
and
inc
dec
popf
test
int3
inc
sub
loope
push
mov
sub
insb
negl
lcall
jb
xchg
cs
mov
repnz
adc
test
jmp
adc
add
mov
push
movsb
js
sbb
repz
add
xor
inc
dec
push
iret
push
out
int3
scas
add
nop
cmp
out
jecxz
or
loop
test
ss
lods
rorb
and
jo
sub
outsl
push
add
aaa
mov
imul
ss
aad
mov
addr16
nop
ljmp
lock
and
je
insb
sbb
pop
lret
fmulp
pushf
insb
loopne
or
adc
and
iret
push
dec
in
dec
faddl
jno
and
cli
cmp
pop
pop
dec
cli
jb
daa
fwait
imul
fmuls
mov
and
cwtl
pop
inc
cmp
or
add
loope
push
insb
jle
push
ret
inc
sbb
repnz
mov
push
lret
lcall
stos
out
movsl
lcall
in
sbb
xor
xchg
cmp
out
jns
dec
rcrw
and
cli
add
inc
leave
mov
mov
inc
jbe
jp
cltd
mov
ror
mov
sbb
outsb
insb
mov
rcrl
or
imul
ficomps
fcoms
jl
int
ret
xchg
js
mov
jbe
sub
pop
cltd
jge
daa
pop
movb
adc
pop
or
lea
decb
insl
cmp
add
int3
mov
cmp
and
mov
loop
sbbl
jbe
xor
add
or
cld
imul
loope
jle
addr16
inc
xor
or
pop
lahf
jge
stos
fcomps
test
in
inc
inc
add
inc
sbb
into
fcmove
shll
sbb
pop
dec
mov
jmp
cmp
movsb
inc
mov
mov
lret
out
out
inc
sbbl
add
cmc
push
rcrl
stos
in
xor
dec
stc
movsb
pop
pushf
int
inc
mov
inc
imul
adc
and
and
mov
or
sbb
inc
fdivp
int
mov
mov
xchg
xchg
ud0
sbb
sti
adc
or
add
lcall
sbbl
dec
cmp
loop
and
mov
xchg
cmp
push
fwait
out
mov
ret
jecxz
mov
push
add
push
das
stos
imull
adcb
or
cmp
pop
mov
dec
in
sahf
cs
fistps
test
mov
in
scas
sbb
dec
push
lahf
mov
xchg
pushw
jl
fiadds
sbb
rolb
insl
repz
dec
icebp
insl
ljmp
jne
gs
je
jo
in
imul
movlps
lahf
into
mov
ja
add
dec
cmpsl
out
les
and
mov
sbb
jecxz
iret
mov
aaa
sbb
int3
jl
jg
mov
or
sarb
ret
aam
int
sbb
loop
imul
sbb
lcall
mov
mov
sahf
cmp
fildll
jbe
jmp
or
popf
cwtl
call
pop
daa
loope
xchg
cmp
cltd
cmpsb
push
pop
sub
jmp
out
lret
adc
in
cmpb
test
icebp
jg
or
and
push
lahf
cmp
int3
push
ss
xchg
int3
jge
repnz
mov
xchg
xchg
popa
push
fwait
add
in
add
mov
mov
pop
pushf
push
mov
pop
pop
or
out
std
xchg
repz
dec
loopne
mul
in
push
popa
sti
ret
fstpl
lcall
loope
lret
pop
sbb
shl
lock
adc
push
unpcklps
test
pop
sub
jnp
pop
das
jbe
lret
push
adc
and
fucomp
subb
adc
inc
imul
sub
jne
xchg
lret
pop
pop
xchg
pop
cmp
mov
test
add
bound
lret
jecxz
out
cmc
iret
lock
xchg
repz
icebp
pusha
stos
add
push
push
push
int
or
int3
xchg
pop
icebp
pop
push
ret
ret
mov
mov
outsl
mov
push
adc
fldenv
js
dec
out
jne
mov
xor
xorb
pop
mov
movsb
ret
cmc
and
jmp
sub
xchg
cmpsb
jns
lret
ret
mov
cmp
dec
add
stos
lods
sbb
jb
pop
enter
jb
fisttps
adc
fisubrl
xchg
dec
ficoml
loope
repnz
stos
dec
fbld
addr16
mov
test
and
daa
test
int
cmp
sub
mov
push
adc
mov
jge
inc
sbb
inc
mov
add
cmp
clc
iret
clc
mov
pop
dec
int3
cmp
ficoms
rorb
and
add
mov
and
dec
outsl
jns
into
lret
push
xchg
xchg
cld
and
fs
lds
mov
sbb
mov
lcall
popa
sub
add
mov
add
adc
out
loope
outsb
cmp
xor
push
add
adc
in
cmp
stos
fwait
mov
call
jnp
mov
sub
inc
cmp
movsl
lods
loop
jle
stos
fnstsw
imul
lds
sbb
leave
in
cld
pop
fwait
sbb
mov
push
pop
dec
mov
xchg
dec
pop
mov
faddp
int3
insl
mull
or
nop
dec
push
mov
cmp
out
mov
and
jmp
mov
or
jl
mov
sub
cmc
lret
and
lock
xor
das
out
inc
addb
pop
loope
add
mov
loope
adc
test
sub
dec
mov
dec
mov
pminub
jne
stos
jecxz
jne
mov
sbb
xor
aas
jp
adc
jmp
jb,pn
add
jne
add
popa
mov
jne
push
cmp
icebp
sahf
and
daa
pop
pop
push
pop
testb
out
and
sbb
test
imul
mov
xchg
or
jo
sbb
andl
addr16
adc
js
lret
or
clc
cmp
out
fs
adc
or
std
inc
in
adc
lcall
pop
lock
arpl
fwait
movsl
hlt
xchg
cli
pop
sub
insb
scas
inc
sbb
jno
mov
imul
dec
sbb
mov
push
pushf
or
ret
leave
mov
ficompl
adc
inc
jbe
loop
add
mov
jno
mov
add
mov
xchg
push
aam
rorl
dec
out
es
dec
rol
cli
push
add
mov
sti
repnz
adc
push
jnp
pop
or
stos
aad
popa
add
mov
dec
stos
movl
loopne
daa
mov
inc
push
std
xor
stos
cltd
inc
sbb
push
insl
jmp
mov
int3
and
and
mov
xchg
mov
fbld
sub
and
xchg
adc
and
cmpsb
out
ss
jmp
add
test
push
xor
lock
sbb
les
inc
stos
daa
loope
in
add
sbb
cwtl
faddl
jle
mov
jb
inc
xor
inc
add
lcall
mov
fadds
in
call
push
jne
leave
aad
push
xchg
je
add
push
or
adc
adc
in
cmc
fstps
mov
xchg
mov
sbb
lahf
rorl
push
es
jae
mov
mov
ret
push
repnz
fisttpll
mov
repz
and
stos
fstpt
pusha
shr
jl
sbb
mov
inc
adc
cmpsb
int3
inc
pop
aam
negl
enter
xor
xchg
dec
mov
push
sub
pop
pop
outsl
enter
daa
xor
jecxz
mov
cltd
fld
out
sbb
mov
fiaddl
lods
lods
mov
mov
cmc
pop
adc
fs
xor
dec
jnp
sbb
or
hlt
mov
sub
mov
addr16
lahf
outsb
ds
jb
ja
int
jno
jg
jge
iret
sbb
xchg
js
lds
mov
or
aaa
int3
aam
lcall
mov
mov
cmp
cld
into
add
adc
adc
sti
jo
imul
idiv
pusha
mov
mov
push
mov
cmp
push
adc
in
add
lods
push
add
movsl
hlt
sub
lcall
adc
sub
sbb
xor
outsb
cwtl
push
push
cmc
out
xchg
inc
mov
bound
fcmovnb
sub
jg
mov
negb
orl
add
test
add
out
lods
mov
test
add
lret
inc
inc
push
iret
scas
or
add
push
insb
mov
out
out
and
arpl
lea
jb
mov
lret
lret
inc
repnz
mov
repz
sarb
aad
inc
in
mov
mov
das
or
mov
jne
cld
add
mov
pop
inc
mov
aas
pop
fdivrl
sbb
popf
insl
imul
push
sub
or
mov
pop
push
adc
dec
add
mov
ja
push
or
sti
popf
jp
jge
fcmovb
insl
mull
xor
or
mov
daa
add
adc
sub
mov
test
or
xchg
int
push
dec
cmp
scas
mov
movsl
sub
mov
xchg
pop
adc
cmc
cmp
mov
sub
xor
call
movsb
outsb
mov
push
lea
jne
inc
imull
test
into
jmp
lret
movsb
fildl
sbbb
cmp
and
cmp
sub
adc
mull
int3
lret
ds
mov
js
xlat
fisttpl
loopne
jnp
inc
sbb
ret
xlat
mov
adc
xchg
data16
clc
imul
insb
fwait
gs
add
xor
xchg
sbb
test
lds
clc
daa
xchg
in
xchg
fidivrs
cmp
std
nop
lcall
cmp
jg
push
mov
aam
in
jp
fldcw
rol
and
rcl
adc
icebp
mov
jl
test
lea
fwait
mov
sub
iret
push
shll
lret
add
mov
cmp
insb
stos
mov
jge
push
lods
insb
pushf
stc
mov
lea
adc
test
fisttps
repz
cmp
lods
adc
fists
fsubl
popa
clc
xchg
adc
push
or
add
in
or
mov
movsl
dec
ret
nop
aas
int
lret
cmp
add
fwait
dec
mov
mov
inc
cwtl
jne
or
push
pop
jp
test
shl
repnz
mov
add
outsb
xchg
jg
and
mov
push
dec
cmpsb
jbe
push
adc
jns
pop
adc
lret
xchg
negb
jmp
mov
fsubl
bound
andb
push
into
loop
int3
data16
add
inc
push
jbe
std
mov
sbbb
cmp
add
mov
pop
mov
lret
xchg
int3
sub
add
pop
adc
mov
mov
push
sbb
push
or
jecxz
and
outsb
add
lret
cmp
rcrb
insb
push
in
decb
int3
mov
sbb
or
enter
pop
out
bound
mov
or
pop
jecxz
mov
push
out
pop
xchg
bound
jns
mov
js
mov
aam
push
cmp
sbb
xchg
jno
movsl
aad
cltd
and
jb
mov
test
out
inc
jp
pop
push
arpl
mov
repz
cli
fmuls
push
jl
adc
fisttpl
add
sbb
lret
pop
out
enter
ja
sbbl
sbb
sbb
adc
xchg
mov
das
mov
enter
mov
or
sbb
sbb
sbb
fcomps
fldt
aaa
loopne
jne
dec
shll
sub
vcvttsd2si
iret
lock
push
filds
addb
adc
in
cli
mov
stc
jge
push
mov
aaa
popa
mov
out
daa
pop
cld
mov
js
mov
cli
hlt
add
cltd
popf
push
adc
or
ss
cmp
dec
fs
inc
mov
dec
in
repz
sahf
mov
enter
cli
push
mov
pop
ja
lret
push
jecxz
adcl
adc
shr
popa
rol
or
sub
push
push
mov
lret
sti
jp
cmp
fsubs
rolb
xor
out
add
filds
divb
fsts
xchg
cmpsl
inc
sti
adc
pop
jnp
aaa
adcl
mov
push
test
and
push
dec
jae
in
mulps
adc
jmp
ljmp
xor
dec
rolb
lret
int3
nop
sbb
ror
mov
sub
test
leave
cwtl
jb
inc
clc
fistl
in
push
adc
pop
mov
test
xor
inc
pushf
adc
into
dec
mov
mov
ja
xchg
sarl
out
into
test
adc
pop
mov
adc
or
fstpl
fistpll
dec
daa
xor
jbe
jnp
shrb
lock
or
insb
mov
bound
jbe
dec
push
adc
cmp
pop
leave
fldl
movsb
push
fisubs
push
int3
mov
into
negb
or
adc
pop
sbb
test
mov
fisubrl
sub
xlat
push
jne
test
ja
sbb
cmp
rcrl
jmp
cmpsb
or
xchg
repz
lea
push
cmp
in
into
pop
mov
daa
cmc
out
arpl
repnz
xlat
pop
push
lods
pop
enter
arpl
adc
les
test
add
fisttps
ret
fdivrs
in
mov
in
in
test
into
inc
nop
nop
push
add
in
jns
push
xor
lock
jo
and
sub
cmp
xchg
push
int
iret
mov
add
mov
ds
cmp
test
in
mov
adc
ret
add
inc
push
ss
mov
adc
cmp
subb
adcl
or
or
sub
mov
dec
repnz
lea
push
iret
adc
sbb
cmp
fstpl
adc
loope
shll
mov
xchg
aas
arpl
incb
out
ret
cld
add
clc
mov
inc
add
mov
mov
mov
repz
jnp
ret
jno
and
les
iret
and
mov
sti
test
and
inc
inc
jg
lret
mov
and
insb
push
xbegin
adc
jl
fsts
xlat
sbb
mov
fsubrp
subb
sti
adc
or
stos
xor
mov
sub
sbb
in
inc
ret
loopne
push
sar
inc
repz
add
adc
into
push
add
int
jne
jg
rcrl
cmp
daa
imul
lods
and
and
dec
int3
mov
push
xor
subl
push
mov
pop
repnz
xor
sbb
jle
stos
cmp
push
sti
jl
shrb
cs
pop
xchg
inc
cmp
out
pop
dec
or
sub
cmp
inc
adc
adc
sub
push
dec
sti
push
fbld
mov
sti
mov
int
outsb
aad
movsb
shll
inc
cltd
cmp
adc
sbb
out
xchg
sti
in
lods
cltd
pop
mov
mov
mov
add
add
sub
and
inc
xor
adc
repz
loop
popf
imul
pop
xchg
add
jp
sbb
sbb
test
dec
pop
inc
jecxz
push
shr
es
sti
mov
inc
jmp
or
cmp
cs
dec
ja
cld
fwait
stc
mov
je,pt
in
data16
push
add
lds
scas
or
push
daa
xor
inc
aaa
jne
test
popf
add
mov
mov
adc
mov
push
cmp
mov
aaa
mov
inc
aam
leave
les
popf
out
dec
out
push
hlt
inc
mov
lock
in
in
sarl
sbb
enter
sub
rolb
pop
lcall
out
cltd
cmc
adcb
outsb
dec
xor
clc
jb
clc
hlt
sub
adc
cwtl
pop
test
xchg
daa
or
ja
xor
cmpsl
push
out
stos
insb
push
in
pusha
add
pop
ds
push
adc
jmp
xor
inc
in
popf
ret
adc
mov
cmp
pop
lods
hlt
out
shlb
fmuls
xor
roll
add
mov
xor
ret
popa
pushf
mov
sbb
sbb
cmp
out
xchg
sub
in
sub
mov
out
clc
rcl
push
stos
xchg
push
push
sub
mov
emms
dec
cmpsl
enter
jmp
rep
mov
xchg
add
shlb
out
nop
imul
stos
aas
lods
sub
lds
mov
jns
bound
iret
inc
jmp
loop
sbb
mov
jns
fstps
rorl
popa
daa
and
cmc
stos
jecxz
or
lock
inc
add
push
sbb
jg
ss
in
inc
int
adc
pop
jns
das
add
lods
insl
aam
jge
in
and
cmp
cmc
fmull
in
push
pop
cwtl
or
lret
insb
addb
xlat
mov
pop
mov
shrl
fwait
lret
into
dec
jmp
add
cmp
add
adc
test
xor
loope
arpl
cmp
adcl
in
mov
jp
mov
mov
add
adc
pop
pop
test
and
loopne
fistpl
add
xrelease
fbld
sub
push
push
sbb
inc
leave
bound
adc
cld
inc
sti
dec
sub
mov
lcall
loop
and
xor
int3
iret
loopne
jmp
jnp
lldt
test
jp,pn
inc
push
aam
les
xchg
enter
jecxz
mov
outsb
stc
lods
push
daa
stc
das
push
popa
jg
and
xor
dec
push
aam
shrl
aaa
xchg
sub
aad
das
adc
push
iret
lods
pop
sub
out
add
pop
rol
loopne
sahf
pop
and
fcmovu
popa
lods
imul
sahf
xchg
int3
and
mov
movsb
sbb
fs
dec
shlb
imul
les
jecxz
xchg
adc
nop
leave
jmp
add
repnz
push
and
adc
sbb
adc
enter
incl
enter
mov
xchg
mov
push
leave
cmp
repz
mov
cmc
ficoms
faddl
jecxz
out
lret
xchg
je
mov
insb
add
xor
xchg
inc
push
stos
dec
and
sbb
stc
xor
into
sub
jo
dec
adc
xor
dec
sbb
movsb
add
cli
mov
inc
jp
ret
mov
dec
adc
lea
inc
cmp
jg
fildl
call
sahf
fistpll
mov
mov
add
aad
test
addr16
mov
pop
add
adc
push
jbe
xor
xor
jge
fistpl
nop
repnz
push
aas
jns
xchg
movsb
or
mov
sub
push
fwait
ljmp
push
out
lods
jl
jo
push
fcompl
cld
rcrl
test
out
cmp
movsl
in
stos
pop
inc
jg
insb
add
in
mov
stc
jmp
out
js
int
and
inc
lcall
jbe
outsl
pop
push
jl
clc
pop
xor
iret
pop
sub
xor
in
and
or
cmp
pop
daa
orb
xor
xchg
jae
and
outsb
ljmp
aas
xor
fsubl
pop
js
fiaddl
mov
cmp
add
jae
leave
mov
in
mov
lcall
jo
fsubrl
out
add
fucomip
xchg
lahf
scas
dec
push
sub
sbbb
cmp
ret
and
or
lret
lods
dec
cmp
iret
add
and
sbb
and
loope
sbb
stc
out
and
adc
or
pop
mov
sti
dec
sbb
add
fsubrs
inc
sbb
dec
movsb
fsubl
inc
daa
fdivs
addl
in
add
stos
ss
adc
fs
mov
dec
pop
test
lods
test
cmp
mov
pop
movsl
fwait
loop
or
daa
sbb
scas
repz
sub
enter
sbb
dec
in
fisubl
lcall
pop
std
or
mov
xchg
mov
mov
out
pop
sbb
jno,pt
mov
inc
fiaddl
in
out
std
cmp
cli
fcoms
int3
cmp
clc
sbb
or
out
mov
imul
cmp
xchg
push
ret
push
mov
or
sbbb
push
jle
jp
push
outsl
sub
fcmovb
sarl
cmc
jl
fistpl
jno
xchg
out
push
adcb
adc
sub
xor
jmp
add
ds
das
nop
cmp
sub
cmpsl
notb
push
adc
sti
fwait
xor
add
pop
mov
dec
out
vmovq
icebp
fnstsw
or
mov
int3
popa
insl
xchg
aad
sbb
xchg
push
hlt
in
fildl
jnp
je
cmpl
sbb
imul
jge
add
and
mov
lcall
cmp
pop
cld
inc
sub
add
cli
fstpt
out
loope
lods
insl
outsl
rorb
pop
mov
fwait
sbb
and
xor
repnz
movsl
fcomp
daa
sub
xchg
cmp
and
cmp
or
push
cmpsl
imul
fwait
jge
orl
jne
in
js
iret
popf
mov
mov
sahf
and
or
jecxz
add
mov
pop
stos
cli
mov
jge
js
inc
mov
fisubrl
lret
out
lret
fmulp
icebp
sub
cld
pop
add
or
out
mov
stos
scas
push
sbb
jp
mov
lods
in
mov
ficoml
dec
pop
mov
cld
add
xchg
adc
pop
add
push
repz
cli
dec
push
in
inc
and
lahf
jne
out
or
push
push
xchg
sub
mov
stos
je
outsl
push
jmp
sub
aaa
nop
in
add
dec
insl
dec
call
addr16
mov
mov
sub
sbb
loope
shr
int3
xchg
inc
insb
int3
xchg
mov
cld
and
jns
in
mov
idivl
or
mov
loop
aam
lret
dec
fcoml
add
jbe
sub
jns
sub
roll
sbb
outsl
mov
rorb
sbb
mov
mov
jmp
mov
scas
cmp
jne
nop
mov
imul
je
leave
out
jmp
cmp
or
clc
mov
mov
jbe
loope
add
aam
pusha
fisubrl
or
incl
xchg
adc
mov
add
stos
mov
enter
cs
xorb
push
add
in
cwtl
and
mov
jg
cmpsl
lds
push
insb
cmp
pushf
outsw
cmp
mov
adc
xor
and
roll
inc
out
jecxz
cmp
js
mov
les
and
sub
mov
adc
dec
cmpsl
js
loope
add
sbb
xchg
add
push
sub
sub
popa
xchg
lods
daa
aad
sbb
push
idivb
ret
mov
sbb
add
in
out
mov
cmp
jmp
sub
jecxz
and
or
xchg
ror
xor
adc
xor
fwait
andl
jbe
push
push
in
shr
and
mov
pop
incb
xor
rclb
lret
fsub
rol
mov
adcb
imul
sbb
cmp
xor
push
mov
mov
push
outsl
leave
outsb
stos
adc
das
cmpsb
repnz
push
int3
jmp
aad
and
addr16
lahf
sbb
mov
cmp
in
inc
outsl
mov
mov
dec
js
lret
int3
ret
xor
ljmp
int
mov
or
adc
movsb
push
sub
cli
add
cmpsl
cmc
push
adc
push
cltd
imul
jnp
test
pop
mov
mov
add
lret
cmpl
insb
xlat
mov
pop
lcall
inc
sbb
inc
adc
sub
fistpll
push
add
push
insb
lods
push
mov
xor
outsb
popa
jne
push
jb
mov
cmp
inc
inc
fidivrl
lahf
or
push
push
out
adc
sbb
mov
xchg
or
jge
xor
hlt
mov
fmuls
sbb
mov
mov
add
stos
outsl
popf
mov
leave
push
adc
out
cltd
shrl
xor
inc
sub
cmp
adc
add
or
jl
decb
movsl
ret
add
sub
jbe
xor
clc
sti
iret
outsb
pop
loop
adc
in
inc
mov
and
pop
popa
call
scas
mov
xchg
test
pusha
lock
push
sub
outsl
dec
pop
inc
mov
pop
mov
lahf
js
or
jge
sbb
cmp
pop
mov
repnz
or
adc
lret
cli
in
push
xchg
add
out
rol
adc
xchg
mov
fwait
inc
repnz
sbb
mov
mov
xchg
sbbb
pop
lret
mov
xchg
int3
sub
in
or
xor
mov
mov
inc
sub
test
and
ja
push
mov
xchg
paddq
idiv
sti
push
movsl
test
je
movsl
lret
sbb
pop
and
pavgw
lcall
add
xchg
test
xor
dec
lret
ds
cmp
int3
add
stos
add
out
ud1
ficompl
scas
mov
scas
cltd
stos
ss
pop
dec
xchg
pop
fs
stos
jo
ret
bound
sbb
es
cvtps2pi
incb
push
add
jmp
nop
rorl
fildll
cmc
jno
out
jbe
repnz
sti
daa
iret
int3
add
xchg
lds
push
cmp
push
into
lret
test
and
cmpsl
sbb
cmp
call
mov
movsl
cmp
fdivrs
cmp
adc
lods
int
enter
sbb
mov
xor
xor
or
xchg
mov
enter
pusha
push
lret
sti
push
sarl
arpl
mov
mov
pusha
insl
das
mov
adc
push
mov
jae
dec
mov
add
mov
pop
adc
lds
dec
lock
xchg
leave
sbb
jno
cmp
rolb
aas
pop
cs
inc
pop
std
xchg
ss
xor
jae
push
cltd
fwait
xor
scas
pusha
imul
stos
cmp
repz
pop
xor
addr16
xchg
jbe
popf
dec
pushf
arpl
cmp
shlb
pop
xchg
pop
dec
cmp
lcall
gs
push
cwtl
pop
movsb
jbe
loop
xchg
les
arpl
mov
mov
rcr
nop
gs
jl
mulb
stos
dec
cmpsl
add
add
inc
lret
mov
mov
test
mov
adc
mov
add
fisubl
mov
pop
sbb
ret
lcall
xchg
mov
lods
pop
add
mov
mov
xchg
fsubp
mov
push
out
dec
jle
adc
mov
jmp
sbb
inc
sub
out
mov
push
sbb
adc
insl
ficoml
loope
cmc
dec
sbb
ss
xchg
sub
cld
sbb
add
out
add
imul
push
mov
stc
xchg
fisubs
cmpsl
xchg
xor
and
lock
es
mov
js
mov
pusha
loopne
adc
add
lods
mov
stos
pop
cmpb
clc
ss
or
add
fdivrs
das
dec
sub
adc
mov
inc
add
push
cwtl
xor
lods
jns
jecxz
and
js
inc
aam
jecxz
es
mull
outsb
fimull
or
adc
mov
xor
inc
repz
xchg
pop
push
sarl
call
cmpsl
leave
popf
xchg
push
sbb
loopne
jbe
fmulp
mov
sbb
ficoms
xchg
fsts
outsl
sahf
les
fsubs
movsb
push
inc
or
mov
imul
and
icebp
adc
jbe
push
imul
adc
xor
mov
sub
addr16
sti
dec
out
sbb
add
xor
jge
out
jno
adc
mov
xor
inc
sbb
ror
int3
xchg
mov
pop
enter
mov
int
outsl
mov
pop
dec
popa
push
arpl
cli
movsb
jno
push
hlt
or
stos
f2xm1
sarb
jo
mov
fs
lahf
and
dec
stos
push
dec
cltd
cli
shrl
mov
mov
insb
push
lods
add
std
adc
lods
nop
icebp
xchg
inc
push
mov
mov
sbb
ja
push
dec
cwtl
int
mov
xchg
sub
jl
pop
and
or
andb
aam
xor
push
add
outsb
lock
movsb
xchg
jbe
bound
mov
or
sub
adc
xchg
sub
stos
ret
in
inc
bnd
lret
adc
xchg
fs
mov
movsb
push
jnp
pop
jno
pop
into
jnp
mov
xor
jmp
fiaddl
sbb
sbb
mov
mov
dec
int
fs
jbe
test
sbb
jmp
sbbl
mov
sbb
mov
cmpsl
add
out
inc
jne
lods
mov
sub
ja
pop
lcall
in
mov
fcmovb
mov
sbb
mov
in
cmp
pop
mov
mov
or
jmp
sahf
mov
pop
aam
mov
cwtl
xor
js
sub
mov
out
dec
aaa
daa
subb
cs
sub
adc
mov
mov
sysexit
fmulp
inc
sahf
sbb
xchg
lret
jne
or
pop
cs
pop
out
push
xchg
sbb
test
testl
xor
out
scas
adc
or
js
test
inc
cs
jmp
ja
arpl
imul
sub
xor
mov
pusha
push
push
jg
jmp
push
xchg
xor
ret
dec
push
add
or
push
cmp
pop
dec
ja
mov
xchg
mov
lret
ljmp
out
push
cmp
sahf
sbb
mov
testl
dec
daa
popa
sub
xor
call
jbe
jecxz
stos
insb
pop
sbb
fdivrl
ficoml
adc
mov
mov
aas
xchg
add
inc
jo
ror
sahf
xchg
cmp
mov
xchg
sub
mov
mov
pop
das
imul
iret
out
push
loopne
loope
imul
mov
out
hlt
pop
push
adc
sub
adc
mov
jecxz
mov
dec
dec
adc
imul
lock
cmp
dec
adc
stos
jmp
mov
mov
inc
cwtl
adc
sbb
iret
adc
push
aas
push
xorl
outsl
xor
mov
or
lock
out
in
test
xor
gs
mov
das
ds
sti
xchg
inc
insl
mov
push
popa
or
jmp
push
push
push
ja
adc
xor
arpl
aad
jae
into
and
add
lahf
sti
adc
ss
stos
loop
insl
int3
and
mov
mov
scas
iret
or
mov
mov
popa
shlb
shll
out
and
rol
xchg
jb
jmp
leave
add
jmp
nop
test
push
dec
in
jo
dec
repz
sub
adc
add
push
mov
jle
in
cltd
out
dec
mov
fstp
xchg
stos
mov
mov
fwait
mov
pop
and
sbb
push
roll
int3
mov
imul
xchg
ret
lret
jns
sahf
es
mov
xor
pop
lcall
mov
mov
inc
dec
xor
sti
ret
mov
or
jmp
jg
bound
scas
std
xchg
push
dec
aam
sub
jmp
push
out
dec
adc
mov
pop
test
and
lock
add
cwtl
insl
sub
lods
and
test
xor
cld
outsb
push
adc
lods
dec
popa
adc
or
and
sub
pop
test
dec
addr16
pop
pop
jo
push
ret
mov
jecxz
pop
out
shl
dec
jmp
mov
mov
lea
out
sbb
pushl
pop
or
aaa
repz
in
add
push
fisttps
add
aas
in
mov
loop
or
dec
add
mov
int
lods
mov
xor
xchg
inc
adcl
adc
loopne
mov
add
test
negb
dec
or
rorb
in
adc
in
mov
xor
push
test
push
xchg
loope
adc
aam
insl
sti
xor
inc
hlt
dec
pop
add
jne
lods
aaa
push
pop
and
cmc
pop
rcrl
adc
cs
loope
rcr
mov
rcll
stos
push
sbb
cltd
shl
cli
and
iret
stos
lret
ds
loop
cli
mov
leave
aaa
push
outsb
xchg
repnz
int
bound
rcr
hlt
call
add
ret
bound
mov
inc
jne
xchg
mov
int3
aas
dec
aad
xchg
add
testl
mov
mov
xor
pop
incl
xor
jcxz
add
es
test
push
jp
pop
daa
sub
jnp
xor
mov
pop
push
test
rorb
int
inc
jb
sbb
add
inc
sahf
mov
repnz
cmpsl
adc
adc
ljmp
xchg
add
mov
icebp
aad
inc
push
outsl
mov
mov
mov
mov
arpl
inc
ficompl
sbb
insb
call
ja
or
hlt
push
test
or
aas
add
mov
xor
push
and
pusha
pop
je
or
cltd
adc
rolb
ret
int3
mov
sbb
fdivrp
or
cmp
mov
mov
ffree
jg
push
sub
popf
scas
ret
pushf
mov
stos
scas
xchg
or
fildll
icebp
pop
cmp
adc
dec
cmp
aad
bound
jb
enter
sub
xchg
jp
test
adc
cltd
xchg
mov
cmp
and
scas
cmpsb
int3
adc
in
ds
cmp
jne
cmp
mov
add
mov
nop
int
cmp
adc
mov
lea
andb
cmp
addl
adc
shr
mov
mov
in
add
and
movsl
jo
nop
or
mov
or
out
ss
inc
int
pop
stos
into
or
outsb
data16
out
es
ret
jecxz
outsb
nop
scas
insl
mov
xchg
out
cmp
sbb
cmp
inc
int
imul
or
je
mov
fisttpl
or
insl
addl
sbb
shlb
daa
push
js
xchg
in
aad
push
add
in
jge
sbb
jle
ljmp
loope
pop
fwait
lahf
inc
int3
xchg
fadd
adc
in
fcompl
scas
push
outsb
loop
inc
addr16
or
out
sub
and
dec
push
jb
repz
cltd
out
xor
xchg
mov
mov
loopne
sti
das
sub
fstp
fistps
push
cmp
call
loop
shll
dec
jno
out
gs
or
mov
icebp
pop
test
sldt
dec
mov
mov
mov
insl
or
jb
ret
cmp
mov
jecxz
mov
imul
data16
cmpl
in
loope
mov
or
pop
sbb
stos
mov
pop
add
pop
jg
test
loop
test
cltd
scas
addb
fcmovnu
dec
in
add
dec
sahf
into
filds
bound
leave
push
incb
or
pop
bound
shrl
lock
hlt
lcall
ret
sti
mov
rcrb
fs
push
and
mov
inc
lcall
sub
push
das
fmull
push
addr16
sti
inc
xchg
and
arpl
push
popa
mov
sbb
adc
add
jbe
cmp
ficompl
rcll
icebp
dec
lahf
outsb
or
out
ljmp
pop
mov
xchg
sbb
dec
gs
push
bound
js
or
das
add
jg
aam
jmp
rcr
leave
popa
aad
fisubs
sub
pop
jae
iret
lds
aad
sub
rclb
int3
sub
inc
sbb
xor
aas
mov
push
insb
fdivrs
jecxz
or
mov
push
andl
adc
xor
or
icebp
lcall
push
pop
loope
and
test
push
adc
sub
loopne
pusha
jns
xchg
jns
mov
fcmovb
cmp
and
mov
add
lret
mov
nop
mov
push
pushf
aad
adc
ret
sbb
aad
test
lret
and
add
and
xchg
sbb
fsubs
out
inc
dec
and
jmp
in
jmp
add
or
pop
ja
scas
stos
sub
int3
jno
sub
push
adc
cmp
push
xor
pop
rep
jns
ror
hlt
rorl
cmp
sub
call
in
loope
jns
lahf
in
fidivl
dec
jae
xchg
mov
xor
xchg
scas
lret
push
shr
xor
addb
ds
rclb
push
cmpl
dec
fistl
insl
fcomps
sbb
push
repz
cltd
fdivrs
std
jns
dec
and
pop
jmp
outsl
pushf
inc
dec
push
popa
push
aam
adc
roll
hlt
mov
or
mov
mov
lret
mov
or
jae
les
mov
jo
or
leave
dec
jl
xorl
cmp
icebp
xlat
push
leave
das
sbb
fstl
adc
xor
addr16
stc
push
inc
dec
or
cmpsl
sub
jmp
sbb
aad
xchg
dec
popf
dec
mov
cmc
adc
sub
out
xchg
inc
xlat
jp
dec
xor
or
inc
movsb
cli
outsb
sub
lods
je
subb
sub
test
dec
jmp
iret
xchg
sbb
int3
add
mov
cltd
pop
pop
push
roll
mov
push
xchg
cmp
xchg
repz
sub
and
or
out
insb
jbe
aas
sbb
sbb
stos
inc
push
movb
popf
dec
inc
cwtl
inc
shll
mov
pop
and
insl
push
cs
jp
fmulp
pop
sbb
jmp
jmp
or
ret
or
out
cmpsl
cmpsl
divl
mov
out
mov
push
scas
aam
subl
jns
add
jns
mov
aam
mov
push
pop
out
pop
addr16
popf
push
mov
movsl
mul
mov
push
adc
out
fcoms
jb
aas
jmp
adc
add
movsb
pop
add
les
stos
loopne
push
cmp
xor
aam
and
jbe
movsl
xchg
mov
mov
adc
adc
loopne
dec
ja
test
ficoml
add
sub
adc
imul
jge
sub
add
std
insb
stos
aas
sbb
mov
sbb
inc
stos
xchg
and
push
mov
inc
js
or
fistps
imul
sub
mov
xchg
dec
addr16
cmp
inc
scas
cmp
fwait
mov
mov
push
sbb
pop
addb
xchg
inc
lods
enter
jbe
movsl
sbb
mov
sbbl
and
into
and
mov
and
and
stos
or
loop
or
lahf
int3
jne
sub
mov
loope
aad
push
daa
les
adcl
mov
or
xchg
add
pushf
xchg
insb
std
repnz
mov
or
out
jge
rcr
inc
mov
aam
jne
mov
into
outsl
mov
ss
rcrb
gs
jmp
dec
sbb
rclb
fsubr
cmpsl
fdivs
data16
cmp
lea
mov
shrb
jne
or
lret
mov
sbb
stos
loop
add
lds
jb
sarl
inc
test
sbbb
pop
lret
jbe
mov
and
or
out
mov
mov
fwait
mov
sahf
cmp
js
jmp
out
sti
mov
or
mulb
popf
jecxz
sub
lods
cwtl
mov
push
lret
mov
cmpsb
xchg
sbb
xor
inc
int3
test
push
sub
lret
mov
xchg
sbb
and
jne
pop
ljmp
pop
push
dec
sub
stos
out
icebp
bound
mov
mov
stos
or
loop
cmp
cmp
in
jnp
pusha
fidivs
orps
dec
cwtl
invd
push
add
sub
add
adc
xor
pushf
mov
movsb
lods
and
sbb
and
imull
xchg
addr16
and
mov
nop
cltd
sti
sbb
mov
ficomps
std
xor
jp
lock
in
js
push
mov
popf
inc
sbb
add
stos
sbb
push
cmp
sbb
xor
dec
mov
rcll
cmpsl
adc
addr16
stos
xchg
ja
stos
push
out
push
cwtl
fmuls
jle
rorl
loope
ja
pop
add
xchg
aaa
clc
fucom
lods
insb
dec
xor
mov
in
push
cld
xchg
jnp
jle
scas
aaa
lret
mov
xor
sti
popf
pop
jns
popa
inc
shlb
mov
loopne
negl
in
popf
daa
inc
jmp
int
mov
jae
sti
push
mov
insl
xchg
repnz
pushf
xor
pop
stos
mov
mov
addr16
adc
imul
or
jg
cmp
mov
sub
push
aas
cld
es
jo
or
jnp
pusha
dec
jle
mov
daa
push
inc
inc
cwtl
out
outsb
xor
dec
testl
pop
adc
jnp
f2xm1
arpl
adc
pop
mov
mov
arpl
sub
ds
nop
mov
push
cmp
out
inc
loop
mov
je
mull
sbb
fsts
mov
and
pop
jbe
gs
out
mov
pop
mov
data16
jae
add
jne
cmp
in
add
lret
ss
sbb
scas
sub
jne
imull
cs
mov
cs
mov
xor
cwtl
xor
int3
mov
push
jmp
inc
add
stc
xor
fucom
jno
int
add
mov
sarb
cmp
test
pop
or
clc
sub
movaps
mov
sbb
cmp
inc
rcll
out
cltd
xor
sub
or
jg
jge
or
inc
les
mov
mov
cmc
outsl
or
pushf
or
aas
nop
lods
in
pop
lcall
dec
inc
mov
pushf
jp
je
cmp
or
adc
cltd
dec
mov
movsb
jecxz
out
ds
test
or
add
int
iret
insl
sub
hlt
push
enter
out
cwtl
jnp
imul
scas
aam
mov
sbb
in
inc
sub
outsb
subl
pop
dec
rcrl
adc
add
repnz
jge
jno
sub
mov
mov
mov
cmp
cmp
sbbb
dec
sti
adc
test
xor
mov
addb
arpl
xor
mov
sbb
cltd
bound
fs
test
or
dec
loope
out
or
mov
adc
mov
sarl
in
fldt
shll
mov
stos
add
xchg
cltd
cmpsl
outsl
add
sub
int3
into
and
cmp
inc
call
sti
jg
sbb
mov
add
adc
imul
mov
repz
dec
mov
in
cli
pop
rorb
xor
add
or
mov
inc
xchg
push
sbb
push
sub
daa
jae
inc
adc
lods
pop
scas
test
in
and
out
and
sar
jne
sub
cltd
or
sbb
call
pusha
clc
mov
mov
dec
push
in
xor
adc
loopne
fnsave
or
fisubl
sbb
fstps
scas
and
daa
xor
in
ret
sbb
pop
or
cmpsl
adc
and
cmpsl
les
gs
adc
or
in
lea
jnp
or
dec
mov
add
push
jbe
inc
add
stos
add
mov
test
dec
or
jnp
ret
loope
pusha
ret
sub
int3
test
or
cmc
xor
mov
mov
push
sti
mov
scas
test
xchg
frstor
sub
cmpsb
into
lods
lds
iret
ds
sub
enter
pop
xchg
in
xor
fwait
fwait
loopne
add
dec
dec
jl
mov
scas
mov
mull
lds
xchg
loope
lret
int3
sub
outsl
icebp
push
sbb
std
add
test
div
and
outsb
lahf
int3
loop
aaa
fsubl
mov
mov
notl
xor
cli
aas
jmp
jo
lods
sub
mov
inc
push
fiadds
loopne
out
daa
jo
mov
sub
add
in
fidivl
or
stos
mov
mov
icebp
iret
cmpsb
jp
adc
xor
mov
cmp
add
or
aad
out
in
popa
sbb
and
mov
jb
add
mov
inc
inc
in
add
xor
sub
xchg
int3
popa
cmp
call
loopne
int3
test
iret
addb
cmp
into
adc
jge
mov
into
push
rclb
jp
in
and
repz
jno
add
icebp
push
add
les
inc
adc
lods
pop
rol
sub
mov
bound
js
and
push
cmp
push
lret
lods
iret
int3
popf
and
int
int3
es
xorb
push
sti
stos
adc
and
adc
cmp
lds
jp
mov
jecxz
mov
jnp
lret
call
mov
daa
xor
iret
stos
mov
push
stos
dec
jg
enter
fldln2
inc
jne
inc
dec
psrlq
sub
das
or
or
stc
xor
scas
test
aam
movsl
fisubs
pop
mov
loop
sbb
pop
and
sahf
fcompl
cltd
cmc
or
addr16
push
dec
rclb
sti
sub
cmp
sbb
lea
andnps
das
sbb
out
ja
int3
sbb
mov
movsl
lret
outsl
push
sub
lcall
inc
loop
sahf
sub
xor
data16
mov
or
cmp
popa
push
sub
pop
daa
cltd
cmpsb
add
outsl
mov
or
out
fists
in
hlt
ljmp
lea
sub
xchg
ja
pop
add
inc
or
insl
and
jbe
or
pop
sbb
jne
push
cmp
icebp
lock
cltd
pop
xchg
push
stos
out
sbb
or
imul
sub
xorb
or
dec
mov
adc
pop
jb
pop
mov
pop
inc
lock
sbb
in
sub
and
pop
lds
cld
or
js
adc
out
cmp
push
xchg
lods
dec
mov
das
dec
xchg
pminub
mov
xchg
xor
rorl
pop
mov
stos
sub
sub
add
mov
call
ljmp
popa
mov
mov
push
fsts
push
and
cmpsb
jmp
or
call
adc
pop
dec
or
mov
inc
in
mov
dec
fwait
shrl
xor
mov
lods
dec
xorb
cli
jge
pop
and
ret
iret
mov
call
addr16
xor
mov
aad
or
xchg
arpl
sub
or
mov
cmp
das
repnz
adc
sarb
or
jle
mov
mov
data16
test
gs
adc
cmp
enter
pop
daa
repz
dec
mov
pushf
inc
shr
fisttps
leave
jbe
repnz
inc
outsl
and
or
mov
inc
push
repz
rorl
add
or
add
aam
pop
push
ljmp
jl
pop
pusha
mov
dec
mov
jecxz
xorl
push
add
xchg
jo
jge
leave
pop
enter
mov
mov
out
stos
sti
call
adc
sahf
or
into
popf
dec
fildll
js
mov
jle
mov
imul
repnz
je
pop
cwtl
loop
xchg
repz
clc
mov
mov
nop
lahf
sbb
fsubp
or
xlat
adc
ja
inc
cmp
jne
mov
jg
pop
idivl
test
push
movsl
in
outsb
cmp
mov
sbb
push
adc
or
movnti
test
aam
inc
roll
xor
push
dec
jge
mov
push
out
aaa
movsb
test
pcmpeqd
cmc
or
nop
adc
loope
unpcklps
je
sub
pmaddwd
adc
iret
pusha
mov
cmp
in
repz
or
add
push
cli
cmp
mov
lea
pop
das
lds
sub
movsb
xor
xchg
stos
nop
int3
sbb
push
adc
xchg
es
daa
or
imul
hlt
sarl
push
or
cli
or
xchg
sbb
and
mov
js
push
in
xlat
std
inc
pop
lods
jmp
or
push
test
imul
pusha
dec
mov
xor
cmp
test
or
xchg
fwait
mov
lret
xchg
adc
in
mov
not
xchg
gs
stos
cmp
sbb
addr16
jmp
push
jg
andl
cmp
into
ja
cli
sbb
cmp
orb
ljmp
xchg
inc
addr16
or
repnz
sub
in
aad
orb
or
insl
mov
or
shl
loope
or
sbb
mov
jp
pusha
ss
fimuls
mov
out
push
lock
imul
adc
push
or
xchg
xchg
adc
or
jecxz
pushf
push
and
inc
lds
rclb
and
and
jle
push
xor
adc
mov
in
rclb
incl
sub
in
fs
sbb
inc
push
xchg
sub
push
repz
fcoml
add
xor
in
mov
xor
dec
xchg
clc
cmp
jb
mov
dec
or
or
lods
cmp
inc
xor
ja
aaa
or
scas
push
lock
scas
mov
or
inc
les
xor
dec
or
das
in
sub
fs
adc
movsb
pop
mov
sbb
add
out
or
mov
stc
or
sbb
lahf
enter
mov
push
ds
les
subb
xor
jecxz
add
or
dec
push
jmp
outsb
loop
dec
adc
xor
push
pop
push
fnsave
int3
dec
cmpb
or
sub
sbb
sub
mov
icebp
xchg
mov
enter
jo
fldl
and
fwait
pop
gs
fmuls
or
push
lcall
dec
mull
test
sahf
xchg
jge
dec
pop
movsl
or
pop
cltd
adc
and
das
sub
cmpsl
adc
outsl
pop
add
or
xor
scas
sbb
xchg
sub
stos
mov
mov
cli
sbb
pop
int3
adc
addr16
filds
pushf
out
or
cmp
arpl
add
stos
push
push
test
adc
roll
jge
jae
push
test
in
mov
xor
mov
pop
ret
or
loopne
fcomip
stos
movsl
out
cmp
jle
pop
mov
pop
sahf
sbb
gs
push
pop
in
stc
or
mov
aas
insb
xchg
cmpsl
mov
dec
hlt
jae
fsts
adc
or
add
test
sub
test
lds
push
xlat
sbb
sti
mov
or
ja
hlt
and
xchg
adc
shrb
or
mov
inc
daa
sub
cwtl
mov
xchg
add
or
push
pusha
xlat
dec
or
and
push
adc
sbb
or
sar
xchg
sbb
cs
or
adc
mov
fcoms
adc
outsb
cmpsb
dec
mov
cmpsl
mov
mov
inc
push
cmp
mov
inc
mov
cmp
xor
sub
or
jns
dec
mov
pop
aas
add
or
sbbb
dec
or
xchg
pop
or
and
mov
int
sub
test
xchg
mov
xor
negb
sbb
stos
hlt
mov
jns
stc
or
mov
mov
mov
or
jae
push
ret
or
jns
xor
mov
imul
sub
sub
lock
mov
rorl
sti
pop
stos
fisttpll
shr
sub
or
ss
dec
imul
jb
jae
lret
push
xchg
xchg
and
sub
or
andl
or
in
or
into
or
inc
std
loope
mov
out
inc
and
sub
sub
adc
daa
call
or
dec
js
dec
or
sbb
xchg
sub
aas
fldl
or
jae
jnp
or
mov
pop
iret
or
cs
jle
or
pop
jae
cwtl
addr16
mov
outsl
fdivrl
push
pusha
movsb
repz
jns
jmp
clc
cmc
lds
out
out
push
daa
inc
cli
mov
addr16
or
jo,pn
mov
sbb
scas
mov
flds
mov
gs
aam
ret
lods
fnstenv
cmpsl
mov
hlt
outsl
mov
sbb
mov
adc
mov
pop
mov
imul
cmp
divb
ja
out
mov
mov
dec
add
movsl
or
or
dec
adc
popf
mov
push
sti
adc
inc
test
lahf
aas
push
lea
iret
mov
or
mov
ds
divl
sbb
adc
xor
lods
mov
mov
imul
jmp
into
or
lods
test
pop
adc
in
mov
mov
jmp
aas
and
stos
jns
mov
into
jns
icebp
mov
jle
xchg
mov
shlb
or
sub
sub
inc
add
jnp
cmp
dec
cltd
mov
dec
mov
ret
popa
and
out
pop
gs
ret
int
in
mov
bound
mov
jbe
aam
sbb
and
push
xchg
aad
sbbb
out
and
inc
jne
shll
sbb
inc
jp
out
sbb
inc
stos
es
sub
xchg
sub
jb
inc
sbb
cmp
sub
lret
jl
loop
out
pop
add
aas
xchg
jnp
inc
lret
cmp
jge
rorl
sahf
into
test
push
adc
push
insb
xor
xchg
pop
fcompl
lods
sbb
add
mov
jmp
jae
jecxz
lret
mov
enter
out
daa
add
xchg
dec
lods
jns
push
add
les
adc
je
push
add
mov
lock
cmp
adc
mov
sahf
insl
pushf
sbb
push
mov
lods
je
inc
test
dec
hlt
int3
sbb
push
repz
fsubr
sub
pcmpeqb
dec
inc
int3
mov
mov
mov
or
add
cmp
fsubrs
pop
pop
jl
and
movsb
inc
int
movsb
xorb
jle
adc
int3
mov
lods
inc
push
push
inc
movsl
add
jmp
add
pop
push
sub
cmpb
stos
dec
shll
dec
push
adc
out
test
movsl
xchg
sbb
pop
push
mov
notl
sbb
add
push
add
lea
cmp
jmp
gs
dec
adc
cmp
movsb
pop
sbb
cld
sti
arpl
push
loop
push
mov
sbb
lock
dec
cmp
inc
inc
shlb
orl
lret
mov
inc
fldt
mov
add
int3
loop
adc
cld
in
push
cmpsl
sub
sub
jne
sbb
stos
rolb
int3
sti
xor
mov
hlt
test
push
mov
push
in
mov
sti
dec
out
pop
ds
sub
sub
sbb
mov
jmp
test
mov
inc
daa
roll
loop
loopne
icebp
pop
cmpsl
mov
xchg
xchg
mov
add
dec
out
btsl
jge
fmul
adc
jno
outsb
pop
jbe
push
add
sti
sbb
mov
xchg
pop
push
int
lret
mov
ret
cmp
stc
pushf
fisttpll
das
jg
and
ret
xchg
mov
or
test
test
xchg
add
sub
add
cs
jmp
cmpsl
int
pop
aaa
adc
jnp
in
fadds
cmp
es
and
mov
loop
cmpsl
cmpsb
les
imul
daa
jne
adc
pop
xchg
sbb
xchg
in
add
cld
xchg
sub
jl
jge
nop
jbe
clc
les
movl
add
outsl
mov
jne
mov
pop
int3
lds
in
std
loop
mov
push
sub
leave
test
gs
daa
cmp
sti
fwait
nop
stc
add
ds
mov
ja
or
pop
push
mov
das
mov
out
dec
fcompl
sbb
sub
roll
jle
in
sar
repnz
adc
push
and
insb
jmp
orl
mov
sti
xor
pop
add
or
jns
ret
sbb
xor
dec
stos
add
fs
test
cmp
insl
jg
out
adc
sbb
mov
aad
cmp
out
and
out
out
cmp
hlt
pop
lret
adc
aaa
or
out
imul
sub
mov
jb
push
or
mov
jle
subl
out
das
cmpsb
pusha
xchg
or
incl
out
orl
mov
rorb
pushf
imul
dec
ss
sbb
mov
mov
mov
lahf
ja
mov
inc
rcll
sub
jns
sub
hlt
pop
bound
push
jle
jne
adc
or
jnp
lds
ret
mov
cmp
jle
sbb
sbb
loop
add
jl
add
fsubl
mov
bound
jp
daa
xor
xor
xor
dec
cmp
adc
out
insb
mov
sub
loop
mov
rcrl
fildl
inc
add
add
int
insb
sbb
push
adc
fs
mov
jge
ds
jno
or
aaa
cs
jge
inc
adc
mov
test
xchg
out
sub
fidivl
adc
jnp
fsubp
push
jne
and
mov
jmp
scas
pop
fidivl
pushf
or
push
mov
test
xor
and
aaa
lock
xchg
fwait
mov
add
push
push
mov
mov
or
jo
leave
cmpsl
call
icebp
xchg
pop
dec
rorl
ja
pushf
rol
pop
mov
jge
int3
adc
and
jle
les
mov
mov
mov
addr16
push
icebp
out
dec
lret
dec
mov
stos
push
cwtl
sbb
popf
jnp
add
mov
stos
sarl
stc
test
push
mov
aaa
ret
and
loop
jl
push
pop
aad
aas
xchg
out
sbb
mov
stc
xor
jno
mov
and
push
addr16
into
insl
sub
xor
arpl
mov
in
xor
cmpsb
inc
or
lret
dec
jno
dec
shr
in
and
scas
incl
cwtl
inc
dec
pop
jbe
hlt
add
sbb
shll
add
ja
mov
mov
sub
repz
data16
cmc
or
fisttpl
and
xor
inc
add
and
mov
dec
lret
cld
mov
pop
aam
bound
fimull
sbb
or
bnd
fs
dec
subb
jle
movsb
rolb
rcl
jecxz
rolb
dec
mov
push
out
cwtl
add
sbb
mov
xchg
lcall
mov
lds
lock
mov
bound
add
push
inc
cmc
lret
loopne
scas
pop
sub
rep
pop
daa
xchg
mov
sbbb
in
dec
test
mov
push
dec
sbb
or
xor
jo
pop
ficoml
loopne
fsubs
push
mov
mov
xchg
jns
popf
or
cld
push
adc
cmpsl
sbb
int3
jne
out
icebp
dec
lea
out
jbe
test
aad
mov
mov
sub
pop
xchg
lock
jbe
cmc
xchg
fildll
jecxz
or
and
xor
xchg
pop
mov
neg
aad
adc
xchg
sub
push
xchg
jbe
sbb
mov
scas
ficoms
and
or
jl
cmc
or
push
fiaddl
xchg
incl
push
cmp
mov
adc
jbe
out
push
lcall
nop
in
movsb
push
aad
repnz
add
dec
or
clc
mov
fnsave
adc
dec
and
push
xor
sub
int3
lea
xor
inc
lcall
xorl
xor
jbe
sbb
adc
add
ss
int3
xor
insl
sub
xor
inc
ret
out
lea
add
mov
out
test
into
add
or
loope
fildl
xchg
lods
std
pop
std
sbb
xchg
inc
and
push
xchg
xchg
and
and
das
add
test
lret
push
jne
add
stos
cmp
xchg
adcl
sbb
or
xchg
add
xor
rorb
jp
sti
lahf
and
jl
sbb
lret
pop
inc
push
loopne
idivb
pop
push
mov
sub
and
nop
out
insb
xor
lcall
enter
pushf
push
js
xor
xor
add
movsl
add
pop
lahf
sub
adc
or
xchg
add
scas
cld
mov
push
adc
popf
sub
movsl
mov
or
sub
lods
xchg
aaa
in
aam
jmp
es
and
cmp
sbbb
pop
std
mov
andb
push
aaa
dec
push
cmp
ds
pusha
jb
sti
inc
shll
shrb
sti
dec
add
and
lcall
inc
imul
je
pop
or
stc
mov
sbb
jbe
shrl
ds
pop
inc
cmp
inc
xor
sti
outsl
mov
mov
add
aas
push
dec
mov
adc
pop
push
or
mov
fstpt
xorl
int3
push
loop
lcall
in
mov
or
pop
mov
xlat
inc
push
stos
call
and
pop
pushf
sbb
push
push
mov
push
iret
loopne
out
aam
mov
jmp
adc
add
cmpsb
adc
ljmp
popf
xchg
fbstp
rcr
add
jnp
mov
cld
mov
xor
push
or
mov
lods
push
add
roll
loopne
jl
in
pop
ss
cmc
push
int3
add
pop
movsl
sti
mov
sub
inc
jle
cltd
sub
scas
jno
mov
push
adc
xchg
sbb
inc
sbb
mov
mov
xchg
idivl
cwtl
hlt
adc
and
test
dec
je
out
daa
movsl
lahf
fisubrs
mov
mov
or
xor
cmp
shlb
in
bswap
jge
adc
add
xchg
pop
test
dec
fadds
out
lcall
inc
mov
jno
push
jmp
out
cmp
sub
cmp
insl
das
inc
mov
add
push
jmp
xor
add
push
inc
cmpsb
jmp
cmpsl
int
xchg
outsl
test
push
cmc
dec
hlt
insl
scas
in
sbb
jb
fcmovb
xor
jecxz
push
lea
rcrl
mov
and
push
enter
in
scas
pop
fidivrs
cmpsl
sarl
push
push
mov
push
into
out
sahf
fcoml
movups
push
ficompl
mov
int3
repz
jp,pt
jo
mov
push
addr16
fidivl
leave
or
add
xor
adc
or
and
popl
or
js
inc
pop
mov
lret
add
loope
shl
adc
les
inc
rolb
shll
jns
and
lods
push
lret
push
add
ret
dec
dec
adc
mov
repnz
pop
addb
xchg
ficoml
das
add
inc
insl
inc
shr
sbb
dec
mov
push
sub
repnz
push
xchg
fs
pop
xor
les
mov
adc
inc
loopne
out
outsb
fisubrl
cmp
cmp
pop
add
in
mov
cmpsl
mov
inc
aad
mov
xchg
jns
sbb
mov
bound
cmp
insb
mov
out
rclb
inc
int3
add
clc
adc
icebp
pop
sub
mov
movsb
add
lcall
xor
lods
xor
sti
or
out
push
outsl
je
movsl
shr
or
pop
fs
adc
sub
out
int
fsubs
addb
sbb
test
ljmp
sub
mov
cmpsl
dec
xor
je
adc
jnp
scas
xor
xchg
xor
int3
hlt
cmc
lahf
dec
add
shlb
fnstcw
sub
pop
push
mov
aad
addl
stos
sbb
push
jno
cld
stos
aam
pop
inc
hlt
outsl
rol
testb
cmp
mov
add
sbb
push
mov
dec
ud2
sbb
ljmp
add
scas
and
or
sub
push
test
sti
adc
jae
sub
mov
xlat
push
loope
rcrb
sub
ficompl
hlt
pop
dec
lahf
faddl
lock
repnz
push
inc
mov
jmp
andb
cmpsb
movl
pop
pop
je
cs
fs
cmp
cmp
cmpsl
or
xor
or
pop
hlt
cmc
scas
int
inc
lds
subl
add
enter
into
int
sbb
out
dec
jne
cli
testb
mov
loope
sub
xor
in
lock
sbb
add
dec
or
sub
add
insb
mov
loop
jl
mov
es
stc
push
pop
cwtl
jno
or
inc
je
xor
xchg
or
inc
fisubs
cltd
ret
je
xor
add
cmc
les
push
lret
dec
add
or
xchg
shll
inc
iret
lret
or
cmp
dec
adc
xor
shl
pop
in
xor
mov
aaa
and
cmp
dec
mov
fstpt
cltd
shld
push
jbe
pop
andl
xchg
dec
and
ds
rcrl
dec
pop
testl
pop
cwtl
ds
mov
mov
mov
adc
nop
xor
jo
push
cmp
test
test
rol
in
sbb
or
jl
rcl
jmp
xchg
aad
insb
mov
pop
jbe
inc
loop
or
repz
pop
outsl
cld
add
cmp
mov
xchg
push
ss
call
fldt
aaa
or
push
mov
in
mov
cmp
sub
push
cld
xchg
push
shl
mov
mov
js
add
pop
jns
mov
lret
push
insb
faddl
popf
in
sbb
push
inc
aad
dec
add
in
dec
subl
or
add
out
out
pop
and
cmc
jno
test
ret
pop
mov
popa
call
cmpsl
jae
mov
inc
xor
in
int
inc
mov
cmp
xor
mov
stos
test
push
jno
sbb
sub
jecxz
or
shlb
cmp
arpl
sub
xchg
pop
pop
out
pop
and
pop
call
mov
adc
fs
sbb
imul
or
pop
mov
jns
cld
fistps
out
inc
lahf
inc
and
adc
sub
pop
out
push
data16
add
fcoms
imul
loop
inc
outsl
mov
and
cmp
adc
clc
add
popf
popa
dec
cmove
add
lret
shrl
nop
cmp
pushf
push
or
aam
xchg
scas
fs
ljmp
ret
cmp
pop
out
push
iret
scas
cmp
xchg
sbb
mov
inc
scas
inc
imul
iret
cld
int3
imul
mov
jae
xchg
scas
js
xchg
dec
fisubrl
push
mov
mov
push
inc
jp
aaa
xchg
jb
add
or
repnz
adc
jp,pt
mov
ss
pop
int3
movsl
hlt
pop
xorl
js
inc
or
cmp
add
pop
or
pop
in
inc
loopne
mov
xchg
cmp
addr16
loope
fcmovbe
outsl
gs
or
and
out
cmpsb
pop
mov
sbb
pop
xor
mov
loop
sub
adc
add
xchg
push
dec
aad
mov
mov
pop
out
push
xchg
aaa
sub
stos
fwait
mov
enter
cmpsl
fcmovnu
test
mov
add
push
out
outsl
jmp
dec
loopne
pop
xchg
mov
int
das
je
ja
sub
cmp
jl
mov
sub
lret
sub
arpl
xorb
dec
shr
sub
test
out
ret
inc
xor
adc
push
lret
dec
cmc
jae
cmp
sti
stos
pop
mov
ds
xor
jl
mov
or
cmp
jecxz
jmp
add
sbb
xor
xor
movsl
fisubrl
xor
mov
xor
and
add
pop
insb
pop
cwtl
sbb
hlt
xlat
rcl
lock
jae
sub
cwtl
int3
add
iret
xor
inc
mov
push
mov
jp
sbb
xchg
xchg
fcoml
inc
aam
sti
outsb
or
cmp
pop
fists
fwait
pushl
cltd
sbb
out
mov
mov
in
jns
stos
push
push
xchg
insb
jno
out
gs
das
test
pop
push
fcmovb
xchg
cwtl
nopl
out
sarb
inc
jne
inc
xchg
insb
cmpsb
popf
adc
dec
cli
jno
sbb
jmp
push
bound
or
xor
sbb
mov
movsl
xchg
push
jns
fadds
jmp
jne
cwtl
mov
cmpsb
inc
mov
in
addl
idivb
xor
sub
xchg
dec
jp
int3
adc
out
lea
xor
mov
cmp
jg
sti
jb
movsb
push
pop
stc
setae
cmpl
mov
push
subl
stos
push
enter
or
mov
subl
aaa
jle
lret
rep
add
and
xchg
je
popf
mov
adc
lods
adc
cmp
mov
faddp
mov
inc
sub
mov
mov
lds
mov
add
lods
sbb
out
ds
jo
add
repz
ljmp
cmp
inc
or
jge
or
mov
fisttpll
push
or
inc
add
popf
xchg
lods
hlt
ljmp
sub
add
add
mov
fimull
out
addr16
xchg
sbb
lret
cld
add
sti
lods
xchg
sub
cli
xchg
iret
out
cmp
lods
mov
loopne
ss
ret
and
inc
push
insb
or
or
inc
dec
dec
xchg
fisubrl
and
inc
pushf
cld
push
daa
dec
scas
sbb
add
je
pop
pushf
ret
sbb
dec
add
cltd
lea
out
xchg
aas
mov
sbb
cmp
add
orb
mov
cmp
int3
popf
iret
add
cltd
jae
and
sbb
mov
add
add
cmp
loop
jnp
and
inc
jmp
jns
lds
xchg
shlb
bound
fs
imul
jns
int
jmp
jmp
les
dec
orb
mov
aad
jle
je
sbbl
mov
mov
aaa
xor
cmp
mov
push
push
sbb
pushf
je
xchg
out
inc
lret
push
dec
pop
lret
aaa
aad
das
sbb
jmp
cmp
dec
add
push
sti
stc
inc
popa
lahf
outsl
push
popf
sbb
jle
push
insl
aam
int3
ljmp
adc
cltd
adc
ficoml
iret
xchg
xor
jno
loopne
daa
adc
cmp
lret
clc
fildl
sbbb
fs
fadd
sbb
or
sub
or
cltd
adc
sbb
dec
fnstcw
out
lea
mov
sub
icebp
push
xlat
ret
cltd
pop
lret
adc
scas
xor
sub
cmp
je
stc
or
cmc
push
mov
add
lea
push
pushf
sti
lds
outsl
and
out
jge
aaa
addr16
push
mov
insl
out
jecxz
test
inc
jnp
sbb
mov
push
bound
and
aas
imul
movsl
sub
pop
repnz
repnz
and
sti
std
inc
fucomp
mov
jns
imul
test
xor
rclb
sbb
hlt
hlt
scas
out
popf
fcmovbe
stc
cmp
xor
and
xchg
adc
jp
xchg
shlb
imul
cmpb
dec
mov
jnp
das
aas
test
adc
xor
or
jns
mov
mov
lods
lret
out
add
lods
scas
cwtl
sbb
mov
into
and
mov
xchg
adc
and
lds
pop
jle
insl
rorl
xor
or
sahf
ss
insb
repz
adc
mov
sbb
or
js
int
push
jbe
ljmp
fisubrl
mov
mov
in
outsl
sti
rclb
inc
adc
stos
sbb
sbb
test
test
call
adc
xchg
sbbl
mov
xchg
mov
iret
jmp
adc
cmpsl
mov
loope
xchg
in
rolb
push
adc
inc
mov
adc
push
and
int
pop
cmpsb
aas
push
jne
pop
xor
popa
jne
sbb
decb
cmpsb
inc
or
addr16
iret
popa
mov
pop
iret
xor
sbb
sub
bound
fcomi
cmp
ret
lds
scas
jg
dec
xor
add
adc
mov
add
pop
rorb
mov
int
pop
repnz
mov
aad
jbe
loop
leave
ss
mov
jmp
orb
out
insl
nop
jne
jns
mov
jmp
sti
cmp
sti
lds
lret
jnp
loopne
xor
ds
lret
or
stos
in
push
sbb
lods
int3
roll
push
hlt
mov
lods
aad
aas
add
int3
loop
adc
test
mov
bound
and
in
mov
iret
xchg
sarl
stos
pop
or
xchg
inc
lods
pop
ss
in
pushf
or
insl
jge
rcll
add
xchg
mov
push
stos
test
add
cmp
sub
and
icebp
push
cld
daa
in
test
push
or
mov
test
stos
mov
jns
inc
push
in
js
shll
cmpsb
jo
pop
es
jo
and
mov
aam
stc
das
js
push
jge
add
cmp
cwtl
stc
inc
cmp
pop
dec
insb
daa
lcall
pop
ljmp
scas
popa
sbb
push
push
je
adc
aam
fildl
pusha
stos
shlb
mov
test
repnz
int3
add
daa
pop
in
mov
cmp
add
or
sub
mov
jae
test
insb
adc
das
in
insl
jl
daa
stos
cmp
add
idivb
bound
cwtl
xor
fnop
pop
jp
test
jb
sahf
cmpsl
pop
sub
rcl
arpl
roll
and
mov
jl
sub
mov
adc
clc
or
dec
or
loopne
int3
fldt
dec
adc
je
es
ficoms
in
mov
pop
cmp
cwtl
clc
add
push
bound
bound
rol
mov
jecxz
and
icebp
cs
mov
iret
xchg
imul
mov
pushf
lods
mov
mulb
subl
dec
mov
loop
inc
inc
sub
inc
push
mov
insb
cltd
out
in
jno
aaa
jae
addb
or
push
cwtd
shl
add
stos
sbb
int
xor
pop
data16
ficoml
dec
or
jmp
mov
pusha
ret
int3
mov
adc
mov
push
aam
xor
dec
mov
cltd
dec
sahf
ds
xor
mov
or
mov
sub
aad
leave
jbe
sbb
jbe
xchg
add
scas
mov
bound
adc
stos
int3
xchg
push
fdivrs
scas
dec
sbb
sub
ret
dec
imul
mov
sbb
inc
adc
add
iret
jge
pop
andb
mov
mov
fnstenv
mov
push
mov
repnz
pop
lock
ja
jp
mov
ds
sub
outsb
cld
sbb
mov
js
adc
jl
fimull
andb
test
aaa
cmp
popa
aaa
ret
xor
aaa
or
clc
and
mov
sbb
fs
aad
cmp
insb
adc
into
jns
xor
mov
dec
ret
inc
aaa
push
call
insl
and
std
push
xchg
fcoml
adc
int3
push
fildll
sub
hlt
or
andl
sbb
dec
mov
mov
pushf
cmpl
inc
dec
out
call
jmp
stc
xlat
pop
iret
out
outsb
test
push
lcall
add
and
pop
or
imul
adc
or
mov
mov
ret
jl
xlat
repz
sbb
out
daa
inc
push
stos
repz
and
lds
jne
jl
fcmovnu
add
pop
out
push
les
stos
xchg
ret
sbb
xor
push
xchg
jne
dec
int
int3
pop
pop
leave
and
or
dec
mov
iret
mov
fstl
fildl
movsbl
mov
push
sub
mov
icebp
dec
xor
ss
cmpsb
mov
int
in
inc
mov
push
clc
arpl
mov
sbb
test
rolb
int
imul
mov
das
sti
fdivs
loop
clc
sbb
pop
mov
arpl
adc
frstpm(287
mov
sbb
xorl
imul
stos
in
sub
cwtl
adc
addr16
cmp
out
push
lret
fnsave
fsubs
dec
sub
lods
rol
int3
dec
stos
lahf
pop
jb
mov
sbb
mov
pop
aas
shlb
xchg
inc
js
jno
adc
pop
cmpsl
push
cltd
adc
in
jp
insb
mov
mov
test
xor
sbb
into
int3
mov
jbe
jno
dec
jge
std
cmpsb
sbb
inc
sbb
arpl
lret
sahf
inc
clc
add
lods
xor
inc
popf
inc
stos
dec
sbb
cmc
mov
ret
mov
dec
dec
mov
addl
call
out
es
fadd
jl
sub
in
int3
sub
data16
and
xchg
adc
and
push
jmp
mov
nop
mov
push
insb
xor
push
lea
xor
jnp
loope
xor
add
add
popf
mov
push
imul
jp
push
mov
mov
mov
cwtl
sub
je
jno
cmp
stos
xchg
out
stos
adc
xchg
sti
adcb
jno
outsl
add
jnp
popa
mov
mov
sub
jne
sub
mov
bound
inc
outsl
lock
inc
ljmp
into
in
cmp
xor
mov
dec
sub
xchg
pop
ror
leave
mov
pop
dec
dec
pushf
sar
aam
mov
ficompl
cmpsb
add
mov
loope
xchg
jge
hlt
sarl
in
insb
inc
pop
das
mov
mov
cmpsb
fcmovbe
add
inc
aam
mov
dec
push
lret
and
sti
insl
fdivl
les
gs
cmp
loope
push
shll
or
adc
mov
xchg
mov
or
insb
add
add
and
mov
lret
in
jle
lea
pop
clc
incl
mov
mov
sahf
stos
adc
xchg
cmp
insb
add
pusha
subb
mov
sub
or
in
push
sahf
fsubr
and
dec
dec
shrl
pop
jle
push
repz
repz
rol
add
pop
jae
add
adc
outsb
jl
and
fmul
repz
jl
mov
inc
dec
ret
and
pop
rcrb
pop
xor
pop
inc
cltd
das
mov
pop
mov
scas
clc
dec
push
adc
mov
mov
add
and
clc
mov
daa
pop
jmp
sub
clc
mov
dec
or
push
ljmp
jae
mov
push
add
repnz
cmp
jne
xchg
pusha
jecxz
out
or
fadds
or
loope
addr16
clc
shlb
inc
adc
inc
outsl
mov
push
cld
outsb
xorl
in
adc
dec
shrl
outsb
out
fisttpl
xchg
lds
insl
in
out
enter
mov
sub
cld
ret
shlb
cmc
in
and
mov
adcb
jae
mov
inc
mov
cmp
aaa
out
push
adc
jp
fs
or
fwait
test
mov
lods
pop
mov
insb
rcrb
sbb
out
test
int
xor
adc
lea
mov
pop
les
xchg
xchg
in
mov
jge
cli
test
add
lret
xchg
push
out
incb
arpl
xchg
rolb
inc
or
pop
dec
movsb
lret
inc
iret
pushf
jmp
gs
icebp
push
nop
subb
ss
lahf
cmp
das
adc
mov
loope
lret
push
cmp
test
add
stos
or
ljmp
cli
sbb
fwait
cmpsl
adc
aad
xchg
add
push
sub
lcall
jecxz
dec
fs
mov
inc
jl
subb
cmp
mov
adc
cli
psubusb
into
lea
pusha
mov
leave
cmp
in
cmc
lret
pop
lret
adc
or
push
cmp
into
in
sub
subl
les
push
mov
mov
stos
shrb
mov
lret
xor
push
xor
jge
fidivrs
inc
push
inc
stos
mov
clc
mov
adc
add
loopne
movsb
enter
arpl
pop
inc
aaa
out
fs
mov
js
inc
lcall
sbb
mov
and
shrl
dec
mov
sub
je
add
push
mov
xor
aam
lock
add
xorb
loopne
mov
je,pt
adc
inc
add
outsb
and
daa
icebp
mov
mull
inc
cmp
insb
movsb
jmp
ret
cs
push
into
rorb
out
and
push
mov
xor
dec
int3
add
sti
loope
inc
jnp
out
cmp
xchg
cmc
lods
adc
push
add
cli
adc
cmpsl
xchg
cmc
sub
add
mov
push
icebp
mov
cmp
int
lock
outsb
sub
add
pop
dec
adc
adc
xor
out
ljmp
and
mov
popf
imul
js
xor
cmp
ret
cmc
sub
inc
mov
shll
cmpsl
adc
rcl
cmp
push
jbe
icebp
add
iret
popa
cli
push
gs
notl
push
xchg
jbe
out
mov
mov
inc
xchg
inc
jnp
sti
sbbl
icebp
fdivl
lds
fwait
roll
dec
mov
dec
test
insb
mov
mov
bound
int
sub
shl
movsb
inc
adc
mov
mov
push
ret
xchg
mov
out
repnz
cli
out
mov
add
and
adc
fcompl
scas
xor
mov
push
repz
mov
jp
rcll
push
out
adc
sub
lret
mov
jnp
mov
andb
ss
aad
lea
inc
mov
lock
pop
dec
push
push
mov
out
xor
sahf
loop
mov
adc
cltd
add
jmp
stos
and
sub
mov
add
inc
push
repz
add
push
inc
out
mov
jae
sbb
mov
xor
lret
fs
nop
insb
add
cmp
jmp
les
loope
call
out
lods
in
stos
fists
mov
stos
rolb
ret
and
adc
or
dec
pop
lcall
xlat
nop
gs
ret
int3
sbb
in
add
jmp
les
mov
dec
cmp
push
adc
cmp
fs
test
adc
test
insb
les
negl
add
nop
call
lcall
call
in
jne
or
sbb
push
out
add
shlb
and
adc
adc
ds
sbb
inc
fidivrs
shrl
insl
lret
add
pop
jnp
adc
fiaddl
cltd
scas
adc
in
pop
jmp
fs
iret
fs
lret
xchg
cld
call
bound
mov
lret
leave
lock
mov
outsb
in
jg
daa
jg
jle
jnp
xor
subb
das
lods
jl
fdivp
pop
or
pushf
les
add
cltd
push
sbb
andl
jmp
stos
sub
pop
or
mov
lcall
xorb
mov
cmp
aas
enter
insl
inc
aad
sbb
adc
xor
mov
push
fidivrl
jp
mov
sahf
sbb
arpl
mov
test
cmpsl
xchg
ss
stos
sub
push
or
mov
add
dec
jp
inc
xor
push
xor
std
and
mov
loopne
inc
jmp
push
push
insb
add
cmp
cmp
jl
sub
add
enter
repz
push
test
cltd
push
adc
mov
cli
orl
and
dec
add
int3
rclb
in
xor
sub
or
and
cld
xor
and
xor
inc
xchg
in
add
lods
xor
movsb
mov
or
icebp
push
sbb
daa
inc
in
adc
push
sbb
xchg
cmp
cmp
movsb
mov
fcoml
xchg
xor
stos
and
add
ret
lcall
out
aam
sub
mov
addb
loop
sbb
lret
push
cmp
sbb
and
leave
xorb
sbbl
push
jae
in
in
inc
mov
add
sbb
out
roll
ja
in
les
or
add
lret
jo
sub
in
fadd
stos
out
xchg
repz
out
push
mov
fadds
pop
out
jl
sti
dec
ds
xchg
xchg
int
inc
mov
sub
or
push
mov
popa
lahf
in
jle
pop
sub
pop
pushf
out
push
jle
jmp
pop
and
ret
xchg
das
inc
mov
add
pop
push
lea
call
xchg
mov
test
das
imull
add
je
flds
and
ss
mov
inc
cmc
jae
les
push
jge
mov
rol
mov
ja
push
and
pop
dec
jecxz
and
ret
dec
xchg
aas
lret
das
iret
xchg
jmp
inc
inc
pop
inc
add
and
mov
sbb
adcl
adc
cmpl
jmp
call
mov
mov
insb
das
call
pop
xor
pop
inc
inc
push
out
or
sbb
mov
sti
mov
fwait
jbe
shll
mov
aad
lds
adc
fidivrl
dec
ficoml
rol
pop
push
push
pop
iret
gs
cld
push
ficoms
mov
cld
daa
out
or
lcall
movb
and
or
cmp
jo
mov
clc
add
dec
or
rol
or
dec
scas
jbe,pn
sub
push
movsb
fildll
out
pop
mov
pop
negb
loope
cmc
icebp
mov
dec
cli
inc
jecxz
out
popa
mov
js
in
jns
xor
push
ret
mov
ret
mov
dec
mov
adc
dec
leave
add
push
popa
or
je
jbe
enter
jbe
aas
fwait
mov
into
sti
adcl
pop
sbb
jge
pop
out
pushf
mov
out
sub
dec
dec
xchg
xor
enter
jno
mov
jbe
cltd
inc
in
stc
mov
push
push
std
test
ljmp
push
jecxz
out
mov
and
sbb
ljmp
popa
jp
adc
add
lods
xchg
jecxz
push
push
mov
xchg
test
dec
outsb
sarb
jl
repnz
hlt
mov
push
push
insb
mov
pop
xchg
fldt
dec
ret
test
jne
mov
mov
dec
mov
add
mov
in
adc
stos
add
xor
push
movsl
and
adc
mov
sti
or
mov
mov
aad
and
add
xchg
sbb
andb
or
insb
xor
iret
sbb
adc
jg
aas
pop
push
cmp
stos
adc
add
push
shl
push
push
jbe
jge
fwait
addr16
pop
jae
fisubs
sbb
cmpsl
or
out
jp
sbb
jge
test
push
stc
pop
fs
testl
mov
test
jb
push
xchg
xor
and
add
mov
ds
stos
mov
repnz
mov
or
add
mov
and
inc
sbb
mov
lock
adc
and
icebp
jmp
ficompl
lock
xchg
and
cmp
std
ror
sbbl
rol
notl
adc
cwtl
add
test
add
xchg
loop
adc
dec
insb
mov
mov
mov
and
pop
inc
imul
jmp
inc
int3
pop
and
inc
jns
cltd
mov
push
xor
jmp
pop
mov
ret
in
inc
jl
sub
repz
or
loop
iret
xchg
pop
daa
push
push
xor
jg
adc
jp
xchg
mov
out
sub
idiv
jmp
mov
cmp
lea
or
int3
push
loopne
and
mov
inc
adc
dec
repnz
pusha
push
mov
lea
iret
and
lret
addb
js
xchg
push
dec
daa
mov
hlt
sbb
das
daa
push
jno
add
mov
cltd
sbb
sbb
inc
sarl
std
xchg
pop
in
adc
das
das
into
pop
int3
cltd
aad
popl
mov
dec
push
xor
xor
fdivl
inc
adc
mov
int3
mov
jno
xchg
adc
xor
rorb
lock
test
sbb
jmp
cmc
dec
lahf
nop
inc
jns
sti
sbb
lods
mov
scas
adcl
mov
and
add
in
sbb
adc
ret
add
xchg
mov
jb
insl
repz
push
int
out
push
das
dec
ja
push
popf
jge
sbb
hlt
out
dec
jmp
or
aas
cs
xor
dec
cmp
and
out
out
subb
mov
bound
sbb
add
movsl
push
add
or
sbb
mov
bound
les
shl
std
sbb
pop
mov
xchg
outsl
or
xchg
repz
rorl
insl
adc
add
stos
sub
inc
pop
lock
sarb
adc
and
adc
into
mov
sbb
cmpsl
cmpsl
stos
cmp
and
jg
cli
mov
sbb
outsb
sbbl
pop
xchg
test
cmp
ja
xchg
sbb
adc
decb
adc
int3
cmc
push
jo
inc
push
sbb
das
insb
loop
mov
popf
xor
stos
ret
sti
sahf
aaa
outsl
mov
or
push
add
int3
add
lahf
sti
je
int3
pop
mov
aas
stc
and
and
or
mov
mov
nop
jb
add
fistps
fsts
insb
in
out
or
lea
inc
repz
daa
fdivr
addr16
and
xchg
adc
adc
pop
int
leave
orb
rclb
in
fldt
jo
and
push
stos
loope
test
fs
int3
mov
loope
lods
adc
dec
adc
ljmp
fwait
inc
xchg
push
mov
xchg
hlt
popf
inc
dec
inc
int3
loopne
jnp
dec
fcomi
adc
adc
jmp
dec
cs
imul
dec
inc
push
mov
aaa
xchg
lret
int3
lret
mov
sahf
out
mov
push
insb
add
push
enter
addr16
cmp
ja
ficompl
loopne
adc
sub
lret
out
push
aaa
test
sbb
cmp
jp
mov
sub
inc
rolb
gs
ja
dec
push
fisttps
xlat
push
push
pop
cmpsb
jp
jg
cmp
sub
das
adc
jbe
lods
popa
adc
call
mov
inc
xchg
repnz
lahf
bnd
out
fisttpll
in
jge
insl
adc
dec
sub
std
jmp
out
cmp
cmp
repz
and
xor
pop
or
mov
push
and
arpl
das
jno
lahf
out
sub
dec
test
into
cli
jmp
adc
add
inc
repnz
repnz
adc
lock
sbb
and
pop
movsl
fsubrs
lods
popa
xlat
xrstors
out
sbb
inc
loop
scas
inc
adc
jne
push
or
aaa
cmp
xor
scas
test
int
mov
mov
mov
or
out
int
mov
sbb
repnz
sub
add
mov
fistps
mov
ret
scas
in
add
xor
mov
stos
aas
test
sbb
mov
cmp
ret
inc
xchg
sub
orb
jns
add
sub
insb
nop
lret
adc
sbb
push
xor
mov
mov
xchg
inc
or
out
mov
cld
cltd
sti
adc
sub
or
xor
imul
adcb
std
arpl
dec
dec
loopne
jnp
lahf
insl
fwait
leave
pop
jg
rclb
adc
lret
xchg
andb
sbb
insb
popa
mov
imul
push
pushf
mov
xor
jno
std
nop
mov
jmp
stc
pop
imul
mov
push
fisubrs
and
cwtl
inc
sub
push
mov
pop
out
daa
and
out
ret
mov
lret
push
inc
nop
pop
jo
or
xchg
lret
icebp
dec
fwait
mov
pavgb
mov
subl
or
and
inc
fildl
negl
mov
in
out
inc
cmpsb
cmp
popf
leave
inc
cwtl
pusha
pop
pop
ja
adc
les
jmp
daa
inc
dec
jge
adc
add
xor
ret
ljmp
jne
dec
rcrl
xchg
std
pop
in
mov
mov
clc
fstp
aaa
iret
in
add
or
inc
adc
cld
or
push
and
imul
push
cltd
and
inc
lea
sub
cld
jbe
and
pop
mov
dec
lods
stos
sbb
dec
jae
fs
out
std
mov
inc
jo
xchg
push
inc
push
stos
ljmp
adc
daa
lods
loop
cwtl
pop
orb
rorl
lods
xor
adc
mov
sarb
out
pop
loop
adc
push
insl
mov
lret
pop
dec
ror
aad
and
jge
and
into
mov
movsl
movl
cmp
or
and
insl
mov
mov
rolb
fists
jo
cld
mov
pop
imul
std
nop
push
xchg
bound
insl
xchg
sahf
push
in
xchg
ja
xor
incl
mov
ss
scas
aaa
mov
ljmp
jg
add
sub
sti
daa
out
test
inc
lret
imul
cs
fisttpll
jnp
jns
outsb
mov
sub
dec
sti
or
cli
mov
xchg
icebp
jecxz
add
cwtl
int
mov
mov
xchg
sbb
repz
jo
mov
or
into
icebp
mov
mov
xchg
movl
pop
adc
cmp
cmc
sbb
sbb
or
push
adcb
lods
rcrb
dec
add
pop
fnstcw
inc
add
aam
add
mov
int
stos
adc
pop
test
mov
and
fcompl
add
iret
cmp
shl
lea
popf
clc
add
adc
test
in
outsl
add
and
stos
adcb
aaa
mov
cmp
dec
mov
pop
jnp
inc
mov
mov
xchg
cltd
bound
decb
das
dec
or
adc
xchg
pop
lods
mov
lods
cmp
cwtl
daa
outsb
sbb
adc
jns
ret
xchg
adc
cmpsb
das
jmp
sub
jle
fidivrs
cmc
daa
sahf
inc
gs
mov
adc
lret
mov
ss
xchg
mov
push
jns
pop
mov
mov
xchg
jle
mov
mov
mov
fcomps
xor
pop
pusha
test
ds
cs
sub
and
out
inc
cwtl
dec
sti
shlb
adc
dec
mov
lcall
inc
mov
shlb
dec
out
lret
fnsave
pushf
ret
xor
or
xor
push
insb
add
mov
dec
aad
mov
pop
pushf
icebp
mov
into
movsl
jmp
adc
fbstp
out
cmp
xchg
test
mov
insb
repz
jae
add
mov
mov
hlt
adc
aam
pop
hlt
add
mov
add
sbb
mov
cmc
mov
lock
xchg
or
xor
add
dec
cwtl
sub
xor
dec
add
or
sbbl
out
xchg
hlt
scas
pop
icebp
or
rolb
test
pushf
add
push
or
mov
fisubrs
dec
int
push
and
jb
dec
test
lods
adc
push
in
xor
jne
pop
mov
sbb
mov
out
stc
in
mov
pop
lret
or
xlat
mov
scas
and
pop
mov
or
add
mov
mov
out
movsl
or
pop
shrb
cmp
jne
push
xorl
icebp
add
pop
cwtl
or
pmullw
lods
lock
ss
aas
adc
test
mov
xor
sbb
mov
lods
fs
insb
inc
pushf
or
and
xor
lret
insl
sub
scas
sbb
mov
arpl
mov
sbb
sub
sbb
adc
popf
dec
loopne
cmp
cld
and
fiaddl
cmp
jb
pop
iret
add
push
push
test
dec
or
and
xorb
jae
push
imul
loop
nop
or
ret
out
sahf
push
mov
rorb
adcb
push
xor
or
and
sub
inc
fstps
or
lret
push
or
push
fdivs
cld
adc
or
jmp
aad
lods
out
movsb
out
in
fwait
sbb
or
test
lods
or
popf
sbb
or
cmp
mov
pop
sub
or
mov
sub
fisubrs
inc
sbb
xchg
mov
out
mov
pop
out
pop
enter
add
and
repz
jne
push
add
lods
mov
pop
rcrl
jae
lret
adc
mov
sahf
jnp
cmpsl
in
subb
xor
mov
or
jmp
jp
inc
sbb
cmp
sbb
test
fldl
add
fcmovbe
fadd
cmpsl
stos
push
pop
push
imul
nop
stos
xor
sahf
in
pop
jns
xor
push
adc
xor
cmpsl
sarl
cmp
pop
dec
bound
movsl
adc
jb
dec
add
or
and
xlat
mov
xchg
scas
xor
dec
stos
mov
enter
popf
sti
jb
aad
jne
loop
cli
push
xor
sub
test
cmp
mov
adc
insl
jge
out
jg
push
lret
add
lcall
rcl
pop
dec
adc
sti
push
cs
adc
dec
sub
mov
ds
sub
adc
fiaddl
xor
scas
out
add
pop
int3
mov
dec
xchg
xchg
add
out
test
es
js
push
push
test
sub
das
mov
add
dec
dec
dec
addb
inc
push
jno
dec
leave
xor
iret
push
push
sbb
push
adc
cmpsl
shl
cmp
sbb
mov
sbb
mov
push
mov
mov
mov
iret
cwtl
movsl
sbb
cmpsb
leave
out
and
pop
lock
fstps
pushf
jne
push
adc
add
jle
mov
mov
adc
xor
sbbl
sbb
mov
mov
push
inc
rcll
je
es
dec
int3
add
pop
mov
je
out
add
sub
ficoms
push
daa
pusha
sub
aaa
xchg
in
cmp
sbb
sbb
icebp
int
cmp
in
cld
jbe
xchg
sbb
in
inc
cmp
lret
mov
push
leave
in
add
ret
gs
mov
cmc
xor
push
sub
lret
imul
mov
cmpl
or
mov
shlb
scas
xchg
jg
test
push
pop
add
aas
repz
xchg
push
mov
das
or
xchg
xor
ss
imul
sbb
mov
push
and
sbb
sbb
out
mov
jae
jns
insb
shl
aam
and
fstenv
mov
mov
je
dec
xchg
jne
lods
lods
cltd
xor
std
jecxz
faddl
or
mov
sbb
jle
addr16
nop
jb
pop
cmp
inc
sub
lahf
add
daa
push
loopne
mov
popf
inc
subl
push
xchg
sub
push
jp
lea
push
xor
jecxz
mull
or
daa
fdivs
add
cmp
pop
or
adc
outsl
incb
mov
in
movsb
push
add
jle
add
cli
xchg
add
cmp
ret
adc
xor
lahf
lea
test
data16
scas
fdivs
subl
pop
sbb
mov
pushf
addr16
adc
xchg
lahf
xchg
ja
pop
adc
push
jp
cmp
push
push
jl
into
out
leave
adc
addr16
push
mov
stc
test
lods
sarl
dec
cs
adc
add
and
push
jns
out
aam
stos
adc
push
fsubr
jl
adc
mov
cmp
mov
inc
add
mov
push
jo
cmp
lods
pop
mov
aam
int3
out
and
inc
ret
and
sbb
xchg
jns
inc
mov
daa
int3
adc
xchg
scas
ja
inc
stos
cwtl
jae
add
out
nop
add
test
mov
sbb
cmp
in
push
dec
lock
push
call
mov
inc
divb
out
lock
jg
les
jmp
mov
mov
fwait
leave
pop
inc
and
and
mov
push
pushf
rorb
jge
cmp
pop
out
inc
scas
sbb
or
sbb
xor
ljmp
mov
insl
cmpsl
lds
adc
test
or
int3
sbb
and
adc
xor
lcall
jb
mov
sahf
aad
adc
repz
outsl
loop
inc
sbb
jle
sub
lret
mov
add
mov
cmp
sti
jle
add
fbld
xchg
pop
fcoml
les
test
jb
or
push
frstor
jmp
dec
into
push
jl
cli
ljmp
jne
imul
mov
lret
mov
addb
jge
rorl
out
bound
push
dec
push
lret
sbb
cmp
outsl
fucomip
xchg
mov
stc
stos
adc
test
clc
sti
xor
adc
dec
fnstsw
jbe
sbb
ds
fnsave
sbb
cmpl
adc
mov
popa
mov
push
sub
add
cmp
adc
lods
aad
aam
repz
mov
cmp
jl
push
mov
adc
aas
imul
xchg
mov
fisttps
andb
cmpsb
outsl
nop
shlb
pop
stos
add
out
lods
dec
imul
mov
testb
fcmovu
inc
stos
cmp
adc
sar
mov
test
cmc
daa
pop
cmpb
add
mov
mov
movsl
pop
ret
sbb
inc
and
fucomi
and
xor
sti
in
cli
push
pushf
inc
lahf
cltd
movsl
adc
mov
add
xchg
jmp
lret
cli
loopne
xor
xchg
or
sub
adc
out
mov
loopne
xchg
add
pop
push
in
mov
mov
iret
fmull
mov
lds
daa
mov
mov
add
mov
aaa
and
ss
jmp
or
into
test
or
rcll
push
jle
lock
sbb
adc
sbb
jecxz
cmp
jge
mov
adc
pushf
dec
adc
lods
lret
repnz
lock
outsb
jo
inc
fcmovu
add
je
inc
mov
pop
inc
jo
sbb
lods
jne
mov
and
mov
sub
dec
inc
adc
jle,pn
dec
leave
out
push
pop
lret
sbb
aam
fdivrl
jmp
mov
icebp
test
jg
push
push
insb
mov
jp
or
xchg
pop
aam
lods
adc
rorl
jns
lahf
repnz
mov
or
lea
pop
or
inc
add
mov
mov
cmc
lock
or
es
mov
out
hlt
push
or
push
mov
dec
xchg
test
cltd
xlat
jge
mov
pop
enter
xchg
sub
inc
adc
mov
xor
stos
cmp
frstor
daa
sub
xor
xchg
subb
or
sub
sbb
add
ret
sbb
mov
jmp
add
and
mov
call
scas
sub
add
jmp
xchg
mov
iret
xchg
out
cld
jecxz
and
or
add
les
mov
mov
ficoml
add
aad
adc
daa
inc
and
add
loop
loope
bound
add
mov
out
mov
ja
adcb
pop
xlat
ja
mov
xchg
adc
dec
cmp
gs
cwtl
pop
cltd
push
add
add
lcall
jle
and
xchg
add
push
sbb
or
cmp
out
sbb
fidivrl
xor
mov
int
adc
mov
and
mov
loop
in
push
push
popa
nop
adc
mov
out
sbb
int3
insb
enter
push
movsb
add
xchg
or
jo
add
inc
jns
cmp
call
pusha
mov
sub
ficoml
lds
mov
cltd
cmp
cld
negb
cmp
fcoms
xchg
das
sti
ret
sub
out
mov
sbb
xchg
cmp
out
stos
repnz
loopne
mov
sti
daa
mov
mov
test
movsb
inc
in
jmp
adc
push
lret
out
add
pop
mov
cmp
xor
jecxz
jp
jno
xchg
and
repz
ret
mov
sub
int3
sbb
add
inc
inc
js
loope
out
pop
pop
call
or
dec
jecxz
xor
insb
pop
xchg
lds
mov
add
jge
cmp
adc
es
jmp
mov
or
mov
cmc
loop
or
ljmp
insb
cld
add
lcall
add
xchg
jns
pop
jns
adc
push
test
cmp
cs
cld
add
shlb
mov
jbe
daa
repz
push
sbb
in
test
adc
ret
cli
sbb
sbb
xor
mov
push
int3
sbb
mov
imul
jae
mov
push
or
pop
xchg
push
loopne
adc
inc
jns
xor
and
mov
mov
sbb
adc
stc
stos
xchg
adcl
add
push
add
cld
jl
stos
dec
aas
mov
or
rcl
sub
mov
sbb
mov
xor
enter
jp
dec
sti
xchg
cmp
jp
shrl
adc
push
pop
xchg
in
jae
lods
cmp
js
rolb
daa
scas
push
xchg
jmp
mov
push
and
out
jmp
dec
loop
add
into
mov
and
jl
decl
jbe
mov
adc
cmp
pop
sbb
mov
ret
and
cltd
pop
jno
fidivrs
push
ljmp
push
loopne
lds
and
movsb
fidivrs
adc
adc
outsl
push
lock
xchg
fucomip
shl
add
pop
jmp
mov
add
cmp
aaa
sti
xlat
push
sub
nop
pop
xor
andb
popa
adc
push
sbb
loop
cmp
push
add
dec
mov
int3
pop
dec
mov
iret
sbb
out
test
ret
xchg
ja
out
fucomip
jp
dec
sub
std
fmull
sti
mov
add
mov
pop
std
adc
push
int3
or
fdivl
inc
xchg
test
aaa
repnz
add
adc
out
das
xor
adc
cmpb
clc
inc
mov
pop
sbb
add
mov
in
ret
stos
adc
scas
mov
xchg
cs
lcall
cmp
mov
mov
gs
push
sub
xlat
jecxz
ret
cltd
in
lcall
mov
xchg
mov
mov
inc
xor
and
lock
add
inc
jl
and
inc
mov
out
cmp
scas
pop
fldenv
mov
fcoms
lret
cltd
outsb
cmpsl
jg
aad
mov
and
add
push
pinsrw
fmull
mov
dec
push
cltd
push
ret
addr16
dec
ss
dec
and
fsubrl
popf
xchg
jl
mov
adc
cmpsl
mov
ret
aam
dec
jl,pt
cltd
out
sub
nop
pusha
fnstcw
sub
mov
jb
jns
test
int3
sbb
cltd
test
push
jle
shll
iret
mov
dec
or
add
daa
mov
and
xlat
into
xor
fidivrs
mov
rcll
sti
jge
orb
jl
lods
mov
mov
adc
inc
mov
stos
sbb
aad
pop
pop
fs
loop
loop
dec
jns
sarl
sti
cmp
fadd
xchg
mov
pop
lcall
xchg
mov
mov
js
mov
mov
divb
movsl
repnz
std
lods
mov
add
adc
fisttps
insb
mov
in
ficomps
outsb
std
mov
gs
dec
subl
fisttps
inc
stos
add
mov
push
fidivl
aad
adc
jb
xchg
or
imul
movsb
test
and
repnz
int3
inc
add
ficoms
scas
dec
out
dec
ja
and
mov
push
test
cli
jecxz
jb
bound
add
sub
xlat
lcall
push
jnp
mov
inc
outsb
cltd
pushf
inc
push
lcall
int3
jns
xchg
fdivl
pop
xlat
fadds
push
clc
scas
fisttps
pop
ss
sbb
push
scas
pop
std
or
bswap
add
dec
shll
stos
add
mov
and
ds
pop
loop
push
adcl
das
adc
push
and
cli
mov
push
cmp
and
sub
mov
icebp
cmp
push
mov
shll
jg
sbb
push
mov
imul
repz
mov
out
push
inc
adcb
xor
jecxz
push
and
xchg
movsl
or
adc
jne
out
out
lods
or
icebp
stos
sub
and
testl
sbb
std
dec
or
inc
pop
pop
sub
out
cmpsb
out
add
stc
gs
jb
les
ljmp
arpl
xchg
lods
mov
sub
push
es
pushf
test
lods
pop
xchg
mov
pop
cmp
inc
in
push
or
push
lret
xchg
sub
and
test
test
dec
adc
or
mov
jb
and
adc
inc
mov
or
and
scas
out
iret
mov
mov
push
daa
inc
in
mov
pushf
test
jl
or
mov
ljmp
sbb
test
cmc
lods
xor
push
sti
popa
jg
cmp
or
fldt
imul
dec
pushf
cld
lods
adc
movq
xlat
cmpsl
or
fsubrl
mov
daa
insl
adc
lods
cmp
or
pop
scas
sbb
push
sub
xorb
repnz
xchg
mov
sbb
push
inc
das
ljmp
pop
cltd
adc
or
rolb
push
lahf
jo
xchg
or
mov
ja
subb
or
in
aaa
in
sub
addb
rcl
mov
out
call
inc
or
rorl
jge
jns
setns
in
clc
jmp
push
popf
mov
sub
sub
pop
subb
orb
sbb
nop
add
cld
or
or
sub
fcoml
lock
insl
lahf
jae
fimuls
mov
jg
outsl
sub
jmp
aaa
or
cmc
imul
sub
xlat
xchg
imul
imul
dec
jmp
pop
out
inc
inc
daa
jbe
push
and
rorb
cmp
adc
mov
sbb
dec
cwtl
or
test
sub
jle
jge
push
xchg
scas
mov
and
out
aas
pop
jae
in
push
adc
fld
lods
xchg
lea
cld
sti
or
push
gs
sbb
or
les
test
ror
and
inc
cs
sbb
mov
call
sub
xor
loopne
and
and
and
arpl
int3
bound
shr
ret
xchg
mov
stos
pop
fadds
xchg
or
fcomps
xchg
mov
mov
pop
mov
in
pop
aad
rcrb
shrl
cmp
bound
adc
fcoml
inc
jnp
adc
xor
adc
ljmp
pop
pop
pop
aas
int3
mov
sbb
mov
stc
fimull
cmp
or
popa
and
outsb
sbb
inc
cli
mov
in
dec
sbb
xor
sbb
xor
movsb
sbb
fisubrl
gs
adc
mov
sbbl
mov
or
lea
lods
aas
mov
fbstp
gs
adc
repz
push
add
or
push
and
ret
or
clc
add
std
xor
xchg
js
and
or
movsb
mov
in
popf
jmp
or
aaa
sbb
in
fs
or
mov
cmpsl
adc
sub
push
mov
mov
sub
sbb
mov
js
sbb
or
mov
push
xchg
enter
xor
or
mov
and
mov
fistps
aam
inc
or
icebp
adc
rorl
movsb
roll
lods
pusha
push
xor
lcall
or
sub
or
aam
bound
jle
or
jno
add
lods
aad
sahf
cmpsl
test
sbb
cmp
rolb
jns
sub
popf
out
lahf
in
pop
iret
add
sbb
mov
mov
pop
aad
mov
add
outsl
dec
movups
xchg
es
lea
or
or
jmp
sub
imul
loopne
pop
ss
pop
or
dec
ds
xchg
sub
fcompl
imul
or
push
cmp
pop
inc
or
pop
fxch
std
cmp
inc
xor
adc
scas
scas
or
dec
clc
jne
push
sbb
in
mov
push
and
cmpsb
or
mov
pop
cmp
lock
sbb
cmpsb
pop
or
aas
adc
push
push
pop
xor
mov
pop
loopne
jo
inc
ss
or
pop
int3
in
or
xchg
subb
cmc
sti
jne
jecxz
iret
fwait
mov
fldt
test
jne
push
xchg
stc
jp
pop
pop
idivl
jl
js
les
and
or
lea
pop
in
add
rol
mov
adc
addb
dec
mov
test
xchg
xchg
sbb
enter
in
in
jmp
jmp
lahf
das
sub
insl
std
lret
sub
and
sbb
sub
push
inc
xchg
lea
mov
add
mov
adc
pop
adc
or
dec
mov
cld
lods
cmc
ret
lods
negb
dec
das
or
fcmovne
out
insb
sub
repz
into
mov
jne
add
or
iret
cmc
in
fwait
sub
add
lret
repnz
lea
int
lods
lods
sbb
push
xchg
push
pop
inc
adcl
or
fs
and
in
or
mov
mov
mov
rorb
jns
or
shrl
and
mov
or
mov
or
adcl
xchg
inc
pushf
jns
xchg
aam
shrb
lcall
xor
sbb
call
dec
or
outsl
popf
mov
or
inc
pushf
scas
in
mov
xchg
or
std
out
jb
mov
xchg
xchg
adcl
push
loopne
jae
mov
cmp
repnz
fsubrp
cmc
outsl
jne
mov
inc
xchg
or
pop
shrb
sbb
cmp
fnstsw
movsl
lods
mov
jns
out
xlat
stos
dec
cmp
fcomp
call
dec
fsts
mov
jl
sub
sbb
ljmp
or
je
adc
clc
cs
xchg
push
repnz
mov
add
iret
dec
push
sub
add
jge
jae
or
sub
insl
sub
dec
inc
pop
repnz
adc
pop
jecxz
imul
mov
push
dec
rcll
pop
mov
xor
or
ret
imul
andb
imul
in
mov
test
pop
insl
clc
or
xor
push
mov
lahf
xchg
pop
xchg
fisttps
mov
shr
jnp
lods
sub
mov
ja
cmp
pusha
pop
loopne
dec
xchg
in
cmp
enter
or
jp
jne
stos
sub
mov
or
pop
lret
push
or
daa
aaa
int3
lock
push
add
das
fcmovnb
dec
mov
mulb
push
mov
bound
jmp
pop
push
je
mov
dec
adc
ret
dec
xor
xchg
xchg
pop
iret
mov
sub
ficoml
xor
jl
mov
dec
cltd
jmp
rolb
pop
pop
fdivrl
rclb
xchg
rorl
shrb
int
mov
mov
stos
adc
jecxz
add
cmp
dec
xor
push
mov
or
pop
addr16
scas
subl
push
adc
mov
sub
loope
and
jmp
scas
daa
ja
insb
cltd
adc
stos
cld
bound
mov
adcb
nop
jg
addr16
fistpl
insb
adc
push
ljmp
jge
fiaddl
xor
sub
inc
movsl
add
test
mov
pushf
outsb
out
sarb
xchg
cmpsb
stos
xchg
pop
xor
xchg
pop
mov
dec
jne
add
scas
inc
xor
std
out
push
lcall
iret
aas
lock
lea
mov
popa
popf
jecxz
mov
bnd
add
push
das
movsl
push
fs
xlat
fmuls
and
mov
xchg
imul
js
xchg
cmp
sti
fbstp
mov
pop
out
and
fstl
lods
mov
repnz
cld
les
mov
inc
cmpsl
push
arpl
pop
mov
sub
push
sbb
add
andb
add
jp
aaa
mov
pop
adc
outsb
push
out
pop
inc
xchg
adc
rcl
sbb
imul
arpl
pop
mov
fisubs
and
shlb
add
loope
stos
popl
testl
repz
inc
pop
dec
mulb
jmp
aaa
push
out
sbb
cmpb
cs
jno
mov
pop
stos
in
ret
xchg
lock
dec
pop
jns
leave
xchg
test
in
pusha
vprotd
lods
push
mov
adc
repz
sbb
mov
or
aad
add
rorb
cltd
push
or
add
inc
addr16
jno
xchg
je
sbb
dec
call
push
and
js
ljmp
ret
dec
push
push
sbb
bound
inc
stos
mov
dec
daa
cmp
push
push
jnp
lret
sahf
mov
push
adc
ret
test
fnstcw
out
sub
aam
sbb
out
cmpsb
dec
rcll
adc
add
jle
add
mov
push
adc
add
inc
fstl
icebp
icebp
push
out
ret
sbb
stc
mov
and
js
andl
int
insb
pop
push
xchg
jl
in
clc
and
mov
push
or
in
iret
adc
movsl
add
out
ss
insl
jns
mov
xchg
cmp
mov
sbbl
sub
mov
mov
mov
mov
or
sbb
mov
mov
in
in
pop
jno
lds
adc
xchg
lock
xor
jbe
adc
mov
sbb
add
inc
pushf
ret
arpl
mov
test
es
inc
xchg
jae
pop
in
into
pop
lahf
add
mov
sbb
lretw
adc
fisubl
jns,pn
add
lods
xchg
cs
pop
mov
dec
push
cwtl
repnz
jae
sbb
pop
leave
and
jecxz
xor
mov
sub
sbb
dec
ja
ret
stos
xor
sarl
xor
dec
jnp
cmp
mov
sbb
outsb
xor
pop
xor
mov
sbb
cmp
xor
add
int3
pop
add
xor
sbb
and
out
ss
cmp
push
adc
mov
mov
shlb
adc
or
adc
xor
xchg
add
jbe
inc
test
out
cmp
loop
cmpsl
outsl
movsb
push
xor
push
push
popa
insl
adc
cmp
sbb
mov
cmp
add
sbb
dec
lcall
sahf
push
in
sbb
mov
or
test
sub
add
test
lds
mov
shll
and
les
mov
ret
movsl
stos
add
inc
dec
lods
inc
jecxz
adc
mov
clc
movsl
clc
jp
mov
int3
movsl
xchg
xor
stos
mov
rcrb
fsubrs
dec
mov
in
inc
jns
imul
testl
enter
sub
lret
push
push
cmp
xor
or
adc
leave
add
in
inc
cmp
pmuludq
sti
aas
fstpt
jbe
call
adcl
aas
mov
rorl
push
pop
add
dec
mov
lds
ret
out
aaa
adc
pop
lret
and
cmp
or
cmove
jle
adc
or
aas
cs
lahf
mov
out
in
lods
int
ljmp
add
sbb
xlat
fsub
ret
or
and
xchg
adc
mov
and
popa
and
stos
insb
out
or
aaa
cwtl
xchg
adc
xchg
pusha
nop
adc
das
mov
sbb
sbb
sbb
loope
out
andl
out
mov
scas
jne
mov
jl
jmp
in
fadds
sub
rcll
mov
push
daa
mov
mov
dec
cmp
jbe
inc
enter
sub
xorb
fisubrl
outsl
mov
and
jmp
jmp
mov
jno
inc
or
push
push
xor
add
push
sub
gs
dec
xchg
or
cli
dec
adc
fiaddl
stos
sbb
in
hlt
cmp
inc
cltd
mov
in
adc
jnp
nop
xchg
pop
mov
dec
adc
mov
push
repnz
hlt
inc
enter
adc
jmp
cli
xchg
push
movsl
jle
xchg
pop
int
loope
sub
in
or
mov
leave
insl
sub
and
out
lds
adc
fdivrs
lods
push
xchg
mov
xor
je
push
sub
sub
cmp
sbb
pushf
fdivp
dec
mov
pop
ret
js
movq
cwtl
mov
xchg
in
ret
mov
bound
daa
fwait
cli
jb
or
in
stc
rcrb
rcll
iret
cli
adc
or
pop
inc
add
pop
push
jne
in
xchg
sbbl
sar
sub
in
or
shlb
add
addr16
push
add
and
lock
cmp
pop
xor
ret
or
dec
mov
inc
add
test
sbb
sub
dec
or
fsubs
lods
int
inc
mov
fcmove
or
pushf
xor
in
fistps
dec
mov
xchg
repnz
adc
stos
dec
sub
add
int
or
jnp
in
lods
and
push
cmp
sub
ret
and
mov
ret
sbb
pop
inc
or
fadds
xchg
test
add
out
movsb
rcll
dec
pop
aam
jmp
fadds
fcoml
mov
mov
adc
int3
aas
ja
mov
movsl
iret
fnsave
jle
repz
cmp
fdivs
mov
daa
add
int3
stos
pop
or
cmp
lds
test
hlt
ds
sub
out
pusha
sub
into
addr16
sti
xor
lahf
pop
movsb
lock
push
int3
add
jle
mov
mov
cmp
incl
sbbb
aad
mov
push
xchg
pushf
add
push
aad
mov
xor
stc
lret
add
dec
fs
mov
out
add
lods
in
aas
dec
clc
lods
jns
push
inc
negb
lahf
mov
push
or
in
jnp
jo
mov
daa
adc
lods
jne
lods
cmpsl
jmp
push
mov
jle
daa
int3
inc
fsubr
cltd
jge
in
iret
add
sbb
adc
push
imul
or
mov
dec
mov
out
xor
push
pop
sti
inc
pop
cs
dec
add
or
adc
sbb
aas
mov
insb
repnz
in
or
pop
aas
pop
insb
fstpt
dec
or
add
push
mov
in
pop
daa
add
sti
sbb
out
dec
or
add
add
add
cli
sbb
push
sub
jb
push
pop
push
lret
out
test
sub
in
out
clc
pop
and
ret
sbb
adc
push
sti
jae
xchg
mov
cmpsl
add
cmp
add
arpl
inc
nop
mov
xchg
sbb
enter
fwait
sub
lods
data16
lods
sbb
sub
push
lods
adc
cmp
mov
and
cwtl
cs
sub
dec
adc
ljmp
ret
cmp
and
repnz
ds
jle
icebp
aaa
popa
lret
fmuls
cmp
repnz
mov
xor
jno
es
testb
add
dec
jae
mov
stos
cld
sbbl
daa
vcvtdq2pd
ja
and
out
mov
dec
cld
adc
notb
push
jae
pop
pop
fs
hlt
aam
iret
in
lea
es
pop
aaa
fistl
cmp
pop
jne
add
je
out
dec
pop
sti
in
imul
pop
mov
outsb
out
pop
subl
sbb
fstl
sti
jnp
loope
jno
shlb
cltd
add
jmp
aas
loop
negl
add
inc
je
mov
sbb
jne
mov
or
les
or
jp
fwait
mov
push
and
xchg
push
sub
sti
js
imul
adc
stc
enter
sub
hlt
push
test
dec
pop
xor
adcl
cli
cld
in
imul
bnd
xor
stos
out
push
movsb
nop
js
cld
les
addr16
adc
out
mov
add
out
or
jne
lods
ds
pusha
dec
mov
shlb
out
jb
cmp
mov
lret
clc
dec
add
stc
mov
inc
jle
mov
int
push
sbb
imul
or
cmovle
cmpsl
daa
aam
in
in
stos
or
je
mov
sub
adc
fsubrp
outsl
push
bound
lods
addr16
icebp
cltd
insl
sub
outsb
in
sub
lods
dec
push
cli
insb
daa
add
xor
mov
inc
jp
and
adc
mov
mov
add
sbb
dec
jmp
imul
xorb
or
int3
cs
in
in
test
add
lcall
mov
mov
daa
mov
dec
mov
push
stos
cmp
daa
popf
popa
adc
test
gs
outsb
add
add
aas
pop
pop
mov
and
dec
sbb
or
xchg
add
sti
pop
scas
push
arpl
mov
imul
xor
inc
imul
rcrl
or
fstpl
sub
adc
xchg
addr16
jge
or
push
add
or
add
stc
dec
fisubs
pushf
dec
aaa
es
sbbl
fsubs
imul
in
orl
lods
adc
aad
movl
leave
mov
loop
test
fisubrl
sbb
push
repnz
fdivr
or
lret
outsl
out
and
lret
out
inc
adc
jmp
mov
shll
pusha
getsec
push
xchg
inc
imul
add
loope
sti
in
outsl
inc
mov
sbb
inc
iret
adc
ja
insb
pusha
adc
bound
adc
aaa
xchg
aaa
dec
pop
fmull
adc
adc
daa
sbb
mov
sub
movsb
lea
test
pop
cwtl
sub
adc
adc
sbb
pop
cmc
out
pop
test
add
xchg
mov
jle
in
stc
sbb
pushl
sti
add
cmc
mov
add
push
inc
addr16
inc
jg
into
lret
sbb
or
lret
mov
in
add
rcll
cwtl
lahf
out
inc
fdivr
dec
or
jle
rorb
mov
xchg
mov
lret
dec
fwait
or
int3
pop
inc
andnps
mov
mov
imul
mov
push
lret
div
xor
icebp
aam
push
sub
mov
sti
or
dec
push
or
out
or
popa
iret
xchg
scas
adc
push
jnp
out
and
push
sbb
mov
or
stos
or
and
stos
in
pop
test
inc
xor
in
push
jo
xchg
cmp
in
repnz
pop
sub
adc
push
sbb
sahf
scas
cmp
int3
cmpb
jmp
int
sub
loop
adc
sbb
test
pop
rorb
xchg
pusha
stos
cmp
mov
mov
bound
fwait
adc
cwtl
inc
xchg
mov
add
cmp
xchg
pop
and
scas
or
out
adc
int3
ret
add
lods
pushf
dec
sub
mov
decl
mov
sbb
add
pop
xchg
push
in
push
mov
push
adc
cmp
and
lods
inc
cmp
aad
shrl
pop
nop
or
jne
cmp
out
cmp
ljmp
or
jmp
ds
adc
pop
scas
sbb
psubd
jmp
adc
cwtl
stc
cld
int3
jmp
daa
out
pop
inc
scas
sahf
jecxz
mov
adcb
cli
inc
js
push
pop
lahf
cmpsb
lcall
insl
sbb
adc
push
scas
and
pop
or
push
mov
out
maxps
jmp
icebp
mov
nop
addr16
dec
inc
jg
jo
inc
add
outsl
fisubrl
and
lret
adc
mov
out
push
dec
out
mov
in
test
aad
decl
jns
std
sbb
into
mov
dec
adc
clc
mov
and
adc
mov
mov
xchg
add
push
adc
or
cld
add
mov
xchg
sbb
stos
sbb
inc
repz
insl
inc
mov
inc
add
lock
adcl
int
out
or
in
inc
xor
xlat
outsl
lahf
lcall
inc
mov
cwtl
or
sub
sbb
cmp
stos
sub
sub
repz
mul
push
cmp
aaa
jmp
jmp
push
push
icebp
loope
pushf
xchg
xor
loopne
or
mov
imul
pop
add
mov
cs
sub
jns
or
aad
dec
test
gs
and
mov
sub
lret
and
xchg
sbb
mov
cmpsb
into
into
outsb
xor
pop
mov
or
mov
sbb
adc
out
enter
pushf
fnstcw
xor
aam
inc
out
stc
cmp
int
cmc
fisubrs
in
int
mov
lahf
dec
cmp
loope
pushl
push
out
imul
test
icebp
adc
aaa
xchg
sub
enter
cs
cmp
and
int3
inc
enter
push
gs
les
add
stos
ja
xchg
insb
push
and
sbb
sub
fdivrs
lret
adc
inc
xchg
lret
outsb
jl
bound
std
daa
insl
fwait
or
cli
test
loop
sub
pop
dec
xchg
and
clc
lahf
dec
pusha
stos
out
push
jmp
ret
xchg
xor
adc
testb
insb
cmp
pop
pop
out
mov
xchg
jl
test
leave
int
or
jbe
push
loopne
push
int3
sbb
inc
cmp
xor
mov
insb
add
mov
xchg
scas
push
test
shll
pop
sbb
xchg
xchg
mov
out
dec
mov
ja
lods
fcoms
cmp
and
mov
lcall
test
add
je
xchg
mov
inc
roll
add
insb
hlt
adc
sahf
adc
out
cmpsl
shlb
jnp
int
and
sbb
add
mov
lret
mov
dec
fisttpl
cmp
rolb
mov
out
rcll
inc
dec
insb
add
fldenv
jns
pop
scas
cmpsl
cmp
jl
insl
repz
vmovupd
aam
sub
or
pop
out
nop
push
xor
xlat
repz
sbb
sbb
iret
sti
call
outsl
pop
xchg
mov
push
imul
insl
orb
dec
mov
dec
jle
stos
stos
lea
daa
xchg
in
push
add
inc
or
mov
pop
jns
lods
mov
lret
in
mov
fdivrl
in
xchg
mov
cmc
fistl
and
mov
or
pop
pop
leave
ret
mov
ret
or
push
lods
dec
mov
aaa
mov
add
xchg
xlat
iret
jnp
mov
pop
cmp
sbb
jmp
jp
jns
push
loopne
push
jg
int3
add
inc
push
cs
aam
int3
inc
adc
cmp
mov
xor
push
add
xor
stos
mov
pop
cltd
ret
jecxz
or
inc
or
imul
inc
scas
add
aad
push
pop
mov
cmp
adc
ret
in
scas
jae
int
jns
in
cwtl
sahf
mov
and
rorb
push
mov
push
push
inc
xchg
lock
test
loop
dec
sarb
pop
data16
lahf
mov
xchg
pop
mov
imul
test
in
movsb
rcrb
andb
pop
adc
subb
mov
adc
cmp
or
sub
mov
and
add
loop
loopne
int3
jb
push
push
js
jp
add
fiadds
sub
rolb
les
iret
lcall
adc
inc
ds
scas
hlt
fiadds
loop
push
shlb
jp
dec
sbb
nop
int3
loope
xchg
xor
sahf
pop
or
mov
dec
clc
ret
push
negb
sbb
jns
gs
dec
adc
jp
sub
out
int3
in
cltd
lahf
in
inc
xchg
movsb
jb
or
out
push
add
movsl
repnz
xlat
in
and
mov
sub
adc
push
stos
fcoml
hlt
jno
and
jo
xchg
pushf
xor
fsubrl
or
je
ficompl
ret
popa
jae
mov
mov
mov
outsl
sbb
and
xor
mov
in
push
iret
cld
sahf
test
xchg
dec
pop
add
aam
jno
jo
add
jnp
sarl
mov
lea
inc
es
mov
out
sbb
stos
xchg
adc
out
jo
add
sbb
loop
in
int3
int3
cmpl
mov
jo
or
mov
push
nop
jnp
int3
pusha
fcmovnu
outsb
push
mov
or
pop
inc
int3
sub
push
jmp
jbe
sub
push
jecxz
and
in
adc
push
xchg
jne
sub
inc
mov
sbb
out
mov
push
adc
sub
enter
lock
mov
xor
aaa
add
fsubrs
push
smsw
bound
ret
add
add
add
sbb
xor
ficompl
stos
js
mov
add
fildll
add
push
clc
icebp
push
jbe
lds
sub
xchg
pop
xor
filds
pop
sahf
mov
push
fidivrl
and
mov
adc
and
and
test
fcomps
cmp
add
add
pusha
inc
push
or
add
repz
dec
xor
mov
inc
int3
repnz
dec
mov
xchg
add
lret
mov
adc
call
popa
fisubrl
fucomip
imul
dec
pop
push
pop
pop
fmull
aas
sti
mov
repnz
sbb
mov
dec
xor
sub
out
adc
mov
fcmovb
dec
out
subl
dec
dec
jbe
movsb
adc
lret
mov
in
adc
in
sbb
fiaddl
scas
mov
aas
repz
adc
push
lret
pop
cs
ret
bnd
andb
popf
or
test
xchg
jae
mov
xchg
xchg
xchg
in
out
dec
idivl
jmp
inc
pop
pop
mov
lret
sub
jl
jno
xchg
int3
scas
jns
add
xor
xchg
xchg
vmovupd
jmp
push
cmp
inc
in
jae
es
int3
sbb
or
loope
add
mov
int
mov
inc
sti
sbb
mov
and
xor
xchg
aas
ss
rcrb
jp
mov
dec
sbb
nop
push
sub
jp
insb
fcoml
out
mov
jge
and
mov
data16
mov
mov
stos
mov
dec
push
sub
adc
pop
dec
in
add
ljmp
fidivl
and
out
loop
xchg
cmp
lcall
jg
lret
sub
daa
test
and
adc
addb
mov
jle
add
adcb
mov
add
int3
jmp
outsl
out
icebp
or
inc
pop
cltd
mov
xchg
add
xor
dec
mov
jge
hlt
sbb
mov
jmp
test
jle
sbb
subl
xor
add
gs
inc
roll
mov
popf
lds
es
mov
addr16
cmp
rcll
fxch
ds
int3
dec
out
adc
lods
and
sbb
inc
mov
sub
mov
ret
pop
mov
cmp
sbb
jb
mov
adc
ljmp
jbe
mov
inc
dec
insl
leave
cmpsb
xchg
mov
pop
xchg
pop
ror
cmp
pop
sub
shll
or
pop
add
adc
xor
lods
cs
add
lret
lods
int3
pop
xor
sub
add
shlb
inc
int
fadds
sub
ss
xchg
mov
and
shll
pop
andl
mov
movl
add
jmp
mov
idivl
push
or
mov
sti
sbb
and
adc
mov
mov
stos
or
mov
sbb
pop
or
mov
movsl
loopne
or
aam
xchg
xchg
jnp
iret
sti
jle
mov
or
mov
fnstcw
and
loop
jo
push
push
sbb
aad
stos
ficoml
pop
mov
xchg
lret
xchg
and
cmp
adc
mov
aaa
daa
and
loop
loope
cmp
add
push
and
lahf
or
stos
jmp
je
ret
stos
mov
jb
pop
or
test
shrl
test
daa
stc
sbbb
add
lock
jmp
or
out
pop
push
fdivl
sarb
jmp
das
fistl
push
xchg
movsb
push
ret
inc
lret
dec
lds
add
pop
sbb
cltd
cmpb
insb
mov
and
push
xchg
xor
push
push
adc
or
adc
adc
dec
or
repnz
jecxz
out
rolb
fildl
cmp
add
xor
lahf
rcr
ficompl
cli
add
xor
fwait
notb
add
into
sar
ss
mov
cwtl
xchg
sub
xchg
das
push
fmul
into
rol
dec
movsb
lahf
adc
ret
loop
jns
fstl
cwtl
loop
xlat
mov
insb
jp
rorb
or
sbb
fimuls
add
jno
sub
add
lds
mov
push
test
aad
xchg
pop
in
les
repz
push
push
jbe
fidivrl
int
out
mov
push
cltd
push
aam
pushf
shr
out
in
int3
fidivrs
sbb
jmp
ja
mov
cld
adc
cmpsb
add
add
jecxz
or
movntq
out
lea
in
xchg
in
cli
and
aam
cmpb
mov
mov
and
mov
jnp
out
dec
inc
pop
pop
sbb
sub
mov
add
pop
pop
pop
int
mov
or
sbbl
mov
sub
add
xchg
mov
test
or
xchg
int
cmc
out
insb
pushf
xchg
jns
lahf
in
mov
pop
popf
in
in
pop
sub
lds
ret
pop
mov
jo
int3
adc
dec
xchg
cmp
xchg
or
pop
dec
add
je
mov
adc
push
sarb
lods
sarb
push
cmpb
test
push
mov
fldenv
jp
cmp
dec
adc
cmp
cmp
xor
sbb
or
stos
and
in
sub
sbb
mov
and
int3
dec
xchg
push
mov
ljmp
insl
addb
ss
xor
icebp
xor
test
sub
negl
cltd
pop
push
rcrl
call
pusha
loope
sahf
push
out
and
dec
adc
sbb
mov
sbb
mov
inc
adc
lea
stos
add
or
pop
lret
xor
popa
jg
sbb
inc
cltd
outsl
pop
mov
fs
sbb
jle
pop
mov
jb
push
adc
mov
shlb
out
cltd
repz
fs
mov
stos
int3
mov
cli
cmp
xchg
ret
shrb
or
pop
jnp
in
jno
jae
ds
outsl
inc
adc
inc
xlat
sbb
mov
movsb
cld
jns
dec
in
adc
sub
and
and
nop
mov
mov
mov
or
cwtl
mov
jmp
stos
shl
push
fmuls
sub
xchg
jbe
mov
push
inc
sti
inc
nop
pop
cmp
xchg
int3
int
fsts
in
cs
aas
or
ds
test
lods
xchg
cld
sub
dec
ja
sub
lods
sub
lahf
sub
stos
hlt
and
movsl
mov
lret
stos
lcall
xchg
inc
lcall
pop
cmp
add
xchg
shrb
jns
push
int3
sbb
dec
inc
mov
dec
sarb
mov
and
xchg
sub
test
outsb
mov
insl
mov
jle
xor
test
jae
aam
addb
cs
fs
cmp
dec
pop
jnp
sub
cmp
and
test
push
xchg
xor
dec
add
jecxz
adc
sbb
rorb
insl
test
or
pop
xor
adc
shlb
xor
addr16
insl
fcmovnb
mov
sti
mov
std
sahf
mov
in
jb
push
mov
cmpsb
loopne
or
stos
mov
lock
add
stos
and
cli
test
push
ja
or
icebp
sbb
mov
stos
stos
push
jnp
in
dec
repz
xor
testb
out
or
inc
adc
fisubrs
enter
lea
sub
sub
jbe
ljmp
cli
cmp
mov
push
sub
fiaddl
test
test
mov
insb
jns
adc
sub
out
add
and
ds
cmp
push
mov
aad
cmpb
pop
xor
adcb
xchg
mov
and
or
add
xchg
add
xor
enter
enter
stos
inc
je
or
adc
ja
add
adc
lods
cmp
sbb
push
inc
sarb
out
andb
dec
or
pop
out
jne
cmpsl
jmp
mov
pop
and
mov
dec
das
sbb
ja
js
add
dec
add
insb
subl
mov
mov
inc
adc
lds
in
adc
cmp
mov
mov
fldt
push
daa
mov
xor
iret
ljmp
test
inc
bswap
pop
sub
ds
inc
lock
icebp
mov
cld
xchg
adc
arpl
pop
pusha
lahf
out
jp
into
push
sub
repnz
movsl
pop
outsl
xchg
jge
rcll
add
add
iret
pop
addr16
fmul
shl
xchg
dec
mov
ret
xor
fs
gs
loope
inc
xor
cltd
sti
call
adc
mov
in
test
inc
mov
stos
add
movb
leave
xchg
movsb
and
xchg
rcll
shl
pmullw
cltd
ficoml
and
cmpsb
mov
out
mov
aaa
cmp
add
dec
xchg
xchg
test
add
jae
xchg
adc
sub
imul
xchg
dec
mov
pop
imul
dec
or
pop
aam
bound
jae
bound
xlat
mov
sub
stos
ficoms
sub
icebp
arpl
xchg
or
jp
cwtl
mov
repnz
mull
mov
pop
mov
jae
repnz
cmp
jo
outsl
and
cmpsl
stc
mov
sahf
xor
mov
push
mov
mov
add
data16
adc
xchg
daa
mov
cs
push
xor
stc
int3
outsl
dec
xchg
div
xlat
icebp
sbb
add
out
dec
add
xchg
jmp
inc
loop
jmp
inc
xor
stos
out
xchg
inc
negl
out
inc
mov
aam
pop
pop
inc
int
les
pop
leave
fistl
js,pn
dec
ja
xchg
leave
xor
les
sbb
mov
or
mov
push
adc
je
mov
cwtl
push
int
in
jbe
adc
test
jmp
adcb
into
lods
jp
mov
adcb
xchg
sub
add
ret
das
insl
and
pusha
aam
or
mov
jno
shlb
fwait
lcall
or
push
xor
int
push
out
daa
andb
xchg
sti
or
push
xchg
loopne
in
mov
stos
ret
xor
dec
mov
jne
pop
fcmovne
arpl
addl
xchg
sub
or
lock
ret
movsl
add
inc
loop
fiadds
rclb
xlat
fs
ja
shrl
adc
out
stc
adc
lret
dec
dec
add
pop
adc
mov
mov
inc
iret
xchg
add
arpl
addl
lods
aam
scas
cs
xor
xor
add
repnz
test
jmp
out
add
mov
loope
mov
sbb
xor
cmp
or
in
and
adc
out
lock
lock
loopne
mov
pop
push
stos
aaa
test
mov
jo
push
mov
and
mov
mov
ja
and
in
mov
xlat
push
lods
adc
fwait
pusha
add
out
outsl
sbb
inc
js
lret
jnp
adc
xor
pop
push
xlat
aas
cmpsl
xor
loope
insb
and
mov
out
pop
dec
out
xchg
data16
add
rclb
gs
sbb
adc
mov
mov
loop
and
xchg
sub
repnz
mov
push
mov
lods
aad
clc
mov
adc
xchg
sbb
cmp
sbb
xchg
icebp
add
jns
hlt
inc
add
jmp
outsb
pop
in
mov
adc
fwait
cwtl
inc
aam
xchg
adc
pop
jae
into
gs
sbb
mov
hlt
mov
jnp
cld
pop
sbb
sbbb
lds
movb
jmp
and
mov
mov
lret
mov
xchg
mov
sub
and
jge
fldcw
push
push
dec
push
dec
or
stc
xchg
call
arpl
js
push
jge
ret
mov
pop
outsl
rcr
insb
add
sbb
lods
mov
sti
xorb
sub
int
ljmp
imul
mov
add
sbb
jl
dec
jl
jge
dec
aam
xor
fadd
daa
cld
adc
and
xor
popf
jnp
push
inc
into
ret
mov
or
sub
xchg
mov
add
adc
mov
jnp
inc
lret
gs
mov
shrb
fmul
cltd
sub
js
push
fisubs
sub
xchg
out
push
jmp
js
sbb
dec
mov
or
icebp
xor
cvtps2pi
cltd
pop
out
dec
jno
out
lds
adc
xor
xrelease
jbe
adc
cmp
std
push
mov
leave
jl
ret
mov
jecxz
or
mov
popf
lods
mov
addb
adc
push
inc
sub
pushl
xor
daa
pop
adcb
pop
insl
ds
push
or
cmc
test
popf
xchg
add
scas
sub
ds
cld
jge
adc
adcb
lods
cmpsl
sti
mov
ss
or
enter
cmp
sbb
adc
or
js
jl
popa
stc
pop
or
push
movsb
les
stos
push
dec
pop
in
jmp
es
jb
xor
call
push
lods
mov
repnz
fmull
enter
cmpsb
or
ss
sar
mov
push
fbstp
jae
pop
xchg
xchg
pop
insb
dec
lret
fs
pop
lcall
jge
jp
mov
insb
jmp
and
sub
sub
add
push
and
sub
in
int
in
into
sub
pop
mov
mov
out
jge
mov
mov
push
insb
bound
mov
adc
inc
js
in
fldt
pop
ficoml
or
xor
add
inc
jg
std
orb
mov
mov
xlat
or
shlb
shlb
pop
add
in
fnstcw
stos
xor
testl
or
fistps
jecxz
xor
add
pop
dec
in
mov
mov
sbbb
enter
jns,pt
repz
mov
pusha
out
aam
dec
mov
mov
icebp
and
push
leave
jecxz
aas
leave
mov
insb
add
mov
out
xor
inc
pop
or
mov
mov
fldt
pop
lret
sbb
shrl
stos
mov
ja
adc
push
adc
dec
jle
add
in
es
push
bound
sbb
out
and
or
xchg
push
lahf
mov
mov
lds
push
stc
jmp
stc
jle
ret
jmp
sub
rcrb
aam
xchg
and
dec
bound
sub
bound
jae
jb
int
ja
mov
aam
or
xchg
insl
add
jecxz,pn
cltd
fcomip
orl
addr16
imul
add
xchg
in
jno
or
xor
std
mov
jge
sub
cwtl
inc
lret
je
scas
cmp
jmp
lret
out
rcrb
sbb
push
xchg
cmpsl
shrl
push
dec
inc
in
jne
rclb
out
imul
mov
pop
mov
test
icebp
push
pop
ljmp
push
fucomi
ss
mov
sbb
scas
loopne
xor
shlb
push
sub
dec
out
dec
lret
mov
repz
cmp
sbb
push
mov
cld
pmaxub
out
icebp
ds
daa
add
pop
xchg
jge
dec
push
push
js
shl
sbb
cmpsl
xchg
test
pop
pop
dec
scas
addl
in
xchg
cli
in
mov
cmp
push
inc
adc
stc
and
insb
xchg
push
pushf
adc
lock
lahf
xchg
push
cmp
or
sbb
xlat
or
ret
push
sbb
xor
adc
jo
lret
out
sub
stos
rolb
insb
or
mov
loope
adc
enter
push
xchg
les
loop
push
fs
out
in
push
out
dec
dec
fs
incb
cmp
push
jnp
in
dec
in
popf
xchg
pushf
je
loope
inc
int3
dec
push
push
leave
int3
inc
packssdw
pop
pop
fistpl
flds
imull
jnp
inc
dec
dec
mov
sub
fstpl
add
repnz
dec
loop
or
sbb
clc
xor
mov
or
mov
fs
sbb
fsubrp
insl
icebp
xorb
addr16
lahf
shlb
cmp
sti
out
in
mov
push
jp
scas
fisttpll
jmp
sub
adc
lods
and
or
jge
es
and
cld
mov
jns
jle
xchg
inc
push
ja
add
xor
xchg
fldenv
sbb
sti
sbb
add
jne
or
ja
push
push
jns
push
pop
orb
adc
in
add
mov
je
and
fstps
add
and
sbb
inc
cmp
mov
push
mov
int3
out
and
popf
add
jne
sub
and
leave
mov
sbb
mov
adc
jecxz
sbb
fimull
lret
loop
dec
loope
lea
in
push
mov
inc
out
paddusw
lea
inc
push
test
sub
andb
and
das
sbb
add
out
sub
out
imul
add
iret
jmp
cwtl
sbb
inc
add
adc
jae
mov
cwtl
in
push
push
cli
cwtl
movsl
add
pop
pop
mov
ss
adc
int3
mov
push
gs
mov
fcomi
fmul
mov
cli
clc
and
and
xchg
mov
test
adc
dec
in
pop
bound
jle
xchg
out
pop
rcrb
jmp
xor
stos
bound
sub
xchg
mov
or
addr16
and
shll
xchg
lahf
dec
xchg
adc
aad
jno
or
and
xorl
pop
mov
or
in
add
sbb
cmc
incl
call
negb
jno
jmp
faddp
test
or
add
or
jmp
xchg
push
out
jecxz
mov
sbb
cmc
insl
adc
test
mov
test
adc
xor
jle
jns
add
mov
xor
adc
sub
dec
dec
sahf
fcompl
push
adc
mov
dec
inc
sbb
push
es
pop
call
cmc
dec
mov
les
outsb
add
jmp
cld
shrb
cmpsb
addb
out
movsb
repnz
jae
cmpsl
jl
push
test
or
pop
cli
subl
xor
in
mov
adc
clc
repnz
xor
inc
gs
push
mov
cmp
add
cmp
sbb
mov
jl
xorb
push
cmpsl
insb
pop
imul
mov
dec
xchg
push
roll
out
add
mov
hlt
aad
ret
sbb
ja
cld
inc
xchg
iret
pop
sahf
das
adc
adc
mov
pop
ret
ret
outsb
hlt
push
je
mov
orl
sar
sub
dec
fdivrl
sbb
stos
seta
mov
adcb
int
cld
inc
out
pop
and
cwtl
rclb
xchg
mov
fimull
addr16
cli
stos
push
leave
xchg
push
push
fimull
das
sbb
pushf
add
out
mov
movsl
or
mov
insb
repz
test
xchg
adc
pushf
jbe
jae
daa
fdivs
mov
nop
add
cmp
sub
push
inc
adc
std
jbe
xchg
fld1
add
in
mov
mov
mov
fldt
pop
dec
cmp
pop
mov
cmovns
insb
lea
inc
adc
adc
mov
insl
into
and
and
adc
lods
add
stc
cmp
mov
sub
add
sbb
bound
add
faddl
xchg
cld
hlt
jmp
das
sub
fldl
jns
mov
daa
lret
test
xor
dec
inc
aad
fists
xchg
lods
add
inc
inc
outsl
mov
and
xchg
add
xchg
jno
test
xchg
xchg
dec
fildl
sti
enter
mov
xchg
mov
dec
dec
adc
jl
ret
jle
and
xor
into
flds
xor
and
add
sbb
aaa
ds
cli
cs
or
vcvtss2sd
aam
mov
xor
sahf
pusha
js
dec
hlt
inc
jp
cld
aas
xchg
out
nop
push
rolb
push
fsubr
mov
jmp
mov
pop
aaa
rorb
nop
inc
fwait
ja
adc
cmp
adc
inc
push
repz
daa
xor
and
xor
stos
loop
sbb
xchg
and
pop
adc
lods
mov
sub
cmp
mov
dec
jl
movsb
aas
xchg
mov
cmpsl
sbb
cmp
mov
mov
adc
inc
idivl
sti
cmp
jbe
andl
or
dec
je
or
adc
sub
js
enter
fs
ret
and
adc
adc
mov
popa
xchg
sti
cmpsb
daa
out
or
test
cwtl
fwait
sub
cs
mov
daa
pop
dec
cmp
mov
aam
cmp
adc
sbb
es
or
loop
mov
dec
mov
out
push
and
shrl
or
pop
pop
orb
stos
lods
lods
mov
cmpl
pop
in
jle
int
bound
ret
mov
sub
repnz
jb
mov
rolb
mov
and
fiaddl
mov
sbb
add
in
add
loope
sub
xor
adcb
lods
jmp
scas
mov
adc
adc
jp
enter
inc
lahf
popa
xlat
adcl
lcall
jp
sbb
ja
popa
add
mov
cltd
jnp
sbb
cpuid
ret
mov
addr16
push
push
mov
lret
addb
mov
inc
push
test
sub
fisubrs
aaa
mov
pop
cmp
hlt
push
loop
mov
dec
cmp
jne
push
hlt
mov
sbb
add
popa
inc
stc
jecxz
out
cli
dec
out
mov
test
shll
clc
aad
lret
in
mov
mov
cmpl
add
es
adc
arpl
xor
aam
push
add
add
mov
inc
pusha
mov
cmpsb
out
cmp
sbb
iret
aad
pop
mov
mov
xor
mov
mov
sbb
out
ret
and
jns
add
and
push
nop
sbb
test
dec
cmp
addr16
fsubp
add
ja
mov
pusha
add
jmp
mov
pop
adc
test
mov
sub
dec
push
sub
in
add
out
scas
cmp
aaa
inc
test
adc
fsubrl
jnp
mov
add
mov
jb
adc
inc
out
inc
rcr
sub
aad
inc
adc
pop
jp
lcall
xchg
test
mov
jns
popa
subb
push
jb
js
data16
dec
and
hlt
scas
aam
movl
lret
push
cs
and
and
cli
xchg
pop
out
sbb
lock
aad
addr16
les
dec
fsubl
push
sti
mov
mov
outsb
and
cmp
xor
ljmp
inc
sar
stc
sub
or
xor
xchg
fs
call
lret
mov
les
out
push
push
popa
sbb
iret
cmp
out
out
adc
push
test
sub
pop
cmc
in
fidivrs
sti
in
outsb
aam
xchg
mov
sbb
loop
dec
mov
scas
mov
cltd
andb
cmp
hlt
inc
cmpsl
sub
or
inc
and
push
imul
ljmp
call
push
sub
pushf
int3
sub
cmp
sbb
jp
jne
push
jmp
sub
adc
stos
push
imul
jno
or
enter
out
xor
enter
into
lret
adc
jno
lods
push
xchg
js
jo
jmp
xchg
mov
sbb
adcl
test
fwait
dec
icebp
add
les
fnstcw
push
cmp
and
bound
call
add
lods
jecxz
rolb
or
xor
jb
fs
mov
and
rcll
xor
cmp
push
je
mov
xchg
in
pop
pop
xchg
nop
push
add
inc
sub
add
or
jae
fbld
in
sar
jns,pt
mov
or
dec
fistps
cmp
int3
jnp
hlt
adc
shll
xorb
int3
sub
pop
mov
fs
pop
pop
aad
sbb
jne
lcall
shll
push
aaa
mov
aas
push
sbb
outsl
jb
fimuls
in
gs
dec
ret
sbb
adcl
out
in
sahf
dec
push
cvtps2pd
cmpl
jmp
fcmovu
popa
xor
dec
fisubl
or
cmpsb
adc
aam
add
lret
or
movsl
arpl
mov
sbb
or
mov
add
test
ds
xchg
mov
mov
mov
adc
mov
push
in
lahf
iret
adc
xor
and
xchg
jecxz
imul
cmp
or
sub
jb
pop
mov
les
lret
xchg
sbb
xchg
fs
and
fadds
inc
mov
fcomps
fwait
adc
or
ficoml
jnp
adc
jmp
adc
lods
mov
mov
pushf
mov
fcmovne
xchg
mov
fisubl
dec
sub
jle
sbb
aas
jmp
lret
addl
or
into
out
push
jbe
rolb
paddb
lock
adc
ficoms
imul
ljmp
sbb
lret
aaa
ret
mov
mov
cli
cltd
cltd
mov
pop
xchg
fcoml
movsb
cmp
adc
repz
ja
bound
jae
lahf
jecxz
and
sub
xchg
add
ret
in
adc
popa
dec
fwait
inc
data16
jecxz
inc
ficomps
adc
jmp
sub
daa
push
pusha
adc
ja
dec
xchg
lret
stc
pop
add
push
inc
icebp
enter
jl
test
bound
andl
cld
or
xor
add
dec
dec
xor
fdivrl
sub
add
push
jo
xchg
xor
out
xchg
popa
cli
adc
int3
in
mov
xor
fistpll
fsubrl
stos
daa
mov
rcl
inc
pop
and
xchg
ss
mov
clc
out
jne
xchg
fwait
mov
jge
lds
mov
jbe
mov
xchg
ret
sub
lds
popf
out
out
and
out
idivl
out
pop
pop
mov
call
div
rclb
sbbl
inc
jb
aam
push
rorb
sti
push
mov
stos
cmp
mov
jmp
int
loope
sub
rcrl
lret
sbbl
xchg
or
adc
mov
enter
xor
std
mov
push
xlat
and
js
scas
dec
xlat
out
lods
mov
testl
call
xor
push
sub
fiadds
pop
dec
dec
mov
sbb
sbb
adc
pop
imul
popf
mov
or
fnop
sbb
mov
sti
dec
les
cmp
fiadds
popf
gs
or
cltd
jp
push
or
enter
mov
sbb
dec
push
shll
mov
aam
sti
jg
jnp
inc
add
adc
adc
int
adc
movsl
test
iret
sbb
scas
mov
fdivp
rorl
cmp
sbb
lcall
ret
jb
sti
and
or
addr16
push
dec
jp
add
lds
jne
xchg
push
shll
dec
call
sahf
fstl
loopne
add
mov
xor
xor
dec
jmp
mov
adc
dec
loope
push
push
shrl
enter
inc
push
jns
dec
les
sub
sub
sbb
add
and
scas
in
cwtl
push
ja
fstl
jmp
jg
loop,pn
jmp
adcb
mov
add
push
push
sub
pop
inc
adc
int
enter
aam
int3
lcall
adc
ror
in
insb
aas
int3
mov
xchg
jl
sbb
sbb
pop
inc
jecxz
movsl
rclb
dec
push
jb
ja
js
lcall
xchg
addr16
or
dec
scas
mov
stos
sbb
scas
into
pop
lds
mov
pop
sub
out
push
int3
or
fidivl
inc
or
in
ja
sbb
pop
pop
pop
jne
adc
or
pop
mov
mov
adc
sldt
push
jnp
xor
or
push
fsubrl
leave
stos
sbb
sub
mov
xchg
test
push
mov
dec
popf
inc
or
inc
lock
lods
int3
push
and
inc
sahf
xor
push
and
scas
push
ja
dec
stos
mov
mov
mov
aad
xchg
push
dec
jbe
xchg
insb
out
mov
sarb
dec
sbb
and
ficompl
ret
jne
sub
mov
icebp
test
fdivrl
and
adc
mov
cld
bound
jbe
movsl
push
idiv
into
mov
push
cltd
aam
push
popl
push
adc
aam
adc
repnz
loopne
sbb
dec
mov
jmp
daa
push
cs
fisubs
mov
hlt
or
sti
cmp
dec
push
sti
dec
daa
adc
sbb
mov
or
adc
stos
mov
xlat
cmpsl
loopne
dec
jns
ucomiss
sbb
jge
sub
adc
jno
sbb
pop
push
js
or
pusha
jns
and
dec
iret
stos
aaa
repz
fstpl
mov
inc
stos
add
insb
add
scas
ja
sbb
push
lret
push
ficomps
pop
dec
leave
mov
add
push
rolb
test
into
cltd
mov
cmp
movsl
and
pop
adc
sti
xlat
mov
sbb
aaa
pop
jb
dec
or
out
addr16
add
insb
jns
fcom
add
ret
insb
stos
nop
mov
movsl
pop
sbb
out
push
ffreep
push
or
mov
mov
lods
xchg
movb
gs
rorl
xor
add
lret
shrb
out
jge
lret
push
mov
outsb
test
adc
cltd
mov
add
mov
pop
sti
scas
outsl
cmp
fadd
lods
cld
ficompl
dec
add
push
or
mov
xor
popa
adc
jae
sub
pop
cmp
lea
sti
or
xchg
dec
adc
sub
add
sub
int
add
lret
ret
mov
xchg
out
adc
jnp
lcall
repnz
bound
in
pop
jne
jecxz
xchg
lea
push
loopne
sbb
fsubrl
scas
add
jecxz
test
std
pop
add
pop
push
jg
adc
xchg
fadds
mov
mov
mov
mov
ds
sub
and
or
push
mov
and
int3
pushf
daa
add
add
xchg
cmp
stos
stos
pop
loope
jl
cmc
mov
cmpsl
imul
mov
pop
bound
mov
aaa
mov
test
inc
outsl
jmp
xchg
or
in
ljmp
or
ret
scas
repnz
sub
xchg
aam
daa
add
mov
lea
sbb
icebp
push
or
lock
dec
lea
mov
xchg
pop
push
movsb
sbb
sub
mov
arpl
fidivrl
add
inc
inc
mov
inc
jns
gs
popa
nop
add
lea
adc
outsb
lret
push
pusha
rep
pop
in
or
mov
push
adc
xor
jmp
outsb
adc
add
dec
adc
jne
hlt
inc
or
repz
xchg
mov
jnp
or
pop
idivb
dec
aaa
sbb
and
adc
jp
jb
cltd
mov
out
mov
stos
cmp
pop
pop
mov
mov
mov
or
repnz
popa
movsb
mov
out
and
pop
add
dec
sub
enter
lods
out
loope
fs
push
mov
adc
add
pop
dec
jne
xor
inc
jb
mov
insl
xchg
push
sahf
mov
or
mov
xchg
cli
mov
sbb
cmp
bound
js
cmpsl
sahf
jae
adc
fstpt
jnp
add
insl
jecxz
sbb
push
xor
popa
xorb
dec
mov
pop
pusha
pop
jp
out
aas
pushl
popa
subb
mov
pop
xchg
mov
sub
mov
ret
sub
sbb
jmp
and
subl
fsubrl
add
ret
ss
adc
mov
mov
imul
out
add
aam
stc
sbbl
lods
add
fistps
imul
push
scas
lahf
fwait
xchg
or
mov
mov
shr
and
mov
push
in
add
sti
aaa
fildll
add
cmp
xor
ret
popf
cs
shlb
cmp
ret
mov
nop
je
aam
fwait
lret
sub
into
aad
loope
ret
or
cmp
dec
std
lods
mov
lea
sbb
jbe
jae
js,pn
adc
lods
fwait
mov
add
xchg
jmp
lods
and
inc
insb
pushf
hlt
push
aaa
fwait
push
sbb
ret
jmp
hlt
pushl
cmp
cli
test
xlat
or
push
mov
mov
adc
pop
adcb
or
lret
movsb
orl
push
or
mov
push
shll
icebp
sub
inc
ficompl
dec
in
mov
adc
xor
shl
roll
inc
loopne
mov
cmp
bound
in
adcb
call
inc
aad
aaa
jmp
xchg
in
in
mov
out
inc
and
out
or
sarl
das
add
push
mov
iret
sbbb
adc
or
push
adc
pop
lods
aas
inc
pusha
jb
iret
and
and
xor
xor
daa
mov
and
jl
jnp
out
rep
cmp
add
outsl
mov
shll
in
repz
sub
addr16
push
jne
xor
loope
js
sbb
push
or
push
sbb
xchg
outsl
fmull
out
sti
in
pop
cmp
scas
out
mov
add
clc
stos
cld
fisttpl
pop
mov
adc
add
into
cmp
fists
mov
push
lret
push
or
hlt
xchg
inc
push
and
movsl
or
in
sbb
negb
lahf
sub
int3
out
mov
ljmp
aam
mov
jne
out
xchg
dec
movntps
mov
ljmp
clc
outsb
adc
loop
cs
xchg
mov
mov
sarl
stos
mov
pop
xchg
push
in
push
jb
lcall
mov
jmp
outsb
pushf
aas
pop
sub
int3
pop
jne
mov
sbbl
rolb
and
lret
cld
mov
mov
roll
cld
mov
push
jno
mov
imulb
inc
mov
jmp
push
dec
sarb
fstpt
xlat
out
pop
xchg
cld
mov
movsl
inc
sahf
xchg
out
jge
and
shrl
int3
movsl
cmpsl
daa
loope
dec
cmp
jnp
jb
sub
pop
add
sysret
mov
das
out
push
lods
addr16
sub
mov
or
or
pop
loopne
enter
loopne
test
int3
das
add
mov
and
ds
pop
out
icebp
les
mov
ja
nop
sub
notl
insb
jbe
aad
sub
push
lods
shrb
aam
jne
stos
in
mov
jb
in
mov
mov
leave
stos
sahf
add
mov
fimull
into
repz
sbb
jbe
loop
imul
xor
daa
or
out
jp
dec
hlt
inc
xchg
ret
jge
adc
rorb
or
jno
add
ss
ret
mov
scas
push
mov
jg
jle
or
fs
andb
mov
dec
lcall
adc
add
lcall
insb
bound
mov
cmc
sti
rorb
pop
lods
int3
addr16
xor
fstpt
mov
jmp
inc
xchg
lcall
sbb
daa
out
pop
sahf
mov
mov
xor
mov
mov
sub
jmp
bnd
and
jge
mov
lock
push
movsb
adc
and
mov
cs
js
nop
push
testb
inc
xor
das
in
sbb
inc
push
aas
mov
lahf
jge
mov
pop
xchg
ret
cmp
pop
or
or
scas
mov
out
cs
cmc
stc
test
cs
lds
mov
sbb
daa
push
pop
shlb
sbb
lret
not
aaa
adc
clc
into
inc
in
sbb
pop
mov
mov
movsl
push
test
dec
adc
hlt
cltd
and
xlat
mov
push
insb
add
mov
loope
dec
push
mov
adc
scas
adc
xchg
sbb
fsubrl
pop
or
cmp
mov
push
imul
enter
fiaddl
dec
popa
pushf
test
dec
adc
pop
out
mov
hlt
sbb
adc
nop
and
flds
inc
sbb
add
pusha
rclb
imul
testb
jnp
mov
dec
push
cmp
adc
cmp
insb
enter
orl
xchg
cmpsb
xchg
in
sbb
push
test
sahf
jbe
arpl
push
out
ficompl
push
add
iret
aad
sahf
pmulhuw
xchg
insb
inc
push
pop
ret
insl
sbb
lods
sbb
lret
das
sub
and
mov
xor
out
ljmp
add
mov
int
nop
sbb
dec
jecxz
shrl
shlb
adc
ja
cltd
push
jae
aas
cmc
push
ret
mov
dec
adc
je
mov
icebp
add
fnstcw
mov
xlat
pop
adc
mov
push
lcall
push
out
call
xchg
inc
sti
int
or
or
jne
pop
in
out
ss
jp
and
pop
test
stos
lret
inc
js
mov
cwtl
push
lret
bound
movsl
pop
lods
test
pusha
jecxz
jbe
push
lret
push
mov
mov
out
fcoml
add
add
push
pop
adcb
aas
mov
push
stos
dec
and
sbb
jge
mov
sbb
sbb
add
add
and
popa
cltd
jne
push
push
jb
adc
ret
into
inc
mov
mov
add
gs
inc
lods
mov
inc
repz
or
jbe
sbb
sub
adc
icebp
sbb
or
inc
mov
cmp
outsl
clc
push
aad
hlt
rcrl
mov
add
out
add
add
xor
cmp
sbb
shll
ja
push
mov
loop
out
and
xchg
test
in
cltd
jge
aas
push
and
xor
mov
pop
cltd
ret
jae
mov
jb
std
jae
fiadds
inc
adc
out
data16
rclb
leave
jb
sub
push
jnp
call
sti
or
stos
sub
mov
fs
mov
popf
popa
sbb
rcr
or
arpl
mov
mov
ret
pop
xor
jb
push
sti
in
repz
add
xor
in
outsl
xchg
inc
add
insl
sbb
adc
loop
outsb
stos
or
pop
or
lods
dec
push
lods
pushf
test
jbe
icebp
out
jle
jnp
fsubl
adc
orb
test
xor
mov
add
xlat
shl
rorl
mov
jle
cwtl
sub
fwait
mov
adc
aaa
add
fcoms
mov
sbb
sub
sub
inc
lods
add
xchg
sbb
fsubrl
inc
stc
jge
movsl
add
jns
lds
pop
lret
les
out
sub
out
xor
push
movl
xor
test
stos
xchg
cmp
call
mov
cmp
adc
js
sbb
mov
punpcklbw
xchg
inc
in
push
sti
out
jno
adc
cmpsl
call
add
cmc
push
mov
sbb
mov
mov
int3
add
shll
push
aam
jecxz
loop
xchg
pusha
add
add
test
push
add
hlt
dec
cmp
xor
insb
sbb
popa
fsubrl
push
jmp
add
mov
lods
adc
jae
dec
sub
cmp
or
out
aam
lods
jne
jle
mov
retw
negl
jne
cmp
cltd
dec
inc
jecxz
das
or
aad
and
inc
jmp
subb
in
test
fwait
ljmp
mov
test
add
push
popa
xchg
jecxz,pn
and
dec
inc
pop
cmpsl
mov
pusha
lods
xchg
mov
shlb
inc
push
push
and
fwait
iret
dec
push
add
push
cli
and
sahf
daa
jl
std
aaa
int3
push
pop
shll
scas
test
sbb
cwtl
xchg
or
insl
push
mov
add
cld
cld
add
gs
sub
lret
hlt
loopne
mov
sub
mov
aas
jecxz
and
jns
dec
call
jae
sub
pop
push
dec
mov
in
mov
sub
mov
mov
push
test
sbb
fnstsw
mov
mov
xchg
ljmp
jp
out
adcl
call
xchg
fisubrs
fsts
add
in
fadd
mov
popf
push
rorb
lret
out
and
stos
mov
jne
dec
sbb
inc
into
adc
mov
fldcw
or
je
xor
in
mov
test
cltd
daa
mov
xchg
into
dec
add
cmp
scas
icebp
or
test
test
cld
icebp
jnp
and
stc
dec
dec
ret
test
jns
cld
ret
fwait
mov
xor
enter
xchg
adc
sbb
outsb
lret
mov
xchg
push
push
repz
ja
js
fisubrs
sub
mov
out
arpl
or
xor
adc
and
cltd
adc
cmp
sub
mov
insb
js
lods
ret
and
cmc
cld
add
leave
and
sahf
push
arpl
jmp
cltd
outsb
push
or
shlb
in
fnstsw
int
pop
pusha
jecxz
mov
iret
stos
les
addr16
sub
mov
dec
add
dec
mov
fcomps
adc
loopne
cmp
aaa
scas
leave
and
gs
lcall
inc
cmpsb
lcall
add
jb
mov
popf
js
add
sub
rclb
popf
jp
dec
mov
dec
xor
sbb
rcll
sub
outsb
push
mov
dec
jge
add
fldcw
jo
aas
xor
and
outsb
lods
inc
daa
inc
cld
jle
xor
loope
scas
inc
adc
sub
out
iret
mov
cmp
aad
test
mov
sub
and
stos
xchg
inc
jge
ja
add
dec
and
pop
inc
cs
or
xchg
orb
jbe
int
adc
cld
movsb
push
mov
dec
ja
dec
mov
pop
adc
jmp
inc
and
imul
pop
xchg
xor
pop
jecxz
and
push
push
jle
into
aas
sahf
sti
inc
scas
cld
data16
xchg
pop
in
cmpsl
adc
xchg
mov
unpcklps
shlb
lds
or
jmp
cld
mov
lods
repnz
xchg
sub
push
notl
mov
add
cmp
insb
inc
insl
ja
ror
pop
or
popa
clc
mov
pop
cs
pusha
inc
outsb
fucomp
cmp
lahf
daa
xchg
jge
sub
jle
stos
loopne
push
mov
jp
shll
sbb
in
sbb
imulb
aad
lods
and
jb
mov
repnz
sub
das
data16
jne
fcmovnbe
jnp
xor
ret
lods
popa
lret
fwait
sbb
les
cwtl
push
and
inc
mov
sti
imul
and
fsubl
cmp
scas
je
in
insl
sub
fsin
rclb
stc
lret
iret
mov
lcall
sub
cs
add
in
call
js
in
cmp
into
insb
sti
xchg
mov
jbe
xor
mov
mov
sti
jb
test
leave
add
push
jg,pn
cwtl
test
sbb
cmp
mov
cs
push
les
inc
jb
xchg
add
repnz
clc
rcl
lret
and
lods
imul
inc
jb
fdivl
bound
in
sbb
add
add
icebp
mov
ljmp
or
shl
jle
pop
fldl2e
shll
aad
test
sub
cmp
cmp
sti
mov
inc
cmc
or
sub
jp
jmp
pop
and
int
and
push
mov
adc
inc
out
lds
xlat
sbb
adc
bt
dec
cltd
mov
loope
adc
pop
or
adc
sub
stc
ret
out
inc
xchg
cmp
jl
push
enter
shlb
mov
std
std
cmp
inc
dec
in
dec
dec
mov
cltd
cmp
lret
jb
in
int
xchg
jl
aaa
push
xorb
fwait
add
cmp
mov
xchg
mov
push
addr16
push
jle
cmp
repz
fnstsw
movsl
sbb
filds
jo
sbb
pop
pop
lcall
add
adc
popa
sub
sub
cmp
inc
jo
popf
or
mov
insb
push
insl
adc
and
mov
lea
inc
inc
sbbl
loop
xchg
dec
mov
pop
push
andb
lcall
mov
mov
jmp
repnz
mov
frstor
dec
mov
xchg
loopne
sbb
fbld
or
cwtl
push
fcomps
popf
inc
xor
mov
jp
jecxz
mov
xor
ret
loop
inc
aam
and
mov
xlat
dec
or
pop
cwtl
outsb
cmp
push
pop
xchg
push
jl
bound
mov
sub
jae
nop
lods
xchg
pop
mov
insl
mov
mov
adc
lcall
push
xchg
fcmovu
and
dec
dec
inc
push
pop
stc
add
inc
dec
jecxz
bnd
or
inc
out
push
jmp
into
orb
sub
pop
adc
xlat
negb
jp
jmp
je
mov
pop
adc
sbb
pushf
push
imul
movsb
pop
out
rcll
mov
add
xchg
loop
mov
int3
xor
repnz
add
xor
lds
iret
and
insl
rcl
dec
mov
loope
mov
add
cli
mov
mov
mov
aas
pushf
loopne
or
loopne
jns
mov
out
pop
stc
and
lahf
push
inc
repz
out
mov
leave
loopne
shll
mov
mov
aad
and
fisubrs
mov
into
fstps
xorl
mov
fs
jo
pop
push
ret
js
mov
xchg
sti
cld
mov
pop
fiaddl
ja
xchg
in
adc
and
inc
out
fwait
stos
cmp
adc
das
jp
pop
mov
lret
sbb
pop
movsl
or
int
rclb
ret
dec
lea
dec
push
popf
inc
lret
mov
mov
scas
fmull
inc
mov
jns
mov
adc
sahf
les
adc
jnp
idiv
insb
sbb
xor
jo
or
stc
repz
sti
stos
or
out
push
fisttps
sub
lds
mov
jne
jbe
les
xor
ret
push
xor
inc
inc
inc
xlat
xorb
cmpsl
insb
addr16
adc
repnz
ficompl
xchg
mov
sti
mov
xchg
add
cmp
or
stos
mov
jnp
dec
mov
xchg
mov
aaa
leave
push
loop
stos
pop
sbb
out
mov
mov
ja
and
sbb
add
dec
lahf
mov
popf
jbe
add
mov
pop
inc
add
sbb
mov
push
xchg
pop
int3
add
cmp
xor
ret
out
adcb
mov
sub
mov
mov
jmp
nop
pop
hlt
and
sbb
jl
add
dec
push
jmp
les
pop
mov
outsl
iret
adc
adc
jmp
xchg
in
jl
sbb
dec
pop
and
arpl
sbb
jecxz
arpl
adc
enter
mov
popa
adc
mov
adc
mov
and
hlt
jmp
jne
and
cmc
push
sub
pop
ds
add
xchg
aad
nop
push
jmp
sbb
pop
lret
insb
out
cmp
in
stos
out
sbb
adc
xchg
call
add
cltd
jae
nop
insl
ja
inc
cmp
rorl
xchg
insl
sbb
sub
push
xor
push
cmpsb
in
adc
loop
filds
stos
cmp
inc
or
fwait
push
insb
add
test
ret
xchg
jmp
repz
out
in
enter
jmp
push
xchg
dec
cmp
push
adc
clc
bnd
push
push
add
je
lock
shl
jmp
std
mov
jae
fxtract
outsb
repnz
and
out
jmp
xor
pop
jae
popa
fistpll
or
cmp
fs
or
jecxz
mov
cli
mov
bound
lret
jo
jne
mov
jne
inc
leave
jbe
push
ds
lea
cli
sti
mov
je
aaa
cs
adc
hlt
out
jo
push
jno
sub
jecxz
cmc
int3
shrl
add
dec
jns
jo
arpl
adc
pop
jns
lret
es
pushf
call
cs
cwtl
xchg
cmp
frstor
out
ljmp
pop
cmp
lcall
int3
test
sti
jg
lods
call
adc
jno
mov
push
mov
fdivrl
jp
mov
sahf
jecxz
imul
xchg
xchg
push
mov
loopne
test
mov
loop
out
xchg
lds
xchg
mov
iret
mov
in
jns
push
ljmp
out
jmp
outsb
lcall
inc
mov
test
aad
adc
and
lock
mov
lods
dec
cwtl
stos
jno
and
rolb
dec
cld
inc
addr16
xchg
dec
pop
in
adc
xor
or
xchg
mov
fistpll
call
int
jmp
adc
out
mov
and
sbbl
mov
in
cmp
aad
ret
sbb
add
jmp
and
xlat
push
jge
shr
lahf
insl
mov
loop
dec
clc
mov
add
stos
or
sbb
cld
jnp
lcall
dec
subb
dec
bound
sbb
and
int
hlt
hlt
lcall
xchg
push
sahf
repnz
adc
mov
leave
xchg
testl
or
inc
stc
xchg
lret
out
mov
sbb
push
sbb
cmp
lret
push
sub
adc
idivb
and
lods
push
fiaddl
scas
cmp
nop
or
movhps
test
out
mov
dec
or
mov
xchg
bound
and
cli
xor
cmp
jle
out
loopne
cltd
jge
push
sbb
gs
icebp
xchg
repz
dec
add
test
adc
sub
or
pop
lods
xchg
mov
mov
das
xchg
loop
cli
push
mov
lock
sbb
jg
add
cs
sub
jns
sbb
and
icebp
adc
dec
insl
rcr
std
out
data16
lret
cmp
lods
aam
sub
inc
push
pop
xorl
in
pop
or
sub
dec
in
xchg
daa
ret
xor
push
psubsb
rol
stos
and
ljmp
push
cmpsl
fld
xor
lahf
jp
aaa
sbb
out
addr16
stos
mov
adc
jge
inc
cmp
jb
fcompl
add
popa
mov
inc
iret
push
mov
or
push
mov
scas
mov
cltd
adc
data16
and
lods
int3
push
push
jmp
mov
xchg
mov
mov
fwait
subl
adc
jle
add
cltd
lret
dec
mov
insl
adcl
sbb
or
pop
add
lret
jns
orb
mov
inc
aad
in
and
pop
or
mov
xchg
insl
faddl
into
out
xchg
cltd
jl
xor
lea
and
or
adc
test
mov
lret
or
fstl
call
and
bound
mulb
stos
pop
pop
dec
shrl
lcall
fisubs
mov
jne
mov
and
sbb
mov
fs
lods
jb
movsl
jne
mov
sub
cmp
cltd
mov
add
lods
push
rorb
add
ret
clc
xchg
cli
push
out
adc
pushf
push
xchg
mov
adc
repnz
dec
inc
outsb
pop
sti
or
sbb
add
mov
cmpsl
in
and
or
dec
daa
repz
xchg
arpl
test
fiadds
enter
stos
fdivl
jle
outsl
shll
hlt
out
lcall
iret
mov
mov
aas
sbb
push
push
or
xor
adc
pop
mov
outsb
nop
sbb
out
nop
pop
pop
xor
adc
pop
or
fidivrs
mov
icebp
cmp
out
bound
adc
cld
add
stc
or
out
and
rclb
dec
mov
mov
bound
push
ja
inc
sub
les
lock
jne
lods
lods
movsl
lret
xor
pop
pop
push
leave
aad
imul
pop
int3
push
stos
sbb
out
inc
and
mov
fists
adc
pop
add
mov
test
lods
xchg
push
iret
adc
js
int
pushfw
in
fisubrs
outsb
or
sub
jp
xlat
mov
mov
testl
ljmp
lahf
scas
jecxz
mov
sbb
push
adc
xchg
cmp
ja
out
add
aad
cld
repnz
add
sbb
cmp
call
mov
das
xchg
inc
repz
add
xlat
push
pop
dec
iret
add
enter
jno
xchg
and
inc
xchg
xchg
and
in
addr16
sahf
cmp
int
jp
cmp
fcoml
dec
dec
int3
das
sub
stos
and
iret
jno
push
fwait
and
xchg
out
bound
inc
clc
jle
movsl
xchg
mov
sub
ror
out
daa
pop
scas
iret
add
xchg
cmc
insb
inc
fwait
sbb
or
and
xor
xor
adc
fsubr
mov
or
sbb
push
nop
xchg
push
and
lcall
jmp
lds
jae
add
out
lods
jmp
fistl
out
dec
je
lcall
adc
cltd
inc
adc
jge
adc
add
ret
sbb
adc
push
xchg
stos
enter
in
arpl
test
sti
push
out
or
adc
mov
test
daa
push
arpl
inc
rol
mov
adc
add
and
jl
dec
xchg
scas
cmp
rcrl
xor
mov
out
inc
mov
adc
or
add
aad
or
js
jle
in
cmp
lock
mov
or
in
push
fsubr
cmp
inc
mov
aam
jmp
sti
cld
pop
in
dec
loop
jecxz
cmpb
out
push
cld
dec
and
cld
sbb
imul
mov
mov
xchg
or
mov
mov
cmp
in
mov
stc
fmull
ja
or
sub
cmp
ss
fldenv
hlt
imul
jmp
lret
add
call
cmp
lahf
add
ds
push
sub
xorb
inc
xor
mov
xchg
jns
fidivrl
enter
bound
jns
and
jne
mov
fnstenv
jo
mov
call
mov
ret
fwait
inc
iret
sbb
adc
mov
int
inc
test
movsb
aaa
pop
movsb
mov
cmc
rcll
dec
les
cmp
xor
pop
push
jnp
inc
xchg
popa
addr16
adc
cmp
mov
adc
sub
push
inc
in
push
movsl
mov
push
pop
add
or
sub
or
jbe
sub
out
xor
or
fdivrs
or
sbb
and
hlt
and
or
add
push
aad
pusha
rorb
and
add
je
cmp
push
dec
in
orb
int3
lret
inc
fiaddl
stc
add
adc
das
loopne
mov
mov
int3
popa
add
insl
sti
ljmp
jns
push
adc
jl
negl
insb
out
xchg
loope
xor
add
vmwrite
xor
adc
loop
jp
pop
outsl
cld
pop
mov
mov
push
adc
out
mov
lret
xor
ret
lret
mov
jle
dec
inc
shll
pop
sbb
adc
jae
pop
daa
add
cli
mov
add
dec
je
jmp
sub
ret
push
stos
repz
jge
in
jno
xor
push
jecxz
pop
inc
push
movsb
shlb
inc
in
adc
adc
sbb
add
cmp
cld
cltd
lds
dec
sub
mov
sub
push
jp
adc
push
je
cltd
add
or
pop
ds
inc
sub
mov
add
xchg
call
aaa
mov
shl
aad
adc
dec
outsl
int3
lods
cld
jne
jo
adc
jae
add
repnz
mov
xor
cmpsb
stos
int
pop
jle
push
pop
sti
add
jae
push
xchg
cmc
adc
out
roll
xchg
imul
sub
dec
push
fsts
cmp
addb
inc
dec
lods
int
dec
int3
xchg
cmc
cmp
inc
dec
push
aam
or
aas
jle
mov
dec
es
pop
ss
cmp
adc
dec
lds
aam
fnstsw
mov
mov
adc
adc
add
xor
pop
mov
fwait
cld
add
jne
mov
jns
mov
xchg
bound
jmp
jg
mov
mov
adc
loop
sub
jl
cs
mov
je
pop
shr
xor
je
push
out
cmp
sbb
jns
imul
and
or
nop
fsubl
ss
decb
jmp
push
int3
ljmp
pop
or
arpl
scas
add
push
mov
int3
out
stos
sbb
sub
stc
or
inc
sbb
pop
inc
adc
jmp
adc
and
add
xorb
aaa
mov
cli
std
dec
repnz
sbb
jns
fisubl
push
adc
int
push
sub
dec
cs
stos
or
clc
mov
out
push
fdivrl
out
xchg
enter
inc
test
fidivl
or
push
imul
and
rolb
bound
jl
lea
dec
adc
out
rorb
sub
fstps
call
ret
sahf
dec
js
xor
in
lret
sub
sub
jb
lods
sub
push
dec
test
add
sub
jno
mov
in
push
scas
sahf
push
mov
int
add
dec
and
xchg
add
or
mov
int
clc
inc
or
jg
add
add
add
popf
fcoms
xchg
or
rcr
ret
fdivs
sbb
sbb
out
enter
sub
pop
test
cs
adc
push
push
adc
adc
insb
mov
out
or
ds
jne
ljmp
push
mov
cmp
dec
lret
loope
cmpb
outsb
adc
ficoml
adc
lret
cmc
lock
mov
int3
inc
test
push
cltd
js
incb
adc
or
mov
stos
cmpsl
cmp
or
add
mov
in
int
sti
outsb
inc
mov
mov
iret
push
add
add
test
xchg
std
lret
xchg
inc
rclb
lret
push
jge
xchg
cmp
das
ret
orb
xor
pop
sbb
clc
mov
cs
dec
bound
adc
mov
cmp
lods
enter
add
mov
cmp
jmp
cltd
adc
jns
fwait
add
push
out
fwait
jb
lods
and
push
pop
shlb
insb
pop
lahf
insb
sbb
adc
shrb
or
out
shlb
xlat
into
sbb
call
inc
inc
sbb
int3
arpl
xor
loope
add
cmpsb
mov
add
lcall
lret
xchg
mov
test
add
dec
mov
add
ficoms
loope
mov
cmp
adc
sbb
orl
mov
pop
mov
mov
adc
stc
mov
aad
fnstenv
xchg
insl
out
int
xchg
mov
push
das
xchg
inc
cmp
dec
jecxz
mov
fisubs
xor
lds
aas
sahf
sbb
stc
mov
sbb
pushf
sar
in
daa
sub
jbe
jl
and
lret
jg
xchg
xchg
ret
sbb
and
xchg
add
adc
push
lret
clc
sbb
fisubrl
mov
inc
push
jb
in
mov
out
orb
aam
mov
adc
outsb
add
fcoms
sbb
push
adc
fidivl
sub
add
mov
pop
cs
jne
cltd
inc
mov
inc
les
cmp
mov
je
fimull
inc
push
dec
sub
jo
cmp
mov
sub
add
lea
nop
lret
add
sub
pop
adc
mov
ret
or
xchg
loope
and
pcmpeqw
aad
push
fistpll
loope
gs
loop
inc
in
ret
adcl
int3
mov
sub
es
push
and
cwtl
ljmp
fiaddl
or
mov
dec
mov
dec
adc
or
movsb
xor
fwait
lock
inc
pop
lret
ja
pop
mov
imul
ja
dec
dec
sub
lods
adc
out
stos
dec
popf
in
dec
adc
add
xor
je
sahf
and
aad
dec
ret
rorl
lock
pop
xchg
push
adc
loope
scas
stos
call
sbb
mov
rorl
xchg
fisubrl
nop
mov
adc
adc
jne
adc
and
repnz
and
fcompl
out
aas
adc
dec
xor
fwait
jbe
sub
gs
mov
or
lods
dec
arpl
xchg
add
fs
sub
in
mov
and
enter
iret
and
loope
aas
rorb
or
int3
lret
lods
aaa
mov
loop
movsl
mov
lcall
inc
mov
xchg
daa
adc
lret
out
dec
dec
mov
je
jge
xchg
mov
js
inc
fs
js
xchg
fmull
ror
test
inc
iret
cmc
or
imul
lock
or
cmp
lods
add
rcrl
mov
loope
jno
pop
sbb
cli
lds
sbb
or
and
test
adc
test
mov
int
in
sbb
mov
sbb
lret
lret
add
jmp
rclb
or
int
fst
add
es
xchg
in
sbb
and
in
pop
push
push
stc
mov
adc
ljmp
fistl
loopne
mov
and
add
pop
and
outsb
push
es
mov
cmpsl
or
scas
xor
clc
add
jge
hlt
ret
outsl
lds
or
cmpsl
dec
jb
or
dec
jnp
jp
pop
js
ja
cmc
and
daa
sub
in
out
out
jp
pop
sub
lahf
loope
out
addr16
xchg
adc
sbb
jmp
sub
mov
repz
rclb
jmp
repz
rolb
xchg
sub
aam
sbb
push
test
repz
sbb
fld
cltd
aad
scas
cmpsl
mov
hlt
sti
adc
into
sub
outsl
and
cli
add
in
cltd
fs
jmp
sub
xchg
mov
mov
mov
in
push
sub
sbb
pushf
int
adc
out
mov
rcl
add
notl
cmp
adc
test
js
cld
pop
cmp
mov
out
addr16
mov
sub
popa
fildll
sub
jge
xchg
ret
lret
push
jae
adc
cmpb
xor
dec
js
loop
cli
aas
fwait
mov
cld
cs
rcll
lods
and
or
adc
mov
sbb
xchg
xchg
aaa
cli
in
fistl
sbb
js
stos
test
aaa
filds
pushf
push
add
out
add
add
mulb
xchg
in
push
aad
sbb
out
push
push
mov
rcrb
stos
mov
pushf
fsubrl
popa
xchg
call
adc
add
fmulp
daa
in
orl
cmpsl
jle
scas
dec
fwait
or
jae
js
mov
mov
out
pop
out
fidivrl
rcrl
std
aam
dec
adc
pushf
stos
outsl
lds
loop
leave
dec
out
cmpsb
negl
inc
sub
jns
inc
pop
or
cmc
dec
dec
jmp
aad
mov
cli
fsts
cmpsb
into
inc
xlat
and
lcall
xlat
imul
push
lea
xor
out
insl
movl
add
test
inc
xor
lret
push
mov
sub
mov
repnz
push
outsb
lahf
sbb
or
loop
mov
out
shl
xlat
jmp
fucomp
pop
cltd
icebp
jp
push
in
out
sbb
jnp
test
gs
fimull
xor
cltd
iret
mov
mov
jmp
jle
pop
push
pop
jbe
fwait
inc
sub
je
ljmp
sbbl
or
out
iret
jmp
inc
cs
adc
std
sbb
jmp
inc
sahf
add
push
inc
ret
loope
pop
or
in
pop
ficomps
xchg
pop
aaa
cs
lret
inc
add
pop
mov
cmpsl
fs
int3
cmpsb
std
loop
jno
ss
test
xor
mov
mov
popa
lret
add
pop
shr
and
pop
and
sahf
or
out
cmp
inc
in
dec
sub
pop
aad
movlps
xorl
xlat
lock
popa
fisubrs
addr16
jge
fwait
rcrb
stos
dec
xchg
loop
add
dec
or
jecxz
fisubl
or
mov
mov
rcrb
xor
or
mov
mov
mov
inc
scas
pushf
in
dec
aaa
lret
mov
fs
xchg
xlat
ficoml
cld
adc
icebp
jbe
adc
cmc
iret
adc
out
mov
cmp
push
mov
or
imul
add
lcall
xlat
sbb
mov
aam
sub
add
test
adc
add
int3
cli
out
call
mov
jo
mov
roll
add
pop
in
add
aam
cltd
push
xchg
les
dec
outsb
mov
in
inc
fdivr
sub
cmp
push
outsb
mov
add
pop
insb
aam
mov
adc
mov
lret
jmp
mov
movsl
dec
gs
sub
sbb
insl
adc
les
testb
mov
push
jbe
out
add
mov
lret
stos
pop
cmp
mov
daa
push
lret
cli
xor
adc
add
sub
sub
test
dec
out
jnp
insb
mov
sub
xchg
dec
add
lret
mov
jb
loop
out
dec
adc
fisubs
pushf
dec
mov
push
popf
push
or
sbb
jmp
mov
sbb
ret
arpl
dec
jne
lods
add
daa
push
jl
cmpsb
loopne
out
sar
cltd
sbb
inc
pop
fcompl
shl
imul
fists
mov
test
xchg
sub
add
pop
js
or
jmp
xor
sbb
sub
out
pushf
sbb
and
lcall
dec
sbb
je
jg
lahf
sbb
iret
mov
ret
scas
sbb
dec
or
adc
lock
inc
mov
rorl
stos
cmp
xchg
bound
int3
das
adc
arpl
or
sbb
xchg
ret
mov
xchg
les
in
jne
mov
and
hlt
adc
mov
jp
cmp
in
in
mov
test
negl
mov
jo
pop
sti
xchg
push
pop
mov
mov
cmp
sarl
xchg
add
out
pop
fimull
and
sub
pop
aaa
xchg
stos
aam
aad
mov
jp
sub
shrb
int3
test
std
xchg
daa
cs
cmp
xor
jmp
mov
imul
xchg
nop
fs
dec
into
xchg
add
cld
leave
lret
pop
add
in
out
dec
iret
inc
daa
ret
push
stos
and
test
and
jmp
sbb
xor
mov
xor
add
xchg
jp
push
test
outsb
and
sub
add
dec
stos
cmovge
cmp
adc
xor
ljmp
cmp
sub
or
dec
jns
cmc
out
cmp
or
add
xor
outsb
test
repnz
mov
jns
dec
lret
in
in
gs
mov
adc
sub
add
fadds
jmp
inc
adc
or
loope
out
mov
test
push
mov
and
dec
dec
xor
out
dec
sbb
lahf
or
jae
ljmp
add
push
ds
jne
add
cli
outsb
lahf
movsb
or
cld
mov
or
jle
sub
mov
cmpb
jns
push
loopne
sbb
and
mov
inc
sbb
push
or
jmp
adc
inc
inc
decl
adc
fs
rorb
mov
out
xor
movsb
sub
xor
cmp
mov
idivl
inc
das
lods
loopne
push
inc
inc
adc
jge
outsb
or
add
pop
cmpsl
sbb
int3
ja
xchg
into
add
mov
push
movsb
or
adc
leave
or
jl
add
je
enter
jbe
or
xor
pop
push
or
mov
jae
and
push
add
lods
xor
movsl
sbb
aam
lock
into
xor
ficomps
cli
or
sahf
mov
subb
push
mov
sub
xchg
dec
mov
or
push
xchg
jecxz
or
sahf
jno
pop
or
adc
xchg
jge
out
xlat
push
or
iret
iret
lcall
sub
or
mov
lahf
or
sbb
test
cmp
add
aad
sub
testl
inc
xor
mov
int3
mov
inc
out
loop
or
clc
add
dec
ljmp
sahf
cmpsb
or
pop
lahf
fwait
mov
pop
divl
rorb
or
and
test
sbb
in
sti
daa
pop
stc
adc
scas
or
xor
or
pop
fidivs
fwait
arpl
mov
dec
incl
mov
dec
xorl
and
nop
or
mov
mov
popf
xor
aad
js
add
xor
in
or
jle
std
loope
adc
jge
out
dec
push
lods
mov
jbe
sbb
push
push
or
jne
mov
aad
fstl
fwait
jmp
add
dec
in
adc
inc
dec
scas
insl
pop
cmpsb
in
jbe
sub
add
pop
in
xchg
or
aam
mov
pop
jmp
movl
fldz
dec
test
js
jp
in
enter
push
into
or
fiaddl
push
dec
push
cli
adc
mov
adc
or
pop
sub
je
lcall
gs
mov
adc
and
xlat
or
mov
jmp
imul
ficompl
rorl
push
cli
js
xchg
aam
or
mov
or
inc
or
aad
pusha
jp
xchg
xchg
or
xlat
mov
push
movsl
or
add
mov
adc
dec
jns
lods
hlt
fwait
notb
dec
lods
xor
sbb
pusha
sbb
mov
jbe
jmp
or
xchg
ds
mov
fstpt
sub
insb
mov
xchg
or
clc
int3
or
or
cmp
sbb
or
jbe
pop
fcoml
or
mov
lods
cli
dec
push
out
sbb
pop
xor
xchg
mov
mov
and
inc
sbb
or
mul
test
sub
cs
stos
xchg
push
add
rcl
mov
fsub
adc
mov
or
clc
push
mull
mov
xchg
mov
or
pop
push
cltd
dec
pop
stos
inc
push
repz
arpl
lret
mov
ffree
mov
orl
fidivrs
sbb
or
lds
or
stc
leave
cmp
fcomps
or
push
pusha
pop
sbb
adc
gs
add
jp
cli
push
pop
iret
inc
out
mov
and
or
popa
loope,pn
xchg
sbb
xchg
fimuls
cmpsb
xor
or
dec
int3
cmp
mov
fbstp
push
addr16
add
shrl
aad
cld
adc
int
or
adc
fwait
adc
rclb
aas
lods
lea
sahf
mov
ret
decb
addr16
adc
jnp
shlb
sbb
dec
enter
cs
pop
iret
and
and
mov
inc
test
or
cmp
xor
icebp
loopne
pop
sarl
fdivr
hlt
pusha
stc
cmp
or
mov
jo
dec
cld
or
xor
dec
or
fadds
pop
pop
dec
ret
mov
bound
cmp
shlb
inc
or
and
lds
cmp
jge
imul
and
adc
maxps
leave
push
add
push
xchg
cwtl
jno
ret
or
ja
push
lea
or
pop
push
decl
mov
mov
ljmp
pop
rorl
testb
or
dec
movsl
aam
lds
add
leave
scas
pop
lods
mov
scas
cmp
arpl
pop
adc
leave
dec
inc
mov
add
dec
and
adc
adc
rcrl
repnz
xor
mov
or
mov
sbb
daa
sub
push
or
sub
mov
or
push
lahf
fs
or
mov
push
mov
icebp
stos
fs
adc
in
jb
nop
dec
adc
insl
or
add
stos
lea
jp
bound
into
mov
outsl
dec
pop
or
xor
insb
push
mov
aad
adc
xchg
int3
sub
xor
xchg
les
adc
xchg
mov
xchg
aaa
add
fstl
pop
mov
jae
iret
mov
jne
xor
adc
add
out
js
mov
mov
test
inc
daa
mov
sbb
adc
test
xchg
pop
shl
sbb
out
iret
or
cmp
or
mov
pop
aam
stos
push
fmulp
movsl
jno
or
cmp
je
inc
jg
pop
iret
addl
fildll
jge
cmp
dec
hlt
jecxz
loop
fldcw
sub
dec
popa
or
xchg
xor
adc
push
out
repz
mov
sbbb
fs
cwtl
dec
adc
and
jbe
dec
lods
jmp
nop
push
push
push
call
sub
mov
scas
mov
in
daa
sub
leave
or
decb
push
cmp
push
mov
and
and
mov
or
push
lahf
repnz
push
adc
cld
and
nop
adc
sbb
pop
cmp
sub
adc
insl
gs
and
xchg
pop
aaa
shrb
xlat
adc
inc
mov
imul
sub
and
sub
std
push
or
mov
lret
or
push
xchg
sbb
int3
pop
std
je
das
push
cmp
jle
iret
cwtl
fildll
jb
cvttps2pi
xchg
xchg
int
xchg
std
xchg
int3
xor
push
sbb
popa
sub
scas
loop
mov
dec
and
gs
int3
xor
jo
pop
or
add
sbb
cmpl
gs
sbb
sbb
mov
in
mov
flds
add
icebp
lahf
push
xchg
mov
pop
jb
ret
add
push
outsb
or
cmp
mov
out
testl
lods
aaa
xor
ret
ret
mov
es
push
mov
mov
ja
hlt
loope
sti
loopne
push
mov
push
repz
mov
clc
icebp
aaa
mov
int
arpl
rcrb
jle
mov
loopne
ficoml
sbb
sbb
fnstcw
mull
int3
pop
mov
sub
mov
imul
push
cmpsb
pop
adc
add
faddl
dec
sub
cmp
loopne
sbb
dec
jmp
sahf
fadds
inc
cmc
push
dec
mov
mov
test
add
test
push
push
out
push
mov
inc
adc
jb
mov
dec
mov
in
cltd
xchg
hlt
xor
sub
mov
add
sub
lahf
bound
mov
cwtl
fisubl
or
icebp
push
lret
lods
push
ds
ret
adc
int
cmpl
jne
shll
push
loop
or
mov
add
and
dec
cmp
out
xchg
cmpsb
mov
insb
jmp
stc
adc
test
push
push
in
cltd
andb
mov
dec
ficoml
pcmpeqw
dec
sbb
fcoml
loopne
out
outsb
pop
lock
xchg
sbb
xchg
cmp
jp
push
sbb
cltd
xchg
cmpsb
inc
popf
mov
ret
jl
into
fwait
jnp
ret
or
call
lret
test
sarl
sub
pop
pop
imull
add
jl
pushf
add
sti
cmp
stos
jmp
lods
mov
xlat
inc
ret
jg
ror
inc
and
pop
jnp
pop
mov
jnp
pusha
mov
sub
dec
or
sbb
mul
ret
in
jne
cli
mov
sbb
sub
fsub
sub
cmc
push
aam
lret
popa
jmp
bound
adc
je
hlt
dec
sub
stc
jecxz
inc
xchg
mov
and
add
push
test
fs
clc
aaa
in
loope
adc
push
cld
adc
loopne
xor
add
push
lret
pushf
stos
cmp
rorb
add
cwtl
adc
add
pop
cmp
int3
push
xor
stos
add
push
xchg
hlt
out
cmpsl
movsb
int3
xor
cmp
xchg
cmpsl
push
xlat
jns
mov
mov
dec
jns
inc
cmp
inc
into
lret
add
outsb
cmpsb
out
lock
lahf
fwait
sbb
test
rcl
in
repnz
mov
popf
push
jp,pt
test
imul
rcr
or
sub
sub
rcrb
dec
cmp
inc
adc
subb
sbb
xor
aas
scas
inc
in
ret
mov
push
and
dec
testl
dec
xor
mov
dec
in
or
movsb
das
mov
or
insb
ret
inc
mov
xlat
xchg
push
push
popa
push
sti
fbld
cmpb
or
out
sub
cltd
stc
daa
pop
imul
stc
shrl
mov
test
insb
loop,pt
ja
fsubrs
or
ds
jp
cmova
push
mov
jge
outsb
pushf
dec
repnz
or
push
sbb
loope
add
out
call
or
into
pop
pop
xchg
fs
js
cs
xor
push
add
sbb
dec
add
andb
cs
dec
pushf
mov
sbb
cmp
notl
std
xchg
loopne
mov
and
push
cmp
inc
jo
insb
adc
pop
push
xor
xchg
enter
jmp
popf
mov
out
cmpsl
insl
int
inc
xchg
js
das
addl
mov
in
add
call
lea
sub
mov
inc
jnp
aaa
adc
xor
dec
mov
into
sbb
inc
mov
daa
iret
sbb
out
cmp
scas
mov
stos
les
jge
adc
ret
sahf
pop
loopne
js
xchg
rolb
add
movsl
fiaddl
xchg
or
int3
inc
add
out
dec
cltd
cmpl
cld
popa
sbb
addr16
les
push
bound
mov
mov
test
repz
into
jg
jge
mov
push
cmp
xor
xchg
in
addl
jb
fsubr
mov
jl
lret
repnz
jno
and
sbb
bound
pop
loopne
mov
or
lds
push
cmp
outsb
scas
push
xchg
jae
jecxz
cmpsb
lods
and
int
mov
and
cwtl
insl
int
cmp
jle
mov
ja
cs
sbb
sbb
dec
push
and
cmp
sbb
inc
jne
movsl
sbb
add
bnd
mov
dec
insl
in
jno
mov
ljmp
int
pop
loope
cmpsb
repz
push
leave
imul
mov
xor
adc
test
rorl
das
lcall
lret
iret
sahf
jmp
fdiv
adc
sbb
cmp
out
mov
mov
mov
dec
mov
shll
outsl
xor
mov
dec
mov
bound
add
pop
mov
xchg
cmp
mov
or
push
in
inc
test
lret
jmp
adc
int3
std
dec
leave
int
faddl
mov
push
nop
subl
mov
int
pop
icebp
pop
adc
fbld
enter
add
shlb
fisttpl
or
lahf
mov
push
ret
pop
insl
roll
lret
mov
adc
and
in
sbb
jmp
fcmovnb
add
nop
or
adc
aam
cs
sub
dec
scas
jecxz
add
test
mov
lcall
jb,pn
lret
ljmp
mov
mov
inc
aad
insb
cmc
fcoms
sub
std
scas
mov
add
sbb
js
nop
dec
jle
lret
and
inc
aad
int3
out
mov
mov
pop
cmp
aaa
ds
loop
and
sti
xor
addr16
loope
mov
add
inc
xchg
test
cld
loop
add
xorl
pushf
mov
in
out
adc
lods
out
mov
cmp
fs
xchg
mov
inc
rcl
negb
mov
fcmove
inc
jge
mov
fcomi
or
stos
adc
sbb
add
fnstenv
fcmovnu
add
imul
jg
test
or
in
sub
pusha
push
push
fbstp
ja
nop
out
mov
push
add
and
lret
adc
or
pop
icebp
sub
int3
roll
mov
and
push
xchg
stc
pop
insl
and
out
movsl
das
and
int
shlb
lea
iret
sub
popf
jo
jmp
daa
pop
scas
shrb
mov
leave
xchg
cmp
xchg
add
ljmp
fldenv
push
adc
popa
mov
add
out
int3
pop
scas
bound
lret
mov
fwait
add
mov
aaa
adc
and
jbe
pop
outsb
adc
add
nop
inc
int3
dec
rorl
shlb
add
push
outsb
push
sbb
xor
cltd
jne
test
mov
arpl
fsubl
daa
mov
jne
push
and
add
dec
inc
jge
mov
cltd
nop
popf
fcoms
cmp
inc
hlt
adc
test
icebp
sbb
inc
sub
cli
or
jge
sbb
int3
sbb
ljmp
push
ss
imul
inc
neg
fildl
fs
push
arpl
fidivrl
mov
scas
repnz
negb
mov
gs
or
fimull
mov
movsb
fwait
int
sbb
pop
lret
or
adc
jnp
insb
adc
xchg
shr
jne
sub
add
inc
push
sub
sub
cmp
movsl
les
sub
sub
aas
fwait
add
push
in
jp
pop
cmp
and
xor
adc
scas
pop
les
dec
add
adc
stos
lret
sbb
ss
or
xchg
push
or
icebp
sub
mov
add
inc
int
fsubr
int3
mov
and
inc
sbb
dec
les
mov
int3
ret
push
aaa
mov
das
je
lods
sarb
adc
jne
add
aas
jae
jmp
push
push
push
movsb
push
andb
jnp
int3
or
clc
lock
daa
adc
mov
pop
jnp
mov
and
loopne
insb
push
cltd
push
insl
sub
push
adc
mov
loope
dec
add
nop
sub
add
mov
mov
lret
jb
mov
adc
fisubs
insl
mov
lret
mov
lret
jmp
pushf
cmp
dec
dec
dec
insb
mov
mov
cs
gs
xor
cmpb
add
mov
inc
xchg
xlat
in
sbb
shlb
push
cmp
mov
gs
outsb
aam
or
mov
inc
xor
stos
push
lret
and
jbe
lret
add
push
lahf
into
xchg
inc
mov
jb
jp
iret
jl
mov
sti
sbb
seta
daa
mov
flds
cmpsb
push
pop
push
cltd
jo
scas
shlb
sti
outsl
divl
lods
lahf
daa
fcmovne
int3
imul
sbb
outsb
mov
and
sbb
in
add
or
or
mov
jl
leave
addr16
mov
sub
ret
mov
inc
sti
jno
sbb
push
sbb
sub
sbb
jno
or
mov
push
fs
add
insb
arpl
sbb
daa
int3
jne
mov
xchg
add
jmp
cltd
cmp
shlb
out
and
push
push
dec
scas
sbb
add
dec
add
pop
daa
cltd
jae
fisubrl
cwtl
pop
mov
fucomip
sub
sub
push
or
inc
jns
fidivs
push
mov
decb
xchg
xchg
mov
push
jb
aam
sub
add
pop
lds
inc
adc
jmp
es
out
je
fsts
adc
rorl
aas
xor
scas
sahf
outsl
repz
imul
mov
jns
jae
out
jle
mov
and
jb
jo
add
xchg
fstpt
lahf
les
mov
sub
pop
int3
dec
add
cmpsl
push
xchg
cld
mov
xor
outsb
mov
in
adc
orl
int3
add
cld
into
add
add
mov
in
jno
dec
ficoms
cmp
xor
sti
lahf
inc
jg
jp
jmp
rcll
xchg
out
int3
push
cmp
push
sbb
arpl
arpl
add
mov
rol
add
jecxz
and
div
cld
or
mov
shld
jns
cmp
cld
xchg
movsl
pop
sub
push
add
sbb
mov
int3
popa
aad
inc
sbb
jle
push
add
insb
and
sub
jmp
or
in
ret
xchg
les
call
pushf
xchg
outsl
cli
data16
cmp
mov
inc
aam
icebp
sbb
add
ds
out
push
and
sub
cmp
dec
jge
xor
dec
and
fwait
sub
cmpsb
inc
aad
dec
lahf
xor
shll
mov
mov
stos
pop
scas
imul
loop
sbb
lret
push
test
jbe
add
sti
pop
aas
sub
or
out
mov
popf
movsl
lret
fdivrl
xlat
loopne
insb
ficoml
in
cmp
and
add
jecxz
dec
sahf
pop
test
fmul
bound
push
sub
push
aam
jnp
jae
and
outsb
dec
test
daa
inc
sti
loope
push
push
lcall
mov
rclb
inc
jp
or
adc
push
dec
sti
fchs
repnz
xchg
inc
pop
dec
xlat
imul
mov
mov
les
in
push
mov
adc
pushf
push
out
xchg
rcrb
aaa
ftst
cmpsl
in
mov
add
sbb
push
out
jns
daa
xchg
dec
xchg
mov
adc
and
and
loope
sbb
fsubr
push
pop
jmp
or
popa
add
fstpl
jmp
fildll
ljmp
adc
popf
jne
sub
lcall
push
add
jns
ficoml
out
addr16
popa
fiaddl
jge
xchg
sub
bound
fstpt
pop
dec
cmpsb
cli
mov
movsb
mov
pop
repnz
or
out
daa
leave
ret
gs
xchg
xlat
fcmovbe
fidivs
cld
xchg
imul
lahf
test
addr16
mov
add
and
cmc
and
orb
pop
mov
fsubs
into
pop
xchg
inc
inc
lods
xchg
shlb
daa
and
or
jp
xchg
jecxz
les
ds
sbb
mov
jl
aad
fistpll
adc
jnp
cmp
sub
cmp
mov
insb
cltd
add
pop
jmp
push
push
jnp
mov
pushf
push
fcoms
int3
adc
mov
aas
sbb
out
pop
aam
sbb
push
aad
lret
loop
or
jo
stc
add
leave
sub
adc
loope
xor
lds
or
xchg
jnp
push
adc
shr
loope
sbb
cmp
jecxz
out
adc
and
je
cmp
cmpsb
scas
mov
and
out
cld
mov
pslld
sub
aad
popf
add
cmp
or
jg
xchg
stos
insl
adc
fwait
testl
ss
ja
mov
mov
sub
cmp
sub
lahf
jno
pop
ja
leave
add
push
and
add
enter
inc
rolb
out
push
in
mov
add
and
ljmp
lret
test
sub
jecxz
inc
in
mov
cmc
fiaddl
xchg
mov
fdivrl
hlt
das
lahf
adc
adc
pop
and
and
and
adc
in
int3
or
mov
xchg
sti
xor
int3
test
out
mov
stos
in
aas
lea
cmp
xor
jmp
add
or
xchg
mov
bndstx
cltd
daa
dec
push
subl
jecxz
ja
dec
cmp
inc
out
ret
ljmp
cmc
fildll
sbb
repnz
pop
mov
inc
sarb
xchg
js
push
scas
and
lahf
sbb
xchg
xchg
mov
or
and
clc
sti
rcrb
mov
cmpsl
mov
and
adc
repz
addr16
ljmp
mov
mov
push
popf
inc
sub
inc
mov
push
rolb
stos
out
mov
fimull
push
xchg
cltd
jmp
sbbb
aam
add
cmp
repz
mov
jge
dec
repz
clc
mov
xchg
mov
out
add
push
scas
mov
adc
or
loope
pop
nop
test
jl
sbb
call
inc
or
cld
or
js
clc
lahf
sbb
add
das
cmp
inc
inc
imul
xchg
or
addl
push
jbe
jnp
aas
std
addb
cltd
stos
jmp
pop
inc
je
xchg
sbb
mov
loopnew
fsubrl
mov
mov
repnz
rcrb
mov
dec
jo
cmpsl
in
push
sub
ja
adc
lret
sub
add
in
aad
stos
mov
inc
sahf
scas
or
in
jp
lcall
loope
pop
inc
out
int3
cmp
sub
cltd
loop
sbb
mov
jne
repnz
lret
stc
lret
aam
mov
sbb
in
push
iret
jne
mov
outsb
fldlg2
add
cmpsb
jns
and
dec
dec
sbb
xor
icebp
mov
xor
das
dec
push
jmp
or
xchg
gs
push
mov
xchg
xchg
gs
xor
pop
or
adc
sbb
inc
push
add
or
mov
sbb
pusha
std
push
xlat
aam
add
mov
scas
push
push
or
outsb
mov
sub
loop
jnp
daa
aaa
jecxz
imul
inc
cmpsb
push
inc
mov
out
leave
imul
ret
or
mov
jne
push
pop
jmp
fidivrl
into
leave
push
mov
js
sbb
ret
dec
rclb
outsl
movsb
fmul
mov
out
xor
das
fiaddl
mov
sub
push
or
mov
dec
push
out
outsb
movsl
fst
pop
stos
jmp
cld
sbb
in
inc
mov
xchg
adc
out
pop
lods
sbb
aaa
adc
es
mov
sub
xor
mov
mov
adc
or
test
test
daa
cs
out
mov
dec
xlat
loopne
add
stos
and
jge
xlat
mov
jo
in
push
xor
mov
iret
jp
cmp
repz
aam
lods
cld
xchg
ds
rclb
call
sub
inc
movsl
scas
sti
sbb
push
mov
xchg
and
dec
jle
push
stc
jmp
jl
sbb
cltd
pop
and
cmp
sbb
shrl
sti
mov
sub
aam
inc
and
xchg
incl
scas
lahf
dec
mov
out
mov
test
xor
out
and
pop
jp
fsubrp
adc
bound
into
xchg
aam
or
jb
pop
out
xor
jecxz
or
adc
in
stos
xor
cmc
je
adc
popa
lds
sbb
lods
test
stos
adc
sub
sub
insl
sbb
ret
call
pop
popl
in
fprem
pop
cld
push
jl
jmp
mov
jmp
aaa
fsts
into
mov
xorl
dec
jae
xchg
sub
push
test
add
sbb
mov
int
out
scas
ret
xor
or
mov
stos
sub
jecxz
add
push
lods
repz
in
jecxz
cmp
mov
cmp
pop
cmp
shl
jne
or
xor
leave
out
pop
mov
cmp
cltd
mov
mov
test
push
jo
aad
rolb
jmp
gs
in
vpunpckldq
xchg
adc
dec
xchg
call
jg
stos
jne
xchg
dec
mov
push
cltd
out
mov
dec
push
std
lods
in
push
mov
add
pop
loope
xchg
cld
aas
lret
add
int3
push
pop
scas
dec
push
inc
data16
test
shll
stc
stos
jg
xchg
dec
stos
adc
ja
xchg
and
cltd
aad
out
pop
inc
mov
ret
mov
test
sbb
cmp
cwtl
pop
add
ret
rcrl
and
cmp
mov
aad
mov
enter
lea
adc
stc
jp
add
mov
repnz
nop
sub
and
out
adc
fs
dec
or
pop
jne
sbb
insb
jnp
mov
xchg
or
push
sbb
add
mov
inc
pop
sbb
std
mov
xchg
mull
decl
dec
sbb
mov
repz
xor
dec
scas
int3
pop
in
mov
add
mov
add
loopne
sbb
push
sbb
adc
jne
pop
out
enter
je
popf
or
inc
adc
cld
outsb
enter
cli
stos
mov
dec
mov
out
out
repnz
fcmovbe
lock
in
stos
dec
in
pop
mov
insb
fcmovb
jp
dec
out
testl
xor
push
dec
js
outsl
lods
aaa
or
adc
push
enter
data16
es
push
cmp
add
mov
mov
fisttpl
jl
lods
mov
and
xchg
ss
inc
and
mov
bound
fidivrl
out
jecxz
sub
loop
cmp
aaa
xor
adc
jno
push
repnz
mov
dec
xchg
lret
mov
xchg
inc
outsb
mov
cmp
mov
mov
mov
ret
fadd
bound
sub
push
movsl
pushf
push
clc
pop
nop
lret
sbb
fstpl
or
lret
cld
add
popa
out
mov
jno
sbb
jecxz
xchg
enter
adc
loop
add
sub
jp
out
out
and
pop
inc
or
pop
repz
dec
aam
pop
mov
push
inc
or
sbb
imul
jecxz
inc
das
mov
and
addb
adc
lahf
lret
pop
add
jbe
inc
or
cltd
sbb
jecxz
jmp
loop
adc
add
decl
mov
stos
mov
int
insb
pop
pop
adc
xor
lock
cmpsb
dec
sbb
out
addl
test
out
xor
pop
adc
mov
out
addl
aaa
or
jl
dec
in
xchg
jp
inc
mov
sub
pop
mov
ja
add
jg
mov
stos
daa
sbb
pop
iret
pushf
aas
call
in
dec
jo
sub
popa
jne
jo
pop
je
xor
pop
sti
xchg
mov
sub
nop
sbb
into
cmp
sub
dec
lods
or
xor
mov
mov
xchg
inc
in
or
jg
sub
pop
sbb
adc
jnp
dec
test
push
repnz
and
mov
fisttpll
test
imul
add
cmp
xchg
pop
xor
je
lahf
in
or
xor
xor
fcoml
lds
das
xor
jg
out
xor
xchg
adc
or
popa
jb
pop
inc
out
pop
dec
mov
cltd
push
inc
rcr
ljmp
pop
push
sub
mov
sti
pop
les
mov
and
in
add
add
aad
mov
fdivl
les
sbb
mov
xchg
mov
mov
lcall
shl
fcoml
mov
push
and
sbb
xor
pop
mov
out
ret
mov
dec
or
xor
add
or
sbb
aam
out
fcmovu
aad
jae
int
test
mov
pop
jne
inc
push
inc
sti
outsl
jnp
shl
dec
xchg
inc
mov
mov
sbb
inc
lods
aam
bound
add
push
mov
out
sbb
lahf
xchg
popa
dec
mov
sbb
dec
into
fwait
leave
test
mov
dec
fnstcw
int3
add
insl
out
into
sti
mov
jo
mov
pop
mov
jecxz
out
inc
and
negl
roll
sub
adc
jbe
mov
repz
dec
and
or
in
fisttps
imul
aas
cld
ret
add
pusha
jo
xor
out
push
rorl
daa
dec
mov
mov
out
adc
mov
sub
jmp
cmp
inc
push
shrb
sub
or
sub
mov
mov
adc
adc
mov
mov
adc
mov
adc
out
push
cmp
rolb
or
xor
and
jno
sbb
das
and
jne
or
pushf
rclb
push
push
add
pop
mov
ret
cmp
repnz
or
lock
sbb
mov
sub
sbb
sbb
cmp
add
adc
xchg
push
mov
mov
cmp
outsb
mov
fdivl
hlt
cmp
shlb
xor
cmpsl
jno
cli
incb
out
lea
lret
push
xor
push
outsl
repz
inc
push
scas
imul
push
fisttps
push
add
sbb
mov
imull
adc
sbb
in
loope
xorl
push
mov
mov
orl
pop
jle
inc
clc
ja
inc
mov
mov
fimull
push
xchg
mov
shll
loope
nop
int3
dec
add
repz
ret
call
aam
sti
gs
out
jb
sbb
adc
add
sub
not
jmp
mov
sbb
and
mov
scas
nop
sub
arpl
in
mov
sbb
call
ja
pop
mov
or
cmpsb
fistps
mov
xchg
fmull
aam
mov
adc
mov
fdiv
adc
mov
jg
out
in
push
std
push
js
xor
xor
aas
mov
sti
loop
xor
xchg
fiadds
add
inc
jp
pop
dec
rolb
mov
or
repz
and
mov
and
repnz
xor
jo
mov
lcall
sbb
adc
or
adc
mov
adc
pop
mov
cmp
data16
imulb
jp
sub
pusha
call
xor
push
inc
inc
sti
sub
popa
mov
adc
sahf
or
lahf
push
lret
dec
rcrl
rcll
dec
push
or
or
xor
xchg
rep
fimuls
in
jl
lds
in
and
add
jmp
mov
mov
mov
sub
jl
add
mov
fwait
mov
sub
repz
lcall
jne
sbb
scas
or
repz
xor
mov
loop
movsl
ret
cmp
shll
xchg
sbb
lods
mov
sarl
or
sub
sbb
std
jp
sbb
adc
jle
sbb
add
cmpsl
in
or
mov
jmp
and
cs
jno
pusha
sub
js
lea
out
dec
jmp
mov
inc
push
stos
or
mov
fmull
and
and
stos
rcr
xchg
inc
or
xor
push
lea
xchg
lcall
ja
add
stos
pop
repnz
iret
mov
das
rol
mov
and
push
aam
pop
pop
lahf
mov
jnp
outsl
sub
out
in
cmp
mov
adc
add
test
jecxz
xlat
call
aad
pop
nop
xor
mov
jg
and
or
adc
enter
xchg
divl
dec
and
mov
and
repz
loop
mov
or
inc
xchg
jecxz
or
xchg
popf
or
sbb
xchg
sbb
ss
fs
fmull
icebp
aas
sbb
or
lods
scas
or
add
push
or
addr16
or
arpl
xor
sub
ss
in
cmpsl
in
push
je
add
or
sub
or
lcall
icebp
xlat
or
xchg
nop
inc
or
cld
and
or
inc
mov
or
fsubrl
rcrb
jns
stc
mov
xor
xchg
or
adc
xor
mov
mov
or
sarl
inc
movsb
dec
testl
sub
xchg
or
cmp
jmp
mov
mov
mov
movsb
jl
or
sarb
mov
lcall
adc
xor
xor
or
mov
addr16
imul
cmp
pusha
mov
fcoml
outsb
sub
push
in
sub
pop
cs
les
adc
pop
dec
lds
mov
fcomps
fcompl
sahf
addr16
cmp
ljmp
orb
fxrstor
dec
bound
sbb
fidivrl
mov
bound
sti
jl
cwtl
sbb
jae
fiadds
scas
in
or
jp
inc
cmp
xchg
or
call
fwait
mov
sub
xchg
subl
shlb
cmc
cmp
push
in
popf
xlat
clc
std
jae
mov
xchg
and
dec
mov
xchg
and
sbb
lods
hlt
out
mov
push
or
dec
xchg
sahf
dec
or
cmp
or
mov
fildl
fdivs
enter
xchg
fs
or
inc
adc
adc
clc
mov
push
or
aad
mov
sbb
dec
and
mov
push
xchg
in
stos
sti
out
sbb
sbb
xchg
sub
add
inc
jl
mov
testl
dec
enter
or
out
pop
hlt
fisttps
daa
cmp
adc
inc
test
mov
or
mov
out
sbb
lds
add
mov
fbstp
xchg
adc
push
adcb
adc
jg
jb
and
mov
pop
stos
test
jge
mov
or
pop
insb
imul
mov
mov
add
outsb
cmp
pop
mov
pushf
lea
inc
sbb
or
xchg
das
jmp
out
lds
jp
or
js
or
bsf
mov
dec
adc
aam
or
jns
xor
fldcw
data16
push
pushf
or
push
pop
sub
mov
nop
sub
fs
shl
lods
ficoms
sbb
cmp
out
mov
jecxz
push
les
gs
sub
pop
iret
mov
leave
push
adc
sub
sub
adc
jmp
cli
dec
popf
xor
test
mov
in
xchg
xlat
cmpsl
sahf
data16
xor
loope
lock
xor
in
iret
ret
lahf
xchg
lods
leave
or
ret
push
sbb
aam
movsl
adc
push
test
dec
sbb
popa
sti
dec
sub
movsb
es
testb
or
call
xor
push
test
inc
roll
lock
out
xchg
xor
or
or
jecxz
loopne
push
pop
sbb
jb
fcompl
fucomi
and
repz
adc
sbb
lods
inc
sub
out
int3
pop
xor
dec
or
or
push
mov
pop
add
pop
lods
movsb
in
push
popa
lcall
or
mov
js
cmpsb
and
repz
or
test
int3
jge
mov
push
inc
add
pop
mov
mov
jecxz
arpl
sbb
dec
lahf
out
push
dec
mov
test
or
mov
cmp
js
rcrl
int
or
xor
cld
dec
dec
mov
or
sbb
and
push
insl
xchg
xchg
decl
imul
push
popa
or
clc
das
jp
or
lds
mov
lock
in
dec
cmpsl
sbb
or
cli
negl
iret
add
pop
and
or
ss
loope
sub
add
adc
jl
dec
dec
nop
mov
lret
mov
or
add
xchg
and
cmp
xchg
or
jp
sbb
pop
insl
sbb
pop
ret
or
xlat
push
in
sub
jmp
mov
jno
or
rcll
push
mov
or
cwtl
xor
repz
cmc
mov
jmp
ret
push
ljmp
imul
inc
inc
mov
push
or
roll
mov
mov
nop
or
aaa
dec
add
inc
or
iret
cli
pop
dec
push
cmp
gs
mov
fimull
cli
xchg
xchg
subl
daa
dec
pop
in
shl
and
cld
cmp
push
lods
adc
mov
pop
pop
pop
and
jl
das
mov
in
pop
cmc
push
mov
std
mov
fstl
inc
cmpsb
or
iret
repnz
cmpb
jmp
and
ds
lods
std
sti
push
das
fcmove
ss
fisttps
add
lods
push
xor
push
sub
test
mov
adc
xchg
or
fisttps
or
fs
sub
push
das
scas
mov
sub
dec
lahf
push
lods
mov
push
cltd
mov
xor
jns
pop
pop
or
jmp
xchg
mov
popa
dec
add
pop
adc
lret
dec
in
cmp
xchg
in
pop
mov
adc
xchg
js
sbb
lret
or
lret
sbb
int
mov
andl
pop
jne
or
enter
or
stos
jecxz
push
or
dec
mov
addr16
aaa
xchg
mov
mov
mov
scas
adc
inc
leave
iret
sub
mov
adc
add
lds
daa
gs
stos
or
xchg
inc
jnp,pt
mov
mov
out
push
mov
enter
xor
cmp
lods
push
xorb
fistl
lret
dec
mov
xor
xchg
lock
out
sub
adc
arpl
or
fwait
cmp
jae
insb
loopne
mov
or
imul
movsb
popf
nop
cmp
or
repnz
sub
dec
or
inc
adc
push
lods
mov
adc
adc
pop
lea
sub
repnz
aam
mov
pop
jmp
dec
cwtl
add
mov
nop
mov
ss
or
or
mov
mov
or
lret
lcall
sbbl
cmp
cmp
jg
push
bound
xlat
xor
add
mov
sub
or
sub
lea
jo
lcall
adc
mov
or
stos
push
mov
stc
xor
xchg
and
add
cs
cmpsl
loope
or
out
lock
sahf
ret
sbb
pop
mov
push
adc
cmp
and
out
mov
xlat
pop
fs
xchg
or
outsl
inc
sub
pop
push
jl
push
cmp
out
push
iret
test
scas
sbb
data16
or
movl
movsb
pop
std
gs
pop
xchg
add
mov
les
gs
pop
rorb
or
sub
or
pop
sub
cmp
mov
dec
and
sub
adc
push
adc
shrl
sbb
push
in
xchg
jl
lods
add
cli
pop
scas
cmpsb
add
push
lods
add
mov
adcl
and
push
mov
scas
int3
and
adc
in
sub
rol
decb
mov
or
dec
out
nop
ficoml
les
enter
lcall
pushf
add
in
inc
mov
jle
xchg
stos
push
dec
lods
adc
test
xor
in
movsb
stc
nop
aaa
shl
mov
sti
inc
mov
cmc
int3
lods
outsl
stos
jp
sbb
lahf
les
inc
ficoms
shlb
push
jmp
fstpt
inc
add
andl
add
inc
lahf
loopne
ret
push
in
in
and
call
pop
fadd
cltd
inc
fsin
jge
popa
sti
aas
out
jb
cwtl
or
push
add
push
cs
cld
clc
fsub
push
jae
ret
inc
sub
xlat
jnp
movsl
jns
lods
and
sub
mov
sub
mov
dec
lods
in
lahf
adc
jle
pop
add
lret
jnp
or
inc
in
mov
popf
add
rorb
repz
sbb
daa
push
pop
mov
and
lahf
lods
cwtl
ret
and
mov
jmp
cmpsb
imul
insl
cltd
pop
loop
std
cld
mov
out
aas
popf
das
and
pop
inc
mov
mov
inc
adc
insl
add
inc
xor
mov
sbb
sti
iret
xor
and
fimull
cmp
jo
jecxz
shr
cltd
sub
imul
into
fwait
push
sarl
sub
or
push
dec
and
aad
xor
pushf
in
int
fst
adc
inc
push
daa
mov
out
stos
insb
xlat
in
iret
adc
add
mov
xchg
push
jmp
pop
sbb
xor
jmp
jnp
in
rolb
pop
dec
fstpt
push
xchg
rcr
dec
cltd
pop
xor
dec
pop
jmp
in
mov
stos
sub
lret
scas
jl
movsl
shrd
mov
sbb
lea
xchg
cs
mov
hlt
mov
push
scas
cwtl
add
in
push
mov
jmp
fdivrl
pop
sbb
and
ret
cltd
jmp
mov
cld
mov
cmp
rcrb
mov
stos
sahf
lret
addl
pop
sub
inc
pop
outsb
fwait
inc
insl
std
es
xchg
pop
adc
cltd
jge
push
dec
mov
bound
loop
mul
inc
mov
adc
sbb
pop
sub
mov
ljmp
jo
out
stos
push
cmp
xor
stc
push
loopne
arpl
daa
jmp
jnp
mov
inc
dec
mov
loope
scas
or
push
cli
aam
popa
popf
nop
movsb
adc
aad
cmp
and
out
jl
dec
mov
les
popf
jae
lahf
push
mov
push
movsl
jnp
sbb
pop
or
xor
jmp
or
int
lcall
aaa
mov
lcall
cltd
xchg
aam
adcb
mov
ret
xor
jle
inc
lret
out
push
movsb
mov
pushf
rep
add
xor
dec
lret
inc
mov
repz
add
mov
insl
mov
xchg
jne
lret
rorl
sbb
or
ds
das
inc
xor
cs
fcmovu
add
movsb
lcall
add
or
add
push
lds
adc
jmp
or
mov
jmp
sbb
mov
or
pop
sbb
add
test
sbb
popf
pop
ja
es
xchg
dec
sarl
lret
and
outsb
sbb
push
leave
jns
xor
jle
data16
cmpsl
jae
ret
jno
addb
mov
fistpll
lea
sbb
sbb
or
dec
cmp
or
sub
cmp
inc
call
sub
xchg
sahf
mov
cs
adc
inc
cmp
xchg
adc
int3
fisubrl
jp
bound
or
es
add
pop
add
orb
dec
addr16
icebp
jnp
or
out
xchg
sub
stc
lods
or
jmp
sub
mov
or
out
lds
ljmp
push
lret
cmpsb
add
add
sub
xor
sti
daa
stos
and
icebp
push
hlt
outsb
call
insl
in
xchg
mov
mov
aaa
xchg
push
mov
jmp
cwtl
mov
bound
lock
mov
mov
adc
icebp
cmp
sub
sbb
inc
xor
xor
addr16
cmc
lods
ret
pop
imul
adc
cwtl
popl
push
aam
loope
dec
movsl
mov
xor
out
lahf
cmp
cmpsl
test
aaa
pop
mov
adc
ret
out
shrb
flds
cmpl
mov
aad
test
ljmp
shr
inc
xor
lcall
sub
fadd
dec
loope
pop
fbld
add
mov
jg
pusha
add
fsubp
das
or
add
loop
scas
inc
sbb
jmp
add
iret
cmp
cs
mov
xorb
std
orb
cmp
icebp
sbb
mov
push
mov
mov
push
lret
jne
cmpl
sbb
sbb
nop
jo
jne
incb
cmp
xchg
insl
rcl
mov
cmc
adcb
pop
add
or
in
in
jne
push
repnz
inc
jb
jae
jmp
xor
rorl
mov
mull
adc
dec
inc
and
dec
push
popf
add
scas
or
xor
xchg
add
inc
pop
lods
shl
movsl
cld
sbbl
cmp
or
into
mov
or
std
cmc
cmpsl
jmp
cmp
call
dec
fidivrl
mov
jns
sbb
sub
or
mov
push
lods
dec
in
lret
lods
adc
aas
sbb
out
inc
out
sub
mov
dec
mov
outsl
gs
add
sahf
repz
lret
push
adc
mov
mov
cli
xchg
cmp
sub
cmp
icebp
xchg
popa
or
test
cs
or
imul
mov
lods
fdivrs
pop
pop
or
xor
aas
das
std
scas
or
mov
or
hlt
lahf
mov
loope
ja
jb
shrb
adc
pop
jbe
mov
ret
pop
sbb
or
and
jge
push
orl
in
scas
data16
add
adc
mov
or
mov
xor
jecxz
push
jmp
and
cmpb
push
lock
dec
scas
mov
xchg
adc
rolb
jl
push
xchg
xlat
pop
stos
scas
mov
xchg
or
push
int3
adc
mov
adc
hlt
xor
subb
into
or
in
insb
xor
jl
push
sbb
lahf
cmp
sti
fnsave
inc
mov
sub
dec
xlat
cmc
mov
arpl
push
inc
mov
cmp
jg
or
push
outsl
cld
or
divb
mov
orb
pop
sub
mov
sub
or
mov
shll
xchg
push
or
mov
testb
aaa
mov
out
ljmp
incl
das
jne
lea
or
mov
mov
out
add
repnz
ret
sti
lods
sub
pop
jle
xchg
popaw
gs
cld
cld
lods
decl
adc
test
push
adc
cmp
adc
mov
or
sub
js
inc
stos
test
sti
sbb
mov
lds
ret
sub
dec
or
adc
or
mov
pop
hlt
rolb
adc
pop
sbb
data16
or
int
test
sub
addl
add
in
xchg
clc
stos
push
mov
lods
repnz
ja
push
mov
jl
xchg
popf
sbb
mov
inc
movsb
loop
or
jno
loope
lods
push
xchg
sbb
inc
in
je
out
push
mov
and
shll
pop
lcall
add
cmpsl
aas
or
cltd
popa
push
inc
ja
icebp
lds
mov
or
sbb
push
pop
shll
lret
and
cmp
insb
fmull
sbbb
loop
sbb
and
or
xchg
aas
dec
adc
add
inc
jle
mov
xor
aas
add
lods
and
add
rorb
lods
imul
test
jmp
mov
mov
jge
or
push
add
push
xchg
pop
outsb
or
dec
sar
or
xchg
lea
cld
and
mov
sarb
popf
loop
xchg
push
inc
movsb
lret
sbb
jmp
and
popa
outsb
ds
sub
pushf
adc
xor
sub
xor
sub
orl
or
xor
imul
or
loopne
in
test
mov
jl
push
data16
and
dec
xor
int3
and
inc
mov
pop
loopne
cmpsb
jae
idivl
dec
lods
dec
fcmove
sbb
hlt
aaa
xor
add
fnstsw
pop
sub
je
xor
mov
or
stos
aam
nop
in
or
push
hlt
mov
inc
fs
fists
subb
cmp
adc
jnp
std
lahf
dec
dec
xchg
lods
xchg
cli
lds
rorl
mov
or
push
sub
or
stos
out
std
or
mov
das
push
leave
inc
inc
lds
mov
xor
or
mov
paddsb
push
jecxz
xchg
pop
jae
fwait
es
add
and
inc
push
or
sbb
sub
addb
or
dec
sbb
push
jle
pop
and
outsb
into
and
or
cmpsl
push
fwait
mov
stos
loop
es
dec
pop
mov
sub
rorl
push
sti
inc
dec
clc
adc
mov
pop
and
jmp
jg
dec
test
sub
mov
or
dec
sub
repnz
jle
fnstcw
jl
mov
push
cs
inc
aaa
lods
pop
or
shrb
icebp
mov
jne
popa
dec
fisttps
movsl
xchg
nop
sbb
loop
sarl
jnp
test
dec
in
test
cmp
paddw
xor
gs
xchg
xor
stos
std
jne
lret
sbb
cld
inc
cmp
jae
jb
or
xchg
fisttpll
ja
daa
mov
adc
dec
sbb
jno
xchg
or
sub
or
jp
mov
leave
jnp
mov
loope
addb
push
and
or
sbbl
mov
in
frstor
jge
and
mov
xchg
mov
psubusw
sarb
jge
cltd
loop
es
pop
jne
cwtl
add
in
mov
and
in
mov
push
and
xor
movsl
adc
add
mov
mov
cmpsb
inc
cmp
or
rclb
mov
lcall
add
in
mov
jmp
push
or
inc
lods
ret
inc
jle
mov
push
add
sub
aaa
add
xor
mov
dec
cmp
cltd
int3
xchg
popl
fcoms
lods
int
addr16
adc
nop
push
pop
push
pushf
or
ds
stc
or
jb
hlt
mov
or
loop
enter
movsl
dec
adc
lret
jl
or
iret
mov
fisttpll
pop
repz
sub
xor
into
and
push
adcb
or
and
nop
dec
cltd
cmp
dec
add
adc
adc
or
fs
xchg
sub
out
or
mov
insl
mov
rolb
rcr
xor
and
in
mov
adc
jo
dec
mov
arpl
fists
daa
cmp
shlb
pop
test
stos
adc
pop
adcl
or
out
push
into
cltd
enter
lret
jmp
jle
rcrl
fmuls
scas
es
add
push
dec
add
inc
call
les
js
gs
or
dec
loopne
xchg
or
orb
or
mov
sbb
or
lret
pop
in
testl
in
insl
leave
pop
pop
mov
jno
movsb
sbb
adc
jmp
inc
int
imul
cmovnp
inc
mov
jne
lods
jge
or
cmp
lds
xchg
pusha
stos
or
stos
scas
into
jecxz
sub
xor
leave
mov
and
mov
insl
ss
aaa
outsb
inc
xor
or
dec
push
add
cmpsl
arpl
adc
int
or
xchg
pop
and
add
or
mov
sahf
mov
insl
std
int3
mov
out
test
adc
ja
xchg
adc
jp
aam
cs
icebp
flds
jl
out
sbb
mov
andl
test
dec
adc
lahf
dec
pop
inc
daa
in
xchg
test
scas
jle
push
xchg
lcall
jb
or
fiaddl
out
push
pop
sbb
mov
push
jmp
add
lods
sub
out
scas
jb
jb
or
push
scas
insb
ret
js
aas
adc
shl
cmc
push
jmp
add
adc
push
add
or
gs
lods
adc
fsubrs
mov
cmp
in
fmull
or
or
mov
jmp
push
adc
ljmp
enter
lods
inc
cli
fstps
rcrl
and
int
push
ljmp
out
shrb
xor
pop
mov
popf
fimuls
mov
mov
fsubrs
or
test
lret
ja
nop
pop
mov
jbe
std
pop
repz
jge
mov
into
or
in
fsts
sub
cmp
pop
std
or
scas
in
outsl
mov
divl
or
sarb
repnz
pop
jle
fs
xchg
adc
jecxz
lahf
sub
pop
or
fildll
in
sub
lcall
or
iret
jmp
inc
or
outsb
mov
cs
arpl
mov
mov
movsb
or
sbb
loopne
sub
movsl
xor
xchg
lock
int3
push
sbb
mov
in
and
pop
cmp
push
add
xor
aad
dec
rorb
mov
add
cmpsb
mov
mov
nop
dec
or
jns
lcall
or
or
shrb
loopne
in
and
or
sbb
in
mov
mov
lods
or
push
dec
dec
sbb
notb
in
or
addr16
push
sbb
xchg
jg
xor
es
mov
pop
push
jl
or
cmp
in
or
xorl
mov
icebp
mov
sahf
in
or
aam
and
mov
sbb
or
push
pop
pop
adc
sbb
mov
fcmovnb
cld
cmp
cmp
and
test
sub
pusha
adc
out
orb
aad
dec
test
ja
jg
jno
lea
aam
push
or
cmpsl
pushf
mov
or
mov
andb
add
push
mov
std
sbb
lcall
popf
inc
fsubs
inc
and
sub
adc
fsubrl
pop
push
xchg
rcl
adc
push
mov
sbb
rorl
aad
stos
inc
or
pushf
or
scas
or
dec
and
insb
mov
shrl
outsl
push
or
negb
test
cmp
jp
stos
dec
mov
lods
jl
lods
hlt
mov
into
push
mov
push
xor
push
scas
or
dec
inc
sbb
std
sbb
add
sbb
mov
fimull
and
in
mov
sti
aam
imul
lods
sub
push
or
lret
cmpsl
sub
les
or
inc
xchg
dec
daa
fdivrl
int3
xchg
and
or
add
or
js
cmp
jmp
ret
push
sub
rclb
or
mov
xchg
mov
subl
out
outsb
dec
and
or
out
cmp
mov
jns
dec
dec
sbb
insl
or
xor
out
out
pop
push
jne
jno
ss
lahf
aam
arpl
mov
dec
daa
or
xchg
xchg
addr16
adc
mov
stc
xchg
lods
push
pop
add
hlt
xchg
or
mov
idivl
pop
push
push
and
sub
fists
inc
movsl
int3
or
xchg
pop
sahf
fwait
dec
clc
or
sbb
push
in
sbb
mov
mov
or
mov
pop
movsl
or
push
inc
insl
sbb
int3
adc
enter
js
fldl
sub
fs
add
push
pop
or
mov
lret
lods
dec
bswap
jg
mov
or
sub
adc
push
xchg
mov
test
lret
mov
mov
inc
imul
mov
adc
mov
popa
inc
pop
sub
pop
sbb
mov
pushf
or
cwtl
addb
ss
test
test
add
add
fimuls
cmp
fdivl
push
jmp
out
ret
iret
movlps
add
stc
fstpl
pushf
inc
mov
add
ds
testb
loop
push
ret
lds
or
imulb
dec
jp
pop
js
push
clc
push
mov
xor
test
data16
or
mov
xlat
or
mov
adc
fnstenv
ljmp
scas
in
cmp
or
fistpl
std
or
and
stc
imul
push
or
mov
jg
mov
adc
or
call
mov
pop
mov
cmpsl
es
rcrb
loopne
in
jle
inc
jbe
lods
sub
shll
push
outsb
mov
insb
fcomps
and
aas
pop
mov
mov
push
outsl
sbb
adc
popf
cmpsb
or
movsl
rolb
int3
in
mov
imul
out
sub
adc
cmp
shrl
or
mov
dec
enter
fwait
add
or
xchg
mov
repz
mov
leave
cmp
or
dec
jmp
or
cmpsl
add
test
adc
hlt
mov
mov
test
fsts
in
subl
out
cmp
cmp
scas
es
mov
or
ds
or
int3
inc
push
test
xor
out
or
mov
mov
cmp
andl
sub
in
mov
push
rcrl
or
and
mov
pop
xchg
add
daa
mov
mov
movb
outsb
cmp
inc
lods
or
das
jno
or
ljmp
jb
clc
pop
sub
dec
add
lods
sbbl
xor
popa
and
jo
mov
jp
sarl
xor
repz
push
inc
or
pop
mov
loopne
hlt
jecxz
pusha
lahf
aad
or
inc
pusha
xor
push
mov
mov
add
or
mov
ret
les
mov
pop
fldt
dec
inc
ja
lock
mov
push
jbe
aaa
outsl
sub
sub
jnp
adc
or
addr16
or
inc
xor
add
mov
or
inc
dec
enter
pop
fsubrs
push
push
es
sub
or
sarl
outsl
dec
xorl
shrl
or
jle
aam
dec
mov
cmp
std
sub
mov
mov
dec
loop
addr16
add
cmc
or
mov
or
frstor
sbb
adc
cmp
out
add
outsl
and
movsl
xor
mov
int3
jmp
pop
stos
dec
ja
dec
mov
fwait
mov
or
testl
inc
jmp
nop
testl
in
dec
stos
leave
test
adc
and
mov
cmp
inc
cmp
push
pushfw
movsl
or
lret
inc
sub
cmc
rcr
sbb
insl
sbb
or
cmpb
nop
dec
adc
dec
pop
mov
scas
rolb
loopne
push
inc
jo
imul
or
add
or
cmpsb
sub
sub
mov
mov
sub
mov
jecxz
mov
or
or
fwait
pusha
inc
jle
adc
lods
aad
or
in
adc
jbe
ret
dec
jmp
lret
movsl
cmp
rcrb
push
pop
push
in
imull
inc
pop
xchg
out
jns
inc
repnz
sub
adc
or
fmul
or
sti
dec
xchg
jns
test
sbb
jbe
adc
pushl
add
mov
andb
incb
arpl
ljmp
sub
int3
xor
mov
stos
jl
cli
ds
das
sub
test
popf
out
adc
lret
pop
fidivrl
dec
mov
sbb
adc
out
or
aad
pop
pop
cmp
test
cs
or
add
shlb
pop
add
fiaddl
imul
add
loope
jnp
xor
scas
dec
mov
cs
insl
add
mov
jp
ret
dec
lret
jno
lcall
std
andb
fdivrs
cmp
out
lcall
push
fisttps
pop
push
adc
subb
les
pop
mov
test
cmp
and
xchg
ja
out
inc
dec
pusha
cltd
push
fwait
ljmp
dec
pop
les
cltd
and
lock
int3
in
fisubl
jno
pop
imull
mov
jl
das
xchg
push
push
bound
mov
ret
lret
in
stos
leave
sbb
outsl
add
or
xchg
mov
cmc
dec
pop
add
cs
dec
push
mov
push
add
or
jnp
xchg
fwait
cmp
fisttpll
loopne
mov
cmp
mov
lcall
and
mov
dec
push
mov
pop
out
mov
jne
mov
mov
adc
jmp
inc
scas
out
adc
push
push
mov
loopne
dec
add
xchg
imul
sbb
and
std
scas
cli
in
inc
cwtl
mov
test
movsl
push
add
dec
pop
out
add
xchg
add
cmc
fisubrl
add
iret
in
inc
inc
mov
lods
lea
out
sub
lods
rcl
sbb
or
fsts
insb
out
cmp
sbb
mov
lahf
cld
sbb
cmp
hlt
jbe
mov
fcomi
dec
mov
sti
adc
mov
ret
aam
popf
fcompl
pop
cmp
ss
or
xlat
or
popf
jecxz
rolb
nop
xor
nop
adc
jbe
jne
enter
xor
mov
sbb
cmc
sbb
sbb
out
push
sub
shrb
inc
out
int
cmp
cmp
push
sbb
mov
add
push
add
pop
aas
inc
js
pop
ficoml
iret
repz
jl
out
sbb
adc
lret
inc
mov
dec
lret
mov
and
rclb
cltd
inc
mov
aad
add
pop
lret
add
ret
stos
in
mov
mov
scas
jmp
in
dec
add
xor
inc
pop
stos
mov
pop
jg
xor
jno
sub
testb
xchg
daa
lret
sub
jmp
and
push
stc
cmp
lahf
jmp
aam
js
cmp
dec
add
hlt
cmp
add
or
int
mov
mov
dec
jl
xchg
inc
daa
test
or
and
push
in
pop
iret
mov
scas
clc
lret
inc
push
sti
xchg
cmp
jecxz
inc
daa
notb
push
jno
or
loop
scas
fsubl
aaa
mov
sub
jl
aad
lock
fstpt
lcall
aam
inc
push
inc
push
pop
sbb
testl
out
test
xor
add
loop
cmp
dec
add
lahf
test
dec
or
repz
in
push
out
int3
push
add
pop
push
mov
inc
push
in
inc
jns
movsb
imul
inc
add
mov
inc
cmp
fs
sahf
fstps
les
cwtl
pop
outsb
xor
mov
push
bound
and
insl
sub
sub
mov
aaa
outsb
and
sub
lds
sarl
sub
adc
js
int
sub
cltd
pop
push
xor
pop
lods
add
popf
or
sub
push
dec
rorb
popa
push
testb
in
ffreep
je
aad
clc
add
dec
inc
and
xlat
js
in
push
mov
xchg
insl
enter
adc
fs
add
add
loop
dec
jns
jno
lahf
aad
xchg
mov
stos
dec
insb
lret
dec
int3
into
shll
add
push
fs
mov
xorb
fs
sahf
mov
ficoml
pop
lods
jmp
scas
add
sti
add
push
jp
jne
aam
push
lods
sbb
stos
rorb
add
clc
lcall
dec
cs
xor
push
les
rorb
xchg
inc
enter
ds
lds
inc
xchg
inc
outsb
cmc
fsubrl
icebp
mov
sub
lret
js
iret
shlb
aaa
aas
pop
outsl
jno
cs
dec
mov
jge
popa
stos
adc
lods
mov
dec
or
aas
adc
pop
test
iret
jle
or
xor
cmpsb
xchg
sbbl
jp
mov
cmp
in
or
mov
xchg
aam
out
adc
mov
dec
popa
xchg
aam
mov
orb
loope
jp
push
push
jg
mov
xchg
and
mov
push
inc
movsb
repz
cmp
jmp
je
fwait
push
out
sub
pushl
mov
div
xchg
cmpsb
cltd
inc
in
ja
mov
mov
sub
pop
loop
cmp
and
roll
sbb
and
mov
inc
xchg
mov
pop
loop
jecxz
lea
imul
pusha
andl
mov
jle
push
or
adcl
sbb
enter
rorl
xchg
mov
out
lcall
dec
pop
fimull
stos
mov
inc
sti
cmp
ljmp
filds
and
mov
andb
addb
imul
in
shrb
mov
dec
stos
mov
push
inc
pop
mov
mov
mov
xor
int3
cld
into
inc
pop
add
outsb
xchg
aad
rolb
lret
leave
out
sub
loope
push
cmp
lret
or
add
push
sub
daa
outsb
sbb
in
jae
push
sbb
mov
inc
adc
lret
repz
jle
das
cmp
popa
stos
pop
dec
aam
sti
ljmp
cli
dec
into
test
or
sub
in
sbb
push
jmp
sbb
insb
out
xchg
sub
outsl
andb
dec
shlb
in
jl
pop
pop
lret
xlat
mov
cmp
sub
or
inc
out
es
nop
inc
pop
dec
xchg
rcll
cmovge
push
jp
cli
loopne
pop
jbe
imul
mov
mov
jp
pop
pop
in
mov
gs
outsl
lahf
fmuls
adc
mov
stos
sti
out
pop
fwait
or
adc
mov
pop
push
pop
cmpl
mov
in
lods
sbb
divb
mov
and
add
sub
add
cmp
scas
les
add
stos
xor
lret
negb
adc
xlat
jecxz
sbb
mov
scas
repnz
inc
adc
sbb
push
test
mov
xchg
imul
rolb
orb
push
divl
mov
lret
add
call
lret
out
push
xchg
mov
cmp
faddl
pop
pop
sbb
scas
sbb
adc
mov
xor
jnp
popa
xchg
and
stos
or
testb
push
incl
mov
out
gs
sahf
adc
outsl
cwtl
sub
scas
movsl
insl
je
add
sub
pop
pop
adc
aam
orl
lret
ret
or
adc
aad
movsb
jmp
pop
sub
mov
jnp
mov
and
jo
add
repnz
cli
sbb
pop
xor
xchg
pop
push
orl
push
dec
iret
imul
mov
stc
fimuls
ds
push
pop
mov
sub
cmp
orb
mov
or
adcb
imul
pusha
sub
fldcw
das
loope
jnp
sti
adc
cmp
adc
pushf
stos
inc
test
insb
mov
aas
push
and
scas
popa
or
arpl
inc
cmp
jp
xor
shlb
and
loope
roll
push
and
cmpb
and
jns
cltd
inc
add
mov
mov
lret
jo
adc
jg
sahf
push
and
data16
xor
pop
in
leave
push
test
sbb
shll
cmp
adc
mov
pop
sub
inc
mov
lds
pop
jl
inc
jne
mov
sar
pop
arpl
adc
jecxz
movsl
jmp
ret
dec
insl
xor
loope
mov
jne
push
sub
jne
xor
roll
lcall
cmpb
sub
lahf
xchg
sub
and
insl
flds
dec
je
push
fistpll
adc
xor
mov
jne
jb
cmp
add
hlt
xchg
mov
fistps
insb
aaa
mov
repnz
jle
ja
push
push
sarb
das
add
fcmove
push
jecxz
adc
aaa
sub
cmpsb
aaa
ds
xchg
sub
stos
in
in
or
daa
or
lock
inc
sbb
shl
fisubrl
nop
mov
add
sarl
shl
sbb
cltd
fucomip
mov
inc
sbb
in
add
fcmovnu
ret
ss
addb
pusha
inc
sub
inc
cmp
push
mov
int3
xchg
and
lret
test
bound
inc
cli
xchg
mov
cmp
push
and
jmp
or
push
shlb
push
ficomps
ss
je
mov
add
iret
sbb
inc
xchg
in
icebp
cmp
mov
mov
jb,pn
or
rolb
enter
out
or
pop
cld
or
inc
inc
cwtl
add
push
sahf
add
loop
pop
mov
and
lahf
jle
addb
cld
stos
jmp
xchg
bound
add
dec
and
das
sbb
repnz
hlt
or
lret
or
jmp
jge
or
jb
push
loop
push
daa
or
lret
fwait
dec
cld
and
imul
inc
into
pop
std
cmp
adc
adc
xchg
jno
inc
lods
popa
loop
sbb
stos
test
sbb
movsb
add
push
cld
nop
rorb
int3
xchg
dec
into
jmp
sub
xor
sbb
test
mov
ds
xchg
cmp
in
dec
pop
mov
fcmovnu
test
aaa
and
leave
xchg
stc
pop
loop
cwtl
push
js
sbb
outsl
pusha
pop
scas
andb
jae
sub
adc
adc
aad
aaa
xchg
and
loope
push
pop
and
les
mov
mov
or
sbb
out
jbe
mov
call
faddp
jns
dec
sbb
or
leave
dec
xor
flds
mov
mov
insb
aam
jnp
jle
div
sti
cltd
fwait
inc
cmc
les
fsts
lods
addr16
jne
cmc
mov
sbb
sbb
jnp
pop
fs
lcall
mov
mov
push
lea
mov
xor
aam
push
rcr
loope
dec
mov
cmc
or
dec
mov
sbb
mov
mov
cmc
icebp
jb
jecxz
test
loope
push
inc
xchg
ret
cmp
add
jge
popf
shll
rcll
movsb
inc
arpl
pop
inc
stos
jge
jl
add
mov
test
add
test
in
mov
std
mov
lcall
lock
hlt
cmc
filds
and
sarb
in
jae
cmpsl
or
out
push
outsl
fiaddl
in
hlt
fsubl
pop
stos
into
add
in
hlt
xchg
xor
cmp
ja
mov
aam
cmp
pop
and
popf
sbb
cmp
addb
sbb
xchg
call
out
sbb
dec
pop
icebp
mov
lea
fldl
loope
mov
imul
add
iret
cmp
les
jle
push
rolb
jmp
repnz
cli
rorl
sbb
jge
arpl
lds
jb
out
fnstsw
clc
lcall
int
movsb
push
xchg
adc
je
jl
mov
roll
in
shrb
int3
sub
addb
sbb
out
fcomps
or
aas
rcrb
xchg
dec
test
or
mov
outsl
les
fidivrl
adc
sti
and
addb
pop
sahf
cwtl
fwait
or
cli
mov
and
xor
jb
xchg
lods
sub
ret
xchg
xlat
int3
add
adc
mov
into
fadd
repnz
loopne
cmp
mov
pop
ret
inc
push
repnz
pusha
sub
mov
and
adc
aad
sbb
ret
jg
push
shrl
sbb
out
out
ret
in
adc
add
and
jge
test
dec
sub
jge
pop
leave
push
cmp
inc
pushf
cmpsb
call
orb
or
enter
push
in
mov
addr16
xor
aam
inc
les
sbbb
int
adc
scas
in
scas
xchg
or
cmpsl
jp
xor
fiaddl
mov
push
push
stc
sub
push
lods
push
inc
ds
int
jb
in
std
add
push
cmp
add
insl
cmp
mov
js
into
addr16
cmp
mov
ret
fs
push
xchg
sub
jnp
pop
lahf
push
xor
imul
jne
js
sub
fsts
insb
sub
adc
mov
pusha
adc
sbbl
mov
jnp
xor
inc
sbb
and
fdivrs
jge
push
mov
dec
mov
sub
sarb
out
cld
adc
sub
hlt
jnp
xchg
or
mov
adc
jmp
loop
push
repz
movsl
push
sbb
into
xchg
addr16
and
or
cmp
adc
imul
jg
ficoml
and
fnstsw
add
divl
fucompp
and
dec
or
repnz
and
and
orl
pop
sub
xor
pop
lods
add
sub
or
sarb
mull
jecxz
jnp
cmp
testl
cmp
cmpsl
insl
loopne
ret
fiaddl
and
ja
inc
stos
jb
out
into
adc
popf
dec
jae
lock
sbb
lea
and
jmp
out
sbb
ret
dec
jno
lret
repnz
cmp
xchg
pop
daa
fcmove
sarl
push
fadd
mov
and
out
pop
nop
outsb
test
jnp
lods
call
cmp
xlat
inc
imul
movups
dec
or
out
xor
test
or
jns
or
or
enter
push
mov
aas
mov
inc
mov
pop
pop
hlt
stos
jne
scas
pop
cmp
sbb
pop
shll
popa
pop
mov
test
je
xor
popf
rorl
cltd
add
mov
cmpsl
and
adc
out
add
popa
cli
jns
mov
and
int3
and
adc
frstor
or
xor
xor
negl
pop
sub
jno
jge
mov
add
test
out
das
ljmp
inc
imul
mov
add
mov
sbb
jbe
adc
fwait
dec
pop
insl
loopne
int3
nop
jl
subl
xchg
mov
jno,pn
mov
out
imul
jle
arpl
dec
faddl
inc
xor
xchg
inc
iret
push
lret
pop
enter
dec
idivl
dec
jns
sti
pop
inc
dec
cmp
add
in
insl
jb
sub
fs
lods
xchg
sbb
cmp
push
and
jmp
lahf
jne
mov
mov
ret
push
dec
xor
adc
push
aam
hlt
add
and
dec
sub
subl
shl
aam
and
cs
test
scas
aam
fiaddl
fdivl
ja
mov
sbb
aad
ret
cmpsl
testl
cmc
jl
adc
inc
mov
xchg
daa
cmovle
xchg
adc
cwtl
xchg
sub
mov
outsb
mov
daa
sbb
adc
xchg
cld
mov
and
lods
shlb
or
in
loop
cmp
pop
dec
sti
mov
fsubrl
in
xchg
mov
pop
xchg
add
lcall
call
cmp
push
lret
fucomip
lcall
push
leave
push
jmp
jne
repz
or
inc
dec
rclb
push
and
out
adc
mov
repnz
imul
lds
fwait
mov
sbb
jle
stos
jle
bound
dec
pop
sbb
divl
add
jecxz
mov
outsl
adc
adc
nop
inc
iret
in
mov
or
out
bound
push
pop
sbb
dec
call
je
test
push
imul
add
repz
pop
mov
adc
fdivl
ljmp
dec
les
pushf
dec
bound
sub
rcll
or
and
mov
xchg
insl
inc
lods
sbb
sub
pop
dec
icebp
mov
jp
test
mov
pop
clc
in
dec
mov
cmp
add
inc
aad
orb
add
mov
es
jp
cwtl
daa
pop
pushf
ror
pop
addb
jmp
sub
dec
test
cmp
sbb
mov
mov
or
cld
mov
pop
fmull
push
inc
cmpsl
into
ja
test
insb
cmp
cltd
lods
mov
ret
cmc
in
mull
adc
out
dec
inc
push
add
push
or
xchg
xorl
test
aad
mov
ror
repz
pusha
and
mov
add
dec
sub
hlt
inc
aad
jecxz
jno
adc
clc
dec
out
dec
jp
jg
pop
and
in
pop
in
mov
inc
jo
js
and
inc
je
jmp
ljmp
pop
movsl
in
daa
insb
fwait
dec
or
daa
jns
enter
dec
jp
mov
cltd
pop
int3
push
xchg
test
lret
test
arpl
pop
mov
je
test
cmp
jae
outsb
mov
mov
inc
jmp
orl
xor
int3
or
jb
repnz
dec
repnz
dec
test
adc
lcall
hlt
mov
dec
fsubrp
shr
sbbl
daa
jmp
pop
loope
js
in
cmp
push
jno
bound
or
push
fisubrl
stos
repz
insb
mov
or
xor
xor
xchg
ret
into
dec
repnz
push
push
fldenv
add
mov
int3
lret
pop
fwait
or
gs
mov
stos
insb
or
inc
repz
sub
mov
or
dec
push
or
mov
iret
jecxz
mov
push
bound
add
shrb
testl
jbe
pop
add
test
rclb
sbb
mov
cmp
lret
push
or
xlat
insb
adc
xchg
mov
push
lahf
test
mov
jl
mov
into
push
xchg
cmpsl
push
nop
test
out
sub
int3
mov
add
jge
cli
scas
mov
or
jle
jbe
push
push
in
and
adc
add
push
ljmp
push
ds
push
mov
sbb
mov
cli
add
add
js
add
testb
out
inc
pushl
mov
out
stc
sub
cs
lret
lcall
movsb
mov
data16
shl
adc
mov
clc
push
pop
mov
in
icebp
and
dec
js
movb
add
xor
inc
les
loopne
add
mov
push
push
or
push
jg
in
or
push
nop
scas
inc
sub
adc
cld
fiadds
pop
xchg
inc
sub
aas
sub
pop
or
les
sti
popa
lods
jmp
sti
mov
cmpsb
dec
push
stos
mov
or
stos
xchg
add
pause
subb
xchg
out
and
add
push
cmp
in
js
inc
mov
sub
fidivl
popf
sub
out
addr16
insl
rorb
adc
imul
hlt
out
fsub
dec
jb
xchg
pop
jns
add
add
or
dec
enter
lret
out
push
mov
pop
daa
and
or
or
cmp
adc
xchg
addr16
xchg
push
inc
lret
sti
outsb
jmp
sbb
adcb
pop
pusha
fwait
pop
ret
dec
dec
jns
jmp
adc
inc
push
testl
andl
jle
inc
inc
dec
jno
fsubs
mov
xchg
es
test
icebp
aam
int3
stos
and
fcom
test
adc
mov
fsubr
mov
dec
adc
add
lea
loopne
xchg
aam
mov
in
loope
ja
mov
jne
mov
add
aad
push
movsb
push
dec
aam
fdivrs
aaa
ss
mov
push
rcl
cwtl
jns
cli
aam
or
fbstp
push
sti
movsb
int3
je
sti
pop
jno
add
jbe
add
sub
push
call
xchg
inc
insl
xor
jno
stc
xchg
push
roll
mov
adc
or
mov
in
sbbb
int3
bound
dec
sbb
ds
outsl
xchg
enter
mov
js
add
mov
xchg
aas
push
dec
or
or
inc
or
imul
xchg
insl
lahf
icebp
xlat
dec
cli
push
sti
cld
fnsave
addr16
push
movsl
inc
or
push
mov
jg
mov
je
xor
jbe
ja
mov
sbb
inc
mov
ja
sahf
sub
mov
xor
push
pop
or
inc
jbe
mov
add
mov
xor
lods
mov
jmp
sbb
adc
testl
or
and
mov
mov
sub
out
mov
pop
push
in
mov
lods
pop
cmp
rcrl
mov
xchg
and
mov
fbld
push
or
jle
js
into
add
fldenv
stos
mov
push
daa
adc
ss
or
outsl
mov
outsb
fisubrs
and
out
inc
or
roll
testl
in
push
xlat
mov
popf
cmpsb
movl
sub
pop
mov
and
inc
pushf
lahf
mov
mov
sbbb
imul
and
fiaddl
mov
pop
jmp
push
outsl
les
add
jne
loope
add
hlt
add
sahf
shll
aaa
add
fimull
enter
mov
xor
dec
std
jnp
pop
or
cmp
sbb
or
fists
mov
jo
sahf
aaa
adc
pop
xor
jns
push
adc
stos
pop
leave
stos
pop
loope
mov
frstor
push
stos
push
pop
mov
sbbb
dec
inc
xchg
sub
mov
dec
push
in
inc
pushf
xchg
jp
inc
pop
cwtl
pop
cmpsb
pop
mov
mov
fidivrl
or
sub
mov
mov
xor
pop
cmp
sahf
in
aaa
mov
and
iret
test
and
mov
inc
push
pushf
push
push
lret
fs
cld
sbb
repnz
dec
and
insl
jne
mov
mov
cltd
adc
bound
pop
push
xchg
int3
mov
add
lods
and
or
getsec
outsb
jb
push
enter
inc
cmp
mov
arpl
add
or
movsb
jbe
sub
xor
lds
jp
mov
sub
push
mov
lock
xlat
pusha
jg
jo
xchg
popa
lds
jnp
jge
push
adc
daa
or
xchg
mov
fdivs
xchg
sti
push
outsb
test
add
cs
lret
adc
stos
push
push
fnstenv
inc
xor
out
xor
out
cmp
cltd
xchg
dec
repz
pop
enter
xchg
pushf
and
xchg
mov
imul
aas
mov
or
icebp
out
ds
lret
lds
dec
mov
push
sub
stos
inc
popa
push
call
ret
sbb
lods
mov
inc
rorl
mov
sub
cmp
mov
or
inc
push
jbe
mov
xchg
pushl
and
ret
mov
mov
jae
xchg
sub
add
xorb
xor
sti
jo
out
cmc
or
pop
xchg
bound
in
andl
daa
lea
rcll
out
mov
cmp
pop
jl
lods
adc
or
aam
dec
push
mov
decb
out
sbb
cmp
xor
mov
lods
jecxz
or
push
cs
cmpsl
dec
pop
sub
add
out
jmp
sbb
test
adc
mov
scas
push
ss
dec
dec
testb
or
scas
sbb
cs
cmp
xor
scas
aaa
repnz
sarb
and
mov
mov
mov
jae
addr16
mov
cs
ljmp
mov
sbb
lret
jmp
sub
mov
dec
mov
push
js
push
loop
add
xchg
shrb
jns
inc
sbb
or
cmp
mov
xchg
sbb
jno
or
jle
cs
adc
js
aas
arpl
push
out
cmp
f2xm1
sbb
stos
jns
sbb
or
scas
std
dec
add
add
sbb
mov
mov
ret
jno
repz
int3
mov
test
and
adc
hlt
push
push
daa
fistps
pop
loope
sub
mov
lea
in
mov
mov
push
jg
adc
sub
testl
cmp
adc
or
adc
rcl
andl
push
push
call
jl
adc
push
add
add
cmp
stos
mov
stos
cmp
jnp
xchg
mov
jne
inc
xchg
movsb
pop
loop
dec
out
popf
push
in
pop
add
inc
sub
jmp
push
pop
jle
cmp
add
shrb
loopne
popa
inc
cld
cmpsb
es
sbb
icebp
sub
lret
test
xor
loope
int3
stos
mov
out
or
fisttps
ret
jbe
or
jbe
mov
mov
ljmp
repz
fisubrs
add
xor
popf
mov
inc
inc
stos
adc
push
call
jp
in
insl
rcrl
mov
add
push
jmp
bound
or
sub
xchg
popa
mov
jmp
imul
and
in
out
mov
fdivrl
testl
sub
out
outsb
xor
pop
js
jge
pop
shlb
scas
add
out
cmp
push
adc
jne
and
push
and
pushf
outsb
pop
repz
pop
cld
adc
js
xchg
addl
pop
inc
daa
or
rolb
adc
andl
divb
mov
popf
cmp
jl
imul
scas
jb
and
lret
sbb
clc
push
das
or
cli
out
inc
pop
cltd
pop
les
fdivs
andps
adc
pop
or
add
jg
imul
into
add
cmp
pop
jns
pop
cmpl
and
cli
aas
xchg
sbb
aad
aam
sub
pusha
lret
xor
push
pusha
iret
leave
loope
js
or
cmp
daa
insb
mov
iret
mov
or
mov
or
sti
sbb
push
jp
gs
scas
pop
or
sbb
add
jl
fimull
xchg
add
xchg
fs
int3
xchg
in
dec
xor
sub
sar
xor
adc
adc
sub
push
sub
push
mov
notl
dec
lret
and
mov
jmp
cmpsb
jmp
or
sbb
and
pop
dec
fildl
mov
cmpsl
or
out
jns
or
rorb
pop
popf
cmp
outsb
cmc
ret
jnp
jp
push
sahf
sub
push
mov
add
sahf
xlat
push
ret
adc
and
push
xchg
mov
sub
jl
sti
daa
scas
incl
rolb
push
jp
rorl
sub
subl
mov
xor
addb
int3
fucomip
sbbl
adc
into
in
push
mov
gs
rcrb
outsb
bound
xor
in
inc
inc
mov
sub
sub
ja
pop
scas
mov
pop
pushf
outsb
lods
rcl
outsl
jge
xchg
outsb
mov
sti
push
sbb
gs
pop
pop
add
xchg
mov
mov
fnstenv
xor
imul
sub
xlat
jmp
xorb
cmp
cmpsl
pop
hlt
inc
rol
out
int
xchg
sbb
jae
shll
dec
lds
loop
xchg
std
mov
sti
xor
mov
scas
lea
jp
and
sbb
jns
mov
loop
stos
loop
faddl
push
mov
sbb
js
mov
call
adc
cmp
add
sahf
cli
xchg
int3
xor
mov
lock
xchg
je
testb
xchg
jo
movsl
jno
dec
jnp
je
in
ds
xor
insb
jae
and
es
dec
lret
mov
inc
cs
cmp
sbb
xchg
mov
dec
imul
fidivrs
inc
xchg
ret
fidivrs
call
lods
xor
mov
add
xchg
in
jmp
pop
lcall
add
cmp
adc
lret
xor
cmpsb
jge
push
add
or
inc
dec
call
movnti
out
jmp
xchg
add
adc
ret
into
rcll
int
push
cld
jecxz
dec
or
mov
inc
add
mov
shrb
dec
nop
lds
mov
and
and
or
sub
or
lcall
fstpt
jmp
pop
out
adc
int3
pop
pause
or
or
cltd
xchg
or
and
sbb
inc
adc
cli
fadd
ret
inc
mov
bound
es
nop
jbe
fdivrs
int3
xchg
shll
orb
jl
cmp
sbb
iret
cld
aaa
pop
dec
fdivrl
add
sbb
add
mov
lock
cmp
xchg
repz
or
pop
jb
mov
xor
add
sbb
xchg
jg
lcall
scas
push
and
in
jnp
jb
lods
push
push
in
repz
adc
in
and
fwait
or
mov
ret
sub
mov
inc
sti
lock
push
mov
mov
jb
sbb
mov
out
out
lret
mov
loope,pt
jge
or
sub
sbb
ror
xchg
adc
or
out
pushf
sbb
rolb
popf
dec
mov
sub
mov
pop
lret
pushf
adc
push
xor
add
rclb
and
or
cmp
pop
inc
loopne
add
pop
mov
push
inc
sub
pushf
mov
pop
out
sbb
dec
add
cmp
rclb
dec
adc
jnp
pop
in
cld
outsb
adc
dec
pusha
or
je
xchg
sbb
lret
add
das
mov
jns
fisttps
dec
cmpsl
mov
xor
scas
xchg
cs
xchg
adc
ret
mov
ljmp
pop
test
std
jle
jmp
add
repnz
dec
subb
jecxz
andb
and
fimull
sub
sbb
andb
mov
add
mov
imul
inc
test
insl
sub
mov
inc
movsl
inc
push
sbb
loop
out
inc
aam
je
dec
add
in
notb
push
cltd
repz
xor
mov
cli
daa
addr16
jne
mov
lock
jmp
xor
xor
sub
adc
adc
jne
mov
gs
sub
or
aad
loopne
aas
sbb
scas
push
sbb
and
add
mov
ljmp
mov
or
data16
push
das
push
push
mov
aad
out
inc
xchg
mov
xlat
adc
add
scas
aad
adc
push
mov
mov
hlt
cli
popa
mov
pusha
cltd
in
arpl
xchg
jns
xor
push
sub
cmp
add
pop
jne
and
fisttps
sahf
or
adc
inc
and
sbb
mov
les
packssdw
adc
sbb
hlt
mov
fistpl
fisubs
add
std
adc
lods
pop
or
and
out
popf
sbb
std
xor
idivl
lahf
fdivs
xor
add
xor
ds
int
fsubr
xchg
mov
sbb
daa
scas
mov
jno
jo
int3
pushf
ss
popa
testb
ds
adcb
jmp
xchg
ljmp
mov
sub
mov
add
mov
pushf
add
iret
push
daa
mov
add
inc
push
pop
les
leave
ret
cs
pop
inc
lret
or
xor
lret
add
and
shll
mov
popf
pop
repnz
adc
out
ljmp
loopne
or
leave
push
cmpsb
dec
mov
pop
leave
xorb
inc
dec
lock
and
hlt
fst
jecxz
outsb
jmp
pop
movsb
test
dec
inc
mov
loop
js
push
aam
add
inc
shl
inc
cmc
xchg
and
fistl
and
jmp
jne
les
nop
add
sbb
lret
ja
inc
xor
icebp
jecxz
xor
pushf
mov
or
lret
add
ret
xor
and
nop
mov
sbb
xchg
movsl
fisubrl
imul
pushf
jle
dec
fwait
insl
add
aaa
sub
addr16
sub
scas
mov
lock
mov
sub
or
push
jne
xchg
jecxz
jle
insb
or
sbb
mov
jecxz
stc
or
jmp
cmpsb
je
repnz
or
cmp
adc
dec
fidivrs
mov
and
dec
mov
lret
dec
jns
sbb
dec
aam
dec
repz
fisubrs
inc
rorl
adc
xchg
xlat
pop
sbb
js
loop
mov
cmp
fdiv
jmp
out
inc
add
adc
mov
fadd
cmp
bound
xchg
repz
inc
mul
lcall
nop
push
roll
jo
push
xchg
fwait
daa
test
daa
xor
enter
sbb
push
push
adc
imul
mov
data16
sub
sbb
adc
bound
adc
ret
push
push
mov
out
cmpsl
arpl
or
jle
iret
push
enter
sbb
imul
xchg
in
ret
lret
adc
inc
lods
sbb
pusha
dec
fldl
mov
sub
mov
shrb
in
jp
mov
jecxz
ljmp
pop
xchg
dec
int3
shll
shr
xor
imul
pop
xchg
and
push
push
sbb
shl
imul
jecxz
mov
ret
stos
mov
or
fldenv
xchg
inc
lea
cmp
fidivl
test
mov
cmpsl
cmp
push
pushf
stos
fldt
mov
xchg
hlt
mov
xchg
repnz
shlb
repz
mov
or
fucomp
mov
sub
pop
cltd
add
lcall
and
xor
insl
mov
fs
lds
add
push
call
out
orl
jne
sbb
daa
xor
clc
fbstp
push
shlb
add
hlt
sbb
psadbw
enter
add
lds
dec
dec
into
cmp
sbb
mov
adc
sbb
and
lret
push
push
cmc
js
dec
mov
or
imul
in
mov
iret
out
cmp
enter
lcall
inc
or
test
mov
sub
pop
mov
xchg
inc
loope
lahf
imulb
imul
dec
ror
push
fmull
in
fcoms
xchg
out
outsl
scas
dec
pop
push
sub
push
pop
dec
iret
ss
push
cwtl
adc
add
sub
rcl
push
cs
test
out
gs
jge
scas
stos
test
xchg
and
mov
fdivrl
into
sbb
push
roll
jnp
and
adc
add
clc
inc
aas
fwait
iret
fcoms
lods
dec
jb
loope
add
insl
pop
jno
stos
cmc
call
insb
popf
sbb
test
push
pop
and
fdivrl
rorl
int
scas
xor
pop
mov
rcl
pop
push
jle
clc
sbbl
pop
mov
pop
push
lcall
roll
or
lods
out
fiadds
sbb
and
pop
ja
mov
test
sub
xchg
xor
out
add
or
add
in
dec
jmp
fldl
stos
shll
and
jge
out
add
xchg
cmc
push
pop
xchg
fistpl
lret
jne
mov
push
sub
movsb
in
sbb
out
sahf
sub
lods
or
push
fidivrl
lret
int3
xchg
mov
inc
lods
sub
cld
in
aas
push
pop
sub
adc
push
call
enter
stos
aas
in
loop
pop
push
ja
les
std
adc
sbbl
cwtl
sti
cmp
dec
test
or
cmc
mov
adc
xchg
xor
ret
das
xchg
rcr
aas
adc
rcl
xlat
sbb
les
mov
lods
add
pop
stos
incl
ja
ret
push
jbe
cmpsb
add
pop
dec
jg
inc
pop
and
lock
lahf
mov
lea
addr16
xchg
jl
imul
leave
adc
popa
sysret
or
mov
inc
popa
aad
leave
out
dec
test
and
xor
lcall
mov
lods
xchg
dec
xchg
sbb
sbb
test
adc
lret
insb
cli
sub
push
or
mov
imul
gs
mov
movsl
or
lods
pop
push
scas
dec
mov
hlt
or
ljmp
mov
aas
jb
test
cmp
nop
sbb
cmp
push
out
rolb
out
aas
arpl
cs
xor
sub
sbb
or
js
pushf
pop
or
jo
pop
inc
or
jl
dec
das
or
cmp
and
or
fdivrl
push
or
jnp
je
nop
lret
or
mov
mov
scas
call
rorl
xor
lock
fildll
outsb
adc
test
mov
test
sbb
adc
loope
lahf
jo
rol
push
sbb
lea
dec
push
xchg
clc
cmp
loope
mov
sub
xchg
dec
iret
or
addr16
outsl
or
rol
xchg
orl
pop
jl
iret
jno
adc
mov
icebp
mov
or
sub
mov
mov
mov
divb
int3
fsubl
jl
mov
flds
movaps
sbb
xchg
lds
xor
lea
mov
xchg
mov
jmp
sbb
insl
xor
xor
sbb
xlat
dec
jmp
daa
icebp
add
sub
lcall
in
or
sbb
out
dec
pop
rcll
or
sbb
pop
mov
jnp
adc
dec
add
push
int3
cltd
or
lret
or
loope
xchg
outsb
mov
addr16
addl
sarl
inc
pop
cld
sbb
or
mov
pop
xor
or
movl
ss
cmpsb
dec
or
mov
popf
lods
xchg
or
and
lret
test
lods
sbb
mov
push
inc
or
inc
cltd
fidivs
into
xor
outsb
cmp
aad
lods
cmpsb
mov
les
sub
add
or
push
sbb
faddp
adc
xchg
flds
pop
or
or
aaa
test
pop
dec
or
rcl
mov
out
xor
jmp
or
lds
pop
jge
into
das
cmp
sub
xlat
in
jp
mov
pop
negl
mov
iret
or
mov
rcrb
cmc
addr16
in
xor
or
js
fnstsw
movsl
ret
pop
pop
mov
mov
loope
jmp
sub
push
hlt
or
cmc
inc
sbb
shlb
in
and
iret
cmp
dec
jl
fs
out
jge
ss
lods
cmp
mov
pop
mov
xor
inc
out
or
push
or
push
imul
sbb
mov
jbe
inc
dec
jmp
cltd
jnp
repz
inc
int3
push
dec
dec
adc
lcall
fbstp
data16
addr16
add
or
popf
add
imul
sub
pop
mov
sub
ljmp
xor
in
rol
dec
mov
or
or
out
fistl
out
sbb
pop
orl
pop
shr
dec
jecxz
cmpsb
or
add
sub
and
decl
out
lret
leave
shlb
pop
call
movsl
psubd
shl
pop
cld
in
aad
aam
adc
loope
push
xor
sub
xor
ss
sub
aad
pop
jecxz
test
sub
out
fnstenv
or
lret
mov
int
sbb
adc
and
mov
shll
sarl
je
adc
dec
sbb
mov
ss
push
add
dec
push
fnstsw
rcll
push
scas
fisttpll
shlb
mov
mov
pop
nop
xor
inc
arpl
cmp
xlat
xor
mov
mov
mov
mov
popa
imul
rorb
int3
push
xor
das
sbb
in
sub
shll
pop
inc
sbb
xchg
or
or
jae
push
orb
mov
pushf
or
mov
imul
adc
push
or
inc
les
mov
pop
clc
lret
adc
mov
lds
in
cmpsb
jle
dec
and
rsm
dec
or
xor
cwtl
sti
mov
mulb
add
je
cmp
jg
pushf
movsl
mov
and
test
or
cmpsb
sbb
stc
insb
xchg
mov
pop
pop
aas
mov
or
call
fnsave
out
stc
mov
sub
ljmp
pusha
scas
adc
pop
outsl
or
aaa
and
jl
iret
xchg
inc
fadds
mov
insl
jmp
or
lock
push
mov
mov
and
xor
add
xchg
ret
or
imul
jbe
imul
push
rclb
xchg
out
jnp
mov
insl
bound
lods
lret
inc
or
cmp
jp
jo
imul
push
mov
stos
mov
aaa
daa
movsl
cmpsb
or
push
cltd
mov
int3
mov
in
jo
adc
lods
inc
cmp
or
cmp
and
data16
notb
inc
jo
dec
sbb
sub
xchg
lret
fisttpl
ljmp
and
jne
push
inc
lock
xchg
and
stos
cltd
adc
inc
push
into
or
test
imul
and
lods
in
movsl
inc
out
push
daa
xchg
mov
xchg
or
stos
pop
jne
clc
out
or
stc
xor
aam
push
jnp
xchg
outsb
mov
aad
into
int
and
adc
pop
lds
insb
cmp
push
mov
or
lret
faddl
jnp
mov
mov
cmp
lock
movsl
insl
fstps
pusha
arpl
hlt
mov
or
cli
lods
lods
mov
sbb
scas
pop
in
pop
sbb
popf
add
mov
icebp
or
mov
test
or
mov
xchg
sbb
mov
inc
adc
add
nop
aaa
pop
xor
adc
rcll
out
or
fstl
or
push
pop
inc
push
movsl
fadd
sbb
mov
lea
sbb
ret
or
repz
ss
sub
stc
imul
inc
daa
pop
sbb
mov
or
dec
scas
int3
or
xor
sub
insb
clc
fdivrp
repnz
outsb
sti
dec
or
push
dec
or
pop
adc
loop
xchg
adc
jo
scas
cmp
or
aam
lods
scas
mov
add
xchg
mov
mov
xchg
xchg
ds
lods
pop
and
adc
dec
push
daa
aaa
lcall
ret
lret
loope
ss
and
inc
or
cmp
dec
push
or
jb
insl
inc
or
mov
divl
lret
je
outsb
adc
lods
stos
jle
mov
or
add
movsl
ret
loope
rclb
pop
jl
lahf
or
or
jge
or
jl
or
fucomip
inc
push
or
lock
int3
dec
sub
sahf
sbb
push
cld
bound
add
cmp
repnz
cmp
or
cmp
xchg
shl
inc
and
xchg
cmpb
add
push
cmp
cmp
inc
cmpsl
repnz
adc
rorb
sti
adc
icebp
sub
dec
decb
mov
adc
movsl
lret
mov
shlb
lea
push
push
or
or
push
mov
cmp
in
xor
enter
jne
push
fwait
xchg
rclb
lahf
cld
mov
andb
dec
sub
testb
mov
or
in
xchg
orl
pop
sbb
lds
lods
or
cmc
arpl
aas
add
pop
or
cmpl
xchg
lea
popa
xchg
rorb
push
xor
sti
or
js
pop
icebp
or
push
xlat
movsl
pop
or
push
rol
out
add
stos
add
mov
jmp
test
cmp
loopne
in
or
mov
or
or
xchg
js
or
jae
mov
xchg
xlat
adc
insl
scas
or
jo
je
or
or
cmpsb
or
dec
stos
fidivrs
es
adc
push
dec
or
cmp
mov
xlat
aas
pop
aad
or
xchg
mov
or
push
call
jb
dec
mov
mov
jl
mov
adc
or
iret
mov
cmp
in
push
sbb
cmp
rolb
movsb
je
ror
lods
or
and
es
cmc
aaa
inc
push
xchg
and
lcall
fimuls
rcrl
dec
shl
or
and
sub
fidivl
or
stos
push
jnp
nop
mov
fnstcw
and
or
dec
mov
jg
xchg
in
les
inc
inc
cs
xchg
mov
nop
stos
and
bswap
jecxz
xchg
cmpsb
inc
adc
insl
fldl
mov
fs
stos
test
or
lcall
and
into
add
pushf
sbb
addr16
or
mov
cmpsl
in
pop
cmp
add
imul
push
jno
sbbl
lods
dec
cmp
ret
sbb
or
xor
sub
gs
sbb
sahf
sbb
test
in
mov
movsb
inc
xor
adc
jecxz
jmp
je
out
inc
leave
out
sub
in
into
adc
push
or
data16
inc
or
in
loope
mov
repnz
dec
adc
adc
fxtract
fimull
inc
adc
push
or
dec
adc
pop
and
in
sub
mov
pop
adc
cmp
lret
divl
mov
and
outsb
pop
add
mov
cmp
xchg
cs
mov
jns
xor
cmp
xor
test
xchg
add
push
daa
adc
or
inc
add
mov
jge
cmpsl
test
or
jecxz
lods
pop
lahf
pop
and
push
dec
jo
mov
ret
mov
sub
or
test
ljmp
pop
add
js
push
sbb
add
cmp
in
subl
mov
mov
sub
xchg
jecxz
outsb
cmp
loop
lods
adc
imul
sbb
adc
sbb
sub
scas
fisttpll
jl
sub
cmp
dec
adc
inc
aaa
icebp
sahf
rorb
ss
jnp
add
int
outsl
addr16
dec
pop
sbb
idivb
jns
mov
sti
xor
push
sub
adc
dec
adc
add
mov
mov
jne
andb
jne
sub
mov
loope
icebp
or
stos
sbbl
pop
jmp
xchg
in
xlat
cmp
pop
xchg
negb
rcrl
xchg
cmp
lds
mov
adc
or
dec
les
mov
adc
cmp
mov
dec
and
cmpsl
push
out
daa
int
mov
push
cmc
mov
bound
mov
ret
aaa
addr16
in
add
dec
icebp
adc
orb
push
fidivrl
cmpsl
decl
push
popf
sti
aam
adc
mov
imul
and
or
sub
repnz
sub
insl
adc
repnz
enter
pop
les
jb
sub
dec
test
stc
mov
movsb
mov
cmp
mov
jnp
pop
mov
sub
adc
aam
sub
out
sti
and
aaa
mov
add
ret
mov
cmp
push
ret
clc
jl
aaa
out
das
cwtl
pop
out
cmp
inc
sbb
or
xor
arpl
push
popa
test
or
add
mov
movsl
enter
sbb
data16
push
push
popf
lock
mov
call
and
sbb
push
sub
adc
lret
lods
rcr
outsb
push
lret
enter
inc
xor
mov
lods
fucomp
dec
ret
cmc
shlb
push
cli
cmc
pop
xlat
cmpl
popa
inc
lods
or
xchg
dec
or
and
mov
out
data16
insl
dec
dec
out
sbb
int3
ret
jne
sbb
mov
popl
and
xchg
xchg
fstpl
pop
mov
je
xchg
ret
out
push
pop
cmp
rolb
mov
jecxz
jnp
popf
sub
mov
cmp
sub
jmp
xlat
dec
popa
or
or
fdivrl
sub
and
lds
nop
rolb
or
and
in
call
inc
popa
mov
sbb
ret
fwait
push
jnp
dec
into
push
inc
popa
shll
popf
in
mov
imul
lret
mov
push
mov
out
out
mov
sbb
add
mov
lret
je
jecxz
mov
adc
add
inc
mov
push
and
repz
addl
cltd
mov
sarb
or
or
cmpsl
sub
or
and
jl
loope
int3
mov
out
mov
cmp
aaa
fidivs
mov
inc
ret
inc
cmp
push
cmpsl
mov
dec
fcomps
xadd
sub
add
cmp
movsb
clc
idivl
loopne
mov
mov
xchg
push
data16
jae
pop
mov
sub
cs
insb
adc
scas
sub
xor
adc
js
push
xlat
adc
out
out
fisubl
je
cmp
bound
add
xor
pop
and
sbb
ret
push
push
out
add
dec
push
dec
mov
and
jg
add
jmp
mov
xor
out
lock
adc
out
fiaddl
fidivl
bound
hlt
add
jge
mov
inc
fs
mov
add
stos
orl
daa
popf
push
loopne
lods
mov
xchg
xchg
mov
push
faddp
or
or
or
xor
xor
xor
lret
imul
fsts
add
stos
les
xchg
push
clc
and
jb
mov
outsb
dec
movsl
pop
aas
adc
push
dec
mov
xor
xchg
or
shr
pop
mov
rcl
ret
enter
faddl
jne
sub
push
push
jge
jbe
jl
cld
xor
fnstsw
out
outsl
or
dec
adc
stos
adc
call
cmpl
imul
adc
xchg
sub
mov
sbb
orl
xor
and
mov
int
or
jnp
jbe
mov
cmpl
movsb
in
xchg
mov
adc
outsl
push
jnp
inc
or
cli
flds
dec
xor
test
iret
add
jb
aam
fwait
cmp
je
fildl
fmul
inc
adc
mov
xor
in
addr16
ret
pop
stos
outsb
or
add
mov
pop
add
stc
out
add
pop
pop
fnclex
mov
out
daa
fldcw
push
push
sub
xor
mov
std
sbb
adc
add
inc
sub
adc
mov
movsl
sbb
jl
xor
jmp
or
subl
out
outsb
mov
mov
mov
daa
jno
nop
adc
ficoml
in
cld
jle
sub
sti
stos
movsb
stos
dec
xchg
xor
dec
add
adc
lret
xchg
and
push
jae
outsb
jo
sbb
faddl
cmpsb
into
jle
out
mov
inc
test
repz
cld
mov
add
push
out
lds
jns
mov
dec
add
inc
pop
out
adc
mov
xchg
clc
push
sub
les
out
mov
jle
sbb
inc
rclb
mov
dec
add
push
push
sti
dec
in
faddl
mov
dec
fdivs
dec
add
jno
ficomps
adc
out
inc
loop
add
mov
popf
loope
sbb
shl
lahf
aaa
enter
and
daa
mov
pop
adc
or
out
mov
rcrl
pop
jmp
movsb
jae
insb
pop
insl
push
and
lret
repz
push
sub
in
divl
cld
adc
sub
inc
jge
dec
or
call
test
and
or
jmp
add
sti
insl
jecxz
scas
and
sbb
dec
ds
fildl
pop
stos
mov
xor
lcall
les
out
fisubrl
mov
loopne
pop
stos
je
push
lcall
cmp
insb
cmc
lret
call
sbb
sbb
fdivl
or
mov
pop
xor
in
inc
mov
test
fmull
or
negb
adc
divb
push
mov
and
mov
adc
mov
mov
jns
test
int
popa
cmpsb
push
sub
inc
sub
mov
pushf
jg
add
aaa
inc
push
cmpb
xchg
stos
pop
jb
xor
rcll
xchg
arpl
adc
mov
adc
mov
mov
lods
data16
popa
push
dec
lahf
fmuls
loope
and
cld
cli
clc
push
mov
push
ja
iret
ljmp
xor
pop
shr
adc
adc
push
push
adc
lds
add
pop
aam
cmp
bound
push
adc
xchg
fs
lods
popa
adc
test
popa
inc
mov
ret
andb
int
lcall
in
popa
je
ficoml
rcrl
push
cli
hlt
clc
add
mov
cs
jmp
sbb
fstl
xchg
mov
add
xchg
jo
add
push
rorl
and
jmp
sub
adc
movsb
cmp
mov
xchg
push
daa
mov
and
nop
lock
xlat
sarl
sub
dec
cld
jl
lea
int
xchg
mov
pusha
pop
insb
int
pop
xchg
out
loop
add
pop
dec
pop
pop
leave
mov
mov
mov
adc
or
sbb
negl
sti
rcrl
push
pop
ret
xor
mov
push
add
and
repz
xchg
jbe
xorl
mov
push
sbb
mov
scas
addr16
popf
adc
and
arpl
pop
in
adc
sub
daa
jne
cmp
mov
inc
add
fsubs
out
out
dec
adc
and
push
je
mov
xchg
insb
js
les
sub
xor
add
jmp
adc
sbb
cmp
jl
stc
mov
and
daa
inc
mov
push
xlat
hlt
mulb
bound
adc
cpuid
pop
jbe
out
mov
iret
adc
push
pop
add
pop
les
ds
jecxz
int3
icebp
add
out
das
and
jl
or
xlat
icebp
add
test
jno
cmp
push
xor
or
pusha
mov
push
xchg
sbb
jmp
dec
repz
les
roll
or
and
insb
push
xor
and
loop
int3
jmp
sti
push
add
fisttps
pop
lret
mov
or
sbb
scas
ds
push
cld
fsubl
mov
ds
insl
cmp
xlat
shlb
or
sbb
ret
pop
out
ljmp
inc
pop
sub
or
mov
negl
shrb
pushf
mov
into
adc
cmc
shrb
rcll
push
dec
add
mov
cwtl
cld
es
mov
cmpl
out
inc
cmp
mov
jmp
mov
add
pop
subl
dec
loope
add
out
out
imul
push
int3
lcall
xchg
pop
push
jge
push
or
cmp
add
inc
ds
jae
inc
testb
cmp
add
lcall
lahf
adc
jne
roll
cmp
out
push
decl
int
xlat
scas
add
popa
sti
jns
mov
fldl
insb
int3
mov
cmpb
or
add
iret
daa
imul
loop
mov
fstpl
inc
aad
mov
add
inc
in
mov
rcr
fsubl
out
adc
cmp
lahf
adc
xchg
popa
and
stos
out
dec
mov
add
outsl
mov
xchg
xorb
xchg
mov
stos
pop
and
jge
and
push
shll
push
or
dec
jb
cmpl
sbb
dec
jle
imull
call
test
inc
ficoms
jne
jno
test
je
iret
jecxz
mov
cmpsb
sbb
xor
mov
out
cmpsb
xor
test
pop
andl
push
or
or
cmp
rcll
cmp
mov
out
xchg
inc
mov
add
orl
xchg
mov
iret
sbb
pushf
sti
sbb
mov
leave
xor
jbe
sub
in
loop
sti
subl
add
jns
fldenv
adc
xlat
pushf
insb
pusha
mov
mov
cmp
cli
sub
ret
int
cwtl
out
cs
out
outsb
push
adc
lret
add
pop
int
sub
jmp
jge
or
sti
leave
mov
lret
ljmp
mov
addb
add
fdivrp
jae
or
aaa
ficompl
outsl
aam
jmp
or
add
mov
fstl
inc
inc
cs
pop
sbb
fcmove
out
push
add
aad
ja
adc
and
aad
ljmp
rcrl
and
rolb
testl
sbb
ficoms
mov
xchg
stos
or
push
repnz
incl
imul
shr
pop
ss
lret
fcompl
in
movsb
std
in
dec
sub
outsb
nop
lret
lret
jo
rcrb
inc
mov
cmp
ss
imul
bound
sub
call
jge
sub
cmp
mov
daa
adc
loop
cwtl
prefetch
xor
inc
lds
and
sahf
ret
push
sbb
sub
adc
adc
cmp
mov
test
cs
int3
pop
test
xchg
jg
add
sub
iret
mov
imul
lods
dec
jne
ds
int
mov
ficoml
jl
cmp
xlat
fcom
ret
iret
icebp
jmp
insb
sbb
test
pop
inc
in
xchg
int3
cltd
add
sbb
in
xchg
lock
or
mov
std
jno
and
add
enter
bnd
in
data16
cmpsb
nop
leave
sbb
add
stos
popa
push
faddp
or
push
mov
aaa
inc
sub
xor
dec
inc
mov
repz
incb
iret
inc
dec
das
mov
mov
repz
xchg
cmp
pop
movsb
adc
call
test
push
in
mov
sbb
test
adc
xchg
lods
dec
adc
enter
dec
out
lods
mov
test
sti
cmp
out
leave
pop
xchg
lret
fiaddl
movsl
mov
push
xlat
sbb
dec
adc
dec
push
stos
xor
cli
add
stos
stos
shl
psubq
ss
insb
inc
nop
cmpsl
mov
and
push
mov
add
jne
adc
fadds
ret
xor
decb
mov
sbb
cmc
stos
add
dec
lcall
sbb
sarb
sahf
clc
in
add
cmp
adc
mov
popf
fisubrs
andl
jmp
sub
fcmovnu
enter
add
imul
mov
xchg
xchg
adc
call
or
add
lds
insb
jns
push
fists
rcrb
sub
andl
aam
int
pop
or
sbb
jno
cmp
loopne
shlb
testb
int
xchg
mov
or
jp
bound
mov
cmp
enter
int
stos
cli
outsl
loop
mov
pop
sub
mov
fisubl
sbb
pop
insb
ss
adc
outsb
addr16
push
roll
mov
cmc
mov
outsl
addr16
and
fdivl
loop
push
scas
xor
xor
xchg
mov
mov
out
sbb
sub
and
cmpsb
fsubr
arpl
cmp
int
mov
adc
out
mov
sub
dec
fiadds
insl
fmull
mov
stos
loop
inc
lods
xchg
add
xchg
cmp
and
push
adc
rcrl
mov
mov
lods
int
pop
fsubr
in
cmpb
iret
sub
pop
sub
shrl
lods
cli
mov
pushf
xchg
dec
jnp
mov
arpl
mov
add
popf
aam
ss
mov
scas
and
sub
lahf
outsl
sti
jb
or
fxch
push
or
mov
push
or
in
lret
mov
add
sti
aad
scas
shlb
cmp
cmpsl
add
pushf
int
js
scas
push
push
rorb
icebp
jo
push
nop
dec
mov
ret
lock
xchg
pop
mov
lds
add
rcr
xor
push
fsubrp
or
jp
add
xorl
mov
push
fsubs
mov
insl
mov
pop
insb
cltd
xor
jne
nop
sub
mov
pop
cmp
mov
push
repz
in
mov
scas
mov
and
rep
mov
ret
pop
dec
mov
loope
mov
xorl
ret
add
in
je
cli
mov
sti
rcl
xchg
or
loopne
sbb
loope
sti
pop
cmpsl
scas
stc
insb
or
das
cld
xchg
or
push
xor
hlt
les
xor
shll
pop
pop
xchg
cltd
mov
cmpsb
xlat
xchg
daa
pop
mov
test
fdivl
jb
jb
sbb
hlt
xchg
repz
push
mov
faddl
sbb
dec
cmpsb
leave
add
push
and
clc
xchg
or
into
mov
out
mov
xchg
ret
adc
stos
js
adc
test
lahf
xchg
pusha
pop
dec
daa
adc
xor
mov
lret
shrb
loop
outsl
test
sub
cmpsb
cmp
sbb
scas
lret
pusha
sarl
mov
cmp
sub
insb
mov
ja
or
nop
orb
movsbl
mov
cmpsl
or
mov
les
add
jecxz
out
pushf
sti
dec
dec
pop
mov
inc
fdiv
and
cmp
push
insl
aaa
sub
add
lret
mov
jmp
fstpt
push
xor
jle
cmp
loopne
mov
cmp
xor
movsl
add
sbb
adc
out
lahf
xor
or
mov
mov
sbb
and
xor
leave
lahf
adc
jne
pop
mov
or
and
sub
mov
xor
aas
in
cmp
fs
push
mov
outsb
sub
out
movsl
aas
sub
pop
mov
lret
cmp
push
into
jge
lret
dec
push
cmc
ror
scas
pop
lea
out
andl
cmp
add
and
sbb
loopew
jb
imul
cmp
out
lret
ljmp
add
sbb
lret
aaa
jb
cli
xor
outsb
mov
jbe
or
sub
movsl
fdivl
sub
insl
jle
mull
xchg
pushf
push
loopne
mov
or
fiadds
xlat
sbb
jno
adc
cli
cvttps2pi
pop
adc
jae
pop
out
sbb
push
ror
adc
add
pop
xlat
mov
shrl
xchg
inc
scas
sub
dec
xor
jbe
xor
loop
imul
jp
cltd
bound
daa
mov
dec
jmp
lret
dec
rolb
inc
push
rcll
mov
lock
lahf
push
shrl
xchg
daa
xlat
mov
xchg
mull
xchg
push
hlt
sbb
in
cmp
cmp
fisubrs
test
add
stos
dec
arpl
dec
cmp
insb
sub
fwait
sub
xor
sbb
adc
or
out
into
lret
cltd
stos
mov
sti
xchg
add
insb
pop
sub
fdivs
std
sub
lret
ss
or
sub
cmpsl
push
mov
push
call
ja
pushf
adc
mov
adc
sbb
aad
dec
sbb
sub
int3
js
mov
cmp
call
add
add
xchg
jns
ret
mov
inc
cmp
xchg
xchg
into
mov
shrb
push
cmc
jp
jecxz
out
lcall
lret
into
shrb
inc
xchg
dec
mov
bound
movsl
mov
sbb
aad
and
xor
mov
cmpsl
scas
fwait
decl
ret
and
mov
jns
sbb
insl
stc
xor
cmp
sbb
out
faddl
ret
add
out
ss
pop
iret
lods
flds
in
outsl
xchg
push
jnp
mov
mov
push
xchg
sub
sbb
fcoml
pop
dec
loope
and
push
adc
pop
cwtl
fwait
in
ljmp
jb
repnz
pop
aam
int
mov
jle
lret
jp
push
push
adc
mov
and
mov
push
adc
sbb
pop
cmpb
imul
add
lret
push
enter
clc
scas
sahf
mov
rorl
mov
or
pop
add
inc
movsl
jecxz
add
add
fisubs
xlat
nop
daa
lods
stos
out
add
lahf
xchg
fstp
popf
mov
and
stc
lret
mov
mov
out
mov
stc
repnz
cmp
push
mov
icebp
and
fwait
mov
push
dec
shll
jb
jne
in
dec
xor
mov
cmp
std
push
enter
fwait
sbb
and
insb
ror
mov
dec
addb
jo
dec
stos
and
loope
aaa
call
es
test
or
dec
ljmp
dec
cld
adc
pop
dec
outsb
ss
cmp
shl
scas
dec
add
lods
cmp
add
addb
add
int3
cltd
xchg
adc
push
jg
ds
add
jg
rcll
rcr
lods
sti
jp
outsl
dec
rolb
inc
push
push
mov
loopne
cld
inc
xchg
ja
mov
pushf
push
pusha
pop
je
cld
cmp
jge
test
aam
dec
push
push
and
xlat
xchg
test
sub
dec
inc
cld
xor
adc
mov
js
call
lods
dec
jg
mov
loopne
addr16
ljmp
jmp
std
fisttpl
jnp
jbe
fcoml
adc
mov
stos
adc
sbb
mov
pop
imul
adc
xchg
cmpb
fs
lcall
lock
jnp
out
movsl
ret
and
stc
xchg
pop
mov
adc
sbb
popl
jecxz
push
xchg
pop
push
insb
inc
push
dec
add
inc
test
cwtl
in
scas
jbe
in
pop
sahf
pop
and
mov
inc
push
out
cmp
xchg
jb
push
cmp
insl
rclb
jns
adc
add
mov
cmp
add
pop
test
cmc
cmp
xor
or
inc
push
sbb
rorl
xchg
or
mov
fcmovb
and
cmp
inc
outsl
shll
sbb
mov
lods
add
or
jmp
test
push
int3
cmp
movsl
negl
les
es
fidivs
push
jmp
cs
out
mov
imulb
jb
mov
out
rcll
push
push
lret
stos
xor
sbb
inc
add
cmp
sbb
bound
gs
jae
add
loopne
push
xchg
sbb
cmc
dec
test
xchg
insb
push
lds
jbe
add
jp
mov
or
jge
icebp
sti
dec
push
fisttpll
es
int3
dec
add
sub
jl
aaa
loopne
add
adc
or
xchg
hlt
and
ljmp
popf
pusha
std
cmp
ret
dec
shl
inc
test
inc
aad
cmp
dec
xchg
into
xor
add
rcrb
lea
ja
loopne
sbb
push
xchg
js
or
stc
jl
xor
adc
jnp
jo
and
sti
mov
mov
or
aam
in
sub
popf
adc
push
xchg
lret
inc
add
clc
sub
push
jbe
push
pop
pop
push
sbbb
xchg
push
mov
mov
fldcw
les
mov
xchg
shrl
out
push
movsb
jno
adc
cld
subb
in
mov
jb
inc
xor
stc
adc
fmuls
cld
xchg
push
push
mov
xor
mov
scas
sbb
loopne
cmpsb
add
movsl
stc
dec
mov
pop
mov
out
add
popf
les
call
testl
jb
mov
into
fs
dec
pop
xchg
pop
add
sbb
in
dec
adc
adc
sbb
xchg
std
xchg
xor
adc
sbb
daa
sti
or
notl
jecxz
mov
mov
jno
sbb
test
adc
es
jp
inc
or
rcrb
inc
adc
popa
into
push
jmp
jae
loop
jns
lret
adc
pop
psrld
stos
lret
push
xor
add
cli
xor
inc
das
mov
dec
jb
addr16
in
jne
hlt
test
test
cld
or
int3
mov
aas
jae
add
mov
cmp
adc
inc
idiv
sbb
out
adcb
push
ret
jl
mov
xor
ror
das
aas
ja
mov
lcall
sbb
jg
mov
sbb
rcrb
and
dec
bound
mov
sbb
mov
ret
push
adc
mov
sub
cmp
aad
sub
stos
testl
out
imul
cmp
mov
mov
outsb
std
and
imul
ret
lcall
push
scas
cmp
adc
pop
xchg
push
and
or
mov
pop
sub
out
outsb
cmpsl
test
pushf
adc
mov
leave
aam
and
sbb
cmp
call
inc
ret
in
mov
cmp
ficoms
pop
adc
pop
inc
shll
mov
aam
sarb
jb
inc
jecxz
adc
ficoml
inc
rcll
repnz
dec
dec
loope
xchg
jno
xchg
jne
sbb
adc
pusha
fcoms
add
inc
push
cmp
mov
jne
clc
mov
cltd
fildl
dec
add
add
int3
out
add
das
fnstcw
int
imul
xchg
pop
fdiv
out
das
popa
add
sahf
xchg
lea
cmp
test
add
mov
or
or
aam
add
insl
jne
popa
es
xor
jmp
mov
dec
lahf
iret
movsl
or
cmp
jecxz
ret
adc
cmp
and
ja
js
jg
dec
int3
ret
inc
popf
xchg
cmpsl
int3
add
mov
cli
jmp
mov
pop
int3
into
cmp
les
mov
xchg
fadd
loope
fcoms
and
or
addr16
inc
pop
ja
mov
and
sub
xor
jp
add
ljmp
push
xchg
fcmovu
leave
pop
adcl
xor
push
repz
inc
mov
cmp
jns
lret
xchg
pop
mov
aaa
out
mov
mov
sub
dec
mov
xchg
lock
aad
xor
imulb
jmp
cmp
mov
xchg
test
call
sbb
fwait
jno
mov
aas
fldcw
xchg
inc
cmp
insl
icebp
lods
cmc
sbb
or
div
imul
aad
int3
or
in
and
mov
cmc
lahf
jmp
in
fsubrs
cmpsl
add
xor
xor
or
cmc
loopne
ret
xor
enter
fidivl
or
shlb
xor
xor
fwait
or
add
repz
jl
inc
add
sarb
aad
xor
mov
dec
out
repz
cld
pop
cli
hlt
jne
mov
jbe
add
adc
mov
and
pushf
in
cld
lea
sub
iret
adc
fildll
xor
orl
movsb
sarb
out
popa
femms
dec
cmp
sbb
dec
sub
jae
sub
xchg
push
nop
jnp
cmp
mov
or
or
out
push
mov
das
les
adc
mov
push
lret
arpl
adcl
dec
mov
jmp
mov
cmp
inc
lods
jp
into
stos
stos
aas
pushf
or
sbb
cmp
loope
xchg
and
mov
push
cmpsl
clc
push
push
fnstsw
cmp
aad
idivl
add
mov
add
mov
xchg
orl
add
push
and
push
popa
insl
ret
jecxz
andl
cwtl
and
dec
movl
jns
xor
sbb
dec
sub
mov
inc
insb
jmp
push
xchg
std
mov
mov
bnd
push
test
mov
xor
lock
cmp
inc
or
out
fistpll
jns
rcrl
popf
loop
ds
pop
mov
xchg
push
and
jbe
push
call
jl
scas
addr16
xchg
test
cmp
ret
push
loopne
fs
add
js
rcll
xor
add
pop
push
and
lcall
adc
add
leave
mov
xchg
xchg
or
cmp
mov
in
and
and
sti
leave
push
mov
pop
dec
mov
iret
daa
pop
loope
mov
xor
adc
lret
xor
lcall
or
cmp
rorl
jnp
and
pop
setns
ret
mov
cmp
lret
imul
push
xchg
stos
addr16
jge
out
repnz
xor
sbb
jmp
int3
inc
add
inc
push
nop
mov
cmc
sbb
xlat
insb
sti
aam
leave
outsl
lock
jecxz
dec
repz
fcompl
js
loope
dec
cmp
mov
adc
jns
clc
push
cmpsb
fcmovne
roll
mov
ds
jmp
loop
sub
xor
xchg
fistpl
push
lcall
sbb
mov
add
test
cld
ret
ljmp
pushl
push
enter
ja
inc
push
xchg
mov
bound
out
sub
xor
enter
cmpb
lret
mov
xchg
inc
adc
adc
iret
out
adc
sti
movsb
cmp
sub
push
inc
cmp
push
negb
subb
imul
xor
pop
mov
dec
and
aas
or
cmp
je
add
je
imul
ds
insl
xchg
inc
push
call
jle,pt
fcompl
pusha
jp
das
int3
inc
mov
sub
or
and
or
ret
gs
sti
dec
enter
pop
sti
cmp
cld
push
xor
sti
scas
inc
mov
dec
adc
lds
loop
insb
rcl
outsb
scas
aam
add
jecxz
sub
dec
fcoml
repnz
cltd
add
repz
push
cmp
add
pop
jne
or
in
mov
test
shrb
repz
mov
lea
mov
cmp
jns
imul
ficoms
xchg
cmpsl
adc
faddl
or
cwtl
pop
aad
mov
nop
jns
mov
and
mov
test
std
lret
scas
add
arpl
mov
in
iret
pop
xchg
push
adc
dec
mov
xor
fmuls
jle
test
sbb
hlt
mov
pop
in
icebp
lret
xlat
ficoml
imul
mov
xor
push
out
adc
or
into
in
not
mov
sbb
popf
cmpsb
push
mov
ljmp
mov
lock
adc
cmpb
add
rclb
sbb
jne
adc
sti
mov
sbb
mov
or
es
stos
popa
mov
mov
idivl
cmp
fiaddl
jbe
mov
cmpsl
mov
add
insl
xchg
ss
out
fcmovu
mov
or
es
scas
and
ret
or
ret
int3
add
jecxz
popf
dec
daa
je
xlat
add
aad
mov
stos
out
dec
add
push
sbb
out
push
xor
push
enter
les
lret
xlat
pushf
mov
sbb
and
mov
sub
xor
jns
ja
ljmp
pop
dec
or
insb
or
fldt
push
imul
cmp
nop
rcrl
inc
push
inc
mov
xchg
inc
les
shrl
adc
add
out
jae
mov
inc
cs
xchg
dec
gs
shrl
fcomi
loop
fidivrs
or
jnp
icebp
pop
out
aas
stos
xorl
push
add
iret
push
and
add
mov
pop
inc
push
test
or
push
rorb
out
imul
sbb
pop
cmp
xchg
cmp
outsb
call
pop
add
xchg
ret
sar
jg
mov
push
cli
es
lcall
mov
push
aaa
dec
enter
mov
lock
jb
add
jno
push
roll
add
push
sbb
cwtl
fsincos
dec
xchg
and
jmp
ss
jns
loop
loopne
push
inc
mov
andl
mov
sahf
jle
outsb
xchg
mov
negb
sub
aaa
adc
xchg
enter
mov
shll
pop
lcall
aad
repz
cmp
mov
sar
jmp
xorb
pushf
out
xchg
xchg
pop
imul
mov
out
inc
sbb
insl
or
mov
mov
scas
je
or
cli
cltd
xor
cmp
mov
shrw
fldt
add
push
or
jo
or
mov
xchg
mov
or
push
stc
pop
and
pop
testb
nop
inc
pop
or
dec
inc
push
mov
add
adc
mov
or
and
aaa
jmp
je
lods
add
outsb
add
outsb
ret
jmp
jmp
lret
adc
inc
push
cmp
divl
push
fldt
inc
inc
pushf
lret
sbb
push
dec
jns
jnp
cmp
aad
xlat
fsubs
and
inc
incb
cmp
in
pop
and
mov
dec
out
sahf
add
hlt
popf
addr16
jecxz
call
dec
iret
loop
xchg
adc
add
mov
sbb
sbb
fdivrl
loopne
imul
inc
pop
daa
cli
mov
cmc
xor
lods
dec
mov
addr16
push
pop
test
insb
adc
cli
xchg
adc
mull
mov
cli
popa
lahf
pop
add
pop
divb
pop
dec
and
clc
fwait
add
xchg
lock
in
idivl
mov
mov
jno
xor
or
xchg
adc
add
cmp
into
repnz
sub
inc
shlb
jb
jb
pusha
add
add
mov
in
dec
je
insb
add
pushf
dec
jbe
fdivl
mov
int
push
pop
insl
loopne
std
sbb
push
mov
or
cs
mov
daa
jmp
loop
mov
jb
mov
push
faddl
cmp
nop
xor
mov
je
les
pop
sbb
ja
cmp
sbb
jno
xor
cmc
or
in
mov
data16
mov
push
xchg
int3
inc
aam
popa
sbb
xchg
sbb
ret
lahf
and
cmp
lret
addl
test
and
out
mov
xor
dec
aad
add
push
sbb
add
stos
push
dec
pop
negb
inc
lea
add
pushf
int
adc
sub
sbb
sbb
nop
cli
enter
add
gs
sbb
lcall
fnstcw
xchg
test
into
scas
mov
mov
inc
mov
addl
add
adc
pop
into
jnp
in
mov
jmp
add
fwait
aas
cmp
adc
mov
rcrl
fisubs
add
pop
cmc
dec
pop
jl
rcl
call
mov
repz
and
mov
mov
icebp
fisttpll
shlb
iret
sub
mov
ds
cmp
popl
sbb
mov
inc
mov
mov
xor
subl
dec
lods
movsb
outsb
nop
xchg
sub
int3
cld
adc
dec
int3
mov
mov
mov
lret
jg
sbb
mov
stos
add
in
inc
loope
lret
jbe
out
sbb
pop
dec
inc
push
dec
dec
repz
sahf
sti
push
sbb
sub
scas
xchg
dec
sbb
cwtl
aaa
mov
mov
xchg
outsb
adc
lods
ljmp
mov
scas
push
insb
subb
imul
mov
xchg
call
push
jo
or
add
idivl
dec
aad
ret
std
repz
adc
pusha
mov
sbb
dec
pop
push
int
jmp
call
fcomp
xchg
inc
out
jmp
pop
in
sti
test
ljmp
xchg
adc
lock
mov
or
sbb
or
push
enter
add
and
cmp
std
cmpl
idivl
cmp
jbe
add
sub
mov
mov
adc
dec
xor
sub
ss
std
lds
add
jl
cld
daa
inc
roll
aad
adc
jge
xchg
xchg
push
popa
sbb
push
insl
mov
dec
outsb
sbb
mov
roll
in
mov
sub
nop
sub
xchg
loop
aam
jg
sarl
mov
lods
add
xchg
lods
addr16
inc
insb
push
xchg
mov
sbb
sub
addl
add
cld
adc
repnz
in
sbb
sbb
fdivrs
daa
cmp
inc
in
push
adc
test
add
and
dec
mov
mov
cwtl
orb
rolb
sub
jmp
scas
sub
sub
push
push
and
dec
fimull
adc
lahf
addl
and
or
jo
mov
fimull
ds
push
inc
jp
in
ja
jnp
test
rolb
ja
jp
push
add
sub
cwtl
lcall
xchg
ljmp
ret
fs
int3
jge
loope
jno
add
push
mov
and
lds
out
fs
shl
gs
cwtl
icebp
fistl
jnp
sbb
adc
mov
add
loope
xchg
inc
sub
xor
insb
jae
sub
inc
jne
mov
sbb
jge
aaa
addr16
loopne
aad
mov
xchg
xchg
movb
pushf
lahf
fimull
aam
mov
push
sti
ja
test
inc
jnp
push
and
fsub
jbe
repnz
cmp
in
ds
cmp
cmp
push
push
inc
xchg
sub
pop
mov
test
inc
or
cmovnp
add
xor
xor
push
jae
stos
divl
fisubl
dec
adc
lods
cltd
pop
push
inc
adc
add
push
repz
pop
add
xchg
mov
mov
loope
cmp
inc
pusha
out
xchg
leave
dec
sub
lcall
jnp
cmp
test
cs
xor
repz
shrb
mov
jae
push
addr16
out
aaa
adc
ficoml
xchg
loop
inc
int3
jbe
incb
stos
push
jg
jecxz
or
icebp
mov
cmp
sbb
mov
icebp
push
sub
or
fidivs
pop
lret
mov
jmp
shrb
loope
sarb
jmp
daa
mov
inc
jb
loop
sbb
addl
stc
sti
lds
jmp
ds
sbb
add
stos
ret
sub
push
xchg
rcll
push
ja
add
sbb
pop
xor
cs
pop
jl
out
xchg
fisubrl
pop
sbb
add
sub
xor
push
push
pop
js
mov
pop
pop
adc
cmp
rorb
into
adc
or
int3
pusha
std
or
out
push
lret
cmc
scas
or
bound
mov
jns
cmc
or
cltd
icebp
pop
add
mov
cmc
add
add
mov
dec
jnp
mov
aad
ja
mov
scas
or
outsb
pop
je
add
fadd
pop
mov
xor
clc
je
pop
cld
enter
and
into
ljmp
ljmp
sub
andl
jbe
jl
and
testb
int3
push
jecxz
or
push
jne
mov
cld
and
or
xor
subb
adc
push
pop
pop
lcall
out
add
pop
pop
cwtl
or
mov
add
or
or
and
test
mov
or
mov
daa
lahf
pop
outsb
js
scas
xchg
adcb
pop
in
add
push
xchg
cmovns
mov
adc
and
lods
ss
push
jno
pop
adc
repz
jp
xor
adcb
sbb
cld
cmpsl
add
inc
scas
pop
popl
js
cli
sub
inc
mov
loope
push
and
in
inc
fmuls
add
daa
push
stc
pop
shlb
sbb
sub
test
int3
adc
int3
jbe
jae
adc
push
pop
add
out
popa
shrl
mov
out
rorb
inc
stc
movsl
mov
mov
test
jb
ror
movsb
xor
ds
xor
lret
out
push
or
jge
mov
ds
push
clc
jl
stc
popf
sbb
lds
fists
xchg
daa
push
pop
addr16
addr16
das
test
cmp
mov
mov
shll
test
or
xchg
mov
cwtl
movsb
xchg
lds
add
subl
xor
xchg
clc
iret
push
js
in
ficoml
pop
adc
movsl
lret
jo
in
cmp
inc
shlb
and
lea
mov
pop
and
insb
outsb
adc
adc
pusha
mov
sbb
bound
sbb
es
cltd
scas
xchg
scas
sbb
pushf
mov
dec
cmp
movsb
inc
inc
pop
and
les
jg
cmp
stos
sbb
enter
push
push
sahf
daa
mov
push
stos
sbb
sub
daa
cltd
xchg
sbb
sar
shrb
ja
cwtl
xor
push
xchg
or
out
pop
scas
fcmovu
push
mov
mov
inc
daa
stos
fsubrl
subl
adc
in
das
lahf
loop
sbb
xor
pop
mov
and
pop
or
pop
add
xor
je
ret
in
shll
or
add
sub
add
xor
aad
sub
insl
loopne
and
test
xor
loope
xchg
jb
test
call
push
jp
add
pushf
hlt
lahf
loop
movsl
or
add
dec
cmp
sbb
cld
push
int3
adc
out
cmp
xor
pop
loop
push
daa
out
dec
sub
sbb
or
and
mov
mov
in
xor
test
dec
push
rcrb
ret
stos
cltd
sbb
mov
sbbb
sbb
xchg
movsb
or
push
fdivl
xor
add
cmpsb
inc
cmp
fidivrl
test
rcll
mov
scas
sub
mov
push
incl
adc
pop
pop
mov
or
in
add
fsts
out
inc
pushf
push
mov
xchg
stos
mov
or
repz
pop
into
mov
push
int
arpl
jne
out
std
lcall
in
call
rcrb
mov
sbb
cmp
movsl
icebp
ljmp
out
rclb
add
pusha
cmpsb
das
les
mov
xor
in
inc
loop
or
jne
jge
cmc
rclb
sbb
add
subb
out
outsl
mov
int
ja
sub
shrb
pop
cld
push
clc
lds
xchg
sbb
loop
pop
fisttpl
fadd
out
jmp
xchg
mov
ja
mov
add
adc
mov
adc
pop
ss
mov
push
push
sbb
cwtl
out
jo
daa
inc
ljmp
push
xchg
and
sub
or
or
call
cmp
fs
mov
jmp
cmpl
mov
out
scas
pop
xor
ret
pusha
xchg
mov
mov
loop
cmp
add
mov
cwtl
dec
cmp
mov
jmp
jne
fs
test
ret
adc
jl
hlt
or
and
cmp
mov
stc
repz
scas
add
mov
out
into
or
xor
jmp
pop
inc
xor
popf
stc
mov
std
js
and
loopne
fs
lahf
adc
ja
sbb
insb
add
mov
les
fcompl
mov
push
adc
loopne
dec
out
mov
adcb
sbb
fwait
stos
pop
mov
mov
dec
lahf
in
lock
lods
jnp
push
lods
lods
xlat
ss
mov
dec
and
movsb
sbb
les
mov
dec
add
lock
fsubs
sbb
repnz
mov
stos
add
ret
sti
andb
scas
add
divl
jl
push
cld
jge
fimull
jecxz
ja
push
push
sub
mov
cmp
movsb
sub
cmc
jns
and
dec
ret
jb
out
dec
iret
jne
sbb
sub
into
mov
shrb
aam
xchg
lahf
xchg
adc
js
int3
stos
andl
out
mov
jp
insb
call
fiadds
xchg
mov
scas
mov
xchg
push
rclb
fisubl
test
inc
mov
out
into
mulb
fwait
or
sub
aad
out
fstpt
ret
sub
xor
sbb
stos
and
mov
sub
jg
arpl
and
shr
add
sub
aad
push
pop
mov
cltd
push
sbb
gs
repz
dec
andl
jmp
addr16
lock
adc
adc
xchg
cli
mov
cmc
addr16
mov
imull
or
inc
sbb
out
dec
cltd
outsb
inc
push
int3
addl
jns
popf
popa
push
jge
repnz
popf
scas
inc
dec
xor
mov
sarl
das
xchg
cli
mov
hlt
aaa
pop
adc
inc
arpl
cmp
adc
in
fcoml
or
ds
mov
jecxz
out
mov
xchg
xchg
or
imul
aad
insl
adc
inc
jl
push
sbb
outsb
mov
jp
int
pop
cld
popa
fiaddl
xor
addr16
shlb
xor
lret
ret
ret
mov
xchg
sub
cmp
xchg
inc
cmp
fildl
aam
cmp
add
xor
adc
sbb
aam
add
insl
sbb
jb
mov
xchg
xor
gs
or
push
pop
out
lahf
mov
cmp
lret
add
lret
ret
mov
push
cmpsl
push
sub
repnz
jnp
pop
push
lea
cmc
notb
pop
rclb
pop
stos
push
iret
cmpsb
pop
xorl
aaa
enter
adc
rcl
sub
in
movsb
cmpsl
or
out
addr16
out
dec
lret
out
es
jnp
jecxz
in
sbb
in
xor
adc
stos
add
rcrb
lcall
xlat
insl
enter
jl
mov
sub
scas
or
add
dec
jmp
sub
sub
or
subb
les
dec
sbb
ret
sbb
sbb
jmp
adc
les
cmp
es
rorl
adc
in
sti
xchg
sarl
dec
xlat
cltd
xchg
push
andl
out
pop
cmc
out
ret
cmp
bound
ds
incb
ret
lds
add
mov
jnp
cmp
pop
xchg
lret
mov
mov
cs
leave
mov
aad
repz
shll
jl
outsb
out
add
dec
lds
insb
adc
or
cmp
sbb
xor
cltd
push
nop
fistl
shll
mov
icebp
dec
adc
inc
jbe
xor
mov
rolb
dec
fcomip
adc
mov
or
in
pop
je
addr16
sbb
out
test
sub
sahf
das
lahf
es
jl
mov
insb
das
push
hlt
in
adc
jno
shll
int3
or
sbb
push
xor
aas
jmp
xchg
lret
pop
shrb
cmp
mov
out
in
bound
je
test
or
ret
out
add
aam
cmp
mov
loope
fiaddl
jmp
repz
cmc
lahf
scas
mov
test
nop
dec
and
fcoml
inc
int3
test
popa
inc
jge
js
lret
mov
adc
in
loope
stos
cltd
and
jmp
pop
xor
adc
cmc
nop
sbb
sbb
lret
out
xchg
xchg
daa
sub
sbb
jle
add
scas
push
mov
pop
sub
rolb
dec
sbb
scas
jns
mov
mov
and
and
mov
push
fnstcw
pop
xorb
jne
imull
adc
xchg
jbe
pushf
jge
jge
cmpsl
dec
xlat
add
cmp
xchg
je
loop
sub
loopne
and
scas
divb
sub
gs
rcl
or
push
mov
xor
inc
sub
sbb
xchg
pusha
mov
rclb
ret
rolb
cmp
jbe
dec
add
dec
xchg
call
inc
and
testb
add
push
and
add
cli
mov
and
pop
dec
rclb
pusha
rorl
repz
das
ffree
or
mov
das
aaa
xchg
loope
mov
xor
pop
out
pop
pop
inc
mov
xchg
mov
xor
sub
es
out
mov
leave
cmp
es
xchg
add
jbe
addb
test
adc
fwait
scas
fbstp
inc
inc
and
jbe
and
and
sub
sub
or
mov
add
addr16
push
and
loopne
jp
nop
pop
pop
test
jl
lea
mov
lret
pop
mov
adc
cld
sub
jle
add
orb
xor
jae
popl
jne
cmpsb
pop
jg
testl
iret
shrl
in
pop
movsl
lods
pop
in
out
out
or
incb
or
sub
in
or
addr16
cs
mov
pop
or
cmp
mov
mov
jns
bound
or
data16
jg
or
lcall
push
pop
xchg
push
push
adc
or
and
fisttps
xchg
push
gs
scas
xorl
andb
out
xor
or
sbb
loopne
ret
int3
mov
ja
add
test
pop
or
imul
arpl
or
push
repnz
jmp
or
push
mov
adc
or
outsl
cmovp
mov
pop
fists
mov
lods
jno
jmp
dec
fcoml
mov
mov
lea
dec
les
add
fwait
jae
xchg
or
aaa
js
movsb
or
mull
or
loopne
xchg
or
cmpsl
fdivrs
add
mov
into
or
pop
add
or
jo
pop
ss
sbb
xor
xchg
push
jl
dec
mov
adc
ret
mov
dec
mov
scas
and
inc
mov
iret
fcmovnu
jo
push
pop
adc
hlt
out
sbb
inc
mov
enter
and
aas
test
add
shll
es
and
mov
adc
sbb
cmc
fimuls
sub
xor
or
test
xchg
repnz
inc
shll
pop
or
leave
add
imul
pop
push
sub
cli
jle
push
or
jp
xchg
dec
sahf
xchg
sbb
cmc
icebp
rclb
sbb
hlt
dec
outsb
std
aas
or
pusha
bound
xchg
js
adc
fcoml
mov
xor
mov
js
call
icebp
loopne
daa
aad
ss
mov
inc
sub
fimuls
test
cmpsb
in
push
outsl
mov
xchg
sub
adc
iret
add
pushf
inc
sbb
lods
jo
lock
cmp
aaa
inc
xlat
or
loope
dec
jmp
loop
push
pop
mov
xchg
dec
mov
ljmp
add
ret
mov
adc
movsb
ret
jne
push
cmpsl
bound
mov
cmp
push
dec
rorb
out
pop
cld
add
lahf
jo
pop
or
jae
jge
adc
popa
inc
add
xchg
les
or
movb
push
adcl
push
jbe
cmpsb
or
outsl
dec
xchg
push
sub
subl
adc
iret
and
bound
mulw
outsb
and
pop
mov
scas
cmp
int
mov
push
jb
nop
mov
outsl
pop
or
mov
jo
or
mov
std
inc
xchg
pop
cmpsb
adc
sbb
sub
and
push
adc
push
cmpsl
or
fwait
xchg
cld
out
xchg
adc
pusha
popa
mov
jg
push
loop
mov
sub
repnz
cmp
jecxz
test
fistpll
pushl
or
jae
xchg
push
or
xchg
pop
mov
jg
pop
mov
xchg
push
je
es
lea
or
or
pop
push
and
ret
add
movb
sbb
inc
or
pop
mov
push
int3
test
stos
sahf
sub
not
hlt
out
push
push
aaa
movsb
or
sbb
std
cs
inc
orl
mov
das
out
push
cs
sub
add
adc
das
jge
or
and
fidivrs
sbb
cli
mov
dec
or
sub
rorb
int
xor
pop
ret
dec
or
xchg
jmp
inc
add
dec
decl
cwtl
lahf
daa
dec
or
pop
frstor
inc
mov
test
adc
iret
popa
xchg
fisubrl
lock
mov
dec
and
test
repz
adc
dec
fidivrs
test
movsb
fs
rol
adc
out
ds
push
cwtl
fimuls
and
loopne
sarb
xor
xor
pop
mov
nop
in
sub
aas
lahf
or
in
or
sub
mov
jle
jl
fisubrl
or
insb
in
js
lock
adc
mov
inc
adc
xchg
ss
into
test
outsl
or
jle
xchg
dec
mov
cmp
aaa
stos
lock
imul
mov
sub
mov
mov
fsubrl
adc
cmp
hlt
les
mov
stc
add
jl
daa
das
and
cs
or
dec
int3
pop
sub
movsb
sbb
int
cmp
ss
jnp
push
sub
cmp
or
dec
aas
or
xchg
outsl
cltd
cmpsb
or
inc
lods
mov
vmovlps
movb
add
sahf
repz
movsb
xlat
cmp
push
sti
sbb
pop
dec
roll
pusha
movsl
jne
dec
into
jo
leave
decl
das
mov
pop
int3
scas
add
lock
or
jo
or
cmp
xchg
es
jp
or
mov
xchg
or
inc
insb
sbb
gs
sbb
or
mov
fwait
sbbl
inc
push
scas
inc
int
decl
hlt
andl
xorl
fcoml
stc
loope
or
insl
stos
shlb
sub
xchg
or
or
push
les
or
xor
lods
fcmovne
sti
addr16
iret
or
mov
jmp
or
xchg
into
mov
jle
push
ficoms
aaa
dec
lret
mov
aas
add
xor
dec
mov
mov
fs
or
mov
adc
aad
and
add
lret
arpl
or
je
out
int3
or
mov
outsb
sbb
imul
push
inc
ret
insb
call
adc
or
inc
int
ds
push
sbb
idivl
sbb
or
dec
sarl
in
mov
pop
movsl
adc
add
cmp
dec
and
shrl
push
jmp
fimull
scas
add
cmp
dec
sahf
jno
addl
mov
rcll
pop
imull
or
xchg
aad
hlt
test
push
sbb
movsb
pop
or
push
roll
sbb
add
push
mov
in
jmp
int
jbe
and
adc
sub
dec
jmp
sbb
push
or
outsb
neg
dec
mov
js
mov
mov
mov
fs
jecxz
jb
inc
pop
enter
in
jo
or
mov
cmp
aam
js
aad
ja
dec
cmp
mov
adc
in
adc
jl
sub
adc
ds
aam
push
xchg
pop
xor
je
scas
inc
add
fbld
jnp
xchg
jg
outsl
lock
adc
dec
mov
sbb
leave
pop
rorl
cmp
push
lods
cmpsl
xchg
or
ret
dec
add
push
adc
es
fcmovnu
push
sub
and
inc
xchg
imul
stos
sbbl
push
add
fnstenv
adc
pop
sbb
push
dec
fildll
into
dec
cmp
add
push
aam
push
inc
and
push
pop
and
idivb
pop
nop
in
push
pushf
inc
add
push
jbe
mov
pop
loop
sbb
lods
add
mov
aad
in
push
cli
add
xlat
scas
sub
rcl
mov
and
clc
or
mov
add
mov
in
cmpsl
adc
sbb
push
in
jmp
mov
push
push
aam
jge
aam
out
fwait
in
jbe
into
mov
lods
aas
or
mov
xchg
lock
xor
push
fmull
xor
lcall
cld
add
pop
aaa
add
mov
jo
mov
scas
mov
pop
pop
add
mov
add
mov
push
ja
xchg
test
push
jbe
sbb
adc
js
shlb
cmpsl
call
inc
add
rcl
scas
ret
stos
or
xlat
shlb
popl
jb
out
shlb
add
or
adc
adc
push
mov
push
or
outsb
mov
ss
mov
add
push
rolb
sbb
lea
fnstsw
loop
in
pop
ljmp
mov
adc
and
add
out
and
ret
push
push
insb
pop
out
scas
sub
mov
xor
add
jne
fcoml
cltd
sti
andb
sti
cmp
imul
dec
mov
sub
dec
leave
bound
or
adc
or
sbb
in
ficompl
test
stos
lea
loop
pop
xchg
addr16
mov
and
or
in
aad
movsb
inc
aam
ret
xor
push
add
into
push
rol
adc
movsb
js
xchg
adc
daa
fnstsw
cmp
sti
subl
sbb
mov
shrb
test
and
lods
and
sti
cli
and
sbb
fstpl
adc
mov
in
rol
add
lds
rorb
insb
add
add
push
xchg
dec
sub
lods
mov
pop
or
or
enter
push
pop
dec
jo
or
dec
inc
pusha
bound
mov
pop
or
add
pop
rorl
mov
sub
cltd
das
lret
jmp
lods
and
daa
or
mov
jmp
or
cmc
push
mov
sbb
sti
fwait
jl
add
jle
pop
movsb
jbe
dec
cmp
cmc
aaa
dec
push
jp
dec
jp
lods
add
ficoml
loopne
outsl
cltd
adc
push
push
sbb
fisubl
add
outsb
sbb
cld
ljmp
roll
push
sti
adcl
adc
pushf
adc
sti
push
sbb
cmpb
and
xchg
add
ljmp
and
xchg
mov
pop
inc
dec
mov
daa
in
pusha
xor
and
cmpb
je
call
in
js
xchg
js
sbb
and
push
cmp
repnz
call
into
call
sbb
je
repz
retw
test
out
in
cmp
add
xchg
leave
push
mov
pop
pop
ror
dec
cwtl
repz
push
out
xor
sti
fbstp
add
dec
sub
jb
or
in
stc
pop
scas
push
xchg
or
out
fxch
jb
add
xor
inc
das
pusha
inc
jmp
jns
pop
jne
and
adc
in
and
out
dec
aam
mull
mov
push
cli
sbb
imul
jns
fcmovb
pop
adc
sbb
or
out
pusha
ja
cmpsl
pop
jle
xchg
mov
and
jbe
lret
xlat
dec
jp
lods
icebp
cmpb
jne
dec
insl
ficoms
ja
cwtl
adc
stc
cmpsl
mov
or
mov
push
fistpl
je
and
mov
and
sahf
ficoml
ret
mov
into
adc
push
cmc
jb
dec
les
sti
jge
mov
mov
nop
mov
mov
clc
add
loopne
jle
sub
sbb
aad
push
sti
test
xchg
adc
test
adc
cmpb
inc
cmp
push
adc
mov
pop
movl
mov
jnp
aad
fiaddl
test
insb
sti
int
add
and
jne
mov
lea
subl
insl
shr
sub
outsl
stos
push
rclb
jo
mov
icebp
lret
or
rorl
adc
inc
lock
leave
xchg
and
cmc
push
xor
xor
sbb
or
cltd
adc
or
loope
push
sti
dec
pop
cwtl
dec
lret
xor
bound
mov
mov
mov
imul
sbb
dec
mov
scas
std
in
in
stc
mov
fwait
lahf
fsub
popa
stos
add
mov
rcr
pushf
or
jge
sub
ds
daa
lret
jmp
pop
mov
sbb
or
movsb
adc
call
pop
cmc
dec
scas
out
fmul
sub
jge
xor
lds
pushf
xlat
pop
aas
inc
jbe
pushf
add
mov
push
out
cltd
xchg
ljmp
ljmp
add
std
loope
rclb
adc
ret
pop
or
pop
mov
xor
lret
loopne
daa
push
mov
out
mov
xchg
adc
aam
insl
dec
jne
sti
adc
push
jecxz
push
lret
mov
rorl
dec
sbb
loop
jge
lds
out
aaa
xor
xchg
cld
pop
push
andb
or
or
adc
loopne
aam
int
mov
push
dec
repz
vpunpckhbw
pop
xchg
jno
or
inc
cli
mov
inc
mov
mov
xor
and
cwtl
pop
outsl
cmp
sbb
out
xor
jns
sbb
jl
or
aaa
inc
adc
sti
sbbb
mov
dec
dec
xchg
in
mov
xchg
iret
sbb
lods
or
xchg
add
dec
dec
mov
or
lret
xchg
fldpi
leavew
enter
jle
aas
outsb
pop
es
iret
imul
lods
test
in
cmp
enter
mov
push
jne
sti
test
sub
xchg
push
mov
ljmp
add
pushf
not
jae
les
jno
jne
mov
movsb
test
push
sbb
sbb
inc
sub
adc
outsl
pop
push
sbb
adc
mov
add
push
nop
pushf
out
out
push
push
aaa
lret
xchg
fcmove
movsl
sbb
jb
mov
mov
inc
cld
add
dec
jle
xchg
xchg
pop
push
xchg
mov
cwtl
in
daa
mov
mov
xchg
into
or
or
push
pop
ljmp
jae
pop
cmp
int3
sub
add
add
and
xchg
jae
sbb
cltd
jno
rcrl
fsub
mov
shll
dec
sub
and
sbb
out
mov
fidivl
inc
fists
mov
and
mov
movsl
push
mov
test
aam
ljmp
mov
outsb
jmp
sbb
mov
dec
sub
lea
inc
jo
aad
das
inc
xchg
test
mov
push
aam
adc
add
imul
pusha
and
inc
aad
out
jle
std
add
lods
cmp
jle
pop
ret
incl
cwtl
sti
rcll
int
mov
jl
pop
adc
add
add
ds
fs
mov
lods
mov
jne
add
jns
mov
arpl
js
and
sbb
stos
or
mov
pushf
push
test
sbb
sub
in
or
cld
jp
sbb
lret
jge
insl
hlt
dec
mov
xchg
mov
mov
inc
idivl
icebp
aas
in
mov
jl
mov
scas
add
xor
in
dec
int
test
lahf
mov
js
or
inc
into
mov
push
jns
or
sbb
mov
mov
or
adc
pop
cmc
mov
sar
addb
test
fdiv
adc
mov
xchg
mov
xchg
lods
pop
call
cwtl
fists
pushf
mov
lret
mov
out
mov
add
int3
add
mov
call
mov
gs
lods
inc
dec
out
xchg
sbb
test
and
roll
rcr
push
push
cmp
push
sub
push
and
out
xlat
sbb
cmc
popa
jmp
repnz
add
loopne
push
cwtl
mov
mov
jno
dec
adc
out
mov
xchg
cs
cld
in
pop
sbb
mov
stos
dec
das
mov
sub
insb
dec
imul
mov
repz
popa
xchg
inc
inc
ljmp
std
jne
je
inc
out
in
cltd
sub
iret
lods
push
imul
sbb
push
jo
add
dec
push
in
or
lahf
out
adc
xchg
push
push
push
jnp
imull
pop
add
adc
sbb
movsb
xor
sub
mov
push
dec
sbb
dec
cmpsl
push
cmc
cmp
mov
mov
cmp
cltd
xor
lcall
fisttps
adc
js
xor
sbb
in
sbb
push
pop
or
sub
iret
pop
push
mov
sbb
mov
in
stos
pop
dec
loope
sbb
sti
pop
mov
dec
out
daa
mov
mov
xlat
scas
mov
jno
iret
mov
jl
push
sbbb
push
adc
mov
and
call
adc
addr16
pop
jb
add
movsl
mov
pop
jle
cli
scas
mov
jne
pop
dec
orb
add
and
cmp
jne
in
adc
xlat
jbe
mov
inc
outsb
ljmp
and
adc
mov
cli
gs
int3
sbb
stos
xchg
add
mov
xor
push
pop
or
fildll
mov
inc
pop
or
inc
push
into
cltd
or
xor
mov
dec
sub
stc
addl
leave
out
inc
andb
push
or
aam
nop
dec
dec
pop
not
rcll
pushf
int
xor
xor
adc
or
imul
jnp
or
pop
pushf
mov
and
ret
adc
movd
popf
add
int3
addr16
jecxz
dec
pop
jl
cmpordps
mov
lods
stos
sub
in
add
outsb
out
xchg
jecxz
adc
in
stc
cmp
inc
pop
jecxz
stos
les
imul
out
sarl
adc
xchg
roll
sbb
jp
repnz
sub
pushf
cmp
sti
add
sti
pop
mov
inc
sbb
push
in
inc
enter
fisubl
bound
push
fcomip
jns
aas
leave
pop
jl
sub
mov
lret
faddp
mov
jp
inc
aad
loop
out
int3
dec
stos
mulb
xlat
or
sbb
outsl
inc
mov
fisttpl
jnp
push
cld
scas
jbe
out
add
cmpsb
dec
repz
add
push
fisttpll
adc
sub
xlat
out
je
shl
push
mov
rol
dec
cwtl
lds
decb
ret
xchg
mov
add
pop
and
push
mov
je
aad
cmp
and
xor
rcll
xchg
push
pop
and
pop
pop
cmc
rcrl
sub
jge
jecxz
loop
stos
mov
pop
cmp
mov
in
dec
sub
gs
and
std
add
ret
subb
cmp
cwtl
outsb
mov
les
cmp
mov
or
xor
mov
addr16
push
sbb
jbe
cwtl
sti
int3
pop
rcrl
mov
adc
test
outsl
mov
icebp
inc
loop
adc
adc
in
stc
iret
inc
jns
int
fisttpl
subl
sahf
xor
cltd
xor
pop
ja
mov
add
sarb
lea
vunpcklps
test
stc
cmp
fisubs
inc
out
jno
inc
xchg
aas
popa
in
jmp
and
shl
xchg
pop
popf
inc
adc
shl
popa
movsb
popa
sbb
ja
sub
outsl
rorl
out
or
xor
out
push
ds
pop
das
and
ret
enter
inc
ret
xor
out
lock
mov
and
lods
mov
fildl
mov
push
mov
sbb
repz
cwtl
aad
adc
in
mov
in
sub
push
pop
in
dec
fiaddl
xor
dec
lds
pop
fs
jecxz
jge
pop
faddp
mov
mov
cmp
das
mov
ds
lret
andl
ror
push
lock
pop
dec
inc
test
xor
cmp
xor
stos
pop
call
out
les
add
in
lret
int3
xchg
scas
or
push
leave
fiaddl
or
ror
psubusb
mov
or
std
fsubrl
js
inc
push
sub
lahf
int
popa
sbbl
xor
add
adc
loopne
ja
fwait
mov
sbb
push
pop
cmp
push
ret
mov
mov
movsl
xor
jb
mov
lods
push
mov
jmp
rcrb
cld
test
lret
in
mov
out
ficoms
and
xchg
les
call
push
add
mov
or
ss
orb
add
xor
mov
mov
mov
out
cltd
jg
sbb
cs
jmp
mov
test
fidivl
adc
push
pop
int3
xlat
arpl
daa
out
aaa
push
add
and
pushf
add
jae
and
sbb
and
jle
nop
and
fnstcw
mov
jp
ds
xor
rolb
cli
dec
cmp
jg
adc
inc
push
hlt
jnp
mov
add
inc
in
sbb
test
sar
jp
sbb
mov
xchg
pop
mov
xchg
fbstp
shrb
mov
and
pop
in
lret
out
xlat
imul
jecxz
repz
pop
add
jmp
add
xchg
int3
sbb
fnsave
dec
call
or
dec
fwait
inc
and
je
cltd
sub
mov
sbb
fldcw
jmp
or
lods
mov
mov
icebp
adc
pusha
mov
pop
sub
mov
or
sbb
or
pop
mov
or
pop
testb
movsl
in
inc
or
add
sub
in
inc
repnz
xchg
and
xchg
rep
or
scas
stos
cmp
fsts
movsb
cld
adc
rorb
push
cwtl
and
dec
notb
lea
call
into
test
stos
lea
mov
or
mov
fbld
out
test
or
push
mov
loope
imul
and
cmc
ffree
add
fs
sub
scas
shl
out
and
subl
push
jo
outsb
and
add
mov
cld
mov
sti
popf
int3
bound
adc
inc
add
into
ss
xchg
xor
or
setge
adc
xor
rorl
aam
fisubl
cmp
push
xchg
mov
ljmp
or
cmp
or
xchg
cs
shlb
or
xor
sub
in
arpl
addr16
fstl
adc
sbb
out
jns
xor
ret
cltd
and
repz
daa
and
inc
xchg
pop
pop
or
les
xchg
or
jl
aas
push
aaa
and
ret
fildl
outsl
ja
fdivs
inc
aas
jns
test
das
lock
or
sbb
sti
dec
cmp
push
sub
ja
mov
loop
xor
movsb
test
jno
and
loopne
or
aas
mov
gs
lea
scas
lahf
xchg
stos
jl
push
sub
repz
add
sub
rorb
sbb
js
adc
adc
jmp
js
sub
inc
adc
fsts
sti
xchg
adc
lods
stos
cmpsb
out
enter
mov
shr
add
and
dec
out
inc
fstl
xchg
or
roll
or
inc
push
and
add
push
xorl
xchg
nop
popa
cmpb
mov
test
das
jmp
jle
xchg
leave
add
add
jg
lock
sbbb
in
lds
and
int3
stos
lret
lock
push
jns
stc
push
mov
xchg
aas
dec
add
rclb
pmullw
pop
xor
dec
ret
xchg
js
fimull
loop
notb
sbb
or
jmp
js
mov
sbb
call
aad
adc
and
std
and
pop
mov
sbb
ror
pushf
loope
adc
add
pushf
push
cltd
imul
gs
mov
loopne
adc
lahf
testl
push
adc
or
ret
aaa
jg
adc
or
ret
pop
pop
in
popa
fwait
ret
mov
add
ret
push
popa
lock
add
pop
out
in
bound
dec
fs
out
popf
adc
push
lret
jo
int
pop
lret
imul
mov
xchg
and
dec
cli
xchg
pop
sub
inc
stos
rcr
mov
pop
sub
clc
sti
out
and
and
inc
xchg
cld
enter
xor
adcl
out
xor
jo
inc
in
jecxz
cli
mov
in
push
hlt
add
add
xchg
dec
jmp
mov
insl
cmpsb
mov
fcompl
sub
int
add
fldlg2
sub
lahf
mov
lods
adc
jle
jo
testb
out
aam
push
dec
jmp
xor
adc
out
dec
mov
movsl
push
fstpt
xchg
cmpsl
cmc
mov
jecxz
inc
pop
cmpb
sti
stos
and
scas
push
lods
mov
push
aam
cld
push
test
adc
ja
add
xor
xor
or
lret
out
out
mov
push
dec
scas
push
arpl
xlat
in
mov
inc
rcrl
in
cwtl
pushf
adc
xchg
ret
aam
push
enter
sub
and
mov
jnp
movsb
xor
inc
or
icebp
cmp
std
pop
pushf
scas
jne
sbb
xor
sub
adc
mov
cwtl
rcl
in
jne
inc
add
add
addl
mov
dec
add
mov
push
es
repz
int
push
xchg
push
gs
push
and
and
xchg
push
aad
push
mov
jo
addb
mov
cmp
andb
mov
fbld
imul
leave
sbb
sbb
popf
ds
jle
mov
add
cld
fyl2xp1
dec
mov
sbb
pop
add
ss
inc
ret
aad
inc
out
push
inc
mov
add
push
push
lea
fldl
push
lret
mov
clc
cld
in
cltd
xchg
test
call
xchg
jo
repz
insb
pop
mov
lret
repz
inc
fdiv
sbb
adc
mov
aaa
jl
iret
lret
xchg
aad
std
jne
mov
cli
aaa
sbb
mov
loop
xchg
pop
je
lcall
lods
pop
adc
jns
outsl
cld
mov
mov
outsb
inc
sub
lcall
jp
dec
aaa
cs
pop
xchg
cmc
stos
lret
aad
add
imul
mov
xchg
jns
popf
iret
cwtl
ds
stos
in
jg
jae
int
adc
das
mov
sbb
sub
test
jmp
mov
add
out
push
ja
mov
push
cmc
add
cli
aam
jle
nop
jns
xorb
mov
pop
arpl
shll
icebp
scas
stos
cmpb
sbb
add
jmp
add
push
in
daa
cmp
fidivrs
xchg
and
insl
test
sbbb
sbb
xchg
cmp
insb
out
sub
test
sbb
dec
stos
popf
dec
cli
ja
nop
xchg
adcl
add
fisubl
push
push
mov
enter
push
adc
lret
fucomp
jmp
in
shr
movsb
jmp
outsb
jmp
add
mov
pop
sub
adc
out
add
je
pop
or
ss
jecxz
cmp
xchg
adc
and
in
mov
xor
orb
jb
fmul
cwtl
rcr
cwtl
fsubrs
add
inc
inc
das
xor
inc
sbbb
xor
jecxz
add
loop
and
lods
push
jne
jmp
inc
jecxz
inc
outsb
mov
in
pushf
cld
or
mov
in
pop
jmp
add
pop
test
je
lahf
mov
popf
in
js
testl
mov
aad
pop
test
loope
sub
sub
pop
movsb
jle
std
jmp
push
in
test
imul
xchg
fwait
movsb
aaa
mov
xchg
out
mov
adc
pop
daa
cmp
in
int3
sbb
jne
sub
lods
daa
sti
mov
mov
mov
dec
or
jne
js
dec
in
test
sahf
jp
jle
mov
push
out
push
fwait
cmp
add
add
aaa
push
out
add
push
cmp
sahf
enter
pop
cwtl
div
stos
add
mov
or
jle
mov
enter
mov
xorb
push
xor
inc
sub
cmp
ds
mov
jb
jge
sti
das
and
xlat
ret
jne
push
aaa
ret
adc
cli
jmp
adc
lcall
sbb
cld
jecxz
cwtl
xchg
inc
jle
jmp
ret
cmp
cmp
stos
test
jmp
mov
sub
cld
dec
xchg
inc
sbb
sti
and
jae
das
xchg
xlat
ja
cli
in
mov
call
push
add
add
fdivrl
cmpsb
in
fcoml
adc
mov
sbb
sub
adc
dec
adc
fisttpll
ds
ret
mov
sbb
xor
jnp
lret
sahf
pop
cmpsl
or
int
lcall
int3
pushf
cltd
xchg
loopne
fistpll
xchg
fmuls
cld
in
pop
pop
in
sbb
pop
and
xor
in
mov
cmpsl
mov
loope
or
or
inc
cld
cmp
pop
jp
mov
leave
jmp
dec
fimull
dec
pop
or
mov
mov
lods
sbb
int3
lahf
xchg
dec
mov
add
or
out
test
loope
inc
lahf
int3
rcrl
jl
rorb
and
sbb
bound
lcall
stos
mov
adc
push
mov
sbb
jo
sbb
lret
sahf
stos
call
pop
mov
mov
test
jmp
push
mov
cmp
ret
mov
jbe
shrl
cld
in
inc
jne
add
aad
xlat
push
cs
je
mov
sti
xor
adcb
jb
mov
scas
fwait
mov
dec
mov
push
add
adc
add
xchg
stc
addr16
jns
xchg
fwait
xchg
iret
pop
mov
adc
sbb
xlat
jns
scas
mov
leave
pop
ja
cmp
lret
insb
inc
xor
inc
xor
add
mov
xchg
fcmove
jl
pop
xchg
cmp
jnp
lods
mov
push
popa
sub
jo
pop
dec
xor
xor
sub
push
push
xchg
inc
leave
add
inc
lea
xchg
cwtl
mov
inc
mov
dec
shlb
adc
loopne
fprem1
stc
cmp
movl
fimull
pop
stos
lret
sti
in
pop
pop
shrl
xchg
push
sbb
pushf
dec
rorb
addr16
popf
sbb
dec
sbbl
dec
add
inc
or
push
cmpsb
rolb
push
int3
sbb
add
stc
adc
xchg
aam
pop
push
int3
cmovg
outsl
arpl
lock
popa
je
dec
test
push
aas
int
leave
lret
stos
cmpsl
xlat
js
mov
sub
xor
bound
push
lock
stos
or
lcall
or
int
aas
push
lcall
jmp
cli
mov
sbb
pop
jnp
into
pop
xchg
std
pushf
jmp
rorb
push
sub
mov
mov
outsb
aam
xor
xchg
mov
sub
mov
in
or
aas
push
adc
mov
inc
ljmp
repnz
out
cmp
sbb
fstpt
adc
inc
jo
adc
push
and
add
add
cmc
jmp
repnz
sbb
shrl
jb
xor
mov
add
stos
push
je
push
push
or
mov
aaa
mov
sub
mov
shll
repnz
or
adc
mov
cwtl
add
dec
adcl
fldl
pop
lea
push
and
test
mov
imul
sti
ror
cmpsb
test
jg
aam
mov
jmp
jl
loope
add
mov
mov
push
adc
enter
or
sbb
mov
leave
mov
aas
fildl
jno
cmp
in
dec
sbb
outsl
mov
int
jns
addr16
adcb
pop
lock
fisubrl
and
pop
fdiv
int3
add
out
fcoms
and
sbb
dec
mov
xchg
jecxz
fwait
mov
pop
mov
add
cmp
jl
aad
inc
sti
cli
lret
cmp
add
gs
hlt
daa
push
lret
aam
repnz
shl
sbb
adc
imul
repz
out
cmp
ljmp
clc
aas
into
mov
movsb
mov
imul
jne
inc
push
insb
push
xor
lret
hlt
mov
jbe
sbb
scas
mov
call
hlt
inc
xor
push
repz
mov
add
into
insb
dec
or
fcoms
or
inc
aad
xor
iret
jno
add
jecxz
popf
push
dec
repz
insl
push
jmp
mov
mov
xchg
stos
inc
ljmp
ret
add
jo
inc
int3
or
into
aad
cmpsb
and
mov
mov
inc
adc
stc
out
in
stos
repz
in
mov
shrl
xchg
dec
or
repz
fwait
mov
ja
das
cli
jbe
add
pop
dec
add
add
add
shr
cmc
jmp
adc
aaa
test
sub
enter
and
insl
pop
lret
pop
fiaddl
mov
lret
sbb
push
sub
push
mov
xlat
cltd
jp
add
cli
or
push
repnz
out
mov
and
inc
or
lahf
push
mov
add
pop
sahf
or
and
hlt
cmp
or
jo
xchg
pop
aad
mov
jl
dec
popa
sbb
fsincos
and
xlat
andl
inc
jne
shrb
or
aas
sti
sbb
inc
repnz
nop
movsb
stc
rep
sub
movsl
xlat
xchg
pop
sub
ret
mov
test
cltd
and
xchg
mov
adc
jp
mov
ds
lock
pop
lret
push
test
cltd
imul
je
pop
arpl
adc
out
or
pop
adc
push
lahf
jb
popa
pop
and
cld
lahf
cmpb
insb
cmc
push
ret
mov
fs
push
push
dec
jg
rol
xchg
sti
stos
outsb
cmp
cmp
and
and
jl
sub
jp
mov
aad
adc
je
mov
das
lds
xchg
add
mov
and
cmpsl
push
ret
and
testl
lcall
mov
loop
sub
ret
jns
pop
mov
sub
and
sbb
hlt
push
pop
nop
mov
in
mov
mov
or
adc
mov
icebp
mov
mov
xchg
and
xchg
loop
in
test
daa
adc
insl
lret
popf
or
xchg
insb
add
push
scas
push
sbb
cmpsb
mov
mov
sub
test
lods
adc
xor
or
add
jno
cltd
or
out
insl
nop
cmp
lahf
imul
dec
out
xchg
jl
xchg
inc
nop
mov
aad
sbb
cmp
sbb
or
rcrb
sub
push
cmp
sbb
adc
testb
cld
push
out
jns
or
inc
pop
jmp
and
mov
imul
dec
out
mov
and
inc
adc
xchg
addr16
test
shlb
enter
sub
push
xchg
into
int
ret
mov
add
aad
inc
out
test
mov
stc
pushf
imul
dec
fwait
and
rcrl
xchg
les
imul
adc
or
scas
dec
pushw
out
fcompl
cmp
aaa
push
push
mov
mov
sti
lret
push
add
cmp
dec
jge
stos
xchg
xor
lahf
sbb
cmp
sub
cld
cmc
pop
mov
les
xor
add
out
iret
pop
lahf
add
ret
insl
adc
sti
push
or
pop
test
sub
adc
sahf
dec
jne
in
loop
lods
xchg
mov
and
hlt
adc
cmp
cltd
pop
out
pop
sbb
cld
imul
fcmove
or
push
scas
cmp
cli
mov
out
or
aaa
out
enter
add
jbe
cmp
test
mov
inc
clc
or
faddl
jge
jb,pt
dec
sbb
sub
push
or
xor
inc
xor
repnz
push
dec
sahf
insb
sbb
icebp
dec
mov
inc
sub
lcall
shr
sbb
jne
push
shll
jmp
cmpsl
pop
ljmp
lods
pop
int3
adc
or
hlt
and
pop
cltd
cmpsb
shlb
into
jmp
inc
mov
push
pop
fs
hlt
sbb
out
xor
jbe
test
sahf
data16
and
int
fidivrl
fidivrs
cs
pop
jl
out
add
jnp
fisubrl
outsl
jmp
cmpsb
test
or
add
or
divl
cmc
cmp
xchg
push
push
test
cmp
jmp
jle
jle
movsb
push
enter
lods
daa
cmpsl
xor
aam
pusha
inc
adc
aam
loopnew
inc
cmp
jbe
push
inc
and
cmpsb
cmp
insl
jne
in
gs
mov
mov
cltd
int3
jnp
and
ja
test
pop
fsubs
flds
nop
jle
loope
xor
mov
test
loopne
mov
dec
fwait
xor
aaa
jo
stos
jb
ret
sbb
inc
int3
aas
lock
call
cmp
sbb
clc
push
adc
nop
leave
mov
or
scas
inc
fdivr
mov
or
aas
stos
cmp
lds
mov
fucomi
pop
adc
mov
xchg
add
fists
add
adc
lods
pop
mov
fcomps
ja
ror
xlat
xchg
aaa
out
xchg
mov
out
lods
add
fimull
orl
ds
add
xor
jle
push
xchg
stos
jnp
stos
sub
jecxz
mov
cmp
jne
pop
cs
jnp
mov
not
xchg
imul
cmpb
mov
in
test
sar
and
push
in
xchg
cltd
pop
jp
adc
insb
subl
xor
jecxz
addr16
outsl
mov
or
jbe
xchg
incb
or
add
ret
ret
outsb
adc
sbb
and
hlt
in
mov
lds
int3
xorb
cmp
leave
xor
ja
push
adc
scas
rclb
mov
movsb
ja
shl
mov
aam
pop
nop
sti
jmp
xchg
ret
out
out
adc
mov
pop
out
and
in
lock
pop
adc
stc
push
mov
int3
cli
enter
aam
inc
sti
cmp
out
out
jle
testl
xor
cld
inc
pop
sbb
sub
sbb
adc
add
stos
adc
jne
je
out
aas
lock
cltd
xchg
pop
sbb
jp
mov
cmp
je
lds
pop
stc
loope
add
mov
xor
xchg
int3
in
cmpsl
shrl
jle
rep
mov
add
cmp
mov
int3
fidivrl
mov
pop
sbb
adc
mul
jp
lods
ja
sub
js
and
jnp
aam
fidivrl
icebp
xor
dec
adc
aas
mov
cmpsb
mov
scas
inc
cmp
sbb
dec
cmp
add
clc
out
inc
mov
jno
pop
aad
icebp
inc
xchg
adc
jns
shrb
cld
dec
mov
or
xor
in
nop
mov
add
mov
add
stc
addr16
jo
adc
out
push
mulb
jl
pop
lcall
and
and
xchg
mov
push
call
push
les
jg
pushf
adc
js
mov
scas
loope
add
fs
or
imull
sbb
push
cwtl
sti
aaa
and
sahf
mov
movsb
das
lea
jecxz
nop
and
rolb
adc
es
sbb
inc
mov
lret
jne
mov
aas
stos
mov
outsb
mov
push
xchg
xor
mov
inc
adc
inc
add
out
push
sti
add
inc
jns
jne
add
ljmp
lock
cmpsb
cmpsl
cltd
cmp
mov
out
push
inc
mov
rclb
pop
nop
lods
adc
mov
subl
adc
mov
mov
mov
adc
xchg
insb
mov
sub
cmp
aaa
or
cmpsl
cmp
xchg
popa
mov
je
stos
push
push
dec
popa
mov
mov
jmp
mov
add
jl
cmp
pop
jp
dec
cmp
push
or
jmp
inc
or
in
mov
jecxz
mov
jno
and
or
mov
sti
stos
xchg
cmp
neg
in
mov
in
sbb
movsl
aad
movsb
mov
and
jl
test
jb
fisubs
sub
lods
add
xor
inc
lock
mov
pop
in
push
mov
stos
or
mov
negb
jo
test
and
jns
int3
ret
or
lret
sahf
sub
and
xchg
mov
and
adc
add
dec
addr16
xor
lock
push
int3
push
xor
mov
jmp
add
bound
into
addr16
les
inc
ret
xchg
sbb
jnp
push
cmp
mov
inc
lret
or
xchg
fsubs
mov
outsb
sub
int3
xor
fs
fstpl
mov
inc
inc
aad
push
pop
cld
mov
push
int3
cmpb
aas
in
xorb
js
and
cmp
mov
mov
mov
repz
mov
mov
test
into
outsb
rcrl
or
test
ss
dec
push
cmp
cmp
inc
jnp
lods
cmp
imul
pop
inc
lcall
push
mov
inc
cmp
out
loop
ja
int3
es
mov
jp
and
jo
push
fdivrs
or
xchg
sub
mov
xlat
sbb
int3
daa
sbb
adc
subb
hlt
daa
adc
mov
setns
mov
push
cmp
sbb
stos
dec
cmp
fwait
mov
inc
aaa
xchg
inc
mov
repz
pop
mov
ret
ficoms
subl
repnz
cwtl
xchg
lret
mov
rclb
pop
jns
ljmp
js
xor
sbb
jle
add
cmpsl
xor
xor
pop
daa
fcompl
push
bound
stos
adc
push
mov
mov
mov
pop
mov
xchg
jl
mov
or
adc
gs
fucom
or
add
test
add
jo
insb
clc
jno
leave
cmpsl
rcrb
push
add
test
out
mov
clc
aad
ljmp
fisubrl
outsb
inc
pop
push
les
stos
adc
iret
pop
sub
jo
push
dec
lds
cmp
push
pop
mov
jle
jmp
sub
out
enter
stos
imul
jns
xor
xchg
scas
mov
jp
cwtl
sti
inc
mov
xchg
cli
test
cmp
fsubs
fimull
and
ret
sbb
sbb
adc
sti
push
jp
insb
in
test
mov
pop
cld
cmpl
xchg
sub
test
or
adc
ja
jnp
mov
adc
pushf
les
add
xchg
or
fcomps
mov
cwtl
mov
inc
mov
jg
inc
pop
cld
les
mov
les
cltd
loop
in
mov
bound
movsb
jg
jmp
in
pusha
add
inc
mov
pop
sbb
or
pop
mov
cmp
jbe
stos
sub
sti
lahf
mov
and
mov
js
add
sub
shl
fwait
ds
pop
mov
jecxz
jb
jb
ficomps
cmpsb
or
in
or
call
pop
and
lea
sub
cmp
dec
inc
mov
int
insl
mov
push
sbb
cld
in
ret
imul
xchg
jecxz
popa
cmp
inc
scas
dec
dec
aad
add
daa
jo
jge
jl
ds
fs
adc
lret
test
push
jnp
cld
mov
test
fistl
add
mov
mov
push
hlt
adc
dec
push
in
repnz
daa
mov
jmp
shrl
pushf
cmc
notl
loopne
pop
lock
xor
outsb
in
add
sbb
mov
and
insb
out
sub
insl
mov
mov
in
and
push
movsl
push
lods
sti
xchg
mov
add
adc
inc
dec
mov
pop
sbb
sbb
adc
mov
out
push
cmp
pop
dec
dec
jbe
mov
mov
dec
enter
add
jb
add
pop
adcb
pop
sbb
pop
pop
and
test
inc
mov
cmp
inc
mov
add
fldcw
xchg
sub
and
mov
xchg
jno
inc
add
test
ret
xchg
jo
mov
dec
out
daa
push
fs
stc
int
add
mov
mov
mov
call
int3
fmuls
in
sbb
sub
mov
xchg
xor
lcall
jle
add
daa
dec
aam
arpl
aaa
xor
mov
aaa
jmp
cmp
orl
push
mov
or
inc
loopne
and
je
cmp
out
xchg
jmp
cwtl
enter
rorb
aaa
jmp
jle
enter
jnp
ret
xchg
cmc
stos
mov
push
fsubl
lods
xchg
mov
xor
imul
iret
sti
gs
ret
sbb
bound
dec
cmc
push
out
sbb
mov
cltd
add
cs
sbb
mov
pop
ja
jb
jle
aam
ficompl
ss
mov
push
mov
ds
jmp
popf
mov
aam
mov
sbb
and
xor
int3
xchg
pushf
orb
jae
fwait
add
mov
sbb
add
jne
lret
inc
stos
repnz
lods
orb
loope
push
adc
test
jg
insl
jp
mov
mov
sbb
out
add
and
imul
add
pop
mov
push
cs
pop
push
std
lcall
push
or
xor
mov
out
adc
cltd
ret
fisubl
mov
mov
out
dec
xor
lods
adc
push
les
inc
xor
push
mov
xor
push
adc
hlt
add
imul
push
sub
mov
pop
push
xor
push
jmp
ret
call
sub
mov
jge
push
fwait
movsb
ds
xchg
out
into
add
out
testw
cmc
jo
outsb
jecxz
cmpsb
cmpsb
leave
pop
adc
xor
jle
jmp
add
shll
adc
push
sub
das
adc
jae
insb
and
int
rcrb
mov
mov
fmull
subb
push
outsl
pushf
mov
mov
lret
dec
fneni(8087
mov
sbb
jle
or
add
jb,pn
stos
sbb
xor
das
popf
stos
mov
adc
outsb
jo
add
jp
les
and
loope
lock
push
inc
and
out
call
xor
rorw
out
or
add
jp
out
addr16
or
sub
push
cs
cld
dec
mov
adc
fucomip
ficompl
and
mov
pop
fdivp
sbb
insl
pop
push
mov
mov
ficoml
cwtl
mov
and
in
addr16
fwait
or
inc
sub
imul
aam
loopne
dec
loop
out
sti
test
lahf
fisttpll
xchg
inc
mov
in
adc
pop
repnz
push
and
sbb
cmpsb
pop
sub
bound
daa
sub
dec
inc
nop
push
aaa
call
adc
add
loopne
mov
push
pop
mov
aad
mov
fwait
xor
sbb
inc
pop
adc
lret
and
xor
xchg
push
scas
fstpt
pop
out
movsl
mov
xor
sbbb
repnz
push
push
int3
mov
negb
add
rorl
and
sub
rcr
mov
dec
out
cli
pop
fdivrl
add
cmpsl
mov
mov
icebp
adc
push
dec
push
xor
lret
out
int3
mov
adc
pop
leave
and
aam
xchg
and
in
lcall
adc
jecxz
insb
add
and
xor
inc
mov
dec
add
loopne
faddp
fdiv
add
ja
daa
jno
nop
xchg
sub
xchg
push
adc
insl
sbb
adc
sbb
outsl
out
sub
rcrl
daa
shr
loope
std
nop
cmp
xchg
addr16
iret
mov
xor
mov
inc
fisttpl
push
sbb
jmp
in
iret
sbb
movsl
mov
int3
sti
aad
cmp
adc
push
stos
out
sbb
dec
rol
inc
add
inc
es
and
popf
hlt
fbstp
pop
insl
or
adc
pop
mov
fs
xor
dec
loop
jnp
sti
repnz
cltd
xchg
sub
push
push
test
into
test
or
and
ficoms
dec
push
insb
jb
sub
mov
loope
addr16
xchg
fcompl
xchg
pop
into
rorb
sbb
jge
scas
or
xor
add
mov
mov
pushf
adc
jecxz
inc
add
xor
sti
jp
pusha
xor
loopne
out
xchg
push
jno
sbb
jecxz
imul
and
or
lret
cs
out
insl
test
cmp
xor
adc
mov
and
sti
test
xchg
movsb
out
insb
shlb
cmpsl
das
stos
loopne
repz
nop
dec
or
out
aam
push
out
test
mov
mov
xlat
les
add
stos
mov
int
sti
adc
add
stc
cmp
jb
or
daa
movsb
dec
inc
pusha
jecxz
jecxz
imul
add
and
mov
imul
out
mov
mov
add
cmp
xchg
pusha
movsb
xchg
add
xchg
and
cmovl
and
imul
test
lahf
lahf
ret
adc
dec
inc
adc
fdivrl
stos
xor
jmp
bound
sbb
sbb
scas
addb
repz
push
dec
mov
cmp
inc
ss
fcoms
rcl
cmp
jg
ss
call
cmp
add
pushf
mov
dec
aad
fcomp
sahf
fwait
insl
clc
pop
ficompl
pop
enter
xor
push
jle
dec
faddl
gs
fbld
rcrl
jmp
jecxz
and
dec
lahf
sbb
jns
stos
mov
mov
std
stc
das
xor
aaa
pop
inc
lea
push
add
cmc
xchg
dec
and
stos
xor
lret
int
xchg
xor
and
bound
minps
popf
mov
xor
cltd
fwait
jnp
pop
jo
orl
mov
jno
pop
mov
faddl
fs
or
out
xchg
cwtl
and
bts
dec
iret
jno
out
cmpsl
pop
jne
xchg
roll
xlat
enter
fisttpll
cld
sub
out
sbb
push
adc
push
jbe
outsl
cmp
inc
dec
adc
ficomps
or
sahf
or
ret
xor
fisubrl
jns
lea
out
cmp
rcrb
test
imul
sti
mov
inc
mov
in
lds
nop
out
sub
pop
scas
add
je
js
cwtl
jne
fcoml
cmp
xor
jecxz
movsl
sub
xchg
xchg
mov
add
inc
sub
sbb
inc
or
xor
jle
dec
fidivrl
cltd
iret
sbb
dec
sbb
nop
xorb
das
pop
lock
aas
call
fildl
shlb
sub
xlat
cmp
sub
mov
lods
mov
outsb
mov
push
jno
bound
out
lret
dec
stos
xor
dec
test
push
mov
push
or
xchg
cmp
imull
cmp
sub
add
adc
xchg
dec
sbb
mov
hlt
pop
push
out
mov
mov
dec
xchg
into
mov
lret
repnz
scas
adc
cwtl
push
or
not
stos
or
jmp
clc
daa
dec
cltd
daa
call
in
fcomps
or
aad
ret
repz
hlt
pop
jo
xchg
ja
mov
mov
loop
and
add
loope
add
and
repnz
mov
mov
hlt
int3
adc
out
pop
mov
sbb
ljmp
in
mov
and
pusha
gs
xor
roll
cld
or
dec
out
push
je
and
mov
cmpsb
push
shlb
icebp
sub
sbb
add
insb
lcall
fistl
cld
add
xchg
cmc
add
nop
add
sbb
jb
sbb
ret
leave
xchg
loopne
sbb
cmp
aas
mov
je,pn
into
pop
movnti
scas
idiv
sub
jl
scas
hlt
aaa
dec
jl
add
mov
sbb
pop
pmullw
jg
dec
pop
clc
les
or
push
pop
in
or
data16
inc
sbb
push
adcb
cld
push
das
adc
jmp
jbe
repz
dec
jne
lret
icebp
dec
mov
testb
mov
into
test
loopne
jecxz
mov
xor
cmpsl
cli
or
out
rcll
push
add
movsl
lea
lret
sbb
rolb
movsl
gs
clc
out
mov
push
jle
dec
push
jle
push
sti
cmp
repz
out
and
xor
push
xchg
fcomip
mov
mov
add
jo
mov
adc
in
insb
sbb
jmp
out
cmpsl
mov
lret
lahf
jmp
cmp
and
add
rcrl
sahf
add
loopne
adc
stos
jns
imul
xchg
add
sbb
and
add
xor
mov
lahf
xchg
ss
push
sbb
add
or
pop
sbb
ret
mov
inc
int3
mov
inc
cs
mov
cmpb
mov
jp
divl
loopne
stc
sbb
jne
icebp
aaa
mov
push
lods
push
or
xor
lcall
sti
dec
jne
jmp
fs
fistpll
and
add
xchg
into
cld
stos
adc
jne
dec
pop
xor
adc
in
mov
and
dec
adc
add
addr16
inc
and
addr16
notb
sub
mov
push
loopne
cmp
and
ds
xchg
dec
lret
sub
pop
lds
xor
mov
jnp
andb
xor
sub
mov
jns
and
dec
in
fbld
iret
in
aaa
retw
movsb
cmp
adc
cwtl
sub
sbb
movsl
test
test
add
sbb
iret
out
or
lahf
pushl
outsl
lods
or
out
sti
enter
jl
movsb
int
shlb
inc
jge
sbb
add
push
sbb
out
mov
inc
push
cmp
mov
lahf
push
je
jp
cli
cwtl
insb
lods
stos
sbb
insb
test
out
push
dec
aaa
sbb
or
adc
add
das
test
mov
fistps
xor
xor
mov
test
dec
clc
mov
test
hlt
dec
loopne
xor
adc
and
lahf
mov
and
in
orb
out
aas
push
jecxz
cmp
loope
push
daa
xorb
int3
pop
lods
les
lret
popa
ljmp
arpl
pushl
stos
sbb
fsubrl
daa
imul
or
xchg
fbstp
ror
mov
fisttpl
adc
enter
jle
xchg
add
xlat
mov
outsl
adc
lods
xor
jo
or
dec
or
out
aam
inc
xor
adc
rol
test
and
or
push
push
add
cmp
pop
and
aam
inc
push
mov
or
add
push
shll
mov
data16
out
push
mov
addr16
gs
mov
sbb
test
inc
and
popa
jl
ret
mov
and
sub
ret
xchg
jb
pusha
fwait
mov
mov
sbb
mov
adc
sbbb
lret
addr16
lds
out
sahf
into
fcoml
and
xchg
bound
jp
sbb
add
add
sbb
fstpl
stc
fimull
hlt
mov
add
xchg
dec
xor
lods
adc
mov
mov
sbb
add
gs
inc
mov
inc
sbb
mov
add
dec
pushl
out
inc
negb
add
ljmp
sub
stos
inc
add
sbb
push
call
out
fwait
movsl
lea
rcrb
cmp
sti
inc
inc
push
or
clc
insl
push
out
mov
sbbl
hlt
add
mov
sub
loopne
inc
jno
mov
out
adc
mov
addr16
fucomip
inc
aaa
sahf
pop
pop
mov
push
shr
jne
mov
loop
fwait
rcrb
mov
mov
sub
std
out
mov
fstpl
xchg
mov
adc
and
out
popa
aas
lcall
nop
jnp
pop
rdtsc
mov
ljmp
cli
mov
addr16
pop
ss
in
clc
xchg
inc
mov
loop
stos
cltd
int
add
jp
negl
or
push
addr16
mov
jno
add
ficoml
push
insl
add
or
dec
sub
pop
decl
jnp
repz
push
pop
push
mov
push
hlt
jnp
jge
test
adc
cmpsb
je
sbb
inc
sbb
jecxz
mov
int
add
ret
in
push
out
test
rcr
jmp
mov
insl
mov
fisubrl
jle
jae
loop
or
push
fdivrl
mov
sbb
sub
lahf
add
or
ret
add
inc
or
ret
xbegin
add
in
xchg
and
jbe
ret
jl
popf
iret
in
and
mov
in
push
push
push
aam
adc
cs
ficompl
jne
add
lret
in
jle
bound
or
lret
rorb
or
flds
cmp
inc
add
clc
and
aad
jbe
popa
or
push
mov
out
sbb
ret
out
in
xor
cmp
cmpsl
jnp
fwait
stos
scas
dec
sahf
sbb
test
ror
xlat
imul
bound
pop
ja
leave
lahf
int3
xor
push
xor
jb
cmpsl
out
jmp
jne
imul
bound
xchg
inc
fidivrs
sbb
divb
icebp
inc
add
or
insl
out
or
out
arpl
sarb
add
or
cltd
add
dec
int
cmp
sub
and
insl
or
lds
mov
rolb
adc
mov
stos
jge
dec
sbb
add
jp
test
aam
pmuludq
or
push
push
push
sti
andl
out
dec
push
fcmovne
jne
pop
das
test
addb
cmpsb
sub
adc
dec
inc
inc
sbb
xor
xor
fidivrs
sahf
mov
repz
dec
inc
iret
mov
mov
sub
or
into
dec
mov
fadds
add
mov
in
mov
cmpsb
mov
es
leave
sbb
enter
or
sub
sbb
jnp
jo
in
aas
sub
adcb
enter
sub
nop
dec
insb
add
jo
ja
in
jl
xchg
jae
adc
jl
mov
icebp
loope
lea
inc
cmp
imull
adc
lods
cmp
lahf
lods
int
in
jae
pop
lret
jae
xchg
pop
add
push
cmp
ret
mov
add
mov
fisttps
loopne
inc
out
leave
ficompl
mov
aam
or
jo
negl
aas
mov
jns
sub
fadd
and
push
out
mov
jle
aaa
pop
sbb
dec
xchg
pop
add
and
mov
jbe
xlat
outsb
sub
mul
xor
xchg
decb
inc
test
js
mov
adc
pop
shll
pop
int
dec
pop
xor
jge
or
bound
xor
roll
sub
xor
mov
jp
xor
pop
adc
addl
xchg
push
sbbb
fisttpll
mov
dec
push
mov
addr16
lods
aas
popf
addr16
test
mov
cmovno
call
dec
out
jno
and
push
movsl
mov
insl
add
call
faddl
popf
push
push
mov
push
aad
jge
mov
mov
in
or
movsb
cmp
sbb
jg
out
outsl
cmp
lods
sti
sbb
mov
call
mov
stos
adc
shl
jle
xor
in
push
inc
push
imul
adc
mov
daa
dec
iret
mov
and
ja
lret
iret
xchg
sar
aam
adc
jecxz
imul
sub
bound
enter
push
jmp
fmull
fimuls
mov
sahf
fcompl
inc
push
adc
stc
hlt
mov
pop
jbe
loope
push
je
sbb
xchg
mov
fildl
les
mov
push
popl
enter
stos
divl
xchg
or
leave
test
nop
mov
add
push
cmpsb
les
into
sub
cli
mov
aam
mov
int
jp
mov
test
adc
fadds
in
and
sbb
cwtl
adc
sbb
mov
in
out
test
movsl
outsb
jecxz
push
pusha
mov
imul
out
les
dec
xor
cmp
ret
add
or
sbb
mov
mov
push
add
jecxz
addl
inc
in
sub
cld
bound
push
arpl
pop
jne
mov
add
mov
jecxz
rcll
jb
push
cmp
pop
add
imul
xchg
insl
push
jb
push
mov
xabort
popf
bound
out
mov
cmp
and
ret
xchg
cs
add
xor
ljmp
mov
fstl
dec
push
insb
push
cmpl
stos
test
imul
mov
call
cli
dec
jmp
mov
jmp
lods
daa
xchg
mov
pushf
dec
push
dec
addl
repz
add
les
and
orb
adc
inc
push
jp
cmp
aad
inc
cmp
sbb
push
xor
aas
mov
shrb
int3
mov
xor
std
push
mov
cmpsb
inc
xlat
pop
mov
stc
lds
cli
mov
iret
xchg
adc
fiaddl
mov
jmp
pop
cmpsb
daa
out
sub
mov
or
mov
inc
lds
imul
int
cld
mov
popf
jne
aad
push
add
sub
ss
mov
push
inc
leave
jmp
int3
add
jnp
test
negb
out
sbb
xchg
lret
jne
inc
hlt
mov
adcl
fstl
fists
addr16
xchg
sahf
xchg
mov
adc
mov
jns
lret
inc
inc
nop
lods
stos
mov
in
sarb
stc
inc
insb
adc
int
ja
inc
in
scas
jbe
xchg
mov
sar
push
mov
add
shlb
repnz
dec
scas
xchg
es
lods
cmpsl
in
lret
pusha
adc
test
mov
cmc
stc
testb
jecxz
int3
mov
daa
rorb
push
or
dec
or
lds
mov
int3
jle
sub
jb
outsl
out
repnz
fdivr
adc
jle
fldl
mov
sub
jbe
inc
notl
sub
adc
imul
sti
mov
mov
cmpsb
mov
sub
sbb
sub
adc
or
inc
sbb
fidivl
dec
add
out
repz
jg
sti
adc
pushf
mov
jmp
mov
dec
adc
repz
add
out
mov
test
cmp
subb
add
and
popa
cmpsl
repz
sti
outsb
loop
ja
cli
lahf
dec
xchg
or
mov
adc
sub
in
std
cwtl
call
jne
das
or
inc
dec
dec
das
xor
cmpl
mov
ss
test
daa
outsl
xchg
lods
mov
stos
out
daa
test
add
scas
mov
lret
dec
fidivrs
sbb
pusha
inc
adc
outsb
addr16
jg
cmp
cs
cmp
fimull
cmp
mov
dec
lock
or
repnz
lds
add
pop
add
stos
adc
adc
fldenv
mov
push
daa
lcall
or
push
jno
out
adc
scas
lcall
mov
cmp
add
aad
insb
jmp
jl
and
xchg
push
jecxz
loop
xchg
sti
mov
sub
mov
mov
lods
mov
cmp
mov
xchg
sub
movsb
xchg
adcl
inc
sub
pop
push
mov
das
out
xor
pop
and
adc
mov
jmp
and
rclb
in
inc
dec
xchg
jecxz
mov
jge
mov
pushf
adc
or
adc
movsl
inc
testb
cmp
mov
cmp
mov
inc
out
adc
rorb
pop
dec
add
mov
mov
mov
sbb
ljmp
fcom
jecxz
loope
aad
xor
in
imul
rorl
in
jnp
lea
or
xchg
mov
inc
lods
and
shlb
inc
mov
jl
leave
cwtl
adc
jnp
adc
add
jl
stc
pop
adc
sbb
bound
into
xchg
jb
outsb
pop
xorb
mov
iret
or
popa
in
in
rolb
push
or
shll
add
and
not
psubusw
cmp
or
adc
and
ret
push
jle
rcll
xor
sub
inc
jle
xor
mov
ds
fsubl
sti
mov
xchg
and
mov
cmp
add
cmp
add
and
scas
out
mov
pushf
aam
outsb
sub
sub
jmp
cltd
xor
jp
bound
cltd
mov
xchg
add
jge
sbb
cmp
xorb
pushf
jnp
rcll
sbbl
fiadds
lcall
sarl
stos
push
dec
xchg
in
imul
or
out
in
pushf
out
sub
jbe
cmpsl
push
jmp
arpl
push
sbb
adc
aaa
lret
jbe
jl
fimuls
cmp
test
mov
adc
out
addr16
inc
cwtl
cmp
aaa
je
iret
or
iret
xlat
inc
xor
fdivl
popf
cmp
mov
pusha
mov
fisubl
aam
pop
lock
adc
loopne
or
mov
mov
xchg
movups
nop
add
pop
jle
jno
dec
sbb
sbb
js
cli
dec
and
insb
aad
cwtl
outsl
in
pushf
rcr
in
or
sbb
jo
mov
mov
add
add
xchg
jmp
or
mov
pop
dec
dec
push
xor
add
mov
add
or
int
mov
in
lret
cli
mov
repnz
xchg
adc
dec
sub
lret
pushf
out
mov
rorl
sbb
mov
ljmp
aam
outsb
dec
jmp
mov
loop
stos
or
fidivrl
pushf
out
mov
jp
int
mov
jg,pn
icebp
pop
add
sbb
jmp
sti
xor
cld
mov
clc
cmc
jecxz
ret
xchg
fldt
in
nopl
out
pop
pushf
inc
or
aam
in
movsl
adc
arpl
or
lock
mov
daa
test
sub
fnstenv
das
cs
and
add
or
jge
add
popf
inc
scas
shrb
rcrl
push
jb
mov
push
insb
dec
adcb
imul
sahf
in
cmp
insl
test
sahf
insl
lock
adc
mov
mov
inc
int3
ja
sbb
lahf
ret
int
jae
fbld
out
and
fs
call
cmpsb
insb
aaa
and
cmp
pop
fs
adc
std
leave
out
xchg
ljmp
les
inc
and
add
sarb
jle
inc
stos
or
gs
mov
mov
scas
jne
sti
adc
fstps
sub
stos
xor
and
aam
add
fs
jb
shl
add
stos
mov
sub
lahf
fcoml
mov
or
mov
inc
ja
in
out
sub
pop
arpl
dec
cltd
out
cmpb
mov
aaa
cmp
mov
xlat
stc
or
aam
lea
jecxz
mov
or
adc
jne
call
imull
sub
push
jne
in
cld
dec
addb
mov
jg
loopne
inc
mov
xor
push
es
add
mov
les
fdivrs
jp
outsl
mov
pop
push
add
ret
adc
aam
jecxz
add
push
rorb
dec
bound
cmpsb
ljmp
mov
lods
dec
mov
dec
lods
arpl
and
adc
outsl
les
loopne
add
pop
sahf
pop
add
dec
fwait
add
mov
and
push
dec
sahf
and
cmp
scas
xchg
sub
add
ja
fs
and
into
xchg
add
inc
fnstsw
rolb
adc
outsl
stos
xor
add
jns
roll
jmp
adc
sub
addr16
adc
repnz
jecxz
sub
aas
pop
dec
dec
popa
cmp
push
stos
cs
jno
push
int3
ljmp
push
inc
test
idiv
cmp
mov
jmp
sti
or
clc
insb
ret
subl
iret
sbb
jecxz
mov
sahf
cld
ret
push
out
jmp
adc
cmp
xchg
outsb
push
and
mov
dec
inc
js
inc
lret
repz
es
jno
addr16
mov
addr16
lds
jae
jne
addl
lcall
lret
hlt
adc
cmp
pop
cmpsl
fiaddl
xchg
dec
sbb
mov
movsl
sub
mov
enter
mov
and
sbb
add
int3
jnp
inc
adc
in
ljmp
addl
fsts
jp
loope
add
or
mov
ds
outsl
ss
or
pushf
add
mov
out
into
rol
xor
ret
xor
and
clc
pop
nop
mov
sbb
jle
mov
test
push
bound
fimull
jae
rcrl
leave
dec
int
jl
push
popf
sub
adc
fsubl
in
fcoms
cmp
in
inc
je
je
enter
inc
fwait
cmp
xorb
push
mov
loopne
push
inc
mov
or
xchg
push
cmc
out
mov
stos
adc
andl
les
je
addr16
xchg
inc
out
in
jmp
add
mov
adc
sahf
pushf
push
xchg
hlt
aaa
and
push
ret
xchg
mov
lods
jne
jbe
jae
pop
data16
das
rorb
iret
pop
in
stc
jecxz
jmp
lahf
adc
sti
jmp
sub
adc
pop
ss
ljmp
fisubl
sbb
leave
cmp
loop
mov
jmp
iret
cmp
test
lds
test
arpl
in
fsubr
mov
outsb
or
inc
in
add
or
lods
mov
add
repz
in
subb
fidivl
mov
mov
rcrl
sbb
push
addb
push
lea
sbb
adc
inc
int3
add
gs
lahf
pop
fildll
out
sbb
out
stos
sub
cli
inc
mov
jecxz
sub
adc
ror
movsl
add
adc
jg
xor
out
pushf
mov
xor
xchg
or
in
aad
mov
mov
add
call
int3
int3
repz
mov
adc
aaa
jmp
jo
inc
icebp
dec
daa
add
mov
xchg
pop
imul
xchg
push
rolb
or
sbb
sbb
mov
cli
or
cltd
test
out
sbb
out
adc
dec
xor
pop
int3
or
pop
mov
jns
cmp
xchg
pop
mov
out
adc
mov
loope
jmp
lahf
sub
and
pop
pop
sbb
adc
popa
or
add
push
jmp
ret
popf
inc
movsl
push
mov
inc
faddl
adc
clc
and
push
adc
test
pop
push
movsl
adc
cmpsb
jp
push
jle
pop
xor
mov
test
out
push
insb
fldcw
inc
xchg
lcall
fisttpll
inc
cmc
int3
pop
jae
pusha
sti
sub
dec
aam
add
shrl
sbb
jno
stos
dec
xor
add
add
fwait
pop
imul
push
xchg
movsl
movsb
pop
sbb
insl
push
sub
inc
sub
lods
cmp
sbb
or
push
mov
xchg
insb
add
mov
int
sbb
mov
hlt
rorl
insl
insb
jbe
movsl
xchg
fcompl
adc
popf
rorb
repz
in
jmp
inc
push
xchg
subb
into
push
stos
ja
pop
inc
test
daa
cmpsb
repz
fisubrs
jns
dec
sbb
add
mov
repnz
sub
sbbb
es
mov
jae
das
lret
insl
mov
ja
rorl
dec
xchg
mov
filds
lahf
hlt
xlat
sbb
out
es
cld
adc
adc
jmp
loopne
repz
lock
push
cmc
pop
sub
mov
out
xor
sbb
cmp
push
sub
mov
je
or
jmp
jle
dec
jbe
ficoml
adc
and
sbb
daa
cmp
add
repz
adc
icebp
mov
push
fadds
into
pop
mov
cmp
push
add
xchg
inc
jbe
lds
xor
repz
ds
xchg
add
adc
sbb
and
cmp
rcr
sbb
push
cmp
lock
or
fdiv
cmp
sbb
stos
shlb
xor
std
sbb
push
dec
ss
push
daa
or
stos
out
out
inc
jbe
setne
lahf
jb
inc
or
popf
lret
push
xor
mov
cmp
xor
push
hlt
sbb
pop
cs
jo
push
or
xchg
loop
adc
add
scas
shrb
lahf
dec
popa
jnp
daa
call
sub
ds
push
add
add
and
xlat
sub
les
mov
sub
mov
jecxz
inc
pop
sbb
xor
inc
adc
adc
ss
fcompl
xor
mov
out
fsubl
mov
imul
adc
mov
add
lret
cmp
aas
lret
in
sub
cli
pushf
aad
stos
pop
mov
out
jbe
add
sub
lahf
xchg
ror
scas
xor
xchg
add
sub
lock
cmp
sbb
or
bound
in
ja
mov
std
in
bound
das
add
jbe
das
pushf
jl
int3
add
js
in
in
cmpsl
outsl
sub
sbb
ret
cmp
shrb
mov
mov
ds
adc
mov
pop
into
in
xor
insb
push
out
insl
adc
dec
stos
cmpsb
inc
faddl
xor
mov
push
pop
and
sub
jecxz
repnz
and
jecxz
jno
pop
adc
je
mov
lods
dec
fcompl
mov
pop
sti
lcall
sahf
or
ficomps
cmpsl
cmp
adc
xor
jnp
jns
lock
cmc
daa
sbb
cmp
add
shrb
mull
add
movsb
mov
ret
dec
sbb
rorb
push
ret
mov
jge
ss
sub
mov
test
inc
sub
or
call
and
sbb
mov
ficoml
mov
sbb
data16
sbbb
jb
jbe
mov
or
call
pop
aam
lock
vmread
push
xchg
mov
push
insb
rcll
repz
push
cvtdq2ps
scas
mov
leave
mov
out
les
sbb
mov
pop
repnz
mov
faddp
sbb
mov
leave
out
add
adc
sub
cmp
mov
call
scas
fldt
in
loope
or
insb
popa
mov
lods
dec
adc
int3
add
loope
data16
ss
add
pop
mov
mov
mov
xchg
jno
into
mov
xchg
push
sub
movl
loope
jbe
fcmovu
scas
out
sbb
notb
mov
jbe
inc
adc
sbb
sub
clc
ret
ss
cmp
xchg
pop
jbe
xchg
mov
add
jg
cmpsl
push
xchg
and
stos
and
in
std
push
mov
inc
lret
dec
lret
xchg
xlat
sbb
push
push
jne
clc
rorb
int
lea
shr
ds
inc
clc
fs
fs
xchg
mov
iret
loope
add
mov
mov
xor
sti
fmuls
jno
xor
xor
sbb
adc
lea
scas
pop
push
arpl
xor
popa
xor
push
les
mov
sti
arpl
sub
cmp
in
stos
sub
xchg
inc
xor
xchg
cmp
xor
mov
sahf
out
fnstsw
inc
cmp
adc
out
pop
lds
pushf
fwait
cld
push
sbb
sbb
incl
lods
pop
mov
stc
dec
stos
out
jg
xchg
outsb
adcl
out
or
in
stos
out
jno
sahf
ret
sbb
jecxz
jne
add
out
cmp
sbb
adc
dec
push
add
adc
jbe
sbb
fsubs
cltd
int
lea
cmp
pop
call
pusha
lahf
push
addl
shll
leave
cmpsl
mov
add
icebp
je
inc
sub
pop
cmp
adc
pusha
iret
mov
sbb
repnz
mov
loope
call
xor
in
ret
repz
mov
ds
je
sub
xor
dec
jmp
adc
xchg
mov
aas
dec
mov
into
or
add
sbb
sub
add
daa
xor
mov
adc
adc
roll
imul
test
push
mov
out
test
inc
add
lcall
ss
les
out
xchg
leave
push
popf
jae
add
mov
shlb
push
jb,pn
ds
jmp
inc
inc
adc
add
add
mov
cli
sub
rorb
pop
int3
jno
sbb
jle
lret
mov
mov
or
cmpsb
test
fs
push
mov
pusha
mov
scas
in
inc
jo
nop
ss
ss
jmp
xchg
lret
orb
jo
leave
push
out
pusha
add
pushf
xchg
pop
adc
daa
nop
adc
xor
sub
loope
fsubrl
movsl
cltd
leave
inc
push
ret
dec
into
push
add
xchg
aam
movsl
fistl
out
add
add
push
gs
aam
sbb
nop
loopne
xchg
xchg
sti
mov
or
mov
mov
jbe
add
cltd
jp
mov
sub
sbb
mov
push
imul
stos
outsl
or
in
xlat
leave
pop
xor
movsl
shll
cwtl
insb
pop
push
xor
or
incb
fistps
mov
imulb
mov
les
addr16
sbb
pop
ret
in
mov
push
shrl
dec
cmc
dec
or
out
mov
popf
cmove
xchg
shll
inc
jne
jae
and
adc
out
mov
scas
sahf
sti
mov
add
aad
stos
sub
mov
aas
in
cwtl
out
jno
movsl
shlb
iret
lcall
out
jnp
jbe
sbb
adcl
pusha
mov
sbb
les
out
popf
hlt
pop
mov
add
lea
cltd
sbb
sub
pop
mov
sbb
mov
in
out
pop
or
clc
and
rcr
rcll
cmp
enter
xchg
cmc
sti
dec
out
mov
add
xchg
loope
mov
jns
adc
and
mov
test
in
out
mov
jne
mov
std
movsl
adc
int3
xchg
mov
pushf
bound
jecxz
adc
mov
xchg
lds
ss
leave
mov
inc
icebp
jae
push
xchg
xchg
jo
xor
in
loopne
les
xchg
pop
sbb
icebp
mov
jl
jae
push
push
add
add
daa
cmpsb
scas
sqrtps
xor
sbb
mov
add
mov
lret
scas
xchg
dec
adc
add
into
aad
mov
popw
scas
xchg
push
xlat
lock
add
jge
add
dec
iret
scas
cmpsb
insb
add
mov
lret
add
xor
cmp
mov
jmp
es
fcomps
push
push
das
dec
into
out
or
lods
test
inc
inc
das
add
decb
add
loope
sub
sub
mov
rcl
mov
jle
div
dec
jnp
shrb
mov
call
repnz
pop
mov
xchg
add
lea
sub
inc
adc
stc
imul
dec
sbb
inc
aas
es
jg
lock
scas
pop
cmc
pop
sbb
rcll
sub
fiadds
push
pop
or
sbb
adcb
lods
push
fwait
imul
pop
outsb
stos
dec
rcll
sbb
daa
movsl
pop
shlb
cmpsl
iret
mov
jecxz
or
jb
dec
shlb
insl
sbb
mov
pushf
stos
mov
mov
fst
pop
dec
rcll
hlt
push
fldt
xchg
inc
adc
shll
xchg
int3
ficompl
cmp
shr
add
insl
xchg
lcall
sarl
dec
inc
out
call
mov
arpl
or
nop
pop
adcb
pop
and
leave
repz
adc
lds
inc
push
sub
or
sbb
loope
xchg
inc
sbb
les
daa
mov
aam
sti
add
scas
insl
cmp
pusha
adc
push
lock
mov
in
jp
and
loop
jg
inc
lods
out
sti
push
adc
xchg
nop
jp
int3
add
inc
pop
stc
fsubrl
arpl
fiaddl
inc
xchg
xchg
pop
pop
loopne
sub
stc
popa
jg
int3
jnp
add
pop
push
add
push
push
xchg
and
mov
mov
mov
scas
dec
bnd
ja
vphadduwq
fidivs
dec
bound
mov
out
inc
pop
xchg
mov
cld
out
or
inc
daa
dec
or
adc
loope
jno
cmp
jp
roll
sbb
mov
pop
lret
cli
dec
push
repz
fistps
insl
or
push
or
loope
out
es
fucomp
mov
lret
sub
pushf
pop
loope
iret
xor
dec
ja
mov
xchg
gs
adc
mov
rcl
test
leave
adc
cmp
dec
out
aam
ja
movb
mov
movsb
and
mov
test
cli
insb
lret
jmp
sub
lret
pushf
loop
inc
inc
push
int
adc
jmp
jle
loopne
mov
loope
push
mov
pop
addr16
repnz
nop
hlt
jp
jmp
cs
jp,pt
stos
inc
fisttps
pop
cltd
add
dec
movsl
pusha
xchg
pop
add
gs
in
add
push
aad
pop
das
cltd
fwait
push
or
cmp
shll
cmp
push
pushf
jo
fcmovu
add
shlb
pop
movsb
insl
sarb
fildll
insl
pop
mov
adc
add
fbld
mov
scas
std
pushf
out
leave
adcl
movsl
popa
ret
push
xlat
test
mov
jbe
cmp
mov
sub
mov
movsb
mov
mov
pop
add
imull
nop
sti
cmp
enter
les
add
xor
fldl
jl
add
add
bound
lods
pop
jb
jle
rorl
mov
inc
dec
xchg
xchg
push
xor
lret
test
cmp
call
out
mov
sbb
add
rolb
loop
or
push
cld
test
insb
hlt
cmp
lods
in
mov
test
int
or
push
ljmp
adc
pop
or
jb
xor
mov
call
and
notl
rclb
ret
popf
notb
lret
push
fcompl
add
fsubrs
jmp
jle
pushw
fs
ret
insb
cmc
jle
pop
cld
mov
insl
loop
popf
mull
dec
mov
mov
outsl
bound
sbb
in
pop
push
jno
sarl
into
in
daa
and
ret
push
add
adc
xchg
into
outsb
mov
or
pusha
and
pop
out
sti
sbb
clc
daa
add
push
addb
or
mov
cmpsb
ss
into
or
jb
cmc
adc
cmp
inc
stc
jmp
sbb
out
cmpl
out
cmp
lds
add
jbe
dec
xor
mov
add
fdivp
jp
and
pop
jmp
sub
insb
rcl
mov
fcompl
or
sbb
jbe
adc
add
lods
enter
dec
adc
inc
xor
lods
adc
ret
mov
aas
inc
cmc
jmp
push
mov
insb
add
jp
cmp
and
inc
aam
adc
add
lds
adc
cmpsb
sub
push
xor
mov
call
push
cmpb
push
jl
xchg
shrb
lods
push
jae
aas
sbb
cmp
add
xor
enter
inc
lods
fcompl
ret
sti
sti
mov
in
push
test
sti
adc
dec
out
jns
aam
mov
ja
addr16
pop
pop
jle
mov
lock
sub
dec
mov
call
cmpsb
xor
pop
inc
into
lods
lods
pop
push
pop
sub
lret
testb
jbe
xchg
mov
add
fisttpll
insl
test
dec
or
dec
inc
pop
cmp
xchg
jmp
push
add
and
cld
cwtl
add
dec
test
push
cmp
int3
pushl
mov
dec
fnstenv
in
mov
xor
xchg
add
ret
pushf
sbb
inc
or
pop
mov
or
mov
insl
hlt
pop
or
xor
lods
mov
pop
xor
int
add
int3
or
fisttps
mov
sbb
adc
pandn
ds
lods
pop
or
jb
dec
rol
testb
adc
or
dec
inc
adc
and
sub
das
pusha
jle
sbb
push
pop
lods
xor
lock
out
and
aad
call
mov
test
std
or
jns
mov
hlt
xchg
aas
std
or
mov
jae
or
jp
lods
or
imul
xorl
pop
fcomps
loope
adc
clc
or
mov
punpckhbw
xor
pusha
pop
mov
mov
gs
sbb
sub
jg
xchg
rorb
arpl
fbld
xor
rolb
push
cwtl
sbb
nop
or
add
or
sub
push
mov
xchg
imul
ljmp
cmpsl
adc
mov
mov
dec
mov
data16
mov
and
cs
adc
mov
mov
adc
cmp
inc
aas
adc
cmp
lds
mov
push
lret
add
dec
xor
les
sbb
xor
je
mov
sub
mov
or
out
and
cld
fwait
cmp
loope
loope
scas
in
add
inc
jmp
insl
dec
fidivrs
fbstp
xchg
dec
push
rclb
adc
stos
int3
push
push
es
or
jb
mov
js
inc
sub
fimuls
bound
shrl
jne
mov
pop
inc
ret
aas
fs
add
or
jmp
iret
imul
repz
sbbb
arpl
cmp
in
mov
aas
and
clc
sbb
mov
xchg
or
div
sti
and
in
stos
xor
enter
hlt
scas
mov
loope
lcall
stos
mov
mov
out
jle
inc
push
mov
adc
cltd
sub
inc
adc
popa
or
sbb
lcall
push
adc
nop
push
add
sub
rcll
sarb
rolb
mov
inc
mov
shll
mov
or
outsl
jns
lcall
std
and
pop
stos
mov
arpl
xchg
pop
mov
add
dec
in
out
and
fidivrl
push
pop
pop
cmp
jne
shrb
mov
aaa
mov
je
aam
add
icebp
xor
cltd
lea
jbe
in
sbb
jle
test
xchg
int3
fwait
stos
testl
mov
mov
mov
sub
cld
loop
enter
nop
adc
adc
sarl
shr
cmpsb
mov
mov
bound
or
adc
add
std
or
icebp
outsl
loope
mov
jne
das
out
addl
jge
aad
cli
rorl
and
xorl
cmc
aas
mov
or
xor
sti
mov
adc
loop
into
mov
cld
dec
lds
adc
dec
mov
popa
mov
mov
adc
pop
xchg
pop
daa
lcall
jmp
inc
cmpsb
add
fimuls
in
loop
scas
xor
jmp
xchg
cltd
sub
sbb
nop
pop
ja
push
sub
add
sbb
lods
daa
sbbb
pop
aaa
sbb
jp
test
push
inc
sub
sbb
mov
test
jl
push
hlt
mov
dec
xchg
sub
rclb
mov
fimull
pusha
fbstp
xchg
les
pusha
repz
in
out
adc
dec
xchg
inc
test
cli
jns
xor
mov
dec
or
and
mov
adc
loope
xor
out
lea
ret
adc
or
in
adc
test
add
mov
lret
and
xchg
or
ficompl
int3
lcall
adc
insl
xchg
in
int
jns
and
pop
sbb
cli
insb
mov
and
or
push
out
ret
adcb
and
mov
push
jmp
push
xor
cmpsl
push
sub
sti
mov
outsb
sti
xchg
cmp
lret
sbb
inc
sbb
jns
xor
lea
ds
cmpb
lret
mov
adc
push
cmpb
push
out
cmp
int3
stos
sar
ds
jb
movsb
cmc
add
mov
add
xor
cld
push
mov
cmp
scas
xor
clc
out
in
xchg
ja
sahf
andb
inc
std
jl
push
fldcw
push
jecxz
ss
es
leave
jp
mov
adc
xchg
xchg
adc
dec
mov
push
adc
sbb
cmp
popa
cmp
sbb
push
inc
xor
and
add
daa
mov
push
repz
into
mov
popa
mov
cmp
inc
ret
push
xchg
out
xchg
jns
sarl
and
add
cmp
inc
add
inc
mov
jg
addl
into
dec
mov
pop
addb
adc
movsl
jp
enter
popa
int
jbe
push
and
pop
fmuls
push
cmp
xchg
jne
mov
jae
adc
ret
je
shl
cltd
sbb
cltd
jle
shrb
add
mov
adc
mov
loope
decl
lcall
add
sbb
in
call
or
orl
adc
add
inc
mov
dec
mov
push
dec
mov
sbb
push
aaa
dec
dec
test
cmp
or
call
adc
sbb
adc
rcl
sbb
mov
call
sbb
jp
movsl
sbb
jns
imul
imul
lret
scas
pop
insl
pop
lock
inc
loopne
lret
add
sbb
mov
stos
dec
call
mov
pop
sub
jb
outsl
cmp
ss
stos
out
and
lcall
push
or
test
int3
add
dec
mov
mov
jno
test
lods
xchg
adc
test
mov
and
push
or
pop
loope
std
mov
and
push
lods
mov
out
inc
dec
insb
add
lds
stos
into
mov
mov
pop
push
xchg
call
or
repnz
mov
xchg
mov
lret
mov
add
sarb
rcrb
int
aam
jle
ffreep
enter
fmull
cmp
insl
cs
mov
addr16
mov
lret
push
into
mov
xchg
inc
push
mov
lret
and
xor
cmc
loope
pop
outsb
nop
mov
mov
xor
add
sbb
les
add
ljmp
inc
push
hlt
cmp
xor
sahf
xchg
push
push
stos
sub
icebp
lea
push
sub
fsubrl
pop
outsb
or
xor
pop
or
mov
adc
rorb
or
in
out
sbb
lds
or
sub
cmp
mov
popf
out
sahf
cld
add
sbb
andnps
inc
mov
lock
aad
stos
out
into
dec
jb
leave
cmp
orl
repnz
mov
shl
or
lcall
insb
lods
jg
add
ja
mov
mov
push
pop
sbb
cld
dec
scas
jb
mov
test
cld
out
sub
sar
adc
dec
sbb
or
mov
xchg
punpcklbw
in
loope
fwait
dec
cmpl
cmpsb
xor
push
jmp
stc
popa
adc
aaa
cwtl
sub
and
roll
or
xchg
cmp
mov
repz
nop
mov
test
adc
mov
push
shrb
mov
iret
jp
in
int3
dec
shlb
stos
out
aaa
lock
test
jle
stc
repnz
push
rclb
sub
pop
sahf
xchg
fisubrl
pop
rorl
loop
ss
int
mov
cmp
push
bound
mov
mov
int3
push
leave
sbb
stos
pop
mov
cmp
fwait
repz
add
mov
jo
sahf
daa
aad
not
add
loopne
cmc
or
xor
xchg
insl
xchg
js
arpl
adc
lcall
sub
movsb
dec
jle
je
xchg
add
pop
in
mov
mov
add
mov
jge
dec
sbb
ja
jbe
fisubrl
adc
sbb
clc
dec
ss
inc
fldl
lds
lds
in
mov
mov
out
mov
sub
adc
sub
in
aaa
out
cmpb
xchg
in
mov
dec
lret
test
insl
sub
xchg
dec
lret
cmpsl
jmp
popf
or
aaa
jne
lret
aaa
xor
xchg
je
out
xor
cltd
loope
sbb
push
add
xchg
arpl
out
cmpsb
data16
sbb
pop
andb
pop
mov
testl
pop
pop
ret
or
add
lret
icebp
jo
nop
mov
pop
fimuls
adc
jbe
clc
outsl
insb
fucomp
shlb
int3
xor
faddl
movsl
bound
hlt
inc
mov
js
dec
mov
pop
xchg
jnp
add
movsb
rcll
aam
hlt
push
jp
dec
push
imulb
or
mov
inc
mov
mov
andb
ds
inc
jbe
outsb
stos
cmpb
shll
and
in
xor
push
dec
push
and
out
xchg
adc
rolb
pushf
sub
adc
pop
push
pop
push
outsl
or
add
adc
xor
movb
insb
mov
gs
inc
rcl
xlat
cmpsl
nop
jmp
lods
mov
dec
add
cmpsb
mov
mov
push
fiaddl
testb
or
test
mov
and
in
lret
loop
ret
out
lret
pusha
sahf
or
or
xlat
mov
add
push
movl
insb
adc
cwtl
jge
sub
mov
jns
add
adc
andb
mov
sbb
test
out
and
testl
outsb
aam
ds
iret
sbb
ss
sbb
adc
mov
repz
mov
call
insl
or
out
add
cltd
dec
adc
aas
int
pusha
push
sbb
add
cmp
mov
testb
jmp
icebp
sub
or
jnp
sbb
dec
repnz
sbb
cmpsb
bound
jecxz
ret
ret
iret
sti
insl
jne
out
mov
mov
xor
lock
xchg
mov
aam
adc
daa
out
lea
pop
or
jne
add
out
adc
loop
ficoml
in
ds
push
push
aaa
bound
adc
mov
shlb
sbb
int3
shll
lcall
cltd
jmp
sbb
cmpsb
cmp
add
mov
mov
cs
add
inc
fcoms
shlb
inc
cmp
jns
cmc
cli
mov
es
aas
push
mov
negb
outsb
aaa
jmp
call
fucomp
push
addl
adc
aad
jno
jno
addb
pusha
xor
mov
shrl
inc
jmp
pop
sbb
push
sub
test
lcall
mov
in
lret
rcrb
jno
leave
xchg
mov
jnp
sbb
dec
inc
xchg
and
aad
fistps
cmpsb
jnp
jl
icebp
add
sbb
imul
lret
movl
lahf
daa
mov
or
add
xchg
jl
cs
add
mov
push
shll
adc
mov
fwait
cmp
les
dec
insl
stos
fstps
mov
mov
add
repz
or
dec
mov
push
repz
call
pushf
add
popa
xor
dec
lret
dec
cmp
es
repz
sti
nop
add
sbb
fimull
xor
jg
out
fisubrl
sub
aaa
cs
fldl
push
addr16
jns
pop
fldl
push
dec
sti
sbb
xor
xchg
push
xor
and
test
scas
inc
test
dec
sub
iret
jecxz
add
inc
call
xchg
and
dec
pop
sbb
test
sbb
popf
inc
insb
adc
loop
xor
repz
in
dec
stos
jg
lcall
jns
push
fistl
into
in
sbb
stos
adc
push
fisubrl
aam
push
xlat
add
and
or
loopne
or
idivl
pop
jb
fcomps
imul
push
test
push
movsl
or
outsb
push
xor
les
jbe
sub
aaa
leave
mov
xchg
fwait
or
pushf
sub
xchg
or
and
sub
add
popa
mov
pop
jmp
sbb
push
or
or
movsb
stos
in
jne
xor
jno
mov
addr16
call
push
or
and
inc
js
gs
xor
cltd
xchg
into
xchg
sub
jecxz
cli
xor
mov
and
in
les
mov
adc
or
cmp
mov
addr16
and
outsb
add
xor
sbb
jg
out
cld
insb
add
pusha
or
ret
sti
and
dec
in
stc
insb
dec
aaa
fnstenv
cld
fistl
dec
hlt
dec
adc
imul
xchg
adc
bound
sbb
mov
sahf
cmpsl
cs
adc
and
xchg
outsl
or
mov
mov
test
cmp
ficoms
inc
ret
pop
mov
xlat
push
mov
lahf
jecxz
adc
in
or
cltd
mov
sbb
inc
imul
std
mov
pushf
js
ret
mov
add
call
sti
or
add
inc
push
or
sbb
andl
stc
adc
jmp
lret
leave
add
stos
jge
sbb
cmp
or
lcall
out
and
jg
or
pusha
jle
test
or
mov
sbb
xchg
pop
das
stc
popf
je
movsb
mov
incl
jnp
add
stc
jne
add
scas
dec
ja
sbb
movsl
out
pop
and
outsb
lods
or
fidivrs
add
adc
cmp
sub
rcrl
sbb
dec
add
or
or
dec
aam
xchg
pop
inc
or
stos
in
or
in
add
and
int
sub
das
add
cmpps
mov
lret
push
push
or
or
lock
inc
cmp
mov
inc
xchg
xchg
sub
and
or
test
gs
int3
movsb
and
or
int
lods
dec
call
adc
xor
add
sub
push
add
test
or
cli
out
xchg
sub
mov
mov
mov
das
or
mov
or
add
out
iret
movsl
gs
cmp
aam
jecxz
popa
xor
xor
and
loope
dec
or
ja
cmp
lods
dec
push
sbb
jnp
and
test
cwtl
lret
fimull
icebp
jp
adc
fwait
imul
adc
pushf
cli
or
push
mov
dec
push
ja
or
add
test
pop
mov
adc
mov
imul
sub
adc
stos
fs
pop
jo
push
sbb
xchg
mov
int3
xor
adcl
mov
adc
jl
add
xor
mov
lock
or
mov
lret
mov
mov
dec
jns
cmp
aaa
orl
push
cmc
add
sub
jne
fimuls
or
adc
cmp
or
mov
inc
or
xor
mov
dec
cmp
shr
jae
scas
dec
sahf
movsb
mov
cmp
push
dec
pusha
out
mov
and
es
jae
iret
mov
fsub
push
or
scas
lods
xor
gs
scas
sbb
movsb
mov
push
mov
push
mov
adc
les
insl
movsl
stc
movsb
or
ret
pushl
sub
lahf
sub
push
xlat
in
test
xchg
xchg
stc
push
stos
inc
mov
in
sbb
loope
xchg
xor
sbb
sub
nop
or
mov
test
out
lahf
pop
dec
in
jmp
insl
std
nop
jp
int3
in
outsl
pop
push
xchg
push
adc
decb
and
popa
add
sub
ja
rcrb
out
or
jbe
dec
jp
stc
push
mov
movsl
or
pop
std
lea
repz
cli
enter
ds
mov
popa
sub
test
add
icebp
and
or
mov
out
int3
mov
inc
dec
pop
or
je
mov
jle
xchg
inc
mov
icebp
fnstsw
shrb
sti
cmpsb
push
stos
sub
sahf
dec
sbb
pop
aas
or
jmp
icebp
or
pop
imulb
xor
scas
sbb
test
mov
xlat
arpl
sub
pop
xchg
or
rcll
push
or
je
aam
or
sarl
call
xor
pop
and
or
lahf
ret
int3
stos
and
adc
cmp
test
cmp
andb
jno
sbb
dec
mov
pop
or
xchg
or
loopne
sbb
or
pop
enter
imul
rcrl
add
xchg
cwtl
dec
mov
pop
ja
mov
and
push
adc
mov
dec
push
imul
bound
mov
cs
imul
insb
xorb
int
xchg
test
rcll
dec
or
pop
pushf
jmp
cmp
mov
mov
push
rorl
out
adc
jne
movl
mov
dec
mov
push
cmpsb
sub
aas
inc
lret
lods
sbb
lods
xor
sbb
dec
pop
push
inc
or
cld
push
pop
pop
or
or
add
mov
scas
push
nop
mov
and
mov
in
js
push
mov
dec
sub
stos
or
movd
cwtl
or
mov
je
lods
dec
mov
jmp
adc
insl
dec
jmp
or
push
jnp
jge
andl
add
add
fs
adc
jnp
or
icebp
jp
mov
and
add
lcall
scas
push
test
or
cwtl
dec
or
pop
inc
stos
in
pop
sbb
jecxz
adc
movsb
inc
mov
lret
cltd
or
and
xchg
push
push
or
in
sahf
orb
ja
add
leave
or
mov
and
or
mov
sbb
or
test
call
arpl
in
and
jmp
sbb
inc
lret
cli
call
sub
vmread
push
movsl
push
mov
push
bound
adc
outsl
sahf
ret
cwtl
xchg
lods
or
inc
pop
bound
push
mov
int3
aad
add
cli
pusha
fistps
stos
insl
sti
popf
mov
sbb
fimull
or
inc
and
mov
ds
or
adc
lret
movl
or
jl
push
push
or
in
sar
fimuls
mov
shll
adc
mov
fucomip
das
pop
shrl
icebp
inc
and
adc
xchg
push
mov
and
aad
push
add
in
lret
mov
or
xchg
ficoms
add
adc
pop
or
dec
loop
lret
cmp
add
outsb
les
cmp
adc
lret
cltd
jp
sub
pop
cmp
js
js
sbb
fadd
sbb
sub
cli
int3
add
and
into
lahf
insl
pop
cmp
lcall
std
xchg
shlb
or
in
inc
lret
adcl
test
sbb
adc
mov
lret
push
adcl
lcall
xchg
jle
ljmp
loope
into
jb
call
fs
sarb
lods
jae
push
push
dec
jmp
jle
iret
xchg
dec
adc
jbe
aas
in
mov
add
inc
mov
icebp
movsb
sbb
addr16
cltd
outsb
test
xlat
add
mov
fdivl
lret
dec
push
sbb
sbb
pushf
cld
add
jecxz
aaa
shll
sub
xchg
js
sbb
jmp
sub
subl
adc
out
sub
popf
adc
push
into
faddl
xchg
stc
jno
out
mov
jge
ja
daa
xor
push
and
add
pop
sub
jns
iret
mov
add
out
adc
shll
fcmovnu
sbb
mov
les
sub
jnp
popa
sbb
or
fadd
mov
shrb
jne
jbe
jg
and
xchg
call
aad
stos
xor
loope
sti
scas
xchg
adc
fildll
iret
popa
ficomps
mov
fs
mov
add
sbb
and
enter
fcoms
pop
pushf
mov
sbb
mov
adc
hlt
pop
cmp
ret
in
xchg
jge
xor
jp
xor
jnp
cld
mov
pop
mov
push
fiaddl
daa
add
icebp
cmc
and
jmp
push
subb
frstor
hlt
lods
dec
int3
aas
push
call
lods
jne
popa
fdivr
ds
out
mov
xchg
cmp
fldenv
pop
repz
out
mov
push
iret
enter
fcom
add
lcall
or
insl
mov
add
lea
mov
sbb
pop
mov
jl
and
or
fcompl
jo
ss
or
adc
mov
enter
mov
or
insl
daa
and
shlb
in
pop
arpl
mov
or
data16
mov
mov
aam
add
loope
stos
cmp
loope
sbb
pop
or
movsb
dec
push
mov
fistps
inc
daa
ret
pop
pop
test
loopne
int
push
jg
jl
das
push
dec
les
ljmp
aas
sbb
mov
sub
push
sarl
pop
pop
test
sbb
test
lea
and
adc
inc
scas
adc
sbb
push
bound
xchg
lcall
xchg
mov
add
jnp
test
lret
aaa
jno
inc
lods
enter
jb
add
call
ljmp
std
addr16
xlat
call
fsubrl
adc
jp
sub
aam
ds
pop
mov
push
sarl
pop
mov
xlat
daa
pop
lock
dec
or
stos
jp
lods
in
cld
scas
mov
inc
adc
dec
pop
lahf
and
insb
ds
scas
out
inc
loopne
inc
sub
mov
fwait
pop
loope
dec
sub
adc
cmc
mov
sbb
adc
jbe
mov
loop
ja
insb
dec
adc
sub
out
pop
push
and
cli
mov
push
test
aad
mov
xchg
jle
push
sbb
nop
test
adc
ret
dec
push
xchg
jo
movl
ss
push
mov
lds
jbe
push
xchg
adc
sub
lret
dec
mov
pop
inc
xor
pop
sahf
sahf
scas
mov
cli
ficompl
sarb
push
xlat
inc
test
outsb
xchg
sbb
and
add
push
hlt
addl
cwtl
mov
mov
xor
xchg
mov
stos
out
xchg
test
push
cmpsb
push
cmp
shl
stos
fwait
out
sub
scas
pushf
out
ljmp
dec
dec
xchg
out
push
call
lock
lods
or
mov
push
repz
push
test
or
cmp
push
ret
xchg
mov
add
setg
sub
or
adc
incl
sbb
pushf
mov
fwait
inc
out
gs
shlb
outsb
sbb
pop
stos
fadd
push
out
jo
pop
sbb
mov
push
int
in
fcmovnb
mov
cli
add
jnp
outsb
jmp
fnstsw
aaa
lods
sbb
in
mov
jp
jne
inc
cmp
lret
push
adc
jecxz
and
mov
rolb
in
mov
jmp
in
or
mov
rclb
add
add
lret
xrelease
cmp
jbe
imul
mov
xlat
mov
jb
sub
push
pop
bnd
lods
dec
xchg
xchg
shrl
repnz
arpl
je
sub
je
adc
stc
inc
xor
pop
loop
in
add
repz
dec
mov
pop
xor
call
test
out
in
dec
or
add
dec
mov
jmp
and
mov
or
ds
jno
into
call
pop
sbb
add
sbb
dec
fwait
inc
lahf
mov
in
mov
cmp
jecxz
lret
xor
out
jle
es
ret
fbstp
jnp
jmp
mov
iret
jge
imul
xlat
jns
popf
cmp
jp
mov
lahf
negl
xchg
cmpsb
or
adc
icebp
das
repz
aam
inc
push
orb
pop
mov
or
sti
stos
mov
arpl
test
popa
xchg
xchg
sbb
push
add
arpl
fwait
adc
sbb
pop
dec
pause
fisttpll
and
adc
adc
lods
or
call
or
aam
mov
push
shr
push
lds
sahf
push
sub
dec
xchg
repz
mov
popa
mov
popf
movb
repz
cs
push
jecxz
adc
add
lcall
sub
ret
aas
cmpsb
adc
incb
divl
stos
adc
push
jmp
lcall
lods
stos
xchg
test
jnp
or
scas
mov
jb
divl
xchg
mov
push
push
adc
sub
sarl
inc
push
and
add
or
sti
dec
adc
nop
dec
mov
test
mov
js
mov
les
dec
xor
dec
sbb
dec
inc
ss
xor
dec
mov
iret
and
mov
adc
add
cmp
push
int3
xchg
dec
ret
adc
cmp
sub
sbbb
mov
dec
cmp
xlat
out
cli
mov
cmp
scas
hlt
les
dec
pushf
shl
ds
mov
in
add
pop
addl
jne
mov
subb
mov
ret
or
pop
pop
sarl
enter
shufps
movsl
pushf
aad
pusha
xor
mov
dec
add
jnp
adc
xchg
adcl
daa
mov
ja
ret
cltd
xchg
jl
stc
scas
das
jno
pop
jae,pt
out
fsubl
clc
mov
sbbl
add
sbb
jnp
outsl
aas
push
lods
cmp
lret
mov
or
add
stos
into
sub
push
adc
les
lahf
or
sub
mov
adc
or
fidivs
dec
inc
add
xor
mov
mov
or
push
stos
call
cmp
fdivl
and
add
xor
cmp
mov
xchg
fadds
sub
add
roll
insl
mov
cld
inc
and
aad
dec
add
mov
dec
sub
loope
ret
in
push
mov
hlt
and
add
inc
lods
sahf
dec
dec
fwait
mov
inc
pop
and
jl
stos
mov
sbb
or
dec
xor
mov
dec
cs
daa
fnstsw
int
inc
xor
loopne
fs
xchg
cmp
sti
jg
mov
ds
dec
imul
aaa
ss
mov
jg
ficomps
test
hlt
pop
sbb
push
add
rorb
cmpsl
adc
xchg
mov
call
das
js
test
adc
or
lods
push
adc
mov
stos
mov
add
stos
mov
hlt
pushf
mov
lret
pop
mov
repz
lret
pusha
fiaddl
popa
data16
jnp
pop
outsl
pop
add
lret
mov
hlt
adc
pop
int3
movsl
rclb
js
cmpsl
cmp
mov
adc
lods
addl
sub
mov
fs
push
xchg
popf
or
mov
mov
dec
lretw
inc
icebp
sbbb
rcrb
cs
pop
int3
or
clc
cmc
stos
jmp
sub
xchg
test
pop
aam
ds
push
test
adc
cmp
inc
insl
lds
jp
aam
aaa
ret
inc
daa
mov
push
or
mov
adc
dec
and
mov
push
bound
xor
sbb
mov
xorb
mov
add
daa
and
or
adc
pop
cltd
fs
inc
pusha
in
cmpsb
fcoms
loope
cld
rorb
pushf
inc
push
mov
ficompl
scas
sub
scas
lods
ds
popa
dec
xchg
push
sub
cmpsl
push
inc
imul
jp
lea
mov
push
jmp
add
sbb
inc
mov
daa
fs
icebp
xorb
imul
add
es
aad
out
xchg
xchg
dec
jnp
xchg
into
outsl
xchg
adcl
or
sbb
jmp
cmpsl
mov
jecxz
dec
cmpsb
pop
dec
add
pushf
pop
iret
inc
mov
sbb
cmp
adc
cmc
out
pop
add
inc
sub
dec
push
add
in
cmovge
inc
cmc
fwait
jecxz
decb
sbb
inc
out
lahf
cmp
inc
jb
xchg
sbb
mov
dec
jo
mov
sbb
inc
mov
ss
mov
lret
fsts
xchg
mov
lock
dec
js
popa
or
jl
cmpsl
add
sbb
ja
adc
xlat
jno
cmc
cmp
stos
gs
and
pop
popa
test
jl
iret
cmpsl
push
adc
pop
sbb
iret
and
or
fbstp
and
loop
shll
in
push
pop
lock
out
stos
push
push
mov
test
lahf
sub
outsb
dec
pusha
lret
mov
mov
mov
mov
inc
push
sbb
mov
fwait
stos
push
and
push
or
popf
fsubp
lock
cmpsl
push
dec
xchg
movsb
orl
lods
mov
cs
mov
push
movsl
add
jo
pop
and
jg
sub
les
imull
stc
clc
push
mov
cmp
outsl
mov
add
aas
in
sbb
add
sub
jle
xchg
jns
mov
xlat
push
xor
mov
adc
dec
jl
and
pusha
out
pop
inc
adc
xorb
std
std
pop
add
sub
mov
jbe
fmull
adc
and
pop
outsl
dec
mov
shr
adcl
test
out
mov
sub
and
cmc
fdivs
jge
cwtl
push
pushf
adc
and
fcoms
lock
lret
ds
push
test
xor
dec
cmc
adc
aad
fwait
iret
inc
push
fdivs
daa
push
std
adc
sbb
loope
jmp
and
push
add
push
sbb
push
cmp
das
pop
std
sub
pop
mov
aad
or
bound
jb
rcrb
in
xlat
and
sub
cli
orl
mov
jo
fidivrl
shr
mov
jnp
test
into
stos
lcall
push
sarb
sbb
jle
dec
mov
out
jl
xlat
mov
std
jecxz
inc
xchg
xchg
pop
or
cmp
out
jbe
in
mov
int
dec
sub
rcrl
adc
xchg
mov
and
jle
or
add
dec
sbb
mov
clc
sbb
push
mov
shll
mov
push
das
iret
sub
cmp
cmp
inc
aad
or
adc
adc
or
xor
mov
ss
xchg
insb
insb
cmp
mov
and
xchg
les
add
jns
or
xchg
mov
iret
xchg
sub
push
js
das
or
mov
dec
dec
cwtl
js
pusha
clc
adc
iret
jns
clc
popa
ret
or
fucomi
fcmovnb
faddl
fimull
cmp
push
into
or
sti
xor
push
push
adc
pusha
ss
dec
jecxz
xor
scas
mov
js
mov
mov
jle
mov
lahf
lret
outsb
out
insl
fsubr
jecxz
dec
inc
mov
sbb
xchg
arpl
adc
add
cmp
aad
outsb
js
add
bt
int3
outsb
push
adc
orb
je
push
mov
stos
pop
loope
mov
ss
enter
popa
into
or
out
cmp
iret
shrb
add
pop
jp
push
or
rcl
leave
inc
xlat
inc
outsb
icebp
loop
xchg
aaa
popa
sbb
sbb
loop
sub
dec
and
daa
add
mov
add
mov
ja
in
imul
mov
jne
cmp
fiaddl
cmc
aas
stos
pushf
dec
outsb
mov
rclb
aad
inc
nop
sar
addr16
adc
mov
push
mov
bound
insl
mov
jmp
out
cmp
jge
or
gs
dec
pop
popf
int3
xor
daa
sbb
and
imul
loope
adc
sub
fidivl
add
pop
outsb
sub
sbb
mov
xchg
add
sbb
mov
pop
insb
in
int3
dec
dec
jbe
add
jge
adc
stos
mov
add
jmp
adc
jne
jmp
imul
xchg
inc
ss
push
sub
call
test
jle
hlt
jae
push
sub
scas
pop
mov
jp
add
pop
and
nop
dec
add
lahf
jmp
mov
mov
dec
mov
jecxz
movsl
jmp
push
or
fwait
je
decl
lods
lock
cmc
push
in
daa
aam
mov
xor
hlt
xchg
push
insb
rcll
outsl
sti
jbe
outsb
mov
or
xlat
scas
mov
mov
push
int3
aam
push
fwait
add
sub
out
dec
addr16
cli
hlt
mov
adc
mov
out
pop
sbb
inc
sbb
test
out
or
sti
rolb
mov
jnp
pusha
aas
aam
pcmpeqw
loop
clc
fstl
out
sub
dec
cld
fcmovnb
or
xchg
push
sbb
inc
lcall
loop
lods
dec
jnp
or
adc
cmp
adc
push
jns
sahf
pop
pop
lret
push
or
dec
sub
fadds
add
sahf
dec
addr16
xor
loop
xchg
sub
xor
add
mov
or
add
add
fdivrp
add
lret
or
and
roll
aas
gs
in
imul
jns
mov
push
jmp
popa
add
lods
mov
sbbb
sbb
sub
add
lret
aad
fstpt
pop
pop
rcrb
add
adc
dec
lahf
inc
push
imul
lods
adc
adc
jb
pushf
out
or
inc
cmp
in
andb
sbb
mov
lret
int
sti
push
fadd
push
adc
xor
leave
and
test
in
xor
push
sarl
repz
stc
lods
xor
in
jge
mov
add
push
cltd
adc
inc
mov
fs
aad
dec
out
sub
jp
sbb
mov
test
xchg
sbb
or
push
icebp
mov
mov
push
add
pop
mov
cmp
cmpb
xlat
or
xor
inc
jns
inc
cmpb
dec
or
cmp
xor
push
inc
addr16
mov
movsl
pop
aad
stc
dec
mov
add
enter
sbb
insl
jle
stos
es
test
int3
mov
xor
mov
sub
mov
ss
pushf
adc
dec
mov
fisubrl
and
cltd
ret
andb
rcrb
push
adc
xchg
jo
xor
sbb
jle
aad
or
mov
jno
inc
repz
nop
cwtl
pop
sbbb
xchg
sbb
lahf
fwait
pop
pop
retw
jmp
cmpsb
add
aaa
sub
int3
inc
lods
daa
sti
enter
push
xor
xchg
icebp
dec
call
xchg
sbb
pop
mov
cmp
repnz
scas
enter
jbe
xor
call
arpl
adc
xchg
mov
xor
lods
xchg
push
mov
jbe
jle
mov
push
sbb
fwait
icebp
inc
mov
xor
xor
and
push
inc
rclb
mov
and
jne
enter
adc
xchg
inc
out
adc
dec
push
sbb
dec
cltd
test
ret
jbe
stos
mov
mov
bound
add
or
sub
mov
rcll
js
add
jbe
cs
push
sbb
sub
icebp
outsl
xchg
cltd
popf
pop
ljmp
add
sbb
cld
out
arpl
add
pop
push
or
mov
in
jne
jns
inc
push
into
out
loopne
jne
loop
sarb
test
inc
xchg
dec
sbb
mov
or
stos
stc
std
scas
mov
jle
jg
cwtl
or
sbb
out
les
data16
dec
xchg
push
cmpsb
xor
adc
dec
ficomps
sbb
ret
jl
mov
daa
in
push
es
mov
xor
push
mov
mov
inc
outsl
outsb
jle
in
and
mov
xor
mov
xor
in
jecxz
jmp
sub
sbb
sbbb
lret
xchg
iret
into
in
repz
aad
fisubrs
inc
xchg
xlat
sbb
mov
push
jne
jmp
iret
fdivs
sbb
in
fidivrs
mov
adc
imul
mov
push
jne
arpl
pushf
lods
shlb
movsl
xchg
pushf
adc
sbb
add
and
sub
ds
stos
addb
mov
and
mov
jnp
inc
adc
jg
add
andl
sti
cmp
adc
dec
andl
out
cmc
stos
int3
imul
sahf
and
jge
inc
jmp
out
movsb
cli
and
fistpl
shlb
fucomp
das
daa
dec
stc
sarb
stos
out
cmp
mov
and
mov
imul
popf
inc
lods
jp
jecxz
cmpsb
hlt
int3
loope
inc
adc
hlt
push
push
pushl
sub
pop
sub
or
push
and
cmp
ret
enter
add
or
sti
jmp
adc
mov
lret
pop
mov
lret
mov
out
dec
cmp
shr
mov
jecxz
lret
and
add
insl
adc
xor
jnp
sbb
or
jae
or
pop
popf
dec
popa
test
sbb
mov
dec
lcall
fs
push
or
repnz
cwtl
sub
pop
test
mov
xor
add
add
cmp
inc
insl
sbb
or
cmp
addl
sahf
jmp
inc
mov
out
loop
leave
rcrl
incl
cmp
insb
push
add
inc
into
add
repz
mov
lods
mov
aad
stos
and
sub
jns
out
ds
les
sub
adc
cld
mov
cltd
push
sbb
fdiv
sbb
xchg
pop
jbe
shl
mov
cs
mov
ds
mov
jp
out
orb
adc
add
pop
inc
jne
aad
pop
mov
loop
dec
xchg
pushf
sbb
pop
push
dec
aad
add
or
jnp
dec
inc
ret
scas
pushf
idiv
or
dec
mov
inc
sub
stos
pop
jge
sbb
rolb
jo
imul
stos
adc
shrb
icebp
jl
jmp
xchg
and
push
or
mov
pop
jmp
lock
mov
imul
bound
and
push
or
push
sub
push
test
cli
jb
insl
lahf
push
ret
xchg
pop
loop
cmpsl
xchg
in
xor
add
out
xchg
in
or
test
sub
negl
int3
ja
inc
repz
mov
inc
jb
push
and
aam
mov
repz
aas
push
jl
in
mov
add
fisubl
sub
mov
jns
lods
add
sub
or
xor
cli
loop
pop
mov
mov
es
or
mov
mov
add
aad
loope
mov
xchg
loop
sbb
lret
or
cwtl
add
cmp
je
jne
loopne
mov
inc
cwtl
aam
inc
insl
bnd
and
push
ja
leave
xor
gs
mov
into
pop
push
or
mov
push
mov
push
pushf
shr
loope
or
jmpw
ret
sub
daa
mov
sub
jbe
add
jnp
aad
xor
test
mov
lahf
je
scas
sbb
xchg
pushf
in
cmp
adcb
add
xchg
fnsave
loope
dec
push
dec
shll
jl
or
fidivl
mov
in
push
jle
pop
jp
or
movsl
sub
out
fldl
dec
jmp
jo
sbb
inc
hlt
mov
das
dec
add
js
mov
or
imul
sbb
fimull
shlb
xchg
ljmp
in
andl
cltd
jp
pop
ret
scas
test
popl
pop
ljmp
and
inc
adc
sub
add
insb
cli
dec
jmp
adc
nop
nop
inc
add
xor
lret
dec
es
sbb
sti
lods
sub
mov
add
imul
mov
fnstcw
pop
jmp
adc
lahf
sbb
lock
ror
sub
sti
scas
dec
mov
lret
pop
adc
jo
aad
xor
in
cltd
mov
inc
jne
lods
add
in
cli
jecxz
push
jno
lahf
push
inc
fisubrl
cmp
call
lahf
sub
frstor
adc
add
jmp
hlt
cmp
nop
mov
push
jge
mov
xchg
cld
xor
mov
js
add
std
mov
lea
push
pop
dec
lock
test
test
dec
add
stos
jecxz
in
adc
sub
outsb
mov
mov
fimuls
adc
js
pushf
sub
clc
inc
mov
loope
sbb
repnz
into
jp
adc
add
pop
sbb
ja
out
ds
bound
sub
xor
jne
jp
jmp
mov
xor
mov
mov
cmp
dec
test
mov
or
mov
adc
sbb
add
xor
test
mov
andb
nop
mov
bound
mov
stos
scas
adc
insb
lahf
jae
cwtl
inc
out
dec
pop
fmull
test
fidivs
adc
add
mov
addr16
dec
ret
test
push
ficompl
xor
inc
inc
int
aam
mov
lods
nop
ret
and
xchg
test
adc
mov
ret
cwtl
rol
lret
mov
mov
add
cmp
pusha
and
das
adc
or
jns
add
jg
dec
add
cltd
jbe
push
orb
fidivrl
out
fdivrp
add
lods
cmc
lock
push
cmc
pop
inc
mov
jno
daa
fwait
add
mov
jno
xor
stos
enter
les
and
addr16
jb
xchg
mov
nop
scas
test
lds
lods
add
mov
sti
xchg
aad
mov
xchg
add
test
jns
fwait
xchg
xor
push
mov
mov
icebp
pusha
add
shll
cmp
sti
outsb
xchg
test
test
pop
jae
sbb
ss
std
xchg
mov
and
icebp
push
shll
push
movsb
inc
fdiv
fisubl
mov
and
cmp
popa
stc
xchg
mov
or
and
mov
sub
xor
arpl
stos
hlt
adc
or
cli
or
jecxz
pop
stc
dec
xchg
pop
out
mov
pushl
or
movsl
aad
mov
jmp
inc
out
jno
sbb
in
inc
int
cld
sbb
cld
fidivl
inc
push
pop
add
inc
daa
fisttpl
inc
push
es
loop
repz
jns
push
dec
fs
inc
xor
and
les
push
jne
mov
fcompl
dec
repz
mov
cmp
mov
jp
out
dec
mov
cmp
fidivl
fisttps
pop
cld
pop
sub
cmp
mov
lods
mov
or
notl
daa
in
inc
std
iret
incl
sahf
out
mov
movsl
jg
mov
add
cmp
js
repz
or
cmpsb
mov
or
stos
jne
popl
aaa
popf
es
pushf
or
pop
repnz
add
loope
push
test
xchg
pop
jl
adc
mov
xchg
xor
xchg
test
cld
inc
mov
out
gs
mov
cs
sahf
add
or
mov
push
jno
dec
stos
xchg
cmc
in
inc
std
push
jl
mov
lea
inc
xor
mov
sbb
lcall
sbb
add
sub
xlat
xchg
pop
mov
icebp
inc
insb
xchg
inc
fdivrl
repz
fpatan
xchg
fcmovnb
push
mov
cmc
adc
mov
cld
in
lods
lret
fstl
push
pop
push
lods
sbb
adc
dec
dec
mov
inc
ret
push
or
call
fcompl
enter
push
jne
push
addl
addr16
aaa
xorl
sub
test
mov
inc
nop
or
cmp
dec
jae
add
add
sar
adc
jno
mov
mov
dec
xor
mov
sbb
sub
pop
xchg
and
push
inc
add
cmc
mov
pop
pop
test
xor
addl
cmp
test
shlb
imul
xor
cmc
pop
sbb
out
mov
in
ja
int
mov
fs
pushf
jnp
je
outsl
push
add
cmp
out
push
jns
mov
in
lods
mov
rolb
jle
lock
cmp
xor
push
jge
cltd
xorl
push
push
out
xchg
mov
ror
jnp
xor
ret
out
mov
in
in
lods
push
sbb
jnp
int3
jno
xor
sbb
movb
dec
sbb
add
add
cmpsb
xor
or
hlt
adc
lock
jp
aad
movsb
xor
add
cmc
cmpsl
and
subb
push
pop
int3
mov
pushf
xor
and
adc
or
mov
dec
sbb
mov
sub
cmp
mov
mov
sbb
jbe
mov
mov
adc
mov
push
and
add
neg
and
jp
lcall
in
fnstcw
jnp
xchg
dec
inc
fs
lcall
andb
push
mov
sub
adc
adc
mov
ret
insl
insl
dec
cmp
adc
jb
int
iret
and
push
or
ljmp
in
push
out
push
mov
loopne
lds
popa
sbb
in
pop
mov
stos
add
into
add
fcom
sbb
mov
lock
lcall
mov
ss
lock
mov
adc
addb
into
shlb
sbb
jb
pop
sub
js
insb
icebp
insb
xor
repnz
out
add
sbb
gs
sti
fmuls
pop
stos
iret
testl
sub
sti
cmp
enter
enter
lret
popf
ds
sub
inc
imul
lahf
out
loop
dec
and
jns
nop
out
and
in
iret
sbb
cli
mov
daa
pop
enter
pop
clc
repnz
and
inc
fadd
inc
adc
adc
cwtl
inc
mov
lds
iret
adc
add
pop
push
fdivr
iret
dec
add
rorl
push
xchg
sti
loop
test
orb
enter
aad
jmp
ljmp
jae
jns
jns
sbb
lret
out
nop
push
out
aam
push
cmpsl
leave
or
sub
or
in
ficompl
jmp
adc
add
out
fidivrl
inc
sbb
pop
fcomps
push
stc
cmp
in
pop
dec
lcall
in
add
pop
dec
and
sbb
ficoml
and
rcrl
sahf
cld
or
add
jb
inc
pop
add
fwait
inc
pop
and
add
xlat
rcl
cmp
hlt
movsl
sbbl
dec
cltd
inc
aaa
sti
push
adc
mov
fwait
rolb
mov
or
enter
loopne
add
lret
sbb
outsl
push
lcall
ljmp
sub
pop
jmp
int
cs
mov
scas
test
in
outsb
cmp
dec
testb
in
xchg
jecxz
adcb
shll
inc
and
inc
jne
sbb
ja
fisubl
movsb
cmp
test
xor
ret
xchg
fs
push
mov
popf
cmp
jmp
jmp
lds
movsb
das
lahf
mov
aas
add
arpl
cltd
push
or
and
or
xor
pop
sub
push
ffree
push
dec
mov
std
stos
stos
adc
sub
pop
sub
or
and
add
mov
jle
rorb
add
rolb
push
sub
data16
or
in
jnp
cwtl
int3
xchg
fisttpl
lret
daa
adc
mov
fisubl
int3
or
mov
or
mov
lods
push
cmp
gs
mov
xchg
push
push
and
sbb
or
bound
repnz
js
cmc
push
popa
ja
stos
sub
pusha
push
dec
dec
pop
sub
ret
add
push
sub
cmc
loopne
add
pop
cmp
in
sarl
and
pop
lahf
and
adc
or
sbb
pop
mov
cld
jno
hlt
popa
jg
jmp
int
lea
cmp
scas
mov
into
inc
sti
ret
sarl
dec
jb
test
sarl
clc
dec
int
xor
fs
popa
dec
not
or
pop
xchg
popa
push
in
adc
sbbl
pop
pushf
stos
outsb
sti
sub
cs
inc
inc
inc
cld
rorb
popa
mov
repnz
gs
cwtl
shrb
mov
inc
icebp
sub
cmp
sbb
sub
xchg
cmp
mov
sbb
test
imul
imull
cs
mov
popa
mov
mov
mov
mov
xchg
and
and
mov
std
mov
inc
fisttpll
jp
cmp
mov
int3
lret
inc
and
cmp
push
jno
nop
call
out
mov
push
cld
lds
pop
jo
adc
or
xchg
je
add
jo
scas
ret
sbb
ror
fstpl
hlt
pop
jns
dec
jl
cld
add
sti
push
scas
inc
out
aaa
cmpsl
mov
mov
and
and
xchg
pop
out
mov
mov
jno
mov
pop
mov
test
cmp
inc
iret
sub
inc
adc
stos
jnp
jno
push
pop
cmc
xchg
add
nop
inc
repz
js
cmpsl
in
lret
rcrb
xchg
inc
dec
ret
or
fmull
mov
lcall
xchg
push
adc
sub
int3
xchg
repz
insl
addr16
xor
les
cmp
fsubl
subl
cli
add
mov
popa
and
out
sbb
and
hlt
in
pop
inc
or
push
add
mov
aas
in
pop
xchg
push
cmpsl
aam
pop
or
jecxz
aaa
sub
call
add
dec
test
mov
inc
xchg
mov
into
out
sub
aam
frstor
aas
les
push
xchg
add
out
push
test
mov
add
or
fistpl
and
subl
fst
mov
cs
test
push
in
stc
aad
sbb
jo
dec
mov
add
inc
mov
sahf
mov
aas
sti
lods
or
inc
cltd
icebp
mov
pusha
pop
test
je
push
mov
cmc
adc
stc
sub
sbb
cmpsl
lods
xchg
sub
xor
leave
mov
adc
add
and
fsubr
sub
cltd
sbb
xchg
in
outsl
push
inc
subl
push
loop
pop
mov
enter
shl
sti
mov
push
or
mov
pop
sub
sti
gs
int3
or
sti
mov
loop
test
xlat
leave
fildll
out
or
pop
adc
dec
push
jl
mov
mov
pop
add
mov
bnd
jo
ffree
mov
add
jbe
sbb
imul
cltd
cmp
test
in
scas
adc
ja
sti
push
insl
scas
imul
adc
call
add
ds
out
repz
inc
cmp
in
dec
ds
int
std
fldl
enter
les
xor
adc
jne
dec
jl
lahf
int3
div
and
fistpl
imul
and
mov
cltd
loop
or
in
inc
in
push
out
xor
pop
push
jmp
ja
fwait
out
flds
push
mov
jbe
loope
shlb
pop
add
clc
dec
push
aad
inc
add
sub
lahf
nop
xor
adc
mov
push
aam
sbb
or
xchg
movsl
nop
mov
int3
mov
cs
mov
jp
and
nop
hlt
lods
sar
inc
lds
test
push
adc
cmp
and
popa
test
cmp
aad
mov
push
mov
push
inc
mov
sbb
or
inc
mov
dec
push
push
inc
cmpsl
sbb
jp
arpl
xchg
test
call
ljmp
sbb
adc
fdivs
add
push
sbb
add
out
mov
fcmovne
sbb
add
arpl
inc
fwait
movsl
fiadds
sub
xlat
add
cmp
cmp
jae
rcll
jl
mov
mov
rorl
mov
mov
bound
inc
mov
fiaddl
mov
cmc
xor
mov
je
sbb
jb
dec
push
cmp
mov
out
pushf
in
fnsave
sahf
push
jo
insb
dec
adc
cmp
gs
int
ret
xchg
pop
aam
insl
jno
mov
aad
addr16
pop
dec
div
jmp
xor
aad
mov
mov
sbb
out
mov
mov
test
add
lea
cmpb
lcall
scas
add
adc
jmp
inc
fs
adc
and
dec
sub
mov
cld
outsl
les
cmp
dec
scas
mov
jb
push
push
jnp
jl
add
imul
sub
int3
dec
rclb
in
int3
add
std
add
lods
inc
dec
cld
int
je
rorb
mov
sbb
mov
push
sar
lahf
sbb
aaa
lds
or
xor
lds
xchg
sbb
cmpsb
pop
clc
cmp
inc
in
es
movsl
dec
dec
jmp
cmpsb
mov
xchg
adc
push
out
xchg
jo
jno
inc
xor
lcall
add
ds
ficompl
cmp
push
pop
mov
cmpsl
cmp
cld
jmp
push
jecxz
mov
mov
call
dec
icebp
pop
lcall
enter
add
mov
movsl
add
mov
mov
ds
sbb
sbb
addr16
mov
mov
mov
xchg
adc
mov
adc
mov
daa
cmc
and
sbb
adc
jg
int
or
jl
movsl
dec
and
pop
out
lock
pop
pop
inc
fildl
mov
sub
ds
and
sub
scas
lcall
or
mov
xchg
fsubl
jecxz
dec
add
fs
fidivl
bnd
cld
sbb
sub
les
js
sub
out
call
loopne
mov
xchg
js
popa
fisttps
inc
fsubrl
insl
in
rorb
sbb
iret
ja
xchg
pop
test
mov
xor
xchg
push
stos
sahf
inc
inc
aad
jecxz
jae
shlb
into
sub
outsb
arpl
cmp
in
dec
addl
test
shld
inc
jmp
in
loopne
rcrl
test
add
es
adc
add
dec
stos
repnz
out
fistps
ljmp
aas
jbe
mov
or
pop
mov
rcll
sbb
jecxz
rcrl
jb
sbb
call
insb
mov
xchg
rorl
sub
scas
ret
les
jmp
shrb
in
jns
push
sbb
xchg
jl
das
sbb
pop
dec
mov
cmp
push
fiaddl
jne
ret
dec
cli
add
ret
roll
imul
and
enter
add
out
outsb
icebp
loopne
aad
mov
adc
push
lahf
push
movsb
xchg
lds
mov
out
sub
or
ret
sub
jns
mov
push
or
std
iret
frstor
adc
mov
adc
or
or
dec
add
into
cld
xor
xchg
push
stc
mov
shlb
jo
pushf
fwait
mov
jecxz
insb
lcall
and
jmp
in
mov
es
sbb
inc
or
jecxz
cmp
pop
lock
and
mov
movsl
ja
mov
mov
in
mov
pop
push
jle
adc
daa
sub
das
scas
outsl
cmpsl
aam
int3
push
or
push
adc
les
xor
aad
jle
dec
loop
dec
dec
mov
jp
or
xchg
ss
in
lods
adcb
rorb
mov
xchg
dec
loopne
adc
testl
mov
mov
insl
fisubrs
or
jp
and
xor
ret
and
fisttpl
mov
adc
mov
inc
outsl
or
into
dec
mov
cmpsl
adc
out
push
int
out
fnsave
or
pop
nop
cmp
sub
sub
bound
adc
push
sub
push
dec
jge
or
sub
or
mov
xchg
jo
mov
cs
rcr
call
arpl
test
sub
scas
or
cs
dec
add
mull
shll
push
add
in
pop
das
add
test
fwait
or
or
pushf
mov
cmp
push
in
xchg
adc
or
cli
fsubrp
iret
punpckhdq
lock
xor
xor
mov
or
icebp
mov
xor
or
dec
jmp
test
adc
sub
sub
dec
mov
adc
xlat
es
stos
lret
sar
push
fisubl
mov
push
stos
iret
data16
or
adc
xchg
or
nop
movsl
xchg
ja
dec
out
sbb
fldl
sub
pop
xchg
and
testb
jge
lcall
jl
repnz
mov
aad
xchg
ds
xchg
repnz
dec
mov
xchg
sbbl
fdivs
xchg
push
inc
push
mov
adc
or
xchg
inc
cmpsl
daa
cmp
mov
sub
jb
ljmp
adc
and
or
mov
jns
and
mov
stc
cs
push
or
inc
sbb
xor
mov
dec
jnp
movsb
dec
xchg
insl
nop
mov
hlt
add
xchg
xchg
mov
or
rclb
inc
or
fwait
lds
or
mov
icebp
mov
adc
js
or
dec
jbe
xor
jmp
in
into
stos
pop
mov
xor
lret
or
rclb
lds
pop
adc
and
sti
push
add
fst
adc
rclb
mov
or
jge
mov
pop
repnz
inc
mov
lods
lahf
xor
in
pop
sbb
jnp
lods
mov
inc
aaa
adc
jecxz
lret
out
push
pushf
xor
or
test
or
push
mov
jge
xchg
mov
lret
in
into
arpl
pusha
aas
push
nop
iret
sbb
or
ss
mov
in
fwait
leave
jnp
mov
cwtl
jg
rcrl
lods
sbb
mov
cmp
push
lret
sti
mov
sbb
or
xchg
xchg
decl
sbb
aas
imul
out
in
cmp
lret
jle
jne
mov
mov
inc
or
inc
insl
fcmovb
cmp
int
subl
iret
sub
sahf
dec
jp
test
mov
cwtl
in
out
mov
add
dec
or
inc
out
in
jle
fimuls
mov
lods
lret
fwait
adc
in
lods
inc
testb
test
pop
lret
mov
idivl
ret
jne
jae
or
or
into
dec
imul
pop
mov
mov
pop
push
xchg
inc
sti
or
and
repz
cmp
popa
mov
jl
aad
jmp
incl
push
loopne
cmp
sub
mov
or
dec
jnp
inc
or
jns
data16
sub
lahf
or
mov
jmp
movsl
dec
lea
or
sar
dec
and
fists
push
xor
into
sbb
pop
daa
shlb
or
push
aad
dec
jae
fxch
add
push
in
or
xchg
loop
jge
sahf
mov
jg
and
icebp
or
xchg
inc
mov
loop
bound
pop
lea
mov
stos
xchg
or
mov
xor
push
imul
in
push
or
aam
lahf
sub
ret
outsb
xchg
adc
in
leave
imul
in
decl
jmp
outsb
and
cld
mov
fmull
and
sahf
fs
sbb
push
in
inc
cmpsl
pop
pop
sti
outsb
adc
lods
cmpsb
aaa
xor
mov
mov
add
ret
test
or
imul
jmp
push
ljmp
leave
jns
xchg
pop
pop
or
or
sbb
dec
icebp
or
adc
jge
or
out
xor
mov
daa
idivb
inc
imul
pop
pop
or
inc
or
xchg
or
sbb
pop
lcall
lods
out
stos
or
sbb
aad
or
xor
std
imulb
lock
or
ja
or
es
mov
mov
cmp
or
leave
shrl
mov
stos
ljmp
or
dec
andb
jb
push
pushf
lock
adc
push
or
sbb
cmc
sahf
insl
mov
xor
repnz
das
mov
xchg
shlb
pop
hlt
cmp
movsl
rorl
pop
rcrl
cmpb
and
pop
test
adc
sub
pushf
in
icebp
in
out
and
push
or
push
ret
subl
pop
xor
adc
ljmp
sub
ja
pop
sub
rolb
adc
or
push
out
imull
rcr
push
sbb
mov
jl
mov
dec
imul
rorb
test
cmp
push
sub
std
popa
adc
add
inc
sub
inc
inc
sbb
push
mov
cmpb
aam
nop
mov
or
xor
inc
sub
lock
push
sbb
xchg
fwait
or
int3
jl
mov
pop
shrl
lods
pop
out
and
pop
pop
imul
mov
jmp
xchg
cli
jno
and
sbb
push
adc
or
adc
addr16
mov
and
lods
cld
sub
popf
decl
pop
out
ret
or
shlb
and
fcoms
or
cmp
rolb
sub
ss
iret
in
pop
mov
insl
or
jae
lret
enter
mov
fs
inc
mov
aam
push
push
adc
dec
add
inc
loopne
cmp
or
xor
in
sbb
or
mov
imul
rcrl
scas
cmp
shr
jmp
jl
or
or
xor
mov
fmul
inc
sbb
sbb
js
nop
xchg
or
lret
ds
jns
dec
lcall
dec
xchg
ljmp
sarl
sub
or
jo
or
popa
flds
fnsave
mov
cwtl
fistpll
shll
xchg
jnp
or
shlb
ret
cmp
les
ss
push
push
sbb
jo
xor
test
sbb
xchg
ret
dec
jle,pn
push
sub
sbb
int
adc
adc
xor
push
int3
xchg
xchg
scas
mov
sub
cmpb
mov
popf
xor
adc
sbb
mov
and
xorl
lds
adc
and
jecxz
das
cmp
cli
cld
or
out
out
push
jle
cld
adc
dec
popf
mov
inc
add
mov
cmp
push
lods
and
and
int
fwait
cmp
pop
adc
cmpsl
sub
mov
popf
shrl
pop
mov
cmp
adc
cwtl
bound
pop
add
out
aaa
inc
xor
sbb
outsb
or
add
cmp
mov
push
and
data16
sub
fcomps
mov
pop
cmp
xchg
daa
rolb
fdivs
xchg
movsl
cltd
call
js
add
and
popa
sbb
lea
out
pop
add
push
outsb
xchg
jns
out
sbb
xchg
lret
adc
push
xchg
sub
sahf
mov
lea
mov
les
push
xor
jb
into
jle
addr16
loop
outsb
hlt
movsl
sbb
mov
test
in
cltd
sbb
jecxz
push
cmp
les
call
mov
push
in
inc
movsb
inc
push
mov
sub
shr
or
mov
repz
and
mov
les
daa
sbb
jo
in
add
inc
movsb
fsubr
mov
sbb
xchg
in
add
sti
test
sbb
or
sub
pushf
pop
out
cmpsl
cli
jb
inc
pushl
movsl
scas
and
test
fs
dec
mov
out
iret
jb
aaa
fwait
lahf
mov
aaa
repnz
lods
outsl
sbb
sub
out
dec
xchg
cltd
sbb
mov
jle
in
addr16
shrb
fisttpl
push
scas
fs
dec
and
cmc
sbb
mov
xor
test
test
mov
out
int
mov
popf
xlat
les
xor
in
mov
cmp
scas
cli
adc
data16
xor
jbe
jl
pop
repz
sbb
pushf
sbb
mov
add
jge
push
stc
cwtl
or
pop
es
pop
xchg
hlt
jnp
popf
jbe
outsl
dec
cli
icebp
or
cmp
pop
loopne
lcall
jmp
addl
mov
aas
sbb
shlb
stos
jns
int
outsb
mov
sub
dec
jnp,pn
nop
jb
mov
or
out
orb
pop
ljmp
mov
or
ror
sub
sub
loop
mov
pop
sbb
cltd
inc
jnp
out
incl
pop
inc
cmp
das
add
and
scas
adc
mov
add
add
ds
or
pop
cmp
sub
insb
dec
jb
lods
or
mov
mov
in
sbb
or
movsl
adc
movsl
int3
xchg
sub
outsb
repnz
lods
inc
adc
mov
jge
out
jnp
xchg
sbb
mov
imul
inc
test
adc
pop
insb
orb
xor
rorb
pusha
dec
sbb
add
cmp
push
gs
inc
xchg
xorl
cltd
jno
cs
or
mov
loope
dec
out
cmp
adc
adc
btr
and
push
mov
mov
adc
mulb
inc
leave
aad
mov
rcr
push
adc
test
jns
push
out
roll
add
and
aad
daa
in
mov
ds
loop
cmc
or
pop
jp
mov
mov
dec
cwtl
lock
cwtl
jecxz
mov
push
mov
sbb
cmpsb
mov
out
outsb
inc
jge
lret
subb
sbb
dec
xor
adc
adc
mov
hlt
ds
out
fisttps
push
aam
dec
sub
cmp
fwait
insb
add
and
out
test
fdivrl
fnstcw
mov
xor
mov
dec
or
sub
lret
or
add
imul
js
subb
sbb
xlat
ret
rcrl
push
mov
cmp
testl
cmc
adc
movsb
int3
popa
xchg
popl
cmpsl
adc
outsl
ja
adc
adc
out
data16
inc
sub
dec
popf
jno
out
mov
add
lea
int3
mov
lahf
stos
ja
pop
cltd
mov
hlt
dec
push
bnd
sub
xchg
pop
xchg
rorl
push
js
adc
pop
xor
iret
adc
sub
sbb
je
icebp
ds
jmp
pop
loopne
test
mov
inc
fnstcw
in
and
inc
inc
daa
xor
frstor
rcrl
add
int
mov
sbb
cld
mov
clc
clc
pusha
adc
mov
push
cmp
iret
xchg
outsl
mov
cs
inc
sbb
stc
out
orl
test
into
stos
in
mov
daa
outsb
enter
add
lcall
outsl
dec
mov
loop
test
mov
mov
cli
loope
sub
mov
int3
add
jmp
xor
hlt
imul
rcrl
push
jbe
or
push
fsubp
sub
cltd
inc
les
mov
cmpsb
or
shll
test
lea
cmp
lods
sub
adc
stos
std
push
push
mov
outsb
jmp
jno
or
pop
mov
call
cmpb
cwtl
cmc
mov
push
cmpsb
jae
pop
insb
lret
or
and
fisttpll
add
dec
and
pushf
das
mov
in
imul
push
pop
pop
add
sub
push
cmp
sbb
xchg
xchg
adc
ret
xchg
lea
push
adc
in
pusha
pop
out
pop
or
ljmp
mov
push
xchg
cwtl
inc
or
adc
lods
cmp
stc
fisttps
out
hlt
pop
gs
inc
jmp
mov
dec
cmp
xchg
mov
mov
xchg
aas
mov
into
fisttps
add
adc
js
mov
push
mov
mov
xor
outsb
mov
movsb
push
enter
jl
xchg
lds
fildll
outsl
ret
testl
sbb
ret
cmc
xor
mov
cmova
cmpsl
repnz
dec
aaa
and
int3
add
jp
push
bnd
pop
xchg
cmpsb
fiaddl
dec
inc
pop
mov
ds
bound
sbb
mov
sub
ret
and
xchg
add
mov
and
xchg
outsl
add
adc
cmp
jecxz
loope
insb
adc
push
scas
sub
jb
loopne
insb
dec
add
add
in
rcrl
loop
imul
cwtl
cmc
pushf
testl
mov
xor
xlat
sti
xor
scas
in
ds
mov
pop
lods
mov
aad
in
inc
push
fistpll
rcll
das
out
inc
and
sub
lcall
adc
ds
enter
or
into
sub
or
xorl
sbb
into
and
ss
loope
ja
sub
and
lret
push
add
popa
loope
jns
mov
dec
pop
insl
xor
lahf
jp
sti
and
sbb
adc
dec
sub
xor
push
shr
sub
adc
mov
int3
std
out
mov
xor
aad
push
rol
add
rcpps
insl
add
add
inc
mov
iret
xchg
mov
add
fsub
out
push
test
sub
xchg
inc
mov
icebp
xor
push
loopne
adc
push
out
mov
xchg
rolb
out
nop
loope
or
icebp
and
fs
mov
sbb
js
or
push
mov
lea
sbb
jmp
cmp
insb
add
adc
sbb
ret
or
mov
in
fwait
cmp
add
lock
lret
das
sub
inc
in
and
out
int3
pop
fiaddl
dec
aaa
cltd
and
sub
sub
lods
jb
adc
stos
cmpsb
xchg
mov
jae
dec
push
sbb
dec
push
push
or
shrb
aad
cmp
adc
add
jmp
jno
leave
xor
stos
out
data16
insl
add
cmp
xchg
movsl
sahf
inc
cli
mov
inc
lods
or
insl
mov
xlat
push
imul
mov
xor
test
mov
fdivrl
sti
bound
lods
pop
lret
pop
rorl
jl
adc
fsubrs
sbb
and
push
scas
enter
lea
xchg
jbe
xchg
jb
mov
push
dec
mov
dec
pop
insb
andb
or
cmp
mov
pop
sub
jbe
pushf
decl
dec
inc
or
das
arpl
push
dec
adc
js
inc
sbb
pop
jmp
mov
sbb
sub
push
aas
adc
jbe
jnp
fmuls
xchg
sbb
adc
ret
sbb
mov
add
shrb
mov
mov
jl
ret
cmc
popa
mov
mov
cmp
sti
outsb
cld
mov
popf
lods
out
pushf
mov
into
push
mov
push
cltd
sbb
insl
dec
or
dec
sub
or
cli
mov
fsubrl
in
adc
push
push
adc
sbb
add
in
jo
movhps
pop
cmpb
or
adc
mov
dec
insl
js
gs
or
add
pop
adc
dec
into
adc
lods
add
mov
jbe
test
pop
sbb
test
or
into
pop
stos
int
lahf
stos
es
clc
in
je
cmpl
xor
inc
adc
xchg
popa
inc
mov
xlat
rorb
mov
sbb
popf
sub
lret
cwtl
out
pop
pop
cmpb
and
sbb
adc
scas
fcmovb
mov
push
repz
sub
cwtl
call
in
or
jecxz
sub
pop
dec
sbb
xor
sbb
dec
mov
dec
mov
ljmp
sbb
test
scas
jno
mov
push
add
fwait
push
movsl
repz
inc
arpl
cmpsl
fsub
add
xchg
ja
mov
ss
push
lds
mov
enter
arpl
inc
sub
icebp
into
adc
loop
mov
shr
cld
mov
add
pop
sbb
fidivrs
add
stos
subl
mov
aam
ds
and
and
push
pop
adc
push
sbb
imul
orb
jbe
mov
dec
add
fdivrs
and
fdivrs
cs
mov
cmp
jne
arpl
addr16
lea
pop
xor
aad
popa
xchg
adc
bound
nopl
and
mov
jne
mov
inc
xchg
mov
xchg
jecxz
add
mov
lahf
inc
or
and
ljmp
cmp
xchg
ret
and
jle
repz
inc
movsb
mov
daa
ret
inc
cmp
scas
or
cmp
sub
push
xor
scas
imul
fidivs
xchg
mov
cmp
pop
push
lret
adc
jae
mov
aas
mov
xchg
cmp
mov
adc
or
add
js
add
xor
insl
pop
test
or
lcall
mov
dec
inc
adcl
xacquire
cmp
jne
xchg
pop
imul
adc
daa
scas
lods
cli
push
divl
fcmovb
sbb
enter
fcompl
or
lods
and
sbb
enter
or
ja
mov
fcoms
movsb
mov
mov
daa
stc
push
testb
inc
xchg
or
std
mov
mov
pop
lods
add
lock
cs
mov
push
nop
xor
mov
or
std
sahf
addr16
lret
ret
sarl
or
jmp
cmpsb
fsub
or
mov
mov
jne
pop
inc
push
stos
or
lods
add
dec
cmp
mov
mov
push
or
mov
sub
pop
jmp
or
sbb
and
aam
xor
sub
iret
jmp
xchg
popa
jno
in
xchg
mov
adc
add
aas
xchg
cmp
shlb
adc
or
xchg
imul
pop
cltd
in
mov
fstpl
inc
sbb
or
scas
lds
dec
push
rcll
ret
sub
cmp
out
inc
push
cmp
fstl
mov
lahf
pop
dec
lods
push
test
ret
xchg
add
movsl
stc
loop
jl
repz
xchg
push
dec
iretw
clc
jo
add
and
push
mov
scas
and
out
rorl
add
int
stc
sbb
pop
jmp
lret
jg
mov
sub
lcall
xchg
or
mov
and
fistpll
or
cmp
inc
jno
and
and
inc
popf
mov
scas
sub
sbb
in
sbb
sbb
fincstp
push
push
lock
add
enter
add
or
mov
inc
pop
daa
dec
inc
sub
bound
cmpsb
or
mov
cmp
inc
pop
mov
dec
cmp
mov
push
sbb
cmpsb
leave
andl
cmpsl
mov
or
lret
mov
xchg
adc
ret
cwtl
mov
fcomi
dec
int3
push
mov
sbb
movb
popf
lds
and
mov
sbb
or
push
lea
or
popa
jns
outsb
or
mov
dec
pop
or
dec
push
xchg
std
or
imul
pop
or
mov
and
insb
sahf
and
xor
push
jne
or
loopne
jmp
popa
sub
push
in
ret
fbld
jp
mov
pop
jns
or
xor
dec
fwait
pop
ljmp
pop
sub
or
xchg
cmp
sbb
pop
push
mov
pop
repnz
dec
adc
xchg
xor
insl
inc
xchg
mov
xchg
adc
or
push
and
ret
or
push
addr16
prefetch
jbe
lcall
sub
test
icebp
cmp
and
or
dec
ror
pop
or
push
mov
lods
sbb
mov
jl
sbb
outsb
lea
adc
lret
daa
or
cwtl
pushf
mov
dec
subl
lock
cmpsb
lods
mov
cmp
and
adc
dec
arpl
sub
leave
mov
push
sub
dec
lods
add
dec
aaa
xchg
shrb
adc
push
cmp
imul
gs
popf
sbb
lods
or
repnz
insb
pop
rcrb
pop
inc
or
mul
adc
and
and
mov
rorb
sbb
push
shll
mov
sub
addb
adc
xor
rcr
push
inc
in
inc
rcll
dec
mov
add
sbb
mov
jne
es
ret
inc
adc
enter
jbe
arpl
pop
jno
and
adc
or
fnstenv
icebp
mov
or
fs
les
stos
hlt
test
sarb
mov
xchg
adc
ds
or
int
inc
sahf
or
lods
mov
inc
sub
sbb
add
adc
xor
or
out
xor
push
mov
sub
enter
fstps
test
adc
js
dec
xor
enter
and
aas
sbb
or
cwtl
out
repnz
stc
xchg
loop
push
fdivl
mov
stos
lods
imul
gs
fsubr
or
sti
fcomps
or
and
sbb
push
adc
in
mov
imul
dec
cmp
or
xchg
movsb
jg
test
hlt
cld
iret
addr16
les
ficomps
pop
adc
mov
add
jns
mov
or
mov
enter
out
lods
push
or
cmpb
mov
hlt
or
lods
test
sub
mov
jl
mov
push
mov
das
xchg
dec
mov
shrl
push
gs
lods
orl
loopne,pn
out
imul
mov
ficomps
xchg
test
cmpsb
or
aas
adc
scas
dec
pop
xchg
aad
sbb
and
lahf
stos
add
movsl
dec
std
movsl
mov
lods
jnp
or
dec
pushf
mov
or
push
outsb
inc
shrb
mov
lret
sbb
xor
lcall
mov
or
cmp
lods
xchg
imul
lock
ds
or
mov
sahf
loope
cmpsl
in
insb
out
mov
inc
enter
dec
or
mov
lods
and
ja
sbb
xor
sti
loopne
cltd
inc
adc
mov
icebp
stos
sbb
insb
clc
mov
add
roll
push
outsl
hlt
les
pop
or
sbb
pushf
lea
or
or
jp
and
nop
jmp
or
shrl
out
lret
adc
test
or
or
rclb
clc
test
or
imul
shrb
test
cmpsl
jge
gs
mov
jecxz
bound
fisttpl
push
xchg
subl
xor
add
stc
cmp
adc
lock
jge
mov
test
imul
shll
or
mov
xor
xor
test
mov
push
or
sbb
xchg
fwait
mov
jg
ret
pop
js
je
mov
loop
out
pop
rcrl
cwtl
adc
call
or
mov
cmp
cmp
xchg
punpckhdq
lahf
xor
ret
sbb
mov
mov
sbb
dec
mov
xor
xchg
push
jnp
out
cmpsb
mov
cmpsb
add
pop
push
push
insl
scas
push
in
fnstenv
jecxz
sub
pushf
xchg
aad
adc
push
xor
shrl
les
shrb
push
or
xchg
lret
or
cltd
sbb
xor
mov
lods
cld
pop
jb
out
sbb
gs
outsl
and
push
lods
ret
sub
jl
sbb
std
fimuls
ret
mov
jle
push
add
lcall
pop
sarl
sub
dec
mov
add
rorb
pushl
mov
cld
push
hlt
daa
cmc
adc
mov
shlb
out
pop
loope
lahf
mov
inc
movsl
jmp
mov
push
adc
cmc
insl
xchg
add
out
ret
xchg
xchg
mov
adc
and
gs
loope
xorl
out
int3
jne
call
pop
and
inc
add
cld
rorl
inc
or
inc
mov
pop
adc
adc
mov
roll
in
scas
aas
pop
cmp
sub
std
lods
xor
or
mov
dec
fs
pop
in
cwtl
insl
add
adc
roll
fisttps
lret
xor
mov
je
add
add
mov
cwtl
cmp
mov
loopne
andl
out
and
sbb
and
cltd
bound
data16
rcrb
xchg
out
inc
and
inc
sub
js
xor
loopne
loope
sbb
les
insb
or
scas
inc
out
jmp
lret
xchg
push
dec
mov
push
cmp
xchg
es
mov
xor
fwait
cmp
addb
adc
push
xor
sbb
movsl
out
sbb
loop
sub
push
or
or
repnz
nop
iret
inc
pop
mov
cltd
cld
into
pop
es
fidivrl
jbe
int
inc
out
and
cmpsl
push
xchg
inc
push
inc
ss
jp
clc
in
pop
icebp
jl
out
jne
mov
fsubrs
mov
cmp
stos
cmpsl
xchg
std
sub
test
xchg
adc
and
sbb
inc
sarl
adc
sarb
or
add
call
out
sub
dec
notw
cltd
aaa
pop
or
inc
xchg
pop
jnp
dec
adc
xchg
and
loope
or
jg
imul
addr16
xchg
daa
insl
and
dec
int3
xlat
sbb
data16
fcmove
int3
xchg
addr16
jmp
out
or
jnp
sahf
out
cmp
sbb
add
mov
bound
stos
adc
loopne
popf
inc
pop
sub
push
mov
enter
push
or
and
int
cmp
and
dec
aad
scas
rorb
add
jecxz
push
mov
adc
pop
jns
cmpsl
and
pop
ss
les
add
cld
xor
xor
sbb
xor
add
push
or
xchg
iret
mov
outsb
fldl
jnp
sub
inc
dec
push
out
jne
lahf
movsl
lcall
cli
mov
ret
bound
mov
dec
lods
fs
inc
or
popa
in
outsl
cmp
subb
sbb
or
xor
and
aaa
jg
inc
ret
jmp
in
popf
push
icebp
sub
and
fistl
xlat
pushf
xchg
push
cltd
fiaddl
daa
xchg
add
sbb
xor
adc
xor
stos
xchg
out
dec
mov
pop
mov
je
inc
cmp
jmp
scas
jbe
movl
sub
jge
iret
mov
xchg
fcoms
mov
mov
xchg
inc
jmp
adc
mov
cwtl
mov
dec
sub
orl
popa
push
add
cmpb
pop
outsl
mov
add
testb
cli
insl
dec
dec
xlat
test
mov
pop
shrb
inc
leave
inc
ljmp
xchg
inc
fbstp
test
add
lret
lea
in
sahf
sbb
cmp
fisttps
stos
int3
jp
jle
sti
jmp
lret
gs
push
data16
sbb
pop
lret
xlat
int
pop
jnp
test
cmp
and
in
jmp
cltd
jle
lret
dec
add
ds
jb
divb
in
adc
push
movsb
push
add
jns
shrl
jae
push
mov
fildll
mov
lcall
xor
in
stc
into
pop
adc
xor
in
es
fmull
sub
subb
pop
mov
lahf
cmp
rcrl
jmp
stc
iret
pop
jl
lods
inc
int3
add
icebp
in
sub
adc
ljmp
test
daa
mov
xchg
add
add
sub
mov
stos
test
sbb
ret
arpl
inc
scas
mov
adc
dec
popf
dec
jbe
xchg
iret
lcall
jns
shrb
xchg
in
mov
jmp
jne
xor
bound
add
xchg
lock
bound
bound
add
and
mov
add
in
in
xor
mov
xchg
movsl
or
lahf
and
mov
nop
dec
fs
je
and
jmp
repnz
xor
jne
loope
cmpb
push
shll
mov
pushf
sub
pop
jmp
aam
call
pop
pop
repnz
aaa
jo
inc
lock
fisttpll
push
jns
out
add
mov
aam
and
out
in
add
xchg
inc
jbe
jecxz
and
es
jne
fdivl
pop
xchg
push
xchg
cli
fstpt
xor
stos
adc
xchg
enter
outsb
inc
add
in
dec
push
add
mov
sbb
sub
pushf
adc
clc
ret
cwtl
fidivl
jne
dec
push
push
test
cmp
adc
pop
adc
sti
in
push
pop
loope
jnp
into
rcrl
outsb
xlat
scas
rclw
cwtl
leave
push
ljmp
aaa
fisubrl
popa
add
mov
popf
insl
add
mov
cmp
jp
mov
pop
movsb
sub
in
enter
adc
jo
ss
sbb
fcoml
stos
pop
fwait
jp
or
add
pop
inc
andb
dec
xor
repz
jnp
insb
outsb
fistl
sub
in
xchg
cmpb
mov
xor
sbb
fistps
mov
ds
arpl
hlt
imulb
aaa
stc
mov
or
lds
add
test
mov
ss
arpl
sbbl
sti
call
pusha
xchg
adc
cmp
lds
sbb
mov
or
cwtl
cmp
or
xor
flds
stos
xchg
fs
pop
mov
outsb
sbb
mov
sti
sbb
add
inc
shll
mov
dec
or
ret
jp
sbb
repz
test
mov
mov
out
shl
subb
int3
and
addl
and
repz
xchg
add
or
psubsw
iret
fwait
repnz
xchg
fiaddl
or
sbb
dec
sbb
inc
repnz
lret
jo
sahf
mov
in
adc
je
daa
mov
mov
stos
js
cmp
subl
xchg
xchg
jl
insl
aam
jne
imulb
push
les
sub
lret
inc
ffreep
pop
in
lret
mov
sbb
sbb
dec
out
nop
sahf
dec
dec
arpl
dec
mov
je
sbb
jle
xor
add
scas
addr16
insl
repnz
lahf
mov
addr16
dec
jne
inc
add
loopne
xchg
test
orb
clc
cltd
and
pop
add
mov
push
push
jecxz
inc
mov
cmp
push
jge
sub
xor
rcr
xor
push
and
ss
lds
dec
sti
jae
fisttpll
add
sbb
aaa
cwtl
iret
test
dec
xchg
cmpb
shlb
inc
adcl
inc
sub
adc
bnd
add
test
sbb
jnp
bswap
mov
mov
adc
dec
mov
fwait
mov
inc
ss
stc
outsb
dec
pop
lret
adc
aaa
mov
andb
xor
jle
daa
mov
std
cs
cmp
xlat
icebp
lcall
xchg
mov
dec
cwtl
out
mov
push
rorl
out
lret
mov
fstpl
jae
adc
mov
dec
xor
and
stos
icebp
pop
sbb
lods
or
test
lds
mov
aad
or
fcmove
insb
or
or
test
cmp
cltd
insl
and
pop
leave
jmp
shrl
mov
push
popa
loop
adc
pop
push
arpl
pop
dec
loopne
ficomps
aad
ret
mov
test
sub
scas
dec
mov
lcall
enter
jmp
sub
pop
jnp
insl
sub
sub
dec
cmp
add
xor
cmp
mov
pop
or
out
sbb
mov
loop
or
xor
popa
xor
fisubs
popa
das
xchg
jb
cmp
scas
adc
aaa
roll
aam
imul
lahf
jmp
bound
cmp
fists
sub
inc
add
jp
sub
pop
lcall
pop
int
fnstsw
in
jae
movsb
add
or
shl
add
adc
sbb
stos
aas
xor
out
and
mov
push
push
add
mov
mov
outsl
outsb
test
cltd
ret
cmpb
ret
sti
push
inc
std
cs
stc
loope
or
or
dec
cld
test
pop
adc
and
call
js
test
in
mov
inc
insl
std
mov
jmp
cmpsl
jp
sbb
sub
dec
cmpsb
dec
js
jae
clc
sub
add
and
int3
adc
lahf
fists
or
adc
mov
and
lods
push
aad
jmp
adc
pop
add
inc
ret
cmpsl
clc
push
jae
push
jno
sahf
bound
aad
mov
lods
mov
sub
jecxz
pop
dec
call
fs
mov
sti
mov
mov
adc
jmp
stos
push
mov
dec
test
shl
jmp
mov
sbb
popf
sti
scas
scas
add
cwtl
jp
cvtpi2ps
popf
clc
mov
shlb
adc
mov
into
pop
mov
aas
lods
cltd
xchg
in
imul
push
cmp
xchg
dec
cmp
sarb
in
mov
popf
cmpsl
js
arpl
lods
mov
xchg
in
lret
test
sub
pop
sub
sti
jmp
push
ja
jne
push
lds
loope
and
cmpsl
xor
sahf
pop
das
mov
xchg
mov
shll
add
cmpsb
out
sbbb
inc
cmpsl
lds
es
jle
sbb
inc
add
mov
push
push
addr16
in
mov
jg
adc
xchg
jp
imul
pop
mov
and
inc
add
or
lea
mov
jecxz
nop
pushf
cltd
add
mov
mov
insl
cmp
sti
add
aaa
pop
out
xchg
xchg
dec
sbb
add
dec
dec
out
adc
xchg
or
sbb
dec
imul
loopne
mov
insl
adc
out
add
in
mov
jne
add
mov
jo
mov
mov
cltd
push
push
sbb
jo
jge
dec
nop
push
jge
xchg
sub
jnp
out
and
push
mov
or
mov
lds
rcrl
ret
sahf
inc
fs
lret
int3
sub
iret
cmp
jmp
aaa
add
insl
adc
jmp
xor
push
test
inc
cld
popf
xchg
in
xchg
sbb
mov
add
sbb
push
jmp
add
xlat
sbb
out
aam
jle
in
mov
clc
cmp
mov
cld
jmp
cmpsb
add
inc
jns
add
adc
xlat
ja
sbb
mov
pop
xor
pop
mov
add
push
adc
or
jne
sbb
push
mov
nop
xor
sub
sbb
or
xchg
add
mov
aam
js
out
or
popa
jecxz
mov
push
add
insb
push
jne
and
cmpsl
sbb
mov
adc
lods
out
inc
adc
pusha
jmp
push
jecxz
aaa
mov
mov
pop
or
stos
mov
sbb
ret
add
aaa
mov
in
and
lahf
stos
xchg
or
cmpsl
andb
pop
stos
testl
ja
int3
sbb
push
lret
rcrb
add
mov
lods
push
loop
insb
xchg
lods
sti
cmp
mov
jle
add
stos
mov
lret
test
aaa
xchg
and
xchg
adc
jne
jle
ljmp
pusha
cli
decl
inc
inc
xchg
mov
pop
arpl
jp
insl
out
or
cmp
mov
cld
add
add
test
gs
add
les
movsl
dec
mov
xchg
adc
adc
push
sbb
lret
push
xor
or
scas
sarl
stos
jo
xchg
cmpsb
js
mov
xor
fildll
test
sub
sbb
sbbb
pop
inc
aad
jmp
jb
and
xor
ror
pusha
cmpsb
push
jo
jmp
insl
popa
sahf
or
push
cmp
cmc
push
jle
pop
int3
sbb
int3
jge
mov
cmpsl
scas
cmpsb
xchg
fimull
lret
icebp
sbb
mull
ret
cmpb
sub
jp
or
shll
mov
dec
sbb
call
lds
adc
add
pop
mov
pop
enter
xlat
sarl
xlat
icebp
add
jp
out
mov
lds
or
or
pop
imul
js
push
out
stc
fld
sbb
iret
or
iret
hlt
pop
sub
test
ja
and
sbb
fdivp
fcmovnu
pop
in
gs
divl
mov
aam
std
adc
inc
inc
pushl
or
mov
push
cmp
scas
mov
adc
aad
in
add
aas
sbb
pop
das
adc
int
xor
add
xor
or
in
xchg
sbb
push
lret
mov
mov
mov
addl
adc
xchg
pop
sub
incb
and
lcall
xor
mov
cmp
sbbl
rcl
mov
cmpsl
cli
lods
dec
jge
stos
in
pop
orb
pop
fsubl
test
ds
mov
movsl
lret
mov
add
mov
aaa
add
lods
es
test
or
mov
lods
enter
inc
and
loop
dec
sbb
ret
push
xchg
fwait
sbb
movsb
sub
jg
fwait
jmp
imul
xlat
jp
sarl
rcrl
sbb
dec
adc
daa
outsb
mov
push
mov
dec
ret
adc
fmull
ret
push
dec
ret
push
into
stc
sub
popa
jmp
or
xor
push
inc
add
jns
aaa
loop
cmp
and
test
sub
ss
les
and
pushl
pop
push
cld
out
leave
fisubs
mov
jne
xorb
add
mov
push
mov
mov
int
adc
or
sub
jp
xchg
ja
aad
fmull
mov
shrl
or
movsb
cmpsb
fwait
es
in
enter
and
cmp
mov
lret
aaa
cs
lret
fstps
sbb
and
mov
repnz
mov
pop
bound
sbb
movsl
xor
push
cmp
rol
jle
shll
jle
scas
scas
addr16
psrld
xchg
xor
rolb
mov
cmpsl
mov
rcll
lcall
mov
add
shlb
stos
out
sub
rcrl
adc
push
adc
adc
imul
sub
xor
shrl
dec
sub
push
clc
xchg
imul
dec
xor
cmpl
and
xorb
ljmp
mov
out
es
sub
mov
cli
adc
ljmp
push
pop
aaa
jge
push
cmp
push
mov
leave
mov
mov
pop
xchg
lahf
add
test
repz
addr16
repz
push
or
dec
xor
sbb
in
cmp
mov
push
outsb
push
jb
add
stos
aas
push
divb
ja
cmpsb
dec
adc
popa
inc
jge
rcl
jge
pop
inc
rcl
add
out
sbb
pop
dec
ss
adc
lcall
adc
mov
insl
data16
sbb
add
mov
dec
ret
enter
mov
inc
loopne
mov
shll
lods
adc
cld
add
mov
adc
sbb
int
lret
in
xchg
fucomp
fs
fstps
popf
mov
out
roll
sub
sti
cs
insb
or
fcmovu
add
adc
sbb
push
dec
out
mov
ret
push
pop
push
loop
sub
insb
es
inc
mov
scas
mov
pop
fld
in
dec
out
jmp
pop
rol
jae
out
or
xlat
ret
ja
jmp
aas
mov
nop
cmpb
ret
sub
fldlg2
dec
shlb
cmp
mov
movsl
mov
xchg
cmp
roll
mov
in
lods
sbb
add
cmpsl
jne
fwait
mov
hlt
inc
mov
mov
ffree
inc
mov
sarb
mov
mov
cld
orl
mov
add
inc
lods
mov
lods
in
add
fsubr
pop
mov
lods
out
or
pop
jmp
inc
clc
and
xchg
sti
movsl
cmp
loope
loop
xor
dec
adc
mov
mov
cmpsb
pop
outsl
xchg
sbb
push
stc
fwait
lret
add
shrb
loop
cmpl
movsl
lcall
aad
xchg
lret
dec
jle
or
out
sbb
jge
aaa
shlb
aaa
add
pop
out
in
in
mov
stos
les
cwtl
loope
das
cmpsb
xchg
lcall
repnz
cltd
into
xlat
mov
sub
lahf
orb
add
arpl
adc
sbb
rolb
imul
xchg
fmul
or
scas
sbb
lahf
jmp
lahf
mov
push
das
push
in
daa
pop
or
inc
mov
or
or
cmp
xchg
arpl
test
stos
fstpt
push
adc
xchg
xchg
inc
adc
cmp
or
stos
movsb
lods
cmp
outsb
dec
mov
roll
mov
mov
push
fisubs
add
lea
jb
xchg
sbb
add
sbb
sti
add
jecxz
enter
jb
jne,pt
pop
sbb
call
aad
add
sahf
jmp
incl
repz
mov
cmp
and
gs
inc
mov
push
jmp
outsb
out
mov
or
mov
adc
sti
outsb
and
sub
inc
xor
sahf
aad
ljmp
xchg
int3
addr16
adc
lea
ret
sahf
lds
cltd
xchg
push
pop
inc
jns
out
jmp
adc
lds
pop
or
dec
pop
pop
mov
sbbl
ficompl
hlt
idiv
mov
xchg
cwtl
movb
inc
out
cmp
inc
mov
idiv
or
mov
in
cmpl
std
mov
dec
pop
or
sub
push
std
pop
xchg
fmul
popa
adc
cmc
cs
cmp
add
mov
jae
push
rcrl
cmpsl
inc
popf
lock
loope
mov
sub
mov
scas
adc
rcrl
stc
shrb
push
pusha
fistl
jle
mov
cmp
xchg
push
fwait
or
mov
call
call
in
loope,pn
pop
xchg
sbb
lret
mov
xchg
ret
les
sub
in
xor
mov
add
xor
mov
ret
ret
mov
rcll
dec
shll
iret
jnp
out
daa
lock
cmp
rcl
insb
xchg
out
ljmp
push
push
and
ss
daa
popf
ret
in
jp
clc
sbb
lret
in
xchg
aad
mov
inc
mov
add
dec
mov
xchg
mov
xor
cmpl
xor
test
rclb
mov
inc
out
xchg
out
push
adc
lahf
push
push
cmp
lock
add
sub
insb
std
dec
clc
adc
add
pop
testl
ret
mov
ror
fcoms
mov
mov
ret
jno
dec
bound
lret
outsl
inc
mov
lret
pop
jns
add
push
push
dec
mov
jmp
mov
gs
xor
pop
push
stos
scas
jnp
adcb
dec
add
shlb
add
jge
lret
andl
cwtl
or
inc
mov
add
sbb
sti
cli
xor
adc
cmp
pop
add
out
jb
sbb
mov
or
inc
std
adc
repnz
arpl
dec
jg
mov
test
fld
and
rcll
pop
out
jmp
sbb
xchg
add
cmp
lret
jbe
dec
cmc
mov
mov
cli
mov
xlat
loopne
or
enter
pop
test
push
inc
xchg
loope
pop
sbb
fldl
pop
mov
dec
mov
jb
inc
jmp
sbb
add
push
int
int3
mov
xor
jb
scas
mov
das
adc
repz
sbb
test
mov
dec
ss
imul
inc
add
lret
stos
out
popf
cwtl
xor
test
in
mov
jmp
pop
icebp
cmpsl
lods
or
inc
mov
mov
cmp
fiaddl
stos
lret
or
add
add
mov
aad
push
sbb
pop
sbb
sbb
lret
lods
push
enter
mov
shr
jmp
mov
cwtl
adc
rolb
add
and
xor
sahf
movsl
leave
fcoml
or
pop
cwtl
cmpl
pusha
jl
mov
decl
cmpb
cmp
das
jo
inc
mov
insb
mov
les
or
inc
pop
out
bound
dec
adc
outsl
adc
adc
adc
add
xlat
sbb
cmp
push
mov
add
jle
jo
sbb
mov
jb
aam
aad
jmp
sti
xchg
lahf
call
pop
sub
cmovno
and
ret
sub
bextr
mov
add
in
cwtl
dec
push
mov
rol
ret
out
push
add
out
xlat
decb
mov
sbb
loope
mov
int3
sub
cmc
loopne
add
es
mov
sti
add
ds
cmp
mov
xor
add
lret
mul
lcall
clc
addr16
jl
movl
pushf
fsubrs
adc
mov
outsl
sahf
mov
mov
adc
jnp
shr
inc
nop
sbb
adc
cmp
and
aaa
xchg
mov
lods
and
sub
or
jno
sbb
lods
cltd
das
inc
dec
adc
xchg
cltd
or
out
sbb
xchg
xor
aaa
push
push
aam
and
outsb
lret
lods
xor
and
mov
pop
push
xor
push
das
sbb
mov
fildll
dec
push
jae
sub
mov
lret
scas
int
mov
or
xchg
mov
es
orl
ret
pop
jge
test
aam
popf
in
in
fimuls
xor
adc
in
or
out
mov
ret
sahf
scas
fwait
inc
ss
add
add
add
testl
pop
ret
cmp
jnp
add
sbb
inc
ret
cmp
cltd
cmpsb
dec
scas
ljmp
insl
mov
int
dec
in
add
roll
mov
cltd
and
icebp
cmc
pushf
adc
add
call
fucomip
xor
in
loop
jmp
mov
inc
pop
pop
or
clc
mov
mov
jecxz
inc
jecxz
mov
shlb
scas
and
xchg
roll
addr16
cmpsl
mov
add
jecxz
push
sub
cmp
fwait
ret
jmp
xor
arpl
xor
aas
ljmp
jp
lret
les
rclb
mov
mov
sub
and
int3
adc
and
push
cmp
adc
popf
dec
push
movl
cmp
stos
inc
push
or
ja
inc
jne
stc
popf
hlt
mov
inc
and
dec
je
lret
dec
xlat
scas
cli
rcr
insl
mov
inc
stos
add
mov
out
xor
sbb
out
sbb
imul
in
jl
jb
xor
sub
stos
jbe
or
iret
fwait
mov
subl
sbb
mov
aas
repnz
xor
cli
popa
jne
out
inc
inc
xchg
int
xchg
inc
push
ss
cmp
icebp
in
insb
out
in
iret
adc
mov
mov
hlt
cmp
jge
fdivrl
movsb
cs
loop
test
or
int3
rclb
cwtl
jne
jns
repnz
sbb
sbb
out
dec
adc
sub
inc
sbb
mov
sti
xor
mov
pop
fcom
xchg
insl
sub
nop
mov
data16
cli
in
sti
repz
das
and
ds
adc
ss
and
mov
ret
add
or
xor
jge,pt
call
pop
popl
cmp
xchg
shrb
repnz
test
add
stos
int
sbb
mov
push
and
lds
std
xchg
or
into
mov
es
out
add
les
aaa
clc
add
jb
xchg
fisttps
mov
or
or
inc
sti
mov
in
orb
sti
loop
mov
int
out
jecxz
jb
or
jmp
sub
lods
add
in
fcoml
cli
in
pop
cld
inc
add
mov
fsubr
jp
fucomp
cmp
pop
jp
insl
fldcw
xor
pop
dec
jnp
add
cmp
mov
push
sbb
das
test
jle
mov
xor
fwait
je
jbe
pop
shlb
jnp
mov
aam
adc
adc
inc
push
pop
push
cltd
dec
call
js
mov
mov
jp
cmp
mov
fwait
int3
mov
push
sub
add
sbb
cs
jmp
lea
xlat
sbb
sbb
dec
out
xor
jl
ret
subl
stc
das
outsl
into
jmp
sahf
push
decl
dec
sbb
add
push
pop
inc
pop
popf
add
mov
mov
dec
and
pop
sbb
out
fimull
flds
mov
xchg
insl
lahf
add
scas
xor
adc
movb
push
or
or
add
cld
pop
sti
addb
lret
repnz
je
iret
jecxz
scas
jbe
lcall
push
cs
and
test
xchg
test
jne
mov
ljmp
repnz
xchg
imul
cmp
stos
jb
fsub
jecxz
test
or
or
mov
add
inc
lret
push
pop
ss
insb
sti
filds
xchg
add
jo
mov
pop
jns
out
adc
fcomp
jbe
push
sub
int3
sbb
decb
mov
popa
pop
xchg
enter
in
fwait
push
mov
les
dec
pusha
ja
stos
jne
flds
sub
fisubrl
test
test
jle
ja
sbb
sbb
jmp
cmp
lock
iret
and
gs
add
adc
ret
adc
add
clc
cwtl
loop
ret
add
sub
add
outsl
inc
mov
xor
adc
lds
inc
lcall
cs
xor
or
fstps
in
mov
mov
outsl
inc
fsubrl
in
mov
xchg
sub
mov
mov
int
sbb
xchg
fistpl
shll
rolb
out
rcrb
leave
insb
cmp
adcb
jl
jnp
jmp
daa
movb
or
movsb
pop
add
clc
cwtl
and
inc
aam
dec
dec
xor
jp
fists
pop
ss
adc
sti
fnstenv
test
xchg
jecxz
or
fwait
sbbl
in
push
fcom
aaa
daa
out
xlat
pushl
faddl
push
mov
add
outsb
cld
mov
arpl
sub
dec
jle
flds
aas
fisubl
pop
setl
hlt
mov
mov
mov
cs
jmp
loope
aaa
out
pop
pop
jmp
fnstenv
cmp
adc
movb
repnz
or
or
int3
fstps
cmc
mov
dec
adc
dec
loope
cmp
sbb
inc
loop
outsb
jno
mov
int
mov
or
out
mov
mov
jno
mov
add
bound
out
movsl
jg
popf
daa
xchg
sti
std
popa
push
lods
jbe
data16
das
or
mov
int
push
lods
and
mov
adc
dec
setns
popl
movsb
adc
cltd
mov
in
add
or
arpl
pop
gs
mov
xor
lock
lahf
fwait
lds
je
jl
iret
addr16
lds
test
sub
dec
cli
jmp
movb
and
rcrb
jns
repz
xor
cmpl
mov
icebp
or
ss
and
decb
and
jmp
or
jmp
and
cltd
add
rcrb
mov
out
sbb
push
cld
movsl
mov
dec
inc
or
inc
or
hlt
pop
into
jo
mov
mov
fwait
int3
lods
add
mov
sub
inc
shrl
sub
xchg
bound
inc
test
rcrb
outsb
std
fucomip
add
add
gs
or
or
add
push
ficomps
in
test
xchg
out
ret
or
and
mov
lock
mov
icebp
dec
test
lea
push
lods
rcrl
and
fdivrp
icebp
jecxz
add
push
mov
lds
xchg
cmp
xchg
aam
stos
jns
mov
add
jp
jne
les
mov
sarl
ret
mov
dec
dec
in
in
cmpsl
aaa
push
push
xor
js
inc
cmp
cli
cmp
ja
dec
push
adc
sub
mov
pop
insl
dec
or
rcll
aaa
mov
add
stos
mov
test
inc
and
add
xchg
mov
add
mov
mov
sub
sarb
xorb
sub
push
je
out
in
repz
inc
sahf
push
cli
push
adc
sub
mov
div
add
sub
addr16
push
outsl
jmp
push
shr
shlb
sub
pop
stos
adc
int
sar
xlat
ja
aas
pop
sbb
mulb
mov
push
fstps
mov
mov
mov
sub
add
pushf
movsl
fcoms
stos
scas
aam
pop
ja
push
loope
loop
pop
cmp
icebp
or
dec
fildll
cmp
jmp
jmp
out
and
xor
arpl
iret
or
es
push
test
xchg
mov
jns
inc
nop
mov
sub
ret
ret
mov
hlt
fnstcw
lock
mov
mov
or
add
sub
popf
jmp
ret
mov
aaa
pop
aaa
pushf
nop
cltd
adc
iret
es
gs
add
jmp
pop
xor
ja
and
dec
shr
das
rcr
call
popa
mov
add
pop
idivb
nop
ss
mov
out
fidivl
mov
into
mov
or
and
push
bound
pusha
test
cs
mov
and
gs
lret
jbe
ljmp
xchg
jns
cmc
jnp
add
popa
mov
inc
in
ss
cmc
stos
jnp
cs
sbb
xchg
stos
push
dec
mov
lret
inc
mov
sbbb
stos
lea
and
push
inc
das
and
loope
or
mov
inc
pusha
incl
sub
push
leave
jmp
jb
add
aam
sahf
in
xchg
jge
push
sub
dec
fs
xchg
or
ret
and
adc
xor
idivl
add
mov
mov
and
out
rcrb
shlb
xchg
jmp
pop
pusha
mov
outsl
lods
sti
mov
jno
jne
cmp
pusha
jbe
incl
sub
inc
cmp
sbb
mov
xor
pop
cmc
mov
fwait
pop
sub
push
shll
pop
pop
call
push
sbb
xchg
shrb
add
out
out
inc
loopne
lret
stc
daa
xchg
lret
cs
test
jg
sbb
pop
inc
sbb
repnz
inc
pop
xchg
and
repz
es
jmp
repz
sbb
push
add
lea
jnp
jne
xchg
mov
mov
jae
cltd
push
jge
test
fdivrs
fdivr
jb
cmpb
scas
sbb
xor
adc
lahf
loop
lock
mov
mov
dec
test
decb
bound
push
fistl
sbb
xchg
and
jnp
jp
mov
adc
sbb
add
xchg
mov
push
fdivrs
mov
sbb
cmp
jle
sub
int3
mov
in
xchg
lods
or
adcb
fwait
add
mov
sub
jp
int
shlb
mov
ret
add
cmpl
pop
adc
sbb
mov
sub
iret
lret
sahf
jbe
sarb
subl
mov
mov
sub
xchg
mov
mov
add
ret
fildll
repz
nop
mov
add
mov
pop
cmovae
add
and
pop
bnd
push
mov
gs
push
inc
orb
sti
ds
sub
stc
adc
nop
mov
call
add
jb
lea
icebp
mov
push
sbb
xchg
shll
clc
mov
addr16
sub
xor
pop
aaa
jecxz
test
sbb
cmc
mov
add
dec
pushf
pushf
jae
sub
xchg
fadds
sub
sub
sahf
bound
lcall
pop
and
fimuls
mov
and
cmpsl
mov
mov
push
xchg
add
fsubr
lods
jecxz
stos
nop
jno
jo
and
adc
xor
out
xchg
sbb
test
and
hlt
sti
push
push
out
lcall
lret
or
add
loopne
ret
sub
aam
xor
mov
and
sub
aad
cwtl
rcrl
dec
push
pusha
dec
enter
adc
add
mov
push
ret
stos
hlt
repz
add
ret
mov
test
sbb
push
dec
lea
mov
call
aam
imul
lcall
rcrl
aad
jp
mov
pop
inc
fildll
iret
popa
mov
xlat
into
ret
insb
dec
push
jge
push
in
sub
push
fimuls
jmp
repnz
dec
mov
sbb
mov
inc
inc
cld
ja
jno
insb
addps
ss
inc
cs
sub
mov
pop
mov
gs
xchg
mov
iret
int3
add
test
popf
dec
xchg
sti
fldenv
into
daa
repz
test
xlat
icebp
cltd
out
sub
pop
rol
jnp
inc
jg
cld
test
add
push
mov
and
ret
and
mov
mov
cs
add
xchg
xor
out
push
das
cli
mov
rcr
inc
jne
cmp
aad
test
pop
shl
clc
addr16
add
iret
rcrb
adc
stc
pushf
jp
mov
mov
mov
mov
xchg
ljmp
daa
daa
data16
stos
cmp
setge
sarl
sbbb
cmp
sbb
aam
out
fs
jmp
inc
cmp
cmpsl
ss
cmp
add
adc
add
sti
adc
bound
loope
nop
sub
and
push
adc
push
jae
inc
fmull
jno
pop
in
inc
sub
add
lret
daa
cld
jo
jmp
into
das
dec
rolb
cwtl
stc
adc
fidivrl
je
mov
xchg
fiaddl
or
out
and
and
leave
inc
in
movsl
xchg
or
rorl
into
mov
les
js
sbb
add
cld
fsubrs
js
aad
imul
lret
sbb
fs
mov
rolb
aad
jmp
dec
mov
inc
push
dec
pop
out
or
insb
cmc
push
sbb
das
ficompl
mov
sbb
shll
xchg
ljmp
pop
lret
inc
mov
mov
jmp
mov
pop
sti
cwtl
outsb
mov
xchg
xor
loop
push
add
lods
mov
cwtl
clc
add
popa
stc
outsl
add
nop
aas
fildl
and
jnp
jne
das
ss
xchg
lahf
jnp
mov
add
or
or
adc
inc
out
out
mov
jne
add
fisubrs
pop
int
sbb
and
stos
jp
shll
mov
dec
push
ret
lea
adc
gs
stos
adc
xor
addb
add
aas
repnz
insb
stos
jo
sahf
dec
push
adc
into
roll
shll
in
sub
ret
inc
insb
out
dec
repnz
loop
lahf
outsl
add
pop
push
lret
je
xorb
push
sub
or
xchg
inc
hlt
je
push
imul
add
lret
jne
outsb
test
bound
imul
cltd
sbb
mov
jmp
loopne
mov
movsl
in
pop
add
imul
push
ficomps
jae
movsl
xor
or
xchg
testl
sarl
lock
rcr
dec
push
es
outsb
jns
push
add
sbb
scas
sahf
or
outsl
stos
dec
mov
mov
pop
inc
loop
jnp
inc
and
xchg
mov
ret
push
scas
es
bound
popa
inc
and
adc
cmp
mov
mov
and
sbb
stos
pop
xchg
shrl
gs
enter
movsb
hlt
sbb
add
sub
loope
push
incl
mov
ret
dec
sbb
mov
aaa
pop
pop
or
mov
sarb
cld
repnz
mov
add
inc
sub
inc
mov
dec
adc
int3
mov
cmp
sbb
out
jge
sarb
and
dec
cmp
xlat
in
hlt
addr16
stos
or
stos
or
push
out
lds
jnp
push
outsl
jmp
icebp
call
aas
pop
push
in
ret
jae
sub
jnp
out
mov
push
lret
ja
xlat
int3
gs
push
dec
andl
int3
test
shll
jl
jmp
mov
je
xchg
insb
dec
inc
or
pop
jne
hlt
mov
sbb
pop
sub
cmp
je
mull
bound
or
inc
int
loopne
frstor
adc
data16
hlt
inc
lds
add
push
xor
mov
out
movlps
dec
loopne
lret
jmp
or
lods
mov
mov
adc
xchg
jmp
mov
ret
dec
adc
loopne
ja
adcb
loop
lcall
fldcw
in
out
mov
popf
dec
ljmp
out
or
aaa
push
ret
outsl
xchg
cmc
lock
cs
add
add
lret
mov
lods
xchg
push
sbb
mov
outsb
dec
cli
enter
sbb
stc
jg
push
mov
sbb
xchg
add
adc
lret
out
or
add
pop
mov
xchg
popf
adc
sub
jp
mov
or
sbb
fcmovne
rol
push
lea
jmp
scas
and
adc
push
inc
shll
sbb
and
popf
inc
mov
pop
mov
sbb
les
stos
stc
mov
aam
mov
in
fs
arpl
push
lret
roll
shrb
jo
addr16
cwtl
lahf
jae
es
dec
mov
xor
fistpll
sti
andb
cmp
cltd
add
add
sbb
add
push
test
cmc
and
sbb
out
mov
pop
lods
mov
adc
sbb
xor
repnz
cmp
pop
pushf
jns
test
or
push
jne
xchg
and
jnp
xchg
inc
mov
mov
or
or
or
xor
inc
add
mov
push
add
daa
pop
add
sbb
mov
cmp
mov
xor
mov
jne
lods
adc
lock
cmpb
or
js
push
aas
jbe
mov
cmp
pop
sbb
pop
sub
add
cld
popa
int
pop
push
and
cmp
push
jbe
iret
icebp
fwait
test
pmaxub
cmp
mov
adc
mov
push
or
xor
push
mov
sbb
sti
jno
inc
mov
in
push
cmp
or
cs
mov
ffreep
pop
fnstsw
jmp
jo
ss
xchg
lret
push
push
and
lds
cmpsl
mov
jg
fiaddl
sbb
insb
jo
scas
movsb
lock
fs
jecxz
aam
jle
scas
jnp
or
push
out
and
out
dec
sahf
inc
loop
fisttpll
andb
push
int
or
xchg
clc
cmp
mov
adc
jecxz
popa
pop
orb
aaa
insl
xchg
inc
jns
fildl
popa
les
repz
inc
stc
sarl
fisttpl
jmp
out
scas
mov
xlat
inc
divl
lods
or
mov
ret
sub
cltd
mov
imul
mov
or
fidivs
push
out
aaa
popa
fwait
sub
or
in
mov
fildll
inc
push
lret
lea
inc
and
mov
sub
sbb
inc
sub
xchg
adc
lods
daa
xchg
mov
imull
push
mov
rolb
xchg
sbb
sti
pushf
aaa
clc
and
fwait
sub
jbe
cli
xchg
pop
mov
mov
jge
das
rcl
adc
sub
cmp
xchg
popa
inc
or
out
cltd
lret
xchg
fwait
adc
lods
lret
xchg
push
call
int
or
movsb
adc
push
and
iret
or
sti
push
sbb
ret
add
fists
cmp
jle
and
sub
sti
push
adc
xchg
push
jns
adc
cmp
push
and
cwtl
out
test
jno
lods
fiadds
push
dec
mov
push
out
mov
or
dec
xchg
add
mov
mov
inc
push
and
les
cmp
jns
stos
outsb
nop
subl
out
sub
inc
mov
add
lret
xchg
ja
jl
xchg
xor
jns
pop
stos
aaa
test
or
xchg
in
rol
dec
cltd
adc
or
and
insl
ss
xchg
icebp
jl
mov
das
repz
pop
mov
jmp
rorl
xlat
push
cmp
inc
out
inc
repnz
xchg
lds
das
mov
sbb
sti
mov
aaa
xor
cmp
out
mov
push
test
ret
sub
cmp
jnp
test
sub
inc
outsb
lcall
test
imul
adc
inc
pop
xchg
fs
stos
fmul
cltd
xor
cmpsb
mov
outsb
lret
adc
hlt
cld
adc
inc
rclb
jecxz
daa
mov
ret
mov
loopne
push
add
xchg
js
add
popa
repz
stos
lret
sbb
fs
test
in
add
sub
push
dec
add
insl
xchg
cmp
xor
outsb
and
sbb
mov
add
sbb
fs
shl
xor
daa
scas
xchg
insb
adc
mov
and
mov
adc
fcoml
add
jns
push
mov
in
call
out
addr16
jbe
jo
nop
jle
push
xor
dec
dec
popf
test
lahf
pusha
mov
mov
push
ds
pop
xor
ja
add
jl
xchg
les
sahf
cltd
aad
add
adc
test
es
adc
test
xchg
cmp
add
sub
mov
int3
mov
int
dec
gs
mov
sub
jp
out
rcl
mov
sbb
mov
sbb
out
pop
dec
roll
fdivl
test
jae
fs
adc
ja
mov
and
sahf
add
enter
inc
lea
dec
scas
jp
dec
in
daa
push
out
sub
sub
mul
int3
sti
mov
in
mov
adc
in
and
add
and
clc
cli
inc
mov
xor
pop
shll
xchg
call
movsl
repnz
inc
and
inc
mov
out
imul
inc
lds
je
mov
insb
loop
sbb
popa
inc
mov
sbb
dec
sarl
sbb
and
push
cwtl
jp
push
lret
dec
mov
mov
jge
adc
pop
fimull
out
lret
cmp
negl
aaa
cld
add
jecxz
jae
daa
dec
mov
js
or
mov
fidivl
pusha
mov
fdivrp
mov
leave
adc
inc
bound
int
sbb
pop
sbb
xchg
sahf
sbb
pop
add
cmp
push
les
loope
mov
jns
mov
jb
sbb
sbb
fidivs
out
jno
inc
pop
push
push
popa
mov
cmpb
addr16
or
mov
ficoml
mov
mov
mov
jge
scas
ror
adc
push
add
add
or
int
lods
mov
cmp
cld
mov
or
xor
mov
out
xchg
inc
repnz
data16
or
int3
cmp
sbbb
bound
icebp
pop
loopne
push
in
push
inc
sbb
outsb
inc
fcomp
repz
mov
sub
sub
adc
add
dec
jno
xor
push
ja
or
jle
mov
outsl
cmpsb
ret
xchg
mov
cltd
stos
inc
mov
jns
push
or
lret
int3
in
mov
or
and
sbb
jae
mov
mov
inc
out
rol
xor
fistpll
xor
inc
dec
sbb
dec
xchg
sbb
pop
and
lret
mov
popa
pop
jnp
into
or
dec
xchg
ja
push
push
sbb
out
adc
nop
adcl
and
jg
leave
add
mov
movsl
adc
iret
sbb
mov
fiaddl
push
adc
xor
sub
adc
test
mov
mov
and
fcompp
lret
aad
pop
movaps
es
or
dec
push
sub
xor
cmpsb
test
fisubrs
jecxz
and
mov
dec
jo
pop
nop
cmp
jp
lock
xor
push
movsb
inc
mov
test
int3
out
pushf
shrl
imul
aaa
mov
jnp
incb
sbb
mov
je
mov
mov
xchg
or
jl
ret
enter
stos
and
and
insl
xchg
mov
add
mov
add
jne
neg
int
cmpsl
fsubp
outsl
cmc
push
mov
aad
bound
in
stos
or
jmp
or
dec
fdivrs
and
push
addr16
lret
orl
into
jo,pn
jbe
or
mov
repz
mov
xchg
mov
outsb
or
dec
jge
dec
sub
jbe
mov
jl
lret
or
int3
iret
push
rcl
xor
inc
insl
cs
push
push
inc
lret
popf
das
xchg
mov
andb
and
or
addr16
push
mov
das
call
hlt
inc
or
mov
mov
sarl
ret
stc
mov
cmp
sbb
iret
dec
bound
outsl
int
jle
outsl
movsl
or
inc
aas
sub
dec
loope
push
stos
cmpsl
xchg
xor
loope
loopne
cmpsl
dec
aas
jae
out
or
imul
scas
jae
or
mov
sti
pop
adcb
adc
and
adc
addr16
cs
outsb
lock
or
movsb
push
lea
dec
cwtl
movb
into
mov
jns
mov
and
jbe
sbb
or
cmpsb
outsb
fisubrs
add
test
fidivs
sti
push
xor
push
aad
stos
loope
test
and
js
fstpl
inc
adc
data16
pop
pop
ljmp
incl
mov
xor
shl
lret
nop
aaa
sbb
jo
dec
daa
loope
jno
push
xor
out
pushf
aam
mov
fistpl
clc
xor
hlt
push
pop
pop
xchg
adcl
jne
stos
mov
and
sbb
mov
sub
mov
inc
push
mov
xor
push
repnz
aad
and
js
xchg
fcomps
push
shr
push
repz
sahf
jne
push
adc
push
push
and
test
in
fsubr
dec
sub
inc
adc
dec
pushf
jmp
gs
fs
cmpb
rclb
xor
xor
cmp
mov
jp
fld
int
or
and
test
dec
ror
adc
or
in
and
cwtl
mov
movsl
or
sbb
cmp
ss
fimuls
or
outsl
hlt
jae
and
and
add
stos
add
addr16
xchg
dec
jecxz
xor
aam
std
dec
popa
dec
add
jb,pn
nop
jne
pop
mov
into
stos
imul
mov
icebp
and
insb
dec
stos
push
cmpb
je
fisttpll
sub
lods
dec
jmp
adc
mov
int3
add
mov
jle
xchg
push
sub
and
int
jge
testb
fldcw
addr16
xor
cltd
dec
lcall
adc
jne
adc
out
push
adc
mov
push
dec
adc
sub
gs
xchg
mov
sub
pop
push
jp
mov
dec
xchg
adc
or
je
rcr
fdivs
cmp
xchg
shr
and
sub
inc
add
sbb
mov
cmp
adc
dec
jbe
imul
xor
cmp
or
lret
outsb
cmc
mov
sti
push
mov
and
adc
inc
push
fs
mov
add
jb
mov
outsb
es
lret
adc
mov
add
xchg
arpl
inc
out
jne
push
adc
int3
push
xchg
lahf
xchg
jl
mov
adc
or
xor
jnp
sbb
imul
dec
cmp
mov
nop
mov
sub
and
mov
sahf
pop
ljmp
push
movsb
sub
clc
test
aam
mov
arpl
jmp
or
mov
mov
call
sbb
int3
int3
xchg
nop
out
lcall
add
ret
imul
add
jl
lods
lods
mov
arpl
pop
int
xchg
sahf
dec
sbb
out
push
sub
lods
push
dec
mov
scas
jnp
daa
scas
dec
imul
sub
daa
sbb
mov
lret
in
xchg
xchg
lret
popa
mov
das
arpl
cmpsl
dec
sahf
xor
addr16
je
lods
xchg
das
adc
add
push
push
stos
xor
call
cmp
daa
jmp
fisubl
call
ret
lret
ss
add
jmp
insb
call
adc
mov
xlat
out
ljmp
fs
jns
clc
mov
push
dec
fimuls
sti
fs
out
sbbb
fs
cmp
rcrl
mov
out
lock
insl
adc
fbld
mov
xchg
push
cltd
rorl
xchg
hlt
pop
popl
pop
adc
aad
xadd
cmc
inc
mov
xor
sub
mov
dec
mov
in
mov
add
cmp
mov
xor
xor
es
out
sahf
fcom
sahf
idivb
ja
out
into
ljmp
bound
js
mov
aad
sbb
lret
xlat
xchg
pop
cli
jb
fisttpll
hlt
push
add
test
mov
xlat
xchg
lea
stos
jno
dec
sub
push
out
call
adc
sets
dec
ja
or
movsb
add
mov
fidivrs
add
out
sub
enter
cwtl
je
xchg
out
cli
aad
addr16
sbb
xchg
test
adcl
mov
jne
mov
mov
jnp
iret
pop
scas
cld
or
out
or
pop
mov
inc
xchg
jmp
jmp
aaa
pop
fnstcw
adc
mov
insb
ljmp
shll
cmp
test
jge
enter
cmp
out
cmpsb
fadd
lea
jmp
call
jno
repz
loope
ret
sti
mov
sub
fdivrs
cmc
xchg
push
lret
or
dec
pop
hlt
jnp
xor
cmp
movsb
cmpsb
loope
fildl
or
jmp
xor
pop
movsb
jmp
or
jne
or
jns
dec
xor
mov
add
insb
inc
sbb
sub
xchg
insl
xor
clc
jae
jmp
out
sbb
jecxz
sbb
push
ficoms
or
ja
stos
ficomps
scas
inc
and
jbe
lods
mov
dec
pop
jp
mov
repz
mov
fdivl
sbb
jp
xor
dec
lret
mov
in
out
cmp
push
dec
sub
push
and
fucomp
xchg
add
repnz
sbb
repnz
mov
icebp
jge
scas
enter
je
mov
daa
push
mov
push
pop
out
sub
ds
scas
xchg
push
movsl
push
dec
and
dec
bound
in
add
ljmp
pop
les
mov
popa
insl
call
in
ret
adc
jge
jb
ffreep
adc
mov
rclb
or
mov
adc
push
add
mov
mov
or
jge
jge
push
cli
adc
mov
sub
vmwrite
pop
pop
mov
inc
and
mov
mov
dec
xor
addb
lods
les
lahf
insl
nop
loopne
mov
daa
in
mov
push
push
mov
adc
sub
jne
pop
in
fiaddl
xchg
add
out
cmc
stc
pushf
inc
sub
lret
shlb
or
cltd
aad
mov
jb
test
out
cmp
test
out
cmpsl
adc
sbb
icebp
cmp
mov
stos
jnp
jne
aam
jge
pop
or
ss
adc
add
cmpl
out
cmpsb
sub
cs
lea
push
sbb
andb
outsb
mov
push
jp
dec
fisubrs
call
sti
inc
jae
cmp
push
mov
pop
sbb
sbb
cltd
adc
dec
push
sahf
hlt
adc
cmpsl
or
in
jns
mov
xchg
std
sub
iret
xchg
or
adc
ss
scas
jecxz
sbb
nop
cmp
orb
xor
push
arpl
loope
jb
clc
out
sub
or
mov
movsl
mov
dec
pop
je
add
lret
enter
mov
aad
xchg
xchg
aam
adc
mov
int3
and
mov
and
cmp
jmp
cmp
jo
push
in
inc
int
aas
xchg
popa
xchg
aam
or
push
jns
or
jnp
ljmp
jle
inc
inc
sub
movsb
sbb
jb
or
mov
sub
or
mov
je
dec
in
adc
sub
fdivl
js
testl
jno
or
sub
inc
mov
popa
out
pop
nop
jno
mov
push
stos
xorb
cmpsb
lret
insb
imul
repz
sbb
mov
cmc
pop
stos
dec
inc
xchg
cmp
push
fmulp
jp
or
mov
out
inc
xchg
out
jl
mov
adc
nop
adcb
push
jp
dec
mov
into
pop
test
push
cmp
mov
orb
cmp
fs
inc
fs
fsubs
cmp
and
movsb
or
fistps
lret
sbb
push
outsb
sub
cltd
xor
lahf
dec
ret
stos
sbb
dec
les
add
pusha
test
sbb
in
pop
cmp
mov
out
rol
xchg
flds
add
xchg
scas
aaa
sub
daa
inc
pop
je
lods
mov
sahf
xor
inc
mov
adc
add
stos
inc
adc
push
sti
cs
mov
push
mov
nop
mov
in
inc
mov
jge
push
out
shlb
mov
loop
mov
insb
add
gs
jb
clc
and
popa
jle
jno
pusha
push
aaa
or
out
shlb
fildl
cmc
cmp
daa
xchg
addr16
dec
repz
notb
icebp
sub
hlt
imul
cmp
fs
sbb
add
cmp
mov
add
and
stos
jge
and
cltd
lock
xchg
cmp
mov
popa
inc
repnz
jno
inc
adc
mov
jecxz
hlt
cmpsb
out
jo
bound
jp
or
inc
and
sbb
into
test
cmpsb
lgs
fmuls
loop
rolb
or
aam
pop
leave
xchg
dec
cwtl
sub
js
jns
dec
in
pop
add
xchg
or
sub
test
testl
inc
test
inc
mov
jp
sub
jbe
inc
adc
sahf
xlat
sbb
lcall
adc
loop
std
syscall
jge
popf
pop
jae
add
inc
push
test
int
repz
lret
mov
rcrb
ficoms
lds
fidivrs
dec
push
mov
push
cld
adc
and
or
mov
mov
hlt
mov
pop
data16
lea
sbb
mov
out
gs
push
test
call
sbb
in
adc
dec
cmpb
add
cmpsl
mov
shll
mov
dec
cmp
cld
fcomps
pop
mov
int3
add
push
loope
orb
inc
lock
pushf
push
das
ret
sbb
addl
sbb
in
lock
ljmp
daa
xor
addr16
and
test
bnd
and
mov
pushf
dec
pop
mov
dec
mov
push
sub
mov
mov
push
popa
jecxz
es
jle
ss
sarb
jecxz
add
xchg
test
adc
adc
or
rorl
xorl
jmp
pop
adc
mulb
call
aad
or
sbb
xlat
adc
outsb
nop
insl
add
out
push
add
push
and
out
mov
jp
add
hlt
movsb
add
push
iret
in
out
call
push
and
mov
mov
pop
adc
pop
loopne
adc
insl
or
adc
addr16
adc
push
call
or
sub
cmp
pushf
std
jo
or
xchg
or
push
or
sbb
dec
or
pop
sbb
sub
xor
fdivrs
xchg
cmp
sbb
push
sti
or
loopne
insb
subl
add
inc
fnsave
mov
loop
push
jle
pop
scas
xchg
nop
mov
fwait
inc
push
rcr
mov
lcall
sub
loope
xchg
pop
xlat
sbb
pop
inc
inc
push
out
adc
in
rcll
or
adc
push
shll
into
add
mov
negb
addr16
jbe
pusha
jmp
pushf
mov
imul
mov
stos
out
add
adc
add
in
inc
add
shlb
mov
mov
mov
mov
fbld
cmc
jmp
addr16
sbb
dec
pop
stc
sbb
xchg
lea
les
std
dec
dec
mov
ret
mov
xor
sbb
mov
push
inc
mov
xlat
xchg
pop
sbb
xorl
mov
shl
add
xor
mov
lahf
cmp
mov
dec
gs
pushf
cltd
xor
add
addr16
fmull
mov
sbb
xor
sbb
sub
aad
fisubs
push
fucomp
xchg
push
jb
dec
mov
ret
fcoml
clc
xchg
ljmp
dec
std
int
andb
cltd
cs
cmc
daa
mov
iret
mov
sti
add
in
mov
or
in
imul
or
pop
imul
inc
jg
mov
sbb
push
sbb
sahf
movsl
out
push
sti
sti
test
mov
add
enter
shl
sahf
add
dec
mov
sarb
pop
jno
in
adc
sbb
sbb
push
aas
cld
scas
push
sub
cmp
in
fst
adc
dec
repnz
insl
lods
add
jmp
mov
outsb
add
scas
mov
nop
out
lock
in
adc
pop
ja
insb
sbb
dec
mov
ss
xor
sbb
lret
cltd
push
fimuls
sbb
test
jb
sbb
sbb
push
das
cmp
negl
fstps
sbb
xchg
pop
mov
les
dec
fidivrs
movsl
int
and
ret
xor
andl
xor
mull
testl
in
dec
inc
pop
roll
aaa
dec
in
add
sub
push
mov
mov
push
sbb
stc
lcall
jo
inc
push
pushf
in
mov
push
cmc
inc
in
mov
or
ficoms
fildll
test
xchg
insl
push
xchg
cwtl
std
push
mov
pop
in
lods
dec
rcr
aam
and
out
sub
pop
pop
shrl
cwtl
dec
push
jbe
cmp
call
push
adc
out
mov
or
movsl
rclb
or
test
adc
push
xor
jge
and
sub
sub
aad
es
and
pop
sbb
in
add
fstps
es
dec
sbb
cmp
icebp
insb
shl
mov
sti
mov
movsb
popa
lea
insl
addr16
push
lds
int3
mov
aaa
dec
loop
test
into
aad
jmp
add
data16
fdivr
ss
dec
add
ret
push
mov
cld
fidivs
adc
sbb
enter
sub
cmpsb
inc
and
push
or
jl
mov
xor
into
push
inc
dec
add
mov
push
bound
jmp
cmc
mov
inc
dec
aas
mov
stos
sti
bndldx
adcb
bts
mov
adc
xor
lods
push
cltd
push
popa
mov
das
jo
mov
lea
cmpsb
into
shrl
jb
lea
jno
test
add
adc
imulb
fistl
stos
nop
out
mov
mov
loopne
pop
leave
ficoms
or
das
or
add
mov
out
call
add
sbbb
xchg
and
imul
popa
mov
rclb
sbb
push
xchg
inc
mov
adc
icebp
and
incl
in
jns
pop
ficoml
jbe
sbb
mov
shlb
xchg
les
or
jp
adc
test
ficoml
pop
pop
cmp
jo
pop
ficompl
add
sti
or
sbb
jns
push
int
sbb
out
repz
cmp
adc
sbb
std
sbb
mov
cmp
out
sub
dec
lcall
int3
test
cmpsl
or
mov
or
mov
aad
stc
adc
push
dec
insb
push
aaa
out
push
push
sub
sbb
jb
dec
jg
or
dec
mov
in
or
cld
push
jnp
sub
or
dec
lock
jbe
xor
ret
daa
jno
icebp
dec
dec
out
int3
cmp
fcmove
std
or
push
cmp
repz
into
pop
ret
push
loopne
pop
dec
ja
fists
nop
push
mov
xchg
push
aaa
mov
or
cmp
loopne
pop
jno
push
dec
or
add
fdivr
xchg
and
lret
adc
stos
xchg
jmp
in
cli
iret
dec
adc
popa
adc
dec
jne
out
mov
bound
outsb
pop
out
ds
jae
addr16
repnz
push
pop
sub
cmc
cmpsb
ds
shl
faddl
sub
pop
add
jp
outsb
shl
arpl
push
sub
jg
xor
inc
outsb
lret
lds
loop
int3
mov
push
arpl
stc
in
ss
push
popf
adc
sub
push
lods
mov
push
xchg
sub
jnp
pop
adc
mov
adcl
test
icebp
dec
add
sub
or
mov
scas
or
add
sub
popa
mov
insl
sbb
jne
sarb
clc
sahf
scas
push
and
xchg
sub
add
and
nop
rorl
mov
imul
out
dec
pop
jmp
movsl
aas
push
popa
and
lea
out
xchg
pushf
sub
mov
insl
aas
push
frstor
in
nop
push
xchg
test
ret
loop
stos
popf
fdivs
sarb
fidivs
sbb
push
std
cmp
movsl
bound
sub
subb
mov
lds
test
sub
pop
or
in
out
pushf
popf
lea
push
pextrw
cmp
dec
cld
xor
cmp
mov
push
pop
nop
leave
adc
test
out
mov
stc
mov
mov
and
mov
jno
loope
inc
outsl
stos
je
fidivl
lret
adc
lods
fisttpl
retw
ljmp
push
sbb
imulb
stos
bound
or
inc
sub
and
std
std
xor
jmp
hlt
pop
push
jb
not
xor
add
cltd
cmc
mov
jno
cld
and
into
stos
insb
push
ss
and
movsl
pop
in
imul
inc
sti
mov
enter
jns
jno
dec
dec
jp
xor
sbb
rcll
fsubl
mov
pop
sub
sub
add
jecxz
push
add
outsl
pop
inc
pop
inc
mov
cs
shrb
xchg
pop
mov
cltd
arpl
addb
add
jmp
adc
push
or
aas
inc
bound
jb
js
jbe
repz
mov
dec
jle
rcr
scas
sbb
xchg
sbb
jno
cltd
insl
stc
or
cmp
daa
pop
pop
popf
lods
adc
jns
lret
jl
mov
lea
jne
repnz
xor
lret
xor
call
push
and
xchg
push
adc
mov
jnp
mov
push
inc
lock
push
shl
xchg
push
or
cltd
cmp
lea
cltd
je
xchg
jo
shl
mov
and
gs
popf
clc
je
lods
and
and
add
adc
jmp
mov
ret
cmp
sarl
add
aad
lcall
scas
pop
and
adc
cmc
pusha
push
inc
jmp
or
adc
xor
push
aam
bound
cmp
popf
push
xchg
leave
test
popa
inc
rcll
jnp
addr16
lods
fildl
adc
aad
int3
test
fistpl
jle
adc
mov
xlat
popa
adc
rolb
sbb
cmpsl
and
imul
clc
sbb
lcall
je
push
pop
sbb
popf
addr16
xor
inc
push
inc
xor
jnp
outsl
xor
mov
xchg
jp
or
mov
dec
out
outsb
aaa
push
dec
loopne
std
xchg
lret
aam
out
rcll
xchg
or
cmp
sti
jmp
jno
jp
negb
jle
mov
iret
adc
cmp
out
out
mov
xchg
and
inc
sbbb
fisttpll
repz
xchg
or
mov
xor
daa
jge
sub
mov
adc
add
rolb
outsb
dec
pushf
cmp
add
loop
xor
movsb
rcr
stos
iret
xchg
xor
aaa
test
add
fs
inc
jne
iret
and
icebp
and
pop
mov
xlat
ljmp
and
es
jne
jmp
adc
jno
and
repz
jg,pt
jp
and
ja
pop
lds
imul
or
cld
in
out
xor
in
jmp
mov
rcll
fimull
add
movsl
and
sbb
xor
repz
mov
sub
mov
add
fdivl
jo
push
or
mov
xlat
sti
cmpsb
or
jo
push
mov
cmp
mov
xchg
or
add
sbb
xchg
jmp
popa
jo
fisubrl
subb
add
add
or
add
mov
cmpb
insl
roll
fwait
jecxz
stos
sub
lds
lahf
jg
mov
ss
or
jle
scas
rolb
jl
and
fldenv
mov
or
sbb
push
lret
add
cmp
xor
jne
data16
or
mov
aaa
enter
loop
mov
sub
xor
jno
pop
out
adc
cmp
add
and
popa
xchg
pop
popf
add
dec
mov
lcall
or
cmpsl
push
and
or
mov
cmp
jmp
adc
adc
and
bound
pop
mov
mov
repz
in
cmpsb
xchg
out
adc
sub
sub
dec
rolb
dec
rcrb
sub
aam
mov
aad
mov
andl
add
dec
addr16
xorl
push
aaa
sbb
outsl
in
cwtl
sbb
xchg
enter
mov
not
jno
ret
addr16
jne
faddl
mov
and
jo
and
xchg
shlb
rcrb
push
sub
loope
push
mov
out
xor
inc
xchg
movsl
sbb
cli
push
cmp
movsl
and
fcomip
cltd
stos
sbb
bound
lret
jb
push
pop
add
sqrtps
mov
lock
and
mov
icebp
insl
lock
rolb
xchg
add
pop
mov
nop
fdivl
add
iret
and
mov
cmp
das
sbb
add
add
rol
imul
test
adc
sbb
dec
sub
dec
loope
xor
push
cmp
mov
fbstp
test
aad
and
out
adc
roll
pop
jge
xchg
jmp
adc
test
jnp
pusha
pop
xchg
cld
fnstsw
test
sahf
push
sbb
faddp
addb
adc
mov
mov
and
add
add
mov
sbb
test
pop
dec
cmp
add
sbb
push
ds
push
jp
rcrl
ret
jns
or
push
bound
mov
stos
cmpsl
xlat
out
jle
pop
sbb
jp
lret
es
cltd
mov
sub
cmp
dec
movsl
ljmp
cmp
push
xchg
dec
jmp
dec
add
cmc
inc
fmuls
and
fisttpl
cmc
mov
cmp
sub
rorl
stos
dec
cmc
add
and
into
frstor
outsl
into
daa
inc
ds
insb
or
xchg
outsl
push
roll
inc
jbe
repz
aaa
ds
dec
ds
cli
pop
jns
aaa
filds
pop
add
mov
sbb
fs
pop
inc
insb
in
fsubl
mov
mov
and
pop
push
in
imul
out
xchg
cmp
adc
push
ret
xor
sbb
roll
lret
xchg
lods
out
in
dec
out
and
call
xor
inc
adc
xchg
out
stos
mov
jmp
xchg
xor
ds
mov
mov
ret
sbb
jg
jno
std
mov
addr16
lret
jmp
stos
out
sub
movsb
sahf
dec
loopne
outsl
inc
daa
inc
cwtl
fwait
clc
icebp
adc
jp
mov
cmp
bound
push
sarl
mov
add
loop
jle
outsl
xor
es
mov
adc
inc
andl
xchg
add
sbb
lock
ret
adc
adc
ret
loop
sub
dec
add
cltd
add
push
ret
push
or
adc
jge
or
stos
rcrb
hlt
sbb
xchg
lret
loop
dec
pusha
stos
pop
push
xlat
mov
pushf
push
das
cld
dec
mov
xor
or
js
jmp
sub
adc
loope
pop
dec
jae
push
sbb
imul
cmpsl
cmpl
insl
icebp
enter
and
push
mov
sbb
or
sub
adc
ret
stc
dec
sub
jecxz
jns
xor
mov
xor
sbb
sbb
or
xchg
xor
imul
add
in
push
popa
leave
pop
loop
pop
stos
mov
adc
xchg
cld
repz
in
mov
fildl
jns
stos
sti
push
rcrl
adc
inc
inc
xlat
adc
dec
jp
arpl
scas
fimull
cmp
test
mov
mov
mov
lret
adc
stos
mov
sbb
ret
xchg
cmp
int3
cmp
popa
adc
leave
mov
hlt
pop
jnp
sbb
and
loop
jno
pop
shr
gs
and
mov
in
dec
repz
mov
dec
lods
insl
dec
dec
or
arpl
test
xorl
call
scas
xlat
faddp
sahf
cmp
sub
enter
or
pop
sbb
dec
movsb
jecxz
push
mov
into
stos
adc
scas
sbb
add
dec
aad
mov
movsl
jmp
sub
sbb
rcll
xchg
test
sub
adc
jecxz
dec
in
arpl
mov
sub
out
testb
lock
pop
sbb
mov
mov
lock
movsl
jno
push
in
lahf
inc
adc
jmp
or
enter
jecxz
les
lahf
inc
mov
mov
mov
cmp
push
rolb
leave
aad
mov
mov
inc
scas
push
jns
lea
call
or
mov
jmp
pop
pmulhw
xchg
sbb
mov
adc
jl
add
loope
pop
js
addb
inc
popa
jne
push
enter
dec
sahf
insb
adc
cmp
mov
std
and
push
push
repz
pop
sbb
inc
add
dec
adc
pop
mov
add
sub
test
jbe
gs
or
xor
xchg
dec
or
mov
lds
and
int
fstps
push
add
adc
jp
mov
cwtl
mov
cld
or
add
jmp
adc
aam
into
mov
inc
cli
aad
jmp
enter
outsb
push
mov
xchg
ss
jl
bound
add
sbb
and
ss
cmp
into
ret
sub
jmp
test
sbb
xchg
adc
out
cmp
movsb
adc
rep
insl
ret
mov
out
add
gs
loop
cmp
icebp
mov
jne
bound
rcll
int3
loope
outsb
inc
pushf
push
xorl
hlt
xor
pushf
and
and
arpl
lahf
aaa
pusha
fistl
in
sub
push
sbb
jb
or
cmp
rcrl
and
push
push
push
addr16
adc
inc
cltd
dec
mov
clc
jge
sbb
adc
jg
out
inc
push
mov
cmc
loope
pop
fwait
lahf
enter
add
insw
js
fmul
out
sub
or
add
mov
push
sub
cmpsl
pop
hlt
mov
cltd
cmp
ret
cwtl
mov
mov
jle
push
push
mov
adc
sbb
out
dec
repz
mov
pop
mov
sub
push
aad
add
out
fwait
jle
std
int3
rolb
add
addb
dec
out
push
cwtl
xchg
ret
fnstenv
in
xchg
push
bound
push
mov
int
or
cmp
or
aad
scas
ret
xor
or
mov
adc
out
out
mov
jle
or
clc
fnsave
cli
adc
mov
enter
push
mov
adc
jae
call
and
and
inc
scas
mov
imul
stc
mov
xchg
aad
mov
mov
inc
ss
lret
mov
fwait
addr16
push
out
inc
lret
sbb
mov
add
cmp
xor
sub
out
iret
in
and
js
in
add
scas
mov
sbb
xchg
out
arpl
mov
jo
cmp
or
orb
mov
cltd
rcl
repnz
xor
enter
loopne
cmp
stos
push
sbb
pop
and
xchg
dec
push
mov
scas
enter
dec
mov
testb
mov
jg
fimull
jno
xchg
fldcw
cmp
cmp
out
test
jg
cmp
add
int
mulps
adcl
outsb
mov
test
mov
in
insb
daa
xor
mov
inc
fucomip
push
sub
cmp
mov
push
pop
in
jp
mov
aad
daa
out
jne
and
push
lcall
or
inc
aas
jmp
mov
out
fxch
dec
fbld
xchg
repz
add
push
nopl
aaa
lret
pop
inc
xor
pop
fsub
mov
cmpsl
jb
mov
nop
shll
jns
mov
adc
and
lds
sbb
mov
pop
pop
sbb
lods
in
std
stos
pop
add
jno
shr
into
lahf
xchg
icebp
das
mov
add
mov
ret
imul
loop
test
jle
cld
inc
stc
sub
push
aad
add
mov
enter
xchg
push
sbb
pop
fistpll
add
lock
test
sub
adcb
xlat
cmp
pushf
jne
cmc
jmp
rcrl
mov
pop
sbb
shrb
sarl
lret
bound
js
lret
js
mov
or
cmp
ja
xor
mov
inc
scas
or
mov
aam
mov
cmp
fisttpl
lret
and
imul
cwtl
mov
in
in
jns
cmc
test
subb
add
mov
stos
sub
repz
inc
dec
lock
mov
push
daa
pop
add
and
mov
stos
scas
adc
jle
mov
cmpb
loop
sub
lds
add
test
push
sahf
jl
or
fcomip
fdivrs
cmpsb
xor
cli
jmp
fwait
fs
test
pushf
scas
dec
imul
xchg
mov
dec
jg
test
clc
dec
es
repz
cmp
mov
jb
sbb
sbb
mov
push
sbb
jns
call
fwait
ret
negl
mov
mov
and
sti
int3
pusha
cwtl
pop
loop
mov
fsts
jecxz
sbb
mov
stos
jns
lea
mov
testl
push
sbb
cmc
pop
jnp
mov
shlb
dec
adc
lds
in
les
cltd
push
or
test
jp
and
stos
or
dec
jge
mov
and
pop
pop
aas
push
lret
inc
lods
ds
rcr
cmp
mov
xor
and
sub
fs
out
adc
jl
pop
popa
es
or
jnp
sub
dec
sub
inc
bound
pop
add
rcr
out
insl
gs
xchg
hlt
adc
mov
movsl
fwait
add
mov
adc
mov
mov
mov
xchg
and
mov
push
stos
sbb
push
imul
dec
add
sar
pop
dec
push
sbb
push
xchg
xchg
cld
and
add
sbbl
xchg
mov
lds
sbb
add
lods
testl
loopne
mov
fildl
cmc
popf
xor
pop
int3
pop
sahf
cwtl
xor
je
ja
fwait
jno
stc
cwtl
js
cmp
sub
sti
push
xchg
dec
cmp
scas
xor
dec
out
mov
xor
in
jnp
popa
cmp
pop
out
pop
lret
mov
or
shrb
dec
dec
jnp
dec
jle
outsl
aad
mov
cmp
sbb
nop
aas
or
loopne
inc
cmpsb
mov
pop
sub
mov
scas
sub
inc
mov
sbbl
pusha
setno
dec
ljmp
dec
pop
fs
cvttps2pi
dec
pop
cmp
dec
std
or
mov
notb
inc
stos
das
xchg
push
xor
repz
test
fimull
neg
mov
adc
add
ret
xchg
or
bswap
cs
sub
inc
jl
pop
push
mov
or
inc
adc
adc
pop
cmp
mov
inc
mov
cmpb
pushf
xchg
pusha
pop
mov
mov
inc
enter
aad
fcmove
xor
jo
int
popf
clc
int
add
and
xchg
adc
stos
fcoml
jle
xor
jne
insl
pop
sbb
imul
sbb
out
lret
lods
or
loope
sub
mov
xchg
add
movsb
icebp
ds
shr
popf
add
aaa
dec
jl
or
popa
sbb
outsb
enter
insl
fimull
bound
adc
xchg
mov
test
jmp
mul
mov
push
les
mov
cmp
fsubrl
int
sub
jp
sub
out
mov
mov
in
xchg
jecxz
mov
adc
mov
pavgb
enter
into
push
or
add
cld
push
lcall
push
movsb
sbb
daa
and
std
or
mov
fistl
or
in
cmp
pusha
add
dec
jae
test
push
in
int
call
cltd
ret
sarl
mov
pop
std
push
aam
sbb
repz
dec
sub
scas
and
mov
inc
ret
imul
pusha
pusha
push
into
or
mov
iret
jnp
mov
mov
aam
daa
in
int
add
sub
ds
out
cmp
mov
leave
sahf
sti
jecxz
cmp
add
in
xchg
xchg
push
fwait
dec
loopne
add
jnp
jns
inc
mov
lea
inc
fadd
rclb
jg
insb
xor
sub
cmpsb
fistpl
insb
or
push
in
inc
jnp
adc
jecxz
fidivrl
or
shll
stos
fucomip
mov
adcl
test
repnz
ja
repz
add
adc
add
or
xchg
xchg
jg
jne
ret
idiv
add
shrl
sbb
ret
xor
cmp
lods
repnz
test
outsb
testb
sbb
mov
adc
mov
sbb
dec
lea
test
fildl
fildl
cmp
mov
dec
adc
sub
xchg
xor
push
xchg
cld
hlt
cmp
aad
jmp
push
sbbl
imul
loope
sbb
adc
inc
xchg
ljmp
rcr
add
jae
pop
insl
enter
shll
mov
je
push
add
jno
stos
out
incl
out
fistpl
mov
lea
mov
bound
push
or
push
cmc
rcl
in
jmp
adc
fcoml
les
std
xchg
or
add
cmp
push
push
mov
inc
add
dec
leave
pop
jne
leave
mov
je
fdiv
insb
pop
fs
mov
addr16
ja
xchg
repz
adc
jb
cmc
js
adc
add
enter
push
push
mov
add
out
stos
cld
or
dec
jno
lret
in
sub
out
jecxz
mov
lcall
and
sub
cli
and
jmp
push
add
test
sbb
cmp
jp
xchg
call
sub
and
sub
aad
add
and
mov
jno
adc
and
or
mov
inc
sub
jecxz
pusha
subl
iret
and
imul
adc
popa
mov
xchg
mov
int3
loope
enter
lahf
in
and
or
add
lret
into
sahf
push
das
mov
jmp
adc
outsb
loope
cmpsl
push
andl
out
pop
rclb
in
cld
add
arpl
pop
jge
push
int3
outsl
push
ds
pop
cmp
jmp
sub
sbb
sbb
mov
js
push
ret
mov
call
cmp
inc
adc
nop
mov
sbb
fildll
dec
sbb
ret
or
movsb
sbb
mov
jg
mov
jle
rol
fisubl
and
out
bound
push
aaa
mov
jmp
pop
or
in
pop
int3
and
fdivrp
or
test
xchg
mov
mov
stos
sub
and
test
add
addl
insl
adc
orb
sub
rclb
lea
pushl
mov
enter
out
shll
add
and
repnz
jns
inc
sbbl
jo
bound
sub
xor
and
xchg
add
mov
in
mov
adc
push
sti
pop
mov
xchg
loop
mov
xchg
roll
lahf
push
xlat
xchg
mov
push
pop
fiadds
adc
js
sbb
std
adc
scas
dec
mov
jle
cltd
add
mov
push
call
push
xor
mov
jle
adc
ds
cmp
test
push
add
iret
adc
or
pop
mov
sbb
sbb
addr16
push
cltd
sbbb
movsb
test
adc
mov
icebp
jle
cmp
pop
fldenv
sbb
mov
and
push
mov
or
adc
sahf
push
push
out
or
iret
cmp
xchg
mov
adcb
mov
push
ds
jne
js
or
into
or
mov
aaa
xchg
push
xchg
add
andl
arpl
test
nop
lahf
jnp
fcomi
movsl
jae
cmp
mov
jecxz
test
test
loopne
enter
repz
mov
fildll
or
push
arpl
into
mov
ds
jge
and
xlat
add
jne
mov
nop
adc
inc
repz
insl
ss
sub
and
hlt
pushf
test
cmp
or
sbb
ret
inc
cmp
fsubs
pop
rclb
cmpsl
sub
mov
outsb
jecxz
xchg
scas
mov
shl
popa
into
xchg
sbb
mov
outsb
mov
mov
and
or
movsb
adc
add
stos
mov
dec
into
mov
adc
pop
rorl
stos
pushl
cmc
jl
pop
pop
test
push
pushf
sub
mov
push
dec
jp
out
jle
loop
fsubrl
adc
in
aam
cld
scas
mov
enter
sub
cltd
mov
push
je
cs
iret
mov
cmpb
pop
inc
loop
xchg
test
jnp
movsl
adc
adc
shl
xchg
and
and
dec
and
xor
fisttps
lods
jmp
sub
les
dec
sub
in
add
pop
sbb
fs
outsb
xchg
or
and
jns
sbb
cmp
add
decl
out
fsubrl
cmp
and
sbb
cmp
out
push
cmc
iret
sub
pop
sti
cwtl
mov
lock
xchg
aam
int
pop
fs
push
fwait
mov
pop
pop
pop
or
mov
popf
inc
xchg
dec
in
pusha
out
mov
or
stos
aam
cmp
lea
add
sbb
sbb
ss
jl
push
neg
jp
inc
cmp
aaa
sti
and
cltd
mov
loop
jnp
jp
lcall
cs
add
dec
lods
cld
inc
mov
in
add
push
arpl
inc
xlat
sti
push
or
pop
adc
mov
sbb
inc
enter
inc
and
orb
inc
cmp
mov
fimull
fcmovnu
test
out
add
movsl
or
js
push
lea
pop
in
incb
lea
cmp
scas
dec
int3
add
add
dec
aad
sbb
sub
loop
pop
xchg
notb
inc
jno
lahf
out
adc
jecxz
add
sbb
adc
or
push
adc
aad
out
stos
inc
outsl
or
add
and
xor
push
adc
call
dec
xchg
push
loopne
pop
mov
shlb
push
in
mov
jl
sub
aam
ds
in
cmpsb
dec
aas
fcoms
fldt
faddp
push
fwait
insb
pushf
ret
out
lret
mov
xor
mov
or
or
dec
add
in
sbb
fdivrs
or
add
loopne
leave
in
cltd
xor
lods
mov
xchg
pop
add
lods
sbb
rol
int
mov
jne
daa
add
mov
ret
mov
outsl
push
cmp
mov
shrl
xchg
xchg
sbb
ret
scas
push
mov
inc
xor
mov
pop
or
jmp
test
mov
or
ret
inc
inc
and
ljmp
test
sarb
pop
add
sbb
inc
cltd
push
scas
pop
mov
mov
or
dec
bound
jae
aam
out
add
in
ret
enter
push
dec
pop
inc
cld
hlt
mov
push
out
iret
jge
mov
popa
push
insb
xchg
bound
mov
mov
cmpsb
ljmp
gs
movb
lds
jno
cmp
jge
pop
enter
and
addr16
jp
xor
xor
stos
inc
lock
aaa
mov
lods
sbb
sbb
sbb
rolb
and
stos
iret
xchg
jl
sub
int
loope
outsb
mov
fnsave
add
daa
ja
popa
or
les
xchg
adcl
jp
sbb
mov
cltd
mov
inc
arpl
jne
repnz
push
int3
push
fdivr
jp
mov
sub
jge
cld
cwtl
mov
out
fists
shlb
jns
mov
out
out
sub
bound
loop
outsl
jge
push
cmp
sub
jge
fsubr
and
cmp
mov
out
rorl
loopne
roll
jmp
sbb
cmp
repnz
and
xchg
ret
jecxz
lcall
imul
stos
sbb
mov
je
loope
call
stos
adc
stos
or
jb
jle
or
inc
inc
sub
mov
fcompl
xchg
xchg
xor
ret
das
fs
or
push
ljmp
pusha
stos
pop
xor
frstor
popf
add
test
pop
sub
cltd
loop
dec
xor
pop
into
cmc
or
jbe
faddl
pop
and
sub
fisttps
inc
sbb
sbb
aas
std
jle
lods
pushf
sbb
not
sti
pop
pavgb
or
jle
xor
push
mov
add
sub
mov
shll
imul
int3
sbbb
mov
jg
jp
fdivs
pop
repnz
jp
pop
xor
pop
leave
inc
pop
das
or
push
or
jo
add
push
jne
loope
jl
sahf
mov
cwtl
pop
lock
xchg
cwtl
and
adc
sub
popa
or
and
mov
jno
stos
sahf
xor
cwtl
dec
push
sbb
sbb
iret
xchg
addr16
sub
adc
xchg
jl
negl
inc
aad
pop
or
mov
call
or
sbb
pop
pop
cmp
lahf
mov
inc
xchg
add
rol
das
scas
cld
and
jg
sbb
les
xchg
adc
and
sbb
or
xor
loope
das
xor
scas
in
sarb
adc
repnz
add
mov
add
pop
mov
lock
cltd
jo
cwtl
push
aad
inc
push
fisttps
lods
stos
ret
adc
push
clc
mov
addr16
les
dec
dec
inc
add
mov
xor
or
jl
xchg
jo
cwtl
cmp
dec
aad
inc
imul
jne
lea
xchg
movsb
inc
push
icebp
in
jns
and
xchg
imul
fists
push
out
mov
sbb
add
repz
mov
andb
lahf
xor
out
add
data16
outsb
daa
jnp
test
loope
pop
shr
and
or
pusha
mov
xlat
fdivr
rorl
fdivs
insb
add
les
lret
mov
es
aad
cmp
push
shlb
add
fxch
inc
cmp
xchg
nop
stos
out
enter
jg
addb
and
or
pop
or
and
or
orl
gs
insb
inc
fwait
js
rclb
add
sub
cld
mov
jb
pop
mov
out
mov
cltd
movzwl
xor
or
cwtl
adc
or
lahf
into
pop
or
test
sbb
and
or
sub
mov
jle
insl
inc
mov
or
push
repz
push
sub
cmc
mov
cltd
out
daa
call
or
push
inc
pop
das
or
mov
dec
cmp
pop
in
das
into
lock
mov
push
add
icebp
add
jle
push
sbb
mov
into
xor
roll
jle
andl
loopne
or
or
test
mov
in
ss
xor
adcb
or
mov
loope
sub
pop
sti
aaa
jae
add
mov
inc
push
or
sub
adc
cmp
xor
inc
lds
sbb
and
jo
jb
xor
push
or
adc
push
jno
and
movsb
ss
rorb
push
cmp
cltd
or
pop
lcall
push
mov
adc
xchg
or
sahf
or
mov
scas
aas
xor
shll
and
add
pop
lock
jl
sbb
xorb
or
inc
lcall
xchg
jae
push
pop
and
mov
adc
jmp
dec
outsb
xor
jg
mov
mov
das
leave
or
jb
and
or
movsl
push
imul
sub
inc
stos
ss
add
test
addb
mov
mov
or
cmp
or
xor
test
mov
dec
es
mov
mov
movsb
gs
mov
or
incl
push
or
xchg
les
addr16
pop
cmp
rcr
cs
xchg
fldl
or
inc
fcomps
imul
or
je
das
dec
or
xor
or
xor
js
and
fildl
or
icebp
hlt
bnd
gs
jge
or
scas
xor
or
nop
gs
dec
cmp
sbb
dec
in
xchg
jno
add
in
aaa
pop
and
xchg
sbb
pusha
xor
iret
push
insb
loopne
jo
push
adc
gs
dec
sub
test
shll
cmp
out
mov
fists
dec
icebp
or
mov
dec
jne
mov
push
lods
scas
jle
in
inc
loope
inc
push
clc
je
cmp
jmp
mov
mov
imul
push
push
or
pop
push
nop
jle
fincstp
mov
jb
xchg
or
or
mov
inc
and
jmp
jae
cmp
or
andb
shll
and
add
push
or
aam
loop
xchg
jmp
test
lret
add
dec
orl
test
lret
lds
mov
or
inc
push
xchg
mov
inc
or
ja
lahf
dec
mov
jg
insl
jne
or
mov
add
popa
sub
aad
into
mov
or
outsb
mov
and
fdiv
sbb
xor
sbbl
or
sarb
stc
or
fstpl
addr16
sub
shlb
mov
mov
xchg
or
icebp
subb
fcmovb
mov
sbb
cmp
into
adc
mov
test
or
mov
inc
imul
xchg
mov
adc
sub
hlt
adc
sbb
mov
imul
cld
mov
fsubs
jbe
cli
jp
scas
xchg
int
lods
daa
push
in
pushf
fs
ficoml
aam
add
data16
adc
xchg
lds
push
sbb
enter
mov
push
push
add
call
mov
pop
daa
mov
or
mov
out
mov
adc
jns
jbe
es
data16
mov
sbb
or
sbb
in
or
mov
loop
or
cmpsl
adc
xchg
and
lahf
or
call
jmp
sub
xor
mov
inc
or
xlat
into
xchg
mov
push
jo
or
cmpsl
int3
fwait
adc
push
std
add
das
hlt
or
xchg
out
or
or
mov
jl
fstps
out
cmp
mov
outsb
and
hlt
test
pop
cmp
or
shl
xor
adcb
fsubrl
mov
sub
pop
inc
arpl
lods
rclb
cmp
xchg
or
scas
les
pusha
or
mov
mov
push
jp,pt
outsl
or
arpl
adc
lods
adc
pop
mov
or
push
dec
inc
dec
xchg
push
pop
scas
adc
cmp
fldt
jmp
dec
inc
les
inc
or
adc
mov
xor
stos
pop
sbb
in
pop
pop
sarl
cld
popa
xchg
sarl
or
sbb
fs
and
in
dec
lods
rolb
lret
jp
sbbl
insl
pop
mov
xchg
imul
fnstsw
mov
adc
or
scas
fcompl
sub
lea
cmpsl
xchg
sub
and
rclb
adc
rcll
cwtl
in
sub
orb
ja
fnop
add
or
or
adc
ret
ljmp
stos
mov
ret
inc
mov
xcrypt-ofb
cmpsl
in
out
push
lods
pop
and
sub
imul
adc
dec
fisttps
nop
inc
enter
jb
and
sbb
inc
jno
jmp
rcll
les
rclb
mov
loope
and
or
rol
loopne
or
addb
daa
sub
mov
addl
pop
pop
stc
or
cltd
xlat
add
or
popa
hlt
insl
add
ss
fsubrl
xchg
movsl
popf
test
add
pop
mov
das
dec
sbb
js
enter
or
mov
std
jp
ret
mov
adc
cmp
inc
fcomip
movl
fnsave
mov
jp
nop
sbb
dec
shrb
adc
icebp
xchg
and
push
adc
xor
lret
cmp
jbe
imul
pop
pop
fwait
sbb
movsl
xchg
ficompl
pusha
mov
xchg
xchg
lea
and
mov
fimuls
out
cmc
test
push
xor
mov
or
mov
inc
mov
xlat
jp
inc
xor
mov
cmp
dec
cmpsl
rcrb
jno
popa
dec
and
inc
int3
or
mov
dec
dec
adc
testb
cld
push
hlt
jno
movsl
xchg
fdivl
adc
insb
xchg
pusha
insl
or
mov
dec
add
push
js
dec
or
scas
popa
and
jne
sub
inc
int3
mov
add
popf
jg
aas
or
push
sub
subb
xchg
in
mov
mov
or
inc
xchg
sbb
lods
in
or
fldlg2
add
push
repnz
jg
mov
std
in
inc
or
pop
dec
sub
adc
test
mov
pop
or
cmp
pop
push
aad
sbb
xchg
dec
mov
add
mov
ffree
outsl
ds
pushf
outsb
nop
xchg
mulb
mov
pop
jge
dec
or
clc
stos
pop
out
aaa
scas
ret
jae
cwtl
bound
push
testb
xor
xlat
dec
push
sarb
rorb
dec
pop
arpl
add
out
pop
scas
mov
loopne
repz
inc
outsl
test
add
repz
lret
fs
pop
hlt
mov
mov
and
sub
lret
mov
insb
das
mov
dec
clc
call
outsl
or
add
daa
pushl
imul
jl
mov
inc
test
or
dec
push
fmull
or
into
xchg
adc
and
inc
repnz
icebp
mov
movsb
out
dec
jl
sub
mov
dec
sbb
daa
or
aaa
orb
dec
pminub
or
mov
leave
or
mov
les
mov
sbb
fiadds
dec
pop
xor
loop
mov
dec
insb
mov
hlt
and
sbb
pop
adc
rolb
jle
cs
add
jae
mov
pop
mov
in
mov
cwtl
mov
xor
push
lods
gs
aad
mov
push
push
cwtl
mov
insb
ret
in
or
out
pop
cmp
or
jge
pop
xchg
sub
addr16
sbb
xchg
icebp
rorl
fbstp
add
add
xchg
mov
mov
aad
dec
fimull
or
or
es
iret
pop
and
adc
fiaddl
lock
jbe
lcall
mov
test
inc
xchg
cmc
sub
cwtl
loop
shr
ret
push
es
dec
cmpsb
inc
nop
pop
orl
cwtl
scas
nop
leave
xchg
jmp
mov
xlat
sbb
mov
movsb
jg
mov
sbb
or
dec
pop
xor
push
fldt
adc
add
jecxz
or
push
imul
clc
imul
add
popa
or
or
mov
lods
sarb
xor
push
or
jmp
popa
mov
mov
ficomps
or
cmp
rorb
mov
insb
and
repz
ss
xlat
enter
je
xor
decb
iret
jp
and
mov
mov
loop
or
or
pushf
mov
fmull
push
ret
or
fimuls
mov
mov
mov
jnp
scas
rcrb
jle
lret
sub
popa
sbb
lock
leave
dec
pop
xchg
addr16
scas
xor
fs
sbb
cmpsl
call
xor
test
mov
push
lds
mov
mov
pop
xchg
push
push
adc
cmp
loopne
xchg
or
add
in
sub
or
add
loope
in
pop
fucomp
dec
pusha
in
fwait
jnp
shrl
pop
cmpsb
nop
jge
mov
stc
dec
sbb
dec
mov
ja
adc
orl
or
std
sbb
add
xchg
scas
or
fisubrs
in
lcall
xor
ret
or
adcb
or
ret
stc
sbb
fs
xchg
sbb
test
and
mov
clc
ja
sti
test
sbb
mov
dec
cmp
mov
jge
pushf
cli
xchg
push
dec
push
cmp
or
fldl
lcall
or
adc
daa
lods
mov
and
inc
sti
adc
fsubp
pop
mov
in
sbb
sub
filds
xor
imul
dec
and
js
jbe
mov
or
rcl
cmp
sbb
bound
add
out
xchg
jecxz
dec
jle
and
fisttpll
push
idivl
mov
jmp
jno,pn
fcmovnb
or
mov
mov
arpl
push
or
pushl
pop
stos
inc
cwtl
les
cmpsl
pusha
jl
out
jmp
dec
add
int3
rcll
push
sub
adc
push
or
loope
ret
aad
jmp
aaa
aam
or
and
enter
xor
fisttpll
stos
andb
mov
loope
addr16
mov
push
pop
sub
xlat
test
or
mov
rcll
icebp
fistpll
fdivp
mov
inc
aam
mov
sub
push
ja
add
lock
jo
cmc
repz
daa
fldt
fwait
sbb
xchg
test
push
lods
stos
mov
rcrb
lea
adc
push
imul
pushf
or
mov
and
cltd
mov
dec
ja
cmpsl
test
dec
addl
das
insb
sbb
jge
inc
into
vprotb
or
mov
add
and
push
or
jmp
incb
xorb
inc
aam
clc
add
and
ficompl
push
or
dec
movsb
mov
or
ret
adc
shll
lret
xchg
or
repnz
adc
or
hlt
decl
int
or
subl
dec
push
lret
xchg
testl
rorl
inc
loop
jb
mov
cmc
mov
or
cmpsl
es
lcall
pop
push
prefetch
sbb
or
ljmp
mov
imull
orb
jl
fcmovbe
jg
outsb
or
xlat
push
sub
or
imul
sbb
ret
push
pop
orl
dec
push
add
imul
xor
pusha
add
or
inc
jle
test
in
pop
mov
xor
lcall
mov
insl
lahf
adcl
xchg
push
mov
out
imulb
insl
xor
sub
mov
mov
cmp
or
gs
pop
scas
push
cmp
out
pop
push
lret
repz
pop
push
popf
imul
sbb
mov
popf
fidivrs
mov
test
rcrb
or
xchg
pushf
ds
sub
mov
lods
inc
in
nopl
dec
test
int
jbe
xor
mov
mov
add
jp
dec
repnz
mov
stos
cli
or
jge
or
call
imul
movsb
add
out
aad
push
leave
mov
in
ja
add
or
aaa
and
and
or
cmp
mov
nop
xchg
and
or
xchg
sub
in
addb
in
nop
xor
jbe
movsl
loope
add
push
xchg
pop
or
sub
jecxz
inc
loop
mov
bound
adc
and
adc
sbb
jge
xchg
push
xchg
mov
jne
out
aam
clc
sub
or
out
push
out
insb
inc
sub
jnp
sub
inc
popa
arpl
cs
mov
push
inc
lds
push
popf
ds
add
mov
mov
rolb
cs
push
rcll
push
jmp
sub
adc
scas
pop
mov
adc
sub
dec
xor
mov
clc
mov
lock
lcall
and
or
mov
sub
mov
dec
add
ret
mov
lods
adc
jle
bound
icebp
adc
or
add
loope
inc
std
loopne
and
fdivrl
stos
outsl
sbb
or
jno
or
or
xchg
or
ffree
cmp
in
mov
inc
jae
or
mov
into
loopne
push
push
mov
insb
cltd
pop
negl
sbb
or
and
push
mov
add
fsubp
inc
mov
mov
sarb
jge
lods
out
jns
pop
popf
cmp
jno
test
sub
cltd
pop
ja
popa
imul
ss
mov
lods
sub
cmp
imul
push
cmp
sub
adc
xchg
incl
lods
pop
cld
js
pop
ljmp
or
jle
inc
call
daa
nop
mov
cltd
cmp
jnp
fidivrs
lods
out
inc
or
push
sbb
outsb
jmp
lcall
mov
cwtl
add
sub
into
mov
add
lods
rcrl
jne
paddd
push
lods
or
cli
test
ret
into
iret
stos
add
xor
stc
out
push
in
push
pop
rclb
dec
xchg
jae
adcl
out
mov
sub
xor
in
or
cwtl
mov
push
inc
popf
adc
inc
or
cli
xchg
pop
add
fwait
adc
mov
or
faddl
inc
mov
aaa
sbb
lock
dec
add
mov
adc
fnstsw
stos
mov
sbb
out
jbe
push
jp
call
sbb
subl
pop
bound
repz
push
jno
inc
adc
mov
lcall
testl
and
test
rep
jecxz
std
pop
stos
adc
xor
jmp
push
adc
dec
in
leave
lods
sbb
xor
pusha
mov
stos
cs
dec
aaa
jo
mov
sbb
leave
pushf
cld
pop
aas
xchg
sbb
cmc
lahf
mov
mov
xor
mov
fsub
mov
mov
inc
push
leave
adc
lret
xchg
and
fsubrl
out
pop
sub
fbld
xor
fsubr
out
mov
add
pop
pop
roll
adc
call
pop
insb
push
inc
out
cld
lahf
sub
arpl
jb
sub
dec
push
mov
repnz
jge
add
or
mov
jb
je
loop
push
add
jbe
jnp
push
lretw
xor
adc
cli
das
stc
sub
push
mov
rorl
jne
xorb
pop
jp
xor
and
pop
lods
mov
dec
addr16
xchg
add
or
cld
push
adc
push
movsb
sub
add
mov
mov
lea
lret
sub
jb
mov
cmp
jmp
int3
imul
cs
imul
jecxz
lds
or
xchg
insl
mov
pusha
aad
or
repnz
and
adcb
mov
std
ss
notl
sahf
sahf
adc
or
push
fisttpll
jb
test
jb
jg
push
sbb
xor
repz
mov
sbb
add
cmp
daa
adc
dec
mov
cmc
jne
or
jecxz
ficoms
cmp
test
hlt
sbb
repz
xchg
in
or
cmc
pop
rcrb
popa
inc
xor
out
sub
ss
sbb
js
adc
add
mov
add
adc
mov
xchg
in
pop
repnz
lcall
xchg
cmp
call
push
hlt
jp
outsb
lret
insb
add
lahf
add
mov
gs
sbb
or
cltd
push
inc
popa
add
inc
adc
insl
inc
andb
lret
inc
mov
pop
iret
insb
stos
fstl
mov
jmp
mov
ljmp
push
sbb
push
push
dec
shrl
adc
fsubl
fidivrl
and
leave
f2xm1
xchg
push
das
and
jae
insl
jnp
stos
xchg
ss
jns
movsl
xlat
repnz
out
add
mov
loopne
sti
fs
in
jmp
int
cmp
dec
jle
dec
jl
inc
ret
sbb
fbld
dec
in
mov
clc
pop
xlat
scas
and
sub
repnz
sbb
jo
adc
int3
xchg
loopne
add
movsl
aaa
mov
pop
out
negl
xchg
imul
sarb
adc
mov
pop
fxtract
jge
and
and
sbb
stos
add
pusha
hlt
scas
adc
mov
bound
test
les
out
sarb
xlat
xchg
je
add
sub
pop
popf
sbb
jge
fwait
dec
pop
jnp
out
dec
push
pop
rcrb
pushf
inc
loopne
mov
inc
cmp
int
mov
push
int
ret
xchg
out
mov
out
imul
sub
add
sahf
outsl
mov
int3
out
fstpt
les
lock
in
xchg
arpl
xchg
and
mov
xchg
pusha
fdivr
jnp
jmp
ret
pop
ss
fdiv
xor
or
stos
ds
enter
bound
scas
fcompl
lock
fwait
xchg
std
movsl
out
jo
push
iret
loopne
out
in
mov
bound
pop
pop
bound
mov
adc
pop
xchg
inc
mov
jns
es
clc
mov
mov
roll
add
js
pop
add
pushf
in
add
pop
nop
dec
adc
rorl
xchg
sbb
mov
adcb
fldl
pushf
fcoml
stos
ror
fwait
cmpsb
call
fs
rcr
lahf
or
and
or
adc
pop
les
mov
pop
shlb
dec
mov
pop
cltd
cld
mov
les
cltd
jle
jno
out
sahf
add
mov
jns
or
inc
mov
xchg
and
mov
fisubl
je
daa
adc
xchg
cmc
test
in
aad
mov
adc
cltd
mov
adc
sbb
pop
push
push
sbb
ss
rolb
ror
js
xor
inc
xor
subb
pop
jne
aam
mov
xlat
xchg
mov
pop
jns
xchg
cmp
jge
in
clc
mov
movmskps
leave
jge
xor
push
mov
mov
rcrl
daa
push
lcall
xchg
pop
xlat
stos
pop
sbb
add
jge
ljmp
in
or
ja
dec
das
sbb
pop
ljmp
mov
xor
outsl
mov
xchg
jmp
cmp
int3
jnp
push
icebp
sti
jle
mov
outsb
leave
repnz
std
or
xor
pop
rcrl
xlat
cmpsb
bswap
xor
shlb
mov
out
dec
cmpsb
leave
mov
jmp
roll
jne
jnp
dec
jbe
sbb
popf
jns
fs
insb
stc
ret
jle
bound
pushf
aas
mov
mov
ds
cmc
mov
fwait
push
pop
or
and
outsb
test
inc
aam
enter
dec
loopne
in
push
jno
lock
jmp
mov
lret
aas
mov
loope
or
push
ds
add
or
cltd
jbe
and
or
xchg
pop
scas
imul
into
test
fnsave
adc
dec
popa
je
lret
cmp
cmc
scas
and
nop
je
leave
out
insb
lcall
and
push
mov
jl
ficomps
and
jmp
mov
mov
cmp
add
sti
push
in
xchg
mov
js
sbb
inc
lret
lcall
inc
ror
aad
mov
bound
mov
es
dec
stos
nop
xor
dec
mov
iret
and
mov
jbe
loopne
popf
ds
test
mov
xor
jbe
sbb
jb
and
in
push
sbb
pop
orb
js
inc
and
repz
lret
and
lahf
xchg
mov
jl
or
sbb
aad
lret
sbb
pushf
ret
xchg
lcall
sbb
mov
insb
lret
fwait
test
jns
movsb
dec
jnp
or
dec
add
push
xchg
inc
xlat
repz
pop
sti
cmp
cmc
push
push
fnstsw
in
in
mov
xor
cmc
inc
mov
mov
inc
or
mov
sub
repnz
addb
add
push
pusha
sbb
xchg
lock
push
js
jp
bound
sahf
or
loop
pushf
adc
outsl
sbb
jecxz
add
inc
mov
or
cmp
xchg
call
rclb
addr16
or
push
mov
or
je
int3
jecxz
xchg
or
cltd
mov
lret
loopne
js
std
iret
lods
or
lahf
pushf
push
fwait
or
ja
jge
or
fsubr
xor
imul
inc
adc
imul
sub
idivl
jno
add
enter
scas
jecxz
dec
gs
lcall
xchg
cmpsl
dec
or
mov
dec
or
mov
add
aam
or
sub
clc
sbb
xchg
or
mov
jge
es
cli
inc
xor
movsl
cmpsl
mov
pop
mov
pop
adc
inc
or
add
jecxz
cwtl
or
dec
push
sti
mov
xchg
jmp
lods
test
cltd
jecxz
dec
jns
fildll
adc
int3
into
fadds
ljmp
out
sub
jnp
inc
cmp
in
rcrb
dec
out
cmp
sbb
add
or
add
nop
and
push
cmp
cmpb
jg
cli
insl
jno
sbb
mov
or
sbb
cmc
mov
add
mov
fnstenv
jecxz
xor
or
rcl
les
cmp
add
cltd
mov
mov
or
ss
mov
add
push
lahf
xor
mov
xchg
in
mov
flds
jae
in
les
nop
xor
or
jo
xchg
or
add
hlt
jge
or
out
andb
in
push
jb
scas
and
cmp
mov
in
pushf
mov
or
xchg
sbb
mov
cmp
or
orb
or
mov
cld
daa
push
or
mov
sub
push
ret
mov
js
in
cmc
stos
call
adc
int3
loopne
leave
aas
push
gs
and
and
and
imul
in
sbb
js
dec
push
daa
and
adc
and
pop
popf
insl
test
addr16
aam
or
faddl
fisubrs
or
pop
or
sub
or
negl
push
jmp
jno
imul
test
xchg
out
std
or
pusha
mov
mov
push
pop
lds
xor
adc
push
pop
dec
aas
clc
mov
inc
mov
push
pushf
pop
sahf
in
mull
mov
inc
jbe
xchg
xchg
dec
cmp
std
jno
rorb
pushl
push
ds
mov
andl
in
inc
push
push
push
mov
movsl
xchg
mov
jb
xchg
cmpsl
jnp
or
mov
xchg
dec
fsubrl
xchg
sti
dec
sbb
sub
xor
and
xchg
pop
xchg
dec
xlat
js
cmpl
cld
xchg
das
or
in
ja
or
rcr
fdivrl
or
testl
aam
insb
stos
adc
add
lods
in
lret
mov
dec
or
in
jb
in
dec
scas
pop
movsb
out
aam
or
jmp
mov
inc
mov
pop
fwait
dec
or
cmpsl
js
jo
into
pop
jnp
and
adc
jns
sbb
jmp
sub
rcrb
pop
sbb
jl
or
dec
scas
in
or
scas
fs
std
push
or
je
push
adc
xchg
dec
js
mov
mov
jae
ja
psubsb
ret
cld
cmp
test
pop
test
mov
movsl
gs
push
or
js
inc
jecxz
sbb
cmp
pushf
cld
mov
xchg
sub
jp
insl
push
add
xchg
or
dec
add
push
xor
clc
cltd
pop
mov
mov
adc
push
jnp
pop
jns
xor
jecxz
fdivr
mov
adc
movsb
adc
or
rcll
jecxz
out
je
pop
pop
sub
xlat
stos
ja
into
adc
icebp
in
sub
sbb
pop
lret
test
pop
pop
in
or
lcall
add
das
add
mov
add
push
dec
or
pop
pop
push
push
mov
jecxz
in
jge
xchg
or
adc
add
nop
mov
dec
mov
inc
sbb
sbb
xor
outsl
out
sbb
xchg
inc
iret
imul
xchg
xchg
aas
pop
or
pop
sub
dec
jno
and
xor
imul
xor
mov
xorl
lds
adc
mov
mov
stos
sbb
ds
pop
xor
push
or
jmp
sbb
xchg
xchg
or
pushl
sbb
or
xchg
jne
jbe
jmp
rcrw
fimull
or
and
xor
stos
out
dec
adc
mov
in
push
shlb
cmp
push
dec
xchg
and
sbb
testb
or
push
pop
test
lret
jp
jns
xchg
into
ret
or
add
push
or
sub
mov
or
mov
inc
in
or
fdivl
out
adc
ret
or
movsb
nop
loopne
or
jo
fistpl
in
lahf
pop
in
pop
in
lods
js
incb
orb
aad
out
mull
or
push
dec
rorb
in
or
push
lods
fs
inc
jns
repz
cmpsl
or
sub
aas
addb
int
sahf
or
mov
dec
inc
dec
or
mov
inc
xor
jp
or
in
in
ret
es
sbb
xchg
icebp
cmp
testb
add
inc
fisttps
lods
orl
sub
or
and
fisttps
loopne
xor
mov
sbb
fstpl
add
outsb
adc
or
sbb
lds
xchg
push
movsb
jge
dec
push
mov
or
add
mov
nop
mov
sub
lods
lret
push
or
pop
xor
sub
inc
add
gs
mov
sbb
pop
or
fstpt
add
iret
mov
push
lock
je
test
sbb
out
imul
jg
int
test
das
jmp
repnz
ret
insl
insl
cld
jnp
out
lds
stos
pop
stos
negl
pop
mov
inc
jge
fidivl
adc
and
out
movsl
mov
test
jg
stos
push
stc
xor
push
cmp
pusha
cmp
push
bound
int3
subb
leave
and
clc
nop
jg
daa
xchg
sub
dec
aam
gs
mov
pop
push
or
jmp
popa
jns
fiaddl
xchg
xchg
out
pop
rolb
push
and
adc
cmp
cmp
adcb
pop
push
jne
outsb
xlat
fs
iret
jbe
vpunpcklwd
out
sub
insl
movsl
sbb
xchg
add
ja
adc
sub
inc
jge
ret
mov
xorl
jb
xchg
sti
jno
cwtl
and
inc
pop
push
add
jmp
mov
sub
pop
xchg
ret
add
jno
push
mov
and
cmp
outsb
movsl
xchg
or
rcrl
daa
pop
mov
cmpsl
loopne
arpl
dec
jmp
cs
push
fisubrs
out
faddl
sti
cmpsb
mov
mov
nop
stos
loope
popa
loopne
test
sbb
in
imul
dec
in
mov
movsl
adc
jo
imul
hlt
cmp
adc
pop
add
sbb
insb
imull
out
leave
sub
dec
add
mov
inc
in
and
inc
mov
push
out
addr16
lea
out
iret
movsl
jge
sbb
mov
adc
js
sbb
adc
out
ds
bnd
sahf
adc
adc
inc
or
push
ja
fcompl
dec
pop
scas
sbb
jno
lea
adc
pop
jl
loop
sti
lods
out
add
add
adc
xchg
and
inc
je
inc
add
xor
push
push
stos
or
cmp
jbe
mov
sahf
cmp
adc
out
es
inc
loop
shrb
or
in
les
mov
add
in
sbb
add
push
xlat
or
insl
cwtl
int
dec
cld
filds
loope
bound
les
lods
cwtl
sbb
ret
leave
stos
sbb
sbb
sahf
and
sbb
mov
adc
iret
sbb
bound
sub
fiadds
popw
nop
movsl
ret
add
push
pushf
ss
aam
loop
inc
cld
out
lea
test
aaa
cmpb
fdivrp
je
jno
scas
into
xchg
std
xchg
andl
push
pusha
push
xor
cmp
in
mov
mov
out
cmp
lahf
add
push
sbbl
test
add
jb
dec
sbb
sbb
jge
jae
mov
or
add
testb
in
js
popa
dec
shll
movsl
jne
mov
inc
out
fwait
sbb
adc
push
sub
icebp
loope
add
and
xor
sub
sarb
jp
cmp
jecxz
in
push
bound
inc
enter
mov
dec
lods
push
xlat
ja
daa
lock
ljmp
in
out
and
sbb
xor
aam
lods
jge
int3
hlt
andb
mov
adc
aam
aaa
push
and
and
call
mov
in
in
push
out
inc
push
popa
sbb
sbbb
mov
orb
push
cmpsl
fiaddl
sbb
adc
adc
jne
addl
mov
push
fsubrp
mov
dec
fcomps
cs
mov
jge
add
fmulp
mov
sub
repz
icebp
push
out
push
cmp
pop
xor
in
enter
or
aam
in
aas
mov
popf
out
stos
ja
lea
imul
or
lds
ret
aad
adcb
cld
dec
mov
inc
stc
aaa
mov
sub
adc
adc
fldl
loop
cmpsl
call
ja
pop
push
xchg
jbe
aaa
xor
sub
or
sahf
aad
xchg
in
cld
mov
xor
mov
aam
dec
pushf
cld
les
and
icebp
xor
dec
insl
mov
xchg
xor
mov
xor
mov
adc
mov
cmp
dec
mov
call
sbb
jmp
fwait
imulb
imull
shr
inc
cs
mov
adc
cmp
push
je
stc
add
cmp
push
cmp
push
adc
jmp
or
pop
push
and
sub
repz
push
jmp
mov
into
iret
inc
sbb
and
or
jmp
test
lret
dec
hlt
jg
ds
sbb
int
mov
jns
out
mov
je
jge
push
mov
or
xor
je
add
insb
sbb
loopne
jp
or
repnz
add
fiadds
popf
xchg
outsb
loopne
jge
pop
out
inc
adc
push
call
mov
pop
inc
adc
out
cld
ja
mov
and
mov
jge
push
outsb
and
icebp
mov
or
or
mov
std
add
push
ja
orl
mov
and
rclb
jg
push
pop
inc
or
dec
pop
ds
sub
dec
lods
adc
jp
xchg
cmpsb
adc
js
or
inc
sbb
out
xlat
push
mov
fwait
cmc
or
mov
mov
mov
fneni(8087
lret
cltd
and
pop
sbb
insl
mov
insb
and
subb
sbb
inc
adc
dec
out
aas
sub
mov
adc
aad
jp
stos
cltd
mov
bound
push
inc
pop
popa
cwtl
xor
adc
dec
aas
sbb
inc
into
jne
lock
pop
mov
je
aaa
sahf
adc
and
stos
movsb
lret
adc
dec
adc
leave
test
mov
sbb
ret
and
repnz
mov
xor
or
sbb
aam
jge
cmpsb
js
mov
mov
xchg
adc
sti
xchg
js
xor
mov
jmp
cmp
inc
dec
pop
add
popf
mov
ret
pop
sarb
add
fs
sub
push
jl
jge
outsb
repz
call
cmp
push
jne
les
push
int
shl
sbb
mov
fidivrl
aad
test
adc
xor
es
sub
popa
cmp
push
fdivl
loope
aad
sbb
xor
push
push
lods
ret
xchg
pop
fstl
notl
sub
rcrl
pop
add
and
adc
ret
pop
cmc
leave
mov
sub
mov
push
test
aaa
sti
push
or
mov
imul
addb
sub
iret
int3
bound
std
xlat
inc
mov
pop
fiaddl
mov
xchg
push
or
aad
rcr
add
test
inc
les
sbb
push
add
jmp
loope
mov
and
xchg
cmp
movsb
hlt
lds
arpl
stos
ficoml
add
or
cli
hlt
pushf
mov
imul
add
mov
push
sbb
pop
pop
adc
xchg
mov
cltd
mov
xchg
push
pop
and
cmpsb
stos
shr
in
adc
stc
cmp
nop
cltd
mov
popf
andl
out
inc
movl
mov
jnp
pop
ds
push
nop
sbbb
dec
stos
mov
or
shrl
mov
data16
out
pushf
arpl
sbb
gs
dec
bound
icebp
rcll
add
daa
repnz
subl
enter
add
repz
jne
push
xor
repz
cmp
or
jno
es
sahf
pop
insb
adc
int3
pop
inc
mov
loop
popf
mov
push
dec
add
sub
sub
push
push
adc
sbb
aad
push
aaa
cwtl
out
sub
dec
and
mov
testl
lret
mov
inc
mov
and
jmp
mov
or
or
push
push
jg
pop
insl
pop
xor
iret
mov
push
sub
jge
lds
ret
mov
les
stc
lods
inc
mov
loope
fadds
jne
out
and
and
add
jns
popf
jmp
loop
popf
xchg
scas
jae
lods
into
iret
andl
lcall
inc
dec
in
rorb
dec
insb
insl
pop
pushf
enter
pop
lods
mov
add
cmp
shlb
loop
add
inc
mov
mov
xchg
out
mov
insl
cmp
adc
jb
out
and
mov
fisttpll
popa
repnz
adc
add
out
push
sbbb
sti
stos
dec
popa
aad
sbb
out
and
dec
int
mov
in
add
fcmovnu
add
xor
sbb
add
loop
inc
outsl
lock
imul
out
adc
dec
jno
lahf
int3
jae
or
pop
push
ror
imul
jno
rol
fdivr
pop
push
jg
int
sbb
xorb
insb
add
enter
push
bound
mov
fnsave
or
sbb
and
sbb
add
ret
xchg
mov
push
incl
lds
in
ret
cmc
mov
insb
mov
addr16
out
iret
decl
pop
loop
insb
xchg
mov
popl
sarb
xchg
xchg
mov
lods
and
cmp
push
adc
subb
fidivl
shrl
mov
outsl
sbb
dec
out
push
cmp
aam
cmp
sub
icebp
in
and
ljmp
push
jle
ret
mov
mov
jmp
insb
mov
or
add
jle
push
add
cltd
adc
xchg
out
in
icebp
test
loope
lea
sbb
push
adc
xchg
dec
sub
mov
movsb
add
and
loope
popf
jmp
lret
fists
pop
or
mov
cwtl
insl
call
cs
sarb
lock
xchg
aas
fsubs
dec
inc
xor
and
daa
negl
adc
or
fimull
inc
jmp
fsin
arpl
inc
push
mov
mov
dec
cmpsl
sti
dec
fistpll
out
push
mov
sbb
dec
clc
imul
add
push
mov
push
sbb
fcoms
daa
outsb
sti
xchg
and
stos
rcll
mov
jg
fistps
inc
aas
xchg
sub
add
sarl
mov
xchg
mul
add
loopne
fidivrs
mov
sub
imulb
lods
push
orl
inc
lret
ss
xor
or
adc
xor
lcall
cmp
mov
jne
out
adc
push
addr16
cltd
lods
sbb
fidivrl
into
adc
adc
adc
push
pop
or
aam
or
daa
js
loop
dec
add
add
mov
add
addr16
fnsave
sbb
cmp
out
mov
push
fbstp
push
orb
or
shlb
mov
dec
xchg
jne
data16
cmpsl
mov
arpl
adc
rorb
js
movsl
xor
fcomps
ss
loop
lret
data16
mov
adc
add
push
pop
mov
out
clc
cmp
xchg
add
arpl
lret
in
or
xlat
mov
and
and
jp
jne
mov
pop
push
cld
pop
test
push
xorb
inc
add
ds
stos
mov
aaa
sbb
leave
lret
xchg
ret
xor
fdivs
stos
xchg
or
xchg
cmpsb
add
cltd
ss
xchg
iret
add
and
adc
xchg
and
xlat
cwtl
pop
pop
testb
outsl
arpl
stc
hlt
cmc
arpl
outsb
push
inc
pop
add
add
mov
aas
jae
filds
cmp
stc
js
sti
stos
or
insl
fbstp
xor
adc
mov
daa
scas
jecxz
add
adc
mov
inc
mov
inc
ret
xchg
or
or
dec
or
cs
pop
adc
jno
les
clc
ljmp
dec
cmp
or
sti
push
pop
push
repz
insl
idivl
xchg
inc
fnstenv
mov
and
or
gs
and
sbb
lretw
shlb
outsl
aad
add
mov
nop
and
jb
or
enter
leave
lahf
outsb
cmpsl
into
adc
add
pxor
cld
push
mov
sbb
fsubl
test
jmp
addl
out
cld
dec
xor
inc
xor
push
bsf
adc
jecxz
mov
push
or
bound
in
mov
int
lods
int3
bound
push
sbb
out
xchg
or
decb
aas
inc
icebp
loop
mov
sahf
inc
mov
ficoms
mov
scas
insb
adc
es
adc
jp
xchg
cltd
push
cmc
aam
mov
repz
adc
in
jne
mov
sahf
and
add
push
repz
ffreep
sbb
cmp
sbb
sar
add
cmp
faddl
and
or
dec
jb
adc
fwait
dec
clc
aam
sti
adc
add
repz
add
cmp
xor
mov
fcoms
or
inc
lds
fdivs
out
sbb
je
test
and
mov
icebp
out
lods
rolb
push
jne
mov
les
lcall
sub
adc
or
inc
icebp
mov
mov
daa
add
mov
xor
jle
adc
ss
fwait
pushf
jl
daa
or
mov
push
pushf
fimull
mov
imul
das
push
xchg
mov
rcll
pop
dec
push
push
cmp
or
fwait
dec
fs
stc
cwtl
xchg
movl
aas
jmp
out
mov
mov
scas
and
or
ss
mov
je
push
inc
ds
mov
dec
sbb
dec
sarl
xchg
lret
jae
jo
mov
push
andb
xchg
addr16
lret
out
jp
dec
call
call
loope
cmc
add
mov
xor
aaa
jbe
aaa
fwait
push
test
movsl
in
fxch
imul
mov
repnz
into
pop
sub
inc
push
fbld
jne
mov
cmp
movl
mov
iret
push
daa
int
out
aaa
adc
stos
inc
out
mov
xchg
loop
shlb
fisubrl
xchg
aam
hlt
adc
je
mov
lea
iret
xlat
loopne
loopne
push
mov
std
dec
popf
repnz
leave
add
insl
insl
mov
out
scas
cmp
pop
add
xchg
xchg
xchg
jmp
imul
scas
shrb
icebp
inc
outsl
xchg
dec
mov
pop
inc
mov
pop
je
out
pop
inc
fs
adc
cmp
pop
out
add
es
in
insl
repz
cmpsl
insb
mov
xor
mov
pop
mov
sbb
xor
add
pushf
jl
cmp
mov
shlb
dec
cwtl
or
mov
xchg
jns
sbb
mov
out
in
cli
cld
cwtl
dec
xchg
in
cs
sbb
push
jns
mov
pop
sub
fistpl
cmp
xorb
repz
cmpsb
push
or
mov
mov
insl
test
loope
js
lods
xchg
inc
aam
lret
aam
xorl
aaa
xchg
lods
mov
mov
out
xchg
addr16
xchg
mov
mov
jo
inc
xchg
inc
stos
push
xor
addr16
daa
lods
out
out
adc
or
xor
add
ret
call
xor
sub
cmpsb
jo
jns
scas
in
out
cmpsl
fisubrs
lds
popa
hlt
add
adc
inc
fwait
xchg
cmp
mov
nop
les
cmp
ret
stc
divl
pop
xchg
sti
int
and
push
pushf
or
lret
rorl
cmp
adc
decl
add
dec
orl
push
ja
cmc
out
int
adc
call
and
xor
orb
sub
jo
js
and
clc
addr16
sbb
mov
scas
ret
loop
pop
outsl
adc
cmp
fcoms
adc
in
add
daa
popa
mov
loopne
sbb
sti
inc
cs
or
out
xchg
jbe
adc
out
lret
lea
loope
sbb
mov
push
jg
mov
cmp
repz
rcrb
icebp
popa
fcoml
mov
rcrl
sub
fsubs
arpl
rcl
push
cs
mov
cmc
sbb
or
add
xor
cli
fmul
mov
divl
bound
repz
adc
dec
lock
orb
in
add
aam
pop
fidivrs
rcll
enter
jge
out
fiaddl
nop
adc
mov
ficoml
jo
and
cltd
xor
jae
push
jmp
cmc
pop
loop
rcrl
jmp
mov
pusha
in
sti
jle
cmc
out
jmp
dec
push
xchg
cwtl
jl
inc
mov
arpl
add
jmp
jmp
mov
mov
jp
into
push
xor
adc
outsl
inc
jmp
push
sub
sub
cli
mov
mov
sub
xor
int
iret
sub
mov
int3
fdivl
addb
in
fsub
and
add
or
movsb
stos
out
rol
xor
push
pop
scas
cmp
jle
xor
sub
or
fcmovnb
nop
in
cmpsl
add
add
jne
adc
outsl
sahf
stos
inc
out
cmp
sbb
xor
int3
outsb
test
cmp
imul
jle
dec
jae
call
out
jmp
adc
lret
fisttpl
mov
in
shll
cld
jl
adc
inc
pop
jp
in
add
and
mov
aaa
dec
add
dec
jns
movb
xchg
leave
in
pop
lea
out
mov
add
cmpsb
jns
js
push
and
out
cmp
loop
out
inc
movsl
fwait
pop
scas
push
and
mov
ds
rol
pop
adc
pushf
cmpsl
fcompl
insb
popa
leave
xor
movsb
dec
lea
out
mov
add
push
jecxz
shll
popa
orb
push
cltd
mov
rclb
rcrl
xor
jle
and
je
adc
sti
out
dec
and
pop
xor
lds
stos
cltd
mov
scas
jnp
jmp
jns
sbb
and
lds
pop
stos
sbb
fcomps
in
lds
mov
mov
in
push
nop
fsubrp
mov
iret
subb
and
xchg
mov
pop
xor
mov
ds
cmp
mov
mov
movb
stos
xor
push
cmp
inc
ljmp
inc
cmp
shrd
inc
shll
rclb
xor
or
cs
push
call
jle
inc
test
int
ds
push
mov
adc
jnp
and
movsl
mov
cmp
push
aaa
lea
sbb
jp
add
jmp
cmc
xchg
jbe
scas
jecxz
js
inc
fidivrs
pushf
cld
mov
sbb
in
enter
inc
or
loopne
pop
mov
dec
inc
xchg
aas
insb
lcall
cmc
cli
aaa
pop
sub
in
cmp
adc
and
daa
mov
mov
sbb
mov
ds
jns
xor
add
inc
movsb
lret
dec
dec
jnp
or
add
xchg
jle
outsb
iret
jecxz
or
jl
lds
ljmp
push
push
idiv
test
jbe
ret
sbb
jno
test
stos
or
das
cmp
test
cs
js
repz
outsl
roll
add
add
mov
pop
adc
cmp
shrb
jo
aas
mov
call
adc
mov
cmpsl
int
mov
jne
inc
in
lret
imul
jp
insl
sbb
push
negl
adc
out
testb
iret
nop
ficoml
cmpl
mov
jo
sti
rclb
xlat
test
call
inc
cmovg
mov
sahf
arpl
pop
cmp
pop
adc
bound
int3
sti
dec
push
adc
inc
dec
lret
add
cld
shlb
sti
sahf
mov
loope
jmp
loop
xchg
lret
fistpll
loopne
push
jmp
pop
fildl
insb
ret
pop
ja
rcrl
aad
push
testb
inc
mov
push
bound
iret
sbb
out
nop
push
sbb
pop
inc
and
ret
cmpps
jns
iret
mov
rol
dec
push
rcr
sbb
outsb
inc
iret
testb
adc
inc
sbb
sub
inc
push
sbb
in
add
popa
lcall
sub
sbb
xor
adc
scas
cmp
and
sub
and
test
andl
js
mov
push
dec
sbb
sbb
popa
sahf
mov
or
mov
mov
add
inc
ljmp
xchg
dec
fistpll
xchg
mov
ja
test
push
loop
fsqrt
aam
stos
sub
sub
rorl
lcall
or
gs
jbe
lret
xor
lea
ss
adc
dec
or
adc
add
xchg
in
jp
push
or
out
and
jecxz
jle
dec
adc
and
stos
lcall
iret
add
adc
lods
shl
fsubrp
jnp
inc
insb
sub
cmp
adc
xchg
fisttpll
test
inc
push
addr16
addb
and
jmp
xorl
xchg
cwtl
add
inc
roll
repnz
xlat
lods
xchg
fldenv
sub
xchg
hlt
sub
je
sbb
mov
mov
lret
nop
inc
cmpsl
push
shlb
and
mov
das
adc
shrb
xchg
cmp
mov
sbbb
jmp
rclb
adc
mov
repnz
pushf
stos
push
pop
mov
scas
xchg
stc
jecxz
mov
xchg
movsb
mov
in
ljmp
push
dec
jno
nop
repnz
lcall
sbb
inc
jbe
xchg
ret
push
dec
mov
xor
mov
loope
iret
add
test
daa
xlat
jecxz
bnd
and
push
and
jle
xchg
adc
mov
add
jmp
ret
push
inc
into
sub
roll
adc
loopne
jmp
gs
sub
in
fstp
jl
cwtl
jae
lods
ljmp
mov
xor
sbb
test
loop
jmp
xlat
enter
jle
and
popf
and
dec
shrl
jmp
add
fwait
sbb
and
jno
mov
cld
add
xor
sbb
in
out
insb
in
push
daa
mov
push
jmp
mov
jo
insl
into
mov
push
mov
adc
sbb
and
adc
mov
dec
add
mov
les
mov
xor
nop
out
jbe
fdivr
jmp
aad
sahf
or
or
enter
daa
xchg
insl
xchg
sbb
push
pop
ror
out
cmc
sbbb
jae
jae
ljmp
cltd
pop
push
in
mov
jg
gs
aad
mov
inc
call
flds
or
pop
fstl
pushf
mov
out
fmuls
lea
daa
fistl
or
or
ss
pop
dec
xor
leave
cmp
addr16
xor
cltd
gs
xor
mov
sbb
jo
push
fadd
inc
scas
add
sahf
stc
fs
sti
xor
adc
jnp
ja
adc
divl
mov
cmp
or
repnz
adc
mov
xor
in
cwtl
cmp
cld
mov
in
adc
aas
pop
fs
cmpsb
pop
mov
xor
pop
fildl
cli
cmc
enter
or
pop
or
arpl
rclb
add
dec
cmp
movsb
or
sub
mov
sbb
aad
into
adc
jbe
icebp
pushf
out
sbbb
sti
add
pop
sti
mov
sarb
movsb
sub
push
cmp
orb
add
push
test
mov
fdiv
mov
scas
xchg
lcall
out
roll
out
mov
jbe
movsl
pop
sbb
cltd
popa
push
aaa
repz
or
outsb
jmp
xchg
inc
iret
insl
stos
push
xlat
into
or
loop
outsl
pop
mov
scas
cmp
popf
faddp
scas
in
adc
ljmp
insb
js
mov
push
sub
mov
sub
sub
adc
or
adc
cli
test
insl
push
int
push
mov
sbb
or
call
dec
or
test
push
loope
sub
repnz
adc
or
out
sub
movsl
add
movsb
add
fs
repnz
les
adc
lret
leave
cmc
dec
popa
push
or
adc
or
lods
insl
in
push
cltd
dec
push
fwait
sub
mov
xor
xor
popa
adc
test
or
je
fsubrl
or
xchg
or
xchg
bound
mov
and
add
insb
jns
int
add
and
fisttpll
insb
add
xchg
ds
sahf
ret
pop
sbb
insl
or
push
and
jge
pusha
or
dec
mov
adc
leave
stc
jle
aad
or
jp
call
sub
sbb
popf
rolb
icebp
jp
dec
lods
fstpt
mov
jbe
mov
in
xor
sub
rcll
inc
dec
call
rorb
insl
pop
out
aas
mov
mov
or
clc
xchg
aad
std
mov
pop
imul
xchg
clc
xor
fsubrs
pop
out
sbb
jmp
pop
or
push
inc
andl
or
adc
mov
dec
pop
fdivrl
orl
jmp
in
mov
xchg
outsb
dec
out
lahf
adc
cmp
iret
sbb
int
int
popf
decl
mov
je
fiadds
stos
rcrl
mov
test
daa
cld
mov
jmp
xchg
adc
dec
sti
adc
or
lods
mov
rolb
and
mov
or
xchg
or
ss
sahf
sub
or
iret
mov
push
add
xchg
ja
sub
popf
pop
cmp
xchg
in
or
xchg
cmp
loopne
xchg
add
movsl
and
and
out
outsl
adc
or
mov
fsubr
in
cmp
mov
pop
or
push
ds
lods
xor
loopne
jmp
fmuls
frstor
or
pop
sub
shrl
xor
pop
dec
movsl
lret
mul
filds
in
mov
in
lods
aad
addr16
or
dec
add
or
loop
test
testb
mov
fmull
popa
int3
cli
cmp
xor
xchg
jae
test
pop
dec
int
xor
push
mov
cwtl
add
adc
or
inc
jp
loop
flds
lret
push
cmpb
mov
jo
in
or
inc
pop
lea
movsl
sbb
push
cmp
or
pop
clc
add
or
xchg
sarb
push
aam
or
sub
mov
imul
outsl
call
pop
adc
rep
xor
out
dec
or
or
scas
aaa
out
jle
lcall
jbe
push
sbb
jge
push
xlat
dec
stos
jb
push
out
push
out
sbb
orb
fisubrl
cltd
cmp
rcrl
inc
cmp
dec
mov
mov
add
add
adc
jno
repz
mov
mov
sub
movsl
popa
inc
sub
ds
int3
mov
insb
out
xor
mov
ja
or
pusha
fwait
icebp
cld
or
sbb
jns
mov
pop
bswap
std
sub
lods
sub
xchg
xchg
fimull
dec
aad
cmpsl
add
scas
sbb
lahf
add
sub
push
mov
inc
pop
inc
xor
adc
sub
popf
loope
cmp
icebp
std
das
cld
cltd
movsl
lret
cld
xchg
xchg
psubq
out
int3
hlt
and
sbb
push
mov
out
jge
push
pop
and
pop
lret
fsubl
or
pop
faddl
xchg
sub
xchg
cli
test
lahf
loopne
adc
push
mov
adc
insl
mov
cmc
out
push
repnz
fwait
lds
add
rcl
jecxz
xchg
mov
out
and
pop
in
pop
sub
ficoml
jne
jmp
ss
stos
sbb
jns
inc
negb
adc
xchg
jno
and
xchg
jo
fwait
push
xor
pop
outsl
aaa
ret
aad
pop
push
add
xor
sub
js
test
ret
out
mov
int
push
and
lock
sbb
fs
sbb
xor
pop
rcrb
ja
jb
pushf
repz
dec
inc
lahf
out
push
adc
ret
push
pop
aam
xor
add
cmp
mov
jne
xchg
ret
scas
imul
mov
pop
scas
cmp
mov
mov
add
xchg
mov
or
sbb
sahf
bound
xor
out
push
xorb
insl
cmp
mov
rorl
daa
pop
and
or
or
and
es
pop
cmp
push
repnz
or
or
pop
loop
jmp
pushf
cmpl
mov
and
stc
or
mov
test
test
push
xor
mov
leave
je
xchg
cmp
xchg
bound
outsb
xor
push
mov
xlat
popa
fdivrl
test
cmc
xchg
push
hlt
push
lods
mov
fs
aad
xchg
adc
iret
lock
sub
out
push
jnp
cmp
pop
mov
mov
incb
mov
cs
add
pop
fs
jecxz
mov
fwait
scas
sbb
stc
sub
mov
sbb
dec
insb
xor
mov
cmp
mov
bnd
push
mov
push
idivl
cltd
or
sbb
xorl
das
gs
fiaddl
pushf
adc
pushf
add
xor
iret
push
int
rorl
and
mov
adc
mov
fs
imul
jb
sbb
push
int
shl
enter
mov
push
clc
cs
mov
outsl
add
sub
cmp
adc
in
mov
enter
add
int
add
pop
adc
lea
stos
xchg
and
clc
mov
and
sub
cmpsb
in
pop
cmp
mov
xchg
pop
ja
dec
xor
lds
std
repz
mov
xor
adc
scas
mov
es
adc
mov
enter
addl
and
pop
adc
shrb
and
movsb
or
imul
aaa
out
pop
sbb
std
das
xor
xor
xchg
into
int3
testb
int
add
dec
das
sub
in
xchg
xor
decb
add
push
and
push
divl
xor
dec
pop
stos
push
rolb
or
sub
sub
out
adc
or
adc
xchg
or
jg
mov
mov
adc
sub
xchg
lret
sbb
ret
pop
cmp
push
or
add
inc
xlat
aam
test
bnd
jnp
push
pusha
push
pop
push
mov
out
outsl
arpl
sbb
xchg
mov
ret
shl
nop
add
jp
repz
add
xchg
cmc
lret
jb
sbb
fcmovnbe
pushf
and
adc
inc
cld
pop
add
and
lret
and
jns
lahf
jle
cvtpi2ps
mov
bound
push
test
in
adc
xlat
dec
iret
xchg
cmpsb
cmp
dec
inc
lcall
jne
sbb
jo
cmp
out
out
add
jne
orl
inc
or
push
dec
sbb
adc
mov
int3
imul
in
jp
mov
or
lods
jge
or
dec
jns
sti
int3
and
aaa
loopne
nop
adc
add
jne
dec
ja
or
roll
dec
int
icebp
jle
jo
xchg
or
mov
ja
inc
add
sar
or
into
adc
insb
pop
movsb
push
push
or
aaa
mov
outsl
xor
sub
adc
pop
pop
and
enter
xor
pop
mov
aam
mov
or
std
xchg
mov
out
or
cwtl
push
push
ds
mov
lret
sbb
push
xorl
mov
push
pop
mov
fisubrl
pop
test
jb
pop
and
arpl
mov
pop
es
jne
scas
or
inc
xlat
mov
shll
mov
push
lods
hlt
adcb
mov
or
rolb
inc
popa
pusha
inc
ror
or
mov
sbb
sub
and
adc
sub
jmp
add
sbb
pop
mov
or
mov
pop
dec
mov
pop
add
lahf
popf
add
andl
jmp
or
mov
jp
mov
loopw
mov
int
ss
subl
jge
int3
dec
pop
in
neg
xchg
sub
push
sub
addr16
stos
scas
mov
inc
call
xchg
cwtl
inc
mov
in
push
sbb
jae
in
or
ret
mov
in
dec
sbb
lds
dec
xor
or
out
sub
dec
in
mov
pop
pop
lds
or
jge
push
test
cmp
icebp
movsl
fwait
adc
or
jbe
or
clc
testb
cmc
inc
ficoml
adc
sbb
dec
imulb
jle
add
insb
push
lahf
push
mov
and
xchg
sbb
xor
or
adc
pushf
add
and
cmp
dec
test
les
inc
adc
sub
pop
pusha
sub
and
fnstenv
and
repnz
and
push
jl
or
cmp
mov
or
xchg
push
lea
ds
ror
and
mov
jecxz
or
add
sbb
jg
movsl
pushf
push
dec
cmp
add
push
sti
dec
orl
test
pop
lock
mov
or
jp
and
or
mov
cmc
mov
fbstp
or
daa
cs
or
das
loope
pop
or
xor
lods
xchg
dec
lock
fdivp
into
in
sbb
out
js
jg
add
jbe
aam
or
mov
cld
dec
movsl
sbb
dec
or
jge
jge
or
mov
mov
sbb
pop
jns
gs
dec
lock
imul
cmp
jge
mov
sarl
inc
inc
daa
jns
cmp
and
mov
cmp
dec
push
fimull
adc
mov
dec
rolb
pop
sub
mov
or
pop
stos
jmp
mov
push
or
or
incl
ret
out
mov
jno
jg
sahf
out
pusha
jmp
scas
push
lods
adc
and
stos
pop
pop
push
hlt
adc
cmp
add
es
adc
xor
int3
in
cmp
xchg
repnz
imull
sbb
mov
outsl
je
or
out
inc
ljmp
dec
out
pop
or
call
mov
cmpsb
add
xor
dec
rorl
test
std
or
cs
ljmp
sti
lods
and
or
sub
xchg
and
loope
outsb
sbb
add
scas
adc
xchg
or
mov
in
sub
mov
lcall
stos
sbb
inc
jecxz
or
sbb
or
xchg
xchg
xor
mov
pop
or
lods
push
push
int3
or
cmp
and
or
and
int
mov
movl
push
mov
pusha
mov
dec
out
mov
mov
adc
pop
insb
popf
xor
iret
test
jbe
das
mov
int
pop
adc
or
xlat
mov
pop
or
jp
sub
fsub
ja
cs
add
sbb
sub
mov
cmp
inc
in
push
lcall
pop
pushf
dec
cmp
sbb
or
das
repz
in
test
sahf
or
lock
addl
test
and
xor
jb
aad
jp
shll
cmc
cmp
test
sahf
cmpsb
cmp
xchg
jmp
or
aad
shrb
sbb
mov
or
fwait
or
daa
test
sub
dec
push
jge
dec
xlat
adc
and
cmp
push
mov
outsl
and
std
cld
into
sub
pop
lahf
xchg
popa
aas
or
outsl
icebp
daa
cmpsl
or
repnz
rorb
xchg
cs
and
inc
mov
or
mov
cmp
lods
shr
mov
fnstsw
pop
or
loope
icebp
stos
or
sub
adc
sbb
mov
dec
push
mov
in
sbb
adc
xchg
pop
gs
mov
xchg
flds
push
or
loopne
and
aam
sub
data16
movsl
adc
push
scas
lods
pop
pop
cmpsl
adc
and
icebp
cmp
jbe
ja
jge
add
cmpsb
insl
shll
int3
sbb
sbb
pop
movsl
push
push
in
or
mov
jge
and
icebp
repz
ret
or
and
pushf
mov
and
mov
je
sbb
sub
sbb
mov
dec
addr16
xlat
and
adc
aaa
lds
incl
stc
out
or
and
mov
push
test
out
mov
fiadds
mov
sub
sub
dec
and
dec
mov
and
add
pop
movups
add
popa
add
xor
adc
and
pop
insb
push
sbb
or
sbb
xchg
lods
or
outsl
hlt
xor
cwtl
or
sub
or
jae
dec
out
inc
push
sbb
outsb
jb
pop
lods
lret
lods
adc
jae
cmp
cld
cmpl
mov
xor
iret
fldl
inc
or
pop
add
shll
adc
sbb
or
xchg
outsl
not
sbb
sti
mov
iret
push
or
cmpl
or
cltd
mov
sub
rcrl
xlat
lods
mov
cli
push
scas
jae
or
sub
mov
mov
jb
lea
pushf
or
xor
dec
dec
movsl
jo
in
call
dec
filds
rcr
or
popf
pop
inc
or
int
push
adc
or
sbbb
and
hlt
ret
or
xor
std
movups
xchg
cli
mov
or
sub
test
xchg
in
fadd
jecxz
fdivrl
negb
js
repz
gs
xor
lods
jbe
test
xchg
xchg
data16
or
cmp
push
sub
add
adc
popf
sbb
mov
setno
push
out
sahf
pop
pop
lea
sbb
or
xor
rcll
and
adc
push
jns
gs
add
fldl
jmp
adc
jg
sub
iret
int3
sbb
loope
adc
dec
lods
daa
fmul
mov
mov
ret
xchg
or
xchg
inc
pop
mov
xor
popf
add
mov
sub
push
in
inc
pop
sbb
shll
or
jecxz
mov
add
into
ja
or
lods
cli
pop
repz
filds
aam
adc
xchg
pop
xchg
or
jge
mov
gs
xchg
decb
jns
adcl
push
imul
rorb
fisttpll
insb
repz
xchg
jge
push
fsubl
push
mov
rcll
repz
test
out
sarb
aas
push
pop
and
nop
push
adc
jno
and
into
aaa
cs
cltd
addr16
insb
and
and
repnz
sti
imull
pop
lahf
adc
decl
adc
loopne
ficompl
jle
call
inc
aad
test
subb
pop
sti
mov
jne
xchg
jnp
push
jb
cwtl
rclb
aad
add
pop
pop
insl
jp
jno
lahf
sbb
jl
mov
mov
dec
out
insl
push
dec
sbb
cs
dec
int
lock
push
pushf
push
mov
or
jl
mov
adc
push
pushf
sbb
cmp
sub
iret
mov
inc
out
dec
mov
jb
fidivrs
dec
and
xor
inc
lret
mov
int
pop
push
jno
ja
out
in
int
mov
test
mov
rcl
pop
jnp
mov
dec
adcb
sbb
add
sbb
or
push
mov
imul
les
addr16
lea
mov
test
iret
inc
aad
inc
jl
and
inc
mov
std
popa
dec
cwtl
pop
sbbb
js
xchg
nop
jo
and
outsl
add
and
sbb
jne
mov
andb
mov
push
pop
xlat
push
shrb
and
dec
pop
bound
ret
mov
dec
xor
or
xchg
dec
sub
out
cwtl
addr16
mov
cltd
sti
mov
mov
xchg
inc
leave
scas
push
ret
push
mov
sub
cs
stos
movb
dec
xor
mov
out
mov
insl
daa
enter
repnz
jae
pop
push
adc
ret
fidivl
inc
sbb
or
jmp
adc
stc
xchg
cmpl
xchg
cltd
bound
nop
outsl
jnp
mov
xor
adc
test
js
pop
and
pop
lret
add
repz
cmp
jmp
xor
cmp
adc
jl
out
mov
push
and
or
or
or
out
out
push
lds
xorb
or
sub
jns
mov
mov
out
out
shll
lds
adc
mov
mov
mov
sbb
pop
mov
xor
xlat
adc
sbb
out
xchg
and
pop
ds
mov
xchg
hlt
aaa
cmp
push
lea
stos
pop
out
leave
xor
cmc
adcl
inc
lods
scas
mov
push
mov
dec
jge
aas
cs
jmp
adc
or
fdiv
xorl
jno
inc
push
cmpsb
fisttpl
push
stos
scas
and
sub
push
cltd
inc
int3
daa
popf
inc
xor
jne
mov
xlat
or
mov
ja
push
leave
jl
or
sbb
sarb
mov
adc
xchg
cmc
movsb
and
lret
std
adc
sub
stos
xchg
xchg
sbb
stc
test
lea
fildl
stos
in
mov
jno
fmuls
pop
xlat
fsubs
stos
shrl
sub
jb
xchg
outsb
nop
dec
mov
adc
int3
mov
jbe
out
dec
jl
ret
cltd
push
xchg
scas
into
ljmp
rol
shlb
out
pushf
sub
xchg
sbb
scas
mov
daa
into
ss
fstl
mov
iret
lret
shll
mov
aad
sbb
jns
lret
aam
stos
xor
inc
push
aas
push
push
adc
cmpb
mov
cmc
mov
cmp
gs
leave
push
popa
pop
xchg
add
mov
adc
lods
mov
lds
adc
mov
test
mov
nop
test
xchg
das
xor
mov
cmc
sbb
stos
es
das
dec
inc
andl
stos
xor
jb
rorl
xor
test
lock
inc
dec
push
in
daa
inc
mov
lret
inc
popf
jne
mov
xorb
test
pushf
sub
insl
arpl
or
popa
scas
sbb
in
xchg
pop
mov
mov
sbb
sahf
movsl
repnz
push
and
repnz
loop
jle
aad
and
push
jnp
dec
idiv
adc
ret
sub
mov
cmp
faddl
xchg
rorb
jb
test
notl
jne
mov
imul
dec
fwait
shlb
sub
or
or
into
cmp
clc
shl
sbb
subl
cmp
aad
push
mov
lods
lret
dec
push
pop
cli
and
inc
pop
mov
repz
mov
add
rcll
mov
or
sarl
roll
dec
ret
sbb
icebp
cld
mov
sarb
in
mov
sbb
xchg
popa
add
int3
test
insb
out
jne
minps
repz
push
fimuls
adc
daa
sbb
ret
lcall
xchg
add
dec
pop
cwtl
adc
xor
ret
xchg
shrl
mov
mov
ss
fdivl
sbb
push
or
and
xchg
pushf
mov
xor
xlat
aad
roll
outsb
test
adc
lret
shl
negb
xor
or
dec
cld
or
push
insb
xor
jbe
mov
jp,pn
pop
aam
addb
inc
sti
jg
cmp
cs
push
cmp
jns
inc
mov
add
cld
pop
pop
in
loopne
mov
sbb
add
adc
cmp
jmp
lods
or
inc
jmp
test
or
lret
inc
es
test
addr16
mov
pushf
loop
mov
rolb
mov
repz
dec
mov
mov
dec
cmp
cmp
cs
inc
sti
mov
fwait
xchg
ret
repz
cmc
push
xchg
fadd
adc
jne
popa
xchg
mov
push
mov
out
mov
pop
ret
sub
out
mov
jbe
jmp
mov
fimull
add
and
ja
pop
xor
aam
inc
add
loopne
push
sti
push
popa
jb
mov
out
addr16
mov
mov
cld
dec
add
mov
cmp
mov
les
das
stos
roll
jp
mov
fmuls
imul
xchg
insl
loop
mov
lahf
sbb
xor
outsb
call
into
mov
sub
stos
or
inc
inc
inc
xor
mov
mov
sbb
ss
movsb
clc
into
mov
fsubrl
idivl
push
or
cmp
cmp
icebp
xor
adc
or
pop
test
cltd
cmp
or
sbb
inc
lock
rcll
inc
cmp
mov
lea
or
xchg
addl
mov
sbb
decb
jae
mov
neg
fisubrl
add
jnp
dec
data16
incb
test
arpl
xor
xchg
cltd
scas
or
mov
data16
xchg
lods
cld
cltd
clc
or
inc
jno
insl
in
out
sbb
pop
cmp
in
into
in
xor
lea
push
xchg
and
repnz
test
addr16
add
or
push
decl
add
inc
or
arpl
or
sub
xchg
es
out
jmp
sub
gs
lret
pop
cltd
xlat
imul
sbb
data16
icebp
scas
push
and
int
jmp
arpl
jbe
loope
lods
outsl
add
loopne
cs
pop
cld
mov
jmp
jge
sub
ss
dec
popl
or
cmpl
ret
jae
mov
out
or
call
stos
rolb
cld
daa
outsb
or
adc
xchg
and
test
push
mulb
add
xchg
push
or
add
jo
shr
stos
pop
cmp
sub
xor
cmc
sbb
or
push
or
ja
lods
or
clc
add
jno
mov
push
adcl
sbb
pop
jb
cli
repz
jae
push
imul
leave
out
push
in
dec
in
mov
inc
inc
jle
leave
repnz
push
push
pop
out
push
lcall
xchg
xchg
push
lret
in
or
adc
jbe
or
jno
jb
sub
or
pushl
aas
xchg
xor
test
jp
test
and
or
arpl
lret
rcl
fldcw
jbe
nopl
mov
gs
or
je
pushf
scas
xchg
lahf
stc
mov
mov
sub
xor
outsb
dec
dec
lods
divb
push
and
fisttps
aaa
jge
xchg
shll
mov
repnz
notl
or
jle
pop
mov
jbe
inc
adc
aas
nop
repnz
bound
aad
data16
imul
loopne
dec
ret
rcrl
rcrl
fs
pop
es
prefetch
or
pop
fmull
or
jbe
in
std
mov
mov
pop
hlt
rcr
xor
jne
cmpsb
or
jno
das
imul
adc
inc
sub
push
popa
xor
or
or
sahf
mov
lods
in
fisttpl
or
and
idivl
or
sub
mov
stos
lahf
mov
iret
std
popa
jo
ficoms
cli
push
mov
mov
jl
xlat
rcl
xchg
es
test
lods
sub
mov
and
daa
scas
out
lea
pop
lret
sti
pop
leave
push
insl
sub
nop
adc
add
es
aas
lea
or
sbb
enter
insl
mov
clc
test
sbb
sub
push
sahf
pop
stc
or
mov
jno
jmp
test
and
add
popf
push
or
sbb
clc
pop
dec
or
jno
pop
push
popf
enter
stos
xchg
adc
hlt
rcrb
repz
ret
cmp
adc
adcb
movsl
fstps
xor
sahf
push
xor
xlat
sbb
mov
mov
les
mov
pop
lock
push
ss
roll
xlat
sbb
outsb
jp
imul
roll
out
fiadds
mov
fisubl
push
out
pushf
int
xor
sti
or
stos
sbb
or
add
lahf
or
inc
sti
outsl
inc
or
in
repnz
dec
test
nop
push
lret
sbb
sub
stos
or
mov
dec
pop
in
scas
or
mov
int3
repnz
imull
xor
cli
cmpsl
xchg
push
sbb
dec
das
or
xor
push
jmp
out
in
mov
imul
mov
jno
dec
inc
add
mov
xchg
push
adc
fldl
ljmp
mov
or
fmull
pop
mov
cmp
leave
inc
lods
fdivl
push
inc
mov
call
or
lret
inc
xchg
stc
or
mov
push
mov
daa
shrl
sbb
xchg
or
mov
pushf
adc
daa
push
out
inc
or
sbb
push
push
or
fldz
pop
and
out
aad
inc
push
in
lea
pop
aaa
inc
imul
rorl
loop
leave
stc
or
pop
xor
mov
jo
fistps
repz
imul
or
xchg
icebp
shlb
popf
lds
add
shlb
or
sub
cmpsb
or
lret
mov
sub
lods
push
inc
or
in
pop
fwait
jnp
cmp
mov
stos
je
lahf
mov
adc
imul
sub
cmp
mov
push
mov
bound
stos
es
or
pop
data16
cmc
in
mov
imul
ss
nop
les
ja
push
out
cmpsl
push
cld
add
outsb
or
mov
shll
sbb
stos
popa
or
jge
daa
jns
jp
cltd
mov
sbb
add
jle
or
mov
cmpb
add
xchg
or
icebp
insb
inc
shl
popf
mov
lea
push
dec
insl
dec
pop
mov
dec
mov
and
jo
sub
add
lods
or
or
repnz
xor
lock
shrb
pop
popa
mov
je
xchg
ret
gs
mov
push
adc
jl
out
test
and
shl
popf
insb
cmp
cmc
push
ffree
adc
orl
fdivrs
or
ret
mov
jne
lcall
dec
or
das
sub
and
add
pushf
or
pop
xchg
push
sub
dec
test
mov
dec
or
mov
mov
and
bound
push
xor
add
xchg
out
add
inc
or
mov
int
in
fdivrs
rep
ret
sbb
or
mov
xor
mov
push
cmpsl
int3
cmc
or
stc
scas
sbb
pop
movsb
int3
enter
adc
xchg
push
fildll
aas
adc
or
inc
pop
in
push
mov
add
cmp
cltd
xor
cmp
int
mov
sti
xchg
in
nop
add
add
sbb
adc
gs
push
sbb
rorl
or
call
clc
xor
and
leave
stos
jbe
cli
inc
js
cmpsl
in
xor
or
push
jo
js
sbb
adc
or
ljmp
or
mov
testb
or
sub
les
sub
fnsave
bound
dec
or
nop
push
in
adc
mov
xor
sub
lds
lods
dec
mov
cmp
sub
push
adc
int3
pop
repz
bound
adc
fadds
gs
ret
sbb
mov
jp
imul
aad
daa
lcall
ss
push
adc
stos
adc
jg
cltd
inc
xchg
aaa
frstor
xchg
jmp
mov
out
lods
fwait
lods
or
jns
pop
insl
out
and
xchg
mov
pop
jne
and
mov
pop
cld
out
out
jl
jnp
cmc
adc
int
dec
mov
xor
xchg
sub
mov
jo
iret
popa
mov
cltd
scas
push
xchg
lods
popf
mov
or
fsubl
cltd
xor
mov
xor
call
lea
test
jp
add
popa
push
mov
mov
cmp
fisubs
mov
pop
mov
adc
mov
aas
cmc
mov
test
repz
lret
sub
add
aad
loopne
push
out
sbb
inc
insb
ja
out
xchg
lea
insl
and
push
mov
mov
inc
lock
int3
rclb
mov
cld
jnp
test
sub
outsl
or
adc
jne
sub
sbb
pop
int
out
sub
push
cmpsb
add
mov
outsb
or
adc
sub
mov
pop
leave
cmp
ljmp
orb
in
addr16
lcall
cli
cmp
das
lcall
pop
popf
sti
jns
sbb
cli
jbe
jecxz
mov
test
or
inc
clc
sub
movsl
lods
inc
call
add
pop
ds
stc
loop
sbb
movsb
aad
stos
jbe
jnp
adc
push
out
push
fbld
sub
sbb
push
cli
iret
dec
mov
sahf
push
sbb
push
sbb
adc
add
xchg
add
push
les
lcall
or
add
lea
push
xchg
xor
into
sub
das
inc
add
out
jp
cmp
dec
arpl
pop
fiaddl
mov
jl
adc
jb
xchg
dec
outsb
cwtl
into
jno
jae
pop
in
adc
cmp
iret
popa
xchg
mov
scas
inc
ret
ret
mov
xor
nop
imul
std
push
int3
push
in
adc
cmpb
or
mov
inc
mov
push
bound
mov
addr16
mov
or
adc
fldt
es
inc
mov
or
and
cmp
sbb
mov
repz
add
and
aam
push
lock
sti
ljmp
mov
aad
adc
jmp
push
ds
add
xchg
pop
ret
pop
cltd
jmp
js
std
push
xchg
dec
out
inc
cwtl
jne
sbb
inc
movsl
je
xlat
fcom
daa
or
bswap
dec
cmp
add
adc
mov
inc
mov
xchg
fbld
inc
push
je
or
out
mov
add
repnz
lcall
cmp
test
enter
mov
repnz
sbbl
shrb
sub
inc
mov
ret
mov
ret
outsb
adc
or
ja
cmp
cmp
push
cmp
or
pop
or
sub
xchg
or
mov
int
or
in
mov
call
hlt
push
inc
ret
xchg
or
and
insl
xor
jbe
cmp
mov
mov
add
dec
pushf
and
adc
sbb
loope
scas
add
or
mov
jno
gs
jae
lret
sbb
or
cmpsb
pop
add
sub
add
dec
add
xchg
or
pop
sub
or
lret
dec
pushf
je
roll
cs
xchg
lahf
in
and
cli
push
lret
or
repz
scas
in
adc
mov
fimull
xor
aad
mov
insb
adc
ljmp
dec
dec
sub
ret
pop
mov
mov
mov
insb
sbb
xchg
aam
adc
inc
sbb
andl
fstps
dec
andl
push
lods
pop
adc
sbb
xchg
fnstenv
jbe
sbb
ret
loopne
lret
nopl
in
xchg
pop
jl
shrb
cmc
repz
and
xchg
dec
sbb
xchg
cmp
push
push
xlat
or
rolb
shrl
es
in
pop
xor
jle
push
ret
push
or
popl
mov
xchg
rorb
mov
jge
add
insb
xchg
mov
inc
out
mov
cmp
aad
outsb
or
pop
fiadds
lret
pop
pop
cmpsl
mov
fistps
loop
adc
roll
notl
andl
and
push
jbe
push
fcmovb
xchg
in
dec
out
jb
arpl
in
leave
out
aas
mov
dec
adc
adc
mov
cs
ret
data16
or
push
mov
and
xchg
addb
mov
mov
or
xor
or
push
sub
shlb
stos
or
ret
lahf
ljmp
push
les
xor
test
es
das
gs
repz
cmpsl
aad
je
mov
out
push
les
test
push
mov
ret
cmp
sbb
mov
js
rclb
sti
ret
enter
jl
call
inc
sbb
adc
sbb
jb
mov
fstpl
mov
cmp
and
add
xor
loopne
sub
out
xchg
mov
jnp
les
ret
push
mov
hlt
jl
aam
fwait
sub
faddl
pop
insb
ds
adc
lods
or
mov
out
icebp
lea
pop
xchg
push
add
out
jnp
repnz
dec
lods
xchg
mov
adc
jmp
xor
xchg
inc
mov
imul
xor
or
stos
out
adc
and
adc
sbbb
cwtl
mov
out
jmp
lret
mov
xchg
xchg
pusha
push
or
js
xchg
inc
bound
sbb
addr16
inc
pop
mov
xchg
cmp
adc
pop
sbb
add
push
out
testl
push
adc
ret
sub
jnp
cld
movsl
sar
inc
xlat
push
mov
xlat
fldt
add
push
push
shl
add
mov
mov
subb
push
sti
xor
push
rorl
outsb
cli
std
add
orb
aad
sub
pop
ds
or
mov
icebp
lods
movsl
adc
mov
arpl
outsl
daa
or
sub
xor
cmpb
aas
dec
dec
push
mov
fs
fdivr
or
or
outsl
cmp
adc
fwait
add
mov
and
dec
xchg
inc
mov
push
ficoml
xor
xor
mov
and
test
in
out
mov
sub
push
in
or
jge
into
push
pop
sbb
add
pop
repz
and
and
popf
outsb
inc
xchg
jb
in
les
lret
js,pt
pop
daa
jns
or
pop
cmp
nop
or
inc
out
or
dec
out
cmpsl
es
pushf
add
fimull
ja
adc
in
push
sub
push
dec
or
pop
or
std
dec
mov
imul
mov
lea
hlt
dec
pop
dec
ja
adcb
in
rolb
adc
push
into
or
hlt
cli
pop
lock
mov
mov
inc
fists
jl
mov
aas
int3
lods
fwait
mov
cmp
cmp
sbb
or
or
and
ror
cmc
inc
lock
adc
scas
adc
shrl
roll
jl
sub
lcall
adc
dec
adc
jg
pop
pop
inc
or
jmp
push
enter
lahf
jle
dec
in
or
std
push
sub
or
xchg
or
clc
pop
ss
addr16
mov
xchg
inc
mov
clc
dec
mov
xor
adc
fimull
xchg
and
into
mov
sbb
push
shlb
and
into
or
mov
mov
insl
inc
pop
xchg
sti
insb
or
pusha
push
dec
or
mov
in
mov
mov
popf
orl
test
or
jns
jnp
or
sbb
sbb
sbb
bound
push
jae
or
and
mov
or
aas
sbb
repnz
stos
jbe
sub
add
mov
xchg
stc
xor
dec
enter
cld
mov
mov
out
and
test
adc
lret
mov
pop
add
push
adc
addb
fisubrl
push
push
mov
mov
pop
fnstcw
jle
sub
sbb
sbb
mov
add
aas
sbb
mov
clc
in
sbb
or
popf
lahf
loopne
inc
pop
mov
cmp
aad
jb
jp
add
insl
pop
test
dec
jp
jp
fmull
and
jle
mov
sbb
loope
sbb
aad
push
loopne
js
insl
out
mov
add
clc
add
sbb
mov
push
popf
cmpsl
into
or
xchg
push
adc
push
fsubrl
add
jns
xchg
and
sub
andl
orb
xlat
icebp
or
into
rcrl
add
sahf
inc
xor
push
push
inc
cltd
loopne
fisubrs
dec
stos
sbb
sbb
cmp
jne
jle
lods
jno
fiaddl
cmc
daa
loop
sbb
shl
ret
xchg
adcl
pop
outsb
iret
push
jno
in
add
sub
push
sbb
cmp
inc
inc
outsb
inc
pop
inc
int
lods
or
xor
mov
mov
or
mov
lds
mov
inc
aam
ret
aad
sarb
pop
test
rcll
dec
test
push
add
mov
adc
jl
lods
pop
fisubl
nop
add
inc
or
aaa
mov
dec
fisubl
pop
jnp
cmp
adcl
aad
lret
pop
mov
sbb
mov
cltd
push
jle
or
and
mov
pop
subl
ret
jecxz
jmp
out
xchg
sbb
out
add
mov
jmp
int3
xchg
push
rcr
inc
adc
outsl
sbb
pop
sbb
addl
xchg
hlt
pop
add
popf
add
add
fsubl
ret
mov
add
mov
aaa
out
add
xchg
lods
push
xor
mov
cld
nop
into
cwtl
jmp
bound
mov
adc
orl
stos
pushf
adc
iret
stos
ss
lods
insb
int
push
dec
add
sbb
mov
int3
xchg
push
inc
faddl
hlt
fistps
push
dec
sti
scas
imul
jae
fstl
test
add
push
dec
pop
xchg
dec
mov
sti
fmul
push
and
repz
lea
xor
sub
lret
out
outsb
sbb
scas
in
addb
sbb
and
lea
mov
jnp
insl
sbb
xor
js
push
lret
push
push
xchg
fs
int3
std
call
mov
add
cmpsl
pop
add
xor
out
and
insl
or
fwait
pop
ljmp
fs
stos
stos
ljmp
cmp
cmpsl
mov
mov
les
xor
repnz
push
pop
shlb
add
mov
xor
adc
fsubrl
fdivrl
ror
test
mov
addr16
pushf
push
sti
out
test
fimuls
sub
pop
cmc
repnz
out
jbe
scas
mov
lcall
inc
sbb
lds
xchg
popa
test
fidivrl
inc
xor
pop
cmp
imul
push
scas
movsb
repz
jmp
aas
stos
lahf
insl
inc
mov
sbb
in
test
repnz
je
bnd
adc
inc
mov
das
rcr
mov
sbbb
sub
add
sub
sbb
mov
pop
cltd
mov
or
add
cwtl
mov
sub
xchg
inc
jmp
sbb
sbb
mov
push
aam
mov
add
stc
mov
mov
insl
jmp
pushl
or
enter
into
fs
add
and
outsb
push
jno
imul
sub
sub
mov
mov
sbb
movsb
scas
cs
jecxz
jnp
scas
es
leave
mov
xchg
pop
pop
inc
cmp
mov
fcomip
dec
jne
add
jecxz
push
ret
iret
lods
lahf
adc
shll
xor
out
shll
popa
or
aaa
in
cltd
adc
and
and
mov
xor
loop
push
imul
in
hlt
cmp
xor
pushf
orb
out
pop
jl
inc
aas
mov
xchg
pop
xor
call
sbb
mov
scas
into
mov
dec
scas
clc
outsb
iret
call
dec
mov
push
lret
sub
mov
jecxz
stos
mov
or
and
orb
xor
mov
and
cltd
jo
rclb
loope
or
jecxz
ret
in
push
pop
ret
pop
aam
mov
adc
cmp
imul
mov
rorl
mov
mov
inc
rcll
dec
or
nop/reserved
shll
stos
xchg
dec
sbb
sbb
rolb
mov
iret
or
mov
scas
loop
fld
xchg
adc
sub
add
out
xorl
xor
fdivrs
jno
rcrl
mov
dec
shrb
adc
sbbl
push
sub
and
fistpl
pop
insl
xlat
pop
push
pop
insl
inc
iret
add
mov
sbbl
sbb
adc
addr16
insl
bound
inc
mov
dec
and
imul
loope
mov
data16
mull
inc
xlat
xchg
mov
scas
and
insl
add
and
loop
in
ret
int3
movsb
cmc
xchg
inc
and
push
cmp
inc
mov
jmp
and
ljmp
sahf
inc
jecxz
inc
int3
je
jns
sub
dec
int3
cmp
fisttpll
cmp
dec
shll
fwait
jge
cmp
or
int
shll
mov
sub
cs
ds
dec
jno
out
sbb
mov
mov
pop
fnstcw
push
inc
or
adc
nop
add
push
movsb
mov
jo
adc
not
in
or
adc
xor
stos
push
ljmp
sahf
jmp
push
loopne
pop
ds
scas
iret
pop
es
popf
mov
push
sub
push
fiaddl
mov
mov
inc
ret
mov
push
bnd
ret
sbb
and
fwait
data16
fmull
popa
test
fistpll
repz
xor
mov
jp
test
inc
rorb
jnp
xchg
dec
cmp
mov
sbb
ret
movsl
repnz
push
xor
push
mov
cmp
cld
sub
notb
or
adc
aaa
cmp
and
mov
and
xchg
jmp
mov
fcmove
fwait
dec
add
pop
clc
inc
std
add
outsl
jae
out
or
out
pop
sub
jmp
mov
cmp
arpl
in
sub
cmp
xor
mov
lods
push
out
loop
xchg
jbe
xchg
pop
xor
repz
or
loop
mov
lcall
xor
pop
neg
cmp
or
cmc
enter
lret
xchg
stos
lock
pop
mov
leave
stos
cmpb
lods
fnsave
lret
pop
dec
or
sti
xor
loop
jo
jns
js
push
mov
sub
inc
jg
add
sbb
adc
fbstp
push
pop
jl
nop
xor
rcl
les
aam
insl
out
push
lods
ret
jmp
paddw
pop
icebp
shll
adc
mov
out
lods
dec
cltd
scas
jae
xor
push
repz
inc
inc
std
pop
sbb
inc
mov
inc
lret
mov
in
pop
sbb
jle
xchg
dec
dec
mov
sti
js
dec
fiadds
push
pandn
sub
insl
shrl
sbb
sahf
stos
pop
add
xchg
rcll
stos
sarb
add
inc
popf
or
shrb
or
decb
jecxz
leave
xor
push
in
or
insl
aaa
xor
cmp
addr16
shrl
mov
lods
inc
negl
nop
ds
mov
jmp
outsb
adc
adc
fdivrs
mov
cmp
jge
gs
and
ljmp
xor
fwait
jb
fstl
mov
lcall
repnz
xorl
lcall
out
pop
add
es
int
out
ret
mov
mov
sarb
adc
jp
jb
cmp
fldl
scas
cmpsb
dec
cld
and
jmp
mov
inc
xor
insl
push
or
lock
jb
addl
mov
adc
pop
mov
bound
aam
push
cwtl
lods
xor
enter
xchg
or
and
fcoml
hlt
ds
add
xchg
arpl
fcmovu
sbb
pop
stos
scas
mov
jle
add
pop
xchg
fsubr
mov
insl
sarl
sbb
rcr
loope
add
lret
scas
mov
daa
popf
pop
movsb
out
xlat
nop
dec
adc
mov
mov
mov
adc
xchg
inc
aad
data16
xchg
adc
pop
fs
xchg
fiaddl
xchg
lret
cli
or
je
xchg
or
imul
ss
mov
dec
adc
call
cmp
ja
in
daa
lahf
mov
neg
dec
and
jmp
or
nop
mov
and
mov
mov
shll
dec
xchg
sbb
inc
cmc
inc
push
out
jbe
aam
mov
mov
inc
stos
cmp
add
test
in
in
adc
lods
out
lea
xchg
adc
jnp
cld
lds
int
sub
inc
xor
mov
pusha
mov
cmpl
inc
add
mov
sub
daa
pop
gs
add
mov
out
aad
dec
fs
lahf
pop
shlb
dec
sahf
aaa
in
inc
adc
fildll
dec
inc
mov
in
or
stc
sbb
add
mov
mov
add
mov
cli
and
test
sbb
push
dec
xchg
jne
jbe
aas
jns
push
sub
sbbb
sbb
out
inc
mov
xorl
inc
sub
sub
xor
jno
lahf
mov
ja
decl
in
mov
sub
and
cmp
js
lock
xor
push
sub
jl
ss
and
mov
or
loopne
jecxz
mov
sub
pop
sbb
cli
or
enter
dec
xchg
mov
addr16
mov
ja
bound
add
flds
or
or
in
mov
fldenv
or
xadd
push
add
mov
cmp
or
push
test
daa
or
and
out
or
xlat
xcrypt-ecb
cmpsl
lea
popa
hlt
lahf
cwtl
scas
mov
cmc
mov
movsb
or
adc
push
bound
add
daa
leave
push
mov
ljmp
mov
mov
sbb
pop
sahf
nop
out
fidivs
jnp
dec
xchg
test
shrb
push
out
into
in
loop
aad
lods
add
mov
test
fimuls
inc
movsb
test
jnp
xor
push
pop
xchg
dec
int3
sub
or
out
or
mov
sub
daa
jo
xchg
and
lcall
pusha
lahf
ret
aaa
call
mov
inc
dec
jp
daa
or
leave
in
lea
and
jno
dec
mov
mov
add
sbb
inc
fnstcw
push
cmc
mov
jmp
lods
orb
stos
cmpsl
xor
fdivr
pop
movsb
dec
sbb
add
orl
sub
inc
incl
xchg
ds
dec
adc
sbb
scas
insb
pusha
inc
mov
mov
dec
ss
add
das
shr
les
push
add
mov
shl
enter
xor
movsb
mov
add
xchg
xchg
adc
lea
dec
pop
pop
mov
imul
and
push
scas
inc
xchg
xchg
js
mov
add
std
lret
inc
test
or
add
ja
sbb
inc
and
aas
sbb
dec
jbe
mov
popa
push
jne
adc
xchg
push
lods
dec
aam
mov
add
push
les
or
mov
push
sahf
push
subl
add
shlb
mov
aaa
fldcw
inc
dec
jge
testl
mov
movsb
ja
and
cmp
sub
mov
stos
xchg
lret
jmp
push
int
ljmp
mov
dec
jle
xor
jne
sub
std
push
mov
mov
or
andb
pop
or
scas
subl
fwait
decl
sub
roll
dec
insb
out
stos
mov
ja
ljmp
jge
test
push
es
outsl
push
lret
mov
dec
int3
mov
jnp
pop
mov
inc
cltd
xchg
xor
sarb
jno
add
mov
leave
mov
in
mov
ja
in
rcrb
fildll
ret
aas
sahf
sub
or
cmpsl
jge
inc
mov
enter
push
out
cld
and
popa
ljmp
pop
inc
jg
mov
mov
inc
or
jns
add
pop
stos
sbbl
xchg
mov
iret
sub
jo
rdtsc
sbb
out
add
fcmovnbe
inc
jp
ret
adc
popf
cmp
cltd
add
mov
in
jmp
push
sub
movsl
stos
addb
cmpsb
rorl
mov
or
xchg
xchg
mov
add
lret
jns
rorb
stos
mov
and
popa
cmpsl
xchg
lock
push
xlat
repz
xchg
int
jecxz
in
lods
dec
and
mov
enter
push
cmpl
movl
add
repz
jb
mov
hlt
mov
mov
dec
fwait
int3
mov
push
or
jecxz
fcmovnu
ret
scas
ja
dec
in
inc
add
and
imul
cmp
test
mov
push
lea
lret
xlat
loope
inc
or
das
call
mov
or
in
fcomp
ss
aaa
cmp
inc
out
cmpsb
movsl
mov
push
or
sub
jecxz
sti
lea
and
cld
or
stos
out
rol
xlat
outsb
ret
sub
push
das
mov
sub
rep
xchg
xor
popa
insl
mov
and
sbb
push
inc
jae
add
fistpll
add
mov
xchg
cli
sub
add
jo
mov
imulb
scas
jmp
xor
lret
roll
lahf
mov
and
adc
xor
and
aam
jge
xor
sbb
ljmp
or
or
popa
scas
insb
add
xor
repz
out
pusha
sti
lock
adc
ret
repnz
mov
and
xchg
push
in
shrl
cmpsl
mov
je
cmp
bound
dec
mov
jns
add
pop
push
subb
sub
add
idivb
add
dec
ret
cmp
inc
pop
pop
fisubs
scas
add
mov
and
test
and
lahf
cmp
xor
jno
mov
pop
jecxz
cmp
addr16
push
cmp
jbe
inc
aaa
pop
adc
jp
pop
gs
cmp
and
mov
mov
ja
mov
dec
bound
movsl
mov
fisttpl
sub
shl
sbb
and
sbb
mov
ss
imul
and
pop
sub
jecxz
adc
out
add
adc
and
int
outsl
jl
out
pop
test
sti
push
sti
cmp
ret
or
es
add
xchg
mov
xchg
mov
popf
jcxz
push
dec
lret
push
mov
xlat
lahf
fisttpll
incl
jmp
mov
fsubs
mov
addb
fwait
ss
call
hlt
add
mov
popf
cmp
cmpsb
popa
loop
xor
xchg
push
sub
stc
pop
or
stos
mov
lods
in
sbb
pop
sbb
jmp
test
and
addr16
shl
sub
sub
lret
into
adc
add
jmp
mov
lret
flds
popa
lret
add
addb
add
jmp
pop
or
int3
mov
hlt
and
jo
mov
push
out
mov
cmp
cmp
repz
jecxz
lock
adc
cmp
stos
and
clc
jge
rclb
fnstsw
scas
cs
inc
sub
xor
bound
rclb
das
movsb
and
lahf
icebp
cmp
jecxz
test
leave
stos
jne
popf
jge
or
lods
cs
repnz
mov
mov
test
call
jnp
sbb
mov
addr16
pop
outsl
ret
and
pop
adc
cmpsb
jge
call
pop
mov
or
stc
popf
or
sub
push
out
inc
push
loop
cwtl
les
bound
sbb
xchg
cmp
fidivrl
xchg
xchg
dec
gs
cld
fwait
hlt
inc
inc
xorb
push
outsl
mov
jle
int3
and
repz
push
inc
push
or
xchg
cmp
mov
mov
mov
cmpsb
hlt
shrb
mov
cmc
or
call
stos
xchg
call
repz
jmp
icebp
stos
or
add
jmp
or
pop
jb
call
ds
jb
nop
add
sbb
test
pop
adc
into
pop
shl
mov
arpl
adc
addl
jl
loope
mov
mov
je
xor
sti
decb
or
sub
xchg
jmp
mov
fdivr
add
pop
jge
icebp
lds
jb
sarb
sbb
loop
fimuls
jo,pn
jne,pt
adc
xchg
faddl
hlt
push
add
dec
xchg
dec
xchg
add
jl
and
out
xchg
ret
fidivrl
xchg
sbb
ja
mov
add
clc
add
mov
or
xor
fidivrl
std
mov
mov
mov
dec
mov
scas
mov
adc
mov
add
mov
pop
mov
mov
jmp
mov
pop
push
xor
cltd
ds
out
inc
into
sub
stos
data16
pop
dec
inc
mov
fistps
addb
call
mov
inc
mov
adc
in
mov
xchg
mov
xor
add
push
jle
mov
mov
stos
stos
in
push
call
mov
lcall
add
sahf
sbb
sub
rcr
les
sti
sub
jo
pop
daa
lea
daa
shr
movsb
add
insl
aad
pop
pop
push
cltd
inc
sub
mov
xchg
or
loope
insb
ljmp
pop
mov
out
mov
adc
sti
shll
das
les
leave
push
or
or
in
add
add
cmp
sub
adc
add
test
mov
or
or
in
lods
cltd
push
cs
shlb
push
stc
sub
call
mov
cli
jg
stos
adc
mov
lds
rcll
popa
jno
or
fsts
mov
push
pop
cmpsb
lock
jecxz
inc
test
push
jg
xor
fwait
cld
lea
add
cmpsb
subb
daa
sub
ret
jbe
inc
add
pop
mov
xorb
mov
mov
popl
les
insl
ljmp
out
or
sub
idiv
jle
adc
and
mulb
adc
test
sbb
out
popa
xor
test
pop
add
sbb
inc
lcall
lea
cltd
xchg
addr16
js
sub
out
inc
rolb
fidivrl
jns
cli
popf
and
sti
mov
mov
scas
fwait
movsl
lock
cmp
dec
outsb
in
push
sbb
mov
mov
int
xor
push
lahf
rcrl
and
sbb
pushf
sub
jecxz
or
xor
test
test
sbb
mov
lods
adcl
xchg
jmp
jne
mov
push
cmp
sbb
add
push
or
outsl
into
sbb
incb
imul
dec
mov
sub
cmp
pop
xor
inc
or
fmuls
repz
pusha
dec
sbb
inc
aaa
aad
imul
mov
mov
or
adc
enter
adc
mov
popf
sub
inc
push
out
or
sub
into
roll
xchg
sarb
test
int
adc
aaa
or
mov
mov
dec
rorb
sub
call
and
aam
xor
mov
in
in
movsl
jecxz
iret
sub
push
scas
inc
jl
mov
aaa
shl
dec
jmp
shlb
and
movsb
sbb
ds
sti
pop
cmc
and
pop
sub
inc
aaa
xchg
out
mov
mov
pushf
fbstp
push
addr16
scas
mov
push
push
scas
mov
push
sub
mov
addr16
orl
movsb
ljmp
ficoml
and
jns
add
cmp
adc
insl
sub
lods
xlat
pusha
jb
xlat
push
stos
inc
out
cwtl
int
pop
sub
sub
and
loope
mov
nop
lock
jb
stc
inc
ret
mov
lcall
dec
and
push
adc
xchg
stc
mov
cmp
cmp
pop
insl
inc
fisubrs
ljmp
dec
int
fsubrl
dec
jg
push
pop
lock
and
jne
lret
popf
mov
orb
adc
ret
aas
aam
sbb
adcl
int3
mov
imul
mov
addl
jg
jge
cmc
jo
add
inc
mov
sub
mov
adc
dec
sub
mov
loop
orl
sbb
pop
cmp
scas
sahf
pop
xor
stos
or
stos
add
subl
aad
push
and
adc
sbb
lcall
xchg
std
jp
ljmp
sbb
repz
push
test
pop
gs
add
push
leave
jne
mov
push
push
add
ss
fisubs
aaa
cmpsl
stos
or
popa
lret
repnz
mov
ss
xchg
sub
adc
add
or
add
mov
outsb
pop
sub
int
repz
loopne
das
sub
repz
pop
jns
addr16
ss
aaa
jb
dec
dec
adc
add
ja
fnstcw
push
pop
fbld
inc
lock
add
pop
andb
in
mov
pop
add
addr16
in
add
ja
or
loope
mov
jo
rolb
add
ret
or
or
and
decb
sbb
or
mov
jno
insl
xchg
repz
sti
dec
sbb
sarb
jmp
in
loop
xchg
int3
ret
iret
dec
adc
adc
and
cmp
add
and
and
adc
push
rcll
das
es
icebp
test
jmp
mov
mov
lret
inc
add
sar
int3
jge
add
jnp
in
mov
out
scas
dec
aad
pop
outsb
xchg
fcoms
and
mull
movsl
lret
ret
mov
int
sbb
fcmovb
xchg
out
mov
ja
clc
push
sub
inc
sti
adc
inc
push
sbb
repnz
faddl
sbb
stc
or
jle
lds
add
mov
push
dec
mov
adc
ret
mov
mov
sub
xlat
fistpl
pusha
scas
or
fldcw
adc
jb
xchg
out
cltd
nop
push
sub
push
mov
sbb
mov
cli
jae
hlt
sahf
clc
cmp
add
mov
adc
aaa
push
fcmovb
inc
enter
paddusb
in
jmp
add
or
ret
add
inc
jno
lcall
bound
dec
mov
inc
ss
sahf
loopne
fwait
das
insb
scas
xchg
or
or
push
jg
bound
loop
scas
mov
or
sti
out
sub
xchg
orb
out
push
mov
add
stos
lods
sti
cwtl
push
cmp
pop
cmp
dec
lahf
xchg
jbe
mov
adc
jge
popf
sbb
notb
or
data16
mov
movsb
sbb
adc
pop
out
das
repz
clc
jo
adc
adc
mov
bound
sahf
jbe
jns
daa
pushf
cs
rolb
adc
cli
cmpsb
push
ss
int3
push
aad
lods
pop
js
shrl
js
pop
mov
mov
repnz
rcll
into
popa
or
repz
hlt
cmp
xchg
sbb
out
jns
jl
dec
jne
test
inc
hlt
insb
mov
push
mull
adc
mov
jbe
push
cmp
inc
and
jae
lods
mov
jp
test
and
sbb
mov
xorl
jg
aam
ds
jnp
and
loopne
or
pop
mov
ja
or
lods
mov
fldt
pop
mov
in
mov
jp
adc
fsubp
adc
enter
push
or
stos
popf
cmp
mov
lds
xor
add
sbb
addb
sarb
xchg
cmp
jae
push
scas
dec
add
pop
pop
fidivrl
es
or
push
fistl
out
fwait
cwtl
shlb
dec
fiaddl
inc
xchg
lods
inc
out
xchg
incb
mov
pusha
mov
lock
sbb
jnp
sub
mov
adc
mov
dec
dec
adc
ja
cld
inc
pop
cwtl
test
int3
mov
fwait
push
jecxz
push
fnsave
xor
cmp
lods
xor
adc
sub
push
sub
sub
push
movsl
push
adc
out
mov
push
xlat
pushf
loop
mov
call
cli
nop
std
out
cld
ret
jp
loope
sub
jbe
jle
cmpsl
clc
xchg
inc
sbb
sub
jg
int
cmc
subl
cmp
test
push
dec
pop
sarb
add
jno
nop
xchg
add
sub
je
dec
mov
inc
iret
xchg
aaa
enter
cld
movsb
push
test
cmc
fs
scas
je
sbb
leave
adcb
out
rcl
jle
mov
sub
cmp
cmp
jno
outsb
mov
lgs
fs
sbb
imul
test
lahf
cmp
dec
cmp
sub
inc
adc
mov
roll
push
dec
aas
cmp
loope
lret
sub
int3
ja
push
mov
mov
daa
je
outsl
mov
or
in
dec
jne
push
jo
dec
pop
popf
xor
push
subb
stos
fmul
xchg
mov
push
xor
daa
xchg
add
aas
or
and
and
mov
lods
insl
vmptrld
inc
repz
outsb
push
or
sbb
sbb
push
or
es
lret
iret
xchg
or
cli
arpl
sub
cmp
dec
frstor
fimull
sahf
and
out
add
bnd
ljmp
lret
div
lahf
rol
xchg
jns
jae
iret
jae
nop
js
rorl
push
fisubrl
xor
xchg
lcall
sbb
loope
mov
mov
adc
repnz
jb
sbb
gs
lret
outsb
xlat
mov
inc
xor
bound
sbb
fs
adc
pop
sub
add
adc
out
ljmp
fadds
pusha
push
stos
bound
fadd
dec
stos
movsb
shlb
xchg
int
mov
or
push
sub
mov
cmp
aad
mov
lret
out
inc
adc
subl
push
sti
dec
in
sub
popa
push
addr16
sbb
sub
sbb
xchg
cmpsl
push
mov
push
test
mov
push
inc
repz
ret
bound
jmp
mov
test
int3
aam
mov
pop
les
mov
jne
ret
shll
daa
addl
xchg
rolb
add
fcoml
gs
adc
sbb
daa
lods
mov
sbb
jg
sub
xor
sbb
adc
test
repz
loop
jmp
out
mov
enter
xor
lcall
cltd
jge
arpl
ret
les
jnp
aas
dec
sub
mov
or
and
adc
adc
or
sub
insl
jge
mov
push
addl
or
jo
xchg
out
xor
std
sub
outsb
or
enter
jae
mov
int3
out
adc
add
inc
and
jns
mov
sbbb
pop
xchg
ret
fbstp
in
mov
movl
insb
sbb
xchg
cltd
iret
and
lret
iret
lods
cmc
mov
aam
jmp
pop
inc
lea
test
mov
mov
jns
cld
push
lods
mov
sahf
pushf
cmc
mov
push
divl
stos
ss
jmp
fildll
and
aas
clc
mov
dec
or
mov
xor
shll
test
sub
adc
jge
push
mov
into
cltd
lret
push
cmp
push
fistl
scas
stos
lcall
ljmp
out
jmp
cmp
jb
fisubs
lar
out
mov
movsb
jge
inc
jmp
inc
jmp
push
sti
add
add
and
lret
iret
in
daa
addl
leave
jo
pop
and
in
sahf
mov
ss
sub
rcrl
mov
dec
mov
mov
add
dec
sub
aaa
sbb
inc
cmpl
in
in
push
cli
sub
js
or
hlt
dec
insb
pop
divl
test
pop
and
jg
and
in
push
insl
int3
stos
addb
int3
js
testl
frstor
push
fstl
addl
dec
stos
ret
sbb
cwtl
das
xorl
cmp
insl
push
jo
out
cmp
lret
lods
das
repz
sbb
mov
dec
cmp
sbb
aad
mov
imul
mov
lods
adc
cltd
aas
lahf
sub
xor
outsl
xchg
dec
add
push
sub
test
rolb
jo
mov
push
sti
inc
lcall
mov
insl
lds
clc
popa
cmc
xchg
fs
mov
cmp
cmp
adc
mov
imul
push
mov
mov
inc
sub
xchg
lea
aaa
or
mov
imul
push
xchg
sub
xchg
adc
imul
xlat
addr16
lret
mov
push
sbb
out
imul
xor
push
mov
add
cmp
add
out
in
mov
xor
add
xchg
movsl
nop
out
and
add
push
test
add
sub
push
sbb
inc
xchg
test
fsubrl
or
mov
add
xchg
cmp
push
rcrl
leave
aam
jl
sub
dec
add
and
cld
dec
ja
dec
stos
sub
add
add
or
loope
test
adc
xor
push
mov
gs
cmp
dec
xlat
idiv
mov
inc
in
int3
pop
adc
cmc
lods
out
dec
mov
mov
hlt
movsb
mov
mov
or
fimuls
sbb
pushf
push
hlt
loopne
lahf
adc
cmc
xchg
aad
int3
jb
movsl
in
adc
pop
push
mov
adcb
and
gs
cmp
insb
sbbl
jecxz
jle
jmp
cmp
jmp
mov
xchg
mov
mov
bound
sbb
rcrl
rclb
mov
sbb
fnop
ds
mov
inc
jb
xchg
shl
push
push
insb
add
imul
xor
push
daa
or
or
jl
daa
shrl
or
in
sbb
sub
shlb
fldl
daa
out
xchg
aad
sub
add
add
push
daa
mov
stc
mov
jg
sub
cmp
in
lods
imull
out
sahf
sbb
xorb
lret
scas
fisttpl
jecxz
sbb
nop
test
mov
filds
sbb
daa
sbb
add
xor
sarb
sbb
sbb
push
inc
icebp
test
ficoms
pop
std
lods
cmp
add
clc
mov
sbb
sub
rorb
xchg
fcmovb
add
ret
clc
push
lods
insl
mov
andl
ret
rcrl
adc
mov
cwtl
dec
loopne
and
dec
orb
je
insb
pop
enter
pop
mov
inc
push
sbb
popf
mov
jb
lods
adc
xchg
loope
lods
lret
inc
add
ss
inc
sbb
popf
xor
mov
mov
scas
test
scas
mov
jbe
int3
mov
sbbl
jmp
lea
arpl
fwait
xchg
aaa
xchg
sub
ret
js
adc
adc
pop
ds
or
add
repnz
pop
leave
daa
sub
bound
aad
addr16
sarl
mov
xchg
loope
scas
fildll
orl
test
outsl
or
add
sbb
out
test
es
sub
add
lods
movsb
lock
clc
push
cmpsl
mov
orl
cmpsb
pop
and
push
aam
inc
test
mov
adc
dec
mov
xchg
mov
or
daa
push
in
or
adc
xor
mulb
xor
stos
pop
adc
divb
add
ljmp
aas
rsqrtps
sub
fists
mov
insb
mov
jb
push
mov
addl
iret
shlb
mov
sarl
mov
add
bound
and
stos
dec
jle
into
movsl
subl
mov
adc
lock
sbb
daa
out
stos
cmovl
fcoms
jecxz
test
sarb
dec
push
clc
mov
or
mov
out
dec
xchg
jae
ss
scas
ja
out
stos
lahf
daa
fstps
rcl
pop
lods
or
cwtl
mov
les
pop
shl
cmpsl
int3
cmp
stc
dec
insb
mov
lret
les
sub
mov
mov
push
cmp
or
push
sub
insl
jns
jns
mov
and
gs
cwtl
adc
jbe
jb
idiv
out
sub
jg
loop
les
orb
mov
and
inc
or
or
cltd
inc
xor
sbb
mov
ret
sbb
or
add
push
add
push
add
jne
insl
iret
jae
sbb
test
sbb
in
adc
cmp
mov
nop
je
and
jle
fisubrs
or
aam
add
aad
das
jno
mov
jl
xor
jne
stc
adc
ja
movsl
imul
sub
mov
or
and
fwait
jle
popf
add
xor
or
add
lret
test
addr16
xchg
imul
pushf
popa
xor
dec
mov
inc
jp
and
cld
mov
nop
aam
or
loopne
xor
mov
sub
or
cmp
or
mov
sub
push
cli
and
or
push
sub
mov
push
inc
push
in
test
push
into
ljmp
iret
js
addl
stos
les
sar
and
ret
popa
sahf
test
rcll
sbb
adcl
xchg
inc
dec
or
sarl
scas
pop
sbb
sub
or
xchg
add
sub
sub
insl
mov
push
daa
and
fldcw
lods
ficompl
into
jecxz
jb
dec
jle
push
notl
aam
std
pop
pop
fcompl
xchg
sti
ljmp
fwait
aam
and
push
inc
mov
and
addr16
lret
testb
int
hlt
sbbl
jmp
and
imul
rclb
lret
mov
add
jo
jnp
xchg
stos
inc
out
hlt
add
dec
mov
sub
mov
xchg
fcoml
mov
aaa
cmp
sarb
jae
insl
push
aas
loope
pop
lea
add
jae
and
push
dec
push
mov
aas
stos
and
inc
add
pop
cld
add
mov
push
sbb
inc
jge
insl
jp
sbb
xchg
fidivrl
in
jnp
mov
popa
inc
lods
js
hlt
fcomps
jbe
mov
push
out
lahf
aam
cltd
cmp
out
insb
cld
ljmp
rolb
xor
ret
lret
mov
loopne
inc
pop
repnz
add
add
cmp
jge
sbb
push
out
decb
mov
jo
sbb
fiaddl
sub
mov
mov
mov
hlt
sbb
sub
in
adc
scas
orl
inc
fmuls
pop
adc
sub
jecxz
or
iret
push
or
jb
push
lret
loope
xchg
push
push
mov
aaa
dec
jbe
push
test
shr
jb
adc
fnsave
dec
mov
mov
cmpsl
pop
sahf
pop
in
sub
dec
mov
sbb
dec
movsb
mov
icebp
and
clc
dec
dec
or
mov
push
and
stos
pop
dec
fwait
iret
inc
sub
inc
xchg
inc
stos
bound
minps
or
sbbb
or
es
repnz
int
aaa
call
pop
lret
pop
or
sub
popa
int3
sub
cltd
cwtl
inc
push
and
sbb
and
push
or
mov
rcll
cs
movsl
or
jae
fwait
mov
rcll
movsl
push
xchg
inc
ret
ljmp
std
pop
addr16
mov
push
int3
cmp
mov
in
aas
dec
or
or
lcall
xchg
cwtl
push
sbbl
or
pop
inc
aaa
cmp
je
jl
or
mov
mov
or
mov
scas
in
mov
mov
sub
jbe
stos
testb
mov
push
loop
or
and
push
rorl
sub
xchg
cmp
push
adc
and
pop
orb
sahf
jg
or
insb
outsb
mov
cli
sub
mov
pop
mov
shr
or
sbb
jecxz
aad
ljmp
xchg
rorb
pop
or
mov
mov
or
sbb
pop
fistpll
push
sub
cmpb
or
cmp
xchg
push
aad
pop
mov
or
inc
push
adc
stos
cwtl
imull
test
mov
pop
mov
xor
mov
or
xor
dec
imul
popa
add
push
fsts
xlat
lods
cs
ja
lret
ret
in
or
enter
or
ret
add
mov
ljmp
and
jecxz
jge
sti
push
fs
pop
mov
xchg
jne
add
or
mov
push
mov
fadd
inc
jp
or
aaa
das
into
fxch
cmp
mov
sbb
cwtl
femms
fisttpl
push
ljmp
out
in
push
cs
stc
and
jo
cltd
hlt
shrb
push
outsl
cmp
jge
or
sub
push
or
xor
mov
xchg
pushf
cld
aam
arpl
ja
dec
sub
lcall
add
xchg
sbb
or
push
and
xorl
pop
bound
ret
sub
fdivs
add
or
es
das
leave
or
cmp
dec
cld
sub
xor
or
or
mov
outsb
jge
push
lret
adc
mov
jg
mov
dec
cmp
lock
adc
imul
mov
mov
push
rcrl
mov
je
push
sarb
sbbl
adc
pop
lods
imul
or
xor
lods
dec
bound
nop
mov
xchg
sub
ja
jmp
or
inc
rol
mov
pop
sbb
sbb
js
lret
mov
or
call
popf
stos
jno
fsubrl
jae
or
ja
fidivs
inc
shrl
dec
je
adc
and
jp
mov
stos
rorb
adc
or
mov
popa
push
es
xchg
dec
dec
or
inc
out
push
in
inc
or
xchg
fwait
imul
aas
mov
inc
adc
and
push
xchg
jno
jmp
sub
push
je
punpckhdq
lea
and
iret
das
or
fstps
cmove
das
sbb
jle
sbb
mov
add
xor
int
mov
sub
or
xor
aas
call
in
sub
out
daa
pop
add
pop
pop
mov
and
jmp
movsl
out
xchg
sub
pop
adc
fucomi
mov
mov
shl
cmp
or
and
or
sub
test
inc
in
jbe
cmp
lock
xchg
pop
and
adc
enter
out
sub
sbb
push
push
cltd
xchg
mov
aad
out
and
push
scas
ds
xor
or
xor
push
jnp
sub
mov
outsl
ljmp
pop
or
stos
push
int3
pop
xor
arpl
sbb
push
mov
jae
repz
cmp
cli
or
movsl
jle
inc
or
inc
loop
or
call
lods
adc
outsl
mov
add
sahf
inc
push
or
sbb
cmp
insb
dec
xchg
stos
dec
dec
stc
push
adc
out
and
mov
in
stos
jns
lods
pop
aaa
js
loope
adc
incl
out
outsb
imul
or
cli
inc
push
push
xor
into
mov
mov
xchg
inc
sbb
sarl
int
cmp
icebp
push
xor
popa
jmp
and
mov
je
andl
ss
mov
sbb
adc
lahf
jmp
rep
cld
jae
mov
pushf
xchg
sbb
in
pop
fimuls
lea
mov
push
movsb
mov
dec
pop
adc
gs
mov
mov
add
add
out
test
std
add
popl
pop
call
sbb
loop
ret
mov
adc
mov
or
add
jge
addb
mov
or
mov
stc
sbb
sub
or
add
jg
mov
pop
sbb
nop
xchg
hlt
popa
xchg
test
ljmp
pop
mov
or
or
and
or
movsl
stos
add
andl
test
orl
hlt
cmc
lahf
and
adc
inc
or
dec
jmp
or
cltd
sbb
daa
cmc
gs
pop
pop
or
xchg
push
sub
or
inc
sub
fcmovnb
cmp
xchg
mov
xor
mov
lods
and
xor
push
push
add
fs
mov
out
cltd
outsl
in
int
sahf
or
push
mov
jle
cmp
movsb
mov
adc
sbb
sub
leave
push
add
sbb
push
sub
sub
out
jne
pop
inc
mov
mov
xor
sub
sub
test
add
in
iret
adc
or
idiv
stos
inc
sub
mov
imul
int
push
jnp
dec
cmpsb
mov
or
mov
sub
or
out
dec
lods
pop
inc
pop
pop
dec
sbb
clc
es
jl
or
dec
push
imul
and
jno
push
in
mov
mov
out
jnp
sti
xor
mov
dec
arpl
xor
adc
push
mov
stos
or
fdivl
bound
loop
and
sbb
cltd
add
cmp
mov
stc
mov
addr16
sbb
push
adc
test
ja
xor
mov
cwtl
lret
jnp
jne
cltd
sahf
adc
cmp
add
roll
imul
lea
mov
in
cltd
cmp
aaa
into
loope
out
xchg
mov
mov
adc
add
sub
fimull
xchg
adc
testl
out
imul
rol
xchg
fs
addb
fisubs
sub
add
sbb
ja
sub
sub
nop
jge
dec
adc
xlat
out
inc
fwait
add
sub
fcoms
mov
rolb
add
dec
mov
push
filds
fsubrl
daa
icebp
ret
jle
mov
daa
imul
inc
popf
data16
pop
cmp
mov
inc
inc
jb
fsubp
mov
imul
pushf
jne
cmp
repz
add
mov
out
push
out
push
in
add
sbb
dec
pop
stos
mov
mov
sarl
inc
loop
xchg
lods
fsub
xor
das
loopne
cs
mov
inc
jbe
imul
ljmp
xchg
add
cs
jbe
ror
mov
dec
out
xchg
cmp
scas
fsubl
mov
and
mov
xchg
lcall
sahf
dec
push
push
and
pop
push
sub
int
xchg
and
adc
hlt
aas
loop
js
xor
in
and
shlb
pop
lods
ljmp
leave
or
imul
adc
jmp
jnp
das
adc
sti
andl
pop
cmpsl
hlt
inc
add
les
pop
mov
ljmp
adc
imul
mov
inc
test
mov
fdivs
or
inc
adc
pop
push
sub
push
pop
jp
pop
cld
cmp
packuswb
mov
repnz
lret
fstps
mov
cltd
out
dec
mov
inc
cmpsl
adcl
adc
es
cld
add
hlt
sbb
cmp
lcall
push
cmp
adc
jns
je
loope
lods
ja
jmp
xor
or
cmp
ret
pop
fmull
rcll
out
mov
stos
loope
lods
lds
addr16
sbb
cli
xor
lds
addb
das
xchg
arpl
movsb
push
add
lret
dec
jo
fimull
mov
cmp
mov
add
rclb
and
dec
sbb
aad
stc
fildll
mov
cs
mov
adc
test
jge
movsl
push
orb
lods
repz
push
inc
in
dec
mov
test
insl
jne
leave
inc
or
xlat
sbb
add
out
cltd
aas
cmpb
cld
cmp
test
mov
bound
ja
mov
dec
ja
push
push
dec
or
popa
inc
jmp
jmp
aaa
mov
stos
out
lret
push
insl
lret
addl
and
addr16
cmp
add
cmp
sahf
mov
inc
fwait
push
pop
shlb
or
push
insb
pushl
xchg
in
jnp
outsl
arpl
cmpsl
movsb
sub
daa
and
adc
jns
or
add
sbbl
stc
sbb
mov
add
and
orl
fldcw
repz
mov
incb
mov
or
ds
cmp
out
pop
cmp
pop
add
test
add
fsubr
mov
inc
jns
rcrl
fistl
add
mov
pushf
push
adc
aaa
test
imul
lret
cld
inc
jne
inc
or
ds
dec
cli
mov
leave
fwait
dec
nop
sub
in
mov
ret
adc
and
fsubr
loope
enter
sahf
xchg
push
mov
sbb
test
push
pop
lds
cwtl
cmp
ret
ss
sub
insb
cltd
mov
and
dec
int3
sbb
mov
cmpsb
xor
out
cmp
int
data16
sbb
in
addr16
cmp
lcall
mov
pop
loopne
mul
add
or
or
jnp
mov
mov
mov
into
mov
push
je
add
repz
push
xor
inc
inc
icebp
into
pusha
inc
adc
das
jnp
ss
cmp
add
add
dec
scas
cmp
lahf
std
jp
jnp
jecxz
push
js
negl
punpckhbw
out
sbb
shlb
pop
out
dec
fisttps
sti
and
mov
shll
mov
in
and
pop
pop
lods
lock
xchg
mov
mov
adc
fsubs
daa
xchg
inc
cs
out
call
test
mov
jns
cmpsl
int3
inc
xchg
sti
inc
sbb
add
xor
out
scas
add
sbb
push
in
or
mov
nop
xchg
add
into
orb
bound
add
lds
sub
mov
mov
inc
mov
mov
js
push
jmp
lahf
ja
sbb
outsl
cwtl
fsubr
push
mov
jno
xchg
xchg
daa
xchg
out
add
jp
or
sub
popa
jo
cli
jge
mov
mov
orl
pop
divb
fwait
cmp
push
out
dec
jmp
mov
or
popf
ret
das
pushf
sub
insl
out
inc
mov
outsl
push
cld
or
mov
stos
pop
mov
outsl
rolb
xchg
pop
inc
iret
scas
fwait
in
mov
jnp
mov
fiaddl
enter
in
iret
aaa
popf
scas
jg
ficoml
sub
shr
cmc
mov
push
adc
ljmp
dec
movsb
cltd
out
add
loop
pushf
fdivl
stos
lcall
xor
mov
mov
pop
fwait
add
sti
sti
jno
jbe
add
inc
iret
xor
mov
inc
mov
jb
popa
sub
cmp
pop
fwait
mov
ja
or
xlat
shr
sbb
sub
bound
dec
jmp
fisttpl
inc
xor
and
lret
adc
aaa
inc
add
daa
or
dec
inc
sbb
dec
call
push
add
push
or
adc
push
sbb
mov
rorl
add
push
stc
and
clc
iret
mov
loop
in
xor
mov
adc
mov
aad
jb
xor
push
jl
mov
sub
inc
push
js
lods
popf
mov
cmp
and
ret
inc
mov
ret
push
dec
int3
dec
sub
sbb
mov
pop
adc
push
and
adc
adc
loopne
push
pop
adc
scas
mov
sub
lret
sbb
adc
out
xchg
pop
cmp
inc
popa
and
pop
mov
xchg
add
hlt
sub
lcall
dec
push
mov
inc
fimuls
loop
sbb
push
and
add
test
jb,pn
push
mov
out
cmp
sti
ret
sub
sbb
out
mov
mov
lds
stc
shl
or
popf
and
pusha
mov
int3
jp
fwait
imul
sti
dec
out
jno
sbb
aas
cwtl
fwait
inc
push
sbb
in
call
pop
jecxz
ljmp
out
repz
loopne
push
push
push
and
dec
data16
fimull
sub
inc
jp
nop
mov
push
or
push
push
daa
and
sub
jno
dec
ss
lea
and
and
and
sub
mov
xor
dec
enter
sbb
mov
aam
mov
das
inc
dec
sbb
lret
cmp
ja
decb
lea
xchg
out
sahf
pop
les
daa
xchg
ja
dec
jge
mov
aaa
xchg
scas
dec
mov
out
test
xchg
or
outsb
xor
xchg
or
pop
cmpsb
jne
xchg
cmp
jbe
ja
mov
ret
add
pop
adc
push
fcmove
add
jg
daa
xchg
or
fimuls
inc
out
cmp
stos
adc
inc
rolb
out
or
fldz
popf
cli
push
jmp
cmc
or
add
iret
aaa
in
jne
cwtl
cmc
inc
sub
inc
scas
or
mov
lods
add
sub
adc
rorb
test
sub
mov
stos
stos
add
xor
xchg
scas
or
ljmp
pop
bound
or
dec
cs
xchg
call
add
dec
add
std
arpl
xchg
xor
test
pop
ret
sub
subl
jno
out
mov
xlat
and
add
repz
dec
testb
repnz
sbb
imull
sbb
adc
inc
popf
outsl
insb
dec
push
inc
xchg
scas
rorb
jl
out
adc
mov
mov
test
mov
jle
icebp
and
push
adc
cmp
adc
push
in
push
adc
jecxz
inc
insb
out
sbb
mov
sahf
int3
mov
sti
stos
movl
pop
pop
mov
mov
lock
icebp
fimuls
test
xchg
fstl
jl
ja
xchg
fmul
fidivrl
jmp
sbb
fidivrl
addr16
add
inc
pop
jne
lods
pop
fcomps
out
popf
out
sub
cld
push
scas
out
inc
in
test
dec
and
pop
dec
je
jecxz
and
add
les
jnp
and
inc
xor
cmp
cmp
ja
shll
inc
lods
jg
push
iret
sbb
std
das
aaa
sub
pop
shll
dec
leave
add
repnz
cld
ljmp
xchg
gs
jge
lds
fsubr
pushf
pop
mov
adc
int3
sbb
lea
and
clc
xorl
loop
ss
out
sub
div
adc
loope
rol
insb
xor
out
jl
pop
push
and
jecxz
add
mov
insl
leave
fnstcw
jmp
mov
pop
movsb
mov
nop
or
jne
arpl
pop
addr16
pusha
les
shlb
sbb
mov
mov
pusha
cs
test
cltd
mov
lock
fistps
and
sbb
xor
mov
fs
add
push
addb
push
push
xchg
mov
jge
cmp
cmpsb
std
mov
adcb
data16
mov
lods
push
mov
push
jne
out
outsl
xchg
jmp
and
add
fwait
inc
pop
ss
or
pop
clc
out
xorl
inc
pop
test
rorb
fcomip
jle
or
fwait
jo
insb
add
ss
iret
jns
in
ljmp
jmp
pop
jae
out
fisttpll
movsl
ss
mov
out
and
movsb
dec
into
pop
mov
ljmp
js
ror
mov
inc
xchg
or
push
sahf
cld
mov
xchg
decl
jnp
int3
testb
out
aad
sti
cwtl
xor
cmpb
ror
sub
sub
mov
int
call
cmpsl
repnz
pop
xlat
sarb
repnz
cltd
inc
bound
fs
stos
out
and
adc
mov
leave
ror
bound
xchg
into
cmpsl
add
ret
add
dec
sub
xchg
jecxz
int
push
nop
cwtl
iret
push
mov
cltd
push
loope
lret
jno
lret
cs
mov
adc
lret
lods
rcr
or
es
jb
stos
in
sbb
out
js
sahf
xor
inc
stc
stos
pop
sub
fnstcw
mov
bound
mov
inc
push
jp
xor
mov
scas
mov
or
lods
push
dec
xor
xor
dec
mov
negb
pop
push
loop
mov
sub
fsub
je
sub
add
movsl
mov
push
cmp
aad
inc
mov
xor
xchg
push
mov
inc
dec
sbb
fwait
mov
daa
pop
mov
inc
lock
mov
out
test
sbb
cmpb
or
mov
jmp
stos
push
jne
pushf
sti
into
or
scas
or
lods
lret
sahf
fwait
or
mov
fdivrs
and
je
es
lods
pop
scas
mov
out
or
xadd
ja
add
testb
aam
mov
js
test
add
cmpsb
jle
inc
adc
add
popa
mov
adc
stc
pop
sub
imul
cli
fdivl
xor
fwait
xchg
adc
or
pop
ret
sub
ss
sub
adc
adcb
nop
add
jmp
fnstenv
or
pop
gs
std
jg
xchg
sbb
jmp
psubb
mov
ja
std
or
adc
orb
push
stc
add
cwtl
adc
or
mov
in
mov
test
ljmp
add
fmul
call
dec
loopne
mov
xchg
cmp
mov
insb
jmp
inc
adc
jo
or
dec
nop
inc
icebp
mov
jbe
mull
mov
inc
insb
lcall
push
adc
lods
push
orl
nop
sbb
stos
or
aas
sub
or
jne
repnz
or
movsb
add
or
mov
and
cmp
mov
sti
aaa
je
adc
das
or
cmp
xor
adc
ret
rorb
dec
jb
dec
psubusw
jno
or
cltd
jp
imul
in
outsb
pop
or
add
pop
and
aas
mov
xchg
and
aam
cs
xor
rorl
scas
push
mov
mov
clc
adc
jb
int
sbb
lahf
movsl
adc
shrl
sub
in
jnp
lret
daa
add
xchg
or
fldt
hlt
adc
sub
adc
jp
mov
jbe
xchg
jl
mov
daa
test
xor
faddp
orb
in
bound
add
lock
lcall
mov
pop
xor
adc
or
jnp
icebp
pop
or
cwtl
push
mov
adc
dec
enter
loopne
or
mov
mov
jo
pop
lcall
js
or
aad
or
repz
mov
add
sub
push
sub
mov
ret
pusha
mov
gs
mov
pop
fcoms
leave
decl
jnp
test
or
xchg
or
loopne
flds
ret
test
adc
lcall
mov
cmc
or
mov
sbb
mov
dec
in
xor
sbb
hlt
cmp
test
outsl
mov
sbb
or
jo
mov
add
int3
insl
sti
push
lss
push
sbb
or
mov
out
xor
mov
gs
scas
sub
repz
adcb
addl
dec
jbe
sbb
xchg
add
or
out
jbe
test
pop
or
jl
aam
cmp
and
or
jg
push
add
lret
inc
arpl
jns
aam
xor
imul
aaa
sbb
xchg
dec
jecxz
repnz
movsb
gs
in
mov
xor
or
or
bound
pop
js
inc
imul
add
mov
ljmp
adcb
sbb
or
mov
lahf
mov
xchg
inc
call
mov
mov
or
idivl
jl
pop
ja
adc
in
jae
inc
icebp
xchg
inc
popf
xchg
sub
add
add
popa
test
or
or
or
jge
loop
arpl
idiv
loope
or
pop
mov
test
scas
push
or
rolb
dec
repnz
sub
mov
or
pushf
les
or
lea
or
xchg
adc
ffree
or
test
imulb
fisttpl
mov
jmp
cmp
sbb
sahf
or
sub
sub
idivl
cmc
inc
rolb
sbbb
fimuls
aaa
lret
mov
xor
jae
mov
xchg
int3
and
inc
xchg
or
push
and
sbb
inc
cltd
sbb
jl
clc
sbb
mov
add
imul
sbb
lcall
push
hlt
int
mov
pop
xchg
ds
das
or
xor
lret
mov
orl
or
les
lods
sarb
iret
sbb
push
add
adc
push
add
sub
jle
in
inc
xor
or
out
pop
pusha
xchg
std
fisubrl
aam
push
rcrb
movsl
pcmpeqd
or
cmpsb
lods
cmp
add
test
or
mov
push
or
mov
adc
dec
addl
mov
adc
movsl
xor
mov
jns
or
mov
gs
pusha
adc
dec
fsts
push
cld
repz
or
enter
or
ret
pop
lea
dec
in
xor
xchg
sbb
xchg
sub
pop
outsb
add
xor
mov
inc
fcompl
js
sbb
divb
push
stos
call
or
repz
push
sbb
mov
or
mov
hlt
dec
ret
test
or
out
movsb
xchg
daa
or
adc
sbb
push
sub
xchg
xor
in
sub
pop
data16
ror
mov
pmulhuw
jg
xor
in
jns
int
ja
push
dec
mov
sbb
adc
arpl
jo
in
cmp
mov
lret
leave
mov
rorb
mov
int3
xor
in
jp
imul
or
mov
push
sbb
mov
dec
cmp
lock
loopne
in
cld
out
xchg
in
out
test
add
pop
ret
sbb
sti
push
push
cmp
call
mov
pop
mov
fdivrs
or
push
jno
jmp
add
ljmp
and
and
or
adc
out
jge
mov
jmp
mov
stc
insl
or
repnz
or
push
ss
add
outsl
push
movsl
jo
or
mov
xchg
inc
movsl
pop
sub
add
movsb
sarl
pop
xor
xchg
mov
adc
fsub
adc
inc
stc
aam
mov
pushl
neg
insb
mov
inc
mov
addb
aad
loope
push
mov
add
jb
or
mov
ret
clc
adc
or
fucom
shl
or
push
arpl
add
shl
xchg
insb
dec
cmp
rolb
fwait
inc
fiaddl
mov
icebp
bound
mov
mov
mov
sbb
aas
inc
lock
pop
repz
or
cmp
pop
or
mov
mov
xchg
frstor
or
inc
ds
or
stos
add
adc
mov
lods
cmpsl
mov
in
cmp
mov
xchg
mov
lds
jg
mov
cmpsb
fisubs
roll
add
pop
ljmp
out
pop
dec
mov
scas
xor
mov
lret
int
jl
in
pop
hlt
ja
add
push
sbb
dec
inc
push
jg
sahf
cmp
add
cmp
mov
fcom
idiv
cwtl
lods
addr16
pop
lret
lea
mov
dec
pushf
dec
orl
inc
xlat
call
out
loopne
jp
pop
xor
fisttpl
enter
sbb
xchg
pop
jge
pop
dec
movsl
mov
lds
add
push
jae
bound
pop
ret
ds
sti
xor
stos
lock
push
mov
sbb
test
ja
xchg
fldcw
loope
cld
popa
cltd
ret
vpcmpgtd
das
mov
ret
jle
pushf
adc
rolb
sbb
popa
jmp
push
out
pop
xchg
xchg
pushf
sub
daa
mov
sbb
fidivrs
inc
outsl
sub
movl
mov
add
ss
cmp
outsl
push
clc
mov
sub
push
lret
std
int
lahf
out
sub
rcrb
mov
fsubs
hlt
pop
or
cmp
pop
loop
out
push
aaa
mov
outsb
es
aaa
fiadds
scas
cmp
sbb
leave
add
adc
inc
cmp
mov
dec
test
cltd
push
sub
inc
push
icebp
pop
mov
cld
or
stos
push
push
dec
xchg
add
cltd
jne
mov
inc
xor
aaa
mov
lods
jns
inc
fsubr
cmp
sti
adc
add
add
cmc
ret
add
fdivp
xchg
ja
les
loope
pop
jb,pn
cmp
jno
cmp
mov
call
dec
cmp
jae
push
out
pop
and
push
and
add
popf
jae
lds
or
iret
push
push
js
loop
lahf
xorl
fidivl
mov
in
mov
xor
test
dec
sbb
jns
notl
sub
bound
adc
pop
jle
add
ja
mov
mov
mov
xchg
adc
adc
cltd
and
jno
mov
sbb
fwait
sub
test
addl
or
filds
adc
ret
xchg
subb
movsl
rorl
sub
mov
rcl
cmp
mov
cmp
dec
and
hlt
sub
loop
mov
int
test
and
iret
fcmovb
adc
pop
mov
cmp
pop
lods
jnp
enter
xchg
dec
xchg
iret
sbb
insl
fimull
add
iret
xor
lahf
les
xor
fstl
jb
push
sbb
sub
cmpsl
adc
xor
sub
pushf
mov
loopne
std
xchg
enter
shrb
push
jne
push
or
xlat
outsl
xor
aaa
out
cmp
movsb
push
add
xor
xor
inc
cmp
inc
scas
mov
lahf
in
addl
xorb
pop
dec
inc
jle
push
jmp
ret
mov
lahf
sbb
loope
cld
mov
inc
inc
test
jle
push
sti
stc
sub
lds
fiaddl
popf
jmp
inc
dec
push
orb
aad
loope
fdivrl
dec
rol
dec
cmpsb
sub
jmp
xor
dec
sti
xor
mov
sub
or
xchg
sub
rcll
cmpsb
sbb
cmpsb
in
add
push
repz
dec
int3
loop
je
iret
xchg
add
mov
add
out
jo
mov
jecxz
adc
mov
hlt
jp
add
stos
dec
das
xchg
mov
sti
adc
sub
inc
mov
and
rclb
or
and
decw
xlat
xchg
fmull
dec
add
push
mov
out
mov
sti
jl
scas
hlt
shlb
addl
xor
sti
mov
and
or
mov
add
or
in
pushf
mov
mov
aad
mov
lea
mov
xor
mov
das
xchg
ret
adc
or
xchg
pop
jno
add
popa
int
in
add
adc
cmp
enter
test
cld
mov
cmp
xchg
stos
push
rorb
jmp
out
popf
jbe
out
pop
int
mov
lret
in
fstpl
mov
push
adc
lds
movsl
jbe
cmpsl
icebp
dec
rclb
stc
fcoml
add
insl
add
std
inc
inc
vfnmaddps
std
mov
inc
cli
stc
enter
and
add
adc
testb
xor
in
sbb
mov
mov
mov
out
into
fs
and
inc
fsubrs
xchg
loopne
jae
into
fwait
jbe
sbb
or
out
mov
sbb
idivl
jno
mov
int
push
insl
or
inc
push
adc
insl
rolb
sbb
loopne
popf
gs
int
das
push
ds
adc
mov
out
insl
sub
jno
shrl
and
ja
pop
mov
fildll
scas
out
mov
cmpb
lods
sub
pop
jl
dec
xchg
and
inc
leave
cmpsb
cmp
loop
in
ficoml
sbb
xchg
sbb
sbb
add
jl
xchg
xor
add
mov
xor
mov
call
and
in
out
out
lret
aam
lds
jmp
sbb
outsb
in
xchg
add
mov
inc
pushf
fcompl
xchg
int3
lret
mov
cmpsl
outsb
loope
mov
mov
ret
jne
add
dec
sarl
rolb
insb
pop
mov
jp
mov
jl
sbb
cmp
lea
dec
adc
loopne
addr16
aad
jb
cmp
jne
push
add
leave
mov
sub
dec
and
fnop
shrb
enter
xor
and
jb
int
or
xor
or
nop
mov
mov
sub
ljmp
cmp
mov
sub
fiadds
or
mov
push
dec
out
inc
in
les
inc
sub
std
push
andl
sub
or
jl
mov
fsubs
pop
daa
addr16
jmp
push
jbe
cmp
test
inc
mov
imul
or
mov
adc
popa
add
sbb
sub
aad
adc
dec
iret
mull
ret
push
bound
xor
es
jb
insb
cli
and
inc
or
mov
mov
inc
add
mov
aaa
push
aam
shll
repnz
out
pop
xor
or
aas
cld
or
ret
call
cmpsb
mov
mov
adc
daa
jecxz
nop
xchg
orb
aas
leave
add
ja
sbb
out
push
leave
lret
pop
xor
sbb
fdivrl
cmp
xlat
into
sub
jnp
mov
mov
mull
loope
fdivs
jbe
in
cmp
mov
sub
data16
inc
sub
lds
enter
rol
insb
sbb
shrb
xchg
pop
sbb
push
mov
mov
inc
jmp
mov
imul
rcrb
xchg
mov
adc
add
inc
mov
add
stos
push
xlat
dec
pop
add
mov
ja
repnz
cmc
loop
fcoml
xor
fmuls
push
shrb
jecxz
inc
inc
test
xchg
out
sbb
jmp
sbb
cld
mov
daa
in
mov
push
push
imul
xchg
cmp
idivl
sbb
and
push
mov
mov
popf
out
dec
push
or
mov
or
scas
out
popf
cmpsl
aaa
pop
and
inc
push
outsb
dec
movups
adc
push
insl
mov
jb
scas
daa
dec
mov
loop
add
dec
or
xor
lret
fcoms
repnz
push
daa
adc
jg
aas
icebp
push
in
xchg
gs
ficompl
aad
mov
pop
mov
cld
pop
lret
sarb
mov
int
sar
add
add
in
and
or
popa
jnp
jmp
fadds
cvtps2pi
and
jne
xchg
js
cmp
sbb
cmc
push
push
sti
insb
in
add
out
shl
fcompl
test
cmp
sti
inc
cmpb
push
sbb
dec
adc
pop
test
jnp
dec
mov
stos
sbb
sbb
adc
jns
fisttpll
mov
jno
xor
movsb
jecxz
notb
insl
sti
rolb
test
repnz
aad
inc
lods
icebp
sub
fildll
pop
pop
cmp
jge
cli
in
int3
sub
inc
dec
xchg
jg
inc
push
test
add
add
lret
push
arpl
mov
dec
in
stc
pushf
bound
mov
rolb
push
xchg
repnz
and
jp
or
jne
test
dec
outsb
push
and
mov
adc
xor
pop
loop
movups
sub
lods
lcall
pusha
les
fnstsw
and
cmp
or
jne
orl
jmp
dec
dec
or
ficoml
ja
jne
ds
stos
xor
imul
pop
cmp
mov
push
jo
fiadds
or
xchg
pop
dec
mov
out
or
sti
rorb
sti
mov
sbb
pusha
out
inc
enter
or
cli
into
cmp
xchg
dec
sbb
jge
sub
loop
mov
sbb
sub
rolb
pushf
test
lds
out
push
push
sbb
jp
push
xchg
cltd
sbb
fs
mov
pop
push
xchg
ss
sub
out
adc
or
cld
das
mov
add
fimuls
loop
mov
cld
adc
aaa
pushf
adc
clc
out
punpckhbw
and
dec
push
ljmp
test
je
pushf
gs
lods
mov
lret
fmuls
dec
pop
aad
andb
cmp
fldenv
mov
or
out
add
out
sbb
dec
add
cmp
ja
roll
push
aaa
rcll
outsl
cltd
ret
out
xchg
mov
into
adc
mov
fs
jg
adc
mov
mov
jb
lcall
testb
jb
jno,pn
mov
adcb
test
mov
sbb
fildl
mov
mov
mov
mov
dec
sub
push
rcll
xchg
fcoml
into
or
xchg
xchg
jle
test
add
xchg
mov
mov
or
sahf
dec
lfence
jmp
rcrb
aaa
pushf
out
repnz
dec
out
insb
inc
jb
sti
mov
jge
loop
inc
push
fimull
popa
push
test
and
enter
add
or
cltd
xor
add
lea
ret
sub
test
push
mov
std
out
ret
sbb
mov
xchg
sbb
push
dec
out
cmp
inc
iret
scas
ret
cmp
add
das
mov
mov
gs
nop
sti
ss
cmp
in
lahf
sbb
cmc
jg
sbb
mov
pushf
jge
fadds
xchg
sub
mov
jle
sbb
sub
inc
dec
sub
je
sub
pop
pop
int3
adc
push
mov
jge
lods
cld
add
xchg
lds
xor
xor
loope
pop
inc
mov
sbb
aas
pusha
xchg
push
lock
aaa
int3
jecxz
shr
xchg
jmp
fcompl
or
xchg
lods
addr16
ret
fsubs
jl
jle
jge
add
sub
jp
or
jne
sbb
add
stos
push
cwtl
dec
dec
xorl
sub
scas
sub
mov
notb
sbb
loope
sbb
mov
addr16
xchg
fcompl
cld
shll
cmp
stos
mov
loop
cmc
push
mov
scas
xor
rolb
aaa
or
mov
cmp
mov
mov
lods
ret
jae
mov
popa
ljmp
enter
iret
nop
ficoms
fdivl
jge
filds
cmpb
mov
sti
ja
lret
pusha
xchg
ret
aaa
roll
mov
jp
in
daa
or
cmp
sar
sbb
out
fisttpll
jne
js
inc
aad
addr16
lock
popf
jae
in
stc
cmp
scas
out
pop
mov
mov
ss
clc
jecxz
lods
addr16
adc
repz
jnp
xlat
xchg
mov
jae
adcl
outsl
dec
daa
dec
xchg
or
pop
push
xchg
dec
add
mov
in
or
sti
cmpsl
jno
int3
cltd
push
dec
add
js
jp
stos
sub
hlt
inc
sbb
or
mov
inc
pop
jle
add
dec
sbb
mov
repnz
aad
testl
sub
hlt
int3
adcl
and
into
xor
lds
flds
ja
pop
xlat
xchg
loop
lods
mov
inc
in
adcl
inc
mov
into
sti
daa
cwtl
mov
es
mov
xchg
adc
cmp
js
jno
test
loopne
or
xchg
dec
adc
loop
add
jnp
scas
insb
sbb
aad
daa
ret
or
pushl
out
sbb
cmp
leave
stos
pop
call
sahf
movb
movsb
shlb
xchg
into
jl
hlt
int3
ljmp
adc
add
iret
pop
dec
faddl
hlt
mov
pop
xchg
or
pop
mov
ja
sbb
or
pop
cmp
stos
ss
jecxz
add
mov
push
out
aaa
leave
inc
lcall
in
adc
scas
lcall
shrb
stc
pop
je
loopne
lcall
or
push
ret
adc
jnp
je
sub
cmp
push
xor
mov
hlt
mov
and
out
enter
fistpl
add
pop
decb
push
lock
push
dec
sbb
scas
call
cmp
mov
adc
pop
xor
jmp
add
and
inc
cltd
lods
pop
cltd
out
xchg
cmc
aad
dec
adc
pop
mov
lret
fisubl
outsl
out
and
shr
add
js
cmp
fldl
add
lret
sbb
stos
popa
lock
sti
std
push
in
lods
push
lcall
pushf
icebp
shrb
pop
dec
jle
arpl
into
push
inc
adcl
push
xor
or
repz
jge
adc
add
push
cmp
mov
dec
out
cmpb
or
dec
xor
add
js
data16
adc
dec
cmp
cltd
add
add
mov
stc
sub
fstpl
sbb
lret
and
rorl
jmp
out
addr16
and
cmp
add
mov
sub
inc
pop
or
lahf
cmp
jb
lret
stos
out
cmp
in
enter
jnp
cmp
mov
adc
sbb
les
inc
es
and
or
por
adc
jno
in
xor
jecxz
add
xchg
roll
and
sbb
mov
sub
fs
pop
xchg
xor
fcompl
pop
pushf
ljmp
cmp
fdivrl
jp
dec
mov
loop
jp
xor
fcoml
dec
xchg
faddp
mov
cmp
inc
or
fsubrl
mov
or
sbb
pavgb
xor
ds
jns
out
or
add
lcall
inc
or
push
mov
mov
stos
imulb
add
push
lcall
fistpll
add
adcl
pop
xor
xchg
repz
mov
xor
aam
sub
enter
mov
lea
repz
xor
lcall
jp
sahf
or
pushl
jns
mov
add
mov
fmull
mulb
mov
add
rcpps
adc
pop
sbb
aam
pop
outsb
lahf
sub
test
inc
jae
jg
inc
sub
lahf
lret
cmpsb
js
mov
push
dec
test
into
addr16
or
add
xchg
and
out
sbb
sbb
xchg
and
dec
add
ss
loop
test
sbb
imul
xchg
icebp
loope
mov
push
sub
jle
inc
mov
rcrl
adc
mov
mov
repz
add
cmpl
mov
dec
dec
sbb
push
sub
cmp
adc
and
ficoms
std
shll
mov
sarb
cmpb
ss
outsb
stos
push
mov
sbb
popa
sub
xchg
stc
push
shr
out
mov
adc
repnz
fldl
push
jns
cwtl
inc
aaa
sub
rclb
movl
mov
jbe
jnp
out
fisttpll
sub
jmp
lods
leave
mov
inc
cld
aas
jp
js
push
das
lahf
rolb
mov
mov
inc
rcrb
push
clc
dec
add
faddl
pop
mov
xchg
mov
hlt
pcmpeqw
cmpsl
adc
dec
xchg
cmpsl
cmp
daa
add
xchg
add
jmp
mov
or
cld
notb
fsubl
mov
mov
imul
xchg
out
inc
rolb
jb
test
scas
rclb
out
setge
adc
xchg
xchg
sbb
fs
xor
cmp
xor
and
add
mov
pop
inc
lods
mov
stos
dec
jp
outsl
pusha
btr
sub
mov
repz
popa
mov
jge
and
xchg
jecxz
rclb
cmp
sub
mov
xchg
or
or
adc
lods
je
sub
dec
stos
push
or
xchg
xchg
cmp
add
xchg
fucomp
adc
enter
sub
enter
jge
js
add
nop
jns
cmp
sbb
outsl
aas
into
pop
mov
cs
inc
iret
cmp
fsubl
and
loop
testl
popf
loopne
jne
inc
ret
inc
lcall
enter
sbb
adc
mov
sahf
scas
rclb
jb
inc
pop
cmp
daa
dec
cs
mov
inc
sub
loope
imul
lret
inc
jne
jns
fnstsw
mov
mov
int3
sti
leave
add
sti
js
mov
pop
pop
js
test
out
test
or
es
and
shrb
les
test
sub
inc
nop
lcall
in
call
fs
lods
flds
int3
add
sub
pop
jb
and
aad
adcl
add
testl
inc
shr
or
sahf
jno
test
or
mov
adc
mov
aad
push
into
mov
sti
out
lds
push
in
adc
jne
test
mov
subb
int
loopne
or
push
lock
jmp
mov
mov
mov
inc
cmp
sbb
jmp
sub
aad
xor
cmp
adc
bound
dec
add
pop
add
insl
lret
dec
imul
mov
lods
jne
push
mov
lea
jecxz
arpl
cli
inc
test
in
push
out
add
xor
xor
inc
arpl
push
ds
mov
dec
dec
movsl
lea
adc
lret
lret
test
or
leave
mov
mov
mov
pop
in
sti
mov
rcr
jbe
xchg
and
out
in
lds
cwtl
jb
sub
test
and
outsl
lret
add
fldenv
cmc
fwait
loop
mov
xchg
cltd
xor
mov
dec
ret
inc
fimull
sarl
out
push
pushf
cmp
push
inc
rclb
ss
dec
out
cmp
sub
sbb
int3
push
rcll
or
mov
mov
xchg
inc
hlt
add
push
lods
lret
out
push
mov
add
jp
js
adc
inc
xchg
inc
mov
jl
xchg
mov
push
mov
add
jp
mov
shl
cmp
pusha
jns
call
aas
fsubs
add
loop
jg
pop
out
mov
adc
dec
cld
dec
mov
dec
sbb
xchg
or
mov
loop
rcrb
clc
adc
ja
mov
cmc
loopne
lahf
mov
iret
jb
jg
sti
or
adc
sub
push
into
add
scas
rcll
adcl
fistl
in
insl
cmc
andb
mov
ja
push
xor
add
or
lret
sub
std
bound
add
pop
test
dec
adc
jne
push
stos
stos
push
and
jecxz
pop
lds
push
outsl
xor
sub
mov
sbb
add
iret
scas
jno
in
and
xlat
mov
sbb
in
cmp
iret
sahf
mov
xchg
jmp
je
add
inc
dec
popl
adc
mov
fstp
cltd
inc
dec
mov
lcall
push
push
and
sbb
clc
shl
cmp
jns
pop
scas
mov
imul
pop
cmpsb
and
xchg
pop
push
xchg
inc
and
rclb
jl
cmp
sahf
dec
inc
xor
add
out
or
cmp
mov
pusha
add
mov
cwtl
push
jp
arpl
add
and
in
scas
or
cld
mov
and
mov
and
shll
or
dec
lret
out
idivb
dec
das
cmp
push
in
loope
sub
sbb
addb
stos
sub
mov
mov
aad
inc
fidivrl
cltd
xchg
mov
inc
sti
mov
loop
pushf
xchg
or
push
dec
mov
stos
orb
add
mov
stos
push
movsb
in
pop
dec
add
xchg
dec
enter
lock
add
ss
iret
push
sbb
add
sub
mov
sahf
leave
xor
jge
mov
pushw
lock
out
pop
inc
push
dec
rcll
sar
in
cmp
push
or
adc
nop
push
mov
pop
into
aaa
outsl
pop
test
ds
pop
aas
adc
xor
cmpsb
outsb
jp
repz
push
sbb
jno
inc
loopne
add
loop
sbb
add
or
pop
push
and
push
or
adc
xor
sub
add
int3
mov
sti
mov
js
ret
pusha
sbb
xor
dec
sub
inc
mov
and
inc
pop
imul
ds
and
ficoms
in
or
lds
repz
loope
mov
adc
mov
push
inc
int
mov
rep
xor
mov
popf
inc
shrb
and
sbb
add
js
sbb
pop
add
adc
popa
pop
dec
inc
popf
mov
mov
imul
outsl
sub
popa
push
and
dec
sub
mov
mov
lds
dec
jo
adc
xor
jecxz
push
out
xchg
imul
mov
rclb
xchg
insb
loop
ss
add
sahf
and
or
bound
dec
rclb
enter
mov
push
cmpsb
pop
push
fdivl
pop
jl
fwait
jne
lea
cltd
inc
aam
xchg
cli
mov
ret
aas
lcall
or
fldcw
mov
jo
pop
add
dec
sbb
pop
sbb
pushf
sub
cltd
sahf
mov
cmp
test
jmp
das
rorl
mov
stos
ret
es
mov
xchg
sbb
mov
mov
inc
stos
sbb
or
pop
daa
mov
stos
mov
ja
mov
inc
ret
sbb
test
push
cltd
addl
aad
and
adc
add
aad
lea
rcrl
lret
bound
inc
fadd
aad
out
pop
mov
inc
sbb
fcoml
es
scas
dec
cli
xchg
insb
mov
add
or
int3
jl
push
push
mov
dec
add
cld
xor
outsl
jg
mov
xor
aam
add
outsb
inc
stos
loop
in
cld
mov
jp
mov
push
sbb
insl
and
mov
push
test
lds
jnp
cltd
sti
stos
jnp
mov
sub
jne
shl
popa
out
idivb
cmc
std
pop
test
inc
mov
fs
sar
jmp
dec
or
jb
sbb
xlat
mov
arpl
daa
iret
dec
cmpsb
mov
mov
fistl
inc
rclb
jnp
or
sub
mov
and
push
jp
jle
inc
inc
inc
jne
sub
jmp
push
xlat
jne
and
pop
jns
jmp
mov
and
imul
add
sbb
sub
dec
sub
je
push
push
insb
cmp
mov
add
or
in
adc
rclb
mov
adc
sbb
push
sbb
jl
repnz
in
out
sbb
movsl
aad
inc
mov
mov
ficompl
sub
push
cmp
out
pop
and
repnz
clc
aas
xchg
pop
sti
addl
or
inc
imul
fdivrl
jno
fnsave
jecxz
aas
sti
pop
pop
mov
shll
inc
pop
add
fdivrs
sbb
sbb
jnp
dec
push
push
les
ds
push
int3
jnp
pop
cwtl
xlat
dec
ds
insl
rcr
mov
push
fucomi
out
xor
xchg
or
jno
mov
imul
mov
adc
jl
push
push
pop
mov
mov
sub
out
jp
sbbl
test
gs
mov
mov
jge
test
test
sti
lds
push
mov
pmullw
add
shr
or
push
shll
popf
jae
push
adc
mov
sbb
mov
lods
int3
push
inc
lret
fimull
out
xor
dec
cwtl
and
std
mov
jecxz
cmpsb
mov
push
addr16
or
mov
push
rcrl
cli
sti
int
pop
fsubr
cmp
cs
xchg
xor
xchg
iret
test
loop
pop
sbb
lret
and
lock
or
dec
xor
sub
dec
jecxz
inc
popf
mov
imul
insl
insb
out
or
dec
bound
xor
cmc
adc
mov
insl
sub
cmp
or
xchg
cli
clc
lods
fisubrl
or
jle
jl
adc
push
cli
repz
and
xchg
cs
push
dec
hlt
xorl
push
adc
scas
or
add
sub
fidivl
cmc
xor
sbb
or
and
push
sbb
push
mov
daa
into
inc
popl
xchg
dec
mov
icebp
stos
xchg
ja
jl
popa
push
pop
jne
mov
add
loope
dec
inc
pusha
jmp
xor
mov
and
push
dec
jne
in
jo
mov
cmp
adcb
into
mov
movsl
add
cli
push
mov
sub
lret
or
adc
fadds
mov
or
pop
sbb
addr16
push
dec
addb
push
sbb
sbb
std
sahf
jp
jg
or
mov
lock
repnz
movsb
dec
xchg
or
outsb
je
or
mov
cltd
dec
rcrl
xor
xchg
xchg
incb
lret
mov
repz
gs
andb
jg
or
push
cwtl
notl
or
sbb
imul
dec
adc
mov
fcmovb
push
cmp
scas
lretw
decl
push
xor
or
fsubrs
lock
test
add
or
mov
scas
enter
adc
test
and
lds
or
mov
into
lcall
push
xrelease
mov
pop
xchg
adc
or
jns
mov
or
cmc
in
cmp
xor
out
rorb
test
adc
les
sbb
mov
cld
adc
push
sahf
decl
loope
cmp
sub
dec
cmpsl
mov
inc
andb
sub
add
jl
sbb
lret
sub
pop
add
push
and
mov
add
mov
enter
cmp
scas
pop
xorb
sub
insl
dec
inc
adc
mov
in
fisttpll
repz
shrl
add
xchg
sbb
push
add
xchg
adc
or
pop
fdivr
mov
nop
fcmovbe
cmc
xor
test
insl
adc
add
cmp
in
int3
js
add
add
push
inc
repz
push
bnd
fldl
outsb
push
push
jno
pop
add
rcrl
in
jg
ficoms
test
in
push
sbb
popa
mov
mov
sbb
int
fistps
xchg
mov
mov
push
mov
int
insb
push
movsb
mov
and
ret
test
or
gs
stos
shr
jge
outsl
fbstp
lods
pop
inc
and
or
cmpsl
out
test
pop
outsb
cmp
aas
testl
mov
filds
shrl
and
out
ret
mov
jne
mov
or
pop
in
and
fsubrl
popf
xlat
cmc
rol
add
sub
mov
or
inc
pop
mov
in
bnd
scas
lock
call
or
ljmp
xchg
inc
enter
push
fmull
jns
imul
or
ss
enter
je
int3
push
shrl
jbe
aas
cmp
std
pusha
xorb
fimuls
cmc
push
cmpsb
mov
inc
fisttps
dec
dec
or
cli
and
dec
or
fs
xchg
daa
or
loop
push
popa
or
ss
into
cmpsb
pop
and
adc
sub
add
lahf
mov
js
lods
int3
fcomps
nop
jo
aaa
addb
loope
pop
push
push
push
aad
aas
mov
cmpsl
repnz
decl
add
xchg
and
mov
or
mov
jl
insb
jns
jo
movsb
jmp
dec
or
mov
negl
lret
arpl
popf
pop
ret
push
bound
je
cltd
adc
iret
jae
or
fisttpll
lods
das
mov
insl
push
sbb
lds
repz
dec
movsl
lcall
xchg
rorb
mov
push
mov
mov
mov
fisttpl
pop
mov
pop
add
repz
ja
popa
rcrl
adc
jmp
dec
add
test
adc
inc
test
cltd
or
adc
inc
aad
and
stos
cmc
cmp
pop
xchg
mov
hlt
ret
hlt
in
cmp
lret
enter
and
adc
rcll
out
addr16
jb
stos
add
xor
push
aam
or
addb
xchg
cmpb
sbb
dec
xchg
pushf
test
out
jl
mov
jmp
hlt
sbb
fwait
insl
inc
mov
popl
xchg
fs
imul
adc
mov
fildll
inc
jle
je
mov
jb
sub
adc
ds
xor
nop
hlt
mov
push
add
out
sub
sti
mov
outsl
shlb
in
cmc
lcall
mov
out
fimull
out
or
mov
xor
dec
in
loope
cmp
cltd
add
mov
mov
cwtl
mov
lods
out
push
cli
xor
lret
jnp
mov
outsb
scas
xor
clc
mov
fisubl
sub
aas
pop
js
xor
ret
mov
or
jne
mov
push
jle
add
scas
pop
adc
jnp
cltd
dec
mov
mov
adc
hlt
lods
push
iret
fstp
xchg
ret
outsl
aam
fwait
imul
ret
popf
punpckhwd
mov
mov
fnstenv
lret
jne
or
push
mov
out
incl
sub
or
pushf
push
aam
push
xchg
in
int3
sub
rorb
sub
mov
xor
repnz
mov
popf
sbbb
daa
fmuls
add
insb
divb
xchg
cld
cmpsb
xchg
ljmp
fildl
jg
dec
aam
in
sbb
jge
fidivrs
jmp
scas
jecxz
cltd
mov
icebp
cmpsl
dec
cmpsl
jecxz
bound
cld
rclb
mov
ret
xchg
dec
sahf
inc
push
mov
addb
imul
ficoml
jo
jne
sbb
out
cmp
mov
in
xchg
xor
sti
roll
add
in
fbld
jo
leave
pandn
testl
xchg
movsb
xchg
gs
inc
jns
xchg
mov
xor
aad
jne
stos
sbb
adc
sbb
sub
jle
xor
scas
stc
dec
cltd
mov
repnz
jp
stos
cmc
or
aaa
fcom
ret
mov
test
mov
cmp
jns
pop
sub
xor
lock
mov
cwtl
adc
insb
stc
mov
jl
fdivs
xor
or
mov
fists
enter
mov
pop
jnp
mov
repz
adc
inc
lret
dec
int3
sbb
xor
add
popf
enter
adc
add
imul
dec
dec
nop
stos
xchg
int3
jne
add
loop
jmp
and
testl
lret
or
mov
into
adc
sbb
jmp
push
pushf
mov
xchg
popa
les
fisubl
inc
rep
shrb
aad
idivl
outsb
cmp
cwtl
repnz
imul
out
adc
push
jns
or
bound
dec
or
aam
mov
sub
int3
dec
add
add
repnz
adc
int
int3
mov
sub
xchg
mov
insb
pop
js
push
insl
sbb
pusha
push
iret
jbe
std
jmp
cwtl
xor
lret
adc
ljmp
inc
in
ret
inc
xchg
lret
xor
lods
pusha
xchg
cmp
shrb
rorb
hlt
adc
sbb
mov
icebp
lods
adc
cmpsb
pop
sub
stos
and
stos
imull
sbb
jae
or
jns
jne
fucomp
shlb
rclb
xchg
daa
add
mov
push
push
ret
rcrl
iret
jae,pt
popa
pop
in
out
sbb
xchg
push
insl
test
add
inc
aaa
into
push
push
or
xchg
cmpsl
in
dec
subl
int
hlt
and
ja
imul
ret
outsb
out
ds
addr16
fnstenv
in
out
mov
scas
mov
xor
movsl
sbbb
dec
ss
xchg
mov
lret
shrb
inc
adc
push
outsb
lahf
mov
rcrb
cmp
cld
inc
mov
add
push
mov
aam
mov
mov
adcl
negl
sbb
jmp
xor
push
dec
jmp
and
data16
add
cmp
pop
loope
roll
data16
loop
sub
orb
stc
mov
dec
test
xchg
push
lret
add
adc
cmp
xor
sbb
ds
sub
shl
insl
lods
int
mov
das
mov
sbb
out
andb
lret
xchg
push
pop
int
pop
cmpsb
test
xchg
bound
sbb
mov
das
xor
rcrb
cld
ret
adc
push
adc
das
push
pusha
and
mov
mov
lea
sti
fldcw
popf
cmpsb
push
cmp
arpl
add
pushf
push
mov
aam
out
push
mov
jecxz
inc
in
fcoml
sarl
fidivl
cmc
pop
cmp
push
imul
imul
xor
int
mov
adc
or
test
dec
fistpll
fisubrl
sbb
add
add
repnz
mov
rorl
inc
adc
pop
ret
shrl
adc
pop
into
into
push
insb
outsb
mov
mov
push
or
mov
sub
push
jne
pop
sub
push
dec
mov
into
dec
adc
adc
inc
scas
data16
jmp
out
add
push
clc
shlb
data16
sub
or
sub
imul
out
push
shlb
jecxz
mov
xchg
loop
sub
ds
adc
or
jp
jp
out
lret
push
pop
jp
jmp
shll
roll
ss
fmull
imul
shr
push
jle
ss
xor
sbb
int
ds
add
mov
push
dec
out
add
mov
or
or
adc
or
loop
inc
fmull
test
call
or
inc
mov
int
xlat
aas
push
push
or
push
imulb
hlt
pop
orb
jge
in
add
inc
lods
push
hlt
lods
sahf
sub
sbb
dec
push
xchg
jecxz
cld
gs
or
and
or
shlb
rcll
cmp
bound
fisttpll
pop
xor
lcall
jl
pop
add
cli
cmp
push
rorb
mov
add
jp
rorl
ds
sub
pop
push
test
sub
xor
addr16
or
inc
xchg
in
or
adcb
das
cmp
add
inc
adc
push
mov
mov
mov
ret
inc
mov
insb
std
push
mov
mov
test
xchg
out
std
sbb
or
orb
cltd
mov
or
dec
xlat
inc
jmp
popa
mov
jge,pt
push
testl
pop
or
push
mov
inc
or
lods
xor
ret
cs
mov
and
cmp
sub
outsl
jnp
add
or
mov
inc
rcl
or
mov
das
sub
sub
adc
inc
or
popf
gs
and
sub
mov
pop
pushf
lock
mov
mov
mov
xor
mov
lds
lods
les
cmpsb
shll
mov
adc
out
lods
jns
jmp
pop
or
sbb
cmp
sub
cmp
out
lea
imul
add
and
or
out
lods
push
lods
pushf
adc
scas
lcall
or
sub
or
sub
push
mov
sbb
stc
leave
mov
or
outsl
cwtl
mov
mov
fsts
add
dec
or
push
cli
add
push
and
push
cwtl
push
or
ret
push
pushw
aas
dec
jge
add
or
mul
jge
fildll
cmpl
push
cmp
fstl
sbb
xor
pop
loop
addr16
or
and
cmp
sub
and
sti
scas
stos
int
or
cwtl
and
adc
adc
xchg
imul
or
mov
imul
push
outsb
movsb
rorb
dec
and
add
xchg
jne
mov
lods
sbb
jmp
xchg
mov
xchg
mov
sub
ds
sbb
push
and
and
jp
push
subl
mov
cmc
pop
lret
or
or
fimull
mov
adc
orw
or
in
or
mov
insb
insb
insl
ret
adc
push
fdivl
jae
jmp
je
pop
push
and
xor
imul
xchg
xchg
xlat
or
mov
ja
jle
xchg
and
out
repz
es
sbb
pusha
cmc
arpl
nopl
sbb
enter
lds
cwtl
dec
in
mov
xchg
pop
testb
lods
mov
in
call
int3
jecxz
cmpsl
pushl
or
and
xchg
lods
jl
es
inc
push
inc
mov
pop
clc
or
mov
mov
xor
int
add
xor
pop
inc
xchg
pusha
leave
jmp
or
test
aad
stos
paddusw
pop
sbb
xchg
imul
inc
call
orps
or
repnz
aaa
or
pushf
mov
shr
mov
js
fs
repnz
jle
adc
jp
or
sbb
sub
lods
sbb
inc
shrd
in
sub
cli
testl
fdivp
pop
movsl
xor
fisttpll
xor
ja
es
sarb
and
add
pop
or
pop
push
sbb
mov
in
jns
cld
jno
or
inc
adc
stos
jmp
call
adc
xchg
sub
xor
fidivrs
lahf
mov
inc
adc
sahf
mov
es
outsb
lock
or
imul
pop
mov
mov
dec
addr16
aaa
xor
sub
add
mov
in
jp
lock
or
fwait
pop
push
or
xlat
xchg
sub
add
lea
test
inc
lret
or
add
pop
cli
and
pushf
push
pop
xchg
push
rolb
insl
or
ficompl
out
lds
jmp
shll
dec
add
jge
sbb
mov
lods
lods
scas
mov
adc
addr16
mov
and
and
cli
xor
adcl
xorb
and
push
mov
sub
or
loopne
jae
int3
ja
push
lahf
add
movsb
mov
sbb
jno
ret
and
popf
test
or
adc
dec
mov
or
mov
into
xchg
mov
jmp
sub
adc
adc
out
shrl
sbb
xchg
in
lds
imul
arpl
decb
lcall
mov
jle
sarl
cmp
pop
lret
in
or
in
and
xchg
mov
call
cmp
inc
adc
bound
int
jmp
or
clc
sbb
test
stc
sbb
jg
pop
test
push
cli
add
ds
ja
xchg
mov
stos
icebp
loope
and
or
mov
mov
out
icebp
xor
or
pop
jbe
mov
fstps
rep
push
or
jb
out
sub
and
add
push
sbb
lods
mov
inc
adcl
sar
inc
mov
jo
pop
mov
lret
cli
sahf
mov
ja
push
pop
adc
push
loope
or
xchg
inc
fs
sub
push
adc
pop
or
dec
rcr
outsb
mov
lahf
lret
sbb
lods
add
sbb
int3
mov
xor
loope
popl
lret
popf
xchg
repnz
ja
stos
or
push
pop
movsb
mov
dec
mov
sbb
sub
mov
in
mov
or
sub
mov
out
movsl
adc
rclb
ljmp
sub
out
cmp
adc
in
sub
sar
shll
sbb
mov
dec
mov
adc
imul
cs
sbb
push
push
jp
cltd
ljmp
jmp
ror
or
hlt
mov
or
cmp
insl
cmp
xchg
in
adc
dec
addr16
fmull
mov
cmp
or
xchg
in
divb
ficoms
decl
pop
unpcklps
test
adc
mov
or
push
int
lods
or
test
adc
mov
mov
jo
mov
add
xor
or
popa
adc
cmc
int
ret
movsb
push
out
dec
mov
shlb
jg
aas
pop
lret
out
shlb
inc
test
mov
int
idiv
sbb
mov
xchg
stos
jns
movsl
or
cltd
cmp
shl
scas
js
add
jnp
push
into
ja
pushl
add
add
cmp
push
mulb
pop
mov
dec
orl
pushf
dec
int
testb
jae
lcall
xlat
cmp
jecxz
mov
daa
mov
test
out
push
push
adc
repz
xchg
cmp
jno
stos
xchg
push
nop
fldenv
out
jle
iret
fs
stos
adc
repnz
jecxz
enter
loope
dec
fcomip
jmp
adc
pushf
hlt
xor
filds
int
dec
or
inc
mov
pushf
push
iret
adc
cmp
outsl
add
push
movsb
jbe
test
mov
pop
gs
subb
int
mov
add
fwait
cmp
and
clc
dec
sbbb
mov
xor
in
aas
xor
xor
xor
addb
hlt
jns
inc
mov
jne
push
popa
cld
testb
out
out
cmpsl
and
adc
insl
daa
rorl
push
repz
shlb
bound
aad
and
cmpsl
popa
out
cmp
push
in
sbb
pushf
outsl
int
icebp
inc
mov
pusha
dec
fcomps
push
xchg
mov
jle
repz
push
mov
call
aam
xchg
sbb
xor
sbb
sub
std
and
pop
in
mov
nop
in
daa
enter
rorl
add
adc
mov
adc
call
aam
stos
and
mov
arpl
cltd
jo
outsl
imul
outsb
ror
add
and
sub
sub
fdiv
mov
push
leave
movsl
xchg
xchg
xchg
out
mov
cltd
or
pop
pop
loopne
mov
jnp
xchg
std
inc
clc
push
mov
cs
test
cld
std
adc
pop
popf
mov
mov
loop
int3
xchg
cli
adc
mov
xchg
jecxz
dec
xchg
ds
xor
or
dec
ds
mov
lods
jae
dec
jo
ljmp
or
cmpsb
test
dec
sbb
lods
daa
andb
test
mov
mov
mov
xor
jae
imul
pop
fnstsw
or
sti
mov
mov
xorl
sti
imul
xor
lock
test
sbb
out
bnd
jns
sbb
cld
jb
xor
push
outsb
pop
adc
inc
dec
inc
jg
jecxz
add
aam
jnp
push
pop
les
mov
adc
mov
sbb
rolb
mov
popf
add
pop
jl
inc
adc
push
test
adc
jno
arpl
mov
pop
pop
add
popf
mov
repnz
add
add
mov
shlb
xchg
int3
or
int3
xchg
hlt
inc
xchg
mov
pop
cmpsl
pop
jecxz
insl
jne,pt
mov
add
shl
fcoms
dec
lock
jae
daa
lret
outsb
mov
xchg
push
pop
and
jmp
aas
add
stos
jb
mov
cmpb
scas
loopne
push
jno
dec
cmpsb
out
std
test
and
aaa
cmp
jle
ficompl
push
imul
sub
push
xor
out
pop
mov
add
mov
ror
sub
in
mov
aas
test
xor
xchg
lods
lods
psraw
sub
xlat
add
sbb
in
or
jns
rolb
xchg
and
icebp
mov
inc
fidivl
add
sub
push
rcr
mov
jb
cwtl
orb
hlt
push
aas
daa
sub
and
push
pop
inc
and
add
out
sub
lret
pusha
jecxz
fcmovbe
xchg
push
xchg
xor
dec
push
aaa
bound
fadds
lods
aaa
stos
ljmp
popa
dec
fstl
xor
and
sbb
mov
stc
adc
or
mov
pusha
test
mov
adc
dec
cli
jno
dec
pushf
stos
scas
popa
lea
xor
insb
add
call
xor
shrl
aad
push
xchg
stos
xchg
mov
je
and
imul
xlat
mov
mov
xchg
stos
mov
idivl
inc
in
push
lea
js
dec
sti
jp
push
and
sub
iret
int
push
ds
or
negb
fs
lcall
outsb
xor
mov
mov
add
adcb
push
lret
or
inc
arpl
jnp
and
sti
sbb
clc
popa
jbe
xchg
dec
sbb
mov
in
dec
or
push
sub
pop
int3
add
jge
fsts
fdivrl
sbb
add
sub
add
loop
mov
jbe
scas
sbb
pop
jnp
jg
dec
rolb
adc
pop
add
orb
popa
mov
inc
or
or
cld
adc
out
xchg
adc
stos
or
ret
bound
and
aaa
jecxz
iret
data16
push
popa
add
adc
mov
mov
pop
test
pop
into
and
push
and
jmp
inc
test
cmpsl
jnp
jge
sbb
das
add
ja
or
data16
cmp
icebp
sbb
sub
mov
jo
test
xor
lods
push
mov
adc
dec
cmpsb
enter
call
cmp
and
test
js
jns
mov
mov
adc
pop
cmp
adc
loop
mov
mov
fdiv
or
cmp
fs
xor
sbb
arpl
sbb
sbb
sbb
dec
xor
outsb
pop
int3
push
pop
mov
and
out
orl
aaa
jne
cltd
pop
mov
lret
adc
dec
scas
fucomp
pusha
adc
iret
lret
jge
mov
pop
lcall
iret
push
pop
outsb
fidivl
stos
pop
pushf
xchg
faddl
bound
lods
adc
pop
xchg
out
push
jecxz
cmp
push
loope
adc
mov
push
mov
sbb
lcall
cmp
cltd
shr
sbb
or
jle
lods
lret
xchg
adc
jbe
fimuls
jb
fmull
sub
jo
bndstx
andb
iret
rolb
cmc
adc
fildll
ds
add
orb
or
dec
dec
mov
repz
pusha
scas
fs
add
loopw
cwtl
shl
jge
ret
dec
pop
in
fs
xorl
mov
push
dec
push
lahf
dec
xor
inc
sbb
cmp
daa
and
icebp
add
inc
subl
incb
out
jnp
es
sarb
lods
mov
ret
xchg
jno
xor
add
and
dec
sti
in
inc
push
push
jno
out
adc
dec
and
stos
test
and
pop
shr
sbb
push
mov
rcll
mov
stos
push
lcall
or
push
bound
sub
nop
fisubrs
insl
jne
adc
mov
pop
xor
xor
mov
lahf
out
mov
cmp
insl
xlat
jnp
push
add
out
xor
outsb
mov
int3
push
jg
mov
sub
sbb
inc
inc
mov
in
or
adc
dec
shll
push
jae
push
out
sbb
pop
insb
out
out
dec
mov
or
fldt
cmp
push
je
add
dec
or
adc
int3
ret
mov
testb
cmp
addr16
jno
testl
jmp
push
xchg
and
xor
xchg
xor
sbb
cld
mov
cmp
cmp
test
sub
ret
inc
cmp
mov
inc
in
lods
mov
jl
xchg
popa
or
repz
out
lods
adc
jge
push
push
insl
lods
sahf
call
iret
stos
mov
lds
or
ror
jno
stos
push
mov
xchg
stos
insb
or
adc
pushl
movsl
xchg
cmp
and
bound
push
xlat
pop
cltd
sub
xor
add
scas
sbb
fdivrs
xor
rep
add
inc
xchg
into
or
jae
aam
push
fbld
adc
clc
iret
cmp
sub
adc
jmp
push
xchg
fcmovnu
repnz
aas
lock
loop
push
adc
and
daa
mov
cld
ds
or
insb
ja
test
fists
iret
out
cmp
outsb
inc
push
test
jmp
inc
icebp
lds
mov
sbb
push
daa
lret
xchg
adc
mov
out
dec
add
or
dec
pop
xor
aas
xchg
add
jns
adc
pushl
xor
ret
sub
sti
xor
mov
movsb
stos
mov
xchg
mov
mov
scas
insl
popa
lods
cmp
fs
cmp
dec
lock
clc
daa
cmc
add
inc
aad
cwtl
in
pop
mov
loopne
aam
jge
dec
xchg
xchg
call
mov
loopne
pop
inc
cwtl
pop
mov
lret
lea
sub
addr16
mov
scas
xchg
daa
lcall
pop
jb
lret
mov
sti
mov
adc
xchg
cmp
mov
shlb
out
pop
pusha
add
lock
outsl
or
repnz
push
or
lret
lea
mov
icebp
addr16
int
add
sbb
xor
add
add
lods
and
sti
dec
ja
lds
or
in
and
je
daa
push
jnp
mov
lret
loope
dec
or
inc
rclb
or
pop
shlb
shll
enter
rol
sbb
mov
cmp
sbb
ret
lret
adc
cmc
arpl
and
add
push
dec
inc
lret
cmp
cmc
and
pop
mov
js
pop
push
jmp
subb
jl
xor
dec
add
popf
test
jp
mov
popa
add
adc
jecxz
cmp
shrb
jnp
sar
daa
insl
shl
pop
insb
adc
sub
les
mov
lret
cltd
sub
push
sbb
jo
ret
sub
xor
dec
addr16
add
add
cltd
inc
iret
movsb
push
adc
inc
sarb
xlat
jo
cmpsl
insl
and
in
dec
scas
mov
lcall
aad
xlat
les
clc
lea
adcb
sahf
inc
sbb
mov
in
add
or
das
ficomps
movsl
sbb
lret
lret
mov
xchg
sub
jle
ret
or
cwtl
ljmp
xlat
frstor
pop
inc
xchg
pop
sbb
repnz
adc
ja
mov
lcall
mov
and
lods
fsts
hlt
mov
cwtl
dec
in
sbb
mov
jge
sub
mov
or
add
sbb
jae
pop
pop
push
mov
out
push
ljmp
push
and
pop
pop
cmp
mov
outsb
push
push
cmp
cmp
adc
or
add
scas
sub
faddl
cmp
rcrb
ds
div
push
lods
fldpi
orb
sarl
lods
sarb
shlb
add
or
mov
icebp
punpcklbw
jns
out
jecxz
imul
in
scas
adc
mov
push
mov
mov
test
int3
mov
lcall
cmp
adc
add
sub
pop
and
mov
in
bound
push
aad
jb
aad
fadd
lock
mov
aaa
out
repz
in
scas
out
add
dec
stos
xchg
fstpt
inc
sti
sti
sbb
or
jp
add
sbb
daa
jne
mov
xchg
scas
adc
shrl
xor
rolb
stos
sbb
jp
into
call
xor
test
insb
inc
push
aaa
js
inc
or
mov
imul
mov
or
fimull
sbb
outsb
or
cmp
sub
test
fcoml
mov
jp
jno
pusha
mov
rclb
out
lds
das
mov
test
ljmp
cmp
lret
or
adc
pop
mov
out
cmp
mov
cmp
out
push
stos
cs
test
fs
and
sti
adc
xor
rcrb
rolb
and
insl
lret
push
out
cmp
jge
popf
or
stos
sarl
and
repz
pushf
or
outsb
sbb
clc
xchg
repz
add
lcall
leave
inc
gs
adc
test
mov
rolb
pop
out
mov
cmpsl
sbbb
or
adc
ss
push
je
scas
add
adc
sub
add
in
jbe
sbb
int3
rcl
push
adc
dec
bound
mov
je
ret
cmp
xchg
cld
rolb
jae
ret
cmc
xor
hlt
or
xchg
push
int
lea
rcll
mov
xor
cmp
jecxz
and
scas
push
divl
loop
pop
push
mov
pop
inc
and
out
lods
sbb
hlt
sbb
xchg
fsub
sub
xchg
mov
inc
sar
mov
inc
jge
xor
out
xchg
xchg
adc
aam
aad
pop
push
adc
negl
test
dec
jmp
add
push
fldt
mov
push
push
xchg
pop
int3
out
repnz
insb
mov
or
pop
sub
mov
mov
out
loope
scas
push
jne
insb
add
popa
dec
jne
push
mov
aam
in
out
sub
add
stos
scas
out
sub
and
cld
int
fsubs
xlat
mov
sbb
mov
divb
inc
shrl
lret
mov
imul
sahf
fiadds
out
movsb
int3
mov
cli
dec
mov
int3
movsl
divb
scas
inc
pushf
adc
adc
call
push
adc
cli
outsb
shl
jnp
dec
jbe
pop
repnz
mov
sub
dec
jle
cmp
and
cmpsb
repz
xor
cmc
in
cld
into
out
cltd
and
sub
out
mov
jns
leave
dec
test
push
mov
mov
mov
adc
pop
add
sbb
movsl
negl
mov
ret
pop
pushl
jne
jl
fs
lds
fidivrl
xchg
iret
or
pop
or
es
dec
je
sub
inc
roll
mov
and
pop
movsl
pop
mov
inc
push
adc
mov
xchg
lea
jl
xor
test
mov
ss
outsb
fiaddl
mov
ljmp
addb
cmpsl
pop
cmc
inc
lret
imul
popf
imul
add
sti
cs
adc
negb
add
clc
stos
add
popf
loop
ss
lahf
pop
dec
je
push
mov
fdivr
adc
cmpsl
sbb
push
sub
out
fs
adc
push
mov
out
sbb
iret
jmp
add
inc
fbstp
lcall
std
ljmp
popa
mov
iret
mov
loop
sti
inc
scas
adc
stos
or
jle
adc
stos
ret
xchg
dec
ret
sub
mov
jmp
stos
jns
iret
mov
inc
pop
sbb
xchg
xchg
movsl
test
sbb
sub
out
adc
bound
jno
inc
imul
xchg
xor
mov
bound
insl
iret
stos
mov
cltd
push
push
popf
scas
cltd
xor
jb
mov
mov
pop
jmp
or
sub
pop
enter
cmc
movsl
pop
add
aaa
xlat
cmpsl
stos
ret
and
xor
jne
mov
lret
xor
cld
sbb
popf
adc
xchg
cwtl
xchg
shll
cmpsb
dec
xlat
mov
or
sub
dec
into
test
pop
repnz
dec
sbb
inc
add
push
enter
out
mov
adc
xchg
mov
out
les
rorb
hlt
jmp
pop
and
adc
stos
fwait
out
mov
mov
jbe
roll
shrb
xchg
dec
fsubrp
sub
push
adc
cmp
inc
dec
jmp
dec
in
inc
or
xlat
xchg
xor
incl
ds
test
stos
add
jmp
mov
cltd
int3
mov
js
sahf
sarb
sbb
cltd
aam
rol
icebp
addb
sti
xchg
add
out
data16
enter
insl
and
cmc
arpl
add
push
mov
push
jns
divb
test
dec
and
sbb
xchg
fmull
cmp
out
jmp
cmp
xchg
lcall
movl
sub
mov
pop
popf
clc
es
or
or
inc
mov
addr16
or
mov
jge
out
pop
push
adc
ja
lret
and
mov
fwait
jb
clc
js
or
ret
sbb
sub
cmp
test
sbb
outsb
push
ret
adc
pop
ret
jne
mov
sbb
repz
mov
mov
mov
hlt
sti
or
pop
adc
xorb
pushf
loopne
clc
jns
pushf
mov
test
jl
inc
adc
cmpb
add
lret
mov
out
in
adc
mov
jno
inc
sbb
ljmp
add
jne
add
cmp
dec
sub
mov
loop
jo
ret
popa
loop
mov
cmp
add
push
out
sub
push
push
fwait
jae
fcoms
cld
inc
ja
mov
dec
icebp
add
dec
push
push
pop
pop
into
xchg
mov
stos
xchg
sbb
imul
sbbl
lret
xchg
adcl
cmp
sub
pop
imul
shll
mov
inc
xchg
inc
pop
push
add
sbb
mov
and
sub
mov
cmp
pop
mov
push
imul
sub
call
pusha
add
ret
fdivrs
cwtl
xor
ds
dec
dec
push
fidivrl
add
cmpsl
cmp
dec
or
fld
lods
inc
push
xor
int3
adc
shlb
ss
adcl
jb
adc
daa
mov
push
out
xorb
lds
outsb
sarb
scas
sbb
sbb
mov
adc
out
jbe
cmpsl
jmp
pop
push
inc
pop
stos
sbb
mov
push
out
add
loopne
loop
add
daa
orb
add
cmpsb
sarl
or
mov
and
xchg
fmuls
dec
fs
pop
loope
mov
jns
adc
mov
fnstenv
add
lods
adc
adc
xor
addr16
add
cwtl
lret
xchg
pusha
cld
adc
pusha
fstp
ss
fidivl
fistl
or
sub
jmp
outsl
std
push
xor
dec
mov
mov
sbb
inc
ds
jmp
cmpsl
adc
dec
shrb
pop
push
scas
ljmp
mov
jecxz
jp
je
rol
std
pop
outsl
in
arpl
pusha
pop
in
fsubrl
xchg
cmp
aam
movsb
js
dec
xchg
test
fiaddl
push
and
xchg
add
sbb
je
xchg
pop
in
addb
sti
xor
stc
out
adc
fmul
sbb
ss
or
test
insl
int3
stos
push
lock
sbb
je
insl
sbb
outsb
jae
jecxz
aaa
jb
jbe
dec
xchg
or
dec
add
sbb
leave
sub
divl
aad
ret
lea
mov
adc
test
add
xor
sbb
and
lods
call
std
add
pop
into
ds
lret
pushf
in
stos
or
jmp
add
add
into
fwait
push
test
sub
dec
cwtl
nop
add
xchg
inc
mov
fwait
cltd
push
mov
ret
and
iret
dec
cld
jp
push
or
jmp
loope
jle
iret
or
sub
int3
cmp
or
rolb
pop
cmpsl
stos
loop
dec
xchg
mov
push
xchg
jecxz
in
rorl
mov
fcomps
cmp
pushf
rcll
arpl
xor
inc
ret
sub
stos
test
les
out
repnz
leave
rcl
inc
or
xchg
cmp
adc
or
or
inc
sbb
jg
mov
fwait
loopne
insb
add
mov
sub
adc
sti
or
jb
or
cltd
mov
mov
xchg
mov
mov
nop
pushf
test
shrl
loope
divl
cmpsb
mov
testl
in
es
in
sbb
sub
fimull
push
push
cs
xchg
aam
out
enter
fwait
pop
pop
fs
dec
sub
sbb
scas
stos
add
mov
push
iret
or
std
dec
mov
lret
pop
jmp
repnz
inc
cmc
mov
lds
add
adc
xor
inc
out
dec
mov
inc
outsb
movsb
cld
cs
or
xchg
fnstsw
scas
bound
movsl
push
add
push
pop
mov
sub
adc
mov
int
sbb
sbb
test
ds
push
push
insb
ja
arpl
cli
clc
daa
push
add
stos
push
lea
add
int3
icebp
orw
addr16
xor
pop
notb
adc
bound
xor
mov
push
sti
pop
add
test
jmp
pop
sub
inc
adc
ret
icebp
dec
lods
or
sub
dec
xchg
enter
dec
jle
xchg
sbb
or
sbbb
out
pop
clc
out
cmpsl
mov
add
dec
inc
sbb
mov
dec
inc
cltd
sar
or
out
mov
std
ja
repnz
cwtl
je
xchg
fisttps
insl
or
dec
sub
sbb
cmp
sti
das
out
ret
push
sub
xlat
adc
cmpb
push
rol
in
add
or
mov
dec
ljmp
xchg
xor
pop
or
dec
and
mov
dec
in
adc
fnstenv
pop
mov
add
out
cmpl
out
out
sti
cmp
mov
lds
mov
mov
fwait
lret
stos
adc
push
lods
adc
ret
and
adc
into
scas
sbb
addl
dec
pop
adc
dec
shl
mov
ja
loope
movsl
scas
and
add
shrb
jle
loope
shl
fisubs
push
mov
das
call
out
scas
add
jnp
push
lret
sarb
xchg
ss
out
mov
and
inc
das
pop
std
sti
xor
dec
insb
jp
lret
lret
dec
sub
mov
mov
sbb
add
aam
xor
iret
jp
std
xchg
lock
fbstp
add
push
dec
jo
ds
inc
pop
jbe
cmp
stos
mov
mov
fucomp
push
aam
icebp
or
jae
xchg
add
iret
jns
mov
jae
sarb
fmull
cmp
test
add
mov
inc
es
test
xchg
insb
clc
pusha
and
dec
inc
aaa
or
jp
push
movsb
adcl
lods
xor
scas
mov
pop
mov
xorb
or
adc
jne
or
inc
test
adc
ror
fcoms
jp
cmp
std
mov
mov
mov
dec
les
hlt
adc
ja
scas
aad
add
pop
jl
or
stos
loopne
jg
jmp
mov
adc
xor
cld
jnp
sbb
add
lret
shll
int3
cmp
sbb
mov
shl
es
out
jl
sub
dec
push
sub
push
xchg
imul
scas
jae
nop
cmp
push
lods
ret
or
add
outsb
test
call
loope
repz
je
fisubl
mov
pop
divl
add
or
roll
mov
xor
je
push
fdivrl
push
in
xor
jmp
outsl
sub
popf
out
out
cmp
insb
mov
add
jno
scas
jae
add
mov
enter
cs
subb
movsb
adc
mov
push
add
xlat
push
movsb
sbb
pop
ret
push
pop
test
cwtl
jmp
outsb
mov
or
fadds
loope
nop
jb
jne
shlb
inc
inc
cmp
xchg
movsb
dec
dec
or
push
lret
scas
mov
adc
push
pushf
cmp
insl
push
pop
aaa
lret
shr
bound
ss
ljmp
sbb
cld
rcrb
mov
stc
sbb
add
or
add
or
out
sub
in
mov
xlat
inc
mov
pushf
jno
int3
lods
xor
mov
pop
inc
xor
rolb
pushf
loop
mov
inc
stc
adc
lods
dec
or
rorb
cmpsb
mov
sub
jbe
inc
and
jg
stos
and
insb
add
mov
cmpsb
and
add
clc
daa
fcomps
xlat
xlat
mov
lret
mov
inc
nop
mov
jmp
jne
push
incl
sbb
addr16
pop
add
sbb
mov
lods
pop
cwtl
jmp
adc
fidivs
int
sub
insl
cmp
out
cltd
test
add
mov
adc
sbb
lret
adc
jmp
jp
mov
sub
push
scas
cld
scas
or
sub
movsl
sub
cli
push
or
jae
inc
popa
or
iret
jp
and
in
or
loope
sarl
dec
jle
shlb
daa
mov
loope
push
aad
jmp
dec
xchg
aam
outsl
dec
push
pushf
out
inc
rcll
pop
sbb
cmc
jecxz
bound
mov
sahf
jns
sub
xchg
enter
popf
inc
nop
shlb
pop
pop
insb
jnp
xchg
sub
dec
mov
xor
mov
pop
insb
add
and
mov
cmc
sbb
stos
fwait
cld
xchg
arpl
adc
out
les
jb
test
fs
push
and
insb
das
xchg
or
fildl
push
jmp
in
hlt
adc
add
mov
cmp
fs
sub
int3
jne
bound
mov
inc
dec
jp
cld
pop
sbb
adc
insb
test
push
push
push
test
add
in
pop
and
sbbl
add
cmp
mov
cmpsl
and
pop
mov
adc
iret
insl
test
shrl
add
lea
iret
sbb
dec
mov
lods
movsl
stos
pop
push
rcr
cltd
lea
adc
jne
push
push
lods
jp
xchg
xor
mov
rcrb
fmul
dec
lods
jb
pop
jmp
jbe
repz
pop
das
sbb
push
daa
sub
or
cmpsb
and
dec
mov
out
mov
mov
jne
gs
lock
adc
movsb
int3
dec
or
out
aam
and
jg
and
mov
inc
cld
mov
inc
mov
dec
mov
sbb
adc
incb
push
ja
in
or
jae
out
mov
or
xchg
movsl
xchg
cmp
or
dec
add
push
lret
addl
fcmovb
addl
lock
mov
push
mov
mov
popa
or
ret
fbld
jle
inc
pop
fs
mov
dec
rcrb
mov
inc
daa
pushf
mov
xchg
mov
js
push
inc
lahf
int3
dec
enter
push
out
add
fcomip
les
aam
inc
jo
or
iret
adc
jmp
adc
or
je
cwtl
or
sbb
cmp
xor
insb
push
add
aad
int
ss
jg
sbb
cmp
xor
jl
push
jnp
adc
or
pop
ss
data16
jbe
add
jns
xor
and
into
ficoms
popf
fisubrl
lock
or
lods
xor
rorl
jge
popa
fidivrs
sbb
es
or
fwait
lods
pop
cmp
jo
jle
cmp
jmp
push
and
scas
pushf
pop
xor
and
xor
jb
in
popf
aam
dec
sbb
adc
lock
sbb
push
mov
daa
inc
mov
into
cld
lods
lahf
aaa
cmpsl
fidivs
hlt
lret
stc
or
enter
mov
jb
ja
mov
daa
ss
std
pushf
in
pop
call
pop
dec
idiv
clc
sub
jge
mov
xor
pop
adc
aas
cld
aad
iret
pop
fs
bnd
jl
jmp
and
push
call
and
shl
or
sbb
fists
add
mov
das
pop
and
sahf
mov
rcll
and
negl
sub
mov
and
adc
loopne
mov
cld
mov
pushf
sbb
sub
add
sbb
xor
mov
add
add
xor
int3
mov
or
lea
xor
in
xchg
add
xchg
aaa
repz
sub
and
je
sbb
push
out
and
add
in
mov
leave
adc
negb
popa
xchg
mov
test
add
xor
adc
andl
enter
mov
adc
fs
pop
inc
int3
mov
sub
sub
xchg
adc
sbb
sti
add
or
sahf
cld
jns
mov
xchg
test
mov
jmp
sbb
psubd
xchg
test
sahf
or
mov
xor
mov
adc
sub
mov
mov
psubsw
insb
cmc
mov
adc
sbb
xor
xor
cmp
sub
or
xlat
or
sub
movl
add
arpl
scas
pop
out
sbb
adc
cmp
and
daa
sub
orl
outsl
xlat
add
jne
ret
lcall
out
movl
jg
fwait
aaa
adc
add
std
sub
sbb
repz
xor
adc
or
push
shr
mov
test
and
rcll
loope
cmp
inc
and
lods
push
or
pushf
out
jl
popa
adc
mov
cmp
out
xchg
dec
outsb
aas
xor
jne
add
out
mov
clc
adc
xor
addl
or
sbb
lods
cmp
mov
mov
lods
jmp
aaa
dec
add
push
jae
add
xor
out
adc
cmpb
icebp
out
push
mov
and
aam
inc
push
jl
cmp
pop
pop
xchg
mov
insb
sub
and
imul
adc
fstpl
stos
cli
or
in
in
movsl
sub
cmp
cli
adc
jg
sub
and
jmp
fwait
mov
scas
or
ret
lea
mov
pshufw
dec
clc
leave
fisubs
lcall
adc
sbbb
inc
orb
mov
lds
aam
wbinvd
mov
aad
push
ret
fistps
sub
adc
jg
notb
inc
in
aaa
cmp
jno
sub
xchg
sbb
sub
test
and
or
nop
add
pop
inc
mov
loop
inc
xchg
fmull
or
jno
cmp
sub
add
stos
das
mov
and
jmp
test
fistpll
mov
cmp
imul
sbb
out
xchg
in
lret
mov
test
shlb
pop
dec
jmp
das
and
mov
jg
push
add
adc
xor
out
leave
push
in
fcomps
push
jno
xor
pop
sbb
test
or
outsl
rcrb
jg
test
or
mov
sbb
xorl
data16
add
or
sahf
int3
repz
mov
or
sbb
push
sub
test
mov
popa
or
push
xor
out
mov
int
pushf
nop
jae
dec
push
dec
adc
jge
sub
popf
in
aaa
sbb
cli
add
lods
aam
sub
jb
mov
aaa
addr16
aam
stos
lret
xchg
pop
adc
test
lret
lods
and
adc
mov
xchg
sbb
sub
fcomps
sub
add
adcl
adc
sub
and
sub
cmp
mov
stos
movsb
inc
pop
loop
adc
cmp
sbb
imul
or
adc
adc
add
cmp
pop
jmp
das
arpl
or
hlt
sub
mov
jnp
add
push
inc
mov
mov
enter
dec
push
mov
sub
jmp
sbb
insl
cmp
or
jl
jmp
adc
sbb
daa
push
stos
adc
xor
adc
cli
or
or
xor
in
cmc
hlt
lods
cmp
loopne
sub
jmp
movsl
xchg
xlat
adc
mov
lea
out
cwtl
or
or
add
jp
add
shl
sti
pop
das
push
nop
xlat
jno
shr
dec
push
jge
xor
sbb
daa
subb
mov
ss
xchg
sbb
dec
and
jmp
stos
sub
xchg
out
out
adc
and
mov
sbb
rcl
cwtl
cmc
mov
loope
fs
add
add
xchg
sbb
loop
and
insl
dec
dec
arpl
mov
ds
mov
test
sub
push
ret
xor
mov
jmp
aas
cmp
aam
cmp
xor
lahf
xorb
cwtl
jg
pop
sarl
cmp
xchg
xor
adc
xor
inc
aaa
pop
insb
cmp
or
outsb
sub
push
enter
xchg
mov
fwait
add
insb
lods
fistps
test
cmp
jo
cmp
lods
add
out
repnz
or
lret
imull
and
xchg
popl
or
dec
and
ljmp
pop
js
aaa
mov
inc
cmp
dec
xchg
ror
into
push
pop
sub
loopne
scas
or
mov
jmp
and
xchg
adc
leave
aam
sub
nop
lods
loopne
sub
sbb
lret
lcall
or
jb
push
mov
cwtl
test
mov
cld
test
daa
mov
les
rorl
adc
enter
jns
and
push
mov
pop
fdivrl
add
or
fstp
jmp
das
ja
nop
mov
out
sbb
sub
dec
test
jmp
insb
adc
jae
adc
xor
sbb
mov
sub
sahf
sbb
cmp
sbb
mov
push
pop
sub
pop
enter
dec
and
pop
loope
add
pop
test
inc
push
xor
out
jecxz
sub
sbb
push
and
sub
adc
push
or
jg
pop
call
clc
sbb
mov
or
int3
scas
cmp
xor
daa
mov
rolb
xor
fwait
cwtl
xchg
shlb
xchg
and
lods
adc
icebp
inc
sub
mov
pushf
adc
in
jno
and
add
or
pop
sub
mov
sti
jno
lea
mov
lods
icebp
sbbl
mov
mov
jb
adc
mov
mov
and
push
movsb
or
xor
mov
jmp
call
dec
cli
pop
mov
sahf
pop
add
test
fmuls
fcompl
pop
pop
cmp
pop
aas
or
jmp
sub
sahf
aaa
fcompl
out
push
mov
add
push
sub
jno
decb
cmp
icebp
idivb
dec
scas
je
daa
fcomps
insb
jbe
add
xchg
mov
or
mov
fdivs
and
push
mov
lds
lret
faddl
sbb
dec
in
out
insl
mov
cmp
rolb
sub
mov
fmuls
jmp
sub
mov
cmovle
inc
adc
pop
cltd
add
sti
and
push
and
loop
fidivl
push
mov
sbb
cmp
sub
insb
out
inc
push
sub
int3
cmp
jb
xchg
cmp
and
cmpsb
mov
xor
jno
xchg
int3
xor
jne
cmp
loopne
jecxz
fstpt
or
mov
or
jge
inc
fwait
add
xor
in
les
jnp
cmp
dec
mov
filds
xchg
das
data16
push
sbb
cmp
mov
add
add
jbe
and
repnz
stos
js
iret
xor
arpl
ljmp
das
jns
test
push
and
sahf
imul
inc
cmp
push
push
lods
dec
daa
push
lock
cmp
sub
lret
and
sbb
pop
gs
test
insb
xor
push
loop
or
das
in
push
mov
sub
movsb
shlb
pop
and
sub
test
xor
xchg
in
push
lds
std
or
in
lret
push
adc
scas
insb
xlat
lods
or
ja
sbb
cs
sbb
and
outsl
dec
sub
pop
cltd
jle
push
lea
push
cltd
in
inc
cs
push
into
sbb
pop
push
cli
add
cmp
movsl
dec
pop
aaa
cld
xchg
adc
das
daa
pop
adc
or
jmp
outsl
xor
insb
sbb
push
les
adc
add
and
fs
aaa
push
xor
es
cmp
les
icebp
icebp
xchg
or
and
adc
insb
fcoml
and
hlt
add
xchg
sbb
lret
enter
outsb
int
adc
mov
test
sbbb
call
add
sbb
xor
mov
cmp
or
and
lods
jbe
sub
mov
add
xor
xchg
or
pop
or
bound
sbb
push
lcall
and
sub
mov
xchg
cmp
es
or
orl
pop
pop
and
or
cmpsl
or
push
xor
sub
adc
scas
add
or
in
jns
pop
sub
test
sub
aam
das
xorl
pop
push
jecxz
scas
stos
mov
xor
enter
pop
pushf
loop
xchg
popf
cmp
pop
cltd
enter
xchg
and
xor
pop
jmp
jmp
daa
xor
loop
popa
cmp
in
sub
xor
sbbl
sub
hlt
pusha
int3
daa
ret
pop
push
inc
xchg
add
in
hlt
push
push
xchg
fistl
add
sahf
in
int
add
test
sub
sbb
or
adc
mov
push
enter
xchg
ljmp
mov
and
jmp
sub
stc
sbb
xor
lods
and
jnp
icebp
sbb
push
xor
loopne
out
lret
push
sub
adc
push
ja
push
test
add
or
add
daa
add
mov
mulb
shlb
stos
sahf
inc
pop
mov
and
test
mov
dec
cmp
or
in
movsb
test
add
scas
sub
rcrl
push
lock
jg
fnstsw
pop
test
lock
stos
loope
and
inc
or
cmp
divb
mov
adc
or
daa
out
adc
ret
loope
and
sbb
decl
or
cld
add
cmp
cmp
xchg
inc
or
aaa
jl
leave
or
sub
out
gs
fidivrl
sbb
ret
iret
movsb
and
sbb
lock
cli
out
pusha
adc
push
adc
sbb
cltd
mov
or
cs
add
addb
adc
daa
pusha
xchg
sbb
push
mov
stos
xchg
mov
xchg
sub
lret
push
xor
pop
xchg
jmp
and
or
add
stos
sbb
sbb
test
cmp
cmpsl
enter
xchg
ret
data16
sti
lods
pushf
mov
cmp
rcll
in
loop
mov
lahf
mov
jmp
dec
das
test
je
pop
mov
cmp
popf
call
jecxz
xor
xchg
jnp
push
fs
push
jb
jp
inc
xlat
cs
xor
sbb
sub
jns
push
adc
dec
and
enter
mov
mov
and
or
jnp
or
or
mov
mov
push
std
push
dec
dec
xlat
pop
popa
daa
pop
push
mov
fwait
and
pop
pop
push
fs
lret
jnp
cwtl
call
mov
or
xchg
lods
icebp
mov
xchg
inc
mov
mov
sub
cltd
enter
inc
inc
cmp
int3
jb
test
pop
in
incb
adc
negb
or
out
jmp
xor
dec
dec
stos
and
push
pop
xchg
mov
cmp
jnp
sbb
xchg
jmp
adc
cmpl
xchg
aaa
dec
add
or
push
sub
pop
or
adc
test
sub
testl
xchg
scas
xchg
cmc
sbb
xchg
pop
or
fsts
push
and
mov
push
sub
pop
sbb
jb
xchg
lcall
das
sbb
sbb
rcr
and
adc
cmp
test
dec
scas
push
add
lahf
sub
inc
push
insb
rorl
jno
xchg
push
sub
sbb
lock
or
inc
xchg
add
or
add
mov
icebp
out
pushf
and
and
xor
mull
push
in
sub
lret
or
xchg
adc
sub
iret
das
push
add
sbb
push
xchg
sbb
sti
sbb
sub
adc
sub
int3
jns
dec
sti
aaa
jmp
xor
gs
xchg
lret
mov
fidivl
pop
mov
xchg
mulb
push
adc
loope
or
jno
test
fmul
fisttpl
ds
adc
daa
nop
sbb
xor
rcrl
sbbb
pusha
push
das
xchg
add
stos
jnp
test
orl
or
dec
and
sub
push
push
daa
lret
in
mul
mov
xor
mov
cmp
jmp
jne
and
mov
aam
divl
xchg
cmpsb
cmp
jmp
fisubrs
addb
lret
pop
adc
outsl
mov
call
or
ret
das
mov
out
mov
or
and
cmp
dec
mov
jmp
dec
or
loopne
or
cmp
repz
adc
jmp
sub
push
xor
jmp
jno
pop
adc
movsl
sub
mov
cmp
ficoml
in
in
sub
test
mov
icebp
lea
hlt
pushf
shlb
jne
das
ja
cltd
add
stos
cmp
es
fwait
pop
adc
cltd
or
jb
addl
and
dec
sub
sub
test
or
adcb
ffree
xor
xchg
adcb
cmp
mov
aaa
ror
mov
mov
xchg
sbb
daa
cmpb
dec
adc
mov
xchg
or
ret
add
fucom
in
push
or
pop
adc
mov
and
pop
sub
js
adc
inc
add
add
in
das
inc
mov
cmp
sbb
push
push
mov
sub
clc
daa
scas
lret
aaa
loope
add
jmp
jl
or
mov
mov
aas
daa
jle
lea
sbb
and
negl
xor
dec
sub
cmp
add
lea
or
add
call
inc
lods
ss
andb
jnp
pop
or
insb
xor
add
or
lahf
out
sbb
stos
aaa
push
add
adcl
sbb
imul
mov
and
fs
cltd
sub
fiadds
adc
cmp
or
das
mov
mov
aad
daa
mov
xlat
mov
cmp
add
push
xor
daa
adc
cmp
sti
or
testl
and
cmp
popf
mov
std
or
gs
insl
and
test
xor
adc
push
cmp
jo
inc
fnstcw
pop
cltd
int
test
add
xchg
lods
jne
inc
mov
adc
jno
add
push
jge
adc
dec
testl
je
sbb
dec
mov
icebp
sbb
push
add
lds
mov
idivb
pop
mov
bound
adc
pop
push
leave
clc
add
cmp
sub
push
faddp
mov
in
inc
les
lods
rcll
ljmp
jae
aas
sub
scas
push
insl
mov
lods
bound
loope
ja
push
xor
mov
test
or
cltd
mov
je
lret
inc
and
lock
push
mov
cmp
pop
cmpsb
fs
adc
xchg
or
add
sbb
inc
add
lods
dec
sarl
ds
jecxz
or
sti
cmp
adc
ss
ljmp
mov
xchg
scas
daa
sbb
sub
inc
sub
mov
cs
sti
pop
stos
mov
daa
test
add
jmp
xor
or
ds
imull
mov
je,pt
dec
das
ds
mov
xor
lods
shlb
dec
push
jl
jmp
lods
outsb
mov
stos
js
pushf
insb
ja
jge
xchg
adc
mov
loopne
test
push
lods
add
mov
mov
movsl
or
repnz
jmp
sbb
sbb
dec
nop
add
and
mov
dec
leave
dec
or
push
sbb
lldt
movsl
movb
stos
into
test
mov
dec
inc
out
push
mov
dec
js
sub
mov
leave
sbb
xor
hlt
pushf
mov
push
sbb
and
ja
mov
add
aaa
push
in
out
pop
insl
dec
push
addl
cs
flds
and
mov
stos
cmp
add
jl
fdivrl
adc
push
enter
mov
je
js
cmp
pop
fcoms
mov
loope
add
outsl
xchg
stc
mov
lcall
je
aaa
mov
inc
pop
cmp
mov
add
sti
mov
dec
gs
frstor
in
aam
xor
lea
xchg
test
aad
stos
data16
xor
mov
insb
iret
xchg
call
and
xor
fst
jle
sub
adc
je
das
push
mov
popa
jnp
cmp
gs
inc
iret
jo
daa
xor
inc
ret
lods
mov
sbb
movsb
sbb
adc
sub
test
mov
cli
mov
push
mov
aas
cmp
xchg
mov
dec
addr16
movsb
pop
loop
aas
dec
or
enter
push
adc
and
xchg
push
sbb
lahf
mov
dec
js
mov
push
repz
lcall
and
or
jmp
outsl
or
jno
add
jmp
inc
cmp
test
mov
cmp
and
or
rorb
and
jno
call
or
cmc
mov
aad
add
or
cs
fstl
add
sbb
and
add
inc
insb
mov
mov
and
jb
push
hlt
add
mov
sbb
out
int
sbb
mov
sub
xor
clc
add
ret
into
insb
ret
dec
es
mov
bound
push
bound
sub
jecxz
mov
sub
mov
add
pop
aas
inc
out
adc
inc
pop
jmp
mov
or
jae
aas
add
cmpsb
sbb
cltd
sbb
cmp
out
pop
lock
insl
jmp
mov
ss
loop
cld
inc
aad
adc
xchg
aad
dec
dec
xchg
out
mov
push
jl
push
cwtl
mov
pop
lods
or
inc
cltd
aam
mov
icebp
pop
fnsave
push
loop
and
sub
imul
arpl
mov
insb
cmc
add
dec
pop
ret
icebp
aad
and
out
cli
out
mov
sub
or
jbe
mov
fldenv
push
and
pop
test
or
mov
dec
dec
add
fmull
dec
xor
cs
rep
mov
mov
inc
out
sub
loope
push
shlb
cmpl
jmp
jo
cmpsl
js
cli
fiadds
insl
or
nop
inc
imul
stc
repz
lds
sbb
dec
lret
lcall
lods
and
mov
adcb
sub
xor
sub
pop
in
pslld
push
sbb
or
add
orb
xor
sahf
or
adc
shrb
mov
lods
ret
cltd
push
sub
or
and
mov
mov
test
faddp
imul
out
in
dec
into
lret
fisttps
aas
cmp
mov
stos
cltd
add
leave
push
sbb
adc
lea
dec
loope
das
or
loope
test
pop
daa
cld
mov
mov
pop
or
shl
es
mov
orb
pop
repz
mov
and
out
mov
mov
add
add
lds
pop
cli
push
sbb
ljmp
adc
int
out
jnp
cwtl
cmp
mov
fildl
mov
cld
ljmp
ds
push
in
add
cmp
inc
leave
enter
std
cld
pop
lret
fwait
xlat
outsb
push
jo
test
push
jle
lods
repz
out
add
push
outsl
leave
imul
cwtl
lahf
lea
hlt
add
xchg
mov
dec
pusha
test
jg
pop
movsb
ret
rorl
mov
jb
xchg
jle
sub
xchg
adc
imulb
mov
test
mov
in
cltd
push
dec
add
out
testl
lret
mov
push
jnp
arpl
cmp
scas
push
sbb
add
add
adc
in
sub
jnp
jp
push
pushf
add
addr16
jle
fnstsw
xchg
popa
push
push
out
push
mov
aad
nop
add
sub
jmp
sti
jge
lods
add
pop
mov
rol
mov
das
and
inc
sub
stos
sub
jne
mov
sbb
push
sub
jnp
pushf
push
push
sbb
sahf
stos
cmp
cmc
or
xchg
into
lret
xchg
pop
sti
push
popa
sub
inc
mov
fwait
jle
mov
std
fstp
imul
sti
push
popf
add
or
lret
clc
xor
cmp
ss
add
rcrb
fs
ss
out
cmc
xchg
in
cmp
lea
sbb
xchg
add
add
xchg
jg
sub
jge
inc
mov
sbb
push
in
xor
lock
jle
out
mov
mov
out
js
xchg
xchg
mov
and
nop
jl
add
das
add
sbb
out
sub
fsubrl
cmp
les
jmp
mov
and
loopne
test
push
cs
push
and
insb
popa
mov
or
call
fbld
xchg
cli
adc
stos
inc
cli
stos
cmpsl
inc
pushf
ljmp
lret
add
out
sbb
xor
xor
xchg
mov
das
stc
sbb
repnz
add
cmpsb
ret
push
test
mov
or
jge
popf
daa
imul
fcmove
jg
outsl
lea
add
dec
jns
pop
arpl
xchg
mov
jb
out
subl
mov
jbe
push
mov
mov
repz
or
xor
and
push
add
or
add
xchg
stos
loope
mov
loop
adc
jne
and
pop
fs
xor
push
pushf
cld
sbb
inc
or
fiaddl
sub
imul
adc
lahf
jmp
sub
cltd
and
outsb
lods
mov
jnp
cmp
cwtl
loopne
cli
in
or
fstl
out
enter
mov
lar
pop
xchg
enter
cwtl
xchg
mov
sbbl
push
adc
sub
cmc
jbe
adc
addr16
pop
push
pop
ret
cmp
mov
stc
push
andl
mov
push
push
daa
stos
out
in
push
dec
pop
dec
xchg
adcb
mov
xor
push
cmp
or
or
lods
xchg
lret
sub
add
filds
mov
jnp
xor
add
cmp
test
and
add
mov
popf
dec
add
sub
shr
mov
mov
divb
push
leave
inc
icebp
movsb
inc
nop
sub
sub
dec
lods
sbb
iret
out
and
je
sbb
ret
out
in
popa
sahf
cwtl
or
lret
stc
or
pusha
fnstsw
clc
int
mov
in
mov
rorb
add
dec
xor
gs
or
repz
arpl
out
cmp
inc
outsb
sub
jecxz
add
mov
jns
pop
mov
sbb
and
add
inc
lret
or
cmp
add
mov
xor
out
push
mov
or
push
out
add
call
test
adc
jbe
pop
out
subb
jne
mov
jle
add
sbb
mov
sub
movsl
xchg
mov
inc
xchg
lahf
sti
stos
xchg
mov
add
mov
ss
daa
sbb
push
xchg
movsb
adc
outsb
sub
icebp
pusha
int3
cmc
loop
fnstcw
pop
mov
xlat
adc
mov
ficompl
sbb
and
shlb
adc
sahf
loopne
loope
loop
push
mov
out
add
out
outsb
mov
adc
adc
or
out
sbbl
or
jecxz
add
inc
xchg
xor
dec
sarl
and
jg
sbb
out
int3
and
and
sbb
addr16
mov
xor
movsl
push
aas
repz
loope
lret
mov
sbb
mov
xchg
lahf
mov
cmc
hlt
in
mov
mov
and
and
inc
or
sbb
add
mov
das
adc
popa
adc
mov
cmpsl
push
adc
bound
rorl
sbb
inc
sub
push
ja
dec
or
lods
in
outsb
decl
mov
and
daa
fcomps
scas
out
pop
mov
jbe
stos
sub
fsubp
sub
andb
pop
mov
sbb
mov
xchg
and
push
lods
sti
or
sbb
sbb
lds
jns
lock
xor
adc
pop
or
rcl
or
sub
pop
les
pop
scas
sbb
adc
addr16
outsl
mov
lds
push
fnsave
lret
insl
or
jns
or
test
cmpsl
pop
or
imul
dec
test
inc
or
cmp
xchg
inc
xchg
fmull
jne
iret
out
mov
shrl
loop
cmp
adc
imul
xchg
mov
pop
ljmp
fisttpll
test
xchg
push
cwtl
push
xor
cld
pop
lret
lea
scas
pop
and
or
repz
sub
ljmp
pop
mov
jns
inc
sbb
das
sub
mov
mov
lcall
cmc
jb
jns
xchg
dec
mov
and
loope
sub
add
sub
js,pn
fldl
jle
mov
daa
or
fisubl
inc
mov
lods
or
push
or
dec
int3
or
insl
inc
dec
or
mulb
or
cmc
pop
loop
or
fcoml
pop
pop
or
imulb
lahf
or
adc
in
cmp
bound
add
les
loop
fs
push
fcmovnb
adc
dec
sub
inc
sbb
imul
pop
xchg
popa
fidivrs
add
or
xor
fwait
sbb
lea
insb
adc
in
inc
daa
and
ret
jl
add
mov
sub
test
mov
add
jge
mov
push
jae
pop
jmp
stc
les
cmp
sbb
adc
xchg
add
and
mov
incl
sbb
outsb
mov
inc
mov
mov
add
popa
aas
or
jecxz
or
adc
add
jnp
cld
fs
or
push
sti
jns
or
add
cmpsb
sub
push
sbb
push
test
lods
dec
pop
pop
add
and
lds
cld
rcll
nop
outsb
testl
pop
dec
xlat
pop
addr16
or
push
sub
and
cmp
nop
dec
xchg
scas
and
lods
mov
add
int
sbb
xchg
imul
mov
or
lret
ss
xor
push
pop
xchg
or
dec
shl
jo
in
mov
test
dec
xor
test
hlt
in
or
fwait
mov
rcrb
or
xor
pop
sub
dec
lret
jb
and
fiaddl
mov
cmp
aam
mov
dec
pop
pop
gs
push
pop
or
push
or
sahf
leave
or
adc
jl
adc
test
jbe
lret
cmp
and
sub
sbb
add
or
mov
ds
or
pop
sub
sub
daa
ljmp
jo
outsl
les
std
andl
and
xor
aad
and
jp
sbb
add
mov
pop
mov
stos
push
push
mov
int3
rolb
dec
cmpsl
add
or
jge
daa
pop
mov
std
je
stos
cld
cmp
inc
adc
mov
or
jle
xorb
pop
sbb
sub
fildll
movsl
lar
enter
cmp
sub
arpl
in
test
or
xchg
sarl
cwtl
dec
pop
movsb
adc
or
mov
push
loop
adc
movsl
and
rep
and
scas
pop
sub
cmpsb
push
add
call
cmp
sbb
pop
push
dec
or
mov
push
fwait
or
dec
adc
jmp
cli
sbb
shll
scas
sar
or
in
fsubs
xor
aam
or
adc
loop
pop
inc
jge
jo
ret
dec
xchg
insl
xchg
subb
push
cs
mov
jecxz
or
mov
cld
daa
xor
or
mov
sahf
cmp
cmp
cwtl
cmp
add
rorl
sbb
xchg
or
es
sub
pop
cmp
cmpsl
lret
pop
mov
or
outsb
sbb
movsl
or
aad
dec
fcoms
cmp
rorb
inc
cmpsl
data16
xor
pop
push
repnz
pop
mov
fbstp
push
lret
sub
pop
mov
aas
fmuls
imul
or
sbb
loopne
sbb
cmpsl
pop
adc
jg
inc
mov
add
cltd
xor
sub
inc
pushf
or
and
popf
or
jo
jecxz
in
pop
insl
int3
pop
or
sub
dec
test
lret
rorb
lods
lret
mov
mov
aam
out
push
jp
mov
sbb
and
stos
mov
or
sbb
and
test
lret
insb
sbb
daa
xor
in
or
in
mov
dec
fildll
arpl
jg
lods
or
loop
aas
mov
in
adc
cld
movsl
ret
sub
adc
ret
pop
les
sti
cli
mov
or
dec
aad
cmc
mov
push
movsl
sti
or
int3
lcall
out
push
nop
inc
ret
or
movsb
addr16
mov
pusha
sbb
orb
xchg
loopne
test
das
sbb
out
or
into
fisttpll
add
mov
or
cld
lcall
and
inc
in
pop
or
xor
sbb
stc
out
pop
aaa
xor
in
in
xchg
pop
arpl
inc
inc
or
push
xor
into
rorl
xchg
mov
or
cmp
dec
or
jg
or
data16
lea
lcall
shl
lods
sub
mov
imul
push
jmp
lahf
fdivp
or
sub
cmc
lret
sbb
pop
lods
lret
out
int
or
mov
out
stos
sub
outsl
into
pop
or
push
push
outsb
pop
or
add
jl
or
sbbb
or
xchg
mov
out
js
inc
adc
xor
lods
jl
sbb
push
xchg
push
add
fmul
mov
push
lea
push
or
sub
aas
or
lods
or
cltd
stos
push
je
sbb
push
or
dec
sbb
iret
subl
scas
sub
sbb
sbb
or
or
adc
sub
mov
stos
jl
pop
in
jns
add
adc
faddl
pop
and
add
pop
hlt
xchg
or
jno
mov
incl
ret
push
add
sbb
adc
lahf
bnd
lsl
gs
popa
loopne
out
xchg
sub
rcrb
cs
or
mov
in
jno
sub
mov
sbb
push
pop
int3
icebp
je
xor
add
in
sti
dec
xchg
das
mov
and
adc
mov
or
and
int
sahf
flds
mov
or
cltd
hlt
int3
out
dec
out
mov
pop
dec
hlt
sbb
push
sbb
or
adc
adc
sub
in
in
jnp
inc
mov
jmp
xor
addb
mov
fwait
ja
dec
fdivp
out
jmp
in
push
mov
mov
mov
sbb
fistpl
mov
sbb
mov
xchg
lods
adc
or
out
insb
add
and
repz
mov
dec
ja
fsts
repnz
sbb
xchg
add
push
xchg
sbb
fdiv
jp
testb
xchg
jne
dec
add
sub
aad
push
out
and
hlt
adc
mov
jne
cmp
sub
stc
mov
add
pop
cld
cs
pop
dec
mov
xor
into
fldenv
out
add
push
add
int3
cltd
cld
je
test
aam
aaa
sbb
lahf
cwtl
jno
addl
fdivrs
cwtl
or
pop
out
jecxz
dec
adc
push
sbb
sub
mov
xchg
push
repz
mov
or
cmp
and
inc
pop
in
ds
jl
out
mov
lcall
adc
in
jne
out
loop
add
xchg
dec
dec
pop
pop
fsubrs
fidivl
stc
sbb
adc
mov
popa
mov
mov
jecxz
shlb
rolb
adc
or
or
jmp
xor
lret
or
hlt
add
insb
jp
mov
lret
sbb
add
xchg
push
sbb
or
mov
mov
sub
mov
cmp
stos
push
push
and
and
jno
inc
jne
pop
js,pn
cld
mov
leave
adc
adc
sbb
ret
int
mov
xor
int3
add
push
in
shlb
inc
push
mov
mov
movsl
mov
or
into
psubusw
xchg
aad
push
mov
or
enter
popa
cmp
adc
jecxz
push
scas
mov
add
dec
repz
out
stos
mov
scas
int3
int
imul
jmp
and
ljmp
int
or
sbb
pop
in
mov
mov
adc
xchg
sub
or
ljmp
fcmovne
cmp
push
pop
sub
out
push
jne
stos
adc
cmp
mov
into
arpl
out
push
mov
popf
aaa
pushf
notl
andb
add
jne
dec
shufps
loop
inc
or
dec
lds
ds
sbb
or
orb
and
cmp
cmp
adc
addb
mov
sbb
dec
push
pop
out
cmpsl
mov
mov
and
das
mov
popf
sbb
sub
push
mov
push
movsl
or
stos
insb
sub
test
cmpsl
xchg
inc
repz
mov
xchg
sub
sbb
cli
fists
pop
push
push
dec
in
sbb
push
pop
shrb
cwtl
in
movsl
ret
lcall
cwtl
adc
inc
iret
outsl
aas
xlat
lds
add
hlt
mov
xchg
lds
inc
sub
imul
cld
inc
xchg
inc
mov
xlat
cmp
push
das
call
adc
je
pop
inc
adc
adc
pop
jo
rol
cmpsb
adc
xchg
enter
cwtl
es
adc
push
fiadds
mov
idiv
int3
sbb
xchg
lret
nop
cwtl
dec
out
pop
inc
clc
pop
icebp
mov
mov
lds
popa
in
push
dec
cmp
cmp
mov
stc
mov
aas
cmpsb
jae
movl
sbb
jns
sub
push
popa
sub
sub
lds
movsl
incb
cld
insb
inc
dec
and
push
cltd
push
lods
or
enter
pop
in
aad
movsl
fiadds
sub
gs
inc
and
adc
pop
and
icebp
sbb
jno
into
adc
in
xor
xchg
inc
lret
xchg
mov
inc
sub
imul
push
push
repz
adc
in
add
in
movsl
adc
loopne
test
adc
ficoms
dec
ds
std
stc
add
adc
jp
dec
in
fucom
and
mov
gs
jns
or
fistl
xchg
adc
mov
inc
sub
adc
sub
fidivrs
xor
arpl
movsb
sub
ss
mov
xchg
test
je
ss
dec
out
add
inc
in
xor
into
dec
mov
jmp
test
gs
inc
icebp
and
fldenv
xchg
pop
cvttps2pi
sub
in
inc
mov
icebp
aam
jns
sbb
sbb
movl
inc
jge
in
es
adc
push
fidivrs
in
lds
out
or
pop
inc
pop
and
push
sbb
pop
fidivs
out
cld
in
cmpsb
jle
cmp
jne
dec
inc
inc
out
sub
lds
lcall
inc
jb
loopne
xor
adc
lods
call
sbb
xor
in
mov
ret
test
mov
fidivrs
mov
jno
sub
rorb
and
movsb
aad
in
pushf
test
or
pop
pop
sub
out
sub
inc
aam
mov
or
xchg
adc
inc
inc
jbe
jo
call
in
or
test
imul
sub
pushf
inc
add
insl
into
dec
dec
movsb
inc
cmpsb
repnz
xchg
in
pop
movsl
mov
std
mov
mov
out
cmc
mov
mov
inc
ljmp
xor
add
pop
fisubs
sahf
push
mov
mov
dec
movsl
cmpsb
loope
mov
adc
xchg
dec
sub
mov
test
push
add
lcall
fsub
lds
pop
fsts
ficoms
jns
lcall
xchg
lret
imul
leave
sahf
rcrb
jne
in
mov
int3
lds
aad
mov
ficoml
or
test
imul
dec
test
lcall
sbb
dec
test
xchg
in
jp
nop
out
adc
ja
sbb
pop
test
sbb
mov
sub
adc
es
push
pop
cmp
in
call
lahf
movsl
fisubrs
outsb
mov
and
sub
fprem
ret
sbb
loopne
out
mov
xchg
nop
repz
add
rcll
lds
lods
addr16
push
and
in
nop
mov
lds
mov
into
bnd
mov
and
sbb
cmpsb
int
xchg
data16
jno
xor
xorb
movsl
adc
mov
xor
adcb
inc
clc
fst
repnz
call
jge
scas
fwait
pop
sbb
dec
out
fs
cmpl
adc
out
andl
mov
repnz
out
mov
adc
dec
in
loop
mov
roll
pop
orb
sbb
add
pop
pop
jg
xchg
nop
mov
es
mov
lds
cmp
lods
cltd
es
xor
or
add
test
mov
adc
mov
push
fsub
adc
lods
std
out
mov
dec
jo
pop
push
mov
mov
push
dec
aad
ficomps
sahf
adc
xchg
dec
adc
xchg
xor
in
fcoms
repz
jno
xor
shll
es
cmp
push
adc
int3
mov
or
add
repz
xsha256
cmpsb
adc
adc
in
sbb
fadd
outsb
js
jae
xchg
sbb
data16
in
test
adc
sahf
push
xchg
pop
push
cmp
in
mov
hlt
jb
pop
repz
adc
inc
cmpb
stc
sahf
mov
xchg
sbb
cmpsb
or
sbb
inc
ss
es
push
cmp
je
andb
out
sub
push
add
ljmp
jo
adc
mov
adc
jb
ljmp
lcall
cli
sub
adc
fiadds
sahf
cmp
mov
lds
movsl
push
call
cs
ficomps
push
inc
popa
mov
stos
in
jl
sub
xchg
mov
out
nop
jne
out
adc
lret
mov
pop
addr16
pushf
popf
mov
inc
mov
es
dec
movsl
push
rol
sar
pop
in
lds
xchg
or
incb
andl
push
sub
fisubs
cmp
sub
or
cmp
data16
cmp
push
push
lds
movsl
sahf
xchg
mov
test
pop
gs
call
inc
mov
cwtl
jmp
sub
mov
mov
repz
mov
adc
xlat
lods
push
xchg
data16
adc
nop
push
adc
pop
call
testb
inc
lods
and
or
cld
fldl
inc
out
in
cmpsb
adc
pop
xchg
data16
fiaddl
cwtl
pop
imul
rcr
fs
iret
mov
movsl
notb
lret
push
rcl
push
push
or
ret
xchg
inc
les
mov
addl
adc
xchg
call
xor
adcl
push
jno
shll
dec
dec
arpl
cmp
lret
test
push
pop
push
mov
and
xchg
xchg
mov
sti
es
lcall
lret
sbb
nop
sbb
mov
inc
popa
mov
movsl
shl
repnz
mov
inc
push
lcall
or
mov
out
repz
repnz
adc
lock
xchg
inc
test
jl
cmp
jecxz
rcll
mov
jl
insb
jmp
sbb
fmull
imul
imul
fimuls
sbb
movsl
fists
xchg
add
lds
xchg
or
enter
and
sub
sub
fwait
lods
sub
std
out
loop
adc
inc
mov
sub
or
push
sub
xchg
mov
fisubl
cwtl
enter
mov
cmpsl
jns
imul
pop
ret
and
std
adc
enter
dec
in
inc
jae
push
int3
leave
es
test
in
push
inc
adc
fninit
mov
sbb
add
and
rclb
sbb
xchg
mov
add
cmpsb
mov
rcll
dec
xchg
in
movsb
arpl
mov
rcll
dec
in
lds
repz
dec
or
or
sahf
loope
push
subb
sub
sub
cmp
push
and
mov
jns
mov
dec
sbb
push
inc
mov
xor
cltd
sbb
lret
subl
xchg
cmp
pop
andb
es
sbbb
leave
iret
xchg
gs
push
sub
inc
push
inc
jecxz
add
loop
or
add
mov
mov
add
sub
inc
mov
mov
loop
mul
inc
sbb
jle
jae
or
inc
ficomps
fs
or
jnp
xchg
ficomps
inc
stc
jns
sub
mov
arpl
shrl
push
dec
and
mov
mov
rcll
lds
dec
lds
dec
sahf
test
dec
mov
cltd
xchg
fs
fwait
test
gs
inc
das
push
xacquire
inc
js
subw
cmp
rolb
push
es
push
inc
sub
mov
jmp
add
out
aad
mov
xchg
aas
cld
dec
and
cwtl
add
fstpt
dec
mov
inc
cmpsb
jle
pop
xchg
add
mov
es
mov
stos
movsb
les
sub
sbb
repnz
test
test
sbbl
pop
stos
inc
hlt
fldl
or
addl
sub
sub
cs
lret
jnp
cmpsl
movsl
loopne
cli
adc
rolb
int
or
add
cmpb
icebp
push
lcall
mov
repz
push
mov
jns
mov
mov
xchg
sub
in
push
xchg
pop
lock
jb
add
ficoms
mov
and
mov
movsb
ljmp
cmp
clc
mov
call
adcl
ja
add
and
sub
in
sub
and
loopne
vunpcklpd
jge
sbb
inc
jg
pop
test
xchg
in
cmp
jbe
shll
and
xchg
inc
in
xchg
ret
in
push
sbb
movsl
pop
push
xchg
jmp
lret
gs
div
out
dec
or
sbb
call
pop
mov
dec
out
mov
lret
pop
int3
dec
test
fdivrp
mov
xchg
test
mov
push
xchg
mov
into
pop
sbbb
in
pop
mov
or
inc
fisubl
xchg
lea
dec
inc
jb
add
lret
test
adc
mov
je
lret
movsl
sbb
nop
in
sti
add
xchg
inc
cltd
arpl
adc
rcrl
loope
sub
fimuls
dec
inc
cmpsb
dec
xchg
paddq
cs
incl
cmp
in
mov
cltd
mov
or
pushf
and
xchg
dec
out
add
out
repnz
jg
dec
mov
stos
adc
dec
inc
inc
and
add
mov
outsb
movsl
jno
int3
ljmp
inc
mov
sahf
or
xchg
sbb
mov
push
sbb
jle
data16
in
lahf
push
mov
in
mov
pop
in
shl
sub
add
int
jb
mov
sub
inc
leave
and
add
pop
dec
fimull
mov
inc
dec
cmpsb
sbb
dec
insb
stos
inc
lds
push
sub
es
xchg
stos
inc
push
mov
js
loop
mov
push
dec
dec
cmpsb
sbb
lahf
hlt
push
popf
repz
shl
sbb
ficoms
and
andl
inc
nop
mov
cmp
mov
xchg
cmp
pop
aam
jo
call
pop
sub
mov
xchg
fs
sbbl
push
nop
dec
out
pop
mov
nop
add
inc
movsl
cltd
test
cmp
gs
jl
notb
push
imul
out
push
in
inc
test
pop
inc
dec
pushf
add
sbb
xchg
pop
mov
insl
jo
push
lahf
in
lea
sbb
test
in
aaa
addr16
or
jmp
sub
add
sahf
pop
pop
sbb
xchg
int
out
in
lds
test
inc
mov
ss
int
inc
cwtl
mov
adc
aas
ret
mov
push
push
or
pop
ret
fistl
jno
incl
xchg
sbb
adc
xchg
jp
pop
mov
xchg
and
fldenv
mov
push
cld
mov
icebp
nop
mov
push
cld
pop
aaa
shl
ret
lcall
fcomps
lea
and
add
sub
out
sub
test
mov
xchg
stos
inc
inc
mov
push
mov
sbb
nop
filds
std
outsb
stos
and
or
sti
sub
iret
aad
inc
out
and
cmpsb
and
in
mov
add
jge
xchg
mov
inc
and
mov
jle
dec
loop
cmp
push
mov
sbb
testb
sbb
ret
pop
fdiv
dec
dec
push
or
dec
movb
cmp
fadds
call
sub
adc
adc
push
xchg
cmp
pop
nop
mov
push
popl
jmp
cmp
lcall
add
cmp
push
add
rcll
mov
cmc
imul
ds
repz
lcall
pop
cmp
movsl
test
clc
les
push
mov
sahf
fisubs
ja
and
mov
sbb
cld
ficompl
cmpsb
inc
jns
lret
dec
pop
or
es
cmp
pop
and
and
orb
lret
ret
sub
shl
sbb
in
jbe
push
mov
leave
pop
xchg
sbb
adc
mov
shrl
cmp
inc
adc
pop
es
repz
xchg
sub
nop
js
stos
inc
mov
test
shlb
and
adc
pop
sbb
fs
rep
mov
lahf
adc
push
inc
mov
data16
scas
mov
inc
mov
push
jmp
xchg
into
lret
int
ficomps
inc
out
xchg
cmc
mov
in
push
jecxz
adc
imul
mov
jns
stos
dec
sbb
clc
inc
in
xor
hlt
inc
mov
leave
gs
mov
fdivrs
dec
mov
stos
adc
test
out
in
stos
psubsb
cmp
xchg
mov
es
imul
insb
mov
clc
push
pop
or
or
adc
push
sbb
xchg
adc
arpl
sbb
nop
push
adc
dec
out
inc
xchg
xchg
insb
ror
fsts
in
hlt
repz
aad
fidivs
mov
xchg
lret
inc
xchg
inc
push
mov
in
sbb
xor
xchg
jecxz
push
in
xchg
adc
and
sbb
sbb
shrb
xlat
cmpsb
push
or
xchg
repnz
mov
sbb
es
add
ds
add
dec
cli
and
enter
sub
jnp
xchg
mov
pushf
inc
adc
xchg
and
sahf
stos
out
xchg
addl
push
shl
dec
or
adc
jg
pop
in
jnp
ret
sbb
sub
xchg
stos
arpl
pushf
add
cmpsb
sub
xchg
dec
dec
inc
cld
inc
adc
es
hlt
inc
fwait
adc
in
dec
stc
add
test
and
adc
cwtl
add
sub
out
je
int3
or
adc
inc
jmp
loope
aas
jmp
lds
xchg
xchg
jo
push
xchg
movsb
enter
inc
out
sbbb
jns
imul
xchg
pushw
pushf
mov
testl
adc
call
adc
ficomps
mov
test
mov
nop
lahf
adc
lcall
hlt
or
fsts
out
inc
inc
into
insb
jp
mov
pop
sbb
push
and
sub
test
fisubrl
in
gs
cmpsb
ret
pop
sahf
popf
test
sbb
dec
xchg
shrl
xchg
inc
insb
xchg
adc
mov
cmp
and
repz
add
jb
xchg
fists
fimuls
add
cli
xorw
repz
rolb
aad
arpl
mov
imul
gs
cld
inc
fidivs
out
jb
lcall
adc
mov
movsl
jb
mov
push
adc
fidivs
imul
loopne
dec
cwtl
jmp
pop
sti
adc
movsl
inc
cmpsb
popa
xchg
jle
data16
sahf
es
shr
cltd
sbb
pushf
sub
pop
cmp
test
dec
mov
inc
or
enter
xchg
out
mov
popa
dec
dec
inc
dec
cmp
push
orl
cmp
cmpsb
sub
push
clc
nop
jmp
ror
mov
jge
fadds
dec
and
shll
add
data16
add
daa
sahf
cmp
jle
aaa
and
loopne
lods
dec
pop
test
ficompl
mov
popf
movups
fisubrs
push
sti
fs
fwait
and
jmp
test
aas
inc
lret
mov
lock
ljmp
or
or
adc
cmpsb
negb
add
jns
ret
xchg
adc
inc
and
stos
pop
stc
ror
in
jle
cwtl
mov
loopne
in
repz
insb
movsl
lock
or
adcl
jns
sbb
add
ficoms
xlat
imul
adc
jl
xchg
pop
popf
or
adcl
adc
add
cwtl
cmp
pushf
mov
seto
fiaddl
sti
outsl
ficomps
and
mov
xchg
test
sbb
sub
in
lds
pop
lock
mov
inc
gs
sbb
sbb
test
push
add
or
pop
add
adc
cmpsb
push
jecxz
jbe
or
mov
out
sbb
pop
jmp
jbe
or
xchg
sub
push
movq
outsb
pop
or
xadd
clc
push
xor
and
rol
neg
push
push
btc
mov
inc
push
ror
mov
bsr
stc
mov
sete
mov
neg
clc
xor
pusha
jmp
jp
pushl
call
mov
jg
data16
jno
mov
cmpsl
xchg
inc
sti
xchg
push
cmp
popl
pop
cmpsl
cmpsb
call
shr
aaa
fst
adc
out
movsl
cmpsb
mov
add
cmp
jecxz
aad
and
out
sahf
mov
dec
mov
enter
icebp
mov
int3
jns
xchg
mov
insl
add
or
or
inc
jnp
hlt
test
mov
lods
push
jmp
xlat
jae
xchg
or
cmp
and
cli
outsb
mov
dec
dec
or
push
leave
xlat
movb
jmp
pop
clc
in
inc
add
cmp
addb
mov
fld
add
flds
sub
repz
cmp
push
mov
sub
or
lret
not
mov
in
cmp
das
and
mov
xchg
das
dec
push
mov
sub
jp
insl
cmp
ret
push
loopne
pop
sbb
mov
dec
xchg
mov
lea
jbe
shr
sbb
shrd
shl
sub
mov
movzbw
shl
neg
mov
sar
test
mov
and
add
pushf
dec
bswap
neg
shr
clc
shld
mov
bsf
add
lea
movzbw
bswap
movzbw
mov
movb
pusha
pushf
mov
jmp
mov
pushf
pushl
ret
cmc
div
cmc
jg
sti
push
rcrl
mov
cmpsb
loop
out
xor
pusha
mov
sub
xchg
fs
mov
sti
cmp
dec
dec
pop
in
loop
sbb
inc
hlt
shlb
pop
sub
sbb
mov
dec
and
xchg
daa
in
out
ret
fsubrl
mov
lret
daa
jmp
addr16
int3
aas
jnp
test
jp
jnp
js
divb
sbb
das
mov
lea
jne
call
jle
mov
repz
pop
mov
cmp
es
mov
leave
rcrl
mov
les
sbb
jle
mov
fldenv
push
mov
jno
out
jno
push
mov
mul
outsl
cmp
je
pop
int3
cmpsl
and
mov
lret
mov
pop
fwait
aad
lret
push
sbb
jge
cmpsb
and
mov
mov
fists
or
xchg
sbb
cmp
mov
mov
add
sbb
out
xchg
ret
mov
jmp
pop
mov
out
out
aas
adc
cmp
mov
cmp
js
jle
sub
add
pop
xchg
lock
pop
sarl
cli
mov
push
mov
add
push
movsl
jecxz
cmpsb
add
lods
add
jbe
outsb
sub
popf
ds
xor
add
and
xchg
and
lahf
jmp
test
outsl
xor
mov
ljmp
mov
or
sbb
inc
mov
mov
push
in
cwtl
mov
mov
into
pop
xchg
push
jle
xor
adc
add
and
xor
xchg
xchg
insb
cli
add
inc
inc
pop
pusha
repnz
enter
jb
jnp
icebp
divb
pop
xchg
mov
filds
mov
pop
adc
sbb
xchg
inc
add
xchg
mov
lea
jb
push
pushl
cmc
cmp
movb
lea
jae
shl
mov
or
mov
btc
neg
btr
mov
jmp
add
cwtl
and
mov
dec
bound
fists
push
xchg
ficoml
lock
fisubrl
push
addr16
dec
jg
adcb
sbb
sbb
adc
shl
clc
push
push
xchg
sbb
pop
loope
fcoml
xor
jns
add
cmp
and
add
outsb
sbbb
lock
clc
push
push
sub
jnp
gs
cmp
pop
or
daa
cs
mov
sahf
push
xchg
push
dec
dec
in
daa
sbb
out
xchg
and
int3
jbe
adc
xchg
iret
mov
sub
frstor
mov
lea
jb
push
cmp
movw
cmpb
pusha
lea
jne
bsf
call
seta
setle
call
shll
or
stos
mov
scas
popw
dec
nop
fsts
into
push
bswap
ret
mov
inc
movsl
xchg
xchg
jno
cmp
inc
pop
and
mov
ja
aas
cld
insb
dec
addr16
push
and
notl
xchg
in
hlt
hlt
mov
pop
lcall
dec
xor
mov
xor
and
adc
inc
cli
sub
dec
xchg
mov
pop
mov
push
push
mov
outsb
mov
nop
inc
jo
addr16
dec
and
into
daa
lods
and
clc
mov
std
mov
mov
add
push
mov
add
imul
rorb
test
cltd
ds
jge
mov
pop
fmuls
mov
sbb
add
mov
call
pusha
pushf
mov
pusha
push
pusha
lea
jmp
lea
jne
jmp
jg
push
std
or
pop
sbb
push
sub
cltd
fcmovbe
xchg
cmp
jecxz
in
inc
aas
std
cld
mov
jecxz
mov
jb
leave
or
test
divl
jb
mov
popa
jmp
or
xchg
lds
add
mov
sbb
jle
jo
dec
xor
aas
jnp
out
xlat
sahf
popa
sbb
mov
mov
jg
add
pusha
jmp
add
jmp
setp
movzbl
lea
cwtl
not
pop
lea
jl
pop
call
test
pop
sbb
mov
ret
pusha
mov
test
cli
cmp
mov
and
cld
lock
dec
xchg
aam
test
or
mov
jnp
cmpsl
jno
xchg
cmpsb
mov
and
sub
mov
imul
rcrl
and
fstps
test
iret
aad
mov
call
scas
lret
cld
and
sbb
cmpb
fwait
adc
mov
outsl
cmp
sbb
xor
dec
cmpsl
add
adc
ss
mov
sti
out
inc
repz
jnp
add
and
das
cwtl
outsl
pop
adc
mov
jle
lods
inc
and
in
cmp
rorb
sbb
dec
ljmp
push
mov
test
push
push
mov
sub
mov
inc
or
outsl
popf
push
or
inc
js
cmp
ss
push
pop
xor
push
pusha
jl
sahf
es
sarb
icebp
pop
stos
test
pop
out
call
fidivs
and
sub
testb
movsl
adc
iret
lods
cld
mov
xchg
jb
jl
cmpsl
jle
jo
mov
mov
imul
cmp
mov
lds
js
imul
sub
or
inc
jge
addl
add
inc
and
mov
lea
je
jmp
add
inc
gs
imul
inc
add
add
out
fs
je
pushf
cmp
mov
lea
je
pusha
lea
jmp
mov
pushl
popl
sub
ja
bt
cmp
jmp
jmp
pushf
push
mov
lea
jb
cmc
clc
call
sub
add
bts
clc
xor
shl
mov
adc
ror
shr
rol
mov
call
lea
jne
bswap
sub
bts
mov
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
movb
pushl
ret
lods
add
pop
push
or
in
loope
push
xchg
jle
imulb
xchg
outsb
xor
push
mov
frstor
andb
pop
push
pop
adc
add
pop
or
add
push
or
inc
pop
inc
movsl
aaa
pop
add
fildll
push
adc
in
pusha
clc
imul
sbb
xchg
ljmp
sbb
push
cld
mov
xchg
add
push
jno
andb
inc
jnp
lcall
js
lret
push
or
cmp
push
mov
xchg
and
dec
adc
mov
xchg
push
jno
pop
and
inc
add
cmc
in
je
sti
rcll
fisubrl
setp
xor
fcompl
mov
cmpsl
sub
xchg
mov
into
inc
roll
shlb
sti
rcll
jle
xchg
mov
lcall
or
jns
ljmp
movsl
or
mov
cmp
or
sub
mov
push
cmp
loop
lret
or
mov
and
roll
push
lods
popf
test
push
xchg
dec
pop
sbb
loop
enter
inc
and
loop
repnz
test
lds
mov
leave
add
mov
add
jge
dec
dec
loope
fdivl
jge
add
inc
mov
jo
rol
jno
std
sbb
jnp
fimuls
add
das
mov
and
xchg
out
shl
adc
movsl
pop
fnclex
adc
mov
sbb
loopne
mov
push
mov
mov
insb
cmp
jb
repz
inc
jae
outsb
in
iret
xchg
das
push
jmp
out
push
xchg
dec
test
out
xchg
mov
add
test
jae
xchg
mov
ficomps
mov
imul
mov
gs
sub
xchg
xchg
dec
fimuls
push
pop
sbb
icebp
inc
dec
sub
cmpsl
lods
sahf
es
subl
mov
ss
js
rolb
push
mov
cli
xchg
rcl
enter
mov
divb
out
cmp
xor
sub
xchg
mov
lea
ja
or
sub
sbb
bsf
sbb
sbb
add
and
mov
or
rcr
and
mov
call
sbb
cmp
lret
fdivrs
xchg
push
or
mov
pop
fsts
test
dec
sbb
testl
adc
lahf
xchg
rolb
imul
fldenv
aad
aaa
pop
push
ljmp
cmp
dec
out
popf
mov
lcall
xchg
and
add
or
jecxz
jb
stos
mov
es
testb
inc
mov
pop
adc
pop
inc
jle
jo
pop
adc
xchg
xchg
mov
outsl
insb
xor
cs
insb
add
inc
and
sub
fs
ja
call
ss
sarl
push
test
out
jmp
inc
jno
and
cwtl
sbb
filds
mov
push
push
add
xchg
ds
test
mov
or
push
scas
ret
mov
sbb
mov
sbb
and
sub
adc
jecxz
and
dec
pop
sbb
xor
xor
aam
je
jge
push
jg
loop
scas
dec
lret
or
repnz
push
lret
or
xchg
mov
movsbl
shld
inc
sub
mov
pop
movzbw
movsbl
pop
xchg
mov
pusha
mov
pop
movsbw
mov
pushf
mov
pushf
movzbw
push
call
mov
lea
ja
not
shl
sub
shl
add
clc
mov
shl
mov
test
bt
call
movsbl
mov
lea
push
pushf
call
pusha
movl
mov
jmp
xchg
xchg
pop
call
pushl
popl
stc
stc
test
cmp
pushf
pushf
lea
ja
shl
neg
sub
bts
rcl
call
dec
inc
test
xchg
shl
sbb
push
add
or
push
pop
fbld
sbb
jmp
push
popf
add
xor
fwait
das
lret
aaa
mov
jmp
jle
aas
mov
jne
out
ret
cs
xor
or
scas
int3
mov
xchg
lcall
or
fdiv
jae
pusha
nop
inc
adc
ret
xchg
dec
addr16
stc
mov
sub
imul
add
leave
popf
mov
into
lret
add
sbb
adc
stos
imul
mov
jbe
push
ficompl
or
popf
pusha
adc
cld
cs
out
xor
lods
inc
lret
in
lret
loop
jbe
test
insl
idivl
out
push
xor
pop
sbb
xchg
add
xor
ds
xchg
adcl
push
mov
cwtl
das
int3
mov
or
adc
icebp
scas
imul
xchg
mov
scas
mov
rol
std
xor
mov
sahf
dec
or
jp
hlt
sub
arpl
std
repnz
les
xor
int3
push
xchg
lret
lds
sbb
daa
arpl
repz
loope
or
cmpsl
stos
or
jg
std
mov
stc
stos
xchg
mov
aad
out
sbb
sahf
sub
imul
jns
test
push
jecxz
pusha
ret
jmp
lcall
in
add
or
aaa
cmp
fs
push
in
fsts
pushf
data16
data16
mov
cmp
outsl
jmp
scas
leave
xchg
sahf
aad
cmp
xchg
mov
jmp
xchg
lret
add
fs
cmc
mov
bound
lock
ret
or
in
jns
lea
sti
push
ffree
adc
mov
lods
pop
ret
push
stos
lahf
les
mov
cltd
or
shrl
mov
lret
xchg
add
jle,pt
dec
les
in
mov
in
xorb
shll
fisubl
in
and
adc
popf
cmp
test
cmp
repnz
call
add
and
jns
cmc
mov
jl
or
lret
bswap
add
jae
push
xchg
mov
add
lret
out
arpl
fistps
cmp
in
into
or
loope
std
add
out
es
or
cmp
adc
add
ja
push
loop
adc
mov
out
shll
cmp
insl
in
fstl
mov
jbe
pop
xor
pop
int
or
movsl
mov
dec
mov
sbb
mov
movsl
incl
mov
test
idivl
xor
jecxz
sub
mov
loopne
cs
add
into
loope
daa
sub
aas
pop
and
pop
lret
shlb
incb
mov
cmpsb
pop
fmul
inc
adc
or
cli
sub
mov
vxorps
add
mov
sahf
std
adc
mov
pop
jno
add
movsb
pop
mov
loope
aad
inc
mov
jns
pop
xor
jne
or
mov
mov
mov
insl
sub
mov
fmull
mov
sahf
imul
cmpsb
mov
push
shrb
mov
dec
cs
ret
mov
orb
mov
outsb
xchg
dec
add
mov
pop
pop
int3
in
in
mov
test
sti
popa
imul
add
or
mov
cli
mov
lds
xor
mov
cli
cs
inc
cmp
cmp
adc
sti
mov
scas
pop
adc
rol
push
dec
mov
aaa
testb
mov
in
cld
repnz
mov
cmp
loope
popw
jae
subb
adc
inc
icebp
jbe
imul
ljmp
jns
ror
jnp
lea
mov
xlat
push
leave
nop
dec
mov
inc
add
jbe
xchg
mov
pushf
lea
je
clc
pushf
bt
stc
cmp
pusha
call
call
je
push
dec
dec
mov
pop
lcall
insl
push
sbb
push
ret
inc
addr16
mov
mov
add
out
pop
fmulp
ret
jecxz
lcall
std
or
lds
lods
xor
mov
pop
lds
sub
or
push
sub
outsb
pop
and
sti
jg
jl
xor
adc
xchg
mov
leave
imul
ja
sahf
mov
sub
sbb
ds
and
xchg
mov
jae
pushf
pusha
mov
jmp
ja
outsl
insl
std
or
int
pop
popf
xor
jbe
ficoms
dec
adc
push
xchg
inc
ss
mov
xchg
jb
in
in
dec
mov
pop
pop
or
push
mov
sub
rcll
outsl
pop
dec
gs
xlat
and
sbb
xor
in
push
push
xchg
mov
repnz
call
push
scas
sub
std
pop
pop
add
or
cli
mov
jecxz
rcll
inc
ja
xchg
mov
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
test
stc
incl
mov
add
cmp
clc
cmp
cmp
call
jmp
jg
or
xchg
test
sub
lret
mov
dec
or
test
jg
and
xchg
aam
sbb
je
pop
je
test
sbb
rol
shl
je
mov
lods
inc
pushf
sbb
fsubl
fidivs
add
sahf
fcoml
push
lds
push
dec
jne
pusha
pop
popf
cmc
sub
insb
jp
je
pop
add
popf
icebp
vpavgw
outsl
in
nop
xor
cli
dec
stc
imul
in
fcoms
pop
in
xchg
mov
pusha
seta
setae
lods
movb
dec
stc
rol
clc
test
not
pushf
sub
test
pushl
cmp
push
lea
lea
call
sub
pusha
sub
jnp
test
pushl
bt
test
cmp
call
stos
mov
push
popa
lods
dec
adc
movsb
ficoml
push
add
mov
lods
push
cmp
sbb
lock
or
mov
xlat
cmpsl
push
add
and
cld
xor
mov
adc
lret
std
mov
push
mov
pop
push
sbb
add
in
and
push
in
xchg
and
into
cmp
aaa
imul
repz
in
or
push
xchg
out
clc
push
sbb
in
xchg
sbb
sub
mov
cwtl
rcrb
xchg
mov
les
push
shrb
adc
push
aad
sarl
sti
mov
imul
fisttpll
sub
adc
mov
push
test
stos
pop
add
mov
cmp
inc
pop
sbb
push
jne
data16
pop
es
adc
shrl
sbb
aam
push
or
lds
aad
cmp
cmp
pop
jbe
push
push
mov
test
push
mov
mov
hlt
or
scas
adc
clc
or
or
adcl
add
ficomps
push
xchg
xchg
mov
popf
jle
movsl
cmpsl
push
nop
nop
aam
mov
xchg
push
adc
out
outsb
cld
insl
jle
push
adc
stc
scas
rorb
jle
rcrl
int
jns
sub
adc
loopne
sub
mov
mov
or
in
mov
call
push
jmp
push
inc
notb
lret
das
arpl
inc
testw
in
xchg
stc
xchg
das
repnz
mov
pop
lcallw
hlt
mov
call
pusha
sbb
mov
cmp
sub
bnd
inc
aas
iret
pop
sub
adcl
popa
daa
outsl
sub
mov
pushf
stos
lock
cwtl
xor
cmc
call
repnz
int3
push
or
lock
mov
popf
inc
loopne
jne
cwtl
test
push
mov
cmp
das
fs
mov
push
lea
jb
push
test
pushf
cmp
jmp
push
dec
adc
lods
push
mov
xlat
xchg
dec
jnp
jno
ss
fdivrs
sahf
sbb
inc
sbb
pop
inc
pop
push
cmc
scas
adc
ret
stos
add
and
and
sahf
dec
push
stos
jae
mov
sub
sar
add
xlat
ljmp
pop
fsubp
jl
sub
outsl
ja
mov
arpl
fstpl
xchg
mov
setl
mov
setns
call
add
pushf
jmp
movsl
adc
pop
pusha
ljmp
arpl
dec
or
jns
mov
xchg
icebp
pop
jns
data16
leave
and
cmpsb
xchg
shll
push
sahf
shl
add
jns
mov
in
dec
mov
pop
scas
test
add
mov
push
movsl
jo
or
out
ds
mov
jno
movsb
cmp
inc
add
orl
lock
sbb
add
and
je
pusha
bt
add
stc
pusha
clc
test
cmp
push
jmp
add
push
popa
jae
gs
outsl
outsb
outsb
arpl
popa
je
jae
add
pop
arpl
fwait
dec
nop
iret
jb
in
and
test
cs
xor
add
testb
insl
jecxz
and
jne
mov
into
cmp
fimull
xchg
sub
ficoml
in
lods
mov
push
shll
lods
and
out
xor
add
pop
pop
fnstenv
sbb
or
mov
jne
hlt
push
xor
mov
or
add
add
rcrb
jecxz
fistpl
repz
and
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
in
in
pop
inc
and
mov
jg
mov
ja
jae
shlb
outsb
cmpb
cmpsb
std
mov
and
daa
sub
add
clc
outsl
sub
push
push
push
push
add
mov
dec
imul
shll
xchg
push
add
inc
jl
cmpsb
shlb
loop
dec
push
ficompl
daa
cltd
inc
jb
jle
jmp
and
push
mov
rorb
mov
jne
aas
pop
popf
pusha
and
popf
pop
pop
push
mov
mov
out
push
jmp
xor
mov
int3
adc
push
push
rcll
pop
out
fsubrs
mov
and
pop
jl
xchg
aaa
mov
jbe
push
clc
xor
fidivs
aaa
movsb
mov
out
and
cwtl
stc
cmp
mov
mov
and
push
add
icebp
in
add
mov
movzbw
lahf
lea
pop
jmp
jne
ror
push
push
or
fists
mov
mov
nop
add
insb
jg
ja
jns
lahf
outsl
push
xchg
pop
fistpl
popa
stc
mov
xchg
rorl
lods
scas
mov
aas
jmp
addb
sbb
rcr
lret
inc
adc
push
gs
lds
pop
xor
xchg
nop
xchg
mov
rcrl
hlt
test
adc
jno
xor
mov
mov
dec
xor
mov
push
or
push
iret
test
xchg
fcompl
dec
xorl
xchg
mov
xor
cmp
repnz
push
lea
jne
call
sbb
in
imul
das
mov
out
movsb
pop
xchg
rcrl
movsl
popa
sti
jo
jg
xor
in
repnz
pop
fcomps
cli
out
das
repz
and
inc
sbb
arpl
sub
jo
cmp
rclb
ficoms
jg
sub
insl
jb
cmpsb
jne
and
pop
icebp
push
pop
mov
imul
mov
loope
nop
jo
mov
repnz
insb
mov
or
dec
jle
imul
lock
xchg
rep
pop
mov
pushf
pushf
pushf
mov
lea
jmp
sahf
clc
cmp
or
stos
fcompl
dec
jge
outsl
xor
stos
xor
inc
add
pushf
and
andb
xor
in
repnz
mov
insb
mov
dec
test
shll
inc
iret
inc
outsb
mov
xor
aad
inc
repnz
push
dec
xor
inc
enter
fildl
fmull
and
mov
fsubp
push
and
pop
mov
pop
or
mov
cmpsl
mov
dec
xor
test
sub
test
iret
cld
ds
sbb
adc
cmpsb
addr16
jmp
loop
hlt
je
mov
dec
jecxz
xlat
adc
xlat
xchg
iret
inc
stc
jmp
sar
push
fnsave
push
xchg
push
fwait
pop
pop
and
out
pop
jae
movsb
fdivl
and
mov
pop
lret
movsl
jne
lods
cmp
inc
fdiv
adc
mov
test
popl
out
and
sbbb
gs
push
adc
push
mov
addr16
push
cmp
imul
dec
inc
inc
xor
xchg
cmp
inc
fcoml
jecxz,pn
fistps
iret
xchg
test
sub
sbb
inc
cld
cmp
mov
into
cwtl
xchg
xlat
cltd
xor
in
imul
pushf
pop
fidivrs
and
cwtl
or
and
adc
repnz
adc
push
add
inc
xorl
loope
xlat
cmp
les
sahf
pop
push
mov
and
inc
clc
mov
pop
popa
xchg
mov
cmc
cmp
test
add
movb
pusha
pusha
lea
jmp
in
add
mov
sahf
push
xchg
sbb
ret
add
dec
or
lea
or
idivb
sub
daa
xchg
pop
dec
mov
shlb
movsl
sub
mov
cmpsl
pop
adc
clc
test
lods
outsl
hlt
xchg
mov
cltd
lods
lock
fdivl
lcall
sahf
loop
push
pop
cmp
adc
dec
mov
inc
nop
icebp
xor
lds
or
inc
subl
loop
jp
incl
push
imul
inc
fists
mov
add
and
cmpsb
sub
cmp
pop
or
cmp
xchg
jl
in
inc
and
mov
cmpsl
fisubs
jecxz
push
mov
cli
mov
xchg
mov
pop
ret
jp
in
test
shr
out
popa
test
scas
idivl
into
or
inc
pop
push
ficoms
shrl
popf
xchg
dec
cmp
and
mov
pushw
add
cmpsl
xchg
or
push
jl
call
sti
pop
fwait
push
imul
xor
lret
push
lds
in
clc
and
out
in
aad
pop
jge
out
sub
cmp
lods
in
and
mov
and
lcall
gs
in
fsubp
fcomps
adc
iret
adc
xchg
mov
xchg
mov
and
sub
sar
icebp
loope
lcall
test
jnp
arpl
sub
mov
sub
pop
jmp
pop
push
mov
cmp
cld
lcall
add
xchg
imul
arpl
mov
mov
lea
pushf
mov
mov
movzbw
mov
mov
pusha
pushl
pushl
ret
inc
int
add
dec
test
pushf
loop
loop
rorb
inc
lock
fisubl
cltd
stos
cmpsl
push
cmp
mov
imul
push
fwait
cltd
cmpsb
jl
sub
ljmp
cmc
int3
mov
push
cmp
decl
gs
jo
mov
push
pop
and
sub
xchg
pop
jmp
in
sti
lret
xchg
ret
loop
mov
roll
neg
xchg
xchg
push
fldt
jbe
mov
fistl
cmp
jl
pop
xchg
fwait
xchg
mov
neg
bt
call
xor
divb
les
lret
cli
outsb
mov
xor
mov
jnp
pop
sbb
loope
add
inc
xchg
and
push
fstps
loop
lahf
xchg
pusha
lds
in
jbe
repnz
sub
ret
push
mov
cmp
shl
xor
dec
int
dec
dec
or
jge
jl
clc
mov
daa
xchg
mov
stos
inc
mov
mov
inc
clc
mov
cmc
mov
pop
loop
out
rcrl
scas
int
cmpsb
mov
cmp
aad
xlat
out
mov
mov
sub
clc
xor
push
dec
ret
mov
inc
push
imul
or
rcll
xor
test
les
jl
cmp
push
aad
mov
push
xchg
mov
lea
jne
mov
sub
btc
lea
mov
dec
test
pushf
neg
add
not
pushf
push
pushl
mov
mov
push
pushf
lea
jmp
test
jmp
cmp
call
mov
jo
pop
imul
adc
jecxz
aam
pop
xchg
aad
dec
add
cwtl
fwait
push
fnstcw
add
clc
xchg
sar
dec
dec
sub
push
mov
push
push
adc
rcr
push
xchg
mov
mov
jo
sub
mov
outsb
dec
mov
jns
lret
lea
dec
sub
xor
mov
pop
sbb
or
dec
xchg
mov
jmp
pushf
pushf
lea
jne
cmc
mov
push
clc
bt
add
stc
test
movb
movzwl
sar
pop
mov
bt
pushf
pusha
mov
add
bt
pushf
stc
mov
mov
jmp
aad
jle
fs
pop
sbb
movsl
jecxz
pop
pusha
adc
cmp
cli
sbb
jp
ret
mov
loope
scas
stos
nop
out
inc
roll
scas
pushf
dec
adc
in
pop
fdivs
and
dec
inc
mov
sub
mov
dec
push
xchg
and
dec
lcall
int3
scas
addr16
xchg
cmc
push
fwait
imul
and
push
fs
out
scas
cmc
mov
movsb
fisttpll
dec
or
leave
cmpsl
in
in
and
jbe
insb
sub
sbb
test
sahf
pop
je
or
dec
cli
lcall
mov
clc
hlt
dec
pop
and
arpl
xlat
push
scas
cmp
or
adcl
push
pop
imul
imul
ljmp
pop
or
sbb
jno
jae
fstpl
mov
call
ret
mov
xor
mov
push
sbb
adc
lret
popw
pop
pop
leave
or
cltd
lcall
push
pop
xchg
mov
xor
roll
jae
ret
ljmp
sub
in
out
jecxz
lret
sub
mov
sub
mov
sub
xor
sbb
jecxz
cwtl
fistl
jnp
inc
add
pop
and
inc
sbb
mov
add
jp
cmc
inc
aaa
js
mov
lods
sub
sbb
fwait
sbb
dec
into
add
jmp
or
push
add
aam
pop
cmp
sbb
inc
inc
or
xor
fists
xor
popf
mov
and
ljmp
mov
adc
cmp
push
and
lahf
idiv
mov
cmp
xor
dec
mov
push
xchg
mov
popf
notl
jb
mov
shlb
mov
or
xchg
repnz
sub
or
cld
loopne
mov
add
test
test
sub
dec
mov
jl
aaa
and
ds
jle
repnz
pushf
ds
xorb
les
mov
adc
jl
aad
into
cmpsb
push
xor
pop
icebp
repnz
push
stos
push
push
lcall
roll
cld
mov
movsl
xor
ret
xchg
fimull
dec
cmp
xlat
sub
and
cmp
arpl
cmc
mov
repz
xchg
mov
fdiv
dec
adc
cmp
loop
pop
aas
pop
psubsb
fcoml
push
mov
mov
ss
pop
setp
orl
out
rcll
push
test
add
inc
push
xor
cs
insb
add
bound
pop
lcall
fists
adc
les
stc
mov
repnz
add
dec
sbb
xchg
xlat
das
mov
lcall
inc
lock
sub
in
mov
mov
mov
xchg
dec
lret
mov
cmp
xchg
mov
sarb
add
cli
das
sub
call
test
arpl
inc
cmp
jl
jne
cli
sub
add
push
ja
jle
ret
push
push
xchg
inc
jns
sub
push
cwtl
loope
xchg
mov
andl
js
add
je
lock
mov
andl
outsb
out
loope
idiv
inc
jbe
pop
pop
cmp
pop
sarl
push
sub
mov
mov
nop
pop
jge
test
push
push
dec
pop
mov
add
outsl
pusha
mov
scas
mov
xor
fstpt
xor
enter
scas
into
and
pop
cmp
mov
movsb
adc
dec
cmpsb
pushf
out
insb
and
dec
mov
and
push
sbb
xlat
mov
push
add
jp
popa
push
add
push
pop
xchg
pusha
aad
sbb
fcomi
sbb
push
cmp
inc
adc
in
mov
push
lahf
fistpl
loopne
int
dec
nop
dec
js
mov
mov
jmp
out
rorb
mov
mov
lret
jle
bound
bound
xchg
xor
mov
les
xchg
xchg
and
lahf
jb
push
les
int3
pop
cmp
jbe
jmp
sbb
test
adc
xchg
call
mov
mov
xor
jl
fwait
xchg
inc
push
leave
xlat
dec
aaa
test
or
mov
ficomps
dec
jp
jmp
movsb
loopne
mov
sbb
stc
dec
jle
call
dec
adc
or
cmp
inc
mov
out
lods
rorb
mov
fidivl
xchg
mov
pop
inc
dec
push
xlat
mov
mov
and
rol
mov
mov
sbbl
mov
enter
mov
or
arpl
mov
das
das
cmp
outsl
and
cmpsb
scas
xor
lret
add
pushf
mov
jae
jne
out
imul
xchg
mov
cmp
pushf
lea
ja
clc
shl
bt
sub
shl
add
dec
inc
jmp
out
aas
jnp
repnz
xor
in
xchg
push
xchg
int3
push
shll
lea
jns
add
lcall
int
sbb
call
lcall
pop
sbb
push
je
scas
jns
jl
ret
mov
jnp
in
shll
xor
adc
mov
push
mov
addr16
ror
dec
repnz
inc
mov
pop
cmp
jno
popa
adc
clc
cmpsl
pusha
and
pop
mov
xchg
mov
call
mov
xchg
xchg
jg
ds
inc
add
inc
imulb
cmc
mov
jns
ljmp
jl
pop
stos
dec
enter
rcll
fdivr
iret
incb
sti
dec
scas
xor
pop
fldl2t
mov
lcall
stc
out
insb
ret
out
fnstcw
daa
sbb
idivl
movb
or
cli
dec
sub
in
add
pusha
mov
lea
jae
jmp
call
dec
jmp
pop
sbb
les
lret
adc
xchg
aam
dec
mov
mov
sub
mov
or
jmp
ss
cmp
test
gs
sbb
push
jmp
out
xor
loope
sub
movsb
outsl
into
push
out
or
loop
cmp
adc
test
jl
insl
mov
and
push
xchg
in
fwait
mov
out
int
addr16
push
xchg
or
mov
mov
cmp
pushf
xor
pushl
jmp
push
pop
popa
in
push
fwait
adc
cmp
mov
aas
jne
fimull
cmp
adc
daa
push
iret
rorl
ljmp
pop
jmp
jb
bound
cli
popa
loop
insl
adc
push
mov
or
imul
lea
je
cmp
xchg
aam
daa
and
mov
sti
insb
lods
jno
pop
push
sbb
xor
aaa
insb
mov
jecxz
mov
movsl
movsb
inc
add
and
jo
stos
push
lock
push
mov
push
loope
pop
jae
inc
add
imul
aaa
cmp
dec
dec
mov
push
pushf
push
out
or
mov
mov
xchg
or
cmp
popa
rcr
dec
mov
push
push
cwtl
mov
xchg
enter
lods
imul
add
pop
imul
insl
and
inc
or
sbb
inc
xor
pop
xor
je
inc
dec
les
incl
mov
loope
sti
leave
cmp
pop
jb
in
popa
sbb
aam
xor
sub
mov
or
nop
push
pop
pusha
and
fisttpll
add
aad
xchg
xchg
lods
push
fbld
mov
repz
cltd
dec
pusha
sarb
enter
adc
ds
xchg
jbe
in
pop
lahf
xchg
mov
stos
jmp
ss
addl
cltd
push
popl
mov
mov
xchg
mov
xchg
add
xor
adc
out
ficomps
push
cld
in
inc
cmp
shrl
pop
rclb
inc
xor
xor
jg
dec
or
sbb
dec
mov
aam
cwtl
rolb
adc
xor
in
daa
sahf
push
lock
add
imul
jno
push
ret
lea
in
mov
push
pop
xor
jbe
push
mov
out
cmp
aas
mov
push
xchg
imul
ds
arpl
mov
insl
ret
adc
push
xchg
push
mov
push
cmp
cmp
dec
push
ficomps
pop
mov
adc
hlt
shlb
add
xor
icebp
gs
pop
lcall
inc
dec
shrl
xor
loop
out
pop
enter
cmp
ret
mov
xchg
or
push
movsl
scas
dec
xchg
mov
bound
rol
cmpsl
out
inc
push
jp
int
pop
push
cld
xchg
ficomps
push
addl
or
stc
stc
dec
inc
or
fucomp
fadds
inc
cmp
xor
cmp
in
scas
mov
dec
or
push
xchg
mov
lea
jae
jmp
pushf
pushf
pushf
movl
pusha
movb
movl
pushf
movb
movb
lea
jmp
jmp
xor
dec
cmp
push
mov
and
notl
mov
xor
jl
int
xchg
jo
xchg
lret
es
jb
iret
cltd
imull
cmp
pop
cld
cmp
insb
test
testb
mov
pop
aas
lods
xorl
jb
fdivl
lahf
idivb
and
mov
ficoml
ret
push
dec
jg
test
cmp
addb
adc
xor
cwtl
xchg
dec
mov
aaa
nop
push
daa
jnp,pt
fdivrl
sbb
aad
pop
ljmp
shll
push
push
imul
movsl
jns
pop
cmp
sub
jg
add
pop
dec
rcrl
sub
lret
push
xchg
and
aaa
xchg
gs
xor
loop
pop
xchg
rorl
xchg
mov
mov
cltd
adc
mov
cmpl
pop
ja
xchg
dec
das
mov
repz
sahf
loopne
mov
jle
push
dec
xchg
jae
test
push
dec
sbb
xchg
bound
sbb
xor
popf
roll
xchg
pusha
enter
or
pusha
sbb
test
push
xor
outsl
nop
push
in
and
jns
push
in
and
add
mov
loop
pop
in
xchg
mov
inc
pop
xlat
shl
add
lcall
aaa
out
scas
movsl
inc
nop
xchg
aam
movsl
ret
aam
pop
push
pop
shlw
mov
mov
jg
push
mov
and
xchg
pusha
adc
mov
mov
hlt
add
adc
mov
mov
loopne
push
add
xor
dec
fnstcw
test
cmpsb
or
cli
add
in
mov
in
daa
stos
mov
pop
cwtl
pop
mov
aaa
icebp
cmpsb
loopne
pop
loope
mov
jno
adc
sbb
jb
lret
out
cmc
test
into
or
cmp
jno
add
mov
fcmovne
clc
cmp
mov
dec
add
call
repnz
xor
jmp
pop
or
push
aas
fcomp
push
das
nop
nop
cmp
adc
xchg
sahf
or
xchg
test
stos
pop
div
and
jnp
sbb
fucomip
imul
adc
cmp
push
sub
sbb
add
xor
ljmp
sbb
push
push
pop
fcoml
xlat
adc
jne
fs
pusha
cmpsl
out
mov
mov
adc
cmp
or
fwait
push
push
outsb
rorl
outsl
lret
pop
rorb
inc
lock
cmp
cltd
leave
cltd
in
loopne
rcrb
jg
nop
xchg
les
add
aaa
imul
fs
mov
in
cmp
lds
cmpsl
pop
nop
inc
sti
mov
arpl
xor
mov
xchg
aaa
mov
aam
mov
cwtl
popf
fs
pop
mov
mov
pop
cwtl
sub
jne
nop
pop
and
lret
pop
lcall
sub
icebp
cmp
mov
out
sti
lods
aas
leave
mov
clc
xchg
or
inc
dec
bound
inc
pop
lea
out
loopne
xchg
lods
inc
sti
andb
push
add
lcall
sahf
add
addr16
or
mov
xchg
aam
lret
mov
lea
add
btc
add
shl
sub
stc
shr
neg
neg
bt
cmp
mov
xor
rol
shr
add
sar
shld
add
push
movsbw
stc
stc
mov
pusha
bt
shr
stc
clc
cmp
jmp
call
lea
call
pusha
jmp
les
jle
or
sub
mov
ret
test
outsl
sub
inc
jp
in
jo
cmp
test
andb
sbb
or
mov
push
pop
sub
jecxz
sbb
sbb
cmp
cmc
lcall
mov
push
pop
js
notl
dec
lret
aas
bound
jg
scas
sarb
inc
add
cmpsb
arpl
xchg
mov
pushf
call
mov
pusha
pushl
pushl
ret
clc
sub
add
sbb
bts
mov
call
dec
idivl
cmp
push
xchg
sub
cmp
rorb
inc
mov
xor
adc
inc
test
xlat
sbb
rolb
push
inc
aad
inc
aam
xchg
xor
pop
jecxz
test
je
data16
jmp
cmpsb
sbb
sub
or
pop
cmp
scas
inc
out
dec
push
daa
jmp
xor
out
mov
lret
cld
xor
pop
nop
sbb
sbb
xor
or
add
and
sti
mov
stos
call
push
repnz
dec
pop
movb
hlt
xchg
stc
push
add
je
pop
fildll
jge
cmpsl
inc
pop
clc
repnz
imull
xor
mov
in
cmp
cld
jecxz
or
roll
sub
mov
adc
xchg
scas
sub
andl
popf
rcl
movl
mov
push
cmp
or
jle
lock
out
imul
xlat
gs
cwtl
sub
xchg
lcall
aam
mov
push
divb
lods
xchg
add
in
fcompl
rorb
leave
add
xor
in
xchg
mov
andl
or
or
imul
push
inc
pop
mov
jle
add
sbb
xchg
aas
xor
adc
mov
fldcw
test
nop
lahf
push
mov
mov
in
imul
pop
and
jp
sbb
lea
lock
popa
adc
inc
jo
mov
dec
sbb
add
mov
mov
jo
cmpsb
and
dec
fists
jno
xchg
mov
or
loop
popa
sahf
rorb
mov
dec
dec
xchg
mov
mov
lea
call
pushf
stc
jmp
aad
inc
mov
push
adc
and
mov
xchg
push
mov
cmpl
add
xlat
into
xor
clc
push
lret
movsb
dec
pop
movsb
and
xor
push
outsl
and
fcmovne
inc
test
scas
mov
pop
cld
sbb
sub
xchg
adc
inc
faddp
setne
cs
inc
cmp
rorb
and
dec
cmpb
pop
xchg
mov
mov
popf
and
mov
lcall
roll
pop
sub
inc
fwait
push
imul
stos
xchg
ss
lcall
bnd
lret
jbe
add
shlb
xor
sbb
push
cs
dec
pop
push
mov
fdivp
test
mov
xorl
jae
std
xor
mov
test
and
push
push
mov
xchg
nop
xchg
xchg
pop
mov
int3
and
jmp
mov
int3
pop
pop
push
testb
sbb
xchg
dec
xorl
sbb
test
call
sub
mov
pusha
and
cs
mov
das
out
sub
pop
lret
psubsb
mov
jae
cmpsb
sbb
scas
test
mov
ret
aas
in
inc
repz
sbb
mov
stc
jnp
and
pop
roll
inc
jmp
push
das
push
jge
or
fstps
and
mov
mov
test
fwait
push
aad
cld
sbb
dec
das
mov
shlb
and
loope
dec
xchg
rcrl
push
or
fwait
pop
sub
insb
dec
sbb
out
movb
test
ja
addr16
xchg
add
loopne
loopne
xor
leave
int
adc
pop
mov
aam
inc
lcall
out
pusha
out
bound
push
test
jno
cmp
jge
xchg
repz
sub
aad
adc
shlb
push
insl
or
add
lods
repnz
ficomps
iret
pop
xchg
mov
lea
jae
call
cmp
movb
lea
jae
xor
mov
pushf
dec
mov
lea
stc
lea
mov
jmp
arpl
fs
xor
cs
insb
add
popf
flds
add
push
es
sub
mov
mov
lahf
sar
jns
and
icebp
sbb
xchg
inc
mov
jge
mov
popf
jne
and
xorl
mov
push
add
pop
jnp
cmc
lret
mov
bound
and
adc
stc
in
stc
ds
leave
xor
icebp
add
sti
es
add
test
push
pop
ljmp
cltd
dec
mov
ja
sti
mov
mov
adc
jmp
cwtl
jns
es
sbb
imul
mov
inc
or
jl
jle
daa
mov
stc
test
lahf
int3
mov
mov
mov
or
inc
cmpl
jb
sbb
cmp
xlat
mov
test
inc
lret
fistpll
dec
js
in
mov
and
insl
jl
test
sbb
jnp
inc
cmp
pop
hlt
cli
jb
and
outsl
mov
mov
cmpsb
fadds
cmp
mov
jae
mov
sbb
xor
sbb
scas
jmp
rclb
mov
cs
rcrb
fsincos
repnz
xchg
hlt
adc
cmp
jnp
fs
pushf
sbb
mov
and
or
mov
or
aad
cmp
xor
or
dec
scas
aad
loop
cmp
fldcw
push
or
movsl
pop
sbbb
sub
pop
mov
pusha
sbb
add
adc
in
pop
xchg
fmuls
into
mov
lea
clc
mov
cli
jmp
or
call
lea
jne
je
jmp
cld
push
xchg
xchg
mov
mov
cmp
repz
sub
jmp
or
lods
push
sub
lock
dec
adc
fistpl
push
cmp
dec
imul
mov
dec
and
cld
jmp
movsl
mov
jle
mov
mov
stc
dec
enter
mov
cmp
add
cmp
pop
sbb
sbbb
push
fdivr
imul
cmp
sbb
test
cmpsl
es
and
pop
sbb
repz
inc
xor
jg
dec
xchg
test
ds
xchg
aad
jns
in
lds
test
and
pop
sbb
lods
jmp
lcall
add
pop
leave
xchg
aas
mov
stc
into
ds
or
inc
mov
aaa
cmp
movswl
imulb
je
sub
pop
cmc
inc
sub
sbb
jp
cld
mov
xchg
cmp
push
int
jge
out
cwtl
mov
mov
jle,pn
mov
imul
shrl
inc
pop
dec
push
add
pop
push
xchg
test
out
adc
ljmp
test
out
pop
xchg
cld
rcll
test
cmp
add
fists
pop
mov
cmp
rcrb
sub
jmp
movb
mov
pushf
adc
pushf
lea
jae
pushf
pushl
pushf
lea
jne
call
jne
cli
idivb
or
mov
enter
mov
push
adc
pop
pop
out
scas
scas
outsb
test
js
xchg
fiadds
jmp
movsl
pop
adc
add
push
jecxz
movsb
xor
scas
addr16
jns
hlt
inc
shufps
out
cmp
and
mov
lahf
leave
pop
push
flds
cmp
dec
lret
mov
mov
scas
ss
inc
jne
inc
xor
push
movsb
xchg
dec
movsb
and
fs
xchg
lret
lcall
loopne
inc
push
mov
add
lcall
je
test
push
ficompl
mov
xlat
push
jne
cs
sbb
popf
dec
xor
in
stos
mov
mov
enter
jle
je
jge,pn
or
xchg
mov
imul
add
testb
jl
mov
mov
push
test
ja
addl
add
jo
sbbl
mov
ficompl
lcall
cld
mov
rorl
setns
test
fisubl
inc
add
clc
out
jno
mov
pop
sbb
mov
dec
data16
lds
mov
fdiv
in
movsl
mov
xor
push
and
call
mov
pop
adc
push
repz
inc
cmp
push
xchg
mov
lret
cmp
push
fwait
sbb
arpl
aaa
jo
and
push
nop
push
adc
cld
xor
xchg
mov
rorb
or
sti
popl
mov
mov
xor
cmp
xor
movsl
or
mov
and
adc
cmp
clc
out
sub
popa
mov
pop
and
mov
sbb
repnz
pop
add
adcb
aas
pop
jmp
cmp
push
push
sbb
push
inc
out
cmp
fadds
das
cltd
sub
je
push
bound
scas
in
in
in
mov
xor
push
lcall
dec
sub
arpl
stos
loop
rcl
xchg
mov
fwait
aaa
mov
sub
fsubl
pop
xchg
mov
fdivl
mov
xor
mov
and
jp
imul
repnz
or
sbb
dec
addr16
or
stos
mov
pop
ljmp
jl
mov
movsb
ficoms
mov
lods
dec
lds
mov
insl
mov
cltd
movsb
push
jno
repz
xchg
mov
pop
int
inc
and
xor
push
sbb
lods
xor
in
sbb
push
and
dec
mov
enter
inc
outsl
xor
imul
in
jnp
sti
decl
cmpsl
mov
lret
into
notl
mov
arpl
clc
pop
dec
fmull
pushf
aas
adc
xchg
cwtl
lods
pop
in
add
cs
jmp
or
lds
dec
inc
imull
out
add
cmp
test
jge
enter
mov
xchg
outsb
cmp
xor
leave
add
pusha
aad
sbb
push
pusha
mov
movsl
pop
pop
outsl
leave
ret
mov
push
ljmp
or
sub
imul
pop
fwait
fwait
xor
in
insb
or
mov
dec
xor
cmc
lret
add
cs
jg
movsb
jp
mov
fwait
scas
int3
adc
testl
xor
into
jne
mov
mov
out
xchg
hlt
push
cli
pop
adc
imul
pop
rclb
hlt
cwtl
std
push
pop
int3
lret
xor
dec
inc
dec
int
mov
or
jmp
js
and
push
add
imulb
je
mov
inc
ja
dec
inc
inc
dec
sbb
inc
add
addl
jp
insb
sub
fwait
in
and
arpl
push
cli
jmp
lods
jp
and
sub
and
xchg
mov
mov
sub
pop
sub
mov
daa
or
ret
mov
mov
ret
dec
lods
popa
jp
or
or
cmpsb
data16
mov
and
jb
dec
push
call
fmull
mov
imul
insl
xlat
or
inc
dec
xor
jmp
mov
jmp
call
adc
xor
cmpsb
enter
imul
mov
xchg
inc
jbe
repz
bound
int
push
sub
stc
mov
cmp
mov
jnp
ljmp
rol
cwtl
mov
test
pop
push
xchg
clc
outsb
inc
cmp
daa
jle
clc
xchg
pop
rcr
js
std
enter
rcr
shlb
insb
or
xchg
adc
dec
out
sub
xchg
inc
stc
test
xchg
pushf
mov
xchg
jb
pop
dec
pushf
fildl
push
or
or
mov
shl
in
stos
and
inc
xorb
movsl
jecxz
pop
dec
adc
int3
jp
xchg
cmp
pushf
cmpb
pusha
movb
call
add
clc
push
mov
test
cmc
pushf
cmc
test
pushf
call
push
daa
fs
push
xchg
aad
repnz
dec
ret
dec
sar
jmp
shlb
or
mov
mov
xor
dec
es
icebp
dec
std
xchg
fsubrp
ds
ficoms
or
std
mov
sub
imul
xor
out
cltd
clc
movsb
adc
or
adc
add
mov
cs
sbb
inc
mov
cmpb
inc
lcall
out
insl
addr16
and
ret
and
imul
and
push
cmpsb
roll
cmpsl
movsb
adcb
mov
out
stc
aaa
movsl
in
subl
jno
stos
test
into
call
jns
add
nop
movsl
mov
stos
pop
bswap
pop
roll
mov
cmp
push
mov
add
gs
lret
addl
push
lcall
or
cli
lcall
imul
cmpsb
stos
add
imul
dec
xchg
mov
das
jecxz
add
roll
fimull
mov
and
loope
lock
int3
mov
push
scas
iret
fisubrs
sbb
aaa
dec
mov
repz
jle
xorl
pop
imul
sbb
mov
mov
js
cli
mov
push
xchg
mov
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jne
pushf
pushl
movw
lea
jmp
data16
mov
mov
sub
and
sahf
pop
cwtl
roll
lret
lret
or
jns
push
fcmove
mov
or
rol
mov
aas
and
inc
loop
jb
or
fcomps
xchg
testl
inc
dec
out
jle
adc
xor
fiaddl
data16
mov
sub
dec
inc
and
xchg
imul
mov
and
xchg
aam
rorl
shl
pushf
xchg
mov
pushf
pusha
lea
call
call
jge
sbb
sub
xchg
or
sbb
xor
pop
mov
das
daa
fcmovnb
dec
sub
jo
bound
dec
stc
push
cmp
xchg
fsubrl
out
inc
xorb
jbe
and
in
lret
pusha
xor
out
dec
push
adc
pusha
mov
sahf
cmc
cli
lods
jmp
xchg
mov
mov
lea
call
call
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
fs
pusha
inc
add
mov
mov
neg
shr
xchg
rol
stc
dec
shrd
mov
shl
sar
rcl
mov
cmc
push
cmp
mov
cmc
sub
pusha
call
lea
jne
not
movsbw
cwtl
cwtl
movb
lea
lahf
push
pushf
setl
lea
movb
movb
mov
movl
call
push
dec
enter
cmp
dec
iret
or
sbb
lea
outsb
pop
test
addr16
lcall
mov
jmp
sbb
in
and
test
jae
sbb
or
sub
shr
mov
test
lock
adc
stos
jbe
cmpsb
xor
sbb
or
data16
inc
lods
mov
es
leave
lods
dec
xor
xchg
popf
lahf
roll
cmp
mov
xorb
push
insl
push
dec
stc
pushf
jmp
pushf
pushl
movl
mov
pushf
movb
movb
pushl
ret
sbb
test
in
sub
das
outsl
movsl
rcll
popf
movsb
je
ja
mov
test
xlat
shll
sub
or
sahf
testb
pop
xor
or
add
or
jmp
lret
pminub
les
stc
xchg
xor
add
inc
dec
test
jbe
into
mov
or
gs
mov
add
xchg
mov
or
hlt
sbb
test
outsb
daa
pop
lahf
push
mov
xchg
xchg
aad
scas
mov
adc
mov
pushf
ja
pop
mov
lcall
and
into
mov
adc
push
mov
test
xlat
fs
pop
push
push
shr
jns
stos
fistpl
push
fldcw
filds
jecxz
movsl
push
pop
push
add
rolb
jo
xchg
mov
mov
sahf
cltd
pushf
mov
fisubl
dec
pop
rcll
mov
pop
out
sub
sahf
xchg
shll
inc
lds
sub
fstps
clc
jg
or
pop
pop
test
lahf
or
mov
or
in
daa
sub
pop
scas
pop
push
adc
inc
int
dec
pop
push
imul
sbb
dec
xlat
movsb
call
es
dec
insb
or
inc
movb
inc
test
jbe
rcl
adc
icebp
add
into
mov
repnz
addr16
inc
inc
xchg
mov
lret
fmulp
dec
jle
dec
mov
and
popf
push
push
push
or
inc
dec
mov
icebp
lret
xor
xor
popf
inc
rcl
test
adc
sbb
insl
add
popa
addl
inc
jae
in
frstor
pextrw
add
xchg
fs
mov
jbe
pusha
imul
and
dec
add
mov
fldenv
xchg
or
fistpll
mov
push
cmp
or
dec
adc
dec
or
movsl
mov
and
iret
insl
loop
mov
div
test
outsl
push
xchg
call
dec
pusha
jge
push
test
scas
out
jecxz
call
xchg
test
icebp
jbe
cmp
jmp
xchg
add
cli
stos
in
push
adc
mov
sbb
mov
mov
pop
imul
inc
dec
mov
or
add
xor
jmp
iret
in
test
stos
adcb
dec
adc
ljmp
dec
in
mov
cmpsb
mov
pop
adc
cmp
mov
ficomps
cmp
into
sub
mov
and
imul
mov
idiv
mov
rclb
adc
xchg
fnstenv
jno
mov
sbb
jae
enter
dec
push
sbb
negb
push
mov
pop
push
or
xlat
movsl
xor
je
movsb
lret
jns
test
jnp
xchg
aam
rcrb
sbbl
jo
jmp
xchg
or
and
movb
lea
jb
bt
stc
bt
pusha
cmpb
call
jmp
fnstenv
jmp
ficompl
mov
push
xchg
xor
lahf
iret
add
movsl
fistpl
xchg
push
les
push
pushf
sbb
cmp
and
and
mov
jno
sub
dec
rcrl
jmp
test
cmp
dec
dec
in
sahf
cmp
insl
jo
inc
cmp
mov
sub
or
add
adc
mov
mov
add
pusha
mov
enter
xor
xchg
mov
sbb
cmpl
lds
or
fisubrs
jb
aaa
jmp
or
pop
movsl
jl,pt
push
inc
rcl
cltd
push
rcrl
rclb
fcmovne
loop
insl
xor
sub
in
xor
mov
test
push
test
push
adc
xchg
xchg
lret
pop
or
mov
or
cmc
cmc
popl
xor
cmpsl
pop
xchg
mov
out
xor
mov
jge
int
xor
icebp
movsb
fistl
fisubs
mov
call
test
cmpb
pusha
movb
pushf
jmp
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
aas
jg
jmp
rorb
xlat
enter
mov
push
test
or
lcall
mov
repnz
pop
loope
mov
mov
push
loope
rep
mov
jge
leave
into
xchg
pop
movsb
outsb
pop
outsb
orl
ret
aad
clc
aad
jae
cmpsl
and
lods
in
sub
cmp
sarb
mov
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
lcall
jo
std
ret
stc
ds
mov
mov
fwait
addr16
push
mov
aaa
sbb
sub
jmp
cmpsb
fwait
rcrl
cmp
cmpsl
cmp
rcrl
sub
inc
lock
mov
add
adc
bound
lods
out
xchg
lret
mov
mov
sub
hlt
scas
xor
in
cwtl
mov
ds
ljmp
push
xchg
pop
lcall
fmull
cmp
sub
push
sub
lcall
xor
je
xchg
adc
dec
enter
push
movsb
mov
add
test
in
sbb
xchg
or
cmp
xor
out
dec
sub
mov
imul
sbb
lea
ss
sub
and
lahf
xchg
mov
dec
and
or
sbb
xor
shll
and
fstl
in
or
incl
push
pusha
aaa
sub
testb
adc
popa
pop
in
sub
mov
aaa
and
inc
mov
aas
push
and
add
pop
cmpsl
pop
fxch
dec
adc
adcb
fsubrs
inc
xor
aad
xchg
inc
mov
mov
add
inc
mov
imul
cmp
mov
jb
in
pop
nop
setbe
adc
lock
add
test
mov
movswl
xor
addb
xchg
lcall
pop
enter
sub
dec
fdivp
mov
dec
clc
xchg
jbe
sbb
xor
stos
pop
out
aaa
jecxz
inc
inc
or
sub
je
xchg
push
daa
shl
fnstsw
pop
dec
add
lock
sub
inc
xchg
mov
daa
js
xor
add
add
sbb
inc
add
inc
xorb
fimull
cld
push
xor
cld
mov
xchg
popf
fildll
xor
icebp
loope
fistl
or
loope
mov
push
insb
xchg
xlat
inc
dec
imul
es
adc
mov
scas
mov
add
lcall
adc
test
xchg
leave
pop
hlt
inc
es
mov
lret
ds
mov
adc
jmp
pop
outsl
inc
cmc
xor
popf
dec
xorb
mov
xchg
mov
inc
jno
movsb
sub
loopne
pop
inc
pop
pop
loopne
aad
mov
mov
movl
insb
rclb
lock
xor
je
jg
sub
cmp
insl
pop
int
xor
popf
sub
mov
and
lds
pop
xchg
loope
ss
add
or
add
inc
clc
mov
daa
int
aaa
in
scas
or
jmp
bound
popf
loop
mov
mov
add
cmpsb
scas
xor
fisubl
addr16
push
xlat
xchg
inc
jge
call
mov
jmp
jp
add
insb
movsb
loope
je
imul
mov
pop
testl
test
cmp
ljmp
fs
das
xchg
es
cmp
fs
dec
imul
sub
in
scas
out
mov
dec
in
dec
or
loopne
cwtl
inc
icebp
add
jmp
fistpl
sub
lret
adc
fcoml
sbb
insl
mov
push
push
xchg
cs
bswap
mov
popf
insl
fdivp
mov
pop
into
jmp
je
mov
inc
popf
pusha
bound
jne
mov
and
mov
mov
dec
push
fs
jl
push
add
lcall
cli
lds
mov
gs
xchg
out
movsl
add
pop
leave
and
or
int
add
sub
cmp
fidivs
clc
fimull
mov
sbb
loopne
je
push
pop
sti
jmp
pop
inc
fcompl
push
aam
rolb
or
add
xor
mov
pop
call
sarb
imul
repnz
xchg
jmp
sbb
xor
lcall
lahf
add
add
aas
adc
test
mov
ljmp
lcall
es
inc
push
jbe
add
mov
cltd
xor
jbe
test
sub
fprem1
mov
loope
shrl
dec
into
jg
mov
dec
adc
cmp
outsl
dec
lahf
xlat
test
pop
mov
lret
or
mov
inc
dec
dec
xor
cs
insb
add
adc
push
insl
sbb
fs
aad
in
aam
into
adc
nop
dec
mov
mov
repnz
pushf
pop
test
jge
fidivs
xchg
inc
cwtl
out
scas
or
fmul
sbb
scas
pushf
loopne
lods
in
xor
jl
aas
iret
addr16
popf
adc
mov
nop
mov
dec
jmp
fistps
xchg
mov
pop
stos
test
jo
and
mov
sbb
std
sub
repz
pop
ficoml
sbb
dec
pusha
mov
xor
add
test
aas
mov
scas
adcb
enter
push
cmpsb
or
imul
icebp
out
inc
pop
inc
inc
and
inc
sahf
add
add
ret
and
mov
mov
xchg
test
les
add
and
mov
or
sub
orb
and
test
mov
cltd
imul
movsb
add
out
in
lods
xchg
and
inc
cmpsb
imul
cltd
mov
or
fsubp
and
pop
ret
and
xchg
or
or
and
rorl
add
popf
cmpsl
enter
xor
fdivp
fidivs
sub
ret
sahf
mov
in
stc
or
or
add
mov
sub
jmp
orl
push
jle
sbb
js
in
gs
cmc
bound
call
adc
je
jg
jmp
lods
xchg
movsb
jmp
sti
pop
lret
cmp
or
dec
add
sbb
jmp
enter
adc
or
lea
or
mov
cmpsb
or
and
pop
pop
sub
sub
in
dec
jnp
sub
jmp
cli
sub
and
pop
lock
and
in
dec
mov
jmp
stos
mov
insl
or
pop
and
repz
movb
cli
in
lock
mov
push
call
dec
out
mov
adc
les
inc
loopne
jmp
sub
mov
mov
addl
into
adc
jmp
test
xchg
and
mov
or
or
pushf
call
mov
int3
jmp
push
add
dec
add
call
cmp
rcpps
enter
mov
push
push
add
lea
inc
mov
xor
add
sbb
in
aas
add
or
mov
cltd
fwait
sub
mov
repz
ficoml
addb
call
cmp
sbb
popf
mov
stc
movsl
aam
xchg
or
sub
push
pop
jg
in
jmp
mov
call
sub
sti
sub
mov
imul
imul
jae
dec
out
or
jae
adc
or
mov
out
dec
in
or
push
sbb
outsb
dec
out
imul
lods
mov
or
lcall
push
leave
std
lock
cmp
rolb
push
cltd
cmp
lcall
pop
add
lcall
sub
clc
mov
out
push
rorl
setle
or
movsb
adc
cmpsl
jno
scas
pushf
sbb
adc
inc
sbb
fcoml
lods
mov
xchg
in
add
push
add
or
cs
sub
pop
jmp
xchg
add
mov
arpl
or
sub
fildl
insb
lds
mov
gs
loope
lret
or
loopne
test
mov
outsl
cld
and
fildl
cmp
icebp
stos
add
or
stc
or
and
scas
or
gs
pop
or
xor
call
cwtl
ljmp
or
jmp
sahf
push
dec
mov
arpl
mov
insl
jmp
pop
insb
fwait
sbb
mov
or
pop
mov
sbb
mov
add
mov
sbb
or
test
mov
test
sbb
dec
cwtl
mov
rcl
add
and
js
push
or
pop
popf
call
ds
movsb
or
pop
mov
add
cltd
in
roll
ljmp
mov
jbe
cmpsl
add
ljmp
add
or
mov
out
dec
and
lock
add
or
pop
clc
add
add
mov
shll
clc
add
cmp
sbbl
lahf
jns
testl
ja
xchg
xchg
sub
or
xlat
push
mov
push
adc
cs
cs
out
popf
cmp
mov
xchg
ret
add
popf
insb
movsl
or
fadd
cmp
inc
push
dec
sbb
mov
push
fstl
add
push
imul
sbbl
push
sub
mov
xchg
sbb
pop
lods
xor
push
in
pop
xchg
jecxz
adc
stc
or
stos
ss
add
jg
sbb
sbb
add
push
int3
dec
clc
dec
sub
test
movd
add
xchg
add
add
cs
lahf
add
push
inc
repnz
add
mov
out
loope
xchg
les
popf
add
js
test
mov
cld
fcmovne
and
and
or
mov
shl
in
dec
fs
call
ds
in
jbe
cwtl
cmpsb
sub
mov
sarb
jnp
xchg
sahf
or
sub
dec
cmp
sub
dec
and
dec
add
arpl
cmp
clc
sub
sbb
sub
outsb
fisttps
dec
add
fsubrs
mov
sub
icebp
cs
fisttpll
adc
mov
cmc
adc
enter
call
jp
fmull
cli
sbb
fsub
push
dec
xchg
fstpt
dec
bndstx
lcall
aad
fwait
sub
fildl
adc
adc
mov
sub
or
std
and
cld
sub
mov
xchg
adc
xor
loope
out
mov
sub
jmp
pushl
pushl
test
dec
jbe
push
jg
add
jg
add
dec
sbb
lcall
dec
lcall
and
jns
adc
enter
or
lret
push
fwait
cmp
adc
les
xlat
ret
mov
cmp
add
xor
lock
fiadds
or
push
sub
mov
add
sbb
in
stos
sub
in
fwait
mov
in
and
rorl
ret
insb
dec
or
mov
add
or
clc
add
push
clc
sbb
inc
adc
in
repz
mov
jp
in
sbb
push
arpl
inc
xchg
ljmp
pop
out
push
cltd
mov
push
jp
fisttps
shr
cmp
push
les
sub
into
dec
sbb
ret
leave
xor
jbe
cmpsb
mov
mov
inc
adc
mov
adc
or
ret
clc
mov
mov
mov
sbb
hlt
and
pusha
hlt
hlt
decl
rolb
mov
aas
pop
enter
lret
incl
lret
pushf
cli
call
inc
add
inc
movsb
mov
test
jle
jmp
inc
test
test
adc
sbb
sbb
push
insb
sub
fldenv
dec
cli
inc
mov
mov
sbb
pop
cmpsb
add
pop
fs
pop
loopne
inc
lret
fwait
fs
adcb
les
mov
inc
inc
loope
addb
sbb
enter
sbbl
fistpl
cwtl
cmp
stos
push
and
or
mov
pop
add
ret
adc
in
lods
pop
sbb
fstl
fs
cmp
insb
lds
push
sbbb
in
add
call
mov
test
sbb
xchg
gs
jmp
mov
stos
or
xchg
adc
adc
sar
mov
js
add
mov
inc
fiadds
pusha
xchg
sti
cld
add
add
push
cld
ds
dec
mov
scas
jmp
in
sbb
and
testl
pop
mov
push
repnz
pop
sbb
sbb
iret
push
je
or
mov
lcall
cmpsb
hlt
stos
push
pop
ja
orb
dec
push
mov
cltd
nop
sub
addl
test
add
call
or
les
in
mov
sbb
inc
and
test
sbb
adc
loope
mov
sti
in
adc
jno
add
and
or
push
mov
movsb
rcrl
pop
or
mov
cmp
popa
push
or
adc
fiaddl
fmuls
add
push
inc
leave
call
mov
mov
fisttpl
hlt
adc
in
lods
cmpsb
sbbb
mov
lahf
ljmp
inc
subb
pop
adc
ljmp
sub
or
mov
xchg
fcoml
les
stc
mov
test
jns
adc
loop
sbb
adc
call
xchg
fistpl
mov
iret
mov
les
lret
stos
adc
lret
adc
outsl
mov
add
aas
cmp
sub
or
adc
cltd
enter
pop
mov
and
mov
dec
and
in
adc
add
jg
xchg
lods
pop
push
pushf
sub
or
pusha
lret
lds
pop
imull
mov
lcall
outsb
fmull
test
mov
jle
arpl
cmc
cmp
jnp
bound
mov
lahf
lret
out
xchg
sbb
ror
fwait
inc
loop
push
hlt
cmpsb
sub
roll
inc
data16
push
and
hlt
jle
hlt
mov
ljmp
push
or
jae
stc
mov
imul
nop
stos
daa
call
jp
mov
movsb
popa
xor
push
mov
pusha
hlt
loope
ret
cmp
lahf
sub
scas
mov
mov
jmp
or
cmp
pop
hlt
out
inc
pusha
addr16
cltd
sti
stc
in
addl
push
pop
jne
addr16
sbb
jecxz
hlt
fsub
jl
mov
mov
loope
out
loopne
iret
cld
pushf
in
js
xchg
daa
add
mov
pop
pop
jmp
ret
dec
or
xor
cli
sub
movsb
mov
jmp
mov
xchg
xchg
rcrl
inc
std
sbb
push
lcall
loope
add
add
pusha
sub
movl
xchg
lcall
inc
mov
ficoms
jb
xchg
call
test
and
out
or
adc
sbbl
call
aam
ret
mov
mov
jnp,pt
add
ja
pop
inc
sub
loop
inc
cmpl
sbb
fdivl
or
mov
orb
cltd
orl
adc
sbbl
clc
insl
inc
repnz
inc
cwtl
sub
cmp
stc
fmul
pop
sbb
and
cmp
sbb
inc
xchg
popf
fwait
add
xor
pushf
addl
add
les
scas
in
fcomi
jmp
fsts
repnz
or
or
nop
int3
sbb
jae
imul
add
fs
dec
pop
jge
lret
xchg
xor
inc
ljmp
add
adc
adc
xor
add
xchg
push
pop
and
bndstx
push
mov
setne
inc
push
psubsb
dec
and
push
mov
or
cltd
fdiv
mov
mov
mov
sarb
jnp
jg
lds
sbb
sbb
adc
je
jg
pop
mov
sub
add
lret
or
mov
jl
loop
mov
adc
jmp
lahf
or
or
mov
fucomp
add
popa
in
push
mov
in
push
add
inc
rcrb
test
ret
and
cltd
dec
fiadds
xchg
call
pop
dec
popa
xchg
popa
push
cli
sbb
mov
push
hlt
push
push
mov
sbb
adc
nop
cltd
push
call
dec
mov
sbb
adc
and
leave
dec
ss
inc
dec
fcoml
pusha
int
rcll
arpl
pusha
jg
insb
or
sub
testb
push
or
les
cwtl
out
or
test
mov
dec
sbb
xchg
adc
sub
andb
mov
ret
add
xchg
or
adc
dec
dec
mov
ficomps
xchg
shrb
addr16
jg
jne
or
lcall
inc
imul
sbb
adc
mov
adc
dec
push
dec
pop
ficomps
dec
push
and
sbbl
and
ret
sbb
mov
lods
in
in
rcrl
xchg
dec
sbb
mov
mov
iret
call
loop
mov
js
nop
ret
scas
dec
int3
adc
mov
lds
ficompl
or
aam
mov
mov
adc
add
push
inc
add
add
shl
and
sbb
jl
into
adc
sahf
sbb
imul
int
jmp
pop
add
xor
dec
inc
and
sbb
popf
xor
daa
lret
mov
pop
xchg
push
sbb
rorb
sbb
jg
sahf
xchg
xchg
mov
or
lcall
jo
add
out
mov
adc
test
sub
jg
mov
push
sbb
cwtl
cli
sbb
mov
push
sub
adc
or
sbbb
sub
aam
cwtl
mov
add
mov
faddl
ljmp
lcall
cmp
mov
push
inc
push
jg
fldcw
into
lcall
xchg
adc
loop
sbb
sbb
lods
pop
pop
inc
mov
push
cltd
icebp
add
or
or
or
and
add
loope
loopne
jmp
and
popf
aas
jg
jmp
cli
int
add
sbb
dec
rolb
add
add
add
ret
jmp
xchg
rolb
lcall
sti
out
push
or
or
js
orl
rcrl
mov
mov
adc
inc
das
pop
sbb
xchg
or
popf
loop
mov
xchg
cmp
xchg
int3
inc
jp
loop
mov
clc
lret
or
out
or
push
call
mov
sub
or
imul
or
mov
fwait
dec
leave
loope
lcall
dec
mov
jmp
out
shrb
fcoml
jae
data16
fsubrl
or
pusha
and
dec
scas
mov
sub
wbinvd
addl
sbb
cld
leave
cmpsb
lcall
push
lcall
pop
mov
subb
jnp
and
dec
iret
fcompl
push
mov
cmp
sar
rclb
lods
push
aas
movl
sahf
push
lods
cmpl
mov
inc
in
pop
loop
inc
aad
xchg
or
sub
idiv
loop
adc
nop
iret
out
lods
sbb
dec
jl
test
xchg
popf
inc
aas
add
repnz
mov
into
js
dec
stos
pushf
stc
loop
cmp
loope
arpl
mov
popa
sub
lret
push
add
jecxz
cwtl
sbb
push
or
sar
inc
xchg
stos
mov
rcll
subl
sti
ret
lret
dec
loopne
out
insb
mov
dec
jle
aam
adc
ret
xchg
in
rolb
insb
xchg
dec
inc
or
xchg
out
jmp
mov
xchg
adc
ret
addb
add
pusha
subl
push
xlat
clc
pushf
pop
arpl
add
push
add
pop
cld
ljmp
xchg
and
movl
inc
rcrb
jbe
or
sahf
jmp
lret
sahf
lret
test
fiadds
mov
and
add
rorl
push
fldt
notl
fimull
or
cmp
and
ret
loop
inc
jno
mov
or
call
mov
mov
jmp
xor
pop
add
sbbb
jb
adc
or
stc
into
mov
jg
mov
movsb
inc
clc
stc
loop
pushf
lods
mov
xchg
sbb
mov
mov
popf
mov
add
rorb
xchg
mov
int3
or
adcb
imul
pop
pop
jo
lods
jl
or
mov
test
xchg
daa
or
or
lock
cmpsl
push
xchg
fists
mov
sahf
fisubl
test
in
jbe
fmull
enter
pop
aaa
inc
or
test
hlt
pop
cs
pop
xchg
and
lods
mov
or
sub
and
lods
data16
cltd
test
cmpsl
mov
sbbl
push
daa
mov
cmp
decb
jo
out
dec
ficompl
xchg
xlat
xchg
int
push
or
cli
mov
insl
ljmp
movsb
shl
es
stos
out
lods
in
pop
mov
xor
inc
cmpsl
sbb
inc
xlat
pop
movsb
imul
out
mov
cmc
jbe
imul
cmpsl
cltd
adc
or
dec
fnstsw
or
cs
fwait
ljmp
jl
add
dec
in
xchg
test
fwait
xor
jne
ficomps
ficompl
mov
js
mov
cmc
or
pusha
mov
jmp
xor
in
fisubl
jl
std
ret
lock
mov
mov
jmp
xor
pop
pushw
mov
sahf
mov
xchg
daa
adc
icebp
mov
push
out
mov
mov
fistps
push
imul
sbb
mov
clc
jns
outsb
cmp
lock
outsb
lret
sbb
xchg
cli
sbb
cmpl
les
sbb
jo
mov
lret
clc
mov
xchg
add
popa
adc
jnp
inc
push
in
fwait
cmp
jae
out
fimull
inc
push
or
mov
mov
rep
bswap
movzbl
mov
pusha
movb
lea
jmp
jl
ret
jb
out
dec
fld
add
mov
je
and
dec
cmp
movsb
shlb
or
xchg
sub
rcr
dec
aaa
mov
mov
mov
sub
adc
push
fisttpll
jo
mov
mov
pop
pusha
imull
shl
mov
mov
adc
adc
jp
pop
mov
aas
add
imul
xchg
mov
nop
or
loopne
stos
xor
mov
adc
add
push
lahf
std
repnz
lcall
push
xchg
fdivrs
les
test
outsb
jnp
xor
mov
jg
mov
jo
push
pop
inc
and
xchg
popa
ret
sub
bound
bound
pop
sub
lock
adc
mov
test
mov
add
inc
add
xlat
es
lea
je
rcr
jmp
adc
xadd
mov
xor
xor
sbb
sub
shl
push
lea
bt
cmc
jmp
stos
or
dec
shr
dec
into
ds
xchg
leave
or
adc
or
cwtl
insl
popa
cmp
rorl
ljmp
out
insb
pop
add
cmpsl
notb
sub
orl
mov
mov
pop
inc
data16
inc
mov
lods
cmp
add
jmp
jnp
push
xorl
aam
mov
aam
xchg
mov
sbb
push
pop
or
adc
mov
mov
and
add
jbe
in
scas
in
sbb
cmpsl
or
or
mov
jns
xchg
pop
imul
mov
xor
stos
inc
das
movsb
or
xor
and
mov
stos
dec
and
lea
outsl
or
jae
jnp
clc
xchg
cmp
dec
loope
mov
fwait
sbb
out
out
mov
cs
les
sarb
pop
aam
xchg
dec
push
pop
pop
scas
lock
fistl
bswap
jns
out
xchg
mov
sub
das
inc
and
loopne
rolb
pop
outsl
scas
jle
pushf
lahf
pop
insb
out
mov
push
sub
hlt
repz
stos
push
xor
pop
or
nop
mov
xchg
push
jb
pop
dec
in
out
pusha
mov
icebp
mov
xchg
lds
cs
dec
neg
and
mov
shl
add
shl
sub
das
push
or
mov
daa
pushf
mov
shl
not
mov
rol
push
bt
shld
push
rol
setnp
sub
mov
jmp
pushfw
popw
mov
mov
movw
jmp
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
pop
fsubr
jle
arpl
push
cltd
ficompl
loopne
pop
cltd
iret
mov
dec
ss
fistps
fnstsw
jl
int
bound
xor
repnz
orb
push
pop
and
add
fdivs
adc
shll
xchg
push
gs
fistpll
jno
ret
pop
adc
pusha
call
xorl
fldenv
ja
out
lods
leave
inc
fsubs
or
fs
imul
add
mov
or
jmp
pop
xchg
pop
xchg
enter
movsb
sub
cmp
cmp
cmp
shlb
pop
orl
xor
lcall
mov
ret
ret
inc
mov
nop
lock
xchg
out
cs
cmp
mov
sbb
push
inc
idivb
dec
lcall
cmp
mov
je
add
adc
dec
xchg
adc
lret
push
pop
jne
pop
sbb
int3
sub
daa
push
add
das
out
xor
hlt
test
test
mov
dec
add
ljmp
aaa
jno
jno
insb
fwait
pop
lcall
push
cmp
insl
sub
pop
stos
aam
and
xlat
enter
test
into
cltd
xlat
mov
mull
adc
lea
xlat
nop
and
jmp
into
js
movl
iret
pop
aam
xchg
xor
sub
push
inc
and
pushf
das
leave
loop
fndisi(8087
ja
test
rorl
lods
pop
lcall
arpl
call
pop
shlb
sbb
lret
in
outsb
xor
sbb
fwait
popa
sbb
pop
sbb
push
imul
xchg
sahf
dec
jmp
testl
adc
push
int
cld
mov
sbb
aaa
je
out
gs
mov
add
loop
bound
mov
cli
jmp
test
ja
mov
mov
sbb
dec
mov
bound
shr
clc
xchg
jecxz
insl
inc
ret
pop
hlt
and
mov
mov
call
mov
cmpsb
sbbb
xchg
mov
mov
das
pop
xchg
int
mov
adc
dec
or
xor
es
ljmp
mov
dec
mov
les
mov
ss
mov
call
aam
das
sbb
mov
aam
jae
movsb
ret
lock
ret
andl
data16
movsl
loop
cmp
icebp
xchg
mov
scas
jp
jne
and
testl
mov
aaa
push
insl
xor
cmp
add
cmc
push
inc
lcall
gs
xor
xchg
mov
shl
mov
pusha
cmc
pushf
movb
and
push
call
pusha
lea
call
jmp
fwait
and
bnd
pop
enter
scas
addr16
xor
push
xchg
xchg
push
adc
sbb
pop
arpl
xor
int
mov
fcompl
data16
cmp
incb
ljmpw
adc
and
jmp
hlt
xchg
sbb
arpl
mov
bound
sarl
call
adc
fs
jae
cmp
clc
xor
call
repnz
jge
xchg
es
stc
cli
cmp
rcrb
dec
push
enter
cmp
in
imul
sub
jnp
imul
inc
cmpsb
daa
cld
push
adc
jg
adc
add
loop
mov
outsl
and
jns
cmp
sub
sub
fldpi
push
inc
inc
inc
mov
sub
pop
in
popf
loopne
mov
fisubrs
push
push
cmp
movsb
leave
mov
into
push
push
mov
xchg
inc
jl
add
lods
sub
mov
inc
inc
push
inc
push
dec
xor
cs
insb
add
xchg
push
lea
jb
clc
cmpb
push
jmp
pop
lods
in
push
mov
loopne
pop
mov
pop
arpl
outsl
xor
sbb
in
sub
fcompl
adc
rcr
lcall
shlb
jl
jl
xor
das
xor
jae
sub
popa
popa
push
jge
mov
sbb
arpl
dec
repnz
inc
sbb
cmp
pusha
arpl
sbb
icebp
loope
enter
mov
fs
rclb
pushf
mov
or
xchg
push
popf
pop
adc
or
mov
or
or
sbb
push
or
cmpsb
std
mov
inc
pop
inc
fdivs
imul
call
add
cmp
bt
dec
jnp
sar
lods
cmp
mov
fidivs
test
adc
jmp
dec
mov
leave
adc
lret
and
mov
pusha
sub
aad
test
jle,pn
aad
mov
xor
ss
mov
fists
add
mov
jns
mov
sub
aam
fsts
mov
push
sub
push
push
cwtl
in
cs
jle
push
lods
sub
or
mov
mov
shrb
out
mov
mov
rorb
push
enter
jns
add
out
mov
sub
imul
dec
pop
push
push
rcll
scas
fcompl
pop
or
jae
movsbw
rcl
push
sar
shr
bsr
push
movsbl
or
and
push
xchg
bsf
shl
push
setno
cmp
shl
not
mov
ror
clc
bsr
xor
mov
shr
not
bsf
mov
cmc
test
test
or
push
pushl
pushf
lea
je
call
mov
cli
ret
lods
aad
loope
rorb
mov
mov
xchg
hlt
jge
lret
mov
xchg
sbb
mov
imul
mov
testb
pop
es
mull
or
dec
and
lret
lods
cmp
push
repnz
bound
lahf
jle
nop
jg
movsl
loopne
mov
add
mov
mov
test
mov
shrb
and
pop
mov
cltd
clc
push
mov
fidivrl
jmp
xchg
test
pop
data16
sub
jne
ljmp
jns
jne
xchg
inc
rcrb
das
testb
ds
test
jnp
mov
pop
pushf
adc
xchg
cmpsl
fcompl
into
xchg
mov
clc
cmp
loopne
lods
xchg
mov
call
jmp
push
cmp
call
pusha
mov
push
pushl
push
lea
jmp
push
and
call
sbb
stos
loopne
ficoml
aam
dec
rorl
pushf
fimull
sub
xor
pop
adc
fnstenv
adcb
or
cwtl
xor
test
sbb
stos
sbb
push
cmp
ret
cmp
or
cmp
cmp
bound
sub
push
mov
ret
jbe
xchg
mov
and
pop
push
bound
incb
add
ljmp
cwtl
fisttpll
xor
add
cmc
xchg
push
sub
xor
and
pusha
jge
mov
dec
dec
xlat
pop
mov
mov
jns
insl
mov
int3
sbb
add
cmc
movl
pop
jle
ljmp
rcrl
lret
mov
test
add
adc
fisubs
dec
xchg
lds
mov
pushf
ss
push
mov
pop
and
adc
push
adc
push
push
hlt
inc
mov
sbb
pop
push
mov
outsb
mov
jo
dec
inc
add
mov
pop
mov
in
jb
dec
mov
lods
add
shll
out
fstl
ficomps
stos
mov
rolb
cmpb
xor
cmp
push
dec
xor
cli
mov
test
fstl
int
mov
movzwl
ror
test
stc
mov
jmp
jmp
push
jl
mov
cltd
pop
adc
xor
sub
and
fldcw
pop
push
inc
add
xor
orl
mov
idiv
jle
push
aam
pop
mov
test
ficomps
shl
leave
iret
sbb
repz
lcall
add
sti
cmp
pop
xchg
dec
push
out
mov
aas
idiv
cli
test
jo
cwtl
test
cmp
mov
pushf
ret
movsl
xor
mov
lahf
ficoms
sbb
lcall
lcall
mov
add
mov
inc
xorl
mov
cmp
lea
popa
insl
push
cli
out
xchg
ficoml
pop
inc
mov
dec
mov
pop
or
xchg
fnsave
adc
stos
mov
test
mov
cmp
insb
ret
xchg
mov
rclb
xor
std
mov
adc
insb
out
mov
mov
adc
aam
inc
mulb
arpl
push
in
mov
cmp
inc
dec
fucomp
pop
lods
pop
inc
sbbl
push
adc
xchg
jecxz
scas
jo
mov
in
loope
sub
dec
lds
xchg
push
jge
push
push
sub
adcl
jne
jg
cmp
inc
xor
xchg
and
stc
jmp
or
fld
enter
sub
inc
and
xor
jecxz
mov
add
cmp
mov
or
repnz
mov
sub
mov
out
pcmpgtw
mov
and
xchg
aaa
in
push
sahf
xchg
mov
pusha
lea
call
push
lea
jae
test
stc
stc
push
xor
jmp
stc
cmp
test
jmp
and
sti
jmp
xchg
push
sarb
mov
cmp
fs
lea
repz
ret
imul
mov
xor
xchg
je
xorb
fists
sbb
rorb
adc
mov
push
cmpsb
push
xchg
test
xlat
inc
jecxz
or
addr16
xor
or
mov
and
call
inc
sbb
lahf
pop
lods
mov
push
aaa
jb
mov
add
popf
fbld
mov
mov
and
inc
ds
loope
dec
inc
mov
add
jnp
mov
lea
cmpl
movsb
adc
aam
hlt
std
mov
and
rclb
nop
adc
shll
sbb
sub
or
mov
clc
or
lahf
out
sbb
or
jne
insl
push
xor
pusha
mov
xchg
xor
ret
mov
mov
popl
inc
add
je
push
xor
xchg
inc
pusha
sbb
mov
xchg
xor
sub
fstps
aam
adc
int3
jp
push
xchg
xchg
jbe
inc
and
inc
pop
hlt
mov
mov
orb
das
cli
jecxz
mov
js
dec
inc
mov
inc
sbb
cmp
outsb
mov
jecxz
call
push
pop
add
xlat
push
jae
int3
sub
fucomip
cs
icebp
outsb
es
jg
jl
test
sub
fwait
adc
cmpsl
mov
aam
inc
nop
int
cmp
cld
xor
out
out
ds
mov
jo
mov
push
cwtl
repz
imul
out
or
dec
lret
outsb
out
dec
xor
cmp
or
jbe
adc
clc
sub
and
adc
lcall
push
in
adc
outsb
adc
pop
mov
popa
sub
js
sbb
push
outsl
dec
jp
pop
cld
add
sarl
outsl
loopne
inc
ret
test
fcomps
xchg
dec
add
xchg
mov
sbb
les
rcll
inc
sbb
stc
mov
sbb
adc
adc
xchg
cmp
push
adc
sub
lret
out
sbb
daa
xchg
mov
cwtl
cmp
jp
pop
and
mov
push
ss
lret
mov
stos
cmpsl
jbe
into
sti
out
adc
pop
fistps
dec
incb
adc
or
sub
lret
sbb
pop
sbb
aaa
adc
lds
es
shll
pop
pop
lret
addl
pushf
pop
mov
rclb
or
test
add
jo
ror
add
pusha
dec
mov
cmc
bt
test
pusha
lea
je
sbb
bsf
test
add
rcr
xor
bswap
mov
push
pusha
clc
push
add
push
pushf
movb
bt
mov
bts
lea
shl
add
mov
bt
cmp
jmp
dec
sub
imul
adc
inc
xchg
addr16
xchg
leave
test
inc
xor
loop
test
jns
stos
mov
xchg
xor
mov
imul
mov
jbe
mov
out
stos
push
add
add
lea
or
fdivs
mov
sarb
in
adc
test
loopne
adc
push
adc
into
xchg
dec
and
lds
pusha
mov
cmp
lahf
fistl
into
add
mov
mov
out
dec
xchg
outsb
xor
cwtl
lret
pushl
ficoms
push
sahf
arpl
testb
mov
fcomps
sti
ret
test
into
in
jb
inc
in
pop
jno
cmp
icebp
imulb
xor
sub
mov
mov
ss
sub
pop
mov
in
pusha
jg
daa
push
test
fisubs
addr16
imul
stc
push
adc
mov
lds
fcomps
shrb
hlt
jmp
andl
lods
mov
lods
push
loope
xchg
mov
shlb
sbb
mov
add
neg
sti
add
and
jge
sub
sbb
out
in
fs
dec
pushl
scas
add
mov
imul
movsb
in
pop
and
mov
push
test
xchg
mov
pop
xchg
mov
nop
jno
cwtl
adcl
sbb
mov
push
pop
jae
in
shll
xchg
sbb
out
and
les
xor
dec
cmp
test
mov
cmpsb
cmp
test
cmpl
out
das
test
xchg
dec
mov
mov
inc
or
stc
dec
cld
mov
mov
adc
fwait
lods
mov
dec
movsb
jecxz
cs
jnp
fimuls
inc
pop
fcomps
inc
stc
aaa
jle
add
pop
xchg
mov
mov
clc
cmp
mov
or
hlt
sbb
ds
sti
sbb
add
inc
jg
or
sbb
add
jp
test
stc
inc
sti
mov
pop
adc
xchg
or
add
and
movsl
sbbl
mov
xor
xchg
mov
push
cld
push
movsb
jno
inc
jg
fs
and
loopne
sbb
dec
cs
rcrb
aaa
mov
aam
pop
rcrb
inc
pop
das
incb
fldcw
scas
cld
cmp
test
clc
mov
push
adc
les
test
xchg
push
pop
xchg
int3
or
or
mov
sub
mov
cmp
lea
lea
not
lea
bswap
bswap
cwtl
lahf
mov
mov
call
cmp
pop
xor
hlt
test
stos
pop
mov
inc
sti
rol
push
jno
imul
inc
scas
mov
orl
jmp
xchg
shrb
pop
adc
adc
dec
push
jmp
js
fisubl
call
inc
push
icebp
cmp
mov
jo
pop
mov
xorl
scas
mov
dec
push
pop
cmpsb
insb
xor
xchg
clc
push
xchg
incb
subb
adc
lock
leave
sub
sahf
dec
test
jns
outsb
jno
mov
clc
cmp
pushf
lea
ja
inc
ror
sub
test
add
ror
sub
mov
pusha
mov
bt
pushf
pusha
repnz
movb
pushf
pushf
lea
jne
setnp
pusha
lahf
call
dec
outsb
xor
sbb
repz
in
sub
insl
jmp
or
cmc
cli
out
and
push
scas
mov
cmp
mov
and
fdivr
xchg
jmp
rcll
or
inc
jns
out
fcoms
xchg
mov
jne
xchg
push
test
push
or
idivb
jo
repz
push
rolb
out
aas
mov
push
cld
pop
sbb
sub
jae
movsb
push
push
ds
jecxz
adc
test
notl
mov
loope
out
mov
shrb
push
testb
into
inc
notb
push
push
cmc
hlt
mov
push
lahf
scas
inc
stos
xor
sbb
sub
adc
mov
mov
cmp
adc
pop
xor
mov
cwtl
inc
or
call
adc
gs
call
clc
cmp
pop
dec
xchg
dec
xchg
rolb
pushf
fs
adc
mov
rorl
fsubl
hlt
mov
insl
bound
gs
mov
fsubl
add
push
pop
push
rcrb
test
push
and
cmpsb
repnz
push
fdivs
sbb
in
test
in
lret
and
outsb
pop
pop
dec
dec
aas
pusha
pushf
pop
or
das
cmp
push
push
in
xor
push
outsb
test
test
pop
push
sbb
aam
mov
jge
pop
in
mov
fsincos
test
loopne
shl
imul
inc
stc
aad
arpl
popf
in
or
jle
and
mov
rol
add
in
ret
inc
es
xchg
pop
lret
sub
push
adc
sub
out
pop
pop
mov
fildll
imul
and
rorb
icebp
test
lahf
fdiv
xor
adc
mov
mov
push
ds
orb
stos
das
jbe
das
push
pop
add
lods
enter
clc
lcall
int3
add
sahf
pop
fists
sub
lcall
push
fadds
pop
add
and
out
mov
pushf
dec
xchg
daa
ljmp
out
dec
mov
mov
sbb
int3
push
jp
lea
movsbl
scas
mov
mov
jmp
inc
stos
scas
xor
test
xor
das
icebp
cmpsl
pop
xchg
inc
stc
mov
out
and
add
dec
stc
fs
jae
or
sub
in
xchg
add
dec
rorl
dec
and
inc
bound
in
lahf
mov
pop
push
testl
push
inc
pop
push
xor
xor
enter
jbe
push
int3
mov
aad
leave
xor
inc
xchg
mov
pop
out
and
stos
jmp
insb
sbb
mov
xchg
lret
iret
pushf
jbe
ja
mov
lcall
sub
clc
loop
mov
mov
ret
test
fidivs
mov
add
mov
mov
insb
pop
loopne
pop
sbb
fcmove
sbb
das
sub
xor
dec
iret
es
loopne
pop
sbb
xchg
mov
rcrl
adc
jle
jecxz
pop
and
sbb
xchg
mov
mov
je
out
cli
outsb
inc
cmp
insb
xor
mov
and
push
out
sahf
aaa
and
jg
push
adc
rcll
nop
cmp
add
mov
pop
mov
dec
or
fists
sbb
or
push
mov
push
inc
pop
mov
push
xchg
and
mov
icebp
mov
stos
xchg
jae
lods
push
dec
push
jle
push
pushf
push
mov
xchg
mov
enter
scas
mov
pop
insb
movsb
out
in
pop
push
int
mov
out
fldt
push
ret
adc
or
iret
inc
into
xchg
adc
jo
out
and
xchg
mov
jb
jp
rclb
jecxz
or
mov
cmp
mov
or
add
repnz
adc
jbe
loop
movl
mov
cmpb
call
mov
jp
ds
shl
xor
pop
pop
dec
push
mov
sbb
idivl
imul
rcll
push
dec
leave
pop
mov
out
cmc
test
jbe
sbb
jo
mov
arpl
inc
repnz
push
inc
and
test
out
lcall
repz
adc
shll
and
mov
jmp
daa
mov
inc
pushf
mov
sti
aas
cmc
scas
arpl
mov
in
loope
lea
mov
jge
or
mov
fnsave
cwtl
xchg
pop
ret
xchg
aas
xchg
cmp
xor
xchg
js
and
int3
std
cmp
mov
jbe
lea
pushf
inc
jl
cld
xor
leave
or
fwait
push
inc
je
lods
ljmp
mov
es
cs
lret
xchg
mov
fnstcw
dec
cmp
call
arpl
ljmp
test
push
adc
cld
push
dec
cmpsl
test
lock
mov
inc
je
shl
je
cld
aas
divl
stc
out
test
xchg
xchg
xchg
test
loope
and
push
leave
int3
roll
pop
add
pop
xchg
pop
in
mov
psubw
jle
mov
jp
xchg
push
mov
shll
sub
or
push
push
decb
in
or
jne
pop
rcll
popf
mov
push
fmul
add
hlt
ss
dec
fwait
movsl
jmp
out
lods
xchg
mov
push
jbe
sahf
or
adc
pop
xchg
roll
mov
mov
sbb
cmc
or
xor
loop
outsb
and
fsts
mov
sub
mov
std
and
jl,pn
insl
test
sar
pusha
fiadds
adc
inc
sub
outsb
out
or
mov
mov
adc
sti
mov
and
adc
add
out
dec
mov
mov
adc
ficompl
dec
cmp
pop
sub
mov
and
pop
jg
pop
imul
xchg
stos
cmpsb
jnp
jno
movsl
enter
movsl
push
jge
sbb
out
mov
jmp
push
ds
cmp
in
sbbl
and
inc
cmp
cmpl
push
adc
mov
adc
lahf
push
or
and
cmpsb
gs
les
xchg
orl
fistpl
jo
fidivrs
lods
in
mov
in
mov
bound
scas
jp
ljmp
pop
mov
jmp
jmp
push
imul
ljmp
and
aam
inc
cwtl
push
in
clc
xchg
test
mov
mov
mov
rorl
rcrb
mov
fsub
std
hlt
push
pop
cmp
pop
adc
inc
jns
xchg
mov
subb
lea
aas
or
xlat
xchg
add
dec
xchg
clc
clc
xor
jae
jle
fs
inc
and
add
mov
push
jge
enter
test
test
jb
dec
inc
or
mov
add
push
xchg
sub
mov
xor
push
rcrb
fs
leave
jnp
mov
inc
sahf
popa
jge
or
movsb
push
xchg
jnp
mov
mov
mov
inc
jg
xchg
mov
stc
sbb
inc
fimull
mov
dec
inc
sbb
jge
arpl
push
sub
mov
iret
mov
cld
mov
cwtl
jb
inc
test
mov
push
jmp
push
sub
jne
add
imull
xchg
mov
adc
inc
inc
and
fistps
inc
or
xchg
cld
mov
pop
inc
mov
inc
test
push
test
or
lods
mov
push
les
jno
cltd
out
push
mov
cmp
pop
sub
pop
dec
ret
push
rcrl
adc
push
sbb
loopne
cmp
push
xchg
mov
adc
mov
xchg
popf
adc
or
or
es
orb
and
jmp
mov
pop
rolb
lods
sti
jg
push
xchg
sub
sbb
sbb
lahf
push
nop
sbb
popa
ljmp
jns
jmp
lahf
scas
arpl
push
or
outsl
jae
mov
sub
mov
jmp
bts
sar
sbb
clc
push
ja
btr
aam
rcr
mov
cwtl
push
das
sub
shl
rcl
stc
mov
push
aad
bt
aaa
push
jmp
cmp
repnz
mov
push
pop
adc
popf
ficoml
lcall
adc
mov
mov
int3
ljmp
mov
dec
mov
or
dec
aas
add
imul
add
mov
popa
leave
dec
std
add
or
mov
pop
xchg
adc
in
xor
mov
xchg
mov
inc
adc
mov
divl
outsl
add
fnstenv
stc
jnp
shrl
pusha
scas
add
inc
cmp
popa
test
ficoml
int
add
imul
inc
insb
outsl
jae
add
and
dec
pop
add
pop
fdivrs
pushf
fistps
int
ret
out
sbb
aam
mov
adc
and
daa
dec
sbb
adc
push
jmp
mov
xchg
dec
fsubr
mov
sub
and
push
shrb
or
sbb
rcll
dec
sbb
test
dec
jecxz
lods
push
pusha
fdivp
mov
lods
fistpl
push
mov
inc
or
xchg
and
and
cmp
push
and
push
nop
inc
jl
cli
das
das
ja
xor
xor
mov
scas
imul
loop
push
cmp
add
jb
xchg
inc
fdiv
add
inc
pop
mov
and
and
xor
shll
pop
fs
adc
push
fldt
shld
jne
adc
out
cwtl
or
je
scas
cmp
js
mov
shrl
dec
sub
js
stos
adc
mov
xor
popf
push
or
jb
and
dec
xor
mov
mov
fstps
push
cmp
movl
adc
pop
push
lcall
shl
imul
loopne
pop
pop
sti
sbb
mov
sbbl
jge
mov
repnz
test
jns
test
dec
xor
sbb
fdivp
mov
es
aas
in
push
xor
ljmp
cmp
js
in
rorb
xchg
push
mov
adc
mov
cli
adc
je
push
xchg
fsts
ret
cmp
out
pop
inc
jp
movsl
push
arpl
mov
push
shll
bound
mov
adc
in
fcmovnu
int
pop
dec
idivl
mov
push
and
adc
add
aam
mov
adc
sti
cwtl
pop
xchg
fwait
mov
push
addr16
xchg
sbb
pop
jo
lret
mov
mov
lods
les
lods
or
pop
push
into
xchg
fistpl
xor
xchg
mov
cmc
inc
orb
or
fcompl
dec
jge
jne
repnz
fstps
xor
lmsw
mov
test
inc
inc
cmp
shll
dec
push
cmc
mov
aad
popa
lea
xchg
xchg
fists
mov
or
xlat
mov
adc
lods
ja
jp
mov
push
int3
mov
adc
or
dec
adc
inc
jl
jge
jns
sub
cwtl
jne
ljmp
sahf
test
xor
movsl
fisttpl
rol
pop
les
enter
push
add
inc
dec
adc
push
dec
and
cmp
divb
xchg
addr16
push
lret
mov
add
add
sub
fimull
test
std
lret
and
daa
scas
insl
lods
into
xchg
cwtl
push
xchg
ficoms
or
adc
mov
cmp
xor
jb
scas
adc
std
or
mov
push
out
mov
into
jl
add
pop
shr
jecxz
mov
scas
dec
mov
mov
sbb
lods
pop
push
jle
cld
popa
jb
inc
das
sbb
dec
push
into
xor
xchg
sbbl
mov
sub
nop
and
push
xchg
iret
jg
imul
inc
xchg
mov
jl
cmp
sub
cmp
orb
fisubl
lock
movsb
cwtl
pop
dec
test
in
cmc
mov
dec
inc
mov
testb
into
xchg
test
out
ret
movl
or
mov
jo
sbb
push
out
test
fwait
pushf
mov
inc
mov
push
ss
das
adc
push
aaa
dec
mov
push
pop
mov
dec
std
xor
repz
mov
ss
in
xchg
mov
cmc
std
xor
xor
popf
rclb
cli
mov
or
ja
rorl
pop
imull
out
jge
add
push
in
dec
xchg
cmp
lahf
xchg
mov
js
pusha
adc
inc
ret
adc
sbb
or
xchg
das
iret
mov
cwtl
into
lea
mov
out
rol
adc
icebp
push
aad
pop
lret
rcrl
inc
or
cltd
xchg
mov
xlat
push
testb
dec
cmc
aam
mov
out
loopne
xchg
add
mov
testb
and
shlb
inc
or
or
fcmovnb
inc
push
lret
inc
xsha256
cmpsb
push
bound
loopne
push
xor
pop
addr16
fisubl
sbb
int
mov
mov
frstor
in
ficoms
je
scas
movb
pusha
lea
jne
push
pushf
pop
pusha
movb
push
movzbw
push
mov
movsbw
lea
jmp
xor
aaa
sar
aaa
mov
cmc
rol
shl
add
jmp
lea
jne
jmp
pusha
push
lea
jae
jmp
sar
movzbw
xor
mov
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
mov
lahf
lea
lea
lea
je
push
pushf
jmp
mov
aam
cmp
loope
out
sbb
sbb
xchg
mov
sub
sti
outsb
pusha
mov
es
hlt
mov
sub
jmp
jno
movsl
sbb
pushf
and
sbb
in
cmp
inc
or
dec
popa
mov
or
xor
xchg
loop
fstps
mov
pop
push
jno
adc
pop
pop
sbb
mov
iret
adc
push
inc
cmpb
xchg
mov
pusha
pushf
push
lea
jae
call
pop
inc
js
hlt
or
sub
loop
sti
cmp
inc
clc
test
xor
adcl
inc
out
aad
cmp
ja
add
xor
adc
out
mov
stc
jno
pushf
fcompl
xor
xchg
loop
sbb
dec
out
lea
jnp
sub
iret
or
xchg
fbstp
scas
shlb
das
mov
jle
mov
or
or
push
inc
test
mov
xchg
and
mov
or
lahf
js
and
mov
jb
pop
cmc
icebp
xor
das
ja
fisttps
mov
repz
add
mov
mov
rolb
bswap
iret
or
push
cltd
push
int
test
in
jb
xchg
mov
repz
pushf
push
int3
mov
and
push
sbb
js
jae
mov
xor
sbb
arpl
rorb
sahf
or
lods
fisubl
outsb
jl
mov
sarl
mov
imul
ret
fisttpll
add
das
push
add
pop
sub
xor
mov
dec
xor
fsts
dec
add
stc
mov
int3
cld
jnp
mov
jnp
lea
xchg
test
sub
lahf
fmull
rol
fnstcw
or
adc
arpl
mov
mov
mov
test
out
loop
sbb
ror
and
cwtl
cli
jge
and
aas
pop
aas
stos
pop
and
cwtl
loope
jge
sub
imul
pop
andb
mov
lret
out
pop
adc
inc
lea
inc
push
scas
insb
out
rcl
add
fdivrp
add
cmp
sub
pop
and
out
das
idivb
push
or
xchg
mov
and
inc
xor
add
sbb
lahf
pop
sbb
add
ret
aaa
sub
std
hlt
shl
cmp
sub
dec
push
inc
or
mull
dec
or
mov
popa
repz
fstpl
daa
repnz
jae
pusha
adc
cmpsl
sub
ret
mov
js
outsl
cld
jae
push
out
aas
cmpsl
xor
pop
push
xor
loopne
pop
xor
push
push
js
icebp
lea
mov
mov
inc
sti
scas
out
mov
xchg
mov
cmp
mov
or
int
push
adc
roll
sti
insl
mov
sub
mov
sbb
jle
nop
or
push
daa
ss
sbb
xor
sbb
call
cmp
sub
into
in
adc
and
rcll
cmp
dec
jg
loopne
pop
mov
sbb
xor
cld
mov
sbb
cld
pop
sbb
loopne
xlat
sbb
mov
or
mov
lods
cmpb
dec
ljmp
int
rclb
xchg
dec
cmp
jmp
out
jbe
mov
sbb
jb
or
jge
ret
dec
jg
xchg
push
fmul
lret
test
mov
notb
outsb
pop
jb
cmp
ljmp
cli
jne
popf
mov
sub
push
stos
aas
adc
lds
xor
in
out
lret
into
cmpsb
shlb
pop
add
into
xchg
pop
xchg
iret
sub
mov
sbb
addb
mov
aaa
push
xchg
mov
in
and
xchg
lods
mov
pop
sbb
jbe
into
jae
aas
xor
mov
fs
mov
sbb
and
xchg
fnstsw
or
pop
sti
cld
mov
push
pusha
add
sub
pcmpeqb
cmpsb
mov
xchg
test
pop
xchg
movb
pop
cltd
fistpl
fisubrl
xchg
add
clc
cmc
mov
cmc
cmp
test
jmp
mov
mov
mov
lret
cld
xor
xor
pop
enter
add
lock
xchg
sub
repz
or
fmul
rcll
mov
mov
call
mov
ud1
dec
fwait
das
jb
jne
sahf
mov
xor
popl
enter
cwtl
xor
rclb
ja
fnstsw
xchg
sbb
cmp
sbb
mov
jg
insb
out
inc
push
push
adc
add
mov
mov
add
jecxz
insl
cmc
jnp
movsb
outsb
pop
and
nop
mov
popa
push
pop
adc
jecxz
mov
sti
cld
xlat
sbb
lea
pop
negb
cmpsb
in
adc
jnp
popa
lcall
lahf
mov
rcrb
cmpsl
lds
ljmp
inc
add
and
xchg
cmc
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lret
ret
orb
inc
add
dec
adc
jp
addr16
sub
mov
xchg
xchg
je
xchg
fmul
push
je
pop
insl
adc
xor
rcrb
xchg
mov
jne
lods
bound
jle
push
out
push
das
daa
mov
cmpsb
in
loopne
push
xor
and
jno
pop
in
enter
shrl
or
std
mov
mov
xchg
movl
ss
jmp
fs
je
pushf
push
lea
jmp
inc
xchg
aad
push
sahf
imul
rcl
pop
xchg
dec
ds
cld
lods
arpl
mov
das
in
pop
jno
and
adc
mov
cmpsb
stos
xor
pop
es
nop
out
mov
into
jle
dec
pushf
lret
mov
mov
lret
shlb
dec
sti
lods
xor
pop
inc
sbb
pop
and
gs
leave
mov
jbe
test
cltd
stc
jb
pop
imul
and
and
fs
daa
gs
sbb
test
sub
push
xor
movb
test
bt
cmc
not
call
mov
aad
ds
scas
in
push
dec
into
push
aad
inc
stc
sub
mov
jbe
dec
mov
cmpsl
jnp
shlb
and
addr16
jne
cmpsl
mov
sti
fldt
in
add
cmpsb
xor
stc
stc
jmp
lret
mov
jmp
sub
pop
jo
insb
fsubl
sub
loope
mov
xor
or
adc
add
push
cld
or
push
xchg
repz
sbb
xlat
sarb
and
or
hlt
xor
pop
arpl
and
push
sbb
daa
sbb
cmp
inc
test
fsubl
call
or
or
mov
mov
mov
mov
xlat
int
jge
sub
mov
cli
push
iret
insl
add
sub
jecxz,pn
nop
mov
pop
repnz
mov
mov
jge
sbb
mov
or
loope
cmp
jecxz
adc
push
mov
icebp
movsb
xlat
adc
js
cmp
loopne
xor
dec
mov
push
add
jns
imul
pop
stc
jmp
repz
enter
cli
hlt
into
rolb
pop
lret
or
mov
push
shrl
jo
iret
xchg
in
lods
xor
pop
int3
inc
leave
gs
or
fwait
or
loopne
xchg
jmp
outsb
gs
lods
movsl
out
cmc
daa
dec
inc
mov
mov
pop
popa
hlt
ja
mov
cld
mov
lret
xor
mov
and
loopne
or
icebp
mov
lea
jb
pushf
mov
pusha
pushl
ret
mov
sbb
xchg
xchg
aad
sub
push
paddq
lock
cmpl
pop
int
lret
mov
add
scas
push
push
dec
jp
fucom
popa
aaa
es
adc
mov
into
cltd
jno
cmp
test
dec
inc
xlat
jne
mov
imul
mov
jno
sbb
push
add
in
lahf
fbld
lret
xchg
mov
pushl
lea
jns
test
cmpb
pusha
call
jl
in
movsl
icebp
stc
shr
mov
pusha
sbb
xchg
ret
sti
mov
jb
add
push
jbe
iret
push
je
bnd
xor
gs
jecxz
hlt
std
mov
push
push
inc
cld
adc
mov
mov
jne
retw
jp
xor
lahf
sbb
lret
adc
pusha
jns
ret
xchg
ficoml
dec
mov
xorb
adc
or
lret
mov
enter
mov
shl
aaa
jae
push
cwtl
aad
lds
dec
inc
xchg
mov
dec
dec
call
icebp
jp
iret
jle
add
jno
pop
mov
call
nop
push
ljmp
ret
cmpb
in
dec
sbb
repz
cmpsb
jge
jns
aam
mov
mov
xchg
jno
sbb
scas
enter
js
std
lea
shl
stos
lods
mov
popf
mov
adc
xorb
adc
cmp
mov
mov
pushl
lea
call
jmp
xchg
or
pop
fwait
mov
mov
pop
mov
ret
xor
push
int
or
sbb
js
push
sub
xchg
adc
add
movsl
xor
aad
rolb
insb
jge
out
jae
rorb
push
inc
push
fidivl
mov
jae
inc
xchg
ret
mov
subb
loop
repz
imul
dec
dec
loopne
adc
and
lcall
mov
xchg
mov
pusha
movzbw
movb
cwtl
pushf
lea
cwtl
mov
pushl
pushf
lea
pushl
pushf
movw
movl
movw
movb
pushf
push
mov
mov
movl
push
pushf
pushl
ret
not
lea
dec
adc
xor
mov
movsb
loop
jmp
bound
xchg
aaa
pusha
inc
dec
pop
cmp
ja
pop
dec
fbld
sbb
add
in
inc
notl
mov
sbb
ja
dec
jno
ret
pop
cwtl
mov
and
lods
adcb
dec
mov
sub
sahf
jns
mov
test
push
mov
sub
inc
lcall
xchg
or
adc
adc
cmpb
mov
fxch
pop
fs
jbe
fimull
inc
push
loopne
xchg
stc
cwtl
mov
out
out
addr16
mov
lods
and
ljmp
sbb
lcall
pop
ror
jnp
lret
cmc
ret
mov
jg
push
inc
dec
add
mov
mov
btr
cmc
jmp
cmc
test
pushf
cmp
jmp
push
pushf
mov
pusha
push
pushl
ret
mov
push
pushl
ret
push
add
popl
cmpsl
pop
ds
lods
fistps
fstpl
push
pop
iret
xchg
sbb
addl
mov
les
frstpm(287
hlt
push
push
sbb
dec
decl
sub
std
sbb
mov
sub
call
lock
shrb
mov
and
adc
aaa
outsb
popf
fsubl
flds
xchg
movsb
les
lock
inc
rolb
cmp
mov
idivl
arpl
fucomi
ror
inc
lds
pop
in
xor
test
pop
dec
xchg
test
test
cmc
mov
mov
sbb
insl
mov
cmp
jbe
or
addl
add
aad
negl
or
lods
cmp
push
out
cmp
and
aam
jns
into
xchg
lods
repnz
imul
mov
jae
cwtl
push
ja
rcl
cmp
outsl
movsb
ficoms
popf
popa
lcall
ret
cmpsb
jmp
mov
sub
mov
dec
push
sti
sub
adc
push
xchg
cltd
mov
sbbl
push
push
xchg
mov
mov
insb
mov
sub
sarl
inc
fwait
iret
lock
cmp
rcl
cs
jge
mov
dec
pusha
push
xchg
jae
cwtl
mov
insl
xor
and
int
mov
mov
and
push
loope
mov
sub
add
ss
dec
mov
xchg
std
scas
movsl
fmulp
cwtl
mov
dec
mov
inc
xlat
jg
lahf
push
add
iret
xchg
cwtl
sbb
pop
cmc
adc
mov
jmp
inc
aas
cmpl
push
sti
arpl
xchg
push
xlat
nop
adc
jnp
or
fs
push
or
pop
pop
and
incb
push
sbb
or
xor
enter
fsubl
int3
cld
ss
mov
movsl
xchg
xchg
mov
negl
inc
add
std
sarl
cmp
jb
out
fwait
mov
or
cmp
fmull
lods
dec
icebp
xor
call
sub
out
xor
mov
pop
mov
push
mov
jle
in
fisubl
sbb
popa
decl
mov
and
xor
jae
loope
in
inc
mov
xchg
int
pop
aaa
sub
pop
sbb
pop
js
add
and
repz
push
mov
rolb
sub
cmp
sub
push
pushl
push
pushl
popl
movb
pushl
stc
pusha
cmp
jmp
lcall
ljmp
and
into
mov
js
mov
jne
jb
outsl
sub
aam
bound
stos
adc
mov
test
mov
mov
dec
iret
xchg
mov
faddl
pop
lret
push
clc
aaa
inc
ja
je
insb
xor
insb
sub
out
lds
popl
out
sub
xor
adc
cltd
push
loop
and
cmpsl
mov
inc
les
cmp
cwtl
hlt
jne
sub
push
sbb
mov
mov
rcrl
dec
mov
inc
sbb
lock
stos
inc
dec
xchg
out
cmp
imul
fsubs
xchg
shlb
cmpsl
cmp
bound
adcl
pop
xchg
inc
jge
js
jb
jb
push
jno
movsb
notb
push
jl
xchg
pop
xchg
add
mov
xor
outsl
sub
jmp
mov
push
adc
rcrb
das
sbb
pop
and
mov
push
lock
adc
xor
test
stos
sarb
lahf
adc
repnz
clc
mov
jns
stos
pushf
std
lret
mov
loop
xor
fcoms
cli
sti
mov
push
lret
xchg
in
js
xor
push
shlb
dec
or
dec
cmpl
mov
movb
cmpb
pushf
call
dec
sub
test
mov
bswap
cmpb
sub
stc
insl
shlb
imul
bound
and
adc
les
xchg
xchg
xchg
push
daa
test
jbe
push
and
and
mov
adc
repnz
addr16
mov
out
jb
push
and
out
fs
popf
out
dec
jg
insl
sub
es
mov
cmp
sarb
sub
jle
push
dec
test
sbb
rcll
sub
dec
or
push
pop
fisubrl
push
pusha
scas
jmp
std
add
mov
lcall
push
pop
dec
add
flds
xor
cmp
jge
dec
icebp
sub
in
fnstenv
jne
cld
popa
mov
mov
lods
pusha
fimull
jmp
xchg
xchg
xchg
mov
xchg
pusha
push
movl
pusha
movl
pushf
push
push
lea
jmp
mov
call
push
lock
std
std
xor
imul
ror
iret
cmp
mov
pop
mov
xor
jecxz
mov
in
push
pop
aam
push
iret
add
jecxz
sub
test
icebp
push
mov
jae
xchg
inc
inc
sub
movsl
xchg
xchg
cmp
cwtl
adc
jmp
xlat
dec
mov
xor
loope
clc
mov
mov
stos
imul
loop
test
fistps
cltd
push
add
pop
jns
inc
lea
jge
xlat
dec
hlt
psrld
pop
jl
xchg
cmpsl
jo
clc
and
pop
fcomps
lock
fwait
jae
sbb
mov
sub
addr16
daa
dec
bswap
iret
sub
insb
not
mov
data16
mov
popa
mov
mov
mov
mov
outsb
mov
bt
bt
bt
shl
mov
sete
pushl
lods
jmp
push
inc
push
rcr
rcr
ror
dec
neg
rol
test
sub
pushl
not
not
call
xor
rorl
mov
int
lods
fs
sahf
rcll
jb
lret
or
popa
or
push
cmp
leave
movsl
pop
sub
in
xchg
add
imul
add
jmp
aaa
sub
in
imul
sbbl
fcoms
fs
outsl
cmpsb
inc
loope
fucom
icebp
cmp
and
aas
jmp
pop
fcomps
ljmp
les
dec
push
daa
leave
ret
or
push
cwtl
lret
pop
lcall
popa
fiadds
cmp
jne
xchg
dec
xchg
js
xchg
mov
cmpb
shrl
data16
push
mov
mov
and
jg
push
inc
mov
add
jb
xchg
and
dec
sbb
and
xchg
pop
mov
xchg
aaa
decl
cmp
cmp
addr16
out
imul
mov
into
add
cld
xor
mov
insl
sub
and
movsl
xchg
incb
dec
dec
xlat
movsb
enter
mov
sub
mov
fnsave
push
push
or
pop
xorb
call
xor
sub
or
daa
call
pop
inc
pop
inc
cli
loopne
outsl
xchg
repnz
inc
xor
inc
in
jle
jge
daa
sub
int3
fcomps
shrb
mov
mov
aas
jle
sbb
pushf
popf
movaps
lods
mov
mov
arpl
pop
int
lret
enter
push
lds
cmpsl
cmp
lock
push
adc
and
xchg
mov
mov
and
xchg
out
int3
mov
out
sub
sub
jmp
bound
dec
xlat
adc
movb
add
lods
push
pop
and
sbb
jns
loopne
fbstp
mov
hlt
cld
xchg
dec
aaa
es
ja
mov
inc
imul
sti
mov
clc
or
push
outsb
pop
sub
insb
or
sti
sti
xor
clc
add
mov
sub
cmpsl
out
insl
cli
lea
repnz
xlat
test
xchg
xor
mov
cwtl
inc
lds
xchg
or
mov
outsb
popf
insb
lods
out
popfw
push
adc
xor
scas
mov
popa
pop
jle
push
lret
mov
rcrl
adc
jp
cmp
mov
sub
and
xchg
adc
cmpsl
ret
inc
dec
and
jl
rorb
sahf
mov
push
inc
inc
adc
shrb
inc
sub
pop
out
xchg
pop
sbb
jbe
lods
bound
leave
or
mov
call
push
push
js
mov
adc
rorb
aaa
mov
and
cmp
lea
iret
xorb
xchg
jg
and
cmc
mov
sub
outsl
sub
or
daa
dec
add
fildl
push
jne
jae
into
pop
mov
je
loopne
cmp
dec
lea
scas
lock
xor
push
xlat
xchg
mov
cmp
pushf
push
lea
jb
cmp
pushf
cmc
pushf
cmp
push
pusha
lea
jae
bsf
btc
mov
shrd
stc
inc
mov
bts
lea
bsr
bswap
mov
push
pushf
test
push
xor
clc
test
repnz
mov
movw
lea
jne
and
inc
not
mov
movzbl
sub
call
shrd
movl
clc
btr
bsf
mov
lea
push
clc
cmp
call
shr
test
enter
sbb
jle
out
mov
and
xchg
inc
xorl
inc
mov
jg
inc
frstor
enter
and
test
xchg
mov
shll
inc
hlt
mov
and
outsl
mov
jg
pop
outsl
or
out
mov
xchg
aaa
fsts
pop
repz
mov
imul
test
jns
jns
cld
stos
out
pushf
xchg
mov
jmp
cmp
leave
shl
stc
cwtl
bound
cmpsl
loopne
int3
push
jl
imulb
mov
xchg
dec
pop
push
ret
mov
jl
adc
iret
xlat
pushf
xchg
dec
subl
stos
scas
mov
or
pop
sahf
pop
in
push
pop
notb
cs
or
leave
jb
or
mov
inc
inc
out
cld
cwtl
mov
jne
sbb
xor
sub
test
xchg
mov
mov
jmp
pushf
movw
inc
jmp
inc
ss
insl
repnz
inc
pop
pop
jno
aam
pop
mov
push
nop
mov
and
jmp
or
cwtl
gs
lods
pop
fcmovnu
pushf
xchg
and
xchg
out
jo
repz
adc
inc
das
push
insb
andb
cmp
mov
cltd
add
ret
ret
mov
and
adc
lahf
dec
mov
cmc
xchg
xor
mov
mov
loopne,pn
arpl
lahf
jbe
or
rcrb
clc
inc
popf
fidivl
cmp
cmp
xor
push
pop
pop
mov
xchg
mov
sbb
sub
cmp
fcompl
popa
movsl
out
jmp
in
and
mov
xor
out
imulb
xchg
pop
or
mov
jns
mov
jae
out
dec
ja
cwtl
pop
or
pop
xor
out
and
imul
sub
addb
mov
inc
fdivrl
xor
aad
dec
enter
popf
inc
in
lods
jg
jo
mov
jle
outsb
cmp
adc
clc
xor
pop
fcoms
adc
and
xor
mov
jae
loope
fcoml
pop
into
arpl
andb
cli
fstpl
sbb
je
movsl
addl
add
cmpsl
loope
jno
sbb
xchg
mov
cmp
jbe
insl
insl
pop
pop
scas
or
rcrl
pop
xchg
imul
mov
movsl
push
cltd
pop
mov
cli
cmp
xor
mov
lods
mov
pop
pop
xchg
and
sub
xchg
inc
xor
cld
stos
and
fs
jmp
pop
inc
mov
mov
mulb
pushf
sbb
jge
out
movsb
mov
mov
loop
mov
rcrb
daa
repnz
dec
mov
sub
popf
popf
mov
xchg
xor
test
bound
xchg
mov
xchg
inc
pusha
movsbl
rol
mov
pusha
cmpb
jmp
pushf
pushf
lea
je
pusha
bt
bt
pusha
add
cmp
pushf
cmc
cmp
jmp
adc
xor
push
dec
ss
inc
jg
jg
ja
jne
fisttpl
into
rorb
mov
cmp
js
andb
icebp
cmp
mov
fsts
iret
push
cmp
pop
insl
xchg
sahf
and
test
scas
jns
pop
inc
cmp
nop
stos
pop
jmp
pop
add
sub
dec
add
fwait
inc
ds
xor
pop
dec
add
orb
call
push
sub
out
inc
bound
jmp
pushl
xchg
fmuls
js
fsubs
inc
push
jmp
mov
inc
push
xor
imul
jmp
xor
mov
xor
je
outsb
sbb
in
je
pusha
mov
sbb
xor
cli
fcompp
loopne
in
fs
adc
fistpll
loopne
mov
adc
enter
and
mov
add
push
xchg
mov
and
lods
cmc
popf
mov
cli
xchg
iret
bswap
test
imul
add
cmp
hlt
gs
cwtl
push
outsl
gs
lods
popf
xor
sub
pop
xchg
push
lcall
or
jp
inc
xchg
mov
lds
out
loop
mov
lcall
aas
mov
pop
push
sahf
imul
dec
or
mov
frstor
sub
inc
xchg
dec
insl
jae
push
pop
lret
insl
lock
insl
scas
xchg
xchg
leave
or
inc
sub
cmp
mov
call
addb
push
mov
in
mov
clc
sub
and
mov
aas
out
and
mov
pushf
call
aas
lds
ja
xchg
test
enter
mov
fldenv
lcall
fwait
mov
ja
sub
int3
inc
cmp
movsb
aad
idiv
and
repnz
adc
lods
ret
dec
or
test
sbb
into
cltd
inc
pop
insb
jge
inc
jns
adc
xchg
add
or
fisttps
loop
jl
pop
add
js
in
xor
mov
aaa
jmp
clc
sub
xlat
ret
xchg
mov
shll
fldt
fdivs
adc
es
jle
loop
lds
out
pusha
daa
testl
ds
pushf
xor
mov
andl
jecxz
mov
cmp
or
jecxz
jae
lahf
out
lds
xchg
inc
and
dec
je
push
cmp
cmpsl
xchg
sbb
lahf
and
shl
arpl
cwtl
pop
shlb
mov
in
push
add
addr16
and
xor
mov
inc
divl
adc
inc
jnp
jae
jg
xchg
mov
adc
mov
cmp
cmp
pusha
mov
cmp
and
repnz
in
popf
inc
pop
adc
testl
cmpsb
cltd
sbb
pop
pop
push
add
imul
int3
pop
xchg
mov
pop
sub
shlb
pop
stc
int
xchg
or
mov
jg
fcomps
push
adc
cmp
jmp
daa
xchg
mov
pushf
lea
je
bt
cmc
or
push
mov
lea
je
sub
shld
ror
sub
btc
jmp
push
bound
dec
push
pop
jo
rorl
add
scas
jo
outsb
scas
fiadds
pop
jae
out
subl
inc
mov
add
and
mov
cmp
fcomi
shl
outsl
dec
cwtl
and
xlat
jecxz
je
lret
mov
arpl
mov
add
and
iret
shll
cmp
xchg
cmp
xchg
sub
xchg
test
fcomip
nop
push
scas
mov
pop
sbb
cmovns
cli
ss
scas
mov
mov
xor
or
call
sbb
adc
mov
pop
jmp
in
inc
mov
push
pop
and
push
mov
icebp
and
jp
sbb
ret
xchg
pop
aaa
ret
aam
pushf
cmpsl
or
pop
push
repnz
mov
push
sbb
call
fmul
aad
andl
dec
out
and
mov
sbb
neg
popf
push
xchg
add
cmp
xor
fstpl
sub
pop
jns
push
jb
dec
xchg
xlat
lcall
pushl
jecxz
mov
adc
lret
or
mov
je
or
int
ljmp
test
sahf
mov
mov
call
jb
pop
push
push
push
dec
in
mov
sub
push
adc
pop
rolb
dec
adc
cmp
pop
mov
addr16
inc
lea
pushf
call
std
rolb
call
pop
sbb
lahf
mov
and
lds
mov
xlat
fyl2xp1
inc
sub
imulb
int
ret
std
xor
jle
test
mov
fmuls
add
or
popa
ret
adc
loop
adc
shll
in
repnz
mov
inc
jle
imull
cmp
mov
jmp
outsb
mov
cmp
pop
pop
inc
std
sub
mov
push
dec
xor
pop
out
push
push
out
inc
add
int3
fisubrs
dec
inc
dec
jp
stos
sub
fwait
sbb
push
dec
int
dec
into
cmpl
add
insb
in
xchg
data16
shlb
adc
fwait
xchg
fucomi
lret
sbb
add
inc
aaa
mov
cmp
imul
fcompl
adc
add
rcrb
scas
out
sbb
outsb
test
mov
mov
sub
xor
xchg
sbb
imul
mov
fs
mov
ret
pop
es
and
xor
movsb
aam
clc
mov
cmpsb
and
mov
adc
or
sbb
xchg
ja
mov
add
cmp
cmc
mov
out
mov
fnstcw
add
dec
add
faddl
test
push
adc
adc
xor
rcll
cmc
test
mov
pop
dec
xor
dec
jp
add
sub
mov
adc
test
btc
push
add
cwtl
shld
shld
push
bt
daa
lahf
xor
mov
cmp
jmp
arpl
hlt
imul
jne
insl
aaa
jge
outsb
das
push
popa
cltd
mov
jg
pop
and
jge
and
mov
cmpb
cmpsl
jle
test
xlat
add
cmp
xor
sub
or
ja
adc
xor
xchg
in
lock
cmpsl
jle
sti
in
lret
mov
xchg
mov
xchg
mov
mov
mov
shlb
rorb
xchg
cmp
lret
mov
outsl
adc
fisubrs
dec
mov
adcb
and
imul
lock
sub
enter
jl
mov
shl
imul
dec
mov
cld
addr16
add
cmp
call
cmp
movsb
xlat
mov
dec
add
ffreep
mov
sub
orb
fisubs
out
sub
mov
stos
out
xchg
lret
mov
xorb
and
cmp
es
outsl
xor
mov
js
jo
add
xor
jns
mov
arpl
jae
dec
rol
mov
roll
scas
std
ja
inc
adc
xchg
ds
jle
aaa
cwtl
subb
dec
in
mov
lahf
push
xorl
mov
dec
push
push
cmp
add
call
pushf
cmp
pushf
movsbw
jmp
jl
insl
repz
sbb
cmpsb
in
and
push
lcall
fdivl
movsl
jge
jecxz
punpcklwd
call
push
push
out
sti
push
in
fsts
push
jb
pop
in
mov
dec
imul
and
shl
sbb
filds
cli
jp
arpl
iret
cmpb
xchg
mov
mov
pushf
pushf
mov
push
pushl
ret
jle
xchg
adc
push
mov
fcoms
insl
and
rcrb
ljmp
jo
xchg
mov
enter
push
int3
dec
xchg
pop
mov
jecxz
add
add
sbb
dec
xor
iret
bound
lock
xorb
rolb
or
mov
test
outsl
inc
in
xchg
xlat
stc
cmp
add
add
pop
mov
ds
xchg
movsl
cmp
pop
stc
mov
out
out
dec
sbb
mov
cs
sti
decb
popa
cli
push
fsubrl
push
rcll
pop
and
sbb
idivb
mov
inc
xchg
faddp
add
sub
fwait
mov
mov
sbb
cmp
sbb
ret
aad
dec
std
or
mov
loop
xor
pop
sub
pop
mov
add
sti
outsl
sbb
add
xlat
fsubl
mov
and
sbbl
add
push
sub
jbe
pop
sbb
rolb
cmp
sub
xchg
mov
cltd
inc
lea
imul
movsl
pop
ds
mov
cmp
scas
imul
xchg
xorl
fwait
mov
lds
push
and
ja
inc
or
or
xor
loop
push
cmp
adc
pop
jge
aam
cld
adc
addl
sub
mov
inc
pop
lret
out
jge
pop
fwait
sar
daa
sub
in
jmp
jmp
testb
add
jo
mov
jg
repnz
pop
jmp
mov
inc
and
rol
mov
adc
mov
push
push
dec
mov
jle
cltd
or
cmp
lods
out
inc
xchg
mov
ss
mov
jo
mov
outsl
mov
aaa
push
xlat
mov
mov
lods
cld
rcrl
pop
push
in
pop
push
adc
lret
stos
fmulp
or
icebp
and
jg
push
pop
popf
xlat
cmovb
cmp
sub
adc
xlat
rcr
adc
scas
jl
loop
test
pop
adc
or
mov
and
ret
ret
lahf
mov
sbb
std
inc
cmp
inc
sti
outsl
and
mov
add
xor
mov
out
mov
out
sub
inc
xor
testl
int3
sbb
in
cmp
fisubrs
xor
jecxz
rorb
mov
push
out
outsb
je
xor
or
cmpl
xor
loop
dec
ss
mov
call
lea
ja
call
lea
call
cmp
cmp
pushf
sub
call
ret
fucom
mov
xorb
mov
and
lcall
or
movsb
pop
aas
ljmp
and
or
inc
cmp
jbe
arpl
insb
addl
or
and
sti
add
or
xor
sub
jae
mov
dec
pop
popa
out
or
mull
fmull
xchg
mov
cmp
bt
pushl
cmp
pushl
call
not
jmp
pushf
add
mov
ffreep
loope,pn
ret
jge
jne
imul
mov
das
mov
movsl
fs
xor
fstpt
mov
dec
ds
jnp
stos
jmp
fldcw
fstl
loopne
rcl
addb
mov
jae
mov
xor
push
fildll
int3
add
jge
add
out
add
ret
jno
mov
and
std
push
out
in
mov
iret
and
mov
cmpsb
inc
sbb
addl
fisubl
imul
in
adc
lods
movsl
dec
aaa
test
cld
mov
adc
mov
cld
int3
fsts
inc
xchg
lds
pop
mov
sti
in
test
inc
adc
cmp
inc
xchg
mov
in
dec
mov
inc
xchg
xchg
jp
cmp
adc
rcrb
lods
fstl
inc
xchg
mov
cld
mov
adc
mov
cli
mov
cmp
cmc
dec
xlat
mov
sbb
adc
mov
xor
cmp
inc
xchg
fsubr
imul
inc
rol
cs
ss
cmp
fsubr
and
push
jmp
cli
je
adc
push
mov
cli
mov
popf
stc
jmp
cmp
inc
xchg
jnp
cmp
sbb
mov
cld
mov
adc
std
lret
adc
cld
aam
adc
sbb
and
cmp
inc
xchg
mov
sti
mov
adc
shll
cld
sub
adc
lods
pop
daa
testb
hlt
adc
push
sbb
add
add
insb
cld
dec
and
cld
sub
adc
fdivr
int
cmp
inc
xchg
mov
cld
or
adc
ret
mov
mov
fistl
inc
xchg
lods
in
sub
cli
aam
fiadds
adc
loope
jge
cli
or
adc
loop
or
cmp
mov
adc
std
jp
fmull
inc
xchg
push
cmp
inc
xchg
mov
sti
add
adc
mov
pusha
mov
cmp
inc
xchg
mov
cli
add
adc
jnp
jp
pop
mov
sub
push
inc
sar
lock
in
mov
aam
dec
repz
inc
xchg
mov
in
mov
inc
mov
fst
sti
xor
adc
int
and
mov
das
mov
jl
adc
pop
insl
iret
xor
adc
pop
fimull
add
cld
in
adc
fcoml
enter
aam
adc
test
push
push
addr16
int3
mov
inc
xchg
or
cmc
adc
adc
xor
loop
in
insb
scas
adc
lret
push
cmp
cmp
inc
xchg
mov
cld
int3
dec
adc
setg
insb
fstl
inc
xchg
mov
cld
xor
sbb
je
mov
and
adc
movb
xor
cld
lods
jecxz
inc
rorl
rorb
push
lea
je
stc
cmp
add
cmc
test
cmp
pusha
call
stos
rcrl
mov
sbb
dec
xchg
out
and
mov
pop
mov
dec
lret
or
or
daa
mov
ja
xor
mov
mov
scas
mov
or
jg
inc
imul
mov
popf
test
cmc
jg
mov
dec
addl
arpl
inc
mov
lret
push
repz
fs
jle
xchg
pusha
jb
out
lods
out
lods
popa
fwait
jecxz
pop
adc
ja
inc
test
pusha
out
xchg
popa
cmp
sub
ljmp
pop
lea
cs
adc
cli
dec
scas
inc
shrl
push
cltd
std
popf
push
fisttpll
push
in
mov
xchg
pop
loopne
aam
lods
in
and
mov
mov
inc
pop
outsl
add
push
push
inc
add
in
pop
scas
xchg
mov
push
dec
dec
dec
dec
inc
push
cs
insb
add
xchg
adc
cmp
mov
sbb
ret
xchg
xor
mov
daa
mov
mov
lods
mov
mov
fidivrl
int
mov
inc
inc
pusha
gs
mov
jae
mov
push
or
pop
scas
fs
jns
mov
jns
enter
fcompl
xor
pushw
xchg
stos
inc
cs
fadd
lock
mov
pop
adc
add
addl
xchg
mov
inc
pushf
movb
movb
bt
ror
cmc
bt
cmc
call
jae
add
jns
lret
aaa
nop
dec
lea
cmp
dec
pop
mov
and
adc
mov
int3
xor
add
loopne
repnz
mov
fcomps
mov
or
dec
push
inc
mov
ss
movsl
pop
insb
xlat
ljmp
add
sbb
sub
inc
roll
loopne
insb
mov
mov
xor
lods
loop
fsubl
mov
xchg
xchg
mov
push
and
dec
iret
bound
sbb
push
fcompl
sub
ljmp
je
clc
cmp
jbe
hlt
inc
test
jnp
movsb
movsl
ds
pop
insl
sbb
mov
mov
sbbl
xchg
test
or
mov
out
xor
shll
outsl
mov
cmp
jne
xchg
mov
dec
cmc
mov
push
pusha
sub
mov
cs
sbb
sub
add
fxch
dec
cmp
or
in
and
mov
mov
or
aad
in
fisttpll
notb
iret
push
xor
mov
mov
cwtl
arpl
push
movsl
pop
inc
and
dec
stos
jbe
pop
arpl
jno
sbb
dec
push
cmp
adc
inc
ja
insb
out
xchg
mov
jecxz
repz
out
es
push
push
rcrb
aas
cmovge
cmpsl
cmp
cmp
orl
test
add
jo
stos
add
cmc
rcrb
xor
or
insb
xchg
repz
lock
cmp
fisttpl
mov
push
jle,pt
pop
cmp
dec
inc
scas
jo
shrb
adc
xchg
das
imulb
sbb
add
mov
sbb
cmp
mov
cmpsl
shrb
subb
out
test
sub
and
frstor
mov
cli
aad
lea
stos
enter
dec
jl
repnz
rcll
repz
cli
mov
sub
mov
stc
mov
sbb
mov
nop
cs
sarl
jo
adc
imul
lret
push
iret
fadds
int
jp
aaa
xor
popa
icebp
jle
mov
lahf
scas
rcll
xchg
sub
rorb
add
xchg
mov
xchg
or
dec
push
sbb
stos
loopne
push
mov
xchg
rcrl
jg
push
adc
es
leave
xor
bound
cmp
push
push
pop
and
sbb
and
fs
or
aad
das
adc
xchg
gs
mov
mov
sbb
mov
pop
leave
iret
shll
lods
jp
xchg
scas
xor
outsb
xor
loope
pop
or
xchg
mov
sub
cmp
rolb
xor
imul
add
or
inc
mov
pushf
icebp
bound
shll
and
inc
push
iret
cmpsb
xchg
shll
fwait
mov
push
aam
loopne
repnz
je
shll
pusha
gs
imul
push
jmp
adc
xlat
cmc
inc
orb
adc
movsl
cmp
cmp
inc
inc
and
cmp
push
mov
mov
and
lock
mov
ljmp
aas
xchg
mov
lea
je
call
stos
mov
call
sub
inc
mov
xchg
sbb
pop
stos
in
mov
or
push
std
out
xor
mov
xchg
fnstcw
aad
cmpsb
dec
cmp
lock
out
scas
push
and
jne
gs
js
cmpsb
jno
mov
push
fidivrl
clc
add
mov
mov
adc
test
or
lods
lds
pop
movsb
mov
popf
mov
hlt
into
dec
mov
lds
mov
jbe
lock
fists
aas
adc
arpl
ja
mov
and
adc
or
stos
outsl
sub
call
cwtl
icebp
call
int
mov
mov
pop
lcall
pop
aaa
idivl
xor
fsubrp
fs
xchg
fdivl
orl
and
push
and
out
scas
sarl
or
loop,pt
mov
adc
dec
xor
add
jge
insb
lock
or
sbb
sbb
aad
jbe
lcall
mov
xchg
cwtl
fbstp
lds
pop
loop
popa
repnz
mov
add
add
add
add
add
leave
sub
pushf
mov
sub
mov
mov
sub
xchg
shrb
lods
mov
sub
and
xor
mov
sub
into
mov
add
add
add
mov
xor
mov
mov
add
add
add
cmp
xor
add
mov
add
add
add
psadbw
add
mov
sub
repz
xor
aam
sub
out
mov
add
add
add
leave
xor
add
mov
sub
xchg
out
das
add
mov
sub
jbe
xor
add
mov
add
add
add
dec
jmp
add
mov
sub
xrelease
cld
mov
sub
pop
cltd
xor
add
sub
push
mov
add
add
add
mov
mov
sub
and
xor
adc
sub
add
add
inc
int3
xchg
lret
cmp
adc
ret
stc
mov
clc
insl
repz
fadd
xlat
jns
sbb
push
push
sub
leave
mov
sub
andb
mov
cmc
ja
mov
movsl
cmp
imul
outsl
cmpb
adc
xor
popa
sbb
js
sahf
pop
repnz
cmc
movq
pusha
mov
cmp
outsl
iret
or
mov
mov
adc
add
mov
call
bsr
lea
bt
cmc
sub
cmc
stc
cmp
pushf
pushl
popl
movb
movb
cmp
jmp
add
mov
dec
in
mov
or
int
into
xchg
add
test
jbe
sub
xchg
daa
out
jb
pop
cmc
mov
cmp
lock
addl
cmpsb
sbb
jl,pn
inc
cmpb
addl
mov
rclb
lock
sbbl
mov
dec
xchg
imul
xchg
mov
push
cmp
stc
test
mov
pusha
pushf
lea
je
bsf
mov
sbb
add
movzbl
test
sar
mov
pusha
pusha
bt
cmp
test
pushf
pushf
lea
je
not
bt
sbb
add
push
cmc
mov
clc
test
pushl
add
pushf
mov
and
not
mov
pushl
call
xchg
outsl
es
lods
inc
imul
pop
fwait
out
push
out
out
mov
sub
xchg
leave
sarb
in
ds
push
or
push
and
xor
cmp
mov
lods
mov
ds
or
sbb
adc
rolb
inc
inc
xlat
outsb
push
mov
cld
jmp
and
mov
cmp
xchg
or
fnstenv
mov
ficompl
ss
lds
scas
push
dec
sub
mov
pop
mov
dec
mov
inc
xchg
mov
sbb
xchg
sub
movsb
mov
das
pop
push
xchg
jae
enter
mov
xchg
push
xlat
mov
mov
scas
movsb
icebp
repz
jg
xchg
pop
or
push
fsts
adc
push
pop
bound
icebp
je
scas
ret
push
sbb
aaa
in
addl
add
push
inc
cs
dec
aas
jns
lret
xor
adc
addb
xor
cld
dec
pop
push
cmpsb
out
lods
imul
xchg
mov
bt
xor
call
lea
jbe
btc
mov
shld
cmc
test
add
shl
mov
shld
add
movsbl
add
pusha
rcl
test
movl
and
pusha
setne
neg
mov
push
call
in
mov
aad
stos
ds
outsl
scas
jb
jne
pop
xchg
mov
xchg
or
xchg
sti
mov
rcrl
lods
cli
cld
xchg
cwtl
lret
jge
xor
jl
inc
fstl
xchg
mov
sahf
lahf
les
jno
fisttpll
pop
imul
cld
out
inc
lods
cmp
inc
in
ds
mov
pop
pop
mov
inc
jns
add
jb
sub
mov
push
arpl
jne
adc
daa
mov
mov
popa
pushf
dec
add
imul
arpl
ret
movl
incl
mov
test
insl
movsl
negl
or
js
std
push
and
stc
lods
push
fsubrs
cwtl
fcoms
cltd
pop
rorb
push
fwait
mov
mov
cmpsb
cmpsl
jb
movsb
xchg
dec
pop
jbe
enter
in
xor
xor
cwtl
mov
cmc
movsl
jo
mov
mov
testb
inc
mov
xchg
into
jno
cmp
pop
lret
popa
fprem1
repz
in
sbb
call
inc
movsl
ss
adc
sbb
and
loope
pop
or
out
loope
mov
mov
clc
xor
pop
dec
sbb
outsb
mov
mov
xor
imul
daa
add
push
push
pop
push
mov
les
std
imull
stos
mov
and
cs
xor
cmp
lret
cmc
lret
or
jg
in
jns
sbb
out
scas
fwait
aas
mov
sub
pop
stc
outsb
sbb
fcmovu
cmpsb
es
sub
dec
roll
in
fidivrl
hlt
pop
cmpb
push
inc
das
aas
sub
cmp
aaa
adc
daa
mov
xor
add
aaa
lock
xchg
mov
jne
xchg
or
imul
jle
pop
inc
mov
xchg
xchg
xor
add
inc
lret
int3
bnd
push
sbb
stc
sub
adc
bound
aaa
clc
pop
out
and
xlat
rcll
ret
adc
out
stos
inc
adc
inc
int
jno
mov
xor
jno
jns
bnd
pop
enter
xchg
lods
inc
fidivs
imul
sahf
ja
ss
cli
out
jo
jle
push
pop
or
iret
repz
xchg
or
mov
aam
sub
loop
lret
insl
pusha
pushf
fstl
rolb
xchg
mov
ror
mov
clc
bt
and
jmp
add
inc
gs
outsl
fs
gs
imul
add
adc
movl
cli
mov
popa
sbb
fnstcw
rcll
jle
mov
and
loop
cltd
bnd
fnstcw
jne
fs
ja
jae
scas
imul
aam
jb
or
push
outsb
movsb
enter
dec
pop
lret
ficoml
sbb
push
jmp
cmc
xor
cmp
fs
inc
lods
jle
aas
insl
pop
mov
adc
aad
push
add
mov
mov
mov
lea
jle
push
pusha
mov
jmp
into
idivl
cmp
in
xor
and
add
push
mov
mov
pop
int3
outsl
outsb
pop
mov
mov
out
xchg
aas
dec
xchg
out
inc
xchg
aam
int3
fnsave
ljmp
push
lods
insl
cli
jg
pushf
push
roll
pusha
fucomi
iret
xor
or
pop
and
adc
in
push
nop
ffreep
lret
es
and
adc
iret
lret
imul
stos
or
test
xchg
lahf
fcompl
rcr
and
mov
push
outsl
xor
fbld
ret
jb
mov
mov
jns
pop
fucomi
cmc
push
push
popf
mov
dec
xchg
js
loop
ljmp
lret
inc
pop
clc
mov
mov
out
addb
rcll
pop
ficompl
dec
mov
scas
xor
mov
add
xchg
test
test
inc
aas
cmp
pop
fmul
pop
push
movsl
xor
or
pop
xchg
dec
insb
icebp
cmpsb
mov
sbb
hlt
bound
icebp
mov
sub
pop
lods
jecxz
cwtl
ja
bound
mov
movsb
or
sbb
bound
push
adc
push
cmpsl
jnp
dec
dec
mov
arpl
push
nop
fmul
add
out
inc
xor
movsl
imul
movsb
xchg
lret
and
and
bound
dec
and
mov
daa
xor
cmpsb
shlb
add
mov
sbb
sarb
pop
sub
push
in
xchg
rolb
cltd
pop
roll
mov
stc
cs
lods
in
lahf
lahf
xchg
mov
pushl
mov
pushf
lea
je
clc
mov
sub
test
mov
movsbw
bswap
mov
shld
shr
dec
mov
cmc
jmp
mov
adc
mov
sub
cmc
or
shr
sub
not
btc
shr
shr
mov
cmc
jmp
inc
rorb
lret
xchg
push
lahf
fistps
shll
mov
lods
xor
mov
popf
sbb
mov
scas
xorb
icebp
add
inc
ss
ss
xchg
inc
xchg
orb
jge
inc
xchg
mov
push
cli
scas
pop
mov
mov
mov
and
idivl
ret
or
sti
ss
xchg
xchg
mov
lods
pop
or
jge
jne
inc
mov
mov
and
mov
jbe
add
outsl
jle
sahf
cmpsl
nop
or
shll
leave
fistpl
or
mov
or
jmp
jo
add
add
lcall
lret
cmp
push
xor
mov
xchg
stos
or
into
push
mov
daa
bound
mov
outsb
mov
jb
jbe
rcl
call
insl
mov
test
cmpb
xchg
enter
xchg
mov
lea
jne
sub
mov
clc
add
bt
stc
clc
movzwl
bsf
movzbw
mov
clc
push
test
stc
add
cmc
mov
stc
jmp
daa
aam
add
iret
out
xor
ljmp
cwtl
pusha
jmp
dec
out
rcr
lret
cmp
dec
les
mov
xchg
pop
addl
pop
scas
out
fsubl
arpl
test
pop
xor
adc
ret
mov
jbe
jbe
ljmp
push
jno
xchg
push
fildl
push
dec
push
movsl
out
loop
and
aas
jnp
dec
xchg
mov
leave
jbe
cmp
out
mov
jb
mov
jb
cmp
je
nop
add
imul
push
adc
fwait
pop
lea
cld
sub
mov
add
cli
test
loop
inc
add
adcl
push
rcrl
cmp
add
fsubs
mov
mov
or
xor
pop
icebp
mov
fnstenv
add
test
push
fs
pop
fcom
jecxz
cltd
pop
gs
push
jmp
call
xchg
mov
mov
stos
inc
mov
push
dec
cmpl
cld
xor
mulb
cli
pop
xchg
ljmp
ss
fdivp
test
mov
mov
cmp
cmp
aaa
mov
xlat
xchg
pusha
mov
flds
out
adc
dec
dec
jae
test
pop
and
sbb
aam
jp
push
inc
test
cli
mov
xchg
mov
pop
jmp
ror
jmp
mov
enter
sbb
push
cmp
and
push
pop
cltd
lret
sti
imul
pop
lcall
xorl
pusha
movsb
sahf
outsl
pop
out
lahf
xchg
mov
dec
repnz
jnp
leave
in
dec
clc
add
pop
scas
mov
xor
out
or
cmpsb
fs
pop
sbb
movb
xor
scas
mov
loopne
add
cs
sub
js
imul
movb
arpl
leave
add
ret
aaa
mov
lahf
or
mov
int
insl
jne
pop
gs
xor
jns
pop
or
gs
adc
jnp
scas
inc
push
adc
sti
in
cmpsb
cmp
shlb
add
cs
jns,pt
xorb
sub
stc
mov
push
jne
or
aas
movsb
add
fnsave
stos
sbb
repz
fmull
and
in
lods
pusha
pushl
dec
jmp
ret
int3
loopne
lret
cmc
xchg
pop
xchg
dec
adc
xchg
int
lods
popa
mov
outsw
xor
pop
fs
add
scas
pop
sbb
dec
in
int3
and
mov
sub
lret
jl
out
sub
aas
xchg
mov
push
cmp
rol
xor
sub
jecxz
push
mov
jno
push
mul
sti
sbb
cltd
into
imul
pop
sbb
sub
push
xchg
mov
push
push
xor
xor
fs
insb
add
repz
cld
or
inc
pushf
inc
xor
ljmp
mov
clc
cli
jmp
mov
or
ss
rolb
lret
cli
int3
shrb
or
imul
js
faddl
lods
push
push
or
std
mov
or
mov
mov
xchg
inc
stc
scas
loope
dec
adc
sbb
test
cmp
xchg
jo
sub
xor
ret
mov
paddusw
xchg
xchg
push
scas
push
xor
jl
xor
mov
sub
push
test
arpl
pop
cmp
enter
jle
mov
pop
add
repnz
repz
xchg
mov
or
dec
inc
lea
mov
mov
int3
xchg
push
adc
stc
call
jle
and
cmp
jbe
adc
fidivrs
shl
cmp
lcall
dec
pop
in
sbb
mov
mov
shll
iret
lahf
lahf
push
dec
mov
insl
pop
cld
or
push
outsb
cmp
jnp
fldl
push
test
fidivrs
inc
in
lods
mov
and
xor
ja
xchg
mov
cltd
ja
xor
lret
loop
dec
add
inc
mulb
cmp
xor
sub
fistpl
rcrl
adc
ret
xchg
push
dec
in
and
and
mov
repz
cmp
ja
test
push
imul
fbstp
fs
sahf
lea
lods
adc
fs
cmp
int3
scas
out
mov
add
enter
mov
lods
out
and
push
lcall
push
pushf
movl
pushf
call
push
stc
mov
pushf
add
pushf
jmp
out
jnp
ljmp
int
dec
adc
mov
ret
cmpsb
repnz
jmp
inc
add
mov
lret
sbb
lahf
loopne
iret
and
cmc
and
sub
pushf
lock
mov
hlt
add
jg
aas
cmpsl
inc
inc
jl
out
xor
mov
add
into
and
pop
insl
mov
and
push
outsl
push
out
push
repz
push
addl
and
call
or
int
inc
mov
divl
ljmp
movsl
xchg
pop
aam
aam
aas
shrb
push
lea
aam
test
setp
movsb
sub
lods
in
pusha
pop
not
mov
arpl
and
jmp
pop
rcl
mov
sub
fcmovne
test
scas
or
movsb
lods
jnp
sub
sti
mov
and
fistpl
cmp
xor
lds
into
jo
iret
pusha
sbb
int
push
xchg
int3
xor
mov
cltd
or
adc
fldenv
repnz
mov
xchg
iret
or
inc
xchg
mov
leave
push
mov
fnsave
scas
insl
mov
fwait
loop
jmp
movsb
arpl
rcrw
jnp
add
std
inc
mov
and
mov
sub
lea
in
in
scas
rcrb
sahf
fisubrs
je
mov
jmp
xchg
dec
imul
jo
push
das
in
push
aas
icebp
orl
add
jle
push
or
xor
and
and
test
fmul
xchg
imull
push
sbb
xchg
xchg
mov
lea
jne
pusha
jmp
imul
jle
fucomi
adc
mov
int3
add
cld
scas
push
lret
into
mov
push
adc
fwait
imul
sub
popa
adc
aaa
stc
insl
xor
fsubl
jecxz
cmp
mov
add
fwait
push
out
jbe
dec
lea
fwait
cmp
std
add
iret
adc
ds
lods
bound
sar
xchg
mov
clc
int
clc
cld
add
js
adc
xor
sbb
mov
jae
call
push
aad
outsb
in
loope
push
lahf
and
or
push
loope
test
adc
xchg
cs
sbb
adcb
pop
push
xchg
fidivs
ja
nop
jne
lret
dec
jmp
stos
jno
fucomp
inc
sbb
pop
sbb
and
pushf
lret
dec
repz
dec
sbb
lds
mov
push
sbb
sub
and
push
add
stc
int3
xchg
or
lret
loop
adc
in
int3
nop
dec
mov
add
gs
adc
xor
out
mov
int
test
xor
pop
xchg
adc
or
idiv
jmp
cmp
test
in
fsts
jle
push
adc
popa
outsb
push
mov
cli
or
in
adc
push
pop
push
in
enter
mov
mov
sbb
loopne
mov
fisttpll
imul
je
mov
movb
call
push
or
xor
pop
xor
les
inc
push
dec
mov
or
sbb
add
aas
push
adc
les
mov
jge
jge
movsb
mov
lret
pop
inc
inc
cmp
aad
add
or
je
xor
cs
lods
push
addr16
add
inc
inc
xcrypt-ctr
cmpsl
pop
push
out
popf
fdiv
mov
xlat
mov
lock
sub
mov
add
ret
divl
push
loopne
mov
aam
sti
idiv
add
pop
stos
outsl
movsl
pop
cmove
xor
imul
mov
test
push
movsl
loop
jns
dec
mov
xchg
xchg
pop
xchg
dec
jp
cmp
ja
sub
notl
mov
aad
fldt
mov
mov
arpl
cld
xchg
mov
movb
lea
push
mov
call
outsl
push
sahf
adc
mov
popa
xchg
rorb
sarb
sub
lcall
popa
inc
xchg
into
sub
ficoms
lods
push
gs
and
jmp
mov
mov
cmp
cwtl
or
add
testb
or
cmp
fbld
lret
mov
mov
popa
outsl
and
xchg
cltd
push
bound
mov
push
outsl
xchg
cld
cmp
test
push
push
pop
or
jmp
xchg
push
mov
xchg
mov
pusha
pusha
jmp
fwait
xchg
push
sub
scas
ljmp
mov
jmp
pop
push
xchg
outsl
es
dec
pop
jbe
pop
jp
fsave
imul
leave
cmpl
arpl
jnp
sub
pop
fstp
mov
xor
mov
int3
call
shll
cld
fsubrl
pop
dec
and
in
mov
repnz
mov
ljmp
push
in
cli
jne
sbb
sub
cmp
mov
push
push
pop
loope
dec
incb
xor
daa
jmp
xor
testb
movsb
sbb
cltd
test
lds
cmp
jg
pusha
aam
iret
movsb
jae
mov
and
in
mov
loope
mov
cmpsb
fs
mov
xchg
ret
lds
jg
iret
xchg
push
fmul
inc
mov
cmp
in
xlat
pop
movsl
mov
mov
mov
pop
fstps
ljmp
pop
ret
imul
cmp
aaa
dec
and
pop
push
xchg
dec
mov
bound
mov
push
stos
sbb
call
cltd
pop
popf
push
lea
mov
dec
inc
movsb
int
loopne
imul
mov
out
cmp
dec
sar
in
mul
inc
aad
adc
adc
cmp
test
ds
cmpsb
cs
aam
mov
stc
stc
mov
pop
les
nop
roll
mov
jo
mov
sbb
lods
jl
mov
cmp
scas
inc
jp
xchg
rclb
sbb
ret
sbb
cmpsb
dec
arpl
mov
outsl
imul
push
lret
xchg
ss
mov
mov
dec
sahf
mov
sarb
out
addr16
pop
lods
sbb
add
pop
jmp
pop
xor
mov
lods
inc
jns
adc
movsl
pop
bswap
add
js
out
loope
and
in
jmp
imul
pushf
imul
ss
jo
push
cltd
cltd
push
adc
sbb
and
in
popf
dec
ficoms
lock
add
les
push
bound
fsubs
outsl
cmp
pop
push
or
lahf
lcall
cli
xor
dec
mov
dec
sti
insl
fstp
aam
push
or
fldenv
aam
nop
shlb
repnz
icebp
jmp
mov
notl
pop
cmp
jg
inc
dec
push
pop
out
inc
inc
cmp
loope
add
sbb
jne
adc
lea
mov
sbb
mov
mul
cli
mov
adc
push
xchg
push
add
jb
loop
clc
and
test
out
mov
adc
push
lret
lds
and
sbb
pop
xor
testl
lcall
or
xchg
mov
xlat
lret
pop
inc
and
jnp
sub
add
notl
xor
stc
ljmp
mov
ds
inc
ja
outsl
outsl
cmpsb
or
rol
mov
sub
cmpsb
call
jbe
dec
jecxz
repz
mov
pop
sbb
jmp
mov
dec
rcll
or
cli
call
xchg
popa
add
xchg
rorl
lahf
fsubl
lods
cmp
xor
outsb
fs
or
mov
push
lods
cmp
cli
or
scas
jns
push
inc
ret
popf
loopne
testb
xor
lds
int3
push
inc
loop
cwtl
nop
pop
es
rclb
add
leave
jno
cmp
pushf
call
data16
fwait
scas
xchg
loopne
outsl
sub
scas
in
push
cwtl
aad
les
inc
xchg
mov
mov
sub
xor
or
sub
bsf
shl
test
inc
lea
stc
test
call
out
in
arpl
mov
and
inc
loope
and
pop
and
and
mov
sub
xchg
push
and
mov
inc
inc
test
test
inc
popf
repnz
movsl
jo
inc
cmp
adc
xor
daa
cltd
inc
push
pushf
popf
sub
xchg
sbb
inc
sbb
add
mov
sti
stos
imul
mov
fsubr
mov
mov
das
cmp
je
jns
jg
hlt
lods
out
sbb
pop
sbb
fisubrl
repz
mov
or
pop
fimull
xor
lahf
ret
dec
test
xor
jns
andl
pop
fucom
sub
les
xor
jge
inc
fsts
cmp
push
movl
mov
xor
mov
push
push
xchg
mov
fstpt
imul
cmc
xchg
adc
add
and
xchg
push
les
mov
mov
es
pop
and
cmp
jl
or
jb
gs
jbe
test
mov
xor
adc
mov
inc
daa
mov
jb
mov
ret
dec
pop
adc
fiaddl
lods
les
repnz
pop
and
into
mov
je
push
xchg
mov
repnz
call
add
inc
js
je
jb
arpl
jae
bound
hlt
dec
add
ficomps
pop
popf
rclb
mov
hlt
subb
loopne
jp
cmpsb
xchg
push
dec
inc
xor
mov
or
mov
fnsave
push
push
xchg
add
scas
jl
rol
push
loop
inc
and
xchg
sti
fldcw
xchg
or
lret
fldcw
cmp
stos
sbb
filds
js
lahf
fsts
cmp
jp
out
lock
mov
call
not
jmp
pop
addb
sbb
jp
leave
jnp
insb
xor
lahf
push
xchg
lret
mov
out
les
mov
mov
outsl
mov
mov
mov
sub
loop
vpcmpeqb
inc
nop
jl
xchg
xor
pop
mov
sub
and
or
cwtl
sbb
lret
subb
or
fmul
lds
fists
je,pt
std
xlat
adc
fwait
and
lret
das
lret
or
sub
fcomps
adc
or
jecxz
es
pushf
bound
jl
lds
add
loope
aad
inc
cmp
xor
mov
arpl
add
cli
sub
add
orl
fs
jne
lea
ror
xor
rol
aas
mov
and
not
push
adc
add
rcr
sub
rcl
mov
sub
cmp
push
pusha
test
mov
pushf
lea
je
clc
test
cmp
jmp
fidivl
pop
faddl
les
sub
insl
scas
stos
push
xor
sub
cmp
pop
stos
imul
inc
stos
add
call
cmp
int3
iret
dec
daa
jne
jbe
mov
into
jbe
setno
add
mov
pop
std
enter
pop
inc
inc
in
and
mov
outsb
xor
sti
fstpl
xor
clc
jle
cmpsl
std
sbb
inc
add
test
mov
leave
idivl
xchg
iret
xchg
cmp
jge
loopne
pop
cmpsl
xchg
mov
movsl
stc
sub
gs
into
in
sub
fstpl
inc
aaa
jmp
scas
or
out
loopne
test
pop
lods
push
pop
and
out
lods
xor
jbe
repnz
ret
xchg
in
and
mov
in
add
repnz
xor
je
and
push
jecxz
fwait
dec
push
scas
push
repz
xor
xlat
xchg
mov
inc
outsb
clc
loopne
pop
enter
mov
pusha
xor
or
and
xor
sbb
out
pusha
sbb
in
pop
popf
pop
popf
out
pop
popf
pop
adc
sti
mov
movsb
int3
imul
cmp
jp
pop
in
daa
imul
test
pop
jns
cmpsb
imul
jecxz
mov
sbb
mov
lcall
mov
or
inc
push
fwait
clc
inc
test
jecxz
or
pusha
in
xor
push
dec
icebp
or
movl
xlat
cmp
insb
jle
dec
sub
in
int3
or
cmp
das
jb
sub
out
rorb
dec
fwait
sub
fistps
rclb
fisttpl
fistpl
test
cmp
add
ljmp
fiaddl
pop
jbe,pt
mov
and
cbtw
daa
mov
add
icebp
xor
or
stos
shl
mov
pop
mov
sbb
fnstsw
pop
xchg
dec
jge
xchg
mov
loop
add
or
in
test
imul
cmpsb
shrl
jecxz
pop
sbb
rcrb
add
mov
add
push
je
jb
inc
outsl
arpl
jo
adc
pop
test
fstps
lret
jae
popf
fadd
cmp
adc
fwait
mov
adc
scas
adc
xlat
xchg
push
addr16
xchg
jo
in
aaa
pushf
or
lods
xchg
add
inc
pushf
xor
sbb
repz
shl
int3
clc
dec
add
mov
mov
movsl
out
stos
in
lods
and
inc
lock
mov
mov
inc
mov
mov
pop
xchg
xchg
push
int
ret
outsb
ljmp
fsubl
xchg
adc
ret
arpl
add
sub
pop
dec
jne
dec
and
push
sub
jae
add
nop
jne
xchg
clc
ss
imull
inc
cmpsb
jg
jnp
xchg
sti
jg
cmp
xchg
hlt
xchg
jl
push
sbb
sub
leave
loop
inc
ss
xor
jmp
xchg
inc
jl
xchg
mov
jmp
mov
fs
mov
idivl
js
ljmp
or
push
lock
mov
sbb
jp
js
push
stos
ljmp
push
cld
lcall
sub
cmpsl
mov
lods
lret
push
adcb
pop
adc
mov
std
push
pop
add
int3
dec
push
jp,pt
push
push
xchg
push
push
dec
lea
xchg
mov
mov
jmp
cmp
stos
repz
fidivrl
jb
push
adc
push
leave
nop
dec
rcrb
pop
bound
cmpsb
lret
clc
mov
cmp
scas
push
inc
xchg
inc
xlat
int3
lds
mov
push
push
add
nop
movsb
test
add
not
adc
ret
cmp
fdivrs
xor
xchg
je
push
or
test
shl
popa
xchg
dec
test
ljmp
inc
test
jmp
mov
pusha
pushf
push
lea
jmp
out
sbb
pusha
call
xor
rcll
loope
cmpsb
call
lahf
mov
aas
inc
in
loope
test
adc
lods
mov
fbld
jne
fnstsw
call
cmp
outsb
jmp
or
loop
adcb
ss
dec
sub
ja
dec
inc
xor
or
ja
fisubs
jle
or
adc
mov
out
out
dec
lret
sub
push
mov
push
pop
mov
xor
dec
or
ret
out
dec
leave
xchg
inc
dec
pop
pop
dec
lret
pop
iret
dec
repnz
jno
push
add
push
jae
sahf
lods
rorl
pushf
push
loope
mov
adc
test
cwtl
jbe
jnp
cmp
or
jo
popf
push
push
je
adc
mov
xlat
push
xchg
dec
push
lret
jnp
repnz
xchg
mov
call
pusha
movsbw
movb
movsbw
pushf
pushl
mov
pop
pushf
not
pop
lea
pusha
push
call
push
pop
dec
int
rol
mov
inc
test
clc
xor
daa
loop
xchg
dec
inc
mov
adc
xchg
inc
sub
add
and
sub
cmc
adc
test
jnp
mov
xchg
mov
call
or
cs
sbb
xor
mov
bound
mov
cs
xor
imul
mov
cmp
cli
jp
fstps
lea
adc
or
cmpb
sbb
cmp
add
stos
pushl
lea
jmp
push
lock
std
std
lea
insb
into
mov
ret
ja
cmp
and
pushf
mov
pop
add
xor
cs
mov
jge
stc
in
push
fwait
aam
pop
lret
in
and
cwtl
xchg
ss
sarl
into
das
add
les
adc
xchg
push
inc
test
add
or
aad
mov
adc
dec
pusha
jmp
mov
lea
roll
dec
jle
sti
xor
insb
cmpsl
and
pop
icebp
fisubrs
jle
or
std
fidivl
into
clc
mov
lcall
fldcw
xchg
fsubrl
aad
sahf
cmp
outsb
scas
into
pop
cmp
mov
lods
mov
lock
add
mov
rcrl
mov
push
add
nop
cwtl
es
xor
jbe
in
imul
repz
and
mov
pop
aad
xchg
mov
jns
pop
pop
pusha
ja
movsl
mov
lea
ljmp
dec
cmp
negl
in
fmul
into
push
xlat
insl
cmp
mov
or
mov
pop
xlat
sub
mov
loopne
mov
add
xor
test
cmp
xchg
sub
jmp
or
mov
cmc
ja
insb
push
test
cmc
lods
out
cmpsb
out
push
xchg
mov
fldl
cmp
mov
ret
xchg
mov
cmp
jno
nop
loopne
movsl
cld
cmp
mov
enter
pop
movsl
and
lret
leave
mov
popa
xchg
sbb
xchg
pop
rcl
enter
jno
cmp
mov
jl
ss
outsb
dec
fwait
addl
pop
xchg
daa
sahf
fwait
jmp
lcall
fwait
push
mov
lahf
mov
test
mov
imul
aad
in
imul
bound
xchg
popf
fnstenv
xor
ficompl
out
fs
inc
inc
xchg
mov
out
push
mov
cwtl
jb
add
cmp
sbb
je
fcompl
xor
mov
iret
xor
cmc
dec
and
mov
in
lret
pop
jle
sahf
cmp
sub
sub
jnp
cwtl
xor
lods
in
pop
dec
fists
xchg
xlat
aaa
inc
dec
cltd
cmpb
jecxz
lret
imul
cmpsb
inc
push
mov
dec
cmp
into
int
mov
add
ds
ret
fimull
dec
mov
jp
jl
hlt
pusha
xchg
mov
call
fdivs
xor
fsubp
mov
add
mov
dec
xchg
mov
pop
jbe
cs
mov
shr
inc
cmp
push
xchg
mov
fnstenv
push
dec
je
xchg
pop
shl
cmp
cld
xchg
xor
cmp
arpl
mov
pop
pop
sbb
test
mov
and
lret
roll
mov
stos
cltd
movsl
loop
jno
jne
mov
pop
sbb
fst
lods
mov
jp
push
fsubs
xor
ja
addb
mov
jg
or
aam
in
push
stos
xchg
jno
and
cld
lods
fwait
popa
push
add
pop
loopne
xor
push
repz
mov
mov
mov
mov
or
testb
ss
outsb
mov
mov
mov
add
or
adc
add
xorb
add
in
popf
mov
mov
adc
mov
inc
outsl
in
mov
inc
lea
jns
add
push
addr16
popl
xchg
out
fwait
lret
pop
xchg
std
aad
xchg
push
sti
cmp
inc
aad
clc
fiadds
nop
mov
jmp
ds
clc
call
ret
xor
sub
sbb
sbb
mov
or
int3
in
sub
push
pop
dec
xor
jnp
add
adc
xor
out
sbb
jmp
adc
push
enter
lock
mov
enter
jg
adc
or
fwait
xchg
jo
inc
sbb
in
or
xor
iret
leave
inc
lock
mov
adc
filds
adc
ds
lret
shlb
mov
inc
xchg
iret
xchg
adc
sbb
inc
mov
js
jbe
iret
push
fwait
mov
mov
mov
ficompl
outsb
std
adc
jae
sbb
push
daa
sub
stos
add
leave
pusha
pop
push
pop
and
loop
std
sbb
jg
addl
add
xchg
jns
xchg
ljmp
in
stos
jecxz
mov
jbe
movl
std
sbb
aaa
into
repnz
add
rolb
xchg
cwtl
jnp
iret
push
adc
jb
xchg
inc
aad
lahf
add
mov
mov
adc
cli
and
rolb
and
jb
mov
dec
add
cli
popf
enter
outsb
aam
xchg
or
xchg
movsl
mov
push
xchg
xchg
mov
or
push
jmp
stos
outsl
cmp
fisubl
cmp
in
insb
aad
rolb
jmp
cwtl
daa
outsb
cwtl
cwtl
jmp
dec
aad
fwait
adc
rol
push
jge
jb
movsb
shlb
mov
scas
mov
mov
arpl
out
mov
xor
je
cmc
adc
xchg
push
dec
jl
inc
lret
pop
jl
mov
inc
cmp
cmp
sbb
or
cmp
insb
add
rclb
mov
sbb
cmp
fisubl
push
aas
in
fdivrs
aad
stos
cwtl
shlb
movsl
or
rclb
shrb
leave
ret
pop
sub
test
mov
and
push
insb
out
xchg
xchg
xchg
loope
ja
fwait
dec
dec
or
sub
add
add
mov
jecxz
gs
fwait
aam
jne
cwtl
xchg
out
stos
dec
and
jge
push
mov
clc
insl
fnstsw
push
adc
mov
inc
insb
mov
adc
popl
jg
or
lcall
js
xor
pusha
and
add
in
bound
xor
fsub
jo
or
repnz
sbb
lcall
adc
es
xor
sub
bound
jecxz
jo
fwait
push
and
out
sub
xchg
dec
xor
fwait
sbb
repz
push
or
or
jmp
and
pop
leave
mov
enter
aam
xor
sub
jg
out
ja
les
adc
loopne
addl
lock
add
int
mov
lock
adc
pop
test
mov
cli
xchg
arpl
push
push
add
xchg
xchg
cmp
jle
inc
cmc
popa
int3
cltd
jecxz
xor
or
mov
ss
jns
fwait
jmp
add
aas
aad
push
add
inc
mov
push
push
ja
cli
cld
seta
jp
ds
adc
scas
sbb
inc
dec
test
sbb
xchg
push
and
sbb
jge
mov
sbb
ret
stos
sbb
data16
mov
nop
adc
adc
mov
pusha
bound
mov
gs
xchg
das
push
je
sbbl
add
xorl
or
mov
insb
insl
cmp
jns
xchg
mov
fcompl
sbb
xor
ret
aas
pop
icebp
or
xor
repnz
cmp
imul
cmp
scas
lods
in
scas
push
fcmovnu
add
and
push
cmp
mov
idivb
ss
jge
out
pop
mov
test
mov
xchg
inc
cmc
inc
sub
xchg
imul
test
pop
mov
sbb
push
mov
cmp
mov
jecxz
les
or
arpl
pop
insl
xor
or
xchg
and
sbb
repz
mov
out
xchg
dec
inc
jbe
ret
cmp
mov
cmp
inc
aaa
mov
scas
imul
into
mov
xor
movsl
pop
dec
push
ret
mov
repnz
les
inc
xchg
inc
mov
or
fs
push
mov
push
rorl
mov
inc
aam
xchg
mov
stc
fwait
or
in
fst
insl
shll
xchg
jecxz
hlt
push
pop
fiadds
lock
loop
adc
enter
pop
add
xor
adc
popa
cwtl
sbb
lods
cld
xor
or
xchg
pop
aaa
cmp
inc
jle
xchg
sbb
inc
xchg
inc
es
cmp
lds
rol
fwait
cwtl
add
mov
in
mov
push
mov
dec
add
daa
adc
cvttps2pi
popa
mov
mov
in
outsb
jo
shll
push
aam
or
jecxz
or
pop
shll
insl
adc
loop
jle
mov
rcll
sub
push
mulb
movsb
sub
mov
popa
adc
sub
adc
ljmp
sti
mov
pop
idivl
icebp
andl
leave
or
lods
mov
roll
adc
stc
jp
in
mov
cltd
jbe
push
dec
cmp
adc
adc
jle
adc
test
lret
notb
mov
test
mov
pushl
jmp
xlat
xchg
jae
mov
repnz
dec
fwait
insl
mov
cmp
arpl
icebp
aaa
imul
pop
xchg
mov
lret
mov
imul
mov
daa
outsb
dec
mov
jmp
inc
dec
add
sbb
xchg
clc
iret
pop
pop
pop
adc
sbb
pop
repz
lea
inc
fwait
pop
jno
lods
dec
sub
cmp
insb
stc
mov
popf
push
lahf
xchg
xor
imul
sahf
sub
push
push
clc
addr16
sub
jnp
inc
xor
cmp
in
loope
xor
andl
ret
leave
inc
pop
add
mov
mov
lahf
das
sbb
xchg
adc
test
sbb
repnz
jnp
pop
and
xchg
jae
lret
dec
out
cs
xchg
int3
shr
push
movsl
xor
popa
push
mov
xchg
xchg
das
pop
mov
repnz
jb
mov
cli
or
pop
adcl
insb
adc
cmc
out
into
shlb
cmp
or
aaa
add
cltd
in
stc
gs
in
dec
addb
cmp
cmpsb
shrb
adc
sbb
sti
push
xchg
push
mov
or
orb
testb
cmp
mov
push
jnp
cmpsl
push
xchg
aad
or
mov
pop
mov
xor
pop
leave
out
mov
mov
aas
mov
loop
mov
aaa
test
in
sub
push
cmp
pop
sub
sbb
dec
or
sub
cmp
and
fs
xchg
ror
test
adc
int3
ljmp
lret
fmul
js
jge
mov
call
jnp
mov
cld
jmp
pop
fwait
mov
stos
adcl
dec
jecxz
sbb
adc
mov
shlb
dec
cmp
mov
sub
jbe
shr
xorb
fwait
orl
mov
inc
jmp
mov
lret
sbb
dec
loopne
lcall
fstpt
and
lahf
out
dec
mov
loopne
push
xor
jae
and
xor
cld
jg
push
sbb
cmp
cmp
xor
bound
dec
add
mov
bound
rolb
xchg
push
or
aam
in
fnstsw
addr16
arpl
movsl
movsl
test
shll
out
xchg
push
push
jno
pop
outsl
popa
movsb
mov
int
add
repnz
push
into
inc
je
loopne
add
dec
mov
inc
inc
icebp
rcll
mov
int
sarb
aas
loop
adc
popa
add
aas
popa
xchg
adc
in
or
push
mov
jp
pop
add
adc
test
cmp
dec
cmpsl
xchg
mov
mov
adc
push
adc
iret
scas
push
ret
ja
mov
aad
jg
xor
inc
scas
jb
outsl
aad
sahf
testb
jmp
fwait
std
sbb
jno
and
in
shlb
adc
daa
mov
cmpsb
iret
jno
cmp
hlt
mul
mov
sub
jb
push
xchg
pop
pop
mov
inc
ret
in
xor
imul
mov
mov
inc
out
push
xchg
xor
pop
fildl
sbb
adc
xchg
mov
mov
frstor
jecxz
cli
aad
jnp
sahf
nop
mov
clc
mov
shll
pop
out
aad
int3
mov
lock
cmc
adc
jns
push
and
or
or
jg
sub
dec
jns
mov
jns
movsl
mov
or
les
pop
xor
addr16
iret
sahf
jno
xor
movsl
adc
outsb
sbb
dec
test
lcall
mov
mov
or
cltd
add
xchg
mov
inc
or
jl
in
or
fwait
add
push
fs
shll
test
rol
or
xchg
add
loope
mov
dec
int
rorb
gs
ffree
push
and
xor
sbb
xor
adc
mov
inc
outsl
sbb
inc
jecxz
add
dec
xorl
into
mov
int3
pop
in
loope
in
stc
sbb
dec
mov
test
shlb
mov
push
movsl
std
xchg
ret
adc
movsl
or
fwait
bound
cmpl
std
jne
adc
jae
xor
jno
pop
mov
aas
inc
push
cmp
lea
mov
sub
inc
out
popf
rcrb
xor
mov
lock
incl
and
sub
gs
movl
push
outsb
add
es
push
or
lock
mov
les
into
push
mov
inc
mulb
and
divl
xlat
aad
loop
xchg
jns
adc
incl
push
or
es
fs
int3
cmp
cli
into
mov
cld
lea
fcompl
push
inc
les
cmpb
sbbb
divb
jge
mov
cltd
stos
out
jg
cmovne
in
scas
mov
cmp
test
pop
stos
test
pop
test
repz
or
add
jo
movzwl
mov
and
fprem1
repz
and
rcll
mov
cmp
xlat
xlat
hlt
xor
popf
aad
and
dec
fucomp
hlt
jbe
nop
es
inc
push
inc
mov
jno
lahf
mov
adc
loopne
lds
xchg
decl
pop
lahf
scas
sbb
or
jnp
pop
cltd
lret
fcoml
into
mov
sti
jl
sub
insb
adc
ss
cmpsl
aad
mov
xor
sub
mov
sbbl
pop
push
mov
and
sbb
adc
rol
mov
add
bound
lock
hlt
or
loop
xor
lea
mov
adc
push
call
addb
pop
push
sub
cmp
adc
aad
adc
test
hlt
repnz
jne
mov
icebp
adc
cmp
or
mov
adc
jp
bound
stos
sbb
stos
cmc
icebp
cmovbe
ljmp
mov
xchg
repz
push
add
or
dec
dec
or
and
push
and
xor
add
test
dec
dec
test
subl
xchg
sub
in
jg
int3
test
inc
inc
lcall
sbb
and
xor
mov
mov
lahf
out
dec
or
sbb
loop
imul
popa
int
inc
gs
jne
pushf
pop
cmpsl
cmp
adc
push
aam
sbb
aas
adc
insb
jo
repz
ret
cmpsb
xchg
mov
sub
or
notl
lods
scas
rolb
aaa
ficoml
mov
push
hlt
pop
mov
mov
mov
sub
dec
mov
add
sub
cli
xchg
jle
jno
pop
add
sahf
mov
ja
or
je
sub
mov
cmp
sbb
insl
pop
pop
cmc
mov
xchg
sti
rcrl
mov
fcmovbe
and
adc
decb
ljmp
jl
sub
inc
fildl
out
add
cld
lods
popa
cmp
addr16
jne
test
fstps
pop
push
nop
mov
or
adc
mov
pop
test
mov
icebp
jg
sbb
or
stos
clc
mov
loopne
je,pt
push
add
push
lahf
popf
sub
call
outsb
adc
inc
xchg
xor
out
cwtl
scas
lcall
and
sti
cmp
xchg
jb
in
jbe
scas
mov
inc
sbbb
pusha
lods
mov
jnp
and
xchg
push
cmc
mov
mov
mov
std
fs
dec
or
mov
ja
and
mov
aas
repnz
ret
scas
adc
subl
dec
push
clc
or
test
xchg
mov
dec
inc
lods
lcall
push
sarb
sub
and
scas
inc
sbb
mov
ror
or
jp
add
mov
inc
sub
jne
jno
cmpsl
push
lock
mov
or
adcl
mov
sbb
loop
pop
in
loop
sbb
dec
mov
sbb
sub
and
aad
addl
jmp
xchg
adcl
or
xchg
invd
xor
push
hlt
arpl
scas
sbb
shll
cmp
addr16
cmc
aad
jle
loope
repnz
iret
jl
stc
and
mov
daa
into
or
pop
sub
rcl
and
pop
add
movsb
shll
loop
fwait
cltd
aam
inc
push
icebp
out
ret
mov
dec
mov
inc
cli
out
mov
je
aam
xor
adc
sar
imul
inc
cmp
push
push
int3
cmp
cltd
mov
cld
xor
sti
mov
fsubl
adc
push
je
in
mov
sarl
mov
xor
jnp
jo
adc
and
mov
dec
test
sarl
leave
outsb
fisttpll
sahf
mov
or
jne
sub
mov
jp
push
or
jns
xlat
or
push
add
sbb
sti
pop
and
or
dec
mov
jo
or
mov
cmp
sbb
mov
in
fistpll
mov
cmp
aam
xorl
pop
dec
cmc
inc
repz
add
xchg
loopne
adc
xchg
lahf
ret
rorb
dec
clc
push
jge
xor
xchg
xor
aam
mov
pusha
out
lret
jns
stos
jae
cmc
aaa
dec
pop
jbe
sbb
fsubp
in
mov
cmp
outsl
mov
xor
les
xchg
jl
sbb
pop
test
mov
cld
xor
iret
add
add
pop
cmc
xchg
out
aas
imul
jmp
dec
jmp
lcall
das
add
xor
mov
mov
xchg
pop
push
mov
mov
into
pop
mov
shlb
sti
mov
sbb
sbb
shll
insb
sti
xchg
je
dec
sub
cmp
shll
mov
cmp
cmp
sub
lods
out
jns
adc
arpl
xchg
add
sahf
xchg
dec
int
push
dec
jo
and
push
stos
pop
push
adc
mov
out
push
sub
mov
dec
push
sub
shrl
movsl
xor
aas
gs
lret
jne
sbb
pushl
cmp
jb
and
push
lahf
loope
imul
adc
cmp
scas
dec
aas
jbe
push
cmp
loopne
leave
mov
popa
push
sbb
cwtl
push
stos
aad
jmp
daa
pusha
push
pop
or
adc
mov
lods
lret
xor
stc
js
or
and
in
xor
rcrb
mov
lret
cmp
jmp
or
das
and
mov
push
fimull
insl
mov
and
jle
insb
pop
sbb
mov
mov
jno
push
add
push
push
ljmp
mov
push
mov
dec
fmull
pop
xchg
int3
lods
cltd
std
aaa
mov
xor
shl
push
cmp
adc
les
nop
and
push
adc
jmp
ja
pmaxsw
adc
testl
in
dec
out
xchg
sbb
push
mov
fwait
push
push
es
add
je
jle
fcmovnbe
mov
cmpsb
jne
mov
shl
add
adc
loop
and
out
ret
mov
fisttpll
cld
or
sbb
adc
repz
out
hlt
and
jle
out
dec
mov
ss
mov
fld
jnp
jne
mov
jmp
outsl
outsl
scas
std
fisubrl
dec
mov
stos
ret
ljmp
cmp
pop
xchg
in
inc
scas
fcmovnu
clc
cmpb
dec
lret
fldpi
iret
outsl
mov
sub
popf
popf
mov
fmull
std
mov
aaa
and
adc
xor
adc
repnz
mov
pushf
sbb
pusha
mov
popa
lcall
mov
inc
pop
or
incw
push
mov
push
push
roll
mov
nop
rcrl
negb
push
test
fadds
sbb
pop
jg
xor
into
decb
es
test
pusha
roll
je
xor
sbbl
mov
push
sbb
sbb
cmp
sarb
hlt
sub
xchg
sbb
leave
mov
pop
test
ds
pop
xor
scas
test
fcompl
fxch
cli
push
push
mov
cltd
lods
test
jmp
cs
loop
mov
jne
dec
inc
sub
pop
cs
popa
add
scas
lret
sahf
cs
sub
mov
ret
aam
xor
into
and
adc
and
pop
sub
jl
or
ret
jge
int
and
jo
inc
lods
roll
bnd
pop
sub
cmpb
dec
fimuls
sahf
in
or
dec
aaa
and
gs
mov
cmp
or
mov
add
lea
outsb
or
lret
insl
dec
call
cmp
lcall
mov
xor
xchg
push
push
jns
pushl
cmp
xchg
cmc
push
xchg
test
and
cmp
pop
and
dec
gs
ss
fidivl
cmpsb
mov
sub
pushf
mov
and
adc
dec
and
push
das
adc
pop
xchg
mov
int3
pop
sti
jmp
sbb
sbb
aam
push
xor
xchg
mov
dec
cltd
cmc
aas
cmc
sbb
and
push
sbb
xchg
add
or
or
mov
dec
loopne
fcoms
dec
insl
xchg
in
jno
cmp
and
sub
mov
mov
iret
lea
jmp
push
insb
dec
fdiv
jns
jbe
loop
and
fdivr
push
out
ja
pop
out
loopne
mov
and
test
negb
and
in
das
sub
cmp
push
mov
dec
or
pop
pop
sbb
repz
push
xlat
sbb
xor
jl
xlat
data16
sub
mov
and
pop
push
or
loope
clc
mov
cmp
xor
pushf
ljmp
arpl
shlb
pop
call
fs
inc
mov
lcall
and
inc
xor
sbb
mov
or
mov
or
loopne
imul
adc
sub
xlat
inc
mov
bnd
mov
adc
aas
aad
aaa
or
and
lret
iret
in
lock
js
xchg
sub
dec
xor
out
cmp
es
mov
fldl
ss
xchg
call
jno
push
pop
sti
push
fdivp
cmpxchg
bound
mov
lea
push
pushf
jns
push
inc
sbb
jmp
and
xchg
test
xor
jnp
outsb
pop
lret
mov
cmp
add
in
jle
test
stc
shll
push
mov
jl
xchg
xchg
jb
lds
imul
mov
stos
mov
ret
test
sti
sub
mov
sbb
dec
fcmovb
scas
cmp
loopne
std
push
jge
or
inc
out
mov
jbe
xchg
out
mov
cltd
lret
pop
or
and
es
add
scas
inc
shrl
addl
imul
lods
sbb
je
je
aam
addb
adc
or
mov
fwait
ja
pop
mov
std
std
lea
xchg
mov
mov
inc
inc
inc
xchg
je
xchg
fisubs
sbb
push
jb
ja
decb
mov
mov
lcall
shlb
sub
insl
pop
jecxz
aas
shrl
mov
xchg
lcall
sti
arpl
sbb
out
mov
rcrb
clc
jnp
cmc
add
sub
add
stos
lods
inc
fdivrl
mov
sub
fs
ror
push
divb
enter
inc
fadds
jns
push
stos
out
ret
mov
push
cmp
add
or
mov
jmp
out
mov
mov
sahf
daa
dec
aad
jae
lea
cwtl
fadds
mov
in
icebp
iret
mov
enter
pusha
jbe
sbb
ja
pop
pop
sbb
sub
push
cmp
cmp
push
aas
repz
mov
lcall
enter
rorb
and
dec
pop
outsb
test
pushl
outsb
leave
mov
loop
mov
bound
cltd
out
popa
cmp
data16
fs
hlt
fmul
mov
add
push
mov
push
dec
jl
xchg
jmp
imul
dec
mov
and
dec
incl
aam
mov
cmp
clc
lcall
addr16
cmpsb
add
mov
rcr
sbb
mov
pop
adc
shl
or
dec
arpl
fs
mov
jne
mov
test
xor
divl
pop
fdiv
call
xchg
ja
dec
lods
das
dec
sahf
jmp
inc
idiv
dec
hlt
sahf
aaa
jnp
push
loopne
mov
cwtl
call
jl
in
iret
int
dec
dec
mov
mov
call
mov
sub
out
mov
xor
xchg
and
pop
lock
mov
adc
lds
inc
outsb
movsb
xchg
dec
push
pop
sub
pop
outsb
out
sbb
stos
sbb
push
insl
shlb
insb
sbb
push
rcrb
ja
add
xlat
jo
lret
lods
cli
xor
jmp
sub
std
decb
les
pop
repz
xor
xor
shrb
push
xchg
cmp
mov
je
in
aam
pop
sbb
cwtl
mov
stos
add
mov
sub
jecxz
aas
xor
mov
or
mov
stos
cmp
sub
mov
pop
push
jbe
mov
repnz
or
out
in
mov
aaa
inc
rorb
dec
add
js
negl
dec
dec
rolb
push
test
data16
mov
mov
aam
loopne
mov
cmc
fwait
dec
mov
outsl
in
push
popa
out
or
inc
push
in
mov
ljmp
mov
xchg
jecxz
lods
dec
inc
ljmp
inc
mov
adc
es
shl
pop
into
mov
cli
faddl
sbb
cmpsb
std
lea
push
imul
imul
jl
dec
cmp
xchg
lahf
fsubrs
xchg
inc
xor
dec
aad
push
push
mov
dec
add
imul
mov
fs
ja
call
and
les
bound
dec
xchg
rorb
or
sbb
mov
cmp
clc
clc
sub
xor
lods
push
jb
adcl
inc
push
mov
pop
in
repnz
stos
daa
mov
movsl
cmp
aas
decb
fmuls
jbe
subl
hlt
dec
and
pusha
mov
rclb
add
sbb
ficoms
push
imul
idiv
xchg
mov
sub
or
pop
and
daa
pop
lcall
xchg
pop
arpl
cmpsl
js
mov
nop
or
cs
inc
pop
mov
int3
push
fnstenv
mov
imul
rcr
iret
imul
lret
or
stc
fiaddl
lahf
mov
cmpsl
ds
sar
scas
cmp
mov
dec
shll
daa
in
sub
mov
nop
xchg
mov
clc
stc
ror
call
fnstcw
vcvttsd2usi
lds
rolb
mov
out
xor
repnz
test
cmp
shl
xor
cli
int
loope
or
out
sarb
xchg
pop
pop
js
jge
dec
cmc
aaa
in
and
pop
aam
leave
mov
sbb
addr16
hlt
push
adc
test
or
adc
add
push
xor
fildl
adc
push
pop
inc
or
cmp
movntq
out
call
ss
mov
hlt
pop
push
sahf
es
int3
and
mov
enter
movsl
jo
cltd
jb
in
jmp
lds
pop
out
push
pushf
imul
es
add
repz
xchg
mov
shll
and
mov
addr16
or
mov
daa
mov
cmc
cltd
loope
ds
fcomps
push
pop
arpl
lcall
sbbl
jecxz
mov
sbb
in
lods
mov
pop
xchg
in
cltd
incb
sbb
mov
inc
out
xchg
add
cld
push
mov
sub
lar
mov
add
enter
cmp
jmp
in
sub
jns
jne
in
mov
rolb
jge
pusha
pusha
mov
lea
jne
pusha
adc
lea
sbb
mov
jmp
lods
lea
lret
and
les
mov
clc
xor
and
out
std
ret
in
jl
popa
scas
or
mov
movsb
mov
ja
notb
fisttpll
xchg
xchg
int
or
pop
fsubp
cmpsb
sub
or
cli
xchg
mov
sub
fisubl
std
shrb
and
ds
es
mov
xchg
mov
push
rcrb
xchg
mov
pop
sub
jne
repnz
mov
and
scas
mov
inc
dec
cmp
mov
inc
das
call
in
in
testl
data16
pop
or
push
xlat
leave
into
cmpsb
jno
enter
gs
movsb
fcmovbe
dec
loopne
xor
stos
sub
xor
push
ret
sbb
pusha
sbb
int3
iret
xchg
rclb
inc
ja
fistl
push
push
inc
outsl
out
xchg
mov
add
mov
lea
or
sbb
xchg
dec
pop
inc
mov
dec
mov
rcrl
dec
cmp
mov
lods
jno
fmul
mov
push
popa
popa
jb
cwtl
sbb
push
push
sar
call
mov
xor
loopne
mov
push
repnz
mov
ja
or
das
lret
adc
or
push
je
insb
and
movl
pusha
dec
fldcw
and
cs
addb
push
aaa
in
pop
pop
in
loop
pop
and
mov
call
cmp
lea
jmp
movsb
jns
cmp
stos
idiv
mov
clc
scas
out
scas
push
inc
jbe
sub
ljmp
sbb
sub
xchg
inc
cmp
shrl
jns
pop
mov
stos
ss
and
or
fsubrs
loop
adc
mov
aas
lahf
push
dec
push
mov
push
inc
movsb
jb
clc
clc
xchg
pop
jae
fistl
dec
jge
jp
repnz
mov
or
pop
dec
inc
lds
adc
mov
cmp
xor
ret
aaa
cmpsl
jbe
test
sbb
inc
xor
push
inc
mov
xchg
pop
pushf
div
pop
and
aad
jl,pt
je
mov
xchg
es
fistl
mov
enter
out
call
fs
dec
or
sbb
dec
std
mov
mov
stc
jl
mov
xchg
inc
or
or
cmpl
dec
mov
push
es
push
repz
mov
scas
repz
push
xchg
push
call
in
mov
fisubl
or
xor
aaa
xor
pop
adc
mov
shrl
xor
lods
and
xchg
push
and
aam
ljmpw
cld
je
flds
mov
pushf
std
mov
loopne
push
jne
cs
fstl
pop
sahf
popa
adc
clc
sub
rcrl
mov
fdivr
pop
out
lods
xor
push
ror
dec
das
rcrb
pop
xchg
pop
sbb
mov
mov
mov
mov
add
ficoms
outsb
add
adc
iret
rcrb
lcall
dec
adc
out
dec
jecxz
pop
xchg
adc
jae
arpl
mov
leave
sbb
sub
shrb
jno
ja
outsb
jae
mov
xchg
insb
insb
pop
pop
mov
cmp
inc
xor
sahf
mov
test
adc
stos
pop
fs
out
mull
mov
cmc
decl
add
movsb
movsl
push
imul
rclb
push
inc
in
mov
or
fs
jle
sbb
dec
add
pop
sarl
pusha
fists
sarb
mov
dec
push
jo
inc
lret
or
add
test
lea
xor
jge
or
std
jnp
lods
psubusw
test
add
mov
and
movsbl
sub
sub
lods
ss
mov
outsl
scas
sub
sub
das
mov
int3
test
mov
push
in
negb
out
sti
mov
jl
mov
sbb
cmovge
repnz
jne
xchg
mov
mov
xchg
lods
dec
jecxz
mov
jae
fisttpl
or
add
jae
loopne
fists
xchg
mov
lds
and
out
lock
mov
imul
cmp
jecxz
scas
xchg
push
mov
cmp
repnz
xor
enter
xchg
mov
loopne
pop
mov
jo
fbstp
mov
mov
or
aad
xor
mov
pop
fbld
add
out
stos
pop
loopne
mov
mov
jne
mov
popf
xor
and
inc
add
xchg
rcll
lds
push
mov
adc
jmp
and
cmpb
inc
cmpl
js
and
testl
mov
sti
test
mov
sbb
fcmovb
sbb
pop
test
mov
arpl
sub
jge
pop
loop
sub
push
and
shll
les
out
bound
data16
xchg
mov
jl
ss
pop
and
mov
in
push
sbb
rorb
push
sbb
jne
jg
push
cmpsl
in
dec
xchg
mov
stos
call
fadd
lea
inc
jecxz
and
sahf
pop
scas
enter
mov
aaa
insl
jge
cmpsb
pop
dec
mov
out
mov
test
mov
mov
xchg
loopne
fwait
ret
add
push
push
gs
pushf
sub
int3
mov
in
lods
out
sub
mov
mov
sbb
je
rorb
mov
rcll
aad
mov
add
ret
xchg
mov
fnstsw
jecxz
sbb
push
ret
cmp
mov
popa
loop
sbb
bound
mov
ja
jecxz
mov
fsubl
sub
mov
jno
mov
outsl
test
shrb
lahf
push
mov
jb
mov
and
inc
ja
dec
pop
xchg
cwtl
xor
jmp
sbb
outsb
jo
and
xor
pusha
in
stos
ljmp
rorl
jge
insb
xor
xor
clc
leave
or
xor
cwtl
ds
jp
cmpl
adc
insb
ja
loop
lea
jnp
cmpsl
mov
mov
int3
std
imul
pop
and
dec
stos
int
loop
shlb
xor
ja
inc
sbb
jmp
inc
sti
pop
fldcw
mov
xor
movsl
mov
cs
test
sbb
xchg
mov
lret
enter
pop
mov
xchg
dec
jle
js
gs
aam
push
adc
out
or
adc
lret
pop
sub
xchg
popa
in
push
aam
movsb
inc
mov
push
mov
ds
mov
mov
cli
push
fucom
add
lret
fsubrl
or
push
pop
sbb
gs
ret
addb
xor
xchg
test
adc
or
cwtl
mov
aad
dec
mov
mov
push
sub
jo
add
ss
mov
stos
arpl
test
je
inc
xchg
imul
dec
pushf
lahf
sub
jne
enter
mov
pop
pop
push
and
lods
sub
int
and
push
stos
mov
mov
mov
and
mov
cmp
enter
push
push
dec
dec
sbb
jl
dec
sub
xchg
and
pusha
lods
mov
dec
xor
testl
cmp
js
test
mulb
jecxz
push
push
xchg
mov
jge
mov
in
aad
cltd
cmpl
fsubl
push
dec
mov
xchg
inc
mov
jae
hlt
sub
lock
mov
fnstenv
fimull
add
sub
mov
repnz
add
jl
inc
adc
dec
test
push
lcall
cmp
insb
sub
adc
inc
add
int3
cmp
fdiv
daa
xchg
outsl
mov
dec
pop
adc
enter
mov
aas
xchg
mov
mov
pop
inc
and
fstpl
or
mov
pusha
aam
push
fdiv
xchg
sahf
cld
cmp
mov
dec
adc
mov
add
cmovno
jnp
std
sub
adc
add
dec
fdivrl
cmc
jge
dec
pop
pop
push
xor
sub
xchg
mov
in
dec
mov
pop
dec
sbb
push
dec
add
dec
cmpb
rclb
adc
push
push
out
cltd
mov
sbb
mov
rolb
out
jo
mov
pop
xor
arpl
lcall
lret
dec
cmp
inc
cmpsb
cmpsb
jmp
push
testb
test
shll
in
fstps
push
repnz
pushf
dec
or
cmpsb
xchg
imull
fsubrl
mov
xor
cmp
repnz
pushf
jmp
or
shlb
sbb
hlt
mov
mov
je
jp
mov
sbb
mov
sbb
cmp
aas
xchg
xchg
cld
push
mov
fs
insl
lahf
add
xchg
lret
cwtl
shr
imull
and
xchg
mov
xor
rcll
pop
xchg
test
mov
cmp
push
daa
fdivs
aam
push
and
mov
test
pop
pop
mov
inc
add
mov
jecxz
jo
jmp
push
and
lret
and
rcr
gs
jp
stos
push
ret
inc
sarb
push
scas
jo
pop
push
int
dec
adc
xchg
mov
neg
shl
rol
add
call
push
cmpl
sub
out
mov
push
xchg
loopne
and
das
pop
mov
loopne
adc
pop
fsubrp
lds
les
loopne
repnz
scas
movsl
mov
cmp
xorl
ljmp
xchg
mul
lahf
push
fcoml
es
xor
pushf
sahf
test
repnz
jo
imul
fidivrl
push
in
bnd
inc
test
cmp
xlat
or
jo
scas
xchg
mov
add
inc
insb
imul
arpl
outsb
add
ret
mov
clc
pushf
movl
cmpb
movw
lea
jne
pushf
pushl
pushf
lea
jmp
ror
mov
jmp
outsl
insb
gs
cs
insb
add
mov
jmp
pop
add
rcr
push
inc
or
outsb
scas
popa
mov
sti
add
add
out
sub
orl
mov
out
push
or
out
inc
data16
inc
imul
jo,pt
jbe
sub
inc
rorl
or
imulb
pop
lcall
ljmp
mov
stos
ds
pusha
cmp
or
out
cs
roll
loop
cmp
lcall
xchg
xor
fs
mov
mov
stos
xchg
mov
pusha
call
mov
xor
xlat
ds
push
jne
adc
pop
cmp
call
adc
xor
or
push
inc
pop
lahf
xor
int3
jecxz
mov
rorb
push
xchg
jecxz
stos
cmp
push
daa
test
xchg
daa
sarb
repz
test
mov
js
ret
cmp
clc
test
sub
cmpsb
ret
adc
data16
mov
xchg
jbe
dec
push
jne
xor
jl
sub
int3
jb
mov
xor
adc
mov
or
dec
push
sbb
inc
hlt
stos
ficoms
sbb
loopne
btr
mov
jmp
xchg
sub
pop
out
stos
add
cmp
fildll
int3
adc
stos
push
je
sub
es
sub
fwait
cli
pop
dec
clc
pop
mov
mov
xor
xor
mov
dec
out
fmull
addr16
pop
pop
loopne
sub
xchg
jp
adc
mov
out
ds
adc
dec
dec
mov
jbe
popa
cld
out
add
dec
sti
ljmp
sbb
cmp
test
lahf
lahf
fs
xor
cmp
es
pop
hlt
sbbl
aam
shl
je
sub
add
adc
lods
dec
pop
xor
and
add
pop
xchg
fsubs
pop
dec
cld
gs
or
mulb
clc
mov
inc
ficomps
jecxz
mov
stc
stos
sbb
or
testb
scas
out
push
fsubrl
pop
dec
jl
sub
and
scas
dec
dec
mov
shrb
subb
pop
jns
push
lret
jmp
pop
and
arpl
in
pop
add
movb
movb
lea
jmp
mov
cmovbe
adc
cmp
push
mov
outsl
scas
mov
sahf
mov
add
or
sbb
push
add
cs
mov
adc
cmp
dec
pop
dec
js
xor
pop
push
sbb
mov
mov
ss
xor
lcall
or
fildll
ljmp
orl
popf
jl
or
mov
and
lret
lea
inc
lods
xchg
mov
sub
fsubl
xchg
jno
push
and
out
mov
sbb
mov
mul
pop
inc
xchg
repz
inc
lds
imul
jmp
xchg
inc
cmp
mov
cs
out
inc
popf
push
es
and
aas
stos
dec
jae
jle
mov
mov
jne
setae
aas
mul
sbb
outsl
test
xchg
rolb
xchg
mov
lea
jb
cmc
jmp
cmc
jnp
cmpsl
cmpsl
lret
stc
out
aam
lods
insl
mov
jp
cmc
xor
xor
and
pop
dec
push
sbb
adc
arpl
cli
cmp
add
or
sbb
cmp
dec
xlat
mov
push
int3
pop
imul
nop
inc
ret
xorb
mov
add
adcl
jmp
cmp
test
sbb
jmp
mov
jle
in
outsl
mov
popa
pop
lret
jl
mov
pushf
pusha
mov
pushf
mov
pushl
pusha
call
clc
rol
add
js
clc
pusha
cmc
not
test
pushl
sub
push
stc
cmp
jmp
lea
jne
push
pusha
pusha
lea
jmp
setl
jmp
nop
ljmp
daa
pushf
fucomi
sbb
dec
xchg
aam
into
adc
adc
repnz
rcrl
into
bound
mov
or
xor
add
mov
out
movb
jl
xor
call
adc
lret
xor
adc
pop
push
scas
outsb
and
mov
pop
sbb
in
push
push
push
cmp
mov
lahf
pop
lahf
stos
mov
mov
imull
lds
mov
lahf
rorb
jl
stc
mov
dec
test
mov
mov
cmp
fldt
mov
cmp
icebp
cmpsl
scas
jmp
cmc
or
imul
lds
gs
mov
or
jg
add
xor
fwait
mov
jbe
fisubl
add
dec
in
cli
mov
lods
jecxz
in
leave
jg
in
jno
xor
movsl
addl
sti
jp
sub
idivb
aas
repz
mov
test
mov
push
jl
dec
pop
pushf
xlat
or
or
lea
inc
add
enter
outsb
arpl
rcrb
cmpsb
ja
xor
xchg
mov
test
mov
les
insb
mov
adc
fadds
or
push
jp
jmp
sub
iret
bound
out
push
cmp
dec
or
mov
lcall
mov
adc
sti
stc
inc
or
mov
stos
jmp
add
mov
jae
jge
or
imul
scas
sub
xchg
push
dec
das
pop
arpl
lock
movsl
ret
imul
sti
lcall
dec
dec
inc
fs
xchg
mov
mov
push
push
inc
jecxz
movlps
testl
mov
rorl
mov
stc
call
mov
not
mov
jmp
or
fwait
push
loope
inc
fnstenv
stos
in
and
or
push
adc
xchg
popf
cmpsb
lock
aad
adc
icebp
jg
and
ret
add
loop
lcall
cmp
push
in
mov
lock
out
push
loope
or
lea
xlat
movsb
dec
cld
sub
divl
cli
jo
sub
xchg
fwait
mov
hlt
sub
dec
pop
sbb
mov
ja
loop
mulb
adcl
data16
fs
mov
xchg
mov
mov
cwtl
xchg
lcall
add
xchg
inc
out
test
in
cmpsl
test
jl
push
mov
aaa
scas
fildl
movsl
cld
sarl
cmp
add
in
fwait
lods
into
jmp
cmp
lcall
cmpsb
jns
xor
add
jb
jp
dec
jns
cwtl
fistpll
hlt
or
stos
mov
adcl
adc
push
and
sbb
add
mov
xchg
mov
fisubrs
ljmp
mov
dec
adc
inc
or
movsb
out
pop
idivl
call
mov
push
or
mov
cmpl
inc
mov
pop
repnz
cmp
jbe
jle
out
bound
movsl
fisubrs
and
jge
je
out
jo
fstp
insb
test
stos
add
ljmp
stc
dec
add
sahf
cmp
push
popf
movsb
fnstcw
and
xchg
iret
or
cmova
cmc
adc
and
jne
btr
mov
cmp
bt
cmp
jmp
lods
setl
pushf
jmp
movl
call
sub
ljmp
ss
in
sub
pop
push
mov
adc
movl
or
pop
bound
xorl
scas
and
jp
dec
dec
loope
xchg
jl
pop
out
or
jno
out
repz
stos
xchg
repnz
jle
jl
sbb
imul
jns
insl
into
lahf
pop
das
mov
or
push
popf
xlat
push
ret
clc
movsl
data16
jecxz
pusha
rcll
clc
dec
sbb
jb
xchg
cmp
push
dec
pop
dec
mov
sub
loop
ss
mov
movb
jle
rcl
lcall
or
sbb
in
pushf
and
adc
and
enter
inc
les
mov
fsubl
cs
fs
mov
aas
in
cwtl
mov
dec
stos
mov
xchg
filds
nop
cmc
push
pop
or
xor
mov
loope
cmp
push
cmp
xor
or
jge
lock
mov
adc
or
xchg
mov
shr
sub
fsubrl
aas
stc
cmp
adc
fidivrs
ljmp
or
add
cli
int3
push
jb
or
pusha
and
test
sbb
add
mov
cmp
xchg
mov
inc
int
add
xchg
cmp
adc
adc
dec
or
jne
cmp
mov
xchg
lea
mov
jne
pop
mov
insl
enter
push
shl
and
inc
lods
in
je
mov
push
cmp
cld
jo
fstl
pop
or
push
add
inc
lahf
and
add
jg
inc
rcr
lret
das
xor
imul
fwait
dec
adc
xchg
add
xchg
mov
xchg
rolb
mov
dec
fcoms
cmp
lods
out
cmpsl
pop
adc
into
xchg
and
mov
xchg
scas
sub
inc
jae
add
fs
repnz
mov
shll
mov
cmp
mov
nop
ret
push
sbb
pop
jns
insl
pop
xlat
flds
mov
add
or
gs
and
mov
loop
mov
test
sbb
and
pop
nop
enter
xor
movsl
pop
or
xchg
mov
cmp
jmp
pushf
setp
lea
lahf
cwtl
lahf
mov
pushl
mov
pushf
lea
ja
push
movb
mov
pushf
lea
jb
pusha
cmpb
call
fpatan
test
xor
mov
ret
in
mov
pop
pop
dec
adc
mov
pusha
cmp
cmp
in
mov
loope
add
adc
mov
adc
int3
xor
dec
dec
out
mov
daa
or
pop
pop
fsts
adcl
dec
mov
lds
fmul
imul
clc
cmp
ret
in
mov
data16
mov
pop
adc
inc
xchg
mov
add
inc
add
or
push
ret
pushfw
lret
pop
inc
or
adc
dec
testl
jg
testb
inc
stos
sub
pop
push
mov
jae
pop
jne
mov
xor
pop
hlt
lods
mov
add
ljmp
or
icebp
mov
addr16
sbb
add
popf
mov
fs
mov
dec
push
stos
pop
dec
mov
int
add
or
lret
xchg
movsb
imul
inc
xlat
popf
push
mov
lret
je
out
mov
mov
cmp
adcl
push
mov
ret
idivl
mov
dec
lahf
adc
sub
cmp
fistpl
movsb
sub
xor
aaa
popa
icebp
xlat
fsubrl
les
outsl
mov
xchg
dec
inc
lret
adc
add
xchg
jp
aam
push
stos
loopne
push
mov
jle
bound
pusha
xchg
les
in
sub
xchg
dec
xchg
loopne
sbb
mov
cld
mov
cli
jb
test
xchg
pushf
fcoms
lret
adc
fs
lods
lds
icebp
xor
pop
lods
jl
jl
cmp
dec
pop
pop
mov
add
add
dec
out
push
aad
das
gs
pop
shlb
imul
fs
mov
add
notb
xchg
or
test
xchg
add
xor
lock
fimull
sbb
or
clc
cmp
inc
jg
jge
lods
sbb
in
rcr
mov
push
or
bound
cmp
outsb
fnsave
daa
in
fs
out
mov
imul
add
mov
out
mov
jb
stos
cmp
arpl
out
and
push
stos
dec
xor
loopne
bound
xlat
fwait
push
adc
movsl
xchg
mov
mov
lea
call
in
test
loopne
mov
in
or
jp
data16
xlat
adc
pop
mov
sahf
jbe
out
push
movsb
lock
and
mov
mov
mov
scas
xchg
and
loope
daa
ret
dec
rcrb
pop
daa
inc
cmc
loopne
out
daa
jge
push
clc
jg
popa
rorl
push
fwait
push
or
jb
mov
mov
push
jecxz
sbb
xor
sahf
loop
rolb
std
icebp
xor
test
adc
loope
imul
incb
cmpsb
mov
xchg
sub
adc
rol
lods
iret
loopne
pop
outsb
mov
add
icebp
out
in
cmp
push
mov
jmp
mov
rorb
out
xchg
cmp
pop
mov
pop
adc
xchg
mov
mov
popl
xor
push
mov
or
ds
arpl
xor
fisttps
popf
pop
mov
adc
mul
xor
fisubrs
shl
fwait
dec
cltd
popa
cld
xor
and
fsubp
jb
add
test
aas
mov
cli
out
mov
out
dec
mov
enter
pop
in
mov
enter
push
test
ficoml
inc
jle
ja
jp
mov
cmp
lock
jae
dec
cmp
mov
mov
popa
ljmp
clc
mov
mov
xchg
pop
cltd
pop
pop
xchg
push
insl
jl
mov
inc
push
addl
inc
mov
int
mov
std
lods
js
jns
inc
fstp
jb
test
cmp
lahf
mov
cmp
insl
pop
pop
scas
xor
sub
mov
dec
xor
sub
std
cmp
loopne
sub
hlt
pushf
mov
movl
pusha
movw
call
ss
or
mov
xchg
and
xchg
jg,pt
divb
lods
jno
test
popf
cli
out
lds
add
and
faddl
cmp
repnz
mov
jae
ja
xchg
les
pop
aas
inc
mov
repnz
push
xchg
xlat
xchg
aad
leave
pushf
xchg
mov
lret
push
mov
add
lock
fistpl
sbb
cmpsl
clc
inc
popf
pop
add
cli
outsl
cmc
cmpsb
xchg
shr
add
testb
inc
aaa
inc
xchg
inc
les
sbb
cld
and
aaa
add
mov
in
mov
icebp
lahf
sub
adc
jb
xlat
push
lds
pop
out
lahf
xchg
mov
insb
mov
dec
cmp
xor
gs
push
sbb
lcall
xchg
mov
call
call
pushl
pushl
ret
loopne
outsb
imul
sar
test
push
outsb
xor
jecxz
inc
or
mov
xchg
sarb
in
ja
inc
movsw
jl
movsl
mov
push
test
dec
adc
inc
adc
divl
xlat
jmp
or
and
mov
push
push
call
dec
cmp
mov
repz
xchg
and
dec
and
mov
sub
adc
mov
iret
push
f2xm1
mov
lock
addr16
push
xchg
lret
jmp
mov
movsb
aaa
and
and
sar
xchg
cmp
pushf
mov
xchg
loopne
pop
mov
roll
push
jae,pn
jb
pop
xor
lods
mov
daa
stos
ss
add
pop
mulb
xor
sbb
push
mov
ja
cmovl
push
enter
das
push
setne
mov
adc
sarl
inc
cli
sub
rorl
mov
mov
jmp
pusha
mov
bswap
pusha
pusha
mov
pushf
push
pushf
pushl
ret
sub
int
orl
js
ja
out
mov
imulb
push
data16
clc
inc
xchg
orb
enter
push
xchg
adc
outsb
lcall
add
mov
cmp
lock
hlt
mov
xor
xchg
fnstenv
sub
aad
add
hlt
enter
loopne
sbb
gs
je
loop
push
jecxz
push
lods
cmp
jne
xchg
xchg
icebp
ja
inc
repz
and
lock
call
bswap
cmpb
xchg
mov
lods
lret
mov
pop
aas
mov
fimull
cmp
cmp
outsl
testl
stos
sarb
rcrl
mov
subb
fbstp
dec
sti
mov
mov
lret
in
cmp
cmpb
fistps
push
add
lcall
mov
arpl
dec
mov
pop
pop
sti
mov
and
cmp
test
push
inc
mov
cmp
pop
sbb
cmp
push
push
subb
jo
push
push
push
xchg
pop
adc
adc
dec
fisubl
shlb
jns
cltd
push
add
pop
data16
cmpsl
cltd
rcrl
je
adc
fnstsw
into
sub
int
pop
jb
scas
push
inc
add
mov
enter
andb
test
sub
mov
inc
cmp
pop
xchg
cmc
adcl
mov
push
into
pop
mov
cmc
movsb
aad
ret
idiv
xchg
mov
ret
testl
push
xchg
fldenv
cmc
jb
xchg
pop
dec
hlt
int
cmc
mov
or
jb
lock
repz
test
dec
add
cmp
pop
ss
add
jo
xchg
bound
push
mov
jl
xor
arpl
xchg
stos
mov
pop
ja
ljmp
xchg
sahf
pop
mov
dec
add
test
pop
sub
jmp
jbe
call
test
data16
jmp
lock
lock
dec
mov
aam
adc
cmp
test
ret
inc
dec
xor
frstor
xchg
or
loope
loop
sbb
jb
dec
fwait
xlat
imul
daa
mov
dec
neg
mov
sahf
test
addr16
aad
bound
outsb
xor
sbb
push
xchg
fcoms
xchg
mov
not
movzbw
cmp
neg
push
btr
dec
movzbl
mov
shr
pusha
mov
movsbl
inc
neg
sub
jge
push
bsr
push
xor
cmp
bt
push
sar
btr
inc
push
sar
bts
mov
and
bt
mov
movsbw
add
mov
bt
or
pusha
call
dec
inc
jae
sub
adc
sbb
cwtl
pop
or
test
sub
fistpl
sbb
push
jmp
pop
add
adc
mov
xor
sbb
int3
dec
fdivs
and
imul
out
lods
ljmp
sbb
pop
out
negb
dec
nop
and
out
jae
mov
inc
xor
mov
xchg
inc
decl
push
jecxz
flds
adc
push
push
call
sub
pop
mov
or
aas
out
sub
mov
movsb
sbb
sub
std
push
mov
adc
ret
mov
sub
fiadds
dec
lret
cli
push
mov
mov
pop
cmc
mov
cmpsb
cmc
mov
sub
jge
cmp
add
adc
jp
outsb
jl
xor
cmp
imul
aaa
add
add
adc
scas
jl
shlw
jbe
lock
pop
clc
dec
dec
daa
data16
add
cmp
les
lock
into
jecxz
aas
cmp
inc
je
repnz
and
in
mov
pushf
pushf
lea
jne
bswap
cmp
xchg
mov
btr
btr
sub
neg
shrd
mov
stc
jmp
shlb
jmp
imull
pop
xchg
aad
rcll
dec
test
sarl
bound
mov
shl
adc
inc
mov
imul
pusha
inc
inc
dec
dec
in
mov
ja
pop
push
mov
push
jb
mov
popa
mov
pop
cmp
push
xor
cltd
stos
xchg
imul
arpl
mov
xorb
adc
pop
gs
insl
xchg
mov
mov
int
xor
cmpsb
bound
xor
out
out
es
fbld
xchg
push
push
adc
xchg
ret
xchg
data16
mov
ret
cltd
xchg
xlat
test
jbe
fimull
shr
rcl
jo
sbb
jno
pop
hlt
adc
int
sbb
pushf
adc
sbb
pop
in
stc
stc
les
gs
push
mov
fadds
xchg
aam
inc
mov
shl
mov
nop
fildl
int
ret
pop
insl
pop
lret
jg
outsl
stos
out
pusha
adc
pop
outsb
xchg
mov
lea
je
pusha
lea
jmp
fbstp
mov
test
lcall
xor
imul
jge
lods
imul
sbb
test
add
xchg
jmp
cmpsb
jl
add
leave
mov
mov
aaa
push
push
push
pop
lcall
in
popl
mov
icebp
mov
ds
jnp
mov
jl
jns
fisttpll
xor
push
push
and
dec
or
lret
jge
insb
sbb
adc
xchg
mov
sub
pop
push
bound
sbb
iret
pop
pop
sbb
rcll
test
sub
leave
loopne
push
arpl
sub
test
cmpsb
dec
adc
loope
leave
add
loope
cmp
sahf
cmpsb
mov
insb
imull
push
inc
pop
xchg
roll
cltd
jmp
inc
add
xor
test
aaa
jp
cli
inc
pop
inc
jne
mov
jecxz
aas
xchg
call
setbe
not
not
inc
push
mov
lea
call
shrd
stc
btr
shl
mov
pushf
cmpb
call
cmpsb
in
adc
jle
mov
hlt
xor
int3
sahf
lods
sub
in
in
adc
jle
cmp
dec
and
adc
hlt
mov
adc
sar
dec
sahf
adc
dec
mov
imul
int3
scas
jae
cmp
nop
mov
insl
jmp
nop
hlt
fiadds
or
xor
in
push
and
mov
adc
sub
xchg
sub
xor
jecxz
cmp
iret
pop
cmp
add
lds
stos
lods
mov
dec
aad
fldt
push
sub
add
dec
cmp
xchg
jmp
mov
xor
cld
adc
add
add
add
jl
dec
sahf
jmp
adc
cwtl
jmp
push
add
mov
lcall
or
jbe
insb
lcall
jl
adc
mov
mov
xor
out
push
mov
inc
movl
adc
ret
push
xor
jne
dec
popf
add
or
add
adc
mov
orb
jmp
pop
test
shl
xchg
aas
adc
in
inc
leave
inc
or
mov
dec
fmuls
mov
jns
push
push
lods
sbb
and
pushf
jns
fsubs
or
les
sub
add
out
mov
sub
push
and
pushf
dec
cltd
push
push
movsb
cltd
adc
add
pop
les
fmuls
push
pushf
into
fwait
inc
inc
popf
sbb
loope
lret
enter
mov
dec
daa
les
loop
movsb
cltd
cmp
bound
sub
push
sbb
std
pusha
in
icebp
nop
xor
dec
xchg
in
xor
loopne
in
sub
fistpll
daa
lret
call
in
xchg
lret
ret
mov
enterw
push
and
inc
iret
aad
sbb
mov
pop
pop
sbb
sbb
dec
dec
call
fs
push
lods
pop
xchg
cwtl
enter
stos
mov
lds
cmp
pushf
ficompl
jae
test
popf
movhps
fidivrl
movsl
icebp
out
insb
jo
stos
out
imul
mov
pop
mov
inc
test
dec
sbb
mov
jge
icebp
dec
data16
loop
push
dec
lret
sub
push
sbb
ret
cmpsl
iret
sbb
cmpsl
ljmp
inc
call
outsb
int3
and
test
add
pop
cmc
call
pmulhuw
mov
mov
mov
nop
lea
xchg
sub
dec
out
outsb
dec
out
inc
cs
fisttpll
das
sbb
or
add
pop
loope
xor
sbb
mov
dec
and
or
neg
mov
ficomps
pop
outsb
and
adc
mov
or
adc
outsb
sub
dec
inc
lret
movsb
lcall
movsb
sbb
scas
cmp
push
adc
inc
cs
add
loope
mov
cwtl
sarl
jne
and
aam
jmp
pusha
or
sti
pusha
lea
std
sub
push
fcmovne
mov
insb
adc
sahf
imul
clc
sub
arpl
jl
int3
xor
out
out
imul
in
fisttpl
push
cmp
pushf
adc
ror
inc
and
rcrl
push
or
ret
pop
jbe
add
sub
cmpsl
add
les
xor
hlt
mov
dec
dec
js
mov
stos
sub
pop
inc
pop
pop
stc
sbb
test
adc
test
xchg
out
out
sub
jbe
fwait
test
insb
adc
jecxz
adc
sbb
imul
dec
sbb
add
jnp
jle
enter
test
add
es
cmpsl
lret
sub
mov
std
enter
test
in
push
dec
cmpsl
add
pushf
out
iret
jne
out
pop
mov
xchg
repnz
fcmovne
cld
scas
inc
in
mov
lods
or
pop
inc
sbb
and
dec
xchg
fwait
mov
scas
cli
shlb
add
mov
fstpt
sub
adc
shl
enter
mov
mov
mov
adc
sbb
mov
push
push
add
ja
icebp
mov
add
add
test
adc
xchg
in
fildl
lea
lret
flds
xchg
aas
jnp
outsb
and
fs
push
int3
test
xchg
popf
je
test
mov
lret
xor
cld
cmc
cli
insb
cmc
mov
outsb
add
fidivl
or
lcall
jl
xor
jge
cmp
pop
fcoml
mov
xor
mov
fisubl
dec
in
pop
test
scas
outsb
fs
in
test
pop
insl
addr16
inc
in
icebp
sub
arpl
jno
push
cld
int3
inc
cmp
fdivl
mov
fwait
ljmp
syscall
sbb
sbb
push
mov
cmpsl
fstpl
mov
sub
aam
fidivl
sub
bswap
stc
std
adc
pop
push
inc
hlt
sub
test
ljmp
pop
mov
adc
xchg
idiv
xor
sbb
rcrl
pop
sbb
fisubl
xchg
call
lock
or
cli
xlat
pushf
dec
cli
xchg
mov
sub
inc
adc
enter
nop
sbb
sub
lock
jmp
in
pop
out
sbb
js
sbb
mov
fstps
imul
lret
lock
fs
add
pop
rcl
icebp
loope
pxor
add
push
jl
or
lret
inc
add
adc
cmp
fdivrs
test
pop
inc
stos
sub
or
stos
mov
push
add
lahf
xchg
inc
cmp
les
mov
jb
insb
or
xchg
pop
xchg
adc
dec
cmp
mov
sbb
outsl
ljmp
imul
iret
inc
mov
pop
inc
push
pop
jns
mov
repz
mov
jl
popl
adc
lcall
mov
call
je
adc
pop
or
dec
enter
pop
pushf
les
pslld
in
jmp
clc
fcmovnb
clc
insb
add
dec
dec
add
fisttpl
jnp
movsl
les
mov
mov
out
nop
daa
push
mov
xchg
es
push
lds
in
mov
sub
or
jnp
fcmovb
sarl
loope
fucomi
les
mov
fwait
lea
push
repnz
mov
push
sub
or
aas
jbe
pop
je
sub
jg
cmpsb
fstp
adc
fwait
mov
test
push
mov
xchg
pusha
stc
lret
and
xchg
sbb
xchg
cld
adc
dec
push
pop
je
push
xchg
adc
cli
mov
xchg
add
cmp
or
repz
mov
jae
add
add
addr16
in
fsubs
stc
mov
jbe
scas
mov
add
pop
sbb
out
ret
inc
xlat
fisttpll
or
mov
fstpl
aas
imul
imul
rcrl
push
mov
shll
imul
mov
sbb
dec
lcall
sub
xor
dec
mov
je
fildl
leave
jae
inc
fs
fistpl
jmp
mov
insb
les
push
mov
mov
shrb
lds
test
es
dec
sti
clc
mov
cli
adc
fld
cmp
or
sti
pop
iret
mov
mov
out
dec
int3
shrb
lret
push
pop
push
dec
shrb
mov
sti
mov
ljmp
pop
jmp
dec
sti
push
xlat
jo
xchg
mov
shrb
sbb
orb
sbb
sbb
lcall
les
sub
fwait
pop
test
and
sbb
fmuls
loope
shrb
cmp
dec
pop
push
mov
notb
sbb
cmp
or
pop
jecxz
or
cmp
and
les
jecxz
pushl
and
cmp
mov
push
pop
push
shr
in
popa
scas
shl
jp
inc
or
pop
cli
inc
jnp
dec
mov
lret
ficomps
and
out
loope
mov
and
push
and
and
aam
pop
mov
add
sbb
mov
adc
sti
popa
xor
jns
outsl
aas
pop
jp
in
ja
andb
mov
mov
imul
cmpsb
push
jb
pop
xchg
push
loope
pop
or
push
sbb
mov
or
cmpsl
out
xchg
push
iret
ret
sub
ljmp
lret
jno
mov
add
jne
pusha
rep
adc
and
push
push
je
jo
add
pushf
cmp
xor
fnstcw
call
pop
fsubl
test
adc
dec
inc
out
mov
jl
test
test
cmp
or
sub
scas
int3
clc
adc
in
lret
ljmp
lods
jmp
nop
mov
call
jne
or
sub
lret
add
in
and
mov
outsl
jl
pushf
xchg
in
addr16
ljmp
movsb
cmp
adc
add
add
add
imul
std
mov
inc
add
mov
imul
xlat
fisubrl
adc
nop
push
into
cmp
pop
test
mov
sbb
xchg
cmpsl
loop
sti
push
adc
adc
push
sbb
test
jmp
fdiv
fistl
shrb
aam
insl
push
mov
inc
test
fdivl
add
out
fistl
push
orb
pop
jl
mov
dec
test
in
pusha
in
nop
mov
dec
stos
out
sbb
add
lds
insb
call
aas
xchg
xchg
scas
xchg
icebp
les
mov
out
mov
nop
push
rolb
mov
xchg
or
std
xchg
mov
jl
pop
cld
push
mov
rolb
fistpl
push
mov
lock
rolb
push
mov
adc
xchg
xchg
adc
sub
xchg
lcall
xchg
aaa
sbb
int3
out
push
push
call
repz
mov
rorl
ret
gs
fnstsw
fldenv
sub
cmpsl
repz
std
ret
mov
adc
lcall
not
cmp
mov
fwait
cmp
sub
aam
jg
testl
xchg
cmp
clc
or
or
push
movsb
int
sub
or
pop
pop
movsb
xor
shlb
push
sub
ficoms
dec
cmp
sahf
pop
cmp
adc
mov
scas
jge
fimuls
mov
lahf
clc
cmpl
push
sahf
or
jo
fcompl
sahf
sbb
or
xchg
lret
idiv
arpl
das
stos
psubusw
or
mov
test
popf
cmp
arpl
std
daa
jl
popf
jns
mov
or
or
int3
loope
mov
cwtl
insl
ret
data16
lret
fs
bnd
mov
popf
mov
jmp
jae
cli
xchg
scas
dec
xchg
out
jmp
xor
cwtl
clc
cwtl
popf
mov
add
sahf
sbb
fistpll
popf
xchg
xor
subb
mov
jns
movsl
mov
and
xchg
mov
hlt
sub
rorb
daa
inc
and
call
mov
sub
in
sar
cmp
jnp
stos
loopne
mov
outsb
adc
add
fnstsw
imul
out
jb
cmc
in
pop
jl
push
xor
fcmovne
mov
add
hlt
add
sub
repz
mov
loope
out
int3
pop
es
out
mov
fcmovbe
loop
test
insl
push
or
sub
stos
jecxz
jl
sub
lods
sub
std
sub
push
xor
sbb
xor
mulb
movsb
adc
in
mov
push
les
pop
pop
les
rcr
mov
xchg
gs
out
and
xor
ret
in
pop
xchg
or
sub
or
or
adc
rcl
jl
ja,pt
mov
sbb
out
adc
out
test
int3
pop
push
clc
or
ljmp
jo
movsb
sbb
pop
push
xor
shlb
clc
mov
iret
jnp
jle
inc
xchg
adc
mov
jle
xchg
js
repnz
mov
and
in
mov
rcll
pop
mov
xor
or
das
sahf
inc
inc
stc
or
imul
push
push
lea
add
sbb
fwait
sarl
xor
jmp
sbb
pop
popf
in
daa
insb
call
loopne
pop
xchg
cmp
cmp
push
int3
jp
in
out
push
fistpl
xchg
orb
sub
jl
int3
lahf
xor
insb
inc
fsubrs
mov
or
sarl
fcmovne
ljmp
jne
cmc
pop
and
mov
test
xchg
mov
or
adc
xchg
dec
ret
shr
mov
pop
popf
outsl
cs
data16
test
scas
movsb
push
divb
xchg
in
inc
les
repnz
xchg
xchg
fistpl
push
fdivrs
pop
mul
ficoms
and
adc
adc
test
addb
and
enter
or
xchg
xchg
data16
aam
repnz
cltd
cli
pop
ret
test
jecxz
xchg
clc
xchg
int3
cmp
xor
mov
lock
out
ffree
stos
jmp
adc
cltd
orb
jl
imul
adc
sub
sarb
call
sub
pushl
pop
sbb
pop
jnp
mov
pop
movq
clc
add
inc
xorb
out
loope
dec
pop
pop
std
outsl
aaa
imul
jno
xchg
adc
ljmp
out
in
push
xchg
fucomip
or
sub
ljmp
jl
sbbb
lea
jno
iret
xor
jns
adc
adc
adc
mov
lods
mov
ret
ss
push
sub
adc
cmp
out
out
mov
lea
push
enter
test
lahf
fisubrs
xchg
pop
popf
add
push
ljmp
mov
mov
pop
mov
int3
sbb
scas
sbb
cltd
lcall
fwait
sahf
out
jno
sbb
shl
mov
out
mov
ljmp
xchg
add
add
xchg
mov
inc
ljmp
jge
mov
sbb
dec
imul
cs
adc
pop
test
cmp
ljmp
test
pop
xchg
addr16
ljmp
jg
cli
dec
cmp
ret
addr16
inc
repz
out
jl
xchg
mov
xchg
sub
mov
adc
sub
adc
inc
std
into
test
fdivrs
cmp
incb
ss
gs
dec
jge
dec
or
popf
daa
lods
out
xchg
add
aas
sbb
scas
pushf
and
inc
sti
in
out
dec
push
sbb
les
popa
xchg
lock
popf
out
xchg
sub
inc
lahf
xor
inc
dec
pop
xchg
cs
insb
xor
out
cmp
dec
jg
lea
jne
fsubl
pop
out
loope
add
mov
jmp
jp
dec
add
inc
lahf
cmp
xchg
shr
dec
stos
loope
lret
inc
bound
fnstsw
jno
pop
test
mov
lret
imul
loope
jmp
mov
pop
fld
xor
mov
cmp
icebp
add
addr16
out
aas
int3
push
mov
inc
xchg
mov
shr
arpl
movsb
arpl
lret
mov
add
mov
pushf
ss
enter
in
in
out
mov
and
dec
mov
pop
xlat
filds
inc
sbb
nop
fisttps
mov
pusha
xchg
xchg
pop
mov
rcll
xor
lret
in
pop
dec
std
add
les
pop
fbstp
pushf
push
sub
pop
fbld
push
enter
adc
nop
add
or
es
les
out
add
lods
push
sbb
out
lock
int3
mov
imul
ret
iret
dec
mov
aam
lds
stos
mov
popf
idiv
pop
stos
stos
xchg
add
inc
xchg
lret
lods
dec
add
cmp
call
sub
pop
out
cwtl
push
mov
pop
clc
out
or
sub
jmp
out
pushf
pop
fs
insb
mov
test
test
add
and
scas
out
mov
lea
dec
adc
or
outsb
paddd
insb
ja
mov
and
cli
adc
add
mov
test
inc
popf
test
mov
in
sahf
insb
mov
dec
out
jp
lods
sbb
enter
and
roll
mov
in
sub
add
mov
jnp
xchg
lock
pop
or
insb
cmp
and
enter
les
adc
ret
rorb
adc
inc
daa
insb
das
push
daa
xor
adc
rolb
push
mov
into
sub
loop
sbb
loopne
call
adc
roll
mov
jnp
jno
xor
fisubrl
pop
ds
sbb
pusha
nop
adc
mov
sar
or
or
dec
insl
inc
rorb
scas
xchg
and
out
call
inc
mov
xchg
pop
and
inc
out
fsubr
test
mov
dec
mov
ljmp
out
test
or
and
enter
out
popf
mov
loope
xchg
mov
and
xchg
xor
xchg
dec
xchg
mov
fmull
mov
push
mov
push
negl
push
sbb
fisubrs
xchg
pop
or
les
lods
imul
popa
adc
push
xchg
sbb
inc
loope
imul
xchg
mov
or
mov
push
lret
adc
test
cmp
nop
xchg
out
pextrw
mov
mov
dec
lahf
or
adc
pop
sub
imul
ror
sbb
icebp
or
jno
adc
icebp
fcomps
shr
rolb
shlb
or
jno
sub
faddp
pop
test
fs
ds
mov
out
xor
xchg
shrl
test
push
popl
xor
mov
xchg
lret
lret
sbb
divb
lods
call
js
or
xchg
cmpsb
bound
dec
dec
cld
in
dec
mov
les
in
fiadds
or
loopne
sbb
mov
xor
sahf
dec
fldl2t
je
lret
dec
add
adcb
dec
mov
push
sub
adc
or
out
out
mov
sbb
mov
testl
mov
mov
fwait
clc
fildl
mov
daa
jge
jmp
gs
je
mov
repz
fiadds
call
push
xor
arpl
and
mov
cmc
inc
int3
scas
js
mov
inc
dec
and
pop
or
mov
and
xchg
xlat
xor
out
jmp
jns
stos
hlt
or
call
ds
or
and
stos
call
inc
jl
mov
cmpsl
mov
push
lods
sub
or
aam
into
inc
pop
stos
les
adc
loop
stos
test
sub
xchg
inc
jl
insb
push
es
bound
adc
filds
jl
add
push
test
fs
movl
push
pop
add
shrl
cs
push
mov
or
xchg
lea
stos
xchg
push
dec
lret
fbstp
in
fsubs
push
mov
insb
mov
push
add
or
shll
adc
in
imulb
test
roll
adc
inc
and
call
cmp
les
lahf
daa
call
out
xlat
jp
je
sbb
mov
pushf
pop
and
dec
sbb
scas
jecxz
mov
push
lea
push
cmpl
mov
or
cli
insl
scas
imul
sti
test
jne
xchg
pusha
aaa
daa
jbe
pop
les
cmpsl
movsb
mov
inc
push
in
sbb
insb
ret
xchg
push
xor
mov
jne
xchg
mov
mov
inc
rcll
adc
lahf
xchg
xor
les
push
aas
pusha
jge
rclb
xlat
adc
pop
shll
pop
push
dec
mov
and
sbb
or
ret
rclb
incb
jb
popa
pushf
jecxz
mov
popa
clc
and
mov
xchg
les
out
shrl
or
pop
clc
adc
test
mov
loope
mov
push
mov
cmp
out
dec
mov
int3
ljmp
xor
loope
or
cmp
xchg
popf
icebp
repnz
xchg
or
or
jns
mov
loope
sar
mov
popa
push
or
jge
loope
cmp
cmp
out
daa
xchg
lret
pop
push
mov
add
ret
xlat
out
fnsave
aaa
movsb
pop
out
sar
mov
mov
add
arpl
xchg
inc
adc
stc
and
or
inc
add
icebp
scas
out
sbb
mov
arpl
imul
push
aad
jl
jnp
das
jg
loop
scas
imul
lcall
jle
sbb
std
test
in
dec
ljmp
mov
aam
add
je
test
test
push
add
cmpsb
jmp
push
xchg
add
mov
scas
sbb
les
xor
xchg
out
aaa
popf
aaa
mov
cli
or
fldcw
or
dec
xchg
cld
jecxz
or
aaa
lcall
sub
faddl
in
jmp
or
decb
in
push
xchg
mov
js
cmp
dec
faddl
imul
jnp
push
fiaddl
fisubs
ret
mov
or
mov
dec
in
dec
lcall
inc
add
sarl
jne
push
loop
enter
add
iret
sub
addr16
test
bound
adc
aad
in
lods
add
adc
xor
adc
dec
lahf
or
mov
cmp
add
clc
mov
bound
xchg
into
sub
test
add
stos
xchg
je
inc
inc
push
andl
mov
arpl
mov
dec
sbb
mov
popa
aam
push
inc
faddl
mov
std
test
pushf
adc
scas
xchg
push
mov
enter
and
add
or
lods
mov
fcmovbe
out
mov
jnp
push
nop
int
adc
inc
pop
inc
push
repz
loope
nop
push
aad
dec
cmp
add
lods
push
stos
and
mov
sbb
leave
mov
add
movsb
mov
ljmp
or
inc
xchg
or
call
lret
ljmp
jp
fcomps
xchg
enter
inc
dec
jecxz
into
mov
inc
mov
repz
push
pop
cmp
ficomps
imulb
mov
inc
insb
xchg
or
lods
push
push
lods
xlat
inc
loop
lahf
andl
roll
adc
mov
aam
add
add
ficomps
xlat
mov
fimull
in
pop
out
lret
fisubs
jne
add
loop
sbb
add
xlat
leave
ljmp
mov
add
dec
add
jl
fldl
sub
loope
inc
cmp
aad
cmpb
call
test
loop
cmc
rcrl
xor
mov
dec
rclb
mov
and
mov
andl
movsl
cwtl
das
xchg
movsb
mov
pop
and
jp
fisubl
cmp
lea
call
push
inc
sub
loope
jp
fs
outsb
inc
xor
arpl
loope
adc
mov
cmp
jp
enter
lcall
fsubr
push
shlb
jns
adc
inc
push
cmp
and
in
sbb
mov
mov
pop
xchg
xor
daa
mulb
movsb
lret
inc
call
mov
in
xchg
pop
pushf
loope
mov
not
xchg
jmp
sbb
aam
arpl
push
jge
adc
pop
adc
adc
cmpsb
inc
adc
push
rorb
ljmp
adc
in
pop
in
xchg
adc
aaa
sbb
pushf
pop
orl
jnp
cld
cmpl
into
je
inc
std
movsl
mov
fsubrs
pop
xchg
jns
ficoms
sbbl
das
push
pop
dec
pop
outsb
push
in
adc
lods
call
sbb
mov
add
dec
inc
pop
pop
test
mov
fdivrs
sbb
lcall
sub
fstpt
dec
cmp
dec
shrl
pop
dec
icebp
inc
dec
std
call
sbb
subl
xchg
mov
pop
test
ret
and
xchg
inc
gs
ret
sub
cmpsl
out
in
popa
repnz
call
jecxz
push
pop
jecxz
cmp
fildl
fisubrs
lods
jge
pop
ljmp
pop
repz
adc
cmp
and
add
out
int
test
sti
add
test
ret
shlb
test
call
jge
xchg
pop
std
push
or
add
lea
test
xchg
dec
jp
xor
adc
dec
adc
sahf
push
and
in
inc
mov
cs
mov
sub
and
test
and
cs
dec
in
push
push
jecxz
rolb
int3
jl
pop
cs
in
inc
xchg
sbb
push
inc
gs
test
aam
je,pn
addr16
xchg
or
movsl
es
xchg
out
cmp
aas
fists
pushf
adc
mov
xchg
sub
inc
xlat
dec
je
xchg
call
or
pushf
ss
and
fcmovnu
mov
push
mov
sub
mov
add
mov
setb
jle
add
cmp
or
mov
mov
fs
lock
int3
ljmp
jg
call
test
or
inc
cli
xor
icebp
scas
inc
dec
mov
xor
insb
jbe
rorb
or
rolb
jns
mov
pop
lret
out
jne
mov
xor
jnp
mov
stos
adc
test
mov
in
mov
cmp
or
or
icebp
adc
or
adc
xchg
push
sub
lahf
mov
adc
jbe
fcompl
mov
cli
bound
call
lret
sbb
test
out
filds
sbbl
fcomps
movsb
mov
sarb
mov
or
dec
inc
adc
xor
insb
imul
adc
or
movsb
nop
mov
lea
xor
jne
pop
mov
sub
es
test
sbb
sahf
lcall
pop
and
leave
mov
ror
andl
or
pop
lret
daa
or
ret
jmp
adc
aam
rclb
inc
cmpsl
xor
enter
repnz
divb
lret
xchg
shl
add
jp
push
xchg
mov
aam
pusha
subl
sbb
and
loopne
sub
push
cmp
in
push
sbb
out
cmpsl
pushf
push
sub
call
loope
add
or
pop
popa
cwtl
xor
jmp
fisubl
les
and
ret
bnd
inc
dec
mov
and
fsubr
in
adc
movsl
jb
pop
jb
sbb
imulb
outsb
rolb
and
jns
push
popa
test
dec
push
inc
mov
pop
mov
pushf
adc
out
push
clc
push
and
mov
adc
enter
mov
mov
and
sbb
stos
sbb
lods
pop
dec
or
or
mov
cmc
fsubr
sub
inc
cmpb
aam
sub
push
in
or
xchg
lcall
and
pushf
inc
inc
cmp
sub
and
int
ret
add
out
ret
xchg
enter
add
xor
loop
cmp
sbb
pop
adc
gs
fcomip
lea
pop
les
add
adc
push
cli
fprem
imul
jne
mov
gs
test
movsb
xchg
mov
pop
pushf
mov
or
int3
push
pop
inc
mov
xor
ret
xor
push
jae
test
test
das
popf
push
cwtl
and
inc
jo
mov
adc
int
shll
xchg
adc
add
aam
lea
rorl
pop
les
aam
pop
in
pop
leave
les
adc
sub
into
mov
popa
or
subl
xor
or
inc
mov
stos
adc
add
dec
sub
xchg
xchg
xchg
mov
fsubs
rcrb
fcmovb
pop
ffreep
push
mov
in
out
mov
fidivrs
jbe
push
or
stc
enter
ds
shrl
setl
sbb
stc
aam
sub
add
cltd
jae
aaa
mov
xor
dec
aam
lds
icebp
mov
mov
mov
xchg
sahf
jecxz
dec
or
xlat
mov
filds
lret
stc
rolb
in
add
out
jmp
mov
or
xchg
in
add
loopne
adc
pop
mov
cmp
movsl
mov
in
cli
adc
lea
add
loop
cmpsl
stc
jge
pop
add
cltd
arpl
testb
out
int3
leave
shrb
lds
pusha
out
lret
adc
sti
jo
subl
and
movsb
cmpb
cmpb
aad
lock
dec
mov
inc
pop
cwtl
inc
adc
xchg
cwtl
neg
push
aam
push
sub
adc
pushw
add
call
sbb
xrelease
mov
hlt
inc
jnp
jo
dec
xchg
pop
push
or
ljmp
jns
jge
mov
push
push
fisubs
test
mov
repnz
mov
push
mov
push
pop
cmp
add
or
jecxz
ret
pop
sbb
dec
subl
sbb
and
negb
js
iret
fiadds
or
bsf
jp
jge
or
lods
pop
call
aam
inc
xchg
push
repnz
aaa
dec
in
pop
nop
pushf
adc
push
rcrl
pop
nop
cld
push
jg
mov
sbbl
inc
or
push
and
dec
fisubs
rclb
lcall
adc
mov
jns
sub
movsl
or
jnp
icebp
lock
adc
fadds
call
sub
sbb
mov
sbb
out
loopne
sbb
fmuls
movsl
mov
jmp
movsl
adc
or
dec
jae
xchg
push
fyl2xp1
sub
xor
push
sub
das
jmp
sub
test
inc
xchg
xor
aad
lahf
xchg
fninit
mov
js
leave
daa
test
js
scas
cmpsb
mov
lea
xchg
loopne
pop
test
sahf
and
lock
lret
pushf
les
cmp
dec
out
cmpsb
inc
pop
and
das
gs
or
ja
lret
outsl
out
inc
test
and
or
jns
mov
cmp
nop
lea
xchg
adc
call
push
loop
jmp
sub
jae
push
add
lret
ljmp
cmpsb
repz
fildll
dec
cld
pop
pop
aam
ja
fwait
adc
jecxz
jnp
adc
rcrl
adc
mov
test
imul
pop
sbb
in
dec
adc
xchg
pop
idiv
mov
pop
rolb
sbb
in
dec
adc
inc
push
insb
lcall
sbb
cmp
out
jo
jmp
cli
test
out
sbb
in
in
push
stos
lret
jg
addr16
enter
push
ja
adc
push
ljmp
xchg
xor
xchg
mov
adc
or
xchg
mov
add
pop
jns
pop
jo
xchg
or
into
les
incb
enter
cmpl
cmp
adc
leave
push
xchg
test
test
push
pushf
inc
daa
jg
sub
pop
lods
lea
shl
dec
lcall
in
adc
subb
sti
nop
sub
or
add
inc
push
inc
test
inc
and
push
repnz
lret
aaa
ljmp
mov
xor
test
inc
addr16
out
test
xchg
mov
lea
and
test
cmp
repnz
xchg
mov
dec
xchg
inc
xchg
push
pop
std
sub
dec
pop
std
push
or
cmpsl
icebp
bound
sbb
cmpsl
icebp
cmpsb
dec
imul
in
mov
xchg
cmpsl
ljmp
ljmp
add
sub
dec
fcomps
out
xchg
shlb
sub
inc
nop
sub
cs
pusha
cmc
inc
les
adc
ss
pop
jb
mov
and
test
cmp
or
out
pop
or
sub
jg
cwtl
enter
sub
add
fwait
fidivl
loopne
mov
xchg
sbb
add
push
sbb
out
jbe
xor
ljmp
pop
mov
dec
mov
push
in
lock
scas
jmp
in
xor
and
iret
sbb
dec
gs
data16
movsb
jg
pushl
in
test
sub
int3
daa
ljmp
dec
push
mov
xchg
movb
call
push
in
cmp
or
or
pop
mov
lock
stos
or
mov
sbb
sbb
add
sub
mov
jns
lock
aaa
cltd
fnsave
cmp
cli
push
sti
orl
fld
and
mov
mov
dec
and
into
sti
lods
scas
cmc
mov
mov
adc
repnz
or
dec
pop
and
idiv
jge
dec
int3
cmp
push
push
sub
mov
inc
xchg
dec
movl
push
jmp
jge
data16
pop
js
add
xor
push
les
test
cmp
popa
loop
jge
push
cmp
and
jl
ds
and
adc
call
mov
push
fucom
mov
rcll
dec
fwait
cmp
push
idivl
push
jecxz
out
mov
ss
push
sub
jg
cmp
js
and
sti
jmp
fwait
inc
or
push
scas
cld
stos
dec
mov
inc
cmp
fstpt
sbb
push
push
cmc
dec
imul
bound
jge
add
ss
repnz
mov
add
clc
inc
ret
mov
fistps
cmp
icebp
cli
fwait
adc
add
dec
out
pop
sahf
cmp
mov
in
xchg
shl
cmp
js
out
div
rcrb
call
in
add
jo
ror
leave
pop
push
sub
xchg
adc
test
sbb
mov
xor
lods
fwait
ret
push
xor
xchg
mov
cmp
fcoml
xor
rol
in
cmp
out
call
push
sub
xchg
adc
lret
jecxz
loope
adc
adc
movsb
mov
loope
adc
push
and
lret
push
incl
addr16
push
cmp
cltd
jle
adc
imul
cli
mov
cli
icebp
lods
mov
or
lock
dec
mov
or
cmp
lret
pusha
cs
add
nop
clc
sbbl
push
dec
out
fistpl
mov
stos
fcmovb
sbb
pop
jl
lret
mov
fsubs
xchg
xlat
sub
aas
ror
test
sub
lcall
insl
rolb
or
sbb
lods
ljmp
outsb
push
adc
ljmp
jg
sub
mov
out
addr16
xor
fisttps
inc
sbb
dec
push
dec
fadds
cmpl
les
jg
sub
leave
into
dec
repz
into
dec
or
inc
rclb
sbb
mov
ja
cmp
mov
les
ffreep
xchg
jnp
ret
in
sub
repz
xchg
push
imul
dec
mov
or
adc
out
jmp
mov
jecxz
mov
inc
mov
addb
xlat
in
stos
call
sbb
push
scas
shrb
loopne
dec
adc
cmc
mov
xor
int3
addb
sbb
sbb
or
add
sub
adc
lret
nop
les
push
adcb
mov
fbstp
andb
adc
into
push
popf
adc
push
pop
movsl
scas
cmp
pushf
xchg
std
fnclex
xchg
lods
pop
or
in
das
sub
adc
mov
pop
add
or
sbb
cltd
adc
loop
push
mov
sbb
push
shrb
xlat
sbb
pushf
mov
jecxz
popf
incl
or
sahf
jp
push
orb
popa
lcall
add
sarb
shll
imul
sub
loop
sub
push
fstps
fcompp
xchg
dec
mov
adc
cmp
je
cwtl
icebp
out
dec
mov
call
pushf
xor
ljmp
test
dec
cmp
pushf
xchg
or
dec
mov
sar
pushf
movsl
lods
cmp
xor
push
outsb
dec
pop
xchg
loop
mov
nop
cld
adc
je
sub
and
pop
insl
sarl
fcoml
ljmp
sahf
xchg
in
adc
mov
sahf
mov
adc
sub
pop
popw
inc
mov
movsb
mov
stos
sbb
in
into
movsb
mov
scas
fcompl
data16
mov
in
or
stos
jl
pop
inc
cmp
clc
call
push
insb
add
push
sbb
lock
ret
push
jns
into
pop
cmp
test
lret
adc
call
or
pop
mov
subl
or
popf
mov
fcomps
pushf
cld
sbb
rorl
sbb
adc
nop
sbb
pushf
adc
adc
sbb
mov
jnp
mov
imul
stc
mov
mov
mov
jmp
gs
push
popl
mov
lret
cwtl
ja
notb
pop
adc
cwtl
xchg
xchg
mov
nop
dec
popf
xchg
testl
or
xor
xchg
mov
lret
leave
push
xor
push
pop
leave
lock
ljmp
lds
clc
or
ljmp
or
jg
movsb
jp
xchg
mov
jmp
ljmp
adc
adc
addr16
movsl
push
out
call
inc
mov
adc
add
scas
out
adc
sub
shrl
movsl
lods
test
sbb
sub
in
xchg
iret
dec
test
cli
in
xchg
add
loope
out
stos
dec
sub
rolb
mov
push
aaa
imul
cmpb
movsb
dec
xchg
or
enter
jnp
and
pusha
clc
js
mov
adc
nop
mov
xchg
and
ljmp
stos
subl
adc
into
or
dec
rcrb
enter
jp
adc
inc
stos
imul
mov
lcall
sbb
mov
out
lds
pusha
bsf
sub
pushf
add
std
pop
mov
mov
pushf
hlt
stos
aas
ljmp
nopl
dec
mov
xor
jl
mov
stos
test
lret
lret
cmpsl
js
and
sbb
stos
pop
call
out
mov
push
subl
repnz
jge
in
faddp
sbb
lret
sub
mov
mov
sbb
adc
and
into
sbb
or
or
cli
fwait
sbb
int3
sbb
scas
jmp
sbb
fwait
mov
push
test
movsb
add
call
popf
sti
sahf
xchg
cmp
cmp
movsb
call
mov
mov
aaa
int
out
scas
xor
lahf
mov
inc
xchg
sti
xchg
data16
rclb
cmp
or
adc
dec
shlb
aas
pop
pop
pop
je
inc
or
out
dec
int3
push
scas
js
push
cmpsl
out
lds
ds
push
xchg
and
push
addr16
les
scas
test
pop
movsb
pushf
cmp
cmp
bound
aaa
test
xchg
loop
mov
call
push
sub
or
in
sahf
mov
nop
dec
scas
bound
fistpll
inc
stc
sbb
dec
into
lods
push
fwait
dec
cmp
push
dec
mov
aas
dec
lret
mov
sti
clc
lahf
mov
and
ljmp
dec
cli
mov
scas
or
pop
test
sti
adc
xor
xchg
mov
sub
mov
lods
jbe
shlb
and
test
mov
int3
outsl
aad
rorl
dec
xor
outsl
ret
pushl
lods
jl
shrb
inc
int3
mov
subb
lods
sar
scas
add
int3
cmp
add
adc
mov
stos
fwait
pop
inc
sbb
gs
lret
leave
int3
fisubl
in
jae
mov
insb
jo
out
inc
jmp
cld
adc
ret
cwtl
adc
dec
mov
ja
pushf
loop
aad
negl
or
mov
mov
sbb
je
lea
aaa
test
addr16
adc
icebp
cwtl
insb
cmpsl
mov
sahf
outsb
aas
mov
arpl
sub
lahf
push
adc
shlw
ss
or
in
lahf
dec
add
xchg
les
ss
push
or
and
ds
jecxz
dec
in
ret
push
jg
ss
imul
cli
jecxz
mov
stos
push
enter
mov
cld
lea
adc
sbb
cmc
jmp
sti
cmp
mov
adc
add
inc
sub
inc
movsl
inc
cwtl
fbld
xchg
out
pop
sub
mov
push
add
orl
adc
addb
xchg
add
xchg
in
and
sbb
in
test
and
ss
push
dec
sub
out
push
mov
mov
aam
in
sbb
mov
and
lds
push
or
repnz
push
int3
mov
dec
jp
mov
sti
lret
int
push
pop
stc
aad
or
sahf
or
int3
movsl
mov
xor
in
push
or
add
flds
jmp
push
cmpsb
movb
lret
sub
sbb
cmpsb
int3
ljmp
jmp
lcall
adc
mov
movsb
rorb
push
fs
cmp
mov
mov
aam
and
lods
dec
mov
insb
int
incl
xchg
jmp
call
mov
and
roll
inc
cmpsl
std
sahf
xor
jmp
mov
jl
stos
mov
inc
and
and
jg
or
mov
int3
daa
push
jno
push
punpckldq
sub
mov
sub
push
imul
test
jp
popa
sahf
mov
out
and
or
hlt
inc
mov
call
test
jno
lods
sub
sbb
cmpb
or
and
movsb
jo
cmp
inc
in
cmp
stos
nop
sahf
nop
leave
out
test
stos
into
add
mov
sbb
movsb
mov
xor
cld
jnp
rol
sbb
cld
mov
sahf
sub
sbb
out
mov
int3
dec
movsb
in
add
cli
pushf
adc
aas
out
js
mov
mov
or
adc
fdivrs
add
and
lcall
jnp
sub
lret
std
mov
add
mov
in
pop
jno
xchg
inc
jnp
pop
ret
mov
adc
pop
insb
cmp
jle
js
loop
or
add
test
arpl
sub
push
pop
cmp
push
call
pop
dec
or
cmp
pop
and
jle
jle
leave
test
push
mov
lret
or
pop
arpl
push
mov
cmp
sub
jle
cmpsb
movsb
scas
dec
stos
dec
or
test
aad
inc
repnz
es
inc
iret
lret
mov
jmp
fstps
add
sbb
ret
dec
jl
mov
or
movsb
movsl
cltd
pop
jle
sub
into
stos
in
mov
add
mov
leave
lret
mov
pushf
mov
adc
xor
lcall
xor
addb
push
sub
mov
in
pop
cltd
sahf
xchg
or
repz
out
int
test
and
mov
adc
dec
jle
popa
inc
fstp
aam
negb
shr
sbb
jle
jmp
out
push
ficomps
clc
push
and
cmc
mov
jmp
xchg
mov
iret
movsl
mov
subl
xor
mov
enter
imul
sbb
subb
cmp
sti
adc
inc
adc
lret
xchg
hlt
stos
lret
lret
lret
mov
or
dec
xlat
push
hlt
push
jbe
pop
inc
fs
aad
mov
adc
jl
sbb
xchg
adc
sbb
insb
adc
or
sbb
mov
and
sbb
or
cltd
sub
ret
test
fwait
into
mov
push
fidivl
mov
lods
imul
jge
outsl
adc
or
imul
ret
xchg
push
adc
push
stc
cmpsb
aam
cmpsl
pop
and
cs
sbb
sbb
call
jl
push
cmp
xor
mov
insb
fldcw
int
ret
movsl
out
xor
cmpsl
inc
push
lods
adcl
sub
cli
jl
sbb
inc
pop
int
push
les
fwait
movsl
cmp
or
jge
jl
sub
or
int3
ss
decl
lods
cmpps
loop
jmp
mov
fs
xchg
xor
pop
sbb
or
mov
fmuls
insl
repz
fldt
or
mov
sti
sbb
jle
sbb
adc
cld
les
cmpsb
mov
sbb
mov
test
ret
sbb
or
out
cmp
in
push
popf
dec
sti
xor
pop
scas
mov
fs
dec
pop
ret
mov
movsl
mov
dec
mov
jge
mov
lods
mov
pushf
mov
mov
adc
ret
and
enter
push
mov
cs
pop
dec
and
jnp
dec
scas
add
dec
test
mov
mov
insb
jno
shll
dec
xor
pop
cld
into
outsb
fcoml
scas
pop
jle
xchg
call
scas
dec
add
in
pushf
or
inc
xchg
mov
call
pushf
sbb
dec
leave
or
jne
adc
xlat
sub
dec
add
mov
gs
cmp
lods
add
in
fmuls
jp
in
inc
jnp
mov
or
movb
push
lods
sub
mov
cmp
aad
int3
out
pop
push
mov
mov
mov
fldt
or
sbbb
loopne
mov
lret
fnstsw
sub
out
or
add
hlt
iret
xchg
fildl
adc
ljmp
lcall
movsb
jmp
add
add
sti
hlt
lret
sbb
decb
les
int3
jns
cmp
push
lret
adcl
mov
xchg
mov
jecxz
push
ljmp
repnz
stos
sub
inc
cmpb
xchg
xchg
or
mov
in
shr
aad
add
sbb
in
inc
repnz
int3
pushf
inc
ret
shrb
mov
or
cs
push
fistpl
lret
ljmp
int3
test
fmull
fmull
dec
jne
jmp
lea
ret
or
or
aam
aad
jae
xchg
loope
imul
xchg
test
fwait
lock
imul
xchg
xchg
test
xor
or
leave
lret
jmp
adc
mov
dec
push
push
xchg
mov
jmp
add
dec
sub
xor
aas
xchg
xlat
cmp
test
ljmp
roll
fcoml
icebp
cmp
lock
mov
movsl
lret
shl
push
sbb
adc
lds
cmc
add
mov
add
mov
jnp
sahf
pop
or
les
subl
push
lock
xchg
inc
or
orl
clc
js
test
test
stos
mov
mov
mov
cltd
and
inc
sbb
lret
mov
leave
add
sub
sahf
inc
test
xor
add
les
add
adc
push
inc
xchg
sub
mov
lret
inc
push
adc
push
push
jl
or
pop
bound
pop
or
sbb
or
cmp
mov
mov
ljmp
cmpsb
outsl
adc
fwait
test
in
aad
ds
pushf
rolb
or
call
sbb
inc
jle
xchg
das
inc
or
jle
aad
dec
jno
xchg
frstor
push
mov
cmpsl
sbb
dec
and
shrb
pop
push
mov
fldl
cltd
add
add
scas
sarl
cmp
sub
or
xor
sbb
mov
xlat
push
sub
pusha
incb
ljmp
or
push
test
addl
mov
adc
imul
cwtl
push
clc
push
aaa
mov
inc
scas
lret
dec
dec
ds
test
cmpsl
push
xchg
xor
xor
inc
fimull
ret
lret
push
test
sbb
stos
jmp
jnp
fildll
in
outsl
sti
int3
sahf
sub
sbb
out
or
and
adc
std
fldenv
mov
push
adc
in
dec
xchg
insl
ljmp
or
cmp
repz
fldcw
sbb
hlt
adc
imul
cmpsb
adc
mov
out
sbb
imul
push
or
sbb
aaa
xchg
pop
or
andb
cli
aam
popf
addr16
sub
dec
inc
nop
lahf
dec
pop
pop
xor
hlt
out
mov
or
rclb
sbb
imul
test
out
push
or
pop
enter
in
mov
mov
jl
lds
imul
or
xchg
fs
mov
lock
xor
sbb
push
push
mov
dec
mov
dec
pop
inc
test
pop
push
mov
push
sub
mov
sbb
pop
popf
insb
or
pop
imul
mov
hlt
mov
gs
out
sbb
int3
inc
testb
les
stos
xchg
add
or
add
lret
loop
int3
test
lret
xor
adc
nop
daa
sub
adc
outsl
xchg
movsb
imul
pop
fisubs
stos
popf
pop
mov
push
dec
or
clc
pop
lock
jecxz
or
test
lods
dec
mov
mov
push
shrb
jno
xchg
scas
repnz
xor
sahf
xchg
stos
icebp
icebp
sbb
add
mov
jnp
lods
repz
jnp
push
xchg
mov
xchg
or
mov
cld
pop
add
push
pop
fnsave
imul
xchg
mov
sti
loop
popa
mov
int3
into
xchg
loopne
jnp
in
xchg
push
rclb
jnp
inc
popa
jmp
cltd
jne
aam
repz
pop
xor
sbb
jnp
or
cltd
xor
out
in
fimuls
and
testb
pop
rclb
mov
aaa
jp
test
sahf
inc
bound
sub
and
jmp
cmp
or
ret
push
lret
or
ret
xchg
add
add
ret
mov
xor
rcll
jmp
lret
loopne
jl
imull
add
push
jbe
in
js
gs
mov
repz
mov
mov
mov
push
or
sub
inc
pop
lcall
rcr
add
and
mov
and
mov
das
push
flds
cli
push
gs
mov
sub
add
das
mov
loopne
popf
pop
or
xorb
jl
jnp
cld
pushl
loope
gs
ret
mov
les
sti
jle
repnz
sub
stos
sub
repnz
mov
and
ret
gs
dec
mov
outsb
cli
push
add
sbb
rcr
call
sbb
or
cmpsl
mov
lcall
lret
adc
pusha
lock
push
lods
je
inc
sbb
adc
shlb
cmc
jecxz
dec
adc
in
push
xchg
sbb
or
or
inc
mov
int3
adc
pop
stos
ljmp
sub
scas
jge
jnp
pop
mov
cmp
add
mov
lret
cmpsb
loop
loope
mov
scas
xor
aam
ret
js
add
cmp
stos
arpl
mov
fsubrp
jmp
xor
lods
add
or
pop
mov
mov
movsl
dec
fmul
adc
adc
or
push
mov
shrl
mov
push
dec
ljmp
or
dec
hlt
test
sub
jmp
fwait
jno
pop
orl
jg
cwtl
dec
cltd
lea
mov
sub
dec
loopne
or
subb
pop
btc
or
hlt
fisttpl
jmp
jmp
sbb
inc
dec
or
adc
daa
leave
ss
fdivrs
pushf
sbb
mov
push
ret
mov
and
divl
lret
ret
in
cli
out
cmp
pop
or
gs
in
stos
orl
jp
ret
aad
pop
lcall
adc
add
pop
xchg
cmc
add
lock
adc
or
add
adc
movsb
jns
jp
jecxz
movsl
sub
sbb
lret
mov
dec
mov
fmuls
fisttpll
lret
and
adc
inc
or
orb
mov
jo
nop
inc
rolb
clc
sbb
icebp
nop
or
jge
add
or
sub
mov
mov
out
lods
jmp
mov
or
xlat
cmp
daa
cmp
adc
add
in
ret
or
movb
dec
in
ljmp
stc
adc
and
loop
jl
orb
mov
jnp
ret
mov
outsl
xchg
jo
icebp
cmpsb
mov
inc
adc
test
cmp
xchg
dec
pop
lret
or
mov
stos
xor
ds
out
and
xor
jecxz
inc
aad
push
sub
stc
push
inc
xor
mov
mov
sahf
or
push
into
fwait
dec
dec
popa
jns
mov
mov
stos
arpl
lea
push
mov
fs
out
popa
scas
insb
or
xchg
lret
mov
sub
mov
sub
xchg
sbb
pop
push
sub
pusha
sbb
outsb
cs
push
mov
inc
mov
or
mov
sub
add
nop
aam
or
mov
arpl
dec
sti
push
into
inc
cwtl
and
pusha
andl
and
mov
mov
dec
or
jle
xor
sarl
or
sub
xor
inc
mov
xchg
mov
or
jmp
jl
test
pop
scas
or
jbe
mov
sahf
ljmp
lods
aam
addb
out
sub
lods
imul
xchg
mov
out
je
ljmp
nop
mov
lods
out
inc
ror
mov
or
stos
jg
mov
test
jle
stc
incb
adc
inc
loop
lret
inc
jmp
add
jbe
movsl
aas
pop
ljmp
jl
loop
push
in
pop
in
adc
or
ljmp
or
add
mov
bound
lods
mov
or
xchg
hlt
cwtl
inc
push
sbb
mov
cmp
sti
call
mov
adc
jecxz
or
test
cmpsb
mov
clc
cltd
adc
pushf
jnp
aad
fwait
stos
pop
bound
gs
sub
insb
push
adc
push
dec
jnp
pop
push
roll
in
add
sbb
sub
adc
stos
stc
in
call
pop
inc
arpl
or
cmpsb
fcoms
ret
punpckhwd
sub
inc
push
popf
mov
mov
adc
dec
add
loopne
int
dec
xor
aaa
xchg
lods
lahf
inc
jnp
repnz
jp
mov
add
pusha
inc
sub
xchg
out
dec
push
pop
dec
cmpsl
sub
sub
add
jnp
mov
or
or
aam
hlt
cmp
xor
lret
inc
mov
out
sti
movb
or
mov
inc
add
ret
aad
push
mov
jl
jle
jg
cmpsb
adc
lret
mov
loope
mov
jle
cld
sub
test
jmp
add
dec
subb
popa
popf
mov
jecxz
pop
ds
xchg
mov
mov
xchg
add
test
stos
pop
or
pop
in
inc
sub
mov
nop
sub
adc
test
int3
lock
sbb
dec
cwtl
dec
cmpsb
stos
mov
loopne
lret
sub
mov
cmp
shrl
add
mov
outsl
insb
icebp
jle
adc
imul
sbb
mov
jne
xor
inc
push
mov
movsl
sbb
ljmp
pop
mov
decl
lds
ljmp
popa
out
jmp
cmp
push
inc
jbe
mov
out
pop
loope
inc
jnp
add
loop
imul
mov
test
std
sbb
cmp
add
cmp
push
adc
push
or
cmp
add
xor
js
jne
pop
fwait
mov
mov
xchg
je
mov
sub
rol
mov
mov
mov
hlt
fwait
adc
xlat
movsb
outsb
pop
sbb
sahf
sbbb
fiadds
daa
mov
push
and
shlb
hlt
push
pop
das
push
jl
in
inc
sub
rorb
or
repz
and
and
push
xor
or
mov
or
sti
xchg
shl
add
lds
sbb
pop
rorb
mov
add
fs
imul
cmp
les
or
dec
mov
lret
sbb
movsl
lret
add
in
mov
mov
mov
sti
pop
mov
xchg
add
call
mov
or
out
out
loop
lret
pusha
in
add
ret
xchg
sub
jns
insl
and
sub
sub
xchg
ss
mov
sti
leave
stos
mov
jo
sbb
and
or
movsb
dec
fstpt
lcall
pushf
inc
mov
jnp
in
movsl
repnz
imul
jbe
inc
add
loopne
imul
mov
loop
es
inc
or
dec
ret
in
lea
xchg
sub
rorl
jnp
adc
xor
adc
imul
leave
cmpsl
clc
pushf
jmp
adc
test
popa
push
add
in
int
pop
and
push
movsl
ret
lret
dec
fisubrs
add
mov
js
push
movsl
dec
sahf
enter
dec
aam
pusha
imul
cmp
fcoms
lret
mov
xchg
sbb
int3
insl
push
fdivrs
rorl
adc
sbb
sub
les
jo
add
mov
sbb
inc
xchg
mov
mov
aaa
imul
cltd
stos
jb
test
cmpsl
ud2
or
or
outsl
in
iret
jecxz
add
cmp
aaa
fisttpll
in
sbb
jo
sbb
cwtl
sahf
fdivl
fistl
inc
xchg
adc
add
cs
out
mov
pop
jmp
pop
mov
in
js
loop
or
cmp
js
jecxz
or
sub
in
or
sbb
add
mov
inc
pushf
and
xchg
sti
test
pushf
cwtl
stos
fsubs
lret
jno
cld
bound
lock
mov
stos
inc
popa
nop
adc
mov
lock
stos
movsl
push
jle
cli
in
bound
data16
lcall
adcb
or
int
enter
or
test
jge
cmpsl
scas
xor
sub
test
mov
jmp
bound
out
stos
enter
es
adc
xchg
mov
fistl
push
stc
mov
pop
movsl
fwait
jnp
inc
xlat
movsb
in
xchg
add
or
repz
and
dec
xchg
mov
popa
push
sbb
push
loop
lds
pop
std
sti
fcmovne
imul
jb
enter
int
movsl
ret
cwtl
jmp
aam
cmp
cmpsl
shlb
dec
mov
scas
xor
sub
in
lods
lods
insl
jl
sub
mov
addl
and
fsubrl
inc
or
mov
in
or
adc
jecxz
sub
adc
pop
lret
or
push
jl
lods
sahf
jmp
sub
and
out
repnz
add
sbb
lcall
pusha
clc
jmp
fcomp
jecxz
ds
call
add
push
mov
scas
add
or
adc
movsb
stos
sti
arpl
pop
fstpl
jge
hlt
dec
test
adc
popf
push
popf
repnz
dec
fstl
movsb
subb
test
scas
and
icebp
and
repz
test
mov
sbb
fcompl
dec
xchg
inc
or
les
shll
movsb
cmp
inc
lods
aas
cmp
shlb
sahf
mov
jecxz
imul
jecxz
sbb
mov
inc
pusha
sbb
mov
dec
mov
sbb
ljmp
lods
cwtl
xor
hlt
mov
sbb
add
and
shll
and
aas
andb
iret
and
mov
adc
into
aaa
add
jl
in
jmp
aas
add
jbe
outsl
cmpsb
sub
sahf
or
cmp
or
std
inc
dec
sub
fsubrs
mov
sub
add
pushf
aas
lcall
mov
pop
push
jmp
in
sub
add
hlt
popa
test
adc
cmp
or
push
sbb
push
dec
pop
ss
jmp
mov
mov
sahf
mov
dec
xor
pop
int3
sti
push
fsubs
ret
lods
fs
push
scas
push
test
fwait
stos
dec
mov
inc
bound
jo,pt
adc
dec
enter
enter
popf
sbb
push
lret
cld
xchg
mov
stc
sbb
jmp
out
aam
out
sbb
dec
sub
jl
or
iret
xchg
cmp
or
hlt
or
cli
imul
jmp
fisubrl
or
add
and
add
test
movsb
insb
mov
mov
addr16
test
inc
out
insb
adc
mov
sbb
stos
sbb
mov
or
int
inc
mov
popa
jmp
add
dec
sbb
in
jecxz
mov
pop
mov
adc
stos
pop
mov
xor
add
lret
inc
push
sbb
es
dec
jmp
cmp
adc
inc
outsb
test
into
mov
jmp
inc
es
cmp
push
adc
push
sub
mov
mov
into
pop
jmp
scas
pop
mov
enter
add
adc
mov
and
or
jmp
rcrb
xor
or
pop
enter
inc
ds
dec
jecxz
sti
in
sbb
test
ret
xchg
add
dec
andl
ret
mov
push
in
inc
push
pop
into
loop
mov
sbb
add
pop
mov
and
ljmp
xor
insb
loopne
pop
add
loop
mov
push
lock
add
out
cs
or
sti
push
adc
mov
mov
enter
sub
scas
fildl
fistpll
cmp
add
lret
mov
out
mov
mov
les
ret
or
xor
jle
cmpsb
sub
mov
ret
and
sahf
ret
inc
dec
mov
fs
addr16
inc
jmp
push
pavgw
or
adc
inc
jnp
cmp
int3
pushf
imul
out
xchg
into
inc
rolb
rcrl
mov
pop
jmp
fs
and
mov
nop
sub
aad
clc
xchg
repz
mov
xchg
ret
aad
mov
adc
adcb
dec
ljmp
in
insb
jns
lret
aam
shrl
adc
pop
les
mov
xor
lds
sbb
scas
sti
jmp
mov
popa
xchg
ret
stos
cmp
adc
adc
sti
in
addr16
sbb
push
xchg
jg
and
sub
or
adc
sbb
sarb
jmp
or
test
push
mov
pop
add
mov
stos
lods
hlt
push
sub
inc
or
dec
movsb
pop
mov
pop
pop
adc
jmp
or
push
xchg
xchg
push
in
test
inc
add
add
subl
subb
imul
push
cmp
pop
sahf
add
sub
addr16
or
ret
psadbw
xor
test
and
adc
leave
push
es
aaa
inc
xchg
jecxz
push
mov
mov
out
lods
dec
data16
or
sub
cmp
pop
push
mov
cmp
ret
and
testl
sbb
sarb
daa
repnz
xor
jnp
or
ret
or
pushf
mov
fwait
and
loop
into
add
mov
add
xchg
mov
adc
mov
aam
ret
lret
and
xchg
call
or
add
addb
cmp
aam
jecxz
mov
les
mov
pop
in
andl
jae
sti
mov
out
cmp
and
pop
sbb
in
fidivrs
leave
sub
hlt
and
lret
mov
fwait
or
xchg
fsubrs
stos
xchg
aad
push
pushf
movsb
aaa
call
cmovo
add
aad
pusha
inc
push
cmp
pop
movsb
test
or
jnp
mov
add
add
mov
jmp
arpl
cmp
cmp
adc
or
adc
sub
out
dec
cmp
stos
xor
and
fsub
outsl
mov
pushf
cmp
stc
jp
mov
jne
mov
dec
call
ret
mov
xchg
adc
int3
enter
jl
mov
imul
xchg
fisubrl
ja
mov
push
sbb
aas
rolb
out
push
mov
mov
and
call
jecxz
ljmp
mov
inc
sbb
sub
mull
cli
in
pop
add
fildl
loop
inc
add
sbb
jno
sti
into
jl
aam
mov
dec
aam
add
inc
pop
jl
jmp
sub
aaa
fidivrl
dec
int3
inc
test
sbb
aad
dec
mov
rcll
outsb
addr16
outsl
mov
push
in
filds
inc
fidivs
cmpsb
xlat
push
faddl
pop
push
lea
cmp
cmp
add
sub
jle
dec
adc
jg
out
lds
ret
dec
test
adc
sahf
pusha
insb
lret
lods
dec
sub
movsl
dec
stos
add
mov
sub
dec
pushf
in
imul
sbb
or
lods
imul
lods
lret
in
mov
push
ret
insb
or
cwtl
and
cmpl
test
mov
test
jae
dec
jne
das
inc
add
or
stos
add
cwtl
xor
dec
jae
repz
pop
mov
pop
add
or
clc
idivl
and
pop
and
xor
cmc
lret
les
add
out
ret
int3
cltd
movsl
in
adc
mov
mov
and
outsb
je
lahf
pushf
pop
push
adc
xchg
inc
nop
out
adcb
adc
pushf
pop
inc
mov
popf
lods
fcmove
and
std
leave
sub
repnz
pop
adc
je
adc
loop
jnp
jecxz
test
sbb
inc
adc
rcrl
dec
xchg
mulb
sti
shrb
mov
sbb
cmpsb
sarb
negb
sub
out
test
test
aas
rorl
push
inc
decl
cld
lock
dec
hlt
adc
stos
fwait
add
mov
pop
push
fwait
adc
cwtl
dec
sub
jmp
inc
jmp
jae
or
xor
lock
inc
sub
lcall
lahf
add
sub
xchg
not
add
inc
test
inc
sbb
mov
inc
xchg
mov
sti
sbb
add
ret
mov
mov
push
sbb
lods
sahf
mov
lds
mov
sub
dec
dec
les
add
imul
in
sbb
lret
out
enter
add
stos
daa
adc
sub
subl
adc
scas
pop
mov
mov
xor
rol
and
mov
lea
add
addr16
dec
stos
add
popf
push
sbb
sbb
add
jno
fwait
mov
cmp
cmp
add
jae
ds
cmp
cmpsl
repnz
xor
jge
jno
int3
add
lret
popf
jl
mov
outsl
popf
mov
add
loop
js
scas
ljmp
sub
jp
jecxz
pop
lds
aam
and
test
call
ja
orb
add
call
fimull
and
pushf
out
and
xchg
pop
jmp
sti
icebp
sti
or
decb
cmpsb
lea
decl
pop
xchg
lret
aam
pop
add
cmpsl
nop
and
cli
sub
psllq
pop
sub
insl
adc
jb
out
push
mov
mov
xchg
jge
push
jmp
push
sbb
xchg
subb
adc
dec
or
mov
pop
pop
in
loope
lret
push
test
ss
dec
jne
push
jmp
mov
lock
adc
cld
out
incl
inc
les
pushf
stos
popa
subb
mov
ljmp
and
fldcw
inc
sbb
xor
repz
jg
fwait
sbb
jmp
enter
inc
lret
cmpsb
add
fnclex
add
adc
mov
jnp
add
jmp
fwait
out
loope
or
inc
scas
stc
lcall
enter
push
subb
test
das
leave
nop
adc
fisubrl
ja
inc
pop
lret
cmpsl
pop
lahf
gs
push
xchg
sub
ljmp
cld
bound
inc
jmp
cs
jns
ljmp
inc
incl
add
pop
jnp
adcl
lods
sub
sahf
or
pop
out
inc
adc
shrb
inc
xor
push
lret
or
sbbl
mov
add
sbb
push
adc
hlt
mov
xchg
in
pop
hlt
add
xchg
mov
pop
int3
pusha
iret
sub
sub
stc
aad
jbe
jae
movsb
sahf
mov
lcall
cld
rcl
and
adc
jmp
mov
mov
int3
cli
sub
call
push
pop
cmp
in
jle
aam
sti
pop
ret
scas
mov
jnp
adc
jmp
loopne
mov
scas
jp
data16
pop
btc
xchg
jecxz
mov
insb
out
shr
sub
cwtl
test
or
bound
sbb
cli
pop
dec
les
or
lcall
fdivl
adc
pop
xchg
pop
popw
xchg
lods
adc
jp
xor
push
jb
jnp
movsb
mov
jl
in
ljmp
sbb
push
mov
mov
adc
cli
sbbb
lods
xor
mov
lcall
jl
scas
xchg
xchg
sbb
in
imul
cltd
adc
mov
ja
fucomip
sub
fdivrl
inc
mov
and
add
int
add
lret
mov
out
sbb
out
ljmp
test
add
cmpsl
sti
lds
rcrl
xchg
into
push
mov
mov
jae
scas
pop
mov
loope
jle
testl
adc
clc
jg
dec
mov
fstl
test
in
xchg
popf
or
and
aam
add
push
sarl
out
mov
fwait
in
add
dec
cli
fisubs
sub
dec
and
add
sahf
and
cld
push
popf
imul
sahf
sbbl
cmc
sti
test
into
push
inc
cmp
mov
mov
fs
mov
mov
pop
push
pop
mov
jl
sbb
add
or
mov
daa
inc
loop
pop
inc
or
rorl
xchg
or
jb
ret
hlt
fdivrl
adc
out
and
sbb
inc
or
or
cld
mov
ret
push
add
orb
loop
adc
pop
xchg
adc
xchg
mov
addr16
jge
arpl
lret
cmp
and
cltd
insl
sbb
inc
cmp
mov
addl
cli
inc
enter
push
sti
push
lret
mov
mov
add
cli
or
adc
jge
ret
and
ja
add
test
mov
in
pop
daa
add
jmp
or
jp
and
inc
movsl
adc
in
push
int3
dec
push
sbb
adc
and
or
sub
cli
dec
or
mov
xchg
rcll
mov
or
dec
add
pop
popf
shll
sahf
and
mov
shrl
lods
pop
adc
inc
jmp
xchg
mov
jbe
adc
mov
mov
pop
test
imul
jg
jns
adc
ret
mov
mov
punpcklbw
jmp
jns
mov
push
cmp
sbb
inc
in
jecxz
movsl
sbb
lea
xchg
sahf
out
mov
sbb
adc
pushl
or
jl
xchg
or
push
xchg
int3
mov
fldl
jno
or
xlat
iret
imul
inc
xor
inc
mov
inc
dec
cmpsl
dec
inc
pop
adc
sbb
xor
xchg
leave
movmskps
insb
enter
dec
ljmp
mov
mov
jmp
sub
jecxz
lock
pop
push
stos
adc
test
adc
movsb
inc
test
mov
mov
pop
push
lcall
sub
clc
fistpll
sub
pop
lods
ljmp
insl
popl
and
cli
inc
test
repnz
in
or
dec
adc
lods
or
jp
lds
adc
push
sub
sub
pop
stos
add
sub
ljmp
jbe
int
gs
popf
xchg
test
fs
outsb
sbb
sti
push
add
aas
insb
mov
fwait
ret
pushf
insl
xchg
sbb
jge
stos
pop
jl
movsl
adc
mov
popf
push
pop
stos
scas
add
stos
add
cli
jp
or
mov
add
cwtl
aam
ret
jecxz
out
test
mov
xchg
je
pop
imul
and
mov
and
adc
adc
jne
xor
push
dec
sub
jne
cmp
negb
mov
mov
adc
push
jb
pushf
pop
mov
xchg
ret
lret
sub
add
xor
dec
add
push
adc
xchg
adc
mov
mov
sub
out
bound
xor
test
lret
xchg
sbb
fucomp
add
mov
call
pop
mov
jnp
mov
stc
jg
lods
add
sub
pop
pop
data16
leave
add
sub
xchg
sub
jmp
xor
scas
inc
aas
subb
outsl
dec
lahf
or
pop
lds
call
pop
pop
or
pop
xchg
pop
xor
or
pop
push
push
sti
pop
addr16
xchg
loop
test
adc
inc
lea
or
xchg
mov
jmp
insb
notb
mov
xchg
ret
sub
test
mov
mov
loopne
in
mov
pusha
mov
mov
roll
rclb
or
sbb
mov
or
das
lret
and
mov
sar
adc
add
mov
mov
inc
stos
scas
roll
mov
movsl
mov
cmpsl
sbb
lock
call
push
cwtl
and
add
add
cmp
mov
xchg
xor
and
in
gs
or
jbe
mov
cli
mov
push
jno
nop
iret
adcl
ret
les
adc
nop
dec
adc
imul
rol
dec
push
lret
cmp
dec
mov
xchg
test
sub
out
into
jne
pop
fbld
xchg
jo
aaa
rcrb
repnz
movsl
push
push
ror
andl
add
cmpl
gs
pop
aam
sbb
ljmp
inc
mov
lcall
jnp
dec
lahf
cmp
or
add
mov
gs
lds
or
jns
les
rcll
mov
pop
jns
xchg
lret
mov
push
cmpsb
gs
pop
lcall
icebp
fcompl
addr16
fisttpl
xchg
dec
sub
and
ljmp
rcl
or
loop
stos
xchg
xor
sarb
jmp
lret
and
xchg
sub
out
xchg
jbe
test
ret
enter
iret
push
add
in
sbb
into
popf
cmp
xchg
sbb
sbb
jnp
mov
cmp
add
push
lret
lret
or
out
push
test
or
or
xchg
inc
cld
pop
adc
cld
add
cmp
add
cld
and
jnp
push
pop
lea
adc
xchg
int3
mov
loopne
xchg
add
mov
lods
and
sbb
decb
mov
jo
and
lods
inc
adc
dec
push
scas
cmp
fisubl
js
jp
push
add
xchg
lea
sahf
mov
lret
jbe
mov
push
jbe
into
cmp
xor
loop
ret
mov
sti
lea
idivb
frstor
fs
pushf
hlt
push
pop
pusha
or
xchg
mov
lods
xchg
pushf
out
insl
push
ja
mov
out
int
pop
aaa
out
daa
sti
aas
aas
stc
imul
ljmp
ret
xor
sbb
int3
ss
push
repz
in
and
mov
rclb
int3
scas
in
mov
repz
xchg
scas
push
call
mov
fsubr
cltd
sub
lock
pop
mov
jge
sbb
mov
mov
inc
out
dec
ficoms
roll
pushf
push
jnp
push
or
mov
inc
fs
or
dec
in
lret
ret
aas
or
pop
adc
loope
jl
out
or
jne
loop
cmpsl
mov
testb
inc
push
pushf
jnp
insl
pop
add
jge
in
adc
inc
push
int3
mov
fldl
adc
and
xor
add
cld
jbe
aad
pusha
add
stos
and
dec
aam
lds
adc
sahf
or
inc
arpl
cld
les
lea
lahf
shll
pop
jge
adc
test
mov
gs
ja
inc
into
or
es
push
xchg
jae
scas
aas
fwait
stos
mov
aad
les
lret
inc
fmuls
lret
mov
mov
sti
xchg
jnp
shlb
pop
in
test
cli
jmp
lods
xchg
popa
stos
in
lret
mov
add
jnp
shll
mov
pop
mov
inc
ret
sbb
lret
mov
push
sbb
aas
xchg
or
push
or
mov
hlt
icebp
xchg
mov
add
mov
inc
mov
mov
mov
gs
wbinvd
pusha
fiadds
insb
jl
lret
lods
xlat
pop
lods
dec
popf
nop
int3
or
dec
insb
mov
adc
jmp
out
dec
int
insl
call
mov
pop
fsubrp
in
lret
sub
ds
stos
adc
cmp
lds
jge
test
and
add
jnp
adc
daa
movsb
int3
movsl
xchg
sbb
sub
insb
idivl
rolb
paddsb
or
mov
adc
mov
je
out
adc
or
xchg
mov
pop
dec
push
add
sub
add
fstps
int3
sub
stos
pushf
jmp
mov
in
lret
imul
add
test
push
int3
or
or
inc
inc
loop
fxch
or
sub
fsubrs
inc
or
xchg
add
jnp
inc
mov
iret
and
loopne
jmp
popa
cmp
dec
mov
repnz
adc
out
push
mov
in
roll
int3
icebp
dec
mov
aad
jmp
mov
in
scas
add
xchg
push
js
inc
loop
inc
out
test
hlt
adc
add
in
dec
push
jmp
out
add
cmp
stos
or
sbb
or
movsb
pop
clc
cli
fistl
data16
sahf
jmp
mov
fstpt
or
push
cmp
in
mov
gs
int3
push
mov
sub
icebp
adc
push
lds
jns
lds
mov
cmp
insl
roll
inc
mov
and
daa
ret
leave
sbb
push
sub
pop
cmc
sbb
inc
test
add
mov
cmp
push
nop
xchg
mov
or
fs
mov
add
in
cmp
mov
xchg
test
sbb
test
test
pop
nop
xor
xchg
inc
fidivs
inc
pop
lar
pop
pushf
fdivs
adc
and
sbb
mov
pop
in
dec
push
lret
xchg
mov
ret
xchg
test
popf
jecxz
push
sub
ja
xor
mov
outsl
loopne
in
inc
inc
or
in
fcmovu
mov
cmc
add
jmp
pop
pop
call
sbb
dec
cmp
stc
test
pop
test
or
sub
fdivrl
fadds
inc
loop
push
push
hlt
and
movsl
adc
outsl
pop
ret
or
repnz
sahf
sub
mov
ss
or
xchg
fidivs
sub
lret
push
hlt
inc
jmp
fsubrp
jp
jno
enter
popa
xchg
ja
lods
adc
nop
into
pop
pushf
add
pop
mov
movsb
xlat
out
rorb
cmp
push
stos
ljmp
pushf
xchg
adc
clc
mov
lds
sbb
mov
repnz
add
jb
pop
lret
test
fcomip
xor
xor
jge
adc
mov
xchg
into
dec
adc
push
push
out
jp
xor
fs
lcall
mov
inc
xor
sbb
mov
scas
xor
stos
sub
jb
lret
stos
mov
test
mov
dec
stos
stos
stc
cmp
fwait
test
mov
loope
movsl
fdivrs
pop
dec
jmp
mov
pop
lods
dec
movsl
and
xchg
mov
mov
js
mov
jle
ss
sub
mov
testl
mov
xor
ljmp
sahf
jo
daa
xchg
test
push
dec
mul
mov
fisttpl
into
mov
loope
dec
xchg
roll
enter
stos
push
cmp
mov
sbb
loopne
ret
ja
pushf
pop
mov
mov
sub
nop
aad
in
fidivl
addb
sub
pop
aas
fnsave
pop
and
mov
or
push
adc
pusha
ljmp
jmp
push
add
push
fldcw
lds
cltd
pop
push
dec
pop
sbb
inc
movsb
mov
add
sub
sti
pop
or
push
cmp
push
jle
inc
mov
mov
jle
je
test
pop
cld
aad
je
push
xchg
adc
sti
sub
fcmovb
inc
add
cmp
addb
scas
lahf
ret
sbbl
xchg
add
in
mov
cmp
ja
fidivrl
sti
mov
pushf
in
or
pop
arpl
pop
adc
stos
cld
mov
sub
mov
xor
add
ljmp
and
mov
mov
in
and
and
push
repnz
arpl
fld
daa
xchg
jge
adc
jg
jmp
ljmp
mov
xchg
inc
cmp
hlt
outsl
ret
push
popf
inc
sub
nop
call
icebp
push
ret
sbb
xchg
ret
sbb
xchg
ret
sbb
addb
mov
ljmp
popa
lret
pop
pusha
adc
movsb
jb
and
inc
sbb
push
jb
xchg
jne
stos
add
xlat
stos
mov
out
mov
movsb
xchg
fnsave
ljmp
fxch
cmp
mov
inc
in
ret
sbb
andl
xchg
ret
leave
cmpsl
andb
sub
xchg
push
testl
cld
jo
movsl
adc
jecxz
or
std
mov
add
add
in
pushf
fcomps
cli
out
ret
ljmp
jmp
stc
in
or
push
aam
or
loop
mov
add
movsl
mov
fbstp
lret
cmp
and
inc
test
and
cli
jecxz
add
jge
jge
cmp
or
inc
push
add
sub
push
cmc
imul
mov
pop
mov
popa
fstl
loop
add
pushf
adc
add
or
or
pop
push
out
repz
cltd
pop
ja
jae
adc
pop
pop
cmp
pop
and
sbb
test
ret
add
push
mov
add
mov
out
jl
dec
mov
xor
aad
push
or
jnp
inc
xchg
movsb
sbb
pop
cmp
daa
inc
add
mov
rcll
xor
mov
ja
cwtl
mov
add
sub
and
or
jmp
rolb
movsl
pushf
dec
mov
ljmp
jns,pt
dec
call
inc
and
lock
loop
hlt
mov
imul
fmuls
jge
jmp
sti
and
mov
cltd
stc
mov
sahf
or
loop
add
pushf
fucompp
lahf
dec
push
cmp
or
test
movl
adc
xrelease
adc
mov
ljmp
leave
add
sub
addb
insb
jge
mov
adc
mov
hlt
dec
shll
ljmp
jmp
in
fidivrl
lds
movsb
mov
ljmp
repz
push
inc
mov
pop
movsl
mov
mov
mov
or
xchg
dec
lea
sahf
data16
dec
enter
adc
scas
sub
pushf
pop
jmp
sti
dec
dec
popa
pop
inc
mov
mov
lret
adc
add
imull
mov
or
sub
mov
and
out
out
lret
into
inc
outsb
cld
sub
fs
add
add
cmp
dec
pusha
cmp
imul
pop
inc
push
jge
mov
loope
inc
and
sbb
push
jp
or
decb
add
lret
mov
sub
cltd
xchg
mov
out
lcall
sub
fstpt
sub
pop
pushf
mov
je
cltd
insb
or
jp
call
adc
roll
dec
xchg
mov
ret
fmuls
pop
push
or
adc
les
jl
push
mov
rcrb
and
loopne
ret
add
pop
fwait
sbb
cli
push
dec
pop
xor
lahf
inc
fisubl
or
arpl
adcl
jmp
popa
add
cli
cmp
hlt
test
sbb
ljmp
daa
mov
add
cli
push
enter
stos
test
call
insb
jne
in
xchg
popa
je
in
mov
xchg
vprotq
cs
add
pop
dec
jnp
test
adc
or
cmp
roll
sub
lret
enter
xchg
add
stos
add
mov
lahf
dec
out
cmpsb
inc
inc
push
sub
and
pushl
inc
or
adc
jmp
push
fs
or
test
pusha
sbb
cmp
push
sbb
js
sbbb
daa
test
nop
xchg
and
inc
jmp
mov
mov
or
test
inc
mov
add
cli
xchg
enter
ljmp
arpl
sti
enter
push
add
stos
push
push
add
mov
adc
add
les
fucom
mov
lea
daa
fdivrl
ljmp
sub
mov
lcall
mov
jnp
test
repnz
dec
ret
xchg
ljmp
jmp
fwait
test
iret
mov
ret
mov
rolb
sti
popf
sbb
lahf
ss
adc
push
adc
or
inc
sti
push
addl
in
scas
or
pushf
call
cmp
xlat
lds
test
in
inc
aam
push
enter
pop
mov
adc
cmpl
imul
or
jnp
jmp
popf
mov
or
in
adc
test
out
cmpsl
sbb
adc
popf
lahf
dec
out
in
js
sub
cmp
ret
mov
test
test
lods
adc
std
pop
or
add
xchg
sbb
mov
lcall
les
sub
insl
push
testb
stos
pop
xchg
incl
push
xchg
mov
jecxz
or
pop
les
stos
insl
into
popf
sbb
jg
leave
inc
jno
in
xor
in
sahf
and
daa
test
test
dec
mov
ret
mov
sarl
jp
mov
mov
test
mov
dec
mov
sbbb
lods
lret
jge
lods
or
clc
mov
mov
orl
fwait
mov
sahf
orb
dec
in
jmp
sbb
or
jns
outsb
call
xchg
call
cwtl
sbb
scas
movsb
sub
shll
lret
test
ret
adc
sarb
sbb
pop
cmpsb
adc
adc
das
lock
mov
or
cmp
ret
sbb
xchg
cmp
xchg
pushf
ds
out
lret
sbb
sti
inc
push
push
and
cmp
and
pop
mov
iret
rorl
inc
filds
into
mov
sub
dec
mov
outsb
leave
push
bound
lcall
xchg
mov
bound
jbe
add
add
sbb
aad
or
into
int3
inc
mul
testl
test
pop
mov
daa
jmp
jbe
cmp
mov
ret
sbb
lcall
fsubrl
lahf
push
ret
adc
scas
mov
add
stc
test
push
lret
addl
lods
sub
cs
in
xchg
cmp
xor
sbb
sahf
fimull
push
mov
mov
mov
push
sti
test
inc
out
dec
arpl
or
loop
gs
push
or
inc
add
xchg
pop
push
push
aam
popf
cmp
jno
loop
inc
cmpsl
xchg
xor
mov
nop
cmp
or
mov
daa
pmulhuw
sbb
rcrl
xchg
push
pop
pusha
mov
popf
jmp
out
out
imul
stc
test
ljmp
mov
inc
es
cmpsb
leave
dec
cmp
repz
fs
dec
jmp
dec
mov
leave
movsb
inc
jg
lods
fcomps
pop
jnp
hlt
add
add
das
xchg
in
bound
jecxz
add
mov
sub
int3
mov
pop
ret
xchg
pop
adc
xchg
sub
in
cli
dec
lods
das
arpl
fst
cmp
add
xchg
into
jmp
aas
jg
sti
mov
shll
test
int3
adc
jb
xlat
add
pop
out
lods
ss
out
or
loop
adc
out
pop
sub
adc
adc
enter
dec
subb
dec
or
fcom
cmp
sbb
push
pop
add
add
xchg
addb
inc
es
jno
rolb
pop
add
sub
imull
mov
mov
jae
cmpl
in
dec
fwait
std
lea
xchg
js
pop
sahf
lods
lds
jns
movsl
cs
sbb
push
fs
push
jo
out
imul
sahf
jae
rcr
cmp
outsb
and
and
xorb
sbb
add
add
mov
jp
and
jecxz
fmull
inc
test
mov
adc
xor
inc
adc
mov
pop
inc
lahf
popa
add
sub
xchg
pop
add
subl
push
xchg
or
push
aas
movsb
jl
cld
cs
dec
adc
test
pop
mov
cmpsb
ret
sub
sti
xchg
jg
adc
xchg
stos
push
jp
push
push
xchg
aaa
ljmp
or
shrb
mov
arpl
addr16
mov
in
adcl
add
fcoml
daa
fwait
mov
stos
or
mov
add
rcll
add
notl
fcompl
or
in
push
in
repz
cmp
loope
lea
jl
loop
push
add
call
mov
popf
in
or
push
xor
dec
jnp
ss
stc
cs
adc
clc
push
rcr
xchg
xor
add
push
stos
or
test
int3
sti
cltd
sub
cmp
dec
mov
mov
mov
ljmp
and
add
jg
mov
addr16
jmp
shlb
push
out
mov
test
or
mov
mov
jae
mov
mov
sarb
xor
cmp
adc
mov
pop
push
mov
xchg
adc
mov
pop
xor
xchg
jecxz
ret
nop
fwait
xchg
sub
or
lock
push
sbb
sar
jb
outsb
fimull
xchg
js
mov
pop
ret
aam
movsb
sbb
fistpl
cmp
faddp
mov
dec
test
mov
xchg
push
xchg
sahf
in
adc
mov
jmp
cld
sbb
push
cmpsl
mul
insb
lret
or
sbb
jp
sti
inc
xor
and
push
fildll
inc
notl
out
jbe
or
repz
add
xchg
popa
jp
sub
loop
aam
ss
push
jmp
into
dec
lahf
pop
outsl
or
xor
mov
adc
push
fldcw
jp
popa
or
jle
xchg
jle
cld
dec
les
sbb
or
ss
mov
test
cmpb
add
aam
in
mov
js
inc
jg
fildll
dec
out
test
sti
subl
bound
sbb
cmpl
jge
sbb
sbb
xor
mov
xor
pop
sti
cwtl
out
insb
scas
js
dec
sbb
xchg
sbb
mov
xchg
add
mov
or
into
lret
or
ja
inc
test
insl
lods
pushl
inc
jmp
orl
jg
repnz
pop
inc
js
push
push
mov
testl
or
out
mov
push
mov
pop
inc
push
cmp
shlb
mov
jmp
mov
push
xor
jle
mov
shrb
mov
adc
add
jne
dec
dec
dec
jbe
test
mov
test
adc
add
loop
dec
jecxz
push
pop
and
stos
fwait
sub
cwtl
dec
test
xor
sbb
into
mov
in
add
cld
xchg
subl
loope
dec
sub
lea
adc
cmp
push
ljmp
cmp
mov
dec
ret
or
sub
imul
aaa
sahf
outsl
pop
or
movsb
addl
adcl
jl
shrb
xor
cmc
fisubrl
in
int
pop
in
stos
out
push
test
adc
cmc
dec
fdivrl
or
inc
fldl
push
outsl
mov
add
or
cltd
mov
and
pusha
mov
mov
jne
push
adc
push
xchg
mov
mov
ss
call
jle
jg
or
jle
lret
inc
mov
loop
aad
adc
clc
je
sahf
jg
jns
mov
inc
cmp
lcall
cwtl
add
enter
and
bts
inc
sub
ret
jne
sbb
call
ljmp
xlat
inc
pop
jnp
add
push
adc
push
pushf
dec
jl
enter
mov
popa
mov
ja
mov
inc
cmpsl
add
in
pop
xchg
fmulp
fisttpll
addr16
push
inc
pushw
add
add
or
stc
push
test
mov
lods
or
insb
sti
push
rolb
sbb
adc
push
scas
call
mov
cmpsl
imul
or
and
push
mov
aam
ret
sti
movsb
out
sub
ret
aaa
pusha
adc
adc
ss
bound
icebp
adc
ljmp
dec
lcall
inc
push
ret
cli
mov
dec
sub
lods
mov
fwait
cmpsl
cmpsl
enter
and
aaa
je
js
lret
add
or
jle
inc
sub
or
sub
icebp
mov
mov
add
push
add
fcomip
je
repz
xchg
cmp
xchg
mov
ds
mov
push
ret
push
push
jp
rcrb
enter
stos
xchg
jmp
push
cmpsb
lods
sar
jecxz
icebp
cmpsl
inc
int
aaa
mov
bound
inc
sub
mov
cmp
mov
stos
jle
mov
mov
fs
adc
call
xor
insl
sub
sti
daa
xchg
in
pop
mov
sahf
jnp
xchg
cmp
mov
push
or
das
sti
enter
cmp
in
mov
les
or
or
cmpsb
mov
add
mov
add
jae
mov
cmp
push
jnp
sti
pop
hlt
adc
mov
bound
aaa
inc
movb
test
out
loop
divl
mov
pushf
fwait
add
cmp
or
addr16
mov
rcrl
jle
push
inc
loop
test
add
mov
inc
inc
sbb
in
frstor
insl
pop
dec
push
mov
hlt
sub
add
les
jmp
sbb
xchg
mov
cmp
cltd
xchg
call
or
movsb
xchg
sub
sbb
pop
std
stos
sub
jl
jne
nop
mov
mov
lahf
and
scas
std
cmp
xchg
sbb
pop
rcll
sbb
xchg
adc
adc
or
mov
pop
mov
cmc
je
push
sbb
test
out
pusha
pop
xchg
pop
dec
outsl
sub
push
scas
fcoml
jb
sub
insl
cli
pop
stos
xchg
out
mov
sbb
adc
xchg
scas
daa
ljmp
dec
adc
nop
cmp
xchg
add
pop
test
add
pop
mov
ljmp
fiadds
sub
test
dec
mov
xchg
jmp
or
pop
mov
pop
shlb
jnp
cmpsl
out
sbb
addr16
sbb
ret
shlb
mov
jmp
outsl
add
push
xor
test
dec
clc
loope
fidivrl
push
enter
mov
inc
test
adc
and
xorl
sti
pop
fcmovb
lret
push
jnp
fldl
fsubrs
jno
or
xchg
push
add
test
adcl
popa
popf
scas
popf
sti
adc
mov
add
mov
les
lods
jb
xchg
xchg
xor
xor
pop
in
shrl
or
xchg
xor
dec
inc
in
pop
popf
into
fwait
push
mov
inc
xor
data16
lds
or
lock
push
xchg
cvtps2pd
test
stc
and
cmp
std
xchg
or
out
mov
aad
pop
sbb
jecxz
sahf
sbb
fwait
test
or
cmp
xchg
lea
jnp
push
xchg
stc
xchg
and
int3
aaa
pop
pop
je
mov
mov
cltd
leave
fdivr
ss
loop
enter
and
jns
or
roll
mov
adc
jne
stos
or
int3
push
push
stos
pop
xor
jge
cmp
sbb
mov
or
aas
cmpsl
xadd
outsl
sbb
scas
mov
popa
cmpsl
jg
add
in
arpl
andl
shrl
test
movsl
pop
xchg
mov
push
push
or
add
mov
xchg
xchg
cmp
mov
fistl
xchg
nop
pop
in
pop
stos
sub
stc
lahf
xor
movhps
aam
sbb
add
mov
or
test
cmpsb
outsl
mov
cld
jmp
adc
and
subl
je
pop
push
xchg
dec
orl
jmp
mov
bound
mov
addb
sbb
push
jmp
je
mov
push
imul
std
inc
xchg
imul
int3
enter
ss
inc
sti
aas
sub
movsl
movsb
dec
cmpsl
inc
sub
or
pushf
mov
add
push
int3
nop
cmp
mov
scas
lods
repnz
cwtl
fsubl
shr
out
leave
adc
rcr
push
mov
fadds
mov
pop
or
cld
pop
push
negb
insb
add
pop
mov
ljmp
cmp
push
sub
cs
call
adc
daa
pop
mov
push
stos
cld
xchg
outsb
dec
mov
add
dec
mov
push
and
mov
cld
subb
stos
gs
test
sub
out
adc
dec
test
int3
sbb
sbb
ljmp
cmpsb
mov
cwtl
imul
insb
bsr
and
sbb
imul
hlt
xor
sti
xchg
adc
or
hlt
mov
rcll
mov
orb
dec
test
push
cmp
jne
sbb
or
sbb
scas
sbb
add
hlt
pop
movsl
mov
ds
xor
or
daa
xor
leave
fdivl
movsb
xchg
loop
mov
inc
mov
clc
xor
sub
nop
sub
or
cwtl
jmp
jmp
add
pop
test
pop
mov
clc
xor
xchg
sbb
adc
stc
dec
mov
and
sub
sahf
jns
cmpsl
aam
push
add
mov
repz
or
xor
jns
pusha
mov
dec
cmpsl
out
ret
insl
xor
ficomps
les
dec
jge
sub
mov
sub
pop
movsl
mov
mov
or
xor
push
cwtl
leave
add
mov
xchg
xor
mov
xchg
pop
lahf
sti
push
out
idivb
cwtl
add
or
iret
repz
push
fucomi
je
xchg
test
jmp
sbb
sub
sahf
out
lahf
rcl
add
xchg
mov
cmpsb
sbb
xchg
pop
loopne
ljmp
insb
stos
fs
addl
lret
test
daa
movsl
in
addb
push
fdivrs
je
mov
loop
cmpsb
mov
lock
pop
ljmp
inc
test
push
and
or
mov
sub
cs
lret
ljmp
insb
jb
sub
pushl
sbb
call
lret
mov
jp
sbb
aas
or
cltd
xchg
mov
jmp
sub
push
mov
in
fisubl
add
or
xchg
push
pushf
or
insb
sub
dec
push
dec
mov
cmp
roll
insb
repz
sub
jecxz
adc
insb
adc
sbb
push
dec
adc
xchg
xchg
xchg
int3
push
adc
or
aaa
mov
and
pop
cmp
ljmp
pushf
xchg
or
mov
kandnw
xor
out
daa
push
push
fs
or
mov
or
jb
push
dec
pop
pop
dec
orl
out
add
fs
mov
es
sub
xchg
pop
arpl
sbb
js
and
repz
lds
xchg
inc
xchg
push
les
cwtl
jl
mov
xchg
js
ljmp
subl
sarb
push
mov
fnstcw
popf
sbb
mov
adc
dec
jno
sbb
inc
test
aad
mov
ret
inc
fidivs
jmp
mov
jbe
insl
rcrb
mov
mov
sub
pop
mov
lods
jmp
mov
mov
jmp
arpl
jns
push
enter
mov
sub
lcall
sub
imul
mov
push
xchg
sub
cmp
jb
addl
xchg
mov
std
lret
shrb
adc
adc
pusha
mov
mov
fiaddl
insl
out
je
subb
fsts
ret
sbb
cmp
mov
outsb
mov
movsb
sarb
or
push
lcall
jmp
add
bound
dec
stos
or
dec
lods
jns
mov
add
inc
adcl
mov
das
js
xchg
shl
push
call
clc
test
or
mov
nop
call
clc
inc
jg
mov
xorb
sbb
and
hlt
sti
xor
enter
adc
sahf
pop
jnp
ds
jns
adc
add
jl
dec
repz
popf
lret
les
and
clc
sbb
stc
lock
jmp
lret
xchg
gs
xchg
sbb
push
add
rorl
push
dec
dec
xorl
xlat
inc
xchg
add
addr16
insb
leave
push
dec
scas
lds
xchg
adc
pop
jp
insb
pop
outsb
cmp
jle
lret
or
fwait
loope
mov
xchg
jp
xor
stos
mov
push
add
mov
leave
jmp
fwait
dec
cmpsb
adc
cmpsl
jns
dec
rclb
inc
gs
xchg
lods
into
push
call
and
dec
dec
xor
adc
sti
dec
cmpsl
out
add
test
xchg
mov
mov
push
mov
andl
push
sub
dec
sahf
sbb
xlat
cltd
jle
enter
xchg
cmp
or
fisttps
and
test
inc
mov
jno
scas
pop
ret
jg
lods
ljmp
sub
mov
lret
xor
mov
mov
mov
mov
in
loopne
movups
popf
pop
mov
xchg
faddl
mov
and
movsb
push
mov
adcb
pop
push
sbb
ja
sar
imull
leave
loop
cmpsl
rcrb
push
icebp
or
ds
addr16
out
and
aad
xchg
sti
cltd
in
xchg
dec
sti
fstp
repnz
mov
xor
xor
icebp
pop
sti
jmp
push
add
pop
testl
push
js
adc
mov
jecxz
lds
adc
pop
cmpsb
jecxz
or
sub
push
adc
push
pop
inc
jnp
jmp
jnp
bound
out
out
dec
test
aas
call
or
aam
fldcw
sbb
lock
fldcw
xor
aam
fldcw
les
or
mov
out
sbb
sub
addr16
pop
dec
ret
imul
cld
adc
cwtl
cltd
sub
dec
mov
pop
jecxz
je
arpl
xchg
mov
lret
dec
fistpl
and
xor
sub
scas
and
divb
pop
ficomps
cmp
fiaddl
aam
test
adc
and
iret
mov
mov
sbb
imul
lret
int3
movb
orb
sub
jae
out
lret
insl
dec
fadd
fwait
inc
sbb
enter
fdivrs
js
mov
jo
ret
loopne
or
sub
jno
cmp
mov
scas
and
add
push
sbb
pop
push
sub
stos
cltd
ljmp
enter
pop
cld
les
push
mov
mov
pushf
add
inc
roll
imul
pop
push
test
loope
outsb
push
int3
ljmp
sahf
es
sub
cli
xchg
repnz
add
mov
in
add
mov
lret
jns
adc
and
loop
jle
add
sub
jle
dec
jg
and
add
inc
mov
inc
imul
xchg
addr16
mov
jne
pop
sbb
fldt
mov
jg
shr
jb
sbb
mov
movsl
mov
jecxz
and
iret
hlt
mov
add
pop
add
jnp
pop
add
rcll
sbb
mov
movsl
mov
arpl
mov
push
inc
fisubs
dec
rcrl
int3
xchg
add
mov
mov
or
test
mov
std
aaa
js
sbb
insb
dec
cmp
jecxz
lahf
imul
stos
ret
int3
out
mov
sbb
push
adc
ljmp
and
icebp
ss
inc
mov
sub
ja
adc
inc
andl
mov
pusha
lea
jg
sahf
push
add
jl
pop
add
cli
push
and
sbb
out
adc
cmpsb
int3
adc
dec
adc
jecxz
add
push
xchg
test
lods
les
fcoml
sbbb
pop
push
or
les
push
sub
or
add
add
je
ljmp
inc
add
test
shlb
lret
fadds
mov
adc
repz
xchg
out
shlb
and
call
lcall
cld
cmp
in
outsl
jae
jae
test
pop
jl
pusha
pop
fimull
negl
mov
ja
fdivrs
xchg
dec
pop
rcrb
jg
xchg
or
mov
mov
aaa
orl
scas
jg
daa
sub
lds
shl
mov
mov
mov
inc
stc
ds
sub
mov
out
push
repz
cs
sbb
sbb
dec
cltd
sbbb
lcall
adc
sbb
push
add
loop
cmpsb
mov
fwait
lret
mov
cmp
cmp
add
shr
ss
call
gs
or
adc
pop
les
in
pop
sarl
repnz
mov
les
mov
xchg
leave
ret
and
sbb
pusha
in
adc
std
pop
js
and
in
jecxz
and
jecxz
push
dec
insl
aad
nop
aad
call
sbb
inc
call
repnz
or
daa
scas
lret
test
stc
inc
and
shrb
in
call
nop
mov
xor
or
mov
pushf
inc
in
mov
popl
loop
cmp
push
in
stos
fld
std
pop
cmpsb
outsl
subb
in
xchg
loopne
scas
cmpsl
lock
repnz
mov
lret
jmp
pop
sbbb
xchg
cli
movsl
push
aas
or
outsl
inc
cmpsb
mov
mov
dec
push
jne
mov
mov
dec
sub
es
and
add
mov
mov
adc
xchg
test
adc
pop
jge
dec
jne
loope
jmp
lret
push
add
cli
test
fmull
add
inc
test
jmp
imul
lret
push
add
in
clc
hlt
push
sub
repnz
nop
ret
js
or
outsl
dec
lock
test
cli
jmp
enter
sti
loop
loope
sbb
push
add
lods
push
inc
inc
dec
or
call
mov
pop
test
daa
and
or
lcall
and
insl
xchg
les
repz
cmp
fdivrs
fs
dec
and
jnp
shl
out
mov
cmpsl
sahf
sub
mov
scas
inc
xor
push
ja
mov
or
js
mov
push
das
xchg
out
popf
cmp
mov
mov
scas
add
pushf
fwait
ja
cwtl
sahf
adc
or
cmp
arpl
sti
bound
inc
push
cmp
or
cmp
cwtl
dec
loope
cmpl
jo
adc
and
imul
fdivrl
xlat
mov
sti
loop
ljmp
fcmovnbe
in
cmp
leave
rolb
rcll
push
add
shlb
rclb
inc
sub
jp
stos
adc
test
sub
fildl
xchg
sarb
and
ds
xlat
inc
xorl
out
stos
aam
or
mov
mov
ret
pop
add
in
mov
cmpsb
flds
inc
andb
test
xor
aam
ret
out
pop
repz
loopne
scas
call
cld
outsb
faddl
jnp
or
ss
in
bound
push
les
sub
mov
mov
loope
push
int3
xchg
sub
jge
dec
push
sbb
add
xchg
leave
mov
mov
test
jnp
nop
ret
cmp
dec
xor
gs
and
imul
push
dec
mov
dec
out
data16
add
test
int
test
lret
test
imul
lcall
add
and
sub
add
subl
push
stc
hlt
hlt
or
add
insb
inc
and
add
out
sub
gs
cmc
mov
inc
push
imul
out
xorb
xor
push
inc
or
adc
ljmp
and
test
loop
add
fistl
lret
iret
lahf
add
xchg
es
test
mov
mov
mov
xchg
or
inc
inc
add
dec
aam
loope
cltd
arpl
out
int3
jmp
in
xchg
arpl
mov
xchg
jmp
in
out
mov
lods
insb
call
inc
pushf
aad
add
pop
xchg
roll
incl
pop
cwtl
out
popl
or
in
sub
jmp
inc
sahf
lock
lahf
jecxz
and
ljmp
jmp
cli
push
stos
test
xchg
dec
in
stos
and
jb
add
decl
pop
sbb
cld
aaa
test
or
sbb
cmp
std
cmove
dec
add
out
or
das
xchg
xor
cmp
jle
popa
call
les
dec
dec
or
out
cmp
pop
sbb
pushf
push
cmp
in
jbe
pop
xchg
mov
in
bound
sub
ja
test
lcall
test
aaa
mov
fisubs
fsubs
or
negb
pushf
enter
dec
in
test
adc
push
mov
repz
lahf
push
aam
mov
sub
mov
dec
test
fucomip
shl
popf
mov
mov
or
shll
jb
ja
or
lods
cmpsl
fisttps
out
call
mov
insb
sbb
out
loope
mov
push
mov
xor
ret
adc
repnz
mov
inc
sti
out
push
mov
xchg
mov
les
hlt
jmp
adc
movsl
gs
xchg
and
pop
pop
xorb
sbb
mov
stc
daa
idivl
mov
mov
push
mov
dec
es
sub
fwait
xchg
add
add
mov
fldt
in
repnz
fcoms
jmp
xchg
inc
pushl
sbb
sar
bound
sbb
add
lcall
nop
stos
pop
mov
std
ljmp
js
sbb
mov
sbbl
in
fsubr
inc
pushf
mov
cmpsb
mov
in
or
outsb
sub
or
in
or
arpl
jle
sbb
add
pop
add
loope
loop
sbb
in
inc
mov
push
mov
and
or
adc
test
sub
sti
xor
adc
xlat
testb
sbb
mov
in
adc
jl
and
or
loope
cltd
ds
outsb
les
js
pop
mov
sbb
sub
test
imul
stos
sbb
adc
push
adc
in
cmp
inc
lock
inc
adc
add
lcall
jp
adc
mov
dec
or
daa
mov
inc
pop
sub
dec
or
subb
and
outsb
in
arpl
les
addr16
jb
jge
test
lret
hlt
movsl
cltd
ja
inc
mov
mov
std
aad
add
sahf
cmp
in
stos
xchg
in
and
std
mov
or
push
dec
mov
bound
and
push
hlt
das
cmpsl
mov
push
add
and
xchg
cs
fucomip
jmp
out
and
mov
jle
lahf
and
popa
mov
sub
mov
call
leave
or
push
add
ljmp
ljmp
cmp
push
fnsetpm(287
jp
push
test
or
clc
inc
loop
sub
dec
inc
insb
sbb
addr16
xchg
cli
insb
lods
mov
add
jecxz
ret
stos
subb
pop
imulb
pop
pop
xor
ficoms
jno
sbb
icebp
loopne
mov
jmp
imul
jae
push
vmovups
mov
subl
int3
pop
add
gs
mov
sbbb
mov
sub
movsb
sbb
adc
imul
add
dec
ljmp
adc
test
sahf
xor
inc
push
scas
cld
sub
or
xchg
xchg
jnp
jmp
mov
fmuls
fidivs
push
lret
pop
or
mov
jl
push
repnz
lcall
push
or
enter
repz
or
mov
and
mov
shlb
adc
adc
fisubrl
jnp
inc
in
or
movsb
fiadds
inc
dec
test
inc
push
or
in
cmp
cli
cwtl
push
mov
push
divb
jl
lea
mov
push
lock
loop
pop
outsl
or
add
ret
sub
cmp
mov
adc
ret
inc
lods
loop
xchg
aam
mov
subb
mov
cld
sub
sbb
mov
add
mov
pusha
imul
or
fwait
lret
or
jno
mov
lods
sub
dec
arpl
pop
and
add
scas
imul
jle
sbb
stos
divb
daa
jnp
push
or
testl
add
add
in
add
xchg
cmp
sbb
add
pop
popf
sbb
dec
inc
sti
test
inc
out
inc
pop
adc
inc
jp
or
jnp
add
getsec
xor
addr16
in
pushf
sub
xor
ljmp
pop
subl
ja
sub
insb
pop
jecxz
adc
cmp
in
mov
mov
push
add
stos
inc
cmp
mov
inc
cmpsb
fidivs
fildl
jmp
movsl
push
popf
ss
xchg
cmc
sbb
stos
cmpsl
aad
cmp
mov
jmp
mov
mov
sub
daa
xchg
or
or
xchg
push
xabort
mov
cmc
inc
mov
and
call
push
pop
xchg
push
jle
push
lret
or
xchg
jp
mov
sbb
sahf
cmovb
or
push
inc
lds
xchg
loopne
aas
out
add
imul
int3
ljmp
js
test
out
ljmp
sub
sbb
lds
into
cli
sub
mov
bswap
adc
cmp
lock
or
rorl
lock
fstpl
jle
mov
int3
ret
sub
sub
jle
jge
cmpsl
lea
fildl
ss
adc
adc
cmp
mov
lds
ret
js
pop
jns
fdivrs
mov
lods
in
scas
push
ss
andl
fwait
sahf
pusha
mov
jecxz
xchg
psrld
sarl
cmp
and
push
or
sahf
xchg
xchg
ret
ljmp
in
xchg
out
sahf
repnz
sbb
sub
stos
sbb
popf
scas
stos
sbb
shr
xchg
and
or
adc
rclb
sub
and
pusha
xlat
mov
inc
sub
jns
ja
clc
aas
dec
pop
movl
les
jae
jl
and
insb
cmp
jo
push
lock
mov
gs
sub
in
roll
mov
add
xchg
out
gs
add
cli
fiadds
out
cmp
dec
and
or
fwait
inc
mov
sbb
clc
call
stos
mov
push
add
sub
push
addr16
add
mov
mov
xor
or
in
mov
jbe
shrl
or
push
decb
mov
dec
xor
out
seta
and
add
jbe
scas
or
sub
sbb
orl
repz
repnz
sbb
add
adc
sbb
inc
add
sbb
dec
mov
pushf
xchg
xor
sahf
mov
sub
adcl
rcr
lahf
movsb
inc
or
add
mov
pop
add
cmp
clc
or
xchg
lds
add
mov
xorb
scas
mov
imul
inc
les
cli
imul
aad
imul
dec
enter
testb
inc
sub
ret
test
ret
sub
inc
cmpb
es
mov
jp
out
xor
sahf
dec
xchg
pop
lret
pop
mov
jmp
sti
dec
ljmp
add
cli
cmp
adc
or
xor
ljmp
add
lea
fnstenv
loopne
fiadds
cli
lcall
adc
out
cmpsl
dec
add
add
incl
into
add
stos
lahf
rcrl
or
not
addb
push
rcrl
add
add
and
fmuls
or
daa
fidivs
sbbb
ret
cmpb
addl
nop
out
mov
cmp
pushf
xchg
int
enter
in
nop
push
rorb
xor
sub
rorl
nop
loopne
inc
cmp
mov
enter
mov
and
ret
push
fstpl
decl
pop
lods
sub
aad
sbb
xor
sub
ds
add
aas
xchg
inc
adcl
loop
push
ret
int
sub
add
dec
add
jne
es
or
stc
add
js
sub
xor
addb
inc
cli
dec
lods
pop
mov
loope
loop
or
add
cmp
mov
jne
shrb
sub
jmp
das
xor
mov
jae
or
ret
dec
or
orl
mov
mov
in
sarb
pusha
pop
xchg
or
xor
mov
xchg
adc
push
popa
lret
in
dec
pop
fdivl
mov
mov
arpl
in
or
push
lods
ret
js
pop
fisubs
call
pushf
push
mov
fwait
lret
pop
inc
adc
out
and
adc
fmull
xor
inc
add
pusha
not
lahf
add
test
xchg
mov
pop
inc
ret
mov
loopne
loopne
push
sbb
mov
out
dec
pop
dec
pop
imul
ja
sbb
add
lods
and
inc
sub
add
int
and
stos
cltd
sbb
pushf
jle
iret
mov
mov
cs
repnz
out
jecxz
xor
or
insl
xchg
movl
ss
dec
xchg
sub
sub
or
xlat
rorl
rcrl
or
sub
jne
xlat
mov
ret
and
adc
xchg
test
sti
mov
popf
test
shr
sub
lea
inc
sub
xchg
in
inc
pop
adc
xchg
cmpsb
or
mov
lret
adc
dec
mov
sub
jge
jb
cwtl
out
or
ret
push
fcompl
fisubrl
add
and
orl
ret
push
daa
fs
aad
xlat
int
or
pushf
or
movsb
push
dec
jmp
pop
pusha
test
add
pop
bound
push
call
cmpsb
shr
das
cmp
cmp
mov
icebp
add
jp
jecxz
mov
pop
mov
rorl
dec
pop
pop
rcr
adc
jecxz
dec
sbb
lods
test
mov
xor
pop
leave
jae
sbb
mov
nop
popa
cmp
jno
push
pop
xchg
adc
fsubrs
std
fs
fcmovnu
mov
pop
adc
and
or
pop
pop
add
sub
add
stos
and
cmp
xchg
xchg
or
mov
add
ds
sahf
mov
negl
push
ret
jmp
or
cli
mov
pop
jnp
add
lods
lret
add
adc
les
xor
and
in
cmpsb
ljmp
leave
pushf
pop
inc
subb
add
xlat
imul
adc
sub
pop
xchg
loopne
sub
dec
test
sahf
test
cltd
mov
xchg
and
shr
mov
adc
cmp
imul
pushf
bound
push
sbb
clc
sub
stos
dec
add
mov
popf
jo
add
imul
loopne
adc
lcall
scas
insb
dec
ljmp
in
pop
xor
out
or
insb
mov
inc
and
and
lret
mov
push
test
add
pop
enter
xorl
add
add
cmp
jns
ret
add
rolb
data16
test
jnp
cmp
std
pop
sub
fsubs
cwtl
dec
mov
aaa
scas
xchg
add
push
insb
imul
adc
pusha
jns
xchg
cmpsl
sbb
and
inc
clc
shrb
rolb
pusha
call
mov
fwait
inc
in
enter
insb
es
bound
fcompl
jl
faddl
jle
enter
sbb
add
adc
ds
dec
xor
lret
jne
jle
cmpsl
inc
pop
ret
pop
repnz
mov
adc
xor
xor
push
adc
push
repz
jno
cmpl
dec
jge
jmp
pushf
imulb
pop
xor
test
ficoml
ss
or
ljmp
adc
rcrb
jle
std
rcll
ljmp
sub
ret
into
mov
movsb
lret
add
mov
scas
cmpb
adc
push
pop
sub
pushf
jmp
dec
cmp
xor
repz
inc
bound
jge
push
je
mov
iret
aad
mov
inc
or
adc
jne
or
pop
adc
fdiv
cmp
int3
mov
push
add
adc
sub
insb
adc
sbb
out
pop
fidivrl
push
adc
pop
orb
in
push
test
sbb
cmpsb
call
addr16
or
mov
mov
idivl
stos
mov
repz
xorl
jbe
sbb
repz
adc
cmp
ret
or
movsb
scas
ljmp
sbb
dec
cwtl
or
ret
mov
cli
into
ret
bound
mov
cmp
repnz
lods
pop
addr16
insl
jecxz
xchg
push
adc
stos
push
sbb
clc
stos
lods
stos
rorb
rorb
out
lret
sbb
cwtl
or
fwait
movsb
cwtl
ljmp
sbb
fistl
push
sbb
add
mov
cmp
fistpl
pop
call
mov
push
cmp
lods
ret
mov
jecxz
xchg
into
xchg
out
jmp
push
ret
xlat
lret
cmp
inc
xlat
inc
pop
sbb
decl
jns
mov
cltd
movsl
add
adc
adc
dec
ljmp
cmp
xor
in
pop
adc
lock
jl
int
sbbb
lahf
mov
test
sti
xchg
pop
lds
jns
pop
or
adc
inc
add
in
ljmp
cld
lcall
negb
call
dec
test
or
inc
ljmp
in
mov
sti
ja
add
out
mov
sub
out
mov
nop
jl
sti
push
mov
dec
push
in
jge
pop
in
pop
test
add
inc
int3
sahf
mov
loopne
and
sar
fdivl
sti
scas
cmpsl
std
lret
stos
inc
mull
fnclex
sbb
arpl
lds
je
ret
xchg
and
jns
fstps
mov
cwtl
xor
add
ret
adc
cmp
sahf
xchg
cmpsl
cmp
clc
stos
pushf
test
in
add
cmp
cmpsl
mov
fsubrs
or
setp
incb
clc
dec
sbbl
std
cltd
rcr
stos
add
int
cmp
mov
dec
cmpsl
mov
xchg
xchg
and
push
test
cmp
loop
push
imul
add
ss
ret
push
fnstenv
mov
dec
aaa
push
fnstenv
adc
push
pop
out
insb
cmp
in
sbb
push
or
in
lret
fcomps
jne
adc
cmc
pushf
loop
andb
call
xchg
inc
movsb
pushf
sbb
loop
lret
adc
nop
xlat
scas
jmp
fsubr
fwait
ret
cmc
subb
xchg
jne
call
dec
and
nop
xchg
ljmp
add
orb
inc
repz
xor
xchg
nop
std
and
aad
insl
pop
rcrl
mov
sbb
add
mov
test
in
loop
sub
inc
shrl
andb
das
add
adc
jno
add
testb
pop
sbb
pop
shlb
dec
jl
fsubp
or
mov
sub
xchg
inc
jp
dec
test
rorb
add
outsb
mov
xchg
adcb
movsl
scas
popf
dec
xchg
mov
pop
adc
add
int
mov
pusha
xor
mov
cmpsb
mov
cwtl
sub
fnsave
sub
movsl
xor
imul
xchg
in
pop
ja
sbb
adc
loope
pop
cmc
pop
push
aaa
pop
fwait
pop
mov
mov
movsl
pop
sbb
sahf
imul
xchg
mov
push
or
cmpsl
mov
push
xchg
jmp
jg
push
int
or
gs
fs
rep
pop
loop
fidivl
loope
add
sub
adc
sub
inc
mov
and
lods
popf
out
pusha
mov
and
jae
aaa
std
add
cmp
aad
stc
cmp
dec
aam
jmp
movsl
adc
add
adcb
mov
xor
test
adc
sub
loopne
jle
rorb
sub
sbb
adc
sti
shl
push
es
faddl
pusha
add
orl
adc
adc
test
cmpsl
add
pusha
andb
pop
cmp
jmp
push
iret
jle
inc
in
ffree
xchg
cmp
dec
and
push
popf
ja
fcomps
sahf
shr
int
aaa
sbb
in
movsl
sub
cmp
mov
lea
add
or
loopne
in
gs
dec
inc
test
push
lods
test
test
push
ffreep
cmp
shll
mov
sbb
pop
mov
or
and
idivl
add
movsl
jnp
inc
jnp,pt
leave
movsl
gs
out
stos
mov
aam
clc
mov
dec
aam
aad
mov
imul
fwait
sub
mov
ret
inc
test
ljmp
shr
push
mov
fstl
icebp
ja
sbb
mov
test
xor
xorb
lret
xlat
add
ljmp
test
dec
sti
popf
or
pushf
fs
out
sbb
insb
lcall
sbb
xchg
sub
xchg
sbb
sbb
test
lret
xchg
enter
mov
fwait
test
push
inc
int3
sbb
add
repnz
sub
into
mov
push
clc
insb
jmp
inc
mov
dec
xchg
test
dec
imul
into
insb
pushf
xchg
jmp
icebp
dec
popf
sub
pop
hlt
sahf
add
sahf
jnp
xor
or
jnp
or
adc
sub
mov
and
sbb
and
outsb
js
mov
repz
jnp
and
andb
popf
ficompl
mov
mov
jecxz
loop
sbb
cmpsb
xchg
fsubr
jbe
aad
ljmp
aam
xor
into
dec
cmp
jg
fisubrs
sub
dec
mov
out
mov
subb
mov
add
aas
mov
movsl
sub
dec
cmp
xchg
cmp
aas
dec
sbb
mov
push
sub
aam
sbb
sahf
mov
cmp
pop
popf
pop
xchg
mov
xchg
mov
pop
xchg
jb
movsl
mov
sbb
test
adc
mov
jmp
int3
pop
int3
popf
mov
loop
test
sbb
popf
ret
jbe
inc
sbb
add
and
out
jns
dec
ret
dec
pop
or
fdivp
ret
into
mov
add
ds
xchg
or
mov
loope
mov
mov
in
sti
lret
outsb
xchg
mov
adc
pop
mov
hlt
call
xchg
mov
call
xor
jmp
test
sub
movsl
pushf
mov
sub
add
fnstenv
test
call
pop
jmp
add
and
jmp
fs
iret
dec
sub
sbb
scas
jnp
push
adc
movsl
lods
cmc
mov
dec
out
andb
movsb
mov
mov
mov
mov
cmp
cwtl
push
in
std
test
incl
xor
movsb
andb
shl
andb
pop
and
mulb
lahf
adc
adc
outsl
mov
inc
ljmp
loop
stos
iret
outsb
cld
push
mov
dec
popf
out
or
fmuls
pop
jmp
cmp
loop
shlb
xchg
add
scas
lcall
andb
xlat
xlat
or
sbb
pop
repz
or
out
push
inc
icebp
cmpsb
or
adc
cmp
mov
dec
jmp
push
cmp
jg
loop
pop
pop
inc
imul
lock
ja
sbb
or
test
and
add
xor
pop
add
inc
andb
mov
inc
add
mov
inc
jmp
lcall
inc
and
jmp
sbb
pop
xlat
pop
xchg
stc
or
add
ljmp
jge
cmpsl
jecxz
mov
pop
or
inc
push
xor
adc
int
pop
pop
dec
mov
cli
ja
xchg
daa
adc
les
fmul
cmp
xchg
addr16
or
add
dec
sahf
sbb
int3
inc
add
mov
ljmp
outsb
lods
pop
test
push
inc
sbb
fwait
xchg
fildl
fs
hlt
loopne
sahf
inc
call
xchg
shll
adc
loopne
cld
shlb
add
cmp
and
bound
push
mov
sbb
movsl
and
jle
test
mov
fisubl
dec
xchg
mov
rorl
sub
bound
scas
insb
dec
repz
fisubrs
jle
push
int
adc
scas
xchg
and
filds
sti
fsub
in
lods
lock
add
cli
adcl
cmpsl
aam
push
mov
rclb
or
insl
in
jge
sahf
jne
or
enter
ret
test
push
imul
lret
xlat
sbb
add
bound
pusha
in
sbb
pop
sbb
inc
xchg
sbb
xchg
scas
orb
sbb
lret
mov
fwait
shlb
mov
or
mov
pop
mov
out
add
xchg
shl
mov
or
jo
ljmp
pop
add
insb
test
dec
test
arpl
je
pop
sbb
rolb
inc
das
test
sbb
sti
push
pop
xor
lods
adc
lret
sbb
xchg
sub
lods
mov
arpl
out
test
incl
pop
mov
in
fistps
add
jge
dec
xchg
sbb
ret
mov
out
movsl
out
int3
add
xor
mov
test
jmp
add
fsub
xchg
fwait
or
push
mov
es
stc
push
inc
mov
push
pop
push
insb
mov
scas
rclb
loope
aam
gs
xor
pop
sbb
xchg
out
sub
enter
sbbb
pop
adc
lods
repz
push
rorb
aas
or
push
sub
mov
leave
scas
lret
sahf
lret
loopne
cmpl
repnz
jmp
jmp
or
or
call
leave
sarb
xchg
and
push
jmp
mov
aas
lret
repz
enter
loope
or
xchg
xor
fmuls
int3
jl
sub
or
add
add
lret
inc
arpl
push
push
lahf
xor
lock
cmc
inc
fs
test
cld
gs
sahf
add
iret
push
pop
adc
adc
mov
sub
pushf
dec
push
into
roll
pop
in
mov
mov
outsl
test
ljmp
aam
pop
and
cmpsl
mov
jmp
sarl
icebp
aam
in
orl
jp
add
and
pop
daa
nop
inc
sbb
and
dec
es
fs
lds
sub
cmpsl
xchg
mov
incb
mov
int3
test
repz
test
mov
pushf
les
mov
pushw
sub
push
cld
xchg
lea
imul
mov
add
mov
dec
imul
mov
or
cwtl
mov
or
insb
xchg
pop
enter
imul
mov
or
addb
int
xor
test
inc
dec
enter
subb
jg
dec
test
outsb
sbb
ficomps
call
ret
enter
push
pop
call
sbb
lcall
or
mov
ret
call
xchg
test
enter
adc
test
ljmp
jmp
fs
call
adc
xlat
xchg
insb
mov
loope
xchg
jle
adc
test
enter
ret
ljmp
call
add
jle
orb
imul
test
ret
ljmp
call
add
out
mov
pushf
les
mov
add
jg
call
test
or
pushf
les
sbb
sbbb
sbb
sbb
sbb
test
enter
or
pop
les
sbb
shlb
push
mov
pop
adc
call
pushf
mov
out
adc
push
sub
mov
call
jno
pop
inc
dec
fs
in
lret
xor
xchg
jb
or
call
pop
pop
dec
test
sahf
and
insl
stos
ljmp
adc
xchg
aam
jg
loop
cmp
lcall
lret
mov
pop
or
data16
enter
pusha
movsb
jp
hlt
mov
sbb
lods
lods
inc
push
and
inc
inc
xlat
or
repnz
pusha
movsl
sahf
adc
inc
fwait
xchg
inc
add
stos
loop
xor
mov
mov
test
mov
je
or
jge
adc
inc
fsubs
dec
cmp
sti
stos
cmpsb
out
pop
xchg
add
out
dec
or
add
cmpl
jns
in
rolb
push
push
repnz
adc
adc
int3
js
sub
nop
mov
or
mov
add
stos
xor
iret
or
cwtl
lock
or
lret
in
cld
hlt
xor
adc
mov
into
lcall
mov
movsl
inc
call
or
mov
leave
enter
int
and
pop
pop
test
jmp
lcall
sub
add
and
or
mov
loop
fmuls
pop
sub
enter
ljmp
pop
jmp
cmp
and
pop
sbb
popf
jne
rorb
pop
adc
add
dec
into
mov
pop
cld
pop
add
inc
jmp
inc
ljmp
imul
in
jecxz
inc
jecxz
or
xor
leave
inc
add
aam
fistpll
ret
subl
fcomps
jl
adc
test
cld
popf
xchg
pop
mov
sub
in
cltd
int3
aam
sbb
test
dec
or
stos
inc
add
je
sahf
cmp
leave
repz
or
das
imul
lcall
push
xor
lret
push
mov
fsubl
pusha
sti
mov
sub
mov
jmp
jnp
cmpsb
dec
int
ret
add
dec
adc
stc
lret
add
pop
test
stc
inc
inc
push
bound
stos
sahf
lahf
cld
sti
or
pop
cld
xlat
lods
push
lahf
sbb
push
mov
jg
mov
ret
adc
xor
adc
lret
add
pop
mov
jecxz
push
popa
or
cmp
faddl
std
add
xor
in
les
sbb
push
sbb
roll
add
sbb
fst
add
movd
adc
jg
inc
or
negl
dec
insb
adc
xchg
jno
or
cmpb
add
daa
xor
cld
inc
jg
and
mov
sub
push
xchg
xchg
sub
or
jne
xor
lods
push
in
mov
pop
clc
pop
std
or
aam
adc
mov
jnp
adcl
and
mov
gs
dec
push
sbb
ds
xchg
jecxz
adc
pop
jg
mov
hlt
daa
lock
jge
or
shrb
cmp
lret
orb
dec
fmul
mov
shr
mov
adc
ret
adc
xchg
pavgw
stos
lret
inc
jl
sbb
lods
mov
add
or
test
sahf
dec
repnz
jecxz
lods
mov
and
add
mov
lret
dec
test
mov
mov
lcall
pop
and
ret
out
lock
ja
lock
repz
lods
jno
jno
sahf
fbstp
jbe
cmpsl
jmp
call
adc
sbb
push
mov
fwait
mov
orb
inc
repz
ret
inc
mov
pop
mov
cld
push
or
xor
mov
shlb
pop
stc
jecxz
repz
adc
xor
and
mov
pop
adc
mov
in
das
and
ret
push
xchg
jae
mov
pop
hlt
insb
int
lea
hlt
and
pop
lea
lcall
cmp
jb
add
ja
dec
sub
cmp
std
add
aaa
mov
cmp
mov
insl
sbb
pop
popfw
arpl
das
or
add
in
lret
sbb
into
test
test
in
addr16
movsl
adc
stc
push
in
mov
icebp
cmpsb
sbbl
add
jne
xchg
and
pop
sbb
mov
popf
push
les
leave
jge
in
jnp
movb
fsubs
push
push
pushf
cmp
les
movsb
ja
jge
and
pop
or
cmpsl
sahf
test
sub
rcrl
push
fldl2t
inc
add
mov
ds
cld
mov
sub
mov
dec
mov
loopne
adc
cmp
xchg
inc
xor
mov
in
outsb
or
xchg
cmc
adcl
mov
movsb
cmpsl
imul
imul
pop
pop
push
pop
or
mov
inc
and
call
or
std
insb
out
or
cmp
adc
inc
sbb
ficomps
push
mov
pop
stc
rorl
mov
adc
or
pop
dec
pop
loopne
ljmp
in
sub
pushf
repz
mov
add
push
test
xor
repz
adc
push
scas
icebp
or
push
rcl
adc
movsb
out
jp
cmp
jns
sub
xchg
or
imul
jl
mov
and
xchg
pushf
mov
iret
aam
mov
adc
xor
add
or
fs
or
dec
les
cmp
push
push
cmp
js
test
push
outsb
jecxz
xorl
mov
mov
add
sbb
pushf
popa
or
in
mov
and
clc
lcall
dec
push
repnz
xor
roll
lahf
test
out
call
add
out
data16
cmp
ret
test
sub
push
outsb
shll
test
ljmp
ljmp
mov
int3
scas
jnp
cmpsl
jne
stos
jb
iret
cmp
add
cmpsl
daa
inc
pop
shl
xor
sahf
js
mov
pop
ds
lret
movsb
add
pop
addl
pushf
movsl
stos
orl
outsl
mov
cmp
mov
jl
dec
cmc
loope
scas
sbb
push
clc
jp
aas
mov
push
xlat
pop
cld
or
iret
ret
outsb
sbb
lahf
jecxz
or
lahf
xor
adc
mov
or
xlat
xchg
imul
iret
or
popl
xor
outsl
mov
or
sub
add
rorl
pushf
or
xor
pop
addr16
data16
mov
lahf
stos
mov
mov
pop
mov
sahf
sbb
sbb
xchg
dec
fwait
testb
sahf
mov
adc
mov
or
jnp
cli
insb
mov
in
aas
leave
adc
jmp
push
out
mov
push
daa
xor
popf
dec
lds
aam
out
sarb
or
dec
aam
xor
inc
and
and
sbb
cltd
jbe
sarb
inc
cmp
imul
add
imul
mov
adc
decb
or
rolb
insb
inc
inc
pop
add
movsl
into
jge
pushf
in
mov
mov
sarb
jp
sahf
xor
lods
jb
daa
aam
push
mov
or
ljmp
stc
or
or
or
push
or
repz
or
jmp
iret
movsl
pop
adc
jb
mov
test
fildl
push
frstor
inc
repz
dec
jns
movsl
clc
mov
mov
dec
lods
xor
mov
call
push
outsb
pop
sub
int3
fdivrp
jne
mov
pop
ljmp
cmpsl
mov
fstl
sub
jnp
or
rolb
shlb
dec
scas
ss
insb
cmp
pop
jg
repz
inc
mov
pop
es
orl
movsb
push
and
push
jmp
xor
bound
xchg
test
jne
mov
add
addb
stos
add
int3
loope
pop
sbb
lods
xchg
pop
movsl
stos
push
xchg
jns
sub
cmpsl
push
in
pop
fdivl
sub
orl
imul
pop
or
stos
cmpsl
dec
add
hlt
mov
mov
ficoms
xchg
std
pushf
sahf
cmp
mov
sub
ret
xchg
pop
outsb
mov
cmc
or
call
add
gs
xor
or
xorb
test
add
jb
pop
out
xor
cmpsb
jecxz
iret
inc
lret
outsl
pop
ret
sbb
and
dec
hlt
adc
or
push
cmpb
repz
shrl
shll
mov
jecxz
out
dec
mov
out
movsl
and
adc
inc
adc
addl
jp
das
sbb
out
pop
or
adc
ret
test
loop
jnp
jb
mov
mov
mov
dec
mov
sub
cwtl
ja
ret
cmp
repz
repnz
or
movsb
adc
repnz
pop
jp
mov
add
insl
ret
out
mov
movsb
leave
call
mov
gs
loope
shll
outsl
jge
outsl
sbb
je
adc
into
sbb
int3
xorl
pop
mov
adc
xchg
mov
ja
mov
and
mov
insl
hlt
xor
and
or
test
push
bound
mov
stc
mov
adc
jmp
loop
mov
push
mov
inc
ror
enter
test
or
je
cmpsl
jae
stc
jecxz
cmp
inc
add
stos
xchg
enter
in
sahf
out
lea
inc
and
mov
daa
hlt
or
into
call
inc
jo
mov
and
rorb
shlb
bound
fsubr
inc
lret
mov
inc
or
cltd
test
jnp
or
adc
push
jne
jo,pn
pop
mov
ret
imul
inc
pushf
sbb
and
inc
mov
sub
adc
mov
clc
insl
mov
sub
inc
imul
sub
adc
aad
outsb
jmp
inc
andb
jecxz
jae
or
inc
addr16
in
and
inc
adc
sub
or
dec
inc
cmp
in
push
dec
lcall
sti
or
pop
jae
and
mov
inc
daa
int3
xchg
xchg
fisubl
xor
pop
mov
push
outsb
lock
ljmp
and
mov
sub
pushf
mov
dec
jge
sti
imul
ret
jp
sbb
or
movsl
test
xchg
push
sbb
lret
dec
sub
add
jg
call
call
pop
mov
in
or
mov
or
popf
mov
fwait
test
cmc
ja
fdivs
dec
jno
add
jb
roll
mov
cmp
lods
dec
jae
insl
jecxz
scas
iret
ret
xor
enter
add
add
mov
rorl
sahf
or
and
sbb
sbb
sbb
test
add
adc
add
dec
jle
sub
outsb
dec
dec
sub
jle
push
cmp
mov
sub
pusha
or
loop
or
xchg
cmpsl
out
and
lods
dec
mov
sub
test
icebp
popa
or
rcrb
mov
int3
ret
adc
fdivrs
pop
sbb
rclb
dec
and
add
in
lret
in
or
cwtl
lcall
test
xchg
push
xchg
aam
sub
insb
mov
in
or
gs
cmp
xchg
inc
loop
jmp
mov
inc
xor
mov
test
add
xchg
out
jbe
mov
pop
shll
lods
mov
mov
mov
lret
rorb
stc
in
iret
push
call
xor
movsl
out
subb
cmp
test
cld
rcll
add
jb
fsubrl
lea
pusha
mov
sbb
mov
lods
adc
adc
daa
inc
aam
cmp
movsb
jecxz
and
movl
arpl
movsl
cmp
dec
adc
cmp
loope
test
mov
jno
gs
leave
in
shll
lods
cs
jne
je
int3
mov
insl
lock
fisubrl
jmp
inc
mov
pop
xchg
push
test
lods
insb
inc
mov
sbb
jmp
bound
jp
cli
or
adc
xor
add
jg
xchg
and
sahf
mov
in
inc
jae
cmp
movsb
mov
movb
add
xor
js
jo
jmp
popa
clc
mov
mov
or
je
or
dec
or
hlt
jge
sti
mov
or
stos
mov
push
fiaddl
orb
ret
jno
mov
cli
cltd
jo
mov
mov
mov
xor
jecxz
test
outsb
xor
jno
ret
push
outsl
arpl
jne
mov
inc
call
out
outsl
daa
stos
hlt
and
lahf
bound
fstpl
sub
int3
cmpsb
dec
mov
xor
mov
scas
ljmp
lods
out
inc
jns
pop
or
insb
mov
mov
lods
or
sahf
mov
das
arpl
mov
xchg
mov
inc
mov
and
cmpsb
gs
adc
and
adc
push
insb
ds
cmp
call
insl
mov
movsl
outsb
out
popa
sbb
and
cmp
lods
movsb
scas
icebp
jnp
pop
fwait
scas
sbb
pop
sbb
pop
int
fcmovu
xor
scas
sub
sti
outsb
mov
imul
sti
aaa
fsubr
mov
fsubp
cmpsl
insb
cli
pop
lea
dec
jmp
sahf
test
mov
aam
sub
cmp
sub
mov
jmp
adc
loop
shrl
adc
js
xor
cmc
cmp
inc
mov
les
out
test
push
push
ja
jbe
outsl
jmp
mov
add
inc
mov
add
jmp
cmp
in
mov
mov
inc
xchg
gs
stos
pop
pop
mov
dec
and
clc
arpl
scas
pop
xor
ret
push
or
adcb
add
dec
iret
adc
cmp
push
mov
add
repnz
test
popa
fs
cmp
adc
or
insl
push
cmc
cmp
mov
mov
lock
sti
sahf
cli
test
int
mov
dec
mov
rorb
sbb
fnstcw
and
xchg
sahf
mov
pop
and
mov
sbb
fadds
cs
int3
add
fidivs
imul
and
in
sub
add
int
jns
and
or
mov
int3
pusha
sub
adc
xlat
pusha
add
mov
das
stos
enter
bound
addr16
push
mov
mov
fsubr
sbb
push
cmp
out
test
or
ljmp
and
jne
and
mov
shrl
push
and
or
fisttpll
in
bound
add
push
sbb
jg
mov
or
stc
insb
sub
ret
fcmovnb
lcall
das
jno
fadds
fists
fisttpll
inc
xchg
mov
out
or
rcll
daa
xchg
jle
pushf
std
test
icebp
cmpsb
sbb
jmp
cmp
push
leave
scas
add
iret
inc
adc
fadds
js
fwait
lods
scas
sarb
or
rcrb
mov
or
or
adc
cmpsb
mov
push
out
mov
int
jno
adc
bound
call
xor
inc
clc
adc
into
out
cmp
arpl
sub
leave
jno
inc
test
dec
inc
out
mov
jb
orb
rorb
jl
mov
mov
insb
jbe
dec
addb
mov
orb
jae
lahf
inc
cmpsb
mov
pop
add
pushf
int
mov
or
jecxz
sbbl
bound
shlb
or
jle
or
add
out
pop
es
iret
sbb
sub
push
push
lea
jle
into
mov
pop
rolb
add
mov
aaa
or
outsl
add
cli
jne
pop
adc
inc
inc
adc
out
inc
out
mov
out
dec
pop
mov
fildl
mov
push
frstor
in
pop
daa
dec
jno
jge
imul
fdivrl
sub
mov
xchg
daa
outsl
sbb
cmc
sbb
and
lret
addr16
pop
cld
mov
mov
stos
cmpsb
xchg
or
movsb
sbb
and
andps
push
mov
pop
test
push
sti
or
mov
aam
jnp
or
push
mov
jecxz
add
scas
imul
push
adc
inc
in
pop
adc
mov
jnp
adc
pop
por
jae
cmc
rcrb
cmp
int3
push
dec
xchg
lret
call
les
dec
push
add
loopne
or
push
or
lret
fnstenv
push
test
sbb
outsl
fs
iret
sbbb
outsb
fisubrs
dec
repz
in
cmp
adc
imul
fisttps
insb
call
adc
fbstp
loope
int3
push
int
push
or
inc
movsb
jle
add
push
dec
pop
fldenv
rolb
xchg
cmp
test
or
sub
pushf
out
sub
xchg
out
dec
lret
pop
adc
pop
mov
insb
lret
iret
in
in
in
sbbb
pop
mov
stos
movsb
adc
or
fcomps
test
dec
add
mov
pop
pushf
cmp
jmp
std
add
in
or
mov
cmp
mov
dec
popf
movsb
pushf
sbb
movsb
sbb
lcall
fistpl
adc
mov
mov
adc
cmp
pop
movsb
adc
xchg
sbb
pushf
pop
xchg
fimuls
push
bnd
subb
dec
bswap
jmp
push
stos
into
add
out
add
adc
nop
testl
call
int3
add
mov
mov
sbb
sbb
xchg
or
mov
or
enter
mov
dec
xchg
sub
adc
push
dec
mov
pop
das
xor
add
cmpsb
cmpl
and
pop
in
sbbb
testl
in
outsl
sbb
mov
mov
test
popa
adc
adc
ja
std
or
xchg
std
sbb
ljmp
dec
test
cmp
test
jecxz
repnz
fadds
movsl
test
imul
add
jb
or
lods
jmp
xchg
and
jns
jecxz
add
add
mov
lods
arpl
pop
push
xchg
dec
mov
aam
stos
addr16
mov
xchg
jb
imul
jle
enter
mov
and
push
fwait
insb
inc
and
arpl
inc
lret
xor
adc
mov
sbb
shlb
outsb
cwtl
mov
aam
ljmp
xchg
sub
or
sub
mov
or
sbb
push
iret
dec
pushf
and
test
sbb
ficoms
mov
inc
push
push
test
sbb
adc
nop
or
jns
adc
pop
cmc
jns
nop
mov
imul
orl
call
stos
nop
or
jmp
lret
imul
pop
call
adc
nop
push
movb
and
test
sbb
pushf
push
mov
push
sti
and
movsl
mov
adc
ja
add
jno
or
out
xchg
cld
clc
mov
enter
out
mov
pusha
mov
adc
int3
adc
lods
cmp
mov
fstps
mov
aam
and
rcrl
mov
pop
ja
or
fcoml
pop
fldt
mov
pushf
jmp
cs
xchg
or
mov
movsb
sbb
andl
mov
adc
or
pop
and
andb
jle
test
out
addr16
pusha
in
push
in
mov
and
repz
es
mov
xor
fiadds
xchg
inc
stos
pushf
mov
add
lods
or
sub
lret
stos
jl
adc
push
dec
dec
cmp
loopne
popf
mov
xchg
sarb
mov
pushf
push
scas
sbb
bound
cmpsb
or
cmpsl
jnp
in
and
mov
xor
aaa
aaa
mov
add
mov
xor
loop
add
pusha
jl
addr16
mov
push
jp
out
xor
mov
jecxz
dec
std
hlt
mov
jp
mov
ja
sti
add
cmp
out
xchg
xchg
pop
and
hlt
pop
adc
in
out
add
jl
ss
fs
push
push
stc
mov
xchg
ret
adc
push
mov
cmp
add
xchg
movsl
adc
adc
mov
cs
or
xchg
push
lret
test
ret
xchg
or
inc
hlt
out
xor
or
mov
adc
loopne
mov
andl
cmpb
add
or
or
dec
fs
or
sbb
inc
fs
add
push
pushf
fs
lock
push
out
inc
mov
add
and
push
and
ret
dec
and
aad
int
add
ljmp
fucomip
leave
stos
add
ds
inc
sti
sub
add
sar
sahf
ds
xor
sahf
pusha
dec
loope
xchg
pop
adc
lods
les
add
jnp
xchg
pushf
adc
mov
nop
rcrb
popf
fbstp
icebp
nop
inc
adc
push
nop
pop
add
mov
pop
leave
out
dec
mov
test
ret
xor
mov
lahf
adc
addr16
or
test
lret
out
movsb
pushf
in
daa
push
add
sub
addr16
push
jnp
and
jp
jae
mov
je
decb
mov
mov
and
jle
sub
sbb
stos
shlb
or
scas
cwtl
cld
test
sub
and
sub
sysenter
insb
or
adc
ss
sub
and
inc
push
xchg
inc
sub
mov
jge
repnz
insl
xor
mov
pop
jmp
ret
add
sub
or
ret
ljmp
push
mov
mov
xchg
xchg
jecxz
xlat
stos
movsb
mov
xor
pop
xchg
ss
rol
mov
inc
imul
cwtl
call
mov
push
data16
ljmp
cmpl
cwtl
add
sbb
data16
sbb
mov
cmp
lret
ljmp
std
cwtl
mov
sbb
sbb
mov
mov
cmpsl
add
call
shrb
cwtl
enter
mov
push
ljmp
aaa
and
in
in
push
sub
adc
push
popa
cltd
or
orl
sub
mov
mov
fisttpl
mov
movsb
push
orb
xor
add
mov
andb
push
ret
daa
dec
mov
repz
mov
cmc
push
rorl
push
push
scas
roll
or
cs
stc
push
and
jnp
mov
jg
cmp
pushf
cmp
ljmp
int3
pushf
popa
call
add
jo
xchg
lea
jl
jp
xor
mov
mov
add
test
or
cmpsb
mov
mov
movl
out
jle
xor
enter
icebp
fs
mov
div
xchg
aaa
imul
arpl
mov
hlt
pop
daa
mov
dec
mov
ds
dec
clc
cmpsb
mov
scas
imul
cwtl
jae
daa
xchg
lahf
lret
add
sbb
pop
dec
loop
pushf
cld
push
add
mov
test
pusha
and
inc
dec
mov
insb
mov
lods
cld
or
or
movsl
shlb
mov
dec
out
movsb
loop
fdivl
cwtl
jl
repz
imul
adc
mov
or
jge
sbb
in
repnz
mov
jb
or
and
and
lcall
push
les
or
incl
mov
inc
jl
bound
jno
mov
test
sub
xchg
xchg
dec
xchg
xor
sbbl
push
or
dec
sbb
cmp
mov
js
sub
jle
lret
mov
mov
out
icebp
lods
dec
push
rol
lret
mov
mov
add
cwtl
out
mov
lret
xchg
inc
and
out
mov
or
sbb
sbb
or
pop
dec
mov
lods
out
add
or
dec
jmp
mov
mov
rclb
inc
or
movsb
push
lret
test
xchg
pushf
stos
pop
cmpsb
mov
daa
xor
jo
sahf
cmp
cmp
psllq
dec
inc
fs
mov
xchg
mov
sbb
xchg
int3
jo
test
in
mov
cmp
sub
adc
push
clc
adc
xchg
mov
or
adc
xchg
mov
push
sbb
or
and
hlt
scas
mov
inc
push
inc
pop
imul
cltd
repz
lods
rorb
fdivr
mov
rolb
movsl
adc
jnp
fmull
pop
or
xor
int
ret
enter
push
add
add
push
jne
in
or
add
out
push
or
inc
jg
mov
stc
mov
mov
mov
insl
stos
mov
cmp
xor
mov
mov
and
dec
repz
cwtl
call
je
jg
push
mov
ds
jno
sub
popa
shrl
sub
cld
scas
or
jge
das
loop
fwait
lahf
clc
fs
mov
call
js
sbb
int
jp
jl
and
je
call
daa
addr16
cmp
jp
mov
enter
adc
pop
inc
mov
jl
fstpt
cmpl
aam
test
cwtl
mov
insb
push
adc
mov
lret
sbb
stos
push
inc
int
loop
jne
mov
pusha
jo
mov
cmpsl
in
sub
or
sub
xchg
imul
adc
insb
stc
sub
jmp
int3
mov
dec
addr16
pop
dec
scas
mov
loop
mov
xchg
sub
add
mov
pop
push
mov
sbb
add
scas
sub
jp
mov
xor
mov
test
lea
das
mov
in
bswap
jmp
or
or
xchg
or
xchg
test
mov
add
sbb
loopne
jb
mov
adc
push
jmp
or
jne
cld
fcmovne
cltd
mov
test
bswap
lea
or
test
sti
xor
dec
ror
sbb
jmp
mov
adc
sti
stc
icebp
call
scas
adcl
xchg
ljmp
sti
sub
push
jmp
push
sbb
xchg
loopne
cmc
xor
cmpsl
fistpll
cli
adc
rcll
jne
xchg
jle
mov
ljmp
sub
loope
jmp
mov
mov
inc
data16
mov
mov
incb
mov
mov
jp
xor
xchg
mov
push
loop
xor
pop
dec
inc
push
xchg
insl
and
pusha
outsb
jl
cmp
mov
mov
sbb
ret
les
ret
stos
mov
icebp
mov
mov
or
in
push
mov
nop
dec
fimuls
mov
or
pop
mov
push
fucom
sub
cmpsl
adc
mov
popa
lock
stos
push
movb
nop
mov
out
push
enter
inc
mov
iret
mov
sbb
adc
push
leave
shl
pop
mov
movsl
fstl
sub
aaa
pop
sbb
jp
dec
call
inc
mov
or
xchg
add
push
das
mov
lock
lea
add
cmp
push
mov
ds
adc
insb
jle
adc
fimull
sbb
adcb
dec
subl
jg
push
lcall
fstpt
mov
adc
inc
ljmp
sbb
lea
pop
adc
push
xor
out
sub
popl
test
aam
adcb
sbb
jp
popa
orb
mov
and
dec
fmull
or
clc
jbe
aad
dec
imul
and
jne
push
or
pushf
in
ret
mov
insb
leave
insl
rorl
jo
pop
jnp
cli
sbb
cld
inc
inc
btsl
mov
and
stos
stos
cld
xor
add
int3
xchg
fwait
pusha
xchg
inc
daa
jle
push
mov
imul
or
mov
call
jle
fsubrs
sbb
xchg
push
test
xchg
jmp
pop
sbb
aaa
jmp
loope
std
jp
das
hlt
xor
jmp
and
push
mov
adc
mov
cmp
or
shlb
and
pop
imul
fwait
out
dec
rorl
jae
inc
call
aaa
out
pop
or
mov
adc
mov
or
sub
mov
adcb
pushf
sahf
jae
push
adc
xchg
lea
jle
test
xchg
cmp
adc
data16
xchg
fists
sarl
cltd
push
sbb
pop
mov
push
movsl
aaa
adc
add
enter
fsub
ljmp
test
pop
fldl
mov
jge
fldcw
int3
sbb
xchg
jle
pop
cmp
jbe
cli
sbb
lret
idiv
decb
mov
imul
loope
xchg
iret
movsl
or
ret
or
mov
inc
mov
adc
xor
xor
pushf
xlat
or
sahf
sub
mov
cmp
stos
adc
add
jnp
inc
xchg
scas
iret
xorl
testl
jnp
xchg
jmp
add
sbb
roll
dec
dec
or
sub
sbb
cmp
jmp
mov
adc
inc
les
adcb
bound
push
lahf
stc
mov
test
sub
xchg
add
or
bound
and
pop
push
fisubs
adc
jns
das
pop
test
or
sub
rcrl
mov
je
mov
cmpsb
lds
mov
xchg
test
adc
mov
sub
mov
pop
fwait
inc
pop
out
call
dec
inc
testl
mov
xchg
mov
adc
adc
iret
andb
sti
fsubl
daa
das
xor
sbb
hlt
iret
or
rolb
ret
xor
jno
jle
in
inc
or
cmpsl
lcall
push
fs
mov
mov
pop
mov
fcompl
sbbb
xor
sahf
or
sti
or
es
mov
pusha
dec
je
and
out
sbb
cli
jnp
fdivl
mov
pop
sub
adc
jp
mov
test
not
imul
inc
ret
add
push
push
push
inc
lods
mov
pushf
bound
and
daa
mov
js
cwtl
lret
mov
push
insb
mov
mov
mov
cmpsb
jmp
ljmp
out
nop
adc
mov
xchg
mov
cmp
addr16
bound
or
rcl
repz
outsb
inc
sub
add
repnz
dec
movsl
mov
push
mov
mov
pop
xchg
notl
repz
jmp
push
add
pushf
test
pushf
adcb
sbb
ret
insb
mov
jecxz
xchg
sub
jo
xchg
scas
xor
mov
mov
clc
cwtl
pop
mov
add
jmp
lahf
les
les
lods
push
fisubl
lcall
cld
dec
subl
rorb
jo
enter
mov
cmp
fsubrs
cmp
test
rorl
in
push
cmpsl
sbb
insl
ror
add
fmul
lret
inc
fists
add
or
out
sub
mov
dec
hlt
subb
dec
lea
insb
mov
ret
sub
jl
sub
or
mov
stc
ret
fwait
sub
out
out
jmp
push
jb
pushf
mov
cmp
arpl
jge
pop
add
sbbb
dec
add
nop
rcrb
adc
out
lock
pop
jmp
inc
sbb
cmp
bound
outsl
sarl
mov
scas
popl
xchg
aaa
cmc
enter
shll
inc
js
or
or
call
dec
or
and
and
xor
jmp
out
inc
dec
add
hlt
mov
mov
stos
add
test
mov
fs
or
inc
pop
push
pop
inc
mov
lret
add
mov
push
fcmovne
aas
stos
cmp
or
jb
push
jl
arpl
xchg
sahf
jmp
and
es
jle
mov
sbb
loop
cmp
add
jmp
repnz
or
adc
or
push
ljmp
cmp
aam
filds
mov
popf
in
les
adc
mov
jne
sub
fcoms
test
out
sbb
mov
or
in
jge
js
xchg
push
push
lea
pop
add
ret
sub
repnz
fsubrs
jne
mov
dec
pop
hlt
xlat
mov
shl
sbb
add
stos
scas
mov
pop
push
imul
adc
pop
and
jnp
inc
lret
mov
insb
sahf
icebp
jnp
lret
stos
fldenv
cmpb
out
pop
pop
dec
jg
sbb
adc
mov
push
sub
sub
add
xor
lock
sti
sub
mov
xor
cwtl
mov
or
or
mov
mov
add
inc
adc
xor
jecxz
add
andb
mov
xor
out
fmuls
mov
mov
stos
nop
pop
leave
mov
aad
cmp
dec
jge
scas
int3
jae
xor
les
subb
sti
stc
fstl
add
add
mov
lea
shrl
push
aam
pop
jmp
xchg
jl
and
in
or
jns
sahf
and
loopne
jno
scas
or
shrl
sti
fisttpl
mov
xchg
mov
bound
daa
or
lret
push
fcomip
or
cmp
jo
jno
or
cmp
xchg
lcall
rorb
push
fdivp
push
loop
jnp
and
xor
jmp
or
add
ret
mov
adc
xchg
xchg
js
cmp
test
test
ja
adc
and
mov
xchg
cli
test
daa
cmp
scas
movsb
bound
or
cmpsl
outsl
push
add
add
pushf
addb
mov
mov
cmpsb
movsl
fistpl
loopne
xor
mov
je
pop
clc
pop
sbb
pop
out
inc
bound
clc
adc
and
jle
or
or
stc
lods
lds
jbe
xchg
pop
aam
insb
loope
icebp
sub
call
add
sub
punpckhdq
mov
insb
stc
lods
sarb
in
or
xchg
xor
cmp
adc
adc
mov
cmp
and
sbb
mov
and
adc
pop
sub
lea
mov
sub
xchg
pop
leave
dec
and
jb
xor
push
mov
call
adc
xchg
dec
dec
jge
pop
push
sbb
push
rcll
sbb
das
out
jle
enter
push
or
or
jmp
pop
add
loopne
mov
sub
jg
or
sbb
in
jle
xor
sbbb
mov
or
pop
in
mov
jmp
adc
sub
popa
loope
int3
jns
int3
jge
and
shlb
mov
push
push
adc
mov
hlt
das
lods
cmpsl
rcrl
pop
addr16
push
and
mov
jmp
jb
ja
arpl
cmp
inc
ret
imul
test
out
daa
fstl
test
dec
jl
mov
sbb
fildl
dec
rorb
fsubr
scas
or
aas
mov
movsl
das
popf
scas
or
popa
dec
fcmove
or
out
enter
adcl
addr16
mov
xchg
lahf
popa
adc
movsb
jns
subb
push
les
out
rolb
jb
xchg
inc
add
mov
icebp
inc
daa
fdivr
xchg
aad
cmpsb
sahf
jbe
rol
dec
ds
and
les
adc
inc
je
dec
or
xchg
dec
and
pop
stos
sub
or
xchg
cmp
mov
mov
adc
ss
push
fwait
scas
leave
jne
pop
stos
pop
loopne
bound
in
push
shl
cmpl
cmp
inc
gs
or
jl
cli
call
sti
mov
inc
sahf
loope
mov
jecxz
popf
and
sbb
mov
mov
jnp
mov
push
roll
ds
rorb
test
inc
and
out
cmpsl
pushf
adc
shll
cmc
pop
pop
das
pop
subl
cmc
sbb
inc
cmpsb
mov
call
mov
sub
push
or
pop
pop
mov
jle
or
lcall
call
popa
xchg
xchg
add
xchg
xchg
cld
cmp
fiadds
xchg
inc
les
cli
adc
roll
mov
jle
imul
std
mov
sbb
push
xor
daa
hlt
in
fmull
add
bound
mov
sbbl
fs
fbld
inc
jle
sub
adc
add
xchg
fwait
daa
push
jnp
ds
inc
mov
arpl
call
mov
or
pushf
aaa
out
cmp
std
ss
or
mov
or
sub
lea
cmp
sub
js
xchg
or
and
dec
sarb
mov
mov
add
aaa
xchg
fdivrs
nop
cwtl
mov
push
add
daa
decl
ja
or
test
lret
mov
xor
arpl
push
cmp
sti
fiadds
les
popa
pop
mov
movsb
mov
jecxz
insl
or
mov
and
jecxz
mov
and
sbb
sahf
insb
jmp
imul
inc
lret
rclb
orb
movsl
repnz
movsl
test
mov
fildll
add
das
cmp
cwtl
int3
and
data16
ret
fldenv
or
in
xor
push
xchg
dec
test
hlt
iret
cmpsb
adc
jns
jmp
pushl
ljmp
adc
lahf
xor
mov
ss
cmpsl
adc
mov
push
mul
mov
insb
jp
shll
mov
popl
mov
fisubrl
ret
repnz
mov
push
mov
stos
int3
add
sbb
xchg
pushf
adc
xchg
xchg
push
les
aam
mov
dec
js
push
imul
jmp
loope
mov
or
xor
rol
addb
outsl
mov
out
xor
adc
jmp
cwtl
sbb
iret
fcomps
stos
and
cmpsb
fmuls
sub
and
sti
jge
push
bound
pop
insb
fists
fidivl
subps
mov
movsl
or
sub
cmp
cmp
out
xchg
mov
jno
loopne
xchg
lods
dec
hlt
dec
mov
mov
cmc
and
outsb
jne
mov
jb
lods
addr16
mov
add
pop
xor
jb
fstl
fucomp
sbb
daa
shld
arpl
xor
dec
push
inc
xchg
mov
pop
fildll
out
inc
dec
and
xchg
pop
adc
enter
push
pop
push
insl
scas
lods
sub
lcall
shlb
add
les
xchg
loop
sti
push
mov
cmp
add
xorb
ret
push
lock
mov
mov
xlat
pop
or
adc
inc
mov
mov
mov
inc
sub
loopne
ficomps
mov
test
jbe
adc
push
xor
mov
out
mov
call
les
imul
mov
aaa
mov
out
cmp
mov
sbb
int
fwait
add
ljmp
out
inc
add
inc
fistpll
add
push
mov
push
pop
dec
or
dec
inc
pop
out
sbb
push
fwait
repz
decl
dec
hlt
adc
out
aad
insb
lret
sbb
or
push
push
test
adc
imul
mov
xchg
test
stos
sub
in
imul
vmulsd
add
dec
inc
popa
push
add
pop
add
inc
xchg
jno
cmp
mov
jl
lods
jnp
push
insl
jge
aaa
fstl
mov
scas
xchg
subb
mov
jl
out
ret
fxch
call
sbb
push
sbb
sub
cltd
pop
jmp
bound
shrb
or
add
sti
movsl
mov
mov
sbb
mov
inc
je
adc
xchg
fstpt
dec
inc
sub
divl
xor
push
ficoms
push
xorb
andb
movups
mov
mov
adc
jnp
cmp
pushf
ror
adc
cmpsb
adc
pop
das
or
inc
sub
js
mov
and
adc
loopw
sti
jbe
lahf
fildl
ret
mov
xor
cli
es
xchg
mov
cltd
and
popf
mov
hlt
iret
int3
movsl
shll
inc
rorl
popa
sti
mov
stos
scas
mov
mov
mov
jmp
addr16
adc
hlt
jbe
mov
out
lods
icebp
jge
iret
cmp
fld1
jmp
test
mov
clc
jnp
aas
add
insl
pushl
xlat
test
popa
daa
stc
lock
xchg
or
push
lret
shlb
lret
cmp
cmpsl
dec
addr16
ret
cmc
aas
add
jp
lock
int3
mov
outsl
dec
inc
push
pop
fsubl
ret
pop
fs
jge
mov
sbb
faddp
lods
ljmp
pop
xchg
pop
mov
cmp
or
enter
push
mov
mov
shrl
mov
psadbw
dec
push
mov
ja
cmp
adc
addb
incl
sub
xchg
popa
or
jge
out
adc
in
push
test
sahf
lret
cwtl
int
jno
mov
mov
cmpsl
add
mov
in
and
leave
mov
lcall
adc
jl
cmp
jnp
adc
fnstsw
fwait
add
add
shlb
jmp
stc
jle
mov
lock
enter
lret
ret
out
aas
xchg
test
or
mov
push
jne
aas
fsubrl
cmp
int3
jle
xchg
jl
mov
pop
mov
sbb
fildll
or
dec
sbb
mov
push
out
dec
inc
push
lcall
popf
loop
jle
mov
push
sbb
or
xor
mov
fadd
pop
scas
sub
cld
push
andb
movsl
or
mov
mov
cmpsl
push
mov
mov
addr16
add
mov
add
aad
mov
mov
cmp
jp
sbb
stos
scas
lret
mov
lock
aas
lret
aam
fnstsw
loope
clc
sub
sbb
cli
pop
pop
and
arpl
fwait
jo
lret
or
test
mov
inc
jg
fwait
movsb
or
push
iret
int
jp
jb
jle
dec
dec
inc
push
push
jnp
dec
add
adc
outsl
jle
fmul
in
je
xchg
scas
jmp
push
les
jno
mov
in
push
jnp
jb
jmp
movl
push
stc
pop
mov
pop
add
jns
fsubrs
loop
test
or
lds
add
adc
jle
adc
sbb
movsb
mov
cmp
shl
sti
cmp
adc
aaa
xor
xchg
mov
pop
cmpsl
push
lods
hlt
in
sahf
imul
and
cmp
xor
std
sti
shlb
or
inc
jno
lcall
adc
dec
sahf
push
shl
or
repz
mov
les
pop
xor
les
add
lret
lea
adc
hlt
or
sbb
mov
in
ret
scas
jg
pop
ret
loop
add
stos
and
ss
cmp
test
pop
pushf
jle
iret
outsl
adc
das
or
mov
jno
lahf
pop
frstor
nop
loop
test
rol
mov
in
call
clc
jno
cwtl
sub
dec
xor
nop
add
cli
mov
jecxz
nop
sub
adc
test
sub
in
aas
insl
adc
mov
pop
sbb
add
incl
pop
cmpsb
clc
xor
xor
sbb
push
sub
sub
insb
push
nop
leave
adc
dec
cli
jmp
in
jg
gs
bound
mov
or
xlat
sbb
popf
in
out
enter
iret
mov
push
and
mov
outsl
ret
negl
jg
dec
out
mov
cmpsb
or
xchg
jge
mov
xchg
sbb
loope
icebp
xchg
mov
fwait
fs
movsl
fwait
lds
xchg
pop
adc
sbb
btc
push
pop
jmp
out
ror
das
sbb
push
fsqrt
inc
xchg
push
inc
test
ljmp
xor
int3
idivl
in
cmovno
sbb
xchg
lret
dec
add
stc
hlt
adcb
hlt
adc
scas
cli
push
lahf
shrl
call
mov
pop
addr16
mov
arpl
sub
bound
pop
lahf
inc
pushf
sbb
lods
daa
or
mov
daa
aas
in
aaa
pop
rorb
shl
sarb
adc
rorl
lods
xchg
pushf
sub
sbb
pop
mov
jnp
xchg
push
outsl
mov
sahf
inc
rcr
test
nop
stos
xchg
pop
bound
push
xor
outsb
or
std
jge
stc
mov
loop
scas
hlt
mov
negl
add
repnz
out
cmpsl
add
shrb
fidivrl
stos
xchg
lahf
or
mov
popa
xchg
jecxz
mov
xor
loope
test
sti
and
adc
in
dec
push
inc
imul
adc
add
movsb
add
lds
gs
arpl
sub
cmc
lcall
outsl
popa
mov
dec
mov
mov
push
and
sbb
xchg
out
push
in
sbb
shrb
and
lret
mov
int
pop
es
lods
mov
push
xchg
loope
mov
movsl
and
push
mov
mov
ret
dec
jge
or
lea
mov
pop
or
movsl
and
mov
lds
lret
rcrl
push
xor
lock
lods
outsl
jmp
pop
in
pop
sub
mov
sahf
sbb
in
jle
mov
fadds
fldcw
add
push
cld
mov
call
call
test
dec
adc
je
aad
stos
pop
pop
test
cmc
rcrb
pop
cwtl
push
gs
push
mov
sub
fs
pop
imul
int
subl
test
xchg
adc
loopne
cmc
push
mov
dec
lds
jno
and
add
xchg
loope
imul
pop
popa
sbb
jp
aam
push
popf
clc
subb
pusha
and
dec
push
inc
cmpb
and
sub
test
je
dec
es
in
mov
cmp
mov
pop
stos
mov
adc
notb
xchg
dec
inc
movsb
mov
shrd
mov
dec
pop
push
pop
fwait
sub
fldt
mov
add
mov
cld
or
adc
push
sbb
pop
test
mov
movsl
mov
pushf
repz
jle
rolb
jo
mov
adc
inc
pop
mov
dec
mov
pop
ja
ret
adc
dec
popf
add
mov
dec
mov
dec
std
arpl
clc
xchg
in
dec
sahf
roll
mov
hlt
clc
cmpsl
mull
test
scas
mov
xor
push
aam
je
xor
sbb
xchg
decl
outsl
out
mov
mov
cmpsl
xchg
adc
fcoms
cmp
dec
loopne
cmpl
fsubr
sub
jmp
xchg
adc
sahf
loop
into
call
jae
in
inc
ficoms
jle
pop
jmp
xchg
jmp
std
xchg
mov
sub
mov
jp
xor
add
jecxz
iret
mov
cmpsl
xor
orl
pushf
inc
sub
andb
aaa
fwait
sbb
jp
rcrb
xor
ljmp
mov
sahf
mov
jo
aad
mov
stos
sub
std
sbb
nop
mov
lret
dec
test
add
push
adc
shrl
or
les
dec
notb
push
sti
push
ds
stc
cmp
sti
imul
fadds
push
add
bound
lahf
stos
jnp
test
outsb
mov
jp
popa
dec
inc
push
push
pop
push
pop
and
jns
cltd
pusha
aam
adc
xorb
pop
sub
add
xchg
jmp
xor
pusha
sub
dec
and
inc
push
adc
mov
add
cli
jne
mov
inc
dec
in
mov
lods
mov
adc
sub
pop
aad
dec
in
subl
int
shrl
in
mov
aam
mov
adc
or
xchg
pop
add
js
daa
xchg
or
and
pop
outsb
loop
daa
add
or
mov
inc
repnz
aaa
sbb
imul
ja
stos
leave
pop
das
ficomps
popf
pop
and
adc
movsl
enter
and
sahf
pop
movsl
dec
adc
test
in
cmc
decl
mov
mov
enter
push
in
shlb
push
ljmp
xchg
sub
cs
call
test
pop
pushf
cmp
pop
or
bound
mov
adc
adc
mov
push
into
push
arpl
decb
mov
mov
std
pop
pushf
call
roll
lcall
mov
subb
mov
in
cwtl
or
data16
push
leave
jmp
je
push
hlt
mov
fmull
popf
jae
ljmp
inc
mov
push
leave
or
test
iret
jnp
rorb
stos
and
fwait
jl
hlt
mov
in
sub
nop
mov
push
xor
cwtl
and
xor
or
mov
test
cli
aaa
add
ret
dec
jne
outsl
add
or
cmp
sbb
mov
in
mov
lods
aam
ss
js
xchg
jp
hlt
mov
shlb
bound
sahf
clc
sbb
lret
nop
mov
mov
jmp
jmp
bound
insb
imul
xchg
pop
mov
adc
adc
dec
add
fidivs
jg
cmp
int
push
daa
xchg
dec
test
xchg
cli
dec
push
xor
adc
lods
cld
adc
enter
shlb
add
or
and
cmp
nop
lret
push
mov
pop
fisttps
adc
xchg
gs
push
aaa
xchg
jle
pusha
inc
imul
dec
adc
mov
or
scas
xchg
sbb
mov
push
ljmp
mov
add
mov
lret
mov
sub
sub
ljmp
or
fidivl
xchg
gs
cwtl
fstl
out
clc
mov
popf
fnstcw
push
sti
sarl
xor
sub
sarb
mov
pusha
or
scas
ret
mov
push
fwait
jbe
inc
jbe
sbb
inc
ss
jno
push
cmp
xchg
sub
sub
adcb
xor
jnp
mov
xor
inc
idivb
adc
inc
lods
xchg
mov
nop
mov
lcall
sub
out
push
fisubrl
sti
andl
int3
dec
sub
push
or
clc
sbb
lret
out
mov
or
les
xchg
jp
cli
insl
out
mov
neg
out
movsl
mov
les
jp
mov
inc
sbb
scas
mov
push
clc
testl
fsubs
mov
pop
jge
stc
sahf
jne
dec
pusha
pop
mov
sub
mov
jmp
sahf
xor
and
jb
xor
shlb
mov
jmp
jnp
or
pop
out
sbb
adc
push
jns
jle
dec
mov
xor
ljmp
or
sarb
mov
push
out
mov
lds
add
and
in
enter
loope
inc
fs
out
addl
sbb
out
and
push
aam
pop
in
cmp
and
pop
jecxz
xchg
roll
fmull
dec
lcall
aad
fidivl
outsl
gs
pop
insb
dec
lret
xchg
pop
add
jnp
cmp
and
loope
rorb
inc
mov
pop
sub
out
jns
sub
dec
mov
lods
inc
lea
mov
faddl
lcall
test
dec
dec
inc
mov
fsubrs
outsb
loop
pop
movsl
pushf
adc
movsl
in
mov
cli
pop
insb
imul
lcall
and
or
insb
add
dec
scas
jmp
or
xor
inc
test
clc
ret
jp
dec
mov
stos
mov
addl
mov
fstpl
cmp
push
ds
adc
mov
sbb
scas
cli
jmp
enter
or
imul
int3
in
int3
adc
mov
insb
ljmp
in
mov
jnp
leave
push
jecxz
jnp
or
test
test
loope
jge
bound
ljmp
addb
add
dec
and
stos
stc
int3
loop
or
jl
mov
les
ja
mov
mov
jecxz
dec
cmp
andb
jg
lcall
test
leave
rclb
add
ret
push
ret
das
inc
rorb
lsl
insl
pop
scas
cwtl
sub
adc
incb
fiaddl
inc
pop
dec
ret
shrb
cld
add
mov
push
btl
and
jnp
sti
cmp
sub
mov
mov
or
in
xor
mov
sub
call
sti
sub
pop
flds
jg
test
mov
mov
pushf
xchg
xchg
leave
scas
stos
push
xor
bound
add
xchg
sbb
adc
push
add
mov
out
imul
in
orb
jns
push
imul
mov
and
nop
and
jae
dec
xchg
lret
adc
push
pop
cs
adc
pop
push
cmpsb
xor
leave
and
jb
push
pushl
cmp
mov
add
xchg
xchg
xchg
into
mov
pop
leave
stos
insb
mov
cltd
mov
sub
test
fcoml
push
ja
inc
sbb
bound
movsl
push
add
and
int3
js
add
ss
mov
sahf
sub
test
push
mov
push
mov
pop
mov
mov
mov
fildl
inc
shlb
add
cli
pop
enter
fildl
xchg
ret
icebp
pop
cmp
cmp
xlat
cmp
popa
imulb
adc
sbb
jg
add
add
jmp
adc
js
jg
inc
enter
sub
enter
int3
scas
mov
sub
mov
sti
mov
adc
das
out
mov
add
or
jle
fsubrl
std
mov
enter
add
sbb
sub
daa
mov
aad
pop
fwait
lahf
push
ljmp
mov
lret
mov
cli
cltd
adc
js
imul
or
push
adc
pop
pop
sbb
in
iret
lret
or
movsl
repnz
mov
mov
repz
int3
lret
setge
lret
insb
out
mov
jns
repnz
sbb
fldcw
adc
dec
xor
nop
cwtl
int
adc
xchg
xor
inc
aad
xchg
std
xor
cmp
stos
ret
sbb
jbe
and
push
push
out
inc
adc
mov
lret
ljmp
inc
cmp
lret
push
icebp
jge
cmc
inc
out
xchg
push
pushf
cmpsl
mov
sti
iret
cld
cmpsb
outsl
adc
js
fld
cli
fcomps
lds
loop
pop
xor
add
pop
or
stc
outsb
adc
pop
xor
pop
xchg
xchg
and
sbb
jge
sub
test
rcll
sti
leave
cld
ret
iret
test
push
nop
stos
inc
lea
mov
leave
sbb
push
push
cmp
sub
xchg
sub
inc
xchg
scas
jmp
fmuls
stos
pushf
cmp
adc
jmp
test
jae
scas
shr
out
out
std
sbb
or
ret
inc
ljmp
dec
and
sahf
sbb
test
or
test
mov
out
cmpsb
pop
addr16
aaa
addr16
call
xor
or
xchg
leave
sar
insb
xor
out
cmp
and
cmpsb
pushf
mov
loope
inc
int3
mov
cs
add
sub
sbbb
add
sub
stos
push
dec
dec
push
je
jl
xchg
xor
jmp
sub
mov
sahf
cmc
or
mov
les
repnz
pop
inc
les
je
sub
incb
xchg
test
dec
pop
add
inc
jae
and
movsb
sbb
test
jmp
cmp
stos
xchg
mov
ror
enter
sti
jge
dec
add
lods
mov
xchg
adc
fiadds
mov
aad
negl
mov
sbb
xchg
sti
icebp
dec
push
dec
sub
xor
lret
in
ret
push
push
mov
or
add
jp
or
xchg
jl
insl
mov
or
cmp
jne
sub
insb
fisttpll
xchg
dec
test
pop
push
test
out
pop
sti
push
in
pop
movsw
adc
pushf
inc
push
sub
inc
mov
outsl
fucomp
ret
mov
jp
sti
stos
jno
es
fbld
das
hlt
es
fimull
or
mov
insb
jle
mov
jmp
andl
mov
lea
mov
inc
sti
es
and
mov
jno
xor
sahf
in
inc
mov
mov
jmp
or
push
into
sbb
jp
add
dec
pop
call
mov
push
sti
or
mov
and
in
and
test
and
jle
dec
add
pop
dec
repnz
mov
loop
pop
inc
push
clc
and
mov
push
clc
mov
jmp
jge
pop
push
lcall
fcmove
adc
sahf
cld
and
pop
pop
pop
mov
lcall
stc
fldt
push
and
cmp
sbb
jle
cld
out
daa
cwtl
in
arpl
mov
mov
call
pusha
andb
addb
js
out
repz
scas
data16
add
dec
out
dec
sbb
sbb
pop
dec
mov
or
loope
and
subb
hlt
bound
mov
mov
popa
xor
ds
ret
je
xlat
out
pop
lcall
sti
lods
and
test
fisubrs
dec
addr16
xchg
andl
push
fs
or
mov
push
mov
cld
sub
push
mov
shlb
test
arpl
sbbl
pop
movsl
xor
sub
xchg
cmp
jmp
sbb
scas
mov
xchg
test
mov
pop
sbb
mov
inc
cmpsb
out
cmpsl
lahf
push
xor
cmpsb
add
outsl
jo
in
jecxz
inc
inc
sub
movsl
mov
fcoml
mov
or
jle
jp
xchg
cld
sub
mov
out
call
mov
fs
xchg
ljmp
push
mov
add
cmp
xchg
orb
or
pop
das
xor
adc
jecxz
ja
or
loop
mov
scas
jne
out
jp
ror
and
pop
mov
pushf
movsl
inc
repnz
out
inc
jmp
mov
dec
stos
repz
ret
add
movsl
enter
xchg
lock
xor
lret
out
lahf
lods
lcall
jne
mov
inc
lods
or
mov
sub
mov
pushf
fiadds
dec
mov
cli
stos
adc
add
out
cs
adc
jno
loopne
mov
push
sbb
sub
pop
in
hlt
jp
or
shrb
daa
scas
push
and
fmulp
aad
inc
ss
mov
cmpsl
mov
mov
mov
lea
scas
roll
pop
pop
or
mov
mov
aam
push
adc
mov
push
stc
or
and
push
mov
dec
lods
inc
xchg
int3
rorl
add
inc
cltd
or
or
push
pop
push
fdivrs
jmp
mov
xor
jp
in
sbb
add
pushf
movsl
jp
xchg
pushf
prefetcht2
fwait
or
pop
popa
ret
out
lods
int3
ror
ret
nop
pushf
movsb
lcall
or
cmpsb
out
cmc
les
clc
lcall
aam
sahf
popa
repnz
or
scas
lods
cwtl
shll
movsl
jecxz
inc
fnsave
nop
mov
xor
addb
mov
les
popf
inc
cmpsb
xchg
sbb
cmc
jp
cmpsl
es
xchg
sbb
sub
cmpb
sub
jg
inc
ficompl
mov
bound
call
mov
pushf
jl
jns
jbe
jg
mov
fsubr
add
fwait
sbb
sub
out
ficomps
push
add
inc
popa
push
cwtl
jns
cmpsl
out
add
jecxz
jns
loopne
in
cli
push
rcll
inc
adcl
inc
out
jge
bnd
inc
add
aam
rcrl
adc
inc
lea
sbbb
push
cmpl
loopne
or
pop
incl
arpl
jnp
add
inc
inc
popf
sub
test
pushf
xlat
sbb
sub
mov
mov
nop
mov
cmp
sub
inc
loope
enter
pop
test
push
lret
in
cli
mov
lret
jb
mul
inc
dec
dec
cmpsl
shll
pop
pushf
pop
sub
cwtl
dec
mov
push
subl
popf
lea
or
mov
sarb
or
sti
fmulp
jmp
or
imul
sbb
or
sbb
enter
or
pushf
mov
add
sbb
push
addl
cmpb
add
cli
lock
dec
ss
aad
cmp
add
test
or
pusha
lret
dec
testb
lods
enter
lcall
xor
sub
xchg
push
test
push
fwait
lods
lods
sahf
movl
pop
popf
sub
mov
mov
xchg
fsubl
xor
in
addr16
or
push
aaa
call
push
dec
or
stos
and
jno
jg
sti
jae
cli
cmp
dec
xor
xchg
xchg
cld
sbb
and
cs
pop
imul
jmp
dec
pushl
jge
sub
popf
das
mov
jb
cwtl
push
push
daa
adc
jle
adc
sub
loope
data16
vmread
pop
enter
insb
std
push
pop
leave
or
pop
or
push
inc
mov
mov
stos
sub
ss
xchg
inc
or
xchg
dec
in
or
cmpsb
inc
add
orb
ljmp
dec
push
or
sub
pushf
dec
sbb
fwait
jnp
dec
adc
std
scas
movsl
fwait
or
mov
movsb
insb
cwtl
iret
cmp
sbb
and
lcall
dec
jb
jg
lret
or
push
dec
sbb
push
inc
mov
jnp
mov
adc
xchg
sbb
jns
insl
xor
fisubrl
dec
orb
sbb
inc
cmp
mov
inc
jmp
or
ret
inc
scas
lods
call
stos
jnp
icebp
jp
repnz
movsl
ljmp
and
sbb
call
out
out
fwait
andl
jbe
dec
xchg
in
int3
sbbb
dec
jmp
sub
inc
leave
or
xor
xor
or
ss
les
xor
aam
xor
leave
fs
mov
push
stos
push
hlt
jle
insb
dec
mov
or
movl
fsubl
pop
push
dec
rol
iret
rcrb
outsl
call
xchg
out
subb
mov
fisubs
dec
adc
andl
popf
xor
sahf
cmpl
repnz
fsubrs
pushf
outsl
push
imul
sbbb
fiadds
sbb
movsb
int3
adc
xchg
sub
pop
orb
sub
test
insl
sbb
mov
fildll
dec
pusha
fists
test
arpl
push
pop
sub
les
sbb
pop
cmp
das
cltd
mov
hlt
push
mov
mov
xor
mov
mov
mov
push
sub
mov
fidivl
mov
push
sbb
mov
loopne
jl
stos
push
icebp
mov
dec
rcrl
pop
adc
adc
cmp
adc
ret
jb
in
pop
sbbb
sahf
add
sub
jge
sub
mov
fsubrl
push
sbb
push
push
add
movsl
jle
and
ja
xchg
mov
push
and
push
packsswb
fidivl
sbb
mov
hlt
loop
mov
mov
jne
or
mov
pop
sbb
loop
ljmp
push
mov
mov
and
lods
mov
enter
xchg
nop
mov
popa
icebp
jmp
icebp
lods
mov
ds
add
jnp
mov
push
xchg
stos
scas
or
mov
in
add
inc
movsl
xchg
pop
xchg
add
add
sti
and
xchg
mov
cwtl
shrl
and
addb
or
imul
mov
movsl
sti
pop
and
rcrb
je
mov
enter
test
cwtl
xchg
es
movsb
rorb
pop
sub
mov
or
push
popf
gs
adc
add
out
add
inc
adc
lods
loopne
scas
jle
and
popf
add
cmp
popa
inc
and
loop
fimuls
lcall
fldcw
mov
jecxz
xchg
stos
inc
cld
or
fildl
mov
and
jae
and
pop
xchg
clc
or
ljmp
iret
xchg
or
inc
mov
cmp
jo
das
mov
xor
stos
or
jns
cwtl
jne
jp
das
push
push
fsubl
dec
ljmp
sbb
orb
dec
rcll
lret
aam
daa
dec
test
mov
int3
lret
adc
push
sahf
jecxz
push
roll
aad
add
jg
imul
add
inc
cld
sub
std
push
int3
add
or
mov
enter
pop
insb
mov
inc
mov
dec
mov
lret
call
jg
xor
sub
addb
adc
add
int3
mov
arpl
into
adc
incl
sahf
dec
dec
jmp
loop
ret
in
fidivrs
scas
cwtl
lds
or
js
imul
je
cmpsb
stc
iret
aam
dec
popf
bnd
dec
out
xchg
push
adc
lods
ljmp
mov
call
push
mov
shl
lcall
mov
add
mov
loopne
sub
sahf
jmp
push
push
lock
add
mov
lcall
mov
pusha
test
jb
into
and
add
subb
push
xchg
add
mov
jmp
pop
fadds
xor
xor
loop
adc
jmp
push
stos
jle
cmp
in
push
rol
lds
sub
or
les
ss
call
mov
lret
inc
adc
insb
repnz
adc
inc
add
cld
xchg
popf
aam
or
lods
aaa
loop
xchg
das
outsl
and
pushf
push
cmp
fldl
push
dec
mov
adc
insb
cmpsl
ja
push
test
popa
int
in
cwtl
inc
inc
mov
cwtl
adc
cmp
or
sub
adc
push
or
fwait
pop
sbb
pop
or
paddd
je
and
test
scas
push
and
decl
aam
push
jp
cwtl
mov
test
sti
ja
jbe
and
or
test
sub
dec
subl
cmp
dec
mov
lret
call
repz
mov
ljmp
into
add
out
xor
dec
mov
xorb
mov
or
push
data16
or
outsl
pushf
xor
sub
and
or
mov
sub
dec
adc
adc
xchg
or
jp
les
cli
out
leave
and
insb
mov
mov
stc
int3
pop
dec
dec
in
inc
scas
and
jo
dec
cmovb
push
loope
xchg
sbb
xchg
fsubs
xor
rorl
or
and
imul
imull
loop
sub
std
insb
xor
mov
test
enter
xchg
dec
popf
mov
orl
in
shrl
inc
xorl
imul
xchg
bound
popf
sub
adc
add
cmp
jo
and
test
jecxz
mov
add
mov
mov
incb
pop
jae
enter
jne
or
test
outsb
dec
addr16
sbb
dec
sub
push
jl
fs
and
out
or
jl
out
pop
sub
adc
adc
add
mov
sbb
insl
stc
enter
adc
adc
lea
int3
sub
mov
xchg
ss
sbb
push
pushl
fs
andb
or
add
mov
in
lahf
sbb
hlt
mov
insb
pop
into
shlb
ret
fsub
xor
xchg
rcll
fisttps
jmp
into
push
sbb
rcll
xchg
or
push
sub
xor
push
icebp
fdivs
gs
mov
or
dec
movsl
add
subl
xchg
adc
push
nop
jno
and
jno
jp,pt
mov
xlat
pop
dec
push
enter
sub
data16
mov
mov
ror
lret
sbb
test
loope
push
pop
inc
sahf
cltd
imul
hlt
jg
or
imul
sub
in
or
push
cmpb
and
mov
sbb
inc
addr16
or
sti
pop
mov
jno
push
inc
xchg
inc
loope
sub
int
pop
xchg
lret
shr
add
rorb
mov
in
and
sub
cwtl
mov
test
inc
cli
jb
add
mov
addr16
jns
sub
add
insl
jno
jbe
xchg
sub
push
popf
xchg
jecxz
je
stos
cmp
fisubs
lods
and
cmp
je
lahf
adc
pop
rolb
aaa
or
xchg
daa
into
pushf
nop
mov
cmp
inc
push
pop
testl
xlat
mov
xchg
add
adc
push
mov
mov
out
mov
pop
xchg
adc
ljmp
cwtl
mov
icebp
inc
sbb
cli
jmp
or
push
enter
das
sbb
in
sub
movsb
enter
aad
jo
insl
or
enter
mov
mov
test
test
stc
and
and
arpl
clc
jns
fsqrt
and
jno
add
int3
or
mov
cmc
hlt
jmp
dec
or
add
sub
aaa
rclb
iret
inc
jbe
jno
stos
mov
aaa
dec
iret
add
xor
andl
ret
or
add
add
mov
and
in
lds
cld
jg
jb
adcb
mov
sbb
push
dec
adc
cmp
xor
int3
data16
jl
int3
outsl
pop
cmpsl
or
test
mov
sub
repz
dec
pusha
test
les
adc
sbb
loop
test
call
jl
mov
pop
add
pop
cmp
imul
test
dec
ret
push
adc
cli
pop
cltd
jmp
xor
insl
test
inc
or
cli
inc
enter
cltd
sti
jno
das
enter
inc
add
cli
dec
jl
fnstenv
sti
xchg
lret
dec
test
repz
mov
mov
mov
jl
jb
aad
add
add
sub
adc
sahf
sbb
fs
xchg
cmp
ljmp
or
adc
in
aaa
bound
and
or
in
shl
mov
stos
enter
cmpb
lret
insl
mov
jle
or
or
scas
or
lea
repnz
pop
sbb
push
add
mov
pop
mov
lret
inc
stos
popa
add
push
xchg
rcrb
sbb
int3
or
int3
sahf
xchg
sub
dec
call
nop
mov
pusha
cs
xchg
sbb
or
mov
adc
sub
inc
xor
das
repz
mov
sti
jge
xchg
fldt
imul
ss
pop
jg
mov
jne
push
fs
mov
cmpsl
lret
xchg
addb
add
mov
inc
mov
out
fmuls
js
jl
push
stc
test
mov
out
les
lret
cli
test
loopne
cmp
rorb
mov
push
psrlq
mov
call
sub
sbb
pop
sahf
jns
xchg
movsb
inc
sahf
push
add
fidivl
imull
jmp
das
and
jg
xor
out
mov
icebp
add
xor
sbb
mov
imul
push
pushf
jne
repz
or
lret
mov
mov
fmul
mov
xchg
scas
shrb
xchg
dec
add
mov
mov
mov
iret
mov
mov
scas
mov
or
mov
mov
and
cmp
ss
cltd
lock
fimull
ss
jbe
or
sbb
loop
out
and
popa
cli
rorb
adc
dec
mov
rcll
pop
insb
cmpsl
pushf
adc
rorb
xchg
push
or
sbb
jo
fstpt
js
dec
div
sbb
sbb
sbb
dec
pop
pushl
leave
sub
sbb
popa
lock
les
psubsb
loope
inc
cmpsb
lret
jl
out
aam
dec
loopne
sahf
dec
inc
dec
mov
and
jne
sub
inc
push
jo
add
int3
cmpb
loopne
xrelease
mov
xor
pop
leave
loop
add
mov
test
inc
fs
andl
push
jl
sahf
sub
sarl
jbe
sbb
pusha
adc
jl
movsb
inc
sti
push
adc
imul
adc
adc
xchg
adcb
xchg
jmp
call
mov
xchg
jp
dec
call
call
xchg
pusha
adc
push
adcb
pop
stos
stos
insl
pusha
aam
jp,pn
xchg
fcomps
orl
or
and
sbb
adc
lcall
sbb
mov
mov
jmp
xor
decl
mov
cmp
and
ficoml
xor
inc
insl
jecxz
mov
loop
sbbb
jnp
xchg
out
ret
mov
or
xor
cltd
pushf
or
jno
mov
xlat
or
mov
stos
sub
or
sub
lret
adc
push
jmp
jge
mov
sbb
xchg
or
jmp
pop
subps
xor
push
scas
push
mov
or
cmp
test
repz
dec
mov
pop
add
inc
jne
addr16
add
mov
sti
hlt
mov
fistps
inc
xchg
sub
cld
xorb
std
shll
jmp
ret
insl
adc
pop
ds
mov
fisttpll
adc
ret
hlt
into
sub
stos
inc
jne
mov
sub
dec
xor
popa
mov
pop
mov
add
mov
or
add
sub
lods
jecxz
shr
ljmp
mov
lcall
add
xor
mov
jmp
imul
jno
ror
fsts
pop
ljmp
adc
or
mov
mov
std
ret
mov
sbb
or
xor
pop
rorb
enter
add
pop
orb
jmp
in
mov
les
sub
add
fldl
inc
dec
fidivrl
test
insb
cmpsl
xchg
sub
add
sahf
call
mov
jl
or
mov
cmpsb
js
or
push
jno
out
out
push
mov
ficompl
scas
stc
lds
popf
sbb
xchg
sub
shlb
in
ret
mov
xchg
inc
sub
jb
mov
inc
or
jnp
lahf
inc
imul
sub
add
adc
fiadds
add
mov
int3
mov
sahf
imul
mov
sbb
cmp
test
call
xchg
loop
push
cmp
or
or
dec
xorl
inc
daa
int3
add
insb
xchg
fdivs
orb
mov
das
or
adc
push
mov
aas
or
dec
pusha
or
fs
imul
aam
push
push
mov
jmp
scas
xor
testl
ja
out
push
ds
adc
inc
fisubl
and
sub
idivb
shrb
xor
lret
hlt
in
int3
push
push
push
cmpsl
fsubrp
scas
cwtl
shrb
xchg
add
daa
cmpsl
mov
cmp
fistps
jno
lahf
cwtl
xor
sbb
stos
mov
int3
adc
enter
mov
ljmp
shl
mov
mov
xchg
sbb
mov
inc
rcll
test
lret
and
fisttps
cld
push
mov
outsl
inc
inc
or
ja
and
mov
lods
push
cmp
adc
cwtl
out
loopne
and
sbb
orl
adc
cwtl
hlt
mov
fisubrs
fsubl
enter
mov
ljmp
xchg
mov
out
or
repz
addb
stos
aad
jge
mov
or
sbb
popf
gs
sbbb
or
jns
dec
out
adc
fwait
push
adc
mov
adcb
insl
or
mov
mov
movsl
test
fcomi
mov
gs
scas
cmp
mov
fnstenv
repz
dec
stos
jne
sub
lret
sub
adc
xchg
add
lret
inc
fdivrs
sub
add
sub
andb
xchg
cmp
inc
adc
test
mov
pushf
lcall
stos
lahf
in
adc
sub
xchg
dec
fdiv
rorl
xchg
sti
mov
andl
push
add
cmpl
call
xchg
addl
lea
pop
movsb
subl
mov
and
dec
add
push
outsl
mov
pop
jmp
sti
test
push
dec
test
fs
cmc
pop
sub
call
outsl
out
mov
add
aaa
sbb
mov
orb
push
imul
test
sbb
in
daa
push
fnstcw
test
push
rcrl
movsb
insl
mov
push
xchg
inc
ja
dec
ja
int3
subl
mov
push
and
xor
pop
imul
or
lods
outsl
clc
cld
imul
stc
and
mov
sub
and
add
xchg
jnp
lds
in
cmpsl
int
cmovo
sti
popf
ret
sbb
loop
xchg
into
or
sti
popa
add
jbe
mov
ljmp
dec
cmp
in
ljmp
aam
mov
jle
bound
rcll
fwait
rolb
sar
paddsb
push
jns
add
or
out
movsb
sarl
sub
cmp
mov
xor
mov
sbb
punpcklwd
repnz
pop
push
pop
mov
mov
mov
pop
jecxz
lahf
lods
xchg
dec
or
jge
or
inc
sub
cmp
mov
leave
scas
adc
add
push
fstps
mov
or
das
fs
inc
jmp
adc
lea
sbb
cmp
push
xchg
nop
xor
add
lea
add
sbbb
mov
inc
sbb
loope
adc
sbb
jns
dec
popa
xor
xchg
enter
sbb
subb
inc
sbb
pop
loop
cwtl
and
daa
lock
ljmp
insl
cmp
pop
xorb
shl
inc
pushf
add
js
cs
test
push
addr16
mov
vmovq
push
mulb
mov
and
sub
ret
icebp
add
adc
and
cld
dec
gs
fisubrs
push
les
pop
or
mov
cmpsb
mov
shl
das
sbb
push
cli
cmp
or
notb
lea
dec
sbb
mul
jg
push
jge
in
xchg
cmc
loop
add
into
push
sub
xchg
popf
and
mov
mov
mov
xor
fisubrl
mov
lock
inc
stos
cmp
cltd
or
mov
loopne
icebp
jb
pop
sarl
and
in
jl
dec
pop
outsb
cmp
in
dec
adc
add
sub
adc
and
cmpsb
mov
daa
xlat
xchg
push
mov
into
stc
push
inc
or
aaa
jbe
sbb
pop
sub
lods
fwait
pop
mov
lods
sarb
shlb
push
nop
push
dec
jl
stos
pop
mov
imul
icebp
jnp
dec
mov
inc
icebp
movsl
scas
mov
aaa
xchg
stos
jbe
sub
sbb
xchg
lcall
fdivp
and
inc
sti
loop
loop
js
mov
pop
mov
int3
or
sub
sub
andb
test
push
loope
jmp
lret
sub
jmp
rclb
dec
jl
insb
xlat
out
das
pop
push
sub
lret
cmpsl
lret
cmc
push
or
cmp
jle
bound
push
or
test
andb
ds
lock
sub
pop
and
stc
xchg
jne
mov
ja
sbb
shrb
out
shrb
je
cmp
out
mov
ret
movsb
scas
ja
add
dec
adc
scas
clc
mov
mull
adc
js
and
lret
pop
jae
icebp
lahf
mov
xor
mov
cmp
daa
testl
rcll
addr16
dec
cmpsl
lcall
test
sub
xabort
jmp
dec
into
mov
gs
inc
out
loop
inc
push
inc
fcmovnu
xor
in
and
shll
and
shll
add
outsl
stos
pushf
stc
scas
dec
not
lret
lods
out
aaa
sti
and
jmp
ret
incb
aas
mov
lahf
stos
sahf
xchg
rsqrtps
mov
in
inc
loope
cmpb
icebp
sbb
xlat
or
orb
inc
leave
lods
cmpsl
mov
mov
subb
dec
shrb
mov
jl
lods
mov
push
add
xchg
pop
test
lretw
pop
movsb
jno
xchg
testb
sbb
js
in
sbb
lock
or
sarb
sbb
pop
or
dec
stos
jle
out
jo
or
daa
scas
lods
mov
and
test
popf
movsl
push
xorl
or
or
jno
mov
cmpsl
dec
dec
cmc
or
in
ja
repz
imul
sbb
pop
xchg
fildll
inc
test
loop
pushf
sub
movsl
push
jb
dec
jns
fldenv
fsubs
add
mov
add
ljmp
mov
flds
push
or
lret
or
pop
pop
filds
sbb
dec
xlat
mov
lock
jb
mov
ljmp
jle
sub
int3
jge
mov
mov
popf
mov
scas
mov
es
mov
cltd
stos
icebp
jl
dec
mov
push
or
xchg
ret
test
out
or
mov
movsl
scas
xchg
inc
imul
xor
jmp
fistps
and
or
aaa
cmp
mov
out
add
add
sub
pop
add
lret
fs
mov
xchg
or
movsb
aaa
push
test
and
cwtl
or
jno
jbe
movsl
sbb
idiv
sbb
add
sbb
sbb
xchg
ss
xor
xchg
mov
xchg
sahf
mov
xchg
leave
cmp
mov
push
cmp
sti
and
daa
cmp
fldt
dec
mov
and
push
popa
ss
bound
jo
mov
push
pop
push
jp
dec
push
test
mov
push
mov
add
aaa
frstor
push
mov
test
pop
xchg
je
ret
mov
sbb
pop
clc
inc
inc
mov
add
mov
sbbb
jno
xchg
xor
cmpsb
test
or
push
aad
je
int3
dec
icebp
xchg
repz
sti
bound
lods
adc
mov
dec
dec
test
xor
xchg
adc
push
popa
in
or
imul
movsl
cs
sub
mov
inc
mov
jb
cwtl
dec
notb
shrb
dec
and
push
lret
inc
in
out
int3
leave
cmp
jecxz,pn
adc
xlat
mov
cli
icebp
mov
ja
sahf
dec
and
js
cmp
adc
shrb
nop
sub
push
mov
nop
sbb
or
imul
stos
mov
inc
mov
and
fwait
inc
ljmp
or
add
mov
sbb
push
mov
fstl
pop
mov
imul
push
movsl
ret
out
pop
or
xchg
fldt
loopne
faddl
sbb
dec
or
aad
adc
into
test
ja
inc
out
addr16
add
fsub
sub
pop
or
mov
jge
negl
sub
sub
aad
mov
test
mov
ljmp
and
adc
cmpsl
cltd
and
or
jmp
sub
in
out
pop
jg
enter
pop
sub
jge
push
cmp
mov
push
push
shlb
mov
cwtl
int3
or
loop
mov
unpcklps
pushf
fs
aaa
add
out
addr16
jnp
sub
stos
stos
mov
adc
sti
or
out
inc
mov
jge
out
push
mov
fiadds
and
hlt
ds
mov
xor
jle
sbb
xchg
inc
andl
add
fs
xchg
in
clc
dec
in
mov
sub
stos
loopne
adc
inc
std
lods
fsubr
sub
ja
mov
and
movsl
adc
pop
pop
xchg
mov
adc
jecxz
mov
js
in
iret
mov
cld
pop
jmp
nop
pop
xchg
xor
dec
enter
ss
out
jne
scas
scas
pop
addr16
int
inc
sbb
inc
xlat
xchg
lock
int
xchg
jae
daa
ret
je
dec
ffree
cmpb
inc
aas
mov
mov
adc
aam
xor
into
adc
out
jne
xor
inc
popa
inc
mov
or
in
xor
cmpsl
dec
stos
xchg
insl
lea
or
xchg
dec
insb
push
aaa
int
rcll
mov
pop
sbb
in
clc
mov
jmp
dec
sbbb
not
xlat
gs
sub
pop
sbb
push
add
out
ljmp
movsl
adc
cmp
ja
jecxz
dec
sub
cmc
cmp
mov
inc
jge
sbb
adc
mul
mov
xchg
ja
mov
rcrl
jbe
inc
push
int
cmp
movsl
lods
ficompl
orl
jecxz
mov
xor
and
inc
and
aaa
push
and
or
shrb
mov
xlat
sbb
xchg
add
aaa
je
inc
or
insl
fcoml
cmp
jecxz
daa
mov
in
scas
mov
lock
xorb
adc
sub
das
shl
push
or
mov
ja
add
orl
sahf
and
bound
jae
pop
scas
inc
sbb
mov
jns
sbb
pop
mov
or
or
mov
dec
enter
jecxz
sbb
nop
sahf
insb
adc
mov
add
nop
push
outsl
or
jge
inc
lea
aad
mov
enter
jo
dec
sbb
adc
sti
push
pushf
lcall
mov
aaa
enter
aaa
int
sbb
mov
es
push
cbtw
cli
mov
add
call
xor
inc
test
inc
lea
test
xchg
scas
das
sarl
ja
mov
lods
and
rcl
xor
xor
add
add
bound
adc
add
or
icebp
stc
mov
pop
movsl
jnp
imul
lcall
jle
mov
loope
inc
jne
mov
int
sti
sub
imul
js
adc
mov
nop
test
push
les
and
ret
fldt
and
sbb
arpl
cmp
jnp
mov
adc
xor
cmp
cmp
xorb
or
push
xchg
mov
mov
stos
loop
std
add
dec
mov
movsl
bound
add
jmp
stos
popf
xor
adc
pop
test
jl
cmp
fmuls
int3
rcrl
cmc
movsl
sub
ret
lahf
adc
or
inc
xchg
lcall
xor
mov
dec
sti
xlat
inc
test
shrl
sahf
xor
jns
mov
stos
loop
or
and
or
dec
sti
scas
pop
scas
cs
jno
sbb
scas
or
mov
adc
loope
out
sbb
xor
sbb
scas
sahf
inc
pop
mov
int
or
mov
jecxz
subb
mov
mov
xchg
jg
dec
push
inc
sti
orb
xchg
lahf
in
test
je
ficoml
jge
xor
inc
fs
das
mov
ret
dec
repz
push
jo
mov
bound
mov
je
mov
stos
out
mov
fidivrs
or
mov
lods
adc
imull
stc
fisubl
or
enter
sahf
sub
sti
loop
addl
bound
pop
out
add
and
cmpsl
add
in
xchg
aam
mov
popf
xor
movsl
cmp
lret
sahf
lret
push
loopne
insl
stos
sti
lahf
jnp
or
mov
sti
ljmp
rclb
bound
aam
xchg
fwait
push
add
negl
dec
sub
dec
ffreep
adc
js
mov
mov
sbb
mov
iret
test
les
sbb
mov
xor
jno
push
mov
sbb
popa
ret
fcoml
mov
jnp
outsl
sub
and
cmp
pop
adc
sbb
movsb
out
nop
vsqrtsd
and
icebp
push
pop
fcmovnu
pop
js
lds
jb
aad
mov
sbbb
ljmp
mov
add
push
loopne
sbb
test
ret
pop
call
mov
sti
and
jmp
sub
add
mov
sbb
cli
mov
das
ret
inc
outsb
inc
pop
call
jno
mov
xchg
mov
mov
cmp
mov
leave
cmp
cld
cmp
insl
jecxz
out
lcall
jmp
add
ret
xchg
xor
dec
test
jl
aad
popa
fisubs
sub
loop
sbb
js
dec
into
loopne
adc
add
mov
inc
jmp
and
clc
mov
dec
mov
stos
bound
xchg
leave
pop
jecxz
test
mov
hlt
jo
adc
or
adc
sub
dec
jecxz
jp
mov
or
movsb
jmp
adc
repnz
pushf
pusha
jmp
sbb
jmp
mov
insl
int
add
enter
mov
insl
cwtl
into
loop
jge
mov
int
pop
enter
es
push
bound
pop
test
and
aad
cmpb
sub
insl
inc
dec
rorl
cltd
out
jbe
lods
jecxz
pop
cltd
pop
ret
call
sub
out
ret
icebp
push
cmp
cmp
ret
cli
mov
rorl
mov
enter
push
stos
sbb
pop
lret
pushf
sbb
insb
pop
lea
stos
ret
movsl
sahf
dec
mov
cmp
sub
int3
daa
repz
pop
pop
stos
or
je
sub
mov
or
and
mov
rol
adc
mov
mov
fcoms
and
mul
add
jo
das
mov
sub
dec
out
and
insb
leave
clc
test
enter
das
mov
out
loop
jl
decl
jl
add
enter
shlb
adc
int
sbb
fiaddl
sbb
pop
popf
insb
aam
in
test
out
pop
dec
aaa
repz
mov
mov
hlt
or
cmp
leave
test
scas
inc
inc
mov
or
roll
mov
repz
test
outsb
loope
loopne
mov
sbb
aam
push
syscall
mov
xor
jmp
lahf
xchg
or
in
and
mov
sarb
push
int3
xchg
aam
mov
inc
or
ss
stos
push
jns
pop
pushf
movsl
test
cmpsb
xchg
add
sti
pop
pop
psubusb
jmp
xchg
jns
cld
repnz
fs
cmpb
sub
ljmp
pop
sbb
stos
pop
or
xchg
push
inc
fstps
hlt
or
xor
push
addb
cmp
pusha
adc
dec
sub
leave
stos
cmp
pushl
mov
jmp
scas
ss
adc
sysexit
push
cmpb
mov
out
mov
aad
sbb
cld
mov
gs
loopne
pop
fidivrs
inc
mov
and
call
lcall
repz
pop
dec
jbe
fs
adc
push
inc
movb
mov
mov
sti
cltd
addl
push
sub
sbb
push
mov
mov
inc
push
fcmovnbe
popl
mov
cmp
stos
mov
pop
jnp
or
xchg
test
jnp
jecxz
mov
das
test
xchg
je
out
repnz
negl
or
mov
or
push
inc
loope
xor
sahf
sub
jb
mov
jnp
pop
out
sub
lods
cli
fs
jl
push
rclb
xchg
sub
push
andb
push
cli
mov
xchg
push
ljmp
cld
mov
fwait
adc
dec
xchg
sbb
jbe
nop
fisttpll
nop
and
pop
mov
ror
pop
inc
inc
mov
xchg
cltd
lret
mov
insl
ret
bound
jmp
xor
fisubrl
iret
mov
scas
add
lret
jne
fwait
xchg
es
pusha
push
lahf
gs
lret
sti
in
inc
jp
sbb
out
xchg
mov
add
es
stc
int3
lahf
xchg
aad
nop
pop
fisubrl
adc
sahf
addl
push
sub
or
insb
lret
sub
sub
mov
int
push
lods
and
sti
push
adc
ljmp
pushf
aas
cmc
loop
sbb
sti
adc
sti
daa
push
idivl
sahf
sarb
jmp
ljmp
mov
dec
jecxz
xchg
or
adc
push
sub
add
lret
stc
fnstsw
mov
sub
ja
jg
rcr
stos
add
rep
add
xchg
inc
cmp
inc
cmp
cmpsb
cmpb
and
and
jl
call
jmp
in
jmp
lods
push
ljmp
sbb
xchg
mov
inc
dec
out
jo
ds
imul
cmpsl
xlat
pop
pop
add
push
pop
loopne
jge
cmp
in
xchg
mov
jmp
call
sbb
mov
ss
rolb
in
or
lret
fsts
dec
or
insb
data16
stos
cmp
xlat
xlat
sub
push
sti
xchg
int3
jne
fmul
cs
cmp
imul
hlt
int
mov
mov
or
adcb
orl
lret
loop
push
adcl
cmp
cmp
jle
jecxz
cmp
leave
mov
lret
std
push
js
in
sbb
add
mov
in
mov
dec
xor
test
lock
shlb
dec
mov
cmp
enter
scas
or
push
lret
dec
add
dec
out
jle
pop
sbb
push
stos
adc
das
mov
scas
fwait
rcl
movsl
push
fcoms
sub
cmp
mov
inc
mov
movsl
pop
mov
dec
pop
stc
je
push
xchg
mov
jmp
push
dec
xchg
xchg
lcall
flds
rorl
push
out
adc
sbb
mov
loopne
mov
or
loop
pop
in
mov
mov
les
inc
ja
push
enter
or
inc
add
test
pop
das
cmp
inc
mov
test
push
push
mov
push
lret
lock
jg
and
call
adc
outsb
jg
or
daa
rol
cwtl
sbb
stos
pop
bound
cmc
adc
in
les
xchg
ljmp
ds
mov
mov
imul
call
icebp
inc
test
sub
xchg
shl
sub
movb
pop
ss
addr16
call
and
inc
aaa
rcll
sub
xchg
inc
lret
bound
xchg
mov
xchg
fs
mov
gs
sbb
pop
cmp
fsubrl
orl
mov
add
sbb
lods
or
push
xchg
jno
inc
pop
adc
subl
lods
loop
push
and
mov
enter
xchg
popf
xchg
scas
or
cwtl
add
scas
lods
or
movsl
setle
ds
mov
addl
mov
jecxz
jp
int3
sub
adc
std
js
xorb
int
test
or
push
inc
stos
popf
add
jp
dec
jae
fld
inc
sarb
cmp
imul
shr
insl
adc
int
ret
fisubl
xor
lock
adc
mov
fnstsw
xchg
mov
test
cmpsl
dec
cld
sbb
push
add
jbe
in
test
push
enter
xchg
add
mov
fldl
clc
push
insb
pop
dec
xor
xorb
icebp
arpl
or
orb
out
or
mov
stos
adc
fcmovu
mov
push
pop
addr16
dec
arpl
dec
ret
jp
das
mov
lods
sub
sbb
sbb
push
stos
cmp
inc
cmpsb
lods
insl
jo
repz
or
out
or
jl
mov
in
inc
movsl
adc
pop
sbb
push
cmp
xchg
outsb
clc
push
inc
icebp
mov
outsb
or
in
mov
clc
push
and
mov
repnz
rol
mov
ja
sub
aad
bound
mov
mov
lds
jmp
nop
or
test
mov
aam
mov
addr16
jo
and
subl
loope
lret
and
or
mov
dec
loope
pop
mov
cmp
push
pop
imul
mov
cmp
sbb
jo
inc
clc
mov
adc
int3
cmp
inc
ret
gs
add
repz
int
shlb
rol
fistpl
mov
and
sbb
bound
add
loop
stos
jmp
enter
jo
enter
jmp
push
ds
clc
adc
lcall
add
mov
ljmp
in
or
inc
bndstx
jne
fucom
stos
stos
popa
mov
cmp
icebp
pop
sbb
and
or
add
ffree
int3
shr
xchg
ret
adc
in
mov
pop
lods
or
loop
arpl
insl
rcll
xchg
scas
mov
cld
mov
sub
push
adc
aad
sub
jo
into
ret
sub
dec
pop
lret
mov
ret
adc
shrl
add
jecxz
pop
adc
mov
sarb
jmp
and
sub
cld
hlt
pop
test
int
cmp
out
and
adc
or
pushf
arpl
or
push
or
mov
xchg
dec
shll
inc
adc
or
cwtl
test
mov
scas
push
sub
mov
or
lret
inc
ret
pop
out
cmp
add
pushf
test
inc
inc
nop
pop
adc
pop
or
movsb
push
adc
shrl
pop
dec
ret
mov
jl
ret
pop
or
mov
mov
aad
and
adc
repz
popl
pop
inc
arpl
out
dec
xor
xchg
imul
sbbl
cmp
cvtps2pi
scas
xor
mov
mov
orl
mov
add
mov
call
sti
loop
push
insl
lds
test
adc
mov
out
repnz
xchg
es
and
pop
and
leave
hlt
rorb
aad
xor
adc
push
adc
dec
inc
imul
sub
sti
sub
sub
dec
cld
fisttpll
jle
icebp
add
mov
mov
xchg
popa
ljmp
xchg
dec
dec
pop
loop
or
jge
movsl
mov
mov
inc
jg
stos
add
or
and
mov
cmp
mov
clc
jmp
or
out
sbb
add
pop
arpl
inc
clc
sub
jns
push
mov
std
or
movsl
jle
gs
xchg
out
lds
dec
adc
in
popl
mov
xchg
scas
dec
inc
mov
xchg
adc
xchg
mov
or
shlb
add
in
arpl
mov
lods
mov
popl
sti
lret
in
cmovp
xchg
cltd
xchg
pushf
push
pop
dec
fstpl
cld
inc
adc
mov
je
aam
subb
fdivrs
aam
ljmp
sbb
or
cmpsb
aad
insl
cwtl
mov
or
sti
cmp
pop
ret
adc
or
mov
or
mov
out
cmpsl
cltd
inc
mov
loopne
insb
daa
push
scas
inc
sub
sti
out
mov
cmpsb
mov
mov
pop
leave
imul
inc
jb
xchg
ret
or
loop
shl
aad
hlt
push
rorb
mul
adc
pop
mov
outsb
jo
add
mov
sbb
int3
add
xchg
dec
aad
sarl
lods
ljmp
lock
out
jnp
shl
sub
out
mov
adc
in
imul
out
push
mov
scas
jns
loope
mov
inc
arpl
pop
std
adcl
arpl
jge
outsl
fst
add
adc
lret
sahf
push
addb
xchg
test
push
lcall
scas
outsl
es
popl
add
xchg
decl
push
sbb
out
ds
mov
jb
fdivrs
mov
add
pop
popa
cltd
jno
mov
decl
pop
jae
cmp
dec
hlt
movsl
stos
pop
sub
lret
mov
mov
in
mov
adc
les
jb
add
popf
test
sub
mov
add
mov
and
fwait
pop
push
mov
loopne
or
movsl
xor
mov
push
int
in
ljmp
ss
inc
xchg
or
repz
js
jb
inc
or
jae
jmp
push
push
add
lret
fisttpl
mov
stos
jb
cli
movsb
sbb
repz
icebp
mov
outsl
push
cld
mov
inc
or
mov
loop
sbb
lds
sbb
inc
or
jbe
mov
out
lods
inc
mov
in
imul
mov
cmpsl
jmp
outsl
xor
movsb
push
cld
push
fmull
cwtl
push
popa
call
inc
sbb
sbb
lods
es
jle
push
jne
repz
xchg
es
test
pop
aaa
mov
xlat
adc
dec
add
stos
sub
inc
pop
or
sub
scas
lret
sub
movsl
js
mov
sbb
popf
inc
ljmp
in
sub
outsb
xlat
loope
mov
adc
aad
js
idiv
sub
rol
sub
ljmp
mov
movsl
cmp
out
lret
test
rorb
cmp
insb
mov
sub
repnz
sbb
mov
insb
add
adc
lea
out
mov
insb
lods
mov
push
sbb
cmp
adc
insb
cmc
ret
lret
sub
adc
jmp
sub
ret
imull
adc
int3
or
fisubs
push
ret
loop
in
jecxz
xchg
lods
add
testb
test
add
lods
mov
testb
jmp
out
lret
inc
incb
pop
and
adc
in
icebp
jno
add
mov
out
adc
loope
std
cmp
mov
lret
sub
adc
xchg
sti
sub
mov
add
adc
lret
aam
adc
inc
shld
cmpsb
aam
and
push
dec
mov
fidivs
icebp
add
dec
div
lods
sub
jb
xor
push
xchg
pop
inc
jno
or
imul
mov
or
inc
adc
inc
dec
or
enter
idivb
push
cs
imul
mov
mov
sbb
sbb
adc
pop
sbb
xchg
mov
loopne
icebp
in
cli
cltd
dec
push
repz
in
push
or
xor
stos
mov
sbb
aaa
mov
add
ds
pop
sub
into
mov
adc
aas
jbe
loop
cs
xor
adc
repnz
adc
or
adc
xor
sbb
inc
dec
shll
inc
mov
pushfw
add
adc
loope
outsl
into
test
adc
mov
fmul
adc
sbbl
enter
fadds
mov
xchg
daa
stc
sub
mov
sbb
mov
mov
nop
sbb
test
lret
pop
sti
lret
xchg
sbb
or
rolb
inc
mov
cwtl
cmpsb
add
xlat
jb
addr16
lock
push
mov
enter
aam
stos
jmp
icebp
mov
stos
repnz
and
add
fdivrl
aad
xor
inc
out
lods
stos
add
push
cmp
call
cmp
aas
into
ret
mov
stos
or
and
and
sahf
add
scas
xor
sub
sbb
add
cli
imulb
or
and
dec
adc
mov
inc
clc
mov
inc
insl
test
dec
aad
and
xchg
mov
icebp
je
enter
nop
xchg
or
lret
adc
mov
jns
mov
test
inc
xor
mov
mov
stos
popf
jmp
mov
sub
cmp
jns
out
mov
stos
inc
inc
insb
or
loop
dec
imul
xchg
adc
sbb
jne
dec
leave
les
mov
xchg
or
sbb
push
bound
sbb
aam
andl
inc
add
push
andb
lods
movb
mov
enter
sub
push
or
mov
pushf
repz
inc
sbbl
fsubrp
lret
in
hlt
aam
xor
cld
xor
aam
adc
xor
dec
pop
add
cmpsb
sahf
or
mov
gs
or
lds
and
inc
dec
stos
stc
fsubrp
push
stos
iret
xchg
sbb
scas
push
add
mov
shlb
movb
stos
mov
sub
leave
or
cmp
aam
jle
xchg
scas
fucomip
je
push
fs
add
inc
repnz
or
pop
xchg
add
inc
add
test
aaa
rcrl
adc
dec
leave
pop
xor
shll
sub
in
imul
add
mov
test
jae
icebp
mov
sub
enter
mov
and
xor
and
push
ss
inc
mov
js
mov
inc
popa
push
push
ret
sbb
aad
mov
adcl
shlb
cltd
or
jp
sub
daa
xchg
fists
mov
or
jle
jecxz
lret
xor
mov
popf
xor
push
shrl
jl
inc
negl
push
iret
pop
inc
call
inc
or
lret
and
sahf
pop
jge
lods
outsl
fsubs
test
jno
scas
jbe
mov
or
icebp
cmp
mov
cmpsb
jns
pop
in
jle
scas
xchg
inc
decl
xor
sbb
cmpsb
shll
pop
cld
pop
mov
push
sub
fisubrl
adc
push
fidivl
push
mov
or
push
inc
sub
sbb
mov
out
loop
js
clc
cmp
dec
or
stos
mov
or
das
add
mov
sti
inc
ds
adc
jle
jmp
pop
pop
mov
xchg
sub
cld
dec
sahf
push
das
dec
mov
cs
add
sbb
add
sub
cmp
sbb
fwait
orb
ja
push
scas
addr16
test
mov
mov
sub
out
jbe
in
xor
sarl
in
pop
loopne
sti
in
into
and
add
int
pushw
mov
lret
pop
lods
std
insb
fistps
or
add
mov
sbb
int
in
andb
fs
stos
add
pop
push
fildl
or
mov
xor
jge
lcall
and
scas
fisubs
mov
cmp
push
dec
mov
shrb
xor
xchg
jnp
and
mov
xor
xchg
cmp
scas
rcrb
scas
pop
int3
popf
sub
jge
inc
mov
mov
popf
adc
inc
inc
sti
or
icebp
test
sbb
mov
push
cs
pop
jns
add
jge
adc
inc
mov
imul
int
jecxz
sbb
out
sahf
mov
sti
pop
xor
shll
adc
imul
mov
stos
scas
nop
data16
pop
lods
xchg
jg
mov
iret
call
pop
push
mov
fadd
iret
add
sbb
imul
sub
cmp
sbb
jecxz
movb
cmpsl
das
jmp
xchg
jb
insb
setg
pop
jnp
std
add
xor
inc
mov
ret
test
dec
mov
xchg
in
ret
and
add
cltd
daa
sahf
lcall
xor
mov
dec
imul
test
ljmp
mov
sbb
cmp
in
jnp
pop
lea
push
hlt
adc
push
xor
jmp
int3
arpl
pusha
fxch
jbe
icebp
js
test
mov
add
push
test
push
ljmp
cmpl
ret
add
mov
inc
sub
dec
frstor
repz
mov
les
aad
pop
sbb
push
mov
popf
sti
pop
lods
ljmp
test
sub
jne
cmpl
lret
inc
push
sub
subl
sbb
ret
adc
mov
and
cmpsl
je
inc
jnp
inc
add
or
sbb
subb
in
rclb
sti
jae
ss
jl
and
rolb
call
mov
les
lret
mov
add
insl
out
cmp
jne
sub
and
jl
bound
decl
push
rclb
cmp
xor
lahf
movsl
mov
in
mov
xchg
ret
insb
mov
jb
sbb
sub
inc
cmp
test
lods
and
or
test
adc
int
scas
mov
stos
imul
push
mov
test
out
pop
outsw
lods
xchg
in
mov
push
jmp
jo
xchg
add
inc
iret
pop
push
rcrb
xor
add
aam
mov
xchg
insb
shlb
pop
ja
fidivl
adc
ss
in
in
fmull
scas
dec
and
cmp
xchg
or
mov
cs
std
insl
lcall
das
sbb
into
repnz
jbe
sbb
dec
sti
cmp
jg
adc
outsl
lret
fmul
cmpl
dec
ljmp
xchg
cmp
fmul
rcrl
sbb
orb
out
cmp
push
push
and
jecxz,pt
mov
data16
leave
fimuls
data16
sub
dec
mov
add
dec
push
jge
dec
leave
push
test
adc
cli
insb
sbb
push
xor
ret
or
lea
out
adcl
and
rol
js
call
movsl
loop
xchg
cmpsl
sbb
or
or
sbb
or
cmp
mov
roll
pop
jae
mov
dec
daa
int
xchg
cmpsb
cmp
mov
dec
push
jmp
add
add
dec
test
repz
mov
add
mov
sbb
lahf
and
int3
mov
test
pop
lret
loope
inc
pop
sub
mov
mov
mov
push
push
inc
cmp
fmulp
inc
jnp
inc
push
movsb
out
inc
xlat
mov
ja
movsb
mov
test
mov
jle
lods
movsl
ss
mov
aad
insb
adc
test
insb
sub
sub
cmc
or
or
out
fisubrl
lods
xor
int3
mov
add
add
sahf
stos
mov
push
cmp
xor
cmpsb
shl
inc
clc
fsubrl
out
lods
repnz
ds
fisubrl
int
fldcw
add
or
xor
lcall
jnp
adc
xor
or
add
mov
aad
in
ret
cwtl
cmp
loopne
xchg
mov
stos
iret
add
into
add
adc
mov
imul
out
dec
cmpsb
adc
mov
icebp
scas
fdivrs
mov
xor
dec
add
in
or
jg
and
mov
popl
pop
pop
and
fstpt
sahf
dec
lret
orl
ja
int3
dec
jle
test
adc
sub
xchg
jns
and
stos
cmp
int3
push
pop
test
pop
test
pop
pop
test
sub
jmp
popf
mov
push
inc
cli
sub
leave
call
sub
push
cmpsl
inc
insl
sbb
push
cwtl
xchg
iret
into
aam
insb
dec
or
jmp
mov
jne
fcmove
pop
repnz
mov
bound
data16
ret
or
add
dec
scas
mov
add
or
or
jecxz
movsb
enter
or
xor
xchg
int
add
inc
jl
sub
sahf
in
movsl
dec
fadds
dec
sahf
push
mov
or
movsl
scas
js
jp
or
std
ret
outsb
pop
dec
enter
cmpl
fisubl
loopw
dec
fidivl
fcoms
push
jno
xor
aaa
lret
push
movsb
jne
push
bound
icebp
xor
test
inc
ret
sbb
or
add
mov
in
call
xchg
jne
mov
aad
out
or
dec
pop
or
mov
or
xchg
addr16
in
add
les
sarb
xor
mov
xchg
push
dec
cwtl
in
mov
ret
add
cmp
sbb
pop
jbe
pop
fdivs
push
daa
js
mov
int3
loop
sbb
loope
mov
movsl
lret
leave
sub
sub
pop
or
popf
into
xor
insb
mov
xor
nop
ret
stc
lcall
pop
aas
ret
mov
cld
pop
add
or
repz
xchg
pop
sbb
sub
rorl
jo
in
shll
nop
mov
jecxz
repz
xor
out
jmp
mov
jnp
or
stc
fbstp
jne
fsubs
inc
fbstp
pop
or
xor
push
or
cmp
cmp
sub
popa
mov
lods
bound
jle
add
xor
dec
mov
cmp
adc
aam
jecxz
jle
pop
test
outsl
out
cmp
and
les
pop
dec
jmp
push
fistpl
pop
sbb
mov
fwait
dec
out
jmp
or
dec
arpl
pop
mov
and
xor
push
inc
cmp
fdivl
add
clc
cld
ret
cld
dec
xchg
xchg
cmp
jnp
push
loopne
scas
mov
test
pop
or
add
jecxz
adc
hlt
cmpsl
shlb
push
jg
lret
or
arpl
sub
cli
jbe
and
movsl
or
jnp
add
push
arpl
cmp
jl
xchg
sbb
stc
mov
push
int3
or
jns
and
sub
lods
mov
push
lahf
jns
mov
repnz
ret
lret
mov
aam
push
fdivrl
mov
loopne
or
xchg
dec
xor
mov
icebp
push
aaa
jge
repz
sbb
cltd
mov
out
sub
cmp
inc
xor
stos
and
adc
clc
xchg
cmpsl
hlt
cmp
int3
mov
and
fildl
clc
xchg
scas
add
call
inc
cmpsl
xor
push
xchg
or
pop
insb
mov
sbb
ret
test
xchg
scas
lods
add
sub
aam
sub
inc
dec
and
lcall
mov
dec
loop
test
xor
mov
xor
cld
xchg
std
lret
add
test
or
jp
hlt
adc
add
repnz
inc
dec
xchg
dec
scas
stc
mov
pop
mov
ljmp
push
std
pusha
sub
sarl
icebp
or
mov
sub
addb
inc
sahf
pop
movsl
xchg
dec
orl
or
xchg
mov
fucomi
mov
mov
xchg
addr16
das
sti
dec
cs
adc
and
test
int
jle
or
lret
pop
fisubs
xlat
lock
sub
lret
imul
and
fdivr
loop
cli
add
ljmp
sti
hlt
stos
sahf
fs
hlt
movsb
stc
in
lods
push
daa
sbb
out
orb
cli
divb
mov
push
cmp
in
hlt
adc
dec
daa
or
mov
out
add
sar
enter
pop
jmp
pop
test
stos
inc
add
push
mov
dec
dec
add
jno
ret
add
pusha
or
push
imul
mov
or
jbe
push
inc
icebp
inc
clc
prefetch
mov
add
push
scas
jae
jne
stos
jne
std
jnp
add
dec
mov
outsb
enter
xor
push
pusha
mov
xchg
sti
jnp
imul
out
mov
cs
inc
adc
mov
jnp
popa
roll
cli
inc
insb
repz
movsb
ds
lea
push
mov
pop
mov
pop
inc
pop
jbe
inc
aam
adc
out
xor
sub
aad
orb
dec
dec
jae
movsl
outsl
xchg
xor
mov
dec
icebp
ljmp
iret
inc
hlt
add
or
cmpsl
adc
ret
pop
or
mov
mov
sbb
or
jl
daa
imul
lahf
mov
dec
jmp
cmp
test
jl
pop
inc
and
hlt
shlb
dec
test
jmp
shlb
and
enter
dec
jge
fisubrs
popl
mov
add
subl
jp
sub
mov
insl
mov
in
ss
aas
aam
jmp
lcall
jmp
cmp
inc
add
clc
lret
inc
dec
inc
stos
scas
repz
add
adc
lret
mov
sub
cld
mov
cmpsl
shrb
sti
mov
sti
pop
and
push
jbe
fstl
stos
sub
mov
cmpsl
xchg
xchg
inc
or
xchg
cld
mov
ret
adc
lods
aam
test
inc
mov
cmp
cli
addr16
pop
cmp
int
test
mov
sbb
insl
test
xchg
out
scas
jae
adc
add
pusha
cmc
es
xchg
fxch
jge
xlat
sbb
fistps
pusha
sti
push
jle
scas
inc
push
xchg
dec
ret
das
lret
add
mov
in
lods
paddusw
stos
xchg
movsl
adc
add
xor
or
inc
testb
int
add
add
icebp
popf
push
or
add
data16
ljmp
xchg
xchg
fldenv
sti
add
hlt
es
fucom
les
sbb
jo,pn
fisubrs
je
fbstp
lret
mov
movb
mov
adc
adc
movsl
enter
inc
mov
in
mov
mov
mov
imul
cmpb
pop
sar
sub
dec
inc
add
ret
adc
or
xchg
insb
les
mov
mov
or
add
push
in
jge
add
sub
cld
xchg
push
je
enter
or
hlt
sub
add
or
xor
cmp
xor
mov
push
and
imul
push
fwait
inc
add
repz
mov
les
and
cli
adc
test
inc
ret
fisubs
cwtl
mov
mov
addb
adc
xor
loop
xor
mov
cmc
int
mov
add
pop
mov
scas
insl
pop
add
xor
pop
int3
mov
xchg
inc
cmp
sysret
jge
dec
cmp
call
lahf
cld
popfw
lods
sub
or
cmpsb
dec
xor
mov
ret
dec
nopl
cmp
sti
mov
movsl
push
lret
xchg
mov
and
mov
addr16
or
les
inc
jo
push
ds
jmp
mov
test
pop
push
cwtl
or
fdivs
push
fwait
add
adc
adc
pop
inc
insl
shrl
sahf
nop
test
in
push
rolb
or
lods
icebp
in
cld
dec
jge
adc
mov
nop
shr
add
adc
cmp
addr16
shl
stos
push
sbb
out
loop
add
pop
and
xor
push
fwait
sub
sbb
sub
mov
cmp
frstor
imul
sub
pusha
sti
inc
ret
rolb
add
sub
or
mov
ret
sbb
adc
daa
popf
sub
enter
cwtl
arpl
and
mov
mov
fcompl
sub
fs
loop
jnp
out
fldt
mov
sub
add
push
das
jmp
lods
pop
testl
mov
sbb
aad
icebp
test
in
adc
jno
mov
ret
cmp
mov
int3
sbb
xchg
test
adc
popf
int3
lods
shlb
mov
dec
fistps
xor
xchg
push
inc
push
ja
xlat
sbb
sbb
stos
push
adc
iret
and
and
scas
pop
xchg
or
ja
cmc
repnz
scas
mov
push
mov
fimull
sub
xchg
jp
and
jmp
movaps
or
pop
sahf
sub
jno
out
sti
xchg
add
adc
jle
pop
pop
sti
popf
lea
pop
sbb
add
mov
sbb
add
aam
pop
mov
adcl
mov
arpl
sbb
out
inc
addr16
fidivs
iret
inc
mov
dec
sub
jnp
fsubp
dec
adc
xchg
jge
lret
mov
cmp
mov
and
fs
xchg
fdiv
fldl
test
dec
mov
lods
ret
pop
movsl
push
incl
int
lcall
into
jbe
sbb
inc
or
inc
sub
mov
int3
jmp
outsb
or
fs
sbb
mov
adc
enter
insl
push
mov
add
adc
or
lods
mov
stos
dec
push
mov
add
lods
in
mov
jle
cmc
pop
sbb
rolw
adc
xor
or
loope
add
jo
loope
ficomps
jns
jnp
jp
flds
mov
pop
or
rcll
ja
pop
sub
stc
int3
dec
in
mov
out
shl
sahf
and
dec
mov
movsb
ror
cmpsl
repz
sbb
int3
notl
cmp
xchg
mov
push
rorl
dec
fadds
test
or
sub
roll
insl
cmpsb
je
les
lock
int
call
cmp
fs
adc
mov
cwtl
push
push
inc
xchg
inc
call
das
insb
push
or
sbb
or
clc
movsl
sbb
js
inc
aas
and
sbb
inc
cmpsl
push
cmp
sbbb
lea
push
sbb
cli
iret
push
shll
jp
nop
stc
test
sbb
jg
inc
mov
xchg
pop
or
call
repz
mov
test
movsl
push
pop
pop
in
dec
in
mov
movsl
mov
and
xchg
or
sub
cwtl
scas
mov
add
fcmovne
or
mov
add
add
nop
ret
add
sahf
vshufps
lcall
pop
push
and
lds
in
mov
sbbl
loop
fcoml
insl
sti
mov
sub
inc
mov
xchg
fs
inc
push
inc
pushf
enter
in
adc
loop
leave
ds
xor
out
ss
rol
ret
add
push
fadds
fwait
jb
flds
cmc
xor
push
adc
cwtl
cmpsl
push
xor
nop
sbb
out
bound
mov
jmp
sbb
testb
mov
out
and
jae
cs
dec
fmulp
lods
ret
mov
je
ss
fprem1
dec
repnz
cmp
repnz
adc
mov
adc
xor
divb
int3
jle
fildl
sahf
add
cwtl
dec
ds
pop
lret
xchg
or
sti
out
ljmp
add
sbb
inc
cmpsb
ljmp
push
xchg
js
lcall
mov
jo
cs
js
lcall
nop
ret
clc
lret
mov
xchg
in
scas
jnp
xchg
mov
outsb
test
fwait
shrb
movsl
mov
in
cmp
jae
mov
jle
hlt
cmp
inc
dec
vpor
stos
call
push
cmpsl
sbb
mov
enter
ja
aaa
rolb
and
jmp
mov
pop
xchg
cmpb
xor
pop
jl
cmp
pop
cwtl
sub
in
mov
in
sbb
cld
std
push
cltd
add
lcall
sub
add
mov
mov
mov
shl
inc
mov
iret
enter
cli
shlb
dec
mov
fwait
mov
and
aam
arpl
mov
push
jle
xor
jle,pt
mov
inc
and
jecxz
xor
mov
aad
xor
xor
dec
xor
jae
or
stc
aas
push
or
or
aam
or
push
pop
outsl
fisubrl
mov
inc
rcrl
add
add
cmp
or
push
mov
xor
pusha
int3
neg
into
inc
mov
jge
je
jmp
jne
pop
sbb
pop
sbb
fildl
adc
mov
xchg
fcmovb
shll
in
rcrb
xchg
and
add
pop
pop
pushf
out
sbb
or
inc
sbb
call
iret
mov
xchg
jge
pop
mov
rorl
daa
inc
insb
ss
leave
jg
dec
inc
imul
sub
punpcklwd
fcoms
les
jbe
dec
aam
es
movd
xor
ret
mov
ret
add
cmp
jg
xchg
xchg
dec
adc
notb
leave
or
notb
nop
sub
out
jne,pn
fnclex
push
call
icebp
into
dec
out
icebp
mov
ret
cli
aaa
jl
xor
lret
jg
rorb
cmp
lret
shr
cmc
rcrb
adc
scas
ret
test
int3
movsl
mov
cmpsb
mov
lcall
xor
lret
test
sub
and
test
pop
stos
ficoml
ljmp
sti
repnz
mov
push
jp
out
pop
in
loopne
xchg
cmpsl
mov
xor
cmpsl
or
cmc
cmp
out
iret
mov
push
aaa
cld
icebp
xchg
adc
leave
out
loopne
insb
mov
add
scas
loopne
filds
and
mov
rcrl
stc
imul
xlat
std
and
inc
loopne
push
sbb
popa
pop
ljmp
add
or
pop
add
test
adc
imulb
es
ror
repz
cmp
mov
mov
sbb
jp
test
jp
inc
cld
aaa
pushf
push
xchg
add
and
mov
hlt
xchg
xchg
inc
or
jns
negb
mov
ret
popa
cmp
fiaddl
cmc
xchg
cmp
push
add
dec
out
jmp
inc
test
sbb
rcr
or
repnz
push
add
lret
arpl
mov
jnp
pop
inc
repz
repz
jp
pushf
mov
mov
mull
mov
fstps
lods
popa
jae
test
fdivr
leave
sahf
inc
cmpl
idivl
lods
in
cmpsb
sarb
addb
cmp
sub
xchg
xor
xlat
mov
aam
inc
xor
sbbl
bound
imul
ljmp
jmp
jecxz
add
adc
adc
repz
add
cld
lock
pop
sub
ljmp
pop
mov
pop
ret
inc
cwtl
push
jbe
imul
jmp
test
add
pop
sbb
test
push
add
adc
loop
jecxz
testl
loopne
adc
adc
out
ja
dec
pushf
sti
inc
cmpl
push
push
out
jl
int3
sbb
fidivrl
cwtl
xor
jg
jmp
adc
xchg
nop
lods
add
pop
hlt
in
or
jns
xor
es
xchg
in
cwtl
inc
mov
dec
and
cmpsb
data16
adc
fs
sti
xchg
and
jnp
lcall
adc
cwtl
cmp
add
lret
and
sub
adc
jno
pop
sub
loope
pop
pop
dec
mov
ret
push
push
cmpsb
sti
jg
jle
jl
pop
sub
je
aas
jl
push
rcl
and
call
and
dec
orb
enter
ljmp
imulb
sbb
popf
cmpsb
int3
mov
mov
in
jle
mov
pop
sti
or
dec
sahf
stc
mov
push
bound
arpl
or
lods
add
add
insl
or
int3
inc
pop
jo
sarb
add
and
adc
iret
mov
adc
movsl
sub
cltd
loope
dec
pop
arpl
xlat
jb
mov
dec
stos
xchg
xchg
cmpl
cmp
pop
enter
test
jge
mov
or
and
adc
adc
lock
or
aas
or
dec
lea
orl
mov
sub
movsb
out
fs
or
sti
loop
inc
into
xor
jno
ficoml
js
xlat
fcmovnb
inc
push
decb
add
jecxz
leave
cmp
sub
lret
jg
subb
rorb
add
add
jbe
lahf
cmpsb
xlat
add
inc
cmpl
ss
int
inc
loopne
and
std
jb
xorps
sub
dec
dec
mov
js
adc
mov
push
mov
fwait
and
adc
xchg
or
or
xlat
adc
mov
call
add
jecxz
stos
cmp
cmpsb
inc
loop
nop
sahf
insb
test
pop
mov
dec
das
mov
cli
xor
adc
test
lret
xchg
xor
ret
cmpsl
push
and
sub
mov
cli
sub
fidivrl
daa
sbb
mov
insb
movsb
clc
outsb
dec
mov
sahf
imul
push
stc
mov
fstpt
imul
xor
jle
repnz
ret
mov
adc
int3
mov
xchg
xchg
lcall
repz
push
iret
lods
jno
jb
sub
addr16
test
mov
add
pop
shrb
mov
mov
mov
push
mov
add
add
sub
cld
push
sbb
in
mov
sub
add
xchg
dec
xor
sbb
pop
inc
adc
inc
jnp
idivl
or
test
movsl
fisttps
inc
inc
ret
sbb
adc
xlat
xor
iret
mov
xor
leave
test
xor
leave
stc
xchg
adc
ja
mov
clc
orb
adc
mov
sub
or
mov
mov
out
mov
sti
xlat
push
cs
outsl
loop
ret
inc
js
stc
or
dec
loop
int
xor
xchg
lahf
pop
xchg
dec
out
and
xlat
cmc
daa
loopne
in
pop
mov
imul
push
es
jnp
cmp
lea
or
outsb
imul
push
sub
sbbb
fs
test
addr16
scas
sti
mov
or
orl
int3
push
mov
test
mov
sub
sbb
add
out
jmp
push
pop
mov
faddl
jns
popf
and
addr16
repz
or
stos
mov
sbbl
shrb
into
inc
mull
and
and
imul
dec
adc
enter
scas
in
fidivrl
outsl
xchg
mov
push
out
andb
adc
popf
mov
cltd
sub
psubw
js
nop
sbb
add
in
je
mov
jle
xchg
xor
mov
lcall
shrb
pop
jmp
lock
testb
jo
insl
dec
xchg
push
mov
pop
fwait
mov
es
pop
xor
loop
rcrl
fdivr
ror
jmp
sbb
or
adc
add
jb
in
sub
add
mov
cld
shld
push
sar
add
loop
cmp
test
xchg
repz
push
iret
repz
inc
repz
xchg
fsubp
pop
jge
out
pop
adc
pushf
sub
lret
cmpsb
dec
cmc
pushf
ret
inc
adc
je
mov
scas
and
iret
add
mov
push
and
xchg
out
inc
lret
or
inc
aaa
inc
enter
fldl
add
addb
jle
or
mov
lods
bound
lods
js
push
mov
mov
jmp
pop
out
lret
adc
mov
std
stos
je
ljmp
stos
dec
add
fists
loope,pt
call
sti
push
inc
adcb
in
pushf
adcb
int3
mov
inc
and
mov
sahf
sub
xchg
and
or
aaa
add
mov
stos
inc
push
rcrl
mov
movb
mov
add
fsubrl
and
jmp
mov
mov
fcomps
push
push
xchg
mov
movsb
das
or
mov
adc
in
mov
or
mov
cmp
cmc
or
xchg
pop
mov
lods
jle
in
xlat
and
mov
jns
or
mov
xchg
mov
mov
mov
leave
std
mov
les
cli
add
pop
mov
lea
sbb
lods
inc
and
adc
pop
andb
and
ret
mov
call
xchg
mov
js
les
lea
insb
dec
into
xor
and
lret
push
mov
out
outsb
daa
jg
sbb
lock
orb
icebp
add
push
bound
mov
push
int3
and
xchg
fmull
xor
popa
in
xchg
xchg
ret
mov
les
mov
inc
roll
add
jnp
or
test
xchg
ja
pop
cmp
insb
push
mov
jnp
test
mov
push
ret
aas
pop
pop
pushf
xchg
or
das
pop
sub
out
jp
enter
in
or
rcrb
mov
shl
dec
out
push
xchg
test
inc
jmp
sahf
inc
out
in
enter
popa
loope
push
or
mov
jg
ret
inc
mov
add
cmpsb
cmp
cltd
insl
stos
cmp
jmp
push
lock
cmp
push
sbb
adc
je
ret
into
std
jno
outsl
jecxz
jnp
mov
adc
fucom
jne
mov
fisttpl
ret
std
sbb
loop
inc
add
sti
ljmp
dec
fs
int3
xor
jle
cmovg
dec
bound
mov
in
fimull
sti
in
leave
in
cmp
icebp
push
mov
push
clc
test
or
shrb
push
sbb
jge
mov
cwtl
lret
fildll
cmpsl
cmpsl
jmp
jb
xchg
test
sub
movsl
dec
imul
lods
push
and
movsb
and
xor
hlt
dec
push
lret
add
xor
clc
sbb
inc
jbe
inc
dec
or
sahf
dec
fwait
xchg
or
push
bound
adc
loopne
mov
repz
sbb
jle
push
add
in
ljmp
mov
xchg
lds
dec
stos
ret
std
in
add
in
subb
movsl
test
sbb
sahf
sbb
mov
inc
pop
jle
rolb
movsl
jmp
cmpb
mov
int3
xchg
or
cmpsb
inc
mov
mov
mov
sbb
xchg
sahf
into
sbb
cmpl
fildl
or
jle
int3
sahf
or
ljmp
fsubrl
inc
sub
add
dec
mov
scas
enter
pop
or
out
shrb
dec
mov
sti
test
add
pop
pop
jp
or
sub
add
fwait
add
jmp
mov
std
lods
add
jmp
sub
rorl
out
repz
mov
mov
fs
scas
subb
int3
lods
mov
ds
daa
pop
sub
xor
les
pop
mov
lret
mov
rorl
pop
cmpsl
pop
movsl
roll
outsb
lahf
mov
jns
mov
or
push
repnz
in
stos
push
sahf
ss
add
hlt
movsl
test
fadd
inc
aas
into
repnz
sti
pop
test
adc
cld
in
aam
stos
bound
in
repnz
sbb
fstpt
sbb
and
rcl
cmpb
in
shrb
lret
scas
push
sbb
inc
add
pop
add
adc
jp
inc
sahf
dec
loop
cld
push
and
inc
test
addr16
outsb
mov
negl
xchg
push
cli
sbb
dec
loop
outsl
and
ljmp
jecxz
lds
cmp
cmp
enter
out
call
add
push
and
xchg
dec
xchg
adc
aaa
mov
lret
loop
pushf
mov
lret
popf
aam
jmp
sahf
in
or
xchg
loope
lret
dec
add
cwtl
cmp
add
or
pop
fwait
adc
mov
fists
mov
ret
and
movsb
movsl
arpl
ret
test
cmp
cltd
dec
sahf
enter
enter
jns
fisubs
aad
add
push
loope
jmp
fucomp
inc
mov
xor
mov
jge
dec
popf
mov
iret
lret
mov
pop
movsl
push
mov
sub
xchg
jmp
and
mov
mov
push
lock
sub
and
out
pop
inc
jbe
in
or
mov
addl
lods
sub
or
roll
jmp
test
cmp
add
mov
adc
dec
mov
sub
add
mov
or
pusha
lret
jg
dec
sub
jno
roll
repz
out
sarb
mov
mov
jae
cmc
lret
js
jmp
int3
fimuls
add
adc
mov
adc
cmp
out
jmp
sbb
js
inc
scas
sbb
sub
adc
pop
sub
xor
fstl
popf
gs
dec
add
mov
pop
or
into
repnz
mov
and
push
jnp
xlat
jecxz
or
xchg
les
sbb
mov
mov
fimuls
enter
fdivrs
inc
sub
outsb
jle
cmpsb
sahf
xchg
sbb
adc
lcall
es
mov
int3
cld
jne
sub
jo
jmp
inc
enter
add
pop
sub
fsubl
or
mov
filds
mov
jb
or
clc
lret
cmpsl
xchg
jo
mov
out
push
adc
fldt
orl
mov
adc
arpl
add
mov
sti
rcrl
mov
push
jmp
mov
sbb
pop
scas
pop
sub
adc
add
adc
add
call
data16
test
scas
xchg
sub
movsl
mov
lock
xlat
push
and
les
or
jne
sbb
inc
leave
sub
aam
insl
insb
adc
mov
sub
popf
rolb
into
push
add
xor
adc
movsl
jno
jne
lcall
or
mov
lods
ds
lds
pop
push
cmpl
push
sbb
leave
jge
adc
inc
sahf
mov
and
out
pop
enter
mov
mov
sahf
xchg
or
hlt
or
stos
and
lock
daa
dec
ret
popf
sbb
mov
jb
adc
pop
push
nop
gs
adcb
xchg
jl
pop
stos
cmp
mov
sub
test
mov
int3
pop
sti
jmp
mov
ret
mov
movsl
xchg
imul
jne
sbb
inc
lods
sti
inc
int3
mov
call
inc
pop
int3
fmull
cltd
inc
dec
sti
or
mov
jecxz
in
push
add
stos
pop
or
loope
movb
or
adc
into
cwtl
cld
daa
xchg
les
mov
std
mull
push
cmp
xchg
inc
andb
push
or
mov
mov
in
imul
scas
lods
mov
or
call
xlat
fwait
jge
cmp
cmc
mov
dec
mov
ficoms
js
fsubs
cmp
jmp
xorl
push
cli
adc
or
sarb
aad
insb
adc
cltd
int3
mov
in
pop
push
cmp
movsl
push
inc
xchg
daa
or
adc
imul
popa
in
xor
push
or
fmull
out
inc
inc
insl
pop
or
sub
rolb
loop
les
scas
inc
xor
lret
lret
cmp
ljmp
les
jg
xor
xchg
in
std
add
mov
or
sarl
insb
dec
mov
cmp
sub
fldl
jbe
in
cmp
jecxz
stc
test
test
das
int
cmp
insl
push
in
adc
mov
jnp
sub
mov
and
jnp
arpl
test
movsl
cs
ret
xchg
push
xchg
mov
pop
cld
fcmovbe
add
inc
adc
mov
xchg
das
sahf
fisubrs
popf
mov
xor
out
subb
pop
cmp
ret
fisubrl
aam
daa
add
fdivrs
xor
jmp
mov
pop
fwait
sub
jl
or
lods
stos
loope
xchg
push
sbb
adc
pop
inc
jp
out
jle
roll
lods
pop
or
xchg
cltd
fmul
sbb
or
and
or
jne
or
inc
xchg
sub
in
dec
sub
sarb
movsl
and
cmp
mov
inc
loopne
stos
push
push
push
and
inc
nop
add
jl
jle
es
pop
ljmp
or
xchg
mov
imul
push
mov
mov
or
jb
shld
sar
test
sub
test
mov
call
out
rcll
lods
je,pt
enter
lea
lock
mov
inc
mov
dec
mov
sub
sub
push
jge
aad
jb
mov
insb
xor
aad
je
scas
xchg
dec
xchg
or
mov
add
add
xor
xor
mov
sti
ljmp
lret
sbb
add
or
xchg
cmp
popa
int3
cmp
sbb
lahf
cmp
cltd
inc
test
andb
jae
add
mov
call
ret
push
ja
js
pop
xchg
and
inc
mov
outsl
push
gs
sub
or
idiv
in
call
dec
lahf
mov
adc
or
lahf
sub
sub
dec
sbb
aaa
jns
lcall
or
and
xchg
sti
mov
xchg
imul
inc
lcall
push
fs
fs
push
cmp
pop
ljmp
mov
add
out
jge
test
icebp
orb
mov
push
cltd
fwait
push
xchg
jmp
cmpsb
push
insl
js
fwait
push
adc
hlt
stos
ror
ret
leave
adc
es
jnp
fcompl
add
dec
sbb
mov
xchg
jg
add
je
repz
sahf
xchg
out
lea
jae
in
test
inc
scas
mov
movsb
sahf
jge
add
push
stc
lds
fcompl
in
insl
pushf
insl
test
sbb
cmpsb
sub
mov
or
jle
out
or
popf
ret
pusha
mov
sub
push
add
sbb
cmpb
and
xchg
mov
sbb
lods
in
or
lods
sti
push
lret
inc
and
dec
decl
hlt
ljmp
movsl
xchg
scas
push
pop
mov
push
or
decl
xchg
leave
mov
ja
ds
inc
add
cli
sub
cmovle
mov
mov
dec
cli
subl
sub
or
add
xlat
jle
negb
adc
leave
test
clc
pop
fwait
sbb
cwtl
movsl
ljmp
pop
addr16
lret
sti
inc
lcall
mov
sahf
jb
jnp
outsb
negb
popf
and
int
insl
nop
add
pop
sbb
lret
dec
cmp
pop
imul
push
jno
adc
pop
or
xor
stc
scas
pusha
sub
add
push
rcrb
test
xor
cmp
xchg
lcall
xchg
xchg
mov
out
cltd
mov
push
cmpsb
xorb
xchg
sub
cmpsb
and
pusha
mov
shlb
push
push
int3
jp
xchg
push
dec
sub
xchg
ret
shlb
sub
lret
mov
out
sub
in
and
icebp
movsl
push
pop
mov
jae
cmp
movsl
jg
mov
add
jp
xor
ja
repz
push
dec
mov
and
inc
rcl
lods
mov
sub
jg
push
jge
dec
and
mov
sbb
add
lea
jp
and
stos
cmpsl
adc
jle
jbe
push
xor
xchg
popf
jbe
cmp
xchg
imul
lea
clc
scas
pop
ja
mov
mov
ljmp
adc
adc
das
data16
inc
call
imul
imul
pushf
rclb
push
xchg
jecxz
movl
fwait
mov
dec
aam
fisttps
in
out
es
fwait
cli
push
stc
rcr
sub
sbb
mov
addr16
add
cwtl
xor
push
aam
sbb
pop
je
fxch
cld
or
je
xchg
add
sub
popf
adc
stc
call
add
cmp
popa
pop
jl
push
jle
lds
push
cwtl
sbb
pop
les
in
lret
xchg
cmp
jnp
sub
mov
fisubl
pop
dec
fcmovnb
insb
push
and
test
inc
in
and
daa
out
insb
out
push
sbb
pop
movsb
sbb
stos
jo
jle
inc
push
xchg
inc
fcomp
or
lea
pop
cmp
or
sti
addl
in
xor
jne
movsl
ljmp
ds
int
adc
rcrl
popf
cs
cld
xor
cmp
lock
out
sti
xchg
sub
inc
adc
lods
in
add
xchg
push
repz
les
fsubrl
sub
xor
sti
andl
add
mov
stc
rcrb
pop
dec
push
jecxz
out
sbb
xchg
nop
and
inc
and
idivb
mov
inc
ret
sarl
pushf
push
fidivrs
sbb
sub
js
or
adc
leave
rol
inc
jmp
dec
mov
jp
adc
sti
bound
xchg
dec
jnp
mov
outsl
call
test
sub
je
cmp
push
imul
in
cld
or
repz
sti
mov
cmpsb
shlb
sbb
in
jmp
test
push
xor
mov
pop
mov
jle
icebp
insb
cmp
inc
scas
dec
mov
inc
repnz
jb
push
out
dec
movsl
scas
dec
sub
xchg
add
sub
fwait
and
sar
mov
mov
lret
xchg
jg
sbbl
ret
mov
or
sahf
xor
adc
adc
call
sbb
push
mov
dec
or
xor
mov
ljmp
pop
cwtl
add
cmp
push
jo
ret
int3
aam
or
jb
scas
pop
pop
dec
cld
movsb
mov
loop
inc
adc
mov
mov
hlt
jns
mov
dec
cmp
add
loop
add
sahf
pop
adc
sbb
sbb
popa
mov
lea
and
jecxz
inc
in
dec
or
xchg
pop
jnp
xchg
faddl
and
stos
xchg
es
pop
pop
mov
in
cld
test
xchg
shrl
rorl
sbb
jle
adc
jecxz
test
push
xor
jne
adc
inc
out
sub
js
and
mov
outsl
push
imul
or
addb
iret
fsub
sub
shrl
mov
cmp
lret
imul
dec
xchg
cmpsb
das
out
push
pop
sbb
adc
or
pushf
and
push
fwait
push
call
sarb
jo
xchg
repz
jmp
adc
mov
dec
mov
fsts
shrl
or
adc
fdiv
inc
lds
test
fwait
add
mov
push
lret
int3
cmp
push
fmul
cmp
into
xchg
jne
scas
mov
xchg
repz
xchg
stos
jg
cmpsl
push
jmp
jecxz
ret
decl
sub
mov
cwtl
stc
or
mov
dec
or
arpl
add
or
subl
imul
mov
out
lret
pop
jg
lret
iret
pop
shlb
cmp
dec
cmp
adc
inc
stos
pop
adc
lods
rcr
sbb
mov
cmc
fsubl
dec
loop
ret
cmp
ja
in
inc
lret
faddl
in
enter
push
mov
mov
ret
add
subl
cmc
add
sub
xor
xchg
sti
faddl
stos
mov
push
test
ret
ljmp
xor
xchg
cmp
inc
mov
movb
push
ds
adc
cmpsl
xor
repz
or
xor
adc
mov
fbld
mov
and
scas
or
loop
inc
jne
clc
lods
adc
lea
mov
cmp
test
adc
mov
lods
jmp
or
imul
fs
loope
pop
into
incl
hlt
cmp
aam
jg
pushf
stos
cmp
adc
or
mov
stos
mov
pop
lods
jne
pushf
iret
xchg
add
or
in
rep
fmuls
int
jp
dec
jo
xlat
mov
mov
ror
fsubp
dec
roll
sbb
dec
ret
pusha
or
fs
adc
cwtl
and
ret
xor
push
fdivrl
mov
push
jns
js
xchg
out
pop
bound
or
or
bound
xchg
rorb
stc
mov
lea
je
es
dec
mov
or
xchg
loop
mov
adc
mov
cmp
mov
aaa
add
xor
pop
pushf
jecxz
int3
enter
dec
adc
aam
sub
test
mov
cld
push
mov
rolb
scas
jne
push
daa
inc
push
in
shr
pop
lea
lea
xchg
and
fwait
push
adc
outsb
cmpsl
jno
test
sbb
scas
add
test
cmc
push
cmp
aad
movl
out
jp
push
orb
mov
mov
mov
inc
or
cmpl
sete
scas
mov
aaa
or
jge
cltd
push
aam
mov
xchg
loope
jns
adc
test
loop
lret
jb
add
jge
lret
adc
and
add
scas
scas
mov
mov
jns
fsubs
dec
or
pop
stos
js
loope
lea
popf
jp
mov
add
dec
adc
repz
out
xchg
iret
rclb
xchg
and
jae
aaa
mov
andb
movsl
repz
inc
sti
xchg
and
sub
cs
inc
aam
scas
mov
xchg
xchg
mov
add
cwtl
pop
adcb
mov
adc
pop
push
adc
addl
cmc
and
jns
sahf
adc
jle
cli
out
or
xchg
je
mov
xchg
insl
sbb
loop
xchg
jmp
or
sti
add
dec
insl
or
mov
xchg
mov
xchg
fs
pop
insb
ret
inc
lods
in
adc
les
dec
or
mov
xor
jne
das
mov
das
push
cmp
push
or
sbbl
in
cltd
hlt
ret
sarl
cwtl
mov
aam
les
pop
mov
stos
leave
mov
cwtl
insl
stc
arpl
fisttps
dec
in
dec
xor
lods
cmc
jp
sub
push
jle
mov
andl
mov
test
pop
push
xor
pop
dec
sbb
mov
sub
xchg
cmp
cli
test
or
pop
mov
lcall
add
scas
test
push
add
testb
les
mov
clc
cld
insl
xchg
imul
repnz
push
jecxz
mov
mov
add
mov
iret
out
fimull
xor
xchg
in
inc
mov
std
or
push
mov
cmp
push
add
mov
aas
inc
pop
dec
or
in
xor
scas
je
iret
cs
xchg
rorb
pusha
xor
dec
lock
fildll
push
pusha
push
sub
xchg
pop
xchg
jle
or
sub
orb
lods
fildl
int3
sbb
or
lods
lret
jge
mov
adc
rcrl
loope
rep
nop
call
jle
outsl
xchg
gs
repnz
movsb
mov
andl
or
pop
push
cli
lahf
jle
or
movsl
imul
pop
stos
rolb
sahf
cmp
or
out
nop
loope
xchg
sub
aaa
mov
cwtl
jne
cmp
xchg
hlt
movzwl
ret
test
or
sahf
loop
xchg
pop
xchg
mov
lcall
or
out
cmpsb
jne
add
faddp
and
clc
or
pop
imul
or
out
icebp
cld
mov
into
or
mov
cmp
mov
sub
hlt
scas
mov
bts
popa
and
fists
cmpb
cs
mov
sub
js
lret
fmull
scas
cltd
sbb
ficoml
adc
push
jmp
mov
mov
cmp
roll
sub
pop
fldl
shrl
fs
in
daa
fcoml
jmp
xorl
out
or
test
mov
xchg
mov
int
push
sub
jae
pop
mov
jns
cmp
jmp
in
lret
cmp
stc
xchg
and
lods
mov
push
push
xor
cmp
jecxz
shrb
mov
jecxz
mov
imul
sbb
iret
fs
add
inc
jne
adc
cmp
fucomp
xor
dec
or
lret
xchg
fisubl
sub
test
movl
iret
or
add
lret
mov
sub
jmp
in
lret
cmp
and
sbb
daa
repz
repnz
test
or
push
add
sti
lods
add
sbb
mov
inc
mov
cmp
jb
mov
dec
inc
lahf
mov
xor
in
orl
xchg
pop
and
mov
jg
daa
or
jmp
mov
sbb
mov
adcl
fdivrl
push
xor
sbb
add
loop
adc
sbb
add
adc
xor
sbbl
inc
xchg
int
or
inc
fildll
fsubrl
imul
mov
cltd
mov
pushf
mov
dec
adc
test
loop
enter
ret
mov
out
pop
sbb
mov
mov
sub
shrl
cmp
or
loop
mull
mov
jmp
xor
out
and
enter
les
call
sub
daa
mov
rorb
les
add
and
gs
das
mov
dec
mov
adc
sbb
inc
repz
inc
cmpsb
push
enter
add
lret
adcl
rcrb
sti
mov
pop
jae
stos
pop
movsb
int
iret
fsubs
in
or
addr16
push
add
ds
incl
cmp
adc
test
adc
mov
mov
scas
or
negb
mov
push
cld
mov
sarb
mov
outsl
pop
sub
dec
pop
mov
xor
inc
sub
les
xchg
popf
dec
adc
lock
and
jmp
lret
loope
push
fwait
mov
rorb
or
movsl
xlat
in
cmpsl
jecxz
pop
int3
push
bound
mov
sbb
js
mov
or
loop
cld
sub
jmp
and
adc
lret
cld
shlb
jae
nop
pop
jns
mov
add
jno
loop
pop
jo
lock
inc
and
inc
repz
add
test
and
cmp
adc
mov
xchg
jns
sub
or
jl
jae
stos
js
mov
xor
fmull
mov
add
sbb
cld
cmpsb
sahf
cmp
and
jmp
bound
jnp
pop
sbb
shlb
push
add
daa
xchg
jecxz
adc
ret
hlt
icebp
inc
jmp
push
xchg
pop
mov
pop
push
jg
vaddsubps
xchg
mov
cld
push
jnp
dec
xor
add
lock
imul
push
loope
sub
mov
jge
adcb
cld
jne
xchg
mov
xlat
add
imul
jmp
or
je
or
pop
add
cmp
lret
inc
loop
xchg
lahf
adcl
cmpb
pop
mov
adc
and
push
jo
ret
fwait
popa
inc
jns
mov
in
loop
aas
push
insb
nop
fs
add
and
test
xorl
dec
sbb
pop
jmp
in
movsl
and
mov
movaps
ret
aad
bound
mov
mov
orb
mov
lret
dec
out
daa
cs
daa
or
xchg
sub
outsl
js
or
mov
mov
sbb
in
xchg
in
insl
push
cmp
xor
mov
push
loopne
xchg
jns
cmpsl
jecxz
sbb
pop
scas
pusha
sub
or
orl
add
fcmove
sub
das
jle
fisubs
faddl
cmp
cmp
jmp
mov
push
jmp
add
add
andl
and
and
add
lds
push
jmp
jl
insl
adc
xchg
add
lds
xchg
in
pusha
sbb
stos
lret
imul
jmp
push
jmp
js
lds
add
push
lods
cmp
add
sahf
and
pop
gs
pop
mov
mov
push
pop
shrb
in
or
cmp
jmp
cmp
fadd
mov
imul
movsl
xor
mov
sub
loopne
dec
mov
bound
rorb
xchg
push
andb
adc
mov
xchg
ficomps
push
inc
in
lret
orl
out
and
test
lret
jnp
js
sbb
lock
fsubl
enter
lea
adc
sbb
mov
pop
sub
repnz
push
pop
mov
pop
mov
cli
add
sbb
sbb
mov
jecxz
add
movsl
je
push
sti
or
add
scas
adc
mov
or
and
int
and
cmpsb
inc
mov
ljmp
or
in
jmp
and
lods
jle
push
outsb
sahf
inc
cli
or
inc
call
aas
test
loop
movsb
roll
mov
or
ds
aas
ret
add
jecxz
fsubs
adc
ret
inc
and
daa
imul
js
jge
lret
lret
sub
dec
fsubrs
mov
mov
inc
xchg
ret
sbb
pop
adc
push
frstor
cld
xchg
fistpl
sti
xchg
in
xchg
or
les
ret
xor
sbb
cmp
inc
add
into
pop
xchg
das
movsb
cmp
cmp
sub
jecxz
fcoml
fnstcw
insl
fsubrp
cmp
daa
stos
and
mov
push
or
mov
xchg
call
call
mov
int
jp
cmp
dec
add
add
lret
outsb
movsl
cld
int3
mov
sbb
cmpsl
andl
or
jge
call
jge
sbb
in
add
jge
add
or
push
mov
aaa
adc
les
loopne,pn
arpl
jmp
cwtl
pop
arpl
adc
rorb
out
inc
mov
add
adc
test
nop
les
and
inc
inc
jecxz
or
enter
es
ret
into
in
es
and
lcall
lret
cli
push
dec
insb
mov
and
jns
sbb
test
sub
outsb
fldenv
daa
or
cmp
ljmp
dec
loop
in
mov
jecxz
out
mov
in
jle
daa
pshufw
loop
iret
outsl
pop
mov
mov
rorb
fiadds
add
fcomi
js
or
mov
shlb
mov
nop
ret
mov
pop
add
js
aam
stos
test
mov
or
xchg
pop
sbb
mov
mov
xchg
enter
push
adc
xchg
jg
cli
call
fisubrl
stos
mov
or
pop
push
fbstp
or
xchg
sbb
pop
add
push
out
push
push
clc
or
sbb
sub
and
lock
out
loop
push
in
in
xchg
mov
ret
or
cmp
jge
mov
mov
mov
or
lcall
scas
xchg
les
xchg
adc
pop
mov
lods
sub
jge
push
mov
dec
mov
xchg
mov
movsl
xor
sahf
dec
jbe
ja
loope
xchg
sahf
lods
mov
nop
add
adc
and
push
or
sub
repnz
mov
push
mov
lods
pop
in
push
cmp
data16
test
mov
push
in
dec
cmp
cmp
loop
adc
shlb
pushl
lret
jle
inc
push
and
popf
ror
jp
push
stc
cs
jne
mov
mov
scas
loope
push
rcl
lcall
adc
sti
jmp
adc
scas
push
loop
or
int
jmp
daa
xor
jne
add
mov
or
std
cmp
loope
aam
movsb
std
nop
sbb
or
mov
arpl
adc
jle
ljmp
or
mov
sti
lods
pushf
add
je
mov
mov
mov
loop
call
jne
nop
mov
add
sub
xor
leave
add
jnp
ds
xchg
jnp
dec
call
add
add
jg
dec
pop
push
punpckhdq
sbb
decl
mov
in
adc
aas
fwait
pop
push
mov
mov
in
push
sbb
mov
mov
xchg
xchg
ret
add
mov
insb
sbb
cmp
mov
out
xchg
pop
orb
scas
or
push
dec
aad
cli
pushf
dec
xor
sbb
add
stos
ja
out
push
mov
inc
xor
adc
xor
lret
lret
sub
adcb
test
ret
in
sbb
jle
les
push
mov
aaa
loop
fdivrs
adc
mov
inc
in
push
inc
inc
mov
test
cli
push
lods
and
add
in
mov
scas
lcall
sti
adc
mov
scas
enter
into
in
cmpsl
lods
mov
push
popf
gs
rorl
and
adc
mov
mov
mov
ss
xor
xor
repnz
lock
andb
fcmovne
rol
jae
dec
jo
imul
adc
fs
jl
or
out
das
pop
enter
lods
stos
dec
int3
into
push
mov
jl
push
fsubp
jns
mov
sub
lock
dec
cmpsl
ret
loope
movsb
pushf
or
mov
sub
mov
bt
hlt
aad
sti
push
lcall
mov
or
jecxz
or
and
xchg
loopne
mov
int
dec
in
xchg
int
rcl
mov
dec
or
sub
pop
cmp
scas
mov
movsb
and
gs
xor
or
mov
ret
decl
out
jne
cld
jne
mov
xchg
testl
xchg
int
dec
sbb
push
mov
sub
shrl
and
popf
dec
and
jbe
aaa
mov
add
js
or
or
cmp
sti
cli
int3
push
imul
insb
and
mov
lea
xchg
or
jecxz
inc
dec
imul
out
xchg
cmpsl
lret
bnd
mov
mov
cltd
jle
loopne
add
pop
mov
jmp
adc
dec
mov
dec
cmpsl
xlat
xchg
js
xchg
icebp
mov
xor
mov
ret
sub
decb
mov
icebp
stos
adc
fs
mov
sbb
in
leave
ljmp
mov
jno
int3
scas
and
cmp
int3
fiaddl
fs
or
add
add
cmp
sbbl
adc
mov
mov
mov
test
adc
ret
and
hlt
cmpsl
xchg
lea
pop
dec
add
sub
cmpb
stos
sti
int3
movsb
and
fists
mov
inc
xchg
mov
out
xchg
scas
mov
jl
out
inc
adc
or
xchg
dec
sarb
stos
imul
or
fwait
xchg
and
daa
pop
jecxz
sub
or
lahf
add
ja
sahf
sub
sbb
mov
mov
mov
sbb
scas
test
xchg
out
inc
in
lret
push
scas
jmp
out
pop
mov
shrb
sti
fwait
sbb
das
mov
jp
fsts
sbbb
fidivs
mov
adc
shrb
xchg
or
mov
mov
jmp
pop
test
lahf
inc
int3
mov
subl
pop
lock
loope
sbb
int3
add
adc
adc
ljmp
sub
fcom
shl
push
lock
test
pop
mov
cmp
bound
cmp
test
loop
mov
mov
subb
cld
sbb
push
and
addr16
push
sarb
or
addb
sbb
jl
movsl
or
pop
sub
insb
cmpb
popa
fidivl
aaa
sbb
xor
cli
icebp
add
or
pop
and
rolb
out
clc
cs
nop
and
or
orb
fisubrl
int3
scas
stc
pop
fs
fdivl
sbb
test
shrb
xor
jg
dec
std
cmp
rcll
xchg
outsl
fisubrs
jae
or
jnp
fidivs
inc
scas
mov
jmp
cs
sbb
inc
xchg
inc
je
sahf
jmp
cmp
or
cmp
cltd
jnp
pop
sbb
xor
sub
jecxz
and
jbe
int3
jns
inc
and
push
pop
cmp
push
jge
mov
ds
mov
push
sbb
mov
mov
dec
jl,pn
or
jmp
faddp
and
jl
cld
mov
addr16
pop
das
jbe
mov
cmpsl
adc
lret
inc
fnstsw
xlat
jb
mov
jp
mov
mov
sti
sub
xchg
adc
sub
iret
sub
sbb
sahf
cmpsl
les
and
cmp
leave
cmp
sub
rcr
adc
and
sbb
pop
inc
mov
outsb
jno
fidivrs
xor
outsb
xlat
inc
adc
cwtl
fisubrl
scas
sub
sbb
cmpsl
add
pop
cmp
xchg
jp
fwait
lahf
scas
sbb
pop
wbinvd
jge
cmpsl
and
sti
xchg
mov
xor
sbb
aam
adc
add
repz
cmovne
xorl
sub
sbb
lods
xor
sub
or
fisttpl
add
mov
lods
pop
inc
dec
lods
jecxz
nop
dec
jnp
imul
ss
shl
sbb
add
add
or
sbb
inc
or
add
or
dec
cmpsl
out
nop
iret
cmp
movsl
scas
xor
dec
scas
leave
shr
add
pop
aas
out
dec
hlt
sub
punpckldq
dec
and
push
add
dec
pop
xor
inc
lock
sbb
repz
in
hlt
leave
lods
add
es
sub
sbb
xor
xorl
sub
add
in
mov
stos
mov
sar
mov
repnz
sbb
cmpl
jl
or
adc
andl
test
repz
imul
cmp
sbbl
insl
cld
inc
cmpsb
stos
adc
xchg
shl
push
enter
cwtl
fs
mov
popf
inc
jnp
dec
jg
or
fs
lods
ret
stos
push
push
insb
or
movsl
push
dec
mov
mov
fsincos
or
dec
mov
mov
or
lods
inc
lretw
or
sbb
and
pop
jecxz
mov
cmpsb
mov
inc
rolb
bound
dec
push
out
sbb
pop
mov
fildl
fdivl
dec
mov
cli
mov
mov
sub
das
cs
movsl
rol
pop
stos
sub
push
aam
iret
nop
rcrl
adc
clc
dec
adc
rorb
shrb
rorb
xor
hlt
fdivrl
stos
dec
push
outsl
inc
in
repnz
movsl
jnp
movsl
mov
sbb
enter
mov
repz
push
and
mov
inc
bound
lcall
xchg
mov
mov
addr16
bound
sub
or
sub
adc
sbb
inc
cmpl
pusha
sbb
inc
jg
add
dec
push
xchg
and
repz
out
jne
xorl
cmp
adc
sub
insb
sbb
mov
sbb
fdivs
jg
jecxz
loopne
pop
je
or
ret
clc
xlat
pop
cmp
xchg
test
xchg
inc
int3
and
data16
in
in
cltd
add
add
add
or
ret
cmpsl
popf
lock
mov
mov
aaa
movsb
and
movb
cld
sub
adc
jmp
lret
adc
and
lds
and
sub
push
add
push
scas
cmp
ljmp
adc
jb
dec
hlt
jmp
mov
dec
or
mov
or
int3
pop
xor
xchg
or
mov
mov
add
cmp
sbb
daa
shlb
clc
enter
test
aad
add
adc
fimull
pop
mov
xchg
xor
aas
sahf
sbb
sbb
dec
jp
aaa
sub
mov
add
jmp
fcmovnb
sbb
bound
push
mov
lret
std
pop
sbb
sti
sbb
dec
sbb
lcall
daa
insb
sbb
sti
sti
or
mov
mov
jo
aaa
in
stos
mov
shlb
cld
push
arpl
cmp
adc
jp
and
mov
cwtl
mov
dec
stc
add
mov
jbe
mov
xor
sbb
sub
xchg
in
pop
jl
hlt
iret
or
shlb
push
out
or
leave
invd
mov
lds
pop
jnp
jmp
dec
outsl
outsb
lahf
or
xor
and
sti
jns
ret
loop
mov
push
xlat
xchg
mov
fbstp
subb
inc
mov
adc
loope
jnp
mov
arpl
push
ss
loop
jo
xchg
sbb
fdivrl
mov
jae
push
xchg
test
add
inc
or
or
dec
adc
mov
enter
jge
or
data16
orb
or
sbb
jne
les
ljmp
int3
movsl
adc
iret
imul
aaa
xor
lods
add
push
sub
or
ficomps
mov
adc
shrb
movsb
xor
or
lock
sbb
add
adc
repnz
sbb
clc
xor
sub
or
call
in
ljmp
mov
or
or
outsb
lret
mov
or
jg
cmp
adc
adc
push
cmp
fadds
or
loop
imul
aam
pop
sarl
sub
mov
mov
icebp
xor
cmpsb
in
aam
xor
push
int3
mov
aaa
mov
push
outsl
xor
adc
out
xorb
jnp
test
out
add
sub
add
subl
popa
dec
sub
adc
adc
pop
sahf
adc
in
lock
push
adcl
inc
or
jmp
fidivl
add
pop
in
xor
add
dec
push
in
bound
adc
test
lea
and
jmp
sti
repnz
add
adc
call
insb
xlat
pop
mov
push
ficompl
mov
out
mov
xchg
movsb
addb
cli
call
pop
inc
or
je
mov
shrb
test
out
loopne
test
inc
clc
cmp
sti
ss
scas
pop
aas
inc
xor
mov
jp
push
rcrb
aaa
aad
sahf
and
add
movsl
lods
sbb
push
add
or
ds
pop
nop
rcrb
cld
push
cmp
and
negb
mov
mov
fadd
dec
push
push
xlat
lods
js
lahf
inc
std
pop
or
inc
adc
jne
ret
and
cmp
or
movsl
pop
pop
inc
notb
add
jne
pop
sbb
dec
mov
jno
movsb
push
and
dec
mov
in
mov
mov
ret
inc
mov
pop
ja
fs
adc
xchg
sti
and
outsb
mov
in
mov
lcall
or
sbb
push
testl
mov
mov
sbb
lea
fistpl
mov
jb
ljmp
out
testl
or
sbb
sbb
push
inc
push
xchg
fbstp
or
sahf
andl
mov
aaa
fcomps
out
sub
fildll
inc
pop
push
cmp
cltd
rclb
in
stos
loop
call
adc
loope
inc
rcrb
add
lret
nop
sbb
lcall
jmp
andb
mov
mov
xor
scas
ror
add
in
hlt
mov
mov
popa
loop
add
aad
scas
imul
inc
xchg
jbe
jno
add
mov
cmp
stc
test
int
lods
ljmp
aam
loop
adc
mov
xlat
jmp
fldcw
dec
jle
out
cmpsl
aaa
mov
fwait
sub
int3
pushf
push
mov
call
xor
sub
das
add
stc
popf
out
out
ja
idivl
bound
mov
mov
dec
fldcw
and
int
cld
mov
lcall
mov
adc
mov
in
mov
and
mov
lods
and
fcomi
mov
push
and
or
adc
daa
in
std
xor
inc
daa
xorl
push
sbb
or
sbb
dec
add
gs
dec
or
sbb
movmskps
push
sahf
inc
pop
pop
mov
pop
adc
or
adc
add
push
das
add
jnp
in
and
rcll
js
dec
mov
push
push
les
les
in
mov
jl
sbb
pop
repnz
mov
movsl
xchg
sbb
test
jle
push
mov
pop
and
loope
mov
ljmp
jae
adc
push
jb
sub
daa
push
mov
lea
dec
jp
mov
adc
hlt
stos
jl
pop
pop
icebp
aas
inc
pop
fstps
cmpsl
shl
lret
jg
test
arpl
gs
and
sbb
xor
sbb
pop
out
dec
data16
scas
pop
mov
in
pop
lret
sbb
fwait
in
stos
pop
push
pop
mov
cmp
sahf
es
popf
les
filds
jle
sub
add
adc
cmp
roll
mov
mov
jb
jge
mov
dec
int3
push
sub
fnstsw
les
or
jo
fld
rorb
cmp
cmovle
jle
repz
add
sti
out
xor
xor
fs
arpl
adc
or
aam
and
mov
jg
mov
xchg
test
sahf
sub
sti
or
pop
sbb
mov
xchg
inc
xor
mov
sub
test
test
mov
lods
inc
pop
sahf
sti
ljmp
leave
cld
hlt
adc
aaa
sub
mov
cs
xchg
in
cld
add
loopne
bound
sbb
popa
mov
jle
cmpsl
push
and
pop
clc
ret
xchg
in
in
dec
fisubl
rclb
adc
or
int
stc
cmp
insb
sub
movsb
cld
jecxz
xor
push
insb
and
inc
jg
mov
insl
xchg
outsb
mov
addr16
cltd
mov
lods
pushf
mov
popa
jl
scas
les
mov
addl
stos
jne
in
les
cltd
sub
int3
cwtl
and
pushf
imul
aam
xchg
jnp
or
cmpsl
test
inc
loope
cmp
add
test
add
xchg
adc
jl
lods
cmpl
shlb
clc
stos
mov
sbb
adc
lds
sti
movsl
mov
jge
fnstsw
xorl
inc
test
or
aaa
ljmp
lret
aaa
or
add
jnp
shlb
cli
or
inc
jg
jg
shl
push
pop
jg
cltd
pop
inc
imul
lods
std
cmp
in
xor
cmp
sti
and
dec
lds
adc
out
mov
cltd
int3
cmp
inc
mov
test
pop
and
mov
call
adc
sbbb
leave
int3
pop
mov
pushf
jbe
in
push
inc
push
mov
fstps
or
out
add
sbb
test
fadds
mov
punpckldq
mov
jae
insb
cmpsl
hlt
pusha
mov
push
sti
jg
rcl
and
push
mov
jo
test
daa
roll
call
cli
jle
in
pop
push
aas
sbb
fimuls
sahf
shl
daa
cmc
negl
test
jmp
add
pop
sahf
add
dec
out
add
adc
dec
xor
stc
sub
xchg
jle
jl
mov
adc
dec
adc
add
aam
test
jle
cmc
cmpl
mov
xchg
mov
push
push
dec
or
dec
adc
mov
mov
inc
cli
pop
add
in
lcall
push
shlb
pop
cmpsl
test
push
test
jl
adc
and
jno,pt
push
jge
int3
mov
dec
test
sbb
mov
call
pushl
mov
bound
adc
push
lret
cmc
push
popf
loop
dec
lret
push
push
jns
or
jge
test
inc
movsl
hlt
repnz
icebp
dec
insb
inc
add
into
jo
sti
lret
loopne
jecxz
in
dec
inc
add
call
ret
mov
xor
mov
dec
pop
dec
push
cmpb
out
fwait
cld
jno
sub
sbb
pop
or
in
sub
lods
in
sbb
or
faddl
xor
or
xchg
push
jmp
popf
int3
add
mov
push
cmp
movsb
adcl
fildl
popf
dec
popf
cld
xchg
sahf
cli
out
or
movsb
xor
jle
imul
jecxz
lret
lock
sbb
dec
and
add
xchg
sub
push
mov
imul
shrb
leave
or
dec
stos
dec
mov
mov
mov
xchg
xchg
mov
test
sahf
cld
lock
popa
loope
in
test
fwait
sub
mov
popf
rorb
dec
mov
or
int3
int
jb
lods
pop
repnz
lods
js
xchg
ljmp
decl
push
adc
add
mov
lods
mov
and
movsb
push
fistl
inc
inc
inc
push
sub
dec
addl
sbb
and
and
sub
scas
ret
fsubrl
hlt
clc
orb
add
stc
stos
and
or
daa
in
clc
ljmp
push
sub
mov
mov
xchg
mov
addr16
ror
and
mov
xchg
push
inc
lods
mov
and
fs
jmp
popa
aas
fisttpl
and
in
dec
push
lds
lock
pop
push
lret
mov
popa
cld
jb
mov
ds
dec
lock
loop
cmpsl
push
jecxz
or
pusha
fmulp
jae
or
shrb
mov
daa
lret
cs
jge
cltd
or
lods
mov
inc
lock
or
jp
mov
sub
scas
js
add
sbb
mov
outsl
xor
pop
imul
fsub
fisttpl
sub
mov
or
fdivrp
sbbl
mov
dec
ljmp
mov
jne
push
inc
stos
pusha
test
or
cld
fbstp
sbb
add
adc
popa
cmp
pop
add
or
push
lock
movsb
jle
test
lods
iret
jnp
xchg
fisttpl
cs
xchg
insl
sbb
iret
in
rcl
imul
mov
andl
aam
rolb
fs
out
and
lret
jmp
test
jnp
int
mov
movsl
mov
fcoms
mov
inc
cmc
xchg
cmp
lea
outsb
xchg
dec
lret
int
inc
xor
into
sahf
dec
rcll
aam
jle
jne
scas
call
sbb
sub
mov
jg
in
mov
push
mov
jno
cli
stos
pop
xor
lcall
setle
mov
out
inc
xchg
subl
lret
imul
lret
fildl
or
sti
mov
aam
pop
pop
lcall
mov
add
add
jl
lods
or
xchg
addr16
cmp
aas
dec
lahf
push
dec
sbb
xor
cmpsl
cwtl
mov
inc
mov
mov
les
or
sub
xor
sbb
and
insb
inc
cmpl
loope
out
xor
scas
adc
inc
icebp
push
mov
cmp
xorb
sbb
push
pushf
sub
sbb
pop
fdivl
outsl
js
je
add
sbb
out
movsl
xor
sbb
int3
mov
xor
or
std
jae
or
loop
xchg
or
cmp
les
or
pop
cmpl
les
and
or
fisttpl
popf
shll
vpminub
popa
push
push
jl
out
mov
mov
fcmovnb
xchg
mov
mov
das
loope
cwtl
repz
rcrb
ficompl
push
pusha
movsb
stos
mov
fiaddl
xor
int
subb
inc
or
dec
xchg
pop
fnstcw
push
pusha
inc
sbb
push
pushf
in
pop
outsb
flds
daa
arpl
and
ljmp
xchg
jle
sbb
gs
cld
mov
addb
or
push
xchg
cld
mov
mov
mov
add
adc
sbb
lds
lret
dec
pop
ljmp
fcmovu
addb
xor
push
xchg
or
sub
jmp
jmp
fidivl
dec
mov
mov
or
call
and
xlat
cmp
add
daa
mov
stos
sub
ja
sub
daa
pop
sub
popf
or
and
adc
shll
lock
adc
add
adc
lods
sbb
cmp
jb
jmp
or
adc
jge
cmp
adc
mov
sahf
xor
ret
arpl
sbb
cs
adc
sbb
test
outsl
dec
adc
push
test
mov
cli
sub
dec
jge
or
popa
repnz
aad
stos
pop
bound
cmp
adcb
or
popf
push
jmp
add
popa
cmp
mov
std
inc
adc
or
pop
lock
and
pop
test
mov
adc
test
test
jge
pop
js
hlt
inc
xchg
mov
lret
stc
cmc
subl
pushw
jle
add
fnstenv
pop
call
add
sahf
jecxz
stos
push
xor
adc
add
sbb
mov
enter
and
movl
jge
fucomip
mov
test
and
cwtl
jnp
or
inc
sbb
inc
mov
pop
push
sub
popa
mov
inc
out
sub
daa
pop
imul
mov
xchg
push
mov
shll
xchg
jne
mov
cld
or
pop
sub
or
call
dec
push
and
dec
imul
jge
fwait
lds
mov
or
jbe
sahf
and
mov
mov
inc
add
fidivrl
lcall
rcll
aam
xchg
xor
dec
pop
addb
in
sbbb
std
insl
mov
cmpsb
loopne
pop
test
in
lea
shlb
or
popa
adc
mov
mov
in
add
mov
or
ss
pop
stos
and
and
sti
hlt
adc
aas
out
sub
cld
and
in
sahf
push
mov
setge
mov
rorb
sbb
and
cs
enter
adc
lods
mov
dec
je
cmpsl
fsubrs
xchg
cmpsl
add
adc
subl
adc
ret
and
les
loopne
repnz
ljmp
fs
stc
pop
mov
adcb
mov
fnstcw
loop
jl
cmpsb
shll
xor
mov
test
add
jmp
mov
rolb
adc
cmp
push
cmpsb
mov
test
sub
sahf
lret
in
cwtl
xchg
adc
call
add
pop
mov
fisttpl
sbb
add
sar
es
int3
xchg
repz
inc
in
push
inc
popa
mov
xor
jmp
aas
dec
jmp
lret
rorb
inc
scas
jge
xchg
mov
les
dec
pop
cmpsb
add
dec
fldln2
mov
aaa
xchg
xchg
pop
pushf
hlt
xor
mov
push
or
sti
arpl
jno
mov
mov
xchg
or
fstpt
into
jne
inc
sbb
jl
jno
arpl
inc
aad
adc
xor
mov
movsbl
adc
mov
xor
adc
sbb
and
jl
ret
lds
jge
add
out
ljmp
orb
movsb
fsubr
add
xchg
adc
pop
jmp
mov
jo
xchg
xchg
sub
jmp
ret
out
arpl
or
mov
lret
dec
lret
push
cmp
ret
sub
movsb
mov
cwtl
icebp
mov
test
shlb
push
test
nop
stc
enter
pushf
test
aam
bound
ljmp
dec
cmp
test
sub
or
add
mov
fisttpl
sti
xchg
jmp
mov
mov
scas
insb
out
shlb
push
daa
and
and
in
jmp
std
inc
in
pop
cli
jmp
enter
lods
add
stos
mov
push
lret
xchg
in
repz
jmp
xchg
aaa
jbe
icebp
inc
mov
xchg
xchg
insl
jl
imul
in
or
in
pop
test
arpl
push
dec
dec
inc
int3
mov
loope
add
xchg
jle
scas
inc
and
sub
adc
aas
xchg
pop
lahf
add
adc
cmp
dec
mov
jns
cmp
hlt
push
add
fnstsw
test
scas
mov
xchg
mov
movsl
ds
adc
jmp
iret
cltd
sub
sub
repnz
mov
out
scas
sub
insl
ret
push
cmp
incl
xchg
mov
mov
ljmp
movsb
or
jbe
xor
das
daa
lret
aad
in
inc
mov
sbb
mov
jecxz
jecxz
lods
cmpsb
cld
sub
mov
fdivrl
cmp
or
out
stos
cmp
push
add
sbb
in
mov
mov
cmp
sti
out
add
dec
xchg
loopne
xchg
repz
leave
inc
scas
and
nop
movsl
punpckhbw
icebp
ret
filds
or
sub
mov
fisubrl
mov
or
push
or
cmp
test
and
mov
cwtl
or
adc
js
stos
jge
inc
cmpsl
sti
dec
add
ljmp
outsl
addb
adc
xor
out
aas
repz
push
cmp
xchg
or
rorl
or
push
mov
mov
xor
test
or
stos
pop
cmc
sbb
adc
dec
add
and
out
xor
add
nop
mov
xchg
stos
inc
dec
xchg
aas
add
xorb
jno
or
in
int
or
or
or
mov
xchg
or
movups
mov
fwait
add
push
ficoms
or
dec
push
test
mov
daa
mov
mov
mov
jnp
adc
aam
add
imul
shlb
xchg
add
iret
xchg
mov
push
inc
ds
jb
incl
xor
push
les
dec
in
lock
dec
or
or
sbb
jmp
imul
lods
inc
mov
jo
jnp
push
sbb
clc
xchg
leave
sub
andl
out
stos
mov
pop
cld
mov
or
mov
out
sbb
lret
jp
jae
sub
dec
pop
or
arpl
std
add
std
ret
cmp
icebp
mov
dec
add
or
jmp
pop
push
ret
pusha
push
adcb
call
push
addr16
fwait
aaa
sti
jmp
dec
xor
aad
xor
or
or
pop
sbb
inc
mov
movsl
dec
repnz
ud0
fistpll
dec
loope
or
xchg
sbb
inc
scas
bndmov
adc
daa
pop
insl
loope
test
dec
xchg
and
jo
ficomps
mov
cltd
pop
cmpsb
mov
lret
jl
push
mov
hlt
mov
mov
jmp
mov
lds
ret
jl
cvtps2pi
sarl
test
mov
dec
or
push
std
std
ret
insl
and
daa
push
pushl
push
leave
out
shr
ljmp
and
mov
mov
push
ja
mov
test
ja
add
sub
and
or
bswap
or
test
pop
push
filds
psubd
movsb
pushf
pusha
psubd
cmpsb
lret
jge
dec
sub
adc
push
int
cmpb
popf
pop
xor
mov
les
mov
out
lret
dec
scas
mov
pop
add
in
mov
fistl
inc
cwtl
or
pop
pop
lahf
sub
ljmp
cltd
cmp
fwait
or
cld
mov
andb
rolb
xchg
fst
insb
lds
mov
daa
jmp
nop
sbb
pop
mov
ljmp
out
pop
popl
jns
mov
xlat
pushf
fimull
push
stos
mov
addb
fwait
xor
loopne
or
fnsave
insb
lds
popf
push
orb
or
add
dec
xor
jnp
add
or
daa
into
adc
imul
cmp
adc
mov
or
jo
test
cmpsl
loop
stos
and
or
lret
or
lock
in
push
hlt
add
xor
fs
stos
nop
push
sub
inc
sbb
or
movsbl
jae
bound
in
sbbb
xchg
loop
les
push
imul
push
out
add
icebp
ss
ret
shlb
adc
xchg
mov
dec
leave
pop
or
loopne
js
notb
xor
push
arpl
mov
and
lahf
sti
leave
mov
and
cli
cld
jmp
jo
popf
arpl
push
add
push
or
test
pop
mov
pop
push
sahf
jbe
mov
push
lret
push
les
add
daa
adc
sbb
cmp
stos
mov
pop
notl
imul
sub
shrb
xor
and
mov
jge
inc
aad
or
ficompl
leave
jno
sahf
out
repnz
lcall
cld
push
or
cld
dec
sbb
inc
sub
or
mov
pop
incb
add
adc
cmp
push
mov
ja
dec
in
and
stos
cmpl
in
fldt
pushf
add
dec
imulb
lea
add
and
fidivrl
mov
aas
sub
mov
jmp
mov
xchg
pop
push
sbb
or
lret
ljmp
adc
or
mov
ljmp
call
clc
lahf
pop
ljmp
adc
cmp
mov
cmp
ljmp
stos
or
adc
je
or
or
dec
adc
fwait
movsb
pop
fsubrl
pop
pop
mov
jl
mov
push
ljmp
popf
hlt
lret
adc
loope
dec
lcall
jle
or
ret
imul
in
in
sub
rorl
and
call
enter
mov
adc
orb
mov
call
or
out
clc
inc
imul
add
cwtl
ljmp
pop
test
out
inc
aaa
push
dec
ficompl
add
hlt
lahf
out
in
mov
push
sub
mov
out
push
dec
push
pop
adc
imulb
daa
adc
push
inc
adc
aaa
push
adc
push
xchg
loop
push
cmpsl
adc
push
adc
aaa
push
out
movhps
int3
or
ficoms
push
sub
inc
pop
push
dec
adc
pop
push
push
inc
or
enter
test
dec
aaa
mov
enter
adc
aaa
jp
dec
call
xchg
mov
sub
add
stc
xchg
dec
adc
in
add
call
adc
icebp
ja
test
add
adc
lds
pop
loopne
or
clc
cld
xchg
les
leave
scas
fs
js
add
fcos
cmp
dec
or
or
les
fldcw
adc
cli
call
pop
push
fs
add
or
pop
sbb
ja
pop
adc
or
pop
sub
or
xchg
sbb
add
pop
aas
sbbb
mov
mov
inc
lods
add
add
add
movl
inc
or
and
add
mov
fwait
pop
inc
lock
vcmpps
lcall
hlt
inc
or
or
ja
es
or
adc
sbb
xchg
in
hlt
les
ret
hlt
inc
sbb
or
and
sbb
test
xchg
jl
or
xor
or
jle
out
mov
mov
ja
rclb
push
daa
ret
xchg
sbb
dec
dec
push
adc
mov
push
push
or
adc
out
popa
jg
cmp
xor
mov
ja
call
lret
mov
pop
and
cli
xorl
or
mov
dec
fiaddl
movsb
xchg
je
icebp
pop
loop
adc
jbe
or
adc
sub
dec
or
hlt
mov
adc
outsl
pusha
inc
or
js
or
jmp
repnz
lret
das
adc
dec
sahf
dec
lret
jnp
mov
jmp
xchg
push
push
pop
lcall
add
ljmp
iret
or
test
imul
push
add
negb
sbb
shrl
sahf
cmp
fadds
push
mov
xor
inc
sbb
add
jmp
jmp
bound
js
jp
mov
fildll
mov
adc
push
add
ss
and
pop
dec
sub
daa
jno
xor
cwtl
jp
jp
jne
loope
movsl
push
mov
jns
cmpl
negl
sahf
dec
in
out
dec
aas
push
pusha
fmull
sub
lahf
aad
mov
jecxz
movsl
icebp
pop
and
mov
dec
pop
cmp
jmp
dec
popa
aas
sar
push
adc
xor
fwait
stc
mov
out
sub
inc
mov
or
jge
cmpsb
dec
mov
mov
dec
pop
xor
or
and
cwtl
push
std
stos
add
xchg
loopne
pop
inc
insl
lea
fwait
add
fneni(8087
and
jns
mov
jbe
dec
xchg
outsl
adc
roll
insl
xchg
dec
packsswb
fldt
fsubs
xchg
adcl
mov
lods
sti
lret
addb
and
arpl
inc
leave
or
rclb
test
mov
sarl
xor
loop
cmp
adc
cmp
stos
mov
pop
cwtl
xor
repz
test
cmp
cmp
icebp
mov
inc
pop
aad
jns
mov
or
dec
lret
mov
mov
xchg
imul
repnz
push
or
repnz
add
adc
insb
jp
rorl
mov
mov
xchg
dec
popa
nop
sub
movsb
adc
jno
fstps
repz
in
mov
mov
jp
adc
sub
ret
adc
in
in
sub
dec
jle
adc
ljmp
push
adc
push
cmc
and
jo
dec
stc
cs
cmp
adcl
and
mov
pop
or
sub
pop
mov
sbb
add
mov
mov
push
popf
or
notl
mov
fwait
lret
push
hlt
cwtl
ljmp
outsl
sub
mov
jle
subb
push
aam
adcb
addb
pusha
adc
dec
sub
aam
add
or
dec
int
fcmovnb
data16
sbbl
push
addr16
add
scas
dec
aad
pop
add
push
paddw
scas
jo
fcompl
cmp
jnp
in
sbb
and
add
shll
test
add
mov
fs
mov
or
sti
push
mov
or
fisubs
push
adc
jl
sbb
add
aaa
pop
leave
cmp
das
std
mov
jle
leave
adc
inc
sub
pop
not
add
std
jp
or
jle
leave
xchg
jnp
xor
inc
movsb
and
pop
imul
repnz
or
subl
xor
sub
inc
add
jns
cmp
mov
jo
clc
bswap
add
push
jne
dec
pusha
xchg
lods
and
mov
add
scas
lret
test
pop
or
mov
xchg
sahf
or
les
imul
ja
leave
jl
testl
sbb
int3
sbbb
in
jl
jle
xchg
push
jmp
or
repnz
xor
repnz
std
test
mov
aam
xchg
xor
mull
outsb
pop
test
fldcw
icebp
cmp
cmp
aam
mov
and
les
fsts
fadd
jno
jl
ret
in
pop
jnp
jecxz
sub
cmp
mov
inc
jg
adc
jne
incl
loopne
les
push
fimuls
mov
mov
push
lret
in
pop
test
push
pop
and
push
into
mov
sti
addl
pop
ds
sub
xor
cmp
in
inc
push
lea
or
sbb
ja
or
inc
xor
or
mov
push
or
enter
cwtl
mov
push
mov
lret
cmc
aas
dec
popf
dec
or
adc
sub
iret
or
mov
scas
ret
decl
adc
cs
push
ret
movsl
mov
xchg
and
add
fisttpl
sbb
lds
jle
pushf
repz
mov
add
jns
inc
cmp
in
push
das
or
test
stc
and
loop
popf
push
and
sbb
mov
adc
inc
fsubs
gs
out
sub
adc
rcll
jo
shlb
sbb
sti
sub
insl
and
jle
push
neg
in
and
jnp
lods
cli
mov
mov
rolb
ret
ja
jmp
insl
cwtl
call
mov
mov
mov
shr
dec
sbb
outsb
dec
mov
jg
andl
dec
or
cmpsl
loop
insb
repz
mov
ret
fbstp
push
into
jns
mov
int3
cmp
adc
dec
stos
loop
mov
rcll
add
xor
xchg
dec
adc
and
lret
out
popf
jo
inc
inc
pop
insl
test
adc
sbb
inc
or
jne
push
or
add
pop
rclb
cld
push
and
pop
ret
cs
cmp
ja
mov
js
sbb
jno
ret
insl
xor
daa
sub
or
test
and
insb
xchg
mov
and
jmp
jnp
cmp
xchg
mov
insb
mov
loop
mov
dec
mov
jle
mov
mov
lds
push
add
xchg
enter
adc
inc
sbbl
orl
pop
or
inc
mov
jge
fsts
mov
lret
inc
mov
lods
shlb
arpl
sub
sbb
in
jl
dec
clc
call
cwtl
cs
loop
inc
or
ss
lods
mov
dec
cmpsb
inc
inc
and
je
dec
hlt
and
and
xchg
mov
xor
xor
mov
cmpsl
in
sbb
mov
test
xchg
adc
push
sbb
mov
jno
out
inc
push
iret
mov
add
outsb
ret
dec
or
subb
pop
or
mov
or
pop
adc
xorl
lea
das
call
pop
adc
sti
lret
shrl
ret
push
mov
rorb
inc
xor
jp
test
mov
xchg
or
jmp
mov
mov
or
repz
pop
jp
sbb
jp
scas
test
leave
sbb
mov
sub
push
jle
inc
lock
hlt
adc
or
leave
shrb
fs
enter
ret
pop
int3
aaa
sahf
dec
cmp
dec
xchg
sbb
hlt
incb
aad
add
jnp
mov
inc
dec
push
frstor
mov
lahf
adc
dec
adc
ror
xor
or
lods
sarb
fldl
scas
or
push
clc
jle
lahf
add
jle
in
inc
push
pop
add
dec
lret
sbb
rol
sarb
je
scas
dec
push
cmp
sub
pop
sbbb
push
mov
push
push
lock
int3
push
fisubs
sbb
mov
jle
call
mov
mov
fsubl
std
pop
and
jl
sub
mov
or
lods
es
mov
push
cltd
mov
test
adc
aam
sbb
adc
cmp
aas
jne
cwtl
int
pop
jl
in
sbb
aam
ds
jbe
int
or
sbb
add
ja
and
pop
loop
xchg
xlat
xchg
sub
sbb
or
loopne
lods
jmp
aad
add
mov
cmp
test
jmp
sub
mov
xor
jnp
add
add
stos
cwtl
xchg
test
and
sti
mov
jmp
ret
adc
sub
lea
or
stos
sub
insl
scas
inc
mov
mov
outsb
fwait
mov
cmp
bound
sbb
push
or
xor
push
loop
ret
and
push
je
pushf
push
mov
and
cld
mov
sbbl
jne
xorb
loop
inc
sub
push
test
inc
test
nop
or
cmc
pushf
jp
lahf
in
inc
sbb
test
lcall
fcoml
inc
mov
cmpsb
adc
jecxz
les
lahf
push
outsl
clc
inc
or
sti
adc
in
js
lds
inc
mov
or
and
cmp
mov
inc
fists
jp
jle
or
xchg
clc
mov
rclb
xchg
pushf
or
in
cmp
or
lretw
movsb
sahf
jp
or
ret
into
xchg
push
ret
into
sbb
lods
das
out
out
or
es
or
or
rorb
mov
xor
sbb
ret
test
sbb
test
rorl
test
ljmp
mov
xchg
push
rcrl
mov
mov
xor
mov
ret
adc
lcall
fcmovb
or
fnstenv
jecxz
sahf
jnp
lret
lret
lods
nop
cmp
cmp
cmp
imul
inc
idivl
cmpsb
pop
test
bound
jp
xor
addb
mov
mov
ljmp
push
dec
mov
cld
lds
jmp
mov
add
push
pop
jle
mov
mov
stos
dec
and
popl
stc
xchg
sbb
mov
lret
mov
daa
nop
fwait
test
stos
loop
or
pop
insl
sahf
or
aas
push
cmc
je
lret
mov
jg
fnstenv
orb
push
add
cmp
popf
cli
jp
mov
or
out
fwait
jecxz
xor
scas
jmp
lods
pop
fistpl
ja
adc
shl
jg
push
pslld
pop
lock
mov
adcl
and
pop
es
sbb
cld
and
sti
out
and
mov
cmp
in
mov
test
push
xor
push
not
jbe
adc
test
repz
xchg
adc
cmp
mov
mov
xor
mov
jle
lret
idivl
adc
testb
mov
adc
cmp
popa
stos
push
popf
pop
inc
push
lods
call
xor
jmp
jne
or
push
push
les
jg
dec
movsl
dec
lret
ljmp
loope
out
jle
inc
fldt
mov
aas
test
in
out
mov
push
mov
arpl
mov
xchg
movsl
fs
and
jno
sbb
pop
jmp
scas
xchg
into
stos
and
or
lret
or
mov
pop
and
sarb
or
adc
xlat
inc
mov
pop
mov
mov
js
loopne
push
ljmp
sub
sbb
mov
cmp
lret
dec
filds
adc
push
xor
lret
mov
or
mov
subb
or
call
repnz
lcall
inc
add
gs
shll
lahf
pushf
and
in
scas
mov
push
loop
or
ja
filds
pop
xchg
xchg
or
or
inc
push
adc
inc
notl
aam
mov
inc
xchg
fldt
jl
or
mov
cmc
inc
idivb
sub
test
and
adc
push
popf
jl
push
cmp
inc
stos
dec
inc
test
test
addl
or
out
cmp
add
or
mov
mov
fldl
cmp
ljmp
add
mov
std
fistpl
out
jno
arpl
ljmp
sub
test
addl
fs
aad
pop
popf
insb
adc
jnp
or
mov
or
mov
add
or
pop
les
dec
jecxz
out
enter
pusha
add
mov
lret
xacquire
addr16
push
in
sti
xorl
and
andl
lock
inc
dec
leave
insl
jl
or
sub
fwait
or
jns
sbbb
mov
filds
cmp
nop
in
fisttpll
jns
pop
call
dec
enter
ljmp
test
testl
lret
pop
or
inc
mov
mov
cli
pop
loop
lret
xor
test
faddl
push
addr16
pop
ljmp
jg
push
or
pop
ds
inc
lret
xchg
and
dec
sahf
jle
movsl
mov
sbb
sub
push
mov
je
cld
hlt
insl
in
out
outsb
je
xlat
add
jnp
pop
or
outsl
cmpsl
shlb
or
mov
jl
call
and
xor
push
shll
jo
pusha
pop
daa
cs
and
mov
test
dec
aas
sub
cmp
loopne
enter
cmp
or
dec
repnz
mov
sbb
add
scas
dec
std
aaa
adc
pop
mov
sahf
dec
inc
pusha
fildll
fwait
cs
lcall
hlt
push
das
mov
cmpsl
push
push
and
or
rcrb
leave
jmp
pop
xorl
xor
mov
gs
mov
mov
cld
add
aaa
cmp
les
in
scas
or
sub
daa
xlat
adc
fidivrs
sub
and
sbb
mov
call
and
cmpsb
jecxz
pop
mov
xor
and
sbb
push
jno
sub
add
cmp
gs
sbb
rolb
sbb
adc
xchg
inc
or
fbstp
cs
inc
movsl
ja
out
or
mov
orl
adc
or
lret
or
pop
stos
int3
inc
mov
cmpsl
loopne
loop
xchg
sbb
sarb
xchg
insb
jecxz
in
xchg
mov
lret
bnd
call
and
nop
push
mov
ret
inc
loope
aam
mov
mov
adc
rcrb
push
sbb
xor
popf
addl
cmpsb
or
xchg
jmp
pop
cld
jno
cmpsl
stc
and
lods
into
je
inc
or
stos
dec
or
scas
test
xor
xorl
push
or
or
mov
pop
cli
std
stc
push
sbb
std
sub
dec
xor
scas
loopne
imul
add
jmp
mov
clc
jo
sti
mov
addr16
or
icebp
enter
jmp
stos
or
nop
pushf
xchg
dec
mov
mov
cmp
jl
cld
jg
sub
push
cmp
xchg
sbb
sahf
fcompl
add
loopne
bound
push
jmp
into
push
push
fisttpll
push
xor
push
inc
fwait
xchg
cmp
sbb
xor
adc
ljmp
enter
jno
sub
mov
cmp
pop
in
inc
dec
xchg
ljmp
ret
sub
lods
sub
into
xchg
call
lods
ret
push
in
xchg
fdiv
mov
pop
shrb
mov
ds
mov
xchg
mov
jl
sbb
pop
adc
sub
mov
andl
pop
shlb
imul
xchg
jle
scas
repz
fxch
adc
or
sub
push
and
xchg
push
pop
mov
ljmp
xchg
push
movsb
adc
mov
jns
add
lods
and
cli
and
adc
fxch
and
in
shr
mov
loop
or
jle
pop
test
inc
mov
fwait
xchg
xorb
jp
enter
xchg
mov
insb
mov
xchg
test
aad
push
rorl
in
lock
sahf
mov
cmp
xor
sbb
sbb
jmp
push
mov
sbb
inc
inc
shll
decb
and
xchg
adc
test
pop
test
cld
and
adc
ret
sbb
mov
testl
pop
mov
add
sbb
mov
lcall
or
inc
xor
fcoml
xchg
stc
lret
xorb
fdivs
leave
xchg
sub
inc
add
cmpsl
test
mov
cltd
push
sbbl
add
scas
fsubrp
sti
jg
outsl
sub
add
orl
cli
xor
daa
sbb
loop
push
jg
adc
xchg
sub
mov
arpl
in
repnz
mov
and
or
ljmp
in
cmpsb
inc
or
fbld
test
stos
add
xor
rorl
mov
test
pop
or
dec
mov
imul
fcomp
icebp
pop
push
add
dec
mov
or
fsubrs
test
push
xchg
sahf
lcall
ss
sbb
pushf
stos
repz
jb
adc
adc
adc
sbb
xor
clc
sub
adc
sbb
adc
cld
sub
mov
stos
adc
push
insb
loopne
sub
sub
out
inc
shl
decl
popf
sub
pushf
je
enter
dec
add
xor
push
das
push
xchg
or
jnp
adc
aam
cmp
adc
inc
add
in
aam
enter
jge
mov
add
icebp
jg
inc
jb
mov
mov
or
stos
popa
xor
fidivl
pop
inc
mov
adc
clc
jne
xor
hlt
or
test
or
rclb
stos
adc
push
mov
imul
les
sub
jno
nopl
lret
mov
push
dec
jl
std
into
outsb
push
fwait
sti
push
loopne,pn
nop
dec
cmp
or
or
out
out
jo
or
cmp
inc
fnstenv
mov
ljmp
or
ret
gs
xor
shr
sub
cli
jle
or
ret
dec
dec
mov
mov
std
mov
test
fstpl
sbb
push
aas
add
add
cwtl
repnz
adc
in
push
sti
xchg
faddl
loop
add
pusha
jns
shlb
test
mov
mov
sti
imul
and
inc
push
fcompl
out
std
lods
cmp
js
roll
push
adc
movsl
in
push
mov
and
mov
popf
in
inc
ja
adc
mov
or
mov
jge
sbb
cmpsl
lret
push
mov
adc
das
mov
test
out
mov
jb
movsb
add
or
stos
xchg
cmp
out
adc
fs
rorb
sub
sti
pop
adc
ljmp
aas
pushf
mov
loop
mov
adc
lcall
mov
add
xlat
fsubs
bound
push
jle
add
jae
int3
dec
loop
jle
ss
nop
add
mov
dec
aam
sub
fwait
cmp
sahf
movsl
add
and
mov
ljmp
je
jmp
stos
adc
xorb
clc
mov
les
push
int3
dec
inc
stc
fstl
cs
ret
jnp
std
fcoml
add
sbb
fs
fisttps
sarb
movsl
add
test
bound
xor
addb
divb
mov
add
out
inc
lea
ds
xor
int3
jge
cmpsl
hlt
and
xor
cmp
outsl
aas
out
dec
mov
mov
jl
add
mov
add
add
clc
leave
push
stos
mov
push
mov
xchg
adc
stos
shlb
jmp
rorb
pushf
test
mov
xor
andb
pop
ret
jae
push
test
inc
and
enter
clc
mov
inc
faddl
test
and
int
inc
out
inc
fwait
xchg
lds
sahf
aam
test
int3
stos
and
inc
and
addl
fstps
in
push
stos
out
cmp
stos
push
mov
fs
jmp
push
jno
dec
jp
or
movsl
in
lcall
aas
daa
mov
fldenv
or
sub
push
loope,pn
clc
adc
int3
fimuls
or
negb
lea
popf
out
out
cmp
adc
sar
repz
adc
push
subb
jp
out
call
aam
sbb
mov
mov
pop
fadd
fucom
out
and
call
inc
inc
xor
fs
pop
subl
jnp
add
cmp
push
out
fcompl
fdivrp
push
shll
jmp
int
inc
enter
sbbb
cmpsl
pusha
inc
push
and
andl
inc
insb
arpl
or
sub
ret
sbb
mov
fsubl
repnz
mov
xchg
xchg
pop
sarb
sub
push
pop
pushf
adc
lods
push
test
lock
jnp
sti
lret
mov
adc
movsb
and
sbb
adcb
inc
insl
repz
mov
xlat
out
fistpll
xchg
popa
loop
jmp
pop
push
mov
aad
push
mov
bndldx
pop
pop
cmp
jae
mov
xchg
jge
std
test
lods
ret
push
mov
or
jp
lret
jns
les
sbb
out
mov
mov
xchg
enter
or
add
jecxz
add
cltd
enter
xor
fldcw
cmp
ja
xchg
push
ret
mov
push
adc
shll
jbe
sbb
or
add
pusha
xor
inc
add
add
sub
es
repz
or
inc
loop
add
add
andb
jo
enter
loop
add
incb
mov
movsl
cltd
loope
imul
dec
pushf
sub
sub
jne
in
dec
jns
jnp
fdiv
scas
int3
out
lahf
cltd
mov
mov
pop
adc
andb
and
sbb
fisttps
std
pop
add
dec
jae
les
xchg
mov
lea
sub
hlt
jbe
loop
scas
mov
add
out
xor
movsl
scas
test
lret
rcrl
cmp
mov
outsl
fnstcw
jbe
movsl
fdivl
ds
test
cmpsl
mov
push
jmp
add
push
mov
ja
movb
xchg
std
pusha
xchg
lock
jns
rclb
add
sub
insb
sub
rorl
inc
sub
and
imul
sti
add
in
push
lea
rcr
int
das
xor
xor
inc
cmpsl
jle
loopne
fistps
mov
call
in
jne
sub
pushf
mov
xchg
pop
pop
jge
push
inc
lea
push
sbb
jmp
add
xor
add
fisubrl
popf
pusha
and
pop
fs
sub
in
in
jle
or
in
push
pushf
lcall
daa
in
in
call
push
jle
sahf
mov
les
adc
mov
ljmp
sti
xchg
or
loop
add
das
rol
lcall
test
in
or
mov
subl
mov
cmpsb
adc
inc
add
or
mov
cmp
aam
mov
add
lret
imul
xrelease
fwait
sbb
out
cmp
push
fsubl
adc
pop
dec
pop
dec
popf
mov
test
sub
ljmp
mov
das
imul
pop
xor
mov
xor
test
add
inc
mov
push
rclb
stc
pop
mov
andl
call
lock
fmull
shl
adc
out
addb
add
mov
add
sub
add
ja
ret
sub
jl
mov
jne
inc
fildll
xchg
repnz
test
and
adc
fistps
jge
stos
xchg
in
mov
pop
arpl
in
loopne
jg
clc
xchg
orl
pop
jnp
sub
out
push
icebp
fsubl
les
int3
mov
pop
shll
fistl
add
les
out
sti
loop
test
add
mov
stc
cld
add
test
mov
out
in
shrl
xor
push
addr16
loop
out
dec
inc
sti
inc
scas
push
fwait
cmp
add
stos
adc
loopne
les
mov
push
ljmp
push
sbb
push
movups
jle
lcall
or
adc
sti
sahf
jmp
and
cmpsb
sbb
or
fs
push
jmp
ret
dec
add
push
cmpl
test
inc
test
cmp
mov
xor
out
sub
bound
popa
sti
add
push
inc
add
mov
sub
jne
sbb
sbb
xor
pop
dec
repnz
stos
addr16
cwtl
xchg
pop
xchg
and
aad
in
adc
push
push
fs
mov
loope
push
and
or
popa
mov
test
cmp
ficoml
and
adc
mov
into
pop
pop
pop
movsb
and
sub
jp
add
call
mov
dec
lcall
dec
add
ret
and
inc
movsl
lods
popf
mov
add
daa
or
arpl
mul
leave
xor
jne
mov
popa
mov
mov
pusha
jge
pop
ret
jns
push
repz
fidivl
andl
cmp
lock
xorb
gs
scas
jne
and
xchg
in
sahf
mov
add
add
out
movsl
out
xchg
adc
xchg
or
jae
setae
mov
mov
adc
cmp
inc
in
adc
dec
inc
in
inc
add
jecxz
aam
xor
xchg
adc
adc
lahf
cs
adc
add
sub
icebp
bound
or
test
lahf
dec
lret
sbb
out
add
mov
out
push
js
dec
addl
sub
jb
repz
loop
lds
pop
and
add
scas
daa
mov
fisttps
xor
push
push
inc
test
xchg
in
shll
rcrb
adc
stc
jo
add
push
adc
lods
mov
dec
mov
paddb
jmp
addl
test
jle
call
out
and
push
fbld
lret
mov
sub
fs
ja
hlt
lods
adc
popa
mov
mov
shr
add
fildll
stc
scas
jno
sbb
sub
sbb
push
push
mov
inc
or
addb
mov
adc
sub
adc
mov
xchg
xor
adc
hlt
fimull
lcall
xor
mov
jne
adc
add
xchg
subb
xchg
or
mov
sbb
or
pop
sub
stos
leave
fsubrs
jne
jecxz
xlat
test
xchg
mov
aad
xchg
ror
stos
testl
dec
aas
sti
stc
daa
adc
xchg
rol
xor
xchg
mov
push
leave
rcrl
jecxz
adc
leave
ret
mov
das
or
inc
sub
or
mov
jp
int
xor
adc
mov
sti
sbbl
and
adc
cs
out
sub
inc
and
lods
cmp
adc
sahf
push
jg
dec
jge
push
jbe
sub
in
mov
fstpl
mov
add
adcl
mov
pop
loopne
rclb
rolb
imul
ljmp
mov
subb
adc
sbb
jb
or
movsl
je
jge
repz
mov
andb
add
inc
adc
rolb
bound
mov
les
and
repnz
enter
test
js
imul
lahf
popa
jl
add
adcl
push
cmp
ljmp
jb
ljmp
bound
out
fsubrs
xchg
in
inc
jae
push
lcall
lds
addr16
test
adc
add
mov
dec
mov
or
jge
mov
pop
addr16
mov
insl
push
lret
adc
aad
sti
inc
add
pop
inc
dec
dec
cmpsb
xchg
or
in
mov
inc
int
push
aad
jl
repnz
mov
fs
and
test
jle
rcll
hlt
dec
in
add
xchg
inc
orb
fidivl
pop
sub
lods
xor
rorl
std
imul
jg
push
stos
sub
aas
push
orb
sbbb
push
je
inc
int
push
enter
xor
stos
dec
jmp
and
inc
cs
int
lret
test
jge
incl
push
push
fisubrs
xchg
cmp
adc
mov
add
pop
sbb
in
mov
sbb
inc
sbb
aam
or
xchg
lret
sub
mov
sarb
test
jle
add
add
cld
inc
push
int
add
xchg
pop
stc
mov
stos
repz
xchg
filds
mov
push
mov
add
imul
lock
add
jl
mov
je
movsb
cmp
orb
pushf
arpl
sbbb
xor
push
add
and
or
repz
aam
loop
lret
addr16
dec
mov
xor
cmp
int
and
int
push
or
test
dec
lock
dec
repnz
stos
inc
or
sub
repz
fimull
mov
scas
push
shll
or
lret
sub
loop
fnstcw
or
ds
pop
sti
ret
sarb
stos
pop
adc
loop
cmp
jecxz
adc
sbb
add
nop
xchg
push
mov
data16
sti
mov
repz
add
aad
cvtps2pi
mov
pop
add
insb
mov
sub
xchg
jg
sbb
xchg
push
mov
icebp
sbb
sbb
mov
stc
xor
lea
push
movsl
sti
dec
lods
lock
aad
xor
mov
xor
dec
jmp
dec
xchg
add
or
sbb
jb
repz
add
adc
pop
ljmp
xorl
xor
push
jge
rclb
mov
sbb
cmp
rclb
mov
lret
adc
mov
int3
add
clc
bound
mov
cmc
pop
scas
stos
ss
and
push
xor
mov
dec
xchg
dec
or
loopne
out
sbbl
pavgb
or
dec
loop
jae
pop
adc
or
dec
inc
or
jecxz
xor
adc
jmp
aad
jmp
and
push
sti
lds
push
jbe
rclb
jnp
or
fwait
add
and
je
jecxz
xchg
je
mov
mov
cmp
or
xrelease
in
ficoml
mov
test
xor
stc
add
jp
fstpl
push
test
aam
aaa
mov
leave
xchg
in
in
mov
xchg
imull
jns
push
lret
and
cmp
imul
movsl
pop
add
pop
pusha
cmp
jl
clc
fwait
popfw
ret
xchg
sbb
imul
js
pop
mov
xchg
jp
sahf
push
jle
lahf
cmp
sbb
gs
sub
adc
mov
xchg
les
shlb
add
xchg
inc
imul
scas
sub
pop
add
hlt
in
test
or
sbb
js
je
mov
adc
jp
or
rclb
add
add
daa
mov
test
notb
jmp
icebp
mov
imulb
into
loopne
rorl
add
push
xchg
cmp
stc
pop
or
jp
adc
int
and
add
or
cmp
cmp
arpl
lcall
sti
pop
out
cmpsl
iret
inc
sbb
int3
push
adc
cltd
sbb
fs
add
jge
and
sub
in
cmpsl
adc
out
outsb
jecxz
add
into
fadds
decl
and
add
push
iret
test
repnz
test
cmp
lods
lods
cmc
test
test
xchg
out
sub
mov
int
in
fidivl
dec
push
xchg
and
ret
inc
dec
mov
dec
lds
je
stc
scas
sub
insb
lret
dec
adc
jno
lcall
sti
jmp
adc
jmp
scas
inc
fcomps
scas
test
movsl
jecxz
je
push
jae
add
out
sbb
jge
mov
leave
or
rorl
sbb
or
mov
fwait
sbb
push
mov
cmp
enter
sbb
outsb
cmp
mov
jo
adc
roll
pusha
lods
dec
xchg
sub
lods
adc
add
lcall
adc
xchg
cmp
add
shrl
scas
enter
sbb
enter
adc
imul
and
popf
nop
xor
adc
jb
sbb
sbb
sarb
je
pop
or
mov
sbb
xchg
jecxz
add
push
loop
adc
imulb
mov
adc
adc
movsl
out
popl
push
jb
je
sbbl
add
lods
aam
push
adc
or
iret
mov
jge
add
mov
mov
psubq
fsubl
inc
nop
sub
xor
test
add
leave
icebp
cli
sti
sbb
popf
jnp
xorb
push
cmc
and
inc
mov
enter
pop
fadd
stos
repz
sbb
ret
int3
sti
add
lods
jbe
jae
mov
push
fwait
dec
mov
add
leave
or
pop
insl
in
sbb
add
cltd
or
subb
ret
and
push
fmull
adc
mov
ror
hlt
sub
mov
lahf
std
mov
fs
lds
or
push
test
cmp
or
adc
idivl
dec
sbb
jmp
inc
sahf
insl
mov
ret
mov
hlt
adc
mov
clc
cld
movsl
and
and
shlb
sbb
iret
or
push
btc
sub
pop
pusha
adc
jl
dec
cmp
inc
xchg
je
xchg
mov
fwait
imul
lcall
out
jns
jmp
loop
sub
xor
ret
fsts
sbb
jle
idivb
sub
movhps
scas
mov
and
sbb
and
mov
and
or
pop
dec
xchg
movsl
sbb
insb
mov
cmpsl
cltd
jg
jno
push
sbb
or
mov
push
cli
adc
and
aam
push
mov
adcb
in
jle
outsl
stos
in
or
inc
outsl
dec
push
mov
jnp
insl
jmp
inc
mov
add
call
and
inc
fisttpl
or
cli
in
popf
or
loop
or
mov
cmpsb
rorb
das
mov
dec
adc
mov
or
jl
sahf
add
test
mov
aas
loope
push
shrb
hlt
mov
sahf
mov
outsl
sti
mov
fimuls
aam
and
aad
out
ror
mov
dec
frstor
dec
mov
movsb
hlt
xchg
rcll
xchg
jbe
inc
sub
pop
fisttpll
test
and
sub
mov
mov
mov
jle
je
fdivrl
int3
adc
in
in
adc
mov
lret
iret
movl
lahf
xchg
ss
scas
insl
add
mov
cmpsb
cmp
jl
mov
jb
mov
or
add
rol
fs
xchg
loopne
bound
push
jle
fcmovb
mov
jnp
inc
or
lret
adc
pop
cmp
pusha
jl
clc
xchg
test
stos
jecxz
xorl
jp
sub
lods
adc
xchg
popa
or
add
pop
adc
cmp
or
lds
fnstcw
mov
dec
hlt
leave
test
in
enter
push
ljmp
lock
std
lock
lds
or
inc
int
dec
jbe
test
adc
jl
pop
sahf
or
insb
mov
dec
sub
xchg
lret
jmp
leave
mov
in
push
fiadds
enter
jmp
sub
ljmp
scas
lods
lret
mov
fcmove
std
cmp
mov
push
inc
cld
inc
xchg
sbb
movsb
mov
idivb
sub
cmpsl
roll
pushf
je
jae
mov
or
lds
jo
imul
sar
jae
jae
inc
roll
stos
movsl
popf
lea
xchg
mov
lods
add
or
and
pop
jo
add
lcall
enter
push
pop
jmp
adc
add
inc
cmp
adc
in
out
sbb
testl
mov
out
iret
ret
push
xchg
adc
repz
enter
hlt
idivb
mov
adc
fs
jne
or
sti
mov
xchg
inc
xchg
sbb
and
fnstcw
pop
in
jl
mov
rolb
stos
or
xchg
mov
stos
addl
jno,pn
test
test
ret
push
push
sub
jecxz
xchg
mov
fcoml
stos
mov
mov
push
andl
enter
or
jmp
outsb
inc
arpl
call
cmp
scas
mov
addr16
mov
sbbl
jno
adc
sub
ds
jge
jp
add
add
cwtl
sahf
bound
push
lret
pop
loop
std
dec
into
mov
add
stos
clc
pop
stos
int3
sahf
push
sti
and
pop
sub
jno
add
shrl
aam
fdivr
sbb
pushf
les
call
pushl
add
adc
or
subl
push
sbb
xchg
jno
mov
cmp
mov
sahf
out
ret
or
bound
xchg
jae
or
out
adcl
pop
fcos
or
mov
mov
mov
xchg
push
cmc
popf
push
icebp
leave
ljmp
xor
int3
les
shll
imul
fmull
daa
es
pop
cmp
pop
outsl
ja
fs
mov
ljmp
aam
xchg
jmp
cwtl
mov
push
jo
xor
jle
mov
jle
push
and
shll
insl
stos
mov
fsts
and
insb
or
sahf
nop
or
scas
es
fyl2x
push
inc
mov
fs
loop
lods
xor
loopne
pop
je
incb
mov
mov
xchg
std
rcrl
push
mov
fnstenv
xlat
loopne
das
inc
cmc
mov
mov
mov
xlat
mov
aaa
comiss
movsl
decl
or
pop
mov
add
inc
rcrb
ficoml
xchg
out
mov
xor
xor
xor
adc
mov
jmp
dec
jo
mov
xor
arpl
cmc
lret
in
mov
adc
imul
sub
inc
fcmovu
inc
xchg
xchg
sub
pusha
sub
adc
repz
repnz
xchg
jmp
outsl
cmc
in
mov
shrb
dec
repnz
mov
lds
xchg
test
or
jns
leave
mov
ret
ljmp
pop
inc
bound
inc
test
pop
and
jae
cltd
mov
mov
fsubrl
push
aas
adc
leave
insl
xor
adc
inc
sahf
fimull
shr
scas
out
add
mov
pusha
lahf
repz
push
xchg
ljmp
xor
out
je
adc
out
sbb
sub
inc
or
mov
mov
add
add
mov
test
add
addr16
cmpsb
pop
mov
sbb
mov
sub
flds
mov
adc
cmp
xor
adc
imul
jle
imulb
or
cmp
and
cltd
pop
sbb
in
mulb
bound
dec
gs
scas
ret
lahf
jge
fprem1
nop
add
iret
mov
dec
popf
jmp
mov
inc
stc
add
mov
mov
add
adc
movsl
lods
bound
sub
loopne
incb
or
les
test
addb
les
sbbb
sahf
loope
add
jge
les
xchg
rolb
scas
je
mov
call
xchg
pop
cmp
sbb
mov
es
sbb
jmp
push
fcmovnb
cmpsl
int
dec
pop
popa
je
pop
push
ret
mov
orl
out
cld
aam
mov
cmpsl
dec
cld
cs
fidivl
ret
jns
sti
or
and
adc
loop
mov
fwait
or
icebp
pusha
nop
and
or
ficoml
xchg
jo
dec
or
jbe
pop
cmp
dec
add
pop
adc
sbb
flds
stos
adc
je
pop
push
out
test
mov
xchg
xor
xor
adc
jbe
enter
scas
fidivrl
sbb
cmp
cmp
xchg
adc
xor
loopne
lods
mov
or
addl
mov
mov
lea
sbb
or
lods
adc
test
jle
or
pop
fwait
or
inc
pushf
test
cmpsl
jge
xchg
sti
sub
loop
mov
pop
fdivrp
and
rorl
jmp
lcall
loope
dec
fisttps
inc
data16
shll
jae
out
loope
js
popf
mov
mov
cltd
int3
fidivrl
fisubrs
xchg
adc
mov
imul
cltd
inc
scas
inc
xor
mov
adc
xlat
xor
push
inc
std
scas
push
aaa
std
ja
push
mov
fnop
push
add
pop
sub
sub
movsb
adc
and
dec
mov
inc
xor
orl
mov
jmp
int
aaa
jmp
subl
int3
ret
daa
je
cmc
hlt
clc
push
push
dec
ret
jecxz
imul
enter
or
jl
pushf
in
adc
or
xchg
test
aam
and
mov
in
pop
adc
aaa
sbb
dec
ja
pop
lret
push
ret
jne
lahf
push
sbb
jecxz
lods
test
mov
mov
adc
inc
xchg
dec
arpl
add
jo
ljmp
popa
cmpsl
aam
jp
call
int3
in
scas
inc
push
int
sbb
lock
les
xor
jae
out
push
movsb
pop
xchg
in
sub
pop
add
in
lahf
imul
or
pop
or
xchg
cmpl
popf
sbb
cmp
adc
in
test
xchg
mov
mov
jge
jecxz
inc
mov
mov
push
lfs
inc
aad
or
mov
cmp
fs
popf
dec
shlb
mov
xor
dec
fcmovbe
push
fwait
push
and
test
and
xor
sti
pop
or
xorl
add
rcll
decb
mov
add
and
jnp
pushf
subl
push
adc
std
shr
mov
adc
scas
inc
fcoml
or
mov
adc
lods
sub
mov
dec
sub
cmpsb
repz
jge
add
aad
or
inc
add
aam
ljmp
ror
sub
lret
dec
cwtl
add
or
mov
and
call
es
mov
xchg
orb
test
jl
int3
adc
jne
dec
inc
mov
add
out
call
mov
fsubrl
addl
add
sti
pop
add
nop
pop
test
jmp
call
inc
add
nop
sbb
adc
test
adc
inc
sti
push
pop
or
xchg
int3
sub
sub
sbb
mov
jnp
mov
add
aaa
mov
mov
aas
out
dec
dec
daa
inc
outsb
out
mov
mov
mov
sub
jle
xor
iret
jecxz
ret
mov
inc
aas
jmp
adc
out
add
adc
mov
or
or
add
sub
mov
inc
mov
mov
inc
push
mov
xchg
sbb
loope
lret
jle
xchg
imul
stos
mov
add
movsl
adcl
call
jno
mov
inc
lds
cmc
add
out
xor
negb
int
and
ljmp
andl
push
shlb
sub
imulb
jle
dec
jg
es
adcl
cmp
test
test
movsl
repnz
pushf
inc
inc
sbb
add
and
mov
push
sub
sbb
fadds
lds
lahf
or
jb
in
inc
stc
fucomip
jl
dec
mov
lods
mov
sub
in
icebp
or
jmp
push
lret
das
inc
adc
test
dec
adc
xchg
mov
xchg
and
and
mov
sub
aam
movsb
xchg
cmc
call
mov
dec
ret
ljmp
pop
mov
stos
pop
mov
cmp
mov
pop
int
lods
cmp
ja
ror
outsl
or
cmp
ret
adc
push
push
pusha
xor
mov
xchg
inc
pop
sahf
jo
pop
jmp
push
pop
push
push
gs
lods
leave
jmp
jnp
push
pop
js
ss
inc
adc
pushf
dec
push
scas
jecxz
cmc
and
jnp
repnz
dec
dec
dec
pusha
data16
out
add
es
stc
mov
jge
mov
xor
cmpsl
insl
aas
fwait
mov
test
test
repnz
hlt
inc
stos
adc
fwait
mov
pop
push
jbe
xor
jmp
cmpsb
jmp
rol
out
popa
jmp
push
mov
lret
popf
lahf
sbb
add
mov
xor
mov
stc
adc
pop
push
push
imul
loopne
neg
mov
pop
lret
push
lahf
lret
mov
popa
xor
int3
out
xchg
mov
and
pop
pop
loop
lea
mov
jp
pop
lea
ret
call
pop
into
or
and
cmpl
ret
adc
and
out
imul
xchg
ret
or
or
xchg
ds
insb
scas
loopne
fldl
xchg
ljmp
inc
cwtl
add
mov
dec
jae
lret
xor
push
mov
push
ljmp
loopne
lods
inc
xchg
sti
mov
mov
mov
cmp
push
popa
jp
cmp
fildll
xor
adc
jmp
push
dec
jl
popa
int
mov
push
push
or
sbb
sahf
repz
or
pushf
lcall
jnp
mov
ret
push
jae
sti
movsl
ss
leave
jae
or
sub
aam
xchg
mov
jo
gs
pop
jb
add
fldl2e
push
loop
cmp
pop
pop
add
jecxz
add
sub
ficomps
scas
cs
pop
inc
and
xchg
mov
test
test
mov
jle
js
mov
adc
outsb
jbe
or
ror
inc
aad
mul
fldt
cmovo
or
add
shlb
mov
adc
mov
push
sub
add
xchg
int3
daa
mov
shll
popl
hlt
inc
jg
or
loop
or
out
insb
stos
push
add
fs
mov
xchg
jb
fcompl
ljmp
in
cmpl
fmul
test
movsl
mov
adc
mov
aam
rorl
xor
jl
mov
xchg
mov
ljmp
mov
jmp
xchg
popf
pop
fistpll
jne
data16
push
sub
xchg
adc
stos
and
in
cwtl
sahf
popf
mov
jge
or
adc
xor
mov
insb
fstl
pop
and
sbb
out
xchg
out
lret
stos
mov
roll
int3
push
jg
les
fwait
les
jg
push
pop
mov
mov
lcall
jl
test
cmp
shlb
inc
repnz
lret
out
gs
inc
loopne
xchg
adc
mov
imul
inc
or
mov
lods
xchg
bound
shrl
in
in
sbb
int
bnd
xchg
xor
xchg
shl
xchg
shrl
mov
add
pushf
mov
dec
mov
mov
movsb
or
shlb
mov
push
pop
and
sbb
mov
stc
int3
stos
shll
jne
adc
add
cwtl
ret
jg,pt
idiv
pop
mov
stos
pop
out
hlt
inc
pop
sub
add
lcall
mov
andb
dec
lock
movsl
daa
dec
sub
and
or
lcall
push
inc
ret
loopne
or
lock
add
cltd
pop
faddp
add
lret
stos
in
cltd
lret
jg
cmp
pushf
pop
sub
xor
sbb
cmp
test
decl
sar
les
and
roll
fdivrs
inc
fwait
push
in
dec
sti
cld
out
dec
add
mov
loope
cmp
adc
clc
sti
loope
sbb
outsb
cmp
mov
xchg
stos
cmp
and
sub
jge
sbbl
or
pop
dec
lock
testl
das
das
nop
pop
cmpsl
rolb
adc
inc
add
ret
lods
jecxz
jg
inc
fwait
addl
xchg
push
int3
sarb
push
mov
add
in
sbb
push
ljmp
pop
pop
mov
cwtl
jae
cmp
lret
test
cld
mov
adc
mov
mov
mov
lods
pusha
mov
ja
mov
sbb
in
imulb
cmp
test
imulb
xchg
mov
dec
out
sbb
je
mov
push
in
mov
lods
outsl
push
scas
pop
push
pop
fidivrs
adc
lahf
stos
cmpsl
xor
xor
dec
les
aas
xchg
movsb
mov
sub
fistpll
sti
push
scas
ret
icebp
inc
push
lds
and
pop
stos
rcrb
add
dec
dec
std
or
pusha
add
add
fistl
pushf
dec
aam
jg
cwtl
xor
adc
lret
rcr
aaa
popa
enter
insb
inc
push
fs
out
add
push
push
jl
mov
sti
dec
aam
jb
js
jns
inc
scas
push
fadds
lret
in
enter
cmpl
dec
sub
pop
rorl
btr
pop
std
sub
loop
dec
mov
jne
jno
mov
bound
mov
jl
and
sub
cmp
push
arpl
pop
mov
xorl
insb
xor
and
imull
ret
inc
jae
repz
sub
fs
push
adc
scas
stos
mov
jp
push
dec
jns
jecxz
xchg
xchg
push
test
dec
push
out
sbb
sahf
lret
adc
imul
inc
cwtl
scas
and
cmp
cli
and
insb
pop
sahf
sub
inc
out
dec
adc
sti
or
mov
xchg
xor
push
jmp
sti
sub
sbb
jns
push
cli
mov
aaa
xchg
or
mov
jg
jnp
sub
push
call
pushf
jecxz
test
pop
in
std
js
imul
xchg
mov
jp
push
sub
mov
pop
adc
mov
mov
sbb
pop
into
inc
add
ret
add
fwait
test
mov
jmp
mov
cmp
or
adc
aam
addr16
ljmp
or
dec
xor
icebp
add
push
push
and
mov
adc
in
and
add
and
orl
sub
aad
imul
fmuls
xchg
pushf
xchg
push
cmpsb
les
movsl
mov
out
adc
add
andb
sub
push
out
sti
cwtl
outsb
xor
lcall
sahf
pop
xchg
cmp
xlat
lcall
divb
jae
aas
call
fiaddl
push
push
dec
pop
xchg
mul
gs
adc
or
push
or
sahf
adc
jne
lods
out
inc
mov
or
sbb
mov
movsl
in
sahf
xchg
sbb
popf
cli
int
bound
shll
test
repnz
pop
inc
or
or
sti
and
shll
cli
adc
rcll
xchg
dec
loop
lret
in
lods
fwait
or
lds
fs
jno
daa
adc
loopne
mov
adc
mov
popf
push
orl
lahf
inc
sbb
or
sti
test
xchg
push
lahf
xchg
xchg
jmp
mov
add
mov
fs
sbb
push
adc
dec
push
push
mov
cmpl
rdtsc
jno
outsl
cli
or
adc
rcrl
repz
shlb
stos
movsl
das
popf
rol
decl
xor
dec
mov
xor
movsb
movsb
enter
push
cltd
imulb
push
xlat
fwait
sub
loope
jp
jge
enter
or
cmp
js
cmpsb
mov
test
pop
shll
cwtl
in
inc
or
fcoml
adc
push
das
jmp
inc
xor
ljmp
mov
aaa
addr16
and
das
push
jp
mov
das
aas
mov
mov
add
dec
push
sub
jl
dec
jp
out
mov
jae
dec
pop
mov
sahf
xlat
in
push
jns
into
push
repz
test
cli
push
jns
inc
movsl
mov
dec
xorl
dec
rcrb
and
push
ficompl
adc
sub
sub
int
jmp
and
sahf
and
mov
mov
push
xchg
push
jne
filds
mov
mov
adc
add
push
les
fsubrp
sub
fdiv
ret
outsb
sahf
adc
lea
insb
adc
insb
lret
inc
mov
mov
or
mov
adc
push
inc
sti
add
lods
pop
out
jo
mov
hlt
in
repnz
das
lea
imul
jp
lcall
pop
mov
jae
or
das
xchg
hlt
xchg
add
xor
sahf
repnz
outsb
sub
arpl
or
jns
int3
mov
mov
push
movsb
les
and
and
mov
mov
mov
mov
adc
add
sub
adcb
fbstp
inc
mov
enter
xchg
mov
and
push
subb
andl
xor
or
and
or
mov
test
jne
sbb
sbb
cmp
cmpsb
add
insl
mov
mov
idivb
push
mov
test
sarb
enter
jns
sub
add
mov
or
pushf
aad
mov
outsl
push
popa
loope
sbb
dec
test
into
das
pop
jae
and
roll
lret
xchg
cld
mov
mov
jp
sar
loop
imul
mov
jecxz
dec
adc
cmp
clc
bound
test
test
rcr
mov
cs
ljmp
dec
push
sti
or
incl
inc
movsl
in
jecxz
fs
into
dec
add
add
mov
and
ja
pop
scas
mov
loope
lret
adc
cmp
mov
jge
mov
mov
xchg
or
repnz
icebp
cs
xor
aad
in
das
jle
dec
adcl
fisubl
fcompl
fsts
bound
adc
loopne
jecxz
pop
cld
inc
lret
pop
add
inc
mov
cld
in
push
sbbb
inc
adc
adc
pop
repnz
or
mov
pop
sbb
mov
mov
movsb
cmp
movl
push
add
jnp
cltd
mov
popf
pop
stc
pop
insb
rolb
pop
sbb
jge
roll
mov
pop
inc
mov
pop
jp
repz
xchg
xor
movb
xchg
insb
add
and
hlt
repz
mov
mul
push
mov
hlt
sahf
adc
movsl
cmp
inc
push
dec
ficoml
pop
cltd
sub
jne
loope
std
scas
fiaddl
fcomps
pop
ret
stos
scas
or
push
outsl
ret
div
or
hlt
icebp
shlb
icebp
in
xchg
lahf
aam
in
jbe
inc
icebp
sti
icebp
int
imulb
push
and
loop
and
xchg
imul
addr16
dec
loop
pop
loop
dec
mov
push
aam
mov
cmp
shr
cltd
add
sahf
orl
cmp
test
mov
jb
gs
adc
jg
xorb
xlat
out
sub
test
mov
insb
incb
fistpl
pop
xor
cmc
dec
mov
mov
pusha
adc
add
cmp
add
mov
cmp
cmc
add
aam
imulb
nop
and
popf
lcall
push
jo
cwtl
inc
shlb
or
std
popa
or
mov
and
cli
or
lcall
sbb
out
push
or
test
mov
add
mov
pop
mov
andb
cmp
lcall
xor
int3
jb
ljmp
adc
rolb
mov
push
inc
scas
adcl
xor
dec
inc
add
in
fwait
add
insb
add
in
movsb
sub
fimull
call
push
or
test
cltd
cli
sbbl
lcall
imul
lahf
pop
and
dec
cmp
in
in
or
ret
mov
pop
adc
jns
mov
add
movsl
dec
int3
sbb
and
and
lds
imul
lret
and
push
mov
or
xor
jmp
imul
popf
or
inc
fisttps
lahf
lock
jge
cmpsl
out
cmp
xchg
insl
or
sbb
pop
notl
and
mov
lea
adc
cld
mov
cwtl
cmp
notl
outsb
and
dec
inc
mov
imulb
sahf
inc
fcoml
ror
cli
or
cmp
filds
les
ud1
jo
adc
jp
or
rcrl
or
mov
clc
aam
shld
ret
sbb
enter
jo
dec
cmpsl
das
push
pop
stos
movb
xor
pusha
addr16
test
jno
dec
fs
inc
add
std
or
jno
sahf
mov
mov
mov
imul
in
push
mov
sti
imul
cmc
es
cs
pop
pop
jnp
jbe
sbb
dec
popf
mov
inc
in
and
mov
out
mov
add
test
popf
clc
dec
inc
push
nop
fmul
popf
xchg
cmp
jl
mov
ljmp
adc
loope
push
and
mov
and
xor
xchg
aam
stos
rorl
mov
adc
jp
cwtl
jne
jb
mov
cwtl
dec
je
mov
mov
in
fnstsw
cmpsb
out
stos
cmp
sub
or
icebp
adc
jp
mov
or
mov
dec
pop
or
out
repz
and
inc
bound
int
mov
in
or
sti
test
push
fadds
jno
mov
adc
pop
adc
inc
out
or
loop
lahf
jl
inc
add
cmp
adc
sub
ljmp
or
hlt
or
cmpsl
out
fcmovb
incb
jo
adc
add
cld
inc
nop
cmc
lahf
fdivrl
int3
inc
dec
fs
stos
fwait
sub
repz
add
lea
mov
sbb
pop
push
aas
dec
xchg
stc
hlt
adc
stos
sub
jp
mov
and
lcall
xchg
xor
imul
stos
lcall
dec
sahf
jo
enter
aam
xchg
sub
inc
xchg
in
and
sub
ret
mov
xor
punpckhbw
add
or
int3
jmp
xlat
lods
bound
pushf
rcr
push
lret
inc
xchg
pop
push
lods
imul
loope,pt
adc
sbb
push
test
adc
push
or
sub
inc
xchg
xchg
mov
repz
fimull
mov
add
pushf
or
das
mov
movsb
psrlq
jne
hlt
mov
daa
xchg
adc
or
or
mov
gs
je
dec
popf
out
push
sbb
dec
imul
add
and
roll
mov
add
xchg
mov
xor
test
ljmp
fwait
test
dec
fwait
test
outsb
fwait
test
scas
fwait
test
pop
sub
dec
fdivp
dec
adc
movsb
xchg
out
mov
adc
jnp
or
jmp
shrb
sahf
xor
into
outsl
sbb
dec
mov
xchg
loop
and
push
jge
adc
loope
lods
leave
jecxz
test
ror
insl
adcl
adc
stos
fmull
or
mov
xchg
mov
sbb
mov
ret
sti
in
push
or
and
jns
cmp
push
and
lock
pop
cmp
sub
mov
jnp
pop
and
hlt
dec
adc
imul
repnz
sub
clc
push
les
jmp
dec
sub
leave
stos
pop
scas
mov
imul
jmp
ds
js
sbb
xorl
or
test
xchg
cmp
negl
movsl
aam
scas
xchg
sarl
sub
nop
sub
push
mov
aaa
adc
lods
cli
adc
js
jo
cltd
push
mov
out
fisubl
pop
xor
jg
pop
shrb
or
jecxz
sub
jnp
pop
int
sbb
sub
and
in
in
hlt
dec
lods
adc
insb
or
cmpsb
add
dec
dec
jl
int
ficomps
add
and
or
movsl
push
popf
scas
scas
insb
addr16
stos
xchg
stos
add
pop
adc
mov
gs
xor
test
out
jne
mov
sbbb
jle
into
sti
push
mov
pop
pop
cld
ficompl
add
imul
rorl
xor
ret
mov
mov
mov
hlt
sub
and
adc
pusha
in
xlat
pop
and
xor
adc
mov
test
mov
shrb
test
adc
loop
sub
or
into
pop
out
dec
out
xchg
xlat
sbb
mov
stos
pushf
mov
inc
jle
out
int3
in
push
adc
ljmp
push
xchg
out
mov
mov
ja
sbb
inc
xchg
push
jle
insl
sub
or
imul
mov
jl
mov
pop
and
push
sti
data16
jo
insb
mov
mov
rcrb
sub
xor
jno
rcrl
in
cli
mov
mov
pop
test
imul
scas
pop
mov
jp
andb
adc
mov
cltd
and
aas
jne
testb
stos
sbb
ja
fdivrl
push
mov
cmp
fs
mov
adc
mov
xor
lods
inc
sbb
repz
daa
dec
and
not
js
in
outsl
sub
cmp
scas
mov
dec
dec
cmp
add
or
shll
insb
sub
lret
call
xchg
jle
xchg
pusha
mov
and
pop
or
sahf
xchg
aas
hlt
or
lods
cmpsl
scas
mov
xchg
jmp
movsb
ljmp
out
ret
add
in
or
sub
sub
imul
sbb
imull
arpl
sti
push
xchg
leave
adc
adc
lods
adc
push
pop
inc
ret
inc
pop
mov
sub
adc
inc
xor
add
sub
cmpsb
int3
notb
jb
enter
sbb
insb
jne
xor
and
dec
dec
lock
filds
call
xor
test
pushf
add
loopne
imulb
cli
mov
jmp
les
cmp
insl
aam
sbbl
jnp
push
data16
cwtl
dec
imul
cmp
adcb
adc
and
jnp
in
aaa
mov
incb
pushf
leave
pop
stos
popf
nop
bound
outsb
sub
add
jge
popa
out
insl
mov
icebp
and
iret
jle
push
mov
and
outsb
mov
sbb
push
hlt
cli
sub
jns
jnp
or
and
repz
test
movsl
insl
lret
dec
jle
les
imul
lods
mov
xchg
std
or
or
sub
inc
mov
sub
daa
dec
jg
cli
scas
mov
scas
cmp
stos
adc
test
jo
or
or
pop
lods
adc
clc
lds
fdivr
popl
loop
stos
mov
loop
rcrl
add
popa
cltd
dec
sahf
dec
xor
aas
stos
movsb
mov
push
das
loopne
fstpl
push
sbb
mov
sbb
pop
jnp
xchg
mov
mov
xchg
dec
lcall
orb
shll
shlb
or
lret
pushf
jl
xor
or
in
ret
dec
sub
xlat
pushf
fs
mov
pushf
mov
jmp
cmc
mov
mov
cwtl
nop
in
jmp
ljmp
xchg
mov
sti
mov
inc
je
movsl
jle
pop
mov
jmp
xchg
js
push
adc
adc
add
test
mov
xchg
in
xchg
sti
mov
pushf
add
dec
cmpsb
scas
stos
lret
faddl
insb
in
dec
xlat
push
jbe
jbe
push
adc
int3
scas
in
mov
mov
push
jmp
inc
lret
ret
lea
int
daa
jg
and
adc
sbb
inc
sahf
pop
fsubl
ficoml
out
jmp
mov
test
xchg
and
adcl
inc
movsb
jmp
xchg
and
jecxz
cli
sbb
jl
andl
jge
mov
sub
fistpl
nop
leave
jnp
sbb
xchg
xchg
popa
fs
int3
dec
jnp
push
leave
adc
out
dec
mov
push
clc
mov
pop
cs
scas
sub
jge
out
xchg
arpl
lcall
fcoms
int
insl
jnp
fnstenv
jecxz
push
lock
bound
ja
pop
enter
daa
xor
dec
cmp
repz
push
sub
jns
repnz
jecxz
cmp
push
sbb
sbb
lret
shlb
ficompl
lea
xlat
adc
mov
mov
lods
lock
or
xchg
in
sbb
xchg
mov
ss
ds
xor
subl
jp
mov
int3
sbbl
cli
lods
movsl
xor
dec
jb
cmp
xchg
sti
movsb
daa
jnp
push
push
arpl
mov
ret
jb
sbb
jl
ljmp
insb
int
fdivrs
bound
test
jge
pusha
fs
adc
and
pop
sub
xchg
mov
adcb
lds
rcrl
pop
pop
fucompp
fcomps
mov
lret
mov
mov
jg
hlt
sbb
or
xor
lret
int
imul
add
outsb
add
incb
aaa
adc
movsb
push
lahf
inc
inc
das
push
insl
or
jmp
cmp
inc
movsl
xor
jle
cld
mov
or
mov
int
stc
scas
inc
jne
out
mov
adcb
ljmp
mov
lcall
pop
fsts
gs
enter
test
or
cmp
fdivrl
mov
iret
idivb
out
lock
insl
test
testl
xchg
sub
arpl
sahf
sub
lcall
mov
ret
mov
mov
scas
inc
movsl
ret
adc
adc
cli
aam
repnz
mov
pop
mov
stos
shlb
sbb
adc
cli
or
mov
dec
mov
cmpsl
cld
in
leave
push
or
imulb
and
aad
dec
push
mov
xchg
notl
inc
add
sahf
xchg
mov
push
inc
ret
mov
repnz
cmp
test
or
dec
enter
lock
lock
in
sti
dec
fisttpll
mov
adc
push
and
daa
fcoms
inc
filds
pop
xor
out
les
icebp
or
lret
outsb
orb
pop
stc
xor
lods
xor
xchg
xlat
mov
push
stos
or
int
push
pop
adc
push
push
add
rolb
rolb
pusha
bsf
add
mov
movsb
xchg
sub
add
mov
xchg
daa
pop
cwtl
in
jne
add
dec
mov
popa
sbb
dec
movsb
fistpl
sbb
inc
jo
cltd
push
xchg
cmp
dec
sbb
or
sbbb
or
gs
das
add
test
ret
push
add
lods
icebp
and
or
test
ficompl
test
insb
leave
mov
in
daa
xchg
cmpsl
jp
xor
cmpsb
sub
les
into
add
insb
mov
insl
scas
lods
sbb
pop
sbb
mov
mov
or
fimuls
xchg
sub
sub
xchg
sub
push
jl
or
mov
lahf
sub
out
or
sbb
mov
mov
inc
mov
inc
sbb
pop
fidivrl
outsb
jecxz
fwait
sbb
shrd
mov
mov
add
jns
inc
mov
sbbb
popaw
jle
xchg
divb
shrb
in
test
push
iret
sbb
dec
xchg
add
xlat
inc
leave
add
pop
bnd
sbb
dec
mov
or
fisttpl
jnp
lea
or
adc
or
xor
je
out
popa
mov
cmp
adc
jl
mov
jo
jmp
loope
xchg
call
push
pushf
pop
cwtl
sbb
in
mov
popf
sbb
mov
lods
int
ret
int
mov
das
ret
xchg
push
inc
sti
cltd
negl
dec
or
ss
das
sbb
cwtl
xchg
sub
adc
or
and
call
jnp
arpl
roll
and
test
loop
adc
clc
imul
test
movsl
sarl
xchg
test
insl
test
iret
and
sbb
dec
pop
data16
xchg
call
daa
mov
stos
inc
jno
adc
outsl
mov
mov
pop
mov
fisubs
ret
jnp
call
add
movsb
and
mov
and
add
inc
push
add
shrl
mov
in
add
cmp
jo
adc
lea
roll
loopne
mov
mov
adc
fdiv
inc
movsb
pop
in
xor
fsubr
fs
and
xor
movsl
add
dec
mov
fmuls
or
xlat
insl
leave
dec
xor
test
out
dec
sbb
adc
sub
sub
and
push
mov
jecxz
inc
sbb
movsb
orb
pop
lcall
jnp
push
lea
pop
pop
popf
std
inc
add
cmpsl
xor
mov
mov
add
inc
add
pushf
lcall
aam
xchg
add
ret
and
mov
in
add
js
repz
in
testl
and
sub
fmull
add
roll
add
insl
pop
popf
mov
xchg
cmp
scas
push
dec
test
inc
hlt
or
adc
add
rcrl
out
stos
cwtl
cmp
adc
adc
mov
mov
or
adc
jecxz
test
cmp
mov
outsl
daa
fisubs
movsb
or
pop
cltd
lret
push
xchg
add
jnp
or
cmc
push
jl
repnz
mov
rorb
mov
sub
mov
cltd
lea
test
or
add
sti
push
push
jl
xchg
cmc
loop
dec
sbb
gs
stos
faddl
dec
cmp
out
pop
cmp
out
xor
xchg
xchg
je
adc
out
jbe
xchg
loop
out
jg
loope
or
sbb
aam
or
xor
jbe
push
jbe
mov
and
mov
sahf
fstp
lret
pop
enter
jle
gs
fisubs
cs
xchg
js
push
out
cmpsb
jno
adc
stos
or
loop,pn
inc
pop
inc
xlat
adc
mov
mov
lea
cmpsl
ja
jns
adc
pushf
lret
int3
add
mov
sbb
dec
sub
adc
dec
xchg
fistpl
int3
xchg
mov
stos
or
fsubr
mov
stos
push
mov
and
mov
lods
in
inc
cmp
xor
adc
xor
lret
push
or
xchg
ret
and
xor
insl
stos
scas
fadd
jo
shlb
push
div
pop
push
adc
jb
imul
decb
xor
sub
rorl
dec
xor
dec
cmpsb
push
mov
hlt
fwait
orb
pop
jle
dec
push
or
enter
movsb
add
push
sti
loop
lahf
aam
jle
mov
pop
xchg
add
mov
mov
adc
add
dec
xor
cmc
js
pop
movsb
repz
xchg
or
mov
inc
mov
add
and
xor
inc
mov
mov
pop
test
or
adc
scas
int3
pop
inc
lcall
sub
jne
and
sub
fldt
dec
dec
sti
pop
pop
fdivrl
imul
loopne
sub
sub
dec
dec
sbb
enter
mov
out
cmpsb
pop
and
inc
pop
in
xchg
out
dec
pushf
mov
sub
gs
or
mov
test
push
pushf
fsubrl
cs
out
jno
in
icebp
sub
dec
push
les
sub
aam
lret
rclb
push
sub
out
push
sub
in
xchg
sbb
fcmovbe
mov
inc
js
pop
js
leave
test
imul
leave
scas
lahf
sahf
and
push
icebp
xchg
das
shrl
jnp
jmp
adc
pop
pop
cmp
jle
fwait
data16
stos
or
xor
jmp
cmpsl
pop
or
andl
jmp
popa
add
push
fwait
mov
sub
cmp
scas
mov
std
inc
nop
cmp
adc
xchg
push
inc
jmp
push
cmp
in
idivb
pop
ja
add
jmp
lret
in
test
adc
cli
lahf
enter
sahf
jns
mov
or
or
fadds
sub
dec
inc
mov
mov
mov
inc
iret
jl
mov
jle
xchg
sub
mov
stos
add
clflush
cmp
xchg
or
and
cs
enter
xor
nop
movsb
pop
mov
xchg
shr
lods
dec
jb
ss
int3
xchg
push
adc
adc
or
mov
mov
xchg
add
notb
sub
add
test
mov
pop
push
and
leave
out
add
add
jnp
daa
xor
movsl
mov
adc
mov
fs
mov
stos
or
xchg
add
sahf
jmp
mov
imul
mov
out
in
test
sahf
dec
test
int3
fnstsw
dec
mov
sbb
sub
ljmp
xor
popf
xchg
add
dec
bound
adc
fdiv
pushf
mov
jle
int
jp
sbb
dec
mov
popa
stc
int
pop
adc
hlt
mov
cmpsl
icebp
cli
push
cld
aaa
mov
cs
rorb
pushf
insl
mov
inc
mov
dec
stos
xor
sahf
ljmp
mov
push
add
adc
adc
xchg
pop
test
mov
repz
sub
inc
es
add
mov
push
add
or
mov
shrb
dec
rcl
out
mov
divb
mov
inc
js
sub
push
cmpsl
fs
fdivl
call
inc
je
jbe
sub
push
jb
pushf
cli
aad
adc
fisubs
sbb
dec
rorb
jl
test
das
dec
psrld
fiadds
movsb
mov
aad
call
inc
mov
pushf
repnz
lods
adc
and
insl
test
mov
jle
xchg
enter
xchg
mov
sub
and
adc
sub
aaa
mov
int3
sub
scas
pop
in
out
aam
aas
scas
adc
ficoml
adc
popa
roll
xchg
shrl
mov
ret
test
movsl
test
pop
fnstcw
push
stos
imul
sub
testl
jo
cmp
jle
lret
push
jle
sub
cwtl
or
sarb
popf
cmp
dec
sub
dec
sti
push
insb
cmc
loop
stos
and
pop
cmp
ljmp
fidivl
xchg
fwait
mov
mov
lods
subb
cmc
mov
jae
icebp
ret
mov
xchg
std
iret
repz
cmp
enter
xchg
xor
loop
or
pop
adc
fnsave
add
or
dec
push
mov
or
add
mov
movsb
test
jns
sub
push
shlb
in
cmp
inc
test
or
mov
in
or
das
les
fnop
shll
jmp
inc
mov
ret
stos
mov
sbb
cs
lea
fisttps
fucom
xchg
or
xchg
shlb
aad
enter
cmpb
mov
faddl
ror
push
sahf
sub
xor
ret
push
scas
and
and
or
insb
fldt
sbb
jle
test
subl
and
pop
jecxz
pop
add
les
es
sub
mov
sarb
mov
mov
pop
xchg
mov
push
mov
mov
out
pop
pop
mov
idiv
mov
inc
cmpb
jmp
sahf
add
mov
inc
outsl
hlt
dec
sahf
daa
push
adcl
loop
push
daa
scas
rorb
stos
sarl
lret
fistpll
cmp
add
fisttps
into
pushf
cmp
jp
cmp
and
adc
test
ficompl
test
jmp
test
fucom
sarb
and
fidivl
sti
ror
fsubl
inc
xor
pop
mov
sub
js
jp
stos
sbb
js
rcl
movl
rcrb
fnstenv
fnstenv
testb
xchg
int
out
adc
imull
inc
lret
mov
ret
mov
mov
addl
loop
pop
outsl
jnp
mov
sub
fdivs
addb
xchg
pop
daa
lahf
cmc
mov
or
push
add
cmp
das
jge
push
xchg
and
mov
jnp
lret
sub
dec
lds
loop
in
mov
pusha
mov
fs
aad
ret
bound
ss
in
mov
shl
push
mov
aam
mov
xorb
jge
enter
mov
cli
loop
loope
lahf
fcompl
mov
mov
push
jbe
pop
xchg
notl
xchg
push
out
sub
jnp
icebp
and
sub
add
mov
fs
xchg
xchg
push
mov
out
xchg
mov
inc
adc
mov
inc
sti
mov
les
xor
ret
mov
in
pop
add
test
cmp
fisttpll
jno
mov
mov
push
or
jl
push
loope
sub
add
sub
sbbl
xchg
push
push
enter
mov
nop
or
loop
inc
lock
cltd
pop
pop
popa
adc
out
ss
pop
and
inc
les
lcall
cmp
addb
add
je
dec
push
push
les
out
ljmp
jne
mov
rclb
popa
xchg
or
loopw
sahf
outsb
aam
cs
dec
cmp
daa
and
lcall
cs
jae
les
dec
arpl
push
xlat
push
stos
mov
pop
jae
mov
test
int3
pop
lret
mov
out
fmuls
or
idivb
mov
xor
and
mov
xacquire
xor
sub
or
enter
fsubrl
fs
jmp
aam
repz
ficomps
or
in
push
imul
mov
je
lods
push
into
inc
push
and
or
or
sub
iret
rcrb
mov
daa
dec
sti
ja
adc
or
mulb
dec
jno
mov
cli
sub
jnp
mov
scas
lods
mov
popa
out
dec
adc
test
jno
sbb
icebp
gs
sti
jno
orb
out
jnp
cmpsl
mov
push
mov
ret
adc
mov
fs
cwtl
fs
adc
sub
pop
shr
subb
sub
cmp
inc
das
sub
shr
adc
into
je
loope
and
iret
test
jno
sbb
and
lock
mov
push
dec
scas
lret
jle
ret
scas
dec
pop
leave
mov
push
xor
outsl
pop
xchg
rcrl
adc
jnp
cmp
mov
jns
cmp
and
sbb
fsubr
in
andb
adc
js
fistps
stos
pop
daa
xor
jae
jno
jno
int
test
xchg
ds
fildll
and
mov
jns
leave
cmp
mov
or
int3
cmp
dec
mov
test
xor
cli
test
or
cld
adc
sti
shlb
sahf
aaa
mov
loop
xor
mov
cmp
pushf
push
shll
pushf
sbb
out
mov
les
shll
jecxz
ffree
movsl
xor
pop
lcall
mov
sub
mov
cltd
call
int3
push
ljmp
pop
push
jmp
xchg
out
sub
xchg
push
xor
push
stos
mov
inc
sbb
push
push
sahf
shll
jecxz
movsb
jo
mov
jno
pushf
xchg
sti
sahf
arpl
out
xchg
in
dec
jle
rcrb
jbe
or
xchg
ficoml
add
imul
inc
mov
sbb
xchg
push
out
push
dec
dec
inc
mov
ds
inc
pop
inc
mov
mov
mov
jge
sbb
pop
sbbb
xor
push
sahf
inc
jae
fwait
xchg
add
and
movsb
int
out
inc
xchg
sub
dec
loopne
jmp
clc
scas
or
jns
xchg
fiadds
dec
daa
sub
jg
loop
popf
fisttpll
jns
shlb
or
inc
aad
mov
dec
push
mov
add
and
shll
int
jnp
cli
push
or
sahf
inc
inc
inc
or
push
imul
inc
sub
test
repz
std
push
mov
jge
adc
in
test
adc
fwait
push
fwait
dec
push
cmp
or
or
add
cmpsl
lea
fcompl
add
add
mov
or
jg
iret
stos
out
test
out
jecxz
pusha
adc
icebp
xor
xchg
sahf
add
jb
add
in
mov
jge
rol
mov
push
clc
je
mov
dec
pushf
lock
jge
inc
adc
cmovo
xchg
xor
jecxz
sti
sahf
push
push
push
ljmp
pop
mov
jg
or
pop
inc
jg
clc
rorl
pushf
ret
roll
push
or
xchg
add
lahf
leave
call
add
cmpb
xchg
and
xchg
filds
das
adc
and
add
cltd
xchg
movsl
xor
lods
ljmp
adc
mov
cmpsl
mov
adc
test
shrl
mov
sub
and
xchg
push
adcb
pop
dec
mov
push
scas
fwait
mov
out
adc
test
fsubl
sbb
fscale
lret
dec
mov
test
xchg
cmpsl
call
push
add
sub
rol
dec
mov
xorl
cmp
pop
or
xor
xlat
sbb
add
sub
add
xchg
adc
and
lea
fwait
ret
pop
xor
mov
call
mov
adc
jle
and
jecxz
fimull
icebp
aam
cs
inc
ret
aad
or
jp
adc
xchg
mov
mov
sbb
pop
fs
pop
cmc
adc
clc
xchg
adc
xchg
inc
jecxz
rorl
cmpsl
mov
sbb
ficomps
imul
sti
lret
pop
lods
xchg
pop
jns
inc
inc
movsb
sbb
stos
xor
lret
rcr
stc
sbb
inc
stos
xor
xor
xor
pusha
pop
jle
xchg
sbb
xor
daa
dec
pop
les
loop
sub
lods
mov
shl
loop
enter
mov
xchg
fs
lea
mov
test
mov
inc
xor
and
je
ret
mov
sub
cmpsb
repz
lcall
movsb
test
dec
mov
or
into
add
arpl
pushf
and
lahf
mov
push
sahf
aam
dec
dec
fs
pop
or
adc
dec
mov
bound
add
call
mov
cmpsb
mov
dec
ficompl
ret
addb
sbb
ja
neg
lock
div
dec
inc
aaa
push
sub
jecxz
lahf
les
pop
jmp
loope
jmp
dec
shll
hlt
mov
adcl
loope
fiaddl
lret
mov
and
mov
mov
push
add
lock
ss
sbb
lcall
je
jnp
mov
and
push
aad
fcmovnb
inc
cmc
aam
mov
into
mov
inc
or
clc
adc
cmp
repnz
jmp
scas
dec
mov
int
inc
lock
shl
or
mov
stos
test
jle
data16
lock
lea
mov
loope
clc
push
lcall
add
enter
pop
xchg
add
inc
les
add
addl
call
ret
add
mov
jns
incl
jbe
je
nop
mov
mov
fimull
sub
jge
push
adc
repnz
cmpsl
push
repnz
push
pushf
push
faddl
mov
scas
cwtl
int3
cmp
mov
xchg
jl
cmp
cli
mov
fmuls
lods
jmp
lds
sub
leave
js
jg
pop
xorl
push
call
or
mov
and
data16
es
jmp
int3
call
jae
test
mov
adc
mov
call
pop
dec
fimuls
cmpsl
push
cmp
bound
out
jae
fisubrl
pop
xor
ret
cmp
bnd
lret
out
dec
enter
aam
xchg
cmpsl
and
push
lds
addb
sti
ror
cmp
mov
mov
add
add
mov
jmp
lds
aaa
sub
repnz
cmpsl
adc
push
subb
push
push
jbe
pop
jecxz
leave
jae
ds
sti
mov
push
mov
cltd
xchg
rolb
in
sahf
cmpsb
repz
outsb
mov
mov
push
or
mov
out
int3
in
mov
inc
sub
xor
push
xchg
adc
lret
cwtl
xor
jmp
in
pushf
pop
pop
mov
fnsave
ljmp
je
mov
inc
jae
js
inc
in
xchg
jecxz
rcl
mov
pop
lret
arpl
add
and
pop
and
cmc
push
stc
ja
sub
jno
mov
bound
pop
adc
repz
repz
push
jmp
or
mov
lret
pop
testl
test
shll
repnz
inc
stos
lods
out
clc
sbb
mov
dec
shll
or
sbb
pop
lret
adc
push
test
test
mov
or
add
lcall
push
sbb
sti
xor
loopne
sti
ljmp
lea
aaa
or
outsb
sub
and
add
daa
add
push
xchg
push
nop
sbb
call
jne,pn
nop
lret
lock
addb
mov
and
les
and
xchg
lock
imul
sbb
sbb
adc
and
jle
xchg
mov
lea
repz
jb
add
mov
add
ljmp
mov
cmpsl
adc
mov
adcl
cmp
sbb
cmpb
fcomps
pop
inc
sub
xor
and
mov
push
repz
mov
cli
mulb
push
cmpb
vpermt2d
stc
push
fiadds
jns
sti
mov
pusha
clc
aas
inc
out
or
or
movsl
rcl
pop
insb
push
cltd
add
jo
or
add
inc
call
js
mov
scas
ja
or
call
mov
mov
sub
mov
and
pushf
je
add
xchg
cli
frstor
push
or
push
cli
or
sub
xchg
jmp
jnp
sti
push
jb
cmp
sbb
add
sbb
cmpsb
rcrb
inc
addl
aad
pop
jle
push
rol
adc
ljmp
mov
adc
adc
sbb
rep
jae
pop
jns
arpl
and
movsl
push
sti
test
in
jge
mov
sbb
inc
mov
push
ss
out
out
push
stos
je
jae
xchg
fcmovnu
fsub
jb
or
jne
fcoml
mov
insl
aaa
lds
iret
lods
pushf
psllq
mov
arpl
int3
dec
mov
js
inc
call
aam
push
adc
js
movsl
psrld
lds
mov
mov
xor
insb
xchg
leave
dec
dec
jecxz
callw
imulb
jl
jle
mov
pop
ficompl
ror
or
sahf
imul
mov
cmp
pop
sbb
std
adc
andb
or
fwait
dec
les
mov
faddl
pop
movb
rcll
out
in
lods
mov
movsb
aas
push
mov
dec
leave
inc
negl
mov
sub
add
dec
inc
out
adc
ljmp
sub
mov
bound
adc
inc
cld
pushf
aam
mov
in
xchg
mov
cli
or
subl
mov
lret
mov
movsl
inc
sahf
ret
dec
outsb
inc
data16
outsb
dec
push
jmp
xorl
and
dec
pop
imul
pop
pusha
mov
loopne
enter
push
sti
sahf
ljmp
push
and
sar
mov
imul
lahf
inc
daa
cltd
xchg
add
in
inc
jmp
push
xchg
or
outsl
insb
pop
cmpsb
mov
sar
cltd
aaa
fsubr
mov
sub
clc
push
mov
xchg
ret
orl
push
xchg
add
dec
pop
clc
adc
jmp
xor
scas
inc
or
xchg
or
test
pop
test
jmp
sbb
fs
sub
aam
aam
or
jae
push
fs
shl
insl
pushf
jmp
fldln2
mov
mov
or
leave
jecxz
xor
dec
mov
sub
jp
in
bound
popa
or
ret
add
test
and
mov
out
sub
je
call
outsb
ljmp
dec
leave
add
aaa
push
clc
pop
cmpsl
iret
fiadds
inc
jmp
or
cwtl
cli
push
in
cmp
or
xor
sub
inc
lods
mov
xor
test
mov
sbb
xor
add
mov
subb
scas
dec
daa
lret
push
and
pop
loopne
adc
jle
xchg
addl
sub
or
test
and
push
mov
sbb
push
sbb
sub
sub
repnz
jno
pop
adc
or
movsb
out
ficompl
push
push
shlb
fcoms
call
int
push
jmp
mov
scas
cltd
cmp
jl
imul
popf
out
leave
ficompl
cld
mov
int3
pop
shl
ror
mov
out
lret
dec
sub
cmpsb
adc
jg
inc
pop
add
dec
ret
lods
xchg
adc
fildll
add
mov
xchg
andb
mov
or
sbb
fstps
inc
cmpb
and
leave
cli
ret
mov
shl
jg
fdivrl
sbb
mov
xor
lds
adc
add
ret
cmc
xor
fcoms
push
push
pop
shll
inc
addr16
mov
pop
dec
adc
insb
stos
aad
mov
mov
popa
jmp
add
outsl
notl
push
scas
mov
out
or
pushf
test
cmp
pop
adc
push
fstpt
out
outsb
insb
lods
sarb
js
out
stos
cmp
rorl
sti
movsl
bound
mov
sbb
jecxz
inc
outsl
lret
popa
and
outsl
dec
pop
push
das
out
dec
sbb
adc
aaa
sbb
lret
sbb
jmp
pop
jns
dec
call
hlt
xchg
lods
scas
mov
stc
pop
pop
cmp
cmpsb
jg
rol
jg
jns
data16
and
add
fisubrl
mov
add
jbe
sub
outsl
cmp
xor
les
out
mov
sub
mov
inc
mov
inc
out
xor
sbb
xor
dec
mov
mov
sti
adc
lret
inc
mov
daa
adc
jge
js
movsb
or
notb
mov
dec
xor
test
mov
xchg
sti
aad
sub
call
imul
nop/reserved
in
inc
mov
cld
lods
cmp
iret
rorl
inc
movsl
mov
int3
aas
mov
sub
lcall
out
push
loop
and
inc
pop
repz
or
add
jmp
lods
int
subl
cmp
push
xchg
jo
dec
cmpsl
mov
sub
stos
je
mov
jg
jp
test
popa
test
das
insb
mov
inc
sbb
imul
outsb
cmpl
mov
jmp
or
ret
dec
adc
jmp
and
movsb
pop
jmp
adc
and
adc
xor
jbe
fwait
pop
pop
sub
and
subb
insb
jge
xlat
mov
push
mov
jecxz
out
cmp
mov
andb
jle
pop
mov
inc
les
fnstenv
dec
jl
cld
cmp
inc
push
ret
ljmp
scas
loop
mov
mov
xchg
xor
movsl
xlat
repnz
mov
add
mov
gs
sub
insl
movsl
and
or
js
stos
mov
bound
jge
add
and
and
jge
xor
pop
xor
sbb
aam
pop
cmp
xor
sahf
in
jcxz
push
and
faddp
ret
popf
mov
pop
push
iret
decb
cmpsl
sahf
dec
and
dec
mov
js
xor
jmp
jmp
sbb
lods
adc
xor
inc
ja
cmp
pushf
inc
loopne
enter
test
movsl
stos
loope
imul
loopne
mov
and
sbb
xchg
mov
cmp
xchg
or
xchg
or
add
or
iret
lods
vmovhpd
xor
loope
mov
add
leave
lahf
add
repnz
fsub
hlt
call
in
dec
ds
push
pop
loope
pop
je
push
mov
mov
sub
imul
push
jnp
mov
leave
js
loope
push
jmp
emms
lock
dec
loopne
movsl
adc
dec
cmp
lcall
add
xchg
call
xorb
adc
div
lods
int3
and
dec
sub
sub
and
imul
lret
add
lods
push
inc
push
mov
lods
iret
loop
mov
mov
xchg
fsub
in
das
xchg
rorb
xchg
push
add
popf
or
lret
xchg
push
les
repz
pop
adc
dec
mov
mov
push
bt
movsl
xor
sbb
enter
pop
mov
mov
mov
aaa
sahf
bndstx
adc
push
xchg
mov
int3
clc
js
push
or
fwait
insl
addb
add
int3
sbb
lcall
movsl
faddl
cli
sub
scas
cmp
daa
xor
xchg
lret
ret
jmp
or
add
dec
add
ret
sbb
push
sar
pop
mov
or
loope
ljmp
push
repnz
orb
and
push
daa
inc
mov
adcb
dec
aam
push
mov
inc
stos
dec
ret
push
sti
sub
or
iret
je
shrb
ss
cmp
lcall
daa
cmp
addb
mov
add
lret
pop
cs
aaa
adc
add
rclb
and
rcrb
add
in
sti
bound
inc
pop
pop
mov
adc
out
sbb
enter
jbe
clc
arpl
sub
popa
mov
js
loope
and
add
sub
fistl
cmc
add
call
in
adc
mov
ljmp
out
imul
out
mov
jmp
sarl
and
jno
test
lock
mov
push
and
pop
or
sbb
push
adcb
cmc
das
sbb
mov
clc
dec
mov
roll
mov
add
pushf
out
jle
dec
popl
pop
mov
inc
pop
aas
adc
push
loopne
adc
lds
sbb
adc
subl
sub
jmp
sbb
repnz
push
dec
jp
push
and
movsl
rolb
jg
sbb
aas
cmc
scas
mov
adc
push
cmp
cwtl
dec
jnp
adc
xchg
das
cmc
daa
stc
or
dec
mov
add
lahf
sbb
je
lahf
push
mov
sbb
jg
inc
or
sbb
pop
adc
addr16
pop
push
jmp
jmp
popa
addl
ret
aaa
dec
and
fdivrl
adc
jl
insb
test
mov
imul
inc
test
and
lret
push
and
loope
xor
sbb
movsl
jmp
int3
add
mov
fwait
andb
cwtl
jmp
movsb
sbb
pop
mov
sahf
lret
sub
push
cwtl
test
lret
or
adc
xchg
or
xchg
adc
push
jg
pop
adc
shlb
enter
mov
pop
push
ss
and
sar
or
push
lods
pop
jp
aad
jno
xor
dec
mov
je
shll
mov
popf
je
push
lret
pop
test
test
adc
je
push
repz
pop
leave
or
xchg
xchg
ja
repnz
xchg
pop
fwait
inc
or
pop
fmuls
cwtl
xor
xchg
stos
xchg
mov
addr16
mov
in
sti
jge,pn
and
push
xchg
and
fxch
jns
icebp
sbb
movsb
sub
cmp
pop
xchg
jo
adc
pop
adc
out
imul
sahf
sbb
jno
or
add
subl
pop
xchg
xchg
mov
mov
sub
jae
mov
lret
sbb
cld
cmp
sbb
lods
or
sti
cwtl
and
jo
in
sub
inc
jns
lods
adc
mov
jl
or
shlb
stos
push
sti
out
xchg
bnd
pop
xchg
dec
lret
mov
repz
in
enter
test
pop
pop
fiaddl
jno
shlb
stos
xchg
add
and
pop
adc
fstp
adc
adc
xchg
pop
xor
out
cli
sbb
les
je
xor
push
cmc
test
sti
sti
int
mov
cmpl
push
mov
les
jmp
lods
aas
add
xchg
and
not
mov
inc
xchg
insl
out
jle
sbb
loope
adcb
adc
incl
jg
test
xchg
lret
adc
jg
popf
lret
xor
or
test
scas
jle
xlat
xchg
sbb
or
xor
lret
cmpsb
scas
cmpsl
call
or
xchg
insl
add
mov
std
push
out
or
mov
jge
in
jb
popf
aaa
out
mov
push
sub
and
stc
adc
enter
jcxz
sbb
stos
test
and
stc
cmp
and
push
int
sarl
daa
or
insb
pop
pop
dec
repnz
lret
pop
pop
mov
push
cmc
pop
xor
orb
or
lcall
xchg
mov
jmp
fdivs
push
adc
jns
addr16
adc
popa
in
sahf
inc
jns
mov
cld
pop
bound
aad
std
xor
inc
sahf
add
adcl
test
sub
fucomp
pop
pop
dec
adc
mov
pop
repnz
adc
test
xlat
stos
test
push
int3
fbld
lret
or
das
sub
enter
or
jl
mov
stc
mov
cs
sub
xor
add
pop
ret
fwait
cmp
mov
jge
mov
outsl
cld
xchg
sub
jb
jnp
or
cwtl
fildl
out
pusha
push
push
andb
sahf
mov
push
xchg
jl
xchg
sub
movsl
or
add
mov
shll
sbb
loop
stos
int3
aam
push
outsb
and
and
mov
cmp
mov
jnp
ret
enter
or
adcb
or
pop
jmp
inc
leave
daa
hlt
shll
outsb
lret
scas
dec
stc
repz
adc
pushf
lcall
loopne
test
fwait
pop
inc
add
ret
jmp
mov
and
inc
cmp
xchg
inc
or
mov
push
jbe
sbb
add
adc
bound
cli
or
mov
mulb
out
fiaddl
cmp
pop
sub
xor
mov
xor
pusha
int3
movsl
pop
add
in
inc
pop
pop
inc
add
jecxz
fldpi
adc
std
in
stc
lea
mov
inc
add
dec
jmp
or
enter
lret
and
lahf
out
sbb
mov
test
pop
arpl
fcompl
adc
in
loop
ret
inc
int3
xchg
or
shll
xchg
add
mov
xchg
mov
or
adc
jbe
jne
xchg
mov
movsl
xor
imul
or
enter
mov
lea
dec
sti
or
mov
insb
loop
xchg
mov
adc
pop
pop
andl
xchg
xchg
xchg
push
push
xchg
movups
push
js
sbb
dec
js
cld
in
jl
cmp
enter
sti
mov
push
jmp
add
pop
adc
cmp
mov
fwait
inc
stos
pop
mov
dec
shll
je
loop
add
sbb
mull
dec
pop
mov
sbb
into
mov
dec
or
dec
in
pop
test
jl
sub
pop
mov
and
adc
mov
ja
lea
mov
ss
mov
shl
xchg
ficoms
into
arpl
push
imul
mov
rorb
mov
scas
or
outsl
imul
jg
ret
filds
fdivrl
stc
mov
mov
rcrb
xchg
add
stos
jnp
sbb
jl
cld
lahf
pop
cltd
mov
lret
mov
xchg
inc
xchg
lret
imul
fcmove
add
push
mov
out
jle
mov
loope
sub
fwait
push
sti
pusha
aam
in
jl
fbstp
imul
in
dec
xlat
push
xor
mov
mov
arpl
mov
push
shll
lret
cli
test
add
pop
in
stos
inc
jl
adc
sbb
jae
pop
xor
xlat
inc
dec
mov
sbb
mov
sahf
sub
ja
push
dec
mov
test
in
jecxz
jp
int3
inc
or
cld
sbb
es
mov
in
pop
imul
cmpsb
adc
fs
mov
sti
mov
arpl
mov
cmpsl
dec
bound
adc
sahf
ds
jmp
sbb
adc
sub
sti
das
mov
loop
movsl
into
cmp
sbb
fcoml
aad
cmp
imul
push
add
cs
fisttpl
push
jg
in
scas
lods
mov
jp
inc
or
sahf
adc
xor
mov
mov
mov
adc
push
sub
mov
jb
push
dec
jg
cmp
dec
mov
fs
out
lods
inc
mov
les
jge
addb
imul
jns
call
push
out
jg
push
imul
mov
inc
xor
cmp
jbe
sub
sbb
out
shrl
loop
in
cmpsb
mov
loope
push
add
jg
or
sub
jnp
pop
in
xlat
in
adc
or
mov
mov
mov
or
test
sbb
sub
rolb
mov
add
cmp
xchg
pop
test
ljmp
mov
mov
inc
je
mov
ret
in
enter
sbb
mov
xor
fwait
mov
out
lret
jae
adc
sub
rorl
cmc
cli
rcr
test
push
in
loop
fcoms
ficoms
push
jmp
int3
dec
test
mov
add
adcb
imul
loop
test
scas
andb
mov
popa
jge
cmp
sar
cli
in
inc
les
cli
mov
hlt
sti
stc
lcall
sub
in
lds
xchg
or
inc
dec
loope
adc
mov
fld1
or
jae
cmp
in
adc
in
and
mov
stc
scas
ljmp
in
sahf
cmp
lods
pop
xchg
xchg
dec
cmp
sbbb
pushf
sbb
jmp
test
mov
inc
add
pop
movsl
sub
ret
sub
sub
movsl
inc
sbbb
jnp
loope
mov
add
roll
sbb
jecxz
jae
aaa
ret
hlt
dec
adc
insb
inc
or
cmp
mov
push
imul
aas
into
xor
and
and
es
jge
pop
xchg
out
sarl
aad
or
popf
inc
loope,pn
or
hlt
enter
scas
movsl
xor
mov
stos
cs
mov
inc
xor
and
xchg
imul
dec
add
sbb
or
push
cmp
inc
xor
sbb
push
aad
pop
fwait
adc
xchg
pop
and
addr16
pop
int3
xchg
bound
arpl
push
out
pop
in
jp
sbb
mov
repnz
lods
sti
imul
sahf
gs
or
add
cwtl
dec
sbb
bnd
lods
fucomi
sbb
insl
add
sti
sub
sub
lea
in
or
push
add
scas
mov
mov
or
pop
subb
jnp
pop
lods
iret
jbe
push
test
movsl
mov
scas
mov
and
int3
xlat
sti
dec
jmp
mov
jmp
in
mov
xchg
icebp
sub
add
fs
ret
leave
inc
or
lret
aam
add
push
xor
pop
inc
orl
push
push
xchg
repnz
in
xchg
shll
sarb
dec
sbb
push
sbb
fcmovne
inc
test
lret
and
dec
mov
cmpb
icebp
fildl
shrb
hlt
sbb
ret
fwait
outsl
pop
add
xor
ds
fisubs
push
mov
mov
rolb
cmp
jnp
in
es
pop
inc
lods
icebp
out
add
inc
sahf
pop
lret
jecxz
mov
sub
xor
scas
punpcklqdq
out
jecxz
test
inc
leave
xor
adc
dec
inc
xlat
fs
popf
adc
test
sbb
out
mov
stos
sbb
pop
stos
jle
inc
cmp
sub
adc
pop
frstpm(287
cld
push
lods
arpl
add
or
shlb
fisttps
add
icebp
shrl
jbe
or
mov
inc
mov
insb
ljmp
push
xchg
push
nop
or
cmpsl
rcll
cmpsl
jecxz
stos
scas
cmpsb
popa
lods
pop
push
outsb
mov
mov
or
popl
mov
or
sub
iret
or
rcrl
xchg
sbb
or
jb
mov
pop
xor
jmp
sti
cmpsl
paddusw
lock
lods
add
stos
jl
adc
ljmp
or
dec
fimuls
jmp
xor
push
aas
nop
xor
jl
out
push
in
mov
adc
push
sub
movsl
lea
fiadds
dec
push
cmc
aam
sub
out
pop
pop
in
dec
jmp
rorl
adc
push
fiaddl
sub
mov
test
jne
fiaddl
fcmovnb
mov
inc
sbb
ljmp
rcl
ljmp
rol
repnz
add
jmp
lret
sbb
scas
popa
xor
sbb
adc
add
ficoml
lcall
dec
add
adc
test
push
or
add
adc
pop
add
sbb
push
sti
add
inc
mov
mov
xlat
xchg
and
pop
stos
pop
xchg
jb
dec
inc
gs
ret
push
dec
fs
sub
add
leave
cmp
jle
dec
add
lods
pop
lods
sub
inc
int3
mov
test
stos
dec
in
aad
cmc
sti
int
or
push
sub
push
ret
js
xor
sbb
mov
inc
push
scas
mov
adc
ljmp
imul
and
jne
lcall
imul
and
jno
js
stos
sbb
shlb
mov
push
andl
sub
xchg
mov
movb
jge
inc
int3
or
jle
dec
mov
pop
cmp
mov
pop
add
dec
in
scas
xchg
or
push
adc
lret
dec
inc
pushf
dec
mov
xor
lods
rcrl
pop
rorb
cmp
inc
cmp
mov
mov
jmp
popf
or
xchg
inc
test
or
ja
shl
add
push
sbb
pop
pop
xchg
fisubl
sbb
mov
js
int
xchg
add
mov
filds
popa
orb
xchg
bound
clc
xchg
ret
lea
jae
sbb
jbe
mov
sbb
fisubl
lret
jp
add
stos
or
pop
dec
pushf
daa
push
addr16
mov
sub
icebp
dec
jno
sub
movsl
mov
xchg
xchg
andl
ss
xchg
push
mov
incb
testb
sub
inc
jecxz
xor
lods
sub
pop
mov
add
push
or
cltd
sub
fimuls
jo
xor
call
test
inc
cmp
cmpsb
repz
or
cli
cmpb
sahf
and
subb
leave
jmp
and
repnz
int3
popf
out
sub
push
into
inc
sub
adc
dec
sbb
cmp
add
test
mov
mov
sahf
es
sub
stc
aaa
cwtl
xchg
mov
push
or
ret
xor
pop
xchg
xchg
lcall
lea
and
cmp
push
outsb
inc
add
and
es
xchg
pop
push
cmp
jp
and
addl
inc
test
mov
jmp
repnz
les
push
fwait
jo
ret
add
repz
or
jge
cmp
lock
pushf
pop
rcll
xchg
xor
stos
and
loope
mov
adc
in
lds
lahf
fisttps
push
daa
cmp
bound
jp
inc
enter
scas
aad
xchg
mov
push
adc
imul
sti
or
mov
cld
and
scas
std
fisubrl
rcll
not
mov
cld
adcl
in
push
sbb
fnstcw
xchg
cmp
repnz
cmp
repz
mov
fmul
sahf
ret
lret
jecxz
cmp
dec
adc
jns
arpl
sahf
movsb
loope
lds
in
mov
mov
lret
push
dec
jnp
mov
fadd
xor
push
inc
fiadds
cmc
adc
rorb
pop
sti
rolb
mov
popf
popf
les
in
or
or
add
lret
movsl
mov
pop
imul
rolb
loopne
sub
lret
ret
mov
sbb
and
insl
cmpsb
dec
fistl
outsb
push
or
dec
repz
fwait
lods
fsubs
mov
pushf
insb
pushf
and
mov
pop
shrl
or
clc
fsubrs
adc
insb
mov
push
lods
movl
cmc
add
jnp
or
cmp
rol
popf
shlb
mov
hlt
lock
pop
ret
sub
out
push
mov
jle
and
sar
ficoml
int
pop
in
lds
jns
pushl
ja
out
cmpl
jp
sbb
cmp
lahf
inc
xchg
cs
and
out
add
adc
push
hlt
lret
push
lods
roll
push
xchg
push
jle
movsl
mov
push
xchg
mov
inc
aas
jecxz
and
pop
mov
sbb
inc
not
jmp
call
gs
or
dec
mov
fildll
out
imul
or
hlt
and
mov
icebp
iret
mov
cmpsl
mov
fsubrp
jbe
scas
push
and
aaa
icebp
and
or
lcall
sub
mov
mov
fsubrl
movsw
das
push
mov
out
in
or
movb
imul
dec
lret
pop
out
xor
jnp
sbb
jl
xchg
call
xor
outsb
orb
dec
push
and
sub
fwait
loopne
es
cmp
outsb
out
ret
mov
mov
iret
mov
jle
cmp
xor
mov
das
xchg
sti
es
push
shrb
les
mov
notb
outsl
jnp
std
das
fs
mov
add
std
loope
adc
adc
pop
lds
sub
jnp
or
in
sub
movsb
pop
jl
sbb
imul
mov
inc
lea
int3
adc
sub
in
movsw
adc
js
push
sahf
and
outsl
pop
es
xchg
mov
sub
aad
mov
ljmp
push
stos
movb
rorb
mov
sar
cmp
mov
dec
xor
les
enter
cmp
add
sbb
mov
cmovns
push
loop
or
mov
jns
sub
insb
inc
test
or
cmp
mov
hlt
pop
loop
sub
adc
or
pop
mov
stos
pusha
pop
repnz
mov
xchg
clc
cmp
jl
repz
movsb
mov
inc
xor
out
push
enter
in
pmuludq
int3
mov
xchg
sti
push
and
sahf
out
out
adc
mov
mov
mov
scas
jle
mov
cmpsl
inc
or
lods
out
cmp
xchg
sarb
mov
orl
repnz
gs
mov
inc
movsl
dec
sti
jno
mov
int3
clc
mov
jge
inc
mov
xchg
jle
jnp
cli
test
add
inc
inc
or
test
faddl
in
cmc
fs
adc
aad
push
jae
xlat
mulb
cmpb
or
cld
xchg
shll
enter
shrl
push
sbb
mov
cmpsb
lea
imulb
pop
xchg
adc
add
out
cmpsl
xlat
repnz
pop
and
fiaddl
mov
daa
lods
xor
mov
bound
movsb
test
cmpsl
movsl
setle
xor
cmp
add
jecxz
stos
or
lods
jg
or
cli
imul
sbb
cmc
mov
lahf
push
les
movb
add
dec
loop
inc
sub
dec
jmp
js
adc
inc
push
enter
or
jecxz
int3
mov
and
add
cmpsb
pushf
dec
lahf
addr16
stos
adc
lods
cld
scas
xchg
jnp
pop
pop
mov
dec
iret
in
dec
dec
or
cmp
sbb
popa
adc
mov
and
or
xchg
pop
fs
or
pushf
sub
mov
stos
or
push
gs
pop
sub
push
sub
jns
add
mov
in
jo
pop
inc
movsb
jo
fwait
test
cmpsb
movsb
mov
mov
dec
dec
aaa
push
xchg
loop
pop
nop
jne
jnp
pop
mov
loop
jge
adc
sti
xor
bound
jno
fs
sub
hlt
stc
cs
pop
pop
icebp
out
enter
mov
jb
xor
subb
add
adc
pushl
icebp
mov
jle
or
sti
sbb
enter
dec
push
ror
lret
inc
or
adc
dec
push
sbb
and
cmpsl
or
mov
addr16
add
push
sub
xor
sub
jge
pop
push
and
sbbl
mov
loop
mov
mov
mov
nop
popf
icebp
scas
add
dec
add
dec
adc
cmp
out
pop
sub
fsubrl
jno
xor
xchg
lahf
lea
xchg
imul
xchg
push
xchg
loopne
cli
movsl
aam
or
sahf
lods
add
dec
in
push
cwtl
les
pop
pop
sti
xchg
sbb
pushf
and
jecxz
mov
mov
stos
or
xor
popa
arpl
or
cmpsb
int3
lret
bound
dec
fs
cmp
lea
inc
imul
mov
sub
fcoms
pusha
fsubl
daa
out
es
out
pop
jl
gs
mov
fistpll
mov
adc
sahf
mov
pop
xor
imul
cmc
sub
xchg
rcrb
loop
sahf
test
inc
shlb
cmpsl
scas
pop
adc
inc
jge
rorb
inc
loope
addb
loope
mov
cli
ret
sub
jae
repnz
and
fildl
and
inc
mov
mov
mov
sub
fmuls
jbe
sbb
jle
jl
mov
sahf
jb
cwtl
cmpsl
inc
jne
test
test
cmp
ja
movsl
add
aad
sahf
leave
mov
hlt
mov
insb
jb
or
aam
xor
mov
inc
insl
int3
or
adc
lods
fmull
or
jnp
dec
fdivr
inc
ja
add
lret
push
je
pop
sbb
jp
pop
jne
mov
push
and
xchg
je
imul
mov
lcall
push
mov
or
sti
inc
adc
sbbl
add
shrl
dec
ja
push
adc
or
push
arpl
into
pop
loopne
aam
repnz
dec
push
in
mov
jmp
and
hlt
jo
int3
add
jae
ret
call
fisttps
jecxz
cmpsl
je
cli
push
hlt
push
decl
out
int3
aam
out
out
jl
jecxz
sub
sub
sti
mov
mov
cmp
addr16
push
out
add
stc
pop
rcl
inc
inc
push
data16
data16
sbb
pop
leave
in
jl
adc
mov
pusha
jecxz
adc
add
nop
fldl2e
mov
mov
xchg
lahf
in
mov
jnp
popa
sub
adc
sbb
add
xchg
add
or
cwtl
jmp
sti
fdivr
loope
jmp
fdivrs
lret
mov
bound
pop
ja
stos
jl
cmp
vpshaw
or
mov
es
sub
jnp
mov
out
jp
push
mov
sub
pop
mov
and
scas
mov
cmp
movsb
mov
test
adc
out
push
out
fimull
add
enter
scas
push
add
icebp
fcoms
in
out
shlb
sub
int3
shrb
insb
mov
dec
sbb
push
and
mov
nop
and
cmp
pushf
data16
stos
cmpl
adc
pop
push
or
in
push
jp
aam
push
clc
sbb
lods
aam
or
adc
fsubrl
adc
jle
xchg
lret
jmp
mov
pop
xor
adc
pushf
enter
xor
iret
enter
js
call
cld
hlt
sub
test
mov
pop
pop
out
add
popf
push
pmulhw
hlt
iret
cld
sarl
pop
mov
add
cmpsl
les
popf
mov
loop
mov
dec
enter
fwait
jb
adc
movsl
pop
add
dec
imul
xchg
aam
mov
pop
sub
or
add
lret
les
jge
sub
movsl
out
popf
adc
add
or
xor
jnp
or
clc
stos
test
loop
sbb
xchg
pop
in
xchg
data16
pop
int3
or
mov
pop
xor
adc
push
out
xchg
cmp
push
xlat
mov
lret
aaa
mov
dec
movsb
push
adc
mov
adc
push
cld
and
mov
loop
in
popa
add
cwtl
insb
cmp
clc
lret
jnp
sbb
or
and
int3
adc
stos
fwait
add
sbbb
or
mov
mov
xchg
inc
cmc
in
int3
jle
sti
arpl
adc
lods
aaa
repz
sub
sbb
adc
out
mov
push
nop
mov
dec
jmp
pop
cmc
stos
jnp
jecxz
mov
fisttps
test
std
inc
mov
and
adc
inc
lea
arpl
lods
orb
dec
in
sahf
dec
mov
mov
mov
inc
sub
adc
sti
stos
scas
loopne
test
push
dec
and
xchg
ljmp
or
imul
cmp
sahf
int3
jmp
in
jbe
jns
jo
sbb
add
fcmovne
bound
jle
push
jg
scas
scas
inc
push
movsl
pop
stc
sbb
movsb
cld
js
ret
test
nop
repz
sub
jl
dec
sbb
add
cmp
lcall
shl
hlt
ljmp
mov
or
fmuls
fsubrl
fs
jmp
scas
add
xchg
cmp
pop
adc
or
aad
push
sub
test
mov
push
mov
prefetcht0
std
dec
or
inc
cld
sbb
sbb
dec
ljmp
inc
mov
and
or
cmpl
loop
lret
jnp
add
jne
inc
pop
or
adc
mov
lea
sbb
xorl
add
movsl
push
xchg
call
and
xchg
in
mov
xor
xor
in
cmpsl
in
inc
push
movsb
add
mov
dec
bound
int
push
imul
sub
jae
jp
rcrl
and
cmp
xchg
pushf
mov
push
cmp
icebp
mov
xor
adc
sub
or
dec
mov
aam
lods
imulb
stos
hlt
mov
lods
dec
or
push
cwtl
mov
adc
xchg
dec
sub
lods
add
inc
test
repnz
push
or
ss
xor
shrl
in
lcall
repnz
ret
mov
out
jnp
stos
mov
or
insl
mov
jne
push
mov
ljmp
out
cs
adc
jno
xchg
push
jne
lods
push
xor
dec
scas
lret
stos
insb
lods
int
test
jg
jmp
cs
in
rcrl
out
insl
test
push
aaa
sub
add
pop
adc
test
or
and
push
cmp
and
mov
pop
adc
mov
push
xchg
in
stos
inc
pop
sbb
cld
ljmp
test
hlt
in
jp
test
pop
pop
out
out
icebp
fs
add
stc
mov
div
jb
pop
xchg
sub
adc
sbb
into
pop
or
shrd
int
call
loop
xor
hlt
cs
into
ljmp
lock
mov
jmp
sbb
mulb
sub
cli
pop
nop
rol
subl
sbb
cmp
pop
push
sub
jno
xchg
pop
xchg
ret
pop
pop
add
inc
arpl
int
into
enter
pushf
add
lret
adc
mov
or
call
enter
cs
lds
imul
std
pop
enter
sbb
iret
fistpll
hlt
xor
mov
jnp
or
or
jecxz
sub
mov
fdivl
insb
mov
or
shrb
dec
and
adc
test
adc
subb
testb
test
or
gs
adc
test
sahf
nop
sub
mov
roll
lret
or
add
mov
fisubrl
lcall
xchg
ret
xor
adc
outsb
push
sti
hlt
lret
mov
fs
cltd
sub
daa
push
sbb
sti
imulb
aam
stos
shll
mov
andl
int3
pushf
add
xor
pusha
pop
cli
cmpl
push
ficomps
mov
scas
rcll
xchg
sub
adc
mov
iret
adc
lcall
jl
repnz
or
push
lods
xor
test
jle
cltd
movsl
push
jae
call
pop
pop
icebp
xchg
sbbb
gs
pop
int
fimull
pop
cmc
push
sub
les
jae
cli
popf
or
pop
add
jb
or
sbb
stos
dec
ficomps
pop
lcall
outsb
xor
xor
pop
or
push
in
pop
pop
adc
or
pop
stos
stos
insb
out
mov
fimull
pop
xchg
adc
pop
xchg
adc
data16
xor
push
mov
mov
arpl
lcall
test
add
pop
and
sub
loopne
test
cmpsb
lods
adc
mov
xlat
je
adc
pop
xchg
push
sbb
adc
inc
fwait
cwtl
insb
stos
in
sub
les
in
cmpsb
adc
sbb
pop
fs
cld
dec
cmp
in
or
push
mov
mov
and
lret
add
inc
sub
loopne
pop
aam
dec
pushf
or
stos
fcomp
adc
xor
add
add
adc
add
iret
std
add
aam
repz
or
test
push
cwtl
cli
jg
mov
and
test
xchg
adc
int
andl
pop
clc
or
sub
xchg
orb
dec
imul
inc
stos
add
pop
call
or
test
sbb
mov
inc
push
push
sub
or
or
rcrb
mov
jno
xchg
mov
mov
int
clc
iret
in
rolb
sbb
xorb
jb
popf
stos
jl
das
xchg
cli
stos
call
lret
dec
aam
cmp
dec
add
popf
out
mov
mov
push
outsl
mov
mov
in
xchg
icebp
or
adc
dec
inc
sub
addl
push
jb
push
stos
sbb
flds
pushf
popf
fsubrs
out
int3
push
adc
pop
xor
sbb
mull
andb
xchg
xchg
or
mov
pushf
adc
ds
cmp
lock
out
leave
les
jecxz
mov
xchg
push
inc
repnz
adc
lds
mov
sub
mov
add
add
xchg
adc
fdivrl
test
mov
push
ljmp
jmp
adc
jmp
sub
jle
rorb
insb
mov
mov
ss
add
push
jle
out
das
mov
or
mov
mov
xor
jb
inc
xchg
mov
mov
jae
jge
stos
das
sub
xchg
jnp
push
data16
inc
cmc
ljmp
popa
pushf
jl
enter
orb
fucom
add
add
pop
or
pop
cltd
cld
jle
imul
or
add
mov
dec
cwtl
out
clc
ja
bound
enter
in
test
cltd
movsb
or
mov
addb
insb
cwtl
jle
subb
ljmp
add
and
inc
push
push
addr16
scas
fcompl
or
or
pop
pushl
pop
sub
add
lds
cltd
mov
movb
sbb
jmp
sbb
fcomps
scas
xchg
fistps
cltd
cli
mov
pop
scas
mov
jmp
inc
subl
add
les
gs
inc
add
mov
and
xlat
jnp
cmpsl
sub
in
adc
pop
shrl
adc
cmpsb
xchg
pop
ljmp
mov
adc
cmc
or
push
adc
xchg
adc
cld
push
inc
sti
leave
mov
mov
adcl
lcall
cmp
lods
sub
and
add
jae
in
orb
sbb
add
mov
xchg
bound
adc
or
xchg
ss
cmp
fucomi
jns
stos
sbb
adc
std
or
or
call
adc
mov
dec
movsl
xor
xchg
inc
inc
and
and
call
inc
pop
mov
or
xor
adc
adc
insb
cmc
push
call
add
jae
lahf
out
and
cli
pop
mov
xor
cmpsl
jae
or
addr16
add
push
leave
push
xor
jno
pop
inc
lods
sub
pop
push
in
fldcw
imul
push
add
add
enter
push
jb
sbb
mov
mov
cmpsl
in
mov
sub
and
jl
jae
xchg
fildl
test
sbb
std
mov
and
or
bound
test
sub
jnp
jae
jo
jmp
movsl
push
and
pop
mov
or
add
cmpsl
int
jae
sti
dec
faddp
sub
fisttpl
mov
mov
outsb
mov
and
movsl
outsb
mov
xchg
jmp
hlt
dec
add
movsl
or
xchg
push
xlat
fdiv
inc
adc
out
jnp
ret
and
int
xchg
loope
xchg
mov
or
into
pop
sub
addr16
dec
pop
cld
jecxz
and
dec
inc
jnp
lods
jecxz
and
mov
pop
adc
aam
sti
jl
push
out
pop
jnp
incl
fmuls
pop
or
sahf
push
or
push
shll
push
xchg
movsb
add
add
gs
cmpsb
mov
out
inc
or
inc
pop
and
add
xlat
aas
sbb
bound
cwtl
jmp
cwtl
cld
dec
mov
shl
add
sarb
push
jl
jnp
out
bound
in
sti
stos
sahf
aad
int3
or
xchg
add
fists
or
sysret
enter
mov
inc
mov
sbb
dec
repnz
test
mov
jmp
test
sub
shlb
cmp
lcall
sub
xchg
lret
daa
ret
xor
and
cld
data16
pushf
clc
jmp
adc
int
in
push
dec
adc
pop
out
jl
mov
ljmp
sbb
mov
loope
and
jns
cmp
lods
aas
lret
inc
jle
mov
push
rol
sbb
lret
ret
aaa
lea
jae
pop
adc
les
sbb
pop
sbb
cmpl
in
mov
call
add
sub
shll
push
xor
dec
stc
adc
ds
sbb
xor
lods
daa
sub
sub
addb
inc
jbe
push
inc
cwtl
or
adc
push
fwait
or
add
or
int3
leave
xchg
jno
push
ss
jae
add
icebp
arpl
jmp
adc
sub
lods
enter
or
sahf
imul
jge
arpl
xor
pop
stc
pop
push
lret
cmpsb
int
mov
cmpsl
loope
ja
fnstcw
inc
inc
jns
and
cmpsb
into
push
lds
mov
sub
mov
mov
iretw
arpl
into
adc
jnp
dec
push
mov
sub
int3
dec
or
sbb
jg
sub
in
shrb
xchg
jecxz
inc
mov
movb
leave
xchg
sbb
adc
int
stos
fstpt
jno
fcomps
out
in
out
jp
test
loope
push
adc
in
dec
nop
push
or
or
push
leave
pop
jmp
loop
mov
mov
es
stos
jge
in
jmp
adc
xchg
fiaddl
cmp
ds
cmpsl
hlt
jmp
repz
sahf
mull
data16
mov
pop
sysret
stc
sub
icebp
pushf
mov
in
popa
xchg
stc
mov
les
mov
push
dec
loopne
xchg
pop
xchg
aam
adc
jae
fwait
lahf
mov
sbbl
add
pop
jno
je
in
or
insl
cmp
mov
fmul
aas
mov
stos
out
cmpsl
mov
cld
xchg
xchg
sbb
test
jmp
mov
aam
or
in
dec
rorb
loop
arpl
inc
popf
mov
push
and
inc
push
and
jae
mov
leave
aad
mov
push
cmp
sti
sbb
adc
rclb
lock
cmp
and
mov
pop
cld
sbb
inc
dec
sub
sbbl
les
test
jmp
lahf
fcomp
mov
inc
xlat
mov
and
rcrb
and
push
xchg
mov
aad
push
mov
sarb
push
or
lods
sahf
add
adc
hlt
popf
dec
inc
xchg
stos
dec
and
add
negb
out
test
outsl
jne,pn
cld
cmpsl
aam
lods
jle
mov
add
sub
not
mov
out
mov
mov
add
mov
cwtl
or
fiaddl
or
sbb
cmp
mov
xchg
cmp
pop
xor
dec
add
shr
jl
scas
cwtl
or
and
xor
mov
jg
repnz
in
add
iret
out
sbb
cmp
jb
xchg
fisttpl
dec
xchg
jmp
dec
jg
xchg
int3
add
rclb
mov
xchg
pop
scas
sti
or
mov
repz
shrb
movsb
pop
and
cmpsl
neg
out
and
sbb
loop
xlat
push
adc
imul
test
repz
or
aam
ljmp
push
push
pop
pusha
xchg
pop
pop
or
addr16
lods
sahf
push
andl
rolb
add
int3
test
push
movsb
in
fucomi
or
push
or
nop
xchg
jp
dec
pop
xchg
test
ljmp
or
sbb
xchg
cld
cmp
movb
lea
popf
sbb
test
cld
dec
or
js
out
add
adc
jnp
cmp
call
fmulp
mov
es
or
out
lret
and
enter
or
sbb
or
out
test
pop
test
push
test
and
sbb
lcall
sub
add
test
cli
stos
out
or
xchg
xchg
mov
std
add
test
cli
dec
cmp
adc
push
clc
sub
mov
testb
orl
sti
push
imul
lcall
pop
cli
adc
lcall
push
mov
test
test
cmp
lcall
lock
adc
mov
fcoms
leave
inc
fmuls
sbb
mov
or
fdivr
adc
adc
cmp
and
adc
sub
add
pushf
pop
xchg
cwtl
mov
adc
gs
sub
test
in
or
pop
movsb
js
xchg
sbb
adc
aas
or
test
cld
or
pop
pop
call
adc
adcb
psubsw
mov
pop
jle
pushf
mov
jge
or
test
nop
enter
adc
pop
sub
roll
in
call
jg
or
pushf
popf
lcall
adc
xor
mov
pop
movsb
cmp
add
sbb
cmpb
adc
inc
movl
iret
cmp
sbb
pop
jbe
sete
add
cmpsb
dec
mov
jl
jmp
add
jb
dec
jne
ret
in
sti
jnp
testl
or
inc
ret
jl
add
sarb
loopne
pop
ja
in
daa
inc
mov
lods
mov
ret
sbb
xchg
icebp
mov
popa
mov
in
sti
mov
cltd
out
mov
push
mov
lods
or
lea
and
lods
xchg
sub
inc
jl
cmpb
adc
data16
imul
xchg
adc
adc
cmp
pop
sahf
jl
mov
sti
lret
inc
into
jp
mov
mov
inc
ljmp
xchg
xchg
push
fs
mov
inc
lahf
adc
ret
mov
jno
sbb
mov
mov
movl
or
pop
cld
add
aam
push
xchg
aas
aaa
or
cli
sub
imul
push
adc
mov
out
mov
lock
outsl
adc
cmp
in
stos
lret
sub
sbb
dec
xchg
fcomip
cmpsb
push
push
mov
add
int3
jle
cmp
sub
mov
adc
sub
not
mov
out
jb
or
ret
xchg
insl
and
jle
jl
mov
or
sbb
jns
fisubs
jmp
sbb
inc
loop
into
dec
mov
movsb
cmp
dec
cmp
inc
loop
jno
jmp
jle
cmc
arpl
add
adc
int
add
cmp
inc
add
stos
adc
lods
cmp
xchg
push
in
out
inc
and
sub
sahf
mov
sub
jecxz
fs
ret
in
aam
jge
push
enter
sbb
mov
std
xchg
pop
jnp
or
in
in
mov
cwtl
pop
daa
dec
sahf
xor
push
push
cmc
inc
aas
jle
push
and
mov
insl
xor
mov
add
cld
hlt
cwtl
push
repnz
cmp
sbb
orb
outsl
fistps
loopne
pop
or
xor
sbb
mov
bswap
fmuls
adcb
test
mov
pop
out
xchg
in
leave
call
adc
bound
insb
jecxz
js
mov
pop
sbb
lea
jmp
xchg
lret
pop
lcall
mov
inc
mov
insb
add
xchg
or
inc
shl
gs
push
ljmp
int3
jg
fiaddl
mov
mov
cwtl
fcmove
push
iret
repz
repz
or
idivl
out
jl
pushf
mov
fadd
in
sub
xor
fidivl
nop/reserved
cltd
dec
cmp
mov
mov
pop
sbb
mov
lock
test
mov
jl
pushf
mov
sbb
ljmp
jecxz
mov
stc
repz
test
sbb
outsl
mov
sahf
popf
mov
test
mov
loop
jb
push
or
inc
aaa
pop
cmp
notl
push
and
xchg
sbb
or
add
or
pop
sahf
mov
loop
int3
add
loop
sub
sub
xor
aam
xor
scas
fstl
sbb
add
pop
les
mov
adc
pushf
cmpsb
mov
and
into
hlt
cmc
ret
pop
xchg
test
or
add
outsl
lods
stos
ljmp
fcom
mov
pop
adc
ret
mov
pop
xchg
inc
mov
cli
adc
cmp
jno
or
push
cmp
or
loop
int
das
adc
dec
popf
adc
sbb
fwait
sbb
xchg
fstpt
jmp
push
test
dec
and
out
ljmp
adc
cmc
aam
in
nop
xchg
pop
call
adc
in
stc
jns
rcrl
lahf
jle
cmpsb
mov
insb
push
scas
or
mov
sub
mov
jp
mov
ja
cmp
adc
add
test
inc
sbb
sub
lret
aad
nop
loop
or
inc
mov
sbb
add
inc
xchg
daa
loopne
cld
push
data16
xlat
les
push
popa
sbb
mov
inc
lods
insb
mov
mov
push
in
or
or
adc
repz
or
jecxz
ds
ret
inc
cld
xchg
cld
or
cli
push
inc
stc
mov
psubw
mov
cmpsl
lcall
in
in
push
test
sbb
aad
pushf
sbbl
in
daa
pop
shrb
sub
aaa
or
and
add
and
aam
fs
sbb
sbb
cli
lds
fisubs
mov
mov
and
or
fsubr
or
nop
lcall
sub
cmp
or
adc
push
imul
test
pop
fildl
loopne
test
push
and
xchg
add
add
mov
jp
pop
jl
orb
and
and
int
mov
lods
gs
mov
lret
shl
sahf
movsl
out
jge
push
cld
addr16
xor
lods
ficoms
rol
rcpps
mov
sti
adc
jle
add
mov
mov
loope
xchg
jecxz
mov
sbb
dec
xchg
imul
inc
cmc
std
mov
adc
push
pop
pop
or
scas
stos
mov
dec
js
xor
cmp
adc
xlat
call
push
and
mov
jmp
inc
sbb
test
shl
mov
and
and
nop
sub
xchg
xor
mov
sti
sti
adc
fcomps
in
sti
xor
fnstsw
daa
sbb
cmp
sbb
pusha
adcb
inc
mov
sbb
imul
mov
jecxz
jge
or
ret
sbbb
push
add
lret
inc
sub
les
dec
dec
enter
fs
outsb
movsl
sahf
ljmp
jecxz
push
leave
xor
mov
xchg
xchg
inc
pusha
mov
ds
pop
add
clc
call
adc
pop
mov
pop
and
add
clc
or
xor
push
ret
call
sub
inc
mov
inc
ljmp
test
out
push
mov
call
fistps
cltd
adc
or
fdivrs
push
sub
sbb
clc
clc
test
sahf
adc
add
pusha
fs
js
lahf
push
hlt
faddl
hlt
pop
scas
stos
jecxz
mov
xchg
leave
add
or
push
daa
testl
lods
scas
add
ret
call
ret
dec
mov
mov
call
pop
pop
test
sti
movsb
daa
adc
xor
subb
shl
mov
loopne
xor
jno
adc
jge
jo
and
jg
dec
or
adc
jnp
sbb
add
mov
pop
or
add
mov
frstor
shll
ret
mov
jmp
cmp
test
lret
test
enter
mov
insb
jno
dec
daa
or
and
fcoms
xchg
pop
lret
mov
jae
sbb
and
jnp
sbb
push
test
sbb
sbb
add
fistpl
xchg
subb
incl
sbb
xchg
sub
and
or
incl
call
ljmp
cli
jle
faddl
or
mov
or
mov
mov
add
sbb
dec
sub
mov
aad
mov
call
or
stos
test
sbb
or
daa
mov
xchg
sahf
enter
cwtl
imul
or
pop
push
out
movb
or
test
cli
lret
fadds
jle
jmp
push
mov
add
push
addb
call
xor
shr
das
jl
faddl
dec
daa
cld
push
inc
aam
mov
or
cmc
pop
inc
out
push
sbb
add
loop
sti
sub
ret
adc
fs
mov
jns
xor
adc
xchg
jp
sti
dec
add
mov
inc
sti
int3
jno
int
out
lea
arpl
xor
pop
sbb
jle
arpl
out
iret
dec
inc
sub
or
and
pop
clts
arpl
cmpsl
loopne
lds
ljmp
dec
sub
test
jae
imul
inc
push
xor
pushf
mov
mov
add
add
jae
bnd
jne
sbb
add
xor
mov
movsb
add
data16
loop
or
inc
dec
addr16
sub
add
push
xchg
in
jbe
inc
and
sbb
out
test
lods
mov
cs
outsb
or
out
mov
mov
ret
mov
mov
rolb
sbb
andl
rorl
inc
stos
xor
aam
mov
cwtl
ljmp
mov
inc
xchg
fs
xor
cmp
or
adc
popa
pushf
or
or
lea
adc
sbb
push
add
add
or
kandnw
out
add
sub
cmp
inc
and
mov
test
cmp
jno
fldt
add
lds
dec
or
int3
sbb
movsl
dec
inc
sub
and
shl
fsubl
jp
das
or
enter
push
es
in
push
pop
mov
inc
test
push
inc
sbb
fadd
out
lret
stos
mov
adc
mov
sbb
xor
mov
fstl
lret
xor
xchg
out
mov
test
pop
das
fwait
das
nop
cwtl
daa
and
adc
ja
jp
out
pop
test
js
dec
lret
or
cli
adc
dec
mov
imul
movsl
out
stc
sbb
sbb
lods
sbb
sti
or
lods
shlb
add
lret
pushf
mov
inc
mov
stos
out
mov
lret
adc
ficoml
jmp
lods
cmp
lret
in
adc
int
testb
lods
jbe
scas
mov
pushf
addr16
push
xor
imul
xchg
stos
jge
jnp
dec
int3
popf
xor
jnp
fwait
inc
xor
enter
add
js
xor
dec
inc
test
in
pop
cwtl
sub
ss
lock
dec
add
or
aaa
inc
pop
sub
int3
imul
xor
cmp
mov
xor
dec
xlat
adc
jge
fmul
xlat
int
xchg
or
push
adc
scas
aas
jb
fwait
sub
enter
pop
stc
adc
jle
jnp
sbb
inc
lret
or
es
sbb
sub
mov
mov
or
addl
cmc
xor
mov
push
cld
lea
push
dec
andl
inc
aad
and
push
rcll
jle
popa
popa
loopne
sahf
sysenter
sahf
sub
fcmovbe
jnp
sub
adc
in
stos
sub
cltd
sub
dec
pop
or
sbb
pop
jmp
add
inc
mov
jae
jns
popa
mov
cmp
or
push
in
sub
call
mov
jge
enter
psrad
hlt
vpaddd
loop
movsb
mov
mov
subb
hlt
pop
push
lcall
fsubs
insl
repnz
dec
xlat
cld
fildll
push
out
jnp
js
testl
clc
nop
pop
out
nop
or
jae
push
stos
push
mov
or
gs
cmpsb
repz
inc
aam
adc
in
push
test
inc
movsb
lahf
mov
out
test
aad
repnz
frstor
popa
pop
cmp
popa
movsb
lods
add
lock
mov
add
jmp
hlt
or
fimull
push
pop
das
push
push
insb
out
inc
movl
and
shlb
mov
xlat
push
pop
push
pop
mov
fwait
xchg
lods
jecxz
jp
mov
call
pop
fistpl
ret
add
adc
aam
mov
andb
enter
int
push
movsb
or
out
lods
stc
mov
out
imul
push
add
fimull
imul
inc
rol
in
or
mov
cmp
xor
mov
fxch
mov
repz
cmp
out
leave
push
adc
mov
dec
sub
sub
fsts
sti
pop
lods
mov
hlt
dec
inc
dec
daa
mov
push
push
movsl
push
das
fidivrl
test
push
sti
femms
push
sahf
loop
sbb
mov
and
cmc
dec
push
pop
jae
std
jmp
add
cli
pop
adc
cli
aas
in
sub
call
dec
call
push
cltd
add
ds
leave
aam
adc
jmp
test
sti
inc
mov
sti
inc
mov
lcall
lcall
sbb
push
lock
insb
out
int
fildll
mov
xchg
push
jb
dec
or
push
jae
sbb
pop
cld
adc
cmp
sbb
jp
jmp
adc
fwait
icebp
stos
popf
ret
out
or
cmpsb
adc
adc
push
shll
stos
lret
jle
push
dec
notb
aaa
lock
ret
push
enter
out
sub
pop
fstps
sbb
jl
scas
loop
jns
movsl
lods
xchg
mov
out
iret
push
and
aaa
sub
mov
xor
sbb
jno
adc
les
mov
ljmp
adcb
sub
lods
sbbb
scas
subl
sahf
bound
insb
popf
adc
jp
popf
push
xorl
lret
mov
cwtl
dec
inc
inc
add
push
xchg
insl
mov
push
pop
inc
push
loop
push
call
cmp
push
inc
dec
fldt
and
jbe
ja
and
jo
pop
sbb
lret
dec
fwait
xor
push
scas
mov
test
push
sbb
push
or
pop
pop
pop
hlt
sub
xor
mov
test
adc
in
popf
sbb
jmp
xor
mov
in
xchg
and
and
and
test
je
loope
pushf
ret
pop
xchg
jb
into
fwait
test
mov
arpl
sub
arpl
add
scas
mov
lods
mov
mov
mov
outsl
inc
or
mov
jg
or
sub
pushl
add
jmp
int3
cmpl
lcall
jecxz
add
add
lahf
xchg
sbb
jmp
and
jp
push
loop
mov
loop
fstps
cwtl
push
push
pop
ss
pshufw
add
out
mov
push
jb
cmpsb
cli
and
xlat
insl
xor
or
imul
mov
cs
inc
daa
test
jns
lcall
jl
dec
fwait
aaa
icebp
cmp
mov
daa
xor
lcall
sub
mov
push
cmpsl
mov
push
shlb
divb
or
sbb
outsl
jecxz
add
push
addb
mov
ficomps
subb
add
call
dec
and
cmp
insb
mov
int3
sbb
out
add
xor
stc
push
add
fwait
mov
fdiv
sbb
in
and
jp
and
mov
lods
inc
add
mov
push
aam
adc
mov
dec
test
xchg
or
mov
or
xchg
out
sub
or
add
or
cmp
out
popf
inc
iret
inc
loopne
sahf
inc
insb
jns
les
cltd
je
or
test
mov
cli
shll
adc
dec
and
adc
js
pop
aaa
mov
shll
ss
ja
test
call
xchg
clc
pop
sbb
inc
test
je
dec
sbb
idiv
lea
notl
in
clc
fstl
and
xor
mov
xor
fildll
fld
adc
add
call
xchg
lea
inc
sti
orb
xchg
jmp
cmp
push
add
les
jl
inc
sub
aas
xchg
pop
loop
add
std
int3
lret
mov
aad
mov
and
sbb
mov
jg
mov
xchg
scas
sbb
divb
jns
jg
icebp
repz
sub
adc
mov
out
add
int3
ret
add
pusha
or
fcmovne
or
jns
or
pop
leave
inc
inc
pop
jo
in
das
fwait
and
and
sbb
les
shlb
push
test
push
cwtl
stc
in
movsb
add
jle
mov
jmp
fistpll
push
scas
add
pop
cmp
in
sbb
out
xchg
dec
inc
and
sub
cmp
andb
or
inc
jle
push
scas
or
out
or
notl
adc
scas
fmuls
fadds
or
ficomps
imul
insl
ret
jl
popl
inc
push
dec
xor
cmp
mov
call
icebp
and
ljmp
inc
and
sbb
mov
sub
lahf
and
aas
or
outsl
loop
dec
ret
iret
bound
hlt
or
mov
mov
cmpl
dec
sub
sub
sbb
jmp
dec
mov
push
cmp
sub
mov
fimull
in
cmp
iret
jmp
popf
scas
mov
out
in
pop
or
mov
sub
lods
and
dec
test
lret
inc
int
stos
and
les
mov
pushf
or
sahf
out
or
insb
jnp
in
mov
dec
aam
cs
lcall
movsl
jae
imul
rorb
sbb
scas
push
mov
icebp
test
jge
int3
adc
outsl
aaa
xor
scas
push
jne
sbb
sub
test
and
lahf
mov
sub
popa
ret
aaa
xchg
add
dec
push
stos
mov
rolb
sub
addr16
push
jg
lret
dec
mov
int3
mov
insb
mov
cs
shll
lods
loope
jno
lahf
mov
push
cmpsb
xchg
or
sub
cmp
pop
pushf
ja
jb
mov
movsl
icebp
push
jo
fs
aad
push
jb
mov
in
int
sbb
shlb
imul
xor
xchg
fldt
test
sti
xchg
iret
sub
xchg
and
sbb
call
or
lret
xlat
addr16
pop
lcall
bound
inc
lods
nop
push
sbb
mov
push
jne
mov
pop
shlb
aad
add
mov
rolb
dec
dec
or
sarl
ljmp
shll
mov
dec
dec
out
and
lret
add
rcrl
dec
add
aaa
fsts
into
lret
in
push
xchg
inc
fstpt
lods
call
ret
sub
int
lret
ret
ret
jno
jl
sbb
mov
adc
shrb
xor
xchg
inc
out
or
adc
or
test
sbb
and
jle
insl
int3
or
push
les
stos
insb
or
add
rolb
and
filds
adc
dec
fldl
mov
add
sbb
ret
jnp
andb
xchg
sub
fwait
add
mov
or
out
or
aas
jl
fcmove
int3
popf
pop
addr16
int3
std
adc
loop
pop
movsb
mov
scas
push
and
rcll
decl
jne
add
adc
sub
in
int3
ja
or
add
inc
add
lret
cmp
or
sbb
cld
push
testl
shlb
push
sub
iret
cmpb
jmp
mov
xchg
jbe
push
dec
orb
in
mov
out
lahf
jl
mov
scas
xor
jnp
push
lods
mov
sbb
sti
adcl
push
mov
adc
pop
adc
sbb
aam
push
ss
stos
pop
lahf
dec
mov
add
jmp
adc
shll
add
rorb
mov
push
push
rcrb
sbb
in
xor
mov
add
sub
shlb
adc
mov
orl
cld
pop
mov
out
aas
out
mov
les
add
or
mov
mov
cwtl
xor
ss
xor
cli
lret
leave
cltd
es
dec
push
aad
gs
out
mov
add
pop
outsb
inc
dec
push
or
mov
sbb
sbb
jb
sub
xchg
jo
sub
adc
and
nop
xchg
and
adc
cmpsb
fs
xchg
mov
fcoms
loope
jns
lret
cltd
cld
int
bound
lods
adc
cmc
test
das
out
js
dec
fcomi
inc
or
sbb
or
mov
inc
cwtl
mov
lret
or
add
inc
dec
clc
movsb
adc
or
in
adc
pop
push
mov
mov
in
xor
mov
fs
mov
movsl
add
mov
add
mov
pushf
cmpsb
add
xchg
sti
jge
dec
loop
subb
inc
push
mov
push
xor
mov
add
aam
outsl
xor
test
out
cli
lret
jle
aaa
loop
pushf
pop
mov
push
enter
push
inc
mov
mov
ja
sub
xor
gs
js
cmp
repnz
sub
mov
popf
jmp
mov
jb
sahf
lock
lcall
ss
out
cmpsl
shll
xchg
mov
dec
push
lret
mov
ja
push
push
or
jl
rolb
jl
pop
adc
daa
sub
xor
js
mov
test
movsl
inc
mov
ret
in
add
inc
test
inc
in
adc
pop
add
adc
aas
add
mov
mov
jmp
or
xlat
xchg
mov
jns
int
aad
sti
or
cmp
jae
push
mov
clc
push
xlat
dec
fucomp
movsl
mov
pushf
adc
inc
js
fcomip
and
push
loope
push
out
sarb
and
inc
ror
adc
jmp
out
mov
mov
fmuls
cld
lods
in
sbb
cmpsb
mov
jbe
xor
jae
or
push
pop
dec
add
jns
leave
adc
lods
jmp
lods
jo
sub
test
movsl
int
dec
loope
ja
jmp
mov
repz
jnp
inc
adc
cmpsl
hlt
ret
popa
inc
mov
scas
xchg
mov
xchg
adc
popa
sbb
sbb
sahf
sub
rorb
lock
lds
jno
imul
push
stos
adc
mov
cmp
sbb
leave
or
fidivrl
movsl
push
lret
mov
add
sbb
ret
mov
imul
mov
mov
pusha
fisttpl
js
aam
adc
mov
rolb
nop
add
jle
movsl
push
and
test
rorb
mov
movsb
repz
xchg
sub
add
pop
pop
lret
and
push
in
cmpsb
clc
stos
leave
outsl
inc
lahf
sbb
push
fsts
sub
lods
in
mov
bnd
push
xchg
imul
cmp
loop
mov
add
add
mov
jmp
and
xchg
mov
les
lock
dec
xchg
push
aad
push
mov
ret
sub
xchg
insl
pusha
or
push
inc
mov
les
arpl
sub
and
inc
mov
sbb
push
jmp
and
mov
lock
mov
pushf
add
movsl
or
mov
cs
xor
mov
int3
cmpsb
out
int
or
jmp
insl
inc
test
fdivp
loope
std
adc
mov
loope
sbb
push
or
push
subb
xor
decl
mov
pushf
mov
cmp
ss
fdivr
xor
ds
mov
or
stos
insb
stos
pusha
sbb
mov
sub
mov
push
leave
je
adc
hlt
xchg
sti
adc
or
push
cmp
push
aaa
scas
dec
add
jl
iret
inc
or
or
std
xor
icebp
jns
jmp
jl
lret
jae
les
ret
lods
jnp
add
or
mov
xchg
jnp
pop
inc
xchg
shll
out
mov
int
mov
mov
ret
xchg
inc
push
inc
add
add
push
add
mov
pop
xor
mov
push
mov
jle
cmpsl
repnz
pop
push
sub
mov
imul
repz
lods
lea
subb
xchg
sbb
adc
dec
lds
into
test
mov
or
jle
pushf
test
jl
test
out
pop
lods
cmp
sbb
cmc
test
fsubp
fs
mov
mov
push
gs
xchg
enter
xor
pop
mov
jnp
out
xchg
aam
bound
inc
or
sbb
xchg
jle
pop
rolb
stos
jnp
sbb
popf
sbb
xchg
jbe
mov
cltd
xchg
leave
push
imul
or
adc
sbb
out
push
in
iret
lret
call
mov
and
call
pusha
mov
gs
outsb
mov
sbb
sbb
dec
inc
lcall
mov
nop
and
jmp
push
or
stc
faddp
hlt
mov
lods
pop
stc
adc
mov
mov
sahf
pop
cmp
xchg
cmp
xchg
cmp
roll
mov
mov
sbb
adc
int3
lds
push
mov
add
out
cmpsb
stos
add
pop
push
sbb
ljmp
enter
sub
lret
mov
sub
into
lds
adc
int3
dec
mov
clc
sbbl
jae
ds
jge
dec
fisttpll
ficoms
add
aas
adc
in
adc
in
push
jnp
jg
sbb
mov
mov
repnz
testb
mov
or
into
or
push
and
dec
pop
xchg
push
xchg
or
jmp
inc
and
sbb
int3
jne
sti
mov
or
addb
lret
int
and
pop
bound
loopne
jle
xchg
dec
insl
dec
sub
das
jmp
and
ret
sub
scas
out
repz
fldl
insl
xchg
gs
loope
sbbl
mov
or
clc
adcb
mov
mov
lods
mov
fdivrs
push
dec
enter
inc
orl
or
push
ret
mov
xchg
xor
out
cmp
movsl
sub
dec
inc
aaa
xchg
pusha
push
dec
fwait
loopne
dec
lret
and
aaa
movsb
fisttpl
push
enter
mov
stos
ret
fs
or
add
lods
movsb
xor
inc
inc
adc
jl
jno
popa
or
jecxz
pop
roll
jl
inc
push
enter
inc
cli
mov
pop
push
xor
push
insb
or
jecxz
scas
mov
stc
sub
in
lods
inc
and
jg
jmp
scas
daa
faddp
jmp
orb
clc
arpl
push
inc
imul
lea
fisubrs
aam
ja
test
xchg
sub
outsl
add
sti
divb
test
sahf
and
lret
or
jle
stos
push
daa
push
js
mov
adc
ss
or
xor
shrl
decl
fcompl
lods
push
adc
outsb
dec
jmp
mov
movsl
jmp
inc
test
and
out
fidivs
repz
mov
fisttpl
andl
lods
pop
pusha
mov
js
imul
out
or
insb
sbb
or
cmpsl
jns
addr16
aam
gs
or
std
and
pushl
inc
mov
adc
out
xor
aad
fidivs
add
mov
dec
repz
mov
inc
jns
fsubl
in
or
dec
mov
inc
out
cld
leave
popf
cmpsl
repnz
int
fidivl
inc
jbe
sahf
xor
imul
notb
mov
jge
lret
add
test
jl
out
fdiv
sbb
in
pop
sarl
pop
adc
jecxz
mov
lods
in
and
into
mov
adc
ud2
cmp
and
add
sbb
adc
or
stc
sub
and
js
cmpsl
lea
aad
xchg
dec
loop
pop
out
insb
sub
dec
jno
loopne
insl
mov
dec
sub
orl
loop
jge
test
add
sub
aam
mov
lods
push
xor
popf
mov
cmp
jno
add
rol
lret
daa
sbbb
inc
insl
mov
cltd
lahf
or
aad
jp
or
movsl
in
sub
and
add
jae
mov
call
jmp
mov
dec
adc
sbb
jle
ss
jle
cli
out
add
rcrb
out
and
xchg
cmp
adc
in
dec
sahf
dec
add
data16
mov
imul
cli
out
fcmove
xchg
sbb
in
ljmp
adcb
ret
add
std
dec
cwtl
fst
addr16
jmp
push
xchg
cmp
mov
ss
frstor
popa
repz
mov
add
dec
mov
in
cmpsb
mov
sbb
loope
push
inc
lds
repnz
movsl
insl
push
cs
adc
add
dec
ljmp
popf
or
and
hlt
lods
push
les
mov
xchg
xor
sar
push
stos
in
pop
add
xchg
sbb
jle
mov
movsb
xchg
lahf
or
adc
test
xor
ret
sbbl
xor
sbb
push
sub
sub
push
sub
xchg
les
lret
push
sub
ljmp
push
aad
cmpsb
sbb
loope
xchg
notl
in
repz
jecxz
sti
fisubl
pop
stos
fs
inc
mov
mov
sbb
push
mov
mov
sub
div
push
shrb
sti
pop
arpl
jle
cmp
lds
fcmovnbe
sbb
adc
mov
push
shlb
sub
or
mov
add
pushf
jmp
and
pop
sub
mov
lret
adc
fidivl
pop
sub
aas
call
push
icebp
or
call
test
fisttpl
fs
arpl
inc
pop
fwait
mov
lret
cmc
pop
and
pop
and
lret
xchg
stos
ret
insb
pop
add
pop
add
repnz
sbb
mov
jecxz
mov
sbb
js
and
adc
in
lahf
push
jo
sub
adc
sti
dec
insb
popa
adc
stc
mov
xorb
pop
adc
dec
pop
mov
lcall
inc
aaa
out
jl
jge
or
adc
jb
mov
dec
lret
xlat
das
dec
add
sbb
cmp
outsl
lret
aaa
jle
scas
popa
cmp
mov
xlat
xchg
pop
cld
lcall
cmc
inc
mov
push
inc
notb
or
mov
lret
dec
pop
fisubl
lods
repz
insb
xchg
aaa
js
mov
int
add
inc
jbe
jle
mov
imul
mov
xchg
or
mov
sahf
and
je
adc
xchg
and
in
mov
insb
xor
add
xor
loopne
lret
or
insb
enter
xchg
adc
call
loop
or
aas
movsb
pop
add
fsubr
ret
inc
aad
jne
add
pop
test
stc
add
or
fwait
loopne
mov
cwtl
sbb
clc
insb
scas
pop
scas
mov
sbb
leave
push
into
dec
xor
int
inc
and
or
or
mov
outsl
addr16
pop
dec
push
cmp
dec
xchg
fmuls
cld
sub
push
sbb
clc
mov
mov
insb
in
push
xor
mov
aaa
rcr
push
sbb
adc
ja
in
jp
fildl
and
sbb
js
xchg
pop
cmc
pop
push
int3
pop
pop
jb
ljmp
jns
lcall
inc
sub
ret
dec
dec
fiaddl
add
mov
dec
cld
xchg
clc
aaa
inc
pop
stos
out
jae
int3
out
adc
xchg
add
dec
mov
add
jg
xchg
pushf
inc
mov
std
push
popa
hlt
stos
jnp
add
testb
and
or
add
sarb
into
mov
mov
int3
push
mov
hlt
ret
ret
lods
sbb
mov
adc
inc
lods
sub
or
sub
mov
call
mov
insl
out
lds
dec
cmpsl
out
sub
mov
in
aas
push
addl
mov
xor
hlt
rorb
in
and
mov
pop
inc
int3
xor
inc
addb
add
or
adc
inc
xor
dec
jno
adc
call
daa
dec
xchg
test
fs
cwtl
fadd
arpl
stc
mov
lock
inc
mov
jmp
mov
and
sub
int
xchg
xchg
lret
mov
in
sbb
insl
push
or
pusha
add
fs
fdiv
mulb
xchg
sahf
fstpl
fsubrl
inc
mov
jg
push
popf
imul
hlt
movsb
movsb
enter
aam
cwtl
mov
xchg
lcall
mov
sub
ficompl
in
sub
mov
pop
mov
lret
mov
xchg
stc
pushf
shl
mov
das
pusha
sti
add
adc
jbe
mov
adc
add
cs
leave
adc
xor
jnp
xchg
inc
jb
cmp
push
popa
cmpsb
scas
sub
fsubs
pop
out
jbe
mov
inc
mov
inc
jecxz
mov
test
push
les
push
xor
mov
sub
and
jb
jl
inc
or
sbb
jecxz
int3
mov
push
out
lds
xlat
lcall
cmp
aam
sub
inc
jl
inc
imul
movsb
ret
ret
loop
jl
cmp
lret
or
ret
lcall
call
fs
add
mov
or
cs
mov
int
lea
sbb
std
fdivs
jne
scas
ret
das
push
sti
jecxz
int3
cmp
inc
pop
adc
lret
adc
jecxz
mov
adcb
inc
adc
lcall
add
loop
sub
scas
movsl
add
and
sub
and
stc
or
lahf
sbb
rorl
xchg
rcr
pop
dec
push
loope
int3
sbb
or
rorb
pusha
repnz
mov
lods
jnp
lahf
xchg
xor
mov
or
lret
shrl
xor
scas
and
add
xor
mov
xchg
mov
dec
pop
andl
sahf
test
mov
adc
mov
add
jmp
popa
out
or
lea
test
into
dec
addb
mov
jo
je
test
ret
imul
sbb
push
mov
mov
or
pop
lods
fisttpl
pushf
add
adc
xchg
or
xchg
adc
in
ss
sbb
push
out
push
fldl2t
call
and
jae
jns
mov
add
push
dec
sahf
dec
adc
clc
xchg
int3
pop
and
adc
in
outsb
mov
aam
sbb
repz
add
push
jp
mov
mov
mov
mov
gs
inc
mov
sub
cld
rorb
add
dec
and
stc
ja
add
inc
cmp
sbb
xor
inc
mov
jne
push
cmpsb
rcr
or
dec
mov
pop
in
xchg
dec
or
xchg
sti
and
dec
pop
jge
add
aaa
or
ljmp
jmp
inc
or
xlat
fs
out
pop
pop
xor
loope
popa
cltd
sbb
sub
push
daa
call
shr
xor
test
xchg
push
dec
hlt
rol
pop
sbb
push
int3
clc
shlb
inc
jmp
jp
int3
mov
fbld
push
mov
ja
inc
sub
mov
ret
rorb
repz
xchg
sbb
data16
xchg
aam
mov
mov
cli
mov
daa
adc
inc
fwait
test
adc
and
and
aas
adc
jp
aam
mov
xor
pshufw
cmp
das
fdivl
cmpsl
sub
fldcw
dec
or
push
into
jmp
push
sbb
adc
pop
pop
or
inc
stos
sahf
mov
mov
insb
fwait
sti
pop
sahf
push
mov
insl
or
mov
in
or
sahf
stos
lods
xchg
test
out
sbbb
mov
fcompl
cmp
stos
lretw
adc
shll
imul
daa
iret
mov
aaa
imul
ljmp
cld
mov
mov
leave
xchg
push
pop
les
scas
mov
addb
dec
xor
push
aas
fnsave
into
in
push
stc
mov
push
dec
scas
mov
cmp
add
xchg
leave
orl
mov
scas
mov
add
jae
sub
push
mov
jl
ja
mov
movsl
hlt
mov
sbb
test
scas
mov
gs
cmpsl
jmp
mov
movsl
push
adc
mov
aaa
sub
sub
cwtl
adc
loop
jl
adc
xchg
xor
pop
cld
pop
cmpsb
push
subl
add
add
xor
push
mov
xorl
jle
popf
pop
enter
inc
or
jl
mov
ret
es
push
int3
cmp
lret
mov
roll
and
jle
sbb
jge
movsl
repnz
cmc
mov
test
xchg
sbb
scas
xchg
xchg
push
sti
das
fldl
inc
gs
sub
aad
leave
pop
add
cld
inc
in
xor
adc
and
je
push
add
jmp
mov
subb
push
not
push
xchg
inc
cld
inc
iret
cmp
les
adcl
push
sub
xor
je
fidivs
push
ds
aad
sbb
xor
pop
jmp
fcmovb
push
xor
xchg
inc
test
cld
sub
insb
jae
dec
ret
and
cmp
cwtl
pop
icebp
jae
sub
pop
loope
sbb
adc
sub
arpl
add
push
add
in
lcall
mov
xchg
cmp
add
aam
dec
mov
lods
add
insb
stc
xlat
inc
dec
and
sub
mov
push
or
and
and
inc
xor
or
mov
mov
or
xor
rolb
mov
dec
jb
js
adc
dec
in
xlat
stos
sahf
adc
jg
ds
cmp
rolb
je
inc
ds
sub
dec
sub
xlat
jecxz
push
gs
add
pop
push
cmp
fcomp
push
jge
add
mov
dec
pop
mov
paddd
mov
lahf
sub
out
cmp
sub
push
cmpsl
push
sti
fxch
test
jl
rep
repnz
ret
stos
clc
sub
mov
in
aaa
add
dec
jg
iret
add
and
sahf
cld
push
lods
popf
rcrl
andl
or
add
cld
sbb
lahf
mov
or
mov
or
cltd
or
pushf
jg
xor
mov
or
dec
sub
test
sbb
or
jmp
lods
les
ja
push
pushf
push
leave
pop
lahf
pop
scas
adc
xchg
push
xchg
outsl
movsb
ficoml
inc
mov
sub
sarb
and
ljmp
jl
int3
popa
dec
sbb
xorb
aas
sbb
xchg
dec
push
sbb
ret
int3
ret
push
in
sbb
mov
scas
imul
in
mov
jns
leave
adc
ljmp
pop
push
or
adc
inc
sbb
push
mov
mov
sti
je
ficoml
fwait
ds
adc
or
imull
mov
sub
or
rol
add
sub
mov
test
ret
push
xchg
stos
rcrl
lcall
pop
xor
or
add
lcall
and
test
fldl
in
mov
mov
pop
adc
and
inc
add
shrb
inc
fwait
loope
dec
push
cld
test
mov
in
pop
add
pop
inc
cmp
mov
pop
add
jle
cltd
pop
push
jmp
hlt
shrb
test
inc
pop
lock
or
addr16
sbb
cmp
sbb
push
test
sbb
sub
push
jae
test
outsl
in
jmp
cmp
loop
sub
xor
push
jp
sub
fisttps
jmp
mov
mov
mov
xchg
les
jb
mov
int3
inc
lods
insl
adc
cmp
jnp
mov
add
test
mov
ljmp
xor
cld
mov
xchg
mov
iret
pop
dec
or
fwait
arpl
mov
lea
fstpt
bound
nop
faddl
test
pop
out
fs
jle
push
lods
pushf
dec
sbb
popf
stos
mov
or
lret
movsb
out
pushf
out
in
or
fmuls
cmc
call
mov
das
scas
pushf
pop
pop
data16
or
or
mov
sbb
jno
sub
out
push
sti
pushf
and
cwtl
dec
and
cmpsl
mov
adc
jo
jle
xor
or
push
jmp
xchg
stc
inc
cmpb
and
dec
inc
mov
mov
nop
cs
ret
dec
xchg
cld
clc
mov
mov
push
mov
mov
sbb
sbb
sub
mov
and
out
in
mov
pop
lds
mov
cmp
jo
cmc
mov
cmp
mov
cmpsb
mov
cli
roll
and
jnp
mov
fst
cltd
insb
push
cmp
lods
js
add
pop
les
in
cmp
add
je
orb
mov
adc
push
addl
push
xor
and
push
adc
inc
mov
cmp
jg
psubq
inc
mov
inc
lcall
ja
xchg
int3
jg
add
pop
and
mov
cmp
shll
clc
push
sub
pop
xor
xchg
sbbb
xchg
adc
or
sub
and
cmp
mov
mov
pop
sub
in
push
pop
mov
aad
filds
lcall
cmp
sbb
aam
and
pop
dec
fs
jbe
mov
jp
mov
pusha
sub
xor
dec
adc
sbb
inc
lods
jnp
in
mov
sbb
inc
dec
jnp
int3
mov
stos
into
sahf
dec
jle
outsb
adc
mov
test
dec
in
xor
lods
cli
mulb
mov
movl
adc
out
cmp
mov
xorb
stos
pop
fsubr
addb
cmpb
jl
or
fsubs
pop
call
or
dec
jle
push
addr16
dec
xchg
lcall
sub
enter
sahf
in
jl
pop
add
pop
jle
or
movsl
add
pop
pop
pop
cmpsl
sahf
loopne
aam
jae
rcll
call
aaa
ljmp
jle
outsb
int
test
cld
sbb
hlt
int3
lahf
je
out
loope
jno
adc
sbb
mov
adcl
mov
sahf
mov
mov
jmp
sti
sbb
mov
inc
imul
loop
lret
add
fs
adc
daa
xchg
mov
aas
mov
pusha
hlt
call
or
sbb
out
mov
leave
xlat
ljmp
cmp
or
jmp
inc
inc
jg
or
in
adc
mov
cmpsl
enter
cmp
pop
adc
lahf
add
pop
or
mov
add
push
ret
jae
xchg
push
mov
cmp
pop
cmp
sbb
ss
es
or
hlt
and
sbb
cltd
mov
cmp
jbe
ja
cmp
cmpsl
sahf
mov
sub
orb
mov
popf
jb
jecxz
fisttpl
mov
rol
cmp
sbb
fisttpl
lds
jno
sbb
jecxz
rolb
mov
pop
or
call
adc
lods
mov
mov
ss
or
push
jp
add
mov
sub
mov
adc
push
mov
test
or
mov
inc
daa
dec
enter
xchg
push
xor
lods
adc
notl
js
jle
mov
jb
lret
aaa
lret
cltd
lods
subb
cli
out
addr16
addr16
adc
pop
lock
vpsubsb
xchg
fwait
scas
lret
out
or
cwtl
add
fsubs
jl
pop
lods
jne
mov
xchg
rclb
out
popa
icebp
cmpl
movsl
xchg
mov
rcr
push
loopne
jle
into
inc
loop
sbb
loope
or
mov
outsl
insl
stos
mov
jg
inc
sbb
cmpsb
loop
inc
push
mov
shrl
jecxz
jmp
addl
popf
shl
or
in
jle
ficompl
sub
in
ljmp
pusha
in
xchg
scas
enter
jns
dec
sub
aas
out
sub
gs
push
add
scas
add
xchg
fmuls
xchg
xchg
mov
add
xlat
fdivrl
mov
mov
sbbb
push
inc
add
shll
xor
inc
push
adc
cmc
shr
jae
enter
and
test
movsb
push
sar
mov
test
hlt
subl
fistpl
stos
and
jbe
leave
movsb
and
push
dec
sti
fimuls
mov
fiadds
pushf
push
push
cmp
insl
idivb
bswap
cmpsb
sub
xchg
shlb
scas
push
add
lret
ret
sub
imul
addr16
lods
scas
jge
sub
orl
or
in
insl
jae
cmp
movsl
aaa
or
sbb
adc
int3
xlat
and
out
xor
mov
dec
sub
xor
sbb
mov
lods
pushf
add
sbbl
push
mov
add
cli
ret
fildl
loope
aam
movsb
mov
pop
stos
adc
imul
decl
fcompl
cs
sbb
test
ret
mov
jle
subb
rorb
ret
frstor
adc
sub
mov
lea
dec
pushf
add
dec
fcmove
sbb
sub
jno
in
lock
jmp
jmp
jmp
jmp
cld
ljmp
jmp
enter
dec
mov
push
shr
xor
cvttps2pi
or
lret
stos
mov
add
inc
shrl
punpckldq
gs
mov
mov
out
test
sbb
pop
mov
insb
sbb
add
push
imul
xchg
dec
sbb
sti
or
dec
jbe
or
xchg
cli
or
mov
pop
dec
mov
inc
test
add
je
jecxz
add
bound
or
mov
xchg
into
fcmovbe
inc
or
sarb
rcrb
mov
dec
mov
mov
inc
lret
sub
lods
adc
and
mov
call
xchg
xor
push
mov
scas
in
jmp
ja
or
les
jecxz
or
shrl
inc
das
dec
and
inc
mov
mov
movsb
or
das
cmp
sub
mov
pop
orb
add
or
cmp
es
jnp
fidivrs
cmpsb
jno
adc
or
add
xchg
sub
addr16
fcoml
fidivrs
lret
mov
out
and
daa
hlt
sub
mov
lds
jle
adc
mov
test
pop
push
adc
subl
sti
in
stos
loope
and
lcall
sbb
dec
inc
xor
icebp
cmpsl
js
cmp
mov
mov
cltd
fildll
fisubl
leave
scas
mov
cmpsb
dec
pop
inc
mov
out
sub
pop
cmpsl
pop
ret
fisubl
js
or
int3
sbb
adc
enter
vpcmpgtd
outsb
lods
arpl
inc
mov
dec
and
sub
dec
movsl
bnd
fsubl
repz
stos
test
icebp
sub
int
push
aam
lods
jmp
in
jmp
or
in
into
stos
out
test
or
inc
lods
movsb
pop
jae
daa
jmp
stos
or
movsl
sub
sahf
rep
in
xchg
stos
rcrl
cli
add
out
mov
out
in
in
and
lret
and
push
fldl
daa
dec
or
and
or
adc
fildl
stc
jl
jnp
push
sub
fs
mov
sbb
les
mov
in
lods
lock
inc
sti
pop
mov
fcmovnu
xor
add
repz
shld
jmp
sub
mov
mov
hlt
mov
dec
or
out
and
movsb
aad
stc
or
pop
sbb
dec
in
fmull
frstor
pusha
add
es
inc
inc
lock
jle
mov
int
test
dec
lods
out
inc
xchg
rorl
sbb
pop
loope
into
sbb
jne
clc
mov
sar
add
fcmovnbe
sub
in
inc
mov
cwtl
adc
pop
insl
or
stos
sub
mov
jmp
cltd
daa
addr16
scas
sub
mov
add
mov
daa
nop
test
or
push
testl
iret
mov
adc
cmp
sub
cmpsb
or
std
adc
je,pt
lods
lcall
in
pop
mov
xchg
mov
push
and
mov
jl
push
pop
enter
daa
test
mov
fs
sti
and
pushf
pop
mov
in
fs
stos
in
aad
movsb
mov
cli
mov
inc
add
ret
fbstp
and
pop
fisttpll
xchg
mov
xchg
loope
push
in
jl
add
mov
jl
lods
jnp
out
or
fldl
inc
clc
mov
or
jle
push
xchg
push
je
jle
popl
pop
pushf
xchg
mov
pop
or
in
push
add
cmp
aas
mov
lahf
ds
addr16
jl
adc
sti
outsl
and
push
push
add
mov
dec
mov
mov
fs
add
mov
insb
or
out
sahf
pop
push
adc
jnp
sahf
int3
ret
or
stos
xchg
xor
aas
xchg
sbb
pop
pop
mov
mov
jmp
bound
or
and
in
ds
xchg
ret
mov
mov
and
add
fisubl
sahf
sub
and
repz
sub
into
addb
mov
mov
sub
cmp
push
sbb
addb
lret
repnz
sbb
repz
ds
mov
or
in
fisttpl
mov
ret
orl
inc
hlt
push
lods
and
add
ljmp
and
mov
sbb
add
push
jmp
push
shll
stc
stos
or
mov
lcall
mov
xchg
out
fcmovnb
sahf
cmp
fsub
dec
push
ja
mov
pop
adc
dec
lods
adc
fwait
jae
pushf
mov
das
sbb
mov
lods
or
cmp
gs
xchg
pop
add
ret
sub
fwait
incl
add
popf
jmp
pushf
xor
adc
mov
inc
out
push
les
roll
scas
cmp
sti
outsb
cmc
out
push
mov
fucomip
sbb
orb
xchg
addr16
je
lret
sbb
fs
push
subl
jo
pop
ret
mov
test
icebp
lds
xchg
xor
jl
mov
ret
out
std
and
fimull
mov
into
orb
test
test
scas
in
sbb
movsb
and
or
cld
insl
mov
cmp
and
stc
js
pop
jo
dec
sub
pop
mov
iret
icebp
fildll
pop
ds
pop
sub
int3
add
mov
bnd
cmpsl
or
lods
shlb
xchg
cld
sarb
pop
sub
sti
adc
inc
mov
adc
out
sahf
mov
sbb
or
xor
ret
add
test
add
xorl
and
adc
inc
mov
mov
ret
jmp
scas
jle
dec
and
stc
xchg
or
ss
xchg
sbb
subps
mov
jb
or
pop
decl
les
or
sbb
in
add
jmp
clc
xchg
or
fmull
xchg
test
daa
sbb
add
pop
adc
dec
add
ds
add
xchg
mov
jmp
add
insb
push
adc
stos
call
outsl
mov
test
mov
arpl
pop
sub
jmp
nop
xchg
sub
andb
add
fdivp
sub
mov
sub
repnz
popf
rep
bound
ja
scas
adc
pop
imul
cs
sti
stos
inc
sahf
iret
in
call
adcl
pop
dec
push
sbb
mov
test
sbb
test
mov
mov
out
push
sti
push
xor
in
cmpsl
xor
sti
pop
outsb
or
loop
sbb
cmp
xchg
mov
sub
leave
xlat
loopne
sahf
jno
scas
aas
cmpsl
lock
add
int
xchg
pop
inc
into
sti
dec
xchg
jp
aaa
jp
xchg
mov
decl
lret
das
fwait
addr16
sub
scas
int3
xchg
lods
int
add
cld
popf
in
or
xor
pop
mov
cmpsl
xchg
out
ss
dec
popa
push
aam
aaa
inc
fcoms
pop
iret
xchg
push
test
mov
sar
mov
or
add
in
jne
jle
jmp
cld
push
adc
andl
add
and
leave
aam
or
rcll
fldl2t
mov
cwtl
or
lret
int3
ret
xor
mov
sti
or
pop
std
clc
push
vmread
add
sub
or
daa
nop
adc
mov
mov
dec
popl
mov
mov
mov
mov
sub
mov
inc
mov
daa
pop
push
das
push
sbb
sti
in
mov
mov
jle
movsl
insl
fisubrs
loope
cmp
sbb
loopne
mov
ret
mov
or
inc
and
lock
out
push
sbb
ret
mov
lods
in
mov
sbb
shll
jne
shll
pushf
jae
ja
fimull
dec
inc
pop
clc
cmc
xor
or
add
inc
cmp
inc
xchg
push
add
les
gs
and
jp
lcall
jle
xchg
aad
bnd
pop
push
lock
daa
inc
sub
add
xchg
stos
in
scas
pushl
mov
adc
popf
sub
adc
push
xor
inc
jbe
jle
fmull
or
inc
inc
loopne
inc
add
mov
xor
out
scas
push
jo,pt
xor
jnp
and
xlat
mov
adc
loope
mov
inc
fwait
in
repz
fstl
ds
stos
pop
or
stos
mov
lret
inc
mov
or
xchg
mov
enter
inc
push
dec
or
jae
inc
out
push
mov
out
inc
pop
sbb
mov
inc
or
ds
ljmp
fildl
shlb
int
test
in
xchg
mov
and
lret
jno
subb
mov
cmpsb
lods
in
loop
mov
cmp
jmp
or
and
xchg
mov
jae
push
cltd
mov
lods
movsl
aas
or
sti
loop
pushf
ja
popa
fsubr
std
int3
xchg
negl
fcomps
lods
dec
mov
xchg
aam
aam
decb
in
icebp
fsubl
pushf
out
sti
inc
iret
jae
out
pop
and
aas
or
push
nop
adc
cltd
or
xchg
pop
inc
and
xchg
lcall
scas
sub
lcall
cmpsl
adc
call
mov
out
mov
jae
lret
leave
popa
add
mov
lcall
imul
xchg
nop
arpl
ds
stos
push
cld
mov
lods
movsl
scas
lock
mov
mov
mov
bound
mov
mov
mov
dec
xlat
aad
dec
mov
push
lret
sub
jg
dec
mov
jb
cmc
aaa
into
push
loope
pop
fcmovnbe
das
into
inc
insl
lds
scas
add
push
jno
or
jnp
xchg
adc
inc
sub
nop
je
cmp
insl
mov
add
test
sbb
clc
cmp
ds
mov
insl
cli
adc
adc
test
enter
popaw
es
cmp
jbe
jo
enter
aas
out
mov
inc
or
xor
jo
inc
sti
and
or
in
mov
loope
mov
sub
or
ds
in
or
jle
pop
push
popf
daa
adc
lods
jb
xchg
xchg
les
and
cmp
ret
add
lahf
or
sarb
out
std
mov
sub
ljmp
nop
jecxz
out
mov
fwait
lods
or
mov
gs
test
add
andb
repz
push
mov
or
inc
std
scas
insl
sbb
cmpl
dec
and
cs
dec
mov
mov
pop
lock
in
pop
mov
loopne
xor
sub
mov
sub
add
push
insl
pop
mov
xchg
xchg
mov
aad
or
or
cmp
in
ret
rorl
jl
xchg
jne
sub
je
subl
jmp
dec
popf
cmp
inc
shrd
imul
xchg
fisubrl
jl
andb
push
addb
daa
fwait
sbb
bnd
adc
ljmp
mov
dec
iret
ret
imul
or
inc
lahf
bound
sub
mov
inc
daa
push
fmull
or
sbb
mov
mov
dec
loope
mov
adc
mov
xor
pop
xchg
shl
jo
scas
cmp
loopne
icebp
sti
shl
pusha
adc
or
rorl
cmp
push
mov
and
sub
ret
and
std
xchg
out
or
xchg
movsb
push
movsb
insb
xchg
mov
and
loop
pusha
push
repnz
add
mov
aam
dec
inc
adc
xchg
insb
push
scas
or
sub
cmp
inc
insl
jecxz
sbb
xor
and
adc
int
sub
sti
outsl
test
xchg
call
dec
pop
xor
mov
js
xor
mov
inc
mov
xor
lret
ret
mov
fsubl
in
or
add
ret
adc
fildl
adc
and
in
repz
stos
in
xor
xchg
mov
cmp
push
enter
jmp
mov
mov
sbb
imul
fisttpl
cli
xchg
sti
sahf
or
cmp
or
push
pop
pushl
add
test
out
adc
arpl
loop
sbb
mov
mov
lea
scas
inc
push
sub
mov
cwtl
cmp
push
rorl
inc
mov
in
adc
adcb
leave
jg
sbb
sahf
mov
test
cmp
ljmp
sbb
jecxz
ljmp
lods
in
pop
andl
lret
and
in
adc
mov
inc
jg
shll
rol
pop
pop
mov
mov
jp
adc
fs
andb
sbb
inc
push
xchg
lret
pushf
int
sbbl
les
or
mov
decl
sub
or
in
mov
or
divl
push
in
test
xor
fwait
and
xchg
mov
add
loop
fcomps
mov
mov
pop
ret
xor
insb
add
pop
add
inc
ljmp
ljmp
or
test
xor
jp
div
mov
or
imul
add
jne
add
cli
xchg
cld
aam
and
and
mov
sbb
mov
push
sbb
pop
and
sbb
jle
les
les
int3
sub
mov
scas
mov
or
push
adc
mov
int
gs
push
ficompl
fsubrs
arpl
mov
outsb
cmpb
stos
sahf
test
ja
jle
enter
pop
push
sub
lret
sti
ja
not
inc
loop
movb
mov
or
pop
xchg
jbe
jne
sti
xchg
push
repz
add
lahf
cmp
mov
in
inc
or
mov
or
fwait
inc
ret
jg
dec
pop
cwtl
xor
adc
imul
push
ret
cmpsb
sar
jg
out
mov
aam
pop
lret
and
mov
mov
aad
push
shl
inc
xor
sub
xchg
or
rcrl
pop
stos
shlb
pop
push
mov
mov
pop
ljmp
xchg
cmp
sahf
sub
fiaddl
addl
div
ret
inc
sub
or
mov
rorl
mov
mov
pop
push
mov
pop
cwtl
pop
lret
sbb
jae
xchg
adc
stos
cmp
push
push
int
pushf
and
dec
push
xor
add
fiadds
pushf
adc
add
jno
movsl
enter
or
pop
std
mov
jns
jbe
xlat
jns
sbb
mov
stos
test
cmc
mov
pop
cwtl
sbb
xor
lods
pushl
test
push
pop
adc
cld
sahf
out
push
push
idivb
frstor
push
pusha
adc
lret
sbb
cmp
pop
subb
sbb
leave
mov
rolb
mov
and
addr16
or
or
xchg
or
lret
popf
adc
lcall
and
dec
xchg
es
push
push
cmp
aam
or
cmpsl
addr16
in
push
mov
mov
mov
mov
popa
mov
adc
jnp
loopne
fs
fcoms
in
mov
or
sti
push
jecxz
or
test
test
andb
loop
cmp
test
adcb
stc
or
ja
push
ja
jp
jecxz
lret
adc
cmpsl
insb
xor
sbbb
and
rcll
dec
push
mov
or
sahf
enter
out
push
sti
call
cmp
lods
xchg
mov
jecxz
lcall
pushf
pop
jecxz
or
mull
push
pop
dec
pop
push
imul
pop
mov
add
and
ss
test
mov
xchg
lahf
daa
les
into
sub
mov
add
testl
or
inc
adc
and
xchg
dec
cmpsl
out
xor
xchg
stc
fisttpl
insl
leave
cs
pop
stos
arpl
inc
or
add
or
dec
fwait
into
test
push
xor
or
jnp
not
pop
lds
movsb
cmpsb
mov
mov
dec
mov
sub
mov
and
in
adc
cmpsb
lahf
repz
test
push
mov
movsl
pop
stos
cmpsl
push
pop
repz
insb
sti
test
jle
mov
dec
sahf
cmp
addl
sti
sti
mov
sub
xchg
push
and
or
jae
pop
icebp
aad
fbstp
shr
repnz
pop
jnp
jmp
loop
sub
fisubl
pop
pop
orb
cmp
test
aaa
push
cs
mov
adc
into
bound
mov
lods
fimuls
fisubrs
lock
lock
sti
in
outsb
xchg
pop
cli
cld
fsubs
or
sbb
ret
mov
scas
pop
push
sbbl
test
mov
ret
jge
sub
out
lods
inc
pop
fwait
pop
pop
shl
add
loopne
add
sbbl
sbb
jmp
js
push
mov
xor
sub
mov
icebp
xchg
jecxz
sbb
and
popa
pop
dec
pop
push
orb
je
add
test
dec
arpl
or
pusha
push
cmpsb
jb
sti
or
sub
cmp
mov
sahf
jno
cmpsl
mov
or
xchg
pop
xchg
pop
push
push
dec
jne
mulb
lahf
push
push
cmp
insb
sub
int3
pop
je
mov
into
in
lahf
les
mov
xchg
mov
repz
xchg
jp
dec
js
jge
fsts
or
or
push
call
push
fwait
dec
dec
pop
mov
jns
movsb
xchg
js
xchg
dec
mov
mov
int3
push
hlt
test
imulb
mov
data16
sub
add
mov
mov
leave
push
jle
movsb
lret
jne
fsubl
pusha
xchg
in
pop
jb
mov
mov
adc
sbb
and
dec
incb
daa
add
mov
mov
sub
mov
push
insb
pop
mov
jns
xchg
sub
add
lea
xchg
inc
adc
cltd
pop
in
push
push
mov
js
std
cs
add
stos
or
add
test
decb
ret
jle
lret
outsb
or
lcall
lret
mov
jmp
sbb
in
stos
lods
jae
mov
mov
cwtl
push
out
cltd
add
lcall
lds
outsl
sbb
dec
xor
sti
lahf
lahf
sub
jnp
les
and
mov
pop
loopne
fcomi
popa
mov
pop
push
fwait
sub
mov
lods
xor
mov
cli
push
repz
dec
and
imul
mov
sub
bound
pop
or
or
jmp
stos
jnp
add
sbb
mov
out
cmp
mov
scas
ljmp
push
int
pop
mov
inc
or
lret
lret
js
insb
jb
lret
test
test
push
push
mov
xor
and
mov
push
imulb
js
cld
fwait
test
gs
or
mulb
jmp
sbb
xchg
leave
add
or
mul
push
pop
or
xor
xchg
sbb
or
xchg
call
dec
ss
in
mov
mov
dec
loop
pop
cltd
popa
mull
rorb
scas
inc
inc
sbb
iret
add
aam
or
sbb
outsb
inc
cwtl
and
lret
push
movsl
scas
inc
insb
or
jnp
mov
mov
dec
pop
dec
cmp
mov
push
or
xchg
hlt
adc
sub
ljmp
inc
mov
fiaddl
lret
mov
mov
xor
hlt
aad
jnp
add
adcl
rcr
test
pop
pop
pop
mov
ret
xor
add
xchg
sbb
adc
mov
cmp
jbe
sub
rcrb
sub
or
and
add
xchg
ret
add
pop
pop
rcrb
jmp
push
add
jecxz
or
in
push
insb
mov
xchg
or
loop
es
jne
sub
pause
int
fld
in
xchg
xorl
pop
add
add
jp
mov
sbb
pop
popf
mov
or
loop
aad
cltd
push
fimull
dec
mov
mov
shlb
mov
push
mov
lods
pop
jnp
pop
mov
adc
jl
pop
lods
lods
fwait
jo
imul
into
inc
sti
cwtl
mov
adc
add
mov
inc
orb
lods
xor
mov
stos
sti
pop
cmc
pop
ret
les
out
jb
aaa
lret
cmp
xor
test
and
and
inc
aad
dec
lret
and
in
inc
or
sbb
push
cwtl
jp
mov
aam
add
sub
cmp
ret
mov
jg
hlt
dec
mov
lcall
jp
stos
popf
jbe
adc
cmp
or
xchg
in
test
mov
and
rcr
jmp
xchg
cs
movsl
pop
pop
jae
xor
mov
jl
lret
mov
jecxz
loope
sbb
int3
cwtl
aam
pusha
std
sbb
fs
push
lods
aam
rorb
cmpsb
pop
sub
fdivrs
stc
loopne
dec
jl
movsb
mov
jp
insb
and
mov
add
popf
xorb
inc
repnz
cmc
cmpsb
call
mov
popfw
mov
cli
rcrl
insl
dec
pop
or
pop
xchg
into
mov
jno
xchg
push
dec
fmull
cli
arpl
sbb
pushf
pop
lcall
push
jmp
push
shlb
mov
ret
cmp
mov
inc
or
les
bound
mov
arpl
mov
add
popf
lret
dec
mov
dec
stc
pop
test
push
mov
scas
adc
sbb
mov
mov
in
test
movsb
sti
add
push
xor
xchg
pushf
mov
das
mov
mov
push
jp
dec
adc
push
pop
jle
into
mov
cmp
dec
push
dec
shrl
jp
sbb
out
into
repnz
repnz
popl
mov
mov
pushf
mov
pop
lahf
jae
pop
dec
or
pop
stos
adc
jmp
pop
cmpsl
je
xchg
scas
pop
rcl
xor
jne
inc
mov
xchg
loopne
jb
je
aam
push
fidivs
xchg
mov
add
fwait
fwait
or
jecxz
jle
mov
pop
test
mov
push
mov
in
fldenv
dec
in
sub
add
mov
and
shlb
xchg
cmp
scas
ficoml
xor
iret
sub
lret
hlt
insb
outsl
pop
imul
or
les
outsb
jmp
jmp
insb
push
mov
fistl
addr16
mov
pop
pop
mov
xor
js
sbb
fadds
sbb
inc
mov
lret
push
int3
sub
adc
or
lret
lret
mov
cmpsl
adc
roll
mov
insb
push
jnp
adc
mov
insb
sub
xchg
lret
xor
loope
sbbb
ret
fisttpll
aaa
int3
outsb
or
test
in
inc
and
and
fdiv
cld
shlb
inc
mov
xchg
subb
xor
cmp
cmc
and
push
cmp
stc
icebp
xor
cld
cmp
enter
mov
in
pop
add
cmp
adc
int3
lods
mov
adc
dec
lea
addr16
jo
and
sbb
xchg
jg
rcl
xchg
fldl
add
fwait
mov
lcall
xor
add
push
xor
scas
adcb
xchg
enter
ss
mov
lret
mov
hlt
mov
jmp
adc
nop
or
popf
mov
jle
loop
dec
sub
xchg
dec
cmpsl
dec
inc
int3
fsubrp
mov
cmp
rcrb
jnp
sbb
jmp
scas
or
jg
scas
cmp
in
mov
dec
imulb
xchg
fs
mov
add
fdivrs
sbb
aad
push
fwait
lret
push
pop
test
popf
pop
test
sahf
pop
jne
jle
imul
sbb
int
enter
ljmp
popa
add
lahf
pop
sbb
or
nop
aas
jno
cmc
xor
push
pop
mov
inc
aam
pop
dec
mov
pop
loope
inc
and
imul
and
std
in
test
xor
dec
or
mov
dec
or
pop
cmpsb
cld
hlt
mov
mov
add
cmp
sbb
mov
bound
mov
loope
or
sbb
push
stos
fmull
xchg
adc
outsl
mov
sub
fcoml
dec
pop
jg
imul
pop
add
adc
flds
cmp
cmc
addl
xor
sbbb
stos
int3
push
sub
dec
jo
or
insl
inc
pop
daa
xchg
sub
jnp
les
xchg
dec
push
lods
sbb
adc
and
mov
fimuls
pop
and
jne
jnp
fwait
lcall
cmpsb
iret
ljmp
push
xchg
scas
or
arpl
inc
call
mov
das
ret
xor
or
or
cmpsl
and
push
mov
pop
add
xor
sub
mov
fs
cmc
xchg
std
pushf
movsb
cltd
call
jb
sti
push
jmp
pushf
xor
xchg
ja
xchg
xchg
sarb
sub
ret
pusha
sub
xchg
sahf
cmpb
fsubrs
push
mov
test
inc
push
fs
jg
cmpsb
subb
fisttpll
adc
push
fstpt
ss
cmpsb
mov
pushf
xorb
add
shrb
pop
push
jle
bound
dec
mov
xor
or
pop
add
insb
fsubrs
jae
add
xor
lods
cli
aam
fnstenv
inc
add
or
fldenv
ljmp
cmp
sub
push
cltd
cmp
sbb
xchg
jbe
xchg
dec
daa
pop
test
insl
shl
icebp
push
mov
mov
jmp
nop
sub
adc
aam
fdivrl
dec
mov
int
in
jnp
mov
imul
dec
pop
or
pop
test
cmp
imul
cld
inc
les
scas
lcall
fildl
jg
push
pushf
lods
shrb
push
into
sahf
cmpsl
pop
lret
add
push
jle
sub
jg
mov
stos
lret
nop
dec
movsl
dec
sahf
pand
cmpl
jnp
jnp
add
test
jmp
lcall
stos
add
jmp
mov
insl
dec
mov
pop
in
and
xchg
pop
enter
xor
xor
cld
xor
mov
cmpsl
sub
sbb
outsb
adc
mov
sbb
es
xchg
cli
add
insb
imul
mov
inc
adc
int3
addr16
pop
fisubrs
scas
push
mov
mov
add
add
push
sbb
fucomi
les
push
stc
sub
xchg
xchg
ret
or
inc
pushf
xlat
mov
sub
and
into
sbb
pop
clc
jbe
and
addb
lods
xchg
movsb
insb
fimull
scas
insl
jmp
mov
jnp
adc
ficoml
test
mov
jbe
xchg
cmpsb
inc
mov
add
sub
push
mov
cmp
mov
rclb
cld
stos
scas
sti
mov
jge
mov
or
iret
sub
sbb
dec
and
popf
push
lahf
sahf
and
je
insl
jl
adc
xchg
rorb
dec
fwait
arpl
adc
inc
test
scas
lret
cltd
aas
or
mov
lcall
jge
outsl
sub
adc
stc
or
pop
mov
and
in
ja
movsb
or
pop
sbb
adc
xor
dec
xor
cmc
test
test
jns
movsl
int3
pop
add
xchg
loope
sub
ret
mov
sahf
inc
imul
es
mov
stos
outsb
in
sti
push
in
inc
out
cmp
movsb
scas
cmpsb
jb
xor
movsl
mov
stos
lds
clc
and
orb
cld
xchg
andb
cmpsl
xor
test
ljmp
repz
sub
push
cltd
pop
or
aad
in
or
inc
dec
gs
jns
inc
cmp
addr16
cli
and
inc
jmp
push
nop
or
into
lcall
mov
dec
ret
jae
mov
sub
mov
in
mov
repz
aaa
fcomp
and
push
xor
add
jl
popf
jno
push
xchg
mov
or
pop
mov
cmp
daa
jnp
jne
jns
stc
lret
orb
push
push
hlt
mov
lods
inc
icebp
ss
push
rcrl
dec
push
jecxz
out
in
lret
fisubrs
mov
enter
mov
dec
or
or
arpl
mov
popl
mov
pop
push
cmp
pop
push
and
sbbb
lea
jo
outsb
jo
jmp
mov
rol
cli
subl
pop
pushf
pop
mov
sti
add
movsb
pop
popf
addr16
loopne
dec
cld
mull
mov
sub
pop
aad
cmp
dec
out
fistpll
enter
in
aaa
sub
arpl
inc
sbb
stos
lods
fldcw
mov
arpl
bound
dec
sahf
push
aad
mov
jge
xchg
mov
jl
or
adc
lods
aad
hlt
or
add
xlat
xchg
cmp
fadd
sub
xchg
adc
std
xor
mov
out
stos
sub
fidivs
pushf
pop
jmp
pop
lahf
cs
adc
pop
out
push
popa
les
pushf
push
js
test
pop
or
jge
inc
mov
push
or
in
add
mov
and
lods
sbb
and
ret
cmp
daa
cmp
into
xchg
fcmovu
pop
add
pushf
data16
or
orb
jnp
or
mul
pop
out
ffreep
adc
in
in
sbb
and
outsl
push
mov
je
jl
addr16
popa
cli
mov
mov
shlb
in
mov
sahf
and
mov
mov
mov
ret
rcrb
or
mov
or
std
je
push
jnp
add
out
xchg
lock
lock
stos
or
int
adc
inc
mov
pop
rcr
scas
or
jb
imul
xor
jg
sub
xchg
and
rcr
fsub
daa
mov
mov
inc
lock
movsl
push
add
rcrl
push
jmp
stos
xchg
sub
push
mov
cltd
inc
subl
xchg
mov
or
dec
hlt
repnz
les
xor
lods
push
add
ljmp
dec
ds
and
stc
pop
je
aaa
adc
ds
movlps
test
cmc
pop
mov
mov
xor
insl
pop
insb
sub
mov
mov
popa
pop
xchg
sbb
insb
aam
icebp
xchg
sbb
sti
and
xchg
or
out
or
push
add
mov
pop
pop
inc
add
dec
imul
push
inc
cmp
xadd
popa
sub
xchg
inc
inc
sbb
mov
mov
scas
mov
jns
mov
mov
loopne
cmpsb
outsl
js
jmp
movsl
sbb
es
aas
pop
cld
sahf
lret
in
addr16
shrl
push
lods
cmp
popf
xchg
jae
out
push
jecxz
out
sahf
jecxz
jp
lcall
and
adc
sbb
lret
jmp
jae
pop
enter
add
and
mov
out
xchg
daa
int3
add
and
mov
fistps
leave
mov
cmp
outsb
sub
push
mov
and
movsb
sti
sub
jecxz
push
adc
repz
mov
jae
xchg
add
inc
jns
or
add
jle
sbb
sub
sbb
ljmp
sbb
dec
cli
sub
adc
and
sbb
push
or
adc
popa
ds
popl
fs
jns
mov
mov
push
sbb
inc
addr16
aad
call
shrb
filds
movsl
xchg
or
jl
sub
stos
mov
roll
pop
into
or
lcall
aas
push
or
dec
adc
adc
jmp
or
mov
mov
subb
stos
cld
lock
push
pop
adc
jl
cltd
aad
sarl
sahf
enter
insb
cld
test
push
aad
or
fs
jnp
in
mov
xchg
fistl
fnstcw
fcmovnb
sub
ret
je
cmc
insb
dec
inc
pop
scas
cltd
ja
mov
or
xorb
mov
or
lret
in
fwait
jnp
stc
or
out
lret
xchg
ret
daa
mov
sub
mov
push
ficomps
mov
movsb
add
or
scas
loope
mov
lods
pop
test
call
jno
add
cmp
mov
push
imul
pop
clc
out
fldl
loopne
add
adc
arpl
fstpl
test
incb
cmp
xchg
xchg
fcomi
movsl
add
loop
pop
mov
lods
cmc
sbb
or
pop
andb
adc
mov
add
xchg
sbbb
sti
mov
sahf
loopne
movsb
roll
sub
adc
mov
or
leave
jecxz
iret
mov
sarl
mov
xor
or
mov
lcall
lret
addr16
fwait
stc
ds
daa
mov
ljmp
inc
enter
jl
out
mov
push
jp
test
xchg
enter
into
dec
jbe
bound
push
hlt
lods
adc
jle
pop
dec
lods
mov
call
mov
ret
mov
add
shll
cwtl
xlat
adc
xchg
hlt
push
inc
int3
loop
jmp
lods
sub
in
orl
in
sar
push
sub
mov
clc
xlat
scas
mov
and
sahf
movsl
mov
dec
xchg
lret
test
mov
in
imul
cmp
lods
iret
andl
push
and
inc
and
jecxz
or
xchg
pop
repnz
sbb
out
int3
sub
add
outsb
movsb
in
add
push
rolb
bound
fildl
test
and
inc
adc
pop
lcall
fwait
mov
mov
cs
inc
sbb
pop
mov
std
pop
jl
rclb
pop
lret
out
push
push
cmp
vmptrst
mov
lret
xchg
inc
das
sahf
cmp
out
jle
jecxz
adc
dec
aam
mov
jno
lds
inc
movsb
inc
add
sti
call
jecxz
rcrb
mov
test
mov
fwait
test
mov
sub
xor
add
add
adc
sbb
or
pop
or
call
cmp
gs
sub
fs
lods
jl
stos
mov
in
cmpsl
jo
dec
and
out
loop
test
sbbb
push
jle
mov
jmp
add
ret
test
cmp
mov
sub
xchg
sub
jp
std
inc
and
data16
sbb
mov
outsl
xchg
xchg
dec
add
andb
mov
push
lds
cmp
out
jns
mov
push
push
jne
iret
nop
mov
jmp
pop
jns
add
out
sub
enter
ror
addr16
inc
jae
sub
daa
push
mov
mov
sub
adc
pop
push
ja
cmp
and
mov
rcrb
dec
jmp
or
jp
jecxz
jne
scas
es
jp
call
mov
jns
sub
test
inc
or
and
mov
or
popl
out
in
cmp
xchg
push
adc
jle
add
sub
hlt
push
ret
iret
scas
pusha
lret
sub
or
inc
xlat
jmpw
lret
repnz
jo
jmp
mov
sbb
cmp
in
out
in
add
repz
pop
push
inc
rcrb
pop
xor
dec
rep
xor
repz
movsl
out
jge
or
inc
adc
jb
xchg
lock
jo
adc
jo
dec
and
js
aaa
xor
fsubrl
pop
mov
mov
nopl
mov
int3
add
in
or
dec
mov
cmp
sbb
loope
inc
test
add
ret
rclb
fcmove
or
mov
pop
insl
xorl
addl
lcall
cmp
mov
scas
out
lock
arpl
faddl
and
jmp
xor
inc
lret
outsl
imul
repz
push
sbb
adc
fstpt
nop
jle
addr16
jb
add
or
add
xchg
push
sub
enter
in
scas
mov
fs
int
pop
sub
subb
mov
mov
scas
shll
mov
jb
jle
xor
push
sub
ret
cmp
fisubl
cli
incb
in
push
push
xchg
sbb
cmp
cmpsl
test
dec
adc
sbb
mov
xchg
mov
sbb
sbbl
inc
or
jle
sbb
dec
and
or
stc
or
jmp
out
mov
xorb
adc
adc
jge
lret
addb
xor
push
xchg
mov
push
inc
dec
imul
sub
cmp
push
dec
sub
xor
mov
xor
cs
jl
out
pop
mov
out
andb
mov
and
push
gs
add
pop
dec
icebp
rorl
lret
cld
dec
stos
gs
loop
xor
sbb
dec
push
push
daa
cmpsl
adc
xchg
pop
addr16
cmp
lcall
sub
mov
fmul
hlt
lods
int3
pop
loope
gs
pop
lret
sub
mul
or
ret
jle
cmp
mov
mov
add
and
mov
addr16
mov
push
or
mov
sti
push
xchg
or
add
mov
ljmp
mov
test
sahf
addr16
repnz
mov
faddl
aad
test
push
or
rorb
stos
add
mov
inc
mov
popa
xchg
movsb
xchg
test
shl
cmc
pop
aam
mov
out
rcll
add
sahf
sarl
in
jecxz
or
out
ret
lea
mov
clc
inc
or
xchg
orb
lret
adc
dec
and
mov
add
sbb
mov
sbb
xchg
sti
xor
ret
sahf
cmpsl
inc
mov
sbb
cmpsb
lea
add
mov
cld
jle
or
and
cmpsl
data16
or
sub
sub
inc
lds
fcomps
jbe
lret
fistpll
stos
fnstsw
lods
addr16
sbb
nop
scas
sti
xchg
test
imulb
mov
out
mov
cmp
jnp
in
sub
jo
pushf
and
sarl
pop
ret
nop
mov
mov
stos
jle
shll
mov
pop
sub
jge
lcall
sahf
pop
jecxz
cli
cmp
daa
dec
mov
in
stos
movsl
adc
fimuls
push
mov
aad
pop
and
pop
xor
ret
add
or
pop
mov
or
xchg
cmpsl
insl
cli
sub
andl
in
aam
dec
sub
mov
mov
mov
sar
push
cld
add
ret
mov
mov
ja
xor
pop
enter
outsb
xchg
testb
out
pop
sbb
ljmp
sti
pop
and
or
pop
sub
or
movsl
and
out
or
inc
pop
subl
jg
in
cmp
test
push
adc
dec
jb
inc
and
lret
out
outsl
cmovp
popa
lret
add
inc
add
jnp
fs
adc
adc
imul
mov
jl
sub
jle
fdivrl
add
add
mov
push
jle
rorl
pop
test
stc
sub
repz
or
rcrb
sub
dec
sti
pop
pop
jae
gs
sbb
out
cmpsb
movsb
jmp
or
popl
inc
dec
adc
cmovae
jge
aaa
push
add
movsl
arpl
cli
dec
in
enter
test
imul
xlat
stos
sbb
sub
arpl
sbbl
sub
outsb
pop
adc
jnp
or
enter
jb
filds
and
lret
xorl
cmp
mov
pop
into
shrw
in
shll
cmp
cmp
dec
fildl
fimuls
sbb
push
or
inc
lock
mov
mov
or
imul
arpl
jns
and
push
cld
push
push
mov
lahf
mov
pop
pop
andl
mov
add
push
or
movsl
aas
out
sub
jmp
add
and
aad
dec
or
add
mov
push
lods
cmc
mov
outsb
cmp
popa
icebp
add
movsl
adc
mov
sub
pop
jl
or
jle
push
pop
xor
cmp
xchg
sbb
mov
sub
and
sbb
mov
pop
aam
pushf
fisttps
xchg
dec
inc
push
jns
or
dec
pushf
adc
lret
lahf
ljmp
lods
dec
movsl
int3
outsb
mov
lahf
dec
jmp
xchg
inc
xor
xor
pushf
add
xorb
mov
in
mov
pop
popa
xchg
popf
int3
or
jmp
ret
ret
sub
jnp
insl
mov
ret
mov
fdivrl
lret
cmp
fistpll
push
sbb
adc
dec
dec
ret
add
addr16
repz
sbb
or
mov
push
aaa
cltd
or
movsl
mov
cmpsl
das
pushf
imul
sbb
ficompl
dec
inc
sbb
mov
sub
fisubrs
lea
lahf
inc
adc
add
loope
cmpsb
dec
ss
add
mov
rol
lahf
je
pop
out
lds
sbb
and
stos
test
in
push
inc
stos
ret
jl
push
je
pusha
xlat
add
fmul
or
fcompl
imul
arpl
mov
incb
mov
pop
sar
stc
loope
les
pop
cmpsl
mov
sti
imul
sarb
add
in
sti
jmp
or
hlt
mov
imul
ja
cmp
shlb
ljmp
xchg
add
arpl
fadds
mov
testb
pop
subl
cwtl
out
push
mov
push
mov
nop
faddp
sub
adc
ja
inc
leave
fwait
test
loope
or
into
inc
les
mov
push
jmp
call
loope
loope
popa
into
ret
sti
in
adc
push
xchg
shll
dec
test
test
mov
cmpsb
loope
adc
popf
inc
arpl
jp
movlps
sub
add
iret
pop
dec
lods
into
and
or
pop
add
jbe
repz
xor
or
orb
mov
mov
push
mov
mov
ja
xchg
jae
movsb
inc
mov
mov
add
mov
inc
sbb
fstpl
push
fsubrp
es
arpl
fmuls
inc
les
orb
fidivrl
fcoml
xchg
in
mov
loope
jmp
mov
cli
inc
inc
push
jl
aam
or
dec
add
inc
mov
mov
or
adc
mov
mov
out
cmp
in
sahf
jle
xor
lods
jmp
sub
or
test
mov
inc
jge
or
inc
cli
addr16
add
stos
aas
jo
shrb
dec
test
aad
xchg
js
push
punpckhbw
insb
jbe
js
adc
ds
nopl
inc
leave
lret
jle
xchg
fimull
faddp
lods
test
adc
addb
jmp
and
das
addl
les
sahf
sub
lret
xor
adc
sbb
andl
jg
repz
add
pop
ffreep
popa
sbb
pusha
lret
dec
sti
outsl
sahf
pop
fists
dec
pop
push
jg
mov
jnp
jecxz
call
push
imul
or
ss
scas
inc
pop
ljmp
push
js,pt
or
add
js
enter
dec
cmpsl
sbb
lret
fbld
lods
imul
xchg
hlt
lods
push
mov
dec
lcall
adc
ljmp
fdivs
or
scas
push
rclb
mov
nop
out
leave
roll
adc
std
in
stos
mov
sub
fidivrs
stos
pop
rcrb
and
jnp
jnp
cli
add
jne
mov
lods
inc
in
xchg
add
addr16
dec
xchg
sub
sub
sbb
cmp
les
inc
and
xor
mov
je
sti
or
jp
pop
mov
jne
dec
jl
sub
sub
out
cmpsl
seto
sub
test
lods
pop
data16
bound
add
jp
lods
imul
cmp
stos
sbb
insl
cmc
inc
cmpsb
dec
aad
sub
and
cmp
movsl
or
dec
loope
and
mov
inc
sub
scas
pop
sub
push
mov
add
je
int
sub
mov
ret
out
cltd
add
push
ljmp
lahf
cli
orb
mov
dec
add
xchg
jmp
pop
pop
loope
mov
mov
or
test
or
jmp
sbb
and
xor
in
pop
rcrl
loope
sub
jl
push
hlt
vpcmpgtd
iret
pop
sbb
jle
lcall
enter
cmp
in
jle
ret
ja
and
movsl
xor
or
mov
jmp
mov
jns
pop
lret
pop
in
movb
add
xchg
add
cmp
in
test
leave
fimuls
test
cwtl
push
test
mov
test
dec
lea
add
inc
aaa
mov
push
sahf
lahf
push
and
xchg
mov
push
xchg
insb
mov
or
cmp
mov
mov
xchg
aam
or
lea
or
lret
cmpsl
scas
adc
fnclex
jns
fidivrl
lret
pop
shll
push
push
mov
jp
mov
orl
sti
cwtl
ljmp
test
cmp
mov
call
jge
or
sub
sti
mov
or
or
sub
adc
mov
push
out
cld
mov
mov
loopne
dec
mov
cmpsl
insb
mov
scas
xchg
and
into
adc
mov
sbb
cld
orb
ljmp
adc
dec
dec
mov
or
mov
sbb
rorb
add
cmp
xchg
test
add
std
sbb
std
adc
test
xor
pop
inc
ja
dec
jnp
in
inc
or
xchg
xchg
pop
inc
sbb
xchg
xlat
mov
fs
pushf
fs
popa
imul
stos
pop
lret
dec
ljmp
loopne
out
cmp
jnp
inc
test
in
inc
arpl
ret
jle
enter
xor
stc
roll
or
mov
push
sub
cwtl
into
insl
inc
lea
dec
mov
jns
lahf
in
mov
enter
in
loop
jbe
push
clc
in
mov
sub
mov
sbb
sub
adc
add
sti
or
dec
mov
mov
cmp
sahf
push
xchg
lret
scas
out
test
mov
ret
xchg
mov
into
test
in
int3
repnz
sub
cmpsb
add
mov
lods
stos
faddl
or
or
pop
and
mov
aad
push
push
lahf
mov
pop
sub
pop
lods
jno
xchg
adc
add
jnp
inc
dec
iret
icebp
jmp
out
movl
imul
sbb
xor
cmp
adc
ret
cwtl
jp
sbb
mov
fs
in
sahf
and
mov
js
sbb
iret
lret
jne
mov
xchg
lods
test
pop
mov
lret
sbb
xchg
es
insl
in
add
icebp
mov
int
mov
mov
mov
mov
xchg
add
jg
cli
add
loop
push
xchg
das
inc
lods
adc
push
push
nop
dec
jp
dec
cld
jbe
or
push
jnp,pt
jle
cmp
pop
mov
push
ret
inc
pop
jmp
cli
icebp
adc
lret
call
decb
imul
popf
lret
test
nop
bound
and
fs
stos
fisubrl
addr16
sub
push
lods
aas
push
std
sbb
jecxz
xor
dec
int3
lods
sahf
fwait
mov
push
mov
fidivrl
cmp
push
sbb
lods
addr16
out
stos
int3
vfmsubadd213ps
insl
sbb
loope
mov
inc
and
into
inc
mov
lods
int
stc
dec
lret
sub
fbld
shr
xor
push
ret
sbb
mov
movsb
scas
cmp
adc
sub
arpl
test
mov
cmp
dec
sbbb
shl
andb
pusha
into
jmp
iret
rolb
mov
cmp
lret
icebp
pop
aam
rcrl
mov
xchg
inc
xchg
test
sbb
adc
cld
loope
add
and
leave
jg
ss
fbld
lods
lcall
js
xchg
sub
push
dec
addr16
inc
out
cld
lods
test
adc
shlb
in
out
jmp
add
mov
push
xorb
fdivrl
mov
lret
push
stc
fildl
and
jb
cmp
push
in
jbe
loope
and
ds
popa
push
jl
mov
fimuls
adc
leave
cmp
xor
pop
or
pop
adc
and
ret
sarl
bound
lds
xor
ret
bts
jb
je
sub
insl
das
xchg
in
lods
arpl
jnp
add
loopne
inc
cs
xchg
xchg
shl
cmp
movsb
lods
mov
int
popf
ss
loope
idivb
jp
es
adcb
dec
cmpsl
push
ret
ds
push
fadd
adc
adc
lahf
xchg
stc
ja
fsubs
fbld
jmp
xchg
iret
fsubrl
scas
lret
mov
and
insb
loop
daa
xchg
or
push
push
sbb
in
sti
out
fwait
jmp
xchg
adc
incl
out
sbb
lods
and
out
mov
inc
inc
xor
cmp
jle
fsubs
mov
mov
jmp
jbe
loopne
je
push
fldcw
or
ja
dec
cli
ljmp
lretw
ret
jbe
lret
movsl
mov
jle
gs
sbb
cmp
test
add
into
sub
rcrb
rcll
imul
lahf
adc
in
out
iret
dec
shrb
daa
push
arpl
add
stos
mov
sub
insl
jne
sub
cmp
daa
sti
movsb
mov
mov
inc
inc
xor
fcmovbe
dec
and
mov
call
les
add
hlt
sub
pop
mov
mov
jp
xchg
arpl
insl
xchg
adc
jns
adc
inc
fidivrl
scas
movsl
pop
mov
fisttpl
sbb
inc
xor
rcrl
sbb
aad
sbb
xchg
adc
jl
sub
sub
sbb
hlt
fs
scas
dec
sub
dec
mov
cltd
xlat
stos
inc
push
adc
jle
push
push
les
in
pop
jae
sbb
movsb
push
cltd
mov
out
movsl
xchg
ss
enter
int3
adc
lods
in
insl
pop
dec
sub
sub
leave
shrb
or
mov
push
rcll
in
mov
mov
lret
xor
mov
pop
add
fbld
mov
adc
pop
xchg
out
adc
jo
lock
pop
adc
sti
pushf
mov
xlat
ds
pop
cli
mov
sbb
rorl
or
es
jl
push
sub
call
sarl
in
out
fsubrl
mov
and
add
pop
sub
cmc
inc
enter
xchg
push
xchg
cltd
mov
ljmp
add
cmp
cli
cld
jl
les
daa
test
int
loop
dec
pop
and
sahf
jmp
or
adc
rorb
mov
jg
movsl
push
lret
loop
jne
sbb
test
mov
enter
lahf
inc
in
scas
stos
loope
aaa
mov
add
mov
sub
adc
aaa
add
rorl
outsb
push
inc
out
sub
add
dec
repnz
movsl
in
xor
mov
imul
scas
sbb
mov
mov
sbb
movsl
push
cmp
xchg
lods
jae
mov
xor
xchg
addr16
lods
push
jae
rclb
mov
test
pusha
scas
daa
into
xchg
mov
add
sub
cli
push
push
or
cmp
add
xchg
leave
mov
and
push
into
mov
pop
xor
pop
push
sti
pusha
ljmp
sti
jno
sub
mov
fidivs
dec
jmp
mov
jbe
add
inc
mov
das
adc
add
popf
jecxz
lods
cmp
or
mov
test
fistpl
stos
push
int3
mov
in
aas
dec
push
addb
mov
jo
jns
fisttpl
addr16
push
sbb
inc
incl
mulb
lret
in
pushf
bound
jmp
test
jecxz
ret
call
in
jno
cmp
jnp
daa
pop
lret
data16
mov
arpl
xor
daa
wbinvd
mov
insb
sti
jg
jle
inc
push
and
or
push
adc
mov
jmp
movsl
dec
popa
inc
imul
cmp
movsb
lret
out
outsl
inc
fisttpl
sub
fstl
xchg
test
fs
and
lods
push
insb
mov
push
icebp
aas
mov
cmpl
jecxz
aaa
add
cmc
xchg
mov
enter
movsb
int3
mov
inc
es
sbb
mov
xchg
test
fldenv
inc
cmp
imul
jg
mov
or
int3
fs
ror
fldenv
sahf
movsl
add
pop
std
int3
int
dec
outsl
shlb
inc
dec
gs
sahf
rcl
mov
sub
fs
push
insl
ljmp
jb
push
pop
cli
add
lods
push
jle
and
sahf
das
hlt
cmp
or
dec
pop
cmp
pop
lods
clc
mov
jge
xchg
js
adc
orb
pop
mov
rorl
out
or
clc
pop
jecxz
cmpb
add
andb
into
jbe
add
fwait
stc
sahf
fldt
mov
imul
dec
outsb
into
or
int3
sub
pushf
pop
pusha
or
push
int
out
dec
sub
bound
imul
xor
add
push
pop
pusha
xor
push
not
or
insl
arpl
add
mov
push
cmp
pop
pop
ret
cld
mov
xor
cmpsb
mov
push
mov
mov
pop
sti
add
add
inc
in
lahf
les
add
pushf
sub
push
insl
sub
andl
jnp
mov
stos
sbb
seto
or
sti
bound
jb
les
xchg
xor
dec
xor
and
lcall
test
mov
loop
adc
or
mov
xchg
jae
icebp
lock
clc
or
daa
stos
outsl
sub
loop
out
xchg
dec
jg
or
lods
cmpsb
repnz
lcall
lret
sub
xchg
mov
test
or
or
daa
int
aas
test
push
subb
stos
int3
or
sti
mov
test
jg
fstpt
mov
inc
mov
or
loopne
sbb
insl
leave
iret
sti
gs
push
pop
mov
mov
push
dec
and
xorb
jp
mov
xor
push
fldl2t
mov
sub
inc
dec
insl
hlt
mov
add
xchg
std
mov
inc
mov
cli
inc
cmp
enter
mov
rol
cmp
scas
jmp
or
sub
sti
aaa
not
push
xor
incl
or
mov
call
fcoml
mov
and
repnz
sahf
or
cmp
inc
int3
xor
repz
pop
cmp
sbb
fsubs
sbb
push
cwtl
push
int3
int3
lods
jae
mov
sbb
xor
inc
in
or
add
xlat
pop
inc
mov
inc
xchg
push
les
nop
push
ss
mov
lock
int3
adc
scas
mov
add
push
mov
adc
mov
jnp
mov
push
leave
add
cli
pusha
inc
inc
push
pop
enter
jnp
jl
cmpsb
inc
and
shlb
imul
jl
aad
and
cs
sahf
stos
cmp
outsb
jle
mov
nop
xor
cmp
xor
cmp
pushf
test
mov
lea
jle
in
mov
and
dec
and
push
lret
push
pop
sar
out
cmp
adc
jl
aaa
jae
in
jl
or
sbb
cs
in
and
lret
out
or
in
in
mov
jl
xchg
fidivrs
or
or
push
and
cmp
popf
in
fs
daa
push
pop
sbb
lahf
jbe
dec
mov
cmp
jle
in
jnp
cmp
into
sbb
test
cli
js
andb
sbb
pop
insb
mov
xchg
add
fistps
or
es
sbb
mov
jge
test
popf
orl
fprem
or
xchg
and
in
xchg
jno
outsl
test
dec
push
pop
imul
stos
adc
inc
dec
and
xor
test
inc
rcr
sub
faddl
and
addr16
aas
mov
xchg
push
xchg
loopne
ljmp
jge
mov
flds
xchg
jnp
in
cwtl
rcrb
add
jle
push
fcmovb
jo
dec
and
dec
or
adc
arpl
jle
and
and
xchg
sahf
adc
sub
jg
mov
jb
cmp
call
adc
or
jnp
lret
dec
pushf
lcall
adc
cmp
mov
push
ficoml
inc
pop
mov
int3
fs
mov
out
push
movsl
aad
cmp
mov
sbb
lea
das
mov
inc
fisttps
jg
mov
hlt
loopne
mov
pop
mov
insl
jne
aam
add
pop
cmp
lods
movsl
xor
pop
ret
xorl
insb
jne
and
fisubrs
arpl
jmp
sbb
mov
push
add
or
push
xchg
lea
lret
fisttps
xchg
int3
loop
adc
dec
pop
mov
push
int3
or
cli
cld
or
data16
int3
loope
add
sahf
lods
pop
pop
fidivl
ret
not
xchg
test
cltd
les
ljmp
rclb
into
bound
jl
and
add
or
adc
dec
scas
cmpsl
push
mov
or
mov
add
or
leave
cmpsb
ret
pop
popa
subl
lea
pop
mov
loopne
xchg
jle
mov
add
movsl
cmpps
scas
and
stc
dec
test
jbe
sbb
xor
mov
in
outsl
loop
outsb
inc
fs
cmp
sub
sahf
in
jns
add
outsb
rcrl
sub
jns
cld
enter
icebp
push
sub
or
pop
mov
lret
inc
jle
inc
mov
add
sbb
pop
aam
sbb
aaa
subl
jg
in
cmp
call
dec
inc
in
jp
sbbl
ljmp
lret
jle
fwait
hlt
ret
mov
mov
fmul
in
test
addr16
clc
cmpb
adc
in
adc
cmpsb
repz
popf
push
lret
iret
pop
iret
incl
test
add
test
std
cld
outsl
add
push
int3
cmp
push
inc
cmp
mov
sarb
into
mov
fisttpll
fdivrl
or
movsb
add
hlt
add
ja
add
loopne
movsb
xor
inc
fs
add
add
std
lock
sti
imul
xor
in
insl
pop
rol
hlt
iret
pop
shlb
xchg
in
out
fcmovu
pop
dec
addr16
jne
std
icebp
push
jl
jns
daa
lods
jmp
in
push
in
sbb
sbb
push
imul
imul
xchg
popf
xchg
aaa
mov
jo
cmp
push
nop
sub
lret
les
ljmp
adc
fs
test
fcomps
dec
fdivrp
cmpsb
insl
and
push
ds
push
sbb
enter
dec
into
add
movsb
mov
pop
jmp
dec
inc
sub
jle
push
mov
int3
jge
lcall
pop
or
sbb
adc
shlb
adc
aaa
movsl
scas
ss
lret
movsl
push
sub
std
push
ljmp
aam
scas
push
sub
pop
pop
je
pop
jnp
in
cmpsb
sbb
push
cmp
adc
lds
in
mov
sti
outsb
cmpsl
cs
or
popf
ja
jp
xchg
jnp
inc
jnp
adc
or
sbb
push
insb
pmuludq
aaa
imul
push
rolb
mov
or
inc
mov
sub
outsb
pop
and
movsl
xchg
xchg
mov
jle
mov
xor
pop
sub
rcr
addb
dec
sub
lahf
add
inc
jae
or
xchg
sub
and
mov
aam
stc
mov
js
popl
mov
shll
bnd
hlt
sub
mov
xchg
add
shlb
jmp
stc
fildll
pop
mov
dec
movsl
add
fmulp
xchg
repz
inc
cmp
push
xchg
dec
scas
adc
add
pop
mov
rcrl
stos
jnp
sub
dec
cmp
push
addr16
xchg
cwtl
mov
outsb
lock
xchg
ret
xchg
mov
shlb
loop
xchg
jnp
add
and
cltd
ja
add
cmp
mov
pop
enter
add
push
idivb
cli
push
push
and
mov
in
cmp
xchg
sbb
into
jle
out
xlat
sub
mov
pop
and
and
sahf
loope
nop
xchg
and
dec
and
stos
in
add
jp
mov
cmc
add
inc
adc
icebp
sbb
test
mov
xchg
lock
inc
nopl
sbb
push
frstpm(287
sti
out
sbb
mov
or
pop
add
push
bound
insl
loopne
pop
xchg
sub
mov
fmuls
mov
mov
add
sahf
js
mov
mov
jnp
mov
xlat
incl
outsb
jmp
ljmp
push
dec
in
roll
jle
adc
sti
sub
inc
cmc
test
setge
and
roll
pop
sarb
jmp
sub
scas
mov
stos
xor
outsb
jge
hlt
in
fcomi
sub
adc
mov
aaa
out
mov
lods
iret
lret
or
stos
dec
sub
rcrl
push
or
les
xchg
mov
addl
aas
divl
mov
xor
jno
mov
add
pop
xchg
pop
ret
repz
add
dec
sbb
or
lea
jecxz
push
roll
jle
stos
or
popa
sbb
add
jns
jle
aad
das
or
mov
cmp
cmp
and
stos
or
xor
fucomp
mov
add
cmp
lret
push
std
inc
adc
mov
mov
cmp
cmp
add
jbe
rol
push
or
add
out
repz
fstpt
push
movl
call
repnz
rcrl
push
fs
fbld
imul
cs
inc
mov
pushf
adc
push
inc
in
movsl
rcrb
jge
mov
scas
cmp
adcb
daa
fistpl
int3
xchg
stos
insl
push
add
imul
call
sarl
push
dec
inc
jnp
lahf
out
dec
test
fnstcw
ror
push
nop
pop
add
sub
jmp
aam
dec
pop
xor
aam
pop
pop
push
push
mov
cmp
or
shrl
xchg
jmp
push
sbb
or
lods
mov
sbb
mov
ret
dec
lret
cmp
or
mov
popf
cmp
ret
sahf
sbb
mov
es
les
mov
inc
jge
or
out
xchg
dec
call
jecxz
or
shlb
jecxz
or
outsb
pop
cmpsl
sbb
cli
int
mov
jo
jl
add
mov
repz
test
rclb
cmpsb
jo
in
mov
cmp
test
lock
lods
out
nop
in
jp
sbb
push
rol
xchg
ret
cmp
and
stos
push
push
jbe
es
test
shll
or
popa
mov
aas
sti
push
pop
jecxz
xrelease
and
cmpsb
loop
pop
test
loop
pop
sub
pop
les
xchg
fadd
in
repnz
mov
out
lcall
jno
addr16
and
sbbl
test
in
mov
stos
cmpsl
xor
and
repnz
xchg
out
dec
inc
clc
pop
inc
pop
jnp
test
add
cmp
jmp
adc
xor
dec
movsl
add
push
lods
aaa
dec
in
dec
aaa
xor
lds
mov
push
adc
scas
sub
pop
mov
adc
push
mov
mov
ret
mov
sub
test
mov
jbe
int3
idivl
pop
jecxz
xchg
stos
lods
adc
inc
arpl
pop
mov
bound
and
adc
add
cmpsl
outsb
test
stos
adc
adc
into
adc
push
dec
fldenv
dec
popf
fucomip
decb
or
ret
push
lret
jnp
pop
sahf
jmp
fcomi
push
sub
inc
jle
pop
orl
mov
movntps
icebp
add
mov
ficompl
adc
xor
insb
pop
pop
xchg
and
cli
and
aam
scas
or
jno
pop
jl
popl
push
les
xor
bound
jmp
inc
cs
jb
add
xchg
int
adc
inc
mov
mov
shrl
pop
pushf
test
or
or
add
xchg
dec
jge
mov
dec
mov
scas
mov
inc
or
in
in
lods
or
int3
xor
movsb
add
in
sbb
add
dec
adc
out
jmp
loop
out
pusha
xchg
popf
adc
stc
or
leave
fld
hlt
dec
adc
daa
sbb
popf
addl
dec
pop
dec
and
xchg
xchg
pop
add
mov
cmpsl
popf
add
cld
or
mov
xor
test
imul
cld
dec
aad
ret
loop
dec
or
lret
xor
xor
sbb
mov
nop
mov
sbb
inc
sub
aad
pop
xchg
fmul
aaa
subps
mov
jp
and
push
push
sbb
add
sbb
mov
lods
xor
sub
dec
dec
daa
jmp
mov
fnstcw
xchg
or
mov
adc
adc
adc
mulb
loope
mov
lret
lods
enter
insl
or
add
push
nop
subb
or
inc
mov
lret
adc
les
or
sbb
pop
jmp
loop
mov
and
sbb
imul
add
outsb
outsb
xchg
daa
hlt
dec
jno
pop
adc
or
in
in
js
jae
sti
push
add
mov
das
fadds
popa
mov
xchg
or
inc
lea
stos
jmp
stos
cmpsb
cs
and
out
mov
push
movsl
jnp
add
sti
inc
fisttps
push
lods
repz
jecxz
test
sti
loope
cmpsl
inc
sbb
mov
fdivrs
xchg
pop
arpl
sub
out
dec
mov
mov
test
fisttpl
sub
lock
xchg
subb
inc
push
cmp
cmp
mov
inc
adc
jno
mov
cmp
stos
adc
adc
inc
mov
mov
ret
sub
xor
mov
and
dec
cwtl
mov
hlt
cli
lods
insb
sbb
nop
in
sub
or
in
sub
addb
or
xor
dec
or
js
outsl
sbb
dec
jno
insb
jmp
iret
ja
dec
push
pop
jno
mov
jae
add
push
mov
add
das
pop
dec
jns
dec
fstp
mov
xchg
orl
mov
xchg
dec
jecxz
xchg
orl
dec
adc
xor
test
stos
adc
fstpt
flds
or
andb
jp
mov
dec
orb
adc
add
mov
fwait
testl
add
stc
xchg
and
test
and
frstor
imul
cltd
pop
out
sub
sbb
sti
lret
mov
aam
sub
mov
rcrl
cmpsl
mov
fisttps
jnp
xor
cld
xor
call
xor
sarl
mov
mov
test
insb
fmuls
movsb
mov
inc
bound
lahf
or
test
adc
jmp
inc
xlat
ret
shrb
xchg
or
lret
insl
xor
jmp
popl
pop
add
repz
add
into
test
rorl
ret
es
cld
mov
test
les
fnstsw
or
jge
sbb
roll
lret
or
dec
xchg
loopne
scas
ja
repz
push
aaa
add
arpl
int3
sti
adc
cmc
pop
xchg
add
test
adc
dec
fistpl
lret
in
pop
dec
mov
mov
or
xchg
cmc
mov
cmpsb
lret
xchg
fdivr
stc
loope
and
sub
xlat
scas
loopne
push
js
add
loopne
mov
repnz
call
jp
addb
push
fbld
aad
sbb
or
mov
daa
jmp
std
xchg
dec
push
sbb
scas
xchg
adc
leave
and
test
jb
jnp
adc
rcrl
pop
mov
jnp
mov
mov
push
push
ret
lret
pop
pop
sbb
push
lods
or
test
bound
mov
cmpl
dec
mov
jbe
push
fmulp
pusha
xor
jge
mov
and
adcl
scas
lret
dec
sti
or
dec
fstpt
cwtl
inc
jmp
leave
adcb
icebp
add
into
mov
mov
and
lock
and
sub
cmp
pop
sbb
orb
popa
and
or
xor
jecxz
add
sbb
loop
setp
std
pop
or
loope
add
mov
mov
push
std
mov
push
fisttps
sub
sub
or
scas
outsb
adcl
iret
add
mov
jle
mov
sbb
mov
mov
add
in
sub
push
stos
fucomi
sub
cmpsl
sar
int
sbb
mov
mov
cmp
pushf
repnz
in
mov
pop
ret
shlb
or
shr
test
or
icebp
push
pushf
icebp
add
pop
sbb
clc
add
leave
icebp
test
scas
jmp
mov
jb
aam
hlt
lock
cwtl
mov
mov
jmp
pushf
daa
add
jecxz
fcmovu
pop
jge
movsl
or
add
sub
mov
stos
mov
loop
movsl
mov
insb
mov
push
cmpsl
cmpsb
sbb
stos
lods
jmp
cmp
push
in
mov
in
add
mov
sub
sub
push
out
add
pop
or
jbe
lock
mov
push
mov
push
daa
push
jo
loop
mov
fcmovu
ss
jg
inc
jns
rcl
push
roll
xchg
aaa
mov
push
or
mov
mov
jp
sub
push
stos
and
mov
jns
sbb
mov
dec
sbb
lret
add
dec
add
mov
cli
popf
data16
movb
mov
sbb
jmp
out
adc
or
add
and
lret
inc
out
mov
add
pop
dec
dec
out
or
popf
or
dec
xchg
mov
nop
xchg
fsubrl
or
outsl
lcall
adc
call
mov
aaa
mov
mov
and
or
and
mov
loopne
fldcw
gs
mov
hlt
repnz
rolb
mov
out
add
call
mov
mov
jp
ljmp
adc
jne
pop
clc
loope
clc
cmp
imul
or
push
or
jbe
xchg
or
in
out
imul
shlb
mov
push
add
xchg
or
pop
push
xchg
pop
mov
push
pop
scas
out
sbb
ret
dec
fstl
in
add
cmp
sbb
sti
shrb
mov
test
mov
dec
inc
inc
push
adc
mov
inc
lock
mov
mov
push
xchg
repz
xor
das
sub
cltd
xor
xchg
mov
mov
lds
dec
or
rcll
mov
push
and
ret
pop
nop
inc
iret
push
add
inc
loop
out
xor
fndisi(8087
bound
in
mov
sbb
adc
movsl
push
add
and
pop
std
hlt
adc
repnz
inc
movsb
or
lods
and
adc
and
cmpsl
or
ret
xchg
test
fmuls
adc
pop
adc
add
cwtl
fsubrp
inc
sbbb
dec
mov
jmp
ret
or
lds
andl
sbb
mov
sub
xchg
out
in
add
pop
xor
aad
jecxz
xchg
xchg
sub
jnp
orl
lods
int
sub
add
insl
stc
ret
loope
jmp
sbb
cmp
or
dec
pop
lret
mov
sub
push
int3
jp
jle
sub
jl
sub
sbb
push
ljmp
out
add
stos
cmp
xchg
and
mov
fimull
aam
lods
mov
and
xor
mov
int3
mov
mov
xchg
jmp
jae
pop
or
mov
fsubrp
push
dec
pop
adc
dec
fwait
rcrl
push
cmp
sbb
add
mov
iret
iret
or
xor
inc
sub
bswap
frstor
fs
mov
xchg
insb
adcl
lods
add
enter
push
jle
mov
jg
lock
dec
xor
or
jns
stc
or
pop
addr16
adc
in
jb
cmpsb
mov
test
fisubrl
mov
insb
cmpsl
mov
push
mov
inc
pushf
stos
lret
adc
in
pop
or
or
lcall
and
int
mov
or
sarb
or
lock
shlb
mov
jl
mov
adc
sub
dec
dec
xchg
and
adc
and
and
mov
pop
stc
and
add
mov
lods
push
cmpsl
pushf
mov
stos
inc
into
icebp
cmp
or
jge
scas
mov
call
test
in
shl
daa
inc
xchg
add
pop
fidivl
xchg
out
repz
dec
lock
add
ror
insb
push
les
rclb
rcl
fnstsw
mov
mov
sub
mov
fsubs
movl
xchg
jno
andb
jle
out
aad
cmp
mov
shl
xchg
pop
jecxz
cmp
in
mov
add
in
stos
std
cmpsb
mov
aam
mov
out
xchg
sub
add
add
push
dec
push
and
jge
or
pop
cli
andb
vpunpcklbw
in
mov
mov
xchg
mov
or
or
dec
lcall
jl
push
or
lcall
andb
or
inc
push
das
fs
xchg
and
or
ds
gs
cld
mov
int3
cld
rorl
add
and
popf
and
jl
cmp
dec
jp
and
stc
xchg
dec
in
cmc
imul
out
lcall
into
pusha
and
cli
push
sub
cmp
adc
adc
mov
and
jb
rcr
push
and
iret
sub
mov
out
pop
push
sub
cltd
jb
sbb
xchg
or
fnstcw
lret
testb
mov
xchg
int3
mov
out
sbb
or
lret
sub
xchg
test
xchg
call
inc
adc
not
pushf
cmpb
jnp
adc
or
and
mov
inc
mov
psraw
mov
push
lods
insl
mov
jle
addr16
xor
popf
clc
pop
loop
inc
in
xlat
enter
jns
add
mov
pop
int3
cwtl
roll
js
mov
fldenv
lahf
mov
mov
push
sub
int
out
mov
ret
or
adc
mov
cli
gs
sbb
lcall
jbe
and
in
flds
xchg
adc
sub
int
push
roll
sti
and
jmp
enter
and
lret
lods
fwait
dec
fistpl
sbb
arpl
mov
dec
lock
cmc
adc
mov
or
dec
add
mov
fbld
add
iret
stos
jecxz
dec
and
jp
fs
bound
aaa
add
xchg
jno
adc
je
xchg
in
jecxz
or
jno
dec
ficompl
xchg
dec
popf
sub
out
insb
push
les
movsb
lahf
pop
and
or
repz
push
cmp
or
pop
fs
loop
or
les
repnz
add
xor
pop
dec
or
jmp
rcrb
push
xlat
flds
xor
in
pop
jae
stos
cltd
sbb
cmc
ret
sub
push
or
adc
imul
inc
inc
mov
rclb
sbb
pop
mov
aas
mov
fmull
and
call
fnstenv
cmp
insb
fidivrs
pop
or
push
adc
in
int3
dec
ljmp
ja
pop
fcmovbe
dec
fsubr
sahf
movsl
mov
push
xchg
xor
lcall
stc
push
in
dec
or
out
mov
and
aaa
scas
lcall
inc
sub
sbb
out
incl
pushf
mov
sub
adc
fstl
es
test
or
stos
add
sti
test
jbe
out
or
sbb
lods
pushf
adc
or
fcomps
dec
and
pusha
jl
sbb
mov
xchg
gs
sub
shrb
test
jo
ret
dec
sbb
mov
lods
test
jg
stos
xor
pop
push
mov
inc
pushf
test
imul
popa
push
adc
fisttps
hlt
movsl
push
ds
ret
mov
inc
enter
scas
adc
or
mov
shrl
lcall
clc
test
mov
push
cmpsl
xor
inc
ret
adc
out
insb
fsubr
imul
lret
add
adc
or
add
xchg
out
shll
add
or
jp
das
rcrb
out
popl
in
ds
push
movsl
push
inc
pop
xor
pop
mov
ljmp
and
and
iret
fwait
sbb
ss
xchg
orb
sub
std
jns
clc
lcall
push
jle
push
push
add
and
xlat
xchg
js
or
test
test
les
int
jne
scas
cmp
nop
lret
stc
xchg
lret
test
xlat
stc
mov
sahf
or
insb
test
xor
inc
sub
pop
xlat
adc
mov
loopne
add
sbb
int3
sti
and
pop
xchg
in
add
fwait
and
insl
cmp
mov
adc
xlat
shlb
pop
xchg
jbe
rclb
xor
add
repz
add
cli
push
adc
and
xchg
jb
xchg
push
adc
dec
and
pusha
daa
nop
sbb
or
mov
jle
imul
ret
in
iret
stos
into
ja
out
pop
and
dec
and
fldl
das
out
data16
mov
xor
mov
iret
mov
hlt
das
mov
sahf
sti
add
jle
pop
dec
pusha
pop
mov
jl
mov
lock
jno
mov
jmp
inc
lods
pop
and
pusha
sbb
push
mov
lea
std
jmp
mov
int3
jle
or
lock
add
or
aaa
mov
sub
mov
inc
daa
ljmp
mov
and
sar
dec
jmp
sbb
loop
mov
mul
sbb
inc
sbbl
mov
jns
xchg
pop
lret
dec
in
jo
lahf
mov
ret
aas
or
mov
xchg
insb
stos
pop
push
cld
scas
mov
sbb
add
adc
jp
inc
sub
lcall
sub
lods
stc
adc
repz
ljmp
stos
popa
xchg
cmp
adc
jle
adc
sahf
xchg
push
int
pop
jp
paddd
es
mov
in
jnp
jnp
sbb
inc
jns
scas
push
pop
adc
mov
mov
mov
adc
into
pop
push
or
xchg
push
dec
add
mov
lods
imul
dec
ficoml
in
imul
jl
cmpsl
sbb
add
movsl
pushf
mov
mov
inc
mov
call
loope
test
aam
sahf
inc
mov
enter
lret
lret
inc
mov
test
mov
mov
mov
int3
loop
mov
and
rcr
shl
push
jp
pop
ret
fstpl
inc
fsubs
mov
or
aaa
into
pop
xchg
mov
sarl
out
imul
sahf
mov
add
dec
inc
jo
subb
pop
and
mov
bound
dec
and
adc
repnz
push
in
lret
jmp
ret
andb
xlat
ds
dec
adc
loope
jl
stos
sti
repz
adc
imul
mov
pop
cmp
lret
cmp
adc
jl
sbbb
sub
test
rcll
dec
jnp
in
repnz
sbb
mov
rcrb
push
lret
add
mov
mov
jle
lds
push
fisubrl
mov
lret
mov
insb
sahf
add
adc
or
add
add
cmc
rolb
sti
cld
push
dec
in
movsl
iret
enter
pop
fldenv
jl,pt
jnp
sub
push
add
inc
mov
outsl
pop
add
sub
jno
clc
mov
add
out
dec
xor
pop
jo
inc
mov
mov
sahf
sahf
xor
and
shll
adc
xor
mov
je
mov
sub
xchg
stos
pop
mov
repz
std
add
and
mov
mov
data16
mov
jge
mov
rcrb
bound
pop
fstl
arpl
and
and
call
cmp
stos
test
insb
xchg
fldt
test
leave
pop
jno
aam
cmc
cmp
js
pmullw
or
or
add
jl
xor
adc
ljmp
cmp
ret
or
adc
sub
add
mov
xchg
fs
mov
and
sub
or
sarl
popa
mov
fimull
shrb
icebp
in
push
jno
adc
xchg
dec
out
mov
loop
mov
fs
and
leave
sub
push
stos
dec
mov
mov
loope
sub
adc
push
dec
cs
inc
xchg
xor
scas
jg
sub
jmp
cltd
push
push
dec
int
test
add
xchg
or
aas
loope
sub
jb
or
enter
ljmp
sub
enter
mov
xchg
ds
push
testl
out
out
enter
mov
or
xchg
cmpsb
mov
ljmp
into
jle
jle
aad
insl
icebp
inc
daa
iret
jnp
ficoms
jns
lret
xchg
lcall
jno
lods
cld
loop
mov
testb
mov
sti
test
push
jmp
push
icebp
out
int
pusha
adc
dec
sahf
pop
cli
sbb
loop
push
stos
xor
push
stos
adc
and
jecxz
mov
les
clc
cmp
sbbb
or
movsl
sti
mov
scas
cmp
cmp
push
into
sub
or
fildl
mov
add
jle
mov
outsl
or
cmpl
mov
or
push
call
pusha
xor
pop
mov
js
stos
mov
ror
mov
cmp
jmp
into
imul
test
cld
and
ret
and
std
pop
or
adc
aas
dec
call
xlat
call
jp
xchg
outsb
mov
pop
mov
add
jb
je
aaa
sbb
jecxz
adc
bnd
loop
mov
inc
mov
dec
jg
inc
dec
mov
lea
mov
cs
cmp
shrl
add
adc
cld
xor
cld
test
mov
insb
cmp
adc
std
add
sub
cvtpi2ps
sub
fidivs
jo
repnz
mov
popf
mov
popf
inc
call
adc
stos
filds
pop
xchg
icebp
in
xchg
cli
testl
iret
stos
or
repz
mov
pop
jge
adc
push
mov
lret
das
pushf
cmp
pop
sbb
cwtl
mov
mov
mov
mov
popf
jge
idiv
dec
dec
outsb
rolb
pushf
add
cmpsl
sbb
aam
in
pop
jae
scas
int3
movsl
insb
mov
loop
mov
push
adc
adc
loop
in
test
sub
in
pop
pop
or
push
pop
and
inc
sbbb
sub
clc
mov
repnz
or
outsl
mov
inc
lock
sub
or
scas
xchg
ss
pop
daa
push
pop
mov
and
jns
stc
push
lods
push
movsl
scas
mov
imul
mov
insb
in
inc
adc
push
add
pop
add
xchg
arpl
call
enter
fidivs
cmp
jl
mov
orl
jecxz
dec
cmp
sbb
inc
mov
inc
or
addl
jl
or
and
lret
add
popa
inc
mov
test
sbbb
sbb
aam
inc
cmpsl
dec
or
sbb
xor
inc
xchg
repz
add
jle
sbb
sahf
popa
xchg
pop
inc
jp
cmp
jo
pinsrw
adc
test
lret
arpl
fbld
in
push
mov
push
loopne
movsb
sub
mov
or
dec
in
repnz
imul
adc
pusha
int3
leave
data16
xor
dec
sub
adc
sub
les
shrb
ret
and
or
into
mov
pusha
jnp
and
movsb
xchg
inc
sub
out
mov
mov
xchg
ret
sbb
das
adc
sub
mov
xchg
mov
cs
sti
or
negl
aam
arpl
hlt
call
std
js
or
push
enter
push
in
movsb
mov
adc
add
push
mov
daa
aas
ljmp
xchg
sub
jae
inc
mov
xor
jns
in
fistpll
iret
mov
push
aaa
jge
pop
xchg
cmpsl
adc
rcrb
popa
pop
xor
mov
ret
pop
sub
fstl
pop
jg
jb
mov
add
fwait
out
or
adc
sbbb
lcall
lret
mov
sbbl
mov
mov
into
inc
push
ljmp
or
daa
lcall
in
stos
fstpt
and
repz
ds
sbb
aaa
in
mov
add
inc
adc
lock
or
adc
or
fstpt
push
shlb
mov
imull
xor
das
or
sbb
popa
ficomps
push
add
push
subl
setl
dec
or
jmp
cltd
jecxz
lock
xchg
std
mov
shrl
sbb
scas
in
push
sub
out
pop
rcrb
les
scas
int3
les
les
mov
push
pop
sbb
aam
xor
repnz
lret
test
stos
imul
scas
pop
lret
or
sti
es
ljmp
xchg
mov
loop
test
cmc
sub
jnp
cld
sarl
ret
adc
push
jns
mov
xor
jae
std
imul
int3
ljmp
add
cmp
adc
adc
call
test
pushf
add
jns
mov
fcmovb
inc
ja
ret
int
loopne
mov
cld
jmp
addl
pop
dec
inc
inc
int
popa
pushf
pop
pop
iret
inc
mov
test
mov
int
sbb
inc
aad
sbb
jge
int3
and
and
adc
cltd
test
movsl
out
sbb
or
fistpll
int
insb
enter
in
loopne
rorl
out
out
orl
imul
xchg
lret
sbb
add
stc
pushf
jg
mov
jge
jo
add
movsb
les
cld
push
dec
leave
stos
sbb
xorl
mov
cld
iret
mov
cltd
cli
xchg
ret
cmc
sbb
add
sbb
inc
jmp
pop
cmp
dec
jmp
insb
std
dec
stos
mov
int
mov
lock
xchg
pop
jmp
mov
bound
pop
pop
in
daa
push
setg
xchg
and
jecxz
xchg
fistpll
and
add
xchg
lret
sbb
pop
and
xchg
cmp
mov
dec
adc
test
inc
popf
inc
lret
inc
push
in
xchg
push
lcall
mov
sub
sar
cmpsl
stos
mov
inc
test
sub
cmc
hlt
das
int3
and
mov
ret
sub
in
inc
pshufw
jne
mov
sbb
mov
fs
jbe
mov
mov
sub
into
enter
pop
imul
push
or
lret
xor
xor
sbb
popa
adc
push
or
jb
enter
cmp
imul
test
push
add
pop
lret
and
push
es
mov
aaa
mov
sub
popf
pop
push
xor
or
mov
in
cld
clc
pushf
ljmp
add
push
pop
inc
faddl
test
psubq
or
stos
add
int
xchg
out
test
mov
lret
jle
cmpsl
ret
mov
std
mov
sub
add
add
rcll
push
adc
repnz
fwait
push
pop
negl
enter
sbb
cmc
mov
adc
lods
andb
mov
adc
add
adc
aad
adc
test
sub
cltd
mov
and
cltd
adc
push
movsl
in
adc
or
adc
mov
add
imul
cli
movsb
out
jmp
sub
les
or
loop
stos
jnp
sub
movsl
push
std
jge
cwtl
out
int3
js
cmp
in
mov
add
jl
ds
or
shrb
or
inc
pop
or
pop
add
cmp
add
mov
xchg
movsl
sarl
add
mov
aam
mov
sbb
mov
aam
jg
xchg
add
push
fwait
sti
dec
lock
sarb
inc
mov
sbb
sbb
xchg
jb
out
pop
mov
fstpt
push
into
or
xor
data16
jae
fs
or
std
and
mov
mov
sti
and
xchg
xor
fildll
xor
mov
adcl
popa
adc
inc
or
ret
sti
test
repnz
add
imul
pushf
inc
or
pusha
dec
dec
xchg
xchg
xor
scas
add
ljmp
repz
movsl
inc
cmp
cmp
stos
scas
lret
xor
int3
cmp
jmp
mov
inc
add
or
fwait
pusha
lods
lret
or
push
ret
rorb
inc
jp
add
pop
filds
dec
push
addr16
add
mov
pushf
mov
int
xchg
xor
jecxz
or
ret
mov
adcb
lea
lods
xlat
fisubl
add
and
xor
inc
jl
mov
std
cmpl
or
jne
rcll
arpl
xchg
or
pop
sbb
ds
fs
mov
push
enter
int
cmp
or
and
ret
or
xor
int
cmc
nop
addb
out
addl
mov
mov
push
mov
shr
sbb
push
sub
mov
inc
cwtl
add
mov
and
xor
lret
push
jg
cmp
or
pop
inc
fucomip
inc
push
lret
icebp
das
adc
icebp
rsm
add
call
out
cmpl
dec
dec
in
jmp
mov
pop
add
out
dec
jae
imul
and
cmp
std
sbb
mov
jle
cs
add
adc
mov
insl
push
jle
xor
push
xchg
ds
jne
ret
dec
cmp
movsl
aam
fisubrs
das
cmp
pushf
lcall
adc
or
dec
imul
outsl
int
sub
add
sub
aaa
pushf
mov
fmull
adc
add
and
sbb
mov
mov
mov
test
fwait
jo
sbb
sbb
dec
push
jno
test
clc
andl
push
cmp
xchg
out
jmp
test
rolb
mov
sub
notl
data16
and
sub
jnp
mov
mov
scas
js
mov
stos
or
jmp
and
scas
arpl
add
enter
add
add
lret
adc
out
xor
test
mov
fisubl
sahf
push
mov
bound
int
jle
scas
out
movb
clc
sbb
inc
jle
cld
ljmp
test
or
push
stos
add
mov
xchg
fdiv
lods
dec
mov
mov
in
jge
mov
les
pop
jmp
pop
insb
sahf
inc
mov
in
frstor
mov
mov
push
stc
cmc
leave
adc
cli
shrb
repnz
mov
pusha
lret
sub
inc
clc
jns
push
sahf
push
adc
pop
arpl
icebp
jle
adc
jl
inc
push
push
movsb
jo
jle
add
push
arpl
push
mov
movsl
sbb
ljmp
sarb
push
int3
lds
and
sbbb
sbb
mov
lahf
or
test
inc
sbb
jle
jnp
aad
loop
dec
adc
fwait
popf
pushf
pop
fisubrs
sbb
outsl
mov
mov
mov
inc
rol
loop
cmp
xlat
icebp
push
or
and
adc
mov
mov
pop
inc
ret
adc
enter
xchg
mov
sti
mov
lds
xchg
and
mull
xor
addr16
setg
push
push
addb
or
fiadds
mov
cmpsl
push
mov
hlt
outsb
in
or
push
jmp
push
jl
in
inc
sub
inc
into
sbb
or
sti
and
xchg
inc
in
mov
stos
mov
mov
ror
and
fimuls
mov
outsl
mov
lcall
aad
dec
pusha
cltd
add
xor
xor
shl
mov
mov
mov
mov
xchg
and
sbb
movsb
loop
sti
leave
stos
mov
jle
mov
or
data16
nop
jge
jp
popf
sub
fisubs
or
xchg
or
pop
sub
mov
pop
mov
jp
mov
or
pop
gs
mov
mov
xlat
shrl
jle
inc
xchg
enter
and
sahf
mov
pop
mov
sahf
mov
sub
pop
es
out
outsb
mov
jmp
pop
sahf
les
sarb
cmp
loop
inc
fildl
in
sub
jecxz
cmpsb
lds
xor
leave
js
fs
and
nop
fdivrl
aam
mov
pop
daa
dec
or
fisttpl
sub
aas
xorb
mov
add
test
arpl
lea
jle
in
jmp
add
cltd
mulps
gs
ret
jge
xor
mov
mov
jecxz
jge
cmpsb
les
inc
and
cld
mov
or
aas
enter
divl
gs
stos
cld
dec
popf
sahf
pop
lret
or
pop
push
push
frstor
jecxz
xchg
or
cmp
lods
call
mov
mov
push
add
or
pop
call
jle
xor
jecxz
xchg
cmpsl
loope
dec
jmp
xchg
inc
arpl
inc
lcall
lret
lcall
mov
lods
scas
xchg
fcomps
pop
jg
scas
push
or
or
pop
cmpsb
xor
pop
rcl
mov
mov
jnp
into
and
sub
popf
pop
inc
adcl
mov
fdivl
xor
addr16
dec
add
and
mov
or
jl
les
mov
dec
cltd
inc
add
pop
cmpl
lret
sub
lea
sbb
insb
shrl
fistps
cmp
and
or
xchg
stos
pushf
repz
leave
stos
test
dec
mov
sbb
or
fbstp
and
fists
or
push
cld
movsb
loop
out
loop
xchg
cmpsb
jecxz
xchg
add
push
xchg
and
jne
add
aaa
inc
jnp
mov
ret
cmp
xchg
dec
fldcw
icebp
std
push
pop
loopne
sbb
inc
out
and
pop
loope
int
in
arpl
lcall
in
and
aam
mov
outsb
in
leave
and
lahf
xchg
test
sbb
inc
push
sbb
js
jae
and
outsb
add
xorb
push
sbb
outsl
in
xor
test
cmpsb
sub
cmpsl
sahf
js
inc
ret
adcb
hlt
ret
jg
inc
jmp
dec
inc
loope
stc
cmp
ja
sti
push
xchg
ss
pop
add
dec
xorl
push
bound
mov
out
sbbl
pop
and
pop
std
cmp
cli
out
jmp
or
shlb
fmuls
in
pop
cs
leave
les
lods
sbb
push
sbb
and
xchg
rol
subb
stos
cmp
adc
iret
fsubs
xor
cs
pop
pop
add
ljmp
stos
mov
jle
loope
jmp
sbb
add
add
mov
cld
or
or
inc
int
int
sbb
adc
popa
push
repz
jle
dec
cmc
sub
add
mov
ret
or
mov
jl
mov
adc
jecxz
pop
lcall
ss
cwtl
pusha
out
xchg
mov
sbb
clc
sub
pop
mov
add
clc
stc
and
loope
scas
rcrl
ds
arpl
hlt
addr16
enter
lret
stos
mov
enter
sub
leave
mov
inc
ret
das
aad
add
pop
out
sbb
mov
lcall
cli
dec
sbb
and
push
mov
loope
stos
ret
push
adc
out
aaa
dec
pusha
pushf
int3
xor
je
adc
adc
pop
ljmp
test
scas
xor
dec
jae
stos
movsl
loope
adc
test
fsubrs
xchg
jno
mov
fdivrl
in
sahf
enter
add
or
cmp
pushf
fnstenv
jnp
mov
adc
pop
fxam
pop
out
aam
xchg
scas
and
and
stos
sbb
sahf
xchg
cmp
ljmp
loop
pushf
int3
ret
sub
sub
or
loope
mov
and
cmpsb
ret
or
sub
inc
add
mov
stos
mov
inc
push
sti
out
and
xor
aas
ljmp
fisubl
xchg
movsb
addb
leave
pushf
xchg
sbb
scas
subb
in
xchg
sub
fimull
add
idiv
in
sub
sahf
int
pop
call
in
jae
decl
cmp
mov
xchg
sub
clc
mov
lods
loop
dec
fildl
adc
aas
lds
daa
out
adc
push
test
jmp
add
loop
pop
xchg
lcallw
pushf
or
jg
sub
pop
clc
test
add
repnz
leave
movsb
xchg
mov
repnz
adc
mov
or
sahf
jmp
dec
mov
movsl
sarb
fisubrl
pushl
pushf
sub
and
cli
mov
and
sbb
sbb
push
sub
or
int
dec
je
inc
loopne
lcall
or
jmp
daa
dec
adc
add
sub
in
jo
mov
xchg
orl
shr
xchg
insb
addr16
pop
push
out
outsl
cmp
push
les
mov
lcall
loop
fwait
mov
xchg
andb
dec
aam
adc
dec
orb
add
mov
mov
push
jae
orb
cwtl
gs
sbb
cmp
aas
jae
push
popl
or
icebp
add
lahf
insl
sar
dec
mov
mov
mov
mov
lea
dec
inc
test
test
call
jl
and
in
jcxz
mov
daa
cmp
inc
scas
stos
or
divl
cmc
inc
adc
or
subb
popa
lret
fsubr
cmp
iret
add
ftst
scas
daa
mov
and
mov
notl
pop
jo
insb
push
cmpsb
repz
pop
je
xlat
adc
xchg
cmpsb
lcall
je
mov
sub
or
jge
loop
inc
xchg
aas
and
icebp
sbb
repnz
push
lea
inc
movsl
or
test
xchg
out
into
movsb
cmpsl
mov
xchg
cmpsb
sub
or
inc
subl
lds
mov
cmpsb
outsl
xchg
dec
cmpsl
bound
popa
push
push
or
xchg
xchg
loopne
jmp
adc
mov
fcmovnbe
mov
aas
adcl
mov
jbe
adc
out
or
test
or
in
xor
lret
xchg
add
xchg
pop
pop
adc
jmp
jmp
out
push
stos
pop
out
sub
rcrb
push
dec
movsb
aas
call
mov
mov
out
lea
ljmp
int
inc
subb
pop
xchg
lret
jg
inc
sbb
call
call
add
cmpsb
loop
adc
cmpb
dec
xchg
imul
cmp
daa
or
jmp
lret
push
adc
cmp
pop
pop
jb
mov
in
stos
in
std
in
ret
and
adc
iret
shrl
lods
int3
xor
mov
mov
pop
add
mov
pop
call
test
adc
stos
xchg
stos
repz
jp
out
gs
lret
scas
insb
ljmp
fiadds
imul
rclb
jl
and
jg
fidivrl
fs
dec
out
cmp
push
test
imul
add
or
pop
and
mov
pop
jmp
cmp
mov
pop
sti
or
xlat
ljmp
mov
xor
or
out
cwtl
or
jl
stos
xor
or
mov
add
stos
adc
je
je
or
mov
call
jle
pusha
cmp
mov
mov
lret
cmp
ds
pusha
add
mov
add
sbb
js
in
into
xchg
stos
mov
pop
repnz
adc
mov
add
push
sub
pop
inc
add
cmp
test
stos
mov
incl
cmp
push
mov
iret
or
in
pushf
adc
mov
shlb
les
mov
cmp
jmp
repz
les
push
pop
add
insl
test
mov
repnz
lret
scas
jns
push
or
or
cmp
push
and
jbe
sub
adc
es
int3
xchg
loop
xchg
incl
cmp
dec
push
not
or
pusha
ss
cmp
dec
or
cli
adc
int3
call
hlt
and
xorl
pushl
push
sub
push
loopne
sti
ret
idivl
movsl
lcall
pop
jmp
addl
inc
adc
and
into
jb
mov
xlat
or
push
mov
and
dec
test
fisubrl
aam
popa
sbb
test
in
pop
into
lahf
sub
xchg
into
inc
test
movsb
int3
mov
into
aad
lods
leave
push
jle
test
sti
subl
jl
add
fdivrs
insb
add
scas
imul
ret
mov
xchg
sbb
popf
leave
loop
or
das
lds
and
push
sahf
jmp
das
pushf
xchg
xchg
add
mov
inc
jg
movsb
mov
cli
cmpsl
jle
mov
jmp
or
cmp
sbb
inc
dec
pop
inc
inc
add
movsb
push
jnp
int3
inc
sbb
push
and
jmp
enter
mull
rorl
pop
lods
inc
sub
or
lods
mov
mov
das
sti
mov
and
inc
lods
mov
repz
sub
sbb
mov
xchg
cmp
xchg
cmp
mov
or
add
pop
mov
xchg
or
rclb
xor
js
sbb
or
xlat
mov
or
xlat
mov
dec
cld
sbb
add
adc
xchg
adc
in
adc
test
nop
setge
cmp
mov
xchg
inc
movsb
adc
andb
dec
cwtl
aad
pop
adc
popf
cmp
jmp
sbb
cwtl
sub
push
outsl
jl
xor
mov
xor
fwait
insb
mov
or
xchg
test
lret
add
lock
cmpsb
jecxz
jp
pop
pushf
mov
enter
jns
add
inc
punpcklbw
stos
inc
frstor
or
mov
rorl
aad
leave
cmp
mov
outsl
add
and
or
scas
gs
sub
push
int
jg
fiadds
xor
mov
rcr
lock
inc
js
adc
clc
jbe
add
jb
daa
test
mov
dec
ljmp
stos
mov
mov
stc
push
cli
mov
inc
fcoms
loopne
sbb
push
int3
and
or
inc
mov
sbb
inc
sbb
jp
dec
mov
mov
pop
mov
or
cli
sbb
sub
adc
push
jmp
pusha
push
or
fistpl
jecxz
mov
or
rcrl
sahf
fadds
dec
jbe
add
cld
push
inc
stos
pusha
subb
scas
xor
bound
js
ja
push
cmp
jecxz
jp
mov
cmp
push
mov
jbe
movups
stos
jae
or
add
test
push
mov
push
xchg
rolb
test
inc
sti
dec
cmp
fsubrs
or
mov
into
repnz
or
test
or
pushf
or
xor
sbb
int
pop
aam
stos
xchg
sbb
mov
add
dec
mov
loopne
sbb
call
pop
jge
jne
lret
adc
les
jne
xchg
not
mov
jo
jo
jg
mov
das
test
mov
and
mov
lods
dec
push
jmp
xchg
dec
xor
in
mov
imul
lea
and
sbb
sbb
jae
repnz
inc
in
push
cwtl
dec
dec
cmpsb
repz
push
neg
lret
jns
cmp
push
lods
mov
and
insl
sbb
mov
xlat
fcmove
xorb
mov
cmpsl
mov
outsb
sub
ja
sti
mov
out
pop
movl
test
sub
mov
jecxz
add
std
cmpb
mov
inc
cmpsb
sub
mov
aam
xor
fadds
lret
jnp
sbb
jge
dec
xchg
or
and
dec
sti
jge
lea
fs
or
nop
add
addb
fwait
aas
xchg
in
pusha
adc
add
push
or
mov
mov
adc
nop
add
or
filds
or
jb
lcall
mov
insb
movsl
xor
sub
mov
gs
inc
xchg
jle
mov
adc
lcall
pop
sub
loopne
mov
jmp
nop
inc
lods
call
int3
call
push
mov
mov
fs
inc
or
add
nop
and
add
loop
sti
push
stos
adc
rcll
fwait
leave
mov
movsl
pop
jle
ret
arpl
aad
sub
call
icebp
into
mov
adc
inc
ret
test
add
jae
movsb
sub
xor
repz
cmp
cmp
pop
or
clc
add
and
and
leave
xchg
leave
push
pop
sub
xchg
adc
mov
adc
inc
imul
adcl
or
mov
xchg
mov
test
repnz
shl
pushf
or
lahf
adc
and
xor
adc
je
mov
into
mov
cmp
jne
mov
pop
inc
xchg
hlt
les
sbb
out
mov
inc
xchg
or
in
inc
test
jnp
mov
mov
pop
push
inc
lods
or
pop
dec
add
pop
pop
jmp
loope
pop
cmp
jno
subb
or
jmp
mov
cld
or
lahf
lcall
add
sbb
std
adc
push
stc
repnz
mov
push
cmp
fwait
xchg
jmp
jmp
jecxz
aaa
popa
shrb
inc
lcall
dec
ds
push
adc
and
jnp
push
adc
dec
lods
jmp
add
and
xchg
mov
mov
mov
notl
aam
xchg
adc
xor
jmp
mov
subl
inc
cmpsl
mov
in
xor
out
insb
out
lcall
push
pop
mov
stos
sbbl
out
sub
mov
or
filds
mov
sub
cltd
pop
pop
mov
sub
pop
jle
jbe
add
pop
jbe
das
pop
mov
cmc
fdiv
xchg
jge
pop
push
adc
icebp
mov
cs
rorb
insb
movsl
adc
jae
dec
stos
jge
fs
fists
dec
add
xor
fucomi
pushf
add
sbb
jo
or
mov
push
xchg
push
push
sub
data16
push
popf
sub
push
mov
mov
and
cs
cmpsl
dec
es
and
adc
add
stos
jle
mov
dec
stc
mov
int3
pop
sub
leave
sbb
push
push
sti
xchg
or
or
dec
mov
fiaddl
popa
rcl
test
lods
call
cmp
fmuls
jbe
leave
dec
xor
pop
xchg
mov
mov
xor
and
aaa
xchg
out
pop
sbb
push
xlat
pop
je
dec
ds
lahf
inc
pop
enter
adc
mov
popf
lcall
cmpsl
stos
adc
pushf
mov
xchg
adcb
mov
repz
cs
je
arpl
cli
testl
cwtl
sub
xor
movsl
cld
loope
push
jb
dec
push
push
imul
out
lods
shl
or
adc
pop
cs
jecxz
mov
imul
repz
repnz
lret
aad
in
jno
lods
lahf
add
sub
and
and
iret
xor
mov
push
subl
adc
mov
lds
imul
jno
dec
or
jo
scas
sbb
fildl
test
movsl
pop
je
shlb
mov
out
xchg
push
jg
rolb
xor
mov
jecxz
out
sbb
es
inc
mov
addl
lock
subb
pcmpeqb
jne
lods
iret
insb
cs
mov
ret
sahf
and
ret
fcomip
push
mov
or
xchg
hlt
int
int3
sbb
mov
insb
mov
stc
out
mov
cmp
adc
dec
cmpsb
add
cs
or
stos
ret
mov
enter
sub
in
lcall
cmp
dec
fldt
rep
mov
or
dec
cmp
lret
cld
jle
dec
sti
lret
push
shrb
repnz
jl
mov
loopne
aaa
lcall
or
test
sub
jnp
cli
fstps
cmp
push
xor
dec
scas
xor
cld
and
and
adc
ret
mov
aaa
loope
jecxz
jecxz
fs
test
jb
ret
xchg
add
nop
lods
cmp
sbb
pop
dec
cmp
daa
cmc
decl
ficomps
mov
mov
pusha
fs
mov
fcmovnb
dec
sti
inc
xlat
lcall
lret
leave
into
test
lcall
mov
cli
or
clc
sbb
cmp
insb
fs
cmp
pop
adc
sub
cmp
loopne
sub
ret
push
dec
xchg
addr16
mov
gs
inc
arpl
in
xchg
inc
and
ret
mov
and
push
mov
or
aaa
cmp
sbb
into
enter
lret
nop
jecxz
mov
adc
jle
imul
jbe
sbb
pop
or
cmpsl
out
lods
push
movsl
fnstenv
rcl
xchg
mov
mov
sbb
mov
inc
mov
mov
xchg
mov
cmc
sbb
and
jge
mov
or
mov
or
or
test
add
orb
lcall
xor
sbb
mov
sbb
insl
mov
pcmpeqb
inc
das
inc
add
es
adc
mov
fildl
mov
sti
or
loope
pushf
mov
pop
test
test
sub
push
and
sub
or
push
adc
fisttpll
ss
stos
add
je
or
arpl
mov
and
lret
test
or
loop
aam
test
xlat
sbb
je
add
cmp
mov
or
xor
sbb
or
iret
stos
jmp
mov
cmpsb
cmp
hlt
or
outsl
jecxz
jecxz
xor
cmp
lock
push
mov
fstps
call
sbb
cmp
lock
sub
pop
fisttpll
adc
jmp
mov
add
push
gs
fs
or
push
out
mov
xchg
inc
imul
xchg
jo
jmp
ljmp
out
inc
dec
mov
adc
and
ss
mov
adc
and
xorl
push
lahf
xor
scas
push
xor
ljmp
xor
sti
push
andb
mov
adc
push
mov
and
decl
lock
push
popf
mov
push
cmp
mov
mov
lret
aaa
ds
fdivrl
popl
testl
mov
push
jae
push
mov
pop
movsb
int
jbe
into
adc
xchg
add
push
jne
lock
jle
stos
jns
enter
dec
repz
int
decb
cmp
sub
xchg
pop
cmp
cmp
inc
mov
mov
add
inc
test
add
or
mov
in
mov
mov
sbb
lods
cmp
mov
mov
sbb
and
nop
ret
in
scas
and
xchg
and
or
in
jne
xlat
outsb
mov
call
xlat
iret
or
xchg
lret
int
push
mov
pop
aam
sbb
cmpsb
mov
sbb
mov
adc
or
and
faddl
dec
sbb
adc
push
mov
testb
test
lods
rcl
xchg
frstor
sti
pop
stos
mov
dec
leave
lods
push
lods
jb
jp
cmp
ret
cmpsl
bnd
lcall
add
mov
outsl
or
inc
push
in
inc
je
dec
pop
inc
add
call
mov
and
pop
test
movl
roll
ret
xchg
movsl
push
xlat
pop
inc
call
insl
mov
sub
call
test
sbb
add
sub
addr16
jmp
push
or
sbb
cltd
aad
adc
lret
push
icebp
push
inc
test
sub
fmul
fcoml
lahf
xchg
stc
stc
or
xchg
adc
mov
arpl
xchg
movsb
or
jmp
movsl
insl
jno
mov
ljmp
xchg
mov
outsl
cmc
ss
clc
inc
ss
test
adc
shrd
jnp
sbb
cmp
mov
adc
cs
fsubrl
adc
cmp
decb
add
mov
and
cmp
lds
in
outsl
inc
push
imul
mov
sbb
jp,pn
adc
xchg
sti
inc
xor
mov
add
push
jmp
adc
arpl
test
or
mov
add
pop
jnp
mov
les
adc
or
jmp
rcrl
add
or
pop
lahf
daa
int
out
stc
jge
aad
mov
or
dec
loop
sbb
ret
ljmp
gs
cmpl
and
cld
jle
add
push
mov
pop
jns
out
mov
mov
cmovb
xchg
jp
scas
jb
scas
or
push
mov
or
cwtl
loop
ljmp
shll
mov
mov
fcmovnu
js
js
fwait
or
les
adc
ljmp
ljmp
xchg
xchg
jbe
js
test
pop
pop
push
test
lea
ljmp
add
or
fwait
out
ja
repnz
xchg
pop
fcomi
loope
call
loop
inc
lcall
imul
adc
outsl
cmc
mov
fsubrs
inc
push
xor
mov
sub
or
lahf
mov
fbstp
inc
push
btc
and
pusha
push
lret
pop
cwtl
pop
popf
sub
fidivl
mov
test
ss
addr16
mov
mov
xor
aam
in
fistpll
popf
jp
adc
jns
mov
inc
leave
sub
pop
scas
mov
rolb
jno
push
jns
sub
shll
test
dec
sbb
push
imulb
jl
imul
das
iret
or
ret
mov
cmpsb
mov
inc
addr16
addl
fcmovu
mov
push
dec
sub
push
sub
sbb
inc
repz
out
push
or
mov
mov
fisubrl
xchg
in
and
hlt
sub
ss
mov
lods
mov
or
int
ret
push
out
sub
cmpsl
mov
outsl
or
mov
push
mov
dec
push
pop
mov
call
loop
lods
push
jge
lods
movsl
dec
push
mov
aaa
or
test
add
adc
mov
in
cmp
test
push
or
shl
pop
insl
pop
cs
fimull
repnz
xchg
xor
jmp
or
mov
adc
jnp
lods
dec
jle
and
lret
sbb
je
mov
out
sub
push
cmp
or
cmpsb
data16
add
sub
mov
lds
sub
or
adc
out
fs
popf
test
enter
stos
adc
push
test
cwtl
insl
rorl
jmp
cmp
cmp
enter
or
cmp
aaa
loop
insb
push
lods
adc
sbb
push
negl
sub
push
scas
cli
jnp
fsubs
sbb
sub
add
ret
movsb
rorl
adc
stc
or
in
dec
popf
adc
mov
sbb
sbb
loopne
and
outsl
mov
xchg
cli
mov
iret
or
ret
add
cmp
inc
sbb
add
stos
dec
int
mov
imul
dec
pop
scas
push
pop
and
or
sbb
inc
in
lahf
ljmp
adc
je
dec
rcrb
mov
jle
pushf
mov
fsubrl
mov
out
dec
pop
fildl
xor
imul
pop
xchg
cmc
jmp
mov
push
adc
push
cwtl
in
rcr
cli
mov
pop
xchg
mov
lods
in
sub
cmp
adc
mov
loope
push
repz
sbb
repnz
pop
test
call
jnp
push
xchg
sbb
scas
xchg
stc
clc
or
dec
jnp
mov
inc
jns
jb
mov
stos
ficoml
mov
cmpl
xchg
cmpsb
mov
stos
test
ljmp
outsl
mov
int
mov
add
in
jge
mov
jnp
sbb
mov
adc
cltd
mov
inc
loope
cmove
adc
adc
dec
sub
popf
stos
push
jne
arpl
mov
pusha
fsubs
jle
cmp
iret
sub
sahf
fsts
or
jnp
in
cmp
mov
into
and
shr
dec
jne
and
int3
mov
and
out
and
push
out
sysenter
icebp
andb
sahf
or
lret
xchg
jae
dec
dec
out
andb
lahf
outsb
pushf
in
in
inc
sub
movsl
shrb
push
inc
lea
mov
idivb
lock
jo
jl
or
dec
mov
fdiv
inc
jle
vmovdqu
adc
popa
cmpsl
or
fimull
lahf
add
iret
or
mov
and
xchg
je
pop
dec
jne
adc
mov
enter
pop
or
sbb
mov
cwtl
pop
inc
mov
and
adc
pop
or
addr16
push
fidivrs
push
lret
sbb
and
scas
mov
push
ds
sub
lods
push
movsl
adc
jo
popf
push
fidivl
jbe
ja
fidivrl
hlt
lock
or
push
movb
ja
in
std
mov
ja
sub
outsb
imul
jle
out
sub
and
dec
cmp
or
cs
hlt
insb
pushf
leave
lods
mov
add
pop
sub
dec
push
mov
adc
dec
dec
repz
add
adc
sub
loope
jecxz
mov
mov
cmp
repnz
imul
movsb
pusha
ja
rorb
sub
jno
je
dec
fldlg2
dec
xor
sbb
xchg
stc
out
mov
jl
lret
movsl
xor
mov
ja
imul
inc
mov
lret
dec
int
dec
and
xlat
cmc
dec
ss
mov
adc
sbb
cmpsl
test
add
lock
in
hlt
test
mov
mov
movsb
int3
icebp
and
pop
cmpsb
jmp
cmpsl
rorl
fdivrs
setg
add
call
inc
fisubl
inc
call
mov
inc
mov
mov
cmp
push
lods
jle
adc
adc
push
insl
or
out
mov
sahf
lods
lret
jb
cmpsb
ss
lds
cmc
outsl
je
cmp
pop
xchg
les
inc
xchg
in
outsl
movsl
xor
pop
out
outsl
mov
stos
sbb
dec
jb
subl
inc
shll
call
and
icebp
into
or
cmpsl
outsl
jl
or
dec
jge
push
adc
aas
rorb
push
pop
sub
je
jbe
push
outsb
cli
int
aaa
inc
push
xor
mov
fsts
idivl
call
mov
aam
pop
cmp
lahf
mov
mov
inc
cwtl
loop
lods
and
bound
push
mov
cld
loope
loop
scas
dec
leave
dec
xchg
ret
repz
pop
dec
sub
or
pop
fstl
adc
xchg
mov
imul
add
icebp
xorb
jge
decl
sub
jle
add
jmp
push
ret
int3
shrl
loop
je
xlat
and
xchg
pop
mov
stc
mov
es
out
in
mov
xor
cs
scas
push
jge
stos
dec
inc
jle
dec
daa
inc
add
insb
sbb
cmove
test
mov
in
mov
jbe
pop
lods
stos
stos
sti
pop
push
push
sbbl
faddl
dec
dec
stc
clc
jno
mov
jle
mov
pusha
mov
aam
icebp
sub
hlt
jle
pop
lret
mov
lock
cmpsb
sub
add
push
scas
push
add
sub
inc
or
int3
jae
sti
enter
pushf
cltd
inc
lret
sub
out
lcall
jmp
inc
lret
cmpsl
lods
jno
jp
insb
push
push
addb
ja
jg
cmp
aad
iret
sub
pop
das
xchg
dec
rcl
xlat
inc
push
hlt
insb
fmul
push
inc
cmp
push
mov
or
adc
pop
xchg
jecxz
mov
fdivrl
bound
js
call
fnstcw
dec
sub
ljmp
xchg
dec
fs
jle
shlb
sbb
repz
lods
idivl
sbb
mov
cmp
imul
decb
xor
into
pusha
sub
cs
cwtl
xor
xor
add
push
cmp
push
xchg
sub
cmpsl
xor
or
cmp
jmp
stos
or
mov
loope
test
inc
xchg
lods
adc
leave
fists
stc
inc
cs
push
cmpsl
mov
pop
xor
sub
pop
dec
sahf
in
jecxz
pop
mov
or
int3
cld
out
xor
lret
cli
pop
mov
clc
nop
mov
dec
lea
xor
int3
icebp
fists
dec
outsb
adc
lret
mov
add
sbb
aam
cli
gs
and
jno
xchg
imul
mov
push
push
fdivl
xor
push
sub
jmp
hlt
mov
mov
cmpsb
or
data16
adc
add
jno
mov
push
sbb
adc
mov
mov
dec
xchg
pop
outsl
loope
pop
sbb
cmp
mov
adc
xor
stc
loope
xor
fucomi
in
pushf
mov
sti
loop
pop
sub
mov
push
jmp
push
xchg
pop
cmp
hlt
int
and
xchg
or
jo
setle
mov
or
sub
jl
insb
aam
fldcw
fcoml
call
cli
loope
stc
mov
mul
sub
into
mov
cmovl
in
sti
in
enter
repnz
mov
cmpsb
rolb
mov
mov
in
push
sahf
mov
xor
mov
mov
cwtl
clc
dec
mov
push
pop
cwtl
outsl
xchg
aas
mov
jo
and
in
inc
inc
in
xchg
hlt
push
insb
add
xchg
pop
loopne
sbb
mov
stos
cmpsl
or
sbb
aas
mov
pusha
jle
sub
or
enter
xchg
dec
sub
mov
inc
xchg
xchg
pop
or
lock
xor
movsl
push
or
movsl
adc
sbbl
and
fistpl
cld
pop
sbb
lret
movsb
test
mov
or
dec
inc
mov
xchg
pushf
xchg
push
adc
add
rol
xor
aad
loopne
mov
lock
push
popa
out
enter
xor
clc
sbb
loope
in
xchg
aam
push
fucomp
scas
out
repz
xlat
rcll
sub
xorl
xchg
ret
pop
jns
movsb
inc
sahf
in
dec
or
repz
jge
pushf
xchg
mov
or
inc
dec
jmp
dec
adc
nop
sbb
ljmp
repz
xchg
aaa
mov
pushf
pop
dec
addb
xchg
in
nop
pop
nop
clc
cltd
aas
mov
test
les
psllq
shl
dec
and
into
cmp
sub
loope
sub
loope
sub
loope
imul
iret
push
jo
pushf
adc
aaa
outsl
out
gs
cmpsb
inc
inc
flds
lret
sbb
insb
gs
mov
or
insb
and
addr16
mov
mov
sub
aaa
lret
push
sti
mov
cwtl
cmp
xor
or
push
or
sti
xchg
xchg
mov
test
stc
adc
loope
stos
test
out
add
dec
or
or
or
cmp
int3
inc
popa
aam
cwtl
cli
mov
mov
ret
xchg
mov
dec
into
jmp
repz
lock
push
mov
push
mov
lcall
sub
or
sahf
pusha
lds
adc
mov
xor
loope
lea
pop
jne
out
out
dec
and
ret
mov
mov
adc
test
lea
enter
jns
outsl
out
aas
jnp
lret
and
add
add
test
adcl
scas
sahf
insb
pop
cld
xor
js
dec
inc
ret
inc
adc
jo
sahf
cmc
fstp
mov
mov
into
dec
or
cli
or
cs
rep
cmp
or
call
arpl
mov
stos
dec
jmp
dec
mov
xchg
hlt
shll
data16
xchg
sbb
int3
idivl
sahf
cwtl
and
insl
pusha
inc
leave
sti
or
in
sti
pop
lcall
and
test
in
inc
rolb
sub
mov
mov
arpl
fisttpll
add
jnp
lea
inc
out
in
mov
out
adc
inc
xchg
sbb
ret
mov
dec
xchg
sbb
mov
inc
pop
imul
enter
mov
fisttps
leave
arpl
popa
fisubrl
or
xor
aam
push
cmp
in
mov
xor
cwtl
mov
ljmp
mov
xor
dec
ss
pop
fisubrl
add
popf
add
adc
aad
push
in
or
stos
subl
ja
sti
ja
sbb
imul
ss
or
add
lret
or
add
es
adc
pop
inc
test
sub
dec
or
add
pop
fldenv
popa
sahf
and
sbb
add
add
mov
les
and
add
lret
inc
cwtl
idiv
int3
scas
pop
sti
imul
movsb
add
xchg
adc
mov
call
imull
scas
inc
dec
push
cltd
sti
jle
ret
out
add
pop
test
dec
and
push
adc
sub
jge
js
or
jo
test
cld
xchg
js
fnstenv
fisttpl
rorl
ret
stos
scas
ret
dec
pushf
xchg
lods
xchg
pop
and
gs
pop
insb
aaa
jbe
mov
sub
leave
xchg
add
dec
pop
scas
imul
inc
mov
inc
imul
adc
jae
imul
rcrl
fs
lock
mov
sub
push
sahf
sarl
inc
adc
push
add
pop
movsb
and
mov
inc
adc
cmp
shrl
dec
dec
jnp
mov
int3
aas
add
cmovno
or
mov
add
jl
dec
pop
leave
lcall
cli
sub
shlb
jmp
sub
das
mov
push
out
and
xchg
add
inc
fimull
fimull
mov
stos
or
lcall
or
fldt
push
or
xchg
ror
rcl
mov
push
add
mov
movsl
fs
push
test
repnz
lahf
sub
in
addr16
or
loop
dec
jns
inc
sbb
sub
popf
sti
sbb
and
outsl
mov
dec
inc
add
icebp
sub
fsubrp
pop
xacquire
jge
call
and
adc
and
fiaddl
inc
pop
push
adc
mov
or
repz
adc
push
xor
push
testl
and
xchg
imul
and
add
insb
mov
testl
cmpsb
fcmovu
and
lock
inc
xchg
xchg
aam
std
movhps
or
clc
dec
mov
test
mov
adc
sub
mov
push
or
mull
mov
stos
scas
ljmp
in
push
hlt
jo
call
sub
push
jl
cs
in
mov
pop
mov
mov
push
pop
mov
rorb
or
pop
in
mov
cmp
mov
bnd
add
xchg
fisubl
into
dec
pop
ret
jns
push
add
pop
dec
sets
dec
sbb
xor
bnd
or
hlt
mov
sti
push
push
dec
test
or
test
add
sbb
xor
addl
or
dec
pushf
xor
dec
or
mov
nop
test
pusha
and
xchg
mov
jnp
adc
mov
adc
push
sbb
pop
jns
adc
sahf
fs
stos
sub
iret
iret
mov
test
pop
inc
push
jnp
bound
aaa
cmp
inc
lods
cmpsl
jmp
sbb
fcmovnu
xchg
add
xchg
adc
lret
dec
inc
into
inc
jbe
or
es
or
decb
mov
mov
pop
mov
cmp
or
stos
mov
sahf
cmp
cmpl
pop
stos
mov
cmpsl
or
adc
insl
ljmp
adc
cwtl
jns
scas
or
jg
add
jns
hlt
inc
jmp
sahf
test
jecxz
add
adc
mov
pop
insl
shr
sahf
imul
jle
stc
mov
inc
mov
xor
sbb
jecxz
mov
mov
mov
lahf
mov
lock
mov
push
push
hlt
jae
mov
pop
sbb
xchg
jg
push
jmp
dec
push
push
or
pushf
daa
mov
cmpsb
xchg
mov
int3
call
lret
adc
pop
arpl
jle
jmp
push
jp
lret
or
lahf
cmpsb
movsb
adc
or
adc
jge
test
inc
jne
sbb
out
inc
mov
cmpsb
je
mov
in
jp
adc
xlat
push
mov
sbb
nop
add
insl
sbb
ret
in
lret
jmp
mov
dec
pop
mov
and
or
sti
cld
mov
or
test
call
xchg
or
test
inc
and
out
inc
out
inc
mov
leave
sub
dec
xor
jmp
inc
test
mov
data16
xchg
add
dec
cmpsb
loop
mull
data16
add
leave
or
pop
loop
cwtl
arpl
in
stos
clc
inc
int3
inc
out
mov
pop
or
push
arpl
jno
jnp
push
sub
dec
arpl
jbe
xchg
adc
fdivrs
mov
cltd
out
popf
ss
mov
out
out
out
mov
push
ljmp
mov
add
or
cltd
mov
mov
and
cltd
hlt
lret
nop
shl
leave
lea
or
jle
adc
gs
dec
repz
jle
jbe
mov
test
adc
out
push
loop
mov
int
push
sar
mov
bound
lcall
pop
aam
scas
pusha
data16
sbb
xchg
loope
fcoml
clc
mov
hlt
mov
mov
and
sbb
dec
dec
xchg
sub
push
xchg
stos
push
xchg
ljmp
xchg
mov
adc
pop
int3
push
jge
movsb
adc
mov
hlt
xchg
adc
outsl
in
mov
faddl
xchg
hlt
addr16
js
mov
fists
pop
and
popa
rcll
add
cli
loope
jmp
add
jno
mov
leave
add
jge
sti
orb
cld
or
dec
lahf
clc
mov
insl
enter
xor
push
js
mov
xchg
inc
sarl
std
inc
shlb
shll
mov
mov
test
les
push
int3
adc
loop
xchg
xchg
in
fadds
mov
jno
pushf
jge
xchg
mov
or
cmp
add
or
ja
imul
add
pop
aas
dec
movsl
rorb
loopne
int3
or
in
scas
mov
jmp
add
jle
loop
call
stos
into
sbb
mov
push
mov
mov
outsl
movsl
dec
lea
pop
push
sub
xor
jo
stos
mov
ret
push
sbb
jbe
jl
mov
ds
and
cmp
push
bound
dec
fsubrs
test
mov
scas
mov
scas
xchg
push
add
pusha
push
jns
neg
sbb
inc
jmp
or
push
shrl
pop
or
pop
mov
push
inc
imul
ret
ss
jmp
hlt
mov
jle
fisttpl
mov
jo
imul
and
pushf
jne
lock
movsb
in
repz
cltd
inc
enter
cmp
mov
scas
insb
sbb
mov
mov
lcall
ljmp
rcrb
movsl
loop
jno
xchg
dec
shlb
jge
cwtl
sbb
cmpsb
xor
xlat
jb
jmp
pushf
push
lds
lret
xor
sti
pop
aam
test
das
cmp
shr
inc
lret
and
jecxz
hlt
push
sub
sbb
ud1
orb
pop
push
ret
shl
mov
fs
gs
aad
pop
mov
outsb
nop
fimull
adc
cmpl
pop
subl
ss
adc
mov
pop
insb
mov
adc
mov
or
sahf
or
or
out
sub
xchg
fimuls
adc
sbb
inc
pushf
ja
sbb
movsb
lea
mov
push
andb
in
push
dec
in
shll
leave
mov
add
test
and
or
sbb
enter
iret
pop
shll
lret
or
aaa
lea
jmp
mov
pop
ljmp
sub
or
das
pop
or
xchg
je
fsubr
fnstcw
xchg
adc
push
mov
push
cli
inc
xchg
pop
cwtl
lcall
fmull
jmp
movb
jmp
pop
dec
or
or
dec
jge
mov
in
add
or
add
test
jp
vpmadcsswd
lds
stc
popa
adc
mov
lret
popa
inc
xchg
test
and
adc
mov
loope
mov
inc
setl
sub
add
add
cmp
and
stc
jmp
sti
pop
cmc
or
mov
sbb
loope
stos
adc
sahf
jmp
fldenv
mov
mov
sub
lret
lea
fcoms
inc
add
push
popf
lret
xor
push
xchg
mov
lods
pop
dec
mov
mov
jle
fcmovu
repz
push
fadds
in
out
in
stos
mov
add
xor
cmc
and
cmovs
add
pop
int
les
mov
jecxz
setno
dec
je
sti
pop
xchg
loope
ret
mov
sti
rorb
int3
jbe
movsb
jmp
dec
sahf
movsb
lret
imul
cld
push
mov
ss
jl
xchg
push
xchg
test
push
xor
iret
addr16
mov
insb
pop
repnz
sub
add
or
les
add
es
lods
and
ffree
or
dec
lret
ds
jle
mov
mov
pop
in
insb
arpl
out
lods
add
pop
pushf
mov
inc
fstpt
adc
and
call
arpl
push
mov
mov
push
adc
adc
xchg
dec
add
insl
or
xchg
cmp
int
xor
test
pushf
add
cmp
pop
xor
mov
fcomi
adc
jnp
or
xchg
push
add
in
lahf
mov
fsts
shl
cltd
stos
insb
mov
add
call
int
lcall
popf
cmp
mov
pop
outsb
inc
xchg
xchg
mul
mov
addb
jecxz
adc
or
sub
cmpsl
dec
push
cmpsb
repz
bnd
push
sub
mov
adc
jnp
cwtl
cmp
pop
push
xchg
out
hlt
movsl
pop
push
test
orb
mov
or
scas
cld
jne
mov
pop
add
in
dec
cmpsl
push
pushf
arpl
and
and
ss
sbb
stc
lret
lret
mov
xlat
movsb
cmp
mov
mov
repnz
sbb
ss
pop
xchg
ret
lret
mov
mov
aad
mov
in
pop
mov
lea
jl
pop
rorl
rolb
in
out
scas
inc
mov
cmc
in
mov
cs
stos
es
test
xlat
popa
mov
mov
sbb
cli
sarb
mov
aaa
cld
sahf
out
pusha
stos
and
mov
cs
inc
stos
ljmp
aad
lcall
sti
or
sbb
loop
loopne
lea
or
or
and
aas
inc
es
add
mov
in
lcall
enter
xor
and
mov
cmpsb
add
sbb
push
mov
iret
js
divps
mov
orb
inc
in
xchg
and
cmp
iret
push
sub
pop
lods
jg
sahf
and
dec
mov
cld
or
mov
fsubrl
jl
pushf
inc
bound
mov
jle
jnp
mov
jg
clc
mov
insb
mov
int3
ja
dec
push
jp
push
adc
mov
pop
xor
cld
ret
xchg
or
daa
and
imul
fsubr
mov
orl
jns
jmp
inc
pushf
adc
or
orl
aam
mov
jl
nop/reserved
xchg
mov
lcall
sbb
outsb
negb
dec
xchg
pop
jnp
adcl
leave
imul
int3
sahf
add
mov
loopne
andb
jnp
sub
xchg
mov
ret
stos
xor
pop
fwait
movsl
xchg
push
stc
cwtl
int3
push
adc
andl
dec
pop
mov
test
push
mov
sub
ret
cld
data16
in
add
xor
adc
inc
test
cli
faddl
test
es
fsubrl
bound
cmp
leave
cmpsl
sub
sbb
loope
pop
add
add
ljmp
lret
sahf
daa
adc
enter
cld
fs
mov
call
jle
arpl
mov
lret
mov
push
pushf
mov
mov
test
cwtl
lcall
or
fs
adc
sub
sbb
xchg
jnp
cltd
fstps
lret
or
add
out
inc
dec
ds
push
xchg
cmp
cmp
rclb
dec
sub
or
lds
mov
push
into
dec
fsubrp
sub
pop
mov
scas
sbb
addr16
lret
and
lods
repz
in
imul
sbb
push
push
jmp
inc
xchg
stos
or
push
or
outsl
xchg
or
adc
sbb
add
mov
sub
dec
push
cmpsb
inc
xchg
pop
dec
gs
inc
push
inc
adc
gs
out
sbb
mov
xchg
mov
lds
add
inc
cld
movswl
loope
mov
mov
cmpsl
adc
fidivrl
std
scas
test
fiadds
jmp
subb
jle
dec
dec
pop
stos
ret
scas
and
pop
and
sbb
cmpl
jl,pt
xchg
movsb
hlt
out
or
adc
lea
adc
inc
loop
fistpll
mov
test
shrl
fs
sub
sub
xchg
or
jnp
int3
jo
mov
test
jl
push
test
test
les
xor
mov
addl
cmp
sub
mov
sbb
lods
mov
stos
cli
mov
sub
or
or
mov
or
lret
stos
fbld
pushl
insb
adc
fimull
test
inc
pop
xchg
call
fcoml
scas
sahf
in
sti
dec
inc
pop
fistpll
lcall
mov
aas
inc
loopne
mov
filds
fcoml
out
lea
jb
popf
push
push
mov
and
pop
mov
adc
sub
sub
xor
shlb
shlb
jp
and
push
stos
mov
xchg
clc
fdivrp
aas
orb
and
es
faddl
arpl
push
leave
adc
out
in
lcall
push
pop
nop
cmc
lahf
shll
out
roll
xchg
arpl
push
notb
test
ss
pop
push
in
mov
push
sbb
cwtl
popa
jmp
cld
sub
inc
jecxz
daa
movsbl
out
fwait
add
push
add
push
daa
sbb
add
pop
push
sti
out
cs
mov
sbbl
adc
je
or
out
sub
repz
mov
sbb
aaa
dec
inc
popa
sub
into
inc
sti
pop
and
dec
cmpsl
dec
jb
stc
xchg
aas
insl
xchg
int3
adc
call
xor
and
adc
popa
lahf
mov
std
ret
popf
pushf
pop
xlat
jns
inc
ret
mov
jno
mov
fstps
lret
stos
mov
insl
aas
jl
xor
xchg
mov
sbb
push
sarl
daa
fistl
push
and
repz
sbb
addw
mov
movsl
dec
ffreep
fucomip
push
pop
mov
mov
lcall
inc
sub
jge
insb
cmpsl
jo
or
adc
adc
mov
or
cmp
add
testl
sti
shlb
inc
or
daa
nop
faddl
mov
sub
adc
addr16
dec
xchg
sub
jbe
sub
fwait
sbb
lcall
pop
imul
sbb
dec
cwtl
call
sbb
and
xchg
sbb
adc
sbb
ret
add
adcb
pop
pushf
jnp
sbb
mov
test
add
mov
iret
adc
outsb
inc
out
movsl
fstp
lcall
pop
aam
cmp
loopne
inc
sti
shrb
mov
clc
out
ror
mov
mov
xchg
jg
sbb
xchg
adc
shlb
fxch
or
and
dec
gs
clc
adc
sahf
ror
mov
jae
mov
inc
xor
jmp
push
call
lods
mov
pushf
sub
xchg
lods
sbb
pop
aaa
xorb
ja
sub
ljmp
cmpl
cltd
cmp
std
fcoml
add
pop
push
jecxz
sub
lcall
cltd
shll
adcb
xchg
and
push
enter
adc
dec
sub
push
hlt
call
pop
adc
cmp
mov
imul
stc
cs
xchg
jmp
lods
sbb
ss
bound
fcoms
test
fildll
dec
jecxz
dec
add
inc
faddl
lea
push
sbb
std
pop
adc
lret
jg
movsl
sahf
sub
jns
cmp
mov
ljmp
sbb
xchg
xlat
or
or
iret
sub
push
stos
mov
pop
js
lahf
mov
xchg
imul
out
dec
sub
pop
test
mov
mov
sbb
fwait
sub
and
or
popa
inc
in
mov
ret
cltd
push
jns
cmp
adc
std
lods
inc
orl
xchg
jle
scas
insl
nop
test
aam
int3
rcrl
jge
pop
pop
gs
sbb
js
int3
fbstp
idivb
scas
sub
xchg
push
xchg
and
lods
adc
push
cmp
cmc
mov
flds
pushf
stc
lods
hlt
jo
or
jo
jmp
push
jnp
sub
inc
add
xchg
sub
cmpsl
jnp
xchg
and
mov
jns
test
fnsave
adc
in
mov
bound
insb
xchg
mov
sub
sti
mov
bound
fs
fs
jecxz
ljmp
popf
mov
sub
cli
arpl
cmpb
scas
and
hlt
sub
stc
rclb
aam
test
inc
push
popf
and
sarb
out
sub
or
pop
ljmp
in
jp
stos
xchg
inc
syscall
scas
pop
orl
sahf
xchg
add
adc
mov
fmuls
fadds
mov
sti
sbbb
inc
adc
popf
rolb
jmp
dec
int3
mov
jmp
pop
enter
mov
or
or
add
mov
ret
popf
popf
jne
mov
mov
mov
xor
jmp
mov
jne
nop
loop
into
cld
jge
jle
out
dec
ud2
sbb
dec
push
dec
sbb
jmp
gs
loope
dec
xchg
test
ret
out
mov
sbb
test
lds
in
adc
faddl
call
or
ret
jge
inc
lea
inc
sbb
mov
loope
mov
lods
out
push
int3
xchg
adc
loope
dec
pop
jbe
pop
out
add
test
mov
jo
lret
xchg
sbbb
pushf
add
dec
sbb
xchg
or
fldenv
lcall
sbb
loop
lret
xor
lcall
and
lods
jmp
sbb
in
jge
lods
sbb
ret
test
cltd
ja
jmp
icebp
cmpsl
push
cltd
lds
sbb
adc
xor
out
data16
pop
or
aaa
leave
jmp
cwtl
int3
stos
pop
push
dec
sbb
jge
pop
es
add
pusha
ret
imul
scas
jmp
in
sbb
inc
inc
dec
adc
adcb
jg
cwtl
jne
call
into
jns
jge
or
out
push
sbb
mov
mov
out
jp
ret
mov
out
js
pusha
or
sub
fidivrl
add
loop
sarl
jmp
test
mov
lret
inc
les
pop
push
sub
add
fimuls
int3
sahf
leave
or
push
cli
mov
inc
not
mov
jle
sub
sub
out
push
popf
lock
add
popf
mov
fisubl
or
je
xchg
or
xchg
sub
mov
and
cmovo
in
adc
insb
out
sbb
shlb
jle
and
psubsb
mov
jle
fildl
mov
adc
test
xchg
xor
jbe
and
lea
jle
in
cmpsb
cmp
ret
mov
adc
sbb
repz
mov
out
inc
mov
jno
xchg
pop
das
inc
orb
rcr
out
in
mov
add
fs
sub
in
bound
lret
call
psubb
pop
dec
add
mov
push
pop
jns
fldcw
mov
add
xchg
lcall
test
xor
out
mov
mov
loop
dec
sub
and
stos
mov
mov
ljmp
aaa
cli
movsb
xchg
xor
aam
lret
jge
inc
insb
push
daa
push
ja
adc
nop
out
push
inc
jns
mov
and
push
cmp
dec
in
es
sbb
sbb
or
mov
mov
orl
mov
pop
subb
in
jns
push
xlat
mov
mov
dec
nop
xchg
ds
mov
aas
xor
mov
lock
mov
sub
call
pushf
mov
push
out
mov
pop
sub
mov
mov
testb
repnz
and
ljmp
jo
shr
movsl
sub
inc
js
out
pmaxsw
mov
push
orl
or
sub
adc
addb
hlt
daa
popa
xor
and
or
push
push
mov
push
popf
sti
xchg
fs
xchg
gs
int
inc
and
insb
or
mov
mov
or
push
jmp
mov
loop
jno
pop
insb
sahf
and
pop
add
cli
inc
repnz
push
pusha
xchg
or
dec
sbb
sub
push
add
dec
stos
icebp
xchg
cmp
in
jge
js
add
mov
mov
xchg
imul
inc
inc
es
dec
adc
stos
push
scas
sub
cmp
mov
pop
cmp
shlb
mov
cwtl
add
or
xchg
ret
call
lret
or
cmpsb
sub
inc
in
pop
into
pop
mov
addb
fcoml
adc
int3
inc
sub
add
adc
adc
push
stc
inc
mov
push
int3
notb
cwtl
in
add
jmp
ds
pop
pop
flds
or
sub
jne
or
ret
mov
nop
or
pop
add
or
xchg
jo
dec
dec
jbe
inc
jns
in
adc
sahf
pop
adc
popf
lea
mov
push
xor
or
fcmovbe
jmp
adc
pop
repz
inc
popf
pop
dec
pop
or
mov
sahf
xor
scas
adc
mov
clc
and
or
pop
loope
add
in
cwtl
pop
push
adc
inc
mov
aas
jle
lahf
mov
mov
fimuls
mov
or
push
ds
popa
inc
jle
rorl
loope
mov
sbb
hlt
pop
dec
in
popf
mov
mov
and
rolb
leave
loope
das
sahf
dec
sahf
out
in
clc
dec
inc
incb
sub
dec
adc
out
in
inc
es
call
and
in
movsb
inc
adc
inc
fsubl
ret
add
xor
inc
or
or
nop
stos
fsub
mov
push
push
sub
inc
or
sbb
mov
and
jl
push
fldt
imul
mov
pop
add
and
push
add
out
inc
mov
jmp
pop
add
mov
sarl
ret
std
inc
add
dec
inc
pushf
sub
inc
adc
std
add
inc
jle
scas
jbe
cli
dec
pushf
xchg
sbb
add
gs
adc
stos
enter
push
rorb
push
cmp
jne
add
fnstenv
or
sub
sub
mov
aam
add
dec
add
sbb
or
xchg
xchg
xchg
cmp
sbb
mov
dec
jnp
nop
iret
and
or
mov
stos
popa
ss
les
cwtl
mov
add
push
fs
in
push
ret
push
int3
shrl
mov
add
xor
mov
outsl
ret
or
add
cli
inc
pusha
push
cmpsl
sti
fistl
mov
rol
xchg
popa
addl
aas
pop
cmp
push
pushf
add
inc
popl
clc
mov
stc
fsubr
cltd
jns
aaa
jmp
xchg
fucomp
mov
aam
orl
pop
jg
mov
add
inc
cmp
cs
adc
cmp
cmpb
xor
or
adcl
or
inc
pop
nop
fisttps
cmp
unpckhps
add
add
or
dec
jecxz
imul
inc
jge
pop
iret
sbb
xchg
std
aad
fisubrl
adcl
addr16
cmpsl
in
and
test
hlt
jbe
push
lret
rorb
int3
add
xchg
js
clc
outsl
int3
dec
cld
nop
adc
lea
xchg
xor
dec
test
jg
xor
xchg
sti
or
adc
test
cld
cmp
jmp
test
ret
inc
add
jg
and
clc
jmp
xor
dec
push
mov
enter
sbb
lods
daa
mov
mov
iret
push
mov
sub
out
stc
fwait
int3
mov
cmp
add
test
xchg
insl
add
mov
cmp
imul
enter
xor
std
push
aam
add
sbb
pop
or
add
lock
add
sbb
inc
jnp
daa
or
jecxz
and
into
push
mov
sahf
and
and
imul
dec
push
jecxz
xchg
add
jg
cmp
add
xchg
sbb
jae
jmp
add
repnz
stc
push
pop
lahf
mov
rolb
or
sbb
mov
loop
adc
aaa
and
mov
cli
insl
loop
bound
xchg
mov
les
jno
leave
or
pop
adc
lods
xor
or
adc
push
inc
mov
adc
fxam
bound
mov
cmp
xchg
insb
push
cmp
jnp
jmp
lods
iret
testb
mov
inc
popa
bnd
mov
push
lret
cmp
cwtl
loope
jne
cmp
adc
popa
dec
mov
mov
jbe
lock
call
mov
lds
test
inc
dec
repz
call
xor
das
lods
mov
push
xlat
lods
lret
cwtl
and
jp
sti
mov
icebp
insb
or
sub
mov
or
leave
bound
test
and
sub
in
push
lods
xchg
sahf
mov
xor
pop
sub
xchg
out
scas
insb
mov
push
les
xor
test
call
fisttps
dec
lcall
inc
rcrl
stc
cmp
cmpsb
scas
cwtl
cld
fists
or
pushf
ret
loop
mov
arpl
xor
jae
addr16
sub
cmpsl
andb
lcall
pop
xor
mov
sahf
ljmp
movsb
dec
ret
mov
sbb
aaa
jmp
ficoms
inc
cmp
scas
add
int3
fcoms
and
ss
or
pop
mov
inc
sahf
in
ss
jmp
daa
push
in
ljmp
adc
stos
jl
xchg
push
mov
fucomp
dec
and
jle
popl
push
sbb
cmp
jecxz
mov
push
stc
ss
loopne
and
xchg
and
addr16
out
sub
jl
push
sahf
cmp
xchg
sub
add
rorl
mov
adc
fsubs
add
jbe
sete
ss
mov
adc
cmp
decl
movsl
mov
out
mov
daa
addl
jmp
cmpsb
dec
in
sub
mov
pushf
pop
cwtl
mov
and
repnz
jns
inc
mov
sbb
mov
call
loope
xchg
jbe
mov
lods
lret
dec
in
xor
ret
sub
push
jns
movaps
add
inc
vmulsd
add
lret
mov
data16
shr
repz
scas
addl
lods
jle
inc
inc
into
popa
sbb
insb
sbbl
mov
loop
mov
int3
pushf
scas
jge
or
icebp
fs
dec
jle
sub
pop
jnp
sbb
andb
inc
fwait
lret
adc
mov
lock
outsb
sbb
movsb
icebp
mov
or
insb
fmuls
add
hlt
ret
jno
or
ljmp
sahf
es
int
ror
sbb
in
push
inc
sbb
cmp
fisubrs
ljmp
insb
add
into
xchg
push
repnz
lea
ss
mov
sbb
xchg
add
inc
scas
test
adc
jmp
sbb
imul
notb
pop
or
test
cmovg
cltd
dec
or
xchg
xor
jp
sub
stos
les
mov
pop
scas
daa
add
mov
outsb
enter
jno
push
xchg
ljmp
pop
cs
cltd
cmp
dec
lcall
imul
pop
adc
stos
mov
popf
stos
jg
adc
fsub
popa
cmp
add
test
xor
adc
sti
mov
je
xchg
sbb
add
sbb
ds
mov
je
int
adc
add
mov
mov
sahf
adcb
int3
scas
sub
add
pop
mov
into
xchg
smsw
mov
cmpsl
xor
push
fiaddl
mov
test
scas
rcrl
and
jecxz
lret
xchg
add
or
or
mov
push
mov
decl
icebp
cmc
sbb
sub
cs
or
mov
adc
xchg
sub
popa
cmpsl
sbb
push
mov
popf
push
in
shlb
int3
loop
lcall
or
adc
xor
lcall
les
stos
leave
rorb
insb
mov
mov
es
ficompl
insl
push
mov
int3
sub
adc
and
std
lret
pop
dec
cmpl
in
stos
add
call
and
mov
loopne
movsl
repz
pop
mov
jnp
xchg
out
ss
imul
outsl
imul
sbb
pop
mov
inc
xor
dec
adc
adcb
xchg
add
lods
adc
addr16
lods
push
movsl
push
call
lcall
mov
pop
stos
dec
js
cmc
xorb
pushl
rcll
jg
out
push
aas
jmp
push
lea
mov
xchg
or
mov
hlt
xor
daa
push
ret
mov
mov
inc
test
mov
lret
scas
or
pushf
scas
mov
jne
dec
insb
mov
sbb
mov
or
call
or
push
cmp
fcomip
stos
imul
mov
in
lret
ret
sub
mov
push
inc
fcmove
out
sub
inc
andl
push
orl
addr16
filds
or
mul
data16
add
or
jnp
pop
push
stc
push
add
or
push
xor
imulb
xchg
push
xor
fcoms
hlt
shll
adc
mov
cld
or
ficoml
shll
or
cmc
lock
insb
jmp
or
inc
rcrb
lods
ret
dec
lcall
or
dec
mov
and
lock
or
and
out
sbb
pop
mov
sti
push
xor
mov
jp
and
push
xor
nop
ss
mov
cmpsl
jns
push
loope
xor
fsts
movsb
or
and
out
js
mov
daa
ds
in
adc
mov
mov
sub
push
pushf
stos
sub
sbb
fisubrs
mov
jmp
repz
leave
mov
jno
and
push
popf
scas
jecxz
xchg
sahf
lret
test
frstor
add
add
imul
push
sarb
aad
pop
mov
loope
push
mov
sarb
stc
stc
mov
lods
adc
sbb
movsl
mov
fldl
popl
xor
adc
popfw
ss
lods
pushf
fnstsw
jmp
xchg
sub
movsl
mov
jp
inc
andb
aam
pop
adc
mov
sbb
lods
std
lret
clc
or
add
call
or
inc
shll
jae
pop
add
scas
jbe
test
leave
out
inc
adc
add
sub
aam
sbb
mov
jns
pop
or
cs
mov
and
xchg
xlat
dec
fdivs
xor
loope
mov
pop
sub
dec
sub
aam
int
mov
and
sub
push
or
or
cmp
loope
out
and
ljmp
popa
pop
scas
cmp
mov
addr16
inc
mov
mov
add
or
mov
inc
mov
mov
ljmp
mov
inc
loopne
in
lods
pusha
int3
xchg
dec
aam
inc
and
mov
sbb
aam
inc
ss
sub
xor
negl
ret
or
loope
inc
push
mov
mov
add
or
and
and
lea
pop
in
mov
mov
pop
dec
cwtl
dec
ljmp
movsl
enter
icebp
sbb
imul
sti
adc
inc
mov
subl
add
dec
inc
js
mov
pop
jg
icebp
dec
jnp
xchg
and
pop
inc
dec
cmc
jae
enter
add
out
pop
orb
inc
jo
add
mov
jnp
pop
lret
dec
pop
pop
mov
adc
arpl
stos
mov
mov
mov
pop
out
cmp
ja
les
sahf
cmp
fwait
adc
fdivs
dec
dec
mov
fcmovnu
loope
les
xor
dec
sub
push
dec
add
dec
xor
add
int
insl
pop
mov
mov
loope
insl
pop
ja
push
cmp
pop
sbb
pushf
popf
xor
outsb
add
dec
ss
add
dec
sar
push
jo
inc
daa
jle
lea
repz
add
xchg
mov
cltd
ss
push
inc
movsl
sti
enter
cld
popl
clc
mov
fisubl
pushf
sub
add
movsl
xor
adc
sbb
adc
subb
jnp
add
or
scas
cmp
mov
cmp
lea
adc
push
ja
cmp
movl
mov
incb
dec
loope
stos
scas
fsubrl
mov
mov
mov
mov
subb
sub
mov
sbb
add
movsl
push
dec
fstpl
test
stos
jnp
pop
mov
or
adcb
push
cmpsb
pop
and
cmpsl
int3
stos
push
mov
sti
out
mov
pop
inc
push
lea
fmuls
popf
xchg
mov
mov
xchg
test
jl
push
mov
mov
es
sub
or
sbb
sti
jne
sahf
test
push
fildl
insb
sbb
jge
mov
lods
jl
data16
stos
arpl
dec
and
mov
sbb
orb
xchg
sbb
addr16
push
pop
jge
jle
hlt
mov
mov
add
inc
xchg
out
aam
cmpsb
cmpsb
repz
and
stos
xchg
movsb
jnp
dec
arpl
dec
addl
xchg
jnp
orl
std
mov
cmp
inc
xchg
mov
loop
cmpsb
mov
stc
add
repnz
or
mov
and
fdivrs
ret
in
pop
sti
test
mov
fadds
mov
mov
sahf
rorl
mov
popa
repnz
dec
insb
sbb
fdivrl
dec
xchg
mov
decl
iret
dec
inc
leave
adc
fdivr
icebp
or
xchg
arpl
addr16
dec
jb
mov
adc
jle
ucomiss
enter
cmc
int
loopne
pop
inc
fsubs
shr
jl
mov
and
or
sahf
mov
push
cmp
sti
leave
enter
mov
or
ja
leave
inc
sbb
pusha
push
xchg
dec
jnp
push
rolb
mov
aam
xchg
pop
insb
dec
mov
js
cmp
jnp
out
sbbl
pop
les
jno
adc
gs
adc
lret
jmp
popf
loop
stc
out
int3
test
lret
lea
mov
mov
ds
push
out
insl
xchg
decb
and
test
mov
xlat
lcall
add
add
jnp
mov
push
call
enter
lds
popa
adc
add
and
push
adc
inc
fisubl
sub
lcall
pop
mov
and
cmp
decl
popf
pusha
nop
nop
mov
pop
xchg
mov
lock
cli
jl
pushf
mov
js
ja
ds
add
insb
int3
insl
xchg
xchg
out
int
xor
ret
jne
xor
mov
sbbb
cltd
rcll
dec
movsb
or
clc
inc
lahf
test
adc
int3
dec
ja
mov
scas
jmp
lcall
mov
push
add
cmp
sub
jle
repnz
movsl
scas
clc
stos
jnp
pop
cmp
push
cmp
rcr
stos
ds
inc
mov
outsb
lods
jno
loope
adc
xchg
adc
mov
push
in
pusha
pushf
bound
jb
push
cmp
enter
mov
push
or
mov
xchg
popa
hlt
inc
xor
pop
sbb
jno
and
jge
scas
mov
mov
sub
pop
sbb
jae
ret
cmp
xor
sub
pop
inc
sbb
mov
mov
loop
ret
sub
enter
repnz
inc
or
push
aad
lcall
test
das
mov
ja
sub
lods
addl
bound
sub
stos
inc
pop
mov
lods
dec
mov
js
or
stc
inc
pop
rcrl
add
mov
loop,pt
jmp
loope
or
pop
test
mov
cmpsl
add
pop
jmp
inc
cmpsb
mov
pop
xchg
or
xchg
stos
aam
dec
dec
dec
xor
insl
jge
out
aas
movl
lret
sbb
cmp
pop
mull
jmp
test
out
in
push
xlat
or
out
lds
jno
sbb
push
cmp
mov
arpl
mov
ret
xor
dec
mov
ljmp
lods
bound
and
add
stos
push
xor
ljmp
adc
xor
jle
andl
popa
mov
gs
sbb
xor
repz
dec
jmp
inc
push
or
decl
scas
lods
push
lds
add
mov
add
leave
or
or
or
stos
jmp
mov
mov
movsl
repnz
xchg
jnp
or
lret
sub
or
xchg
add
mov
mov
mov
adc
movsb
and
or
sahf
or
pop
dec
leave
scas
in
scas
push
adc
stc
scas
loope
and
repnz
mov
test
popa
dec
lcall
mov
pop
gs
in
movsl
mov
mov
jl
popa
sarb
and
or
in
adc
scas
sub
pop
and
push
fisubrs
outsb
push
dec
jns
xor
sub
sub
sub
orb
inc
adc
test
sbb
loopne
fdivr
fucom
cs
leave
xor
mov
pushf
in
jle
or
dec
movsl
pop
or
sbb
inc
les
iret
test
fsubs
xor
outsb
sti
int3
and
adc
dec
loope
push
sahf
ret
stos
fmull
scas
push
xchg
fs
int3
pop
xor
adc
shl
scas
inc
xchg
pop
negb
adc
sub
jnp
mov
gs
sub
push
ror
pop
ret
mov
fildll
xchg
jle
dec
in
cmc
adc
popf
or
scas
imul
adc
push
ljmp
std
or
iret
loopne
pop
int
ficomps
jecxz
mov
pushf
jo
jp
pop
movsl
dec
fimuls
call
mov
test
ret
adc
in
ljmp
cmpsl
aam
out
pop
in
inc
xlat
cs
sahf
sub
loop
les
dec
xor
inc
or
xor
ret
test
or
orl
test
cmp
ja
daa
fcoms
sti
or
orb
stos
adc
or
pushf
loopne
xchg
mov
mov
mov
inc
and
cmc
or
ret
mov
gs
test
cwtl
incl
or
movsl
xor
addl
stc
push
add
mov
imul
inc
xor
aad
mov
shl
test
pop
mov
pop
sbb
inc
push
cmp
sub
add
addr16
and
push
inc
arpl
sbb
ja
sub
sahf
int3
cmp
sbb
jns
xchg
xor
sti
pop
insl
or
adc
push
mov
xchg
sub
or
jmp
dec
inc
xor
xor
jnp
ret
jbe
mov
pop
xchg
dec
mov
inc
or
fwait
lahf
jbe
roll
add
fsubr
pop
pop
push
jnp
and
jp
bound
test
xchg
xor
cmp
mov
push
inc
loope
aas
mov
dec
aad
mov
decl
push
pusha
jmp
xlat
or
add
in
jecxz
movsl
add
ja
or
jnp,pn
add
mov
call
mov
lar
adc
mov
mov
push
daa
cwtl
lods
jbe
add
sub
lret
fstpt
xchg
xchg
sti
sbb
mov
aaa
in
cmp
hlt
out
sbbb
jl
sub
arpl
lods
outsb
push
test
mov
in
cmp
and
ret
pushf
out
mov
imul
inc
les
fs
outsb
lods
pop
ljmp
or
push
in
xor
arpl
or
fs
sbb
mov
andb
pushf
cld
or
and
sbb
sbb
and
les
sar
dec
test
pop
xchg
and
insb
mov
push
popf
stos
mov
mov
loopne
jl
add
mov
jnp
dec
aam
fidivrs
dec
arpl
sub
out
mov
cmp
in
push
jb
ja
mov
sar
arpl
jno
subl
out
aam
inc
loope
push
lods
repnz
movsb
push
enter
sahf
pop
insl
dec
mov
adc
js
jg
addb
loope
icebp
ljmp
cwtl
push
add
or
adc
or
stos
cld
jp
in
jmp
mov
es
pushf
jmp
lods
xchg
fistps
lret
addb
stos
cld
ss
sub
int
mov
ror
sub
adc
cwtl
mov
cmp
loop
xchg
or
and
mov
sbb
cmovge
adc
loope
sub
xor
mov
push
mov
lret
sbb
lea
lcall
or
adc
andl
in
sub
je
outsl
lret
or
add
inc
subb
sub
stos
int
lods
lret
ljmp
ret
sbb
xchg
adc
movsl
jg
mov
adc
xchg
inc
lcall
mov
mov
push
aas
sarb
add
addr16
pop
stos
pushf
add
cmp
shrb
jl
cli
cmp
jl
mov
or
int3
adc
fstpt
fnstenv
pop
sbb
rorb
adc
bound
jle
out
xor
roll
inc
iret
or
adc
lret
jno
fsubrs
call
mov
adc
enter
cmpsl
les
pop
sbb
cmp
xchg
je
adc
icebp
and
lret
jno
xchg
clc
lcall
or
dec
pop
mov
lahf
dec
jns
lea
and
cmp
lcall
or
sub
out
and
enter
mov
movnti
js
enter
sbb
int3
mov
and
xchg
cmp
popa
lcall
mov
out
test
jo
mov
pop
add
cmp
iret
cwtl
xor
mov
fs
adc
xchg
imul
and
scas
shrl
dec
mov
mov
pushf
jecxz
popf
mov
cltd
int
dec
adc
or
cmp
rorb
inc
fcoml
push
push
dec
lods
or
insb
scas
sbb
jg
es
in
cmp
xorb
jnp
sti
testb
cmpl
xchg
idivb
lods
push
pop
repnz
xorb
jle
or
in
pop
add
push
hlt
pop
pop
lret
cwtl
inc
add
addr16
jg
sbbb
and
test
arpl
lea
sbb
pop
sti
sbb
rcll
hlt
lock
ret
fisubrl
and
adc
movsl
insl
ljmp
out
jne
popa
testl
xchg
add
xchg
mov
xchg
xchg
add
mov
push
lods
jp
add
or
add
or
dec
xchg
daa
aaa
out
inc
addl
lock
out
nop
ret
aas
call
or
insl
mov
dec
sbb
jmp
add
and
mov
daa
push
iret
mov
test
test
adc
js
and
sbb
call
jno
testl
or
es
push
push
mov
in
jl
call
call
and
sarb
sbb
xor
and
pop
cmp
mov
xor
mov
mov
sub
inc
mov
cmp
push
adc
add
or
aam
int
xorb
and
inc
add
cmc
cwtl
je
jnp
jmp
imul
in
vcvtpd2psy
jle
in
jle
jnp
sbb
insl
add
adc
loop
xchg
pop
ds
xor
add
call
mov
ljmp
push
or
ja
mov
daa
bound
cld
sub
test
lahf
and
or
and
mov
mov
push
xchg
imul
pop
repz
loop
mov
sti
or
sub
cmpb
cmc
sub
pop
adc
adcb
xor
loopne
into
aaa
adc
outsl
sbb
pusha
mov
shl
ja
enter
lret
and
fists
sbb
cli
mov
or
movsb
sahf
orl
jl
and
mov
adc
pop
lock
or
jae
mov
movsb
and
test
les
sbbb
arpl
out
mov
xchg
out
imul
sbb
lods
cmp
out
push
mov
or
jl
push
aam
mov
jg
lods
call
out
lret
fcmovnu
inc
sbb
sbb
inc
and
call
mov
add
aam
pop
enter
lods
enter
fnstcw
out
outsb
int3
enter
ret
out
jb
clc
fs
jl
lods
ficoms
mov
pop
cmp
xchg
xchg
inc
das
call
and
fwait
scas
ja
into
or
cld
jns
sbb
mov
pop
in
test
mov
mov
sbb
in
sub
jle
xchg
add
fstpt
inc
dec
es
jbe
aam
out
and
pushf
mov
sbb
dec
xchg
mov
dec
pop
call
ficoms
add
mov
aas
mov
jle
adc
imul
js
pop
stos
adc
jmp
mov
mov
in
cli
jecxz
xchg
cmp
push
sbb
outsl
push
jle
inc
inc
int
sbb
add
sbb
add
cli
cltd
enter
sti
sbb
xchg
push
bound
sbb
clc
clc
jae
out
xor
rol
sbb
jle
fidivrl
mov
enter
jg
xchg
cmpsb
sub
xchg
cmp
lret
cmp
add
sti
dec
adc
aad
mov
cmp
and
and
xchg
inc
addb
es
pop
addb
push
int3
aam
adc
dec
jmp
adc
test
or
pop
inc
movsl
mov
or
cmpsl
in
sub
pop
lods
fstpt
adc
in
sub
mov
rorl
aam
sarl
test
ljmp
lcall
mov
outsb
or
jnp
mov
hlt
sarb
mov
xchg
cltd
cmovl
hlt
cwtl
xor
xor
sti
dec
jle
arpl
nop
bound
mov
sbb
xchg
pushf
daa
mov
call
test
xor
icebp
cli
inc
xor
rclb
or
in
divl
and
or
lret
xchg
push
aas
dec
and
pop
jecxz
inc
in
adc
push
sbb
int
sbb
mov
adc
add
icebp
sbb
and
dec
jle
jae
sbb
fimull
cmp
inc
push
cmp
mov
rclb
mov
insl
sbb
sbb
mov
adc
jp
stos
stos
mov
adc
jmp
or
xor
mov
movsb
mov
mov
dec
or
dec
notb
sahf
pusha
rclb
jb
or
cmp
or
cmc
test
xchg
sub
out
sbb
orb
jp
orl
mov
insl
enter
or
loopne
push
das
fisubrl
jno
jmp
and
xchg
movsl
mov
in
in
jp
mov
or
xor
das
inc
loop
sub
sahf
or
inc
cmpsl
dec
cmp
push
sub
insl
ret
xchg
xchg
xor
dec
add
cmp
push
pop
nop
ds
fistpl
test
stc
fwait
mov
lock
cli
or
ret
or
std
mov
gs
jle
sub
add
test
push
pop
test
les
cmc
cmp
mov
inc
movsl
lods
pushf
rcrb
sti
arpl
imul
pop
fs
es
test
mov
lods
xor
shl
sub
push
sbb
mov
mov
scas
push
push
and
mov
popf
mov
cld
daa
mov
push
pop
mov
jne,pn
mov
out
mov
xlat
ljmp
sbb
jp
fbstp
xchg
mov
seto
ljmp
js
mov
mov
incb
sub
cmp
mov
lods
in
mov
sub
inc
nop
sbb
mov
xchg
fcmovne
cld
pop
or
test
sahf
jmp
cmpsl
xchg
fdivrp
repz
xchg
imul
rol
add
push
icebp
sub
xor
xor
in
xor
mov
sarl
aad
sbb
add
jl
sbb
nop
or
jne
ret
jl
xor
pop
fs
add
mov
pop
fimull
push
xchg
sbb
sti
fwait
jbe
arpl
movsl
out
into
jmp
adc
cld
shrl
jmp
dec
fs
cmp
or
sti
popf
push
aam
aam
lret
or
push
ljmp
or
sbb
lret
mov
ljmp
xor
call
pop
sbb
mov
int3
cmp
xchg
es
in
pop
dec
dec
sahf
inc
jns
int3
add
xchg
in
jle
mov
aad
andl
movsb
and
inc
mov
iret
jg,pt
inc
mov
and
add
dec
or
adc
lret
add
std
dec
movsb
mov
jg
nop
mov
mov
jnp
fildl
ret
test
sub
dec
jle
xchg
push
sub
stos
orb
test
test
dec
cmp
or
jmp
dec
je
iret
pop
xchg
aas
mov
push
dec
sbb
cwtl
dec
jp
pushl
adc
insb
xchg
adc
leave
fwait
adc
or
aam
and
popf
mov
or
mov
jnp
outsl
xchg
dec
sahf
bound
add
addb
in
dec
sub
jnp
inc
mov
sub
pop
imul
test
out
lds
dec
fistpl
jmp
movsb
ror
cmp
adc
not
mov
hlt
sbb
and
xchg
out
pop
jge
adc
ja
pop
das
cmpsb
shll
mov
enter
pop
outsl
int3
sub
lods
int3
jno
or
add
lret
push
mov
in
dec
and
mov
xchg
or
and
and
or
cmpsl
mov
movl
dec
mov
push
sbb
in
aas
or
mov
scas
ret
fwait
in
insl
mov
jecxz
leave
mov
mov
jnp
clc
cmpsb
xchg
adc
xlat
es
fmul
int3
pushf
popa
push
push
mov
cli
xchg
test
out
loopne
or
sbb
xchg
adc
pop
mov
mov
lret
pop
mov
sahf
add
cmp
cwtl
fldcw
aaa
dec
mov
mov
dec
dec
mov
bound
sub
mov
in
cmpsl
aam
sahf
leave
jb
repnz
jmp
dec
jle
mov
rorl
xor
outsb
push
mov
nop
scas
sbb
jle
inc
stos
jae
pop
xlat
ret
inc
movsl
xor
sarb
or
in
add
lods
rcrl
dec
aas
outsl
arpl
daa
jmp
mov
sub
in
sti
jle
lea
sub
adc
pop
jb
add
or
fdivl
aaa
addr16
fisttpll
xor
jg
and
pop
cs
jmp
pop
jb
mov
inc
push
repnz
xor
in
sahf
xchg
loop
leave
or
sub
jle
fmull
xchg
push
inc
mov
rcrl
mov
in
call
data16
repz
xor
mov
push
or
sti
inc
inc
das
popf
adc
orl
movsb
mov
or
repz
adc
mov
ret
mov
mov
xchg
cmpsb
push
inc
pusha
test
nop
daa
jp
dec
addb
mov
sbb
sub
adc
or
aam
xchg
std
or
and
dec
mov
int3
jle
sub
lret
jae
rcll
in
push
shll
mov
lea
sub
jno
pop
inc
test
loope
dec
inc
hlt
add
fs
dec
fs
lea
sub
das
jecxz
into
test
or
cmc
push
scas
mov
dec
imulb
or
add
stc
and
mov
andl
and
inc
mov
inc
negb
and
inc
sbb
mov
jge
stos
xorl
add
adc
add
pushf
sahf
sub
idiv
xchg
cmpsl
sub
adc
and
out
test
inc
add
cld
mov
loopne
test
xor
inc
fidivl
or
out
add
das
cli
sub
popf
xor
mov
aad
xlat
adc
mov
adc
out
loope
and
roll
iret
fdivr
wbinvd
inc
sub
inc
addr16
sub
add
adc
fs
xlat
jecxz
in
fsubl
sti
jge
jno
and
je
mov
mov
sbb
pop
fiaddl
dec
nop
cmp
ret
sbb
mov
hlt
bound
or
std
inc
in
es
cmp
jmp
dec
mov
or
mov
fsub
add
ds
xor
pop
xchg
or
movsl
jle
es
cli
add
jnp
call
jb
imul
push
sub
fidivs
xchg
cmp
adc
mov
add
lcall
testb
mov
aas
shlb
or
bound
bound
sbb
fdivrl
mov
pusha
adc
cmpsl
movsl
jecxz
push
push
dec
rcrb
testl
aam
pop
inc
jnp
lret
nop
push
fs
lahf
nop
mov
cmp
cltd
jns
sbb
cli
pop
in
jle
icebp
leave
jle
cmp
inc
sub
mov
movsl
outsb
mov
call
fwait
jbe
inc
pushf
out
in
mov
vpunpcklqdq
fwait
sahf
and
mov
rolb
xchg
jp
sub
mov
sub
pop
sub
stc
ret
sbb
imul
dec
add
mov
out
push
and
or
jbe
xchg
rcrl
xchg
sub
push
popa
subl
xlat
push
jo
sub
or
ds
je
movsb
jne
adc
mov
pop
rorl
in
or
push
sbb
addb
fsubrs
fldenv
add
popa
sbbb
sbb
stc
sub
iret
call
adc
push
sub
or
loopne
sti
outsl
clc
inc
sbb
fcomp
popa
lea
cld
inc
inc
xchg
fs
or
leave
cmpl
out
push
out
loopne
jge
jne
call
add
pop
lea
cmpsl
aam
int3
add
fs
in
jge
cmc
or
xlat
icebp
cmpsl
add
std
stos
sbb
sbbl
gs
xchg
push
jecxz
stos
scas
xchg
mov
push
push
mov
push
jp
sbb
adc
pop
pop
leave
lods
fdivl
mov
stos
jmp
repz
mov
pop
cmpsl
rolb
xchg
loope
mov
mov
aas
xchg
pusha
cmpsl
test
scas
adc
add
out
or
add
push
adc
jp
push
leave
sub
jmp
lcall
rorl
aad
sar
sbb
inc
and
shll
cmp
leave
outsb
fbstp
icebp
cs
pop
test
sub
test
lds
scas
push
cmp
adc
repz
addl
stos
js
inc
in
cwtl
xchg
sbb
iret
lods
out
pop
jle
sbb
lock
push
pop
hlt
xor
sbb
xchg
aad
pop
sub
mov
js
or
mov
mov
mov
orb
mov
loopne
mov
mov
repnz
mov
mov
aas
loop
mov
lcall
mov
dec
insl
lods
cmc
mov
or
adc
mov
or
mov
stos
sub
notl
cltd
and
mov
or
xchg
mov
stos
ja
rcrl
or
aas
mov
lock
sub
fisubl
sbb
lret
dec
stos
jle
pop
mov
inc
mov
bound
negl
out
push
jecxz
xchg
or
outsb
out
scas
leave
int
ds
dec
sub
push
jp
push
sti
cmpsl
cmp
je
cmp
sub
enter
call
ljmp
test
xchg
mov
push
push
in
add
cmpsb
pushf
or
popa
addl
dec
xchg
in
call
inc
sub
mov
mov
inc
or
sbb
jle
xor
dec
adc
or
xor
pop
or
sub
lret
push
in
or
jmp
cmp
dec
adc
dec
sahf
add
lds
rcrl
cmp
ljmp
icebp
fimull
and
or
add
pusha
cmp
rolb
sti
fistpl
jmp
ljmp
repz
sahf
or
imul
dec
and
sub
mov
loopne
sahf
filds
and
aam
push
fmull
and
int3
rcrb
mov
sbb
add
outsl
enter
jle
mov
mov
cmpsb
mov
int
ss
cmpsb
push
in
in
or
pop
xchg
pop
or
or
cwtl
out
cwtl
cmp
sbb
dec
mov
mov
mov
jmp
adc
adc
jne
sbb
jmp
pop
adcl
ss
cmc
in
push
pop
lods
xchg
jecxz
movsl
pop
test
xchg
inc
ret
imul
mov
jecxz
jmp
incb
lret
or
lds
mov
dec
mov
add
scas
stos
pop
push
sbb
stos
cmpsb
fdivr
lcall
xchg
cwtl
aas
stos
stos
data16
fsts
jnp
mov
out
mov
rol
mov
test
loop
test
lds
push
jp
fdivl
jo
jecxz
mov
int3
in
fistps
les
or
movsb
pushf
lret
repz
pop
mov
fdivrs
insl
in
aaa
adc
add
inc
sbb
fisubrs
mov
fimull
sbb
mov
pop
fiadds
cmpb
or
jns
cmpsl
shlb
xchg
lods
mov
addl
mov
jnp
cmpsb
cmp
pusha
stos
mov
test
push
sarb
and
add
add
cmp
stos
mov
les
mov
add
xchg
add
icebp
fldenv
jne
leave
adc
shl
hlt
inc
and
pop
dec
test
mov
push
mov
dec
inc
push
call
aad
mov
or
dec
lret
sbb
cmp
loop
dec
call
fildl
adc
outsb
pop
stos
jne
xchg
out
pop
adc
out
mov
inc
pop
cmp
scas
pop
jle
ja
les
aaa
xchg
hlt
lret
test
mov
addr16
jno
lea
cmpb
das
adc
or
scas
nop
inc
adc
mov
mov
shrl
sub
popa
outsb
adc
es
or
sbb
add
mov
jne
xchg
movsb
in
adc
sub
stc
out
add
lret
addb
push
push
enter
mov
fnsave
push
push
xor
in
out
syscall
xchg
or
mov
pushf
adc
clc
mov
adc
push
rol
and
in
lret
add
pop
rcrl
pop
xchg
dec
mov
sbb
add
sbb
mov
xchg
in
pop
das
inc
push
mov
out
in
inc
jb,pn
sub
or
in
jb
inc
cmp
jl
sti
add
lahf
pop
enter
xor
jl
xor
jl
mov
adc
cltd
push
sarl
push
stc
push
insb
call
mov
mov
adc
cmp
push
frstor
out
mov
inc
popl
popf
add
xor
loope
aad
xchg
enter
jmp
inc
push
ror
mov
loope
mov
jle
add
mov
shrb
jnp
mov
or
jl
mov
or
pop
test
mov
xchg
in
and
push
icebp
inc
repz
xchg
xchg
pop
push
mov
or
test
xchg
mov
cld
or
shrb
fsubs
out
lock
icebp
and
out
in
fs
mov
fwait
leave
adc
test
jl
dec
into
lock
loopne
in
icebp
out
adc
xor
popf
int3
add
cs
mov
out
imul
out
cmp
aad
and
xor
adc
fnstsw
cld
shl
pop
inc
lods
shll
dec
push
dec
dec
pop
jle
in
cmpsb
push
hlt
push
xchg
xor
je
dec
dec
psubsb
sub
jbe
or
adc
out
inc
or
gs
adc
scas
jns
adc
cld
sarb
lods
stos
jle
stos
pop
movsb
mov
or
loop
sub
paddd
loope
loopne
insl
in
pop
lret
movsb
adc
push
enter
decb
xchg
cs
jno
repz
mov
leave
sahf
gs
adc
fistl
outsl
sub
inc
sub
andl
addr16
test
pushf
jae
mov
orl
dec
mov
cwtl
dec
adc
adc
out
bound
in
hlt
insl
dec
aam
out
repz
push
sbb
jns
clc
loop
adc
adc
xor
pop
jle
xchg
imul
dec
jle
testl
shll
jmp
pop
lahf
dec
push
push
jbe
sbb
xor
adc
sub
add
lret
inc
loop
jb
mov
leave
insb
sbb
inc
push
stos
push
popf
xor
ret
bnd
mov
mov
enter
jle
mov
jne
jle
mov
cmp
out
sbb
in
je
popa
push
pop
cmp
add
sahf
movsb
xchg
insb
adc
rolb
mov
adc
mov
mov
leave
mov
and
mov
or
adc
ret
jno
jecxz
data16
mov
ret
mov
lea
mov
cli
jmp
cld
mov
loop
xchg
enter
mov
mov
cmpb
lahf
inc
add
xor
adc
in
outsb
arpl
pop
mov
js
aad
ds
sar
dec
lods
cmp
lea
sbb
mov
mov
dec
fisttpl
sbb
loope
mov
dec
loop
lcall
push
mov
cld
nop
addr16
imul
loopne
popf
scas
inc
push
mov
mov
stos
stos
scas
mov
fildl
add
movsb
fmulp
push
lods
enter
jle
and
and
aaa
xchg
in
mov
orl
sbb
xor
jge
mov
dec
dec
xchg
shll
cs
sti
jns
mov
cmp
ror
call
outsb
add
inc
movsl
push
jle
xchg
xor
and
loope
adc
jae
push
inc
loope
jb
cmp
scas
in
lahf
jmp
outsb
jb
add
dec
stos
arpl
stos
inc
jl
cld
dec
jle
cs
push
and
into
sbb
or
stos
popf
hlt
into
cmp
sbb
movl
jle
xlat
imul
in
or
add
pop
ss
les
insl
movsb
ljmp
dec
inc
out
sbb
inc
or
mov
pop
insb
or
shll
add
std
jge
push
inc
mov
sbbl
xchg
les
sahf
pusha
adc
inc
test
hlt
loope
cmpb
insb
add
mov
push
lods
sti
out
inc
or
sub
push
cmp
and
cmp
add
sbb
or
and
cmc
insb
jno
or
mov
push
jnp
push
in
movl
adc
lcall
mov
bound
mov
sub
add
cmp
mov
andb
sbb
xor
addr16
and
shrb
sti
in
jecxz
cmp
push
es
outsb
imul
jmp
pop
into
inc
xor
bnd
and
mov
cmp
and
enter
cli
mov
add
lea
sub
jnp
in
pusha
lock
fmuls
loopne
adc
movsl
sti
add
data16
mov
push
ret
add
pushf
addb
std
insl
pop
and
adc
add
mov
mov
cmp
lret
lea
enter
sti
dec
pusha
pop
push
or
mov
xchg
in
cmpsb
pop
inc
adc
mov
scas
pop
adc
out
arpl
push
sbb
sub
outsb
fcomi
loope
jle
enter
push
shlb
mov
jp
notl
xor
mov
xchg
lret
test
dec
mov
jb
fldcw
push
insb
loopne
pop
jno
mov
stos
out
push
test
movsl
mov
or
mov
jp
push
sbb
jae,pt
and
mov
lea
push
insb
mov
fsubrl
or
push
in
cmpl
add
pop
pcmpeqd
pop
sbb
adc
arpl
mov
push
mov
divps
mov
jl
xor
scas
roll
in
loopne
mov
xor
subl
push
dec
inc
pusha
outsb
stos
ljmp
outsb
daa
sbb
je
subb
into
pop
data16
jmp
loop
leave
ljmp
mov
push
mov
jo
mov
push
cmp
lea
lret
mov
cmp
jle
and
imul
mov
mov
insb
fstps
cwtl
pop
call
add
fwait
mov
jmp
mov
mov
cmp
pushf
loopne
in
pop
sub
imulb
inc
mov
sub
xchg
mov
inc
fisttpl
lods
inc
scas
sar
sub
sbb
gs
add
cld
sbb
cltd
mov
outsb
and
adc
loope
or
cld
cmp
loop
dec
xchg
sbb
addr16
cmpsl
jle
or
cmpsb
mov
repz
loopne
nop
ret
mov
lds
pusha
mov
sbb
scas
xor
mov
int3
daa
adc
mov
addb
loop
cmp
jl
rolb
push
or
nop
outsl
ja
sbb
out
jnp
les
lret
bound
out
into
call
lods
or
dec
pop
ss
mov
cmp
cli
cmc
stos
sub
jb
rorb
shrl
in
or
dec
fcoms
mov
negb
test
jecxz
mov
dec
stos
adc
mov
lock
adc
dec
aaa
jl
lods
test
lock
mov
sbb
cli
pusha
and
mov
pop
xchg
sti
into
and
rolb
fiadds
jecxz
fabs
sbb
andb
dec
dec
sbb
mov
adc
mov
out
ficoml
outsb
mov
or
cmpsl
mov
sub
test
lock
inc
cs
int3
icebp
inc
in
push
cmp
pop
pop
scas
mov
movsl
daa
xchg
out
mov
out
and
add
cwtl
scas
xchg
mov
or
push
jg
out
decb
mov
xor
in
imul
add
dec
dec
fcompl
sbb
and
sub
stos
push
lea
je
jnp
dec
fwait
xchg
push
mov
adc
sbb
xchg
dec
cmp
scas
or
cmp
fidivrl
push
xchg
stos
and
mov
push
jle
xchg
mov
imul
or
in
inc
jle
and
push
jb
iret
les
inc
ljmp
mov
mov
loopne
call
inc
scas
int3
mov
or
rorb
sbb
mov
dec
test
lahf
jge
jge
jns
mov
sti
adc
sub
xor
add
add
aam
sub
loope
cs
jp
jl
or
stc
mov
in
push
stos
adc
ret
adc
mov
mov
or
mov
jb
movl
imul
scas
in
lret
or
dec
repnz
inc
icebp
pop
iret
aam
stos
mov
sub
jns
cli
adc
pop
push
lods
repnz
dec
movsl
loop
or
sub
mov
pop
in
inc
fnstcw
inc
rcl
sahf
mov
dec
inc
pop
mov
test
add
lcall
fcom
jbe
push
inc
sbbl
push
push
icebp
jge
aam
or
std
inc
scas
mov
shrb
or
cli
mov
xchg
test
dec
test
fadds
or
push
inc
inc
add
inc
hlt
out
repnz
push
call
push
sub
push
jno,pn
shrb
out
int3
mov
in
in
xchg
out
int3
js
mov
fistps
sti
or
mov
popf
mov
pop
jl
add
dec
jnp
xchg
and
inc
movntq
test
adc
outsb
in
jb
xor
int3
aaa
lret
push
push
popa
call
lcall
scas
or
jl
sbb
jl
fwait
push
add
jmp
sti
cltd
lret
fwait
add
cli
popf
add
pop
add
jnp
cmp
fs
rorb
mov
mov
popa
enter
jnp
jbe
jns
mov
fimull
out
sar
out
adc
jmp
sbb
push
sbb
pop
dec
mov
lret
mov
xchg
sahf
out
popf
in
inc
sbb
insl
mov
lahf
lret
and
sahf
setb
fsubr
out
or
movsb
mov
push
jmp
repz
lods
imul
and
call
or
dec
dec
das
inc
pop
ret
rcrl
or
dec
xchg
mov
aaa
fisubrl
xor
jmp
lret
xchg
testl
or
test
mov
test
cwtl
add
aad
sbb
or
imul
sbb
cltd
sbbb
sbb
or
pushf
sbb
les
mov
and
sub
in
addr16
cs
sarl
push
mov
rcl
jmp
mov
inc
sbb
lret
pop
in
sbb
in
dec
shrl
adc
repz
ljmp
fmulp
pop
pop
mov
adc
lcall
push
fcompl
push
fiaddl
stos
adc
mov
xchg
in
mov
popf
insb
test
mov
rcrl
out
or
shrb
in
in
dec
addr16
cs
xor
call
test
dec
in
popf
jge
cmpsl
or
sti
cld
mov
mov
dec
das
int3
xchg
dec
or
ds
sub
sbb
lock
movsb
sbb
mov
scas
mov
int
orl
lret
or
dec
sub
mov
iret
mov
sub
lock
notb
cmp
test
jge
divl
icebp
lock
loope
mov
pop
push
dec
pop
stc
ljmp
mov
call
loop
cs
add
out
mov
insb
jl
sbb
mov
mov
lahf
out
mov
popf
sarl
xor
jns
mov
repnz
dec
test
pushf
rorl
dec
stos
out
mov
in
and
and
lahf
out
jns
stos
cmp
dec
sti
push
cmp
push
insb
add
fmuls
stos
into
mov
xor
xor
mov
subl
fbld
das
add
fisubl
sbb
icebp
cmpsl
int
cltd
push
lods
dec
jnp
inc
stos
mov
scas
call
leave
and
push
dec
cld
or
loop
mov
call
cmp
clc
or
les
movsl
or
out
movsl
test
int
mov
dec
pop
and
aaa
aad
dec
or
dec
lods
adc
mov
mov
idivl
lds
jmp
cs
mov
push
sahf
scas
or
ja
push
mov
pushf
lretw
cmpsl
rolb
lret
lret
out
sub
add
and
bound
mov
push
aas
fcoms
scas
into
xor
into
sbb
jp
push
mov
pushf
in
or
movsl
mov
test
lea
sub
ja
push
aaa
insb
scas
test
inc
jle
call
hlt
dec
scas
loop
pusha
pop
mov
sbb
fisubrl
mov
jle
mov
sti
adc
fsts
adcb
dec
cli
mov
jmp
imul
dec
js
inc
repnz
data16
loop
cmc
daa
ja
rcrb
popf
jnp
mov
inc
sbb
lods
aam
mov
ret
enter
shrb
testl
sahf
or
cmpsb
push
inc
sub
mov
mov
movsb
mov
movsl
pop
add
cmp
repnz
xchg
mov
mov
es
out
pop
add
ret
mov
in
ljmp
lea
jp
rorl
add
roll
inc
and
in
fmull
hlt
adc
pop
lods
pop
pop
inc
les
jle
inc
mov
rcll
mov
add
lds
adc
and
hlt
clc
adc
mov
ljmp
push
gs
push
mov
mov
cli
push
sbb
call
mov
adc
jmp
adc
stos
int3
jge
push
adc
stos
sti
mov
lds
add
pushf
out
and
mov
jbe
sbb
mov
adc
pusha
scas
jecxz
jo
xor
aam
in
cld
int
into
pop
repnz
adc
cmpsb
rcrl
jbe
std
out
fwait
in
enter
lahf
movsl
hlt
fisubrs
pop
gs
adc
push
lret
xchg
lret
inc
jg
je
xor
lret
in
movsl
daa
pop
aam
jge
imull
inc
imul
test
sub
dec
movsb
lcall
jle
add
jmp
cmp
xchg
mov
lcallw
insb
or
stos
movsl
loope
imul
fsubrl
into
shll
mov
gs
or
out
addr16
pusha
fxch
jmp
xchg
imul
int3
sub
mov
add
mov
inc
xchg
sub
std
cmp
mov
mov
shl
adc
add
or
sbb
ror
clc
stc
lahf
inc
popf
enter
xorl
arpl
loopne
test
push
mov
mov
and
bound
pop
repz
push
sahf
dec
scas
sub
mov
add
in
mov
xlat
and
xorl
cmc
or
incl
inc
mov
test
mov
mov
imul
jge
xchg
cli
test
add
cmp
lret
movsb
addr16
sbb
mov
adc
or
mov
in
sbb
lret
aas
sbb
inc
popa
jmp
sahf
scas
jno
adc
leave
pop
mov
stos
lods
jne
lds
add
dec
sbb
incb
jge
pushf
adc
mov
jg
adc
jecxz
stos
js
iret
scas
adc
ficoms
dec
in
in
and
cmp
movsb
sub
push
adc
push
sarl
sbb
popa
and
ljmp
sub
nop
sahf
or
pinsrw
adc
dec
in
pusha
or
inc
test
hlt
test
xor
fcmovnbe
movsl
push
movsb
and
sub
xor
ss
mov
test
fisubl
or
sub
jmp
inc
cmpsl
push
fwait
jmp
push
push
in
dec
sahf
cmpsb
movsl
cs
cmp
sbb
fadd
sbb
or
mov
sbb
int
xchg
dec
add
das
pop
or
xor
fucomip
pusha
int3
mov
sub
pop
cli
jmp
les
jge
pusha
mov
orb
xchg
and
imul
aam
inc
sbb
push
ds
dec
repnz
repz
loop
sbb
and
mov
mov
inc
lret
xor
loopne
mov
or
add
dec
stos
mov
lock
jle
push
sub
jnp
add
mov
lea
adc
ss
lock
mov
adc
dec
pop
xchg
scas
pop
sbbl
or
leave
jmp
ds
mov
cs
and
mov
and
sub
iret
jecxz
int3
insb
lea
addr16
jle
adc
sbb
js
aas
jmp
dec
push
dec
cmp
or
dec
fnclex
in
in
or
mov
xor
or
sub
insb
lods
inc
dec
push
aas
out
fs
je
lods
les
and
stos
or
loopne,pn
adc
jmp
add
jl
dec
pop
mov
cmpsl
bound
hlt
adc
mov
adc
fnstsw
sbb
dec
sub
scas
mov
jmp
mov
jmp
xor
insb
shlb
jl
inc
xor
jo
bound
mov
add
jle
mov
hlt
dec
lods
mov
andl
pushf
hlt
out
scas
mov
les
test
dec
inc
mov
ret
add
jle
enter
pop
stc
lods
mov
add
clc
cmp
stos
push
xor
movsl
adc
stc
addr16
imul
dec
sub
cli
dec
jg
mov
and
jg
lret
lods
pop
data16
lods
xor
and
inc
inc
add
add
repz
sbb
fucomip
mov
push
ret
and
xchg
jmp
mov
imul
leave
sub
cmp
lret
mov
or
les
movsb
inc
pop
dec
int3
lahf
mov
mov
mov
lods
scas
movsl
cli
push
cwtl
outsl
xor
lret
jl
mov
mov
stos
jecxz
sub
movsb
mov
fisttpll
insb
cmc
xchg
fstpl
dec
dec
dec
cmpsl
adc
sub
fdivrl
sahf
jecxz
pop
adc
mov
dec
mov
jnp
pop
testb
stos
jb
sub
gs
fcmovu
in
mov
inc
adc
imulb
mov
mov
mov
rorb
cltd
in
rcll
lds
mov
push
mov
jecxz
add
les
add
nop
push
jmp
add
repz
jg
repz
stos
mov
sti
les
fstpt
sarb
in
nop
push
popa
xchg
or
mov
mul
call
lret
sbb
loop
inc
out
mov
ret
sbb
xchg
xlat
inc
pop
inc
or
insb
cltd
lcall
movsl
pop
movsb
mov
lret
in
inc
or
add
insl
gs
lods
into
xchg
test
sbb
sbb
hlt
insb
lcall
sub
js
lea
push
enter
push
insb
adc
mov
or
adc
imul
mov
mov
cli
fists
std
iret
add
sbb
sub
sub
adc
xchg
adc
xlat
aaa
jl
stc
push
ljmp
mov
jp
and
fdivrl
jmp
and
mov
ss
cld
push
adc
cmp
mov
in
sbbl
daa
and
push
cmp
insb
fimull
rol
test
inc
mov
pop
test
add
sbb
sbb
cli
adc
sbb
sub
sbb
jnp
xchg
sbb
and
pop
leave
sub
test
mov
push
stos
stos
rcll
inc
sub
sub
es
lock
mov
movsb
sarb
mov
loopne
les
push
or
pushf
into
test
icebp
outsl
lret
repz
prefetcht0
data16
add
jle
into
fisttpl
xor
sub
out
push
dec
mov
dec
mov
into
stos
repnz
in
sbb
xchg
pop
mov
out
or
sarl
jg
mov
jle
movsl
xchg
test
xchg
rol
mov
scas
push
pop
loopne
cmp
inc
in
in
sahf
movl
aaa
mov
int
cld
inc
in
xor
sub
dec
mov
les
or
int
mov
js
in
pop
mov
stos
xor
adc
jbe
call
fcmovne
add
cs
or
adc
sti
lods
mov
inc
mov
xor
rcrl
add
xor
add
inc
in
insb
push
mov
fmuls
cmpsb
inc
and
and
lret
or
push
in
out
xchg
mov
loope
scas
jmp
add
inc
nop
xchg
jecxz
cwtl
cltd
pop
push
cbtw
xlat
sbb
xlat
leave
in
mov
scas
mov
mov
xchg
fmull
imul
push
enter
loope
mov
xor
sub
xchg
jp
test
js
test
push
aas
or
ljmp
sbb
jbe
push
pushf
jecxz
gs
mov
ljmp
lcall
out
cli
dec
mov
loopne
sahf
inc
sti
les
in
mov
scas
mov
jmp
inc
out
lret
jbe
lods
ret
lock
or
cwtl
leave
jle
sahf
lods
int
xchg
inc
movsb
mov
add
ja
std
ret
lea
in
cs
jl
and
mov
cli
mov
movsb
test
add
loopne
mov
popf
loop
scas
adc
bound
or
inc
jl
inc
cmpsb
push
mov
js
cmpb
js
adc
or
pop
mov
mov
cmp
push
daa
mov
xchg
mov
test
clc
ret
ds
mov
sbb
adc
fpatan
and
lods
jp
stc
mov
out
in
add
or
clc
jl
push
leave
ret
adc
imul
and
js
rorb
paddb
mov
lcall
pop
in
lods
insl
mov
fisubrl
int3
sub
bound
test
sub
dec
push
inc
sub
hlt
out
sub
lret
sbb
pop
inc
inc
cmp
and
mov
sbb
stos
clc
adc
lret
and
into
pushf
in
fldl
dec
fsubr
adc
jecxz
push
xchg
sbb
cld
jns
dec
cmp
loope
inc
add
pushl
cmp
loop
pop
mov
dec
add
cmp
jae
in
rorl
xchg
divl
int3
scas
pop
hlt
jmp
dec
es
bound
or
call
clc
or
xchg
jge
in
sbb
stos
fldenv
push
lret
pushf
test
notl
sbb
sahf
scas
jmp
inc
scas
shrb
fs
fmuls
aaa
mov
and
mov
les
xor
jecxz
xchg
xor
outsl
dec
lahf
xchg
xchg
scas
add
popa
push
mov
push
push
xor
call
out
rorl
mov
mov
sub
ficoml
imul
stos
inc
mov
mov
inc
repnz
mov
sbb
aaa
or
pushf
push
adc
outsl
pushf
or
out
stos
pop
dec
dec
mov
push
pushf
popa
or
pushf
xchg
pop
add
jmp
lcall
sahf
enter
movlps
pushf
pushf
pushf
out
adcb
xchg
add
aaa
arpl
inc
call
mov
add
or
pop
sti
add
jmp
out
prefetchnta
movsb
pop
sbb
inc
pop
testl
mov
mov
and
fisttpl
outsl
add
add
sti
fwait
push
xorps
in
xchg
in
mov
xor
or
hlt
xacquire
add
jl
sub
inc
cld
stc
pop
icebp
jg
dec
jnp
add
xchg
or
das
sbbb
stos
imul
fwait
dec
pop
mov
sahf
ret
or
sbb
aam
and
inc
pmuludq
in
mov
mov
dec
push
push
mov
fwait
push
jnp
push
or
loope
mov
and
lret
cmp
enter
sahf
and
leave
cmpl
dec
addr16
sahf
mov
repnz
jmp
int
adc
ficoms
sub
lret
pop
mov
lods
mov
mov
ds
ret
ja
xlat
shrl
insb
sbb
inc
add
mov
addl
ljmp
icebp
push
cli
stos
push
daa
or
test
mov
cmp
push
sub
sub
out
in
repnz
icebp
lahf
push
or
out
jle
add
jno
xor
stos
push
add
jnp
dec
lock
xor
pop
sub
add
jle
inc
dec
fs
insb
inc
push
dec
fsubrs
pop
loopne
loope
cmpsl
xor
leave
cmpsl
push
and
add
inc
push
test
push
hlt
lods
add
xor
iret
add
insb
imul
cli
mov
hlt
cmpl
in
loope
pop
push
mov
repnz
fmull
or
inc
or
mov
dec
xchg
cli
shlb
mov
or
sti
mov
pop
sbb
es
fstl
push
sub
arpl
imul
sbb
jle
stos
inc
and
test
push
repnz
out
call
push
cmp
adc
fbstp
add
inc
mov
scas
cmp
int
test
adc
push
iret
subb
repz
aad
jp
clc
mov
or
jle
push
adc
dec
dec
adc
ss
rcrb
rorb
mov
insl
mov
and
mov
test
idivl
addr16
ret
loope
sub
in
pinsrw
frstor
mov
mov
subl
and
adc
ljmp
mov
icebp
adc
rolb
mov
sbbb
stc
adc
sub
or
loopw
add
mov
insl
in
sbb
addr16
loope
shr
push
mov
jbe
dec
xchg
repz
mov
mov
popl
adc
repz
lret
push
sbb
jl
dec
gs
add
cmp
sub
cmpsl
insb
mov
loope
xchg
popa
mov
mov
ret
sub
push
shl
adc
mov
nop
clc
sbb
gs
adc
pop
add
xor
aas
or
insb
out
xlat
ret
daa
mov
or
nop
icebp
in
push
es
test
into
stc
adc
cs
sbb
lods
repnz
mov
arpl
int
or
dec
inc
jg
movsb
stos
and
and
mov
enter
dec
in
loope
in
imul
enter
jl
dec
call
mov
repz
mov
pop
mov
hlt
pop
loope
inc
das
lret
in
inc
mov
pop
xchg
mov
in
call
ja
xchg
cmp
sub
leave
jmp
mov
pop
jo
cmpsl
xchg
insb
aad
cmpsl
add
mov
lret
in
pop
ljmp
mov
aam
sub
xchg
test
pop
out
icebp
mov
cld
or
jecxz
and
clc
xor
fnstsw
sub
push
xchg
mov
mov
in
lea
adc
jns
jl
aas
xchg
add
xlat
imul
sbb
adc
jmp
scas
mov
jnp
sbb
stos
xor
imul
xor
cmp
inc
push
repz
leave
mov
mov
cmpsb
ds
mov
jl
dec
or
jecxz
in
call
xor
nop
cmpsl
dec
or
push
and
dec
push
rcr
xchg
xor
data16
lods
fwait
mov
lock
lock
mov
dec
outsb
jmp
out
adc
jns
lods
xor
mov
loop
shll
out
jae
fsubrs
fwait
cmpsl
fldt
pop
mov
add
or
inc
lods
aaa
or
dec
rol
dec
popa
mov
not
sbb
lods
and
aam
scas
ret
mov
add
rcrl
or
xchg
sbb
int3
outsl
jge
in
packsswb
mov
mov
fisttps
in
sbb
dec
push
lods
into
pop
daa
addr16
in
sbb
ljmp
push
add
movsl
pop
out
dec
xor
or
inc
scas
mov
xchg
dec
pop
decl
les
xchg
or
sbb
loope
mov
push
sbb
push
popf
in
and
and
out
pop
dec
jge
aam
out
shl
clc
repz
in
mov
or
pop
add
dec
enter
or
in
shr
sub
add
add
mov
xchg
sub
arpl
fcom
fcoms
fldenv
cwtl
dec
enter
into
lds
sub
or
in
cmp
out
aam
inc
icebp
out
sub
mov
jne
orb
test
mov
sub
push
out
sub
stos
sti
xchg
enter
test
adc
push
aad
sub
sahf
and
push
jecxz
in
pop
cwtl
fbld
pop
jp
xchg
or
lock
pushf
jnp
add
int
jecxz
or
sub
mov
test
cwtl
les
movsb
in
sbb
rcll
imul
and
test
lods
or
fldl
cmpsl
stos
jmp
call
or
fcomi
rcl
and
sbb
mov
fisttpl
jne
pusha
stos
push
sbb
sub
das
sub
out
lret
and
insb
incb
lret
sahf
stos
lcall
lret
jmp
mov
test
jecxz
repnz
inc
mov
lret
sub
lods
aam
sbb
insl
pop
sub
jecxz
pop
fnstcw
dec
dec
jmp
out
mov
and
insb
ret
cmp
jecxz
sub
lods
in
pop
dec
ret
inc
add
and
ljmp
mov
sub
in
or
sbb
aam
add
lret
lods
mov
xlat
xchg
push
repnz
fists
push
out
sti
imul
sub
pop
xchg
mov
in
sub
sets
dec
push
xchg
or
mov
ret
jo
imul
jle
lret
arpl
gs
loopne
data16
xchg
add
dec
test
sub
pop
fsubrs
in
cmpsb
sub
sub
movsb
dec
jns
lret
out
jecxz
push
jge
adc
jle
push
push
mov
out
loope
stos
shlb
xor
pop
aam
pop
out
dec
or
cmp
imul
add
ja
xchg
jmp
insb
mov
movl
sbb
lods
lods
sti
popa
or
out
mov
and
pop
subl
mov
in
pop
ret
sub
or
pop
add
pop
testb
jnp
pop
scas
xchg
pop
out
test
mov
ljmp
or
xchg
mov
xor
pop
std
loopne
and
out
xchg
lret
ljmp
pushf
add
lcall
inc
mov
ljmp
out
dec
and
std
jp
aad
imul
subl
ljmp
jle
in
pop
movb
repnz
mov
int
dec
sbb
ljmp
pop
je
out
inc
shll
push
js
into
and
or
xor
enter
outsb
repz
cs
mov
push
or
scas
test
jecxz
lret
cmp
push
fcoml
out
mov
xorl
mov
cmp
bound
push
add
shr
repz
jge
mov
pop
out
sti
xor
ror
sub
out
mov
adc
push
les
jno
xorl
and
add
or
adc
xor
pop
cmp
and
gs
jp
jae
ret
xor
popa
ja
hlt
nop
lds
movsl
ja
dec
mov
adc
sbb
xchg
out
test
test
mov
or
movsl
pmaxub
xor
mov
outsl
inc
add
mov
ljmp
mov
sahf
sub
imul
jns
push
pop
test
and
add
loop
mov
pop
xchg
push
jne
lods
add
adc
stos
dec
adc
push
test
iret
or
and
faddl
and
and
js
pop
adc
movl
sbb
sub
loope
xchg
xor
jge
sti
cli
lret
lea
mov
cmp
bound
fists
daa
rolb
das
cli
xchg
lds
inc
dec
or
adc
jl
leave
lret
jmp
inc
loopne
xchg
or
sarb
jnp
in
push
xchg
cmp
and
int3
pop
scas
jmp
pushf
jnp
cwtl
cmp
pop
mov
dec
movsb
daa
out
ret
nop
cs
fnstcw
cmp
jp
sbb
mov
cli
inc
or
push
sbb
incb
cmp
int
pop
lea
jb
xchg
divl
cmp
call
out
mov
sbbl
das
daa
pop
sahf
jg
and
jmp
or
les
std
jnp
and
cmpsb
inc
rcrb
lods
pop
je
jns
pop
fwait
jge
jne
jmp
shr
dec
fldt
jnp
in
push
inc
lea
dec
mov
mov
cmpl
lods
addr16
out
arpl
mov
or
mov
jno
cld
sbb
cmp
stos
mov
incl
sahf
jmp
xor
lret
cwtl
movsl
sub
dec
test
dec
imul
stos
sbb
sub
arpl
aas
mov
mov
sahf
inc
in
inc
fadds
icebp
movsb
xor
push
jne
pop
scas
outsb
sbb
or
push
mov
out
add
rorb
inc
dec
adc
push
add
mov
mov
adc
fstpt
cld
mov
movsl
in
mov
xlat
dec
mov
mov
mov
pop
insb
mov
aaa
lret
out
fcoms
sub
out
xorb
ret
mov
sbb
mov
fisttps
adc
cli
cld
in
scas
mov
and
jle
cmp
fs
jmp
int3
lods
lods
cld
jge
pop
int3
sbb
or
cmpsb
adc
test
mov
push
cmp
pop
push
imulb
mov
dec
iret
cli
xor
insb
jne
jge
and
push
or
test
jno
out
cmp
scas
push
pop
outsl
repz
lds
cmp
and
mov
dec
inc
pop
mov
sub
cmpsb
dec
sti
in
add
cmp
pop
sahf
enter
inc
or
dec
leave
fsubrp
dec
in
jle
jno
in
imul
imul
mov
xor
cld
in
in
jmp
lret
sub
push
outsb
imul
mov
call
stos
in
lea
aaa
jnp
xchg
and
and
mov
loop
jne
subb
stos
pop
inc
mov
xchg
push
xchg
ror
dec
mov
and
jge
sub
aam
jecxz
sti
les
call
hlt
add
mov
jp
jmp
mov
int
or
add
fcomip
pop
gs
int3
lods
pop
aam
pushf
shr
cmp
xchg
dec
dec
adc
movsl
mov
sbb
fisttpl
sub
out
sahf
ljmp
add
sub
mov
into
jns
mov
mov
jecxz
adc
fwait
add
repz
aas
xchg
call
inc
les
fildll
lods
jb
enter
lcall
jne
sahf
roll
dec
inc
adc
fiaddl
fidivl
pop
outsl
jle
push
add
mov
or
mov
xor
js
cli
cld
add
dec
mov
or
aam
push
mov
scas
js
add
int
insb
jecxz
adc
cmpsb
mov
dec
dec
push
jns
ja
lahf
sub
mov
sti
pop
and
fwait
cmc
adc
dec
sbb
xor
mov
cltd
sub
add
std
push
lods
into
sbb
inc
xor
push
adc
punpckhwd
sub
shr
mov
insb
outsl
leave
int
or
stc
pop
sbb
aas
pushf
out
xchg
or
sub
lods
nopl
jle
xor
loop
lods
add
stos
jge
dec
add
dec
sub
add
or
cmp
enter
mov
aam
ja
mov
lcall
out
jmp
push
pmaxsw
ror
or
jmp
out
pop
cmp
jb
or
cmp
ret
mov
adc
movsl
shrl
stos
in
popa
fildl
dec
out
jmp
fdivs
mov
add
jb
loope
pop
dec
in
sahf
push
into
pop
les
adc
mov
push
testb
jmp
movsl
dec
jl
loope
hlt
push
xchg
fcoml
mov
jl
xlat
sti
les
pop
scas
nop
popf
push
jge
inc
pop
mov
das
gs
ror
aaa
inc
mov
in
jge
and
lcall
add
mov
leave
ret
push
std
xlat
pop
adc
jp
mov
imul
push
or
mov
fiaddl
add
or
outsb
in
xchg
adc
pusha
jns
imul
insb
popf
into
icebp
pop
fildl
mov
sbb
push
xchg
push
std
xor
out
mov
ret
sub
fidivrl
push
pop
fmuls
or
mov
ljmp
scas
jl
push
test
mov
int3
in
push
mov
sub
and
jne
out
fwait
inc
cmp
push
outsl
pop
stos
mov
mov
push
dec
jle
and
sub
xor
pop
push
cli
insl
not
std
int3
mov
lea
clc
xchg
or
addr16
lods
rep
enter
sub
imul
shrd
mov
sub
mov
rorb
ljmp
xor
push
fidivl
and
jmp
inc
add
mov
sbb
dec
dec
popf
ret
insb
sbb
insb
popl
lea
fs
jl
dec
or
and
scas
or
lret
xor
out
imul
je
mov
pop
les
jg
mov
mov
int
mov
test
inc
jne
or
mov
insl
sbb
inc
sub
data16
cmc
and
loope
mov
sbb
dec
aam
sahf
dec
jg
lret
or
lcall
or
inc
or
or
cmc
scas
mov
loop
imul
in
xor
js
sbb
mov
orl
hlt
or
loopne
stos
jl
fnstsw
dec
inc
and
adc
cmp
frstor
jle
mov
loope
insl
call
push
adc
mov
dec
mov
or
and
adc
ljmp
inc
inc
stc
sarb
cs
or
push
sub
adc
fstl
dec
push
dec
dec
das
out
stos
in
repnz
or
stos
int
fidivrl
mov
gs
xchg
movsl
imul
cmp
mov
jl
test
xchg
or
sti
adc
sub
int3
lods
push
dec
add
es
test
out
sbb
sub
stc
xchg
or
stos
or
push
scas
push
lret
outsb
sbb
or
mov
sub
shl
pop
push
mov
je
repz
pop
sub
hlt
in
insl
aas
mov
mov
mov
iret
dec
xchg
clc
adc
pushf
mov
out
call
movl
hlt
xor
cs
test
ljmp
sub
cld
imul
add
sbb
mov
es
call
test
jl
stc
gs
mov
lret
mov
pop
je
insb
add
insb
dec
inc
imul
xchg
and
cs
inc
test
mov
mov
dec
testb
sbb
es
imull
imul
mov
inc
cmpsl
lds
cld
pop
mov
add
js
mov
and
aaa
insb
adc
cltd
and
mov
mov
sti
dec
cmp
lods
sub
dec
fbstp
loope
mov
gs
adc
sub
mov
loopew
out
mov
pop
sahf
clc
push
and
fists
cwtl
mov
pushf
repnz
xchg
loope
jmp
jmp
mov
dec
hlt
movb
shlb
push
mov
sahf
imul
push
and
les
xchg
negb
movsl
loop
popf
fwait
in
adc
inc
pop
jle
mov
aam
sahf
lahf
pushf
fs
jge
adc
or
or
outsl
out
into
stos
dec
in
out
addr16
sub
shlb
sarb
mov
inc
sahf
push
in
pop
enter
and
icebp
addr16
out
jae
mov
lret
jp
adc
or
out
add
shll
or
jnp
ret
lock
pop
movsl
add
push
push
mov
imul
jbe
aaa
mov
lea
pop
xor
inc
pop
mov
sbb
xchg
cld
or
cli
jl
pushf
faddl
mov
inc
gs
fmull
call
or
ficompl
int3
into
push
lods
or
loope
sahf
into
add
jecxz
out
data16
xchg
jbe
arpl
outsl
jb
push
cmp
jmp
addb
ret
imul
cmp
aam
mov
dec
aad
out
mov
jle
rdtsc
enter
hlt
dec
addr16
repnz
adc
in
out
mov
adc
ss
dec
xchg
mov
lret
xor
jmp
mov
lcall
or
test
pop
dec
sub
int
lahf
pusha
mov
out
push
push
mov
sub
cmp
call
lods
dec
lret
clc
in
and
jmp
adc
imul
jne
in
xor
jmp
movsl
scas
sti
jge
xor
outsl
fidivl
xchg
loop
in
cmpsl
sbb
cmpsb
adc
jle
pop
loope
sbb
in
xor
dec
movsl
mov
pop
dec
add
mov
out
sbb
push
mov
insl
dec
jle
popa
sub
push
fnsetpm(287
sti
imul
pop
mov
push
aam
int
push
or
fsubl
mov
rorl
leave
mov
clc
sti
int3
mov
push
or
repz
aad
mov
arpl
insl
mov
lea
jb
xor
inc
pushf
mov
xor
add
push
push
in
inc
pop
bound
pop
ret
pop
out
rcll
sub
inc
popl
mov
jns
mov
pop
fstps
mov
call
hlt
in
add
test
es
xor
add
lods
test
add
add
out
arpl
mov
mov
rorl
jb
add
scas
push
imull
cmp
out
scas
movsb
ret
xchg
sub
add
mov
sbb
inc
jae
or
ds
xchg
adc
inc
add
pop
sbb
mov
clc
or
adc
jne
mov
push
stc
pop
inc
pop
inc
stos
cmpl
or
mov
cmp
sub
push
jl
jnp
nop
test
sbb
lret
js
or
or
sub
scas
mov
leave
dec
movsb
sbb
push
dec
or
adc
sbb
mov
cli
mov
iret
sbb
inc
shll
dec
or
mov
in
lods
mov
dec
jb
out
xor
sbb
sub
lcall
ret
clc
mov
adc
clc
scas
rorb
rcr
idivl
lret
jb
sub
mov
or
inc
jecxz
nop
mov
mov
or
ret
test
sbb
in
dec
sahf
add
lret
in
or
cmpsl
push
mov
adc
out
jmp
repnz
pop
cmp
or
push
sub
movsl
scas
sahf
adc
push
jb
test
bound
cmp
arpl
arpl
leave
pop
dec
scas
dec
mov
or
orl
push
jl
scas
inc
mov
pop
enter
loopne
nop
add
sahf
add
movsl
lret
add
sub
push
jg
push
arpl
inc
xor
mov
stos
mov
sbb
cld
cmp
clc
mov
aad
popa
mov
jnp
xor
add
add
mov
or
push
mov
mov
cmp
mov
or
sub
movsbl
loopne
mov
or
lret
clc
mov
xlat
or
push
add
mov
loopne
iret
aam
pushf
fildll
add
push
jnp
scas
jmp
movsl
adc
mov
push
popf
adc
in
sbb
jge
xchg
mov
cmpsl
out
test
mov
mov
or
sti
add
adc
cld
cmp
add
jl
ss
mov
ljmp
ja
cmp
push
fldt
stos
dec
stos
sbb
sub
cli
fcoms
aam
in
sub
pop
mov
cld
mov
and
xchg
cs
test
movsb
movsl
stos
cs
xchg
insb
loopne
imul
sbb
adc
arpl
lahf
add
das
mov
scas
mov
outsb
loop
outsb
add
adc
push
sub
rcll
dec
sahf
mov
mov
mov
push
inc
jo
dec
sbb
sub
or
imul
mov
cmp
pusha
and
push
cmp
jb
or
loop
jno
loopne
subb
inc
movsl
mov
dec
out
adc
dec
repz
fimuls
leave
adc
or
mov
adc
dec
xorb
add
jp
sbb
xchg
dec
mov
out
mov
or
and
push
leave
shll
dec
push
adc
insl
pop
inc
sbb
shl
jne
mov
pop
and
lahf
push
jmp
pop
or
pop
daa
loope
xchg
daa
ret
sbb
cmp
push
add
xchg
out
in
stc
inc
cld
push
arpl
cld
rolb
lods
hlt
leave
sbb
xchg
add
in
sbb
push
dec
xchg
imul
add
fisubs
or
movsb
int3
adc
sub
push
movsb
loope
enter
insb
fimuls
and
add
jg
outsl
or
dec
add
adc
enter
jnp
fsubr
push
jns
dec
push
fs
in
test
popf
or
fnstsw
sbb
in
jmp
dec
call
xchg
leave
inc
fbstp
add
scas
mov
ljmp
jno
pop
mov
mov
inc
pop
cld
test
in
shll
push
sahf
inc
mov
push
xchg
fs
adc
insb
dec
sbb
sbb
jmp
mov
mov
stos
sahf
imul
jb
cli
test
enter
movsb
cmpsb
rol
fisubs
cmc
ds
sub
lcall
cltd
int3
mov
inc
outsl
mov
sbb
imul
mov
stc
push
outsl
add
lret
mov
or
cmc
test
cld
repnz
mov
sti
clc
cs
jge
imul
lea
or
pop
inc
loope
mov
in
jmp
jb
hlt
fcoms
sbb
or
jno
in
gs
stos
fsubrp
mov
hlt
push
lods
movsl
pop
add
repnz
push
enter
imul
sbb
jne
xchg
mov
jmp
cld
pop
scas
outsl
jmp
or
add
out
jo
stos
and
adc
add
pop
add
out
leave
push
add
push
mov
mov
mov
xorl
mov
mov
push
xchg
xchg
dec
ljmp
add
dec
mov
rclb
sbb
sub
stc
sbb
or
add
mov
dec
hlt
jle
xchg
pop
jnp
stos
lea
xor
int3
sbb
cmp
push
stos
lcall
or
jno
sbb
jle
push
sbb
cmp
mov
jle
icebp
arpl
or
push
sub
inc
stos
das
adc
repz
sbb
aad
xlat
push
cmp
add
call
mov
stc
aaa
aas
dec
data16
push
mov
xchg
mov
stos
xchg
push
inc
inc
dec
jns
inc
push
sbb
xchg
jnp
mov
icebp
dec
add
cmp
pushf
repz
jle
mov
iret
push
aaa
adc
lds
add
cmp
imul
lret
fs
in
add
gs
push
pop
jno
sub
jle
clc
fucomi
add
dec
dec
inc
pushl
loop
fidivs
push
xchg
push
loop
test
sub
rol
gs
and
push
dec
add
in
inc
mov
adc
subl
adc
and
lret
cmp
add
pop
fisttpl
stos
int
jb
sarl
loope
jl
scas
rcrl
adc
loop
es
mov
inc
rcrb
pop
xor
gs
push
popa
or
in
imul
sbb
add
cli
shlb
push
ds
jnp
in
arpl
push
sub
test
int3
mov
loope
sarb
mov
adc
arpl
mov
dec
jp
or
mov
mov
push
sub
sbb
mov
mov
addr16
lods
mov
iret
inc
test
dec
rcll
lret
aas
repnz
jmp
sarb
movsb
sahf
jns
mov
cltd
enter
int3
lret
out
inc
sub
addb
ja
mov
push
leave
movsl
mov
push
bound
mov
clc
dec
push
adc
cltd
xor
lret
jmp
mov
fiadds
loope
daa
sahf
pop
dec
and
int3
dec
icebp
xchg
mov
sub
sbb
pop
loopew
mov
pop
mov
insl
jge
and
jge
scas
sub
add
ficompl
mov
push
out
mov
repnz
mov
and
ljmp
insb
in
ljmp
lahf
xor
mov
enter
add
mov
js
hlt
gs
dec
jmp
jge
fsubrs
bound
pop
or
mov
sbb
fcmovb
sbb
ss
xchg
jp
mov
xchg
out
imul
xchg
imul
imul
sahf
mov
lock
lret
dec
and
stos
ror
sbb
ret
jo
leave
adc
mov
add
fisttpl
testb
loopne
jl
sbb
jle
icebp
fdivp
mov
scas
imul
outsl
bswap
push
repz
shlb
pop
hlt
dec
jl
addr16
fisttps
enter
addr16
dec
dec
aam
mov
dec
insl
sbb
aam
adc
add
inc
push
stos
adc
stos
test
jb
mov
scas
cmp
sbb
rcrb
and
xor
clc
lods
int3
mov
outsl
jmp
nop
mov
jne
in
sar
lcall
enter
pop
mov
dec
cmpsb
inc
test
inc
pushl
cwtl
rcl
dec
icebp
dec
and
test
out
lods
scas
jo
orl
jns
add
sbb
ret
shrb
int3
js
fwait
dec
dec
inc
sti
push
dec
jp
jmp
aas
or
jp
xor
xor
lea
adcb
or
xchg
imul
cmp
imul
cs
or
roll
xchg
dec
dec
pop
sbbl
mov
push
in
cmp
inc
mov
sahf
inc
add
mov
mov
fisttpll
insb
jle
inc
mov
mov
int3
sbb
dec
mov
and
and
add
ja
dec
mov
cwtl
sbb
jo
jp
sarb
and
adc
sub
mov
sub
loopne
cld
int
aad
pushf
or
or
loop
jmp
testl
insl
bnd
lcall
nop
mov
lret
xchg
fwait
call
hlt
fisubl
fnsave
pop
jp
push
dec
sti
jb
inc
int
sub
mov
shlb
xchg
fisttps
add
arpl
hlt
in
xchg
insb
cwtl
test
out
addr16
jmp
loopne
imul
stos
or
add
cmp
ret
cmp
icebp
insl
cli
sbb
int3
mov
sub
mov
enter
ret
and
lret
psllw
jns
mov
and
lods
icebp
pop
push
bound
push
cmpl
adc
xchg
xchg
out
sub
jno
mov
ljmp
cmp
out
jg
mov
js
mov
jo
sti
jb
in
adc
xlat
dec
push
aaa
enter
insb
xchg
jno
int3
lret
lret
shrb
cmp
sub
adc
cwtl
adc
in
lock
call
mov
mov
cmp
les
xchg
adc
or
shr
ljmp
inc
rol
jp
aam
xor
dec
movsb
mov
roll
or
mov
fs
mov
adc
xchg
cwtl
inc
cmp
sahf
gs
jg
and
call
int
jle
push
popa
inc
xchg
pop
pusha
sbb
mov
and
test
imul
mov
push
movsb
scas
xor
mov
lods
stos
pop
xchg
or
fs
fsubs
rcll
mov
or
out
mov
aaa
fwait
cmc
stos
sub
jle
mov
ret
jno
lahf
les
pusha
cltd
dec
ficomps
sub
stos
in
out
push
arpl
test
dec
test
mov
jle
jbe
cmp
loope
or
jo
scas
bts
je
scas
ds
dec
mov
scas
pusha
xchg
jle
mov
mov
out
and
movsb
push
mov
rorl
add
sub
les
add
pop
mov
adc
shl
pop
fdivrl
unpcklps
sbb
jp
jecxz
push
add
xchg
movsl
movsb
data16
pop
and
mov
imul
mov
cwtl
andb
mov
mov
dec
gs
loope
sub
mov
mov
test
sub
sbb
in
adc
mov
stos
shlb
mov
insb
call
xchg
sub
mov
in
xchg
jb
add
or
push
or
les
and
pop
enter
adc
cmpsl
scas
xor
repz
fists
popa
aam
dec
or
cltd
sub
or
jns
and
sbb
scas
add
mov
add
xor
aad
arpl
or
pop
repnz
inc
mov
push
push
jne
outsl
sbb
das
inc
xor
sahf
imul
dec
cmp
mov
mov
pushf
mov
ljmp
fwait
cs
repz
mov
pop
add
mov
jmp
stos
shll
rorb
mov
gs
scas
movsb
pop
sub
out
cmpsb
test
lods
adc
out
lods
test
xor
pusha
insb
lret
add
jl
push
stos
mov
out
or
sbb
or
sub
std
insl
or
insb
add
xchg
and
sahf
xchg
inc
mov
sub
or
or
repnz
scas
or
jb
cmp
xor
dec
mov
cmp
lea
addl
or
mov
leave
xor
mov
mov
stos
mov
sbb
cld
push
sub
sbb
mov
xor
ljmp
mov
mov
pushl
ret
add
sub
add
jne
jge
test
add
jecxz
jle
mov
mov
test
add
dec
dec
xor
mov
cs
add
leave
xor
insb
aad
scas
pop
mov
ror
out
rorb
jecxz
dec
dec
jmp
lcall
scas
sub
dec
mov
movsb
lods
jp
lret
sub
dec
jg
adc
lock
xchg
push
scas
lret
test
add
cmp
jmp
pop
shll
mov
sub
mov
xor
je
in
xchg
mov
in
sub
cwtl
pop
xor
cs
shll
adc
push
decl
mov
leave
ljmp
push
sarb
sbb
or
or
adc
dec
xlat
test
pop
test
add
adc
or
pop
jl
xchg
jno
pop
shrl
push
cmc
add
shrl
inc
xchg
ret
or
inc
sbb
dec
sbb
or
shrl
out
push
sbb
push
roll
adc
jmp
scas
cmpsl
dec
lret
jno
pop
cli
icebp
inc
cmp
jns
mov
inc
es
jne
or
sub
lea
jge
jnp
mov
or
int
mov
inc
sti
lret
mov
jge
cmpsl
hlt
pushf
pop
add
rorb
test
repnz
push
mov
mov
add
mov
pop
aam
jl
call
flds
inc
pop
lret
mov
insl
lret
fucomi
xchg
pop
fldt
jp
sub
jle
mov
lods
das
sahf
cmp
js
aam
jge
lea
and
out
mov
test
imul
iret
jle
or
mov
mov
cwtl
std
push
jge
or
inc
mov
scas
in
xor
movsb
or
mov
sub
pop
mov
adc
cmp
or
and
jecxz
xchg
or
movsl
mov
dec
push
adc
sbb
mov
mov
push
movsl
leave
fstpt
aam
dec
scas
flds
pop
fneni(8087
test
dec
lods
add
stos
push
scas
inc
fwait
repnz
adc
add
inc
insb
dec
mov
sub
lds
pop
lock
push
mov
jge
mov
jle
jmp
adc
test
mov
push
cmp
sbb
sub
ds
sbb
cltd
arpl
shlb
mov
repz
mov
xchg
sbb
cmp
mov
adc
arpl
cmpsb
repz
fiaddl
cs
lret
push
dec
inc
loopne
push
repnz
mov
lret
out
dec
mov
or
inc
scas
xor
ds
dec
das
mov
stos
nop
sti
stos
test
mov
pop
jns
sub
adc
pop
cli
xchg
sbb
mov
inc
push
paddb
cs
movsb
cwtl
or
outsl
movsl
cmp
mov
push
xchg
dec
fldt
jno
les
pop
repnz
loopew
jge
and
pop
gs
cmpsb
fcmovnu
mov
lret
mov
adc
into
mov
or
lret
popf
shrb
xchg
lret
xchg
mov
out
lods
adc
imul
mov
cld
xchg
pop
push
clc
fwait
mov
aad
imul
adc
pop
dec
sbb
lods
and
push
ret
popf
adc
repnz
inc
mov
gs
pop
in
iret
js
mov
roll
xor
in
dec
or
jne
dec
lea
cwtl
dec
pop
loope
mov
test
jne
lods
add
and
jle
adc
or
das
and
and
pop
in
jmp
sti
jl
and
mov
push
push
push
xor
pop
or
scas
add
mov
insl
pop
outsb
es
stos
adc
push
add
mov
insb
inc
push
push
push
adc
mov
loopne
out
xchg
lods
adc
in
adc
out
adc
jns
insb
movsb
ds
test
add
mov
jnp
dec
lods
jne
sub
js
sbb
push
enter
fmull
aaa
loopne
rolb
mov
movsb
dec
mov
int3
pop
nop
loopne
and
cltd
leave
fucomi
mov
mov
rcll
push
shrl
lods
int
jb
mov
int3
xchg
mov
or
inc
sarb
adc
dec
sti
popa
int
mov
adc
dec
mov
jns
outsb
fldenv
jbe
shlb
sub
ret
mov
aaa
lods
adc
out
data16
dec
imull
lods
push
in
mov
and
push
sbb
inc
push
and
lods
add
popf
mov
and
lret
or
mov
xchg
sub
imul
cmpsb
mov
dec
mov
sub
add
jb
pop
leave
jle
ret
xchg
sahf
inc
ljmp
push
mov
lret
add
add
mov
push
push
xorb
or
lcall
mov
and
lods
fiaddl
adc
cmpb
rorl
lcall
sub
ror
mov
mov
pop
test
div
out
imul
adc
test
inc
add
add
adc
adc
add
dec
addr16
sbb
jnp
push
insb
adc
insl
sub
mov
adc
out
sbb
push
call
repnz
pushf
xchg
xchg
roll
mov
mov
cwtl
rcrl
sub
inc
int
jl
call
push
sbb
mov
pop
mov
mov
fistl
mov
adc
icebp
mov
cmp
dec
inc
out
sbb
and
ret
andb
or
inc
fmul
ljmp
call
pop
lock
dec
dec
inc
or
jmp
outsb
lods
jmp
push
les
mov
fcomps
xchg
xchg
jae
sbb
test
pusha
push
pop
cwtl
shr
and
sub
repnz
inc
rolb
dec
jl
call
push
sbb
or
push
ret
inc
or
leave
mov
adcb
mov
xchg
gs
addr16
cwtl
les
call
repnz
add
xchg
cmp
movsl
int
sub
dec
fisttpl
stos
addb
jp
sbb
xor
mov
push
dec
subl
adc
ss
pushf
pop
sarb
fwait
push
cmpsl
mov
adc
jns
mov
xchg
add
rorl
andl
pop
lock
es
jno
inc
jnp
lds
test
pushf
and
sbb
xor
mov
lods
dec
scas
cltd
call
or
xchg
jbe
popf
popf
jl
pop
dec
jl
fisttps
movsb
popf
test
stos
xchg
addr16
mov
insl
cmp
pop
addl
add
out
sub
and
dec
jmp
jl
test
xor
aas
adc
push
lea
pop
pop
in
fmul
sub
sub
orl
mov
leave
out
test
jl
mov
test
adcb
adc
pop
cld
mov
int3
cmpsl
adc
inc
pop
leave
inc
lret
jl
sbb
mov
enter
xchg
mov
mov
mov
fcompl
addl
out
mov
aad
sbb
or
adc
clc
stos
jle
repz
mov
xchg
icebp
mov
js
mov
faddl
xchg
mov
repnz
shrb
ficoms
sti
orl
rorb
scas
jle
jne
ret
imul
out
in
jle
fsubs
fisubl
mov
push
dec
bound
cld
dec
pop
push
sahf
dec
xor
sbb
cmp
jno
test
in
out
adc
les
clc
adc
xchg
stos
cmp
xor
and
sub
les
dec
loope
dec
leave
ret
sbb
xchg
dec
testl
pop
shll
jno
sti
jle
std
push
in
mov
pop
push
je
fs
ljmp
mov
addr16
hlt
pop
lods
add
notb
scas
or
aam
fdivl
or
jo
ret
push
xchg
mov
outsb
cli
outsb
lea
dec
inc
aad
imul
jle
loop
adc
cld
and
scas
dec
into
jns
mov
imul
les
or
test
cmpl
xchg
mov
or
jle
and
push
movsb
stc
in
mov
and
mov
fldl2e
shll
movsb
jle
and
jge
mov
test
dec
cmp
push
popf
and
add
fadd
ret
jb
lea
adc
jmp
push
jmp
push
lea
mov
in
ss
lods
push
xor
inc
push
das
pop
cmp
lret
cs
mov
cmc
enter
mov
mov
test
movsl
nop
mov
dec
sahf
inc
test
es
leave
inc
bound
les
enter
dec
cmpsl
cmc
jge
adc
int
dec
mov
jle
scas
xor
push
stos
aad
insl
lds
mov
mov
mov
cs
imul
add
clc
xor
sub
in
sub
push
imul
push
xchg
sbb
xor
bound
jne
insb
daa
dec
xor
inc
movsl
xor
imul
in
sahf
xor
push
sbb
xlat
adc
inc
cmpsl
lea
mov
cs
push
adc
ss
movsb
mov
sahf
mov
push
xchg
jnp
xchg
adc
stos
xor
fdivrs
jne
inc
pop
pop
lea
mov
faddl
sti
mov
mov
ret
sbb
mov
js
cmpsl
aam
test
xor
pop
mov
divb
popa
fildl
sub
push
test
pop
test
out
ret
inc
xchg
addr16
adc
lods
sti
push
cmp
mov
jo
mov
jecxz
jg
adc
jnp
add
jp
mov
inc
jns
mov
test
addr16
mov
aaa
insl
lods
mov
fisttpl
pushf
fiaddl
repnz
shlb
cmpsl
insb
faddl
mov
lods
xchg
cmp
and
mov
mov
dec
dec
sub
or
xor
mov
mov
pop
inc
mov
sahf
cmc
xlat
jge
cmp
xor
mov
cltd
fnstenv
lods
mov
xlat
dec
pushf
nop
je
mov
mov
fimuls
test
inc
and
sbb
xchg
movsl
out
cs
test
leave
rorb
std
iret
imul
dec
add
sub
lods
lea
add
mov
and
aam
scas
insb
xor
mov
cmpsb
lock
mov
xchg
outsb
inc
lret
xor
jns
cmp
and
jl
imul
sbb
inc
xchg
sbb
insb
cmpl
adc
mov
xacquire
mov
sub
or
fwait
add
lcall
mov
inc
jge
sbb
mov
hlt
daa
push
mov
push
jecxz
cmp
push
bound
mov
xor
imul
xchg
mov
stos
sahf
or
ret
xor
lret
lret
add
or
sbb
stos
mov
push
mul
lahf
stos
popf
jbe
mov
mov
sbb
jns
mov
jle
rorb
push
add
stos
jmp
jg
or
mov
sub
add
push
insb
adc
scas
cmpsb
test
or
lock
jnp
mov
mov
mov
aam
jge
sub
mov
das
xor
cwtl
add
adc
movsl
cmp
sub
out
cmp
mov
daa
movsb
or
pop
jge
add
or
and
inc
jnp
mov
sbb
pop
cmpsb
xchg
les
push
mov
leave
into
arpl
in
inc
cmp
cmp
or
xor
rcl
scas
bound
bound
nop
xor
data16
lret
les
jmp
out
pop
dec
ficompl
mov
xor
mov
mov
aaa
sbb
div
xadd
mov
scas
jb
dec
xlat
jmp
ja
cli
jg
add
call
adc
xchg
aad
lock
dec
ljmp
mov
std
movsb
sbb
ds
or
xor
sbb
dec
pop
or
setg
mov
stos
push
pop
or
mov
imull
lcall
popf
mov
imul
in
add
inc
mov
sti
pop
les
fdivrl
gs
imul
shr
out
adc
test
jmp
pop
sbb
dec
xchg
jecxz
mov
iret
daa
or
inc
or
mov
push
adc
mov
movsl
aaa
dec
sahf
bound
push
insb
cwtl
ds
out
js
pop
lods
sbb
test
cwtl
js
mov
lods
push
rcrl
mov
pushf
scas
leave
cmp
push
daa
js
jbe
mov
xchg
lds
push
pop
xor
jbe
adc
out
outsb
mov
das
inc
or
fsubl
int3
add
pop
cwtl
and
and
loop
adc
stos
adc
cmp
inc
pusha
pop
jmp
insb
add
mov
or
mov
cmp
stos
or
subl
adc
daa
or
aas
pop
xchg
dec
inc
xchg
mov
push
adc
push
push
push
jo
jg
mov
incl
mov
sbb
mov
stos
cmp
ret
inc
outsb
mov
xchg
mov
lcall
lcall
enter
push
xchg
lock
dec
daa
sahf
cld
orb
sahf
adc
fs
lds
std
nop
or
ljmp
and
popa
cmp
orl
mov
mov
in
sub
dec
jle
jmp
xchg
mov
and
push
sahf
bound
mov
jns
mov
stc
mov
pushf
push
mov
or
fsubrl
test
insb
cmp
mov
into
enter
enter
pop
clc
sub
add
cmp
mov
out
outsl
or
xchg
in
iret
dec
call
shrb
adc
pop
adc
xor
mov
jl
xchg
xorl
xchg
or
adc
mov
add
xchg
cmp
and
sbb
scas
inc
mov
inc
inc
inc
push
dec
out
int
xchg
push
dec
pop
xlat
movsl
je
popf
fiadds
add
add
fwait
adc
arpl
ror
dec
les
in
adcb
add
xor
and
mov
push
loop
mov
aaa
enter
add
mov
sub
mov
int3
imul
rorb
rolb
cmp
loopne
mov
push
daa
jg
pop
enter
xor
ret
push
jmp
loop
dec
aam
sub
jecxz
pop
xor
in
sub
inc
adc
lea
popa
out
scas
cmp
out
int3
jbe
adc
fs
mov
add
add
daa
jg
aam
incl
sahf
loope
mov
adc
add
scas
stos
inc
cmpsb
stc
testb
mov
add
fildl
es
or
sub
lret
scas
ret
scas
jecxz
outsl
insl
dec
adc
lds
lahf
lods
and
mov
lahf
jno
pavgw
mov
mov
test
outsb
mov
inc
scas
roll
les
loope
int3
jle
push
push
in
push
lret
xor
push
stos
sub
dec
cld
xor
sub
push
dec
aas
lret
and
jo
inc
adc
movsl
lahf
jl
loopne
mov
push
mov
in
fadd
adc
sahf
sbb
loop
sub
sarb
imul
insl
jne
jp
hlt
insb
xchg
scas
sbb
lret
pop
lock
out
pushf
or
add
int3
adc
iret
xlat
push
fdivrs
enter
test
int3
add
push
inc
jp
mov
lock
lret
nop
and
sub
in
jmp
mov
pop
push
aam
jne
stos
sarb
test
das
js
xchg
dec
mov
out
and
adc
fcoms
sbb
sbb
addl
mov
or
lods
rcrl
cltd
push
mov
mov
inc
fcoml
xchg
cmp
test
mov
imul
adc
pop
cmpsb
loopne
loope
insb
push
cmp
jge
pop
or
push
jae
fs
dec
add
imul
jecxz
in
push
cmp
or
pop
jmp
scas
les
daa
mov
call
mov
or
jmp
nop
movsl
xor
mov
test
rol
subb
xchg
cmc
push
pushf
scas
stos
jno
dec
out
inc
mov
adc
movsb
shlb
add
test
inc
adc
daa
test
movsl
cs
mov
dec
imul
in
fcoml
dec
mov
cmpsb
imul
pop
cmp
mov
out
aad
sub
jl
je
lret
xchg
adc
mov
mov
insl
xor
nop
add
cmp
sbb
scas
dec
xchg
jnp
ret
int3
sbb
pop
clc
fwait
leave
test
clc
push
out
jg
sub
ret
ret
test
sahf
jmp
shlb
popa
jp
jmp
jne
xorl
mov
test
scas
call
test
repz
bound
sbb
mov
jmp
jp
inc
mov
loop
pop
orb
xlat
into
shrl
add
enter
or
cli
adc
mov
stos
or
xor
adc
cli
mov
mov
out
jge
lods
add
pop
in
sbb
hlt
pop
mov
jle
popa
test
test
pop
dec
les
popf
mov
leave
add
lock
push
imul
aam
in
sub
sbb
sbb
fstpt
jmp
paddb
lock
scas
and
and
or
mov
dec
mov
mov
xor
repz
mov
test
jbe
push
jmp
jecxz
cmpsb
lret
xchg
cmpsb
cmp
out
mov
inc
lea
dec
aam
test
int
ret
mov
lods
mov
mov
hlt
or
mov
sbb
sub
or
cs
call
dec
jmp
or
jne
jmp
adc
call
xchg
sub
dec
call
orb
mov
test
sti
shrl
mov
mov
ret
out
ja
js
and
jbe
cmp
hlt
lods
lahf
mov
jo
mov
int3
sahf
mov
sbb
in
movsl
push
push
mov
mov
mov
or
push
call
lods
mov
cwtl
fldenv
out
mov
cmpsl
xchg
push
xchg
rcl
cmp
xchg
out
inc
mov
jle
xor
xor
ss
sbb
mov
mov
lcall
pushl
sbb
jecxz
or
sub
push
jmp
jge
fmull
add
outsl
jmp
and
mov
out
or
and
or
call
pushf
cmc
jmp
jae
rorb
pop
push
jmp
mov
addr16
fstps
ret
fcomps
imul
or
xchg
pop
pop
in
add
add
sub
cmpsb
pop
sub
lret
add
sbb
add
movsb
stos
test
sbb
lret
mov
xchg
js
loopne
filds
decl
mov
mov
leave
lock
dec
stos
mov
sbb
cmp
movsl
cmpsl
xchg
orl
loop
add
arpl
aam
rcrl
pop
lret
movsl
insb
test
pop
int3
mov
daa
stc
mov
jecxz
int
dec
xchg
andl
and
sub
adc
mov
sub
in
mov
popa
mov
jge
xor
scas
xchg
bound
in
cltd
gs
adc
movsb
mov
mov
ret
sub
outsb
clc
testl
or
jmp
test
in
jnp
adc
popa
mov
sub
jle
mov
sub
insb
ljmp
mov
pop
mov
outsl
clc
push
dec
lret
imul
adc
notb
jl
mov
pop
cld
sub
loope
or
in
bound
nop
stos
sub
imul
int
test
fwait
sbb
xchg
ds
ret
cmp
xchg
stos
fwait
decl
iret
lahf
cmp
imull
sub
negb
sub
or
out
out
cwtl
fstps
stos
cmpsb
sub
loopne
notb
imul
and
or
mov
cs
sbb
cmpsl
repz
pop
inc
push
sub
inc
mov
xor
jnp
ret
mov
cltd
int3
loopne
sub
in
xchg
sub
mov
mov
sbbl
sub
cmc
loope
arpl
shll
mov
pop
test
loope
inc
jmp
leave
addr16
pop
mov
fnsave
std
push
outsl
jae
or
push
jb
fstps
sbb
inc
cs
test
pop
xor
dec
int3
dec
call
aam
cmp
cmp
push
adc
movsl
push
stos
mov
aaa
scas
daa
pop
out
imul
call
sub
jnp
push
jbe
fistpl
xchg
popf
jecxz
stos
sti
lret
inc
jmp
lea
repnz
mov
lea
cmc
testb
std
pop
or
leave
movsl
imul
stc
adc
ror
sub
cld
push
mov
imul
jbe
mov
popa
sti
add
xchg
data16
out
sub
push
or
sti
lcall
sbb
in
xor
jmp
cmpsl
sbb
mov
add
add
cmp
mulb
adc
dec
mov
lret
pop
or
into
rcr
adc
mov
scas
jge
inc
enter
mov
push
mov
jp
jns
mov
lock
pop
lock
loopne
mov
adc
fsubrl
shr
pop
fnstcw
dec
cltd
movsl
adc
lods
pop
sub
xor
or
sbb
mov
xchg
aas
hlt
shr
mov
or
sub
and
add
scas
adc
sub
mov
xsavec
dec
add
xor
adc
and
cmc
outsb
lods
das
xor
add
pushf
jmp
insb
push
pop
test
test
xchg
or
mov
scas
enter
inc
movsb
fists
mov
push
jle
lods
jmp
mov
push
fxch
iret
cs
add
inc
mov
jbe
mov
adc
sbb
cmpsl
inc
loop
iret
mov
sub
jl
mov
loope
popa
add
xchg
fimull
lods
push
leave
pop
and
shlb
lods
icebp
popa
add
cmp
test
enter
in
loope
ljmp
add
or
push
jnp
in
cltd
into
test
enter
or
and
xchg
cltd
sbb
outsb
pop
and
cmp
inc
jmp
add
cmpsl
push
in
push
sub
xlat
sti
pop
lods
mov
sub
out
sti
xchg
lods
add
in
int3
xchg
mov
mov
mov
shlb
sub
sub
into
mov
dec
lock
pushf
push
push
inc
fdivl
scas
push
cmpsb
ss
pushf
aad
inc
addr16
hlt
add
mov
jns
test
mov
lret
andb
push
out
frstor
sub
jnp
mov
mov
cwtl
out
aas
andl
test
jne
adc
rclb
xchg
cmp
stc
insb
push
jecxz
movsl
lods
inc
jle
and
or
sbb
dec
cli
frstor
jg
inc
decb
push
dec
cwtl
fldl
sub
or
pop
lods
push
lds
xchg
mov
fbld
incb
lods
xor
xchg
or
inc
push
cmp
rclb
sbb
add
rcl
dec
sbb
jmp
lea
xchg
jns
sub
sub
into
add
imul
mov
jnp
bound
lods
mov
sbb
in
inc
incb
call
jbe
pop
arpl
lods
cmp
movsl
jb
lods
enter
andl
mov
movsb
xchg
lret
push
dec
clc
jmp
cs
movsb
data16
mov
imul
inc
mov
jge
popa
jo
clc
outsl
cmc
out
mov
scas
sub
adc
jns
ret
test
repnz
fs
movb
addr16
insl
shll
addr16
mov
stos
cmp
jae
add
push
mov
add
pop
mov
dec
sub
pop
mov
test
push
sub
xchg
push
pop
lds
sbb
xchg
daa
sahf
sub
mov
jmp
iret
xchg
data16
pop
out
adc
mov
add
loope
pusha
test
mov
or
call
xchg
pop
xlat
out
movsb
cmp
inc
xchg
sbb
mov
fbstp
aad
dec
inc
and
std
push
addr16
out
push
out
jge
imul
push
push
sbb
jle
push
je
arpl
xor
adc
dec
adc
int3
in
imul
call
cmp
test
pop
pusha
pop
xchg
cmp
imul
pop
jmp
das
xor
insb
jge
nop
test
add
out
jp
ljmp
jnp
in
rorl
lret
enter
das
jecxz
call
aad
clc
testl
cmp
aam
pusha
fcmovnbe
dec
add
or
pop
insb
je
mov
sub
jmp
sbb
sbb
dec
jle
and
aad
jns
inc
push
cwtl
sub
or
nop
mov
in
shlb
aam
mov
jmp
fdivrs
cmpsl
add
add
mov
inc
adc
push
movntps
call
in
add
jle
sub
inc
stos
dec
push
sbb
bound
mov
xor
push
pop
cmpsl
xchg
and
or
jmp
lds
sbb
mov
aam
mov
lds
or
and
sub
icebp
sbb
es
jmp
int
pop
les
ficoms
dec
add
pop
or
sarb
mov
popf
jmp
cli
icebp
mov
stc
cld
push
arpl
cld
pop
movsl
jge
add
inc
in
xorl
lret
movsb
ret
jg
imul
add
out
xchg
in
mov
loopne
mov
mov
and
scas
adc
and
adc
scas
add
clc
adc
push
mov
mov
ljmp
or
out
push
fsubrl
ret
xor
in
shlb
pop
cmc
loop
or
push
call
mov
scas
mov
bound
mov
aam
lahf
push
stos
dec
sbb
add
leave
insl
add
stc
mov
in
jns
dec
push
out
cmp
lea
sti
gs
out
add
movsl
or
mov
movsl
pop
scas
into
mov
sub
hlt
add
fisubrs
dec
pop
inc
mov
adc
sbb
sbb
movb
rcrl
cmpsl
mov
cmpb
out
or
cld
xchg
andb
in
xchg
lret
in
stc
cmc
jmp
sbb
jnp
mov
sbb
pop
in
mov
jl
scas
jmp
dec
stos
or
fstpt
push
mov
inc
pop
and
aam
jnp
or
fisttpl
pushf
mov
pop
repz
xchg
inc
sbb
movsb
inc
scas
mov
nop
jl
pushf
push
clc
enter
push
in
bound
fdivr
sbb
mov
scas
insb
sbb
scas
lods
les
jle
jne
and
dec
add
outsb
add
add
movsb
adc
mov
adc
jmp
cmpsl
xchg
jmp
sbb
scas
add
aam
mov
fiadds
xchg
imul
sti
in
repnz
sbb
adc
daa
repz
inc
sar
mov
call
pop
lret
aad
pop
jnp
or
push
mov
xor
or
xchg
cmpsl
adc
int3
in
sub
test
dec
scas
add
int3
jae
test
lret
xchg
mov
mov
xchg
lods
imul
inc
mov
cmpsl
je
pop
sub
xchg
mov
dec
cld
inc
add
and
and
add
mov
cmpsl
rcl
mov
mov
dec
sbb
pushf
dec
fsubl
dec
and
dec
push
mov
nop
add
mov
mov
pop
rcll
dec
adc
inc
sub
xor
xchg
mov
xchg
movsb
push
stos
mov
fwait
cmpsl
lods
and
lods
or
cmp
fistpl
fimuls
or
pushf
hlt
sbb
rcll
je
mov
scas
cmp
mov
mov
and
inc
ret
sbb
fs
sbb
adc
and
push
xchg
out
je
push
cmp
lret
lods
sbb
or
mov
imul
lret
lahf
jns
and
lcall
sbb
lret
add
cld
lods
jle
inc
into
cmp
les
jnp
addl
outsb
xchg
out
loop
mov
out
adcb
out
aad
sub
or
push
cld
sub
hlt
out
dec
and
out
in
push
or
xchg
ror
add
ljmp
jmp
pop
adc
lock
test
notl
jmp
or
xor
mov
dec
inc
push
cmp
insl
cmc
enter
fmul
pusha
xchg
xor
outsb
stos
imul
ds
js
lahf
fsubrs
mov
fiadds
jmp
out
pop
sti
pop
add
and
lret
xor
aam
xchg
mov
dec
or
movsb
lret
fcompl
jmp
jg
in
dec
jl
mov
inc
cs
pop
jp
dec
out
add
mov
out
dec
je
insb
sub
jbe
dec
mov
jns
sbb
jmp
mov
fidivrs
dec
mov
xchg
cmpsb
hlt
cli
push
inc
pop
sbb
mov
push
pop
int3
mov
sbb
filds
xchg
insl
pop
adc
sbb
xchg
les
dec
ret
in
sbb
lret
sbb
data16
mov
xor
jl
push
cmp
xor
bswap
jge
jle
dec
je
sub
rcrl
pusha
add
int3
movsb
imul
test
loope
pop
adc
add
pop
mov
iret
int
cmpsb
or
sbb
cmp
add
or
adc
out
iret
mov
gs
add
sbb
insl
jge
loop
or
iret
inc
jne
sarb
dec
mov
dec
add
push
mov
inc
loope
popa
in
adc
sar
popf
ficoml
mov
push
push
cmpsl
sub
ffreep
mov
aas
adc
jmp
fwait
lcall
orl
add
inc
push
sbb
push
add
push
out
js
icebp
or
push
sbb
popa
mov
lret
sti
mov
ljmp
cli
jl
and
mov
adc
or
push
or
cmp
add
scas
push
cmpsl
xchg
fsubs
sti
adc
pop
stc
out
orb
mov
sub
dec
sbb
leave
test
sbbb
dec
dec
xor
inc
out
sbbb
push
decl
inc
sub
adc
or
push
adc
pop
mov
loop
xchg
int3
sub
scas
push
enter
jmp
bound
sbbb
add
gs
xchg
push
test
jecxz
or
out
gs
push
sbb
add
insb
jge
mov
in
inc
sahf
call
mov
adc
pusha
loope
lods
adc
out
cmp
call
or
push
adc
xchg
or
add
leave
sahf
add
cmp
aas
addr16
mov
adc
roll
pop
dec
imul
aas
outsb
clc
jecxz
jae
dec
cmp
and
in
fisubrl
sub
rcll
stc
mov
sarb
aad
adc
sahf
and
cmp
jno
and
nop
lcall
imul
mov
mov
mov
dec
shrl
xchg
popa
xchg
cld
mov
pop
pop
sbb
scas
aaa
aaa
pop
cmpsl
test
mov
mulb
sbb
repnz
add
pop
es
dec
adc
jge
stc
fcmove
popa
lea
cmp
dec
mov
add
scas
add
xchg
jmp
int3
add
mov
dec
in
cmpsl
pop
mov
pcmpgtw
mov
aad
inc
xlat
aam
popa
fldenv
lret
jp
and
inc
inc
call
mov
cmp
adc
or
inc
push
inc
in
add
les
movsl
outsl
inc
mov
cld
lods
movsb
pop
sbb
out
sub
test
or
ret
lret
mov
adc
lock
fisttpll
pop
push
sahf
sbb
test
sarl
xchg
cmpsl
test
lock
xlat
push
das
outsb
and
stc
mov
xor
ljmp
sti
cmpl
sub
dec
dec
ljmp
push
ja
scas
stos
xchg
sub
mov
push
cmp
fldpi
sbb
push
sahf
cmp
pop
call
nop
jg
jmp
adc
inc
mov
call
xor
mov
inc
dec
mov
ljmp
jge
les
jbe
jns
mov
subb
aas
mov
loop
or
insl
js
mov
fcmovb
das
push
addr16
sub
fsubr
sti
pushf
lods
nop
mov
sti
mov
cmp
sub
sub
mov
inc
sbb
movsl
out
add
popf
inc
cld
xor
dec
ret
xchg
scas
into
jl
fs
xchg
sub
in
pop
sahf
inc
mov
pop
push
push
leave
mov
ss
sub
sub
addr16
test
ret
adc
jo
insl
sbb
dec
adc
test
push
or
incl
mov
sub
ret
imul
jg
sub
pop
or
xor
cli
shlb
flds
out
mov
adc
sub
inc
lods
xchg
add
xchg
inc
cltd
push
inc
push
and
xor
in
sbb
imul
mov
xchg
movsb
mov
xchg
sarb
sub
mov
mov
and
sbb
nop
xchg
dec
test
lea
repz
sub
mov
fmuls
adc
cld
and
divb
imul
testl
stos
pop
inc
cli
mov
or
dec
mov
iret
dec
xchg
in
or
movsb
ljmp
pop
push
mov
push
dec
aam
ss
or
mov
roll
jae
sub
test
jne
nop
mov
xchg
lcall
and
jg
rorb
mov
cld
pop
ret
or
jmp
mov
ror
mov
push
or
add
add
in
in
iret
shlb
flds
bswap
push
jmp
cwtl
jb
cmc
jb
cmpsl
jns
add
adc
ret
mov
or
rcll
jnp
fldt
lret
nop
sub
sahf
call
inc
and
ficomps
int3
inc
push
stc
push
push
stos
push
adc
xor
mov
mov
sbb
lcall
push
mov
xchg
adc
aaa
mov
dec
mov
xlat
mov
sub
icebp
psrad
adc
popa
fldl
ret
lods
inc
testb
cmp
or
xor
sahf
pop
leave
fmulp
nop
and
jne
dec
add
or
push
jns
jmp
jle
or
and
fistps
cmp
inc
fdivl
pop
adc
gs
push
lcall
daa
sar
rcl
adc
cld
nop
xchg
sbb
loopne
mov
test
repnz
pushf
adc
xchg
jmp
mov
inc
lea
adc
push
xchg
scas
inc
cmp
out
jnp
testb
lret
lock
jbe
inc
mov
add
mov
dec
lret
mov
sbb
icebp
or
sbb
out
cli
into
enter
adc
aad
adc
dec
adc
inc
stos
jb
flds
mov
jns
inc
lret
insl
xor
leave
movsb
daa
sbb
inc
cmp
adc
xor
jecxz
lret
dec
orl
popf
or
mov
xchg
inc
into
test
popf
adc
out
or
scas
and
inc
into
inc
enter
out
lret
jg
es
lret
sar
pop
dec
cmovl
arpl
sub
sbb
sub
out
adc
jo
fisttpl
mov
mov
iret
dec
jge
addb
mov
imul
mov
in
inc
xor
roll
sbb
fcoml
inc
mov
ret
mov
daa
fisubs
cs
cmc
sub
in
pop
inc
dec
push
and
call
int3
xchg
sub
inc
pop
into
cmp
inc
int3
fsubs
lret
insb
addr16
cmp
xchg
or
pop
mov
loopne
lret
fistps
enter
xchg
orl
loopne
stos
mov
pop
dec
les
in
sbb
in
repz
stos
cmpsl
jnp
test
dec
add
sbb
mov
sbb
mov
cmpsl
push
mov
enter
repz
ret
lods
or
out
add
jo
mov
pop
lock
mov
jg
shll
int
or
test
pop
nop
jb
mov
mov
push
imul
dec
jmp
dec
movl
cmp
inc
movsl
insb
into
pusha
jmp
push
insb
pop
push
dec
pusha
test
mov
data16
jle
clc
pop
inc
dec
sub
call
addr16
cmpsb
inc
bound
xchg
ds
orb
sbb
inc
add
jnp
arpl
cwtl
dec
insb
dec
xchg
add
add
into
test
lret
add
fildl
ret
lret
sub
sub
mov
mov
iret
out
xor
out
and
sbb
int3
pushf
xchg
pop
inc
rcl
lods
pop
imul
mov
cmp
stos
sahf
mov
cmp
int
sbb
mov
cmp
or
imul
ret
dec
stos
and
or
sbb
aam
xor
push
pop
jle
cli
and
enter
test
shr
out
in
scas
ljmp
inc
lods
rolb
fs
or
addb
cmpsb
mov
or
pop
scas
inc
xor
mov
pop
daa
fsubs
sbb
pop
lret
mov
nop
jmp
loope
fdivrl
scas
xor
cli
incl
int
jecxz
daa
fnstsw
jge
mov
iret
jmp
shlb
or
dec
mov
sub
dec
sahf
and
dec
inc
out
add
in
or
and
repnz
movsl
or
fisttpll
adc
rorb
dec
into
inc
mov
int3
jae
in
and
les
aaa
pop
scas
xchg
test
adc
fistpll
mov
jl
lods
lcall
leave
sbb
sub
in
jo
add
stc
movsb
jecxz
in
fucomip
pushf
leave
les
sarb
pop
mov
mov
pop
xchg
adc
add
mov
sbb
jle
ret
lcall
adc
out
push
cmpsb
loope
or
jge
jp
stos
fnstcw
paddsb
data16
lock
push
mov
xchg
push
inc
stc
ficoms
lock
call
aad
js
cs
push
pushf
cmp
add
fdivrp
pop
sbb
or
jmp
aad
scas
in
loopne
jle
ficoms
jecxz
das
js
add
mov
adcl
mov
outsl
cmp
dec
xor
sbb
loop
sub
bound
xchg
stc
bound
adc
mov
mov
jge
int3
inc
mov
jb
loopne
nopl
add
pop
add
in
sub
lret
xchg
je
adc
xor
pushf
add
ljmp
leave
in
mov
mov
xlat
mov
nop
inc
sbbl
sub
int3
outsl
out
int3
pushf
xchg
cmc
mov
push
addl
scas
pop
leave
out
xchg
lret
fwait
cmpsb
sahf
and
push
je
push
xchg
repnz
or
pushf
or
scas
and
repnz
enter
xchg
dec
xor
test
test
js
enter
lret
jnp
sub
push
lar
jl
sub
sahf
int3
cs
fwait
inc
mov
push
dec
rcl
out
inc
jp
loopne
mov
scas
orb
scas
jae
das
into
push
loopne
inc
cmp
dec
movsl
nop
add
stc
iret
lock
ds
or
inc
lods
jecxz
bound
dec
mov
or
add
movl
push
push
xor
inc
js
add
aas
lea
fildll
inc
hlt
jae
pop
loope
xchg
outsl
insb
or
sarl
sub
jge
or
mov
js
fsts
xchg
ret
into
or
cmc
inc
jne
jp
aam
pop
or
mov
ljmp
test
cld
pop
dec
sub
pushf
jge
sbb
sub
jmp
lret
stos
dec
pop
mov
adc
scas
test
rcrb
mov
mov
loope
jg
and
push
pop
xor
mov
xlat
mov
xor
dec
xorl
and
pushf
or
fdiv
ss
sbb
mov
arpl
mov
sti
dec
dec
sub
testb
cld
mov
in
int3
ljmp
cld
dec
adc
xor
test
jle
stos
mov
pop
sub
xor
call
int3
add
and
cmpsb
jnp
sahf
dec
stos
or
jl
in
mov
push
xchg
add
insl
push
lcall
inc
jmp
sub
or
ret
push
jp
scas
stos
mov
mov
shlb
daa
adc
iret
scas
sub
mov
inc
or
dec
js
stos
adc
movaps
push
iret
mov
roll
sti
dec
adc
sarl
mov
fwait
pop
sarl
pop
stos
lods
inc
sub
fldt
cmp
fwait
out
push
sub
sub
xlat
lods
sub
adc
jnp
mov
xchg
das
dec
pop
xchg
imul
inc
mov
jle
jo
pop
pop
lods
or
dec
and
outsl
add
jge
mov
fwait
ljmp
roll
lret
jnp
insl
sub
lds
mov
jge
hlt
sbb
fisubrl
pop
sbb
mov
add
push
mov
xchg
inc
movsl
rorb
add
inc
sub
sarl
jle
cmpsb
add
mov
adc
das
xchg
dec
mov
ljmp
mov
int
push
and
adc
jmp
inc
popa
loop
stos
inc
inc
inc
cwtl
inc
mov
lret
test
fcompl
jl
inc
mov
cltd
mov
fwait
mov
add
sbb
mov
insb
clc
cwtl
shrl
lret
xchg
out
cmp
nop
lcall
push
mov
loope
xchg
or
sub
add
sub
sti
dec
dec
xor
xor
xor
pushf
xor
push
inc
aaa
jle
push
jp
int
test
out
out
adc
add
push
or
movsl
lret
pop
loope
pusha
xchg
jns
dec
pop
ja
movsl
xchg
mov
mov
cwtl
xor
call
fdiv
and
jle
or
popf
movsl
and
adc
fcoms
fadds
or
add
test
inc
leave
clc
inc
dec
lds
xchg
daa
dec
mov
fbstp
sahf
mov
add
ja
sbb
mov
lret
dec
dec
jns
das
loop
xor
xchg
fldt
mov
sbb
mov
jo
xor
push
jbe
push
add
scas
pusha
sbb
xchg
adc
sbb
inc
inc
cld
nop
mov
lods
jne
jg
fsubs
add
mov
cli
stos
aam
jnp
mov
jno
stos
gs
dec
fwait
stos
pusha
mov
push
jo
in
xchg
mov
pushf
push
aas
icebp
cli
mov
inc
mov
test
add
mull
loopne
mov
sub
add
dec
sub
lods
mov
lahf
add
test
insb
lret
cmovnp
mov
sbb
jecxz
dec
xchg
mov
in
push
xchg
insb
pop
out
mov
enter
js
sbb
sub
pop
cmp
fimull
fiaddl
ja
add
push
jle
imul
fcmovnbe
push
sub
sbb
jne
es
lret
jle
mov
or
in
jp
in
push
sbb
ds
aam
sub
mov
leave
enter
imul
stos
jbe
movsb
sub
sub
in
mov
sbb
lret
scas
inc
push
pop
mov
xchg
mov
loope
ret
lret
adc
push
jns
xchg
xchg
sbb
push
gs
in
inc
dec
jns
sub
sbb
cmp
test
insb
scas
out
jbe
lods
stos
sbb
jno
xchg
scas
or
adc
in
mov
add
push
mov
xor
popa
sbbb
jo
int3
sbb
cmpsl
pop
je
sub
shl
sarb
adc
out
sub
push
fdivl
pushf
loopne
imul
scas
mov
jl
and
jmp
fisubs
inc
and
xor
jb
insb
fmull
addl
aaa
cmp
dec
arpl
idivl
xlat
push
out
cmp
inc
fldt
cmp
push
dec
cld
jl
lea
xchg
jl
sbb
or
cvtps2pi
dec
inc
xchg
leave
fldz
xchg
maxps
lods
cwtl
scas
sub
sahf
dec
sub
adc
jl
dec
adc
xor
cli
hlt
jecxz
in
icebp
lea
iret
adc
in
pop
xchg
dec
movsl
fscale
sub
pop
fildl
push
in
cld
sub
mov
push
in
imul
jnp
sbb
cmpsl
sarl
std
je
popf
xchg
bnd
lcall
push
imul
outsb
movsb
mov
mov
xor
dec
mov
stos
mov
roll
sbb
lods
test
xchg
inc
rcl
out
and
or
or
nop
mov
jl
pop
push
das
push
or
xor
arpl
incl
adc
mov
jmp
rcl
in
cmp
mov
in
int3
addr16
test
mov
sbb
faddl
loope
popf
mov
enter
pop
sbb
scas
shl
js
and
xor
push
mov
jnp
lcall
seto
cld
test
cmp
jle
jle
in
dec
sahf
push
lret
pop
mov
xchg
jo
and
pop
sub
fisubs
cmp
mov
sbb
leave
and
loop
sub
in
loopew
lcall
add
adc
sbb
sub
or
imul
sub
in
dec
push
add
fistpl
mov
pop
sbbb
data16
inc
push
dec
mov
lahf
adc
dec
add
xchg
mov
cmp
out
lahf
dec
test
mov
and
or
sub
mov
push
and
sarl
imul
dec
in
and
xor
mov
mov
lret
inc
xchg
mov
mov
in
lea
lods
add
dec
sbb
or
stos
or
add
or
mov
rcrl
das
shl
clc
or
in
movl
xchg
rclb
insl
adc
arpl
lods
into
mov
test
cmpsl
fld
adc
lret
jg
mov
into
add
xchg
mov
or
scas
repz
xlat
pop
mov
or
or
mov
pop
mov
fcomip
xlat
jo
add
fcmove
nop
sub
mov
sub
in
lods
sub
jle
popa
imul
sub
lods
adc
adc
loop
or
sti
into
lds
les
or
icebp
fisubrl
add
mov
xor
in
lret
js
ljmp
or
and
xchg
stc
ss
dec
jb
les
mov
les
adc
sbbl
pushf
inc
mov
mov
or
mov
roll
or
imul
loop
pop
movl
sub
pop
jmp
lret
stos
aas
test
scas
mov
addb
in
add
insb
enter
adc
mov
add
orl
les
or
and
test
mov
in
xor
scas
les
or
mov
jge
scas
jno
int3
jnp
into
aas
imul
lret
pusha
lret
enter
add
jnp
xchg
adc
jge
insb
shrl
fwait
xor
fdivrl
ss
or
leave
mov
dec
or
or
enter
mov
sbb
add
sar
je
jle
adc
lock
mov
jns
xor
ret
sub
pop
fwait
cltd
leave
das
xchg
sarb
in
sbb
mov
pop
leave
mov
push
mov
pop
inc
scas
sub
cmpb
ret
pop
push
and
hlt
push
pop
in
mov
pushf
mov
push
stc
loopne,pn
or
cmp
cmpsl
aam
das
inc
push
fmul
in
scas
lret
dec
repz
jle
jb
popl
mov
loopne
dec
or
or
mov
sti
ret
mov
jl
cld
sub
stos
cmp
jge
jmp
mov
adc
cmp
or
and
mov
insl
lret
mov
cmpsl
sbb
xchg
shll
shr
std
imul
adc
xlat
imul
aad
imul
in
stos
dec
inc
push
fs
inc
out
scas
mov
movsl
lea
or
pop
faddp
mov
addr16
into
dec
lcall
stos
xor
ret
or
fs
addl
push
or
cs
push
mov
push
cmp
ds
push
xorb
or
es
sub
jmp
fisttpll
test
inc
push
jne
movb
daa
jle
outsb
mov
adc
dec
adc
test
dec
fwait
and
in
xchg
add
int
mov
push
sub
add
adc
and
ds
or
mov
xchg
shrb
or
ret
push
add
or
pop
fwait
cmpsl
leave
jno
lcall
iret
adc
xlat
les
dec
clc
sbb
ljmp
sbb
and
push
scas
push
pop
into
pop
inc
xlat
mov
popl
movss
adc
test
or
mov
mov
out
lods
scas
clc
icebp
pop
ficomps
repz
lahf
mov
add
push
loope
inc
jl
inc
negl
bound
sbb
and
lret
int3
mov
xor
or
test
in
mov
and
mov
push
xor
mov
sub
xor
fs
mov
shlb
sbb
je
lods
in
sbb
inc
sahf
lea
jnp
or
popa
dec
xor
bound
fs
lret
add
fistl
or
in
and
fmul
mov
rcll
imul
lret
loope
outsl
pop
imul
scas
or
lret
out
pop
leave
mov
jb
or
sahf
jg
and
jle
dec
stos
cmpsb
imul
or
out
sahf
ja
stc
loope
mov
inc
sub
pop
dec
xchg
sub
sarl
sarb
pop
push
inc
inc
cld
dec
lods
jge
jnp
das
mov
cmpsb
pop
dec
mov
into
xchg
xor
out
stos
or
rorl
fs
stos
mov
inc
sub
bound
adc
or
mov
push
mov
in
cmpsb
push
in
test
add
stos
das
mov
push
mov
fimull
mov
repnz
jl
mov
stc
xchg
adc
inc
les
mov
mov
sbb
ljmp
xchg
add
inc
dec
call
mov
mov
aas
inc
ss
mov
fprem1
or
addr16
call
add
dec
int3
sub
dec
in
mov
inc
inc
cmp
push
addb
jmp
sti
xchg
call
test
jnp
outsb
mov
int3
and
mov
in
in
jmp
xor
repz
mov
idivl
cmp
inc
and
mov
sti
push
add
mov
test
stos
fldl
sub
js
push
repz
sbb
dec
fwait
jle
sbb
jns
mov
movsl
xor
mov
push
push
mov
sti
push
ljmp
or
pop
out
daa
std
adc
adc
or
hlt
add
sub
mov
mov
ficoms
mov
inc
or
lcall
mov
jne
or
arpl
ja
shll
xor
out
mov
loope
cmp
out
hlt
lret
adc
mov
ret
out
andb
or
cmpsl
and
imul
test
sbb
out
stos
test
push
mov
pop
mov
add
add
sbb
mov
or
inc
mov
fmull
cli
pop
jmp
ds
mov
out
ret
sub
sbb
int3
lods
scas
adc
mov
lcall
sbb
rcrb
inc
sbb
stos
out
jo
hlt
jns
add
inc
pop
push
xchg
add
mov
jle
sub
inc
sbb
fdivrl
scas
test
push
test
stc
push
sub
insb
lea
push
fisttpl
jl
jp
jb
cmp
rol
mov
push
dec
sub
jl
push
xor
sub
mov
cmpsb
cmp
ljmp
push
in
or
or
out
push
pop
pop
stos
add
data16
imul
pop
scas
outsb
mov
or
lret
int
into
push
jp
loop
inc
inc
mov
out
bnd
xchg
mov
and
inc
loope
adc
jle
adc
add
push
lea
adc
push
inc
sub
mov
xchg
sbb
movsb
jnp
pusha
or
divl
aam
pop
test
shr
mov
gs
lods
les
sub
cmp
hlt
hlt
out
test
pusha
mov
adc
icebp
push
scas
sbb
xor
sbb
sahf
add
push
loopne
inc
scas
or
call
mov
dec
sub
or
nop
scas
mov
aam
mov
or
movsb
jbe
sub
sarb
out
mov
jle
mov
shl
scas
in
sub
sti
in
cld
xor
cmc
xchg
jmp
scas
xor
flds
xchg
push
lret
pop
push
add
stc
xchg
dec
and
mov
jmp
dec
stos
adc
sub
jle
mov
dec
cmp
and
mov
sti
adc
sbb
loop
mov
jno
jno
push
sbb
cld
imul
add
inc
xor
lock
popa
adc
rep
xor
lret
add
pushf
mov
mov
add
or
int3
pusha
mov
lret
outsb
inc
test
lret
xor
stc
sahf
sub
pop
mov
fsubl
cmpsl
mov
push
push
mov
add
or
nop
mov
gs
cmp
dec
or
sub
cwtl
stos
out
mov
cwtl
push
and
sti
cmpsl
nop
mov
leave
in
mov
and
adc
clc
fsubs
push
test
imul
adc
adc
nop
iret
jns
lret
and
out
sahf
jmp
cmp
push
xchg
jno
pop
sub
jns
and
or
xchg
jnp
or
or
or
fsubs
sbb
xchg
int3
fmulp
inc
mov
push
popa
mov
leave
cs
stos
jle
add
jmp
or
mov
rcrl
ret
add
ds
pop
js
push
out
out
adc
xchg
pop
or
aas
add
jno
pop
shr
fsubrs
repnz
jecxz
into
and
fdivl
aam
adc
js
movb
xchg
bound
loope
push
or
ss
aaa
std
mov
jecxz
sahf
lret
fstl
jecxz
loopne
xchg
sub
shll
adc
mov
mov
push
loopne
lods
sahf
addr16
imul
inc
cmpsl
dec
int
mov
inc
xor
and
xor
lret
shlb
pop
ret
sub
xchg
mov
jecxz
pop
adc
xlat
inc
cmpsl
and
shr
mov
popf
mov
xchg
jle
fbld
sbb
inc
mov
les
out
adc
mov
jns
dec
dec
aam
sub
cmp
lods
shr
xor
jne
adc
cwtl
ffree
mov
aad
mov
push
adc
adc
aas
adc
adc
nop
push
cld
sub
or
sahf
stos
jmp
lret
mov
insb
int3
imul
scas
xor
sub
in
in
cmp
int3
pop
sbb
bound
out
mov
in
cmp
lds
insl
inc
push
or
cmpsl
sahf
dec
aad
rorl
lret
aaa
jnp
or
fdivrs
adc
mulb
add
popf
insb
js
push
jecxz
inc
xchg
mov
out
xlat
xchg
cwtl
ret
sub
int3
sbb
fs
add
mov
fisubrs
stos
mov
and
pop
enter
push
loop
add
jmp
jbe
jns
xor
push
or
cli
add
sub
jae
add
xor
sti
test
jge
test
or
std
leave
sbb
dec
js
dec
jecxz
cmp
and
imul
aam
dec
pop
xor
imul
ret
mov
or
xchg
rorb
mov
ret
test
xchg
lret
cmpsb
addr16
out
jb
dec
inc
outsl
fwait
loopne
arpl
in
jo
jnp
dec
enter
inc
fwait
mov
js
scas
mov
adc
xchg
mov
mov
or
stos
scas
lret
push
out
dec
call
in
add
out
push
insl
test
mov
scas
hlt
dec
cli
push
sahf
mov
shrl
mov
mov
lock
sti
fadds
cld
dec
lret
and
lds
js
sbb
pop
shrb
xor
sbb
and
sbb
mov
push
stos
test
mov
mov
sbb
push
xor
cld
dec
add
and
loop
cmp
lea
and
adc
in
lcall
push
jns
ljmp
sbb
mov
popf
lods
mov
pop
stos
mov
call
lret
pop
js
call
fisubl
into
dec
into
cli
push
bsf
lahf
push
xchg
sub
adc
push
mov
lods
add
adc
jp
or
or
gs
pop
pop
xor
xor
dec
bound
pusha
add
scas
push
fstpl
cmp
fwait
rolb
test
scas
imul
testb
in
jmp
bound
int3
jge
adc
jnp
bound
aam
push
out
lods
scas
jbe
fimuls
js
inc
lret
mov
icebp
dec
mov
sub
stos
pop
mov
and
decb
int3
inc
cmc
in
fimull
cmpsb
stos
dec
daa
pop
movsl
pop
jmp
xchg
dec
sbb
pop
cld
adc
out
sub
cli
pop
enter
test
fisubrs
jnp
fldt
or
std
xor
xor
jle
sub
xor
lods
pop
out
jmp
out
movsl
ret
mov
icebp
ffreep
mov
jl
inc
iret
ret
je
sub
xor
add
or
scas
scas
mov
shlb
jbe
ja
sbb
or
inc
jnp
mov
incl
cmp
jae
and
jae
addr16
mov
ret
xchg
jl
dec
sub
inc
pop
pushf
clc
insb
push
popl
adc
insl
lret
and
and
xor
or
mov
add
fisubl
mov
dec
push
adc
and
dec
add
xor
jmp
mov
test
or
fcom
or
fisubrs
popa
clc
ret
sub
mov
mov
fistl
pop
addr16
jb
hlt
adc
add
mov
clc
mov
in
xchg
popf
daa
fwait
dec
push
or
sub
push
imul
push
jle
dec
fisubrs
sub
mov
movsb
jns
xchg
and
add
adc
jge
mov
mov
cld
adc
mov
rolb
mov
inc
xchg
popf
repz
test
sub
inc
ds
andb
and
test
test
or
lods
nop
ret
ljmp
loopne
js
repnz
mov
test
out
mov
daa
sti
cmp
inc
xchg
shl
jne
lahf
jecxz
fiadds
and
mov
sbb
lret
or
cmp
or
push
imul
leave
pushf
lock
cld
or
push
or
adc
ss
sbb
lret
or
mov
scas
imul
jb
sbb
add
add
sbb
xchg
cwtl
sub
cmpsb
loope
in
and
jno
adc
pop
mov
sahf
jg
adc
lahf
and
pop
push
sbb
lret
lret
stos
subb
test
push
inc
jecxz
mov
xor
mov
mov
dec
jle
sub
adc
clc
test
mov
push
xchg
sub
mov
sbbb
gs
xor
sti
sub
cmp
stos
aaa
addb
lret
lret
stos
jg
pusha
mov
or
add
sbb
clc
sbb
bound
fidivrs
pop
std
aam
lret
inc
insb
in
pushf
mov
and
sub
addl
add
rcrl
shll
loopne
lret
icebp
cli
pop
xchg
leave
aam
es
je
mov
dec
or
sub
lcall
mov
sub
cmp
inc
out
test
push
mov
pop
ds
dec
push
push
or
sub
xor
int
inc
push
iret
cmp
lock
xchg
inc
add
mov
into
pop
out
or
out
stos
cmpsb
push
sti
imul
iret
pop
xor
xor
ja
push
dec
jae
push
pop
sub
sbb
add
mov
pop
loop
adc
vmread
xor
pop
or
int3
or
push
pop
jne
pop
sub
adc
fldt
sahf
test
dec
cmp
adc
and
xchg
aaa
hlt
mov
mov
in
orl
or
dec
aaa
xor
xchg
rolb
sub
cld
repnz
scas
mov
push
and
cli
pop
mov
gs
insl
je
jne
mov
movsb
lret
outsl
cmp
sbb
cmpb
hlt
std
and
or
add
cli
xor
adc
dec
lods
insb
das
and
cmp
scas
fisttps
sbb
jle
mov
push
jo
push
mov
or
lods
in
mov
jbe
hlt
fstl
gs
sub
cmp
cmp
add
dec
aam
inc
clc
cmp
inc
lock
enter
jl
leave
sub
test
jp
lods
jnp
dec
add
jno
in
repnz
out
sarb
add
imulb
mov
int3
lock
aam
xor
out
or
adc
rorl
pusha
psrlq
mov
or
bound
lahf
repz
in
outsl
xchg
addr16
lret
xchg
mov
adc
cli
mov
adc
sub
insb
jge
sub
nop
ret
push
dec
push
or
sbb
pop
lods
popa
add
sub
out
fildll
xor
insb
pop
jle
int
mov
xrelease
and
mov
insl
cmp
push
mov
addr16
add
push
cld
push
call
imul
rcr
enter
pop
add
aaa
jmp
jle
and
paddusb
jl
lea
jmp
or
cmpsl
ds
ljmp
shll
xorl
sbb
dec
push
into
gs
add
mov
jnp
pushf
popf
pop
adc
cwtl
fmull
scas
out
adc
mov
dec
lods
mov
sbb
add
popa
int3
lret
or
mov
pop
jle
cli
rorl
pop
sbb
stos
mov
ja
lret
xchg
shlb
nop
dec
xchg
stos
aad
xlat
cmpsb
push
test
aam
sar
xor
pop
inc
gs
xlat
sub
dec
push
fisubl
lcall
cmp
insl
xor
fldl
scas
lds
int3
cmp
rolb
movl
stos
rcll
push
test
or
or
add
movsb
lods
sarb
into
testb
sti
inc
testb
insb
add
dec
and
or
scas
popf
sub
int
dec
or
dec
jmp
aaa
hlt
or
push
push
stos
out
ror
lcall
jmp
pop
mov
adc
cmpsb
jle
leave
lea
pop
or
pop
jae
or
adc
pop
push
fdivs
add
lods
test
or
dec
mov
dec
add
cmp
ss
xor
rorl
sbb
pop
add
inc
decl
push
popa
xor
std
leave
sub
out
jg
leave
lret
jle
les
xrelease
xchg
xlat
fldl
push
inc
and
lcall
push
ret
mov
mov
out
xor
mov
mov
stos
xor
dec
dec
add
movsl
inc
or
nop
imul
scas
imul
mov
sbb
cmpb
in
int
mov
insb
cld
dec
scas
add
sahf
mov
mov
test
cmpsl
js
iret
cwtl
sub
jbe
xor
in
test
mov
add
stos
sahf
sub
cld
test
jo
push
sarb
mov
insb
orb
rorl
pop
jnp
cmp
inc
adc
push
adc
xor
fwait
inc
adc
repz
push
add
jns
pop
cld
cmp
test
adc
sti
test
or
ljmp
popf
mov
sbb
adc
lret
sbb
sbb
xor
iret
mov
mov
jmp
pop
add
mov
leave
mov
jl
and
jmp
out
and
gs
cmp
orb
add
gs
outsl
in
pop
adc
adc
push
lods
andb
sti
lea
out
jp
stos
cmp
dec
dec
mov
inc
or
dec
adc
loope
aam
add
daa
pushf
cmc
pushf
fs
dec
add
mov
in
sub
imul
xor
add
fwait
out
mov
fs
lds
scas
lea
aam
sbb
adc
pushf
xchg
mov
imul
mov
imul
sahf
sbb
sub
imul
or
js
adc
jnp
cmp
shrb
int3
repz
mov
ss
insl
adc
inc
nop
jns
ficomps
push
mov
test
jae
ret
jecxz
clc
clc
push
push
mov
lahf
xchg
pushf
in
stc
outsl
test
fsubs
mov
inc
movsb
icebp
fsubs
inc
shrl
popf
add
lcall
and
lcall
leave
sub
mov
cwtl
fwait
push
xchg
nop
daa
icebp
scas
scas
add
enter
movaps
mov
mov
jl
dec
aam
add
decl
inc
mov
sahf
cmpsb
js
clc
xchg
inc
cmp
sti
dec
out
in
jns
inc
out
jne
bound
lock
mov
stc
mov
xor
aam
push
and
jge,pt
jle
sbb
cmpl
cmpsb
out
movsl
jne
aas
stos
stc
adc
xor
pop
push
movsl
or
testb
aam
push
inc
out
gs
pop
pop
mov
pop
outsb
sub
scas
es
cltd
inc
push
push
into
push
mov
bound
inc
psubb
and
jge
push
mov
inc
int3
in
movsl
add
popf
dec
cwtl
sahf
cld
add
scas
in
inc
push
cmp
leave
fmul
insb
popf
ret
sub
inc
dec
push
out
sub
xor
and
pop
jmp
cmp
ljmp
subb
inc
sti
bound
or
out
push
dec
test
and
cmp
add
movsb
lcall
orb
xor
das
subl
push
cmp
hlt
sti
pop
outsb
dec
xchg
jbe
out
dec
jp
cmc
loop
xorl
xor
push
fstpl
or
int3
lretw
xchg
shrl
les
loope
mov
ljmp
xor
test
mov
mov
mov
sub
or
jbe
lock
lds
cmpb
inc
jl
pop
scas
xchg
in
fadd
out
into
imul
sahf
jmp
pusha
movsl
cs
push
stos
sbb
mov
testb
loopne
or
rorl
sbb
fmulp
add
in
lcall
and
daa
ja
aas
jno
xchg
xor
xchg
dec
push
scas
add
push
lret
or
lds
in
sub
fcoml
orb
xchg
jmp
mov
add
int3
push
jmp
in
icebp
mov
stos
dec
cmc
mov
fwait
pushf
mov
inc
lret
lret
testl
push
xchg
cmp
or
pop
test
or
sub
fs
in
and
add
inc
and
test
lods
or
xor
sbb
sahf
inc
and
pop
dec
rcrb
sbb
cltd
cli
push
repz
mov
inc
test
sub
xchg
mov
jns
aad
xor
inc
movsl
xchg
xchg
add
sti
mov
fdivrl
cmp
or
ss
lcall
jl
mov
scas
pop
data16
mov
xchg
push
and
mov
jno
mov
mov
add
add
inc
adc
mov
xchg
mov
scas
xchg
inc
test
dec
cld
jne
sahf
or
test
dec
mov
dec
test
scas
mov
repz
mov
stc
popf
aam
pavgb
sahf
push
mov
or
aaa
fadd
lret
in
mov
loope
mov
decb
dec
add
adc
rcrb
mov
repz
out
movsb
inc
push
mov
sub
push
stc
ret
addl
mov
jnp
mov
mov
imul
ret
push
lret
jbe
or
fdivrs
jmp
js
and
inc
jle
fldcw
fstpl
leave
or
or
bound
xchg
leave
lahf
jle
lahf
int
lcall
iret
insb
add
rorl
insb
jae
or
add
fsubr
xchg
add
lcall
cld
repnz
jge
shld
aaa
cmp
scas
push
pop
mov
insb
in
pop
xchg
pop
aam
mov
adc
inc
lcall
test
sbb
gs
je
fcmovne
sbb
xor
test
mov
push
push
sbb
jmp
mov
in
mov
sbbl
pop
push
aam
popf
mov
mov
xchg
in
out
jmp
imul
loope
pop
sti
call
inc
or
or
hlt
sub
cmp
xor
adc
fwait
repnz
sbb
and
and
sub
mov
rol
test
sub
out
aad
adc
xchg
sbb
xor
adc
push
in
sub
mov
test
icebp
mov
or
cmp
add
mov
movsb
or
outsl
fdivs
mov
mov
mov
inc
xlat
jne
push
xor
jmp
arpl
mov
bound
or
les
xchg
lcall
sub
jmp
icebp
fcoml
rcrb
mov
add
leave
int3
adc
sti
mov
jl
in
mov
mov
sbb
adc
mov
sub
ss
adc
pop
mov
push
push
cmp
lret
stc
mov
iret
mov
mov
fisubl
inc
mov
int3
add
leave
push
mov
fisubrs
mov
scas
jbe
ffree
pushf
in
out
jg,pt
subl
arpl
dec
scas
inc
ret
sub
sub
fiaddl
push
test
jnp
inc
adc
adc
stos
leave
xchg
sbb
orb
sbb
fwait
jge
movsb
adc
xchg
call
dec
mov
mov
out
sbb
decl
push
in
jl
cmpsl
orl
jl
mov
inc
test
and
sbb
push
incb
inc
xor
enter
jp
xchg
rcl
in
mov
ret
test
mov
inc
mov
cltd
sub
movsl
mov
fld
pop
lret
sti
daa
or
pop
push
mov
mov
rcll
jp
pop
or
ret
clc
pushf
aam
jae
outsl
fadd
stos
pop
ljmp
and
xor
and
nop
pop
test
int
lret
cmp
sub
mov
adc
insb
lret
dec
or
ljmp
mov
mov
mov
push
mov
or
scas
dec
cli
and
or
cwtl
mov
aad
pop
das
adc
repnz
or
ret
in
pop
shr
xor
mov
sub
hlt
insb
aam
movsl
mov
je
add
jecxz
xchg
imul
iret
xchg
jae
push
and
cmc
cli
mov
or
ret
mov
in
push
int3
out
sub
dec
insl
loop
inc
adc
pop
mov
mov
cld
arpl
call
mov
inc
jg
or
repnz
popa
push
jg
mov
push
ljmp
imul
jnp
popa
popf
push
push
xor
fwait
int
add
add
loopne
adc
cmc
push
sti
push
push
mov
test
and
stc
orb
rcrb
jmp
add
cmp
lcall
sarl
arpl
mov
dec
aaa
mov
dec
inc
jne
jns
or
sub
mov
addr16
add
in
or
lret
insb
les
dec
or
int3
lods
push
mov
addr16
mov
popa
ss
aam
push
int
ss
ret
inc
daa
dec
ds
mov
ret
cmpb
mov
out
add
adc
xchg
rcll
xor
addr16
jmp
push
popf
jge
pop
cmpsb
sbbl
inc
gs
jo
fdivl
pop
xchg
fwait
inc
dec
push
add
and
scas
jnp
pop
flds
add
fcmovu
enter
dec
add
or
daa
push
lret
jne
dec
jmp
jmp
and
addr16
mov
and
stc
imul
mov
mov
mov
mov
ljmp
call
push
xor
or
clc
mov
mov
lock
jae
call
dec
imul
stos
or
jb
xor
addr16
sbb
xchg
sub
adc
adc
rol
jmp
in
push
pusha
sbb
sub
pop
push
push
add
fs
rolb
mov
arpl
mov
imul
imul
rcrl
xchg
and
stc
or
or
pop
pop
dec
push
inc
jne
sbb
shrl
rcr
stos
dec
popa
aam
dec
add
stos
adc
aad
mov
sub
scas
push
sub
and
notb
sub
xchg
pop
and
ficoms
add
out
pop
lret
mov
mov
push
and
insl
lds
sub
or
bound
movsb
fcompl
pop
aad
inc
adc
or
sub
stos
add
mov
ljmp
stos
xchg
test
mov
cltd
aaa
setp
in
jle
js
pop
or
add
jnp
and
inc
mov
xchg
or
lock
or
lahf
popa
loop
testb
xchg
mov
shlb
es
loope
ds
pop
inc
mov
mov
inc
lods
leave
inc
int
cmp
repz
and
mov
sub
pop
faddl
aad
sbb
xchg
push
cli
dec
in
ret
scas
sub
mov
mov
mov
push
insb
aam
sub
scas
adc
and
lret
inc
mov
adc
or
pushf
jmp
adc
sub
iret
mov
jge
push
outsl
cmp
rclb
inc
or
xor
dec
clc
mov
pop
rcrl
add
shll
mov
adc
fadds
icebp
aaa
or
pop
test
adc
rolb
push
dec
jl
test
lret
testl
loop
or
shrb
imul
ret
jmp
ljmp
push
sbb
ljmp
ljmp
lds
les
mov
inc
sbb
sub
dec
and
stos
xlat
dec
aaa
cmp
cmp
mov
aaa
inc
ja
inc
adc
cld
sub
jbe
pop
lret
in
fidivrl
pushf
addb
pop
and
or
in
jmp
dec
dec
or
dec
pop
pop
inc
lods
or
cmpsb
ret
sbb
push
sbb
push
pop
lret
mov
mov
add
sbb
jo
jl
dec
sbb
dec
mov
and
jb
jbe
les
jb
mov
dec
adc
lret
out
mov
adc
or
sub
xor
xor
mov
push
lods
pushf
xchg
mov
ljmp
leave
xchg
jle
ljmp
dec
mov
js
push
mov
sub
rcrl
std
push
fcoml
or
mov
lahf
outsb
add
enter
pop
mov
loop
insb
push
add
fstpl
pushf
mov
fld
in
xchg
jns
mov
out
fucomp
arpl
popa
adc
clc
mov
icebp
and
or
xchg
mov
dec
mov
mov
inc
xchg
add
push
cmp
and
jmp
xlat
mov
xchg
data16
movsl
push
sahf
lret
aad
pusha
add
cld
loop
or
scas
call
xlat
mov
lcall
or
jbe
cmp
mov
inc
jb
jmp
add
loop
fst
or
std
sub
cmp
xchg
scas
js
orb
jnp
xchg
xlat
daa
scas
mov
mov
lock
test
mov
xchg
mov
jmp
daa
lahf
lods
fmull
or
add
mov
xor
test
jmp
push
ret
jno
adc
sub
les
sub
aam
mov
bound
in
jge
and
in
xor
xor
add
xchg
xor
lahf
xchg
subl
aad
sbb
jle
jmp
xorb
stos
fcomps
ficoms
test
jae
mov
mov
ljmp
add
xchg
sub
sahf
cli
fnstsw
cmp
dec
nop
addr16
lahf
mov
pop
sti
inc
pop
in
xor
scas
push
orb
and
mov
or
xor
in
into
push
mov
xor
push
lcall
popl
and
jae
jnp
jno
add
pop
nop
ret
dec
fildl
pop
mov
ljmp
loopne
mov
popf
xchg
dec
negl
xor
mov
push
pushf
stc
pusha
sub
nop
stos
aam
adc
ljmp
and
xorb
jp
xchg
test
or
mov
mov
and
sub
lret
adc
or
jnp
mov
mov
loopne
loop
into
popa
fstps
outsb
add
mov
xor
movsl
jle,pn
cs
in
adc
mov
sub
mov
or
sub
or
or
icebp
add
les
or
mov
movsl
clc
inc
or
pop
cmpsb
out
or
fnsave
push
test
pop
sbb
in
scas
shl
mov
sub
sbbl
gs
xchg
sbb
pushf
or
sbb
push
push
cld
sti
sbb
rolb
dec
or
mov
and
dec
sub
decl
les
jecxz
dec
add
jmp
or
add
jp
inc
fbstp
call
pop
and
lcall
cmp
daa
lcall
cmpsb
xor
imul
mov
add
jmp
xor
sbb
lea
adcb
out
jecxz
jge
shll
cmpsl
adc
xchg
ret
sbb
scas
dec
pop
sub
cmpsl
xor
enter
add
ljmp
jbe
add
fmuls
inc
sub
lock
scas
or
push
jno
xor
test
popf
push
aas
or
xor
jo
mov
mov
sub
pop
adc
in
inc
cmpsl
aas
cmp
mov
rorb
stos
addr16
add
lcall
dec
mov
jmp
jo
mov
sbb
movsl
ds
popf
leave
stos
jnp
roll
mov
mov
cmc
push
pop
push
sti
mov
and
es
lods
adc
scas
jo
or
add
xchg
cmp
in
hlt
lock
jne
mov
lods
icebp
fstps
les
jo
insb
out
or
xchg
mov
jno
movsb
cld
mov
adc
adc
jne
xor
add
jecxz
incl
lods
or
and
dec
popf
outsl
scas
cmpsl
and
or
adc
addr16
cwtl
jb
dec
rclb
les
mov
lea
and
test
mov
fnstcw
sti
out
jnp
xor
sub
mov
xchg
stos
imul
jecxz
cmp
push
pop
iret
out
sbb
rcr
mov
hlt
ror
ret
adc
sbb
scas
xchg
xor
push
pop
stc
mov
fidivs
mov
jle
add
pushf
and
jl
xorl
push
push
sarb
sub
fisubrs
ljmp
sti
loopne
inc
cmp
incb
and
xchg
leave
or
or
sub
pop
xchg
sub
loop
cmp
cmp
imul
cld
stc
mov
jl
fwait
stc
enter
sbb
dec
xlat
ss
mov
and
xlat
dec
add
adc
dec
movsb
lret
pushf
or
cmp
cs
sbb
jmp
icebp
stos
mov
xchg
pop
jmp
inc
pushf
jne
add
jl
mov
in
cmp
ljmp
xor
or
or
subb
call
movsb
repnz
ret
push
and
mov
cmp
push
jge
push
mov
xor
jl
test
fwait
popf
inc
push
call
add
sbbb
add
or
push
popf
jnp
jne
sub
adc
mov
leave
andb
sbb
loope
lret
ret
mov
lods
hlt
jnp
lock
push
jnp
frstor
les
mov
mov
ret
pop
test
movsb
sub
test
loopne
jge
loope
cvtpi2ps
lret
pop
mov
jo
or
dec
sbb
or
cmp
xchg
or
add
or
clc
sbb
push
fwait
and
mov
sub
dec
ret
mov
out
lcall
fsts
js
inc
daa
adc
jle
and
or
jnp
xchg
pop
add
jnp
jecxz
add
test
mov
rcll
fmull
mov
xchg
push
xor
lret
mov
xor
sub
mov
subb
in
adc
or
adc
scas
pop
lret
inc
add
xchg
in
push
sahf
jg
dec
scas
xorl
and
add
xchg
adc
push
and
lock
pop
or
add
inc
test
scas
movsl
test
and
popl
out
dec
or
mov
jmp
and
fcmovnb
mov
mov
or
stos
adc
sbb
dec
testl
sub
icebp
mov
jno
lret
mov
aam
inc
dec
jne
cmp
jne
sbb
in
sbb
push
mov
icebp
ret
mov
xchg
movsl
sub
inc
and
jne
and
push
sbb
xchg
or
push
or
out
cwtl
ljmp
jo
insl
mov
jl
jb
in
js
into
xlat
jb
js
push
stc
xchg
mov
rorl
cmpsb
shlb
xor
jg
add
arpl
cli
lahf
inc
mov
ljmp
scas
scas
cmpsb
pusha
mov
test
sahf
test
loope
jmp
xor
sti
mov
adc
adc
inc
or
and
mov
mov
sub
outsb
daa
inc
xchg
out
das
adc
cmp
sti
push
xchg
pop
inc
dec
bound
mov
push
xchg
stos
pop
or
and
mov
pop
aam
mov
pop
jnp
pop
mov
leave
in
enter
sbb
pop
int3
push
adc
call
push
mov
jmp
jne
pop
ljmp
mov
sti
movsl
int
sub
inc
popl
mov
adc
cmpsb
mov
sbb
les
mov
mov
inc
push
aad
xor
gs
sub
js
ret
jno
inc
aam
add
cli
mov
add
stos
dec
mov
lds
in
jbe
aaa
daa
sahf
mov
pushf
fwait
xor
repz
mov
and
out
cmpsb
outsl
in
sbb
outsl
inc
js
adc
es
and
insl
ss
push
add
sti
inc
fwait
xchg
and
movsl
inc
fisubrs
and
sti
add
mov
lret
lea
sub
ljmp
xchg
add
xchg
mov
jle
jl
jecxz
mov
scas
cmpsb
jb
or
ss
arpl
std
arpl
sub
xchg
pop
jne
loop
popf
popa
jmp
sub
mov
fldt
pushf
and
jecxz
and
in
inc
mov
xchg
or
mov
or
or
test
sbb
mov
pop
enter
jne
popf
aad
ret
add
inc
popa
enter
lea
loop
inc
fcmovnu
mov
fstpt
and
hlt
xor
sub
rcrb
sub
jp
mov
inc
jns
adc
cmp
push
lea
fs
dec
sub
jbe
inc
movsb
jbe
xchg
jno
add
mov
clc
mov
jnp
xchg
fimull
not
ljmp
xchg
lea
scas
cmpsb
xor
mov
sub
mov
dec
loop
fcoms
add
adc
or
popa
aam
sub
lods
jp
in
cmp
test
mov
cmc
push
outsl
pop
mov
cmp
insb
mov
hlt
lahf
sbb
mov
sub
test
out
fisttpl
lret
add
sub
or
and
scas
or
fwait
les
call
sbb
mov
push
push
btr
dec
lret
adc
sbb
and
ret
or
popa
orb
fisubrl
jmp
test
popf
and
sbb
xchg
fsubrs
decl
out
sbb
mov
dec
scas
push
xor
adc
jno
sti
pop
cmpsl
in
sti
decl
and
or
xor
mov
sub
fsubrl
add
ljmp
or
loop
inc
mov
pushf
sub
add
sbb
jae
mov
aam
dec
jnp
add
movsl
imul
xor
hlt
cld
adc
mov
out
cmp
out
mov
and
ret
lret
adc
lret
jmp
popl
mov
cmp
push
push
and
add
lock
pop
pop
and
push
das
out
adc
enter
jae
mov
xor
jl
push
jle
dec
and
jns
cmp
pop
sub
icebp
test
pop
jns
leave
repz
jns
xor
xor
mov
add
and
and
mov
testb
xchg
fstl
sub
add
stos
lods
fs
andl
in
adc
sub
mov
jl
sbb
and
push
mov
inc
cmp
push
mov
fidivl
mov
lcall
jmp
leave
rorb
dec
ret
jmp
adc
jecxz
cwtl
inc
in
jb
test
sbb
add
cmp
lret
rorl
push
jns
lods
cld
and
xchg
xchg
test
xchg
and
iret
jae
inc
mov
and
sbb
loopne
or
aas
icebp
dec
add
lret
std
sub
jmp
hlt
in
jle
std
pop
enter
cld
clc
pop
fidivrl
cwtl
pop
mov
sarb
dec
stos
mov
add
sub
dec
int3
ds
mov
sub
bound
ljmp
cmc
ljmp
jo
jb
out
inc
mov
pop
xchg
pop
jnp
xchg
pop
dec
xor
lock
out
ljmp
imul
or
test
jb
inc
pusha
cmp
jl
adc
jmp
dec
loop
dec
inc
js
lods
xor
shl
out
push
in
lods
or
test
out
cmp
insl
sub
fsubrs
ljmp
pop
outsl
in
lea
popa
pushf
stos
or
push
push
jmp
call
icebp
jmp
sbb
les
sub
mov
mov
cmpsl
mov
clc
dec
sahf
fsubr
test
jp
test
jae
xorl
cmpsl
insl
add
sbb
outsl
or
jg
cli
cmp
loop
popa
ljmp
scas
dec
movsl
mov
in
add
pusha
call
fcmovb
inc
sti
lret
sub
and
sub
repz
cmp
shll
outsl
xor
daa
or
push
fdivp
addl
nop
xor
int3
adc
shll
dec
mov
fsubs
xchg
mov
jae
and
mov
lods
into
xor
and
dec
sti
in
lret
ret
arpl
dec
rcrb
jbe
sbb
sub
mov
mov
notl
sbb
mov
mov
mov
leave
mov
push
movsl
mov
pop
mov
pop
sub
in
sahf
ret
dec
dec
adc
pop
aam
xchg
pushf
inc
push
or
shrl
mov
jp
mov
fsubl
sti
pop
stos
jl
movsl
mov
cmpsl
lods
jnp
push
xchg
idivl
jle
or
scas
cmp
repz
push
jnp
dec
fucomp
popa
mov
in
scas
test
cmp
mov
mov
mov
sbb
ret
ds
movb
pushf
xor
js
mov
push
lock
test
mov
lea
hlt
jp
fldcw
lods
xlat
jno
leave
sbb
or
out
push
bnd
lds
inc
inc
daa
call
dec
pop
xchg
add
mov
stos
pushl
cltd
cmpsl
mov
mov
addr16
jecxz
lret
inc
inc
or
pop
es
fisubrs
iret
jno
xchg
leave
add
int3
insl
repz
dec
inc
in
sub
fcmove
mov
adc
imul
bnd
cmpsb
ret
insb
lret
xor
leave
movsl
lret
jno
enter
mov
leave
shlb
inc
jle
add
push
adc
out
or
arpl
lret
or
ds
or
or
mov
jns
dec
stos
inc
pop
gs
jns
xor
cmp
dec
push
hlt
fbstp
sbb
push
mov
lcall
int3
adc
or
push
cmc
rolb
or
insb
xchg
jmp
jl
mov
or
jno
out
lods
add
lock
adc
pusha
add
ja
in
cs
iret
sub
mov
mov
jp
mov
ljmp
aaa
mov
scas
lods
and
es
mov
ret
out
dec
daa
jmp
leave
pop
mov
mov
xchg
add
adc
lret
dec
pop
jmp
arpl
imul
pop
lea
scas
mov
inc
mov
jb
pop
pop
jecxz
add
xchg
out
aaa
xchg
jg
aaa
mov
jmp
add
sti
jp
ret
inc
test
pusha
adc
mov
add
je
es
in
xchg
sbb
fidivrs
inc
mov
int
hlt
dec
ds
dec
in
ficomps
leave
imul
test
pop
mov
mov
jnp
cwtl
dec
xor
jmp
pop
dec
xchg
sbb
fcomps
xchg
and
into
sbb
fmul
jp
lret
push
out
out
int3
mov
jl
xor
into
rcrl
sbb
mov
popa
dec
mov
pop
inc
imull
dec
mov
xor
push
fisubrs
sarl
movl
lret
xor
subb
subb
arpl
loope
and
faddl
mov
adc
cwtl
pop
cmpsl
in
sub
xchg
sbb
int3
add
je
xlat
imul
or
iret
ret
mov
cmp
push
pop
mov
shll
inc
loope
stos
lahf
fldl2e
jmp
js
dec
and
pop
xchg
add
in
sub
and
push
imul
fsubl
mov
test
cmp
movsl
push
or
cmpsb
addl
xchg
add
aas
adc
push
mov
dec
nop
ljmp
out
cld
dec
cmc
jae,pt
pusha
xchg
cmpsb
dec
fcomps
dec
movsl
frstor
jp
insb
pavgw
jmp
into
imul
out
rcrl
dec
int3
jle
fistl
enter
mov
ret
loop
add
lea
movsb
sahf
sub
or
mov
scas
fpatan
sub
repz
rcr
mov
jno
push
mov
mov
push
enter
movsb
or
mov
repz
out
mov
fldt
pop
hlt
in
lds
andl
loop
fildl
imul
cmp
ret
fisttps
aaa
cld
and
xor
mov
enter
ficoml
xor
inc
jecxz
cmc
ret
lods
sbb
adc
pop
cld
int3
lcall
adc
out
pop
lret
jl
cmp
mov
adc
push
or
sub
sub
dec
inc
and
add
pop
and
inc
push
hlt
mov
pop
mov
jne
ficoms
sub
cmp
mov
add
add
lea
xchg
xchg
xchg
push
mov
xchg
mov
jns
addl
insl
xor
dec
popl
ret
test
or
incl
cltd
mov
pop
cld
adcl
aam
test
mov
mov
jge
sti
fidivrs
sbb
fwait
loope
mov
inc
dec
out
push
lods
into
add
sub
inc
dec
stos
ds
in
ror
push
cmpsl
push
fld
cmp
or
ret
mov
cmp
scas
mov
and
sbb
gs
pop
popa
add
in
ljmp
dec
dec
xor
cmp
cld
lods
jmp
cwtl
mov
jl
js
pop
lcall
mov
mov
adc
add
or
sbb
jg
out
test
je
mov
pop
fs
lock
mov
inc
push
les
inc
or
addl
cmpsl
lods
ret
repnz
out
pusha
cvtps2pd
arpl
dec
mov
std
push
jne
sti
jge
ret
dec
adc
or
pop
mov
mov
push
xchg
sbb
arpl
xchg
jae
mov
in
xor
fsubs
js
pop
fwait
out
cmc
xchg
pop
sahf
mov
iret
nop
sub
and
mov
mov
mov
xor
insb
stc
lret
int3
and
pushf
pop
hlt
mov
popf
cmpsb
and
stos
adc
dec
add
adcb
stos
test
cmp
push
rolb
or
lods
mov
loope
and
int3
push
cltd
xchg
cli
add
ljmp
adc
push
popf
jns
xlat
inc
xor
fcmove
repz
adcb
cld
sub
xor
xlat
pop
nop
adc
stos
add
and
push
mov
adc
in
outsl
sbb
inc
inc
ret
sete
dec
jmp
xchg
pushf
sahf
outsb
dec
movsb
sbb
lcall
inc
xchg
jp
cmp
test
sbb
aam
cmpb
sub
test
lret
lret
mov
push
push
aad
lret
scas
add
imul
insb
jae
cwtl
or
mov
loopne
jmp
jge
pop
scas
rorl
add
add
out
or
insb
mov
test
pop
jmp
push
sti
inc
filds
push
cmp
adc
sub
cmp
sti
push
mov
stc
sti
arpl
in
pop
stos
movsb
sub
loope
jl
inc
adcb
clc
sarl
rep
sahf
icebp
addr16
mov
imul
dec
orb
js
xchg
or
in
or
inc
add
cmp
loopne
inc
shr
ja
jmp
nop
add
push
sub
pop
clc
mov
inc
dec
add
pop
test
loopne
add
sahf
dec
int
fwait
inc
mov
cld
imul
rolb
jno
lock
enter
dec
mov
leave
xchg
in
jb
sti
pop
dec
or
call
jp
insl
fnstsw
out
negl
jmp
jmp
pusha
scas
mov
jb
fisubrl
add
xchg
dec
or
and
ret
movsl
mov
mov
adc
mov
loop
cmp
sti
jecxz
out
sbb
cmp
sub
xchg
xor
scas
leave
mov
scas
call
pop
mov
xchg
jmp
adc
les
mov
scas
fildll
mov
jmp
dec
sbb
mov
push
fldt
fmul
fmuls
les
sub
push
rolb
mov
cmp
sbb
xchg
ffreep
mov
adc
popa
cwtl
sahf
bnd
sbb
xchg
cmpsb
adc
push
repz
add
addl
pop
dec
in
ret
and
jecxz
pop
or
or
xor
mov
cltd
data16
sub
dec
cmc
adc
dec
sbb
push
out
sbb
mov
clc
nop
push
pop
lahf
lret
shrl
jecxz
or
out
stos
xchg
xor
aaa
cmp
inc
idivl
xchg
push
mov
repz
movsl
adc
mov
push
jbe
lock
fwait
push
add
pop
add
decl
dec
mov
add
add
sub
andl
or
aad
js
rcrl
js
outsb
je
pushf
xor
dec
mov
call
scas
icebp
add
jp
mov
adc
mov
addr16
lods
cmp
jg
dec
push
test
cmp
mov
cmpl
stos
and
lret
adc
ds
mov
pop
adc
loop
fs
xchg
jo
pop
int
into
adc
es
cld
pop
int3
rorb
test
mov
lret
mov
add
or
into
outsl
mov
rclb
aad
in
mov
lods
enter
daa
aaa
mov
dec
movsl
or
pop
outsb
and
nop
mov
shlb
inc
inc
xchg
or
js
imul
mov
fs
sub
ret
je
es
out
mov
mov
mov
cli
imul
sub
ror
mov
dec
sbb
insb
pusha
mov
in
insb
fistpl
xchg
enter
adc
xor
rorb
sbb
test
test
jl
xchg
sub
inc
inc
inc
aam
cmc
sbb
cwtl
mov
movsb
stos
adc
mov
push
lret
xchg
inc
or
add
adcb
or
data16
mov
std
or
mov
orb
shrl
lret
scas
mov
fidivs
mov
dec
mov
lods
and
addr16
lds
jle
jle
lock
stos
pusha
adc
cs
repnz
stos
rorb
out
loop
mov
xchg
aaa
lret
mov
sahf
ljmp
or
or
xchg
daa
push
mov
push
rcrl
sbb
ror
cli
sbb
push
pop
int
arpl
sub
push
cmpsl
stos
shl
and
pop
in
aas
jns
cmp
inc
ds
adcb
js
xlat
and
xor
sarl
or
arpl
jl
xchg
mov
mov
lcall
sahf
gs
sub
rclb
mov
insl
mov
sahf
cmp
or
add
test
les
push
sbb
and
loop
addr16
decl
lods
cli
mov
dec
xor
sbb
lret
sub
jmp
mov
jle
dec
mov
shrb
sbb
inc
sub
nop
xchg
jo
xchg
inc
loope
out
sbb
das
in
int3
movsl
setle
fcomps
xchg
dec
inc
lea
sbb
adcb
sti
and
mov
ds
cmp
adc
adc
sarl
js
jno
sarl
femms
push
int3
movsb
test
push
mov
sub
andb
in
push
cltd
or
call
cld
and
inc
dec
jb
pop
inc
xchg
dec
je
xchg
mov
or
push
popa
sbb
cmp
lcall
xchg
call
popl
insb
inc
xchg
sar
mov
scas
mov
adc
sbb
and
aam
push
cmp
or
sbb
push
push
jnp
add
xchg
inc
shll
inc
xchg
loope
ja
pushf
mov
sub
test
sub
inc
in
fwait
inc
add
adcl
add
pop
sti
insb
add
movb
dec
inc
mov
fucom
and
int
dec
fisubrl
orb
ror
mov
mov
mov
pop
pop
inc
mov
xchg
xchg
xor
adc
jecxz
icebp
std
fldenv
pop
pop
push
sub
jnp
pop
and
aad
jecxz
sub
out
dec
mov
xor
add
pop
push
dec
inc
mov
and
repnz
out
jecxz
mov
fistps
mov
mov
adc
mov
arpl
mov
push
push
and
ror
xchg
mov
lods
mov
loopne
xchg
or
sub
mov
cmp
cmp
dec
bound
push
ret
mov
xchg
push
addr16
sbb
push
add
pop
pushf
mov
add
sbb
add
jns
out
xchg
mov
xor
dec
mov
push
cmp
inc
cmp
sahf
shll
daa
mov
out
rsqrtps
or
adc
cmp
adc
and
pop
pop
xor
fmull
cli
push
mov
stos
mov
jbe
push
and
dec
test
jns
cmp
std
fisubrl
mov
push
xor
clc
cmpsb
mov
in
inc
lcall
ljmp
inc
jbe
mov
popa
and
jmp
sti
dec
test
fld
clc
popf
aam
fdivrs
out
aas
insl
mov
rcll
xchg
das
cmp
adc
jg
dec
xchg
test
adc
dec
adc
lods
jo
push
sbb
and
insl
loop
mov
rorb
pushf
shlb
pop
arpl
cmp
and
sub
or
inc
or
cld
push
or
cld
es
cld
xchg
jle
inc
je
mov
cmp
adc
adc
fcoml
sub
mov
cltd
xchg
cmpsl
xor
lret
inc
dec
test
and
add
sbb
sbb
iret
add
out
leave
out
jne
shrl
sbb
jge
sub
and
push
dec
xchg
lret
test
dec
rcr
loop
bound
mov
lods
les
mov
pop
jmp
test
arpl
daa
int
stc
adc
arpl
mov
xchg
daa
pandn
insl
testb
add
je
out
lret
js
sub
pushf
mov
pop
xor
mov
mov
and
popf
push
xor
sbb
inc
fsub
mov
mov
lods
mov
xor
rorl
xchg
mov
ljmp
faddl
test
mov
into
push
addl
xor
or
jecxz
push
and
push
rorb
stos
xor
adc
fidivrl
cmp
push
ret
in
lea
mov
inc
test
push
clc
and
pop
jnp
jecxz
outsb
std
mov
dec
bound
and
inc
or
mov
mov
push
or
push
mov
arpl
add
mov
outsl
jbe
repz
test
mov
hlt
or
and
sahf
imul
mov
aas
dec
js
sub
pop
pop
into
sbb
in
mov
ret
imul
or
loop
cli
fisttpl
lret
enter
xchg
mov
rcll
mov
inc
inc
mov
mov
pusha
sahf
inc
adc
dec
cmp
inc
pop
pushf
pushf
aad
sbb
ja
and
pop
aad
sub
mov
xlat
cmpl
mov
test
adc
inc
fwait
pop
mov
xchg
push
mov
push
fisubl
rorb
inc
inc
cwtl
stos
push
sbb
adc
js
adc
nop
pusha
icebp
popf
rol
lods
dec
push
dec
add
aam
dec
dec
or
mov
push
lcall
nop
roll
aam
adc
or
inc
xor
xchg
lcall
lods
adc
pushf
and
jo
xchg
or
mov
fidivrl
xchg
in
int
push
sar
jl
ret
add
decl
xchg
mov
cmp
or
push
dec
lock
push
sbb
xor
sbb
cld
add
aam
jge
xacquire
sbb
push
cmp
mov
mov
mov
adc
fnstsw
xchg
push
fidivl
xchg
loopne
loope
lahf
add
push
dec
mov
add
dec
adc
imul
mov
sbb
push
add
aas
cwtl
pusha
dec
cld
imul
mov
pop
push
scas
pushf
xchg
pop
movsl
mov
cmpsl
jge
xor
inc
push
scas
icebp
push
dec
mov
sbb
pushf
inc
orl
out
cwtl
mov
or
stos
es
xchg
aaa
testl
mov
daa
xor
out
or
mov
cmp
xor
orb
xchg
adc
adcb
add
mov
and
leave
insb
sbb
cwtl
or
loope
std
sbb
movsl
sbb
add
sbb
adc
mov
or
pop
mov
js
pop
jae
push
cmp
sbb
movsb
lock
icebp
jmp
sub
cmp
adc
jg
or
rcl
movsl
or
sbb
mov
fistpll
inc
mov
scas
stos
mov
jmp
into
jl
gs
xlat
stos
jnp
or
jge
xchg
cli
mov
sahf
ret
adc
bound
xchg
out
inc
xchg
xchg
sub
daa
out
add
mov
test
sbb
mov
cmp
es
clc
push
into
cmpsl
jmp
popf
inc
mov
jge
mov
mov
pop
fstpt
mov
xor
jnp
lcall
inc
or
addr16
insl
in
or
mov
and
repnz
mov
pushf
dec
adcl
adc
ret
out
and
adc
test
mov
sub
mov
push
andb
inc
pop
mov
dec
sbb
cmp
clc
mulb
pop
out
shld
xor
test
cmpsl
sbb
mov
inc
sub
mov
inc
pop
loope
sti
mov
scas
push
or
pop
or
or
xor
mov
out
addr16
in
stc
enter
or
mov
inc
dec
mov
loope
sbb
sarb
push
mov
add
notl
sbb
cmpsl
xchg
pop
pusha
mov
repz
sbb
cmpsb
hlt
xor
inc
lret
ds
mull
add
adc
mov
add
push
mov
add
and
jb
popf
xor
jg
cld
mov
sti
mov
mov
test
and
mov
add
jle
repz
scas
andb
lds
jge
push
fildll
inc
icebp
cmp
out
and
push
inc
stos
icebp
mov
icebp
dec
and
rorb
mov
jae
rclb
cwtl
ret
in
push
fcomp
pop
mov
add
mov
jmp
push
bound
jmp
sti
lahf
sahf
pop
stos
cwtl
cmpsl
pop
out
int3
negl
ljmp
and
jecxz
or
push
xchg
or
push
sahf
dec
mov
stos
mov
flds
add
mov
lret
out
mov
loope
int3
out
les
push
sbb
pop
push
add
rcrb
or
ljmp
lret
fisttpll
and
add
into
mov
pop
loop
xchg
fsubrl
repnz
jp
mov
insl
fwait
or
xor
mov
das
sti
xrelease
or
addr16
outsb
test
sub
sar
xor
and
jb
xchg
pop
wbinvd
mov
sti
jne
jmp
and
orl
repz
cmp
iret
not
xchg
or
mov
sbb
mov
nop
push
dec
sbb
or
pushl
out
or
inc
out
jmp
shrb
adc
mov
rorl
dec
stos
loope
jmp
cmp
mov
add
jno
cmpl
adc
test
popf
sub
mov
enter
pmaxsw
hlt
dec
add
jne
in
sahf
imul
fwait
je
mov
test
repz
and
loopne
mov
pop
addl
fsubp
mov
lret
adc
out
sti
add
cmpsb
loope
popa
loop
outsl
or
lcall
mov
or
jle
lock
cmp
scas
insb
cli
stc
mov
mov
inc
enter
mov
push
sbb
dec
push
dec
sub
cmp
pushf
push
xchg
sbb
int
das
sub
andb
jne
or
cld
lods
xor
jle
jl
sub
add
nop
add
fstpt
lea
mov
rorb
mov
cli
and
mov
ret
in
aas
popf
mov
test
inc
fildl
add
adc
jp
and
icebp
mov
or
jb
and
pop
sbb
lahf
jo
cmp
jp
popf
push
push
mov
mov
rcrb
push
adc
or
jno
xor
sbb
movsb
jle
mov
imul
and
daa
movsl
sub
or
loope
cli
ja
out
mov
stos
mov
sahf
sti
scas
dec
std
cmp
sbb
dec
pop
or
mov
orb
pop
aas
pop
dec
scas
in
sbb
xor
sub
ds
add
dec
bound
testb
mov
movsb
lcall
negl
mov
adc
insl
adcb
xor
movsl
lcall
test
or
outsb
in
fwait
lret
cmpsl
jnp
pop
cmpsl
lods
test
xchg
daa
add
jae
sub
jge
jge
mov
pop
es
insl
out
lods
fsubrs
dec
lret
pusha
inc
aas
add
push
out
or
inc
dec
jl
push
decl
inc
mov
pop
lds
sbb
imul
mov
xchg
adc
das
dec
add
cmp
jnp
or
adc
cmp
xor
sbb
mov
addr16
adc
xchg
insb
sbb
out
shlb
or
scas
add
mov
movsb
xchg
add
lods
jae
imul
dec
xchg
sti
out
push
xor
sti
call
sti
dec
lret
scas
sub
mov
out
fildll
mov
clc
lret
adc
adc
add
xor
mov
jmp
out
jmp
out
adc
xchg
ss
scas
or
das
adc
sub
sbb
xor
subb
and
test
stc
mov
mov
sub
xor
call
dec
sbb
les
clc
inc
neg
sbb
outsb
int
adc
jp
add
jl
jg
sub
adc
push
sti
aad
addr16
jle
add
test
mov
imul
scas
ds
pop
jle
sub
js
xchg
or
cs
nop
ret
push
idivl
in
push
dec
jle
sti
or
mov
sbb
jnp
mov
add
jne
or
jno
daa
mov
imul
testb
pushf
cli
mov
ljmp
jmp
ljmp
mov
or
jmp
sti
test
loop
addl
and
enter
mov
xchg
arpl
rorl
in
lcall
push
fucomip
add
and
xor
lret
and
jecxz
fnstsw
aas
notb
or
lret
leave
cmp
leave
xlat
fldl
jp
fdivl
inc
stos
lret
xchg
outsb
ret
push
mov
loop
in
imul
adc
sahf
inc
pop
inc
cmpsb
xchg
and
popf
mov
xor
or
jnp
push
outsl
pop
insb
pop
sahf
imul
mov
hlt
jne
mov
sub
xlat
icebp
lahf
cmpsl
mov
inc
in
push
adc
sbb
push
fildll
add
scas
pop
and
and
and
fcmovnu
adc
loope
or
inc
sub
mov
repz
xchg
mov
sub
push
cltd
xor
jb
ret
push
mov
pushf
in
xchg
nop
stos
stc
iret
aaa
mov
mov
xchg
pop
stos
pop
mov
xor
jbe
xchg
mov
iret
pop
pusha
or
or
and
or
cmovb
lds
dec
push
in
sahf
jmp
jo
scas
gs
pop
xchg
ret
sti
push
jmp
inc
stos
jg
mov
cmp
cmpsb
into
dec
mov
sbb
aaa
test
adc
int
jbe
lcall
cmp
out
dec
nop
or
sti
pop
mov
cld
cwtl
or
add
repz
js
test
dec
pop
inc
sub
and
sti
loopne
aas
imul
cwtl
orb
mov
xor
xlat
mov
daa
adc
cmp
lock
and
sahf
inc
out
ds
subb
fadds
add
jp
sbb
hlt
imul
movsl
dec
mov
mov
adc
pop
in
loopne
dec
jp
test
in
cmpsl
xchg
jno
decl
popf
lds
or
mov
pop
fnstcw
lcall
jge
push
push
jae
lds
pop
mov
repnz
dec
xchg
not
adc
jns
stc
cmp
je
push
clc
inc
xchg
shll
out
mov
or
lods
bound
std
flds
lods
sarl
add
mov
aas
imull
or
add
jno
ja
jle
pop
out
fadd
xchg
movb
fcmovu
daa
jecxz
xor
adc
mov
jne
sbb
ljmp
push
fdivrl
cs
loope
pushf
dec
or
cli
pop
fs
pop
call
sbb
jl
setbe
les
test
push
fildll
push
mov
daa
decl
ljmp
sub
out
and
xchg
in
jle
and
out
dec
arpl
into
in
mov
push
test
ror
orb
adc
mov
adc
outsl
andl
or
lret
mov
inc
mull
inc
push
call
adc
into
xchg
stos
jnp
in
cmp
push
xor
cld
dec
push
inc
fimuls
mov
test
imul
stc
xchg
xor
mov
jg
les
xchg
lret
pop
dec
in
imul
into
loope
sbb
dec
sti
add
mov
xlat
inc
xchg
adc
push
pusha
dec
lret
in
mov
or
ljmp
jp
fucomi
cmp
add
lods
add
mov
xor
pop
sub
push
sub
xor
nop
ror
andb
lock
pop
mov
addr16
aad
insb
push
std
pushf
stos
jge
in
xor
push
rclb
add
push
hlt
and
sub
and
inc
ja
loope
rcr
mov
adc
int3
jle
cmp
sbb
jmp
mov
adc
sbb
mov
dec
sbb
js
push
imul
cmpsl
xchg
popa
sub
inc
lret
cmc
sbb
cmpsl
xchg
shll
xchg
jle
icebp
xchg
orl
push
imul
add
and
mov
sti
subl
mov
push
ret
pushf
fldl
adc
jecxz
fwait
icebp
addb
sub
push
or
rolb
pushf
pusha
test
mov
lret
andl
adc
or
cli
jmp
inc
movsl
hlt
mov
inc
xchg
in
adc
shlb
mov
lock
mov
push
daa
popf
inc
dec
sbb
ret
adc
dec
dec
xor
into
ljmp
inc
xchg
cmc
int
push
inc
into
ret
adc
scas
cmp
lds
push
cli
ds
jmp
stc
pop
test
xchg
movsl
mov
adc
sbb
or
sbb
mov
jg
jns
in
stos
mov
aas
rol
push
or
mov
cli
mov
jo
push
popa
mov
adc
ret
add
repnz
mov
mov
jno
rol
repz
push
fstpl
fimull
lock
in
shl
out
xor
lods
cmpsl
mov
out
xchg
or
jl
inc
scas
lcall
cmpsl
dec
repnz
scas
inc
sub
cmc
xchg
inc
outsb
jl
popa
out
push
cli
out
sbb
sub
xchg
xor
lret
xorl
ja
sbb
pusha
add
dec
mov
mov
lods
mov
push
mov
aas
add
mov
mov
lret
out
add
loopw
test
enter
ljmp
test
imul
and
and
xlat
out
jge
outsb
cmp
pop
mov
dec
cmp
inc
mov
orb
jecxz
pushf
cmp
sub
iret
pop
jns
ror
add
arpl
pop
out
mov
loopne
cmp
call
and
es
mov
ret
xlat
push
pop
push
ss
jbe
dec
data16
std
push
sbb
dec
pop
mov
pop
scas
push
dec
lea
je
dec
scas
jo
sub
in
push
push
lahf
pushf
test
das
int3
xchg
lcall
sub
mov
jmp
aas
sbb
or
jg
mov
outsb
enter
jle
adc
mov
incl
pop
sbb
inc
test
dec
mov
ficomps
leave
sub
push
xchg
lea
rcll
test
fs
inc
or
fwait
cmpsb
mov
sbb
cwtl
data16
loop
cmp
out
addr16
mov
jnp
mov
fstps
or
leave
mov
in
jge
lods
hlt
jle
pop
adc
nop
stc
push
aam
test
dec
bound
push
decl
movsb
ljmp
dec
cmpsl
shll
imul
push
in
test
das
pop
adc
jle
adc
lret
scas
or
push
popa
or
cmpsl
sbb
lods
mov
mov
mov
decl
push
sub
and
sub
std
jl
sahf
lretw
loope
add
jecxz
pop
xor
int3
push
lcall
lcall
test
mov
jns
and
std
push
mov
loop
daa
into
repz
pop
cmp
fidivrl
lret
dec
sbb
orb
inc
in
dec
js
sub
xchg
jp
adc
in
xchg
mov
movsb
xchg
leave
lods
jge
movsb
or
test
sub
ror
in
adc
call
les
sahf
dec
testb
inc
inc
xorb
rdmsr
lret
rol
dec
sub
sub
and
stos
mov
aam
mov
adc
inc
sti
enter
push
les
sub
and
pop
dec
sub
push
jmp
xchg
or
jmp
dec
pop
pop
loopne
adc
push
and
mov
or
adc
or
adc
dec
jnp
scas
add
ja
mov
pop
lds
inc
and
sbb
imul
push
or
cld
pop
sub
icebp
cmpsl
sbb
jbe
sub
data16
inc
out
push
pop
sub
jbe
imul
add
in
jmp
lods
arpl
adc
sub
mov
mov
int3
mov
sbb
jb
rol
repz
ret
les
or
inc
sbb
addr16
ret
mov
pop
filds
les
mov
push
jnp
mov
pop
xor
mov
outsl
sbb
sub
xchg
cmp
test
xor
mov
sub
mov
adc
rol
gs
xchg
cmp
stos
push
das
or
jmp
test
movsl
cmp
les
and
jle
cmc
addl
jmp
aam
test
pop
pop
loop
clc
arpl
in
stos
add
cmp
test
xchg
inc
pop
mov
push
dec
sbb
and
dec
jae
or
push
adc
dec
xchg
push
adc
mov
lahf
les
push
xor
inc
xor
dec
jle
add
sub
adc
sub
push
adc
jmp
push
shlb
lods
sti
inc
inc
mov
adc
and
cs
daa
lret
or
rep
sub
xchg
pop
add
adc
rorl
mov
sbb
adc
adc
mov
xchg
adc
lock
mov
or
rcrb
dec
stos
outsb
adc
or
ja
sub
xor
inc
and
into
test
mov
ljmp
std
int3
shr
sti
jge
or
rorl
cli
iret
cmp
test
mov
or
cltd
in
xchg
loope
xchg
arpl
and
adc
inc
dec
pop
dec
mov
mov
test
jbe
jnp
jb
add
int3
stos
scas
js
dec
imul
in
inc
fwait
loop
adc
movsb
stos
wbinvd
inc
pusha
or
test
or
sbb
jne
in
push
int3
les
jmp
jl
sahf
sub
fucomi
cmp
adc
stos
sbbb
push
insl
or
adc
add
repz
xor
call
xchg
jg
or
sbb
popf
sbb
add
loope
pusha
sbb
jmp
call
imul
dec
xchg
xor
test
or
int
cmpl
adc
cwtl
ficoms
cmpsl
lret
cmp
inc
push
mov
outsl
cmp
fucomip
sub
aas
adc
mov
out
lret
push
addr16
push
js
jp
mov
jg
insb
mov
inc
hlt
ror
inc
adc
inc
inc
ss
jge
inc
sbb
sahf
fmull
insb
cmp
fists
sbb
or
adc
mov
sub
sub
in
mov
addr16
sub
push
jb
cmp
add
jmp
and
jmp
int
call
stos
shlb
incl
stos
adc
gs
mov
popf
and
sub
jno
mov
push
push
movsl
add
push
cmp
int3
dec
mov
push
inc
adc
sahf
ljmp
cmp
push
jmp
xor
adc
push
jmp
adc
push
or
inc
nop
into
scas
mov
add
pop
push
push
mov
pop
add
mov
mov
ljmp
fs
add
ficoml
or
stos
adc
mov
or
ret
data16
andl
jmp
out
in
aam
scas
dec
enter
lret
jne
stos
push
addb
add
ficompl
ret
sbb
inc
rclb
fdivrs
clc
fdivs
push
or
orb
test
testl
shlb
stos
xor
xchg
ret
ret
pop
pop
nop
lret
scas
test
ficompl
in
mov
push
fs
test
insb
mov
adc
jnp
ja
jnp
les
leave
add
jecxz
lods
int
add
sub
in
inc
aaa
call
or
sahf
ret
cwtl
cld
sti
popa
mov
pop
sbb
jp
lcall
loop
rep
cmpsl
imulb
out
sbb
sub
jb
roll
jo
inc
cli
aam
xchg
mov
and
stos
ficompl
jle
dec
loope
or
ret
pop
or
bound
mov
sub
pop
test
inc
scas
or
mov
push
aaa
cld
into
adc
mov
pusha
outsl
push
mov
scas
rcll
xor
sbb
es
push
aaa
cli
out
push
dec
or
incl
pop
daa
jno
mov
loope
pop
adc
adc
sbb
push
sbb
jne
leave
pop
je
pop
fsubrl
cmp
xor
mov
fisttpl
nop
add
dec
jp
add
sbb
cmp
lds
jb
jns
or
enter
fdivrs
sbb
addr16
lret
and
xchg
jg
mov
mov
into
mov
lock
cmp
adc
mov
movb
mov
scas
add
sub
bound
add
adc
jmp
sbb
test
das
sbb
sbb
ss
or
stc
push
popf
fmull
scas
ljmp
jbe
call
mov
sti
repz
xchg
xor
mov
in
or
addb
je
imul
test
popf
int3
fcompl
sahf
push
ja
and
pushf
xchg
mov
das
jae
or
fldl2e
fsubl
mov
sbb
mov
jp
adc
mov
cmc
and
clc
mov
in
pop
jp
or
mov
movl
cmpsl
jno
movsb
pop
pop
xchg
scas
addr16
inc
leave
movsb
callw
mov
lret
psrld
xchg
outsl
push
adc
lods
push
or
leave
xchg
dec
xor
cmp
lds
cmp
inc
leave
xorl
ret
xchg
fiaddl
sbb
jge
jle
test
mov
in
sbb
jno
sub
loop
bound
jmp
xor
out
xor
jne
xor
scas
int3
cmp
lods
fmull
cltd
loopne
out
ret
and
lret
dec
sarb
test
cmpsb
inc
mov
dec
inc
dec
nop
loopne
inc
add
sbb
subb
xchg
mov
aam
fstpl
into
insb
sti
push
mov
subl
loope
shlb
into
add
dec
mov
or
cs
inc
jns
push
hlt
lcall
xchg
test
test
pop
xchg
lcall
adc
mov
das
lret
cwtl
jnp
into
inc
adc
inc
lret
add
movsl
mov
inc
or
pop
inc
fsubl
out
ret
stos
pop
cmp
xor
mov
cmp
pop
adc
or
and
mov
dec
lret
add
push
or
ret
jnp
lahf
dec
pop
dec
inc
sub
fisubrl
inc
add
mov
sub
push
and
nop
adc
in
ljmp
lock
dec
pop
mov
call
inc
xor
and
nop
incb
jmp
insl
aam
mov
lock
xor
movsb
lock
inc
cli
inc
add
and
lret
xor
jp
dec
sub
and
sbb
sub
insb
sahf
leave
scas
push
pop
int3
add
xor
xchg
dec
jne
stc
out
sti
xchg
and
xor
push
jmp
divb
pushf
sbb
sub
add
hlt
ret
jmp
insb
mov
cmp
shlb
fiaddl
fldcw
inc
ja
push
mov
mov
jle
outsb
lret
in
mov
stos
ret
cltd
int3
clc
pop
adc
inc
lahf
push
xor
mov
ret
sub
andb
pop
adc
or
push
loopne
pop
inc
add
cmc
sbb
call
mov
cmpsl
popa
xchg
nop
or
pop
mov
push
xor
or
xchg
dec
mov
mov
mov
fwait
fs
dec
movsl
fmuls
popf
notl
movsb
jecxz
lock
add
lods
stos
sbb
cwtl
movsb
ljmp
loope
int3
jo
scas
bound
xlat
and
aam
pop
ds
cltd
cmpsl
test
cmp
adc
pop
ja
lahf
lods
xchg
jecxz
cmp
sub
sbb
iret
xchg
sbb
xchg
popf
and
loop
and
inc
push
cli
adc
addb
adc
call
pusha
daa
orb
mov
jno
xor
mov
sahf
stos
in
sbb
out
xchg
or
scas
xchg
out
mov
mov
popf
fsubrl
jle
inc
in
das
pop
push
sahf
lretw
dec
or
mov
mov
jge
call
data16
fldenv
add
push
inc
cmp
rcrb
jo
cmp
fldt
lcall
loop
mov
leave
sbb
inc
mov
dec
stos
xor
roll
inc
loop
or
leave
inc
orb
test
cmpsb
sub
orl
mov
test
mov
dec
lahf
cld
jl
jecxz
call
loopne
cmp
cmp
sbb
fcomp
push
mov
sti
inc
stos
pop
adc
loop
dec
mov
stos
out
push
mov
inc
mov
mov
mov
in
and
mov
outsl
mov
push
jge
and
xchg
pop
and
mov
daa
enter
cmp
cli
pop
ret
out
lcall
arpl
mov
cmpl
fisttpll
inc
clc
mov
xlat
ret
in
xchg
idivb
or
cwtl
movb
mov
das
icebp
test
daa
jne
cmpsb
jmp
ljmp
cli
gs
jle
mov
push
insl
sub
dec
lret
js
add
or
or
mov
inc
in
pop
int3
mov
outsl
inc
in
jg
and
sub
xchg
ja
std
stos
mov
insl
push
mov
loop,pt
xchg
movsb
xor
cltd
aam
into
notl
mov
pop
inc
dec
inc
mov
ret
push
mov
faddp
pop
aas
insb
dec
in
add
ds
and
clc
pusha
daa
movsl
outsb
xchg
daa
add
aas
mov
mov
sbb
sbb
dec
rorl
mov
lret
xor
imul
xor
aad
ljmp
sbb
jns
pop
aaa
call
mov
sub
subb
sti
in
or
mov
mov
sub
lret
test
push
jmp
enter
icebp
nop
push
jmp
add
sub
xor
lods
mov
fwait
sub
xor
sbb
inc
ret
adc
aad
and
mov
mov
and
mov
jns
or
nop
push
ret
fdivrs
mov
and
xchg
pusha
and
stc
cmpsl
pop
mov
das
xlat
int
in
push
insb
jp
adc
andb
das
push
sbb
push
out
pop
mov
pop
lret
cmpsb
xchg
ljmp
out
ret
orl
daa
call
loope
inc
cmp
add
mov
in
sbb
lea
repz
loop
ljmp
sub
stc
pop
ret
xor
inc
inc
aad
dec
inc
cld
push
cmp
inc
cmp
mov
out
pop
xor
outsl
push
adc
and
cmp
dec
mov
push
pop
sar
jmp
jo
or
jns
pushf
lds
jne
popa
add
arpl
jle
adc
fcompl
or
out
stos
cmpsl
iret
cld
movsb
fnsave
pop
gs
cmp
cmp
adc
pop
movsb
dec
sub
in
add
jmp
sub
pop
outsb
loope
pop
push
mov
xchg
cmpsb
imul
int3
mov
jmp
call
xchg
pop
movsb
adc
mov
xchg
push
mov
and
sub
mov
in
or
sub
add
sahf
aas
lock
aas
shlb
jo
adc
adc
mov
ret
int3
jnp
adc
xor
jnp
and
mov
pop
or
rorl
js
test
imul
sub
arpl
jmp
mov
xchg
add
mov
xchg
scas
sub
in
push
sub
rcll
add
jg
jnp
pop
jns
mov
or
dec
cld
pop
xchg
dec
fdiv
ret
loopne
mov
xchg
fnstsw
add
leave
inc
jb
loopne
push
aam
arpl
xlat
xchg
add
or
add
loopne
mov
enter
xchg
dec
add
adc
mov
sti
insb
inc
shl
data16
int
inc
fisubrs
lea
insl
and
cmp
js
out
xchg
and
negl
push
inc
sub
jge
test
mov
add
or
mov
pop
iret
mov
leave
imul
or
push
fcoml
jmp
lcall
add
xchg
sahf
jmp
into
cli
mov
lea
or
cmpsl
xchg
test
or
adc
dec
adc
popa
xlat
cmp
sbbb
xlat
cltd
jp
dec
adc
pushf
sti
mov
sbb
lahf
cmp
psraw
movsl
sbb
jl
hlt
and
inc
push
fwait
mov
mov
inc
ret
fmul
fstl
shll
pop
mov
sbb
adc
in
xchg
popf
xchg
mov
inc
sbb
cmc
stos
cmp
and
sub
jne
lods
jnp
add
sbb
add
sub
xchg
cmc
mov
push
or
xchg
push
gs
jle
sub
shll
xchg
pushf
jno
stos
or
shl
enter
out
xor
jl
hlt
mov
repnz
repnz
inc
call
test
out
and
or
inc
jmp
or
into
add
imul
inc
es
pop
dec
scas
dec
xchg
in
add
out
and
xchg
js
rcll
mov
dec
cwtl
jl
lret
dec
add
popa
mov
insb
scas
push
cmc
ret
insb
loop,pt
sahf
fcomps
cwtl
ss
sub
pop
out
cli
push
mov
fs
pop
cmc
mov
imul
pop
test
loopne
push
cmc
ds
jge
xchg
push
cwtl
rorl
addr16
sub
adc
jmp
xchg
out
cld
daa
add
sahf
loopne
icebp
jle
out
in
mov
cmp
push
popa
sub
inc
les
or
faddl
push
lret
das
sarb
dec
out
lock
addr16
and
sarl
or
mov
inc
xchg
or
ljmp
je
or
mov
and
fwait
or
or
jg
cmpsl
or
das
cli
roll
mov
sbb
ret
test
pushf
adc
push
inc
push
repz
push
inc
push
rclb
movsl
jno
mov
push
add
call
xchg
scas
sbb
ss
iret
ret
sub
loop
stos
jb
out
test
adcb
insl
mov
fiaddl
add
jns
adc
les
jne
dec
jne
mov
popa
xchg
jecxz
scas
mov
and
aaa
and
rorl
pushf
int
add
les
popa
mov
pop
xchg
ja
call
and
xchg
mov
push
mov
lods
cmc
pop
and
incl
ljmp
push
jo
cmpsl
mov
pop
jno
xor
add
mov
mov
mov
add
pop
aad
inc
mov
push
std
sub
fldt
or
int3
or
clc
dec
lds
or
xor
fwait
mov
mov
movsb
mov
cmp
test
mov
xor
lret
adc
lds
popf
or
mov
subb
inc
pop
aam
mov
or
mov
icebp
mov
aam
cmp
pushf
hlt
inc
inc
xor
mov
sub
push
inc
lock
inc
adc
push
sbb
jmp
test
test
movsl
fcoms
mov
mov
sbb
call
bound
cmp
sub
jecxz
cmp
mov
ljmp
xchg
cmpsl
lret
and
sbb
jp
sbb
inc
jbe
pop
daa
pop
jne
sarb
aad
mov
add
inc
jns
push
lods
movb
rclb
pop
lahf
dec
call
push
and
cmp
jp
push
aas
mov
repnz
daa
test
clc
pusha
mov
and
outsl
mov
pushl
ss
and
jno
div
rcr
or
lret
sbb
imul
adc
lods
adc
pop
test
jle
xor
mov
mov
lds
mov
sub
pxor
pop
dec
mov
sti
or
xchg
sbb
out
mov
mov
outsl
addr16
fsubl
mov
push
notl
testb
xchg
enter
push
and
test
fimuls
jns
lods
xor
mov
mov
in
mov
orl
stc
pushf
sub
sub
movsl
push
mov
lret
addr16
dec
xchg
imul
or
cmp
jae
mov
mov
js
mov
out
arpl
push
into
jmp
or
sbb
ficoms
sbb
aam
sarb
push
adc
cld
inc
cld
cmp
mov
jno
push
xchg
mov
inc
cs
aas
dec
dec
mov
mov
sbb
add
fs
add
cmp
jo
adc
mov
mov
pushf
push
pop
ror
dec
lods
cs
int3
out
in
or
jle
enter
dec
movsb
fisttpll
aam
dec
pop
iret
fisttpl
insb
inc
stos
sbb
jle
jns
hlt
aas
mov
fwait
std
jbe
mov
pushf
stos
stos
dec
hlt
add
cmp
loope
in
jnp
add
or
aad
loope
test
and
hlt
pusha
push
mov
sbb
xor
mov
lret
repnz
shll
addr16
test
dec
lret
int3
add
out
sti
add
subb
dec
ret
mov
xchg
ds
jbe
dec
inc
aad
mov
clc
sub
loop
pushf
dec
dec
sbb
cmpl
loope
dec
and
sti
lret
cmpsb
repz
mov
rorb
push
int3
pop
dec
pop
bound
jnp
gs
sub
mov
je
adc
repz
pop
iret
sub
dec
add
sub
aad
adc
add
inc
or
sub
ret
sbb
adc
sbb
inc
repnz
in
lea
or
add
push
or
stc
fstpt
push
xor
icebp
hlt
jnp
inc
mov
cs
stos
push
adc
in
jmp
pop
pop
mov
addl
or
lret
and
sub
xlat
lods
sbb
xor
or
add
add
lods
loope
mov
cmp
cmovae
cmpsl
push
add
xchg
sbb
lods
push
jp
addl
and
mov
pop
push
jge
jp
add
inc
or
ret
jl
and
aaa
lea
test
movsb
leave
popa
mov
dec
mov
push
stc
js
pop
aam
pushf
or
mov
lock
in
sti
dec
popf
call
jnp
xchg
scas
fwait
mov
push
or
adc
lret
rolb
aas
sub
sub
into
mov
fisubrl
outsl
cmp
adc
lds
mov
shl
lods
mov
dec
jb
jbe
int
pop
outsb
lret
insb
dec
sub
sub
mov
or
mov
xchg
lret
add
or
push
add
mov
sbb
shl
mov
or
insb
and
jbe
call
inc
scas
xor
test
mov
iret
inc
out
jle
ficompl
das
mov
add
adc
vmovmskpd
or
lods
and
movsl
ret
mov
in
loope
std
movsl
addb
sbb
sub
mov
and
push
mov
mov
std
lret
mov
jns
mov
faddl
out
lods
jl
sub
jmp
orb
jg
inc
sub
aam
sub
mov
bound
mov
sti
push
les
enter
sbbb
cs
xchg
mov
ljmp
int3
sbb
xchg
mov
popf
sbb
negl
xor
adc
shlb
je
cmpl
lock
fs
xchg
add
outsb
mov
and
pushf
cmp
aaa
xchg
mov
jp
pop
or
xchg
fidivrl
enter
push
dec
ds
ljmp
mov
adc
mov
cmp
sub
adc
or
mov
ja
in
roll
lds
in
adc
add
jmp
sub
cltd
xchg
inc
js
sub
mov
mov
nop
lods
mov
push
out
cmp
enter
leave
movsl
testl
movsl
loop
pop
rcrl
and
lock
pop
xchg
fldcw
adc
sbb
add
cmpsl
mov
lods
mov
dec
xchg
cmp
fdivs
gs
je
sahf
mov
pop
dec
aaa
mov
shrb
in
jp
and
adc
adc
push
mov
movsl
repz
cmp
and
ljmp
mov
and
lds
sar
sub
outsl
int
aas
rcrl
inc
ret
jmp
mov
pop
xor
adc
xor
sub
cwtl
daa
movsl
cld
bound
repnz
sbb
xchg
xor
xlat
or
inc
adc
inc
cmp
outsl
lahf
test
imul
and
cmp
es
leave
mov
cli
bound
js
jb
add
aam
and
sub
hlt
lret
lock
mov
popa
mov
lret
addl
mov
stos
fwait
jl
call
int3
mov
mov
cwtl
int
pop
mov
ret
mov
adc
jge
mov
pmullw
xor
mov
dec
cmpsl
addr16
adc
addr16
cmp
test
sbb
sub
dec
dec
les
inc
mov
fwait
cld
ljmp
in
pop
xor
and
inc
pop
mov
in
dec
pop
push
and
hlt
push
push
push
insl
jbe
xchg
outsb
dec
aas
in
imul
popf
dec
ror
mov
rcrl
jne
test
int3
notl
push
dec
sbb
movsl
mov
mov
jnp
or
jmp
mov
fmull
xor
jle
cltd
sahf
cltd
adc
stos
sti
sub
jl
loop
jmp
pushf
les
push
jne
adc
dec
pop
pop
mov
mov
cmp
fmul
xlat
je
cltd
cmp
xchg
sbb
add
lods
ret
push
jne
pushf
dec
jae
and
rolb
in
stos
shl
or
xor
cmpsl
clc
pop
ja
ret
gs
sub
pop
inc
in
test
jne
test
mov
les
test
movlps
out
ss
mov
testl
aaa
jne
js
pop
les
push
add
leave
lods
ja
pusha
sub
mov
test
daa
mov
test
add
add
pop
sub
jo
push
into
faddl
dec
jbe
dec
out
mov
lods
mov
movsb
fcmovu
popf
fimuls
sti
nop
mov
ja
clc
sub
leave
daa
and
and
and
jl
outsb
jg
pop
jnp
mov
xchg
xchg
push
dec
push
int3
stos
clc
sbb
or
xchg
std
pop
lret
ljmp
adc
jl
pop
pushf
mov
out
or
or
mov
add
adc
pop
mov
xchg
outsb
pop
int3
xchg
movsb
sbb
call
pop
jmp
pop
push
sbb
movsb
mov
or
xor
push
add
sub
mov
add
jl
leave
sbb
test
push
adc
xchg
outsl
sub
nop
cmp
lock
dec
push
add
xchg
rolb
lds
xor
pop
dec
in
insl
les
cli
movsl
add
into
or
ja
fcoml
pop
popa
pop
jmp
enter
pop
add
xchg
pop
mov
mov
mov
popf
fcmovnbe
pop
jno
push
push
sbb
cwtl
les
mov
inc
dec
sbb
push
movsl
adc
imul
aam
push
push
insl
adc
pop
in
cld
int
aam
add
movsb
mov
sub
sub
filds
enter
jnp
or
inc
les
push
mov
insb
inc
sub
mov
or
lods
mov
and
sahf
cmpsb
push
and
sbb
dec
sub
or
jmp
mov
jge
dec
scas
fmull
imul
cld
cli
pop
pop
cwtl
call
clc
add
jecxz
push
lds
das
mov
sti
mov
mov
out
stos
ljmp
sub
dec
inc
test
insl
es
enter
int3
scas
inc
and
mov
mov
sub
dec
lcall
cmpsb
and
add
jmp
mov
cmpsl
add
mov
mov
decl
mov
sbb
push
xor
enter
out
add
and
xchg
mov
lods
or
jl
dec
mov
add
pushf
dec
in
mov
sbb
and
dec
xchg
xor
test
lahf
shlb
subb
xchg
or
mov
or
sbb
adc
movsl
fstpl
pop
mov
inc
clc
pusha
xchg
in
dec
mul
inc
sub
dec
ds
movsl
xor
cmp
idivb
or
fcompl
out
pop
or
jge
or
adc
dec
dec
test
jne
movsl
hlt
mov
push
jle
pop
out
das
xchg
lds
cmp
jle
imul
test
mov
pushf
mov
mov
pop
mov
out
pop
add
cwtl
or
sahf
dec
les
cli
mov
push
inc
push
sub
mov
or
ljmp
js
xor
dec
movsl
xor
or
sbb
into
fldt
cli
nop
or
mov
ret
cld
in
cmc
xchg
adc
mov
push
jmp
mov
or
add
int
rclb
pop
es
sbbl
push
and
cmpl
pop
dec
or
xor
std
cmp
jl
ret
aad
fidivrs
insb
or
adc
ret
lods
outsl
jp
out
and
call
test
nop
jnp
push
fsubp
xchg
or
fcmovu
es
leave
pusha
xor
add
sub
notl
dec
sub
push
cli
mov
adc
xor
dec
out
arpl
mov
and
out
icebp
fmuls
repz
pop
and
add
mov
jl
lret
push
dec
lret
or
push
fiadds
add
push
cmc
dec
ja
inc
jo
push
mov
and
shrl
xlat
or
push
outsb
dec
pop
inc
cmpsl
aam
sahf
test
pop
cld
jge
cwtl
xlat
daa
inc
xchg
fwait
inc
or
jle
lret
sahf
data16
add
jmp
scas
sub
sub
or
push
insl
stos
mov
lcall
dec
enter
js
shrl
and
inc
sbb
cwtl
xor
fdivrs
ficompl
jge
mov
and
leave
xor
xor
lret
lods
sbb
mov
mov
adc
adc
rorl
call
xor
jecxz
mov
lods
hlt
loop
push
mov
xlat
scas
add
or
out
or
mov
pop
jb
int3
loop
sbb
je
push
mov
subb
xor
push
mov
cs
or
stos
push
ja
fists
inc
adc
dec
into
in
mov
pop
or
dec
or
push
test
sbbl
push
ret
mov
push
pop
sbb
xchg
movsb
mov
mov
jp
pop
sbb
mov
imul
mov
sub
inc
inc
push
xchg
cmpsl
test
cmp
sbb
dec
dec
mov
or
adc
insb
or
pusha
push
lret
push
rep
mov
jl
mov
mov
mov
repnz
lret
add
cmp
out
add
and
aaa
mov
stos
pop
icebp
mov
ljmp
jnp
inc
shrb
xchg
jb
out
adc
dec
test
hlt
imul
mov
call
fmull
mov
sbb
xlat
or
jbe
outsb
daa
fs
lea
stc
xor
enter
andl
icebp
jbe
push
imul
loop
dec
in
inc
scas
ss
icebp
scas
cld
shll
movsb
aaa
pop
fadd
outsb
jmp
out
mov
add
cmp
in
push
aas
inc
leave
fcmovb
push
xchg
std
mov
aam
fadd
leave
enter
xchg
or
stos
jecxz
lret
stc
hlt
inc
repz
push
inc
push
mov
pand
jae
shr
jae
shl
or
stos
rorl
adc
pop
adc
add
cli
mov
inc
es
mov
ret
not
or
add
push
sbb
xchg
sbb
pop
shlb
push
xchg
das
repz
and
out
ret
push
push
sbb
cli
jp
add
inc
push
xchg
jecxz
les
and
push
jnp
inc
xlat
push
inc
or
sub
shll
cli
ds
push
dec
inc
out
hlt
loope
stc
cmpsl
std
hlt
dec
mov
add
aas
mulb
addr16
pop
rcr
mov
pop
jne
mov
xchg
ror
repz
movsb
pop
inc
or
mov
xor
pushf
addr16
hlt
call
lret
xchg
jnp
stc
or
mov
dec
xor
cli
loop
dec
push
dec
insb
adc
jnp
cmc
out
inc
mov
pop
mov
and
mov
int
sti
sti
sti
stos
in
rcrb
cmpsb
sarb
push
mov
mov
or
pop
sti
xor
xor
sbb
add
lahf
lret
mov
adc
rclb
mov
nop
mov
push
into
sub
in
and
mov
stc
int3
mov
xor
fbstp
xor
mov
js
call
dec
cwtl
dec
mov
test
sbb
or
clc
and
movsl
stos
xor
push
mov
loopne
push
lods
mov
or
lret
cld
or
stc
daa
aas
test
scas
xchg
xchg
sub
add
mov
call
dec
jae
movsl
enter
pop
mov
mov
pop
into
mov
push
or
mov
ret
adc
call
or
ret
adc
add
fldcw
in
out
mov
dec
add
push
call
jo
push
in
orl
lret
outsb
sbb
jecxz
in
mov
sbb
mov
mov
ds
lods
mov
push
aam
stos
inc
jns
sub
lret
or
leave
scas
out
xchg
fwait
outsb
jo
fsubrs
je
sahf
stos
or
scas
add
add
or
xchg
sub
decb
sub
ljmp
mov
out
fcompl
xor
int
stos
push
imulb
fists
ret
cs
jno
lods
in
jle
dec
loope
push
cmp
jbe
mov
or
adc
push
hlt
out
or
or
fisubl
mov
mov
outsb
imul
iret
jmp
sub
insl
dec
inc
orb
mov
add
js
iret
inc
pop
ficoms
and
mov
cmc
xor
data16
sub
mov
stc
sahf
cmp
xchg
insl
inc
in
fcomi
inc
sahf
mov
adc
inc
jnp
cltd
jne
stos
scas
sti
popa
pop
mov
dec
cmp
cmp
aad
roll
dec
xchg
aam
dec
pop
sysexit
imul
stc
addr16
cmpsb
test
inc
ds
pop
mov
push
scas
leave
fnstsw
dec
mov
dec
adc
sbb
mov
dec
dec
xchg
lret
adc
and
sti
push
rol
dec
or
out
xor
into
xchg
aam
xchg
imul
cmp
xchg
loope
xchg
cltd
pushf
cmpsb
repz
in
cmpsb
jo
popa
stos
push
pushf
cli
divb
mov
xor
push
mov
lret
lods
or
pop
sti
jo
daa
adc
mov
enter
jmp
mov
mov
movd
adc
notl
bound
adc
subb
dec
sahf
test
roll
sub
inc
adc
ret
jmp
xor
add
hlt
cmp
adc
lret
movsb
lds
test
movsl
dec
js
decl
push
sti
xor
mov
cltd
loopne
xlat
ljmp
loope
int3
scas
jo
test
or
mov
test
sbb
jno
hlt
int
daa
xchg
push
sbb
pop
outsl
adc
stos
call
add
pop
aam
cmp
lret
mov
sti
pop
cwtl
and
or
mov
cld
fists
ret
repz
ret
pop
stos
add
jbe
cli
pop
sti
insl
test
not
mov
out
or
push
test
scas
out
or
popa
push
dec
faddl
scas
int3
and
lea
jnp
in
and
push
cmovns
add
rorb
xchg
xchg
or
mov
repnz
sti
cmp
push
test
shrl
mov
out
cmp
fs
inc
rorl
ja
leave
cmp
popa
and
and
cwtl
lods
mov
add
rorb
jge
repz
ret
gs
icebp
repnz
mov
jo
test
popf
pop
iret
inc
stc
sbb
inc
daa
xchg
xor
dec
fcompl
cwtl
mov
xor
mov
xlat
fsub
or
sub
mov
loop
scas
cmpsl
add
add
and
push
add
push
cmp
jecxz
cmpsb
mov
cmp
dec
les
xchg
push
jle
test
test
mov
inc
mov
mov
push
dec
sahf
popa
bound
in
and
test
popf
mov
cmp
cmp
dec
sarl
push
adc
orb
and
movsl
mov
int
lea
fwait
sub
push
hlt
mov
ret
push
jmp
mov
mov
das
insl
psllw
and
jnp
add
or
popf
add
scas
aam
jle
mov
jmp
xor
pushf
push
scas
js
repz
and
movsl
fisttpl
mov
lea
sub
xchg
ss
repnz
inc
cmp
ret
add
push
pop
mov
adc
in
cmp
inc
cmp
sahf
push
test
test
or
sbb
sbbb
or
sahf
stos
jns
in
and
jmp
adc
push
mov
inc
fsubs
and
fisubl
cltd
mov
jns
add
popa
ss
rcr
xchg
xchg
out
add
inc
jmp
and
insl
and
test
sbb
pop
int
push
fdivs
int3
mov
add
rol
dec
dec
mov
enter
lds
adc
mov
int
pop
imul
out
iret
ficoms
popa
push
cld
je
add
lcall
cltd
adc
sarl
test
test
call
push
push
adc
aam
mov
mov
xchg
inc
fsubl
loopne
cltd
ja
pop
mov
jle
adc
push
add
sub
jbe
das
movsl
scas
insb
jbe
sub
test
adc
shll
aad
pop
jo
bound
mov
in
cli
sbb
mov
dec
or
mov
cmp
int3
jmp
iret
pop
pop
cmp
push
or
or
xor
cwtl
fdivrs
jle
sub
push
adc
pop
stos
mov
das
int3
daa
stos
push
cmp
jmp
mov
or
push
add
jmp
mov
aad
or
mov
ljmp
xchg
or
mov
add
or
or
pushf
ss
leave
and
in
rclb
dec
mov
push
cld
out
scas
lods
mov
xchg
stc
pushf
jmp
enter
add
dec
jg
insb
jmp
test
mov
jne
cmp
add
jne
cld
and
xchg
jo
jnp
ljmp
sbb
jecxz
sbb
cmp
mov
int3
sbb
fisttpl
addr16
ljmp
mov
lods
or
scas
ss
and
cli
xor
and
jp
lcall
mov
iret
xor
jno
adcb
sti
ret
rolb
cmc
dec
jno
sub
jp
call
mov
subl
xchg
cmpsb
push
fisttpll
cmp
jecxz
mov
jle
mov
clc
xor
das
mov
test
sub
inc
lret
mov
push
inc
pop
or
xchg
inc
stc
or
lods
stos
mov
rorb
xchg
add
lret
mov
add
or
imul
and
rorl
push
push
jl
fidivl
into
mov
xor
stc
cltd
leave
cmp
jno
subb
arpl
mov
es
fidivrs
js
sub
out
shl
jle
out
xor
sbb
mov
mov
add
push
loopne
sti
or
cli
enter
mov
pop
mov
out
clc
loopne
mov
outsl
inc
dec
fsubr
inc
dec
or
cmpl
pusha
bswap
fildl
daa
cmp
rclb
pop
and
fbstp
and
adc
mov
scas
push
fbstp
or
xor
sbb
addr16
lods
push
mov
lods
lcall
xchg
xor
in
add
leave
push
sub
bound
cmp
clc
icebp
sbb
jmp
imull
inc
testl
pushf
mov
iret
nop
sbb
jle
and
mov
push
jle
jmp
dec
xlat
or
jecxz
shlb
add
sahf
idivl
scas
cmp
nop
test
sbb
pop
fsub
testb
in
incb
loop
cmp
or
jl
pop
sub
mov
dec
cmpsb
outsl
bound
mov
inc
pop
std
pop
lcall
push
mov
nop
lds
rorl
in
sbb
pop
ret
push
xchg
push
xchg
scas
xchg
sub
int3
out
movsl
je
cli
or
adc
mov
insl
stos
or
int
mov
leave
clc
aad
in
fcmovu
or
test
pusha
push
add
roll
ret
popf
push
adc
nop
dec
std
jb
add
mov
shl
int3
dec
xchg
hlt
sbb
dec
aad
jnp
idivl
mov
pop
xchg
and
pop
out
push
fimuls
fwait
test
and
and
in
movsl
ja
mov
pop
es
fxch
or
mov
fistps
out
sub
or
call
push
imul
jo
pop
cmpsl
mov
fdivs
sahf
sub
movsb
xchg
inc
jp
inc
xor
in
adc
mov
cs
xchg
push
add
and
inc
mov
aad
xchg
data16
cmpsl
xorl
daa
dec
out
les
out
xchg
insl
cmp
mov
sbb
adc
jp
add
popa
cld
clc
lcall
aad
shrl
stos
sub
fwait
lahf
or
pop
testl
add
test
fcmovbe
sub
push
clc
lcall
dec
test
incb
cld
lock
stos
xor
push
xchg
fwait
cmp
loopne
call
les
mov
xchg
fimuls
enter
test
xor
nop
out
mov
sbb
loop
movsb
mov
aad
mov
sub
jmp
xor
out
pushf
mov
jmp
and
add
pop
jmp
inc
pop
test
sbb
inc
mull
rcrl
cmpsb
andl
incl
outsl
jl
mov
xchg
ss
lods
and
push
adc
mov
lcall
or
sub
std
sub
enter
imul
std
xchg
rorb
in
xchg
shrb
in
add
jecxz
shll
imul
js
icebp
pushf
in
mov
daa
popl
inc
lret
fwait
cmp
popf
popf
shl
call
ss
ret
jp
xchg
popf
inc
mov
xor
xor
mov
sub
cli
gs
cmpb
inc
cmp
sbb
test
cmp
fistpl
out
pop
divb
les
push
fld
into
or
ljmp
dec
inc
into
mov
loopne
or
cmpsb
loop
push
addr16
pop
addr16
push
inc
mov
sub
adc
sbb
lea
loop
jmp
cmp
xchg
pop
mov
repnz
inc
xchg
dec
push
mov
mov
pop
cmp
xor
enter
xchg
rorb
test
bound
hlt
insb
adc
dec
scas
lcall
mov
adc
adc
xchg
dec
or
sbb
xchg
addr16
dec
cmp
sbb
add
insb
push
outsb
mov
das
mov
lea
mov
add
cld
enter
hlt
lods
pop
stos
fisttpl
in
push
jo
push
xchg
std
add
ror
int3
cmpsl
in
xchg
dec
call
mov
movsb
xchg
movsl
adc
leave
sahf
dec
jecxz
lahf
jmp
push
inc
push
imul
or
pop
adc
lock
push
xor
cs
enter
and
clc
sbb
hlt
inc
adc
fnsave
xchg
sarl
push
and
mov
dec
leave
sti
xchg
pop
jge
sub
jnp
pushf
mov
push
loope
stos
adc
dec
sbb
fists
adc
fildl
ficompl
mov
out
pop
imul
cmpb
push
int3
mov
jle
adc
int3
fs
data16
in
test
stos
ljmp
jmp
fs
xor
out
loop
lods
rorb
pop
jnp
rol
xor
fldt
push
ljmp
sub
xor
das
mov
jle
inc
mul
lods
inc
add
stos
adc
fisubrs
or
scas
xchg
push
decl
add
fs
xchg
jge
adc
adc
adc
mov
jb
xchg
adc
sbb
es
in
ret
arpl
push
xchg
mov
cs
push
xchg
pop
xchg
shrl
lret
xchg
fidivl
stos
mov
insl
or
into
pop
push
or
pushf
filds
adc
loope
sbb
arpl
fs
mov
ljmp
test
jecxz
mov
sub
or
andl
jl
pusha
out
lods
into
push
and
out
pushf
add
sub
cs
sahf
mov
add
mov
loope
out
into
fsubrs
out
sbb
push
inc
call
pop
les
xchg
les
jo
addr16
jecxz
daa
sarb
mov
mov
stos
out
subl
xor
dec
push
push
cmpsl
icebp
or
xchg
inc
push
sbb
aam
push
mov
pop
icebp
inc
out
mov
cli
mov
pop
int3
mov
inc
inc
adc
cmp
mov
leave
data16
shrl
fildl
movsl
or
or
mov
daa
mov
xchg
inc
jo
lret
js
sbb
xchg
jp
push
or
loop
adc
cwtl
jae
icebp
shrl
divb
adc
mov
lcall
data16
in
mov
mov
pop
insb
loop
adc
sti
clc
lds
ljmp
sti
xchg
test
jp
pop
hlt
adc
adc
out
pop
fcoms
ds
and
cmpsl
or
inc
pop
lods
sbb
lcall
bound
fucomi
or
pop
xchg
add
jg
iret
or
cmp
sub
pop
ret
add
out
xchg
mov
sub
lock
mov
push
je
sub
or
mov
sbb
aam
dec
movsl
psubq
into
and
mov
fidivrl
mov
call
mov
sti
sbb
out
mov
mov
iret
aas
or
jecxz
out
jmp
sub
les
idiv
mov
mov
fs
lret
movswl
sub
jae
cli
add
or
movsb
in
push
stos
push
inc
lock
lret
jmp
add
stc
sbb
imul
rorl
pop
aaa
push
arpl
in
ret
fdecstp
inc
mulb
ret
pop
les
fcoml
mov
sub
in
mov
and
pusha
or
sbb
sar
xor
xchg
pop
xchg
aam
andl
jne
mov
sub
and
out
mov
adc
inc
xchg
dec
out
or
fisttps
data16
xor
divps
pop
pop
les
sbb
xchg
jmp
sarb
push
mov
dec
add
out
ljmp
or
loop
xorl
ret
adc
dec
or
ret
std
movsl
xchg
sbb
sub
or
test
cmp
and
leave
dec
inc
or
jg
movsl
pop
add
inc
out
jns
jno
mov
shll
or
pop
pushl
dec
bound
jo
xor
ret
cmp
ret
ficoms
adc
add
add
test
std
jecxz
aaa
call
mov
fistl
mov
jmp
mov
or
into
or
mov
jl
mov
ljmp
sub
scas
out
lret
pop
orl
lea
and
cwtl
in
adc
or
lahf
pop
les
stos
or
lods
xor
std
insb
sub
jmp
fadds
addr16
jb
mov
subl
or
js
add
subb
aaa
stos
adc
push
loop
fwait
outsl
dec
adc
ljmp
jp
test
mov
add
sub
mov
shrb
jmp
and
and
or
out
push
popa
mov
sub
mov
ficoms
in
push
sbb
cmpsb
mov
jle
out
xchg
mov
shrl
sarb
xchg
cmp
xor
pop
les
sub
test
movsl
dec
jecxz
xor
popa
scas
or
outsl
jmp
fildl
std
ljmp
cs
adc
inc
sub
or
push
outsb
lds
aaa
dec
mov
jp
in
lret
mov
es
push
aaa
cld
dec
jns
fistpl
test
or
dec
cmp
out
aad
dec
pop
jp
ja
push
mov
mov
xor
outsl
dec
jbe
call
leave
jmp
dec
fnstcw
sub
or
push
adc
out
es
push
and
stos
jg
mov
testb
movsl
insl
jge
xor
mov
jne
dec
and
out
adc
sbb
and
inc
popf
loopne
or
fwait
cmp
je
push
mov
hlt
adc
adc
int3
insl
mov
inc
push
mov
enter
jb
dec
adc
imul
sub
fsubrl
or
leave
ficompl
test
pop
rolb
inc
mov
sbb
aam
repz
adc
mov
andb
push
stos
loopne
lods
jae
mov
lock
movsl
cmc
mov
fisttpl
inc
or
pop
in
dec
jnp
pop
testl
add
lcall
or
popa
loope
mov
in
in
xlat
lds
xor
gs
int
imul
sbb
ss
or
mov
xchg
icebp
or
adc
adc
add
mov
sub
das
push
push
xchg
jns
faddl
in
lods
or
popa
xlat
adc
scas
aam
pop
xchg
andl
mov
lahf
sub
pop
mov
jge
pop
lret
sub
mov
gs
inc
arpl
fadd
xchg
jae
add
mov
mov
int3
ds
pop
mov
inc
pop
ret
sti
sbb
or
cmp
mov
test
mov
sti
inc
neg
or
dec
ret
popa
jp
push
mov
repz
sbb
and
outsb
mov
push
lea
movsl
jl
cli
sub
and
xchg
mov
jb
xlat
and
paddsb
mov
in
test
inc
sub
jecxz
scas
cmpsb
sahf
lea
fs
push
in
in
mov
dec
clc
lods
inc
xchg
aad
dec
dec
or
and
jle
lcall
stos
or
sub
adc
cmpsb
sbb
mov
test
cmc
hlt
lcall
mov
ljmp
leave
sbb
ljmp
popf
addr16
es
scas
dec
out
sub
or
call
and
jg
addr16
in
lds
ret
sbb
je,pt
test
lods
hlt
inc
mov
loop
loop
repz
and
pushaw
inc
aad
sub
mov
mov
push
xorb
pushl
into
mov
pop
jne
sahf
mov
mov
and
mov
mov
iret
jo
jp
or
mov
in
adc
mov
pushf
pop
sti
mov
jle
daa
popf
mov
pop
inc
jmp
inc
movzbl
pop
inc
jae
fstps
bound
js
dec
repz
dec
imul
fstpt
icebp
xchg
addr16
loop
in
mov
and
pop
in
pop
xor
xchg
inc
rorb
or
gs
mov
orl
jle
cmpsl
sbb
int
loop
sub
subl
add
cmpsl
jae
arpl
cltd
repnz
in
pop
repnz
xchg
inc
or
std
in
stc
pop
jmp
dec
ficomps
pop
push
jne
push
aad
test
push
sti
adc
nop
mov
outsb
pop
sbb
jns
sti
adc
sub
push
popf
inc
ret
mov
push
lcall
ror
sbb
jp
push
sbb
rclb
test
or
sbbb
cwtl
pushf
lods
jno
sbb
xchg
pushf
call
cmc
push
rorl
xchg
pop
add
dec
xor
xchg
push
sbb
rclb
and
mov
loop
sub
sbb
xchg
mov
inc
cmp
xchg
fists
popf
mov
or
les
adc
push
stos
pop
mov
insb
addr16
mov
pop
outsb
add
ljmp
lock
inc
or
mov
in
inc
ljmp
cmp
jmp
xchg
sub
or
addl
fildl
pop
pop
push
cmpsb
push
add
fs
jmp
push
or
adc
add
lret
push
push
stos
loopne
fistpl
inc
in
shlb
out
lock
call
test
or
pop
les
enter
daa
outsb
sbb
or
adc
dec
std
adc
mov
aad
sbb
xchg
mov
out
aam
sbb
stos
pop
adc
das
icebp
mov
pop
xchg
cwtl
call
or
push
out
xor
xchg
sub
cmc
sarb
enter
inc
push
adcb
ljmp
adc
and
push
jae
loope
adc
fwait
add
loop
mulb
cmc
adc
xor
or
movsb
les
push
or
movsb
sbb
in
ret
xchg
push
data16
test
or
adc
inc
test
fs
dec
sub
sbb
adc
adc
out
insl
out
xchg
jg
pushf
in
adc
adc
shl
xchg
mov
mov
sub
xor
mov
lret
dec
clc
add
aas
mov
movsl
adc
sti
jno
nop
inc
jnp
cmp
push
fldcw
sub
mov
pusha
adc
in
sbb
aaa
push
lods
lahf
dec
mov
loop
adc
xor
call
mov
add
repz
xchg
sbb
in
pop
lret
lods
push
sub
adc
add
fsubl
nop
and
stos
mov
scas
or
mov
mov
adc
mov
stc
add
xchg
sub
fdivrs
adc
faddp
in
mov
mov
hlt
pop
inc
sub
jnp
dec
insb
repz
aad
lock
and
mov
mov
or
int3
and
mov
dec
out
cltd
add
xorb
aad
jne
mov
insl
cmp
lcall
or
mov
push
js
inc
adc
loopne
cmpsl
inc
pusha
and
add
add
adcb
push
mov
xchg
les
andb
ja
sti
or
pop
enter
jo
les
cmpsb
jecxz
pop
bnd
sub
jmp
jge
add
mov
mov
ljmp
xchg
dec
mov
or
test
push
ret
pop
adc
dec
push
imul
adc
repnz
or
popa
xchg
push
out
mov
test
pop
ds
out
and
cwtl
inc
add
or
mov
lock
orl
xchg
sahf
pushf
cmp
or
pushf
adc
lods
sti
or
inc
scas
or
xchg
inc
enter
add
popf
jg
add
sub
cmp
hlt
or
sbb
or
shrl
push
inc
imul
sbb
out
fidivl
ljmp
dec
mov
mov
mov
push
mov
sahf
pop
xchg
sub
or
out
push
adc
dec
js
mov
sub
lods
fildll
clc
push
insb
inc
add
and
lahf
sub
insl
loopnew
pop
int
ja
repnz
ljmp
add
daa
sbb
lea
stos
dec
push
in
pop
lret
stos
dec
addl
pop
push
in
push
jle
mov
icebp
mov
or
lds
scas
dec
mov
mov
mov
fwait
sub
les
mov
push
push
popa
lea
sbb
jmp
jge
inc
sti
sub
test
clc
mov
push
mulb
add
js
or
jge
loop
aad
faddl
mov
fisttpl
sub
mov
lds
pop
out
stos
sub
inc
xchg
movsb
dec
stos
imul
push
in
sub
and
sbb
subb
dec
insb
cmp
sahf
jmp
jg
enter
lea
incl
in
push
lahf
jp
sahf
jbe
jecxz
adc
mov
cld
mov
arpl
lcall
orb
clc
sub
jmp
lret
xor
outsb
push
mov
pushf
jmp
lcall
js
loope
les
or
push
fmul
enter
mov
push
xor
rorb
sbb
mov
mov
xor
cvtdq2ps
orb
mov
insb
or
sbb
mov
pop
mov
dec
adc
mov
and
leave
mov
inc
aaa
sbb
pop
xchg
and
pushf
scas
sbb
es
adc
rorb
jmp
sti
inc
cmp
cld
inc
sub
test
pushf
cmpsl
adc
cwtl
leave
xorl
inc
add
stos
xchg
dec
adc
gs
decl
cltd
push
or
xchg
sub
stc
mov
xor
lea
jg
in
xor
test
pop
adc
adc
add
and
jp
or
push
mov
aad
mov
loopne
popa
aaa
push
sub
or
adc
adc
adc
mov
fs
dec
or
pop
inc
jle
orl
jg
test
aam
mov
sub
mov
inc
cltd
inc
adc
push
mov
xchg
in
clc
lret
pop
inc
fs
mov
jle
cmpsw
add
lret
sub
dec
cmpsb
add
mov
sub
push
pop
dec
mov
or
lods
jl
popf
pushf
xchg
and
sub
ret
daa
popa
not
leave
or
sbbb
mov
inc
pop
out
xchg
jnp
imul
rclb
mov
mov
jl
add
xchg
roll
dec
sub
lret
rolb
popa
test
lret
aaa
sub
pushf
cmpsl
lds
dec
jmp
or
aam
popa
and
sub
xor
je
xchg
shlb
jge
dec
lea
mov
jno
xor
push
jb
imul
lods
jno
lret
ds
sbb
test
pop
fwait
cwtl
enter
cmp
jnp
mov
lcall
lods
daa
push
or
push
lret
scas
dec
shll
mov
inc
dec
xor
adc
lahf
sbb
lret
inc
add
sbb
clc
cld
sahf
mov
stos
jo
jp
inc
mov
mov
sub
aad
out
arpl
add
push
xchg
dec
dec
cmpl
xor
fiadds
lock
xchg
push
test
loop
inc
xchg
pop
xor
in
dec
test
adc
sub
mov
rcrl
je
pop
lret
sub
daa
pop
cmpsb
sub
push
pop
fisubl
add
push
sub
sti
dec
stos
or
orb
mov
xchg
mov
sbb
mov
call
sbb
xchg
adc
call
add
add
movsb
pop
iret
dec
jp
and
jmp
pop
pop
xor
mov
hlt
stos
lods
lret
jge
xor
shrb
xor
dec
adc
mov
fsubs
mov
sub
jle
out
jbe
cmpl
ss
cmp
addl
insb
add
cwtl
mov
add
jmp
fwait
mov
mov
decl
ss
stos
iret
es
dec
sub
pop
bound
ror
jbe
cwtl
aad
push
mov
mov
push
out
jnp
add
mov
sbb
imul
push
add
mov
lcall
or
jmp
nop
insb
sbb
mov
leave
cmpsl
lods
add
je
pop
imul
rorb
fsubs
sub
jmp
xchg
mov
add
and
fiadds
add
inc
or
xchg
int3
adc
faddl
or
cld
sub
add
xchg
push
push
or
out
lret
dec
aam
pushf
mov
xchg
push
xchg
push
fisttps
xchg
sbb
push
xor
sub
test
scas
pushf
les
test
mov
fs
lods
push
mov
stos
addr16
inc
lcall
xlat
stc
sub
in
ljmp
lock
in
lds
xor
add
dec
insl
mov
jo
aaa
enter
or
mov
sti
or
cmp
sub
ljmp
mov
rcrb
filds
test
je
das
mov
mov
jmp
mov
fimuls
push
or
mov
pop
lea
adc
ljmp
add
xor
icebp
ds
add
sub
sbb
cmp
jp
movsb
xor
adc
mov
jle
mov
scas
cmpsb
inc
test
inc
sub
cli
imul
popa
ljmp
insb
adc
and
and
stos
or
adc
or
pop
and
in
es
dec
push
mov
jle
sbb
scas
pop
dec
inc
and
test
lret
xorl
in
jle
mov
mov
lret
in
mov
les
mov
aam
jae
ret
je
xor
add
shrb
pop
inc
push
cmp
and
loope
inc
imulb
dec
add
sub
cwtl
in
pop
test
fadd
jb
mov
outsl
sub
adc
cmc
sti
repz
in
push
sbb
sub
xchg
ja
fwait
dec
xor
pop
test
aam
or
xchg
dec
sub
xor
rcrb
ss
xor
ljmp
xchg
or
xlat
scas
mov
and
push
ljmp
or
xchg
cmp
jp
pop
jae
loopne
or
jmp
inc
subl
or
pop
adcl
xor
lods
movsl
mov
push
jnp
add
sbb
inc
pushf
lods
orb
cmpsl
test
sub
fdivrs
mov
xchg
in
das
mov
xchg
enter
pushf
lods
jno
movsl
xchg
lods
xchg
sbb
and
or
mov
ret
sub
and
sub
mov
xor
push
inc
push
add
or
sub
inc
inc
push
sub
sub
sbb
fs
xlat
je
pop
scas
enter
xor
fwait
mov
aam
mov
sahf
jmp
call
cmp
mov
xor
adc
mov
xchg
pop
add
push
push
or
enter
mov
or
xchg
mov
clc
fadds
push
xchg
fcmovnu
ds
jno
in
inc
or
je
adc
and
in
jmp
mov
inc
test
mov
xorl
inc
and
loop
sub
or
lods
pop
jns
sub
test
ss
daa
inc
or
xchg
loop
frstor
add
out
cmp
loopne
lock
pop
gs
out
fisubrs
xchg
mov
xor
sti
add
xor
add
push
or
lcall
adc
sub
lea
or
add
sbb
lods
inc
mov
mov
jge
mov
xchg
xor
outsb
pop
jg
push
add
cmp
push
mov
pushf
dec
lods
dec
stos
andb
push
adc
dec
adc
dec
push
mov
clc
add
dec
in
push
sbb
pop
xor
ficoms
adc
insb
ret
incl
and
sahf
dec
jge
inc
shll
decl
iret
pushf
mov
add
pop
js
bound
push
lock
sub
mov
mov
and
push
mov
out
and
iret
stos
mov
and
xor
cwtl
and
ret
imul
ds
dec
or
outsl
pop
fmuls
test
sti
xor
dec
pop
mov
popf
enter
push
sub
mov
int
js
add
fistps
adc
jb
xlat
into
adc
push
sub
add
dec
sahf
jp
fstps
lret
push
std
filds
dec
and
js
mov
aam
push
test
lcall
or
push
hlt
adc
xchg
push
pop
mov
imul
cmp
xchg
mov
push
ja
add
sub
jle
rorl
je
pushf
inc
push
or
outsl
dec
inc
xchg
insl
sub
adc
gs
jge
mov
jmp
mov
jle
out
std
imul
sub
dec
push
mov
inc
dec
cld
sbb
inc
jp
mov
rolb
hlt
rolb
lret
inc
mov
push
jne
lret
inc
sub
flds
leave
pop
cmp
xchg
mov
adc
pusha
mov
inc
in
lret
popf
call
jnp
jl
or
in
enter
aas
xchg
add
test
adc
xchg
scas
dec
inc
mov
and
outsb
dec
push
nop
jle
aad
inc
inc
fwait
lahf
sub
xchg
push
adc
jecxz
inc
or
dec
pop
in
leave
pop
adc
pop
andl
scas
stos
insb
in
lret
imul
push
and
adc
movsb
cmp
xchg
out
xchg
sahf
or
movsl
inc
sub
pop
test
jns
inc
fildll
dec
dec
mov
out
cmp
ret
in
rcrb
push
sub
mov
dec
in
xchg
xchg
dec
add
arpl
cmp
jg
clc
adc
add
stos
lods
adcb
jmp
and
mov
inc
sahf
dec
sahf
or
cmp
push
or
jno
lahf
stos
cwtl
roll
ret
repz
inc
push
mov
and
scas
mov
mov
mov
xchg
or
mov
es
mov
stc
xchg
stos
inc
cltd
push
xorb
mov
ljmp
sti
dec
loope
cmp
sub
enter
fdivs
or
dec
and
movsl
add
imul
pushf
in
pop
or
out
dec
movsb
mov
ret
das
lcall
xchg
xchg
dec
jnp
ret
insl
mov
dec
push
lahf
insb
lret
test
int3
dec
lock
sbb
and
dec
mov
xchg
adc
add
sbb
jnp
pop
jns
push
inc
mov
sbb
jnp
lea
adc
and
xchg
add
hlt
push
in
sub
insl
cmc
add
and
push
xchg
enter
decl
lret
cmp
ss
sbb
gs
movsl
lods
xor
dec
sub
inc
mov
enter
adc
mov
sbb
dec
out
sub
shrl
mov
iret
jp
mov
out
outsb
sti
sbb
and
xlat
lods
mov
mov
cld
push
mov
cs
inc
push
popa
cli
xor
adc
ljmp
js
es
fcmove
adc
push
push
inc
sahf
repz
fsubrl
lea
in
or
push
cmp
adc
push
sbb
ret
and
daa
mov
test
xor
mov
roll
mov
mov
psllw
pop
js
aad
sbb
insb
pop
insl
xor
jecxz
pop
lret
lret
pop
add
mov
roll
loopne
pop
nop
dec
mov
dec
fildll
mov
jmp
loop
out
inc
ret
movsl
cmp
mov
sbb
sub
add
lds
xchg
loope
sbb
lods
push
lds
jmp
xchg
inc
adc
add
mov
or
out
pop
dec
xchg
mov
mov
or
sahf
leave
xchg
sbb
jno
into
sub
mov
inc
xchg
xlat
lret
orb
sub
in
fisttpll
addr16
add
fs
ret
or
sbb
jmp
inc
push
loop
into
adc
push
out
xor
xlat
sub
mov
bound
pop
adc
mov
pmullw
jmp
test
pop
test
gs
dec
call
nop
in
xor
cltd
pop
push
or
adc
pop
lcall
inc
pop
or
adc
pop
incl
add
lret
stc
dec
pop
mov
pop
out
sbb
rcr
or
lods
aam
pop
daa
adc
dec
and
push
stos
or
push
shld
inc
adc
push
stos
dec
xor
lods
ds
xor
inc
add
sbb
filds
imul
push
jmp
adc
mov
xchg
out
fsubrl
jb
stos
push
movsb
scas
mov
test
popa
xchg
rolb
jge
lcall
les
push
mov
fwait
popf
cmp
ds
ljmp
xchg
or
orl
mov
and
js
lcall
daa
lret
push
mov
or
fmuls
inc
enter
incb
sbb
stos
jo
std
xor
add
out
mov
adc
movsl
jno
and
shll
mov
cmpb
rorl
jno
jl
jne
mov
in
pushf
repz
sub
in
pop
inc
or
dec
in
popf
daa
jno
rcll
sub
xor
fcmovnb
in
les
dec
mov
add
sti
lret
lods
pop
call
sub
mov
icebp
or
push
dec
bound
or
inc
int3
ds
xor
xchg
xor
or
pushf
pushf
cmp
mov
cmp
push
lret
rolb
adcb
ljmp
out
jae
xchg
addr16
mov
fwait
push
mov
xchg
xlat
jle
mov
in
mov
dec
stos
rcrl
xor
adc
lods
adc
dec
test
sahf
into
or
xor
in
fwait
leave
jl
xor
jle
leave
arpl
sub
or
dec
je
sahf
push
cltd
or
aam
scas
mov
ficomps
xchg
push
sub
lods
es
arpl
dec
ret
xlat
cs
stos
hlt
dec
outsl
ljmp
stc
lods
cmp
cli
sub
xor
fcoms
ret
mov
fwait
mov
mov
pop
adc
fists
lret
xchg
mov
mov
push
lods
ljmp
sub
mov
pop
mov
mov
dec
test
dec
and
and
jb
insb
dec
lcall
arpl
pop
push
mov
dec
xchg
gs
imul
dec
mov
rorl
ljmp
sahf
sub
sbb
in
push
outsb
js
jge
xchg
xor
pop
push
mov
push
pop
mov
mov
mov
mov
sub
mov
pusha
das
cmp
mov
movsb
js
cmp
dec
imul
mov
mov
insl
movsb
and
dec
popa
ret
xor
adc
xchg
pop
in
outsl
push
lret
xchg
and
dec
test
mov
jge
cltd
lods
mov
es
popf
test
lea
sbb
dec
or
push
lret
lods
push
mov
jle
mov
inc
xchg
and
in
push
stos
fnstsw
hlt
push
fimuls
mov
xchg
mov
jl
lret
sbb
pop
xor
xchg
enter
jns
jp
jmp
sbb
lea
adc
mov
xchg
mov
push
sub
imul
jl
adc
daa
xchg
stos
jno
bound
enter
adc
cmp
stos
movsl
push
fidivrl
xchg
bound
imul
mov
inc
push
repz
xchg
cwtl
jl
outsl
mov
inc
mov
fsubr
arpl
in
add
sbb
pop
or
outsb
stos
sbb
ds
jbe
popa
ret
stos
xchg
aas
push
dec
insb
and
mov
stos
and
cmp
cld
sti
sti
subl
sbb
mov
xor
gs
cmp
or
push
sbb
in
sub
inc
sarl
push
out
cwtl
jo
push
sbb
add
cli
and
fisubrs
xor
lret
cmpsl
xchg
jnp
jmp
jp
aas
jmp
mov
ret
mov
mov
sti
mov
mov
add
outsl
cld
inc
add
sti
sbb
jp
test
mov
test
sti
shr
mov
mov
or
ret
xchg
mov
and
push
mov
mov
xor
outsl
pushf
test
jbe
and
add
ret
outsb
outsl
insb
jmp
shr
ret
imul
jae
sub
xchg
dec
add
xor
mov
loopne
loop
or
mov
pmulhw
movsl
push
icebp
inc
dec
cmpsl
push
dec
inc
fsubrl
lea
pusha
or
imul
lea
xchg
call
or
call
mov
stos
in
push
dec
adc
movsl
ret
test
xor
sbb
ror
rorl
mov
jne
jmp
mov
js
mov
jne
sahf
mov
sbb
enter
scas
lret
or
in
mov
mov
adc
stos
sbb
mov
mov
cld
sti
std
jb
jecxz
fs
adc
push
repz
pop
xor
adc
cmpsl
data16
fimull
outsb
adc
lret
or
mov
out
mov
or
and
xchg
cmpsb
bound
push
push
xchg
mov
hlt
jnp
nop
dec
inc
in
mov
mov
icebp
xor
rol
out
mov
in
dec
inc
xchg
sub
or
js
inc
imul
jno
pop
dec
dec
dec
in
shrl
cmp
pop
mov
inc
fisttps
lea
mov
sti
xor
and
cld
xor
mov
and
inc
cwtl
testl
or
jecxz
and
mov
les
shl
lods
icebp
mov
mov
lock
sub
hlt
test
mov
mov
inc
stos
mov
stos
int3
sub
mov
add
jns
mov
js
icebp
dec
adc
xchg
and
adc
sti
or
and
insl
inc
sub
sub
je
cmp
aam
in
clc
test
pushf
push
and
mov
jb
push
mov
fnstsw
inc
cmp
lods
movsl
mov
movsb
sbb
xchg
push
sub
xor
mov
aaa
daa
and
outsb
pop
fnstsw
mov
cmc
sahf
xor
lret
adc
cmpsl
xchg
or
mov
pop
add
xchg
call
mov
push
or
jle
cli
adc
mov
push
ret
fdivrl
adc
cld
ljmp
add
int3
dec
adc
negl
mov
sbb
cmp
ret
adc
mov
or
xchg
mov
aad
jle
int3
jge
or
mov
bsf
imul
push
dec
jne
pop
ja
xlat
test
popf
adc
add
sbb
mov
loope
add
repz
pop
mov
fs
fbstp
iret
gs
and
sbbb
xchg
and
sbb
mov
push
je
fiaddl
call
fldcw
nop
leave
out
xor
mov
adc
push
jnp
data16
xchg
sub
in
mov
dec
je
test
outsb
inc
arpl
enter
addl
das
sbb
decl
mov
mov
jnp
or
scas
sarl
popa
adc
loop
cmp
mov
sub
mov
mov
repz
int
lret
leave
mov
pushf
fs
lret
out
mov
fstpt
mov
aaa
add
pusha
push
mov
pandn
imul
fisubrl
or
push
sub
sbb
inc
add
mov
cmp
pop
add
and
or
dec
icebp
pop
adc
sbb
test
adc
cmp
push
fisttpll
or
call
mov
add
xchg
int3
or
adc
les
call
add
je
sbb
or
push
adc
mov
pop
dec
xor
nop
rorl
pop
xchg
or
inc
mov
out
mov
bndldx
cmpsb
cmpsb
pop
dec
mov
mov
add
sbb
adc
or
jp
cmp
fnstcw
movsb
insl
cmp
fs
sub
adc
jmp
dec
push
or
sbb
les
test
les
pop
dec
xchg
pop
add
adc
pop
add
mov
or
inc
add
cwtl
lret
push
or
ljmp
jl
pushl
stos
mov
test
push
dec
adcl
or
sub
les
and
les
idiv
arpl
mov
out
das
orl
test
fistpl
xchg
pushf
cmpsb
into
ficoms
out
mov
add
add
pop
sbb
pop
sub
stos
xchg
ficomps
test
mov
mov
arpl
sbb
push
add
or
push
cmpsl
pushf
pop
xchg
les
push
test
jnp
iret
dec
push
wrmsr
xchg
ret
sbb
loopne
std
sbb
sbb
push
stos
icebp
nop
mov
push
adc
or
sbb
lea
stos
repz
sbb
or
pop
sbb
sbb
or
adc
add
dec
lcall
push
mov
or
and
sarb
ljmp
arpl
aam
jb
mov
lahf
cltd
or
sahf
test
test
mov
ljmp
ret
jmp
xlat
sahf
jle
push
cmp
cmpsl
mov
adc
sbb
popa
negl
movaps
movsb
pop
incl
or
pop
and
xchg
jl
mov
les
jmp
push
nop
sahf
or
sbb
jno
pushf
or
stc
or
mov
ljmp
pop
ret
add
pop
cmp
inc
or
xor
into
push
rorb
jno
dec
test
or
cwtl
cmp
xchg
sbb
xchg
push
cmpsl
xchg
push
stos
leave
imul
pop
sbb
push
test
enter
or
call
cld
pushf
add
enter
sbb
or
xchg
adc
test
sbb
inc
pop
test
mov
jp
in
or
les
out
sbb
mov
shll
fisubrl
add
adc
or
andb
leave
dec
test
sbb
ds
jmp
push
cld
xchg
test
pushf
inc
ror
or
add
add
adc
shl
jp
pop
jle
sbb
dec
test
add
stos
fmuls
jl
add
mov
dec
out
mov
add
addr16
push
pushf
enter
inc
sbb
jecxz
inc
or
xchg
or
mov
arpl
addb
push
fcomip
pop
in
test
jmp
cmp
negl
imulb
jmp
sub
or
test
or
scas
sub
jns
sbb
into
cmpsb
adc
pop
push
subb
movsb
adc
jp
mov
adc
sub
pop
add
lret
pop
or
dec
or
ja
xor
es
mov
inc
inc
les
enter
call
push
or
les
movsl
fsubrs
xchg
incl
pop
add
sub
cs
sub
adc
pop
sbb
or
fcompl
inc
or
aam
dec
push
test
and
pop
sahf
xlat
or
push
or
adc
orb
test
push
subl
cmc
sbb
push
daa
add
or
sub
sbb
cmp
cmpsl
pop
pop
xchg
push
or
out
iret
enter
inc
inc
cmpl
pop
xchg
stos
mov
add
out
jl
adc
or
js
or
mov
jae
stc
sbb
pushf
add
mov
call
push
pushf
call
jl
push
cmp
call
add
in
push
mov
or
sbb
dec
imul
push
stc
push
sbb
jmp
push
sbb
jg
push
pop
les
popl
pop
loope
ljmp
ret
pop
add
jg
adc
or
inc
popl
pushf
les
call
push
pushf
les
cld
adc
push
jmp
push
aam
sbb
and
xchg
sub
call
les
cmp
jne
xchg
das
jl
bound
fistps
movsl
push
dec
or
push
test
aam
jl
sbb
sbb
sbb
adc
or
cmp
or
jl
add
mov
test
cmp
add
inc
fldl
lcall
jecxz
lea
dec
mov
les
or
add
ljmp
add
push
cmp
lock
setnp
xchg
cwtl
cmovp
pop
in
mov
mov
test
adc
cmpb
or
sbb
icebp
call
adc
adc
inc
lretw
add
enter
adc
stos
pop
call
sbb
sbb
loop
or
and
mov
sti
inc
xchg
sbb
or
fisttps
xchg
xchg
adc
test
call
sbb
test
adc
adc
xchg
or
push
add
push
fildl
push
ljmp
fadds
add
dec
fcomps
cltd
or
jl
pop
fdivrl
int
add
call
in
sbb
test
or
pushf
out
xor
sbb
cmp
imul
xchg
enter
sub
or
adc
add
add
pop
sbb
ljmp
test
call
rcrb
stc
dec
xchg
or
jl
adc
loop
or
and
call
fwait
or
addr16
and
fiadds
les
xlat
test
call
sbb
fiadds
adc
cwtl
mov
dec
ficoms
push
push
push
fcmovb
or
dec
or
jl
push
jns
test
add
adc
cltd
pushf
rcrl
in
aad
jmp
jle
mov
test
cmpsl
aam
or
jl
jno
push
pop
or
stos
lods
or
test
xchg
dec
rcrb
call
push
in
in
cld
add
cmpsl
stos
insb
mov
ret
imul
ficompl
jb
adc
out
push
pinsrw
inc
add
adc
sbb
enter
cmovno
mov
or
mov
aas
pop
les
pop
pop
add
jno
lea
dec
xchg
adc
add
or
push
or
xchg
or
or
sar
inc
sbb
add
add
or
add
cwtl
out
or
dec
sbb
test
enter
adc
inc
sti
sbb
pop
popf
or
movsb
popf
xor
fsubs
inc
orb
lahf
inc
or
fldl
or
paddsw
push
or
stos
and
data16
js
ljmp
push
and
jo
and
imul
push
insl
mov
inc
pushl
mov
and
enter
fsubr
jns
sub
loopne
jmp
mov
dec
fldcw
jb
stos
cmp
add
clc
inc
mov
pop
or
arpl
ret
jl
cltd
cmp
sti
loope
in
das
in
mov
sbb
call
pop
lock
call
xor
call
add
rcll
add
lds
js
sbb
shl
aaa
dec
cmc
out
fs
push
int
aad
ljmp
daa
test
dec
in
jbe
or
rorb
les
add
push
lcall
leave
adc
mov
xchg
xchg
test
sbb
or
incb
jmp
pushf
loop
jp
or
or
xchg
add
or
inc
pop
mov
pop
mulb
or
pushf
cmp
pushf
stos
faddl
and
dec
fsub
mov
inc
dec
les
pop
add
ret
test
adc
ljmp
inc
je
popf
or
add
push
mov
push
ret
jmp
or
cmp
add
or
call
lcall
popl
outsb
xchg
or
ret
xchg
cld
pop
xchg
sub
in
jp
decl
stos
pop
pop
and
outsb
cmp
sub
or
sbb
insb
jmp
into
in
test
into
add
aas
stos
jno
or
or
inc
in
mov
call
add
sub
ljmp
lret
out
or
adc
out
or
adc
and
pinsrw
push
adc
dec
call
sub
pop
nop
cli
sbb
pushf
in
push
in
out
sub
adc
and
add
or
pop
setle
lods
xchg
cltd
jo
inc
stos
or
or
lods
lret
incl
les
movsl
imul
sbb
dec
test
enter
xchg
sub
icebp
sbb
push
cmp
mov
mov
cld
rcl
ja
aas
ss
push
stos
mov
negb
sbb
mov
pop
add
pushf
push
xchg
in
leave
popf
mov
dec
dec
xor
movsb
in
fsubr
in
or
or
leave
cmp
out
aam
leave
test
rorb
push
call
add
jl
into
lret
mov
lods
sub
mov
pushf
not
ret
fs
xor
lahf
sti
sbb
jmp
mov
stc
lea
stos
leave
sub
dec
cmp
sbbl
insb
bswap
insb
adc
push
insb
and
les
or
cmpsl
or
or
mov
pop
fstp
add
cmp
aas
inc
lret
push
xchg
imul
pop
sub
sahf
int
sbb
sbb
pop
movsb
or
xor
sub
sti
or
incb
lcall
int3
add
bound
xchg
mov
push
add
add
fadds
or
pop
out
int3
push
pop
cltd
add
mov
push
sub
aas
mov
add
sbb
push
adc
ret
notb
sbb
ja
inc
or
xchg
out
add
mov
je
aam
inc
insl
mov
or
or
fisttps
or
pushf
dec
lods
inc
inc
xchg
or
call
sbb
popa
call
in
dec
dec
les
lods
insb
sbb
mov
pop
xchg
dec
cld
push
ret
add
fnsetpm(287
enter
inc
mov
or
inc
ja
sbb
adc
mov
xor
in
dec
pop
or
mov
xchg
xchg
pushf
les
call
loope
or
or
cli
or
add
add
or
lea
push
pop
rcrl
or
inc
ret
add
sub
adcb
hlt
int3
movl
add
dec
add
push
enter
in
repnz
pushf
les
int3
sbb
or
push
pop
les
jne
adc
and
loop
sbb
pop
ret
les
sub
sbb
sbb
lret
add
mov
mov
sub
inc
cli
or
pushf
movsb
test
lcall
jb
mov
add
stos
add
ljmp
fucomi
les
enter
sarl
add
pop
fs
add
popl
or
orb
les
int
add
enter
mov
aam
dec
push
ljmp
mov
test
ja
arpl
or
sbb
stos
push
adc
stos
gs
xor
push
add
stos
gs
xchg
fstpl
xchg
cli
xchg
sbbb
call
pushl
xchg
xchg
sbb
iret
push
aas
cmp
add
stos
gs
xor
push
sbb
stos
gs
or
movsb
enter
ret
insl
cs
pop
pushf
lea
sub
sbb
dec
cmp
cmpsl
jp
dec
pushf
or
add
loop
or
jl
sbb
sub
ficoms
int3
movsb
and
call
push
ljmp
cmp
test
je
or
sbb
loop
or
jl
adc
add
in
or
jl
lcall
jnp
mov
je
or
in
adc
addr16
pop
imulb
sbbb
je
addr16
scas
dec
les
in
dec
or
or
movsb
cmpsl
call
fmul
or
imul
or
test
jne
notb
les
inc
push
mov
sub
mov
pop
pushf
test
clc
pop
sbb
rolb
push
adc
add
push
fdivl
aam
dec
push
pop
enter
add
pop
icebp
adc
pushf
les
insb
or
pop
sbbl
push
test
call
sbb
lods
sahf
imul
pop
or
sti
pushf
les
call
xchg
pop
call
fdivrl
int3
dec
cmp
jp
stos
call
adc
pop
adcb
sbb
mov
inc
clc
stos
pop
or
les
call
test
jle
add
lea
mov
in
mov
sbb
jmp
lret
stos
outsb
mov
adc
aas
mov
xchg
mov
leave
repz
mov
add
js
mov
dec
mov
sbb
repnz
jns
mov
add
dec
insl
loop
testl
jl
ljmp
and
stos
ret
jmp
call
push
or
add
push
in
sbb
inc
cmp
add
adc
adc
aaa
fmuls
adc
in
push
in
lret
mov
pop
add
sbb
inc
or
sbb
push
addr16
in
sbb
loopne
push
add
or
sbb
cmpsl
jl
stos
pushf
mov
movsb
mov
lret
sahf
cli
push
stos
aam
test
push
les
cmc
cmpsb
jmp
mov
ljmp
fisttps
sub
jb
movntq
or
or
aas
pop
mov
inc
push
sbb
mov
add
les
jg
fidivrs
sbb
sbb
mov
cmpsb
sbb
ljmp
add
enter
out
xchg
call
movsb
inc
icebp
jmp
or
xchg
push
or
push
enter
adc
add
enter
sbb
add
push
repz
adc
dec
lcall
add
pushf
or
push
rorl
adc
or
push
inc
adc
or
fwait
pushf
mov
call
add
and
mov
fcoms
popf
pop
les
add
dec
add
sbb
inc
or
sbb
in
shrl
mov
pop
stc
fsubr
outsl
dec
insb
sbb
or
ret
stos
negb
adc
jl
xchg
fidivrs
jb
or
mov
pop
incl
add
imul
clc
add
js
pusha
adc
or
inc
outsb
cmp
add
lcall
add
rorl
mov
sbb
add
sbb
sbb
leave
dec
outsb
ret
add
enter
push
setb
adc
sbbl
sbb
les
add
adc
sbb
or
or
or
mov
inc
push
hlt
pop
add
adc
clc
or
or
cmp
push
enter
dec
adc
test
call
push
mov
inc
incb
and
dec
pop
sbb
fistl
cmova
sbb
add
sti
pop
mov
add
or
xchg
inc
add
add
sbb
dec
push
stc
or
or
pushf
movsb
dec
rorb
pop
popa
push
in
jl
sub
shlb
imul
scas
mov
mov
inc
or
push
callw
pop
or
in
or
mov
loope
sbb
inc
cmp
cs
adc
ljmp
in
sub
addl
js
or
xor
test
sbb
in
pop
sbb
adcl
or
cmpsl
adc
pop
adc
sbb
push
daa
orl
sbb
jmp
ljmp
or
adc
les
adc
sbb
ret
or
adc
sub
mov
sbb
sti
sbb
les
push
mov
js
test
orb
push
mov
jp
enter
int3
mov
push
add
adc
adc
push
out
jns
leave
add
sbb
or
push
jne
sbb
or
add
xchg
add
jg
add
movl
xchg
clc
cmp
leave
and
ljmp
inc
pushf
loop
add
cmp
repnz
insl
leave
ljmp
incl
shl
orb
testl
movsl
call
cltd
dec
rclb
or
and
push
xorb
push
sub
push
decb
or
inc
sbb
adc
jb
insl
pusha
test
addl
jl
mov
add
inc
jne
or
sbb
mov
ljmp
stos
cltd
mov
or
fmull
stos
xchg
stos
xor
shr
adc
in
out
add
fldt
or
cli
stos
cmp
ljmp
or
in
adc
or
loope
add
aam
stos
sarb
or
push
add
les
cmp
mov
mov
sub
jl
or
push
les
loop
shr
add
add
rol
inc
or
jl
xchg
or
add
dec
dec
xor
les
xchg
jge
sbb
push
adc
addr16
mov
bnd
mov
cli
or
dec
and
or
clc
fstl
or
inc
outsl
add
add
dec
fisubrl
stos
lcall
or
jo
ja
mov
inc
ret
pop
call
incl
xchg
les
imulb
stos
sbb
adc
pop
repnz
pop
repnz
clc
sbb
or
pop
or
ljmp
stc
or
lods
sbb
mov
orl
out
int3
or
aaa
dec
or
mov
call
inc
adcl
movsl
test
ljmp
adc
or
les
xchg
or
and
stc
xchg
or
or
pop
or
add
push
sbb
lcall
orl
adc
ljmp
dec
inc
push
aam
scas
fisubs
or
sbb
in
adc
test
or
push
sbb
sbb
push
call
fadds
or
enter
sbb
in
sbb
dec
inc
jne
or
or
js
in
out
jg
cld
call
push
push
addl
lahf
add
test
pushf
and
mov
or
clc
sub
mov
add
dec
aas
or
adc
mov
repnz
repnz
sti
movsb
jmp
sbb
test
enter
sbb
in
add
push
cmp
rcrb
lea
or
stos
cmp
add
sub
shll
or
hlt
or
sbb
adc
xor
stos
call
pminsw
test
test
test
mov
call
inc
repz
or
sbb
pop
or
mov
mov
stos
jg
sbb
lock
lret
or
pop
sbb
incb
add
pop
or
mov
scas
sbb
add
mov
dec
enter
cmp
pop
mov
dec
or
xchg
xchg
or
popa
idiv
xchg
or
clc
in
dec
and
cwtd
cld
or
call
jp
cwtl
add
call
adc
or
push
xor
add
out
or
mov
push
ja
or
or
pop
jbe
adc
sub
fnstcw
adc
add
adc
inc
add
jnp
outsb
or
js
ljmp
or
add
add
sbb
insl
or
imul
out
and
call
js
pop
lret
pop
ljmp
or
cmp
loop
or
dec
adc
test
mov
add
add
adc
push
mov
xchg
mov
adcb
or
add
xchg
xlat
or
push
or
lcall
sti
dec
lret
movsb
pop
cmpsl
fimuls
sbb
cld
ficomps
sbb
sbb
orb
enter
xor
xchg
test
call
loope
out
fs
sbb
outsb
sub
out
or
mov
call
pop
stos
mov
test
or
inc
out
pop
sub
or
or
mov
ret
jb
nop
lds
jg
les
call
sbb
jo
or
jl
fcoms
add
orl
scas
pop
fildl
or
or
add
ljmp
mov
and
jmp
and
cmp
cmp
dec
or
stos
mov
pop
les
stos
xchg
fs
inc
divb
or
and
push
dec
ss
xchg
shr
lcall
mov
add
js
mov
stos
fsubrs
mov
scas
imul
dec
or
out
dec
mov
push
sbb
adc
rol
das
xor
mov
push
les
mov
xchg
stos
gs
cs
loope
in
insl
shrb
ret
adc
les
cld
adc
adc
mov
les
xchg
sbb
sbb
push
or
sbb
pop
mov
xchg
daa
mov
filds
dec
pushf
mov
xchg
setl
call
call
test
add
lret
fnstcw
les
int3
xchg
lock
rcr
stos
fdiv
daa
out
sbb
or
pop
test
xorb
lret
push
pushf
push
stos
mov
fistps
in
mov
cwtl
xchg
push
adc
inc
adc
adc
out
push
xor
loope
or
mov
or
lret
test
gs
add
out
sbb
iret
stos
call
push
sub
adc
or
xchg
push
jl
icebp
sbb
test
xchg
sbb
mov
clc
dec
pushf
mov
or
lret
test
push
mov
pushf
les
or
or
sbb
add
sub
lahf
or
rclb
nop
mov
mov
or
push
scas
pusha
sbb
repnz
lret
rcr
or
cmpsl
push
mov
filds
and
push
mov
sbb
mov
add
sbbl
xchg
mov
mov
pop
insl
scas
pop
in
orl
popf
mov
or
fs
sbb
bound
mov
or
push
add
movb
mov
adc
stos
leave
pop
adc
add
or
xchg
push
or
push
loop
or
pushf
les
mov
dec
fldl
sbb
or
or
out
add
xchg
popa
add
les
call
imul
mov
ss
dec
lock
fistps
stc
adc
mov
sbb
lock
loop
ljmp
jnp
enter
fimuls
mov
sub
out
mov
dec
jno
mov
adcl
call
pop
leave
jmp
xchg
inc
push
push
out
das
or
pop
pop
andl
or
or
ljmp
adc
les
test
pop
imul
fimuls
les
xchg
pop
lcall
rclb
mov
pushf
movsb
push
addl
jo
ficoml
lret
lret
test
lcall
or
pushf
inc
les
fiadds
iret
adc
inc
pop
fcmovnb
sahf
mov
rorl
ret
and
mov
adc
js
lcall
dec
idivb
mov
lret
jl
loop
push
or
cli
add
add
shlb
std
or
lret
mov
or
pushf
movsb
aad
mov
dec
fs
in
or
lret
test
or
sahf
ljmp
sbb
fs
pop
orb
cmp
ljmp
xchg
xrelease
xchg
loop
sbb
mov
insb
pop
adc
fwait
jecxz
in
loop
roll
jg
test
dec
or
add
add
push
rorb
fcomps
mov
xchg
or
jg
mov
enter
fildl
sbb
mov
nop
out
xor
fwait
mov
hlt
adc
sbb
js
or
xchg
ror
add
push
daa
test
push
lcall
sti
adcb
clc
xchg
imul
or
test
cld
adc
sbb
push
push
push
mov
mov
ljmp
sbb
ret
cltd
fs
cltd
push
adc
fdivl
mov
adcl
add
vphaddubq
ficomps
loop
out
mov
sub
add
or
push
stos
cmp
add
ljmp
add
push
call
out
or
adc
xchg
les
or
mov
or
test
push
sbb
sbb
pop
xchg
add
mov
push
test
add
add
jecxz
fs
mov
xchg
adc
mov
cmp
push
adc
lcall
adc
out
xchg
out
sti
mov
mov
lret
js
mov
call
xchg
in
lret
shrb
call
xchg
imul
daa
mov
aam
cmp
test
or
fs
jne
mov
in
mov
adc
call
inc
aaa
cmp
test
pop
fmull
pushf
movsb
inc
in
int3
mov
pop
add
sti
dec
or
pushf
inc
lret
ljmp
push
push
test
clc
mov
stos
call
push
pop
cltd
jmp
add
fcom
lea
pushf
dec
sbb
or
adc
lcall
dec
mov
pop
sbb
push
lcall
or
push
leave
inc
xchg
mov
in
sub
add
jg
xchg
call
cmp
clc
or
adc
pop
fs
pusha
sahf
mov
or
imul
add
sti
ror
mov
cmp
xor
mov
dec
aaa
fisubs
cmp
or
mov
cmpsl
cmpsb
fsts
dec
lea
and
ja
mov
test
mov
loope
inc
decb
aas
outsb
addb
pop
push
sti
stos
popf
or
pop
pop
adc
add
push
orb
cmp
sbb
mov
ljmp
fs
bound
sub
mov
xchg
mov
inc
rclb
mov
mov
push
cli
mov
les
call
add
test
adc
jp
sbb
cld
stos
fisttpl
sbb
sbb
inc
aam
lods
push
pusha
sbb
fs
or
xchg
sbb
daa
push
pushf
movsb
test
or
cli
lods
sbb
dec
jge
fdivs
sub
in
and
or
test
in
stos
popa
xchg
dec
xorb
out
das
mov
pop
add
sub
and
cmp
or
add
xor
inc
cmp
jne
aas
iret
lcall
or
jae
dec
adc
xchg
test
adc
ljmp
sbb
add
mov
xchg
mov
or
icebp
push
jmp
push
mov
push
js
jae
push
iret
or
sti
das
test
lret
xchg
push
jns
fsubl
inc
cmp
pop
int
orl
ds
stc
cld
out
mov
cmc
inc
adc
cld
push
xor
dec
pushf
addr16
dec
loope
stos
cmp
adc
iret
xchg
push
gs
mov
jmp
pop
lea
xor
cmp
inc
push
les
push
data16
xor
in
pop
lcall
ss
xchg
mov
cmp
es
ljmp
popa
mov
and
iret
lea
clc
cmp
lret
add
adc
cli
out
repnz
xor
sbb
pop
adc
lods
rorl
pop
loope
cmp
add
xor
sbb
insb
outsl
ja
mov
outsl
ljmp
dec
adc
int
pop
imul
mov
mov
call
inc
cmpb
mov
inc
xchg
mov
mov
lods
sub
rclb
mov
lods
pop
push
push
sbb
arpl
lret
movsb
xchg
repz
jo
and
aad
arpl
cmp
dec
fcompl
lret
push
sbb
mov
daa
inc
push
jnp
push
orb
jne
cli
lock
repz
nop
stos
pop
subl
arpl
and
sbb
mov
jne
dec
outsb
push
mov
aas
mov
ss
mov
lods
in
xor
movsb
pop
leave
jl
xchg
mov
testl
inc
scas
rolb
addr16
pop
xchg
scas
pusha
mov
aad
mov
jg
insl
push
mov
dec
push
or
cmpb
loop
leave
nop
movsb
xchg
pushf
jns
enter
loope
jmp
cmp
sbb
and
xchg
jno
and
pop
cltd
out
cmp
jp
add
lds
out
stc
call
push
adc
popf
sbb
pop
adcl
jnp
jl
mov
fwait
movsl
mov
hlt
loopne
xchg
and
mov
dec
adc
pop
pop
or
or
mov
cmp
inc
xchg
out
pop
xchg
call
adc
mov
ss
adc
pop
xchg
inc
pushl
loop
fs
mov
mov
xor
cli
dec
jo
xor
inc
dec
incb
frstor
mov
daa
pushf
lea
int3
push
dec
leave
mov
jmp
adc
sub
dec
mov
insb
cld
mov
cmp
mov
mov
and
add
loopne
sub
movsl
jg
jb
mov
orl
stc
jmp
sub
rcrl
stos
addr16
xchg
lahf
jns
outsl
mov
test
push
pop
aam
int
dec
dec
iret
push
xchg
enter
pop
dec
xor
pop
sbb
jmp
orb
out
cli
xchg
mov
test
rcll
xchg
xchg
adcb
or
inc
add
lock
ljmp
inc
outsb
pop
xchg
mov
lea
mov
mov
add
outsl
push
cmc
mov
inc
xchg
outsb
loope
rorb
mov
adc
mov
dec
repnz
ret
mov
daa
cmp
cmp
xor
in
fcoml
adc
sarb
mov
adc
pop
sti
sti
cmp
movsl
pop
dec
mov
ss
ficomps
jl
call
mov
mov
shrb
cs
push
xlat
dec
leave
cmp
inc
jno
fs
push
mov
ja
insb
insl
mov
fisubrs
inc
dec
sub
cmp
cmp
movsl
test
fnstenv
push
mov
je
mov
addr16
xchg
mov
lcall
xchg
mov
dec
rorl
fistps
xor
fimull
xchg
xor
add
xor
inc
fcompl
xor
mov
push
add
mov
mov
into
sarb
xor
divl
jns
ret
cwtl
nop
jle
cmpsl
test
dec
insb
xor
jecxz
fsubp
ja
mov
insl
and
dec
xor
test
cmp
in
arpl
mov
pop
adc
fbld
push
es
push
aaa
dec
xor
xchg
movsb
adc
mov
xor
push
xchg
rcrb
mov
or
inc
inc
push
push
xor
cs
insb
add
jo
mov
dec
daa
inc
hlt
shll
xor
sub
mov
nop
mov
push
mov
in
mov
cld
push
fs
lcall
nop
sti
jge
aam
je
rclb
and
pop
fisubrs
mov
shlb
fs
xchg
xor
stos
pushf
sub
jbe
stos
fistps
pop
sbb
cmp
push
pusha
movsl
mov
mov
gs
and
test
iret
jne
in
sbb
adc
pmullw
push
pushf
data16
aaa
enter
xchg
adc
push
mov
cmp
call
dec
add
push
pushf
sub
sub
dec
push
push
movsb
mov
je
into
sub
jb
xchg
cltd
imul
mov
fs
push
mov
inc
cmpb
xor
xchg
mov
pop
fsubrs
jmp
inc
stc
bt
call
lea
jle
bt
sub
call
sbb
xor
lret
filds
notb
dec
mov
add
xor
mov
arpl
rclb
iret
sub
cld
inc
mov
enter
pop
movsb
es
xor
and
fadds
rorb
pop
inc
push
add
sub
pop
stos
sub
int3
nop
adc
xchg
sbb
jecxz
pop
sub
pop
orb
in
pop
sbb
push
mov
bound
orl
xchg
sub
add
pusha
sahf
pop
pop
lret
nop
or
lcall
pusha
ret
inc
push
cmp
push
ret
cs
xor
ret
out
sub
cltd
int3
pop
aam
mov
outsl
and
pop
lret
jge
fstps
add
jmp
mov
in
int
or
dec
test
xchg
mov
hlt
mov
push
pushl
call
mov
mov
sar
mov
rorb
mov
jbe
jge
je
enter
mov
sti
cmp
sbb
pusha
push
mov
cwtl
jno
out
jg,pt
js
push
dec
inc
jge
stc
jle
sub
add
pop
lds
push
xor
fcomps
sub
popf
stos
and
js
jle
loopne
inc
shufps
mov
scas
repz
scas
pop
fwait
rcll
push
mov
pushl
call
enter
fsubrs
js
rclb
cmp
mov
aad
push
test
mov
test
adc
sub
ds
aam
mov
inc
in
std
or
cmpsb
mov
mov
jecxz
xchg
inc
out
sbb
push
or
jecxz
push
test
cmpl
jmp
fninit
js
frstor
aas
mov
std
cltd
insb
movsl
adc
push
repnz
mov
cmc
mov
mov
xchg
mov
ret
test
shlb
daa
or
jns
pop
or
ret
clc
lods
loopne
push
push
cmc
push
xchg
into
lea
xchg
sti
lret
sub
adc
fsub
push
lods
jae
fstl
xchg
shlb
mov
pop
cmp
pop
sahf
dec
push
inc
xlat
xchg
fdivrs
repz
in
jne
push
mov
mov
int3
aad
and
test
fdiv
es
shrb
sub
sub
sbbl
fwait
mov
out
test
daa
jbe
jl
and
cmpsl
dec
into
fnstenv
andl
sub
pop
push
into
push
push
or
aam
mov
std
adc
lcall
loope
test
and
es
pop
or
push
ret
shr
push
mov
pop
jb
aas
je
in
jmp
out
xor
fidivl
test
jecxz
std
sub
xchg
mov
loopne
adc
lods
sub
push
ja
out
xchg
push
pop
xor
sbb
xadd
mov
push
fdivl
pop
push
inc
dec
jno
jg
int3
arpl
imul
dec
enter
mov
jb
push
ja
popa
hlt
sub
xchg
push
push
shrb
jae
mov
push
mov
ret
pop
cmp
fildl
pop
push
movsl
addb
outsl
xchg
into
in
mov
xchg
out
xorl
loop
mov
movsb
xchg
dec
pop
shl
ds
mov
pop
sbb
cmp
lahf
jno
arpl
sub
movsb
loope
xchg
mov
icebp
inc
cwtl
or
aaa
xor
rcll
mov
rcll
rorl
int
jecxz
fidivl
pop
inc
push
cmp
adc
pop
loop
xor
jb
xchg
or
scas
aas
mov
mov
xor
aaa
ret
mov
sub
pushf
subb
jne
mov
push
out
dec
push
add
les
adc
sahf
dec
cli
scas
push
or
lods
mov
jnp
addr16
rclb
and
hlt
scas
in
pop
sbb
mov
mov
aas
mov
fcomps
adc
or
ss
mov
and
movsb
cwtl
popa
push
arpl
cmp
leave
pop
pop
sbb
cs
movsb
xchg
rolb
cmp
add
stos
sub
push
out
outsl
popa
mov
test
cld
out
mov
mov
call
adc
into
inc
pop
std
dec
mov
pusha
std
fcmovu
xchg
add
push
sub
lods
cmc
mov
test
xchg
xchg
mov
mov
mov
shrb
loopne
fstps
dec
or
movsl
xchg
into
or
gs
pop
mov
inc
sti
xor
scas
jecxz
rol
adc
mov
push
bound
out
repz
jns
ljmp
push
jp
sbb
and
mov
mov
cwtl
adc
add
jl
xor
push
bound
das
in
int3
push
aas
inc
pop
xchg
lret
es
jnp
repnz
jl
daa
mov
add
or
rorl
pushf
cmp
add
roll
and
hlt
loopne
jp
test
xchg
roll
jno
jns
xchg
pop
js
stos
lahf
ja
scas
sub
push
add
loopne
scas
push
test
adc
mov
pusha
xor
jo
push
push
pop
movd
add
adc
ljmp
cmp
xchg
inc
mov
shll
imul
scas
addl
scas
repz
imul
std
xor
push
and
outsl
mov
orb
mov
loop
cmp
test
adc
fdivs
stos
push
test
mov
add
xor
and
pop
cld
fsub
out
jno
pusha
es
fstpt
mov
mov
jnp
jb
xor
cs
mov
cli
in
ds
jns
jle
test
cmc
xor
pop
outsb
xchg
mov
sbb
out
inc
and
popf
movb
adc
lea
push
jmp
xchg
mov
loope
notl
xor
mov
push
jecxz
adc
or
add
mov
sbb
xor
int
inc
lock
ja
fcmovbe
imulb
inc
lahf
adc
sbb
jo
or
dec
sbb
addr16
cwtl
mov
dec
and
mov
jle
daa
or
push
or
test
sbb
pop
addr16
lods
xchg
adc
loop
popl
push
jecxz
and
call
inc
popf
sbb
pop
cmp
sub
push
jecxz
push
in
mov
xchg
push
daa
stos
mov
call
push
ss
and
sbb
addl
fidivrl
scas
xchg
or
hlt
push
push
ret
or
lods
and
out
jno
stos
aaa
shl
or
hlt
mov
mov
cmc
push
repnz
je
scas
mov
popa
push
jbe
inc
movsl
push
xchg
xchg
cmpsl
inc
ds
push
adc
push
out
insb
stos
decb
cmpsl
mov
mov
pop
adc
int
ss
rcll
sti
mov
push
sarl
sub
aas
loop
fsts
push
xchg
mov
mov
loop
ficomps
dec
inc
adc
in
cmpb
lret
xchg
sbb
mov
jo
mov
mov
cmp
test
aam
sahf
inc
jecxz
cmp
cmp
pop
or
dec
or
jge
jb
daa
push
cmp
or
les
mov
xchg
mov
jge
push
hlt
popl
ds
sub
cli
cmp
pop
adc
pushf
push
cltd
bsf
mov
and
and
outsb
pusha
lods
sub
dec
enter
pop
mov
test
test
out
ds
insb
pop
pop
mov
and
cmp
out
ja
jge
fisttps
fidivl
scas
mov
adc
pop
dec
pop
push
int3
sub
int
inc
ss
cmpsl
dec
xorl
sbb
mov
mov
stc
dec
mov
inc
jg
xor
ret
jbe
outsb
stos
call
adc
leave
dec
dec
inc
jne
outsl
mov
call
and
lock
mov
dec
push
inc
jnp
orl
jns
push
pop
loope
sbb
dec
and
mov
adc
or
outsb
add
push
call
push
push
mov
push
mov
mov
mov
cmp
inc
xchg
mov
imul
xchg
in
decl
test
cli
jmp
mov
dec
gs
inc
mov
sar
sub
xor
test
mov
pusha
bt
pusha
sub
movw
movb
pushl
popl
clc
stc
cmp
push
movl
jmp
xor
in
jo
arpl
pop
out
icebp
mov
scas
jb
in
mov
orl
and
jae
push
mov
sub
mov
jl
addr16
mov
dec
mov
mov
hlt
push
xchg
or
xor
nop
add
push
inc
or
sub
sub
and
add
and
sub
pop
pop
in
xchg
push
inc
std
dec
insl
pushf
sahf
jg
icebp
pop
pushf
lds
mov
cmc
xor
jge
push
push
pop
xchg
mov
test
jge
jnp
or
mov
inc
js
sti
inc
jns
test
mov
repz
ds
xchg
lret
out
movl
aad
mov
repz
imul
mov
bound
jge
or
int
daa
and
push
test
dec
je
iret
inc
xor
jmp
jmp
cmovae
mov
in
xchg
mov
adc
and
cmc
pusha
jmp
cmp
cmp
jmp
adc
jb
jmp
push
xchg
into
push
cmp
popf
xlat
lcall
arpl
ss
cli
or
imul
fsubl
xor
inc
ss
add
pop
ret
pop
dec
out
std
xorb
inc
jl
clc
jns
call
dec
cmp
or
cmpsl
lahf
inc
aam
inc
sub
and
popa
pminub
or
scas
sbb
or
add
mov
icebp
xor
mov
xchg
mov
jg
and
ja
jno
sub
mov
test
dec
push
iret
adc
push
lea
mov
in
bound
push
xchg
xchg
push
out
mov
outsl
pusha
fistl
mov
imul
jle
pop
bound
ja
cli
gs
fs
mov
leave
lock
push
arpl
aas
inc
cli
mov
dec
addr16
or
or
cmpsb
test
xor
pop
fldt
in
sub
xchg
inc
jo
insl
sub
push
rclb
xchg
pushf
lea
jne
push
pusha
movb
pushf
lea
jmp
jmp
push
imul
mov
clc
add
pushl
pusha
pushf
lea
jmp
mov
aaa
lret
xchg
scas
imul
into
xchg
push
dec
or
outsb
push
xchg
test
sbb
rorl
lods
sbb
nop
add
sub
ficompl
test
sbb
push
mov
add
test
int
into
jg
dec
cld
in
dec
push
adc
and
jg
ljmpw
mov
mov
mov
mov
lods
bound
push
lea
xchg
mov
adc
pop
lea
ja
push
jmp
jmp
clc
pop
sbb
js
inc
sti
mov
jge
data16
test
loopne
xchg
sub
push
mov
cmp
fwait
pop
mov
iret
fmuls
mov
xchg
push
imul
sub
pushf
and
mov
and
iret
pushf
mov
mov
sbb
sbb
fdivr
jnp
lahf
push
test
addr16
mov
mov
out
mov
shll
mov
adc
jne
arpl
push
mov
rcrb
pop
xchg
xchg
inc
xor
aas
and
push
out
pop
inc
sub
inc
dec
stos
out
aaa
arpl
daa
jecxz
push
dec
cld
adc
shlb
les
stos
dec
jmp
insl
leave
dec
sub
iret
xlat
jbe
and
jmp
fimull
dec
or
mov
sub
mov
sub
btc
and
mov
pushf
shl
mov
mov
test
test
mov
movw
pushf
add
call
mov
pusha
pusha
clc
add
add
cmp
bt
clc
movzwl
bts
shl
mov
stc
pushf
stc
call
mov
push
repz
rcrb
aad
mov
jo
nop
push
mov
jl
int3
shlb
ja
repnz
mov
push
adcb
sub
sbb
mov
cmp
push
push
push
ljmp
lret
adc
sub
sbb
pop
mov
push
in
mov
ss
aas
out
sahf
fistl
push
mov
adc
xchg
fs
cltd
sub
fistps
rolb
outsb
sub
aam
addb
mov
aam
dec
cmp
jp
mov
adc
scas
cmpsl
test
fwait
or
int3
fdivp
mov
mov
jbe,pt
insb
jmp
or
pop
stos
mov
std
sbb
lret
mov
std
jnp
in
xchg
int3
lcall
or
leave
xlat
lock
mov
add
in
xorl
sub
jmp
add
xchg
mov
mov
xchg
adc
mov
add
dec
insb
sahf
rorb
aaa
out
mov
xchg
sub
imul
adc
imul
lea
das
jge
imul
lret
inc
pop
sbb
subl
jl
mov
cmp
pop
jb
das
fmuls
mov
fbld
test
scas
cmc
or
xchg
xchg
ficomps
mov
dec
into
fyl2x
or
cmp
shll
insl
and
outsl
insb
cs
in
mov
sub
push
add
cmpsb
mov
push
lret
or
dec
or
dec
addl
mov
sub
call
sub
adc
mov
push
mov
xchg
xchg
inc
jge
addr16
push
sahf
adc
cltd
or
pop
jl
mov
fnstenv
jo
jl
dec
adc
dec
jno
dec
add
les
ljmp
popf
js
je
dec
test
inc
xor
notl
sub
and
jecxz
push
add
into
scas
mov
insb
sbb
or
mov
rclb
sbb
mov
test
mov
push
ficoms
inc
xorl
ret
sti
mov
push
adc
push
gs
push
cltd
push
dec
mov
rorb
lds
lcall
xlat
jp
and
mov
mov
inc
dec
movsl
xchg
repnz
pop
cmp
dec
imul
jg
cmc
shrb
enter
int3
push
xchg
pushf
and
aad
js
das
mov
fucom
and
in
and
cmp
add
pop
pop
es
popa
fs
pop
sbb
pop
xchg
loop
clc
cmp
cmpsl
jecxz
fisttpl
push
xchg
jle
xchg
mov
in
jbe
fs
je
test
cmp
clc
push
or
pushl
lea
je
rcr
push
sub
call
jb
lcall
popa
mov
lods
push
loope
leave
or
scas
clc
out
clc
jle
mov
sbb
pop
push
push
insb
mov
and
leave
jle
mov
es
leave
lret
pop
lods
push
sbb
dec
lea
jb
or
sti
dec
int
fisttpll
mov
test
imul
and
dec
cmpb
in
xchg
mov
push
gs
add
inc
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
bt
test
pushf
pusha
movb
call
setle
stc
call
cmpsl
and
push
and
pop
add
or
inc
cmp
or
test
or
add
int
aad
jl
cmpsl
cmc
jge
daa
lock
test
call
shlb
les
adc
int
stc
popl
push
fdivrs
adc
sbb
adc
pop
inc
push
xor
enter
je
and
lock
jne
adc
push
cld
push
mov
and
stc
push
and
call
sbb
jg
jge
je
fisttpl
lret
pop
xchg
mov
pop
stos
xchg
push
ljmp
mov
arpl
shll
ds
adc
cmp
mov
sahf
cmc
push
rcr
push
rcll
mov
dec
dec
f2xm1
test
pop
rclb
mov
lret
aas
stc
or
xor
fisubrs
push
fnstenv
dec
sti
in
hlt
test
mov
add
ja
bound
dec
mov
mov
lock
push
bound
pop
and
cmp
cmp
scas
jae
push
sbb
insb
pop
mov
mov
xchg
adc
pop
pop
sbb
jecxz
push
and
pop
sub
fcoml
or
pop
jmp
cltd
mov
sbbl
fildll
xor
sub
fisttpll
sub
jo
dec
stc
jmp
int3
add
mov
imul
clc
jl
inc
sbb
adc
cld
das
bound
outsb
xor
pop
testb
add
push
shr
cmp
lcall
xchg
aas
cli
clc
pushf
cmc
imul
pushf
cmc
add
mov
pushf
pushl
pushf
lea
jmp
enter
ds
je
lock
ss
mov
loope
test
out
shll
dec
shll
add
lret
fisubs
mov
cmp
pop
sbb
jg
jg
pop
adc
pusha
sbb
xchg
mov
or
test
repnz
lret
jl
outsl
sub
and
jb
imul
xor
cmp
cmpsl
jno
adc
popa
and
lds
dec
dec
dec
sub
imul
test
lods
jbe
sub
test
hlt
mov
addr16
xchg
inc
rorl
stc
jae
sbb
cmpsb
push
pop
adc
mov
push
mov
andb
ret
fmull
mov
jo
pop
push
pop
push
inc
or
inc
cmpb
adc
sub
adc
jge
in
sub
mov
adc
fstps
aas
or
xor
dec
sti
or
cwtl
cwtl
jbe
std
add
movsb
ret
fnstcw
call
stc
pop
inc
cmpsl
addr16
outsl
or
push
mov
outsl
out
fwait
pop
mov
cmpsl
loop
stos
xchg
mov
aam
insb
pushf
call
mov
aam
jg
pop
jg,pt
std
xor
aam
aad
push
fsts
pop
jno
enter
push
mov
sub
cli
clc
and
mov
sbb
jmp
mov
out
mov
xor
aaa
cmp
push
adc
clc
dec
outsb
push
cltd
out
sub
test
cmc
ficomps
loopne
pop
popf
fists
push
cwtl
pop
mov
fs
stos
cwtl
push
push
pop
adc
mov
push
nop
lret
test
les
or
sub
push
mov
sub
aas
arpl
lds
sbb
das
jmp
jg
jo
scas
add
mov
or
push
xchg
pop
mov
test
cli
lds
gs
mov
repz
ja
push
nop
jo
mov
dec
fldenv
pop
sub
test
jle
sub
ficomps
int
push
aas
cmpl
bt
cmp
cmpb
pusha
jmp
inc
cmc
ror
test
neg
mov
test
sub
pushf
lea
call
cmc
cmp
call
cmp
adc
mov
jmp
stos
fs
or
jae
mov
pop
ficoms
jne
mov
sbb
cwtl
push
push
cmp
je
sub
imulb
add
mov
jecxz
imul
leave
fsts
mov
xchg
bound
neg
sbb
insl
cltd
cltd
fcoms
lcall
xchg
cmp
adc
dec
dec
dec
sub
lret
test
ret
xchg
push
inc
lds
or
adc
setbe
clc
movl
repnz
pusha
pushf
movb
pushf
lea
jne
push
call
cmp
lret
sbb
pop
icebp
loope,pn
rolb
imul
int3
or
mov
das
xchg
sbb
icebp
addr16
enter
adc
ja
fsts
ss
jmp
jns
test
jmp
out
out
mov
dec
xor
mul
cmp
cltd
fsubr
out
rcll
dec
mov
or
insb
sub
mov
lcall
fs
ja
call
sub
stc
push
ret
mov
mov
mov
cmp
sub
xor
pushf
cmp
rcll
mov
stos
dec
int
xchg
xchg
popf
fsts
pusha
and
inc
xchg
loopne
and
mov
add
adcl
mov
mov
out
loopne
dec
add
sub
mov
mov
mov
add
loopne
clc
xchg
xor
xor
psrlq
inc
xor
insl
inc
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
or
sti
cmp
sahf
pop
sbb
fcomps
sbb
mov
out
mov
mov
push
pop
sbb
adcb
sbb
orl
lock
push
out
cmp
lds
sbb
sbb
cmp
imul
jns
jns
xchg
ds
jno
and
dec
sub
ljmp
aam
sar
add
inc
mov
insb
out
jae
sbb
sbb
xorb
sti
cmp
lock
out
xor
fidivs
lcall
gs
stos
mov
push
push
add
cmp
xchg
and
cmc
call
pop
pop
arpl
jnp
cmp
lods
cmp
dec
jbe
iret
sbb
rcrl
insb
jb
mov
xlat
mov
in
shl
jecxz
popf
mov
into
jp
add
xor
jo
stos
push
dec
add
lahf
ficompl
mov
dec
adc
mov
xlat
test
inc
je
loop
pop
and
add
cltd
pop
ret
and
jo
addr16
adc
sbb
call
ret
fsubrs
addr16
test
jnp
cmpsl
aaa
push
dec
sti
jae
sbb
cmp
insl
ret
insb
or
or
lret
push
xchg
xchg
shlb
addr16
xlat
out
push
js
adc
push
popl
test
ret
pusha
popf
gs
pop
rorb
mov
iret
nop
call
mov
je
add
sbb
lds
inc
call
pop
xchg
aad
roll
loope
ret
aaa
icebp
mov
js
xchg
lods
mov
lds
dec
sbb
inc
xchg
in
xlat
cs
rclb
mov
lods
flds
or
or
stos
daa
jbe
mov
push
ljmp
mov
mov
mov
pop
sti
push
in
push
add
sahf
mov
mov
inc
push
adc
sbb
mov
pop
sbb
mov
jns
je
pop
and
push
push
push
ret
xchg
mov
and
inc
jmp
pop
in
scas
daa
mov
outsb
dec
push
imul
fs
arpl
fcoms
loopne
ret
xlat
imul
sahf
mov
dec
cmp
dec
pop
out
xor
jl
nop
sbb
cmp
je
lret
clc
jmp
fcompl
mov
jecxz,pt
adc
and
lret
in
sbb
gs
push
push
jecxz
cwtl
orb
inc
sti
sub
xchg
lret
adc
mov
adcb
sub
xchg
cli
jmp
movw
call
add
push
gs
jb
popa
je
dec
gs
js
add
jmp
ret
jmp
xlat
into
mov
popf
lds
jne
ljmp
and
inc
cli
popf
ja
sbb
daa
xchg
and
inc
cmp
idiv
jg
lret
and
lret
xchg
pop
or
sahf
sub
add
jbe
dec
push
sub
loopne
cmp
daa
mov
test
lds
in
xor
scas
jne
imul
mov
js
xchg
push
fsubrl
sub
or
js
std
mov
mov
leave
fwait
and
mov
sub
aad
mov
cmpsb
cltd
and
int3
mov
pop
xchg
lods
imul
and
sub
push
push
mov
pusha
scas
sbb
dec
mov
test
dec
pop
lock
push
jae
outsb
pusha
popf
scas
ds
jge
jecxz
pushf
sbb
jmp
pop
into
sub
rclb
jl
push
xlat
fwait
into
sti
xor
xor
jp
inc
xchg
mov
jo
or
pop
addr16
jmp
fwait
pop
add
sbb
jb
xor
daa
fsubs
scas
outsl
ss
test
add
xchg
js
and
mov
jl
dec
sbb
mov
sub
lods
aam
ss
mov
gs
hlt
pop
xchg
addr16
jo
adcl
cs
test
sub
cmp
mov
jge
pop
stos
inc
stos
mov
shll
push
ja
int3
test
clc
or
mov
ret
or
push
add
xor
mov
sbb
mov
es
inc
jae
pop
or
or
pop
popa
push
popa
jno
into
ljmp
stos
jmp
jo
ret
pusha
and
les
repnz
push
push
pop
cmpsl
sbb
mov
data16
xchg
test
inc
cltd
sub
call
adc
lods
lods
fucompp
and
jmp
cwtl
push
add
mov
cwtl
cltd
mov
ret
jl
data16
xchg
out
ja
ret
fucomip
jge
jmp
dec
lock
pop
clc
xchg
pop
pop
insb
mov
adc
js
out
imul
popa
xchg
mov
and
inc
sub
xor
pop
movsl
jns
cmp
test
and
inc
xor
imul
mov
inc
xchg
xchg
lea
repz
lahf
and
aas
cwtl
sbb
ret
js
mov
scas
mov
stos
out
outsl
lods
sti
outsl
jns
and
imul
cmp
out
and
jecxz
data16
xchg
aad
mov
cmp
fwait
or
movsl
mov
sbb
lret
fbld
aad
inc
inc
or
in
add
or
ss
cltd
fstpt
add
data16
rorb
insb
fdiv
cmpsl
mov
push
int
jnp
push
pop
popf
popw
adc
arpl
xchg
xchg
mov
mov
push
mov
push
out
stos
lcall
fstpl
cli
sub
jle
stos
fwait
call
daa
stos
sbb
jmp
into
xchg
push
xchg
rcll
es
pusha
lea
jbe
bswap
xadd
movzbw
sub
shl
rcr
movsbw
mov
xor
mov
ror
xadd
bswap
add
rcr
or
pushf
shr
not
sar
mov
inc
add
call
mov
clc
call
pop
hlt
mov
adc
int3
jbe
dec
sbb
add
push
int3
nop
ret
clc
xor
sub
es
push
aaa
xchg
or
cwtl
stos
jnp
ds
sbb
sbb
xchg
sbb
cmp
adc
cmp
lret
je
xchg
add
cs
test
imul
lds
jae
imul
xchg
sbb
mov
inc
xchg
cmc
cmp
pushf
pushl
call
add
dec
outsl
arpl
inc
jb
add
int
mov
lea
movw
mov
bswap
lea
lea
push
mov
pushf
pushl
ret
out
les
sti
mov
in
inc
sti
cmp
sub
rclb
dec
xorb
sub
out
pop
loopne
and
lods
push
jg
or
pop
mov
out
imul
cwtl
push
pushf
mov
xchg
or
das
pop
mov
cmpsb
mov
aad
push
aam
aas
sbb
cmpsb
sub
lods
pushf
adc
or
push
or
addr16
imul
fiaddl
lods
mov
jg
push
stc
leave
dec
xor
int
sub
and
pusha
aas
xor
cwtl
fdivrs
call
xchg
xchg
sub
lock
outsb
shll
mov
ret
ljmp
nop
outsl
ds
adc
mov
add
adc
sbb
cmp
cli
xor
jge
outsl
out
dec
inc
aad
daa
in
call
into
ljmp
cmpb
es
xchg
dec
aam
fsubl
in
mov
lds
mov
pop
push
push
pop
xchg
sub
or
sahf
in
in
add
xchg
push
xchg
das
loopne
aam
push
sbb
push
push
push
rolb
and
mov
push
lock
pshufw
adc
ss
filds
lods
popa
mov
jae
mov
jmp
cmp
lods
das
xchg
xor
push
loope
jge
pop
shlb
icebp
mov
push
adc
imul
mov
lcall
pop
pop
inc
xchg
mov
push
push
jmp
mov
pushf
cmc
rcl
mov
stc
repnz
jmp
test
clc
cmp
pusha
push
pusha
lea
jae
pushf
add
jmp
into
insb
cmpsb
test
in
in
cmp
mov
cld
roll
mov
cmp
mov
addb
in
mov
ja
bound
aam
mov
lods
jmp
sbb
cmp
xor
pop
loope
dec
and
pop
out
insb
cmp
clc
stc
cwtl
mov
add
mov
test
clc
inc
jne
ljmp
xchg
mov
mov
in
fwait
cltd
pushf
es
in
js
imul
rcll
add
shll
lods
fstp
sub
inc
das
sti
push
or
gs
adc
bound
shll
mov
test
xchg
and
xchg
out
xchg
xchg
xchg
xchg
bound
gs
mov
jge
mov
add
sub
loope
dec
mov
mov
rorb
pop
je
mov
jmp
cmc
sub
and
push
test
out
push
call
jmp
cltd
imul
test
test
lcall
push
cltd
xlat
xchg
or
inc
pop
fsubrp
or
cmpsl
out
and
testl
mov
sahf
xor
data16
dec
mov
mov
rcll
mov
dec
repz
add
push
fdivp
or
je
lahf
or
aam
cmp
clc
mov
mov
push
xchg
and
popf
fcoms
mov
jl
mov
movsl
inc
pushf
call
mov
data16
push
in
xchg
imul
dec
xchg
push
jle
ljmp
mov
add
mov
and
and
or
adc
js
loope
insb
clc
ds
jb
cmp
pop
mov
cwtl
or
stos
ja
or
mov
movb
jmp
inc
xor
lcall
cmp
mov
xchg
mov
aam
push
std
jne
xchg
les
push
push
dec
mov
pop
jg
out
stos
inc
cmp
cmp
cmp
jmp
jge
clc
cmpsl
xchg
xlat
adc
or
xor
test
out
mov
xchg
mov
mov
xchg
xchg
pop
enter
mov
push
cltd
pop
in
cwtl
cmpsb
inc
aad
in
popa
loope
sbb
jne
sar
sbb
out
sbb
mov
mov
mov
outsb
or
mov
sbb
cltd
mov
sti
jp
sbb
dec
push
scas
rorl
dec
stc
scas
insl
scas
insl
xor
insb
ss
daa
add
ljmp
fwait
pop
lahf
arpl
inc
das
fcmovne
sbb
cmp
push
jmp
mov
push
loope
lcall
scas
dec
lret
out
movsb
mov
rorl
movl
enter
cli
cli
xor
in
xchg
cmp
test
jae
dec
or
sti
pop
push
jo
lret
or
mov
sbb
insl
jo
add
pop
mov
add
in
rclb
mov
xchg
rorl
xchg
mov
pop
sbb
inc
cmc
call
jmp
test
test
ficoms
rcll
icebp
test
or
imul
jno
jge
sub
icebp
fisttpl
mov
int
mov
and
xchg
jecxz
mov
sahf
and
bound
inc
jnp
outsb
setl
stc
jmp
sbb
rolb
out
mov
push
mov
add
pop
mov
pusha
ds
xchg
inc
std
xor
xchg
mov
or
jmp
lods
imul
or
hlt
pop
popf
cmp
in
push
xchg
dec
pop
dec
or
mov
cli
out
push
mov
mov
and
idiv
enter
or
inc
xchg
ljmp
in
sarl
mov
rolb
xchg
mov
xchg
mov
dec
push
cmpsb
das
jl
enter
dec
jnp
pop
or
out
sub
cmc
rep
ljmp
and
add
adc
push
sbb
sbb
jne
mov
or
aaa
jne
mov
sub
addr16
sbb
mov
jns
push
test
insb
into
imul
mov
mov
or
movsb
mov
pop
jae
mov
shll
fsubr
loopne
xlat
or
stc
ret
addr16
roll
inc
add
push
popf
pushf
or
sub
cmpsl
pop
popl
dec
mov
ljmp
popa
out
mov
shl
mov
sbb
in
fbstp
xchg
push
mov
xor
pushf
push
lahf
sub
xchg
cmp
aam
or
mov
data16
push
test
movsb
mov
rorb
adc
mov
sbb
pop
pop
sbb
add
mov
inc
xor
dec
push
cmp
jae
in
roll
xor
push
xchg
cld
pop
out
ds
xor
mov
push
sahf
aam
inc
roll
cmp
add
les
repz
push
xor
xchg
push
aad
idivb
xchg
xor
decb
jl
pop
dec
push
sbb
sub
push
jno
in
adc
scas
into
cmp
xchg
lock
sti
shlb
loop
mov
test
outsb
mov
add
jb
mov
and
inc
outsb
ljmp
dec
or
rcll
leave
jg
dec
xchg
mov
cld
mov
cmp
not
call
pusha
mov
cmp
ficompl
stos
fs
gs
xor
push
dec
jae
mov
mov
shlb
and
add
test
cmp
nop
nop
stos
cli
xor
jb
stos
cli
xchg
in
sbb
jb
pop
pop
out
into
shll
add
xchg
jge
dec
ret
push
in
ljmp
push
out
dec
pushf
sar
push
mov
jae
out
cmp
insb
aaa
and
pushf
fcomi
daa
test
or
push
sbb
or
std
sub
sahf
xchg
mov
dec
or
movsl
xchg
cli
jmp
push
leave
icebp
pop
cltd
mov
fdivrs
out
xlat
or
add
mov
test
movsb
je
cltd
aad
add
mov
incb
cmpsl
cmp
insl
fs
inc
cmpsl
pop
es
push
and
movsb
xor
pushf
jle
insb
dec
mov
cs
rorl
mov
jne
add
lods
lcall
jmp
movsl
dec
js
push
adc
dec
lock
sub
jle
ret
ficoms
mov
iret
movsl
add
sbb
leave
add
jae
adc
mov
jge
xchg
or
cmp
and
add
clc
mov
xchg
pop
imul
cld
sbb
sub
cmpsl
push
xchg
scas
mov
icebp
push
push
dec
iret
daa
pop
sbb
shll
inc
bound
jo
iret
in
push
rolb
leave
test
pop
ret
test
divb
movsl
sti
xchg
xor
mov
pop
pop
movsl
call
lock
xlat
push
dec
call
dec
mov
jmp
test
sub
addr16
jmp
jo
jg
sbb
fwait
outsl
addb
inc
inc
cmp
loop
jmp
out
jns
lds
call
push
mov
pop
jle
dec
xlat
cmp
shlb
enter
xchg
je
int3
sbb
ljmp
mov
js
mov
sub
push
out
addb
push
repz
pop
sub
xchg
mul
push
mov
jb
adc
xchg
aad
pop
adc
das
addb
cmpb
test
pop
cwtl
push
xchg
aam
cmp
scas
dec
mov
adc
scas
mov
xchg
flds
adcb
sbbb
jmp
shlb
and
fildll
sub
sub
mov
dec
rclb
xor
loop
enter
adc
adc
clc
xchg
sbb
out
mov
lret
jbe
in
cmpsb
fstpl
dec
mov
mov
stc
xchg
test
test
or
iret
cmpsl
xchg
imul
fmuls
jb
dec
or
xchg
cwtl
hlt
add
cmp
adc
adc
adc
rclb
cmp
mov
rcrl
int
xchg
mov
cmp
fdiv
cmpsb
jmp
loope
sbb
xchg
insl
test
jmp
adc
lods
popf
test
xor
xchg
insb
pop
mov
dec
sub
loope
imul
cmp
mov
mov
jge,pn
add
xor
sub
stc
pushl
cmp
cmp
push
lea
jge
push
lea
jae
pushf
push
mov
lea
jmp
sbb
imul
dec
pinsrw
jb
jb
insb
mov
out
frstor
cmp
xchg
xor
push
insl
arpl
jne
jne
xor
push
pusha
xlat
nop
pushf
jbe
icebp
sub
fistl
imulb
xor
pusha
adc
jae
dec
loope
push
movsl
fsub
test
or
int
push
mov
incb
mov
aad
ror
mov
jnp
mov
mov
insb
jo
push
pushf
push
pushf
movl
pushf
push
call
pop
arpl
mov
adc
cld
cmp
clc
xor
cmp
mov
cli
repz
loop
adc
and
sahf
mov
aad
push
inc
or
outsl
rcrl
aas
inc
orb
add
dec
or
inc
jl
hlt
aaa
ds
mov
xor
lea
add
nop
inc
add
sub
int
out
test
shlb
add
lea
imul
cli
enter
or
ret
cmpsb
add
jecxz
dec
jle
in
das
bound
sub
mov
stc
test
repnz
call
cltd
mov
mov
mov
popa
lcall
cmc
shll
into
dec
mov
mov
call
mov
jge
out
icebp
and
mov
rcrl
outsl
sbb
repz
jmp
leave
shrl
pop
and
sub
adc
into
cmpsb
dec
cmp
sahf
push
insb
adc
sub
movsb
xlat
pop
inc
xorb
cli
and
lea
jae
push
pusha
pushf
push
lea
jmp
xchg
jnp
mov
fldt
mov
addr16
push
xchg
into
or
cmp
call
std
xchg
fcompl
add
pop
mov
jge
push
sub
jle
icebp
stos
cmp
enter
or
or
sub
roll
or
jp
add
dec
int
adc
mov
jae
pop
add
pop
mov
inc
addl
xchg
mov
lcall
xor
movl
push
movb
pushf
push
lea
jmp
sbb
mov
rorl
jae,pt
outsb
mov
movsb
push
jp
mov
in
or
ret
mov
xchg
in
cmp
imul
sbb
jmp
ret
mov
movsb
xchg
psubsw
popa
ljmp
jle
push
mov
setg
jns
or
push
movsb
and
je
and
xchg
or
repz
xorb
add
flds
xchg
negl
pop
out
sub
lahf
pop
xchg
push
cltd
push
cltd
aad
or
sbb
pop
rol
lcall
xchg
ja
div
mov
or
ja
push
adc
xor
insb
outsb
sbb
pop
repz
and
idivb
shrb
adc
std
es
rcll
mov
into
adc
jnp
pusha
mov
call
je
xchg
bound
test
in
push
cwtl
pop
jnp
add
fists
mov
add
rorb
mov
rcrl
lods
repz
ret
cwtl
out
adc
shll
fsubs
je
aas
je
dec
jae
or
push
leave
dec
pop
aas
pop
sub
pop
in
add
ret
push
push
mov
adc
jo
jmp
ret
in
fimull
jb
popa
sahf
xlat
or
ret
mov
movsb
add
enter
pusha
inc
cmc
jmp
or
shl
xor
and
mov
pop
or
popa
pop
push
fisubs
dec
loop
xchg
mov
inc
ja
xchg
push
xlat
fwait
pusha
pop
cmpl
xor
mov
into
mov
je
push
sti
pop
sbb
xchg
nop
dec
outsb
dec
ljmp
repz
jne
ss
push
push
pop
pop
xchg
int
push
mov
and
mov
pop
lods
add
and
mov
lea
jo
jmp
jmp
push
xchg
mov
mov
push
dec
or
clc
xor
jecxz
sbb
pop
fwait
jnp
add
rolb
into
and
xlat
sbb
fucom
xchg
jg
mov
jl
aas
mov
int
add
sarl
cmp
pop
jmp
popa
into
sbb
xchg
cld
sbb
or
test
mov
mov
pop
icebp
mov
stos
xchg
sub
sub
mov
cmp
sub
or
add
jg
xchg
mov
test
pop
mov
enter
fdivs
je
jle
jmp
stc
jnp
add
cmpsl
cmp
cmpsb
adc
dec
mov
pop
int3
xchg
pop
push
aam
in
mov
out
or
aad
cs
inc
iret
inc
inc
daa
jbe
xor
insb
add
test
stc
inc
enter
xchg
and
inc
cmp
ss
push
pop
repnz
fnstcw
outsb
scas
imul
rorl
mov
xor
aad
call
add
cmpsb
test
jl
and
cmpsl
in
repnz
adc
mov
call
xchg
adc
les
loopne
xor
sub
mov
push
fs
stos
setae
inc
add
cmp
xor
pop
in
jae,pt
push
cmp
fdivr
test
and
ljmp
ret
fidivrl
sbb
mov
jbe
movsl
movsl
pusha
outsl
and
pop
mov
jecxz
xchg
mov
mov
mov
or
xchg
out
jmp
lea
jb
bt
cmpb
jmp
jmp
gs
jne
push
out
cmc
outsl
scas
push
mov
or
xchg
jno
push
mov
ss
out
adc
int
shll
sub
repnz
push
cmpsb
mov
lahf
cmp
ficoml
in
fcomps
or
imul
add
jp
lock
je
sbb
bound
sbb
std
cmp
ds
mov
push
stc
xor
bound
cmpsl
ljmp
mov
pushf
lea
jne
mov
call
lea
movsbw
mov
call
xor
movsb
sub
clc
imul
pushf
push
adc
xchg
les
out
adc
repnz
popa
mov
in
jecxz
loope
inc
sub
lcall
push
mov
out
mov
xlat
outsl
div
stos
dec
pop
outsl
cmp
jo
adc
lock
lods
push
jns
adc
xlat
add
mov
pop
rorb
mov
fistpl
pop
xchg
mov
dec
or
nop
cmp
popa
jb
or
adc
jecxz
int3
xchg
dec
pop
sar
jb
sub
int3
imul
mov
jno
mov
rol
fcoms
daa
movd
xlat
xchg
xchg
cld
push
sahf
ss
mov
mov
add
adc
sbb
sahf
mov
pop
fmull
leave
out
daa
jno
or
sbb
lds
call
sahf
pop
lahf
pop
sahf
xor
repz
cmpl
fs
and
and
imul
jecxz
add
mov
and
pop
pusha
adc
push
jmp
xchg
jb
std
jmp
or
mov
jg
dec
lea
pop
mov
pop
cwtl
mov
pop
inc
ret
add
arpl
cltd
lcall
push
inc
or
ret
mov
clc
mov
xchg
mov
fs
call
inc
outsl
xor
sahf
push
xchg
test
xchg
pop
movsb
out
jmp
pop
cwtl
ror
adc
rol
inc
dec
push
nop
sbb
scas
mov
test
inc
lds
inc
jns
insb
jnp
push
notl
and
lds
andb
repnz
sbb
xchg
cld
xorl
decb
lds
pop
pop
pushf
ljmp
imul
add
mov
push
rol
push
lds
pop
popf
rcll
and
xchg
cmc
lea
jne
push
pushf
pushf
lea
jmp
test
cmpsl
cmp
sub
test
mov
lock
dec
aaa
push
adc
add
bnd
dec
stos
mov
mov
and
jae
pop
fstps
push
mov
cld
dec
inc
pop
cld
mov
dec
cmpsb
pop
ret
lcall
cld
inc
cmp
fmuls
dec
mov
cltd
loop
push
xchg
cmpsb
xchg
mov
push
adc
pusha
mov
pushf
push
mov
pushf
lea
jmp
es
jmp
cmp
adc
adc
sub
test
idivb
jns
push
sub
fcmovnbe
push
ja
int
or
sbb
push
xchg
aad
movsb
push
stos
sub
aam
daa
dec
nop
ror
dec
aam
and
hlt
int
jle
andl
iret
insb
sti
loop
aam
adc
test
sub
mov
pop
stos
add
call
lcall
push
xchg
rcrb
mov
cmpsb
std
push
lret
addr16
fcoms
mov
xchg
out
lcall
dec
adc
imul
fsts
jp
cmpsl
jo
test
loope
mov
pop
push
and
stc
pop
dec
and
cli
ret
add
jb
or
rorl
orb
or
mov
sub
fs
or
inc
or
mov
push
push
mov
std
cmp
jle
inc
and
xchg
iret
inc
in
dec
cmp
les
or
jns
nop
push
nop
hlt
fwait
mov
dec
iret
inc
es
sbb
in
insl
sti
repnz
xor
aad
mov
test
pusha
pop
sbb
ret
xchg
and
idiv
or
movsl
daa
dec
clc
mov
and
outsl
sti
sbb
frstor
stos
dec
push
push
push
xchg
push
adc
sub
xor
stc
xchg
mov
cmpsl
notb
iret
add
leave
icebp
subb
sub
inc
mov
js
and
mov
push
jg
inc
push
jp
jg
ret
mov
jmp
sbb
sub
imul
sub
mov
icebp
pop
cmp
adc
fcompl
fdivr
xchg
mov
adc
inc
sbb
dec
push
dec
pushl
repnz
pop
inc
inc
dec
xor
cs
insb
add
mov
fidivs
push
mov
jg
stc
mov
test
leave
or
lret
mov
mov
rorb
mov
inc
pop
push
cmpsb
mov
scas
sub
mov
lret
sub
mov
daa
decb
or
test
clc
mov
out
repz
push
and
and
pop
int3
int
lock
lret
lahf
scas
mov
sbb
popf
mov
dec
xchg
pop
xchg
mov
test
cmp
sbb
jmp
jp
pop
rcll
test
adcb
aad
in
push
xchg
ficompl
add
inc
test
aad
pusha
mov
je
cmpsl
imul
test
ja
or
mov
inc
xadd
aad
mov
loope
mov
add
jle
dec
in
sub
jmp
adc
out
loop
push
enter
aam
pop
mov
stos
insl
mov
shrl
sub
push
push
adc
roll
ret
rcll
and
mov
or
push
cmpsl
or
push
lret
subl
mov
or
cmp
cmpsl
lcall
loop
leave
rolb
repz
fdivs
mov
lret
adc
lds
loopne
mov
mov
mov
cmp
ficompl
stos
jmp
mov
cmp
mov
out
and
pop
push
sbb
leave
jmp
int
push
push
loop
cltd
in
xorb
pop
xchg
rcll
cmp
jnp
or
jne
pusha
lea
jmp
test
mov
cmp
add
push
shll
mov
or
push
out
pop
mov
mov
and
fisttps
sbb
lret
mul
and
push
pusha
pop
pop
test
mov
mov
lret
push
lahf
mov
fs
adc
je
pop
pop
or
bound
xchg
xor
addr16
inc
push
fmuls
push
call
shrl
inc
add
mov
aaa
idivl
mov
movsb
mov
lea
jb
bt
cmp
pusha
push
push
lea
jae
cmp
clc
mov
mov
bt
mov
bswap
dec
clc
pushf
mov
cmc
jmp
icebp
pop
rcl
movsl
aad
mov
cmpsl
out
fisubs
pop
pop
dec
pop
dec
iret
nop
outsb
xchg
xlat
mov
push
cwtl
pop
mov
push
pop
pop
shll
xor
loope
ret
mov
nop
das
xor
test
fiadds
add
fldln2
movsb
adc
jo
jg
xchg
ficoms
enter
and
out
mov
adc
es
jnp
push
bsr
dec
mov
sub
xor
seta
push
pushf
xchg
xchg
test
not
shld
push
adc
push
shr
clc
push
add
rcr
bt
lea
mov
bts
inc
mov
xor
stc
mov
push
clc
pushl
pushf
or
pushf
call
shlb
mov
mov
dec
or
mov
ds
cld
in
roll
cmp
pop
lret
test
fwait
pop
out
outsl
push
stc
push
mov
xchg
xor
xorb
or
sub
orb
outsb
fisttps
cwtl
cmp
ret
xor
xor
cmpsl
push
xchg
pushf
enter
xorb
cmpl
push
ss
add
mov
dec
repz
and
rorb
cmpsb
jo
ret
mov
xor
movsb
jl
mov
popa
push
mov
outsb
jge
xor
push
movsb
rcl
push
shlb
mov
or
inc
jge
or
ja
add
dec
jecxz
insb
repnz
lcall
push
out
ficompl
jge
test
repnz
out
pop
xchg
mov
xchg
push
mov
es
leave
dec
out
sbb
or
gs
insl
mov
lret
mov
mov
push
into
mov
cmp
fadd
push
xorb
jge
mov
pop
aaa
sub
or
ret
xor
pusha
addb
jle
inc
xchg
push
sbb
mov
sbb
cli
decl
inc
add
pop
adc
push
dec
or
popa
psadbw
inc
or
out
inc
int3
mov
mov
insl
sbb
push
cwtl
dec
xchg
push
pop
pop
in
mov
push
iret
popf
lea
jne
btc
lahf
xor
sub
mov
rcr
push
cwtl
mov
and
adc
ror
add
setae
call
push
jmp
in
loopne
popf
lahf
xor
jmp
addr16
dec
lret
jae
and
push
and
sbbb
mov
adc
mull
and
inc
xor
dec
outsb
loope
jb
scas
mov
mov
lea
pop
pop
sarl
push
or
cld
popf
xor
les
test
sahf
push
lret
push
lret
les
arpl
or
sub
clc
cmp
call
sub
jns
call
loopne
mov
sub
and
cmpsl
in
movsb
sbb
popf
fwait
test
mov
ds
sub
fcmovu
inc
sahf
lcall
jecxz
mov
jne
pop
and
mov
sbb
xor
mov
pop
lods
fldenv
mov
cli
or
fisubrs
adc
adc
lea
dec
fcmovnb
pop
sbb
frstor
in
push
or
pop
xchg
mov
mov
pop
mov
in
xchg
pop
mov
cmpsl
out
xor
push
aad
cmc
sub
insl
jne
xor
adc
aaa
orl
or
aas
xor
pop
jo
mov
fists
out
xchg
decb
stc
fists
jecxz
xchg
pop
jns
shrb
or
jnp
lret
and
xchg
cs
jecxz
xchg
es
xchg
mov
push
call
inc
xor
cmp
mov
xchg
mov
sbb
push
or
pusha
pushl
lea
je
or
sub
neg
jmp
int3
sbb
test
and
cmp
mov
stos
in
insb
and
lret
dec
fiaddl
push
movd
out
or
bound
inc
ds
mov
outsb
xor
or
mov
mov
out
test
enter
outsb
xor
ds
cmpsl
popf
and
dec
fs
push
sbb
int3
js
sbb
and
mov
push
adc
cli
lods
ljmp
mov
shl
mov
cld
xor
mov
xchg
pop
cld
mov
fsubl
adc
add
roll
and
js
add
movb
mov
cmpsb
movsb
mov
lea
fldl2t
or
je
inc
or
push
adc
flds
lds
jb
repz
out
xor
and
mov
xchg
add
bound
ss
test
sbb
sbb
push
dec
jp
out
das
sahf
xchg
mov
adc
jl
orb
push
xchg
pop
fwait
push
addb
jne
xchg
dec
pop
and
popa
xchg
mov
jae
lcall
mov
mov
popa
jecxz
or
sbbb
sbb
or
jno
mov
rep
sub
loop
mov
mov
js
imulb
mov
add
or
push
and
loop
fadds
sub
mov
lds
test
cmp
je
scas
les
and
xchg
enter
ljmp
decb
xor
jge
xchg
pop
pop
mov
shr
inc
lret
aaa
add
fstl
adc
loope
mov
xor
insl
sub
xchg
movsl
inc
bound
add
xorb
push
dec
std
xchg
mov
daa
call
add
xor
lea
je
not
add
btc
rcr
ror
sub
xadd
test
pusha
or
shr
rol
movsbw
bt
test
mov
bt
pushl
add
and
bswap
add
shr
mov
bt
clc
shr
mov
cmp
jmp
pushl
popl
pushf
push
mov
pushf
lea
jmp
jmp
mov
add
push
mov
call
call
cmc
jmp
mov
pushl
pushl
ret
cmc
sub
mov
mov
call
jmp
not
jmp
sub
jmp
push
test
cmp
call
clc
stc
call
shr
mov
call
pushf
mov
cbtw
movw
push
call
sar
sbb
pusha
mov
and
pusha
cmc
mov
mov
mov
pushl
sub
test
shl
jmp
lea
mov
mov
movsbw
mov
pushl
call
shrd
shr
mov
call
btc
aam
bts
mov
or
mov
cmp
add
jmp
call
add
call
pushf
mov
pushf
pushf
push
lea
jmp
sbb
sar
rcr
mov
test
pusha
test
call
pusha
mov
push
push
lea
jmp
xchg
push
movsbw
pushf
popl
pushl
mov
movsbw
adc
xchg
mov
dec
mov
neg
bt
pop
pushl
popl
shl
adc
pushf
movl
stc
movzbl
mov
mov
bswap
rcr
add
shrd
xor
shr
dec
lea
cmp
mov
cmp
sub
pusha
push
lea
jmp
add
mov
call
movb
sub
push
pushf
mov
pushf
lea
jmp
jmp
lea
jne
test
pusha
sub
call
not
cwtl
shld
lea
stc
jmp
mov
push
lea
jmp
pushf
pushf
xchg
call
add
cmp
xor
jmp
call
mov
pushf
pushf
pushf
pushl
ret
popl
push
pushf
movl
pushf
lea
jmp
mov
mov
movl
jmp
not
xchg
pushf
mov
pushl
pop
xchg
lea
mov
call
bt
cmp
jmp
push
jmp
push
dec
call
xchg
push
not
mov
movsbw
jmp
jmp
sar
mov
test
stc
clc
cmc
add
pushf
pushf
call
pushf
jmp
div
jmp
cwtl
mov
jmp
pusha
pushf
mov
xchg
push
movsbw
xchg
jmp
shr
lea
call
mov
push
mov
movsbw
pushf
jmp
push
pushf
pushf
popl
pushf
mov
inc
bt
push
movzbw
rcl
cmp
push
lea
bt
pushl
test
shl
push
movsbw
clc
mov
mov
xor
sbb
xor
bswap
inc
pusha
pushf
bswap
add
call
rep
adc
btr
push
mov
jmp
movb
test
sub
stc
pushf
sub
js
cmc
shl
call
pusha
pushf
mov
push
pusha
pushf
pushl
ret
movb
jmp
mov
pushf
mov
mov
pushf
pushl
lea
jmp
jmp
add
push
mov
lea
jmp
push
call
xchg
mov
mov
mov
pusha
sub
push
shr
pushf
jmp
shr
jmp
pushf
clc
pushl
popl
test
jmp
not
bt
not
pusha
test
cmc
mov
and
call
sub
btr
neg
xadd
mov
shl
bswap
mov
shrd
not
or
bsf
add
add
mov
movsbw
shld
add
bts
add
jmp
push
mov
movw
mov
mov
pushf
lea
jns
pushf
jmp
pushf
popl
push
push
call
mov
movb
mov
pushl
lea
jmp
pusha
pushf
mov
not
mov
bsr
xchg
stc
movzbw
pushl
popl
lea
sub
movl
shrd
or
movw
mov
call
setne
movsbw
mov
movb
pushl
pushf
mov
pusha
pushl
pushf
mov
mov
mov
pushf
pushl
pushf
lea
jmp
push
pushl
popl
pushf
push
lea
jmp
jmp
call
cwtl
rol
aaa
btc
mov
stc
cmp
btc
neg
mov
sar
mov
clc
jmp
pushf
call
cmc
bt
cwtl
mov
cmp
clc
pusha
bt
add
pushf
movb
movb
mov
mov
mov
mov
pusha
lea
jmp
pushf
mov
push
push
push
pushl
lea
jmp
test
cmp
mov
sub
pusha
mov
pushf
pushf
lea
jmp
mov
mov
pushf
push
jmp
ror
mov
shr
rol
bsr
add
bsr
shl
sub
sub
dec
jmp
mov
mov
pusha
lea
jmp
mov
lea
mov
movsbw
jmp
add
push
not
clc
cmc
add
call
bts
rol
not
btc
rol
sbb
and
adc
add
shl
and
not
stc
mov
test
stc
sub
push
call
ror
lea
neg
adc
mov
mov
or
add
call
jmp
pushl
push
mov
mov
pushf
mov
pushl
push
pushl
lea
jge
pushf
jns
popl
pusha
lea
jmp
call
movw
inc
lea
jae
pushf
decl
pushf
mov
call
btc
bsf
mov
sbb
mov
movzbw
mov
test
bt
pushl
popl
xadd
bts
movl
movw
bt
bts
cmc
mov
dec
bswap
sub
add
bsr
dec
not
xor
movsbw
btc
lea
pusha
sub
pusha
push
pushf
push
lea
jmp
movzbw
sar
clc
shrd
mov
jl
test
mov
push
mov
pushf
stc
push
sub
pusha
pushf
mov
call
jmp
jmp
movzbw
bswap
mov
jmp
call
jmp
pushf
mov
jmp
xchg
movsbl
pushf
mov
not
push
bswap
push
lea
xchg
call
pop
lea
jp
lea
movzbl
inc
mov
call
dec
mov
pushl
cmc
jmp
cwtl
lea
call
mov
pushl
lea
jmp
xchg
movsbl
push
mov
movsbw
push
not
push
not
call
pushf
not
mov
jmp
call
pushf
mov
movzbw
pushf
pusha
movw
mov
movsbl
xchg
pusha
mov
call
pop
mov
call
mov
pushf
lea
jmp
sub
clc
cwtl
clc
pushf
sub
push
mov
mov
movw
mov
lea
jmp
pop
bsr
xor
bswap
rol
stc
jmp
movl
mov
mov
mov
jmp
pushl
pushl
popl
movb
pushl
pushf
lea
jmp
jmp
bt
neg
call
push
jmp
pusha
push
mov
mov
xchg
movw
xchg
mov
pushf
mov
mov
xchg
movzbw
xchg
bswap
mov
lea
movsbw
mov
pushf
popl
ror
stc
inc
cmc
mov
bsr
btc
mov
shl
bsf
pusha
adc
mov
shl
stc
pop
pushl
popl
cmp
and
movl
cmp
sbb
rcr
mov
sub
sub
add
xor
bswap
add
movzbl
neg
add
cmp
sar
pushf
bsf
xor
movsbw
sub
rcl
shrd
lea
clc
push
cmp
sub
pushf
lea
jmp
call
sub
movb
jmp
daa
mov
mov
mov
clc
sub
test
jmp
mov
cmc
bswap
shl
sar
add
rol
rol
btc
pushl
xor
ror
bts
sar
pushl
lea
bt
cmc
bt
sub
pusha
lea
jmp
mov
lea
mov
mov
xchg
bswap
lea
mov
pushf
popl
mov
btc
push
bsf
jmp
not
mov
push
jmp
pushf
pushl
mov
lea
jmp
mov
jmp
xchg
mov
not
lea
xchg
call
call
xor
btr
lea
call
pushf
call
pushf
pushf
pushf
pushf
xchg
pushf
call
jmp
movl
jmp
jmp
sete
mov
pusha
call
aad
rcr
aad
movzww
cmp
test
stc
xchg
push
sub
pusha
pusha
jmp
pushf
popl
call
jmp
clc
sub
pusha
lea
jmp
lea
cmp
push
test
sub
pushf
push
lea
jmp
jmp
pushf
push
pushl
popl
push
pushf
lea
jmp
call
pushf
movzbw
call
movb
mov
jmp
divl
push
push
call
movsbl
movzbl
lea
dec
movzbw
mov
pushf
dec
pusha
add
pushl
call
jmp
call
bswap
mov
lea
xchg
bt
mov
clc
cmc
push
mov
clc
cmp
movb
cmc
add
pushf
pushf
pusha
bt
shrd
jmp
mov
sub
cmp
not
jmp
jmp
movb
jmp
call
inc
call
test
shl
lea
bt
movb
bt
cmc
sub
pushf
lea
jmp
mov
xchg
bswap
push
xchg
pushf
popl
mov
mov
mov
push
mov
call
pushf
popl
bswap
pusha
cmp
adc
mov
sar
lea
mov
dec
xor
mov
rol
btc
pushl
popl
lea
adc
rcr
pushf
movl
shrd
xadd
inc
call
pushf
popl
pushl
pushl
popl
mov
push
pushf
movb
lea
jmp
call
push
dec
test
cmc
push
add
pusha
pushf
mov
pushf
movb
pushf
pushl
ret
jmp
or
mov
cmp
test
push
xor
push
inc
pusha
decl
call
pusha
push
pusha
xchg
movzbw
mov
xchg
movsbw
xchg
mov
bswap
lea
mov
xchg
push
mov
movsbw
movzbl
movzbw
xchg
pushf
popl
stc
inc
btr
movzbw
mov
mov
shr
mov
pop
or
mov
bsr
xor
pushl
popl
shl
movl
jmp
mov
call
pusha
lea
jne
pusha
movw
call
push
rcl
xchg
xchg
pushl
sbb
jmp
cmc
sub
test
xchg
jmp
neg
test
mov
pusha
bt
add
mov
pushf
popl
pushf
pushf
pushl
popl
mov
mov
mov
movw
lea
jmp
and
and
mov
ror
ror
sbb
add
dec
dec
call
push
call
pop
movsbw
mov
pop
lea
movzbl
mov
bswap
movsbl
pushf
mov
movsbw
movsbw
movsbl
lea
mov
not
pushf
movw
movzbw
pushf
popl
btr
mov
rcl
sub
mov
inc
stc
bswap
mov
adc
js
shr
pushl
rcr
push
movzbw
movsbw
mov
add
btc
movsbw
rcl
bswap
call
xchg
mov
mov
push
dec
dec
mov
test
bt
clc
sub
cmp
bt
test
stc
shr
pushf
mov
call
pusha
xchg
mov
bswap
movsbl
mov
lea
bswap
mov
call
pushl
push
mov
call
bt
jmp
sub
pusha
jmp
jmp
mov
lea
movzbw
jmp
jmp
mov
push
movb
lea
jmp
pushf
push
mov
jmp
mov
movw
pusha
lea
jmp
call
pusha
mov
setl
shl
cmp
mov
test
sub
cmc
shl
jmp
lea
jne
call
pusha
setae
mov
setno
bswap
movw
setb
mov
pushf
jmp
movzbw
mov
not
mov
bswap
xchg
xchg
mov
not
movsbw
call
pushl
popl
push
push
pushf
mov
lea
jmp
pusha
sub
push
mov
jmp
mov
mov
mov
movb
pusha
movw
pusha
lea
jmp
and
movw
pushf
popl
jmp
jmp
bts
add
shld
push
xor
jmp
shr
shl
dec
xor
shld
dec
shrd
movl
neg
movzbw
pop
add
inc
pushf
bswap
pop
add
adc
rcl
sar
clc
movzbl
test
pusha
clc
clc
mov
cmc
movb
or
jmp
pushl
movb
mov
pushf
movb
pushl
ret
shrd
or
test
pushl
clc
ror
jmp
movzbw
mov
not
movzbl
lea
dec
pushf
add
call
inc
bswap
shld
call
and
mov
ror
clc
not
xor
mov
push
pushf
jmp
jmp
pushf
mov
pushf
push
pusha
mov
pushl
mov
call
mov
mov
mov
pushl
push
push
jmp
pop
push
jmp
xchg
mov
call
pushf
popl
jmp
pushf
add
jmp
movzbl
lea
movzbw
pop
mov
jmp
rcr
rol
bts
setle
pusha
add
setns
shl
neg
sar
add
jmp
cmc
mov
not
btr
bswap
cmp
rcr
adc
movzbw
add
rcr
xor
inc
inc
bsf
shl
mov
push
sub
push
pusha
pushf
lea
jmp
movzbw
pusha
cmc
rcr
not
lea
ror
btr
btc
rol
adc
add
shr
and
dec
bts
rcl
sar
mov
call
not
sub
rol
mov
or
cmc
pushl
popl
clc
bsr
stc
xor
movl
bswap
mov
rcl
ror
bswap
rol
bt
add
call
lea
jne
call
mov
movb
jmp
call
movb
pusha
pushl
popl
pushl
pushl
push
push
lea
jmp
daa
aas
cmc
mov
sbb
not
mov
pushl
cmc
stc
add
pusha
mov
pushf
movb
lea
jmp
sbb
pushl
popl
or
or
movsbw
shl
movl
ror
stc
mov
xor
bswap
cmp
jmp
call
cmpl
call
mov
not
not
push
call
mov
mov
push
pusha
lea
movl
jmp
lea
jne
pusha
jmp
stc
das
not
xor
mov
shld
mov
cmp
add
pushf
call
shl
neg
pushf
mov
push
clc
lea
jle
cmp
add
pushf
stc
clc
test
add
movb
cmc
rol
jmp
jmp
pusha
xchg
pushf
call
call
shl
clc
cmp
push
shr
call
jmp
bsr
or
mov
jmp
clc
jmp
push
jmp
clc
mov
shl
movzbl
mov
pusha
add
push
call
call
xchg
xchg
movsbw
mov
not
call
setb
pushl
movzbw
push
shrd
xadd
movl
bts
mov
shld
bswap
mov
mov
add
xor
xor
xor
or
shr
mov
shl
rcl
sub
stc
inc
mov
add
mov
jmp
movl
pushf
popl
jmp
pushl
popl
pushf
lea
jmp
stc
sub
test
mov
push
pusha
add
cmp
cmc
xor
mov
neg
mov
pusha
dec
clc
jmp
pushf
popl
push
pushl
popl
push
lea
jmp
pushf
pushf
jmp
sbb
sar
mov
cmc
stc
test
cmp
sub
cmp
push
add
movb
call
add
and
mov
cmc
cmp
sub
add
setae
pusha
dec
dec
rcl
lea
rol
movzbw
rcl
add
clc
bts
clc
sbb
neg
pushf
adc
shl
add
pushf
movsbw
dec
movzbl
push
pushf
call
call
add
cmc
cmc
clc
pusha
shld
call
push
bswap
lea
xchg
jmp
pusha
movb
mov
push
mov
movb
pushf
popl
pushf
push
jmp
shl
btc
inc
add
rcl
add
pushf
xor
sar
movzbw
pop
lea
jmp
mov
lea
push
xchg
movsbw
xchg
jmp
push
pushf
xchg
lea
lea
pusha
movw
mov
jmp
jmp
stc
setbe
test
adc
mov
push
jmp
shrd
adc
dec
mov
neg
shl
bswap
clc
push
call
call
movzbw
mov
mov
pop
pushf
shl
std
aam
mov
bt
btc
movb
setge
mov
cmc
lea
pop
mov
std
mov
stc
sub
pushl
popf
pushf
pusha
push
mov
lea
not
movzbl
mov
movzbl
pop
xchg
mov
pop
mov
mov
not
movzbw
bswap
mov
movb
pushl
ret
pusha
pushf
popl
pusha
pushl
popl
mov
pushl
lea
jmp
rcr
mov
cmp
add
pushf
push
mov
mov
pushf
pusha
mov
pushf
pushf
pushf
mov
lea
jmp
xchg
pushf
pusha
pushf
mov
movzbw
lea
mov
call
jmp
add
add
push
mov
mov
pusha
jmp
mov
push
lea
jmp
call
push
sub
cmc
bt
cmc
stc
cwtl
stc
test
stc
sub
pushf
pushl
mov
movb
push
pushf
movb
lea
jmp
cmc
cmc
add
pushf
cmp
cmp
clc
sub
jmp
shl
push
neg
sbb
btc
bsf
mov
test
bt
bswap
shl
test
movzbw
bt
add
or
rcl
xor
sar
mov
stc
pushf
sub
pushf
push
lea
jmp
inc
stc
bt
add
jmp
jmp
dec
push
lea
jmp
mov
movw
xchg
bswap
not
mov
xchg
push
bswap
push
jmp
sub
neg
jmp
mov
call
test
movb
neg
pushf
add
call
pusha
jmp
call
movw
jmp
mov
push
pushf
popl
bswap
mov
call
shl
mov
test
pusha
jmp
pusha
pushl
mov
movw
lea
jmp
btc
bsr
btc
mov
cmc
test
cmp
call
call
jmp
jmp
shr
aas
push
aas
mov
push
test
sub
call
dec
cmp
cmp
clc
add
pushl
mov
mov
pushf
pusha
mov
push
pushl
ret
and
movb
mov
jmp
pushf
mov
push
pushf
popl
movzbl
mov
push
pusha
mov
std
movzbw
mov
lea
pusha
cld
mov
movzbw
pop
movl
mov
push
std
cld
jmp
bswap
clc
pushl
jmp
test
pushf
clc
shl
pushf
lea
jbe
pushf
push
mov
pushf
pushf
popl
pushl
call
pushl
popl
mov
movb
lea
jmp
add
pushf
mov
mov
pushf
pushf
movb
lea
jmp
pusha
movl
movw
pushf
popl
call
sbb
and
xor
mov
sub
add
not
pusha
jmp
add
push
push
call
clc
jmp
push
movl
push
pusha
xchg
bswap
pusha
pop
mov
lea
jo
push
mov
mov
push
call
pushf
pushl
cmc
sub
pusha
movw
pushf
lea
jmp
movzbw
mov
clc
cmc
pusha
sub
call
btc
mov
sbb
movsbw
btr
call
call
pushl
popl
push
mov
lea
jmp
mov
setl
bswap
mov
pushf
lea
cpuid
clc
sub
jmp
mov
pushf
mov
pusha
pushf
lea
jmp
rol
or
adc
add
test
rcr
push
neg
rol
add
lea
jb
mov
movzbl
not
mov
push
pusha
dec
call
pushl
popl
mov
pushf
movb
lea
jmp
jmp
jmp
push
pushf
mov
push
pushf
lea
jmp
cmp
pushf
xchg
test
sub
stc
stc
jmp
mov
call
add
test
clc
pusha
neg
pushf
stc
pushf
add
jmp
jmp
pushf
sub
push
pusha
lea
jmp
movzbl
setl
mov
pushl
mov
lea
jmp
push
xchg
pusha
pushf
pusha
lea
mov
not
pushl
not
mov
mov
movsbw
pushl
pushf
setns
mov
xchg
not
pushf
pushf
mov
xchg
pushf
popl
rcr
xadd
setbe
mov
shl
mov
bt
rcr
cmp
sub
jne
push
neg
or
pusha
inc
pushl
popl
shl
pop
bsr
shl
movl
inc
btr
movzbw
not
mov
pop
neg
bsf
cmc
bswap
pushf
shld
add
clc
shl
neg
movzbl
xor
and
shld
dec
lea
add
bt
xchg
sub
push
shr
rcr
stc
lea
sub
cmp
mov
movzbw
or
lea
add
rcl
je
bt
rol
mov
lea
add
movzbw
pusha
pusha
dec
bts
bt
bts
rol
setp
adc
clc
bts
add
add
neg
add
pop
add
dec
pushf
inc
push
movzbl
dec
inc
pop
mov
movl
mov
call
jmp
call
clc
push
stc
jo
dec
seto
pushl
xchg
rcr
stc
push
bsf
mov
rol
bswap
stc
add
mov
xor
jmp
bsr
test
push
bsr
jmp
not
movb
sub
clc
xchg
cmc
pushl
call
pushl
pushf
pushl
popl
mov
pushl
push
movb
lea
jmp
mov
pusha
lea
jbe
mov
pushf
lea
jmp
pusha
pushf
lea
ja
cltd
rcl
cmc
aaa
mov
das
bsf
pusha
lahf
lea
sub
sub
rcr
pushf
sar
dec
lea
bts
and
inc
sub
movsbw
jmp
mov
pushf
pushl
pushl
lea
jmp
jmp
or
cmp
inc
xor
btr
lea
stc
sub
push
lea
jmp
and
lea
jl
pushf
pusha
pushf
popl
movb
lea
jp
push
pushl
popl
pusha
lea
jmp
movl
jmp
dec
push
stc
pusha
jmp
mov
mov
mov
movb
movw
lea
jmp
pusha
mov
pushf
popl
jmp
call
call
dec
cmc
bt
add
lea
jae
push
push
pushl
ret
add
pushf
mov
push
pushf
popl
pushf
call
pushf
pushf
mov
pushf
mov
pushf
mov
movb
movb
lea
jmp
decl
call
pushf
add
pushf
pushf
pushf
mov
mov
movw
pushl
pushf
pushl
ret
jmp
pushl
popl
pushf
push
mov
lea
jmp
jmp
pusha
push
movzbw
pushf
popl
cmc
mov
cmp
xadd
mov
shrd
shrd
test
adc
mov
add
adc
pushl
popl
movw
shrd
not
movl
lea
or
sub
sbb
mov
sub
clc
bswap
adc
bsr
bsf
add
rcr
bt
bt
push
xor
clc
lea
stc
cmp
cmp
sub
push
lea
jmp
pop
bsr
mov
cld
cmc
std
pushf
pushl
popf
movw
lea
jmp
pushl
push
mov
push
lea
jmp
setl
call
movb
mov
jmp
pushf
cmp
cmc
add
cmp
add
cmc
pushf
pushl
bt
rol
cmp
pushf
add
pusha
add
bt
mov
test
jmp
mov
mov
movsbw
call
cmp
push
add
jmp
xor
shr
mov
mov
mov
pusha
push
sub
stc
call
call
mov
mov
push
movb
pushf
lea
jmp
pusha
mov
push
mov
pusha
pushf
popl
mov
pushl
push
pushl
popl
push
lea
jmp
stc
cmp
sub
jmp
pusha
mov
bt
movw
jmp
movb
mov
movb
movb
mov
lea
jmp
call
mov
inc
shl
pusha
mov
pop
xor
pushl
popl
test
movzbw
movl
rcl
not
dec
mov
or
bts
bswap
btr
shrd
add
ror
xor
push
jmp
mov
jmp
pushf
push
mov
pusha
call
movb
mov
mov
jmp
lea
jns
pusha
mov
push
pusha
pushf
lea
jmp
shld
mov
cmp
push
add
pusha
lea
jmp
xchg
push
push
pushf
popl
sar
bsr
mov
shr
shrd
push
sub
sbb
movsbl
or
push
btc
pushl
clc
or
neg
push
bswap
and
mov
shld
pushf
bswap
rol
add
push
xor
call
call
jmp
call
call
jmp
mov
jmp
jmp
bts
mov
cmc
test
and
pushf
cmp
push
pusha
push
lea
jne
bts
movzbw
btc
btc
xorb
call
pusha
pusha
pushf
mov
pushf
not
jmp
pusha
dec
pusha
pushf
mov
pushf
mov
pushf
pushf
dec
call
call
add
call
jmp
jmp
mov
mov
pushf
shl
ror
push
neg
push
jmp
jmp
jmp
mov
mov
pusha
pushf
push
lea
jmp
add
push
jmp
shr
shl
mov
pusha
clc
call
bt
pushl
add
cmc
clc
cmp
test
add
pusha
mov
jmp
pushf
pushf
popl
jmp
push
pushl
popl
pusha
push
lea
jmp
pushf
popl
xadd
mov
xchg
xchg
shrd
test
mov
lea
cmc
mov
sbb
btc
xor
pushl
popl
shl
movl
clc
bsf
bts
mov
movzbl
shl
bswap
inc
add
bsf
bsf
xor
shld
bts
shl
lea
sub
jno
pusha
sub
push
pushf
mov
pushf
lea
jmp
jmp
pushf
call
add
add
xor
btc
lea
clc
pusha
cmc
cmp
sub
pushf
lea
jmp
mov
jmp
pushf
pushf
popl
pushl
pushl
popl
movw
mov
lea
jmp
mov
movw
pusha
push
call
movw
movb
mul
mov
call
not
pushf
popl
adc
dec
sbb
mov
add
mov
shr
mov
lea
add
call
pushf
cmc
add
bt
cmp
cmc
pusha
pushl
popf
pushl
mov
pushl
push
lea
jmp
jp
sbb
and
shl
mov
pushf
rol
and
mov
pusha
jmp
pushf
popl
push
call
mov
movsbw
pusha
mov
movzbl
pushf
popl
jmp
push
push
dec
movb
pushl
lea
jmp
pushf
popl
jmp
sar
add
bt
and
mov
rol
test
mov
test
stc
clc
stc
sub
stc
pusha
shl
mov
movw
pushf
jmp
stc
rcr
neg
inc
mov
pushf
add
lea
inc
clc
xor
lea
cmp
shr
movsbl
mov
ja
pusha
shl
pusha
cmc
cmp
shr
cmp
pushf
pushf
or
push
xor
jmp
call
push
pushf
pushl
popl
pushf
pushf
push
pushl
lea
jmp
pushf
pushl
popl
movb
pushl
pusha
mov
lea
jmp
stc
shr
mov
das
mov
push
mov
pushf
pusha
add
push
call
pushf
mov
pushf
pushl
pushf
lea
jmp
add
or
mov
btr
mov
xor
pusha
btc
lea
mov
clc
stc
movw
sub
push
pusha
lea
jmp
rol
cwtl
rdtsc
jmp
stc
cmp
sub
bt
jmp
pushf
pushf
mov
movb
movw
mov
lea
jmp
mov
push
push
call
movzbw
pusha
mov
jmp
pushf
popl
pusha
push
pushl
popl
pushf
movb
lea
jmp
call
movzbw
mov
call
shrd
push
rcr
push
lea
sub
bt
pushl
clc
ror
push
rol
shld
not
sar
mov
mov
bswap
neg
bsr
add
lea
cmp
xor
pushf
bsf
bts
inc
lea
cmp
sub
push
push
push
lea
jmp
pushl
popl
mov
movb
mov
mov
lea
jmp
cmc
sub
cmp
sub
cmc
cmc
bt
sub
pusha
push
pushf
call
call
lea
je
test
cmc
bt
xor
cmp
xchg
jmp
bswap
setb
inc
pusha
clc
ror
add
call
jmp
sub
jne
test
jne
mov
add
add
fdivs
mov
jne
je
jne
or
fdivs
jle
jne
inc
sti
jne
fs
jne
addr16
jbe
mov
in
jne
in
jne
imul
jne
sub
jne
in
jne
jne
jne
addr16
jne
mov
jne
je
jne
mov
jne
mov
in
jne
or
in
jne
es
adc
jne
mov
jne
sub
jne
cld
jne
or
std
jne
or
std
jne
cld
jne
mov
jne
loope
add
add
add
jne
imul
jne
or
loope
add
push
jbe
cld
jne
lods
jne
je
jne
fiadds
add
std
jne
es
ja
jne
lods
clc
jne
test
jne
or
in
jne
addr16
jne
mov
jne
lret
add
add
cli
jne
shl
jne
add
jne
addr16
jne
lods
jne
in
jne
lret
add
add
loope
add
jne
sbb
jbe
shl
jne
cmp
jne
cli
jne
std
ljmp
inc
sti
jne
fs
jne
es
loopne
jne
or
fidivs
shl
jne
add
jne
mov
jne
ja
jne
sub
jne
rcr
jne
or
jne
inc
clc
jne
sub
jne
lret
add
add
push
jbe
sub
jne
jmp
jne
cmp
jne
lods
jne
addr16
jne
je
jne
cmp
jne
sbb
jbe
cmp
jne
inc
sti
jne
inc
sti
jne
sub
jne
jne
jne
in
jne
or
fidivs
lods
clc
jne
cmp
jne
imul
jne
movsb
loop
add
add
in
jne
rcr
jne
mov
jne
shl
jne
jle
jne
mov
jne
or
in
add
add
add
out
jne
or
clc
jne
data16
jne
dec
std
jne
mov
mov
lock
mov
in
jne
sbb
jbe
loope
add
jne
sub
jne
data16
jne
sub
jne
mov
jne
ja
jne
dec
std
jne
test
jne
sub
jne
lods
icebp
jne
mov
cli
jne
mov
jmp
add
push
jbe
add
jne
sub
jne
loope
add
cli
jne
adc
jne
addr16
jne
mov
jne
sahf
loopne
add
ljmp
mov
fidivl
imul
add
jmp
jne
imul
add
jmp
jne
imul
add
jmp
jne
imul
add
jmp
jne
imul
add
jmp
jne
imul
add
jmp
jne
imul
add
jmp
jne
imul
add
jmp
jne
lods
clc
jne
cld
jne
test
jne
jle
jne
movsb
loop
add
cli
jne
mov
jne
jne
lods
icebp
jne
loope
add
bnd
shl
jne
sub
jne
loope
add
jne
jne
sbb
jbe
mov
out
jne
lods
icebp
jne
mov
jmp
add
jne
sbb
jbe
sahf
loopne
add
jne
cmc
add
add
jne
jle
jne
je
jne
mov
icebp
jne
addr16
jne
ja
jne
sbb
jbe
es
cld
jne
dec
std
jne
shl
jne
lods
jne
cmp
jne
jle
jne
loope
add
out
add
jne
fiadds
add
jne
jne
pushf
jmp
pusha
pushf
popl
pusha
pushl
popl
mov
lea
jmp
push
shrd
mov
bt
mov
test
cmp
not
test
not
bt
bt
push
sub
call
sbb
shl
inc
rol
mov
call
shr
notl
je
shl
mov
call
sbb
test
shl
push
mov
call
bt
clc
stc
sub
jmp
pushf
popl
bts
mov
xchg
bswap
bswap
pop
mov
cmp
clc
xchg
shl
mov
sbb
sbb
xor
pushl
popl
xor
xadd
movl
clc
bsr
pusha
or
mov
stc
sbb
bswap
rcr
add
inc
sub
xor
xor
shl
neg
btr
lea
cmc
sub
pushf
mov
lea
jmp
movw
mov
movb
pushf
popl
push
jmp
pushl
stc
jmp
call
mov
pushf
pushf
mov
pushl
lea
jmp
ror
mov
not
shl
rol
mov
pushf
cmp
sub
pusha
div
pushf
jmp
sub
clc
pusha
movsbw
movzbl
xor
clc
shld
add
push
movsbw
pusha
dec
sub
btc
dec
shld
add
rcl
rol
bswap
shl
add
shrd
rol
xor
add
bsr
mov
bt
test
pushf
bt
add
push
call
